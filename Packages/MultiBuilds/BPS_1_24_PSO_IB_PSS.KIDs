KIDS Distribution saved on Nov 29, 2018@11:01:46
BPS PSO IB PSS BUNDLE 12.0
**KIDS**:BPS PSO IB PSS BUNDLE 12.0^BPS*1.0*24^PSO*7.0*512^IB*2.0*617^PSS*1.0*214^

**INSTALL NAME**
BPS PSO IB PSS BUNDLE 12.0
"BLD",10867,0)
BPS PSO IB PSS BUNDLE 12.0^^1^3181129^y
"BLD",10867,1,0)
^^1^1^3180306^
"BLD",10867,1,1,0)
BPS PSO IB PSS BUNDLE 12.0
"BLD",10867,6.3)
43
"BLD",10867,10,0)
^9.63^4^4
"BLD",10867,10,1,0)
BPS*1.0*24^1
"BLD",10867,10,2,0)
PSO*7.0*512^1
"BLD",10867,10,3,0)
IB*2.0*617^1
"BLD",10867,10,4,0)
PSS*1.0*214^1
"BLD",10867,10,"B","BPS*1.0*24",1)

"BLD",10867,10,"B","IB*2.0*617",3)

"BLD",10867,10,"B","PSO*7.0*512",2)

"BLD",10867,10,"B","PSS*1.0*214",4)

"BLD",10867,"KRN",0)
^9.67PA^779.2^20
"BLD",10867,"KRN",.4,0)
.4
"BLD",10867,"KRN",.401,0)
.401
"BLD",10867,"KRN",.402,0)
.402
"BLD",10867,"KRN",.403,0)
.403
"BLD",10867,"KRN",.5,0)
.5
"BLD",10867,"KRN",.84,0)
.84
"BLD",10867,"KRN",3.6,0)
3.6
"BLD",10867,"KRN",3.8,0)
3.8
"BLD",10867,"KRN",9.2,0)
9.2
"BLD",10867,"KRN",9.8,0)
9.8
"BLD",10867,"KRN",19,0)
19
"BLD",10867,"KRN",19.1,0)
19.1
"BLD",10867,"KRN",101,0)
101
"BLD",10867,"KRN",409.61,0)
409.61
"BLD",10867,"KRN",771,0)
771
"BLD",10867,"KRN",779.2,0)
779.2
"BLD",10867,"KRN",870,0)
870
"BLD",10867,"KRN",8989.51,0)
8989.51
"BLD",10867,"KRN",8989.52,0)
8989.52
"BLD",10867,"KRN",8994,0)
8994
"BLD",10867,"KRN","B",.4,.4)

"BLD",10867,"KRN","B",.401,.401)

"BLD",10867,"KRN","B",.402,.402)

"BLD",10867,"KRN","B",.403,.403)

"BLD",10867,"KRN","B",.5,.5)

"BLD",10867,"KRN","B",.84,.84)

"BLD",10867,"KRN","B",3.6,3.6)

"BLD",10867,"KRN","B",3.8,3.8)

"BLD",10867,"KRN","B",9.2,9.2)

"BLD",10867,"KRN","B",9.8,9.8)

"BLD",10867,"KRN","B",19,19)

"BLD",10867,"KRN","B",19.1,19.1)

"BLD",10867,"KRN","B",101,101)

"BLD",10867,"KRN","B",409.61,409.61)

"BLD",10867,"KRN","B",771,771)

"BLD",10867,"KRN","B",779.2,779.2)

"BLD",10867,"KRN","B",870,870)

"BLD",10867,"KRN","B",8989.51,8989.51)

"BLD",10867,"KRN","B",8989.52,8989.52)

"BLD",10867,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.2
**INSTALL NAME**
BPS*1.0*24
"BLD",10863,0)
BPS*1.0*24^E CLAIMS MGMT ENGINE^0^3181129^y
"BLD",10863,1,0)
^^1^1^3180305^
"BLD",10863,1,1,0)
MCCF EDI TAS EPHARMACY BUILDS 5 & 6
"BLD",10863,4,0)
^9.64PA^9002313.59^11
"BLD",10863,4,9002313.02,0)
9002313.02
"BLD",10863,4,9002313.02,2,0)
^9.641^9002313.0201^2
"BLD",10863,4,9002313.02,2,9002313.0201,0)
TRANSACTIONS  (sub-file)
"BLD",10863,4,9002313.02,2,9002313.0201,1,0)
^9.6411^2263^25
"BLD",10863,4,9002313.02,2,9002313.0201,1,2147,0)
OTHER PAYER PROGRAM TYPE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2149,0)
OTHER PAYER RECONCILIATION ID
"BLD",10863,4,9002313.02,2,9002313.0201,1,2150,0)
BENEFIT STAGE INDICATOR COUNT
"BLD",10863,4,9002313.02,2,9002313.0201,1,2151,0)
BENEFIT STAGE INDICATOR
"BLD",10863,4,9002313.02,2,9002313.0201,1,2160,0)
COMPOUND LEVEL OF COMPLEXITY
"BLD",10863,4,9002313.02,2,9002313.0201,1,2190,0)
LTPAC BILLING METHODOLOGY
"BLD",10863,4,9002313.02,2,9002313.0201,1,2191,0)
LTPAC DISPENSE FREQUENCY
"BLD",10863,4,9002313.02,2,9002313.0201,1,2192,0)
NUMBER OF LTPAC DISPENSING EVE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2198,0)
PREPARATION ENVIRONMENT CODE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2199,0)
PREPARATION ENVIRONMENT TYPE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2201,0)
PRESCRIBER DEA NUMBER
"BLD",10863,4,9002313.02,2,9002313.0201,1,2202,0)
TOTAL PRESCRIBED QUANTITY RE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2214,0)
SUBROGATION AMOUNT REQUESTED
"BLD",10863,4,9002313.02,2,9002313.0201,1,2216,0)
SUBMISSION TYPE CODE COUNT
"BLD",10863,4,9002313.02,2,9002313.0201,1,2217,0)
SUBMISSION TYPE CODE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2218,0)
DO NOT DISPENSE BEFORE DATE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2221,0)
MULTIPLE RX/SVC GROUP ID
"BLD",10863,4,9002313.02,2,9002313.0201,1,2222,0)
MULTI RX/SVC GROUP REASON CODE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2251,0)
OTHER PAYR TAX EXEMPT INDICATR
"BLD",10863,4,9002313.02,2,9002313.0201,1,2252,0)
OTHER PAYR FEE EXMPT INDICATR
"BLD",10863,4,9002313.02,2,9002313.0201,1,2253,0)
OTHER PAYR FEE TYPE COUNT
"BLD",10863,4,9002313.02,2,9002313.0201,1,2257,0)
PRESCRIBER PLACE OF SERVICE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2260,0)
REGULATORY FEE COUNT
"BLD",10863,4,9002313.02,2,9002313.0201,1,2261,0)
REGULATORY FEE TYPE CODE
"BLD",10863,4,9002313.02,2,9002313.0201,1,2263,0)
OTHER PAYER FEE TYPE CODE
"BLD",10863,4,9002313.02,2,9002313.0401,0)
COB OTHER PAYMENTS  (sub-file)
"BLD",10863,4,9002313.02,2,9002313.0401,1,0)
^9.6411^2149^1
"BLD",10863,4,9002313.02,2,9002313.0401,1,2149,0)
OTHER PAYER RECONCILIATION ID
"BLD",10863,4,9002313.02,222)
y^n^p^^^^n^^n
"BLD",10863,4,9002313.02,224)

"BLD",10863,4,9002313.03,0)
9002313.03
"BLD",10863,4,9002313.03,2,0)
^9.641^9002313.0301^1
"BLD",10863,4,9002313.03,2,9002313.0301,0)
RESPONSES  (sub-file)
"BLD",10863,4,9002313.03,2,9002313.0301,1,0)
^9.6411^2262^55
"BLD",10863,4,9002313.03,2,9002313.0301,1,931,0)
MAXIMUM AGE QUALIFIER
"BLD",10863,4,9002313.03,2,9002313.0301,1,932,0)
MAXIMUM AGE
"BLD",10863,4,9002313.03,2,9002313.0301,1,933,0)
MAXIMUM AMOUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,934,0)
MAXIMUM AMOUNT QUALIFIER
"BLD",10863,4,9002313.03,2,9002313.0301,1,935,0)
MAXIMUM AMOUNT TIME PERIOD
"BLD",10863,4,9002313.03,2,9002313.0301,1,936,0)
MAX AMT TIME PERIOD START DATE
"BLD",10863,4,9002313.03,2,9002313.0301,1,937,0)
MAX AMT TIME PERIOD END DATE
"BLD",10863,4,9002313.03,2,9002313.0301,1,938,0)
MAX AMT TIME PERIOD UNITS
"BLD",10863,4,9002313.03,2,9002313.0301,1,943,0)
MINIMUM AGE QUALIFIER
"BLD",10863,4,9002313.03,2,9002313.0301,1,944,0)
MINIMUM AGE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2147,0)
OTHER PAYER PROGRAM TYPE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2150,0)
BENEFIT STAGE INDICATOR COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2151,0)
BENEFIT STAGE INDICATOR
"BLD",10863,4,9002313.03,2,9002313.0301,1,2158,0)
BENEFIT TYPE OPPORTUNITY
"BLD",10863,4,9002313.03,2,9002313.0301,1,2159,0)
BENEFIT TYPE OPPORTUNITY COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2166,0)
HELP DESK BUS UNIT TYPE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2167,0)
HELP DESK BUS UNIT TYPE COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2168,0)
HELP DESK CONTACT INFORMATION
"BLD",10863,4,9002313.03,2,9002313.0301,1,2169,0)
HELP DESK CONTACT INFO EXT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2170,0)
HELP DESK CONTACT INFO QUAL
"BLD",10863,4,9002313.03,2,9002313.0301,1,2171,0)
HELP DESK SUPPORT TYPE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2172,0)
HELP DESK SUPPORT TYPE COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2180,0)
INTERMEDIARY HELP DESK TYPE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2181,0)
INTERMEDIARY HLPDSK BUS COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2182,0)
INTERMEDIARY HLPDSK CONTACT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2183,0)
INTERMEDIARY HLPDSK EXTENSION
"BLD",10863,4,9002313.03,2,9002313.0301,1,2184,0)
INTERMEDIARY HLPDSK QUALIFIER
"BLD",10863,4,9002313.03,2,9002313.0301,1,2185,0)
INTERMEDIARY HLPDSK SUPPT TYPE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2186,0)
INTERMEDIARY HLPDSK TYP COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2193,0)
PATIENT PAY COMPONENT AMOUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2194,0)
PATIENT PAY COMPONENT COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2195,0)
PATIENT PAY COMPONENT QUAL
"BLD",10863,4,9002313.03,2,9002313.0301,1,2196,0)
PAYER/HEALTH PLAN ID COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2215,0)
SUBROGTN REQUESTR RECONCIL ID
"BLD",10863,4,9002313.03,2,9002313.0301,1,2219,0)
MINIMUM AMOUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2220,0)
MINIMUM AMOUNT QUALIFIER
"BLD",10863,4,9002313.03,2,9002313.0301,1,2223,0)
OTHER PAYER NAME
"BLD",10863,4,9002313.03,2,9002313.0301,1,2224,0)
REMAINING AMOUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2225,0)
REMAINING AMOUNT QUALIFIER
"BLD",10863,4,9002313.03,2,9002313.0301,1,2241,0)
OTHER PAYER RELATIONSHIP TYPE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2242,0)
FORMULARY ALT BENEFIT TIER
"BLD",10863,4,9002313.03,2,9002313.0301,1,2243,0)
FORMULARY ALT REASON CODE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2244,0)
FORMULRY ALT REQ THERAPY COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2245,0)
FORMULRY ALT THERAPY INDICATOR
"BLD",10863,4,9002313.03,2,9002313.0301,1,2246,0)
FORMULRY ALT THERAPY TIME QUAL
"BLD",10863,4,9002313.03,2,9002313.0301,1,2247,0)
FORMULRY ALT THERAPY DURATION
"BLD",10863,4,9002313.03,2,9002313.0301,1,2248,0)
FORMULRY ALT THERAPY START DT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2249,0)
FORMULRY ALT THERAPY END DATE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2250,0)
OTHER PAYER BENEFIT CLASS
"BLD",10863,4,9002313.03,2,9002313.0301,1,2254,0)
PLAN OVERRIDE INDICATOR
"BLD",10863,4,9002313.03,2,9002313.0301,1,2255,0)
PLAN OVERRIDE VALUE COUNT
"BLD",10863,4,9002313.03,2,9002313.0301,1,2256,0)
PLAN BENEFIT OVERRIDE VALUE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2261,0)
REGULATORY FEE TYPE CODE
"BLD",10863,4,9002313.03,2,9002313.0301,1,2262,0)
REGULATORY FEE EXMPT INDICATOR
"BLD",10863,4,9002313.03,2,9002313.0301,1,2265,0)
PATIENT REGULATORY FEE AMOUNT
"BLD",10863,4,9002313.03,222)
y^n^p^^^^n^^n
"BLD",10863,4,9002313.03,224)

"BLD",10863,4,9002313.32,0)
9002313.32
"BLD",10863,4,9002313.32,2,0)
^9.641^9002313.32^1
"BLD",10863,4,9002313.32,2,9002313.32,0)
BPS PAYER RESPONSE OVERRIDES  (File-top level)
"BLD",10863,4,9002313.32,2,9002313.32,1,0)
^9.6411^4.2^20
"BLD",10863,4,9002313.32,2,9002313.32,1,4.01,0)
MAXIMUM AGE QUALIFIER
"BLD",10863,4,9002313.32,2,9002313.32,1,4.02,0)
MAXIMUM AGE
"BLD",10863,4,9002313.32,2,9002313.32,1,4.03,0)
MAXIMUM AMOUNT
"BLD",10863,4,9002313.32,2,9002313.32,1,4.04,0)
MAXIMUM AMOUNT QUALIFIER
"BLD",10863,4,9002313.32,2,9002313.32,1,4.05,0)
MAXIMUM AMOUNT TIME PERIOD
"BLD",10863,4,9002313.32,2,9002313.32,1,4.06,0)
MAX AMT TIME PERIOD START DATE
"BLD",10863,4,9002313.32,2,9002313.32,1,4.07,0)
MAX AMT TIME PERIOD END DATE
"BLD",10863,4,9002313.32,2,9002313.32,1,4.08,0)
MAX AMT TIME PERIOD UNITS
"BLD",10863,4,9002313.32,2,9002313.32,1,4.09,0)
MINIMUM AGE QUALIFIER
"BLD",10863,4,9002313.32,2,9002313.32,1,4.1,0)
MINIMUM AGE
"BLD",10863,4,9002313.32,2,9002313.32,1,4.11,0)
OTHER PAYER PROGRAM TYPE
"BLD",10863,4,9002313.32,2,9002313.32,1,4.12,0)
PATIENT PAY COMPONENT AMOUNT
"BLD",10863,4,9002313.32,2,9002313.32,1,4.13,0)
PATIENT PAY COMPONENT COUNT
"BLD",10863,4,9002313.32,2,9002313.32,1,4.14,0)
PATIENT PAY COMPONENT QUAL
"BLD",10863,4,9002313.32,2,9002313.32,1,4.15,0)
MINIMUM AMOUNT
"BLD",10863,4,9002313.32,2,9002313.32,1,4.16,0)
MINIMUM AMOUNT QUALIFIER
"BLD",10863,4,9002313.32,2,9002313.32,1,4.17,0)
OTHER PAYER NAME
"BLD",10863,4,9002313.32,2,9002313.32,1,4.18,0)
REMAINING AMOUNT
"BLD",10863,4,9002313.32,2,9002313.32,1,4.19,0)
REMAINING AMOUNT QUALIFIER
"BLD",10863,4,9002313.32,2,9002313.32,1,4.2,0)
OTHER PAYER RELATIONSHIP TYPE
"BLD",10863,4,9002313.32,222)
y^y^p^^^^n^^n
"BLD",10863,4,9002313.32,224)

"BLD",10863,4,9002313.34,0)
9002313.34
"BLD",10863,4,9002313.34,222)
y^y^f^^n^^y^o^n
"BLD",10863,4,9002313.35,0)
9002313.35
"BLD",10863,4,9002313.35,222)
y^y^f^^n^^y^o^n
"BLD",10863,4,9002313.36,0)
9002313.36
"BLD",10863,4,9002313.36,222)
y^y^f^^n^^y^o^n
"BLD",10863,4,9002313.37,0)
9002313.37
"BLD",10863,4,9002313.37,222)
y^y^f^^n^^y^o^n
"BLD",10863,4,9002313.38,0)
9002313.38
"BLD",10863,4,9002313.38,222)
y^y^f^^n^^y^o^n
"BLD",10863,4,9002313.59,0)
9002313.59
"BLD",10863,4,9002313.59,2,0)
^9.641^9002313.5914^1
"BLD",10863,4,9002313.59,2,9002313.5914,0)
COB OTHER PAYERS  (sub-file)
"BLD",10863,4,9002313.59,2,9002313.5914,1,0)
^9.6411^.11^1
"BLD",10863,4,9002313.59,2,9002313.5914,1,.11,0)
OTHER PAYER RECONCILIATION ID
"BLD",10863,4,9002313.59,222)
y^n^p^^^^n^^n
"BLD",10863,4,9002313.59,224)

"BLD",10863,4,9002313.77,0)
9002313.77
"BLD",10863,4,9002313.77,2,0)
^9.641^9002313.778^1
"BLD",10863,4,9002313.77,2,9002313.778,0)
COB OTHER PAYERS  (sub-file)
"BLD",10863,4,9002313.77,2,9002313.778,1,0)
^9.6411^.11^1
"BLD",10863,4,9002313.77,2,9002313.778,1,.11,0)
OTHER PAYER RECONCILIATION ID
"BLD",10863,4,9002313.77,222)
y^n^p^^^^n^^n
"BLD",10863,4,9002313.77,224)

"BLD",10863,4,9002313.91,0)
9002313.91
"BLD",10863,4,9002313.91,222)
y^y^f^^n^^y^o^n
"BLD",10863,4,"APDD",9002313.02,9002313.0201)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2147)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2149)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2150)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2151)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2160)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2190)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2191)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2192)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2198)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2199)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2201)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2202)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2214)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2216)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2217)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2218)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2221)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2222)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2251)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2252)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2253)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2257)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2260)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2261)

"BLD",10863,4,"APDD",9002313.02,9002313.0201,2263)

"BLD",10863,4,"APDD",9002313.02,9002313.0401)

"BLD",10863,4,"APDD",9002313.02,9002313.0401,2149)

"BLD",10863,4,"APDD",9002313.03,9002313.0301)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,931)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,932)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,933)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,934)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,935)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,936)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,937)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,938)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,943)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,944)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2147)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2150)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2151)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2158)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2159)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2166)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2167)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2168)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2169)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2170)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2171)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2172)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2180)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2181)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2182)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2183)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2184)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2185)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2186)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2193)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2194)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2195)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2196)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2215)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2219)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2220)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2223)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2224)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2225)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2241)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2242)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2243)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2244)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2245)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2246)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2247)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2248)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2249)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2250)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2254)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2255)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2256)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2261)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2262)

"BLD",10863,4,"APDD",9002313.03,9002313.0301,2265)

"BLD",10863,4,"APDD",9002313.32,9002313.32)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.01)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.02)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.03)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.04)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.05)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.06)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.07)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.08)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.09)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.1)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.11)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.12)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.13)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.14)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.15)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.16)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.17)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.18)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.19)

"BLD",10863,4,"APDD",9002313.32,9002313.32,4.2)

"BLD",10863,4,"APDD",9002313.59,9002313.5914)

"BLD",10863,4,"APDD",9002313.59,9002313.5914,.11)

"BLD",10863,4,"APDD",9002313.77,9002313.778)

"BLD",10863,4,"APDD",9002313.77,9002313.778,.11)

"BLD",10863,4,"B",9002313.02,9002313.02)

"BLD",10863,4,"B",9002313.03,9002313.03)

"BLD",10863,4,"B",9002313.32,9002313.32)

"BLD",10863,4,"B",9002313.34,9002313.34)

"BLD",10863,4,"B",9002313.35,9002313.35)

"BLD",10863,4,"B",9002313.36,9002313.36)

"BLD",10863,4,"B",9002313.37,9002313.37)

"BLD",10863,4,"B",9002313.38,9002313.38)

"BLD",10863,4,"B",9002313.59,9002313.59)

"BLD",10863,4,"B",9002313.77,9002313.77)

"BLD",10863,4,"B",9002313.91,9002313.91)

"BLD",10863,6.3)
43
"BLD",10863,"INI")
PRE^BPS24PRE
"BLD",10863,"INIT")

"BLD",10863,"KRN",0)
^9.67PA^779.2^20
"BLD",10863,"KRN",.4,0)
.4
"BLD",10863,"KRN",.401,0)
.401
"BLD",10863,"KRN",.402,0)
.402
"BLD",10863,"KRN",.403,0)
.403
"BLD",10863,"KRN",.5,0)
.5
"BLD",10863,"KRN",.84,0)
.84
"BLD",10863,"KRN",3.6,0)
3.6
"BLD",10863,"KRN",3.8,0)
3.8
"BLD",10863,"KRN",9.2,0)
9.2
"BLD",10863,"KRN",9.8,0)
9.8
"BLD",10863,"KRN",9.8,"NM",0)
^9.68A^35^29
"BLD",10863,"KRN",9.8,"NM",5,0)
BPSRPT0^^0^B79756869
"BLD",10863,"KRN",9.8,"NM",6,0)
BPSRPT1^^0^B84866228
"BLD",10863,"KRN",9.8,"NM",7,0)
BPSRPT3^^0^B233518281
"BLD",10863,"KRN",9.8,"NM",8,0)
BPSRPT3A^^0^B77149727
"BLD",10863,"KRN",9.8,"NM",9,0)
BPSRPT4^^0^B209178587
"BLD",10863,"KRN",9.8,"NM",10,0)
BPSRPT5^^0^B178163629
"BLD",10863,"KRN",9.8,"NM",11,0)
BPSRPT7^^0^B189873408
"BLD",10863,"KRN",9.8,"NM",12,0)
BPSRPT8^^0^B176758027
"BLD",10863,"KRN",9.8,"NM",13,0)
BPSSCRCU^^0^B9850835
"BLD",10863,"KRN",9.8,"NM",14,0)
BPSSCRL1^^0^B76871633
"BLD",10863,"KRN",9.8,"NM",15,0)
BPSPSOU1^^0^B15624922
"BLD",10863,"KRN",9.8,"NM",16,0)
BPSRES^^0^B192744761
"BLD",10863,"KRN",9.8,"NM",17,0)
BPSRES1^^0^B55933378
"BLD",10863,"KRN",9.8,"NM",18,0)
BPSSCRLG^^0^B132775345
"BLD",10863,"KRN",9.8,"NM",19,0)
BPSBUTL^^0^B141492794
"BLD",10863,"KRN",9.8,"NM",20,0)
BPSECX0^^0^B42203811
"BLD",10863,"KRN",9.8,"NM",21,0)
BPSFLD01^^0^B17444008
"BLD",10863,"KRN",9.8,"NM",22,0)
BPSOSCD^^0^B107538123
"BLD",10863,"KRN",9.8,"NM",23,0)
BPSOSCE^^0^B16490040
"BLD",10863,"KRN",9.8,"NM",24,0)
BPSOSHF^^0^B46124241
"BLD",10863,"KRN",9.8,"NM",25,0)
BPSOSRX3^^0^B125814788
"BLD",10863,"KRN",9.8,"NM",26,0)
BPSOSSG^^0^B40022062
"BLD",10863,"KRN",9.8,"NM",27,0)
BPSPRRX3^^0^B135138872
"BLD",10863,"KRN",9.8,"NM",28,0)
BPSPRRX6^^0^B127755081
"BLD",10863,"KRN",9.8,"NM",29,0)
BPSTEST^^0^B101618182
"BLD",10863,"KRN",9.8,"NM",30,0)
BPSTEST2^^0^B99644333
"BLD",10863,"KRN",9.8,"NM",31,0)
BPSNCPD4^^0^B43404653
"BLD",10863,"KRN",9.8,"NM",34,0)
BPSSCRN0^^0^B23164009
"BLD",10863,"KRN",9.8,"NM",35,0)
BPSOSRX^^0^B39970761
"BLD",10863,"KRN",9.8,"NM","B","BPSBUTL",19)

"BLD",10863,"KRN",9.8,"NM","B","BPSECX0",20)

"BLD",10863,"KRN",9.8,"NM","B","BPSFLD01",21)

"BLD",10863,"KRN",9.8,"NM","B","BPSNCPD4",31)

"BLD",10863,"KRN",9.8,"NM","B","BPSOSCD",22)

"BLD",10863,"KRN",9.8,"NM","B","BPSOSCE",23)

"BLD",10863,"KRN",9.8,"NM","B","BPSOSHF",24)

"BLD",10863,"KRN",9.8,"NM","B","BPSOSRX",35)

"BLD",10863,"KRN",9.8,"NM","B","BPSOSRX3",25)

"BLD",10863,"KRN",9.8,"NM","B","BPSOSSG",26)

"BLD",10863,"KRN",9.8,"NM","B","BPSPRRX3",27)

"BLD",10863,"KRN",9.8,"NM","B","BPSPRRX6",28)

"BLD",10863,"KRN",9.8,"NM","B","BPSPSOU1",15)

"BLD",10863,"KRN",9.8,"NM","B","BPSRES",16)

"BLD",10863,"KRN",9.8,"NM","B","BPSRES1",17)

"BLD",10863,"KRN",9.8,"NM","B","BPSRPT0",5)

"BLD",10863,"KRN",9.8,"NM","B","BPSRPT1",6)

"BLD",10863,"KRN",9.8,"NM","B","BPSRPT3",7)

"BLD",10863,"KRN",9.8,"NM","B","BPSRPT3A",8)

"BLD",10863,"KRN",9.8,"NM","B","BPSRPT4",9)

"BLD",10863,"KRN",9.8,"NM","B","BPSRPT5",10)

"BLD",10863,"KRN",9.8,"NM","B","BPSRPT7",11)

"BLD",10863,"KRN",9.8,"NM","B","BPSRPT8",12)

"BLD",10863,"KRN",9.8,"NM","B","BPSSCRCU",13)

"BLD",10863,"KRN",9.8,"NM","B","BPSSCRL1",14)

"BLD",10863,"KRN",9.8,"NM","B","BPSSCRLG",18)

"BLD",10863,"KRN",9.8,"NM","B","BPSSCRN0",34)

"BLD",10863,"KRN",9.8,"NM","B","BPSTEST",29)

"BLD",10863,"KRN",9.8,"NM","B","BPSTEST2",30)

"BLD",10863,"KRN",19,0)
19
"BLD",10863,"KRN",19.1,0)
19.1
"BLD",10863,"KRN",101,0)
101
"BLD",10863,"KRN",101,"NM",0)
^9.68A^^0
"BLD",10863,"KRN",409.61,0)
409.61
"BLD",10863,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",10863,"KRN",771,0)
771
"BLD",10863,"KRN",779.2,0)
779.2
"BLD",10863,"KRN",870,0)
870
"BLD",10863,"KRN",8989.51,0)
8989.51
"BLD",10863,"KRN",8989.52,0)
8989.52
"BLD",10863,"KRN",8994,0)
8994
"BLD",10863,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",10863,"KRN","B",.4,.4)

"BLD",10863,"KRN","B",.401,.401)

"BLD",10863,"KRN","B",.402,.402)

"BLD",10863,"KRN","B",.403,.403)

"BLD",10863,"KRN","B",.5,.5)

"BLD",10863,"KRN","B",.84,.84)

"BLD",10863,"KRN","B",3.6,3.6)

"BLD",10863,"KRN","B",3.8,3.8)

"BLD",10863,"KRN","B",9.2,9.2)

"BLD",10863,"KRN","B",9.8,9.8)

"BLD",10863,"KRN","B",19,19)

"BLD",10863,"KRN","B",19.1,19.1)

"BLD",10863,"KRN","B",101,101)

"BLD",10863,"KRN","B",409.61,409.61)

"BLD",10863,"KRN","B",771,771)

"BLD",10863,"KRN","B",779.2,779.2)

"BLD",10863,"KRN","B",870,870)

"BLD",10863,"KRN","B",8989.51,8989.51)

"BLD",10863,"KRN","B",8989.52,8989.52)

"BLD",10863,"KRN","B",8994,8994)

"BLD",10863,"QUES",0)
^9.62^^
"BLD",10863,"REQB",0)
^9.611^1^1
"BLD",10863,"REQB",1,0)
BPS*1.0*23^2
"BLD",10863,"REQB","B","BPS*1.0*23",1)

"DATA",9002313.34,1,0)
1^PHARMACY
"DATA",9002313.34,2,0)
2^TELEHEALTH
"DATA",9002313.34,3,0)
3^SCHOOL
"DATA",9002313.34,4,0)
4^HOMELESS SHELTER
"DATA",9002313.34,5,0)
5^INDIAN HEALTH SERVICE FREE-STANDING FACILITY
"DATA",9002313.34,6,0)
6^INDIAN HEALTH SERVICE PROVIDER-BASED FACILITY
"DATA",9002313.34,7,0)
7^TRIBAL 638 FREE-STANDING FACILITY
"DATA",9002313.34,8,0)
8^TRIBAL 638 PROVIDER-BASED FACILITY
"DATA",9002313.34,9,0)
9^PRISON/CORRECTIONAL FACILITY
"DATA",9002313.34,11,0)
11^OFFICE
"DATA",9002313.34,12,0)
12^HOME
"DATA",9002313.34,13,0)
13^ASSISTED LIVING FACILITY
"DATA",9002313.34,14,0)
14^GROUP HOME
"DATA",9002313.34,15,0)
15^MOBILE UNIT
"DATA",9002313.34,16,0)
16^TEMPORARY LODGING
"DATA",9002313.34,17,0)
17^WALK-IN RETAIL HEALTH CLINIC
"DATA",9002313.34,18,0)
18^PLACE OF EMPLOYMENT-WORKSITE
"DATA",9002313.34,19,0)
19^OFF CAMPUS-OUTPATIENT HOSPITAL
"DATA",9002313.34,20,0)
20^URGENT CARE FACILITY
"DATA",9002313.34,21,0)
21^INPATIENT HOSPITAL
"DATA",9002313.34,22,0)
22^ON CAMPUS-OUTPATIENT HOSPITAL
"DATA",9002313.34,23,0)
23^EMERGENCY ROOM-HOSPITAL
"DATA",9002313.34,24,0)
24^AMBULATORY SURGICAL CENTER
"DATA",9002313.34,25,0)
25^BIRTHING CENTER
"DATA",9002313.34,26,0)
26^MILITARY TREATMENT FACILITY
"DATA",9002313.34,27,0)
31^SKILLED NURSING FACILITY
"DATA",9002313.34,28,0)
32^NURSING FACILITY
"DATA",9002313.34,29,0)
33^CUSTODIAL CARE FACILITY
"DATA",9002313.34,30,0)
34^HOSPICE
"DATA",9002313.34,31,0)
41^AMBULANCE-LAND
"DATA",9002313.34,32,0)
42^AMBULANCE-AIR OR WATER
"DATA",9002313.34,33,0)
49^INDEPENDENT CLINIC
"DATA",9002313.34,34,0)
50^FEDERALLY QUALIFIED HEALTH CENTER
"DATA",9002313.34,35,0)
51^INPATIENT PSYCHIATRIC FACILITY
"DATA",9002313.34,36,0)
52^PSYCHIATRIC FACILITY-PARTIAL HOSPITALIZATION
"DATA",9002313.34,37,0)
53^COMMUNITY MENTAL HEALTH CENTER
"DATA",9002313.34,38,0)
54^INTERMEDIATE CARE FACILITY/INDIVIDUALS WITH INTELLECTUAL DISABILITIES
"DATA",9002313.34,39,0)
55^RESIDENTIAL SUBSTANCE ABUSE TREATMENT FACILITY
"DATA",9002313.34,40,0)
56^PSYCHIATRIC RESIDENTIAL TREATMENT CENTER
"DATA",9002313.34,41,0)
57^NON-RESIDENTIAL SUBSTANCE ABUSE TREATMENT FACILITY
"DATA",9002313.34,42,0)
60^MASS IMMUNIZATION CENTER
"DATA",9002313.34,43,0)
61^COMPREHENSIVE INPATIENT REHABILITATION FACILITY
"DATA",9002313.34,44,0)
62^COMPREHENSIVE OUTPATIENT REHABILITATION FACILITY
"DATA",9002313.34,45,0)
65^END-STAGE RENAL DISEASE TREATMENT FACILITY
"DATA",9002313.34,46,0)
71^PUBLIC HEALTH CLINIC
"DATA",9002313.34,47,0)
72^RURAL HEALTH CLINIC
"DATA",9002313.34,48,0)
81^INDEPENDENT LABORATORY
"DATA",9002313.34,49,0)
99^OTHER PLACE OF SERVICE
"DATA",9002313.35,1,0)
1^MEDICARE PART D DEDUCTIBLE
"DATA",9002313.35,2,0)
2^MEDICARE PART D INITIAL BENEFIT
"DATA",9002313.35,3,0)
3^MEDICARE PART D COVERAGE GAP
"DATA",9002313.35,4,0)
4^MEDICARE PART D CATASTROPHIC COVERAGE
"DATA",9002313.35,5,0)
50^NOT PAID UNDER PART D, PAID UNDER PART C BENEFIT (FOR MA-PD PLAN)
"DATA",9002313.35,6,0)
61^PART D DRUG NOT PAID BY PART D PLAN BENEFIT, PAID AS OR UNDER A CO-ADMINISTERED BENEFIT ONLY.
"DATA",9002313.35,7,0)
62^NON-PART D/NON-QUALIFIED DRUG NOT PAID BY PART D PLAN BENEFIT. PAID AS OR UNDER A CO-ADMINISTERED BENEFIT ONLY.
"DATA",9002313.35,8,0)
63^NON-PART D/NON-QUALIFIED DRUG NOT PAID BY PART D PLAN BENEFIT. PAID UNDER MEDICAID BENEFIT ONLY OF THE MEDICARE/MEDICAID (MMP) PLAN.
"DATA",9002313.35,9,0)
70^PART D DRUG NOT PAID BY PART D PLAN BENEFIT, PAID BY THE BENEFICIARY UNDER PLAN-SPONSORED NEGOTIATED PRICING.
"DATA",9002313.35,10,0)
80^NON-PART D/NON-QUALIFIED DRUG NOT PAID BY PART D PLAN BENEFIT, HOSPICE BENEFIT, OR ANY OTHER COMPONENT OF MEDICARE; PAID BY THE BENEFICIARY UNDER PLAN-SPONSORED NEGOTIATED PRICING.
"DATA",9002313.35,11,0)
90^ENHANCE OR OTC DRUG (PDE VALUE OF E/O) NOT APPLICABLE TO THE PART D DRUG SPEND, BUT IS COVERED BY THE PART D PLAN.
"DATA",9002313.35,12,0)
51^NOT PAID UNDER PART D, PAID UNDER PART C BENEFIT (FOR MA-PD PLAN). BENEFICIARY IS A QUALIFIED MEDICARE BENEFICIARY-PHARMACY SHOULD NOT ATTEMPT TO COLLECT COST-SHARE, BUT INSTEAD SHOULD ATTEMPT TO BILL COB TO MEDICAID COVERAGE.
"DATA",9002313.36,1,0)
1^MEDICATION DISPENSED IN A DAY-SUPPLY INCREMENT EQUAL TO THE BILLED DAYS SUPPLY
"DATA",9002313.36,2,0)
2^7 DAYS - DISPENSES MEDICATION IN 7-DAY SUPPLIES
"DATA",9002313.36,3,0)
3^4 DAYS - DISPENSES MEDICATION IN 4-DAY SUPPLIES
"DATA",9002313.36,4,0)
4^3 DAYS - DISPENSES MEDICATION IN 3-DAY SUPPLIES
"DATA",9002313.36,5,0)
5^2 DAYS - DISPENSES MEDICATION IN 2-DAY SUPPLIES
"DATA",9002313.36,6,0)
6^1 DAY - DISPENSES MEDICATION IN 1-DAY SUPPLIES
"DATA",9002313.36,7,0)
7^4-3 DAYS - DISPENSES MEDICATION IN 4-DAY, THEN 3-DAY SUPPLIES
"DATA",9002313.36,8,0)
8^2-2-3 DAYS - DISPENSES MEDICATION IN 2-DAY, THEN 2-DAY, THEN 3-DAY SUPPLIES
"DATA",9002313.36,9,0)
9^DAILY AND 3-DAY WEEKEND - DISPENSED DAILY DURING THE WEEK AND COMBINES MULTIPLE DAYS DISPENSING FOR WEEKENDS
"DATA",9002313.36,10,0)
10^PER SHIFT DISPENSING (MULTIPLE MED PASSES)
"DATA",9002313.36,11,0)
11^PER MED PASS DISPENSING
"DATA",9002313.36,12,0)
12^PRN ON DEMAND
"DATA",9002313.36,13,0)
13^7-DAY OR LESS CYCLE NOT OTHERWISE REPRESENTED
"DATA",9002313.36,14,0)
14^14 DAYS DISPENSING - DISPENSES MEDICATION IN 14-DAY SUPPLIES
"DATA",9002313.36,15,0)
15^8-14-DAY DISPENSING CYCLE NOT OTHERWISE REPRESENTED
"DATA",9002313.37,1,0)
1^AMOUNT APPLIED TO PERIODIC DEDUCTIBLE
"DATA",9002313.37,2,0)
2^AMOUNT ATTRIBUTED TO PRODUCT SELECTION/BRAND DRUG
"DATA",9002313.37,3,0)
3^AMOUNT ATTRIBUTED TO PERCENTAGE TAX
"DATA",9002313.37,4,0)
4^AMOUNT EXCEEDING PERIODIC BENEFIT MAXIMUM
"DATA",9002313.37,5,0)
5^AMOUNT OF COPAY
"DATA",9002313.37,6,0)
7^AMOUNT OF COINSURANCE
"DATA",9002313.37,7,0)
8^AMOUNT ATTRIBUTED TO PRODUCT SELECTION/NON-PREFERRED FORMULARY SELECTION
"DATA",9002313.37,8,0)
9^AMOUNT ATTRIBUTED TO HEALTH PLAN ASSISTANCE AMOUNT
"DATA",9002313.37,9,0)
10^AMOUNT ATTRIBUTED TO PROVIDER NETWORK SELECTION
"DATA",9002313.37,10,0)
11^AMOUNT ATTRIBUTED TO PRODUCT SELECTION/BRAND NON-PREFERRED FORMULARY SELECTION
"DATA",9002313.37,11,0)
12^AMOUNT ATTRIBUTED TO COVERAGE GAP
"DATA",9002313.37,12,0)
13^AMOUNT ATTRIBUTED TO PROCESSOR FEE
"DATA",9002313.37,13,0)
14^AMOUNT ATTRIBUTED TO GRACE PERIOD
"DATA",9002313.37,14,0)
15^AMOUNT ATTRIBUTED TO CATASTROPHIC BENEFIT
"DATA",9002313.37,15,0)
16^AMOUNT ATTRIBUTED TO UNBALANCED PATIENT PAY OPPRA
"DATA",9002313.37,16,0)
17^AMOUNT ATTRIBUTED TO REGULATORY FEE
"DATA",9002313.38,1,0)
0^CASH
"DATA",9002313.38,2,0)
1^MEDICAID TITLE XIX
"DATA",9002313.38,3,0)
2^MEDICARE
"DATA",9002313.38,4,0)
3^COMMERCIAL
"DATA",9002313.38,5,0)
4^WORKERS COMPENSATION
"DATA",9002313.38,6,0)
5^SELF-PAY: DISCOUNT PROGRAM
"DATA",9002313.38,7,0)
6^MANUFACTURER SPONSORED PATIENT PAY REDUCTION PROGRAM
"DATA",9002313.38,8,0)
7^MANUFACTURER FREE PRODUCT
"DATA",9002313.38,9,0)
8^VETERANS HEALTH ADMINISTRATION (VA)
"DATA",9002313.38,10,0)
9^UNKNOWN
"DATA",9002313.38,11,0)
10^HOSPICE - NON MEDICARE
"DATA",9002313.38,12,0)
11^MEDICAID MANAGED CARE
"DATA",9002313.38,13,0)
12^MEDICARE PART A
"DATA",9002313.38,14,0)
13^MEDICARE ADVANTAGE
"DATA",9002313.38,15,0)
14^MEDICARE PART D PDP
"DATA",9002313.38,16,0)
15^SELF PAY: CASH
"DATA",9002313.38,17,0)
16^MEDICARE PART B
"DATA",9002313.38,18,0)
17^INDIAN HEALTH SERVICES
"DATA",9002313.38,19,0)
18^ADAP/RYAN WHITE
"DATA",9002313.38,20,0)
19^BLACK LUNG
"DATA",9002313.38,21,0)
20^CASUALTY INSURANCE
"DATA",9002313.38,22,0)
21^CHIP TITLE XXI
"DATA",9002313.38,23,0)
22^HEALTH MARKETPLACE EXCHANGE QUALIFIED HEALTH PLAN
"DATA",9002313.38,24,0)
23^HRSA 340B INDIGENT PROGRAM
"DATA",9002313.38,25,0)
24^INDEPENDENT CHARITY PATIENT ASSISTANCE PROGRAM
"DATA",9002313.38,26,0)
25^MANUFACTURER PATIENT ASSISTANCE PROGRAM
"DATA",9002313.38,27,0)
26^MEDICARE - MEDICAID PLAN (MMP)
"DATA",9002313.38,28,0)
27^SPAP
"DATA",9002313.38,29,0)
28^TRICARE
"DATA",9002313.38,30,0)
29^OTHER FEDERAL PAYER
"DATA",9002313.38,31,0)
30^PROGRAMS OF ALL-INCLUSIVE CARE FOR THE ELDERLY (PACE)
"DATA",9002313.38,32,0)
99^OTHER
"DATA",9002313.91,1,0)
101^^IIN NUMBER^N^^^^6^N
"DATA",9002313.91,1,5)
A1^6^^1
"DATA",9002313.91,1,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,1,10,1,0)
S BPS("X")=$G(BPS("NCPDP","BIN Number"))
"DATA",9002313.91,1,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,1,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,1,25,0)
^9002313.9104^1^1^3040130^^^^
"DATA",9002313.91,1,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,1,30,0)
^9002313.9103^1^1^3040130^^^^
"DATA",9002313.91,1,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,1)=BPS("X")
"DATA",9002313.91,2,0)
102^^VERSION/RELEASE NUMBER^A/N^^^^2^A/N
"DATA",9002313.91,2,5)
A2^2^^1^22
"DATA",9002313.91,2,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,2,10,1,0)
S BPS("X")=$G(BPS("NCPDP","Version"))
"DATA",9002313.91,2,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,2,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,2,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,2,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,2,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,2,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,2)=BPS("X")
"DATA",9002313.91,3,0)
103^^TRANSACTION CODE^N^^^^2^A/N
"DATA",9002313.91,3,5)
A3^2^^1^22
"DATA",9002313.91,3,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,3,10,1,0)
S BPS("X")=$G(BPS("Transaction Code"))
"DATA",9002313.91,3,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,3,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,3,25,0)
^9002313.9104^1^1^3040130^^^^
"DATA",9002313.91,3,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,3,30,0)
^9002313.9103^1^1^3040130^^^^
"DATA",9002313.91,3,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,3)=BPS("X")
"DATA",9002313.91,4,0)
104^^PROCESSOR CONTROL NUMBER^A/N^^^^10^A/N
"DATA",9002313.91,4,5)
A4^10^^1
"DATA",9002313.91,4,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,4,10,1,0)
S BPS("X")=$G(BPS("NCPDP","PCN"))
"DATA",9002313.91,4,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,4,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,4,25,0)
^9002313.9104^1^1^3040820^^^^
"DATA",9002313.91,4,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,4,30,0)
^9002313.9103^1^1^3040820^^^^
"DATA",9002313.91,4,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,4)=BPS("X")
"DATA",9002313.91,5,0)
201^^SERVICE PROVIDER ID^A/N^^^^15^A/N
"DATA",9002313.91,5,5)
B1^12^^1^22
"DATA",9002313.91,5,10,0)
^^1^1^3110523^
"DATA",9002313.91,5,10,1,0)
S BPS("X")=$G(BPS("Site","NPI"))
"DATA",9002313.91,5,20,0)
^9002313.9102^1^1^3110523^
"DATA",9002313.91,5,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,5,25,0)
^^1^1^3110523^
"DATA",9002313.91,5,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,5,30,0)
^^1^1^3110523^
"DATA",9002313.91,5,30,1,0)
S $P(^BPSC(BPS(9002313.02),200),U,1)=BPS("X")
"DATA",9002313.91,6,0)
301^^GROUP ID^A/N^^^^15^A/N
"DATA",9002313.91,6,5)
C1^15^^3^24
"DATA",9002313.91,6,10,0)
^9002313.9101^1^1^3101216^
"DATA",9002313.91,6,10,1,0)
S BPS("X")=$G(BPS("Insurer","Group #"))
"DATA",9002313.91,6,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,6,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,6,25,0)
^9002313.9104^1^1^3041021^^^^
"DATA",9002313.91,6,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,6,30,0)
^9002313.9103^1^1^3041021^^^^
"DATA",9002313.91,6,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,1)=BPS("X")
"DATA",9002313.91,7,0)
302^^CARDHOLDER ID^A/N^^^^20^A/N
"DATA",9002313.91,7,5)
C2^20^^3^24
"DATA",9002313.91,7,10,0)
^9002313.9101^1^1^3041021
"DATA",9002313.91,7,10,1,0)
S BPS("X")=$G(BPS("Insurer","Policy #"))
"DATA",9002313.91,7,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,7,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,7,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,7,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,7,30,0)
^9002313.9103^1^1^3101004^^^
"DATA",9002313.91,7,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,2)=$TR(BPS("X")," ","")
"DATA",9002313.91,8,0)
303^^PERSON CODE^A/N^^^^3^A/N
"DATA",9002313.91,8,5)
C3^3^^3
"DATA",9002313.91,8,10,0)
^9002313.9101^1^1^3040114
"DATA",9002313.91,8,10,1,0)
S BPS("X")=$G(BPS("Insurer","Person Code"))
"DATA",9002313.91,8,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,8,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,8,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,8,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,8,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,8,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,3)=BPS("X")
"DATA",9002313.91,9,0)
304^^DATE OF BIRTH^N^^^^8^N
"DATA",9002313.91,9,5)
C4^8^^2^25
"DATA",9002313.91,9,10,0)
^9002313.9101^1^1^3040820
"DATA",9002313.91,9,10,1,0)
S BPS("X")=$G(BPS("Patient","DOB"))
"DATA",9002313.91,9,20,0)
^9002313.9102^1^1^3101029^
"DATA",9002313.91,9,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,9,25,0)
^9002313.9104^1^1^3040820^^^^
"DATA",9002313.91,9,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,9,30,0)
^9002313.9103^1^1^3101004^
"DATA",9002313.91,9,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,4)=$G(BPS("X"))
"DATA",9002313.91,10,0)
305^^PATIENT GENDER CODE^N^^^^1^N
"DATA",9002313.91,10,5)
C5^1^^2
"DATA",9002313.91,10,10,0)
^9002313.9101^3^3^3040114
"DATA",9002313.91,10,10,1,0)
S BPS("X")=$G(BPS("Patient","Sex"))
"DATA",9002313.91,10,10,2,0)
S BPS("X")=$E(BPS("X"),1,1)
"DATA",9002313.91,10,10,3,0)
S BPS("X")=$S(BPS("X")="M":"1",BPS("X")="F":"2",1:"0")
"DATA",9002313.91,10,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,10,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,10,25,0)
^9002313.9104^1^1^3040114^^
"DATA",9002313.91,10,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,10,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,10,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,5)=BPS("X")
"DATA",9002313.91,11,0)
306^^PATIENT RELATIONSHIP CODE^N^^^^1^N
"DATA",9002313.91,11,5)
C6^1^^3
"DATA",9002313.91,11,10,0)
^9002313.9101^1^1^3040114
"DATA",9002313.91,11,10,1,0)
S BPS("X")=$G(BPS("Insurer","Relationship"))
"DATA",9002313.91,11,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,11,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,11,25,0)
^9002313.9104^1^1^3040114^^^
"DATA",9002313.91,11,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,11,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,11,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,6)=BPS("X")
"DATA",9002313.91,12,0)
308^^OTHER COVERAGE CODE^N^^^^2^N
"DATA",9002313.91,12,5)
C8^2^^4
"DATA",9002313.91,12,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,12,10,1,0)
S BPS("X")=$G(BPS("Patient","Other Coverage Code"))
"DATA",9002313.91,12,10,2,0)
S:'BPS("X") BPS("X")=0
"DATA",9002313.91,12,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,12,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,12,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,12,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,12,30,0)
^9002313.9103^1^1^3101115^^^
"DATA",9002313.91,12,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),300),U,8)=BPS("X")
"DATA",9002313.91,13,0)
401^^DATE OF SERVICE^N^^^^8^N
"DATA",9002313.91,13,5)
D1^8^^1^22
"DATA",9002313.91,13,10,0)
^^1^1^3121128
"DATA",9002313.91,13,10,1,0)
S BPS("X")=$G(BPS("NCPDP","DOS"))
"DATA",9002313.91,13,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,13,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,13,25,0)
^9002313.9104^1^1^3040113^^^^
"DATA",9002313.91,13,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,13,30,0)
^^1^1^3121128
"DATA",9002313.91,13,30,1,0)
S $P(^BPSC(BPS(9002313.02),401),U,1)=BPS("X")
"DATA",9002313.91,14,0)
307^^PLACE OF SERVICE^A/N^^^^2^N
"DATA",9002313.91,14,5)
C7^2^^2
"DATA",9002313.91,14,10,0)
^9002313.9101^1^1^3040820
"DATA",9002313.91,14,10,1,0)
S BPS("X")=$G(BPS("Patient","Place of Service"))
"DATA",9002313.91,14,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,14,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,14,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,14,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,14,30,0)
^9002313.9103^1^1^3100910^^^^
"DATA",9002313.91,14,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,7)=BPS("X")
"DATA",9002313.91,15,0)
309^^ELIGIBILITY CLARIFICATION CODE^N^^^^1^N
"DATA",9002313.91,15,5)
C9^1^^3
"DATA",9002313.91,15,10,0)
^^2^2^3110727^
"DATA",9002313.91,15,10,1,0)
S BPS("X")=$G(BPS("Insurer","Eligibility Clarification Code"))
"DATA",9002313.91,15,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,15,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,15,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,15,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,15,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,15,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,15,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,9)=BPS("X")
"DATA",9002313.91,16,0)
310^^PATIENT FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,16,5)
CA^12^^2^25
"DATA",9002313.91,16,10,0)
^^1^1^3101216^
"DATA",9002313.91,16,10,1,0)
S BPS("X")=$G(BPS("Patient","First Name"))
"DATA",9002313.91,16,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,16,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,16,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,16,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,16,30,0)
^9002313.9103^1^1^3101004^^^^
"DATA",9002313.91,16,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,10)=BPS("X")
"DATA",9002313.91,17,0)
311^^PATIENT LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,17,5)
CB^15^^2^25
"DATA",9002313.91,17,10,0)
^^1^1^3101216^
"DATA",9002313.91,17,10,1,0)
S BPS("X")=$G(BPS("Patient","Last Name"))
"DATA",9002313.91,17,20,0)
^9002313.9102^1^1^3101004^
"DATA",9002313.91,17,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,17,25,0)
^9002313.9104^1^1^3101004^^^
"DATA",9002313.91,17,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,17,30,0)
^9002313.9103^1^1^3101004^^^
"DATA",9002313.91,17,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,11)=$G(BPS("X"))
"DATA",9002313.91,18,0)
402^^PRESCRIPTION/SERVICE REF NO^N^^^^12^N
"DATA",9002313.91,18,1)
PRESCRIPTION/SERVICE REFERENCE NUMBER
"DATA",9002313.91,18,5)
D2^7^^4^27
"DATA",9002313.91,18,10,0)
^9002313.9101^1^1^3171117^^^^
"DATA",9002313.91,18,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"RX IEN"))
"DATA",9002313.91,18,20,0)
^9002313.9102^2^2^3171117^^
"DATA",9002313.91,18,20,1,0)
I $L($G(BPS("X")))>12 S BPS("X")=$E(BPS("X"),$L(BPS("X"))-11,$L(BPS("X")))
"DATA",9002313.91,18,20,2,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,18,25,0)
^9002313.9104^2^2^3171117^^^^
"DATA",9002313.91,18,25,1,0)
I $L(BPS("X"))>7 S BPS("X")=$E(BPS("X"),$L(BPS("X"))-6,$L(BPS("X")))
"DATA",9002313.91,18,25,2,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),7)
"DATA",9002313.91,18,30,0)
^9002313.9103^1^1^3171117^^^^
"DATA",9002313.91,18,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,2)=BPS("X")
"DATA",9002313.91,19,0)
403^^FILL NUMBER^N^^^^2^N
"DATA",9002313.91,19,5)
D3^2^^4
"DATA",9002313.91,19,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,19,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Refill #"))
"DATA",9002313.91,19,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,19,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,19,25,0)
^9002313.9104^1^1^3030718^^
"DATA",9002313.91,19,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,19,30,0)
1^9002313.9103^1^1^3030718^^^
"DATA",9002313.91,19,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,3)=BPS("X")
"DATA",9002313.91,20,0)
B87^^QUAN LIMIT PER SPC TM PD COUNT^^^^^1^N
"DATA",9002313.91,20,1)
QUANTITY LIMIT PER SPECIFIC TIME PERIOD COUNT
"DATA",9002313.91,20,5)
3P^^2087^^27
"DATA",9002313.91,20,10,0)
^9002313.9101^1^1^3150915^^
"DATA",9002313.91,20,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,21,0)
405^^DAYS SUPPLY^N^^^^3^N
"DATA",9002313.91,21,5)
D5^3^^4
"DATA",9002313.91,21,10,0)
^9002313.9101^1^1^3040109
"DATA",9002313.91,21,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Days Supply"))
"DATA",9002313.91,21,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,21,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,21,25,0)
^9002313.9104^1^1^3030827^^^^
"DATA",9002313.91,21,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,21,30,0)
^9002313.9103^1^1^3030827^^^^
"DATA",9002313.91,21,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,5)=BPS("X")
"DATA",9002313.91,22,0)
406^^COMPOUND CODE^N^^^^1^N
"DATA",9002313.91,22,5)
D6^407^^4
"DATA",9002313.91,22,10,0)
^9002313.9101^2^2^3040114
"DATA",9002313.91,22,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Compound Code"))
"DATA",9002313.91,22,10,2,0)
S:BPS("X")="" BPS("X")=1
"DATA",9002313.91,22,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,22,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,22,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,22,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,22,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,22,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,6)=BPS("X")
"DATA",9002313.91,23,0)
407^^PRODUCT/SERVICE ID^A/N^^^^19^A/N
"DATA",9002313.91,23,5)
D7^19^^4
"DATA",9002313.91,23,10,0)
^9002313.9101^2^2^3030825
"DATA",9002313.91,23,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"NDC"))
"DATA",9002313.91,23,10,2,0)
S BPS("X")=$$NDCF^BPSECFM(BPS("X"))
"DATA",9002313.91,23,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,23,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,23,25,0)
^9002313.9104^1^1^3030825^^^
"DATA",9002313.91,23,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,23,30,0)
^9002313.9103^1^1^3030825^^^^
"DATA",9002313.91,23,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,7)=BPS("X")
"DATA",9002313.91,24,0)
408^^DAW PRODUCT SELECTION CODE^N^^^^1^A/N
"DATA",9002313.91,24,1)
DISPENSE AS WRITTEN (DAW)/ PRODUCT SELECTION CODE
"DATA",9002313.91,24,5)
D8^1^^4
"DATA",9002313.91,24,10,0)
^9002313.9101^2^2^3070205
"DATA",9002313.91,24,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"DAW"))
"DATA",9002313.91,24,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,24,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,24,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,24,25,0)
^9002313.9104^1^1^3061120^
"DATA",9002313.91,24,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,24,30,0)
^9002313.9103^1^1^3030722^
"DATA",9002313.91,24,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,8)=BPS("X")
"DATA",9002313.91,25,0)
409^^INGREDIENT COST SUBMITTED^D^^^^8^D
"DATA",9002313.91,25,5)
D9^8^^10
"DATA",9002313.91,25,10,0)
^^1^1^3121128
"DATA",9002313.91,25,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Ingredient Cost"))
"DATA",9002313.91,25,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,25,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,25,25,0)
^9002313.9104^1^1^3040907^^^^
"DATA",9002313.91,25,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,25,30,0)
^9002313.9103^1^1^3040907^^^^
"DATA",9002313.91,25,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,9)=BPS("X")
"DATA",9002313.91,26,0)
411^^PRESCRIBER ID^A/N^^^^15^A/N
"DATA",9002313.91,26,5)
DB^15^^6
"DATA",9002313.91,26,10,0)
^9002313.9101^1^1^3070214
"DATA",9002313.91,26,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber NPI"))
"DATA",9002313.91,26,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,26,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,26,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,26,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,26,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,26,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,11)=BPS("X")
"DATA",9002313.91,27,0)
414^^DATE PRESCRIPTION WRITTEN^N^^^^8^N
"DATA",9002313.91,27,5)
DE^8^^4
"DATA",9002313.91,27,10,0)
^9002313.9101^1^1^3040913
"DATA",9002313.91,27,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Date Written"))
"DATA",9002313.91,27,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,27,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,27,25,0)
^9002313.9104^1^1^3040913^^^^
"DATA",9002313.91,27,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,27,30,0)
^9002313.9103^1^1^3040913^^^^
"DATA",9002313.91,27,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,14)=BPS("X")
"DATA",9002313.91,28,0)
415^^NUMBER OF REFILLS AUTHORIZED^N^^^^2^N
"DATA",9002313.91,28,5)
DF^2^^4
"DATA",9002313.91,28,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,28,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"# Refills"))
"DATA",9002313.91,28,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,28,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,28,25,0)
^9002313.9104^1^1^3030718^^
"DATA",9002313.91,28,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,28,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,28,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,15)=BPS("X")
"DATA",9002313.91,29,0)
419^^PRESCRIPTION ORIGIN CODE^N^^^^1^N
"DATA",9002313.91,29,5)
DJ^1^^4
"DATA",9002313.91,29,10,0)
^9002313.9101^2^2^3030721
"DATA",9002313.91,29,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Origin Code"))
"DATA",9002313.91,29,10,2,0)
S:BPS("X")="" BPS("X")="0"
"DATA",9002313.91,29,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,29,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,29,25,0)
^9002313.9104^1^1^3030721^^^^
"DATA",9002313.91,29,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,29,30,0)
^9002313.9103^1^1^3030721^^^^
"DATA",9002313.91,29,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,19)=BPS("X")
"DATA",9002313.91,30,0)
420^^SUBMISSION CLARIFICATION CODE^N^^^^2^N
"DATA",9002313.91,30,5)
DK^2^^4
"DATA",9002313.91,30,10,0)
^9002313.9101^1^1^3101006^^^^
"DATA",9002313.91,30,10,1,0)
; GET CODE handled by FLD420^BPSOSSG
"DATA",9002313.91,30,20,0)
^9002313.9102^1^1^3101006^^^^
"DATA",9002313.91,30,20,1,0)
; vD.0 FORMAT CODE handled by FLD420^BPSOSSG
"DATA",9002313.91,30,25,0)
^9002313.9104^1^1^3101006^^^^
"DATA",9002313.91,30,25,1,0)
; FORMAT CODE handled by FLD420^BPSOSSG
"DATA",9002313.91,30,30,0)
^9002313.9103^1^1^3101006^^^^
"DATA",9002313.91,30,30,1,0)
D FLD420^BPSOSSG
"DATA",9002313.91,31,0)
453^^ORIG PRESCR PROD/SERV ID QUAL^N^^^^2^A/N
"DATA",9002313.91,31,1)
ORIGINALLY PRESCRIBED PRODUCT/SERVICE ID QUALIFIER
"DATA",9002313.91,31,5)
EJ^2^^4
"DATA",9002313.91,31,10,0)
^9002313.9101^1^1^3040907
"DATA",9002313.91,31,10,1,0)
S BPS("X")=""
"DATA",9002313.91,31,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,31,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,31,25,0)
^9002313.9104^1^1^3040907^^^^
"DATA",9002313.91,31,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,31,30,0)
^9002313.9103^1^1^3040907^^^
"DATA",9002313.91,31,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,3)=""
"DATA",9002313.91,32,0)
B88^^QUAN LIMIT PER SPC TIME PERIOD^^^^^10^N
"DATA",9002313.91,32,1)
QUANTITY LIMIT PER SPECIFIC TIME PERIOD
"DATA",9002313.91,32,5)
3R^^2088^^27
"DATA",9002313.91,32,10,0)
^^1^1^3150915^
"DATA",9002313.91,32,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,33,0)
423^^BASIS OF COST DETERMINATION^A/N^^^^2^A/N
"DATA",9002313.91,33,5)
DN^2^^10
"DATA",9002313.91,33,10,0)
^9002313.9101^1^1^3030916
"DATA",9002313.91,33,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Basis of Cost Determination"))
"DATA",9002313.91,33,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,33,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,33,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,33,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,33,30,0)
^9002313.9103^1^1^3030916^^^^
"DATA",9002313.91,33,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,23)=BPS("X")
"DATA",9002313.91,34,0)
424^^DIAGNOSIS CODE^A/N^^^^15^A/N
"DATA",9002313.91,34,5)
DO^15^^14
"DATA",9002313.91,34,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,34,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Diagnosis Code"))
"DATA",9002313.91,34,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,34,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,34,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,34,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,34,30,0)
^9002313.9103^1^1^3030718^^
"DATA",9002313.91,34,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,24)=BPS("X")
"DATA",9002313.91,35,0)
430^^GROSS AMOUNT DUE^D^^^^8^D
"DATA",9002313.91,35,5)
DU^8^^10
"DATA",9002313.91,35,10,0)
^9002313.9101^1^1^3030722
"DATA",9002313.91,35,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Gross Amount Due"))
"DATA",9002313.91,35,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,35,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,35,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,35,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,35,30,0)
^9002313.9103^1^1^3030722^^^^
"DATA",9002313.91,35,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,30)=BPS("X")
"DATA",9002313.91,36,0)
433^^PATIENT PAID AMOUNT REPORTED^D^^^^8^D
"DATA",9002313.91,36,1)
PATIENT PAID AMOUNT SUBMITTED
"DATA",9002313.91,36,5)
DX^8^^10
"DATA",9002313.91,36,10,0)
^^2^2^3110727^
"DATA",9002313.91,36,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Patient Paid Amount"))
"DATA",9002313.91,36,10,2,0)
S:BPS("X")="" BPS("X")="0.00"
"DATA",9002313.91,36,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,36,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,36,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,36,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,36,30,0)
^9002313.9103^1^1^3030916^^
"DATA",9002313.91,36,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),430),U,3)=BPS("X")
"DATA",9002313.91,37,0)
439^^REASON FOR SERVICE CODE^A/N^^^^2^A/N
"DATA",9002313.91,37,5)
E4^2^^9^29
"DATA",9002313.91,37,10,0)
^9002313.9101^1^1^3031230
"DATA",9002313.91,37,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"DUR","DUR Conflict Code",439))
"DATA",9002313.91,37,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,37,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,37,25,0)
^9002313.9104^1^1^3031230^^
"DATA",9002313.91,37,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,37,30,0)
^9002313.9103^1^1^3101115^^^^
"DATA",9002313.91,37,30,1,0)
D FLD439^BPSOSSG
"DATA",9002313.91,38,0)
440^^PROFESSIONAL SERVICE CODE^A/N^^^^2^A/N
"DATA",9002313.91,38,5)
E5^2^^9
"DATA",9002313.91,38,10,0)
^9002313.9101^1^1^3031230
"DATA",9002313.91,38,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"DUR","DUR Intervention Code",440))
"DATA",9002313.91,38,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,38,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,38,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,38,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,38,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,38,30,1,0)
D FLD440^BPSOSSG
"DATA",9002313.91,39,0)
441^^RESULT OF SERVICE CODE^A/N^^^^2^A/N
"DATA",9002313.91,39,5)
E6^2^^9
"DATA",9002313.91,39,10,0)
^9002313.9101^2^2^3070214
"DATA",9002313.91,39,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"DUR","DUR Outcome Code",441))
"DATA",9002313.91,39,10,2,0)
S:BPS("X")="" BPS("X")="00"
"DATA",9002313.91,39,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,39,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,39,25,0)
^9002313.9104^1^1^3070214^^
"DATA",9002313.91,39,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,39,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,39,30,1,0)
D FLD441^BPSOSSG
"DATA",9002313.91,40,0)
442^^QUANTITY DISPENSED^N^^^^10^N
"DATA",9002313.91,40,5)
E7^10^^4
"DATA",9002313.91,40,10,0)
^9002313.9101^1^1^3070620
"DATA",9002313.91,40,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Quantity"))*1000\1
"DATA",9002313.91,40,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,40,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,40,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,40,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,40,30,0)
^9002313.9103^1^1^3040109^^^^
"DATA",9002313.91,40,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,2)=BPS("X")
"DATA",9002313.91,41,0)
B89^^QUANTITY LIMIT TIME PERIOD^^^^^5^N
"DATA",9002313.91,41,1)
QUANTITY LIMIT TIME PERIOD
"DATA",9002313.91,41,5)
3S^^2089^^27
"DATA",9002313.91,41,10,0)
^^1^1^3150915^
"DATA",9002313.91,41,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,42,0)
412^^DISPENSING FEE SUBMITTED^D^^^^8^D
"DATA",9002313.91,42,5)
DC^8^^10
"DATA",9002313.91,42,10,0)
^^1^1^3121128
"DATA",9002313.91,42,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Dispensing Fee"))
"DATA",9002313.91,42,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,42,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,42,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,42,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,42,30,0)
^9002313.9103^1^1^3040907^^^^
"DATA",9002313.91,42,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,12)=BPS("X")
"DATA",9002313.91,43,0)
B90^^DAYS SUP LIM PER SPC TM PD CNT^^^^^1^N
"DATA",9002313.91,43,1)
DAYS SUPPLY LIMIT PER SPECIFIC TIME PERIOD COUNT
"DATA",9002313.91,43,5)
3T^^2090^^27
"DATA",9002313.91,43,10,0)
^^1^1^3150915^
"DATA",9002313.91,43,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,44,0)
418^^LEVEL OF SERVICE^N^^^^2^N
"DATA",9002313.91,44,5)
DI^2^^4
"DATA",9002313.91,44,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,44,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Level of Service"))
"DATA",9002313.91,44,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,44,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,44,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,44,25,0)
^9002313.9104^1^1^3070215^^
"DATA",9002313.91,44,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,44,30,0)
^9002313.9103^1^1^3070215^^^^
"DATA",9002313.91,44,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,18)=BPS("X")
"DATA",9002313.91,45,0)
421^^PRIMARY CARE PROVIDER ID^A/N^^^^15^A/N
"DATA",9002313.91,45,5)
DL^15^^6
"DATA",9002313.91,45,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,45,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Primary Care Provider NPI"))
"DATA",9002313.91,45,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,45,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,45,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,45,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,45,30,0)
^9002313.9103^1^1^3041015^
"DATA",9002313.91,45,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,21)=""
"DATA",9002313.91,46,0)
426^^USUAL AND CUSTOMARY CHARGE^D^^^^8^D
"DATA",9002313.91,46,5)
DQ^8^^10
"DATA",9002313.91,46,10,0)
^9002313.9101^1^1^3031219
"DATA",9002313.91,46,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Usual & Customary"))
"DATA",9002313.91,46,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,46,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,46,25,0)
^9002313.9104^1^1^3031219^^^^
"DATA",9002313.91,46,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,46,30,0)
^9002313.9103^1^1^3031219^^^^
"DATA",9002313.91,46,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,26)=BPS("X")
"DATA",9002313.91,47,0)
429^^SPECIAL PACKAGING INDICATOR^N^^^^1^N
"DATA",9002313.91,47,5)
DT^1^^4
"DATA",9002313.91,47,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,47,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Unit Dose Indicator"))
"DATA",9002313.91,47,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,47,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,47,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,47,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,47,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,47,30,0)
^9002313.9103^1^1^3030823^^^
"DATA",9002313.91,47,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,29)=BPS("X")
"DATA",9002313.91,48,0)
431^^OTHER PAYER AMOUNT PAID^D^^^^8^D
"DATA",9002313.91,48,5)
DV^8^^7
"DATA",9002313.91,48,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,48,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,48,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,48,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,48,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,48,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,48,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,48,30,1,0)
D SET431^BPSFLD01
"DATA",9002313.91,49,0)
438^^INCENTIVE AMOUNT SUBMITTED^D^^^^8^D
"DATA",9002313.91,49,5)
E3^8^^10
"DATA",9002313.91,49,10,0)
^^1^1^3110505^
"DATA",9002313.91,49,10,1,0)
S BPS("X")=0
"DATA",9002313.91,49,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,49,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,49,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,49,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,49,30,0)
^9002313.9103^1^1^3040907^
"DATA",9002313.91,49,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),430),U,8)=""
"DATA",9002313.91,50,0)
B91^^DAYS SUP LIM PER SPC TM PERIOD^^^^^3^N
"DATA",9002313.91,50,1)
DAYS SUPPLY LIMIT PER SPECIFIC TIME PERIOD
"DATA",9002313.91,50,5)
3W^^2091^^27
"DATA",9002313.91,50,10,0)
^^1^1^3150915^
"DATA",9002313.91,50,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,51,0)
443^^OTHER PAYER DATE^N^^^^8^N
"DATA",9002313.91,51,5)
E8^8^^7
"DATA",9002313.91,51,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,51,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,51,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,51,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,51,25,0)
^9002313.9104^1^1^3040224^
"DATA",9002313.91,51,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,51,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,51,30,1,0)
D SET443^BPSFLD01
"DATA",9002313.91,52,0)
313^^CARDHOLDER LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,52,5)
CD^15^^3
"DATA",9002313.91,52,10,0)
^^1^1^3101216^
"DATA",9002313.91,52,10,1,0)
S BPS("X")=$G(BPS("Cardholder","Last Name"))
"DATA",9002313.91,52,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,52,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,52,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,52,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,52,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,52,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,13)=BPS("X")
"DATA",9002313.91,53,0)
312^^CARDHOLDER FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,53,5)
CC^12^^3
"DATA",9002313.91,53,10,0)
^^1^1^3101216^
"DATA",9002313.91,53,10,1,0)
S BPS("X")=$G(BPS("Cardholder","First Name"))
"DATA",9002313.91,53,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,53,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,53,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,53,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),12)
"DATA",9002313.91,53,30,0)
^9002313.9103^1^1^3101115^^^^
"DATA",9002313.91,53,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,12)=BPS("X")
"DATA",9002313.91,54,0)
322^^PATIENT STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,54,5)
CM^30^^2
"DATA",9002313.91,54,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,54,10,1,0)
S BPS("X")=$G(BPS("Patient","Street Address"))
"DATA",9002313.91,54,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,54,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,54,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,54,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,54,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,54,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,2)=BPS("X")
"DATA",9002313.91,55,0)
323^^PATIENT CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,55,5)
CN^20^^2
"DATA",9002313.91,55,10,0)
^9002313.9101^1^1^3030703
"DATA",9002313.91,55,10,1,0)
S BPS("X")=$G(BPS("Patient","City"))
"DATA",9002313.91,55,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,55,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,55,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,55,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),20)
"DATA",9002313.91,55,30,0)
^9002313.9103^1^1^3030703^^^^
"DATA",9002313.91,55,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,3)=BPS("X")
"DATA",9002313.91,56,0)
324^^PATIENT STATE/PROVINCE ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,56,5)
CO^2^^2
"DATA",9002313.91,56,10,0)
^9002313.9101^1^1^3030717
"DATA",9002313.91,56,10,1,0)
S BPS("X")=$G(BPS("Patient","State"))
"DATA",9002313.91,56,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,56,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,56,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,56,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,56,30,0)
^9002313.9103^1^1^3030717^^^^
"DATA",9002313.91,56,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,4)=BPS("X")
"DATA",9002313.91,57,0)
325^^PATIENT ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,57,5)
CP^15^^2
"DATA",9002313.91,57,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,57,10,1,0)
S BPS("X")=$G(BPS("Patient","Zip"))
"DATA",9002313.91,57,20,0)
^^2^2^3121128
"DATA",9002313.91,57,20,1,0)
S BPS("X")=$TR($G(BPS("X")),"-/._","")
"DATA",9002313.91,57,20,2,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,57,25,0)
^9002313.9104^2^2^3030718^^^^
"DATA",9002313.91,57,25,1,0)
S BPS("X")=$TR(BPS("X"),"-/._","")
"DATA",9002313.91,57,25,2,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),9)
"DATA",9002313.91,57,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,57,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,5)=BPS("X")
"DATA",9002313.91,58,0)
314^^HOME PLAN^A/N^^^^3^A/N
"DATA",9002313.91,58,5)
CE^3^^3
"DATA",9002313.91,58,10,0)
^9002313.9101^1^1^3030823
"DATA",9002313.91,58,10,1,0)
S BPS("X")=$G(BPS("Home Plan"))
"DATA",9002313.91,58,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,58,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,58,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,58,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),3)
"DATA",9002313.91,58,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,58,30,1,0)
S $P(^BPSC(BPS(9002313.02),300),U,14)=BPS("X")
"DATA",9002313.91,59,0)
315^^EMPLOYER NAME^A/N^^^^30^A/N
"DATA",9002313.91,59,5)
CF^30^^8
"DATA",9002313.91,59,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,59,10,1,0)
D EMPL^BPSOSSG
"DATA",9002313.91,59,10,2,0)
S BPS("X")=$G(BPS("Employer","Name"))
"DATA",9002313.91,59,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,59,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,59,25,0)
^9002313.9104^1^1^3030718^^^
"DATA",9002313.91,59,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,59,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,59,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,5)=BPS("X")
"DATA",9002313.91,60,0)
316^^EMPLOYER STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,60,5)
CG^30^^8
"DATA",9002313.91,60,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,60,10,1,0)
S BPS("X")=$G(BPS("Employer","Address"))
"DATA",9002313.91,60,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,60,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,60,25,0)
^9002313.9104^1^1^3030718^^^
"DATA",9002313.91,60,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,60,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,60,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,6)=BPS("X")
"DATA",9002313.91,61,0)
317^^EMPLOYER CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,61,5)
CH^20^^8
"DATA",9002313.91,61,10,0)
^9002313.9101^1^1^3150112^
"DATA",9002313.91,61,10,1,0)
S BPS("X")=$G(BPS("Employer","City"))
"DATA",9002313.91,61,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,61,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,61,25,0)
^9002313.9104^1^1^3030718^^
"DATA",9002313.91,61,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),20)
"DATA",9002313.91,61,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,61,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,7)=BPS("X")
"DATA",9002313.91,62,0)
318^^EMPLOYER STATE/PROV ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,62,1)
EMPLOYER STATE/ PROVINCE ADDRESS
"DATA",9002313.91,62,5)
CI^2^^8
"DATA",9002313.91,62,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,62,10,1,0)
S BPS("X")=$G(BPS("Employer","State"))
"DATA",9002313.91,62,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,62,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,62,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,62,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,62,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,62,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,8)=BPS("X")
"DATA",9002313.91,63,0)
319^^EMPLOYER ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,63,5)
CJ^15^^8
"DATA",9002313.91,63,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,63,10,1,0)
S BPS("X")=$G(BPS("Employer","Zip Code"))
"DATA",9002313.91,63,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,63,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,63,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,63,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,63,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,63,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,9)=BPS("X")
"DATA",9002313.91,64,0)
327^^CARRIER ID^A/N^^^^10^A/N
"DATA",9002313.91,64,5)
CR^12^^8
"DATA",9002313.91,64,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,64,10,1,0)
S BPS("X")=$G(BPS("Carrier ID #"))
"DATA",9002313.91,64,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,64,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,64,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,64,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),12)
"DATA",9002313.91,64,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,64,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),320),U,7)=BPS("X")
"DATA",9002313.91,65,0)
B92^^DAYS SUPPLY LIMIT TIME PERIOD^^^^^5^N
"DATA",9002313.91,65,1)
DAYS SUPPLY LIMIT TIME PERIOD
"DATA",9002313.91,65,5)
3X^^2092^^27
"DATA",9002313.91,65,10,0)
^^1^1^3150915^
"DATA",9002313.91,65,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,66,0)
C01^^ORIG MANUFACTURER PRODUCT ID^A/N^^^^19^A/N
"DATA",9002313.91,66,1)
ORIGINAL MANUFACTURER PRODUCT ID
"DATA",9002313.91,66,5)
4N^19^2101^4
"DATA",9002313.91,66,10,0)
^9002313.9101^1^1^3171117^^^
"DATA",9002313.91,66,10,1,0)
S BPS("X")=""
"DATA",9002313.91,66,20,0)
^9002313.9102^1^1^3171117^^
"DATA",9002313.91,66,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,66,25,0)
^9002313.9104^1^1^3171117^^^
"DATA",9002313.91,66,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,66,30,0)
^9002313.9103^1^1^3171117^^
"DATA",9002313.91,66,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C0"),U,1)=BPS("X")
"DATA",9002313.91,67,0)
427^^PRESCRIBER LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,67,5)
DR^15^^6
"DATA",9002313.91,67,10,0)
^9002313.9101^1^1^3110107^^
"DATA",9002313.91,67,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Last Name"))
"DATA",9002313.91,67,20,0)
^9002313.9102^1^1^3110107^
"DATA",9002313.91,67,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,67,25,0)
^9002313.9104^1^1^3110107^^
"DATA",9002313.91,67,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,67,30,0)
^9002313.9103^1^1^3110107^^^^
"DATA",9002313.91,67,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),420),U,27)=BPS("X")
"DATA",9002313.91,68,0)
C02^^ORIG MANUFACTURER PROD ID QUAL^A/N^^^^2^A/N
"DATA",9002313.91,68,1)
ORIGINAL MANUFACTURER PRODUCT ID QUALIFIER
"DATA",9002313.91,68,5)
4P^2^2102^4
"DATA",9002313.91,68,10,0)
^^1^1^3170228^
"DATA",9002313.91,68,10,1,0)
S BPS("X")=""
"DATA",9002313.91,68,20,0)
^^1^1^3170228^
"DATA",9002313.91,68,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,68,25,0)
^^1^1^3170228^
"DATA",9002313.91,68,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,68,30,0)
^^1^1^3170228^
"DATA",9002313.91,68,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C0"),U,2)=BPS("X")
"DATA",9002313.91,69,0)
434^^DATE OF INJURY^N^^^^8^N
"DATA",9002313.91,69,5)
DY^8^^8
"DATA",9002313.91,69,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,69,10,1,0)
S BPS("X")=$G(BPS("Date of Injury"))
"DATA",9002313.91,69,10,2,0)
S BPS("X")=$$DTF1^BPSECFM(BPS("X"))
"DATA",9002313.91,69,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,69,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,69,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,69,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,69,30,0)
^9002313.9103^1^1^3010125^^
"DATA",9002313.91,69,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),430),U,4)=BPS("X")
"DATA",9002313.91,70,0)
435^^CLAIM/REFERENCE ID^A/N^^^^30^A/N
"DATA",9002313.91,70,5)
DZ^30^^8
"DATA",9002313.91,70,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,70,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Claim/Ref ID #"))
"DATA",9002313.91,70,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,70,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,70,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,70,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,70,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,70,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),400),U,35)=BPS("X")
"DATA",9002313.91,71,0)
436^^PRODUCT/SERVICE ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,71,5)
E1^2^^4
"DATA",9002313.91,71,10,0)
^^1^1^3121128
"DATA",9002313.91,71,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Product ID Qualifier"))
"DATA",9002313.91,71,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,71,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,71,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,71,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,71,30,0)
^9002313.9103^1^1^3040107^^^^
"DATA",9002313.91,71,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),430),U,6)=BPS("X")
"DATA",9002313.91,72,0)
B96^^PROVIDER FIRST NAME^A/N^^^^35^A/N
"DATA",9002313.91,72,1)
PROVIDER FIRST NAME
"DATA",9002313.91,72,5)
4A^35^2096^5
"DATA",9002313.91,72,10,0)
^^1^1^3170228^
"DATA",9002313.91,72,10,1,0)
S BPS("X")=""
"DATA",9002313.91,72,20,0)
^^1^1^3170228^
"DATA",9002313.91,72,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,72,25,0)
^^1^1^3170228^
"DATA",9002313.91,72,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,72,30,0)
^^1^1^3170306^
"DATA",9002313.91,72,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B90"),U,6)=BPS("X")
"DATA",9002313.91,73,0)
B97^^PROVIDER LAST NAME^A/N^^^^35^A/N
"DATA",9002313.91,73,1)
PROVIDER LAST NAME
"DATA",9002313.91,73,5)
4M^35^2097^5
"DATA",9002313.91,73,10,0)
^^1^1^3170228^
"DATA",9002313.91,73,10,1,0)
S BPS("X")=""
"DATA",9002313.91,73,20,0)
^^1^1^3170228^
"DATA",9002313.91,73,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,73,25,0)
^^1^1^3170228^
"DATA",9002313.91,73,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,73,30,0)
^^1^1^3170306^
"DATA",9002313.91,73,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B90"),U,7)=BPS("X")
"DATA",9002313.91,74,0)
498.51^^PRIOR AUTH PROCESSED DATE^A/N^^^^8^N
"DATA",9002313.91,74,5)
PR^8^^^30
"DATA",9002313.91,74,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,74,10,1,0)
S BPS("X")=""
"DATA",9002313.91,74,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,74,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,75,0)
202^^SERV PROVIDER ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,75,1)
SERVICE PROVIDER ID QUALIFIER
"DATA",9002313.91,75,5)
B2^2^^1^22
"DATA",9002313.91,75,10,0)
^9002313.9101^1^1^3070214
"DATA",9002313.91,75,10,1,0)
S BPS("X")="01"
"DATA",9002313.91,75,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,75,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,75,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,75,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,75,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,75,30,1,0)
S $P(^BPSC(BPS(9002313.02),200),U,2)=BPS("X") ;VA
"DATA",9002313.91,76,0)
110^^SOFTWARE VENDOR/CERT ID^A/N^^^^10^A/N
"DATA",9002313.91,76,1)
SOFTWARE VENDOR/ CERTIFICATION ID
"DATA",9002313.91,76,5)
AK^10^^1
"DATA",9002313.91,76,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,76,10,1,0)
S BPS("X")=$G(BPS("NCPDP","Software Vendor/Cert ID"))
"DATA",9002313.91,76,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,76,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,76,25,0)
^9002313.9104^1^1^3040202^^^^
"DATA",9002313.91,76,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10) ;VA
"DATA",9002313.91,76,30,0)
^9002313.9103^1^1^3061023^
"DATA",9002313.91,76,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,10)=BPS("X")
"DATA",9002313.91,77,0)
331^^PATIENT ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,77,5)
CX^2^^2
"DATA",9002313.91,77,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,77,10,1,0)
S BPS("X")="01"
"DATA",9002313.91,77,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,77,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,77,25,0)
^9002313.9104^1^1^3030718^^
"DATA",9002313.91,77,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,77,30,0)
^9002313.9103^1^1^3030718^^^^
"DATA",9002313.91,77,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,1)=BPS("X") ;VA
"DATA",9002313.91,78,0)
332^^PATIENT ID^A/N^^^^20^A/N
"DATA",9002313.91,78,5)
CY^20^^2
"DATA",9002313.91,78,10,0)
^9002313.9101^1^1^3061023
"DATA",9002313.91,78,10,1,0)
S BPS("X")=$G(BPS("Patient","SSN"))
"DATA",9002313.91,78,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,78,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,78,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,78,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,78,30,0)
^9002313.9103^1^1^3040820^^^^
"DATA",9002313.91,78,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,2)=BPS("X") ;VA
"DATA",9002313.91,79,0)
326^^PATIENT TELEPHONE NUMBER^N^^^^10^N
"DATA",9002313.91,79,5)
CQ^10^^2
"DATA",9002313.91,79,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,79,10,1,0)
S BPS("X")=$TR($G(BPS("Patient","Phone #")),"#() -_*.@")
"DATA",9002313.91,79,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,79,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,79,25,0)
^9002313.9104^1^1^3101115^
"DATA",9002313.91,79,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,79,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,79,30,1,0)
S $P(^BPSC(BPS(9002313.02),321),U,6)=BPS("X")
"DATA",9002313.91,80,0)
455^^PRESCRIPTION/SERV REF NO QLFR^A/N^^^^1^A/N
"DATA",9002313.91,80,1)
PRESCRIPTION/ SERVICE REFERENCE NUMBER QUALIFIER
"DATA",9002313.91,80,5)
EM^1^^4^27
"DATA",9002313.91,80,10,0)
^9002313.9101^1^1^3101008^
"DATA",9002313.91,80,10,1,0)
S BPS("X")=1
"DATA",9002313.91,80,20,0)
^9002313.9102^1^1^3101007^^
"DATA",9002313.91,80,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,80,25,0)
^9002313.9104^1^1^3101007^^^
"DATA",9002313.91,80,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,80,30,0)
^9002313.9103^1^1^3101007^^^^
"DATA",9002313.91,80,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,5)=BPS("X")
"DATA",9002313.91,81,0)
460^^QUANTITY PRESCRIBED^N^^^^10^N
"DATA",9002313.91,81,5)
ET^10^^4
"DATA",9002313.91,81,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,81,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Quantity"))*1000\1
"DATA",9002313.91,81,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,81,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,81,25,0)
^9002313.9104^1^1^3030827^^^^
"DATA",9002313.91,81,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,81,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,81,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,10)=BPS("X")
"DATA",9002313.91,82,0)
465^^PROVIDER ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,82,5)
EY^2^^5
"DATA",9002313.91,82,10,0)
^9002313.9101^1^1^3070214
"DATA",9002313.91,82,10,1,0)
S BPS("X")="05"
"DATA",9002313.91,82,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,82,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,82,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,82,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,82,30,0)
^9002313.9103^1^1^3041015^
"DATA",9002313.91,82,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,5)=""
"DATA",9002313.91,83,0)
444^^PROVIDER ID^A/N^^^^15^A/N
"DATA",9002313.91,83,5)
E9^15^^5
"DATA",9002313.91,83,10,0)
^9002313.9101^1^1^3070214
"DATA",9002313.91,83,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Provider NPI"))
"DATA",9002313.91,83,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,83,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,83,25,0)
^9002313.9104^1^1^3070214^
"DATA",9002313.91,83,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,83,30,0)
^9002313.9103^1^1^3041015^
"DATA",9002313.91,83,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,4)=""
"DATA",9002313.91,84,0)
466^^PRESCRIBER ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,84,5)
EZ^2^^6
"DATA",9002313.91,84,10,0)
^^2^2^3101216^
"DATA",9002313.91,84,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber ID Qualifier"))
"DATA",9002313.91,84,10,2,0)
S:BPS("X")="" BPS("X")="01"
"DATA",9002313.91,84,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,84,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,84,25,0)
^9002313.9104^1^1^3070214^^^^
"DATA",9002313.91,84,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,84,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,84,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,6)=BPS("X")
"DATA",9002313.91,85,0)
467^^PRESCRIBER LOCATION CODE^A/N^^^^3^A/N
"DATA",9002313.91,85,5)
1E^3
"DATA",9002313.91,85,10,0)
^9002313.9101^1^1^3030721
"DATA",9002313.91,85,10,1,0)
S BPS("X")=$G(BPS("RX",1,"Prescriber Billing Location"))
"DATA",9002313.91,85,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,85,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,85,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,85,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,85,30,0)
^9002313.9103^1^1^3030721^^^^
"DATA",9002313.91,85,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,7)=BPS("X")
"DATA",9002313.91,86,0)
498^^PRESCRIBER TELEPHONE NUMBER^N^^^^10^N
"DATA",9002313.91,86,5)
PM^10^^6
"DATA",9002313.91,86,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,86,10,1,0)
S BPS("X")=$TR($G(BPS("RX",BPS(9002313.0201),"Prescriber Phone #")),"#() -_*.@")
"DATA",9002313.91,86,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,86,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,86,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,86,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,86,30,0)
^9002313.9103^1^1^3100917^^^^
"DATA",9002313.91,86,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),498),U,12)=BPS("X")
"DATA",9002313.91,87,0)
468^^PRIMARY CARE PROVIDER ID QLFR^A/N^^^^2^A/N
"DATA",9002313.91,87,1)
PRIMARY CARE PROVIDER ID QUALIFIER
"DATA",9002313.91,87,5)
2E^2^^6
"DATA",9002313.91,87,10,0)
^^2^2^3110727^
"DATA",9002313.91,87,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Primary Care Prov ID Qual"))
"DATA",9002313.91,87,10,2,0)
S:BPS("X")="" BPS("X")="01"
"DATA",9002313.91,87,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,87,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,87,25,0)
^9002313.9104^1^1^3070214^^^^
"DATA",9002313.91,87,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,87,30,0)
^9002313.9103^1^1^3041015^
"DATA",9002313.91,87,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,8)=""
"DATA",9002313.91,88,0)
469^^PRIM CARE PROV LOCATION CODE^N^^^^3^A/N
"DATA",9002313.91,88,5)
H5^3
"DATA",9002313.91,88,10,0)
^9002313.9101^1^1^3040114
"DATA",9002313.91,88,10,1,0)
S BPS("X")=$G(BPS("Patient","Primary Care Prov Location Code"))
"DATA",9002313.91,88,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,88,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,88,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,88,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,88,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,88,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,9)=BPS("X")
"DATA",9002313.91,89,0)
470^^PRIM CARE PROVIDER LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,89,1)
PRIMARY CARE PROVIDER LAST NAME
"DATA",9002313.91,89,5)
4E^15^^6
"DATA",9002313.91,89,10,0)
^^1^1^3101217^
"DATA",9002313.91,89,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Primary Care Prov Last Name"))
"DATA",9002313.91,89,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,89,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,89,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,89,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),15)
"DATA",9002313.91,89,30,0)
^9002313.9103^1^1^3030825^^^^
"DATA",9002313.91,89,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,10)=BPS("X")
"DATA",9002313.91,90,0)
B95^^FACILITY ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,90,1)
FACILITY ID QUALIFIER
"DATA",9002313.91,90,5)
3Z^2^2095^16
"DATA",9002313.91,90,10,0)
^9002313.9101^2^2^3170530^^^
"DATA",9002313.91,90,10,1,0)
S BPS("X")=$G(BPS("Insurer","Facility ID"))
"DATA",9002313.91,90,10,2,0)
S BPS("X")=$S(BPS("X")'="":1,1:"")
"DATA",9002313.91,90,20,0)
^9002313.9102^1^1^3170530^^^
"DATA",9002313.91,90,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,90,25,0)
^9002313.9104^1^1^3170530^^^
"DATA",9002313.91,90,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,90,30,0)
^9002313.9103^1^1^3170530^^^
"DATA",9002313.91,90,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B90"),U,1)=BPS("X")
"DATA",9002313.91,91,0)
480^^OTHER AMT CLAIMED SUBMITTED^D^^^^8^D
"DATA",9002313.91,91,1)
OTHER AMOUNT CLAIMED SUBMITTED
"DATA",9002313.91,91,5)
H9^8^^10
"DATA",9002313.91,91,10,0)
^9002313.9101^1^1^3101006^^^^
"DATA",9002313.91,91,10,1,0)
; GET CODE handled by FLD480^BPSOSSG
"DATA",9002313.91,91,20,0)
^9002313.9102^1^1^3101006^^^^
"DATA",9002313.91,91,20,1,0)
; vD.0 format code handled by FLD480^BPSOSSG
"DATA",9002313.91,91,25,0)
^9002313.9104^1^1^3101006^^^^
"DATA",9002313.91,91,25,1,0)
; format code handled by FLD480^BPSOSSG
"DATA",9002313.91,91,30,0)
^9002313.9103^1^1^3101006^^^^
"DATA",9002313.91,91,30,1,0)
D FLD480^BPSOSSG
"DATA",9002313.91,92,0)
109^^TRANSACTION COUNT^A/N^^^^1^A/N
"DATA",9002313.91,92,5)
A9^1^^1^22
"DATA",9002313.91,92,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,92,10,1,0)
S BPS("X")=$G(BPS("Transaction Count"))
"DATA",9002313.91,92,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,92,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,92,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,92,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,92,30,0)
^9002313.9103^1^1^3040114^^^
"DATA",9002313.91,92,30,1,0)
S $P(^BPSC(BPS(9002313.02),100),U,9)=BPS("X")
"DATA",9002313.91,93,0)
111^^SEGMENT IDENTIFICATION^A/N^^^^2^A/N
"DATA",9002313.91,93,5)
AM^2^^1
"DATA",9002313.91,93,10,0)
^9002313.9101^1^1^3040114
"DATA",9002313.91,93,10,1,0)
S BPS("X")=""
"DATA",9002313.91,93,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,93,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,94,0)
B98^^RECONCILIATION ID^A/N^^^^30^A/N
"DATA",9002313.91,94,1)
RECONCILIATION ID
"DATA",9002313.91,94,5)
34^30^2098^4^26
"DATA",9002313.91,94,10,0)
^9002313.9101^1^1^3171120^
"DATA",9002313.91,94,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,95,0)
112^^TRANSACTION RESPONSE STATUS^A/N^^^^1^A/N
"DATA",9002313.91,95,5)
AN^2^^^26
"DATA",9002313.91,95,10,0)
^9002313.9101^1^1^3171117^^^
"DATA",9002313.91,95,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,95,25,0)
^9002313.9104^1^1^3171117^^^
"DATA",9002313.91,95,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,95,30,0)
^9002313.9103^1^1^3171117^^^
"DATA",9002313.91,95,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),110),U,2)=BPS("X")
"DATA",9002313.91,96,0)
320^^EMPLOYER TELEPHONE NUMBER^N^^^^10^N
"DATA",9002313.91,96,5)
CK^10^^8
"DATA",9002313.91,96,10,0)
^9002313.9101^1^1^3050802
"DATA",9002313.91,96,10,1,0)
S BPS("X")=$TR($G(BPS("Employer","Phone")),"#() -_*.@")
"DATA",9002313.91,96,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,96,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,96,25,0)
^9002313.9104^1^1^3061121^
"DATA",9002313.91,96,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),10)
"DATA",9002313.91,96,30,0)
^9002313.9103^1^1^3061120^
"DATA",9002313.91,96,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),310),U,10)=BPS("X")
"DATA",9002313.91,97,0)
321^^EMPLOYER CONTACT NAME^A/N^^^^30^A/N
"DATA",9002313.91,97,5)
CL^30^^8
"DATA",9002313.91,97,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,97,10,1,0)
S BPS("X")=""
"DATA",9002313.91,97,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,97,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,97,25,0)
^9002313.9104^1^1^3040224^^^
"DATA",9002313.91,97,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),30)
"DATA",9002313.91,97,30,0)
^9002313.9103^1^1^3040224^
"DATA",9002313.91,97,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),320),U,1)=BPS("X")
"DATA",9002313.91,98,0)
330^^ALTERNATE ID^A/N^^^^20^A/N
"DATA",9002313.91,98,5)
CW^20^^4
"DATA",9002313.91,98,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,98,10,1,0)
S BPS("X")=""
"DATA",9002313.91,98,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,98,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,98,25,0)
^9002313.9104^1^1^3040224^^^
"DATA",9002313.91,98,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),20)
"DATA",9002313.91,98,30,0)
^9002313.9103^1^1^3040224^^
"DATA",9002313.91,98,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),320),U,10)=BPS("X")
"DATA",9002313.91,99,0)
333^^EMPLOYER ID^A/N^^^^15^A/N
"DATA",9002313.91,99,5)
CZ^15^^2
"DATA",9002313.91,99,10,0)
^9002313.9101^1^1^3030823
"DATA",9002313.91,99,10,1,0)
S BPS("X")=""
"DATA",9002313.91,99,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,99,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,99,25,0)
^9002313.9104^1^1^3030823^
"DATA",9002313.91,99,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,99,30,0)
^9002313.9103^1^1^3030823^^^^
"DATA",9002313.91,99,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,3)=BPS("X")
"DATA",9002313.91,100,0)
334^^SMOKER/NONSMOKER^N^^^^1^A/N
"DATA",9002313.91,100,5)
1C^1^^2
"DATA",9002313.91,100,10,0)
^9002313.9101^1^1^3070620
"DATA",9002313.91,100,10,1,0)
S BPS("X")=""
"DATA",9002313.91,100,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,100,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,100,25,0)
^9002313.9104^1^1^3040114^^^^
"DATA",9002313.91,100,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),1)
"DATA",9002313.91,100,30,0)
^9002313.9103^1^1^3040114^^^^
"DATA",9002313.91,100,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,4)=BPS("X")
"DATA",9002313.91,101,0)
335^^PREGNANCY INDICATOR^N^^^^1^A/N
"DATA",9002313.91,101,5)
2C^1^^2
"DATA",9002313.91,101,10,0)
^9002313.9101^1^1^3030823
"DATA",9002313.91,101,10,1,0)
S BPS("X")=""
"DATA",9002313.91,101,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,101,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,101,25,0)
^9002313.9104^1^1^3030823^^
"DATA",9002313.91,101,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),1)
"DATA",9002313.91,101,30,0)
^9002313.9103^1^1^3030823^^
"DATA",9002313.91,101,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,5)=BPS("X")
"DATA",9002313.91,102,0)
336^^FACILITY ID^A/N^^^^10^A/N
"DATA",9002313.91,102,5)
8C^10^^16
"DATA",9002313.91,102,10,0)
^9002313.9101^1^1^3070103
"DATA",9002313.91,102,10,1,0)
S BPS("X")=$G(BPS("Insurer","Facility ID"))
"DATA",9002313.91,102,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,102,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,102,25,0)
^9002313.9104^1^1^3030823^^
"DATA",9002313.91,102,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),10)
"DATA",9002313.91,102,30,0)
^9002313.9103^1^1^3030823^
"DATA",9002313.91,102,30,1,0)
S $P(^BPSC(BPS(9002313.02),330),U,6)=BPS("X")
"DATA",9002313.91,103,0)
337^^COB/OTHER PAYMENTS COUNT^N^^^^1^N
"DATA",9002313.91,103,1)
COORDINATION OF BENEFITS/OTHER PAYMENTS COUNT
"DATA",9002313.91,103,5)
4C^1^^7
"DATA",9002313.91,103,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,103,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,103,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,103,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,103,25,0)
^9002313.9104^1^1^3040223^^^
"DATA",9002313.91,103,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,103,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,103,30,1,0)
D SET337^BPSFLD01
"DATA",9002313.91,104,0)
338^^OTHER PAYER COVERAGE TYPE^N^^^^2^A/N
"DATA",9002313.91,104,5)
5C^2^^7^31
"DATA",9002313.91,104,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,104,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,104,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,104,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,104,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,104,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,104,30,0)
^9002313.9103^1^1^3101004^
"DATA",9002313.91,104,30,1,0)
D SET338^BPSFLD01
"DATA",9002313.91,105,0)
339^^OTHER PAYER ID QUALIFIER^N^^^^2^A/N
"DATA",9002313.91,105,5)
6C^2^^7^31
"DATA",9002313.91,105,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,105,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,105,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,105,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,105,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,105,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,105,30,0)
^9002313.9103^1^1^3101004^
"DATA",9002313.91,105,30,1,0)
D SET339^BPSFLD01
"DATA",9002313.91,106,0)
340^^OTHER PAYER ID^A/N^^^^10^A/N
"DATA",9002313.91,106,5)
7C^10^^7^31
"DATA",9002313.91,106,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,106,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,106,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,106,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,106,25,0)
^9002313.9104^1^1^3040223^^
"DATA",9002313.91,106,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,106,30,0)
^9002313.9103^1^1^3101004^^
"DATA",9002313.91,106,30,1,0)
D SET340^BPSFLD01
"DATA",9002313.91,107,0)
341^^OTHER PAYER AMOUNT PAID COUNT^N^^^^1^N
"DATA",9002313.91,107,5)
HB^1^^7
"DATA",9002313.91,107,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,107,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,107,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,107,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,107,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,107,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,107,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,107,30,1,0)
D SET341^BPSFLD01
"DATA",9002313.91,108,0)
342^^OTHER PAYER AMT PAID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,108,1)
OTHER PAYER AMOUNT PAID QUALIFIER
"DATA",9002313.91,108,5)
HC^2^^7
"DATA",9002313.91,108,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,108,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,108,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,108,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,108,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,108,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,108,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,108,30,1,0)
D SET342^BPSFLD01
"DATA",9002313.91,109,0)
343^^DISPENSING STATUS^A/N^^^^1^A/N
"DATA",9002313.91,109,5)
HD^1^^4
"DATA",9002313.91,109,10,0)
^9002313.9101^1^1^3040913
"DATA",9002313.91,109,10,1,0)
S BPS("X")=""
"DATA",9002313.91,109,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,109,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,109,25,0)
^9002313.9104^1^1^3040913^^^^
"DATA",9002313.91,109,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,109,30,0)
^9002313.9103^1^1^3070620^
"DATA",9002313.91,109,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),340),U,3)=""
"DATA",9002313.91,110,0)
344^^QTY INTENDED TO BE DISPENSED^N^^^^10^N
"DATA",9002313.91,110,1)
QUANTITY INTENDED TO BE DISPENSED
"DATA",9002313.91,110,5)
HF^10^^4
"DATA",9002313.91,110,10,0)
^9002313.9101^1^1^3070620
"DATA",9002313.91,110,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Quantity"))*1000\1
"DATA",9002313.91,110,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,110,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,110,25,0)
^9002313.9104^1^1^3070620^
"DATA",9002313.91,110,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,110,30,0)
^9002313.9103^1^1^3070620^
"DATA",9002313.91,110,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),340),U,4)=""
"DATA",9002313.91,111,0)
345^^DAYS SUPPLY INTEND TO BE DISP^N^^^^3^N
"DATA",9002313.91,111,1)
DAYS SUPPLY INTENDED TO BE DISPENSED
"DATA",9002313.91,111,5)
HG^3^^4
"DATA",9002313.91,111,10,0)
^9002313.9101^1^1^3030827
"DATA",9002313.91,111,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Days Supply"))*1000
"DATA",9002313.91,111,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,111,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,111,25,0)
^9002313.9104^1^1^3030827^^^
"DATA",9002313.91,111,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,111,30,0)
^9002313.9103^1^1^3070620^
"DATA",9002313.91,111,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),340),U,5)=""
"DATA",9002313.91,112,0)
346^^BASIS OF CALC - DISPENSING FEE^A/N^^^^2^A/N
"DATA",9002313.91,112,5)
HH^8^^^28
"DATA",9002313.91,112,10,0)
^9002313.9101^1^1^3171117^^
"DATA",9002313.91,112,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,112,25,0)
^9002313.9104^1^1^3171117^^
"DATA",9002313.91,112,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,112,30,0)
^9002313.9103^1^1^3171117^^
"DATA",9002313.91,112,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),340),U,6)=BPS("X")
"DATA",9002313.91,113,0)
347^^BASIS OF CALC - COPAY^A/N^^^^2^A/N
"DATA",9002313.91,113,5)
HJ^8^^^28
"DATA",9002313.91,113,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,113,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,113,25,0)
^9002313.9104^1^1^3040114^^^
"DATA",9002313.91,113,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,113,30,0)
^9002313.9103^1^1^3040114^^^
"DATA",9002313.91,113,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),340),U,7)=BPS("X")
"DATA",9002313.91,114,0)
348^^BASIS OF CALC - REGULATORY FEE^A/N^^^^2^A/N
"DATA",9002313.91,114,5)
HK^8^^^28
"DATA",9002313.91,114,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,114,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,114,25,0)
^^1^1^3031205^
"DATA",9002313.91,114,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,114,30,0)
^^1^1^3031205^
"DATA",9002313.91,114,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),340),U,8)=BPS("X")
"DATA",9002313.91,115,0)
349^^BASIS OF CALC - % TAX^A/N^^^^2^A/N
"DATA",9002313.91,115,5)
HM^8^^^28
"DATA",9002313.91,115,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,115,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,115,25,0)
^^1^1^3031205^
"DATA",9002313.91,115,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,115,30,0)
^^1^1^3031205^
"DATA",9002313.91,115,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),340),U,9)=BPS("X")
"DATA",9002313.91,116,0)
350^^PATIENT E-MAIL ADDRESS^A/N^^^^80^A/N
"DATA",9002313.91,116,5)
HN^80^^2
"DATA",9002313.91,116,10,0)
^9002313.9101^1^1^3030512
"DATA",9002313.91,116,10,1,0)
S BPS("X")=$G(BPS("Patient","Patient E-Mail Address"))
"DATA",9002313.91,116,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,116,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),80)
"DATA",9002313.91,116,30,0)
^9002313.9103^1^1^3101101^^^
"DATA",9002313.91,116,30,1,0)
S $P(^BPSC(BPS(9002313.02),340),U,10)=$G(BPS("X"))
"DATA",9002313.91,117,0)
351^^OTHER PAYER-PAT RESP AMT QLFR^A/N^^^^2^A/N
"DATA",9002313.91,117,1)
OTHER PAYER-PATIENT RESPONSIBILITY AMOUNT QUALIFIER
"DATA",9002313.91,117,5)
NP^1^^7
"DATA",9002313.91,117,10,0)
^^1^1^3101222^
"DATA",9002313.91,117,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,117,20,0)
^9002313.9102^1^1^3101220^
"DATA",9002313.91,117,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,117,30,0)
^^1^1^3101222^
"DATA",9002313.91,117,30,1,0)
D SET351^BPSFLD01
"DATA",9002313.91,118,0)
352^^OTHER PAYER-PAT RESP AMOUNT^D^^^^10^D
"DATA",9002313.91,118,1)
OTHER PAYER-PATIENT RESPONSIBILITY AMOUNT
"DATA",9002313.91,118,5)
NQ^10^^7
"DATA",9002313.91,118,10,0)
^^1^1^3101222^
"DATA",9002313.91,118,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,118,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,118,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,118,25,0)
^9002313.9104^1^1^3031212^
"DATA",9002313.91,118,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,118,30,0)
^9002313.9103^1^1^3101222^^
"DATA",9002313.91,118,30,1,0)
D SET352^BPSFLD01
"DATA",9002313.91,119,0)
353^^OTHER PAYER-PAT RESP AMT CNT^N^^^^2^N
"DATA",9002313.91,119,1)
OTHER PAYER-PATIENT RESPONSIBILITY AMOUNT COUNT
"DATA",9002313.91,119,5)
NR^1^^7
"DATA",9002313.91,119,10,0)
^^1^1^3101222^
"DATA",9002313.91,119,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,119,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,119,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,119,30,0)
^9002313.9103^1^1^3101222^^
"DATA",9002313.91,119,30,1,0)
D SET353^BPSFLD01
"DATA",9002313.91,120,0)
445^^ORIG PRESCRIBED PROD/SERV CODE^A/N^^^^19^A/N
"DATA",9002313.91,120,1)
ORIGINALLY PRESCRIBED PRODUCT/SERVICE CODE
"DATA",9002313.91,120,5)
EA^19^^4
"DATA",9002313.91,120,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,120,10,1,0)
S BPS("X")=""
"DATA",9002313.91,120,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,120,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,120,25,0)
^9002313.9104^1^1^3040107^^
"DATA",9002313.91,120,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),19)
"DATA",9002313.91,120,30,0)
^9002313.9103^1^1^3101115^
"DATA",9002313.91,120,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,5)="" 
"DATA",9002313.91,121,0)
446^^ORIGINALLY PRESCRIBED QUANTITY^N^^^^10^N
"DATA",9002313.91,121,5)
EB^10^^4
"DATA",9002313.91,121,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,121,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Quantity"))*1000\1
"DATA",9002313.91,121,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,121,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,121,25,0)
^9002313.9104^1^1^3030828^^^^
"DATA",9002313.91,121,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,121,30,0)
^9002313.9103^1^1^3030828^^^^
"DATA",9002313.91,121,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,6)=BPS("X") ;VA
"DATA",9002313.91,122,0)
454^^SCHEDULED PRESCRIPTION ID NUM^N^^^^12^A/N
"DATA",9002313.91,122,1)
SCHEDULED PRESCRIPTION ID NUMBER
"DATA",9002313.91,122,5)
EK^12^^4
"DATA",9002313.91,122,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,122,10,1,0)
S BPS("X")=""
"DATA",9002313.91,122,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,122,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,122,25,0)
^9002313.9104^1^1^3040224^^
"DATA",9002313.91,122,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),12)
"DATA",9002313.91,122,30,0)
^9002313.9103^1^1^3040224^^
"DATA",9002313.91,122,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,4)=BPS("X")
"DATA",9002313.91,123,0)
456^^ASSOC PRESCRIPTION/SERV REF NO^A/N^^^^12^N
"DATA",9002313.91,123,1)
ASSOCIATED PRESCRIPTION/ SERVICE REFERENCE NUMBER
"DATA",9002313.91,123,5)
EN^7^^4
"DATA",9002313.91,123,10,0)
^9002313.9101^1^1^3030823
"DATA",9002313.91,123,10,1,0)
S BPS("X")=""
"DATA",9002313.91,123,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,123,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,123,25,0)
^9002313.9104^1^1^3030823^^
"DATA",9002313.91,123,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),7)
"DATA",9002313.91,123,30,0)
^^1^1^3110720^
"DATA",9002313.91,123,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,6)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,124,0)
457^^ASSOC PRESCRIPTION/SERV DATE^A/N^^^^8^N
"DATA",9002313.91,124,1)
ASSOCIATED PRESCRIPTION/ SERVICE DATE
"DATA",9002313.91,124,5)
EP^8^^4
"DATA",9002313.91,124,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,124,10,1,0)
S BPS("X")=""
"DATA",9002313.91,124,20,0)
^9002313.9102^1^1^3101029^
"DATA",9002313.91,124,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,124,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,124,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,124,30,0)
^9002313.9103^1^1^3110720^^
"DATA",9002313.91,124,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,7)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,125,0)
458^^PROCEDURE MODIFIER CODE COUNT^N^^^^2^N
"DATA",9002313.91,125,5)
SE^1^^4
"DATA",9002313.91,125,10,0)
^9002313.9101^1^1^3040819
"DATA",9002313.91,125,10,1,0)
S BPS("X")=""
"DATA",9002313.91,125,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,125,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,125,25,0)
^9002313.9104^1^1^3040819^^^^
"DATA",9002313.91,125,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),1)
"DATA",9002313.91,125,30,0)
^9002313.9103^1^1^3040819^
"DATA",9002313.91,125,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),450),U,8)=""
"DATA",9002313.91,126,0)
459^^PROCEDURE MODIFIER CODE^A/N^^^^2^A/N
"DATA",9002313.91,126,5)
ER^2^^4
"DATA",9002313.91,126,10,0)
^9002313.9101^1^1^3040819
"DATA",9002313.91,126,10,1,0)
S BPS("X")=""
"DATA",9002313.91,126,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,126,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,126,25,0)
^9002313.9104^1^1^3040819^^^^
"DATA",9002313.91,126,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,126,30,0)
^^1^1^3110727^
"DATA",9002313.91,126,30,1,0)
; Not implemented
"DATA",9002313.91,127,0)
461^^PRIOR AUTHORIZATION TYPE CODE^N^^^^2^N
"DATA",9002313.91,127,5)
EU^2^^4
"DATA",9002313.91,127,10,0)
^9002313.9101^2^2^3101115^
"DATA",9002313.91,127,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Prior Auth Type"))
"DATA",9002313.91,127,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,127,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,127,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,127,25,0)
^9002313.9104^1^1^3031222^^^^
"DATA",9002313.91,127,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,127,30,0)
^9002313.9103^1^1^3031222^^^^
"DATA",9002313.91,127,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,1)=BPS("X")
"DATA",9002313.91,128,0)
462^^PRIOR AUTH NUMBER SUBMITTED^A/N^^^^11^N
"DATA",9002313.91,128,1)
PRIOR AUTHORIZATION NUMBER SUBMITTED
"DATA",9002313.91,128,5)
EV^11^^4
"DATA",9002313.91,128,10,0)
^9002313.9101^1^1^3031222
"DATA",9002313.91,128,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Prior Auth Num Sub"))
"DATA",9002313.91,128,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,128,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,128,25,0)
^9002313.9104^1^1^3031222^^^^
"DATA",9002313.91,128,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,128,30,0)
^9002313.9103^1^1^3031222^^^^
"DATA",9002313.91,128,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,2)=BPS("X")
"DATA",9002313.91,129,0)
464^^INTERMEDIARY AUTHORIZATION ID^A/N^^^^11^A/N
"DATA",9002313.91,129,5)
EX^11^^4
"DATA",9002313.91,129,10,0)
^^2^2^3110727^
"DATA",9002313.91,129,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Intermediary Auth ID"))
"DATA",9002313.91,129,10,2,0)
S:BPS("X")="" BPS("X")=""
"DATA",9002313.91,129,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,129,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,129,25,0)
^9002313.9104^1^1^3030823^
"DATA",9002313.91,129,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),11)
"DATA",9002313.91,129,30,0)
^9002313.9103^1^1^3030823^^^
"DATA",9002313.91,129,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,4)=BPS("X")
"DATA",9002313.91,130,0)
471^^OTHER PAYER REJECT COUNT^N^^^^2^N
"DATA",9002313.91,130,5)
5E^2^^7
"DATA",9002313.91,130,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,130,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,130,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,130,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,130,25,0)
^9002313.9104^1^1^3040224^^
"DATA",9002313.91,130,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,130,30,0)
^9002313.9103^1^1^3100824
"DATA",9002313.91,130,30,1,0)
D SET471^BPSFLD01
"DATA",9002313.91,131,0)
472^^OTHER PAYER REJECT CODE^A/N^^^^3^A/N
"DATA",9002313.91,131,5)
6E^3^^7
"DATA",9002313.91,131,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,131,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,131,20,0)
^9002313.9102^1^1^3101206^
"DATA",9002313.91,131,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,131,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,131,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,131,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,131,30,1,0)
D SET472^BPSFLD01
"DATA",9002313.91,132,0)
473^^DUR/PPS CODE COUNTER^N^^^^1^N
"DATA",9002313.91,132,5)
7E^1^^9
"DATA",9002313.91,132,10,0)
^9002313.9101^1^1^3031230
"DATA",9002313.91,132,10,1,0)
S BPS("X")=1
"DATA",9002313.91,132,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,132,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,132,25,0)
^9002313.9104^1^1^3031230^^^^
"DATA",9002313.91,132,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,132,30,0)
^9002313.9103^1^1^3031230^^^^
"DATA",9002313.91,132,30,1,0)
D FLD473^BPSOSSG
"DATA",9002313.91,133,0)
474^^DUR/PPS LEVEL OF EFFORT^N^^^^2^N
"DATA",9002313.91,133,5)
8E^2^^9
"DATA",9002313.91,133,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,133,10,1,0)
S BPS("X")=12
"DATA",9002313.91,133,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,133,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,133,25,0)
^9002313.9104^1^1^3030718^
"DATA",9002313.91,133,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,133,30,0)
^9002313.9103^1^1^3030718^
"DATA",9002313.91,133,30,1,0)
D FLD474^BPSOSSG
"DATA",9002313.91,134,0)
475^^DUR CO-AGENT ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,134,5)
J9^2^^9
"DATA",9002313.91,134,10,0)
^9002313.9101^1^1^3030718
"DATA",9002313.91,134,10,1,0)
S BPS("X")=""
"DATA",9002313.91,134,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,134,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,134,25,0)
^9002313.9104^1^1^3030718^
"DATA",9002313.91,134,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,134,30,0)
^9002313.9103^1^1^3030718^
"DATA",9002313.91,134,30,1,0)
D FLD475^BPSOSSG
"DATA",9002313.91,135,0)
476^^DUR CO-AGENT ID^A/N^^^^19^A/N
"DATA",9002313.91,135,5)
H6^19^^9
"DATA",9002313.91,135,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,135,10,1,0)
S BPS("X")=""
"DATA",9002313.91,135,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,135,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,135,25,0)
^9002313.9104^1^1^3040107^^^
"DATA",9002313.91,135,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,135,30,0)
^9002313.9103^1^1^3101115^^^^
"DATA",9002313.91,135,30,1,0)
D FLD476^BPSOSSG
"DATA",9002313.91,136,0)
477^^PROF SERVICE FEE SUBMITTED^D^^^^8^D
"DATA",9002313.91,136,1)
PROFESSIONAL SERVICE FEE SUBMITTED
"DATA",9002313.91,136,5)
BE^8^^10
"DATA",9002313.91,136,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,136,10,1,0)
S BPS("X")=0
"DATA",9002313.91,136,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,136,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,136,25,0)
^9002313.9104^1^1^3101029^
"DATA",9002313.91,136,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,136,30,0)
^9002313.9103^1^1^3030823^^
"DATA",9002313.91,136,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),470),U,7)=BPS("X")
"DATA",9002313.91,139,0)
481^^REGULATORY FEE AMT SUBMITTED^D^^^^8^D
"DATA",9002313.91,139,1)
REGULATORY FEE AMOUNT SUBMITTED
"DATA",9002313.91,139,5)
HA^8^^10
"DATA",9002313.91,139,10,0)
^9002313.9101^1^1^3100916
"DATA",9002313.91,139,10,1,0)
S BPS("X")=0
"DATA",9002313.91,139,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,139,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,139,25,0)
^9002313.9104^1^1^3040907^^
"DATA",9002313.91,139,25,1,0)
S BPS("X")=$$DFF^BPSECFM(BPS("X"),8)
"DATA",9002313.91,139,30,0)
^9002313.9103^1^1^3100923^^^^
"DATA",9002313.91,139,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,1)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,140,0)
482^^PERCENT TAX AMT SUBMITTED^D^^^^8^D
"DATA",9002313.91,140,1)
PERCENT TAX AMOUNT SUBMITTED
"DATA",9002313.91,140,5)
GE^8^^10
"DATA",9002313.91,140,10,0)
^9002313.9101^1^1^3050802
"DATA",9002313.91,140,10,1,0)
S BPS("X")=0
"DATA",9002313.91,140,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,140,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,140,25,0)
^9002313.9104^1^1^3040907^^^^
"DATA",9002313.91,140,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,140,30,0)
^9002313.9103^1^1^3100923^^^^
"DATA",9002313.91,140,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,2)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,141,0)
483^^PERCENT TAX RATE SUBMITTED^D^^^^7^D
"DATA",9002313.91,141,1)
PERCENTAGE SALES TAX RATE SUBMITTED
"DATA",9002313.91,141,5)
HE^7^^10
"DATA",9002313.91,141,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,141,10,1,0)
S BPS("X")=+$G(BPS("Insurer","Percent Sales Tax Rate Sub"))
"DATA",9002313.91,141,20,0)
^^1^1^3121128
"DATA",9002313.91,141,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),7,4)
"DATA",9002313.91,141,25,0)
^^1^1^3121128
"DATA",9002313.91,141,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),7,4)
"DATA",9002313.91,141,30,0)
^9002313.9103^1^1^3100923^^^^
"DATA",9002313.91,141,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,3)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,142,0)
484^^PERCENTAGE TAX BASIS SBMTTD^A/N^^^^2^A/N
"DATA",9002313.91,142,1)
PERCENTAGE SALES TAX BASIS SUBMITTED
"DATA",9002313.91,142,5)
JE^2^^10
"DATA",9002313.91,142,10,0)
^9002313.9101^1^1^3050802
"DATA",9002313.91,142,10,1,0)
S BPS("X")=""
"DATA",9002313.91,142,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,142,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,142,25,0)
^9002313.9104^1^1^3030824^
"DATA",9002313.91,142,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),2)
"DATA",9002313.91,142,30,0)
^9002313.9103^1^1^3100923^^^^
"DATA",9002313.91,142,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,4)=$S($G(BPS("NCPDP","Version"))=51:BPS("X"),1:"")
"DATA",9002313.91,143,0)
485^^COUPON TYPE^A/N^^^^2^A/N
"DATA",9002313.91,143,5)
KE^2^^11
"DATA",9002313.91,143,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,143,10,1,0)
S BPS("X")=""
"DATA",9002313.91,143,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,143,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,143,25,0)
^9002313.9104^1^1^3040107^^
"DATA",9002313.91,143,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,143,30,0)
^9002313.9103^1^1^3101115^^^
"DATA",9002313.91,143,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,5)=BPS("X")
"DATA",9002313.91,144,0)
486^^COUPON NUMBER^A/N^^^^15^A/N
"DATA",9002313.91,144,5)
ME^15^^11
"DATA",9002313.91,144,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,144,10,1,0)
S BPS("X")=""
"DATA",9002313.91,144,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,144,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,144,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,144,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,144,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,144,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,6)=BPS("X")
"DATA",9002313.91,145,0)
487^^COUPON VALUE AMOUNT^D^^^^8^D
"DATA",9002313.91,145,5)
NE^8^^11
"DATA",9002313.91,145,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,145,10,1,0)
S BPS("X")=""
"DATA",9002313.91,145,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,145,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,145,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,145,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,145,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,145,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),480),U,7)=BPS("X")
"DATA",9002313.91,146,0)
491^^DIAGNOSIS CODE COUNT^N^^^^1^N
"DATA",9002313.91,146,5)
VE^1^^14
"DATA",9002313.91,146,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,146,10,1,0)
S BPS("X")=""
"DATA",9002313.91,146,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,146,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,146,25,0)
^9002313.9104^1^1^3040107^^^^
"DATA",9002313.91,146,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,147,0)
492^^DIAGNOSIS CODE QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,147,5)
WE^2^^14
"DATA",9002313.91,147,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,147,10,1,0)
S BPS("X")=""
"DATA",9002313.91,147,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,147,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,147,25,0)
^9002313.9104^1^1^3040224^^^
"DATA",9002313.91,147,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,148,0)
493^^CLINICAL INFORMATION COUNTER^N^^^^1^N
"DATA",9002313.91,148,5)
XE^1^^14
"DATA",9002313.91,148,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,148,10,1,0)
S BPS("X")=""
"DATA",9002313.91,148,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,148,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,148,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,148,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,149,0)
498.01^^REQUEST TYPE^N^^^^1^A/N
"DATA",9002313.91,149,5)
PA^1^^13
"DATA",9002313.91,149,10,0)
^9002313.9101^1^1^3040428
"DATA",9002313.91,149,10,1,0)
S BPS("X")=""
"DATA",9002313.91,149,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,149,20,1,0)
S BPS("X")=""
"DATA",9002313.91,149,25,0)
^9002313.9104^1^1^3040428^
"DATA",9002313.91,149,25,1,0)
S BPS("X")=""
"DATA",9002313.91,150,0)
498.02^^REQUEST PERIOD DATE-BEGIN^A/N^^^^8^N
"DATA",9002313.91,150,5)
PB^8^^13
"DATA",9002313.91,150,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,150,10,1,0)
S BPS("X")=""
"DATA",9002313.91,150,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,150,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,151,0)
498.03^^REQUEST PERIOD DATE-END^A/N^^^^8^N
"DATA",9002313.91,151,5)
PC^8^^13
"DATA",9002313.91,151,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,151,10,1,0)
S BPS("X")=""
"DATA",9002313.91,151,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,151,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,152,0)
498.04^^BASIS OF REQUEST^A/N^^^^2^A/N
"DATA",9002313.91,152,5)
PD^2^^13
"DATA",9002313.91,152,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,152,10,1,0)
S BPS("X")=""
"DATA",9002313.91,152,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,152,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,153,0)
498.05^^AUTHORIZED REP FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,153,5)
PE^12^^13
"DATA",9002313.91,153,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,153,10,1,0)
S BPS("X")=""
"DATA",9002313.91,153,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,153,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,154,0)
498.06^^AUTHORIZED REP LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,154,5)
PF^15^^13
"DATA",9002313.91,154,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,154,10,1,0)
S BPS("X")=""
"DATA",9002313.91,154,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,154,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,155,0)
498.07^^AUTHORIZED REP STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,155,5)
PG^30^^13
"DATA",9002313.91,155,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,155,10,1,0)
S BPS("X")=""
"DATA",9002313.91,155,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,155,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,156,0)
498.08^^AUTH REP CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,156,5)
PH^20^^13
"DATA",9002313.91,156,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,156,10,1,0)
S BPS("X")=""
"DATA",9002313.91,156,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,156,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,157,0)
498.09^^AUTHORIZED REP STATE/PROV ADDR^A/N^^^^2^A/N
"DATA",9002313.91,157,5)
PJ^2^^13
"DATA",9002313.91,157,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,157,10,1,0)
S BPS("X")=""
"DATA",9002313.91,157,20,0)
^9002313.9102^1^1^3101206^
"DATA",9002313.91,157,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,158,0)
498.11^^AUTHORIZED REP ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,158,1)
AUTHORIZED REPRESENTATIVE ZIP/POSTAL ZONE
"DATA",9002313.91,158,5)
PK^15^^13
"DATA",9002313.91,158,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,158,10,1,0)
S BPS("X")=""
"DATA",9002313.91,158,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,158,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,159,0)
498.12^^PRESCRIBER TELEPHONE NUMBER^N^^^^10^N
"DATA",9002313.91,159,5)
PM^10^^6
"DATA",9002313.91,159,10,0)
^9002313.9101^1^1^3050802
"DATA",9002313.91,159,10,1,0)
S BPS("X")=$TR($G(BPS("RX",BPS(9002313.0201),"Prescriber Phone #")),"#() -_*.@")
"DATA",9002313.91,159,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,159,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,159,25,0)
^9002313.9104^1^1^3030722^^
"DATA",9002313.91,159,25,1,0)
S BPS("X")=$$NFF^BPSECFM(BPS("X"),10)
"DATA",9002313.91,159,30,0)
^9002313.9103^1^1^3030722^^
"DATA",9002313.91,159,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),498),U,12)=BPS("X")
"DATA",9002313.91,160,0)
498.13^^PRIOR AUTH SUPPORTING DOCUMENT^A/N^^^^500^A/N
"DATA",9002313.91,160,5)
PP^200^^13
"DATA",9002313.91,160,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,160,10,1,0)
S BPS("X")=""
"DATA",9002313.91,160,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,160,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),500)
"DATA",9002313.91,161,0)
498.14^^PRIOR AUTH NUMBER-ASSIGNED^N^^^^11^N
"DATA",9002313.91,161,5)
PY^8^^^30
"DATA",9002313.91,161,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,161,10,1,0)
S BPS("X")=""
"DATA",9002313.91,161,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,161,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,162,0)
498.52^^PRIOR AUTH EFFECTIVE DATE^A/N^^^^8^N
"DATA",9002313.91,162,5)
PS^8^^^30
"DATA",9002313.91,162,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,162,10,1,0)
S BPS("X")=""
"DATA",9002313.91,162,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,162,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,163,0)
498.53^^PRIOR AUTH EXPIRATION DATE^A/N^^^^8^N
"DATA",9002313.91,163,5)
PT^8^^^30
"DATA",9002313.91,163,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,163,10,1,0)
S BPS("X")=""
"DATA",9002313.91,163,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,163,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,164,0)
498.54^^PRIOR AUTH NO REFILLS AUTH^N^^^^2^N
"DATA",9002313.91,164,5)
PW^8^^^30
"DATA",9002313.91,164,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,164,10,1,0)
S BPS("X")=""
"DATA",9002313.91,164,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,164,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,165,0)
498.55^^PRIOR AUTH QTY ACCUMULATED^N^^^^10^N
"DATA",9002313.91,165,5)
PX^8^^^30
"DATA",9002313.91,165,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,165,10,1,0)
S BPS("X")=""
"DATA",9002313.91,165,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,165,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,166,0)
498.57^^PRIOR AUTHORIZATION QUANTITY^A/N^^^^10^N
"DATA",9002313.91,166,5)
RA^3^^^30
"DATA",9002313.91,166,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,166,10,1,0)
S BPS("X")=""
"DATA",9002313.91,166,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,166,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,167,0)
498.58^^PRIOR AUTH DOLLARS AUTHORIZED^N^^^^8^D
"DATA",9002313.91,167,5)
RB^8^^^30
"DATA",9002313.91,167,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,167,10,1,0)
S BPS("X")=""
"DATA",9002313.91,167,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,167,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,168,0)
498.59^^AUTH REP CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,168,5)
PH^20^^13
"DATA",9002313.91,168,10,0)
^9002313.9101^1^1^3030512
"DATA",9002313.91,168,10,1,0)
S BPS("X")=""
"DATA",9002313.91,168,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,168,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,169,0)
501^^HEADER RESPONSE STATUS^A/N^^^^1^A/N
"DATA",9002313.91,169,5)
F1^1^^^22
"DATA",9002313.91,169,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,169,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,169,25,0)
^9002313.9104^1^1^3040202^^^
"DATA",9002313.91,169,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,169,30,0)
^9002313.9103^1^1^3040202^^^
"DATA",9002313.91,169,30,1,0)
S $P(^BPSR(BPS(9002313.02),500),U,1)=BPS("X")
"DATA",9002313.91,170,0)
503^^AUTHORIZATION NUMBER^A/N^^^^20^A/N
"DATA",9002313.91,170,5)
F3^20^^^26
"DATA",9002313.91,170,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,170,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,170,30,0)
^^1^1^3031205^
"DATA",9002313.91,170,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,3)=BPS("X")
"DATA",9002313.91,171,0)
504^^MESSAGE^A/N^^^^200^A/N
"DATA",9002313.91,171,5)
F4^200^^^23
"DATA",9002313.91,171,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,171,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,171,25,0)
^^1^1^3031211^
"DATA",9002313.91,171,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),200)
"DATA",9002313.91,171,30,0)
^^1^1^3031211^
"DATA",9002313.91,171,30,1,0)
S $P(^BPSR(BPS(9002313.02),504),U,1)=BPS("X")
"DATA",9002313.91,172,0)
505^^PATIENT PAY AMOUNT^A/N^^^^8^D
"DATA",9002313.91,172,5)
F5^8^^^28
"DATA",9002313.91,172,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,172,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,172,25,0)
^9002313.9104^1^1^3031212^^
"DATA",9002313.91,172,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,172,30,0)
^9002313.9103^1^1^3031212^^
"DATA",9002313.91,172,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,5)=S BPS("X")
"DATA",9002313.91,173,0)
506^^INGREDIENT COST PAID^A/N^^^^8^D
"DATA",9002313.91,173,5)
F6^8^^^28
"DATA",9002313.91,173,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,173,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,173,25,0)
^9002313.9104^1^1^3031211^^
"DATA",9002313.91,173,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,173,30,0)
^9002313.9103^1^1^3031211^^
"DATA",9002313.91,173,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,6)=BPS("X")
"DATA",9002313.91,174,0)
507^^DISPENSING FEE PAID^A/N^^^^8^D
"DATA",9002313.91,174,5)
F7^8^^^28
"DATA",9002313.91,174,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,174,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,174,25,0)
^9002313.9104^1^1^3031210^^^
"DATA",9002313.91,174,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,174,30,0)
^9002313.9103^1^1^3031210^^^
"DATA",9002313.91,174,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,7)=BPS("X")
"DATA",9002313.91,175,0)
509^^TOTAL AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,175,5)
F9^8^^^28
"DATA",9002313.91,175,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,175,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,175,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,175,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,175,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,175,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,9)
"DATA",9002313.91,176,0)
510^^REJECT COUNT^N^^^^2^N
"DATA",9002313.91,176,5)
FA^2^^^26
"DATA",9002313.91,176,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,176,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,176,25,0)
^^1^1^3031217^
"DATA",9002313.91,176,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,176,30,0)
^^1^1^3031217^
"DATA",9002313.91,176,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,10)=BPS("X")
"DATA",9002313.91,177,0)
511^^REJECT CODE^A/N^^^^3^A/N
"DATA",9002313.91,177,5)
FB^3^^^26
"DATA",9002313.91,177,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,177,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,177,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,177,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,177,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,177,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),511,DUR,0),U,1)
"DATA",9002313.91,178,0)
512^^ACCUMULATED DEDUCTIBLE AMOUNT^A/N^^^^8^D
"DATA",9002313.91,178,5)
FC^8^^^28
"DATA",9002313.91,178,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,178,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,178,25,0)
^9002313.9104^1^1^3031210^^^^
"DATA",9002313.91,178,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,178,30,0)
^9002313.9103^1^1^3031210^^^^
"DATA",9002313.91,178,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),"^",10)=BPS("X")
"DATA",9002313.91,179,0)
513^^REMAINING DEDUCTIBLE AMOUNT^A/N^^^^8^D
"DATA",9002313.91,179,5)
FD^8^^^28
"DATA",9002313.91,179,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,179,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,179,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,179,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,179,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,179,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,13)=BPS("X")
"DATA",9002313.91,180,0)
514^^REMAINING BENEFIT AMOUNT^A/N^^^^8^D
"DATA",9002313.91,180,5)
FE^8^^^28
"DATA",9002313.91,180,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,180,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,180,25,0)
^9002313.9104^1^1^3031217^^^
"DATA",9002313.91,180,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,180,30,0)
^9002313.9103^1^1^3031217^^^
"DATA",9002313.91,180,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,14)
"DATA",9002313.91,182,0)
517^^AMT APPLIED TO PERIODIC DEDUCT^D^^^^8^D
"DATA",9002313.91,182,5)
FH^8^^^28
"DATA",9002313.91,182,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,182,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,182,25,0)
^9002313.9104^1^1^3031205^^^
"DATA",9002313.91,182,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,182,30,0)
^9002313.9103^1^1^3031205^^
"DATA",9002313.91,182,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),"^",17)=BPS("X")
"DATA",9002313.91,183,0)
518^^AMOUNT OF COPAY^D^^^^8^D
"DATA",9002313.91,183,5)
FI^8^^^28
"DATA",9002313.91,183,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,183,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,183,25,0)
^^1^1^3031205^
"DATA",9002313.91,183,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,183,30,0)
^^1^1^3031205^
"DATA",9002313.91,183,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),"^",18)=BPS("X")
"DATA",9002313.91,184,0)
519^^AMT ATTRIBUTED TO PRODUCT SEL^D^^^^8^D
"DATA",9002313.91,184,5)
FJ^8
"DATA",9002313.91,184,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,184,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,184,25,0)
^^1^1^3031205^
"DATA",9002313.91,184,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,184,30,0)
^^1^1^3031205^
"DATA",9002313.91,184,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,19)=BPS("X")
"DATA",9002313.91,185,0)
520^^AMOUNT EXCEEDING PERIODIC MAX^D^^^^8^D
"DATA",9002313.91,185,5)
FK^8^^^28
"DATA",9002313.91,185,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,185,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,185,25,0)
^^1^1^3031205^
"DATA",9002313.91,185,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,185,30,0)
^^1^1^3031205^
"DATA",9002313.91,185,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,20)=BPS("X")
"DATA",9002313.91,186,0)
521^^INCENTIVE AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,186,5)
FL^8^^^28
"DATA",9002313.91,186,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,186,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,186,25,0)
^^1^1^3031210^
"DATA",9002313.91,186,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,186,30,0)
^^1^1^3031210^
"DATA",9002313.91,186,30,1,0)
$P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,21)=BPS("X")
"DATA",9002313.91,187,0)
522^^BASIS OF REIMB DETERMINATION^N^^^^2^N
"DATA",9002313.91,187,5)
FM^2^^^28
"DATA",9002313.91,187,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,187,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,187,25,0)
^^1^1^3031205^
"DATA",9002313.91,187,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,187,30,0)
^^1^1^3031205^
"DATA",9002313.91,187,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),U,22)=BPS("X")
"DATA",9002313.91,188,0)
523^^AMOUNT ATTRIBUTED TO SALES TAX^D^^^^8^D
"DATA",9002313.91,188,5)
FN^8^^^28
"DATA",9002313.91,188,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,188,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,188,25,0)
^^1^1^3031205^
"DATA",9002313.91,188,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,188,30,0)
^^1^1^3031205^
"DATA",9002313.91,188,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),500),"^",23)=BPS("X")
"DATA",9002313.91,189,0)
524^^PLAN ID^A/N^^^^8^A/N
"DATA",9002313.91,189,5)
FO^8^^3^24
"DATA",9002313.91,189,10,0)
^^1^1^3110301^
"DATA",9002313.91,189,10,1,0)
S BPS("X")=$G(BPS("Insurer","Plan ID"))
"DATA",9002313.91,189,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,189,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,189,25,0)
^9002313.9104^1^1^3061122^
"DATA",9002313.91,189,25,1,0)
S BPS("X")=$$ANFF^BPSECFM(BPS("X"),8)
"DATA",9002313.91,189,30,0)
^9002313.9103^1^1^3030825^^^^
"DATA",9002313.91,189,30,1,0)
S $P(^BPSC(BPS(9002313.02),520),U,4)=BPS("X")
"DATA",9002313.91,191,0)
526^^ADDITIONAL MESSAGE INFORMATION^A/N^^^^40^A/N
"DATA",9002313.91,191,5)
FQ^200^^^26
"DATA",9002313.91,191,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,191,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,191,25,0)
^9002313.9104^1^1^3031210^^^^
"DATA",9002313.91,191,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),200)
"DATA",9002313.91,191,30,0)
^9002313.9103^1^1^3031210^^^^
"DATA",9002313.91,191,30,1,0)
S ^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),526)=BPS("X")
"DATA",9002313.91,192,0)
528^^CLINICAL SIGNIFICANCE CODE^A/N^^^^1^A/N
"DATA",9002313.91,192,5)
FS^1^^^29
"DATA",9002313.91,192,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,192,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,192,25,0)
^9002313.9104^1^1^3031210^^^^
"DATA",9002313.91,192,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,192,30,0)
^9002313.9103^1^1^3180807^^^^
"DATA",9002313.91,192,30,1,0)
S ^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),525)=$G(BPS("X"))
"DATA",9002313.91,193,0)
529^^OTHER PHARMACY INDICATOR^A/N^^^^1^N
"DATA",9002313.91,193,5)
FT^1^^^29
"DATA",9002313.91,193,10,0)
^9002313.9101^1^1^3031212
"DATA",9002313.91,193,10,1,0)
S BPS("X")=""
"DATA",9002313.91,193,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,193,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,194,0)
530^^PREVIOUS DATE OF SERVICE^A/N^^^^8^N
"DATA",9002313.91,194,5)
FU^8^^^29
"DATA",9002313.91,194,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,194,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,194,25,0)
^^1^1^3031216^
"DATA",9002313.91,194,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X"))
"DATA",9002313.91,194,30,0)
^^1^1^3031216^
"DATA",9002313.91,194,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,5)=BPS("X")
"DATA",9002313.91,195,0)
531^^QTY OF PREVIOUS DISPENSING^N^^^^10^N
"DATA",9002313.91,195,5)
FV^8^^^29
"DATA",9002313.91,195,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,195,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,195,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,195,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,195,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,195,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,6)=BPS("X")
"DATA",9002313.91,196,0)
532^^DATABASE INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,196,5)
FW^1^^^29
"DATA",9002313.91,196,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,196,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,196,25,0)
^9002313.9104^1^1^3031210^^^
"DATA",9002313.91,196,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,196,30,0)
^9002313.9103^1^1^3031210^^^
"DATA",9002313.91,196,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,BPS(9002313.020101),0),U,7)=BPS("X")
"DATA",9002313.91,197,0)
533^^OTHER PRESCRIBER INDICATOR^A/N^^^^1^N
"DATA",9002313.91,197,5)
FX^1^^^29
"DATA",9002313.91,197,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,197,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,197,25,0)
^^1^1^3031212^
"DATA",9002313.91,197,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,197,30,0)
^^1^1^3031212^
"DATA",9002313.91,197,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,8)=BPS("X")
"DATA",9002313.91,199,0)
544^^DUR FREE TEXT MESSAGE^A/N^^^^30^A/N
"DATA",9002313.91,199,5)
FY^30^^^29
"DATA",9002313.91,199,10,0)
^9002313.9101^1^1^3101116^
"DATA",9002313.91,199,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,199,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,199,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,199,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,199,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,9)=BPS("X")
"DATA",9002313.91,200,0)
545^^NETWORK REIMBURSEMENT ID^A/N^^^^10^A/N
"DATA",9002313.91,200,5)
2F^10^^^24
"DATA",9002313.91,200,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,200,10,1,0)
S BPS("X")=""
"DATA",9002313.91,200,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,200,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,201,0)
546^^REJECTED FLD OCCURRENCE INDCTR^A/N^^^^2^N
"DATA",9002313.91,201,5)
4F^2^^^26
"DATA",9002313.91,201,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,201,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,201,25,0)
^9002313.9104^1^1^3031217^^
"DATA",9002313.91,201,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,201,30,0)
^9002313.9103^1^1^3031217^^
"DATA",9002313.91,201,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),511,DUR,0),U,2)=BPS("X")
"DATA",9002313.91,202,0)
547^^APPROVED MESSAGE CODE COUNT^A/N^^^^1^N
"DATA",9002313.91,202,5)
5F^1^^^26
"DATA",9002313.91,202,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,202,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,202,25,0)
^^1^1^3031205^
"DATA",9002313.91,202,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,202,30,0)
^^1^1^3031205^
"DATA",9002313.91,202,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),540),U,7)=BPS("X")
"DATA",9002313.91,203,0)
548^^APPROVED MESSAGE CODE^A/N^^^^3^A/N
"DATA",9002313.91,203,5)
6F^3^^^26
"DATA",9002313.91,203,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,203,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,203,25,0)
^9002313.9104^1^1^3031210^^^
"DATA",9002313.91,203,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,203,30,0)
^9002313.9103^1^1^3031210^^^
"DATA",9002313.91,203,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),548,0),B,4)=BPS("X")
"DATA",9002313.91,204,0)
549^^HELP DESK PHONE NUMBER QUAL^A/N^^^^2^A/N
"DATA",9002313.91,204,1)
HELP DESK TELEPHONE NUMBER QUALIFER
"DATA",9002313.91,204,5)
7F^2^^^26
"DATA",9002313.91,204,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,204,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,204,25,0)
^^1^1^3031210^
"DATA",9002313.91,204,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,204,30,0)
^^1^1^3031210^
"DATA",9002313.91,204,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),540),U,9)=BPS("X")
"DATA",9002313.91,205,0)
550^^HELP DESK TELEPHONE NUMBER^A/N^^^^18^A/N
"DATA",9002313.91,205,5)
8F^18^^^26
"DATA",9002313.91,205,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,205,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,205,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,205,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),18)
"DATA",9002313.91,205,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,205,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),540),U,10)=BPS("X")
"DATA",9002313.91,206,0)
551^^FORMULARY ALT PRODUCT COUNT^A/N^^^^1^N
"DATA",9002313.91,206,5)
9F^1^^^27
"DATA",9002313.91,206,10,0)
^9002313.9101^1^1^3171117^
"DATA",9002313.91,206,10,1,0)
S BPS("X")=""
"DATA",9002313.91,206,20,0)
^9002313.9102^1^1^3171117^
"DATA",9002313.91,206,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,207,0)
552^^FORMULARY ALT ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,207,5)
AP^2^^^27
"DATA",9002313.91,207,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,207,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,207,25,0)
^^1^1^3031216^
"DATA",9002313.91,207,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,207,30,0)
^^1^1^3031216^
"DATA",9002313.91,207,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,1)=BPS("X")
"DATA",9002313.91,208,0)
553^^FORMULARY ALTERNATIVE ID^A/N^^^^19^A/N
"DATA",9002313.91,208,5)
AR^19^^^27
"DATA",9002313.91,208,10,0)
^9002313.9101^1^1^3171117^^^
"DATA",9002313.91,208,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,208,25,0)
^9002313.9104^1^1^3171117^^
"DATA",9002313.91,208,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,208,30,0)
^9002313.9103^1^1^3171117^^
"DATA",9002313.91,208,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,2)=BPS("X")
"DATA",9002313.91,209,0)
554^^FORMULARY ALT INCENTIVE^A/N^^^^8^D
"DATA",9002313.91,209,5)
AS^8^^^27
"DATA",9002313.91,209,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,209,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,209,25,0)
^^1^1^3031216^
"DATA",9002313.91,209,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,209,30,0)
^^1^1^3031216^
"DATA",9002313.91,209,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,3)=BPS("X")
"DATA",9002313.91,210,0)
555^^FORMULARY ALT COST SHARE^A/N^^^^8^D
"DATA",9002313.91,210,5)
AT^8^^^27
"DATA",9002313.91,210,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,210,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,210,25,0)
^9002313.9104^1^1^3031216^^
"DATA",9002313.91,210,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,210,30,0)
^9002313.9103^1^1^3031216^^
"DATA",9002313.91,210,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,4)=BPS("X")
"DATA",9002313.91,211,0)
556^^FORMULARY ALT DESCRIPTION^A/N^^^^40^A/N
"DATA",9002313.91,211,5)
AU^40^^^27
"DATA",9002313.91,211,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,211,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,211,25,0)
^^1^1^3031216^
"DATA",9002313.91,211,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,211,30,0)
^^1^1^3031216^
"DATA",9002313.91,211,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),551.01,DUR,1),U,5)=BPS("X")
"DATA",9002313.91,212,0)
557^^PERCENT TAX EXEMPT INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,212,1)
PERCENTAGE TAX EXEMPT INDICATOR
"DATA",9002313.91,212,5)
AV^1^^^28
"DATA",9002313.91,212,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,212,10,1,0)
;This is Response-only field which does not use the GET FORMAT or SET code
"DATA",9002313.91,212,25,0)
^^1^1^3031217^
"DATA",9002313.91,212,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,212,30,0)
^^1^1^3031217^
"DATA",9002313.91,212,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),550),U,7)
"DATA",9002313.91,213,0)
558^^REGULATORY FEE AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,213,5)
AW^8^^^28
"DATA",9002313.91,213,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,213,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,213,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,213,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,213,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,213,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),550),U,8)=BPS("X")
"DATA",9002313.91,214,0)
559^^PERCENTAGE TAX AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,214,5)
AX^8^^^28
"DATA",9002313.91,214,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,214,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,214,25,0)
^9002313.9104^1^1^3031212^^
"DATA",9002313.91,214,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,214,30,0)
^9002313.9103^1^1^3031212^^^
"DATA",9002313.91,214,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),550),U,9)=BPS("X")
"DATA",9002313.91,215,0)
560^^PERCENTAGE TAX RATE PAID^A/N^^^^7^D
"DATA",9002313.91,215,5)
AY^8^^^28
"DATA",9002313.91,215,10,0)
^9002313.9101^1^1^3040223
"DATA",9002313.91,215,10,1,0)
S BPS("X")=""
"DATA",9002313.91,215,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,215,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),7)
"DATA",9002313.91,216,0)
561^^PERCENTAGE TAX BASIS PAID^A/N^^^^2^A/N
"DATA",9002313.91,216,5)
AZ^8^^^28
"DATA",9002313.91,216,10,0)
^9002313.9101^1^1^3031212
"DATA",9002313.91,216,10,1,0)
S BPS("X")=""
"DATA",9002313.91,216,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,216,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,217,0)
562^^PROFESSIONAL SERVICE FEE PAID^A/N^^^^8^D
"DATA",9002313.91,217,5)
J1^8^^^28
"DATA",9002313.91,217,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,217,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,217,25,0)
^^1^1^3031217^
"DATA",9002313.91,217,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,217,30,0)
^^1^1^3031217^
"DATA",9002313.91,217,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),560),U,2)=BPS("X")
"DATA",9002313.91,218,0)
563^^OTHER AMOUNT PAID COUNT^N^^^^1^N
"DATA",9002313.91,218,5)
J2^1^^^28
"DATA",9002313.91,218,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,218,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,218,25,0)
^^1^1^3031212^
"DATA",9002313.91,218,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,218,30,0)
^^1^1^3031212^
"DATA",9002313.91,218,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),563.01,DUR,0)),U,1)
"DATA",9002313.91,219,0)
564^^OTHER AMOUNT PAID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,219,5)
J3^2^^^28
"DATA",9002313.91,219,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,219,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,219,25,0)
^^1^1^3031212^
"DATA",9002313.91,219,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,219,30,0)
^^1^1^3031212^
"DATA",9002313.91,219,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),563.01,DUR,1),U,1)=BPS("X")
"DATA",9002313.91,220,0)
565^^OTHER AMOUNT PAID^A/N^^^^8^D
"DATA",9002313.91,220,5)
J4^8^^^28
"DATA",9002313.91,220,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,220,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,220,25,0)
^9002313.9104^1^1^3031212^^
"DATA",9002313.91,220,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,220,30,0)
^9002313.9103^1^1^3031212^^
"DATA",9002313.91,220,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),563.01,DUR,1),U,2)=BPS("X")
"DATA",9002313.91,221,0)
566^^OTHER PAYER AMOUNT RECOGNIZED^A/N^^^^8^D
"DATA",9002313.91,221,5)
J5^8^^^28
"DATA",9002313.91,221,10,0)
^9002313.9101^1^1^3101115^^
"DATA",9002313.91,221,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,221,25,0)
^^1^1^3090304^
"DATA",9002313.91,221,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,221,30,0)
^^1^1^3090304^
"DATA",9002313.91,221,30,1,0)
D SET566^BPSFLD01
"DATA",9002313.91,222,0)
567^^DUR/PPS RESPONSE CODE COUNTER^N^^^^1^N
"DATA",9002313.91,222,5)
J6^1^^^29
"DATA",9002313.91,222,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,222,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,222,25,0)
^9002313.9104^1^1^3031210^^
"DATA",9002313.91,222,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,222,30,0)
^9002313.9103^1^1^3031210^^
"DATA",9002313.91,222,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),567.01,DUR,0),U,1)=BPS("X")
"DATA",9002313.91,223,0)
568^^PAYER/HEALTH PLAN ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,223,5)
J7^2^^^24
"DATA",9002313.91,223,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,223,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,223,25,0)
^^1^1^3031212^
"DATA",9002313.91,223,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,223,30,0)
^^1^1^3031212^
"DATA",9002313.91,223,30,1,0)
S $P(^BPSR(BPS(9002313.02),560),U,8)
"DATA",9002313.91,224,0)
569^^PAYER/HEALTH PLAN ID^A/N^^^^10^A/N
"DATA",9002313.91,224,5)
J8^10^^^24
"DATA",9002313.91,224,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,224,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,224,25,0)
^9002313.9104^1^1^3031212^^
"DATA",9002313.91,224,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,224,30,0)
^9002313.9103^1^1^3031212^^
"DATA",9002313.91,224,30,1,0)
S $P(^BPSR(BPS(9002313.02),560),U,9)=BPS("X")
"DATA",9002313.91,225,0)
600^^UNIT OF MEASURE^A/N^^^^2^A/N
"DATA",9002313.91,225,5)
28^2^^4
"DATA",9002313.91,225,10,0)
^9002313.9101^1^1^3070625
"DATA",9002313.91,225,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Unit of Measure"))
"DATA",9002313.91,225,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,225,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,225,25,0)
^9002313.9104^1^1^3070620^
"DATA",9002313.91,225,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,225,30,0)
^9002313.9103^1^1^3070620^
"DATA",9002313.91,225,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),600),U,1)=""
"DATA",9002313.91,240,0)
478^^OTHER AMT CLAIMED SBMTTD COUNT^N^^^^1^N
"DATA",9002313.91,240,1)
OTHER AMOUNT CLAIMED SUBMITTED COUNT
"DATA",9002313.91,240,5)
H7^1^^10
"DATA",9002313.91,240,10,0)
^9002313.9101^1^1^3101006^^^
"DATA",9002313.91,240,10,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,240,20,0)
^9002313.9102^1^1^3101006^^^
"DATA",9002313.91,240,20,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,240,25,0)
^9002313.9104^1^1^3101006^^
"DATA",9002313.91,240,25,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,240,30,0)
^9002313.9103^1^1^3101006^^
"DATA",9002313.91,240,30,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,241,0)
479^^OTHER AMT CLAIMED SUBM QLFR^A/N^^^^2^A/N
"DATA",9002313.91,241,1)
OTHER AMOUNT CLAIMED SUBMITTED QUALIFIER
"DATA",9002313.91,241,5)
H8^2^^10
"DATA",9002313.91,241,10,0)
^9002313.9101^1^1^3101006^^^
"DATA",9002313.91,241,10,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,241,20,0)
^9002313.9102^1^1^3101006^^^
"DATA",9002313.91,241,20,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,241,25,0)
^9002313.9104^1^1^3101006^^
"DATA",9002313.91,241,25,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,241,30,0)
^9002313.9103^1^1^3101006^^
"DATA",9002313.91,241,30,1,0)
; fields 478, 479, 480 handled by FLD480^BPSOSSG (see SET CODE in field 480)
"DATA",9002313.91,242,0)
463^^INTERMEDIARY AUTH TYPE ID^N^^^^2^N
"DATA",9002313.91,242,1)
INTERMEDIARY AUTHORIZATION TYPE ID
"DATA",9002313.91,242,5)
EW^2^^4
"DATA",9002313.91,242,10,0)
^^2^2^3110727^
"DATA",9002313.91,242,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Intermediary Auth Type ID"))
"DATA",9002313.91,242,10,2,0)
S:BPS("X")="" BPS("X")=0
"DATA",9002313.91,242,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,242,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,242,25,0)
^9002313.9104^1^1^3030823^^^^
"DATA",9002313.91,242,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,242,30,0)
^9002313.9103^1^1^3030823^^
"DATA",9002313.91,242,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),460),U,3)=BPS("X")
"DATA",9002313.91,265,0)
451^^COMPOUND DISP UNIT FORM INDCTR^N^^^^1^N
"DATA",9002313.91,265,1)
COMPOUND DISPENSING UNIT FORM INDICATOR
"DATA",9002313.91,265,5)
EG^1^^12
"DATA",9002313.91,265,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,265,10,1,0)
S BPS("X")=""
"DATA",9002313.91,265,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,265,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,265,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,265,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,266,0)
450^^COMPOUND DOSAGE FORM DESC CODE^A/N^^^^15^A/N
"DATA",9002313.91,266,1)
COMPOUND DOSAGE FORM DESCRIPTION CODE
"DATA",9002313.91,266,5)
EF^15^^12
"DATA",9002313.91,266,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,266,10,1,0)
S BPS("X")=""
"DATA",9002313.91,266,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,266,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,266,25,0)
^9002313.9104^1^1^3040107^^^^
"DATA",9002313.91,266,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,266,30,0)
^9002313.9103^1^1^3040107^^^^
"DATA",9002313.91,266,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,10)=BPS("X")
"DATA",9002313.91,267,0)
490^^COMP INGRED BASIS COST DETERM^A/N^^^^2^A/N
"DATA",9002313.91,267,1)
COMPOUND INGREDIENT BASIS OF COST DETERMINATION
"DATA",9002313.91,267,5)
UE^2^^12
"DATA",9002313.91,267,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,267,10,1,0)
S BPS("X")=""
"DATA",9002313.91,267,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,267,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,267,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,267,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,268,0)
447^^COMPOUND INGREDIENT COMP COUNT^N^^^^2^N
"DATA",9002313.91,268,1)
COMPOUND INGREDIENT COMPONENT COUNT
"DATA",9002313.91,268,5)
EC^2^^12
"DATA",9002313.91,268,10,0)
^9002313.9101^1^1^3101115^
"DATA",9002313.91,268,10,1,0)
S BPS("X")=""
"DATA",9002313.91,268,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,268,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,268,25,0)
^9002313.9104^1^1^3040107^^^^
"DATA",9002313.91,268,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,268,30,0)
^9002313.9103^1^1^3040107^^^^
"DATA",9002313.91,268,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),440),U,7)=BPS("X")
"DATA",9002313.91,269,0)
449^^COMPOUND INGREDIENT DRUG COST^N^^^^8^D
"DATA",9002313.91,269,5)
EE^8^^12
"DATA",9002313.91,269,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,269,10,1,0)
S BPS("X")=""
"DATA",9002313.91,269,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,269,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,269,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,269,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,271,0)
489^^COMPOUND PRODUCT ID^A/N^^^^19^A/N
"DATA",9002313.91,271,5)
TE^19^^12
"DATA",9002313.91,271,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,271,10,1,0)
S BPS("X")=""
"DATA",9002313.91,271,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,271,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,271,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,271,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,272,0)
488^^COMPOUND PRODUCT ID QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,272,5)
RE^2^^12
"DATA",9002313.91,272,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,272,10,1,0)
S BPS("X")=""
"DATA",9002313.91,272,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,272,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,272,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,272,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,273,0)
452^^COMPOUND ROUTE OF ADMIN^N^^^^2^N
"DATA",9002313.91,273,5)
EH^2
"DATA",9002313.91,273,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,273,10,1,0)
S BPS("X")=""
"DATA",9002313.91,273,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,273,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,273,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,273,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,308,0)
448^^COMPOUND INGREDIENT QUANTITY^N^^^^10^N
"DATA",9002313.91,308,5)
ED^10^^12
"DATA",9002313.91,308,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,308,10,1,0)
S BPS("X")=""
"DATA",9002313.91,308,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,308,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,308,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,308,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,324,0)
494^^MEASUREMENT DATE^A/N^^^^8^N
"DATA",9002313.91,324,5)
ZE^8^^14
"DATA",9002313.91,324,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,324,10,1,0)
S BPS("X")=""
"DATA",9002313.91,324,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,324,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,324,25,0)
^9002313.9104^1^1^3040224^
"DATA",9002313.91,324,25,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,325,0)
496^^MEASUREMENT DIMENSION^A/N^^^^2^A/N
"DATA",9002313.91,325,5)
H2^2^^14
"DATA",9002313.91,325,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,325,10,1,0)
S BPS("X")=""
"DATA",9002313.91,325,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,325,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,325,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,325,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,326,0)
495^^MEASUREMENT TIME^N^^^^4^N
"DATA",9002313.91,326,5)
H1^4^^14
"DATA",9002313.91,326,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,326,10,1,0)
S BPS("X")=""
"DATA",9002313.91,326,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,326,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,326,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,326,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,327,0)
497^^MEASUREMENT UNIT^A/N^^^^2^A/N
"DATA",9002313.91,327,5)
H3^2^^14
"DATA",9002313.91,327,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,327,10,1,0)
S BPS("X")=""
"DATA",9002313.91,327,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,327,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,327,25,0)
^9002313.9104^1^1^3040224^^^^
"DATA",9002313.91,327,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,328,0)
499^^MEASUREMENT VALUE^A/N^^^^15^A/N
"DATA",9002313.91,328,5)
H4^15^^14
"DATA",9002313.91,328,10,0)
^9002313.9101^1^1^3040224
"DATA",9002313.91,328,10,1,0)
S BPS("X")=""
"DATA",9002313.91,328,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,328,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,328,25,0)
^9002313.9104^1^1^3040224^^^
"DATA",9002313.91,328,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,329,0)
990^^OTHER PAYER BIN NUMBER^N^^^^6^N
"DATA",9002313.91,329,5)
MG^6^^3
"DATA",9002313.91,329,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,329,10,1,0)
S BPS("X")=""
"DATA",9002313.91,329,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,329,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,329,30,0)
^9002313.9103^1^1^3101101^
"DATA",9002313.91,329,30,1,0)
S $P(^BPSC(BPS(9002313.02),980),U,10)=""
"DATA",9002313.91,330,0)
991^^OTHER PAYER PROC CONTROL NUM^A/N^^^^10^A/N
"DATA",9002313.91,330,1)
OTHER PAYER PROCESSOR CONTROL NUMBER
"DATA",9002313.91,330,5)
MH^10^^3^31
"DATA",9002313.91,330,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,330,10,1,0)
S BPS("X")=""
"DATA",9002313.91,330,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,330,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,330,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,330,30,1,0)
S $P(^BPSC(BPS(9002313.02),990),U,1)=""
"DATA",9002313.91,331,0)
356^^OTHER PAYER CARDHOLDER ID^A/N^^^^20^A/N
"DATA",9002313.91,331,5)
NU^20^^3^31
"DATA",9002313.91,331,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,331,10,1,0)
S BPS("X")=""
"DATA",9002313.91,331,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,331,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,331,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,331,30,1,0)
S $P(^BPSC(BPS(9002313.02),350),U,6)=""
"DATA",9002313.91,332,0)
992^^OTHER PAYER GROUP ID^A/N^^^^15^A/N
"DATA",9002313.91,332,5)
MJ^15^^3^31
"DATA",9002313.91,332,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,332,10,1,0)
S BPS("X")=""
"DATA",9002313.91,332,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,332,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,332,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,332,30,1,0)
S $P(^BPSC(BPS(9002313.02),990),U,2)=""
"DATA",9002313.91,333,0)
359^^MEDIGAP ID^A/N^^^^20^A/N
"DATA",9002313.91,333,5)
2A^20^^3
"DATA",9002313.91,333,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,333,10,1,0)
S BPS("X")=""
"DATA",9002313.91,333,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,333,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,333,30,0)
^9002313.9103^1^1^3100923^^
"DATA",9002313.91,333,30,1,0)
S $P(^BPSC(BPS(9002313.02),350),U,9)=""
"DATA",9002313.91,334,0)
360^^MEDICAID INDICATOR^N^^^^2^A/N
"DATA",9002313.91,334,5)
2B^2^^3
"DATA",9002313.91,334,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,334,10,1,0)
S BPS("X")=""
"DATA",9002313.91,334,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,334,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,334,30,0)
^9002313.9103^1^1^3101101^
"DATA",9002313.91,334,30,1,0)
S $P(^BPSC(BPS(9002313.02),350),U,10)=""
"DATA",9002313.91,335,0)
361^^PROVIDER ACCEPT ASSGNMT INDCTR^A/N^^^^1^A/N
"DATA",9002313.91,335,1)
PROVIDER ACCEPT ASSIGNMENT INDICATOR
"DATA",9002313.91,335,5)
2D^1^^3
"DATA",9002313.91,335,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,335,10,1,0)
S BPS("X")="Y"
"DATA",9002313.91,335,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,335,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,335,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,335,30,1,0)
S $P(^BPSC(BPS(9002313.02),360),U,1)=$G(BPS("X"))
"DATA",9002313.91,336,0)
997^^CMS PART D DEFND QLFD FACILITY^A/N^^^^1^A/N
"DATA",9002313.91,336,1)
CMS PART D DEFINED QUALIFIED FACILITY
"DATA",9002313.91,336,5)
G2^1^^3
"DATA",9002313.91,336,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,336,10,1,0)
S BPS("X")="N"
"DATA",9002313.91,336,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,336,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,336,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,336,30,1,0)
S $P(^BPSC(BPS(9002313.02),990),U,7)=$G(BPS("X"))
"DATA",9002313.91,337,0)
115^^MEDICAID ID NUMBER^A/N^^^^20^A/N
"DATA",9002313.91,337,5)
N5^20^^3^24
"DATA",9002313.91,337,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,337,10,1,0)
S BPS("X")=""
"DATA",9002313.91,337,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,337,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,337,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,337,30,1,0)
S $P(^BPSC(BPS(9002313.02),110),U,5)=""
"DATA",9002313.91,338,0)
116^^MEDICAID AGENCY NUMBER^A/N^^^^15^A/N
"DATA",9002313.91,338,5)
N6^15^^3^24
"DATA",9002313.91,338,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,338,10,1,0)
S BPS("X")=""
"DATA",9002313.91,338,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,338,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,338,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,338,30,1,0)
S $P(^BPSC(BPS(9002313.02),110),U,6)=""
"DATA",9002313.91,339,0)
384^^PATIENT RESIDENCE^N^^^^2^N
"DATA",9002313.91,339,5)
4X^2^^2
"DATA",9002313.91,339,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,339,10,1,0)
S BPS("X")=$G(BPS("Patient","Patient Residence"))
"DATA",9002313.91,339,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,339,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,339,30,0)
^9002313.9103^1^1^3101007^^^^
"DATA",9002313.91,339,30,1,0)
S $P(^BPSC(BPS(9002313.02),380),U,4)=$G(BPS("X"))
"DATA",9002313.91,340,0)
354^^SUBMISSION CLARIF CODE COUNT^N^^^^1^N
"DATA",9002313.91,340,1)
SUBMISSION CLARIFICATION CODE COUNT
"DATA",9002313.91,340,5)
NX^2^^4
"DATA",9002313.91,340,10,0)
^9002313.9101^1^1^3101006^^
"DATA",9002313.91,340,10,1,0)
; fields 354 & 420 handled by FLD420^BPSOSSG (see SET CODE in field 420)
"DATA",9002313.91,340,20,0)
^9002313.9102^1^1^3101006^^
"DATA",9002313.91,340,20,1,0)
; fields 354 & 420 handled by FLD420^BPSOSSG (see SET CODE in field 420)
"DATA",9002313.91,340,25,0)
^9002313.9104^1^1^3101006^^
"DATA",9002313.91,340,25,1,0)
; fields 354 & 420 handled by FLD420^BPSOSSG (see SET CODE in field 420)
"DATA",9002313.91,340,30,0)
^9002313.9103^1^1^3101006^^^^
"DATA",9002313.91,340,30,1,0)
; fields 354 & 420 handled by FLD420^BPSOSSG (see SET CODE in field 420)
"DATA",9002313.91,341,0)
357^^DELAY REASON CODE^N^^^^2^N
"DATA",9002313.91,341,5)
NV^2^^4
"DATA",9002313.91,341,10,0)
^9002313.9101^1^1^3101007^^
"DATA",9002313.91,341,10,1,0)
S BPS("X")=$G(BPS("Claim",BPS(9002313.0201),"Delay Reason Code"))
"DATA",9002313.91,341,20,0)
^9002313.9102^1^1^3101012^
"DATA",9002313.91,341,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,341,30,0)
^9002313.9103^1^1^3101007^^
"DATA",9002313.91,341,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),350),U,7)=$S($G(BPS("X"))="NV00":"",1:$G(BPS("X")))
"DATA",9002313.91,342,0)
880^^TRANSACTION REFERENCE NUMBER^A/N^^^^10^A/N
"DATA",9002313.91,342,5)
K5^10^^4^26
"DATA",9002313.91,342,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,342,10,1,0)
S BPS("X")=""
"DATA",9002313.91,342,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,342,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,342,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,342,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),870),U,10)=""
"DATA",9002313.91,343,0)
391^^PATIENT ASSIGNMENT INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,343,1)
PATIENT ASSIGNMENT INDICATOR (DIRECT MEMBER REIMBURSEMENT INDICATOR)
"DATA",9002313.91,343,5)
MT^1^^4
"DATA",9002313.91,343,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,343,10,1,0)
S BPS("X")="Y"
"DATA",9002313.91,343,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,343,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,343,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,343,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),390),U,1)=$G(BPS("X"))
"DATA",9002313.91,344,0)
995^^ROUTE OF ADMINISTRATION^A/N^^^^11^A/N
"DATA",9002313.91,344,5)
E2^1^^4
"DATA",9002313.91,344,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,344,10,1,0)
S BPS("X")=""
"DATA",9002313.91,344,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,344,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,344,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,344,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),990),U,5)=$G(BPS("X"))
"DATA",9002313.91,345,0)
996^^COMPOUND TYPE^A/N^^^^2^A/N
"DATA",9002313.91,345,5)
G1^2^^4
"DATA",9002313.91,345,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,345,10,1,0)
S BPS("X")=""
"DATA",9002313.91,345,20,0)
^9002313.9102^1^1^3101206^
"DATA",9002313.91,345,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,345,30,0)
^^1^1^3121128
"DATA",9002313.91,345,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),990),U,6)=""
"DATA",9002313.91,346,0)
114^^MEDICAID SUBROGATION ICN/TCN^A/N^^^^20^A/N
"DATA",9002313.91,346,1)
MEDICAID SUBROGATION INTERNAL CONTROL NUMBER/TRANSACTION CONTROL NUMBER (ICN/TCN)
"DATA",9002313.91,346,5)
N4^20^^4^27
"DATA",9002313.91,346,10,0)
^9002313.9101^1^1^3101110^
"DATA",9002313.91,346,10,1,0)
S BPS("X")=""
"DATA",9002313.91,346,20,0)
^9002313.9102^1^1^3101110^
"DATA",9002313.91,346,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,346,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,346,30,1,0)
S $P(^BPSC(BPS(9002313.02),110),U,4)=""
"DATA",9002313.91,347,0)
147^^PHARMACY SERVICE TYPE^N^^^^2^N
"DATA",9002313.91,347,5)
U7^2^^4
"DATA",9002313.91,347,10,0)
^9002313.9101^1^1^3101007^^
"DATA",9002313.91,347,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Pharmacy Service Type"))
"DATA",9002313.91,347,20,0)
^9002313.9102^1^1^3101007^^
"DATA",9002313.91,347,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,347,30,0)
^9002313.9103^1^1^3101007^^^^
"DATA",9002313.91,347,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),140),U,7)=$G(BPS("X"))
"DATA",9002313.91,348,0)
364^^PRESCRIBER FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,348,5)
2J^12^^6
"DATA",9002313.91,348,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,348,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber First Name"))
"DATA",9002313.91,348,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,348,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,348,30,0)
^9002313.9103^1^1^3101101^^^
"DATA",9002313.91,348,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,4)=$G(BPS("X"))
"DATA",9002313.91,349,0)
365^^PRESCRIBER STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,349,5)
2K^30^^6
"DATA",9002313.91,349,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,349,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Street Address"))
"DATA",9002313.91,349,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,349,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,349,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,349,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,5)=$G(BPS("X"))
"DATA",9002313.91,350,0)
366^^PRESCRIBER CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,350,5)
2M^20^^6
"DATA",9002313.91,350,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,350,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber City Address"))
"DATA",9002313.91,350,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,350,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,350,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,350,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,6)=$G(BPS("X"))
"DATA",9002313.91,351,0)
367^^PRESCRIBER STATE/PROV ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,351,1)
PRESCRIBER STATE/PROVINCE ADDRESS
"DATA",9002313.91,351,5)
2N^2^^6
"DATA",9002313.91,351,10,0)
^9002313.9101^1^1^3101029^^
"DATA",9002313.91,351,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber State/Province Address"))
"DATA",9002313.91,351,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,351,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,351,30,0)
^9002313.9103^1^1^3101101^^^
"DATA",9002313.91,351,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,7)=$G(BPS("X"))
"DATA",9002313.91,352,0)
368^^PRESCRIBER ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,352,5)
2P^2^^6
"DATA",9002313.91,352,10,0)
^9002313.9101^1^1^3101029^
"DATA",9002313.91,352,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Zip/Postal Zone"))
"DATA",9002313.91,352,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,352,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,352,30,0)
^9002313.9103^1^1^3101101^^
"DATA",9002313.91,352,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,8)=$G(BPS("X"))
"DATA",9002313.91,353,0)
993^^INTERNAL CONTROL NUMBER^A/N^^^^30^A/N
"DATA",9002313.91,353,5)
A7^30^^7^26
"DATA",9002313.91,353,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,353,10,1,0)
S BPS("X")=""
"DATA",9002313.91,353,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,353,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,353,30,0)
^9002313.9103^1^1^3101029^
"DATA",9002313.91,353,30,1,0)
; This field currently not implemented
"DATA",9002313.91,354,0)
392^^BENEFIT STAGE COUNT^N^^^^1^N
"DATA",9002313.91,354,5)
MU^1^^7^28
"DATA",9002313.91,354,10,0)
^^1^1^3110727^
"DATA",9002313.91,354,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,354,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,354,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,354,30,0)
^^1^1^3110727^
"DATA",9002313.91,354,30,1,0)
D SET392^BPSFLD01
"DATA",9002313.91,355,0)
393^^BENEFIT STAGE QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,355,5)
MV^2^^7^28
"DATA",9002313.91,355,10,0)
^^1^1^3110727^
"DATA",9002313.91,355,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,355,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,355,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,355,30,0)
^^1^1^3110727^
"DATA",9002313.91,355,30,1,0)
D SET393^BPSFLD01
"DATA",9002313.91,356,0)
394^^BENEFIT STAGE AMOUNT^N^^^^8^D
"DATA",9002313.91,356,5)
MW^8^^7^28
"DATA",9002313.91,356,10,0)
^^1^1^3110727^
"DATA",9002313.91,356,10,1,0)
;GET code for this COB field is executed in COB^BPSOSHF
"DATA",9002313.91,356,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,356,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,356,30,0)
^^1^1^3110727^
"DATA",9002313.91,356,30,1,0)
D SET394^BPSFLD01
"DATA",9002313.91,357,0)
117^^BILLING ENTITY TYPE INDICATOR^N^^^^2^N
"DATA",9002313.91,357,5)
TR^2^^8
"DATA",9002313.91,357,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,357,10,1,0)
S BPS("X")=""
"DATA",9002313.91,357,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,357,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,357,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,357,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,7)=""
"DATA",9002313.91,358,0)
118^^PAY TO QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,358,5)
TS^2^^8
"DATA",9002313.91,358,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,358,10,1,0)
S BPS("X")=""
"DATA",9002313.91,358,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,358,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,358,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,358,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,8)=""
"DATA",9002313.91,359,0)
119^^PAY TO ID^A/N^^^^15^A/N
"DATA",9002313.91,359,5)
TT^15^^8
"DATA",9002313.91,359,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,359,10,1,0)
S BPS("X")=""
"DATA",9002313.91,359,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,359,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,359,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,359,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,9)=""
"DATA",9002313.91,360,0)
120^^PAY TO NAME^A/N^^^^20^A/N
"DATA",9002313.91,360,5)
TU^20^^8
"DATA",9002313.91,360,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,360,10,1,0)
S BPS("X")=""
"DATA",9002313.91,360,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,360,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,360,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,360,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,10)=""
"DATA",9002313.91,361,0)
121^^PAY TO STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,361,5)
TV^30^^8
"DATA",9002313.91,361,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,361,10,1,0)
S BPS("X")=""
"DATA",9002313.91,361,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,361,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,361,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,361,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,1)=""
"DATA",9002313.91,362,0)
122^^PAY TO CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,362,5)
TW^20^^8
"DATA",9002313.91,362,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,362,10,1,0)
S BPS("X")=""
"DATA",9002313.91,362,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,362,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,362,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,362,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,2)=""
"DATA",9002313.91,363,0)
124^^PAY TO ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,363,5)
TY^15^^8
"DATA",9002313.91,363,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,363,10,1,0)
S BPS("X")=""
"DATA",9002313.91,363,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,363,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,363,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,363,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,4)=""
"DATA",9002313.91,364,0)
125^^GENERIC EQUIV PROD ID QLFR^A/N^^^^2^A/N
"DATA",9002313.91,364,1)
GENERIC EQUIVALENT PRODUCT ID QUALIFIER
"DATA",9002313.91,364,5)
TZ^2^^8
"DATA",9002313.91,364,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,364,10,1,0)
S BPS("X")=""
"DATA",9002313.91,364,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,364,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,364,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,364,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,5)=""
"DATA",9002313.91,365,0)
126^^GENERIC EQUIVALENT PRODUCT ID^A/N^^^^19^A/N
"DATA",9002313.91,365,5)
UA^19^^8
"DATA",9002313.91,365,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,365,10,1,0)
S BPS("X")=""
"DATA",9002313.91,365,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,365,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),19)
"DATA",9002313.91,365,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,365,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,6)=""
"DATA",9002313.91,366,0)
113^^MEDICAID PAID AMOUNT^N^^^^8^D
"DATA",9002313.91,366,5)
N3^8^^10
"DATA",9002313.91,366,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,366,10,1,0)
S BPS("X")=""
"DATA",9002313.91,366,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,366,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,366,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,366,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),110),U,3)=""
"DATA",9002313.91,367,0)
362^^COMPOUND INGRED MOD CODE CNT^N^^^^2^N
"DATA",9002313.91,367,1)
COMPOUND INGREDIENT MODIFIER CODE COUNT
"DATA",9002313.91,367,5)
2G^2^^12
"DATA",9002313.91,367,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,367,10,1,0)
S BPS("X")=""
"DATA",9002313.91,367,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,367,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,367,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,367,30,1,0)
; This field currently not implemented
"DATA",9002313.91,368,0)
363^^COMPOUND INGRED MODIFIER CODE^A/N^^^^2^A/N
"DATA",9002313.91,368,1)
COMPOUND INGREDIENT MODIFIER CODE
"DATA",9002313.91,368,5)
2H^2^^12
"DATA",9002313.91,368,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,368,10,1,0)
S BPS("X")=""
"DATA",9002313.91,368,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,368,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,368,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,368,30,1,0)
; This field currently not implemented
"DATA",9002313.91,369,0)
369^^ADDITIONAL DCMNTN TYPE ID^A/N^^^^3^A/N
"DATA",9002313.91,369,1)
ADDITIONAL DOCUMENTATION TYPE ID
"DATA",9002313.91,369,5)
2Q^3^^15
"DATA",9002313.91,369,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,369,10,1,0)
S BPS("X")=""
"DATA",9002313.91,369,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,369,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,369,30,0)
^9002313.9103^1^1^3101206^^
"DATA",9002313.91,369,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,9)=""
"DATA",9002313.91,370,0)
370^^LENGTH OF NEED^N^^^^3^N
"DATA",9002313.91,370,5)
2R^3^^15
"DATA",9002313.91,370,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,370,10,1,0)
S BPS("X")=""
"DATA",9002313.91,370,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,370,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,370,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,370,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),360),U,10)=""
"DATA",9002313.91,371,0)
371^^LENGTH OF NEED QUALIFIER^N^^^^2^N
"DATA",9002313.91,371,5)
2S^3^^15
"DATA",9002313.91,371,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,371,10,1,0)
S BPS("X")=""
"DATA",9002313.91,371,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,371,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,371,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,371,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,1)=""
"DATA",9002313.91,372,0)
372^^PRESCRIBER/SUPPLIER DT SIGNED^N^^^^8^N
"DATA",9002313.91,372,1)
PRESCRIBER/SUPPLIER DATE SIGNED
"DATA",9002313.91,372,5)
2T^9^^15
"DATA",9002313.91,372,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,372,10,1,0)
S BPS("X")=""
"DATA",9002313.91,372,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,372,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,372,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,372,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,2)=""
"DATA",9002313.91,373,0)
373^^REQUEST STATUS^A/N^^^^1^A/N
"DATA",9002313.91,373,5)
2U^1^^15
"DATA",9002313.91,373,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,373,10,1,0)
S BPS("X")=""
"DATA",9002313.91,373,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,373,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,373,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,373,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,3)=""
"DATA",9002313.91,374,0)
374^^REQUEST PERIOD BEGIN DATE^N^^^^8^N
"DATA",9002313.91,374,5)
2V^8^^15
"DATA",9002313.91,374,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,374,10,1,0)
S BPS("X")=""
"DATA",9002313.91,374,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,374,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,374,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,374,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,4)=""
"DATA",9002313.91,375,0)
375^^REQ PERIOD RECERT/REVISED DT^N^^^^8^N
"DATA",9002313.91,375,1)
REQUEST PERIOD RECERT/REVISED DATE
"DATA",9002313.91,375,5)
2W^8^^15
"DATA",9002313.91,375,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,375,10,1,0)
S BPS("X")=""
"DATA",9002313.91,375,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,375,20,1,0)
S BPS("X")=$$DTF1^BPSECFM($G(BPS("X")))
"DATA",9002313.91,375,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,375,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,5)=""
"DATA",9002313.91,376,0)
376^^SUPPORTING DOCUMENTATION^A/N^^^^65^A/N
"DATA",9002313.91,376,5)
2X^65^^15
"DATA",9002313.91,376,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,376,10,1,0)
S BPS("X")=""
"DATA",9002313.91,376,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,376,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),65)
"DATA",9002313.91,376,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,376,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),370),U,6)=""
"DATA",9002313.91,377,0)
377^^QUESTION NUMBER/LETTER COUNT^A/N^^^^2^N
"DATA",9002313.91,377,5)
2Z^65^^15
"DATA",9002313.91,377,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,377,10,1,0)
S BPS("X")=""
"DATA",9002313.91,377,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,377,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,378,0)
378^^QUESTION NUMBER/LETTER^A/N^^^^3^A/N
"DATA",9002313.91,378,5)
4B^3^^15
"DATA",9002313.91,378,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,378,10,1,0)
S BPS("X")=""
"DATA",9002313.91,378,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,378,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,378,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,378,30,1,0)
; This field currently not implemented
"DATA",9002313.91,379,0)
379^^QUESTION PERCENT RESPONSE^N^^^^5^N
"DATA",9002313.91,379,5)
4D^5^^15
"DATA",9002313.91,379,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,379,10,1,0)
S BPS("X")=""
"DATA",9002313.91,379,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,379,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),5)
"DATA",9002313.91,379,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,379,30,1,0)
; This field currently not implemented
"DATA",9002313.91,380,0)
380^^QUESTION DATE RESPONSE^N^^^^8^N
"DATA",9002313.91,380,5)
4G^8^^15
"DATA",9002313.91,380,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,380,10,1,0)
S BPS("X")=""
"DATA",9002313.91,380,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,380,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,380,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,380,30,1,0)
; This field currently not implemented
"DATA",9002313.91,381,0)
381^^QUESTION DOLLAR AMT RESPONSE^N^^^^11^D
"DATA",9002313.91,381,1)
QUESTION DOLLAR AMOUNT RESPONSE
"DATA",9002313.91,381,5)
4H^9^^15
"DATA",9002313.91,381,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,381,10,1,0)
S BPS("X")=""
"DATA",9002313.91,381,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,381,20,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,381,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,381,30,1,0)
; This field currently not implemented
"DATA",9002313.91,382,0)
382^^QUESTION NUMERIC RESPONSE^N^^^^11^N
"DATA",9002313.91,382,5)
4J^11^^15
"DATA",9002313.91,382,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,382,10,1,0)
S BPS("X")=""
"DATA",9002313.91,382,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,382,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),11)
"DATA",9002313.91,382,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,382,30,1,0)
; This field currently not implemented
"DATA",9002313.91,383,0)
383^^QUESTION ALPHANUMERIC RESPONSE^A/N^^^^30^A/N
"DATA",9002313.91,383,5)
4K^30^^15
"DATA",9002313.91,383,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,383,10,1,0)
S BPS("X")=""
"DATA",9002313.91,383,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,383,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,383,30,0)
^9002313.9103^1^1^3101206^
"DATA",9002313.91,383,30,1,0)
; This field currently not implemented
"DATA",9002313.91,384,0)
385^^FACILITY NAME^A/N^^^^30^A/N
"DATA",9002313.91,384,5)
3Q^30^^16
"DATA",9002313.91,384,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,384,10,1,0)
S BPS("X")=""
"DATA",9002313.91,384,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,384,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,384,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,384,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,5)=""
"DATA",9002313.91,385,0)
386^^FACILITY STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,385,5)
3U^30^^16
"DATA",9002313.91,385,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,385,10,1,0)
S BPS("X")=""
"DATA",9002313.91,385,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,385,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,385,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,385,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,6)=""
"DATA",9002313.91,386,0)
387^^FACILITY STATE/PROV ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,386,1)
FACILITY STATE/PROVINCE ADDRESS
"DATA",9002313.91,386,5)
3V^2^^16
"DATA",9002313.91,386,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,386,10,1,0)
S BPS("X")=""
"DATA",9002313.91,386,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,386,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,386,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,386,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,7)=""
"DATA",9002313.91,387,0)
388^^FACILITY CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,387,5)
5J^20^^16
"DATA",9002313.91,387,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,387,10,1,0)
S BPS("X")=""
"DATA",9002313.91,387,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,387,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,387,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,387,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,8)=""
"DATA",9002313.91,388,0)
389^^FACILITY ZIP/POSTAL ZONE^A/N^^^^15^A/N
"DATA",9002313.91,388,5)
6D^16^^16
"DATA",9002313.91,388,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,388,10,1,0)
S BPS("X")=""
"DATA",9002313.91,388,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,388,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,388,30,0)
^9002313.9103^1^1^3100925^
"DATA",9002313.91,388,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),380),U,9)=""
"DATA",9002313.91,389,0)
390^^NARRATIVE MESSAGE^A/N^^^^200^A/N
"DATA",9002313.91,389,5)
BM^200^^17
"DATA",9002313.91,389,10,0)
^9002313.9101^1^1^3101110^
"DATA",9002313.91,389,10,1,0)
S BPS("X")=""
"DATA",9002313.91,389,20,0)
^9002313.9102^1^1^3101110^
"DATA",9002313.91,389,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),200)
"DATA",9002313.91,389,30,0)
^9002313.9103^1^1^3101110^^
"DATA",9002313.91,389,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),389),U,2)=""
"DATA",9002313.91,390,0)
130^^ADDITIONAL MESSAGE INFO COUNT^N^^^^2^N
"DATA",9002313.91,390,5)
UF^2^^^26
"DATA",9002313.91,390,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,390,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,391,0)
132^^ADDITIONAL MSG INFO QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,391,5)
UH^2^^^26
"DATA",9002313.91,391,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,391,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,392,0)
131^^ADDITIONAL MSG INFO CONTINUITY^N^^^^1^A/N
"DATA",9002313.91,392,5)
UG^2^^^26
"DATA",9002313.91,392,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,392,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,393,0)
987^^URL^A/N^^^^255^A/N
"DATA",9002313.91,393,5)
MA^255^^^26
"DATA",9002313.91,393,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,393,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,394,0)
571^^AMOUNT ATTRIB TO PROCESSOR FEE^N^^^^8^N
"DATA",9002313.91,394,5)
NZ^8^^^28
"DATA",9002313.91,394,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,394,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,395,0)
575^^PATIENT PERCENTAGE TAX AMOUNT^N^^^^8^N
"DATA",9002313.91,395,5)
EQ^8^^^28
"DATA",9002313.91,395,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,395,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,396,0)
574^^PLAN SALES TAX AMOUNT^N^^^^8^N
"DATA",9002313.91,396,5)
2Y^8^^^28
"DATA",9002313.91,396,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,396,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,397,0)
572^^AMOUNT OF COINSURANCE^N^^^^8^N
"DATA",9002313.91,397,5)
4U^8^^^28
"DATA",9002313.91,397,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,397,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,398,0)
573^^BASIS OF CALC - COINSURANCE^A/N^^^^2^A/N
"DATA",9002313.91,398,5)
4V^2^^^28
"DATA",9002313.91,398,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,398,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,399,0)
577^^ESTIMATED GENERIC SAVINGS^N^^^^8^N
"DATA",9002313.91,399,5)
G3^8^^^28
"DATA",9002313.91,399,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,399,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,400,0)
128^^SPENDING ACCOUNT AMT REMAINING^N^^^^8^N
"DATA",9002313.91,400,5)
UC^8^^^28
"DATA",9002313.91,400,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,400,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,401,0)
129^^HEALTH PLAN-FUNDED ASSIST AMT^N^^^^8^N
"DATA",9002313.91,401,5)
UD^8^^^28
"DATA",9002313.91,401,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,401,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,402,0)
133^^AMT ATTR TO PROV NETWORK SLCTN^N^^^^8^N
"DATA",9002313.91,402,5)
UJ^8^^^28
"DATA",9002313.91,402,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,402,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,403,0)
134^^AMT ATTR TO PROD SEL BRND DRUG^N^^^^8^N
"DATA",9002313.91,403,5)
UK^8^^^28
"DATA",9002313.91,403,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,403,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,404,0)
135^^AMT ATTR NON-PREF FRMLRY SEL^N^^^^8^N
"DATA",9002313.91,404,5)
UM^8^^^28
"DATA",9002313.91,404,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,404,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,405,0)
136^^AMT ATTR TO N-PREF FRMLRY SEL^N^^^^8^N
"DATA",9002313.91,405,5)
UN^8^^^28
"DATA",9002313.91,405,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,405,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,406,0)
137^^AMOUNT ATTR TO COVERAGE GAP^N^^^^8^N
"DATA",9002313.91,406,5)
UP^8^^^28
"DATA",9002313.91,406,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,406,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,407,0)
148^^INGRED COST CNTRCTD REIMB AMT^N^^^^8^N
"DATA",9002313.91,407,5)
U8^8^^^28
"DATA",9002313.91,407,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,407,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,408,0)
149^^DISP FEE CNTRCTD REIMB AMT^N^^^^8^N
"DATA",9002313.91,408,5)
U9^8^^^28
"DATA",9002313.91,408,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,408,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,409,0)
570^^DUR ADDITIONAL TEXT^A/N^^^^100^A/N
"DATA",9002313.91,409,5)
NS^100^^^29
"DATA",9002313.91,409,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,409,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,410,0)
355^^OTHER PAYER ID COUNT^N^^^^1^N
"DATA",9002313.91,410,5)
NT^1^^^31
"DATA",9002313.91,410,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,410,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,411,0)
142^^OTHER PAYER PERSON CODE^A/N^^^^3^A/N
"DATA",9002313.91,411,5)
UV^3^^^31
"DATA",9002313.91,411,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,411,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,412,0)
127^^OTHER PAYER HELP DESK PH NUM^A/N^^^^18^A/N
"DATA",9002313.91,412,1)
OTHER PAYER HELP DESK TELEPHONE NUMBER
"DATA",9002313.91,412,5)
UB^18^^^31
"DATA",9002313.91,412,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,412,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,413,0)
143^^OTHER PAYER PATIENT REL CODE^N^^^^1^N
"DATA",9002313.91,413,5)
UW^1^^^31
"DATA",9002313.91,413,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,413,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,414,0)
144^^OTHER PAYER EFFECTIVE DATE^N^^^^8^N
"DATA",9002313.91,414,5)
UX^8^^^31
"DATA",9002313.91,414,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,414,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,415,0)
145^^OTHER PAYER TERMINATION DATE^N^^^^8^N
"DATA",9002313.91,415,5)
UY^8^^^31
"DATA",9002313.91,415,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,415,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,416,0)
139^^MEDICARE PART D COVERAGE CODE^N^^^^2^N
"DATA",9002313.91,416,5)
UR^2^^^33
"DATA",9002313.91,416,10,0)
^9002313.9101^1^1^3171117^^
"DATA",9002313.91,416,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,417,0)
138^^CMS LICS LEVEL^A/N^^^^20^A/N
"DATA",9002313.91,417,5)
UQ^20^^^33
"DATA",9002313.91,417,10,0)
^9002313.9101^1^1^3171117^^^
"DATA",9002313.91,417,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,418,0)
240^^CONTRACT NUMBER^A/N^^^^8^A/N
"DATA",9002313.91,418,5)
U1^8^^^33
"DATA",9002313.91,418,10,0)
^9002313.9101^1^1^3171117^^
"DATA",9002313.91,418,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,419,0)
926^^FORMULARY ID^A/N^^^^10^A/N
"DATA",9002313.91,419,5)
FF^10^^^33
"DATA",9002313.91,419,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,419,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,420,0)
757^^BENEFIT ID^A/N^^^^15^A/N
"DATA",9002313.91,420,5)
U6^15^^^33
"DATA",9002313.91,420,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,420,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,421,0)
140^^NEXT MEDICARE PART D EFF DATE^N^^^^8^N
"DATA",9002313.91,421,5)
US^8^^^33
"DATA",9002313.91,421,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,421,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,422,0)
141^^NEXT MEDICARE PART D TERM DATE^N^^^^8^N
"DATA",9002313.91,422,5)
UT^8^^^33
"DATA",9002313.91,422,10,0)
^9002313.9101^1^1^3101206^
"DATA",9002313.91,422,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,423,0)
123^^PAY TO STATE/PROVINCE ADDRESS^A/N^^^^2^A/N
"DATA",9002313.91,423,1)
PAY TO STATE/ PROVINCE ADDRESS
"DATA",9002313.91,423,5)
TX^2^^8
"DATA",9002313.91,423,10,0)
^9002313.9101^1^1^3101101
"DATA",9002313.91,423,10,1,0)
S BPS("X")=""
"DATA",9002313.91,423,20,0)
^9002313.9102^1^1^3101101
"DATA",9002313.91,423,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,423,30,0)
^9002313.9103^1^1^3100924^
"DATA",9002313.91,423,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),120),U,3)=""
"DATA",9002313.91,424,0)
579^^ASSOC RX/SERVICE PROV ID QUAL^A/N^^^^2^A/N
"DATA",9002313.91,424,1)
ASSOCIATED PRESCRIPTION / SERVICE PROVIDER ID QUALIFIER
"DATA",9002313.91,424,5)
XX^2^^4
"DATA",9002313.91,424,10,0)
^^1^1^3130311^
"DATA",9002313.91,424,10,1,0)
S BPS("X")=""
"DATA",9002313.91,424,20,0)
^9002313.9102^1^1^3130311^^^^
"DATA",9002313.91,424,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,424,25,0)
^9002313.9104^1^1^3130311^^^^
"DATA",9002313.91,424,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,424,30,0)
^9002313.9103^1^1^3130311^^^
"DATA",9002313.91,424,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),570),U,9)=$G(BPS("X"))
"DATA",9002313.91,425,0)
580^^ASSOC RX/SERVICE PROVIDER ID^A/N^^^^15^A/N
"DATA",9002313.91,425,1)
ASSOCIATED PRESCRIPTION / SERVICE PROVIDER ID
"DATA",9002313.91,425,5)
XY^15^^4
"DATA",9002313.91,425,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,425,10,1,0)
S BPS("X")=""
"DATA",9002313.91,425,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,425,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,425,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,425,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,425,30,0)
^^1^1^3130222^
"DATA",9002313.91,425,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),570),U,10)=BPS("X")
"DATA",9002313.91,426,0)
581^^ASSOC RX/SERVICE REF NUM QUAL^A/N^^^^2^A/N
"DATA",9002313.91,426,1)
ASSOCIATED PRESCRIPTION / SERVICE REFERENCE NUMBER QUALIFIER
"DATA",9002313.91,426,5)
XZ^2^^4
"DATA",9002313.91,426,10,0)
^^1^1^3130222^
"DATA",9002313.91,426,10,1,0)
S BPS("X")=""
"DATA",9002313.91,426,20,0)
^^1^1^3130222^
"DATA",9002313.91,426,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,426,25,0)
^^1^1^3130222^
"DATA",9002313.91,426,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,426,30,0)
^^1^1^3130222^
"DATA",9002313.91,426,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,1)=BPS("X")
"DATA",9002313.91,427,0)
582^^ASSOC RX/SERVICE FILL NUMBER^N^^^^2^N
"DATA",9002313.91,427,1)
ASSOCIATED PRESCRIPTION SERVICE FILL NUMBER
"DATA",9002313.91,427,5)
X0^2^^4
"DATA",9002313.91,427,10,0)
^^1^1^3130222^
"DATA",9002313.91,427,10,1,0)
S BPS("X")=""
"DATA",9002313.91,427,20,0)
^^1^1^3130222^
"DATA",9002313.91,427,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,427,25,0)
^^1^1^3130222^
"DATA",9002313.91,427,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,427,30,0)
^^1^1^3130222^
"DATA",9002313.91,427,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,2)=$G(BPS("X"))
"DATA",9002313.91,428,0)
583^^SERVICE PROVIDER NAME^A/N^^^^30^A/N
"DATA",9002313.91,428,1)
SERVICE PROVIDE NAME
"DATA",9002313.91,428,5)
YK^30^^19
"DATA",9002313.91,428,10,0)
^^1^1^3130228^
"DATA",9002313.91,428,10,1,0)
S BPS("X")=""
"DATA",9002313.91,428,20,0)
^^1^1^3130222^
"DATA",9002313.91,428,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,428,25,0)
^^1^1^3130222^
"DATA",9002313.91,428,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,428,30,0)
^^1^1^3130222^
"DATA",9002313.91,428,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,3)=BPS("X")
"DATA",9002313.91,429,0)
584^^SERVICE PROVIDER STREET^A/N^^^^30^A/N
"DATA",9002313.91,429,1)
SERVICE PROVIDER STREET ADDRESS
"DATA",9002313.91,429,5)
YM^30^^19
"DATA",9002313.91,429,10,0)
^^1^1^3130222^
"DATA",9002313.91,429,10,1,0)
S BPS("X")=""
"DATA",9002313.91,429,20,0)
^^1^1^3130222^
"DATA",9002313.91,429,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,429,25,0)
^^1^1^3130222^
"DATA",9002313.91,429,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,429,30,0)
^^1^1^3130222^
"DATA",9002313.91,429,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,4)=BPS("X")
"DATA",9002313.91,430,0)
585^^SERVICE PROVIDER CITY^A/N^^^^20^A/N
"DATA",9002313.91,430,1)
SERVICE PROVIDER CITY ADDRESS
"DATA",9002313.91,430,5)
YN^20^^19
"DATA",9002313.91,430,10,0)
^9002313.9101^1^1^3130228^^
"DATA",9002313.91,430,10,1,0)
S BPS("X")=""
"DATA",9002313.91,430,20,0)
^^1^1^3130222^
"DATA",9002313.91,430,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,430,25,0)
^^1^1^3130222^
"DATA",9002313.91,430,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,430,30,0)
^^1^1^3130222^
"DATA",9002313.91,430,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,5)=BPS("X")
"DATA",9002313.91,431,0)
586^^SERVICE PROVIDE STATE/PROVINCE^A/N^^^^2^A/N
"DATA",9002313.91,431,1)
SERVICE PROVIDER STATE/PROVINCE ADDRESS
"DATA",9002313.91,431,5)
YP^2^^19
"DATA",9002313.91,431,10,0)
^^1^1^3130222^
"DATA",9002313.91,431,10,1,0)
S BPS("X")=""
"DATA",9002313.91,431,20,0)
^^1^1^3130222^
"DATA",9002313.91,431,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,431,25,0)
^^1^1^3130222^
"DATA",9002313.91,431,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,431,30,0)
^^1^1^3130222^
"DATA",9002313.91,431,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,6)=BPS("X")
"DATA",9002313.91,432,0)
587^^SERVICE PROVIDER ZIP/POST CODE^A/N^^^^15^A/N
"DATA",9002313.91,432,1)
SERVICE PROVIDER ZIP/POSTAL CODE
"DATA",9002313.91,432,5)
YQ^15^^19
"DATA",9002313.91,432,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,432,10,1,0)
S BPS("X")=""
"DATA",9002313.91,432,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,432,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,432,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,432,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,432,30,0)
^^1^1^3130222^
"DATA",9002313.91,432,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,7)=BPS("X")
"DATA",9002313.91,433,0)
590^^SELLER INITIALS^A/N^^^^3^A/N
"DATA",9002313.91,433,1)
SELLER INITIALS
"DATA",9002313.91,433,5)
YT^3^^19
"DATA",9002313.91,433,10,0)
^^1^1^3130222^
"DATA",9002313.91,433,10,1,0)
S BPS("X")=BPS("Provider",MEDN,"Pharmacist Initials")
"DATA",9002313.91,433,20,0)
^9002313.9102^1^1^3130222^^^^
"DATA",9002313.91,433,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,433,25,0)
^9002313.9104^1^1^3130222^^^^
"DATA",9002313.91,433,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,433,30,0)
^9002313.9103^1^1^3130222^^^^
"DATA",9002313.91,433,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),580),U,10)=BPS("X")
"DATA",9002313.91,434,0)
591^^PURCHASER ID QUALIFIER^N^^^^2^N
"DATA",9002313.91,434,1)
PURCHASER ID QUALIFIER
"DATA",9002313.91,434,5)
YU^2^^18
"DATA",9002313.91,434,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,434,10,1,0)
S BPS("X")=""
"DATA",9002313.91,434,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,434,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,434,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,434,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,434,30,0)
^^1^1^3130222^
"DATA",9002313.91,434,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,1)=BPS("X")
"DATA",9002313.91,435,0)
592^^PURCHASER ID^A/N^^^^20^A/N
"DATA",9002313.91,435,1)
PURCHASER ID
"DATA",9002313.91,435,5)
YV^20^^18
"DATA",9002313.91,435,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,435,10,1,0)
S BPS("X")=""
"DATA",9002313.91,435,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,435,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,435,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,435,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,435,30,0)
^^1^1^3130222^
"DATA",9002313.91,435,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,2)=BPS("X")
"DATA",9002313.91,436,0)
593^^PURCHASER ID STATE/PROVINCE^A/N^^^^2^A/N
"DATA",9002313.91,436,1)
PURCHASER ID ASSOCIATED STATE/PROVINCE ADDRESS
"DATA",9002313.91,436,5)
YW^2^^18
"DATA",9002313.91,436,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,436,10,1,0)
S BPS("X")=""
"DATA",9002313.91,436,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,436,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,436,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,436,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,436,30,0)
^^1^1^3130222^
"DATA",9002313.91,436,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,3)=BPS("X")
"DATA",9002313.91,437,0)
594^^PURCHASER DATE OF BIRTH^N^^^^8^N
"DATA",9002313.91,437,1)
PURCHASER DATE OF BIRTH
"DATA",9002313.91,437,5)
YX^8^^18
"DATA",9002313.91,437,10,0)
^9002313.9101^1^1^3130228^^^
"DATA",9002313.91,437,10,1,0)
S BPS("X")=""
"DATA",9002313.91,437,20,0)
^^1^1^3130228^
"DATA",9002313.91,437,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,437,25,0)
^9002313.9104^1^1^3130228^^^
"DATA",9002313.91,437,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,437,30,0)
^9002313.9103^1^1^3130228^^
"DATA",9002313.91,437,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,4)=BPS("X")
"DATA",9002313.91,438,0)
595^^PURCHASER GENDER CODE^N^^^^1^N
"DATA",9002313.91,438,1)
PURCHASER GENDER CODE
"DATA",9002313.91,438,5)
YY^1^^18
"DATA",9002313.91,438,10,0)
^^1^1^3130228^
"DATA",9002313.91,438,10,1,0)
S BPS("X")=""
"DATA",9002313.91,438,20,0)
^^1^1^3130222^
"DATA",9002313.91,438,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,438,25,0)
^^1^1^3130222^
"DATA",9002313.91,438,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,438,30,0)
^^1^1^3130222^
"DATA",9002313.91,438,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,5)=BPS("X")
"DATA",9002313.91,439,0)
596^^PURCHASER FIRST NAME^A/N^^^^12^A/N
"DATA",9002313.91,439,1)
PURCHASER FIRST NAME
"DATA",9002313.91,439,5)
YZ^12^^18
"DATA",9002313.91,439,10,0)
^^1^1^3130222^
"DATA",9002313.91,439,10,1,0)
S BPS("X")=""
"DATA",9002313.91,439,20,0)
^^1^1^3130222^
"DATA",9002313.91,439,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,439,25,0)
^^1^1^3130222^
"DATA",9002313.91,439,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),12)
"DATA",9002313.91,439,30,0)
^^1^1^3130222^
"DATA",9002313.91,439,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,6)=BPS("X")
"DATA",9002313.91,440,0)
597^^PURCHASER LAST NAME^A/N^^^^15^A/N
"DATA",9002313.91,440,1)
PURCHASER LAST NAME
"DATA",9002313.91,440,5)
Y0^15^^18
"DATA",9002313.91,440,10,0)
^9002313.9101^1^1^3130403^^
"DATA",9002313.91,440,10,1,0)
S BPS("X")=""
"DATA",9002313.91,440,20,0)
^9002313.9102^1^1^3130403^^
"DATA",9002313.91,440,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,440,25,0)
^9002313.9104^1^1^3130403^^
"DATA",9002313.91,440,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,440,30,0)
^9002313.9103^1^1^3130403^^
"DATA",9002313.91,440,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,7)=BPS("X")
"DATA",9002313.91,441,0)
598^^PURCHASER STREET ADDRESS^A/N^^^^30^A/N
"DATA",9002313.91,441,1)
PURCHASER STREET ADDRESS
"DATA",9002313.91,441,5)
Y1^30^^18
"DATA",9002313.91,441,10,0)
^^1^1^3130222^
"DATA",9002313.91,441,10,1,0)
S BPS("X")=""
"DATA",9002313.91,441,20,0)
^^1^1^3130222^
"DATA",9002313.91,441,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,441,25,0)
^^1^1^3130222^
"DATA",9002313.91,441,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),30)
"DATA",9002313.91,441,30,0)
^^1^1^3130222^
"DATA",9002313.91,441,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,8)=BPS("X")
"DATA",9002313.91,442,0)
599^^PURCHASER CITY ADDRESS^A/N^^^^20^A/N
"DATA",9002313.91,442,1)
PURCHASER CITY ADDRESS
"DATA",9002313.91,442,5)
Y2^20^^18
"DATA",9002313.91,442,10,0)
^^1^1^3130222^
"DATA",9002313.91,442,10,1,0)
S BPS("X")=""
"DATA",9002313.91,442,20,0)
^^1^1^3130222^
"DATA",9002313.91,442,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,442,25,0)
^^1^1^3130222^
"DATA",9002313.91,442,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,442,30,0)
^^1^1^3130222^
"DATA",9002313.91,442,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),590),U,9)=BPS("X")
"DATA",9002313.91,443,0)
675^^PURCHASER STATE/PROVINCE CODE^A/N^^^^2^A/N
"DATA",9002313.91,443,1)
PURCHASER ADDRESS STATE/PROVINCE CODE
"DATA",9002313.91,443,5)
Y3^2^^18
"DATA",9002313.91,443,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,443,10,1,0)
S BPS("X")=""
"DATA",9002313.91,443,20,0)
^^1^1^3130222^
"DATA",9002313.91,443,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,443,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,443,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,443,30,0)
^^1^1^3130222^
"DATA",9002313.91,443,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,5)=BPS("X")
"DATA",9002313.91,444,0)
676^^PURCHASER ZIP/POSTAL CODE^A/N^^^^15^A/N
"DATA",9002313.91,444,1)
PURCHASER ZIP/POSTAL CODE
"DATA",9002313.91,444,5)
Y4^15^^18
"DATA",9002313.91,444,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,444,10,1,0)
S BPS("X")=""
"DATA",9002313.91,444,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,444,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,444,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,444,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,444,30,0)
^9002313.9103^1^1^3130222^^^
"DATA",9002313.91,444,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,6)=BPS("X")
"DATA",9002313.91,445,0)
677^^PURCHASER COUNTRY CODE^A/N^^^^2^A/N
"DATA",9002313.91,445,1)
PURCHASER COUNTRY CODE
"DATA",9002313.91,445,5)
Y5^2^^18
"DATA",9002313.91,445,10,0)
^^1^1^3130222^
"DATA",9002313.91,445,10,1,0)
S BPS("X")=""
"DATA",9002313.91,445,20,0)
^^1^1^3130222^
"DATA",9002313.91,445,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,445,25,0)
^^1^1^3130222^
"DATA",9002313.91,445,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,445,30,0)
^^1^1^3130222^
"DATA",9002313.91,445,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,7)=BPS("X")
"DATA",9002313.91,446,0)
678^^TIME OF SERVICE^N^^^^6^N
"DATA",9002313.91,446,1)
TIME OF SERVICE
"DATA",9002313.91,446,5)
Y6^6^^4
"DATA",9002313.91,446,10,0)
^^1^1^3130222^
"DATA",9002313.91,446,10,1,0)
S BPS("X")=BPS("Claim",MEDN,"Time of Service")
"DATA",9002313.91,446,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,446,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,446,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,446,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,446,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,446,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,8)=BPS("X")
"DATA",9002313.91,447,0)
679^^SELLER ID^A/N^^^^70^A/N
"DATA",9002313.91,447,1)
SELLER ID
"DATA",9002313.91,447,5)
Y9^70^^19
"DATA",9002313.91,447,10,0)
^^1^1^3130222^
"DATA",9002313.91,447,10,1,0)
S BPS("X")=BPS("Provider",MEDN,"Pharmacist ID")
"DATA",9002313.91,447,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,447,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),70)
"DATA",9002313.91,447,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,447,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),70)
"DATA",9002313.91,447,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,447,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,9)=BPS("X")
"DATA",9002313.91,448,0)
680^^SELLER ID QUALIFIER^N^^^^2^N
"DATA",9002313.91,448,1)
SELLER ID QUALIFIER
"DATA",9002313.91,448,5)
ZB^2^^19
"DATA",9002313.91,448,10,0)
^^1^1^3130226^
"DATA",9002313.91,448,10,1,0)
S BPS("X")="01"
"DATA",9002313.91,448,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,448,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,448,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,448,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,448,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,448,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),670),U,10)=BPS("X")
"DATA",9002313.91,449,0)
681^^SALES TRANSACTION ID^A/N^^^^80^A/N
"DATA",9002313.91,449,1)
SALES TRANSACTION ID
"DATA",9002313.91,449,5)
ZF^80^^4
"DATA",9002313.91,449,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,449,10,1,0)
S BPS("X")=""
"DATA",9002313.91,449,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,449,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),80)
"DATA",9002313.91,449,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,449,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),80)
"DATA",9002313.91,449,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,449,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),680),U,1)=BPS("X")
"DATA",9002313.91,450,0)
A22^^PATIENT ID STATE/PROVINCE^A/N^^^^2^A/N
"DATA",9002313.91,450,1)
PATIENT ID ASSOCIATED STATE/PROVINCE ADDRESS
"DATA",9002313.91,450,5)
YR^2^1022^2
"DATA",9002313.91,450,10,0)
^^1^1^3130222^
"DATA",9002313.91,450,10,1,0)
S BPS("X")=""
"DATA",9002313.91,450,20,0)
^^1^1^3130222^
"DATA",9002313.91,450,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,450,25,0)
^^1^1^3130222^
"DATA",9002313.91,450,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,450,30,0)
^^1^1^3130227^
"DATA",9002313.91,450,30,1,0)
S $P(^BPSC(BPS(9002313.02),"A20"),U,2)=BPS("X")
"DATA",9002313.91,451,0)
A23^^PURCHASER RELATIONSHIP CODE^A/N^^^^2^A/N
"DATA",9002313.91,451,1)
PURCHASER RELATIONSHIP CODE
"DATA",9002313.91,451,5)
YS^2^1023^18
"DATA",9002313.91,451,10,0)
^9002313.9101^1^1^3130222^^
"DATA",9002313.91,451,10,1,0)
S BPS("X")=""
"DATA",9002313.91,451,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,451,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,451,25,0)
^^1^1^3130222^
"DATA",9002313.91,451,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,451,30,0)
^9002313.9103^1^1^3130222^^
"DATA",9002313.91,451,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,3)=BPS("X")
"DATA",9002313.91,452,0)
A24^^PRESCRIBER ID STATE/PROVINCE^A/N^^^^2^A/N
"DATA",9002313.91,452,1)
PRESCRIBER ID ASSOCIATED STATE/PROVINCE CODE
"DATA",9002313.91,452,5)
ZK^2^1024^6
"DATA",9002313.91,452,10,0)
^^1^1^3130222^
"DATA",9002313.91,452,10,1,0)
S BPS("X")=""
"DATA",9002313.91,452,20,0)
^^1^1^3130222^
"DATA",9002313.91,452,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,452,25,0)
^^1^1^3130222^
"DATA",9002313.91,452,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,452,30,0)
^^1^1^3130222^
"DATA",9002313.91,452,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,4)=BPS("X")
"DATA",9002313.91,453,0)
A25^^PRESCRIBER ALTERNATE ID QUAL^A/N^^^^2^A/N
"DATA",9002313.91,453,1)
PRESCRIBER ALTERNATE ID QUALIFIER
"DATA",9002313.91,453,5)
ZM^2^1025^6
"DATA",9002313.91,453,10,0)
^^1^1^3130227^
"DATA",9002313.91,453,10,1,0)
S BPS("X")=""
"DATA",9002313.91,453,20,0)
^^1^1^3130222^
"DATA",9002313.91,453,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,453,25,0)
^^1^1^3130222^
"DATA",9002313.91,453,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,453,30,0)
^9002313.9103^1^1^3130227^^
"DATA",9002313.91,453,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,5)=BPS("X")
"DATA",9002313.91,454,0)
A26^^PRESCRIBER ALTERNATE ID^A/N^^^^15^A/N
"DATA",9002313.91,454,1)
PRESCRIBER ALTERNATE ID
"DATA",9002313.91,454,5)
ZP^15^1026^6
"DATA",9002313.91,454,10,0)
^^1^1^3130222^
"DATA",9002313.91,454,10,1,0)
S BPS("X")=""
"DATA",9002313.91,454,20,0)
^^1^1^3130222^
"DATA",9002313.91,454,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,454,25,0)
^^1^1^3130222^
"DATA",9002313.91,454,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,454,30,0)
^^1^1^3130222^
"DATA",9002313.91,454,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,6)=BPS("X")
"DATA",9002313.91,455,0)
A27^^PRESCRIBER ALTERNATE STATE^A/N^^^^2^A/N
"DATA",9002313.91,455,1)
PRESCRIBER ALTERNATE ID ASSOCIATED STATE/PROVINCE ADDRESS
"DATA",9002313.91,455,5)
ZQ^2^1027^6
"DATA",9002313.91,455,10,0)
^^1^1^3130222^
"DATA",9002313.91,455,10,1,0)
S BPS("X")=""
"DATA",9002313.91,455,20,0)
^^1^1^3130222^
"DATA",9002313.91,455,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,455,25,0)
^^1^1^3130222^
"DATA",9002313.91,455,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,455,30,0)
^^1^1^3130222^
"DATA",9002313.91,455,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,7)=BPS("X")
"DATA",9002313.91,456,0)
A28^^ADJUDICATED PROGRAM TYPE^N^^^^2^N
"DATA",9002313.91,456,1)
ADJUDICATED PAYMENT TYPE
"DATA",9002313.91,456,5)
ZR^2^1028^^26
"DATA",9002313.91,456,10,0)
^^1^1^3130222^
"DATA",9002313.91,456,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,457,0)
A29^^REPORTED ADJUDICATED PROG TYPE^N^^^^2^N
"DATA",9002313.91,457,1)
REPORTED ADJUDICATED PROGRAM TYPE
"DATA",9002313.91,457,5)
ZS^2^1029^4
"DATA",9002313.91,457,10,0)
^^1^1^3130222^
"DATA",9002313.91,457,10,1,0)
S BPS("X")=""
"DATA",9002313.91,457,20,0)
^^1^1^3130222^
"DATA",9002313.91,457,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,457,25,0)
^^1^1^3130222^
"DATA",9002313.91,457,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,457,30,0)
^^1^1^3130222^
"DATA",9002313.91,457,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,9)=BPS("X")
"DATA",9002313.91,458,0)
A30^^RELEASED DATE^N^^^^8^N
"DATA",9002313.91,458,1)
RELEASED DATE
"DATA",9002313.91,458,5)
ZT^8^1030^18
"DATA",9002313.91,458,10,0)
^^1^1^3130222^
"DATA",9002313.91,458,10,1,0)
S BPS("X")=""
"DATA",9002313.91,458,20,0)
^^1^1^3130222^
"DATA",9002313.91,458,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,458,25,0)
^^1^1^3130222^
"DATA",9002313.91,458,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,458,30,0)
^^1^1^3130222^
"DATA",9002313.91,458,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A20"),U,10)=BPS("X")
"DATA",9002313.91,459,0)
A31^^RELEASED TIME^N^^^^6^N
"DATA",9002313.91,459,1)
RELEASED TIME
"DATA",9002313.91,459,5)
ZU^6^1031^18
"DATA",9002313.91,459,10,0)
^^1^1^3130228^
"DATA",9002313.91,459,10,1,0)
S BPS("X")=""
"DATA",9002313.91,459,20,0)
^^1^1^3130222^
"DATA",9002313.91,459,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,459,25,0)
^^1^1^3130222^
"DATA",9002313.91,459,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),6)
"DATA",9002313.91,459,30,0)
^^1^1^3130222^
"DATA",9002313.91,459,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A30"),U,1)=BPS("X")
"DATA",9002313.91,460,0)
A32^^COMPOUND PREPARATION TIME^N^^^^4^N
"DATA",9002313.91,460,1)
COMPOUND PREPARATION TIME
"DATA",9002313.91,460,5)
ZW^4^1032^12
"DATA",9002313.91,460,10,0)
^^1^1^3130222^
"DATA",9002313.91,460,10,1,0)
S BPS("X")=""
"DATA",9002313.91,460,20,0)
^^1^1^3130222^
"DATA",9002313.91,460,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,460,25,0)
^^1^1^3130222^
"DATA",9002313.91,460,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,460,30,0)
^^1^1^3130222^
"DATA",9002313.91,460,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A30"),U,2)=BPS("X")
"DATA",9002313.91,461,0)
A43^^PATIENT COUNTRY CODE^A/N^^^^2^A/N
"DATA",9002313.91,461,1)
PATIENT COUNTRY CODE
"DATA",9002313.91,461,5)
1K^2^1043^2
"DATA",9002313.91,461,10,0)
^^1^1^3130222^
"DATA",9002313.91,461,10,1,0)
S BPS("X")=""
"DATA",9002313.91,461,20,0)
^9002313.9102^1^1^3130222^^
"DATA",9002313.91,461,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,461,25,0)
^9002313.9104^1^1^3130222^^
"DATA",9002313.91,461,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,461,30,0)
^^1^1^3130227^
"DATA",9002313.91,461,30,1,0)
S $P(^BPSC(BPS(9002313.02),"A40"),U,3)=BPS("X")
"DATA",9002313.91,462,0)
A45^^VETERINARY USE INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,462,1)
VETERINARY USE INDICATOR
"DATA",9002313.91,462,5)
1R^1^1045^2
"DATA",9002313.91,462,10,0)
^^1^1^3130222^
"DATA",9002313.91,462,10,1,0)
S BPS("X")=""
"DATA",9002313.91,462,20,0)
^^1^1^3130222^
"DATA",9002313.91,462,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,462,25,0)
^^1^1^3130222^
"DATA",9002313.91,462,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,462,30,0)
^^1^1^3130227^
"DATA",9002313.91,462,30,1,0)
S $P(^BPSC(BPS(9002313.02),"A40"),U,5)=BPS("X")
"DATA",9002313.91,463,0)
B04^^NEXT AVAILABLE FILL DATE^N^^^^8^N
"DATA",9002313.91,463,1)
NEXT AVAILABLE FILL DATE
"DATA",9002313.91,463,5)
BT^8^2004^^26
"DATA",9002313.91,463,10,0)
^^1^1^3130222^
"DATA",9002313.91,463,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,464,0)
B08^^PATIENT STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,464,5)
7A^^2008^2
"DATA",9002313.91,464,10,0)
^^1^1^3150112^
"DATA",9002313.91,464,10,1,0)
S BPS("X")=$G(BPS("Patient","Street Address Line 1"))
"DATA",9002313.91,464,20,0)
^^1^1^3141223
"DATA",9002313.91,464,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,464,30,0)
^^1^1^3141223
"DATA",9002313.91,464,30,1,0)
S $P(^BPSC(BPS(9002313.02),"B00"),U,8)=BPS("X")
"DATA",9002313.91,465,0)
B09^^PATIENT STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,465,5)
7B^^2009^2
"DATA",9002313.91,465,10,0)
^^1^1^3150112^
"DATA",9002313.91,465,10,1,0)
S BPS("X")=$G(BPS("Patient","Street Address Line 2"))
"DATA",9002313.91,465,20,0)
^^1^1^3141223
"DATA",9002313.91,465,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,465,30,0)
^^1^1^3141223
"DATA",9002313.91,465,30,1,0)
S $P(^BPSC(BPS(9002313.02),"B00"),U,9)=BPS("X")
"DATA",9002313.91,466,0)
B38^^PATIENT ID ASSOC COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,466,1)
PATIENT ID ASSOCIATED COUNTRY CODE
"DATA",9002313.91,466,5)
1Y^^2038^2
"DATA",9002313.91,466,10,0)
^^1^1^3141223
"DATA",9002313.91,466,10,1,0)
S BPS("X")="US"
"DATA",9002313.91,466,20,0)
^^1^1^3141223
"DATA",9002313.91,466,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,466,30,0)
^^1^1^3141223
"DATA",9002313.91,466,30,1,0)
S $P(^BPSC(BPS(9002313.02),"B30"),U,8)=BPS("X")
"DATA",9002313.91,467,0)
B26^^PRESCRIBER PHONE NUMBER EXT^^^^^8^N
"DATA",9002313.91,467,1)
PRESCRIBER TELEPHONE NUMBER EXTENSION
"DATA",9002313.91,467,5)
7T^^2026^6
"DATA",9002313.91,467,10,0)
^^1^1^3141223
"DATA",9002313.91,467,10,1,0)
S BPS("X")=""
"DATA",9002313.91,467,20,0)
^^1^1^3141223
"DATA",9002313.91,467,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,467,30,0)
^^1^1^3141223
"DATA",9002313.91,467,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,6)=BPS("X")
"DATA",9002313.91,468,0)
B27^^PRESCRIBER STREET ADDR LINE 1^^^^^40^A/N
"DATA",9002313.91,468,1)
PRESCRIBER STREET ADDRESS LINE 1
"DATA",9002313.91,468,5)
7U^^2027^6
"DATA",9002313.91,468,10,0)
^^1^1^3150112^
"DATA",9002313.91,468,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Street Address Line 1"))
"DATA",9002313.91,468,20,0)
^^1^1^3141223
"DATA",9002313.91,468,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,468,30,0)
^^1^1^3141223
"DATA",9002313.91,468,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,7)=BPS("X")
"DATA",9002313.91,469,0)
B28^^PRESCRIBER STREET ADDR LINE 2^^^^^40^A/N
"DATA",9002313.91,469,1)
PRESCRIBER STREET ADDRESS LINE 2
"DATA",9002313.91,469,5)
7V^^2028^6
"DATA",9002313.91,469,10,0)
^^1^1^3150112^
"DATA",9002313.91,469,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Street Address Line 2"))
"DATA",9002313.91,469,20,0)
^^1^1^3141223
"DATA",9002313.91,469,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,469,30,0)
^^1^1^3141223
"DATA",9002313.91,469,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,8)=BPS("X")
"DATA",9002313.91,470,0)
B40^^PRES ALT ID ASSOC COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,470,1)
PRESCRIBER ALTERNATE ID ASSOCIATED COUNTRY CODE
"DATA",9002313.91,470,5)
3A^^2040^6
"DATA",9002313.91,470,10,0)
^^1^1^3141223
"DATA",9002313.91,470,10,1,0)
S BPS("X")=""
"DATA",9002313.91,470,20,0)
^^1^1^3141223
"DATA",9002313.91,470,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,470,30,0)
^^1^1^3141223
"DATA",9002313.91,470,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,10)=BPS("X")
"DATA",9002313.91,471,0)
B41^^PRES ID ASSOC COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,471,1)
PRESCRIBER ID ASSOCIATED COUNTRY CODE
"DATA",9002313.91,471,5)
3B^^2041^6
"DATA",9002313.91,471,10,0)
^9002313.9101^1^1^3150112^
"DATA",9002313.91,471,10,1,0)
S BPS("X")="US"
"DATA",9002313.91,471,20,0)
^^1^1^3141223
"DATA",9002313.91,471,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,471,30,0)
^^1^1^3141223
"DATA",9002313.91,471,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B40"),U,1)=BPS("X")
"DATA",9002313.91,472,0)
B42^^PRESCRIBER COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,472,5)
3C^^2042^6
"DATA",9002313.91,472,10,0)
^^1^1^3150112^
"DATA",9002313.91,472,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber Country"))
"DATA",9002313.91,472,20,0)
^^1^1^3141223
"DATA",9002313.91,472,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,472,30,0)
^^1^1^3141223
"DATA",9002313.91,472,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B40"),U,2)=BPS("X")
"DATA",9002313.91,473,0)
B15^^EMPLOYER STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,473,5)
8D^^2015^8
"DATA",9002313.91,473,10,0)
^^1^1^3141223
"DATA",9002313.91,473,10,1,0)
S BPS("X")=""
"DATA",9002313.91,473,20,0)
^^1^1^3141223
"DATA",9002313.91,473,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,473,30,0)
^^1^1^3141223
"DATA",9002313.91,473,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,5)=BPS("X")
"DATA",9002313.91,474,0)
B16^^EMPLOYER STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,474,5)
7G^^2016^8
"DATA",9002313.91,474,10,0)
^^1^1^3141223
"DATA",9002313.91,474,10,1,0)
S BPS("X")=""
"DATA",9002313.91,474,20,0)
^^1^1^3141223
"DATA",9002313.91,474,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,474,30,0)
^^1^1^3141223
"DATA",9002313.91,474,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,6)=BPS("X")
"DATA",9002313.91,475,0)
B17^^EMPLOYER CONTACT FIRST NAME^^^^^35^A/N
"DATA",9002313.91,475,5)
7H^^2017^8
"DATA",9002313.91,475,10,0)
^^1^1^3141223
"DATA",9002313.91,475,10,1,0)
S BPS("X")=""
"DATA",9002313.91,475,20,0)
^^1^1^3141223
"DATA",9002313.91,475,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,475,30,0)
^^1^1^3141223
"DATA",9002313.91,475,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,7)=BPS("X")
"DATA",9002313.91,476,0)
B18^^EMPLOYER CONTACT LAST NAME^^^^^35^A/N
"DATA",9002313.91,476,5)
7J^^2018^8
"DATA",9002313.91,476,10,0)
^^1^1^3141223
"DATA",9002313.91,476,10,1,0)
S BPS("X")=""
"DATA",9002313.91,476,20,0)
^^1^1^3141223
"DATA",9002313.91,476,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,476,30,0)
^^1^1^3141223
"DATA",9002313.91,476,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,8)=BPS("X")
"DATA",9002313.91,477,0)
B19^^EMPLOYER PHONE NUMBER EXT^^^^^8^N
"DATA",9002313.91,477,1)
EMPLOYER TELEPHONE NUMBER EXTENSION
"DATA",9002313.91,477,5)
7K^^2019^8
"DATA",9002313.91,477,10,0)
^^1^1^3141223
"DATA",9002313.91,477,10,1,0)
S BPS("X")=""
"DATA",9002313.91,477,20,0)
^^1^1^3141223
"DATA",9002313.91,477,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,477,30,0)
^^1^1^3141223
"DATA",9002313.91,477,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,9)=BPS("X")
"DATA",9002313.91,478,0)
B24^^PAY TO STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,478,5)
7R^^2024^8
"DATA",9002313.91,478,10,0)
^^1^1^3141223
"DATA",9002313.91,478,10,1,0)
S BPS("X")=""
"DATA",9002313.91,478,20,0)
^^1^1^3141223
"DATA",9002313.91,478,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,478,30,0)
^^1^1^3141223
"DATA",9002313.91,478,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,4)=BPS("X")
"DATA",9002313.91,479,0)
B25^^PAY TO STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,479,5)
7S^^2025^8
"DATA",9002313.91,479,10,0)
^^1^1^3141223
"DATA",9002313.91,479,10,1,0)
S BPS("X")=""
"DATA",9002313.91,479,20,0)
^^1^1^3141223
"DATA",9002313.91,479,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,479,30,0)
^^1^1^3141223
"DATA",9002313.91,479,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,5)=BPS("X")
"DATA",9002313.91,480,0)
B35^^EMPLOYER COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,480,5)
1V^^2035^8
"DATA",9002313.91,480,10,0)
^^1^1^3141223
"DATA",9002313.91,480,10,1,0)
S BPS("X")=""
"DATA",9002313.91,480,20,0)
^^1^1^3141223
"DATA",9002313.91,480,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,480,30,0)
^^1^1^3141223
"DATA",9002313.91,480,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,5)=BPS("X")
"DATA",9002313.91,481,0)
B39^^PAY TO COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,481,5)
1Z^^2039^8
"DATA",9002313.91,481,10,0)
^^1^1^3141223
"DATA",9002313.91,481,10,1,0)
S BPS("X")=""
"DATA",9002313.91,481,20,0)
^^1^1^3141223
"DATA",9002313.91,481,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,481,30,0)
^^1^1^3141223
"DATA",9002313.91,481,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,9)=BPS("X")
"DATA",9002313.91,482,0)
B13^^AUTH REP STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,482,1)
AUTHORIZED REPRESENTATIVE STREET ADDRESS LINE 1
"DATA",9002313.91,482,5)
7D^^2013^13
"DATA",9002313.91,482,10,0)
^9002313.9101^1^1^3150112^
"DATA",9002313.91,482,10,1,0)
S BPS("X")=""
"DATA",9002313.91,482,20,0)
^9002313.9102^1^1^3150112^
"DATA",9002313.91,482,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,482,30,0)
^9002313.9103^1^1^3150112^
"DATA",9002313.91,482,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,3)=BPS("X")
"DATA",9002313.91,483,0)
B14^^AUTH REP STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,483,1)
AUTHORIZED REPRESENTATIVE STREET ADDRESS LINE 2
"DATA",9002313.91,483,5)
8B^^2014^13
"DATA",9002313.91,483,10,0)
^^1^1^3141223
"DATA",9002313.91,483,10,1,0)
S BPS("X")=""
"DATA",9002313.91,483,20,0)
^^1^1^3141223
"DATA",9002313.91,483,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,483,30,0)
^^1^1^3141223
"DATA",9002313.91,483,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,4)=BPS("X")
"DATA",9002313.91,484,0)
B34^^AUTH REP COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,484,1)
AUTHORIZED REPRESENTATIVE COUNTRY CODE
"DATA",9002313.91,484,5)
1U^^2034^13
"DATA",9002313.91,484,10,0)
^^1^1^3141223
"DATA",9002313.91,484,10,1,0)
S BPS("X")=""
"DATA",9002313.91,484,20,0)
^^1^1^3141223
"DATA",9002313.91,484,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,484,30,0)
^^1^1^3141223
"DATA",9002313.91,484,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,4)=BPS("X")
"DATA",9002313.91,485,0)
B20^^FACILITY STREET ADDRESS LINE 1^^^^^40^A/N
"DATA",9002313.91,485,5)
7M^^2020^16
"DATA",9002313.91,485,10,0)
^^1^1^3141223
"DATA",9002313.91,485,10,1,0)
S BPS("X")=""
"DATA",9002313.91,485,20,0)
^^1^1^3141223
"DATA",9002313.91,485,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,485,30,0)
^^1^1^3141223
"DATA",9002313.91,485,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B10"),U,10)=BPS("X")
"DATA",9002313.91,486,0)
B21^^FACILITY STREET ADDRESS LINE 2^^^^^40^A/N
"DATA",9002313.91,486,5)
7N^^2021^16
"DATA",9002313.91,486,10,0)
^^1^1^3141223
"DATA",9002313.91,486,10,1,0)
S BPS("X")=""
"DATA",9002313.91,486,20,0)
^^1^1^3141223
"DATA",9002313.91,486,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,486,30,0)
^^1^1^3141223
"DATA",9002313.91,486,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,1)=BPS("X")
"DATA",9002313.91,487,0)
B37^^FACILITY COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,487,5)
1X^^2037^16
"DATA",9002313.91,487,10,0)
^^1^1^3141223
"DATA",9002313.91,487,10,1,0)
S BPS("X")=""
"DATA",9002313.91,487,20,0)
^^1^1^3141223
"DATA",9002313.91,487,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,487,30,0)
^^1^1^3141223
"DATA",9002313.91,487,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,7)=BPS("X")
"DATA",9002313.91,488,0)
B29^^PURCHASER STREET ADDRESS LINE1^^^^^40^A/N
"DATA",9002313.91,488,1)
PURCHASER STREET ADDRESS LINE 1
"DATA",9002313.91,488,5)
7W^^2029^18
"DATA",9002313.91,488,10,0)
^^1^1^3141223
"DATA",9002313.91,488,10,1,0)
S BPS("X")=""
"DATA",9002313.91,488,20,0)
^^1^1^3141223
"DATA",9002313.91,488,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,488,30,0)
^^1^1^3141223
"DATA",9002313.91,488,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,9)=BPS("X")
"DATA",9002313.91,489,0)
B30^^PURCHASER STREET ADDRESS LINE2^^^^^40^A/N
"DATA",9002313.91,489,1)
PURCHASER STREET ADDRESS LINE 2
"DATA",9002313.91,489,5)
7X^^2030^18
"DATA",9002313.91,489,10,0)
^^1^1^3141223
"DATA",9002313.91,489,10,1,0)
S BPS("X")=""
"DATA",9002313.91,489,20,0)
^^1^1^3141223
"DATA",9002313.91,489,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,489,30,0)
^^1^1^3141223
"DATA",9002313.91,489,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B20"),U,10)=BPS("X")
"DATA",9002313.91,490,0)
B43^^PURCHASER ID ASSOC COUNTRY CD^^^^^2^A/N
"DATA",9002313.91,490,1)
PURCHASER ID ASSOCIATED COUNTRY CODE
"DATA",9002313.91,490,5)
3D^^2043^18
"DATA",9002313.91,490,10,0)
^^1^1^3141223
"DATA",9002313.91,490,10,1,0)
S BPS("X")=""
"DATA",9002313.91,490,20,0)
^^1^1^3141223
"DATA",9002313.91,490,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,490,30,0)
^^1^1^3141223
"DATA",9002313.91,490,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B40"),U,3)=BPS("X")
"DATA",9002313.91,491,0)
B31^^SERVICE PROV STREET ADD LINE 1^^^^^40^A/N
"DATA",9002313.91,491,1)
SERVICE PROVIDER STREET ADDRESS LINE 1
"DATA",9002313.91,491,5)
7Y^^2031^19
"DATA",9002313.91,491,10,0)
^^1^1^3141223
"DATA",9002313.91,491,10,1,0)
S BPS("X")=""
"DATA",9002313.91,491,20,0)
^^1^1^3141223
"DATA",9002313.91,491,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,491,30,0)
^^1^1^3141223
"DATA",9002313.91,491,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,1)=BPS("X")
"DATA",9002313.91,492,0)
B32^^SERVICE PROV STREET ADD LINE 2^^^^^40^A/N
"DATA",9002313.91,492,1)
SERVICE PROVIDER STREET ADDRESS LINE 2
"DATA",9002313.91,492,5)
7Z^^2032^19
"DATA",9002313.91,492,10,0)
^^1^1^3141223
"DATA",9002313.91,492,10,1,0)
S BPS("X")=""
"DATA",9002313.91,492,20,0)
^^1^1^3141223
"DATA",9002313.91,492,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),40)
"DATA",9002313.91,492,30,0)
^^1^1^3141223
"DATA",9002313.91,492,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B30"),U,2)=BPS("X")
"DATA",9002313.91,493,0)
A93^^SERVICE PROVIDER COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,493,5)
1T^^1093^19
"DATA",9002313.91,493,10,0)
^^1^1^3141223
"DATA",9002313.91,493,10,1,0)
S BPS("X")=""
"DATA",9002313.91,493,20,0)
^^1^1^3141223
"DATA",9002313.91,493,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,493,30,0)
^^1^1^3141223
"DATA",9002313.91,493,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"A90"),U,3)=BPS("X")
"DATA",9002313.91,494,0)
B44^^INTERMEDIARY ID COUNT^^^^^1^N
"DATA",9002313.91,494,5)
8G^^2044^20
"DATA",9002313.91,494,10,0)
^^1^1^3141223
"DATA",9002313.91,494,10,1,0)
S BPS("X")=""
"DATA",9002313.91,494,20,0)
^^1^1^3141223
"DATA",9002313.91,494,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,494,30,0)
^^1^1^3141223
"DATA",9002313.91,494,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B40"),U,4)=BPS("X")
"DATA",9002313.91,495,0)
B45^^INTERMEDIARY ID TYPE CODE^^^^^2^A/N
"DATA",9002313.91,495,5)
8H^^2045^20
"DATA",9002313.91,495,10,0)
^^1^1^3141223
"DATA",9002313.91,495,10,1,0)
S BPS("X")=""
"DATA",9002313.91,495,20,0)
^^1^1^3141223
"DATA",9002313.91,495,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,496,0)
B46^^INTERMEDIARY ID TYPE ENTITY^^^^^2^A/N
"DATA",9002313.91,496,5)
8J^^2046^20
"DATA",9002313.91,496,10,0)
^^1^1^3141223
"DATA",9002313.91,496,10,1,0)
S BPS("X")=""
"DATA",9002313.91,496,20,0)
^^1^1^3141223
"DATA",9002313.91,496,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,497,0)
B47^^INTERMEDIARY ID QUALIFIER^^^^^2^A/N
"DATA",9002313.91,497,5)
8K^^2047^20
"DATA",9002313.91,497,10,0)
^^1^1^3141223
"DATA",9002313.91,497,10,1,0)
S BPS("X")=""
"DATA",9002313.91,497,20,0)
^^1^1^3141223
"DATA",9002313.91,497,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,498,0)
B48^^INTERMEDIARY ID^^^^^20^A/N
"DATA",9002313.91,498,5)
8M^^2048^20
"DATA",9002313.91,498,10,0)
^^1^1^3141223
"DATA",9002313.91,498,10,1,0)
S BPS("X")=""
"DATA",9002313.91,498,20,0)
^^1^1^3141223
"DATA",9002313.91,498,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,499,0)
B49^^INTERMEDIARY ID STATE/PROV ADD^^^^^2^A/N
"DATA",9002313.91,499,1)
INTERMEDIARY ID STATE/PROVINCE ADDRESS
"DATA",9002313.91,499,5)
8N^^2049^20
"DATA",9002313.91,499,10,0)
^9002313.9101^1^1^3141231^
"DATA",9002313.91,499,10,1,0)
S BPS("X")=""
"DATA",9002313.91,499,20,0)
^9002313.9102^1^1^3141231^
"DATA",9002313.91,499,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,500,0)
B55^^INTERMEDIARY ID COUNTRY CODE^^^^^2^A/N
"DATA",9002313.91,500,5)
8U^^2055^20
"DATA",9002313.91,500,10,0)
^^1^1^3141223
"DATA",9002313.91,500,10,1,0)
S BPS("X")=""
"DATA",9002313.91,500,20,0)
^^1^1^3141223
"DATA",9002313.91,500,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,501,0)
B50^^INTERMEDIARY ID RELATION CODE^^^^^1^N
"DATA",9002313.91,501,1)
INTERMEDIARY ID RELATIONSHIP CODE
"DATA",9002313.91,501,5)
8P^^2050^20
"DATA",9002313.91,501,10,0)
^^1^1^3141223
"DATA",9002313.91,501,10,1,0)
S BPS("X")=""
"DATA",9002313.91,501,20,0)
^^1^1^3141223
"DATA",9002313.91,501,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,502,0)
B56^^LAST KNOWN IIN NUMBER^^^^^6^N
"DATA",9002313.91,502,5)
3E^^2056^21
"DATA",9002313.91,502,10,0)
^^1^1^3141223
"DATA",9002313.91,502,10,1,0)
S BPS("X")=""
"DATA",9002313.91,502,20,0)
^^1^1^3141223
"DATA",9002313.91,502,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,502,30,0)
^^1^1^3141223
"DATA",9002313.91,502,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,6)=BPS("X")
"DATA",9002313.91,503,0)
B57^^LAST KNOWN PROCESSOR CNTRL NUM^^^^^10^A/N
"DATA",9002313.91,503,1)
LAST KNOWN PROCESSOR CONTROL NUMBER
"DATA",9002313.91,503,5)
3F^^2057^21
"DATA",9002313.91,503,10,0)
^^1^1^3141223
"DATA",9002313.91,503,10,1,0)
S BPS("X")=""
"DATA",9002313.91,503,20,0)
^^1^1^3141223
"DATA",9002313.91,503,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),10)
"DATA",9002313.91,503,30,0)
^^1^1^3141223
"DATA",9002313.91,503,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,7)=BPS("X")
"DATA",9002313.91,504,0)
B58^^LAST KNOWN GROUP ID^^^^^15^A/N
"DATA",9002313.91,504,5)
3G^^2058^21
"DATA",9002313.91,504,10,0)
^^1^1^3141223
"DATA",9002313.91,504,10,1,0)
S BPS("X")=""
"DATA",9002313.91,504,20,0)
^^1^1^3141223
"DATA",9002313.91,504,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,504,30,0)
^^1^1^3141223
"DATA",9002313.91,504,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,8)=BPS("X")
"DATA",9002313.91,505,0)
B59^^LAST KNOWN CARDHOLDER ID^^^^^20^A/N
"DATA",9002313.91,505,5)
3H^^2059^21
"DATA",9002313.91,505,10,0)
^^1^1^3141223
"DATA",9002313.91,505,10,1,0)
S BPS("X")=""
"DATA",9002313.91,505,20,0)
^^1^1^3141223
"DATA",9002313.91,505,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),20)
"DATA",9002313.91,505,30,0)
^^1^1^3141223
"DATA",9002313.91,505,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,9)=BPS("X")
"DATA",9002313.91,506,0)
B60^^YEAR OF LAST PAID CLAIM^^^^^4^N
"DATA",9002313.91,506,5)
3J^^2060^21
"DATA",9002313.91,506,10,0)
^9002313.9101^1^1^3150112^
"DATA",9002313.91,506,10,1,0)
S BPS("X")=""
"DATA",9002313.91,506,20,0)
^^1^1^3150112^
"DATA",9002313.91,506,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),4)
"DATA",9002313.91,506,30,0)
^9002313.9103^1^1^3150112^
"DATA",9002313.91,506,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B50"),U,10)=BPS("X")
"DATA",9002313.91,507,0)
B61^^MONTH OF LAST PAID CLAIM^^^^^2^N
"DATA",9002313.91,507,5)
3K^^2061^21
"DATA",9002313.91,507,10,0)
^^1^1^3141223
"DATA",9002313.91,507,10,1,0)
S BPS("X")=""
"DATA",9002313.91,507,20,0)
^^1^1^3141223
"DATA",9002313.91,507,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,507,30,0)
^^1^1^3141223
"DATA",9002313.91,507,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"B60"),U,1)=BPS("X")
"DATA",9002313.91,508,0)
B22^^HELP DESK TELEPHONE NUMBER EXT^^^^^8^N
"DATA",9002313.91,508,1)
HELP DESK TELEPHONE NUMBER EXTENSION
"DATA",9002313.91,508,5)
7P^^2022^^26
"DATA",9002313.91,508,10,0)
^^1^1^3141223
"DATA",9002313.91,508,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,509,0)
B33^^PRO SERVICE FEE CONT/REIM AMT^^^^^6.2^D
"DATA",9002313.91,509,1)
PROFESSIONAL SERVICE FEE CONTRACTED/REIMBURSEMENT AMOUNT
"DATA",9002313.91,509,5)
6G^^2033^^28
"DATA",9002313.91,509,10,0)
^^1^1^3141223
"DATA",9002313.91,509,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,510,0)
B23^^OTHER PAYER HELPDESK PHONE EXT^^^^^8^N
"DATA",9002313.91,510,1)
OTHER PAYER HELP DESK TELEPHONE NUMBER EXTENSION
"DATA",9002313.91,510,5)
7Q^^2023^^31
"DATA",9002313.91,510,10,0)
^^1^1^3141223
"DATA",9002313.91,510,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,511,0)
B52^^RESPONSE INTERMEDIARY AUTH CNT^^^^^1^N
"DATA",9002313.91,511,1)
RESPONSE INTERMEDIARY AUTHORIZATION COUNT
"DATA",9002313.91,511,5)
8R^^2052^^32
"DATA",9002313.91,511,10,0)
^^1^1^3141223
"DATA",9002313.91,511,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,512,0)
B53^^RESPONSE INTERMED AUTH TYPE ID^^^^^2^N
"DATA",9002313.91,512,1)
RESPONSE INTERMEDIARY AUTHORIZATION TYPE ID
"DATA",9002313.91,512,5)
8S^^2053^^32
"DATA",9002313.91,512,10,0)
^^1^1^3141223
"DATA",9002313.91,512,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,513,0)
B54^^RESPONSE INTERMEDIARY AUTH ID^^^^^20^A/N
"DATA",9002313.91,513,1)
RESPONSE INTERMEDIARY AUTHORIZATION ID
"DATA",9002313.91,513,5)
8T^^2054^^32
"DATA",9002313.91,513,10,0)
^^1^1^3141223
"DATA",9002313.91,513,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,514,0)
B51^^INTERMEDIARY MESSAGE^^^^^200^A/N
"DATA",9002313.91,514,5)
8Q^^2051^^32
"DATA",9002313.91,514,10,0)
^^1^1^3141223
"DATA",9002313.91,514,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,515,0)
931^^MAXIMUM AGE QUALIFIER^A/N^^^^1^A/N
"DATA",9002313.91,515,1)
MAXIMUM AGE QUALIFIER
"DATA",9002313.91,515,5)
F8^1^931^^27
"DATA",9002313.91,515,10,0)
^9002313.9101^1^1^3180522^^
"DATA",9002313.91,515,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,516,0)
932^^MAXIMUM AGE^N^^^^3^N
"DATA",9002313.91,516,1)
MAXIMUM AGE
"DATA",9002313.91,516,5)
GA^3^932^^27
"DATA",9002313.91,516,10,0)
^9002313.9101^1^1^3180522^^
"DATA",9002313.91,516,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,517,0)
933^^MAXIMUM AMOUNT^N^^^^10^N
"DATA",9002313.91,517,1)
MAXIMUM AMOUNT
"DATA",9002313.91,517,5)
GB^10^933^^27
"DATA",9002313.91,517,10,0)
^9002313.9101^1^1^3180807^^
"DATA",9002313.91,517,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,518,0)
934^^MAXIMUM AMOUNT QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,518,1)
MAXIMUM AMOUNT QUALIFIER
"DATA",9002313.91,518,5)
GC^2^934^^27
"DATA",9002313.91,518,10,0)
^^2^2^3180807^
"DATA",9002313.91,518,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,519,0)
935^^MAXIMUM AMOUNT TIME PERIOD^A/N^^^^2^A/N
"DATA",9002313.91,519,1)
MAXIMUM AMOUNT TIME PERIOD
"DATA",9002313.91,519,5)
GF^2^935^^27
"DATA",9002313.91,519,10,0)
^^1^1^3180522^
"DATA",9002313.91,519,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,520,0)
936^^MAX AMT TIME PERIOD START DATE^N^^^^8^N
"DATA",9002313.91,520,1)
MAXIMUM AMOUNT TIME PERIOD START DATE
"DATA",9002313.91,520,5)
GG^8^936^^27
"DATA",9002313.91,520,10,0)
^9002313.9101^1^1^3180524^^^
"DATA",9002313.91,520,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,521,0)
937^^MAX AMT TIME PERIOD END DATE^N^^^^8^N
"DATA",9002313.91,521,1)
MAXIMUM AMOUNT TIME PERIOD END DATE
"DATA",9002313.91,521,5)
GH^8^937^^27
"DATA",9002313.91,521,10,0)
^9002313.9101^1^1^3180524^^
"DATA",9002313.91,521,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,522,0)
938^^MAX AMT TIME PERIOD UNITS^N^^^^4^N
"DATA",9002313.91,522,1)
MAXIMUM AMOUNT TIME PERIOD UNITS
"DATA",9002313.91,522,5)
GJ^4^938^^27
"DATA",9002313.91,522,10,0)
^^1^1^3180522^
"DATA",9002313.91,522,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,523,0)
C58^^BENEFIT TYPE OPPORTUNITY^A/N^^^^2^A/N
"DATA",9002313.91,523,1)
BENEFIT TYPE OPPORTUNITY
"DATA",9002313.91,523,5)
AE^2^2158^^27
"DATA",9002313.91,523,10,0)
^^1^1^3180522^
"DATA",9002313.91,523,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,524,0)
C59^^BENEFIT TYPE OPPORTUNITY COUNT^N^^^^1^N
"DATA",9002313.91,524,1)
BENEFIT TYPE OPPORTUNITY COUNT
"DATA",9002313.91,524,5)
AF^1^2159^^27
"DATA",9002313.91,524,10,0)
^^1^1^3180522^
"DATA",9002313.91,524,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,526,0)
C66^^HELP DESK BUSINESS UNIT TYPE^A/N^^^^2^A/N
"DATA",9002313.91,526,1)
HELP DESK BUSINESS UNIT TYPE
"DATA",9002313.91,526,5)
BA^2^2166^^26
"DATA",9002313.91,526,10,0)
^^1^1^3180522^
"DATA",9002313.91,526,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,527,0)
C67^^HELP DESK BUS UNIT TYPE COUNT^N^^^^2^N
"DATA",9002313.91,527,1)
HELP DESK BUSINESS UNIT TYPE COUNT
"DATA",9002313.91,527,5)
BB^2^2167^^26
"DATA",9002313.91,527,10,0)
^^1^1^3180522^
"DATA",9002313.91,527,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,528,0)
C68^^HELP DESK CONTACT INFORMATION^A/N^^^^255^A/N
"DATA",9002313.91,528,1)
HELP DESK CONTACT INFORMATION
"DATA",9002313.91,528,5)
BC^255^2168^^26
"DATA",9002313.91,528,10,0)
^^1^1^3180522^
"DATA",9002313.91,528,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,529,0)
C69^^HELP DESK CONTACT INFO EXT^A/N^^^^8^A/N
"DATA",9002313.91,529,1)
HELP DESK CONTACT INFORMATION EXTENSION
"DATA",9002313.91,529,5)
BD^8^2169^^26
"DATA",9002313.91,529,10,0)
^^1^1^3180522^
"DATA",9002313.91,529,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,530,0)
C70^^HELP DESK CONTACT INFO QUAL^A/N^^^^2^A/N
"DATA",9002313.91,530,1)
HELP DESK CONTACT INFORMATION QUALIFIER
"DATA",9002313.91,530,5)
BF^2^2170^^26
"DATA",9002313.91,530,10,0)
^^1^1^3180522^
"DATA",9002313.91,530,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,531,0)
C71^^HELP DESK SUPPORT TYPE^A/N^^^^2^A/N
"DATA",9002313.91,531,1)
HELP DESK SUPPORT TYPE
"DATA",9002313.91,531,5)
BG^2^2171^^26
"DATA",9002313.91,531,10,0)
^^1^1^3180522^
"DATA",9002313.91,531,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,532,0)
C72^^HELP DESK SUPPORT TYPE COUNT^N^^^^2^N
"DATA",9002313.91,532,1)
HELP DESK SUPPORT TYPE COUNT
"DATA",9002313.91,532,5)
BH^2^2172^^26
"DATA",9002313.91,532,10,0)
^^1^1^3180522^
"DATA",9002313.91,532,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,533,0)
C80^^INTERMEDIARY HELP DESK TYPE^A/N^^^^2^A/N
"DATA",9002313.91,533,1)
INTERMEDIARY HELP DESK BUSINESS UNIT TYPE
"DATA",9002313.91,533,5)
G8^2^2180^^32
"DATA",9002313.91,533,10,0)
^^1^1^3180522^
"DATA",9002313.91,533,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,534,0)
C81^^INTERMEDIARY HLPDSK BUS COUNT^A/N^^^^2^A/N
"DATA",9002313.91,534,1)
INTERMEDIARY HELP DESK BUSINESS UNIT TYPE COUNT
"DATA",9002313.91,534,5)
G9^2^2181^^32
"DATA",9002313.91,534,10,0)
^^1^1^3180522^
"DATA",9002313.91,534,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,535,0)
C82^^INTERMEDIARY HLPDSK CONTACT^A/N^^^^255^A/N
"DATA",9002313.91,535,1)
INTERMEDIARY HELP DESK CONTACT INFORMATION
"DATA",9002313.91,535,5)
JP^255^2182^^32
"DATA",9002313.91,535,10,0)
^^1^1^3180522^
"DATA",9002313.91,535,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,536,0)
C83^^INTERMEDIARY HLPDSK EXTENSION^A/N^^^^8^A/N
"DATA",9002313.91,536,1)
INTERMEDIARY HELP DESK CONTACT INFORMATION EXTENSION
"DATA",9002313.91,536,5)
JR^8^2183^^32
"DATA",9002313.91,536,10,0)
^^1^1^3180522^
"DATA",9002313.91,536,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,537,0)
C84^^INTERMEDIARY HLPDSK QUALIFIER^A/N^^^^2^A/N
"DATA",9002313.91,537,1)
INTERMEDIARY HELP DESK CONTACT INFORMATION QUALIFIER
"DATA",9002313.91,537,5)
KA^2^2184^^32
"DATA",9002313.91,537,10,0)
^^1^1^3180522^
"DATA",9002313.91,537,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,538,0)
C85^^INTERMEDIARY HLPDSK SUPPT TYPE^A/N^^^^2^A/N
"DATA",9002313.91,538,1)
INTERMEDIARY HELP DESK SUPPORT TYPE
"DATA",9002313.91,538,5)
KB^2^2185^^32
"DATA",9002313.91,538,10,0)
^^1^1^3180522^
"DATA",9002313.91,538,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,540,0)
C93^^PATIENT PAY COMPONENT AMOUNT^N^^^^8^N
"DATA",9002313.91,540,1)
PATIENT PAY COMPONENT AMOUNT
"DATA",9002313.91,540,5)
KN^8^2193^^28
"DATA",9002313.91,540,10,0)
^^1^1^3180522^
"DATA",9002313.91,540,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,540,25,0)
^^1^1^3180606^
"DATA",9002313.91,540,25,1,0)
S BPS("X")=$$DFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,540,30,0)
^9002313.9103^1^1^3180606^^
"DATA",9002313.91,540,30,1,0)
S $P(^BPSR(BPS(9002313.02),1000,BPS(9002313.0201),"C90"),"^",3)=BPS("X")
"DATA",9002313.91,541,0)
C94^^PATIENT PAY COMPONENT COUNT^N^^^^2^N
"DATA",9002313.91,541,1)
PATIENT PAY COMPONENT COUNT
"DATA",9002313.91,541,5)
KP^2^2194^^28
"DATA",9002313.91,541,10,0)
^^1^1^3180522^
"DATA",9002313.91,541,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,542,0)
C95^^PATIENT PAY COMPONENT QUAL^A/N^^^^2^A/N
"DATA",9002313.91,542,1)
PATIENT PAY COMPONENT QUALIFIER
"DATA",9002313.91,542,5)
KQ^2^2195^^28
"DATA",9002313.91,542,10,0)
^^1^1^3180522^
"DATA",9002313.91,542,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,543,0)
C96^^PAYER/HEALTH PLAN ID COUNT^N^^^^1^N
"DATA",9002313.91,543,1)
PAYER/HEALTH PLAN ID COUNT
"DATA",9002313.91,543,5)
KR^1^2196^^24
"DATA",9002313.91,543,10,0)
^^1^1^3180522^
"DATA",9002313.91,543,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,544,0)
D15^^SUBROGTN REQUESTR RECONCIL ID^A/N^^^^30^A/N
"DATA",9002313.91,544,1)
SUBROGATION REQUESTORS RECONCILIATION ID
"DATA",9002313.91,544,5)
KY^30^2215^^27
"DATA",9002313.91,544,10,0)
^^1^1^3180522^
"DATA",9002313.91,544,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,545,0)
D19^^MINIMUM AMOUNT^N^^^^10^N
"DATA",9002313.91,545,1)
MINIMUM AMOUNT
"DATA",9002313.91,545,5)
M1^10^2219^^27
"DATA",9002313.91,545,10,0)
^^1^1^3180522^
"DATA",9002313.91,545,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,546,0)
D20^^MINIMUM AMOUNT QUALIFIER^A/N^^^^3^A/N
"DATA",9002313.91,546,1)
MINIMUM AMOUNT QUALIFIER
"DATA",9002313.91,546,5)
M2^3^2220^^27
"DATA",9002313.91,546,10,0)
^^1^1^3180522^
"DATA",9002313.91,546,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,547,0)
D23^^OTHER PAYER NAME^A/N^^^^70^A/N
"DATA",9002313.91,547,1)
OTHER PAYER NAME
"DATA",9002313.91,547,5)
M5^70^2223^^31
"DATA",9002313.91,547,10,0)
^^1^1^3180522^
"DATA",9002313.91,547,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,548,0)
D24^^REMAINING AMOUNT^N^^^^10^N
"DATA",9002313.91,548,1)
REMAINING AMOUNT
"DATA",9002313.91,548,5)
M6^10^2224^^27
"DATA",9002313.91,548,10,0)
^^1^1^3180522^
"DATA",9002313.91,548,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,549,0)
D25^^REMAINING AMOUNT QUALIFIER^A/N^^^^3^A/N
"DATA",9002313.91,549,1)
REMAINING AMOUNT QUALIFIER
"DATA",9002313.91,549,5)
M7^3^2225^^27
"DATA",9002313.91,549,10,0)
^^1^1^3180522^
"DATA",9002313.91,549,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,550,0)
D41^^OTHER PAYER RELATIONSHIP TYPE^A/N^^^^3^A/N
"DATA",9002313.91,550,1)
OTHER PAYER RELATIONSHIP TYPE
"DATA",9002313.91,550,5)
PQ^3^2241^^31
"DATA",9002313.91,550,10,0)
^^1^1^3180522^
"DATA",9002313.91,550,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,551,0)
D42^^FORMULARY ALT BENEFIT TIER^A/N^^^^2^A/N
"DATA",9002313.91,551,1)
FORMULARY ALTERNATIVE PLAN BENEFIT TIER
"DATA",9002313.91,551,5)
PV^2^2242^^27
"DATA",9002313.91,551,10,0)
^^1^1^3180522^
"DATA",9002313.91,551,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,552,0)
D43^^FORMULARY ALT REASON CODE^A/N^^^^2^A/N
"DATA",9002313.91,552,1)
FORMULARY ALTERNATIVE REASON CODE
"DATA",9002313.91,552,5)
PZ^2^2243^^27
"DATA",9002313.91,552,10,0)
^^1^1^3180522^
"DATA",9002313.91,552,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,553,0)
D44^^FORMLRY ALT REQ THERAPY COUNT^A/N^^^^2^A/N
"DATA",9002313.91,553,1)
FORMULARY ALTERNATIVE REQUIRED THERAPY INDICATOR COUNT
"DATA",9002313.91,553,5)
P0^2^2244^^27
"DATA",9002313.91,553,10,0)
^9002313.9101^1^1^3180522^^
"DATA",9002313.91,553,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,554,0)
D45^^FORMLRY ALT THERAPY INDICATOR^A/N^^^^2^A/N
"DATA",9002313.91,554,1)
FORMULARY ALTERNATIVE REQUIRED THERAPY INDICATOR
"DATA",9002313.91,554,5)
P1^2^2245^^27
"DATA",9002313.91,554,10,0)
^^1^1^3180522^
"DATA",9002313.91,554,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,555,0)
D46^^FORMLRY ALT THERAPY TIME QUAL^A/N^^^^2^A/N
"DATA",9002313.91,555,1)
FORMULARY ALTERNATIVE REQUIRED THERAPY TIME PERIOD QUALIFIER
"DATA",9002313.91,555,5)
P2^2^2246^^27
"DATA",9002313.91,555,10,0)
^^1^1^3180522^
"DATA",9002313.91,555,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,556,0)
D47^^FORMLRY ALT THERAPY DURATION^A/N^^^^3^A/N
"DATA",9002313.91,556,1)
FORMULARY ALTERNATIVE REQUIRED THERAPY TIME PERIOD DURATION
"DATA",9002313.91,556,5)
P3^3^2247^^27
"DATA",9002313.91,556,10,0)
^^1^1^3180522^
"DATA",9002313.91,556,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,557,0)
D48^^FORMLRY ALT THERAPY START DATE^N^^^^8^N
"DATA",9002313.91,557,1)
FORMULARY ALTERNATIVE REUQIRED THERAPY TIME PERIOD START DATE
"DATA",9002313.91,557,5)
P4^8^2248^^27
"DATA",9002313.91,557,10,0)
^^1^1^3180522^
"DATA",9002313.91,557,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,558,0)
D49^^FORMLRY ALT THERAPY END DATE^N^^^^9^N
"DATA",9002313.91,558,1)
FORMULARY ALTERNATIVE REQUIRED THERAPY TIME PERIOD END DATE
"DATA",9002313.91,558,5)
P5^9^2249^^27
"DATA",9002313.91,558,10,0)
^^1^1^3180522^
"DATA",9002313.91,558,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,559,0)
D50^^OTHER PAYER BENEFIT CLASS^A/N^^^^10^A/N
"DATA",9002313.91,559,1)
OTHER PAYER BENEFIT CLASSIFICATION
"DATA",9002313.91,559,5)
P6^10^2250^^31
"DATA",9002313.91,559,10,0)
^^1^1^3180522^
"DATA",9002313.91,559,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,560,0)
D54^^PLAN OVERRIDE INDICATOR^A/N^^^^6^A/N
"DATA",9002313.91,560,1)
PLAN BENEFIT OVERRIDE INDICATOR
"DATA",9002313.91,560,5)
RC^6^2254^^27
"DATA",9002313.91,560,10,0)
^^1^1^3180522^
"DATA",9002313.91,560,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,561,0)
D55^^PLAN OVERRIDE VALUE COUNT^N^^^^1^N
"DATA",9002313.91,561,1)
PLAN BENEFIT OVERRIDE VALUE COUNT
"DATA",9002313.91,561,5)
RD^1^2255^^27
"DATA",9002313.91,561,10,0)
^^1^1^3180522^
"DATA",9002313.91,561,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,562,0)
D56^^PLAN BENEFIT OVERRIDE VALUE^N^^^^1^N
"DATA",9002313.91,562,1)
PLAN BENEFIT OVERRIDE VALUE
"DATA",9002313.91,562,5)
RF^1^2255^^27
"DATA",9002313.91,562,10,0)
^^1^1^3180522^
"DATA",9002313.91,562,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,563,0)
D62^^REGULATORY FEE EXMPT INDICATOR^A/N^^^^1^A/N
"DATA",9002313.91,563,1)
REGULATORY FEE EXEMPT INDICATOR
"DATA",9002313.91,563,5)
RM^1^2262^^28
"DATA",9002313.91,563,10,0)
^^1^1^3180522^
"DATA",9002313.91,563,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,564,0)
D65^^PATIENT REGULATORY FEE AMOUNT^N^^^^8^N
"DATA",9002313.91,564,1)
PATIENT REGULATORY FEE AMOUNT
"DATA",9002313.91,564,5)
RS^8^2265^^28
"DATA",9002313.91,564,10,0)
^^1^1^3180522^
"DATA",9002313.91,564,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,565,0)
D17^^SUBMISSION TYPE CODE^A/N^^^^2^A/N
"DATA",9002313.91,565,1)
SUBMISSION TYPE CODE
"DATA",9002313.91,565,5)
K8^2^2217^4
"DATA",9002313.91,565,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,565,10,1,0)
S BPS("X")=""
"DATA",9002313.91,565,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,565,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,565,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,565,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,565,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,565,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D10"),U,7)=BPS("X")
"DATA",9002313.91,566,0)
D18^^DO NOT DISPENSE BEFORE DATE^N^^^^8^N
"DATA",9002313.91,566,1)
DO NOT DISPENSE BEFORE DATE
"DATA",9002313.91,566,5)
K9^8^2218^4
"DATA",9002313.91,566,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,566,10,1,0)
S BPS("X")=""
"DATA",9002313.91,566,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,566,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,566,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,566,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,566,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,566,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D10"),U,8)=BPS("X")
"DATA",9002313.91,567,0)
D21^^MULTIPLE RX/SVC GROUP ID^A/N^^^^35^A/N
"DATA",9002313.91,567,1)
MULTIPLE PRESCRIPTION/SERVICE ORDER GROUP ID
"DATA",9002313.91,567,5)
M3^35^2221^4
"DATA",9002313.91,567,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,567,10,1,0)
S BPS("X")=""
"DATA",9002313.91,567,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,567,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,567,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,567,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),35)
"DATA",9002313.91,567,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,567,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D20"),U,1)=BPS("X")
"DATA",9002313.91,568,0)
D22^^MULT RX/SVC GROUP REASON CODE^A/N^^^^2^A/N
"DATA",9002313.91,568,1)
MULTIPLE PRESCRIPTION/SERVICE ORDER GROUP REASON CODE
"DATA",9002313.91,568,5)
M4^2^2222^4
"DATA",9002313.91,568,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,568,10,1,0)
S BPS("X")=""
"DATA",9002313.91,568,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,568,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,568,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,568,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,568,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,568,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D20"),U,2)=BPS("X")
"DATA",9002313.91,569,0)
D51^^OTHER PAYR TAX EXEMPT INDICATR^A/N^^^^1^A/N
"DATA",9002313.91,569,1)
OTHER PAYER PERCENTAGE TAX EXEMPT INDICATOR
"DATA",9002313.91,569,5)
P7^1^2250^7
"DATA",9002313.91,569,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,569,10,1,0)
S BPS("X")=""
"DATA",9002313.91,569,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,569,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,569,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,569,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,569,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,569,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D50"),U,1)=BPS("X")
"DATA",9002313.91,570,0)
D52^^OTHER PAYR FEE EXMPT INDICATR^A/N^^^^1^A/N
"DATA",9002313.91,570,1)
OTHER PAYER REGULATORY FEE EXEMPT INDICATOR
"DATA",9002313.91,570,5)
P8^1^2251^7
"DATA",9002313.91,570,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,570,10,1,0)
S BPS("X")=""
"DATA",9002313.91,570,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,570,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,570,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,570,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,570,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,570,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D50"),U,2)=BPS("X")
"DATA",9002313.91,571,0)
D53^^OTHER PAYR FEE TYPE COUNT^N^^^^1^N
"DATA",9002313.91,571,1)
OTHER PAYER REGULATORY FEE TYPE COUNT
"DATA",9002313.91,571,5)
P9^1^2253^7
"DATA",9002313.91,571,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,571,10,1,0)
S BPS("X")=""
"DATA",9002313.91,571,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,571,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,571,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,571,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,571,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,571,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D50"),U,3)=BPS("X")
"DATA",9002313.91,572,0)
D57^^PRESCRIBER PLACE OF SERVICE^N^^^^2^N
"DATA",9002313.91,572,1)
PRESCRIBER PLACE OF SERVICE
"DATA",9002313.91,572,5)
RG^2^2257^6
"DATA",9002313.91,572,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,572,10,1,0)
S BPS("X")=""
"DATA",9002313.91,572,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,572,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,572,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,572,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,572,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,572,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D50"),U,7)=BPS("X")
"DATA",9002313.91,573,0)
D63^^OTHER PAYER FEE TYPE CODE^A/N^^^^2^A/N
"DATA",9002313.91,573,1)
OTHER PAYER REGULATORY FEE TYPE CODE
"DATA",9002313.91,573,5)
RN^2^2263^7
"DATA",9002313.91,573,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,573,10,1,0)
S BPS("X")=""
"DATA",9002313.91,573,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,573,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,573,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,573,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,573,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,573,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D60"),U,3)=BPS("X")
"DATA",9002313.91,574,0)
C49^^OTHER PAYER RECONCILIATION ID^A/N^^^^30^A/N
"DATA",9002313.91,574,1)
OTHER PAYER RECONCILIATION ID
"DATA",9002313.91,574,5)
9V^30^2149^7
"DATA",9002313.91,574,10,0)
^9002313.9101^1^1^3180521^^^^
"DATA",9002313.91,574,10,1,0)
; Handled by SET2149^BPSFLD01
"DATA",9002313.91,574,20,0)
^9002313.9102^1^1^3180521^^^^
"DATA",9002313.91,574,20,1,0)
; Handled by SET2149^BPSFLD01
"DATA",9002313.91,574,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,574,25,1,0)
; Handled by SET2149^BPSFLD01
"DATA",9002313.91,574,30,0)
^9002313.9103^1^1^3180521^^^^
"DATA",9002313.91,574,30,1,0)
D SET2149^BPSFLD01
"DATA",9002313.91,575,0)
C60^^COMPOUND LEVEL OF COMPLEXITY^A/N^^^^2^A/N
"DATA",9002313.91,575,1)
COMPOUND LEVEL OF COMPLEXITY
"DATA",9002313.91,575,5)
AG^2^2160^12
"DATA",9002313.91,575,10,0)
^9002313.9101^1^1^3180521^^^^
"DATA",9002313.91,575,10,1,0)
S BPS("X")=""
"DATA",9002313.91,575,20,0)
^9002313.9102^1^1^3180521^^^^
"DATA",9002313.91,575,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,575,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,575,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,575,30,0)
^9002313.9103^1^1^3180521^^^
"DATA",9002313.91,575,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C50"),U,10)=BPS("X")
"DATA",9002313.91,576,0)
C90^^LTPAC BILLING METHODOLOGY^N^^^^1^N
"DATA",9002313.91,576,1)
LTPAC BILLING METHODOLOGY
"DATA",9002313.91,576,5)
KH^1^2190^4
"DATA",9002313.91,576,10,0)
^9002313.9101^1^1^3180521^^
"DATA",9002313.91,576,10,1,0)
S BPS("X")=""
"DATA",9002313.91,576,20,0)
^9002313.9102^1^1^3180521^^
"DATA",9002313.91,576,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,576,25,0)
^^1^1^3180510^
"DATA",9002313.91,576,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,576,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,576,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C80"),U,10)=BPS("X")
"DATA",9002313.91,577,0)
C91^^LTPAC DISPENSE FREQUENCY^N^^^^2^N
"DATA",9002313.91,577,1)
LTPAC DISPENSE FREQUENCY
"DATA",9002313.91,577,5)
KK^2^2191^4
"DATA",9002313.91,577,10,0)
^9002313.9101^1^1^3180521^^^
"DATA",9002313.91,577,10,1,0)
S BPS("X")=""
"DATA",9002313.91,577,20,0)
^9002313.9102^1^1^3180521^^^
"DATA",9002313.91,577,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,577,25,0)
^9002313.9104^1^1^3180510^^
"DATA",9002313.91,577,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,577,30,0)
^9002313.9103^1^1^3180521^^^
"DATA",9002313.91,577,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C90"),U,1)=BPS("X")
"DATA",9002313.91,578,0)
C92^^NUMBER LTPAC DISPENSING EVENTS^N^^^^3^N
"DATA",9002313.91,578,1)
NUMBER OF LTPAC DISPENSING EVENTS
"DATA",9002313.91,578,5)
KM^3^2192^4
"DATA",9002313.91,578,10,0)
^9002313.9101^1^1^3180521^^
"DATA",9002313.91,578,10,1,0)
S BPS("X")=""
"DATA",9002313.91,578,20,0)
^9002313.9102^1^1^3180521^^
"DATA",9002313.91,578,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,578,25,0)
^^1^1^3180510^
"DATA",9002313.91,578,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,578,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,578,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C90"),U,2)=BPS("X")
"DATA",9002313.91,579,0)
C98^^PREPARATION ENVIRONMENT CODE^N^^^^3^N
"DATA",9002313.91,579,1)
PREPARATION ENVIRONMENT EVENT CODE
"DATA",9002313.91,579,5)
KT^3^2198^4
"DATA",9002313.91,579,10,0)
^9002313.9101^1^1^3180521^^
"DATA",9002313.91,579,10,1,0)
S BPS("X")=""
"DATA",9002313.91,579,20,0)
^9002313.9102^1^1^3180521^^
"DATA",9002313.91,579,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,579,25,0)
^^1^1^3180510^
"DATA",9002313.91,579,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),3)
"DATA",9002313.91,579,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,579,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C90"),U,8)=BPS("X")
"DATA",9002313.91,580,0)
C99^^PREPARATION ENVIRONMENT TYPE^A/N^^^^2^A/N
"DATA",9002313.91,580,1)
PREPARATION ENVIRONMENT TYPE
"DATA",9002313.91,580,5)
KU^2^2199^4
"DATA",9002313.91,580,10,0)
^9002313.9101^1^1^3180703^^^^
"DATA",9002313.91,580,10,1,0)
S BPS("X")=""
"DATA",9002313.91,580,20,0)
^9002313.9102^1^1^3180703^^^^
"DATA",9002313.91,580,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,580,25,0)
^9002313.9104^1^1^3180703^^^
"DATA",9002313.91,580,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),2)
"DATA",9002313.91,580,30,0)
^9002313.9103^1^1^3180703^^^^
"DATA",9002313.91,580,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"C90"),U,9)=BPS("X")
"DATA",9002313.91,581,0)
D01^^PRESCRIBER DEA NUMBER^A/N^^^^15^A/N
"DATA",9002313.91,581,1)
PRESCRIBER DEA NUMBER
"DATA",9002313.91,581,5)
KV^15^2201^6
"DATA",9002313.91,581,10,0)
^^1^1^3180525^
"DATA",9002313.91,581,10,1,0)
S BPS("X")=$G(BPS("RX",BPS(9002313.0201),"Prescriber DEA"))
"DATA",9002313.91,581,20,0)
^9002313.9102^1^1^3180525^^^^
"DATA",9002313.91,581,20,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,581,25,0)
^9002313.9104^1^1^3180525^^^^
"DATA",9002313.91,581,25,1,0)
S BPS("X")=$$ANFF^BPSECFM($G(BPS("X")),15)
"DATA",9002313.91,581,30,0)
^^1^1^3180525^
"DATA",9002313.91,581,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D00"),U,1)=BPS("X")
"DATA",9002313.91,582,0)
D02^^TOTAL PRESCRIBED QTY REMAINING^N^^^^10^N
"DATA",9002313.91,582,1)
TOTAL PRESCRIBED QUANTITY REMAINING
"DATA",9002313.91,582,5)
KW^10^2202^4
"DATA",9002313.91,582,10,0)
^^1^1^3180530^
"DATA",9002313.91,582,10,1,0)
D FLDD02^BPSOSSG
"DATA",9002313.91,582,20,0)
^9002313.9102^1^1^3180525^^^^
"DATA",9002313.91,582,20,1,0)
; Handled by FLDD02^BPSOSSG
"DATA",9002313.91,582,25,0)
^9002313.9104^1^1^3180525^^^^
"DATA",9002313.91,582,25,1,0)
; Handled by FLDD02^BPSOSSG
"DATA",9002313.91,582,30,0)
^9002313.9103^1^1^3180525^^
"DATA",9002313.91,582,30,1,0)
D FLDD02^BPSOSSG
"DATA",9002313.91,583,0)
D14^^SUBROGATION AMOUNT REQUESTED^N^^^^9^N
"DATA",9002313.91,583,1)
SUBROGATION AMOUNT REQUESTED
"DATA",9002313.91,583,5)
KX^8^2214^10
"DATA",9002313.91,583,10,0)
^9002313.9101^1^1^3180521^^
"DATA",9002313.91,583,10,1,0)
S BPS("X")=""
"DATA",9002313.91,583,20,0)
^9002313.9102^1^1^3180521^^
"DATA",9002313.91,583,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,583,25,0)
^^1^1^3180510^
"DATA",9002313.91,583,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),8)
"DATA",9002313.91,583,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,583,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D10"),U,4)=BPS("X")
"DATA",9002313.91,584,0)
D16^^SUBMISSION TYPE CODE COUNT^N^^^^1^N
"DATA",9002313.91,584,1)
SUBMISSION TYPE CODE COUNT
"DATA",9002313.91,584,5)
KZ^1^2216^4
"DATA",9002313.91,584,10,0)
^9002313.9101^1^1^3180521^^
"DATA",9002313.91,584,10,1,0)
S BPS("S")=""
"DATA",9002313.91,584,20,0)
^9002313.9102^1^1^3180521^^
"DATA",9002313.91,584,20,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,584,25,0)
^^1^1^3180510^
"DATA",9002313.91,584,25,1,0)
S BPS("X")=$$NFF^BPSECFM($G(BPS("X")),1)
"DATA",9002313.91,584,30,0)
^9002313.9103^1^1^3180521^^
"DATA",9002313.91,584,30,1,0)
S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D10"),U,6)=BPS("X")
"DATA",9002313.91,585,0)
C47^^OTHER PAYER PROGRAM TYPE^A/N^^^^3^A/N
"DATA",9002313.91,585,1)
OTHER PAYER ADJUDICATED PROGRAM TYPE
"DATA",9002313.91,585,5)
9T^3^2147^31^31
"DATA",9002313.91,585,10,0)
^^1^1^3180807^
"DATA",9002313.91,585,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,586,0)
C50^^BENEFIT STAGE INDICATOR COUNT^N^^^^1^N
"DATA",9002313.91,586,1)
BENEFITS STAGE INDICATOR COUNT
"DATA",9002313.91,586,5)
9W^1^2150^7^28
"DATA",9002313.91,586,10,0)
^^1^1^3180807^
"DATA",9002313.91,586,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,587,0)
C51^^BENEFIT STAGE INDICATOR^A/N^^^^2^A/N
"DATA",9002313.91,587,1)
BENEFITS STAGE INDICATOR
"DATA",9002313.91,587,5)
9X^2^2151^7^28
"DATA",9002313.91,587,10,0)
^^1^1^3180807^
"DATA",9002313.91,587,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,588,0)
D60^^REGULATORY FEE COUNT^N^^^^1^N
"DATA",9002313.91,588,1)
REGULATORY FEE COUNT
"DATA",9002313.91,588,5)
RK^1^2260^10^28
"DATA",9002313.91,588,10,0)
^^1^1^3180807^
"DATA",9002313.91,588,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,589,0)
D61^^REGULATORY FEE TYPE CODE^A/N^^^^2^A/N
"DATA",9002313.91,589,1)
REGULATORY FEE TYPE CODE
"DATA",9002313.91,589,5)
RL^2^2261^10^28
"DATA",9002313.91,589,10,0)
^^1^1^3180807^
"DATA",9002313.91,589,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,590,0)
943^^MINIMUM AGE QUALIFIER^A/N^^^^1^A/N
"DATA",9002313.91,590,1)
MINIMUM AGE QUALIFIER
"DATA",9002313.91,590,5)
GQ^1^^^27
"DATA",9002313.91,590,10,0)
^^1^1^3180522^
"DATA",9002313.91,590,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,591,0)
944^^MINIMUM AGE^N^^^^3^N
"DATA",9002313.91,591,1)
MINIMUM AGE
"DATA",9002313.91,591,5)
GR^3^^^27
"DATA",9002313.91,591,10,0)
^^1^1^3180522^
"DATA",9002313.91,591,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"DATA",9002313.91,592,0)
C86^^INTERMEDIARY HLPDSK TYP COUNT^N^^^^2^N
"DATA",9002313.91,592,1)
INTERMEDIARY HELP DESK SUPPORT TYPE COUNT
"DATA",9002313.91,592,5)
KC^2^2186^^32
"DATA",9002313.91,592,10,0)
^^1^1^3180522^
"DATA",9002313.91,592,10,1,0)
; This is a response-only field which does not use the GET, FORMAT, or SET code
"FIA",9002313.02)
BPS CLAIMS
"FIA",9002313.02,0)
^BPSC(
"FIA",9002313.02,0,0)
9002313.02
"FIA",9002313.02,0,1)
y^n^p^^^^n^^n
"FIA",9002313.02,0,10)

"FIA",9002313.02,0,11)

"FIA",9002313.02,0,"RLRO")

"FIA",9002313.02,0,"VR")
1.0^BPS
"FIA",9002313.02,9002313.02)
1
"FIA",9002313.02,9002313.0201)
1
"FIA",9002313.02,9002313.0201,2147)

"FIA",9002313.02,9002313.0201,2149)

"FIA",9002313.02,9002313.0201,2150)

"FIA",9002313.02,9002313.0201,2151)

"FIA",9002313.02,9002313.0201,2160)

"FIA",9002313.02,9002313.0201,2190)

"FIA",9002313.02,9002313.0201,2191)

"FIA",9002313.02,9002313.0201,2192)

"FIA",9002313.02,9002313.0201,2198)

"FIA",9002313.02,9002313.0201,2199)

"FIA",9002313.02,9002313.0201,2201)

"FIA",9002313.02,9002313.0201,2202)

"FIA",9002313.02,9002313.0201,2214)

"FIA",9002313.02,9002313.0201,2216)

"FIA",9002313.02,9002313.0201,2217)

"FIA",9002313.02,9002313.0201,2218)

"FIA",9002313.02,9002313.0201,2221)

"FIA",9002313.02,9002313.0201,2222)

"FIA",9002313.02,9002313.0201,2251)

"FIA",9002313.02,9002313.0201,2252)

"FIA",9002313.02,9002313.0201,2253)

"FIA",9002313.02,9002313.0201,2257)

"FIA",9002313.02,9002313.0201,2260)

"FIA",9002313.02,9002313.0201,2261)

"FIA",9002313.02,9002313.0201,2263)

"FIA",9002313.02,9002313.0401)
1
"FIA",9002313.02,9002313.0401,2149)

"FIA",9002313.03)
BPS RESPONSES
"FIA",9002313.03,0)
^BPSR(
"FIA",9002313.03,0,0)
9002313.03P
"FIA",9002313.03,0,1)
y^n^p^^^^n^^n
"FIA",9002313.03,0,10)

"FIA",9002313.03,0,11)

"FIA",9002313.03,0,"RLRO")

"FIA",9002313.03,0,"VR")
1.0^BPS
"FIA",9002313.03,9002313.03)
1
"FIA",9002313.03,9002313.0301)
1
"FIA",9002313.03,9002313.0301,931)

"FIA",9002313.03,9002313.0301,932)

"FIA",9002313.03,9002313.0301,933)

"FIA",9002313.03,9002313.0301,934)

"FIA",9002313.03,9002313.0301,935)

"FIA",9002313.03,9002313.0301,936)

"FIA",9002313.03,9002313.0301,937)

"FIA",9002313.03,9002313.0301,938)

"FIA",9002313.03,9002313.0301,943)

"FIA",9002313.03,9002313.0301,944)

"FIA",9002313.03,9002313.0301,2147)

"FIA",9002313.03,9002313.0301,2150)

"FIA",9002313.03,9002313.0301,2151)

"FIA",9002313.03,9002313.0301,2158)

"FIA",9002313.03,9002313.0301,2159)

"FIA",9002313.03,9002313.0301,2166)

"FIA",9002313.03,9002313.0301,2167)

"FIA",9002313.03,9002313.0301,2168)

"FIA",9002313.03,9002313.0301,2169)

"FIA",9002313.03,9002313.0301,2170)

"FIA",9002313.03,9002313.0301,2171)

"FIA",9002313.03,9002313.0301,2172)

"FIA",9002313.03,9002313.0301,2180)

"FIA",9002313.03,9002313.0301,2181)

"FIA",9002313.03,9002313.0301,2182)

"FIA",9002313.03,9002313.0301,2183)

"FIA",9002313.03,9002313.0301,2184)

"FIA",9002313.03,9002313.0301,2185)

"FIA",9002313.03,9002313.0301,2186)

"FIA",9002313.03,9002313.0301,2193)

"FIA",9002313.03,9002313.0301,2194)

"FIA",9002313.03,9002313.0301,2195)

"FIA",9002313.03,9002313.0301,2196)

"FIA",9002313.03,9002313.0301,2215)

"FIA",9002313.03,9002313.0301,2219)

"FIA",9002313.03,9002313.0301,2220)

"FIA",9002313.03,9002313.0301,2223)

"FIA",9002313.03,9002313.0301,2224)

"FIA",9002313.03,9002313.0301,2225)

"FIA",9002313.03,9002313.0301,2241)

"FIA",9002313.03,9002313.0301,2242)

"FIA",9002313.03,9002313.0301,2243)

"FIA",9002313.03,9002313.0301,2244)

"FIA",9002313.03,9002313.0301,2245)

"FIA",9002313.03,9002313.0301,2246)

"FIA",9002313.03,9002313.0301,2247)

"FIA",9002313.03,9002313.0301,2248)

"FIA",9002313.03,9002313.0301,2249)

"FIA",9002313.03,9002313.0301,2250)

"FIA",9002313.03,9002313.0301,2254)

"FIA",9002313.03,9002313.0301,2255)

"FIA",9002313.03,9002313.0301,2256)

"FIA",9002313.03,9002313.0301,2261)

"FIA",9002313.03,9002313.0301,2262)

"FIA",9002313.03,9002313.0301,2265)

"FIA",9002313.32)
BPS PAYER RESPONSE OVERRIDES
"FIA",9002313.32,0)
^BPS(9002313.32,
"FIA",9002313.32,0,0)
9002313.32
"FIA",9002313.32,0,1)
y^y^p^^^^n^^n
"FIA",9002313.32,0,10)

"FIA",9002313.32,0,11)

"FIA",9002313.32,0,"RLRO")

"FIA",9002313.32,0,"VR")
1.0^BPS
"FIA",9002313.32,9002313.32)
1
"FIA",9002313.32,9002313.32,4.01)

"FIA",9002313.32,9002313.32,4.02)

"FIA",9002313.32,9002313.32,4.03)

"FIA",9002313.32,9002313.32,4.04)

"FIA",9002313.32,9002313.32,4.05)

"FIA",9002313.32,9002313.32,4.06)

"FIA",9002313.32,9002313.32,4.07)

"FIA",9002313.32,9002313.32,4.08)

"FIA",9002313.32,9002313.32,4.09)

"FIA",9002313.32,9002313.32,4.1)

"FIA",9002313.32,9002313.32,4.11)

"FIA",9002313.32,9002313.32,4.12)

"FIA",9002313.32,9002313.32,4.13)

"FIA",9002313.32,9002313.32,4.14)

"FIA",9002313.32,9002313.32,4.15)

"FIA",9002313.32,9002313.32,4.16)

"FIA",9002313.32,9002313.32,4.17)

"FIA",9002313.32,9002313.32,4.18)

"FIA",9002313.32,9002313.32,4.19)

"FIA",9002313.32,9002313.32,4.2)

"FIA",9002313.34)
BPS NCPDP PRESCRIBER PLACE OF SERVICE
"FIA",9002313.34,0)
^BPS(9002313.34,
"FIA",9002313.34,0,0)
9002313.34I
"FIA",9002313.34,0,1)
y^y^f^^n^^y^o^n
"FIA",9002313.34,0,10)

"FIA",9002313.34,0,11)

"FIA",9002313.34,0,"RLRO")

"FIA",9002313.34,0,"VR")
1.0^BPS
"FIA",9002313.34,9002313.34)
0
"FIA",9002313.35)
BPS NCPDP BENEFIT STAGE INDICATOR
"FIA",9002313.35,0)
^BPS(9002313.35,
"FIA",9002313.35,0,0)
9002313.35I
"FIA",9002313.35,0,1)
y^y^f^^n^^y^o^n
"FIA",9002313.35,0,10)

"FIA",9002313.35,0,11)

"FIA",9002313.35,0,"RLRO")

"FIA",9002313.35,0,"VR")
1.0^BPS
"FIA",9002313.35,9002313.35)
0
"FIA",9002313.36)
BPS NCPDP LTPAC DISPENSE FREQUENCY
"FIA",9002313.36,0)
^BPS(9002313.36,
"FIA",9002313.36,0,0)
9002313.36I
"FIA",9002313.36,0,1)
y^y^f^^n^^y^o^n
"FIA",9002313.36,0,10)

"FIA",9002313.36,0,11)

"FIA",9002313.36,0,"RLRO")

"FIA",9002313.36,0,"VR")
1.0^BPS
"FIA",9002313.36,9002313.36)
0
"FIA",9002313.37)
BPS NCPDP PATIENT PAY COMPONENT QUALIFIER
"FIA",9002313.37,0)
^BPS(9002313.37,
"FIA",9002313.37,0,0)
9002313.37I
"FIA",9002313.37,0,1)
y^y^f^^n^^y^o^n
"FIA",9002313.37,0,10)

"FIA",9002313.37,0,11)

"FIA",9002313.37,0,"RLRO")

"FIA",9002313.37,0,"VR")
1.0^BPS
"FIA",9002313.37,9002313.37)
0
"FIA",9002313.38)
BPS NCPDP OTHER PAYER PROGRAM TYPE
"FIA",9002313.38,0)
^BPS(9002313.38,
"FIA",9002313.38,0,0)
9002313.38I
"FIA",9002313.38,0,1)
y^y^f^^n^^y^o^n
"FIA",9002313.38,0,10)

"FIA",9002313.38,0,11)

"FIA",9002313.38,0,"RLRO")

"FIA",9002313.38,0,"VR")
1.0^BPS
"FIA",9002313.38,9002313.38)
0
"FIA",9002313.59)
BPS TRANSACTION
"FIA",9002313.59,0)
^BPST(
"FIA",9002313.59,0,0)
9002313.59O
"FIA",9002313.59,0,1)
y^n^p^^^^n^^n
"FIA",9002313.59,0,10)

"FIA",9002313.59,0,11)

"FIA",9002313.59,0,"RLRO")

"FIA",9002313.59,0,"VR")
1.0^BPS
"FIA",9002313.59,9002313.59)
1
"FIA",9002313.59,9002313.5914)
1
"FIA",9002313.59,9002313.5914,.11)

"FIA",9002313.77)
BPS REQUESTS
"FIA",9002313.77,0)
^BPS(9002313.77,
"FIA",9002313.77,0,0)
9002313.77
"FIA",9002313.77,0,1)
y^n^p^^^^n^^n
"FIA",9002313.77,0,10)

"FIA",9002313.77,0,11)

"FIA",9002313.77,0,"RLRO")

"FIA",9002313.77,0,"VR")
1.0^BPS
"FIA",9002313.77,9002313.77)
1
"FIA",9002313.77,9002313.778)
1
"FIA",9002313.77,9002313.778,.11)

"FIA",9002313.91)
BPS NCPDP FIELD DEFS
"FIA",9002313.91,0)
^BPSF(9002313.91,
"FIA",9002313.91,0,0)
9002313.91I
"FIA",9002313.91,0,1)
y^y^f^^n^^y^o^n
"FIA",9002313.91,0,10)

"FIA",9002313.91,0,11)

"FIA",9002313.91,0,"RLRO")

"FIA",9002313.91,0,"VR")
1.0^BPS
"FIA",9002313.91,9002313.91)
0
"FIA",9002313.91,9002313.9101)
0
"FIA",9002313.91,9002313.9102)
0
"FIA",9002313.91,9002313.9103)
0
"FIA",9002313.91,9002313.9104)
0
"INI")
PRE^BPS24PRE
"MBREQ")
1
"PKG",632,-1)
1^1
"PKG",632,0)
E CLAIMS MGMT ENGINE^BPS^ELECTRONIC CLAIMS MGT
"PKG",632,22,0)
^9.49I^1^1
"PKG",632,22,1,0)
1.0^3041008^3041130^568
"PKG",632,22,1,"PAH",1,0)
24^3181129^520824633
"PKG",632,22,1,"PAH",1,1,0)
^^1^1^3181129
"PKG",632,22,1,"PAH",1,1,1,0)
MCCF EDI TAS EPHARMACY BUILDS 5 & 6
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
30
"RTN","BPS24PRE")
0^^B9804823
"RTN","BPS24PRE",1,0)
BPS24PRE ;AITC/PD - Pre-install for BPS*1.0*24 ;2/26/2018
"RTN","BPS24PRE",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**24**;;Build 43
"RTN","BPS24PRE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPS24PRE",4,0)
 ;
"RTN","BPS24PRE",5,0)
 Q
"RTN","BPS24PRE",6,0)
 ;
"RTN","BPS24PRE",7,0)
PRE ; Pre-install functions are coded here.
"RTN","BPS24PRE",8,0)
 ;
"RTN","BPS24PRE",9,0)
 D MES^XPDUTL("  Starting pre-install of BPS*1.0*24")
"RTN","BPS24PRE",10,0)
 ;
"RTN","BPS24PRE",11,0)
 ; Perform the next two procedures only the first time this patch is loaded.
"RTN","BPS24PRE",12,0)
 ;
"RTN","BPS24PRE",13,0)
 I '$$PATCH^XPDUTL("BPS*1.0*24") D
"RTN","BPS24PRE",14,0)
 . ;
"RTN","BPS24PRE",15,0)
 . ; Update descriptions in BPS NCPDP FIELD DEFS file #9002313.91
"RTN","BPS24PRE",16,0)
 . D FIELDS
"RTN","BPS24PRE",17,0)
 . ;
"RTN","BPS24PRE",18,0)
 . ; Update segment name in BPS NCPDP SEGMENTS file #9002313.9
"RTN","BPS24PRE",19,0)
 . D UPDSEG
"RTN","BPS24PRE",20,0)
 . Q
"RTN","BPS24PRE",21,0)
 ;
"RTN","BPS24PRE",22,0)
 D MES^XPDUTL("  Finished pre-install of BPS*1.0*24")
"RTN","BPS24PRE",23,0)
 Q
"RTN","BPS24PRE",24,0)
 ;
"RTN","BPS24PRE",25,0)
FIELDS ; Update Fields Defs with new descriptions
"RTN","BPS24PRE",26,0)
 N LINE,DATA,NUM,NAME,DA,DIE,DR,CNT
"RTN","BPS24PRE",27,0)
 D MES^XPDUTL("    - Updating BPS NCPDP FIELD DEFS")
"RTN","BPS24PRE",28,0)
 S CNT=0
"RTN","BPS24PRE",29,0)
 F LINE=1:1 S DATA=$P($T(NFLDS+LINE),";;",2,99) Q:DATA=""  D
"RTN","BPS24PRE",30,0)
 . S NUM=$P(DATA,";",1),NAME=$P(DATA,";",2)
"RTN","BPS24PRE",31,0)
 . S DIE=9002313.91
"RTN","BPS24PRE",32,0)
 . S DA=$O(^BPSF(DIE,"B",NUM,""))
"RTN","BPS24PRE",33,0)
 . I 'DA D MES^XPDUTL("      - No IEN found for entry "_NUM_",field: "_NAME) Q
"RTN","BPS24PRE",34,0)
 . S DR=".03////^S X=NAME",CNT=CNT+1
"RTN","BPS24PRE",35,0)
 . D ^DIE
"RTN","BPS24PRE",36,0)
 D MES^XPDUTL("      - "_CNT_" entries updated")
"RTN","BPS24PRE",37,0)
 D MES^XPDUTL("    - Done with BPS NCPDP FIELD DEFS")
"RTN","BPS24PRE",38,0)
 D MES^XPDUTL(" ")
"RTN","BPS24PRE",39,0)
 Q
"RTN","BPS24PRE",40,0)
 ;
"RTN","BPS24PRE",41,0)
UPDSEG ; Update Segment with new 
"RTN","BPS24PRE",42,0)
 N DA,DIE,DR,NAME,ONAME
"RTN","BPS24PRE",43,0)
 D MES^XPDUTL("    - Updating BPS NCPDP SEGMENTS")
"RTN","BPS24PRE",44,0)
 S ONAME="RESPONSE COORDINATION OF BENEF"
"RTN","BPS24PRE",45,0)
 S NAME="RESPONSE OTHER PAYERS"
"RTN","BPS24PRE",46,0)
 S DIE=9002313.9
"RTN","BPS24PRE",47,0)
 S DA=$O(^BPSF(DIE,"B",ONAME,""))
"RTN","BPS24PRE",48,0)
 I 'DA D MES^XPDUTL("      - No IEN found for entry "_ONAME_",field: "_NAME) Q
"RTN","BPS24PRE",49,0)
 S DR=".01////^S X=NAME"
"RTN","BPS24PRE",50,0)
 D ^DIE
"RTN","BPS24PRE",51,0)
 D MES^XPDUTL("      - entry updated")
"RTN","BPS24PRE",52,0)
 D MES^XPDUTL("    - Done with BPS NCPDP SEGMENTS")
"RTN","BPS24PRE",53,0)
 Q
"RTN","BPS24PRE",54,0)
 ;
"RTN","BPS24PRE",55,0)
NFLDS ; Fields to be updated
"RTN","BPS24PRE",56,0)
 ;;101;IIN NUMBER
"RTN","BPS24PRE",57,0)
 ;;348;BASIS OF CALC - REGULATORY FEE
"RTN","BPS24PRE",58,0)
 ;;349;BASIS OF CALC - % TAX
"RTN","BPS24PRE",59,0)
 ;;433;PATIENT PAID AMOUNT REPORTED
"RTN","BPS24PRE",60,0)
 ;;481;REGULATORY FEE AMT SUBMITTED
"RTN","BPS24PRE",61,0)
 ;;482;PERCENT TAX AMT SUBMITTED
"RTN","BPS24PRE",62,0)
 ;;483;PERCENT TAX RATE SUBMITTED
"RTN","BPS24PRE",63,0)
 ;;484;PERCENTAGE TAX BASIS SBMTTD
"RTN","BPS24PRE",64,0)
 ;;530;PREVIOUS DATE OF SERVICE
"RTN","BPS24PRE",65,0)
 ;;531;QTY OF PREVIOUS DISPENSING
"RTN","BPS24PRE",66,0)
 ;;551;FORMULARY ALT PRODUCT COUNT
"RTN","BPS24PRE",67,0)
 ;;552;FORMULARY ALT ID QUALIFIER
"RTN","BPS24PRE",68,0)
 ;;553;FORMULARY ALTERNATIVE ID
"RTN","BPS24PRE",69,0)
 ;;554;FORMULARY ALT INCENTIVE
"RTN","BPS24PRE",70,0)
 ;;555;FORMULARY ALT COST SHARE
"RTN","BPS24PRE",71,0)
 ;;556;FORMULARY ALT DESCRIPTION
"RTN","BPS24PRE",72,0)
 ;;557;PERCENT TAX EXEMPT INDICATOR
"RTN","BPS24PRE",73,0)
 ;;558;REGULATORY FEE AMOUNT PAID
"RTN","BPS24PRE",74,0)
 ;;559;PERCENTAGE TAX AMOUNT PAID
"RTN","BPS24PRE",75,0)
 ;;560;PERCENTAGE TAX RATE PAID
"RTN","BPS24PRE",76,0)
 ;;561;PERCENTAGE TAX BASIS PAID
"RTN","BPS24PRE",77,0)
 ;;568;PAYER/HEALTH PLAN ID QUALIFIER
"RTN","BPS24PRE",78,0)
 ;;569;PAYER/HEALTH PLAN ID
"RTN","BPS24PRE",79,0)
 ;;575;PATIENT PERCENTAGE TAX AMOUNT
"RTN","BPS24PRE",80,0)
 ;;A28;ADJUDICATED PROGRAM TYPE
"RTN","BPS24PRE",81,0)
 ;;A29;REPORTED ADJUDICATED PROG TYPE
"RTN","BPS24PRE",82,0)
 ;;B56;LAST KNOWN IIN NUMBER
"RTN","BPS24PRE",83,0)
 ;;
"RTN","BPS24PRE",84,0)
 ;
"RTN","BPSBUTL")
0^19^B141492794
"RTN","BPSBUTL",1,0)
BPSBUTL ;BHAM ISC/MFR/VA/DLF - IB Communication Utilities ;06/01/2004
"RTN","BPSBUTL",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,2,5,7,8,9,10,11,15,20,24**;JUN 2004;Build 43
"RTN","BPSBUTL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSBUTL",4,0)
 ;Reference to STORESP^IBNCPDP supported by DBIA 4299
"RTN","BPSBUTL",5,0)
 Q
"RTN","BPSBUTL",6,0)
 ;
"RTN","BPSBUTL",7,0)
 ;CLAIM - pointer to #9002313.02
"RTN","BPSBUTL",8,0)
 ;TRNDX - ptr to #9002313.59
"RTN","BPSBUTL",9,0)
 ;REASON -  text name of the close reason
"RTN","BPSBUTL",10,0)
 ;PAPER - 1=drop to paper
"RTN","BPSBUTL",11,0)
 ;RELCOP - 1 (Yes) or 0 (No) release copay or not?
"RTN","BPSBUTL",12,0)
 ;COMMENT - comment
"RTN","BPSBUTL",13,0)
 ;ERROR - array by reference for error details
"RTN","BPSBUTL",14,0)
 ;
"RTN","BPSBUTL",15,0)
CLOSE(CLAIM,TRNDX,REASON,PAPER,RELCOP,COMMENT,ERROR) ; Send IB an update on the CLAIM status for a Closed Claim
"RTN","BPSBUTL",16,0)
 N DFN,BPSARRY,BILLNUM,CLAIMNFO,FILLNUM,RXIEN,TRANINFO
"RTN","BPSBUTL",17,0)
 ;
"RTN","BPSBUTL",18,0)
 ; - Data gathering
"RTN","BPSBUTL",19,0)
 D GETS^DIQ("9002313.59",TRNDX,"1.11;9","I","TRANINFO")
"RTN","BPSBUTL",20,0)
 S RXIEN=TRANINFO(9002313.59,TRNDX_",",1.11,"I")
"RTN","BPSBUTL",21,0)
 I $$RXAPI1^BPSUTIL1(RXIEN,.01)="" S ERROR="Prescription not found." Q
"RTN","BPSBUTL",22,0)
 S BPSARRY("FILL NUMBER")=TRANINFO(9002313.59,TRNDX_",",9,"I")
"RTN","BPSBUTL",23,0)
 D GETS^DIQ("9002313.02",CLAIM,"400*;401;402;403;426","","CLAIMNFO")
"RTN","BPSBUTL",24,0)
 S BPSARRY("DOS")=$G(CLAIMNFO("9002313.02",CLAIM_",","401"))
"RTN","BPSBUTL",25,0)
 I BPSARRY("DOS") S BPSARRY("DOS")=BPSARRY("DOS")-17000000
"RTN","BPSBUTL",26,0)
 S FILLNUM=+BPSARRY("FILL NUMBER")
"RTN","BPSBUTL",27,0)
 S DFN=$$RXAPI1^BPSUTIL1(RXIEN,2,"I")
"RTN","BPSBUTL",28,0)
 S BPSARRY("FILLED BY")=$$RXAPI1^BPSUTIL1(RXIEN,16,"I")
"RTN","BPSBUTL",29,0)
 S BPSARRY("PRESCRIPTION")=RXIEN
"RTN","BPSBUTL",30,0)
 S BPSARRY("BILLED")=$$DFF2EXT^BPSECFM($P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","426"),"DQ",2))
"RTN","BPSBUTL",31,0)
 S BPSARRY("CLAIMID")=$P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","402"),"D2",2)
"RTN","BPSBUTL",32,0)
 S BPSARRY("PLAN")=$P(^BPST(TRNDX,10,1,0),"^")
"RTN","BPSBUTL",33,0)
 S BPSARRY("STATUS")="CLOSED"
"RTN","BPSBUTL",34,0)
 S BPSARRY("PAID")=0
"RTN","BPSBUTL",35,0)
 S BPSARRY("RELEASE DATE")=$S(FILLNUM=0:$$RXAPI1^BPSUTIL1(RXIEN,31,"I"),1:$$RXSUBF1^BPSUTIL1(RXIEN,52,52.1,FILLNUM,17,"I"))
"RTN","BPSBUTL",36,0)
 S BPSARRY("USER")=DUZ
"RTN","BPSBUTL",37,0)
 S BPSARRY("EPHARM")=$$GET1^DIQ(9002313.59,TRNDX,1.07,"I")
"RTN","BPSBUTL",38,0)
 S BPSARRY("RXCOB")=$$COB59^BPSUTIL2(TRNDX)
"RTN","BPSBUTL",39,0)
 I REASON'="" D
"RTN","BPSBUTL",40,0)
 . S BPSARRY("CLOSE REASON")=$O(^IBE(356.8,"B",REASON,0))
"RTN","BPSBUTL",41,0)
 . S BPSARRY("DROP TO PAPER")=+$G(PAPER)
"RTN","BPSBUTL",42,0)
 . S BPSARRY("RELEASE COPAY")=+$G(RELCOP)
"RTN","BPSBUTL",43,0)
 I $G(COMMENT)]"" S BPSARRY("CLOSE COMMENT")=COMMENT
"RTN","BPSBUTL",44,0)
 ;
"RTN","BPSBUTL",45,0)
 ; If dropped to Paper, increment the counter in BPS Statistics
"RTN","BPSBUTL",46,0)
 I BPSARRY("DROP TO PAPER")=1 D INCSTAT^BPSOSUD("R",8)
"RTN","BPSBUTL",47,0)
 ;
"RTN","BPSBUTL",48,0)
 ; Call IB
"RTN","BPSBUTL",49,0)
 S BILLNUM=$$STORESP^IBNCPDP(DFN,.BPSARRY)
"RTN","BPSBUTL",50,0)
 Q
"RTN","BPSBUTL",51,0)
 ; Send IB an update on the CLAIM status for a restocked or deleted prescription
"RTN","BPSBUTL",52,0)
CLOSE2(RXIEN,BFILL,BWHERE) ;
"RTN","BPSBUTL",53,0)
 N IEN59,BPSARRY,DFN,BILLNUM,FILL,REASON
"RTN","BPSBUTL",54,0)
 N CLAIMNFO
"RTN","BPSBUTL",55,0)
 N DIE,DA,DR
"RTN","BPSBUTL",56,0)
 ;
"RTN","BPSBUTL",57,0)
 ; Check parameters
"RTN","BPSBUTL",58,0)
 I '$G(RXIEN) S ERROR="No prescription parameter" Q
"RTN","BPSBUTL",59,0)
 I $G(BFILL)="" S ERROR="No fill parameter" Q
"RTN","BPSBUTL",60,0)
 I $G(BWHERE)="" S ERROR="No RX Action parameter" Q
"RTN","BPSBUTL",61,0)
 ;
"RTN","BPSBUTL",62,0)
 I $$RXAPI1^BPSUTIL1(RXIEN,.01)="" S ERROR="Prescription not found." Q
"RTN","BPSBUTL",63,0)
 I ",DE,RS,"'[(","_BWHERE_",") S ERROR="Invalid BWHERE parameter" Q
"RTN","BPSBUTL",64,0)
 ;
"RTN","BPSBUTL",65,0)
 ; Calculate the transaction IEN and see that it exists
"RTN","BPSBUTL",66,0)
 S IEN59=$$IEN59^BPSOSRX(RXIEN,BFILL,1)
"RTN","BPSBUTL",67,0)
 I '$D(^BPST(IEN59,0)) Q
"RTN","BPSBUTL",68,0)
 ;
"RTN","BPSBUTL",69,0)
 ; Get claim data
"RTN","BPSBUTL",70,0)
 S CLAIM=$P(^BPST(IEN59,0),"^",4)
"RTN","BPSBUTL",71,0)
 I 'CLAIM S ERROR="Claim not found in BPS Transaction" Q
"RTN","BPSBUTL",72,0)
 D GETS^DIQ("9002313.02",CLAIM,"400*;401;402;426","","CLAIMNFO")
"RTN","BPSBUTL",73,0)
 S BPSARRY("FILL NUMBER")=+BFILL
"RTN","BPSBUTL",74,0)
 S BPSARRY("DOS")=$G(CLAIMNFO("9002313.02",CLAIM_",","401"))
"RTN","BPSBUTL",75,0)
 I BPSARRY("DOS") S BPSARRY("DOS")=BPSARRY("DOS")-17000000
"RTN","BPSBUTL",76,0)
 ;
"RTN","BPSBUTL",77,0)
 ; Get prescription data
"RTN","BPSBUTL",78,0)
 S FILLNUM=BPSARRY("FILL NUMBER")
"RTN","BPSBUTL",79,0)
 S DFN=$$RXAPI1^BPSUTIL1(RXIEN,2,"I")
"RTN","BPSBUTL",80,0)
 S BPSARRY("FILLED BY")=$$RXAPI1^BPSUTIL1(RXIEN,16,"I")
"RTN","BPSBUTL",81,0)
 S BPSARRY("PRESCRIPTION")=RXIEN
"RTN","BPSBUTL",82,0)
 S BPSARRY("BILLED")=$$DFF2EXT^BPSECFM($P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","426"),"DQ",2))
"RTN","BPSBUTL",83,0)
 S BPSARRY("CLAIMID")=$P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","402"),"D2",2)
"RTN","BPSBUTL",84,0)
 S BPSARRY("PLAN")=$P(^BPST(IEN59,10,1,0),"^")
"RTN","BPSBUTL",85,0)
 S BPSARRY("STATUS")="CLOSED"
"RTN","BPSBUTL",86,0)
 S BPSARRY("PAID")=0
"RTN","BPSBUTL",87,0)
 S BPSARRY("RELEASE DATE")=$S(FILLNUM=0:$$RXAPI1^BPSUTIL1(RXIEN,31,"I"),1:$$RXSUBF1^BPSUTIL1(RXIEN,52,52.1,FILLNUM,17,"I"))
"RTN","BPSBUTL",88,0)
 S BPSARRY("USER")=.5
"RTN","BPSBUTL",89,0)
 S BPSARRY("EPHARM")=$$GET1^DIQ(9002313.59,IEN59,1.07,"I")
"RTN","BPSBUTL",90,0)
 S BPSARRY("RXCOB")=$$COB59^BPSUTIL2(IEN59)
"RTN","BPSBUTL",91,0)
 ;
"RTN","BPSBUTL",92,0)
 ; Determine the reversal reason based on the BWHERE value
"RTN","BPSBUTL",93,0)
 I BWHERE="RS" S REASON="PRESCRIPTION NOT RELEASED"
"RTN","BPSBUTL",94,0)
 I BWHERE="DE" S REASON="PRESCRIPTION DELETED"
"RTN","BPSBUTL",95,0)
 I REASON]"" S BPSARRY("CLOSE REASON")=$O(^IBE(356.8,"B",REASON,0))
"RTN","BPSBUTL",96,0)
 ;
"RTN","BPSBUTL",97,0)
 ;if a refill was deleted while RX is still active (not deleted) then send DELETION OF REFILL comment for CT record
"RTN","BPSBUTL",98,0)
 I BWHERE="DE",$$RXSTATUS^BPSSCRU2(RXIEN)'=13 S BPSARRY("CLOSE COMMENT")="DELETION OF REFILL ONLY - ORIGINAL RX MAY REMAIN ACTIVE"
"RTN","BPSBUTL",99,0)
 ;
"RTN","BPSBUTL",100,0)
 ;
"RTN","BPSBUTL",101,0)
 ; Update IB
"RTN","BPSBUTL",102,0)
 S BILLNUM=$$STORESP^IBNCPDP(DFN,.BPSARRY)
"RTN","BPSBUTL",103,0)
 ;
"RTN","BPSBUTL",104,0)
 ; Update the claim file that the claim is closed and the reason why.
"RTN","BPSBUTL",105,0)
 S DIE="^BPSC(",DA=CLAIM
"RTN","BPSBUTL",106,0)
 S DR="901///1;902///"_$$NOW^XLFDT()_";903////.5;904///"_BPSARRY("CLOSE REASON")
"RTN","BPSBUTL",107,0)
 D ^DIE
"RTN","BPSBUTL",108,0)
 ;
"RTN","BPSBUTL",109,0)
 ; If this is a primary claim, check and send a bulletin if the secondary claim is open or if there
"RTN","BPSBUTL",110,0)
 ;   is a non-cancelled IB bill for the secondary claim
"RTN","BPSBUTL",111,0)
 I BPSARRY("RXCOB")=1 D BULL^BPSECMP2(RXIEN,BFILL,CLAIM,DFN,REASON,BPSARRY("CLAIMID"))
"RTN","BPSBUTL",112,0)
 Q
"RTN","BPSBUTL",113,0)
 ;
"RTN","BPSBUTL",114,0)
 ; Function to return Transaction, claim, and response IENs
"RTN","BPSBUTL",115,0)
 ; Parameters:
"RTN","BPSBUTL",116,0)
 ;    RXI: Prescription IEN
"RTN","BPSBUTL",117,0)
 ;    RXR: Fill Number
"RTN","BPSBUTL",118,0)
 ;    COB: COB Indicator
"RTN","BPSBUTL",119,0)
 ; Returns:
"RTN","BPSBUTL",120,0)
 ;    IEN59^Claim IEN^Response IEN^Reversal Claim IEN^Reversal Response IEN^Prescription/Service Ref Number from BPS CLAIMS file
"RTN","BPSBUTL",121,0)
CLAIM(RXI,RXR,COB) ;
"RTN","BPSBUTL",122,0)
 N IEN59,CLAIMIEN,RESPIEN,REVCLAIM,REVRESP,ECMENUM
"RTN","BPSBUTL",123,0)
 I '$G(RXI) Q ""
"RTN","BPSBUTL",124,0)
 ; Note that IEN59 will treat RXR="" as the original fill (0)
"RTN","BPSBUTL",125,0)
 ;   and COB="" as primary (1)
"RTN","BPSBUTL",126,0)
 S IEN59=$$IEN59^BPSOSRX(RXI,$G(RXR),$G(COB))
"RTN","BPSBUTL",127,0)
 I '$D(^BPST(IEN59,0)) Q ""
"RTN","BPSBUTL",128,0)
 S CLAIMIEN=$P(^BPST(IEN59,0),"^",4),RESPIEN=$P(^BPST(IEN59,0),"^",5)
"RTN","BPSBUTL",129,0)
 S REVCLAIM=$P($G(^BPST(IEN59,4)),"^",1),REVRESP=$P($G(^BPST(IEN59,4)),"^",2)
"RTN","BPSBUTL",130,0)
 S ECMENUM=$$ECMENUM^BPSSCRU2(IEN59)
"RTN","BPSBUTL",131,0)
 Q IEN59_U_CLAIMIEN_U_RESPIEN_U_REVCLAIM_U_REVRESP_U_ECMENUM
"RTN","BPSBUTL",132,0)
 ;
"RTN","BPSBUTL",133,0)
 ; NABP - Return the value in the Service Provider ID (201-B1) field
"RTN","BPSBUTL",134,0)
 ;   of the claim.  Note that as of the NPI release (BPS*1*2), this
"RTN","BPSBUTL",135,0)
 ;   API may return NPI instead of NABP/NCPDP
"RTN","BPSBUTL",136,0)
NABP(RXP,BFILL) ;
"RTN","BPSBUTL",137,0)
 I '$G(RXP) Q ""
"RTN","BPSBUTL",138,0)
 I $G(BFILL)="" S BFILL=0
"RTN","BPSBUTL",139,0)
 N BPSTIEN,BPSCIEN,DFILL,NABP
"RTN","BPSBUTL",140,0)
 S DFILL=$E($TR($J("",4-$L(BFILL))," ","0")_BFILL,1,4)
"RTN","BPSBUTL",141,0)
 S BPSTIEN=RXP_"."_DFILL_"1"
"RTN","BPSBUTL",142,0)
 I 'BPSTIEN Q ""
"RTN","BPSBUTL",143,0)
 S BPSCIEN=$P($G(^BPST(BPSTIEN,0)),U,4)
"RTN","BPSBUTL",144,0)
 I 'BPSCIEN Q ""
"RTN","BPSBUTL",145,0)
 S NABP=$P($G(^BPSC(BPSCIEN,200)),U)
"RTN","BPSBUTL",146,0)
 Q NABP
"RTN","BPSBUTL",147,0)
 ;
"RTN","BPSBUTL",148,0)
 ; DIVNCPDP - For a specific outpatient site, return the NPI & NCPDP.
"RTN","BPSBUTL",149,0)
 ; Note that the procedure name is misleading but when originally
"RTN","BPSBUTL",150,0)
 ;   coded, this procedure only returned NCPDP.
"RTN","BPSBUTL",151,0)
 ;
"RTN","BPSBUTL",152,0)
 ; Input
"RTN","BPSBUTL",153,0)
 ;   BPSDIV - Outpatient Site (#59)
"RTN","BPSBUTL",154,0)
 ; Output
"RTN","BPSBUTL",155,0)
 ;   "" - No BPSDIV passed in
"RTN","BPSBUTL",156,0)
 ;   NCPDP and NPI separated by a caret
"RTN","BPSBUTL",157,0)
DIVNCPDP(BPSDIV) ;
"RTN","BPSBUTL",158,0)
 N BPSPHARM,NPI,NCPDP
"RTN","BPSBUTL",159,0)
 I '$G(BPSDIV) Q "^"
"RTN","BPSBUTL",160,0)
 ;
"RTN","BPSBUTL",161,0)
 ; Get the NCPDP
"RTN","BPSBUTL",162,0)
 S NCPDP=""
"RTN","BPSBUTL",163,0)
 S BPSPHARM=$$GETPHARM^BPSUTIL(BPSDIV)
"RTN","BPSBUTL",164,0)
 I BPSPHARM S NCPDP=$$GET1^DIQ(9002313.56,BPSPHARM_",",.02)
"RTN","BPSBUTL",165,0)
 ;
"RTN","BPSBUTL",166,0)
 ; Get the NPI and validate it
"RTN","BPSBUTL",167,0)
 S NPI=+$$NPI^BPSNPI("Pharmacy_ID",BPSDIV)
"RTN","BPSBUTL",168,0)
 I NPI=-1 S NPI=""
"RTN","BPSBUTL",169,0)
 ;
"RTN","BPSBUTL",170,0)
 Q NCPDP_"^"_NPI
"RTN","BPSBUTL",171,0)
 ;
"RTN","BPSBUTL",172,0)
 ;ADDCOMM - Add a comment to a ECME claim
"RTN","BPSBUTL",173,0)
 ;Input:
"RTN","BPSBUTL",174,0)
 ; BPRX - ien in file #52 
"RTN","BPSBUTL",175,0)
 ; BPREF - refill number (0,1,2,...)
"RTN","BPSBUTL",176,0)
 ; BPRCMNT - comment text
"RTN","BPSBUTL",177,0)
 ;Output:
"RTN","BPSBUTL",178,0)
 ;  1 - okay
"RTN","BPSBUTL",179,0)
 ; -1 - failed
"RTN","BPSBUTL",180,0)
ADDCOMM(BPRX,BPREF,BPRCMNT,BPBKG) ;
"RTN","BPSBUTL",181,0)
 ;
"RTN","BPSBUTL",182,0)
 ;BPRX    (required) - Prescription IEN
"RTN","BPSBUTL",183,0)
 ;BPREF   (optional) - Refill number
"RTN","BPSBUTL",184,0)
 ;BPRCMNT (required) - Comment text
"RTN","BPSBUTL",185,0)
 ;BPBKG   (optional) - Value 1 indicates process is running in background - BPS*1*15
"RTN","BPSBUTL",186,0)
 ;
"RTN","BPSBUTL",187,0)
 N IEN59,BPNOW,BPREC,BPDA,BPERR
"RTN","BPSBUTL",188,0)
 ; Check parameters
"RTN","BPSBUTL",189,0)
 I '$G(BPRX) Q -1
"RTN","BPSBUTL",190,0)
 I $G(BPRCMNT)="" Q -1
"RTN","BPSBUTL",191,0)
 ; Get BPS Transaction number, if needed, and check for existance
"RTN","BPSBUTL",192,0)
 S IEN59=$$IEN59^BPSOSRX(BPRX,$G(BPREF),1)
"RTN","BPSBUTL",193,0)
 I IEN59="" Q -1
"RTN","BPSBUTL",194,0)
 I '$D(^BPST(IEN59)) Q -1
"RTN","BPSBUTL",195,0)
 ; Lock record and quit if you cannot get the lock
"RTN","BPSBUTL",196,0)
 L +^BPST(9002313.59111,+IEN59):10
"RTN","BPSBUTL",197,0)
 I '$T Q -1
"RTN","BPSBUTL",198,0)
 ; Create record and file data
"RTN","BPSBUTL",199,0)
 S BPNOW=$$NOW^XLFDT
"RTN","BPSBUTL",200,0)
 D INSITEM^BPSCMT01(9002313.59111,+IEN59,BPNOW)
"RTN","BPSBUTL",201,0)
 S BPREC=$O(^BPST(IEN59,11,"B",BPNOW,99999999),-1)
"RTN","BPSBUTL",202,0)
 I BPREC>0 D
"RTN","BPSBUTL",203,0)
 .;If BPBKG is passed this is a background process and user is POSTMASTER - BPS*1*15
"RTN","BPSBUTL",204,0)
 . S BPDA(9002313.59111,BPREC_","_IEN59_",",.02)=$S($G(BPBKG):.5,1:+$G(DUZ))
"RTN","BPSBUTL",205,0)
 . S BPDA(9002313.59111,BPREC_","_IEN59_",",.03)=$E($G(BPRCMNT),1,63)
"RTN","BPSBUTL",206,0)
 . D FILE^DIE("","BPDA","BPERR")
"RTN","BPSBUTL",207,0)
 L -^BPST(9002313.59111,+IEN59)
"RTN","BPSBUTL",208,0)
 ; Quit with result
"RTN","BPSBUTL",209,0)
 I BPREC>0,'$D(BPERR) Q 1
"RTN","BPSBUTL",210,0)
 Q -1
"RTN","BPSBUTL",211,0)
 ;
"RTN","BPSBUTL",212,0)
 ;REOPEN - Reopen closed claim
"RTN","BPSBUTL",213,0)
 ;Input:
"RTN","BPSBUTL",214,0)
 ; BP59 - ien in BPS TRANSACTION file
"RTN","BPSBUTL",215,0)
 ; BP02 - ien in BPS CLAIMS file
"RTN","BPSBUTL",216,0)
 ; BPREOPDT - reopen date/time 
"RTN","BPSBUTL",217,0)
 ; BPDUZ - user DUZ (#200 ien)
"RTN","BPSBUTL",218,0)
 ; BPCOMM - reopen comment text
"RTN","BPSBUTL",219,0)
 ;Output:
"RTN","BPSBUTL",220,0)
 ; 0^message_error - error
"RTN","BPSBUTL",221,0)
 ; 1 - success
"RTN","BPSBUTL",222,0)
REOPEN(BP59,BP02,BPREOPDT,BPDUZ,BPCOMM) ;
"RTN","BPSBUTL",223,0)
 N RECIENS,BPDA,ERRARR,BPREFNO,BPRXIEN,BPZ,BPSARRY,BPDFN,BPRETVAL,BPZ1
"RTN","BPSBUTL",224,0)
 S BPDFN=$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSBUTL",225,0)
 S BPREFNO=$P($G(^BPST(BP59,1)),U)
"RTN","BPSBUTL",226,0)
 I BPREFNO="" Q "0^Null Fill Number"
"RTN","BPSBUTL",227,0)
 S BPRXIEN=$P($G(^BPST(BP59,1)),U,11)
"RTN","BPSBUTL",228,0)
 I BPRXIEN="" Q "0^Null RX ien Number"
"RTN","BPSBUTL",229,0)
 ;in VA there is only one med/claim but in some cases it can different than "1"
"RTN","BPSBUTL",230,0)
 ;so take the latest one
"RTN","BPSBUTL",231,0)
 S BPZ=$O(^BPSC(BP02,400,9999999),-1)
"RTN","BPSBUTL",232,0)
 I BPRXIEN="" Q "0^Database Error"
"RTN","BPSBUTL",233,0)
 ;============
"RTN","BPSBUTL",234,0)
 ;Now update ECME database
"RTN","BPSBUTL",235,0)
 S BPRETVAL=$$UPDREOP^BPSREOP1(BP02,0,BPREOPDT,BPDUZ,BPCOMM)
"RTN","BPSBUTL",236,0)
 I +BPRETVAL=0 D  Q BPRETVAL
"RTN","BPSBUTL",237,0)
 . ;try to reverse it in case it was done partially
"RTN","BPSBUTL",238,0)
 . I $$UPDREOP^BPSREOP1(BP02,1,"@",+BPDUZ,"@")
"RTN","BPSBUTL",239,0)
 ;============
"RTN","BPSBUTL",240,0)
 ;Now call IB API for "REOPEN" event
"RTN","BPSBUTL",241,0)
 S BPSARRY("STATUS")="REOPEN"
"RTN","BPSBUTL",242,0)
 S BPSARRY("DOS")=$P($G(^BPSC(BP02,401)),U)
"RTN","BPSBUTL",243,0)
 I BPSARRY("DOS") S BPSARRY("DOS")=BPSARRY("DOS")-17000000
"RTN","BPSBUTL",244,0)
 S BPSARRY("FILL NUMBER")=BPREFNO
"RTN","BPSBUTL",245,0)
 S BPSARRY("PRESCRIPTION")=BPRXIEN
"RTN","BPSBUTL",246,0)
 S BPSARRY("CLAIMID")=$$CONVCLID^BPSSCRU6($P($G(^BPSC(BP02,400,+BPZ,400)),U,2))
"RTN","BPSBUTL",247,0)
 S BPSARRY("DRUG")=$$DRUGIEN^BPSSCRU6(BPRXIEN,BPDFN)
"RTN","BPSBUTL",248,0)
 S BPSARRY("PLAN")=$P($G(^BPST(BP59,10,1,0)),"^")
"RTN","BPSBUTL",249,0)
 S BPSARRY("USER")=BPDUZ
"RTN","BPSBUTL",250,0)
 S BPSARRY("REOPEN COMMENT")=BPCOMM
"RTN","BPSBUTL",251,0)
 S BPSARRY("EPHARM")=$$GET1^DIQ(9002313.59,BP59,1.07,"I")
"RTN","BPSBUTL",252,0)
 S BPSARRY("RXCOB")=$$COB59^BPSUTIL2(BP59)
"RTN","BPSBUTL",253,0)
 S BPRETVAL=$$STORESP^IBNCPDP(BPDFN,.BPSARRY)
"RTN","BPSBUTL",254,0)
 ;if successful
"RTN","BPSBUTL",255,0)
 I +BPRETVAL>0 Q "1^ReOpening Claim: "_$P($G(^BPSC(BP02,0)),U)_" ... OK"
"RTN","BPSBUTL",256,0)
 ;===========
"RTN","BPSBUTL",257,0)
 ;if it was unsuccessful
"RTN","BPSBUTL",258,0)
 ;reverse ECME database (keep the user who made the attempt)
"RTN","BPSBUTL",259,0)
 I $$UPDREOP^BPSREOP1(BP02,1,"@",+BPDUZ,"@")
"RTN","BPSBUTL",260,0)
 ;return IB error message
"RTN","BPSBUTL",261,0)
 Q BPRETVAL
"RTN","BPSBUTL",262,0)
 ;
"RTN","BPSBUTL",263,0)
GETDAT(RX,FIL,COB,LDOS,LDSUP) ;Returns Last Date of Service and Last Days Supply
"RTN","BPSBUTL",264,0)
 ;Input:
"RTN","BPSBUTL",265,0)
 ;  RX (req)  --> RX IEN
"RTN","BPSBUTL",266,0)
 ;  FIL (req) --> Fill number
"RTN","BPSBUTL",267,0)
 ;  COB (opt) --> Coordination of Benifits indicator; default is 1
"RTN","BPSBUTL",268,0)
 ;Output:
"RTN","BPSBUTL",269,0)
 ;  LDOS  --> Last Date of Service
"RTN","BPSBUTL",270,0)
 ;  LDSUP --> Last Days Supply
"RTN","BPSBUTL",271,0)
 ;
"RTN","BPSBUTL",272,0)
 Q:'($G(RX))!($G(FIL)="")
"RTN","BPSBUTL",273,0)
 S:'$G(COB) COB=1
"RTN","BPSBUTL",274,0)
 N IEN59,IEN02,STAT,IEN57
"RTN","BPSBUTL",275,0)
 S IEN02=""
"RTN","BPSBUTL",276,0)
 S IEN59=$$IEN59^BPSOSRX(RX,FIL,COB)
"RTN","BPSBUTL",277,0)
 S STAT=$P($G(^BPST(IEN59,0)),U,2)
"RTN","BPSBUTL",278,0)
 I STAT=99 S IEN02=$P($G(^BPST(IEN59,0)),U,4)
"RTN","BPSBUTL",279,0)
 I IEN02="" D
"RTN","BPSBUTL",280,0)
 . S IEN57=""
"RTN","BPSBUTL",281,0)
 . F  S IEN57=$O(^BPSTL("B",IEN59,IEN57),-1) Q:IEN57=""!(IEN02)  D
"RTN","BPSBUTL",282,0)
 .. S STAT=$P($G(^BPSTL(IEN57,0)),U,2)
"RTN","BPSBUTL",283,0)
 .. I STAT=99 S IEN02=$P($G(^BPSTL(IEN57,0)),U,4)
"RTN","BPSBUTL",284,0)
 I 'IEN02 S (LDOS,LDSUP)="" Q
"RTN","BPSBUTL",285,0)
 S LDOS=$$GET1^DIQ(9002313.02,IEN02,401,"E")  ;LAST DATE OF SERVICE
"RTN","BPSBUTL",286,0)
 I LDOS S LDOS=LDOS-17000000    ;CONVERT DATE TO FILEMAN FORMAT
"RTN","BPSBUTL",287,0)
 S LDSUP=$$GET1^DIQ(9002313.0201,"1,"_IEN02,405,"I")  ;LAST DAYS SUPPLY
"RTN","BPSBUTL",288,0)
 I LDSUP'="" S LDSUP=+$E(LDSUP,3,99)      ; remove the "D5" NCPDP field ID  (bps*1*15)
"RTN","BPSBUTL",289,0)
 Q
"RTN","BPSBUTL",290,0)
 ;
"RTN","BPSBUTL",291,0)
NFLDT(RX,FIL,COB) ;Returns Next Avail Fill Date (B04-BT) from ECME - BPS*1.0*15
"RTN","BPSBUTL",292,0)
 ;Input:                                                                
"RTN","BPSBUTL",293,0)
 ;  RX (req)  --> RX IEN                                                
"RTN","BPSBUTL",294,0)
 ;  FIL (req) --> Fill number                                           
"RTN","BPSBUTL",295,0)
 ;  COB (opt) --> Coordination of Benefits indicator; default is 1      
"RTN","BPSBUTL",296,0)
 ;Output:
"RTN","BPSBUTL",297,0)
 ;  NFLDT --> Next Avail Fill Date                                          
"RTN","BPSBUTL",298,0)
 Q:'$G(RX)!($G(FIL)="") ""
"RTN","BPSBUTL",299,0)
 S:'$G(COB) COB=1
"RTN","BPSBUTL",300,0)
 N IEN59,IEN02,STAT,NFLDT,IEN03
"RTN","BPSBUTL",301,0)
 S IEN02=""
"RTN","BPSBUTL",302,0)
 S IEN59=$$IEN59^BPSOSRX(RX,FIL,COB)
"RTN","BPSBUTL",303,0)
 S IEN03=+$P($G(^BPST(IEN59,0)),U,5),NFLDT=""
"RTN","BPSBUTL",304,0)
 S:IEN03 NFLDT=$$GET1^DIQ(9002313.0301,"1,"_IEN03,2004,"I") ;NEXT FILL DATE
"RTN","BPSBUTL",305,0)
 S:NFLDT NFLDT=NFLDT-17000000 ;CONVERT DATE TO FILEMAN FORMAT
"RTN","BPSBUTL",306,0)
 Q NFLDT
"RTN","BPSBUTL",307,0)
 ;
"RTN","BPSBUTL",308,0)
BBILL(RX,RFILL,COB) ;Return Back Bill Indicator for Pharmacy - BPS*1.0*15
"RTN","BPSBUTL",309,0)
 N IEN59,RXACT
"RTN","BPSBUTL",310,0)
 ;Return 0 if no RXI value input 
"RTN","BPSBUTL",311,0)
 I '$G(RX) Q 0
"RTN","BPSBUTL",312,0)
 ; Note that $$IEN59 will treat RFILL="" as the original fill (0)
"RTN","BPSBUTL",313,0)
 S IEN59=$$IEN59^BPSOSRX(RX,$G(RFILL),$G(COB))
"RTN","BPSBUTL",314,0)
 ;No transaction found return 0
"RTN","BPSBUTL",315,0)
 I '$D(^BPST(IEN59,0)) Q 0
"RTN","BPSBUTL",316,0)
 ;Determine if RX ACTION (field #1201) is Back Bill
"RTN","BPSBUTL",317,0)
 S RXACT=$P($G(^BPST(IEN59,12)),U)
"RTN","BPSBUTL",318,0)
 ;Back Bill code not found return 0
"RTN","BPSBUTL",319,0)
 I RXACT'="BB",RXACT'="P2",RXACT'="P2S" Q 0
"RTN","BPSBUTL",320,0)
 ;Otherwise return Back Bill indicator
"RTN","BPSBUTL",321,0)
 Q 1
"RTN","BPSBUTL",322,0)
 ;
"RTN","BPSBUTL",323,0)
AMT(RX,FIL,COB) ; Return Gross Amount Due - BPS*1*15
"RTN","BPSBUTL",324,0)
 ;  RX - rx ien
"RTN","BPSBUTL",325,0)
 ; FIL - fill#, defaults to original fill if not passed in
"RTN","BPSBUTL",326,0)
 ; COB - cob payer sequence, defaults to 1 if not passed in
"RTN","BPSBUTL",327,0)
 ;
"RTN","BPSBUTL",328,0)
 N AMT,IEN59,QN
"RTN","BPSBUTL",329,0)
 S AMT=""
"RTN","BPSBUTL",330,0)
 I '$G(RX) G AMTX
"RTN","BPSBUTL",331,0)
 S IEN59=$$IEN59^BPSOSRX(RX,$G(FIL),$G(COB))  ; ien to BPS Transaction file
"RTN","BPSBUTL",332,0)
 I '$D(^BPST(IEN59,0)) G AMTX                 ; make sure it exists
"RTN","BPSBUTL",333,0)
 S QN=+$O(^BPST(IEN59,10,0)) I 'QN G AMTX     ; get 9002313.59902 subfile ien
"RTN","BPSBUTL",334,0)
 S AMT=+$P($G(^BPST(IEN59,10,QN,2)),U,4)      ; gross amount due, field 902.15
"RTN","BPSBUTL",335,0)
AMTX ;
"RTN","BPSBUTL",336,0)
 Q AMT
"RTN","BPSBUTL",337,0)
 ;
"RTN","BPSBUTL",338,0)
ELIG(RX,FIL,COB) ; Veteran Eligibility - BPS*1*15
"RTN","BPSBUTL",339,0)
 ; RX  - rx ien
"RTN","BPSBUTL",340,0)
 ; FIL - fill#, defaults to original fill if not passed in
"RTN","BPSBUTL",341,0)
 ; COB - cob payer sequence, defaults to 1 if not passed in
"RTN","BPSBUTL",342,0)
 ;
"RTN","BPSBUTL",343,0)
 Q:'$G(RX) ""
"RTN","BPSBUTL",344,0)
 ; ien to BPS Transaction file
"RTN","BPSBUTL",345,0)
 N IEN59 S IEN59=$$IEN59^BPSOSRX(RX,$G(FIL),$G(COB)) Q:'IEN59 ""
"RTN","BPSBUTL",346,0)
 Q:'$D(^BPST(IEN59,0)) ""
"RTN","BPSBUTL",347,0)
 ; ELIGIBILITY field 901.04
"RTN","BPSBUTL",348,0)
 Q $P($G(^BPST(IEN59,9)),U,4)
"RTN","BPSBUTL",349,0)
 ;
"RTN","BPSBUTL",350,0)
GETBAMT(RXIEN,FILL,COB)  ; Retrieve the billed amount
"RTN","BPSBUTL",351,0)
 ; RXIEN = Prescription ien (required)
"RTN","BPSBUTL",352,0)
 ; FILL# = Fill Number (optional, defaults to latest fill)
"RTN","BPSBUTL",353,0)
 ; COB = Coordination of Benefits (optional, defaults to 1)
"RTN","BPSBUTL",354,0)
 N X,BAMT,CLAIMIEN
"RTN","BPSBUTL",355,0)
 S X=$$CLAIM(RXIEN,$G(FILL),$G(COB))
"RTN","BPSBUTL",356,0)
 S CLAIMIEN=$P(X,U,2)
"RTN","BPSBUTL",357,0)
 S BAMT=$$TOTPRICE^BPSSCRLG(CLAIMIEN)
"RTN","BPSBUTL",358,0)
 Q BAMT
"RTN","BPSBUTL",359,0)
 ;
"RTN","BPSBUTL",360,0)
RESUBMIT(RX,REFILL,COB) ; Return Resubmit indicator for Pharmacy - BPS*1*20.
"RTN","BPSBUTL",361,0)
 N BPSIEN59,BPSRXACT
"RTN","BPSBUTL",362,0)
 I '$G(RX) Q 0
"RTN","BPSBUTL",363,0)
 ;
"RTN","BPSBUTL",364,0)
 ; Determine BPS Transaction number.  If none, Quit with '0'.
"RTN","BPSBUTL",365,0)
 ;
"RTN","BPSBUTL",366,0)
 S BPSIEN59=$$IEN59^BPSOSRX(RX,$G(REFILL),$G(COB))
"RTN","BPSBUTL",367,0)
 I 'BPSIEN59 Q 0
"RTN","BPSBUTL",368,0)
 I '$D(^BPST(BPSIEN59,0)) Q 0
"RTN","BPSBUTL",369,0)
 ;
"RTN","BPSBUTL",370,0)
 ; Pull the RX Action from the BPS Transaction.  If it's not one that
"RTN","BPSBUTL",371,0)
 ; indicates resubmission from the ECME User Screen, then Quit with
"RTN","BPSBUTL",372,0)
 ; '0'.  Otherwise, Quit with '1'.
"RTN","BPSBUTL",373,0)
 ;
"RTN","BPSBUTL",374,0)
 S BPSRXACT=$$GET1^DIQ(9002313.59,BPSIEN59_",",1201)
"RTN","BPSBUTL",375,0)
 I ",ERES,ERWV,ERNB,"'[(","_BPSRXACT_",") Q 0
"RTN","BPSBUTL",376,0)
 Q 1
"RTN","BPSBUTL",377,0)
 ;
"RTN","BPSBUTL",378,0)
GETCOB(RXIEN,FILL) ; Retrieve the COB payer sequence for usage by PSO
"RTN","BPSBUTL",379,0)
 ;   Input:  RXIEN and FILL (both are required)
"RTN","BPSBUTL",380,0)
 ;  Output:  Function value will be one of the following
"RTN","BPSBUTL",381,0)
 ;           ""  (if the prescription fill cannot be found in BPS Transaction)
"RTN","BPSBUTL",382,0)
 ;           -1  (when there are multiple COB's/payers found in BPS Transaction)
"RTN","BPSBUTL",383,0)
 ;           Otherwise,
"RTN","BPSBUTL",384,0)
 ;           COB#^BPS Transaction IEN
"RTN","BPSBUTL",385,0)
 N RET,PRI59,SEC59
"RTN","BPSBUTL",386,0)
 S RET=""
"RTN","BPSBUTL",387,0)
 I '$G(RXIEN) G GETCOBX
"RTN","BPSBUTL",388,0)
 I $G(FILL)="" G GETCOBX
"RTN","BPSBUTL",389,0)
 ;
"RTN","BPSBUTL",390,0)
 S PRI59=+$$IEN59^BPSOSRX(RXIEN,FILL,1)   ; possible primary BPS transaction ien
"RTN","BPSBUTL",391,0)
 S SEC59=+$$IEN59^BPSOSRX(RXIEN,FILL,2)   ; possible secondary BPS transaction ien
"RTN","BPSBUTL",392,0)
 ;
"RTN","BPSBUTL",393,0)
 I $D(^BPST(PRI59)),$D(^BPST(SEC59)) S RET=-1 G GETCOBX   ; both payers exist, get out
"RTN","BPSBUTL",394,0)
 I $D(^BPST(PRI59)) S RET=1_U_PRI59 G GETCOBX
"RTN","BPSBUTL",395,0)
 I $D(^BPST(SEC59)) S RET=2_U_SEC59 G GETCOBX
"RTN","BPSBUTL",396,0)
 ;
"RTN","BPSBUTL",397,0)
GETCOBX ;
"RTN","BPSBUTL",398,0)
 Q RET
"RTN","BPSBUTL",399,0)
 ;
"RTN","BPSBUTL",400,0)
ADDFLDS(RX,FIL,COB) ;Returns Additional NCPDP fields from ECME
"RTN","BPSBUTL",401,0)
 ;Input:                                                                
"RTN","BPSBUTL",402,0)
 ;  RX (req)  --> RX IEN                                                
"RTN","BPSBUTL",403,0)
 ;  FIL (req) --> Fill number
"RTN","BPSBUTL",404,0)
 ;  COB (req) --> 1=Primary, 2=Secondary, 3=Tertiary                                          
"RTN","BPSBUTL",405,0)
 ;Output:
"RTN","BPSBUTL",406,0)
 ;  BPSREC --> a string separated by "^" containing the output of the BPSARR array
"RTN","BPSBUTL",407,0)
 ;                                         
"RTN","BPSBUTL",408,0)
 Q:'$G(RX)!($G(FIL)="") ""
"RTN","BPSBUTL",409,0)
 N BPSAMT,BPSARR,BPSCNT,BPSEDT,BPSFLDS,BPSREC,BPSSDT,IEN03,IEN59
"RTN","BPSBUTL",410,0)
 ;
"RTN","BPSBUTL",411,0)
 S IEN59=$$IEN59^BPSOSRX(RX,FIL,COB)
"RTN","BPSBUTL",412,0)
 S IEN03=+$P($G(^BPST(IEN59,0)),U,5)
"RTN","BPSBUTL",413,0)
 ;
"RTN","BPSBUTL",414,0)
 I '$G(IEN03) Q "" ; Quit if INE03 is not found
"RTN","BPSBUTL",415,0)
 ;
"RTN","BPSBUTL",416,0)
 S BPSFLDS="931;932;933;934;935;936;937;938;943;944;2219;2220;2224;2225"
"RTN","BPSBUTL",417,0)
 D GETS^DIQ(9002313.0301,"1,"_IEN03,BPSFLDS,"IE","BPSARR")
"RTN","BPSBUTL",418,0)
 ;
"RTN","BPSBUTL",419,0)
 S BPSREC="",BPSCNT=0
"RTN","BPSBUTL",420,0)
 F I=1:1:$L(BPSFLDS,";") S BPSCNT=BPSCNT+1 D
"RTN","BPSBUTL",421,0)
 . S $P(BPSREC,U,BPSCNT)=BPSARR(9002313.0301,"1,"_IEN03_",",+$P(BPSFLDS,";",I),"E")
"RTN","BPSBUTL",422,0)
 ;
"RTN","BPSBUTL",423,0)
 ; Convert Dates to Fileman Format (936,937)
"RTN","BPSBUTL",424,0)
 S BPSSDT=BPSARR(9002313.0301,"1,"_IEN03_",",936,"I") ; MAX AMT START DATE
"RTN","BPSBUTL",425,0)
 S:BPSSDT BPSSDT=BPSSDT-17000000,$P(BPSREC,U,6)=BPSSDT
"RTN","BPSBUTL",426,0)
 S BPSEDT=BPSARR(9002313.0301,"1,"_IEN03_",",937,"I") ; MAX AMT END DATE
"RTN","BPSBUTL",427,0)
 S:BPSEDT BPSEDT=BPSEDT-17000000,$P(BPSREC,U,7)=BPSEDT
"RTN","BPSBUTL",428,0)
 ;
"RTN","BPSBUTL",429,0)
 Q BPSREC
"RTN","BPSECX0")
0^20^B42203811
"RTN","BPSECX0",1,0)
BPSECX0 ;BHAM ISC/FCS/DRS/VA/DLF - Retrieve Claim submission record ;05/17/2004
"RTN","BPSECX0",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,8,10,15,19,23,24**;JUN 2004;Build 43
"RTN","BPSECX0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSECX0",4,0)
 ;
"RTN","BPSECX0",5,0)
 ; This routine is used to pull data from BPS Claims and its multiples
"RTN","BPSECX0",6,0)
 ; GETBPS2 - BPS Claims level
"RTN","BPSECX0",7,0)
 ; GETBPS3 - Transaction subfile
"RTN","BPSECX0",8,0)
 ; GETBPS4 - DUR subfile
"RTN","BPSECX0",9,0)
 ; GETBPS5 - COB subfile.  GETBPS5 calls the following
"RTN","BPSECX0",10,0)
 ;    GETBPS6 - Other Payer Amount Paid subfile
"RTN","BPSECX0",11,0)
 ;    GETBPS7 - Other Payer Reject Code subfile
"RTN","BPSECX0",12,0)
 ;    GETBPS8 - Other Payer Patient Responsibility subfile
"RTN","BPSECX0",13,0)
 ;    GETBPS9 - Benefits Stage subfile
"RTN","BPSECX0",14,0)
 ;
"RTN","BPSECX0",15,0)
 Q
"RTN","BPSECX0",16,0)
 ;
"RTN","BPSECX0",17,0)
 ; Retrieve BPS CLAIMS data
"RTN","BPSECX0",18,0)
 ; CLAIMIEN = ien in BPS CLAIMS (#9002313.02)
"RTN","BPSECX0",19,0)
 ; BPS - Passed by reference
"RTN","BPSECX0",20,0)
 ; returns:  BPS(9002313.02,CLAIMIEN,field #,"I")  = internal format value
"RTN","BPSECX0",21,0)
GETBPS2(CLAIMIEN,BPS) ; called from BPSECA1 > BPSOSQG > BPSOSQ2
"RTN","BPSECX0",22,0)
 ;
"RTN","BPSECX0",23,0)
 Q:$G(CLAIMIEN)=""  ; must have claim IEN
"RTN","BPSECX0",24,0)
 ;
"RTN","BPSECX0",25,0)
 N D0,DA,DIC,DIQ,DIQ2,DR
"RTN","BPSECX0",26,0)
 ;
"RTN","BPSECX0",27,0)
 S DIC=9002313.02,DR="101:899;980:997"  ; all fields from 101-899 and 990-997, skip 901-908 (used for BPS overhead)
"RTN","BPSECX0",28,0)
 S DR=DR_";1022;1043;1045" ;Get alphanumeric NCPDP fields 1022 (A22), 1043 (A23) and 1045 (A45)- BPS*1*15
"RTN","BPSECX0",29,0)
 S DR=DR_";2008;2009;2038" ;Get alphanumeric NCPDP fields 2008 (B08), 2009 (B09) and 2038 (B38) - BPS*1*19
"RTN","BPSECX0",30,0)
 S DA=CLAIMIEN,DIQ="BPS",DIQ(0)="I"  ; "I" for internal format
"RTN","BPSECX0",31,0)
 D EN^DIQ1
"RTN","BPSECX0",32,0)
 Q
"RTN","BPSECX0",33,0)
 ;
"RTN","BPSECX0",34,0)
 ;Retrieve data in TRANSACTIONS multiple in BPS CLAIMS
"RTN","BPSECX0",35,0)
 ; CLAIMIEN = ien in BPS CLAIMS (#9002313.02)
"RTN","BPSECX0",36,0)
 ; TRXIEN = ien in TRANSACTIONS (#9002313.0201)
"RTN","BPSECX0",37,0)
 ; BPS - Passed by reference
"RTN","BPSECX0",38,0)
 ; returns: BPS(9002313.0201,TRXIEN,field #,"I") = internal format value
"RTN","BPSECX0",39,0)
GETBPS3(CLAIMIEN,TRXIEN,BPS) ;called from BPSECA1
"RTN","BPSECX0",40,0)
 ;
"RTN","BPSECX0",41,0)
 Q:$G(CLAIMIEN)=""  Q:$G(TRXIEN)=""  ; must have both
"RTN","BPSECX0",42,0)
 ;
"RTN","BPSECX0",43,0)
 N D0,DA,DIC,DIQ,DIQ2,DR
"RTN","BPSECX0",44,0)
 ;
"RTN","BPSECX0",45,0)
 ; There are other alphanumeric fields that could be added but since they are for segments that are not
"RTN","BPSECX0",46,0)
 ;  supported by E1, B1, B3 transactions and/or not segments not used by VA.  These can be added later, if
"RTN","BPSECX0",47,0)
 ;  needed for those segments.
"RTN","BPSECX0",48,0)
 S DIC=9002313.02,DR="400",DR(9002313.0201)="113:996"  ; all TRANSACTION fields
"RTN","BPSECX0",49,0)
 S DR(9002313.0201)=DR(9002313.0201)_";1023:1032"
"RTN","BPSECX0",50,0)
 S DR(9002313.0201)=DR(9002313.0201)_";2024:2032;2039:2043"
"RTN","BPSECX0",51,0)
 S DR(9002313.0201)=DR(9002313.0201)_";1093;2013:2021;2034;2035;2037"
"RTN","BPSECX0",52,0)
 S DR(9002313.0201)=DR(9002313.0201)_";2056:2061;2095:2097;2101;2102"
"RTN","BPSECX0",53,0)
 ; new fields added in 2017 NCPDP updates
"RTN","BPSECX0",54,0)
 S DR(9002313.0201)=DR(9002313.0201)_";2147;2149;2150;2151;2160;2190;2191"
"RTN","BPSECX0",55,0)
 S DR(9002313.0201)=DR(9002313.0201)_";2192;2198;2199;2201;2202;2214;2216"
"RTN","BPSECX0",56,0)
 S DR(9002313.0201)=DR(9002313.0201)_";2217;2218;2221;2222;2251;2252;2253"
"RTN","BPSECX0",57,0)
 S DR(9002313.0201)=DR(9002313.0201)_";2257;2260;2261;2263"
"RTN","BPSECX0",58,0)
 ;
"RTN","BPSECX0",59,0)
 S DA=CLAIMIEN,DA(9002313.0201)=TRXIEN  ; IEN and sub-file IEN
"RTN","BPSECX0",60,0)
 S DIQ="BPS",DIQ(0)="I"  ; "I" for internal format
"RTN","BPSECX0",61,0)
 D EN^DIQ1
"RTN","BPSECX0",62,0)
 ;
"RTN","BPSECX0",63,0)
 ; Copy Prescriber Phone Number (498.12) to field 498 as this is where BPSOSH2
"RTN","BPSECX0",64,0)
 ;   expects to find it.  This works for now but if we implement the Prior Auth
"RTN","BPSECX0",65,0)
 ;   segment (which has multiple field labelled 498), a more complete solution
"RTN","BPSECX0",66,0)
 ;   will need to be found
"RTN","BPSECX0",67,0)
 S BPS(9002313.0201,TRXIEN,498,"I")=$G(BPS(9002313.0201,TRXIEN,498.12,"I"))
"RTN","BPSECX0",68,0)
 Q
"RTN","BPSECX0",69,0)
 ;
"RTN","BPSECX0",70,0)
 ;Retrieve DUR/PPS multiple data
"RTN","BPSECX0",71,0)
 ; CLAIMIEN = ien in BPS CLAIMS (#9002313.02)
"RTN","BPSECX0",72,0)
 ; TRXIEN = ien in TRANSACTIONS (#9002313.0201)
"RTN","BPSECX0",73,0)
 ; CDURIEN= DUR/PPS Multiple IEN (9002313.1001)
"RTN","BPSECX0",74,0)
 ; BPS - Passed by reference
"RTN","BPSECX0",75,0)
 ; returns: BPS(9002313.1001,CDURIEN,field #,"I") = Value
"RTN","BPSECX0",76,0)
GETBPS4(CLAIMIEN,TRXIEN,CDURIEN,BPS) ;EP - from BPSECA1
"RTN","BPSECX0",77,0)
 ;
"RTN","BPSECX0",78,0)
 ;Make sure input variables are defined
"RTN","BPSECX0",79,0)
 Q:$G(CLAIMIEN)=""
"RTN","BPSECX0",80,0)
 Q:$G(TRXIEN)=""
"RTN","BPSECX0",81,0)
 Q:$G(CDURIEN)=""
"RTN","BPSECX0",82,0)
 ;
"RTN","BPSECX0",83,0)
 N D0,DA,DIC,DIQ,DIQ2,DR
"RTN","BPSECX0",84,0)
 S DIC=9002313.02
"RTN","BPSECX0",85,0)
 S DR="400",DR(9002313.0201)=473.01  ;fields
"RTN","BPSECX0",86,0)
 S DR(9002313.1001)=".01;439;440;441;474;475;476"  ;fields
"RTN","BPSECX0",87,0)
 S DA=CLAIMIEN,DA(9002313.0201)=TRXIEN,DA(9002313.1001)=CDURIEN
"RTN","BPSECX0",88,0)
 S DIQ="BPS",DIQ(0)="I"
"RTN","BPSECX0",89,0)
 D EN^DIQ1
"RTN","BPSECX0",90,0)
 ;
"RTN","BPSECX0",91,0)
 Q
"RTN","BPSECX0",92,0)
 ;
"RTN","BPSECX0",93,0)
 ;Retrieve COB OTHER PAYMENTS multiple data
"RTN","BPSECX0",94,0)
 ; CLAIMIEN = ien in BPS CLAIMS (#9002313.02)
"RTN","BPSECX0",95,0)
 ; TRXIEN = ien in TRANSACTIONS (#9002313.0201)
"RTN","BPSECX0",96,0)
 ; BPCOBIEN= ien in COB OTHER PAYMENTS (#9002313.0401)
"RTN","BPSECX0",97,0)
 ; BPS - Passed by reference
"RTN","BPSECX0",98,0)
 ; Output: BPS(9002313.0401,BPCOBIEN,field #,"I") = Value
"RTN","BPSECX0",99,0)
GETBPS5(CLAIMIEN,TRXIEN,BPCOBIEN,BPS) ;EP - from BPSECA1
"RTN","BPSECX0",100,0)
 ;
"RTN","BPSECX0",101,0)
 Q:$G(CLAIMIEN)=""  Q:$G(TRXIEN)=""  Q:$G(BPCOBIEN)=""
"RTN","BPSECX0",102,0)
 ;
"RTN","BPSECX0",103,0)
 N BPREJCT,BPSCNT,BPSPAMT,BPSOTHR,D0,DA,DIC,DIQ,DIQ2,DR
"RTN","BPSECX0",104,0)
 ;
"RTN","BPSECX0",105,0)
 S DIC=9002313.02
"RTN","BPSECX0",106,0)
 S DA=CLAIMIEN
"RTN","BPSECX0",107,0)
 S DA(9002313.0201)=TRXIEN
"RTN","BPSECX0",108,0)
 S DA(9002313.0401)=BPCOBIEN
"RTN","BPSECX0",109,0)
 S DR="400" ; field (#400) TRANSACTIONS
"RTN","BPSECX0",110,0)
 S DR(9002313.0201)=337.01  ;field (#337.01) COB OTHER PAYMENTS
"RTN","BPSECX0",111,0)
 S DR(9002313.0401)=".01;338;339;340;341;443;471;353;392;993;2149"  ; fields
"RTN","BPSECX0",112,0)
 S DIQ="BPS",DIQ(0)="I"
"RTN","BPSECX0",113,0)
 D EN^DIQ1
"RTN","BPSECX0",114,0)
 ;
"RTN","BPSECX0",115,0)
 ; Loop through PAYER AMT and get the data
"RTN","BPSECX0",116,0)
 S BPSPAMT=$P($G(^BPSC(CLAIMIEN,400,TRXIEN,337,BPCOBIEN,1,0)),U,4)
"RTN","BPSECX0",117,0)
 F BPSCNT=1:1:BPSPAMT D GETBPS6(CLAIMIEN,TRXIEN,BPCOBIEN,BPSCNT,.BPS)
"RTN","BPSECX0",118,0)
 ;
"RTN","BPSECX0",119,0)
 ; Loop through OTHER PAYER REJECT CODE multiple and get the data
"RTN","BPSECX0",120,0)
 S BPREJCT=$P($G(^BPSC(CLAIMIEN,400,TRXIEN,337,BPCOBIEN,2,0)),U,4)
"RTN","BPSECX0",121,0)
 F BPSCNT=1:1:BPREJCT D GETBPS7(CLAIMIEN,TRXIEN,BPCOBIEN,BPSCNT,.BPS)
"RTN","BPSECX0",122,0)
 ;
"RTN","BPSECX0",123,0)
 ; Loop through PAYER-PATIENT RESP and get the data
"RTN","BPSECX0",124,0)
 S BPSPAMT=$P($G(^BPSC(CLAIMIEN,400,TRXIEN,337,BPCOBIEN,3,0)),U,4)
"RTN","BPSECX0",125,0)
 F BPSCNT=1:1:BPSPAMT D GETBPS8(CLAIMIEN,TRXIEN,BPCOBIEN,BPSCNT,.BPS)
"RTN","BPSECX0",126,0)
 ;
"RTN","BPSECX0",127,0)
 ; Loop through BENEFIT STAGES and get the data
"RTN","BPSECX0",128,0)
 S BPSPAMT=$P($G(^BPSC(CLAIMIEN,400,TRXIEN,337,BPCOBIEN,4,0)),U,4)
"RTN","BPSECX0",129,0)
 F BPSCNT=1:1:BPSPAMT D GETBPS9(CLAIMIEN,TRXIEN,BPCOBIEN,BPSCNT,.BPS)
"RTN","BPSECX0",130,0)
 Q
"RTN","BPSECX0",131,0)
 ;
"RTN","BPSECX0",132,0)
 ; Other Payer Amt Paid multiple (#9002313.401342)
"RTN","BPSECX0",133,0)
GETBPS6(CLAIMIEN,TRXIEN,BPCOBIEN,BPPAYAMT,BPS) ;EP - from GETBPS5
"RTN","BPSECX0",134,0)
 ;
"RTN","BPSECX0",135,0)
 ;Make sure input variables are defined
"RTN","BPSECX0",136,0)
 Q:$G(CLAIMIEN)=""
"RTN","BPSECX0",137,0)
 Q:$G(TRXIEN)=""
"RTN","BPSECX0",138,0)
 Q:$G(BPCOBIEN)=""
"RTN","BPSECX0",139,0)
 Q:$G(BPPAYAMT)=""
"RTN","BPSECX0",140,0)
 ;
"RTN","BPSECX0",141,0)
 N D0,DA,DIC,DIQ,DIQ2,DR
"RTN","BPSECX0",142,0)
 S DIC=9002313.02
"RTN","BPSECX0",143,0)
 S DA=CLAIMIEN
"RTN","BPSECX0",144,0)
 S DA(9002313.0201)=TRXIEN
"RTN","BPSECX0",145,0)
 S DA(9002313.0401)=BPCOBIEN
"RTN","BPSECX0",146,0)
 S DA(9002313.401342)=BPPAYAMT
"RTN","BPSECX0",147,0)
 S DR="400" ; field (#400) TRANSACTIONS
"RTN","BPSECX0",148,0)
 S DR(9002313.0201)=337.01  ;field (#337.01) COB OTHER PAYMENTS
"RTN","BPSECX0",149,0)
 S DR(9002313.0401)=342 ;(#342) OTHER PAYER AMT PAID MULTIPLE
"RTN","BPSECX0",150,0)
 S DR(9002313.401342)=".01;431"  ;fields
"RTN","BPSECX0",151,0)
 S DIQ="BPS",DIQ(0)="I"
"RTN","BPSECX0",152,0)
 D EN^DIQ1
"RTN","BPSECX0",153,0)
 ;
"RTN","BPSECX0",154,0)
 Q
"RTN","BPSECX0",155,0)
 ;
"RTN","BPSECX0",156,0)
 ; Other Payer Reject Code multiple (#9002313.401472)
"RTN","BPSECX0",157,0)
GETBPS7(CLAIMIEN,TRXIEN,BPCOBIEN,BPREJCT,BPS) ;EP - from GETBPS5
"RTN","BPSECX0",158,0)
 ;
"RTN","BPSECX0",159,0)
 ;Make sure input variables are defined
"RTN","BPSECX0",160,0)
 Q:$G(CLAIMIEN)=""
"RTN","BPSECX0",161,0)
 Q:$G(TRXIEN)=""
"RTN","BPSECX0",162,0)
 Q:$G(BPCOBIEN)=""
"RTN","BPSECX0",163,0)
 Q:$G(BPREJCT)=""
"RTN","BPSECX0",164,0)
 ;
"RTN","BPSECX0",165,0)
 N D0,DA,DIC,DIQ,DIQ2,DR
"RTN","BPSECX0",166,0)
 ;
"RTN","BPSECX0",167,0)
 S DIC=9002313.02
"RTN","BPSECX0",168,0)
 S DA=CLAIMIEN
"RTN","BPSECX0",169,0)
 S DA(9002313.0201)=TRXIEN
"RTN","BPSECX0",170,0)
 S DA(9002313.0401)=BPCOBIEN
"RTN","BPSECX0",171,0)
 S DA(9002313.401472)=BPREJCT
"RTN","BPSECX0",172,0)
 S DR="400" ; field (#400) TRANSACTIONS
"RTN","BPSECX0",173,0)
 S DR(9002313.0201)=337.01  ;field (#337.01) COB OTHER PAYMENTS
"RTN","BPSECX0",174,0)
 S DR(9002313.0401)=472 ;(#472) OTHER PAYER REJECT CODE MLTPL
"RTN","BPSECX0",175,0)
 S DR(9002313.401472)=".01"  ;fields
"RTN","BPSECX0",176,0)
 S DIQ="BPS",DIQ(0)="I"
"RTN","BPSECX0",177,0)
 D EN^DIQ1
"RTN","BPSECX0",178,0)
 Q
"RTN","BPSECX0",179,0)
 ;
"RTN","BPSECX0",180,0)
 ; Other Payer-Patient Resp Amt multiple (#9002313.401353)
"RTN","BPSECX0",181,0)
GETBPS8(CLAIMIEN,TRXIEN,BPCOBIEN,BPPAYAMT,BPS) ;EP - from GETBPS5
"RTN","BPSECX0",182,0)
 ;
"RTN","BPSECX0",183,0)
 ;Make sure input variables are defined
"RTN","BPSECX0",184,0)
 Q:$G(CLAIMIEN)=""
"RTN","BPSECX0",185,0)
 Q:$G(TRXIEN)=""
"RTN","BPSECX0",186,0)
 Q:$G(BPCOBIEN)=""
"RTN","BPSECX0",187,0)
 Q:$G(BPPAYAMT)=""
"RTN","BPSECX0",188,0)
 ;
"RTN","BPSECX0",189,0)
 N D0,DA,DIC,DIQ,DIQ2,DR
"RTN","BPSECX0",190,0)
 S DIC=9002313.02
"RTN","BPSECX0",191,0)
 S DA=CLAIMIEN
"RTN","BPSECX0",192,0)
 S DA(9002313.0201)=TRXIEN
"RTN","BPSECX0",193,0)
 S DA(9002313.0401)=BPCOBIEN
"RTN","BPSECX0",194,0)
 S DA(9002313.401353)=BPPAYAMT
"RTN","BPSECX0",195,0)
 S DR="400" ; field (#400) TRANSACTIONS
"RTN","BPSECX0",196,0)
 S DR(9002313.0201)=337.01  ;field (#337.01) COB OTHER PAYMENTS
"RTN","BPSECX0",197,0)
 S DR(9002313.0401)=353.01  ;field (#353.01) OTHER PAYER-PATIENT RESP MLTPL
"RTN","BPSECX0",198,0)
 S DR(9002313.401353)=".01;351;352"  ;fields
"RTN","BPSECX0",199,0)
 S DIQ="BPS",DIQ(0)="I"
"RTN","BPSECX0",200,0)
 D EN^DIQ1
"RTN","BPSECX0",201,0)
 ;
"RTN","BPSECX0",202,0)
 Q
"RTN","BPSECX0",203,0)
 ;
"RTN","BPSECX0",204,0)
 ; Benefit Stages multiple (#9002313.401392)
"RTN","BPSECX0",205,0)
GETBPS9(CLAIMIEN,TRXIEN,BPCOBIEN,BPPAYAMT,BPS) ;EP - from GETBPS5
"RTN","BPSECX0",206,0)
 ;
"RTN","BPSECX0",207,0)
 ;Make sure input variables are defined
"RTN","BPSECX0",208,0)
 Q:$G(CLAIMIEN)=""
"RTN","BPSECX0",209,0)
 Q:$G(TRXIEN)=""
"RTN","BPSECX0",210,0)
 Q:$G(BPCOBIEN)=""
"RTN","BPSECX0",211,0)
 Q:$G(BPPAYAMT)=""
"RTN","BPSECX0",212,0)
 ;
"RTN","BPSECX0",213,0)
 N D0,DA,DIC,DIQ,DIQ2,DR
"RTN","BPSECX0",214,0)
 S DIC=9002313.02
"RTN","BPSECX0",215,0)
 S DA=CLAIMIEN
"RTN","BPSECX0",216,0)
 S DA(9002313.0201)=TRXIEN
"RTN","BPSECX0",217,0)
 S DA(9002313.0401)=BPCOBIEN
"RTN","BPSECX0",218,0)
 S DA(9002313.401392)=BPPAYAMT
"RTN","BPSECX0",219,0)
 S DR="400" ; field (#400) TRANSACTIONS
"RTN","BPSECX0",220,0)
 S DR(9002313.0201)=337.01  ;field (#337.01) COB OTHER PAYMENTS
"RTN","BPSECX0",221,0)
 S DR(9002313.0401)=392.01  ;field (#392.01) BENEFIT STAGE MLTPL
"RTN","BPSECX0",222,0)
 S DR(9002313.401392)=".01;393;394"  ;fields
"RTN","BPSECX0",223,0)
 S DIQ="BPS",DIQ(0)="I"
"RTN","BPSECX0",224,0)
 D EN^DIQ1
"RTN","BPSECX0",225,0)
 ;
"RTN","BPSECX0",226,0)
 Q
"RTN","BPSFLD01")
0^21^B17444008
"RTN","BPSFLD01",1,0)
BPSFLD01 ;ALB/SS - ePharmacy secondary billing - COB fields processing ;27-FEB-09
"RTN","BPSFLD01",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**8,10,23,24**;JUN 2004;Build 43
"RTN","BPSFLD01",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSFLD01",4,0)
 ;
"RTN","BPSFLD01",5,0)
SET337 ; 337-4C Other Payments Count
"RTN","BPSFLD01",6,0)
 ; This field is used twice.
"RTN","BPSFLD01",7,0)
 ; The total count is stored in 9002313.0201,337.  BPSOPIEN is not defined for this case.
"RTN","BPSFLD01",8,0)
 ; The individual counter is stored in 9002313.0401,.01 where BPSOPIEN is defined.
"RTN","BPSFLD01",9,0)
 ;
"RTN","BPSFLD01",10,0)
 I '$G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),330),U,7)=BPS("X") Q
"RTN","BPSFLD01",11,0)
 ;
"RTN","BPSFLD01",12,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,1)=BPS("X")
"RTN","BPSFLD01",13,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,"B",BPS("X"),BPSOPIEN)=""
"RTN","BPSFLD01",14,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,0)="^9002313.0401A^"_BPSOPIEN_U_BPSOPIEN
"RTN","BPSFLD01",15,0)
 Q
"RTN","BPSFLD01",16,0)
 ;
"RTN","BPSFLD01",17,0)
SET338 ; 338-5C Other Payer Coverage Type
"RTN","BPSFLD01",18,0)
 I $G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,2)=BPS("X")
"RTN","BPSFLD01",19,0)
 Q
"RTN","BPSFLD01",20,0)
 ;
"RTN","BPSFLD01",21,0)
SET339 ; 339-6C Other Payer ID Qualifier
"RTN","BPSFLD01",22,0)
 I $G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,3)=BPS("X")
"RTN","BPSFLD01",23,0)
 Q
"RTN","BPSFLD01",24,0)
 ;
"RTN","BPSFLD01",25,0)
SET340 ; 340-7C Other Payer ID
"RTN","BPSFLD01",26,0)
 I $G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,4)=BPS("X")
"RTN","BPSFLD01",27,0)
 Q
"RTN","BPSFLD01",28,0)
 ;
"RTN","BPSFLD01",29,0)
SET443 ; 443-E8 Other Payer Date
"RTN","BPSFLD01",30,0)
 I $G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,5)=BPS("X")
"RTN","BPSFLD01",31,0)
 Q
"RTN","BPSFLD01",32,0)
 ;
"RTN","BPSFLD01",33,0)
SET341 ; 341-HB Other Payer Amount Paid Count
"RTN","BPSFLD01",34,0)
 I $G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,6)=BPS("X")
"RTN","BPSFLD01",35,0)
 Q
"RTN","BPSFLD01",36,0)
 ;
"RTN","BPSFLD01",37,0)
SET471 ; 471-5E Other Payer Reject Count
"RTN","BPSFLD01",38,0)
 I $G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,7)=BPS("X")
"RTN","BPSFLD01",39,0)
 Q
"RTN","BPSFLD01",40,0)
 ;
"RTN","BPSFLD01",41,0)
SET342 ; 342-HC Other Payer Amount Paid Qualifier
"RTN","BPSFLD01",42,0)
 ; .01 field in the 9002313.401342 sub-file
"RTN","BPSFLD01",43,0)
 I '$G(BPSOPIEN)!'$G(BPSOAIEN) Q
"RTN","BPSFLD01",44,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,1,BPSOAIEN,0),U,1)=BPS("X")
"RTN","BPSFLD01",45,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,1,"B",BPS("X"),BPSOAIEN)=""
"RTN","BPSFLD01",46,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,1,0)="^9002313.401342A^"_BPSOAIEN_U_BPSOAIEN
"RTN","BPSFLD01",47,0)
 Q
"RTN","BPSFLD01",48,0)
 ;
"RTN","BPSFLD01",49,0)
SET431 ; 431-DV Other Payer Amount Paid
"RTN","BPSFLD01",50,0)
 I '$G(BPSOPIEN)!'$G(BPSOAIEN) Q
"RTN","BPSFLD01",51,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,1,BPSOAIEN,0),U,2)=BPS("X")
"RTN","BPSFLD01",52,0)
 ; This is an old field, probably not needed anymore
"RTN","BPSFLD01",53,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),430),U,1)=BPS("X")
"RTN","BPSFLD01",54,0)
 Q
"RTN","BPSFLD01",55,0)
 ;
"RTN","BPSFLD01",56,0)
SET472 ; 472-6E Other Payer Reject Code
"RTN","BPSFLD01",57,0)
 ; .01 field in the 9002313.401472 sub-file
"RTN","BPSFLD01",58,0)
 I '$G(BPSOPIEN)!'$G(BPSORIEN) Q
"RTN","BPSFLD01",59,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,2,BPSORIEN,0),U,1)=BPS("X")
"RTN","BPSFLD01",60,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,2,"B",BPS("X"),BPSORIEN)=""
"RTN","BPSFLD01",61,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,2,0)="^9002313.401472A^"_BPSORIEN_U_BPSORIEN
"RTN","BPSFLD01",62,0)
 Q
"RTN","BPSFLD01",63,0)
 ;
"RTN","BPSFLD01",64,0)
SET353 ; 353-NR Other Payer-Patient Responsibility Amount Count
"RTN","BPSFLD01",65,0)
 I $G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,8)=BPS("X")
"RTN","BPSFLD01",66,0)
 Q
"RTN","BPSFLD01",67,0)
 ;
"RTN","BPSFLD01",68,0)
SET351 ; 351-NP Other Payer-Patient Responsibility Amount Qualifier
"RTN","BPSFLD01",69,0)
 I '$G(BPSOPIEN)!'$G(BPSCOUNT) Q
"RTN","BPSFLD01",70,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,3,BPSCOUNT,0),U,1,2)=BPSCOUNT_U_BPS("X")
"RTN","BPSFLD01",71,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,3,"B",BPSCOUNT,BPSCOUNT)=""
"RTN","BPSFLD01",72,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,3,0)="^9002313.401353A^"_BPSCOUNT_U_BPSCOUNT
"RTN","BPSFLD01",73,0)
 Q
"RTN","BPSFLD01",74,0)
 ;
"RTN","BPSFLD01",75,0)
SET352 ; 352-NQ Other Payer-Patient Responsibility Amount Paid
"RTN","BPSFLD01",76,0)
 I '$G(BPSOPIEN)!'$G(BPSCOUNT) Q
"RTN","BPSFLD01",77,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,3,BPSCOUNT,0),U,3)=BPS("X")
"RTN","BPSFLD01",78,0)
 Q
"RTN","BPSFLD01",79,0)
 ;
"RTN","BPSFLD01",80,0)
SET392 ; 392-MU Benefit Stage Count
"RTN","BPSFLD01",81,0)
 I $G(BPSOPIEN) S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,9)=BPS("X")
"RTN","BPSFLD01",82,0)
 Q
"RTN","BPSFLD01",83,0)
 ;
"RTN","BPSFLD01",84,0)
SET393 ; 393-MV Benefit Stage Qualifier
"RTN","BPSFLD01",85,0)
 I '$G(BPSOPIEN)!'$G(BPSOAIEN) Q
"RTN","BPSFLD01",86,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,4,BPSOAIEN,0),U,1,2)=BPSOAIEN_U_BPS("X")
"RTN","BPSFLD01",87,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,4,"B",BPSOAIEN,BPSOAIEN)=""
"RTN","BPSFLD01",88,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,4,0)="^9002313.401392^"_BPSOAIEN_U_BPSOAIEN
"RTN","BPSFLD01",89,0)
 Q
"RTN","BPSFLD01",90,0)
 ;
"RTN","BPSFLD01",91,0)
SET394 ; 394-MW Benefit Stage Amount
"RTN","BPSFLD01",92,0)
 I '$G(BPSOPIEN)!'$G(BPSOAIEN) Q
"RTN","BPSFLD01",93,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,4,BPSOAIEN,0),U,3)=BPS("X")
"RTN","BPSFLD01",94,0)
 Q
"RTN","BPSFLD01",95,0)
 ;
"RTN","BPSFLD01",96,0)
SET2149 ; C49-9V Other Payer-Patient Reconciliation ID
"RTN","BPSFLD01",97,0)
 I '$G(BPSOPIEN) Q
"RTN","BPSFLD01",98,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),337,BPSOPIEN,0),U,11)=BPS("X")
"RTN","BPSFLD01",99,0)
 Q
"RTN","BPSNCPD4")
0^31^B43404653
"RTN","BPSNCPD4",1,0)
BPSNCPD4 ;OAK/ELZ - Extension of BPSNCPDP ;4/16/08  17:07
"RTN","BPSNCPD4",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**6,7,8,10,11,24**;JUN 2004;Build 43
"RTN","BPSNCPD4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSNCPD4",4,0)
 ;
"RTN","BPSNCPD4",5,0)
 ; Certification Testing
"RTN","BPSNCPD4",6,0)
CERTTEST(CERTIEN) ;
"RTN","BPSNCPD4",7,0)
 N DIC,Y,X,DTOUT,DUOUT
"RTN","BPSNCPD4",8,0)
 S CERTIEN=""
"RTN","BPSNCPD4",9,0)
 ;
"RTN","BPSNCPD4",10,0)
 ; If the current user is not the Certification User, quit
"RTN","BPSNCPD4",11,0)
 I $G(^BPS(9002313.99,1,"CERTIFIER"))'=DUZ Q 0
"RTN","BPSNCPD4",12,0)
 ;
"RTN","BPSNCPD4",13,0)
 ; Ask for the Certification record
"RTN","BPSNCPD4",14,0)
 W !
"RTN","BPSNCPD4",15,0)
 S DIC=9002313.31,DIC(0)="AEQ"
"RTN","BPSNCPD4",16,0)
 D ^DIC
"RTN","BPSNCPD4",17,0)
 I $G(DUOUT) Q "1^User terminated input at the certification question"
"RTN","BPSNCPD4",18,0)
 I Y'=-1 S CERTIEN=+Y ; If user entered a response, set in CERTIEN variable
"RTN","BPSNCPD4",19,0)
 Q 0
"RTN","BPSNCPD4",20,0)
 ;
"RTN","BPSNCPD4",21,0)
 ;== reversal+resubmit for payables
"RTN","BPSNCPD4",22,0)
 ;returns:
"RTN","BPSNCPD4",23,0)
 ; 0 - Submitted through ECME
"RTN","BPSNCPD4",24,0)
 ; or 
"RTN","BPSNCPD4",25,0)
 ; RESPONSE code^CLAMSTAT^D(display message)^number of seconds to hang^additional info
"RTN","BPSNCPD4",26,0)
 ; see EN^BPSNCPD4 for RESPONSE values
"RTN","BPSNCPD4",27,0)
REVRESUB(BPREVREQ,BRXIEN,BFILL,DOS,BWHERE,BILLNDC,REVREAS,DURREC,BPOVRIEN,BPSCLARF,BPSAUTH,BPSDELAY,BPCOBIND,BPJOBFLG,IEN59,DFN,BPSTART,BPREQIEN,OLDRESP,BPSELIG,BPSRTYPE,BPSPLAN,BPSPRDAT) ;
"RTN","BPSNCPD4",28,0)
 N BPSITE,BPECMOFF,BPSARRY,MOREDATA,IB,BPRETV,BPZRET,BPCLMST,BPONLREV,BPRETVAL,BPUSRMSG,CERTIEN,BPRESP,BPRETUNC
"RTN","BPSNCPD4",29,0)
 I BPJOBFLG'="F",BPJOBFLG'="B" D LOG^BPSOSL(IEN59,$T(+0)_"-Job Flag missing") Q "5^Job Flag missing"  ;RESPONSE^CLMSTAT
"RTN","BPSNCPD4",30,0)
 I BPJOBFLG="B" D LOG^BPSOSL(IEN59,$T(+0)_"-Reversal+Resubmit cannot be done in background") Q "5^Reversal+Resubmit cannot be done in background"  ;RESPONSE^CLMSTAT
"RTN","BPSNCPD4",31,0)
 S BPCLMST="",BPONLREV=0,BPRESP=""
"RTN","BPSNCPD4",32,0)
 ;
"RTN","BPSNCPD4",33,0)
 S BPSITE=+$$GETSITE^BPSOSRX8(BRXIEN,BFILL)
"RTN","BPSNCPD4",34,0)
 ;
"RTN","BPSNCPD4",35,0)
 ;populate MOREDATA with basic data
"RTN","BPSNCPD4",36,0)
 D BASICMOR^BPSOSRX8(BWHERE,DOS,BPSITE,REVREAS,DURREC,BPOVRIEN,BPSCLARF,BPSAUTH,BPSDELAY,.MOREDATA)
"RTN","BPSNCPD4",37,0)
 I BPCOBIND=2 D MORE4SEC^BPSPRRX2(.MOREDATA,.BPSPRDAT) S MOREDATA("RTYPE")=$G(BPSRTYPE)
"RTN","BPSNCPD4",38,0)
 ;
"RTN","BPSNCPD4",39,0)
 ;Certification Testing - sets CERTIEN which is used in BILLABLE
"RTN","BPSNCPD4",40,0)
 S BPRESP=$$CERTTEST(.CERTIEN) I +BPRESP=1 Q BPRESP
"RTN","BPSNCPD4",41,0)
 ;populate BPSARRY
"RTN","BPSNCPD4",42,0)
 D STARRAY^BPSNCPD1(BRXIEN,BFILL,BWHERE,.BPSARRY,BPSITE,DOS,BILLNDC)
"RTN","BPSNCPD4",43,0)
 S BPSARRY("RXCOB")=BPCOBIND
"RTN","BPSNCPD4",44,0)
 S BPSARRY("PLAN")=$G(BPSPLAN),BPSARRY("RTYPE")=$G(BPSRTYPE) ;for secondary billing, to be used by RX^IBNCPDP
"RTN","BPSNCPD4",45,0)
 ;Billing determination
"RTN","BPSNCPD4",46,0)
 S IB=$$BILLABLE(DFN,BWHERE,.MOREDATA,.BPSARRY,CERTIEN,.BPSELIG)
"RTN","BPSNCPD4",47,0)
 ;if no response from IB
"RTN","BPSNCPD4",48,0)
 I +IB=0 Q $P(IB,U,2,5)
"RTN","BPSNCPD4",49,0)
 ;if non-billable
"RTN","BPSNCPD4",50,0)
 I +IB=2 S BPONLREV=1 ;set "ONLY REVERSAL IS POSSIBLE" flag
"RTN","BPSNCPD4",51,0)
 ;Set the User message if necessary
"RTN","BPSNCPD4",52,0)
 S BPUSRMSG=$S(BPONLREV=1:"Claim Will Be Reversed But Will Not Be Resubmitted",1:"")
"RTN","BPSNCPD4",53,0)
 I BPONLREV=1 D LOG^BPSOSL(IEN59,$T(+0)_"-"_$P($G(MOREDATA("BILL")),"^",2)_" - "_BPUSRMSG)
"RTN","BPSNCPD4",54,0)
 ;check IB data if it is billable
"RTN","BPSNCPD4",55,0)
 I BPONLREV'=1 S BPRETV=$$IBDATAOK^BPSOSRX8(.MOREDATA,$G(BPSARRY("NO ECME INSURANCE"))) I BPRETV>0 Q BPRETV
"RTN","BPSNCPD4",56,0)
 ;
"RTN","BPSNCPD4",57,0)
 ;schedule request(s)
"RTN","BPSNCPD4",58,0)
 ;
"RTN","BPSNCPD4",59,0)
 ; If override flag is set, prompt for override values - TEST ONLY
"RTN","BPSNCPD4",60,0)
 I $$CHECK^BPSTEST D
"RTN","BPSNCPD4",61,0)
 . I BPONLREV=1 D GETOVER^BPSTEST(BRXIEN,BFILL,OLDRESP,BWHERE,"R",BPCOBIND) Q
"RTN","BPSNCPD4",62,0)
 . ;if it is billable and we will doing resubmit
"RTN","BPSNCPD4",63,0)
 . D GETOVER^BPSTEST(BRXIEN,BFILL,OLDRESP,BWHERE,"S",BPCOBIND)
"RTN","BPSNCPD4",64,0)
 ;
"RTN","BPSNCPD4",65,0)
 ;.... Step 1, Schedule a Reversal
"RTN","BPSNCPD4",66,0)
 ; Needed for Turn-Around Stats - Do NOT delete/alter!!
"RTN","BPSNCPD4",67,0)
 D LOG^BPSOSL(IEN59,$T(+0)_"-Before Submit of Reversal")
"RTN","BPSNCPD4",68,0)
 S BPSTART=$$STTM()
"RTN","BPSNCPD4",69,0)
 ;
"RTN","BPSNCPD4",70,0)
 ;schedule an UNCLAIM request
"RTN","BPSNCPD4",71,0)
 S BPRETV=$$REQST^BPSOSRX("U",BRXIEN,BFILL,.MOREDATA,BPCOBIND,IEN59,$G(BILLNDC))
"RTN","BPSNCPD4",72,0)
 S BPREVREQ=+$P(BPRETV,U,2) ;BPS REQUEST ien of  the reversal
"RTN","BPSNCPD4",73,0)
 ;if error
"RTN","BPSNCPD4",74,0)
 I +BPRETV=0 D  Q $$RSPCLMS^BPSOSRX8("UC",4,.MOREDATA,$P(BPRETV,U,2))
"RTN","BPSNCPD4",75,0)
 . D LOG^BPSOSL(IEN59,$T(+0)_"-Create request error: "_$P(BPRETV,U,2)_". Claim Will Not Be submitted.")
"RTN","BPSNCPD4",76,0)
 . L -^BPST
"RTN","BPSNCPD4",77,0)
 ;if ok
"RTN","BPSNCPD4",78,0)
 D LOG^BPSOSL(IEN59,$T(+0)_"-The request "_BPREVREQ_" has been created")
"RTN","BPSNCPD4",79,0)
 ;if "Reversal only not resubmit" return appropriate RESPONSE and CLMSTAT, 
"RTN","BPSNCPD4",80,0)
 ;store MOREDATA("BILL" for the "final CLMSTAT"
"RTN","BPSNCPD4",81,0)
 ;and quit
"RTN","BPSNCPD4",82,0)
 I BPONLREV=1 D  Q $$RSPCLMS^BPSOSRX8("UC",10,.MOREDATA)_U_$P($G(MOREDATA("BILL")),U,2)
"RTN","BPSNCPD4",83,0)
 . ;activate the scheduled UNCLAIM request
"RTN","BPSNCPD4",84,0)
 . S BPRETUNC=$$ACTIVATE(BPREVREQ,"U")
"RTN","BPSNCPD4",85,0)
 ;
"RTN","BPSNCPD4",86,0)
 ;.... Step 2, Schedule a Resubmit
"RTN","BPSNCPD4",87,0)
 D LOG^BPSOSL(IEN59,$T(+0)_"-Before submit of claim")
"RTN","BPSNCPD4",88,0)
 S BPRETV=$$REQST^BPSOSRX("C",BRXIEN,BFILL,.MOREDATA,BPCOBIND,IEN59,$G(BILLNDC))
"RTN","BPSNCPD4",89,0)
 ; if error
"RTN","BPSNCPD4",90,0)
 I +BPRETV=0 D  Q $$RSPCLMS^BPSOSRX8("C",4,.MOREDATA)_U_BPUSRMSG
"RTN","BPSNCPD4",91,0)
 . ;activate the scheduled UNCLAIM request
"RTN","BPSNCPD4",92,0)
 . S BPRETUNC=$$ACTIVATE(BPREVREQ,"U")
"RTN","BPSNCPD4",93,0)
 . D LOG^BPSOSL(IEN59,$T(+0)_"-Create request error: "_$P(BPRETV,U,2)_". Claim Will Not Be submitted.")
"RTN","BPSNCPD4",94,0)
 . ;Set the User message if necessary
"RTN","BPSNCPD4",95,0)
 . I +BPRETUNC=0 S BPUSRMSG="Cannot schedule resubmit: Claim Will Be Reversed But Will Not Be Resubmitted "
"RTN","BPSNCPD4",96,0)
 ;if ok
"RTN","BPSNCPD4",97,0)
 D LOG^BPSOSL(IEN59,$T(+0)_"-BPS REQUEST: "_+$P(BPRETV,U,2)_" has been created")
"RTN","BPSNCPD4",98,0)
 ;
"RTN","BPSNCPD4",99,0)
 I +$$NXTREQST^BPSOSRX6(BPREVREQ,+$P(BPRETV,U,2))=0 D  Q $$RSPCLMS^BPSOSRX8("C",4,.MOREDATA)_U_BPUSRMSG
"RTN","BPSNCPD4",100,0)
 . ;activate the scheduled UNCLAIM request
"RTN","BPSNCPD4",101,0)
 . S BPRETUNC=$$ACTIVATE(BPREVREQ,"U")
"RTN","BPSNCPD4",102,0)
 . D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot make "_+$P(BPRETV,U,2)_"as a NEXT REQUEST in "_BPREVREQ)
"RTN","BPSNCPD4",103,0)
 . I +BPRETUNC=0 S BPUSRMSG="Cannot schedule resubmit: Claim Will Be Reversed But Will Not Be Resubmitted "
"RTN","BPSNCPD4",104,0)
 ;
"RTN","BPSNCPD4",105,0)
 ;activate the scheduled UNCLAIM request
"RTN","BPSNCPD4",106,0)
 S BPRETUNC=$$ACTIVATE(BPREVREQ,"U")
"RTN","BPSNCPD4",107,0)
 ; save RETVAL for the 2st step
"RTN","BPSNCPD4",108,0)
 S BPRETVAL=$$RSPCLMS^BPSOSRX8("UC",+BPRETUNC,.MOREDATA)_U_$P(BPRETUNC,U,2)
"RTN","BPSNCPD4",109,0)
 Q BPRETVAL_U_BPUSRMSG
"RTN","BPSNCPD4",110,0)
 ;
"RTN","BPSNCPD4",111,0)
 ;
"RTN","BPSNCPD4",112,0)
 ;
"RTN","BPSNCPD4",113,0)
 ;display submission results
"RTN","BPSNCPD4",114,0)
 ;BPRETVAL - RESPONSE ^ CLAIMSTAT ^ flag:D-display on the screen ^ Hang time
"RTN","BPSNCPD4",115,0)
DISPL(WFLG,BPRETVAL,BPELIGIB) ;
"RTN","BPSNCPD4",116,0)
 N BPHANG
"RTN","BPSNCPD4",117,0)
 I WFLG=0 Q
"RTN","BPSNCPD4",118,0)
 I $P(BPRETVAL,U,3)'="D" Q
"RTN","BPSNCPD4",119,0)
 W !!,$P(BPRETVAL,U,2)
"RTN","BPSNCPD4",120,0)
 W:+BPRETVAL'=0 !
"RTN","BPSNCPD4",121,0)
 S BPHANG=+$P(BPRETVAL,U,4)
"RTN","BPSNCPD4",122,0)
 I BPHANG>0 H BPHANG
"RTN","BPSNCPD4",123,0)
 Q
"RTN","BPSNCPD4",124,0)
 ;IB (billing) determination
"RTN","BPSNCPD4",125,0)
 ;input:
"RTN","BPSNCPD4",126,0)
 ;DFN - PATIENT file #2 ien
"RTN","BPSNCPD4",127,0)
 ;BWHERE - shows where the code is called from and what needs to be done
"RTN","BPSNCPD4",128,0)
 ;the following should be passed by reference:
"RTN","BPSNCPD4",129,0)
 ;MOREDATA - Initialized by BPSNCPDP and more data is added here
"RTN","BPSNCPD4",130,0)
 ;BPSARRY  - Created by STARRAY^BPSNCPD1 and used for IB Determination
"RTN","BPSNCPD4",131,0)
 ;CERTIEN - BPS Certification IEN - Not passed but newed/set in BPSNCPDP, is used by EN^BPSNCPD2 as a backdoor parameter
"RTN","BPSNCPD4",132,0)
 ;BPSELIG - to return eligibility, by ref
"RTN","BPSNCPD4",133,0)
 ;output: 
"RTN","BPSNCPD4",134,0)
 ;if billable :1
"RTN","BPSNCPD4",135,0)
 ;no response : 0^RESPONSE code=2 or 6^CLMSTAT message^D(display message)^seconds to hang 
"RTN","BPSNCPD4",136,0)
 ;non billable : 2^RESPONSE code=2 or 6^CLMSTAT message 
"RTN","BPSNCPD4",137,0)
BILLABLE(DFN,BWHERE,MOREDATA,BPSARRY,CERTIEN,BPSELIG) ;
"RTN","BPSNCPD4",138,0)
 N IB S IB=0
"RTN","BPSNCPD4",139,0)
 D EN^BPSNCPD2(DFN,BWHERE,.MOREDATA,.BPSARRY,.IB)
"RTN","BPSNCPD4",140,0)
 S BPSELIG=$G(MOREDATA("ELIG"))
"RTN","BPSNCPD4",141,0)
 I IB=2 Q $S($G(BPSARRY("NO ECME INSURANCE")):"2^6^",1:"2^2^")_$P(MOREDATA("BILL"),"^",2)
"RTN","BPSNCPD4",142,0)
 I (IB=0)!('$G(MOREDATA("BILL"))) Q $S($G(BPSARRY("NO ECME INSURANCE")):"0^6^",1:"0^2^")_"Flagged by IB to not 3rd Party Insurance bill through ECME.^D^2"
"RTN","BPSNCPD4",143,0)
 Q 1
"RTN","BPSNCPD4",144,0)
 ;activate the request
"RTN","BPSNCPD4",145,0)
 ;returns:
"RTN","BPSNCPD4",146,0)
 ; 0 - Submitted through ECME
"RTN","BPSNCPD4",147,0)
 ; or 
"RTN","BPSNCPD4",148,0)
 ; RESPONSE code^message^D(display message)^seconds to hang
"RTN","BPSNCPD4",149,0)
 ; see EN^BPSNCPD4 for RESPONSE values
"RTN","BPSNCPD4",150,0)
ACTIVATE(BPIEN77,BPACTYP) ;
"RTN","BPSNCPD4",151,0)
 I +$G(BPIEN77)=0 Q "4^There is no request to activate"
"RTN","BPSNCPD4",152,0)
 S BPACTYP=$S($G(BPACTYP)="C":"CLAIM",$G(BPACTYP)="U":"UNCLAIM",$G(BPACTYP)="E":"ELIGIBILITY",1:"")
"RTN","BPSNCPD4",153,0)
 ;if there is no existing requests for the RX/RF then simply activate the new request
"RTN","BPSNCPD4",154,0)
 I +$$ACTIVATE^BPSOSRX4(BPIEN77)=0 D INACTIVE^BPSOSRX4(BPIEN77,"Could not activate the request") D  Q "4^Cannot ACTIVATE the scheduled """_BPACTYP_""" request^D^2"
"RTN","BPSNCPD4",155,0)
 . D LOG^BPSOSL(IEN59,$T(+0)_"-BPS REQUEST: "_+BPIEN77_" Cannot ACTIVATE the scheduled """_BPACTYP_""" request, it has been inactivated")
"RTN","BPSNCPD4",156,0)
 Q "0"
"RTN","BPSNCPD4",157,0)
 ;
"RTN","BPSNCPD4",158,0)
STTM() ;
"RTN","BPSNCPD4",159,0)
 Q $$NOW^XLFDT
"RTN","BPSNCPD4",160,0)
 ;
"RTN","BPSOSCD")
0^22^B107538123
"RTN","BPSOSCD",1,0)
BPSOSCD ;BHAM ISC/FCS/DRS/DLF - Set BPS() "RX" nodes for current medication ;06/01/2004
"RTN","BPSOSCD",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,2,5,7,8,10,11,15,19,20,23,24**;JUN 2004;Build 43
"RTN","BPSOSCD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSOSCD",4,0)
 ;
"RTN","BPSOSCD",5,0)
 ; reference to $$ACPHONE^IBNCPDPI supported by DBIA 4721
"RTN","BPSOSCD",6,0)
 ; reference to $$MADD^XUAF4 supported by DBIA 2171
"RTN","BPSOSCD",7,0)
 ; reference to $$GET1^DIQ(200,field) supported by DBIA 10060
"RTN","BPSOSCD",8,0)
 ; reference to $$GET1^DIQ(5,field) supported by DBIA 10056
"RTN","BPSOSCD",9,0)
 ; reference to PSS^PSO59 supported by DBIA 4827
"RTN","BPSOSCD",10,0)
 ; reference to $$SITE^VASITE supported by DBIA 10112
"RTN","BPSOSCD",11,0)
 ;
"RTN","BPSOSCD",12,0)
 Q
"RTN","BPSOSCD",13,0)
 ;
"RTN","BPSOSCD",14,0)
 ;MEDINFO, Set BPS("RX)" nodes for current medication
"RTN","BPSOSCD",15,0)
 ; Called from BPSOSCA for every transaction in the multiple
"RTN","BPSOSCD",16,0)
 ; IEN59 = IEN in BPS TRANSACTION (#9002313.59)
"RTN","BPSOSCD",17,0)
 ; IEN5902 = IEN for Insurance multiple of BPS Transactions
"RTN","BPSOSCD",18,0)
 ; MEDN = Index number of medication being processed
"RTN","BPSOSCD",19,0)
 ; BPS array shared by all of the BPSOSC* routines, created in BPSOSCA
"RTN","BPSOSCD",20,0)
 ; VAINFO created in BPSOSCB
"RTN","BPSOSCD",21,0)
MEDINFO(IEN59,IEN5902,MEDN) ;
"RTN","BPSOSCD",22,0)
 ; Verify Parameters
"RTN","BPSOSCD",23,0)
 I $G(IEN59)="" Q
"RTN","BPSOSCD",24,0)
 I $G(IEN5902)="" Q
"RTN","BPSOSCD",25,0)
 I $G(MEDN)="" Q
"RTN","BPSOSCD",26,0)
 ;
"RTN","BPSOSCD",27,0)
 N %,BPS0,DRUGIEN,IENS,J,NDC,NPI,OSITEIEN,PRICING,PROVIEN,RTN,RXI,RXIEN,RXRFIEN,VANATURE,VAOIEN,X,ADFEE
"RTN","BPSOSCD",28,0)
 ;
"RTN","BPSOSCD",29,0)
 ;RXIEN=Rx IEN, RXRFIEN=Fill Number, IENS=FileMan style IENS
"RTN","BPSOSCD",30,0)
 S BPS0=$G(^BPST(IEN59,1)),RXIEN=$P(BPS0,U,11),RXRFIEN=$P(BPS0,U,1),IENS=IEN5902_","_IEN59_","
"RTN","BPSOSCD",31,0)
 ;
"RTN","BPSOSCD",32,0)
 S RTN=$T(+0)  ; for log
"RTN","BPSOSCD",33,0)
 ; Get any user-entered overrides stored in BPS NCPDP OVERRIDES
"RTN","BPSOSCD",34,0)
 D OVERRIDE(IEN59,MEDN)
"RTN","BPSOSCD",35,0)
 ;
"RTN","BPSOSCD",36,0)
 ; Retrieve DUR values
"RTN","BPSOSCD",37,0)
 D DURVALUE(IEN59,MEDN)
"RTN","BPSOSCD",38,0)
 ;
"RTN","BPSOSCD",39,0)
 ; Build COB array for secondary claims
"RTN","BPSOSCD",40,0)
 I $$COB59^BPSUTIL2(IEN59)>1 D COB(IEN59,MEDN)
"RTN","BPSOSCD",41,0)
 ;
"RTN","BPSOSCD",42,0)
 ; Basic RX info
"RTN","BPSOSCD",43,0)
 S BPS("RX",MEDN,"IEN59")=IEN59
"RTN","BPSOSCD",44,0)
 S BPS("RX",MEDN,"RX IEN")=RXIEN
"RTN","BPSOSCD",45,0)
 S BPS("RX",MEDN,"RX Number")=RXIEN
"RTN","BPSOSCD",46,0)
 ;
"RTN","BPSOSCD",47,0)
 ; Stop if the transaction code is "E1" and there is no Prescription IEN
"RTN","BPSOSCD",48,0)
 I BPS("Transaction Code")="E1",RXIEN="" Q
"RTN","BPSOSCD",49,0)
 ;
"RTN","BPSOSCD",50,0)
 ; Get Provider Info
"RTN","BPSOSCD",51,0)
 S PROVIEN=+$$RXAPI1^BPSUTIL1(RXIEN,4,"I")
"RTN","BPSOSCD",52,0)
 S BPS("RX",MEDN,"Prescriber IEN")=PROVIEN
"RTN","BPSOSCD",53,0)
 I PROVIEN'="" D
"RTN","BPSOSCD",54,0)
 .S X=$$GET1^DIQ(200,PROVIEN,.01)
"RTN","BPSOSCD",55,0)
 .D NAMECOMP^XLFNAME(.X)
"RTN","BPSOSCD",56,0)
 .S BPS("RX",MEDN,"Prescriber Last Name")=X("FAMILY")
"RTN","BPSOSCD",57,0)
 .S BPS("RX",MEDN,"Prescriber First Name")=X("GIVEN")  ; NCPDP field 364-2J
"RTN","BPSOSCD",58,0)
 .S BPS("RX",MEDN,"Prescriber Phone #")=$$ACPHONE^IBNCPDPI ; DBIA 4721, Agent Cashier Phone Number
"RTN","BPSOSCD",59,0)
 .S BPS("RX",MEDN,"Prescriber Billing Location")=""
"RTN","BPSOSCD",60,0)
 .S NPI=$$NPI^BPSNPI("Individual_ID",+PROVIEN)
"RTN","BPSOSCD",61,0)
 .I NPI<0 S NPI=""
"RTN","BPSOSCD",62,0)
 .S BPS("RX",MEDN,"Prescriber NPI")=$P(NPI,U)
"RTN","BPSOSCD",63,0)
 .S BPS("RX",MEDN,"Primary Care Provider NPI")=$P(NPI,U)
"RTN","BPSOSCD",64,0)
 .S BPS("RX",MEDN,"Provider NPI")=$P(NPI,U)
"RTN","BPSOSCD",65,0)
 .;
"RTN","BPSOSCD",66,0)
 .S BPS("RX",MEDN,"Prescriber DEA")=$$GET1^DIQ(200,PROVIEN,53.2) ; NCPDP field D01-KV
"RTN","BPSOSCD",67,0)
 .S X=$$PRVADRS(IEN59,PROVIEN)  ; provide address info
"RTN","BPSOSCD",68,0)
 .S BPS("RX",MEDN,"Prescriber Street Address")=$P(X,U)_$S($P(X,U,5)]"":" ",1:"")_$P(X,U,5)  ; NCPDP field 365-2K
"RTN","BPSOSCD",69,0)
 .S BPS("RX",MEDN,"Prescriber Street Address Line 1")=$P(X,U)  ; NCPDP field B27-7U
"RTN","BPSOSCD",70,0)
 .S BPS("RX",MEDN,"Prescriber Street Address Line 2")=$P(X,U,5)  ; NCPDP field B28-8U
"RTN","BPSOSCD",71,0)
 .S BPS("RX",MEDN,"Prescriber City Address")=$P(X,U,2)  ; NCPDP field 366-2M
"RTN","BPSOSCD",72,0)
 .S BPS("RX",MEDN,"Prescriber State/Province Address")=$P(X,U,3)  ; NCPDP field 367-2N
"RTN","BPSOSCD",73,0)
 .S BPS("RX",MEDN,"Prescriber Zip/Postal Zone")=$TR($P(X,U,4)," -")  ; NCPDP field 368-2P
"RTN","BPSOSCD",74,0)
 .S BPS("RX",MEDN,"Prescriber Country")=$$COUNTRY($P(X,U,3),$P(X,U,6))    ;NCPDP field B42-3C
"RTN","BPSOSCD",75,0)
 ;
"RTN","BPSOSCD",76,0)
 ; Stop if Eligibility as we do not need any of the claim data below
"RTN","BPSOSCD",77,0)
 I BPS("Transaction Code")="E1" Q
"RTN","BPSOSCD",78,0)
 ;
"RTN","BPSOSCD",79,0)
 ; Basic Prescription Info
"RTN","BPSOSCD",80,0)
 S BPS("RX",MEDN,"Date Written")=$$RXAPI1^BPSUTIL1(RXIEN,1,"I")
"RTN","BPSOSCD",81,0)
 ; SLT - BPS*1.0*11
"RTN","BPSOSCD",82,0)
 ; if the RX Issue Date is in the future, set it to the current date
"RTN","BPSOSCD",83,0)
 I BPS("RX",MEDN,"Date Written")>DT S BPS("RX",MEDN,"Date Written")=DT
"RTN","BPSOSCD",84,0)
 S BPS("RX",MEDN,"New/Refill")=$S(RXRFIEN="":"N",1:"R")
"RTN","BPSOSCD",85,0)
 S BPS("RX",MEDN,"# Refills")=$$RXAPI1^BPSUTIL1(RXIEN,9,"I")
"RTN","BPSOSCD",86,0)
 S BPS("RX",MEDN,"Refill #")=+RXRFIEN
"RTN","BPSOSCD",87,0)
 S BPS("RX",MEDN,"Pharmacy Service Type")="01"  ; 147-U7 Pharmacy Service Type, 1=Community/Retail Pharmacy Services
"RTN","BPSOSCD",88,0)
 ;
"RTN","BPSOSCD",89,0)
 ; PreAuth and Prior Authorization
"RTN","BPSOSCD",90,0)
 ; #1.09 Prior Authorization Number, #1.15 Prior Auth Type Code
"RTN","BPSOSCD",91,0)
 S X=$G(^BPST(IEN59,1))
"RTN","BPSOSCD",92,0)
 S BPS("RX",MEDN,"Preauth #")=$P(X,U,15)_$P(X,U,9)
"RTN","BPSOSCD",93,0)
 S BPS("Claim",MEDN,"Prior Auth Type")=$P(X,U,15)
"RTN","BPSOSCD",94,0)
 S BPS("Claim",MEDN,"Prior Auth Num Sub")=$P(X,U,9)
"RTN","BPSOSCD",95,0)
 ;
"RTN","BPSOSCD",96,0)
 ; delay reason code not sent unless user specifies a code
"RTN","BPSOSCD",97,0)
 S BPS("Claim",MEDN,"Delay Reason Code")=""  ; 357-NV Delay Reason Code
"RTN","BPSOSCD",98,0)
 ;
"RTN","BPSOSCD",99,0)
 ; Calculate date/time for Time of Service 678-Y6 - BPS*1*15
"RTN","BPSOSCD",100,0)
 ; using SUBMIT REQUEST DATE TIME field #17 from earliest transmission log entry
"RTN","BPSOSCD",101,0)
 N FDTIME,IEN57 S IEN57=$O(^BPSTL("B",IEN59,0)) I IEN57 S FDTIME=$P($G(^BPSTL(IEN57,0)),U,13)
"RTN","BPSOSCD",102,0)
 ; Otherwise use current time
"RTN","BPSOSCD",103,0)
 I $G(FDTIME)="" S FDTIME=$$NOW^XLFDT
"RTN","BPSOSCD",104,0)
 ; Save time as HHMMSS
"RTN","BPSOSCD",105,0)
 S BPS("Claim",MEDN,"Time of Service")=$$LJ^XLFSTR($P(FDTIME,".",2),6,0) ; 678-Y6 Time of Service
"RTN","BPSOSCD",106,0)
 ;
"RTN","BPSOSCD",107,0)
 ; NDC = NDC number drug, try transaction 1st, if null get it from Rx/refill
"RTN","BPSOSCD",108,0)
 S BPS("RX",MEDN,"Product ID Qualifier")="03"
"RTN","BPSOSCD",109,0)
 S NDC=$P(^BPST(IEN59,1),U,2)
"RTN","BPSOSCD",110,0)
 I NDC="" S NDC=$$GETNDC^PSONDCUT(RXIEN,RXRFIEN) D LOG^BPSOSL(IEN59,RTN_"-NDC sent as "_NDC)
"RTN","BPSOSCD",111,0)
 S BPS("RX",MEDN,"NDC")=NDC
"RTN","BPSOSCD",112,0)
 ;
"RTN","BPSOSCD",113,0)
 ; Prescription Data dependent on original vs. refill
"RTN","BPSOSCD",114,0)
 D:'RXRFIEN  ; 1st fill
"RTN","BPSOSCD",115,0)
 .S BPS("RX",MEDN,"Days Supply")=$$RXAPI1^BPSUTIL1(RXIEN,8,"I")
"RTN","BPSOSCD",116,0)
 .S BPS("RX",MEDN,"DAW")=$$RXAPI1^BPSUTIL1(RXIEN,81,"I")
"RTN","BPSOSCD",117,0)
 .;Use FINISHING PERSON field as pharmacist identifier for Initials and ID - BPS*1*15 - DBIA 10112 for $$SITE
"RTN","BPSOSCD",118,0)
 .S BPS("Provider",MEDN,"Pharmacist Initials")=$$GET1^DIQ(200,+$$RXAPI1^BPSUTIL1(RXIEN,38,"I"),1)
"RTN","BPSOSCD",119,0)
 .S BPS("Provider",MEDN,"Pharmacist ID")=$P($$SITE^VASITE,U,3)_$$RJ^XLFSTR(+$$RXAPI1^BPSUTIL1(RXIEN,38,"I"),15,0)
"RTN","BPSOSCD",120,0)
 D:RXRFIEN  ; refill
"RTN","BPSOSCD",121,0)
 .S BPS("RX",MEDN,"Days Supply")=$$RXSUBF1^BPSUTIL1(RXIEN,52,52.1,RXRFIEN,1.1,"I")
"RTN","BPSOSCD",122,0)
 .S BPS("RX",MEDN,"DAW")=$$RXSUBF1^BPSUTIL1(RXIEN,52,52.1,RXRFIEN,81,"I")
"RTN","BPSOSCD",123,0)
 .;Use FILLING PERSON field as pharmacist identifier for Initials and ID - BPS*1*15 - DBIA 10112 for $$SITE
"RTN","BPSOSCD",124,0)
 .S BPS("Provider",MEDN,"Pharmacist Initials")=$$GET1^DIQ(200,+$$RXSUBF1^BPSUTIL1(RXIEN,52,52.1,RXRFIEN,19,"I"),1)
"RTN","BPSOSCD",125,0)
 .S BPS("Provider",MEDN,"Pharmacist ID")=$P($$SITE^VASITE,U,3)_$$RJ^XLFSTR(+$$RXSUBF1^BPSUTIL1(RXIEN,52,52.1,RXRFIEN,19,"I"),15,0)
"RTN","BPSOSCD",126,0)
 ;
"RTN","BPSOSCD",127,0)
 ; Origin Code, VAOIEN=PLACER ORDER # from file 52, VANATURE=NATURE OF ORDER in sub-file 100.008
"RTN","BPSOSCD",128,0)
 S VAOIEN=+$$RXAPI1^BPSUTIL1(RXIEN,39.3,"I"),VANATURE=$$GET1^DIQ(100.008,"1,"_VAOIEN_",","12")
"RTN","BPSOSCD",129,0)
 S BPS("RX",MEDN,"Origin Code")=$S(VANATURE="AUTO":2,VANATURE["ELECTRONIC":3,VANATURE="DUPLICATE":0,VANATURE["TELEPHONE":2,1:1)
"RTN","BPSOSCD",130,0)
 ;
"RTN","BPSOSCD",131,0)
 ; NCPDP field 420-DK Submission Clarification Code, default to "01" for vD.0
"RTN","BPSOSCD",132,0)
 ;   note: this is a multiple (#9002313.02354), additional codes may be added by other routines
"RTN","BPSOSCD",133,0)
 S %=$P($G(^BPST(IEN59,12)),U,3),BPS("RX",MEDN,"Submission Clarif Code",1)=$S(%]"":%,1:"01")
"RTN","BPSOSCD",134,0)
 ;
"RTN","BPSOSCD",135,0)
 ; Drug Info
"RTN","BPSOSCD",136,0)
 S DRUGIEN=$$RXAPI1^BPSUTIL1(RXIEN,6,"I")
"RTN","BPSOSCD",137,0)
 D:DRUGIEN'=""
"RTN","BPSOSCD",138,0)
 .S BPS("RX",MEDN,"Drug IEN")=DRUGIEN
"RTN","BPSOSCD",139,0)
 .S BPS("RX",MEDN,"Drug Name")=$$DRUGDIE^BPSUTIL1(DRUGIEN,.01,"E")
"RTN","BPSOSCD",140,0)
 ;
"RTN","BPSOSCD",141,0)
 ; Pricing Info
"RTN","BPSOSCD",142,0)
 S PRICING=$G(^BPST(IEN59,5))
"RTN","BPSOSCD",143,0)
 S BPS("RX",MEDN,"Quantity")=$P(PRICING,U)
"RTN","BPSOSCD",144,0)
 S BPS("RX",MEDN,"Unit Price")=$P(PRICING,U,2)
"RTN","BPSOSCD",145,0)
 S BPS("RX",MEDN,"Unit of Measure")=$P(PRICING,U,8)
"RTN","BPSOSCD",146,0)
 S BPS("RX",MEDN,"Basis of Cost Determination")=$G(VAINFO(9002313.59902,IENS,902.13,"I"))
"RTN","BPSOSCD",147,0)
 S BPS("RX",MEDN,"Usual & Customary")=$G(VAINFO(9002313.59902,IENS,902.14,"I"))
"RTN","BPSOSCD",148,0)
 S BPS("RX",MEDN,"Gross Amount Due")=$G(VAINFO(9002313.59902,IENS,902.15,"I"))
"RTN","BPSOSCD",149,0)
 S BPS("RX",MEDN,"Ingredient Cost")=$G(VAINFO(9002313.59902,IENS,902.2,"I"))
"RTN","BPSOSCD",150,0)
 S BPS("RX",MEDN,"Dispensing Fee")=$G(VAINFO(9002313.59902,IENS,902.12,"I"))
"RTN","BPSOSCD",151,0)
 S ADFEE=+$G(VAINFO(9002313.59902,IENS,902.16,"I"))
"RTN","BPSOSCD",152,0)
 I ADFEE'=0 D
"RTN","BPSOSCD",153,0)
 . S BPS("RX",MEDN,"Other Amt Qual",1)="04"
"RTN","BPSOSCD",154,0)
 . S BPS("RX",MEDN,"Other Amt Value",1)=ADFEE
"RTN","BPSOSCD",155,0)
 ;
"RTN","BPSOSCD",156,0)
 Q
"RTN","BPSOSCD",157,0)
 ;
"RTN","BPSOSCD",158,0)
 ; OVERRIDE - Retrieve OVERRIDE nodes and put into BPS array
"RTN","BPSOSCD",159,0)
 ; They will be fetched from BPS("OVERRIDE"
"RTN","BPSOSCD",160,0)
 ;   during low-level construction of the actual encoded claim packet.
"RTN","BPSOSCD",161,0)
 ; BPS("OVERRIDE",field)=value  for fields 101-401
"RTN","BPSOSCD",162,0)
 ; BPS("OVERRIDE","RX",MEDN,field) for med #N, fields 402+
"RTN","BPSOSCD",163,0)
 ; Note that if you have multiple transactions bundled, the
"RTN","BPSOSCD",164,0)
 ;   union of overrides from 101-401 apply to all; and if there's a
"RTN","BPSOSCD",165,0)
 ;   conflict, the last one overwrites the previous ones.
"RTN","BPSOSCD",166,0)
OVERRIDE(IEN59,MEDN) ;
"RTN","BPSOSCD",167,0)
 N IEN511,RETVAL
"RTN","BPSOSCD",168,0)
 S IEN511=$P(^BPST(IEN59,1),U,13) Q:'IEN511
"RTN","BPSOSCD",169,0)
 S RETVAL=$$GET511^BPSOSO2(IEN511,"BPS(""OVERRIDE"")","BPS(""OVERRIDE"",""RX"","_MEDN_")")
"RTN","BPSOSCD",170,0)
 Q
"RTN","BPSOSCD",171,0)
 ;
"RTN","BPSOSCD",172,0)
 ; DURVALUE - Will read in the DUR data from the DUR multiple
"RTN","BPSOSCD",173,0)
 ;   in BPS Transactions and store the values into BPS("RX",MEDN,DUR,....)
"RTN","BPSOSCD",174,0)
 ; NOTE - unlike most values, these fields are stored by their
"RTN","BPSOSCD",175,0)
 ;   field number.  Since they are repeating, it will ease the
"RTN","BPSOSCD",176,0)
 ;   retrieval of them, when we populate the claim.
"RTN","BPSOSCD",177,0)
DURVALUE(IEN59,MEDN) ;
"RTN","BPSOSCD",178,0)
 N DUR,DCNT,DURREC
"RTN","BPSOSCD",179,0)
 ;
"RTN","BPSOSCD",180,0)
 S (DUR,DCNT)=0
"RTN","BPSOSCD",181,0)
 F  S DCNT=$O(^BPST(IEN59,13,DCNT)) Q:'DCNT  D
"RTN","BPSOSCD",182,0)
 .S DURREC=$G(^BPST(IEN59,13,DCNT,0))
"RTN","BPSOSCD",183,0)
 .I DURREC="" Q
"RTN","BPSOSCD",184,0)
 .S DUR=DUR+1
"RTN","BPSOSCD",185,0)
 .S BPS("RX",MEDN,"DUR",DUR,473)=DUR            ;473-7E DUR/PPS Code Counter
"RTN","BPSOSCD",186,0)
 .S BPS("RX",MEDN,"DUR",DUR,439)=$P(DURREC,U,3) ;439-E4 Reason For Service Code
"RTN","BPSOSCD",187,0)
 .S BPS("RX",MEDN,"DUR",DUR,440)=$P(DURREC,U,2) ;440-E5 Professional Service Code
"RTN","BPSOSCD",188,0)
 .S BPS("RX",MEDN,"DUR",DUR,441)=$P(DURREC,U,4) ;441-E6 Result of Service Code
"RTN","BPSOSCD",189,0)
 .S BPS("RX",MEDN,"DUR",DUR,474)=""             ;474-8E DUR/PPS Level Of Effort
"RTN","BPSOSCD",190,0)
 .Q:$G(BPS("NCPDP","Version"))'=51  ; fields 475&476 not used in vD.0
"RTN","BPSOSCD",191,0)
 .S BPS("RX",MEDN,"DUR",DUR,475)=""             ;475-J9 DUR Co-Agent ID Qualifier
"RTN","BPSOSCD",192,0)
 .S BPS("RX",MEDN,"DUR",DUR,476)=""             ;476-H6 DUR Co-Agent ID
"RTN","BPSOSCD",193,0)
 ;
"RTN","BPSOSCD",194,0)
 Q
"RTN","BPSOSCD",195,0)
 ;
"RTN","BPSOSCD",196,0)
COB(IEN59,MEDN) ; process the COB fields and build the COB array
"RTN","BPSOSCD",197,0)
 ; Code for Benefit Stages multiple not implemented yet (except by
"RTN","BPSOSCD",198,0)
 ; certification)
"RTN","BPSOSCD",199,0)
 ;
"RTN","BPSOSCD",200,0)
 ; build array of COB secondary claim data from the BPS Transaction file - esg - 6/16/10
"RTN","BPSOSCD",201,0)
 N COBPIEN,APDIEN,REJIEN,DATA
"RTN","BPSOSCD",202,0)
 K BPS("RX",MEDN,"OTHER PAYER")
"RTN","BPSOSCD",203,0)
 ;
"RTN","BPSOSCD",204,0)
 ; Field 337-4C COB OTHER PAYMENTS COUNT (9002313.59,1204)  moved into [1] below
"RTN","BPSOSCD",205,0)
 S BPS("RX",MEDN,"OTHER PAYER",0)=$P($G(^BPST(IEN59,12)),U,4)
"RTN","BPSOSCD",206,0)
 ;
"RTN","BPSOSCD",207,0)
 S COBPIEN=0 F  S COBPIEN=$O(^BPST(IEN59,14,COBPIEN)) Q:'COBPIEN  D
"RTN","BPSOSCD",208,0)
 . ; Note that this will set pieces 1-7 and 11.  Piece 9 is reserved for
"RTN","BPSOSCD",209,0)
 . ;  Benefit Stage Count and is set by the certification code
"RTN","BPSOSCD",210,0)
 . S BPS("RX",MEDN,"OTHER PAYER",COBPIEN,0)=$G(^BPST(IEN59,14,COBPIEN,0))
"RTN","BPSOSCD",211,0)
 . ;
"RTN","BPSOSCD",212,0)
 . ; retrieve data from other payer amount paid multiple
"RTN","BPSOSCD",213,0)
 . S APDIEN=0 F  S APDIEN=$O(^BPST(IEN59,14,COBPIEN,1,APDIEN)) Q:'APDIEN  D
"RTN","BPSOSCD",214,0)
 .. S DATA=$G(^BPST(IEN59,14,COBPIEN,1,APDIEN,0))
"RTN","BPSOSCD",215,0)
 .. S BPS("RX",MEDN,"OTHER PAYER",COBPIEN,"P",APDIEN,0)=$P(DATA,"^",1)_"^"_$$GET1^DIQ(9002313.2,$P(DATA,"^",2),.01)
"RTN","BPSOSCD",216,0)
 .. S BPS("RX",MEDN,"OTHER PAYER",COBPIEN,"PP",APDIEN,0)=$P(DATA,"^",3)
"RTN","BPSOSCD",217,0)
 .. I +$P(DATA,"^",3) S $P(BPS("RX",MEDN,"OTHER PAYER",COBPIEN,"PP",APDIEN,0),"^",2)="06"
"RTN","BPSOSCD",218,0)
 .. Q
"RTN","BPSOSCD",219,0)
 . ;
"RTN","BPSOSCD",220,0)
 . ; retrieve data from other payer reject multiple
"RTN","BPSOSCD",221,0)
 . S REJIEN=0 F  S REJIEN=$O(^BPST(IEN59,14,COBPIEN,2,REJIEN)) Q:'REJIEN  D
"RTN","BPSOSCD",222,0)
 .. S BPS("RX",MEDN,"OTHER PAYER",COBPIEN,"R",REJIEN,0)=$G(^BPST(IEN59,14,COBPIEN,2,REJIEN,0))
"RTN","BPSOSCD",223,0)
 Q
"RTN","BPSOSCD",224,0)
 ;
"RTN","BPSOSCD",225,0)
PRVADRS(IEN59,PRVIEN) ; site address for a provider
"RTN","BPSOSCD",226,0)
 ; returns "street address^city^st^zip"
"RTN","BPSOSCD",227,0)
 ; IEN59=BPS TRANSACTION (#9002313.59) ien
"RTN","BPSOSCD",228,0)
 ; PRVIEN=provider IEN in NEW PERSON file (#200)
"RTN","BPSOSCD",229,0)
 ;
"RTN","BPSOSCD",230,0)
 I '$G(IEN59) Q ""
"RTN","BPSOSCD",231,0)
 I '$G(PRVIEN) Q ""
"RTN","BPSOSCD",232,0)
 ;
"RTN","BPSOSCD",233,0)
 N BPSND,F,IPTR,IEN,OPSITE,PRVADDR,PRVNVA,RSLT,AD2
"RTN","BPSOSCD",234,0)
 S RSLT=""
"RTN","BPSOSCD",235,0)
 ;
"RTN","BPSOSCD",236,0)
 S PRVNVA=+$$GET1^DIQ(200,PRVIEN_",",53.91,"I")  ; NON-VA PRESCRIBER
"RTN","BPSOSCD",237,0)
 ;
"RTN","BPSOSCD",238,0)
 ; if false, it's a VA prescriber - address data found in file 4 for the VA pharmacy
"RTN","BPSOSCD",239,0)
 I 'PRVNVA D  G PRVADX
"RTN","BPSOSCD",240,0)
 .S OPSITE=$P($G(^BPST(IEN59,1)),U,4)  ; OUTPATIENT SITE ptr
"RTN","BPSOSCD",241,0)
 .Q:'OPSITE
"RTN","BPSOSCD",242,0)
 .S BPSND="BPS59" K ^TMP($J,BPSND)
"RTN","BPSOSCD",243,0)
 .D PSS^PSO59(OPSITE,"",BPSND)
"RTN","BPSOSCD",244,0)
 .S IPTR=$P($G(^TMP($J,BPSND,OPSITE,101)),U)  ; INSTITUTION ptr
"RTN","BPSOSCD",245,0)
 .S:IPTR RSLT=$$MADD^XUAF4(IPTR)_U_$$GET1^DIQ(4,IPTR_",",4.02)_U_$$GET1^DIQ(4,IPTR_",",4.04,"I")
"RTN","BPSOSCD",246,0)
 .K ^TMP($J,BPSND)
"RTN","BPSOSCD",247,0)
 ;
"RTN","BPSOSCD",248,0)
 ; Non-VA prescriber - address data found in file 200
"RTN","BPSOSCD",249,0)
 F F=.111,.112,.113,.114,.115,.116 S PRVADDR(F)=$$GET1^DIQ(200,PRVIEN_",",F)
"RTN","BPSOSCD",250,0)
 ; Get State info
"RTN","BPSOSCD",251,0)
 S PRVADDR(.115,"ABBR")="",IEN=$$GET1^DIQ(200,PRVIEN_",",.115,"I"),PRVADDR(.115,"ABBR")=$$GET1^DIQ(5,+IEN_",",1)
"RTN","BPSOSCD",252,0)
 ; Build Address Line 2
"RTN","BPSOSCD",253,0)
 S AD2=PRVADDR(.112) I PRVADDR(.113)]"" S AD2=AD2_$S(AD2]"":" ",1:"")_PRVADDR(.113)
"RTN","BPSOSCD",254,0)
 ; Build result string
"RTN","BPSOSCD",255,0)
 S RSLT=PRVADDR(.111)_U_PRVADDR(.114)_U_PRVADDR(.115,"ABBR")_U_PRVADDR(.116)_U_AD2_U_IEN
"RTN","BPSOSCD",256,0)
 ;
"RTN","BPSOSCD",257,0)
PRVADX ;
"RTN","BPSOSCD",258,0)
 Q RSLT
"RTN","BPSOSCD",259,0)
 ;
"RTN","BPSOSCD",260,0)
COUNTRY(STATE,IEN) ;
"RTN","BPSOSCD",261,0)
 ; Convert STATE abbreviation into a ISO-3166-1 country code
"RTN","BPSOSCD",262,0)
 ; Input:
"RTN","BPSOSCD",263,0)
 ;    STATE: State Abbreviation
"RTN","BPSOSCD",264,0)
 ; Output: ISO-3166-1 Country Code
"RTN","BPSOSCD",265,0)
 ;
"RTN","BPSOSCD",266,0)
 I $G(STATE)="" Q ""
"RTN","BPSOSCD",267,0)
 I '$G(IEN) Q ""
"RTN","BPSOSCD",268,0)
 I ",BC,MB,NB,NF,NS,NT,ON,PE,QC,SK,YT,CANAD,NU,"[(","_STATE_",") Q "CA" ; Canada
"RTN","BPSOSCD",269,0)
 I STATE="FG"!(STATE="EU")!(STATE="UN") Q ""  ; Foreign Country, Europe, Unknown
"RTN","BPSOSCD",270,0)
 I STATE="AS" Q "AS"  ; American Samoa
"RTN","BPSOSCD",271,0)
 I STATE="FM" Q "FM"  ; Federated States of Micronesia
"RTN","BPSOSCD",272,0)
 I STATE="GU" Q "GU"  ; Guam
"RTN","BPSOSCD",273,0)
 I STATE="MH" Q "MH"  ; Marshall Islands
"RTN","BPSOSCD",274,0)
 I STATE="MP" Q "MP"  ; Northern Mariana Islands
"RTN","BPSOSCD",275,0)
 I STATE="MX" Q "MX"  ; Mexico
"RTN","BPSOSCD",276,0)
 I STATE="PH" Q "PH"  ; Philippines
"RTN","BPSOSCD",277,0)
 I STATE="PR" Q "PR"  ; Puerto Rico
"RTN","BPSOSCD",278,0)
 I STATE="PW" Q "PW"  ; Palau
"RTN","BPSOSCD",279,0)
 I STATE="VI" Q "VI"  ; Virgin Islands
"RTN","BPSOSCD",280,0)
 I $$GET1^DIQ(5,IEN_",",2.2,"I")=1 Q "US"
"RTN","BPSOSCD",281,0)
 Q ""
"RTN","BPSOSCE")
0^23^B16490040
"RTN","BPSOSCE",1,0)
BPSOSCE ;BHAM ISC/FCS/DRS/DLF - New entry in 9002313.02 ;06/01/2004
"RTN","BPSOSCE",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,8,10,11,15,19,24**;JUN 2004;Build 43
"RTN","BPSOSCE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSOSCE",4,0)
 ;
"RTN","BPSOSCE",5,0)
 ;Create an Electronic Claim Submission record
"RTN","BPSOSCE",6,0)
 ; the BPS array is shared by all of the BPSOSC* routines
"RTN","BPSOSCE",7,0)
 ; BPS is created in BPSOSCA
"RTN","BPSOSCE",8,0)
 ;
"RTN","BPSOSCE",9,0)
 Q
"RTN","BPSOSCE",10,0)
 ;
"RTN","BPSOSCE",11,0)
 ;NEWCLAIM^BPSOSCE called from BPSOSCA from BPSOSQG from BPSOSQ2
"RTN","BPSOSCE",12,0)
 ; create /update an entry in BPS CLAIMS (#9002313.02)
"RTN","BPSOSCE",13,0)
 ; then call the code that populates the entry
"RTN","BPSOSCE",14,0)
 ; START = START Medication Number
"RTN","BPSOSCE",15,0)
 ; END = END Medication Number
"RTN","BPSOSCE",16,0)
 ; TOTAL = TOTAL Medications in Claim
"RTN","BPSOSCE",17,0)
 ; process from BPS("RX",START) through BPS("RX",END)
"RTN","BPSOSCE",18,0)
NEWCLAIM(START,END,TOTAL) ; function, returns null on success, else error
"RTN","BPSOSCE",19,0)
 ;
"RTN","BPSOSCE",20,0)
 N BPSIEN,CLAIMID,COUNT,DA,DIC,DIK,DLAYGO,ERROR,INDEX,NODE0,ROU,SEG,X,Y
"RTN","BPSOSCE",21,0)
 S ROU=$T(+0),START=+$G(START),END=+$G(END),TOTAL=+$G(TOTAL)
"RTN","BPSOSCE",22,0)
 ;
"RTN","BPSOSCE",23,0)
 ;Create new record in Claim Submission File (9002313.02)
"RTN","BPSOSCE",24,0)
 ; try for exclusive access for 1 min. before logging error
"RTN","BPSOSCE",25,0)
 F  L +^XTMP(ROU,"NEWCLAIM"):60 Q:$T  D
"RTN","BPSOSCE",26,0)
 .N A S A=$$IMPOSS^BPSOSUE("L","RTI","Single-threaded routine",,,ROU)
"RTN","BPSOSCE",27,0)
 ; Generate Claim ID
"RTN","BPSOSCE",28,0)
 S CLAIMID=$$CLAIMID^BPSECX1($G(BPS("RX",START,"IEN59")))
"RTN","BPSOSCE",29,0)
 I CLAIMID="" D
"RTN","BPSOSCE",30,0)
 .S ERROR="320^VA Claim ID not created"
"RTN","BPSOSCE",31,0)
 .D LOG(ROU_"-Failed to create Claim ID")
"RTN","BPSOSCE",32,0)
 ;
"RTN","BPSOSCE",33,0)
 ; Create claim record
"RTN","BPSOSCE",34,0)
 D:'$G(ERROR)
"RTN","BPSOSCE",35,0)
 .S DLAYGO=9002313.02,DIC="^BPSC(",DIC(0)="LXZ",X=CLAIMID
"RTN","BPSOSCE",36,0)
 .D ^DIC Q:Y>0  ; less than zero is error
"RTN","BPSOSCE",37,0)
 .S ERROR="321^Failed to create claim record"
"RTN","BPSOSCE",38,0)
 .D LOG(ROU_"-Failed to create an entry in file 9002313.02")
"RTN","BPSOSCE",39,0)
 ;
"RTN","BPSOSCE",40,0)
 L -^XTMP(ROU,"NEWCLAIM")
"RTN","BPSOSCE",41,0)
 ;
"RTN","BPSOSCE",42,0)
 Q:$G(ERROR) ERROR
"RTN","BPSOSCE",43,0)
 ;
"RTN","BPSOSCE",44,0)
 ; Update BPS and Log it
"RTN","BPSOSCE",45,0)
 S BPS(9002313.02)=+Y
"RTN","BPSOSCE",46,0)
 ; Needed for Turn-Around Stats - Do NOT delete/alter!!
"RTN","BPSOSCE",47,0)
 D LOG(ROU_"-Created claim ID "_CLAIMID_" (IEN "_BPS(9002313.02)_")")
"RTN","BPSOSCE",48,0)
 ;
"RTN","BPSOSCE",49,0)
 ; Update zero node of the claim
"RTN","BPSOSCE",50,0)
 S NODE0=$G(^BPSC(BPS(9002313.02),0))
"RTN","BPSOSCE",51,0)
 S $P(NODE0,U,2)=$G(BPS("NCPDP","IEN")) ; Electronic Payor (Payer Sheet)
"RTN","BPSOSCE",52,0)
 S $P(NODE0,U,4)=2 ; Transmit Flag - 2 is 'Yes (Point of Sale)'
"RTN","BPSOSCE",53,0)
 S $P(NODE0,U,6)=$$NOWFM^BPSOSU1() ; Created On
"RTN","BPSOSCE",54,0)
 S ^BPSC(BPS(9002313.02),0)=NODE0
"RTN","BPSOSCE",55,0)
 ;
"RTN","BPSOSCE",56,0)
 ; Update Patient Name
"RTN","BPSOSCE",57,0)
 S $P(^BPSC(BPS(9002313.02),1),U,1)=$G(BPS("Patient","Name"))
"RTN","BPSOSCE",58,0)
 S $P(^BPSC(BPS(9002313.02),1),U,4)=$G(BPS("Insurer","IEN"))
"RTN","BPSOSCE",59,0)
 ; Update TRANSACTION field
"RTN","BPSOSCE",60,0)
 S $P(^BPSC(BPS(9002313.02),0),U,8)=$G(BPS("RX",START,"IEN59"))
"RTN","BPSOSCE",61,0)
 ;
"RTN","BPSOSCE",62,0)
 ; Count of meds in claim
"RTN","BPSOSCE",63,0)
 S BPS("Transaction Count")=TOTAL
"RTN","BPSOSCE",64,0)
 ;
"RTN","BPSOSCE",65,0)
 ; Process the 'non-multiple' segments (Header, Patient, Cardholder)
"RTN","BPSOSCE",66,0)
 F SEG=100:10:120 D XLOOP^BPSOSCF(BPS("NCPDP","IEN"),SEG)
"RTN","BPSOSCE",67,0)
 ;
"RTN","BPSOSCE",68,0)
 ; zero node for MEDICATIONS SUB-FIELD (#9002313.0201)
"RTN","BPSOSCE",69,0)
 S:'$D(^BPSC(BPS(9002313.02),400,0)) ^(0)="^9002313.0201PA^^"
"RTN","BPSOSCE",70,0)
 S COUNT=0 F INDEX=START:1:END D
"RTN","BPSOSCE",71,0)
 .; Create zero node for entry in multiple
"RTN","BPSOSCE",72,0)
 .S COUNT=COUNT+1,NODE0=""
"RTN","BPSOSCE",73,0)
 .S $P(NODE0,U)=INDEX,$P(NODE0,U,4)=$G(BPS("RX",INDEX,"Drug Name")),$P(NODE0,U,5)=$G(BPS("RX",INDEX,"RX IEN"))
"RTN","BPSOSCE",74,0)
 .S ^BPSC(BPS(9002313.02),400,INDEX,0)=NODE0
"RTN","BPSOSCE",75,0)
 .S BPS(9002313.0201)=INDEX
"RTN","BPSOSCE",76,0)
 .; Process entries in medication multiple
"RTN","BPSOSCE",77,0)
 .F SEG=130:10:300 D XLOOP^BPSOSCF(BPS("NCPDP","IEN"),SEG,INDEX) ; BPS*1*19 - add Intermediary and Last Known 4Rx segments
"RTN","BPSOSCE",78,0)
 .; Process entries in "D00" node of the Claim
"RTN","BPSOSCE",79,0)
 .; Prescriber DEA Number D01-KV
"RTN","BPSOSCE",80,0)
 .S BPSIEN=$O(^BPSF(9002313.91,"C","PRESCRIBER DEA NUMBER",""))
"RTN","BPSOSCE",81,0)
 .I BPSIEN'="" D XFLDCODE^BPSOSCF(150,BPSIEN,"GFS") ; calls the GET, FORMAT and SET for NCPDP Field in file 9002313.91
"RTN","BPSOSCE",82,0)
 .; Total Prescribed Qty Remaining D02-KW
"RTN","BPSOSCE",83,0)
 .S BPSIEN=$O(^BPSF(9002313.91,"C","TOTAL PRESCRIBED QTY REMAINING",""))
"RTN","BPSOSCE",84,0)
 .D FLDD02^BPSOSSG
"RTN","BPSOSCE",85,0)
 .;
"RTN","BPSOSCE",86,0)
 .; Update the indices
"RTN","BPSOSCE",87,0)
 .S ^BPSC(BPS(9002313.02),400,"B",INDEX,INDEX)=""
"RTN","BPSOSCE",88,0)
 .; Update top-level node of the multiple
"RTN","BPSOSCE",89,0)
 .S NODE0=$G(^BPSC(BPS(9002313.02),400,0))
"RTN","BPSOSCE",90,0)
 .S $P(NODE0,U,3)=COUNT,$P(NODE0,U,4)=COUNT,^BPSC(BPS(9002313.02),400,0)=NODE0
"RTN","BPSOSCE",91,0)
 ;
"RTN","BPSOSCE",92,0)
 ; Cross-Reference Claim Submission Record
"RTN","BPSOSCE",93,0)
 S DIK="^BPSC(",DA=BPS(9002313.02) D IX1^DIK
"RTN","BPSOSCE",94,0)
 ;
"RTN","BPSOSCE",95,0)
 Q ""  ; Return null on success
"RTN","BPSOSCE",96,0)
 ;
"RTN","BPSOSCE",97,0)
LOG(MSG) ;log the message for all the transactions in this 9002313.02 claim
"RTN","BPSOSCE",98,0)
 N I,IEN59
"RTN","BPSOSCE",99,0)
 F I=START:1:END S IEN59=$G(BPS("RX",I,"IEN59")) D:IEN59 LOG^BPSOSL(IEN59,MSG)
"RTN","BPSOSCE",100,0)
 Q
"RTN","BPSOSCE",101,0)
 ;
"RTN","BPSOSHF")
0^24^B46124241
"RTN","BPSOSHF",1,0)
BPSOSHF ;BHAM ISC/SD/lwj/DLF - Get/Format/Set value for repeating segments ;06/01/2004
"RTN","BPSOSHF",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,8,10,11,23,24**;JUN 2004;Build 43
"RTN","BPSOSHF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSOSHF",4,0)
 ;
"RTN","BPSOSHF",5,0)
 ; This routine is an addendum to BPSOSCF.  Its purpose is to handle
"RTN","BPSOSHF",6,0)
 ; some of the repeating fields that now exist in NCPDP 5.1.
"RTN","BPSOSHF",7,0)
 ; The logic was put in here rather than BPSOSCF to keep the original
"RTN","BPSOSHF",8,0)
 ; routine (BPSOSCF) from growing too large and too cumbersome to
"RTN","BPSOSHF",9,0)
 ; maintain.
"RTN","BPSOSHF",10,0)
 ;
"RTN","BPSOSHF",11,0)
DURPPS(FORMAT,NODE,MEDN) ;EP called from BPSOSCF
"RTN","BPSOSHF",12,0)
 ;
"RTN","BPSOSHF",13,0)
 ; First order of business - check the BPS("RX",MEDN,"DUR") array
"RTN","BPSOSHF",14,0)
 ; for values - if there aren't any, we don't need to write this
"RTN","BPSOSHF",15,0)
 ; segment
"RTN","BPSOSHF",16,0)
 ;
"RTN","BPSOSHF",17,0)
 N FIELD,DUR,FLD,OVERRIDE,FLAG,ORD,FLDIEN,FLDNUM,FLDNUMB,FOUND
"RTN","BPSOSHF",18,0)
 S FLAG="FS"
"RTN","BPSOSHF",19,0)
 ;
"RTN","BPSOSHF",20,0)
 Q:'$D(BPS("RX",MEDN,"DUR"))
"RTN","BPSOSHF",21,0)
 ;
"RTN","BPSOSHF",22,0)
 ; Next we need to figure out which fields on this format are really
"RTN","BPSOSHF",23,0)
 ; needed, then we will loop through and populate them
"RTN","BPSOSHF",24,0)
 ;
"RTN","BPSOSHF",25,0)
 D GETFLDS(FORMAT,NODE,.FIELD)
"RTN","BPSOSHF",26,0)
 ;
"RTN","BPSOSHF",27,0)
 ; Now lets get, format and set the field
"RTN","BPSOSHF",28,0)
 S (ORD,DUR)=0
"RTN","BPSOSHF",29,0)
 F  S DUR=$O(BPS("RX",MEDN,"DUR",DUR)) Q:DUR=""  D
"RTN","BPSOSHF",30,0)
 . S FLDNUM="" F  S FLDNUM=$O(BPS("RX",MEDN,"DUR",DUR,FLDNUM)) Q:FLDNUM=""  D
"RTN","BPSOSHF",31,0)
 .. S ORD="",FOUND=0
"RTN","BPSOSHF",32,0)
 .. F  S ORD=$O(FIELD(ORD)) Q:ORD=""  D  Q:FOUND
"RTN","BPSOSHF",33,0)
 ... S FLDNUMB="",FLDNUMB=$P(FIELD(ORD),U,2) Q:FLDNUMB'=FLDNUM
"RTN","BPSOSHF",34,0)
 ... S FLDIEN="",FLDIEN=$P(FIELD(ORD),U)
"RTN","BPSOSHF",35,0)
 ... S BPS("X")=BPS("RX",MEDN,"DUR",DUR,FLDNUM)
"RTN","BPSOSHF",36,0)
 ... S FOUND=1
"RTN","BPSOSHF",37,0)
 ... D XFLDCODE^BPSOSCF(NODE,FLDIEN,FLAG)  ;format/set
"RTN","BPSOSHF",38,0)
 Q
"RTN","BPSOSHF",39,0)
 ;
"RTN","BPSOSHF",40,0)
COB(FORMAT,NODE,MEDN) ; COB fields processing, NODE=160
"RTN","BPSOSHF",41,0)
 ;---------------------------------------------------------------
"RTN","BPSOSHF",42,0)
 ; The COB data is stored in the following local array:
"RTN","BPSOSHF",43,0)
 ;
"RTN","BPSOSHF",44,0)
 ;      BPS("RX",MEDN,"OTHER PAYER",.....
"RTN","BPSOSHF",45,0)
 ;
"RTN","BPSOSHF",46,0)
 ; Array built in routine BPSOSCD.
"RTN","BPSOSHF",47,0)
 ; Special note - Overrides are not allowed on this multiple.
"RTN","BPSOSHF",48,0)
 ;    "Special" code is not accounted for either.
"RTN","BPSOSHF",49,0)
 ;---------------------------------------------------------------
"RTN","BPSOSHF",50,0)
 ;
"RTN","BPSOSHF",51,0)
 N FIELD,FLD,OVERRIDE,FLAG,ORD,NCPFLD,BPD,BPD1,BPD2,PCE,BPSOPIEN,BPSOAIEN,BPSORIEN,BPSCOUNT
"RTN","BPSOSHF",52,0)
 S FLAG="FS"
"RTN","BPSOSHF",53,0)
 ;
"RTN","BPSOSHF",54,0)
 ; Quit if there is no data in the array
"RTN","BPSOSHF",55,0)
 Q:'$D(BPS("RX",MEDN,"OTHER PAYER"))
"RTN","BPSOSHF",56,0)
 ;
"RTN","BPSOSHF",57,0)
 ; next we need to figure out which fields on this format are really
"RTN","BPSOSHF",58,0)
 ; needed, then we will loop through and populate them
"RTN","BPSOSHF",59,0)
 ;
"RTN","BPSOSHF",60,0)
 D GETFLDS(FORMAT,NODE,.FIELD)
"RTN","BPSOSHF",61,0)
 ;
"RTN","BPSOSHF",62,0)
 ; re-sort this list by the NCPDP field#
"RTN","BPSOSHF",63,0)
 ; NCPFLD(NCPDP FIELD#) = internal field#
"RTN","BPSOSHF",64,0)
 K NCPFLD S ORD=0 F  S ORD=$O(FIELD(ORD)) Q:'ORD  S FLD=$P(FIELD(ORD),U,2) I FLD'="" S NCPFLD(FLD)=+FIELD(ORD)
"RTN","BPSOSHF",65,0)
 ;
"RTN","BPSOSHF",66,0)
 ; see if 337-4C is needed
"RTN","BPSOSHF",67,0)
 S FLD=337
"RTN","BPSOSHF",68,0)
 I $D(NCPFLD(FLD)) D
"RTN","BPSOSHF",69,0)
 . S BPS("X")=$P($G(BPS("RX",MEDN,"OTHER PAYER",0)),U,1)     ; get
"RTN","BPSOSHF",70,0)
 . I BPS("X")="" Q
"RTN","BPSOSHF",71,0)
 . D XFLDCODE^BPSOSCF(NODE,NCPFLD(FLD),FLAG)                 ; format/set
"RTN","BPSOSHF",72,0)
 . Q
"RTN","BPSOSHF",73,0)
 ;
"RTN","BPSOSHF",74,0)
 ; now lets get, format and set the rest of the COB fields
"RTN","BPSOSHF",75,0)
 S BPSOPIEN=0 F  S BPSOPIEN=$O(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN)) Q:'BPSOPIEN  D
"RTN","BPSOSHF",76,0)
 . S BPD=$G(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,0))
"RTN","BPSOSHF",77,0)
 . ; Note that piece 9 (Benefit Stage Count) is only set by Certification Code
"RTN","BPSOSHF",78,0)
 . F PCE=1:1:7,9,11 D
"RTN","BPSOSHF",79,0)
 .. S FLD=$S(PCE=1:337,PCE=2:338,PCE=3:339,PCE=4:340,PCE=5:443,PCE=6:341,PCE=7:471,PCE=9:392,PCE=11:2149,1:0) Q:'FLD
"RTN","BPSOSHF",80,0)
 .. I '$D(NCPFLD(FLD)) Q                          ; field not needed
"RTN","BPSOSHF",81,0)
 .. I $P(BPD,U,PCE)="" Q                          ; data is nil
"RTN","BPSOSHF",82,0)
 .. S BPS("X")=$P(BPD,U,PCE)                      ; get
"RTN","BPSOSHF",83,0)
 .. D XFLDCODE^BPSOSCF(NODE,NCPFLD(FLD),FLAG)     ; format/set
"RTN","BPSOSHF",84,0)
 .. Q
"RTN","BPSOSHF",85,0)
 . ;
"RTN","BPSOSHF",86,0)
 . ; Now look at the other payer amount paid fields
"RTN","BPSOSHF",87,0)
 . S BPSOAIEN=0 F  S BPSOAIEN=$O(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,"P",BPSOAIEN)) Q:'BPSOAIEN  D
"RTN","BPSOSHF",88,0)
 .. S BPD1=$G(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,"P",BPSOAIEN,0))
"RTN","BPSOSHF",89,0)
 .. F PCE=1,2 D
"RTN","BPSOSHF",90,0)
 ... S FLD=$S(PCE=1:431,PCE=2:342,1:0) Q:'FLD
"RTN","BPSOSHF",91,0)
 ... I '$D(NCPFLD(FLD)) Q                          ; field not needed
"RTN","BPSOSHF",92,0)
 ... I $P(BPD1,U,PCE)="" Q                         ; data is nil
"RTN","BPSOSHF",93,0)
 ... S BPS("X")=$P(BPD1,U,PCE)                     ; get
"RTN","BPSOSHF",94,0)
 ... D XFLDCODE^BPSOSCF(NODE,NCPFLD(FLD),FLAG)     ; format/set
"RTN","BPSOSHF",95,0)
 .. Q
"RTN","BPSOSHF",96,0)
 . ;
"RTN","BPSOSHF",97,0)
 . ; Now look at the other payer reject code fields
"RTN","BPSOSHF",98,0)
 . S BPSORIEN=0 F  S BPSORIEN=$O(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,"R",BPSORIEN)) Q:'BPSORIEN  D
"RTN","BPSOSHF",99,0)
 .. S BPD2=$G(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,"R",BPSORIEN,0))
"RTN","BPSOSHF",100,0)
 .. S FLD=472
"RTN","BPSOSHF",101,0)
 .. I '$D(NCPFLD(FLD)) Q                          ; field not needed
"RTN","BPSOSHF",102,0)
 .. I BPD2="" Q                                   ; data is nil
"RTN","BPSOSHF",103,0)
 .. S BPS("X")=BPD2                               ; get
"RTN","BPSOSHF",104,0)
 .. D XFLDCODE^BPSOSCF(NODE,NCPFLD(FLD),FLAG)     ; format/set
"RTN","BPSOSHF",105,0)
 .. Q
"RTN","BPSOSHF",106,0)
 . ;
"RTN","BPSOSHF",107,0)
 . ; Now look at the other payer-patient amount paid fields
"RTN","BPSOSHF",108,0)
 . S BPSCOUNT=0                                   ; initialize counter
"RTN","BPSOSHF",109,0)
 . S BPSOAIEN=0 F  S BPSOAIEN=$O(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,"PP",BPSOAIEN)) Q:'BPSOAIEN  D
"RTN","BPSOSHF",110,0)
 .. S BPD1=$G(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,"PP",BPSOAIEN,0))
"RTN","BPSOSHF",111,0)
 .. ;
"RTN","BPSOSHF",112,0)
 .. ; Field 352-NQ = OTHER PAYER-PAT RESP AMOUNT
"RTN","BPSOSHF",113,0)
 .. I '$D(NCPFLD(352)) Q                          ; fields not needed
"RTN","BPSOSHF",114,0)
 .. I '+$P(BPD1,U,1) Q                            ; data is nil or zero
"RTN","BPSOSHF",115,0)
 .. S BPSCOUNT=BPSCOUNT+1                         ; increment counter
"RTN","BPSOSHF",116,0)
 .. S BPS("X")=$P(BPD1,U,1)                       ; get
"RTN","BPSOSHF",117,0)
 .. D XFLDCODE^BPSOSCF(NODE,NCPFLD(352),FLAG)     ; format/set
"RTN","BPSOSHF",118,0)
 .. ;
"RTN","BPSOSHF",119,0)
 .. ; If Field 352 is populated, then populate 351 and 353.
"RTN","BPSOSHF",120,0)
 .. ;
"RTN","BPSOSHF",121,0)
 .. ; Field 351-NP = OTHER PAYER-PAT RESP AMT QLFR
"RTN","BPSOSHF",122,0)
 .. S BPS("X")=$P(BPD1,U,2)                       ; get
"RTN","BPSOSHF",123,0)
 .. D XFLDCODE^BPSOSCF(NODE,NCPFLD(351),FLAG)     ; format/set
"RTN","BPSOSHF",124,0)
 .. ;
"RTN","BPSOSHF",125,0)
 .. ; Field 353-NR = OTHER PAYER-PAT RESP AMT CNT
"RTN","BPSOSHF",126,0)
 .. S BPS("X")=BPSCOUNT                           ; get
"RTN","BPSOSHF",127,0)
 .. D XFLDCODE^BPSOSCF(NODE,NCPFLD(353),FLAG)     ; format/set
"RTN","BPSOSHF",128,0)
 .. Q
"RTN","BPSOSHF",129,0)
 . ;
"RTN","BPSOSHF",130,0)
 . ; Now look at the Benefit Stages fields
"RTN","BPSOSHF",131,0)
 . ; Currently, this multiple is only set by certification code
"RTN","BPSOSHF",132,0)
 . S BPSOAIEN=0 F  S BPSOAIEN=$O(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,"BS",BPSOAIEN)) Q:'BPSOAIEN  D
"RTN","BPSOSHF",133,0)
 .. S BPD1=$G(BPS("RX",MEDN,"OTHER PAYER",BPSOPIEN,"BS",BPSOAIEN,0))
"RTN","BPSOSHF",134,0)
 .. F PCE=1,2 D
"RTN","BPSOSHF",135,0)
 ... S FLD=$S(PCE=1:394,PCE=2:393,1:0) Q:'FLD
"RTN","BPSOSHF",136,0)
 ... I '$D(NCPFLD(FLD)) Q                          ; field not needed
"RTN","BPSOSHF",137,0)
 ... I $P(BPD1,U,PCE)="" Q                         ; data is nil
"RTN","BPSOSHF",138,0)
 ... S BPS("X")=$P(BPD1,U,PCE)                     ; get
"RTN","BPSOSHF",139,0)
 ... D XFLDCODE^BPSOSCF(NODE,NCPFLD(FLD),FLAG)     ; format/set
"RTN","BPSOSHF",140,0)
 .. Q
"RTN","BPSOSHF",141,0)
 . Q
"RTN","BPSOSHF",142,0)
 ;
"RTN","BPSOSHF",143,0)
COBX ;
"RTN","BPSOSHF",144,0)
 Q
"RTN","BPSOSHF",145,0)
 ;
"RTN","BPSOSHF",146,0)
GETFLDS(FORMAT,NODE,FIELD) ;EP NCPDP 5.1
"RTN","BPSOSHF",147,0)
 ;---------------------------------------------------------------
"RTN","BPSOSHF",148,0)
 ;This routine will get the list of repeating fields that must be
"RTN","BPSOSHF",149,0)
 ; be worked with separately
"RTN","BPSOSHF",150,0)
 ; (This was originally coded for the DUR/PPS segment - I'm not
"RTN","BPSOSHF",151,0)
 ; 100% sure how and if it will work for the other repeating
"RTN","BPSOSHF",152,0)
 ; fields that exist within a segment.)
"RTN","BPSOSHF",153,0)
 ;---------------------------------------------------------------
"RTN","BPSOSHF",154,0)
 ; Coming in:
"RTN","BPSOSHF",155,0)
 ;   FORMAT = BPSF(9002313.92 's format IEN
"RTN","BPSOSHF",156,0)
 ;   NODE   = which segment we are processing (i.e. 180 - DUR/PPS)
"RTN","BPSOSHF",157,0)
 ;  .FIELD  = array to store the values in
"RTN","BPSOSHF",158,0)
 ;
"RTN","BPSOSHF",159,0)
 ; Exitting:
"RTN","BPSOSHF",160,0)
 ;  .FIELD array will look like:
"RTN","BPSOSHF",161,0)
 ;     FIELD(ord)=int^ext
"RTN","BPSOSHF",162,0)
 ;  Where:   ext = external field number from BPSF(9002313.91
"RTN","BPSOSHF",163,0)
 ;           int = internal field number from BPSF(9002313.91
"RTN","BPSOSHF",164,0)
 ;           ord = the order of the field - used in creating clm
"RTN","BPSOSHF",165,0)
 ;---------------------------------------------------------------
"RTN","BPSOSHF",166,0)
 ;
"RTN","BPSOSHF",167,0)
 N ORDER,RECMIEN,MDATA,FLDIEN,FLDNUM,DUR
"RTN","BPSOSHF",168,0)
 ;
"RTN","BPSOSHF",169,0)
 S ORDER=0
"RTN","BPSOSHF",170,0)
 ;
"RTN","BPSOSHF",171,0)
 F  D  Q:'ORDER
"RTN","BPSOSHF",172,0)
 . ;
"RTN","BPSOSHF",173,0)
 . ; let's order through the format file for this node
"RTN","BPSOSHF",174,0)
 . S ORDER=$O(^BPSF(9002313.92,FORMAT,NODE,"B",ORDER)) Q:'ORDER
"RTN","BPSOSHF",175,0)
 . S RECMIEN=$O(^BPSF(9002313.92,FORMAT,NODE,"B",ORDER,0))
"RTN","BPSOSHF",176,0)
 . I 'RECMIEN D IMPOSS^BPSOSUE("DB","TI","NODE="_NODE,"ORDER="_ORDER,2,$T(+0))
"RTN","BPSOSHF",177,0)
 . S MDATA=^BPSF(9002313.92,FORMAT,NODE,RECMIEN,0)
"RTN","BPSOSHF",178,0)
 . S FLDIEN=$P(MDATA,U,2)
"RTN","BPSOSHF",179,0)
 . I 'FLDIEN D IMPOSS^BPSOSUE("DB","TI","NODE="_NODE,"RECMIEN="_RECMIEN,3,$T(+0)) ; corrupt or erroneous format file
"RTN","BPSOSHF",180,0)
 . I '$D(^BPSF(9002313.91,FLDIEN,0)) D IMPOSS^BPSOSUE("DB,P","TI","FLDIEN="_FLDIEN,,"DURPPS",$T(+0))  ;incomplete field definition
"RTN","BPSOSHF",181,0)
 . ;
"RTN","BPSOSHF",182,0)
 . ;lets create a list of fields we need
"RTN","BPSOSHF",183,0)
 . S FLDNUM=$P($G(^BPSF(9002313.91,FLDIEN,0)),U)
"RTN","BPSOSHF",184,0)
 . S:FLDNUM'=111 FIELD(ORDER)=FLDIEN_"^"_FLDNUM
"RTN","BPSOSHF",185,0)
 Q
"RTN","BPSOSRX")
0^35^B39970761
"RTN","BPSOSRX",1,0)
BPSOSRX ;BHAM ISC/FCS/DRS/FLS - callable from RPMS pharm ;06/01/2004
"RTN","BPSOSRX",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,8,10,20,24**;JUN 2004;Build 43
"RTN","BPSOSRX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSOSRX",4,0)
 ;
"RTN","BPSOSRX",5,0)
 ; reference to ^%ZTLOAD supported by DBIA 10063
"RTN","BPSOSRX",6,0)
 ; reference to NOW^%DTC supported by DBIA 10000
"RTN","BPSOSRX",7,0)
 ; reference to ^%DT supported by DBIA 10003
"RTN","BPSOSRX",8,0)
 ;
"RTN","BPSOSRX",9,0)
 Q
"RTN","BPSOSRX",10,0)
 ;
"RTN","BPSOSRX",11,0)
 ; Schedule request
"RTN","BPSOSRX",12,0)
 ; Process all requests - Billing requests (CLAIM), Reversal (UNCLAIM)
"RTN","BPSOSRX",13,0)
 ;                        and Eligibility verification requests
"RTN","BPSOSRX",14,0)
 ;
"RTN","BPSOSRX",15,0)
 ; Input: see MKRQST^BPSOSRX3
"RTN","BPSOSRX",16,0)
 ; Return values:
"RTN","BPSOSRX",17,0)
 ;  1^BPS REQUEST ien = accepted for processing
"RTN","BPSOSRX",18,0)
 ;  0^reason = failure (should never happen)
"RTN","BPSOSRX",19,0)
REQST(BPREQTYP,KEY1,KEY2,MOREDATA,BPCOBIND,IEN59,BILLNDC,BPSKIP) ;
"RTN","BPSOSRX",20,0)
 N BPRETV,BPIEN77,BPIENS78
"RTN","BPSOSRX",21,0)
 S BPSKIP=+$G(BPSKIP)
"RTN","BPSOSRX",22,0)
 D LOG^BPSOSL(IEN59,$T(+0)_"- Start creating request")
"RTN","BPSOSRX",23,0)
 S BPRETV=$$MKINSUR^BPSOSRX2(KEY1,KEY2,.MOREDATA,.BPIENS78)
"RTN","BPSOSRX",24,0)
 I +BPRETV=0 Q BPRETV
"RTN","BPSOSRX",25,0)
 ;create BPS REQUEST records for primary insurer only and populate its IBDATA multiple with the iens of BPS INSURER DATA
"RTN","BPSOSRX",26,0)
 S BPRETV=$$MKRQST^BPSOSRX3(BPREQTYP,KEY1,KEY2,.MOREDATA,.BPIENS78,BPCOBIND,$G(BILLNDC),BPSKIP)
"RTN","BPSOSRX",27,0)
 Q BPRETV
"RTN","BPSOSRX",28,0)
 ;
"RTN","BPSOSRX",29,0)
 ; $$STATUS(KEY1,KEY2,QUE,BPRQIEN,BPCOB) - Returns the Status of the request
"RTN","BPSOSRX",30,0)
 ; Input
"RTN","BPSOSRX",31,0)
 ;   KEY1 - First key of the request
"RTN","BPSOSRX",32,0)
 ;   KEY2 - Second key of the request
"RTN","BPSOSRX",33,0)
 ;   QUE (optional):  0 - Do not check if a request is on the queue 
"RTN","BPSOSRX",34,0)
 ;         1/null - Check if a request is on the queue
"RTN","BPSOSRX",35,0)
 ;   BPRQIEN (optional) -  the BPS REQUESTS (#9002313.77) IEN
"RTN","BPSOSRX",36,0)
 ;   BPCOB (optional)-the payer sequence (1- Primary, 2 Secondary), if null then 1 (primary) is assumed
"RTN","BPSOSRX",37,0)
 ;
"RTN","BPSOSRX",38,0)
 ; Returns
"RTN","BPSOSRX",39,0)
 ;    RESULT^LAST UPDATE DATE/TIME^DESCRIPTION^STATUS %
"RTN","BPSOSRX",40,0)
 ;    Returns null if there's no ECME record of this request
"RTN","BPSOSRX",41,0)
 ;
"RTN","BPSOSRX",42,0)
 ;    RESULT is either:
"RTN","BPSOSRX",43,0)
 ;      1. IN PROGRESS for incomplete requests
"RTN","BPSOSRX",44,0)
 ;      2. Final status for complete requests.  See comments for
"RTN","BPSOSRX",45,0)
 ;         BPSOSUC for complete list of possible statuses.
"RTN","BPSOSRX",46,0)
 ;      3. SCHEDULED for scheduled (not ACTIVATED yet) requests
"RTN","BPSOSRX",47,0)
 ;         
"RTN","BPSOSRX",48,0)
 ;    LAST UPDATE DATE/TIME is the Fileman date and time of the
"RTN","BPSOSRX",49,0)
 ;         last update to the status of this request.
"RTN","BPSOSRX",50,0)
 ;         
"RTN","BPSOSRX",51,0)
 ;    DESCRIPTION is either:
"RTN","BPSOSRX",52,0)
 ;      1. Incomplete requests will be the status (i.e., Waiting to Start,
"RTN","BPSOSRX",53,0)
 ;         Transmitting)
"RTN","BPSOSRX",54,0)
 ;      2. Completed requests will have the reason that the ECME process
"RTN","BPSOSRX",55,0)
 ;         was aborted if the result is  E OTHER.  Otherwise, it will
"RTN","BPSOSRX",56,0)
 ;         be similar to the RESULT
"RTN","BPSOSRX",57,0)
 ;         
"RTN","BPSOSRX",58,0)
 ;    STATUS % is the completion percentage.  Note that 99 is considered
"RTN","BPSOSRX",59,0)
 ;         complete.
"RTN","BPSOSRX",60,0)
 ;         
"RTN","BPSOSRX",61,0)
 ;    
"RTN","BPSOSRX",62,0)
STATUS(KEY1,KEY2,QUE,BPRQIEN,BPCOB) ;
"RTN","BPSOSRX",63,0)
 ; Setup needed variables
"RTN","BPSOSRX",64,0)
 N IEN59,SDT,SUBDT,BP59REQ,BPTRTYP,BP59ZERO,BP59REQ
"RTN","BPSOSRX",65,0)
 I '$G(KEY1) Q ""
"RTN","BPSOSRX",66,0)
 I $G(KEY2)="" Q ""
"RTN","BPSOSRX",67,0)
 I $G(QUE)="" S QUE=1
"RTN","BPSOSRX",68,0)
 ;
"RTN","BPSOSRX",69,0)
 ;if BPRQIEN then it is called from BPSNCPD1 to display progress to the user. So we need to check queue anyway
"RTN","BPSOSRX",70,0)
 I $G(BPRQIEN)>0 S QUE=1
"RTN","BPSOSRX",71,0)
 ;
"RTN","BPSOSRX",72,0)
 ;default COB = primary
"RTN","BPSOSRX",73,0)
 I +$G(BPCOB)=0 S BPCOB=1
"RTN","BPSOSRX",74,0)
 ;
"RTN","BPSOSRX",75,0)
 ;get IEN of BPS TRANSACTION
"RTN","BPSOSRX",76,0)
 S IEN59=$$IEN59(KEY1,KEY2,BPCOB)
"RTN","BPSOSRX",77,0)
 ;
"RTN","BPSOSRX",78,0)
 ;read zeroth node of the BPS TRANSACTION record
"RTN","BPSOSRX",79,0)
 S BP59ZERO=$G(^BPST(IEN59,0))
"RTN","BPSOSRX",80,0)
 ;
"RTN","BPSOSRX",81,0)
 ; check for TRI/CVA non-billable entry. Status is "" for these BPS Transaction entries.  BPS*1*20.
"RTN","BPSOSRX",82,0)
 I $$NB^BPSSCR03(IEN59) Q ""
"RTN","BPSOSRX",83,0)
 ;
"RTN","BPSOSRX",84,0)
 ;if doesn't have BPS TRANSACTION record AND doesn't have any BPS REQUEST records then
"RTN","BPSOSRX",85,0)
 ;this is an old request OR it is not e-billable - so use the old logic,
"RTN","BPSOSRX",86,0)
 ;which was used before COB patch, so this is for primary claims only.
"RTN","BPSOSRX",87,0)
 I BPCOB=1 I $G(BPRQIEN)="" I BP59ZERO="" I '$D(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB)) Q $$OLDSTAT^BPSOSRX6(KEY1,KEY2,$G(QUE))
"RTN","BPSOSRX",88,0)
 ;
"RTN","BPSOSRX",89,0)
 ;if doesn't have BPS TRANSACTION record (not created yet) AND has BPS REQUEST record(s)
"RTN","BPSOSRX",90,0)
 I BP59ZERO="" Q $$QUESTAT(KEY1,KEY2,BPCOB)
"RTN","BPSOSRX",91,0)
 ;
"RTN","BPSOSRX",92,0)
 ;get transaction type
"RTN","BPSOSRX",93,0)
 S BPTRTYP=$P(BP59ZERO,U,15)
"RTN","BPSOSRX",94,0)
 ;if Transaction type is not defined then this is an OLD request so use the old logic
"RTN","BPSOSRX",95,0)
 ;which was used before COB patch, so this is for primary claims only.
"RTN","BPSOSRX",96,0)
 I BPCOB=1 I $G(BPRQIEN)="" I BPTRTYP="" Q $$OLDSTAT^BPSOSRX6(KEY1,KEY2,$G(QUE))
"RTN","BPSOSRX",97,0)
 ;
"RTN","BPSOSRX",98,0)
 ;get the current BPS REQUEST
"RTN","BPSOSRX",99,0)
 S BP59REQ=$$GETRQST^BPSUTIL2(IEN59)
"RTN","BPSOSRX",100,0)
 I $G(BP59REQ)="" Q $$QUESTAT(KEY1,KEY2,BPCOB)
"RTN","BPSOSRX",101,0)
 ;
"RTN","BPSOSRX",102,0)
 ;get request date/time
"RTN","BPSOSRX",103,0)
 S SDT=$P($G(^BPS(9002313.77,+$G(BP59REQ),6)),U,1) ;REQUEST DATE AND TIME
"RTN","BPSOSRX",104,0)
 ;
"RTN","BPSOSRX",105,0)
 ; Loop: Get data, quit if times and status match (no change during gather)
"RTN","BPSOSRX",106,0)
 N A,C,T1,T2,S1,S2
"RTN","BPSOSRX",107,0)
 F  D  I T1=T2,S1=S2 Q
"RTN","BPSOSRX",108,0)
 . S T1=$$LASTUP59^BPSOSRX(IEN59)
"RTN","BPSOSRX",109,0)
 . S S1=$$STATUS59^BPSOSRX(IEN59)
"RTN","BPSOSRX",110,0)
 . I S1=99 D  ; completed
"RTN","BPSOSRX",111,0)
 . . S A=$$CATEG^BPSOSUC(IEN59)
"RTN","BPSOSRX",112,0)
 . . S C=$$RESTXT59^BPSOSRX(IEN59)
"RTN","BPSOSRX",113,0)
 . I S1'=99 D
"RTN","BPSOSRX",114,0)
 . . S A="IN PROGRESS"
"RTN","BPSOSRX",115,0)
 . . S C=$$STATI^BPSOSU($S(S1="":10,1:S1))
"RTN","BPSOSRX",116,0)
 . S T2=$$LASTUP59^BPSOSRX(IEN59)
"RTN","BPSOSRX",117,0)
 . S S2=$$STATUS59^BPSOSRX(IEN59)
"RTN","BPSOSRX",118,0)
 ;
"RTN","BPSOSRX",119,0)
 ; If the queue parameter is set and the submit date from the queue
"RTN","BPSOSRX",120,0)
 ;   follows the SUBMIT DATE/LAST UPDATE date from BPS TRANSACTION 
"RTN","BPSOSRX",121,0)
 ;   or the request is still on the queue, then change the response
"RTN","BPSOSRX",122,0)
 ;   to IN PROGRESS^Submit Date^WAITING TO START
"RTN","BPSOSRX",123,0)
 S SUBDT=$$SUBMIT59^BPSOSRX(IEN59)
"RTN","BPSOSRX",124,0)
 I SUBDT="" S SUBDT=T1
"RTN","BPSOSRX",125,0)
 ;
"RTN","BPSOSRX",126,0)
 ;if we need to check the queue
"RTN","BPSOSRX",127,0)
 I $G(QUE),$$QUETIME(KEY1,KEY2,BPCOB,1)>SUBDT S A="IN PROGRESS",T1=SDT,S1=-1,C=$$STATI^BPSOSU(0)
"RTN","BPSOSRX",128,0)
 I $G(QUE),$$QUETIME(KEY1,KEY2,BPCOB,0)>SUBDT S A="IN PROGRESS",T1=SDT,S1=-1,C=$$STATI^BPSOSU(0)
"RTN","BPSOSRX",129,0)
 I $G(QUE),$$QUETIME(KEY1,KEY2,BPCOB,2)>SUBDT S A="IN PROGRESS",T1=SDT,S1=-1,C=$$STATI^BPSOSU(0) ;To check IN PROCESS
"RTN","BPSOSRX",130,0)
 ;
"RTN","BPSOSRX",131,0)
 ; Return results
"RTN","BPSOSRX",132,0)
 Q A_U_T1_U_$E(C,1,255-$L(A)-$L(T1)-2)_U_S1
"RTN","BPSOSRX",133,0)
 ;
"RTN","BPSOSRX",134,0)
 ;the most current queue status as text
"RTN","BPSOSRX",135,0)
QUESTAT(KEY1,KEY2,BPCOB) ;
"RTN","BPSOSRX",136,0)
 I $D(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB,2)) Q "IN PROGRESS"_U_$$QUETIME(KEY1,KEY2,BPCOB,2)_U_$$STATI^BPSOSU(-96)_U_-1
"RTN","BPSOSRX",137,0)
 I $D(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB,1)) Q "IN PROGRESS"_U_$$QUETIME(KEY1,KEY2,BPCOB,1)_U_$$STATI^BPSOSU(0)_U_-1
"RTN","BPSOSRX",138,0)
 I $D(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB,0)) Q "IN PROGRESS"_U_$$QUETIME(KEY1,KEY2,BPCOB,0)_U_$$STATI^BPSOSU(-99)_U_-1
"RTN","BPSOSRX",139,0)
 ;if PROCESS FLAG=3,4,5 return null
"RTN","BPSOSRX",140,0)
 Q ""
"RTN","BPSOSRX",141,0)
 ;
"RTN","BPSOSRX",142,0)
 ;the most current queue status as process flag
"RTN","BPSOSRX",143,0)
QUECUR(KEY1,KEY2,BPCOB) ;
"RTN","BPSOSRX",144,0)
 I $D(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB,3)) Q 3
"RTN","BPSOSRX",145,0)
 I $D(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB,2)) Q 2
"RTN","BPSOSRX",146,0)
 I $D(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB,1)) Q 1
"RTN","BPSOSRX",147,0)
 I $D(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB,0)) Q 0
"RTN","BPSOSRX",148,0)
 ;if PROCESS FLAG=3,4,5 return null
"RTN","BPSOSRX",149,0)
 Q ""
"RTN","BPSOSRX",150,0)
 ;
"RTN","BPSOSRX",151,0)
 ;the most current queue status as process flag
"RTN","BPSOSRX",152,0)
QUETIME(KEY1,KEY2,BPCOB,BPROCFL) ;
"RTN","BPSOSRX",153,0)
 N BP77
"RTN","BPSOSRX",154,0)
 S BP77=$O(^BPS(9002313.77,"D",KEY1,KEY2,BPCOB,BPROCFL,0))
"RTN","BPSOSRX",155,0)
 I BP77>0 Q $P($G(^BPS(9002313.77,+BP77,6)),U,1) ;REQUEST DATE AND TIME
"RTN","BPSOSRX",156,0)
 Q ""
"RTN","BPSOSRX",157,0)
 ;
"RTN","BPSOSRX",158,0)
NOW() N %,%H,%I,X D NOW^%DTC Q %
"RTN","BPSOSRX",159,0)
 ;
"RTN","BPSOSRX",160,0)
 ; RESTXT59 - Return first semi-colon piece of the Result Text (202) field
"RTN","BPSOSRX",161,0)
 ;    from BPS Transaction
"RTN","BPSOSRX",162,0)
RESTXT59(IEN59) ;
"RTN","BPSOSRX",163,0)
 I '$G(IEN59) Q ""
"RTN","BPSOSRX",164,0)
 Q $P($P($G(^BPST(IEN59,2)),U,2,99),";",1)
"RTN","BPSOSRX",165,0)
 ;
"RTN","BPSOSRX",166,0)
 ; LASTUP59 - Return last update date/time from BPS Transactions
"RTN","BPSOSRX",167,0)
LASTUP59(IEN59) ;
"RTN","BPSOSRX",168,0)
 I '$G(IEN59) Q ""
"RTN","BPSOSRX",169,0)
 Q $P($G(^BPST(IEN59,0)),U,8)
"RTN","BPSOSRX",170,0)
 ;
"RTN","BPSOSRX",171,0)
 ; STATUS59 returns STATUS field from BPS Transaction
"RTN","BPSOSRX",172,0)
 ; Note: 99 means complete
"RTN","BPSOSRX",173,0)
STATUS59(IEN59) ;
"RTN","BPSOSRX",174,0)
 I '$G(IEN59) Q ""
"RTN","BPSOSRX",175,0)
 Q $P($G(^BPST(IEN59,0)),U,2)
"RTN","BPSOSRX",176,0)
 ;
"RTN","BPSOSRX",177,0)
 ; SUBMIT59 - Return Submit date/time from BPS Transactions (#6) SUBMIT DATE/TIME
"RTN","BPSOSRX",178,0)
SUBMIT59(IEN59) ;
"RTN","BPSOSRX",179,0)
 I '$G(IEN59) Q ""
"RTN","BPSOSRX",180,0)
 Q $P($G(^BPST(IEN59,0)),U,7)
"RTN","BPSOSRX",181,0)
 ;
"RTN","BPSOSRX",182,0)
 ; Utilities
"RTN","BPSOSRX",183,0)
 ;
"RTN","BPSOSRX",184,0)
 ;  LOCKING:  Just one user of this routine at a time.
"RTN","BPSOSRX",185,0)
 ;  X = "SUBMIT" to interlock the request submission
"RTN","BPSOSRX",186,0)
 ;  X = "BACKGROUND" to interlock the background job
"RTN","BPSOSRX",187,0)
LOCK(X,TIMEOUT) ;EP - BPSOSRB
"RTN","BPSOSRX",188,0)
 I $G(TIMEOUT)="" S TIMEOUT=0
"RTN","BPSOSRX",189,0)
 L +^XTMP("BPS-PROC",X):TIMEOUT
"RTN","BPSOSRX",190,0)
 Q $T
"RTN","BPSOSRX",191,0)
 ;
"RTN","BPSOSRX",192,0)
LOCKNOW(X) ;EP - BPSOSRB
"RTN","BPSOSRX",193,0)
 L +^XTMP("BPS-PROC",X):0
"RTN","BPSOSRX",194,0)
 Q $T
"RTN","BPSOSRX",195,0)
 ;
"RTN","BPSOSRX",196,0)
UNLOCK(X) ;EP - BPSOSRB
"RTN","BPSOSRX",197,0)
 L -^XTMP("BPS-PROC",X)
"RTN","BPSOSRX",198,0)
 Q
"RTN","BPSOSRX",199,0)
 ;
"RTN","BPSOSRX",200,0)
RUNNING() ;
"RTN","BPSOSRX",201,0)
 I '$$LOCKNOW("BACKGROUND") Q  ; it is running; don't start another
"RTN","BPSOSRX",202,0)
 D UNLOCK("BACKGROUND") ; it's not running; release our probing lock
"RTN","BPSOSRX",203,0)
 D TASK
"RTN","BPSOSRX",204,0)
 Q
"RTN","BPSOSRX",205,0)
 ;
"RTN","BPSOSRX",206,0)
 ;KEY1 - Either Prescription IEN (#52) or PATIENT IEN (#2)
"RTN","BPSOSRX",207,0)
 ;KEY2 - Either Fill # or Policy Number
"RTN","BPSOSRX",208,0)
 ;       For Policy Number, the value passed in should be 9000 plus
"RTN","BPSOSRX",209,0)
 ;       the policy number
"RTN","BPSOSRX",210,0)
 ;BPCOBIND - COB indicator
"RTN","BPSOSRX",211,0)
IEN59(KEY1,KEY2,BPCOBIND) ;EP - from BPSOS, BPSOSRB
"RTN","BPSOSRX",212,0)
 I '$G(KEY1) Q ""
"RTN","BPSOSRX",213,0)
 I '$G(KEY2) S KEY2=0 ;If no KEY2, assume RX/Fill and default to Original Fill
"RTN","BPSOSRX",214,0)
 I +$G(BPCOBIND)=0 S BPCOBIND=1 ;default is primary
"RTN","BPSOSRX",215,0)
 I BPCOBIND>3!(BPCOBIND<1) Q ""
"RTN","BPSOSRX",216,0)
 Q KEY1_"."_$TR($J(KEY2,4)," ","0")_+BPCOBIND
"RTN","BPSOSRX",217,0)
 ;
"RTN","BPSOSRX",218,0)
 ;
"RTN","BPSOSRX",219,0)
 ; The background job
"RTN","BPSOSRX",220,0)
TASK N X,Y,%DT
"RTN","BPSOSRX",221,0)
 S X="N",%DT="ST"
"RTN","BPSOSRX",222,0)
 D ^%DT,TASKAT(Y)
"RTN","BPSOSRX",223,0)
 Q
"RTN","BPSOSRX",224,0)
 ;
"RTN","BPSOSRX",225,0)
TASKAT(ZTDTH) ;
"RTN","BPSOSRX",226,0)
 N ZTIO S ZTIO="" ; no device
"RTN","BPSOSRX",227,0)
 N ZTRTN S ZTRTN="BACKGR^BPSOSRB"
"RTN","BPSOSRX",228,0)
 D ^%ZTLOAD
"RTN","BPSOSRX",229,0)
 Q
"RTN","BPSOSRX",230,0)
 ;
"RTN","BPSOSRX",231,0)
 ;Lock key pair  - So two (or more) requests cannot be processed simultaneously
"RTN","BPSOSRX",232,0)
LOCKRF(KEY1,KEY2,BPTIMOUT,IEN59,BPSRC) ;EP - BPSOSRB
"RTN","BPSOSRX",233,0)
 N BPRET
"RTN","BPSOSRX",234,0)
 L +^XTMP("BPSOSRX-RX/REF",KEY1,KEY2):+$G(BPTIMOUT)
"RTN","BPSOSRX",235,0)
 S BPRET=$T
"RTN","BPSOSRX",236,0)
 Q BPRET
"RTN","BPSOSRX",237,0)
 ;
"RTN","BPSOSRX",238,0)
 ;UnLock key pair
"RTN","BPSOSRX",239,0)
UNLCKRF(KEY1,KEY2,IEN59,BPSRC) ;EP - BPSOSRB
"RTN","BPSOSRX",240,0)
 L -^XTMP("BPSOSRX-RX/REF",KEY1,KEY2)
"RTN","BPSOSRX",241,0)
 ;I $G(IEN59)>0 D LOG^BPSOSL(IEN59,$G(BPSRC)_"-Unlock keys: "_KEY1_"/"_KEY2)
"RTN","BPSOSRX",242,0)
 Q
"RTN","BPSOSRX",243,0)
 ;BPSOSRX
"RTN","BPSOSRX3")
0^25^B125814788
"RTN","BPSOSRX3",1,0)
BPSOSRX3 ;ALB/SS - ECME REQUESTS ;02-JAN-08
"RTN","BPSOSRX3",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**7,8,10,11,23,24**;JUN 2004;Build 43
"RTN","BPSOSRX3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSOSRX3",4,0)
 ;
"RTN","BPSOSRX3",5,0)
 ;Input
"RTN","BPSOSRX3",6,0)
 ;BPREQTYP - request type:
"RTN","BPSOSRX3",7,0)
 ; "C" - Submit a claim to ECME
"RTN","BPSOSRX3",8,0)
 ;  If the claim has already been processed, and it's  resubmitted, then a reversal will be
"RTN","BPSOSRX3",9,0)
 ;   done first, and then the resubmit. Intervening call to $$STATUS may show progress 
"RTN","BPSOSRX3",10,0)
 ;  of the reversal before the resubmitted claim is processed.
"RTN","BPSOSRX3",11,0)
 ; "U"- Reverse submitted claim.
"RTN","BPSOSRX3",12,0)
 ;  The reversal will actually be done ONLY if the  most recent processing of the claim
"RTN","BPSOSRX3",13,0)
 ;   resulted in something reversible, namely E PAYABLE or E REVERSAL REJECTED
"RTN","BPSOSRX3",14,0)
 ; "E" - Eligibility Verification Request
"RTN","BPSOSRX3",15,0)
 ;KEY1 - First Key for the BPS Request file
"RTN","BPSOSRX3",16,0)
 ;KEY2 - Second Key for the BPS Request file
"RTN","BPSOSRX3",17,0)
 ;MOREDATA - Array of data for transaction/claim
"RTN","BPSOSRX3",18,0)
 ;BPCOBIND - payer sequence
"RTN","BPSOSRX3",19,0)
 ;BILLNDC - NDC passed into EN^BPSNCPDP sent in BILLNDC variable or determined by EN^BPSNCPDP if it was null 
"RTN","BPSOSRX3",20,0)
 ;at the very first time when EN^BPSNCPDP was called in "F" (foreground) mode
"RTN","BPSOSRX3",21,0)
 ;BPSKIP(optional)=1 : skip the field, used when CLAIM request is created while the previous 
"RTN","BPSOSRX3",22,0)
 ;request is in progress. That means - billing determination will be done upon activation)
"RTN","BPSOSRX3",23,0)
 ;Return values:
"RTN","BPSOSRX3",24,0)
 ; 1^BPS REQUEST ien = accepted for processing
"RTN","BPSOSRX3",25,0)
 ; 0^reason = failure (should never happen)
"RTN","BPSOSRX3",26,0)
MKRQST(BPREQTYP,KEY1,KEY2,MOREDATA,BPIENS78,BPCOBIND,BILLNDC,BPSKIP) ;
"RTN","BPSOSRX3",27,0)
 N BPIEN77,BPCOB,BPQ,BPIEN772,BPERRMSG,BPIEN59,BPIEN78,BPZ
"RTN","BPSOSRX3",28,0)
 N RETVAL,STAT,TYPE,RESULT,SUBMITDT,BPNOW,BPACTTYP,BP77LCK
"RTN","BPSOSRX3",29,0)
 N DUR,BPIEN771,BPCNT,BPSDUPL
"RTN","BPSOSRX3",30,0)
 S BPSKIP=+$G(BPSKIP)
"RTN","BPSOSRX3",31,0)
 I $G(BPREQTYP)="" Q "0^Parameter error-Request Type"
"RTN","BPSOSRX3",32,0)
 I '$G(KEY1) Q "0^Parameter error-Key1"
"RTN","BPSOSRX3",33,0)
 I BPREQTYP="E",$G(KEY2)'>9000 Q "0^Parameter error-Key2 for eligibility"
"RTN","BPSOSRX3",34,0)
 I '$G(BPCOBIND)="" Q "0^Parameter error-COB Indicator"
"RTN","BPSOSRX3",35,0)
 I '$G(KEY2) S KEY2=0
"RTN","BPSOSRX3",36,0)
 S BPIEN59=+$$IEN59^BPSOSRX(KEY1,KEY2,BPCOBIND)
"RTN","BPSOSRX3",37,0)
 ;
"RTN","BPSOSRX3",38,0)
 ;new record
"RTN","BPSOSRX3",39,0)
 S BPERRMSG="Cannot create record in BPS REQUEST"
"RTN","BPSOSRX3",40,0)
 S BPIEN77=$$INSITEM^BPSUTIL2(9002313.77,"",KEY1,"","","^BPS(9002313.77)",10)
"RTN","BPSOSRX3",41,0)
 I BPIEN77<1 Q "0^"_BPERRMSG
"RTN","BPSOSRX3",42,0)
 S BPNOW=$$NOW^BPSOSRX()
"RTN","BPSOSRX3",43,0)
 S BPACTTYP=$G(MOREDATA("RX ACTION"))
"RTN","BPSOSRX3",44,0)
 ; fill out the fields
"RTN","BPSOSRX3",45,0)
 S BPERRMSG="Missing data for the "
"RTN","BPSOSRX3",46,0)
 I $$FILLFLDS^BPSUTIL2(9002313.77,".02",BPIEN77,KEY2)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,.02)
"RTN","BPSOSRX3",47,0)
 I $$FILLFLDS^BPSUTIL2(9002313.77,".03",BPIEN77,BPCOBIND)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,.03)
"RTN","BPSOSRX3",48,0)
 ;set delay with the testing tool
"RTN","BPSOSRX3",49,0)
 S BPZ=+$$SETDELAY^BPSTEST(BPIEN59) I BPZ>0 I $$FILLFLDS^BPSUTIL2(9002313.77,".08",BPIEN77,BPZ)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,.08)
"RTN","BPSOSRX3",50,0)
 ;set the process flag to "WAITING"
"RTN","BPSOSRX3",51,0)
 I $$FILLFLDS^BPSUTIL2(9002313.77,".04",BPIEN77,0)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,.04)
"RTN","BPSOSRX3",52,0)
 I $$FILLFLDS^BPSUTIL2(9002313.77,"6.01",BPIEN77,BPNOW)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,6.01)
"RTN","BPSOSRX3",53,0)
 I $$FILLFLDS^BPSUTIL2(9002313.77,"6.05",BPIEN77,BPNOW)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,6.05)
"RTN","BPSOSRX3",54,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"6.02") I $$FILLFLDS^BPSUTIL2(9002313.77,"6.02",BPIEN77,+$G(MOREDATA("USER")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,6.02)
"RTN","BPSOSRX3",55,0)
 I $$FILLFLDS^BPSUTIL2(9002313.77,"6.06",BPIEN77,+DUZ)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,6.06)
"RTN","BPSOSRX3",56,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"1.01") I $$FILLFLDS^BPSUTIL2(9002313.77,"1.01",BPIEN77,$G(MOREDATA("RX ACTION")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.01)
"RTN","BPSOSRX3",57,0)
 I $G(MOREDATA("DIVISION")),$$FILLFLDS^BPSUTIL2(9002313.77,"1.02",BPIEN77,MOREDATA("DIVISION"))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.02)
"RTN","BPSOSRX3",58,0)
 I $$FILLFLDS^BPSUTIL2(9002313.77,"1.04",BPIEN77,BPREQTYP)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.04)
"RTN","BPSOSRX3",59,0)
 ;if this is a queued "C" request then the billing will be done again upon activation so MOREDATA(BILL) is undefined
"RTN","BPSOSRX3",60,0)
 ;that is why we are not checking this field
"RTN","BPSOSRX3",61,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"1.05") I $$FILLFLDS^BPSUTIL2(9002313.77,"1.05",BPIEN77,$P($G(MOREDATA("BILL")),U))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.05)
"RTN","BPSOSRX3",62,0)
 I '$D(MOREDATA("ELIG")) I $$ACTFIELD(BPSKIP,BPREQTYP,"1.06") I $$FILLFLDS^BPSUTIL2(9002313.77,"1.06",BPIEN77,$P($G(MOREDATA("BILL")),U,3))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.06)
"RTN","BPSOSRX3",63,0)
 I $D(MOREDATA("ELIG")) I $$ACTFIELD(BPSKIP,BPREQTYP,"1.06") I $$FILLFLDS^BPSUTIL2(9002313.77,"1.06",BPIEN77,$G(MOREDATA("ELIG")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.06)
"RTN","BPSOSRX3",64,0)
 I $P($G(MOREDATA("BILL")),U,2)'="" I $$ACTFIELD(BPSKIP,BPREQTYP,"1.07") I $$FILLFLDS^BPSUTIL2(9002313.77,"1.07",BPIEN77,$P($G(MOREDATA("BILL")),U,2))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.07)
"RTN","BPSOSRX3",65,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"1.13") I $$FILLFLDS^BPSUTIL2(9002313.77,"1.13",BPIEN77,$G(MOREDATA("RX")))<1,BPREQTYP'="E" Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.13)
"RTN","BPSOSRX3",66,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"1.14") I $$FILLFLDS^BPSUTIL2(9002313.77,"1.14",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,4))<1,BPREQTYP'="E" Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.14)
"RTN","BPSOSRX3",67,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"1.15") I $$FILLFLDS^BPSUTIL2(9002313.77,"1.15",BPIEN77,$G(MOREDATA("PATIENT")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.15)
"RTN","BPSOSRX3",68,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"1.16"),$$FILLFLDS^BPSUTIL2(9002313.77,"1.16",BPIEN77,$P($G(MOREDATA("IBDATA",1,3)),U,7))<1,BPREQTYP="E" Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.16)
"RTN","BPSOSRX3",69,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"2.01") I $$FILLFLDS^BPSUTIL2(9002313.77,"2.01",BPIEN77,+$G(MOREDATA("DATE OF SERVICE")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.01)
"RTN","BPSOSRX3",70,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"2.02") I $$FILLFLDS^BPSUTIL2(9002313.77,"2.02",BPIEN77,$G(MOREDATA("REVERSAL REASON")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.02)
"RTN","BPSOSRX3",71,0)
 I $L($G(MOREDATA("BPOVRIEN")))>0 I $$FILLFLDS^BPSUTIL2(9002313.77,"2.04",BPIEN77,$G(MOREDATA("BPOVRIEN")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.04)
"RTN","BPSOSRX3",72,0)
 I $L($G(MOREDATA("BPSCLARF")))>0 I $$FILLFLDS^BPSUTIL2(9002313.77,"2.05",BPIEN77,$G(MOREDATA("BPSCLARF")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.05)
"RTN","BPSOSRX3",73,0)
 I $L($G(BILLNDC))>0 I $$FILLFLDS^BPSUTIL2(9002313.77,"2.06",BPIEN77,BILLNDC)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.06)
"RTN","BPSOSRX3",74,0)
 I $L($P($G(MOREDATA("BPSAUTH")),U))>0 I $$FILLFLDS^BPSUTIL2(9002313.77,"2.07",BPIEN77,$E($P(MOREDATA("BPSAUTH"),U,1),1,2))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.07)
"RTN","BPSOSRX3",75,0)
 I $L($P($G(MOREDATA("BPSAUTH")),U,2))>0 I $$FILLFLDS^BPSUTIL2(9002313.77,"2.08",BPIEN77,$E($P(MOREDATA("BPSAUTH"),U,2),1,11))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.08)
"RTN","BPSOSRX3",76,0)
 I $L($G(MOREDATA("BPSDELAY")))>0,$$FILLFLDS^BPSUTIL2(9002313.77,"2.1",BPIEN77,MOREDATA("BPSDELAY"))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.1)
"RTN","BPSOSRX3",77,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"4.01") I $$FILLFLDS^BPSUTIL2(9002313.77,"4.01",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,1))
"RTN","BPSOSRX3",78,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"4.02") I $$FILLFLDS^BPSUTIL2(9002313.77,"4.02",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,2))
"RTN","BPSOSRX3",79,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"4.03") I $$FILLFLDS^BPSUTIL2(9002313.77,"4.03",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,3))
"RTN","BPSOSRX3",80,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"4.04"),$$FILLFLDS^BPSUTIL2(9002313.77,"4.04",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,4))
"RTN","BPSOSRX3",81,0)
 I $P($G(MOREDATA("BPSDATA",1)),U,5)'="" I $$ACTFIELD(BPSKIP,BPREQTYP,"4.05") I $$FILLFLDS^BPSUTIL2(9002313.77,"4.05",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,5))
"RTN","BPSOSRX3",82,0)
 I $P($G(MOREDATA("BPSDATA",1)),U,6)'="" I $$ACTFIELD(BPSKIP,BPREQTYP,"4.06") I $$FILLFLDS^BPSUTIL2(9002313.77,"4.06",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,6))
"RTN","BPSOSRX3",83,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"4.07") I $$FILLFLDS^BPSUTIL2(9002313.77,"4.07",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,7))
"RTN","BPSOSRX3",84,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"4.08") I $$FILLFLDS^BPSUTIL2(9002313.77,"4.08",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,8))
"RTN","BPSOSRX3",85,0)
 I $$ACTFIELD(BPSKIP,BPREQTYP,"4.09") I $$FILLFLDS^BPSUTIL2(9002313.77,"4.09",BPIEN77,$P($G(MOREDATA("BPSDATA",1)),U,9))
"RTN","BPSOSRX3",86,0)
 I $G(MOREDATA("CLOSE AFT REV"))=1 I $$FILLFLDS^BPSUTIL2(9002313.77,"7.01",BPIEN77,1)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,7.01)
"RTN","BPSOSRX3",87,0)
 I $G(MOREDATA("CLOSE AFT REV REASON"))>0 I $$FILLFLDS^BPSUTIL2(9002313.77,"7.02",BPIEN77,+$G(MOREDATA("CLOSE AFT REV REASON")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,7.02)
"RTN","BPSOSRX3",88,0)
 I $L($G(MOREDATA("CLOSE AFT REV COMMENT")))>0 I $$FILLFLDS^BPSUTIL2(9002313.77,"7.03",BPIEN77,$G(MOREDATA("CLOSE AFT REV COMMENT")))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,7.03)
"RTN","BPSOSRX3",89,0)
 I $G(BPSARRY("SC/EI OVR"))=1 I $$FILLFLDS^BPSUTIL2(9002313.77,"2.09",BPIEN77,1)<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,2.09)
"RTN","BPSOSRX3",90,0)
 ;
"RTN","BPSOSRX3",91,0)
 ; secondary billing and primary Tricare billing related fields
"RTN","BPSOSRX3",92,0)
 I $G(MOREDATA("RTYPE"))'="" I $$FILLFLDS^BPSUTIL2(9002313.77,"1.08",BPIEN77,MOREDATA("RTYPE"))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.08)
"RTN","BPSOSRX3",93,0)
 I $G(MOREDATA("PRIMARY BILL"))'="" I $$FILLFLDS^BPSUTIL2(9002313.77,"1.09",BPIEN77,MOREDATA("PRIMARY BILL"))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.09)
"RTN","BPSOSRX3",94,0)
 I $G(MOREDATA("PRIOR PAYMENT"))'="" I $$FILLFLDS^BPSUTIL2(9002313.77,"1.1",BPIEN77,MOREDATA("PRIOR PAYMENT"))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.1)
"RTN","BPSOSRX3",95,0)
 I $G(MOREDATA("337-4C"))'="" I $$FILLFLDS^BPSUTIL2(9002313.77,1.11,BPIEN77,MOREDATA("337-4C"))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.11)   ; cob other payments count
"RTN","BPSOSRX3",96,0)
 I $G(MOREDATA("308-C8"))'="" I $$FILLFLDS^BPSUTIL2(9002313.77,1.12,BPIEN77,MOREDATA("308-C8"))<1 Q "0^"_$$ERRFIELD(BPIEN77,1,BPERRMSG,9002313.77,1.12)   ; other coverage code
"RTN","BPSOSRX3",97,0)
 ;
"RTN","BPSOSRX3",98,0)
 ; store secondary billing related data entered by the user - esg 6/8/10
"RTN","BPSOSRX3",99,0)
 S BPQ=0,BPERRMSG=""
"RTN","BPSOSRX3",100,0)
 I BPCOBIND=2 D
"RTN","BPSOSRX3",101,0)
 . N AMTIEN,BPIEN1,BPIEN2,BPIEN778,BPZ,BPZ1,BPZ2,OPAMT,OPAPQ,OPAYD,OPPRA,OPREJ,PIEN,REJIEN
"RTN","BPSOSRX3",102,0)
 . S PIEN=0 F  S PIEN=$O(MOREDATA("OTHER PAYER",PIEN)) Q:'PIEN!BPQ  D
"RTN","BPSOSRX3",103,0)
 .. S OPAYD=$G(MOREDATA("OTHER PAYER",PIEN,0)) Q:OPAYD=""
"RTN","BPSOSRX3",104,0)
 .. ;
"RTN","BPSOSRX3",105,0)
 .. ; count up the number of multiples we have in each set
"RTN","BPSOSRX3",106,0)
 .. S BPZ=0 F BPZ1=0:1 S BPZ=$O(MOREDATA("OTHER PAYER",PIEN,"P",BPZ)) Q:'BPZ
"RTN","BPSOSRX3",107,0)
 .. S BPZ=0 F BPZ2=0:1 S BPZ=$O(MOREDATA("OTHER PAYER",PIEN,"R",BPZ)) Q:'BPZ
"RTN","BPSOSRX3",108,0)
 .. I BPZ1,BPZ2 S BPQ=1,BPERRMSG="Can't have both payments and rejects for the same OTHER PAYER" Q
"RTN","BPSOSRX3",109,0)
 .. ;
"RTN","BPSOSRX3",110,0)
 .. ; add a new entry to subfile 9002313.778
"RTN","BPSOSRX3",111,0)
 .. S BPIEN778=$$INSITEM^BPSUTIL2(9002313.778,BPIEN77,PIEN,PIEN,"",,0)
"RTN","BPSOSRX3",112,0)
 .. I BPIEN778<1 S BPERRMSG="Can't create entry in COB OTHER PAYERS multiple of the BPS REQUESTS file",BPQ=1 Q
"RTN","BPSOSRX3",113,0)
 .. S BPERRMSG="Can't populate field in COB OTHER PAYERS multiple"   ; just in case BPQ is set below
"RTN","BPSOSRX3",114,0)
 .. ;
"RTN","BPSOSRX3",115,0)
 .. ; set the rest of the pieces at this level
"RTN","BPSOSRX3",116,0)
 .. I $P(OPAYD,U,2)'="" I $$FILLFLDS^BPSUTIL2(9002313.778,.02,PIEN_","_BPIEN77,$P(OPAYD,U,2))<1 S BPQ=1 Q
"RTN","BPSOSRX3",117,0)
 .. I $P(OPAYD,U,3)'="" I $$FILLFLDS^BPSUTIL2(9002313.778,.03,PIEN_","_BPIEN77,$P(OPAYD,U,3))<1 S BPQ=1 Q
"RTN","BPSOSRX3",118,0)
 .. I $P(OPAYD,U,4)'="" I $$FILLFLDS^BPSUTIL2(9002313.778,.04,PIEN_","_BPIEN77,$P(OPAYD,U,4))<1 S BPQ=1 Q
"RTN","BPSOSRX3",119,0)
 .. I $P(OPAYD,U,5)'="" I $$FILLFLDS^BPSUTIL2(9002313.778,.05,PIEN_","_BPIEN77,$P(OPAYD,U,5))<1 S BPQ=1 Q
"RTN","BPSOSRX3",120,0)
 .. I $$FILLFLDS^BPSUTIL2(9002313.778,.06,PIEN_","_BPIEN77,BPZ1)<1 S BPQ=1 Q
"RTN","BPSOSRX3",121,0)
 .. I $$FILLFLDS^BPSUTIL2(9002313.778,.07,PIEN_","_BPIEN77,BPZ2)<1 S BPQ=1 Q
"RTN","BPSOSRX3",122,0)
 .. I $P(OPAYD,U,11)'="" I $$FILLFLDS^BPSUTIL2(9002313.778,.11,PIEN_","_BPIEN77,$P(OPAYD,U,11))<1 S BPQ=1 Q
"RTN","BPSOSRX3",123,0)
 .. S BPERRMSG=""
"RTN","BPSOSRX3",124,0)
 .. ;
"RTN","BPSOSRX3",125,0)
 .. ; now loop thru the other payer payment array
"RTN","BPSOSRX3",126,0)
 .. S AMTIEN=0 F  S AMTIEN=$O(MOREDATA("OTHER PAYER",PIEN,"P",AMTIEN)) Q:'AMTIEN!BPQ  D
"RTN","BPSOSRX3",127,0)
 ... S OPAMT=$G(MOREDATA("OTHER PAYER",PIEN,"P",AMTIEN,0))
"RTN","BPSOSRX3",128,0)
 ... S OPAPQ=$P(OPAMT,U,2)   ; 342-HC other payer amt paid qualifier (ncpdp 5.1 blank is OK)
"RTN","BPSOSRX3",129,0)
 ... S OPPRA=$P(OPAMT,U,3)   ; 352-NQ, Other Payer-Patient Responsibility Amount
"RTN","BPSOSRX3",130,0)
 ... S OPAMT=+OPAMT          ; 431-DV other payer amt paid
"RTN","BPSOSRX3",131,0)
 ... ;
"RTN","BPSOSRX3",132,0)
 ... ; add a new entry to subfile 9002313.7781
"RTN","BPSOSRX3",133,0)
 ... S BPIEN1=$$INSITEM^BPSUTIL2(9002313.7781,PIEN_","_BPIEN77,OPAMT,AMTIEN,"",,0)
"RTN","BPSOSRX3",134,0)
 ... I BPIEN1<1 S BPERRMSG="Can't create entry in 9002313.7781 subfile",BPQ=1 Q
"RTN","BPSOSRX3",135,0)
 ... ;
"RTN","BPSOSRX3",136,0)
 ... ; set piece 2
"RTN","BPSOSRX3",137,0)
 ... I OPAPQ'="" I $$FILLFLDS^BPSUTIL2(9002313.7781,.02,AMTIEN_","_PIEN_","_BPIEN77,OPAPQ)<1 D
"RTN","BPSOSRX3",138,0)
 .... S BPQ=1,BPERRMSG="Can't populate .02 field in 9002313.7781 subfile"
"RTN","BPSOSRX3",139,0)
 .... Q
"RTN","BPSOSRX3",140,0)
 ... ;
"RTN","BPSOSRX3",141,0)
 ... ; set piece 3
"RTN","BPSOSRX3",142,0)
 ... I OPPRA'="" I $$FILLFLDS^BPSUTIL2(9002313.7781,.03,AMTIEN_","_PIEN_","_BPIEN77,OPPRA)<1 D
"RTN","BPSOSRX3",143,0)
 .... S BPQ=1,BPERRMSG="Can't populate .03 field in 9002313.7781 subfile"
"RTN","BPSOSRX3",144,0)
 .... Q
"RTN","BPSOSRX3",145,0)
 ... ;
"RTN","BPSOSRX3",146,0)
 ... Q
"RTN","BPSOSRX3",147,0)
 .. ;
"RTN","BPSOSRX3",148,0)
 .. ; now loop thru the other payer reject array
"RTN","BPSOSRX3",149,0)
 .. S REJIEN=0 F  S REJIEN=$O(MOREDATA("OTHER PAYER",PIEN,"R",REJIEN)) Q:'REJIEN!BPQ  D
"RTN","BPSOSRX3",150,0)
 ... S OPREJ=$G(MOREDATA("OTHER PAYER",PIEN,"R",REJIEN,0)) Q:OPREJ=""  Q:$P(OPREJ,U,1)=""
"RTN","BPSOSRX3",151,0)
 ... ;
"RTN","BPSOSRX3",152,0)
 ... ; add a new entry to subfile 9002313.7782
"RTN","BPSOSRX3",153,0)
 ... S BPIEN2=$$INSITEM^BPSUTIL2(9002313.7782,PIEN_","_BPIEN77,$P(OPREJ,U,1),REJIEN,"",,0)
"RTN","BPSOSRX3",154,0)
 ... I BPIEN2<1 S BPERRMSG="Can't create entry in 9002313.7782 subfile",BPQ=1 Q
"RTN","BPSOSRX3",155,0)
 ... Q
"RTN","BPSOSRX3",156,0)
 .. Q
"RTN","BPSOSRX3",157,0)
 . Q
"RTN","BPSOSRX3",158,0)
 I BPQ Q "0^"_BPERRMSG_" (COB DATA)"
"RTN","BPSOSRX3",159,0)
 ;
"RTN","BPSOSRX3",160,0)
 ;store DURREC info
"RTN","BPSOSRX3",161,0)
 S BPQ=0
"RTN","BPSOSRX3",162,0)
 S DUR=0
"RTN","BPSOSRX3",163,0)
 F  S DUR=$O(MOREDATA("DUR",DUR)) Q:+DUR=0!(BPQ=1)  D
"RTN","BPSOSRX3",164,0)
 . S BPIEN771=$$INSITEM^BPSUTIL2(9002313.771,BPIEN77,$P(MOREDATA("DUR",DUR,0),U),DUR,"",,0)
"RTN","BPSOSRX3",165,0)
 . I BPIEN771<1 S BPERRMSG="Cannot create DUR record in DUR multiple of the BPS REQUEST file",BPQ=1 Q
"RTN","BPSOSRX3",166,0)
 . S BPERRMSG="Cannot populate a field in DUR multiple"
"RTN","BPSOSRX3",167,0)
 . I $$FILLFLDS^BPSUTIL2(9002313.771,".02",DUR_","_BPIEN77,$P(MOREDATA("DUR",DUR,0),U,2))<1 S BPQ=1 Q
"RTN","BPSOSRX3",168,0)
 . I $$FILLFLDS^BPSUTIL2(9002313.771,".03",DUR_","_BPIEN77,$P(MOREDATA("DUR",DUR,0),U,3))<1 S BPQ=1 Q
"RTN","BPSOSRX3",169,0)
 I BPQ=1 Q "0^"_BPERRMSG_" DUR DATA"
"RTN","BPSOSRX3",170,0)
 ;
"RTN","BPSOSRX3",171,0)
 ;store ins to IB INSURER DATA
"RTN","BPSOSRX3",172,0)
 S BPQ=0
"RTN","BPSOSRX3",173,0)
 S BPCOB=0 F  S BPCOB=$O(BPIENS78(BPCOB)) Q:+BPCOB=0!(BPQ=1)  D
"RTN","BPSOSRX3",174,0)
 . S BPIEN772=$$INSITEM^BPSUTIL2(9002313.772,BPIEN77,BPCOB,BPCOB,"",,0)
"RTN","BPSOSRX3",175,0)
 . I BPIEN772<1 S BPERRMSG="Cannot create record in IBDATA multiple of the BPS REQUEST file",BPQ=1 Q
"RTN","BPSOSRX3",176,0)
 . S BPERRMSG="Cannot populate a field in IBDATA multiple"
"RTN","BPSOSRX3",177,0)
 . I $$FILLFLDS^BPSUTIL2(9002313.772,".02",BPCOB_","_BPIEN77,$S(BPCOBIND=BPCOB:1,1:0))<1 S BPQ=1 Q
"RTN","BPSOSRX3",178,0)
 . I $$FILLFLDS^BPSUTIL2(9002313.772,".03",BPCOB_","_BPIEN77,BPIENS78(BPCOB))<1 S BPQ=1 Q
"RTN","BPSOSRX3",179,0)
 I BPQ=1 Q "0^"_BPERRMSG_"INSURER DATA"
"RTN","BPSOSRX3",180,0)
 ;
"RTN","BPSOSRX3",181,0)
 ;return 1 (success) and IEN of the 9002313.77 entry
"RTN","BPSOSRX3",182,0)
 Q "1^"_BPIEN77
"RTN","BPSOSRX3",183,0)
 ;
"RTN","BPSOSRX3",184,0)
 ;check if the field is used in MOREDATA for the specified REQUEST TYPE - CLAIM="C" /UNCLAIM="U"
"RTN","BPSOSRX3",185,0)
ACTFIELD(BPSKIP,BPREQTYP,BPFLD) ;
"RTN","BPSOSRX3",186,0)
 ;For Reversal or Skip, only do RX Action, Date of Service, Reversal Reason, and User who made the Request
"RTN","BPSOSRX3",187,0)
 I (BPREQTYP="U")!(BPSKIP=1) Q ";1.01;2.01;2.02;6.02;"[(";"_BPFLD_";")
"RTN","BPSOSRX3",188,0)
 ;For Eligibility Verification, skip Eligibility
"RTN","BPSOSRX3",189,0)
 I BPREQTYP="E",";1.06;"[(";"_BPFLD_";") Q 0
"RTN","BPSOSRX3",190,0)
 Q 1
"RTN","BPSOSRX3",191,0)
 ;
"RTN","BPSOSRX3",192,0)
 ;Lock BPS REQUEST
"RTN","BPSOSRX3",193,0)
LOCK77(BPTIMOUT,IEN59,BPSRC) ;
"RTN","BPSOSRX3",194,0)
 N BPRET
"RTN","BPSOSRX3",195,0)
 L +^BPS(9002313.77):+$G(BPTIMOUT)
"RTN","BPSOSRX3",196,0)
 S BPRET=$T
"RTN","BPSOSRX3",197,0)
 I $G(IEN59)>0 D LOG^BPSOSL(IEN59,$G(BPSRC)_$S(BPRET=1:"-Lock",1:"-Failed to Lock")_" BPS REQUEST file")
"RTN","BPSOSRX3",198,0)
 Q BPRET
"RTN","BPSOSRX3",199,0)
 ;
"RTN","BPSOSRX3",200,0)
 ;UnLock BPS REQUEST
"RTN","BPSOSRX3",201,0)
UNLOCK77(IEN59,BPSRC) ;
"RTN","BPSOSRX3",202,0)
 L -^BPS(9002313.77)
"RTN","BPSOSRX3",203,0)
 I $G(IEN59)>0 D LOG^BPSOSL(IEN59,$G(BPSRC)_"-Unlock BPS REQUEST file")
"RTN","BPSOSRX3",204,0)
 Q
"RTN","BPSOSRX3",205,0)
 ;
"RTN","BPSOSRX3",206,0)
 ;BP77 - ien of BPS REQUEST
"RTN","BPSOSRX3",207,0)
ERRFIELD(BP77,BPRFILE,BPMESS,BPFILENO,BPFLDNO) ;
"RTN","BPSOSRX3",208,0)
 I $G(BP77)>0 D DELREQST^BPSOSRX4(BP77) ;delete incomplete record
"RTN","BPSOSRX3",209,0)
 Q $$FIELDMSG^BPSOSRX2(BPRFILE,BPMESS,BPFILENO,BPFLDNO)
"RTN","BPSOSRX3",210,0)
 ;
"RTN","BPSOSRX3",211,0)
 ;BPSOSRX3
"RTN","BPSOSSG")
0^26^B40022062
"RTN","BPSOSSG",1,0)
BPSOSSG ;BHAM ISC/SD/lwj/FLS - Special gets for formats ;06/01/2004
"RTN","BPSOSSG",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,10,11,20,24**;JUN 2004;Build 43
"RTN","BPSOSSG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSOSSG",4,0)
 ;
"RTN","BPSOSSG",5,0)
 Q
"RTN","BPSOSSG",6,0)
 ;
"RTN","BPSOSSG",7,0)
FLD420 ; Submission Clarification Code
"RTN","BPSOSSG",8,0)
 ; place fields 354 and 420 into BPS CLAIMS
"RTN","BPSOSSG",9,0)
 ; called by SET CODE in BPS NCPDPD FIELD DEFS for field 420
"RTN","BPSOSSG",10,0)
 ;
"RTN","BPSOSSG",11,0)
 Q:'$G(BPS(9002313.0201))  ; must have entry IEN
"RTN","BPSOSSG",12,0)
 ;
"RTN","BPSOSSG",13,0)
 N BPSCNTR,CNT,FDA,MSG,FLDIEN,SCC,I
"RTN","BPSOSSG",14,0)
 K BPS(9002313.0354)  ; results from UPDATE^DIE
"RTN","BPSOSSG",15,0)
 S FLDIEN=$O(^BPSF(9002313.91,"B",420,""))  ;Get IEN for field 420 from NCPDP BPS FIELD DEFS
"RTN","BPSOSSG",16,0)
 ; Are there overrides?
"RTN","BPSOSSG",17,0)
 I $G(FLDIEN),$D(BPS("OVERRIDE","RX",BPS(9002313.0201),FLDIEN)) D
"RTN","BPSOSSG",18,0)
 . K BPS("RX",BPS(9002313.0201),"Submission Clarif Code")
"RTN","BPSOSSG",19,0)
 . S SCC=BPS("OVERRIDE","RX",BPS(9002313.0201),FLDIEN)
"RTN","BPSOSSG",20,0)
 . F I=1:1:3 S BPS("RX",BPS(9002313.0201),"Submission Clarif Code",I)=$P(SCC,"~",I)
"RTN","BPSOSSG",21,0)
 Q:'$O(BPS("RX",BPS(9002313.0201),"Submission Clarif Code",0))  ; no values found
"RTN","BPSOSSG",22,0)
 S (CNT,BPSCNTR)=0
"RTN","BPSOSSG",23,0)
 F  S CNT=$O(BPS("RX",BPS(9002313.0201),"Submission Clarif Code",CNT)) Q:'CNT  D
"RTN","BPSOSSG",24,0)
 .I BPS("RX",BPS(9002313.0201),"Submission Clarif Code",CNT)="" Q
"RTN","BPSOSSG",25,0)
 .S BPSCNTR=BPSCNTR+1  ; ien for (#354.01) SUBMISSION CLARIFICATION MLTPL
"RTN","BPSOSSG",26,0)
 .S FDA(9002313.02354,"+"_BPSCNTR_","_BPS(9002313.0201)_","_BPS(9002313.02)_",",.01)=BPSCNTR
"RTN","BPSOSSG",27,0)
 .; 420-DK Submission Clarification Code
"RTN","BPSOSSG",28,0)
 .S FDA(9002313.02354,"+"_BPSCNTR_","_BPS(9002313.0201)_","_BPS(9002313.02)_",",420)="DK"_$$NFF^BPSECFM(BPS("RX",BPS(9002313.0201),"Submission Clarif Code",CNT),2)
"RTN","BPSOSSG",29,0)
 ;
"RTN","BPSOSSG",30,0)
 I BPSCNTR D UPDATE^DIE("","FDA","BPS(9002313.0354)","MSG")
"RTN","BPSOSSG",31,0)
 I $D(MSG) D  Q  ; if error, log it and quit
"RTN","BPSOSSG",32,0)
 .D LOG2CLM^BPSOSL(BPS(9002313.02),$T(+0)_"-Failed to update NCPDP field 420")
"RTN","BPSOSSG",33,0)
 .D LOGARAY2^BPSOSL(BPS(9002313.02),"MSG")
"RTN","BPSOSSG",34,0)
 ;
"RTN","BPSOSSG",35,0)
 ; 354-NX Submission Clarification Code Count
"RTN","BPSOSSG",36,0)
 I BPSCNTR S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),350),U,4)="NX"_$$NFF^BPSECFM(BPSCNTR,1)
"RTN","BPSOSSG",37,0)
 ;
"RTN","BPSOSSG",38,0)
 Q
"RTN","BPSOSSG",39,0)
 ;
"RTN","BPSOSSG",40,0)
FLD439 ;Reason for service code
"RTN","BPSOSSG",41,0)
 ;Called by SET logic in BPS NCPDP Field DEFS for field 439
"RTN","BPSOSSG",42,0)
 ;DUR is newed/set in BPSOSHF
"RTN","BPSOSSG",43,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,DUR,0),U,2)=BPS("X")
"RTN","BPSOSSG",44,0)
 Q
"RTN","BPSOSSG",45,0)
 ;
"RTN","BPSOSSG",46,0)
FLD440 ;Professional Service Code
"RTN","BPSOSSG",47,0)
 ;Called by set logic in BPS NCPDP Field DEFS for field 440
"RTN","BPSOSSG",48,0)
 ;DUR is newed/set in BPSOSHF
"RTN","BPSOSSG",49,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,DUR,0),U,3)=BPS("X")
"RTN","BPSOSSG",50,0)
 Q
"RTN","BPSOSSG",51,0)
 ;
"RTN","BPSOSSG",52,0)
FLD441 ;Result of Service Code
"RTN","BPSOSSG",53,0)
 ;Called by SET logic in BPS NCPDP Field DEFS for field 441
"RTN","BPSOSSG",54,0)
 ;DUR is newed/set in BPSOSHF
"RTN","BPSOSSG",55,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,DUR,0),U,4)=BPS("X")
"RTN","BPSOSSG",56,0)
 Q
"RTN","BPSOSSG",57,0)
 ;
"RTN","BPSOSSG",58,0)
FLD473 ;DUR/PPS code counter - called from SET logic in BPS NCPDP Field Defs
"RTN","BPSOSSG",59,0)
 ;DUR is newed/set in BPSOSHF
"RTN","BPSOSSG",60,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,DUR,0),U,1)=BPS("X")
"RTN","BPSOSSG",61,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,"B",BPS("X"),DUR)=""
"RTN","BPSOSSG",62,0)
 S ^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,0)="^9002313.1001A^"_DUR_"^"_DUR
"RTN","BPSOSSG",63,0)
 Q
"RTN","BPSOSSG",64,0)
 ;
"RTN","BPSOSSG",65,0)
FLD474 ;DUR/PPS level of effort - called from set logic in BPS NCPDP Field
"RTN","BPSOSSG",66,0)
 ;DUR is newed/set in BPSOSHF
"RTN","BPSOSSG",67,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,DUR,0),U,5)=BPS("X")
"RTN","BPSOSSG",68,0)
 Q
"RTN","BPSOSSG",69,0)
 ;
"RTN","BPSOSSG",70,0)
FLD475 ;DUR Co-agent ID Qualifier - called from set logic in BPS NCPDP Field
"RTN","BPSOSSG",71,0)
 ;DUR is newed/set in BPSOSHF
"RTN","BPSOSSG",72,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,DUR,0),U,6)=""
"RTN","BPSOSSG",73,0)
 Q
"RTN","BPSOSSG",74,0)
 ;
"RTN","BPSOSSG",75,0)
FLD476 ;DUR Co-agent ID - called from set logic in BPS NCPDP Field
"RTN","BPSOSSG",76,0)
 ;DUR is newed/set in BPSOSHF
"RTN","BPSOSSG",77,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),473.01,DUR,0),U,7)=""
"RTN","BPSOSSG",78,0)
 Q
"RTN","BPSOSSG",79,0)
 ;
"RTN","BPSOSSG",80,0)
FLD480 ; Other Amount Claimed Submitted field
"RTN","BPSOSSG",81,0)
 ; Called by set logic in BPS NCPDP Field DEFS for field 480
"RTN","BPSOSSG",82,0)
 ; Sets fields 478, 479, and 480 into BPS Claims
"RTN","BPSOSSG",83,0)
 ;   478-H7 Other Amount Claimed Count
"RTN","BPSOSSG",84,0)
 ;   479-H8 Other Amount Claimed Submitted Qualifier
"RTN","BPSOSSG",85,0)
 ;   480-H9 Other Amount Claimed Submitted
"RTN","BPSOSSG",86,0)
 ;
"RTN","BPSOSSG",87,0)
 Q:'$G(BPS(9002313.02))    ; must have BPS Claims IEN
"RTN","BPSOSSG",88,0)
 Q:'$G(BPS(9002313.0201))  ; must have Transaction subfile IEN
"RTN","BPSOSSG",89,0)
 Q:'$O(BPS("RX",BPS(9002313.0201),"Other Amt Value",0))  ; nothing to do
"RTN","BPSOSSG",90,0)
 ;
"RTN","BPSOSSG",91,0)
 N BPSCNTR,CNT,FDA,MSG
"RTN","BPSOSSG",92,0)
 K BPS(9002313.0601)  ; results from UPDATE^DIE
"RTN","BPSOSSG",93,0)
 S (CNT,BPSCNTR)=0
"RTN","BPSOSSG",94,0)
 F  S CNT=$O(BPS("RX",BPS(9002313.0201),"Other Amt Value",CNT)) Q:'CNT  D
"RTN","BPSOSSG",95,0)
 . I +BPS("RX",BPS(9002313.0201),"Other Amt Value",CNT)=0 Q
"RTN","BPSOSSG",96,0)
 . S BPSCNTR=BPSCNTR+1  ; ien for "PRICING REPEATING FIELDS SUB-FIELD^^480^3"
"RTN","BPSOSSG",97,0)
 . S FDA(9002313.0601,"+"_BPSCNTR_","_BPS(9002313.0201)_","_BPS(9002313.02)_",",.01)=BPSCNTR
"RTN","BPSOSSG",98,0)
 . S FDA(9002313.0601,"+"_BPSCNTR_","_BPS(9002313.0201)_","_BPS(9002313.02)_",",479)="H8"_$$ANFF^BPSECFM($G(BPS("RX",BPS(9002313.0201),"Other Amt Qual",CNT)),2)
"RTN","BPSOSSG",99,0)
 . S FDA(9002313.0601,"+"_BPSCNTR_","_BPS(9002313.0201)_","_BPS(9002313.02)_",",480)="H9"_$$DFF^BPSECFM($G(BPS("RX",BPS(9002313.0201),"Other Amt Value",CNT)),8)
"RTN","BPSOSSG",100,0)
 ;
"RTN","BPSOSSG",101,0)
 I BPSCNTR D UPDATE^DIE("","FDA","BPS(9002313.0601)","MSG")
"RTN","BPSOSSG",102,0)
 I $D(MSG) D  Q
"RTN","BPSOSSG",103,0)
 . D LOG2CLM^BPSOSL(BPS(9002313.02),$T(+0)_"-Failed to update NCPDP field 480 and/or 479")
"RTN","BPSOSSG",104,0)
 . D LOGARAY2^BPSOSL(BPS(9002313.02),"MSG")
"RTN","BPSOSSG",105,0)
 ; 478-H7 Other Amount Claimed Submitted Count
"RTN","BPSOSSG",106,0)
 I BPSCNTR S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),470),U,8)="H7"_$$NFF^BPSECFM(BPSCNTR,1)
"RTN","BPSOSSG",107,0)
 ;
"RTN","BPSOSSG",108,0)
 Q
"RTN","BPSOSSG",109,0)
 ;
"RTN","BPSOSSG",110,0)
FLDD02 ; Total Prescribed Quantity Remaining field (D02-KW)
"RTN","BPSOSSG",111,0)
 ; called by SET CODE in BPS NCPDP Field DEFS for field 2202 (D02-KW)
"RTN","BPSOSSG",112,0)
 ;
"RTN","BPSOSSG",113,0)
 I '$G(BPS(9002313.02)) S BPS(9002313.02)=$G(BPS02)
"RTN","BPSOSSG",114,0)
 Q:'$G(BPS(9002313.02))    ; must have BPS Claims IEN
"RTN","BPSOSSG",115,0)
 Q:'$G(BPS(9002313.0201))  ; must have Transaction subfile IEN
"RTN","BPSOSSG",116,0)
 ;
"RTN","BPSOSSG",117,0)
 N I,PREVFILLS,REFILLS,RTS,RXIEN,TOTALDISP,TOTALQTY,QTY
"RTN","BPSOSSG",118,0)
 ;
"RTN","BPSOSSG",119,0)
 S REFILLS=$G(BPS("RX",BPS(9002313.0201),"# Refills"))
"RTN","BPSOSSG",120,0)
 S QTY=$G(BPS("RX",BPS(9002313.0201),"Quantity"))
"RTN","BPSOSSG",121,0)
 S TOTALQTY=QTY*(REFILLS+1)  ; Total quantity for the prescription
"RTN","BPSOSSG",122,0)
 S PREVFILLS=$G(BPS("RX",BPS(9002313.0201),"Refill #"))
"RTN","BPSOSSG",123,0)
 ;
"RTN","BPSOSSG",124,0)
 ; Determine if any previous fills were returned to stock.
"RTN","BPSOSSG",125,0)
 S RXIEN=$G(BPS("RX",BPS(9002313.0201),"RX IEN"))
"RTN","BPSOSSG",126,0)
 I RXIEN S RTS=0,I=0 D
"RTN","BPSOSSG",127,0)
 . F  S I=$O(^PSRX(RXIEN,"RTS",I)) Q:'I  S RTS=RTS+1
"RTN","BPSOSSG",128,0)
 ;
"RTN","BPSOSSG",129,0)
 ; Subtract and return to stock fills (RTS) from the number of previous fills (PREVFILLS).
"RTN","BPSOSSG",130,0)
 S TOTALDISP=(PREVFILLS-RTS)*QTY  ; Total dispensed for all previous fills
"RTN","BPSOSSG",131,0)
 ; D02-KW Total Prescribed Quantity Remaining
"RTN","BPSOSSG",132,0)
 S BPS("X")=TOTALQTY-TOTALDISP
"RTN","BPSOSSG",133,0)
 S $P(^BPSC(BPS(9002313.02),400,BPS(9002313.0201),"D00"),U,2)="KW"_$$NFF^BPSECFM(BPS("X"),10)
"RTN","BPSOSSG",134,0)
 Q
"RTN","BPSOSSG",135,0)
 ;
"RTN","BPSOSSG",136,0)
EMPL ;Get employer info
"RTN","BPSOSSG",137,0)
 ; This by GET logic in BPS NCPDP Field Defs for field 315 (Employer Name)
"RTN","BPSOSSG",138,0)
 ; DMB 11/13/2006 - It makes some sense to only set these fields if
"RTN","BPSOSSG",139,0)
 ;   they exist on the payer sheet.  However, it assumes that the
"RTN","BPSOSSG",140,0)
 ;   employer name field will always be before the other fields and
"RTN","BPSOSSG",141,0)
 ;   that the other fields will not exist without the Employer Name
"RTN","BPSOSSG",142,0)
 ;   field.  For now, leave this be as these fields are on the
"RTN","BPSOSSG",143,0)
 ;   Worker's Comp segment, which we do not do.  We may want to evaluate
"RTN","BPSOSSG",144,0)
 ;   if we were to ever add the Worker's Comp segment
"RTN","BPSOSSG",145,0)
 Q:'$G(BPS("Patient","IEN"))
"RTN","BPSOSSG",146,0)
 D GETS^DIQ(2,BPS("Patient","IEN"),".3111;.3112;.3113;.3115;.3116;.3117;.3118;.3119","","EMPL")
"RTN","BPSOSSG",147,0)
 S BPS("Employer","Name")=EMPL(2,BPS("Patient","IEN")_",",.3111)
"RTN","BPSOSSG",148,0)
 S:EMPL(2,BPS("Patient","IEN")_",",.3111)=""&(EMPL(2,BPS("Patient","IEN")_",",.3112)'="") BPS("Employer","Name")=EMPL(2,BPS("Patient","IEN")_",",.3112)
"RTN","BPSOSSG",149,0)
 S BPS("Employer","Address")=EMPL(2,BPS("Patient","IEN")_",",.3113)
"RTN","BPSOSSG",150,0)
 S BPS("Employer","City")=EMPL(2,BPS("Patient","IEN")_",",.3116)
"RTN","BPSOSSG",151,0)
 S BPS("Employer","State")=EMPL(2,BPS("Patient","IEN")_",",.3117)
"RTN","BPSOSSG",152,0)
 I BPS("Employer","State")'="" D
"RTN","BPSOSSG",153,0)
 . S STATEIEN="",STATEIEN=$O(^DIC(5,"B",BPS("Employer","State"),STATEIEN)),BPS("Employer","State")=$P($G(^DIC(5,STATEIEN,0)),"^",2)
"RTN","BPSOSSG",154,0)
 S BPS("Employer","Zip Code")=EMPL(2,BPS("Patient","IEN")_",",.3118)
"RTN","BPSOSSG",155,0)
 S BPS("Employer","Phone")=EMPL(2,BPS("Patient","IEN")_",",.3119)
"RTN","BPSOSSG",156,0)
 K EMPL,STATEIEN
"RTN","BPSOSSG",157,0)
 Q
"RTN","BPSOSSG",158,0)
 ;
"RTN","BPSPRRX3")
0^27^B135138872
"RTN","BPSPRRX3",1,0)
BPSPRRX3 ;ALB/SS - ePharmacy secondary billing ;16-DEC-08
"RTN","BPSPRRX3",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**8,10,11,19,23,24**;JUN 2004;Build 43
"RTN","BPSPRRX3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSPRRX3",4,0)
 ;
"RTN","BPSPRRX3",5,0)
 ;External reference to file 399.3 supported by IA 3822
"RTN","BPSPRRX3",6,0)
 ;External reference to $$INSUR^IBBAPI supported by IA 4419
"RTN","BPSPRRX3",7,0)
 ;External reference to $$PLANEPS^IBNCPDPU supported by IA 5572
"RTN","BPSPRRX3",8,0)
 ;
"RTN","BPSPRRX3",9,0)
PROMPTS(RX,FILL,DOS,BPSPRARR) ;
"RTN","BPSPRRX3",10,0)
 ;BPSPRARR - array to pass values determined earlier (if any) and to return user's input/corrections
"RTN","BPSPRRX3",11,0)
 ;Input:
"RTN","BPSPRRX3",12,0)
 ;  RX - Prescription IEN
"RTN","BPSPRRX3",13,0)
 ;  FILL - Fill Number
"RTN","BPSPRRX3",14,0)
 ;  DOS - Date of Service
"RTN","BPSPRRX3",15,0)
 ;  BPSPRARR - Array of data passed by reference
"RTN","BPSPRRX3",16,0)
 ;Returns 
"RTN","BPSPRRX3",17,0)
 ;   1 = the data is correct
"RTN","BPSPRRX3",18,0)
 ;  -1 = the data is not correct - Do not create the claim
"RTN","BPSPRRX3",19,0)
 ;
"RTN","BPSPRRX3",20,0)
 ; Check paramters
"RTN","BPSPRRX3",21,0)
 I '$G(RX) Q -1
"RTN","BPSPRRX3",22,0)
 I $G(FILL)="" Q -1
"RTN","BPSPRRX3",23,0)
 I '$G(DOS) Q -1
"RTN","BPSPRRX3",24,0)
 ;
"RTN","BPSPRRX3",25,0)
 ;
"RTN","BPSPRRX3",26,0)
 N BPQ,BPSQ,IEN59PR,DFN,BPSPLAN,BPX,BPSDFLT,BPSSET
"RTN","BPSPRRX3",27,0)
 N BPSPIEN,BPSSET,BPCNT,BPSRJ,BPSPAID,RETV,TOTAL
"RTN","BPSPRRX3",28,0)
 N BPRATTYP,BPSPDRJ,BPSPLNSL,BPX1,BPSFIEN,BPSPSARR,BPSPSHV
"RTN","BPSPRRX3",29,0)
 N IEN59SEC,BPSRET,BPSINS
"RTN","BPSPRRX3",30,0)
 ;
"RTN","BPSPRRX3",31,0)
 S (BPQ,BPSQ)=0
"RTN","BPSPRRX3",32,0)
 ;
"RTN","BPSPRRX3",33,0)
 ; Other Payer IEN defaults to 1 since we don't do tertiary
"RTN","BPSPRRX3",34,0)
 S BPSPIEN=1
"RTN","BPSPRRX3",35,0)
 ;
"RTN","BPSPRRX3",36,0)
 ; Get Primary BPS Transaction
"RTN","BPSPRRX3",37,0)
 S IEN59PR=$$IEN59^BPSOSRX(RX,FILL,1)
"RTN","BPSPRRX3",38,0)
 ;
"RTN","BPSPRRX3",39,0)
 ; Get/validate Patient DFN
"RTN","BPSPRRX3",40,0)
 S DFN=$P($G(^BPST(IEN59PR,0)),U,6)
"RTN","BPSPRRX3",41,0)
 I DFN="" S DFN=$$RXAPI1^BPSUTIL1(RX,2,"I")
"RTN","BPSPRRX3",42,0)
 I DFN="" Q -1
"RTN","BPSPRRX3",43,0)
 ;
"RTN","BPSPRRX3",44,0)
 ; Get patient insurances
"RTN","BPSPRRX3",45,0)
 S BPSRET=$$INSUR^IBBAPI(DFN,DOS,"E",.BPSINS,"1,7,8")
"RTN","BPSPRRX3",46,0)
 ;
"RTN","BPSPRRX3",47,0)
 ; Get the first Secondary insurance for default
"RTN","BPSPRRX3",48,0)
 S BPSPRARR("PLAN")="",BPSPRARR("INS NAME")="",(BPX,BPQ)=0
"RTN","BPSPRRX3",49,0)
 F  S BPX=$O(BPSINS("IBBAPI","INSUR",BPX)) Q:'BPX  D  Q:BPQ
"RTN","BPSPRRX3",50,0)
 . I $P(BPSINS("IBBAPI","INSUR",BPX,7),U)'=2 Q
"RTN","BPSPRRX3",51,0)
 . S BPSPRARR("PLAN")=$P(BPSINS("IBBAPI","INSUR",BPX,8),U)
"RTN","BPSPRRX3",52,0)
 . S BPSPRARR("INS NAME")=$P(BPSINS("IBBAPI","INSUR",BPX,1),U,2)
"RTN","BPSPRRX3",53,0)
 . S BPQ=1
"RTN","BPSPRRX3",54,0)
 . Q
"RTN","BPSPRRX3",55,0)
 ;
"RTN","BPSPRRX3",56,0)
 ; Get Rate Type for the Secondary Insurance
"RTN","BPSPRRX3",57,0)
 S IEN59SEC=$$IEN59^BPSOSRX(RX,FILL,2)
"RTN","BPSPRRX3",58,0)
 S BPSPRARR("RTYPE")=$$GETRTP59^BPSPRRX5(IEN59SEC)
"RTN","BPSPRRX3",59,0)
 I BPSPRARR("RTYPE")="" S BPSPRARR("RTYPE")=8
"RTN","BPSPRRX3",60,0)
 ;
"RTN","BPSPRRX3",61,0)
 ; Display current COB fields
"RTN","BPSPRRX3",62,0)
 D DISPSEC(.BPSPRARR)
"RTN","BPSPRRX3",63,0)
 ;
"RTN","BPSPRRX3",64,0)
 S BPQ=0
"RTN","BPSPRRX3",65,0)
 I $G(BPSPRARR("PLAN"))=""!($G(BPSPRARR("RTYPE"))="")!($G(BPSPRARR("308-C8"))="") S BPQ=1
"RTN","BPSPRRX3",66,0)
 I BPSQ=0 F BPX=4,5 I $P($G(BPSPRARR("OTHER PAYER",BPSPIEN,0)),U,BPX)="" S BPQ=1
"RTN","BPSPRRX3",67,0)
 I BPQ=0,'$D(BPSPRARR("OTHER PAYER",BPSPIEN,"P")),'$D(BPSPRARR("OTHER PAYER",BPSPIEN,"R")) S BPQ=1
"RTN","BPSPRRX3",68,0)
 ;
"RTN","BPSPRRX3",69,0)
 ; Prompt to continue or not
"RTN","BPSPRRX3",70,0)
 W !
"RTN","BPSPRRX3",71,0)
 I BPQ=1 W !,"Required secondary claim information is missing. Enter all required information",!
"RTN","BPSPRRX3",72,0)
 E  S BPQ=$$YESNO^BPSSCRRS("Do you want to edit this Secondary Claim Information (Y/N)","N") Q:BPQ=-1 -1 G:BPQ=0 END
"RTN","BPSPRRX3",73,0)
 ;
"RTN","BPSPRRX3",74,0)
 ; Prompt for Secondary Insurance Plan
"RTN","BPSPRRX3",75,0)
 W !
"RTN","BPSPRRX3",76,0)
 F  D  Q:BPSQ'=0
"RTN","BPSPRRX3",77,0)
 . S BPSPLAN=$$SELECTPL^BPSPRRX1(DFN,DOS,.BPSPLNSL,"SECONDARY INSURANCE POLICY",$G(BPSPRARR("PLAN")))
"RTN","BPSPRRX3",78,0)
 . I BPSPLAN=0 S BPSQ=-1 Q
"RTN","BPSPRRX3",79,0)
 . I $P(BPSPLNSL(7),U)'=2 W !,"Must select a Secondary insurance plan." Q
"RTN","BPSPRRX3",80,0)
 . S BPSPRARR("PLAN")=BPSPLAN
"RTN","BPSPRRX3",81,0)
 . S BPSPRARR("INS NAME")=$P(BPSPLNSL(1),U,2)
"RTN","BPSPRRX3",82,0)
 . S BPSPSHV=$$PAYSHTV(BPSPLAN)
"RTN","BPSPRRX3",83,0)
 . S BPSQ=1
"RTN","BPSPRRX3",84,0)
 Q:BPSQ=-1 -1
"RTN","BPSPRRX3",85,0)
 ;
"RTN","BPSPRRX3",86,0)
 ; Prompt for Rate Type and store in BPSPRARR("RTYPE")
"RTN","BPSPRRX3",87,0)
 F  S BPRATTYP=$$RATETYPE^BPSPRRX2($S($G(BPSPRARR("RTYPE"))]"":BPSPRARR("RTYPE"),1:8)) Q:BPRATTYP'=""
"RTN","BPSPRRX3",88,0)
 I BPRATTYP=-1 Q -1
"RTN","BPSPRRX3",89,0)
 S BPSPRARR("RTYPE")=BPRATTYP
"RTN","BPSPRRX3",90,0)
 ;
"RTN","BPSPRRX3",91,0)
 ; Prompt for OTHER COVERAGE CODE
"RTN","BPSPRRX3",92,0)
 I $G(BPSPRARR("308-C8"))="" S BPSPRARR("308-C8")="04"
"RTN","BPSPRRX3",93,0)
 S BPSSET="" D SET308(.BPSSET)
"RTN","BPSPRRX3",94,0)
 S RETV=$$PROMPT("SRA"_U_BPSSET,"OTHER COVERAGE CODE:  ",$G(BPSPRARR("308-C8")),"Indicate whether or not the patient has other insurance coverage")
"RTN","BPSPRRX3",95,0)
 Q:RETV<0 -1
"RTN","BPSPRRX3",96,0)
 S BPSPRARR("308-C8")=RETV
"RTN","BPSPRRX3",97,0)
 ;
"RTN","BPSPRRX3",98,0)
 ; Prompt for OTHER PAYER ID
"RTN","BPSPRRX3",99,0)
 S BPSDFLT=$P($G(BPSPRARR("OTHER PAYER",BPSPIEN,0)),U,4)
"RTN","BPSPRRX3",100,0)
 S RETV=$$PROMPT("FR"_U_"0:10:","OTHER PAYER ID",$G(BPSDFLT),"ID assigned to the payer") Q:RETV<0 -1
"RTN","BPSPRRX3",101,0)
 Q:RETV=-1 -1
"RTN","BPSPRRX3",102,0)
 S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,4)=RETV
"RTN","BPSPRRX3",103,0)
 ;
"RTN","BPSPRRX3",104,0)
 ; Prompt for OTHER PAYER DATE
"RTN","BPSPRRX3",105,0)
 S BPSDFLT=$P($G(BPSPRARR("OTHER PAYER",BPSPIEN,0)),U,5)
"RTN","BPSPRRX3",106,0)
 S RETV=$$PROMPT("DR"_U_"","OTHER PAYER DATE",$$FMTE^XLFDT($G(BPSDFLT)),"Payment or denial date of the claim submitted to the other payer. Used for coordination of benefits.")
"RTN","BPSPRRX3",107,0)
 Q:RETV=-1 -1
"RTN","BPSPRRX3",108,0)
 S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,5)=RETV
"RTN","BPSPRRX3",109,0)
 ;
"RTN","BPSPRRX3",110,0)
 ; Prompt for OTHER PAYER RECONCILIATION ID
"RTN","BPSPRRX3",111,0)
 S BPSDFLT=+$P($G(BPSPRARR("OTHER PAYER",BPSPIEN,0)),U,11)
"RTN","BPSPRRX3",112,0)
 S RETV=$$PROMPT("Fr"_U_"0:30:","OTHER PAYER RECONCILIATION ID",$G(BPSDFLT),"ID assigned to the Payer Reconciliation") Q:RETV<0 -1
"RTN","BPSPRRX3",113,0)
 Q:RETV=-1 -1
"RTN","BPSPRRX3",114,0)
 S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,11)=RETV
"RTN","BPSPRRX3",115,0)
 ;
"RTN","BPSPRRX3",116,0)
 ; Prompt for Paid Amount or Reject Codes
"RTN","BPSPRRX3",117,0)
 S BPSSET="PAID:PAID AMOUNTS;REJECT:REJECT CODES"
"RTN","BPSPRRX3",118,0)
 S BPSDFLT=""
"RTN","BPSPRRX3",119,0)
 I $D(BPSPRARR("OTHER PAYER",BPSPIEN,"P")) S BPSDFLT="PAID AMOUNTS"
"RTN","BPSPRRX3",120,0)
 I $D(BPSPRARR("OTHER PAYER",BPSPIEN,"R")) S BPSDFLT=$S(BPSDFLT="PAID AMOUNTS":"",1:"REJECT CODES")
"RTN","BPSPRRX3",121,0)
 S BPSPDRJ=$$PROMPT("SRA"_U_BPSSET,"Edit Paid Amounts or Reject Codes (PAID AMOUNTS/REJECT CODES):  ",BPSDFLT,"Edit the Paid Amounts or Reject Codes")
"RTN","BPSPRRX3",122,0)
 Q:BPSPDRJ=-1 -1
"RTN","BPSPRRX3",123,0)
 ;
"RTN","BPSPRRX3",124,0)
 ; Prompt to edit paid amounts
"RTN","BPSPRRX3",125,0)
 D:BPSPDRJ="PAID"
"RTN","BPSPRRX3",126,0)
 . ; Remove reject codes.
"RTN","BPSPRRX3",127,0)
 . K BPSPRARR("OTHER PAYER",BPSPIEN,"R")
"RTN","BPSPRRX3",128,0)
 . S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,7)=""
"RTN","BPSPRRX3",129,0)
 . ;
"RTN","BPSPRRX3",130,0)
 . K BPSPAID
"RTN","BPSPRRX3",131,0)
 . S (BPCNT,BPX,BPQ,TOTAL)=0
"RTN","BPSPRRX3",132,0)
 . ; BPS NCPDP FIELD DEFS for field 342 codes
"RTN","BPSPRRX3",133,0)
 . S BPSSET=$$GETCDLST(BPSPSHV)
"RTN","BPSPRRX3",134,0)
 . F BPX1=0:1 S BPX=$O(BPSPRARR("OTHER PAYER",BPSPIEN,"P",BPX)) Q:'BPX  D  Q:BPQ=1
"RTN","BPSPRRX3",135,0)
 . . S BPSQUAL=$P(BPSPRARR("OTHER PAYER",BPSPIEN,"P",BPX,0),U,2)
"RTN","BPSPRRX3",136,0)
 . . S BPSQUAL=$$GET1^DIQ(9002313.2,BPSQUAL,.01)
"RTN","BPSPRRX3",137,0)
 . . S BPSAMT=$P(BPSPRARR("OTHER PAYER",BPSPIEN,"P",BPX,0),U,1)
"RTN","BPSPRRX3",138,0)
 . . S BPQ=$$ASKPAID(BPSSET,BPSQUAL,BPSAMT,.BPCNT,.BPSPAID)
"RTN","BPSPRRX3",139,0)
 . ;
"RTN","BPSPRRX3",140,0)
 . I 'BPQ F  S BPQ=$$ASKPAID(BPSSET,"","",.BPCNT,.BPSPAID) Q:BPQ=1
"RTN","BPSPRRX3",141,0)
 . ; Enter updated values into the BPSPRARR array
"RTN","BPSPRRX3",142,0)
 . K BPSPRARR("OTHER PAYER",BPSPIEN,"P")
"RTN","BPSPRRX3",143,0)
 . S BPX=0 F BPX1=0:1 S BPX=$O(BPSPAID(1,BPX)) Q:BPX=""  D
"RTN","BPSPRRX3",144,0)
 . . S BPSPRARR("OTHER PAYER",BPSPIEN,"P",BPX,0)=BPSPAID(1,BPX)
"RTN","BPSPRRX3",145,0)
 . . S TOTAL=TOTAL+BPSPAID(1,BPX)
"RTN","BPSPRRX3",146,0)
 . . ;
"RTN","BPSPRRX3",147,0)
 . ; Set the OTHER PAYER AMOUNT PAID COUNT
"RTN","BPSPRRX3",148,0)
 . S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,6)=BPX1
"RTN","BPSPRRX3",149,0)
 . Q
"RTN","BPSPRRX3",150,0)
 ;
"RTN","BPSPRRX3",151,0)
 ; Edit/add reject codes
"RTN","BPSPRRX3",152,0)
 D:BPSPDRJ="REJECT"
"RTN","BPSPRRX3",153,0)
 . ; Remove paid amounts on the prior claim.
"RTN","BPSPRRX3",154,0)
 . K BPSPRARR("OTHER PAYER",BPSPIEN,"P")
"RTN","BPSPRRX3",155,0)
 . S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,6)=""
"RTN","BPSPRRX3",156,0)
 . ;
"RTN","BPSPRRX3",157,0)
 . K BPSRJ
"RTN","BPSPRRX3",158,0)
 . S (BPCNT,BPX)=0
"RTN","BPSPRRX3",159,0)
 . F BPX1=0:1 S BPX=$O(BPSPRARR("OTHER PAYER",BPSPIEN,"R",BPX)) Q:'BPX  D  Q:BPCNT>4
"RTN","BPSPRRX3",160,0)
 . . S BPSDFLT=BPSPRARR("OTHER PAYER",BPSPIEN,"R",BPX,0)
"RTN","BPSPRRX3",161,0)
 . . S RETV=$$PROMPT("PO^9002313.93:AEMQ","OTHER PAYER REJECT CODE",$G(BPSDFLT),"Enter the reject code returned by the previous payer")
"RTN","BPSPRRX3",162,0)
 . . Q:RETV=-1
"RTN","BPSPRRX3",163,0)
 . . S BPCNT=BPCNT+1,BPSRJ(BPCNT)=$P(RETV,U,2)
"RTN","BPSPRRX3",164,0)
 . I BPCNT=5 W !,"Maximum of 5 OTHER PAYER REJECT CODES reached."
"RTN","BPSPRRX3",165,0)
 . I BPCNT<5 F  S RETV=$$PROMPT("PO^9002313.93:AEMQ","OTHER PAYER REJECT CODE","","Enter the reject code returned by the previous payer") Q:RETV=-1  D  Q:BPCNT>4
"RTN","BPSPRRX3",166,0)
 . . S BPCNT=BPCNT+1
"RTN","BPSPRRX3",167,0)
 . . S BPSRJ(BPCNT)=$P(RETV,U,2)
"RTN","BPSPRRX3",168,0)
 . . I BPCNT>4 W !,"Maximum of 5 OTHER PAYER REJECT CODES reached."
"RTN","BPSPRRX3",169,0)
 . K BPSPRARR("OTHER PAYER",BPSPIEN,"R")
"RTN","BPSPRRX3",170,0)
 . S BPX=0 F BPX1=0:1 S BPX=$O(BPSRJ(BPX)) Q:BPX=""  S BPSPRARR("OTHER PAYER",BPSPIEN,"R",BPX,0)=BPSRJ(BPX)
"RTN","BPSPRRX3",171,0)
 . ; Set the OTHER PAYER REJECT COUNT
"RTN","BPSPRRX3",172,0)
 . S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,7)=BPX1
"RTN","BPSPRRX3",173,0)
 . Q
"RTN","BPSPRRX3",174,0)
 ;
"RTN","BPSPRRX3",175,0)
 I '$D(BPSPRARR("OTHER PAYER",BPSPIEN,"P")),'$D(BPSPRARR("OTHER PAYER",BPSPIEN,"R")) W !,"No Paid Amounts or Reject Codes entered" Q -1
"RTN","BPSPRRX3",176,0)
 ;
"RTN","BPSPRRX3",177,0)
 ; Default OTHER PAYER COVERAGE TYPE to PRIMARY
"RTN","BPSPRRX3",178,0)
 S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,2)="01"
"RTN","BPSPRRX3",179,0)
 ;
"RTN","BPSPRRX3",180,0)
 ; Default OTHER PAYER ID QUALIFIER to BIN
"RTN","BPSPRRX3",181,0)
 S $P(BPSPRARR("OTHER PAYER",BPSPIEN,0),U,3)="03"
"RTN","BPSPRRX3",182,0)
 ;
"RTN","BPSPRRX3",183,0)
 ; If the PRIOR PAYMENT is 0 but the user entered paid amounts, update the PRIOR PAYMENT
"RTN","BPSPRRX3",184,0)
 I +$G(BPSPRARR("PRIOR PAYMENT"))=0,$D(BPSPRARR("OTHER PAYER",BPSPIEN,"P")) D
"RTN","BPSPRRX3",185,0)
 . S BPSPRARR("PRIOR PAYMENT")=TOTAL
"RTN","BPSPRRX3",186,0)
 . I TOTAL>0 S BPSPRARR("308-C8")="02"
"RTN","BPSPRRX3",187,0)
 . E  S BPSPRARR("308-C8")="04"
"RTN","BPSPRRX3",188,0)
 ;
"RTN","BPSPRRX3",189,0)
END ;
"RTN","BPSPRRX3",190,0)
 Q 1
"RTN","BPSPRRX3",191,0)
 ;
"RTN","BPSPRRX3",192,0)
 ; 
"RTN","BPSPRRX3",193,0)
ASKPAID(BPSSET,BPSQUAL,BPSAMT,BPCNT,BPSPAID) ;
"RTN","BPSPRRX3",194,0)
 N RETV1,RETV2,BPSX,BPSPRA,BPSQ S BPSQ=0
"RTN","BPSPRRX3",195,0)
 I BPCNT>8 W !,"  Maximum of 9 OTHER PAYER AMOUNT PAID reached." Q 1
"RTN","BPSPRRX3",196,0)
ASK1 S RETV1=$$PROMPT("SOA"_U_BPSSET,"OTHER PAYER AMOUNT PAID QUALIFIER:  ",$G(BPSQUAL),"Type of payment from other sources (including coupons)")
"RTN","BPSPRRX3",197,0)
 I RETV1=-1!(RETV1="") Q 1
"RTN","BPSPRRX3",198,0)
 I RETV1="08",$D(BPSPAID(2)) W !,"  Qualifier '08' cannot be entered with other qualifiers" G ASK1
"RTN","BPSPRRX3",199,0)
 S RETV2=$$PROMPT("NO"_U_"0:999999.99:2","OTHER PAYER AMOUNT PAID",$G(BPSAMT),"Amount of any payment from other sources (including coupons)")
"RTN","BPSPRRX3",200,0)
 I RETV2=-1!(RETV2="") Q 1
"RTN","BPSPRRX3",201,0)
 ; Check for duplicate qualifiers and add Amount Paid to previous amount entered
"RTN","BPSPRRX3",202,0)
 I $D(BPSPAID(2,RETV1)) D  Q 0
"RTN","BPSPRRX3",203,0)
 . S BPSX="" F  S BPSX=$O(BPSPAID(1,BPSX)) Q:BPSX=""  D  Q:BPSQ
"RTN","BPSPRRX3",204,0)
 . . I $P(BPSPAID(1,BPSX),U,2)=RETV1 D
"RTN","BPSPRRX3",205,0)
 . . . S BPSPRA=$P(BPSPAID(1,BPSX),U),$P(BPSPAID(1,BPSX),U)=BPSPRA+RETV2,BPSQ=1
"RTN","BPSPRRX3",206,0)
 . . . W !,"  $",$FN(RETV2,",",2)," has been added to amount $",$FN(BPSPRA,",",2)," for Qualifier ",RETV1
"RTN","BPSPRRX3",207,0)
 S BPCNT=BPCNT+1
"RTN","BPSPRRX3",208,0)
 S BPSPAID(1,BPCNT)=RETV2_U_$$GETPDIEN^BPSPRRX6(RETV1)
"RTN","BPSPRRX3",209,0)
 S BPSPAID(2,RETV1)=""
"RTN","BPSPRRX3",210,0)
 I RETV1="08" Q 1
"RTN","BPSPRRX3",211,0)
 Q 0
"RTN","BPSPRRX3",212,0)
 ;
"RTN","BPSPRRX3",213,0)
DISPSEC(BPSPRARR) ;
"RTN","BPSPRRX3",214,0)
 ; Validate and Display the current secondary insurance information and prompt to edit.
"RTN","BPSPRRX3",215,0)
 ; Input:
"RTN","BPSPRRX3",216,0)
 ;   BPSPRARR - Array of COB data, passed by reference
"RTN","BPSPRRX3",217,0)
 ;
"RTN","BPSPRRX3",218,0)
 N BPSPIEN,BPSCOB,BPSCOV,BPX,BPSCOV,DATA
"RTN","BPSPRRX3",219,0)
 ;
"RTN","BPSPRRX3",220,0)
 ; Other Payer IEN defaults to 1 since we don't do tertiary
"RTN","BPSPRRX3",221,0)
 S BPSPIEN=1,BPSCOB="SECONDARY"
"RTN","BPSPRRX3",222,0)
 ;
"RTN","BPSPRRX3",223,0)
 ; Get Coverage Code
"RTN","BPSPRRX3",224,0)
 S BPSCOV=$G(BPSPRARR("308-C8"))
"RTN","BPSPRRX3",225,0)
 I BPSCOV="02" S BPSCOV="02 (OTHER COVERAGE EXISTS - PAYMENT COLLECTED)"
"RTN","BPSPRRX3",226,0)
 E  I BPSCOV="03" S BPSCOV="03 (OTHER COVERAGE EXISTS - THIS CLAIM NOT COVERED)"
"RTN","BPSPRRX3",227,0)
 E  S BPSCOV="04 (OTHER COVERAGE EXISTS - PAYMENT NOT COLLECTED)"
"RTN","BPSPRRX3",228,0)
 ;
"RTN","BPSPRRX3",229,0)
 ; Write Data
"RTN","BPSPRRX3",230,0)
 W !!,"Data for Secondary Claim"
"RTN","BPSPRRX3",231,0)
 W !,"------------------------"
"RTN","BPSPRRX3",232,0)
 W !,"Insurance:  "_$G(BPSPRARR("INS NAME"))_"    COB: "_BPSCOB
"RTN","BPSPRRX3",233,0)
 W !,"Rate Type:  "_$$GET1^DIQ(399.3,$G(BPSPRARR("RTYPE"))_",",.01,,,,)
"RTN","BPSPRRX3",234,0)
 W !,"Other Coverage Code:  "_BPSCOV
"RTN","BPSPRRX3",235,0)
 W !,"Other Payer Coverage Type:  01 (PRIMARY)"
"RTN","BPSPRRX3",236,0)
 W !,"Other Payer ID Qualifier:  03 (BANK INFORMATION NUMBER (BIN))"
"RTN","BPSPRRX3",237,0)
 W !,"Other Payer ID:  "_$P($G(BPSPRARR("OTHER PAYER",BPSPIEN,0)),U,4)
"RTN","BPSPRRX3",238,0)
 W !,"Other Payer Date:  "_$$FMTE^XLFDT($P($G(BPSPRARR("OTHER PAYER",BPSPIEN,0)),U,5))
"RTN","BPSPRRX3",239,0)
 W !,"Other Payer Reconciliation ID: "_$P($G(BPSPRARR("OTHER PAYER",BPSPIEN,0)),U,11)
"RTN","BPSPRRX3",240,0)
 ;
"RTN","BPSPRRX3",241,0)
 ; Write Paid Amounts if previous claim if they are there
"RTN","BPSPRRX3",242,0)
 I $D(BPSPRARR("OTHER PAYER",BPSPIEN,"P")) D
"RTN","BPSPRRX3",243,0)
 . S BPX=0 F  S BPX=$O(BPSPRARR("OTHER PAYER",BPSPIEN,"P",BPX)) Q:BPX=""  D
"RTN","BPSPRRX3",244,0)
 . . S DATA=BPSPRARR("OTHER PAYER",BPSPIEN,"P",BPX,0)
"RTN","BPSPRRX3",245,0)
 . . W !,"Other Payer Paid Qualifier:  "_$$GET1^DIQ(9002313.2,$P(DATA,U,2),.01)_" ("_$$GET1^DIQ(9002313.2,$P(DATA,U,2),.02)_")"
"RTN","BPSPRRX3",246,0)
 . . W !,"Other Payer Amount Paid:  $"_$FN($P(DATA,U,1),",",2)
"RTN","BPSPRRX3",247,0)
 . . I $P(DATA,U,3)'="" D
"RTN","BPSPRRX3",248,0)
 . . . W !,"Other Payer Patient Resp Amount Qualifier:  06 (AMT REPORTED BY PRIOR PAYER)"
"RTN","BPSPRRX3",249,0)
 . . . W !,"Other Payer Patient Resp Amount:  $"_$FN($P(DATA,U,3),",",2)
"RTN","BPSPRRX3",250,0)
 ;
"RTN","BPSPRRX3",251,0)
 ; Write Reject Codes if previous claims if they are there
"RTN","BPSPRRX3",252,0)
 I $D(BPSPRARR("OTHER PAYER",BPSPIEN,"R")) D
"RTN","BPSPRRX3",253,0)
 . S BPX=0 F  S BPX=$O(BPSPRARR("OTHER PAYER",BPSPIEN,"R",BPX)) Q:BPX=""  D
"RTN","BPSPRRX3",254,0)
 . . W !,"Other Payer Reject Code:  "_$$TRANREJ^BPSECFM($G(BPSPRARR("OTHER PAYER",BPSPIEN,"R",BPX,0)))
"RTN","BPSPRRX3",255,0)
 Q
"RTN","BPSPRRX3",256,0)
 ;
"RTN","BPSPRRX3",257,0)
PROMPT(ZERONODE,PRMTMSG,DFLTVAL,BPSHLP) ;
"RTN","BPSPRRX3",258,0)
 ;prompts for selection
"RTN","BPSPRRX3",259,0)
 ;returns selection
"RTN","BPSPRRX3",260,0)
 ;OR -1 when timeout and uparrow
"RTN","BPSPRRX3",261,0)
 ;
"RTN","BPSPRRX3",262,0)
 N Y,DUOUT,DTOUT,BPQUIT,DIROUT
"RTN","BPSPRRX3",263,0)
 N DIR
"RTN","BPSPRRX3",264,0)
 S DIR(0)=ZERONODE
"RTN","BPSPRRX3",265,0)
 S DIR("A")=PRMTMSG
"RTN","BPSPRRX3",266,0)
 I BPSHLP]"" S DIR("?")=BPSHLP
"RTN","BPSPRRX3",267,0)
 S:$L($G(DFLTVAL))>0 DIR("B")=DFLTVAL
"RTN","BPSPRRX3",268,0)
 D ^DIR
"RTN","BPSPRRX3",269,0)
 I (Y=-1)!$D(DIROUT)!$D(DUOUT)!$D(DTOUT) Q -1
"RTN","BPSPRRX3",270,0)
 Q Y
"RTN","BPSPRRX3",271,0)
 ;
"RTN","BPSPRRX3",272,0)
GETCDLST(VERSION) ; Returns a list of codes by field/version for use in PROMPTS
"RTN","BPSPRRX3",273,0)
 N CSUB,VSUB,ARRAY,X,BPSSET,BPSCD,BPSV,BPSOK
"RTN","BPSPRRX3",274,0)
 S VERSION=$G(VERSION)
"RTN","BPSPRRX3",275,0)
 S VERSION=$S(VERSION=5.1:51,VERSION=51:51,VERSION="D.0":"D0",VERSION="D0":"D0",1:"D0")
"RTN","BPSPRRX3",276,0)
 S BPSSET=""
"RTN","BPSPRRX3",277,0)
 S BPSCD=0 F  S BPSCD=$O(^BPS(9002313.2,BPSCD)) Q:BPSCD=""  D
"RTN","BPSPRRX3",278,0)
 . S (BPSOK,BPSV)=0 F  S BPSV=$O(^BPS(9002313.2,BPSCD,1,BPSV)) Q:BPSV=""  D  Q:BPSOK
"RTN","BPSPRRX3",279,0)
 . . I $P($G(^BPS(9002313.2,BPSCD,1,BPSV,0)),U)=VERSION S BPSOK=1
"RTN","BPSPRRX3",280,0)
 . I BPSOK S ARRAY(BPSCD)=$P(^BPS(9002313.2,BPSCD,0),U,1)_U_$P(^BPS(9002313.2,BPSCD,0),U,2)
"RTN","BPSPRRX3",281,0)
 S X=0 F  S X=$O(ARRAY(X)) Q:X=""  D
"RTN","BPSPRRX3",282,0)
 . S BPSSET=BPSSET_$P(ARRAY(X),U)_":"_$P(ARRAY(X),U,2)_";"
"RTN","BPSPRRX3",283,0)
 Q BPSSET
"RTN","BPSPRRX3",284,0)
 ;
"RTN","BPSPRRX3",285,0)
PAYSHTV(BPSPLAN) ;Get the Billing Payer Sheet version for this plan
"RTN","BPSPRRX3",286,0)
 ; BPSPLAN = IEN to GROUP INSURANCE PLAN file #355.3
"RTN","BPSPRRX3",287,0)
 N BPSPSH,BPSBPSH
"RTN","BPSPRRX3",288,0)
 ; Get Payer Sheets
"RTN","BPSPRRX3",289,0)
 S BPSPSH=$$PLANEPS^IBNCPDPU(BPSPLAN)
"RTN","BPSPRRX3",290,0)
 ; Get Billing Payer Sheet
"RTN","BPSPRRX3",291,0)
 I +BPSPSH S BPSBPSH=$P($P(BPSPSH,"^",2),",")
"RTN","BPSPRRX3",292,0)
 I $G(BPSBPSH)']"" Q ""
"RTN","BPSPRRX3",293,0)
 Q $P(^BPSF(9002313.92,BPSBPSH,1),U,2)
"RTN","BPSPRRX3",294,0)
 ;
"RTN","BPSPRRX3",295,0)
 ;because the set of codes is too long to fit the MUMPS code line - use a special code to populte set of codes
"RTN","BPSPRRX3",296,0)
SET308(BPSSET) ;
"RTN","BPSPRRX3",297,0)
 N BPX,BPZ
"RTN","BPSPRRX3",298,0)
 F BPX=2:1 S BPZ=$P($T(SET308C8+BPX),";;",2) Q:BPZ=""  D
"RTN","BPSPRRX3",299,0)
 . S BPSSET=BPSSET_$P(BPZ,U)_";"
"RTN","BPSPRRX3",300,0)
 Q
"RTN","BPSPRRX3",301,0)
 ;
"RTN","BPSPRRX3",302,0)
SET308C8 ;set of codes for 308-C8
"RTN","BPSPRRX3",303,0)
 ; set of codes
"RTN","BPSPRRX3",304,0)
 ;;00:NOT SPECIFIED BY PATIENT
"RTN","BPSPRRX3",305,0)
 ;;01:NO OTHER COVERAGE IDENTIFIED
"RTN","BPSPRRX3",306,0)
 ;;02:OTHER COVERAGE EXISTS - PAYMENT COLLECTED
"RTN","BPSPRRX3",307,0)
 ;;03:OTHER COVERAGE BILLED - CLAIM NOT COVERED
"RTN","BPSPRRX3",308,0)
 ;;04:OTHER COVERAGE EXISTS - PAYMENT NOT COLLECTED
"RTN","BPSPRRX3",309,0)
 ;;08:CLAIM IS BILLING FOR PATIENT FINANCIAL RESPONSIBILITY ONLY
"RTN","BPSPRRX3",310,0)
 ;;
"RTN","BPSPRRX3",311,0)
 ;
"RTN","BPSPRRX3",312,0)
 ;BPSPRRX3
"RTN","BPSPRRX6")
0^28^B127755081
"RTN","BPSPRRX6",1,0)
BPSPRRX6 ;ALB/SS - ePharmacy secondary billing ;12-DEC-08
"RTN","BPSPRRX6",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**8,10,11,19,23,24**;JUN 2004;Build 43
"RTN","BPSPRRX6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSPRRX6",4,0)
 ;
"RTN","BPSPRRX6",5,0)
 ;
"RTN","BPSPRRX6",6,0)
RXINFO(BPSRX) ;
"RTN","BPSPRRX6",7,0)
 ;Check if if prescription with given number exists
"RTN","BPSPRRX6",8,0)
 ;Input:
"RTN","BPSPRRX6",9,0)
 ;  BPSRX - RX#
"RTN","BPSPRRX6",10,0)
 ;Return:
"RTN","BPSPRRX6",11,0)
 ;  1st piece - ien of #52
"RTN","BPSPRRX6",12,0)
 ;  2nd piece - ien of #2
"RTN","BPSPRRX6",13,0)
 ;  -1 if "^" was entered
"RTN","BPSPRRX6",14,0)
 ;
"RTN","BPSPRRX6",15,0)
 N BPSDFN,BPS52,BPSRET
"RTN","BPSPRRX6",16,0)
 ;prompt for the patient
"RTN","BPSPRRX6",17,0)
 S BPSDFN=$$PROMPT^BPSSCRCV("P^DPT(","SELECT PATIENT")
"RTN","BPSPRRX6",18,0)
 I BPSDFN=-1 Q -1
"RTN","BPSPRRX6",19,0)
 K ^TMP($J,"BPSPRRX")
"RTN","BPSPRRX6",20,0)
 D RX^PSO52API(BPSDFN,"BPSPRRX",,BPSRX,"0")
"RTN","BPSPRRX6",21,0)
 I +$G(^TMP($J,"BPSPRRX",BPSDFN,0))=-1 D  Q 0
"RTN","BPSPRRX6",22,0)
 . W !,"Incorrect RX# or patient name entered.",!
"RTN","BPSPRRX6",23,0)
 S BPSRET=+$O(^TMP($J,"BPSPRRX",BPSDFN,0))_U_BPSDFN
"RTN","BPSPRRX6",24,0)
 K ^TMP($J,"BPSPRRX")
"RTN","BPSPRRX6",25,0)
 Q BPSRET
"RTN","BPSPRRX6",26,0)
 ;
"RTN","BPSPRRX6",27,0)
RXREFIL(BPS52,BPSDFN,BPSRXNO) ;
"RTN","BPSPRRX6",28,0)
 ; Prompt for the fill# and do the rest
"RTN","BPSPRRX6",29,0)
 ;
"RTN","BPSPRRX6",30,0)
 N BPSRF,BPSARR,BPSVAL,BPSELCTD,BPSRETV,BPORRFDT
"RTN","BPSPRRX6",31,0)
 K ^TMP($J,"BPSPRRX")
"RTN","BPSPRRX6",32,0)
 D RX^PSO52API(BPSDFN,"BPSPRRX",BPS52,,"R")
"RTN","BPSPRRX6",33,0)
 I +$G(^TMP($J,"BPSPRRX",BPSDFN,BPS52,"RF",0))=0 Q 0
"RTN","BPSPRRX6",34,0)
 S BPSRF=0
"RTN","BPSPRRX6",35,0)
 F  S BPSRF=$O(^TMP($J,"BPSPRRX",BPSDFN,BPS52,"RF",BPSRF)) Q:+BPSRF=0  D
"RTN","BPSPRRX6",36,0)
 . S BPSVAL=$G(^TMP($J,"BPSPRRX",BPSDFN,BPS52,"RF",BPSRF,.01))
"RTN","BPSPRRX6",37,0)
 . S BPSARR(BPSRF)=BPSRF_U_$P(BPSVAL,U)
"RTN","BPSPRRX6",38,0)
 ;original fill date
"RTN","BPSPRRX6",39,0)
 S BPORRFDT=$$RXFLDT^PSOBPSUT(BPS52,0)
"RTN","BPSPRRX6",40,0)
 S BPSARR(0)=0_U_BPORRFDT
"RTN","BPSPRRX6",41,0)
 F  S BPSELCTD=$$SELREFIL^BPSPRRX5(.BPSARR,"SELECT A FILL TO BILL","RX #"_BPSRXNO_" has the following fills:") Q:$P(BPSELCTD,U)'=""
"RTN","BPSPRRX6",42,0)
 I BPSELCTD<0 Q -1
"RTN","BPSPRRX6",43,0)
 Q BPSELCTD
"RTN","BPSPRRX6",44,0)
 ;
"RTN","BPSPRRX6",45,0)
SECBIL59(MOREDATA,IEN59) ;
"RTN","BPSPRRX6",46,0)
 ; Populate secondary billing fields in BPS TRANSACTION
"RTN","BPSPRRX6",47,0)
 ; MOREDATA array filed into 9002313.59
"RTN","BPSPRRX6",48,0)
 N BPTYPE,BPSTIME,BPCOB
"RTN","BPSPRRX6",49,0)
 N AMTIEN,BPIEN1,BPIEN2,BPZ5914,BPZ,BPZ1,BPZ2,OPAMT,OPAPQ,OPAYD,OPPRA,OPREJ,PIEN,REJIEN,BPQ
"RTN","BPSPRRX6",50,0)
 I +$G(IEN59)=0 Q
"RTN","BPSPRRX6",51,0)
 ;
"RTN","BPSPRRX6",52,0)
 I $L($G(MOREDATA("337-4C"))) I $$FILLFLDS^BPSUTIL2(9002313.59,1204,IEN59,MOREDATA("337-4C"))<1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#1204) of (#9002313.59)")   ; cob other payments count
"RTN","BPSPRRX6",53,0)
 I $L($G(MOREDATA("308-C8"))) I $$FILLFLDS^BPSUTIL2(9002313.59,1205,IEN59,MOREDATA("308-C8"))<1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#1205) of (#9002313.59)")   ; other coverage code
"RTN","BPSPRRX6",54,0)
 ;
"RTN","BPSPRRX6",55,0)
 ; store secondary billing related data entered by the user - esg 6/14/10
"RTN","BPSPRRX6",56,0)
 S BPQ=0
"RTN","BPSPRRX6",57,0)
 S PIEN=0 F  S PIEN=$O(MOREDATA("OTHER PAYER",PIEN)) Q:'PIEN!BPQ  D
"RTN","BPSPRRX6",58,0)
 . S OPAYD=$G(MOREDATA("OTHER PAYER",PIEN,0)) Q:OPAYD=""
"RTN","BPSPRRX6",59,0)
 . ;
"RTN","BPSPRRX6",60,0)
 . ; count up the number of multiples we have in each set
"RTN","BPSPRRX6",61,0)
 . S BPZ=0 F BPZ1=0:1 S BPZ=$O(MOREDATA("OTHER PAYER",PIEN,"P",BPZ)) Q:'BPZ
"RTN","BPSPRRX6",62,0)
 . S BPZ=0 F BPZ2=0:1 S BPZ=$O(MOREDATA("OTHER PAYER",PIEN,"R",BPZ)) Q:'BPZ
"RTN","BPSPRRX6",63,0)
 . I BPZ1,BPZ2 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot have both payments and rejects for the same OTHER PAYER.") Q
"RTN","BPSPRRX6",64,0)
 . ;
"RTN","BPSPRRX6",65,0)
 . ; add a new entry to subfile 9002313.5914
"RTN","BPSPRRX6",66,0)
 . S BPZ5914=$$INSITEM^BPSUTIL2(9002313.5914,IEN59,PIEN,PIEN,"",,0)
"RTN","BPSPRRX6",67,0)
 . I BPZ5914<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Can't create entry in COB OTHER PAYERS multiple of the BPS TRANSACTION file") Q
"RTN","BPSPRRX6",68,0)
 . ;
"RTN","BPSPRRX6",69,0)
 . ; set the rest of the pieces at this level
"RTN","BPSPRRX6",70,0)
 . I $P(OPAYD,U,2)'="" I $$FILLFLDS^BPSUTIL2(9002313.5914,.02,PIEN_","_IEN59,$P(OPAYD,U,2))<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.02) of (#9002313.5914)") Q
"RTN","BPSPRRX6",71,0)
 . I $P(OPAYD,U,3)'="" I $$FILLFLDS^BPSUTIL2(9002313.5914,.03,PIEN_","_IEN59,$P(OPAYD,U,3))<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.03) of (#9002313.5914)") Q
"RTN","BPSPRRX6",72,0)
 . I $P(OPAYD,U,4)'="" I $$FILLFLDS^BPSUTIL2(9002313.5914,.04,PIEN_","_IEN59,$P(OPAYD,U,4))<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.04) of (#9002313.5914)") Q
"RTN","BPSPRRX6",73,0)
 . I $P(OPAYD,U,5)'="" I $$FILLFLDS^BPSUTIL2(9002313.5914,.05,PIEN_","_IEN59,$P(OPAYD,U,5))<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.05) of (#9002313.5914)") Q
"RTN","BPSPRRX6",74,0)
 . I $$FILLFLDS^BPSUTIL2(9002313.5914,.06,PIEN_","_IEN59,BPZ1)<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.06) of (#9002313.5914)") Q
"RTN","BPSPRRX6",75,0)
 . I $$FILLFLDS^BPSUTIL2(9002313.5914,.07,PIEN_","_IEN59,BPZ2)<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.07) of (#9002313.5914)") Q
"RTN","BPSPRRX6",76,0)
 . I $P(OPAYD,U,11)'="" I $$FILLFLDS^BPSUTIL2(9002313.5914,.11,PIEN_","_IEN59,$P(OPAYD,U,11))<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.11) of (#9002313.5914)") Q
"RTN","BPSPRRX6",77,0)
 . ;
"RTN","BPSPRRX6",78,0)
 . ; now loop thru the other payer payment array
"RTN","BPSPRRX6",79,0)
 . S AMTIEN=0 F  S AMTIEN=$O(MOREDATA("OTHER PAYER",PIEN,"P",AMTIEN)) Q:'AMTIEN!BPQ  D
"RTN","BPSPRRX6",80,0)
 .. S OPAMT=$G(MOREDATA("OTHER PAYER",PIEN,"P",AMTIEN,0))
"RTN","BPSPRRX6",81,0)
 .. S OPAPQ=$P(OPAMT,U,2)   ; 342-HC other payer amt paid qualifier (ncpdp 5.1 blank is OK)
"RTN","BPSPRRX6",82,0)
 .. S OPPRA=$P(OPAMT,U,3)   ; 352-NQ, Other Payer-Patient Responsibility Amount
"RTN","BPSPRRX6",83,0)
 .. S OPAMT=+OPAMT          ; 431-DV other payer amt paid
"RTN","BPSPRRX6",84,0)
 .. ;
"RTN","BPSPRRX6",85,0)
 .. ; add a new entry to subfile 9002313.59141
"RTN","BPSPRRX6",86,0)
 .. S BPIEN1=$$INSITEM^BPSUTIL2(9002313.59141,PIEN_","_IEN59,OPAMT,AMTIEN,"",,0)
"RTN","BPSPRRX6",87,0)
 .. I BPIEN1<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Can't create entry in 9002313.59141 subfile") Q
"RTN","BPSPRRX6",88,0)
 .. ;
"RTN","BPSPRRX6",89,0)
 .. ; set piece 2
"RTN","BPSPRRX6",90,0)
 .. I OPAPQ'="" I $$FILLFLDS^BPSUTIL2(9002313.59141,.02,AMTIEN_","_PIEN_","_IEN59,OPAPQ)<1 D
"RTN","BPSPRRX6",91,0)
 ... S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.02) of (#9002313.59141)")
"RTN","BPSPRRX6",92,0)
 ... Q
"RTN","BPSPRRX6",93,0)
 .. ;
"RTN","BPSPRRX6",94,0)
 .. ; set piece 3
"RTN","BPSPRRX6",95,0)
 .. I OPPRA'="" I $$FILLFLDS^BPSUTIL2(9002313.59141,.03,AMTIEN_","_PIEN_","_IEN59,OPPRA)<1 D
"RTN","BPSPRRX6",96,0)
 ... S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Cannot populate (#.03) of (#9002313.59141)")
"RTN","BPSPRRX6",97,0)
 ... Q
"RTN","BPSPRRX6",98,0)
 .. ;
"RTN","BPSPRRX6",99,0)
 .. Q
"RTN","BPSPRRX6",100,0)
 . ;
"RTN","BPSPRRX6",101,0)
 . ; now loop thru the other payer reject array
"RTN","BPSPRRX6",102,0)
 . S REJIEN=0 F  S REJIEN=$O(MOREDATA("OTHER PAYER",PIEN,"R",REJIEN)) Q:'REJIEN!BPQ  D
"RTN","BPSPRRX6",103,0)
 .. S OPREJ=$G(MOREDATA("OTHER PAYER",PIEN,"R",REJIEN,0)) Q:OPREJ=""  Q:$P(OPREJ,U,1)=""
"RTN","BPSPRRX6",104,0)
 .. ;
"RTN","BPSPRRX6",105,0)
 .. ; add a new entry to subfile 9002313.59142
"RTN","BPSPRRX6",106,0)
 .. S BPIEN2=$$INSITEM^BPSUTIL2(9002313.59142,PIEN_","_IEN59,$P(OPREJ,U,1),REJIEN,"",,0)
"RTN","BPSPRRX6",107,0)
 .. I BPIEN2<1 S BPQ=1 D LOG^BPSOSL(IEN59,$T(+0)_"-Can't create entry in 9002313.59142 subfile") Q
"RTN","BPSPRRX6",108,0)
 .. Q
"RTN","BPSPRRX6",109,0)
 . Q
"RTN","BPSPRRX6",110,0)
 Q
"RTN","BPSPRRX6",111,0)
 ;
"RTN","BPSPRRX6",112,0)
SECDATA(RX,FILL,BPSPLAN,BPSPRDAT,BPSRTYPE) ;
"RTN","BPSPRRX6",113,0)
 ;Populate array elements to resubmit SECONDARY claim.  This builds the COB data using
"RTN","BPSPRRX6",114,0)
 ;  the secondary claim that was previously submitted.
"RTN","BPSPRRX6",115,0)
 ;This will be called by the PRO option (BPSPRRX, BPSPRRX5) and Resubmit with Edits (BPSRES)
"RTN","BPSPRRX6",116,0)
 ;  if it cannot build the COB claim data from the primary claim, which will only happen
"RTN","BPSPRRX6",117,0)
 ;  if the primary claim is missing (primary claim was paper).
"RTN","BPSPRRX6",118,0)
 ;This is also called by BPSNCPDP when the secondary data is missing.  I believe that this
"RTN","BPSPRRX6",119,0)
 ;  will only happen for a Resubmit (RES) from the ECME User Screen.  For this process, we
"RTN","BPSPRRX6",120,0)
 ;  also need to compile the PRIMARY BILL, insurance plan, and rate type.
"RTN","BPSPRRX6",121,0)
 ;
"RTN","BPSPRRX6",122,0)
 ;Input:
"RTN","BPSPRRX6",123,0)
 ;  RX - Prescription (#52) IEN
"RTN","BPSPRRX6",124,0)
 ;  FILL - Fill Number
"RTN","BPSPRRX6",125,0)
 ;  BPSPLAN - Plan (#355.3) IEN, by reference
"RTN","BPSPRRX6",126,0)
 ;  BPSPRDAT - Array with secondary data, by reference
"RTN","BPSPRRX6",127,0)
 ;  BPSRTYPE - Rate Type (#399.3) IEN, by reference
"RTN","BPSPRRX6",128,0)
 ;Output:
"RTN","BPSPRRX6",129,0)
 ;  1 - Success
"RTN","BPSPRRX6",130,0)
 ;  0 - Cannot populate array
"RTN","BPSPRRX6",131,0)
 ;
"RTN","BPSPRRX6",132,0)
 N IEN59SEC,BPBILL
"RTN","BPSPRRX6",133,0)
 I '$G(RX) Q 0
"RTN","BPSPRRX6",134,0)
 I $G(FILL)="" Q 0
"RTN","BPSPRRX6",135,0)
 ;
"RTN","BPSPRRX6",136,0)
 ; Get Transaction IENs for the secondary transaction
"RTN","BPSPRRX6",137,0)
 S IEN59SEC=$$IEN59^BPSOSRX(RX,FILL,2)
"RTN","BPSPRRX6",138,0)
 ;
"RTN","BPSPRRX6",139,0)
 ; Get Primary Bill for the secondary claim
"RTN","BPSPRRX6",140,0)
 S BPBILL=$$PAYBLPRI^BPSUTIL2(IEN59SEC)
"RTN","BPSPRRX6",141,0)
 I BPBILL>0 S BPSPRDAT("PRIMARY BILL")=BPBILL
"RTN","BPSPRRX6",142,0)
 ;
"RTN","BPSPRRX6",143,0)
 ; Get Plan, Rate Type, and Prior Payment from the secondary transaction
"RTN","BPSPRRX6",144,0)
 S BPSPLAN=+$P($G(^BPST(IEN59SEC,10,1,0)),U,1)
"RTN","BPSPRRX6",145,0)
 S BPSRTYPE=+$P($G(^BPST(IEN59SEC,10,1,0)),U,8)
"RTN","BPSPRRX6",146,0)
 S BPSPRDAT("PRIOR PAYMENT")=$P($G(^BPST(IEN59SEC,10,1,2)),U,9)
"RTN","BPSPRRX6",147,0)
 ;
"RTN","BPSPRRX6",148,0)
 ; Build array of COB secondary claim data from the BPS Transaction file - esg - 6/14/10
"RTN","BPSPRRX6",149,0)
 S BPSPRDAT("337-4C")=$P($G(^BPST(IEN59SEC,12)),U,4)  ;1204 cob other payments count
"RTN","BPSPRRX6",150,0)
 S BPSPRDAT("308-C8")=$P($G(^BPST(IEN59SEC,12)),U,5)  ;1205 other coverage code
"RTN","BPSPRRX6",151,0)
 ;
"RTN","BPSPRRX6",152,0)
 ; Build COB data array - esg - 6/14/10
"RTN","BPSPRRX6",153,0)
 N COBPIEN,APDIEN,REJIEN
"RTN","BPSPRRX6",154,0)
 K BPSPRDAT("OTHER PAYER")
"RTN","BPSPRRX6",155,0)
 S COBPIEN=0 F  S COBPIEN=$O(^BPST(IEN59SEC,14,COBPIEN)) Q:'COBPIEN  D
"RTN","BPSPRRX6",156,0)
 . S BPSPRDAT("OTHER PAYER",COBPIEN,0)=$G(^BPST(IEN59SEC,14,COBPIEN,0))
"RTN","BPSPRRX6",157,0)
 . ;
"RTN","BPSPRRX6",158,0)
 . ; Retrieve data from other payer amount paid multiple
"RTN","BPSPRRX6",159,0)
 . S APDIEN=0 F  S APDIEN=$O(^BPST(IEN59SEC,14,COBPIEN,1,APDIEN)) Q:'APDIEN  D
"RTN","BPSPRRX6",160,0)
 .. S BPSPRDAT("OTHER PAYER",COBPIEN,"P",APDIEN,0)=$G(^BPST(IEN59SEC,14,COBPIEN,1,APDIEN,0))
"RTN","BPSPRRX6",161,0)
 .. Q
"RTN","BPSPRRX6",162,0)
 . ;
"RTN","BPSPRRX6",163,0)
 . ; Retrieve data from other payer reject multiple
"RTN","BPSPRRX6",164,0)
 . S REJIEN=0 F  S REJIEN=$O(^BPST(IEN59SEC,14,COBPIEN,2,REJIEN)) Q:'REJIEN  D
"RTN","BPSPRRX6",165,0)
 .. S BPSPRDAT("OTHER PAYER",COBPIEN,"R",REJIEN,0)=$G(^BPST(IEN59SEC,14,COBPIEN,2,REJIEN,0))
"RTN","BPSPRRX6",166,0)
 .. Q
"RTN","BPSPRRX6",167,0)
 . Q
"RTN","BPSPRRX6",168,0)
 Q 1
"RTN","BPSPRRX6",169,0)
 ;
"RTN","BPSPRRX6",170,0)
PRIMDATA(RX,FILL,COBARRAY) ;
"RTN","BPSPRRX6",171,0)
 ; Build COB data from primary claim and response
"RTN","BPSPRRX6",172,0)
 ; This is called by PRO option (BPSPRRX, BPSPRRX5) and Resubmit with Edits (BPSRES)
"RTN","BPSPRRX6",173,0)
 ; 
"RTN","BPSPRRX6",174,0)
 ; Input:
"RTN","BPSPRRX6",175,0)
 ;   RX - Prescription IEN
"RTN","BPSPRRX6",176,0)
 ;   FILL - Fill Number
"RTN","BPSPRRX6",177,0)
 ;   COBARRAY - Array that will be build, passed by reference
"RTN","BPSPRRX6",178,0)
 ; Return:
"RTN","BPSPRRX6",179,0)
 ;   0 = Invalid data (transactions, claim, or response is missing)
"RTN","BPSPRRX6",180,0)
 ;   1 = Valid data
"RTN","BPSPRRX6",181,0)
 ;
"RTN","BPSPRRX6",182,0)
 I '$G(RX) Q 0
"RTN","BPSPRRX6",183,0)
 I $G(FILL)="" Q 0
"RTN","BPSPRRX6",184,0)
 N IEN59PR,BPSIEN,BPSCLM,BPSRESP,BPSSTAT,BIN,BPSOPDT,BPX,BPSPIEN,CNT
"RTN","BPSPRRX6",185,0)
 N BPSRECID
"RTN","BPSPRRX6",186,0)
 ;
"RTN","BPSPRRX6",187,0)
 ; Get primary transaction and check that is exists
"RTN","BPSPRRX6",188,0)
 S IEN59PR=$$IEN59^BPSOSRX(RX,FILL,1)
"RTN","BPSPRRX6",189,0)
 I '$D(^BPST(IEN59PR)) Q 0
"RTN","BPSPRRX6",190,0)
 ;
"RTN","BPSPRRX6",191,0)
 ; Get Claim and Response and make sure they both exist
"RTN","BPSPRRX6",192,0)
 S BPSCLM=+$P($G(^BPST(IEN59PR,0)),U,4)
"RTN","BPSPRRX6",193,0)
 I BPSCLM=0 Q 0
"RTN","BPSPRRX6",194,0)
 I '$D(^BPSC(BPSCLM)) Q 0
"RTN","BPSPRRX6",195,0)
 S BPSRESP=+$P($G(^BPST(IEN59PR,0)),U,5)
"RTN","BPSPRRX6",196,0)
 I BPSRESP=0 Q 0
"RTN","BPSPRRX6",197,0)
 I '$D(^BPSR(BPSRESP)) Q 0
"RTN","BPSPRRX6",198,0)
 ;
"RTN","BPSPRRX6",199,0)
 ; Get status of primary transaction
"RTN","BPSPRRX6",200,0)
 S BPSSTAT=$P($$STATUS^BPSOSRX(RX,FILL,,,1),U)
"RTN","BPSPRRX6",201,0)
 ;
"RTN","BPSPRRX6",202,0)
 ; If the primary claim is payable, get the PRIOR PAYMENT from the primary Response record
"RTN","BPSPRRX6",203,0)
 S COBARRAY("PRIOR PAYMENT")=""
"RTN","BPSPRRX6",204,0)
 I $$PAYABLE^BPSOSRX5(BPSSTAT),BPSRESP S COBARRAY("PRIOR PAYMENT")=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,500)),U,9))
"RTN","BPSPRRX6",205,0)
 ;
"RTN","BPSPRRX6",206,0)
 ; Get Coverage Code
"RTN","BPSPRRX6",207,0)
 I $G(COBARRAY("PRIOR PAYMENT"))>0 S COBARRAY("308-C8")="02"
"RTN","BPSPRRX6",208,0)
 E  I BPSSTAT["E REJECTED" S COBARRAY("308-C8")="03"
"RTN","BPSPRRX6",209,0)
 E  S COBARRAY("308-C8")="04"
"RTN","BPSPRRX6",210,0)
 ;
"RTN","BPSPRRX6",211,0)
 ; Get BIN from the primary claim record
"RTN","BPSPRRX6",212,0)
 S BIN=""
"RTN","BPSPRRX6",213,0)
 I BPSCLM S BIN=$P($G(^BPSC(BPSCLM,100)),U)
"RTN","BPSPRRX6",214,0)
 ;
"RTN","BPSPRRX6",215,0)
 ; Get the Other Payer Date in internal format from the primary Response record
"RTN","BPSPRRX6",216,0)
 S BPSOPDT=""
"RTN","BPSPRRX6",217,0)
 I BPSRESP S BPSOPDT=($P($G(^BPSR(BPSRESP,0)),U,2))\1
"RTN","BPSPRRX6",218,0)
 ;
"RTN","BPSPRRX6",219,0)
 ; Default the Other Payer IEN 1 since we only do secondary
"RTN","BPSPRRX6",220,0)
 S BPSPIEN=1
"RTN","BPSPRRX6",221,0)
 S COBARRAY("337-4C")=BPSPIEN ; Other Payer Count
"RTN","BPSPRRX6",222,0)
 ;
"RTN","BPSPRRX6",223,0)
 ; Set array of Other Payer Data
"RTN","BPSPRRX6",224,0)
 K COBARRAY("OTHER PAYER")
"RTN","BPSPRRX6",225,0)
 S COBARRAY("OTHER PAYER",BPSPIEN,0)="1^01^03^"_BIN_"^"_BPSOPDT_"^0^0"
"RTN","BPSPRRX6",226,0)
 ; Add Reconciliation ID to Other Payer Data, transmit on Secondary
"RTN","BPSPRRX6",227,0)
 ; claim as Other Payer Reconciliation ID
"RTN","BPSPRRX6",228,0)
 S BPSRECID=$$ANFF^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,"B98")),U,1),30)
"RTN","BPSPRRX6",229,0)
 I BPSRECID'="" S $P(COBARRAY("OTHER PAYER",BPSPIEN,0),"^",11)=BPSRECID
"RTN","BPSPRRX6",230,0)
 ;
"RTN","BPSPRRX6",231,0)
 ; Build Paid Amounts if previous claim was paid
"RTN","BPSPRRX6",232,0)
 I BPSSTAT["E PAYABLE",$G(COBARRAY("PRIOR PAYMENT"))]"" D
"RTN","BPSPRRX6",233,0)
 . N BPARR,BPX D GETOPAP(BPSRESP,.BPARR)
"RTN","BPSPRRX6",234,0)
 . S BPX=0 F CNT=0:1  S BPX=$O(BPARR(BPX)) Q:BPX=""  S COBARRAY("OTHER PAYER",BPSPIEN,"P",BPX,0)=BPARR(BPX)
"RTN","BPSPRRX6",235,0)
 . S $P(COBARRAY("OTHER PAYER",BPSPIEN,0),U,6)=CNT
"RTN","BPSPRRX6",236,0)
 ;
"RTN","BPSPRRX6",237,0)
 ; Build Reject Codes if previous claims was rejected
"RTN","BPSPRRX6",238,0)
 I BPSSTAT["E REJECTED" D
"RTN","BPSPRRX6",239,0)
 . N BPARR,BPX D GETRJCOD(BPSRESP,.BPARR)
"RTN","BPSPRRX6",240,0)
 . S BPX=0 F CNT=0:1  S BPX=$O(BPARR(BPX)) Q:BPX=""  S COBARRAY("OTHER PAYER",BPSPIEN,"R",BPX,0)=BPARR(BPX)
"RTN","BPSPRRX6",241,0)
 . S $P(COBARRAY("OTHER PAYER",BPSPIEN,0),U,7)=CNT
"RTN","BPSPRRX6",242,0)
 Q 1
"RTN","BPSPRRX6",243,0)
 ;
"RTN","BPSPRRX6",244,0)
GETOPAP(BPSRESP,BPSDAT) ;
"RTN","BPSPRRX6",245,0)
 ; Get the Other Payer Amount Paid values and qualifiers
"RTN","BPSPRRX6",246,0)
 ; Input:
"RTN","BPSPRRX6",247,0)
 ;   BPSRESP = IEN of BPS RESPONSE file
"RTN","BPSPRRX6",248,0)
 ;   BPSDAT(N) = Array of Other Payer fields (passed by reference)
"RTN","BPSPRRX6",249,0)
 ;       [1] Patient Pay Amount
"RTN","BPSPRRX6",250,0)
 ;       [2] Qualifier
"RTN","BPSPRRX6",251,0)
 ;       [3] Other Payer Patient Responsibility Amount
"RTN","BPSPRRX6",252,0)
 ;
"RTN","BPSPRRX6",253,0)
 I '$G(BPSRESP) Q
"RTN","BPSPRRX6",254,0)
 I '$D(^BPSR(BPSRESP,1000)) Q
"RTN","BPSPRRX6",255,0)
 N CNT,BPS505,BPS509,BPS559,BPS558,BPS523,BPS563,BPS562,BPS521,BPSQUAL,BPSAMNT,BPSTAX,BPSOAP,BPSX
"RTN","BPSPRRX6",256,0)
 S CNT=0
"RTN","BPSPRRX6",257,0)
 ; Set up D.0 fields for COB segment
"RTN","BPSPRRX6",258,0)
 S BPS509=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,500)),U,9))
"RTN","BPSPRRX6",259,0)
 ; If Total Amount Paid is a negative number, set it to zero.
"RTN","BPSPRRX6",260,0)
 ; Zero Pay amount is allowed
"RTN","BPSPRRX6",261,0)
 I BPS509<0 S BPS509=0
"RTN","BPSPRRX6",262,0)
 ;
"RTN","BPSPRRX6",263,0)
 ; Cognitive Services Qualifier/Professional Service Fee Paid
"RTN","BPSPRRX6",264,0)
 S BPS562=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,560)),U,2))
"RTN","BPSPRRX6",265,0)
 I BPS562<0 S BPS562=0
"RTN","BPSPRRX6",266,0)
 I +BPS562 S CNT=CNT+1,BPSDAT(CNT)=BPS562_U_"06"
"RTN","BPSPRRX6",267,0)
 ;
"RTN","BPSPRRX6",268,0)
 ; Incentive Qualifier/Incentive Amt Paid
"RTN","BPSPRRX6",269,0)
 S BPS521=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,500)),U,21))
"RTN","BPSPRRX6",270,0)
 I BPS521<0 S BPS521=0
"RTN","BPSPRRX6",271,0)
 I +BPS521 S CNT=CNT+1,BPSDAT(CNT)=BPS521_U_"05"
"RTN","BPSPRRX6",272,0)
 ; Subtract Incentive Qualifier from Paid Amount for Drug Benefit
"RTN","BPSPRRX6",273,0)
 S BPS509=BPS509-BPS521
"RTN","BPSPRRX6",274,0)
 ;
"RTN","BPSPRRX6",275,0)
 ; Default all Tax values to zero for negative values
"RTN","BPSPRRX6",276,0)
 S BPS559=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,550)),U,9)) ; Percentage Sales Tax Paid
"RTN","BPSPRRX6",277,0)
 I BPS559<0 S BPS559=0
"RTN","BPSPRRX6",278,0)
 S BPS558=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,550)),U,8)) ; Flat Sales Tax Paid
"RTN","BPSPRRX6",279,0)
 I BPS558<0 S BPS558=0
"RTN","BPSPRRX6",280,0)
 S BPS523=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,500)),U,23)) ; Amount Attributed to Sales Tax
"RTN","BPSPRRX6",281,0)
 I BPS523<0 S BPS523=0
"RTN","BPSPRRX6",282,0)
 ;
"RTN","BPSPRRX6",283,0)
 ; Sales Tax Qualifier
"RTN","BPSPRRX6",284,0)
 S BPSTAX=BPS559+BPS558-BPS523
"RTN","BPSPRRX6",285,0)
 I BPSTAX<0 S BPSTAX=0
"RTN","BPSPRRX6",286,0)
 I +BPSTAX S CNT=CNT+1,BPSDAT(CNT)=BPSTAX_U_"10"
"RTN","BPSPRRX6",287,0)
 ; Subtract Sales Tax Qualifier from Paid Amount for Drug Benefit
"RTN","BPSPRRX6",288,0)
 S BPS509=BPS509-BPSTAX
"RTN","BPSPRRX6",289,0)
 ;
"RTN","BPSPRRX6",290,0)
 ; Set OTHER AMOUNT PAID multiples
"RTN","BPSPRRX6",291,0)
 S BPS563=0 F  S BPS563=$O(^BPSR(BPSRESP,1000,1,563.01,BPS563)) Q:BPS563=""  D
"RTN","BPSPRRX6",292,0)
 . S BPSQUAL=$P($G(^BPSR(BPSRESP,1000,1,563.01,BPS563,1)),U,1)
"RTN","BPSPRRX6",293,0)
 . ; Quit if qualifier = 99 since there is no NCPDP mapping for this qualifier
"RTN","BPSPRRX6",294,0)
 . Q:BPSQUAL']""!(BPSQUAL=99)
"RTN","BPSPRRX6",295,0)
 . S BPSAMNT=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,563.01,BPS563,1)),U,2))
"RTN","BPSPRRX6",296,0)
 . ; Default negative amounts to zero
"RTN","BPSPRRX6",297,0)
 . I BPSAMNT<0 S BPSAMNT=0
"RTN","BPSPRRX6",298,0)
 . I $D(BPSOAP(BPSQUAL)) S BPSOAP(BPSQUAL)=BPSOAP(BPSQUAL)+BPSAMNT
"RTN","BPSPRRX6",299,0)
 . I '$D(BPSOAP(BPSQUAL)) S BPSOAP(BPSQUAL)=BPSAMNT
"RTN","BPSPRRX6",300,0)
 . ; Subtract Amount if Qualifier is 01, 02, 03, 04, 09 or 11
"RTN","BPSPRRX6",301,0)
 . I "010203040911"[BPSQUAL S BPS509=BPS509-BPSAMNT
"RTN","BPSPRRX6",302,0)
 I $D(BPSOAP) D
"RTN","BPSPRRX6",303,0)
 . S BPSX="" F  S BPSX=$O(BPSOAP(BPSX)) Q:BPSX=""  D
"RTN","BPSPRRX6",304,0)
 . . S CNT=CNT+1,BPSDAT(CNT)=BPSOAP(BPSX)_U_$$GETPDIEN(BPSX)
"RTN","BPSPRRX6",305,0)
 ; Set Drug Benefit Qualifier
"RTN","BPSPRRX6",306,0)
 I BPS509<0 S BPS509=0
"RTN","BPSPRRX6",307,0)
 ; Set Patient Pay Amount
"RTN","BPSPRRX6",308,0)
 S BPS505=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,500)),U,5))
"RTN","BPSPRRX6",309,0)
 ;
"RTN","BPSPRRX6",310,0)
 S CNT=CNT+1,BPSDAT(CNT)=BPS509_U_$$GETPDIEN("07")_U_BPS505
"RTN","BPSPRRX6",311,0)
 Q
"RTN","BPSPRRX6",312,0)
 ;
"RTN","BPSPRRX6",313,0)
GETPDIEN(CODE) ;
"RTN","BPSPRRX6",314,0)
 ; Get the Other Payer Amount Paid Qualifier IEN for BPS NCPCP OTHER
"RTN","BPSPRRX6",315,0)
 ;   PAYER AMOUNT PAID QUAL file
"RTN","BPSPRRX6",316,0)
 I $G(CODE)="" Q ""
"RTN","BPSPRRX6",317,0)
 Q $O(^BPS(9002313.2,"B",CODE,""))
"RTN","BPSPRRX6",318,0)
 ;
"RTN","BPSPRRX6",319,0)
GETRJCOD(BPRESP,BPARR) ;
"RTN","BPSPRRX6",320,0)
 ; Get the first five reject codes w/o getting duplicates
"RTN","BPSPRRX6",321,0)
 ; Input:
"RTN","BPSPRRX6",322,0)
 ;   BPSRESP = IEN of BPS RESPONSE file
"RTN","BPSPRRX6",323,0)
 ;   BPSARR1 = Array of Reject Codes
"RTN","BPSPRRX6",324,0)
 ;
"RTN","BPSPRRX6",325,0)
 I '$G(BPRESP) Q
"RTN","BPSPRRX6",326,0)
 I '$D(^BPSR(BPRESP,1000)) Q
"RTN","BPSPRRX6",327,0)
 N BPRCNT,BPRJ,BPPOS,BPRJCOD
"RTN","BPSPRRX6",328,0)
 ;
"RTN","BPSPRRX6",329,0)
 ; Default BPPOS to the first transaction in the RESPONSE multiple
"RTN","BPSPRRX6",330,0)
 ; We only want the first five reject codes and no duplicates
"RTN","BPSPRRX6",331,0)
 S (BPRCNT,BPRJ)=0,BPPOS=1
"RTN","BPSPRRX6",332,0)
 F  S BPRJ=$O(^BPSR(BPRESP,1000,BPPOS,511,BPRJ)) Q:+BPRJ=0  D  Q:BPRCNT>4
"RTN","BPSPRRX6",333,0)
 . S BPRJCOD=$P($G(^BPSR(BPRESP,1000,BPPOS,511,BPRJ,0)),U)
"RTN","BPSPRRX6",334,0)
 . Q:$L(BPRJCOD)=0
"RTN","BPSPRRX6",335,0)
 . ; Only store if not a duplicate
"RTN","BPSPRRX6",336,0)
 . I '$D(BPARR(BPRJCOD)) S BPRCNT=BPRCNT+1,BPARR(BPRCNT)=BPRJCOD
"RTN","BPSPRRX6",337,0)
 Q
"RTN","BPSPRRX6",338,0)
 ;BPSPRRX6
"RTN","BPSPSOU1")
0^15^B15624922
"RTN","BPSPSOU1",1,0)
BPSPSOU1 ;ALB/CFS - ECME VALIDATIONS FOR REVERSE AND RESUBMIT CALLED FROM OUTPATIENT PHARMACY ;15-OCT-05
"RTN","BPSPSOU1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**20,24**;JUN 2004;Build 43
"RTN","BPSPSOU1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSPSOU1",4,0)
 ; Reference to $$LSTRFL^PSOBPSU1 supported by IA #4702.
"RTN","BPSPSOU1",5,0)
 ;
"RTN","BPSPSOU1",6,0)
 Q
"RTN","BPSPSOU1",7,0)
 ;
"RTN","BPSPSOU1",8,0)
VAL(RXIEN,FILL,PSOELIG,ACTION,COB,REVREAS,BPSSKIPCON) ;
"RTN","BPSPSOU1",9,0)
 ;   Input:
"RTN","BPSPSOU1",10,0)
 ;      RXIEN   = Prescription ien
"RTN","BPSPSOU1",11,0)
 ;      FILL    = FILL #
"RTN","BPSPSOU1",12,0)
 ;      PSOELIG = TRICARE or CHAMPVA
"RTN","BPSPSOU1",13,0)
 ;      ACTION  = "REV" - Reverse or "RES" - Resubmit
"RTN","BPSPSOU1",14,0)
 ;      BPSSKIPCON = If 1, then skip the confirmation at the end
"RTN","BPSPSOU1",15,0)
 ;
"RTN","BPSPSOU1",16,0)
 ;   Output:
"RTN","BPSPSOU1",17,0)
 ;      COB     = Coordination of Benefits
"RTN","BPSPSOU1",18,0)
 ;      REVREAS = Reverse Reason
"RTN","BPSPSOU1",19,0)
 ;
"RTN","BPSPSOU1",20,0)
 ;   Function Return Values:
"RTN","BPSPSOU1",21,0)
 ;      0       = Failed validation
"RTN","BPSPSOU1",22,0)
 ;      1       = Passed validation
"RTN","BPSPSOU1",23,0)
 ;
"RTN","BPSPSOU1",24,0)
 ; This functions does validation checks for Reversing and Resubmitting a claim
"RTN","BPSPSOU1",25,0)
 ; called from the Prescription Edit screen hidden actions in Outpatient Pharmacy.
"RTN","BPSPSOU1",26,0)
 ;
"RTN","BPSPSOU1",27,0)
 N BPINPROG,BPSTATS,BPSTIEN,BPSYN,DFN,PATNAME,VADM
"RTN","BPSPSOU1",28,0)
 I '$G(RXIEN) Q 0
"RTN","BPSPSOU1",29,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RXIEN)  ; Most recent fill. DBIA #4702.
"RTN","BPSPSOU1",30,0)
 S PSOELIG=$G(PSOELIG)
"RTN","BPSPSOU1",31,0)
 I ACTION'="REV",ACTION'="RES" Q 0
"RTN","BPSPSOU1",32,0)
 S BPINPROG=0
"RTN","BPSPSOU1",33,0)
 S COB=$$GETCOB^BPSBUTL(RXIEN,FILL),BPSTIEN=$P(COB,U,2),COB=$P(COB,U)
"RTN","BPSPSOU1",34,0)
 I COB="" D  D PAUSE^VALM1 Q 0
"RTN","BPSPSOU1",35,0)
 . W !!,"Claim not found. Cannot "_$S(ACTION="REV":"Reverse.",1:"Resubmit.")
"RTN","BPSPSOU1",36,0)
 I COB=-1 W !!,"Primary and Secondary claims exist. Please contact OPECC." D PAUSE^VALM1 Q 0
"RTN","BPSPSOU1",37,0)
 S DFN=$P(^BPST(BPSTIEN,0),U,6)
"RTN","BPSPSOU1",38,0)
 D DEM^VADPT S PATNAME=VADM(1)
"RTN","BPSPSOU1",39,0)
 I $$NB^BPSSCR03(BPSTIEN) D  D PAUSE^VALM1 Q 0
"RTN","BPSPSOU1",40,0)
 . W !!,$S(ACTION="REV":"REVERSE",1:"RESUBMIT")_" not allowed for "_PSOELIG_" Non-Billable claim."
"RTN","BPSPSOU1",41,0)
 I $$CLOSED02^BPSSCR03($P($G(^BPST(BPSTIEN,0)),U,4)) D  D PAUSE^VALM1 Q 0
"RTN","BPSPSOU1",42,0)
 . W !!,"The claim is Closed and cannot be "_$S(ACTION="REV":"Reversed.",1:"Resubmitted.")
"RTN","BPSPSOU1",43,0)
 . W !," Please reopen the claim and try again."
"RTN","BPSPSOU1",44,0)
 S BPSTATS=$P($$CLAIMST^BPSSCRU3(BPSTIEN),U)
"RTN","BPSPSOU1",45,0)
 I (BPSTATS="IN PROGRESS")!(BPSTATS="SCHEDULED") S BPINPROG=1
"RTN","BPSPSOU1",46,0)
 I BPINPROG=0,ACTION="REV",'$$PAYABLE^BPSOSRX5(BPSTATS) D  D PAUSE^VALM1 Q 0
"RTN","BPSPSOU1",47,0)
 . W !!,"The claim is NOT Payable and cannot be Reversed."
"RTN","BPSPSOU1",48,0)
 S BPSYN=1
"RTN","BPSPSOU1",49,0)
 I BPINPROG=1 D  S BPSYN=$$YESNO("Do you want to proceed?(Y/N)") I BPSYN<1 Q 0
"RTN","BPSPSOU1",50,0)
 . W !!,"The claim you've chosen to "_$S(ACTION="REV":"REVERSE",1:"RESUBMIT")_" for "_$E(PATNAME,1,13)_" is in progress."
"RTN","BPSPSOU1",51,0)
 . W !,"The "_$S(ACTION="REV":"reversal",1:"resubmittal")_" request will be scheduled and processed after the previous"
"RTN","BPSPSOU1",52,0)
 . W !,"request(s) are completed. Please be aware that the result of the "_$S(ACTION="REV":"reversal",1:"resubmittal")
"RTN","BPSPSOU1",53,0)
 . W !,"depends on the payer's response to the prior incomplete requests."
"RTN","BPSPSOU1",54,0)
 I BPINPROG=0!(BPSYN) D
"RTN","BPSPSOU1",55,0)
 . I ACTION="RES",$G(BPSSKIPCON) Q
"RTN","BPSPSOU1",56,0)
 . W !!,"You've chosen to "_$S(ACTION="REV":"REVERSE",1:"RESUBMIT")_" the following prescription for "_$E(PATNAME,1,13)_"."
"RTN","BPSPSOU1",57,0)
 I ACTION="REV" D
"RTN","BPSPSOU1",58,0)
 . W !,"Please provide the reason or enter ^ to abandon the reversal."
"RTN","BPSPSOU1",59,0)
 . F  S REVREAS=$$COMMENT^BPSSCRCL("Enter REQUIRED REVERSAL REASON",60) Q:REVREAS="^"  Q:($L(REVREAS)>0)&(REVREAS'="^")&('(REVREAS?1" "." "))
"RTN","BPSPSOU1",60,0)
 I $G(REVREAS)["^" W !!,"The claim was NOT reversed!" D PAUSE^VALM1 Q 0
"RTN","BPSPSOU1",61,0)
 I $G(BPSSKIPCON) Q 1  ; Skip confirmation question if flag is set.
"RTN","BPSPSOU1",62,0)
 S BPSYN=$$YESNO("Are you sure?(Y/N)")
"RTN","BPSPSOU1",63,0)
 I BPSYN<1 Q 0
"RTN","BPSPSOU1",64,0)
 Q 1
"RTN","BPSPSOU1",65,0)
 ;
"RTN","BPSPSOU1",66,0)
YESNO(PSOSTR,PSOFL) ; Default - YES
"RTN","BPSPSOU1",67,0)
 N DIR,Y,DUOUT
"RTN","BPSPSOU1",68,0)
 S DIR(0)="Y"
"RTN","BPSPSOU1",69,0)
 S DIR("A")=PSOSTR
"RTN","BPSPSOU1",70,0)
 S:$L($G(PSOFL)) DIR("B")=PSOFL
"RTN","BPSPSOU1",71,0)
 D ^DIR
"RTN","BPSPSOU1",72,0)
 Q $S($G(DUOUT)!$G(DUOUT)!(Y="^"):-1,1:Y)
"RTN","BPSPSOU1",73,0)
 ;
"RTN","BPSRES")
0^16^B192744761
"RTN","BPSRES",1,0)
BPSRES ;BHAM ISC/BEE - ECME SCREEN RESUBMIT W/EDITS ;3/12/08  14:01
"RTN","BPSRES",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**3,5,7,8,10,11,20,21,23,24**;JUN 2004;Build 43
"RTN","BPSRES",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRES",4,0)
 ;
"RTN","BPSRES",5,0)
 ; Reference to $$RXRLDT^PSOBPSUT supported by DBIA 4701
"RTN","BPSRES",6,0)
 ; Reference to $$RXFLDT^PSOBPSUT supported by DBIA 4701
"RTN","BPSRES",7,0)
 ; Reference to $$FIND^PSOREJUT supported by DBIA 4706
"RTN","BPSRES",8,0)
 ; Reference to GET^PSOREJU2 supported by DBIA 6749
"RTN","BPSRES",9,0)
 ;
"RTN","BPSRES",10,0)
 ;ECME Resubmit w/EDITS Protocol (Hidden) - Called by [BPS USER SCREEN]
"RTN","BPSRES",11,0)
 ;
"RTN","BPSRES",12,0)
RESED N BPSEL
"RTN","BPSRES",13,0)
 ;
"RTN","BPSRES",14,0)
 I '$D(@(VALMAR)) G XRESED
"RTN","BPSRES",15,0)
 D FULL^VALM1
"RTN","BPSRES",16,0)
 ;
"RTN","BPSRES",17,0)
 ;Select the claim to resubmit
"RTN","BPSRES",18,0)
 W !,"Enter the line number for the claim to be resubmitted."
"RTN","BPSRES",19,0)
 S BPSEL=$$ASKLINE("Select item","Please select a SINGLE claim only when using the Resubmit w/EDITS action option.")
"RTN","BPSRES",20,0)
 I BPSEL<1 S VALMBCK="R" G XRESED
"RTN","BPSRES",21,0)
 ;
"RTN","BPSRES",22,0)
 ;Attempt to resubmit the claim, update the content of the screen, and display
"RTN","BPSRES",23,0)
 ;only if claim submitted successfully
"RTN","BPSRES",24,0)
 I $$DOSELCTD(BPSEL) D REDRAW^BPSSCRUD("Updating screen for resubmitted claim...")
"RTN","BPSRES",25,0)
 E  S VALMBCK="R"
"RTN","BPSRES",26,0)
 ;
"RTN","BPSRES",27,0)
XRESED Q
"RTN","BPSRES",28,0)
 ;
"RTN","BPSRES",29,0)
 ;Attempt to Edit and Resubmit Selected Claim
"RTN","BPSRES",30,0)
 ;
"RTN","BPSRES",31,0)
 ;   Input Value -> BPRXI - Entry with ptr to BPS TRANSACTION file
"RTN","BPSRES",32,0)
 ;
"RTN","BPSRES",33,0)
 ;  Return Value -> 0 - Claim was not resubmitted
"RTN","BPSRES",34,0)
 ;                  1 - Claim was resubmitted
"RTN","BPSRES",35,0)
 ;
"RTN","BPSRES",36,0)
DOSELCTD(BPRXI) ;
"RTN","BPSRES",37,0)
 N BP02,BP59,BPADDLTXT,BPBILL,BPCLTOT,BPDFN,BPDOSDT,BPOVRIEN,BPQ,BPRXIEN,BPRXR,BPSTATUS,BPUPDFLG
"RTN","BPSRES",38,0)
 N BPCOB,BPSURE,BPPTRES,BPPHSRV,BPDLYRS,COBDATA,BPPRIOPN,BPSPCLS,BPMSG
"RTN","BPSRES",39,0)
 S BPQ=""
"RTN","BPSRES",40,0)
 S BPADDLTXT=""
"RTN","BPSRES",41,0)
 S (BPCLTOT,BPUPDFLG)=0
"RTN","BPSRES",42,0)
 ;
"RTN","BPSRES",43,0)
 ;Pull BPS TRANSACTION/BPS CLAIMS entries
"RTN","BPSRES",44,0)
 S BP59=$P(BPRXI,U,4) I BP59="" W !!,"No Initial Claim Submission Found - Data Elements are NOT Editable for Re-Submission",! G XRES
"RTN","BPSRES",45,0)
 ;
"RTN","BPSRES",46,0)
 ; check for non-billable entry
"RTN","BPSRES",47,0)
 I $$NB^BPSSCR03(BP59) W !!,"Entry is NON BILLABLE.  There is no claim to edit or resubmit.",! G XRES
"RTN","BPSRES",48,0)
 ;
"RTN","BPSRES",49,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4) I 'BP02 W !!,"No Initial Claim Submission Found - Data Elements are NOT Editable for Re-Submission",! G XRES
"RTN","BPSRES",50,0)
 ;
"RTN","BPSRES",51,0)
 ;Write Form Feed
"RTN","BPSRES",52,0)
 W @IOF
"RTN","BPSRES",53,0)
 ;
"RTN","BPSRES",54,0)
 ;Display selected claim and ask to submit
"RTN","BPSRES",55,0)
 S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSRES",56,0)
 W !,"You've chosen to RESUBMIT the following prescription for "_$E($$PATNAME^BPSSCRU2(BPDFN),1,13)
"RTN","BPSRES",57,0)
 W !,@VALMAR@(+$P(BPRXI,U,5),0)
"RTN","BPSRES",58,0)
 S BPQ=$$YESNO^BPSSCRRS("Are you sure(Y/N)")
"RTN","BPSRES",59,0)
 I BPQ'=1 S BPQ="^" G XRES
"RTN","BPSRES",60,0)
 ;
"RTN","BPSRES",61,0)
 ;Check to make sure claim can be Resubmitted w/EDITS
"RTN","BPSRES",62,0)
 S BPRXIEN=$P(BP59,".")
"RTN","BPSRES",63,0)
 S BPRXR=+$E($P(BP59,".",2),1,4)
"RTN","BPSRES",64,0)
 I $$RXDEL^BPSOS($P(BP59,".",1),+$E($P(BP59,".",2),1,4)) W !!,"The claim: ",!,@VALMAR@(+$P(BPRXI,U,5),0),!,"cannot be Resubmitted w/EDITS because it has been deleted in Pharmacy.",! G XRES
"RTN","BPSRES",65,0)
 S BPSTATUS=$P($$CLAIMST^BPSSCRU3(BP59),U)
"RTN","BPSRES",66,0)
 I BPSTATUS["IN PROGRESS" W !!,"The claim: ",!,@VALMAR@(+$P(BPRXI,U,5),0),!,"is still In Progress and cannot be Resubmitted w/EDITS",! G XRES
"RTN","BPSRES",67,0)
 I BPSTATUS'["E REJECTED" W !!,"The claim: ",!,@VALMAR@(+$P(BPRXI,U,5),0),!,"is NOT Rejected and cannot be Resubmitted w/EDITS",! G XRES
"RTN","BPSRES",68,0)
 I $P($G(^BPST(BP59,0)),U,14)<2,$$PAYABLE^BPSOSRX5(BPSTATUS),$$PAYBLSEC^BPSUTIL2(BP59) D  G XRES
"RTN","BPSRES",69,0)
 . W !,"The claim: ",!,@VALMAR@(+$P(BPRXI,U,5),0),!,"cannot be Resubmitted if the secondary claim is payable.",!,"Please reverse the secondary claim first."
"RTN","BPSRES",70,0)
 ;
"RTN","BPSRES",71,0)
 ;Can't resubmit a closed claim. The user must reopen first.
"RTN","BPSRES",72,0)
 I $$CLOSED^BPSSCRU1(BP59) W !!,"The claim: ",!,@VALMAR@(+$P(BPRXI,U,5),0),!,"is Closed and cannot be Resubmitted w/EDITS.",! G XRES
"RTN","BPSRES",73,0)
 ;
"RTN","BPSRES",74,0)
 S BPCOB=$$COB59^BPSUTIL2(BP59)
"RTN","BPSRES",75,0)
 ;If this is a secondary, make sure Primary is either Payable or Closed.
"RTN","BPSRES",76,0)
 S BPPRIOPN=0 I BPCOB=2 D  G XRES:BPPRIOPN=1
"RTN","BPSRES",77,0)
 . ;Get Primary claim status
"RTN","BPSRES",78,0)
 . S BPSPCLS=$$FINDECLM^BPSPRRX5(BPRXIEN,BPRXR,1)
"RTN","BPSRES",79,0)
 . I $P(BPSPCLS,U)>1 D
"RTN","BPSRES",80,0)
 .. Q:$$CLOSED^BPSSCRU1($P(BPSPCLS,U,2))
"RTN","BPSRES",81,0)
 .. W !,"The secondary claim cannot be Resubmitted unless the primary is either payable",!,"or closed. Please resubmit or close the primary claim first."
"RTN","BPSRES",82,0)
 .. S BPPRIOPN=1
"RTN","BPSRES",83,0)
 ;Retrieve DOS
"RTN","BPSRES",84,0)
 S BPDOSDT=$$DOSDATE^BPSSCRRS(BPRXIEN,BPRXR)
"RTN","BPSRES",85,0)
 ;
"RTN","BPSRES",86,0)
 ;Prompt for EDIT Information
"RTN","BPSRES",87,0)
 S BPOVRIEN=$$PROMPTS(BP59,BP02,BPRXIEN,BPRXR,BPCOB,.BPDOSDT,.COBDATA,.BPADDLTXT) I BPOVRIEN=-1 G XRES
"RTN","BPSRES",88,0)
 ;
"RTN","BPSRES",89,0)
 ; Submit the claim
"RTN","BPSRES",90,0)
 S BPBILL=$$EN^BPSNCPDP(BPRXIEN,BPRXR,BPDOSDT,"ERES","","ECME RESUBMIT","",BPOVRIEN,"","",BPCOB,"F","","",$G(COBDATA("PLAN")),.COBDATA,$G(COBDATA("RTYPE")))
"RTN","BPSRES",91,0)
 ;
"RTN","BPSRES",92,0)
 ;Print Return Value Message
"RTN","BPSRES",93,0)
 W !!
"RTN","BPSRES",94,0)
 W:+BPBILL>0 $S(+BPBILL=10:"Reversal but no Resubmit:",1:"Not Processed:"),!,"  "
"RTN","BPSRES",95,0)
 ;
"RTN","BPSRES",96,0)
 ;Change Return Message for SC/EI
"RTN","BPSRES",97,0)
 S:$P(BPBILL,U,2)="NEEDS SC DETERMINATION" $P(BPBILL,U,2)="NEEDS SC/EI DETERMINATION"
"RTN","BPSRES",98,0)
 W $P(BPBILL,U,2)
"RTN","BPSRES",99,0)
 ;
"RTN","BPSRES",100,0)
 ;0 Prescription/Fill successfully submitted to ECME
"RTN","BPSRES",101,0)
 ;1 ECME did not submit prescription/fill
"RTN","BPSRES",102,0)
 ;2 IB says prescription/fill is not ECME billable or the data returned from IB is not valid
"RTN","BPSRES",103,0)
 ;3 ECME closed the claim but did not submit it to the payer
"RTN","BPSRES",104,0)
 ;4 Unable to queue the ECME claim
"RTN","BPSRES",105,0)
 ;5 Invalid input
"RTN","BPSRES",106,0)
 ;10 Reversal Processed But Claim Was Not Resubmitted
"RTN","BPSRES",107,0)
 ;
"RTN","BPSRES",108,0)
 I +BPBILL=0 D
"RTN","BPSRES",109,0)
 . S BPMSG="ECME RED Resubmit Claim w/Edits"
"RTN","BPSRES",110,0)
 . I BPADDLTXT'="" S BPMSG=BPMSG_": "_BPADDLTXT
"RTN","BPSRES",111,0)
 . S BPMSG=BPMSG_"-"_$S(BPCOB=1:"p",BPCOB=2:"s",1:"")_$$INSNAME^BPSSCRU6(BP59)
"RTN","BPSRES",112,0)
 . S BPMSG=$E(BPMSG,1,100)
"RTN","BPSRES",113,0)
 . D ECMEACT^PSOBPSU1(+BPRXIEN,+BPRXR,BPMSG)
"RTN","BPSRES",114,0)
 . S BPUPDFLG=1,BPCLTOT=1
"RTN","BPSRES",115,0)
 ;
"RTN","BPSRES",116,0)
XRES ;
"RTN","BPSRES",117,0)
 I BPCLTOT W !,BPCLTOT," claim",$S(BPCLTOT'=1:"s have",1:" has")," been resubmitted.",!
"RTN","BPSRES",118,0)
 D PAUSE^VALM1
"RTN","BPSRES",119,0)
 Q BPUPDFLG
"RTN","BPSRES",120,0)
 ;
"RTN","BPSRES",121,0)
XRES2 ;
"RTN","BPSRES",122,0)
 I BPCLTOT W !,BPCLTOT," claim",$S(BPCLTOT'=1:"s have",1:" has")," been resubmitted.",!
"RTN","BPSRES",123,0)
 Q BPUPDFLG
"RTN","BPSRES",124,0)
 ;
"RTN","BPSRES",125,0)
 ;Enter EDIT information for claim
"RTN","BPSRES",126,0)
 ;
"RTN","BPSRES",127,0)
 ;  Input Values -> BP59 - The BPS TRANSACTION entry
"RTN","BPSRES",128,0)
 ;                  BP02 - The BPS CLAIMS entry
"RTN","BPSRES",129,0)
 ;                  BPRXIEN - Prescription IEN (#52)
"RTN","BPSRES",130,0)
 ;                  BPRXR - Fill Number
"RTN","BPSRES",131,0)
 ;                  BPCOB - (optional) payer sequence (1-primary, 2 -secondary)
"RTN","BPSRES",132,0)
 ;                  BPDOSDT - Date of Service, passed by reference 
"RTN","BPSRES",133,0)
 ;                  BPSECOND - Array, passed by reference, of COB data
"RTN","BPSRES",134,0)
 ;                  BPADDLTXT - Passed by reference, text to add to ECME
"RTN","BPSRES",135,0)
 ;                     log if user chooses to use Date of Service on the
"RTN","BPSRES",136,0)
 ;                     claim instead of the Release Date.
"RTN","BPSRES",137,0)
 ;  Output Value -> BPQ  - -1 - The user chose to quit
"RTN","BPSRES",138,0)
 ;                         "" - The user completed the EDITS
"RTN","BPSRES",139,0)
PROMPTS(BP59,BP02,BPRXIEN,BPRXR,BPCOB,BPDOSDT,BPSECOND,BPADDLTXT) ;
"RTN","BPSRES",140,0)
 N %,BP300,BP35401,BPCLCD1,BPCLCD2,BPCLCD3,BPFDA,BPFLD,BPOVRIEN,BPMED,BPPSNCD
"RTN","BPSRES",141,0)
 N BPPREAUT,BPPRETYP,BPQ,BPRELCD,BPRELEASEDT,DIC,DIR,DIROUT,DTOUT,DUOUT,X,Y,DIRUT,DUP
"RTN","BPSRES",142,0)
 N BPCLCDN,BPCLCDX,BPSX,BPSADDLFLDS
"RTN","BPSRES",143,0)
 S BPQ=""
"RTN","BPSRES",144,0)
 I +$G(BPCOB)=0 S BPCOB=1
"RTN","BPSRES",145,0)
 ;Pull Information from Claim
"RTN","BPSRES",146,0)
 S BP300=$G(^BPSC(BP02,300))
"RTN","BPSRES",147,0)
 S BPRELCD=$TR($E($P(BP300,U,6),3,99)," ")
"RTN","BPSRES",148,0)
 S BPPSNCD=$TR($E($P(BP300,U,3),3,99)," ")
"RTN","BPSRES",149,0)
 S (BPPRETYP,BPPREAUT,BPDLYRS,BPPHSRV)=""
"RTN","BPSRES",150,0)
 S BPMED=0 F  S BPMED=$O(^BPSC(BP02,400,BPMED)) Q:'BPMED  D  I BPPREAUT]"" Q
"RTN","BPSRES",151,0)
 . N BP460 S BP460=$G(^BPSC(BP02,400,BPMED,460))
"RTN","BPSRES",152,0)
 . S:BPPREAUT="" BPPREAUT=$TR($E($P(BP460,U,2),3,99)," "),BPPRETYP=$TR($E($P(BP460,U),3,99)," ")
"RTN","BPSRES",153,0)
 . S:BPDLYRS="" BPDLYRS=$TR($E($P($G(^BPSC(BP02,400,BPMED,350)),U,7),3,99)," ") I BPDLYRS]"" S BPDLYRS=+BPDLYRS
"RTN","BPSRES",154,0)
 . S:BPPHSRV="" BPPHSRV=$TR($E($P($G(^BPSC(BP02,400,BPMED,140)),U,7),3,99)," ")
"RTN","BPSRES",155,0)
 . F BP35401=1:1:3 S @("BPCLCD"_BP35401)=$TR($E($P($G(^BPSC(BP02,400,BPMED,354.01,BP35401,1)),U),3,99)," ")
"RTN","BPSRES",156,0)
 . S BPCLCD1=+BPCLCD1 I BPCLCD1=0 S BPCLCD1=1
"RTN","BPSRES",157,0)
 S BPPTRES=$TR($E($P($G(^BPSC(BP02,380)),U,4),3,99)," ") I BPPTRES="" S BPPTRES=1
"RTN","BPSRES",158,0)
 S:BPPHSRV="" BPPHSRV=1
"RTN","BPSRES",159,0)
 ;
"RTN","BPSRES",160,0)
 ;Relationship Code
"RTN","BPSRES",161,0)
 N X,DIC,Y
"RTN","BPSRES",162,0)
 S DIC("B")=BPRELCD
"RTN","BPSRES",163,0)
 S DIC(0)="QEAM",DIC=9002313.19,DIC("A")="Pharmacy Relationship Code: "
"RTN","BPSRES",164,0)
 D ^DIC
"RTN","BPSRES",165,0)
 ;Check for "^" or timeout
"RTN","BPSRES",166,0)
 I ($D(DUOUT))!($D(DTOUT)) S BPQ=-1 K X,DIC,Y G XPROMPTS
"RTN","BPSRES",167,0)
 S BPRELCD=$P(Y,U,2)
"RTN","BPSRES",168,0)
 K X,DIC,Y
"RTN","BPSRES",169,0)
 ;
"RTN","BPSRES",170,0)
 ;Person Code
"RTN","BPSRES",171,0)
 K DIR("?") S DIR(0)="FO^1:3",DIR("A")="Pharmacy Person Code",DIR("?")="Enter the Specific Person Code Assigned to the Patient by the Payer"
"RTN","BPSRES",172,0)
 S DIR("B")=BPPSNCD
"RTN","BPSRES",173,0)
 D ^DIR
"RTN","BPSRES",174,0)
 I $D(DTOUT)!$D(DUOUT) S BPQ=-1 G XPROMPTS
"RTN","BPSRES",175,0)
 S BPPSNCD=Y
"RTN","BPSRES",176,0)
 ;
"RTN","BPSRES",177,0)
 ;Pre-Authorization
"RTN","BPSRES",178,0)
 K DIR("?") S DIR(0)="FO^1:11",DIR("A")="Prior Authorization Number",DIR("?")="Enter the Number Submitted by the Provider to Identify the Prior Authorization"
"RTN","BPSRES",179,0)
 S DIR("B")=BPPREAUT
"RTN","BPSRES",180,0)
 D ^DIR
"RTN","BPSRES",181,0)
 I $D(DTOUT)!$D(DUOUT) S BPQ=-1 G XPROMPTS
"RTN","BPSRES",182,0)
 S BPPREAUT=Y
"RTN","BPSRES",183,0)
 ;
"RTN","BPSRES",184,0)
 ;Prior-Authorization Type Code
"RTN","BPSRES",185,0)
 N X,DIC,Y
"RTN","BPSRES",186,0)
 S DIC("B")=+BPPRETYP
"RTN","BPSRES",187,0)
 S DIC(0)="QEAM",DIC=9002313.26,DIC("A")="Prior Authorization Type Code: "
"RTN","BPSRES",188,0)
 D ^DIC
"RTN","BPSRES",189,0)
 ;Check for "^" or timeout
"RTN","BPSRES",190,0)
 I ($D(DUOUT))!($D(DTOUT)) S BPQ=-1 K X,DIC,Y G XPROMPTS
"RTN","BPSRES",191,0)
 S BPPRETYP=$P(Y,U,2)
"RTN","BPSRES",192,0)
 K X,DIC,Y
"RTN","BPSRES",193,0)
 ;
"RTN","BPSRES",194,0)
 ; If there is a pending reject on the Pharmacists Worklist, or there
"RTN","BPSRES",195,0)
 ; is a resolved or unresolved reject 79 or 88, then only display
"RTN","BPSRES",196,0)
 ; Submission Clarification Codes and do not allow enter/edit. (BPS*1*21)
"RTN","BPSRES",197,0)
 ;
"RTN","BPSRES",198,0)
 I $$BPSKIP(BPRXIEN,BPRXR) D  G P1
"RTN","BPSRES",199,0)
 . F BP35401=1:1:3 I @("BPCLCD"_BP35401) D
"RTN","BPSRES",200,0)
 . . S BPSX=+@("BPCLCD"_BP35401)
"RTN","BPSRES",201,0)
 . . W !,"Submission Clarification Code ",BP35401,": ",BPSX
"RTN","BPSRES",202,0)
 . . S BPCLCDX=$O(^BPS(9002313.25,"B",BPSX,"")),BPCLCDN=$P(^BPS(9002313.25,BPCLCDX,0),U,2)
"RTN","BPSRES",203,0)
 . . W ?44,BPCLCDN
"RTN","BPSRES",204,0)
 . . Q
"RTN","BPSRES",205,0)
 . W !," **OPECC cannot edit Sub. Clar. Code field for this reject - refer to Pharmacist"
"RTN","BPSRES",206,0)
 . Q
"RTN","BPSRES",207,0)
 ;
"RTN","BPSRES",208,0)
 ;Submission Clarification Code 1
"RTN","BPSRES",209,0)
 S DIC("B")=BPCLCD1
"RTN","BPSRES",210,0)
 S DIC(0)="QEAM",DIC=9002313.25,DIC("A")="Submission Clarification Code 1: "
"RTN","BPSRES",211,0)
 D ^DIC
"RTN","BPSRES",212,0)
 ;Check for "^" or timeout
"RTN","BPSRES",213,0)
 I ($D(DUOUT))!($D(DTOUT)) S BPQ=-1 K X,DIC,Y G XPROMPTS
"RTN","BPSRES",214,0)
 S BPCLCD1=$P(Y,U,2)
"RTN","BPSRES",215,0)
 K X,DIC,Y
"RTN","BPSRES",216,0)
 ;
"RTN","BPSRES",217,0)
 ;Submission Clarification Code 2
"RTN","BPSRES",218,0)
 I +BPCLCD2 S BPCLCD2=+BPCLCD2 S DIC("B")=BPCLCD2
"RTN","BPSRES",219,0)
 S DIC(0)="QEAM",DIC=9002313.25,DIC("A")="Submission Clarification Code 2: ",DUP=0
"RTN","BPSRES",220,0)
 F  D  Q:BPQ=-1  Q:'DUP
"RTN","BPSRES",221,0)
 . D ^DIC
"RTN","BPSRES",222,0)
 . ;Check for "^" or timeout
"RTN","BPSRES",223,0)
 . I ($D(DUOUT))!($D(DTOUT)) S BPQ=-1 K X,DIC,Y Q
"RTN","BPSRES",224,0)
 . S BPCLCD2=$P(Y,U,2)
"RTN","BPSRES",225,0)
 . S DUP=0 I BPCLCD2=BPCLCD1 S BPCLCD2="" W !,"  Duplicates not allowed" S DUP=1
"RTN","BPSRES",226,0)
 K X,DIC,Y
"RTN","BPSRES",227,0)
 I BPQ=-1 G XPROMPTS
"RTN","BPSRES",228,0)
 ;
"RTN","BPSRES",229,0)
 ;Submission Clarification Code 3
"RTN","BPSRES",230,0)
 I BPCLCD2'="" D  I BPQ=-1 G XPROMPTS
"RTN","BPSRES",231,0)
 . I +BPCLCD3 S BPCLCD3=+BPCLCD3 S DIC("B")=BPCLCD3
"RTN","BPSRES",232,0)
 . S DIC(0)="QEAM",DIC=9002313.25,DIC("A")="Submission Clarification Code 3: ",DUP=0
"RTN","BPSRES",233,0)
 . F  D  Q:'DUP  I BPQ=-1 Q
"RTN","BPSRES",234,0)
 . . D ^DIC
"RTN","BPSRES",235,0)
 . . ;Check for "^" or timeout
"RTN","BPSRES",236,0)
 . . I ($D(DUOUT))!($D(DTOUT)) S BPQ=-1 K X,DIC,Y Q
"RTN","BPSRES",237,0)
 . . S BPCLCD3=$P(Y,U,2)
"RTN","BPSRES",238,0)
 . . S DUP=0 I BPCLCD3=BPCLCD1!(BPCLCD3=BPCLCD2) S BPCLCD3="" W !,"  Duplicates not allowed" S DUP=1
"RTN","BPSRES",239,0)
 . K X,DIC,Y
"RTN","BPSRES",240,0)
 ;
"RTN","BPSRES",241,0)
P1 ;
"RTN","BPSRES",242,0)
 ;
"RTN","BPSRES",243,0)
 ; If the user opts to use the Date of Service instead of the
"RTN","BPSRES",244,0)
 ; Release Date, then set BPADDLTXT, which will be used when creating
"RTN","BPSRES",245,0)
 ; an entry in the Activity Log.
"RTN","BPSRES",246,0)
 ;
"RTN","BPSRES",247,0)
 S BPADDLTXT=""
"RTN","BPSRES",248,0)
 S BPRELEASEDT=$$RELDATE^BPSBCKJ(+BPRXIEN,+BPRXR)
"RTN","BPSRES",249,0)
 I BPRELEASEDT]"" D  I BPQ=-1 G XPROMPTS
"RTN","BPSRES",250,0)
 . S BPDOSDT=$$EDITDT(1,BPRXIEN,BPRXR,BP02)
"RTN","BPSRES",251,0)
 . I BPDOSDT="^" S BPQ=-1 Q
"RTN","BPSRES",252,0)
 . I BPDOSDT'=(BPRELEASEDT\1) S BPADDLTXT="Date of Service ("_$$FMTE^XLFDT(BPDOSDT,5)_")"
"RTN","BPSRES",253,0)
 . Q
"RTN","BPSRES",254,0)
 ;
"RTN","BPSRES",255,0)
 ;Patient Residence Code
"RTN","BPSRES",256,0)
 N X,DIC,Y
"RTN","BPSRES",257,0)
 S DIC("B")=+BPPTRES
"RTN","BPSRES",258,0)
 S DIC(0)="QEAM",DIC=9002313.27,DIC("A")="Patient Residence Code: "
"RTN","BPSRES",259,0)
 D ^DIC
"RTN","BPSRES",260,0)
 ;Check for "^" or timeout
"RTN","BPSRES",261,0)
 I ($D(DUOUT))!($D(DTOUT)) S BPQ=-1 K X,DIC,Y G XPROMPTS
"RTN","BPSRES",262,0)
 S BPPTRES=$P(Y,U,2)
"RTN","BPSRES",263,0)
 K X,DIC,Y
"RTN","BPSRES",264,0)
 ;
"RTN","BPSRES",265,0)
 ;Pharmacy Service Type Code
"RTN","BPSRES",266,0)
 N X,DIC,Y
"RTN","BPSRES",267,0)
 S DIC("B")=+BPPHSRV
"RTN","BPSRES",268,0)
 S DIC(0)="QEAM",DIC=9002313.28,DIC("A")="Pharmacy Service Type Code: "
"RTN","BPSRES",269,0)
 D ^DIC
"RTN","BPSRES",270,0)
 ;Check for "^" or timeout
"RTN","BPSRES",271,0)
 I ($D(DUOUT))!($D(DTOUT)) S BPQ=-1 K X,DIC,Y G XPROMPTS
"RTN","BPSRES",272,0)
 S BPPHSRV=$P(Y,U,2)
"RTN","BPSRES",273,0)
 K X,DIC,Y
"RTN","BPSRES",274,0)
 ;
"RTN","BPSRES",275,0)
 ;Delay Reason Code
"RTN","BPSRES",276,0)
 N X,DIC,Y
"RTN","BPSRES",277,0)
 S DIC("B")=BPDLYRS
"RTN","BPSRES",278,0)
 S DIC(0)="QEAM",DIC=9002313.29,DIC("A")="Delay Reason Code: "
"RTN","BPSRES",279,0)
 D ^DIC
"RTN","BPSRES",280,0)
 ;Check for "^" or timeout
"RTN","BPSRES",281,0)
 I ($D(DUOUT))!($D(DTOUT)) S BPQ=-1 K X,DIC,Y G XPROMPTS
"RTN","BPSRES",282,0)
 S BPDLYRS=$P(Y,U,2)
"RTN","BPSRES",283,0)
 K X,DIC,Y
"RTN","BPSRES",284,0)
 ;
"RTN","BPSRES",285,0)
 ; If secondary claim, setup secondary data and allow user to edit
"RTN","BPSRES",286,0)
 ; Get data from the primary claim, if it exists
"RTN","BPSRES",287,0)
 I BPCOB=2 D  I BPQ=-1 G XPROMPTS
"RTN","BPSRES",288,0)
 . N BPSPL59,BPRTTP59
"RTN","BPSRES",289,0)
 . S BPRET=$$PRIMDATA^BPSPRRX6(BPRXIEN,BPRXR,.BPSECOND)
"RTN","BPSRES",290,0)
 . ; If the primary claim data is missing, get data from the most recent secondary claim
"RTN","BPSRES",291,0)
 . I 'BPRET,$$SECDATA^BPSPRRX6(BPRXIEN,BPRXR,.BPSPL59,.BPSECOND,.BPRTTP59)
"RTN","BPSRES",292,0)
 . ; The PRIMARY BILL element is set by $$SECDATA.  If SECDATA is not called, this element will be 
"RTN","BPSRES",293,0)
 . ;   missing and we will need to create it
"RTN","BPSRES",294,0)
 . I '$D(BPSECOND("PRIMARY BILL")) D
"RTN","BPSRES",295,0)
 .. N BPBILL
"RTN","BPSRES",296,0)
 .. S BPBILL=$$PAYBLPRI^BPSUTIL2(BP59)
"RTN","BPSRES",297,0)
 .. I BPBILL>0 S BPSECOND("PRIMARY BILL")=BPBILL
"RTN","BPSRES",298,0)
 . ; Set flag telling BPSNCPDP not to recompile the data from the BPS Transaction and the secondary claim
"RTN","BPSRES",299,0)
 . S BPSECOND("NEW COB DATA")=1
"RTN","BPSRES",300,0)
 . ; $$PROMPTS displays the data and allows the user edit the data.
"RTN","BPSRES",301,0)
 . S BPQ=$$PROMPTS^BPSPRRX3(BPRXIEN,BPRXR,BPDOSDT,.BPSECOND)
"RTN","BPSRES",302,0)
 ;
"RTN","BPSRES",303,0)
 ; Allow user to add to the claim additional fields which are
"RTN","BPSRES",304,0)
 ; not on the payer sheet.  $$ADDLFLDS will return 0 if no
"RTN","BPSRES",305,0)
 ; additional fields were selected or -1 if the user exited out.
"RTN","BPSRES",306,0)
 ;
"RTN","BPSRES",307,0)
 S BPQ=$$ADDLFLDS^BPSRES1(BP02,BP59,.BPSADDLFLDS)
"RTN","BPSRES",308,0)
 I BPQ=-1 G XPROMPTS
"RTN","BPSRES",309,0)
 ;
"RTN","BPSRES",310,0)
 ;Ask to proceed
"RTN","BPSRES",311,0)
 W !
"RTN","BPSRES",312,0)
 S BPQ=$$YESNO^BPSSCRRS("Are you sure(Y/N)")
"RTN","BPSRES",313,0)
 I BPQ'=1 S BPQ=-1 G XPROMPTS
"RTN","BPSRES",314,0)
 S BPQ=1
"RTN","BPSRES",315,0)
 ;
"RTN","BPSRES",316,0)
 ; Save the override values and the list of additional fields
"RTN","BPSRES",317,0)
 ; in file# 9002313.511, BPS NCPDP OVERRIDES.
"RTN","BPSRES",318,0)
 ;
"RTN","BPSRES",319,0)
 I '$$SAVE^BPSRES1("RED",BP59,.BPSADDLFLDS,.BPOVRIEN) S BPQ=-1
"RTN","BPSRES",320,0)
 ;
"RTN","BPSRES",321,0)
XPROMPTS ;
"RTN","BPSRES",322,0)
 S BPOVRIEN=$S(BPQ=-1:BPQ,$G(BPOVRIEN(1))]"":BPOVRIEN(1),1:-1)
"RTN","BPSRES",323,0)
 Q BPOVRIEN
"RTN","BPSRES",324,0)
 ;
"RTN","BPSRES",325,0)
 ;Prompt User for Claim to Resubmit (w/EDITS)
"RTN","BPSRES",326,0)
 ;
"RTN","BPSRES",327,0)
 ; Input values ->  BPROMPT - prompt string
"RTN","BPSRES",328,0)
 ;                 BPERRMES - the message to display when the user tries
"RTN","BPSRES",329,0)
 ;                           to make multi line selection (optional)
"RTN","BPSRES",330,0)
 ;                  Piece
"RTN","BPSRES",331,0)
 ;output values ->      1 - 1 = okay, <0 = errors, 0 = quit
"RTN","BPSRES",332,0)
 ;                      2 - patient ien #2
"RTN","BPSRES",333,0)
 ;                      3 - insurance ien #36
"RTN","BPSRES",334,0)
 ;                      4 - ptr to #9002313.59
"RTN","BPSRES",335,0)
 ;                      5 - 1st line for index(es) in LM "VALM" array
"RTN","BPSRES",336,0)
 ;                      6 - patient's index
"RTN","BPSRES",337,0)
 ;                      7 - claim's index
"RTN","BPSRES",338,0)
ASKLINE(BPROMPT,BPERRMES) ;
"RTN","BPSRES",339,0)
 N BPRET,BPCNT
"RTN","BPSRES",340,0)
 S BPRET="",BPCNT=0
"RTN","BPSRES",341,0)
 F  S BPRET=$$SELLINE^BPSSCRU4(BPROMPT,"C",VALMAR,"") Q:BPRET'<0  D
"RTN","BPSRES",342,0)
 . ;
"RTN","BPSRES",343,0)
 . I BPCNT<1 S BPCNT=BPCNT+1 W !
"RTN","BPSRES",344,0)
 . E  S BPCNT=0 D RE^VALM4
"RTN","BPSRES",345,0)
 . I BPRET=-1 W "Invalid line number" ; (invalid Patient summary line)"
"RTN","BPSRES",346,0)
 . I BPRET=-8 W $S($G(BPERRMES)]"":BPERRMES,1:" Invalid line number")
"RTN","BPSRES",347,0)
 . I BPRET=-4 W "Invalid line number" ; (invalid RX line)"
"RTN","BPSRES",348,0)
 . I BPRET=-2 W "Please select Patient's summary line."
"RTN","BPSRES",349,0)
 . I BPRET=-3 W "Please specify RX line."
"RTN","BPSRES",350,0)
 . I ",-1,-8,-4,-2,-3,"'[(","_BPRET_",") W "Incorrect format." ; Corrupted array (",BPRET,")"
"RTN","BPSRES",351,0)
 Q BPRET
"RTN","BPSRES",352,0)
 ;
"RTN","BPSRES",353,0)
EDITDT(DFLT,BPRXIEN,BPRXR,BP02) ;Prompt User to choose correct Date of Service
"RTN","BPSRES",354,0)
 ;
"RTN","BPSRES",355,0)
 ; Input value ->  DFLT - The data to use as the default value. If no default
"RTN","BPSRES",356,0)
 ;                        is provided, Current Date of Service will be used.
"RTN","BPSRES",357,0)
 ;
"RTN","BPSRES",358,0)
 ;                        1 - Current Date of Service
"RTN","BPSRES",359,0)
 ;                        2 - Fill Date
"RTN","BPSRES",360,0)
 ;                        3 - Release Date
"RTN","BPSRES",361,0)
 ;
"RTN","BPSRES",362,0)
 ;              BPRXIEN - Pointer to the PRESCRIPTION file (#52)
"RTN","BPSRES",363,0)
 ;                BPRXR - Refill number for prescription
"RTN","BPSRES",364,0)
 ;                 BP02 - Pointer to the BPS CLAIMS file (#9002313.02)
"RTN","BPSRES",365,0)
 ;
"RTN","BPSRES",366,0)
 ; Output value -> Selected Date of Service in FileMan format
"RTN","BPSRES",367,0)
 ;
"RTN","BPSRES",368,0)
 ; Reference to $$RXRLDT^PSOBPSUT supported by DBIA 4701
"RTN","BPSRES",369,0)
 ; Reference to $$RXFLDT^PSOBPSUT supported by DBIA 4701
"RTN","BPSRES",370,0)
 ;
"RTN","BPSRES",371,0)
 N BPRLS,BPFIL,BPCUR,DIR,DIRUT,DIROUT,DTOUT,DUOUT,OPT,TMP,X,Y
"RTN","BPSRES",372,0)
 S BPRLS=$$RXRLDT^PSOBPSUT(BPRXIEN,BPRXR)\1 ;release date
"RTN","BPSRES",373,0)
 S BPFIL=$$RXFLDT^PSOBPSUT(BPRXIEN,BPRXR)\1 ;fill date
"RTN","BPSRES",374,0)
 S BPCUR=$$HL7TFM^XLFDT($$GET1^DIQ(9002313.02,BP02,401)) ;current date of service
"RTN","BPSRES",375,0)
 S DFLT=$G(DFLT),DIR("B")=1,DIR("A")="Date of Service"
"RTN","BPSRES",376,0)
 I DFLT=2,BPFIL]"" S DIR("B")=2
"RTN","BPSRES",377,0)
 I DFLT=3,BPRLS]"" S DIR("B")=3
"RTN","BPSRES",378,0)
 S OPT=1,DIR(0)="S^"_OPT_":"_$$FMTE^XLFDT(BPCUR,"5D")_" Current Date of Service",TMP(OPT)=BPCUR
"RTN","BPSRES",379,0)
 I BPFIL'>DT,BPFIL<BPRLS S OPT=OPT+1,DIR(0)=DIR(0)_";"_OPT_":"_$$FMTE^XLFDT(BPFIL,"5D")_" Fill Date",TMP(OPT)=BPFIL
"RTN","BPSRES",380,0)
 I BPRLS'>DT S OPT=OPT+1,DIR(0)=DIR(0)_";"_OPT_":"_$$FMTE^XLFDT(BPRLS,"5D")_" Release Date",TMP(OPT)=BPRLS
"RTN","BPSRES",381,0)
 D ^DIR
"RTN","BPSRES",382,0)
 I $D(DIRUT) S Y="^" Q Y
"RTN","BPSRES",383,0)
 Q TMP(Y)
"RTN","BPSRES",384,0)
 ;
"RTN","BPSRES",385,0)
BPSKIP(BPSRX,BPSFILL) ; Determine whether to skip the enter/edit of Submission Clarification Codes
"RTN","BPSRES",386,0)
 ; This function will return a '1' if the enter/edit of Submission 
"RTN","BPSRES",387,0)
 ; Clarification Codes should be skipped (not allowed).
"RTN","BPSRES",388,0)
 ;
"RTN","BPSRES",389,0)
 N BPS7988DATE,BPSACTIVITY,BPSECMEDATE,BPSREJECT,BPSX
"RTN","BPSRES",390,0)
 ;
"RTN","BPSRES",391,0)
 ; If any open/unresolved rejects are on the pharmacist worklist, Quit with 1.
"RTN","BPSRES",392,0)
 ;
"RTN","BPSRES",393,0)
 I $$FIND^PSOREJUT(BPSRX,BPSFILL) Q 1
"RTN","BPSRES",394,0)
 ;
"RTN","BPSRES",395,0)
 ; If there are any closed/resolved 79/88 rejects for this Rx/Fill,
"RTN","BPSRES",396,0)
 ; pull the latest detected date/time.
"RTN","BPSRES",397,0)
 ; If there has not been any ECME activity since that date/time, then
"RTN","BPSRES",398,0)
 ; disallow the edit of Submission Clarification Codes, Quit with 1.
"RTN","BPSRES",399,0)
 ;
"RTN","BPSRES",400,0)
 S BPS7988DATE=0
"RTN","BPSRES",401,0)
 ;
"RTN","BPSRES",402,0)
 ; Loop through the REJECTS multiple.
"RTN","BPSRES",403,0)
 S BPSREJECT=0
"RTN","BPSRES",404,0)
 F  S BPSREJECT=$O(^PSRX(BPSRX,"REJ",BPSREJECT)) Q:'BPSREJECT  D
"RTN","BPSRES",405,0)
 . ; If a reject is not for the current fill, skip this one.
"RTN","BPSRES",406,0)
 . I $$GET1^DIQ(52.25,BPSREJECT_","_BPSRX,5)'=BPSFILL Q
"RTN","BPSRES",407,0)
 . ;
"RTN","BPSRES",408,0)
 . ; If not a 79 or 88, skip this one.
"RTN","BPSRES",409,0)
 . I ",79,88,"'[(","_$$GET1^DIQ(52.25,BPSREJECT_","_BPSRX,.01)_",") Q
"RTN","BPSRES",410,0)
 . ;
"RTN","BPSRES",411,0)
 . ; Pull DATE/TIME DETECTED.  If the date/time is later than
"RTN","BPSRES",412,0)
 . ; BPS7988DATE, then reset BPS7988DATE to that date/time.
"RTN","BPSRES",413,0)
 . S BPSX=$$GET1^DIQ(52.25,BPSREJECT_","_BPSRX,1,"I")
"RTN","BPSRES",414,0)
 . I BPSX>BPS7988DATE S BPS7988DATE=BPSX
"RTN","BPSRES",415,0)
 . Q
"RTN","BPSRES",416,0)
 ; 
"RTN","BPSRES",417,0)
 ; If <blank> then Quit with 0.
"RTN","BPSRES",418,0)
 I BPS7988DATE=0 Q 0
"RTN","BPSRES",419,0)
 ;
"RTN","BPSRES",420,0)
 ; Once we have the most recent DATE/TIME DETECTED, determine whether
"RTN","BPSRES",421,0)
 ; there is ECME activity later than that.
"RTN","BPSRES",422,0)
 ;
"RTN","BPSRES",423,0)
 ; Loop through entries the ACTIVITY LOG multiple.
"RTN","BPSRES",424,0)
 S (BPSX,BPSACTIVITY,BPSECMEDATE)=0
"RTN","BPSRES",425,0)
 F  S BPSACTIVITY=$O(^PSRX(BPSRX,"A",BPSACTIVITY)) Q:'BPSACTIVITY  D
"RTN","BPSRES",426,0)
 . ; If the REASON is not "M" (=ECME), skip.
"RTN","BPSRES",427,0)
 . I $$GET1^DIQ(52.3,BPSACTIVITY_","_BPSRX,.02,"I")'="M" Q
"RTN","BPSRES",428,0)
 . ; 
"RTN","BPSRES",429,0)
 . ; Pull the date/time stamp from the activity log entry.  If later
"RTN","BPSRES",430,0)
 . ; than what we found so far, update BPSECMEDATE.
"RTN","BPSRES",431,0)
 . S BPSX=$$GET1^DIQ(52.3,BPSACTIVITY_","_BPSRX,.01,"I")
"RTN","BPSRES",432,0)
 . I BPSX>BPSECMEDATE S BPSECMEDATE=BPSX
"RTN","BPSRES",433,0)
 . Q
"RTN","BPSRES",434,0)
 ;
"RTN","BPSRES",435,0)
 ; If the BPSECMEDATE is later than BPS7988DATE, then Quit with 0
"RTN","BPSRES",436,0)
 ; to allow the edit of Submission Clarification Codes.  Otherwise,
"RTN","BPSRES",437,0)
 ; Quit with 1 to skip, not allow, the enter/edit of those codes.
"RTN","BPSRES",438,0)
 ; When a claim is rejected, the time stamp on the Activity Log may
"RTN","BPSRES",439,0)
 ; be a second or two later than the time stamp on the Reject.
"RTN","BPSRES",440,0)
 ; Therefore, we add 60 seconds to the time stamp on the reject when
"RTN","BPSRES",441,0)
 ; making this comparison.
"RTN","BPSRES",442,0)
 ;
"RTN","BPSRES",443,0)
 I BPSECMEDATE>(BPS7988DATE+.00006) Q 0
"RTN","BPSRES",444,0)
 Q 1
"RTN","BPSRES",445,0)
 ;
"RTN","BPSRES1")
0^17^B55933378
"RTN","BPSRES1",1,0)
BPSRES1 ;AITC/MRD - ECME SCREEN RESUBMIT W/EDITS ;10/23/17
"RTN","BPSRES1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**23,24**;JUN 2004;Build 43
"RTN","BPSRES1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRES1",4,0)
 ;
"RTN","BPSRES1",5,0)
ADDLFLDS(BPS02,BPS59,BPSADDLFLDS,BPSDOS) ; Add fields to a claim.
"RTN","BPSRES1",6,0)
 ; This function allows the user to add to claim fields not on payer
"RTN","BPSRES1",7,0)
 ; sheet.  It is used by the RED/Resubmit with Edits Action on the
"RTN","BPSRES1",8,0)
 ; ECME User Screen and by the PRO Option (Process Secondary/TRICARE
"RTN","BPSRES1",9,0)
 ; Rx to ECME).
"RTN","BPSRES1",10,0)
 ; Input: BPS02 = Pointer to BPS CLAIMS
"RTN","BPSRES1",11,0)
 ;        BPS59 = Pointer to BSP TRANSACTION
"RTN","BPSRES1",12,0)
 ;        BPSDOS = Date of Service; if passed in, then display
"RTN","BPSRES1",13,0)
 ;                 when listing fields to be added to claim
"RTN","BPSRES1",14,0)
 ; This function will return:
"RTN","BPSRES1",15,0)
 ;     1 - If user entered additional fields.
"RTN","BPSRES1",16,0)
 ;     0 - If user added no fields.
"RTN","BPSRES1",17,0)
 ;    -1 - If user exited out via "^".
"RTN","BPSRES1",18,0)
 ; This function will also set up the array BPSADDFLDS if the user
"RTN","BPSRES1",19,0)
 ; chooses to add any fields to the claim.
"RTN","BPSRES1",20,0)
 ;    BPSADDLFLDS(Field IEN) = Value to Send
"RTN","BPSRES1",21,0)
 ;
"RTN","BPSRES1",22,0)
 N BPS,BPSFIELD,BPSGETCODE,BPSPAYER,BPSQ,BPSSEGMENT
"RTN","BPSRES1",23,0)
 N DIC,MEDN,TRANLIST,X,Y
"RTN","BPSRES1",24,0)
 ;
"RTN","BPSRES1",25,0)
 ; Prompt user whether to enter additional fields.  If user enters
"RTN","BPSRES1",26,0)
 ; "No", display the Date of Service, if it exists, then Quit with 0.
"RTN","BPSRES1",27,0)
 ; If user enters "^", Quit with -1.
"RTN","BPSRES1",28,0)
 ;
"RTN","BPSRES1",29,0)
 W !
"RTN","BPSRES1",30,0)
 S BPSQ=$$YESNO^BPSSCRRS("Submit NCPDP Field Not on Payer Sheet (Y/N)","N")
"RTN","BPSRES1",31,0)
 I BPSQ=0,$G(BPSDOS)'="" W !!,"Fields entered to transmit:",!,?4,"Date of Service: ",$$FMTE^XLFDT(BPSDOS,"5D")
"RTN","BPSRES1",32,0)
 I BPSQ'=1 Q BPSQ
"RTN","BPSRES1",33,0)
 ;
"RTN","BPSRES1",34,0)
 ; Kill array that will contain list of fields to be added.
"RTN","BPSRES1",35,0)
 ;
"RTN","BPSRES1",36,0)
 K BPSADDLFLDS
"RTN","BPSRES1",37,0)
 ;
"RTN","BPSRES1",38,0)
 ; Build an array listing the fields already on the payer sheet and an
"RTN","BPSRES1",39,0)
 ; array listing all segments on the payer sheet.  Include all segments,
"RTN","BPSRES1",40,0)
 ; though some may be excluded later.
"RTN","BPSRES1",41,0)
 ;
"RTN","BPSRES1",42,0)
 D ARRAYS(BPS02,.BPSPAYER,.BPSSEGMENT)
"RTN","BPSRES1",43,0)
 I 'BPSPAYER Q 0
"RTN","BPSRES1",44,0)
 ;
"RTN","BPSRES1",45,0)
 ; Build BPS array.  While each field in the file BPS NCPDP FIELD DEFS
"RTN","BPSRES1",46,0)
 ; has Get Code (executable M code) for pulling the data value, the way
"RTN","BPSRES1",47,0)
 ; this has been implemented is that first the subroutine $$BPS^BPSOSCB
"RTN","BPSRES1",48,0)
 ; pulls many fields of data, building the BPS array, and then the
"RTN","BPSRES1",49,0)
 ; Get Code for each field puts into BPS("X") a value from the BPS
"RTN","BPSRES1",50,0)
 ; array.  Because the system needs to display to the user the value
"RTN","BPSRES1",51,0)
 ; that would be sent with a field being added to the claim, we need to
"RTN","BPSRES1",52,0)
 ; build the entire BPS array, which will be used by the Get Code for
"RTN","BPSRES1",53,0)
 ; any fields selected by the user.  TRANLIST is an array listing all
"RTN","BPSRES1",54,0)
 ; BPS Transactions in this batch of claims.  However, the VA does not
"RTN","BPSRES1",55,0)
 ; ever batch claims, so there is always only one transaction in that
"RTN","BPSRES1",56,0)
 ; list.  BPS(9002313.0201) must be set to 1.  It should never return a
"RTN","BPSRES1",57,0)
 ; value other than 0, but if it does, Quit.
"RTN","BPSRES1",58,0)
 ;
"RTN","BPSRES1",59,0)
 S TRANLIST(BPS59)=""
"RTN","BPSRES1",60,0)
 S BPS(9002313.0201)=1
"RTN","BPSRES1",61,0)
 S X=$$BPS^BPSOSCB
"RTN","BPSRES1",62,0)
 I X W !,$P(X,U,2),".",!,"Fields may not be added at this time." Q 0
"RTN","BPSRES1",63,0)
 ;
"RTN","BPSRES1",64,0)
 ; Display help text.
"RTN","BPSRES1",65,0)
 ;
"RTN","BPSRES1",66,0)
 W !!,"Enter a valid NCPDP Field name or number.  Enter '??' for"
"RTN","BPSRES1",67,0)
 W !,"a list of possible choices.  Fields already on the payer sheet"
"RTN","BPSRES1",68,0)
 W !,"are excluded from the list of possible choices.  Also excluded"
"RTN","BPSRES1",69,0)
 W !,"are any fields that do not have logic to pull data from VistA"
"RTN","BPSRES1",70,0)
 W !,"(i.e. fields that will always be <blank>)."
"RTN","BPSRES1",71,0)
 ;
"RTN","BPSRES1",72,0)
A1 ; Prompt user for an NCPDP field to add to the claim.
"RTN","BPSRES1",73,0)
 ;
"RTN","BPSRES1",74,0)
 K DIC
"RTN","BPSRES1",75,0)
 ;
"RTN","BPSRES1",76,0)
 S DIC=9002313.91
"RTN","BPSRES1",77,0)
 S DIC(0)="AEMQ"
"RTN","BPSRES1",78,0)
 S DIC("A")="NCPDP Field Name or Number:  "
"RTN","BPSRES1",79,0)
 S DIC("S")="I $$CHECK^BPSRES1(Y,.BPSPAYER,.BPSSEGMENT)"
"RTN","BPSRES1",80,0)
 S DIC("T")=""
"RTN","BPSRES1",81,0)
 ;
"RTN","BPSRES1",82,0)
 W !
"RTN","BPSRES1",83,0)
 D ^DIC
"RTN","BPSRES1",84,0)
 ;
"RTN","BPSRES1",85,0)
 ; When the user just hits <return>, skip down to A2.
"RTN","BPSRES1",86,0)
 ;
"RTN","BPSRES1",87,0)
 I X="" G A2
"RTN","BPSRES1",88,0)
 ;
"RTN","BPSRES1",89,0)
 I Y=-1 Q -1
"RTN","BPSRES1",90,0)
 S BPSFIELD=+Y
"RTN","BPSRES1",91,0)
 ;
"RTN","BPSRES1",92,0)
 ; Disallow a field already added.
"RTN","BPSRES1",93,0)
 ;
"RTN","BPSRES1",94,0)
 I $D(BPSADDLFLDS(BPSFIELD)) W !,?4,"This field has already been added to the claim.",*7 G A1
"RTN","BPSRES1",95,0)
 ;
"RTN","BPSRES1",96,0)
 ; Display to the user the value to be sent with this field.
"RTN","BPSRES1",97,0)
 ;
"RTN","BPSRES1",98,0)
 S BPS("X")=""
"RTN","BPSRES1",99,0)
 S MEDN=1  ; Required for some GET codes.
"RTN","BPSRES1",100,0)
 S BPSGETCODE=0
"RTN","BPSRES1",101,0)
 F  S BPSGETCODE=$O(^BPSF(9002313.91,BPSFIELD,10,BPSGETCODE)) Q:'BPSGETCODE  X $G(^BPSF(9002313.91,BPSFIELD,10,BPSGETCODE,0))
"RTN","BPSRES1",102,0)
 W !,?4,"Value to transmit: ",BPS("X")
"RTN","BPSRES1",103,0)
 S BPSQ=$$YESNO^BPSSCRRS("Transmit with claim (Y/N)","Y")
"RTN","BPSRES1",104,0)
 I BPSQ=0 G A1
"RTN","BPSRES1",105,0)
 I BPSQ=-1 K BPSADDLFLDS Q -1
"RTN","BPSRES1",106,0)
 ;
"RTN","BPSRES1",107,0)
 ; Add selected field to array (Y=internal field #).
"RTN","BPSRES1",108,0)
 ;
"RTN","BPSRES1",109,0)
 S BPSADDLFLDS(BPSFIELD)=BPS("X")
"RTN","BPSRES1",110,0)
 ;
"RTN","BPSRES1",111,0)
 G A1
"RTN","BPSRES1",112,0)
 ;
"RTN","BPSRES1",113,0)
A2 ; User is done selecting fields to add.
"RTN","BPSRES1",114,0)
 ;
"RTN","BPSRES1",115,0)
 ; If user added no fields, Quit with 0.
"RTN","BPSRES1",116,0)
 ;
"RTN","BPSRES1",117,0)
 I '$D(BPSADDLFLDS),'$G(BPSDOS) Q 0
"RTN","BPSRES1",118,0)
 ;
"RTN","BPSRES1",119,0)
 ; Display to the user the list of fields being added to the claim.
"RTN","BPSRES1",120,0)
 ;
"RTN","BPSRES1",121,0)
 W !!,"Fields entered to transmit:"
"RTN","BPSRES1",122,0)
 I $G(BPSDOS)'="" W !,?4,"Date of Service: ",$$FMTE^XLFDT(BPSDOS,"5D")
"RTN","BPSRES1",123,0)
 S BPSFIELD=""
"RTN","BPSRES1",124,0)
 F  S BPSFIELD=$O(BPSADDLFLDS(BPSFIELD)) Q:'BPSFIELD  D
"RTN","BPSRES1",125,0)
 . W !,?4,$$GET1^DIQ(9002313.91,BPSFIELD,.01),"-"
"RTN","BPSRES1",126,0)
 . W $$GET1^DIQ(9002313.91,BPSFIELD,.06)," "
"RTN","BPSRES1",127,0)
 . W $$GET1^DIQ(9002313.91,BPSFIELD,.03),": "
"RTN","BPSRES1",128,0)
 . W BPSADDLFLDS(BPSFIELD)
"RTN","BPSRES1",129,0)
 . Q
"RTN","BPSRES1",130,0)
 ;
"RTN","BPSRES1",131,0)
 Q 1
"RTN","BPSRES1",132,0)
 ;
"RTN","BPSRES1",133,0)
ARRAYS(BPS02,BPSPAYER,BPSSEGMENT)  ; Build BPSPAYER array and BPSSEGMENT array.
"RTN","BPSRES1",134,0)
 ;
"RTN","BPSRES1",135,0)
 ; Build an array listing the fields already on the payer sheet and
"RTN","BPSRES1",136,0)
 ; an array listing all segments on the payer sheet.  Include all
"RTN","BPSRES1",137,0)
 ; segments, though some may be excluded later.
"RTN","BPSRES1",138,0)
 ;
"RTN","BPSRES1",139,0)
 N BPSFIELD,BPSORDER
"RTN","BPSRES1",140,0)
 ;
"RTN","BPSRES1",141,0)
 S BPSPAYER=$$GET1^DIQ(9002313.02,BPS02,.02,"I")  ; Payer Sheet.
"RTN","BPSRES1",142,0)
 I 'BPSPAYER Q
"RTN","BPSRES1",143,0)
 F BPSSEGMENT=100:10:300 D
"RTN","BPSRES1",144,0)
 . I '$D(^BPSF(9002313.92,BPSPAYER,BPSSEGMENT)) Q
"RTN","BPSRES1",145,0)
 . S BPSSEGMENT(BPSSEGMENT)=""
"RTN","BPSRES1",146,0)
 . S BPSORDER=0
"RTN","BPSRES1",147,0)
 . F  S BPSORDER=$O(^BPSF(9002313.92,BPSPAYER,BPSSEGMENT,BPSORDER)) Q:'BPSORDER  D
"RTN","BPSRES1",148,0)
 . . S BPSFIELD=$P($G(^BPSF(9002313.92,BPSPAYER,BPSSEGMENT,BPSORDER,0)),"^",2)  ; Field IEN
"RTN","BPSRES1",149,0)
 . . I BPSFIELD'="" S BPSPAYER(BPSFIELD)=""
"RTN","BPSRES1",150,0)
 . . Q
"RTN","BPSRES1",151,0)
 . Q
"RTN","BPSRES1",152,0)
 ;
"RTN","BPSRES1",153,0)
 Q
"RTN","BPSRES1",154,0)
 ;
"RTN","BPSRES1",155,0)
CHECK(BPSY,BPSPAYER,BPSSEGMENT) ; Screen for BPS NCPDP FIELD DEFS lookup.  See ADDLFLDS above.
"RTN","BPSRES1",156,0)
 ; This function is called for a given entry in the file BPS
"RTN","BPSRES1",157,0)
 ; NCPDP FIELD DEFS, where +Y will be the IEN.  If this function
"RTN","BPSRES1",158,0)
 ; returns a 1, then this entry is a valid choice.  If this
"RTN","BPSRES1",159,0)
 ; function returns a 0, then this entry will not be displayed to
"RTN","BPSRES1",160,0)
 ; the user when listing possible choices and this entry will not
"RTN","BPSRES1",161,0)
 ; be a valid choice for the user.
"RTN","BPSRES1",162,0)
 ;
"RTN","BPSRES1",163,0)
 ; Disallow if already on the payer sheet.
"RTN","BPSRES1",164,0)
 ;
"RTN","BPSRES1",165,0)
 I $D(BPSPAYER(+BPSY)) Q 0
"RTN","BPSRES1",166,0)
 ;
"RTN","BPSRES1",167,0)
 ; Disallow if this field is not on a request segment or if this
"RTN","BPSRES1",168,0)
 ; field is on a segment not on the payer sheet.
"RTN","BPSRES1",169,0)
 ;
"RTN","BPSRES1",170,0)
 S BPSSEGMENT=$P($G(^BPSF(9002313.91,+BPSY,5)),"^",4)  ; Request Segment.
"RTN","BPSRES1",171,0)
 S BPSSEGMENT=$P($G(^BPSF(9002313.9,+BPSSEGMENT,0)),"^",2)
"RTN","BPSRES1",172,0)
 I BPSSEGMENT="" Q 0
"RTN","BPSRES1",173,0)
 I '$D(BPSSEGMENT(BPSSEGMENT)) Q 0
"RTN","BPSRES1",174,0)
 ;
"RTN","BPSRES1",175,0)
 ; There are many segments the VA does not send, even if that
"RTN","BPSRES1",176,0)
 ; segment is on a payer sheet.  Disallow any fields that are
"RTN","BPSRES1",177,0)
 ; on one of those segments.
"RTN","BPSRES1",178,0)
 ;
"RTN","BPSRES1",179,0)
 I ",140,170,200,210,220,230,240,250,260,270,280,290,300,"[(","_BPSSEGMENT_",") Q 0
"RTN","BPSRES1",180,0)
 ;
"RTN","BPSRES1",181,0)
 ; Disallow if Get Code is simply Setting BPS("X") to "".
"RTN","BPSRES1",182,0)
 ;
"RTN","BPSRES1",183,0)
 I $G(^BPSF(9002313.91,+BPSY,10,1,0))["S BPS(""X"")=""""" Q 0
"RTN","BPSRES1",184,0)
 ;
"RTN","BPSRES1",185,0)
 Q 1
"RTN","BPSRES1",186,0)
 ;
"RTN","BPSRES1",187,0)
SAVE(BPSACTION,BPS59,BPSADDLFLDS,BPSOVRIEN) ; Save into BPS NCPDP OVERRIDES (#9002313.511)
"RTN","BPSRES1",188,0)
 ;
"RTN","BPSRES1",189,0)
 ; If the user chooses to add any fields to the claim, each field
"RTN","BPSRES1",190,0)
 ; will be listed as BPSADDLFLDS(Field IEN).
"RTN","BPSRES1",191,0)
 ;
"RTN","BPSRES1",192,0)
 ; Input:  BPSACTION = Action selected by user (e.g. RED, PRO)
"RTN","BPSRES1",193,0)
 ;         BPS59 = Pointer to BPS TRANSACTIONS
"RTN","BPSRES1",194,0)
 ;         BPSADDLFLDS = Passed by reference, array listing the
"RTN","BPSRES1",195,0)
 ;            NCPDP fields to be added to the claim.
"RTN","BPSRES1",196,0)
 ;            BPSADDLFLDS(NCPDP Field) = ""
"RTN","BPSRES1",197,0)
 ;         BPSOVRIEN = Passed by reference, ien of entry in the
"RTN","BPSRES1",198,0)
 ;            file BPS NCPDP OVERRIDE
"RTN","BPSRES1",199,0)
 ;
"RTN","BPSRES1",200,0)
 N BPSFDA,BPSFIELD,BPSMSG,BPSCNT,BPSFIELD
"RTN","BPSRES1",201,0)
 ;
"RTN","BPSRES1",202,0)
 S BPSFDA(9002313.511,"+1,",.01)=BPS59
"RTN","BPSRES1",203,0)
 D NOW^%DTC
"RTN","BPSRES1",204,0)
 S BPSFDA(9002313.511,"+1,",.02)=%
"RTN","BPSRES1",205,0)
 ;
"RTN","BPSRES1",206,0)
 ; Store the fields for which the user was prompted.
"RTN","BPSRES1",207,0)
 ;
"RTN","BPSRES1",208,0)
 S BPSCNT=1
"RTN","BPSRES1",209,0)
 I BPSACTION="RED" D
"RTN","BPSRES1",210,0)
 . S BPSFIELD=$O(^BPSF(9002313.91,"B",303,"")) I BPSFIELD]"" S BPSFDA(9002313.5111,"+2,+1,",.01)=BPSFIELD,BPSFDA(9002313.5111,"+2,+1,",.02)=BPPSNCD
"RTN","BPSRES1",211,0)
 . S BPSFIELD=$O(^BPSF(9002313.91,"B",306,"")) I BPSFIELD]"" S BPSFDA(9002313.5111,"+3,+1,",.01)=BPSFIELD,BPSFDA(9002313.5111,"+3,+1,",.02)=BPRELCD
"RTN","BPSRES1",212,0)
 . S BPSFIELD=$O(^BPSF(9002313.91,"B",462,"")) I BPSFIELD]"" S BPSFDA(9002313.5111,"+4,+1,",.01)=BPSFIELD,BPSFDA(9002313.5111,"+4,+1,",.02)=BPPREAUT
"RTN","BPSRES1",213,0)
 . S BPSFIELD=$O(^BPSF(9002313.91,"B",461,"")) I BPSFIELD]"" S BPSFDA(9002313.5111,"+5,+1,",.01)=BPSFIELD,BPSFDA(9002313.5111,"+5,+1,",.02)=BPPRETYP
"RTN","BPSRES1",214,0)
 . S BPSFIELD=$O(^BPSF(9002313.91,"B",420,"")) I BPSFIELD]"" S BPSFDA(9002313.5111,"+6,+1,",.01)=BPSFIELD,BPSFDA(9002313.5111,"+6,+1,",.02)=BPCLCD1_"~"_$G(BPCLCD2)_"~"_$G(BPCLCD3)
"RTN","BPSRES1",215,0)
 . S BPSFIELD=$O(^BPSF(9002313.91,"B",384,"")) I BPSFIELD]"" S BPSFDA(9002313.5111,"+7,+1,",.01)=BPSFIELD,BPSFDA(9002313.5111,"+7,+1,",.02)=BPPTRES
"RTN","BPSRES1",216,0)
 . S BPSFIELD=$O(^BPSF(9002313.91,"B",147,"")) I BPSFIELD]"" S BPSFDA(9002313.5111,"+8,+1,",.01)=BPSFIELD,BPSFDA(9002313.5111,"+8,+1,",.02)=BPPHSRV
"RTN","BPSRES1",217,0)
 . S BPSFIELD=$O(^BPSF(9002313.91,"B",357,"")) I BPSFIELD]"" S BPSFDA(9002313.5111,"+9,+1,",.01)=BPSFIELD,BPSFDA(9002313.5111,"+9,+1,",.02)=BPDLYRS
"RTN","BPSRES1",218,0)
 . S BPSCNT=9
"RTN","BPSRES1",219,0)
 . Q
"RTN","BPSRES1",220,0)
 ;
"RTN","BPSRES1",221,0)
 ; Store additional NCPDP fields which the user chose to add to the
"RTN","BPSRES1",222,0)
 ; the resubmitted claim.
"RTN","BPSRES1",223,0)
 ;
"RTN","BPSRES1",224,0)
 S BPSFIELD=0
"RTN","BPSRES1",225,0)
 F  S BPSFIELD=$O(BPSADDLFLDS(BPSFIELD)) Q:'BPSFIELD  D
"RTN","BPSRES1",226,0)
 . S BPSCNT=BPSCNT+1
"RTN","BPSRES1",227,0)
 . S BPSFDA(9002313.5112,"+"_BPSCNT_",+1,",.01)=BPSFIELD  ; Field#
"RTN","BPSRES1",228,0)
 . S BPSFDA(9002313.5112,"+"_BPSCNT_",+1,",.02)=$$GET1^DIQ(9002313.91,BPSFIELD,2,"I")  ; Segment#
"RTN","BPSRES1",229,0)
 . Q
"RTN","BPSRES1",230,0)
 ;
"RTN","BPSRES1",231,0)
 D UPDATE^DIE("","BPSFDA","BPSOVRIEN","BPSMSG")
"RTN","BPSRES1",232,0)
 ;
"RTN","BPSRES1",233,0)
 I $D(BPSMSG("DIERR")) D  Q -1
"RTN","BPSRES1",234,0)
 . W !!,"Could not save override information into BPS NCPDP OVERRIDE file.",!
"RTN","BPSRES1",235,0)
 . N DIR
"RTN","BPSRES1",236,0)
 . S DIR(0)="E"
"RTN","BPSRES1",237,0)
 . S DIR("A")="Press Return to continue."
"RTN","BPSRES1",238,0)
 . D ^DIR
"RTN","BPSRES1",239,0)
 . Q
"RTN","BPSRES1",240,0)
 ;
"RTN","BPSRES1",241,0)
 Q 1
"RTN","BPSRES1",242,0)
 ;
"RTN","BPSRPT0")
0^5^B79756869
"RTN","BPSRPT0",1,0)
BPSRPT0 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT0",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,10,11,19,20,23,24**;JUN 2004;Build 43
"RTN","BPSRPT0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRPT0",4,0)
 ;
"RTN","BPSRPT0",5,0)
 Q
"RTN","BPSRPT0",6,0)
 ;
"RTN","BPSRPT0",7,0)
 ; Front End for ECME Reports
"RTN","BPSRPT0",8,0)
 ; 
"RTN","BPSRPT0",9,0)
 ; Input variable: BPRTYPE -> 1 = Payable Claims
"RTN","BPSRPT0",10,0)
 ;                          2 = Rejected Claims
"RTN","BPSRPT0",11,0)
 ;                          3 = Claims Submitted, Not Yet Released
"RTN","BPSRPT0",12,0)
 ;                          4 = Reversed Claims
"RTN","BPSRPT0",13,0)
 ;                          5 = Recent Transactions
"RTN","BPSRPT0",14,0)
 ;                          6 = Totals By Date
"RTN","BPSRPT0",15,0)
 ;                          7 = Closed Claims
"RTN","BPSRPT0",16,0)
 ;                          8 = Spending Account Report
"RTN","BPSRPT0",17,0)
 ;                          9 = ECME RXs with Non-Billable Status
"RTN","BPSRPT0",18,0)
 ;                          
"RTN","BPSRPT0",19,0)
 ; Passed variables:
"RTN","BPSRPT0",20,0)
 ;  The following local variables are set in BPSPRT0 and are passed throughout
"RTN","BPSRPT0",21,0)
 ;  the BPSRPT* routines. They are used during the looping/filtering of transactions
"RTN","BPSRPT0",22,0)
 ;  and when creating the reports.
"RTN","BPSRPT0",23,0)
 ;  These local variable are not passed as parameters but assumed to be defined.
"RTN","BPSRPT0",24,0)
 ; 
"RTN","BPSRPT0",25,0)
 ;    BPRTYPE -  report number (1-9) 
"RTN","BPSRPT0",26,0)
 ;      1 = Payable Claims, 2 = Rejected Claims, 3 = Claims Submitted, Not Yet Released, 
"RTN","BPSRPT0",27,0)
 ;      4 = Reversed Claims, 5 = Recent Transactions, 6 = Totals By Date,
"RTN","BPSRPT0",28,0)
 ;      7 = Closed Claims, 8 = Spending Account Report, 9 = ECME RXs with Non-Billable Status
"RTN","BPSRPT0",29,0)
 ;    BPRPTNAM - report name 
"RTN","BPSRPT0",30,0)
 ;      1-PAYABLE CLAIMS, 2-REJECTED CLAIMS, 3-SUBMIT,NOT RELEASED CLAIMS,
"RTN","BPSRPT0",31,0)
 ;      4-REVERSED CLAIMS, 5-RECENT TRANSACTIONS, 6-TOTALS, 7-CLOSED CLAIMS,
"RTN","BPSRPT0",32,0)
 ;      8-SPENDING ACCOUNT REPORT, 9-RXS WITH NON-BILLABLE STATUS
"RTN","BPSRPT0",33,0)
 ;    BPSLC - all lower case letters (used to convert from lower to upper)
"RTN","BPSRPT0",34,0)
 ;    BPSUC - all upper case letters (used to convert from lower to upper)
"RTN","BPSRPT0",35,0)
 ;    BPPHARM - Pharmacy Divisions or ALL
"RTN","BPSRPT0",36,0)
 ;      BPPHARM=0 - ALL
"RTN","BPSRPT0",37,0)
 ;        if Pharmacy Divisions was selected, returns BPPHARM variable and an array
"RTN","BPSRPT0",38,0)
 ;      BPPHARM=1
"RTN","BPSRPT0",39,0)
 ;      BPPHARM(ptr) for each selection - Pointer to BPS PHARMACIES 
"RTN","BPSRPT0",40,0)
 ;    BPSUMDET - 1=Display Summary  or 0=Detail Format 
"RTN","BPSRPT0",41,0)
 ;    BPINS - allow selection of Insurance or ALL, returns BPINS variable and BPARR array
"RTN","BPSRPT0",42,0)
 ;      0="^" Exit
"RTN","BPSRPT0",43,0)
 ;      1=if ALL - BPARR(1.11)="A",BPARR(2.04)="",BPARR("INS")=""
"RTN","BPSRPT0",44,0)
 ;      1=if INSURANCE
"RTN","BPSRPT0",45,0)
 ;        BPARR(1.11)="I",
"RTN","BPSRPT0",46,0)
 ;        BPARR(2.04)=";1;ptr;"   if multiple entries - BPARR(2.04)=";ptr;ptr;."
"RTN","BPSRPT0",47,0)
 ;        BPARR("INS")=";1;ptr;"  if multiple entries - BPARR("INS")=";ptr;ptr;."
"RTN","BPSRPT0",48,0)
 ;      ptr - Pointer to the INSURANCE file
"RTN","BPSRPT0",49,0)
 ;    BPINSINF - BPINSINF=0 - if ALL Insurances was selected above
"RTN","BPSRPT0",50,0)
 ;      BPINSINF=BPARR("INS") 
"RTN","BPSRPT0",51,0)
 ;    BPMWC - Fill location C-CMOP, W-WINDOW, M-MAIL
"RTN","BPSRPT0",52,0)
 ;      BPMWC=A-ALL, ^-Exit
"RTN","BPSRPT0",53,0)
 ;      BPMWC=(C,W,M)
"RTN","BPSRPT0",54,0)
 ;       if multiple entries - BPMWC=(a comma delimited string of users selection, e.g. "C,M")
"RTN","BPSRPT0",55,0)
 ;    BPRTBCK - Fill Type - 2-RealTime Fills, 3-Backbills, 4-PRO Option, 5-Resubmission
"RTN","BPSRPT0",56,0)
 ;      BPRTBCK=1-ALL,^-exit
"RTN","BPSRPT0",57,0)
 ;      BPRTBCK=(2,3,4,5)
"RTN","BPSRPT0",58,0)
 ;       if multiple entries - BPRTBCK=(a comma delimited string of users selection, e.g. "3,5")
"RTN","BPSRPT0",59,0)
 ;    BPQSTDRG - Drug-2 or Drug Class-3 or All-1 or Exit-^
"RTN","BPSRPT0",60,0)
 ;      BPQSTDRG=(1,2,3,^)
"RTN","BPSRPT0",61,0)
 ;    BPDRUG - select Drug - ptr=Pointer to the DRUG file #50
"RTN","BPSRPT0",62,0)
 ;      BPDRUG= ptr - if multiple entries - BPDRUG="ptr,ptr,."
"RTN","BPSRPT0",63,0)
 ;    BPDRGCL - select Drug - ptr= Pointer to the DRUG CLASS file #50.5
"RTN","BPSRPT0",64,0)
 ;      BPDRGCL= ptr - if multiple entries - BPDRGCL= ptr,ptr,.
"RTN","BPSRPT0",65,0)
 ;    BPBEGDT - Date Range
"RTN","BPSRPT0",66,0)
 ;      BPBEGDT=^-Exit
"RTN","BPSRPT0",67,0)
 ;      BPBEGDT= beginning date ^ ending date
"RTN","BPSRPT0",68,0)
 ;      BPBEGDT=$P(BPBEGDT,U) - beginning date
"RTN","BPSRPT0",69,0)
 ;      BPENDDT=$P(BPBEGDT,U,2) - ending date
"RTN","BPSRPT0",70,0)
 ;    BPRLNRL - 2-Released, 3-Not Released or 1-All
"RTN","BPSRPT0",71,0)
 ;      BPRLNRL=(1,2,3,^) ^=exit
"RTN","BPSRPT0",72,0)
 ;    BPQSTRC - select Reject Code-1 or All-0
"RTN","BPSRPT0",73,0)
 ;      BPQSTRC=(0,1,^)
"RTN","BPSRPT0",74,0)
 ;    BPREJCD - if Reject Code=1 was selected above
"RTN","BPSRPT0",75,0)
 ;      BPREJCD=ptr - if multiple entries - BPREJCD=ptr,ptr,.
"RTN","BPSRPT0",76,0)
 ;       ptr=Pointer to Reject Code in #9002313.93
"RTN","BPSRPT0",77,0)
 ;    BPAUTREV - AutoReversed-1 or All-0
"RTN","BPSRPT0",78,0)
 ;      BPAUTREV=(0,1,^)
"RTN","BPSRPT0",79,0)
 ;    BPACREJ - Accepted-2, Rejected-1 or All-0
"RTN","BPSRPT0",80,0)
 ;      BPACREJ=(0,1,2,^)
"RTN","BPSRPT0",81,0)
 ;    BPQSTCR - select Close Claim Reason-1 or All-0
"RTN","BPSRPT0",82,0)
 ;      BPQSTCR=(0,1,^)
"RTN","BPSRPT0",83,0)
 ;    BPCCRSN - if Specific Close Claim Reason=1 1 was selected above
"RTN","BPSRPT0",84,0)
 ;      BPCCRSN=ptr - if multiple entries - BPCCRSN=ptr,ptr  ptr=Pointer to file #356.8
"RTN","BPSRPT0",85,0)
 ;    BPELIG - Eligibility V-Veteran, T-Tricare, C-Champva or 0-All
"RTN","BPSRPT0",86,0)
 ;      BPELIG=(V,T,C,0,^)
"RTN","BPSRPT0",87,0)
 ;    BPELIG1 - multiple Eligibilities or All-0 
"RTN","BPSRPT0",88,0)
 ;      BPELIG1=(0,^)
"RTN","BPSRPT0",89,0)
 ;      BPELIG1=(V,T,C)   V-Veteran, T-Tricare, C-Champva
"RTN","BPSRPT0",90,0)
 ;       if multiple entries BPELIG1=(a comma delimited string of users selection, e.g. "C,T")
"RTN","BPSRPT0",91,0)
 ;    BPOPCL - Open-2, Closed-1 or All-0
"RTN","BPSRPT0",92,0)
 ;      BPOPCL=(0,1,2,^)
"RTN","BPSRPT0",93,0)
 ;    BPQSTPR - select Prescriber-1 or All-0
"RTN","BPSRPT0",94,0)
 ;      BPQSTPR=(0,1,^)
"RTN","BPSRPT0",95,0)
 ;    BPRESC - if Prescribers=1 was selected above
"RTN","BPSRPT0",96,0)
 ;      BPRESC=ptr - if multiple entries - BPRESC=ptr,ptr  ptr=Pointer to file #200
"RTN","BPSRPT0",97,0)
 ;    BPQSTPAT - select Patients-1 or All-0
"RTN","BPSRPT0",98,0)
 ;      BPQSTPAT=(0,1,^)
"RTN","BPSRPT0",99,0)
 ;    BPPAT - if Patients=1 was selected above
"RTN","BPSRPT0",100,0)
 ;      BPPAT=ptr - if multiple entries - BPPAT=ptr,ptr  ptr=Pointer to file #2
"RTN","BPSRPT0",101,0)
 ;    BPBILL - Range of Billed Amount-1 or All-0
"RTN","BPSRPT0",102,0)
 ;      BPBILL=(0,1,^) 
"RTN","BPSRPT0",103,0)
 ;    BPMIN - if BPBILL=1 enter minimum billed amount
"RTN","BPSRPT0",104,0)
 ;      BPMIN=amount entered, default is 0
"RTN","BPSRPT0",105,0)
 ;    BPMAX - if BPBILL=1 enter maximum billed amount
"RTN","BPSRPT0",106,0)
 ;      BPMAX=amount entered, default is 999999
"RTN","BPSRPT0",107,0)
 ;    BPALRC - All-A or Most Recent-R (Non-Billable Status report only, BPRTYPE=9)
"RTN","BPSRPT0",108,0)
 ;      BPALRC=(A,R,^)
"RTN","BPSRPT0",109,0)
 ;    BPNBSTS - Non-Billable Status (Non-Billable Status report only, BPRTYPE=9)
"RTN","BPSRPT0",110,0)
 ;      BPNBSTS=(0-All,1-certain Non-billable status,^)
"RTN","BPSRPT0",111,0)
 ;       if BPNBSTS=1 there is a BPNBSTS array for each status selected
"RTN","BPSRPT0",112,0)
 ;      BPNBSTS(ptr)=status  - for each status selected
"RTN","BPSRPT0",113,0)
 ;       ptr=Pointer to file #366.17 - status=non-billable reason from file #366.17 field #.01
"RTN","BPSRPT0",114,0)
 ;    BPEXCEL - Excel capture-detail only, if BPSUMDET=0 (detail format)
"RTN","BPSRPT0",115,0)
 ;      BPEXCEL=(0-No, 1-Yes, ^)
"RTN","BPSRPT0",116,0)
 ;    BPQ - device variable - I POP S BPQ=1 otherwise BPQ=0
"RTN","BPSRPT0",117,0)
 ;
"RTN","BPSRPT0",118,0)
 ; The following local variables are not set in BPSRPT0 however they are used in several
"RTN","BPSRPT0",119,0)
 ; BPSRPT* routines.  They are not passed as parameters but assumed to be defined.
"RTN","BPSRPT0",120,0)
 ;    BPBLINE - blank line indicator, 1-print blank line
"RTN","BPSRPT0",121,0)
 ;    BPGRPLAN - insurance plan name
"RTN","BPSRPT0",122,0)
 ;    BPSDATA - tells whether data has been displayed to the screen (0-No,1-Yes)
"RTN","BPSRPT0",123,0)
 ;                          
"RTN","BPSRPT0",124,0)
EN(BPRTYPE) N %,BPACREJ,BPAUTREV,BPBEGDT,BPCCRSN,BPDRGCL,BPDRUG,BPENDDT,BPEXCEL,BPNOW,BPPHARM,BPINSINF,BPMWC,BPQ,BPQSTDRG
"RTN","BPSRPT0",125,0)
 N BPREJCD,BPRLNRL,BPRPTNAM,BPRTBCK,BPSCR,BPSUMDET,CODE,POS,STAT,X,Y,BPINS,BPARR,BPELIG,BPOPCL
"RTN","BPSRPT0",126,0)
 N BPNBSTS,BPALRC,BPELIG1,BPRESC,BPPAT,BPQSTPAT,BPBILL,BPMIN,BPMAX,BPSLC,BPSUC,BPSCOMMENT
"RTN","BPSRPT0",127,0)
 N BPQSTCR,BPQSTPR,BPQSTRC
"RTN","BPSRPT0",128,0)
 ;
"RTN","BPSRPT0",129,0)
 ;Verify that a valid report has been requested
"RTN","BPSRPT0",130,0)
 I ",1,2,3,4,5,6,7,8,9,"'[(","_$G(BPRTYPE)_",") W "<Invalid Menu Definition - Report Undefined>" H 3 Q
"RTN","BPSRPT0",131,0)
 S BPRPTNAM=$P("PAYABLE CLAIMS^REJECTED CLAIMS^SUBMIT,NOT RELEASED CLAIMS^REVERSED CLAIMS^RECENT TRANSACTIONS^TOTALS^CLOSED CLAIMS^SPENDING ACCOUNT REPORT^RXS WITH NON-BILLABLE STATUS","^",BPRTYPE)
"RTN","BPSRPT0",132,0)
 ;
"RTN","BPSRPT0",133,0)
 ;Needed to convert lower case entries to upper case
"RTN","BPSRPT0",134,0)
 S BPSLC="abcdefghijklmnopqrstuvwxyz"
"RTN","BPSRPT0",135,0)
 S BPSUC="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","BPSRPT0",136,0)
 ;
"RTN","BPSRPT0",137,0)
 ;Get current Date/Time
"RTN","BPSRPT0",138,0)
 D NOW^%DTC S Y=% D DD^%DT S BPNOW=Y
"RTN","BPSRPT0",139,0)
 ;
"RTN","BPSRPT0",140,0)
DIV ;
"RTN","BPSRPT0",141,0)
 ;Prompt for ECME Pharmacy Division(s) (No Default)
"RTN","BPSRPT0",142,0)
 ;Sets up BPPHARM variable and array, BPPHARM =0 ALL or BPPHARM=1,BPPHARM(ptr) for list
"RTN","BPSRPT0",143,0)
 S X=$$SELPHARM^BPSRPT3() G:(X="^")&($G(BPPHARM)="") EXIT G:(X="^")&(BPPHARM=1) DIV
"RTN","BPSRPT0",144,0)
 ;
"RTN","BPSRPT0",145,0)
 ;Prompt to Display Summary or Detail Format (Default to Detail)
"RTN","BPSRPT0",146,0)
 ;Returns 1 for Summary, 0 for Detail
"RTN","BPSRPT0",147,0)
 S BPSUMDET=$$SELSMDET^BPSRPT3(2) I BPSUMDET="^" G EXIT
"RTN","BPSRPT0",148,0)
 ;
"RTN","BPSRPT0",149,0)
INSUR ;
"RTN","BPSRPT0",150,0)
 ;Prompt to allow selection of Multiple Insurances or All (Default to ALL)
"RTN","BPSRPT0",151,0)
 ;See description for $$INSURSEL^BPSSCRCU
"RTN","BPSRPT0",152,0)
 S BPINS=$$INSURSEL^BPSSCRCU(.BPARR,DUZ) I BPINS<1 G EXIT
"RTN","BPSRPT0",153,0)
 S BPINSINF=$S(BPARR(1.11)="I":BPARR("INS"),1:0)
"RTN","BPSRPT0",154,0)
 ;If "I" Specific Insurance(s) was selected and the user didn't select
"RTN","BPSRPT0",155,0)
 ;an Insurance re-prompt for Specific Insurance(s) or All
"RTN","BPSRPT0",156,0)
 I BPINSINF=";" G INSUR
"RTN","BPSRPT0",157,0)
 ;
"RTN","BPSRPT0",158,0)
 ;Prompt to Display (C)MOP or (M)ail or (W)indow or (A)LL (Default to ALL)
"RTN","BPSRPT0",159,0)
 ;Returns (A-ALL,M-Mail,W-Window,C-CMOP)
"RTN","BPSRPT0",160,0)
 I (",5,6,8,")[BPRTYPE S BPMWC=$$SELMWC^BPSRPT3("A") I BPMWC="^" G EXIT
"RTN","BPSRPT0",161,0)
 I (",1,2,3,4,7,9,")[BPRTYPE S BPMWC=$$SELMWC1^BPSRPT3("A") I BPMWC="^" G EXIT
"RTN","BPSRPT0",162,0)
 ;
"RTN","BPSRPT0",163,0)
 ;Prompt to Display (R)ealTime Fills or (B)ackbills or (P)RO Option or Re(S)ubmission or (A)LL (Default to ALL)
"RTN","BPSRPT0",164,0)
 ;Returns (1-ALL,2-RealTime Fills,3-Backbills,4-PRO Option,5-Resubmission)
"RTN","BPSRPT0",165,0)
 S BPRTBCK=1
"RTN","BPSRPT0",166,0)
 I (",5,6,8,")[BPRTYPE S BPRTBCK=$$SELRTBCK^BPSRPT3(1) I BPRTBCK="^" G EXIT
"RTN","BPSRPT0",167,0)
 I (",1,2,3,4,7,")[BPRTYPE S BPRTBCK=$$SELRBPS^BPSRPT3() I BPRTBCK="^" G EXIT
"RTN","BPSRPT0",168,0)
 ;
"RTN","BPSRPT0",169,0)
DGDGCL ;
"RTN","BPSRPT0",170,0)
 ;Prompt to Display Specific (D)rug or Drug (C)lass or (A)ll (Default to ALL)
"RTN","BPSRPT0",171,0)
 ;Returns (1-ALL,2-Drug,3-Drug Class)
"RTN","BPSRPT0",172,0)
 S BPQSTDRG=$$SELDRGAL^BPSRPT3(1) I BPQSTDRG="^" Q
"RTN","BPSRPT0",173,0)
 ;
"RTN","BPSRPT0",174,0)
 ;Prompt to Select Drug (No Default)
"RTN","BPSRPT0",175,0)
 S BPDRUG=0 I BPQSTDRG=2 D  G:BPDRUG="^" EXIT G:BPDRUG=0 DGDGCL
"RTN","BPSRPT0",176,0)
 . I (",5,6,8,")[BPRTYPE S BPDRUG=$$SELDRG^BPSRPT3()
"RTN","BPSRPT0",177,0)
 . I (",1,2,3,4,7,9,")[BPRTYPE S BPDRUG=$$SELDRG1^BPSRPT3A()
"RTN","BPSRPT0",178,0)
 ;
"RTN","BPSRPT0",179,0)
 ;Prompt to Select Drug Class (No Default)
"RTN","BPSRPT0",180,0)
 S BPDRGCL=0 I BPQSTDRG=3 D  G:BPDRGCL="^" EXIT G:BPDRGCL=0 DGDGCL
"RTN","BPSRPT0",181,0)
 . I (",5,6,8,")[BPRTYPE S BPDRGCL=$$SELDRGCL^BPSRPT3()
"RTN","BPSRPT0",182,0)
 . I (",1,2,3,4,7,9,")[BPRTYPE S BPDRGCL=$$SELDC^BPSRPT3A()
"RTN","BPSRPT0",183,0)
 ;
"RTN","BPSRPT0",184,0)
 ;Report Specific Prompts
"RTN","BPSRPT0",185,0)
 ;
"RTN","BPSRPT0",186,0)
 ;Prompt to select Date Range
"RTN","BPSRPT0",187,0)
 ;Returns (Start Date^End Date)
"RTN","BPSRPT0",188,0)
 S BPBEGDT=$$SELDATE^BPSRPT3(BPRTYPE) D  I BPBEGDT="^" G EXIT
"RTN","BPSRPT0",189,0)
 .I BPBEGDT="^" Q
"RTN","BPSRPT0",190,0)
 .S BPENDDT=$P(BPBEGDT,U,2)
"RTN","BPSRPT0",191,0)
 .S BPBEGDT=$P(BPBEGDT,U)
"RTN","BPSRPT0",192,0)
 ;
"RTN","BPSRPT0",193,0)
 ;Prompt to Include (R)ELEASED or (N)OT RELEASED or (A)LL (Default to RELEASED)
"RTN","BPSRPT0",194,0)
 ;Returns (1-ALL,2-RELEASED,3-NOT RELEASED)
"RTN","BPSRPT0",195,0)
 S BPRLNRL=$S(BPRTYPE=3:3,1:1) I (",1,2,4,6,7,8,9,")[BPRTYPE S BPRLNRL=$$SELRLNRL^BPSRPT4($S(BPRTYPE=9:1,1:2)) I BPRLNRL="^" G EXIT
"RTN","BPSRPT0",196,0)
 ;
"RTN","BPSRPT0",197,0)
REJCD ;
"RTN","BPSRPT0",198,0)
 ;Prompt to Include (S)pecific Reject Code or (A)LL (Default to ALL)
"RTN","BPSRPT0",199,0)
 ;Returns (0-All,1-Reject Code,^=exit)
"RTN","BPSRPT0",200,0)
 S BPQSTRC=0 I (",2,")[BPRTYPE S BPQSTRC=$$SELRC^BPSRPT4(0) I BPQSTRC="^" G EXIT
"RTN","BPSRPT0",201,0)
 ;
"RTN","BPSRPT0",202,0)
 ;If Specific Reject Code was selected, prompt for one or more Reject Codes
"RTN","BPSRPT0",203,0)
 ;Returns: BPREJCD=a string of reject code ien's separated by a comma (file #9002313.93)
"RTN","BPSRPT0",204,0)
 S BPREJCD=0
"RTN","BPSRPT0",205,0)
 I BPQSTRC=1 S BPREJCD=$$SELREJCD^BPSRPT4() G:BPREJCD=0 REJCD G:BPREJCD="^" EXIT
"RTN","BPSRPT0",206,0)
 ;
"RTN","BPSRPT0",207,0)
 ;Prompt to Include Auto(R)eversed or (A)LL (Default to ALL)
"RTN","BPSRPT0",208,0)
 ;Returns (0-All,1-AutoReversed)
"RTN","BPSRPT0",209,0)
 S BPAUTREV=0 I (",4,")[BPRTYPE S BPAUTREV=$$SELAUREV^BPSRPT4(0) I BPAUTREV="^" G EXIT
"RTN","BPSRPT0",210,0)
 ;
"RTN","BPSRPT0",211,0)
 ;Prompt to Include A(C)cepted or (R)ejected or (A)LL (Default to REJECTED)
"RTN","BPSRPT0",212,0)
 ;Returns (0-All,1-Rejected,2-Accepted)
"RTN","BPSRPT0",213,0)
 S BPACREJ=0 I (",4,")[BPRTYPE S BPACREJ=$$SELACREJ^BPSRPT4(1) I BPACREJ="^" G EXIT
"RTN","BPSRPT0",214,0)
 ;
"RTN","BPSRPT0",215,0)
CCR ;
"RTN","BPSRPT0",216,0)
 ;Prompt to Include (S)pecific Close Claim Reason or (A)ll (Default to All)
"RTN","BPSRPT0",217,0)
 ;Returns (0-All,1-Close Claim Reason,^=exit)
"RTN","BPSRPT0",218,0)
 S BPQSTCR=0 I (",7,")[BPRTYPE S BPQSTCR=$$SELCCR^BPSRPT4(0) I BPQSTCR="^" G EXIT
"RTN","BPSRPT0",219,0)
 ;
"RTN","BPSRPT0",220,0)
 ;If Specific Close Claim Reason was selected, prompt for one or more Close Claim Reasons
"RTN","BPSRPT0",221,0)
 ;Returns: BPCCRSN=a string of close claim reason ien's separated by a comma
"RTN","BPSRPT0",222,0)
 S BPCCRSN=0
"RTN","BPSRPT0",223,0)
 I BPQSTCR=1 S BPCCRSN=$$SELCCRSN^BPSRPT4() G:BPCCRSN=0 CCR I BPCCRSN="^" G EXIT
"RTN","BPSRPT0",224,0)
 ;
"RTN","BPSRPT0",225,0)
 ;;Prompt for Eligibility Indicator for payable, rejected, reversed and closed claims report
"RTN","BPSRPT0",226,0)
 ;;Returns (V=VETERAN,T=TRICARE,C=CHAMPVA,0=All)
"RTN","BPSRPT0",227,0)
 ;;S BPELIG=0 I (",1,4,7,")[BPRTYPE S BPELIG=$$SELELIG^BPSRPT3(1) I BPELIG="^" G EXIT
"RTN","BPSRPT0",228,0)
 ;
"RTN","BPSRPT0",229,0)
 ;Prompt for All or Most Recent (Non-Billable Status Report only)
"RTN","BPSRPT0",230,0)
 ;Returns A - All, R - Most Recent
"RTN","BPSRPT0",231,0)
 S BPALRC=0 I (",9,")[BPRTYPE S BPALRC=$$SELALRC^BPSRPT3() I BPALRC="^" G EXIT
"RTN","BPSRPT0",232,0)
 ;
"RTN","BPSRPT0",233,0)
 ;Prompt for one, multiple or (A)ll Eligibility Indicator
"RTN","BPSRPT0",234,0)
 ;Returns (0-All, 1-selection)
"RTN","BPSRPT0",235,0)
 ; If 1, BPARR("ELIG",xx) is set for each eligibility selected - xx="V", "T" or "C"
"RTN","BPSRPT0",236,0)
 S BPELIG1=0 I (",1,2,3,4,7,9,")[BPRTYPE S BPELIG1=$$SELELIG1^BPSRPT3() I BPELIG1="^" G EXIT
"RTN","BPSRPT0",237,0)
 ;
"RTN","BPSRPT0",238,0)
 ;Prompt for Open/Closed/All claims
"RTN","BPSRPT0",239,0)
 ;Returns (1=Closed,2=Open,0=All)
"RTN","BPSRPT0",240,0)
 S BPOPCL=0 I (",2,")[BPRTYPE S BPOPCL=$$SELOPCL^BPSRPT3(2) I BPOPCL="^" G EXIT
"RTN","BPSRPT0",241,0)
 ;
"RTN","BPSRPT0",242,0)
PRESCR ;
"RTN","BPSRPT0",243,0)
 ;Prompt to select SPECIFIC PRESCRIBER(S) or (A)ll Prescribers
"RTN","BPSRPT0",244,0)
 ;Returns: (0=ALL,1=Prescriber,^=exit)
"RTN","BPSRPT0",245,0)
 S BPQSTPR=0 I (",2,")[BPRTYPE S BPQSTPR=$$SELPR^BPSRPT3A() I BPQSTPR="^" G EXIT
"RTN","BPSRPT0",246,0)
 ;
"RTN","BPSRPT0",247,0)
 ;If Specific Prescriber was selected, prompt for one or more prescribers
"RTN","BPSRPT0",248,0)
 ;Returns: BPRESC=a string of prescriber ien's separated by a comma
"RTN","BPSRPT0",249,0)
 S BPRESC=0
"RTN","BPSRPT0",250,0)
 I BPQSTPR=1 S BPRESC=$$SELPRESC^BPSRPT3A() G:BPRESC=0 PRESCR I BPRESC="^" G EXIT
"RTN","BPSRPT0",251,0)
 ;
"RTN","BPSRPT0",252,0)
PATIENT ;    
"RTN","BPSRPT0",253,0)
 ;Prompt to select (P)atients or (A)LL Patients
"RTN","BPSRPT0",254,0)
 ;Returns: (0=ALL,1=Patient,^=exit)
"RTN","BPSRPT0",255,0)
 S BPQSTPAT=0 I (",1,2,3,4,7,9,")[BPRTYPE S BPQSTPAT=$$SELPA^BPSRPT3A() I BPQSTPAT="^" G EXIT
"RTN","BPSRPT0",256,0)
 ;
"RTN","BPSRPT0",257,0)
 ;If (P)atients was selected, prompt for one or more patients
"RTN","BPSRPT0",258,0)
 ;Returns: BPPAT=a string of patient ien's separated by a comma
"RTN","BPSRPT0",259,0)
 S BPPAT=0
"RTN","BPSRPT0",260,0)
 I BPQSTPAT=1 S BPPAT=$$SELPAT^BPSRPT3A() G:BPPAT="^" EXIT G:BPPAT=0 PATIENT
"RTN","BPSRPT0",261,0)
 ;
"RTN","BPSRPT0",262,0)
 ;Prompt to select(R)ange for Billed Amount or (A)LL
"RTN","BPSRPT0",263,0)
 ;Returns: (0=ALL,1=Range,^=exit)
"RTN","BPSRPT0",264,0)
 S BPBILL=0 I (",1,2,3,4,9,")[BPRTYPE S BPBILL=$$SELBAMT^BPSRPT3A() I BPBILL="^" G EXIT
"RTN","BPSRPT0",265,0)
 ;If Range of Billed Amount was selected prompt for Minimum and Maximum
"RTN","BPSRPT0",266,0)
 ;Returns: BPMIN=minimum amount entered, BPMAX=maximum amount entered
"RTN","BPSRPT0",267,0)
 S (BPMIN,BPMAX)=0
"RTN","BPSRPT0",268,0)
 I BPBILL=1 W !,"Range for the Billed Amount" D  I (BPMIN="^")!(BPMAX="^") G EXIT
"RTN","BPSRPT0",269,0)
 . S BPMIN=$$SELBMIN^BPSRPT3A() I BPMIN="^" Q
"RTN","BPSRPT0",270,0)
 . S BPMAX=$$SELBMAX^BPSRPT3A()
"RTN","BPSRPT0",271,0)
 ;
"RTN","BPSRPT0",272,0)
 ;Prompt for Non-Billable Status (Non-Billable Status Report only)
"RTN","BPSRPT0",273,0)
 ;Sets up BPNBSTS variable and array, BPNBSTS=0 ALL or BPNBSTS=1,BPNBSTS(xx) for list
"RTN","BPSRPT0",274,0)
 S BPNBSTS=0 I (",9,")[BPRTYPE S BPNBSTS=$$SELNBSTS^BPSRPT3() I BPNBSTS="^" G EXIT
"RTN","BPSRPT0",275,0)
 ;
"RTN","BPSRPT0",276,0)
 ;Prompt for Excel Capture (Detail Only)
"RTN","BPSRPT0",277,0)
 S BPEXCEL=0 I 'BPSUMDET S BPEXCEL=$$SELEXCEL^BPSRPT4() I BPEXCEL="^" G EXIT
"RTN","BPSRPT0",278,0)
 ;
"RTN","BPSRPT0",279,0)
 ;Prompt for the Device
"RTN","BPSRPT0",280,0)
 I 'BPEXCEL D
"RTN","BPSRPT0",281,0)
 .W !!,"WARNING - THIS REPORT REQUIRES THAT A DEVICE WITH 132 COLUMN WIDTH BE USED."
"RTN","BPSRPT0",282,0)
 .W !,"IT WILL NOT DISPLAY CORRECTLY USING 80 COLUMN WIDTH DEVICES",!
"RTN","BPSRPT0",283,0)
 S BPQ=0 D DEVICE(BPRPTNAM) Q:BPQ
"RTN","BPSRPT0",284,0)
 ;
"RTN","BPSRPT0",285,0)
 ;Compile and Run the Report
"RTN","BPSRPT0",286,0)
 D RUN(BPEXCEL,BPRPTNAM,BPSUMDET)
"RTN","BPSRPT0",287,0)
 I 'BPQ D PAUSE2^BPSRPT1
"RTN","BPSRPT0",288,0)
 ;
"RTN","BPSRPT0",289,0)
EXIT Q
"RTN","BPSRPT0",290,0)
 ;
"RTN","BPSRPT0",291,0)
 ;Compile and Run the Report
"RTN","BPSRPT0",292,0)
 ;
"RTN","BPSRPT0",293,0)
RUN(BPEXCEL,BPRPTNAM,BPSUMDET) N BPPAGE,BPTMP
"RTN","BPSRPT0",294,0)
 S BPTMP=$NA(^TMP($J,"BPSRPT"))
"RTN","BPSRPT0",295,0)
 K @BPTMP
"RTN","BPSRPT0",296,0)
 S BPPAGE=0
"RTN","BPSRPT0",297,0)
 W:BPSCR&'BPEXCEL !,"Please wait...",!
"RTN","BPSRPT0",298,0)
 ;
"RTN","BPSRPT0",299,0)
 ;Compile the report
"RTN","BPSRPT0",300,0)
 Q:$$COLLECT^BPSRPT1(BPTMP)=-1
"RTN","BPSRPT0",301,0)
 U IO
"RTN","BPSRPT0",302,0)
 ;
"RTN","BPSRPT0",303,0)
 ;Display the report
"RTN","BPSRPT0",304,0)
 D REPORT^BPSRPT5(BPTMP,BPEXCEL,BPSCR,BPRPTNAM,BPSUMDET,BPPAGE)
"RTN","BPSRPT0",305,0)
 I 'BPSCR W !,@IOF
"RTN","BPSRPT0",306,0)
 K @BPTMP
"RTN","BPSRPT0",307,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","BPSRPT0",308,0)
 D ^%ZISC
"RTN","BPSRPT0",309,0)
 Q
"RTN","BPSRPT0",310,0)
 ;
"RTN","BPSRPT0",311,0)
 ;Prompt For the Device
"RTN","BPSRPT0",312,0)
 ;
"RTN","BPSRPT0",313,0)
 ; Returns Device variables and BPSCR
"RTN","BPSRPT0",314,0)
 ;
"RTN","BPSRPT0",315,0)
DEVICE(BPRPTNAM) N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","BPSRPT0",316,0)
 S %ZIS="QM"
"RTN","BPSRPT0",317,0)
 D ^%ZIS
"RTN","BPSRPT0",318,0)
 I POP S BPQ=1
"RTN","BPSRPT0",319,0)
 ;
"RTN","BPSRPT0",320,0)
 ;Check for exit
"RTN","BPSRPT0",321,0)
 I $G(BPQ) G XDEV
"RTN","BPSRPT0",322,0)
 ;
"RTN","BPSRPT0",323,0)
 S BPSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","BPSRPT0",324,0)
 I $D(IO("Q")) D  S BPQ=1
"RTN","BPSRPT0",325,0)
 . S ZTRTN="RUN^BPSRPT0(BPEXCEL,BPRPTNAM,BPSUMDET)"
"RTN","BPSRPT0",326,0)
 . S ZTIO=ION
"RTN","BPSRPT0",327,0)
 . S ZTSAVE("*")=""
"RTN","BPSRPT0",328,0)
 . S ZTDESC="BPS REPORT: "_BPRPTNAM
"RTN","BPSRPT0",329,0)
 . D ^%ZTLOAD
"RTN","BPSRPT0",330,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","BPSRPT0",331,0)
 . D HOME^%ZIS
"RTN","BPSRPT0",332,0)
 U IO
"RTN","BPSRPT0",333,0)
XDEV Q
"RTN","BPSRPT1")
0^6^B84866228
"RTN","BPSRPT1",1,0)
BPSRPT1 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,8,10,11,19,20,23,24**;JUN 2004;Build 43
"RTN","BPSRPT1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRPT1",4,0)
 ;
"RTN","BPSRPT1",5,0)
 ; Reference to COLLECT^IBNCPEV3 supported by ICR 6131
"RTN","BPSRPT1",6,0)
 ;
"RTN","BPSRPT1",7,0)
 Q
"RTN","BPSRPT1",8,0)
 ;
"RTN","BPSRPT1",9,0)
 ; ECME Report Compile Routine - Looping/Filtering Routine
"RTN","BPSRPT1",10,0)
 ;
"RTN","BPSRPT1",11,0)
 ;  Input Variables:
"RTN","BPSRPT1",12,0)
 ;               BPRTYPE - Type of Report (1-9)
"RTN","BPSRPT1",13,0)
 ;               BPGLTMP - Temporary storage global
"RTN","BPSRPT1",14,0)
 ;  BPPHARM/BPPHARM(ptr) - Set to 0 for all pharmacies, if set to 1 array
"RTN","BPSRPT1",15,0)
 ;                         of internal pointers of selected pharmacies
"RTN","BPSRPT1",16,0)
 ;              BPSUMDET - (1) Summary or (0) Detail format
"RTN","BPSRPT1",17,0)
 ;              BPINSINF - Set to 0 for all insurances or list of file 36 IENs
"RTN","BPSRPT1",18,0)
 ;                 BPMWC - A-ALL,M-Mail,W-Window,C-CMOP Prescriptions
"RTN","BPSRPT1",19,0)
 ;               BPRTBCK - 1-ALL,2-RealTime,3-Backbill Claim Submission,4-PRO Option,5-Resubmission
"RTN","BPSRPT1",20,0)
 ;               BPRLNRL - 1-ALL,2-RELEASED,3-NOT RELEASED
"RTN","BPSRPT1",21,0)
 ;                BPDRUG - DRUG to report on (ptr to #50)
"RTN","BPSRPT1",22,0)
 ;               BPDRGCL - DRUG CLASS to report on (0 for ALL)
"RTN","BPSRPT1",23,0)
 ;               BPBEGDT - Beginning Date
"RTN","BPSRPT1",24,0)
 ;               BPENDDT - Ending Date
"RTN","BPSRPT1",25,0)
 ;               BPCCRSN - Set to 0 for all closed claim reasons or ptr to #356.8
"RTN","BPSRPT1",26,0)
 ;              BPAUTREV - 0-ALL,1-Auto Reversed
"RTN","BPSRPT1",27,0)
 ;               BPACREJ - 0-ALL,1-REJECTED,2-ACCEPTED
"RTN","BPSRPT1",28,0)
 ;               BPNBSTS - Non-Billable Status
"RTN","BPSRPT1",29,0)
 ;    BPELIG1/BPELIG1(x) - Array of multiple eligibilities
"RTN","BPSRPT1",30,0)
 ;                BPALRC - A-All or R:Most recent
"RTN","BPSRPT1",31,0)
 ;              
"RTN","BPSRPT1",32,0)
COLLECT(BPGLTMP) N BP02,BP57,BP59,BPENDDT1,BPLDT02,BPLDT57,X,Y,OK,BPIX
"RTN","BPSRPT1",33,0)
 ;
"RTN","BPSRPT1",34,0)
 ;Check Variables
"RTN","BPSRPT1",35,0)
 S OK=1
"RTN","BPSRPT1",36,0)
 S:'$G(BPBEGDT) BPBEGDT=0
"RTN","BPSRPT1",37,0)
 S:'$G(BPENDDT) BPENDDT=9999999
"RTN","BPSRPT1",38,0)
 S BPENDDT=BPENDDT+0.9
"RTN","BPSRPT1",39,0)
 I $G(BPRTYPE)=""!($G(BPGLTMP)="")!($G(BPPHARM)="")!($G(BPSUMDET)="")!($G(BPINSINF)="")!($G(BPMWC)="")!($G(BPRTBCK)="") S OK=-1 G EXIT
"RTN","BPSRPT1",40,0)
 ;
"RTN","BPSRPT1",41,0)
 ; For the Non-Billable Status report, we need to loop through the IB NCPDP EVENT LOG instead 
"RTN","BPSRPT1",42,0)
 ;   of BPS Claim/BPS Transaction data
"RTN","BPSRPT1",43,0)
 I BPRTYPE=9 Q $$COLLECT^IBNCPEV3(BPBEGDT,BPENDDT,BPMWC,BPRLNRL,BPDRUG,BPDRGCL,BPALRC,.BPPHARM,.BPINSINF,.BPNBSTS,.BPELIG1,BPGLTMP,BPPAT,BPBILL,$G(BPMIN),$G(BPMAX))
"RTN","BPSRPT1",44,0)
 ;
"RTN","BPSRPT1",45,0)
 ;Loop through BPS CLAIMS
"RTN","BPSRPT1",46,0)
 ;
"RTN","BPSRPT1",47,0)
 ;First look for fill/refill cross reference
"RTN","BPSRPT1",48,0)
 ;Loop through Date of Service Index in BPS CLAIMS file and find link to 
"RTN","BPSRPT1",49,0)
 ;claim in BPS TRANSACTION.  Process earliest Date of Service entry found in
"RTN","BPSRPT1",50,0)
 ;BPS TRANSACTION
"RTN","BPSRPT1",51,0)
 ;
"RTN","BPSRPT1",52,0)
 ;Choose Index to Loop through (different for Closed Claims)
"RTN","BPSRPT1",53,0)
 S BPIX="AF" S:BPRTYPE=7 BPIX="AG"
"RTN","BPSRPT1",54,0)
 ;
"RTN","BPSRPT1",55,0)
 S BPLDT02=$S(BPIX="AF":$$FM2YMD(BPBEGDT-0.00001),1:BPBEGDT) S:BPLDT02="" BPLDT02=0
"RTN","BPSRPT1",56,0)
 S BPENDDT1=$S(BPIX="AF":$$FM2YMD(BPENDDT),1:BPENDDT_".9999999999") S:BPENDDT1="" BPENDDT1=99999999
"RTN","BPSRPT1",57,0)
 F  S BPLDT02=+$O(^BPSC(BPIX,BPLDT02)) Q:BPLDT02=0!(BPLDT02>BPENDDT1)  D
"RTN","BPSRPT1",58,0)
 . S BP02=0 F  S BP02=$O(^BPSC(BPIX,BPLDT02,BP02)) Q:+BP02=0  D
"RTN","BPSRPT1",59,0)
 . . S BP59=+$O(^BPST("AE",BP02,0))
"RTN","BPSRPT1",60,0)
 . . Q:BP59=0
"RTN","BPSRPT1",61,0)
 . . I $D(@BPGLTMP@("FILE59",BP59)) Q
"RTN","BPSRPT1",62,0)
 . . S @BPGLTMP@("FILE59",BP59)=BPLDT02_"^02"
"RTN","BPSRPT1",63,0)
 . . D PROCESS(BP59)
"RTN","BPSRPT1",64,0)
 ;
"RTN","BPSRPT1",65,0)
 ;#9002313.59 has only one entry per claim with, which has a date 
"RTN","BPSRPT1",66,0)
 ;  of the latest update for the claim
"RTN","BPSRPT1",67,0)
 ;#9002313.57 has more than one entries per claim and keep all 
"RTN","BPSRPT1",68,0)
 ;  changes made the claim
"RTN","BPSRPT1",69,0)
 ;so we have to go thru #9002313.57 to find the earliest date 
"RTN","BPSRPT1",70,0)
 ;related to the claim to check it against BPBEGDT
"RTN","BPSRPT1",71,0)
 S BPLDT57=BPBEGDT-0.00001
"RTN","BPSRPT1",72,0)
 F  S BPLDT57=+$O(^BPSTL("AH",BPLDT57)) Q:BPLDT57=0!(BPLDT57>BPENDDT)  D
"RTN","BPSRPT1",73,0)
 . S BP57=0 F  S BP57=$O(^BPSTL("AH",BPLDT57,BP57)) Q:+BP57=0  D
"RTN","BPSRPT1",74,0)
 . . S BP59=+$G(^BPSTL(BP57,0))
"RTN","BPSRPT1",75,0)
 . . I $D(@BPGLTMP@("FILE59",BP59)) Q
"RTN","BPSRPT1",76,0)
 . . S @BPGLTMP@("FILE59",BP59)=BPLDT57_"^57"
"RTN","BPSRPT1",77,0)
 . . D PROCESS(BP59)
"RTN","BPSRPT1",78,0)
 ;
"RTN","BPSRPT1",79,0)
 ;Remove Portion of Scratch Global
"RTN","BPSRPT1",80,0)
EXIT K @BPGLTMP@("FILE59")
"RTN","BPSRPT1",81,0)
 Q OK
"RTN","BPSRPT1",82,0)
 ;
"RTN","BPSRPT1",83,0)
 ;Convert FB date to YYYYMMDD
"RTN","BPSRPT1",84,0)
FM2YMD(BPFMDT) N Y,Y1
"RTN","BPSRPT1",85,0)
 S Y=$E(BPFMDT,2,3),Y1=$E(BPFMDT,1,1) S Y=$S(Y1=3:"20"_Y,Y1=2:"19"_Y,1:"")
"RTN","BPSRPT1",86,0)
 Q:Y Y_$E(BPFMDT,4,7)
"RTN","BPSRPT1",87,0)
 Q ""
"RTN","BPSRPT1",88,0)
 ;
"RTN","BPSRPT1",89,0)
 ;Process each Entry
"RTN","BPSRPT1",90,0)
 ;
"RTN","BPSRPT1",91,0)
PROCESS(BP59) ;
"RTN","BPSRPT1",92,0)
 N BPBILLED,BPBCK,BPBCKXBPDFN,BPREF,BPPAYBL,BPPLAN,BPREJ,BPRLSDT,BPRX,BPRXDC,BPRXDRG,BPSTATUS,BPSEQ,BPSTOP
"RTN","BPSRPT1",93,0)
 ;
"RTN","BPSRPT1",94,0)
 S BPSEQ=$$COB59^BPSUTIL2(BP59)
"RTN","BPSRPT1",95,0)
 ;
"RTN","BPSRPT1",96,0)
 ;Get ABSBRXI - ptr to #52
"RTN","BPSRPT1",97,0)
 S BPRX=+$P($G(^BPST(BP59,1)),U,11)
"RTN","BPSRPT1",98,0)
 ;
"RTN","BPSRPT1",99,0)
 ;Get ABSBRXR - Prescription Number IEN
"RTN","BPSRPT1",100,0)
 S BPREF=+$P($G(^BPST(BP59,1)),U)
"RTN","BPSRPT1",101,0)
 ;
"RTN","BPSRPT1",102,0)
 ;Get PATIENT - ptr to #2
"RTN","BPSRPT1",103,0)
 S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSRPT1",104,0)
 ; 
"RTN","BPSRPT1",105,0)
 ; Skip eligibility verification transactions
"RTN","BPSRPT1",106,0)
 I $P($G(^BPST(BP59,0)),U,15)="E" G XPROC
"RTN","BPSRPT1",107,0)
 ;
"RTN","BPSRPT1",108,0)
 ;Check for correct BPS Pharmacy (DIVISION)
"RTN","BPSRPT1",109,0)
 I $G(BPPHARM)=1,$$CHKPHRM(BP59)=0 G XPROC
"RTN","BPSRPT1",110,0)
 ;
"RTN","BPSRPT1",111,0)
 ;Check for Display 1-ALL,2-RELEASED,3-NOT RELEASED
"RTN","BPSRPT1",112,0)
 S BPRLSDT=$$RELEASED(BPRX,BPREF)
"RTN","BPSRPT1",113,0)
 I BPRLNRL'=1 I ((BPRLNRL=2)&(BPRLSDT=0))!((BPRLNRL=3)&(BPRLSDT)) G XPROC
"RTN","BPSRPT1",114,0)
 ;
"RTN","BPSRPT1",115,0)
 ;Get Status
"RTN","BPSRPT1",116,0)
 S BPSTATUS=$$STATUS^BPSRPT6(BPRX,BPREF,BPSEQ)
"RTN","BPSRPT1",117,0)
 ;
"RTN","BPSRPT1",118,0)
 ;if REVERSAL
"RTN","BPSRPT1",119,0)
 I BPRTYPE=4,BPSTATUS'["REVERSAL" G XPROC  ; exclude non-reversed
"RTN","BPSRPT1",120,0)
 I BPRTYPE=4,$$CLOSED02^BPSSCR03($P(^BPST(BP59,0),U,4))=1 G XPROC  ; exclude closed claims for Reversal Report
"RTN","BPSRPT1",121,0)
 ;
"RTN","BPSRPT1",122,0)
 ;if PAYABLE
"RTN","BPSRPT1",123,0)
 S BPPAYBL=BPSTATUS["PAYABLE"
"RTN","BPSRPT1",124,0)
 I BPRTYPE=1,'BPPAYBL G XPROC  ; exclude non-payable
"RTN","BPSRPT1",125,0)
 I BPRTYPE=1,BPSTATUS["REVERSAL" G XPROC  ; reversed
"RTN","BPSRPT1",126,0)
 ;
"RTN","BPSRPT1",127,0)
 ;if REJECTED
"RTN","BPSRPT1",128,0)
 S BPREJ=BPSTATUS["REJECTED"
"RTN","BPSRPT1",129,0)
 I BPRTYPE=2,BPSTATUS["REVERSAL" G XPROC ; exclude rejected reversals
"RTN","BPSRPT1",130,0)
 I BPRTYPE=2,'BPREJ G XPROC  ; exclude non-rejected
"RTN","BPSRPT1",131,0)
 ;
"RTN","BPSRPT1",132,0)
 ;if SUBMITTED NOT RELEASED exclude released ones
"RTN","BPSRPT1",133,0)
 I BPRTYPE=3,BPRLSDT'=0 G XPROC
"RTN","BPSRPT1",134,0)
 I BPRTYPE=3,'BPPAYBL G XPROC  ; exclude non-payable
"RTN","BPSRPT1",135,0)
 ;
"RTN","BPSRPT1",136,0)
 ;Auto Reverse Check
"RTN","BPSRPT1",137,0)
 I BPRTYPE=4,BPAUTREV,'$$AUTOREV(BP59) G XPROC
"RTN","BPSRPT1",138,0)
 ;
"RTN","BPSRPT1",139,0)
 ;if CLOSED
"RTN","BPSRPT1",140,0)
 I BPRTYPE=7,'$$CLSCLM(BP59) G XPROC  ;exclude open claims
"RTN","BPSRPT1",141,0)
 ;I BPRTYPE=7,BPSTATUS'["REJECTED" G XPROC  ;exclude non-rejected closed claims
"RTN","BPSRPT1",142,0)
 ;
"RTN","BPSRPT1",143,0)
 ;if Spending Account Report, check Pricing Segment for data
"RTN","BPSRPT1",144,0)
 I BPRTYPE=8,'$$PRICING^BPSRPT5(BP59) G XPROC
"RTN","BPSRPT1",145,0)
 ;
"RTN","BPSRPT1",146,0)
 ;if Recent Transactions, exclude closed claims
"RTN","BPSRPT1",147,0)
 I BPRTYPE=5,$$CLSCLM(BP59) G XPROC
"RTN","BPSRPT1",148,0)
 ;
"RTN","BPSRPT1",149,0)
 ;If Totals by Date, include only rejects and payables
"RTN","BPSRPT1",150,0)
 I BPRTYPE=6,BPSTATUS'["REJECTED",BPSTATUS'["PAYABLE" G XPROC  ; Reversed
"RTN","BPSRPT1",151,0)
 ;
"RTN","BPSRPT1",152,0)
 ;Realtime/Backbill/PRO Option/Resubmission Check
"RTN","BPSRPT1",153,0)
 S BPBCK=$$RTBCK(BP59)
"RTN","BPSRPT1",154,0)
 ;
"RTN","BPSRPT1",155,0)
 ; BPBCK   = 1 Backbill / 2 PRO / 5 Resub / 0 Realtime
"RTN","BPSRPT1",156,0)
 ; BPRTBCK = 3 Backbill / 4 PRO / 5 Resub / 2 Realtime
"RTN","BPSRPT1",157,0)
 ;
"RTN","BPSRPT1",158,0)
 S BPBCKX=$S(BPBCK=1:3,BPBCK=2:4,BPBCK=5:5,BPBCK=0:2,1:"") ;convert to BPRTBCK value
"RTN","BPSRPT1",159,0)
 ;
"RTN","BPSRPT1",160,0)
 ; If user doesn't want all transmission types (BPRTBCK'=1),
"RTN","BPSRPT1",161,0)
 ; then figure out if this transaction is OK
"RTN","BPSRPT1",162,0)
 I BPRTBCK'=1,BPRTBCK'[BPBCKX G XPROC
"RTN","BPSRPT1",163,0)
 ;
"RTN","BPSRPT1",164,0)
 ;Check for MAIL/WINDOW/CMOP/ALL
"RTN","BPSRPT1",165,0)
 I BPMWC'="A",BPMWC'[$$MWC^BPSRPT6(BPRX,BPREF) G XPROC
"RTN","BPSRPT1",166,0)
 ;
"RTN","BPSRPT1",167,0)
 ;Check for selected insurance
"RTN","BPSRPT1",168,0)
 S BPPLAN=$$INSNAM^BPSRPT6(BP59)
"RTN","BPSRPT1",169,0)
 I BPINSINF'=0,'$$CHKINS^BPSSCRCU($P(BPPLAN,U,1),BPINSINF) G XPROC
"RTN","BPSRPT1",170,0)
 S BPPLAN=$P(BPPLAN,U,2)
"RTN","BPSRPT1",171,0)
 ; 
"RTN","BPSRPT1",172,0)
 ;Check for selected drug
"RTN","BPSRPT1",173,0)
 S BPRXDRG=$$GETDRUG^BPSRPT6(BPRX)
"RTN","BPSRPT1",174,0)
 I BPRXDRG=0 G XPROC
"RTN","BPSRPT1",175,0)
 I BPDRUG D  I BPSTOP=0 G XPROC
"RTN","BPSRPT1",176,0)
 . S BPSTOP=0
"RTN","BPSRPT1",177,0)
 . F I=1:1:$L(BPDRUG,",") I BPRXDRG=$P(BPDRUG,",",I) S BPSTOP=1 Q
"RTN","BPSRPT1",178,0)
 ;
"RTN","BPSRPT1",179,0)
 ;Check for selected drug classes
"RTN","BPSRPT1",180,0)
 I BPDRGCL'=0 S BPRXDC=$$DRGCLNAM^BPSRPT6($$GETDRGCL^BPSRPT6(BPRXDRG),99) D  I BPSTOP=0 G XPROC
"RTN","BPSRPT1",181,0)
 . S BPSTOP=0
"RTN","BPSRPT1",182,0)
 . F I=1:1:$L(BPDRGCL,";") I BPRXDC=$P(BPDRGCL,";",I) S BPSTOP=1 Q
"RTN","BPSRPT1",183,0)
 ;
"RTN","BPSRPT1",184,0)
 ;Check for selected Close Reason
"RTN","BPSRPT1",185,0)
 I BPCCRSN D  I BPSTOP=0 G XPROC
"RTN","BPSRPT1",186,0)
 . S BPSTOP=0
"RTN","BPSRPT1",187,0)
 . F I=1:1:$L(BPCCRSN,",") I $P(BPCCRSN,",",I)=$P($$CLRSN^BPSRPT7(BP59),U) S BPSTOP=1 Q
"RTN","BPSRPT1",188,0)
 ;
"RTN","BPSRPT1",189,0)
 ;Check for Accepted/Rejected
"RTN","BPSRPT1",190,0)
 I BPACREJ=1,BPSTATUS'["REJECTED" G XPROC
"RTN","BPSRPT1",191,0)
 I BPACREJ=2,BPSTATUS'["ACCEPTED" G XPROC
"RTN","BPSRPT1",192,0)
 ;
"RTN","BPSRPT1",193,0)
 ;Check for Specific Reject Code
"RTN","BPSRPT1",194,0)
 I BPREJCD'=0 D  I BPSTOP=0 G XPROC
"RTN","BPSRPT1",195,0)
 . S BPSTOP=0
"RTN","BPSRPT1",196,0)
 . F I=1:1:$L(BPREJCD,",") I $$CKREJ(BP59,$P(BPREJCD,",",I)) S BPSTOP=1 Q
"RTN","BPSRPT1",197,0)
 ;
"RTN","BPSRPT1",198,0)
 ;;Check for Eligibility Code
"RTN","BPSRPT1",199,0)
 ;;I BPELIG'=0,BPELIG'=$$ELIGCODE^BPSSCR05(BP59) G XPROC
"RTN","BPSRPT1",200,0)
 ;
"RTN","BPSRPT1",201,0)
 ;Check for Eligibility Codes, when one or more is selected (BPELIG1=1)
"RTN","BPSRPT1",202,0)
 I (",1,2,3,4,7,9,")[BPRTYPE,BPELIG1'=0 S ELIG=$$ELIGCODE^BPSSCR05(BP59) G:$G(ELIG)="" XPROC I '$D(BPELIG1(ELIG)) G XPROC
"RTN","BPSRPT1",203,0)
 ;
"RTN","BPSRPT1",204,0)
 ;Check for selected Prescribers
"RTN","BPSRPT1",205,0)
 I BPRESC'=0 D  I BPSTOP=0 G XPROC
"RTN","BPSRPT1",206,0)
 . S BPSTOP=0
"RTN","BPSRPT1",207,0)
 . F I=1:1:$L(BPRESC,",") I $$CKPRESC(BP59,$P(BPRESC,",",I)) S BPSTOP=1 Q
"RTN","BPSRPT1",208,0)
 ;
"RTN","BPSRPT1",209,0)
 ;Check for selected Patients
"RTN","BPSRPT1",210,0)
 I BPQSTPAT'=0,$G(BPPAT)'="" D  I BPSTOP=0 G XPROC
"RTN","BPSRPT1",211,0)
 . S BPSTOP=0
"RTN","BPSRPT1",212,0)
 . F I=1:1:$L(BPPAT,",") I $P(BPPAT,",",I)=$$GET1^DIQ(9002313.59,BP59,5,"I") S BPSTOP=1 Q
"RTN","BPSRPT1",213,0)
 ;
"RTN","BPSRPT1",214,0)
 ; Check for Billed Amount
"RTN","BPSRPT1",215,0)
 I $G(BPBILL)'=0 S BPBILLED=$$GET1^DIQ(9002313.59,BP59,505) I (BPBILLED<BPMIN)!(BPBILLED>BPMAX) G XPROC
"RTN","BPSRPT1",216,0)
 ;
"RTN","BPSRPT1",217,0)
 ;Check Open/Closed claim
"RTN","BPSRPT1",218,0)
 I BPOPCL'=0,((BPOPCL=2)&($$CLOSED02^BPSSCR03($P(^BPST(BP59,0),U,4))=1))!((BPOPCL=1)&($$CLOSED02^BPSSCR03($P(^BPST(BP59,0),U,4))'=1)) G XPROC
"RTN","BPSRPT1",219,0)
 ;
"RTN","BPSRPT1",220,0)
 ;Save Entry for Report
"RTN","BPSRPT1",221,0)
 D SETTMP^BPSRPT2(BPGLTMP,BPDFN,BPRX,BPREF,BP59,BPBEGDT,BPENDDT,.BPPHARM,BPSUMDET,BPPLAN,BPRLSDT,BPPAYBL,BPREJ,BPRXDRG,$P(BPSTATUS,U))
"RTN","BPSRPT1",222,0)
 ;
"RTN","BPSRPT1",223,0)
XPROC Q
"RTN","BPSRPT1",224,0)
 ;
"RTN","BPSRPT1",225,0)
 ;Check if selected BPS PHARMACY
"RTN","BPSRPT1",226,0)
 ;
"RTN","BPSRPT1",227,0)
 ; Defined Variable: BPPHARM(ptr) - List of BPS Pharmacies to Report on
"RTN","BPSRPT1",228,0)
 ; Input Variable: BP59 - Lookup to BPS TRANSACTION (#59)
"RTN","BPSRPT1",229,0)
 ; 
"RTN","BPSRPT1",230,0)
 ; Returned Value -> 0 = Entry not in list of selected pharmacies
"RTN","BPSRPT1",231,0)
 ;                   1 = Entry is in list of selected pharmacies
"RTN","BPSRPT1",232,0)
CHKPHRM(BP59) N PHARM
"RTN","BPSRPT1",233,0)
 S PHARM=+$P($G(^BPST(BP59,1)),"^",7)
"RTN","BPSRPT1",234,0)
 S PHARM=$S($D(BPPHARM(PHARM)):1,1:0)
"RTN","BPSRPT1",235,0)
 Q PHARM
"RTN","BPSRPT1",236,0)
 ;
"RTN","BPSRPT1",237,0)
 ;Determine whether claim is Released or Not Released
"RTN","BPSRPT1",238,0)
 ;
"RTN","BPSRPT1",239,0)
 ; Input Variables: BPRX - ptr to PRESCRIPTION (#52)
"RTN","BPSRPT1",240,0)
 ;                 BPREF - refill # (0-No Refills,1-1st Refill, 2-2nd, ...) 
"RTN","BPSRPT1",241,0)
 ;
"RTN","BPSRPT1",242,0)
 ; Return Value ->             0 = Not Released
"RTN","BPSRPT1",243,0)
 ;                 released date = Released
"RTN","BPSRPT1",244,0)
 ;                 
"RTN","BPSRPT1",245,0)
RELEASED(BPRX,BPREF) N RDT
"RTN","BPSRPT1",246,0)
 ;
"RTN","BPSRPT1",247,0)
 I BPREF=0 S RDT=$$RXRELDT^BPSRPT6(BPRX)\1
"RTN","BPSRPT1",248,0)
 I BPREF'=0 S RDT=$$REFRELDT^BPSRPT6(BPRX,BPREF)\1
"RTN","BPSRPT1",249,0)
 Q RDT
"RTN","BPSRPT1",250,0)
 ;
"RTN","BPSRPT1",251,0)
 ;Determine if claim was Auto Reversed
"RTN","BPSRPT1",252,0)
 ;
"RTN","BPSRPT1",253,0)
 ; Input Variable: BP59 - Lookup to BPS TRANSACTION (#59)
"RTN","BPSRPT1",254,0)
 ; Return Value -> 1 = Auto Reversed
"RTN","BPSRPT1",255,0)
 ;                 0 = Not Auto Reversed
"RTN","BPSRPT1",256,0)
 ;
"RTN","BPSRPT1",257,0)
AUTOREV(BP59) N AR,BP02
"RTN","BPSRPT1",258,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT1",259,0)
 S AR=+$P($G(^BPSC(BP02,0)),U,7)
"RTN","BPSRPT1",260,0)
 Q AR
"RTN","BPSRPT1",261,0)
 ;
"RTN","BPSRPT1",262,0)
 ;Determine if claim was closed
"RTN","BPSRPT1",263,0)
 ;
"RTN","BPSRPT1",264,0)
 ; Input Variable: BP59 - Lookup to BPS TRANSACTION (#59)
"RTN","BPSRPT1",265,0)
 ; Return Value -> 1 = Closed
"RTN","BPSRPT1",266,0)
 ;                 0 = Not Closed
"RTN","BPSRPT1",267,0)
 ;                 
"RTN","BPSRPT1",268,0)
CLSCLM(BP59) N BP02,CL
"RTN","BPSRPT1",269,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT1",270,0)
 S CL=+$G(^BPSC(BP02,900))
"RTN","BPSRPT1",271,0)
 Q CL
"RTN","BPSRPT1",272,0)
 ;
"RTN","BPSRPT1",273,0)
 ;Determine whether claim is Realtime or Backbilled or PRO Option or Resubmission
"RTN","BPSRPT1",274,0)
 ;
"RTN","BPSRPT1",275,0)
 ; Input Variable: BP59 - Lookup to BPS TRANSACTION (#59)
"RTN","BPSRPT1",276,0)
 ; Return Value -> 5 = Resubmission
"RTN","BPSRPT1",277,0)
 ;                 2 = PRO Option
"RTN","BPSRPT1",278,0)
 ;                 1 = Backbilled
"RTN","BPSRPT1",279,0)
 ;                 0 = Realtime
"RTN","BPSRPT1",280,0)
RTBCK(BP59) N BB
"RTN","BPSRPT1",281,0)
 S BB=$P($G(^BPST(BP59,12)),U,1)
"RTN","BPSRPT1",282,0)
 S BB=$S(BB="BB":1,BB="P2":2,BB="P2S":2,BB="ERES":5,BB="ERWV":5,BB="ERNB":5,1:0)
"RTN","BPSRPT1",283,0)
 Q BB
"RTN","BPSRPT1",284,0)
 ;
"RTN","BPSRPT1",285,0)
 ;Determine if the Prescriber for claim was one of the Prescribers selected
"RTN","BPSRPT1",286,0)
 ;
"RTN","BPSRPT1",287,0)
 ; Input Variables: BPS59 - Lookup to BPS TRANSACTION (#59)
"RTN","BPSRPT1",288,0)
 ;                  BPSRESC - string of Prescribers selected separated by a comma
"RTN","BPSRPT1",289,0)
 ;
"RTN","BPSRPT1",290,0)
 ; Return Value -> 1 = Prescriber is on the list of selected Prescribers 
"RTN","BPSRPT1",291,0)
 ;                 0 = RX and/or Prescriber not found, or the Prescriber for this
"RTN","BPSRPT1",292,0)
 ;                     transaction isn't one of the selected Prescribers
"RTN","BPSRPT1",293,0)
 ;
"RTN","BPSRPT1",294,0)
CKPRESC(BPS59,BPSPRESC) ;
"RTN","BPSRPT1",295,0)
 ; 
"RTN","BPSRPT1",296,0)
 N BPSFND,BPSRX,BPSRXPRSC
"RTN","BPSRPT1",297,0)
 ;
"RTN","BPSRPT1",298,0)
 S BPSFND=0  ; Initialize to zero.
"RTN","BPSRPT1",299,0)
 ;
"RTN","BPSRPT1",300,0)
 ; get the prescription number ien from the BPS TRANSACTION file
"RTN","BPSRPT1",301,0)
 S BPSRX=$$GET1^DIQ(9002313.59,BPS59,1.11,"I")
"RTN","BPSRPT1",302,0)
 ;
"RTN","BPSRPT1",303,0)
 ; if the prescription number didn't exist 
"RTN","BPSRPT1",304,0)
 I BPSRX="" G CKPRESCX
"RTN","BPSRPT1",305,0)
 ;
"RTN","BPSRPT1",306,0)
 ; get the prescriber ien from the PRESCRIPTION file
"RTN","BPSRPT1",307,0)
 S BPSRXPRSC=$$GET1^DIQ(52,BPSRX,4,"I")
"RTN","BPSRPT1",308,0)
 ;
"RTN","BPSRPT1",309,0)
 ; if the prescriber didn't exist BPRESC 
"RTN","BPSRPT1",310,0)
 I BPSRXPRSC="" G CKPRESCX
"RTN","BPSRPT1",311,0)
 ;
"RTN","BPSRPT1",312,0)
 ; The Prescriber for this transaction is one of the Prescribers selected
"RTN","BPSRPT1",313,0)
 I BPSPRESC[BPSRXPRSC S BPSFND=1
"RTN","BPSRPT1",314,0)
 ;
"RTN","BPSRPT1",315,0)
CKPRESCX ;
"RTN","BPSRPT1",316,0)
 Q BPSFND
"RTN","BPSRPT1",317,0)
 ;
"RTN","BPSRPT1",318,0)
 ;Screen Pause 1
"RTN","BPSRPT1",319,0)
 ;
"RTN","BPSRPT1",320,0)
 ; Return variable - BPQ = 0 Continue
"RTN","BPSRPT1",321,0)
 ;                          2 Quit
"RTN","BPSRPT1",322,0)
PAUSE N X
"RTN","BPSRPT1",323,0)
 U IO(0) W !!,"Press RETURN to continue, '^' to exit:"
"RTN","BPSRPT1",324,0)
 R X:$G(DTIME) S:'$T X="^" S:X["^" BPQ=2
"RTN","BPSRPT1",325,0)
 U IO
"RTN","BPSRPT1",326,0)
 Q
"RTN","BPSRPT1",327,0)
 ;
"RTN","BPSRPT1",328,0)
 ;Screen Pause 2
"RTN","BPSRPT1",329,0)
 ;
"RTN","BPSRPT1",330,0)
 ; Return variable - BPQ = 0 Continue
"RTN","BPSRPT1",331,0)
 ;                         2 Quit
"RTN","BPSRPT1",332,0)
PAUSE2 N X
"RTN","BPSRPT1",333,0)
 U IO(0) W !!,"Press RETURN to continue:"
"RTN","BPSRPT1",334,0)
 R X:$G(DTIME) S:'$T X="^" S:X["^" BPQ=2
"RTN","BPSRPT1",335,0)
 U IO
"RTN","BPSRPT1",336,0)
 Q
"RTN","BPSRPT1",337,0)
 ;
"RTN","BPSRPT1",338,0)
 ;Get ECME#
"RTN","BPSRPT1",339,0)
 ;
"RTN","BPSRPT1",340,0)
 ;BP59 - ptr to 9002313.59
"RTN","BPSRPT1",341,0)
 ;output :
"RTN","BPSRPT1",342,0)
 ;ECME number from 9002313.02
"RTN","BPSRPT1",343,0)
 ; 7 or 12 digits of the prescription IEN file 52
"RTN","BPSRPT1",344,0)
 ; or 12 spaces
"RTN","BPSRPT1",345,0)
ECMENUM(BP59) ;*/
"RTN","BPSRPT1",346,0)
 Q $$ECMENUM^BPSSCRU2(BP59)
"RTN","BPSRPT1",347,0)
 ;
"RTN","BPSRPT1",348,0)
 ;Convert FM date or date.time to displayable (mm/dd/yy HH:MM) format
"RTN","BPSRPT1",349,0)
 ;
"RTN","BPSRPT1",350,0)
DATTIM(X) N DATE,BPT,BPM,BPH,BPAP
"RTN","BPSRPT1",351,0)
 S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:"")
"RTN","BPSRPT1",352,0)
 S BPT=$P(X,".",2) S:$L(BPT)<4 BPT=BPT_$E("0000",1,4-$L(BPT))
"RTN","BPSRPT1",353,0)
 S BPH=$E(BPT,1,2),BPM=$E(BPT,3,4)
"RTN","BPSRPT1",354,0)
 S BPAP="AM" I BPH>12 S BPH=BPH-12,BPAP="PM" S:$L(BPH)<2 BPH="0"_BPH
"RTN","BPSRPT1",355,0)
 I BPT S:'BPH BPH=12 S DATE=DATE_" "_BPH_":"_BPM_BPAP
"RTN","BPSRPT1",356,0)
 Q $G(DATE)
"RTN","BPSRPT1",357,0)
 ;
"RTN","BPSRPT1",358,0)
 ;Display RT-Realtime,BB-Backbill,P2-PRO Option, RS-Resubmission or " "
"RTN","BPSRPT1",359,0)
 ;
"RTN","BPSRPT1",360,0)
RTBCKNAM(BPINDEX) Q $S(BPINDEX=0:"RT",BPINDEX=1:"BB",BPINDEX=2:"P2",BPINDEX=5:"RS",1:" ")
"RTN","BPSRPT1",361,0)
 ;
"RTN","BPSRPT1",362,0)
 ;See for Specific Reject Code
"RTN","BPSRPT1",363,0)
 ;
"RTN","BPSRPT1",364,0)
CKREJ(BP59,BPREJCD) N FREJ,I,REJ,X
"RTN","BPSRPT1",365,0)
 S FREJ=0
"RTN","BPSRPT1",366,0)
 S X=$$REJTEXT^BPSRPT2(BP59,.REJ)
"RTN","BPSRPT1",367,0)
 S X="" F  S X=$O(REJ(X)) Q:X=""  D  Q:FREJ=1
"RTN","BPSRPT1",368,0)
 .S REJ=$P($G(REJ(X)),":") Q:REJ=""
"RTN","BPSRPT1",369,0)
 .S I="" F  S I=$O(^BPSF(9002313.93,"B",REJ,I)) Q:I=""  I I=BPREJCD S FREJ=1
"RTN","BPSRPT1",370,0)
 Q FREJ
"RTN","BPSRPT3")
0^7^B233518281
"RTN","BPSRPT3",1,0)
BPSRPT3 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT3",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,5,7,11,14,19,20,23,24**;JUN 2004;Build 43
"RTN","BPSRPT3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRPT3",4,0)
 ;
"RTN","BPSRPT3",5,0)
 ;Reference to IB NCPCP NON-BILLABLE STATUS REASONS (#366.17) supported by ICR 6136
"RTN","BPSRPT3",6,0)
 ;
"RTN","BPSRPT3",7,0)
 Q
"RTN","BPSRPT3",8,0)
 ;
"RTN","BPSRPT3",9,0)
 ; Select the ECME Pharmacy or Pharmacies
"RTN","BPSRPT3",10,0)
 ; 
"RTN","BPSRPT3",11,0)
 ; Input Variable -> none
"RTN","BPSRPT3",12,0)
 ; Return Value ->   "" = Valid Entry or Entries Selected
"RTN","BPSRPT3",13,0)
 ;                                        ^ = Exit
"RTN","BPSRPT3",14,0)
 ;                                       
"RTN","BPSRPT3",15,0)
 ; Output Variable -> BPPHARM = 1 One or More Pharmacies Selected
"RTN","BPSRPT3",16,0)
 ;                          = 0 User Entered 'ALL'
"RTN","BPSRPT3",17,0)
 ;                            
"RTN","BPSRPT3",18,0)
 ; If BPPHARM = 1 then the BPPHARM array will be defined where:
"RTN","BPSRPT3",19,0)
 ;    BPPHARM(ptr) = ptr ^ BPS PHARMACY NAME and
"RTN","BPSRPT3",20,0)
 ;    ptr = Internal Pointer to BPS PHARMACIES file (#9002313.56)
"RTN","BPSRPT3",21,0)
 ;                    
"RTN","BPSRPT3",22,0)
SELPHARM() N DIC,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",23,0)
 ;
"RTN","BPSRPT3",24,0)
 ;Reset BPPHARM array
"RTN","BPSRPT3",25,0)
 K BPPHARM
"RTN","BPSRPT3",26,0)
 ;
"RTN","BPSRPT3",27,0)
 ;First see if they want to enter individual divisions or ALL
"RTN","BPSRPT3",28,0)
 S DIR(0)="S^D:DIVISION;A:ALL"
"RTN","BPSRPT3",29,0)
 S DIR("A")="Select Certain Pharmacy (D)ivisions or (A)LL"
"RTN","BPSRPT3",30,0)
 S DIR("L",1)="Select one of the following:"
"RTN","BPSRPT3",31,0)
 S DIR("L",2)=""
"RTN","BPSRPT3",32,0)
 S DIR("L",3)="     D         DIVISION"
"RTN","BPSRPT3",33,0)
 S DIR("L",4)="     A         ALL"
"RTN","BPSRPT3",34,0)
 D ^DIR K DIR
"RTN","BPSRPT3",35,0)
 ;
"RTN","BPSRPT3",36,0)
 ;Check for "^" or timeout, otherwise define BPPHARM
"RTN","BPSRPT3",37,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",38,0)
 E  S BPPHARM=$S(Y="A":0,1:1)
"RTN","BPSRPT3",39,0)
 ;
"RTN","BPSRPT3",40,0)
SELPHRM1 ;
"RTN","BPSRPT3",41,0)
 ;If division selected, ask prompt
"RTN","BPSRPT3",42,0)
 I $G(BPPHARM)=1 F  D  Q:Y="^"!(Y="") 
"RTN","BPSRPT3",43,0)
 .;
"RTN","BPSRPT3",44,0)
 .;Prompt for entry
"RTN","BPSRPT3",45,0)
 .K X S DIC(0)="QEAM",DIC=9002313.56,DIC("A")="Select ECME Pharmacy Division(s): "
"RTN","BPSRPT3",46,0)
 .W ! D ^DIC
"RTN","BPSRPT3",47,0)
 .;
"RTN","BPSRPT3",48,0)
 .;Check for "^" or timeout 
"RTN","BPSRPT3",49,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1) K BPPHARM S Y="^" Q
"RTN","BPSRPT3",50,0)
 .;
"RTN","BPSRPT3",51,0)
 .;Check for blank entry, quit if no previous selections
"RTN","BPSRPT3",52,0)
 .I $G(X)="" S Y=$S($D(BPPHARM)>9:"",1:"^") Q
"RTN","BPSRPT3",53,0)
 .;
"RTN","BPSRPT3",54,0)
 .;Handle Deletes
"RTN","BPSRPT3",55,0)
 .I $D(BPPHARM(+Y)) D  Q:Y="^"  I 1
"RTN","BPSRPT3",56,0)
 ..N P
"RTN","BPSRPT3",57,0)
 ..S P=Y  ;Save Original Value
"RTN","BPSRPT3",58,0)
 ..S DIR(0)="S^Y:YES;N:NO",DIR("A")="Delete "_$P(P,U,2)_" from your list?"
"RTN","BPSRPT3",59,0)
 ..S DIR("B")="NO" D ^DIR
"RTN","BPSRPT3",60,0)
 ..I ($G(DUOUT)=1)!($G(DTOUT)=1) K BPPHARM S Y="^" Q
"RTN","BPSRPT3",61,0)
 ..I Y="Y" K BPPHARM(+P),BPPHARM("B",$P(P,U,2),+P)
"RTN","BPSRPT3",62,0)
 ..S Y=P  ;Restore Original Value
"RTN","BPSRPT3",63,0)
 ..K P
"RTN","BPSRPT3",64,0)
 .E  D
"RTN","BPSRPT3",65,0)
 ..;Define new entries in BPPHARM array
"RTN","BPSRPT3",66,0)
 ..S BPPHARM(+Y)=Y
"RTN","BPSRPT3",67,0)
 ..S BPPHARM("B",$P(Y,U,2),+Y)=""
"RTN","BPSRPT3",68,0)
 .;
"RTN","BPSRPT3",69,0)
 .;Display a list of selected divisions
"RTN","BPSRPT3",70,0)
 .I $D(BPPHARM)>9 D
"RTN","BPSRPT3",71,0)
 ..N X
"RTN","BPSRPT3",72,0)
 ..W !,?2,"Selected:"
"RTN","BPSRPT3",73,0)
 ..S X="" F  S X=$O(BPPHARM("B",X)) Q:X=""  W !,?10,X
"RTN","BPSRPT3",74,0)
 ..K X
"RTN","BPSRPT3",75,0)
 .Q
"RTN","BPSRPT3",76,0)
 ;
"RTN","BPSRPT3",77,0)
 K BPPHARM("B")
"RTN","BPSRPT3",78,0)
 Q Y
"RTN","BPSRPT3",79,0)
 ;
"RTN","BPSRPT3",80,0)
 ; Select to Include Eligibility of (V)ETERAN, (T)RICARE, (C)HAMPVA or (A)ll
"RTN","BPSRPT3",81,0)
 ; 
"RTN","BPSRPT3",82,0)
 ; Input Variable -> DFLT = 0 = All
"RTN","BPSRPT3",83,0)
 ;                          1 = VETERAN
"RTN","BPSRPT3",84,0)
 ;                          2 = TRICARE
"RTN","BPSRPT3",85,0)
 ;                          3 = CHAMPVA
"RTN","BPSRPT3",86,0)
 ; 
"RTN","BPSRPT3",87,0)
 ; Return Value ->  V, T, C or 0 for All
"RTN","BPSRPT3",88,0)
 ;
"RTN","BPSRPT3",89,0)
SELELIG(DFLT) N DIC,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","BPSRPT3",90,0)
 S DFLT=$S($G(DFLT)=1:"V",$G(DFLT)=2:"T",$G(DFLT)=3:"C",1:"A")
"RTN","BPSRPT3",91,0)
 S DIR(0)="S^V:VETERAN;T:TRICARE;C:CHAMPVA;A:ALL"
"RTN","BPSRPT3",92,0)
 S DIR("A")="Include Certain Eligibility Type or (A)ll",DIR("B")=DFLT
"RTN","BPSRPT3",93,0)
 D ^DIR
"RTN","BPSRPT3",94,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",95,0)
 S Y=$S(Y="A":0,1:Y)
"RTN","BPSRPT3",96,0)
 Q Y
"RTN","BPSRPT3",97,0)
 ;
"RTN","BPSRPT3",98,0)
 ; Display (S)ummary or (D)etail Format
"RTN","BPSRPT3",99,0)
 ;
"RTN","BPSRPT3",100,0)
 ; Input Variable -> DFLT = 1 Summary
"RTN","BPSRPT3",101,0)
 ;                          2 Detail
"RTN","BPSRPT3",102,0)
 ;
"RTN","BPSRPT3",103,0)
 ; Return Value ->   1 = Summary
"RTN","BPSRPT3",104,0)
 ;                   0 = Detail
"RTN","BPSRPT3",105,0)
 ;                   ^ = Exit
"RTN","BPSRPT3",106,0)
 ;
"RTN","BPSRPT3",107,0)
SELSMDET(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",108,0)
 S DFLT=$S($G(DFLT)=1:"Summary",$G(DFLT)=0:"Detail",1:"Detail")
"RTN","BPSRPT3",109,0)
 S DIR(0)="S^S:Summary;D:Detail",DIR("A")="Display (S)ummary or (D)etail Format",DIR("B")=DFLT
"RTN","BPSRPT3",110,0)
 D ^DIR
"RTN","BPSRPT3",111,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",112,0)
 S Y=$S(Y="S":1,Y="D":0,1:Y)
"RTN","BPSRPT3",113,0)
 Q Y
"RTN","BPSRPT3",114,0)
 ;
"RTN","BPSRPT3",115,0)
 ; Display (C)MOP or (M)ail or (W)indow or (A)ll
"RTN","BPSRPT3",116,0)
 ; 
"RTN","BPSRPT3",117,0)
 ;    Input Variable -> DFLT = C CMOP
"RTN","BPSRPT3",118,0)
 ;                             W Window
"RTN","BPSRPT3",119,0)
 ;                             M Mail
"RTN","BPSRPT3",120,0)
 ;                             A All
"RTN","BPSRPT3",121,0)
 ;                          
"RTN","BPSRPT3",122,0)
 ;    Return Value ->   C = CMOP
"RTN","BPSRPT3",123,0)
 ;                      W = Window
"RTN","BPSRPT3",124,0)
 ;                      M = Mail
"RTN","BPSRPT3",125,0)
 ;                      A = All
"RTN","BPSRPT3",126,0)
 ;                      ^ = Exit
"RTN","BPSRPT3",127,0)
 ; 
"RTN","BPSRPT3",128,0)
SELMWC(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",129,0)
 S DFLT=$S($G(DFLT)="C":"CMOP",$G(DFLT)="W":"Window",$G(DFLT)="M":"Mail",1:"ALL")
"RTN","BPSRPT3",130,0)
 S DIR(0)="S^C:CMOP;M:Mail;W:Window;A:ALL"
"RTN","BPSRPT3",131,0)
 S DIR("A")="Display (C)MOP or (M)ail or (W)indow or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT3",132,0)
 D ^DIR
"RTN","BPSRPT3",133,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",134,0)
 Q Y
"RTN","BPSRPT3",135,0)
 ;
"RTN","BPSRPT3",136,0)
 ;
"RTN","BPSRPT3",137,0)
SELMWC1(DFLT) ;
"RTN","BPSRPT3",138,0)
 ; Upon completion of prompt, values will be placed into a string delimited
"RTN","BPSRPT3",139,0)
 ; by commas. e.g. C,M
"RTN","BPSRPT3",140,0)
 ; 
"RTN","BPSRPT3",141,0)
 ; If user includes (A)ll as a code, "A" will be stored in BPARR
"RTN","BPSRPT3",142,0)
 ; array. e.g. Entry of C,M,A will save as BPARR("MWC")="A"
"RTN","BPSRPT3",143,0)
 ; 
"RTN","BPSRPT3",144,0)
 ; User input values are temporary stored in array BPSMWC to eliminate duplicate 
"RTN","BPSRPT3",145,0)
 ; entries. e.g. Entry of C,M,C will save as BPARR("MWC")="C,M"
"RTN","BPSRPT3",146,0)
 ; 
"RTN","BPSRPT3",147,0)
BPSMWC ;
"RTN","BPSRPT3",148,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",149,0)
 N BPARR,BPSMWC,BPSERR,BPSMWCSTR,BPSSEL,BPSX
"RTN","BPSRPT3",150,0)
 ;
"RTN","BPSRPT3",151,0)
 S BPSMWCSTR=",C,M,W,A,"
"RTN","BPSRPT3",152,0)
 S DIR(0)="FO^0:7"
"RTN","BPSRPT3",153,0)
 S DIR("A",1)=""
"RTN","BPSRPT3",154,0)
 S DIR("A",2)="     Select one or more of the following:"
"RTN","BPSRPT3",155,0)
 S DIR("A",3)=""
"RTN","BPSRPT3",156,0)
 S DIR("A",4)="          C         CMOP"
"RTN","BPSRPT3",157,0)
 S DIR("A",5)="          M         Mail"
"RTN","BPSRPT3",158,0)
 S DIR("A",6)="          W         Window"
"RTN","BPSRPT3",159,0)
 S DIR("A",7)="          A         ALL"
"RTN","BPSRPT3",160,0)
 S DIR("A",8)=""
"RTN","BPSRPT3",161,0)
 S DIR("A")="Display (C)MOP or (M)ail or (W)indow or (A)ll"
"RTN","BPSRPT3",162,0)
 S DIR("B")="A" S:$G(BPARR("MWC"))'="" DIR("B")=BPARR("MWC")
"RTN","BPSRPT3",163,0)
 S DIR("?",1)="Enter a single response or multiple responses separated by commas."
"RTN","BPSRPT3",164,0)
 S DIR("?",2)=" Example:"
"RTN","BPSRPT3",165,0)
 S DIR("?",3)="  C"
"RTN","BPSRPT3",166,0)
 S DIR("?")="  C,M"
"RTN","BPSRPT3",167,0)
 D ^DIR K DIR
"RTN","BPSRPT3",168,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($D(DIRUT)) Q "^"
"RTN","BPSRPT3",169,0)
 ;
"RTN","BPSRPT3",170,0)
 ;Convert any lower case to upper case
"RTN","BPSRPT3",171,0)
 S X=$TR(X,BPSLC,BPSUC)
"RTN","BPSRPT3",172,0)
 ;
"RTN","BPSRPT3",173,0)
 ;If 'A' was one of the selections,reset X to include all available selections.
"RTN","BPSRPT3",174,0)
 I X[",",X["A" S X="C,M,W"
"RTN","BPSRPT3",175,0)
 ;
"RTN","BPSRPT3",176,0)
 ; Loop through user input (returned in variable X).
"RTN","BPSRPT3",177,0)
 ; Display warning message if any user input selection is not included
"RTN","BPSRPT3",178,0)
 ; in the string of acceptable codes (BPSMWCSTR) and re-prompt question.
"RTN","BPSRPT3",179,0)
 ; Assign valid selections to BPSMWC array. This array will prevent
"RTN","BPSRPT3",180,0)
 ; duplicate entries from being saved to the user's profile.
"RTN","BPSRPT3",181,0)
 ;
"RTN","BPSRPT3",182,0)
 K BPSMWC
"RTN","BPSRPT3",183,0)
 S BPSERR=""
"RTN","BPSRPT3",184,0)
 F BPSX=1:1:$L(X,",") D
"RTN","BPSRPT3",185,0)
 . S BPSSEL=$P(X,",",BPSX)
"RTN","BPSRPT3",186,0)
 . I BPSMWCSTR'[(","_BPSSEL_",") W !," ",BPSSEL," is not a valid entry." S BPSERR=1 Q
"RTN","BPSRPT3",187,0)
 . S BPSMWC(BPSSEL)=""
"RTN","BPSRPT3",188,0)
 ;
"RTN","BPSRPT3",189,0)
 I $G(BPSERR)=1 G BPSMWC
"RTN","BPSRPT3",190,0)
 ;
"RTN","BPSRPT3",191,0)
 ; If user included (A)ll as a selection, set profile setting to "A".
"RTN","BPSRPT3",192,0)
 ;
"RTN","BPSRPT3",193,0)
 I $D(BPSMWC("A")) S BPARR("MWC")="A"
"RTN","BPSRPT3",194,0)
 E  D  ; User did not enter "A".
"RTN","BPSRPT3",195,0)
 . ;
"RTN","BPSRPT3",196,0)
 . ; At this point user selections are valid, do not include "A".
"RTN","BPSRPT3",197,0)
 . ; Loop through and set selections into a comma delimited
"RTN","BPSRPT3",198,0)
 . ; string before assigning to BPARR array.
"RTN","BPSRPT3",199,0)
 . ;
"RTN","BPSRPT3",200,0)
 . S BPSSEL=""
"RTN","BPSRPT3",201,0)
 . F  S BPSSEL=$O(BPSMWC(BPSSEL)) Q:BPSSEL=""  D
"RTN","BPSRPT3",202,0)
 . . ; Display the user selections
"RTN","BPSRPT3",203,0)
 . . W !,?10,$S(BPSSEL="C":"CMOP",BPSSEL="M":"MAIL",BPSSEL="W":"WINDOW",1:"")
"RTN","BPSRPT3",204,0)
 . . S BPSMWC=$G(BPSMWC)_BPSSEL_","
"RTN","BPSRPT3",205,0)
 . S BPSMWC=$E(BPSMWC,1,($L(BPSMWC)-1))
"RTN","BPSRPT3",206,0)
 . S BPARR("MWC")=BPSMWC
"RTN","BPSRPT3",207,0)
 ;
"RTN","BPSRPT3",208,0)
 Q BPARR("MWC")
"RTN","BPSRPT3",209,0)
 ;
"RTN","BPSRPT3",210,0)
 ; Display (R)ealTime Fills or (B)ackbills or (P)RO option or Re(S)ubmission or (A)LL
"RTN","BPSRPT3",211,0)
 ;
"RTN","BPSRPT3",212,0)
 ;    Input Variable -> DFLT = 5 Resubmission
"RTN","BPSRPT3",213,0)
 ;                             4 PRO Option
"RTN","BPSRPT3",214,0)
 ;                             3 Backbill
"RTN","BPSRPT3",215,0)
 ;                             2 Real Time Fills
"RTN","BPSRPT3",216,0)
 ;                             1 ALL
"RTN","BPSRPT3",217,0)
 ;                          
"RTN","BPSRPT3",218,0)
 ;    Return Value ->   5 = Resubmision
"RTN","BPSRPT3",219,0)
 ;                      4 = PRO Option
"RTN","BPSRPT3",220,0)
 ;                      3 = Backbill (manually)
"RTN","BPSRPT3",221,0)
 ;                      2 = Real Time Fills (automatically during FINISH)
"RTN","BPSRPT3",222,0)
 ;                      1 = ALL
"RTN","BPSRPT3",223,0)
 ;                      ^ = Exit
"RTN","BPSRPT3",224,0)
 ;
"RTN","BPSRPT3",225,0)
SELRTBCK(DFLT) N DIR,DIRUT,DTOUT,DUOUT,DIROUT,X,Y
"RTN","BPSRPT3",226,0)
 S DFLT=$S($G(DFLT)=2:"Real Time",$G(DFLT)=3:"Backbill",$G(DFLT)=4:"PRO Option",$G(DFLT)=5:"Resubmission",1:"A")
"RTN","BPSRPT3",227,0)
 S DIR(0)="S^R:Real Time Fills;B:Backbill;P:PRO Option;S:ReSubmission;A:ALL"
"RTN","BPSRPT3",228,0)
 S DIR("A")="Display (R)ealTime, (B)ackbills, (P)RO Option, Re(S)ubmission or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT3",229,0)
 D ^DIR
"RTN","BPSRPT3",230,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",231,0)
 S Y=$S(Y="A":1,Y="R":2,Y="B":3,Y="P":4,Y="S":5,1:Y)
"RTN","BPSRPT3",232,0)
 Q Y
"RTN","BPSRPT3",233,0)
 ;
"RTN","BPSRPT3",234,0)
SELRBPS() ;
"RTN","BPSRPT3",235,0)
 ;
"RTN","BPSRPT3",236,0)
 ; BPSRBSTR = string of valid codes
"RTN","BPSRPT3",237,0)
 ;
"RTN","BPSRPT3",238,0)
 ; Upon completion of prompt, values will be placed into a string delimited
"RTN","BPSRPT3",239,0)
 ; by commas. e.g. P,R
"RTN","BPSRPT3",240,0)
 ;
"RTN","BPSRPT3",241,0)
 ; If user selected (A)ll then 1 will be stored in BPARR
"RTN","BPSRPT3",242,0)
 ;
"RTN","BPSRPT3",243,0)
 ; User input values are temporary stored in array BPSRBPS to eliminate duplicate 
"RTN","BPSRPT3",244,0)
 ; entries.
"RTN","BPSRPT3",245,0)
 ;
"RTN","BPSRPT3",246,0)
BPRBPS ; Realtime / Backbills / Pro Option / Resubmission / All
"RTN","BPSRPT3",247,0)
 N BPARR,BPSRBPS,BPSERR,BPSRBSTR,BPSSEL,BPSX
"RTN","BPSRPT3",248,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",249,0)
 ;
"RTN","BPSRPT3",250,0)
 S BPSRBSTR=",R,B,P,S,A,"
"RTN","BPSRPT3",251,0)
 S DIR(0)="FO^0:9"
"RTN","BPSRPT3",252,0)
 S DIR("A",1)=""
"RTN","BPSRPT3",253,0)
 S DIR("A",2)="     Select one or more of the following:"
"RTN","BPSRPT3",254,0)
 S DIR("A",3)=""
"RTN","BPSRPT3",255,0)
 S DIR("A",4)="          R         Real Time Fills"
"RTN","BPSRPT3",256,0)
 S DIR("A",5)="          B         Backbill"
"RTN","BPSRPT3",257,0)
 S DIR("A",6)="          P         PRO Option"
"RTN","BPSRPT3",258,0)
 S DIR("A",7)="          S         ReSubmission"
"RTN","BPSRPT3",259,0)
 S DIR("A",8)="          A         ALL"
"RTN","BPSRPT3",260,0)
 S DIR("A",9)=""
"RTN","BPSRPT3",261,0)
 S DIR("A")="Display (R)ealTime, (B)ackbills, (P)RO Option, Re(S)ubmission or (A)ll"
"RTN","BPSRPT3",262,0)
 S DIR("B")="A" S:$G(BPARR("RBPS"))'="" DIR("B")=BPARR("RBPS")
"RTN","BPSRPT3",263,0)
 S DIR("?",1)="Enter a single response or multiple responses separated by commas."
"RTN","BPSRPT3",264,0)
 S DIR("?",2)=" Example:"
"RTN","BPSRPT3",265,0)
 S DIR("?",3)="  B"
"RTN","BPSRPT3",266,0)
 S DIR("?")="  B,P"
"RTN","BPSRPT3",267,0)
 D ^DIR K DIR
"RTN","BPSRPT3",268,0)
 ;
"RTN","BPSRPT3",269,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($D(DIRUT)) Q "^"
"RTN","BPSRPT3",270,0)
 ;
"RTN","BPSRPT3",271,0)
 ;Convert any lower case to upper case
"RTN","BPSRPT3",272,0)
 S X=$TR(X,BPSLC,BPSUC)
"RTN","BPSRPT3",273,0)
 ;
"RTN","BPSRPT3",274,0)
 ;If 'A' was one of the selections,reset X to include all available selections.
"RTN","BPSRPT3",275,0)
 I X[",",X["A" S X="R,B,P,S"
"RTN","BPSRPT3",276,0)
 ;
"RTN","BPSRPT3",277,0)
 ; Loop through user input (returned in variable X).
"RTN","BPSRPT3",278,0)
 ; Display warning message if any user input selection is not included
"RTN","BPSRPT3",279,0)
 ; in the string of acceptable codes (BPSRBSTR) and re-prompt question.
"RTN","BPSRPT3",280,0)
 ; Assign valid selections to BPRTBCK array. This array will prevent
"RTN","BPSRPT3",281,0)
 ; duplicate entries from being saved to the user's profile.
"RTN","BPSRPT3",282,0)
 ;
"RTN","BPSRPT3",283,0)
 K BPSRBPS
"RTN","BPSRPT3",284,0)
 S (BPSSEL,BPSERR)=""
"RTN","BPSRPT3",285,0)
 F BPSX=1:1:$L(X,",") D
"RTN","BPSRPT3",286,0)
 . S BPSSEL=$P(X,",",BPSX)
"RTN","BPSRPT3",287,0)
 . I BPSRBSTR'[(","_BPSSEL_",") W !," ",BPSSEL," is not a valid entry." S BPSERR=1 Q
"RTN","BPSRPT3",288,0)
 . S BPSRBPS(BPSSEL)=""
"RTN","BPSRPT3",289,0)
 ;
"RTN","BPSRPT3",290,0)
 I $G(BPSERR)=1 G BPRBPS
"RTN","BPSRPT3",291,0)
 ;
"RTN","BPSRPT3",292,0)
 ; If user selected (A)ll, set profile setting to ALL.
"RTN","BPSRPT3",293,0)
 I $D(BPSRBPS("A")) S BPARR("RBPS")=1
"RTN","BPSRPT3",294,0)
 E  D  ; User did not enter "A".
"RTN","BPSRPT3",295,0)
 . ;
"RTN","BPSRPT3",296,0)
 . ; At this point user selections are valid and do not include "A".
"RTN","BPSRPT3",297,0)
 . ; Loop through valid user selections. Set selections into a
"RTN","BPSRPT3",298,0)
 . ; comma delimited string before assigning to BPARR array.
"RTN","BPSRPT3",299,0)
 . ;
"RTN","BPSRPT3",300,0)
 . S (BPSSEL,BPSSELN)=""
"RTN","BPSRPT3",301,0)
 . F  S BPSSEL=$O(BPSRBPS(BPSSEL)) Q:BPSSEL=""  D
"RTN","BPSRPT3",302,0)
 . . ; Display the user selections
"RTN","BPSRPT3",303,0)
 . . W !,?10,$S(BPSSEL="R":"REALTIME",BPSSEL="B":"BACKBILLS",BPSSEL="P":"PRO OPTION",BPSSEL="S":"RESUBMISSION",1:"")
"RTN","BPSRPT3",304,0)
 . . S BPSRBPS=$G(BPSRBPS)_BPSSEL_","
"RTN","BPSRPT3",305,0)
 . S BPSRBPS=$E(BPSRBPS,1,($L(BPSRBPS)-1))
"RTN","BPSRPT3",306,0)
 ;
"RTN","BPSRPT3",307,0)
 ; If ALL wasn't selected convert BPSRBPS to numerical a value, like existing functionality in SELRTBCK^BPSRPT3.
"RTN","BPSRPT3",308,0)
 I '$D(BPSRBPS("A")) D
"RTN","BPSRPT3",309,0)
 . N RTBCKX,NRTBCK,I
"RTN","BPSRPT3",310,0)
 . S NRTBCK=""
"RTN","BPSRPT3",311,0)
 . I $L(BPSRBPS)=1 D
"RTN","BPSRPT3",312,0)
 . . S NRTBCK=$S(BPSRBPS="R":2,BPSRBPS="B":3,BPSRBPS="P":4,BPSRBPS="S":5,1:"")
"RTN","BPSRPT3",313,0)
 . . S BPARR("RBPS")=NRTBCK
"RTN","BPSRPT3",314,0)
 . E  D
"RTN","BPSRPT3",315,0)
 . . F I=1:1:$L(BPSRBPS,",") S RTBCKX=$P(BPSRBPS,",",I),NRTBCK=NRTBCK_$S(RTBCKX="R":2,RTBCKX="B":3,RTBCKX="P":4,RTBCKX="S":5,1:"")_","
"RTN","BPSRPT3",316,0)
 . . S BPARR("RBPS")=$E(NRTBCK,1,$L(NRTBCK)-1)
"RTN","BPSRPT3",317,0)
 ;
"RTN","BPSRPT3",318,0)
 Q BPARR("RBPS")
"RTN","BPSRPT3",319,0)
 ;
"RTN","BPSRPT3",320,0)
 ; Display Specific (D)rug or Drug (C)lass
"RTN","BPSRPT3",321,0)
 ; 
"RTN","BPSRPT3",322,0)
 ;    Input Variable -> DFLT = 3 Drug Class
"RTN","BPSRPT3",323,0)
 ;                             2 Drug
"RTN","BPSRPT3",324,0)
 ;                             1 ALL
"RTN","BPSRPT3",325,0)
 ;                          
"RTN","BPSRPT3",326,0)
 ;     Return Value ->   3 = Drug Class
"RTN","BPSRPT3",327,0)
 ;                       2 = Drug
"RTN","BPSRPT3",328,0)
 ;                       1 = ALL
"RTN","BPSRPT3",329,0)
 ;                       ^ = Exit
"RTN","BPSRPT3",330,0)
 ;                       
"RTN","BPSRPT3",331,0)
SELDRGAL(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3",332,0)
 S DFLT=$S($G(DFLT)=2:"Drug",$G(DFLT)=3:"Drug Class",1:"ALL")
"RTN","BPSRPT3",333,0)
 S DIR(0)="S^D:Drug;C:Drug Class;A:ALL"
"RTN","BPSRPT3",334,0)
 S DIR("A")="Display Specific (D)rug or Drug (C)lass or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT3",335,0)
 D ^DIR
"RTN","BPSRPT3",336,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",337,0)
 S Y=$S(Y="A":1,Y="D":2,Y="C":3,1:Y)
"RTN","BPSRPT3",338,0)
 Q Y
"RTN","BPSRPT3",339,0)
 ;
"RTN","BPSRPT3",340,0)
 ; Select Drug
"RTN","BPSRPT3",341,0)
 ; 
"RTN","BPSRPT3",342,0)
 ; Input Variable -> none
"RTN","BPSRPT3",343,0)
 ; 
"RTN","BPSRPT3",344,0)
 ; Return Value -> ptr = pointer to DRUG file (#50)
"RTN","BPSRPT3",345,0)
 ;                   ^ = Exit
"RTN","BPSRPT3",346,0)
 ;                   
"RTN","BPSRPT3",347,0)
SELDRG() N DIC,DIRUT,DUOUT,X,Y
"RTN","BPSRPT3",348,0)
 ;
"RTN","BPSRPT3",349,0)
 ;Prompt for entry
"RTN","BPSRPT3",350,0)
 W ! D SELDRG^BPSRPT6
"RTN","BPSRPT3",351,0)
 ;
"RTN","BPSRPT3",352,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSRPT3",353,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",354,0)
 ;
"RTN","BPSRPT3",355,0)
 ;Check for Valid Entry
"RTN","BPSRPT3",356,0)
 I +Y>0 S Y=+Y
"RTN","BPSRPT3",357,0)
 ;
"RTN","BPSRPT3",358,0)
 Q Y
"RTN","BPSRPT3",359,0)
 ;
"RTN","BPSRPT3",360,0)
 ; Select Drug Class
"RTN","BPSRPT3",361,0)
 ; 
"RTN","BPSRPT3",362,0)
 ; Input Variable -> none
"RTN","BPSRPT3",363,0)
 ; 
"RTN","BPSRPT3",364,0)
 ; Return Value -> ptr = pointer to VA DRUG CLASS file (#50.605)
"RTN","BPSRPT3",365,0)
 ;                   ^ = Exit
"RTN","BPSRPT3",366,0)
 ;
"RTN","BPSRPT3",367,0)
SELDRGCL() N DIC,DIRUT,DUOUT,Y
"RTN","BPSRPT3",368,0)
 ;
"RTN","BPSRPT3",369,0)
 ;Prompt for entry
"RTN","BPSRPT3",370,0)
 ;Using DIC^PSNDI per ICR 4554 - BPS*1*14 ticket 313337
"RTN","BPSRPT3",371,0)
 S DIC="50.605",DIC(0)="QEAMZ" D DIC^PSNDI(DIC,"BPS",.DIC,,,)
"RTN","BPSRPT3",372,0)
 ;
"RTN","BPSRPT3",373,0)
 ;call returns DRUG CLASS CODE, need to extract DRUG CLASSIFICATION
"RTN","BPSRPT3",374,0)
 I +$G(Y)>0 S Y=$P($G(Y(0)),"^",2) I $G(Y)="" S Y=-1
"RTN","BPSRPT3",375,0)
 ;
"RTN","BPSRPT3",376,0)
 ;If nothing was returned set Y="-1" so report knows 
"RTN","BPSRPT3",377,0)
 I $G(Y)=-1 S Y="^"
"RTN","BPSRPT3",378,0)
 ;
"RTN","BPSRPT3",379,0)
 Q Y
"RTN","BPSRPT3",380,0)
 ;
"RTN","BPSRPT3",381,0)
 ; Enter Date Range
"RTN","BPSRPT3",382,0)
 ;
"RTN","BPSRPT3",383,0)
 ; Input Variable -> TYPE = 7 CLOSE REPORT
"RTN","BPSRPT3",384,0)
 ;                          1-6 OTHER REPORTS
"RTN","BPSRPT3",385,0)
 ;
"RTN","BPSRPT3",386,0)
 ; Return Value -> P1^P2
"RTN","BPSRPT3",387,0)
 ; 
"RTN","BPSRPT3",388,0)
 ;           where P1 = From Date
"RTN","BPSRPT3",389,0)
 ;                    = ^ Exit
"RTN","BPSRPT3",390,0)
 ;                 P2 = To Date
"RTN","BPSRPT3",391,0)
 ;                    = blank for Exit
"RTN","BPSRPT3",392,0)
 ;                 
"RTN","BPSRPT3",393,0)
SELDATE(TYPE) N BPSIBDT,DIR,DIRUT,DTOUT,DUOUT,VAL,X,Y
"RTN","BPSRPT3",394,0)
 S TYPE=$S($G(TYPE)=7:"CLOSE",1:"TRANSACTION")
"RTN","BPSRPT3",395,0)
SELDATE1 S VAL="",DIR(0)="DA^:DT:EX",DIR("A")="START WITH "_TYPE_" DATE: ",DIR("B")="T-1"
"RTN","BPSRPT3",396,0)
 W ! D ^DIR
"RTN","BPSRPT3",397,0)
 ;
"RTN","BPSRPT3",398,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSRPT3",399,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S VAL="^"
"RTN","BPSRPT3",400,0)
 ;
"RTN","BPSRPT3",401,0)
 I VAL="" D
"RTN","BPSRPT3",402,0)
 .S $P(VAL,U)=Y
"RTN","BPSRPT3",403,0)
 .S DIR(0)="DA^"_VAL_":DT:EX",DIR("A")="  GO TO "_TYPE_" DATE: ",DIR("B")="T"
"RTN","BPSRPT3",404,0)
 .D ^DIR
"RTN","BPSRPT3",405,0)
 .;
"RTN","BPSRPT3",406,0)
 .;Check for "^", timeout, or blank entry
"RTN","BPSRPT3",407,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S VAL="^" Q
"RTN","BPSRPT3",408,0)
 .;
"RTN","BPSRPT3",409,0)
 .;Define Entry
"RTN","BPSRPT3",410,0)
 .S $P(VAL,U,2)=Y
"RTN","BPSRPT3",411,0)
 ;
"RTN","BPSRPT3",412,0)
 Q VAL
"RTN","BPSRPT3",413,0)
 ;
"RTN","BPSRPT3",414,0)
 ; Select to Include Open or Closed or All claims
"RTN","BPSRPT3",415,0)
 ; 
"RTN","BPSRPT3",416,0)
 ; Input Variable -> DFLT = 0 = All
"RTN","BPSRPT3",417,0)
 ;                          1 = Closed
"RTN","BPSRPT3",418,0)
 ;                          2 = Open
"RTN","BPSRPT3",419,0)
 ; 
"RTN","BPSRPT3",420,0)
 ; Return Value -> 0 = All, 1 = Closed, 2 = Open
"RTN","BPSRPT3",421,0)
SELOPCL(DFLT) N DIC,DIR,DIRUT,DUOUT,X,Y
"RTN","BPSRPT3",422,0)
 ;
"RTN","BPSRPT3",423,0)
 S DFLT=$S($G(DFLT)=1:"C",$G(DFLT)=2:"O",1:"A")
"RTN","BPSRPT3",424,0)
 S DIR(0)="S^O:OPEN;C:CLOSED;A:ALL"
"RTN","BPSRPT3",425,0)
 S DIR("A")="Include (O)pen, (C)losed, or (A)ll Claims",DIR("B")=DFLT
"RTN","BPSRPT3",426,0)
 D ^DIR
"RTN","BPSRPT3",427,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",428,0)
 ;
"RTN","BPSRPT3",429,0)
 S Y=$S(Y="C":1,Y="O":2,1:0)
"RTN","BPSRPT3",430,0)
 Q Y
"RTN","BPSRPT3",431,0)
 ;
"RTN","BPSRPT3",432,0)
SELELIG1() ;
"RTN","BPSRPT3",433,0)
 ; Select multiple Eligibilities
"RTN","BPSRPT3",434,0)
 ; 
"RTN","BPSRPT3",435,0)
 ; Input Variable -> none
"RTN","BPSRPT3",436,0)
 ; Return Value   -> 0: All, 1: Selected Eligibilities; '^' = Exit
"RTN","BPSRPT3",437,0)
 ;                                       
"RTN","BPSRPT3",438,0)
 ; Output Variable -> BPELIG1 = 1 - One or More Eligibilities Selected
"RTN","BPSRPT3",439,0)
 ;                            = 0 - User Entered 'ALL'
"RTN","BPSRPT3",440,0)
 ;                            = "^" - User quit
"RTN","BPSRPT3",441,0)
 ;                            
"RTN","BPSRPT3",442,0)
 ; If BPELIG1 = 1 then the BPELIG1 array will be defined where:
"RTN","BPSRPT3",443,0)
 ;    BPELIG1("C")="CHAMPVA"
"RTN","BPSRPT3",444,0)
 ;    BPELIG1("T")="TRICARE"
"RTN","BPSRPT3",445,0)
 ;    BPELIG1("V")="VETERAN"
"RTN","BPSRPT3",446,0)
 ;
"RTN","BPSRPT3",447,0)
 ;
"RTN","BPSRPT3",448,0)
BPSELIG1 ;
"RTN","BPSRPT3",449,0)
 ;Reset BPELIG1 array
"RTN","BPSRPT3",450,0)
 K BPELIG1
"RTN","BPSRPT3",451,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,P
"RTN","BPSRPT3",452,0)
 N BPSVTC,BPSERR,BPSVTCSTR,BPSSEL,BPSX
"RTN","BPSRPT3",453,0)
 ;
"RTN","BPSRPT3",454,0)
 S BPSVTCSTR=",V,T,C,A,"
"RTN","BPSRPT3",455,0)
 S DIR(0)="FO^0:7"
"RTN","BPSRPT3",456,0)
 S DIR("A",1)=""
"RTN","BPSRPT3",457,0)
 S DIR("A",2)="Select one or more of the following:"
"RTN","BPSRPT3",458,0)
 S DIR("A",3)=""
"RTN","BPSRPT3",459,0)
 S DIR("A",4)="     V         VETERAN"
"RTN","BPSRPT3",460,0)
 S DIR("A",5)="     T         TRICARE"
"RTN","BPSRPT3",461,0)
 S DIR("A",6)="     C         CHAMPVA"
"RTN","BPSRPT3",462,0)
 S DIR("A",7)="     A         ALL"
"RTN","BPSRPT3",463,0)
 S DIR("A",8)=""
"RTN","BPSRPT3",464,0)
 S DIR("A")="Display (V)ETERAN or (T)RICARE or (C)HAMPVA or (A)LL"
"RTN","BPSRPT3",465,0)
 S DIR("B")="A" S:$G(BPARR("ELIG"))'="" DIR("B")=BPARR("ELIG")
"RTN","BPSRPT3",466,0)
 S DIR("?",1)="Enter a single response or multiple responses separated by commas."
"RTN","BPSRPT3",467,0)
 S DIR("?",2)=" Example:"
"RTN","BPSRPT3",468,0)
 S DIR("?",3)=" T"
"RTN","BPSRPT3",469,0)
 S DIR("?")=" T,C"
"RTN","BPSRPT3",470,0)
 D ^DIR K DIR
"RTN","BPSRPT3",471,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($D(DIRUT)) Q "^"
"RTN","BPSRPT3",472,0)
 ;
"RTN","BPSRPT3",473,0)
 ;Convert any lower case to upper case
"RTN","BPSRPT3",474,0)
 S X=$TR(X,BPSLC,BPSUC)
"RTN","BPSRPT3",475,0)
 ;
"RTN","BPSRPT3",476,0)
 ;If 'A' was one of the selections, reset X to include all available selections.
"RTN","BPSRPT3",477,0)
 I X[",",X["A" S X="V,T,C"
"RTN","BPSRPT3",478,0)
 ;
"RTN","BPSRPT3",479,0)
 ; Loop through user input (returned in variable X).
"RTN","BPSRPT3",480,0)
 ; Display warning message if any user input selection is not included
"RTN","BPSRPT3",481,0)
 ; in the string of acceptable codes (BPSVTCSTR) and re-prompt question.
"RTN","BPSRPT3",482,0)
 ; Assign valid selections to BPSVTC array. This array will prevent
"RTN","BPSRPT3",483,0)
 ; duplicate entries from being saved to the user's profile.
"RTN","BPSRPT3",484,0)
 ;
"RTN","BPSRPT3",485,0)
 K BPSVTC
"RTN","BPSRPT3",486,0)
 S BPSERR=""
"RTN","BPSRPT3",487,0)
 F BPSX=1:1:$L(X,",") D
"RTN","BPSRPT3",488,0)
 . S BPSSEL=$P(X,",",BPSX)
"RTN","BPSRPT3",489,0)
 . I BPSVTCSTR'[(","_BPSSEL_",") W !," ",BPSSEL," is not a valid entry." S BPSERR=1 Q
"RTN","BPSRPT3",490,0)
 . ; if All was selected don't include in array
"RTN","BPSRPT3",491,0)
 .   I BPSSEL'="A" S BPELIG1(BPSSEL)=$S(BPSSEL="V":"VETERAN",BPSSEL="T":"TRICARE",BPSSEL="C":"CHAMPVA",1:"")
"RTN","BPSRPT3",492,0)
 ;
"RTN","BPSRPT3",493,0)
 I $G(BPSERR)=1 G BPSELIG1
"RTN","BPSRPT3",494,0)
 ;
"RTN","BPSRPT3",495,0)
 ; ALL was selected
"RTN","BPSRPT3",496,0)
 I X="A" S BPELIG1=0
"RTN","BPSRPT3",497,0)
 E  D  ; 
"RTN","BPSRPT3",498,0)
 . ;User selected one or more eligibilities
"RTN","BPSRPT3",499,0)
 . S BPELIG1=1
"RTN","BPSRPT3",500,0)
 . ;
"RTN","BPSRPT3",501,0)
 . ; Display the user selections
"RTN","BPSRPT3",502,0)
 . ;
"RTN","BPSRPT3",503,0)
 . S BPSSEL=""
"RTN","BPSRPT3",504,0)
 . F  S BPSSEL=$O(BPELIG1(BPSSEL)) Q:BPSSEL=""  W !,?10,BPELIG1(BPSSEL)
"RTN","BPSRPT3",505,0)
 ;
"RTN","BPSRPT3",506,0)
 Q BPELIG1
"RTN","BPSRPT3",507,0)
 ;
"RTN","BPSRPT3",508,0)
SELALRC() ; 
"RTN","BPSRPT3",509,0)
 ; Display Most (R)ecent or (A)ll
"RTN","BPSRPT3",510,0)
 ;
"RTN","BPSRPT3",511,0)
 ; Return Value ->   A: All
"RTN","BPSRPT3",512,0)
 ;                   R: Most Recent
"RTN","BPSRPT3",513,0)
 ;                   ^: Exit
"RTN","BPSRPT3",514,0)
 ;
"RTN","BPSRPT3",515,0)
 N DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","BPSRPT3",516,0)
 ;
"RTN","BPSRPT3",517,0)
 S DIR(0)="S^R:Most Recent;A:ALL"
"RTN","BPSRPT3",518,0)
 S DIR("A")="Select Most (R)ecent or (A)ll"
"RTN","BPSRPT3",519,0)
 S DIR("B")="MOST RECENT"
"RTN","BPSRPT3",520,0)
 S DIR("L",1)="Select one of the following:"
"RTN","BPSRPT3",521,0)
 S DIR("L",2)=""
"RTN","BPSRPT3",522,0)
 S DIR("L",3)="     R         Most Recent Transaction Only"
"RTN","BPSRPT3",523,0)
 S DIR("L",4)="     A         ALL Transactions (will list the Rx/Fill each time resubmitted)"
"RTN","BPSRPT3",524,0)
 D ^DIR K DIR
"RTN","BPSRPT3",525,0)
 ;
"RTN","BPSRPT3",526,0)
 ;Check for "^" or timeout, 
"RTN","BPSRPT3",527,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",528,0)
 Q Y
"RTN","BPSRPT3",529,0)
 ;
"RTN","BPSRPT3",530,0)
SELNBSTS() ; 
"RTN","BPSRPT3",531,0)
 ; Select the Non-Billable Status Reason
"RTN","BPSRPT3",532,0)
 ; 
"RTN","BPSRPT3",533,0)
 ; Input Variable -> None
"RTN","BPSRPT3",534,0)
 ; Return Value   -> 0: All, 1: Selected Non-Billable Status; '^' = Exit
"RTN","BPSRPT3",535,0)
 ;                                       
"RTN","BPSRPT3",536,0)
 ; Output Variable -> BPNBSTS = 1 - One or More Non-Billable Statuses Selected
"RTN","BPSRPT3",537,0)
 ;                            = 0 - User Entered 'ALL'
"RTN","BPSRPT3",538,0)
 ;                            = "" - User quit
"RTN","BPSRPT3",539,0)
 ;                            
"RTN","BPSRPT3",540,0)
 ; If BPNBSTS = 1 then the BPNBSTS array will be defined where:
"RTN","BPSRPT3",541,0)
 ;    BPNBSTS(Non-Billable Status IEN)=Non-Billable Status Reason
"RTN","BPSRPT3",542,0)
 ;
"RTN","BPSRPT3",543,0)
 ;Reset BPNBSTS array
"RTN","BPSRPT3",544,0)
 K BPNBSTS
"RTN","BPSRPT3",545,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,P,DIC
"RTN","BPSRPT3",546,0)
 ;
"RTN","BPSRPT3",547,0)
 ;First see if they want to enter individual eligibilities or ALL
"RTN","BPSRPT3",548,0)
 S DIR(0)="S^S:NON-BILLABLE STATUS;A:ALL"
"RTN","BPSRPT3",549,0)
 S DIR("A")="Select Certain Non-Billable (S)tatus or (A)ll"
"RTN","BPSRPT3",550,0)
 S DIR("B")="ALL"
"RTN","BPSRPT3",551,0)
 S DIR("L",1)="Select one of the following:"
"RTN","BPSRPT3",552,0)
 S DIR("L",2)=""
"RTN","BPSRPT3",553,0)
 S DIR("L",3)="     S         NON-BILLABLE STATUS"
"RTN","BPSRPT3",554,0)
 S DIR("L",4)="     A         ALL"
"RTN","BPSRPT3",555,0)
 D ^DIR K DIR
"RTN","BPSRPT3",556,0)
 ;
"RTN","BPSRPT3",557,0)
 ;Check for "^" or timeout, otherwise define BPNBSTS
"RTN","BPSRPT3",558,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3",559,0)
 S BPNBSTS=$S(Y="A":0,Y="^":"^",1:1)
"RTN","BPSRPT3",560,0)
 I BPNBSTS'=1 Q BPNBSTS
"RTN","BPSRPT3",561,0)
 ;
"RTN","BPSRPT3",562,0)
 ;Allow user to select multiple non-billable statuses
"RTN","BPSRPT3",563,0)
 F  D  Q:Y="^"!(Y="")
"RTN","BPSRPT3",564,0)
 .;Prompt for entry - ICR 6136
"RTN","BPSRPT3",565,0)
 .K X
"RTN","BPSRPT3",566,0)
 .S DIC(0)="QEAM",DIC=366.17,DIC("A")="Select Non-Billable Reason: "
"RTN","BPSRPT3",567,0)
 .W ! D ^DIC
"RTN","BPSRPT3",568,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^" Q
"RTN","BPSRPT3",569,0)
 .;
"RTN","BPSRPT3",570,0)
 .;Check for blank entry, quit if no previous selections
"RTN","BPSRPT3",571,0)
 .I $G(Y)=-1 S Y=$S($D(BPNBSTS)>9:"",1:"^") Q
"RTN","BPSRPT3",572,0)
 .;
"RTN","BPSRPT3",573,0)
 .; Add entry to array or handle duplicate entries
"RTN","BPSRPT3",574,0)
 .I '$D(BPNBSTS($P(Y,U,1))) S BPNBSTS($P(Y,U,1))=$P(Y,U,2),BPNBSTS("B",$P(Y,U,2),$P(Y,U,1))=""
"RTN","BPSRPT3",575,0)
 .E  D  I Y="^" Q
"RTN","BPSRPT3",576,0)
 ..;Already in the array, so ask whether to delete
"RTN","BPSRPT3",577,0)
 ..N P
"RTN","BPSRPT3",578,0)
 ..S P=Y  ;Save Original Value
"RTN","BPSRPT3",579,0)
 ..S DIR(0)="S^Y:YES;N:NO",DIR("A")="Delete "_$P(P,U,2)_" from your list?"
"RTN","BPSRPT3",580,0)
 ..S DIR("B")="NO"
"RTN","BPSRPT3",581,0)
 ..D ^DIR
"RTN","BPSRPT3",582,0)
 ..I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^" Q
"RTN","BPSRPT3",583,0)
 ..I Y="Y" K BPNBSTS($P(P,U,1)),BPNBSTS("B",$P(P,U,2),$P(P,U,1))
"RTN","BPSRPT3",584,0)
 ..S Y=P  ;Restore Original Value
"RTN","BPSRPT3",585,0)
 ..K P
"RTN","BPSRPT3",586,0)
 .;
"RTN","BPSRPT3",587,0)
 .;Display a list of selected values
"RTN","BPSRPT3",588,0)
 .I $D(BPNBSTS)>9 D
"RTN","BPSRPT3",589,0)
 ..N X
"RTN","BPSRPT3",590,0)
 ..W !,?2,"Selected:"
"RTN","BPSRPT3",591,0)
 ..S X="" F  S X=$O(BPNBSTS("B",X)) Q:X=""  W !,?10,X
"RTN","BPSRPT3",592,0)
 ..K X
"RTN","BPSRPT3",593,0)
 .Q
"RTN","BPSRPT3",594,0)
 ;
"RTN","BPSRPT3",595,0)
 ; Reset BPNBSTS array if user exited
"RTN","BPSRPT3",596,0)
 I Y="^" K BPNBSTS S BPNBSTS="^" Q "^"
"RTN","BPSRPT3",597,0)
 ;
"RTN","BPSRPT3",598,0)
 ; Deleted 'x-ref' as we don't need to return that
"RTN","BPSRPT3",599,0)
 K BPNBSTS("B")
"RTN","BPSRPT3",600,0)
 ; 
"RTN","BPSRPT3",601,0)
 Q 1
"RTN","BPSRPT3",602,0)
 ;
"RTN","BPSRPT3A")
0^8^B77149727
"RTN","BPSRPT3A",1,0)
BPSRPT3A ;AITC/CKB - ECME REPORTS ;9/28/2017
"RTN","BPSRPT3A",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**23,24**;JUN 2004;Build 43
"RTN","BPSRPT3A",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRPT3A",4,0)
 ;
"RTN","BPSRPT3A",5,0)
 Q
"RTN","BPSRPT3A",6,0)
 ;
"RTN","BPSRPT3A",7,0)
SELPR(DFLT) ;
"RTN","BPSRPT3A",8,0)
 ;
"RTN","BPSRPT3A",9,0)
 ; Display (P)rescribers or (A)ll
"RTN","BPSRPT3A",10,0)
 ; 
"RTN","BPSRPT3A",11,0)
 ;    Input Variable -> DFLT = ALL
"RTN","BPSRPT3A",12,0)
 ;                          
"RTN","BPSRPT3A",13,0)
 ;     Return Value ->   1 = Prescribers
"RTN","BPSRPT3A",14,0)
 ;                       0 = ALL
"RTN","BPSRPT3A",15,0)
 ;                       ^ = Exit
"RTN","BPSRPT3A",16,0)
 ;                       
"RTN","BPSRPT3A",17,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3A",18,0)
 ;
"RTN","BPSRPT3A",19,0)
 ;Select to include (S)pecific Prescriber or (A)ll Prescribers
"RTN","BPSRPT3A",20,0)
 ;
"RTN","BPSRPT3A",21,0)
 S DIR(0)="S^S:SPECIFIC PRESCRIBER(S);A:ALL PRESCRIBERS"
"RTN","BPSRPT3A",22,0)
 S DIR("A")="Select Specific Prescriber(s) or include ALL Prescribers"
"RTN","BPSRPT3A",23,0)
 S DIR("B")="A"
"RTN","BPSRPT3A",24,0)
 S DIR("L",1)="Select one of the following:"
"RTN","BPSRPT3A",25,0)
 S DIR("L",2)=""
"RTN","BPSRPT3A",26,0)
 S DIR("L",3)="     S         Specific Prescriber(s)"
"RTN","BPSRPT3A",27,0)
 S DIR("L",4)="     A         ALL Prescribers"
"RTN","BPSRPT3A",28,0)
 D ^DIR
"RTN","BPSRPT3A",29,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3A",30,0)
 S Y=$S(Y="A":0,Y="S":1,1:Y)
"RTN","BPSRPT3A",31,0)
 Q Y
"RTN","BPSRPT3A",32,0)
 ;
"RTN","BPSRPT3A",33,0)
SELPRESC() ;
"RTN","BPSRPT3A",34,0)
 ; Allow user to select a single or multiple PRESCRIBERS(s).
"RTN","BPSRPT3A",35,0)
 ;
"RTN","BPSRPT3A",36,0)
 ; If the users selected one or more PRESCRIBERs, the selection will be stored
"RTN","BPSRPT3A",37,0)
 ; in BPARR("PRESC")separated by a comma. e.g. BPARR("PRESC")= ien1 , ien2
"RTN","BPSRPT3A",38,0)
 ;
"RTN","BPSRPT3A",39,0)
BPPRESC ;
"RTN","BPSRPT3A",40,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3A",41,0)
 N BPARR,BPSARRAY,BPSIEN
"RTN","BPSRPT3A",42,0)
 ;
"RTN","BPSRPT3A",43,0)
 S BPARR("PRESC")=""
"RTN","BPSRPT3A",44,0)
 ;
"RTN","BPSRPT3A",45,0)
 ; The SEL tag prompts user to 'Select Prescriber' and validates the selection against file #200.
"RTN","BPSRPT3A",46,0)
 D SEL("Prescriber","^VA(200,",.BPSARRAY)
"RTN","BPSRPT3A",47,0)
 ;
"RTN","BPSRPT3A",48,0)
 ; If the user entered "^" quit, no longer prompting the user to 'Select Prescriber'
"RTN","BPSRPT3A",49,0)
 I $G(BPSARRAY)="^" Q "^"
"RTN","BPSRPT3A",50,0)
 ;
"RTN","BPSRPT3A",51,0)
 ; If no Prescriber was selected, return the user to 'Display Selected (P)rescribers or (A)LL'
"RTN","BPSRPT3A",52,0)
 I $G(BPSARRAY)=0 Q 0
"RTN","BPSRPT3A",53,0)
 ;
"RTN","BPSRPT3A",54,0)
 M BPARR("PRESC")=BPSARRAY
"RTN","BPSRPT3A",55,0)
 ;
"RTN","BPSRPT3A",56,0)
 ; Creates a string of all the Prescriber ien's selected separated by a comma.
"RTN","BPSRPT3A",57,0)
 S BPSIEN=""
"RTN","BPSRPT3A",58,0)
 F  S BPSIEN=$O(BPARR("PRESC",BPSIEN)) Q:BPSIEN=""  I BPSIEN'="B" D
"RTN","BPSRPT3A",59,0)
 . I BPARR("PRESC")'="" S BPARR("PRESC")=BPARR("PRESC")_","
"RTN","BPSRPT3A",60,0)
 . S BPARR("PRESC")=BPARR("PRESC")_BPSIEN
"RTN","BPSRPT3A",61,0)
 . Q
"RTN","BPSRPT3A",62,0)
 ;
"RTN","BPSRPT3A",63,0)
 Q BPARR("PRESC")
"RTN","BPSRPT3A",64,0)
 ;
"RTN","BPSRPT3A",65,0)
SELPA(DFLT) ;
"RTN","BPSRPT3A",66,0)
 ;
"RTN","BPSRPT3A",67,0)
 ; Display (P)atients or (A)ll
"RTN","BPSRPT3A",68,0)
 ; 
"RTN","BPSRPT3A",69,0)
 ;    Input Variable -> DFLT = ALL
"RTN","BPSRPT3A",70,0)
 ;                          
"RTN","BPSRPT3A",71,0)
 ;     Return Value ->   1 = Patients
"RTN","BPSRPT3A",72,0)
 ;                       0 = ALL
"RTN","BPSRPT3A",73,0)
 ;                       ^ = Exit
"RTN","BPSRPT3A",74,0)
 ;                       
"RTN","BPSRPT3A",75,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3A",76,0)
 S DFLT="ALL"
"RTN","BPSRPT3A",77,0)
 S DIR(0)="S^P:Patient;A:ALL"
"RTN","BPSRPT3A",78,0)
 S DIR("A")="Display Selected (P)atients or (A)LL"
"RTN","BPSRPT3A",79,0)
 S DIR("B")=DFLT
"RTN","BPSRPT3A",80,0)
 D ^DIR
"RTN","BPSRPT3A",81,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3A",82,0)
 S Y=$S(Y="A":0,Y="P":1,1:Y)
"RTN","BPSRPT3A",83,0)
 Q Y
"RTN","BPSRPT3A",84,0)
 ;
"RTN","BPSRPT3A",85,0)
SELPAT() ;
"RTN","BPSRPT3A",86,0)
 ; Allow user to select a single or multiple PATIENT(s).
"RTN","BPSRPT3A",87,0)
 ;
"RTN","BPSRPT3A",88,0)
 ; If the users selected one or more PATIENTs, the selection will be stored
"RTN","BPSRPT3A",89,0)
 ; in BPARR("PATIENT")separated by a comma. e.g. BPARR("PATIENT")= patient ien1 , patient ien2
"RTN","BPSRPT3A",90,0)
 ;
"RTN","BPSRPT3A",91,0)
BPPAT ;
"RTN","BPSRPT3A",92,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3A",93,0)
 N BPARR,BPSARRAY,BPSIEN
"RTN","BPSRPT3A",94,0)
 ;
"RTN","BPSRPT3A",95,0)
 S BPARR("PATIENT")=""
"RTN","BPSRPT3A",96,0)
 ;
"RTN","BPSRPT3A",97,0)
 ; The SEL tag prompts user to 'Select Patient' and validates the selection against the PATIENT file.
"RTN","BPSRPT3A",98,0)
 D SEL("Patient","^DPT(",.BPSARRAY)
"RTN","BPSRPT3A",99,0)
 ;
"RTN","BPSRPT3A",100,0)
 ; If the user entered "^" quit, no longer prompting the user to 'Select Patient'
"RTN","BPSRPT3A",101,0)
 I $G(BPSARRAY)="^" Q "^"
"RTN","BPSRPT3A",102,0)
 ;
"RTN","BPSRPT3A",103,0)
 ; If no Patient was selected, return the user to 'Display Selected (P)atients or (A)LL'
"RTN","BPSRPT3A",104,0)
 I $G(BPSARRAY)=0 Q 0
"RTN","BPSRPT3A",105,0)
 ;
"RTN","BPSRPT3A",106,0)
 M BPARR("PATIENT")=BPSARRAY
"RTN","BPSRPT3A",107,0)
 ;
"RTN","BPSRPT3A",108,0)
 ; Creates a string of all the patient ien's selected separated by a comma.
"RTN","BPSRPT3A",109,0)
 S BPSIEN=""
"RTN","BPSRPT3A",110,0)
 F  S BPSIEN=$O(BPARR("PATIENT",BPSIEN)) Q:BPSIEN=""  I BPSIEN'="B" D
"RTN","BPSRPT3A",111,0)
 . I BPARR("PATIENT")'="" S BPARR("PATIENT")=BPARR("PATIENT")_","
"RTN","BPSRPT3A",112,0)
 . S BPARR("PATIENT")=BPARR("PATIENT")_BPSIEN
"RTN","BPSRPT3A",113,0)
 . Q
"RTN","BPSRPT3A",114,0)
 ;
"RTN","BPSRPT3A",115,0)
 Q BPARR("PATIENT")
"RTN","BPSRPT3A",116,0)
 ;
"RTN","BPSRPT3A",117,0)
SELBAMT() ;
"RTN","BPSRPT3A",118,0)
 ;
"RTN","BPSRPT3A",119,0)
 ; Select (R)ange for Billed Amount or (A)ll
"RTN","BPSRPT3A",120,0)
 ; 
"RTN","BPSRPT3A",121,0)
 ;    Input Variable -> DFLT = ALL
"RTN","BPSRPT3A",122,0)
 ;                          
"RTN","BPSRPT3A",123,0)
 ;     Return Value ->   1 = Billed Amt Range
"RTN","BPSRPT3A",124,0)
 ;                       0 = ALL
"RTN","BPSRPT3A",125,0)
 ;                       ^ = Exit
"RTN","BPSRPT3A",126,0)
 ;                       
"RTN","BPSRPT3A",127,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3A",128,0)
 S DFLT="ALL"
"RTN","BPSRPT3A",129,0)
 S DIR(0)="S^R:Range;A:ALL"
"RTN","BPSRPT3A",130,0)
 S DIR("A")="Select (R)ange for Billed Amount or (A)LL"
"RTN","BPSRPT3A",131,0)
 S DIR("B")=DFLT
"RTN","BPSRPT3A",132,0)
 D ^DIR
"RTN","BPSRPT3A",133,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT3A",134,0)
 S Y=$S(Y="A":0,Y="R":1,1:Y)
"RTN","BPSRPT3A",135,0)
 Q Y
"RTN","BPSRPT3A",136,0)
 ;
"RTN","BPSRPT3A",137,0)
SELBMIN() ;
"RTN","BPSRPT3A",138,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3A",139,0)
 ;
"RTN","BPSRPT3A",140,0)
 S DIR("A")="     Minimum Billed Amount: "
"RTN","BPSRPT3A",141,0)
 S DIR("B")=0
"RTN","BPSRPT3A",142,0)
 S DIR(0)="NA^0:999999"
"RTN","BPSRPT3A",143,0)
 S DIR("?",1)="Enter the minimum billed amount OR press"
"RTN","BPSRPT3A",144,0)
 S DIR("?",2)="return for a minimum billed amount of zero (0)."
"RTN","BPSRPT3A",145,0)
 S DIR("?")=" Example: 500 - no decimal digits"
"RTN","BPSRPT3A",146,0)
 D ^DIR
"RTN","BPSRPT3A",147,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) Q "^"
"RTN","BPSRPT3A",148,0)
 Q Y
"RTN","BPSRPT3A",149,0)
 ;
"RTN","BPSRPT3A",150,0)
SELBMAX() ;
"RTN","BPSRPT3A",151,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT3A",152,0)
 ;
"RTN","BPSRPT3A",153,0)
 S DIR("A")="     Maximum Billed Amount: "
"RTN","BPSRPT3A",154,0)
 S DIR("B")=999999
"RTN","BPSRPT3A",155,0)
 S DIR(0)="NA^0:999999^I X'>$G(BPMIN) W !,""The Maximum Billed Amount must be greater than the Minimum Billed Amount."" K X"
"RTN","BPSRPT3A",156,0)
 S DIR("?",1)="Enter the maximum billed amount. The amount"
"RTN","BPSRPT3A",157,0)
 S DIR("?",2)="entered must be greater than the minimum billed."
"RTN","BPSRPT3A",158,0)
 S DIR("?")=" Example: 1500 - no decimal digits"
"RTN","BPSRPT3A",159,0)
 D ^DIR
"RTN","BPSRPT3A",160,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) Q "^"
"RTN","BPSRPT3A",161,0)
 Q Y
"RTN","BPSRPT3A",162,0)
 ;
"RTN","BPSRPT3A",163,0)
SELDRG1() ;
"RTN","BPSRPT3A",164,0)
 ;
"RTN","BPSRPT3A",165,0)
 ; Allow user to select a single or multiple DRUGS.
"RTN","BPSRPT3A",166,0)
 ;
"RTN","BPSRPT3A",167,0)
 ; The users selection is stored in BPARR("DRUG") separated by a comma.
"RTN","BPSRPT3A",168,0)
 ;  BPARR("DRUG")=drug ien1,drug ien2
"RTN","BPSRPT3A",169,0)
 ;
"RTN","BPSRPT3A",170,0)
DRG1 ;
"RTN","BPSRPT3A",171,0)
 N BPARR,BPSIEN,BPSDRGARR
"RTN","BPSRPT3A",172,0)
 S BPARR("DRUG")=""
"RTN","BPSRPT3A",173,0)
 ;
"RTN","BPSRPT3A",174,0)
 ; The SEL tag prompts user to 'Select Drug' and validates the selection against the DRUG file.
"RTN","BPSRPT3A",175,0)
 D SEL("Drug","^PSDRUG(",.BPSDRGARR)
"RTN","BPSRPT3A",176,0)
 ;
"RTN","BPSRPT3A",177,0)
 ; If the user entered "^" quit, no longer prompting the user to 'Select Drug'
"RTN","BPSRPT3A",178,0)
 I $G(BPSDRGARR)="^" Q "^"
"RTN","BPSRPT3A",179,0)
 ;
"RTN","BPSRPT3A",180,0)
 ; If no drug was selected, return "0" so the user will be returned to the Drug or Drug Class or All prompt.
"RTN","BPSRPT3A",181,0)
 I $G(BPSDRGARR)=0 Q 0
"RTN","BPSRPT3A",182,0)
 ;
"RTN","BPSRPT3A",183,0)
 M BPARR("DRUG")=BPSDRGARR
"RTN","BPSRPT3A",184,0)
 ;
"RTN","BPSRPT3A",185,0)
 ; Creates a string of all the drug ien's selected separated by a comma.
"RTN","BPSRPT3A",186,0)
 S BPSIEN=""
"RTN","BPSRPT3A",187,0)
 F  S BPSIEN=$O(BPARR("DRUG",BPSIEN)) Q:BPSIEN=""  I BPSIEN'="B" D
"RTN","BPSRPT3A",188,0)
 . I BPARR("DRUG")'="" S BPARR("DRUG")=BPARR("DRUG")_","
"RTN","BPSRPT3A",189,0)
 . S BPARR("DRUG")=BPARR("DRUG")_BPSIEN
"RTN","BPSRPT3A",190,0)
 . Q
"RTN","BPSRPT3A",191,0)
 ;
"RTN","BPSRPT3A",192,0)
 Q BPARR("DRUG")
"RTN","BPSRPT3A",193,0)
 ;
"RTN","BPSRPT3A",194,0)
SELDC() ;
"RTN","BPSRPT3A",195,0)
 ;
"RTN","BPSRPT3A",196,0)
 ; Allow user to select a single or multiple DRUG CLASSes,
"RTN","BPSRPT3A",197,0)
 ;
"RTN","BPSRPT3A",198,0)
 ; The users selection is stored in BPARR("DRUG CLASS") separated by a semi colon.
"RTN","BPSRPT3A",199,0)
 ; BPARR("DRUG CLASS")=dc name ien ; dc name ien
"RTN","BPSRPT3A",200,0)
 ;
"RTN","BPSRPT3A",201,0)
DRGCL ;
"RTN","BPSRPT3A",202,0)
 N BPARR,BPSIEN,BPSDCARR
"RTN","BPSRPT3A",203,0)
 S BPARR("DRUG CLASS")=""
"RTN","BPSRPT3A",204,0)
 ;
"RTN","BPSRPT3A",205,0)
 ; The SEL tag prompts user and validates the selection against the DRUG CLASS file.
"RTN","BPSRPT3A",206,0)
 D DCSEL("Drug Class","^PS(50.605,",.BPSDCARR)
"RTN","BPSRPT3A",207,0)
 ;
"RTN","BPSRPT3A",208,0)
 ; If the user entered "^" quit, no longer prompting the user to 'Select Drug Class'
"RTN","BPSRPT3A",209,0)
 I $G(BPSDCARR)="^" Q "^"
"RTN","BPSRPT3A",210,0)
 ;
"RTN","BPSRPT3A",211,0)
 ; If no drug class was selected, return "0" so the user will be returned to the Drug or Drug Class or All prompt.
"RTN","BPSRPT3A",212,0)
 I $G(BPSDCARR)=0 Q 0
"RTN","BPSRPT3A",213,0)
 ;
"RTN","BPSRPT3A",214,0)
 M BPARR("DRUG CLASS")=BPSDCARR
"RTN","BPSRPT3A",215,0)
 ;
"RTN","BPSRPT3A",216,0)
 ; Creates a string of all the drug class ien's selected separated by a comma. 
"RTN","BPSRPT3A",217,0)
 S BPSIEN=""
"RTN","BPSRPT3A",218,0)
 F  S BPSIEN=$O(BPARR("DRUG CLASS",BPSIEN)) Q:BPSIEN=""  I BPSIEN'="B" D
"RTN","BPSRPT3A",219,0)
 . I BPARR("DRUG CLASS")'="" S BPARR("DRUG CLASS")=BPARR("DRUG CLASS")_";"
"RTN","BPSRPT3A",220,0)
 . S BPARR("DRUG CLASS")=BPARR("DRUG CLASS")_$$GET1^DIQ(50.605,BPSIEN,1)
"RTN","BPSRPT3A",221,0)
 . Q
"RTN","BPSRPT3A",222,0)
 ;
"RTN","BPSRPT3A",223,0)
 Q BPARR("DRUG CLASS")
"RTN","BPSRPT3A",224,0)
 ; 
"RTN","BPSRPT3A",225,0)
SEL(FIELD,FILE,BPSARRAY,DEFAULT) ;
"RTN","BPSRPT3A",226,0)
 ; Provides selection of one or many Drug, Prescriber and Patients.
"RTN","BPSRPT3A",227,0)
 ; Note: if you to make changes to this subroutine you need to check DCSEL, RCSEL^BPSRPT4, CCRSEL^BPSRPT4 
"RTN","BPSRPT3A",228,0)
 ;       they might require the same changes.
"RTN","BPSRPT3A",229,0)
 N DIC,DTOUT,DUOUT,QT,Y,X
"RTN","BPSRPT3A",230,0)
 N BPSARR
"RTN","BPSRPT3A",231,0)
 ;
"RTN","BPSRPT3A",232,0)
 S DIC=FILE,DIC(0)="QEZAM",DIC("A")="Select "_FIELD_": "
"RTN","BPSRPT3A",233,0)
 I FIELD="Prescriber" S DIC("S")="I +$G(^VA(200,Y,""PS""))"
"RTN","BPSRPT3A",234,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","BPSRPT3A",235,0)
 ;
"RTN","BPSRPT3A",236,0)
 F  D ^DIC Q:X=""  D  Q:$G(QT)
"RTN","BPSRPT3A",237,0)
 . ; Check for "^" or timeout, if found set BPSARRAY="^" and quit.
"RTN","BPSRPT3A",238,0)
 . I $D(DTOUT)!$D(DUOUT) K BPSARRAY S BPSARRAY="^",QT=1 Q
"RTN","BPSRPT3A",239,0)
 . ;
"RTN","BPSRPT3A",240,0)
 . ; If selection already exists in BPSARRAY, ask user if they
"RTN","BPSRPT3A",241,0)
 . ; want to Delete the entry
"RTN","BPSRPT3A",242,0)
 . I $D(BPSARRAY(+Y)) D  Q
"RTN","BPSRPT3A",243,0)
 . . N P
"RTN","BPSRPT3A",244,0)
 . . S P=Y ;Save Original Value
"RTN","BPSRPT3A",245,0)
 . . S DIR(0)="S^Y:YES;N:NO"
"RTN","BPSRPT3A",246,0)
 . . S DIR("A")="Delete "_$P(P,U,2)_" from your list?"
"RTN","BPSRPT3A",247,0)
 . . S DIR("B")="NO" D ^DIR
"RTN","BPSRPT3A",248,0)
 . . I Y="Y" K BPSARRAY(+P),BPSARRAY("B",$P(P,U,2),+P)
"RTN","BPSRPT3A",249,0)
 . . ; Display a list of current selections
"RTN","BPSRPT3A",250,0)
 . . I $D(BPSARRAY) D
"RTN","BPSRPT3A",251,0)
 . . . N X
"RTN","BPSRPT3A",252,0)
 . . . W !,?2,"Selected:"
"RTN","BPSRPT3A",253,0)
 . . . S X="" F  S X=$O(BPSARRAY("B",X)) Q:X=""  W ?12,X,!
"RTN","BPSRPT3A",254,0)
 . E  D
"RTN","BPSRPT3A",255,0)
 . . ;Define new entries in BPSCCR array
"RTN","BPSRPT3A",256,0)
 . . S BPSARRAY(+Y)=$P(Y,U,2)
"RTN","BPSRPT3A",257,0)
 . . S BPSARRAY("B",$P(Y,U,2),+Y)=""
"RTN","BPSRPT3A",258,0)
 . ;
"RTN","BPSRPT3A",259,0)
 . ;Display a list of current selections
"RTN","BPSRPT3A",260,0)
 . N X
"RTN","BPSRPT3A",261,0)
 . W !,?2,"Selected:"
"RTN","BPSRPT3A",262,0)
 . S X="" F  S X=$O(BPSARRAY("B",X)) Q:X=""  W ?12,X,!
"RTN","BPSRPT3A",263,0)
 . K DIC("B")
"RTN","BPSRPT3A",264,0)
 ;
"RTN","BPSRPT3A",265,0)
 ; If nothing was selected set BPSARRAY=0
"RTN","BPSRPT3A",266,0)
 I '$D(BPSARRAY) S BPSARRAY=0
"RTN","BPSRPT3A",267,0)
 Q
"RTN","BPSRPT3A",268,0)
 ;
"RTN","BPSRPT3A",269,0)
DCSEL(FIELD,FILE,BPSARRAY,DEFAULT) ;
"RTN","BPSRPT3A",270,0)
 ; Provides selection of one or many for Drug Classes.
"RTN","BPSRPT3A",271,0)
 N BPSARR,DIC,DTOUT,DUOUT,QT,Y,X
"RTN","BPSRPT3A",272,0)
 ;
"RTN","BPSRPT3A",273,0)
 S DIC=FILE,DIC(0)="QEZAM",DIC("A")="Select "_FIELD_": "
"RTN","BPSRPT3A",274,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","BPSRPT3A",275,0)
 ;
"RTN","BPSRPT3A",276,0)
 F  D ^DIC Q:X=""  D  Q:$G(QT)
"RTN","BPSRPT3A",277,0)
 . ;
"RTN","BPSRPT3A",278,0)
 . ; Check for "^" or timeout, if found set BPSARRAY="^" and quit.
"RTN","BPSRPT3A",279,0)
 . I $D(DTOUT)!$D(DUOUT) K BPSARRAY S BPSARRAY="^",QT=1 Q
"RTN","BPSRPT3A",280,0)
 . ;
"RTN","BPSRPT3A",281,0)
 . ; If selection already exists in BPSARRAY, ask user if they
"RTN","BPSRPT3A",282,0)
 . ; want to Delete the entry
"RTN","BPSRPT3A",283,0)
 . I $D(BPSARRAY(+Y)) D  Q
"RTN","BPSRPT3A",284,0)
 . . N P
"RTN","BPSRPT3A",285,0)
 . . S P=Y ;Save Original Value
"RTN","BPSRPT3A",286,0)
 . . S DIR(0)="S^Y:YES;N:NO"
"RTN","BPSRPT3A",287,0)
 . . S DIR("A")="Delete "_$$GET1^DIQ(50.605,+P,1)_" "_$$GET1^DIQ(50.605,+P,.01)_" from your list?"
"RTN","BPSRPT3A",288,0)
 . . S DIR("B")="NO"
"RTN","BPSRPT3A",289,0)
 . . D ^DIR
"RTN","BPSRPT3A",290,0)
 . . I Y="Y" K BPSARRAY(+P),BPSARRAY("B",$P(P,U,2),+P)
"RTN","BPSRPT3A",291,0)
 . . ; Display list of current selections
"RTN","BPSRPT3A",292,0)
 . . I $D(BPSARRAY) D
"RTN","BPSRPT3A",293,0)
 . . . N X
"RTN","BPSRPT3A",294,0)
 . . . W !,?2,"Selected:"
"RTN","BPSRPT3A",295,0)
 . . . S X="" F  S X=$O(BPSARRAY(X)) Q:(X="")!(X="B")  W ?12,$$GET1^DIQ(50.605,X,1)," ",$$GET1^DIQ(50.605,X,.01),!
"RTN","BPSRPT3A",296,0)
 . E  D
"RTN","BPSRPT3A",297,0)
 . . ;Define new entries in BPSCCR array
"RTN","BPSRPT3A",298,0)
 . . S BPSARRAY(+Y)=$P(Y,U,2)
"RTN","BPSRPT3A",299,0)
 . . S BPSARRAY("B",$P(Y,U,2),+Y)=""
"RTN","BPSRPT3A",300,0)
 . ;
"RTN","BPSRPT3A",301,0)
 . ;Display a list of current selections
"RTN","BPSRPT3A",302,0)
 . N X
"RTN","BPSRPT3A",303,0)
 . W !,?2,"Selected:"
"RTN","BPSRPT3A",304,0)
 . S X="" F  S X=$O(BPSARRAY(X)) Q:(X="")!(X="B")  W ?12,$$GET1^DIQ(50.605,X,1)," ",$$GET1^DIQ(50.605,X,.01),!
"RTN","BPSRPT3A",305,0)
 . K DIC("B")
"RTN","BPSRPT3A",306,0)
 ;
"RTN","BPSRPT3A",307,0)
 ; If nothing was selected set BPSARRAY=0
"RTN","BPSRPT3A",308,0)
 I '$D(BPSARRAY) S BPSARRAY=0
"RTN","BPSRPT3A",309,0)
 Q
"RTN","BPSRPT3A",310,0)
 ;
"RTN","BPSRPT4")
0^9^B209178587
"RTN","BPSRPT4",1,0)
BPSRPT4 ;BHAM ISC/BEE - ECME REPORTS (CONT) ;14-FEB-05
"RTN","BPSRPT4",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,8,10,11,19,23,24**;JUN 2004;Build 43
"RTN","BPSRPT4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRPT4",4,0)
 ;
"RTN","BPSRPT4",5,0)
 Q
"RTN","BPSRPT4",6,0)
 ;
"RTN","BPSRPT4",7,0)
 ; Include Rxs - (R)ELEASED or (N)OT RELEASED or (A)LL
"RTN","BPSRPT4",8,0)
 ;
"RTN","BPSRPT4",9,0)
 ;    Input Variable -> DFLT = 3 NOT RELEASED
"RTN","BPSRPT4",10,0)
 ;                             2 RELEASED
"RTN","BPSRPT4",11,0)
 ;                             1 ALL
"RTN","BPSRPT4",12,0)
 ;                          
"RTN","BPSRPT4",13,0)
 ;    Return Value ->   3 = NOT RELEASED
"RTN","BPSRPT4",14,0)
 ;                      2 = RELEASED
"RTN","BPSRPT4",15,0)
 ;                      1 = ALL
"RTN","BPSRPT4",16,0)
 ;                      ^ = Exit
"RTN","BPSRPT4",17,0)
 ;
"RTN","BPSRPT4",18,0)
SELRLNRL(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT4",19,0)
 S DFLT=$S($G(DFLT)=1:"ALL",$G(DFLT)=3:"NOT RELEASED",1:"RELEASED")
"RTN","BPSRPT4",20,0)
 S DIR(0)="S^R:RELEASED;N:NOT RELEASED;A:ALL"
"RTN","BPSRPT4",21,0)
 S DIR("A")="Include Rxs - (R)ELEASED or (N)OT RELEASED or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT4",22,0)
 D ^DIR
"RTN","BPSRPT4",23,0)
 ;
"RTN","BPSRPT4",24,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSRPT4",25,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S Y="^"
"RTN","BPSRPT4",26,0)
 ;
"RTN","BPSRPT4",27,0)
 S Y=$S(Y="A":1,Y="R":2,Y="N":3,1:Y)
"RTN","BPSRPT4",28,0)
 ;
"RTN","BPSRPT4",29,0)
 Q Y
"RTN","BPSRPT4",30,0)
 ;
"RTN","BPSRPT4",31,0)
SELRC(DFLT) ;
"RTN","BPSRPT4",32,0)
 ;
"RTN","BPSRPT4",33,0)
 ; Display (S)pecific Reject Codes or (A)ll
"RTN","BPSRPT4",34,0)
 ; 
"RTN","BPSRPT4",35,0)
 ;    Input Variable -> DFLT = ALL
"RTN","BPSRPT4",36,0)
 ;                          
"RTN","BPSRPT4",37,0)
 ;     Return Value ->   1 = Reject Codes
"RTN","BPSRPT4",38,0)
 ;                       0 = ALL
"RTN","BPSRPT4",39,0)
 ;                       ^ = Exit
"RTN","BPSRPT4",40,0)
 ;                       
"RTN","BPSRPT4",41,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT4",42,0)
 ;
"RTN","BPSRPT4",43,0)
 ;Select to include (S)pecific Reject Codes or (A)ll Reject Codes
"RTN","BPSRPT4",44,0)
 ;
"RTN","BPSRPT4",45,0)
 S DIR(0)="S^S:Specific Reject Code;A:ALL"
"RTN","BPSRPT4",46,0)
 S DIR("A")="Include (S)pecific Reject Code or (A)LL"
"RTN","BPSRPT4",47,0)
 S DIR("B")="A"
"RTN","BPSRPT4",48,0)
 S DIR("L",1)="Select one of the following:"
"RTN","BPSRPT4",49,0)
 S DIR("L",2)=""
"RTN","BPSRPT4",50,0)
 S DIR("L",3)="     S         Specific Reject Code"
"RTN","BPSRPT4",51,0)
 S DIR("L",4)="     A         ALL"
"RTN","BPSRPT4",52,0)
 D ^DIR
"RTN","BPSRPT4",53,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT4",54,0)
 S Y=$S(Y="A":0,Y="S":1,1:Y)
"RTN","BPSRPT4",55,0)
 Q Y
"RTN","BPSRPT4",56,0)
 ;
"RTN","BPSRPT4",57,0)
SELREJCD() ;
"RTN","BPSRPT4",58,0)
 ; Allow user to select a single or multiple REJECT CODEs.
"RTN","BPSRPT4",59,0)
 ;
"RTN","BPSRPT4",60,0)
 ; If the users selected one or more REJECT CODEs, the selection will be stored
"RTN","BPSRPT4",61,0)
 ; in BPARR("RC")separated by a comma. e.g. BPARR("RC")= ien1 , ien2
"RTN","BPSRPT4",62,0)
 ;
"RTN","BPSRPT4",63,0)
BPSREJCD ;
"RTN","BPSRPT4",64,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT4",65,0)
 N BPARR,BPSARRAY,BPSIEN
"RTN","BPSRPT4",66,0)
 ;
"RTN","BPSRPT4",67,0)
 S BPARR("RC")=""
"RTN","BPSRPT4",68,0)
 ;
"RTN","BPSRPT4",69,0)
 ; This tag prompts user to 'Select Reject Code' and validates it against file #9002313.93.
"RTN","BPSRPT4",70,0)
 D RCSEL(.BPSARRAY)
"RTN","BPSRPT4",71,0)
 ;
"RTN","BPSRPT4",72,0)
 ; If the user entered "^" quit, no longer prompting the user to 'Select Reject Code'
"RTN","BPSRPT4",73,0)
 I $G(BPSARRAY)="^" Q "^"
"RTN","BPSRPT4",74,0)
 ;
"RTN","BPSRPT4",75,0)
 ; If no Reject Code was selected, return the user to 'Include (S)pecific Reject Code or (A)LL'
"RTN","BPSRPT4",76,0)
 I $G(BPSARRAY)=0 Q 0
"RTN","BPSRPT4",77,0)
 ;
"RTN","BPSRPT4",78,0)
 M BPARR("RC")=BPSARRAY
"RTN","BPSRPT4",79,0)
 ;
"RTN","BPSRPT4",80,0)
 ; Creates a string of all the Reject Code ien's selected separated by a comma.
"RTN","BPSRPT4",81,0)
 S BPSIEN=""
"RTN","BPSRPT4",82,0)
 F  S BPSIEN=$O(BPARR("RC",BPSIEN)) Q:BPSIEN=""  I BPSIEN'="B" D
"RTN","BPSRPT4",83,0)
 . I BPARR("RC")'="" S BPARR("RC")=BPARR("RC")_","
"RTN","BPSRPT4",84,0)
 . S BPARR("RC")=BPARR("RC")_BPSIEN
"RTN","BPSRPT4",85,0)
 . Q
"RTN","BPSRPT4",86,0)
 ;
"RTN","BPSRPT4",87,0)
 Q BPARR("RC")
"RTN","BPSRPT4",88,0)
 ;
"RTN","BPSRPT4",89,0)
 ; Include Auto(R)eversed or (A)LL
"RTN","BPSRPT4",90,0)
 ; 
"RTN","BPSRPT4",91,0)
 ;    Input Variable -> DFLT = 1 AutoReversed
"RTN","BPSRPT4",92,0)
 ;                             0 ALL
"RTN","BPSRPT4",93,0)
 ;                          
"RTN","BPSRPT4",94,0)
 ;    Return Value ->   1 = AutoReversed
"RTN","BPSRPT4",95,0)
 ;                      0 = ALL
"RTN","BPSRPT4",96,0)
 ;                      ^ = Exit
"RTN","BPSRPT4",97,0)
 ;
"RTN","BPSRPT4",98,0)
SELAUREV(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT4",99,0)
 ;
"RTN","BPSRPT4",100,0)
 S DFLT=$S($G(DFLT)=1:"AutoReversed",1:"ALL")
"RTN","BPSRPT4",101,0)
 S DIR(0)="S^R:AutoReversed;A:ALL"
"RTN","BPSRPT4",102,0)
 S DIR("A")="Include Auto(R)eversed or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT4",103,0)
 D ^DIR
"RTN","BPSRPT4",104,0)
 ;
"RTN","BPSRPT4",105,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSRPT4",106,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S Y="^"
"RTN","BPSRPT4",107,0)
 ;
"RTN","BPSRPT4",108,0)
 S Y=$S(Y="A":0,Y="R":1,1:Y)
"RTN","BPSRPT4",109,0)
 ;
"RTN","BPSRPT4",110,0)
 Q Y
"RTN","BPSRPT4",111,0)
 ;
"RTN","BPSRPT4",112,0)
 ; Include A(C)cepted or (R)ejected or (A)LL
"RTN","BPSRPT4",113,0)
 ; 
"RTN","BPSRPT4",114,0)
 ;    Input Variable -> DFLT = 2 Accepted
"RTN","BPSRPT4",115,0)
 ;                             1 Rejected
"RTN","BPSRPT4",116,0)
 ;                             0 ALL
"RTN","BPSRPT4",117,0)
 ;                          
"RTN","BPSRPT4",118,0)
 ;    Return Value ->   2 = Accepted
"RTN","BPSRPT4",119,0)
 ;                      1 = Rejected
"RTN","BPSRPT4",120,0)
 ;                      0 = ALL
"RTN","BPSRPT4",121,0)
 ;                      ^ = Exit
"RTN","BPSRPT4",122,0)
 ;
"RTN","BPSRPT4",123,0)
SELACREJ(DFLT) N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT4",124,0)
 ;
"RTN","BPSRPT4",125,0)
 S DFLT=$S($G(DFLT)=2:"Accepted",$G(DFLT)=1:"Rejected",1:"ALL")
"RTN","BPSRPT4",126,0)
 S DIR(0)="S^C:Accepted;R:Rejected;A:ALL"
"RTN","BPSRPT4",127,0)
 S DIR("A")="Include A(C)cepted or (R)ejected or (A)LL",DIR("B")=DFLT
"RTN","BPSRPT4",128,0)
 D ^DIR
"RTN","BPSRPT4",129,0)
 ;
"RTN","BPSRPT4",130,0)
 ;Check for "^", timeout, or blank entry
"RTN","BPSRPT4",131,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S Y="^"
"RTN","BPSRPT4",132,0)
 ;
"RTN","BPSRPT4",133,0)
 S Y=$S(Y="C":2,Y="R":1,Y="A":0,1:Y)
"RTN","BPSRPT4",134,0)
 ;
"RTN","BPSRPT4",135,0)
 Q Y
"RTN","BPSRPT4",136,0)
 ;
"RTN","BPSRPT4",137,0)
SELCCR(DFLT) ;
"RTN","BPSRPT4",138,0)
 ;
"RTN","BPSRPT4",139,0)
 ; Display (S)pecific Close Claim Reason or (A)ll
"RTN","BPSRPT4",140,0)
 ; 
"RTN","BPSRPT4",141,0)
 ;    Input Variable -> DFLT = ALL
"RTN","BPSRPT4",142,0)
 ;                          
"RTN","BPSRPT4",143,0)
 ;     Return Value ->   1 = Close Claim Reasons
"RTN","BPSRPT4",144,0)
 ;                       0 = ALL
"RTN","BPSRPT4",145,0)
 ;                       ^ = Exit
"RTN","BPSRPT4",146,0)
 ;                       
"RTN","BPSRPT4",147,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT4",148,0)
 ;
"RTN","BPSRPT4",149,0)
 ;Select to include (S)pecific Close Claim Reason or (A)ll Close Claim Reasons
"RTN","BPSRPT4",150,0)
 ;
"RTN","BPSRPT4",151,0)
 S DIR(0)="S^S:Specific Close Claim Reason;A:ALL"
"RTN","BPSRPT4",152,0)
 S DIR("A")="Include (S)pecific Close Claim Reason or (A)LL"
"RTN","BPSRPT4",153,0)
 S DIR("B")="A"
"RTN","BPSRPT4",154,0)
 D ^DIR
"RTN","BPSRPT4",155,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","BPSRPT4",156,0)
 S Y=$S(Y="A":0,Y="S":1,1:Y)
"RTN","BPSRPT4",157,0)
 Q Y
"RTN","BPSRPT4",158,0)
 ;
"RTN","BPSRPT4",159,0)
SELCCRSN(DFLT) ;
"RTN","BPSRPT4",160,0)
 ;
"RTN","BPSRPT4",161,0)
 ; Allow user to select a single or multiple CLOSE CLAIM REASON(s).
"RTN","BPSRPT4",162,0)
 ;
"RTN","BPSRPT4",163,0)
 ; If the users selected one or more CLOSE CLAIM REASONs, the selection will be stored
"RTN","BPSRPT4",164,0)
 ; in BPARR("CCR")separated by a comma. e.g. BPARR("CCR")= ien1 , ien2
"RTN","BPSRPT4",165,0)
 ;   NOTE: the ien's are pointers to CLAIMS TRACKING NON-BILLABLE REASONS (#356.8)
"RTN","BPSRPT4",166,0)
 ;
"RTN","BPSRPT4",167,0)
BPSCCR ;
"RTN","BPSRPT4",168,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","BPSRPT4",169,0)
 N BPARR,BPSARRAY,BPSIEN
"RTN","BPSRPT4",170,0)
 ;
"RTN","BPSRPT4",171,0)
 S BPARR("CCR")=""
"RTN","BPSRPT4",172,0)
 ;
"RTN","BPSRPT4",173,0)
 ; The SEL tag prompts user to 'Select Close Claim Reason' and validates the selection
"RTN","BPSRPT4",174,0)
 ;  against file #356.8 - CLAIMS TRACKING NON-BILLABLE REASONS.
"RTN","BPSRPT4",175,0)
 D CCRSEL("Close Claim Reason","^IBE(356.8,",.BPSARRAY)
"RTN","BPSRPT4",176,0)
 ;
"RTN","BPSRPT4",177,0)
 ; If the user entered "^" quit, no longer prompting the user to 'Select Close Claim Reason'
"RTN","BPSRPT4",178,0)
 I $G(BPSARRAY)="^" Q "^"
"RTN","BPSRPT4",179,0)
 ;
"RTN","BPSRPT4",180,0)
 ; If no Close Claim Reason was selected, return the user to 'Include (S)pecific Close Claim Reason or (A)LL'
"RTN","BPSRPT4",181,0)
 I $G(BPSARRAY)=0 Q 0
"RTN","BPSRPT4",182,0)
 ;
"RTN","BPSRPT4",183,0)
 M BPARR("CCR")=BPSARRAY
"RTN","BPSRPT4",184,0)
 ;
"RTN","BPSRPT4",185,0)
 ; Creates a string of all the Close Claim Reasons ien's selected separated by a comma.
"RTN","BPSRPT4",186,0)
 S BPSIEN=""
"RTN","BPSRPT4",187,0)
 F  S BPSIEN=$O(BPARR("CCR",BPSIEN)) Q:BPSIEN=""  I BPSIEN'="B" D
"RTN","BPSRPT4",188,0)
 . I BPARR("CCR")'="" S BPARR("CCR")=BPARR("CCR")_","
"RTN","BPSRPT4",189,0)
 . S BPARR("CCR")=BPARR("CCR")_BPSIEN
"RTN","BPSRPT4",190,0)
 . Q
"RTN","BPSRPT4",191,0)
 ;
"RTN","BPSRPT4",192,0)
 Q BPARR("CCR")
"RTN","BPSRPT4",193,0)
 ;
"RTN","BPSRPT4",194,0)
RCSEL(BPSARRAY) ;
"RTN","BPSRPT4",195,0)
 ; Prompts user to select one or more Reject Codes
"RTN","BPSRPT4",196,0)
 ;
"RTN","BPSRPT4",197,0)
 N DIC,DTOUT,DUOUT,QT,Y,X
"RTN","BPSRPT4",198,0)
 N BPSCODE,BPSEXP
"RTN","BPSRPT4",199,0)
 ;
"RTN","BPSRPT4",200,0)
 S DIC="^BPSF(9002313.93,",DIC(0)="AEMNQ"
"RTN","BPSRPT4",201,0)
 S DIC("A")="Select Reject Code: "
"RTN","BPSRPT4",202,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","BPSRPT4",203,0)
 ;
"RTN","BPSRPT4",204,0)
 F  D ^DIC Q:X=""  D  Q:$G(QT)
"RTN","BPSRPT4",205,0)
 . ; Check for "^" or timeout, if found set BPSARRAY="^" and quit.
"RTN","BPSRPT4",206,0)
 . I $D(DTOUT)!$D(DUOUT) K BPSARRAY S BPSARRAY="^",QT=1 Q
"RTN","BPSRPT4",207,0)
 . ;
"RTN","BPSRPT4",208,0)
 . ; If selection already exists in BPSARRAY, ask user if they
"RTN","BPSRPT4",209,0)
 . ; want to Delete the entry.
"RTN","BPSRPT4",210,0)
 . I $D(BPSARRAY(+Y)) D  Q
"RTN","BPSRPT4",211,0)
 . . N P
"RTN","BPSRPT4",212,0)
 . . S P=Y ;Save Original Value
"RTN","BPSRPT4",213,0)
 . . S DIR(0)="S^Y:YES;N:NO"
"RTN","BPSRPT4",214,0)
 . . S DIR("A")="Delete "_$P(BPSARRAY("B",+P),U,1)_" "_$P(BPSARRAY("B",+P),U,2)_" from your list?"
"RTN","BPSRPT4",215,0)
 . . S DIR("B")="NO"
"RTN","BPSRPT4",216,0)
 . . D ^DIR
"RTN","BPSRPT4",217,0)
 . . I Y="Y" K BPSARRAY(+P),BPSARRAY("B",+P)
"RTN","BPSRPT4",218,0)
 . . ; Display a list of current selections
"RTN","BPSRPT4",219,0)
 . . I $D(BPSARRAY) D
"RTN","BPSRPT4",220,0)
 . . . N X
"RTN","BPSRPT4",221,0)
 . . . W !,?2,"Selected:"
"RTN","BPSRPT4",222,0)
 . . . S X="" F  S X=$O(BPSARRAY("B",X)) Q:X=""  D
"RTN","BPSRPT4",223,0)
 . . . . W ?12,$P(BPSARRAY("B",X),U)," ",$P(BPSARRAY("B",X),U,2),!
"RTN","BPSRPT4",224,0)
 . E  D
"RTN","BPSRPT4",225,0)
 . . ;Define new entries in BPSARRAY
"RTN","BPSRPT4",226,0)
 . . ; Get the Reject Code and Explanation for the selected Reject Code
"RTN","BPSRPT4",227,0)
 . . S BPSCODE=$$GET1^DIQ(9002313.93,+Y,.01)
"RTN","BPSRPT4",228,0)
 . . S BPSEXP=$$GET1^DIQ(9002313.93,+Y,.02)
"RTN","BPSRPT4",229,0)
 . . S BPSARRAY(+Y)=Y
"RTN","BPSRPT4",230,0)
 . . S BPSARRAY("B",+Y)=BPSCODE_"^"_BPSEXP
"RTN","BPSRPT4",231,0)
 . ;
"RTN","BPSRPT4",232,0)
 . ; Display a list of current selections
"RTN","BPSRPT4",233,0)
 . N X
"RTN","BPSRPT4",234,0)
 . W !,?2,"Selected:"
"RTN","BPSRPT4",235,0)
 . S X="" F  S X=$O(BPSARRAY("B",X)) Q:X=""  W ?12,$P(BPSARRAY("B",X),U,1)," ",$P(BPSARRAY("B",X),U,2),!
"RTN","BPSRPT4",236,0)
 ;
"RTN","BPSRPT4",237,0)
 ; If nothing was selected set BPSARRAY=0
"RTN","BPSRPT4",238,0)
 I '$D(BPSARRAY) S BPSARRAY=0
"RTN","BPSRPT4",239,0)
 Q
"RTN","BPSRPT4",240,0)
 ;
"RTN","BPSRPT4",241,0)
CCRSEL(FIELD,FILE,BPSARRAY,DEFAULT) ;
"RTN","BPSRPT4",242,0)
 ; Provides selection of one or many Close Claim Reasons.
"RTN","BPSRPT4",243,0)
 ;
"RTN","BPSRPT4",244,0)
 N BPSARR,DIC,DTOUT,DUOUT,QT,Y,X
"RTN","BPSRPT4",245,0)
 ;
"RTN","BPSRPT4",246,0)
 S DIC=FILE,DIC(0)="QEZAM",DIC("A")="Select "_FIELD_": "
"RTN","BPSRPT4",247,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","BPSRPT4",248,0)
 ;
"RTN","BPSRPT4",249,0)
 F  D ^DIC Q:X=""  D  Q:$G(QT)
"RTN","BPSRPT4",250,0)
 . ; Check for "^" or timeout, if found set BPSARRAY="^" and quit.
"RTN","BPSRPT4",251,0)
 . I $D(DTOUT)!$D(DUOUT) K BPSARRAY S BPSARRAY="^",QT=1 Q
"RTN","BPSRPT4",252,0)
 . ;
"RTN","BPSRPT4",253,0)
 . ; If selection already exists in BPSARRAY, ask user if they
"RTN","BPSRPT4",254,0)
 . ; want to Delete the entry
"RTN","BPSRPT4",255,0)
 . I $D(BPSARRAY(+Y)) D  Q
"RTN","BPSRPT4",256,0)
 . . N P
"RTN","BPSRPT4",257,0)
 . . S P=Y ;Save Original Value
"RTN","BPSRPT4",258,0)
 . . S DIR(0)="S^Y:YES;N:NO"
"RTN","BPSRPT4",259,0)
 . . S DIR("A")="Delete "_$P(P,U,2)_" from your list?"
"RTN","BPSRPT4",260,0)
 . . S DIR("B")="NO"
"RTN","BPSRPT4",261,0)
 . . D ^DIR
"RTN","BPSRPT4",262,0)
 . . I Y="Y" K BPSARRAY(+P),BPSARRAY("B",$P(P,U,2),+P)
"RTN","BPSRPT4",263,0)
 . . ; Display a list of current selections
"RTN","BPSRPT4",264,0)
 . . I $D(BPSARRAY) D
"RTN","BPSRPT4",265,0)
 . . . N X
"RTN","BPSRPT4",266,0)
 . . . W !,?2,"Selected:"
"RTN","BPSRPT4",267,0)
 . . . S X="" F  S X=$O(BPSARRAY(X)) Q:(X="")!(X="B")  W ?12,BPSARRAY(X),!
"RTN","BPSRPT4",268,0)
 . E  D
"RTN","BPSRPT4",269,0)
 . . ;Define new entries in BPSCCR array
"RTN","BPSRPT4",270,0)
 . . S BPSARRAY(+Y)=$P(Y,U,2)
"RTN","BPSRPT4",271,0)
 . . S BPSARRAY("B",$P(Y,U,2),+Y)=""
"RTN","BPSRPT4",272,0)
 . ;
"RTN","BPSRPT4",273,0)
 . ;Display a list of current selections
"RTN","BPSRPT4",274,0)
 . N X
"RTN","BPSRPT4",275,0)
 . W !,?2,"Selected:"
"RTN","BPSRPT4",276,0)
 . S X="" F  S X=$O(BPSARRAY(X)) Q:(X="")!(X="B")  W ?12,BPSARRAY(X),!
"RTN","BPSRPT4",277,0)
 . K DIC("B")
"RTN","BPSRPT4",278,0)
 ;
"RTN","BPSRPT4",279,0)
 ; If nothing was selected set BPSARRAY=0
"RTN","BPSRPT4",280,0)
 I '$D(BPSARRAY) S BPSARRAY=0
"RTN","BPSRPT4",281,0)
 Q
"RTN","BPSRPT4",282,0)
 ;
"RTN","BPSRPT4",283,0)
 ;Pull Selected BPS Pharmacies for Display
"RTN","BPSRPT4",284,0)
 ;
"RTN","BPSRPT4",285,0)
 ;  Input Variables: 
"RTN","BPSRPT4",286,0)
 ;  BPPHARM/BPPHARM(ptr) - Set to 0 for all pharmacies, if set to 1 array of internal
"RTN","BPSRPT4",287,0)
 ;                         pointers of selected pharmacies       
"RTN","BPSRPT4",288,0)
 ;                       - BPLEN = The length of the display field
"RTN","BPSRPT4",289,0)
 ;  Returned value -> List of selected BPS Pharmacies (possibly cut short)                 
"RTN","BPSRPT4",290,0)
 ; 
"RTN","BPSRPT4",291,0)
GETDIVS(BPLEN,BPPHARM) N BPDIV,BPSTR,BPQUIT
"RTN","BPSRPT4",292,0)
 I $G(BPPHARM)=0 S BPSTR="ALL"
"RTN","BPSRPT4",293,0)
 E  D
"RTN","BPSRPT4",294,0)
 .S BPDIV="",BPQUIT=0,BPSTR=""
"RTN","BPSRPT4",295,0)
 .F  S BPDIV=$O(BPPHARM(BPDIV)) Q:+BPDIV=0  D  Q:BPQUIT=1
"RTN","BPSRPT4",296,0)
 .. I $L(BPSTR_$$DIVNAME^BPSSCRDS(BPDIV))>(BPLEN-4) D  S BPQUIT=1 Q
"RTN","BPSRPT4",297,0)
 ... S BPSTR=$$LJ^BPSSCR02(BPSTR_",...",BPLEN)
"RTN","BPSRPT4",298,0)
 .. S BPSTR=BPSTR_$S(BPSTR]"":", ",1:"")_$$DIVNAME^BPSSCRDS(BPDIV)
"RTN","BPSRPT4",299,0)
 Q BPSTR
"RTN","BPSRPT4",300,0)
 ;
"RTN","BPSRPT4",301,0)
 ;Get the Reject Code
"RTN","BPSRPT4",302,0)
 ;
"RTN","BPSRPT4",303,0)
 ; Input variable -> 0 for All Reject Codes or
"RTN","BPSRPT4",304,0)
 ;                   lookup to BPS NCPDP REJECT CODES (#9002313.93)
"RTN","BPSRPT4",305,0)
 ; Returned value -> ALL or the selected Reject Code
"RTN","BPSRPT4",306,0)
 ; 
"RTN","BPSRPT4",307,0)
GETREJ(REJ) ;
"RTN","BPSRPT4",308,0)
 I REJ="0" S REJ="ALL"
"RTN","BPSRPT4",309,0)
 E  S REJ=$P($G(^BPSF(9002313.93,+REJ,0)),U,2)
"RTN","BPSRPT4",310,0)
 Q REJ
"RTN","BPSRPT4",311,0)
 ;
"RTN","BPSRPT4",312,0)
 ;Print Header 2 Line 1
"RTN","BPSRPT4",313,0)
 ;
"RTN","BPSRPT4",314,0)
 ; Input variable: BPRTYPE -> Report Type (1-7)
"RTN","BPSRPT4",315,0)
 ;
"RTN","BPSRPT4",316,0)
HEADLN1(BPRTYPE) ;
"RTN","BPSRPT4",317,0)
 I (",1,2,3,4,5,7,8,9,")[BPRTYPE W !,"PATIENT NAME",?27,"Pt.ID"
"RTN","BPSRPT4",318,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT4",319,0)
 . W ?35,"ELIG"
"RTN","BPSRPT4",320,0)
 . W ?40,"RX#"
"RTN","BPSRPT4",321,0)
 . W ?52,"REF/ECME#"
"RTN","BPSRPT4",322,0)
 . W ?73,"DATE"
"RTN","BPSRPT4",323,0)
 . W ?83,$J("$BILLED",10)
"RTN","BPSRPT4",324,0)
 . W ?102,$J("$INS RESPONSE",13)
"RTN","BPSRPT4",325,0)
 . W ?122,$J("$COLLECT",10)
"RTN","BPSRPT4",326,0)
 ;
"RTN","BPSRPT4",327,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT4",328,0)
 . W ?35,"ELIG"
"RTN","BPSRPT4",329,0)
 . W ?40,"RX#"
"RTN","BPSRPT4",330,0)
 . W ?52,"REF/ECME#"
"RTN","BPSRPT4",331,0)
 . W ?73,"DATE"
"RTN","BPSRPT4",332,0)
 . W ?83,"RELEASED ON"
"RTN","BPSRPT4",333,0)
 . W ?96,"RX INFO"
"RTN","BPSRPT4",334,0)
 . W ?114,"COB"
"RTN","BPSRPT4",335,0)
 . W ?121,"OPEN/CLOSED"
"RTN","BPSRPT4",336,0)
 ;
"RTN","BPSRPT4",337,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT4",338,0)
 . W ?35,"RX#"
"RTN","BPSRPT4",339,0)
 . W ?47,"REF/ECME#"
"RTN","BPSRPT4",340,0)
 . W ?68,"DATE"
"RTN","BPSRPT4",341,0)
 . W ?100,$J("$BILLED",10)
"RTN","BPSRPT4",342,0)
 . W ?119,$J("$INS RESPONSE",13)
"RTN","BPSRPT4",343,0)
 ;
"RTN","BPSRPT4",344,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT4",345,0)
 . W ?35,"RX#"
"RTN","BPSRPT4",346,0)
 . W ?47,"REF/ECME#"
"RTN","BPSRPT4",347,0)
 . W ?65,"COMPLETED"
"RTN","BPSRPT4",348,0)
 . W ?83,"TRANS TYPE"
"RTN","BPSRPT4",349,0)
 . W ?100,"PAYER RESPONSE"
"RTN","BPSRPT4",350,0)
 . W ?125,"COB"
"RTN","BPSRPT4",351,0)
 ;
"RTN","BPSRPT4",352,0)
 I BPRTYPE=6 D  Q
"RTN","BPSRPT4",353,0)
 . W !,?33,$J("AMOUNT",17)
"RTN","BPSRPT4",354,0)
 . W ?51,$J("RETURNED",17)
"RTN","BPSRPT4",355,0)
 . W ?69,$J("RETURNED",17)
"RTN","BPSRPT4",356,0)
 . W ?87,$J("AMOUNT",17)
"RTN","BPSRPT4",357,0)
 ;
"RTN","BPSRPT4",358,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT4",359,0)
 . W ?35,"ELIG"
"RTN","BPSRPT4",360,0)
 . W ?40,"RX#"
"RTN","BPSRPT4",361,0)
 . W ?52,"REF/ECME#"
"RTN","BPSRPT4",362,0)
 . W ?70,"RX INFO"
"RTN","BPSRPT4",363,0)
 . W ?89,"DRUG"
"RTN","BPSRPT4",364,0)
 . W ?118,"NDC"
"RTN","BPSRPT4",365,0)
 ;
"RTN","BPSRPT4",366,0)
 I (BPRTYPE=8) D  Q
"RTN","BPSRPT4",367,0)
 . W ?35,"RX#"
"RTN","BPSRPT4",368,0)
 . W ?47,"REF/ECME#"
"RTN","BPSRPT4",369,0)
 . W ?68,"DATE"
"RTN","BPSRPT4",370,0)
 . W ?78,$J("$BILLED",10)
"RTN","BPSRPT4",371,0)
 . W ?97,$J("$INS RESPONSE",13)
"RTN","BPSRPT4",372,0)
 . W ?122,$J("$COLLECT",10)
"RTN","BPSRPT4",373,0)
 ;
"RTN","BPSRPT4",374,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT4",375,0)
 . W ?35,"ELIG"
"RTN","BPSRPT4",376,0)
 . W ?40,"RX#"
"RTN","BPSRPT4",377,0)
 . W ?52,"REF"
"RTN","BPSRPT4",378,0)
 . W ?64,"DATE"
"RTN","BPSRPT4",379,0)
 . W ?84,$J("$DRUG COST",10)
"RTN","BPSRPT4",380,0)
 Q
"RTN","BPSRPT4",381,0)
 ;
"RTN","BPSRPT4",382,0)
 ;Print Header 2 Line 2
"RTN","BPSRPT4",383,0)
 ;
"RTN","BPSRPT4",384,0)
 ; Input variable: BPRTYPE -> Report Type (1-9)
"RTN","BPSRPT4",385,0)
 ; 
"RTN","BPSRPT4",386,0)
HEADLN2(BPRTYPE) ;
"RTN","BPSRPT4",387,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT4",388,0)
 . W !,?4,"DRUG"
"RTN","BPSRPT4",389,0)
 . W ?36,"NDC"
"RTN","BPSRPT4",390,0)
 . I BPRTYPE=1 W ?47,"RELEASED ON"
"RTN","BPSRPT4",391,0)
 . W ?68,"RX INFO"
"RTN","BPSRPT4",392,0)
 . I BPRTYPE=4 W ?92,"COB"
"RTN","BPSRPT4",393,0)
 . I BPRTYPE=1 W ?120,"BILL#",?129,"COB"
"RTN","BPSRPT4",394,0)
 ;
"RTN","BPSRPT4",395,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT4",396,0)
 . W !,?3,"CARDHOLD.ID"
"RTN","BPSRPT4",397,0)
 . W ?26,"GROUP ID"
"RTN","BPSRPT4",398,0)
 . W ?41,$J("$BILLED",10)
"RTN","BPSRPT4",399,0)
 . W ?54,"QTY"
"RTN","BPSRPT4",400,0)
 . W ?61,"NDC#"
"RTN","BPSRPT4",401,0)
 . W ?82,"PRESCRIBER ID"
"RTN","BPSRPT4",402,0)
 . W ?98,"NAME"
"RTN","BPSRPT4",403,0)
 ;
"RTN","BPSRPT4",404,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT4",405,0)
 . W !,?4,"DRUG"
"RTN","BPSRPT4",406,0)
 . W ?43,"NDC"
"RTN","BPSRPT4",407,0)
 . W ?68,"RX INFO"
"RTN","BPSRPT4",408,0)
 . W ?88,"COB"
"RTN","BPSRPT4",409,0)
 . W ?96,"ELIG"
"RTN","BPSRPT4",410,0)
 ;
"RTN","BPSRPT4",411,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT4",412,0)
 . W !,?4,"DRUG"
"RTN","BPSRPT4",413,0)
 . W ?32,"NDC"
"RTN","BPSRPT4",414,0)
 . W ?47,"RX INFO"
"RTN","BPSRPT4",415,0)
 . W ?69,"INSURANCE"
"RTN","BPSRPT4",416,0)
 . W ?112,"ELAP TIME IN SECONDS"
"RTN","BPSRPT4",417,0)
 ;
"RTN","BPSRPT4",418,0)
 I BPRTYPE=6 D  Q
"RTN","BPSRPT4",419,0)
 .W !,?1,"DATE"
"RTN","BPSRPT4",420,0)
 .W ?15,$J("#CLAIMS",17)
"RTN","BPSRPT4",421,0)
 .W ?33,$J("SUBMITTED",17)
"RTN","BPSRPT4",422,0)
 .W ?51,$J("REJECTED",17)
"RTN","BPSRPT4",423,0)
 .W ?69,$J("PAYABLE",17)
"RTN","BPSRPT4",424,0)
 .W ?87,$J("TO RECEIVE",17)
"RTN","BPSRPT4",425,0)
 .W ?115,$J("DIFFERENCE",17)
"RTN","BPSRPT4",426,0)
 ;
"RTN","BPSRPT4",427,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT4",428,0)
 . W !,?3,"CARDHOLD.ID"
"RTN","BPSRPT4",429,0)
 . W ?27,"GROUP ID"
"RTN","BPSRPT4",430,0)
 . W ?46,"CLOSE DATE/TIME"
"RTN","BPSRPT4",431,0)
 . W ?65,"CLOSED BY"
"RTN","BPSRPT4",432,0)
 . W ?93,"CLOSE REASON"
"RTN","BPSRPT4",433,0)
 . W ?126,"COB"
"RTN","BPSRPT4",434,0)
 ;
"RTN","BPSRPT4",435,0)
 I BPRTYPE=8 D  Q
"RTN","BPSRPT4",436,0)
 . W !,?2,"DRUG"
"RTN","BPSRPT4",437,0)
 . W ?38,"RX INFO"
"RTN","BPSRPT4",438,0)
 . W ?54,"INS GROUP#"
"RTN","BPSRPT4",439,0)
 . W ?72,"INS GROUP NAME"
"RTN","BPSRPT4",440,0)
 . W ?125,"BILL#"
"RTN","BPSRPT4",441,0)
 ;
"RTN","BPSRPT4",442,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT4",443,0)
 . W !,?4,"DRUG"
"RTN","BPSRPT4",444,0)
 . W ?36,"NDC"
"RTN","BPSRPT4",445,0)
 . W ?47,"RELEASED ON"
"RTN","BPSRPT4",446,0)
 . W ?62,"RX INFO"
"RTN","BPSRPT4",447,0)
 . W ?75,"NON-BILLABLE STATUS"
"RTN","BPSRPT4",448,0)
 Q
"RTN","BPSRPT4",449,0)
 ;
"RTN","BPSRPT4",450,0)
 ;Print Header 2 Line 3
"RTN","BPSRPT4",451,0)
 ;
"RTN","BPSRPT4",452,0)
 ; Input variable: BPRTYPE -> Report Type (1-7)
"RTN","BPSRPT4",453,0)
 ; 
"RTN","BPSRPT4",454,0)
HEADLN3(BPTYP) ;
"RTN","BPSRPT4",455,0)
 I BPTYP=4 D  Q
"RTN","BPSRPT4",456,0)
 . W !,?6,"RELEASED ON"
"RTN","BPSRPT4",457,0)
 . W ?22,"REVERSAL METHOD/RETURN STATUS/REASON"
"RTN","BPSRPT4",458,0)
 ;
"RTN","BPSRPT4",459,0)
 I BPTYP=8 D  Q
"RTN","BPSRPT4",460,0)
 . W !,?4,"$PROVIDER NETWORK"
"RTN","BPSRPT4",461,0)
 . W ?23,"$BRAND DRUG"
"RTN","BPSRPT4",462,0)
 . W ?38,"$NON-PREF FORM"
"RTN","BPSRPT4",463,0)
 . W ?56,"$BRAND NON-PREF FORM"
"RTN","BPSRPT4",464,0)
 . W ?81,"$COVERAGE GAP"
"RTN","BPSRPT4",465,0)
 . W ?96,"$HEALTH ASST"
"RTN","BPSRPT4",466,0)
 . W ?111,"$SPEND ACCT REMAINING"
"RTN","BPSRPT4",467,0)
 Q
"RTN","BPSRPT4",468,0)
 ;
"RTN","BPSRPT4",469,0)
SELEXCEL() ; - Returns whether to capture data for Excel report.
"RTN","BPSRPT4",470,0)
 ; Output: EXCEL = 1 - YES (capture data) / 0 - NO (DO NOT capture data)
"RTN","BPSRPT4",471,0)
 ;
"RTN","BPSRPT4",472,0)
 N EXCEL,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","BPSRPT4",473,0)
 I ",1,2,3,4,"[(","_BPRTYPE_",") D
"RTN","BPSRPT4",474,0)
 . W !!,"Data fields VA Ingredient Cost, VA Dispensing Fee, Ingredient Cost Paid,",!
"RTN","BPSRPT4",475,0)
 . W "Dispensing Fee Paid and Patient Responsibility (INS) will only be included",!
"RTN","BPSRPT4",476,0)
 . W "when the report is captured for an Excel document.  All additional data fields",!
"RTN","BPSRPT4",477,0)
 . W "may not be present for all reports."
"RTN","BPSRPT4",478,0)
 I BPRTYPE=7 D
"RTN","BPSRPT4",479,0)
 . W !!,"Data field for billed amount will only be included when the report is captured",!
"RTN","BPSRPT4",480,0)
 . W "for an Excel document. All additional data fields may not be present for all",!
"RTN","BPSRPT4",481,0)
 . W "reports."
"RTN","BPSRPT4",482,0)
 ;
"RTN","BPSRPT4",483,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("T")=DTIME W !
"RTN","BPSRPT4",484,0)
 S DIR("A")="Do you want to capture report data for an Excel document"
"RTN","BPSRPT4",485,0)
 S DIR("?")="^D HEXC^BPSRPT4"
"RTN","BPSRPT4",486,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) Q "^"
"RTN","BPSRPT4",487,0)
 K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","BPSRPT4",488,0)
 S EXCEL=0 I Y S EXCEL=1
"RTN","BPSRPT4",489,0)
 ;
"RTN","BPSRPT4",490,0)
 ;Display Excel display message
"RTN","BPSRPT4",491,0)
 I EXCEL=1 D EXMSG
"RTN","BPSRPT4",492,0)
 ;
"RTN","BPSRPT4",493,0)
 Q EXCEL
"RTN","BPSRPT4",494,0)
 ;
"RTN","BPSRPT4",495,0)
HEXC ; - 'Do you want to capture data...' prompt
"RTN","BPSRPT4",496,0)
 W !!,"      Enter:  'Y'    -  To capture detail report data to transfer"
"RTN","BPSRPT4",497,0)
 W !,"                        to an Excel document"
"RTN","BPSRPT4",498,0)
 W !,"              '<CR>' -  To skip this option"
"RTN","BPSRPT4",499,0)
 W !,"              '^'    -  To quit this option"
"RTN","BPSRPT4",500,0)
 Q
"RTN","BPSRPT4",501,0)
 ;
"RTN","BPSRPT4",502,0)
 ;Display the message about capturing to an Excel file format
"RTN","BPSRPT4",503,0)
 ; 
"RTN","BPSRPT4",504,0)
EXMSG ;
"RTN","BPSRPT4",505,0)
 I (",1,2,3,4,7,9,")'[BPRTYPE D
"RTN","BPSRPT4",506,0)
 . W !!?5,"Before continuing, please set up your terminal to capture the"
"RTN","BPSRPT4",507,0)
 . W !?5,"detail report data.  On some terminals, this can  be  done  by"
"RTN","BPSRPT4",508,0)
 . W !?5,"clicking  on the 'Tools' menu above, then click  on  'Capture"
"RTN","BPSRPT4",509,0)
 . W !?5,"Incoming  Data' to save to  Desktop.  This  report  may take a"
"RTN","BPSRPT4",510,0)
 . W !?5,"while to run."
"RTN","BPSRPT4",511,0)
 . W !!?5,"Note: To avoid undesired  wrapping of the data  saved to the"
"RTN","BPSRPT4",512,0)
 . W !?5,"      file, please enter '0;256;999' at the 'DEVICE:' prompt.",!
"RTN","BPSRPT4",513,0)
  E  D
"RTN","BPSRPT4",514,0)
 . W !!?5,"Before continuing, please set up your terminal to capture the"
"RTN","BPSRPT4",515,0)
 . W !?5,"detail report data and save the detail report data in a text file"
"RTN","BPSRPT4",516,0)
 . W !?5,"to a local drive.  This report may take a while to run."
"RTN","BPSRPT4",517,0)
 . W !!?5,"Note:  To avoid undesired wrapping of the data saved to the file,"
"RTN","BPSRPT4",518,0)
 . W !?5,"      please enter '0;256;99999' at the 'DEVICE:' prompt.",!
"RTN","BPSRPT4",519,0)
 Q
"RTN","BPSRPT5")
0^10^B178163629
"RTN","BPSRPT5",1,0)
BPSRPT5 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT5",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,5,7,8,10,11,19,23,24**;JUN 2004;Build 43
"RTN","BPSRPT5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRPT5",4,0)
 ;
"RTN","BPSRPT5",5,0)
 ;Reference to IB NCPCP NON-BILLABLE STATUS REASONS (#366.17) supported by ICR 6136
"RTN","BPSRPT5",6,0)
 ;
"RTN","BPSRPT5",7,0)
 ;Routine to Display the Reports
"RTN","BPSRPT5",8,0)
 ;
"RTN","BPSRPT5",9,0)
 ;Print Report Line 1
"RTN","BPSRPT5",10,0)
WRLINE1(BPRTYPE,BPREC,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS,BPCOLL,BPEXCEL,BPPSEQ) ;
"RTN","BPSRPT5",11,0)
 ;Excel Output
"RTN","BPSRPT5",12,0)
 I $G(BPEXCEL) D WRLINE1^BPSRPT8(BPRTYPE,.BPREC,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS,BPCOLL,BPPSEQ) Q
"RTN","BPSRPT5",13,0)
 ;Report Output
"RTN","BPSRPT5",14,0)
 W !,$$PATNAME^BPSRPT6(BPDFN)
"RTN","BPSRPT5",15,0)
 W ?27,"("_$$SSN4^BPSRPT6(BPDFN)_")"
"RTN","BPSRPT5",16,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT5",17,0)
 . N ELGCD S ELGCD=$$ELIGCODE^BPSSCR05($P(BPX,U,3))
"RTN","BPSRPT5",18,0)
 . W ?35,$S(ELGCD="V":"VET",ELGCD="T":"TRI",ELGCD="C":"CVA",1:"UNK")
"RTN","BPSRPT5",19,0)
 . W ?40,$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)
"RTN","BPSRPT5",20,0)
 . W ?52,BPREF,"/",$$ECMENUM^BPSRPT1($P(BPX,U,3))
"RTN","BPSRPT5",21,0)
 . W ?73,$$DATTIM^BPSRPT1(BPSRTDT)
"RTN","BPSRPT5",22,0)
 . W ?83,$J(BPBIL,10,2),?105,$J(BPINS,10,2),?122,$S(BPCOLL]"":$J(BPCOLL,10,2),1:"")
"RTN","BPSRPT5",23,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT5",24,0)
 . N ELGCD S ELGCD=$$ELIGCODE^BPSSCR05($P(BPX,U,3))
"RTN","BPSRPT5",25,0)
 . W ?35,$S(ELGCD="V":"VET",ELGCD="T":"TRI",ELGCD="C":"CVA",1:"UNK")
"RTN","BPSRPT5",26,0)
 . W ?40,$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)
"RTN","BPSRPT5",27,0)
 . W ?52,BPREF,"/",$$ECMENUM^BPSRPT1($P(BPX,U,3))
"RTN","BPSRPT5",28,0)
 . W ?73,$$DATTIM^BPSRPT1(BPSRTDT)
"RTN","BPSRPT5",29,0)
 . W ?83,$$DATTIM^BPSRPT1(+BPX)
"RTN","BPSRPT5",30,0)
 . W ?96,$$MWC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",31,0)
 . W ?99,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",32,0)
 . W ?103,$$RXSTATUS^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",33,0)
 . W ?105,$S($P(BPX,U):"/R",1:"/N")
"RTN","BPSRPT5",34,0)
 . W ?114,$$RXCOB^BPSRPT8(BPPSEQ)
"RTN","BPSRPT5",35,0)
 . W ?121,$S($$CLOSED02^BPSSCR03($P(^BPST($P(BPX,U,3),0),U,4))=1:"Closed",1:"Open")
"RTN","BPSRPT5",36,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT5",37,0)
 . W ?35,$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)
"RTN","BPSRPT5",38,0)
 . W ?47,BPREF,"/",$$ECMENUM^BPSRPT1($P(BPX,U,3))
"RTN","BPSRPT5",39,0)
 . W ?68,$$DATTIM^BPSRPT1(BPSRTDT)
"RTN","BPSRPT5",40,0)
 . W ?100,$J(BPBIL,10,2),?122,$J(BPINS,10,2)
"RTN","BPSRPT5",41,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT5",42,0)
 . W ?35,$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)
"RTN","BPSRPT5",43,0)
 . W ?47,BPREF,"/",$$ECMENUM^BPSRPT1($P(BPX,U,3))
"RTN","BPSRPT5",44,0)
 . W ?65,$$DATTIM^BPSRPT1($$TRANDT^BPSRPT2($P(BPX,U,3),1))
"RTN","BPSRPT5",45,0)
 . W ?83,$$TTYPE^BPSRPT7($P(BPX,U,4),$P(BPX,U,5),BPPSEQ)
"RTN","BPSRPT5",46,0)
 . W ?100,$$RESPONSE^BPSRPT7($P(BPX,U,4),$P(BPX,U,5),BPPSEQ)
"RTN","BPSRPT5",47,0)
 . W ?125,$$RXCOB^BPSRPT8(BPPSEQ)
"RTN","BPSRPT5",48,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT5",49,0)
 . N ELGCD S ELGCD=$$ELIGCODE^BPSSCR05($P(BPX,U,3))
"RTN","BPSRPT5",50,0)
 . W ?35,$S(ELGCD="V":"VET",ELGCD="T":"TRI",ELGCD="C":"CVA",1:"UNK")
"RTN","BPSRPT5",51,0)
 . W ?40,$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)
"RTN","BPSRPT5",52,0)
 . W ?52,BPREF,"/",$$ECMENUM^BPSRPT1($P(BPX,U,3))
"RTN","BPSRPT5",53,0)
 . W ?70,$$MWC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",54,0)
 . W ?73,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",55,0)
 . W ?77,$$RXSTATUS^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",56,0)
 . W ?79,$S($P(BPX,U):"/R",1:"/N")
"RTN","BPSRPT5",57,0)
 . W ?84,$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT5",58,0)
 . W ?89,$$DRGNAM^BPSRPT6($P(BPX,U,14),27)
"RTN","BPSRPT5",59,0)
 . W ?118,$$GETNDC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",60,0)
 I BPRTYPE=8 D
"RTN","BPSRPT5",61,0)
 . W ?35,$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)
"RTN","BPSRPT5",62,0)
 . W ?47,BPREF,"/",$$ECMENUM^BPSRPT1($P(BPX,U,3))
"RTN","BPSRPT5",63,0)
 . W ?68,$$DATTIM^BPSRPT1(BPSRTDT)
"RTN","BPSRPT5",64,0)
 . W ?78,$J(BPBIL,10,2),?100,$J(BPINS,10,2),?122,$S(BPCOLL]"":$J(BPCOLL,10,2),1:"")
"RTN","BPSRPT5",65,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT5",66,0)
 . N ELGCD S ELGCD=$P(BPX,U,1)
"RTN","BPSRPT5",67,0)
 . W ?35,$S(ELGCD="V":"VET",ELGCD="T":"TRI",ELGCD="C":"CVA",1:"UNK") ; Eligibility
"RTN","BPSRPT5",68,0)
 . W ?40,$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)  ; RX and Copay indicator
"RTN","BPSRPT5",69,0)
 . W ?52,BPREF                     ; Refill
"RTN","BPSRPT5",70,0)
 . W ?64,$$DATTIM^BPSRPT1(BPSRTDT) ; Transaction Date
"RTN","BPSRPT5",71,0)
 . W ?84,$J($P(BPX,U,2),10,2)      ; Drug Cost
"RTN","BPSRPT5",72,0)
 Q
"RTN","BPSRPT5",73,0)
 ;
"RTN","BPSRPT5",74,0)
 ;Print Report Line 2
"RTN","BPSRPT5",75,0)
WRLINE2(BPRTYPE,BPREC,BPX,BPRX,BPREF,BPBIL,BPGRPLAN,BPEXCEL,BPICNT,BPPSEQ) ;
"RTN","BPSRPT5",76,0)
 ;Excel Output
"RTN","BPSRPT5",77,0)
 N BPSX
"RTN","BPSRPT5",78,0)
 I $G(BPEXCEL) D WRLINE2^BPSRPT8(BPRTYPE,.BPREC,BPX,BPRX,BPREF,BPBIL,BPGRPLAN,BPPSEQ) Q
"RTN","BPSRPT5",79,0)
 ;Report Output
"RTN","BPSRPT5",80,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT5",81,0)
 . W !,?4,$$DRGNAM^BPSRPT6($P(BPX,U,14),27),?32,$$GETNDC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",82,0)
 . I BPRTYPE=1 W ?47,$$DATTIM^BPSRPT1(+BPX)
"RTN","BPSRPT5",83,0)
 . W ?68,$$MWC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",84,0)
 . W ?71,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",85,0)
 . W ?75,$$RXSTATUS^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",86,0)
 . W ?77,$S($P(BPX,U):"/R",1:"/N")
"RTN","BPSRPT5",87,0)
 . W ?82,$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT5",88,0)
 . I BPRTYPE=4 W ?92,$$RXCOB^BPSRPT8(BPPSEQ)
"RTN","BPSRPT5",89,0)
 . I BPRTYPE=1 W ?115,$$BILLCOB(BPRX,BPREF,BPPSEQ)
"RTN","BPSRPT5",90,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT5",91,0)
 . W !,?3,$E($$CRDHLDID^BPSRPT2(+$P(BPX,U,3)),3,23)
"RTN","BPSRPT5",92,0)
 . W ?26,$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,17)
"RTN","BPSRPT5",93,0)
 . W ?41,$J(BPBIL,10,2)
"RTN","BPSRPT5",94,0)
 . W ?54,$$QTY^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",95,0)
 . W ?61,$$GETNDC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",96,0)
 . S BPSX=$$PRESCIN^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",97,0)
 . W ?82,$P(BPSX,U),?98,$P(BPSX,U,2)
"RTN","BPSRPT5",98,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT5",99,0)
 . W !,?4,$$DRGNAM^BPSRPT6($P(BPX,U,14),32)
"RTN","BPSRPT5",100,0)
 . W ?41,$$GETNDC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",101,0)
 . W ?68,$$MWC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",102,0)
 . W ?71,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",103,0)
 . W ?74,$$RXSTATUS^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",104,0)
 . W ?76,$S($P(BPX,U):"/R",1:"/N")
"RTN","BPSRPT5",105,0)
 . W ?81,$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT5",106,0)
 . W ?88,$$RXCOB^BPSRPT8(BPPSEQ)
"RTN","BPSRPT5",107,0)
 . N ELGCD S ELGCD=$$ELIGCODE^BPSSCR05($P(BPX,U,3))
"RTN","BPSRPT5",108,0)
 . W ?96,$S(ELGCD="V":"VET",ELGCD="T":"TRI",ELGCD="C":"CVA",1:"UNK")
"RTN","BPSRPT5",109,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT5",110,0)
 . W !,?4,$$DRGNAM^BPSRPT6($P(BPX,U,14),23)
"RTN","BPSRPT5",111,0)
 . W ?28,$$GETNDC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",112,0)
 . W ?47,$$MWC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",113,0)
 . W ?50,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",114,0)
 . W ?53,$$RXSTATUS^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",115,0)
 . W ?55,$S($P(BPX,U):"/R",1:"/N")
"RTN","BPSRPT5",116,0)
 . W ?60,$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT5",117,0)
 . I $P(BPGRPLAN,U,2)]"" W ?69,$E($P(BPGRPLAN,U,2),1,30)
"RTN","BPSRPT5",118,0)
 . W ?122,$J($$ELAPSE^BPSRPT6($P(BPX,U,3)),10)
"RTN","BPSRPT5",119,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT5",120,0)
 . W !,?3,$E($$CRDHLDID^BPSRPT2(+$P(BPX,U,3)),3,23)
"RTN","BPSRPT5",121,0)
 . W ?28,$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,17)
"RTN","BPSRPT5",122,0)
 . W ?46,$$DATTIM^BPSRPT1(+$$CLOSEDT^BPSRPT2(+$P(BPX,U,3)))
"RTN","BPSRPT5",123,0)
 . N BPCLBY S BPCLBY=$E($$CLSBY^BPSRPT6(+$P(BPX,U,3)),1,25) S:BPCLBY="" BPCLBY="BLANK"
"RTN","BPSRPT5",124,0)
 . W ?65,BPCLBY S BPCNT(BPCLBY)=$G(BPCNT(BPCLBY))+1,BPGCNT(BPCLBY)=$G(BPGCNT(BPCLBY))+1,BPICNT(BPCLBY)=$G(BPICNT(BPCLBY))+1
"RTN","BPSRPT5",125,0)
 . W ?93,$E($P($$CLRSN^BPSRPT7(+$P(BPX,U,3)),U,2),1,30)
"RTN","BPSRPT5",126,0)
 . W ?128,$$RXCOB^BPSRPT8(BPPSEQ)
"RTN","BPSRPT5",127,0)
 I BPRTYPE=8 D  Q
"RTN","BPSRPT5",128,0)
 . W !,?2,$$DRGNAM^BPSRPT6($P(BPX,U,14),34)
"RTN","BPSRPT5",129,0)
 . W ?38,$$MWC^BPSRPT6(BPRX,BPREF)
"RTN","BPSRPT5",130,0)
 . W ?42,$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))
"RTN","BPSRPT5",131,0)
 . W ?46,$$RXSTATUS^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",132,0)
 . W ?48,$S($P(BPX,U):"/R",1:"/N")
"RTN","BPSRPT5",133,0)
 . W ?54,$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,10)
"RTN","BPSRPT5",134,0)
 . W ?72,$E(BPGRPLAN,1,50)
"RTN","BPSRPT5",135,0)
 . W ?125,$$BILL^BPSRPT6(BPRX,BPREF,BPPSEQ)
"RTN","BPSRPT5",136,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT5",137,0)
 . W !,?4,$$DRGNAM^BPSRPT6($P(BPX,U,4),27) ;Drug
"RTN","BPSRPT5",138,0)
 . W ?32,$$GETNDC^BPSRPT6(BPRX,BPREF)  ;NDC
"RTN","BPSRPT5",139,0)
 . W ?47,$$DATTIM^BPSRPT1($P(BPX,U,5)) ;Release Date
"RTN","BPSRPT5",140,0)
 . W ?62,$$MWC^BPSRPT6(BPRX,BPREF)     ;Fill Location
"RTN","BPSRPT5",141,0)
 . W ?65,$$RXSTANAM^BPSSCRU2($P(BPX,U,6))  ;Status
"RTN","BPSRPT5",142,0)
 . W ?67,$S($P(BPX,U,5):"/R",1:"/N")   ;Released
"RTN","BPSRPT5",143,0)
 . W ?75,$E($$GET1^DIQ(366.17,$P(BPX,U,7),.01,"E"),1,57) ;Non-Billalble Reason - ICR 6136
"RTN","BPSRPT5",144,0)
 Q
"RTN","BPSRPT5",145,0)
 ;
"RTN","BPSRPT5",146,0)
 ;Print Report Line 3
"RTN","BPSRPT5",147,0)
WRLINE3(BPRTYPE,BPREC,BPX,BPEXCEL) N BP59,BPRICINF
"RTN","BPSRPT5",148,0)
 S BP59=+$P(BPX,U,3)
"RTN","BPSRPT5",149,0)
 ;Excel Output
"RTN","BPSRPT5",150,0)
 I $G(BPEXCEL) D WRLINE3^BPSRPT8(BPRTYPE,.BPREC,BPX) Q
"RTN","BPSRPT5",151,0)
 ;Report Output
"RTN","BPSRPT5",152,0)
 I BPRTYPE=4 D  Q
"RTN","BPSRPT5",153,0)
 . S NP=$$CHKP(1) Q:BPQ
"RTN","BPSRPT5",154,0)
 . ;Released On
"RTN","BPSRPT5",155,0)
 . W !,?6,$$DATTIM^BPSRPT1(+BPX)
"RTN","BPSRPT5",156,0)
 . ;Method
"RTN","BPSRPT5",157,0)
 . I $$AUTOREV^BPSRPT1(BP59) W ?22,"AUTO/"
"RTN","BPSRPT5",158,0)
 . E  W ?22,"REGULAR/"
"RTN","BPSRPT5",159,0)
 . ;Return Status
"RTN","BPSRPT5",160,0)
 . I $P(BPX,U,15)["ACCEPTED" W "ACCEPTED/"
"RTN","BPSRPT5",161,0)
 . E  W "REJECTED/"
"RTN","BPSRPT5",162,0)
 . ;Reason
"RTN","BPSRPT5",163,0)
 . W $$RVSRSN^BPSRPT7(+$P(BPX,U,3))
"RTN","BPSRPT5",164,0)
 ;
"RTN","BPSRPT5",165,0)
 I BPRTYPE=8 D  Q
"RTN","BPSRPT5",166,0)
 . S BPRICINF=$$PRICEVAL(BP59)
"RTN","BPSRPT5",167,0)
 . W !,?4,$S($P(BPRICINF,U,3)]"":$P(BPRICINF,U,3),1:"N/A")
"RTN","BPSRPT5",168,0)
 . W ?23,$S($P(BPRICINF,U,4)]"":$P(BPRICINF,U,4),1:"N/A")
"RTN","BPSRPT5",169,0)
 . W ?38,$S($P(BPRICINF,U,5)]"":$P(BPRICINF,U,5),1:"N/A")
"RTN","BPSRPT5",170,0)
 . W ?56,$S($P(BPRICINF,U,6)]"":$P(BPRICINF,U,6),1:"N/A")
"RTN","BPSRPT5",171,0)
 . W ?81,$S($P(BPRICINF,U,7)]"":$P(BPRICINF,U,7),1:"N/A")
"RTN","BPSRPT5",172,0)
 . W ?96,$S($P(BPRICINF,U,2)]"":$P(BPRICINF,U,2),1:"N/A")
"RTN","BPSRPT5",173,0)
 . W ?111,$S($P(BPRICINF,U,1)]"":$P(BPRICINF,U,1),1:"N/A")
"RTN","BPSRPT5",174,0)
 ;
"RTN","BPSRPT5",175,0)
 Q
"RTN","BPSRPT5",176,0)
 ;
"RTN","BPSRPT5",177,0)
 ;Display the Report
"RTN","BPSRPT5",178,0)
REPORT(REF,BPEXCEL,BPSCR,BPRPTNAM,BPSUMDET,BPPAGE) ;
"RTN","BPSRPT5",179,0)
 N BPBIL,BPBLINE,BPCOLL,BPDFN,BPDIV,BPELTM,BPGELTM,BPGBIL,BPGINS,BPGCOLL,BPGCNT,BPGRPLAN,BPINS,BPLINES,BPREC,BPREF,BPRX,BPSRTDT,BPSTATUS,BPTBIL,BPTCOLL,BPTINS,BPX,BPSGTOT,NP,BPSDATA
"RTN","BPSRPT5",180,0)
 N BPPSEQ,BPBILINF,BPRICINF,BPINSBIN
"RTN","BPSRPT5",181,0)
 N BPGPRICE,BPG128,BPG129,BPG133,BPG134,BPG135,BPG136,BPG137
"RTN","BPSRPT5",182,0)
 N BPIPRICE,BPI128,BPI129,BPI133,BPI134,BPI135,BPI136,BPI137
"RTN","BPSRPT5",183,0)
 N BPTPRICE,BPT128,BPT129,BPT133,BPT134,BPT135,BPT136,BPT137
"RTN","BPSRPT5",184,0)
 I '$D(@REF) D HDR^BPSRPT7(BPRTYPE,BPRPTNAM,.BPPAGE) W !,"No data meets the criteria." G XREPORT
"RTN","BPSRPT5",185,0)
 S (BPGBIL,BPGINS,BPGCOLL,BPGCNT,BPGELTM,BPGPRICE,BPG128,BPG129,BPG133,BPG134,BPG135,BPG136,BPG137)=0
"RTN","BPSRPT5",186,0)
 S BPDIV="" F  S BPDIV=$O(@REF@(BPDIV)) Q:BPDIV=""  D  Q:BPQ
"RTN","BPSRPT5",187,0)
 .S BPGRPLAN=""
"RTN","BPSRPT5",188,0)
 .D HDR^BPSRPT7(BPRTYPE,BPRPTNAM,.BPPAGE)
"RTN","BPSRPT5",189,0)
 .N BPCNT S (BPTBIL,BPTINS,BPTCOLL,BPCNT,BPELTM,BPTPRICE,BPT128,BPT129,BPT133,BPT134,BPT135,BPT136,BPT137)=0
"RTN","BPSRPT5",190,0)
 .F  S BPGRPLAN=$O(@REF@(BPDIV,BPGRPLAN)) Q:BPGRPLAN=""  D  Q:BPQ
"RTN","BPSRPT5",191,0)
 .. S BPINSBIN=0
"RTN","BPSRPT5",192,0)
 .. N BPSCLM,BPREC,BPTOT,BPIBIL,BPICNT,BPICOL,BPIINS
"RTN","BPSRPT5",193,0)
 .. S (BPIBIL,BPICNT,BPICOL,BPIINS,BPIPRICE,BPI128,BPI129,BPI133,BPI134,BPI135,BPI136,BPI137)=0
"RTN","BPSRPT5",194,0)
 .. S BPDFN="" F  S BPDFN=$O(@REF@(BPDIV,BPGRPLAN,BPDFN)) Q:BPDFN=""  D  Q:BPQ
"RTN","BPSRPT5",195,0)
 ... S BPSRTDT="" F  S BPSRTDT=$O(@REF@(BPDIV,BPGRPLAN,BPDFN,BPSRTDT)) Q:BPSRTDT=""  D  Q:BPQ
"RTN","BPSRPT5",196,0)
 .... S BPRX="" F  S BPRX=$O(@REF@(BPDIV,BPGRPLAN,BPDFN,BPSRTDT,BPRX)) Q:BPRX=""  D  Q:BPQ
"RTN","BPSRPT5",197,0)
 ..... S BPREF="" F  S BPREF=$O(@REF@(BPDIV,BPGRPLAN,BPDFN,BPSRTDT,BPRX,BPREF)) Q:BPREF=""  D  Q:BPQ
"RTN","BPSRPT5",198,0)
 ...... S BPX=@REF@(BPDIV,BPGRPLAN,BPDFN,BPSRTDT,BPRX,BPREF)
"RTN","BPSRPT5",199,0)
 ...... I BPSUMDET=0,BPINSBIN=0 D
"RTN","BPSRPT5",200,0)
 ....... D WRPLAN(BPGRPLAN) S BPINSBIN=1 ;Set Insurance/Bin Indicator
"RTN","BPSRPT5",201,0)
 ....... S BPBLINE=""  ;Reset Blank Line Indicator
"RTN","BPSRPT5",202,0)
 ...... S BPCNT=BPCNT+1,BPGCNT=BPGCNT+1,BPICNT=BPICNT+1
"RTN","BPSRPT5",203,0)
 ...... S BPPSEQ=+$$COB59^BPSUTIL2($P(BPX,U,3))
"RTN","BPSRPT5",204,0)
 ...... I BPRTYPE=5 D
"RTN","BPSRPT5",205,0)
 ....... S BPELTM=BPELTM+$$ELAPSE^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",206,0)
 ....... S BPGELTM=BPGELTM+$$ELAPSE^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",207,0)
 ...... I BPRTYPE=9 D
"RTN","BPSRPT5",208,0)
 ....... S (BPBIL,BPINS,BPTINS,BPGINS,BPIINS,BPBILINF,BPCOLL,BPTCOLL,BPGCOLL,BPICOL)=""
"RTN","BPSRPT5",209,0)
 ....... S BPTBIL=BPTBIL+$P(BPX,U,2),BPGBIL=BPGBIL+$P(BPX,U,2),BPIBIL=BPIBIL+$P(BPX,U,2)
"RTN","BPSRPT5",210,0)
 ...... E  D
"RTN","BPSRPT5",211,0)
 ....... S BPBIL=$$BILLED^BPSRPT7($P(BPX,U,3)),BPTBIL=BPTBIL+BPBIL,BPGBIL=BPGBIL+BPBIL,BPIBIL=BPIBIL+BPBIL
"RTN","BPSRPT5",212,0)
 ....... S BPINS=$$INSPAID^BPSRPT2($P(BPX,U,3)),BPTINS=BPTINS+BPINS,BPGINS=BPGINS+BPINS,BPIINS=BPIINS+BPINS
"RTN","BPSRPT5",213,0)
 ....... S BPBILINF=$$COLLECTD^BPSRPT6(BPRX,BPREF,BPPSEQ)
"RTN","BPSRPT5",214,0)
 ....... S BPCOLL=+BPBILINF,BPTCOLL=BPTCOLL+BPCOLL,BPGCOLL=BPGCOLL+BPCOLL,BPICOL=BPICOL+BPCOLL
"RTN","BPSRPT5",215,0)
 ...... I BPRTYPE=6 D  Q
"RTN","BPSRPT5",216,0)
 ....... S BPSTATUS=$P(BPX,U,7)
"RTN","BPSRPT5",217,0)
 ....... I BPSTATUS["REJECT" S $P(BPSCLM(BPSRTDT),U,3)=$P($G(BPSCLM(BPSRTDT)),U,3)+BPBIL
"RTN","BPSRPT5",218,0)
 ....... I BPSTATUS["PAYABLE" S $P(BPSCLM(BPSRTDT),U,4)=$P($G(BPSCLM(BPSRTDT)),U,4)+BPBIL
"RTN","BPSRPT5",219,0)
 ....... S $P(BPSCLM(BPSRTDT),U,2)=$P($G(BPSCLM(BPSRTDT)),U,2)+BPBIL
"RTN","BPSRPT5",220,0)
 ....... S $P(BPSCLM(BPSRTDT),U,5)=$P($G(BPSCLM(BPSRTDT)),U,5)+BPINS
"RTN","BPSRPT5",221,0)
 ....... S $P(BPSCLM(BPSRTDT),U)=$P($G(BPSCLM(BPSRTDT)),U)+1
"RTN","BPSRPT5",222,0)
 ...... I BPRTYPE=8 D
"RTN","BPSRPT5",223,0)
 ....... ;Get Pricing Information for totals
"RTN","BPSRPT5",224,0)
 ....... S BPRICINF=$$PRICEVAL(+$P(BPX,U,3))
"RTN","BPSRPT5",225,0)
 ....... S BPI128=BPI128+$P($G(BPRICINF),U),BPI129=BPI129+$P($G(BPRICINF),U,2),BPI133=BPI133+$P($G(BPRICINF),U,3),BPI134=BPI134+$P($G(BPRICINF),U,4)
"RTN","BPSRPT5",226,0)
 ....... S BPI135=BPI135+$P($G(BPRICINF),U,5),BPI136=BPI136+$P($G(BPRICINF),U,6),BPI137=BPI137+$P($G(BPRICINF),U,7)
"RTN","BPSRPT5",227,0)
 ....... S BPT128=BPT128+$P($G(BPRICINF),U),BPT129=BPT129+$P($G(BPRICINF),U,2),BPT133=BPT133+$P($G(BPRICINF),U,3),BPT134=BPT134+$P($G(BPRICINF),U,4)
"RTN","BPSRPT5",228,0)
 ....... S BPT135=BPT135+$P($G(BPRICINF),U,5),BPT136=BPT136+$P($G(BPRICINF),U,6),BPT137=BPT137+$P($G(BPRICINF),U,7)
"RTN","BPSRPT5",229,0)
 ....... S BPG128=BPG128+$P($G(BPRICINF),U),BPG129=BPG129+$P($G(BPRICINF),U,2),BPG133=BPG133+$P($G(BPRICINF),U,3),BPG134=BPG134+$P($G(BPRICINF),U,4)
"RTN","BPSRPT5",230,0)
 ....... S BPG135=BPG135+$P($G(BPRICINF),U,5),BPG136=BPG136+$P($G(BPRICINF),U,6),BPG137=BPG137+$P($G(BPRICINF),U,7)
"RTN","BPSRPT5",231,0)
 ....... S BPIPRICE=BPI128_U_BPI129_U_BPI133_U_BPI134_U_BPI135_U_BPI136_U_BPI137
"RTN","BPSRPT5",232,0)
 ....... S BPTPRICE=BPT128_U_BPT129_U_BPT133_U_BPT134_U_BPT135_U_BPT136_U_BPT137
"RTN","BPSRPT5",233,0)
 ....... S BPGPRICE=BPG128_U_BPG129_U_BPG133_U_BPG134_U_BPG135_U_BPG136_U_BPG137
"RTN","BPSRPT5",234,0)
 ...... ;Display Detail Section
"RTN","BPSRPT5",235,0)
 ...... Q:BPSUMDET=1
"RTN","BPSRPT5",236,0)
 ...... S BPREC=""  ;Reset Excel Display Variable
"RTN","BPSRPT5",237,0)
 ...... I 'BPEXCEL,BPRTYPE=1,BPBLINE=1 S NP=$$CHKP(2) Q:BPQ  I BPBLINE=1 W !  ;Print blank line
"RTN","BPSRPT5",238,0)
 ...... S NP=$$CHKP(1) Q:BPQ  D WRLINE1(BPRTYPE,.BPREC,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS,BPCOLL,BPEXCEL,BPPSEQ)
"RTN","BPSRPT5",239,0)
 ...... S NP=$$CHKP(1) Q:BPQ  D WRLINE2(BPRTYPE,.BPREC,BPX,BPRX,BPREF,BPBIL,BPGRPLAN,BPEXCEL,.BPICNT,BPPSEQ)
"RTN","BPSRPT5",240,0)
 ...... D WRLINE3(BPRTYPE,.BPREC,BPX,BPEXCEL)
"RTN","BPSRPT5",241,0)
 ...... I (",2,7,8")[BPRTYPE,'BPEXCEL D  Q:BPQ
"RTN","BPSRPT5",242,0)
 ....... D COMMENT(+$P(BPX,U,3)) Q:BPQ
"RTN","BPSRPT5",243,0)
 ....... S NP=$$CHKP(1) Q:BPQ
"RTN","BPSRPT5",244,0)
 ....... I (",2,")'[BPRTYPE W !,?10,"Claim ID: ",$$CLAIMID^BPSRPT2(+$P(BPX,U,3))
"RTN","BPSRPT5",245,0)
 ....... E  W !,?10,$$DRGNAM^BPSRPT6($P(BPX,U,14),34)
"RTN","BPSRPT5",246,0)
 ....... N BPSARR,BPRJCNT,BPZZ S BPRJCNT=$$REJTEXT^BPSRPT2(+$P(BPX,U,3),.BPSARR)
"RTN","BPSRPT5",247,0)
 ....... F BPZZ=1:1:BPRJCNT S NP=$$CHKP(1) Q:BPQ  W !,?10,BPSARR(BPZZ) Q:BPQ
"RTN","BPSRPT5",248,0)
 ...... I 'BPEXCEL,BPRTYPE=1 S BPBLINE=1  ;Set Blank Line Display Indicator
"RTN","BPSRPT5",249,0)
 .. I BPRTYPE=6 D PTBDT^BPSRPT7(BPDIV,BPSUMDET,.BPSCLM,.BPSGTOT)
"RTN","BPSRPT5",250,0)
 .. I 'BPQ,(",1,2,3,4,7,8,9,")[BPRTYPE,'BPEXCEL S NP=$$CHKP(5) Q:BPQ  D ITOT^BPSRPT7(BPRTYPE,BPDIV,BPGRPLAN,BPIBIL,BPIINS,BPICOL,.BPICNT,BPIPRICE)
"RTN","BPSRPT5",251,0)
 .I 'BPEXCEL,'BPQ,BPRTYPE'=6 S NP=$$CHKP(5) Q:BPQ  D TOTALS^BPSRPT7(BPRTYPE,BPDIV,BPTBIL,BPTINS,BPTCOLL,.BPCNT,BPELTM,BPTPRICE)
"RTN","BPSRPT5",252,0)
 .I 'BPEXCEL,'BPQ,$O(@REF@(BPDIV))]"" D:$G(BPSCR) PAUSE^BPSRPT1 Q:BPQ
"RTN","BPSRPT5",253,0)
 ;Print Grand Totals
"RTN","BPSRPT5",254,0)
 I 'BPEXCEL D
"RTN","BPSRPT5",255,0)
 .I 'BPQ,BPRTYPE=6 D PGTOT6^BPSRPT7($G(BPSGTOT))
"RTN","BPSRPT5",256,0)
 .I 'BPQ,BPRTYPE'=6 S NP=$$CHKP(5) Q:BPQ  D PGTOT^BPSRPT7(BPRTYPE,BPGBIL,BPGINS,BPGCOLL,.BPGCNT,BPGELTM,BPGPRICE)
"RTN","BPSRPT5",257,0)
 ;
"RTN","BPSRPT5",258,0)
XREPORT Q
"RTN","BPSRPT5",259,0)
 ;
"RTN","BPSRPT5",260,0)
 ;Display Comments
"RTN","BPSRPT5",261,0)
 ;Input Variable: BP59 - Lookup to BPS TRANSACTION (#59)
"RTN","BPSRPT5",262,0)
COMMENT(BP59) N CNODE,I,J,NP
"RTN","BPSRPT5",263,0)
 S I="" F  S I=$O(^BPST(BP59,11,"B",I),-1) Q:'I  D  Q:BPQ
"RTN","BPSRPT5",264,0)
 .S NP=$$CHKP(1) Q:BPQ
"RTN","BPSRPT5",265,0)
 .S J=$O(^BPST(BP59,11,"B",I,"")) Q:J=""
"RTN","BPSRPT5",266,0)
 .S CNODE=$G(^BPST(BP59,11,J,0))
"RTN","BPSRPT5",267,0)
 .W !,?10,$$DATTIM^BPSRPT1(+$P($P(CNODE,U),"."))," - ",$P(CNODE,U,3)
"RTN","BPSRPT5",268,0)
 Q
"RTN","BPSRPT5",269,0)
 ;
"RTN","BPSRPT5",270,0)
 ;Display the Insurance
"RTN","BPSRPT5",271,0)
 ; Input Variable -> BPSDATA -> if 0, skip page check
"RTN","BPSRPT5",272,0)
 ;                   BPEXCEL -> 1 - Print to Excel/0 Regular Display
"RTN","BPSRPT5",273,0)
WRPLAN(BPGRPLAN) ;
"RTN","BPSRPT5",274,0)
 N GPIEN,INS,NP
"RTN","BPSRPT5",275,0)
 ;
"RTN","BPSRPT5",276,0)
 I BPSUMDET'=0 Q
"RTN","BPSRPT5",277,0)
 I BPEXCEL Q
"RTN","BPSRPT5",278,0)
 ;Skip for Recent Transactions and Totals by Date Reports
"RTN","BPSRPT5",279,0)
 I BPRTYPE=5!(BPRTYPE=6) Q
"RTN","BPSRPT5",280,0)
 I $G(BPSDATA) S NP=$$CHKP(5) Q:BPQ!NP
"RTN","BPSRPT5",281,0)
 ;Get and display the Insurance Name
"RTN","BPSRPT5",282,0)
 S INS=$E(BPGRPLAN,1,90)
"RTN","BPSRPT5",283,0)
 I INS]"" D
"RTN","BPSRPT5",284,0)
 . D ULINE("-")
"RTN","BPSRPT5",285,0)
 . W !,INS
"RTN","BPSRPT5",286,0)
 . ;include the Insurance Bin after the Insurance name
"RTN","BPSRPT5",287,0)
 . I (",2,")[BPRTYPE D
"RTN","BPSRPT5",288,0)
 . . W " - ",$$INSBIN^BPSRPT6($P(BPX,U,3))
"RTN","BPSRPT5",289,0)
 . D ULINE("-")
"RTN","BPSRPT5",290,0)
 Q
"RTN","BPSRPT5",291,0)
 ;
"RTN","BPSRPT5",292,0)
 ;Check for End of Page
"RTN","BPSRPT5",293,0)
 ; Input variables -> BPLINES -> Number of lines from bottom
"RTN","BPSRPT5",294,0)
 ;                    BPEXCEL -> 1 - Print to Excel/0 Regular Display
"RTN","BPSRPT5",295,0)
 ; Output variable -> BPSDATA -> 0 -> New screen, no data displayed yet
"RTN","BPSRPT5",296,0)
 ;                               1 -> Data displayed on current screen
"RTN","BPSRPT5",297,0)
CHKP(BPLINES) Q:$G(BPEXCEL) 0
"RTN","BPSRPT5",298,0)
 S BPLINES=BPLINES+1
"RTN","BPSRPT5",299,0)
 I $G(BPSCR) S BPLINES=BPLINES+2
"RTN","BPSRPT5",300,0)
 I $G(BPSCR),'$G(BPSDATA) S BPSDATA=1 Q 0
"RTN","BPSRPT5",301,0)
 S BPSDATA=1
"RTN","BPSRPT5",302,0)
 I $Y>(IOSL-BPLINES) D:$G(BPSCR) PAUSE^BPSRPT1 Q:$G(BPQ) 0 D HDR^BPSRPT7(BPRTYPE,BPRPTNAM,.BPPAGE) Q 1
"RTN","BPSRPT5",303,0)
 Q 0
"RTN","BPSRPT5",304,0)
 ;
"RTN","BPSRPT5",305,0)
 ;Print one line of characters
"RTN","BPSRPT5",306,0)
ULINE(X) N I
"RTN","BPSRPT5",307,0)
 W ! F I=1:1:132 W $G(X,"-")
"RTN","BPSRPT5",308,0)
 Q
"RTN","BPSRPT5",309,0)
BILLCOB(BPRX,BPREF,BPPSEQ) ;
"RTN","BPSRPT5",310,0)
 N BPSBILL
"RTN","BPSRPT5",311,0)
 S BPSBILL=$$BILL^BPSRPT6(BPRX,BPREF,BPPSEQ)
"RTN","BPSRPT5",312,0)
 I BPSBILL="" Q ""
"RTN","BPSRPT5",313,0)
 Q $J(BPSBILL_"  "_$$RXCOB^BPSRPT8(BPPSEQ)_"  ",17)
"RTN","BPSRPT5",314,0)
 ;
"RTN","BPSRPT5",315,0)
PRICING(BP59) ; Check if the Spending Account Remaining field has non-zero data
"RTN","BPSRPT5",316,0)
 ; Returns: 1 if true, 0 if not
"RTN","BPSRPT5",317,0)
 N BPSRESP,BPSPOS
"RTN","BPSRPT5",318,0)
 D RESP59^BPSRPT2(BP59,.BPSRESP,.BPSPOS)
"RTN","BPSRPT5",319,0)
 Q:(BPSRESP="")!(BPSPOS="") 0
"RTN","BPSRPT5",320,0)
 I +$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,BPSPOS,120)),U,8)) Q 1
"RTN","BPSRPT5",321,0)
 Q 0
"RTN","BPSRPT5",322,0)
 ;
"RTN","BPSRPT5",323,0)
PRICEVAL(BP59) ;
"RTN","BPSRPT5",324,0)
 N BPSRESP,BPSPOS,RETV,BPS120,BPS130
"RTN","BPSRPT5",325,0)
 S RETV=0
"RTN","BPSRPT5",326,0)
 D RESP59^BPSRPT2(BP59,.BPSRESP,.BPSPOS)
"RTN","BPSRPT5",327,0)
 Q:(BPSRESP="")!(BPSPOS="") RETV
"RTN","BPSRPT5",328,0)
 S BPS120=$G(^BPSR(BPSRESP,1000,BPSPOS,120)),BPS130=$G(^BPSR(BPSRESP,1000,BPSPOS,130))
"RTN","BPSRPT5",329,0)
 S RETV=$$DFF2EXT^BPSECFM($P($G(BPS120),U,8))_U_$$DFF2EXT^BPSECFM($P($G(BPS120),U,9))_U_$$DFF2EXT^BPSECFM($P($G(BPS130),U,3))_U_$$DFF2EXT^BPSECFM($P($G(BPS130),U,4))
"RTN","BPSRPT5",330,0)
 S RETV=RETV_U_$$DFF2EXT^BPSECFM($P($G(BPS130),U,5))_U_$$DFF2EXT^BPSECFM($P($G(BPS130),U,6))_U_$$DFF2EXT^BPSECFM($P($G(BPS130),U,7))
"RTN","BPSRPT5",331,0)
 Q RETV
"RTN","BPSRPT5",332,0)
 ;
"RTN","BPSRPT7")
0^11^B189873408
"RTN","BPSRPT7",1,0)
BPSRPT7 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT7",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,5,7,8,10,11,19,20,23,24**;JUN 2004;Build 43
"RTN","BPSRPT7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRPT7",4,0)
 ;
"RTN","BPSRPT7",5,0)
 Q
"RTN","BPSRPT7",6,0)
 ;
"RTN","BPSRPT7",7,0)
 ;Routine to Display the Reports (Continued)
"RTN","BPSRPT7",8,0)
 ;
"RTN","BPSRPT7",9,0)
 ; Input Variables -> BPCLM = Array of report data by date
"RTN","BPSRPT7",10,0)
 ;                   BPDIV,BPSUMDET,GTOT
"RTN","BPSRPT7",11,0)
 ; Returned Value -> Cumulative Grand Totals
"RTN","BPSRPT7",12,0)
 ; 
"RTN","BPSRPT7",13,0)
PTBDT(BPDIV,BPSUMDET,BPCLM,GTOT) N DIFF,I,NP,RDT,TOT,X
"RTN","BPSRPT7",14,0)
 ;
"RTN","BPSRPT7",15,0)
 ;Loop through compiled array and display
"RTN","BPSRPT7",16,0)
 S TOT=""
"RTN","BPSRPT7",17,0)
 S RDT="" F  S RDT=$O(BPCLM(RDT)) Q:RDT=""  D  Q:BPQ
"RTN","BPSRPT7",18,0)
 .S NP=$$CHKP^BPSRPT5(1) Q:BPQ
"RTN","BPSRPT7",19,0)
 .S X=$G(BPCLM(RDT))
"RTN","BPSRPT7",20,0)
 .;
"RTN","BPSRPT7",21,0)
 .;Print Details - Report
"RTN","BPSRPT7",22,0)
 .I BPSUMDET=0,'BPEXCEL D
"RTN","BPSRPT7",23,0)
 ..W !,$$DATTIM^BPSRPT1(RDT) ;Date
"RTN","BPSRPT7",24,0)
 ..W ?15,$J(+$P(X,U),17) ;#Claims
"RTN","BPSRPT7",25,0)
 ..W ?33,$J(+$P(X,U,2),17,2)  ;Amount Submitted
"RTN","BPSRPT7",26,0)
 ..W ?51,$J(+$P(X,U,3),17,2)  ;Returned Rejected
"RTN","BPSRPT7",27,0)
 ..W ?69,$J(+$P(X,U,4),17,2)  ;Returned Payable
"RTN","BPSRPT7",28,0)
 ..W ?87,$J(+$P(X,U,5),17,2)  ;Amount to Receive
"RTN","BPSRPT7",29,0)
 ..;
"RTN","BPSRPT7",30,0)
 ..;Difference
"RTN","BPSRPT7",31,0)
 ..S DIFF=+$P(X,U,4)-$P(X,U,5)
"RTN","BPSRPT7",32,0)
 ..I DIFF<0 S DIFF="<"_$TR($J(-DIFF,15,2)," ")_">" W ?117,$J(DIFF,15)
"RTN","BPSRPT7",33,0)
 ..E  W ?116,$J(DIFF,15,2)
"RTN","BPSRPT7",34,0)
 ..;
"RTN","BPSRPT7",35,0)
 ..;Print Details - Excel
"RTN","BPSRPT7",36,0)
 .I BPSUMDET=0,BPEXCEL D
"RTN","BPSRPT7",37,0)
 ..;
"RTN","BPSRPT7",38,0)
 ..;Division
"RTN","BPSRPT7",39,0)
 ..W !,$S(BPDIV=0:"BLANK",$$DIVNAME^BPSSCRDS(BPDIV)]"":$$DIVNAME^BPSSCRDS(BPDIV),1:BPDIV),U
"RTN","BPSRPT7",40,0)
 ..W $$DATTIM^BPSRPT1(RDT),U  ;Date
"RTN","BPSRPT7",41,0)
 ..W +$P(X,U),U ;#Claims
"RTN","BPSRPT7",42,0)
 ..W $TR($J(+$P(X,U,2),17,2)," "),U  ;Amount Submitted
"RTN","BPSRPT7",43,0)
 ..W $TR($J(+$P(X,U,3),17,2)," "),U  ;Returned Rejected
"RTN","BPSRPT7",44,0)
 ..W $TR($J(+$P(X,U,4),17,2)," "),U  ;Returned Payable
"RTN","BPSRPT7",45,0)
 ..W $TR($J(+$P(X,U,5),17,2)," "),U  ;Amount to Receive
"RTN","BPSRPT7",46,0)
 ..;
"RTN","BPSRPT7",47,0)
 ..;Difference
"RTN","BPSRPT7",48,0)
 ..S DIFF=+$P(X,U,4)-$P(X,U,5)
"RTN","BPSRPT7",49,0)
 ..W $TR($J(DIFF,15,2)," ")
"RTN","BPSRPT7",50,0)
 .;
"RTN","BPSRPT7",51,0)
 .;Save Totals
"RTN","BPSRPT7",52,0)
 .F I=1:1:5 S $P(TOT,U,I)=$P(TOT,U,I)+$P(X,U,I),$P(GTOT,U,I)=$P($G(GTOT),U,I)+$P(X,U,I)
"RTN","BPSRPT7",53,0)
 ;
"RTN","BPSRPT7",54,0)
 ;Print Totals
"RTN","BPSRPT7",55,0)
 Q:BPEXCEL
"RTN","BPSRPT7",56,0)
 Q:BPQ  S NP=$$CHKP^BPSRPT5(2) Q:BPQ
"RTN","BPSRPT7",57,0)
 D ULINE^BPSRPT5("-")
"RTN","BPSRPT7",58,0)
 W !,"TOTALS"
"RTN","BPSRPT7",59,0)
 W ?15,$J(+$P(TOT,U),17)
"RTN","BPSRPT7",60,0)
 W ?33,$J(+$P(TOT,U,2),17,2)
"RTN","BPSRPT7",61,0)
 W ?51,$J(+$P(TOT,U,3),17,2)
"RTN","BPSRPT7",62,0)
 W ?69,$J(+$P(TOT,U,4),17,2)
"RTN","BPSRPT7",63,0)
 W ?87,$J(+$P(TOT,U,5),17,2)
"RTN","BPSRPT7",64,0)
 S X=$S((+$P(TOT,U,4))=0:0,1:(+$P(TOT,U,5))/(+$P(TOT,U,4)))
"RTN","BPSRPT7",65,0)
 S DIFF=+$P(TOT,U,4)-$P(TOT,U,5)
"RTN","BPSRPT7",66,0)
 I DIFF<0 S DIFF="<"_$TR($J(-DIFF,15,2)," ")_">" W ?117,$J(DIFF,15)
"RTN","BPSRPT7",67,0)
 E  W ?116,$J(DIFF,15,2)
"RTN","BPSRPT7",68,0)
 Q
"RTN","BPSRPT7",69,0)
 ;
"RTN","BPSRPT7",70,0)
 ;Print Grand Totals - Report 6
"RTN","BPSRPT7",71,0)
 ;
"RTN","BPSRPT7",72,0)
PGTOT6(GTOT) N DIFF,NP,X
"RTN","BPSRPT7",73,0)
 Q:BPQ  S NP=$$CHKP^BPSRPT5(2) Q:BPQ
"RTN","BPSRPT7",74,0)
 D ULINE^BPSRPT5("-")
"RTN","BPSRPT7",75,0)
 W !,"GRAND TOTALS"
"RTN","BPSRPT7",76,0)
 W ?15,$J(+$P(GTOT,U),17)
"RTN","BPSRPT7",77,0)
 W ?33,$J(+$P(GTOT,U,2),17,2)
"RTN","BPSRPT7",78,0)
 W ?51,$J(+$P(GTOT,U,3),17,2)
"RTN","BPSRPT7",79,0)
 W ?69,$J(+$P(GTOT,U,4),17,2)
"RTN","BPSRPT7",80,0)
 W ?87,$J(+$P(GTOT,U,5),17,2)
"RTN","BPSRPT7",81,0)
 S X=$S((+$P(GTOT,U,4))=0:0,1:(+$P(GTOT,U,5))/(+$P(GTOT,U,4)))
"RTN","BPSRPT7",82,0)
 S DIFF=+$P(GTOT,U,4)-$P(GTOT,U,5)
"RTN","BPSRPT7",83,0)
 I DIFF<0 S DIFF="<"_$TR($J(-DIFF,15,2)," ")_">" W ?117,$J(DIFF,15)
"RTN","BPSRPT7",84,0)
 E  W ?116,$J(DIFF,15,2)
"RTN","BPSRPT7",85,0)
 Q
"RTN","BPSRPT7",86,0)
 ;
"RTN","BPSRPT7",87,0)
 ;Print Grand Totals - Reports 1,2,3,4,5,7,8,9
"RTN","BPSRPT7",88,0)
 ;
"RTN","BPSRPT7",89,0)
PGTOT(BPRTYPE,BPGBIL,BPGINS,BPGCOLL,BPGCNT,BPGELTM,BPRICE) ;
"RTN","BPSRPT7",90,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT7",91,0)
 .W !!,?83,"----------",?105,"----------",?122,"----------"
"RTN","BPSRPT7",92,0)
 .W !,"GRAND TOTALS",?83,$J(BPGBIL,10,2),?105,$J(BPGINS,10,2),?122,$J(BPGCOLL,10,2)
"RTN","BPSRPT7",93,0)
 .W !,"COUNT",?83,$J(BPGCNT,10),?105,$J(BPGCNT,10),?122,$J(BPGCNT,10)
"RTN","BPSRPT7",94,0)
 .W:BPGCNT !,"MEAN",?83,$J(BPGBIL/BPGCNT,10,2),?105,$J(BPGINS/BPGCNT,10,2),?122,$J(BPGCOLL/BPGCNT,10,2)
"RTN","BPSRPT7",95,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT7",96,0)
 .W !!,?100,"----------",?122,"----------"
"RTN","BPSRPT7",97,0)
 .W !,"GRAND TOTALS",?100,$J(BPGBIL,10,2),?122,$J(BPGINS,10,2)
"RTN","BPSRPT7",98,0)
 .W !,"COUNT",?100,$J(BPGCNT,10),?122,$J(BPGCNT,10)
"RTN","BPSRPT7",99,0)
 .W:BPGCNT !,"MEAN",?100,$J(BPGBIL/BPGCNT,10,2),?122,$J(BPGINS/BPGCNT,10,2)
"RTN","BPSRPT7",100,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT7",101,0)
 .W !!,?41,"----------"
"RTN","BPSRPT7",102,0)
 .W !,"GRAND TOTALS",?41,$J(BPGBIL,10,2)
"RTN","BPSRPT7",103,0)
 .W !,"COUNT",?41,$J(BPGCNT,10)
"RTN","BPSRPT7",104,0)
 .W:BPGCNT !,"MEAN",?41,$J(BPGBIL/BPGCNT,10,2)
"RTN","BPSRPT7",105,0)
 I (BPRTYPE=5) D  Q
"RTN","BPSRPT7",106,0)
 .W !!,"GRAND TOTALS (ALL DIVISIONS)",?65,"---------------"
"RTN","BPSRPT7",107,0)
 .W !,"TOTAL CLAIMS",?65,$J(BPGCNT,15)
"RTN","BPSRPT7",108,0)
 .W !,"AVERAGE ELAPSED TIME PER CLAIM",?65,$J($S(BPGCNT=0:"0",1:(BPGELTM\BPGCNT)),15)
"RTN","BPSRPT7",109,0)
 I (BPRTYPE=7) D  Q
"RTN","BPSRPT7",110,0)
 .W !!,"GRAND TOTALS (ALL DIVISIONS) BY BILLER"
"RTN","BPSRPT7",111,0)
 .N BPBILR,BPDIV S BPDIV="ALL DIVISIONS"
"RTN","BPSRPT7",112,0)
 .S BPBILR="" F  S BPBILR=$O(BPGCNT(BPBILR)) Q:BPBILR=""  D  Q:BPQ
"RTN","BPSRPT7",113,0)
 ..S NP=$$CHKP^BPSRPT5(1) Q:BPQ
"RTN","BPSRPT7",114,0)
 ..W !,?3,BPBILR,?65,$J($G(BPGCNT(BPBILR)),5)
"RTN","BPSRPT7",115,0)
 .Q:$G(BPQ)
"RTN","BPSRPT7",116,0)
 .W !,?65,"-----"
"RTN","BPSRPT7",117,0)
 .W !,"CLOSED CLAIMS GRAND TOTAL",?65,$J(BPGCNT,5)
"RTN","BPSRPT7",118,0)
 I BPRTYPE=8 D  Q
"RTN","BPSRPT7",119,0)
 .W !!,?78,"----------",?100,"----------",?122,"----------"
"RTN","BPSRPT7",120,0)
 .W !,"GRAND TOTALS",?78,$J(BPGBIL,10,2),?100,$J(BPGINS,10,2),?122,$J(BPGCOLL,10,2)
"RTN","BPSRPT7",121,0)
 .W !,?4,$J($P(BPRICE,U,3),10,2),?23,$J($P(BPRICE,U,4),10,2),?38,$J($P(BPRICE,U,5),10,2),?56,$J($P(BPRICE,U,6),10,2),?81,$J($P(BPRICE,U,7),10,2),?96,$J($P(BPRICE,U,2),10,2),?111,$J($P(BPRICE,U),10,2)
"RTN","BPSRPT7",122,0)
 .W !,"COUNT",?78,$J(BPGCNT,10),?100,$J(BPGCNT,10),?122,$J(BPGCNT,10)
"RTN","BPSRPT7",123,0)
 .W !,?4,$J(BPGCNT,10),?23,$J(BPGCNT,10),?38,$J(BPGCNT,10),?56,$J(BPGCNT,10),?81,$J(BPGCNT,10),?96,$J(BPGCNT,10),?111,$J(BPGCNT,10)
"RTN","BPSRPT7",124,0)
 .W:BPGCNT !,"MEAN",?78,$J(BPGBIL/BPGCNT,10,2),?100,$J(BPGINS/BPGCNT,10,2),?122,$J(BPGCOLL/BPGCNT,10,2)
"RTN","BPSRPT7",125,0)
 .W !,?4,$J($P(BPRICE,U,3)/BPGCNT,10,2),?23,$J($P(BPRICE,U,4)/BPGCNT,10,2),?38,$J($P(BPRICE,U,5)/BPGCNT,10,2)
"RTN","BPSRPT7",126,0)
 .W ?56,$J($P(BPRICE,U,6)/BPGCNT,10,2),?81,$J($P(BPRICE,U,7)/BPGCNT,10,2),?96,$J($P(BPRICE,U,2)/BPGCNT,10,2),?111,$J($P(BPRICE,U)/BPGCNT,10,2)
"RTN","BPSRPT7",127,0)
 ;
"RTN","BPSRPT7",128,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT7",129,0)
 .W !!,?84,"----------"
"RTN","BPSRPT7",130,0)
 .W !,"GRAND TOTALS",?84,$J(BPGBIL,10,2)
"RTN","BPSRPT7",131,0)
 .W !,"COUNT",?84,$J(BPGCNT,10)
"RTN","BPSRPT7",132,0)
 .W:BPGCNT !,"MEAN",?84,$J(BPGBIL/BPGCNT,10,2)
"RTN","BPSRPT7",133,0)
 Q
"RTN","BPSRPT7",134,0)
 ;
"RTN","BPSRPT7",135,0)
 ;Print Report Insurance Subtotals
"RTN","BPSRPT7",136,0)
 ;
"RTN","BPSRPT7",137,0)
ITOT(BPRTYPE,BPDIV,BPGRPLAN,BPTBIL,BPTINS,BPTCOLL,BPCNT,BPRICE) N BPNP
"RTN","BPSRPT7",138,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT7",139,0)
 .W !!,?83,"----------",?105,"----------",?122,"----------"
"RTN","BPSRPT7",140,0)
 .W !,"SUBTOTALS for INS:",$E(BPGRPLAN,1,50),?83,$J(BPTBIL,10,2),?105,$J(BPTINS,10,2),?122,$J(BPTCOLL,10,2)
"RTN","BPSRPT7",141,0)
 .W !,"COUNT",?83,$J(BPCNT,10),?105,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT7",142,0)
 .W:BPCNT !,"MEAN",?83,$J(BPTBIL/BPCNT,10,2),?105,$J(BPTINS/BPCNT,10,2),?122,$J(BPTCOLL/BPCNT,10,2)
"RTN","BPSRPT7",143,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT7",144,0)
 .W !!,?100,"----------",?122,"----------"
"RTN","BPSRPT7",145,0)
 .W !,"SUBTOTALS for INS:",$E(BPGRPLAN,1,50),?100,$J(BPTBIL,10,2),?122,$J(BPTINS,10,2)
"RTN","BPSRPT7",146,0)
 .W !,"COUNT",?100,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT7",147,0)
 .W:BPCNT !,"MEAN",?100,$J(BPTBIL/BPCNT,10,2),?122,$J(BPTINS/BPCNT,10,2)
"RTN","BPSRPT7",148,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT7",149,0)
 .W !!,?41,"----------"
"RTN","BPSRPT7",150,0)
 .W !,"SUBTOTALS for INS:",$E(BPGRPLAN,1,22),?41,$J(BPTBIL,10,2)
"RTN","BPSRPT7",151,0)
 .W !,"COUNT",?41,$J(BPCNT,10)
"RTN","BPSRPT7",152,0)
 .W:BPCNT !,"MEAN",?41,$J(BPTBIL/BPCNT,10,2)
"RTN","BPSRPT7",153,0)
 I (BPRTYPE=7) D  Q
"RTN","BPSRPT7",154,0)
 .W !!,"SUBTOTALS for INS:",$E(BPGRPLAN,1,50)
"RTN","BPSRPT7",155,0)
 .N BPBILR
"RTN","BPSRPT7",156,0)
 .S BPBILR="" F  S BPBILR=$O(BPCNT(BPBILR)) Q:BPBILR=""  D  Q:BPQ
"RTN","BPSRPT7",157,0)
 ..S BPNP=$$CHKP^BPSRPT5(1) Q:BPQ
"RTN","BPSRPT7",158,0)
 ..W !,?3,BPBILR,?65,$J($G(BPCNT(BPBILR)),5)
"RTN","BPSRPT7",159,0)
 .Q:$G(BPQ)
"RTN","BPSRPT7",160,0)
 .W !,?65,"-----"
"RTN","BPSRPT7",161,0)
 .W !,"CLOSED CLAIMS SUBTOTAL",?65,$J(BPCNT,5)
"RTN","BPSRPT7",162,0)
 I BPRTYPE=8 D  Q
"RTN","BPSRPT7",163,0)
 .W !!,?78,"----------",?100,"----------",?122,"----------"
"RTN","BPSRPT7",164,0)
 .W !,"SUBTOTALS for INS:",$E(BPGRPLAN,1,50),?78,$J(BPTBIL,10,2),?100,$J(BPTINS,10,2),?122,$J(BPTCOLL,10,2)
"RTN","BPSRPT7",165,0)
 .W !,?4,$J($P(BPRICE,U,3),10,2),?23,$J($P(BPRICE,U,4),10,2),?38,$J($P(BPRICE,U,5),10,2),?56,$J($P(BPRICE,U,6),10,2),?81,$J($P(BPRICE,U,7),10,2),?96,$J($P(BPRICE,U,2),10,2),?111,$J($P(BPRICE,U),10,2)
"RTN","BPSRPT7",166,0)
 .W !,"COUNT",?78,$J(BPCNT,10),?100,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT7",167,0)
 .W !,?4,$J(BPCNT,10),?23,$J(BPCNT,10),?38,$J(BPCNT,10),?56,$J(BPCNT,10),?81,$J(BPCNT,10),?96,$J(BPCNT,10),?111,$J(BPCNT,10)
"RTN","BPSRPT7",168,0)
 .W:BPCNT !,"MEAN",?78,$J(BPTBIL/BPCNT,10,2),?100,$J(BPTINS/BPCNT,10,2),?122,$J(BPTCOLL/BPCNT,10,2)
"RTN","BPSRPT7",169,0)
 .W !,?4,$J($P(BPRICE,U,3)/BPCNT,10,2),?23,$J($P(BPRICE,U,4)/BPCNT,10,2),?38,$J($P(BPRICE,U,5)/BPCNT,10,2),?56,$J($P(BPRICE,U,6)/BPCNT,10,2),?81,$J($P(BPRICE,U,7)/BPCNT,10,2),?96,$J($P(BPRICE,U,2)/BPCNT,10,2),?111,$J($P(BPRICE,U)/BPCNT,10,2)
"RTN","BPSRPT7",170,0)
 ;
"RTN","BPSRPT7",171,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT7",172,0)
 .W !!,?84,"----------"
"RTN","BPSRPT7",173,0)
 .W !,"SUBTOTALS for INS:",$E(BPGRPLAN,1,50),?84,$J(BPTBIL,10,2)
"RTN","BPSRPT7",174,0)
 .W !,"COUNT",?84,$J(BPCNT,10)
"RTN","BPSRPT7",175,0)
 .W:BPCNT !,"MEAN",?84,$J(BPTBIL/BPCNT,10,2)
"RTN","BPSRPT7",176,0)
 Q
"RTN","BPSRPT7",177,0)
 ;
"RTN","BPSRPT7",178,0)
 ;Get Close Reason
"RTN","BPSRPT7",179,0)
 ;
"RTN","BPSRPT7",180,0)
 ; Input Variable -> BP59 = ptr to BPS TRANSACTIONS
"RTN","BPSRPT7",181,0)
 ; Returned Value -> Claim Close Reason
"RTN","BPSRPT7",182,0)
 ;
"RTN","BPSRPT7",183,0)
CLRSN(BP59) N BP02,CIEN,CL
"RTN","BPSRPT7",184,0)
 S CL=""
"RTN","BPSRPT7",185,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT7",186,0)
 S CIEN=+$P($G(^BPSC(BP02,900)),U,4)
"RTN","BPSRPT7",187,0)
 I CIEN'=0 S CL=$$GETCLR^BPSRPT6(CIEN)
"RTN","BPSRPT7",188,0)
 Q CIEN_"^"_CL
"RTN","BPSRPT7",189,0)
 ;
"RTN","BPSRPT7",190,0)
 ;Get Reversal Reason
"RTN","BPSRPT7",191,0)
 ;
"RTN","BPSRPT7",192,0)
 ; Input Variable -> BP59 = ptr to BPS TRANSACTIONS
"RTN","BPSRPT7",193,0)
 ; Returned Value -> Claim Reversal Reason
"RTN","BPSRPT7",194,0)
 ;
"RTN","BPSRPT7",195,0)
RVSRSN(BP59) Q $P($G(^BPST(BP59,4)),U,4)
"RTN","BPSRPT7",196,0)
 ;
"RTN","BPSRPT7",197,0)
 ;Return the Billed Amount
"RTN","BPSRPT7",198,0)
 ;
"RTN","BPSRPT7",199,0)
BILLED(BP59) ;
"RTN","BPSRPT7",200,0)
 Q +$P($G(^BPST(BP59,5)),U,5)
"RTN","BPSRPT7",201,0)
 ;
"RTN","BPSRPT7",202,0)
 ;Return the Transaction Type - SUBMIT or REVERSAL
"RTN","BPSRPT7",203,0)
 ;
"RTN","BPSRPT7",204,0)
TTYPE(BPRX,BPREF,BPSEQ) N BPSTATUS,TTYPE
"RTN","BPSRPT7",205,0)
 S TTYPE="SUBMIT"
"RTN","BPSRPT7",206,0)
 S BPSTATUS=$$STATUS^BPSRPT6(BPRX,BPREF,$G(BPSEQ))
"RTN","BPSRPT7",207,0)
 I BPSTATUS["REVERSAL" S TTYPE="REVERSAL"
"RTN","BPSRPT7",208,0)
 Q TTYPE
"RTN","BPSRPT7",209,0)
 ;
"RTN","BPSRPT7",210,0)
 ;Return the payer response
"RTN","BPSRPT7",211,0)
 ;
"RTN","BPSRPT7",212,0)
RESPONSE(BPRX,BPREF,BPSEQ) Q $P($$STATUS^BPSRPT6(BPRX,BPREF,$G(BPSEQ)),U)
"RTN","BPSRPT7",213,0)
 ;
"RTN","BPSRPT7",214,0)
 ;Print Report Subtotals
"RTN","BPSRPT7",215,0)
 ;
"RTN","BPSRPT7",216,0)
TOTALS(BPRTYPE,BPDIV,BPTBIL,BPTINS,BPTCOLL,BPCNT,BPELTM,BPRICE) ;
"RTN","BPSRPT7",217,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT7",218,0)
 .W !!,?83,"----------",?105,"----------",?122,"----------"
"RTN","BPSRPT7",219,0)
 .W !,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,52),?83,$J(BPTBIL,10,2),?105,$J(BPTINS,10,2),?122,$J(BPTCOLL,10,2)
"RTN","BPSRPT7",220,0)
 .W !,"COUNT",?83,$J(BPCNT,10),?105,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT7",221,0)
 .W:BPCNT !,"MEAN",?83,$J(BPTBIL/BPCNT,10,2),?105,$J(BPTINS/BPCNT,10,2),?122,$J(BPTCOLL/BPCNT,10,2)
"RTN","BPSRPT7",222,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT7",223,0)
 .W !!,?100,"----------",?122,"----------"
"RTN","BPSRPT7",224,0)
 .W !,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,52),?100,$J(BPTBIL,10,2),?122,$J(BPTINS,10,2)
"RTN","BPSRPT7",225,0)
 .W !,"COUNT",?100,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT7",226,0)
 .W:BPCNT !,"MEAN",?100,$J(BPTBIL/BPCNT,10,2),?122,$J(BPTINS/BPCNT,10,2)
"RTN","BPSRPT7",227,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT7",228,0)
 .W !!,?41,"----------"
"RTN","BPSRPT7",229,0)
 .W !,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,22),?41,$J(BPTBIL,10,2)
"RTN","BPSRPT7",230,0)
 .W !,"COUNT",?41,$J(BPCNT,10)
"RTN","BPSRPT7",231,0)
 .W:BPCNT !,"MEAN",?41,$J(BPTBIL/BPCNT,10,2)
"RTN","BPSRPT7",232,0)
 I (BPRTYPE=5) D  Q
"RTN","BPSRPT7",233,0)
 .W !!,"SUBTOTALS for DIV: ",$E($$BPDIV(BPDIV),1,43),?65,"---------------"
"RTN","BPSRPT7",234,0)
 .W !,"TOTAL CLAIMS",?65,$J(BPCNT,15)
"RTN","BPSRPT7",235,0)
 .W !,"AVERAGE ELAPSED TIME PER CLAIM",?65,$J($S(BPCNT=0:"0",1:(BPELTM\BPCNT)),15)
"RTN","BPSRPT7",236,0)
 I (BPRTYPE=7) D  Q
"RTN","BPSRPT7",237,0)
 .W !!,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,43)
"RTN","BPSRPT7",238,0)
 .N BPBILR
"RTN","BPSRPT7",239,0)
 .S BPBILR="" F  S BPBILR=$O(BPCNT(BPBILR)) Q:BPBILR=""  D  Q:BPQ
"RTN","BPSRPT7",240,0)
 ..S NP=$$CHKP^BPSRPT5(1) Q:BPQ
"RTN","BPSRPT7",241,0)
 ..W !,?3,BPBILR,?65,$J($G(BPCNT(BPBILR)),5)
"RTN","BPSRPT7",242,0)
 .Q:$G(BPQ)
"RTN","BPSRPT7",243,0)
 .W !,?65,"-----"
"RTN","BPSRPT7",244,0)
 .W !,"CLOSED CLAIMS SUBTOTAL",?65,$J(BPCNT,5)
"RTN","BPSRPT7",245,0)
 I BPRTYPE=8 D  Q
"RTN","BPSRPT7",246,0)
 .W !!,?78,"----------",?100,"----------",?122,"----------"
"RTN","BPSRPT7",247,0)
 .W !,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,52),?78,$J(BPTBIL,10,2),?100,$J(BPTINS,10,2),?122,$J(BPTCOLL,10,2)
"RTN","BPSRPT7",248,0)
 .W !,?4,$J($P(BPRICE,U,3),10,2),?23,$J($P(BPRICE,U,4),10,2),?38,$J($P(BPRICE,U,5),10,2),?56,$J($P(BPRICE,U,6),10,2),?81,$J($P(BPRICE,U,7),10,2),?96,$J($P(BPRICE,U,2),10,2),?111,$J($P(BPRICE,U),10,2)
"RTN","BPSRPT7",249,0)
 .W !,"COUNT",?78,$J(BPCNT,10),?100,$J(BPCNT,10),?122,$J(BPCNT,10)
"RTN","BPSRPT7",250,0)
 .W !,?4,$J(BPCNT,10),?23,$J(BPCNT,10),?38,$J(BPCNT,10),?56,$J(BPCNT,10),?81,$J(BPCNT,10),?96,$J(BPCNT,10),?111,$J(BPCNT,10)
"RTN","BPSRPT7",251,0)
 .W:BPCNT !,"MEAN",?78,$J(BPTBIL/BPCNT,10,2),?100,$J(BPTINS/BPCNT,10,2),?122,$J(BPTCOLL/BPCNT,10,2)
"RTN","BPSRPT7",252,0)
 .W !,?4,$J($P(BPRICE,U,3)/BPCNT,10,2),?23,$J($P(BPRICE,U,4)/BPCNT,10,2),?38,$J($P(BPRICE,U,5)/BPCNT,10,2),?56,$J($P(BPRICE,U,6)/BPCNT,10,2),?81,$J($P(BPRICE,U,7)/BPCNT,10,2),?96,$J($P(BPRICE,U,2)/BPCNT,10,2),?111,$J($P(BPRICE,U)/BPCNT,10,2)
"RTN","BPSRPT7",253,0)
 ;
"RTN","BPSRPT7",254,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT7",255,0)
 .W !!,?84,"----------"
"RTN","BPSRPT7",256,0)
 .W !,"SUBTOTALS for DIV:",$E($$BPDIV(BPDIV),1,52),?84,$J(BPTBIL,10,2)
"RTN","BPSRPT7",257,0)
 .W !,"COUNT",?84,$J(BPCNT,10)
"RTN","BPSRPT7",258,0)
 .W:BPCNT !,"MEAN",?84,$J(BPTBIL/BPCNT,10,2)
"RTN","BPSRPT7",259,0)
 Q
"RTN","BPSRPT7",260,0)
 ;
"RTN","BPSRPT7",261,0)
 ;Print Report Header
"RTN","BPSRPT7",262,0)
 ; Input variables (passed in) - BPRTYPE -> number of report
"RTN","BPSRPT7",263,0)
 ;                             - BPRPTNAM -> report name
"RTN","BPSRPT7",264,0)
 ;                             - BPPAGE -> report page number
"RTN","BPSRPT7",265,0)
 ; Input variables (defined in BPSRPT0) - BPPHARM,BPSUMDET,BPNOW,BPMWC,BPRTBCK,BPINSINF
"RTN","BPSRPT7",266,0)
 ;                                        BPREJCD,BPCCRSN,BPAUTREV,BPACREJ,BPQSTDRG
"RTN","BPSRPT7",267,0)
 ;                                        BPDRUG,BPDRGCL,BPRESC,BPOPCL,BPRLNRL,
"RTN","BPSRPT7",268,0)
 ;                                        BPSORT,BPBEGDT,BPENDDT
"RTN","BPSRPT7",269,0)
 ; Output variable - BPSDATA -> Reset to 0 to show no actual data has been printed
"RTN","BPSRPT7",270,0)
 ;                           on the screen
"RTN","BPSRPT7",271,0)
 ;                   BPPAGE -> First set in BPSRPT0, report page number
"RTN","BPSRPT7",272,0)
 ;                   BPBLINE -> Controls whether to print a blank line
"RTN","BPSRPT7",273,0)
 ;                   
"RTN","BPSRPT7",274,0)
HDR(BPRTYPE,BPRPTNAM,BPPAGE) ;
"RTN","BPSRPT7",275,0)
 ;Display Excel Header
"RTN","BPSRPT7",276,0)
 I BPEXCEL D HDR^BPSRPT8(BPRTYPE) Q
"RTN","BPSRPT7",277,0)
 ;
"RTN","BPSRPT7",278,0)
 ; Define BPPDATA - Tells whether data has been displayed for a screen
"RTN","BPSRPT7",279,0)
 S BPSDATA=0
"RTN","BPSRPT7",280,0)
 S BPBLINE=""
"RTN","BPSRPT7",281,0)
 S BPPAGE=$G(BPPAGE)+1
"RTN","BPSRPT7",282,0)
 W @IOF
"RTN","BPSRPT7",283,0)
 W "ECME "_BPRPTNAM_" "_$S(BPSUMDET=1:"SUMMARY",1:"DETAIL")_" REPORT"
"RTN","BPSRPT7",284,0)
 I (",2,")'[BPRTYPE D
"RTN","BPSRPT7",285,0)
 . W ?89,"Print Date: "_$G(BPNOW)_"  Page:",$J(BPPAGE,3)
"RTN","BPSRPT7",286,0)
 . W !,"DIVISION(S): ",$$GETDIVS^BPSRPT4(72,.BPPHARM)
"RTN","BPSRPT7",287,0)
 . W ?86,"Fill Locations: "_$S(BPMWC="A":"C,M,W",1:BPMWC)
"RTN","BPSRPT7",288,0)
 ;
"RTN","BPSRPT7",289,0)
 I (",2,")[BPRTYPE D
"RTN","BPSRPT7",290,0)
 . W ?87,"Print Date: "_$G(BPNOW)_"  Page:",$J(BPPAGE,3)
"RTN","BPSRPT7",291,0)
 . W !,"DIVISION(S): ",$$GETDIVS^BPSRPT4(72,.BPPHARM)
"RTN","BPSRPT7",292,0)
 . W ?84,"Fill Locations: "_$S(BPMWC="A":"C,M,W",1:BPMWC)
"RTN","BPSRPT7",293,0)
 ;
"RTN","BPSRPT7",294,0)
 I (",1,2,3,4,7,")[BPRTYPE D
"RTN","BPSRPT7",295,0)
 . W ?110,"Fill Type: "
"RTN","BPSRPT7",296,0)
 . I BPRTBCK=1 W "RT,BB,P2,RS" Q
"RTN","BPSRPT7",297,0)
 . F I=1:1:$L(BPRTBCK,",") W:I'=1 "," S RTBCKX=$P(BPRTBCK,",",I) W $S(RTBCKX=2:"RT",RTBCKX=3:"BB",RTBCKX=4:"P2",RTBCKX=5:"RS",1:"")
"RTN","BPSRPT7",298,0)
 ;
"RTN","BPSRPT7",299,0)
 I (",1,2,3,4,7,9,")[BPRTYPE W !,"Insurance: "_$S(BPINSINF=0:"ALL",1:"SELECTED")
"RTN","BPSRPT7",300,0)
 ;
"RTN","BPSRPT7",301,0)
 I (",5,6,8,")[BPRTYPE D
"RTN","BPSRPT7",302,0)
 . W ?110,"Fill type: "_$S(BPRTBCK=2:"RT",BPRTBCK=3:"BB",BPRTBCK=4:"P2",BPRTBCK=5:"RS",1:"RT,BB,P2,RS")
"RTN","BPSRPT7",303,0)
 . W !,"Insurance: "_$S(BPINSINF=0:"ALL",1:$$BPINS(BPINSINF))
"RTN","BPSRPT7",304,0)
 ;
"RTN","BPSRPT7",305,0)
 I (",7,")[BPRTYPE W ?44,"Close Reason: ",$S(BPCCRSN'=0:"SELECTED",1:"ALL")
"RTN","BPSRPT7",306,0)
 I (",4,")[BPRTYPE D
"RTN","BPSRPT7",307,0)
 . W ?44,$J($S(BPAUTREV=0:"ALL",1:"AUTO"),4)," Reversals"
"RTN","BPSRPT7",308,0)
 . W ?60,$J($S(BPACREJ=1:"REJECTED",BPACREJ=2:"ACCEPTED",1:"ALL"),8)," Returned Status"
"RTN","BPSRPT7",309,0)
 ;
"RTN","BPSRPT7",310,0)
 I (",5,6,8,")[BPRTYPE W ?87,"Drugs/Classes: "_$S(BPQSTDRG=2:$$DRGNAM^BPSRPT6(BPDRUG,30),BPQSTDRG=3:$E(BPDRGCL,1,30),1:"ALL")
"RTN","BPSRPT7",311,0)
 I (",1,2,3,4,7,9,")[BPRTYPE  W ?87,"Drugs/Classes: "_$S(BPQSTDRG'=1:"SELECTED",1:"ALL")
"RTN","BPSRPT7",312,0)
 I (",2,")[BPRTYPE D
"RTN","BPSRPT7",313,0)
 . W !,"Reject Code: ",$S(BPREJCD'=0:"SELECTED",1:"ALL")
"RTN","BPSRPT7",314,0)
 . W ?87,"Eligibility: " D
"RTN","BPSRPT7",315,0)
 . . I BPELIG1=0 W "CVA,TRI,VET" Q
"RTN","BPSRPT7",316,0)
 . . S (ABVELIG,LIST,N)="" F  S N=$O(BPELIG1(N)) Q:N=""  D
"RTN","BPSRPT7",317,0)
 . . . S ABVELIG=$S(N="C":"CVA",N="T":"TRI",N="V":"VET",1:""),LIST=LIST_$G(ABVELIG)_","
"RTN","BPSRPT7",318,0)
 . . W $E(LIST,1,$L(LIST)-1)
"RTN","BPSRPT7",319,0)
 . W ?113,"Open/Closed: ",$S(BPOPCL=1:"CLOSED",BPOPCL=2:"OPEN",1:"ALL")
"RTN","BPSRPT7",320,0)
 . W !,"Prescriber: ",$S(BPRESC'=0:"SELECTED",1:"ALL")
"RTN","BPSRPT7",321,0)
 . W ?91,"Patient: ",$S(BPQSTPAT'=0:"SELECTED",1:"ALL")
"RTN","BPSRPT7",322,0)
 ;
"RTN","BPSRPT7",323,0)
 I (",1,3,4,7,9,")[BPRTYPE D
"RTN","BPSRPT7",324,0)
 . W !,"Eligibility: " D
"RTN","BPSRPT7",325,0)
 . . I BPELIG1=0 W "CVA,TRI,VET" Q  ; ALL was selected
"RTN","BPSRPT7",326,0)
 . . S (ABVELIG,LIST,N)="" F  S N=$O(BPELIG1(N)) Q:N=""  D
"RTN","BPSRPT7",327,0)
 . . . S ABVELIG=$S(N="C":"CVA",N="T":"TRI",N="V":"VET",1:""),LIST=LIST_$G(ABVELIG)_","
"RTN","BPSRPT7",328,0)
 . . W $E(LIST,1,$L(LIST)-1)
"RTN","BPSRPT7",329,0)
 . W ?91,"Patient: ",$S(BPQSTPAT'=0:"SELECTED",1:"ALL")
"RTN","BPSRPT7",330,0)
 ;
"RTN","BPSRPT7",331,0)
 I (",9,")[BPRTYPE W !,"NON-BILLABLE STATUS: "_$S(BPNBSTS=0:"ALL",1:$$NBSTS(.BPNBSTS))
"RTN","BPSRPT7",332,0)
 ;
"RTN","BPSRPT7",333,0)
 W !,$S(BPRTYPE=5:"PRESCRIPTIONS",BPRLNRL=2:"RELEASED PRESCRIPTIONS",BPRLNRL=3:"PRESCRIPTIONS (NOT RELEASED)",1:"ALL PRESCRIPTIONS")
"RTN","BPSRPT7",334,0)
 W " BY "_$S(BPRTYPE=7:"CLOSE",1:"TRANSACTION")_" DATE: "
"RTN","BPSRPT7",335,0)
 W "From "_$$DATTIM^BPSRPT1(BPBEGDT)_" through "_$$DATTIM^BPSRPT1($P(BPENDDT,"."))
"RTN","BPSRPT7",336,0)
 ;
"RTN","BPSRPT7",337,0)
 D ULINE^BPSRPT5("=") Q:$G(BPQ)
"RTN","BPSRPT7",338,0)
 D HEADLN1^BPSRPT4(BPRTYPE)
"RTN","BPSRPT7",339,0)
 D HEADLN2^BPSRPT4(BPRTYPE)
"RTN","BPSRPT7",340,0)
 D HEADLN3^BPSRPT4(BPRTYPE)
"RTN","BPSRPT7",341,0)
 D ULINE^BPSRPT5("=")
"RTN","BPSRPT7",342,0)
 ;
"RTN","BPSRPT7",343,0)
 ;Print Division
"RTN","BPSRPT7",344,0)
 I $G(BPDIV)]"" D
"RTN","BPSRPT7",345,0)
 .W !,"DIVISION: ",$S(BPDIV=0:"BLANK",BPDIV="ALL DIVISIONS":"ALL DIVISIONS",$$DIVNAME^BPSSCRDS(BPDIV)]"":$$DIVNAME^BPSSCRDS(BPDIV),1:BPDIV)
"RTN","BPSRPT7",346,0)
 .I BPRTYPE=5!(BPRTYPE=6)!(BPSUMDET=1)!(BPGRPLAN="") D ULINE^BPSRPT5("-")
"RTN","BPSRPT7",347,0)
 ;
"RTN","BPSRPT7",348,0)
 ;Print Insurance If Defined
"RTN","BPSRPT7",349,0)
 I BPSUMDET=0,$G(BPGRPLAN)]"",$G(BPGRPLAN)'=0,$G(BPGRPLAN)'="~" D WRPLAN^BPSRPT5(BPGRPLAN)
"RTN","BPSRPT7",350,0)
 Q
"RTN","BPSRPT7",351,0)
 ;
"RTN","BPSRPT7",352,0)
 ;Special Division Handling
"RTN","BPSRPT7",353,0)
 ;
"RTN","BPSRPT7",354,0)
BPDIV(BPDIV) Q $S(BPDIV=0:"BLANK",$$DIVNAME^BPSSCRDS(BPDIV)]"":$$DIVNAME^BPSSCRDS(BPDIV),1:BPDIV)
"RTN","BPSRPT7",355,0)
 ;
"RTN","BPSRPT7",356,0)
 ;Get selected insurance names based on user selection
"RTN","BPSRPT7",357,0)
 ;If length is greater than 68 append "..."
"RTN","BPSRPT7",358,0)
 ;Input: BPINSINF = Semi-colon separated list of file 36 IENs
"RTN","BPSRPT7",359,0)
 ;Output: comma separated list of related file 36 names
"RTN","BPSRPT7",360,0)
BPINS(BPINSINF) ;
"RTN","BPSRPT7",361,0)
 N BPINS,BPINAME,RETV
"RTN","BPSRPT7",362,0)
 S RETV=""
"RTN","BPSRPT7",363,0)
 F I=2:1 S BPINS=$P($G(BPINSINF),";",I) Q:BPINS=""  D
"RTN","BPSRPT7",364,0)
 . S BPINAME=$$INSNM^IBNCPDPI(BPINS) Q:BPINAME=""
"RTN","BPSRPT7",365,0)
 . I RETV'="" S RETV=RETV_", "_BPINAME Q
"RTN","BPSRPT7",366,0)
 . S RETV=BPINAME
"RTN","BPSRPT7",367,0)
 I $L(RETV)>68 S RETV=$E(RETV,1,68)_"..."
"RTN","BPSRPT7",368,0)
 Q RETV
"RTN","BPSRPT7",369,0)
 ;
"RTN","BPSRPT7",370,0)
ELIG(ELIG) ;
"RTN","BPSRPT7",371,0)
 ; Display multiple eligibilities
"RTN","BPSRPT7",372,0)
 ; Input:
"RTN","BPSRPT7",373,0)
 ;   ELIG - Array of multiple eligibilities
"RTN","BPSRPT7",374,0)
 ; Output
"RTN","BPSRPT7",375,0)
 ;   Text of eligibilities
"RTN","BPSRPT7",376,0)
 ;
"RTN","BPSRPT7",377,0)
 I $D(ELIG)=0 Q ""
"RTN","BPSRPT7",378,0)
 N N,LIST
"RTN","BPSRPT7",379,0)
 S LIST=""
"RTN","BPSRPT7",380,0)
 S N="" F  S N=$O(ELIG(N)) Q:N=""  D
"RTN","BPSRPT7",381,0)
 . S LIST=LIST_$G(ELIG(N))_","
"RTN","BPSRPT7",382,0)
 Q $E(LIST,1,$L(LIST)-1)
"RTN","BPSRPT7",383,0)
 ;
"RTN","BPSRPT7",384,0)
NBSTS(NBSTS) ;
"RTN","BPSRPT7",385,0)
 ; Display multiple non-billable statuses
"RTN","BPSRPT7",386,0)
 ; Input:
"RTN","BPSRPT7",387,0)
 ;   NBSTS - Array of multiple non-billable statuses
"RTN","BPSRPT7",388,0)
 ; Output
"RTN","BPSRPT7",389,0)
 ;   Text of non-billable statuses
"RTN","BPSRPT7",390,0)
 ;
"RTN","BPSRPT7",391,0)
 I $D(NBSTS)=0 Q ""
"RTN","BPSRPT7",392,0)
 N N,LIST
"RTN","BPSRPT7",393,0)
 S LIST=""
"RTN","BPSRPT7",394,0)
 S N="" F  S N=$O(NBSTS(N)) Q:N=""  D
"RTN","BPSRPT7",395,0)
 . S LIST=LIST_$G(NBSTS(N))_","
"RTN","BPSRPT7",396,0)
 Q $E(LIST,1,$L(LIST)-1)
"RTN","BPSRPT8")
0^12^B176758027
"RTN","BPSRPT8",1,0)
BPSRPT8 ;BHAM ISC/BEE - ECME REPORTS ;14-FEB-05
"RTN","BPSRPT8",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,5,7,8,10,11,19,20,23,24**;JUN 2004;Build 43
"RTN","BPSRPT8",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSRPT8",4,0)
 ;
"RTN","BPSRPT8",5,0)
 ;Reference to IB NCPCP NON-BILLABLE STATUS REASONS (#366.17) supported by ICR 6136
"RTN","BPSRPT8",6,0)
 ;
"RTN","BPSRPT8",7,0)
 Q
"RTN","BPSRPT8",8,0)
 ;
"RTN","BPSRPT8",9,0)
 ;Routine to Display the Reports in Excel
"RTN","BPSRPT8",10,0)
 ;
"RTN","BPSRPT8",11,0)
 ;Print Report Line 1
"RTN","BPSRPT8",12,0)
 ;
"RTN","BPSRPT8",13,0)
 ; Input Variable -> BPRTYPE,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT
"RTN","BPSRPT8",14,0)
 ;                   BPBIL,BPINS,BPCOLL
"RTN","BPSRPT8",15,0)
 ; 
"RTN","BPSRPT8",16,0)
WRLINE1(BPRTYPE,BPREC,BPDIV,BPGRPLAN,BPDFN,BPRX,BPREF,BPX,BPSRTDT,BPBIL,BPINS,BPCOLL,BPPSEQ) ;
"RTN","BPSRPT8",17,0)
 ;
"RTN","BPSRPT8",18,0)
 N BP59,BP02,BP03,BPREC2
"RTN","BPSRPT8",19,0)
 S BP59=$P(BPX,U,3)
"RTN","BPSRPT8",20,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT8",21,0)
 S BP03=+$P($G(^BPST(BP59,0)),U,5)
"RTN","BPSRPT8",22,0)
 ;Division
"RTN","BPSRPT8",23,0)
 I (",5,6,8,")[BPRTYPE S BPREC=$S(BPDIV=0:"BLANK",$$DIVNAME^BPSSCRDS(BPDIV)]"":$$DIVNAME^BPSSCRDS(BPDIV),1:BPDIV)_U
"RTN","BPSRPT8",24,0)
 I (",1,2,3,4,7,9,")[BPRTYPE S BPREC=$S(BPDIV=0:"BLANK",$$DIVNAME^BPSSCRDS(BPDIV)]"":$E($$DIVNAME^BPSSCRDS(BPDIV),1,12),1:$E(BPDIV,1,12))_U
"RTN","BPSRPT8",25,0)
 ;
"RTN","BPSRPT8",26,0)
 ;Insurance
"RTN","BPSRPT8",27,0)
 I BPRTYPE=8 S BPREC=BPREC_$E(BPGRPLAN,1,90)_U
"RTN","BPSRPT8",28,0)
 ;
"RTN","BPSRPT8",29,0)
 I (",1,2,3,4,7,9,")[BPRTYPE D
"RTN","BPSRPT8",30,0)
 . S BPREC=BPREC_$E(BPGRPLAN,1,21)_U ;Insurance
"RTN","BPSRPT8",31,0)
 . I BPRTYPE=2 S BPREC=BPREC_$$INSBIN^BPSRPT6(BP59)_U ;BIN
"RTN","BPSRPT8",32,0)
 . S BPREC=BPREC_$E($$PATNAME^BPSRPT6(BPDFN),1,13)_U  ;Patient Name
"RTN","BPSRPT8",33,0)
 . S BPREC=BPREC_$$SSN4^BPSRPT6(BPDFN)_U ;L4SSN
"RTN","BPSRPT8",34,0)
 ;
"RTN","BPSRPT8",35,0)
 I (",5,6,8,")[BPRTYPE D
"RTN","BPSRPT8",36,0)
 . S BPREC=BPREC_$$PATNAME^BPSRPT6(BPDFN)_U  ;Patient Name
"RTN","BPSRPT8",37,0)
 . S BPREC=BPREC_"("_$$SSN4^BPSRPT6(BPDFN)_")"_U ;L4SSN
"RTN","BPSRPT8",38,0)
 ;
"RTN","BPSRPT8",39,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT8",40,0)
 . N PTRESP
"RTN","BPSRPT8",41,0)
 . S BPREC=BPREC_$$ELIGCODE^BPSSCR05($P(BPX,U,3))_U ;Eligibility
"RTN","BPSRPT8",42,0)
 . S BPREC=BPREC_$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)_U ;RX Number
"RTN","BPSRPT8",43,0)
 . S BPREC=BPREC_BPREF_"/"_$$ECMENUM^BPSRPT1($P(BPX,U,3))_U ;Refill/ECME Number
"RTN","BPSRPT8",44,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(BPSRTDT)_U  ;Date
"RTN","BPSRPT8",45,0)
 . S BPREC=BPREC_$$INGRCST^BPSSCRLG(BP02)_U  ;Ingredient Cost
"RTN","BPSRPT8",46,0)
 . S BPREC=BPREC_$$DISPFEE^BPSSCRLG(BP02)_U  ;Dispensing Fee
"RTN","BPSRPT8",47,0)
 . S BPREC=BPREC_$TR($J(BPBIL,10,2)," ")_U ;$Billed
"RTN","BPSRPT8",48,0)
 . S BPREC=BPREC_$$ICPAID^BPSSCRLG(BP03)_U  ;Ingredient Cost Paid
"RTN","BPSRPT8",49,0)
 . S BPREC=BPREC_$$DFPAID^BPSSCRLG(BP03)_U  ;Dispensing Fee Paid
"RTN","BPSRPT8",50,0)
 . S PTRESP=$$PTRESP^BPSSCRLG(BP03) S BPREC=BPREC_$S('PTRESP:PTRESP,1:"-"_PTRESP)_U  ;Patient Pay Amount
"RTN","BPSRPT8",51,0)
 . S BPREC=BPREC_$TR($J(BPINS,10,2)," ")_U ;$Ins. Paid
"RTN","BPSRPT8",52,0)
 . S BPREC=BPREC_$S(BPCOLL]"":$TR($J(BPCOLL,10,2)," "),1:"")_U ;$Collected
"RTN","BPSRPT8",53,0)
 ;
"RTN","BPSRPT8",54,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT8",55,0)
 . S BPREC=BPREC_$$ELIGCODE^BPSSCR05($P(BPX,U,3))_U ;Eligibility
"RTN","BPSRPT8",56,0)
 . S BPREC=BPREC_$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)_U ;RX Number
"RTN","BPSRPT8",57,0)
 . S BPREC=BPREC_BPREF_"/"_$$ECMENUM^BPSRPT1($P(BPX,U,3))_U ;Refill/ECME Number
"RTN","BPSRPT8",58,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(BPSRTDT)_U ;Date
"RTN","BPSRPT8",59,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(+BPX)_U  ;Released On
"RTN","BPSRPT8",60,0)
 . ;RX INFO
"RTN","BPSRPT8",61,0)
 . S BPREC=BPREC_$$MWC^BPSRPT6(BPRX,BPREF)_U ;Fill Location
"RTN","BPSRPT8",62,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U  ;Fill Type
"RTN","BPSRPT8",63,0)
 . S BPREC=BPREC_$$RXSTATUS^BPSRPT6($P(BPX,U,3)) ;Status
"RTN","BPSRPT8",64,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/R",1:"/N")_U ;RL/NR
"RTN","BPSRPT8",65,0)
 . S BPREC=BPREC_$$RXCOB($G(BPPSEQ))_U
"RTN","BPSRPT8",66,0)
 . S BPREC=BPREC_$S($$CLOSED02^BPSSCR03($P(^BPST($P(BPX,U,3),0),U,4))=1:"C",1:"O")_U ;Open/Closed
"RTN","BPSRPT8",67,0)
 ;
"RTN","BPSRPT8",68,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT8",69,0)
 . N PTRESP
"RTN","BPSRPT8",70,0)
 . S BPREC=BPREC_$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)_U ;RX Number
"RTN","BPSRPT8",71,0)
 . S BPREC=BPREC_BPREF_"/"_$$ECMENUM^BPSRPT1($P(BPX,U,3))_U ;Refill/ECME Number
"RTN","BPSRPT8",72,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(BPSRTDT)_U ;Date
"RTN","BPSRPT8",73,0)
 . S BPREC=BPREC_$$INGRCST^BPSSCRLG(BP02)_U  ;Ingredient Cost
"RTN","BPSRPT8",74,0)
 . S BPREC=BPREC_$$DISPFEE^BPSSCRLG(BP02)_U  ;Dispensing Fee
"RTN","BPSRPT8",75,0)
 . S BPREC=BPREC_$TR($J(BPBIL,10,2)," ")_U ;$Billed
"RTN","BPSRPT8",76,0)
 . S BPREC=BPREC_$$ICPAID^BPSSCRLG(BP03)_U  ;Ingredient Cost Paid
"RTN","BPSRPT8",77,0)
 . S BPREC=BPREC_$$DFPAID^BPSSCRLG(BP03)_U  ;Dispensing Fee Paid
"RTN","BPSRPT8",78,0)
 . S PTRESP=$$PTRESP^BPSSCRLG(BP03) S BPREC=BPREC_$S('PTRESP:PTRESP,1:"-"_PTRESP)_U  ;Patient Pay Amount
"RTN","BPSRPT8",79,0)
 . S BPREC=BPREC_$TR($J(BPINS,10,2)," ")_U ;Insurance Response
"RTN","BPSRPT8",80,0)
 ;
"RTN","BPSRPT8",81,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT8",82,0)
 . S BPREC=BPREC_$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)_U ;RX Number
"RTN","BPSRPT8",83,0)
 . S BPREC=BPREC_BPREF_"/"_$$ECMENUM^BPSRPT1($P(BPX,U,3))_U ;Refill/ECME Number
"RTN","BPSRPT8",84,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1($$TRANDT^BPSRPT2($P(BPX,U,3),1))_U ;Completed
"RTN","BPSRPT8",85,0)
 . S BPREC=BPREC_$$TTYPE^BPSRPT7($P(BPX,U,4),$P(BPX,U,5),BPPSEQ)_U ;Trans Type
"RTN","BPSRPT8",86,0)
 . S BPREC=BPREC_$$RESPONSE^BPSRPT7($P(BPX,U,4),$P(BPX,U,5),BPPSEQ)_U ;Payer Response
"RTN","BPSRPT8",87,0)
 . S BPREC=BPREC_$$RXCOB($G(BPPSEQ))_U ;RX COB
"RTN","BPSRPT8",88,0)
 ;
"RTN","BPSRPT8",89,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT8",90,0)
 . ;RX INFO
"RTN","BPSRPT8",91,0)
 . S BPREC=BPREC_$$ELIGCODE^BPSSCR05($P(BPX,U,3))_U ;Eligibility
"RTN","BPSRPT8",92,0)
 . S BPREC=BPREC_$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)_U ;RX Number
"RTN","BPSRPT8",93,0)
 . S BPREC=BPREC_BPREF_"/"_$$ECMENUM^BPSRPT1($P(BPX,U,3))_U ;Refill/ECME Number
"RTN","BPSRPT8",94,0)
 . S BPREC=BPREC_$$MWC^BPSRPT6(BPRX,BPREF)_U ;Fill Location
"RTN","BPSRPT8",95,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U ;Fill Type
"RTN","BPSRPT8",96,0)
 . S BPREC=BPREC_$$RXSTATUS^BPSRPT6($P(BPX,U,3)) ;Status
"RTN","BPSRPT8",97,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/R",1:"/N")_U ;RL/NR
"RTN","BPSRPT8",98,0)
 . S BPREC=BPREC_$S($P(BPX,U,13):"REJ",1:"")_U
"RTN","BPSRPT8",99,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),15)_U ;Drug
"RTN","BPSRPT8",100,0)
 . S BPREC=BPREC_$TR($$GETNDC^BPSRPT6(BPRX,BPREF),"-")_U
"RTN","BPSRPT8",101,0)
 ;
"RTN","BPSRPT8",102,0)
 I (BPRTYPE=8) D  Q
"RTN","BPSRPT8",103,0)
 . S BPREC=BPREC_$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)_U ;RX Number
"RTN","BPSRPT8",104,0)
 . S BPREC=BPREC_BPREF_"/"_$$ECMENUM^BPSRPT1($P(BPX,U,3))_U ;Refill/ECME Number
"RTN","BPSRPT8",105,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(BPSRTDT)_U  ;Date
"RTN","BPSRPT8",106,0)
 . S BPREC=BPREC_$TR($J(BPBIL,10,2)," ")_U ;$Billed
"RTN","BPSRPT8",107,0)
 . S BPREC=BPREC_$TR($J(BPINS,10,2)," ")_U ;$Ins. Paid
"RTN","BPSRPT8",108,0)
 . S BPREC=BPREC_$S(BPCOLL]"":$TR($J(BPCOLL,10,2)," "),1:"")_U ;$Collected
"RTN","BPSRPT8",109,0)
 ;
"RTN","BPSRPT8",110,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT8",111,0)
 . N ELGCD S ELGCD=$P(BPX,U,1)
"RTN","BPSRPT8",112,0)
 . S BPREC=BPREC_$S(ELGCD="V":"VET",ELGCD="T":"TRI",ELGCD="C":"CVA",1:"UNK")_U
"RTN","BPSRPT8",113,0)
 . S BPREC=BPREC_$$RXNUM^BPSRPT6(BPRX)_$$COPAY^BPSRPT6(BPRX)_U ;RX Number
"RTN","BPSRPT8",114,0)
 . S BPREC=BPREC_BPREF_U                      ;Refill
"RTN","BPSRPT8",115,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(BPSRTDT)_U  ;Date
"RTN","BPSRPT8",116,0)
 . S BPREC=BPREC_$S($P(BPX,U,2)]"":$TR($J($P(BPX,U,2),10,2)," "),1:"")_U ;$Drug Cost
"RTN","BPSRPT8",117,0)
 Q
"RTN","BPSRPT8",118,0)
 ;
"RTN","BPSRPT8",119,0)
 ;Print Report Line 2
"RTN","BPSRPT8",120,0)
 ;
"RTN","BPSRPT8",121,0)
 ; Input Variable -> BPRTYPE,BPX,BPRX,BPREF,BPBIL,BPGRPLAN
"RTN","BPSRPT8",122,0)
 ; 
"RTN","BPSRPT8",123,0)
WRLINE2(BPRTYPE,BPREC,BPX,BPRX,BPREF,BPBIL,BPGRPLAN,BPPSEQ) ;
"RTN","BPSRPT8",124,0)
 N BP59,BP02
"RTN","BPSRPT8",125,0)
 S BP59=$P(BPX,U,3)
"RTN","BPSRPT8",126,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSRPT8",127,0)
 ;
"RTN","BPSRPT8",128,0)
 I (BPRTYPE=1)!(BPRTYPE=4) D  Q
"RTN","BPSRPT8",129,0)
 . ;Drug
"RTN","BPSRPT8",130,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),15)_U
"RTN","BPSRPT8",131,0)
 . S BPREC=BPREC_$TR($$GETNDC^BPSRPT6(BPRX,BPREF),"-")_U ;Released On
"RTN","BPSRPT8",132,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(+BPX)_U
"RTN","BPSRPT8",133,0)
 . ;RX INFO
"RTN","BPSRPT8",134,0)
 . S BPREC=BPREC_$$MWC^BPSRPT6(BPRX,BPREF)_U ;Fill Location
"RTN","BPSRPT8",135,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U ;Fill Type
"RTN","BPSRPT8",136,0)
 . S BPREC=BPREC_$$RXSTATUS^BPSRPT6($P(BPX,U,3)) ;Status
"RTN","BPSRPT8",137,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/R",1:"/N")_U ;RL/NR
"RTN","BPSRPT8",138,0)
 . I BPRTYPE=4 S BPREC=BPREC_$$RXCOB($G(BPPSEQ))_U
"RTN","BPSRPT8",139,0)
 . S BPREC=BPREC_$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT8",140,0)
 . I BPRTYPE=1 S BPREC=BPREC_U_$$BILL^BPSRPT6(BPRX,BPREF,BPPSEQ)_U_$$RXCOB($G(BPPSEQ)) ;Bill # and RX COB
"RTN","BPSRPT8",141,0)
 ;
"RTN","BPSRPT8",142,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT8",143,0)
 . S BPREC=BPREC_$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,10)_U ;Group ID
"RTN","BPSRPT8",144,0)
 . S BPREC=BPREC_$$INGRCST^BPSSCRLG(BP02)_U  ;Ingredient Cost
"RTN","BPSRPT8",145,0)
 . S BPREC=BPREC_$$DISPFEE^BPSSCRLG(BP02)_U  ;Dispensing Fee
"RTN","BPSRPT8",146,0)
 . S BPREC=BPREC_$TR($J(BPBIL,10,2)," ")_U ;$Billed
"RTN","BPSRPT8",147,0)
 . S BPREC=BPREC_$$QTY^BPSRPT6($P(BPX,U,3))_U ;Qty
"RTN","BPSRPT8",148,0)
 . S BPREC=BPREC_$$GETNDC^BPSRPT6(BPRX,BPREF)_U ;NDC#
"RTN","BPSRPT8",149,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),15)_U ;Drug
"RTN","BPSRPT8",150,0)
 ;
"RTN","BPSRPT8",151,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT8",152,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),15)_U ;Drug
"RTN","BPSRPT8",153,0)
 . S BPREC=BPREC_$TR($$GETNDC^BPSRPT6(BPRX,BPREF),"-")_U
"RTN","BPSRPT8",154,0)
 . ;RX INFO
"RTN","BPSRPT8",155,0)
 . S BPREC=BPREC_$$MWC^BPSRPT6(BPRX,BPREF)_U ;Fill Location
"RTN","BPSRPT8",156,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U ;Fill Type
"RTN","BPSRPT8",157,0)
 . S BPREC=BPREC_$$RXSTATUS^BPSRPT6($P(BPX,U,3)) ;Status
"RTN","BPSRPT8",158,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/R",1:"/N")_U ;RL/NR
"RTN","BPSRPT8",159,0)
 . S BPREC=BPREC_$$RXCOB($G(BPPSEQ))_U
"RTN","BPSRPT8",160,0)
 . S BPREC=BPREC_$$ELIGCODE^BPSSCR05($P(BPX,U,3))_U ;Eligibility
"RTN","BPSRPT8",161,0)
 . S BPREC=BPREC_$S($P(BPX,U,13):"REJ",1:"")
"RTN","BPSRPT8",162,0)
 ;
"RTN","BPSRPT8",163,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT8",164,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),32)_U ;Drug
"RTN","BPSRPT8",165,0)
 . S BPREC=BPREC_$TR($$GETNDC^BPSRPT6(BPRX,BPREF),"-")_U
"RTN","BPSRPT8",166,0)
 . ;RX INFO
"RTN","BPSRPT8",167,0)
 . S BPREC=BPREC_$$MWC^BPSRPT6(BPRX,BPREF)_U ;Fill Location
"RTN","BPSRPT8",168,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_U ;Fill Type
"RTN","BPSRPT8",169,0)
 . S BPREC=BPREC_$$RXSTATUS^BPSRPT6($P(BPX,U,3)) ;Status
"RTN","BPSRPT8",170,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/R",1:"/N")_U ;RL/NR
"RTN","BPSRPT8",171,0)
 . S BPREC=BPREC_$S($P(BPX,U,13):"REJ",1:"")_U
"RTN","BPSRPT8",172,0)
 . I $P(BPGRPLAN,U,2)]"" S BPREC=BPREC_$E($P(BPGRPLAN,U,2),1,30) ;Insurance
"RTN","BPSRPT8",173,0)
 . S BPREC=BPREC_U_$$ELAPSE^BPSRPT6($P(BPX,U,3))  ;Elapsed Time
"RTN","BPSRPT8",174,0)
 ;
"RTN","BPSRPT8",175,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT8",176,0)
 . S BPREC=BPREC_$E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,10)_U  ;Group ID
"RTN","BPSRPT8",177,0)
 . S BPREC=BPREC_$TR($J(BPBIL,10,2)," ")_U ;$Billed
"RTN","BPSRPT8",178,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1(+$$CLOSEDT^BPSRPT2(+$P(BPX,U,3)))_U ;Close Dt/Time
"RTN","BPSRPT8",179,0)
 . S BPREC=BPREC_$E($$CLSBY^BPSRPT6(+$P(BPX,U,3)),1,25)_U ;Close By
"RTN","BPSRPT8",180,0)
 . S BPREC=BPREC_$E($P($$CLRSN^BPSRPT7(+$P(BPX,U,3)),U,2),1,30)_U ;Close Reason
"RTN","BPSRPT8",181,0)
 ;
"RTN","BPSRPT8",182,0)
 I BPRTYPE=8 D  Q
"RTN","BPSRPT8",183,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,14),27)_U ;Drug
"RTN","BPSRPT8",184,0)
 . S BPREC=BPREC_$$MWC^BPSRPT6(BPRX,BPREF)_" " ;Fill Location
"RTN","BPSRPT8",185,0)
 . S BPREC=BPREC_$$RTBCKNAM^BPSRPT1($$RTBCK^BPSRPT1($P(BPX,U,3)))_" " ;Fill Type
"RTN","BPSRPT8",186,0)
 . S BPREC=BPREC_$$RXSTATUS^BPSRPT6($P(BPX,U,3)) ;Status
"RTN","BPSRPT8",187,0)
 . S BPREC=BPREC_$S($P(BPX,U):"/R",1:"/N")_U ;RL/NR
"RTN","BPSRPT8",188,0)
 . S BPREC=BPREC_$TR($E($$GRPID^BPSRPT2(+$P(BPX,U,3)),3,10)," ","")_U  ;Group ID
"RTN","BPSRPT8",189,0)
 . S BPREC=BPREC_$E(BPGRPLAN,1,30)_U ;Insurance
"RTN","BPSRPT8",190,0)
 . S BPREC=BPREC_$$BILL^BPSRPT6(BPRX,BPREF,BPPSEQ)_U ;Bill#
"RTN","BPSRPT8",191,0)
 ;
"RTN","BPSRPT8",192,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT8",193,0)
 . S BPREC=BPREC_$$DRGNAM^BPSRPT6($P(BPX,U,4),15)_U  ;Drug
"RTN","BPSRPT8",194,0)
 . S BPREC=BPREC_$TR($$GETNDC^BPSRPT6(BPRX,BPREF),"-")_U ;NDC
"RTN","BPSRPT8",195,0)
 . S BPREC=BPREC_$$DATTIM^BPSRPT1($P(BPX,U,5))_U  ;Release Date
"RTN","BPSRPT8",196,0)
 . S BPREC=BPREC_$$MWC^BPSRPT6(BPRX,BPREF)_U      ;Fill Location
"RTN","BPSRPT8",197,0)
 . S BPREC=BPREC_$$RXSTANAM^BPSSCRU2($P(BPX,U,6)) ;Status
"RTN","BPSRPT8",198,0)
 . S BPREC=BPREC_$S($P(BPX,U,5):"/R",1:"/N")_U    ;RL/NR
"RTN","BPSRPT8",199,0)
 . S BPREC=BPREC_$$GET1^DIQ(366.17,$P(BPX,U,7),.01,"E")  ;Non-Billable Status Reason - ICR 6136
"RTN","BPSRPT8",200,0)
 Q
"RTN","BPSRPT8",201,0)
 ;
"RTN","BPSRPT8",202,0)
 ;Print Report Line 3
"RTN","BPSRPT8",203,0)
 ;
"RTN","BPSRPT8",204,0)
 ; Input Variable -> BPRTYPE,BPX
"RTN","BPSRPT8",205,0)
 ; 
"RTN","BPSRPT8",206,0)
WRLINE3(BPRTYPE,BPREC,BPX) ;
"RTN","BPSRPT8",207,0)
 N BP59,BPSARR,BPRJCNT,BPRJEXP,BPZZ,BPRICE
"RTN","BPSRPT8",208,0)
 S BP59=+$P(BPX,U,3)
"RTN","BPSRPT8",209,0)
 ;
"RTN","BPSRPT8",210,0)
 I (",7,")[BPRTYPE D  Q
"RTN","BPSRPT8",211,0)
 . S BPREC=BPREC_$$CLAIMID^BPSRPT2(BP59)_U ;Claim ID
"RTN","BPSRPT8",212,0)
 . S BPRJCNT=$$REJTEXT^BPSRPT2(BP59,.BPSARR)
"RTN","BPSRPT8",213,0)
 . S BPREC=BPREC_$S(BPRJCNT>1:"Y",1:"N") ;Mult Rej
"RTN","BPSRPT8",214,0)
 . ;Write one record per reject/close code
"RTN","BPSRPT8",215,0)
 . S:+BPRJCNT=0 BPRJCNT=1
"RTN","BPSRPT8",216,0)
 . F BPZZ=1:1:BPRJCNT D
"RTN","BPSRPT8",217,0)
 . . S BPREC2=$G(BPREC)_U_$P($G(BPSARR(BPZZ)),":")_U_$P($G(BPSARR(BPZZ)),":",2) W !,$E(BPREC2,1,255)
"RTN","BPSRPT8",218,0)
 ;
"RTN","BPSRPT8",219,0)
 I (",2,")[BPRTYPE D  Q
"RTN","BPSRPT8",220,0)
 . S BPREC=BPREC_$P($$PRESCIN^BPSRPT6($P(BPX,U,3)),U)_U ;Prescriber ID
"RTN","BPSRPT8",221,0)
 . S BPREC=BPREC_$E($P($$PRESCIN^BPSRPT6($P(BPX,U,3)),U,2),1,13)_U ;Prescriber Name (truncated to 13)
"RTN","BPSRPT8",222,0)
 . S BPRJCNT=$$REJTEXT^BPSRPT2(BP59,.BPSARR)
"RTN","BPSRPT8",223,0)
 . S BPREC=BPREC_$S(BPRJCNT>1:"Y",1:"N") ;Mult Rej
"RTN","BPSRPT8",224,0)
 . ;Write one record per reject/close code
"RTN","BPSRPT8",225,0)
 . S:+BPRJCNT=0 BPRJCNT=1
"RTN","BPSRPT8",226,0)
 . F BPZZ=1:1:BPRJCNT S BPREC2="" D
"RTN","BPSRPT8",227,0)
 . . S BPREC2=$G(BPREC)_U_$P($G(BPSARR(BPZZ)),":")_U_$P($G(BPSARR(BPZZ)),":",2) W !,$E(BPREC2,1,255)
"RTN","BPSRPT8",228,0)
 ;
"RTN","BPSRPT8",229,0)
 I BPRTYPE=4 D
"RTN","BPSRPT8",230,0)
 . ;Method
"RTN","BPSRPT8",231,0)
 . I $$AUTOREV^BPSRPT1(BP59) S BPREC=BPREC_U_"AUTO"_U
"RTN","BPSRPT8",232,0)
 . E  S BPREC=BPREC_U_"REGULAR"_U
"RTN","BPSRPT8",233,0)
 . ;Return Status
"RTN","BPSRPT8",234,0)
 . I $P(BPX,U,15)["ACCEPTED" S BPREC=BPREC_"ACCEPTED"_U
"RTN","BPSRPT8",235,0)
 . E  S BPREC=BPREC_"REJECTED"_U
"RTN","BPSRPT8",236,0)
 . ;Reason
"RTN","BPSRPT8",237,0)
 . S BPREC=BPREC_$$RVSRSN^BPSRPT7(+$P(BPX,U,3))
"RTN","BPSRPT8",238,0)
 ;
"RTN","BPSRPT8",239,0)
 I BPRTYPE=8 D
"RTN","BPSRPT8",240,0)
 . S BPRICE=$$PRICEVAL^BPSRPT5(BP59)
"RTN","BPSRPT8",241,0)
 . S BPREC=BPREC_$P($G(BPRICE),U,3)_U
"RTN","BPSRPT8",242,0)
 . S BPREC=BPREC_$P($G(BPRICE),U,4)_U
"RTN","BPSRPT8",243,0)
 . S BPREC=BPREC_$P($G(BPRICE),U,5)_U
"RTN","BPSRPT8",244,0)
 . S BPREC=BPREC_$P($G(BPRICE),U,6)_U
"RTN","BPSRPT8",245,0)
 . S BPREC=BPREC_$P($G(BPRICE),U,7)_U
"RTN","BPSRPT8",246,0)
 . S BPREC=BPREC_$P($G(BPRICE),U,2)_U
"RTN","BPSRPT8",247,0)
 . S BPREC=BPREC_$P($G(BPRICE),U,1)_U
"RTN","BPSRPT8",248,0)
 ;
"RTN","BPSRPT8",249,0)
 ;Write the record
"RTN","BPSRPT8",250,0)
 I (",1,3,4,9,")[BPRTYPE W !,$E(BPREC,1,255) Q
"RTN","BPSRPT8",251,0)
 W !,$G(BPREC)
"RTN","BPSRPT8",252,0)
 Q
"RTN","BPSRPT8",253,0)
 ;
"RTN","BPSRPT8",254,0)
 ;Print Excel Header
"RTN","BPSRPT8",255,0)
 ;
"RTN","BPSRPT8",256,0)
HDR(BPRTYPE) ;
"RTN","BPSRPT8",257,0)
 ;
"RTN","BPSRPT8",258,0)
 ;Check if header already printed
"RTN","BPSRPT8",259,0)
 I $G(BPSDATA) Q
"RTN","BPSRPT8",260,0)
 S BPSDATA=1
"RTN","BPSRPT8",261,0)
 ;
"RTN","BPSRPT8",262,0)
 ;Division
"RTN","BPSRPT8",263,0)
 W !,"DIVISION",U
"RTN","BPSRPT8",264,0)
 ;
"RTN","BPSRPT8",265,0)
 I BPRTYPE'=5,BPRTYPE'=6 W "INSURANCE",U
"RTN","BPSRPT8",266,0)
 I (",2,")[BPRTYPE W "BIN",U
"RTN","BPSRPT8",267,0)
 ;
"RTN","BPSRPT8",268,0)
 I (",5,8,")[BPRTYPE W "PATIENT NAME",U,"Pt.ID",U
"RTN","BPSRPT8",269,0)
 I (",1,2,3,4,7,9,")[BPRTYPE W "PATIENT",U,"Pt.ID",U
"RTN","BPSRPT8",270,0)
 ;
"RTN","BPSRPT8",271,0)
 I BPRTYPE=1 D  Q
"RTN","BPSRPT8",272,0)
 . W "ELIG",U
"RTN","BPSRPT8",273,0)
 . W "RX#",U
"RTN","BPSRPT8",274,0)
 . W "REF/ECME#",U
"RTN","BPSRPT8",275,0)
 . W "DATE",U
"RTN","BPSRPT8",276,0)
 . W "VA ING. COST",U
"RTN","BPSRPT8",277,0)
 . W "VA DISP. FEE",U
"RTN","BPSRPT8",278,0)
 . W "$BILLED",U
"RTN","BPSRPT8",279,0)
 . W "INGREDIENT COST PAID",U
"RTN","BPSRPT8",280,0)
 . W "DISPENSING FEE PAID",U
"RTN","BPSRPT8",281,0)
 . W "PATIENT RESP (INS)",U
"RTN","BPSRPT8",282,0)
 . W "$INS RESPONSE",U
"RTN","BPSRPT8",283,0)
 . W "$COLLECT",U
"RTN","BPSRPT8",284,0)
 . W "DRUG",U
"RTN","BPSRPT8",285,0)
 . W "NDC",U
"RTN","BPSRPT8",286,0)
 . W "RELEASED",U
"RTN","BPSRPT8",287,0)
 . W "LOCATION",U
"RTN","BPSRPT8",288,0)
 . W "TYPE",U
"RTN","BPSRPT8",289,0)
 . W "STATUS",U
"RTN","BPSRPT8",290,0)
 . W "REJECTED",U
"RTN","BPSRPT8",291,0)
 . W "BILL#",U
"RTN","BPSRPT8",292,0)
 . W "COB"
"RTN","BPSRPT8",293,0)
 ;
"RTN","BPSRPT8",294,0)
 I BPRTYPE=4 D  Q
"RTN","BPSRPT8",295,0)
 . W "ELIG",U
"RTN","BPSRPT8",296,0)
 . W "RX#",U
"RTN","BPSRPT8",297,0)
 . W "REF/ECME#",U
"RTN","BPSRPT8",298,0)
 . W "DATE",U
"RTN","BPSRPT8",299,0)
 . W "VA ING. COST",U
"RTN","BPSRPT8",300,0)
 . W "VA DISP. FEE",U
"RTN","BPSRPT8",301,0)
 . W "$BILLED",U
"RTN","BPSRPT8",302,0)
 . W "ING. COST PAID",U
"RTN","BPSRPT8",303,0)
 . W "DIS. FEE PAID",U
"RTN","BPSRPT8",304,0)
 . W "PATIENT RESP (INS)",U
"RTN","BPSRPT8",305,0)
 . W "$INS RESPONSE",U
"RTN","BPSRPT8",306,0)
 . W "$COLLECT",U
"RTN","BPSRPT8",307,0)
 . W "DRUG",U
"RTN","BPSRPT8",308,0)
 . W "NDC",U
"RTN","BPSRPT8",309,0)
 . W "RELEASED",U
"RTN","BPSRPT8",310,0)
 . W "LOCATION",U
"RTN","BPSRPT8",311,0)
 . W "TYPE",U
"RTN","BPSRPT8",312,0)
 . W "STATUS",U
"RTN","BPSRPT8",313,0)
 . W "COB",U
"RTN","BPSRPT8",314,0)
 . W "REJECTED",U
"RTN","BPSRPT8",315,0)
 . W "REVERSAL METHOD",U
"RTN","BPSRPT8",316,0)
 . W "RETURN STATUS",U
"RTN","BPSRPT8",317,0)
 . W "REASON"
"RTN","BPSRPT8",318,0)
 ;
"RTN","BPSRPT8",319,0)
 I BPRTYPE=2 D  Q
"RTN","BPSRPT8",320,0)
 . W "ELIG",U
"RTN","BPSRPT8",321,0)
 . W "RX#",U
"RTN","BPSRPT8",322,0)
 . W "REF/ECME#",U
"RTN","BPSRPT8",323,0)
 . W "DATE",U
"RTN","BPSRPT8",324,0)
 . W "RELEASED",U
"RTN","BPSRPT8",325,0)
 . W "LOCATION",U
"RTN","BPSRPT8",326,0)
 . W "TYPE",U
"RTN","BPSRPT8",327,0)
 . W "STATUS",U
"RTN","BPSRPT8",328,0)
 . W "COB",U
"RTN","BPSRPT8",329,0)
 . W "OPEN/CLOSED",U
"RTN","BPSRPT8",330,0)
 . W "GROUP ID",U
"RTN","BPSRPT8",331,0)
 . W "VA ING. COST",U
"RTN","BPSRPT8",332,0)
 . W "VA DISP. FEE",U
"RTN","BPSRPT8",333,0)
 . W "$BILLED",U
"RTN","BPSRPT8",334,0)
 . W "QTY",U
"RTN","BPSRPT8",335,0)
 . W "NDC#",U
"RTN","BPSRPT8",336,0)
 . W "DRUG",U
"RTN","BPSRPT8",337,0)
 . W "PRESCRIBER ID",U
"RTN","BPSRPT8",338,0)
 . W "PRESCRIBER",U
"RTN","BPSRPT8",339,0)
 . W "MULT REJ",U
"RTN","BPSRPT8",340,0)
 . W "REJECT CODE",U
"RTN","BPSRPT8",341,0)
 . W "REJECT EXPLANATION"
"RTN","BPSRPT8",342,0)
 ;
"RTN","BPSRPT8",343,0)
 I BPRTYPE=3 D  Q
"RTN","BPSRPT8",344,0)
 . W "RX#",U
"RTN","BPSRPT8",345,0)
 . W "REF/ECME#",U
"RTN","BPSRPT8",346,0)
 . W "DATE",U
"RTN","BPSRPT8",347,0)
 . W "VA ING. COST",U
"RTN","BPSRPT8",348,0)
 . W "VA DISP. FEE",U
"RTN","BPSRPT8",349,0)
 . W "$BILLED",U
"RTN","BPSRPT8",350,0)
 . W "INGREDIENT COST PAID",U
"RTN","BPSRPT8",351,0)
 . W "DISPENSING FEE PAID",U
"RTN","BPSRPT8",352,0)
 . W "PATIENT RESP (INS)",U
"RTN","BPSRPT8",353,0)
 . W "$INS RESPONSE",U
"RTN","BPSRPT8",354,0)
 . W "DRUG",U
"RTN","BPSRPT8",355,0)
 . W "NDC",U
"RTN","BPSRPT8",356,0)
 . W "LOCATION",U
"RTN","BPSRPT8",357,0)
 . W "TYPE",U
"RTN","BPSRPT8",358,0)
 . W "STATUS",U
"RTN","BPSRPT8",359,0)
 . W "COB",U
"RTN","BPSRPT8",360,0)
 . W "ELIG",U
"RTN","BPSRPT8",361,0)
 . W "REJECTED"
"RTN","BPSRPT8",362,0)
 ;
"RTN","BPSRPT8",363,0)
 I BPRTYPE=5 D  Q
"RTN","BPSRPT8",364,0)
 . W "RX#",U
"RTN","BPSRPT8",365,0)
 . W "REF/ECME#",U
"RTN","BPSRPT8",366,0)
 . W "COMPLETED",U
"RTN","BPSRPT8",367,0)
 . W "TRANS TYPE",U
"RTN","BPSRPT8",368,0)
 . W "PAYER RESPONSE",U
"RTN","BPSRPT8",369,0)
 . W "RX COB",U
"RTN","BPSRPT8",370,0)
 . W "DRUG",U
"RTN","BPSRPT8",371,0)
 . W "NDC",U
"RTN","BPSRPT8",372,0)
 . W "FILL LOCATION",U
"RTN","BPSRPT8",373,0)
 . W "FILL TYPE",U
"RTN","BPSRPT8",374,0)
 . W "STATUS",U
"RTN","BPSRPT8",375,0)
 . W "REJECTED",U
"RTN","BPSRPT8",376,0)
 . W "INSURANCE",U
"RTN","BPSRPT8",377,0)
 . W "ELAP TIME IN SECONDS"
"RTN","BPSRPT8",378,0)
 ;
"RTN","BPSRPT8",379,0)
 I BPRTYPE=6 D  Q
"RTN","BPSRPT8",380,0)
 .W "DATE",U
"RTN","BPSRPT8",381,0)
 .W "#CLAIMS",U
"RTN","BPSRPT8",382,0)
 .W "AMOUNT SUBMITTED",U
"RTN","BPSRPT8",383,0)
 .W "RETURNED REJECTED",U
"RTN","BPSRPT8",384,0)
 .W "RETURNED PAYABLE",U
"RTN","BPSRPT8",385,0)
 .W "AMOUNT TO RECEIVE",U
"RTN","BPSRPT8",386,0)
 .W "DIFFERENCE"
"RTN","BPSRPT8",387,0)
 ;
"RTN","BPSRPT8",388,0)
 I BPRTYPE=7 D  Q
"RTN","BPSRPT8",389,0)
 . W "ELIG",U
"RTN","BPSRPT8",390,0)
 . W "RX#",U
"RTN","BPSRPT8",391,0)
 . W "REF/ECME#",U
"RTN","BPSRPT8",392,0)
 . W "LOCATION",U
"RTN","BPSRPT8",393,0)
 . W "TYPE",U
"RTN","BPSRPT8",394,0)
 . W "STATUS",U
"RTN","BPSRPT8",395,0)
 . W "REJECTED",U
"RTN","BPSRPT8",396,0)
 . W "DRUG",U
"RTN","BPSRPT8",397,0)
 . W "NDC",U
"RTN","BPSRPT8",398,0)
 . W "GROUP ID",U
"RTN","BPSRPT8",399,0)
 . W "$BILLED",U
"RTN","BPSRPT8",400,0)
 . W "CLOSE DATE/TIME",U
"RTN","BPSRPT8",401,0)
 . W "CLOSED BY",U
"RTN","BPSRPT8",402,0)
 . W "CLOSE REASON",U
"RTN","BPSRPT8",403,0)
 . W "CLAIM ID",U
"RTN","BPSRPT8",404,0)
 . W "MULTI REJ",U
"RTN","BPSRPT8",405,0)
 . W "REJECT CODE",U
"RTN","BPSRPT8",406,0)
 . W "REJECT EXPLANATION"
"RTN","BPSRPT8",407,0)
 ;
"RTN","BPSRPT8",408,0)
 I BPRTYPE=8 D  Q
"RTN","BPSRPT8",409,0)
 . W "RX#",U
"RTN","BPSRPT8",410,0)
 . W "REF/ECME#",U
"RTN","BPSRPT8",411,0)
 . W "DATE",U
"RTN","BPSRPT8",412,0)
 . W "$BILLED",U
"RTN","BPSRPT8",413,0)
 . W "$INS RESPONSE",U
"RTN","BPSRPT8",414,0)
 . W "$COLLECT",U
"RTN","BPSRPT8",415,0)
 . W "DRUG",U
"RTN","BPSRPT8",416,0)
 . W "RX INFO",U
"RTN","BPSRPT8",417,0)
 . W "INS GROUP#",U
"RTN","BPSRPT8",418,0)
 . W "INS GROUP NAME",U
"RTN","BPSRPT8",419,0)
 . W "BILL#",U
"RTN","BPSRPT8",420,0)
 . W "$PROVIDER NETWORK",U
"RTN","BPSRPT8",421,0)
 . W "$BRAND DRUG",U
"RTN","BPSRPT8",422,0)
 . W "$NON-PREF FORM",U
"RTN","BPSRPT8",423,0)
 . W "$BRAND NON-PREF FORM",U
"RTN","BPSRPT8",424,0)
 . W "$COVERAGE GAP",U
"RTN","BPSRPT8",425,0)
 . W "$HEALTH ASST",U
"RTN","BPSRPT8",426,0)
 . W "$SPEND ACCT REMAINING",U
"RTN","BPSRPT8",427,0)
 ;
"RTN","BPSRPT8",428,0)
 I BPRTYPE=9 D  Q
"RTN","BPSRPT8",429,0)
 . W "ELIG",U
"RTN","BPSRPT8",430,0)
 . W "RX#",U
"RTN","BPSRPT8",431,0)
 . W "REF",U
"RTN","BPSRPT8",432,0)
 . W "DATE",U
"RTN","BPSRPT8",433,0)
 . W "$DRUG COST",U
"RTN","BPSRPT8",434,0)
 . W "DRUG",U
"RTN","BPSRPT8",435,0)
 . W "NDC",U
"RTN","BPSRPT8",436,0)
 . W "RELEASED ON",U
"RTN","BPSRPT8",437,0)
 . W "LOCATION",U
"RTN","BPSRPT8",438,0)
 . W "STATUS",U
"RTN","BPSRPT8",439,0)
 . W "NON-BILLABLE STATUS REASON"
"RTN","BPSRPT8",440,0)
 Q
"RTN","BPSRPT8",441,0)
 ;return RX COB as the 1st letter of the RX COB indicator
"RTN","BPSRPT8",442,0)
RXCOB(BPPSEQ) ;
"RTN","BPSRPT8",443,0)
 Q $S(BPPSEQ=1:"p",BPPSEQ=2:"s",1:"")
"RTN","BPSRPT8",444,0)
 ;BPSRPT8
"RTN","BPSSCRCU")
0^13^B9850835
"RTN","BPSSCRCU",1,0)
BPSSCRCU ;BHAM ISC/SS - ECME SCREEN CONTINUOUS UPDATE AND CHANGE VIEW ;05-APR-05
"RTN","BPSSCRCU",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,24**;JUN 2004;Build 43
"RTN","BPSSCRCU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRCU",4,0)
 Q
"RTN","BPSSCRCU",5,0)
 ;
"RTN","BPSSCRCU",6,0)
CU ;
"RTN","BPSSCRCU",7,0)
 N BPKEY,BPTIME,X,Y
"RTN","BPSSCRCU",8,0)
 S BPTIME=15 ;update every 15 seconds
"RTN","BPSSCRCU",9,0)
 D RE^VALM4
"RTN","BPSSCRCU",10,0)
 W "Press ""Q"" to quit."
"RTN","BPSSCRCU",11,0)
 F  D  S BPKEY=$$READ^XGF(1,BPTIME) Q:(BPKEY="Q")!(BPKEY="q")
"RTN","BPSSCRCU",12,0)
 . D UD^BPSSCRUD
"RTN","BPSSCRCU",13,0)
 . D RE^VALM4
"RTN","BPSSCRCU",14,0)
 . N %
"RTN","BPSSCRCU",15,0)
 . D NOW^%DTC S Y=% X ^DD("DD")
"RTN","BPSSCRCU",16,0)
 . W "The screen has been updated on "_Y_". Press ""Q"" to quit."
"RTN","BPSSCRCU",17,0)
 Q
"RTN","BPSSCRCU",18,0)
 ;
"RTN","BPSSCRCU",19,0)
 ; Select Insurance using IB API - IA 4721
"RTN","BPSSCRCU",20,0)
 ; Input:  BPARR passed by ref to store user selection
"RTN","BPSSCRCU",21,0)
 ;         BPDUZ - User DUZ
"RTN","BPSSCRCU",22,0)
 ; Output: RETV = -1 if timeout or user enters "^"
"RTN","BPSSCRCU",23,0)
 ;         BPARR(1.11)="I" for individual insurance or "A" for all
"RTN","BPSSCRCU",24,0)
 ;         BPARR("INS")=semi-colon list of IENs from file 36 if individual insurances selected
"RTN","BPSSCRCU",25,0)
 ; Example output: BPARR(1.11)="I" BPARR("INS")=";7;499;200;"
"RTN","BPSSCRCU",26,0)
INSURSEL(BPARR,BPDUZ) ;
"RTN","BPSSCRCU",27,0)
 N RETV,BPQ,BPINP,BPINSARR,Y,BPCNT
"RTN","BPSSCRCU",28,0)
 S (BPARR(1.11),BPARR(2.04),BPARR("INS"))=""
"RTN","BPSSCRCU",29,0)
 S (BPINS,BPCNT)=0
"RTN","BPSSCRCU",30,0)
 S RETV=$$EDITFLD^BPSSCRCV(1.11,+BPDUZ,"S^I:SPECIFIC INSURANCE(S);A:ALL","Select Certain (I)NSURANCE or (A)LL","ALL",.BPARR)
"RTN","BPSSCRCU",31,0)
 ; Quit if timeout or ^ entered
"RTN","BPSSCRCU",32,0)
 Q:RETV<0 +RETV
"RTN","BPSSCRCU",33,0)
 ; Quit if ALL selected
"RTN","BPSSCRCU",34,0)
 Q:$P(RETV,U,2)="A" +RETV
"RTN","BPSSCRCU",35,0)
 ; Get selected insurances from parameters and display them
"RTN","BPSSCRCU",36,0)
 I $$GETINS(BPDUZ,.BPINSARR) D DISPINS(.BPINSARR)
"RTN","BPSSCRCU",37,0)
SELINS1 ;
"RTN","BPSSCRCU",38,0)
 ; Select specific Insurances to add to BPARR("INS") array
"RTN","BPSSCRCU",39,0)
 S BPQ=0 F  D  Q:BPQ'=0
"RTN","BPSSCRCU",40,0)
 . S BPINP=$$SELINSUR^IBNCPDPI("Select INSURANCE","")
"RTN","BPSSCRCU",41,0)
 . S:+BPINP=-1 BPQ=-1 I BPQ=-1 Q
"RTN","BPSSCRCU",42,0)
 . ;
"RTN","BPSSCRCU",43,0)
 . ; Handle deletes
"RTN","BPSSCRCU",44,0)
 . I $D(BPINSARR(+BPINP)) D  Q
"RTN","BPSSCRCU",45,0)
 . . W !
"RTN","BPSSCRCU",46,0)
 . . S Y=$$PROMPT^BPSSCRCV("S^Y:YES;N:NO","Delete "_$P(BPINP,U,2)_" from your list?","NO")
"RTN","BPSSCRCU",47,0)
 . . I Y="Y" K BPINSARR(+BPINP),BPINSARR("B",$P(BPINP,U,2),+BPINP)
"RTN","BPSSCRCU",48,0)
 . . ; Display a list of selected Insurance Companies
"RTN","BPSSCRCU",49,0)
 . . D DISPINS(.BPINSARR)
"RTN","BPSSCRCU",50,0)
 . ; Save selection in Insurance Company array
"RTN","BPSSCRCU",51,0)
 . S BPINSARR(+BPINP)=BPINP,BPINSARR("B",$P(BPINP,U,2),+BPINP)=""
"RTN","BPSSCRCU",52,0)
 . ; Display a list of selected Insurance Companies
"RTN","BPSSCRCU",53,0)
 . D DISPINS(.BPINSARR)
"RTN","BPSSCRCU",54,0)
 ;
"RTN","BPSSCRCU",55,0)
 ;If the user entered "^" Quit returning "^"
"RTN","BPSSCRCU",56,0)
 I BPQ=-1,X="^" Q "^"
"RTN","BPSSCRCU",57,0)
 ;
"RTN","BPSSCRCU",58,0)
 ; Save selected Insurances in BPARR("INS") to be saved in instance 1.14 when filed.
"RTN","BPSSCRCU",59,0)
 S BPARR("INS")=""
"RTN","BPSSCRCU",60,0)
 F BPCNT=1:1 S BPINS=$O(BPINSARR(BPINS)) Q:+BPINS=0  D
"RTN","BPSSCRCU",61,0)
 . S BPARR("INS")=$G(BPARR("INS"))_";"_BPINS
"RTN","BPSSCRCU",62,0)
 S (BPARR("INS"),BPARR(2.04))=$G(BPARR("INS"))_";"
"RTN","BPSSCRCU",63,0)
 Q +RETV
"RTN","BPSSCRCU",64,0)
 ;
"RTN","BPSSCRCU",65,0)
 ;Reads insurance selection from the USER PROFILE file
"RTN","BPSSCRCU",66,0)
 ;Input: BPDUZ7 - DUZ
"RTN","BPSSCRCU",67,0)
 ;       BPINSUR by ref - array to return insurances saved in 2.04 Parameter : BPINSUR(IEN of file 36)
"RTN","BPSSCRCU",68,0)
 ;Return value:
"RTN","BPSSCRCU",69,0)
 ; 0 nothing saved
"RTN","BPSSCRCU",70,0)
 ; n number of IENs of #36 selected by the user and stored in BPINSUR
"RTN","BPSSCRCU",71,0)
 ;Returned by reference:
"RTN","BPSSCRCU",72,0)
 ; BPINSUR - array with IENs to file #36
"RTN","BPSSCRCU",73,0)
GETINS(BPDUZ7,BPINSUR) ;
"RTN","BPSSCRCU",74,0)
 N BPINS,BPCNT
"RTN","BPSSCRCU",75,0)
 S BPARRAY("INS")=$$GETPARAM^BPSSCRSL("2.04",BPDUZ7)
"RTN","BPSSCRCU",76,0)
 F BPCNT=1:1:20 S BPINS=$P($G(BPARRAY("INS")),";",BPCNT+1) Q:+BPINS=0  D
"RTN","BPSSCRCU",77,0)
 . S BPINSUR(BPINS)=BPINS,BPINSUR("B",$$INSNM^IBNCPDPI(BPINS),BPINS)=""
"RTN","BPSSCRCU",78,0)
 Q BPCNT-1
"RTN","BPSSCRCU",79,0)
 ;
"RTN","BPSSCRCU",80,0)
 ;Display selected Insurances
"RTN","BPSSCRCU",81,0)
 ;Input: BPINSARR = Array of insurances to display
"RTN","BPSSCRCU",82,0)
 ; BPINSARR("B",INSURANCE COMPANY NAME)
"RTN","BPSSCRCU",83,0)
DISPINS(BPINSARR) ;
"RTN","BPSSCRCU",84,0)
 I $D(BPINSARR)>9 D
"RTN","BPSSCRCU",85,0)
 . N X
"RTN","BPSSCRCU",86,0)
 . W !,?2,"Selected:"
"RTN","BPSSCRCU",87,0)
 . S X="" F  S X=$O(BPINSARR("B",X)) Q:X=""  W ?12,X,!
"RTN","BPSSCRCU",88,0)
 . K X
"RTN","BPSSCRCU",89,0)
 Q
"RTN","BPSSCRCU",90,0)
 ;
"RTN","BPSSCRCU",91,0)
 ;Check if PLAN ID for selected BP59 matches selected insurances
"RTN","BPSSCRCU",92,0)
 ;Input: BPPLAN = Insurance company IEN from PLAN ID field in BPS TRANSACTION file
"RTN","BPSSCRCU",93,0)
 ;       BPINS = Semi-colon separated list of insurances selected by the user.
"RTN","BPSSCRCU",94,0)
 ;               See INSURSEL
"RTN","BPSSCRCU",95,0)
 ;Output: 1 = Yes a match was found
"RTN","BPSSCRCU",96,0)
 ;        0 = No match found
"RTN","BPSSCRCU",97,0)
CHKINS(BPPLAN,BPINS) ;
"RTN","BPSSCRCU",98,0)
 N BPIN,BPRETV
"RTN","BPSSCRCU",99,0)
 S BPRETV=0
"RTN","BPSSCRCU",100,0)
 F I=2:1 S BPIN=$P($G(BPINS),";",I) Q:BPIN=""  D  Q:BPRETV
"RTN","BPSSCRCU",101,0)
 . S BPRETV=$S(BPIN=BPPLAN:1,1:0)
"RTN","BPSSCRCU",102,0)
 Q BPRETV
"RTN","BPSSCRCU",103,0)
 ;
"RTN","BPSSCRL1")
0^14^B76871633
"RTN","BPSSCRL1",1,0)
BPSSCRL1 ;AITC/CKB - ECME LOGINFO ;06/01/2017
"RTN","BPSSCRL1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**22,24**;JUN 2004;Build 43
"RTN","BPSSCRL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRL1",4,0)
 ;
"RTN","BPSSCRL1",5,0)
 ; Call to $$NCPDPQTY^PSSBPSUT supported by IA# 4992
"RTN","BPSSCRL1",6,0)
 ; Moved from BPSSCRLG
"RTN","BPSSCRL1",7,0)
 Q
"RTN","BPSSCRL1",8,0)
 ;
"RTN","BPSSCRL1",9,0)
PREPINFO(BPLN,BPDFN,BP36,BP59) ;
"RTN","BPSSCRL1",10,0)
 ;input:
"RTN","BPSSCRL1",11,0)
 ; BPDFN: patient ien #2
"RTN","BPSSCRL1",12,0)
 ; BP36: insurance ien #36
"RTN","BPSSCRL1",13,0)
 ; BP59: ptr to #9002313.59
"RTN","BPSSCRL1",14,0)
 ; returns # of lines
"RTN","BPSSCRL1",15,0)
 N BPSECME
"RTN","BPSSCRL1",16,0)
 I '$G(BP59) Q 0
"RTN","BPSSCRL1",17,0)
 I '$G(BP36) Q 0
"RTN","BPSSCRL1",18,0)
 I '$G(BPDFN) Q 0
"RTN","BPSSCRL1",19,0)
 N BPSCRLNS S BPSCRLNS=17 ;(see "BPS LSTMN LOG" LM template: Bottom=21, Top = 4, 21-4=17)
"RTN","BPSSCRL1",20,0)
 N BPX,BPRXIEN,BPRXN,BPREF,BP1,BPLSTCLM,BPLSTRSP,BPDAT59,BPUSR,BPSTRT,BPHIST,BPQ
"RTN","BPSSCRL1",21,0)
 N BPDT,BPLN0,BPCNT,DFN,VADM
"RTN","BPSSCRL1",22,0)
 S DFN=BPDFN D DEM^VADPT
"RTN","BPSSCRL1",23,0)
 S BP1=$$RXREF^BPSSCRU2(BP59)
"RTN","BPSSCRL1",24,0)
 S BPRXIEN=$P(BP1,U,1)
"RTN","BPSSCRL1",25,0)
 S BPRXN=$$RXNUM^BPSSCRU2(+BPRXIEN)
"RTN","BPSSCRL1",26,0)
 S BPREF=$P(BP1,U,2)
"RTN","BPSSCRL1",27,0)
 S BPDAT59(0)=$G(^BPST(BP59,0))
"RTN","BPSSCRL1",28,0)
 ;create history
"RTN","BPSSCRL1",29,0)
 D MKHIST^BPSSCRU5(BP59,.BPHIST)
"RTN","BPSSCRL1",30,0)
 ;
"RTN","BPSSCRL1",31,0)
 S BPLN0=BPLN
"RTN","BPSSCRL1",32,0)
 D SETLINE^BPSSCRLG(.BPLN,"Pharmacy ECME Log")
"RTN","BPSSCRL1",33,0)
 D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",34,0)
 S BPX=$$RJ^BPSSCR02("Rx #: ",20)_BPRXN_"/"_BPREF
"RTN","BPSSCRL1",35,0)
 S BPSECME=$$ECMENUM^BPSSCRU2(BP59)
"RTN","BPSSCRL1",36,0)
 S BPX=BPX_$$RJ^BPSSCR02("ECME #: ",20)_BPSECME
"RTN","BPSSCRL1",37,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",38,0)
 S BPX=$$RJ^BPSSCR02("Drug: ",20)_$$DRGNAM^BPSSCRU2($$GETDRG59^BPSSCRU2(BP59))
"RTN","BPSSCRL1",39,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",40,0)
 S BPX=$$RJ^BPSSCR02("Patient: ",20)
"RTN","BPSSCRL1",41,0)
 S BPX=BPX_$$LJ^BPSSCR02($$PATNAME^BPSSCRU2(BPDFN)_" "_$$SSN4^BPSSCRU2(BPDFN),25)
"RTN","BPSSCRL1",42,0)
 S BPX=BPX_$$LJ^BPSSCR02("Sex: "_$P($G(VADM(5)),"^",1),10)
"RTN","BPSSCRL1",43,0)
 S BPX=BPX_$$LJ^BPSSCR02("DOB: "_$P($G(VADM(3)),"^",2)_"("_$G(VADM(4))_")",20)
"RTN","BPSSCRL1",44,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",45,0)
 S BPX=$$RJ^BPSSCR02("Transaction Number: ",20)
"RTN","BPSSCRL1",46,0)
 S BPX=BPX_$P($G(^BPST(BP59,0)),U,1)
"RTN","BPSSCRL1",47,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",48,0)
 S BPX=$$RJ^BPSSCR02("Last Submitted: ",20)
"RTN","BPSSCRL1",49,0)
 S BPSTRT=$P(BPDAT59(0),U,11) ;@# need to check with analyst if this is a START DATE
"RTN","BPSSCRL1",50,0)
 I BPSTRT]"" S BPX=BPX_$$DATETIME^BPSSCRU5(BPSTRT)
"RTN","BPSSCRL1",51,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",52,0)
 S BPX=$$RJ^BPSSCR02("Last Submitted By: ",20)
"RTN","BPSSCRL1",53,0)
 S BPUSR=$P(BPDAT59(0),U,10)
"RTN","BPSSCRL1",54,0)
 I BPUSR]"" S BPX=BPX_$$GETUSRNM^BPSSCRU1(BPUSR)
"RTN","BPSSCRL1",55,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",56,0)
 ;
"RTN","BPSSCRL1",57,0)
 ;latest claim
"RTN","BPSSCRL1",58,0)
 S BP1=+$O(BPHIST("C",99999999),-1)
"RTN","BPSSCRL1",59,0)
 I BP1=0 D SETLINE^BPSSCRLG(.BPLN,""),SETLINE^BPSSCRLG(.BPLN,"------ No electronic claims ------") Q BPLN
"RTN","BPSSCRL1",60,0)
 S BP1=+$O(BPHIST("C",BP1,0))
"RTN","BPSSCRL1",61,0)
 S BPX=$$RJ^BPSSCR02("Last VA Claim #: ",20)_$P($G(^BPSC(+BP1,0)),U,1)
"RTN","BPSSCRL1",62,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",63,0)
 F BPCNT=BPLN:1:BPLN0+BPSCRLNS D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",64,0)
 ;process history
"RTN","BPSSCRL1",65,0)
 N BPTYPE,BPIEN,BPIENRS
"RTN","BPSSCRL1",66,0)
 S BPDT=99999999
"RTN","BPSSCRL1",67,0)
 F  S BPDT=$O(BPHIST("C",BPDT),-1) Q:+BPDT=0  D
"RTN","BPSSCRL1",68,0)
 . S BPIEN=+$O(BPHIST("C",BPDT,0)) Q:BPIEN=""
"RTN","BPSSCRL1",69,0)
 . D DISPCLM(.BPLN,BP59,BPIEN,+BPHIST("C",BPDT,BPIEN),$P(BPHIST("C",BPDT,BPIEN),U,2),BPDT)
"RTN","BPSSCRL1",70,0)
 . S BPIENRS=0
"RTN","BPSSCRL1",71,0)
 . F  S BPIENRS=$O(BPHIST("C",BPDT,BPIEN,"R",BPIENRS)) Q:+BPIENRS=0  D
"RTN","BPSSCRL1",72,0)
 . . D DISPRSP(.BPLN,BP59,BPIENRS,+BPHIST("C",BPDT,BPIEN,"R",BPIENRS),$P(BPHIST("C",BPDT,BPIEN,"R",BPIENRS),U,2),BPDT)
"RTN","BPSSCRL1",73,0)
 . . D DISPPYR^BPSSCRLG(.BPLN,BPIENRS)
"RTN","BPSSCRL1",74,0)
 Q BPLN
"RTN","BPSSCRL1",75,0)
 ;
"RTN","BPSSCRL1",76,0)
 ;display claim record
"RTN","BPSSCRL1",77,0)
DISPCLM(BPLN,BP59,BPIEN02,BP57,BPSTYPE,BPSDTALT) ;
"RTN","BPSSCRL1",78,0)
 N BPSCRLNS S BPSCRLNS=17 ;(see "BPS LSTMN LOG" LM template: Bottom=21, Top = 4, 21-4=17)
"RTN","BPSSCRL1",79,0)
 N BPX,BPLN0,BPCNT,BPSTR1,BPSTYP2,BPNFLDT,BPUNITS
"RTN","BPSSCRL1",80,0)
 ;
"RTN","BPSSCRL1",81,0)
 S BPLN0=BPLN
"RTN","BPSSCRL1",82,0)
 S BPSTYP2=$S(BPSTYPE="C":"CLAIM REQUEST",BPSTYPE="R":"REVERSAL",1:"")
"RTN","BPSSCRL1",83,0)
 S BPSTR1="Transmission Information ("_BPSTYP2_")(#"_BPIEN02_")"
"RTN","BPSSCRL1",84,0)
 D SETLINE^BPSSCRLG(.BPLN,BPSTR1_$$LINE^BPSSCRU3(79-$L(BPSTR1),"-"))
"RTN","BPSSCRL1",85,0)
 D SETLINE^BPSSCRLG(.BPLN,"Created on: "_$$CREATEDT^BPSSCRLG(BPIEN02,BPSDTALT))
"RTN","BPSSCRL1",86,0)
 D SETLINE^BPSSCRLG(.BPLN,"VA Claim ID: "_$P($G(^BPSC(+BPIEN02,0)),U,1))
"RTN","BPSSCRL1",87,0)
 D SETLINE^BPSSCRLG(.BPLN,"Submitted By: "_$$SUBMTBY^BPSSCRLG(BP57))
"RTN","BPSSCRL1",88,0)
 D SETLINE^BPSSCRLG(.BPLN,"Transaction Type: "_$$TRTYPE^BPSSCRU5($$TRCODE^BPSSCRLG(BPIEN02)))
"RTN","BPSSCRL1",89,0)
 D SETLINE^BPSSCRLG(.BPLN,"Date of Service: "_$$DOSCLM^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",90,0)
 ;Display Next Available Fill Date - BPS*1.0*15
"RTN","BPSSCRL1",91,0)
 S BPNFLDT=$$NFLDT^BPSBUTL(BPRXIEN,BPREF,$$RXCOB57^BPSSCRLG(BP57))
"RTN","BPSSCRL1",92,0)
 D:BPNFLDT SETLINE^BPSSCRLG(.BPLN,"Next Available Fill Date: "_$$FMTE^XLFDT(BPNFLDT,"2ZM"))
"RTN","BPSSCRL1",93,0)
 D SETLINE^BPSSCRLG(.BPLN,"NDC Code: "_$$LNDC^BPSSCRU5(BPIEN02))
"RTN","BPSSCRL1",94,0)
 ;
"RTN","BPSSCRL1",95,0)
 S BPUNITS=$$UNITS^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",96,0)
 ; if BPUNITS is null get the BPUNITS from the PRESCRIPTION file (#52)
"RTN","BPSSCRL1",97,0)
 I BPUNITS="(  )" S BPUNITS=$$GETUNIT(BPRXIEN,$G(BPREF))
"RTN","BPSSCRL1",98,0)
 D SETLINE^BPSSCRLG(.BPLN,"Quantity Submitted on Claim: "_$$QTY^BPSSCRLG(BPIEN02)_" "_BPUNITS)
"RTN","BPSSCRL1",99,0)
 ;
"RTN","BPSSCRL1",100,0)
 D SETLINE^BPSSCRLG(.BPLN,"Days Supply: "_$$DAYSSUPL^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",101,0)
 D SETLINE^BPSSCRLG(.BPLN,"Division: "_$$DIV^BPSSCRLG(BP57))
"RTN","BPSSCRL1",102,0)
 D SETLINE^BPSSCRLG(.BPLN,"NPI#: "_$$NPI^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",103,0)
 D SETLINE^BPSSCRLG(.BPLN,"Prescriber DEA Number: "_$$PDEA^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",104,0)
 D SETLINE^BPSSCRLG(.BPLN,"ECME Pharmacy: "_$$DIVNAME^BPSSCRDS($$LDIV^BPSSCRLG(BP57)))
"RTN","BPSSCRL1",105,0)
 D SETLINE^BPSSCRLG(.BPLN,"Total Prescribed Quantity Remaining: "_$$TOTPQR^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",106,0)
 S BPX="Rx Qty: "_$$BILLQTY^BPSSCRLG(BP57)_" "_$$BILLUNT^BPSSCRLG(BP57)
"RTN","BPSSCRL1",107,0)
 S BPX=BPX_"     Unit Cost: "_$$UNTPRICE^BPSSCRLG(BP57)
"RTN","BPSSCRL1",108,0)
 S BPX=BPX_"     Gross Amt Due: "_$$TOTPRICE^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",109,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",110,0)
 S BPX="Ingredient Cost: "_$$INGRCST^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",111,0)
 S BPX=BPX_"     Dispensing Fee: "_$$DISPFEE^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",112,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",113,0)
 S BPX="U&C Charge: "_$$UCCHRG^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",114,0)
 S BPX=BPX_"     Admin Fee: "_$$ADMNFEE^BPSSCRLG(BPIEN02)
"RTN","BPSSCRL1",115,0)
 D SETLINE^BPSSCRLG(.BPLN,BPX)
"RTN","BPSSCRL1",116,0)
 D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",117,0)
 D SETLINE^BPSSCRLG(.BPLN,"Insurance Name: "_$$INSUR57^BPSSCRLG(BP57))
"RTN","BPSSCRL1",118,0)
 D SETLINE^BPSSCRLG(.BPLN,"Group Name: "_$$GRPNM^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",119,0)
 D SETLINE^BPSSCRLG(.BPLN,"Rx Coordination of Benefits: "_$$RXCOB57^BPSSCRLG(BP57))
"RTN","BPSSCRL1",120,0)
 D SETLINE^BPSSCRLG(.BPLN,"Pharmacy Plan ID: "_$$PHPLANID^BPSSCRLG(BP57))
"RTN","BPSSCRL1",121,0)
 D SETLINE^BPSSCRLG(.BPLN,"BIN: "_$$BIN^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",122,0)
 D SETLINE^BPSSCRLG(.BPLN,"PCN: "_$$PCN^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",123,0)
 D SETLINE^BPSSCRLG(.BPLN,"NCPDP Version: "_$$GETVER^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",124,0)
 D SETLINE^BPSSCRLG(.BPLN,"Group ID: "_$$GRPID^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",125,0)
 D SETLINE^BPSSCRLG(.BPLN,"Cardholder ID: "_$$CRDHLDID^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",126,0)
 D SETLINE^BPSSCRLG(.BPLN,"Patient Relationship Code: "_$$PATRELSH^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",127,0)
 D SETLINE^BPSSCRLG(.BPLN,"Cardholder First Name: "_$$CRDHLDFN^BPSSCRLG(BPIEN02,BP57))
"RTN","BPSSCRL1",128,0)
 D SETLINE^BPSSCRLG(.BPLN,"Cardholder Last Name: "_$$CRDHLDLN^BPSSCRLG(BPIEN02,BP57))
"RTN","BPSSCRL1",129,0)
 ; BPS*1*22
"RTN","BPSSCRL1",130,0)
 D SETLINE^BPSSCRLG(.BPLN,"Facility ID Qualifier: "_$$FACIDQ^BPSSCRLG(BPIEN02))
"RTN","BPSSCRL1",131,0)
 F BPCNT=BPLN:1:BPLN0+BPSCRLNS D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",132,0)
 S BPLN0=BPLN
"RTN","BPSSCRL1",133,0)
 D SETLINE^BPSSCRLG(.BPLN,"Billing Request Payer Sheet: "_$$B1PYRIEN^BPSSCRU5(BP57))
"RTN","BPSSCRL1",134,0)
 D SETLINE^BPSSCRLG(.BPLN,"Reversal Payer Sheet: "_$$B2PYRIEN^BPSSCRU5(BP57))
"RTN","BPSSCRL1",135,0)
 D SETLINE^BPSSCRLG(.BPLN,"VA Claim ID: "_$P($G(^BPSC(+BPIEN02,0)),U,1))
"RTN","BPSSCRL1",136,0)
 D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",137,0)
 Q
"RTN","BPSSCRL1",138,0)
 ;
"RTN","BPSSCRL1",139,0)
GETUNIT(BPRXIEN,BPREF) ; Return the NCPDP Dispense Unit 
"RTN","BPSSCRL1",140,0)
 ; Input: (r) BPRXIEN - Quantity dispensed from the PRESCRIPTION file (#52)
"RTN","BPSSCRL1",141,0)
 ;             BPREF  - Rx Refill 
"RTN","BPSSCRL1",142,0)
 ;0utput:     BPUNITS - Billing Quantity (3 decimal places)^NCPDP Dispense Unit (EA, GM or ML)
"RTN","BPSSCRL1",143,0)
 ;
"RTN","BPSSCRL1",144,0)
 N BPDRUG,BPQTY,BPUNITS,Z
"RTN","BPSSCRL1",145,0)
 ;
"RTN","BPSSCRL1",146,0)
 ; Find NCPDP Dispense Unit from PRESCRIPTION file (#52)
"RTN","BPSSCRL1",147,0)
 S BPDRUG=$$GET1^DIQ(52,BPRXIEN,6,"I")
"RTN","BPSSCRL1",148,0)
 S BPQTY=$S($G(BPREF)="":$$GET1^DIQ(52,BPRXIEN,7,"I"),1:$$GET1^DIQ(52.1,BPREF_","_BPRXIEN,1))/1
"RTN","BPSSCRL1",149,0)
 S Z=$$NCPDPQTY^PSSBPSUT(BPDRUG,BPQTY)
"RTN","BPSSCRL1",150,0)
 S BPUNITS=$P(Z,"^",2)
"RTN","BPSSCRL1",151,0)
 Q "("_BPUNITS_")"
"RTN","BPSSCRL1",152,0)
 ;
"RTN","BPSSCRL1",153,0)
 ;display response record
"RTN","BPSSCRL1",154,0)
DISPRSP(BPLN,BP59,BPIEN03,BP57,BPSTYPE,BPSDTALT) ;
"RTN","BPSSCRL1",155,0)
 N BPSCRLNS S BPSCRLNS=17 ;(see "BPS LSTMN LOG" LM template: Bottom=21, Top = 4, 21-4=17)
"RTN","BPSSCRL1",156,0)
 N BPX,BPLN0,BPCNT,BPRJCDS,BPRJ,BPSTR1,BPSTYP2,BDUR,BMSG,PTRESP
"RTN","BPSSCRL1",157,0)
 S BPLN0=BPLN
"RTN","BPSSCRL1",158,0)
 S BPSTYP2=$S(BPSTYPE="C":"CLAIM REQUEST",BPSTYPE="R":"REVERSAL",1:"")
"RTN","BPSSCRL1",159,0)
 S BPSTR1="Response Information  ("_BPSTYP2_")(#"_BPIEN03_")"
"RTN","BPSSCRL1",160,0)
 D SETLINE^BPSSCRLG(.BPLN,BPSTR1_$$LINE^BPSSCRU3(79-$L(BPSTR1),"-"))
"RTN","BPSSCRL1",161,0)
 D SETLINE^BPSSCRLG(.BPLN,"Response Received: "_$$RESPREC^BPSSCRLG(BPIEN03,BPSDTALT))
"RTN","BPSSCRL1",162,0)
 D SETLINE^BPSSCRLG(.BPLN,"Date of Service: "_$$DOSRSP^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",163,0)
 D SETLINE^BPSSCRLG(.BPLN,"Transaction Response Status: "_$$RESPSTAT^BPSSCRU5(BPIEN03))
"RTN","BPSSCRL1",164,0)
 D SETLINE^BPSSCRLG(.BPLN,"Total Amount Paid: $"_$$TOTAMNT^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",165,0)
 D SETLINE^BPSSCRLG(.BPLN,"Ingredient Cost Paid: $"_$$ICPAID^BPSSCRLG(BPIEN03)_"   Dispensing Fee Paid: $"_$$DFPAID^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",166,0)
 S PTRESP=$$PTRESP^BPSSCRLG(BPIEN03) S PTRESP=$S(PTRESP="":"$",PTRESP="0.00":"$0",1:"($"_PTRESP_")")
"RTN","BPSSCRL1",167,0)
 D SETLINE^BPSSCRLG(.BPLN,"Patient Resp (INS): "_PTRESP)
"RTN","BPSSCRL1",168,0)
 ; BPS*1*22
"RTN","BPSSCRL1",169,0)
 D SETLINE^BPSSCRLG(.BPLN,"Reconciliation ID: "_$$RECONID^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",170,0)
 D SETLINE^BPSSCRLG(.BPLN,"Reject code(s): ")
"RTN","BPSSCRL1",171,0)
 D REJCODES^BPSSCRU5(BPIEN03,.BPRJCDS)
"RTN","BPSSCRL1",172,0)
 S BPRJ=""
"RTN","BPSSCRL1",173,0)
 F  S BPRJ=$O(BPRJCDS(BPRJ)) Q:BPRJ=""  D
"RTN","BPSSCRL1",174,0)
 . D SETLINE^BPSSCRLG(.BPLN," "_$$GETRJNAM^BPSSCRU3(BPRJ))
"RTN","BPSSCRL1",175,0)
 D WRAPLN^BPSSCRU5(.BPLN,$$MESSAGE^BPSSCRLG(BPIEN03),76,"Payer Message: ",5)
"RTN","BPSSCRL1",176,0)
 D ADDMESS^BPSSCRLG(BPIEN03,1,.BPADDMSG)
"RTN","BPSSCRL1",177,0)
 S BMSG="" F  S BMSG=$O(BPADDMSG(BMSG)) Q:BMSG=""  D
"RTN","BPSSCRL1",178,0)
 . D WRAPLN^BPSSCRU5(.BPLN,BPADDMSG(BMSG),76,$S(BMSG=1:"Payer Additional Message: ",1:"     "),5)
"RTN","BPSSCRL1",179,0)
 D SETLINE^BPSSCRLG(.BPLN,"Reason for Service Code: "_$$DURREAS^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",180,0)
 D SETLINE^BPSSCRLG(.BPLN,"DUR Text: "_$$DURTEXT^BPSSCRLG(BPIEN03))
"RTN","BPSSCRL1",181,0)
 D WRAPLN^BPSSCRU5(.BPLN,$$DURADD^BPSSCRLG(BPIEN03),76,"DUR Additional Text: ",5)
"RTN","BPSSCRL1",182,0)
 ; BPS*1*18:  Print Claim Log [BPS PRTCL USRSCR CLAIM LOG] (when included in the incoming response)
"RTN","BPSSCRL1",183,0)
 D SETLINE^BPSSCRLG(.BPLN,"HPID/OEID: "_$$HPID^BPSSCRLG(BPIEN03,BP57))
"RTN","BPSSCRL1",184,0)
 F BPCNT=1:1:2 D SETLINE^BPSSCRLG(.BPLN,"")
"RTN","BPSSCRL1",185,0)
 Q
"RTN","BPSSCRL1",186,0)
 ;
"RTN","BPSSCRLG")
0^18^B132775345
"RTN","BPSSCRLG",1,0)
BPSSCRLG ;BHAM ISC/SS - ECME LOGINFO ;05-APR-05
"RTN","BPSSCRLG",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,8,10,11,15,18,20,22,24**;JUN 2004;Build 43
"RTN","BPSSCRLG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRLG",4,0)
 ;
"RTN","BPSSCRLG",5,0)
 Q
"RTN","BPSSCRLG",6,0)
 ;
"RTN","BPSSCRLG",7,0)
EN ; -- main entry point for BPS LSTMN LOG
"RTN","BPSSCRLG",8,0)
 D EN^VALM("BPS LSTMN LOG")
"RTN","BPSSCRLG",9,0)
 Q 
"RTN","BPSSCRLG",10,0)
 ;
"RTN","BPSSCRLG",11,0)
HDR ; -- header code
"RTN","BPSSCRLG",12,0)
 S VALMHDR(1)="Claim Log information"
"RTN","BPSSCRLG",13,0)
 S VALMHDR(2)=""
"RTN","BPSSCRLG",14,0)
 Q
"RTN","BPSSCRLG",15,0)
 ;
"RTN","BPSSCRLG",16,0)
INIT ; -- init variables and list array
"RTN","BPSSCRLG",17,0)
 N BPSELCLM,LINE
"RTN","BPSSCRLG",18,0)
 S BPSELCLM=$G(@VALMAR@("SELLN"))
"RTN","BPSSCRLG",19,0)
 ;  piece 2: patient ien #2
"RTN","BPSSCRLG",20,0)
 ;  piece 3: insurance ien #36
"RTN","BPSSCRLG",21,0)
 ;  piece 4: ptr to #9002313.59
"RTN","BPSSCRLG",22,0)
 S LINE=1
"RTN","BPSSCRLG",23,0)
 S VALMCNT=$$PREPINFO(.LINE,$P(BPSELCLM,U,2),$P(BPSELCLM,U,3),$P(BPSELCLM,U,4))
"RTN","BPSSCRLG",24,0)
 S:VALMCNT>1 VALMCNT=VALMCNT-1
"RTN","BPSSCRLG",25,0)
 Q
"RTN","BPSSCRLG",26,0)
 ;
"RTN","BPSSCRLG",27,0)
HELP ; -- help code
"RTN","BPSSCRLG",28,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","BPSSCRLG",29,0)
 K X
"RTN","BPSSCRLG",30,0)
 Q
"RTN","BPSSCRLG",31,0)
 ;
"RTN","BPSSCRLG",32,0)
EXIT ; -- exit code
"RTN","BPSSCRLG",33,0)
 Q
"RTN","BPSSCRLG",34,0)
 ;
"RTN","BPSSCRLG",35,0)
EXPND ; -- expand code
"RTN","BPSSCRLG",36,0)
 Q
"RTN","BPSSCRLG",37,0)
 ;
"RTN","BPSSCRLG",38,0)
 ;
"RTN","BPSSCRLG",39,0)
LOG ;entry point for LOG menu option
"RTN","BPSSCRLG",40,0)
 N BPRET,BPSEL,BP59,BPVLM
"RTN","BPSSCRLG",41,0)
 I '$D(@(VALMAR)) Q
"RTN","BPSSCRLG",42,0)
 D FULL^VALM1
"RTN","BPSSCRLG",43,0)
 W !,"Enter the line number for which you wish to print claim logs."
"RTN","BPSSCRLG",44,0)
 S BPSEL=$$ASKLINE^BPSSCRU4("Select item","C","Please select SINGLE Rx Line.")
"RTN","BPSSCRLG",45,0)
 I BPSEL<1 S VALMBCK="R" Q
"RTN","BPSSCRLG",46,0)
 ;
"RTN","BPSSCRLG",47,0)
 S BP59=$P(BPSEL,U,4)
"RTN","BPSSCRLG",48,0)
 S BPVLM=+$P(BPSEL,U,5)    ; 1st line for indexes in the LM display array
"RTN","BPSSCRLG",49,0)
 ;
"RTN","BPSSCRLG",50,0)
 ; check for non-billable entry for claim LOG display
"RTN","BPSSCRLG",51,0)
 I $$NB^BPSSCR03(BP59) D  S VALMBCK="R" Q
"RTN","BPSSCRLG",52,0)
 . W !!,$G(@VALMAR@(BPVLM,0))       ; LM display array
"RTN","BPSSCRLG",53,0)
 . W !?6,$$EREJTXT^BPSSCR03(BP59)   ; eT/eC non-billable reason line
"RTN","BPSSCRLG",54,0)
 . W !,"Entry is NON BILLABLE.  There is no Claim Log to display."
"RTN","BPSSCRLG",55,0)
 . D PAUSE^VALM1
"RTN","BPSSCRLG",56,0)
 . Q
"RTN","BPSSCRLG",57,0)
 ;
"RTN","BPSSCRLG",58,0)
 D SAVESEL(BPSEL,VALMAR)
"RTN","BPSSCRLG",59,0)
 D EN
"RTN","BPSSCRLG",60,0)
 S VALMBCK="R"
"RTN","BPSSCRLG",61,0)
 Q
"RTN","BPSSCRLG",62,0)
 ;
"RTN","BPSSCRLG",63,0)
 ;save for ListManager
"RTN","BPSSCRLG",64,0)
 ;BPSEL - selected line
"RTN","BPSSCRLG",65,0)
 ;BPVALMR - parent VALMAR 
"RTN","BPSSCRLG",66,0)
SAVESEL(BPSEL,BPVALMR) ;
"RTN","BPSSCRLG",67,0)
 D CLEANIT
"RTN","BPSSCRLG",68,0)
 S ^TMP("BPSLOG",$J,"VALM","SELLN")=BPSEL
"RTN","BPSSCRLG",69,0)
 S ^TMP("BPSLOG",$J,"VALM","PARENT")=BPVALMR
"RTN","BPSSCRLG",70,0)
 M ^TMP("BPSLOG",$J,"VALM","VIEWPARAMS")=@BPVALMR@("VIEWPARAMS")
"RTN","BPSSCRLG",71,0)
 Q
"RTN","BPSSCRLG",72,0)
 ;
"RTN","BPSSCRLG",73,0)
CLEANIT ;
"RTN","BPSSCRLG",74,0)
 K ^TMP("BPSLOG",$J,"VALM")
"RTN","BPSSCRLG",75,0)
 Q
"RTN","BPSSCRLG",76,0)
 ;
"RTN","BPSSCRLG",77,0)
PREPINFO(BPLN,BPDFN,BP36,BP59) ;
"RTN","BPSSCRLG",78,0)
 ;input:
"RTN","BPSSCRLG",79,0)
 ; BPDFN: patient ien #2
"RTN","BPSSCRLG",80,0)
 ; BP36: insurance ien #36
"RTN","BPSSCRLG",81,0)
 ; BP59: ptr to #9002313.59
"RTN","BPSSCRLG",82,0)
 ; returns # of lines
"RTN","BPSSCRLG",83,0)
 ;
"RTN","BPSSCRLG",84,0)
 ; Moved to ^BPSSCRL1 for sake of space
"RTN","BPSSCRLG",85,0)
 ;
"RTN","BPSSCRLG",86,0)
 Q $$PREPINFO^BPSSCRL1(BPLN,BPDFN,BP36,BP59)
"RTN","BPSSCRLG",87,0)
 ;
"RTN","BPSSCRLG",88,0)
 ;increments BPLINE
"RTN","BPSSCRLG",89,0)
SETLINE(BPLINE,BPSTR) ;
"RTN","BPSSCRLG",90,0)
 D SET^VALM10(BPLINE,BPSTR)
"RTN","BPSSCRLG",91,0)
 S BPLINE=BPLINE+1
"RTN","BPSSCRLG",92,0)
 Q
"RTN","BPSSCRLG",93,0)
 ;
"RTN","BPSSCRLG",94,0)
 ;display claim record
"RTN","BPSSCRLG",95,0)
DISPCLM(BPLN,BP59,BPIEN02,BP57,BPSTYPE,BPSDTALT) ;
"RTN","BPSSCRLG",96,0)
 ;
"RTN","BPSSCRLG",97,0)
 ; Moved to ^BPSSCRL1 for sake of space
"RTN","BPSSCRLG",98,0)
 ;
"RTN","BPSSCRLG",99,0)
 D DISPCLM^BPSSCRL1
"RTN","BPSSCRLG",100,0)
 Q
"RTN","BPSSCRLG",101,0)
 ;
"RTN","BPSSCRLG",102,0)
 ;Submitted By User
"RTN","BPSSCRLG",103,0)
SUBMTBY(BP57) ;
"RTN","BPSSCRLG",104,0)
 N BPIEN,BPUSR
"RTN","BPSSCRLG",105,0)
 S BPIEN=$P($G(^BPSTL(BP57,0)),U,10)
"RTN","BPSSCRLG",106,0)
 S BPUSR=$$GETUSRNM^BPSSCRU1(BPIEN)
"RTN","BPSSCRLG",107,0)
 Q $S(BPUSR']"":"UNKNOWN",1:BPUSR)
"RTN","BPSSCRLG",108,0)
 ;
"RTN","BPSSCRLG",109,0)
 ;Date of service
"RTN","BPSSCRLG",110,0)
DOSCLM(BPIEN02) ;
"RTN","BPSSCRLG",111,0)
 N BPDT
"RTN","BPSSCRLG",112,0)
 S BPDT=$P($G(^BPSC(BPIEN02,401)),U,1)\1
"RTN","BPSSCRLG",113,0)
 Q $E(BPDT,5,6)_"/"_$E(BPDT,7,8)_"/"_$E(BPDT,1,4)
"RTN","BPSSCRLG",114,0)
 ;
"RTN","BPSSCRLG",115,0)
 ;Create date 
"RTN","BPSSCRLG",116,0)
CREATEDT(BPIEN02,BPSDTALT) ;
"RTN","BPSSCRLG",117,0)
 N BPSDT
"RTN","BPSSCRLG",118,0)
 S BPSDT=+$P($G(^BPSC(BPIEN02,0)),U,6)
"RTN","BPSSCRLG",119,0)
 Q $$DATETIME^BPSSCRU5($S(BPSDT>0:BPSDT,1:BPSDTALT))
"RTN","BPSSCRLG",120,0)
 ;
"RTN","BPSSCRLG",121,0)
 ;Plan ID
"RTN","BPSSCRLG",122,0)
PLANID(BP57) ;
"RTN","BPSSCRLG",123,0)
 Q $P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),0)),U,1)
"RTN","BPSSCRLG",124,0)
 ;
"RTN","BPSSCRLG",125,0)
CERTMOD(BP57) ;
"RTN","BPSSCRLG",126,0)
 Q $P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),0)),U,5)
"RTN","BPSSCRLG",127,0)
 ;
"RTN","BPSSCRLG",128,0)
 ;Software Vendor/Cert ID
"RTN","BPSSCRLG",129,0)
CERTIEN(BP57) ;
"RTN","BPSSCRLG",130,0)
 Q $P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),0)),U,6)
"RTN","BPSSCRLG",131,0)
 ;
"RTN","BPSSCRLG",132,0)
 ;Division
"RTN","BPSSCRLG",133,0)
DIV(BP57) ;
"RTN","BPSSCRLG",134,0)
 Q $$GET1^DIQ(9002313.57,BP57_",",11)
"RTN","BPSSCRLG",135,0)
 ;
"RTN","BPSSCRLG",136,0)
 ;NPI
"RTN","BPSSCRLG",137,0)
NPI(BPIEN02) ;
"RTN","BPSSCRLG",138,0)
 Q $$GET1^DIQ(9002313.02,BPIEN02_",",201)
"RTN","BPSSCRLG",139,0)
 ;
"RTN","BPSSCRLG",140,0)
 ;Group ID
"RTN","BPSSCRLG",141,0)
GRPID(BPIEN02) ;
"RTN","BPSSCRLG",142,0)
 Q $E($P($G(^BPSC(BPIEN02,300)),U,1),3,99)
"RTN","BPSSCRLG",143,0)
 ;
"RTN","BPSSCRLG",144,0)
 ;Group Name
"RTN","BPSSCRLG",145,0)
GRPNM(BPSIEN02) ;
"RTN","BPSSCRLG",146,0)
 N BPSGPN
"RTN","BPSSCRLG",147,0)
 S BPSGPN=$P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),3)),U,1)
"RTN","BPSSCRLG",148,0)
 Q BPSGPN
"RTN","BPSSCRLG",149,0)
 ;
"RTN","BPSSCRLG",150,0)
 ;Cardholder ID
"RTN","BPSSCRLG",151,0)
CRDHLDID(BPIEN02) ;
"RTN","BPSSCRLG",152,0)
 Q $E($P($G(^BPSC(BPIEN02,300)),U,2),3,99)
"RTN","BPSSCRLG",153,0)
 ;
"RTN","BPSSCRLG",154,0)
 ;Cardholder First name
"RTN","BPSSCRLG",155,0)
CRDHLDFN(BPIEN02,BP57) ;
"RTN","BPSSCRLG",156,0)
 N Y
"RTN","BPSSCRLG",157,0)
 S Y=$E($P($G(^BPSC(BPIEN02,300)),U,12),3,99)
"RTN","BPSSCRLG",158,0)
 I $L(Y)=0 S Y=$P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),1)),U,6)
"RTN","BPSSCRLG",159,0)
 Q Y
"RTN","BPSSCRLG",160,0)
 ;
"RTN","BPSSCRLG",161,0)
 ;Cardholder Last Name
"RTN","BPSSCRLG",162,0)
CRDHLDLN(BPIEN02,BP57) ;
"RTN","BPSSCRLG",163,0)
 N Y
"RTN","BPSSCRLG",164,0)
 S Y=$E($P($G(^BPSC(BPIEN02,300)),U,13),3,99)
"RTN","BPSSCRLG",165,0)
 I $L(Y)=0 S Y=$P($G(^BPSTL(BP57,10,+$G(^BPSTL(BP57,9)),1)),U,7)
"RTN","BPSSCRLG",166,0)
 Q Y
"RTN","BPSSCRLG",167,0)
 ;
"RTN","BPSSCRLG",168,0)
 ;Facility ID Qualifier - BPS*1*22
"RTN","BPSSCRLG",169,0)
FACIDQ(BPEIN02) ;
"RTN","BPSSCRLG",170,0)
 Q $P($G(^BPSC(BPIEN02,400,1,"B90")),U,5)
"RTN","BPSSCRLG",171,0)
 ;
"RTN","BPSSCRLG",172,0)
 ;Patient Relationship Code
"RTN","BPSSCRLG",173,0)
PATRELSH(BPIEN02) ;
"RTN","BPSSCRLG",174,0)
 N Y
"RTN","BPSSCRLG",175,0)
 S Y=$E($P($G(^BPSC(BPIEN02,300)),U,6),3,99)
"RTN","BPSSCRLG",176,0)
 Q $S(Y=0:"NOT SPECIFIED",Y=1:"CARDHOLDER",Y=2:"SPOUSE",Y=3:"CHILD",Y=4:"OTHER",1:Y)
"RTN","BPSSCRLG",177,0)
 ;
"RTN","BPSSCRLG",178,0)
PCN(BPIEN02) ;
"RTN","BPSSCRLG",179,0)
 Q $P($G(^BPSC(BPIEN02,100)),U,4)
"RTN","BPSSCRLG",180,0)
 ;
"RTN","BPSSCRLG",181,0)
 ; Get the Payer Sheet Version Number.
"RTN","BPSSCRLG",182,0)
GETVER(BPIEN02) ;
"RTN","BPSSCRLG",183,0)
 N BPSVER
"RTN","BPSSCRLG",184,0)
 S BPSVER=$P($G(^BPSC(BPIEN02,100)),U,2)
"RTN","BPSSCRLG",185,0)
 I $G(BPSVER)]"" S BPSVER=$E(BPSVER,1)_"."_$E(BPSVER,2,99)
"RTN","BPSSCRLG",186,0)
 Q BPSVER
"RTN","BPSSCRLG",187,0)
 ;
"RTN","BPSSCRLG",188,0)
BIN(BPIEN02) ;
"RTN","BPSSCRLG",189,0)
 Q $P($G(^BPSC(BPIEN02,100)),U,1)
"RTN","BPSSCRLG",190,0)
 ;
"RTN","BPSSCRLG",191,0)
 ;Prescriber DEA Number
"RTN","BPSSCRLG",192,0)
PDEA(BPIEN02) ;
"RTN","BPSSCRLG",193,0)
 Q $E($P($G(^BPSC(BPIEN02,400,1,"D00")),U,1),3,18)
"RTN","BPSSCRLG",194,0)
 ;
"RTN","BPSSCRLG",195,0)
 ;Total Prescribed Quantity Remaining
"RTN","BPSSCRLG",196,0)
TOTPQR(BPIEN02) ;
"RTN","BPSSCRLG",197,0)
 N X
"RTN","BPSSCRLG",198,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,"D00")),U,2),3,99)
"RTN","BPSSCRLG",199,0)
 Q +X
"RTN","BPSSCRLG",200,0)
 ;
"RTN","BPSSCRLG",201,0)
 ;insurance name by 9002313.57 pointer
"RTN","BPSSCRLG",202,0)
INSUR57(BPIEN57) ;
"RTN","BPSSCRLG",203,0)
 N BPINSN
"RTN","BPSSCRLG",204,0)
 S BPINSN=+$G(^BPSTL(BPIEN57,9))
"RTN","BPSSCRLG",205,0)
 Q $P($G(^BPSTL(BPIEN57,10,BPINSN,0)),U,7)
"RTN","BPSSCRLG",206,0)
 ;
"RTN","BPSSCRLG",207,0)
PHPLANID(BPIEN57) ; Get the Pharmacy Plan ID from the BPS Log of Transactions file
"RTN","BPSSCRLG",208,0)
 ; Input - BPSIEN57: IEN from the BPS Log of Transactions file.
"RTN","BPSSCRLG",209,0)
 I '$G(BPIEN57) Q ""
"RTN","BPSSCRLG",210,0)
 N BPINSN
"RTN","BPSSCRLG",211,0)
 S BPINSN=+$G(^BPSTL(BPIEN57,9))
"RTN","BPSSCRLG",212,0)
 Q $P($G(^BPSTL(BPIEN57,10,BPINSN,3)),U,3)
"RTN","BPSSCRLG",213,0)
 ;
"RTN","BPSSCRLG",214,0)
QTY(BPIEN02) ;
"RTN","BPSSCRLG",215,0)
 Q $E($P($G(^BPSC(BPIEN02,400,1,440)),U,2),3,99)/1000
"RTN","BPSSCRLG",216,0)
 ;
"RTN","BPSSCRLG",217,0)
 ;NCPDP Units
"RTN","BPSSCRLG",218,0)
UNITS(BPIEN02) ;
"RTN","BPSSCRLG",219,0)
 I $G(BPIEN02)="" Q "(  )"
"RTN","BPSSCRLG",220,0)
 N X
"RTN","BPSSCRLG",221,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,600)),U,1),3,99)
"RTN","BPSSCRLG",222,0)
 Q $S(X="":"(  )",1:"("_X_")")
"RTN","BPSSCRLG",223,0)
 ;
"RTN","BPSSCRLG",224,0)
UNTPRICE(BPIEN57) ;
"RTN","BPSSCRLG",225,0)
 I $G(BPIEN57)="" Q ""
"RTN","BPSSCRLG",226,0)
 Q +$P($G(^BPSTL(BPIEN57,5)),U,2)
"RTN","BPSSCRLG",227,0)
 ;
"RTN","BPSSCRLG",228,0)
TOTPRICE(BPIEN02) ;
"RTN","BPSSCRLG",229,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",230,0)
 N X
"RTN","BPSSCRLG",231,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,400)),U,30),3,99)
"RTN","BPSSCRLG",232,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",233,0)
 ;
"RTN","BPSSCRLG",234,0)
BILLQTY(BPIEN57) ;
"RTN","BPSSCRLG",235,0)
 Q $P($G(^BPSTL(BPIEN57,5)),U,9)
"RTN","BPSSCRLG",236,0)
 ;
"RTN","BPSSCRLG",237,0)
BILLUNT(BPIEN57) ;
"RTN","BPSSCRLG",238,0)
 I $G(BPIEN57)="" Q "(  )"
"RTN","BPSSCRLG",239,0)
 N X
"RTN","BPSSCRLG",240,0)
 S X=$P($G(^BPSTL(BPIEN57,5)),U,10)
"RTN","BPSSCRLG",241,0)
 Q $S(X="":"(  )",1:"("_X_")")
"RTN","BPSSCRLG",242,0)
 ;
"RTN","BPSSCRLG",243,0)
 ;Ingredient Cost
"RTN","BPSSCRLG",244,0)
INGRCST(BPIEN02) ;
"RTN","BPSSCRLG",245,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",246,0)
 N X
"RTN","BPSSCRLG",247,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,400)),U,9),3,99)
"RTN","BPSSCRLG",248,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",249,0)
 ;
"RTN","BPSSCRLG",250,0)
 ;Dispensing Fee Submitted
"RTN","BPSSCRLG",251,0)
DISPFEE(BPIEN02) ;
"RTN","BPSSCRLG",252,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",253,0)
 N X
"RTN","BPSSCRLG",254,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,400)),U,12),3,99)
"RTN","BPSSCRLG",255,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",256,0)
 ;
"RTN","BPSSCRLG",257,0)
 ;U&C Charge
"RTN","BPSSCRLG",258,0)
UCCHRG(BPIEN02) ;
"RTN","BPSSCRLG",259,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",260,0)
 N X
"RTN","BPSSCRLG",261,0)
 S X=$E($P($G(^BPSC(BPIEN02,400,1,400)),U,26),3,99)
"RTN","BPSSCRLG",262,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",263,0)
 ;
"RTN","BPSSCRLG",264,0)
 ;Admin Fee
"RTN","BPSSCRLG",265,0)
ADMNFEE(BPIEN02) ;
"RTN","BPSSCRLG",266,0)
 I $G(BPIEN02)="" Q ""
"RTN","BPSSCRLG",267,0)
 N CNT,X,AF
"RTN","BPSSCRLG",268,0)
 S AF="",CNT=0 F  S CNT=$O(^BPSC(BPIEN02,400,1,478.01,CNT)) Q:'CNT  D
"RTN","BPSSCRLG",269,0)
 . S X=$G(^BPSC(BPIEN02,400,1,478.01,CNT,0))
"RTN","BPSSCRLG",270,0)
 . I +$E($P(X,U,2),3,4)=4 S AF=AF+$$DFF2EXT^BPSECFM($E($P(X,U,3),3,10))
"RTN","BPSSCRLG",271,0)
 Q $S(AF="":AF,1:$J(AF,0,2))
"RTN","BPSSCRLG",272,0)
 ;
"RTN","BPSSCRLG",273,0)
 ;get ECME pharmacy division ptr for LOG
"RTN","BPSSCRLG",274,0)
LDIV(BPIEN57) ;
"RTN","BPSSCRLG",275,0)
 Q +$P($G(^BPSTL(BPIEN57,1)),U,7)
"RTN","BPSSCRLG",276,0)
 ;
"RTN","BPSSCRLG",277,0)
 ;transaction code
"RTN","BPSSCRLG",278,0)
TRCODE(BPIEN02) ;
"RTN","BPSSCRLG",279,0)
 Q $P($G(^BPSC(BPIEN02,100)),U,3)
"RTN","BPSSCRLG",280,0)
 ;
"RTN","BPSSCRLG",281,0)
 ;days supply
"RTN","BPSSCRLG",282,0)
DAYSSUPL(BPIEN02) ;
"RTN","BPSSCRLG",283,0)
 ;format D5NNN -> NNN
"RTN","BPSSCRLG",284,0)
 Q +$E($P($G(^BPSC(BPIEN02,400,1,400)),U,5),3,99)
"RTN","BPSSCRLG",285,0)
 ;
"RTN","BPSSCRLG",286,0)
 ;display response record
"RTN","BPSSCRLG",287,0)
DISPRSP(BPLN,BP59,BPIEN03,BP57,BPSTYPE,BPSDTALT) ;
"RTN","BPSSCRLG",288,0)
 ;
"RTN","BPSSCRLG",289,0)
 ; Moved to ^BPSSCRL1 for sake of space
"RTN","BPSSCRLG",290,0)
 ;
"RTN","BPSSCRLG",291,0)
 D DISPRSP^BPSSCRL1
"RTN","BPSSCRLG",292,0)
 Q
"RTN","BPSSCRLG",293,0)
 ;
"RTN","BPSSCRLG",294,0)
RESPREC(BPIEN03,BPSDTALT) ;
"RTN","BPSSCRLG",295,0)
 N BPSDT
"RTN","BPSSCRLG",296,0)
 S BPSDT=+$P($G(^BPSR(BPIEN03,0)),U,2)
"RTN","BPSSCRLG",297,0)
 Q $$DATETIME^BPSSCRU5($S(BPSDT>0:BPSDT,1:BPSDTALT))
"RTN","BPSSCRLG",298,0)
 ;
"RTN","BPSSCRLG",299,0)
DOSRSP(BPIEN03) ;
"RTN","BPSSCRLG",300,0)
 N BPDT
"RTN","BPSSCRLG",301,0)
 S BPDT=$P($G(^BPSR(BPIEN03,400)),U,1)\1
"RTN","BPSSCRLG",302,0)
 Q $E(BPDT,5,6)_"/"_$E(BPDT,7,8)_"/"_$E(BPDT,1,4)
"RTN","BPSSCRLG",303,0)
 ;
"RTN","BPSSCRLG",304,0)
TOTAMNT(BPIEN03) ;
"RTN","BPSSCRLG",305,0)
 I $G(BPIEN03)="" Q ""
"RTN","BPSSCRLG",306,0)
 N X
"RTN","BPSSCRLG",307,0)
 S X=$P($G(^BPSR(BPIEN03,1000,1,500)),U,9)
"RTN","BPSSCRLG",308,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",309,0)
 ;
"RTN","BPSSCRLG",310,0)
ICPAID(BPIEN03) ;Ingredient Cost Paid
"RTN","BPSSCRLG",311,0)
 I $G(BPIEN03)="" Q ""
"RTN","BPSSCRLG",312,0)
 N X
"RTN","BPSSCRLG",313,0)
 S X=$P($G(^BPSR(BPIEN03,1000,1,500)),U,6)
"RTN","BPSSCRLG",314,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",315,0)
 ;
"RTN","BPSSCRLG",316,0)
 ; BPS*1*22 - Reconciliation ID
"RTN","BPSSCRLG",317,0)
RECONID(BPEIN03) ;
"RTN","BPSSCRLG",318,0)
 Q $P($G(^BPSR(BPIEN03,1000,1,"B98")),U,1)
"RTN","BPSSCRLG",319,0)
 ;
"RTN","BPSSCRLG",320,0)
DFPAID(BPIEN03) ;Dispensing Fee Paid
"RTN","BPSSCRLG",321,0)
 I $G(BPIEN03)="" Q ""
"RTN","BPSSCRLG",322,0)
 N X
"RTN","BPSSCRLG",323,0)
 S X=$P($G(^BPSR(BPIEN03,1000,1,500)),U,7)
"RTN","BPSSCRLG",324,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",325,0)
 ;
"RTN","BPSSCRLG",326,0)
PTRESP(BPIEN03) ;Patient Responsibility
"RTN","BPSSCRLG",327,0)
 I $G(BPIEN03)="" Q ""
"RTN","BPSSCRLG",328,0)
 N X
"RTN","BPSSCRLG",329,0)
 S X=$P($G(^BPSR(BPIEN03,1000,1,500)),U,5)
"RTN","BPSSCRLG",330,0)
 Q $S(X="":X,1:$$DFF2EXT^BPSECFM(X))
"RTN","BPSSCRLG",331,0)
 ;
"RTN","BPSSCRLG",332,0)
MESSAGE(BPIEN03) ;
"RTN","BPSSCRLG",333,0)
 Q $P($G(^BPSR(BPIEN03,504)),U)
"RTN","BPSSCRLG",334,0)
 ;
"RTN","BPSSCRLG",335,0)
ADDMESS(BPIEN03,POS,BPADDMSG) ;
"RTN","BPSSCRLG",336,0)
 N ADM,X,QUA,TXT,CON,BPMTMP,L,NEXT
"RTN","BPSSCRLG",337,0)
 K BPMTMP,BPADDMSG
"RTN","BPSSCRLG",338,0)
 I '$G(BPIEN03) Q
"RTN","BPSSCRLG",339,0)
 I '$G(POS) S POS=1
"RTN","BPSSCRLG",340,0)
 S (ADM,L)=0 F  S ADM=$O(^BPSR(BPIEN03,1000,POS,130.01,ADM)) Q:'ADM  D
"RTN","BPSSCRLG",341,0)
 . S X=$G(^BPSR(BPIEN03,1000,POS,130.01,ADM,0))
"RTN","BPSSCRLG",342,0)
 . S TXT=$P($G(^BPSR(BPIEN03,1000,POS,130.01,ADM,1)),U,1)
"RTN","BPSSCRLG",343,0)
 . S QUA=$P(X,U,3),CON=$P(X,U,2)
"RTN","BPSSCRLG",344,0)
 . ; This should not happen, but if the qualifier is null, set it 
"RTN","BPSSCRLG",345,0)
 . ;  to "Z"_concatenated with a unique number so that it follows the
"RTN","BPSSCRLG",346,0)
 . ;  other qualifiers.  Per the D0 standard, qualifiers can be 1-9 and
"RTN","BPSSCRLG",347,0)
 . ;  A-Z.  ECL limits this to 1-9 but an future ECL may extend this.
"RTN","BPSSCRLG",348,0)
 . I QUA="" S L=L+1,QUA="Z"_L
"RTN","BPSSCRLG",349,0)
 . S BPMTMP(QUA)=CON_U_TXT
"RTN","BPSSCRLG",350,0)
 I '$D(BPMTMP) Q
"RTN","BPSSCRLG",351,0)
 S L=0,(QUA,NEXT)="" F  S QUA=$O(BPMTMP(QUA)) Q:QUA=""  D
"RTN","BPSSCRLG",352,0)
 . S CON=$P(BPMTMP(QUA),U,1),TXT=$P(BPMTMP(QUA),U,2)
"RTN","BPSSCRLG",353,0)
 . I NEXT="+" S BPADDMSG(L)=BPADDMSG(L)_TXT,NEXT=CON Q
"RTN","BPSSCRLG",354,0)
 . S L=L+1,BPADDMSG(L)=TXT,NEXT=CON
"RTN","BPSSCRLG",355,0)
 Q
"RTN","BPSSCRLG",356,0)
 ;
"RTN","BPSSCRLG",357,0)
DURTEXT(BPIEN03) ;
"RTN","BPSSCRLG",358,0)
 ; DUR FREE TEXT MESSAGE from first instance of DUR PPS RESPONSE
"RTN","BPSSCRLG",359,0)
 Q $P($G(^BPSR(BPIEN03,1000,1,567.01,1,0)),U,9)
"RTN","BPSSCRLG",360,0)
 ;
"RTN","BPSSCRLG",361,0)
DURREAS(BPIEN03) ;
"RTN","BPSSCRLG",362,0)
 ; REASON FOR SERVICE CODE from first instance of DUR PPS RESPONSE
"RTN","BPSSCRLG",363,0)
 Q $$GET1^DIQ(9002313.1101,"1,1,"_BPIEN03_",",439)
"RTN","BPSSCRLG",364,0)
 ;
"RTN","BPSSCRLG",365,0)
DURADD(BPIEN03) ;
"RTN","BPSSCRLG",366,0)
 ; DUR ADDITIONAL TEXT from first instance of DUR PPS RESPONSE
"RTN","BPSSCRLG",367,0)
 Q $P($G(^BPSR(BPIEN03,1000,1,567.01,1,1)),U)
"RTN","BPSSCRLG",368,0)
 ;
"RTN","BPSSCRLG",369,0)
 ;Payer HPID from response  ***BPS*1*18 IB ICR #6061
"RTN","BPSSCRLG",370,0)
HPID(BPIEN03,BP57) ;
"RTN","BPSSCRLG",371,0)
 N BPHPD
"RTN","BPSSCRLG",372,0)
 Q:$P($G(^BPSR(BPIEN03,560)),U,8)'="01" ""
"RTN","BPSSCRLG",373,0)
 S BPHPD=$P($G(^BPSR(BPIEN03,560)),U,9)
"RTN","BPSSCRLG",374,0)
 ; 6/25/14 no validation of HPID for this screen
"RTN","BPSSCRLG",375,0)
 ;S:BPHPD'="" BPHPD=BPHPD_$P($$HOD^IBCNHUT1(BPHPD,BP57),U,3)
"RTN","BPSSCRLG",376,0)
 Q BPHPD
"RTN","BPSSCRLG",377,0)
 ;
"RTN","BPSSCRLG",378,0)
RXCOB57(BPIEN57) ;
"RTN","BPSSCRLG",379,0)
 N BPCOB
"RTN","BPSSCRLG",380,0)
 S BPCOB=+$P($G(^BPSTL(BPIEN57,0)),U,14)
"RTN","BPSSCRLG",381,0)
 Q $S(BPCOB=2:"SECONDARY",BPCOB=3:"TERTIARY",1:"PRIMARY")
"RTN","BPSSCRLG",382,0)
 ;
"RTN","BPSSCRLG",383,0)
 ;Display other payer(s)
"RTN","BPSSCRLG",384,0)
DISPPYR(BPLN,BPIEN03) ;
"RTN","BPSSCRLG",385,0)
 N PYR,PYRDATA,BPSTR1
"RTN","BPSSCRLG",386,0)
 S PYR=0 F  S PYR=$O(^BPSR(BPIEN03,1000,1,355.01,PYR)) Q:'PYR  D
"RTN","BPSSCRLG",387,0)
 . S PYRDATA=^BPSR(BPIEN03,1000,1,355.01,PYR,1)
"RTN","BPSSCRLG",388,0)
 . S BPSTR1="Other Payer Information ("_PYR_")(#"_BPIEN03_")"
"RTN","BPSSCRLG",389,0)
 . D SETLINE(.BPLN,BPSTR1_$$LINE^BPSSCRU3(79-$L(BPSTR1),"-"))
"RTN","BPSSCRLG",390,0)
 . D SETLINE(.BPLN,"Other Payer ID Count: "_$$PYRIDCNT(BPIEN03,PYR))
"RTN","BPSSCRLG",391,0)
 . D SETLINE(.BPLN,"Other Payer ID: "_$P(PYRDATA,U,3))
"RTN","BPSSCRLG",392,0)
 . D SETLINE(.BPLN,"Other Payer Coverage Type: "_$P(PYRDATA,U,1))
"RTN","BPSSCRLG",393,0)
 . D SETLINE(.BPLN,"Other Payer ID Qualifier: "_$P(PYRDATA,U,2))
"RTN","BPSSCRLG",394,0)
 . D SETLINE(.BPLN,"Other Payer Help Desk Phone Number: "_$P(PYRDATA,U,8))
"RTN","BPSSCRLG",395,0)
 . D SETLINE(.BPLN,"Other Payer Processor Control Number: "_$P(PYRDATA,U,4))
"RTN","BPSSCRLG",396,0)
 . D SETLINE(.BPLN,"Other Payer Effective Date: "_$P(PYRDATA,U,10))
"RTN","BPSSCRLG",397,0)
 . D SETLINE(.BPLN,"Other Payer Termination Date: "_$P(PYRDATA,U,11))
"RTN","BPSSCRLG",398,0)
 . D SETLINE(.BPLN,"Other Payer Person Code: "_$P(PYRDATA,U,7))
"RTN","BPSSCRLG",399,0)
 . D SETLINE(.BPLN,"Other Payer Patient Relationship Code: "_$P(PYRDATA,U,9))
"RTN","BPSSCRLG",400,0)
 . D SETLINE(.BPLN,"Other Payer Cardholder ID: "_$P(PYRDATA,U,5))
"RTN","BPSSCRLG",401,0)
 . D SETLINE(.BPLN,"Other Payer Group ID: "_$P(PYRDATA,U,6))
"RTN","BPSSCRLG",402,0)
 Q
"RTN","BPSSCRLG",403,0)
 ;
"RTN","BPSSCRLG",404,0)
PYRIDCNT(BPIEN03,PYR) ;
"RTN","BPSSCRLG",405,0)
 Q $P($G(^BPSR(BPIEN03,1000,1,355.01,PYR,0)),U)
"RTN","BPSSCRN0")
0^34^B23164009
"RTN","BPSSCRN0",1,0)
BPSSCRN0 ;ALB/ESG - ECME user screen open/close non-billable entry ;21-SEP-2015
"RTN","BPSSCRN0",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**20,24**;JUN 2004;Build 43
"RTN","BPSSCRN0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSSCRN0",4,0)
 ;
"RTN","BPSSCRN0",5,0)
OC ; entry point for open/close non-billable entry action
"RTN","BPSSCRN0",6,0)
 N BPRET,BP59,CLTOOP,JJ1,JJ2,JJ3,DFN,BPSSCRLN,BLN,COMMENT,BPQ,DIE,DA,DR,X,Y
"RTN","BPSSCRN0",7,0)
 N BPRET1,BPSARR59,BPSARR59A
"RTN","BPSSCRN0",8,0)
 D FULL^VALM1
"RTN","BPSSCRN0",9,0)
 W "Open/Close Non-Billable Entry"
"RTN","BPSSCRN0",10,0)
 W !,"Enter the line numbers for the entry/entries to be opened or closed."
"RTN","BPSSCRN0",11,0)
 S BPRET=$$ASKLINES^BPSSCRU4("Select items","C",.BPSARR59,VALMAR)
"RTN","BPSSCRN0",12,0)
 I BPRET="^" G OCX
"RTN","BPSSCRN0",13,0)
 ; Sort chosen entries
"RTN","BPSSCRN0",14,0)
 ; BPRET1= # of Billable Claims^# of Open (Non-Billable) Claims^# of Closed (NB) Claims
"RTN","BPSSCRN0",15,0)
 S BPRET1=$$OCNARR(.BPSARR59,.BPSARR59A)
"RTN","BPSSCRN0",16,0)
 I $P(BPRET1,"^",2)+$P(BPRET1,"^",3)=0 D  G OCX
"RTN","BPSSCRN0",17,0)
 . W !!,"The selected entries must be Non-Billable. Please try again."
"RTN","BPSSCRN0",18,0)
 . D PAUSE^VALM1
"RTN","BPSSCRN0",19,0)
 ;
"RTN","BPSSCRN0",20,0)
 ; Display Billable claims that will not be included.
"RTN","BPSSCRN0",21,0)
 I $P(BPRET1,"^")'=0 D  I BPQ="^" G OCX
"RTN","BPSSCRN0",22,0)
 . W !!,"Selected entries must be Non-Billable."
"RTN","BPSSCRN0",23,0)
 . W !,"The following entries are not Non-Billable and will not be included for"
"RTN","BPSSCRN0",24,0)
 . S BPSPT=""
"RTN","BPSSCRN0",25,0)
 . S BPQ=""
"RTN","BPSSCRN0",26,0)
 . F  S BPSPT=$O(BPSARR59A(1,BPSPT)) Q:BPSPT=""  D  Q:BPQ="^"
"RTN","BPSSCRN0",27,0)
 . . W !,BPSPT," :"
"RTN","BPSSCRN0",28,0)
 . . S BPS59=""
"RTN","BPSSCRN0",29,0)
 . . F  S BPS59=$O(BPSARR59A(1,BPSPT,BPS59)) Q:BPS59=""  D  Q:BPQ="^"
"RTN","BPSSCRN0",30,0)
 . . . I $Y>20 D PAUSE^VALM1 W @IOF I X="^" S BPQ="^" Q
"RTN","BPSSCRN0",31,0)
 . . . W !,@VALMAR@(+$G(BPSARR59A(1,BPSPT,BPS59)),0)
"RTN","BPSSCRN0",32,0)
 . . . D DISPREJ^BPSSCRU6(BPS59)
"RTN","BPSSCRN0",33,0)
 ;
"RTN","BPSSCRN0",34,0)
 ; Display open claims to be closed.
"RTN","BPSSCRN0",35,0)
 I $P(BPRET1,"^",2)'=0 D  I BPQ="^" G OCX
"RTN","BPSSCRN0",36,0)
 . W !!,"You've chosen to CLOSE the following prescription(s) for"
"RTN","BPSSCRN0",37,0)
 . S BPSPT=""
"RTN","BPSSCRN0",38,0)
 . S BPQ=""
"RTN","BPSSCRN0",39,0)
 . F  S BPSPT=$O(BPSARR59A(2,BPSPT)) Q:BPSPT=""  D  Q:BPQ="^"
"RTN","BPSSCRN0",40,0)
 . . W !,BPSPT," :"
"RTN","BPSSCRN0",41,0)
 . . S BPS59=""
"RTN","BPSSCRN0",42,0)
 . . F  S BPS59=$O(BPSARR59A(2,BPSPT,BPS59)) Q:BPS59=""  D  Q:BPQ="^"
"RTN","BPSSCRN0",43,0)
 . . . I $Y>20 D PAUSE^VALM1 W @IOF I X="^" S BPQ="^" Q
"RTN","BPSSCRN0",44,0)
 . . . W !,@VALMAR@(+$G(BPSARR59A(2,BPSPT,BPS59)),0)
"RTN","BPSSCRN0",45,0)
 . . . D DISPREJ^BPSSCRU6(BPS59)
"RTN","BPSSCRN0",46,0)
 ;
"RTN","BPSSCRN0",47,0)
 ;Display closed claims to be opened.
"RTN","BPSSCRN0",48,0)
 I $P(BPRET1,"^",3)'=0 D  I BPQ="^" G OCX
"RTN","BPSSCRN0",49,0)
 . W !!,"You've chosen to OPEN the following prescription(s) for"
"RTN","BPSSCRN0",50,0)
 . S BPSPT=""
"RTN","BPSSCRN0",51,0)
 . S BPQ=""
"RTN","BPSSCRN0",52,0)
 . F  S BPSPT=$O(BPSARR59A(3,BPSPT)) Q:BPSPT=""  D  Q:BPQ="^"
"RTN","BPSSCRN0",53,0)
 . . W !,BPSPT," :"
"RTN","BPSSCRN0",54,0)
 . . S BPS59=""
"RTN","BPSSCRN0",55,0)
 . . F  S BPS59=$O(BPSARR59A(3,BPSPT,BPS59)) Q:BPS59=""  D  Q:BPQ="^"
"RTN","BPSSCRN0",56,0)
 . . . I $Y>20 D PAUSE^VALM1 W @IOF I X="^" S BPQ="^" Q
"RTN","BPSSCRN0",57,0)
 . . . W !,@VALMAR@(+$G(BPSARR59A(3,BPSPT,BPS59)),0)
"RTN","BPSSCRN0",58,0)
 . . . D DISPREJ^BPSSCRU6(BPS59)
"RTN","BPSSCRN0",59,0)
 ;
"RTN","BPSSCRN0",60,0)
 S BPSPRMPT=""
"RTN","BPSSCRN0",61,0)
 I $P(BPRET1,"^",3)'=0,$P(BPRET1,"^",2)=0 S BPSPRMPT="OPENED"
"RTN","BPSSCRN0",62,0)
 I $P(BPRET1,"^",2)'=0,$P(BPRET1,"^",3)=0 S BPSPRMPT="CLOSED"
"RTN","BPSSCRN0",63,0)
 I $P(BPRET1,"^",2)'=0,$P(BPRET1,"^",3)'=0 S BPSPRMPT="OPENED/CLOSED"
"RTN","BPSSCRN0",64,0)
 ;
"RTN","BPSSCRN0",65,0)
 W !!,"ALL Selected Non-Billable Rxs will be "_BPSPRMPT_" using the"
"RTN","BPSSCRN0",66,0)
 W !,"same information gathered in the following prompt.",!
"RTN","BPSSCRN0",67,0)
 ;
"RTN","BPSSCRN0",68,0)
COMQ ; capture the free text comments
"RTN","BPSSCRN0",69,0)
 S COMMENT=$$COMMENT^BPSSCRCL("Comment ",40)
"RTN","BPSSCRN0",70,0)
 I COMMENT=U W !!,"No changes made." D PAUSE^VALM1 G OCX
"RTN","BPSSCRN0",71,0)
 S COMMENT=$$TRIM^XLFSTR(COMMENT)     ; remove leading or trailing spaces
"RTN","BPSSCRN0",72,0)
 I '$L(COMMENT) W $C(7),!,"This is a required response. Enter '^' to exit" G COMQ
"RTN","BPSSCRN0",73,0)
 ;
"RTN","BPSSCRN0",74,0)
 S BPQ=$$YESNO^BPSSCRRS("Are you sure? (Y/N)")
"RTN","BPSSCRN0",75,0)
 I BPQ'=1 W !!,"No changes made." D PAUSE^VALM1 G OCX
"RTN","BPSSCRN0",76,0)
 ;
"RTN","BPSSCRN0",77,0)
 ; time to file
"RTN","BPSSCRN0",78,0)
 S DIE=9002313.59
"RTN","BPSSCRN0",79,0)
 ;
"RTN","BPSSCRN0",80,0)
 ; Loop through closed claims to be re-opened.
"RTN","BPSSCRN0",81,0)
 I $P(BPRET1,"^",3)'=0 D
"RTN","BPSSCRN0",82,0)
 . S BPSPT=""
"RTN","BPSSCRN0",83,0)
 . F  S BPSPT=$O(BPSARR59A(3,BPSPT)) Q:BPSPT=""  D
"RTN","BPSSCRN0",84,0)
 . . S DA=""
"RTN","BPSSCRN0",85,0)
 . . F  S DA=$O(BPSARR59A(3,BPSPT,DA)) Q:DA=""  D
"RTN","BPSSCRN0",86,0)
 . . . S DR="302////0;306////"_$$NOW^XLFDT
"RTN","BPSSCRN0",87,0)
 . . . S DR=DR_";307////^S X=DUZ;308////^S X=COMMENT"
"RTN","BPSSCRN0",88,0)
 . . . D ^DIE
"RTN","BPSSCRN0",89,0)
 ;
"RTN","BPSSCRN0",90,0)
 ; Loop through open claims to be closed.
"RTN","BPSSCRN0",91,0)
 I $P(BPRET1,"^",2)'=0 D
"RTN","BPSSCRN0",92,0)
 . S BPSPT=""
"RTN","BPSSCRN0",93,0)
 . F  S BPSPT=$O(BPSARR59A(2,BPSPT)) Q:BPSPT=""  D
"RTN","BPSSCRN0",94,0)
 . . S DA=""
"RTN","BPSSCRN0",95,0)
 . . F  S DA=$O(BPSARR59A(2,BPSPT,DA)) Q:DA=""  D 
"RTN","BPSSCRN0",96,0)
 . . . S DR="302////1;303////"_$$NOW^XLFDT
"RTN","BPSSCRN0",97,0)
 . . . S DR=DR_";304////^S X=DUZ;305////^S X=COMMENT"
"RTN","BPSSCRN0",98,0)
 . . . D ^DIE
"RTN","BPSSCRN0",99,0)
 ;
"RTN","BPSSCRN0",100,0)
 D PAUSE^VALM1
"RTN","BPSSCRN0",101,0)
 D REDRAW^BPSSCRUD("Updating screen ...")
"RTN","BPSSCRN0",102,0)
 ;
"RTN","BPSSCRN0",103,0)
OCX ;
"RTN","BPSSCRN0",104,0)
 I $G(BPQ)="^" D
"RTN","BPSSCRN0",105,0)
 . W !,"0 claims have been opened/closed."
"RTN","BPSSCRN0",106,0)
 . D PAUSE^VALM1
"RTN","BPSSCRN0",107,0)
 S VALMBCK="R"
"RTN","BPSSCRN0",108,0)
 Q
"RTN","BPSSCRN0",109,0)
 ;
"RTN","BPSSCRN0",110,0)
OCNARR(BPARR,BPARR1) ; Re-sort array of user selected claims
"RTN","BPSSCRN0",111,0)
 ; The user selected claims will be re-sorted, dividing them by
"RTN","BPSSCRN0",112,0)
 ; Billable Claims, Non-Billable Open Claims and NB Closed Claims.
"RTN","BPSSCRN0",113,0)
 ; The claims will also be sorted, within each grouping, alphabetically
"RTN","BPSSCRN0",114,0)
 ; by Patient Name.
"RTN","BPSSCRN0",115,0)
 ; BPARR - input - array of user selected claims
"RTN","BPSSCRN0",116,0)
 ; BPARR1 - output - array of user selected claims; re-sorted
"RTN","BPSSCRN0",117,0)
 ; BPARR1(1,PATIENT,BPS TRANSACTION) = Billable Claims
"RTN","BPSSCRN0",118,0)
 ; BPARR1(2,PATIENT,BPS TRANSACTION) = Non-Billable Open Claims
"RTN","BPSSCRN0",119,0)
 ; BPARR1(3,PATIENT,BPS TRANSACTION) = Non-Billable Closed Claims
"RTN","BPSSCRN0",120,0)
 ; Function Return Value = Counts of each category from BPARR1
"RTN","BPSSCRN0",121,0)
 ;  # of Billable Claims^# of Open NB Claims^# of Closed NB Claims
"RTN","BPSSCRN0",122,0)
 ;
"RTN","BPSSCRN0",123,0)
 N BPS59,BPSCLO,BPSCNT,BPSOPN,BPSPT,BPSBILL
"RTN","BPSSCRN0",124,0)
 S BPSCNT=0,BPSOPN=0,BPSCLO=0
"RTN","BPSSCRN0",125,0)
 S BPS59=""
"RTN","BPSSCRN0",126,0)
 F  S BPS59=$O(BPARR(BPS59)) Q:BPS59=""  D
"RTN","BPSSCRN0",127,0)
 . ; Patient Name
"RTN","BPSSCRN0",128,0)
 . S BPSPT=$$GET1^DIQ(9002313.59,BPS59,5)
"RTN","BPSSCRN0",129,0)
 . ; Billable=0 Non-Billable=1
"RTN","BPSSCRN0",130,0)
 . S BPSBILL=$$NB^BPSSCR03(BPS59)
"RTN","BPSSCRN0",131,0)
 . I BPSBILL=0 D  Q
"RTN","BPSSCRN0",132,0)
 . . S BPARR1(1,BPSPT,BPS59)=BPARR(BPS59)
"RTN","BPSSCRN0",133,0)
 . . S BPSCNT=BPSCNT+1
"RTN","BPSSCRN0",134,0)
 . ; Only Non-Billable Claims at this point
"RTN","BPSSCRN0",135,0)
 . ; Open=0 Closed=1
"RTN","BPSSCRN0",136,0)
 . S BPSOPNCLO=$$NBCL^BPSSCR03(BPS59)
"RTN","BPSSCRN0",137,0)
 . I BPSOPNCLO=0 D  Q
"RTN","BPSSCRN0",138,0)
 . . S BPARR1(2,BPSPT,BPS59)=BPARR(BPS59)
"RTN","BPSSCRN0",139,0)
 . . S BPSOPN=BPSOPN+1
"RTN","BPSSCRN0",140,0)
 . S BPARR1(3,BPSPT,BPS59)=BPARR(BPS59)
"RTN","BPSSCRN0",141,0)
 . S BPSCLO=BPSCLO+1
"RTN","BPSSCRN0",142,0)
 Q BPSCNT_"^"_BPSOPN_"^"_BPSCLO
"RTN","BPSTEST")
0^29^B101618182
"RTN","BPSTEST",1,0)
BPSTEST ;OAK/ELZ - ECME TESTING TOOL ;11/15/07  09:55
"RTN","BPSTEST",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**6,7,8,10,11,15,19,20,22,23,24**;JUN 2004;Build 43
"RTN","BPSTEST",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSTEST",4,0)
 ;
"RTN","BPSTEST",5,0)
 ; Look at BPSTEST1 for additional documentation of the Testing Tool
"RTN","BPSTEST",6,0)
 ;
"RTN","BPSTEST",7,0)
GETOVER(KEY1,KEY2,BPSORESP,BPSWHERE,BPSTYPE,BPPAYSEQ) ;
"RTN","BPSTEST",8,0)
 ; called by BPSNCPDP to enter overrides for a particular RX
"RTN","BPSTEST",9,0)
 ; INPUT
"RTN","BPSTEST",10,0)
 ;    KEY1      - Prescription IEN/Patient IEN
"RTN","BPSTEST",11,0)
 ;    KEY2      - Fill Number/Policy Number
"RTN","BPSTEST",12,0)
 ;    BPSORESP  - Previous response when this claim was processed
"RTN","BPSTEST",13,0)
 ;    BPSWHERE  - RX Action passed into BPSNCPDP
"RTN","BPSTEST",14,0)
 ;    BPSTYPE   - R (Reversal), S (Submission), E (Eligibility)
"RTN","BPSTEST",15,0)
 ;    BPPAYSEQ  - payer sequence 1 - primary, 2 - secondary 
"RTN","BPSTEST",16,0)
 ; OUTPUT
"RTN","BPSTEST",17,0)
 ;    None - Table BPS PAYER RESPONSE OVERRIDE entry is created.
"RTN","BPSTEST",18,0)
 ;
"RTN","BPSTEST",19,0)
 N BPSTRANS,BPSTIEN,BPSSRESP,DIC,X,Y,DIR,DIK,DA
"RTN","BPSTEST",20,0)
 ;
"RTN","BPSTEST",21,0)
 ; Check if testing is enabled
"RTN","BPSTEST",22,0)
 I '$$CHECK() Q
"RTN","BPSTEST",23,0)
 ;
"RTN","BPSTEST",24,0)
 ; Option can not be run for Date of Death option as it causes errors
"RTN","BPSTEST",25,0)
 I $G(XQY0)["DG DEATH ENTRY" W !,"The testing tool can not be run from Date of Death option" Q
"RTN","BPSTEST",26,0)
 ;
"RTN","BPSTEST",27,0)
 ; Do not run for background jobs
"RTN","BPSTEST",28,0)
 I $D(ZTQUEUED)!(",AREV,CRLB,CRLR,CRLX,CRRL,PC,PL,"[(","_BPSWHERE_",")) Q
"RTN","BPSTEST",29,0)
 ;
"RTN","BPSTEST",30,0)
 ; Create Transaction Number
"RTN","BPSTEST",31,0)
 S BPSTRANS=$$IEN59^BPSOSRX(KEY1,KEY2,$S($G(BPPAYSEQ)>0:+BPPAYSEQ,1:1))
"RTN","BPSTEST",32,0)
 ;
"RTN","BPSTEST",33,0)
 ; Lookup the record in the BPS PAYER RESPONSE OVERRIDE table
"RTN","BPSTEST",34,0)
 S DIC=9002313.32,DIC(0)="",X=BPSTRANS
"RTN","BPSTEST",35,0)
 D ^DIC
"RTN","BPSTEST",36,0)
 S BPSTIEN=+Y
"RTN","BPSTEST",37,0)
 ;
"RTN","BPSTEST",38,0)
 ; Prompt if user wants to do overrides
"RTN","BPSTEST",39,0)
 W !!,"Payer Overrides are enabled at this site.  If this is production environment,"
"RTN","BPSTEST",40,0)
 W !,"do not enter overrides (enter No at the next prompt) and disable this"
"RTN","BPSTEST",41,0)
 W !,"functionality in the BPS SETUP table."
"RTN","BPSTEST",42,0)
 W !!,"Entering No at the next prompt will delete any current overrides for the"
"RTN","BPSTEST",43,0)
 W !,"request, if they exist.",!
"RTN","BPSTEST",44,0)
 S DIR(0)="SA^Y:Yes;N:No"
"RTN","BPSTEST",45,0)
 S DIR("A")="Do you want to enter overrides for this request? ",DIR("B")="NO"
"RTN","BPSTEST",46,0)
 D ^DIR
"RTN","BPSTEST",47,0)
 ;
"RTN","BPSTEST",48,0)
 ; If no, delete the transaction (if it exists) and quit
"RTN","BPSTEST",49,0)
 I Y'="Y" D:BPSTIEN'=-1  Q
"RTN","BPSTEST",50,0)
 . S DIK="^BPS(9002313.32,",DA=BPSTIEN
"RTN","BPSTEST",51,0)
 . D ^DIK
"RTN","BPSTEST",52,0)
 ;
"RTN","BPSTEST",53,0)
 ; If the record does not exist, create it
"RTN","BPSTEST",54,0)
 I BPSTIEN=-1 S BPSTIEN=$$CREATE(BPSTRANS)
"RTN","BPSTEST",55,0)
 I BPSTIEN=-1 W !,"Failed to create the BPS PAYER RESPONSE OVERRIDE record",! Q
"RTN","BPSTEST",56,0)
 ;
"RTN","BPSTEST",57,0)
 ; If BPSTYPE is 'S' (submission) and old response is 'E Payable', change BPSTYPE to 'RS'
"RTN","BPSTEST",58,0)
 ; But don't change BPSTYPE to 'RS' if the BPSWHERE value is "ERWV" which is the Resubmit Without Reversal action (BPS*1*20)
"RTN","BPSTEST",59,0)
 I BPSTYPE="S",BPSWHERE'="ERWV",BPSORESP="E PAYABLE"!(BPSORESP="E DUPLICATE")!(BPSORESP="E REVERSAL REJECTED")!(BPSORESP="E REVERSAL UNSTRANDED") S BPSTYPE="RS"
"RTN","BPSTEST",60,0)
 ;
"RTN","BPSTEST",61,0)
 ; Update with the BPSTYPE
"RTN","BPSTEST",62,0)
 D FILE("^BPS(9002313.32,",BPSTIEN,.02,BPSTYPE)
"RTN","BPSTEST",63,0)
 ;
"RTN","BPSTEST",64,0)
 ; Message for RS
"RTN","BPSTEST",65,0)
 I BPSTYPE="RS" D
"RTN","BPSTEST",66,0)
 . W !!,"This submission may also have a reversal so you will be prompted for the"
"RTN","BPSTEST",67,0)
 . W !,"reversal overrides."
"RTN","BPSTEST",68,0)
 ;
"RTN","BPSTEST",69,0)
 ; If BPSTYPE is equal to 'E', then prompt for eligibility response
"RTN","BPSTEST",70,0)
 I BPSTYPE["E" D
"RTN","BPSTEST",71,0)
 . W !!,"Eligibility Questions"
"RTN","BPSTEST",72,0)
 . D PROMPT(BPSTIEN,.08,"A")
"RTN","BPSTEST",73,0)
 . N BPSRESP
"RTN","BPSTEST",74,0)
 . S BPSRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.08,"I")
"RTN","BPSTEST",75,0)
 . I BPSRESP="R" D REJECTS(BPSTIEN) ; BPS*1*22
"RTN","BPSTEST",76,0)
 ;
"RTN","BPSTEST",77,0)
 ; If BPSTYPE contains 'R', then prompt for reversal response
"RTN","BPSTEST",78,0)
 I BPSTYPE["R" D
"RTN","BPSTEST",79,0)
 . W !!,"Reversal Questions"
"RTN","BPSTEST",80,0)
 . D PROMPT(BPSTIEN,.05,"A")
"RTN","BPSTEST",81,0)
 . N BPSRESP
"RTN","BPSTEST",82,0)
 . S BPSRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.05,"I")
"RTN","BPSTEST",83,0)
 . I BPSRESP="R" D ENREVRJ(BPSTRANS)
"RTN","BPSTEST",84,0)
 ;
"RTN","BPSTEST",85,0)
 ; If BPSTYPE contains 'S', do submission response
"RTN","BPSTEST",86,0)
 I BPSTYPE["S" D
"RTN","BPSTEST",87,0)
 . W !!,"Submission Questions"
"RTN","BPSTEST",88,0)
 . D PROMPT(BPSTIEN,.03,"P")
"RTN","BPSTEST",89,0)
 . S BPSSRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.03,"I")
"RTN","BPSTEST",90,0)
 . I BPSSRESP="P"!(BPSSRESP="D") D PROMPT(BPSTIEN,.04,40)       ; total amount paid (509-F9)
"RTN","BPSTEST",91,0)
 . I BPSSRESP="P"!(BPSSRESP="D") D PROMPT(BPSTIEN,.06,9)        ; copay amount (518-FI)
"RTN","BPSTEST",92,0)
 . I BPSSRESP="R" D REJECTS(BPSTIEN) ; BPS*1*22
"RTN","BPSTEST",93,0)
 . ;
"RTN","BPSTEST",94,0)
 . ; This section is for new D1-E7 fields and other fields so we can test that they are filed correctly
"RTN","BPSTEST",95,0)
 . ; At some point, these can probably be removed
"RTN","BPSTEST",96,0)
 . I BPSSRESP="P"!(BPSSRESP="D")!(BPSSRESP="R") D
"RTN","BPSTEST",97,0)
 .. ;
"RTN","BPSTEST",98,0)
 .. ; Ask if user wants to enter data for additional response file fields - Quit if user says no
"RTN","BPSTEST",99,0)
 .. N DIR,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","BPSTEST",100,0)
 .. S DIR(0)="YA",DIR("A")="Populate Additional Response Fields? ",DIR("B")="No" W ! D ^DIR
"RTN","BPSTEST",101,0)
 .. I Y'=1 Q
"RTN","BPSTEST",102,0)
 .. ;
"RTN","BPSTEST",103,0)
 .. ; Overrides to test functionality of BPS*1*20
"RTN","BPSTEST",104,0)
 .. D PROMPT(BPSTIEN,.15,0)        ; Ingredient Cost Paid (506)
"RTN","BPSTEST",105,0)
 .. D PROMPT(BPSTIEN,.16,0)        ; Dispensing Fee Paid (507)
"RTN","BPSTEST",106,0)
 .. D PROMPT(BPSTIEN,.17,0)        ; Remaining Deductible Amount (513)
"RTN","BPSTEST",107,0)
 .. D PROMPT(BPSTIEN,.18,0)        ; Amount Applied to Periodic Deductible (517)
"RTN","BPSTEST",108,0)
 .. ;
"RTN","BPSTEST",109,0)
 .. ; Additional overrides for D1-D9 (BPS*1*15)
"RTN","BPSTEST",110,0)
 .. D PROMPT(BPSTIEN,.09,"")       ; next available fill date
"RTN","BPSTEST",111,0)
 .. D PROMPT(BPSTIEN,.1,"")        ; adjudicated payment type
"RTN","BPSTEST",112,0)
 .. ;
"RTN","BPSTEST",113,0)
 .. ; Additional overrides for E0-E6 (BPS*1*19)
"RTN","BPSTEST",114,0)
 .. D PROMPT(BPSTIEN,2.01,"04")    ; % sales tax basis pd
"RTN","BPSTEST",115,0)
 .. D PROMPT(BPSTIEN,2.02,11)      ; other amount paid qualifier
"RTN","BPSTEST",116,0)
 .. D PROMPT(BPSTIEN,2.03,"01")    ; payer id qualifier
"RTN","BPSTEST",117,0)
 .. D PROMPT(BPSTIEN,2.04,"")      ; help desk phone# ext
"RTN","BPSTEST",118,0)
 .. D PROMPT(BPSTIEN,2.05,"")      ; pro service fee cont/reim amt
"RTN","BPSTEST",119,0)
 .. D PROMPT(BPSTIEN,2.06,"")      ; other payer help desk phone# ext
"RTN","BPSTEST",120,0)
 .. D PROMPT(BPSTIEN,2.07,"")      ; response intermed auth type id
"RTN","BPSTEST",121,0)
 .. D PROMPT(BPSTIEN,2.08,"")      ; response intermed auth id
"RTN","BPSTEST",122,0)
 .. D PROMPT(BPSTIEN,3.01,"")      ; response intermed message
"RTN","BPSTEST",123,0)
 .. ;
"RTN","BPSTEST",124,0)
 .. ; E7 overrides (BPS*1*20)
"RTN","BPSTEST",125,0)
 .. D PROMPT(BPSTIEN,.11,"")          ; quan limit per specific time period
"RTN","BPSTEST",126,0)
 .. D PROMPT(BPSTIEN,.12,"")          ; quan limit time period
"RTN","BPSTEST",127,0)
 .. D PROMPT(BPSTIEN,.13,"")          ; days supp limit per specific time period
"RTN","BPSTEST",128,0)
 .. D PROMPT(BPSTIEN,.14,"")          ; days supp limit time period
"RTN","BPSTEST",129,0)
 .. ; Overrides to test functionality - BPS*1*22
"RTN","BPSTEST",130,0)
 .. D PROMPT(BPSTIEN,2.09,"")         ; reconciliation id
"RTN","BPSTEST",131,0)
 .. ;
"RTN","BPSTEST",132,0)
 .. D PROMPT(BPSTIEN,2.1,"")          ; Patient Pay Amount
"RTN","BPSTEST",133,0)
 .. ;
"RTN","BPSTEST",134,0)
 .. D PROMPT(BPSTIEN,4.01,"")         ; Maximum Age Qualifier
"RTN","BPSTEST",135,0)
 .. D PROMPT(BPSTIEN,4.02,"")         ; Maximum Age
"RTN","BPSTEST",136,0)
 .. D PROMPT(BPSTIEN,4.03,"")         ; Maximum Amount
"RTN","BPSTEST",137,0)
 .. D PROMPT(BPSTIEN,4.04,"")         ; Maximum Amount Qualifier
"RTN","BPSTEST",138,0)
 .. D PROMPT(BPSTIEN,4.05,"")         ; Maximum Amount Time Period
"RTN","BPSTEST",139,0)
 .. D PROMPT(BPSTIEN,4.06,"")         ; Maximum Amount Time Period Start Date
"RTN","BPSTEST",140,0)
 .. D PROMPT(BPSTIEN,4.07,"")         ; Maximum Amount Time Period End Date
"RTN","BPSTEST",141,0)
 .. D PROMPT(BPSTIEN,4.08,"")         ; Maximum Amount Time Period Units
"RTN","BPSTEST",142,0)
 .. D PROMPT(BPSTIEN,4.09,"")         ; Minimum Age Qualifier
"RTN","BPSTEST",143,0)
 .. D PROMPT(BPSTIEN,4.1,"")          ; Minimum Age
"RTN","BPSTEST",144,0)
 .. D PROMPT(BPSTIEN,4.11,"")         ; Other Payer Adjudicated Program Type
"RTN","BPSTEST",145,0)
 .. D PROMPT(BPSTIEN,4.12,"")         ; Patient Pay Component Amount
"RTN","BPSTEST",146,0)
 .. D PROMPT(BPSTIEN,4.13,"")         ; Patient Pay Component Count
"RTN","BPSTEST",147,0)
 .. D PROMPT(BPSTIEN,4.14,"")         ; Patient Pay Component Qualifier
"RTN","BPSTEST",148,0)
 .. D PROMPT(BPSTIEN,4.15,"")         ; Minimum Amount
"RTN","BPSTEST",149,0)
 .. D PROMPT(BPSTIEN,4.16,"")         ; Minimum Amount Qualifier
"RTN","BPSTEST",150,0)
 .. D PROMPT(BPSTIEN,4.17,"")         ; Other Payer Name
"RTN","BPSTEST",151,0)
 .. D PROMPT(BPSTIEN,4.18,"")         ; Remaining Amount
"RTN","BPSTEST",152,0)
 .. D PROMPT(BPSTIEN,4.19,"")         ; Remaining Amount Qualifier
"RTN","BPSTEST",153,0)
 .. D PROMPT(BPSTIEN,4.2,"")          ; Other Payer Relationship Type
"RTN","BPSTEST",154,0)
 ;
"RTN","BPSTEST",155,0)
 W ! D PROMPT(BPSTIEN,.07,0)
"RTN","BPSTEST",156,0)
 Q
"RTN","BPSTEST",157,0)
 ;
"RTN","BPSTEST",158,0)
SETOVER(BPSTRANS,BPSTYPE,BPSDATA) ;
"RTN","BPSTEST",159,0)
 ; called by BPSECMPS to set the override data
"RTN","BPSTEST",160,0)
 ; Input
"RTN","BPSTEST",161,0)
 ;    BPSTRANS - Transaction IEN
"RTN","BPSTEST",162,0)
 ;    BPSTYPE  - B1 for submission, B2 for reversals
"RTN","BPSTEST",163,0)
 ; Output
"RTN","BPSTEST",164,0)
 ;    BPSDATA    - Passed by reference and updated with appropriate overrides
"RTN","BPSTEST",165,0)
 ;
"RTN","BPSTEST",166,0)
 N BPSTIEN,BPSRRESP,BPSSRESP,BPSPAID,BPSRCNT,BPSRIEN,BPSRCODE,BPSRCD,BPSCOPAY,BPSXXXX,BPSUNDEF
"RTN","BPSTEST",167,0)
 N BPSAJPAY,BPSNFLDT,BPSX
"RTN","BPSTEST",168,0)
 N BPS506,BPS507,BPS513,BPS517
"RTN","BPSTEST",169,0)
 ;
"RTN","BPSTEST",170,0)
 ; Check the Test Flag in set in BPS SETUP
"RTN","BPSTEST",171,0)
 I '$$CHECK() Q
"RTN","BPSTEST",172,0)
 ;
"RTN","BPSTEST",173,0)
 ; Check if the Transaction Number is defined in BPS RESPONSE OVERRIDES
"RTN","BPSTEST",174,0)
 S BPSTIEN=$O(^BPS(9002313.32,"B",BPSTRANS,""))
"RTN","BPSTEST",175,0)
 I BPSTIEN="" Q
"RTN","BPSTEST",176,0)
 ;
"RTN","BPSTEST",177,0)
 ; If a eligibility, check for specific reversal overrides and set
"RTN","BPSTEST",178,0)
 ; If a reversal, check for specific reversal overrides and set
"RTN","BPSTEST",179,0)
 ; If a submission, check for specific submission overrides and set
"RTN","BPSTEST",180,0)
 ;   the code for the above checks was moved to SETOVER^BPSTEST2
"RTN","BPSTEST",181,0)
 D SETOVER^BPSTEST2
"RTN","BPSTEST",182,0)
 Q
"RTN","BPSTEST",183,0)
 ;
"RTN","BPSTEST",184,0)
SELOVER ;
"RTN","BPSTEST",185,0)
 ; Used to create overrides for prescription that will processed in the
"RTN","BPSTEST",186,0)
 ; background (CMOP, auto-reversals).  The user is prompted for the
"RTN","BPSTEST",187,0)
 ; prescription and other information and then calls GETOVER.  It is called
"RTN","BPSTEST",188,0)
 ; by option BPS PROVIDER RESPONSE OVERRIDES
"RTN","BPSTEST",189,0)
 ;
"RTN","BPSTEST",190,0)
 ; This does not work for eligibility but we don't do them in the background 
"RTN","BPSTEST",191,0)
 ;   right now.
"RTN","BPSTEST",192,0)
 ;
"RTN","BPSTEST",193,0)
 N BPSRXIEN,BPSRXNM,BPSRXFL,BPSRFL,BPSORESP,BPSTYPE,BPSRXARR,BPSRARR,DIC,Y,DIR
"RTN","BPSTEST",194,0)
 ;
"RTN","BPSTEST",195,0)
 ; Check if test mode is on
"RTN","BPSTEST",196,0)
 I '$$CHECK() Q
"RTN","BPSTEST",197,0)
 ;
"RTN","BPSTEST",198,0)
 ; Prompt for the Prescription
"RTN","BPSTEST",199,0)
 S BPSRXIEN=$$PROMPTRX^BPSUTIL1 Q:BPSRXIEN<1
"RTN","BPSTEST",200,0)
 D RXAPI^BPSUTIL1(BPSRXIEN,".01;22","BPSRXARR","IE")
"RTN","BPSTEST",201,0)
 S BPSRXNM=$G(BPSRXARR(52,BPSRXIEN,.01,"E"))
"RTN","BPSTEST",202,0)
 ;
"RTN","BPSTEST",203,0)
 ; Prompt for Fill/Refill
"RTN","BPSTEST",204,0)
 S DIR(0)="S^0:"_$G(BPSRXARR(52,BPSRXIEN,22,"E"))
"RTN","BPSTEST",205,0)
 F BPSRFL=1:1 D RXSUBF^BPSUTIL1(BPSRXIEN,52,52.1,BPSRFL,.01,"BPSRARR","E") Q:$G(BPSRARR(52.1,BPSRFL,.01,"E"))=""  D
"RTN","BPSTEST",206,0)
 . S DIR(0)=DIR(0)_";"_BPSRFL_":"_BPSRARR(52.1,BPSRFL,.01,"E")
"RTN","BPSTEST",207,0)
 S DIR("A")="Select fill/refill for prescription "_BPSRXNM,DIR("B")=0
"RTN","BPSTEST",208,0)
 D ^DIR
"RTN","BPSTEST",209,0)
 I Y'=+Y Q
"RTN","BPSTEST",210,0)
 S BPSRXFL=Y
"RTN","BPSTEST",211,0)
 ;
"RTN","BPSTEST",212,0)
 ; Prompt for BPSTYPE
"RTN","BPSTEST",213,0)
 S DIR(0)="S^R:Reversal;RS:Resubmit with Reversal;S:Submit"
"RTN","BPSTEST",214,0)
 S DIR("A")="Enter BPSTYPE of transaction",DIR("B")="SUBMIT"
"RTN","BPSTEST",215,0)
 D ^DIR
"RTN","BPSTEST",216,0)
 I ",R,RS,S,"'[","_Y_"," Q
"RTN","BPSTEST",217,0)
 S BPSTYPE=Y
"RTN","BPSTEST",218,0)
 ;
"RTN","BPSTEST",219,0)
 ; Set up parameters
"RTN","BPSTEST",220,0)
 S BPSORESP=""
"RTN","BPSTEST",221,0)
 I BPSTYPE="RS" S BPSTYPE="S",BPSORESP="E PAYABLE"
"RTN","BPSTEST",222,0)
 ;
"RTN","BPSTEST",223,0)
 ; Call GETOVER
"RTN","BPSTEST",224,0)
 D GETOVER(BPSRXIEN,BPSRXFL,BPSORESP,"",BPSTYPE)
"RTN","BPSTEST",225,0)
 Q
"RTN","BPSTEST",226,0)
 ;
"RTN","BPSTEST",227,0)
CHECK() ;
"RTN","BPSTEST",228,0)
 ; Check if Test Mode is ON in the BPS Setup table
"RTN","BPSTEST",229,0)
 ; Also called by BPSNCPDP and BPSEMCPS
"RTN","BPSTEST",230,0)
 ;
"RTN","BPSTEST",231,0)
 ;IA#4440
"RTN","BPSTEST",232,0)
 Q $S($$PROD^XUPROD:0,1:$P($G(^BPS(9002313.99,1,0)),"^",3))
"RTN","BPSTEST",233,0)
 ;
"RTN","BPSTEST",234,0)
CREATE(BPSTRANS) ;
"RTN","BPSTEST",235,0)
 ; Create the Override record
"RTN","BPSTEST",236,0)
 ;
"RTN","BPSTEST",237,0)
 N DIC,X,Y,BPSTIEN,DA
"RTN","BPSTEST",238,0)
 S DIC=9002313.32,DIC(0)="L",X=BPSTRANS
"RTN","BPSTEST",239,0)
 D ^DIC
"RTN","BPSTEST",240,0)
 S BPSTIEN=+Y
"RTN","BPSTEST",241,0)
 Q BPSTIEN
"RTN","BPSTEST",242,0)
 ;
"RTN","BPSTEST",243,0)
FILE(DIE,DA,BPSFLD,BPSDATA) ;
"RTN","BPSTEST",244,0)
 ; File in the Override record
"RTN","BPSTEST",245,0)
 ;
"RTN","BPSTEST",246,0)
 N DR,X,Y
"RTN","BPSTEST",247,0)
 S DR=BPSFLD_"///"_BPSDATA
"RTN","BPSTEST",248,0)
 L +@(DIE_DA_")"):0 I $T D ^DIE L -@(DIE_DA_")") Q
"RTN","BPSTEST",249,0)
 W !?5,"Another user is editing this entry."
"RTN","BPSTEST",250,0)
 Q
"RTN","BPSTEST",251,0)
 ;
"RTN","BPSTEST",252,0)
PROMPT(DA,BPSFLD,BPSDFLT) ;
"RTN","BPSTEST",253,0)
 ; Prompt for a specific field and set the data
"RTN","BPSTEST",254,0)
 ;
"RTN","BPSTEST",255,0)
 N DIE,DR,DTOUT,X,Y
"RTN","BPSTEST",256,0)
 S DIE="^BPS(9002313.32,",DR=BPSFLD_"//"_BPSDFLT
"RTN","BPSTEST",257,0)
 L +@(DIE_DA_")"):0 I $T D ^DIE L -@(DIE_DA_")") Q
"RTN","BPSTEST",258,0)
 W !?5,"Another user is editing this entry."
"RTN","BPSTEST",259,0)
 Q
"RTN","BPSTEST",260,0)
 ;
"RTN","BPSTEST",261,0)
REJECTS(BPSTIEN) ; BPS*1*22
"RTN","BPSTEST",262,0)
 N DA,DIE,DR,DTOUT,X,Y
"RTN","BPSTEST",263,0)
 ; Delete all entries from the reject multiple so user doesn't have to manually delete 
"RTN","BPSTEST",264,0)
 ; The reject code prompt will have a default value of '07'
"RTN","BPSTEST",265,0)
 K ^BPS(9002313.32,BPSTIEN,1)
"RTN","BPSTEST",266,0)
 ; Prompt for Reject Code(s) and set the data 
"RTN","BPSTEST",267,0)
 S DA=BPSTIEN,DIE="^BPS(9002313.32,",DR=1_"//07"
"RTN","BPSTEST",268,0)
 L +@(DIE_DA_")"):0 I $T D ^DIE L -@(DIE_DA_")") Q
"RTN","BPSTEST",269,0)
 W !?5,"Another user is editing this entry."
"RTN","BPSTEST",270,0)
 Q 
"RTN","BPSTEST",271,0)
 ;
"RTN","BPSTEST",272,0)
SETDELAY(BPSTRANS) ;
"RTN","BPSTEST",273,0)
 ; Input
"RTN","BPSTEST",274,0)
 ;    BPSTRANS - Transaction IEN
"RTN","BPSTEST",275,0)
 ; Check the Test Flag in set in BPS SETUP
"RTN","BPSTEST",276,0)
 I '$$CHECK() Q 0
"RTN","BPSTEST",277,0)
 N BPSDELAY,BPSTIEN,BPSTIME
"RTN","BPSTEST",278,0)
 ; Check if the Transaction Number is defined in BPS RESPONSE OVERRIDES
"RTN","BPSTEST",279,0)
 S BPSTIEN=$O(^BPS(9002313.32,"B",BPSTRANS,""))
"RTN","BPSTEST",280,0)
 I BPSTIEN="" Q 0
"RTN","BPSTEST",281,0)
 S BPSDELAY=$$GET1^DIQ(9002313.32,BPSTIEN_",",.07,"I")*60
"RTN","BPSTEST",282,0)
 I BPSDELAY'>0 Q 0
"RTN","BPSTEST",283,0)
 S BPSTIME=$$FMADD^XLFDT($$NOW^XLFDT,,,,BPSDELAY)
"RTN","BPSTEST",284,0)
 I BPSTIME>0 D  Q BPSTIME
"RTN","BPSTEST",285,0)
 . ;schedule a task to run RUNNING^BPSOSRX
"RTN","BPSTEST",286,0)
 . N ZTRTN,ZTDTH,ZTIO,ZTSK
"RTN","BPSTEST",287,0)
 . S ZTRTN="RUNECME^BPSTEST",ZTDESC="BPSTEST: ECME testing tool"
"RTN","BPSTEST",288,0)
 . S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,,,,BPSDELAY+10),ZTIO=""
"RTN","BPSTEST",289,0)
 . D ^%ZTLOAD
"RTN","BPSTEST",290,0)
 Q 0
"RTN","BPSTEST",291,0)
 ;
"RTN","BPSTEST",292,0)
RUNECME ;
"RTN","BPSTEST",293,0)
 D RUNNING^BPSOSRX()
"RTN","BPSTEST",294,0)
 Q
"RTN","BPSTEST",295,0)
 ;get the reversal reject from the ^XTMP and set BPSDATA to override data
"RTN","BPSTEST",296,0)
SETREJ(BPSTRANS) ;
"RTN","BPSTEST",297,0)
 N BPSREJ
"RTN","BPSTEST",298,0)
 S BPSREJ=$G(^XTMP("BPSTEST",BPSTRANS))
"RTN","BPSTEST",299,0)
 I BPSREJ="" Q
"RTN","BPSTEST",300,0)
 S BPSDATA(1,511,1)=BPSREJ
"RTN","BPSTEST",301,0)
 S BPSDATA(1,510)=1
"RTN","BPSTEST",302,0)
 Q
"RTN","BPSTEST",303,0)
 ;enter a reversal reject
"RTN","BPSTEST",304,0)
ENREVRJ(BPSTRANS) ;
"RTN","BPSTEST",305,0)
 N BPRJCODE,TMSTAMP
"RTN","BPSTEST",306,0)
 S BPRJCODE=$$PROMPT^BPSSCRU4("Enter a reject code for reversal")
"RTN","BPSTEST",307,0)
 I $P(BPRJCODE,U)="" Q
"RTN","BPSTEST",308,0)
 I $P(BPRJCODE,U)=0 Q
"RTN","BPSTEST",309,0)
 N X,X1,X2
"RTN","BPSTEST",310,0)
 S X1=DT,X2=2 D C^%DTC
"RTN","BPSTEST",311,0)
 S ^XTMP("BPSTEST",0)=X_U_DT_U_"ECME TESTING TOOL, SEE BPSTEST ROUTINE"
"RTN","BPSTEST",312,0)
 S ^XTMP("BPSTEST",BPSTRANS)=$P(BPRJCODE,U)
"RTN","BPSTEST",313,0)
 Q
"RTN","BPSTEST",314,0)
 ;
"RTN","BPSTEST2")
0^30^B99644333
"RTN","BPSTEST2",1,0)
BPSTEST2 ;AITC/CKB - ECME TESTING TOOL ;5/31/2018
"RTN","BPSTEST2",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**24**;JUN 2004;Build 43
"RTN","BPSTEST2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","BPSTEST2",4,0)
 ;
"RTN","BPSTEST2",5,0)
 Q
"RTN","BPSTEST2",6,0)
 ;
"RTN","BPSTEST2",7,0)
SETOVER ;
"RTN","BPSTEST2",8,0)
 ; the following code was from SETOVER^BPSTEST and is called by SETOVER^BPSTEST
"RTN","BPSTEST2",9,0)
 ;
"RTN","BPSTEST2",10,0)
 ; If a eligibility, check for specific reversal overrides and set
"RTN","BPSTEST2",11,0)
 I BPSTYPE="E1" D  Q
"RTN","BPSTEST2",12,0)
 . S BPSRRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.08,"I")
"RTN","BPSTEST2",13,0)
 . ;
"RTN","BPSTEST2",14,0)
 . ; If the response is Stranded, force an <UNDEF> error
"RTN","BPSTEST2",15,0)
 . I BPSRRESP="S" S BPSXXXX=BPSUNDEF
"RTN","BPSTEST2",16,0)
 . I BPSRRESP]"" S BPSDATA(1,112)=BPSRRESP
"RTN","BPSTEST2",17,0)
 . S BPSDATA(9002313.03,9002313.03,"+1,",501)=$S(BPSRRESP="R":"R",1:"A")
"RTN","BPSTEST2",18,0)
 . ; 
"RTN","BPSTEST2",19,0)
 . ; If the response is accepted, delete the reject code count and codes
"RTN","BPSTEST2",20,0)
 . I BPSRRESP="A" K BPSDATA(1,510),BPSDATA(1,511)
"RTN","BPSTEST2",21,0)
 . ; 
"RTN","BPSTEST2",22,0)
 . ; If the response is rejected, delete the rejections returned by payers
"RTN","BPSTEST2",23,0)
 . ;   and put in the ones entered by the user
"RTN","BPSTEST2",24,0)
 . I BPSRRESP="R" D
"RTN","BPSTEST2",25,0)
 .. K BPSDATA(1,509),BPSDATA(1,511)
"RTN","BPSTEST2",26,0)
 .. S BPSRCNT=0
"RTN","BPSTEST2",27,0)
 .. S BPSRIEN=0 F  S BPSRIEN=$O(^BPS(9002313.32,BPSTIEN,1,BPSRIEN)) Q:+BPSRIEN=0  D
"RTN","BPSTEST2",28,0)
 ... S BPSRCODE=$P($G(^BPS(9002313.32,BPSTIEN,1,BPSRIEN,0)),"^",1)
"RTN","BPSTEST2",29,0)
 ... ; Increment counter and store
"RTN","BPSTEST2",30,0)
 ... I BPSRCODE]"" D
"RTN","BPSTEST2",31,0)
 .... S BPSRCD=$$GET1^DIQ(9002313.93,BPSRCODE_",",.01,"E")
"RTN","BPSTEST2",32,0)
 .... I BPSRCD]"" S BPSRCNT=BPSRCNT+1,BPSDATA(1,511,BPSRCNT)=BPSRCD
"RTN","BPSTEST2",33,0)
 .. ; Store total number of rejections
"RTN","BPSTEST2",34,0)
 .. S BPSDATA(1,510)=BPSRCNT
"RTN","BPSTEST2",35,0)
 ;
"RTN","BPSTEST2",36,0)
 ; If a reversal, check for specific reversal overrides and set
"RTN","BPSTEST2",37,0)
 I BPSTYPE="B2" D
"RTN","BPSTEST2",38,0)
 . S BPSRRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.05,"I")
"RTN","BPSTEST2",39,0)
 . ;
"RTN","BPSTEST2",40,0)
 . ; If the response is Stranded, force an <UNDEF> error
"RTN","BPSTEST2",41,0)
 . I BPSRRESP="S" S BPSXXXX=BPSUNDEF
"RTN","BPSTEST2",42,0)
 . I BPSRRESP]"" S BPSDATA(1,112)=$S(BPSRRESP="D":"S",1:BPSRRESP)
"RTN","BPSTEST2",43,0)
 . S BPSDATA(9002313.03,9002313.03,"+1,",501)=$S(BPSRRESP="R":"R",1:"A")
"RTN","BPSTEST2",44,0)
 . ;
"RTN","BPSTEST2",45,0)
 . ; If the response is accepted or duplicate, kill the reject code count and codes
"RTN","BPSTEST2",46,0)
 . I BPSRRESP="A"!(BPSRRESP="D") K BPSDATA(1,510),BPSDATA(1,511)
"RTN","BPSTEST2",47,0)
 . ;
"RTN","BPSTEST2",48,0)
 . ; If the response is rejected, set the reject codes
"RTN","BPSTEST2",49,0)
 . I BPSRRESP="R" D SETREJ^BPSTEST(BPSTRANS)
"RTN","BPSTEST2",50,0)
 ;
"RTN","BPSTEST2",51,0)
 ; If a submission, check for specific submission overrides and set
"RTN","BPSTEST2",52,0)
  I BPSTYPE="B1" D
"RTN","BPSTEST2",53,0)
 . ; Get submission response
"RTN","BPSTEST2",54,0)
 . S BPSSRESP=$$GET1^DIQ(9002313.32,BPSTIEN_",",.03,"I")
"RTN","BPSTEST2",55,0)
 . ;
"RTN","BPSTEST2",56,0)
 . ; If the response is Stranded, force an <UNDEF> error
"RTN","BPSTEST2",57,0)
 . I BPSSRESP="S" S BPSXXXX=BPSUNDEF
"RTN","BPSTEST2",58,0)
 . ;
"RTN","BPSTEST2",59,0)
 . ; If BPSSRESP exists, file it
"RTN","BPSTEST2",60,0)
 . I BPSSRESP]"" D
"RTN","BPSTEST2",61,0)
 .. S BPSDATA(1,112)=BPSSRESP
"RTN","BPSTEST2",62,0)
 .. S BPSDATA(9002313.03,9002313.03,"+1,",501)=$S(BPSSRESP="R":"R",1:"A")
"RTN","BPSTEST2",63,0)
 .. ; If payable or duplicate, get the BPSPAID amount and file it if it
"RTN","BPSTEST2",64,0)
 .. ; exists.  Also delete any reject codes
"RTN","BPSTEST2",65,0)
 .. I BPSSRESP="P"!(BPSSRESP="D") D
"RTN","BPSTEST2",66,0)
 ... ;
"RTN","BPSTEST2",67,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.1,"I")             ; 505-F5 Patient Pay Amount
"RTN","BPSTEST2",68,0)
 ... I BPSX]"" S BPSDATA(1,"505")=$$DFF^BPSECFM(BPSX,10)
"RTN","BPSTEST2",69,0)
 ... ;
"RTN","BPSTEST2",70,0)
 ... S BPSPAID=$$GET1^DIQ(9002313.32,BPSTIEN_",",.04,"I")
"RTN","BPSTEST2",71,0)
 ... I BPSPAID]"" S BPSDATA(1,509)=$$DFF^BPSECFM(BPSPAID,8)         ; 509 Total amount paid
"RTN","BPSTEST2",72,0)
 ... ;
"RTN","BPSTEST2",73,0)
 ... K BPSDATA(1,510),BPSDATA(1,511)      ; kill Reject Count (510) and Reject Code (511)
"RTN","BPSTEST2",74,0)
 ... ;
"RTN","BPSTEST2",75,0)
 ... S BPSCOPAY=$$GET1^DIQ(9002313.32,BPSTIEN_",",.06,"I")
"RTN","BPSTEST2",76,0)
 ... I BPSCOPAY]"" S BPSDATA(1,518)=$$DFF^BPSECFM(BPSCOPAY,8)       ; 518 Copay Amount
"RTN","BPSTEST2",77,0)
 ... ;
"RTN","BPSTEST2",78,0)
 ... S BPS506=$$GET1^DIQ(9002313.32,BPSTIEN_",",.15,"I")
"RTN","BPSTEST2",79,0)
 ... I BPS506]"" S BPSDATA(1,506)=$$DFF^BPSECFM(BPS506,8)           ; 506 Ingredient Cost Paid
"RTN","BPSTEST2",80,0)
 ... ;
"RTN","BPSTEST2",81,0)
 ... S BPS507=$$GET1^DIQ(9002313.32,BPSTIEN_",",.16,"I")
"RTN","BPSTEST2",82,0)
 ... I BPS507]"" S BPSDATA(1,507)=$$DFF^BPSECFM(BPS507,8)           ; 507 Dispensing Fee Paid
"RTN","BPSTEST2",83,0)
 ... ;
"RTN","BPSTEST2",84,0)
 ... S BPS513=$$GET1^DIQ(9002313.32,BPSTIEN_",",.17,"I")
"RTN","BPSTEST2",85,0)
 ... I BPS513]"" S BPSDATA(1,513)=$$DFF^BPSECFM(BPS513,8)           ; 513 Remaining Deductible Amount
"RTN","BPSTEST2",86,0)
 ... ;
"RTN","BPSTEST2",87,0)
 ... S BPS517=$$GET1^DIQ(9002313.32,BPSTIEN_",",.18,"I")
"RTN","BPSTEST2",88,0)
 ... I BPS517]"" S BPSDATA(1,517)=$$DFF^BPSECFM(BPS517,8)           ; 517 Amount Applied to Periodic Deductible
"RTN","BPSTEST2",89,0)
 ... Q
"RTN","BPSTEST2",90,0)
 .. ;
"RTN","BPSTEST2",91,0)
 .. I BPSSRESP="P"!(BPSSRESP="D")!(BPSSRESP="R") D
"RTN","BPSTEST2",92,0)
 ... ; D1-D9 fields (BPS*1*15)
"RTN","BPSTEST2",93,0)
 ... S BPSAJPAY=$$GET1^DIQ(9002313.32,BPSTIEN_",",.1,"I")           ; Adjudicated Payment Type
"RTN","BPSTEST2",94,0)
 ... I BPSAJPAY]"" S BPSDATA(1,1028)=$$NFF^BPSECFM(BPSAJPAY,2)
"RTN","BPSTEST2",95,0)
 ... S BPSNFLDT=$$GET1^DIQ(9002313.32,BPSTIEN_",",.09,"I")          ; Override Next Available Fill
"RTN","BPSTEST2",96,0)
 ... I BPSNFLDT]"" S BPSDATA(1,2004)=$$DTF1^BPSECFM(BPSNFLDT)
"RTN","BPSTEST2",97,0)
 ... ;
"RTN","BPSTEST2",98,0)
 ... ; E0-E6 overrides (BPS*1*19)
"RTN","BPSTEST2",99,0)
 ... ; PERCENTAGE SALES TAX BASIS PAID
"RTN","BPSTEST2",100,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.01,"I")
"RTN","BPSTEST2",101,0)
 ... I BPSX]"" S BPSDATA(1,561)=BPSX
"RTN","BPSTEST2",102,0)
 ... ; OTHER AMOUNT PAID QUALIFIER and associated field
"RTN","BPSTEST2",103,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.02,"I")
"RTN","BPSTEST2",104,0)
 ... I BPSX]"" S BPSDATA(1,564,1)=$$NFF^BPSECFM(BPSX,2),BPSDATA(1,565,1)=$$DFF^BPSECFM(5.64,8),BPSDATA(1,563)=1
"RTN","BPSTEST2",105,0)
 ... ; PAYER ID QUALIFIER
"RTN","BPSTEST2",106,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.03,"I")
"RTN","BPSTEST2",107,0)
 ... I BPSX]"" S BPSDATA(9002313.03,9002313.03,"+1,",568)=BPSX
"RTN","BPSTEST2",108,0)
 ... ; HELP DESK TELEPHONE NUMBER EXTENSION
"RTN","BPSTEST2",109,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.04,"I")
"RTN","BPSTEST2",110,0)
 ... I BPSX]"" S BPSDATA(1,"2022")=$$NFF^BPSECFM(BPSX,8)
"RTN","BPSTEST2",111,0)
 ... ; PROFESSIONAL SERVICE FEE CONTRACTED/REIMURSEMENT AMOUNT
"RTN","BPSTEST2",112,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.05,"I")
"RTN","BPSTEST2",113,0)
 ... I BPSX]"" S BPSDATA(1,"2033")=$$DFF^BPSECFM(BPSX,8)
"RTN","BPSTEST2",114,0)
 ... ; OTHER PAYER HELPDESK TELEPHONE EXTENSION
"RTN","BPSTEST2",115,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.06,"I")
"RTN","BPSTEST2",116,0)
 ... I BPSX]"" S BPSDATA(1,"2023",1)=$$NFF^BPSECFM(BPSX,8),BPSDATA(1,338,1)="01"
"RTN","BPSTEST2",117,0)
 ... ; RESPONSE INTERMEDIARY AUTHORIZATION TYPE ID and associated fields
"RTN","BPSTEST2",118,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.07,"I")
"RTN","BPSTEST2",119,0)
 ... I BPSX]"" S BPSDATA(1,"2053",1)=$$NFF^BPSECFM(BPSX,2),BPSDATA(1,2052)=1
"RTN","BPSTEST2",120,0)
 ... ; RESPONSE INTERMEDIARY AUTHORIZATION ID and associated fields
"RTN","BPSTEST2",121,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.08,"I")
"RTN","BPSTEST2",122,0)
 ... I BPSX]"" S BPSDATA(1,"2054",1)=$$ANFF^BPSECFM(BPSX,20),BPSDATA(1,2052)=1
"RTN","BPSTEST2",123,0)
 ... ; INTERMEDIARY MESSAGE and associated fields
"RTN","BPSTEST2",124,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",3.01,"I")
"RTN","BPSTEST2",125,0)
 ... I BPSX]"" S BPSDATA(1,"2051",1)=$$ANFF^BPSECFM(BPSX,200),BPSDATA(1,2052)=1
"RTN","BPSTEST2",126,0)
 ... ; (BPS*1*22)
"RTN","BPSTEST2",127,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",2.09,"I") ; B98-34 reconciliation id
"RTN","BPSTEST2",128,0)
 ... I BPSX]"" S BPSDATA(1,"2098")=$$ANFF^BPSECFM(BPSX,30)
"RTN","BPSTEST2",129,0)
 ... ;
"RTN","BPSTEST2",130,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.01,"I") ; 931-F8 maximum age qualifier
"RTN","BPSTEST2",131,0)
 ... I BPSX]"" S BPSDATA(1,931)=$$ANFF^BPSECFM(BPSX,1)
"RTN","BPSTEST2",132,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.02,"I") ; 932-GA maximum age
"RTN","BPSTEST2",133,0)
 ... I BPSX]"" S BPSDATA(1,932)=$$NFF^BPSECFM(BPSX,3)
"RTN","BPSTEST2",134,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.03,"I") ; 933-GB maximum amount
"RTN","BPSTEST2",135,0)
 ... I BPSX]"" S BPSDATA(1,933)=$$NFF^BPSECFM(BPSX,10)
"RTN","BPSTEST2",136,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.04,"I") ; 934-GC maximum amt qualifier
"RTN","BPSTEST2",137,0)
 ... I BPSX]"" S BPSDATA(1,934)=$$ANFF^BPSECFM(BPSX,2)
"RTN","BPSTEST2",138,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.05,"I") ; 935-GF maximum amt time period
"RTN","BPSTEST2",139,0)
 ... I BPSX]"" S BPSDATA(1,935)=$$ANFF^BPSECFM(BPSX,2)
"RTN","BPSTEST2",140,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.06,"I") ; 936-GG maximum amt time period start date
"RTN","BPSTEST2",141,0)
 ... I BPSX]"" S BPSDATA(1,936)=$$DTF1^BPSECFM(BPSX)
"RTN","BPSTEST2",142,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.07,"I") ; 937-GH maximum amt time period end date
"RTN","BPSTEST2",143,0)
 ... I BPSX]"" S BPSDATA(1,937)=$$DTF1^BPSECFM(BPSX)
"RTN","BPSTEST2",144,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.08,"I") ; 938-GJ maximum amt time period units
"RTN","BPSTEST2",145,0)
 ... I BPSX]"" S BPSDATA(1,938)=$$NFF^BPSECFM(BPSX,4)
"RTN","BPSTEST2",146,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.09,"I") ; 943-GQ minimum age qualifier
"RTN","BPSTEST2",147,0)
 ... I BPSX]"" S BPSDATA(1,943)=$$ANFF^BPSECFM(BPSX,1)
"RTN","BPSTEST2",148,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.1,"I") ; 944-GR minimum age
"RTN","BPSTEST2",149,0)
 ... I BPSX]"" S BPSDATA(1,944)=$$NFF^BPSECFM(BPSX,3)
"RTN","BPSTEST2",150,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.11,"I") ; C47-9T other payer adjudicate prog type
"RTN","BPSTEST2",151,0)
 ... I BPSX]"" S BPSDATA(1,2147)=$$ANFF^BPSECFM(BPSX,30)
"RTN","BPSTEST2",152,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.12,"I") ; C93-KN patient pay component amount
"RTN","BPSTEST2",153,0)
 ... I BPSX]"" S BPSDATA(1,2193)=$$DFF^BPSECFM(BPSX,8)
"RTN","BPSTEST2",154,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.13,"I") ; C94-KP patient pay component count
"RTN","BPSTEST2",155,0)
 ... I BPSX]"" S BPSDATA(1,2194)=$$NFF^BPSECFM(BPSX,4)
"RTN","BPSTEST2",156,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.14,"I") ; C95-KQ patient payer component qualifier
"RTN","BPSTEST2",157,0)
 ... I BPSX]"" S BPSDATA(1,2195)=$$ANFF^BPSECFM(BPSX,2)
"RTN","BPSTEST2",158,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.15,"I") ; D19-M1 minimum amount
"RTN","BPSTEST2",159,0)
 ... I BPSX]"" S BPSDATA(1,2219)=$$NFF^BPSECFM(BPSX,10)
"RTN","BPSTEST2",160,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.16,"I") ; D20-M2 minimum amount qualifier
"RTN","BPSTEST2",161,0)
 ... I BPSX]"" S BPSDATA(1,2220)=$$ANFF^BPSECFM(BPSX,3)
"RTN","BPSTEST2",162,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.17,"I") ; D23-M5 other payer name
"RTN","BPSTEST2",163,0)
 ... I BPSX]"" S BPSDATA(1,2223)=$$ANFF^BPSECFM(BPSX,30)
"RTN","BPSTEST2",164,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.18,"I") ; D24-M6 remaining amount
"RTN","BPSTEST2",165,0)
 ... I BPSX]"" S BPSDATA(1,2224)=$$NFF^BPSECFM(BPSX,10)
"RTN","BPSTEST2",166,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.19,"I") ; D25-M7 remaining amount qualifier
"RTN","BPSTEST2",167,0)
 ... I BPSX]"" S BPSDATA(1,2225)=$$ANFF^BPSECFM(BPSX,3)
"RTN","BPSTEST2",168,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",4.2,"I") ; D41-PA other payer relationship type
"RTN","BPSTEST2",169,0)
 ... I BPSX]"" S BPSDATA(1,2241)=$$ANFF^BPSECFM(BPSX,3)
"RTN","BPSTEST2",170,0)
 ... ;
"RTN","BPSTEST2",171,0)
 ... ; E7 overrides (BPS*1*20)
"RTN","BPSTEST2",172,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",.11,"I") I BPSX'="" D     ; B88-3R quantity limit per spec time period
"RTN","BPSTEST2",173,0)
 .... S BPSDATA(1,2087)=1                          ; count field
"RTN","BPSTEST2",174,0)
 .... S BPSDATA(1,2088,1)=$$NFF^BPSECFM(BPSX,10)   ; data from override file
"RTN","BPSTEST2",175,0)
 .... Q
"RTN","BPSTEST2",176,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",.12,"I") I BPSX'="" D     ; B89-3S quantity limit time period
"RTN","BPSTEST2",177,0)
 .... S BPSDATA(1,2087)=1                          ; count field
"RTN","BPSTEST2",178,0)
 .... S BPSDATA(1,2089,1)=$$NFF^BPSECFM(BPSX,5)    ; data from override file
"RTN","BPSTEST2",179,0)
 .... Q
"RTN","BPSTEST2",180,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",.13,"I") I BPSX'="" D     ; B91-3W days supply limit per spec time period
"RTN","BPSTEST2",181,0)
 .... S BPSDATA(1,2090)=1                          ; count field
"RTN","BPSTEST2",182,0)
 .... S BPSDATA(1,2091,1)=$$NFF^BPSECFM(BPSX,3)    ; data from override file
"RTN","BPSTEST2",183,0)
 .... Q
"RTN","BPSTEST2",184,0)
 ... S BPSX=$$GET1^DIQ(9002313.32,BPSTIEN_",",.14,"I") I BPSX'="" D     ; B92-3X days supply limit time period
"RTN","BPSTEST2",185,0)
 .... S BPSDATA(1,2090)=1                          ; count field
"RTN","BPSTEST2",186,0)
 .... S BPSDATA(1,2092,1)=$$NFF^BPSECFM(BPSX,5)    ; data from override file
"RTN","BPSTEST2",187,0)
 .... Q
"RTN","BPSTEST2",188,0)
 ... Q
"RTN","BPSTEST2",189,0)
 .. ;
"RTN","BPSTEST2",190,0)
 .. ; If rejected, get the rejection code and file them
"RTN","BPSTEST2",191,0)
 .. ; Also, delete the BPSPAID amount
"RTN","BPSTEST2",192,0)
 .. I BPSSRESP="R" D
"RTN","BPSTEST2",193,0)
 ... ; Delete old rejections and BPSPAID amount
"RTN","BPSTEST2",194,0)
 ... K BPSDATA(1,509),BPSDATA(1,511)
"RTN","BPSTEST2",195,0)
 ... ; Loop through rejections and store
"RTN","BPSTEST2",196,0)
 ... S BPSRCNT=0
"RTN","BPSTEST2",197,0)
 ... S BPSRIEN=0 F  S BPSRIEN=$O(^BPS(9002313.32,BPSTIEN,1,BPSRIEN)) Q:+BPSRIEN=0  D
"RTN","BPSTEST2",198,0)
 .... S BPSRCODE=$P($G(^BPS(9002313.32,BPSTIEN,1,BPSRIEN,0)),"^",1)
"RTN","BPSTEST2",199,0)
 .... ; Increment counter and store
"RTN","BPSTEST2",200,0)
 .... I BPSRCODE]"" D
"RTN","BPSTEST2",201,0)
 ..... S BPSRCD=$$GET1^DIQ(9002313.93,BPSRCODE_",",.01,"E")
"RTN","BPSTEST2",202,0)
 ..... I BPSRCD]"" S BPSRCNT=BPSRCNT+1,BPSDATA(1,511,BPSRCNT)=BPSRCD
"RTN","BPSTEST2",203,0)
 ... ; Store total number of rejections
"RTN","BPSTEST2",204,0)
 ... S BPSDATA(1,510)=BPSRCNT
"RTN","BPSTEST2",205,0)
 ;
"RTN","BPSTEST2",206,0)
 Q
"SEC","^DIC",9002313.34,9002313.34,0,"AUDIT")
@
"SEC","^DIC",9002313.34,9002313.34,0,"DD")
@
"SEC","^DIC",9002313.34,9002313.34,0,"DEL")
@
"SEC","^DIC",9002313.34,9002313.34,0,"LAYGO")
@
"SEC","^DIC",9002313.34,9002313.34,0,"RD")
Pp
"SEC","^DIC",9002313.34,9002313.34,0,"WR")
@
"SEC","^DIC",9002313.35,9002313.35,0,"AUDIT")
@
"SEC","^DIC",9002313.35,9002313.35,0,"DD")
@
"SEC","^DIC",9002313.35,9002313.35,0,"DEL")
@
"SEC","^DIC",9002313.35,9002313.35,0,"LAYGO")
@
"SEC","^DIC",9002313.35,9002313.35,0,"RD")
Pp
"SEC","^DIC",9002313.35,9002313.35,0,"WR")
@
"SEC","^DIC",9002313.36,9002313.36,0,"AUDIT")
@
"SEC","^DIC",9002313.36,9002313.36,0,"DD")
@
"SEC","^DIC",9002313.36,9002313.36,0,"DEL")
@
"SEC","^DIC",9002313.36,9002313.36,0,"LAYGO")
@
"SEC","^DIC",9002313.36,9002313.36,0,"RD")
Pp
"SEC","^DIC",9002313.36,9002313.36,0,"WR")
@
"SEC","^DIC",9002313.37,9002313.37,0,"AUDIT")
@
"SEC","^DIC",9002313.37,9002313.37,0,"DD")
@
"SEC","^DIC",9002313.37,9002313.37,0,"DEL")
@
"SEC","^DIC",9002313.37,9002313.37,0,"LAYGO")
@
"SEC","^DIC",9002313.37,9002313.37,0,"RD")
Pp
"SEC","^DIC",9002313.37,9002313.37,0,"WR")
@
"SEC","^DIC",9002313.38,9002313.38,0,"AUDIT")
@
"SEC","^DIC",9002313.38,9002313.38,0,"DD")
@
"SEC","^DIC",9002313.38,9002313.38,0,"DEL")
@
"SEC","^DIC",9002313.38,9002313.38,0,"LAYGO")
@
"SEC","^DIC",9002313.38,9002313.38,0,"RD")
Pp
"SEC","^DIC",9002313.38,9002313.38,0,"WR")
@
"SEC","^DIC",9002313.91,9002313.91,0,"AUDIT")
@
"SEC","^DIC",9002313.91,9002313.91,0,"DD")
@
"SEC","^DIC",9002313.91,9002313.91,0,"DEL")
@
"SEC","^DIC",9002313.91,9002313.91,0,"LAYGO")
@
"SEC","^DIC",9002313.91,9002313.91,0,"RD")
Pp
"SEC","^DIC",9002313.91,9002313.91,0,"WR")
@
"UP",9002313.02,9002313.0201,-1)
9002313.02^400
"UP",9002313.02,9002313.0201,0)
9002313.0201
"UP",9002313.02,9002313.0401,-2)
9002313.02^400
"UP",9002313.02,9002313.0401,-1)
9002313.0201^337
"UP",9002313.02,9002313.0401,0)
9002313.0401
"UP",9002313.03,9002313.0301,-1)
9002313.03^1000
"UP",9002313.03,9002313.0301,0)
9002313.0301
"UP",9002313.59,9002313.5914,-1)
9002313.59^14
"UP",9002313.59,9002313.5914,0)
9002313.5914
"UP",9002313.77,9002313.778,-1)
9002313.77^8
"UP",9002313.77,9002313.778,0)
9002313.778
"VER")
8.0^22.2
"^DD",9002313.02,9002313.0201,2147,0)
OTHER PAYER PROGRAM TYPE^P9002313.38'^BPS(9002313.38,^C40;7^Q
"^DD",9002313.02,9002313.0201,2147,3)
Enter the value of the Other Payer Adjudicated Program Type.
"^DD",9002313.02,9002313.0201,2147,21,0)
^^2^2^3180510^
"^DD",9002313.02,9002313.0201,2147,21,1,0)
The type of prescription benefit plan/program associated with the Other 
"^DD",9002313.02,9002313.0201,2147,21,2,0)
Payer.
"^DD",9002313.02,9002313.0201,2147,"DT")
3180521
"^DD",9002313.02,9002313.0201,2149,0)
OTHER PAYER RECONCILIATION ID^FJ30^^C40;9^K:$L(X)>30!($L(X)<1) X
"^DD",9002313.02,9002313.0201,2149,3)
Enter the Other Payer Reconciliation ID, 1 to 10 characters in length.
"^DD",9002313.02,9002313.0201,2149,21,0)
^^5^5^3180522^
"^DD",9002313.02,9002313.0201,2149,21,1,0)
Reconciliation ID (B98-34) as reported by the Other Payer for 
"^DD",9002313.02,9002313.0201,2149,21,2,0)
Paid/Accepted transactions OR for Information Reporting transactions, the 
"^DD",9002313.02,9002313.0201,2149,21,3,0)
designated default value for reporting a previous payer's rejected 
"^DD",9002313.02,9002313.0201,2149,21,4,0)
response as designated in the Other Payer Reject Code value(s) reported 
"^DD",9002313.02,9002313.0201,2149,21,5,0)
in the COB claim.
"^DD",9002313.02,9002313.0201,2149,"DT")
3180716
"^DD",9002313.02,9002313.0201,2150,0)
BENEFIT STAGE INDICATOR COUNT^NJ1,0^^C40;10^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.02,9002313.0201,2150,3)
Type a number between 0 and 9, 0 decimal digits.
"^DD",9002313.02,9002313.0201,2150,21,0)
^^1^1^3180510^
"^DD",9002313.02,9002313.0201,2150,21,1,0)
Count of Benefit Stage Indicator (C51-9X) occurrences.
"^DD",9002313.02,9002313.0201,2150,"DT")
3180521
"^DD",9002313.02,9002313.0201,2151,0)
BENEFIT STAGE INDICATOR^P9002313.35'^BPS(9002313.35,^C50;1^Q
"^DD",9002313.02,9002313.0201,2151,3)
Enter a Benefit Stage Indicator.
"^DD",9002313.02,9002313.0201,2151,21,0)
^^2^2^3180510^
"^DD",9002313.02,9002313.0201,2151,21,1,0)
Code identifying the Benefit Stage(s) which applied to the claim at the 
"^DD",9002313.02,9002313.0201,2151,21,2,0)
time of adjudication.
"^DD",9002313.02,9002313.0201,2151,"DT")
3180514
"^DD",9002313.02,9002313.0201,2160,0)
COMPOUND LEVEL OF COMPLEXITY^S^1:LOW LEVEL COMPLEXITY;10:MID-LEVEL COMP NON-HAZARDOUS;20:MID-LEVEL COMP HAZARDOUS;30:HIGH LEVEL NON-HAZARDOUS;40:HIGH LEVEL HAZARDOUS;50:HIGH LEVEL NON-HAZARDOUS STERILE;60:HIGH LEVEL HAZARDOUS STERILE;^C50;10^Q
"^DD",9002313.02,9002313.0201,2160,3)
Select a value used by the pharmacy to indicate the complexity involved in the preparation of the compounded prescription.
"^DD",9002313.02,9002313.0201,2160,21,0)
^^2^2^3180510^
"^DD",9002313.02,9002313.0201,2160,21,1,0)
Value used by the pharmacy to indicate the complexity involved in the 
"^DD",9002313.02,9002313.0201,2160,21,2,0)
preparation of the compounded prescription.
"^DD",9002313.02,9002313.0201,2160,"DT")
3180716
"^DD",9002313.02,9002313.0201,2190,0)
LTPAC BILLING METHODOLOGY^S^1:FULL QUANTITY;2:POST-CONSUMPTION;3:PRE-CONSUMPTION;^C80;10^Q
"^DD",9002313.02,9002313.0201,2190,3)
Enter billing methodology 1, 2 or 3.
"^DD",9002313.02,9002313.0201,2190,21,0)
^^1^1^3180510^
"^DD",9002313.02,9002313.0201,2190,21,1,0)
Code indicating the billing methodology used for the claim.
"^DD",9002313.02,9002313.0201,2190,"DT")
3180521
"^DD",9002313.02,9002313.0201,2191,0)
LTPAC DISPENSE FREQUENCY^P9002313.36'^BPS(9002313.36,^C90;1^Q
"^DD",9002313.02,9002313.0201,2191,3)
Enter a LTPAC Dispense Frequency code.
"^DD",9002313.02,9002313.0201,2191,21,0)
^^1^1^3180510^
"^DD",9002313.02,9002313.0201,2191,21,1,0)
Code indicating the frequency of dispensing medication to a LTPAC patient.
"^DD",9002313.02,9002313.0201,2191,"DT")
3180515
"^DD",9002313.02,9002313.0201,2192,0)
NUMBER OF LTPAC DISPENSING EVE^NJ3,0^^C90;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.02,9002313.0201,2192,.1)
NUMBER OF LTPAC DISPENSING EVENTS
"^DD",9002313.02,9002313.0201,2192,3)
Enter a number between 0 and 999, 0 decimal digits.
"^DD",9002313.02,9002313.0201,2192,21,0)
^^2^2^3180510^
"^DD",9002313.02,9002313.0201,2192,21,1,0)
Value indicating the number of times pharmacy dispensed product or 
"^DD",9002313.02,9002313.0201,2192,21,2,0)
service for the claim period requested.
"^DD",9002313.02,9002313.0201,2192,"DT")
3180510
"^DD",9002313.02,9002313.0201,2198,0)
PREPARATION ENVIRONMENT CODE^S^1:PILL SPLITTING;2:OTHER;^C90;8^Q
"^DD",9002313.02,9002313.0201,2198,3)
Enter a preparation environment code.
"^DD",9002313.02,9002313.0201,2198,21,0)
^^1^1^3180510^
"^DD",9002313.02,9002313.0201,2198,21,1,0)
Event which required a special preparation environment.
"^DD",9002313.02,9002313.0201,2198,"DT")
3180716
"^DD",9002313.02,9002313.0201,2199,0)
PREPARATION ENVIRONMENT TYPE^S^1:SPECIFIC PRESSURE ENV NOT REQ/NOT USED;2:POSITIVE PRESSURE NON-STERILE/NON-HAZARDOUS;3:NEGATIVE PRESSURE NON-STERILE/HAZARDOUS;4:POSITIVE PRESSURE STERILE/NON-HAZARDOUS;5:NEGATIVE PRESSURE STERILE/HAZARDOUS;^C90;9^Q
"^DD",9002313.02,9002313.0201,2199,3)
Enter the code identifying the environment in which the medication was prepared.
"^DD",9002313.02,9002313.0201,2199,21,0)
^^1^1^3180510^
"^DD",9002313.02,9002313.0201,2199,21,1,0)
Code identifying the environment in which the medication was prepared.
"^DD",9002313.02,9002313.0201,2199,"DT")
3180716
"^DD",9002313.02,9002313.0201,2201,0)
PRESCRIBER DEA NUMBER^FJ15^^D00;1^K:$L(X)>15!($L(X)<15) X
"^DD",9002313.02,9002313.0201,2201,3)
Answer must be 15 characters in length.
"^DD",9002313.02,9002313.0201,2201,21,0)
^^5^5^3180510^
"^DD",9002313.02,9002313.0201,2201,21,1,0)
ID assigned to a health care provider (e.g. Practitioner, Hospital, 
"^DD",9002313.02,9002313.0201,2201,21,2,0)
Manufacturer, etc.) by the US Drug Enforcement Administration, allowing 
"^DD",9002313.02,9002313.0201,2201,21,3,0)
them to distribute, dispense, administer, or conduct research with 
"^DD",9002313.02,9002313.0201,2201,21,4,0)
respect to controlled substances in the course of professional practice 
"^DD",9002313.02,9002313.0201,2201,21,5,0)
or research.
"^DD",9002313.02,9002313.0201,2201,"DT")
3180524
"^DD",9002313.02,9002313.0201,2202,0)
TOTAL PRESCRIBED QUANTITY RE^NJ10,0^^D00;2^K:+X'=X!(X>9999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",9002313.02,9002313.0201,2202,3)
Enter a value between 1 and 9999999999, 0 decimal digits.
"^DD",9002313.02,9002313.0201,2202,21,0)
^^4^4^3180510^
"^DD",9002313.02,9002313.0201,2202,21,1,0)
Accumulated Total Prescribed Quantity Remaining as of the date of 
"^DD",9002313.02,9002313.0201,2202,21,2,0)
service. Calculated value based on: (Prescribed Quantity (460-ET)) * 
"^DD",9002313.02,9002313.0201,2202,21,3,0)
(Number Of Refills Authorized (415-DF) + 1) - Accumulated Quantity 
"^DD",9002313.02,9002313.0201,2202,21,4,0)
Dispensed (442-E7) for each previous fill.
"^DD",9002313.02,9002313.0201,2202,"DT")
3180510
"^DD",9002313.02,9002313.0201,2214,0)
SUBROGATION AMOUNT REQUESTED^NJ11,2^^D10;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999)!(X<1)!(X?.E1"."3.N) X
"^DD",9002313.02,9002313.0201,2214,3)
Enter a dollar amount between 1 and 99999999, 2 decimal digits.
"^DD",9002313.02,9002313.0201,2214,21,0)
^^1^1^3180510^
"^DD",9002313.02,9002313.0201,2214,21,1,0)
Amount paid by the plan to the pharmacy.
"^DD",9002313.02,9002313.0201,2214,"DT")
3180521
"^DD",9002313.02,9002313.0201,2216,0)
SUBMISSION TYPE CODE COUNT^NJ1,0^^D10;6^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.02,9002313.0201,2216,3)
Enter a count between 0 and 9, 0 decimal digits.
"^DD",9002313.02,9002313.0201,2216,21,0)
^^1^1^3180510^
"^DD",9002313.02,9002313.0201,2216,21,1,0)
Count of the Submission Type Code (D17-K8) occurrences.
"^DD",9002313.02,9002313.0201,2216,"DT")
3180510
"^DD",9002313.02,9002313.0201,2217,0)
SUBMISSION TYPE CODE^S^AA:340B;AB:SPLIT BILLING;AC:ENCOUNTER;^D10;7^Q
"^DD",9002313.02,9002313.0201,2217,3)
Enter a code identifying the type of submission.
"^DD",9002313.02,9002313.0201,2217,21,0)
^^2^2^3180510^
"^DD",9002313.02,9002313.0201,2217,21,1,0)
Code identifying the type of submission as needed for appropriate 
"^DD",9002313.02,9002313.0201,2217,21,2,0)
transaction processing.
"^DD",9002313.02,9002313.0201,2217,"DT")
3180716
"^DD",9002313.02,9002313.0201,2218,0)
DO NOT DISPENSE BEFORE DATE^D^^D10;8^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",9002313.02,9002313.0201,2218,3)
Enter the earliest date the drug can be dispensed.
"^DD",9002313.02,9002313.0201,2218,21,0)
^^2^2^3180510^
"^DD",9002313.02,9002313.0201,2218,21,1,0)
The earliest date the prescriber indicates a prescribed drug can be 
"^DD",9002313.02,9002313.0201,2218,21,2,0)
dispensed.
"^DD",9002313.02,9002313.0201,2218,"DT")
3180716
"^DD",9002313.02,9002313.0201,2221,0)
MULTIPLE RX/SVC GROUP ID^FJ35^^D20;1^K:$L(X)>35!($L(X)<1) X
"^DD",9002313.02,9002313.0201,2221,3)
Enter a ID, must be 1-35 characters in length.
"^DD",9002313.02,9002313.0201,2221,21,0)
^^2^2^3180510^
"^DD",9002313.02,9002313.0201,2221,21,1,0)
Unique ID assigned by the prescriber or pharmacy system to link multiple 
"^DD",9002313.02,9002313.0201,2221,21,2,0)
product orders together.
"^DD",9002313.02,9002313.0201,2221,"DT")
3180521
"^DD",9002313.02,9002313.0201,2222,0)
MULTI RX/SVC GROUP REASON CODE^S^1:INJECTABLE THERAPY;2:LOADING QTY;3:MAINTENANCE QTY;4:UNBREAKABLE PKG MUTL LOCATIONS;5:TRIAL FILL;6:NON-COMM AVAILABLE DOSE;7:BUNDLED HEALTH CARE SERVICE;^D20;2^Q
"^DD",9002313.02,9002313.0201,2222,3)
Enter the reason of the grouped prescriptions code from 1-7.
"^DD",9002313.02,9002313.0201,2222,21,0)
^^2^2^3180510^
"^DD",9002313.02,9002313.0201,2222,21,1,0)
Indicates the reason for the quantity dispensed and/or days supply as a 
"^DD",9002313.02,9002313.0201,2222,21,2,0)
result of the prescriber issuing grouped prescriptions.
"^DD",9002313.02,9002313.0201,2222,"DT")
3180716
"^DD",9002313.02,9002313.0201,2251,0)
OTHER PAYR TAX EXEMPT INDICATR^S^1:OTHER PAYER/PLAN IS TAX EXEMPT;2:OTHER PAYER RELIGIOUS ORGANIZATION;3:OTHER PAYER TAX EXEMPT CERTIFICATE;^D50;1^Q
"^DD",9002313.02,9002313.0201,2251,3)
Enter a code indicating the source of the tax-exempt status.
"^DD",9002313.02,9002313.0201,2251,21,0)
^^2^2^3180521^^
"^DD",9002313.02,9002313.0201,2251,21,1,0)
Code indicating the source of the percentage tax exempt status of the 
"^DD",9002313.02,9002313.0201,2251,21,2,0)
other payer's claim.
"^DD",9002313.02,9002313.0201,2251,"DT")
3180716
"^DD",9002313.02,9002313.0201,2252,0)
OTHER PAYR FEE EXMPT INDICATR^S^1:OTHER PAYER/PLAN IS REG FEE EXEMPT;2:OTHER PAYER RELIGIOUS ORGANIZATION;3:OTHER PAYER REG FEE EXEMPT CERTIFICATE;^D50;2^Q
"^DD",9002313.02,9002313.0201,2252,3)
Enter a code indicating the source of the regulatory fee exempt status.
"^DD",9002313.02,9002313.0201,2252,21,0)
^^2^2^3180511^
"^DD",9002313.02,9002313.0201,2252,21,1,0)
Code Indicating the source of the regulatory fee exempt status of the 
"^DD",9002313.02,9002313.0201,2252,21,2,0)
other payer's claim.
"^DD",9002313.02,9002313.0201,2252,"DT")
3180716
"^DD",9002313.02,9002313.0201,2253,0)
OTHER PAYR FEE TYPE COUNT^NJ1,0^^D50;3^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.02,9002313.0201,2253,3)
Enter a count between 0 and 9, 0 decimal digits.
"^DD",9002313.02,9002313.0201,2253,21,0)
^^1^1^3180511^
"^DD",9002313.02,9002313.0201,2253,21,1,0)
Count of Other Payer Regulatory Fee Type Code.
"^DD",9002313.02,9002313.0201,2253,"DT")
3180521
"^DD",9002313.02,9002313.0201,2257,0)
PRESCRIBER PLACE OF SERVICE^P9002313.34'^BPS(9002313.34,^D50;7^Q
"^DD",9002313.02,9002313.0201,2257,3)
Enter a two digit code between 01 and 99.
"^DD",9002313.02,9002313.0201,2257,21,0)
^^2^2^3180511^
"^DD",9002313.02,9002313.0201,2257,21,1,0)
Code identifying the place where the patient encounter occurred as 
"^DD",9002313.02,9002313.0201,2257,21,2,0)
reported by the prescriber.
"^DD",9002313.02,9002313.0201,2257,"DT")
3180514
"^DD",9002313.02,9002313.0201,2260,0)
REGULATORY FEE COUNT^NJ1,0^^D50;10^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.02,9002313.0201,2260,3)
Enter a count between 0 and 9, 0 decimal digits.
"^DD",9002313.02,9002313.0201,2260,21,0)
^^1^1^3180511^
"^DD",9002313.02,9002313.0201,2260,21,1,0)
Count of Regulatory Fee Type Code (D61-RL).
"^DD",9002313.02,9002313.0201,2260,"DT")
3180511
"^DD",9002313.02,9002313.0201,2261,0)
REGULATORY FEE TYPE CODE^S^AA:LA RS 46 2625;AB:OTHER;^D60;1^Q
"^DD",9002313.02,9002313.0201,2261,3)
Enter the code identifying the regulatory fee type.
"^DD",9002313.02,9002313.0201,2261,21,0)
^^1^1^3180521^^
"^DD",9002313.02,9002313.0201,2261,21,1,0)
Code identifying the type of regulatory fee.
"^DD",9002313.02,9002313.0201,2261,"DT")
3180716
"^DD",9002313.02,9002313.0201,2263,0)
OTHER PAYER FEE TYPE CODE^S^AA:LA RS 46 2625;AB:OTHER;^D60;3^Q
"^DD",9002313.02,9002313.0201,2263,3)
Enter the code identifying the other payer fee type.
"^DD",9002313.02,9002313.0201,2263,21,0)
^^1^1^3180511^
"^DD",9002313.02,9002313.0201,2263,21,1,0)
Code identifying the type of Regulatory Fee reported by the other payer.
"^DD",9002313.02,9002313.0201,2263,"DT")
3180716
"^DD",9002313.02,9002313.0401,2149,0)
OTHER PAYER RECONCILIATION ID^FJ30^^0;11^K:$L(X)>30!($L(X)<1) X
"^DD",9002313.02,9002313.0401,2149,3)
Enter an ID between 1 and 30 characters.
"^DD",9002313.02,9002313.0401,2149,21,0)
^^5^5^3180516^
"^DD",9002313.02,9002313.0401,2149,21,1,0)
NCPDP field C49-9V - Other Payer Reconciliation ID. Reconciliation ID 
"^DD",9002313.02,9002313.0401,2149,21,2,0)
(B98-34) as reported by the Other Payer for Paid/Accepted transactions OR 
"^DD",9002313.02,9002313.0401,2149,21,3,0)
for Information Reporting transactions, the designated default value for 
"^DD",9002313.02,9002313.0401,2149,21,4,0)
reporting a previous payer's rejected response as designated in the Other 
"^DD",9002313.02,9002313.0401,2149,21,5,0)
Payer Reject Code value(s) reported in the COB claim.
"^DD",9002313.02,9002313.0401,2149,"DT")
3180516
"^DD",9002313.03,9002313.0301,931,0)
MAXIMUM AGE QUALIFIER^S^D:DAYS (24-hr periods);Y:YEARS (12-month periods);^930;1^Q
"^DD",9002313.03,9002313.0301,931,3)
Enter a maximum age qualifier, D or Y.
"^DD",9002313.03,9002313.0301,931,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,931,21,1,0)
Qualifies Maximum Age (932-GA).
"^DD",9002313.03,9002313.0301,931,"DT")
3180716
"^DD",9002313.03,9002313.0301,932,0)
MAXIMUM AGE^NJ3,0^^930;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,932,3)
Enter an age, a number between 1 and 999.
"^DD",9002313.03,9002313.0301,932,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,932,21,1,0)
Maximum age at which the product/service is covered (inclusive). 
"^DD",9002313.03,9002313.0301,932,21,2,0)
Qualified by Maximum Age Qualifier (931-F80).
"^DD",9002313.03,9002313.0301,932,"DT")
3180716
"^DD",9002313.03,9002313.0301,933,0)
MAXIMUM AMOUNT^FJ10O^^930;3^K:$L(X)>10!($L(X)<5) X
"^DD",9002313.03,9002313.0301,933,2)
S Y(0)=Y S Y=$J($$NFF^BPSECFM(Y,10),10,3)
"^DD",9002313.03,9002313.0301,933,2.1)
S Y=$J($$NFF^BPSECFM(Y,10),10,3)
"^DD",9002313.03,9002313.0301,933,3)
Enter an amount, must be 5-10 characters in length.
"^DD",9002313.03,9002313.0301,933,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,933,21,1,0)
Qualified by Maximum Amount Qualifier (934-GC).
"^DD",9002313.03,9002313.0301,933,"DT")
3180716
"^DD",9002313.03,9002313.0301,934,0)
MAXIMUM AMOUNT QUALIFIER^S^DL:DOLLAR AMOUNT;DS:DAYS SUPPLY;FL:FILLS;QY:QUANTITY;^930;4^Q
"^DD",9002313.03,9002313.0301,934,3)
Enter a maximum account qualifier code: DL, DS, FL or QY.
"^DD",9002313.03,9002313.0301,934,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,934,21,1,0)
Qualifies Maximum Amount (933-GB).
"^DD",9002313.03,9002313.0301,934,"DT")
3180717
"^DD",9002313.03,9002313.0301,935,0)
MAXIMUM AMOUNT TIME PERIOD^S^CM:CALENDAR MONTH;CQ:CALENDAR QUARTER;CY:CALENDAR YEAR;DY:DAYS;LT:LIFETIME;PD:PER DISPENSING;SP:SPECIFIC DATE RANGE;^930;5^Q
"^DD",9002313.03,9002313.0301,935,3)
Enter a maximum amount time period code: CM, CQ, CY, DY, LT, PD or SP. 
"^DD",9002313.03,9002313.0301,935,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,935,21,1,0)
Type of time period associated with the overall Maximum Amount Qualifier 
"^DD",9002313.03,9002313.0301,935,21,2,0)
(934-GC).
"^DD",9002313.03,9002313.0301,935,"DT")
3180716
"^DD",9002313.03,9002313.0301,936,0)
MAX AMT TIME PERIOD START DATE^FJ8O^^930;6^K:$L(X)>8!($L(X)<8) X
"^DD",9002313.03,9002313.0301,936,2)
S Y(0)=Y S Y=$$FM3EXT^BPSOSU1(Y)
"^DD",9002313.03,9002313.0301,936,2.1)
S Y=$$FM3EXT^BPSOSU1(Y)
"^DD",9002313.03,9002313.0301,936,3)
Answer must be 8 characters in length.
"^DD",9002313.03,9002313.0301,936,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,936,21,1,0)
Starting date of Specific Date Range.
"^DD",9002313.03,9002313.0301,936,"DT")
3180524
"^DD",9002313.03,9002313.0301,937,0)
MAX AMT TIME PERIOD END DATE^FJ8O^^930;7^K:$L(X)>8!($L(X)<8) X
"^DD",9002313.03,9002313.0301,937,2)
S Y(0)=Y S Y=$$FM3EXT^BPSOSU1(Y)
"^DD",9002313.03,9002313.0301,937,2.1)
S Y=$$FM3EXT^BPSOSU1(Y)
"^DD",9002313.03,9002313.0301,937,3)
Answer must be 8 characters in length.
"^DD",9002313.03,9002313.0301,937,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,937,21,1,0)
Ending date of Specific Date Range.
"^DD",9002313.03,9002313.0301,937,"DT")
3180524
"^DD",9002313.03,9002313.0301,938,0)
MAX AMT TIME PERIOD UNITS^NJ4,0^^930;8^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,938,3)
Enter the number of units between 0 and 9999, 0 decimal digits.
"^DD",9002313.03,9002313.0301,938,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,938,21,1,0)
Number of units associated with the overall Maximum Amount Time Period 
"^DD",9002313.03,9002313.0301,938,21,2,0)
(935-GF).
"^DD",9002313.03,9002313.0301,938,"DT")
3180511
"^DD",9002313.03,9002313.0301,943,0)
MINIMUM AGE QUALIFIER^S^D:DAYS;Y:YEARS;^940;3^Q
"^DD",9002313.03,9002313.0301,943,3)
Enter a minimum age qualifier, D-Days or Y-Years.
"^DD",9002313.03,9002313.0301,943,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,943,21,1,0)
Qualifies Minimum Age (944-GR).
"^DD",9002313.03,9002313.0301,943,"DT")
3180716
"^DD",9002313.03,9002313.0301,944,0)
MINIMUM AGE^NJ3,0^^940;4^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,944,3)
Enter the minimum age, a number between 1 and 999.
"^DD",9002313.03,9002313.0301,944,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,944,21,1,0)
Qualified by Minimum Age Qualifier (943-GQ).
"^DD",9002313.03,9002313.0301,944,"DT")
3180716
"^DD",9002313.03,9002313.0301,2147,0)
OTHER PAYER PROGRAM TYPE^P9002313.38'^BPS(9002313.38,^C40;7^Q
"^DD",9002313.03,9002313.0301,2147,3)
Enter the value of the Other Payer Adjudicated Program Type.
"^DD",9002313.03,9002313.0301,2147,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2147,21,1,0)
The type of prescription benefit plan/program associated with the Other 
"^DD",9002313.03,9002313.0301,2147,21,2,0)
Payer.
"^DD",9002313.03,9002313.0301,2147,"DT")
3180716
"^DD",9002313.03,9002313.0301,2150,0)
BENEFIT STAGE INDICATOR COUNT^NJ1,0^^C40;10^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2150,3)
Enter a count between 0 and 9, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2150,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2150,21,1,0)
Count of Benefit Stage Indicator (C51-9X) occurrences.
"^DD",9002313.03,9002313.0301,2150,"DT")
3180511
"^DD",9002313.03,9002313.0301,2151,0)
BENEFIT STAGE INDICATOR^P9002313.35'^BPS(9002313.35,^C50;1^Q
"^DD",9002313.03,9002313.0301,2151,3)
Enter the Benefit Stage Indicator.
"^DD",9002313.03,9002313.0301,2151,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2151,21,1,0)
Code identifying the Benefit Stage(s) which applied to the claim at the 
"^DD",9002313.03,9002313.0301,2151,21,2,0)
time of adjudication.
"^DD",9002313.03,9002313.0301,2151,"DT")
3180514
"^DD",9002313.03,9002313.0301,2158,0)
BENEFIT TYPE OPPORTUNITY^S^1:FLU VACCINE BENEFIT;2:90 DAY AT RETAIL;^C50;8^Q
"^DD",9002313.03,9002313.0301,2158,3)
Enter the Benefit Type, 1 or 2.
"^DD",9002313.03,9002313.0301,2158,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2158,21,1,0)
The type of additional benefit the patient is eligible for.
"^DD",9002313.03,9002313.0301,2158,"DT")
3180511
"^DD",9002313.03,9002313.0301,2159,0)
BENEFIT TYPE OPPORTUNITY COUNT^NJ1,0^^C50;9^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2159,3)
Enter a count between 0 and 9, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2159,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2159,21,1,0)
Count of Benefit Type Opportunity (C58-AE) that follow.
"^DD",9002313.03,9002313.0301,2159,"DT")
3180511
"^DD",9002313.03,9002313.0301,2166,0)
HELP DESK BUS UNIT TYPE^S^1:PHARMACY HELP DESK;2:CLINICAL/PA;3:HEALTH PLAN;4:ELIG-3RD PARTY LIABILITY;5:OTHER;^C60;6^Q
"^DD",9002313.03,9002313.0301,2166,3)
Enter the help desk support type, a number between 1-5.
"^DD",9002313.03,9002313.0301,2166,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2166,21,1,0)
The type of help desk support that is available.
"^DD",9002313.03,9002313.0301,2166,"DT")
3180716
"^DD",9002313.03,9002313.0301,2167,0)
HELP DESK BUS UNIT TYPE COUNT^NJ2,0^^C60;7^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2167,3)
Enter the number of types, a number between 0 and 99, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2167,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2167,21,1,0)
The number of Help Desk Business Unit Types (C66-BA).
"^DD",9002313.03,9002313.0301,2167,"DT")
3180716
"^DD",9002313.03,9002313.0301,2168,0)
HELP DESK CONTACT INFORMATION^FJ255^^C60;8^K:$L(X)>255!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2168,3)
Enter the help desk contact info, between 1 and 255 characters.
"^DD",9002313.03,9002313.0301,2168,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2168,21,1,0)
Value of the specific help desk contact information (e.g.: Telephone 
"^DD",9002313.03,9002313.0301,2168,21,2,0)
Number, Fax Number, URL).
"^DD",9002313.03,9002313.0301,2168,"DT")
3180716
"^DD",9002313.03,9002313.0301,2169,0)
HELP DESK CONTACT INFO EXT^FJ8^^C60;9^K:$L(X)>8!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2169,3)
Enter the help desk contact info extension between 1-8 characters in length.
"^DD",9002313.03,9002313.0301,2169,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2169,21,1,0)
Extension of the help desk contact information.
"^DD",9002313.03,9002313.0301,2169,"DT")
3180716
"^DD",9002313.03,9002313.0301,2170,0)
HELP DESK CONTACT INFO QUAL^S^1:TELEPHONE NUMBER;2:FAX NUMBER;3:URL;4:OTHER;^C60;10^Q
"^DD",9002313.03,9002313.0301,2170,3)
Enter Help Desk Contact Information qualifier code, a number between 1-4.
"^DD",9002313.03,9002313.0301,2170,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2170,21,1,0)
Code qualifying the value in the Help Desk Contact Information 
"^DD",9002313.03,9002313.0301,2170,21,2,0)
(C68-BC).
"^DD",9002313.03,9002313.0301,2170,"DT")
3180716
"^DD",9002313.03,9002313.0301,2171,0)
HELP DESK SUPPORT TYPE^S^1:PHARMACY;2:PRESCRIBER;3:MEMBER SERVICES;4:OTHER PAYER-N1 REPORTING;5:OTHER;^C70;1^Q
"^DD",9002313.03,9002313.0301,2171,3)
Enter a Help Desk Support type code, a number between 1-5.
"^DD",9002313.03,9002313.0301,2171,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2171,21,1,0)
The intended entity responsible for contacting the help desk.
"^DD",9002313.03,9002313.0301,2171,"DT")
3180717
"^DD",9002313.03,9002313.0301,2172,0)
HELP DESK SUPPORT TYPE COUNT^NJ2,0^^C70;2^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2172,3)
Enter the help desk support type count between 0 and 99, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2172,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2172,21,1,0)
The number of Help Desk Contact Support Types.
"^DD",9002313.03,9002313.0301,2172,"DT")
3180716
"^DD",9002313.03,9002313.0301,2180,0)
INTERMEDIARY HELP DESK TYPE^S^1:INTERMEDIARY/SWITCH;2:REMS-Risk Evaluation Mitigation Strategy;3:PDMP-Prescription Drug Monitor Program;4:Other;^C70;10^Q
"^DD",9002313.03,9002313.0301,2180,3)
Enter a Intermediary Help Desk Support Type code, a number between 1-4.
"^DD",9002313.03,9002313.0301,2180,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2180,21,1,0)
The type of intermediary help desk support that is available.
"^DD",9002313.03,9002313.0301,2180,"DT")
3180716
"^DD",9002313.03,9002313.0301,2181,0)
INTERMEDIARY HLPDSK BUS COUNT^NJ2,0^^C80;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2181,3)
Enter the number of intermediary help desk business unit types between 0 and 99, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2181,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2181,21,1,0)
The number of Intermediary Help Desk Business Unit Types (C80-G8).
"^DD",9002313.03,9002313.0301,2181,"DT")
3180716
"^DD",9002313.03,9002313.0301,2182,0)
INTERMEDIARY HLPDSK CONTACT^FJ255^^C80;2^K:$L(X)>255!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2182,3)
Enter the intermediary help desk contact info, must be 1-255 characters in length.
"^DD",9002313.03,9002313.0301,2182,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2182,21,1,0)
Value of the specific intermediary help desk contact information (e.g.: 
"^DD",9002313.03,9002313.0301,2182,21,2,0)
Telephone Number, Fax Number, URL).
"^DD",9002313.03,9002313.0301,2182,"DT")
3180716
"^DD",9002313.03,9002313.0301,2183,0)
INTERMEDIARY HLPDSK EXTENSION^FJ8^^C80;3^K:$L(X)>8!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2183,3)
Enter the intermediary help desk extension, must be 1-8 characters in length.
"^DD",9002313.03,9002313.0301,2183,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2183,21,1,0)
Extension of the intermediary help desk contact information.
"^DD",9002313.03,9002313.0301,2183,"DT")
3180716
"^DD",9002313.03,9002313.0301,2184,0)
INTERMEDIARY HLPDSK QUALIFIER^S^1:TELEPHONE NUMBER;2:FAX NUMBER;3:URL;4:OTHER;^C80;4^Q
"^DD",9002313.03,9002313.0301,2184,3)
Enter a Intermediary Help Desk Contact Information code, a number between 1-4.
"^DD",9002313.03,9002313.0301,2184,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2184,21,1,0)
Code qualifying the value in the Intermediary Help Desk Contact 
"^DD",9002313.03,9002313.0301,2184,21,2,0)
Information (C82-JP).
"^DD",9002313.03,9002313.0301,2184,"DT")
3180716
"^DD",9002313.03,9002313.0301,2185,0)
INTERMEDIARY HLPDSK SUPPT TYPE^S^1:PHARMACY;2:PRESCRIBER;3:MEMBER SERVICES;4:OTHER;^C80;5^Q
"^DD",9002313.03,9002313.0301,2185,3)
Enter a intended entity type between 1-4.
"^DD",9002313.03,9002313.0301,2185,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2185,21,1,0)
The intended entity responsible for contacting the intermediary help desk.
"^DD",9002313.03,9002313.0301,2185,"DT")
3180716
"^DD",9002313.03,9002313.0301,2186,0)
INTERMEDIARY HLPDSK TYP COUNT^NJ2,0^^C80;6^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2186,3)
Enter the number of intermediary help desk contact support types between 0 and 99, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2186,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2186,21,1,0)
The number of Intermediary Help Desk Contact Support Types.
"^DD",9002313.03,9002313.0301,2186,"DT")
3180716
"^DD",9002313.03,9002313.0301,2193,0)
PATIENT PAY COMPONENT AMOUNT^FJ8O^^C90;3^K:$L(X)>8!($L(X)<6) X
"^DD",9002313.03,9002313.0301,2193,2)
S Y(0)=Y S Y="$"_$J($$DFF2EXT^BPSECFM(Y),7,2)
"^DD",9002313.03,9002313.0301,2193,2.1)
S Y="$"_$J($$DFF2EXT^BPSECFM(Y),7,2)
"^DD",9002313.03,9002313.0301,2193,3)
Answer must be 6-8 characters in length.
"^DD",9002313.03,9002313.0301,2193,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2193,21,1,0)
The cost share amount attributed to the component of Patient Pay Amount 
"^DD",9002313.03,9002313.0301,2193,21,2,0)
(505-F5).
"^DD",9002313.03,9002313.0301,2193,"DT")
3180716
"^DD",9002313.03,9002313.0301,2194,0)
PATIENT PAY COMPONENT COUNT^NJ2,0^^C90;4^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2194,3)
Enter a count between 0 and 99, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2194,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2194,21,1,0)
Count of Patient Pay Component Qualifier(s) (C95-KQ) AND Patient Pay 
"^DD",9002313.03,9002313.0301,2194,21,2,0)
Component Amount(s) (C93-KN) occurrences.
"^DD",9002313.03,9002313.0301,2194,"DT")
3180511
"^DD",9002313.03,9002313.0301,2195,0)
PATIENT PAY COMPONENT QUAL^P9002313.37'^BPS(9002313.37,^C90;5^Q
"^DD",9002313.03,9002313.0301,2195,3)
Enter a qualifier, must be 1-2 characters in length.
"^DD",9002313.03,9002313.0301,2195,21,0)
^^1^1^3180716^
"^DD",9002313.03,9002313.0301,2195,21,1,0)
Code qualifying the Patient Pay Component Amount (C93-KN).
"^DD",9002313.03,9002313.0301,2195,"DT")
3180716
"^DD",9002313.03,9002313.0301,2196,0)
PAYER/HEALTH PLAN ID COUNT^NJ1,0^^C90;6^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2196,3)
Enter a count between 0 and 9, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2196,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2196,21,1,0)
Count of Payer/Health Plan ID Occurrences.
"^DD",9002313.03,9002313.0301,2196,"DT")
3180511
"^DD",9002313.03,9002313.0301,2215,0)
SUBROGTN REQUESTR RECONCIL ID^FJ30^^D10;5^K:$L(X)>30!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2215,.1)
SUBROGATION REQUESTORS RECONCILIATION ID
"^DD",9002313.03,9002313.0301,2215,3)
Enter the Reconciliation ID returned to the pharmacy, 1-30 characters in length.
"^DD",9002313.03,9002313.0301,2215,21,0)
^^2^2^3180517^
"^DD",9002313.03,9002313.0301,2215,21,1,0)
The Reconciliation ID returned to the pharmacy on the paid claim 
"^DD",9002313.03,9002313.0301,2215,21,2,0)
transaction from the original/requesting payer.
"^DD",9002313.03,9002313.0301,2215,"DT")
3180517
"^DD",9002313.03,9002313.0301,2219,0)
MINIMUM AMOUNT^FJ10O^^D10;9^K:$L(X)>10!($L(X)<5) X
"^DD",9002313.03,9002313.0301,2219,2)
S Y(0)=Y S Y=$J($$NFF^BPSECFM(Y,10),10,3)
"^DD",9002313.03,9002313.0301,2219,2.1)
S Y=$J($$NFF^BPSECFM(Y,10),10,3)
"^DD",9002313.03,9002313.0301,2219,3)
Enter an amount, must be 5-10 characters in length.
"^DD",9002313.03,9002313.0301,2219,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2219,21,1,0)
Minimum amount for a quantity limit as specified in the Minimum Amount 
"^DD",9002313.03,9002313.0301,2219,21,2,0)
Qualifier (D20-M2).
"^DD",9002313.03,9002313.0301,2219,"DT")
3180614
"^DD",9002313.03,9002313.0301,2220,0)
MINIMUM AMOUNT QUALIFIER^S^MDL:MIN DOLLAR AMT;MDS:MIN DAY SUPPLY;MFL:MIN FILLS;MQY:MIN QTY;^D10;10^Q
"^DD",9002313.03,9002313.0301,2220,3)
Enter a minimum amount code: MDL, MDS, MFL or MQY.
"^DD",9002313.03,9002313.0301,2220,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2220,21,1,0)
Qualifies the amount in the Minimum Amount (D19-M1) field.
"^DD",9002313.03,9002313.0301,2220,"DT")
3180716
"^DD",9002313.03,9002313.0301,2223,0)
OTHER PAYER NAME^FJ70^^D20;3^K:$L(X)>70!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2223,3)
Enter the Other Payer Name between 1-70 characters.
"^DD",9002313.03,9002313.0301,2223,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2223,21,1,0)
Name of the other payer.
"^DD",9002313.03,9002313.0301,2223,"DT")
3180716
"^DD",9002313.03,9002313.0301,2224,0)
REMAINING AMOUNT^FJ10O^^D20;4^K:$L(X)>10!($L(X)<5) X
"^DD",9002313.03,9002313.0301,2224,2)
S Y(0)=Y S Y=$J($$NFF^BPSECFM(Y,10),10,3)
"^DD",9002313.03,9002313.0301,2224,2.1)
S Y=$J($$NFF^BPSECFM(Y,10),10,3)
"^DD",9002313.03,9002313.0301,2224,3)
Enter an amount, must be 5-10 characters in length.
"^DD",9002313.03,9002313.0301,2224,21,0)
^^4^4^3180511^
"^DD",9002313.03,9002313.0301,2224,21,1,0)
Qualified by Remaining Amount Qualifier (D25-M7).
"^DD",9002313.03,9002313.0301,2224,21,2,0)
Remaining Benefit Amount as it relates to benefit
"^DD",9002313.03,9002313.0301,2224,21,3,0)
dollars is represented in Remaining Benefit Amount
"^DD",9002313.03,9002313.0301,2224,21,4,0)
(514-FE) field.
"^DD",9002313.03,9002313.0301,2224,"DT")
3180614
"^DD",9002313.03,9002313.0301,2225,0)
REMAINING AMOUNT QUALIFIER^S^RFL:REMAINING FILLS;RQY:REMAINING QTY;RDS:REMAINING DAYS SUPPLY;^D20;5^Q
"^DD",9002313.03,9002313.0301,2225,3)
Enter a remaining amount qualifier:  RFL, RQY or RDS.
"^DD",9002313.03,9002313.0301,2225,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2225,21,1,0)
Qualifies Remaining Amount (D24-M6).
"^DD",9002313.03,9002313.0301,2225,"DT")
3180716
"^DD",9002313.03,9002313.0301,2241,0)
OTHER PAYER RELATIONSHIP TYPE^S^CP:COB COVERAGE PRIOR TO RESPONDING PAYER;CS:COB COVERAGE SUBSEQUENT TO RESPONDING PAYER;MX:MUTALLY EXCLUSIVE BENEITS;CC:CHANGE IN COVERAGE;RP:RESPONDING PAYER;CE:CENTRALIZED ELIGIBILITY;^D40;1^Q
"^DD",9002313.03,9002313.0301,2241,3)
Enter a payer relationship type code: CP, CS, MX, CC, RP or CE.
"^DD",9002313.03,9002313.0301,2241,21,0)
^^3^3^3180511^
"^DD",9002313.03,9002313.0301,2241,21,1,0)
Identifies the relationship of the other payer information returned by 
"^DD",9002313.03,9002313.0301,2241,21,2,0)
the reporting payer or entity for coordination with the Other Payer 
"^DD",9002313.03,9002313.0301,2241,21,3,0)
Coverage Type (338-5C) value for that payer.
"^DD",9002313.03,9002313.0301,2241,"DT")
3180716
"^DD",9002313.03,9002313.0301,2242,0)
FORMULARY ALT BENEFIT TIER^S^1:TIER 1;2:TIER 2;3:TIER 3;4:TIER 4;5:TIER 5;9:OTHER;^D40;2^Q
"^DD",9002313.03,9002313.0301,2242,3)
Enter a formulary benefit tier code.
"^DD",9002313.03,9002313.0301,2242,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2242,21,1,0)
Patient cost share tier applied to the formulary alternative product.
"^DD",9002313.03,9002313.0301,2242,"DT")
3180716
"^DD",9002313.03,9002313.0301,2243,0)
FORMULARY ALT REASON CODE^S^1:STEP THERAPY REQUIRED;2:PRESCRIBED DRUG IS NON FORMULARY;3:PRESCRIBED DRUG REQUIRES PRIOR AUTH;4:PREFERRED PRODUCT;^D40;3^Q
"^DD",9002313.03,9002313.0301,2243,3)
Enter a formulary reason code.
"^DD",9002313.03,9002313.0301,2243,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2243,21,1,0)
Reason for formulary alternative option(s).
"^DD",9002313.03,9002313.0301,2243,"DT")
3180716
"^DD",9002313.03,9002313.0301,2244,0)
FORMULRY ALT REQ THERAPY COUNT^FJ2^^D40;4^K:$L(X)>2!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2244,3)
Enter the count between 1 and 99.
"^DD",9002313.03,9002313.0301,2244,21,0)
^^1^1^3180529^
"^DD",9002313.03,9002313.0301,2244,21,1,0)
Count of Formulary Alternative Required Therapy Indicator Occurrences.
"^DD",9002313.03,9002313.0301,2244,"DT")
3180716
"^DD",9002313.03,9002313.0301,2245,0)
FORMULRY ALT THERAPY INDICATOR^S^1:REQUIRED TREATMENT NOT OTHERWISE SPECIFIED;2:REQUIRED TREATMENT, MINIMUM TIME PERIO DURATION REQUIRED;3:REQUIRED TREATMENT, WITHIN SPECIFIED TIME PERIOD RANGE;^D40;5^Q
"^DD",9002313.03,9002313.0301,2245,3)
Enter a formulary alternative therapy indicator.
"^DD",9002313.03,9002313.0301,2245,21,0)
^^1^1^3180529^
"^DD",9002313.03,9002313.0301,2245,21,1,0)
Code identifying required treatment with specified formulary alternative.
"^DD",9002313.03,9002313.0301,2245,"DT")
3180716
"^DD",9002313.03,9002313.0301,2246,0)
FORMULRY ALT THERAPY TIME QUAL^S^1:DAYS;2:CALENDAR MONTH;3:CALENDAR QUARTERS;4:CALENDAR YEARS;5:SPECIFIED DATE RANGE;^D40;6^Q
"^DD",9002313.03,9002313.0301,2246,3)
Enter a formulary alternative therapy time qualifying code.
"^DD",9002313.03,9002313.0301,2246,21,0)
^^2^2^3180529^
"^DD",9002313.03,9002313.0301,2246,21,1,0)
Code qualifying Formulary Alternative Required Therapy Time Period 
"^DD",9002313.03,9002313.0301,2246,21,2,0)
Duration.
"^DD",9002313.03,9002313.0301,2246,"DT")
3180716
"^DD",9002313.03,9002313.0301,2247,0)
FORMULRY ALT THERAPY DURATION^FJ3^^D40;7^K:$L(X)>3!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2247,3)
Enter time period, 1-3 characters in length.
"^DD",9002313.03,9002313.0301,2247,21,0)
^^2^2^3180529^
"^DD",9002313.03,9002313.0301,2247,21,1,0)
Minimum amount of time period duration for required therapy. Qualified by 
"^DD",9002313.03,9002313.0301,2247,21,2,0)
Formulary Alternative Required Therapy Time Period Qualifier (D46-P2).
"^DD",9002313.03,9002313.0301,2247,"DT")
3180529
"^DD",9002313.03,9002313.0301,2248,0)
FORMULRY ALT THERAPY START DT^D^^D40;8^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",9002313.03,9002313.0301,2248,.1)
FORMULARY ALT THERAPY START DATE
"^DD",9002313.03,9002313.0301,2248,3)
Enter a start date.
"^DD",9002313.03,9002313.0301,2248,"DT")
3180716
"^DD",9002313.03,9002313.0301,2249,0)
FORMULRY ALT THERAPY END DATE^D^^D40;9^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",9002313.03,9002313.0301,2249,3)
Enter the end date.
"^DD",9002313.03,9002313.0301,2249,21,0)
^^1^1^3180529^
"^DD",9002313.03,9002313.0301,2249,21,1,0)
End date for the required therapy time period range.
"^DD",9002313.03,9002313.0301,2249,"DT")
3180716
"^DD",9002313.03,9002313.0301,2250,0)
OTHER PAYER BENEFIT CLASS^FJ10^^D40;10^K:$L(X)>10!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2250,3)
Enter the other payer benefit classification, must be 1-10 characters in length.
"^DD",9002313.03,9002313.0301,2250,21,0)
^^2^2^3180716^
"^DD",9002313.03,9002313.0301,2250,21,1,0)
Identifies the benefit classification for other payer
"^DD",9002313.03,9002313.0301,2250,21,2,0)
information associated to the patient (D50-P6).
"^DD",9002313.03,9002313.0301,2250,"DT")
3180716
"^DD",9002313.03,9002313.0301,2254,0)
PLAN OVERRIDE INDICATOR^FJ6^^D50;4^K:$L(X)>6!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2254,3)
Enter the plan override indicator, must be 1-6 characters in length.
"^DD",9002313.03,9002313.0301,2254,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2254,21,1,0)
Restricted to valid NCPDP Telecommunication request fields (field 
"^DD",9002313.03,9002313.0301,2254,21,2,0)
number-ID). Example: 420-DK, 462-EV, etc.
"^DD",9002313.03,9002313.0301,2254,"DT")
3180716
"^DD",9002313.03,9002313.0301,2255,0)
PLAN OVERRIDE VALUE COUNT^NJ1,0^^D50;5^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.03,9002313.0301,2255,3)
Enter a count between 0 and 9, 0 decimal digits.
"^DD",9002313.03,9002313.0301,2255,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2255,21,1,0)
Count of plan benefit override values.
"^DD",9002313.03,9002313.0301,2255,"DT")
3180522
"^DD",9002313.03,9002313.0301,2256,0)
PLAN BENEFIT OVERRIDE VALUE^FJ10^^D50;6^K:$L(X)>10!($L(X)<1) X
"^DD",9002313.03,9002313.0301,2256,3)
Enter a plan benefit override value, must be 1-10 characters in length.
"^DD",9002313.03,9002313.0301,2256,21,0)
^^2^2^3180716^
"^DD",9002313.03,9002313.0301,2256,21,1,0)
Identifies the plan supported value(s) for the field identified
"^DD",9002313.03,9002313.0301,2256,21,2,0)
in the Plan Benefit Override Indicator (D54-RC). 
"^DD",9002313.03,9002313.0301,2256,"DT")
3180716
"^DD",9002313.03,9002313.0301,2261,0)
REGULATORY FEE TYPE CODE^S^AA:LA RS 46-2625;AB:OTHER;^D60;1^Q
"^DD",9002313.03,9002313.0301,2261,3)
Enter a regulatory fee type code.
"^DD",9002313.03,9002313.0301,2261,21,0)
^^1^1^3180511^
"^DD",9002313.03,9002313.0301,2261,21,1,0)
Code identifying the type of regulatory fee.
"^DD",9002313.03,9002313.0301,2261,"DT")
3180716
"^DD",9002313.03,9002313.0301,2262,0)
REGULATORY FEE EXMPT INDICATOR^S^1:PAYER/PLAN IN REGULATORY FEE EXEMPT;2:RELIGIOUS ORGANIZATION;3:REGULATORY FEE EXEMPT CERTIFICATE;^D60;2^Q
"^DD",9002313.03,9002313.0301,2262,3)
Enter a regulatory fee exempt indicator code.
"^DD",9002313.03,9002313.0301,2262,21,0)
^^1^1^3180529^
"^DD",9002313.03,9002313.0301,2262,21,1,0)
Code indicating the source of the regulatory fee exempt status of claim.
"^DD",9002313.03,9002313.0301,2262,"DT")
3180716
"^DD",9002313.03,9002313.0301,2265,0)
PATIENT REGULATORY FEE AMOUNT^NJ11,2^^D60;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999)!(X<0)!(X?.E1"."3.N) X
"^DD",9002313.03,9002313.0301,2265,3)
Enter a dollar amount between 0 and 99999999, 2 decimal digits.
"^DD",9002313.03,9002313.0301,2265,21,0)
^^2^2^3180511^
"^DD",9002313.03,9002313.0301,2265,21,1,0)
Patient regulatory fee amount obligation or portion thereof when benefit 
"^DD",9002313.03,9002313.0301,2265,21,2,0)
is set up to directly pass regulatory fee onto the patient.
"^DD",9002313.03,9002313.0301,2265,"DT")
3180521
"^DD",9002313.32,9002313.32,4.01,0)
MAXIMUM AGE QUALIFIER^S^D:DAYS (24-hr periods);Y:YEARS (12-month periods);^4;1^Q
"^DD",9002313.32,9002313.32,4.01,3)
Enter the override value for the Maximum Age Qualifier.
"^DD",9002313.32,9002313.32,4.01,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.01,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.01,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.01,23,0)
^^4^4^3180716^
"^DD",9002313.32,9002313.32,4.01,23,1,0)
The value will be used to populate the MAXIMUM AGE
"^DD",9002313.32,9002313.32,4.01,23,2,0)
QUALIFIER (#931) field of the BPS RESPONSES (#9002313.03)
"^DD",9002313.32,9002313.32,4.01,23,3,0)
file. Corresponds to NCPDP code 931-F8 and qualifies
"^DD",9002313.32,9002313.32,4.01,23,4,0)
MAXIMUM AGE (932-GA).
"^DD",9002313.32,9002313.32,4.01,"DT")
3180716
"^DD",9002313.32,9002313.32,4.02,0)
MAXIMUM AGE^NJ3,0^^4;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.32,9002313.32,4.02,3)
Enter override value between 0 and 999, for the Maximum Age.
"^DD",9002313.32,9002313.32,4.02,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.02,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.02,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.02,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.02,23,1,0)
The value will be used to populate the MAXIMUM AGE
"^DD",9002313.32,9002313.32,4.02,23,2,0)
(#932) field of the BPS RESPONSES (#9002313.03) file.
"^DD",9002313.32,9002313.32,4.02,23,3,0)
Corresponds to NCPDP code 932-GA.
"^DD",9002313.32,9002313.32,4.02,"DT")
3180716
"^DD",9002313.32,9002313.32,4.03,0)
MAXIMUM AMOUNT^NJ10,3^^4;3^K:+X'=X!(X>999999.999)!(X<0)!(X?.E1"."4.N) X
"^DD",9002313.32,9002313.32,4.03,3)
Enter between 0 and 999999.999, 3 decimal digits.
"^DD",9002313.32,9002313.32,4.03,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.03,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.03,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.03,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.03,23,1,0)
The value will be used to populate the MAXIMUM AMOUNT
"^DD",9002313.32,9002313.32,4.03,23,2,0)
(#933) field of the BPS RESPONSES (#9002313.03) file.
"^DD",9002313.32,9002313.32,4.03,23,3,0)
Corresponds to NCPDP code 933-GB.
"^DD",9002313.32,9002313.32,4.03,"DT")
3180716
"^DD",9002313.32,9002313.32,4.04,0)
MAXIMUM AMOUNT QUALIFIER^S^DL:DOLLAR AMOUNT;DS:DAYS SUPPLY;FL:FILLS;QY:QUANTITY;^4;4^Q
"^DD",9002313.32,9002313.32,4.04,3)
Enter override value for the Maximum Amount Qualifier.
"^DD",9002313.32,9002313.32,4.04,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.04,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.04,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.04,23,0)
^^4^4^3180716^
"^DD",9002313.32,9002313.32,4.04,23,1,0)
The value will be used to populate the MAXIMUM AMOUNT 
"^DD",9002313.32,9002313.32,4.04,23,2,0)
QUALIFIER (#934) field of the BPS RESPONSES (#9002313.03)
"^DD",9002313.32,9002313.32,4.04,23,3,0)
file. Corresponds to NCPDP code 934-GC and qualifies 
"^DD",9002313.32,9002313.32,4.04,23,4,0)
MAXIMUM AMOUNT (933-GB).
"^DD",9002313.32,9002313.32,4.04,"DT")
3180716
"^DD",9002313.32,9002313.32,4.05,0)
MAXIMUM AMOUNT TIME PERIOD^S^CM:CALENDAR MONTH;CQ:CALENDAR QUARTER;CY:CALENDAR YEAR;DY:DAYS;LT:LIFETIME;PD:PER DISPENSING;SP:SPECIFIC DATE RANGE;^4;5^Q
"^DD",9002313.32,9002313.32,4.05,3)
Enter override value for the Maximum Amount Time Period.
"^DD",9002313.32,9002313.32,4.05,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.05,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.05,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.05,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.05,23,1,0)
The value will be used to populate the MAXIMUM AMOUNT TIME
"^DD",9002313.32,9002313.32,4.05,23,2,0)
PERIOD (#935) field of the BPS RESPONSES (#9002313.03)
"^DD",9002313.32,9002313.32,4.05,23,3,0)
file. Corresponds to NCPDP code 935-GF.
"^DD",9002313.32,9002313.32,4.05,"DT")
3180716
"^DD",9002313.32,9002313.32,4.06,0)
MAX AMT TIME PERIOD START DATE^D^^4;6^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",9002313.32,9002313.32,4.06,3)
Enter the date for the Maximum Amount Time Period Start Date.
"^DD",9002313.32,9002313.32,4.06,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.06,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.06,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.06,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.06,23,1,0)
The value will be used to populate the MAXIMUM AMOUNT
"^DD",9002313.32,9002313.32,4.06,23,2,0)
TIME PERIOD START DATE (#936) field of the BPS RESPONSES
"^DD",9002313.32,9002313.32,4.06,23,3,0)
(#9002313.03) file. Corresponds to NCPDP code 936-GG.
"^DD",9002313.32,9002313.32,4.06,"DT")
3180716
"^DD",9002313.32,9002313.32,4.07,0)
MAX AMT TIME PERIOD END DATE^D^^4;7^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",9002313.32,9002313.32,4.07,3)
Enter the date for the Maximum Amount Time Period End Date.
"^DD",9002313.32,9002313.32,4.07,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.07,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.07,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.07,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.07,23,1,0)
The value will be used to populate the MAXIMUM AMOUNT
"^DD",9002313.32,9002313.32,4.07,23,2,0)
TIME PERIOD END DATE (#937) field of the BPS RESPONSES
"^DD",9002313.32,9002313.32,4.07,23,3,0)
(#9002313.03) file. Corresponds to NCPDP code 937-GH.
"^DD",9002313.32,9002313.32,4.07,"DT")
3180716
"^DD",9002313.32,9002313.32,4.08,0)
MAX AMT TIME PERIOD UNITS^NJ4,0^^4;8^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.32,9002313.32,4.08,3)
Enter an amount between 0 and 9999, 0 decimal digits, for the Maximum Amount Time Period Units.
"^DD",9002313.32,9002313.32,4.08,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.08,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.08,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.08,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.08,23,1,0)
The value will be used to populate the MAXIMUM AMOUNT
"^DD",9002313.32,9002313.32,4.08,23,2,0)
TIME PERIOD UNITS (#938) field of the BPS RESPONSES
"^DD",9002313.32,9002313.32,4.08,23,3,0)
(#9002313.03) file. Corresponds to NCPDP code 938-GJ.
"^DD",9002313.32,9002313.32,4.08,"DT")
3180716
"^DD",9002313.32,9002313.32,4.09,0)
MINIMUM AGE QUALIFIER^S^D:DAYS;Y:YEARS;^4;9^Q
"^DD",9002313.32,9002313.32,4.09,3)
Enter override value for the Minimum Age Qualifier.
"^DD",9002313.32,9002313.32,4.09,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.09,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.09,21,2,0)
billing requests. 
"^DD",9002313.32,9002313.32,4.09,23,0)
^^4^4^3180716^
"^DD",9002313.32,9002313.32,4.09,23,1,0)
The value will be used to populate the MINIMUM AGE
"^DD",9002313.32,9002313.32,4.09,23,2,0)
QUALIFIER (#943) field of the BPS RESPONSES (#9002313.03)
"^DD",9002313.32,9002313.32,4.09,23,3,0)
file. Corresponds to NCPDP code 934-GQ and qualifies
"^DD",9002313.32,9002313.32,4.09,23,4,0)
MINIMUM AGE (944-GR).
"^DD",9002313.32,9002313.32,4.09,"DT")
3180716
"^DD",9002313.32,9002313.32,4.1,0)
MINIMUM AGE^NJ3,0^^4;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.32,9002313.32,4.1,3)
Enter override value between 0 and 999, for the Minimum Age.
"^DD",9002313.32,9002313.32,4.1,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.1,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.1,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.1,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.1,23,1,0)
The value will be used to populate the MINIMUM AGE
"^DD",9002313.32,9002313.32,4.1,23,2,0)
(#944) field of the BPS RESPONSES (#9002313.03)
"^DD",9002313.32,9002313.32,4.1,23,3,0)
file. Corresponds to NCPDP code 944-GR.
"^DD",9002313.32,9002313.32,4.1,"DT")
3180716
"^DD",9002313.32,9002313.32,4.11,0)
OTHER PAYER PROGRAM TYPE^P9002313.38'^BPS(9002313.38,^4;11^Q
"^DD",9002313.32,9002313.32,4.11,3)
Enter override value for the Other Payer Adjudicated Program Type.
"^DD",9002313.32,9002313.32,4.11,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.11,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.11,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.11,23,0)
^^4^4^3180716^
"^DD",9002313.32,9002313.32,4.11,23,1,0)
The value will be used to populate the OTHER PAYER
"^DD",9002313.32,9002313.32,4.11,23,2,0)
ADJUDICATED PROGRAM TYPE (#2147) field of the BPS
"^DD",9002313.32,9002313.32,4.11,23,3,0)
RESPONSES (#9002313.03) file.  Corresponds to NCPDP
"^DD",9002313.32,9002313.32,4.11,23,4,0)
code C47-9T.
"^DD",9002313.32,9002313.32,4.11,"DT")
3180716
"^DD",9002313.32,9002313.32,4.12,0)
PATIENT PAY COMPONENT AMOUNT^NJ9,2^^4;12^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999.99)!(X<0)!(X?.E1"."3.N) X
"^DD",9002313.32,9002313.32,4.12,3)
Enter a dollar amount between 0 and 999999.99, 2 decimal digits.
"^DD",9002313.32,9002313.32,4.12,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.12,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.12,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.12,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.12,23,1,0)
The value will be used to populate the PATIENT PAY 
"^DD",9002313.32,9002313.32,4.12,23,2,0)
COMPONENT AMOUNT (#2193) field of the BPS RESPONSES
"^DD",9002313.32,9002313.32,4.12,23,3,0)
(#9002313.03) file. Corresponds to NCPDP code C93-KN.
"^DD",9002313.32,9002313.32,4.12,"DT")
3180716
"^DD",9002313.32,9002313.32,4.13,0)
PATIENT PAY COMPONENT COUNT^NJ2,0^^4;13^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1.N) X
"^DD",9002313.32,9002313.32,4.13,3)
Enter a value between 0 and 99, for the Patient Pay Component Count.
"^DD",9002313.32,9002313.32,4.13,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.13,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.13,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.13,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.13,23,1,0)
The value will be used to populate the PATIENT PAY
"^DD",9002313.32,9002313.32,4.13,23,2,0)
COMPONENT COUNT (#2194) field of the BPS RESPONSES
"^DD",9002313.32,9002313.32,4.13,23,3,0)
(#9002313.03) file. Corresponds to NCPDP code C94-KP.
"^DD",9002313.32,9002313.32,4.13,"DT")
3180716
"^DD",9002313.32,9002313.32,4.14,0)
PATIENT PAY COMPONENT QUAL^P9002313.37'^BPS(9002313.37,^4;14^Q
"^DD",9002313.32,9002313.32,4.14,3)
Enter override value for the Patient Pay Component Qualifier.
"^DD",9002313.32,9002313.32,4.14,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.14,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.14,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.14,23,0)
^^4^4^3180716^
"^DD",9002313.32,9002313.32,4.14,23,1,0)
The value will be used to populate the PATIENT PAY 
"^DD",9002313.32,9002313.32,4.14,23,2,0)
COMPONENT QUALIFIER (#2195) field of the BPS RESPONSES
"^DD",9002313.32,9002313.32,4.14,23,3,0)
(#9002313.03) file. Corresponds to NCPDP code C95-KQ
"^DD",9002313.32,9002313.32,4.14,23,4,0)
and qualifies PATIENT PAY COMPONENT AMOUNT (C93-KN).
"^DD",9002313.32,9002313.32,4.14,"DT")
3180716
"^DD",9002313.32,9002313.32,4.15,0)
MINIMUM AMOUNT^NJ10,3^^4;15^K:+X'=X!(X>999999.999)!(X<0)!(X?.E1"."4.N) X
"^DD",9002313.32,9002313.32,4.15,3)
Enter an amount between 0 and 999999.999, 3 decimal digits.
"^DD",9002313.32,9002313.32,4.15,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.15,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.15,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.15,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.15,23,1,0)
The value will be used to populate the MINIMUM AMOUNT 
"^DD",9002313.32,9002313.32,4.15,23,2,0)
(#2219) field of the BPS RESPONSES (#9002313.03) file.
"^DD",9002313.32,9002313.32,4.15,23,3,0)
Corresponds to NCPDP code D19-M1.
"^DD",9002313.32,9002313.32,4.15,"DT")
3180716
"^DD",9002313.32,9002313.32,4.16,0)
MINIMUM AMOUNT QUALIFIER^S^MDL:MIN DOLLAR AMT;MDS:MIN DAY SUPPLY;MFL:MIN FILLS;MQY:MIN QTY;^4;16^Q
"^DD",9002313.32,9002313.32,4.16,3)
Enter override value for the Minimum Amount Qualifier.
"^DD",9002313.32,9002313.32,4.16,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.16,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.16,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.16,23,0)
^^4^4^3180716^
"^DD",9002313.32,9002313.32,4.16,23,1,0)
The value will be used to populate the MAXIMUM
"^DD",9002313.32,9002313.32,4.16,23,2,0)
AMOUNT QUALIFIER (#2220) field of the BPS RESPONSES
"^DD",9002313.32,9002313.32,4.16,23,3,0)
(#9002313.03) file. Corresponds to NCPDP code D20-M2
"^DD",9002313.32,9002313.32,4.16,23,4,0)
and qualifies MINIMUM AMOUNT (D19-M1).
"^DD",9002313.32,9002313.32,4.16,"DT")
3180716
"^DD",9002313.32,9002313.32,4.17,0)
OTHER PAYER NAME^FJ70^^4;17^K:$L(X)>70!($L(X)<1) X
"^DD",9002313.32,9002313.32,4.17,3)
Enter override value for the Other Payer Name, 1 to 70 characters in length. 
"^DD",9002313.32,9002313.32,4.17,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.17,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.17,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.17,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.17,23,1,0)
The value will be used to populate the OTHER PAYER NAME 
"^DD",9002313.32,9002313.32,4.17,23,2,0)
(#2223) field of the BPS RESPONSES (#9002313.03) file. 
"^DD",9002313.32,9002313.32,4.17,23,3,0)
Corresponds to NCPDP code D23-M5.
"^DD",9002313.32,9002313.32,4.17,"DT")
3180716
"^DD",9002313.32,9002313.32,4.18,0)
REMAINING AMOUNT^NJ10,3^^4;18^K:+X'=X!(X>999999.999)!(X<0)!(X?.E1"."4.N) X
"^DD",9002313.32,9002313.32,4.18,3)
Enter an amount between 0 and 999999.999, 3 decimal digits.
"^DD",9002313.32,9002313.32,4.18,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.18,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.18,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.18,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.18,23,1,0)
The value will be used to populate the REMAINING AMOUNT 
"^DD",9002313.32,9002313.32,4.18,23,2,0)
(#2224) field of the BPS RESPONSES (#9002313.03) file. 
"^DD",9002313.32,9002313.32,4.18,23,3,0)
Corresponds to NCPDP code D24-M6.
"^DD",9002313.32,9002313.32,4.18,"DT")
3180716
"^DD",9002313.32,9002313.32,4.19,0)
REMAINING AMOUNT QUALIFIER^S^RFL:REMAINING FILLS;RQY:REMAINING QTY;RDS:REMAINING DAYS SUPPLY;^4;19^Q
"^DD",9002313.32,9002313.32,4.19,3)
Enter override value for the Remaining Amount Qualifier.
"^DD",9002313.32,9002313.32,4.19,21,0)
^^2^2^3180716^^
"^DD",9002313.32,9002313.32,4.19,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.19,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.19,23,0)
^^4^4^3180716^^
"^DD",9002313.32,9002313.32,4.19,23,1,0)
The value will be used to populate the REMAINING AMOUNT 
"^DD",9002313.32,9002313.32,4.19,23,2,0)
QUALIFIER (#2225) field of the BPS RESPONSES (#9002313.03)
"^DD",9002313.32,9002313.32,4.19,23,3,0)
file. Corresponds to NCPDP code D25-M7 and qualifies 
"^DD",9002313.32,9002313.32,4.19,23,4,0)
REMAINING AMOUNT (D24-M6).
"^DD",9002313.32,9002313.32,4.19,"DT")
3180716
"^DD",9002313.32,9002313.32,4.2,0)
OTHER PAYER RELATIONSHIP TYPE^S^CP:COB COVERAGE PRIOR TO RESPONDING PAYER;CS:COB COVERAGE SUBSEQUENT TO RESPONDING PAYER;MX:MUTUALLY EXCLUSIVE BENEFITS;CC:CHANGE IN COVERAGE;RP:RESPONDING PAYER;CE:CENTRALIZED ELIGIBILITY;^4;20^Q
"^DD",9002313.32,9002313.32,4.2,3)
Enter override value for the Other Payer Relationship Type.
"^DD",9002313.32,9002313.32,4.2,21,0)
^^2^2^3180716^
"^DD",9002313.32,9002313.32,4.2,21,1,0)
This is the override value that will be used for the payer response for 
"^DD",9002313.32,9002313.32,4.2,21,2,0)
billing requests.
"^DD",9002313.32,9002313.32,4.2,23,0)
^^3^3^3180716^
"^DD",9002313.32,9002313.32,4.2,23,1,0)
The value will be used to populate the OTHER PAYER 
"^DD",9002313.32,9002313.32,4.2,23,2,0)
RELATIONSHIP TYPE (#2241) field of the BPS RESPONSES
"^DD",9002313.32,9002313.32,4.2,23,3,0)
(#9002313.03) file. Corresponds to NCPDP code D41-PQ.
"^DD",9002313.32,9002313.32,4.2,"DT")
3180716
"^DD",9002313.34,9002313.34,0)
FIELD^^.02^2
"^DD",9002313.34,9002313.34,0,"DT")
3180820
"^DD",9002313.34,9002313.34,0,"ID","W.02")
W "   ",$P(^(0),U,2)
"^DD",9002313.34,9002313.34,0,"IX","B",9002313.34,.01)

"^DD",9002313.34,9002313.34,0,"NM","BPS NCPDP PRESCRIBER PLACE OF SERVICE")

"^DD",9002313.34,9002313.34,0,"PT",9002313.0201,2257)

"^DD",9002313.34,9002313.34,0,"VRPK")
BPS
"^DD",9002313.34,9002313.34,.01,0)
CODE^RFJ3^^0;1^K:$L(X)>3!($L(X)<1) X
"^DD",9002313.34,9002313.34,.01,.1)

"^DD",9002313.34,9002313.34,.01,1,0)
^.1
"^DD",9002313.34,9002313.34,.01,1,1,0)
9002313.34^B
"^DD",9002313.34,9002313.34,.01,1,1,1)
S ^BPS(9002313.34,"B",$E(X,1,30),DA)=""
"^DD",9002313.34,9002313.34,.01,1,1,2)
K ^BPS(9002313.34,"B",$E(X,1,30),DA)
"^DD",9002313.34,9002313.34,.01,3)
Enter the Prescriber Place of Service Code being sent on the claim, 1 to 3 characters in length.
"^DD",9002313.34,9002313.34,.01,21,0)
^^2^2^3180521^^^
"^DD",9002313.34,9002313.34,.01,21,1,0)
Prescriber Place of Service Code being sent with the claim. This is based
"^DD",9002313.34,9002313.34,.01,21,2,0)
on the NCPDP Standards for field D57-RG.
"^DD",9002313.34,9002313.34,.01,"DT")
3180716
"^DD",9002313.34,9002313.34,.02,0)
EXPLANATION^RFJ70^^0;2^K:$L(X)>70!($L(X)<1) X
"^DD",9002313.34,9002313.34,.02,.1)

"^DD",9002313.34,9002313.34,.02,3)
Enter the Prescriber Place of Service, 1 to 70 characters in length.
"^DD",9002313.34,9002313.34,.02,21,0)
^^1^1^3180716^
"^DD",9002313.34,9002313.34,.02,21,1,0)
Textual explanation of the Prescriber Place of Service Code.
"^DD",9002313.34,9002313.34,.02,"DT")
3180716
"^DD",9002313.35,9002313.35,0)
FIELD^^.02^2
"^DD",9002313.35,9002313.35,0,"DT")
3180820
"^DD",9002313.35,9002313.35,0,"ID","W.02")
W "   ",$P(^(0),U,2)
"^DD",9002313.35,9002313.35,0,"IX","B",9002313.35,.01)

"^DD",9002313.35,9002313.35,0,"NM","BPS NCPDP BENEFIT STAGE INDICATOR")

"^DD",9002313.35,9002313.35,0,"PT",9002313.0201,2151)

"^DD",9002313.35,9002313.35,0,"PT",9002313.0301,2151)

"^DD",9002313.35,9002313.35,0,"VRPK")
BPS
"^DD",9002313.35,9002313.35,.01,0)
CODE^RFJ2^^0;1^K:$L(X)>2!($L(X)<1)!'(X'?1P.E) X
"^DD",9002313.35,9002313.35,.01,.1)
BENEFIT STAGE INDICATOR
"^DD",9002313.35,9002313.35,.01,1,0)
^.1
"^DD",9002313.35,9002313.35,.01,1,1,0)
9002313.35^B
"^DD",9002313.35,9002313.35,.01,1,1,1)
S ^BPS(9002313.35,"B",$E(X,1,30),DA)=""
"^DD",9002313.35,9002313.35,.01,1,1,2)
K ^BPS(9002313.35,"B",$E(X,1,30),DA)
"^DD",9002313.35,9002313.35,.01,3)
Enter a Benefit Stage Indicator, 1 to 2 characters.
"^DD",9002313.35,9002313.35,.01,21,0)
^^2^2^3180521^^
"^DD",9002313.35,9002313.35,.01,21,1,0)
Benefit Stage Indicator being sent on a claim or returned from the payer. 
"^DD",9002313.35,9002313.35,.01,21,2,0)
This is based on the NCPDP Standards for field C51-9X.
"^DD",9002313.35,9002313.35,.01,"DT")
3180712
"^DD",9002313.35,9002313.35,.02,0)
EXPLANATION^FJ250^^0;2^K:$L(X)>250!($L(X)<1) X
"^DD",9002313.35,9002313.35,.02,.1)

"^DD",9002313.35,9002313.35,.02,3)
Enter a Benefit Stage Indicator explanation, 1-250 characters in length.
"^DD",9002313.35,9002313.35,.02,21,0)
^^1^1^3180521^^
"^DD",9002313.35,9002313.35,.02,21,1,0)
Textual explanation of the Benefit Stage Indicator.
"^DD",9002313.35,9002313.35,.02,"DT")
3180712
"^DD",9002313.36,9002313.36,0)
FIELD^^.02^2
"^DD",9002313.36,9002313.36,0,"DT")
3180820
"^DD",9002313.36,9002313.36,0,"ID","W.02")
W "   ",$P(^(0),U,2)
"^DD",9002313.36,9002313.36,0,"IX","B",9002313.36,.01)

"^DD",9002313.36,9002313.36,0,"NM","BPS NCPDP LTPAC DISPENSE FREQUENCY")

"^DD",9002313.36,9002313.36,0,"PT",9002313.0201,2191)

"^DD",9002313.36,9002313.36,0,"VRPK")
BPS
"^DD",9002313.36,9002313.36,.01,0)
CODE^RNJ2,0^^0;1^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1.N) X
"^DD",9002313.36,9002313.36,.01,.1)
LTPAC DISPENSE FREQUENCY CODE
"^DD",9002313.36,9002313.36,.01,1,0)
^.1
"^DD",9002313.36,9002313.36,.01,1,1,0)
9002313.36^B
"^DD",9002313.36,9002313.36,.01,1,1,1)
S ^BPS(9002313.36,"B",$E(X,1,30),DA)=""
"^DD",9002313.36,9002313.36,.01,1,1,2)
K ^BPS(9002313.36,"B",$E(X,1,30),DA)
"^DD",9002313.36,9002313.36,.01,3)
Enter the LTPAC Dispense Frequency Code being sent on the claim, a number between 1 and 15.
"^DD",9002313.36,9002313.36,.01,21,0)
^^2^2^3180515^
"^DD",9002313.36,9002313.36,.01,21,1,0)
LTPAC Dispense Frequency code being sent on the claim. This is based on 
"^DD",9002313.36,9002313.36,.01,21,2,0)
the NCPDP Standards for field C91-KK.
"^DD",9002313.36,9002313.36,.01,"DT")
3180712
"^DD",9002313.36,9002313.36,.02,0)
EXPLANATION^FJ110^^0;2^K:$L(X)>110!($L(X)<1) X
"^DD",9002313.36,9002313.36,.02,.1)

"^DD",9002313.36,9002313.36,.02,3)
Enter the LTPAC Dispense Frequency, 1-110 characters in length.
"^DD",9002313.36,9002313.36,.02,21,0)
^^1^1^3180515^
"^DD",9002313.36,9002313.36,.02,21,1,0)
The description of the LTPAC Dispense Frequency code.
"^DD",9002313.36,9002313.36,.02,"DT")
3180525
"^DD",9002313.37,9002313.37,0)
FIELD^^.02^2
"^DD",9002313.37,9002313.37,0,"DT")
3180820
"^DD",9002313.37,9002313.37,0,"ID","W.02")
W "   ",$P(^(0),U,2)
"^DD",9002313.37,9002313.37,0,"IX","B",9002313.37,.01)

"^DD",9002313.37,9002313.37,0,"NM","BPS NCPDP PATIENT PAY COMPONENT QUALIFIER")

"^DD",9002313.37,9002313.37,0,"PT",9002313.0301,2195)

"^DD",9002313.37,9002313.37,0,"PT",9002313.32,4.14)

"^DD",9002313.37,9002313.37,0,"VRPK")
BPS
"^DD",9002313.37,9002313.37,.01,0)
CODE^RNJ2,0^^0;1^K:+X'=X!(X>17)!(X<1)!(X?.E1"."1.N) X
"^DD",9002313.37,9002313.37,.01,.1)
PATIENT PAY COMPONENT QUALIFIER CODE
"^DD",9002313.37,9002313.37,.01,1,0)
^.1
"^DD",9002313.37,9002313.37,.01,1,1,0)
9002313.37^B
"^DD",9002313.37,9002313.37,.01,1,1,1)
S ^BPS(9002313.37,"B",$E(X,1,30),DA)=""
"^DD",9002313.37,9002313.37,.01,1,1,2)
K ^BPS(9002313.37,"B",$E(X,1,30),DA)
"^DD",9002313.37,9002313.37,.01,3)
The Patient Pay Component Qualifier being returned by the payer, a number between 1 and 17.
"^DD",9002313.37,9002313.37,.01,21,0)
^^2^2^3180516^
"^DD",9002313.37,9002313.37,.01,21,1,0)
Patient Pay Component Qualifier being returned by the payer. This is 
"^DD",9002313.37,9002313.37,.01,21,2,0)
based on the NCPDP Standards for field C95-KQ.
"^DD",9002313.37,9002313.37,.01,"DT")
3180712
"^DD",9002313.37,9002313.37,.02,0)
EXPLANATION^FJ80^^0;2^K:$L(X)>80!($L(X)<1) X
"^DD",9002313.37,9002313.37,.02,.1)

"^DD",9002313.37,9002313.37,.02,3)
Enter the Patient Pay Component Qualifier, 1-80 characters in length.
"^DD",9002313.37,9002313.37,.02,21,0)
^^1^1^3180516^
"^DD",9002313.37,9002313.37,.02,21,1,0)
The name of the Patient Pay Component Qualifier.
"^DD",9002313.37,9002313.37,.02,"DT")
3180525
"^DD",9002313.38,9002313.38,0)
FIELD^^.02^2
"^DD",9002313.38,9002313.38,0,"DT")
3180820
"^DD",9002313.38,9002313.38,0,"ID","W.02")
W "   ",$P(^(0),U,2)
"^DD",9002313.38,9002313.38,0,"IX","B",9002313.38,.01)

"^DD",9002313.38,9002313.38,0,"NM","BPS NCPDP OTHER PAYER PROGRAM TYPE")

"^DD",9002313.38,9002313.38,0,"PT",9002313.0201,2147)

"^DD",9002313.38,9002313.38,0,"PT",9002313.0301,2147)

"^DD",9002313.38,9002313.38,0,"PT",9002313.32,4.11)

"^DD",9002313.38,9002313.38,0,"VRPK")
BPS
"^DD",9002313.38,9002313.38,.01,0)
CODE^RNJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1.N) X
"^DD",9002313.38,9002313.38,.01,.1)
OTHER PAYER ADJUDICATED PROGRAM TYPE
"^DD",9002313.38,9002313.38,.01,1,0)
^.1
"^DD",9002313.38,9002313.38,.01,1,1,0)
9002313.38^B
"^DD",9002313.38,9002313.38,.01,1,1,1)
S ^BPS(9002313.38,"B",$E(X,1,30),DA)=""
"^DD",9002313.38,9002313.38,.01,1,1,2)
K ^BPS(9002313.38,"B",$E(X,1,30),DA)
"^DD",9002313.38,9002313.38,.01,3)
Enter the Other Payer Adjudicated Program Type, a number between 1 and 99.
"^DD",9002313.38,9002313.38,.01,21,0)
^^3^3^3180517^
"^DD",9002313.38,9002313.38,.01,21,1,0)
Other Payer Adjudicated Program Type being sent on the claim and/or being 
"^DD",9002313.38,9002313.38,.01,21,2,0)
returned by the payer.  This is based on the NCPDP Standards for field 
"^DD",9002313.38,9002313.38,.01,21,3,0)
C47-9T.
"^DD",9002313.38,9002313.38,.01,"DT")
3180712
"^DD",9002313.38,9002313.38,.02,0)
DESCRIPTION^FJ70^^0;2^K:$L(X)>70!($L(X)<1) X
"^DD",9002313.38,9002313.38,.02,.1)
DESCRIPTION OF THE OTHER PAYER ADJ PROGRAM TYPE
"^DD",9002313.38,9002313.38,.02,3)
Enter the description of the Other Payer Adj Program type, must be 1-70 characters.
"^DD",9002313.38,9002313.38,.02,21,0)
^^1^1^3180517^
"^DD",9002313.38,9002313.38,.02,21,1,0)
The description of the Other Payer Adjudicated Program Type.
"^DD",9002313.38,9002313.38,.02,"DT")
3180523
"^DD",9002313.59,9002313.5914,.11,0)
OTHER PAYER RECONCILIATION ID^FJ30^^0;11^K:$L(X)>30!($L(X)<1) X
"^DD",9002313.59,9002313.5914,.11,3)
Enter an ID between 1 and 30 characters.
"^DD",9002313.59,9002313.5914,.11,21,0)
^^5^5^3180516^
"^DD",9002313.59,9002313.5914,.11,21,1,0)
NCPDP field C49-9V - Other Payer Reconciliation ID. Reconciliation ID 
"^DD",9002313.59,9002313.5914,.11,21,2,0)
(B98-34) as reported by the Other Payer for Paid/Accepted transactions OR 
"^DD",9002313.59,9002313.5914,.11,21,3,0)
for Information Reporting transactions, the designated default value for 
"^DD",9002313.59,9002313.5914,.11,21,4,0)
reporting a previous payer's rejected response as designated in the Other 
"^DD",9002313.59,9002313.5914,.11,21,5,0)
Payer Reject Code value(s) reported in the COB claim.
"^DD",9002313.59,9002313.5914,.11,"DT")
3180516
"^DD",9002313.77,9002313.778,.11,0)
OTHER PAYER RECONCILIATION ID^FJ30^^0;11^K:$L(X)>30!($L(X)<1) X
"^DD",9002313.77,9002313.778,.11,3)
Enter an ID between 1 and 30 characters.
"^DD",9002313.77,9002313.778,.11,21,0)
^^5^5^3180516^
"^DD",9002313.77,9002313.778,.11,21,1,0)
NCPDP field C49-9V - Other Payer Reconciliation ID. Reconciliation ID 
"^DD",9002313.77,9002313.778,.11,21,2,0)
(B98-34) as reported by the Other Payer for Paid/Accepted transactions OR 
"^DD",9002313.77,9002313.778,.11,21,3,0)
for Information Reporting transactions, the designated default value for 
"^DD",9002313.77,9002313.778,.11,21,4,0)
reporting a previous payer's rejected response as designated in the Other 
"^DD",9002313.77,9002313.778,.11,21,5,0)
Payer Reject Code value(s) reported in the COB claim.
"^DD",9002313.77,9002313.778,.11,"DT")
3180516
"^DD",9002313.91,9002313.91,0)
FIELD^^3^15
"^DD",9002313.91,9002313.91,0,"DDA")
N
"^DD",9002313.91,9002313.91,0,"DT")
3180820
"^DD",9002313.91,9002313.91,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",9002313.91,9002313.91,0,"IX","AC",9002313.91,2)

"^DD",9002313.91,9002313.91,0,"IX","AD",9002313.91,3)

"^DD",9002313.91,9002313.91,0,"IX","B",9002313.91,.01)

"^DD",9002313.91,9002313.91,0,"IX","C",9002313.91,.03)

"^DD",9002313.91,9002313.91,0,"IX","D",9002313.91,.06)

"^DD",9002313.91,9002313.91,0,"NM","BPS NCPDP FIELD DEFS")

"^DD",9002313.91,9002313.91,0,"PT",9002313.311,.01)

"^DD",9002313.91,9002313.91,0,"PT",9002313.3121,.01)

"^DD",9002313.91,9002313.91,0,"PT",9002313.5111,.01)

"^DD",9002313.91,9002313.91,0,"PT",9002313.5112,.01)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9205,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9206,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9207,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9208,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9209,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.921,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9213,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9214,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9215,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9216,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9217,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9218,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9219,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.922,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9223,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9224,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9225,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9227,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9228,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.9229,.02)

"^DD",9002313.91,9002313.91,0,"PT",9002313.923,.02)

"^DD",9002313.91,9002313.91,0,"PT",102000102,.03)

"^DD",9002313.91,9002313.91,0,"VRPK")
BPS
"^DD",9002313.91,9002313.91,.01,0)
NCPDP FIELD NUMBER^RFX^^0;1^K:$L(X)>6!($L(X)<3) X
"^DD",9002313.91,9002313.91,.01,1,0)
^.1
"^DD",9002313.91,9002313.91,.01,1,1,0)
9002313.91^B
"^DD",9002313.91,9002313.91,.01,1,1,1)
S ^BPSF(9002313.91,"B",$E(X,1,30),DA)=""
"^DD",9002313.91,9002313.91,.01,1,1,2)
K ^BPSF(9002313.91,"B",$E(X,1,30),DA)
"^DD",9002313.91,9002313.91,.01,3)
Enter the NCPDP field number (either 0-997, 2 Decimal Digits or 3 Alphanumerics).
"^DD",9002313.91,9002313.91,.01,21,0)
^^1^1^3101014^
"^DD",9002313.91,9002313.91,.01,21,1,0)
This is the NCPDP field number as specified in the NCPDP data dictionary.
"^DD",9002313.91,9002313.91,.01,"DT")
3170227
"^DD",9002313.91,9002313.91,.03,0)
NAME^F^^0;3^K:$L(X)>30!($L(X)<3) X
"^DD",9002313.91,9002313.91,.03,1,0)
^.1
"^DD",9002313.91,9002313.91,.03,1,1,0)
9002313.91^C
"^DD",9002313.91,9002313.91,.03,1,1,1)
S ^BPSF(9002313.91,"C",$E(X,1,30),DA)=""
"^DD",9002313.91,9002313.91,.03,1,1,2)
K ^BPSF(9002313.91,"C",$E(X,1,30),DA)
"^DD",9002313.91,9002313.91,.03,1,1,"DT")
3001007
"^DD",9002313.91,9002313.91,.03,3)
Answer must be 3-30 characters in length.
"^DD",9002313.91,9002313.91,.03,21,0)
^^2^2^3071227^
"^DD",9002313.91,9002313.91,.03,21,1,0)
Descriptive name the tells what the field is within the pharmacy
"^DD",9002313.91,9002313.91,.03,21,2,0)
environment.
"^DD",9002313.91,9002313.91,.03,"DT")
3071227
"^DD",9002313.91,9002313.91,.04,0)
FORMAT^S^N:NUMERIC;A/N:ALPHA/NUMERIC;D:SIGNED NUMERIC;^0;4^Q
"^DD",9002313.91,9002313.91,.04,3)
Enter the field's format type.
"^DD",9002313.91,9002313.91,.04,21,0)
^^1^1^3071227^
"^DD",9002313.91,9002313.91,.04,21,1,0)
This is the format of the field used within the NCPDP standard.
"^DD",9002313.91,9002313.91,.04,"DT")
3071227
"^DD",9002313.91,9002313.91,.06,0)
ID^F^^5;1^K:$L(X)>2!($L(X)<2) X
"^DD",9002313.91,9002313.91,.06,1,0)
^.1
"^DD",9002313.91,9002313.91,.06,1,1,0)
9002313.91^D
"^DD",9002313.91,9002313.91,.06,1,1,1)
S ^BPSF(9002313.91,"D",$E(X,1,30),DA)=""
"^DD",9002313.91,9002313.91,.06,1,1,2)
K ^BPSF(9002313.91,"D",$E(X,1,30),DA)
"^DD",9002313.91,9002313.91,.06,1,1,"%D",0)
^^3^3^3020807^
"^DD",9002313.91,9002313.91,.06,1,1,"%D",1,0)
Cross reference of the 5.1 Field ID.  This cross reference will be used in
"^DD",9002313.91,9002313.91,.06,1,1,"%D",2,0)
the processing of the response as a means of translating the value to a
"^DD",9002313.91,9002313.91,.06,1,1,"%D",3,0)
field number.
"^DD",9002313.91,9002313.91,.06,1,1,"DT")
3020807
"^DD",9002313.91,9002313.91,.06,3)
Answer must be 2 characters in length.
"^DD",9002313.91,9002313.91,.06,21,0)
^^3^3^3071227^
"^DD",9002313.91,9002313.91,.06,21,1,0)
The same as the .02 field, but for specific use when creating 5.1
"^DD",9002313.91,9002313.91,.06,21,2,0)
claims.  The 5.1 fields were separated because 3.x and 5.1 claims were
"^DD",9002313.91,9002313.91,.06,21,3,0)
being submitted concurrently.  
"^DD",9002313.91,9002313.91,.06,"DT")
3071227
"^DD",9002313.91,9002313.91,.07,0)
LENGTH^NJ4,0^^5;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",9002313.91,9002313.91,.07,3)
Type a number between 1 and 9999, 0 Decimal Digits
"^DD",9002313.91,9002313.91,.07,21,0)
^^1^1^3040121^
"^DD",9002313.91,9002313.91,.07,21,1,0)
Length of the field from the 5.1 NCPDP standard.
"^DD",9002313.91,9002313.91,.07,"DT")
3071227
"^DD",9002313.91,9002313.91,.08,0)
D0 LENGTH^NJ3,0^^0;8^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",9002313.91,9002313.91,.08,3)
Enter the length of the NCPDP field per the NCPDP data dictionary (1-999).
"^DD",9002313.91,9002313.91,.08,21,0)
^^2^2^3101014^
"^DD",9002313.91,9002313.91,.08,21,1,0)
This is the NCPDP length as specified in the NCPDP Telecommunication
"^DD",9002313.91,9002313.91,.08,21,2,0)
Standard version D.0 data dictionary.
"^DD",9002313.91,9002313.91,.08,"DT")
3101014
"^DD",9002313.91,9002313.91,.09,0)
D0 FORMAT^S^N:NUMERIC;A/N:ALPHANUMERIC;D:SIGNED NUMERIC;^0;9^Q
"^DD",9002313.91,9002313.91,.09,3)
Enter the data type for the field based on the NCPDP data dictionary.
"^DD",9002313.91,9002313.91,.09,21,0)
^^2^2^3101014^
"^DD",9002313.91,9002313.91,.09,21,1,0)
This is the NCPDP data type as specified in the NCPDP Telecommunication
"^DD",9002313.91,9002313.91,.09,21,2,0)
Standard version D.0 data dictionary.
"^DD",9002313.91,9002313.91,.09,"DT")
3101014
"^DD",9002313.91,9002313.91,1,0)
VISTA FIELD NUMBER^NJ4,0^^5;3^K:+X'=X!(X>2999)!(X<1001)!(X?.E1"."1.N) X
"^DD",9002313.91,9002313.91,1,3)
Type a number between 1001 and 2999, 0 decimal digits.
"^DD",9002313.91,9002313.91,1,21,0)
^^5^5^3130424^
"^DD",9002313.91,9002313.91,1,21,1,0)
This is the VistA field number used in BPS CLAIMS file #9002313.02 and BPS
"^DD",9002313.91,9002313.91,1,21,2,0)
RESPONSES file #9002313.03. Only used for NCPDP numbers where the first 
"^DD",9002313.91,9002313.91,1,21,3,0)
piece of the NCPDP number is non-numeric.
"^DD",9002313.91,9002313.91,1,21,4,0)
 
"^DD",9002313.91,9002313.91,1,21,5,0)
For example, NCPDP field B04-BT - Next Available Fill Date.
"^DD",9002313.91,9002313.91,1,"DT")
3130424
"^DD",9002313.91,9002313.91,1.01,0)
STANDARD NCPDP FIELD NAME^F^^1;1^K:$L(X)>100!($L(X)<1) X
"^DD",9002313.91,9002313.91,1.01,3)
Enter the full NCPDP field name based on the NCPDP data dictionary (1-100 characters).
"^DD",9002313.91,9002313.91,1.01,21,0)
^^3^3^3101014^
"^DD",9002313.91,9002313.91,1.01,21,1,0)
This field is used for those NCPDP field names that were too long to fit 
"^DD",9002313.91,9002313.91,1.01,21,2,0)
in the NAME (#.03) field.  For those fields, this field will
"^DD",9002313.91,9002313.91,1.01,21,3,0)
have the full NCPDP field name.
"^DD",9002313.91,9002313.91,1.01,"DT")
3110706
"^DD",9002313.91,9002313.91,2,0)
REQUEST SEGMENT^P9002313.9'^BPSF(9002313.9,^5;4^Q
"^DD",9002313.91,9002313.91,2,1,0)
^.1
"^DD",9002313.91,9002313.91,2,1,1,0)
9002313.91^AC
"^DD",9002313.91,9002313.91,2,1,1,1)
S ^BPSF(9002313.91,"AC",$E(X,1,30),DA)=""
"^DD",9002313.91,9002313.91,2,1,1,2)
K ^BPSF(9002313.91,"AC",$E(X,1,30),DA)
"^DD",9002313.91,9002313.91,2,1,1,"%D",0)
^^1^1^3171102^
"^DD",9002313.91,9002313.91,2,1,1,"%D",1,0)
This cross-reference lists each field by its REQUEST SEGMENT.
"^DD",9002313.91,9002313.91,2,1,1,"DT")
3171102
"^DD",9002313.91,9002313.91,2,3)
Select the Request Segment which this field would appear on.
"^DD",9002313.91,9002313.91,2,21,0)
^^3^3^3171024^
"^DD",9002313.91,9002313.91,2,21,1,0)
This data field indicates the segment of a claim request on which this 
"^DD",9002313.91,9002313.91,2,21,2,0)
NCPDP field would appear.  If this NCPDP field appears only on the 
"^DD",9002313.91,9002313.91,2,21,3,0)
incoming response, then this field would remain blank.
"^DD",9002313.91,9002313.91,2,"DT")
3171102
"^DD",9002313.91,9002313.91,3,0)
RESPONSE SEGMENT^P9002313.9'^BPSF(9002313.9,^5;5^Q
"^DD",9002313.91,9002313.91,3,1,0)
^.1
"^DD",9002313.91,9002313.91,3,1,1,0)
9002313.91^AD
"^DD",9002313.91,9002313.91,3,1,1,1)
S ^BPSF(9002313.91,"AD",$E(X,1,30),DA)=""
"^DD",9002313.91,9002313.91,3,1,1,2)
K ^BPSF(9002313.91,"AD",$E(X,1,30),DA)
"^DD",9002313.91,9002313.91,3,1,1,"%D",0)
^^1^1^3171102^
"^DD",9002313.91,9002313.91,3,1,1,"%D",1,0)
This cross-reference lists each field by its RESPONSE SEGMENT.
"^DD",9002313.91,9002313.91,3,1,1,"DT")
3171102
"^DD",9002313.91,9002313.91,3,3)
Select the Response Segment which this field would appear on.
"^DD",9002313.91,9002313.91,3,21,0)
^^3^3^3171024^
"^DD",9002313.91,9002313.91,3,21,1,0)
This data field indicates the segment of a claim response on which this 
"^DD",9002313.91,9002313.91,3,21,2,0)
NCPDP field would appear.  If this NCPDP field appears only on the 
"^DD",9002313.91,9002313.91,3,21,3,0)
outgoing claim request, then this field would remain blank.
"^DD",9002313.91,9002313.91,3,"DT")
3171102
"^DD",9002313.91,9002313.91,10,0)
GET CODE^9002313.9101^^10;0
"^DD",9002313.91,9002313.91,10,3)
Enter the M code to extract the data for this field.
"^DD",9002313.91,9002313.91,10,9)
@
"^DD",9002313.91,9002313.91,10,21,0)
^.001^2^2^3101001^^
"^DD",9002313.91,9002313.91,10,21,1,0)
M code that tells the BPS system where to find the 
"^DD",9002313.91,9002313.91,10,21,2,0)
particular piece of data for this field.
"^DD",9002313.91,9002313.91,10,"DT")
3071227
"^DD",9002313.91,9002313.91,20,0)
D0 FORMAT CODE^9002313.9102^^20;0
"^DD",9002313.91,9002313.91,20,9)
@
"^DD",9002313.91,9002313.91,20,21,0)
^^4^4^3101014^
"^DD",9002313.91,9002313.91,20,21,1,0)
This field holds the M code used to format the data according to the
"^DD",9002313.91,9002313.91,20,21,2,0)
specifications of the NCPDP Telecommunication Standard version D.0 data
"^DD",9002313.91,9002313.91,20,21,3,0)
dictionary.  For instance, alphanumeric fields are right-padded with
"^DD",9002313.91,9002313.91,20,21,4,0)
spaces up to the length of the specified by the NCPDP standard.
"^DD",9002313.91,9002313.91,20,"DT")
3101005
"^DD",9002313.91,9002313.91,30,0)
SET CODE^9002313.9103^^30;0
"^DD",9002313.91,9002313.91,30,3)
Enter the M code for the field's data storage.
"^DD",9002313.91,9002313.91,30,9)
@
"^DD",9002313.91,9002313.91,30,21,0)
^^1^1^3040326^
"^DD",9002313.91,9002313.91,30,21,1,0)
M code to store the data in the appropriate segment within the claim.
"^DD",9002313.91,9002313.91,30,"DT")
3071227
"^DD",9002313.91,9002313.91,40,0)
FORMAT CODE^9002313.9104^^25;0
"^DD",9002313.91,9002313.91,40,3)
Enter the M code to format the data in NCPDP format.
"^DD",9002313.91,9002313.91,40,9)
@
"^DD",9002313.91,9002313.91,40,21,0)
^^2^2^3071227^
"^DD",9002313.91,9002313.91,40,21,1,0)
M code to format the data before storing it in the claim.  5.1 was
"^DD",9002313.91,9002313.91,40,21,2,0)
separate because 3.2 and 5.1 claims were being submitted at the same time.
"^DD",9002313.91,9002313.91,40,"DT")
3071227
"^DD",9002313.91,9002313.9101,0)
GET CODE SUB-FIELD^^.01^1
"^DD",9002313.91,9002313.9101,0,"DT")
3071227
"^DD",9002313.91,9002313.9101,0,"NM","GET CODE")

"^DD",9002313.91,9002313.9101,0,"UP")
9002313.91
"^DD",9002313.91,9002313.9101,.01,0)
GET CODE^WL^^0;1^Q
"^DD",9002313.91,9002313.9101,.01,3)
Enter the M code to extract the data for this field.
"^DD",9002313.91,9002313.9101,.01,9)
@
"^DD",9002313.91,9002313.9101,.01,"DT")
3071227
"^DD",9002313.91,9002313.9102,0)
D0 FORMAT CODE SUB-FIELD^^.01^1
"^DD",9002313.91,9002313.9102,0,"DT")
3100721
"^DD",9002313.91,9002313.9102,0,"NM","D0 FORMAT CODE")

"^DD",9002313.91,9002313.9102,0,"UP")
9002313.91
"^DD",9002313.91,9002313.9102,.01,0)
D0 FORMAT CODE^WLx^^0;1^Q
"^DD",9002313.91,9002313.9102,.01,"DT")
3101014
"^DD",9002313.91,9002313.9103,0)
SET CODE SUB-FIELD^^.01^1
"^DD",9002313.91,9002313.9103,0,"DT")
2950420
"^DD",9002313.91,9002313.9103,0,"NM","SET CODE")

"^DD",9002313.91,9002313.9103,0,"UP")
9002313.91
"^DD",9002313.91,9002313.9103,.01,0)
SET CODE^WL^^0;1^Q
"^DD",9002313.91,9002313.9103,.01,3)
Enter the M code for the field's data storage.
"^DD",9002313.91,9002313.9103,.01,9)
@
"^DD",9002313.91,9002313.9103,.01,"DT")
3071227
"^DD",9002313.91,9002313.9104,0)
FORMAT CODE SUB-FIELD^^.01^1
"^DD",9002313.91,9002313.9104,0,"DT")
3020724
"^DD",9002313.91,9002313.9104,0,"NM","FORMAT CODE")

"^DD",9002313.91,9002313.9104,0,"UP")
9002313.91
"^DD",9002313.91,9002313.9104,.01,0)
FORMAT CODE^WL^^0;1^Q
"^DD",9002313.91,9002313.9104,.01,3)
Enter the M code to format the data in NCPDP format.
"^DD",9002313.91,9002313.9104,.01,9)
@
"^DD",9002313.91,9002313.9104,.01,"DT")
3071227
"^DIC",9002313.34,9002313.34,0)
BPS NCPDP PRESCRIBER PLACE OF SERVICE^9002313.34
"^DIC",9002313.34,9002313.34,0,"GL")
^BPS(9002313.34,
"^DIC",9002313.34,9002313.34,"%",0)
^1.005^^0
"^DIC",9002313.34,9002313.34,"%D",0)
^^8^8^3180514^
"^DIC",9002313.34,9002313.34,"%D",1,0)
NCPDP field D57-RG PRESCRIBER PLACE OF SERVICE CODE
"^DIC",9002313.34,9002313.34,"%D",2,0)
 
"^DIC",9002313.34,9002313.34,"%D",3,0)
This file is used to store the possible NCPDP PRESCRIBER PLACE OF SERVICE 
"^DIC",9002313.34,9002313.34,"%D",4,0)
CODES, that can be sent with a claim. No local changes should ever be 
"^DIC",9002313.34,9002313.34,"%D",5,0)
made to this file.  The data stored in this file is based on the NCPDP 
"^DIC",9002313.34,9002313.34,"%D",6,0)
standards and are nationally distributed.
"^DIC",9002313.34,9002313.34,"%D",7,0)
 
"^DIC",9002313.34,9002313.34,"%D",8,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",9002313.34,"B","BPS NCPDP PRESCRIBER PLACE OF ",9002313.34)

"^DIC",9002313.35,9002313.35,0)
BPS NCPDP BENEFIT STAGE INDICATOR^9002313.35
"^DIC",9002313.35,9002313.35,0,"GL")
^BPS(9002313.35,
"^DIC",9002313.35,9002313.35,"%",0)
^1.005^^0
"^DIC",9002313.35,9002313.35,"%D",0)
^^8^8^3180514^
"^DIC",9002313.35,9002313.35,"%D",1,0)
NCPDP field C51-9X BENEFIT STAGE INDICATOR
"^DIC",9002313.35,9002313.35,"%D",2,0)
 
"^DIC",9002313.35,9002313.35,"%D",3,0)
This file is used to store the possible NCPDP BENEFIT STAGE INDICATOR, 
"^DIC",9002313.35,9002313.35,"%D",4,0)
that can be sent on a claim or returned by the payer. No local changes 
"^DIC",9002313.35,9002313.35,"%D",5,0)
should ever be made to this file. The data stored in this file is based 
"^DIC",9002313.35,9002313.35,"%D",6,0)
on the NCPDP standards and are nationally distributed.
"^DIC",9002313.35,9002313.35,"%D",7,0)
 
"^DIC",9002313.35,9002313.35,"%D",8,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",9002313.35,"B","BPS NCPDP BENEFIT STAGE INDICA",9002313.35)

"^DIC",9002313.36,9002313.36,0)
BPS NCPDP LTPAC DISPENSE FREQUENCY^9002313.36
"^DIC",9002313.36,9002313.36,0,"GL")
^BPS(9002313.36,
"^DIC",9002313.36,9002313.36,"%",0)
^1.005^^0
"^DIC",9002313.36,9002313.36,"%D",0)
^^8^8^3180516^
"^DIC",9002313.36,9002313.36,"%D",1,0)
NCPDP field C91-KK LTPAC DISPENSE FREQUENCY
"^DIC",9002313.36,9002313.36,"%D",2,0)
 
"^DIC",9002313.36,9002313.36,"%D",3,0)
This file is used to store the possible NCPDP LTPAC DISPENSE FREQUENCY, 
"^DIC",9002313.36,9002313.36,"%D",4,0)
that can be sent on a claim. No local changes should ever be made to this 
"^DIC",9002313.36,9002313.36,"%D",5,0)
file. The data stored in this file is based on the NCPDP standards and 
"^DIC",9002313.36,9002313.36,"%D",6,0)
are nationally distributed.
"^DIC",9002313.36,9002313.36,"%D",7,0)
 
"^DIC",9002313.36,9002313.36,"%D",8,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",9002313.36,"B","BPS NCPDP LTPAC DISPENSE FREQU",9002313.36)

"^DIC",9002313.37,9002313.37,0)
BPS NCPDP PATIENT PAY COMPONENT QUALIFIER^9002313.37
"^DIC",9002313.37,9002313.37,0,"GL")
^BPS(9002313.37,
"^DIC",9002313.37,9002313.37,"%",0)
^1.005^^0
"^DIC",9002313.37,9002313.37,"%D",0)
^^8^8^3180516^^
"^DIC",9002313.37,9002313.37,"%D",1,0)
NCPDP field C95-KQ PATIENT PAY COMPONENT QUALIFIER
"^DIC",9002313.37,9002313.37,"%D",2,0)
 
"^DIC",9002313.37,9002313.37,"%D",3,0)
This file is used to store the possible NCPDP PATIENT PAY COMPONENT 
"^DIC",9002313.37,9002313.37,"%D",4,0)
QUALIFIER, that can be returned by the payer. No local changes should 
"^DIC",9002313.37,9002313.37,"%D",5,0)
ever be made to this file. The data stored in this file is based on the 
"^DIC",9002313.37,9002313.37,"%D",6,0)
NCPDP standards and are nationally distributed.
"^DIC",9002313.37,9002313.37,"%D",7,0)
 
"^DIC",9002313.37,9002313.37,"%D",8,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",9002313.37,"B","BPS NCPDP PATIENT PAY COMPONEN",9002313.37)

"^DIC",9002313.38,9002313.38,0)
BPS NCPDP OTHER PAYER PROGRAM TYPE^9002313.38
"^DIC",9002313.38,9002313.38,0,"GL")
^BPS(9002313.38,
"^DIC",9002313.38,9002313.38,"%",0)
^1.005^^0
"^DIC",9002313.38,9002313.38,"%D",0)
^^8^8^3180517^^
"^DIC",9002313.38,9002313.38,"%D",1,0)
NCPDP field C47-9T OTHER PAYER ADJUDICATED PROGRAM TYPE
"^DIC",9002313.38,9002313.38,"%D",2,0)
 
"^DIC",9002313.38,9002313.38,"%D",3,0)
This file is used to store the possible NCPDP OTHER PAYER ADJUDICATED 
"^DIC",9002313.38,9002313.38,"%D",4,0)
PROGRAM TYPE, that can be returned by the payer. No local changes should 
"^DIC",9002313.38,9002313.38,"%D",5,0)
ever be made to this file. The data stored in this file is based on the 
"^DIC",9002313.38,9002313.38,"%D",6,0)
NCPDP standards and are nationally distributed.
"^DIC",9002313.38,9002313.38,"%D",7,0)
 
"^DIC",9002313.38,9002313.38,"%D",8,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",9002313.38,"B","BPS NCPDP OTHER PAYER PROGRAM ",9002313.38)

"^DIC",9002313.91,9002313.91,0)
BPS NCPDP FIELD DEFS^9002313.91
"^DIC",9002313.91,9002313.91,0,"GL")
^BPSF(9002313.91,
"^DIC",9002313.91,9002313.91,"%",0)
^1.005^^0
"^DIC",9002313.91,9002313.91,"%","B","ABSP",1)

"^DIC",9002313.91,9002313.91,"%D",0)
^1.001^4^4^3100925^^^^
"^DIC",9002313.91,9002313.91,"%D",1,0)
The NCPDP Data Dictionary Individual fields which combine into formatted 
"^DIC",9002313.91,9002313.91,"%D",2,0)
packets.
"^DIC",9002313.91,9002313.91,"%D",3,0)
 
"^DIC",9002313.91,9002313.91,"%D",4,0)
Per VHA Directive 2004-038, this file definition should not be modified.
"^DIC",9002313.91,"B","BPS NCPDP FIELD DEFS",9002313.91)

**INSTALL NAME**
PSO*7.0*512
"BLD",10864,0)
PSO*7.0*512^OUTPATIENT PHARMACY^0^3181129^y
"BLD",10864,1,0)
^^1^1^3180305^
"BLD",10864,1,1,0)
MCCF EDI TAS EPHARMACY BUILDS 5 & 6
"BLD",10864,4,0)
^9.64PA^^0
"BLD",10864,6.3)
44
"BLD",10864,"KRN",0)
^9.67PA^779.2^20
"BLD",10864,"KRN",.4,0)
.4
"BLD",10864,"KRN",.401,0)
.401
"BLD",10864,"KRN",.402,0)
.402
"BLD",10864,"KRN",.403,0)
.403
"BLD",10864,"KRN",.5,0)
.5
"BLD",10864,"KRN",.84,0)
.84
"BLD",10864,"KRN",3.6,0)
3.6
"BLD",10864,"KRN",3.8,0)
3.8
"BLD",10864,"KRN",9.2,0)
9.2
"BLD",10864,"KRN",9.8,0)
9.8
"BLD",10864,"KRN",9.8,"NM",0)
^9.68A^13^11
"BLD",10864,"KRN",9.8,"NM",2,0)
PSOBPSU2^^0^B63200300
"BLD",10864,"KRN",9.8,"NM",3,0)
PSOBPSSL^^0^B94336071
"BLD",10864,"KRN",9.8,"NM",4,0)
PSOBPSU1^^0^B116456797
"BLD",10864,"KRN",9.8,"NM",5,0)
PSOBPSU3^^0^B98947553
"BLD",10864,"KRN",9.8,"NM",6,0)
PSOREJP2^^0^B228260947
"BLD",10864,"KRN",9.8,"NM",8,0)
PSOREJP1^^0^B196908863
"BLD",10864,"KRN",9.8,"NM",9,0)
PSOREJP5^^0^B57088844
"BLD",10864,"KRN",9.8,"NM",10,0)
PSOREJP3^^0^B272735549
"BLD",10864,"KRN",9.8,"NM",11,0)
PSOBPSR1^^0^B71253939
"BLD",10864,"KRN",9.8,"NM",12,0)
PSOBPSUT^^0^B91597468
"BLD",10864,"KRN",9.8,"NM",13,0)
PSORXED^^0^B106523584
"BLD",10864,"KRN",9.8,"NM","B","PSOBPSR1",11)

"BLD",10864,"KRN",9.8,"NM","B","PSOBPSSL",3)

"BLD",10864,"KRN",9.8,"NM","B","PSOBPSU1",4)

"BLD",10864,"KRN",9.8,"NM","B","PSOBPSU2",2)

"BLD",10864,"KRN",9.8,"NM","B","PSOBPSU3",5)

"BLD",10864,"KRN",9.8,"NM","B","PSOBPSUT",12)

"BLD",10864,"KRN",9.8,"NM","B","PSOREJP1",8)

"BLD",10864,"KRN",9.8,"NM","B","PSOREJP2",6)

"BLD",10864,"KRN",9.8,"NM","B","PSOREJP3",10)

"BLD",10864,"KRN",9.8,"NM","B","PSOREJP5",9)

"BLD",10864,"KRN",9.8,"NM","B","PSORXED",13)

"BLD",10864,"KRN",19,0)
19
"BLD",10864,"KRN",19.1,0)
19.1
"BLD",10864,"KRN",101,0)
101
"BLD",10864,"KRN",101,"NM",0)
^9.68A^50^50
"BLD",10864,"KRN",101,"NM",1,0)
PSO HIDDEN ACTIONS^^0
"BLD",10864,"KRN",101,"NM",2,0)
PSO HIDDEN ACTIONS #6^^0
"BLD",10864,"KRN",101,"NM",3,0)
PSO REJECT DISPLAY HIDDEN MENU^^0
"BLD",10864,"KRN",101,"NM",4,0)
PSO REJECT TRICARE HIDDEN MENU^^0
"BLD",10864,"KRN",101,"NM",5,0)
PSO EDIT CLAIM SUBMITTED 1^^0
"BLD",10864,"KRN",101,"NM",6,0)
PSO EDIT CLAIM SUBMITTED 2^^0
"BLD",10864,"KRN",101,"NM",7,0)
PSO ACTIVITY LOGS^^4^
"BLD",10864,"KRN",101,"NM",8,0)
PSO DISPLAY DRUG ALLERGIES^^4^
"BLD",10864,"KRN",101,"NM",9,0)
PSO DRUG RESTR/GUIDE INFO^^4^
"BLD",10864,"KRN",101,"NM",10,0)
PSO ERX OP PRINT^^4^
"BLD",10864,"KRN",101,"NM",11,0)
PSO HOLD^^4^
"BLD",10864,"KRN",101,"NM",12,0)
PSO LM BACKDOOR COPY^^4^
"BLD",10864,"KRN",101,"NM",13,0)
PSO LM BACKDOOR MARK AS TITRATION^^4^
"BLD",10864,"KRN",101,"NM",14,0)
PSO LM BACKDOOR PRTCL USRSCR RESUBMIT^^4^
"BLD",10864,"KRN",101,"NM",15,0)
PSO LM BACKDOOR PRTCL USRSCR REVERSE^^4^
"BLD",10864,"KRN",101,"NM",16,0)
PSO LM BACKDOOR PRTCL USRSCR VERIFY^^4^
"BLD",10864,"KRN",101,"NM",17,0)
PSO LM BACKDOOR TITRATION RX REFILL^^4^
"BLD",10864,"KRN",101,"NM",18,0)
PSO LM HIDDEN OTHER #2^^4^
"BLD",10864,"KRN",101,"NM",19,0)
PSO LM INPATIENT MEDICATION PROFILE^^4^
"BLD",10864,"KRN",101,"NM",20,0)
PSO LM INTERVENTION MENU^^4^
"BLD",10864,"KRN",101,"NM",21,0)
PSO PATIENT INFORMATION^^4^
"BLD",10864,"KRN",101,"NM",22,0)
PSO PULL ONE RX FROM SUSPENSE^^4^
"BLD",10864,"KRN",101,"NM",23,0)
PSO REJECT DISCONTINUE^^4^
"BLD",10864,"KRN",101,"NM",24,0)
PSO REJECT DISPLAY ADD COMMENT^^4^
"BLD",10864,"KRN",101,"NM",25,0)
PSO REJECT DISPLAY ADDITIONAL INFO^^4^
"BLD",10864,"KRN",101,"NM",26,0)
PSO REJECT DISPLAY CLARIFICATION CODE^^4^
"BLD",10864,"KRN",101,"NM",27,0)
PSO REJECT DISPLAY OUTSIDE CALL^^4^
"BLD",10864,"KRN",101,"NM",28,0)
PSO REJECT DISPLAY PRIOR AUTHORIZATION^^4^
"BLD",10864,"KRN",101,"NM",29,0)
PSO REJECT DISPLAY RX EDIT^^4^
"BLD",10864,"KRN",101,"NM",30,0)
PSO REJECT DISPLAY SMA^^4^
"BLD",10864,"KRN",101,"NM",31,0)
PSO REJECT SUSPENSE DT CALC^^4^
"BLD",10864,"KRN",101,"NM",32,0)
PSO REJECT VIEW ECME RX^^4^
"BLD",10864,"KRN",101,"NM",33,0)
PSO REPRINT^^4^
"BLD",10864,"KRN",101,"NM",34,0)
PSO UNHOLD^^4^
"BLD",10864,"KRN",101,"NM",35,0)
PSO VERIFY^^4^
"BLD",10864,"KRN",101,"NM",36,0)
VALM DOWN A LINE^^4^
"BLD",10864,"KRN",101,"NM",37,0)
VALM FIRST SCREEN^^4^
"BLD",10864,"KRN",101,"NM",38,0)
VALM GOTO PAGE^^4^
"BLD",10864,"KRN",101,"NM",39,0)
VALM LAST SCREEN^^4^
"BLD",10864,"KRN",101,"NM",40,0)
VALM LEFT^^4^
"BLD",10864,"KRN",101,"NM",41,0)
VALM NEXT SCREEN^^4^
"BLD",10864,"KRN",101,"NM",42,0)
VALM PREVIOUS SCREEN^^4^
"BLD",10864,"KRN",101,"NM",43,0)
VALM PRINT LIST^^4^
"BLD",10864,"KRN",101,"NM",44,0)
VALM PRINT SCREEN^^4^
"BLD",10864,"KRN",101,"NM",45,0)
VALM QUIT^^4^
"BLD",10864,"KRN",101,"NM",46,0)
VALM REFRESH^^4^
"BLD",10864,"KRN",101,"NM",47,0)
VALM RIGHT^^4^
"BLD",10864,"KRN",101,"NM",48,0)
VALM SEARCH LIST^^4^
"BLD",10864,"KRN",101,"NM",49,0)
VALM TURN ON/OFF MENUS^^4^
"BLD",10864,"KRN",101,"NM",50,0)
VALM UP ONE LINE^^4^
"BLD",10864,"KRN",101,"NM","B","PSO ACTIVITY LOGS",7)

"BLD",10864,"KRN",101,"NM","B","PSO DISPLAY DRUG ALLERGIES",8)

"BLD",10864,"KRN",101,"NM","B","PSO DRUG RESTR/GUIDE INFO",9)

"BLD",10864,"KRN",101,"NM","B","PSO EDIT CLAIM SUBMITTED 1",5)

"BLD",10864,"KRN",101,"NM","B","PSO EDIT CLAIM SUBMITTED 2",6)

"BLD",10864,"KRN",101,"NM","B","PSO ERX OP PRINT",10)

"BLD",10864,"KRN",101,"NM","B","PSO HIDDEN ACTIONS",1)

"BLD",10864,"KRN",101,"NM","B","PSO HIDDEN ACTIONS #6",2)

"BLD",10864,"KRN",101,"NM","B","PSO HOLD",11)

"BLD",10864,"KRN",101,"NM","B","PSO LM BACKDOOR COPY",12)

"BLD",10864,"KRN",101,"NM","B","PSO LM BACKDOOR MARK AS TITRATION",13)

"BLD",10864,"KRN",101,"NM","B","PSO LM BACKDOOR PRTCL USRSCR RESUBMIT",14)

"BLD",10864,"KRN",101,"NM","B","PSO LM BACKDOOR PRTCL USRSCR REVERSE",15)

"BLD",10864,"KRN",101,"NM","B","PSO LM BACKDOOR PRTCL USRSCR VERIFY",16)

"BLD",10864,"KRN",101,"NM","B","PSO LM BACKDOOR TITRATION RX REFILL",17)

"BLD",10864,"KRN",101,"NM","B","PSO LM HIDDEN OTHER #2",18)

"BLD",10864,"KRN",101,"NM","B","PSO LM INPATIENT MEDICATION PROFILE",19)

"BLD",10864,"KRN",101,"NM","B","PSO LM INTERVENTION MENU",20)

"BLD",10864,"KRN",101,"NM","B","PSO PATIENT INFORMATION",21)

"BLD",10864,"KRN",101,"NM","B","PSO PULL ONE RX FROM SUSPENSE",22)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISCONTINUE",23)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISPLAY ADD COMMENT",24)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISPLAY ADDITIONAL INFO",25)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISPLAY CLARIFICATION CODE",26)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISPLAY HIDDEN MENU",3)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISPLAY OUTSIDE CALL",27)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISPLAY PRIOR AUTHORIZATION",28)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISPLAY RX EDIT",29)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT DISPLAY SMA",30)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT SUSPENSE DT CALC",31)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT TRICARE HIDDEN MENU",4)

"BLD",10864,"KRN",101,"NM","B","PSO REJECT VIEW ECME RX",32)

"BLD",10864,"KRN",101,"NM","B","PSO REPRINT",33)

"BLD",10864,"KRN",101,"NM","B","PSO UNHOLD",34)

"BLD",10864,"KRN",101,"NM","B","PSO VERIFY",35)

"BLD",10864,"KRN",101,"NM","B","VALM DOWN A LINE",36)

"BLD",10864,"KRN",101,"NM","B","VALM FIRST SCREEN",37)

"BLD",10864,"KRN",101,"NM","B","VALM GOTO PAGE",38)

"BLD",10864,"KRN",101,"NM","B","VALM LAST SCREEN",39)

"BLD",10864,"KRN",101,"NM","B","VALM LEFT",40)

"BLD",10864,"KRN",101,"NM","B","VALM NEXT SCREEN",41)

"BLD",10864,"KRN",101,"NM","B","VALM PREVIOUS SCREEN",42)

"BLD",10864,"KRN",101,"NM","B","VALM PRINT LIST",43)

"BLD",10864,"KRN",101,"NM","B","VALM PRINT SCREEN",44)

"BLD",10864,"KRN",101,"NM","B","VALM QUIT",45)

"BLD",10864,"KRN",101,"NM","B","VALM REFRESH",46)

"BLD",10864,"KRN",101,"NM","B","VALM RIGHT",47)

"BLD",10864,"KRN",101,"NM","B","VALM SEARCH LIST",48)

"BLD",10864,"KRN",101,"NM","B","VALM TURN ON/OFF MENUS",49)

"BLD",10864,"KRN",101,"NM","B","VALM UP ONE LINE",50)

"BLD",10864,"KRN",409.61,0)
409.61
"BLD",10864,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",10864,"KRN",409.61,"NM",1,0)
PSO REJECT DISPLAY - RESOLVED^^0
"BLD",10864,"KRN",409.61,"NM","B","PSO REJECT DISPLAY - RESOLVED",1)

"BLD",10864,"KRN",771,0)
771
"BLD",10864,"KRN",779.2,0)
779.2
"BLD",10864,"KRN",870,0)
870
"BLD",10864,"KRN",8989.51,0)
8989.51
"BLD",10864,"KRN",8989.52,0)
8989.52
"BLD",10864,"KRN",8994,0)
8994
"BLD",10864,"KRN","B",.4,.4)

"BLD",10864,"KRN","B",.401,.401)

"BLD",10864,"KRN","B",.402,.402)

"BLD",10864,"KRN","B",.403,.403)

"BLD",10864,"KRN","B",.5,.5)

"BLD",10864,"KRN","B",.84,.84)

"BLD",10864,"KRN","B",3.6,3.6)

"BLD",10864,"KRN","B",3.8,3.8)

"BLD",10864,"KRN","B",9.2,9.2)

"BLD",10864,"KRN","B",9.8,9.8)

"BLD",10864,"KRN","B",19,19)

"BLD",10864,"KRN","B",19.1,19.1)

"BLD",10864,"KRN","B",101,101)

"BLD",10864,"KRN","B",409.61,409.61)

"BLD",10864,"KRN","B",771,771)

"BLD",10864,"KRN","B",779.2,779.2)

"BLD",10864,"KRN","B",870,870)

"BLD",10864,"KRN","B",8989.51,8989.51)

"BLD",10864,"KRN","B",8989.52,8989.52)

"BLD",10864,"KRN","B",8994,8994)

"BLD",10864,"QUES",0)
^9.62^^
"BLD",10864,"REQB",0)
^9.611^3^2
"BLD",10864,"REQB",2,0)
PSO*7.0*482^2
"BLD",10864,"REQB",3,0)
PSO*7.0*408^2
"BLD",10864,"REQB","B","PSO*7.0*408",3)

"BLD",10864,"REQB","B","PSO*7.0*482",2)

"KRN",101,1689,-1)
4^41
"KRN",101,1689,0)
VALM NEXT SCREEN
"KRN",101,1690,-1)
4^42
"KRN",101,1690,0)
VALM PREVIOUS SCREEN
"KRN",101,1691,-1)
4^46
"KRN",101,1691,0)
VALM REFRESH
"KRN",101,1692,-1)
4^39
"KRN",101,1692,0)
VALM LAST SCREEN
"KRN",101,1693,-1)
4^37
"KRN",101,1693,0)
VALM FIRST SCREEN
"KRN",101,1694,-1)
4^50
"KRN",101,1694,0)
VALM UP ONE LINE
"KRN",101,1695,-1)
4^36
"KRN",101,1695,0)
VALM DOWN A LINE
"KRN",101,1697,-1)
4^45
"KRN",101,1697,0)
VALM QUIT
"KRN",101,1698,-1)
4^44
"KRN",101,1698,0)
VALM PRINT SCREEN
"KRN",101,1699,-1)
4^43
"KRN",101,1699,0)
VALM PRINT LIST
"KRN",101,1701,-1)
4^49
"KRN",101,1701,0)
VALM TURN ON/OFF MENUS
"KRN",101,1703,-1)
4^48
"KRN",101,1703,0)
VALM SEARCH LIST
"KRN",101,1710,-1)
4^47
"KRN",101,1710,0)
VALM RIGHT
"KRN",101,1711,-1)
4^40
"KRN",101,1711,0)
VALM LEFT
"KRN",101,1713,-1)
4^38
"KRN",101,1713,0)
VALM GOTO PAGE
"KRN",101,5483,-1)
4^11
"KRN",101,5483,0)
PSO HOLD
"KRN",101,5484,-1)
4^34
"KRN",101,5484,0)
PSO UNHOLD
"KRN",101,5488,-1)
4^33
"KRN",101,5488,0)
PSO REPRINT
"KRN",101,5489,-1)
4^35
"KRN",101,5489,0)
PSO VERIFY
"KRN",101,5492,-1)
4^21
"KRN",101,5492,0)
PSO PATIENT INFORMATION
"KRN",101,5501,-1)
4^12
"KRN",101,5501,0)
PSO LM BACKDOOR COPY
"KRN",101,5502,-1)
4^7
"KRN",101,5502,0)
PSO ACTIVITY LOGS
"KRN",101,5517,-1)
0^1
"KRN",101,5517,0)
PSO HIDDEN ACTIONS^Outpatient Pharmacy Hidden Actions^^M^^^^^^^^OUTPATIENT PHARMACY
"KRN",101,5517,1,0)
^101.06^1^1^3001004^^^^
"KRN",101,5517,1,1,0)
This hidden menu is attached to the the active order list.
"KRN",101,5517,4)
26
"KRN",101,5517,10,0)
^101.01PA^41^41
"KRN",101,5517,10,1,0)
1689^+^^
"KRN",101,5517,10,1,"^")
VALM NEXT SCREEN
"KRN",101,5517,10,2,0)
1690^-^^
"KRN",101,5517,10,2,"^")
VALM PREVIOUS SCREEN
"KRN",101,5517,10,3,0)
1694^UP^^
"KRN",101,5517,10,3,"^")
VALM UP ONE LINE
"KRN",101,5517,10,4,0)
1695^DN^^
"KRN",101,5517,10,4,"^")
VALM DOWN A LINE
"KRN",101,5517,10,5,0)
1691^RD^^
"KRN",101,5517,10,5,"^")
VALM REFRESH
"KRN",101,5517,10,6,0)
1698^PS^^
"KRN",101,5517,10,6,"^")
VALM PRINT SCREEN
"KRN",101,5517,10,7,0)
1699^PT^^
"KRN",101,5517,10,7,"^")
VALM PRINT LIST
"KRN",101,5517,10,8,0)
1710^>^^
"KRN",101,5517,10,8,"^")
VALM RIGHT
"KRN",101,5517,10,9,0)
1711^<^^
"KRN",101,5517,10,9,"^")
VALM LEFT
"KRN",101,5517,10,10,0)
1703^SL^^
"KRN",101,5517,10,10,"^")
VALM SEARCH LIST
"KRN",101,5517,10,11,0)
1697^QU^^
"KRN",101,5517,10,11,1)
^
"KRN",101,5517,10,11,"^")
VALM QUIT
"KRN",101,5517,10,12,0)
1692^LS^^
"KRN",101,5517,10,12,"^")
VALM LAST SCREEN
"KRN",101,5517,10,13,0)
1693^FS^^
"KRN",101,5517,10,13,"^")
VALM FIRST SCREEN
"KRN",101,5517,10,14,0)
1713^GO^^
"KRN",101,5517,10,14,"^")
VALM GOTO PAGE
"KRN",101,5517,10,15,0)
5502^AL^11^
"KRN",101,5517,10,15,"^")
PSO ACTIVITY LOGS
"KRN",101,5517,10,17,0)
5501^CO^13^
"KRN",101,5517,10,17,"^")
PSO LM BACKDOOR COPY
"KRN",101,5517,10,18,0)
5483^HD^22^
"KRN",101,5517,10,18,"^")
PSO HOLD
"KRN",101,5517,10,19,0)
5484^UH^23^
"KRN",101,5517,10,19,"^")
PSO UNHOLD
"KRN",101,5517,10,20,0)
5489^VF^12^
"KRN",101,5517,10,20,"^")
PSO VERIFY
"KRN",101,5517,10,21,0)
5488^RP^21^
"KRN",101,5517,10,21,"^")
PSO REPRINT
"KRN",101,5517,10,25,0)
5492^PI^31^
"KRN",101,5517,10,25,"^")
PSO PATIENT INFORMATION
"KRN",101,5517,10,26,0)
5535^PP^32^
"KRN",101,5517,10,26,"^")
PSO PULL ONE RX FROM SUSPENSE
"KRN",101,5517,10,27,0)
5539^IP^33^
"KRN",101,5517,10,27,"^")
PSO LM INPATIENT MEDICATION PROFILE
"KRN",101,5517,10,29,0)
5545^OTH^34^
"KRN",101,5517,10,29,"^")
PSO LM HIDDEN OTHER #2
"KRN",101,5517,10,30,0)
1701^ADPL^^
"KRN",101,5517,10,30,"^")
VALM TURN ON/OFF MENUS
"KRN",101,5517,10,31,0)
6239^DIN^66^
"KRN",101,5517,10,31,"^")
PSO DRUG RESTR/GUIDE INFO
"KRN",101,5517,10,32,0)
7140^REJ^35^
"KRN",101,5517,10,32,"^")
PSO REJECT DISPLAY OUTSIDE CALL
"KRN",101,5517,10,33,0)
7562^IN^36^
"KRN",101,5517,10,33,"^")
PSO LM INTERVENTION MENU
"KRN",101,5517,10,34,0)
7788^DA^37^
"KRN",101,5517,10,34,"^")
PSO DISPLAY DRUG ALLERGIES
"KRN",101,5517,10,35,0)
7917^TR^14^
"KRN",101,5517,10,35,"^")
PSO LM BACKDOOR TITRATION RX REFILL
"KRN",101,5517,10,36,0)
7918^TM^15^
"KRN",101,5517,10,36,"^")
PSO LM BACKDOOR MARK AS TITRATION
"KRN",101,5517,10,37,0)
8043^VER^35.5^
"KRN",101,5517,10,37,"^")
PSO LM BACKDOOR PRTCL USRSCR VERIFY
"KRN",101,5517,10,38,0)
8044^RES^35.7^
"KRN",101,5517,10,38,"^")
PSO LM BACKDOOR PRTCL USRSCR RESUBMIT
"KRN",101,5517,10,39,0)
8045^REV^35.8^
"KRN",101,5517,10,39,"^")
PSO LM BACKDOOR PRTCL USRSCR REVERSE
"KRN",101,5517,10,40,0)
8346^EP^67^
"KRN",101,5517,10,40,"^")
PSO ERX OP PRINT
"KRN",101,5517,10,41,0)
8365^ECS^70^
"KRN",101,5517,10,41,"^")
PSO EDIT CLAIM SUBMITTED 1
"KRN",101,5517,24)
I $$ACTIONS^PSOLMUTL
"KRN",101,5517,99)
64880,25908
"KRN",101,5535,-1)
4^22
"KRN",101,5535,0)
PSO PULL ONE RX FROM SUSPENSE
"KRN",101,5539,-1)
4^19
"KRN",101,5539,0)
PSO LM INPATIENT MEDICATION PROFILE
"KRN",101,5545,-1)
4^18
"KRN",101,5545,0)
PSO LM HIDDEN OTHER #2
"KRN",101,6239,-1)
4^9
"KRN",101,6239,0)
PSO DRUG RESTR/GUIDE INFO
"KRN",101,7137,-1)
4^29
"KRN",101,7137,0)
PSO REJECT DISPLAY RX EDIT
"KRN",101,7140,-1)
4^27
"KRN",101,7140,0)
PSO REJECT DISPLAY OUTSIDE CALL
"KRN",101,7279,-1)
4^24
"KRN",101,7279,0)
PSO REJECT DISPLAY ADD COMMENT
"KRN",101,7280,-1)
4^26
"KRN",101,7280,0)
PSO REJECT DISPLAY CLARIFICATION CODE
"KRN",101,7281,-1)
0^3
"KRN",101,7281,0)
PSO REJECT DISPLAY HIDDEN MENU^Reject Display Hidden Menu^^M^^^^^^^^
"KRN",101,7281,1,0)
^101.06^1^1^3070320^^^^
"KRN",101,7281,1,1,0)
This is the hidden menu option for the Reject Information(UNRESOLVED) [PSO REJECT DISPLAY] ListMan screen.
"KRN",101,7281,4)
26^3
"KRN",101,7281,10,0)
^101.01PA^27^27
"KRN",101,7281,10,1,0)
1689^+^10^
"KRN",101,7281,10,1,"^")
VALM NEXT SCREEN
"KRN",101,7281,10,2,0)
1690^-^11^
"KRN",101,7281,10,2,"^")
VALM PREVIOUS SCREEN
"KRN",101,7281,10,3,0)
1694^UP^13^
"KRN",101,7281,10,3,"^")
VALM UP ONE LINE
"KRN",101,7281,10,5,0)
1691^RD^19^
"KRN",101,7281,10,5,"^")
VALM REFRESH
"KRN",101,7281,10,6,0)
1698^PS^20^
"KRN",101,7281,10,6,"^")
VALM PRINT SCREEN
"KRN",101,7281,10,7,0)
1699^PT^21^
"KRN",101,7281,10,7,"^")
VALM PRINT LIST
"KRN",101,7281,10,11,0)
1697^QU^24^
"KRN",101,7281,10,11,"^")
VALM QUIT
"KRN",101,7281,10,12,0)
1692^LS^17^
"KRN",101,7281,10,12,"^")
VALM LAST SCREEN
"KRN",101,7281,10,13,0)
1693^FS^16^
"KRN",101,7281,10,13,"^")
VALM FIRST SCREEN
"KRN",101,7281,10,14,0)
1713^GO^18^
"KRN",101,7281,10,14,"^")
VALM GOTO PAGE
"KRN",101,7281,10,15,0)
7137^ED^3^
"KRN",101,7281,10,15,"^")
PSO REJECT DISPLAY RX EDIT
"KRN",101,7281,10,16,0)
7280^CLA^2^
"KRN",101,7281,10,16,"^")
PSO REJECT DISPLAY CLARIFICATION CODE
"KRN",101,7281,10,17,0)
7279^COM^1^
"KRN",101,7281,10,17,"^")
PSO REJECT DISPLAY ADD COMMENT
"KRN",101,7281,10,18,0)
1701^ADPL^23^
"KRN",101,7281,10,18,"^")
VALM TURN ON/OFF MENUS
"KRN",101,7281,10,19,0)
7282^PA^4^
"KRN",101,7281,10,19,"^")
PSO REJECT DISPLAY PRIOR AUTHORIZATION
"KRN",101,7281,10,20,0)
1695^DN^12^
"KRN",101,7281,10,20,"^")
VALM DOWN A LINE
"KRN",101,7281,10,21,0)
1703^SL^22^
"KRN",101,7281,10,21,"^")
VALM SEARCH LIST
"KRN",101,7281,10,22,0)
7643^ARI^25^
"KRN",101,7281,10,22,"^")
PSO REJECT DISPLAY ADDITIONAL INFO
"KRN",101,7281,10,23,0)
7668^SMA^5^
"KRN",101,7281,10,23,"^")
PSO REJECT DISPLAY SMA
"KRN",101,7281,10,24,0)
7667^SDC^55^
"KRN",101,7281,10,24,"^")
PSO REJECT SUSPENSE DT CALC
"KRN",101,7281,10,25,0)
7670^VER^65^
"KRN",101,7281,10,25,"^")
PSO REJECT VIEW ECME RX
"KRN",101,7281,10,26,0)
7392^DC^3.5^
"KRN",101,7281,10,26,"^")
PSO REJECT DISCONTINUE
"KRN",101,7281,10,27,0)
8366^ECS^70^
"KRN",101,7281,10,27,"^")
PSO EDIT CLAIM SUBMITTED 2
"KRN",101,7281,15)

"KRN",101,7281,99)
64880,25908
"KRN",101,7282,-1)
4^28
"KRN",101,7282,0)
PSO REJECT DISPLAY PRIOR AUTHORIZATION
"KRN",101,7392,-1)
4^23
"KRN",101,7392,0)
PSO REJECT DISCONTINUE
"KRN",101,7562,-1)
4^20
"KRN",101,7562,0)
PSO LM INTERVENTION MENU
"KRN",101,7643,-1)
4^25
"KRN",101,7643,0)
PSO REJECT DISPLAY ADDITIONAL INFO
"KRN",101,7667,-1)
4^31
"KRN",101,7667,0)
PSO REJECT SUSPENSE DT CALC
"KRN",101,7668,-1)
4^30
"KRN",101,7668,0)
PSO REJECT DISPLAY SMA
"KRN",101,7670,-1)
4^32
"KRN",101,7670,0)
PSO REJECT VIEW ECME RX
"KRN",101,7788,-1)
4^8
"KRN",101,7788,0)
PSO DISPLAY DRUG ALLERGIES
"KRN",101,7917,-1)
4^17
"KRN",101,7917,0)
PSO LM BACKDOOR TITRATION RX REFILL
"KRN",101,7918,-1)
4^13
"KRN",101,7918,0)
PSO LM BACKDOOR MARK AS TITRATION
"KRN",101,7992,-1)
0^4
"KRN",101,7992,0)
PSO REJECT TRICARE HIDDEN MENU^Reject TRICARE/CHAMPVA Hidden Menu^^M^^^^^^^^
"KRN",101,7992,1,0)
^^3^3^3141111^
"KRN",101,7992,1,1,0)
This is the hidden menu option for the Reject Information (UNRESOLVED) 
"KRN",101,7992,1,2,0)
[PSO REJECT TRICARE] ListMan screen.  This is specifically for TRICARE 
"KRN",101,7992,1,3,0)
and CHAMPVA rejects.
"KRN",101,7992,4)
26^3
"KRN",101,7992,10,0)
^101.01PA^22^22
"KRN",101,7992,10,1,0)
1689^+^10^
"KRN",101,7992,10,1,"^")
VALM NEXT SCREEN
"KRN",101,7992,10,2,0)
1690^-^11^
"KRN",101,7992,10,2,"^")
VALM PREVIOUS SCREEN
"KRN",101,7992,10,3,0)
1694^UP^13^
"KRN",101,7992,10,3,"^")
VALM UP ONE LINE
"KRN",101,7992,10,4,0)
1691^RD^19^
"KRN",101,7992,10,4,"^")
VALM REFRESH
"KRN",101,7992,10,5,0)
1698^PS^20^
"KRN",101,7992,10,5,"^")
VALM PRINT SCREEN
"KRN",101,7992,10,6,0)
1699^PT^21^
"KRN",101,7992,10,6,"^")
VALM PRINT LIST
"KRN",101,7992,10,7,0)
1697^QU^24^
"KRN",101,7992,10,7,"^")
VALM QUIT
"KRN",101,7992,10,8,0)
1692^LS^17^
"KRN",101,7992,10,8,"^")
VALM LAST SCREEN
"KRN",101,7992,10,9,0)
1693^FS^16^
"KRN",101,7992,10,9,"^")
VALM FIRST SCREEN
"KRN",101,7992,10,10,0)
1713^GO^18^
"KRN",101,7992,10,10,"^")
VALM GOTO PAGE
"KRN",101,7992,10,11,0)
7137^ED^3^
"KRN",101,7992,10,11,"^")
PSO REJECT DISPLAY RX EDIT
"KRN",101,7992,10,12,0)
7280^CLA^2^
"KRN",101,7992,10,12,"^")
PSO REJECT DISPLAY CLARIFICATION CODE
"KRN",101,7992,10,13,0)
7279^COM^1^
"KRN",101,7992,10,13,"^")
PSO REJECT DISPLAY ADD COMMENT
"KRN",101,7992,10,14,0)
1701^ADPL^23^
"KRN",101,7992,10,14,"^")
VALM TURN ON/OFF MENUS
"KRN",101,7992,10,15,0)
7282^PA^4^
"KRN",101,7992,10,15,"^")
PSO REJECT DISPLAY PRIOR AUTHORIZATION
"KRN",101,7992,10,16,0)
1695^DN^12^
"KRN",101,7992,10,16,"^")
VALM DOWN A LINE
"KRN",101,7992,10,17,0)
1703^SL^22^
"KRN",101,7992,10,17,"^")
VALM SEARCH LIST
"KRN",101,7992,10,18,0)
7643^ARI^25^
"KRN",101,7992,10,18,"^")
PSO REJECT DISPLAY ADDITIONAL INFO
"KRN",101,7992,10,19,0)
7668^SMA^5^
"KRN",101,7992,10,19,"^")
PSO REJECT DISPLAY SMA
"KRN",101,7992,10,20,0)
7667^SDC^55^
"KRN",101,7992,10,20,"^")
PSO REJECT SUSPENSE DT CALC
"KRN",101,7992,10,21,0)
7670^VER^65^
"KRN",101,7992,10,21,"^")
PSO REJECT VIEW ECME RX
"KRN",101,7992,10,22,0)
8366^ECS^70^
"KRN",101,7992,10,22,"^")
PSO EDIT CLAIM SUBMITTED 2
"KRN",101,7992,99)
64880,25908
"KRN",101,8043,-1)
4^16
"KRN",101,8043,0)
PSO LM BACKDOOR PRTCL USRSCR VERIFY
"KRN",101,8044,-1)
4^14
"KRN",101,8044,0)
PSO LM BACKDOOR PRTCL USRSCR RESUBMIT
"KRN",101,8045,-1)
4^15
"KRN",101,8045,0)
PSO LM BACKDOOR PRTCL USRSCR REVERSE
"KRN",101,8346,-1)
4^10
"KRN",101,8346,0)
PSO ERX OP PRINT
"KRN",101,8365,-1)
0^5
"KRN",101,8365,0)
PSO EDIT CLAIM SUBMITTED 1^Edit Claim Submitted^^A^^^^^^^^OUTPATIENT PHARMACY
"KRN",101,8365,1,0)
^^2^2^3180424^
"KRN",101,8365,1,1,0)
This action protocol allows the user to add to a claim fields not already 
"KRN",101,8365,1,2,0)
on the payer sheet.
"KRN",101,8365,4)
^^^ECS
"KRN",101,8365,20)
D ECS^PSOBPSU3($P(PSOLST(ORN),"^",2),,1)
"KRN",101,8365,99)
64880,25908
"KRN",101,8366,-1)
0^6
"KRN",101,8366,0)
PSO EDIT CLAIM SUBMITTED 2^Edit Claim Submitted^^A^^^^^^^^OUTPATIENT PHARMACY
"KRN",101,8366,1,0)
^^2^2^3180424^
"KRN",101,8366,1,1,0)
This action protocol allows the user to add to a claim fields not already 
"KRN",101,8366,1,2,0)
on the payer sheet.
"KRN",101,8366,4)
^^^ECS
"KRN",101,8366,20)
D ECS^PSOBPSU3($G(RX),$G(FILL),2)
"KRN",101,8366,99)
64880,25908
"KRN",101,8367,-1)
0^2
"KRN",101,8367,0)
PSO HIDDEN ACTIONS #6^Outpatient Pharmacy Hidden Actions #6^^M^^^^^^^^OUTPATIENT PHARMACY
"KRN",101,8367,4)
26
"KRN",101,8367,10,0)
^101.01PA^19^19
"KRN",101,8367,10,1,0)
7562^IN^10^
"KRN",101,8367,10,1,"^")
PSO LM INTERVENTION MENU
"KRN",101,8367,10,2,0)
1689^+^11^
"KRN",101,8367,10,2,"^")
VALM NEXT SCREEN
"KRN",101,8367,10,3,0)
1690^-^12^
"KRN",101,8367,10,3,"^")
VALM PREVIOUS SCREEN
"KRN",101,8367,10,4,0)
1694^UP^13^
"KRN",101,8367,10,4,"^")
VALM UP ONE LINE
"KRN",101,8367,10,5,0)
1695^DN^14^
"KRN",101,8367,10,5,"^")
VALM DOWN A LINE
"KRN",101,8367,10,6,0)
1710^>^15^
"KRN",101,8367,10,6,"^")
VALM RIGHT
"KRN",101,8367,10,7,0)
1711^<^16^
"KRN",101,8367,10,7,"^")
VALM LEFT
"KRN",101,8367,10,8,0)
1693^FS^21^
"KRN",101,8367,10,8,"^")
VALM FIRST SCREEN
"KRN",101,8367,10,9,0)
1692^LS^22^
"KRN",101,8367,10,9,"^")
VALM LAST SCREEN
"KRN",101,8367,10,10,0)
1713^GO^23^
"KRN",101,8367,10,10,"^")
VALM GOTO PAGE
"KRN",101,8367,10,11,0)
1691^RD^24^
"KRN",101,8367,10,11,"^")
VALM REFRESH
"KRN",101,8367,10,12,0)
1698^PS^26^
"KRN",101,8367,10,12,"^")
VALM PRINT SCREEN
"KRN",101,8367,10,13,0)
1699^PT^26^
"KRN",101,8367,10,13,"^")
VALM PRINT LIST
"KRN",101,8367,10,14,0)
1703^SL^31^
"KRN",101,8367,10,14,"^")
VALM SEARCH LIST
"KRN",101,8367,10,15,0)
1701^ADPL^32^
"KRN",101,8367,10,15,"^")
VALM TURN ON/OFF MENUS
"KRN",101,8367,10,16,0)
1697^QU^33^
"KRN",101,8367,10,16,"^")
VALM QUIT
"KRN",101,8367,10,17,0)
7643^ARI^34^
"KRN",101,8367,10,17,"^")
PSO REJECT DISPLAY ADDITIONAL INFO
"KRN",101,8367,10,18,0)
7670^VER^35^
"KRN",101,8367,10,18,"^")
PSO REJECT VIEW ECME RX
"KRN",101,8367,10,19,0)
8366^ECS^36^
"KRN",101,8367,10,19,"^")
PSO EDIT CLAIM SUBMITTED 2
"KRN",101,8367,99)
64880,25908
"KRN",409.61,616,-1)
0^1
"KRN",409.61,616,0)
PSO REJECT DISPLAY - RESOLVED^1^^80^7^20^0^1^^PSO REJECT DISPLAY MENU - RESOLVED^Reject Information(RESOLVED)^1^^1
"KRN",409.61,616,1)
^PSO HIDDEN ACTIONS #6
"KRN",409.61,616,"ARRAY")
 ^TMP("PSOREJP1",$J)
"KRN",409.61,616,"FNL")
D EXIT^PSOREJP1
"KRN",409.61,616,"HDR")
D HDR^PSOREJP1
"KRN",409.61,616,"HLP")
D HELP^PSOREJP1
"KRN",409.61,616,"INIT")
D INIT^PSOREJP1
"MBREQ")
1
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"PKG",170,-1)
1^1
"PKG",170,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
7.0^2971216^2981113^1
"PKG",170,22,1,"PAH",1,0)
512^3181129^520824633
"PKG",170,22,1,"PAH",1,1,0)
^^1^1^3181129
"PKG",170,22,1,"PAH",1,1,1,0)
MCCF EDI TAS EPHARMACY BUILDS 5 & 6
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","PSOBPSR1")
0^11^B71253939
"RTN","PSOBPSR1",1,0)
PSOBPSR1 ;BHM/LE - continued Ignored Claims Report ;03/01/07
"RTN","PSOBPSR1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**260,448,512**;DEC 1997;Build 44
"RTN","PSOBPSR1",3,0)
 ;External reference to File ^PS(55 supported by DBIA 2228
"RTN","PSOBPSR1",4,0)
 ;External reference to $$GET1^DIQ is supported by DBIA 2056
"RTN","PSOBPSR1",5,0)
 ;External reference to ^VADPT is supported by DBIA 10061
"RTN","PSOBPSR1",6,0)
 ;External reference to ^XLFDT is supported by DBIA 10103
"RTN","PSOBPSR1",7,0)
 ;External reference to ^%ZISC is supported by DBIA 10089
"RTN","PSOBPSR1",8,0)
 ;Reference to $$GETBAMT^BPSBUTL supported by DBIA #4719.
"RTN","PSOBPSR1",9,0)
 ;
"RTN","PSOBPSR1",10,0)
EN N CLOSE,CDATE,DFN,DRG,RXIEN,PAG,PCNT,PRTD,PNAM,I,II,J,Y,X,XX,S1,S2,S3,S4,S5,FCNT,CBYI
"RTN","PSOBPSR1",11,0)
 N SP1,SP2,SEQ2,CINFO,RDATE,RSEQ,PSORX,RXINFO,DNAMI,CDIV,CDIVN,OCDIV,RXNUMB,PSORXN,RXE
"RTN","PSOBPSR1",12,0)
 N EXTRALINES,LINES,RXLN
"RTN","PSOBPSR1",13,0)
 U IO K ^TMP("PSOBPSRP",$J),^TMP("PSOBPSRC",$J)
"RTN","PSOBPSR1",14,0)
 S (SP1,SP2)="",$P(SP1,"=",81)="",$P(SP2,"-",81)=""
"RTN","PSOBPSR1",15,0)
 ;
"RTN","PSOBPSR1",16,0)
 ; - Loop through reject dates xref
"RTN","PSOBPSR1",17,0)
 S (RXIEN,PCNT,FCNT,PRTD)=0 K DIRUT
"RTN","PSOBPSR1",18,0)
 S RDATE=PSOSD
"RTN","PSOBPSR1",19,0)
 ;
"RTN","PSOBPSR1",20,0)
DATE ;
"RTN","PSOBPSR1",21,0)
 S RDATE=$O(^PSRX("REJDAT",RDATE)) G NEXT:RDATE=""!(RDATE>PSOED)
"RTN","PSOBPSR1",22,0)
RX ;
"RTN","PSOBPSR1",23,0)
 S RXIEN=$O(^PSRX("REJDAT",RDATE,RXIEN)) G DATE:RXIEN=""
"RTN","PSOBPSR1",24,0)
 S (DFN,DRG,PNAM,DNAM,DNAMI,RXE)=""
"RTN","PSOBPSR1",25,0)
 K RXINFO D GETS^DIQ(52,RXIEN_",",".01;2;6","IE","RXINFO")
"RTN","PSOBPSR1",26,0)
 S PNAM=$G(RXINFO(52,RXIEN_",",2,"E")),DNAM=$G(RXINFO(52,RXIEN_",",6,"E"))
"RTN","PSOBPSR1",27,0)
 S DFN=$G(RXINFO(52,RXIEN_",",2,"I")),DNAMI=$G(RXINFO(52,RXIEN_",",6,"I"))
"RTN","PSOBPSR1",28,0)
 S RXE=$G(RXINFO(52,RXIEN_",",.01,"E"))_" "
"RTN","PSOBPSR1",29,0)
 I '$G(PSOAPT),'$D(PSOPT(DFN)) G RX   ;user selected specific patients
"RTN","PSOBPSR1",30,0)
 I '$G(PSODRUG),'$D(PSODRG(DNAMI)) G RX
"RTN","PSOBPSR1",31,0)
 ;
"RTN","PSOBPSR1",32,0)
 ;look for ignored rejects 
"RTN","PSOBPSR1",33,0)
 S SEQ2=0 F  S SEQ2=$O(^PSRX(RXIEN,"REJ",SEQ2)) Q:'SEQ2&(SEQ2'?1N.N)  D
"RTN","PSOBPSR1",34,0)
 . S (CDATE,CBY,CBYI,CFILL,CDIV)=""
"RTN","PSOBPSR1",35,0)
 . K CLOSE D GETS^DIQ(52.25,SEQ2_","_RXIEN_",","5;10;11;12","IE","CLOSE")
"RTN","PSOBPSR1",36,0)
 . S CDATE=$G(CLOSE(52.25,SEQ2_","_RXIEN_",",10,"I"))
"RTN","PSOBPSR1",37,0)
 . S CFILL=$G(CLOSE(52.25,SEQ2_","_RXIEN_",",5,"I"))
"RTN","PSOBPSR1",38,0)
 . S CDIV=$$RXSITE^PSOBPSUT(RXIEN,CFILL)
"RTN","PSOBPSR1",39,0)
 . I '$G(PSOSIT)&'$D(PSODIV(CDIV)) Q
"RTN","PSOBPSR1",40,0)
 . ; Field #12-CLOSE REASON must be 6=IGNORED - NO RESUBMISSION
"RTN","PSOBPSR1",41,0)
 . ; CDATE = Field #10-CLOSE DATE/TIME. It will only be set if field #9-STATUS equals 1=CLOSED/RESOLVED
"RTN","PSOBPSR1",42,0)
 . ; Compare CDATE against the Beginning (PSOSD) and Ending (PSOED) Reject Dates
"RTN","PSOBPSR1",43,0)
 . I $G(CLOSE(52.25,SEQ2_","_RXIEN_",",12,"I"))=6,(CDATE'<PSOSD&(CDATE'>PSOED)) D
"RTN","PSOBPSR1",44,0)
 . . S CBY=$G(CLOSE(52.25,SEQ2_","_RXIEN_",",11,"E"))
"RTN","PSOBPSR1",45,0)
 . . S CBYI=$G(CLOSE(52.25,SEQ2_","_RXIEN_",",11,"I"))
"RTN","PSOBPSR1",46,0)
 . . I '$G(PSOUSER),'$D(PSOU(CBYI)) Q  ;user selected specific user for "ignored by" column in report
"RTN","PSOBPSR1",47,0)
 . . D SET
"RTN","PSOBPSR1",48,0)
 G RX
"RTN","PSOBPSR1",49,0)
 ;
"RTN","PSOBPSR1",50,0)
NEXT ; - If not Sorting (already printed), SKIP, otherwise, print the report
"RTN","PSOBPSR1",51,0)
 I '$D(^TMP("PSOBPSRP")) G NDTP
"RTN","PSOBPSR1",52,0)
 ;
"RTN","PSOBPSR1",53,0)
 I $E(IOST)="C" S EXTRALINES=3
"RTN","PSOBPSR1",54,0)
 E  S EXTRALINES=8
"RTN","PSOBPSR1",55,0)
 ;
"RTN","PSOBPSR1",56,0)
 S (S1,S2,S3,DFN,RSEQ,PSORX,PSORXN,RXNUMB,CDIV,OCDIV,CDIVN)=""
"RTN","PSOBPSR1",57,0)
 F  S CDIV=$O(^TMP("PSOBPSRP",$J,CDIV)) Q:CDIV=""  D  Q:$D(DIRUT)
"RTN","PSOBPSR1",58,0)
 . F  S S1=$O(^TMP("PSOBPSRP",$J,CDIV,S1)) Q:S1=""  D  Q:$D(DIRUT)
"RTN","PSOBPSR1",59,0)
 . . F  S S2=$O(^TMP("PSOBPSRP",$J,CDIV,S1,S2)) Q:S2=""  D  Q:$D(DIRUT)
"RTN","PSOBPSR1",60,0)
 . . . F  S S3=$O(^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3)) Q:S3=""  D  Q:$D(DIRUT)
"RTN","PSOBPSR1",61,0)
 . . . . F  S DFN=$O(^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN)) Q:DFN=""  D  Q:$D(DIRUT)
"RTN","PSOBPSR1",62,0)
 . . . . . F  S PSORXN=$O(^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN)) Q:PSORXN=""  D  Q:$D(DIRUT)
"RTN","PSOBPSR1",63,0)
 . . . . . . F  S RSEQ=$O(^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ)) Q:RSEQ=""  D  Q:$D(DIRUT)
"RTN","PSOBPSR1",64,0)
 . . . . . . . S (RXNUMB,PSORX)="",RXNUMB=$E(PSORXN,1,$L(PSORXN)-1),PSORX=$O(^PSRX("B",RXNUMB,PSORX))
"RTN","PSOBPSR1",65,0)
 . . . . . . . S LINES=$$COMPILE(DFN,PSORX)
"RTN","PSOBPSR1",66,0)
 . . . . . . . I $Y>(IOSL-(LINES+EXTRALINES)) D HDR I $D(DIRUT) Q
"RTN","PSOBPSR1",67,0)
 . . . . . . . D PRINT(DFN,PSORX)
"RTN","PSOBPSR1",68,0)
 . . . I '$D(DIRUT),S2'=0,$O(^TMP("PSOBPSRP",$J,CDIV,S1,S2))'="" W SP2
"RTN","PSOBPSR1",69,0)
 . . ; Write SP1 after the first SORT field selected (Patient,Drug,User)
"RTN","PSOBPSR1",70,0)
 . . I '$D(DIRUT),$O(^TMP("PSOBPSRP",$J,CDIV,S1))'="" W !,SP1
"RTN","PSOBPSR1",71,0)
 G CLOSE:$D(DIRUT)
"RTN","PSOBPSR1",72,0)
 ;
"RTN","PSOBPSR1",73,0)
NDTP I 'PRTD D HDR W !!?18,"**********   NO DATA TO PRINT   **********"
"RTN","PSOBPSR1",74,0)
 I $G(PCNT) D
"RTN","PSOBPSR1",75,0)
 . W !,SP1
"RTN","PSOBPSR1",76,0)
 . W !,"Total: ",PCNT," patient",$S(PCNT>1:"s",1:"")
"RTN","PSOBPSR1",77,0)
 . W " and ",FCNT," prescription fill",$S(FCNT>1:"s",1:""),"."
"RTN","PSOBPSR1",78,0)
 ;
"RTN","PSOBPSR1",79,0)
CLOSE ;
"RTN","PSOBPSR1",80,0)
 D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","PSOBPSR1",81,0)
END K ^TMP("PSOBPSRP",$J),^TMP("PSOBPSRC",$J)
"RTN","PSOBPSR1",82,0)
 K PSOAPT,PSODRUG,PSOUSER,PSOU,PSODRG,PSOPT,PSOSRT,PSOED,PSOSD,PSODIV,PSOSIT
"RTN","PSOBPSR1",83,0)
 Q
"RTN","PSOBPSR1",84,0)
 ;
"RTN","PSOBPSR1",85,0)
SET ;
"RTN","PSOBPSR1",86,0)
 S (S1,S2,S3)=0
"RTN","PSOBPSR1",87,0)
 F I=1:1:$L(PSOSRT,",") D
"RTN","PSOBPSR1",88,0)
 . S Y=$P(PSOSRT,",",I)
"RTN","PSOBPSR1",89,0)
 . S @("S"_I)=$S(Y=1:PNAM,Y=2:DNAM,Y=3:CBY)
"RTN","PSOBPSR1",90,0)
 S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,RXE,SEQ2)=""
"RTN","PSOBPSR1",91,0)
 Q
"RTN","PSOBPSR1",92,0)
 ;
"RTN","PSOBPSR1",93,0)
COMPILE(DFN,RXIEN) ;
"RTN","PSOBPSR1",94,0)
 ; Gather data for report and determine the number of lines for the Rx 
"RTN","PSOBPSR1",95,0)
 ;Input: DFN-Patient
"RTN","PSOBPSR1",96,0)
 ;       RXIEN=Prescription IEN
"RTN","PSOBPSR1",97,0)
 ;Output: LINE=number of lines for Rx
"RTN","PSOBPSR1",98,0)
 ;
"RTN","PSOBPSR1",99,0)
 N BILLED,CBY,CCOM,CDAT,CFILL,CINFO,COB,CREAS,DNAM,II,J,K,LINE,PMES,PNAM,PSSN,RXNUM,STR,X,XX
"RTN","PSOBPSR1",100,0)
 S (BILLED,CBY,CCOM,CDAT,CINFO,COB,CREAS,DNAM,PMES,PNAM,PSSN,RXNUM)=""
"RTN","PSOBPSR1",101,0)
 ;
"RTN","PSOBPSR1",102,0)
 D DEM^VADPT S PSSN=$P($G(VADM(2)),"^",2) K VADM
"RTN","PSOBPSR1",103,0)
 K RXINFO D GETS^DIQ(52,RXIEN_",",".01;2;6","EI","RXINFO")
"RTN","PSOBPSR1",104,0)
 S PNAM=RXINFO(52,RXIEN_",",2,"E"),DNAM=RXINFO(52,RXIEN_",",6,"E")
"RTN","PSOBPSR1",105,0)
 D GETS^DIQ(52.25,RSEQ_","_RXIEN_",",".01;2;5;10;11;12;13;17;20;27","IE","CINFO")
"RTN","PSOBPSR1",106,0)
 S:$D(RXINFO(52,RXIEN_",",.01,"E")) RXNUM=RXINFO(52,RXIEN_",",.01,"E")
"RTN","PSOBPSR1",107,0)
 S:$D(CINFO(52.25,RSEQ_","_RXIEN_",",10,"I")) CDAT=CINFO(52.25,RSEQ_","_RXIEN_",",10,"I")
"RTN","PSOBPSR1",108,0)
 S CDAT=$$DT(CDAT)
"RTN","PSOBPSR1",109,0)
 S:$D(CINFO(52.25,RSEQ_","_RXIEN_",",12,"I")) CREAS=CINFO(52.25,RSEQ_","_RXIEN_",",12,"E")
"RTN","PSOBPSR1",110,0)
 S:$D(CINFO(52.25,RSEQ_","_RXIEN_",",11,"E")) CBY=CINFO(52.25,RSEQ_","_RXIEN_",",11,"E")
"RTN","PSOBPSR1",111,0)
 S:$D(CINFO(52.25,RSEQ_","_RXIEN_",",2,"E")) PMES=CINFO(52.25,RSEQ_","_RXIEN_",",2,"E")
"RTN","PSOBPSR1",112,0)
 D TEXT(.PMES,PMES,65)
"RTN","PSOBPSR1",113,0)
 S:$D(CINFO(52.25,RSEQ_","_RXIEN_",",13,"E")) CCOM=CINFO(52.25,RSEQ_","_RXIEN_",",13,"E")
"RTN","PSOBPSR1",114,0)
 D TEXT(.CCOM,CCOM,65)
"RTN","PSOBPSR1",115,0)
 S:$D(CINFO(52.25,RSEQ_","_RXIEN_",",5,"I")) CFILL=CINFO(52.25,RSEQ_","_RXIEN_",",5,"I")
"RTN","PSOBPSR1",116,0)
 S COB=$G(CINFO(52.25,RSEQ_","_RXIEN_",",27,"I"))
"RTN","PSOBPSR1",117,0)
 ;
"RTN","PSOBPSR1",118,0)
 ; Get Insurance Name and Reject Code(s)
"RTN","PSOBPSR1",119,0)
 N I,OTHREJS,PSOINS,RCARR,RCEXPL,RCEXPLS,RCIEN,RCIENS,REJCD,REJCDS
"RTN","PSOBPSR1",120,0)
 S (OTHREJS,PSOINS,RCARR,RCEXPL,RCEXPLS,RCIEN,RCIENS,REJCD,REJCDS)=""
"RTN","PSOBPSR1",121,0)
 ;
"RTN","PSOBPSR1",122,0)
 S PSOINS=$G(CINFO(52.25,RSEQ_","_RXIEN_",",20,"I"))
"RTN","PSOBPSR1",123,0)
 S REJCD=$G(CINFO(52.25,RSEQ_","_RXIEN_",",.01,"I"))
"RTN","PSOBPSR1",124,0)
 I REJCD'="" D
"RTN","PSOBPSR1",125,0)
 . ; get Reject Code Explanation from File #9002313.93
"RTN","PSOBPSR1",126,0)
 . S RCIEN=$O(^BPSF(9002313.93,"B",REJCD,""))
"RTN","PSOBPSR1",127,0)
 . S RCEXPL=$$GET1^DIQ(9002313.93,RCIEN_",",.02,"E")
"RTN","PSOBPSR1",128,0)
 . ; create a rejects array RCARR
"RTN","PSOBPSR1",129,0)
 . S RCARR(0)=REJCD_":"_RCEXPL
"RTN","PSOBPSR1",130,0)
 . Q
"RTN","PSOBPSR1",131,0)
 ;
"RTN","PSOBPSR1",132,0)
 S BILLED=$$GETBAMT^BPSBUTL(RXIEN,$G(CFILL),COB)  ; DBIA #4719
"RTN","PSOBPSR1",133,0)
 ;
"RTN","PSOBPSR1",134,0)
 S LINE=1
"RTN","PSOBPSR1",135,0)
 S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)=RXNUM_"/"_CFILL_U_$E(DNAM,1,21)_U_$E(PNAM,1,13)_"("_$P(PSSN,"-",3)_")"_U_CDAT_U_$E(CBY,1,14)
"RTN","PSOBPSR1",136,0)
 S LINE=LINE+1
"RTN","PSOBPSR1",137,0)
 S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)="Insurance:  "_PSOINS
"RTN","PSOBPSR1",138,0)
 S LINE=LINE+1
"RTN","PSOBPSR1",139,0)
 ;
"RTN","PSOBPSR1",140,0)
 S II="" F  S II=$O(RCARR(II)) Q:II=""  D
"RTN","PSOBPSR1",141,0)
 . I II=0 S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)="Reject:     "_$G(RCARR(II))
"RTN","PSOBPSR1",142,0)
 . E  S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)="            "_$E($G(RCARR(II)),1,69)
"RTN","PSOBPSR1",143,0)
 . S LINE=LINE+1
"RTN","PSOBPSR1",144,0)
 ;
"RTN","PSOBPSR1",145,0)
 S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)="Billed Amount: "_"$"_BILLED
"RTN","PSOBPSR1",146,0)
 S LINE=LINE+1
"RTN","PSOBPSR1",147,0)
 ;
"RTN","PSOBPSR1",148,0)
 S II="" F  S II=$O(CCOM(II)) Q:II=""  D
"RTN","PSOBPSR1",149,0)
 . I II=1 S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)="     Comments: "_$G(CCOM(II))
"RTN","PSOBPSR1",150,0)
 . E  S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)="               "_$G(CCOM(II))
"RTN","PSOBPSR1",151,0)
 . S LINE=LINE+1
"RTN","PSOBPSR1",152,0)
 ;
"RTN","PSOBPSR1",153,0)
 S II="" F  S II=$O(PMES(II)) Q:II=""  D
"RTN","PSOBPSR1",154,0)
 . I II=1 S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)="Payer Message: "_$G(PMES(II))
"RTN","PSOBPSR1",155,0)
 . E  S ^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,LINE)="               "_$G(PMES(II))
"RTN","PSOBPSR1",156,0)
 . S LINE=LINE+1
"RTN","PSOBPSR1",157,0)
 ;
"RTN","PSOBPSR1",158,0)
 Q LINE
"RTN","PSOBPSR1",159,0)
 ;
"RTN","PSOBPSR1",160,0)
PRINT(DFN,RXIEN) ; - Print
"RTN","PSOBPSR1",161,0)
 ;Input: DFN-Patient
"RTN","PSOBPSR1",162,0)
 ;       RXIEN=Prescription IEN
"RTN","PSOBPSR1",163,0)
 ;
"RTN","PSOBPSR1",164,0)
 N RXLN,RXREC
"RTN","PSOBPSR1",165,0)
 ;
"RTN","PSOBPSR1",166,0)
 I OCDIV'=CDIV!(OCDIV="") D HDR I $D(DIRUT) Q
"RTN","PSOBPSR1",167,0)
 S OCDIV=CDIV
"RTN","PSOBPSR1",168,0)
 ;
"RTN","PSOBPSR1",169,0)
 S RXLN="" F  S RXLN=$O(^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,RXLN)) Q:RXLN=""  D
"RTN","PSOBPSR1",170,0)
 . S RXREC=^TMP("PSOBPSRP",$J,CDIV,S1,S2,S3,DFN,PSORXN,RSEQ,RXLN)
"RTN","PSOBPSR1",171,0)
 . ; Write Rx Info. 
"RTN","PSOBPSR1",172,0)
 . I RXLN=1 W !,$P(RXREC,U),?15,$P(RXREC,U,2),?37,$P(RXREC,U,3),?57,$P(RXREC,U,4),?66,$P(RXREC,U,5)
"RTN","PSOBPSR1",173,0)
 . ; Write Insurance Name, Rejects, Billed Amount, Comments and Payer Message.
"RTN","PSOBPSR1",174,0)
 . E  W !,RXREC
"RTN","PSOBPSR1",175,0)
 W !
"RTN","PSOBPSR1",176,0)
 ;
"RTN","PSOBPSR1",177,0)
 S:'$D(^TMP("PSOBPSRC",$J,DFN)) PCNT=PCNT+1 S ^TMP("PSOBPSRC",$J,DFN)=""
"RTN","PSOBPSR1",178,0)
 ;
"RTN","PSOBPSR1",179,0)
 S PRTD=1,FCNT=FCNT+1
"RTN","PSOBPSR1",180,0)
 Q
"RTN","PSOBPSR1",181,0)
 ;
"RTN","PSOBPSR1",182,0)
TEXT(TEXT,STR,L) ; Formats STR into TEXT array, lines lenght = L
"RTN","PSOBPSR1",183,0)
 N J,WORD,K S K=+$O(TEXT(""),-1) S:'K K=1
"RTN","PSOBPSR1",184,0)
 F J=1:1:$L(STR," ") D
"RTN","PSOBPSR1",185,0)
 . S WORD=$P(STR," ",J) I ($L($G(TEXT(K))_WORD))>L S K=K+1
"RTN","PSOBPSR1",186,0)
 . S TEXT(K)=$G(TEXT(K))_WORD_" "
"RTN","PSOBPSR1",187,0)
 Q
"RTN","PSOBPSR1",188,0)
 ;
"RTN","PSOBPSR1",189,0)
HDR ; - Prints the Header
"RTN","PSOBPSR1",190,0)
 N X,DIR,CDIVN S PAG=$G(PAG)+1
"RTN","PSOBPSR1",191,0)
 S CDIVN=$$GET1^DIQ(59,$G(CDIV)_",",".01")
"RTN","PSOBPSR1",192,0)
 I PAG>1,$E(IOST)="C" D  Q:$D(DIRUT)
"RTN","PSOBPSR1",193,0)
 . S DIR(0)="E",DIR("A")=" Press ENTER to Continue or ^ to Exit" D ^DIR
"RTN","PSOBPSR1",194,0)
 ;
"RTN","PSOBPSR1",195,0)
 W @IOF,"Ignored Rejects Report",?71,"Page: ",$J(PAG,3)
"RTN","PSOBPSR1",196,0)
 W !,"Sorted by",$$SRT(PSOSRT),?48,"Division: ",CDIVN
"RTN","PSOBPSR1",197,0)
 W !,"Date Range: "_$$DT(PSOSD+1\1)_" - "_$$DT(PSOED\1)
"RTN","PSOBPSR1",198,0)
 W ?48,"Run Date: "_$$FMTE^XLFDT($$NOW^XLFDT())
"RTN","PSOBPSR1",199,0)
 I PAG=1 D
"RTN","PSOBPSR1",200,0)
 . W !!,?19,"Note: Billed amount is what was billed and"
"RTN","PSOBPSR1",201,0)
 . W !,?17,"cannot be used to determine potential revenue."
"RTN","PSOBPSR1",202,0)
 S X="",$P(X,"-",81)="" W !,X
"RTN","PSOBPSR1",203,0)
 W !,"RX#/FILL",?15,"DRUG",?37,"PATIENT",?56,"IGNORE DT",?66,"IGNORED BY"
"RTN","PSOBPSR1",204,0)
 W !,"--------------",?15,"---------------------",?37,"------------------",?56,"---------",?66,"--------------"
"RTN","PSOBPSR1",205,0)
 Q
"RTN","PSOBPSR1",206,0)
 ;
"RTN","PSOBPSR1",207,0)
SRT(ST) ; - Convert the "2,1" (example) to "DRUG,PATIENT"
"RTN","PSOBPSR1",208,0)
 ;Input: ST-String with the Sorting fields by number
"RTN","PSOBPSR1",209,0)
 ;Output: ST-String with the Sorting fields by name
"RTN","PSOBPSR1",210,0)
 N I,X,STR,FLD
"RTN","PSOBPSR1",211,0)
 S STR="PATIENT^DRUG^USER"
"RTN","PSOBPSR1",212,0)
 F I=1:1:$L(ST,",") D
"RTN","PSOBPSR1",213,0)
 . S FLD=+$P(ST,",",I),X=$P(STR,"^",FLD)
"RTN","PSOBPSR1",214,0)
 . S $P(ST,",",I)=" "_X
"RTN","PSOBPSR1",215,0)
 Q ST
"RTN","PSOBPSR1",216,0)
 ;
"RTN","PSOBPSR1",217,0)
DT(DT) ; - Convert FM Date to MM/DD/YYYY
"RTN","PSOBPSR1",218,0)
 I 'DT Q ""
"RTN","PSOBPSR1",219,0)
 I '(DT#10000) Q (1700+$E(DT,1,3))
"RTN","PSOBPSR1",220,0)
 I '(DT#100) Q $E(DT,4,5)_"/"_(1700+$E(DT,1,3))
"RTN","PSOBPSR1",221,0)
 Q $E(DT,4,5)_"/"_$E(DT,6,7)_"/"_$E((1700+$E(DT,1,3)),3,4)
"RTN","PSOBPSR1",222,0)
 ;
"RTN","PSOBPSSL")
0^3^B94336071
"RTN","PSOBPSSL",1,0)
PSOBPSSL ;ALB/EWL - ePharmacy Site Parameters Definition ;03/20/2013
"RTN","PSOBPSSL",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**421,427,482,512**;DEC 1997;Build 44
"RTN","PSOBPSSL",3,0)
 ;
"RTN","PSOBPSSL",4,0)
 ; This routine is called from PSOBPSSP from the DP - Display Site Parameters 
"RTN","PSOBPSSL",5,0)
 ; action item.  That is the only way this routine should be entered.
"RTN","PSOBPSSL",6,0)
 ;
"RTN","PSOBPSSL",7,0)
 ; ICR Calls 
"RTN","PSOBPSSL",8,0)
 ;   ICR  Type       Description
"RTN","PSOBPSSL",9,0)
 ; -----  ---------  ---------------------------
"RTN","PSOBPSSL",10,0)
 ; n/a
"RTN","PSOBPSSL",11,0)
 ;
"RTN","PSOBPSSL",12,0)
 ; Other Calls
"RTN","PSOBPSSL",13,0)
 ; ----------------
"RTN","PSOBPSSL",14,0)
 ; DIV^PSOBPSSP
"RTN","PSOBPSSL",15,0)
 Q
"RTN","PSOBPSSL",16,0)
EN ; Entry point for PSO EPHARM PARAMS LIST List Manager screen
"RTN","PSOBPSSL",17,0)
 ;
"RTN","PSOBPSSL",18,0)
 ; PSODIV is the IEN of the initially selected division. Set by ^PSOLSET.
"RTN","PSOBPSSL",19,0)
 ;     Normally not used, only used if this routine is called directly.
"RTN","PSOBPSSL",20,0)
 ; PSODIVS is an array which will contain the divisions to be listed
"RTN","PSOBPSSL",21,0)
 ; PSODIVS will be formatted as follows:
"RTN","PSOBPSSL",22,0)
 ;     The root - PSODIVS will either be a null or contain "ALL"
"RTN","PSOBPSSL",23,0)
 ;     PSODIVS(#) - the # is the ien in file 52.86
"RTN","PSOBPSSL",24,0)
 ;          PSODIVS(#) - value --> IEN^SiteName - IEN from file 52.86
"RTN","PSOBPSSL",25,0)
 ;
"RTN","PSOBPSSL",26,0)
 N PSODIV,PSODIVS
"RTN","PSOBPSSL",27,0)
 ;
"RTN","PSOBPSSL",28,0)
 ; Launch the list manager screen
"RTN","PSOBPSSL",29,0)
 D EN^VALM("PSO EPHARM SITE PARAMS LIST")
"RTN","PSOBPSSL",30,0)
 G EXIT
"RTN","PSOBPSSL",31,0)
 ;
"RTN","PSOBPSSL",32,0)
HDR ; -- header code -- PSO EPHARM SITE PARAMS LIST
"RTN","PSOBPSSL",33,0)
 S VALMHDR(1)=$$SITES(.PSODIVS)
"RTN","PSOBPSSL",34,0)
 S VALMHDR(1)="Pharmacy Division"_$S(VALMHDR(1)[", ":"s: ",1:": ")_VALMHDR(1)
"RTN","PSOBPSSL",35,0)
 I $L(VALMHDR(1))>80 S $E(VALMHDR(1),78,999)="..."
"RTN","PSOBPSSL",36,0)
 S VALMHDR(2)="Site parameter settings for one or more Pharmacy Divisions"
"RTN","PSOBPSSL",37,0)
 Q
"RTN","PSOBPSSL",38,0)
 ;
"RTN","PSOBPSSL",39,0)
INIT ; -- init variables and list array -- PSO EPHARM SITE PARAMS LIST
"RTN","PSOBPSSL",40,0)
 ; PSODIVS is an array which will contain the divisions to be listed (see EN tag)
"RTN","PSOBPSSL",41,0)
 ; LINECT - keeps track of the line count in the display list
"RTN","PSOBPSSL",42,0)
 ; IEN - IEN of file 52.86 (Site Parameters)
"RTN","PSOBPSSL",43,0)
 ; LMARRAY - List Manager Array Name
"RTN","PSOBPSSL",44,0)
 N LMARRAY,IEN,LINECT
"RTN","PSOBPSSL",45,0)
 ;
"RTN","PSOBPSSL",46,0)
 ; Initialize the Line Counter
"RTN","PSOBPSSL",47,0)
 S LINECT=0
"RTN","PSOBPSSL",48,0)
 ;
"RTN","PSOBPSSL",49,0)
 ; Get list of sites to display
"RTN","PSOBPSSL",50,0)
 W ! D SITEPICK(.PSODIVS)
"RTN","PSOBPSSL",51,0)
 ;
"RTN","PSOBPSSL",52,0)
 ; Quit if no sites selected
"RTN","PSOBPSSL",53,0)
 I ('$D(PSODIVS))!($G(PSODIVS)="^") S VALMQUIT=1 Q
"RTN","PSOBPSSL",54,0)
 D CLEAN^VALM10
"RTN","PSOBPSSL",55,0)
 ;
"RTN","PSOBPSSL",56,0)
 ; This is the List Manager Array
"RTN","PSOBPSSL",57,0)
 S LMARRAY=$NA(^TMP("PSOBPSSL",$J)) K @LMARRAY
"RTN","PSOBPSSL",58,0)
 ;
"RTN","PSOBPSSL",59,0)
 ; Process if one or more but not "ALL" sites have been selected
"RTN","PSOBPSSL",60,0)
 I $G(PSODIVS)'="ALL" D
"RTN","PSOBPSSL",61,0)
 . S IEN=0 F  S IEN=$O(PSODIVS(IEN)) Q:'IEN  D GETDATA(IEN,LMARRAY,.LINECT)
"RTN","PSOBPSSL",62,0)
 ;
"RTN","PSOBPSSL",63,0)
 ; Process if "ALL" sites have been selected
"RTN","PSOBPSSL",64,0)
 I $G(PSODIVS)="ALL" D
"RTN","PSOBPSSL",65,0)
 . S IEN=0 F  S IEN=$O(^PS(52.86,IEN)) Q:'IEN  D GETDATA(IEN,LMARRAY,.LINECT)
"RTN","PSOBPSSL",66,0)
 S VALMCNT=LINECT
"RTN","PSOBPSSL",67,0)
 Q
"RTN","PSOBPSSL",68,0)
HELP ; -- help code -- PSO EPHARM MULTI SITE PARAMS
"RTN","PSOBPSSL",69,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PSOBPSSL",70,0)
 Q
"RTN","PSOBPSSL",71,0)
 ;
"RTN","PSOBPSSL",72,0)
EXPND ; -- expand code
"RTN","PSOBPSSL",73,0)
 Q
"RTN","PSOBPSSL",74,0)
 ;
"RTN","PSOBPSSL",75,0)
EXIT ; -- exit code
"RTN","PSOBPSSL",76,0)
 K PSODIVS,^TMP("PSOBPSSL",$J)
"RTN","PSOBPSSL",77,0)
 Q
"RTN","PSOBPSSL",78,0)
 ;
"RTN","PSOBPSSL",79,0)
SITEPICK(DIVS) ; Get the list of sites to display
"RTN","PSOBPSSL",80,0)
 ; Cloned from SEL^PSOREJU1 with changes for Site Parameter List
"RTN","PSOBPSSL",81,0)
 ;
"RTN","PSOBPSSL",82,0)
 ; Input Parameter
"RTN","PSOBPSSL",83,0)
 ; DIVS - is passed by reference and will hold the set of divisions to process
"RTN","PSOBPSSL",84,0)
 ;
"RTN","PSOBPSSL",85,0)
 ; Local Variables
"RTN","PSOBPSSL",86,0)
 ; QT - used to control when to exit 
"RTN","PSOBPSSL",87,0)
 N QT
"RTN","PSOBPSSL",88,0)
 ;
"RTN","PSOBPSSL",89,0)
 ; Variables used by ^DIC
"RTN","PSOBPSSL",90,0)
 N DIC,DTOUT,DUOUT,Y,X
"RTN","PSOBPSSL",91,0)
 ;
"RTN","PSOBPSSL",92,0)
 ; Instructional message
"RTN","PSOBPSSL",93,0)
 W !!,"You may select a single or multiple Divisions,"
"RTN","PSOBPSSL",94,0)
 W !,"or enter ^ALL to select all Divisions.",!
"RTN","PSOBPSSL",95,0)
 ;
"RTN","PSOBPSSL",96,0)
 ; Select the divisions to display from 52.86
"RTN","PSOBPSSL",97,0)
 K DIVS S DIC="^PS(52.86,",DIC(0)="QEZAM"
"RTN","PSOBPSSL",98,0)
 S DIC("A")="Select a Division to display: "
"RTN","PSOBPSSL",99,0)
 F  D ^DIC Q:X=""  D  Q:$G(QT)
"RTN","PSOBPSSL",100,0)
 . I $$UP^XLFSTR(X)="^ALL" K DIVS S DIVS="ALL",QT=1 Q
"RTN","PSOBPSSL",101,0)
 . I $G(DTOUT)!$G(DUOUT) K DIVS S DIVS="^",QT=1 Q
"RTN","PSOBPSSL",102,0)
 . W "   ",$P(Y,"^",2),$S($D(DIVS(+Y)):"       (already selected)",1:"")
"RTN","PSOBPSSL",103,0)
 . W ! S DIVS(+Y)="",DIC("A")="ANOTHER ONE: " K DIC("B")
"RTN","PSOBPSSL",104,0)
 Q
"RTN","PSOBPSSL",105,0)
 ;
"RTN","PSOBPSSL",106,0)
SITES(DIVS) ; - Returns the list of selected Pharmacy Divisions
"RTN","PSOBPSSL",107,0)
 N SITE,SITES,NAME,PSITE S SITES=""
"RTN","PSOBPSSL",108,0)
 ; DIVS - array identifying the sites being processed.
"RTN","PSOBPSSL",109,0)
 ; SITE - individual PS site numbers IN FILE 52.86
"RTN","PSOBPSSL",110,0)
 ; NAME - division name from file 4
"RTN","PSOBPSSL",111,0)
 ; SITES - comma delimited site names
"RTN","PSOBPSSL",112,0)
 ;
"RTN","PSOBPSSL",113,0)
 ; Create a string of ^ delimited division names.
"RTN","PSOBPSSL",114,0)
 I '$D(DIVS) Q ""
"RTN","PSOBPSSL",115,0)
 I $G(DIVS)="ALL" Q "ALL"
"RTN","PSOBPSSL",116,0)
 ;
"RTN","PSOBPSSL",117,0)
 ; Create a string of ^ delimited division names.
"RTN","PSOBPSSL",118,0)
 S SITE=0,SITES="" F  S SITE=$O(DIVS(SITE)) Q:'SITE  D
"RTN","PSOBPSSL",119,0)
 . S NAME=$$GET1^DIQ(52.86,SITE_",",.01,"E")
"RTN","PSOBPSSL",120,0)
 . S DIVS(SITE)=SITE_U_NAME
"RTN","PSOBPSSL",121,0)
 . S SITES=SITES_$S(SITES]"":", ",1:"")_NAME
"RTN","PSOBPSSL",122,0)
 Q SITES
"RTN","PSOBPSSL",123,0)
 ;
"RTN","PSOBPSSL",124,0)
GETDATA(IEN,DATA,NXTLINE) ; Adds and formats data from one Pharmacy Division
"RTN","PSOBPSSL",125,0)
 ; This may be called multiple times when displaying multiple divisions
"RTN","PSOBPSSL",126,0)
 ; This is called by PSOBPSSP
"RTN","PSOBPSSL",127,0)
 ;
"RTN","PSOBPSSL",128,0)
 ; INPUT PARAMETERS
"RTN","PSOBPSSL",129,0)
 ; IEN - Site IEN from 52.86
"RTN","PSOBPSSL",130,0)
 ; DATA - List Manager Array name
"RTN","PSOBPSSL",131,0)
 ; NXTLINE - output parameter - returns line counter/number of lines in list
"RTN","PSOBPSSL",132,0)
 ;
"RTN","PSOBPSSL",133,0)
 ; check parameters
"RTN","PSOBPSSL",134,0)
 I '$G(IEN) Q 0 ; No parent division passed
"RTN","PSOBPSSL",135,0)
 I $L($G(DATA))<1 Q 0 ; No array passed to the routine
"RTN","PSOBPSSL",136,0)
 I '$D(NXTLINE) Q 0 ; No line number passed must be >= 0
"RTN","PSOBPSSL",137,0)
 ;
"RTN","PSOBPSSL",138,0)
 ; LOCAL VARIABLES
"RTN","PSOBPSSL",139,0)
 ; PSOI - IEN/LOOP CONTROL while looping through array
"RTN","PSOBPSSL",140,0)
 ; GETS - Temp array for GETS^DIQ results
"RTN","PSOBPSSL",141,0)
 ; WLSTDAYS - Days to remain on worklist
"RTN","PSOBPSSL",142,0)
 ; AUTOSEND - Auto send - yes/no
"RTN","PSOBPSSL",143,0)
 ; REJEXPL - Reject code explanations text
"RTN","PSOBPSSL",144,0)
 ; THRESHLD - Threshold amount for fill prevention reject codes
"RTN","PSOBPSSL",145,0)
 ; GETS - array for output from LIST^DIC and processed codes
"RTN","PSOBPSSL",146,0)
 ; IORVON & IORVOFF are Kernel Video Variables used for List Manager formatting
"RTN","PSOBPSSL",147,0)
 ; PSOIGNORE - Ignore Threshold value
"RTN","PSOBPSSL",148,0)
 ;
"RTN","PSOBPSSL",149,0)
 N PSOI,GETS,WLSTDAYS,PAUSE,CODE,AUTOSEND,REJEXPL,THRESHLD,SITE,PSOIGNORE
"RTN","PSOBPSSL",150,0)
 ;
"RTN","PSOBPSSL",151,0)
 ; Get the high level site parameters
"RTN","PSOBPSSL",152,0)
 S SITE=$$GET1^DIQ(52.86,IEN_",",.01)
"RTN","PSOBPSSL",153,0)
 ; Site header
"RTN","PSOBPSSL",154,0)
 I NXTLINE'=0 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)=""
"RTN","PSOBPSSL",155,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="Pharmacy Division: "_$G(SITE)
"RTN","PSOBPSSL",156,0)
 D CNTRL^VALM10(NXTLINE,1,80,IORVON,IORVOFF)
"RTN","PSOBPSSL",157,0)
 ;
"RTN","PSOBPSSL",158,0)
 ; Display General Parameters
"RTN","PSOBPSSL",159,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="  General Parameters"
"RTN","PSOBPSSL",160,0)
 D CNTRL^VALM10(NXTLINE,3,18,IOUON,IOUOFF)
"RTN","PSOBPSSL",161,0)
 ;
"RTN","PSOBPSSL",162,0)
 ; Get the site worklist days
"RTN","PSOBPSSL",163,0)
 S WLSTDAYS=$$GET1^DIQ(52.86,IEN_",",4)
"RTN","PSOBPSSL",164,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="  Reject Worklist Days: "_$G(WLSTDAYS)
"RTN","PSOBPSSL",165,0)
 ;
"RTN","PSOBPSSL",166,0)
 ; Get the ePharmacy Response Pause
"RTN","PSOBPSSL",167,0)
 S PAUSE=$$GET1^DIQ(52.86,IEN_",",6)
"RTN","PSOBPSSL",168,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="  ePharmacy Response Pause: "_$G(PAUSE)
"RTN","PSOBPSSL",169,0)
 ;
"RTN","PSOBPSSL",170,0)
 ; Get the Ignore Threshold
"RTN","PSOBPSSL",171,0)
 S PSOIGNORE=$$GET1^DIQ(52.86,IEN_",",7)
"RTN","PSOBPSSL",172,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="  Ignore Threshold: "_$G(PSOIGNORE)
"RTN","PSOBPSSL",173,0)
 ;
"RTN","PSOBPSSL",174,0)
 ; Process the site transfer reject codes
"RTN","PSOBPSSL",175,0)
 ;
"RTN","PSOBPSSL",176,0)
 ; create header for transfer reject code section
"RTN","PSOBPSSL",177,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)=""
"RTN","PSOBPSSL",178,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="  Transfer Reject Codes"
"RTN","PSOBPSSL",179,0)
 D CNTRL^VALM10(NXTLINE,3,21,IOUON,IOUOFF)
"RTN","PSOBPSSL",180,0)
 ;
"RTN","PSOBPSSL",181,0)
 ; Get the transfer reject codes
"RTN","PSOBPSSL",182,0)
 K GETS D LIST^DIC(52.8651,","_IEN_",","@;.01IE;1",,,,,,,,"GETS")
"RTN","PSOBPSSL",183,0)
 ;
"RTN","PSOBPSSL",184,0)
 ; create sub-header for transfer reject code section
"RTN","PSOBPSSL",185,0)
 I $D(GETS) D
"RTN","PSOBPSSL",186,0)
 . S NXTLINE=NXTLINE+1
"RTN","PSOBPSSL",187,0)
 . S @DATA@(NXTLINE,0)="  Code  Description                                                   Auto-Send"
"RTN","PSOBPSSL",188,0)
 . S NXTLINE=NXTLINE+1
"RTN","PSOBPSSL",189,0)
 . S @DATA@(NXTLINE,0)="  ----  ------------------------------------------------------------  ---------"
"RTN","PSOBPSSL",190,0)
 . ;
"RTN","PSOBPSSL",191,0)
 . ; Sort the output by external code
"RTN","PSOBPSSL",192,0)
 . S PSOI=0
"RTN","PSOBPSSL",193,0)
 . F  S PSOI=$O(GETS("DILIST","ID",PSOI)) Q:PSOI=""  D
"RTN","PSOBPSSL",194,0)
 . . ; Parse output from LIST^DIC and add to local array GETS as follows:
"RTN","PSOBPSSL",195,0)
 . . ;      GETS({external code})={external AUTO SEND}^{internal code}
"RTN","PSOBPSSL",196,0)
 . . S GETS(" "_GETS("DILIST","ID",PSOI,.01,"E"))=GETS("DILIST","ID",PSOI,1)_U_GETS("DILIST","ID",PSOI,.01,"I")
"RTN","PSOBPSSL",197,0)
 . . Q
"RTN","PSOBPSSL",198,0)
 . ; Kill the part of GETS no longer needed - from LIST^DIC
"RTN","PSOBPSSL",199,0)
 . K GETS("DILIST")
"RTN","PSOBPSSL",200,0)
 . ;
"RTN","PSOBPSSL",201,0)
 . ; process the transfer reject code body
"RTN","PSOBPSSL",202,0)
 . S PSOI="" F  S PSOI=$O(GETS(PSOI)) Q:PSOI=""  D
"RTN","PSOBPSSL",203,0)
 . . S CODE=PSOI,AUTOSEND=$P(GETS(PSOI),U,1)
"RTN","PSOBPSSL",204,0)
 . . ; Get reject explanation
"RTN","PSOBPSSL",205,0)
 . . S REJEXPL=$$GET1^DIQ(9002313.93,$P(GETS(PSOI),U,2)_",",.02)
"RTN","PSOBPSSL",206,0)
 . . ; Build the next list line
"RTN","PSOBPSSL",207,0)
 . . S NXTLINE=NXTLINE+1,$E(@DATA@(NXTLINE,0),3,6)=$J(CODE,4)
"RTN","PSOBPSSL",208,0)
 . . S $E(@DATA@(NXTLINE,0),9,68)=$E(REJEXPL,1,60)
"RTN","PSOBPSSL",209,0)
 . . S $E(@DATA@(NXTLINE,0),77,79)=$S(AUTOSEND="YES":"YES",1:" NO")
"RTN","PSOBPSSL",210,0)
 . Q
"RTN","PSOBPSSL",211,0)
 ;
"RTN","PSOBPSSL",212,0)
 ; process for no transfer reject codes
"RTN","PSOBPSSL",213,0)
 I '$D(GETS) S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="  No transfer reject codes for this Pharmacy Division."
"RTN","PSOBPSSL",214,0)
 ;
"RTN","PSOBPSSL",215,0)
 ; Process the Reject Resolution Required Codes
"RTN","PSOBPSSL",216,0)
 ;
"RTN","PSOBPSSL",217,0)
 ; create header for the Reject Resolution Required Codes
"RTN","PSOBPSSL",218,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)=""
"RTN","PSOBPSSL",219,0)
 S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="  Reject Resolution Required Codes"
"RTN","PSOBPSSL",220,0)
 D CNTRL^VALM10(NXTLINE,3,32,IOUON,IOUOFF)
"RTN","PSOBPSSL",221,0)
 ;
"RTN","PSOBPSSL",222,0)
 ; Get the transfer reject codes
"RTN","PSOBPSSL",223,0)
 K GETS D LIST^DIC(52.865,","_IEN_",","@;.01IE;.02",,,,,,,,"GETS")
"RTN","PSOBPSSL",224,0)
 ;
"RTN","PSOBPSSL",225,0)
 ; create sub-header for the Reject Resolution Required Codes
"RTN","PSOBPSSL",226,0)
 I $D(GETS) D
"RTN","PSOBPSSL",227,0)
 . S NXTLINE=NXTLINE+1
"RTN","PSOBPSSL",228,0)
 . S @DATA@(NXTLINE,0)="  Code  Description                                                   Threshold"
"RTN","PSOBPSSL",229,0)
 . S NXTLINE=NXTLINE+1
"RTN","PSOBPSSL",230,0)
 . S @DATA@(NXTLINE,0)="  ----  ------------------------------------------------------------  ---------"
"RTN","PSOBPSSL",231,0)
 . ;
"RTN","PSOBPSSL",232,0)
 . ; Sort the output by external code
"RTN","PSOBPSSL",233,0)
 . S PSOI=0
"RTN","PSOBPSSL",234,0)
 . F  S PSOI=$O(GETS("DILIST","ID",PSOI)) Q:PSOI=""  D
"RTN","PSOBPSSL",235,0)
 . . ; Parse output from LIST^DIC and add to local array GETS as follows:
"RTN","PSOBPSSL",236,0)
 . . ;      GETS({external code})={external DOLLAR THRESHOLD}^{internal code}
"RTN","PSOBPSSL",237,0)
 . . S GETS(" "_GETS("DILIST","ID",PSOI,.01,"E"))=GETS("DILIST","ID",PSOI,.02)_U_GETS("DILIST","ID",PSOI,.01,"I")
"RTN","PSOBPSSL",238,0)
 . . Q
"RTN","PSOBPSSL",239,0)
 . ; Kill the part of GETS no longer needed - from LIST^DIC
"RTN","PSOBPSSL",240,0)
 . K GETS("DILIST")
"RTN","PSOBPSSL",241,0)
 . ;
"RTN","PSOBPSSL",242,0)
 . ; process the Reject Resolution Required code body
"RTN","PSOBPSSL",243,0)
 . S PSOI="" F  S PSOI=$O(GETS(PSOI)) Q:PSOI=""  D
"RTN","PSOBPSSL",244,0)
 . . S CODE=PSOI,THRESHLD=$P(GETS(PSOI),U,1)
"RTN","PSOBPSSL",245,0)
 . . ; Get reject explanation
"RTN","PSOBPSSL",246,0)
 . . S REJEXPL=$$GET1^DIQ(9002313.93,$P(GETS(PSOI),U,2)_",",.02)
"RTN","PSOBPSSL",247,0)
 . . ;
"RTN","PSOBPSSL",248,0)
 . . ; Build the next list line
"RTN","PSOBPSSL",249,0)
 . . S NXTLINE=NXTLINE+1,$E(@DATA@(NXTLINE,0),3,6)=$J(CODE,4)
"RTN","PSOBPSSL",250,0)
 . . S $E(@DATA@(NXTLINE,0),9,68)=$E(REJEXPL,1,60)
"RTN","PSOBPSSL",251,0)
 . . S THRESHLD=+THRESHLD,THRESHLD=$J("$"_$FN(THRESHLD,",",0),10)
"RTN","PSOBPSSL",252,0)
 . . S $E(@DATA@(NXTLINE,0),70,79)=THRESHLD
"RTN","PSOBPSSL",253,0)
 . Q
"RTN","PSOBPSSL",254,0)
 ;
"RTN","PSOBPSSL",255,0)
 ; process for no Reject Resolution Required Codes
"RTN","PSOBPSSL",256,0)
 I '$D(GETS) S NXTLINE=NXTLINE+1,@DATA@(NXTLINE,0)="  No Reject Resolution Required Codes for this Pharmacy Division."
"RTN","PSOBPSSL",257,0)
 Q
"RTN","PSOBPSSL",258,0)
 ;
"RTN","PSOBPSSL",259,0)
TRCMSG ; Transfer Reject Informational Message (called by PSOBPSSP, which was too big)
"RTN","PSOBPSSL",260,0)
 W !!,"All transfer rejects will automatically be placed on the Third Party Payer"
"RTN","PSOBPSSL",261,0)
 W !,"Rejects - Worklist if the reject code is defined in the site parameter file"
"RTN","PSOBPSSL",262,0)
 W !,"and the AUTO SEND parameter is set to yes. The OPECC must manually transfer"
"RTN","PSOBPSSL",263,0)
 W !,"the reject if the reject code is defined in the site parameter file"
"RTN","PSOBPSSL",264,0)
 W !,"and the AUTO SEND parameter is set to no. (To be used when Pharmacy can"
"RTN","PSOBPSSL",265,0)
 W !,"possibly correct a locally filled or CMOP Rx.)"
"RTN","PSOBPSSL",266,0)
 Q
"RTN","PSOBPSSL",267,0)
 ;
"RTN","PSOBPSSL",268,0)
RRRMSG ; Reject Resolution Required Informational Message (called by PSOBPSSP, which was too big)
"RTN","PSOBPSSL",269,0)
 W !!,"All Reject Resolution Required reject codes will automatically be placed"
"RTN","PSOBPSSL",270,0)
 W !,"on the Third Party Payer Rejects - Worklist. This parameter applies to"
"RTN","PSOBPSSL",271,0)
 W !,"rejects for original unreleased fills only. Prescriptions will not be filled"
"RTN","PSOBPSSL",272,0)
 W !,"until the rejects identified by the Reject Resolution parameter are resolved."
"RTN","PSOBPSSL",273,0)
 Q
"RTN","PSOBPSU1")
0^4^B116456797
"RTN","PSOBPSU1",1,0)
PSOBPSU1 ;BIRM/MFR - BPS (ECME) Utilities 1 ;10/15/04
"RTN","PSOBPSU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,260,281,287,303,289,290,358,359,385,403,427,448,482,512**;DEC 1997;Build 44
"RTN","PSOBPSU1",3,0)
 ;References to $$EN^BPSNCPDP supported by IA 4415
"RTN","PSOBPSU1",4,0)
 ;References to $$NDCFMT^PSSNDCUT,$$GETNDC^PSSNDCUT supported by IA 4707
"RTN","PSOBPSU1",5,0)
 ;References to $$ECMEON^BPSUTIL,$$CMOPON^BPSUTIL supported by IA 4410
"RTN","PSOBPSU1",6,0)
 ;References to $$STORESP^IBNCPDP supported by IA 4299
"RTN","PSOBPSU1",7,0)
 ;References to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOBPSU1",8,0)
 ;Reference to $$RESPONSE^BPSOS03 supported by IA 6226
"RTN","PSOBPSU1",9,0)
 ;
"RTN","PSOBPSU1",10,0)
ECMESND(RX,RFL,DATE,FROM,NDC,CMOP,RVTX,OVRC,CNDC,RESP,IGSW,ALTX,CLA,PA,RXCOB,PSOVRIEN,PSOPLAN,PSORTYPE) ; - Sends Rx Release 
"RTN","PSOBPSU1",11,0)
 ;information to ECME/IB and updates NDC in the files 50 & 52; DBIA4702
"RTN","PSOBPSU1",12,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",13,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",14,0)
 ;       (o) DATE - Date of Service
"RTN","PSOBPSU1",15,0)
 ;       (r) FROM - Function within OP (See BWHERE param. in EN^BPSNCPDP api)
"RTN","PSOBPSU1",16,0)
 ;       (o) NDC  - NDC Number (If not passed, will be retrieved from DRUG file)
"RTN","PSOBPSU1",17,0)
 ;       (o) CMOP - CMOP Rx (1-YES/0-NO) (Default: 0)
"RTN","PSOBPSU1",18,0)
 ;       (o) RVTX - REVERSE text (e.g., RX EDIT, RX RELEASE-NDC CHANGE, etc)
"RTN","PSOBPSU1",19,0)
 ;       (o) OVRC - Three sets of 3 NCPDP override codes separated by "~".  Each piece of the set 
"RTN","PSOBPSU1",20,0)
 ;                  is delimited by an "^"
"RTN","PSOBPSU1",21,0)
 ;                  Piece 1: NCPDP Reason for Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",22,0)
 ;                  Piece 2: NCPDP Professional Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",23,0)
 ;                  Piece 3: NCPDP Result of Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",24,0)
 ;       (o) CNDC - Changed NDC? 1 - Yes / 0 - No (Default: NO)
"RTN","PSOBPSU1",25,0)
 ;       (o) IGSW - Ignore Switches (Master and CMOP)? 1 - Yes / 0 - No (Default: NO)
"RTN","PSOBPSU1",26,0)
 ;       (o) ALTX - Alternative Text to be placed in the Rx ECME Activity Log
"RTN","PSOBPSU1",27,0)
 ;       (o) CLA  - NCPDP Clarification Code(s) for overriding DUR/RTS REJECTS
"RTN","PSOBPSU1",28,0)
 ;       (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOBPSU1",29,0)
 ;       (o) RXCOB- Payer Sequence
"RTN","PSOBPSU1",30,0)
 ;       (o) PSOVRIEN - IEN to BPS NCPDP OVERRIDE (#9002313.511)
"RTN","PSOBPSU1",31,0)
 ;       (o) PSOPLAN - IEN to file# 355.3, GROUP INSURANCE PLAN
"RTN","PSOBPSU1",32,0)
 ;       (o) PSORTYPE - IEN to file# 399.3, RATE TYPE
"RTN","PSOBPSU1",33,0)
 ;Output:    RESP - Response from $$EN^BPSNCPDP api
"RTN","PSOBPSU1",34,0)
 ;
"RTN","PSOBPSU1",35,0)
 N ACT,NDCACT,DA,PSOELIG,PSOBYPS,ACT1,SMA
"RTN","PSOBPSU1",36,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",37,0)
 ; - ECME is not turned ON for the Rx's Division
"RTN","PSOBPSU1",38,0)
 I '$G(IGSW),'$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) S RESP="-1^ECME SWITCH OFF" Q
"RTN","PSOBPSU1",39,0)
 ; - ECME CMOP is not turned ON for the Rx's Division
"RTN","PSOBPSU1",40,0)
 I '$G(IGSW),$G(CMOP),'$$CMOPON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) S RESP="-1^CMOP SWITCH OFF" Q
"RTN","PSOBPSU1",41,0)
 ; - Saving the NDC to be displayed on the ECME Act Log
"RTN","PSOBPSU1",42,0)
 I $G(CNDC) D
"RTN","PSOBPSU1",43,0)
 . I $G(NDC)'="" S NDCACT=NDC Q
"RTN","PSOBPSU1",44,0)
 . S NDCACT=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSU1",45,0)
 I $$NDCFMT^PSSNDCUT($G(NDC))="" D
"RTN","PSOBPSU1",46,0)
 . S NDC=$$GETNDC^PSSNDCUT($$GET1^DIQ(52,RX,6,"I"),$$RXSITE^PSOBPSUT(RX,RFL),+$G(CMOP))
"RTN","PSOBPSU1",47,0)
 . I $G(NDC)'="" D SAVNDC^PSONDCUT(RX,RFL,NDC,+$G(CMOP),1)
"RTN","PSOBPSU1",48,0)
 S PPDU="",PPDU=$$GPPDU^PSONDCUT(RX,RFL,NDC,,1,FROM) K PPDU
"RTN","PSOBPSU1",49,0)
 ;
"RTN","PSOBPSU1",50,0)
 ; Determine if this has multiple overrides from the SMA action of the reject worklist
"RTN","PSOBPSU1",51,0)
 S SMA=0
"RTN","PSOBPSU1",52,0)
 I $G(OVRC)]"",$G(CLA)]"" S SMA=1
"RTN","PSOBPSU1",53,0)
 I $G(OVRC)]"",$G(PA)]"" S SMA=1
"RTN","PSOBPSU1",54,0)
 I $G(CLA)]"",$G(PA)]"" S SMA=1
"RTN","PSOBPSU1",55,0)
 ;
"RTN","PSOBPSU1",56,0)
 ; if the reversal reason text exists, remove semi-colons  pso*7*448
"RTN","PSOBPSU1",57,0)
 I $G(RVTX)'="" S RVTX=$TR(RVTX,";","-")
"RTN","PSOBPSU1",58,0)
 ;
"RTN","PSOBPSU1",59,0)
 ; - Creating ECME Act Log in file 52
"RTN","PSOBPSU1",60,0)
 S ACT=""
"RTN","PSOBPSU1",61,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" S ACT="Rev/Resubmit "
"RTN","PSOBPSU1",62,0)
 S ACT=ACT_"ECME:"
"RTN","PSOBPSU1",63,0)
 ;
"RTN","PSOBPSU1",64,0)
 ; - Marked any 'unresolved' REJECTS as 'resolved' (Reason: 1 - Claim re-submitted)
"RTN","PSOBPSU1",65,0)
 N CLSCOM
"RTN","PSOBPSU1",66,0)
 I 'SMA D
"RTN","PSOBPSU1",67,0)
 . I $P($G(OVRC),"~")'="" S CLSCOM="DUR Override Codes "_$TR($P(OVRC,"~"),"^","/")_" submitted."
"RTN","PSOBPSU1",68,0)
 . I $G(CLA)'="" S CLSCOM="Clarification Code(s) "_CLA_" submitted."
"RTN","PSOBPSU1",69,0)
 . I $G(PA)'="" S CLSCOM="Prior Authorization Code ("_$P(PA,"^")_"/"_$P(PA,"^",2)_") submitted."
"RTN","PSOBPSU1",70,0)
 D CLSALL^PSOREJUT(RX,RFL,DUZ,1,$G(CLSCOM),$P($G(OVRC),"~",1),$P($G(OVRC),"~",2),$P($G(OVRC),"~",3),$G(CLA),$G(PA))
"RTN","PSOBPSU1",71,0)
 ; - Call to ECME (NEWing STAT because ECME was overwriting it - Important variable for CMOP release PSXVND)
"RTN","PSOBPSU1",72,0)
 N STAT
"RTN","PSOBPSU1",73,0)
 I $G(RVTX)="",FROM="ED" S RVTX="RX EDITED"
"RTN","PSOBPSU1",74,0)
 S RESP=$$EN^BPSNCPDP(RX,RFL,$$DOS(RX,RFL,.DATE),FROM,NDC,$G(RVTX),$G(OVRC),$G(PSOVRIEN),$G(CLA),$G(PA),$G(RXCOB),,,,$G(PSOPLAN),,$G(PSORTYPE))
"RTN","PSOBPSU1",75,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D
"RTN","PSOBPSU1",76,0)
 . D SAVNDC^PSONDCUT(RX,RFL,NDC,+$G(CMOP),1,FROM)
"RTN","PSOBPSU1",77,0)
 . ;
"RTN","PSOBPSU1",78,0)
 . ; MRD;PSO*7.0*448 - If this is a resubmit of a claim with an RRR
"RTN","PSOBPSU1",79,0)
 . ; reject, and it came back E PAYABLE, then display some additional
"RTN","PSOBPSU1",80,0)
 . ; information about the response to the claim, conditional upon the
"RTN","PSOBPSU1",81,0)
 . ; value of FROM.
"RTN","PSOBPSU1",82,0)
 . ;
"RTN","PSOBPSU1",83,0)
 . I ",ED,PE,PP,RF,RN,RRL,"[(","_FROM_","),$$RRR(RX,RFL) D ADDLINFO(RX,RFL,$G(RXCOB))
"RTN","PSOBPSU1",84,0)
 . ;
"RTN","PSOBPSU1",85,0)
 . Q
"RTN","PSOBPSU1",86,0)
 ;
"RTN","PSOBPSU1",87,0)
 ; - Reseting the Re-transmission flag
"RTN","PSOBPSU1",88,0)
 D RETRXF^PSOREJU2(RX,RFL,0)
"RTN","PSOBPSU1",89,0)
 ; Storing eligibility flag
"RTN","PSOBPSU1",90,0)
 S PSOELIG=$P(RESP,"^",3) D:PSOELIG'="" ELIG^PSOBPSU2(RX,RFL,PSOELIG)
"RTN","PSOBPSU1",91,0)
 ;
"RTN","PSOBPSU1",92,0)
 ; Check if this is a bypass RX-claim.  If it is, write it to the Bypass-Override Report
"RTN","PSOBPSU1",93,0)
 S PSOBYPS=$$BYPASS(PSOELIG,$P(RESP,"^",2))
"RTN","PSOBPSU1",94,0)
 I PSOBYPS D EN^PSOBORP2(RX,RFL,RESP)
"RTN","PSOBPSU1",95,0)
 ;
"RTN","PSOBPSU1",96,0)
 ; If from SMA action, split message across multiple log entries
"RTN","PSOBPSU1",97,0)
 ; The last entry will be filed in the code that follows this section as we append other data
"RTN","PSOBPSU1",98,0)
 ;   to the last message.
"RTN","PSOBPSU1",99,0)
 I SMA,+RESP'=2,+RESP'=6,+RESP'=10 D
"RTN","PSOBPSU1",100,0)
 . N MSG
"RTN","PSOBPSU1",101,0)
 . ; If there are DUR overrides, create the message and file it since this will never be the last message
"RTN","PSOBPSU1",102,0)
 . I $G(OVRC)]"" D
"RTN","PSOBPSU1",103,0)
 .. S MSG=ACT_"REJECT WORKLIST-DUR OVERRIDE CODES("_$TR(OVRC,"^","/")_")"
"RTN","PSOBPSU1",104,0)
 .. D RXACT^PSOBPSU2(RX,RFL,MSG,"M",DUZ)
"RTN","PSOBPSU1",105,0)
 . ; If there are Clarification codes, create the message
"RTN","PSOBPSU1",106,0)
 . ; Only file it if we also have a Prior Auth message.
"RTN","PSOBPSU1",107,0)
 . ; Otherwise more data will be added to it and it will be filed below.
"RTN","PSOBPSU1",108,0)
 . I $G(CLA)]"" D
"RTN","PSOBPSU1",109,0)
 .. S MSG=ACT_"REJECT WORKLIST-(CLARIF. CODE="_CLA_")"
"RTN","PSOBPSU1",110,0)
 .. I $G(PA)]"" D RXACT^PSOBPSU2(RX,RFL,MSG,"M",DUZ)
"RTN","PSOBPSU1",111,0)
 . ; If there are Prior Auth overrides, create the message.
"RTN","PSOBPSU1",112,0)
 . ; More data will be added to it and it will be filed below.
"RTN","PSOBPSU1",113,0)
 . I $G(PA)]"" D
"RTN","PSOBPSU1",114,0)
 .. S ALTX="REJECT WORKLIST-(PRIOR AUTH.="_$TR(PA,"^","/")_")"
"RTN","PSOBPSU1",115,0)
 ;
"RTN","PSOBPSU1",116,0)
 ; - Logging ECME Act Log to file 52
"RTN","PSOBPSU1",117,0)
 I $G(ALTX)="" D
"RTN","PSOBPSU1",118,0)
 . N X,ROUTE S (ROUTE,X)=""
"RTN","PSOBPSU1",119,0)
 . S ROUTE=$S(FROM="RF":$$GET1^DIQ(52.1,RFL_","_RX_",",2),FROM="OF":$$GET1^DIQ(52,RX_",",11),1:"")
"RTN","PSOBPSU1",120,0)
 . S:FROM="OF" X=ROUTE_" FILL(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",121,0)
 . S:FROM="RF" X=ROUTE_" REFILL(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",122,0)
 . S:FROM="RN" X="RX RENEWED(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",123,0)
 . S:FROM="PL" X="PRINTED FROM SUSPENSE(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",124,0)
 . S:FROM="PE"!(FROM="PP") X="PULLED FROM SUSPENSE(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",125,0)
 . S:FROM="PC" X="CMOP TRANSMISSION(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",126,0)
 . S:FROM="RRL"!(FROM="CRRL") X="RELEASED RX PREVIOUSLY REVERSED"
"RTN","PSOBPSU1",127,0)
 . S:FROM="ED" X="RX EDITED"
"RTN","PSOBPSU1",128,0)
 . S:$G(RVTX)'="" X=RVTX
"RTN","PSOBPSU1",129,0)
 . I 'SMA,$G(OVRC)'="" S X="DUR OVERRIDE CODES("_$TR(OVRC,"^","/")_")"
"RTN","PSOBPSU1",130,0)
 . S:$G(CNDC) X=X_"(NDC:"_NDCACT_")" S ACT=ACT_X
"RTN","PSOBPSU1",131,0)
 . S ACT=ACT_$$STS(RX,RFL,RESP)
"RTN","PSOBPSU1",132,0)
 I $G(ALTX)'="" S ACT=ACT_ALTX_$$STS(RX,RFL,RESP)
"RTN","PSOBPSU1",133,0)
 I +RESP=2 S ACT="Not ECME Billable: "_$P(RESP,"^",2)
"RTN","PSOBPSU1",134,0)
 I +RESP=6 S ACT=$P(RESP,"^",2)
"RTN","PSOBPSU1",135,0)
 I +RESP=10 S ACT="ECME reversed/NOT re-submitted: "_$P(RESP,"^",2)
"RTN","PSOBPSU1",136,0)
 S:PSOELIG="T" ACT="TRICARE-"_ACT
"RTN","PSOBPSU1",137,0)
 S:PSOELIG="C" ACT="CHAMPVA-"_ACT
"RTN","PSOBPSU1",138,0)
 S ACT1=""
"RTN","PSOBPSU1",139,0)
 I $P(RESP,"^",6),$P(RESP,"^",7)'=""  S ACT1="-"_$S($P(RESP,"^",6)="2":"s",$P(RESP,"^",6)="3":"t",1:"p")_$P(RESP,"^",7)
"RTN","PSOBPSU1",140,0)
 S ACT=$E(ACT_ACT1,1,75)
"RTN","PSOBPSU1",141,0)
 D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOBPSU1",142,0)
 D ELOG^PSOBPSU2(RESP)  ;-Logs an ECME Act Log if Rx Qty is different than Billing Qty
"RTN","PSOBPSU1",143,0)
 ; If not a bypass RX-claim, then call TRICCHK so the user can process
"RTN","PSOBPSU1",144,0)
 I PSOELIG="T"!(PSOELIG="C"),'PSOBYPS D TRICCHK^PSOREJU3(RX,RFL,RESP,FROM,$G(RVTX))
"RTN","PSOBPSU1",145,0)
 Q
"RTN","PSOBPSU1",146,0)
 ;
"RTN","PSOBPSU1",147,0)
BYPASS(PSOELIG,REASON) ;PSO*427
"RTN","PSOBPSU1",148,0)
 ; Check if this Rx gets bypassed. Bypassed Rx show up on the TRICARE/CHAMPVA
"RTN","PSOBPSU1",149,0)
 ;   Override/Bypass Report and will not get the Reject Notification Screen.
"RTN","PSOBPSU1",150,0)
 ;
"RTN","PSOBPSU1",151,0)
 ; Input:
"RTN","PSOBPSU1",152,0)
 ;    POSELIG: Eligibility (C:CHAMPVA, T:TRICARE, V:VETERAN)
"RTN","PSOBPSU1",153,0)
 ;    REASON: Non billable reason returned by ECME
"RTN","PSOBPSU1",154,0)
 ; Output:
"RTN","PSOBPSU1",155,0)
 ;    0: Not a Bypass Rx
"RTN","PSOBPSU1",156,0)
 ;    1: Bypass Rx
"RTN","PSOBPSU1",157,0)
 ;
"RTN","PSOBPSU1",158,0)
 ; Check Parameters
"RTN","PSOBPSU1",159,0)
 I $G(PSOELIG)="" Q 0
"RTN","PSOBPSU1",160,0)
 I $G(REASON)="" Q 0
"RTN","PSOBPSU1",161,0)
 ;
"RTN","PSOBPSU1",162,0)
 ; Only TRICARE and CHAMPVA are bypassed
"RTN","PSOBPSU1",163,0)
 I PSOELIG'="T",PSOELIG'="C" Q 0
"RTN","PSOBPSU1",164,0)
 ;
"RTN","PSOBPSU1",165,0)
 ; Check for TRICARE/CHAMPVA and EI (Veteran claims would not have gotten this far)
"RTN","PSOBPSU1",166,0)
 I ",AGENT ORANGE,IONIZING RADIATION,SC TREATMENT,SOUTHWEST ASIA,MILITARY SEXUAL TRAUMA,HEAD/NECK CANCER,COMBAT VETERAN,PROJECT 112/SHAD,"[(","_REASON_",") Q 1
"RTN","PSOBPSU1",167,0)
 Q 0
"RTN","PSOBPSU1",168,0)
 ;
"RTN","PSOBPSU1",169,0)
RRR(PSORX,PSOFILL) ; Check for an RRR reject on a Prescription/Fill.
"RTN","PSOBPSU1",170,0)
 ; MRD;PSO*7.0*448 - New function to support display of additional
"RTN","PSOBPSU1",171,0)
 ; information for RRR resubmits.  Return '1' if this Rx has a reject
"RTN","PSOBPSU1",172,0)
 ; with the RRR flag set, otherwise return '0'.
"RTN","PSOBPSU1",173,0)
 ; Input:  (r) PSORX   - Rx IEN (#52)
"RTN","PSOBPSU1",174,0)
 ;         (o) PSOFILL - Refill#
"RTN","PSOBPSU1",175,0)
 ; Output: '1' if RRR, '0' if not
"RTN","PSOBPSU1",176,0)
 ;
"RTN","PSOBPSU1",177,0)
 N PSOREJ,PSORRR
"RTN","PSOBPSU1",178,0)
 ;
"RTN","PSOBPSU1",179,0)
 I '$G(PSORX) Q 0
"RTN","PSOBPSU1",180,0)
 I $G(PSOFILL)="" S PSOFILL=0
"RTN","PSOBPSU1",181,0)
 ;
"RTN","PSOBPSU1",182,0)
 ; Loop through the Reject Info sub-file.  If the Fill# on a Reject is
"RTN","PSOBPSU1",183,0)
 ; the same as PSOFILL, and if the Reject is RRR, then set the flag and
"RTN","PSOBPSU1",184,0)
 ; quit out.
"RTN","PSOBPSU1",185,0)
 ;
"RTN","PSOBPSU1",186,0)
 S PSORRR=0
"RTN","PSOBPSU1",187,0)
 S PSOREJ=0
"RTN","PSOBPSU1",188,0)
 F  S PSOREJ=$O(^PSRX(PSORX,"REJ",PSOREJ)) Q:'PSOREJ  D  Q:PSORRR
"RTN","PSOBPSU1",189,0)
 . I $$GET1^DIQ(52.25,PSOREJ_","_PSORX,5)'=PSOFILL Q
"RTN","PSOBPSU1",190,0)
 . I $$GET1^DIQ(52.25,PSOREJ_","_PSORX,30,"I") S PSORRR=1
"RTN","PSOBPSU1",191,0)
 . Q
"RTN","PSOBPSU1",192,0)
 ;
"RTN","PSOBPSU1",193,0)
 Q PSORRR
"RTN","PSOBPSU1",194,0)
 ;
"RTN","PSOBPSU1",195,0)
ADDLINFO(PSORX,PSOFILL,PSOCOB) ; Display additional information for RRR resubmits.
"RTN","PSOBPSU1",196,0)
 ; MRD;PSO*7.0*448 - Display addition information for a paid claim.
"RTN","PSOBPSU1",197,0)
 ; Input: (r) PSORX   - Rx IEN (#52)
"RTN","PSOBPSU1",198,0)
 ;        (o) PSOFILL - Refill#
"RTN","PSOBPSU1",199,0)
 ;        (o) PSOCOB  - Payer Sequence
"RTN","PSOBPSU1",200,0)
 ;
"RTN","PSOBPSU1",201,0)
 ; Use $$RESPONSE^BPSOS03 to pull the following fields from the BPS
"RTN","PSOBPSU1",202,0)
 ; Response file, then display those fields.
"RTN","PSOBPSU1",203,0)
 ;  - Total Amount Paid, field #509
"RTN","PSOBPSU1",204,0)
 ;  - Ingredient Cost Paid, field #506
"RTN","PSOBPSU1",205,0)
 ;  - Amount of Copay/Coinsurance, field #518
"RTN","PSOBPSU1",206,0)
 ;  - Dispensing Fee Paid, field #507
"RTN","PSOBPSU1",207,0)
 ;  - Amount Applied to Periodic Deductible, field #517
"RTN","PSOBPSU1",208,0)
 ;  - Remaining Deductible Amount, field #513
"RTN","PSOBPSU1",209,0)
 ;
"RTN","PSOBPSU1",210,0)
 N PSORESP,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PSOBPSU1",211,0)
 ;
"RTN","PSOBPSU1",212,0)
 I '$G(PSORX) Q                ; If no Rx passed in, Quit out.
"RTN","PSOBPSU1",213,0)
 I $G(PSOFILL)="" S PSOFILL=0  ; Default Fill to 0 if none.
"RTN","PSOBPSU1",214,0)
 I '$G(PSOCOB) S PSOCOB=1      ; Default COB to 1/primary if none.
"RTN","PSOBPSU1",215,0)
 ;
"RTN","PSOBPSU1",216,0)
 S PSORESP=$$RESPONSE^BPSOS03(PSORX,PSOFILL,PSOCOB)  ; IA 6226.
"RTN","PSOBPSU1",217,0)
 I PSORESP="" Q
"RTN","PSOBPSU1",218,0)
 ;
"RTN","PSOBPSU1",219,0)
 W !,"Total Amount Paid: ",$P(PSORESP,U,1)
"RTN","PSOBPSU1",220,0)
 W ?39,"Ingredient Cost Paid: ",$P(PSORESP,U,2)
"RTN","PSOBPSU1",221,0)
 W !,"Amount of Copay/Coinsurance: ",$P(PSORESP,U,3)
"RTN","PSOBPSU1",222,0)
 W ?39,"Dispensing Fee Paid: ",$P(PSORESP,U,4)
"RTN","PSOBPSU1",223,0)
 W !,"Amount Applied to Periodic Deductible: ",$P(PSORESP,U,5)
"RTN","PSOBPSU1",224,0)
 W !,"Remaining Deductible Amount: ",$P(PSORESP,U,6)
"RTN","PSOBPSU1",225,0)
 ;
"RTN","PSOBPSU1",226,0)
 S DIR(0)="E",DIR("A")="Press Return to continue"
"RTN","PSOBPSU1",227,0)
 W !
"RTN","PSOBPSU1",228,0)
 D ^DIR
"RTN","PSOBPSU1",229,0)
 W !
"RTN","PSOBPSU1",230,0)
 ;
"RTN","PSOBPSU1",231,0)
 Q
"RTN","PSOBPSU1",232,0)
 ;
"RTN","PSOBPSU1",233,0)
REVERSE(RX,RFL,FROM,RSN,RTXT,IGRL,NDC) ; - Reverse a claim and close all OPEN/UNRESOLVED Rejects
"RTN","PSOBPSU1",234,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",235,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",236,0)
 ;       (r) FROM - Function within OP (See BWHERE param. in EN^BPSNCPDP api)
"RTN","PSOBPSU1",237,0)
 ;       (o) RSN  - Close Reason (2:RX ON HOLD;4: RX RETURNED TO STOCK,5:RX DELETED,etc...)
"RTN","PSOBPSU1",238,0)
 ;       (o) RTXT - Close Reason TEXT (Usually no passed if RSN is passed)
"RTN","PSOBPSU1",239,0)
 ;       (o) IGRL - Ignore RELEASE DATE, reverse anyway  
"RTN","PSOBPSU1",240,0)
 ;       (o) NDC  - NDC number related to the reversal (Note: might be an invalid NDC)
"RTN","PSOBPSU1",241,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",242,0)
 N PSOET S PSOET=$$PSOET^PSOREJP3(RX,RFL)   ;cnf, PSO*7.0*358
"RTN","PSOBPSU1",243,0)
 I 'PSOET,$$STATUS^PSOBPSUT(RX,RFL)="" Q    ;cnf, PSO*7.0*358, add PSOET check, allow reversal for TRICARE non-billable reject
"RTN","PSOBPSU1",244,0)
 N RESP,STS,ACT,STAT,DA,STATUS,NOACT,REVECME S RSN=+$G(RSN),RTXT=$G(RTXT),REVECME=1
"RTN","PSOBPSU1",245,0)
 I RTXT="",RSN D
"RTN","PSOBPSU1",246,0)
 . S:RSN=2 RTXT="RX PLACED ON HOLD" S:RSN=3 RTXT="RX SUSPENDED" S:RSN=4 RTXT="RX RETURNED TO STOCK"
"RTN","PSOBPSU1",247,0)
 . S:RSN=5 RTXT="RX DELETED" S:RSN=7 RTXT="RX DISCONTINUED" S:RSN=8 RTXT="RX EDITED"
"RTN","PSOBPSU1",248,0)
 D CLSALL^PSOREJUT(RX,RFL,DUZ,RSN,RTXT)
"RTN","PSOBPSU1",249,0)
 I '$G(IGRL),$$RXRLDT^PSOBPSUT(RX,RFL) Q
"RTN","PSOBPSU1",250,0)
 ; - Reseting the Re-transmission flag if Rx is being suspended
"RTN","PSOBPSU1",251,0)
 I RSN=3!($$GET1^DIQ(52,RX,100,"I")=5) D RETRXF^PSOREJU2(RX,RFL,1)
"RTN","PSOBPSU1",252,0)
 S STATUS=$$STATUS^PSOBPSUT(RX,RFL),NOACT=0
"RTN","PSOBPSU1",253,0)
 I STATUS'="E PAYABLE",STATUS'="IN PROGRESS",STATUS'="E REVERSAL REJECTED",STATUS'="E REVERSAL STRANDED",STATUS'="E DUPLICATE" S NOACT=1
"RTN","PSOBPSU1",254,0)
 ; Only perform ECME reversal for a released CMOP if rx/fill is Discontinued.
"RTN","PSOBPSU1",255,0)
 I FROM="DC",$$CMOP^PSOBPSUT(RX,RFL) S REVECME=0
"RTN","PSOBPSU1",256,0)
 I REVECME S RESP=$$EN^BPSNCPDP(RX,RFL,$$DOS(RX,RFL),FROM,$$GETNDC^PSONDCUT(RX,RFL),RTXT)
"RTN","PSOBPSU1",257,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSU1",258,0)
 ; - Logging ECME Act Log
"RTN","PSOBPSU1",259,0)
 I '$G(NOACT),REVECME D
"RTN","PSOBPSU1",260,0)
 . S ACT=$S(PSOTRIC=1:"TRICARE ",PSOTRIC=2:"CHAMPVA ",1:"")_"Reversal sent to ECME: "_RTXT_$S($G(NDC)'="":" ("_NDC_")",1:"")_$$STS(RX,RFL,+RESP)
"RTN","PSOBPSU1",261,0)
 . D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOBPSU1",262,0)
 Q
"RTN","PSOBPSU1",263,0)
 ;
"RTN","PSOBPSU1",264,0)
DOS(RX,RFL,DATE) ; Return the Date Of Service for ECME
"RTN","PSOBPSU1",265,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",266,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",267,0)
 ;       (o) DATE - Possible Date Of Service
"RTN","PSOBPSU1",268,0)
 ;Output:    DOS  - Actual Date Of Service
"RTN","PSOBPSU1",269,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",270,0)
 ; - Retrieving RELEASE DATE from file 52 if DATE not passed in
"RTN","PSOBPSU1",271,0)
 I $G(DATE)="" S DATE=$$RXRLDT^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU1",272,0)
 ; - If no date or future date, use today's date
"RTN","PSOBPSU1",273,0)
 I DATE>DT!'DATE S DATE=$$DT^XLFDT
"RTN","PSOBPSU1",274,0)
 Q (DATE\1)
"RTN","PSOBPSU1",275,0)
 ;
"RTN","PSOBPSU1",276,0)
RELEASE(RX,RFL,USR) ; - Notifies IB that the Rx was RELEASED
"RTN","PSOBPSU1",277,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",278,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOBPSU1",279,0)
 ;       (o) USR  - User responsible for releasing the Rx (Default: .5 - Postmaster)
"RTN","PSOBPSU1",280,0)
 N IBAR,RXAR,RFAR,PSOIBN
"RTN","PSOBPSU1",281,0)
 S:'$D(RFL) RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",282,0)
 S:'$D(USR) USR=.5
"RTN","PSOBPSU1",283,0)
 D GETS^DIQ(52,RX_",",".01;2;6;7;8;22","I","RXAR")
"RTN","PSOBPSU1",284,0)
 S DFN=+$G(RXAR(52,RX_",",2,"I"))
"RTN","PSOBPSU1",285,0)
 S IBAR("PRESCRIPTION")=RX,IBAR("RX NO")=$G(RXAR(52,RX_",",.01,"I"))
"RTN","PSOBPSU1",286,0)
 S IBAR("CLAIMID")=$P($$CLAIM^BPSBUTL(RX,RFL),U,6)
"RTN","PSOBPSU1",287,0)
 S IBAR("USER")=USR
"RTN","PSOBPSU1",288,0)
 S IBAR("DRUG")=RXAR(52,RX_",",6,"I"),IBAR("NDC")=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSU1",289,0)
 S IBAR("FILL NUMBER")=RFL,IBAR("DOS")=$$DOS(RX,RFL),IBAR("RELEASE DATE")=$$RXRLDT^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU1",290,0)
 S IBAR("QTY")=$G(RXAR(52,RX_",",7,"I")),IBAR("DAYS SUPPLY")=$G(RXAR(52,RX_",",8,"I"))
"RTN","PSOBPSU1",291,0)
 I RFL D
"RTN","PSOBPSU1",292,0)
 . D GETS^DIQ(52.1,RFL_","_RX_",",".01;1;1.1","I","RFAR")
"RTN","PSOBPSU1",293,0)
 . S IBAR("QTY")=$G(RFAR(52.1,RFL_","_RX_",",1,"I"))
"RTN","PSOBPSU1",294,0)
 . S IBAR("DAYS SUPPLY")=$G(RFAR(52.1,RFL_","_RX_",",1.1,"I"))
"RTN","PSOBPSU1",295,0)
 S IBAR("STATUS")="RELEASED"
"RTN","PSOBPSU1",296,0)
 S PSOIBN=$$STORESP^IBNCPDP(DFN,.IBAR)
"RTN","PSOBPSU1",297,0)
 Q
"RTN","PSOBPSU1",298,0)
 ;
"RTN","PSOBPSU1",299,0)
LSTRFL(RX) ;  - Returns the latest fill for the Rx
"RTN","PSOBPSU1",300,0)
 ; Input: (r) RX     - Rx IEN (#52)
"RTN","PSOBPSU1",301,0)
 ;Output:     LSTRFL - Most recent refill #
"RTN","PSOBPSU1",302,0)
 N I,LSTRFL
"RTN","PSOBPSU1",303,0)
 S (I,LSTRFL)=0 F  S I=$O(^PSRX(RX,1,I)) Q:'I  S LSTRFL=I
"RTN","PSOBPSU1",304,0)
 Q LSTRFL
"RTN","PSOBPSU1",305,0)
 ;
"RTN","PSOBPSU1",306,0)
ECMEACT(RX,RFL,COMM,USR) ; - Add an Act to the ECME Act Log (FILE 52)
"RTN","PSOBPSU1",307,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",308,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",309,0)
 ;       (r) COMM - Comments (up to 100 characters)
"RTN","PSOBPSU1",310,0)
 ;       (o) USR  - User logging the comments (Default: DUZ)
"RTN","PSOBPSU1",311,0)
 S:'$D(RFL) RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU1",312,0)
 D RXACT^PSOBPSU2(RX,RFL,COMM,"M",+$G(USR))
"RTN","PSOBPSU1",313,0)
 Q
"RTN","PSOBPSU1",314,0)
 ;
"RTN","PSOBPSU1",315,0)
STS(RX,RFL,RSP) ; Adds the Status to the ECME Act Log according to Rx/fill claim status Response
"RTN","PSOBPSU1",316,0)
 N STS
"RTN","PSOBPSU1",317,0)
 S STS=$S($$STATUS^PSOBPSUT(RX,RFL)'="IN PROGRESS"&($$STATUS^PSOBPSUT(RX,RFL)'=""):"-"_$$STATUS^PSOBPSUT(RX,RFL),1:"")
"RTN","PSOBPSU1",318,0)
 S:+RSP=1 STS="-NO SUBMISSION THROUGH ECME" S:+RSP=3 STS="-NO REVERSAL NEEDED" S:+RSP=4 STS="-NOT PROCESSED"
"RTN","PSOBPSU1",319,0)
 S:+RSP=5 STS="-SOFTWARE ERROR"_$S($P($G(RESP),"^",2)'="":" ("_$P(RESP,"^",2)_")",1:"")
"RTN","PSOBPSU1",320,0)
 I +RSP=2,$$STATUS^PSOBPSUT(RX,RFL)'="" S STS="-NOT BILLABLE:"_$S(PSOELIG="T":"TRICARE",PSOELIG="C":"CHAMPVA",1:"")_":"_$P(RSP,"^",2)
"RTN","PSOBPSU1",321,0)
 Q STS
"RTN","PSOBPSU2")
0^2^B63200300
"RTN","PSOBPSU2",1,0)
PSOBPSU2 ;BIRM/MFR - BPS (ECME) Utilities 2 ;10/15/04
"RTN","PSOBPSU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**260,287,289,341,290,358,359,385,421,459,482,512**;DEC 1997;Build 44
"RTN","PSOBPSU2",3,0)
 ;Reference to File 200 - NEW PERSON supported by IA 10060
"RTN","PSOBPSU2",4,0)
 ;Reference to DUR1^BPSNCPD3 supported by IA 4560
"RTN","PSOBPSU2",5,0)
 ;Reference to $$NCPDPQTY^PSSBPSUT supported by IA 4992
"RTN","PSOBPSU2",6,0)
 ;Reference to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOBPSU2",7,0)
 ; 
"RTN","PSOBPSU2",8,0)
MWC(RX,RFL) ; Returns whether a prescription is (M)ail, (W)indow or (C)MOP
"RTN","PSOBPSU2",9,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU2",10,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU2",11,0)
 ;Output: "M": MAIL / "W": WINDOW / "C": CMOP
"RTN","PSOBPSU2",12,0)
 ;
"RTN","PSOBPSU2",13,0)
 N MWC
"RTN","PSOBPSU2",14,0)
 ;
"RTN","PSOBPSU2",15,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",16,0)
 ;
"RTN","PSOBPSU2",17,0)
 ; If RFL is not zero, then pull the value from MAIL/WINDOW on the
"RTN","PSOBPSU2",18,0)
 ; REFILL multiple. Otherwise, pull the value from MAIL/WINDOW
"RTN","PSOBPSU2",19,0)
 ; at the Prescription level.
"RTN","PSOBPSU2",20,0)
 I RFL S MWC=$$GET1^DIQ(52.1,RFL_","_RX,2,"I")
"RTN","PSOBPSU2",21,0)
 E  S MWC=$$GET1^DIQ(52,RX,11,"I")
"RTN","PSOBPSU2",22,0)
 S:MWC="" MWC="W"
"RTN","PSOBPSU2",23,0)
 I MWC'="M",MWC'="W" Q MWC   ; If neither Mail nor Window, quit now and skip other checks
"RTN","PSOBPSU2",24,0)
 ;
"RTN","PSOBPSU2",25,0)
 ; - Checking the RX SUSPENSE file (#52.5)
"RTN","PSOBPSU2",26,0)
 ; File# 52, field# 100 is STATUS; 5=Suspended
"RTN","PSOBPSU2",27,0)
 I $$GET1^DIQ(52,RX,100,"I")=5 D
"RTN","PSOBPSU2",28,0)
 . N RXS S RXS=+$O(^PS(52.5,"B",RX,0)) Q:'RXS
"RTN","PSOBPSU2",29,0)
 . ; File#52.5, RX SUSPENSE; field# 3, CMOP INDICATOR
"RTN","PSOBPSU2",30,0)
 . ; If the CMOP INDICATOR is not blank, then this is CMOP...
"RTN","PSOBPSU2",31,0)
 . I $$GET1^DIQ(52.5,RXS,3,"I")'="" S MWC="C" Q
"RTN","PSOBPSU2",32,0)
 . ; ...otherwise, this is a Mail fill.
"RTN","PSOBPSU2",33,0)
 . S MWC="M"
"RTN","PSOBPSU2",34,0)
 ;
"RTN","PSOBPSU2",35,0)
 ; - Checking the CMOP EVENT sub-file (#52.01)
"RTN","PSOBPSU2",36,0)
 I MWC'="C" D
"RTN","PSOBPSU2",37,0)
 . N CMP S CMP=0
"RTN","PSOBPSU2",38,0)
 . F  S CMP=$O(^PSRX(RX,4,CMP)) Q:'CMP  D  I MWC="C" Q
"RTN","PSOBPSU2",39,0)
 . . I $$GET1^DIQ(52.01,CMP_","_RX,2,"I")=RFL S MWC="C"
"RTN","PSOBPSU2",40,0)
 ;
"RTN","PSOBPSU2",41,0)
 Q MWC
"RTN","PSOBPSU2",42,0)
 ;
"RTN","PSOBPSU2",43,0)
RXACT(RX,RFL,COMM,TYPE,USR) ; - Add an Activity to the ECME Activity Log (PRESCRIPTION file)
"RTN","PSOBPSU2",44,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU2",45,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU2",46,0)
 ;       (r) COMM - Comments (up to 100 characters)
"RTN","PSOBPSU2",47,0)
 ;       (r) TYPE - Comments type: (M-ECME,E-Edit, etc...) See file #52 DD for all values
"RTN","PSOBPSU2",48,0)
 ;       (o) USR  - User logging the comments (Default: DUZ)
"RTN","PSOBPSU2",49,0)
 ;
"RTN","PSOBPSU2",50,0)
 S:'$D(RFL) RFL=$$LSTRFL^PSOBPSU1(RX) S:'$D(USR) USR=DUZ
"RTN","PSOBPSU2",51,0)
 S:'$D(^VA(200,+USR,0)) USR=DUZ S COMM=$E($G(COMM),1,100)
"RTN","PSOBPSU2",52,0)
 ;
"RTN","PSOBPSU2",53,0)
 I COMM="" Q
"RTN","PSOBPSU2",54,0)
 I '$D(^PSRX(RX)) Q
"RTN","PSOBPSU2",55,0)
 ;
"RTN","PSOBPSU2",56,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSU2",57,0)
 I PSOTRIC=1,$E(COMM,1,7)'="TRICARE" S COMM=$E("TRICARE-"_COMM,1,100)
"RTN","PSOBPSU2",58,0)
 I PSOTRIC=2,$E(COMM,1,7)'="CHAMPVA" S COMM=$E("CHAMPVA-"_COMM,1,100)
"RTN","PSOBPSU2",59,0)
 N X,DIC,DA,DD,DO,DR,DINUM,Y,DLAYGO
"RTN","PSOBPSU2",60,0)
 S DA(1)=RX,DIC="^PSRX("_RX_",""A"",",DLAYGO=52.3,DIC(0)="L"
"RTN","PSOBPSU2",61,0)
 S DIC("DR")=".02///"_TYPE_";.03////"_USR_";.04///"_$S(TYPE'="M"&(RFL>5):RFL+1,1:RFL)_";.05///"_COMM
"RTN","PSOBPSU2",62,0)
 S X=$$NOW^XLFDT() D FILE^DICN
"RTN","PSOBPSU2",63,0)
 Q
"RTN","PSOBPSU2",64,0)
 ;
"RTN","PSOBPSU2",65,0)
ECMENUM(RX,RFL) ; Returns the ECME number for a specific prescription and fill
"RTN","PSOBPSU2",66,0)
 N ECMENUM
"RTN","PSOBPSU2",67,0)
 I $G(RX)="" Q ""
"RTN","PSOBPSU2",68,0)
 ; Check ECME # for Refill passed in
"RTN","PSOBPSU2",69,0)
 I $G(RFL)'="" S ECMENUM=$$GETECME(RX,RFL) Q ECMENUM
"RTN","PSOBPSU2",70,0)
 ; If Refill is null, check last refill
"RTN","PSOBPSU2",71,0)
 S RFL=$$LSTRFL^PSOBPSU1(RX),ECMENUM=$$GETECME(RX,RFL) I ECMENUM'="" Q ECMENUM
"RTN","PSOBPSU2",72,0)
 ; If no ECME # for last refill, step back through refills in reverse order
"RTN","PSOBPSU2",73,0)
 F  S RFL=RFL-1 Q:(RFL<0)!(ECMENUM'="")  S ECMENUM=$$GETECME(RX,RFL)
"RTN","PSOBPSU2",74,0)
 Q ECMENUM
"RTN","PSOBPSU2",75,0)
 ;
"RTN","PSOBPSU2",76,0)
GETECME(RX,RFL) ;
"RTN","PSOBPSU2",77,0)
 ;Internal function used by ECMENUM to get the ECME # from BPS
"RTN","PSOBPSU2",78,0)
 N ECMENUM
"RTN","PSOBPSU2",79,0)
 I $G(RX)="" Q ""
"RTN","PSOBPSU2",80,0)
 I $G(RFL)="" Q ""
"RTN","PSOBPSU2",81,0)
 S ECMENUM=$P($$CLAIM^BPSBUTL(RX,RFL),U,6)
"RTN","PSOBPSU2",82,0)
 Q ECMENUM
"RTN","PSOBPSU2",83,0)
 ;
"RTN","PSOBPSU2",84,0)
RXNUM(ECME) ; Returns the Rx number for a specific ECME number
"RTN","PSOBPSU2",85,0)
 ;
"RTN","PSOBPSU2",86,0)
 N FOUND,MAX,LFT,RAD,I,DIR,RX,X,Y,DIRUT
"RTN","PSOBPSU2",87,0)
 S ECME=+ECME,LFT=0,FOUND=0
"RTN","PSOBPSU2",88,0)
 S MAX=$O(^PSRX(9999999999999),-1)  ; MAX = largest Rx ien on file
"RTN","PSOBPSU2",89,0)
 ;
"RTN","PSOBPSU2",90,0)
 ; Attempt left digit matching logic in this case only
"RTN","PSOBPSU2",91,0)
 I $L(MAX)>7,$L(ECME)'>7 D
"RTN","PSOBPSU2",92,0)
 . S LFT=$E(MAX,1,$L(MAX)-7)  ; LFT = left most digits
"RTN","PSOBPSU2",93,0)
 . F RAD=LFT:-1:0 S RX=RAD*10000000+ECME I $D(^PSRX(RX,0)),$$ECMENUM(RX)'="" S FOUND=FOUND+1,FOUND(FOUND)=RX
"RTN","PSOBPSU2",94,0)
 . Q
"RTN","PSOBPSU2",95,0)
 ;
"RTN","PSOBPSU2",96,0)
 ; Otherwise attempt a normal lookup
"RTN","PSOBPSU2",97,0)
 E  S RX=ECME I $D(^PSRX(RX,0)),$$ECMENUM(RX)'="" S FOUND=FOUND+1,FOUND(FOUND)=RX
"RTN","PSOBPSU2",98,0)
 ;
"RTN","PSOBPSU2",99,0)
 I 'FOUND S FOUND=-1 G RXNUMX            ; Rx not found
"RTN","PSOBPSU2",100,0)
 I FOUND=1 S FOUND=FOUND(1) G RXNUMX     ; exactly 1 found
"RTN","PSOBPSU2",101,0)
 ;
"RTN","PSOBPSU2",102,0)
 ; More than 1 found so build a list and ask
"RTN","PSOBPSU2",103,0)
 W ! F I=1:1:FOUND W !?5,I,". ",$$GET1^DIQ(52,FOUND(I),.01),?25,$$GET1^DIQ(52,FOUND(I),6)
"RTN","PSOBPSU2",104,0)
 W ! S DIR(0)="NA^1:"_FOUND,DIR("A")="Select one: ",DIR("B")=1
"RTN","PSOBPSU2",105,0)
 D ^DIR I $D(DIRUT) S FOUND=-1 G RXNUMX
"RTN","PSOBPSU2",106,0)
 S FOUND=FOUND(Y)
"RTN","PSOBPSU2",107,0)
 ;
"RTN","PSOBPSU2",108,0)
RXNUMX ;
"RTN","PSOBPSU2",109,0)
 Q FOUND
"RTN","PSOBPSU2",110,0)
 ;
"RTN","PSOBPSU2",111,0)
ELIG(RX,RFL,PSOELIG) ;Stores eligibility flag
"RTN","PSOBPSU2",112,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) QUIT
"RTN","PSOBPSU2",113,0)
 N DA,DIE,X,Y,PSOTRIC
"RTN","PSOBPSU2",114,0)
 I 'RFL S DA=RX,DIE="^PSRX(",DR="85///"_PSOELIG D ^DIE
"RTN","PSOBPSU2",115,0)
 I RFL S DA=RFL,DA(1)=RX,DIE="^PSRX("_DA(1)_",1,",DR="85///"_PSOELIG D ^DIE
"RTN","PSOBPSU2",116,0)
 Q
"RTN","PSOBPSU2",117,0)
 ;
"RTN","PSOBPSU2",118,0)
ECMESTAT(RX,RFL) ;called from local mail
"RTN","PSOBPSU2",119,0)
 ;Input: 
"RTN","PSOBPSU2",120,0)
 ; RX = Prescription File IEN
"RTN","PSOBPSU2",121,0)
 ; RFL = Refill
"RTN","PSOBPSU2",122,0)
 ;Output:
"RTN","PSOBPSU2",123,0)
 ; 0 for not allowed to print from suspense
"RTN","PSOBPSU2",124,0)
 ; 1 for allowed to print from suspense
"RTN","PSOBPSU2",125,0)
 ;
"RTN","PSOBPSU2",126,0)
 N STATUS,PSOTRIC
"RTN","PSOBPSU2",127,0)
 S STATUS=$$STATUS^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU2",128,0)
 ;IN PROGRESS claims - try again.  If still IN PROGRESS, do not allow to print
"RTN","PSOBPSU2",129,0)
 I STATUS["IN PROGRESS" H 5 S STATUS=$$STATUS^PSOBPSUT(RX,RFL) I STATUS["IN PROGRESS" Q 0
"RTN","PSOBPSU2",130,0)
 ;
"RTN","PSOBPSU2",131,0)
 ;no ECME status, allow to print.  This will eliminate 90% of the cases
"RTN","PSOBPSU2",132,0)
 I STATUS="" Q 1
"RTN","PSOBPSU2",133,0)
 ;
"RTN","PSOBPSU2",134,0)
 ;check for suspense hold date/host reject errors
"RTN","PSOBPSU2",135,0)
 I $$DUR(RX,RFL)=0 Q 0
"RTN","PSOBPSU2",136,0)
 ;
"RTN","PSOBPSU2",137,0)
 ;check for any TRICARE/CHAMPVA rejects, not allowed to go to print until resolved.
"RTN","PSOBPSU2",138,0)
 ;But allow to print if RX/RFL is in the TRI/CVA Audit Log with no unresolved rejects
"RTN","PSOBPSU2",139,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,.PSOTRIC)
"RTN","PSOBPSU2",140,0)
 I PSOTRIC,STATUS'["PAYABLE",$$FIND^PSOREJUT(RX,RFL,,,1) Q 0  ; unresolved TRI/CVA rejects - no print  *421
"RTN","PSOBPSU2",141,0)
 I PSOTRIC,STATUS'["PAYABLE",$$TRIAUD^PSOREJU3(RX,RFL) Q 1    ; allow to print - on TRI/CVA Audit log  *421
"RTN","PSOBPSU2",142,0)
 ;
"RTN","PSOBPSU2",143,0)
 ;DUR (88)/RTS (79)/RRR reject codes are not allowed to print until resolved.
"RTN","PSOBPSU2",144,0)
 I $$FIND^PSOREJUT(RX,RFL,,"79,88",,1) Q 0
"RTN","PSOBPSU2",145,0)
 ;
"RTN","PSOBPSU2",146,0)
 Q 1
"RTN","PSOBPSU2",147,0)
 ;
"RTN","PSOBPSU2",148,0)
 ;Description:
"RTN","PSOBPSU2",149,0)
 ;This function checks to see if a RX should be submitted to ECME
"RTN","PSOBPSU2",150,0)
 ;Submit when:
"RTN","PSOBPSU2",151,0)
 ;  RX/Fill was not submitted before (STATUS="")
"RTN","PSOBPSU2",152,0)
 ;  Previous submission had Host Reject Error Code(s)
"RTN","PSOBPSU2",153,0)
 ;Input:
"RTN","PSOBPSU2",154,0)
 ;  RX = Prescription file #52 IEN
"RTN","PSOBPSU2",155,0)
 ;  RFL = Refill number
"RTN","PSOBPSU2",156,0)
 ;Returns:
"RTN","PSOBPSU2",157,0)
 ;  1 = OK to resubmit
"RTN","PSOBPSU2",158,0)
 ;  0 = Don't resubmit
"RTN","PSOBPSU2",159,0)
ECMEST2(RX,RFL) ;
"RTN","PSOBPSU2",160,0)
 N STATUS
"RTN","PSOBPSU2",161,0)
 S STATUS=$$STATUS^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU2",162,0)
 ; Never submitted before, OK to submit
"RTN","PSOBPSU2",163,0)
 I STATUS="" Q 1
"RTN","PSOBPSU2",164,0)
 ; If status other than E REJECTED, don't resubmit
"RTN","PSOBPSU2",165,0)
 I STATUS'="E REJECTED" Q 0
"RTN","PSOBPSU2",166,0)
 ; Check for host reject codes(s)
"RTN","PSOBPSU2",167,0)
 Q $$HOSTREJ(RX,RFL,1)
"RTN","PSOBPSU2",168,0)
 ;
"RTN","PSOBPSU2",169,0)
 ;Description: ePharmacy
"RTN","PSOBPSU2",170,0)
 ;This subroutine checks an RX/FILL for Host Reject Errors returned
"RTN","PSOBPSU2",171,0)
 ;from previous ECME submissions. The host reject errors checked are M6, M8, NN, and 99.
"RTN","PSOBPSU2",172,0)
 ;Note that host reject errors do not pass to the pharmacy reject worklist so it's necessary
"RTN","PSOBPSU2",173,0)
 ;to check ECME for these type errors.
"RTN","PSOBPSU2",174,0)
 ;Input: 
"RTN","PSOBPSU2",175,0)
 ; RX = Prescription File IEN
"RTN","PSOBPSU2",176,0)
 ; RFL = Refill
"RTN","PSOBPSU2",177,0)
 ; ONE = Either 1 or 0 - Defaults to 1
"RTN","PSOBPSU2",178,0)
 ; If 1, At least ONE reject code associated with the RX/FILL must 
"RTN","PSOBPSU2",179,0)
 ;   match either M6, M8, NN, or 99.
"RTN","PSOBPSU2",180,0)
 ; If 0, ALL reject codes must match either M6, M8, NN, or 99
"RTN","PSOBPSU2",181,0)
 ; REJ = (o) reject information from called from routine to be passed back. (contains data returned from DUR1^BPSNCPD3)
"RTN","PSOBPSU2",182,0)
 ;Return:
"RTN","PSOBPSU2",183,0)
 ; 0 = no host rejects exists based on ONE parameter
"RTN","PSOBPSU2",184,0)
 ; 1 = host reject exists based on ONE parameter
"RTN","PSOBPSU2",185,0)
HOSTREJ(RX,RFL,ONE) ; called from PSXRPPL2 and this routine
"RTN","PSOBPSU2",186,0)
 N IDX,TXT,CODE,HRCODE,HRQUIT,RETV,REJ,I
"RTN","PSOBPSU2",187,0)
 S IDX="",(RETV,HRQUIT)=0
"RTN","PSOBPSU2",188,0)
 I '$D(ONE) S ONE=1
"RTN","PSOBPSU2",189,0)
 ;for print from suspense there will only be primary insurance or an index of 1 in REJ array
"RTN","PSOBPSU2",190,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ) ; Get reject list from last submission if not present
"RTN","PSOBPSU2",191,0)
 S TXT=$G(REJ(1,"REJ CODE LST"))
"RTN","PSOBPSU2",192,0)
 Q:TXT="" 0
"RTN","PSOBPSU2",193,0)
 I ONE=0,TXT'["," S ONE=1
"RTN","PSOBPSU2",194,0)
 F I=1:1:$L(TXT,",") S CODE=$P(TXT,",",I) D  Q:HRQUIT
"RTN","PSOBPSU2",195,0)
 . F HRCODE=99,"M6","M8","NN" D  Q:HRQUIT
"RTN","PSOBPSU2",196,0)
 . . I CODE=HRCODE S RETV=1 I ONE S HRQUIT=1 Q
"RTN","PSOBPSU2",197,0)
 . . I CODE'=HRCODE,RETV=1 S RETV=0,HRQUIT=1 Q
"RTN","PSOBPSU2",198,0)
 Q RETV
"RTN","PSOBPSU2",199,0)
 ;
"RTN","PSOBPSU2",200,0)
 ;Description: 
"RTN","PSOBPSU2",201,0)
 ;Input: RX = Prescription file #52 IEN
"RTN","PSOBPSU2",202,0)
 ; RFL = Refill number
"RTN","PSOBPSU2",203,0)
 ;Returns: A value of 0 (zero) will be returned when reject codes M6, M8,
"RTN","PSOBPSU2",204,0)
 ;NN, and 99 are present OR if on susp hold which means the prescription should not 
"RTN","PSOBPSU2",205,0)
 ;be printed from suspense. Otherwise, a value of 1(one) will be returned.
"RTN","PSOBPSU2",206,0)
DUR(RX,RFL) ;
"RTN","PSOBPSU2",207,0)
 N REJ,IDX,TXT,CODE,SHOLD,SHCODE,ESTAT,SHDT
"RTN","PSOBPSU2",208,0)
 S SHOLD=1,IDX=""
"RTN","PSOBPSU2",209,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",210,0)
 S SHDT=$$SHDT(RX,RFL) ; Get suspense hold date for rx/refill
"RTN","PSOBPSU2",211,0)
 I SHDT'="",SHDT'<$$FMADD^XLFDT(DT,1) Q 0
"RTN","PSOBPSU2",212,0)
 I $$HOSTREJ^PSOBPSU2(RX,RFL,1) I SHDT="" S SHOLD=0 D SHDTLOG(RX,RFL)
"RTN","PSOBPSU2",213,0)
 Q SHOLD
"RTN","PSOBPSU2",214,0)
 ;
"RTN","PSOBPSU2",215,0)
 ;Description: This subroutine sets the EPHARMACY SUSPENSE HOLD DATE field
"RTN","PSOBPSU2",216,0)
 ;for the rx or refill to tomorrow and adds an entry to the SUSPENSE Activity Log.
"RTN","PSOBPSU2",217,0)
 ;Input: RX = Prescription File IEN
"RTN","PSOBPSU2",218,0)
 ; RFL = Refill
"RTN","PSOBPSU2",219,0)
SHDTLOG(RX,RFL) ;
"RTN","PSOBPSU2",220,0)
 N DA,DIE,DR,COMM,SHDT
"RTN","PSOBPSU2",221,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",222,0)
 S SHDT=$$FMADD^XLFDT(DT,1)
"RTN","PSOBPSU2",223,0)
 S COMM="SUSPENSE HOLD until "_$$FMTE^XLFDT(SHDT,"2D")_" due to host reject error."
"RTN","PSOBPSU2",224,0)
 I RFL=0 S DA=RX,DIE="^PSRX(",DR="86///"_SHDT D ^DIE
"RTN","PSOBPSU2",225,0)
 E  S DA=RFL,DA(1)=RX,DIE="^PSRX("_DA(1)_",1,",DR="86///"_SHDT D ^DIE
"RTN","PSOBPSU2",226,0)
 D RXACT(RX,RFL,COMM,"S",+$G(DUZ)) ; Create Activity Log entry
"RTN","PSOBPSU2",227,0)
 Q
"RTN","PSOBPSU2",228,0)
 ;
"RTN","PSOBPSU2",229,0)
 ;Description: This function returns the EPHARMACY SUSPENSE HOLD DATE field
"RTN","PSOBPSU2",230,0)
 ;for the rx or refill
"RTN","PSOBPSU2",231,0)
 ;Input: RX = Prescription File IEN
"RTN","PSOBPSU2",232,0)
 ; RFL = Refill
"RTN","PSOBPSU2",233,0)
SHDT(RX,RFL) ;
"RTN","PSOBPSU2",234,0)
 N FILE,IENS
"RTN","PSOBPSU2",235,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",236,0)
 S FILE=$S(RFL=0:52,1:52.1),IENS=$S(RFL=0:RX_",",1:RFL_","_RX_",")
"RTN","PSOBPSU2",237,0)
 Q $$GET1^DIQ(FILE,IENS,86,"I")
"RTN","PSOBPSU2",238,0)
 ;
"RTN","PSOBPSU2",239,0)
ELOG(RESP) ; - due to size of PSOBPSU1 exceeding limit 
"RTN","PSOBPSU2",240,0)
 ; -Logs an ECME Activity Log if Rx Qty is different than Billing Qty
"RTN","PSOBPSU2",241,0)
 I '$G(RESP),$T(NCPDPQTY^PSSBPSUT)'="" D
"RTN","PSOBPSU2",242,0)
 . N DRUG,RXQTY,BLQTY,BLDU,Z
"RTN","PSOBPSU2",243,0)
 . S DRUG=$$GET1^DIQ(52,RX,6,"I")
"RTN","PSOBPSU2",244,0)
 . S RXQTY=$S('RFL:$$GET1^DIQ(52,RX,7,"I"),1:$$GET1^DIQ(52.1,RFL_","_RX,1))/1
"RTN","PSOBPSU2",245,0)
 . S Z=$$NCPDPQTY^PSSBPSUT(DRUG,RXQTY),BLQTY=Z/1,BLDU=$P(Z,"^",2)
"RTN","PSOBPSU2",246,0)
 . I RXQTY'=BLQTY D
"RTN","PSOBPSU2",247,0)
 . . D RXACT(RX,RFL,"QUANTITY SUBMITTED ON CLAIM: "_$J(BLQTY,0,$L($P(BLQTY,".",2)))_" ("_BLDU_")","M",DUZ)
"RTN","PSOBPSU2",248,0)
 Q
"RTN","PSOBPSU2",249,0)
 ;
"RTN","PSOBPSU2",250,0)
UPDFL(RXREC,SUB,INDT) ;update fill date with release date when NDC changes at CMOP and OPAI auto-release
"RTN","PSOBPSU2",251,0)
 ;Input: RXREC = Prescription File IEN
"RTN","PSOBPSU2",252,0)
 ;         SUB = Refill
"RTN","PSOBPSU2",253,0)
 ;        INDT = Release date
"RTN","PSOBPSU2",254,0)
 N DA,DIE,DR,DTOUT,DUOUT,PSOX,SFN,DEAD,XOK,OLD,X,II,EXDAT,OFILLD,COM,CNT,RFCNT,RF  ;*459 - REMOVED SUB
"RTN","PSOBPSU2",255,0)
 S DEAD=0,SFN=""
"RTN","PSOBPSU2",256,0)
 S EXDAT=INDT I EXDAT["." S EXDAT=$P(EXDAT,".")
"RTN","PSOBPSU2",257,0)
 I '$D(SUB) S SUB=0 F II=0:0 S II=$O(^PSRX(RXREC,1,II)) Q:'II  S SUB=+II
"RTN","PSOBPSU2",258,0)
 I 'SUB S OFILLD=$$GET1^DIQ(52,RXREC,22,"I") Q:OFILLD=EXDAT  D
"RTN","PSOBPSU2",259,0)
 .S (X,OLD)=$P(^PSRX(RXREC,2),"^",2),DA=RXREC,DR="22///"_EXDAT_";101///"_EXDAT,DIE=52
"RTN","PSOBPSU2",260,0)
 .D ^DIE K DIE,DA
"RTN","PSOBPSU2",261,0)
 I SUB S (OLD,X)=+$P($G(^PSRX(RXREC,1,SUB,0)),"^"),DA(1)=RXREC,DA=SUB,OFILLD=$$GET1^DIQ(52.1,DA_","_RXREC,.01,"I") Q:OFILLD=EXDAT  D
"RTN","PSOBPSU2",262,0)
 . S DIE="^PSRX("_DA(1)_",1,",DR=".01///"_EXDAT D ^DIE K DIE S $P(^PSRX(RXREC,3),"^")=EXDAT
"RTN","PSOBPSU2",263,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","PSOBPSU2",264,0)
 S DA=RXREC
"RTN","PSOBPSU2",265,0)
 D AREC^PSOSUCH1
"RTN","PSOBPSU2",266,0)
FIN ;
"RTN","PSOBPSU2",267,0)
 Q
"RTN","PSOBPSU3")
0^5^B98947553
"RTN","PSOBPSU3",1,0)
PSOBPSU3 ;ALB/CFS - BPS (ECME) Utilities 3 ;08/27/15
"RTN","PSOBPSU3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**448,482,512**;DEC 1997;Build 44
"RTN","PSOBPSU3",3,0)
 ; Reference to ^BPSVRX supported by IA #5723
"RTN","PSOBPSU3",4,0)
 ; Reference to ^BPSPSOU1 supported by IA #6248
"RTN","PSOBPSU3",5,0)
 ; Reference to $$ADDLFLDS^BPSRES1 supported by IA #6938
"RTN","PSOBPSU3",6,0)
 ; Reference to $$SAVE^BPSRES1 supported by IA #6938
"RTN","PSOBPSU3",7,0)
 ;
"RTN","PSOBPSU3",8,0)
RES(RXIEN,DFN) ; Resubmit a claim action from PSO HIDDEN ACTIONS
"RTN","PSOBPSU3",9,0)
 N ACTION,DIRUT,PSOCOB,PSOFILL,PSOFL,PSOFLZ,PSOELIG,REVREAS,VALID
"RTN","PSOBPSU3",10,0)
 S PSOFILL=$$FILL(RXIEN,DFN,.PSOFL)
"RTN","PSOBPSU3",11,0)
 I $D(DIRUT) G END
"RTN","PSOBPSU3",12,0)
 I PSOFILL="" W !!,"No claim was ever submitted for this prescription. Cannot resubmit." D PAUSE^VALM1 G END
"RTN","PSOBPSU3",13,0)
 S PSOELIG=$$ELIGDISP^PSOREJP1(RXIEN,PSOFILL)
"RTN","PSOBPSU3",14,0)
 ; Validate the claim.
"RTN","PSOBPSU3",15,0)
 S VALID=$$VAL^BPSPSOU1(RXIEN,PSOFILL,PSOELIG,"RES",.PSOCOB,.REVREAS) ;DBIA #6248
"RTN","PSOBPSU3",16,0)
 I 'VALID G END
"RTN","PSOBPSU3",17,0)
 I $$RXDEL(RXIEN,PSOFILL) D  D PAUSE^VALM1 G END
"RTN","PSOBPSU3",18,0)
 . W !!,"The claim cannot be Resubmitted since it has been deleted in Pharmacy."
"RTN","PSOBPSU3",19,0)
 ; Resubmit the claim to ECME
"RTN","PSOBPSU3",20,0)
 D ECMESND^PSOBPSU1(RXIEN,PSOFILL,,"ED",,,"RESUBMIT FROM RX EDIT SCREEN","","","","","","","",$G(PSOCOB))
"RTN","PSOBPSU3",21,0)
 I $$PTLBL^PSOREJP2(RXIEN,PSOFILL) S PSORX("PSOL",1)=RXIEN_","  ; Add Rx to Queue List
"RTN","PSOBPSU3",22,0)
 D PAUSE^VALM1
"RTN","PSOBPSU3",23,0)
 S VALMBCK="R"
"RTN","PSOBPSU3",24,0)
 Q
"RTN","PSOBPSU3",25,0)
 ;
"RTN","PSOBPSU3",26,0)
FILL(RXIEN,DFN,PSOFL) ;
"RTN","PSOBPSU3",27,0)
 N CNT,DIR,FILL,FLDT,PSOELIG,PSOET,PSOSTR,REFILL,RELDT,RF,RXNUM,X,Y
"RTN","PSOBPSU3",28,0)
 D FULL^VALM1
"RTN","PSOBPSU3",29,0)
 I '$G(RXIEN)!'$G(DFN) Q ""
"RTN","PSOBPSU3",30,0)
 ;
"RTN","PSOBPSU3",31,0)
 S RXNUM=$P($G(^PSRX(RXIEN,0)),U)
"RTN","PSOBPSU3",32,0)
 K PSOFL,PSOFLZ
"RTN","PSOBPSU3",33,0)
 ; Get refill dates and release dates
"RTN","PSOBPSU3",34,0)
 S REFILL=0 F  S REFILL=$O(^PSRX(RXIEN,1,REFILL)) Q:'REFILL  D
"RTN","PSOBPSU3",35,0)
 . S FLDT=$P($G(^PSRX(RXIEN,1,REFILL,0)),U)\1
"RTN","PSOBPSU3",36,0)
 . S RELDT=$P($G(^PSRX(RXIEN,1,REFILL,0)),U,18)\1
"RTN","PSOBPSU3",37,0)
 . S PSOFLZ(REFILL)=FLDT_U_RELDT
"RTN","PSOBPSU3",38,0)
 ; Get orignal RX fill date and release date
"RTN","PSOBPSU3",39,0)
 S FLDT=$P($G(^PSRX(RXIEN,2)),U)\1
"RTN","PSOBPSU3",40,0)
 S RELDT=$P($G(^PSRX(RXIEN,2)),U,13)\1
"RTN","PSOBPSU3",41,0)
 S PSOFLZ(0)=FLDT_U_RELDT
"RTN","PSOBPSU3",42,0)
 ; Check for any deleted fills that have ECME activity
"RTN","PSOBPSU3",43,0)
 D RFL^BPSVRX(RXIEN,.PSOFL)  ; DBIA #5723
"RTN","PSOBPSU3",44,0)
 I '$D(PSOFL) Q "" ; Not in BPS transaction file.
"RTN","PSOBPSU3",45,0)
 S RF="" F  S RF=$O(PSOFL(RF)) Q:RF=""  I '$D(PSOFLZ(RF)) S PSOFLZ(RF)=0_U_0
"RTN","PSOBPSU3",46,0)
 ;
"RTN","PSOBPSU3",47,0)
 S DIR(0)="S"
"RTN","PSOBPSU3",48,0)
 S DIR("L",1)="Rx# "_RXNUM_" has the following fills:"
"RTN","PSOBPSU3",49,0)
 S DIR("L",2)=""
"RTN","PSOBPSU3",50,0)
 S DIR("L",3)="    Fill#   Fill Date     Release Date"
"RTN","PSOBPSU3",51,0)
 S DIR("L",4)="    -----   ----------    ------------"
"RTN","PSOBPSU3",52,0)
 S CNT=0,PSOSTR=""
"RTN","PSOBPSU3",53,0)
 S RF="" F  S RF=$O(PSOFLZ(RF)) Q:RF=""  D
"RTN","PSOBPSU3",54,0)
 . S CNT=CNT+1
"RTN","PSOBPSU3",55,0)
 . S FLDT=$$FMTE^XLFDT($P(PSOFLZ(RF),U,1),"5Z") I 'FLDT S FLDT="    -     "
"RTN","PSOBPSU3",56,0)
 . S RELDT=$$FMTE^XLFDT($P(PSOFLZ(RF),U,2),"5Z") I 'RELDT S RELDT="    -     "
"RTN","PSOBPSU3",57,0)
 . I 'FLDT,'RELDT S (FLDT,RELDT)=" Deleted  "
"RTN","PSOBPSU3",58,0)
 . S $P(PSOSTR,";",CNT)=RF_":"_FLDT_"    "_RELDT
"RTN","PSOBPSU3",59,0)
 . S DIR("L",CNT+4)=$J(RF,7)_"     "_FLDT_"    "_RELDT
"RTN","PSOBPSU3",60,0)
 . Q
"RTN","PSOBPSU3",61,0)
 S DIR("L")=" "
"RTN","PSOBPSU3",62,0)
 S $P(DIR(0),U,2)=PSOSTR
"RTN","PSOBPSU3",63,0)
 S DIR("A")="Select Fill Number"
"RTN","PSOBPSU3",64,0)
 S DIR("B")=$O(PSOFLZ(""),-1)
"RTN","PSOBPSU3",65,0)
 I CNT=1 D
"RTN","PSOBPSU3",66,0)
 . S $P(DIR("L",1)," ",$L(DIR("L",1)," "))="fill:"    ; singular
"RTN","PSOBPSU3",67,0)
 . Q
"RTN","PSOBPSU3",68,0)
 W ! D ^DIR K DIR
"RTN","PSOBPSU3",69,0)
 S FILL=Y
"RTN","PSOBPSU3",70,0)
 Q FILL
"RTN","PSOBPSU3",71,0)
 ;
"RTN","PSOBPSU3",72,0)
VER(RXIEN,DFN) ; -- VER hidden action under protocol PSO HIDDEN ACTIONS
"RTN","PSOBPSU3",73,0)
 D FULL^VALM1
"RTN","PSOBPSU3",74,0)
 K ^TMP("PSOHDR_ARCHIVE",$J)
"RTN","PSOBPSU3",75,0)
 M ^TMP("PSOHDR_ARCHIVE",$J)=^TMP("PSOHDR",$J)
"RTN","PSOBPSU3",76,0)
 S BPSVRX("RXIEN")=RXIEN
"RTN","PSOBPSU3",77,0)
 D ^BPSVRX  ;DBIA #5723
"RTN","PSOBPSU3",78,0)
 M ^TMP("PSOHDR",$J)=^TMP("PSOHDR_ARCHIVE",$J)
"RTN","PSOBPSU3",79,0)
 K ^TMP("PSOHDR_ARCHIVE",$J)
"RTN","PSOBPSU3",80,0)
 S VALMBCK="R"
"RTN","PSOBPSU3",81,0)
 Q
"RTN","PSOBPSU3",82,0)
 ;
"RTN","PSOBPSU3",83,0)
REV(RXIEN,DFN) ; Reverse a claim action from PSO HIDDEN ACTIONS
"RTN","PSOBPSU3",84,0)
 N DIRUT,PSOCOB,PSOFILL,PSOFL,PSOFLZ,PSOELIG,REVREAS,VALID
"RTN","PSOBPSU3",85,0)
 S PSOFILL=$$FILL(RXIEN,DFN,.PSOFL)
"RTN","PSOBPSU3",86,0)
 I $D(DIRUT) G END
"RTN","PSOBPSU3",87,0)
 I PSOFILL="" W !!,"No claim was ever submitted for this prescription. Cannot reverse." D PAUSE^VALM1 G END
"RTN","PSOBPSU3",88,0)
 S PSOELIG=$$ELIGDISP^PSOREJP1(RXIEN,PSOFILL)
"RTN","PSOBPSU3",89,0)
 ; Validate the claim.
"RTN","PSOBPSU3",90,0)
 S VALID=$$VAL^BPSPSOU1(RXIEN,PSOFILL,PSOELIG,"REV",.PSOCOB,.REVREAS) ;DBIA #6248
"RTN","PSOBPSU3",91,0)
 I 'VALID G END
"RTN","PSOBPSU3",92,0)
 I $$RXDEL(RXIEN,PSOFILL) D  D PAUSE^VALM1 G END
"RTN","PSOBPSU3",93,0)
 . W !!,"The claim cannot be Reversed since it has been deleted in Pharmacy."
"RTN","PSOBPSU3",94,0)
 ; Submit the reversal to ECME
"RTN","PSOBPSU3",95,0)
 D ECMESND^PSOBPSU1(RXIEN,PSOFILL,"","OREV","","",REVREAS,"","","","","","","",$G(PSOCOB))
"RTN","PSOBPSU3",96,0)
 D PAUSE^VALM1
"RTN","PSOBPSU3",97,0)
 S VALMBCK="R"
"RTN","PSOBPSU3",98,0)
 Q
"RTN","PSOBPSU3",99,0)
 ;
"RTN","PSOBPSU3",100,0)
RXDEL(RXIEN,PSOFILL) ; EP - $$ is RX deleted?
"RTN","PSOBPSU3",101,0)
 ; For refills:  if the refill multiple is gone, it's been "deleted"
"RTN","PSOBPSU3",102,0)
 I $G(PSOFILL),'$P($G(^PSRX(RXIEN,1,PSOFILL,0)),U) Q 1
"RTN","PSOBPSU3",103,0)
 ; For first fill: look at the STATUS flag
"RTN","PSOBPSU3",104,0)
 I $P($G(^PSRX(RXIEN,0)),U,1)="" Q 1 ; shouldn't be missing but is
"RTN","PSOBPSU3",105,0)
 N X S X=$P($G(^PSRX(RXIEN,"STA")),U,1)
"RTN","PSOBPSU3",106,0)
 Q X=13 ; if status is DELETED
"RTN","PSOBPSU3",107,0)
 ;
"RTN","PSOBPSU3",108,0)
END ;
"RTN","PSOBPSU3",109,0)
 S VALMBCK="R"
"RTN","PSOBPSU3",110,0)
 Q
"RTN","PSOBPSU3",111,0)
 ;
"RTN","PSOBPSU3",112,0)
ECS(PSORX,PSOFILL,PSOSCREEN) ; Edit Claim to be Submitted.
"RTN","PSOBPSU3",113,0)
 ;
"RTN","PSOBPSU3",114,0)
 ; Input:  PSORX = Prescription IEN, pointer to file #52, ^PSRX
"RTN","PSOBPSU3",115,0)
 ;         PSOFILL = Refill#.  If not passed in, then the user
"RTN","PSOBPSU3",116,0)
 ;            will be prompted to select a fill.
"RTN","PSOBPSU3",117,0)
 ;         PSOSCREEN = 1 if coming from the Medication Profile
"RTN","PSOBPSU3",118,0)
 ;            Screen, 2 if coming from the Reject Info Screen
"RTN","PSOBPSU3",119,0)
 ;
"RTN","PSOBPSU3",120,0)
 ; This entry point is associated with the action ECS Edit Claim
"RTN","PSOBPSU3",121,0)
 ; Submitted.  The user is asked to select a date to be used as the
"RTN","PSOBPSU3",122,0)
 ; date of service on the claim.  The user is then able to select
"RTN","PSOBPSU3",123,0)
 ; one or more NCPDP fields to be added to the claim.  The claim is
"RTN","PSOBPSU3",124,0)
 ; then resubmitted.
"RTN","PSOBPSU3",125,0)
 ;
"RTN","PSOBPSU3",126,0)
 N DIR,DIRUT,PSOADDLFLDS,PSOALTXT,PSOCLAIM,PSOCOB,PSODATESELECTED
"RTN","PSOBPSU3",127,0)
 N PSODOS,PSOELIG,PSOIEN59,PSOQUIT,PSORESPONSE,PSOVALID,PSOVRIEN
"RTN","PSOBPSU3",128,0)
 S PSOCOB=""
"RTN","PSOBPSU3",129,0)
 S PSOQUIT=0
"RTN","PSOBPSU3",130,0)
 ;
"RTN","PSOBPSU3",131,0)
 I '$D(@(VALMAR)) G ECSQUIT
"RTN","PSOBPSU3",132,0)
 D FULL^VALM1
"RTN","PSOBPSU3",133,0)
 ;
"RTN","PSOBPSU3",134,0)
 ; If Fill was not passed in, then prompt the user to select a fill.
"RTN","PSOBPSU3",135,0)
 ; If the user exited out or there was not a fill with ECME activity,
"RTN","PSOBPSU3",136,0)
 ; then exit out.
"RTN","PSOBPSU3",137,0)
 ;
"RTN","PSOBPSU3",138,0)
 I $G(PSOFILL)="" D  I PSOQUIT=-1 G ECSQUIT
"RTN","PSOBPSU3",139,0)
 . S PSOFILL=$$FILL(PSORX,DFN)
"RTN","PSOBPSU3",140,0)
 . I $D(DIRUT) S PSOQUIT=-1 Q
"RTN","PSOBPSU3",141,0)
 . I PSOFILL="" D
"RTN","PSOBPSU3",142,0)
 . . W !!,"No claim was ever submitted for this prescription.  Cannot resubmit."
"RTN","PSOBPSU3",143,0)
 . . D PAUSE^VALM1
"RTN","PSOBPSU3",144,0)
 . . S PSOQUIT=-1
"RTN","PSOBPSU3",145,0)
 . . Q
"RTN","PSOBPSU3",146,0)
 . Q
"RTN","PSOBPSU3",147,0)
 ;
"RTN","PSOBPSU3",148,0)
 ; Determine the Transaction IEN and Claim IEN.
"RTN","PSOBPSU3",149,0)
 ;
"RTN","PSOBPSU3",150,0)
 S PSOIEN59=$$CLAIM^BPSBUTL(PSORX,PSOFILL)  ; ICR# 4719
"RTN","PSOBPSU3",151,0)
 S PSOCLAIM=$P(PSOIEN59,U,2)
"RTN","PSOBPSU3",152,0)
 S PSOIEN59=$P(PSOIEN59,U,1)
"RTN","PSOBPSU3",153,0)
 I PSOIEN59=""!(PSOCLAIM="") D  G ECSQUIT
"RTN","PSOBPSU3",154,0)
 . W !!,"No Initial Claim Submission Found - Data Elements are NOT Editable for Re-"
"RTN","PSOBPSU3",155,0)
 . W !,"Submission"
"RTN","PSOBPSU3",156,0)
 . D PAUSE^VALM1
"RTN","PSOBPSU3",157,0)
 . Q
"RTN","PSOBPSU3",158,0)
 ;
"RTN","PSOBPSU3",159,0)
 ; Disallow resubmission if Fill or Rx has been deleted.
"RTN","PSOBPSU3",160,0)
 ;
"RTN","PSOBPSU3",161,0)
 I $$RXDEL(PSORX,PSOFILL) D  G ECSQUIT
"RTN","PSOBPSU3",162,0)
 . W !!,"The claim cannot be Resubmitted since it has been deleted in Pharmacy."
"RTN","PSOBPSU3",163,0)
 . D PAUSE^VALM1
"RTN","PSOBPSU3",164,0)
 . Q
"RTN","PSOBPSU3",165,0)
 ;
"RTN","PSOBPSU3",166,0)
 ; $$VAL^BPSPSOU1 performs several checks to determine whether the
"RTN","PSOBPSU3",167,0)
 ; claim can be resubmitted.
"RTN","PSOBPSU3",168,0)
 ;
"RTN","PSOBPSU3",169,0)
 S PSOELIG=$$ELIGDISP^PSOREJP1(PSORX,PSOFILL)
"RTN","PSOBPSU3",170,0)
 S PSOVALID=$$VAL^BPSPSOU1(PSORX,PSOFILL,PSOELIG,"RES",.PSOCOB,"",1)  ; ICR# 6248
"RTN","PSOBPSU3",171,0)
 I 'PSOVALID G ECSQUIT
"RTN","PSOBPSU3",172,0)
 ;
"RTN","PSOBPSU3",173,0)
 W !!,"Enter ^ at any prompt to exit"
"RTN","PSOBPSU3",174,0)
 ;
"RTN","PSOBPSU3",175,0)
 ; If there is an unresolved reject for this Rx/Fill, ask user to
"RTN","PSOBPSU3",176,0)
 ; confirm that they wish to resolve the reject and resubmit a claim.
"RTN","PSOBPSU3",177,0)
 ;
"RTN","PSOBPSU3",178,0)
 S PSOQUIT=0
"RTN","PSOBPSU3",179,0)
 I $$FIND^PSOREJUT(PSORX,PSOFILL) D  I PSOQUIT'=1 G ECSQUIT
"RTN","PSOBPSU3",180,0)
 . W !!,"     When you confirm, a new claim will be submitted for"
"RTN","PSOBPSU3",181,0)
 . W !,"     the prescription and this REJECT will be marked"
"RTN","PSOBPSU3",182,0)
 . W !,"     resolved."
"RTN","PSOBPSU3",183,0)
 . S PSOQUIT=$$YESNO^PSOREJP3("     Confirm","YES")
"RTN","PSOBPSU3",184,0)
 . Q
"RTN","PSOBPSU3",185,0)
 ;
"RTN","PSOBPSU3",186,0)
 ; Allow user to select a date to use as the Date of Service.
"RTN","PSOBPSU3",187,0)
 ; PSODATESELECTED will be reset to 1 if the user is prompted to
"RTN","PSOBPSU3",188,0)
 ; select a date within $$EDITDT and the user selected a date
"RTN","PSOBPSU3",189,0)
 ; not equal to the Release Date; otherwise it will be left as 0.
"RTN","PSOBPSU3",190,0)
 ;
"RTN","PSOBPSU3",191,0)
 S PSOALTXT=""
"RTN","PSOBPSU3",192,0)
 S PSODATESELECTED=0
"RTN","PSOBPSU3",193,0)
 S PSODOS=$$EDITDT(PSORX,PSOFILL,PSOCOB,PSOCLAIM,PSOIEN59,.PSOALTXT,.PSODATESELECTED)
"RTN","PSOBPSU3",194,0)
 I PSODOS="^" G ECSQUIT
"RTN","PSOBPSU3",195,0)
 ;
"RTN","PSOBPSU3",196,0)
 ; Allow user to add to the claim additional fields which are
"RTN","PSOBPSU3",197,0)
 ; not on the payer sheet.
"RTN","PSOBPSU3",198,0)
 ;
"RTN","PSOBPSU3",199,0)
 S PSOQUIT=$$ADDLFLDS^BPSRES1(PSOCLAIM,PSOIEN59,.PSOADDLFLDS,$S(PSODATESELECTED:PSODOS,1:""))  ; IA 6938
"RTN","PSOBPSU3",200,0)
 I PSOQUIT=-1 G ECSQUIT
"RTN","PSOBPSU3",201,0)
 ;
"RTN","PSOBPSU3",202,0)
 ; If the user did not add any additional NCPDP fields to the claim
"RTN","PSOBPSU3",203,0)
 ; ('PSOQUIT), and the user did not select a data of service
"RTN","PSOBPSU3",204,0)
 ; ('PSODATESELECTED), then display a message and Quit.
"RTN","PSOBPSU3",205,0)
 ;
"RTN","PSOBPSU3",206,0)
 I 'PSOQUIT,'PSODATESELECTED D  G ECSQUIT
"RTN","PSOBPSU3",207,0)
 . W !!,"No value changed.  A claim will not be submitted.",!
"RTN","PSOBPSU3",208,0)
 . N DIR
"RTN","PSOBPSU3",209,0)
 . S DIR(0)="E"
"RTN","PSOBPSU3",210,0)
 . S DIR("A")="Press enter to continue"
"RTN","PSOBPSU3",211,0)
 . D ^DIR
"RTN","PSOBPSU3",212,0)
 . Q
"RTN","PSOBPSU3",213,0)
 ;
"RTN","PSOBPSU3",214,0)
 ; Require the user to confirm they wish to continue.
"RTN","PSOBPSU3",215,0)
 ;
"RTN","PSOBPSU3",216,0)
 W !!,"A claim will be submitted now."
"RTN","PSOBPSU3",217,0)
 S PSOQUIT=$$YESNO^PSOREJP3("Are you sure (Y/N)","Y")
"RTN","PSOBPSU3",218,0)
 I PSOQUIT'=1 G ECSQUIT
"RTN","PSOBPSU3",219,0)
 ;
"RTN","PSOBPSU3",220,0)
 ; Save the list of additional fields in file# 9002313.511,
"RTN","PSOBPSU3",221,0)
 ; BPS NCPDP OVERRIDES.
"RTN","PSOBPSU3",222,0)
 ;
"RTN","PSOBPSU3",223,0)
 I $D(PSOADDLFLDS) D  I PSOQUIT=-1 G ECSQUIT
"RTN","PSOBPSU3",224,0)
 . S PSOQUIT=$$SAVE^BPSRES1("ECS",PSOIEN59,.PSOADDLFLDS,.PSOVRIEN)  ; IA 6938
"RTN","PSOBPSU3",225,0)
 . Q
"RTN","PSOBPSU3",226,0)
 ;
"RTN","PSOBPSU3",227,0)
 ; Call ECMESND^PSOBPSU1 to reverse the existing claim and submit a new
"RTN","PSOBPSU3",228,0)
 ; claim.  The additional fields indicated by the user will be added to
"RTN","PSOBPSU3",229,0)
 ; the claim in XLOOP^BPSOSCF and XLOOP^BPSOSH2.
"RTN","PSOBPSU3",230,0)
 ;
"RTN","PSOBPSU3",231,0)
 D ECMESND^PSOBPSU1(PSORX,PSOFILL,PSODOS,"ED","","","RX EDITED","","",.PSORESPONSE,"",PSOALTXT,"","",PSOCOB,$G(PSOVRIEN(1)))
"RTN","PSOBPSU3",232,0)
 ;
"RTN","PSOBPSU3",233,0)
 ; If the claim submission was unsuccessful, then PSORESPONSE will
"RTN","PSOBPSU3",234,0)
 ; not be blank.  Display the reason it failed, then quit out.
"RTN","PSOBPSU3",235,0)
 ;
"RTN","PSOBPSU3",236,0)
 I $G(PSORESPONSE) D  G ECSQUIT
"RTN","PSOBPSU3",237,0)
 . W !!?10,"Claim could not be submitted.  Please try again later!"
"RTN","PSOBPSU3",238,0)
 . W !,?10,"Reason: ",$S($P(PSORESPONSE,"^",2)="":"UNKNOWN",1:$P(PSORESPONSE,"^",2)),$C(7)
"RTN","PSOBPSU3",239,0)
 . D PAUSE^VALM1
"RTN","PSOBPSU3",240,0)
 . Q
"RTN","PSOBPSU3",241,0)
 ;
"RTN","PSOBPSU3",242,0)
 ; Conditionally prompt the user "Print Label?".  If user wishes to
"RTN","PSOBPSU3",243,0)
 ; print a label, then either put the Rx on queue to be printed when
"RTN","PSOBPSU3",244,0)
 ; the user leaves the screen (if on Medication Profile Screen) or
"RTN","PSOBPSU3",245,0)
 ; print the label now (if on the Reject Info Screen).
"RTN","PSOBPSU3",246,0)
 ;
"RTN","PSOBPSU3",247,0)
 I $$PTLBL^PSOREJP2(PSORX,PSOFILL) D
"RTN","PSOBPSU3",248,0)
 . I PSOSCREEN=1 S PSORX("PSOL",1)=PSORX_","
"RTN","PSOBPSU3",249,0)
 . I PSOSCREEN=2 D PRINT^PSOREJP3(PSORX,PSOFILL)
"RTN","PSOBPSU3",250,0)
 . Q
"RTN","PSOBPSU3",251,0)
 ;
"RTN","PSOBPSU3",252,0)
 ; If on the Reject Info Screen, then if the Status Filter
"RTN","PSOBPSU3",253,0)
 ; (PSOSTFLT) is not "B"oth, set the CHANGE flag to 1, which 
"RTN","PSOBPSU3",254,0)
 ; will cause the screen to be rebuilt.
"RTN","PSOBPSU3",255,0)
 ;
"RTN","PSOBPSU3",256,0)
 I PSOSCREEN=2,$D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOBPSU3",257,0)
 ;
"RTN","PSOBPSU3",258,0)
 D PAUSE^VALM1
"RTN","PSOBPSU3",259,0)
 ;
"RTN","PSOBPSU3",260,0)
ECSQUIT ;
"RTN","PSOBPSU3",261,0)
 ;
"RTN","PSOBPSU3",262,0)
 S VALMBCK="R"
"RTN","PSOBPSU3",263,0)
 ;
"RTN","PSOBPSU3",264,0)
 Q
"RTN","PSOBPSU3",265,0)
 ;
"RTN","PSOBPSU3",266,0)
EDITDT(PSORX,PSOFILL,PSOCOB,PSOCLAIM,PSOIEN59,PSOALTXT,PSODATESELECTED) ; Allow user to select Date of Service.
"RTN","PSOBPSU3",267,0)
 ;
"RTN","PSOBPSU3",268,0)
 ; Input:  PSORX = Prescription IEN, pointer to file# 52, ^PSRX
"RTN","PSOBPSU3",269,0)
 ;         PSOFILL = Refill#.  If not passed in, then the user
"RTN","PSOBPSU3",270,0)
 ;         PSOCOB = COB (1=Primary, etc.)
"RTN","PSOBPSU3",271,0)
 ;         PSOCLAIM = Claim IEN, pointer to file# 9002313.02, ^BPSC
"RTN","PSOBPSU3",272,0)
 ;         PSOIEN59 = Transaction IEN, pointer to file# 9002313.59
"RTN","PSOBPSU3",273,0)
 ;
"RTN","PSOBPSU3",274,0)
 ; Output: Selected Date of Service, in FileMan format
"RTN","PSOBPSU3",275,0)
 ;         PSOALTXT = Passed by reference; populate if user
"RTN","PSOBPSU3",276,0)
 ;           selects the Release Date
"RTN","PSOBPSU3",277,0)
 ;         PSODATESELECTED = Passed by reference; set to '1' if
"RTN","PSOBPSU3",278,0)
 ;           the user selected a date different from the Release
"RTN","PSOBPSU3",279,0)
 ;           Date.
"RTN","PSOBPSU3",280,0)
 ;
"RTN","PSOBPSU3",281,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT
"RTN","PSOBPSU3",282,0)
 N PSOCLAIM2,PSODATE,PSODATEARRAY,PSODESC,PSOFILLDT
"RTN","PSOBPSU3",283,0)
 N PSOIEN57,PSORELEASEDT,PSOTEMP,X,Y
"RTN","PSOBPSU3",284,0)
 ;
"RTN","PSOBPSU3",285,0)
 ; Determine the Release Date, the Fill Date, and all Dates of Service.
"RTN","PSOBPSU3",286,0)
 ; In order to present the entire list to the user in chronological
"RTN","PSOBPSU3",287,0)
 ; order, they will be put into an array.
"RTN","PSOBPSU3",288,0)
 ;
"RTN","PSOBPSU3",289,0)
 S PSORELEASEDT=$$RXRLDT^PSOBPSUT(PSORX,PSOFILL)\1
"RTN","PSOBPSU3",290,0)
 I +PSORELEASEDT=0 D  Q DT
"RTN","PSOBPSU3",291,0)
 . S X=$$FMTE^XLFDT(DT,"5D")
"RTN","PSOBPSU3",292,0)
 . W !!,"Rx is not released.  Date of Service will be ",X,"."
"RTN","PSOBPSU3",293,0)
 . S PSOALTXT="Date of Service ("_X_")"
"RTN","PSOBPSU3",294,0)
 . Q
"RTN","PSOBPSU3",295,0)
 S PSODATEARRAY(PSORELEASEDT,3)="Release Date"
"RTN","PSOBPSU3",296,0)
 S PSOFILLDT=$$RXFLDT^PSOBPSUT(PSORX,PSOFILL)\1
"RTN","PSOBPSU3",297,0)
 I PSOFILLDT'="" S PSODATEARRAY(PSOFILLDT,1)="Fill Date"
"RTN","PSOBPSU3",298,0)
 ;
"RTN","PSOBPSU3",299,0)
 ; Add to the array each Date of Service from all previous Claims,
"RTN","PSOBPSU3",300,0)
 ; which are identified by looping through all entries in the BPS Log
"RTN","PSOBPSU3",301,0)
 ; of Transactions file for the current BPS Transaction and pulling
"RTN","PSOBPSU3",302,0)
 ; the Claim for each entry and the Date of Service for that Claim.
"RTN","PSOBPSU3",303,0)
 ;
"RTN","PSOBPSU3",304,0)
 S PSOIEN57=0
"RTN","PSOBPSU3",305,0)
 F  S PSOIEN57=$O(^BPSTL("B",PSOIEN59,PSOIEN57)) Q:'PSOIEN57  D
"RTN","PSOBPSU3",306,0)
 . S PSOCLAIM2=$$GET1^DIQ(9002313.57,PSOIEN57,3,"I")
"RTN","PSOBPSU3",307,0)
 . S PSODATE=$$HL7TFM^XLFDT($$GET1^DIQ(9002313.02,PSOCLAIM2,401))
"RTN","PSOBPSU3",308,0)
 . I PSODATE'="" S PSODATEARRAY(PSODATE,2)="Date of Service"
"RTN","PSOBPSU3",309,0)
 . Q
"RTN","PSOBPSU3",310,0)
 ;
"RTN","PSOBPSU3",311,0)
 ; If the dates are all the same, then the user is not
"RTN","PSOBPSU3",312,0)
 ; allowed to select a date.
"RTN","PSOBPSU3",313,0)
 ;
"RTN","PSOBPSU3",314,0)
 S PSODATE=$O(PSODATEARRAY(""))
"RTN","PSOBPSU3",315,0)
 I $O(PSODATEARRAY(PSODATE))="" D  Q PSODATE
"RTN","PSOBPSU3",316,0)
 . W !
"RTN","PSOBPSU3",317,0)
 . S X=0
"RTN","PSOBPSU3",318,0)
 . F  S X=$O(PSODATEARRAY(PSODATE,X)) Q:'X  D
"RTN","PSOBPSU3",319,0)
 . . W !,?10,$$FMTE^XLFDT(PSODATE,"5D")," ",PSODATEARRAY(PSODATE,X)
"RTN","PSOBPSU3",320,0)
 . . Q
"RTN","PSOBPSU3",321,0)
 . W !!,"Claim will be submitted with ",$$FMTE^XLFDT(PSODATE,"5D")," Date of Service."
"RTN","PSOBPSU3",322,0)
 . S PSOALTXT="Date of Service ("_$$FMTE^XLFDT(PSODATE,"5D")_")"
"RTN","PSOBPSU3",323,0)
 . Q
"RTN","PSOBPSU3",324,0)
 ;
"RTN","PSOBPSU3",325,0)
 S DIR("?",1)="   Enter a date of service to override the date algorithm."
"RTN","PSOBPSU3",326,0)
 S DIR("?")="   The date algorithm will use the release date as a default value."
"RTN","PSOBPSU3",327,0)
 S DIR("A")="Date of Service"
"RTN","PSOBPSU3",328,0)
 S DIR("B")=1
"RTN","PSOBPSU3",329,0)
 S DIR(0)="S^"
"RTN","PSOBPSU3",330,0)
 S Y=0
"RTN","PSOBPSU3",331,0)
 S PSODATE=0
"RTN","PSOBPSU3",332,0)
 F  S PSODATE=$O(PSODATEARRAY(PSODATE)) Q:'PSODATE  D
"RTN","PSOBPSU3",333,0)
 . S X=0
"RTN","PSOBPSU3",334,0)
 . F  S X=$O(PSODATEARRAY(PSODATE,X)) Q:'X  D
"RTN","PSOBPSU3",335,0)
 . . S Y=Y+1
"RTN","PSOBPSU3",336,0)
 . . S PSOTEMP(Y)=PSODATE
"RTN","PSOBPSU3",337,0)
 . . S PSODESC=PSODATEARRAY(PSODATE,X)
"RTN","PSOBPSU3",338,0)
 . . S DIR(0)=DIR(0)_Y_":"_$$FMTE^XLFDT(PSODATE,"5D")_" "_PSODESC_";"
"RTN","PSOBPSU3",339,0)
 . . I PSODESC="Release Date" S DIR("B")=Y
"RTN","PSOBPSU3",340,0)
 . . Q
"RTN","PSOBPSU3",341,0)
 . Q
"RTN","PSOBPSU3",342,0)
 ;
"RTN","PSOBPSU3",343,0)
 D ^DIR
"RTN","PSOBPSU3",344,0)
 I $D(DIRUT) Q "^"
"RTN","PSOBPSU3",345,0)
 ;
"RTN","PSOBPSU3",346,0)
 ; If we get here, the user selected a date.  Set the PSODATESELECTED
"RTN","PSOBPSU3",347,0)
 ; flag to 1 if the user selected a date other than the Release Date
"RTN","PSOBPSU3",348,0)
 ; and set PSOALTXT, which will eventually be put on the Activity Log.
"RTN","PSOBPSU3",349,0)
 ;
"RTN","PSOBPSU3",350,0)
 I Y'=DIR("B") S PSODATESELECTED=1
"RTN","PSOBPSU3",351,0)
 S PSOALTXT="Date of Service ("_$$FMTE^XLFDT(PSOTEMP(Y),"5D")_")"
"RTN","PSOBPSU3",352,0)
 ;
"RTN","PSOBPSU3",353,0)
 Q PSOTEMP(Y)
"RTN","PSOBPSU3",354,0)
 ;
"RTN","PSOBPSUT")
0^12^B91597468
"RTN","PSOBPSUT",1,0)
PSOBPSUT ;BIRM/MFR - BPS (ECME) Utilities ;07 Jun 2005  8:39 PM
"RTN","PSOBPSUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,281,287,289,358,385,403,408,512**;DEC 1997;Build 44
"RTN","PSOBPSUT",3,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOBPSUT",4,0)
 ;Reference to IBSEND^BPSECMP2 supported by IA 4411
"RTN","PSOBPSUT",5,0)
 ;Reference to $$STATUS^BPSOSRX supported by IA 4412
"RTN","PSOBPSUT",6,0)
 ;Reference to $$NDCFMT^PSSNDCUT supported by IA 4707
"RTN","PSOBPSUT",7,0)
 ;Reference to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOBPSUT",8,0)
 ;Reference to ^PS(55 supported by IA 2228
"RTN","PSOBPSUT",9,0)
 ;Reference to ^PSDRUG( supported by IA 221
"RTN","PSOBPSUT",10,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOBPSUT",11,0)
 ;
"RTN","PSOBPSUT",12,0)
ECME(RX) ; Returns "e" if Rx/Refill is Electronically Billable (3rd party)
"RTN","PSOBPSUT",13,0)
 Q $S($$STATUS^BPSOSRX(RX,$$LSTRFL^PSOBPSU1(RX))'="":"e",1:"")
"RTN","PSOBPSUT",14,0)
 ;
"RTN","PSOBPSUT",15,0)
STATUS(RX,RFL,COB) ; Returns the Rx's ECME Status (calls STATUS^BPSOSRX)
"RTN","PSOBPSUT",16,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",17,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",18,0)
 ;         (o) COB - Coordination of Benefits (1=primary, etc.)
"RTN","PSOBPSUT",19,0)
 ;
"RTN","PSOBPSUT",20,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",21,0)
 I '$G(COB) S COB=1
"RTN","PSOBPSUT",22,0)
 Q $P($$STATUS^BPSOSRX(RX,RFL,,,COB),"^")
"RTN","PSOBPSUT",23,0)
 ;
"RTN","PSOBPSUT",24,0)
SUBMIT(RX,RFL,IGRL,IGCMP) ; Returns whether the Rx should be submitted to ECME at the moment or not
"RTN","PSOBPSUT",25,0)
 ; Input:  (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",26,0)
 ;         (o) RFL  - Refill # (Def.: most recent)
"RTN","PSOBPSUT",27,0)
 ;         (o) IGRL - Ignore Release Date? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",28,0)
 ;         (o) IGCMP- Ignore CMOP/Suspense check? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",29,0)
 ;
"RTN","PSOBPSUT",30,0)
 ; - Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",31,0)
 N STATUS
"RTN","PSOBPSUT",32,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",33,0)
 ; - Not the latest fill for the prescription
"RTN","PSOBPSUT",34,0)
 I RFL'=$$LSTRFL^PSOBPSU1(RX) Q 0
"RTN","PSOBPSUT",35,0)
 ; - Status not ACTIVE, DISCONTINUED, or EXPIRED
"RTN","PSOBPSUT",36,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOBPSUT",37,0)
 I ",0,11,12,14,15,"'[(","_STATUS_",") Q 0
"RTN","PSOBPSUT",38,0)
 ; Will suspend for CMOP
"RTN","PSOBPSUT",39,0)
 I '$G(IGCMP),$$CMOP(RX,RFL) Q 0
"RTN","PSOBPSUT",40,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",41,0)
 I '$$ECMEON^BPSUTIL($$RXSITE(RX,RFL)) Q 0
"RTN","PSOBPSUT",42,0)
 ; - Rx is RELEASED - Do not submit
"RTN","PSOBPSUT",43,0)
 I '$G(IGRL),$$RXRLDT(RX,RFL) Q 0
"RTN","PSOBPSUT",44,0)
 ; - Future Fill/AUTO SUSPENSE ON - will suspend
"RTN","PSOBPSUT",45,0)
 I '$G(IGCMP),$$RXFLDT(RX,RFL)>DT,$$GET1^DIQ(59,$$RXSITE(RX,RFL),.16,"I") Q 0
"RTN","PSOBPSUT",46,0)
 Q 1
"RTN","PSOBPSUT",47,0)
 ;
"RTN","PSOBPSUT",48,0)
CMOP(RX,RFL) ; Returns if the Rx will be a CMOP Rx or not
"RTN","PSOBPSUT",49,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",50,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",51,0)
 ; Output: 1 - CMOP / 0 - NON-CMOP
"RTN","PSOBPSUT",52,0)
 ;
"RTN","PSOBPSUT",53,0)
 N DFN,CMOP,MAIL,MAILEXP,DRUG,WARNS,STATUS,MW,A
"RTN","PSOBPSUT",54,0)
 ; Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",55,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",56,0)
 ; MAIL=MAIL Code, MAILEXP=Mail Code Expiration Date
"RTN","PSOBPSUT",57,0)
 S CMOP=0
"RTN","PSOBPSUT",58,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),MAIL=$$GET1^DIQ(55,DFN,.03,"I"),MAILEXP=$$GET1^DIQ(55,DFN,.05,"I")
"RTN","PSOBPSUT",59,0)
 I MAIL>1,MAILEXP=""!(MAILEXP>DT) G QCMOP
"RTN","PSOBPSUT",60,0)
 ; Get drug IEN and check DRUG if CMOP  ,$S($G(MAILEXP)=""!($G(MAILEXP)>DT):1,1:0)
"RTN","PSOBPSUT",61,0)
 S DRUG=$$GET1^DIQ(52,RX,6,"I") G QCMOP:'DRUG,QCMOP:'$D(^PSDRUG("AQ",DRUG))
"RTN","PSOBPSUT",62,0)
 ; Not marked for O.P.
"RTN","PSOBPSUT",63,0)
 I $$GET1^DIQ(50,DRUG,63)'["O" G QCMOP
"RTN","PSOBPSUT",64,0)
 ; Drug Warning >11
"RTN","PSOBPSUT",65,0)
 S WARNS=$$GET1^DIQ(50,DRUG,8) I $L(WARNS)>11 G QCMOP
"RTN","PSOBPSUT",66,0)
 ; If tradename
"RTN","PSOBPSUT",67,0)
 I $$GET1^DIQ(52,RX,6.5)'="" G QCMOP
"RTN","PSOBPSUT",68,0)
 ; If Cancelled, Expired, Deleted, Hold
"RTN","PSOBPSUT",69,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I") I (STATUS>9&(",14,15,"'[(","_STATUS_",")))!(STATUS=4)!(STATUS=3) G QCMOP
"RTN","PSOBPSUT",70,0)
 ; Rx RELEASED
"RTN","PSOBPSUT",71,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) G QCMOP
"RTN","PSOBPSUT",72,0)
 ; MAIL/WINDOW
"RTN","PSOBPSUT",73,0)
 S MW=$S('RFL:$$GET1^DIQ(52,RX,11,"I"),1:$$GET1^DIQ(52.1,RFL_","_RX,2,"I"))
"RTN","PSOBPSUT",74,0)
 ; IF WINDOW/ORIGINAL/FUTURE FILL SETS MW = MAIL
"RTN","PSOBPSUT",75,0)
 I MW="W",$$RXFLDT^PSOBPSUT(RX,RFL)>DT S MW="M"
"RTN","PSOBPSUT",76,0)
 ; If not MAIL
"RTN","PSOBPSUT",77,0)
 I MW'="M" G QCMOP
"RTN","PSOBPSUT",78,0)
 S CMOP=1
"RTN","PSOBPSUT",79,0)
 ;
"RTN","PSOBPSUT",80,0)
QCMOP Q CMOP
"RTN","PSOBPSUT",81,0)
 ;
"RTN","PSOBPSUT",82,0)
RXRLDT(RX,RFL) ; Returns the Rx Release Date
"RTN","PSOBPSUT",83,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",84,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",85,0)
 ;        
"RTN","PSOBPSUT",86,0)
 ; Output:  RXRLDT - Rx Release Date
"RTN","PSOBPSUT",87,0)
 N RXRLDT
"RTN","PSOBPSUT",88,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",89,0)
 S RXRLDT=$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOBPSUT",90,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",91,0)
 I RFL S RXRLDT=$$GET1^DIQ(52.1,RFL_","_RX,17,"I")
"RTN","PSOBPSUT",92,0)
 I RFL["P" S RXRLDT=$$GET1^DIQ(52.2,+$E(RFL,2,9)_","_RX,8,"I")
"RTN","PSOBPSUT",93,0)
 Q RXRLDT
"RTN","PSOBPSUT",94,0)
 ;
"RTN","PSOBPSUT",95,0)
RXFLDT(RX,RFL) ; Returns the Rx Fill Date
"RTN","PSOBPSUT",96,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",97,0)
 ;         (o) RFL - Refill # (Default: most recent)      
"RTN","PSOBPSUT",98,0)
 ; Output:  RXFLDT - Rx Fill Date (FM format)
"RTN","PSOBPSUT",99,0)
 N RXFLDT
"RTN","PSOBPSUT",100,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",101,0)
 S RXFLDT=$$GET1^DIQ(52,RX,22,"I")
"RTN","PSOBPSUT",102,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",103,0)
 I RFL S RXFLDT=$$GET1^DIQ(52.1,RFL_","_RX,.01,"I")
"RTN","PSOBPSUT",104,0)
 I RFL["P" S RXFLDT=$$GET1^DIQ(52.2,+$E(RFL,2,9)_","_RX,.01,"I")
"RTN","PSOBPSUT",105,0)
 Q RXFLDT
"RTN","PSOBPSUT",106,0)
 ;
"RTN","PSOBPSUT",107,0)
RXSUDT(RX,RFL) ; Returns the prescription/fill Suspense Date for the RX/Reject passed in
"RTN","PSOBPSUT",108,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",109,0)
 ;       (o) RFL  - Refill IEN (#52.1)
"RTN","PSOBPSUT",110,0)
 ;Output: SUSPENSE DATE (External format) or <NULL>, if not suspended
"RTN","PSOBPSUT",111,0)
 ;
"RTN","PSOBPSUT",112,0)
 I $G(^PSRX(RX,"STA"))'=5 Q ""
"RTN","PSOBPSUT",113,0)
 N SURX,SURFL
"RTN","PSOBPSUT",114,0)
 S SURX=$O(^PS(52.5,"B",RX,0)) I 'SURX Q ""
"RTN","PSOBPSUT",115,0)
 I $$GET1^DIQ(52.5,SURX,.05,"I") Q ""
"RTN","PSOBPSUT",116,0)
 S SURFL=+$$GET1^DIQ(52.5,SURX,9) I RFL'=SURFL Q ""
"RTN","PSOBPSUT",117,0)
 Q $$GET1^DIQ(52.5,SURX,.02,"I")
"RTN","PSOBPSUT",118,0)
 ;
"RTN","PSOBPSUT",119,0)
RXSITE(RX,RFL) ; Returns the Rx DIVISION
"RTN","PSOBPSUT",120,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",121,0)
 ;         (o) RFL - Refill #
"RTN","PSOBPSUT",122,0)
 ; Output:  SITE - Rx Fill Date
"RTN","PSOBPSUT",123,0)
 ;        
"RTN","PSOBPSUT",124,0)
 N SITE
"RTN","PSOBPSUT",125,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",126,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",127,0)
 I RFL S SITE=$$GET1^DIQ(52.1,RFL_","_RX,8,"I")
"RTN","PSOBPSUT",128,0)
 I RFL["P" S SITE=$$GET1^DIQ(52.2,+$E(RFL,2,9)_","_RX,.09,"I")
"RTN","PSOBPSUT",129,0)
 I (RFL=0)!'$G(SITE) S SITE=$$GET1^DIQ(52,RX,20,"I")
"RTN","PSOBPSUT",130,0)
 Q SITE
"RTN","PSOBPSUT",131,0)
 ;
"RTN","PSOBPSUT",132,0)
RXSTATE(RX,RFL) ; Returns the Rx Division STATE
"RTN","PSOBPSUT",133,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",134,0)
 ;         (o) RFL - Refill #
"RTN","PSOBPSUT",135,0)
 ; Output:  SITE - Rx Fill Date
"RTN","PSOBPSUT",136,0)
 N SITE
"RTN","PSOBPSUT",137,0)
 S SITE=$$RXSITE(RX,RFL) I 'SITE Q ""
"RTN","PSOBPSUT",138,0)
 Q +$$GET1^DIQ(59,SITE,.08,"I")
"RTN","PSOBPSUT",139,0)
 ;
"RTN","PSOBPSUT",140,0)
RXQTY(RXIEN,FILL) ; Returns the Quantity Dispense for the Fill
"RTN","PSOBPSUT",141,0)
 ; Input:  (r) RXIEN - Rx IEN (#52) 
"RTN","PSOBPSUT",142,0)
 ;         (o) FILL  - Refill # (Default: most recent)
"RTN","PSOBPSUT",143,0)
 ; Output:  RXQTY - Quantity Dispensed
"RTN","PSOBPSUT",144,0)
 N RXQTY
"RTN","PSOBPSUT",145,0)
 I '$G(RXIEN) Q ""
"RTN","PSOBPSUT",146,0)
 S RXQTY=$$GET1^DIQ(52,RXIEN,7,"I")
"RTN","PSOBPSUT",147,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSOBPSUT",148,0)
 I FILL S RXQTY=$$GET1^DIQ(52.1,FILL_","_RXIEN,1,"I")
"RTN","PSOBPSUT",149,0)
 I FILL["P" S RXQTY=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RXIEN,.04,"I")
"RTN","PSOBPSUT",150,0)
 Q RXQTY
"RTN","PSOBPSUT",151,0)
 ;
"RTN","PSOBPSUT",152,0)
RXDAYSUP(RXIEN,FILL) ; Returns the Days Supply for the Fill
"RTN","PSOBPSUT",153,0)
 ; Input:  (r) RXIEN - Rx IEN (#52) 
"RTN","PSOBPSUT",154,0)
 ;         (o) FILL  - Refill # (Default: most recent)
"RTN","PSOBPSUT",155,0)
 ; Output:  RXDAYSUP - Days Supply
"RTN","PSOBPSUT",156,0)
 N RXDAYSUP
"RTN","PSOBPSUT",157,0)
 I '$G(RXIEN) Q ""
"RTN","PSOBPSUT",158,0)
 S RXDAYSUP=$$GET1^DIQ(52,RXIEN,8,"I")
"RTN","PSOBPSUT",159,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSOBPSUT",160,0)
 I FILL S RXDAYSUP=$$GET1^DIQ(52.1,FILL_","_RXIEN,1.1,"I")
"RTN","PSOBPSUT",161,0)
 I FILL["P" S RXDAYSUP=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RXIEN,.041,"I")
"RTN","PSOBPSUT",162,0)
 Q RXDAYSUP
"RTN","PSOBPSUT",163,0)
 ;
"RTN","PSOBPSUT",164,0)
RXPRV(RXIEN,FILL) ; Returns the Rx Fill Provider IEN
"RTN","PSOBPSUT",165,0)
 ; Input:  (r) RXIEN  - Rx IEN (#52) 
"RTN","PSOBPSUT",166,0)
 ;         (o) FILL - Refill # (Default: most recent - except Partial)
"RTN","PSOBPSUT",167,0)
 ;                    Note: "P1", "P2"... represent partial fills
"RTN","PSOBPSUT",168,0)
 ; Output:  RXPRV - Rx Fill Provider IEN
"RTN","PSOBPSUT",169,0)
 N RXPRV
"RTN","PSOBPSUT",170,0)
 I '$G(RXIEN) Q ""
"RTN","PSOBPSUT",171,0)
 I '$D(FILL) S RFL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSOBPSUT",172,0)
 I FILL S RXPRV=$$GET1^DIQ(52.1,FILL_","_RXIEN,15,"I")
"RTN","PSOBPSUT",173,0)
 I FILL["P" S RXPRV=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RXIEN,6,"I")
"RTN","PSOBPSUT",174,0)
 I '$G(RXPRV) S RXPRV=$$GET1^DIQ(52,RXIEN,4,"I")
"RTN","PSOBPSUT",175,0)
 Q RXPRV
"RTN","PSOBPSUT",176,0)
 ;
"RTN","PSOBPSUT",177,0)
RXRPH(RXIEN,FILL) ; Returns the Pharmacist IEN for the Fill
"RTN","PSOBPSUT",178,0)
 ; Input:  (r) RXIEN - Rx IEN (#52) 
"RTN","PSOBPSUT",179,0)
 ;         (o) FILL  - Refill # (Default: most recent)
"RTN","PSOBPSUT",180,0)
 ; Output:  RXRPH - Pharmacist IEN (Pointer to File #200)
"RTN","PSOBPSUT",181,0)
 N RXRPH
"RTN","PSOBPSUT",182,0)
 I '$G(RXIEN) Q ""
"RTN","PSOBPSUT",183,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RXIEN)
"RTN","PSOBPSUT",184,0)
 I FILL S RXRPH=$$GET1^DIQ(52.1,FILL_","_RXIEN,4,"I")
"RTN","PSOBPSUT",185,0)
 I FILL["P" S RXRPH=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RXIEN,.05,"I")
"RTN","PSOBPSUT",186,0)
 I '$G(RXRPH) S RXRPH=$$GET1^DIQ(52,RXIEN,23,"I")
"RTN","PSOBPSUT",187,0)
 Q RXRPH
"RTN","PSOBPSUT",188,0)
 ;
"RTN","PSOBPSUT",189,0)
VALUE(RX,FILL,ORFLD,RFFLD,PRFLD,OROK) ; Retrieve corresponding Internal value for the specific prescription fill
"RTN","PSOBPSUT",190,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",191,0)
 ;         (r) FILL - Refill #
"RTN","PSOBPSUT",192,0)
 ;         (r) ORFLD - Original Fill Field #
"RTN","PSOBPSUT",193,0)
 ;         (r) RFFLD - Refill Field #
"RTN","PSOBPSUT",194,0)
 ;         (r) PRFLD - Partial Field #
"RTN","PSOBPSUT",195,0)
 ;         (o) OROK  - OK to retrieve from Original Fill (1: YES/0:NO)
"RTN","PSOBPSUT",196,0)
 ; Output:  VALUE - Fill Field Value
"RTN","PSOBPSUT",197,0)
 ;
"RTN","PSOBPSUT",198,0)
 N VALUE
"RTN","PSOBPSUT",199,0)
 I '$G(RX)!($G(FILL)="") Q ""
"RTN","PSOBPSUT",200,0)
 I RFFLD,FILL S VALUE=$$GET1^DIQ(52.1,FILL_","_RX,RFFLD,"I")
"RTN","PSOBPSUT",201,0)
 I PRFLD,FILL["P" S VALUE=$$GET1^DIQ(52.2,+$E(FILL,2,9)_","_RX,PRFLD,"I")
"RTN","PSOBPSUT",202,0)
 I ORFLD,(FILL=0!(($G(VALUE)="")&$G(OROK))) S VALUE=$$GET1^DIQ(52,RX,ORFLD,"I")
"RTN","PSOBPSUT",203,0)
 Q $G(VALUE)
"RTN","PSOBPSUT",204,0)
 ;
"RTN","PSOBPSUT",205,0)
MANREL(RX,RFL,PID) ; ePharmacy Manual Rx Release
"RTN","PSOBPSUT",206,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",207,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",208,0)
 ;       (o) PID - Displays PID/Drug/Rx in the NDC prompts
"RTN","PSOBPSUT",209,0)
 ;Output: "" (null - OK to Release) OR "^" (User entered "^", or no valid NDC on file for ePharmacy Rx)
"RTN","PSOBPSUT",210,0)
 ;       
"RTN","PSOBPSUT",211,0)
 N ACTION
"RTN","PSOBPSUT",212,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",213,0)
 ; Check for unresolved TRICARE/CHAMPVA non-billable reject code, PSO*7*358
"RTN","PSOBPSUT",214,0)
 I $$PSOET^PSOREJP3(RX,RFL) W ! Q "^"
"RTN","PSOBPSUT",215,0)
 ; Checking for REJECTS before proceeding to Rx Release
"RTN","PSOBPSUT",216,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",217,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",218,0)
 ; - ePharmacy switch is OFF
"RTN","PSOBPSUT",219,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q ""
"RTN","PSOBPSUT",220,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",221,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",222,0)
 I '$D(PSOTRIC) N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSUT",223,0)
 ; - NDC editing before Rx release
"RTN","PSOBPSUT",224,0)
 S ACTION=$$CHGNDC^PSONDCUT(RX,RFL,$G(PID))
"RTN","PSOBPSUT",225,0)
 I ACTION="^"!(ACTION=2) D  Q "^"
"RTN","PSOBPSUT",226,0)
 . W:ACTION="^" !!,$C(7),"A valid NDC must be entered before the Release function can be completed.",! H 1
"RTN","PSOBPSUT",227,0)
 . I $G(PSOTRIC) D:ACTION=2 TRIC
"RTN","PSOBPSUT",228,0)
 ; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects (After possible NDC edit)
"RTN","PSOBPSUT",229,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",230,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",231,0)
 I $G(PSOTRIC),$$STATUS^PSOBPSUT(RX,RFL)["IN PROGRESS" D TRIC Q "^"
"RTN","PSOBPSUT",232,0)
 Q ""
"RTN","PSOBPSUT",233,0)
 ;
"RTN","PSOBPSUT",234,0)
TRIC ;
"RTN","PSOBPSUT",235,0)
 W !!,$C(7),$S(PSOTRIC=1:"TRICARE",1:"CHAMPVA")_" Rx remains in 'IN PROGRESS' status for ECME, and cannot be released.",! H 1
"RTN","PSOBPSUT",236,0)
 Q
"RTN","PSOBPSUT",237,0)
 ;
"RTN","PSOBPSUT",238,0)
AUTOREL(RX,RFL,RLDT,NDC,SRC,STS,HNG) ; Sends Rx Release information to ECME/IB and updates NDC
"RTN","PSOBPSUT",239,0)
 ;                                     in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",240,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",241,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",242,0)
 ;       (r) RLDT- Release Date
"RTN","PSOBPSUT",243,0)
 ;       (r) NDC - NDC Number (Must be 11 digits)
"RTN","PSOBPSUT",244,0)
 ;       (o) SRC - SOURCE: "C" - CMOP / "A" - OPAI
"RTN","PSOBPSUT",245,0)
 ;       (o) STS - Status: (S)uccessful/(U)nsuccessful Release (Default: "S" - Successful)
"RTN","PSOBPSUT",246,0)
 ;       (o) HNG - HANG time after resubmission and before checking the status of the claim (Default: 0)
"RTN","PSOBPSUT",247,0)
 ;       
"RTN","PSOBPSUT",248,0)
 N RXNDC,SITE
"RTN","PSOBPSUT",249,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",250,0)
 S:'$D(STS) STS="S" S:'$D(SRC) SRC="" S HNG=+$G(HNG)
"RTN","PSOBPSUT",251,0)
 S RXNDC=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSUT",252,0)
 ; - Saves the NDC from CMOP/Automated Dispensing Machine in the Prescription file
"RTN","PSOBPSUT",253,0)
 I $$NDCFMT^PSSNDCUT(NDC)'="" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),$S(SRC="C":1,1:0))
"RTN","PSOBPSUT",254,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",255,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",256,0)
 ; - Unsuccessful Release 
"RTN","PSOBPSUT",257,0)
 I STS="U" D  Q
"RTN","PSOBPSUT",258,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLX",,"UNSUCCESSFUL "_$S(SRC="C":"CMOP",1:"EXT INTERFACE")_" RELEASE",1)
"RTN","PSOBPSUT",259,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",260,0)
 D RELEASE^PSOBPSU1(RX,RFL)
"RTN","PSOBPSUT",261,0)
 ; - Invalid NDC from Automated Dispensing Machine
"RTN","PSOBPSUT",262,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",263,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID EXT INTERFACE NDC",1,NDC)
"RTN","PSOBPSUT",264,0)
 ; - Invalid NDC number for CMOP
"RTN","PSOBPSUT",265,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",266,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID CMOP NDC",1,NDC)
"RTN","PSOBPSUT",267,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",268,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",269,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),,"AUTO RELEASE",,1,,1),UPDFL^PSOBPSU2(RX,RFL,RLDT)
"RTN","PSOBPSUT",270,0)
 . H HNG
"RTN","PSOBPSUT",271,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",272,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),0,1)
"RTN","PSOBPSUT",273,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",274,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",275,0)
 . ; - Reverse/Resubmit with correct NDC
"RTN","PSOBPSUT",276,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),1,"CMOP RELEASE",,1,,1),UPDFL^PSOBPSU2(RX,RFL,RLDT)
"RTN","PSOBPSUT",277,0)
 . ; - Wait for a response from the Payer for the submission above
"RTN","PSOBPSUT",278,0)
 . H HNG
"RTN","PSOBPSUT",279,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",280,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),1,1)
"RTN","PSOBPSUT",281,0)
 ; - Calls ECME api responsible for notifying IB to create a BILL
"RTN","PSOBPSUT",282,0)
 D IBSEND(RX,RFL,1)
"RTN","PSOBPSUT",283,0)
 Q
"RTN","PSOBPSUT",284,0)
 ;
"RTN","PSOBPSUT",285,0)
IBSEND(RX,RFL,AUTO) ; Rx Release
"RTN","PSOBPSUT",286,0)
 ; Create Release Event
"RTN","PSOBPSUT",287,0)
 ; Calls ECME, if needed
"RTN","PSOBPSUT",288,0)
 ; If Payable or Duplicate, calls IB to create a bill
"RTN","PSOBPSUT",289,0)
 ;
"RTN","PSOBPSUT",290,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",291,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",292,0)
 ;       (o) AUTO - Called by Auto Release Process
"RTN","PSOBPSUT",293,0)
 ;
"RTN","PSOBPSUT",294,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",295,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",296,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q
"RTN","PSOBPSUT",297,0)
 N STATUS
"RTN","PSOBPSUT",298,0)
 S STATUS=$$STATUS(RX,RFL)
"RTN","PSOBPSUT",299,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",300,0)
 I STATUS="" Q ""
"RTN","PSOBPSUT",301,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",302,0)
 ; - Do not call for auto release process as it has already been done
"RTN","PSOBPSUT",303,0)
 S AUTO=+$G(AUTO)
"RTN","PSOBPSUT",304,0)
 I 'AUTO D RELEASE^PSOBPSU1(RX,RFL,DUZ)
"RTN","PSOBPSUT",305,0)
 ; - If the previous ECME claim was reversed or incomplete, re-submit the claim to the payer
"RTN","PSOBPSUT",306,0)
 I (STATUS="E REVERSAL ACCEPTED")!(STATUS="IN PROGRESS") D  Q
"RTN","PSOBPSUT",307,0)
 . D ECMESND^PSOBPSU1(RX,RFL,$$RXRLDT^PSOBPSUT(RX,RFL),$S(AUTO:"C",1:"")_"RRL")
"RTN","PSOBPSUT",308,0)
 ; - Notifying ECME of a BILLING event 
"RTN","PSOBPSUT",309,0)
 I STATUS="E PAYABLE"!(STATUS="E DUPLICATE") D  Q
"RTN","PSOBPSUT",310,0)
 . N PSOCLAIM S PSOCLAIM=$$CLAIM^BPSBUTL(RX,RFL)
"RTN","PSOBPSUT",311,0)
 . D IBSEND^BPSECMP2($P(PSOCLAIM,"^",2),$P(PSOCLAIM,"^",3),"BILL",DUZ)
"RTN","PSOBPSUT",312,0)
 Q
"RTN","PSOBPSUT",313,0)
 ;
"RTN","PSOBPSUT",314,0)
RETRX(RX,RFL) ; - Re-transmit a claim for the prescription/fill?
"RTN","PSOBPSUT",315,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",316,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",317,0)
 ;Output: 1 - Re-transmit  /  0 - Don't re-transmit
"RTN","PSOBPSUT",318,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",319,0)
 I RFL Q +$$GET1^DIQ(52.1,RFL_","_RX,82,"I")
"RTN","PSOBPSUT",320,0)
 Q +$$GET1^DIQ(52,RX,82,"I")
"RTN","PSOREJP1")
0^8^B196908863
"RTN","PSOREJP1",1,0)
PSOREJP1 ;BIRM/MFR - Third Party Reject Display Screen ;04/29/05
"RTN","PSOREJP1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,281,287,289,290,358,359,385,403,421,427,448,478,482,512**;DEC 1997;Build 44
"RTN","PSOREJP1",3,0)
 ;Reference to File 9002313.93 - BPS NCPDP REJECT CODES supported by IA 4720
"RTN","PSOREJP1",4,0)
 ;Reference to ^PS(59.7 supported by IA 694
"RTN","PSOREJP1",5,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOREJP1",6,0)
 ;Reference to File 9002313.25 supported by IA 5064
"RTN","PSOREJP1",7,0)
 ;Reference to BPSNCPD3 supported by IA 4560
"RTN","PSOREJP1",8,0)
 ;Reference to ^BPSVRX supported by IA 5723
"RTN","PSOREJP1",9,0)
 ;Reference to $$BBILL^BPSBUTL and $$RESUBMIT^BPSBUTL supported by IA 4719
"RTN","PSOREJP1",10,0)
 ;
"RTN","PSOREJP1",11,0)
EN(RX,REJ,CHANGE) ; Entry point
"RTN","PSOREJP1",12,0)
 ;
"RTN","PSOREJP1",13,0)
 ; - DO NOT change the IF logic below as both of them might get executed (intentional)
"RTN","PSOREJP1",14,0)
 N FILL,LASTLN,PSOTRIC,PSOCODE,PSOTCODE
"RTN","PSOREJP1",15,0)
 S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJP1",16,0)
 S PSOTRIC=$$TRIC(RX,FILL),PSOCODE=$$GET1^DIQ(52.25,REJ_","_RX,.01)
"RTN","PSOREJP1",17,0)
 S PSOTCODE=0 S:PSOCODE'=79&(PSOCODE'=88)&(PSOTRIC) PSOTCODE=1
"RTN","PSOREJP1",18,0)
 I $$CLOSED(RX,REJ) D EN^VALM("PSO REJECT DISPLAY - RESOLVED")
"RTN","PSOREJP1",19,0)
 I '$$CLOSED(RX,REJ)&(PSOTRIC) D EN^VALM("PSO REJECT TRICARE")   ;cnf, PSO*7*358, replace PSOTCODE with PSOTRIC
"RTN","PSOREJP1",20,0)
 I '$$CLOSED(RX,REJ)&('PSOTCODE)&('PSOTRIC) D EN^VALM("PSO REJECT DISPLAY")   ;cnf, PSO*7*358, add PSOTRIC check
"RTN","PSOREJP1",21,0)
 D FULL^VALM1
"RTN","PSOREJP1",22,0)
 Q
"RTN","PSOREJP1",23,0)
 ;
"RTN","PSOREJP1",24,0)
HDR ; - Builds the Header section
"RTN","PSOREJP1",25,0)
 N LINE1,LINE2,X
"RTN","PSOREJP1",26,0)
 S VALMHDR(1)=$$DVINFO^PSOREJU2(RX,FILL,1),VALMHDR(2)=$$PTINFO^PSOREJU2(RX,1)
"RTN","PSOREJP1",27,0)
 ;cnf, PSO*7*358, add REJ to parameter list for RXINFO^PSOREJP3
"RTN","PSOREJP1",28,0)
 S VALMHDR(3)=$$RXINFO^PSOREJP3(RX,FILL,1),VALMHDR(4)=$$RXINFO^PSOREJP3(RX,FILL,2,REJ)
"RTN","PSOREJP1",29,0)
 Q
"RTN","PSOREJP1",30,0)
 ;
"RTN","PSOREJP1",31,0)
TRIC(RX,RFL,PSOTRIC) ; - Return 1 for TRICARE, 2 for CHAMPVA or 0 (zero) for not TRICARE or CHAMPVA
"RTN","PSOREJP1",32,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJP1",33,0)
 S PSOTRIC="",PSOTRIC=$S(RFL=0&($$GET1^DIQ(52,RX_",",85,"I")="T"):1,$$GET1^DIQ(52.1,RFL_","_RX_",",85,"I")="T":1,RFL=0&($$GET1^DIQ(52,RX_",",85,"I")="C"):2,$$GET1^DIQ(52.1,RFL_","_RX_",",85,"I")="C":2,1:0)
"RTN","PSOREJP1",34,0)
 Q PSOTRIC
"RTN","PSOREJP1",35,0)
 ;
"RTN","PSOREJP1",36,0)
ELIGDISP(RX,RFL) ; Return either CHAMPVA or TRICARE for display
"RTN","PSOREJP1",37,0)
 ; purposes, or null if neither
"RTN","PSOREJP1",38,0)
 N PSOELIG
"RTN","PSOREJP1",39,0)
 S PSOELIG=$$TRIC(RX,RFL)
"RTN","PSOREJP1",40,0)
 Q $S(PSOELIG=1:"TRICARE",PSOELIG=2:"CHAMPVA",1:"")
"RTN","PSOREJP1",41,0)
 ;
"RTN","PSOREJP1",42,0)
ELIGTCV(RX,RFL,CAPS) ; Return either CHAMPVA, TRICARE, or Veteran/VETERAN for eligibility display (PSO*7*448)
"RTN","PSOREJP1",43,0)
 ; if CAPS=1 then return "Veteran" in all caps
"RTN","PSOREJP1",44,0)
 ; Note if the requested refill has been deleted, then the message "N/A - Fill Deleted" will be returned
"RTN","PSOREJP1",45,0)
 N PSOELIG,VET,DELMSG
"RTN","PSOREJP1",46,0)
 S DELMSG="N/A - Fill Deleted"
"RTN","PSOREJP1",47,0)
 S PSOELIG=$$TRIC(RX,RFL),VET="Veteran" I $G(CAPS) S VET="VETERAN"
"RTN","PSOREJP1",48,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) S PSOELIG=3
"RTN","PSOREJP1",49,0)
 Q $S(PSOELIG=1:"TRICARE",PSOELIG=2:"CHAMPVA",PSOELIG=3:DELMSG,1:VET)
"RTN","PSOREJP1",50,0)
 ;
"RTN","PSOREJP1",51,0)
INIT ; Builds the Body section
"RTN","PSOREJP1",52,0)
 N DATA,LINE
"RTN","PSOREJP1",53,0)
 I '$D(FILL) S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)   ; PSO*7*448 obtain fill# from 52.25 subfile if not defined
"RTN","PSOREJP1",54,0)
 I '$$CLOSED(RX,REJ) S VALM("TITLE")="Reject Information ("_$$ELIGTCV(RX,FILL)_")"
"RTN","PSOREJP1",55,0)
 I $$CLOSED(RX,REJ) S VALM("TITLE")="Reject Information (RESOLVED)"
"RTN","PSOREJP1",56,0)
 F I=1:1:$G(LASTLN) D RESTORE^VALM10(I)
"RTN","PSOREJP1",57,0)
 K ^TMP("PSOREJP1",$J) S VALMCNT=0,LINE=0
"RTN","PSOREJP1",58,0)
 D GET^PSOREJU2(RX,FILL,.DATA,REJ,1)
"RTN","PSOREJP1",59,0)
 D REJ                   ; Display the REJECT Information
"RTN","PSOREJP1",60,0)
 D OTH                   ; Display the Other Rejects Information
"RTN","PSOREJP1",61,0)
 D COM^PSOREJP3          ; Display the Comment
"RTN","PSOREJP1",62,0)
 D INS                   ; Display the Insurance Information
"RTN","PSOREJP1",63,0)
 D CLS                   ; Display the Resolution Information
"RTN","PSOREJP1",64,0)
 S VALMCNT=LINE
"RTN","PSOREJP1",65,0)
 Q
"RTN","PSOREJP1",66,0)
 ;
"RTN","PSOREJP1",67,0)
REJ ; - Reject Information
"RTN","PSOREJP1",68,0)
 N TYPE,PFLDT,TREJ,TDATA,PSOET,PSONAF,PSOCOB,PSOTXT,PSOECME,PSOADD S TDATA=""
"RTN","PSOREJP1",69,0)
 ;
"RTN","PSOREJP1",70,0)
 ; LH;PSO*7*448 - Display 'RESUBMISSION' where 'BACK-BILL' currently
"RTN","PSOREJP1",71,0)
 ; displays if the claim was resubmitted from the ECME User Screen.
"RTN","PSOREJP1",72,0)
 ; To facilitate this, the function $$RESUBMIT^BPSBUTL was created.
"RTN","PSOREJP1",73,0)
 ;
"RTN","PSOREJP1",74,0)
 ; Back Bill indicator - PSO*7*421
"RTN","PSOREJP1",75,0)
 S PSOTXT="",PSOCOB=$G(DATA(REJ,"COB")),PSOCOB=$S(PSOCOB="SECONDARY":2,PSOCOB="TERTIARY":3,1:1)
"RTN","PSOREJP1",76,0)
 I $$BBILL^BPSBUTL(RX,FILL,PSOCOB) S PSOTXT=" BACK-BILL"
"RTN","PSOREJP1",77,0)
 E  I $$RESUBMIT^BPSBUTL(RX,FILL,PSOCOB) S PSOTXT=" RESUBMISSION"  ; IA 4719.
"RTN","PSOREJP1",78,0)
 D SETLN("REJECT Information ("_$$ELIGTCV(RX,FILL)_") "_PSOTXT,1,1)
"RTN","PSOREJP1",79,0)
 S PSOECME=$$STATUS^PSOBPSUT(RX,FILL,PSOCOB)
"RTN","PSOREJP1",80,0)
 I PSOECME="E PAYABLE" D
"RTN","PSOREJP1",81,0)
 . D SETLN("Reject Type    : ",,,18)
"RTN","PSOREJP1",82,0)
 . D SETLN("Reject Status  : ** E PAYABLE **",,,18)
"RTN","PSOREJP1",83,0)
 . Q
"RTN","PSOREJP1",84,0)
 E  D
"RTN","PSOREJP1",85,0)
 . S TYPE=$S($G(DATA(REJ,"CODE"))=79:"79 - REFILL TOO SOON",1:"")
"RTN","PSOREJP1",86,0)
 . I TYPE="" S TYPE=DATA(REJ,"CODE")_" - "_$E($$EXP(DATA(REJ,"CODE")),1,23)_"-"
"RTN","PSOREJP1",87,0)
 . D SETLN("Reject Type    : "_TYPE_" received on "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME"))),,,18)
"RTN","PSOREJP1",88,0)
 . ;cnf, PSO*7*358, if TRICARE/CHAMPVA non-billable then reset Status line
"RTN","PSOREJP1",89,0)
 . S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",90,0)
 . I PSOET D SETLN("Status         : NO CLAIM SUBMITTED")
"RTN","PSOREJP1",91,0)
 . I 'PSOET D SETLN("Reject Status  : "_$G(DATA(REJ,"STATUS"))_" - "_PSOECME,,,18)
"RTN","PSOREJP1",92,0)
 . Q
"RTN","PSOREJP1",93,0)
 ; code moved to PSOREJP5 
"RTN","PSOREJP1",94,0)
 D REJ^PSOREJP5
"RTN","PSOREJP1",95,0)
 Q
"RTN","PSOREJP1",96,0)
 ;
"RTN","PSOREJP1",97,0)
OTH ; - Other Rejects Information
"RTN","PSOREJP1",98,0)
 N LST,I,RJC,J,LAST
"RTN","PSOREJP1",99,0)
 S LST=$G(DATA(REJ,"OTHER REJECTS")) I LST="" Q
"RTN","PSOREJP1",100,0)
 D SETLN()
"RTN","PSOREJP1",101,0)
 D SETLN("OTHER REJECTS",1,1)
"RTN","PSOREJP1",102,0)
 F I=1:1:$L(LST,",") S RJC=$P(LST,",",I) D
"RTN","PSOREJP1",103,0)
 . S LAST=1 F J=(I+1):1:$L(LST,",") I $P(LST,",",J)'="" S LAST=0 Q
"RTN","PSOREJP1",104,0)
 . I RJC'="" D SETLN(RJC_" - "_$$EXP(RJC),,$S(LAST:1,1:0),6)
"RTN","PSOREJP1",105,0)
 Q
"RTN","PSOREJP1",106,0)
 ;
"RTN","PSOREJP1",107,0)
INS ; - Insurance Information
"RTN","PSOREJP1",108,0)
 D SETLN()
"RTN","PSOREJP1",109,0)
 D SETLN("INSURANCE Information",1,1)
"RTN","PSOREJP1",110,0)
 N PSOINS,PSOINS1,I,PSOBINPCN
"RTN","PSOREJP1",111,0)
 S PSOINS=$G(DATA(REJ,"INSURANCE NAME"))
"RTN","PSOREJP1",112,0)
 F I=1:1:(50-($L(PSOINS)+18)) S PSOINS=PSOINS_" "
"RTN","PSOREJP1",113,0)
 S PSOINS1=$G(DATA(REJ,"COB"))
"RTN","PSOREJP1",114,0)
 I PSOINS1="SECONDARY" S PSOINS=PSOINS_"Coord. Of Benefits: "_PSOINS1
"RTN","PSOREJP1",115,0)
 D SETLN("Insurance      : "_PSOINS,,,18)
"RTN","PSOREJP1",116,0)
 D SETLN("Contact        : "_$G(DATA(REJ,"PLAN CONTACT")),,,18)
"RTN","PSOREJP1",117,0)
 S PSOBINPCN=$G(DATA(REJ,"BIN"))_"/ "_$G(DATA(REJ,"PCN"))
"RTN","PSOREJP1",118,0)
 D SETLN("BIN/ PCN       : "_PSOBINPCN,,,18)
"RTN","PSOREJP1",119,0)
 D SETLN("Group Number   : "_$E($G(DATA(REJ,"GROUP NUMBER")),1,15),,,18)
"RTN","PSOREJP1",120,0)
 D SETLN("Cardholder ID  : "_$E($G(DATA(REJ,"CARDHOLDER ID")),1,20),,1,18)
"RTN","PSOREJP1",121,0)
 Q
"RTN","PSOREJP1",122,0)
 ;
"RTN","PSOREJP1",123,0)
CLS ; - Resolution Information
"RTN","PSOREJP1",124,0)
 N X
"RTN","PSOREJP1",125,0)
 I '$$CLOSED(RX,REJ) Q
"RTN","PSOREJP1",126,0)
 D SETLN()
"RTN","PSOREJP1",127,0)
 D SETLN("RESOLUTION Information",1,1)
"RTN","PSOREJP1",128,0)
 D SETLN("Resolved By    : "_$G(DATA(REJ,"CLOSED BY")),,,18)
"RTN","PSOREJP1",129,0)
 D SETLN("Date/Time      : "_$G(DATA(REJ,"CLOSED DATE/TIME")),,,18)
"RTN","PSOREJP1",130,0)
 I $G(DATA(REJ,"CLOSE COMMENTS"))'="" D SET("CLOSE COMMENTS",63)
"RTN","PSOREJP1",131,0)
 I $G(DATA(REJ,"COD1"))'="" D SETLN("Reason for Svc : "_$$OVRX^PSOREJU1(1,$G(DATA(REJ,"COD1"))),,,18)
"RTN","PSOREJP1",132,0)
 I $G(DATA(REJ,"COD2"))'="" D SETLN("Profes. Svc    : "_$$OVRX^PSOREJU1(2,$G(DATA(REJ,"COD2"))),,,18)
"RTN","PSOREJP1",133,0)
 I $G(DATA(REJ,"COD3"))'="" D SETLN("Result of Svc  : "_$$OVRX^PSOREJU1(3,$G(DATA(REJ,"COD3"))),,,18)
"RTN","PSOREJP1",134,0)
 I $G(DATA(REJ,"CLA CODE"))'="" D
"RTN","PSOREJP1",135,0)
 . N CLAPNTR S CLAPNTR=$$GET1^DIQ(52.25,REJ_","_RX_",",24,"I")
"RTN","PSOREJP1",136,0)
 . S X=DATA(REJ,"CLA CODE")_" - "_$$GET1^DIQ(9002313.25,CLAPNTR,".02")
"RTN","PSOREJP1",137,0)
 . D SETLN("Clarific. Code : "_X,,,18)
"RTN","PSOREJP1",138,0)
 I $G(DATA(REJ,"PRIOR AUTH TYPE"))'="" D
"RTN","PSOREJP1",139,0)
 . S X=$$GET1^DIQ(52.25,REJ_","_RX,25,"I")_" - "_(DATA(REJ,"PRIOR AUTH TYPE"))
"RTN","PSOREJP1",140,0)
 . D SETLN("Prior Auth.Type: "_X,,,18),SETLN("Prior Auth. #  : "_DATA(REJ,"PRIOR AUTH NUMBER"),,,18)
"RTN","PSOREJP1",141,0)
 D SETLN("Reason         : "_$G(DATA(REJ,"CLOSE REASON")),,1,18)
"RTN","PSOREJP1",142,0)
 Q
"RTN","PSOREJP1",143,0)
 ;
"RTN","PSOREJP1",144,0)
 ;
"RTN","PSOREJP1",145,0)
SET(FIELD,L,UND) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJP1",146,0)
 N TXT,T
"RTN","PSOREJP1",147,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L D SETLN($$LABEL(FIELD)_TXT,,$S($G(UND):1,1:0),80-L) Q
"RTN","PSOREJP1",148,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJP1",149,0)
 . I I=1 D SETLN($$LABEL(FIELD)_$E(TXT,1,L),,,80-L) S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJP1",150,0)
 . S T="",$E(T,81-L)=$E(TXT,1,L) D SETLN(T,,$S($E(TXT,L+1,999)=""&$G(UND):1,1:0),80-L) S TXT=$E(TXT,L+1,999)
"RTN","PSOREJP1",151,0)
 Q
"RTN","PSOREJP1",152,0)
 ;
"RTN","PSOREJP1",153,0)
LABEL(FIELD) ; Sets the label for the field
"RTN","PSOREJP1",154,0)
 I FIELD="REASON" Q "Reason Code    : "
"RTN","PSOREJP1",155,0)
 I FIELD="PAYER MESSAGE" Q "Payer Addl Msg : "
"RTN","PSOREJP1",156,0)
 I FIELD="DUR TEXT" Q $S(+$$ISDUR^PSOREJP5(RX,REJ):"+DUR Text      : ",1:"DUR Text       : ")
"RTN","PSOREJP1",157,0)
 I FIELD="CLOSE COMMENTS" Q "Comments       : "
"RTN","PSOREJP1",158,0)
 Q ""
"RTN","PSOREJP1",159,0)
 ;
"RTN","PSOREJP1",160,0)
VIEW ; - Rx View hidden action
"RTN","PSOREJP1",161,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",162,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",163,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",164,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",165,0)
 ;
"RTN","PSOREJP1",166,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",167,0)
 DO
"RTN","PSOREJP1",168,0)
 . N PSOVDA,DA,PS
"RTN","PSOREJP1",169,0)
 . S (PSOVDA,DA)=RX,PS="REJECT"
"RTN","PSOREJP1",170,0)
 . N RX,REJ,FILL,LINE,TITLE D DP^PSORXVW
"RTN","PSOREJP1",171,0)
 ;
"RTN","PSOREJP1",172,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",173,0)
 Q
"RTN","PSOREJP1",174,0)
 ;
"RTN","PSOREJP1",175,0)
EDT ; - Rx Edit hidden action
"RTN","PSOREJP1",176,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",177,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",178,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",179,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",180,0)
 ;
"RTN","PSOREJP1",181,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",182,0)
 DO
"RTN","PSOREJP1",183,0)
 . N PSOSITE,ORN,PSOPAR,PSOLIST,PSOREJCT
"RTN","PSOREJP1",184,0)
 . S PSOSITE=$$RXSITE^PSOBPSUT(RX,FILL),ORN=RX
"RTN","PSOREJP1",185,0)
 . S PSOPAR=$G(^PS(59,PSOSITE,1)),PSOLIST(1)=ORN_","
"RTN","PSOREJP1",186,0)
 . ; Variable PSOREJCT is used so that EPH^PSORXEDT has the RX 'passed' by this routine
"RTN","PSOREJP1",187,0)
 . S PSOREJCT=RX_U_FILL
"RTN","PSOREJP1",188,0)
 . N RX,REJ,FILL,LINE,TITLE D EPH^PSORXEDT
"RTN","PSOREJP1",189,0)
 ;
"RTN","PSOREJP1",190,0)
 K VALMBCK I $$CLOSED(RX,REJ),$D(PSOSTFLT),PSOSTFLT="U" S CHANGE=1 Q
"RTN","PSOREJP1",191,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",192,0)
 Q
"RTN","PSOREJP1",193,0)
 ;
"RTN","PSOREJP1",194,0)
OVR ; - Override a REJECT action
"RTN","PSOREJP1",195,0)
 N PSOET
"RTN","PSOREJP1",196,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",197,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",198,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",199,0)
 I PSOET S VALMSG="OVR not allowed for "_$$ELIGDISP(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",200,0)
 N COD1,COD2,COD3
"RTN","PSOREJP1",201,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",202,0)
 S COD1=$$OVRCOD^PSOREJU1(1,$$GET1^DIQ(52.25,REJ_","_RX,14)) I COD1="^"!(COD1="") S VALMBCK="R" Q
"RTN","PSOREJP1",203,0)
 S COD2=$$OVRCOD^PSOREJU1(2) I COD2="^" S VALMBCK="R" Q
"RTN","PSOREJP1",204,0)
 S COD3=$$OVRCOD^PSOREJU1(3) I COD3="^" S VALMBCK="R" Q
"RTN","PSOREJP1",205,0)
 D OVRDSP^PSOREJU1(COD1_"^"_COD2_"^"_COD3)
"RTN","PSOREJP1",206,0)
 D SEND^PSOREJP3(COD1_"^"_COD2_"^"_COD3,,,PSOET)
"RTN","PSOREJP1",207,0)
 Q
"RTN","PSOREJP1",208,0)
 ;
"RTN","PSOREJP1",209,0)
RES ; - Re-submit a claim action
"RTN","PSOREJP1",210,0)
 N PSOET
"RTN","PSOREJP1",211,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",212,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",213,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",214,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",215,0)
 D SEND^PSOREJP3(,,,PSOET)
"RTN","PSOREJP1",216,0)
 Q
"RTN","PSOREJP1",217,0)
 ;
"RTN","PSOREJP1",218,0)
CLA ; - Submit Clarification Code
"RTN","PSOREJP1",219,0)
 N CLA,PSOET
"RTN","PSOREJP1",220,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",221,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",222,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",223,0)
 I PSOET S VALMSG="CLA not allowed for "_$$ELIGDISP(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",224,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",225,0)
 ; Prompt for the Submission Clarification Codes (up to three)
"RTN","PSOREJP1",226,0)
 S CLA=$$CLA^PSOREJU1() I CLA="^"!(CLA="") S VALMBCK="R" Q
"RTN","PSOREJP1",227,0)
 W ! D SEND^PSOREJP3(,CLA,,PSOET)
"RTN","PSOREJP1",228,0)
 Q
"RTN","PSOREJP1",229,0)
 ;
"RTN","PSOREJP1",230,0)
PA ; - Submit Prior Authorization
"RTN","PSOREJP1",231,0)
 N PA,PSOET
"RTN","PSOREJP1",232,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",233,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",234,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",235,0)
 I PSOET S VALMSG="PA not allowed for "_$$ELIGDISP(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",236,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",237,0)
 ; Prompt for Prior Auth fields
"RTN","PSOREJP1",238,0)
 S PA=$$PA^PSOREJU2() I PA="^" S VALMBCK="R" Q
"RTN","PSOREJP1",239,0)
 W ! D SEND^PSOREJP3(,,PA,PSOET)
"RTN","PSOREJP1",240,0)
 Q
"RTN","PSOREJP1",241,0)
 ;
"RTN","PSOREJP1",242,0)
MP ; - Patient Medication Profile
"RTN","PSOREJP1",243,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",244,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",245,0)
 N SITE,PATIENT
"RTN","PSOREJP1",246,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",247,0)
 S SITE=+$$RXSITE^PSOBPSUT(RX,FILL) S:$G(PSOSITE) SITE=PSOSITE
"RTN","PSOREJP1",248,0)
 S PATIENT=+$$GET1^DIQ(52,RX,2,"I")
"RTN","PSOREJP1",249,0)
 D LST^PSOPMP0(SITE,PATIENT) S VALMBCK="R"
"RTN","PSOREJP1",250,0)
 Q
"RTN","PSOREJP1",251,0)
 ;
"RTN","PSOREJP1",252,0)
EXIT ;
"RTN","PSOREJP1",253,0)
 K ^TMP("PSOREJP1",$J)
"RTN","PSOREJP1",254,0)
 Q
"RTN","PSOREJP1",255,0)
 ;
"RTN","PSOREJP1",256,0)
SETLN(TEXT,REV,UND,HIG) ; Sets a line to be displayed in the Body section
"RTN","PSOREJP1",257,0)
 N X
"RTN","PSOREJP1",258,0)
 S:$G(TEXT)="" $E(TEXT,80)=""
"RTN","PSOREJP1",259,0)
 S:$L(TEXT)>80 TEXT=$E(TEXT,1,80)
"RTN","PSOREJP1",260,0)
 S LINE=LINE+1,^TMP("PSOREJP1",$J,LINE,0)=$G(TEXT)
"RTN","PSOREJP1",261,0)
 ;
"RTN","PSOREJP1",262,0)
 I LINE>$G(LASTLN) D SAVE^VALM10(LINE) S LASTLN=LINE
"RTN","PSOREJP1",263,0)
 ;
"RTN","PSOREJP1",264,0)
 I $G(REV) D  Q
"RTN","PSOREJP1",265,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IOINORM)
"RTN","PSOREJP1",266,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","PSOREJP1",267,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","PSOREJP1",268,0)
 I $G(HIG) D
"RTN","PSOREJP1",269,0)
 . D CNTRL^VALM10(LINE,HIG,80,IOINHI_$S($G(UND):IOUON,1:""),IOINORM)
"RTN","PSOREJP1",270,0)
 Q
"RTN","PSOREJP1",271,0)
HELP ;
"RTN","PSOREJP1",272,0)
 Q
"RTN","PSOREJP1",273,0)
 ;
"RTN","PSOREJP1",274,0)
CLOSED(RX,REJ,MSG) ; Returns whether the REJECT is RESOLVED or NOT
"RTN","PSOREJP1",275,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,10,"I") D:$G(MSG)  Q 1
"RTN","PSOREJP1",276,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP1",277,0)
 Q 0
"RTN","PSOREJP1",278,0)
 ;
"RTN","PSOREJP1",279,0)
REOPN(RX,REJ) ; Returns whether the REJECT was RE-OPENED or NOT
"RTN","PSOREJP1",280,0)
 Q $S($$GET1^DIQ(52.25,REJ_","_RX,23)="":0,1:1)
"RTN","PSOREJP1",281,0)
 ;
"RTN","PSOREJP1",282,0)
EXP(CODE) ; - Returns the explanation field (.02) for a reject code
"RTN","PSOREJP1",283,0)
 ;  Input:  (r) CODE - .01 field (Code) value from file 9002313.93
"RTN","PSOREJP1",284,0)
 ; Output: .02 field (Explanation) value from file 9002313.93
"RTN","PSOREJP1",285,0)
 N DIC,X,Y
"RTN","PSOREJP1",286,0)
 S DIC=9002313.93,DIC(0)="Z",X=CODE D ^DIC
"RTN","PSOREJP1",287,0)
 Q $P($G(Y(0)),"^",2)
"RTN","PSOREJP1",288,0)
 ;
"RTN","PSOREJP1",289,0)
OUT(RX) ; - Supported call by outside PROTOCOLs to act on specific REJECTs
"RTN","PSOREJP1",290,0)
 N I,RFL,DATA,REJ,PSOBACK,VALMCNT,RXN
"RTN","PSOREJP1",291,0)
 I '$D(^XUSEC("PSORPH",DUZ)) D  Q
"RTN","PSOREJP1",292,0)
 . S VALMSG="PSORPH key required to use the REJ action.",VALMBCK="R"
"RTN","PSOREJP1",293,0)
 I $G(PS)="REJECT" D
"RTN","PSOREJP1",294,0)
 . S VALMSG="REJ action is not available at this point.",VALMBCK="R"
"RTN","PSOREJP1",295,0)
 S PSOBACK=1
"RTN","PSOREJP1",296,0)
 S (RFL,I)=0 F I=1:1 Q:'$D(^PSRX(RX,1,I))  S RFL=I
"RTN","PSOREJP1",297,0)
 S X=$$FIND^PSOREJUT(RX,RFL,.DATA) S REJ=$O(DATA(""))
"RTN","PSOREJP1",298,0)
 I '$G(REJ) S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOREJP1",299,0)
 D EN(RX,REJ) S VALMBCK="R"
"RTN","PSOREJP1",300,0)
 Q
"RTN","PSOREJP1",301,0)
 ;
"RTN","PSOREJP1",302,0)
SMA ;Submit multiple actions
"RTN","PSOREJP1",303,0)
 N CLA,I,OVR,OVRSTR,PA,REJIEN,DUR,RSC,DURIEN,REQ,RSUB,PSOET
"RTN","PSOREJP1",304,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",305,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",306,0)
 I PSOET S VALMSG="SMA not allowed for "_$$ELIGDISP(RX,FILL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",307,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",308,0)
 S DURIEN=$P($G(^PSRX(RX,"REJ",REJ,0)),U,11)
"RTN","PSOREJP1",309,0)
 D DURRESP^BPSNCPD3(DURIEN,.DUR) ; Reference to BPSNCPD3 supported by IA 4560
"RTN","PSOREJP1",310,0)
 ;
"RTN","PSOREJP1",311,0)
 ; Prompt for Prior Auth fields
"RTN","PSOREJP1",312,0)
 S PA=$$PA^PSOREJU2
"RTN","PSOREJP1",313,0)
 I PA="^" S VALMBCK="R" Q  ;User terminated or did not answer
"RTN","PSOREJP1",314,0)
 ;
"RTN","PSOREJP1",315,0)
 ; Prompt for submission clarification codes (up to three)
"RTN","PSOREJP1",316,0)
 W !
"RTN","PSOREJP1",317,0)
 S CLA=$$CLA^PSOREJU1
"RTN","PSOREJP1",318,0)
 I CLA="^" S VALMBCK="R" Q  ;User terminated or did not answer
"RTN","PSOREJP1",319,0)
 ;
"RTN","PSOREJP1",320,0)
 ; Check if DUR Overrides required - PSO*7*421
"RTN","PSOREJP1",321,0)
 S REQ=$$REQ I REQ="^" S VALMBCK="R" Q
"RTN","PSOREJP1",322,0)
 ;
"RTN","PSOREJP1",323,0)
 ; Prompt for DUR Overrides (up to 3) - option to delete default added - PSO*7*421
"RTN","PSOREJP1",324,0)
 S OVRSTR="",OVR=""
"RTN","PSOREJP1",325,0)
 I REQ S REJIEN=0 F RSUB=1:1:3 D  Q:OVR="^"!(OVR="")!(OVR="@")  S $P(OVRSTR,"~",RSUB)=OVR
"RTN","PSOREJP1",326,0)
 . I REJIEN]"" S REJIEN=$O(DUR(1,"DUR PPS",REJIEN))
"RTN","PSOREJP1",327,0)
 . S RSC="" I +REJIEN S RSC=$P($G(DUR(1,"DUR PPS",REJIEN,"REASON FOR SERVICE CODE"))," ",1)
"RTN","PSOREJP1",328,0)
 . S OVR=$$SMAOVR^PSOREJU1(RSC,RSUB)
"RTN","PSOREJP1",329,0)
 I OVR="^" S VALMBCK="R" Q  ;User exited or timed-out
"RTN","PSOREJP1",330,0)
 ;
"RTN","PSOREJP1",331,0)
 W !!,?6,"RECAP:"
"RTN","PSOREJP1",332,0)
 W !,?6,"Prior Authorization Type       : ",$P(PA,"^"),"  ",$$DSC^PSOREJU1(9002313.26,$P(PA,"^"),.02)
"RTN","PSOREJP1",333,0)
 W !,?6,"Prior Authorization Number     : ",$P(PA,"^",2)
"RTN","PSOREJP1",334,0)
 W !,?6,"Submission Clarification Code 1: ",$P(CLA,"~",1),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",1),.02)
"RTN","PSOREJP1",335,0)
 I $P(CLA,"~",2)]"" W !,?6,"Submission Clarification Code 2: ",$P(CLA,"~",2),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",2),.02)
"RTN","PSOREJP1",336,0)
 I $P(CLA,"~",3)]"" W !,?6,"Submission Clarification Code 3: ",$P(CLA,"~",3),"  ",$$DSC^PSOREJU1(9002313.25,$P(CLA,"~",3),.02)
"RTN","PSOREJP1",337,0)
 W !,?6,"Reason for Service Code 1      : ",$P($P(OVRSTR,"~",1),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",1),U,1),1)
"RTN","PSOREJP1",338,0)
 W !,?6,"Professional Service Code 1    : ",$P($P(OVRSTR,"~",1),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",1),U,2),1)
"RTN","PSOREJP1",339,0)
 W !,?6,"Result of Service Code 1       : ",$P($P(OVRSTR,"~",1),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",1),U,3),1)
"RTN","PSOREJP1",340,0)
 I $P($P(OVRSTR,"~",2),U,1)]"" W !,?6,"Reason for Service Code 2      : ",$P($P(OVRSTR,"~",2),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",2),U,1),1)
"RTN","PSOREJP1",341,0)
 I $P($P(OVRSTR,"~",2),U,2)]"" W !,?6,"Professional Service Code 2    : ",$P($P(OVRSTR,"~",2),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",2),U,2),1)
"RTN","PSOREJP1",342,0)
 I $P($P(OVRSTR,"~",2),U,3)]"" W !,?6,"Result of Service Code 2       : ",$P($P(OVRSTR,"~",2),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",2),U,3),1)
"RTN","PSOREJP1",343,0)
 I $P($P(OVRSTR,"~",3),U,1)]"" W !,?6,"Reason for Service Code 3      : ",$P($P(OVRSTR,"~",3),U,1),"  ",$$DSC^PSOREJU1(9002313.23,$P($P(OVRSTR,"~",3),U,1),1)
"RTN","PSOREJP1",344,0)
 I $P($P(OVRSTR,"~",3),U,2)]"" W !,?6,"Professional Service Code 3    : ",$P($P(OVRSTR,"~",3),U,2),"  ",$$DSC^PSOREJU1(9002313.21,$P($P(OVRSTR,"~",3),U,2),1)
"RTN","PSOREJP1",345,0)
 I $P($P(OVRSTR,"~",3),U,3)]"" W !,?6,"Result of Service Code 3       : ",$P($P(OVRSTR,"~",3),U,3),"  ",$$DSC^PSOREJU1(9002313.22,$P($P(OVRSTR,"~",3),U,3),1)
"RTN","PSOREJP1",346,0)
 W ! D SEND^PSOREJP3(OVRSTR,CLA,PA,PSOET)
"RTN","PSOREJP1",347,0)
 Q
"RTN","PSOREJP1",348,0)
 ;
"RTN","PSOREJP1",349,0)
VRX ; View ePharmacy Prescription - invoked from the Reject Information screen
"RTN","PSOREJP1",350,0)
 N BPSVRX
"RTN","PSOREJP1",351,0)
 D FULL^VALM1
"RTN","PSOREJP1",352,0)
 S BPSVRX("RXIEN")=$G(RX)
"RTN","PSOREJP1",353,0)
 S BPSVRX("FILL#")=$G(FILL)
"RTN","PSOREJP1",354,0)
 D ^BPSVRX    ; DBIA #5723
"RTN","PSOREJP1",355,0)
 S VALMBCK="R"
"RTN","PSOREJP1",356,0)
 Q
"RTN","PSOREJP1",357,0)
 ;
"RTN","PSOREJP1",358,0)
VER ; View ePharmacy Prescription - invoked from the Rx view hidden action of Medication Profile
"RTN","PSOREJP1",359,0)
 N BPSVRX
"RTN","PSOREJP1",360,0)
 K ^TMP("BPSVRX-PSO VIEW RX",$J)
"RTN","PSOREJP1",361,0)
 D FULL^VALM1
"RTN","PSOREJP1",362,0)
 ;
"RTN","PSOREJP1",363,0)
 ; save the current PSO Rx display array and header
"RTN","PSOREJP1",364,0)
 M ^TMP("BPSVRX-PSO VIEW RX",$J,"PSOHDR")=^TMP("PSOHDR",$J)
"RTN","PSOREJP1",365,0)
 M ^TMP("BPSVRX-PSO VIEW RX",$J,"PSOAL")=^TMP("PSOAL",$J)
"RTN","PSOREJP1",366,0)
 ;
"RTN","PSOREJP1",367,0)
 S BPSVRX("RXIEN")=$G(RXN)    ; Rx ien ptr file 52
"RTN","PSOREJP1",368,0)
 D ^BPSVRX    ; DBIA #5723
"RTN","PSOREJP1",369,0)
 ;
"RTN","PSOREJP1",370,0)
 ; restore the PSO Rx display array and header upon return
"RTN","PSOREJP1",371,0)
 I '$D(^TMP("PSOHDR",$J)) M ^TMP("PSOHDR",$J)=^TMP("BPSVRX-PSO VIEW RX",$J,"PSOHDR")
"RTN","PSOREJP1",372,0)
 I '$D(^TMP("PSOAL",$J)) M ^TMP("PSOAL",$J)=^TMP("BPSVRX-PSO VIEW RX",$J,"PSOAL")
"RTN","PSOREJP1",373,0)
 ;
"RTN","PSOREJP1",374,0)
 S VALMBCK="R"
"RTN","PSOREJP1",375,0)
 K ^TMP("BPSVRX-PSO VIEW RX",$J)
"RTN","PSOREJP1",376,0)
 Q
"RTN","PSOREJP1",377,0)
 ;
"RTN","PSOREJP1",378,0)
REQ() ;Prompt if DUR Rejects are required
"RTN","PSOREJP1",379,0)
 N DIR,DTOUT,DTOUT,DIRUT,DIROUT,X,Y
"RTN","PSOREJP1",380,0)
 S DIR("?")="Enter No if Reason Codes are not required. Enter Yes to proceed and enter up to 3 sets of override Reason Codes. To delete default Reason Codes, enter ""@""."
"RTN","PSOREJP1",381,0)
 S DIR("A")="Enter DUR codes",DIR(0)="Y",DIR("B")="YES" W ! D ^DIR
"RTN","PSOREJP1",382,0)
 I $D(DIRUT)!$D(DIROUT) Q "^" ;User exited or timed-out
"RTN","PSOREJP1",383,0)
 Q Y
"RTN","PSOREJP2")
0^6^B228260947
"RTN","PSOREJP2",1,0)
PSOREJP2 ;BIRM/MFR - Third Party Rejects View/Process ;04/28/05
"RTN","PSOREJP2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,287,289,358,385,403,421,427,448,482,512**;DEC 1997;Build 44
"RTN","PSOREJP2",3,0)
 ;Reference to ^PSSLOCK supported by IA #2789
"RTN","PSOREJP2",4,0)
 ;Reference to GETDAT^BPSBUTL supported by IA #4719
"RTN","PSOREJP2",5,0)
 ;Reference to ^PS(55 supported by IA #2228
"RTN","PSOREJP2",6,0)
 ;Reference to ^DIC(36 supported by ICR #6142
"RTN","PSOREJP2",7,0)
 ;
"RTN","PSOREJP2",8,0)
 N PSORJSRT,PSOPTFLT,PSODRFLT,PSORXFLT,PSOBYFLD,PSOSTFLT,DIR,DIRUT,DUOUT,DTOUT
"RTN","PSOREJP2",9,0)
 N PSOINFLT,PSODTRNG,PSOINGRP,PSOTRITG,PSOCVATG
"RTN","PSOREJP2",10,0)
 S PSORJASC=1,PSOINGRP=0,PSOTRITG=1,PSOCVATG=1
"RTN","PSOREJP2",11,0)
 ;
"RTN","PSOREJP2",12,0)
 ; - Division/Site selection
"RTN","PSOREJP2",13,0)
 D SEL^PSOREJU1("DIVISION","^PS(59,",.PSOREJST,$$GET1^DIQ(59,+$G(PSOSITE),.01)) I $G(PSOREJST)="^" G EXIT
"RTN","PSOREJP2",14,0)
 ;
"RTN","PSOREJP2",15,0)
 ; - Date range selection
"RTN","PSOREJP2",16,0)
 W ! S PSODTRNG=$$DTRNG("T-90","T") I PSODTRNG="^" G EXIT
"RTN","PSOREJP2",17,0)
 ;
"RTN","PSOREJP2",18,0)
SEL ; - Field Selection (Patient/Drug/Rx)
"RTN","PSOREJP2",19,0)
 S DIR(0)="S^P:PATIENT;D:DRUG;R:Rx;I:INSURANCE",DIR("B")="P"
"RTN","PSOREJP2",20,0)
 S DIR("A")="By (P)atient, (D)rug, (R)x or (I)nsurance" D ^DIR I $D(DIRUT) G EXIT
"RTN","PSOREJP2",21,0)
 S PSOBYFLD=Y,DIR("B")=""
"RTN","PSOREJP2",22,0)
 ;
"RTN","PSOREJP2",23,0)
 I PSOBYFLD="P" D  I $G(PSOPTFLT)="^" G SEL
"RTN","PSOREJP2",24,0)
 . S (PSODRFLT,PSORXFLT,PSOINFLT)="ALL",PSORJSRT="DR"
"RTN","PSOREJP2",25,0)
 . D SEL^PSOREJU1("PATIENT","^DPT(",.PSOPTFLT)
"RTN","PSOREJP2",26,0)
 ;
"RTN","PSOREJP2",27,0)
 I PSOBYFLD="D" D  I $G(PSODRFLT)="^" G SEL
"RTN","PSOREJP2",28,0)
 . S (PSOPTFLT,PSORXFLT,PSOINFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",29,0)
 . D SEL^PSOREJU1("DRUG","^PSDRUG(",.PSODRFLT)
"RTN","PSOREJP2",30,0)
 ;
"RTN","PSOREJP2",31,0)
 I PSOBYFLD="R" D  I $D(DIRUT)!'$G(PSORXFLT) G SEL
"RTN","PSOREJP2",32,0)
 . S (PSOPTFLT,PSODRFLT,PSOINFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",33,0)
 . N DIR,DIRUT,PSODRUG,PSOQUIT,PSORX,PSORXD,RXIEN,X
"RTN","PSOREJP2",34,0)
 . K PSOSTFLT,PSORXFLT
"RTN","PSOREJP2",35,0)
 . S DIR(0)="FAO^1:30"
"RTN","PSOREJP2",36,0)
 . S DIR("A")=" PRESCRIPTION: "
"RTN","PSOREJP2",37,0)
 . S DIR("?",1)=" A prescription number or ECME number may be entered.  To look-up a"
"RTN","PSOREJP2",38,0)
 . S DIR("?",2)=" prescription by the ECME number, please enter ""E."" followed by the ECME"
"RTN","PSOREJP2",39,0)
 . S DIR("?")=" number with or without any leading zeros."
"RTN","PSOREJP2",40,0)
 . ;
"RTN","PSOREJP2",41,0)
 . W ! D ^DIR I X=""!$D(DIRUT) Q
"RTN","PSOREJP2",42,0)
 . S X=$$UP^XLFSTR(X),PSOQUIT=0
"RTN","PSOREJP2",43,0)
 . ;
"RTN","PSOREJP2",44,0)
 . ; Prescription Number
"RTN","PSOREJP2",45,0)
 . I $E(X,1,2)'="E." S RXIEN=+$$RXLKP^PSOSPML4(X) I RXIEN<0 Q
"RTN","PSOREJP2",46,0)
 . ;
"RTN","PSOREJP2",47,0)
 . ; ECME Number
"RTN","PSOREJP2",48,0)
 . I $E(X,1,2)="E." D  I PSOQUIT Q
"RTN","PSOREJP2",49,0)
 . . S RXIEN=+$$RXNUM^PSOBPSU2($E(X,3,$L(X)))
"RTN","PSOREJP2",50,0)
 . . I RXIEN<0 W " ??" S PSOQUIT=1 Q
"RTN","PSOREJP2",51,0)
 . . S DIC=52,DR=".01;6",DA=RXIEN,DIQ="PSORXD",DIQ(0)="E"
"RTN","PSOREJP2",52,0)
 . . D DIQ^PSODI(52,DIC,DR,DA,.DIQ)
"RTN","PSOREJP2",53,0)
 . . S PSORX=$G(PSORXD(52,DA,.01,"E"))
"RTN","PSOREJP2",54,0)
 . . S PSODRUG=$G(PSORXD(52,DA,6,"E"))
"RTN","PSOREJP2",55,0)
 . . W ?31,PSORX_"  "_PSODRUG
"RTN","PSOREJP2",56,0)
 . ;
"RTN","PSOREJP2",57,0)
 . I '$O(^PSRX(RXIEN,"REJ",0)) D  Q
"RTN","PSOREJP2",58,0)
 . . W !?40,"Prescription does not have rejects!",$C(7)
"RTN","PSOREJP2",59,0)
 . ; 
"RTN","PSOREJP2",60,0)
 . S PSORXFLT=RXIEN
"RTN","PSOREJP2",61,0)
 ;
"RTN","PSOREJP2",62,0)
 ; Insurance Company Lookup - ICR 6142
"RTN","PSOREJP2",63,0)
 I PSOBYFLD="I" D  I $G(PSOINFLT)="^" G SEL
"RTN","PSOREJP2",64,0)
 . S (PSOPTFLT,PSODRFLT,PSORXFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",65,0)
 . D SEL^PSOREJU1("INSURANCE","^DIC(36,",.PSOINFLT)
"RTN","PSOREJP2",66,0)
 ;
"RTN","PSOREJP2",67,0)
 ; - Status Selection (UNRESOLVED or RESOLVED)
"RTN","PSOREJP2",68,0)
 I $G(PSOSTFLT)="" D  I $D(DIRUT) G EXIT
"RTN","PSOREJP2",69,0)
 . S DIR(0)="S^U:UNRESOLVED;R:RESOLVED;B:BOTH",DIR("B")="B"
"RTN","PSOREJP2",70,0)
 . S DIR("A")="(U)NRESOLVED, (R)RESOLVED or (B)OTH REJECT statuses" D ^DIR
"RTN","PSOREJP2",71,0)
 . S PSOSTFLT=Y
"RTN","PSOREJP2",72,0)
 ;
"RTN","PSOREJP2",73,0)
 D LST^PSOREJP0("VP")
"RTN","PSOREJP2",74,0)
 ;
"RTN","PSOREJP2",75,0)
EXIT Q
"RTN","PSOREJP2",76,0)
 ;
"RTN","PSOREJP2",77,0)
CLO ; - Ignore a REJECT hidden action
"RTN","PSOREJP2",78,0)
 N PSOTRIC,X,PSOET,PSOIT
"RTN","PSOREJP2",79,0)
 ;
"RTN","PSOREJP2",80,0)
 ; ESG - PSO*7*448 - Bug fix, should pull FILL from sub-file 52.25.
"RTN","PSOREJP2",81,0)
 I '$D(FILL) S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJP2",82,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)
"RTN","PSOREJP2",83,0)
 ;
"RTN","PSOREJP2",84,0)
 ;reference to ^XUSEC( supported by IA 10076
"RTN","PSOREJP2",85,0)
 ;bld, PSO*7*358 
"RTN","PSOREJP2",86,0)
 I PSOTRIC,'$D(^XUSEC("PSO TRICARE/CHAMPVA",DUZ)) S VALMSG="Action Requires <PSO TRICARE/CHAMPVA> security key",VALMBCK="R" Q
"RTN","PSOREJP2",87,0)
 ;if TRICARE or CHAMPVA and user has security key, prompt to continue or not
"RTN","PSOREJP2",88,0)
 ;
"RTN","PSOREJP2",89,0)
 ; Check for Ignore Threshold
"RTN","PSOREJP2",90,0)
 S PSOIT=$$IGNORE^PSOREJU1(RX,FILL)
"RTN","PSOREJP2",91,0)
 I $P(PSOIT,"^")=0 D  Q
"RTN","PSOREJP2",92,0)
 . S VALMBCK="R"
"RTN","PSOREJP2",93,0)
 . I $P(PSOIT,"^",2)'="" D
"RTN","PSOREJP2",94,0)
 . . W !!,"Gross Amount Due is $"_$P(PSOIT,"^",2)_". IGNORE requires EPHARMACY SITE MANAGER key."
"RTN","PSOREJP2",95,0)
 . . D WAIT^VALM1
"RTN","PSOREJP2",96,0)
 ;
"RTN","PSOREJP2",97,0)
 I PSOTRIC,'$$CONT^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",98,0)
 ;
"RTN","PSOREJP2",99,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",100,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R"
"RTN","PSOREJP2",101,0)
 N DIR,COM
"RTN","PSOREJP2",102,0)
 D FULL^VALM1
"RTN","PSOREJP2",103,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",104,0)
 W !
"RTN","PSOREJP2",105,0)
 S:PSOTRIC COM=$$TCOM^PSOREJP3(RX,FILL) S:'PSOTRIC COM=$$COM^PSOREJU1()
"RTN","PSOREJP2",106,0)
 I COM="^" S VALMBCK="R" Q
"RTN","PSOREJP2",107,0)
 W !
"RTN","PSOREJP2",108,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="NO"
"RTN","PSOREJP2",109,0)
 S DIR("A",1)="     When you confirm this REJECT will be marked RESOLVED."
"RTN","PSOREJP2",110,0)
 S DIR("A",2)=" "
"RTN","PSOREJP2",111,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP2",112,0)
 W ?40,"[Closing..." D CLOSE^PSOREJUT(RX,FILL,REJ,DUZ,6,COM,"","","","","",1) W "OK]",!,$C(7) H 1
"RTN","PSOREJP2",113,0)
 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP2",114,0)
 ;
"RTN","PSOREJP2",115,0)
 I $$PTLBL(RX,FILL) D PRINT^PSOREJP3(RX,FILL)
"RTN","PSOREJP2",116,0)
 I PSOTRIC D
"RTN","PSOREJP2",117,0)
 .S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP2",118,0)
 .D AUDIT^PSOTRI(RX,FILL,,COM,$S(PSOET:"N",1:"R"),$S(PSOTRIC=1:"T",PSOTRIC=2:"C",1:""))
"RTN","PSOREJP2",119,0)
 ;
"RTN","PSOREJP2",120,0)
 Q
"RTN","PSOREJP2",121,0)
 ;
"RTN","PSOREJP2",122,0)
OPN ; - Re-open a Closed/Resolved Reject
"RTN","PSOREJP2",123,0)
 I '$$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",124,0)
 . S VALMSG="This Reject is NOT marked resolved!",VALMBCK="R"
"RTN","PSOREJP2",125,0)
 ;cnf, PSO*7*358, check for discontinued and not released
"RTN","PSOREJP2",126,0)
 ;  12 - DISCONTINUED
"RTN","PSOREJP2",127,0)
 ;  14 - DISCONTINUED BY PROVIDER
"RTN","PSOREJP2",128,0)
 ;  15 - DISCONTINUED (EDIT)
"RTN","PSOREJP2",129,0)
 N DCSTAT,PSOREL
"RTN","PSOREJP2",130,0)
 S DCSTAT=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOREJP2",131,0)
 S PSOREL=0 D
"RTN","PSOREJP2",132,0)
 . I 'FILL S PSOREL=+$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOREJP2",133,0)
 . I FILL S PSOREL=+$$GET1^DIQ(52.1,FILL_","_RX,17,"I")
"RTN","PSOREJP2",134,0)
 I 'PSOREL,"/12/14/15/"[("/"_DCSTAT_"/") S VALMSG="Discontinued Rx has not been released.",VALMBCK="R" Q
"RTN","PSOREJP2",135,0)
 N DIR,COM,REJDATA,NEWDATA,X,REOPEN
"RTN","PSOREJP2",136,0)
 D FULL^VALM1
"RTN","PSOREJP2",137,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",138,0)
 W !
"RTN","PSOREJP2",139,0)
 S DIR(0)="Y",DIR("A")="     Confirm",DIR("B")="NO"
"RTN","PSOREJP2",140,0)
 S DIR("A",1)="     When you confirm this REJECT will be marked UNRESOLVED."
"RTN","PSOREJP2",141,0)
 S DIR("A",2)=" "
"RTN","PSOREJP2",142,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP2",143,0)
 ;
"RTN","PSOREJP2",144,0)
 W ?40,"[Re-opening..."
"RTN","PSOREJP2",145,0)
 K REJDATA D GET^PSOREJU2(RX,FILL,.REJDATA,REJ,1) D SETOPN^PSOREJU2(RX,REJ)
"RTN","PSOREJP2",146,0)
 K NEWDATA M NEWDATA=REJDATA(REJ) S NEWDATA("PHARMACIST")=DUZ
"RTN","PSOREJP2",147,0)
 S REOPEN=1 D SAVE^PSOREJUT(RX,FILL,.NEWDATA,REOPEN)
"RTN","PSOREJP2",148,0)
 I $G(NEWDATA("REJECT IEN")),$D(REJDATA(REJ,"COMMENTS")) D
"RTN","PSOREJP2",149,0)
 . S COM=0 F  S COM=$O(REJDATA(REJ,"COMMENTS",COM)) Q:'COM  D
"RTN","PSOREJP2",150,0)
 . . S X(1)=REJDATA(REJ,"COMMENTS",COM,"COMMENTS")
"RTN","PSOREJP2",151,0)
 . . S X(2)=REJDATA(REJ,"COMMENTS",COM,"DATE/TIME")
"RTN","PSOREJP2",152,0)
 . . S X(3)=REJDATA(REJ,"COMMENTS",COM,"USER")
"RTN","PSOREJP2",153,0)
 . . D SAVECOM^PSOREJP3(RX,NEWDATA("REJECT IEN"),X(1),X(2),X(3))
"RTN","PSOREJP2",154,0)
 D RETRXF^PSOREJU2(RX,FILL,0)
"RTN","PSOREJP2",155,0)
 W "OK]",!,$C(7) H 1
"RTN","PSOREJP2",156,0)
 S CHANGE=1
"RTN","PSOREJP2",157,0)
 Q
"RTN","PSOREJP2",158,0)
 ;
"RTN","PSOREJP2",159,0)
SDC ; - Suspense Date Calculation
"RTN","PSOREJP2",160,0)
 D CHG(1)
"RTN","PSOREJP2",161,0)
 Q
"RTN","PSOREJP2",162,0)
 ;
"RTN","PSOREJP2",163,0)
CSD ;CSD - Change Suspense Date action entry point
"RTN","PSOREJP2",164,0)
 D CHG(0)
"RTN","PSOREJP2",165,0)
 Q
"RTN","PSOREJP2",166,0)
 ;
"RTN","PSOREJP2",167,0)
CHG(SDC) ; - Change Suspense Date action
"RTN","PSOREJP2",168,0)
 ;Local:
"RTN","PSOREJP2",169,0)
 ;  SDC - indicates if the suspense date is being manually changed or calculated. 
"RTN","PSOREJP2",170,0)
 ;  RX  - RX IEN
"RTN","PSOREJP2",171,0)
 ;  REJ - Reject indicator
"RTN","PSOREJP2",172,0)
 ;
"RTN","PSOREJP2",173,0)
 I '$G(SDC) S SDC=0
"RTN","PSOREJP2",174,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",175,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP2",176,0)
 ;
"RTN","PSOREJP2",177,0)
 N SUSDT,PSOMSG,Y,SUSRX,%DT,DA,DIE,DR,ISSDT,EXPDT,PSOMSG,CUTDT,FILDT,RFL,COB
"RTN","PSOREJP2",178,0)
 ;
"RTN","PSOREJP2",179,0)
 S RFL=+$$GET1^DIQ(52.25,REJ_","_RX,5),SUSDT=$$RXSUDT^PSOBPSUT(RX,RFL)
"RTN","PSOREJP2",180,0)
 I RFL>0 S FILDT=$$GET1^DIQ(52.1,RFL_","_RX,.01,"I")
"RTN","PSOREJP2",181,0)
 E  S FILDT=$$GET1^DIQ(52,RX,22,"I")
"RTN","PSOREJP2",182,0)
 I SUSDT="" S VALMSG="Prescription is not suspended!",VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",183,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) S VALMSG="Prescription has been released already!",VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",184,0)
 ;cnf, PSO*7*358, add PSOET logic for TRICARE/CHAMPVA non-billable
"RTN","PSOREJP2",185,0)
 S PSOET=$$PSOET^PSOREJP3(RX,RFL)
"RTN","PSOREJP2",186,0)
 I PSOET S VALMSG=$S(SDC=1:"SDC",1:"CSD")_" not allowed for "_$$ELIGDISP^PSOREJP1(RX,RFL)_" Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP2",187,0)
 ;
"RTN","PSOREJP2",188,0)
 D PSOL^PSSLOCK(RX) I '$G(PSOMSG) S VALMSG=$P(PSOMSG,"^",2),VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",189,0)
 ;
"RTN","PSOREJP2",190,0)
 S ISSDT=$$GET1^DIQ(52,RX,1,"I"),EXPDT=$$GET1^DIQ(52,RX,26,"I")
"RTN","PSOREJP2",191,0)
 S SUSRX=$O(^PS(52.5,"B",RX,0))
"RTN","PSOREJP2",192,0)
 ;
"RTN","PSOREJP2",193,0)
 D FULL^VALM1
"RTN","PSOREJP2",194,0)
 I SDC D  I SUSDT=0 D PSOUL^PSSLOCK(RX) S VALMBCK="R" Q
"RTN","PSOREJP2",195,0)
 . S COB=$$GET1^DIQ(52.25,REJ_","_RX,27,"I")
"RTN","PSOREJP2",196,0)
 . I 'COB S COB=1
"RTN","PSOREJP2",197,0)
 . S SUSDT=$$CALCSD(RX,RFL,COB)
"RTN","PSOREJP2",198,0)
 ;
"RTN","PSOREJP2",199,0)
SUDT ; Asks for the new Suspense Date
"RTN","PSOREJP2",200,0)
 N X1,X2
"RTN","PSOREJP2",201,0)
 S X1=FILDT,X2=89 D C^%DTC S CUTDT=X
"RTN","PSOREJP2",202,0)
 I SDC,SUSDT,SUSDT<DT W !,*7,"  **CALCULATED SUSPENSE DATE IS IN THE PAST:  ",$$FMTE^XLFDT(SUSDT),"**" S SUSDT=""
"RTN","PSOREJP2",203,0)
 E  S %DT("B")=$$FMTE^XLFDT(SUSDT)
"RTN","PSOREJP2",204,0)
 S %DT="EA",%DT("A")=$S(SDC:"NEW ",1:"")_"SUSPENSE DATE: "
"RTN","PSOREJP2",205,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) D PSOUL^PSSLOCK(RX) S VALMBCK="R" I (SDC) W !,"ACTION NOT TAKEN!" Q
"RTN","PSOREJP2",206,0)
 I Y<ISSDT D  G SUDT
"RTN","PSOREJP2",207,0)
 . W !!?5,"Suspense Date cannot be before Issue Date: ",$$FMTE^XLFDT(ISSDT),".",$C(7)
"RTN","PSOREJP2",208,0)
 I Y>EXPDT D  G SUDT
"RTN","PSOREJP2",209,0)
 . W !!?5,"Suspense Date cannot be after Expiration Date: ",$$FMTE^XLFDT(EXPDT),".",$C(7)
"RTN","PSOREJP2",210,0)
 I Y>CUTDT D  G SUDT
"RTN","PSOREJP2",211,0)
 . W !!?5,"Suspense Date cannot be after fill date plus 90 days: "_$$FMTE^XLFDT(CUTDT),".",$C(7)
"RTN","PSOREJP2",212,0)
 S SUSDT=Y
"RTN","PSOREJP2",213,0)
 ;
"RTN","PSOREJP2",214,0)
 N DIR,DIRUT W !
"RTN","PSOREJP2",215,0)
 S DIR("A",1)="     When you confirm, this REJECT will be marked resolved. A"
"RTN","PSOREJP2",216,0)
 S DIR("A",2)="     new claim will be re-submitted to the 3rd party payer"
"RTN","PSOREJP2",217,0)
 I $$GET1^DIQ(52.5,SUSRX,3)="" D
"RTN","PSOREJP2",218,0)
 . I SUSDT>DT D
"RTN","PSOREJP2",219,0)
 . . S DIR("A",3)="     when the prescription label for this fill is printed"
"RTN","PSOREJP2",220,0)
 . . S DIR("A",4)="     from suspense on "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",221,0)
 . . S DIR("A",5)=" "
"RTN","PSOREJP2",222,0)
 . . S DIR("A",6)="     Note: THE LABEL FOR THIS PRESCRIPTION FILL WILL NOT BE"
"RTN","PSOREJP2",223,0)
 . . S DIR("A",7)="           PRINTED LOCAL FROM SUSPENSE BEFORE "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",224,0)
 . E  D
"RTN","PSOREJP2",225,0)
 . . S DIR("A",3)="     the next time local labels are printed from suspense."
"RTN","PSOREJP2",226,0)
 E  D
"RTN","PSOREJP2",227,0)
 . I SUSDT>DT D
"RTN","PSOREJP2",228,0)
 . . S DIR("A",3)="     when the prescription is transmitted to CMOP on "
"RTN","PSOREJP2",229,0)
 . . S DIR("A",4)="     "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",230,0)
 . . S DIR("A",5)=" "
"RTN","PSOREJP2",231,0)
 . . S DIR("A",6)="     Note: THIS PRESCRIPTION FILL WILL NOT BE TRANSMITTED TO"
"RTN","PSOREJP2",232,0)
 . . S DIR("A",7)="           CMOP BEFORE "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",233,0)
 . E  D
"RTN","PSOREJP2",234,0)
 . . S DIR("A",3)="     when this prescription fill is transmitted to CMOP on"
"RTN","PSOREJP2",235,0)
 . . S DIR("A",4)="     the next CMOP transmission."
"RTN","PSOREJP2",236,0)
    ;
"RTN","PSOREJP2",237,0)
 S DIR("A",$O(DIR("A",""),-1)+1)=" "
"RTN","PSOREJP2",238,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="YES"
"RTN","PSOREJP2",239,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" D PSOUL^PSSLOCK(RX) Q
"RTN","PSOREJP2",240,0)
 ;
"RTN","PSOREJP2",241,0)
 ; - Suspense/Fill Date updates
"RTN","PSOREJP2",242,0)
 I SUSDT'=$$RXSUDT^PSOBPSUT(RX,RFL) D
"RTN","PSOREJP2",243,0)
 . N DA,DIE,DR,PSOX,SFN,INDT,DEAD
"RTN","PSOREJP2",244,0)
 . S DA=SUSRX,DIE="^PS(52.5,",DR=".02///"_SUSDT D ^DIE
"RTN","PSOREJP2",245,0)
 . S SFN=SUSRX,DEAD=0,INDT=SUSDT D CHANGE^PSOSUCH1(RX,RFL)
"RTN","PSOREJP2",246,0)
 ;
"RTN","PSOREJP2",247,0)
 ; - Flagging the prescription to be re-submitted to ECME on the next CMOP/Print from Suspense
"RTN","PSOREJP2",248,0)
 D RETRXF^PSOREJU2(RX,RFL,1)
"RTN","PSOREJP2",249,0)
 W ?40,"[Closing..."
"RTN","PSOREJP2",250,0)
 D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,8,"Fill Date changed to "_$$FMTE^XLFDT(SUSDT)_". A new claim will be re-submitted on this date.")
"RTN","PSOREJP2",251,0)
 W "OK]",!,$C(7) H 1 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP2",252,0)
 D PSOUL^PSSLOCK(RX)
"RTN","PSOREJP2",253,0)
 Q
"RTN","PSOREJP2",254,0)
 ;
"RTN","PSOREJP2",255,0)
PTLBL(RX,RFL) ; Conditionally prompts user with 'Print Label?' prompt.
"RTN","PSOREJP2",256,0)
 ; If User responds YES to 'Print Label' value of 1 is returned.
"RTN","PSOREJP2",257,0)
 ; If User responds NO to 'Print Label' value of 0 is returned.
"RTN","PSOREJP2",258,0)
 N CMP,LBL,PSOACT,PSOBPS,PSOTRIC,PTLBL,REPRINT
"RTN","PSOREJP2",259,0)
 ;
"RTN","PSOREJP2",260,0)
 I $G(RFL)="" S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJP2",261,0)
 ;
"RTN","PSOREJP2",262,0)
 ; PSOBPS and PSOTRIC are used to check eligibility. Eligibility checking
"RTN","PSOREJP2",263,0)
 ; is only needed for non-billable Rxs (ie PSOBPS'="e")
"RTN","PSOREJP2",264,0)
 S PSOBPS=$$ECME^PSOBPSUT(RX)
"RTN","PSOREJP2",265,0)
 S PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,.PSOTRIC)
"RTN","PSOREJP2",266,0)
 ;
"RTN","PSOREJP2",267,0)
 I $$FIND^PSOREJUT(RX,RFL) Q 0       ; Has OPEN/UNRESOLVED 3rd pary payer reject
"RTN","PSOREJP2",268,0)
 I $$GET1^DIQ(52,RX,100,"I") Q 0     ; Rx status not ACTIVE
"RTN","PSOREJP2",269,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL),PSOBPS="e" Q 0            ; Rx Released - billable
"RTN","PSOREJP2",270,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL),PSOBPS'="e",'PSOTRIC Q 0  ; Rx Released - non-billable
"RTN","PSOREJP2",271,0)
 ;
"RTN","PSOREJP2",272,0)
 ; If CMOP Suspense Label printed for this Fill, don't allow reprint here
"RTN","PSOREJP2",273,0)
 S PTLBL=1
"RTN","PSOREJP2",274,0)
 S PSOACT=0
"RTN","PSOREJP2",275,0)
 F  S PSOACT=$O(^PSRX(RX,"A",PSOACT)) Q:'PSOACT  D  Q:'PTLBL
"RTN","PSOREJP2",276,0)
 . I +$$GET1^DIQ(52.3,PSOACT_","_RX,.04,"I")'=RFL Q
"RTN","PSOREJP2",277,0)
 . I $$GET1^DIQ(52.3,PSOACT_","_RX,.05,"E")["CMOP Suspense Label Printed" S PTLBL=0
"RTN","PSOREJP2",278,0)
 I 'PTLBL Q 0
"RTN","PSOREJP2",279,0)
 ;
"RTN","PSOREJP2",280,0)
 ; If there is an entry in the CMOP Event multiple, and it is for the
"RTN","PSOREJP2",281,0)
 ; current Fill, check the status.  If 0/Transmitted, 1/Dispensed, or
"RTN","PSOREJP2",282,0)
 ; 2/Retransmitted, then do not allow the label to be printed.
"RTN","PSOREJP2",283,0)
 ;
"RTN","PSOREJP2",284,0)
 S CMP=0
"RTN","PSOREJP2",285,0)
 F  S CMP=$O(^PSRX(RX,4,CMP)) Q:'CMP  D  Q:'PTLBL
"RTN","PSOREJP2",286,0)
 . I +$$GET1^DIQ(52.01,CMP_","_RX,2,"I")'=RFL Q
"RTN","PSOREJP2",287,0)
 . I "0,1,2"[$$GET1^DIQ(52.01,CMP_","_RX,3,"I") S PTLBL=0
"RTN","PSOREJP2",288,0)
 I 'PTLBL Q 0
"RTN","PSOREJP2",289,0)
 ;
"RTN","PSOREJP2",290,0)
 ; - Label already printed for Rx fill?
"RTN","PSOREJP2",291,0)
 S LBL=0
"RTN","PSOREJP2",292,0)
 F  S LBL=$O(^PSRX(RX,"L",LBL)) Q:'LBL  D  Q:'PTLBL
"RTN","PSOREJP2",293,0)
 . I +$$GET1^DIQ(52.032,LBL_","_RX,1,"I")'=RFL Q
"RTN","PSOREJP2",294,0)
 . I '$$RXRLDT^PSOBPSUT(RX,RFL),+$$GET1^DIQ(52.032,LBL_","_RX,1,"I")=RFL,PSOBPS="e" S REPRINT=1 Q
"RTN","PSOREJP2",295,0)
 . I $G(PSOTRIC)&($$RXRLDT^PSOBPSUT(RX,RFL)),PSOBPS'="e" S REPRINT=1 Q
"RTN","PSOREJP2",296,0)
 . I $$GET1^DIQ(52.032,LBL_","_RX,4,"I") Q
"RTN","PSOREJP2",297,0)
 . I $$GET1^DIQ(52.032,LBL_","_RX,2)["INTERACTION" Q
"RTN","PSOREJP2",298,0)
 . S PTLBL=0
"RTN","PSOREJP2",299,0)
 ;
"RTN","PSOREJP2",300,0)
 I 'PTLBL Q 0
"RTN","PSOREJP2",301,0)
 ;
"RTN","PSOREJP2",302,0)
 N DIR,DIRUT,Y
"RTN","PSOREJP2",303,0)
 W !
"RTN","PSOREJP2",304,0)
 S DIR(0)="Y"
"RTN","PSOREJP2",305,0)
 S DIR("A")=$S('$G(REPRINT):"Print Label",1:"Reprint Label")
"RTN","PSOREJP2",306,0)
 S DIR("B")="YES"
"RTN","PSOREJP2",307,0)
 I PSOBPS="e" K DIR("B")
"RTN","PSOREJP2",308,0)
 D ^DIR
"RTN","PSOREJP2",309,0)
 I $G(Y)=0!$D(DIRUT) S PTLBL=0
"RTN","PSOREJP2",310,0)
 ;
"RTN","PSOREJP2",311,0)
 Q PTLBL
"RTN","PSOREJP2",312,0)
 ;
"RTN","PSOREJP2",313,0)
DTRNG(BGN,END) ; Date Range Selection
"RTN","PSOREJP2",314,0)
 ;Input: (o) BGN - Default Begin Date 
"RTN","PSOREJP2",315,0)
 ;       (o) END - Default End Date 
"RTN","PSOREJP2",316,0)
 ;
"RTN","PSOREJP2",317,0)
 N %DT,DTOUT,DUOUT,DTRNG,X,Y
"RTN","PSOREJP2",318,0)
 S DTRNG=""
"RTN","PSOREJP2",319,0)
 S %DT="AEST",%DT("A")="BEGIN REJECT DATE: ",%DT("B")=$G(BGN) K:$G(BGN)="" %DT("B") D ^%DT
"RTN","PSOREJP2",320,0)
 I $G(DUOUT)!$G(DTOUT)!($G(Y)=-1) Q "^"
"RTN","PSOREJP2",321,0)
 S $P(DTRNG,U)=Y
"RTN","PSOREJP2",322,0)
 ;
"RTN","PSOREJP2",323,0)
 W ! K %DT
"RTN","PSOREJP2",324,0)
 S %DT="AEST",%DT("A")="END REJECT DATE: ",%DT("B")=$G(END),%DT(0)=Y K:$G(END)="" %DT("B") D ^%DT
"RTN","PSOREJP2",325,0)
 I $G(DUOUT)!$G(DTOUT)!($G(Y)=-1) Q "^"
"RTN","PSOREJP2",326,0)
 ;
"RTN","PSOREJP2",327,0)
 ;Define Entry
"RTN","PSOREJP2",328,0)
 S $P(DTRNG,U,2)=Y
"RTN","PSOREJP2",329,0)
 ;
"RTN","PSOREJP2",330,0)
 Q DTRNG
"RTN","PSOREJP2",331,0)
 ;
"RTN","PSOREJP2",332,0)
CALCSD(RX,FIL,COB) ;
"RTN","PSOREJP2",333,0)
 ; CALCSD - Prompt the user for Last Date of Service, Last Days Supply and
"RTN","PSOREJP2",334,0)
 ;   then calculate the suspense date based on these input.
"RTN","PSOREJP2",335,0)
 ; Input
"RTN","PSOREJP2",336,0)
 ;   RX - Prescription IEN
"RTN","PSOREJP2",337,0)
 ;   FIL - Fill Number
"RTN","PSOREJP2",338,0)
 ;   COB - Coordination of Benefits
"RTN","PSOREJP2",339,0)
 ; Return
"RTN","PSOREJP2",340,0)
 ;   The calculated suspense date  
"RTN","PSOREJP2",341,0)
 ;
"RTN","PSOREJP2",342,0)
 N DIR,X,Y,DUOUT,DTOUT,DIRUT,DIROUT,LDOS,LDSUP,LDS
"RTN","PSOREJP2",343,0)
 I '$G(RX) Q 0
"RTN","PSOREJP2",344,0)
 I $G(FIL)="" Q 0
"RTN","PSOREJP2",345,0)
 I '$G(COB) S COB=1
"RTN","PSOREJP2",346,0)
 ;
"RTN","PSOREJP2",347,0)
 D PREVRX(RX,FIL,COB,.LDOS,.LDS)   ; get the previous Rx last date of service and last days supply
"RTN","PSOREJP2",348,0)
 ; Prompt for Last DOS
"RTN","PSOREJP2",349,0)
 S DIR(0)="D",DIR("A")="LAST DATE OF SERVICE"
"RTN","PSOREJP2",350,0)
 I LDOS S DIR("B")=$$FMTE^XLFDT($G(LDOS))
"RTN","PSOREJP2",351,0)
 D ^DIR
"RTN","PSOREJP2",352,0)
 I $D(DIRUT) W !,"ACTION NOT TAKEN!" Q 0
"RTN","PSOREJP2",353,0)
 S LDOS=Y W "  ("_$$FMTE^XLFDT($G(LDOS))_")"
"RTN","PSOREJP2",354,0)
 ;
"RTN","PSOREJP2",355,0)
 ; Prompt for Last Days Supply
"RTN","PSOREJP2",356,0)
 S LDSUP=LDS
"RTN","PSOREJP2",357,0)
 K DIR
"RTN","PSOREJP2",358,0)
 S DIR(0)="N",DIR("A")="LAST DAYS SUPPLY"
"RTN","PSOREJP2",359,0)
 I LDSUP]"" S DIR("B")=+LDSUP
"RTN","PSOREJP2",360,0)
 D ^DIR
"RTN","PSOREJP2",361,0)
 I $D(DIRUT) W !,"ACTION NOT TAKEN!" Q 0
"RTN","PSOREJP2",362,0)
 ;
"RTN","PSOREJP2",363,0)
 ; Calculate the suspense date to be Last DOS plus 3/4 of the Last Days Supply
"RTN","PSOREJP2",364,0)
 ; Fractions are rounded up
"RTN","PSOREJP2",365,0)
 S LDSUP=Y*.75
"RTN","PSOREJP2",366,0)
 S:LDSUP["." LDSUP=(LDSUP+1)\1
"RTN","PSOREJP2",367,0)
 Q $$FMADD^XLFDT(LDOS,LDSUP)
"RTN","PSOREJP2",368,0)
 ;
"RTN","PSOREJP2",369,0)
PREVRX(RX,RFL,COB,LDOS,LDAYS,PREVRX) ; Gather last date of service and last days supply from previous rx
"RTN","PSOREJP2",370,0)
 ;    input:  RX  - Current RX
"RTN","PSOREJP2",371,0)
 ;            RFL - Refill
"RTN","PSOREJP2",372,0)
 ;            COB - Coordination of benefits
"RTN","PSOREJP2",373,0)
 ;   output:  LDOS - (pass by reference) Last date of service in fileman format, or ""
"RTN","PSOREJP2",374,0)
 ;            LDAYS - (pass by reference) Last days supply in numeric format, or ""
"RTN","PSOREJP2",375,0)
 ;            PREVRX - (pass by reference) Previous Rx for same drug, if any
"RTN","PSOREJP2",376,0)
 ;
"RTN","PSOREJP2",377,0)
 S (LDOS,LDAYS,PREVRX)=""
"RTN","PSOREJP2",378,0)
 I '$G(RX) G PREVRXQ
"RTN","PSOREJP2",379,0)
 I $G(RFL)="" G PREVRXQ
"RTN","PSOREJP2",380,0)
 I '$G(COB) S COB=1
"RTN","PSOREJP2",381,0)
 ;
"RTN","PSOREJP2",382,0)
 ; Original fill.  Check previous Rx's.
"RTN","PSOREJP2",383,0)
 ;
"RTN","PSOREJP2",384,0)
 I RFL=0 D
"RTN","PSOREJP2",385,0)
 . N X
"RTN","PSOREJP2",386,0)
 . S X=$$LAST120(RX,COB)   ; other Rx 120 day time window
"RTN","PSOREJP2",387,0)
 . S LDOS=$P(X,U,1)        ; last date of service (older rx)
"RTN","PSOREJP2",388,0)
 . S LDAYS=$P(X,U,2)       ; last days supply (older rx)
"RTN","PSOREJP2",389,0)
 . S PREVRX=$P(X,U,3)      ; Previous Rx, if any
"RTN","PSOREJP2",390,0)
 . Q
"RTN","PSOREJP2",391,0)
 ;
"RTN","PSOREJP2",392,0)
 ; refill - same RX. Get previus fill information
"RTN","PSOREJP2",393,0)
 I RFL>0 D
"RTN","PSOREJP2",394,0)
 . N FL
"RTN","PSOREJP2",395,0)
 . F FL=(RFL-1):-1:0 D  Q:LDOS           ; start with the previous fill (RFL-1)
"RTN","PSOREJP2",396,0)
 .. I $$STATUS^PSOBPSUT(RX,FL)="" Q      ; no ECME activity - skip
"RTN","PSOREJP2",397,0)
 .. I $$FIND^PSOREJUT(RX,FL,,,1) Q       ; unresolved reject on worklist - skip
"RTN","PSOREJP2",398,0)
 .. D GETDAT^BPSBUTL(RX,FL,COB,.LDOS,.LDAYS)    ; DBIA 4719
"RTN","PSOREJP2",399,0)
 .. Q
"RTN","PSOREJP2",400,0)
 . Q
"RTN","PSOREJP2",401,0)
 ;
"RTN","PSOREJP2",402,0)
PREVRXQ ;
"RTN","PSOREJP2",403,0)
 Q
"RTN","PSOREJP2",404,0)
 ;
"RTN","PSOREJP2",405,0)
LAST120(RX,COB) ;new tag PSO*7*421, cnf
"RTN","PSOREJP2",406,0)
 ; For the original fill, get the default DOS/Days Supply by getting
"RTN","PSOREJP2",407,0)
 ; most recent DOS from the other RXs within a time window for the same
"RTN","PSOREJP2",408,0)
 ; patient and drug and dosage Time window - Prescription has an
"RTN","PSOREJP2",409,0)
 ; expiration date that is in the future or within the last 120 days
"RTN","PSOREJP2",410,0)
 ; Input
"RTN","PSOREJP2",411,0)
 ;   RX - Prescription IEN
"RTN","PSOREJP2",412,0)
 ;  COB - coordination of benefits indicator (defaults to 1 if not passed)
"RTN","PSOREJP2",413,0)
 ; Output
"RTN","PSOREJP2",414,0)
 ;   Last Date of Service ^ Last Days Supply ^ Previous Rx
"RTN","PSOREJP2",415,0)
 ;
"RTN","PSOREJP2",416,0)
 N DOSAGE,DOSAGE1,DRUG,DRUG1,DSUP,DSUP1,EXPDT,FL
"RTN","PSOREJP2",417,0)
 N LDOS,LDS,LSTFIL,PAT,PREVFL,PREVRX,QTY,QTY1,RX0,RX1,X1,X2
"RTN","PSOREJP2",418,0)
 ;
"RTN","PSOREJP2",419,0)
 I '$G(COB) S COB=1
"RTN","PSOREJP2",420,0)
 S LDOS="",LDS="",PREVRX=""
"RTN","PSOREJP2",421,0)
 S RX0=$G(^PSRX(RX,0))  ; Main 0 node.
"RTN","PSOREJP2",422,0)
 S PAT=$P(RX0,U,2),DRUG=$P(RX0,U,6)
"RTN","PSOREJP2",423,0)
 I 'PAT!'DRUG Q "^^"
"RTN","PSOREJP2",424,0)
 S QTY=+$P(RX0,U,7),DSUP=+$P(RX0,U,8),DOSAGE=""
"RTN","PSOREJP2",425,0)
 I QTY,DSUP S DOSAGE=QTY/DSUP    ; Dosage is ratio of Qty to Days Supply.
"RTN","PSOREJP2",426,0)
 S EXPDT=$$FMADD^XLFDT(DT,-121)
"RTN","PSOREJP2",427,0)
 F  S EXPDT=$O(^PS(55,PAT,"P","A",EXPDT)) Q:'EXPDT  D  ; IA 2228.
"RTN","PSOREJP2",428,0)
 . S RX1=""
"RTN","PSOREJP2",429,0)
 . F  S RX1=$O(^PS(55,PAT,"P","A",EXPDT,RX1)) Q:'RX1  I RX'=RX1 D
"RTN","PSOREJP2",430,0)
 . . S DRUG1=$P($G(^PSRX(+RX1,0)),U,6)
"RTN","PSOREJP2",431,0)
 . . I DRUG'=DRUG1 Q     ; If not the same drug, skip this other Rx.
"RTN","PSOREJP2",432,0)
 . . ;
"RTN","PSOREJP2",433,0)
 . . S LSTFIL=$$LSTRFL^PSOBPSU1(RX1)      ; Start with last fill# of this other Rx.
"RTN","PSOREJP2",434,0)
 . . S X1="",X2=""                        ; For this other Rx, initialize the temp variables for last DOS and last days supply.
"RTN","PSOREJP2",435,0)
 . . F FL=LSTFIL:-1:0 D  Q:X1             ; Loop backwards until we find the latest valid DOS.
"RTN","PSOREJP2",436,0)
 . . . D CHECKIT(RX1,FL,COB,.X1,.X2)
"RTN","PSOREJP2",437,0)
 . . . Q
"RTN","PSOREJP2",438,0)
 . . ;
"RTN","PSOREJP2",439,0)
 . . I X1>LDOS S LDOS=X1,LDS=X2,PREVRX=RX1,PREVFL=FL
"RTN","PSOREJP2",440,0)
 . . Q
"RTN","PSOREJP2",441,0)
 . Q
"RTN","PSOREJP2",442,0)
 ;
"RTN","PSOREJP2",443,0)
 ; If a previous Rx passed all other checks, then check the dosage.  If
"RTN","PSOREJP2",444,0)
 ; the dosage is not the same, then clear out the variables and treat as
"RTN","PSOREJP2",445,0)
 ; if no previous Rx was found.
"RTN","PSOREJP2",446,0)
 I PREVRX'="" D
"RTN","PSOREJP2",447,0)
 . S QTY1=$S(PREVFL=0:+$P($G(^PSRX(PREVRX,0)),U,7),1:+$P($G(^PSRX(PREVRX,1,PREVFL,0)),U,4))
"RTN","PSOREJP2",448,0)
 . S DSUP1=$S(PREVFL=0:+$P($G(^PSRX(PREVRX,0)),U,8),1:+$P($G(^PSRX(PREVRX,1,PREVFL,0)),U,10))
"RTN","PSOREJP2",449,0)
 . S DOSAGE1=""
"RTN","PSOREJP2",450,0)
 . I QTY1,DSUP1 S DOSAGE1=QTY1/DSUP1
"RTN","PSOREJP2",451,0)
 . I DOSAGE'=DOSAGE1 S (LDOS,LDS,PREVRX)=""
"RTN","PSOREJP2",452,0)
 . Q
"RTN","PSOREJP2",453,0)
 ;
"RTN","PSOREJP2",454,0)
 I PREVRX'="" S PREVRX=$$GET1^DIQ(52,PREVRX_",",.01)  ; Pull external Rx#.
"RTN","PSOREJP2",455,0)
 Q LDOS_U_LDS_U_PREVRX
"RTN","PSOREJP2",456,0)
 ;
"RTN","PSOREJP2",457,0)
 ; MRD;PSO*7.0*448 - Added CHECKIT procedure to consolidate checks that
"RTN","PSOREJP2",458,0)
 ; were previously being done in two different procedures (PREVRX,
"RTN","PSOREJP2",459,0)
 ; LAST120).
"RTN","PSOREJP2",460,0)
 ;
"RTN","PSOREJP2",461,0)
CHECKIT(RX,FL,COB,LDOS,LDAYS)  ; Check 1 Rx/Fill for days' supply calc.
"RTN","PSOREJP2",462,0)
 ;
"RTN","PSOREJP2",463,0)
 ; Input:  (r) RX - Rx IEN (#52)
"RTN","PSOREJP2",464,0)
 ;         (o) FL - Refill#
"RTN","PSOREJP2",465,0)
 ;         (o) COB - Payer sequence
"RTN","PSOREJP2",466,0)
 ; Output: LDOS - Date of service for this Rx/Fill
"RTN","PSOREJP2",467,0)
 ;         LDAYS - Days' supply for this Rx/Fill
"RTN","PSOREJP2",468,0)
 ; The CHECKIT procedure determines whether a given Rx and Fill can be
"RTN","PSOREJP2",469,0)
 ; used in determining whether the 3/4 days' supply requirement has
"RTN","PSOREJP2",470,0)
 ; been met for another Rx/Fill.  The Rx/Fill being checked here must
"RTN","PSOREJP2",471,0)
 ; meet several criteria, including the following checked by this
"RTN","PSOREJP2",472,0)
 ; procedure:
"RTN","PSOREJP2",473,0)
 ;  - The Rx/Fill must be released.
"RTN","PSOREJP2",474,0)
 ;  - The Rx status must not be Non-Verified.
"RTN","PSOREJP2",475,0)
 ;  - The RX must not have an Expiration Date earlier than 120 days
"RTN","PSOREJP2",476,0)
 ;    before today.
"RTN","PSOREJP2",477,0)
 ;  - The Rx/Fill must have ECME activity.
"RTN","PSOREJP2",478,0)
 ;  - The Rx/Fill must not have any unresolved rejects.
"RTN","PSOREJP2",479,0)
 ;
"RTN","PSOREJP2",480,0)
 N EXPDT
"RTN","PSOREJP2",481,0)
 I '$$RXRLDT^PSOBPSUT(RX,FL) Q             ; If not released, Quit.
"RTN","PSOREJP2",482,0)
 I $$GET1^DIQ(52,RX,100,"I")=1 Q           ; If Status is NON-VERIFIED, Quit.
"RTN","PSOREJP2",483,0)
 S EXPDT=$$GET1^DIQ(52,RX,26,"I")          ; If Expiration Date of Rx is more
"RTN","PSOREJP2",484,0)
 I EXPDT,$$FMDIFF^XLFDT(DT,EXPDT)>120 Q    ;   than 120 days ago, Quit.
"RTN","PSOREJP2",485,0)
 I $$STATUS^PSOBPSUT(RX,FL)="" Q           ; If no ECME activity, Quit.
"RTN","PSOREJP2",486,0)
 I $$FIND^PSOREJUT(RX,FL,,,1) Q            ; If any unresolved rejects, Quit.
"RTN","PSOREJP2",487,0)
 ;
"RTN","PSOREJP2",488,0)
 ; Pull the Date of Service and Days' Supply for this Rx/Fill.
"RTN","PSOREJP2",489,0)
 ;
"RTN","PSOREJP2",490,0)
 D GETDAT^BPSBUTL(RX,FL,COB,.LDOS,.LDAYS)  ; IA 4719.
"RTN","PSOREJP2",491,0)
 Q
"RTN","PSOREJP2",492,0)
 ;
"RTN","PSOREJP3")
0^10^B272735549
"RTN","PSOREJP3",1,0)
PSOREJP3 ;ALB/SS - Third Party Reject Display Screen - Comments ;10/27/06
"RTN","PSOREJP3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**260,287,289,290,358,359,385,403,421,427,448,482,512**;DEC 1997;Build 44
"RTN","PSOREJP3",3,0)
 ;Reference to GETDAT^BPSBUTL supported by IA 4719
"RTN","PSOREJP3",4,0)
 ;Reference to COM^BPSSCRU3 supported by IA 6214
"RTN","PSOREJP3",5,0)
 ;Reference to IEN59^BPSOSRX supported by IA 4412
"RTN","PSOREJP3",6,0)
 ;Reference to GETPL59^BPSPRRX5 supported by IA 6939
"RTN","PSOREJP3",7,0)
 ;Reference to GETRTP59^BPSPRRX5 supported by IA 6939
"RTN","PSOREJP3",8,0)
 ;
"RTN","PSOREJP3",9,0)
COM ; Builds the Comments section in the Reject Information Screen.
"RTN","PSOREJP3",10,0)
 ; The following variables are assumed to exist:
"RTN","PSOREJP3",11,0)
 ;   RX - Pointer to file# 52, Prescription.
"RTN","PSOREJP3",12,0)
 ;   FILL - Pointer to the Refill sub-file of the Prescription.
"RTN","PSOREJP3",13,0)
 ;   REJ - Pointer to the Reject Info sub-file of the Prescription.
"RTN","PSOREJP3",14,0)
 ;
"RTN","PSOREJP3",15,0)
 N PSOARRAY,PSOCNT,PSOCOM,PSODATA,PSODATE,PSODATE1,PSODFN,PSOLAST,PSOPC
"RTN","PSOREJP3",16,0)
 N PSOPFLAG,PSOSTATUS,PSOSTR,PSOTEMP,PSOUSER,PSOX,PSOY,X
"RTN","PSOREJP3",17,0)
 ;
"RTN","PSOREJP3",18,0)
 ; MRD;PSO*7*448 - This patch added the ability for an OPECC to flag a
"RTN","PSOREJP3",19,0)
 ; comment on a BPS Transaction as being for pharmacy.  A comment so
"RTN","PSOREJP3",20,0)
 ; flagged will appear on the Reject Information Screen intermingled
"RTN","PSOREJP3",21,0)
 ; with any other comments on the Prescription.  All the comments will
"RTN","PSOREJP3",22,0)
 ; be sorted in reverse chronological order.
"RTN","PSOREJP3",23,0)
 ;
"RTN","PSOREJP3",24,0)
 ; COM^BPSSCRU3 populates the array PSOTEMP with all the comments from
"RTN","PSOREJP3",25,0)
 ; the BPS Transaction corresponding to the Prescription and Refill.
"RTN","PSOREJP3",26,0)
 ; Any of those comments with the Pharmacy flag set to '1' will be
"RTN","PSOREJP3",27,0)
 ; added to the array PSOARRAY.
"RTN","PSOREJP3",28,0)
 ;
"RTN","PSOREJP3",29,0)
 D COM^BPSSCRU3(RX,FILL,,.PSOTEMP)  ; IA 6214.
"RTN","PSOREJP3",30,0)
 ;
"RTN","PSOREJP3",31,0)
 S PSODATE=0
"RTN","PSOREJP3",32,0)
 F  S PSODATE=$O(PSOTEMP(PSODATE)) Q:'PSODATE  D
"RTN","PSOREJP3",33,0)
 . S PSOX=0
"RTN","PSOREJP3",34,0)
 . F  S PSOX=$O(PSOTEMP(PSODATE,PSOX)) Q:'PSOX  D
"RTN","PSOREJP3",35,0)
 . . ;
"RTN","PSOREJP3",36,0)
 . . ; If the Pharmacy flag is set, then add this comment to the
"RTN","PSOREJP3",37,0)
 . . ; array PSOARRAY to be displayed.
"RTN","PSOREJP3",38,0)
 . . ;
"RTN","PSOREJP3",39,0)
 . . S PSOPFLAG=$P(PSOTEMP(PSODATE,PSOX),U)
"RTN","PSOREJP3",40,0)
 . . I 'PSOPFLAG Q
"RTN","PSOREJP3",41,0)
 . . S PSOCOM=$P(PSOTEMP(PSODATE,PSOX),U,2)
"RTN","PSOREJP3",42,0)
 . . S PSOUSER=$P(PSOTEMP(PSODATE,PSOX),U,3)
"RTN","PSOREJP3",43,0)
 . . S PSOUSER=$$GET1^DIQ(200,PSOUSER,.01)
"RTN","PSOREJP3",44,0)
 . . S PSOY=$$FMTE^XLFDT(PSODATE)
"RTN","PSOREJP3",45,0)
 . . S PSOCOM=PSOY_" (OPECC) - "_PSOCOM_" ("_PSOUSER_")"
"RTN","PSOREJP3",46,0)
 . . S PSOY=$G(PSOARRAY(PSODATE))+1
"RTN","PSOREJP3",47,0)
 . . S PSOARRAY(PSODATE)=PSOY
"RTN","PSOREJP3",48,0)
 . . S PSOARRAY(PSODATE,PSOY)=PSOCOM
"RTN","PSOREJP3",49,0)
 . . Q
"RTN","PSOREJP3",50,0)
 . Q
"RTN","PSOREJP3",51,0)
 ;
"RTN","PSOREJP3",52,0)
 ; Pull comments from the Reject sub-file of the Prescription and
"RTN","PSOREJP3",53,0)
 ; add to the array PSOARRAY.
"RTN","PSOREJP3",54,0)
 ;
"RTN","PSOREJP3",55,0)
 S PSOX=0
"RTN","PSOREJP3",56,0)
 F  S PSOX=$O(^PSRX(RX,"REJ",REJ,"COM",PSOX)) Q:'PSOX  D
"RTN","PSOREJP3",57,0)
 . S PSODATE=$$GET1^DIQ(52.2551,PSOX_","_REJ_","_RX,.01,"E")
"RTN","PSOREJP3",58,0)
 . S PSOUSER=$$GET1^DIQ(52.2551,PSOX_","_REJ_","_RX,1)
"RTN","PSOREJP3",59,0)
 . S PSOCOM=$$GET1^DIQ(52.2551,PSOX_","_REJ_","_RX,2)
"RTN","PSOREJP3",60,0)
 . S PSOCOM=PSODATE_" - "_PSOCOM_" ("_PSOUSER_")"
"RTN","PSOREJP3",61,0)
 . S PSODATE=$$GET1^DIQ(52.2551,PSOX_","_REJ_","_RX,.01,"I")
"RTN","PSOREJP3",62,0)
 . S PSOY=$G(PSOARRAY(PSODATE))+1
"RTN","PSOREJP3",63,0)
 . S PSOARRAY(PSODATE)=PSOY
"RTN","PSOREJP3",64,0)
 . S PSOARRAY(PSODATE,PSOY)=PSOCOM
"RTN","PSOREJP3",65,0)
 . Q
"RTN","PSOREJP3",66,0)
 ;
"RTN","PSOREJP3",67,0)
 ; At this point, all of the comments to be displayed are in the array
"RTN","PSOREJP3",68,0)
 ; PSOARRAY, sorted by date/time.  If that array is empty, then Quit
"RTN","PSOREJP3",69,0)
 ; out.  Otherwise, loop through the comments backwards to display in
"RTN","PSOREJP3",70,0)
 ; reverse chronological order.
"RTN","PSOREJP3",71,0)
 ;
"RTN","PSOREJP3",72,0)
 I '$O(PSOARRAY("")) G PTC
"RTN","PSOREJP3",73,0)
 D SETLN^PSOREJP1()
"RTN","PSOREJP3",74,0)
 D SETLN^PSOREJP1("COMMENTS - REJECT",1,1)
"RTN","PSOREJP3",75,0)
 ;
"RTN","PSOREJP3",76,0)
 S PSODATE=""
"RTN","PSOREJP3",77,0)
 F  S PSODATE=$O(PSOARRAY(PSODATE),-1) Q:'PSODATE  D
"RTN","PSOREJP3",78,0)
 . S PSOX=""
"RTN","PSOREJP3",79,0)
 . F  S PSOX=$O(PSOARRAY(PSODATE,PSOX),-1) Q:'PSOX  D
"RTN","PSOREJP3",80,0)
 . . ;
"RTN","PSOREJP3",81,0)
 . . ; Use ^DIWP utility to put comment into scratch global array,
"RTN","PSOREJP3",82,0)
 . . ; with lines broken apart intelligently.
"RTN","PSOREJP3",83,0)
 . . ;
"RTN","PSOREJP3",84,0)
 . . N %,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,I,Z
"RTN","PSOREJP3",85,0)
 . . K ^UTILITY($J,"W")
"RTN","PSOREJP3",86,0)
 . . S X=PSOARRAY(PSODATE,PSOX)
"RTN","PSOREJP3",87,0)
 . . S DIWL=1
"RTN","PSOREJP3",88,0)
 . . S DIWR=78
"RTN","PSOREJP3",89,0)
 . . D ^DIWP
"RTN","PSOREJP3",90,0)
 . . ;
"RTN","PSOREJP3",91,0)
 . . ; Loop through the scratch array and add each line to the ^TMP
"RTN","PSOREJP3",92,0)
 . . ; global to be displayed on the screen.
"RTN","PSOREJP3",93,0)
 . . ;
"RTN","PSOREJP3",94,0)
 . . S PSOLAST=0
"RTN","PSOREJP3",95,0)
 . . F PSOY=1:1 Q:('$D(^UTILITY($J,"W",1,PSOY,0)))  D
"RTN","PSOREJP3",96,0)
 . . . S PSOCOM=$G(^UTILITY($J,"W",1,PSOY,0))
"RTN","PSOREJP3",97,0)
 . . . ;
"RTN","PSOREJP3",98,0)
 . . . ; If this line is the last of this comment, and this is the
"RTN","PSOREJP3",99,0)
 . . . ; last comment, then Set PSOLAST=1 to make this line underlined
"RTN","PSOREJP3",100,0)
 . . . ; on the screen.
"RTN","PSOREJP3",101,0)
 . . . ;
"RTN","PSOREJP3",102,0)
 . . . I '$D(^UTILITY($J,"W",1,PSOY+1)),$O(PSOARRAY(PSODATE,PSOX),-1)="",$O(PSOARRAY(PSODATE),-1)="" S PSOLAST=1
"RTN","PSOREJP3",103,0)
 . . . ;
"RTN","PSOREJP3",104,0)
 . . . ; Use SETLN^PSOREJP1 to add line to ^TMP array to be displayed to screen.
"RTN","PSOREJP3",105,0)
 . . . ;
"RTN","PSOREJP3",106,0)
 . . . D SETLN^PSOREJP1($S(PSOY=1:"- ",1:"  ")_PSOCOM,0,PSOLAST,1)
"RTN","PSOREJP3",107,0)
 . . . Q
"RTN","PSOREJP3",108,0)
 . . Q
"RTN","PSOREJP3",109,0)
 . Q
"RTN","PSOREJP3",110,0)
 ;
"RTN","PSOREJP3",111,0)
PTC ; Patient Comments
"RTN","PSOREJP3",112,0)
 ;
"RTN","PSOREJP3",113,0)
 K PSOARRAY
"RTN","PSOREJP3",114,0)
 ;
"RTN","PSOREJP3",115,0)
 ; Get Patient ID - If no Patient Comments on file, Quit
"RTN","PSOREJP3",116,0)
 S PSODFN=$$GET1^DIQ(52,RX,2,"I")
"RTN","PSOREJP3",117,0)
 I '$D(^PS(55,PSODFN,"PC")) Q
"RTN","PSOREJP3",118,0)
 ;
"RTN","PSOREJP3",119,0)
 ; Loop through Patient Comments - Add ACTIVE Comments to PSOAR array
"RTN","PSOREJP3",120,0)
 S PSODATE=""
"RTN","PSOREJP3",121,0)
 S PSOCNT=0
"RTN","PSOREJP3",122,0)
 K PSOAR
"RTN","PSOREJP3",123,0)
 F  S PSODATE=$O(^PS(55,PSODFN,"PC","B",PSODATE)) Q:PSODATE=""  D
"RTN","PSOREJP3",124,0)
 . S PSOPC=""
"RTN","PSOREJP3",125,0)
 . F  S PSOPC=$O(^PS(55,PSODFN,"PC","B",PSODATE,PSOPC)) Q:PSOPC=""  D
"RTN","PSOREJP3",126,0)
 . . K PSODATA
"RTN","PSOREJP3",127,0)
 . . D GETS^DIQ(55.17,PSOPC_","_PSODFN_",",".01;1;2;3","IE","PSODATA")
"RTN","PSOREJP3",128,0)
 . . ; 
"RTN","PSOREJP3",129,0)
 . . ; Only display ACTIVE Patient Comments
"RTN","PSOREJP3",130,0)
 . . S PSOSTATUS=$G(PSODATA(55.17,PSOPC_","_PSODFN_",",2,"I"))
"RTN","PSOREJP3",131,0)
 . . I PSOSTATUS'="Y" Q
"RTN","PSOREJP3",132,0)
 . . ;
"RTN","PSOREJP3",133,0)
 . . S PSODATE1=$G(PSODATA(55.17,PSOPC_","_PSODFN_",",.01,"E"))
"RTN","PSOREJP3",134,0)
 . . S PSOUSER=$G(PSODATA(55.17,PSOPC_","_PSODFN_",",1,"E"))
"RTN","PSOREJP3",135,0)
 . . S PSOCOM=$G(PSODATA(55.17,PSOPC_","_PSODFN_",",3,"E"))
"RTN","PSOREJP3",136,0)
 . . S PSOSTR=PSODATE1_" - "_PSOCOM_" ("_PSOUSER_")"
"RTN","PSOREJP3",137,0)
 . . S PSOCNT=PSOCNT+1
"RTN","PSOREJP3",138,0)
 . . S PSOARRAY(PSOCNT)=PSOSTR
"RTN","PSOREJP3",139,0)
 ;
"RTN","PSOREJP3",140,0)
 ; If PSOAR array exists, display Active Patient Comments
"RTN","PSOREJP3",141,0)
 I $D(PSOARRAY) D
"RTN","PSOREJP3",142,0)
 . D SETLN^PSOREJP1("COMMENTS - PATIENT",1,1)
"RTN","PSOREJP3",143,0)
 . ;
"RTN","PSOREJP3",144,0)
 . ; Loop through PSOAR in reverse order to display Patient
"RTN","PSOREJP3",145,0)
 . ; Comments in reverse chronological order
"RTN","PSOREJP3",146,0)
 . S PSOCNT=""
"RTN","PSOREJP3",147,0)
 . F  S PSOCNT=$O(PSOARRAY(PSOCNT),-1) Q:PSOCNT=""  D
"RTN","PSOREJP3",148,0)
 . . ;
"RTN","PSOREJP3",149,0)
 . . ; Use ^DIWP to display Patient Comments with proper
"RTN","PSOREJP3",150,0)
 . . ; line breaking
"RTN","PSOREJP3",151,0)
 . . N %,DIW,DIWF,DIWI,DIWL,DIWR,DIWT,DIWTC,DIWX,DN,I,Z
"RTN","PSOREJP3",152,0)
 . . K ^UTILITY($J,"W")
"RTN","PSOREJP3",153,0)
 . . S X=PSOARRAY(PSOCNT)
"RTN","PSOREJP3",154,0)
 . . S DIWL=1
"RTN","PSOREJP3",155,0)
 . . S DIWR=78
"RTN","PSOREJP3",156,0)
 . . D ^DIWP
"RTN","PSOREJP3",157,0)
 . . ;
"RTN","PSOREJP3",158,0)
 . . S PSOLAST=0
"RTN","PSOREJP3",159,0)
 . . F PSOY=1:1 Q:('$D(^UTILITY($J,"W",1,PSOY,0)))  D
"RTN","PSOREJP3",160,0)
 . . . S PSOCOM=$G(^UTILITY($J,"W",1,PSOY,0))
"RTN","PSOREJP3",161,0)
 . . . ;
"RTN","PSOREJP3",162,0)
 . . . ; Looping through the array in reverse order means PSOCNT=1
"RTN","PSOREJP3",163,0)
 . . . ; will be the last comment to display. If the last line of the 
"RTN","PSOREJP3",164,0)
 . . . ; last comment is being displayed, set PSOLAST=1 to underline
"RTN","PSOREJP3",165,0)
 . . . ; the comment on the screen.
"RTN","PSOREJP3",166,0)
 . . . ;
"RTN","PSOREJP3",167,0)
 . . . I '$D(^UTILITY($J,"W",1,PSOY+1)),PSOCNT=1 S PSOLAST=1
"RTN","PSOREJP3",168,0)
 . . . ;
"RTN","PSOREJP3",169,0)
 . . . ; Use SETLN^PSOREJP1 to add line to ^TMP array to be displayed to screen.
"RTN","PSOREJP3",170,0)
 . . . ;
"RTN","PSOREJP3",171,0)
 . . . D SETLN^PSOREJP1($S(PSOY=1:"- ",1:"  ")_PSOCOM,0,PSOLAST,1)
"RTN","PSOREJP3",172,0)
 ;
"RTN","PSOREJP3",173,0)
 K ^UTILITY($J,"W")
"RTN","PSOREJP3",174,0)
 ;
"RTN","PSOREJP3",175,0)
 Q
"RTN","PSOREJP3",176,0)
 ;
"RTN","PSOREJP3",177,0)
ADDCOM ; - Add comment worklist action
"RTN","PSOREJP3",178,0)
 N DIR,PSO55,PSCOM,PSOCOMTYPE
"RTN","PSOREJP3",179,0)
 D FULL^VALM1
"RTN","PSOREJP3",180,0)
 ;
"RTN","PSOREJP3",181,0)
 S DIR(0)="S^R:Reject;P:Patient Billing"
"RTN","PSOREJP3",182,0)
 S DIR("A")="Comment Type"
"RTN","PSOREJP3",183,0)
 S DIR("?",1)="The Reject Comment only displays for the specific reject."
"RTN","PSOREJP3",184,0)
 S DIR("?")="The Patient Billing Comment displays on all rejects for the patient."
"RTN","PSOREJP3",185,0)
 D ^DIR
"RTN","PSOREJP3",186,0)
 I $D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP3",187,0)
 S PSOCOMTYPE=Y
"RTN","PSOREJP3",188,0)
 ;
"RTN","PSOREJP3",189,0)
 I PSOCOMTYPE="P",'$D(^XUSEC("PSO EPHARMACY SITE MANAGER",DUZ)) D  S VALMBCK="R" Q
"RTN","PSOREJP3",190,0)
 . W !,"Patient Billing Comments require Pharmacy Key (PSO EPHARMACY SITE MANAGER)"
"RTN","PSOREJP3",191,0)
 . D WAIT^VALM1
"RTN","PSOREJP3",192,0)
 ;
"RTN","PSOREJP3",193,0)
 S PSCOM=$$COMMENT("Comment: ",150)
"RTN","PSOREJP3",194,0)
 ;
"RTN","PSOREJP3",195,0)
 ; Save Reject Type Comment
"RTN","PSOREJP3",196,0)
 I PSOCOMTYPE="R",$L(PSCOM)>0,PSCOM'["^" D
"RTN","PSOREJP3",197,0)
 . D SAVECOM(RX,REJ,PSCOM) ;save the comment
"RTN","PSOREJP3",198,0)
 . D INIT^PSOREJP1 ;update screen
"RTN","PSOREJP3",199,0)
 ; Save Patient Billing Type Comment
"RTN","PSOREJP3",200,0)
 I PSOCOMTYPE="P",$L(PSCOM)>0,PSCOM'["^" D
"RTN","PSOREJP3",201,0)
 . S PSO55=$$GET1^DIQ(52,RX,2,"I")
"RTN","PSOREJP3",202,0)
 . D ADDPC^PSOPTC0(PSCOM,PSO55)
"RTN","PSOREJP3",203,0)
 . D INIT^PSOREJP1
"RTN","PSOREJP3",204,0)
 S VALMBCK="R"
"RTN","PSOREJP3",205,0)
 Q 
"RTN","PSOREJP3",206,0)
 ;
"RTN","PSOREJP3",207,0)
 ;Enter a comment
"RTN","PSOREJP3",208,0)
 ;PSOTR  -prompt string
"RTN","PSOREJP3",209,0)
 ;PSMLEN -maxlen
"RTN","PSOREJP3",210,0)
 ;returns:
"RTN","PSOREJP3",211,0)
 ; "^" - if user chose to quit 
"RTN","PSOREJP3",212,0)
 ; "" - nothing entered or input has been discarded
"RTN","PSOREJP3",213,0)
 ; otherwise - comment's text
"RTN","PSOREJP3",214,0)
COMMENT(PSOTR,PSMLEN) ;*/
"RTN","PSOREJP3",215,0)
 N DIR,DTOUT,DUOUT,PSQ
"RTN","PSOREJP3",216,0)
 I '$D(PSOTR) S PSOTR="Comment "
"RTN","PSOREJP3",217,0)
 I '$D(PSMLEN) S PSMLEN=150
"RTN","PSOREJP3",218,0)
 S DIR(0)="FA^1:150"
"RTN","PSOREJP3",219,0)
 S DIR("A")=PSOTR
"RTN","PSOREJP3",220,0)
 S DIR("?")="Enter a free text comment up to 150 characters long."
"RTN","PSOREJP3",221,0)
 S PSQ=0
"RTN","PSOREJP3",222,0)
 F  D  Q:+PSQ'=0
"RTN","PSOREJP3",223,0)
 . W ! D ^DIR
"RTN","PSOREJP3",224,0)
 . I $D(DUOUT)!($D(DTOUT)) S PSQ=-1 Q
"RTN","PSOREJP3",225,0)
 . I $L(Y)'>PSMLEN S PSQ=1 Q
"RTN","PSOREJP3",226,0)
 . W !!,"Enter a free text comment up to 150 characters long.",!
"RTN","PSOREJP3",227,0)
 . S DIR("B")=$E(Y,1,PSMLEN)
"RTN","PSOREJP3",228,0)
 Q:PSQ<0 "^"
"RTN","PSOREJP3",229,0)
 Q:$L(Y)=0 ""
"RTN","PSOREJP3",230,0)
 S PSQ=$$YESNO("Confirm","YES")
"RTN","PSOREJP3",231,0)
 I PSQ=-1 Q "^"
"RTN","PSOREJP3",232,0)
 I PSQ=0 Q ""
"RTN","PSOREJP3",233,0)
 Q Y
"RTN","PSOREJP3",234,0)
 ;
"RTN","PSOREJP3",235,0)
 ; Ask
"RTN","PSOREJP3",236,0)
 ; Input:
"RTN","PSOREJP3",237,0)
 ;  PSQSTR - question
"RTN","PSOREJP3",238,0)
 ;  PSDFL - default answer
"RTN","PSOREJP3",239,0)
 ; Output: 
"RTN","PSOREJP3",240,0)
 ; 1 YES
"RTN","PSOREJP3",241,0)
 ; 0 NO
"RTN","PSOREJP3",242,0)
 ; -1 if cancelled
"RTN","PSOREJP3",243,0)
YESNO(PSQSTR,PSDFL) ; Default - YES
"RTN","PSOREJP3",244,0)
 N DIR,Y,DUOUT
"RTN","PSOREJP3",245,0)
 S DIR(0)="Y"
"RTN","PSOREJP3",246,0)
 S DIR("A")=PSQSTR
"RTN","PSOREJP3",247,0)
 S:$L($G(PSDFL)) DIR("B")=PSDFL
"RTN","PSOREJP3",248,0)
 W ! D ^DIR
"RTN","PSOREJP3",249,0)
 Q $S($G(DUOUT)!$G(DUOUT)!(Y="^"):-1,1:Y)
"RTN","PSOREJP3",250,0)
 ;
"RTN","PSOREJP3",251,0)
 ;Save comment
"RTN","PSOREJP3",252,0)
SAVECOM(PSRXIEN,PSREJIEN,PSCOMNT,DATETIME,USER) ;
"RTN","PSOREJP3",253,0)
 N PSREC,PSDA,PSERR
"RTN","PSOREJP3",254,0)
 I '$G(DATETIME) D NOW^%DTC S DATETIME=%
"RTN","PSOREJP3",255,0)
 I '$G(USER) S USER=DUZ
"RTN","PSOREJP3",256,0)
 D INSITEM(52.2551,PSRXIEN,PSREJIEN,DATETIME)
"RTN","PSOREJP3",257,0)
 S PSREC=$O(^PSRX(PSRXIEN,"REJ",PSREJIEN,"COM","B",DATETIME,0))
"RTN","PSOREJP3",258,0)
 I PSREC>0 D
"RTN","PSOREJP3",259,0)
 . S PSDA(52.2551,PSREC_","_PSREJIEN_","_PSRXIEN_",",1)=USER
"RTN","PSOREJP3",260,0)
 . S PSDA(52.2551,PSREC_","_PSREJIEN_","_PSRXIEN_",",2)=$G(PSCOMNT)
"RTN","PSOREJP3",261,0)
 . D FILE^DIE("","PSDA","PSERR")
"RTN","PSOREJP3",262,0)
 Q
"RTN","PSOREJP3",263,0)
 ;
"RTN","PSOREJP3",264,0)
 ;/**
"RTN","PSOREJP3",265,0)
 ;PSSFILE - subfile# (52.2551) for comment
"RTN","PSOREJP3",266,0)
 ;PSIEN - ien for file in which the new subfile entry will be inserted
"RTN","PSOREJP3",267,0)
 ;PSVAL01 - .01 value for the new entry
"RTN","PSOREJP3",268,0)
INSITEM(PSSFILE,PSIEN0,PSIEN1,PSVAL01) ;*/
"RTN","PSOREJP3",269,0)
 N PSSSI,PSIENS,PSFDA,PSER
"RTN","PSOREJP3",270,0)
 S PSIENS="+1,"_PSIEN1_","_PSIEN0_","
"RTN","PSOREJP3",271,0)
 S PSFDA(PSSFILE,PSIENS,.01)=PSVAL01
"RTN","PSOREJP3",272,0)
 D UPDATE^DIE("","PSFDA","PSSSI","PSER")
"RTN","PSOREJP3",273,0)
 I $D(PSER) D BMES^XPDUTL(PSER("DIERR",1,"TEXT",1))
"RTN","PSOREJP3",274,0)
 Q
"RTN","PSOREJP3",275,0)
 ;
"RTN","PSOREJP3",276,0)
PRINT(RX,RFL) ; Print Label for specific Rx/Fill
"RTN","PSOREJP3",277,0)
 I '$G(RX) Q
"RTN","PSOREJP3",278,0)
 I $G(RFL)="" Q
"RTN","PSOREJP3",279,0)
 ;
"RTN","PSOREJP3",280,0)
 ; Some of these variables are used by LBL^PSOLSET but they are newed here
"RTN","PSOREJP3",281,0)
 N PPL,PSOSITE,PSOPAR,PSOSYS,PSOBARS,PSOBAR0,PSOBAR1,PSOIOS,PSOBFLAG,PSOCLBL
"RTN","PSOREJP3",282,0)
 N PSOQUIT,PSOPIOST,PSOLTEST,PSOTLBL,PSORXT
"RTN","PSOREJP3",283,0)
 N DFN,PDUZ,RXFL,REPRINT,REJLBL,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","PSOREJP3",284,0)
 N %ZIS,IOP,POP,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,ZTDTH,VAR
"RTN","PSOREJP3",285,0)
 ;
"RTN","PSOREJP3",286,0)
 ; Set the default label printer.  We need to new it so we don't change the value that was
"RTN","PSOREJP3",287,0)
 ;   set by PSOLSET when the user first logged into OP so need to do a bit of work to new it and  
"RTN","PSOREJP3",288,0)
 ;   reset it before the call to LBL^PSOLSET.
"RTN","PSOREJP3",289,0)
 I $G(PSOLAP)]"" S PSOTLBL=PSOLAP N PSOLAP S PSOLAP=PSOTLBL,PSOCLBL=1
"RTN","PSOREJP3",290,0)
 E  N PSOLAP S PSOCLBL=""
"RTN","PSOREJP3",291,0)
 ;
"RTN","PSOREJP3",292,0)
 ; Check if a label has already been printed and set REPRINT flag.
"RTN","PSOREJP3",293,0)
 S REJLBL=0 F  S REJLBL=$O(^PSRX(RX,"L",REJLBL)) Q:'REJLBL  I +$$GET1^DIQ(52.032,REJLBL_","_RX,1,"I")=RFL S REPRINT=1 Q
"RTN","PSOREJP3",294,0)
 ;
"RTN","PSOREJP3",295,0)
 ; Define required variables
"RTN","PSOREJP3",296,0)
 S PSOSITE=+$$RXSITE^PSOBPSUT(RX,RFL),PSOPAR=$G(^PS(59,PSOSITE,1))
"RTN","PSOREJP3",297,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),PDUZ=DUZ,PSOSYS=$G(^PS(59.7,1,40.1))
"RTN","PSOREJP3",298,0)
 S PPL=RX I RFL S RXFL(RX)=RFL
"RTN","PSOREJP3",299,0)
 ;
"RTN","PSOREJP3",300,0)
 ; Get label print device and check alignment
"RTN","PSOREJP3",301,0)
 W ! S PSOBFLAG=1 D LBL^PSOLSET I $G(PSOQUIT) Q
"RTN","PSOREJP3",302,0)
 I $G(PSOLAP)="" W $C(7),!!,"No printer defined" K DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR Q
"RTN","PSOREJP3",303,0)
 ;
"RTN","PSOREJP3",304,0)
 ; Call %ZIS to get device characteristics w/o reopening the printer. 
"RTN","PSOREJP3",305,0)
 ; We need to do this to check if queuing is forced for this device
"RTN","PSOREJP3",306,0)
 ; Not checking the POP variable.  If we don't get the device here, we will fall through to the 
"RTN","PSOREJP3",307,0)
 ;   foreground process and try again
"RTN","PSOREJP3",308,0)
 S IOP=PSOLAP,%ZIS="QN" D ^%ZIS
"RTN","PSOREJP3",309,0)
 ;
"RTN","PSOREJP3",310,0)
 ; If background printer, queue the job
"RTN","PSOREJP3",311,0)
 I $D(IO("Q")) D  Q
"RTN","PSOREJP3",312,0)
 . S ZTRTN="DQ^PSOLBL",ZTDTH=$H,ZTIO=PSOLAP
"RTN","PSOREJP3",313,0)
 . F VAR="PSOSYS","DFN","PSOPAR","PDUZ","PCOMX","PSOLAP","PPL","PSOSITE","RXY","PSOSUSPR","PSOBARS","PSOBAR1","PSOBAR0","PSODELE","PSOPULL","PSTAT","PSODBQ","PSOEXREP","PSOTREP","REPRINT" S:$D(@VAR) ZTSAVE(VAR)=""
"RTN","PSOREJP3",314,0)
 . S ZTSAVE("PSORX(")="",ZTSAVE("RXRP(")="",ZTSAVE("RXPR(")="",ZTSAVE("RXRS(")="",ZTSAVE("RXFL(")="",ZTSAVE("PCOMH(")=""
"RTN","PSOREJP3",315,0)
 . S ZTDESC="OUTPATIENT PHARMACY REJECT WORKLIST LABEL PRINT"
"RTN","PSOREJP3",316,0)
 . D ^%ZISC,^%ZTLOAD
"RTN","PSOREJP3",317,0)
 . W !!,"Label ",$S('$D(ZTSK):"NOT ",1:""),"queued to print",! I '$D(ZTSK) W $C(7) K DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR
"RTN","PSOREJP3",318,0)
 ;
"RTN","PSOREJP3",319,0)
 ; If we gotten this far, open the device and print the label in the foreground
"RTN","PSOREJP3",320,0)
 ; We also need to preserve the PSORX array, which gets killed by DQ^PSOLBL
"RTN","PSOREJP3",321,0)
 K %ZIS S IOP=PSOLAP D ^%ZIS
"RTN","PSOREJP3",322,0)
 I POP D ^%ZISC W $C(7),!!,"Printer is busy - NO label printed" K DIR S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR Q
"RTN","PSOREJP3",323,0)
 K PSORXT M PSORXT=PSORX
"RTN","PSOREJP3",324,0)
 D DQ^PSOLBL,^%ZISC
"RTN","PSOREJP3",325,0)
 K PSORX M PSORX=PSORXT
"RTN","PSOREJP3",326,0)
 Q
"RTN","PSOREJP3",327,0)
 ;
"RTN","PSOREJP3",328,0)
RXINFO(RX,FILL,LINE,REJ) ; Returns header displayable Rx Information
"RTN","PSOREJP3",329,0)
 N TXT,RXINFO,LBL,CMOP,DRG,PSOET
"RTN","PSOREJP3",330,0)
 I LINE=1 D
"RTN","PSOREJP3",331,0)
 . N RXDOS D GETDAT^BPSBUTL(RX,FILL,,.RXDOS) ; Get Date of Service from BPS CLAIM field 401 - PSO*7*421
"RTN","PSOREJP3",332,0)
 . S RXINFO="Rx#      : "_$$GET1^DIQ(52,RX,.01)_"/"_FILL
"RTN","PSOREJP3",333,0)
 . ;cnf, PSO*7*358, add PSOET logic for TRICARE/CHAMPVA non-billable
"RTN","PSOREJP3",334,0)
 . S PSOET=$$PSOET(RX,FILL)
"RTN","PSOREJP3",335,0)
 . S $E(RXINFO,27)="ECME#: "_$S(PSOET:"",1:$$ECMENUM^PSOBPSU2(RX,FILL))
"RTN","PSOREJP3",336,0)
 . S $E(RXINFO,49)="Date of Service: "_$S(PSOET:"",1:$$FMTE^XLFDT(RXDOS)) ; Use DOS from BPS Claims field 401 - PSO*7*421
"RTN","PSOREJP3",337,0)
 I LINE=2 D
"RTN","PSOREJP3",338,0)
 . S DRG=$$GET1^DIQ(52,RX,6,"I"),CMOP=$S($D(^PSDRUG("AQ",DRG)):1,1:0)
"RTN","PSOREJP3",339,0)
 . S RXINFO=$S(CMOP:"CMOP ",1:"")_"Drug",$E(RXINFO,10)=": "_$E($$GET1^DIQ(52,RX,6),1,43)
"RTN","PSOREJP3",340,0)
 . S $E(RXINFO,56)="NDC Code: "_$$GETNDC^PSONDCUT(RX,FILL)
"RTN","PSOREJP3",341,0)
 Q $G(RXINFO)
"RTN","PSOREJP3",342,0)
 ;
"RTN","PSOREJP3",343,0)
FILL ;Fill payable TRICARE or CHAMPVA Rx
"RTN","PSOREJP3",344,0)
 N COM,I,OPNREJ,OPNREJ2,OPNREJ3,DCSTAT,PSOREL
"RTN","PSOREJP3",345,0)
 S:'$G(PSOTRIC) PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)  ;cnf, PSO*7*358, add line
"RTN","PSOREJP3",346,0)
 ;cnf, PSO*7*358, don't allow option if TRICARE/CHAMPVA and released, PSOREL is set to the release date
"RTN","PSOREJP3",347,0)
 S PSOREL=0 I PSOTRIC D
"RTN","PSOREJP3",348,0)
 . I 'FILL S PSOREL=+$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOREJP3",349,0)
 . I FILL S PSOREL=+$$GET1^DIQ(52.1,FILL_","_RX,17,"I")
"RTN","PSOREJP3",350,0)
 I PSOREL S VALMSG="Released Rxs may not be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",351,0)
 ;cnf, PSO*7*358, don't allow option if prescription has been discontinued
"RTN","PSOREJP3",352,0)
 ;  12 - DISCONTINUED
"RTN","PSOREJP3",353,0)
 ;  14 - DISCONTINUED BY PROVIDER
"RTN","PSOREJP3",354,0)
 ;  15 - DISCONTINUED (EDIT)
"RTN","PSOREJP3",355,0)
 S DCSTAT=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOREJP3",356,0)
 I "/12/14/15/"[("/"_DCSTAT_"/") S VALMSG="Discontinued Rxs may not be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",357,0)
 D FULL^VALM1
"RTN","PSOREJP3",358,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP3",359,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R"
"RTN","PSOREJP3",360,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP3",361,0)
 S COM=""
"RTN","PSOREJP3",362,0)
 I 'PSOTRIC&($$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE") S VALMSG="Only Rxs with an E PAYABLE status may be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",363,0)
 I PSOTRIC&($$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE") D FILLTR I $L($G(VALMSG)_$G(VALMBCK)) Q  ;cnf, PSO*7*358
"RTN","PSOREJP3",364,0)
 S:COM="" COM="AUTOMATICALLY CLOSED"  ;cnf, PSO*7*358, add condition
"RTN","PSOREJP3",365,0)
 S (OPNREJ,OPNREJ2,OPNREJ3)=""
"RTN","PSOREJP3",366,0)
 S OPNREJ2=0 F  S OPNREJ2=$O(^PSRX(RX,"REJ",OPNREJ2)) Q:OPNREJ2=""!(OPNREJ2'?1N.N)  S OPNREJ=OPNREJ_","_OPNREJ2
"RTN","PSOREJP3",367,0)
 S OPNREJ=$E(OPNREJ,2,999),OPNREJ2=""
"RTN","PSOREJP3",368,0)
 W !?20,"[Closing all rejections for prescription "_$$GET1^DIQ(52,RX,".01")_":"
"RTN","PSOREJP3",369,0)
 F I=1:1 S OPNREJ2=$P(OPNREJ,",",I) Q:OPNREJ2=""  D
"RTN","PSOREJP3",370,0)
 . S OPNREJ3="",OPNREJ3=$$GET1^DIQ(52.25,OPNREJ2_","_RX,".01")
"RTN","PSOREJP3",371,0)
 . W !?25,OPNREJ3_" - "_$$GET1^DIQ(9002313.93,OPNREJ3,".02")_"..."
"RTN","PSOREJP3",372,0)
 . D CLOSE^PSOREJUT(RX,FILL,OPNREJ2,DUZ,6,COM,"","","","","",1) W "OK]",!,$C(7) H 1  ; pso*7*421 Use 12th param to ignore
"RTN","PSOREJP3",373,0)
 I $$PTLBL^PSOREJP2(RX,FILL) D PRINT(RX,FILL)
"RTN","PSOREJP3",374,0)
 S CHANGE=1   ;cnf, PSO*7*358, remove S VALMBCK="R" so user goes back to selection list
"RTN","PSOREJP3",375,0)
 Q
"RTN","PSOREJP3",376,0)
 ;
"RTN","PSOREJP3",377,0)
PSOCOB(RX,FILL,REJ) ; Returns RXCOB indicator for Worklist
"RTN","PSOREJP3",378,0)
 N DATA1
"RTN","PSOREJP3",379,0)
 D GET^PSOREJU2(RX,FILL,.DATA1,REJ,1)
"RTN","PSOREJP3",380,0)
 I $G(DATA1(REJ,"COB"))="PRIMARY"  Q 1
"RTN","PSOREJP3",381,0)
 I $G(DATA1(REJ,"COB"))=""  Q 1
"RTN","PSOREJP3",382,0)
 Q 2
"RTN","PSOREJP3",383,0)
 ;
"RTN","PSOREJP3",384,0)
DC ;Discontinue TRICARE Rx
"RTN","PSOREJP3",385,0)
 N ACTION S ACTION="D"
"RTN","PSOREJP3",386,0)
 D FULL^VALM1
"RTN","PSOREJP3",387,0)
 S ACTION=$$DC^PSOREJU1(RX,ACTION)
"RTN","PSOREJP3",388,0)
 I ACTION="Q"!(ACTION="^") S VALMSG="NO ACTION TAKEN.",VALMBCK="R" Q
"RTN","PSOREJP3",389,0)
 S CHANGE=1
"RTN","PSOREJP3",390,0)
 Q
"RTN","PSOREJP3",391,0)
 ;
"RTN","PSOREJP3",392,0)
FILLTR ;TRICARE/CHAMPVA specific logic  ;cnf, PSO*7*358
"RTN","PSOREJP3",393,0)
 ;COM is not new'd so the variable can be used in FILL tag
"RTN","PSOREJP3",394,0)
 N CONT,PSOET,PSQSTR
"RTN","PSOREJP3",395,0)
 ;
"RTN","PSOREJP3",396,0)
FILLTR2 ;Use for looping if user enters ^ in required comment field  ;cnf, PSO*7*358
"RTN","PSOREJP3",397,0)
 ;
"RTN","PSOREJP3",398,0)
 ;if TRICARE/CHAMPVA, not payable, and no security key, quit
"RTN","PSOREJP3",399,0)
 ;reference to ^XUSEC( supported by IA 10076
"RTN","PSOREJP3",400,0)
 I '$D(^XUSEC("PSO TRICARE/CHAMPVA",DUZ)) S VALMSG="Action Requires <PSO TRICARE/CHAMPVA> security key",VALMBCK="R" Q
"RTN","PSOREJP3",401,0)
 ;
"RTN","PSOREJP3",402,0)
 ;if TRICARE/CHAMPVA, not payable, and user has security key, prompt to continue or not
"RTN","PSOREJP3",403,0)
 S PSQSTR="You are bypassing claims processing. Do you wish to continue"
"RTN","PSOREJP3",404,0)
 S CONT=$$YESNO(PSQSTR,"No")
"RTN","PSOREJP3",405,0)
 I (CONT=-1)!('CONT) S VALMSG="NO ACTION TAKEN.",VALMBCK="R" Q
"RTN","PSOREJP3",406,0)
 ;
"RTN","PSOREJP3",407,0)
 ;check for valid electronic signature
"RTN","PSOREJP3",408,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q                               ;quit if no valid electronic signature
"RTN","PSOREJP3",409,0)
 ;
"RTN","PSOREJP3",410,0)
 ;prompt user for required TRICARE/CHAMPVA Justification
"RTN","PSOREJP3",411,0)
 S COM=$$TCOM(RX,FILL) G:COM="^" FILLTR2                    ;loop back to "continue?" question if ^ entry
"RTN","PSOREJP3",412,0)
 ;
"RTN","PSOREJP3",413,0)
 ;audit log
"RTN","PSOREJP3",414,0)
 S PSOET=$$PSOET(RX,FILL)
"RTN","PSOREJP3",415,0)
 D AUDIT^PSOTRI(RX,FILL,,COM,$S(PSOET:"N",1:"R"),$S($G(PSOTRIC)=1:"T",$G(PSOTRIC)=2:"C",1:""))
"RTN","PSOREJP3",416,0)
 Q
"RTN","PSOREJP3",417,0)
 ;
"RTN","PSOREJP3",418,0)
TCOM(RX,RFL) ; - Ask for TRICARE or CHAMPVA Justification
"RTN","PSOREJP3",419,0)
 N COM,DIR,DIRUT,X
"RTN","PSOREJP3",420,0)
 W ! S DIR(0)="F^3:100" S DIR("A")=$$ELIGDISP^PSOREJP1(RX,RFL)_" Justification" D ^DIR
"RTN","PSOREJP3",421,0)
 S COM=X I $D(DIRUT) S COM="^"
"RTN","PSOREJP3",422,0)
 Q COM
"RTN","PSOREJP3",423,0)
 ;
"RTN","PSOREJP3",424,0)
PSOET(RX,FILL) ; Returns flag for TRICARE or CHAMPVA non-billable and no claim submitted
"RTN","PSOREJP3",425,0)
 ; Return 1 if rejection code is eT or eC (pseudo-reject code)
"RTN","PSOREJP3",426,0)
 ;        0 otherwise
"RTN","PSOREJP3",427,0)
 ;
"RTN","PSOREJP3",428,0)
 I '$G(RX) Q 0
"RTN","PSOREJP3",429,0)
 N X,TRIREJCD
"RTN","PSOREJP3",430,0)
 S X=0
"RTN","PSOREJP3",431,0)
 S TRIREJCD=$T(TRIREJCD+1),TRIREJCD=$P(TRIREJCD,";;",2)
"RTN","PSOREJP3",432,0)
 S X=$$FIND^PSOREJUT(RX,$G(FILL),,TRIREJCD,1) ; PSO*7*421 - Pass indicator to ignore ECME status
"RTN","PSOREJP3",433,0)
 Q X
"RTN","PSOREJP3",434,0)
 ;
"RTN","PSOREJP3",435,0)
TRIREJCD ;TRICARE or CHAMPVA Reject Code, non-billable Rx   ;cnf, PSO*7*358
"RTN","PSOREJP3",436,0)
 ;;eT,eC;;TRICARE or CHAMPVA pseudo reject codes referenced in ^PSOREJP3, ^PSOREJU4
"RTN","PSOREJP3",437,0)
 Q
"RTN","PSOREJP3",438,0)
 ;
"RTN","PSOREJP3",439,0)
SEND(OVRCOD,CLA,PA,PSOET) ; - Sends Claim to ECME and closes Reject
"RTN","PSOREJP3",440,0)
 ; Input:  OVRCOD - Up to three ~-pieces, and each populated would be
"RTN","PSOREJP3",441,0)
 ;              Reason for Service Code ^ Prof Srvc Cd ^ Result of Srvc Cd
"RTN","PSOREJP3",442,0)
 ;         CLA - Submission Clarification Code #1 ~ SCC #2 ~ SCC #3 
"RTN","PSOREJP3",443,0)
 ;         PA - Prior Auth Type ^ Prior Auth Number 
"RTN","PSOREJP3",444,0)
 ;         PSOET - 1 if eT/eC pseudo-reject on claim
"RTN","PSOREJP3",445,0)
 N ALTXT,COM,DIR,PSO59,PSOCOB,PSOPLAN,PSORTYPE,RESP,SMA
"RTN","PSOREJP3",446,0)
 S DIR(0)="Y",DIR("A")="     Confirm",DIR("B")="YES"
"RTN","PSOREJP3",447,0)
 S DIR("A",1)="     When you confirm, a new claim will be submitted for"
"RTN","PSOREJP3",448,0)
 S DIR("A",2)="     the prescription and this REJECT will be marked"
"RTN","PSOREJP3",449,0)
 S DIR("A",3)="     resolved."
"RTN","PSOREJP3",450,0)
 S DIR("A",4)=" "
"RTN","PSOREJP3",451,0)
 W ! D ^DIR K DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP3",452,0)
 S SMA=0 I $G(OVRCOD)]"",$G(CLA)]"",$G(PA)]"" S SMA=1
"RTN","PSOREJP3",453,0)
 S ALTXT=""
"RTN","PSOREJP3",454,0)
 I 'SMA D
"RTN","PSOREJP3",455,0)
 . S ALTXT="REJECT WORKLIST"
"RTN","PSOREJP3",456,0)
 . S:$G(OVRCOD)'="" ALTXT=ALTXT_"-DUR OVERRIDE CODES("_$TR(OVRCOD,"^","/")_")"
"RTN","PSOREJP3",457,0)
 . S:$G(CLA)]"" ALTXT=ALTXT_"-(CLARIF. CODE="_CLA_")"
"RTN","PSOREJP3",458,0)
 . S:$G(PA)]"" ALTXT=ALTXT_"-(PRIOR AUTH.="_$TR(PA,"^","/")_")"
"RTN","PSOREJP3",459,0)
 ;
"RTN","PSOREJP3",460,0)
 S PSOCOB=$$PSOCOB^PSOREJP3(RX,FILL,REJ)
"RTN","PSOREJP3",461,0)
 S PSO59=$$IEN59^BPSOSRX(RX,FILL,PSOCOB)
"RTN","PSOREJP3",462,0)
 S PSOPLAN=$$GETPL59^BPSPRRX5(PSO59)  ; IA 6939
"RTN","PSOREJP3",463,0)
 S PSORTYPE=$$GETRTP59^BPSPRRX5(PSO59)  ; IA 6939
"RTN","PSOREJP3",464,0)
 ;
"RTN","PSOREJP3",465,0)
 D ECMESND^PSOBPSU1(RX,FILL,,$S($G(PSOET):"RSNB",1:"ED"),$$GETNDC^PSONDCUT(RX,FILL),,,$G(OVRCOD),,.RESP,,ALTXT,$G(CLA),$G(PA),PSOCOB,,PSOPLAN,PSORTYPE)
"RTN","PSOREJP3",466,0)
 I $G(RESP) D  Q
"RTN","PSOREJP3",467,0)
 . W !!?10,"Claim could not be submitted. Please try again later!"
"RTN","PSOREJP3",468,0)
 . W !,?10,"Reason: ",$S($P(RESP,"^",2)="":"UNKNOWN",1:$P(RESP,"^",2)),$C(7) H 2
"RTN","PSOREJP3",469,0)
 ;
"RTN","PSOREJP3",470,0)
 ; Get the ePharmacy Response Pause and hang for that amount of time (default is 2 if not set)
"RTN","PSOREJP3",471,0)
 N PAUSE,IEN5286
"RTN","PSOREJP3",472,0)
 I $G(PSOSITE)="" N PSOSITE S PSOSITE=$$RXSITE^PSOBPSUT(RX,FILL)
"RTN","PSOREJP3",473,0)
 S IEN5286=$O(^PS(52.86,"B",+PSOSITE,""))
"RTN","PSOREJP3",474,0)
 S PAUSE=$$GET1^DIQ(52.86,IEN5286_",",6)
"RTN","PSOREJP3",475,0)
 I PAUSE="" S PAUSE=2
"RTN","PSOREJP3",476,0)
 I PAUSE H PAUSE
"RTN","PSOREJP3",477,0)
 ;
"RTN","PSOREJP3",478,0)
 I $$PTLBL^PSOREJP2(RX,FILL) D PRINT(RX,FILL)
"RTN","PSOREJP3",479,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)
"RTN","PSOREJP3",480,0)
 I $$GET1^DIQ(52,RX,100,"I")=5&(PSOTRIC) D
"RTN","PSOREJP3",481,0)
 . Q:$$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE"
"RTN","PSOREJP3",482,0)
 . N XXX S XXX=""
"RTN","PSOREJP3",483,0)
 . W !,"This prescription can be pulled early from suspense or the label will print"
"RTN","PSOREJP3",484,0)
 . W !,"when PRINT FROM SUSPENSE occurs.",!
"RTN","PSOREJP3",485,0)
 . R !,"Press enter to continue... ",XXX:60
"RTN","PSOREJP3",486,0)
 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP3",487,0)
 Q
"RTN","PSOREJP5")
0^9^B57088844
"RTN","PSOREJP5",1,0)
PSOREJP5 ;ALB/BNT - Third Party Reject Additional Reject Information Screen ;02/14/11
"RTN","PSOREJP5",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**359,421,512**;DEC 1997;Build 44
"RTN","PSOREJP5",3,0)
 ;
"RTN","PSOREJP5",4,0)
 ; Reference to $$BBILL^BPSBUTL and $$RESUBMIT^BPSBUTL supported by IA 4719
"RTN","PSOREJP5",5,0)
 ; Reference to BPSNCPD3 supported by IA 4560
"RTN","PSOREJP5",6,0)
 ;
"RTN","PSOREJP5",7,0)
EN ; -- main entry point for PSO REJECT DISPLAY ADDTNL INFO
"RTN","PSOREJP5",8,0)
 D EN^VALM("PSO REJECT DISPLAY ADDTNL INFO")
"RTN","PSOREJP5",9,0)
 Q
"RTN","PSOREJP5",10,0)
 ;
"RTN","PSOREJP5",11,0)
ADDTXT ; Entry point for DUR Hidden action
"RTN","PSOREJP5",12,0)
 I '$D(@(VALMAR)) Q
"RTN","PSOREJP5",13,0)
 N FILL,LASTLN
"RTN","PSOREJP5",14,0)
 S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJP5",15,0)
 D FULL^VALM1
"RTN","PSOREJP5",16,0)
 D EN
"RTN","PSOREJP5",17,0)
 Q
"RTN","PSOREJP5",18,0)
 ;
"RTN","PSOREJP5",19,0)
ISDUR(RX,REJ) ;
"RTN","PSOREJP5",20,0)
 ; Returns 1 if there is DUR PPS RESPONSE data for the reject
"RTN","PSOREJP5",21,0)
 I '$G(RX) Q 0
"RTN","PSOREJP5",22,0)
 I '$G(REJ) Q 0
"RTN","PSOREJP5",23,0)
 N RXCOB,DURPPS,DURIEN
"RTN","PSOREJP5",24,0)
 S DURIEN=$$RESPIEN(RX,REJ)
"RTN","PSOREJP5",25,0)
 Q:DURIEN="" 0
"RTN","PSOREJP5",26,0)
 S RXCOB=$$RXCOB(RX,REJ)
"RTN","PSOREJP5",27,0)
 I RXCOB="" S RXCOB=1
"RTN","PSOREJP5",28,0)
 D DURRESP^BPSNCPD3(DURIEN,.DURPPS,RXCOB)
"RTN","PSOREJP5",29,0)
 I $G(DURPPS(RXCOB,"DUR PPS RESPONSE"))!($G(DURPPS(RXCOB,"MESSAGE"))]"")!($G(DURPPS(RXCOB,"PAYER MESSAGE",1))]"") Q 1
"RTN","PSOREJP5",30,0)
 Q 0
"RTN","PSOREJP5",31,0)
 ;
"RTN","PSOREJP5",32,0)
HDR ; -- header code
"RTN","PSOREJP5",33,0)
 N LINE1,LINE2,X
"RTN","PSOREJP5",34,0)
 S VALMHDR(1)=$$DVINFO^PSOREJU2(RX,FILL,1),VALMHDR(2)=$$PTINFO^PSOREJU2(RX,1)
"RTN","PSOREJP5",35,0)
 ;cnf, PSO*7*358, add REJ to parameter list for RXINFO^PSOREJP3
"RTN","PSOREJP5",36,0)
 S VALMHDR(3)=$$RXINFO^PSOREJP3(RX,FILL,1),VALMHDR(4)=$$RXINFO^PSOREJP3(RX,FILL,2,REJ)
"RTN","PSOREJP5",37,0)
 Q
"RTN","PSOREJP5",38,0)
 ;
"RTN","PSOREJP5",39,0)
INIT ; -- init variables and list array
"RTN","PSOREJP5",40,0)
 N DATA,LINE,RXCOB,ADDREJ,NDX,I,DURIEN,X
"RTN","PSOREJP5",41,0)
 F I=1:1:$G(LASTLN) D RESTORE^VALM10(I)
"RTN","PSOREJP5",42,0)
 K ^TMP("PSOREJP2",$J) S VALMCNT=0,LINE=0
"RTN","PSOREJP5",43,0)
 S DURIEN=$$RESPIEN(RX,REJ)
"RTN","PSOREJP5",44,0)
 Q:DURIEN=""
"RTN","PSOREJP5",45,0)
 S RXCOB=$$RXCOB(RX,REJ)
"RTN","PSOREJP5",46,0)
 D DURRESP^BPSNCPD3(DURIEN,.ADDREJ,RXCOB)
"RTN","PSOREJP5",47,0)
 I '+$G(ADDREJ(RXCOB,"DUR PPS RESPONSE")),$G(ADDREJ(RXCOB,"MESSAGE"))']"",$G(ADDREJ(RXCOB,"PAYER MESSAGE",1))="" D  Q
"RTN","PSOREJP5",48,0)
 . D SETLN()
"RTN","PSOREJP5",49,0)
 . D SETLN("There is no additional reject information to display")
"RTN","PSOREJP5",50,0)
 ;
"RTN","PSOREJP5",51,0)
 D SETLN()
"RTN","PSOREJP5",52,0)
 D SET("MESSAGE",80-$L($$LABEL("MESSAGE")),"",ADDREJ(RXCOB,"MESSAGE"))
"RTN","PSOREJP5",53,0)
 ;
"RTN","PSOREJP5",54,0)
 D SETLN()
"RTN","PSOREJP5",55,0)
 D SET("PAYER ADDL MSG",80-$L($$LABEL("PAYER ADDL MSG")),"",$G(ADDREJ(RXCOB,"PAYER MESSAGE",1)))
"RTN","PSOREJP5",56,0)
 S X="",$E(X,$L($$LABEL("PAYER ADDL MSG")))=" "
"RTN","PSOREJP5",57,0)
 S I=1 F  S I=$O(ADDREJ(RXCOB,"PAYER MESSAGE",I)) Q:'I  D
"RTN","PSOREJP5",58,0)
 . D SET("",80-$L($$LABEL("PAYER ADDL MSG")),"",X_ADDREJ(RXCOB,"PAYER MESSAGE",I))
"RTN","PSOREJP5",59,0)
 ;
"RTN","PSOREJP5",60,0)
 S NDX=""
"RTN","PSOREJP5",61,0)
 F  S NDX=$O(ADDREJ(RXCOB,"DUR PPS",NDX)) Q:NDX=""  D
"RTN","PSOREJP5",62,0)
 . N QPF
"RTN","PSOREJP5",63,0)
 . D SETLN()
"RTN","PSOREJP5",64,0)
 . D SET("DUR PPS RESPONSE",80-$L($$LABEL("DUR PPS RESPONSE")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"DUR PPS RESPONSE"))
"RTN","PSOREJP5",65,0)
 . D SET("REASON FOR SERVICE CODE",80-$L($$LABEL("REASON FOR SERVICE CODE")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"REASON FOR SERVICE CODE"))
"RTN","PSOREJP5",66,0)
 . D SET("CLINICAL SIGNIFICANCE CODE",80-$L($$LABEL("CLINICAL SIGNIFICANCE CODE")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"CLINICAL SIGNIFICANCE CODE"))
"RTN","PSOREJP5",67,0)
 . D SET("OTHER PHARMACY INDICATOR",80-$L($$LABEL("OTHER PHARMACY INDICATOR")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"OTHER PHARMACY INDICATOR"))
"RTN","PSOREJP5",68,0)
 . D SET("PREVIOUS DATE OF FILL",80-$L($$LABEL("PREVIOUS DATE OF FILL")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"PREVIOUS DATE OF FILL"))
"RTN","PSOREJP5",69,0)
 . ;
"RTN","PSOREJP5",70,0)
 . ; esg - PSO*7*421 - 2/4/13 - properly display Quantity of Previous Fill
"RTN","PSOREJP5",71,0)
 . S QPF=""
"RTN","PSOREJP5",72,0)
 . I ADDREJ(RXCOB,"DUR PPS",NDX,"QUANTITY OF PREVIOUS FILL") S QPF=ADDREJ(RXCOB,"DUR PPS",NDX,"QUANTITY OF PREVIOUS FILL")/1000
"RTN","PSOREJP5",73,0)
 . D SET("QUANTITY OF PREVIOUS FILL",80-$L($$LABEL("QUANTITY OF PREVIOUS FILL")),"",QPF)
"RTN","PSOREJP5",74,0)
 . ;
"RTN","PSOREJP5",75,0)
 . D SET("DATABASE INDICATOR",80-$L($$LABEL("DATABASE INDICATOR")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"DATABASE INDICATOR"))
"RTN","PSOREJP5",76,0)
 . D SET("OTHER PRESCRIBER INDICATOR",80-$L($$LABEL("OTHER PRESCRIBER INDICATOR")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"OTHER PRESCRIBER INDICATOR"))
"RTN","PSOREJP5",77,0)
 . D SET("DUR FREE TEXT MESSAGE",80-$L($$LABEL("DUR FREE TEXT MESSAGE")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"DUR FREE TEXT MESSAGE"))
"RTN","PSOREJP5",78,0)
 . D SET("DUR ADDITIONAL TEXT",80-$L($$LABEL("DUR ADDITIONAL TEXT")),"",ADDREJ(RXCOB,"DUR PPS",NDX,"DUR ADDITIONAL TEXT"))
"RTN","PSOREJP5",79,0)
 S VALMCNT=LINE
"RTN","PSOREJP5",80,0)
 Q
"RTN","PSOREJP5",81,0)
 ;
"RTN","PSOREJP5",82,0)
LABEL(FIELD) ; Sets the label for the field
"RTN","PSOREJP5",83,0)
 I FIELD="MESSAGE" Q "Payer Msg: "
"RTN","PSOREJP5",84,0)
 I FIELD="PAYER ADDL MSG" Q "Payer Addl Msg: "
"RTN","PSOREJP5",85,0)
 I FIELD="DUR PPS RESPONSE" Q "DUR Response: "
"RTN","PSOREJP5",86,0)
 I FIELD="REASON FOR SERVICE CODE" Q "Reason Code: "
"RTN","PSOREJP5",87,0)
 I FIELD="CLINICAL SIGNIFICANCE CODE" Q "Clinical Significance Code: "
"RTN","PSOREJP5",88,0)
 I FIELD="OTHER PHARMACY INDICATOR" Q "Other Pharmacy Indicator: "
"RTN","PSOREJP5",89,0)
 I FIELD="PREVIOUS DATE OF FILL" Q "Previous Date of Fill: "
"RTN","PSOREJP5",90,0)
 I FIELD="QUANTITY OF PREVIOUS FILL" Q "Quantity of Previous Fill: "
"RTN","PSOREJP5",91,0)
 I FIELD="DATABASE INDICATOR" Q "Database Indicator: "
"RTN","PSOREJP5",92,0)
 I FIELD="OTHER PRESCRIBER INDICATOR" Q "Other Prescriber Indicator: "
"RTN","PSOREJP5",93,0)
 I FIELD="DUR FREE TEXT MESSAGE" Q "DUR Text: "
"RTN","PSOREJP5",94,0)
 I FIELD="DUR ADDITIONAL TEXT" Q "DUR Add Text: "
"RTN","PSOREJP5",95,0)
 Q ""
"RTN","PSOREJP5",96,0)
 ;
"RTN","PSOREJP5",97,0)
SET(FIELD,L,UND,TXT) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJP5",98,0)
 N I,T
"RTN","PSOREJP5",99,0)
 I $L(TXT)'>L D SETLN($$LABEL(FIELD)_TXT,,$S($G(UND):1,1:0),80-L) Q
"RTN","PSOREJP5",100,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJP5",101,0)
 . I I=1 D SETLN($$LABEL(FIELD)_$E(TXT,1,L),,,80-L) S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJP5",102,0)
 . S T="",$E(T,81-L)=$E(TXT,1,L) D SETLN(T,,$S($E(TXT,L+1,999)=""&$G(UND):1,1:0),80-L) S TXT=$E(TXT,L+1,999)
"RTN","PSOREJP5",103,0)
 Q
"RTN","PSOREJP5",104,0)
 ;
"RTN","PSOREJP5",105,0)
SETLN(TEXT,REV,UND,HIG) ; Sets a line to be displayed in the Body section
"RTN","PSOREJP5",106,0)
 N X
"RTN","PSOREJP5",107,0)
 S:$G(TEXT)="" $E(TEXT,80)=""
"RTN","PSOREJP5",108,0)
 S:$L(TEXT)>80 TEXT=$E(TEXT,1,80)
"RTN","PSOREJP5",109,0)
 S LINE=LINE+1,^TMP("PSOREJP2",$J,LINE,0)=$G(TEXT)
"RTN","PSOREJP5",110,0)
 ;
"RTN","PSOREJP5",111,0)
 I LINE>$G(LASTLN) D SAVE^VALM10(LINE) S LASTLN=LINE
"RTN","PSOREJP5",112,0)
 ;
"RTN","PSOREJP5",113,0)
 I $G(REV) D  Q
"RTN","PSOREJP5",114,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IOINORM)
"RTN","PSOREJP5",115,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","PSOREJP5",116,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","PSOREJP5",117,0)
 I $G(HIG) D
"RTN","PSOREJP5",118,0)
 . D CNTRL^VALM10(LINE,HIG,80,IOINHI_$S($G(UND):IOUON,1:""),IOINORM)
"RTN","PSOREJP5",119,0)
 Q
"RTN","PSOREJP5",120,0)
 ;
"RTN","PSOREJP5",121,0)
RXCOB(RX,REJ) ; Return the COB Indicator for the reject
"RTN","PSOREJP5",122,0)
 ; Input: RX = RX IEN
"RTN","PSOREJP5",123,0)
 ;       REJ = Reject Info multiple IEN
"RTN","PSOREJP5",124,0)
 I '$G(RX) Q ""
"RTN","PSOREJP5",125,0)
 I '$G(REJ) Q ""
"RTN","PSOREJP5",126,0)
 N RXCOB
"RTN","PSOREJP5",127,0)
 S RXCOB=$$GET1^DIQ(52.25,REJ_","_RX_",","27","I")
"RTN","PSOREJP5",128,0)
 Q $S(+RXCOB>1:RXCOB,1:1)
"RTN","PSOREJP5",129,0)
 ;
"RTN","PSOREJP5",130,0)
RESPIEN(RX,REJ) ; Return the RESPONSE ID from the Reject Info multiple
"RTN","PSOREJP5",131,0)
 ; Input: RX = RX IEN
"RTN","PSOREJP5",132,0)
 ;       REJ = Reject Info multiple IEN
"RTN","PSOREJP5",133,0)
 I '$G(RX) Q ""
"RTN","PSOREJP5",134,0)
 I '$G(REJ) Q ""
"RTN","PSOREJP5",135,0)
 Q $$GET1^DIQ(52.25,REJ_","_RX_",","16","I")
"RTN","PSOREJP5",136,0)
 ;
"RTN","PSOREJP5",137,0)
HELP ; -- help code
"RTN","PSOREJP5",138,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","PSOREJP5",139,0)
 Q
"RTN","PSOREJP5",140,0)
 ;
"RTN","PSOREJP5",141,0)
EXIT ; -- exit code
"RTN","PSOREJP5",142,0)
 Q
"RTN","PSOREJP5",143,0)
 ;
"RTN","PSOREJP5",144,0)
EXPND ; -- expand code
"RTN","PSOREJP5",145,0)
 Q
"RTN","PSOREJP5",146,0)
 ;
"RTN","PSOREJP5",147,0)
REJ ; - DUR Information - called from REJ^PSOREJP1
"RTN","PSOREJP5",148,0)
 ; this code moved from PSOREJP1, routine was too large
"RTN","PSOREJP5",149,0)
 ;
"RTN","PSOREJP5",150,0)
 S PSONAF=$$NFLDT^BPSBUTL(RX,FILL) ; IA 4719
"RTN","PSOREJP5",151,0)
 I PSONAF'="" D SETLN^PSOREJP1("Next Avail Fill: "_$$FMTE^XLFDT(PSONAF),,,16) ; PSO*7*421
"RTN","PSOREJP5",152,0)
 S PSOADD=$$ADDFLDS^BPSBUTL(RX,FILL,PSOCOB)  ; IA 4719
"RTN","PSOREJP5",153,0)
 I $P(PSOADD,U)'="" D SETLN^PSOREJP1("Maximum Age Qualifier: "_$P(PSOADD,U),,,22)
"RTN","PSOREJP5",154,0)
 I $P(PSOADD,U,2)'="" D SETLN^PSOREJP1("Maximum Age: "_$P(PSOADD,U,2),,,12)
"RTN","PSOREJP5",155,0)
 I $P(PSOADD,U,3)'="" D SETLN^PSOREJP1("Maximum Amount: "_$P(PSOADD,U,3),,,15)
"RTN","PSOREJP5",156,0)
 I $P(PSOADD,U,4)'="" D SETLN^PSOREJP1("Maximum Amount Qualifier: "_$P(PSOADD,U,4),,,25)
"RTN","PSOREJP5",157,0)
 I $P(PSOADD,U,5)'="" D SETLN^PSOREJP1("Maximum Amount Time Period: "_$P(PSOADD,U,5),,,27)
"RTN","PSOREJP5",158,0)
 I $P(PSOADD,U,6)'="" D SETLN^PSOREJP1("Maximum Amount Time Period Start Date: "_$$FMTE^XLFDT($P(PSOADD,U,6)),,,38)
"RTN","PSOREJP5",159,0)
 I $P(PSOADD,U,7)'="" D SETLN^PSOREJP1("Maximum Amount Time Period End Date: "_$$FMTE^XLFDT($P(PSOADD,U,7)),,,36)
"RTN","PSOREJP5",160,0)
 I $P(PSOADD,U,8)'="" D SETLN^PSOREJP1("Maximum Amount Time Period Units: "_$P(PSOADD,U,8),,,33)
"RTN","PSOREJP5",161,0)
 I $P(PSOADD,U,9)'="" D SETLN^PSOREJP1("Minimum Age Qualifier: "_$P(PSOADD,U,9),,,22)
"RTN","PSOREJP5",162,0)
 I $P(PSOADD,U,10)'="" D SETLN^PSOREJP1("Minimum Age: "_$P(PSOADD,U,10),,,12)
"RTN","PSOREJP5",163,0)
 I $P(PSOADD,U,11)'="" D SETLN^PSOREJP1("Minimum Amount: "_$P(PSOADD,U,11),,,15)
"RTN","PSOREJP5",164,0)
 I $P(PSOADD,U,12)'="" D SETLN^PSOREJP1("Minimum Amount Qualifier: "_$P(PSOADD,U,12),,,25)
"RTN","PSOREJP5",165,0)
 I $P(PSOADD,U,13)'="" D SETLN^PSOREJP1("Remaining Amount: "_$P(PSOADD,U,13),,,17)
"RTN","PSOREJP5",166,0)
 I $P(PSOADD,U,14)'="" D SETLN^PSOREJP1("Remaining Amount Qualifier: "_$P(PSOADD,U,14),,,27)
"RTN","PSOREJP5",167,0)
 ;
"RTN","PSOREJP5",168,0)
 D SET^PSOREJP1("PAYER MESSAGE",63)
"RTN","PSOREJP5",169,0)
 D SET^PSOREJP1("REASON",63)
"RTN","PSOREJP5",170,0)
 S PFLDT=$$FMTE^XLFDT($G(DATA(REJ,"PLAN PREVIOUS FILL DATE")))
"RTN","PSOREJP5",171,0)
 D SET^PSOREJP1("DUR TEXT",63,$S(PFLDT="":1,1:0))
"RTN","PSOREJP5",172,0)
 I PFLDT'="" D SETLN^PSOREJP1("Last Fill Date : "_PFLDT_" (from payer)",,1,18)
"RTN","PSOREJP5",173,0)
 Q
"RTN","PSORXED")
0^13^B106523584
"RTN","PSORXED",1,0)
PSORXED ;IHS/DSD/JCM - edit rx utility ;8/18/10 3:16pm
"RTN","PSORXED",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**2,16,21,26,56,71,125,201,246,289,298,366,385,403,421,482,512**;DEC 1997;Build 44
"RTN","PSORXED",3,0)
 ;External reference to ^PSXEDIT supported by DBIA 2209
"RTN","PSORXED",4,0)
 ;External reference to ^DD(52 supported by DBIA 999
"RTN","PSORXED",5,0)
 ;External reference to ^PSDRUG supported by DBIA 221
"RTN","PSORXED",6,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSORXED",7,0)
 ;
"RTN","PSORXED",8,0)
START ;this entry point is no longer used.
"RTN","PSORXED",9,0)
 ;D INIT,LKUP G:PSORXED("QFLG") END D PARSE,EOJ G START
"RTN","PSORXED",10,0)
 ;
"RTN","PSORXED",11,0)
END D EOJ
"RTN","PSORXED",12,0)
 Q
"RTN","PSORXED",13,0)
 ;
"RTN","PSORXED",14,0)
INIT S PSORXED("QFLG")=0 Q
"RTN","PSORXED",15,0)
 ;
"RTN","PSORXED",16,0)
LKUP ; this line of code is no longer used S PSONUM="RX",PSONUM("A")="EDIT",PSOQFLG=0 D EN1^PSONUM I PSOQFLG!($Q(PSOLIST)']"") S PSORXED("QFLG")=1
"RTN","PSORXED",17,0)
 K PSOQFLG Q
"RTN","PSORXED",18,0)
 ;
"RTN","PSORXED",19,0)
PARSE F PSORXED("LIST")=1:1 Q:'$D(PSOLIST(PSORXED("LIST")))!PSORXED("QFLG")  F PSORXED("I")=1:1:$L(PSOLIST(PSORXED("LIST"))) S PSORXED("IRXN")=$P(PSOLIST(PSORXED("LIST")),",",PSORXED("I")) D:+PSORXED("IRXN") PROCESS
"RTN","PSORXED",20,0)
 Q
"RTN","PSORXED",21,0)
 ;
"RTN","PSORXED",22,0)
PROCESS S PSORXED("DFLG")=0 G:$G(^PSRX(PSORXED("IRXN"),0))']"" PROCESSX
"RTN","PSORXED",23,0)
 ;*298 Track PI and Oth Lang PI
"RTN","PSORXED",24,0)
 S PSORXED("RX0")=^PSRX(PSORXED("IRXN"),0)
"RTN","PSORXED",25,0)
 S PSORXED("RX2")=^(2)
"RTN","PSORXED",26,0)
 S PSORXED("RX3")=^(3)
"RTN","PSORXED",27,0)
 S PSOSIG=$G(^PSRX(PSORXED("IRXN"),"SIG"))
"RTN","PSORXED",28,0)
 S PSODAYS=$P(PSORXED("RX0"),"^",8)
"RTN","PSORXED",29,0)
 S PSOPINS=$G(^PSRX(PSORXED("IRXN"),"INS"))
"RTN","PSORXED",30,0)
 S PSOOINS=$G(^PSRX(PSORXED("IRXN"),"INSS"))
"RTN","PSORXED",31,0)
 S (I,RFED,RFDT)=0
"RTN","PSORXED",32,0)
 F  S I=$O(^PSRX(PSORXED("IRXN"),1,I)) Q:'I  D
"RTN","PSORXED",33,0)
 . S RFED=I
"RTN","PSORXED",34,0)
 . S PSORXED("RX1")=^PSRX(PSORXED("IRXN"),1,I,0)
"RTN","PSORXED",35,0)
 . S RFDT=$P(^(0),"^")
"RTN","PSORXED",36,0)
 . S PSODAYS=$P(^(0),"^",10) S:$P(^(0),"^",17) PSONEW("PROVIDER NAME")=$P(^VA(200,$P(^(0),"^",17),0),"^")
"RTN","PSORXED",37,0)
 S PSORXST=+$P($G(^PS(53,+$P(PSORXED("RX0"),"^",3),0)),"^",7)
"RTN","PSORXED",38,0)
 N DA
"RTN","PSORXED",39,0)
 S DA=PSORXED("IRXN")
"RTN","PSORXED",40,0)
 D EN^PSORXPR
"RTN","PSORXED",41,0)
 D CHECK G:PSORXED("DFLG") PROCESSX
"RTN","PSORXED",42,0)
 N X
"RTN","PSORXED",43,0)
 S X="PSXEDIT" X ^%ZOSF("TEST") K X I $T D ^PSXEDIT I $G(PSXOUT) K PSXOUT G L1
"RTN","PSORXED",44,0)
 D DIE^PSORXED1
"RTN","PSORXED",45,0)
 ;
"RTN","PSORXED",46,0)
L1 D LOG,POST
"RTN","PSORXED",47,0)
 ;
"RTN","PSORXED",48,0)
PROCESSX Q
"RTN","PSORXED",49,0)
 ;
"RTN","PSORXED",50,0)
CHECK Q  L +^PSRX(PSORXED("IRXN")):$S(+$G(^DD("DILOCKTM"))>0:+^DD("DILOCKTM"),1:3) I '$T W $C(7),!!,"Rx Number is Locked by Another User!",! S PSORXED("DFLG")=1 H 5 Q
"RTN","PSORXED",51,0)
 I $G(^PSDRUG($P(PSORXED("RX0"),"^",6),"I"))]"",^("I")<DT D  G CHECKX
"RTN","PSORXED",52,0)
 . W !,$C(7),"This drug has been inactivated. ",! S PSORXED("DFLG")=1 Q
"RTN","PSORXED",53,0)
 ;
"RTN","PSORXED",54,0)
 K PSPOP I $G(PSODIV),$P(PSORXED("RX2"),"^",9)'=PSOSITE S PSPRXN=PSORXED("IRXN") D CHK1^PSOUTLA I $G(PSPOP)=1 S PSORXED("DFLG")=1 G CHECKX
"RTN","PSORXED",55,0)
 ;
"RTN","PSORXED",56,0)
 I $P(^PSRX(PSORXED("IRXN"),"STA"),"^")=14!($P(^("STA"),"^")=15) S PSORXED("DFLG")=1 W !!,$C(7),"Discontinued prescriptions cannot be edited.",! G CHECKX
"RTN","PSORXED",57,0)
 I $D(^PS(52.4,"B",PSORXED("IRXN"))) S PSORXED("DFLG")=1 W !!,$C(7),"Non-verified prescriptions cannot be edited.",!
"RTN","PSORXED",58,0)
 ;
"RTN","PSORXED",59,0)
CHECKX K PSPOP,DIR,DTOUT,DUOUT,Y,X Q
"RTN","PSORXED",60,0)
 ;
"RTN","PSORXED",61,0)
LOG K PSFROM S DA=PSORXED("IRXN"),(PSRX0,RX0)=PSORXED("RX0"),QTY=$P(RX0,"^",7),QTY=QTY-$P(^PSRX(DA,0),"^",7) K ZD(DA) S:'$O(^PSRX(DA,1,0)) ZD(DA)=$P(^PSRX(DA,2),"^",2)
"RTN","PSORXED",62,0)
 ;
"RTN","PSORXED",63,0)
 ; PSOBPS and PSOTRIC are used to check eligibility. Eligibility checking
"RTN","PSORXED",64,0)
 ; is only needed for non-billable Rxs (ie PSOBPS'="e")
"RTN","PSORXED",65,0)
 N PSOBPS,PSOTRIC
"RTN","PSORXED",66,0)
 S PSOBPS=$$ECME^PSOBPSUT(PSORXED("IRXN"))
"RTN","PSORXED",67,0)
 S PSOTRIC=$$TRIC^PSOREJP1(PSORXED("IRXN"),0,.PSOTRIC)
"RTN","PSORXED",68,0)
 ;
"RTN","PSORXED",69,0)
 S COM="" F I=3,4,5:1:13,17 I $P(PSRX0,"^",I)'=$P(^PSRX(DA,0),"^",I) S PSI=$S(I=13:1,1:I),COM=COM_$P(^DD(52,PSI,0),"^")_" ("_$P(PSRX0,"^",I)_"),"
"RTN","PSORXED",70,0)
 ;
"RTN","PSORXED",71,0)
 N PSOFILDAT
"RTN","PSORXED",72,0)
 S PSOFILDAT=0   ; fill date edit flag
"RTN","PSORXED",73,0)
 ;
"RTN","PSORXED",74,0)
 I $P(PSORXED("RX2"),"^",2)'=$P(^PSRX(DA,2),"^",2) S COM=COM_$P(^DD(52,22,0),"^")_" ("_$P(PSORXED("RX2"),"^",2)_"),",PSOFILDAT=1     ; set flag indicating the original fill date was edited
"RTN","PSORXED",75,0)
 I $P(PSORXED("RX3"),"^",7)'=$P(^PSRX(DA,3),"^",7) S COM=COM_$P(^DD(52,12,0),"^")_" ("_$P(PSORXED("RX3"),"^",7)_"),"
"RTN","PSORXED",76,0)
 I PSOSIG'=$P($G(^PSRX(DA,"SIG")),"^") S COM=COM_$P(^DD(52,10,0),"^")_" ("_PSOSIG_"),"
"RTN","PSORXED",77,0)
 ;*298 Track PI and Oth Lang PI
"RTN","PSORXED",78,0)
 I PSOPINS'=$G(^PSRX(DA,"INS")) S COM=COM_$P(^DD(52,114,0),"^")_" ("_PSOPINS_"),"
"RTN","PSORXED",79,0)
 I PSOOINS'=$G(^PSRX(DA,"INSS")) S COM=COM_$P(^DD(52,114.1,0),"^")_" ("_PSOOINS_"),"
"RTN","PSORXED",80,0)
 I PSOTRN'=$G(^PSRX(DA,"TN")) S COM=COM_$P(^DD(52,6.5,0),"^")_" ("_PSOTRN_"),"
"RTN","PSORXED",81,0)
 D FILL
"RTN","PSORXED",82,0)
 I '$$RXRLDT^PSOBPSUT(PSORXED("IRXN"),PSOEDITF),COM="",PSOBPS="e" D LBLCHK G:'PSOEDITL LOGX G LOG1
"RTN","PSORXED",83,0)
 I PSOTRIC&('$$RXRLDT^PSOBPSUT(PSORXED("IRXN"),PSOEDITF)),COM="",PSOBPS'="e" D LBLCHK G LOGX ; labels for unreleased TRICARE/CHAMPVA resolved claims; when COM'="" label always printed
"RTN","PSORXED",84,0)
 I PSOTRIC&(COM=""),PSOBPS'="e" D LBL D ASKL:PSOEDITL G:'PSOEDITL LOGX G LOG1
"RTN","PSORXED",85,0)
 G:COM="" LOGX K PSRX0 S X=$S($D(PSOCLC):PSOCLC,1:DUZ)
"RTN","PSORXED",86,0)
 S K=1,D1=0 F Z=0:0 S Z=$O(^PSRX(DA,"A",Z)) Q:'Z  S D1=Z,K=K+1
"RTN","PSORXED",87,0)
 S D1=D1+1 S:'($D(^PSRX(DA,"A",0))#2) ^(0)="^52.3DA^^^" S ^(0)=$P(^(0),"^",1,2)_"^"_D1_"^"_K
"RTN","PSORXED",88,0)
 ;
"RTN","PSORXED",89,0)
 ;PSO*7*366
"RTN","PSORXED",90,0)
 D NOW^%DTC S ^PSRX(DA,"A",D1,0)=%_"^E^"_$G(DUZ)_"^0^"_COM
"RTN","PSORXED",91,0)
 ;
"RTN","PSORXED",92,0)
LOG1 ;
"RTN","PSORXED",93,0)
 I QTY,$P(^PSRX(DA,2),"^",13) S ^PSDRUG($P(^PSRX(DA,0),"^",6),660.1)=$S($D(^PSDRUG(+$P(^PSRX(DA,0),"^",6),660.1)):^(660.1)+QTY,1:QTY)
"RTN","PSORXED",94,0)
 S:$P(RX0,"^",6)'=$P(^PSRX(DA,0),"^",6) ^PSDRUG(+$P(^PSRX(DA,0),"^",6),660.1)=$S($D(^PSDRUG(+$P(RX0,"^",6),660.1)):^(660.1)+$P(RX0,"^",7),1:$P(RX0,"^",7))
"RTN","PSORXED",95,0)
 S RX0=^PSRX(DA,0),RX2=^(2),J=DA,OEXDT=+$P(RX2,"^",6) D ^PSOEXDT S NEXDT=+$P(RX2,"^",6) I OEXDT'=NEXDT D
"RTN","PSORXED",96,0)
 .K ^PSRX("AG",OEXDT,DA) S ^PSRX("AG",NEXDT,DA)=""
"RTN","PSORXED",97,0)
 .S D=+$P(RX0,"^",2) K ^PS(55,D,"P","A",OEXDT,DA) S ^PS(55,D,"P","A",NEXDT,DA)=""
"RTN","PSORXED",98,0)
 K D,OEXDT,NEXDT
"RTN","PSORXED",99,0)
 ; 
"RTN","PSORXED",100,0)
 ; Do not add RX to the label list when there are:
"RTN","PSORXED",101,0)
 ;   1) Unresolved DUR/Refill Too Soon/RRR rejects
"RTN","PSORXED",102,0)
 ;   2) Unresolved TRICARE/CHAMPVA rejects
"RTN","PSORXED",103,0)
 ;   3) TRICARE/CHAMPVA claims that are IN PROGRESS
"RTN","PSORXED",104,0)
 ; But if the Fill Date was modified then bypass these checks and allow to update the label list  - PSO*7*403
"RTN","PSORXED",105,0)
 I 'PSOFILDAT,$$ECMECHK^PSOREJU3(DA,$G(PSOEDITF)) G LOGX
"RTN","PSORXED",106,0)
 ;
"RTN","PSORXED",107,0)
 ; If Rx is non-billable
"RTN","PSORXED",108,0)
 I PSOBPS'="e" G:+$P(^PSRX(J,"STA"),"^")!($G(PSOEDITL)=1&('$G(PSOTRIC))) LOGX S RXFL(PSORXED("IRXN"))=$S($G(PSOEDITF):$G(PSOEDITF),1:0) I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSORXED("IRXN")_"," D SETRP G LOGX
"RTN","PSORXED",109,0)
 I PSOBPS'="e" G:$G(PSOEDITL)=1&('$G(PSOTRIC)) LOGX
"RTN","PSORXED",110,0)
 ;
"RTN","PSORXED",111,0)
 ; If Rx is billable
"RTN","PSORXED",112,0)
 I PSOBPS="e",$$RXRLDT^PSOBPSUT(DA,$G(PSOEDITF)) G LOGX
"RTN","PSORXED",113,0)
 I PSOBPS="e" D  I 'PTLBL G LOGX
"RTN","PSORXED",114,0)
 . S PTLBL=1,PSOACT=0
"RTN","PSORXED",115,0)
 . F  S PSOACT=$O(^PSRX(DA,"A",PSOACT)) Q:'PSOACT  D  Q:'PTLBL
"RTN","PSORXED",116,0)
 . . I $$GET1^DIQ(52.3,PSOACT_","_DA,.05,"E")["CMOP Suspense Label Printed" S PTLBL=0
"RTN","PSORXED",117,0)
 ;
"RTN","PSORXED",118,0)
 I PSOBPS="e" G:+$P(^PSRX(J,"STA"),"^") LOGX S RXFL(PSORXED("IRXN"))=$S($G(PSOEDITF):$G(PSOEDITF),1:0) I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSORXED("IRXN")_"," D SETRP G LOGX
"RTN","PSORXED",119,0)
 ;
"RTN","PSORXED",120,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSORXED",121,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSORXED("IRXN"))<220 D  G LOGX
"RTN","PSORXED",122,0)
 .I PSORX("PSOL",PSOX2)'[PSORXED("IRXN")_"," S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSORXED("IRXN")_"," D SETRP
"RTN","PSORXED",123,0)
 E  I $G(PSORX("PSOL",PSOX2+1))'[PSORXED("IRXN")_"," S PSORX("PSOL",PSOX2+1)=PSORXED("IRXN")_"," D SETRP   ;;PSO*7*246
"RTN","PSORXED",124,0)
 ;
"RTN","PSORXED",125,0)
LOGX K PSOEDITF,PSOEDITR,PSOEDITL D:$G(RFED) ^PSORXED1
"RTN","PSORXED",126,0)
 Q
"RTN","PSORXED",127,0)
 ;
"RTN","PSORXED",128,0)
POST ; D NEXT D:$G(^PSRX(PSORXED("IRXN"),"IB"))]"" COPAY K PSODAYS,PSORXST
"RTN","PSORXED",129,0)
 D NEXT D COPAY K PSODAYS,PSORXST
"RTN","PSORXED",130,0)
 Q
"RTN","PSORXED",131,0)
 ;
"RTN","PSORXED",132,0)
COPAY S DA=PSORXED("IRXN") I 'RFD,PSODAYS'=+$P(^PSRX(DA,0),"^",8) I +$G(^PSRX(DA,"IB"))!($P($G(^PSRX(DA,"PFS")),"^",2)) D CPCK G RXST
"RTN","PSORXED",133,0)
 I RFD,+$G(^PSRX(DA,1,RFD,0)),PSODAYS'=$P($G(^PSRX(DA,1,RFD,0)),"^",10) I +$G(^PSRX(DA,"IB"))!($P($G(^PSRX(DA,1,RFD,"PFS")),"^",2)) D CPCK
"RTN","PSORXED",134,0)
 ;
"RTN","PSORXED",135,0)
RXST G:PSORXST=+$P($G(^PS(53,+$P(^PSRX(DA,0),"^",3),0)),"^",7) COPAYX
"RTN","PSORXED",136,0)
 W !,$C(7),"Patient Status field for this Rx has been changed from a ",$S(PSORXST=0:"COPAYMENT ELIGIBLE",PSORXST=1:"COPAYMENT EXEMPT",1:"")
"RTN","PSORXED",137,0)
 W !,"patient status."
"RTN","PSORXED",138,0)
 W "  The copay status for this Rx will be automatically adjusted."
"RTN","PSORXED",139,0)
 W !,"If action needs to be taken to adjust charges you MUST use the"
"RTN","PSORXED",140,0)
 W !,"Reset Copay Status/Cancel Charges option."
"RTN","PSORXED",141,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR
"RTN","PSORXED",142,0)
 I +$P($G(^PS(53,+$P(^PSRX(DA,0),"^",3),0)),"^",7)=1 D  ; SET TO NO COPAY AND AUDIT CHANGE
"RTN","PSORXED",143,0)
 . I '$D(^PSRX(DA,"IB")) S ^PSRX(DA,"IB")=""
"RTN","PSORXED",144,0)
 . S $P(^PSRX(DA,"IB"),"^",1)=""
"RTN","PSORXED",145,0)
 . S PSODA=DA
"RTN","PSORXED",146,0)
 . S PSOREF=RFD
"RTN","PSORXED",147,0)
 . S PSOCOMM="Rx Patient Status Change"
"RTN","PSORXED",148,0)
 . S PSOOLD="Copay"
"RTN","PSORXED",149,0)
 . S PSONW="No Copay"
"RTN","PSORXED",150,0)
 . S PREA="R"
"RTN","PSORXED",151,0)
 . D ACTLOG^PSOCPA
"RTN","PSORXED",152,0)
 ;
"RTN","PSORXED",153,0)
COPAYX K DA,PSODAYS,PSO,PSODA,PSOFLAG,PSORXST,RFD,PSOREF,PSOCOMM,PSOOLD,PSONW
"RTN","PSORXED",154,0)
 Q
"RTN","PSORXED",155,0)
 ;
"RTN","PSORXED",156,0)
CPCK ;update COPAY
"RTN","PSORXED",157,0)
 I 'RFD,'$D(^PSRX(DA,"PFS")) G CPCK1
"RTN","PSORXED",158,0)
 I RFD,'$D(^PSRX(DA,1,RFD,"PFS")) G CPCK1
"RTN","PSORXED",159,0)
 N PSOPFS S PSOPFS=$P($S('RFD:^PSRX(DA,"PFS"),1:^PSRX(DA,1,RFD,"PFS")),"^",1,2)
"RTN","PSORXED",160,0)
 I +$G(PSOPFS)>0&('$P($G(PSOPFS),"^",2)) K PSOPFS Q
"RTN","PSORXED",161,0)
 I +$G(PSOPFS)<1 K PSOPFS
"RTN","PSORXED",162,0)
 E  S PSOPFS="1^"_PSOPFS
"RTN","PSORXED",163,0)
 ;
"RTN","PSORXED",164,0)
CPCK1 N TYPE S PSO=2,PSODA=DA,PSOFLAG=1,PSOPAR7=$G(^PS(59,PSOSITE,"IB")),TYPE=RFD D RXED^PSOCPA K TYPE
"RTN","PSORXED",165,0)
 Q
"RTN","PSORXED",166,0)
 ;
"RTN","PSORXED",167,0)
NEXT D NEXT^PSOUTIL(.PSORXED) K DIE,DR,DA S DIE="^PSRX(",DA=PSORXED("IRXN")
"RTN","PSORXED",168,0)
 S DR="101///"_$P(PSORXED("RX3"),"^")_";102///"_$P(PSORXED("RX3"),"^",2) D ^DIE K DIE,DR,DA,X,Y
"RTN","PSORXED",169,0)
 Q
"RTN","PSORXED",170,0)
 ;
"RTN","PSORXED",171,0)
EOJ K PSOSIG,PSORXED,PSOLIST,END,PSRX0,PSOPINS,PSOOINS
"RTN","PSORXED",172,0)
 D EX^PSORXED1
"RTN","PSORXED",173,0)
 Q
"RTN","PSORXED",174,0)
 ;
"RTN","PSORXED",175,0)
FILL ;
"RTN","PSORXED",176,0)
 K PSOEDITF,PSOEDITR,PSOERF
"RTN","PSORXED",177,0)
 F PSOEZ=0:0 S PSOEZ=$O(^PSRX(DA,1,PSOEZ)) Q:'PSOEZ  S:$D(^PSRX(DA,1,PSOEZ,0)) PSOERF=PSOEZ
"RTN","PSORXED",178,0)
 S PSOEDITF=$S($G(PSOERF):+$G(PSOERF),1:0)
"RTN","PSORXED",179,0)
 I PSOEDITF S PSOEDITR=$S($P($G(^PSRX(DA,1,PSOEDITF,0)),"^",18):1,1:0) G FILLX
"RTN","PSORXED",180,0)
 S PSOEDITR=$S($P($G(^PSRX(DA,2)),"^",13):1,1:0)
"RTN","PSORXED",181,0)
 ;
"RTN","PSORXED",182,0)
FILLX K PSOERF,PSOEZ
"RTN","PSORXED",183,0)
 Q
"RTN","PSORXED",184,0)
 ;
"RTN","PSORXED",185,0)
LBL ;
"RTN","PSORXED",186,0)
 S PSOEDITL=0 N PSOECMES S PSOECMES="",PSOECMES=$$STATUS^PSOBPSUT(PSORXED("IRXN"),PSOEDITF)
"RTN","PSORXED",187,0)
 I PSOTRIC D  Q:'PSOEDITL
"RTN","PSORXED",188,0)
 . I PSOECMES["IN PROGRESS"!(PSOECMES["REJECTED") S PSOEDITL=0 Q
"RTN","PSORXED",189,0)
 . I $$FIND^PSOREJUT(PSORXED("IRXN"),PSOEDITF,,,1) S PSOEDITL=0 Q
"RTN","PSORXED",190,0)
 . I ",12,14,15,"[(","_$P($G(^PSRX(PSORXED("IRXN"),"STA")),"^")_",") S PSOEDITL=0 Q
"RTN","PSORXED",191,0)
 . I COM="" S:'$G(PSOEDITF)&$G(PSOEDITR) PSOEDITL=2 Q
"RTN","PSORXED",192,0)
 Q:PSOEDITL=2&($G(PSOTRIC))&(COM="")
"RTN","PSORXED",193,0)
 I COM["PROV"!(COM["QTY")!(COM["DAYS")!(COM["MAIL")!(COM["UNIT")!(COM["FILL DATE")!(COM["REMARKS") I COM'["STATUS",COM'["CLINIC",COM'["DRUG",COM'["REFILLS",COM'["ISSUE",COM'["SIG",COM'["TRADE" D  Q
"RTN","PSORXED",194,0)
 .I $G(PSOEDITF) S PSOEDITL=1 Q
"RTN","PSORXED",195,0)
 .I '$G(PSOEDITF),'$G(PSOEDITR),PSOTRIC S PSOEDITL=2 Q
"RTN","PSORXED",196,0)
 .I '$G(PSOEDITF),$G(PSOEDITR) S PSOEDITL=2
"RTN","PSORXED",197,0)
 I '$G(PSOEDITF),$G(PSOEDITR) S PSOEDITL=2 Q
"RTN","PSORXED",198,0)
 I '$G(PSOEDITF),'$G(PSOEDITR) S PSOEDITL=0 Q
"RTN","PSORXED",199,0)
 I $G(RXRP(DA)) S PSOEDITL=1 Q
"RTN","PSORXED",200,0)
 I '$G(RXRP(DA)),$G(PSOEDITR) S PSOEDITL=2 Q
"RTN","PSORXED",201,0)
 S PSOEDITL=0
"RTN","PSORXED",202,0)
 Q
"RTN","PSORXED",203,0)
 ;
"RTN","PSORXED",204,0)
LBLCHK ;
"RTN","PSORXED",205,0)
 ;
"RTN","PSORXED",206,0)
 ; If Rx is non-billable perform checks and quit
"RTN","PSORXED",207,0)
 I PSOBPS'="e" D  Q
"RTN","PSORXED",208,0)
 . I '$$RXRLDT^PSOBPSUT(PSORXED("IRXN"),PSOEDITF) D
"RTN","PSORXED",209,0)
 . . I $$PTLBL^PSOREJP2(PSORXED("IRXN"),PSOEDITF) D PRINT^PSOREJP3(PSORXED("IRXN"),PSOEDITF)
"RTN","PSORXED",210,0)
 ;
"RTN","PSORXED",211,0)
 ; Rx is billable
"RTN","PSORXED",212,0)
 ;
"RTN","PSORXED",213,0)
 ; If the PSOEDITL flag is set to 1, the user will be given the QUEUE
"RTN","PSORXED",214,0)
 ; prompt; if set to 0, the QUEUE prompt is suppressed.
"RTN","PSORXED",215,0)
 ; PSORX("NOLABEL") is used to determine if the Label Prompt should
"RTN","PSORXED",216,0)
 ; be displayed to the user by calling routine.
"RTN","PSORXED",217,0)
 ;
"RTN","PSORXED",218,0)
 S PSOEDITL=0
"RTN","PSORXED",219,0)
 S PSORX("NOLABEL")=1
"RTN","PSORXED",220,0)
 ;
"RTN","PSORXED",221,0)
 I $$RXRLDT^PSOBPSUT(PSORXED("IRXN"),PSOEDITF) Q
"RTN","PSORXED",222,0)
 ;
"RTN","PSORXED",223,0)
 I $$PTLBL^PSOREJP2(PSORXED("IRXN"),PSOEDITF) D
"RTN","PSORXED",224,0)
 . S PSORX("NOLABEL")=0
"RTN","PSORXED",225,0)
 . I $D(PSORX("QFLG")) S PSOEDITL=1
"RTN","PSORXED",226,0)
 . E  D PRINT^PSOREJP3(PSORXED("IRXN"),PSOEDITF)
"RTN","PSORXED",227,0)
 Q
"RTN","PSORXED",228,0)
 ;
"RTN","PSORXED",229,0)
ASKL ;
"RTN","PSORXED",230,0)
 W ! K DIR S DIR("?",1)="You have edited a fill that has already been released. Do you want to",DIR("?",2)="include this prescription as one of the prescriptions to be acted upon",DIR("?",3)="at the label prompt."
"RTN","PSORXED",231,0)
 S DIR("?")="Enter 'Yes' to generate a reprint label request."
"RTN","PSORXED",232,0)
 S DIR(0)="Y",DIR("A")="The last fill has been released, do you want a reprint label",DIR("B")="Y" D ^DIR K DIR I Y'=1 S PSOEDITL=0 Q  ; User did not reply as "YES" - don't prompt for label device
"RTN","PSORXED",233,0)
 S PSOEDITL=1
"RTN","PSORXED",234,0)
 Q
"RTN","PSORXED",235,0)
 ;
"RTN","PSORXED",236,0)
SETRP I $P($G(^PSRX(PSORXED("IRXN"),"STA")),"^")'=5,$G(PSOEDITL)=0 S RXRP(PSORXED("IRXN"))="1^^^1",VALMSG="Label will reprint due to Edit"
"RTN","PSORXED",237,0)
 Q
"VER")
8.0^22.2
**INSTALL NAME**
IB*2.0*617
"BLD",10865,0)
IB*2.0*617^INTEGRATED BILLING^0^3181129^y
"BLD",10865,1,0)
^^1^1^3180305^
"BLD",10865,1,1,0)
MCCF EDI TAS EPHARMACY BUILDS 5 & 6
"BLD",10865,4,0)
^9.64PA^355.3^1
"BLD",10865,4,355.3,0)
355.3
"BLD",10865,4,355.3,2,0)
^9.641^355.3^1
"BLD",10865,4,355.3,2,355.3,0)
GROUP INSURANCE PLAN  (File-top level)
"BLD",10865,4,355.3,2,355.3,1,0)
^9.6411^1.08^2
"BLD",10865,4,355.3,2,355.3,1,1.07,0)
DATE LAST MATCHED
"BLD",10865,4,355.3,2,355.3,1,1.08,0)
LAST MATCHED BY
"BLD",10865,4,355.3,222)
y^y^p^^^^n^^n
"BLD",10865,4,355.3,224)

"BLD",10865,4,"APDD",355.3,355.3)

"BLD",10865,4,"APDD",355.3,355.3,1.07)

"BLD",10865,4,"APDD",355.3,355.3,1.08)

"BLD",10865,4,"B",355.3,355.3)

"BLD",10865,6.3)
43
"BLD",10865,"ABPKG")
n
"BLD",10865,"INI")

"BLD",10865,"INIT")

"BLD",10865,"KRN",0)
^9.67PA^779.2^20
"BLD",10865,"KRN",.4,0)
.4
"BLD",10865,"KRN",.401,0)
.401
"BLD",10865,"KRN",.402,0)
.402
"BLD",10865,"KRN",.403,0)
.403
"BLD",10865,"KRN",.5,0)
.5
"BLD",10865,"KRN",.84,0)
.84
"BLD",10865,"KRN",3.6,0)
3.6
"BLD",10865,"KRN",3.8,0)
3.8
"BLD",10865,"KRN",9.2,0)
9.2
"BLD",10865,"KRN",9.8,0)
9.8
"BLD",10865,"KRN",9.8,"NM",0)
^9.68A^7^7
"BLD",10865,"KRN",9.8,"NM",1,0)
IBNCPEV3^^0^B38344902
"BLD",10865,"KRN",9.8,"NM",2,0)
IBJTRX^^0^B87956137
"BLD",10865,"KRN",9.8,"NM",3,0)
IBCNRP^^0^B36716559
"BLD",10865,"KRN",9.8,"NM",4,0)
IBCNRPM1^^0^B8669484
"BLD",10865,"KRN",9.8,"NM",5,0)
IBCNRPM2^^0^B32798094
"BLD",10865,"KRN",9.8,"NM",6,0)
IBJTCA1^^0^B63894628
"BLD",10865,"KRN",9.8,"NM",7,0)
IBNCPDP1^^0^B180640575
"BLD",10865,"KRN",9.8,"NM","B","IBCNRP",3)

"BLD",10865,"KRN",9.8,"NM","B","IBCNRPM1",4)

"BLD",10865,"KRN",9.8,"NM","B","IBCNRPM2",5)

"BLD",10865,"KRN",9.8,"NM","B","IBJTCA1",6)

"BLD",10865,"KRN",9.8,"NM","B","IBJTRX",2)

"BLD",10865,"KRN",9.8,"NM","B","IBNCPDP1",7)

"BLD",10865,"KRN",9.8,"NM","B","IBNCPEV3",1)

"BLD",10865,"KRN",19,0)
19
"BLD",10865,"KRN",19,"NM",0)
^9.68A^^0
"BLD",10865,"KRN",19.1,0)
19.1
"BLD",10865,"KRN",101,0)
101
"BLD",10865,"KRN",101,"NM",0)
^9.68A^^0
"BLD",10865,"KRN",409.61,0)
409.61
"BLD",10865,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",10865,"KRN",771,0)
771
"BLD",10865,"KRN",779.2,0)
779.2
"BLD",10865,"KRN",870,0)
870
"BLD",10865,"KRN",8989.51,0)
8989.51
"BLD",10865,"KRN",8989.52,0)
8989.52
"BLD",10865,"KRN",8994,0)
8994
"BLD",10865,"KRN","B",.4,.4)

"BLD",10865,"KRN","B",.401,.401)

"BLD",10865,"KRN","B",.402,.402)

"BLD",10865,"KRN","B",.403,.403)

"BLD",10865,"KRN","B",.5,.5)

"BLD",10865,"KRN","B",.84,.84)

"BLD",10865,"KRN","B",3.6,3.6)

"BLD",10865,"KRN","B",3.8,3.8)

"BLD",10865,"KRN","B",9.2,9.2)

"BLD",10865,"KRN","B",9.8,9.8)

"BLD",10865,"KRN","B",19,19)

"BLD",10865,"KRN","B",19.1,19.1)

"BLD",10865,"KRN","B",101,101)

"BLD",10865,"KRN","B",409.61,409.61)

"BLD",10865,"KRN","B",771,771)

"BLD",10865,"KRN","B",779.2,779.2)

"BLD",10865,"KRN","B",870,870)

"BLD",10865,"KRN","B",8989.51,8989.51)

"BLD",10865,"KRN","B",8989.52,8989.52)

"BLD",10865,"KRN","B",8994,8994)

"BLD",10865,"QUES",0)
^9.62^^
"BLD",10865,"REQB",0)
^9.611^3^2
"BLD",10865,"REQB",2,0)
IB*2.0*550^2
"BLD",10865,"REQB",3,0)
IB*2.0*592^2
"BLD",10865,"REQB","B","IB*2.0*550",2)

"BLD",10865,"REQB","B","IB*2.0*592",3)

"FIA",355.3)
GROUP INSURANCE PLAN
"FIA",355.3,0)
^IBA(355.3,
"FIA",355.3,0,0)
355.3IP
"FIA",355.3,0,1)
y^y^p^^^^n^^n
"FIA",355.3,0,10)

"FIA",355.3,0,11)

"FIA",355.3,0,"RLRO")

"FIA",355.3,0,"VR")
2.0^IB
"FIA",355.3,355.3)
1
"FIA",355.3,355.3,1.07)

"FIA",355.3,355.3,1.08)

"MBREQ")
1
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,20,0)
^9.402P^1^1
"PKG",230,20,1,0)
2^^IBAXDR
"PKG",230,20,1,1)

"PKG",230,20,"B",2,1)

"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
617^3181129^520824633
"PKG",230,22,1,"PAH",1,1,0)
^^1^1^3181129
"PKG",230,22,1,"PAH",1,1,1,0)
MCCF EDI TAS EPHARMACY BUILDS 5 & 6
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","IBCNRP")
0^3^B36716559
"RTN","IBCNRP",1,0)
IBCNRP ;DAOU/ALA - Plan Match ListMan ;13-NOV-2003
"RTN","IBCNRP",2,0)
 ;;2.0;INTEGRATED BILLING;**251,516,550,617**;21-MAR-94;Build 43
"RTN","IBCNRP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRP",4,0)
 ;; ;
"RTN","IBCNRP",5,0)
EN ; -- main entry point for IBCNR PLAN MATCH
"RTN","IBCNRP",6,0)
 D EN^VALM("IBCNR PLAN MATCH")
"RTN","IBCNRP",7,0)
 Q
"RTN","IBCNRP",8,0)
 ;
"RTN","IBCNRP",9,0)
HDR ; -- header code
"RTN","IBCNRP",10,0)
 NEW IBCNS0,IBCNS11,IBCNS13,IBLEAD,X,X1,X2
"RTN","IBCNRP",11,0)
 S IBCNS0=$G(^DIC(36,+IBCNSP,0))
"RTN","IBCNRP",12,0)
 S IBCNS11=$G(^DIC(36,+IBCNSP,.11))
"RTN","IBCNRP",13,0)
 S IBCNS13=$G(^DIC(36,+IBCNSP,.13))
"RTN","IBCNRP",14,0)
 S X2=$S(IBW:"",1:"Active ")
"RTN","IBCNRP",15,0)
 S IBLEAD=$S(IBIND:"All "_X2,1:X2_"Group ")_"Plans for: "
"RTN","IBCNRP",16,0)
 S X="Phone: "_$S($P(IBCNS13,"^")]"":$P(IBCNS13,"^"),1:"<not filed>")
"RTN","IBCNRP",17,0)
 S VALMHDR(1)=$$SETSTR^VALM1(X,IBLEAD_$P(IBCNS0,"^"),81-$L(X),40)
"RTN","IBCNRP",18,0)
 S X1="Precerts: "_$S($P(IBCNS13,"^",3)]"":$P(IBCNS13,"^",3),1:"<not filed>")
"RTN","IBCNRP",19,0)
 S X=$TR($J("",$L(IBLEAD)),""," ")_$S($P(IBCNS11,"^")]"":$P(IBCNS11,"^"),1:"<no street address>")
"RTN","IBCNRP",20,0)
 S VALMHDR(2)=$$SETSTR^VALM1(X1,X,81-$L(X1),40)
"RTN","IBCNRP",21,0)
 S X=$S($P(IBCNS11,"^",4)]"":$P(IBCNS11,"^",4),1:"<no city>")_", "
"RTN","IBCNRP",22,0)
 S X=X_$S($P(IBCNS11,"^",5):$P($G(^DIC(5,$P(IBCNS11,"^",5),0)),"^",2),1:"<no state>")_"  "_$E($P(IBCNS11,"^",6),1,5)_$S($E($P(IBCNS11,"^",6),6,9)]"":"-"_$E($P(IBCNS11,"^",6),6,9),1:"")
"RTN","IBCNRP",23,0)
 S VALMHDR(3)=$$SETSTR^VALM1(X,"",$L(IBLEAD)+1,80)
"RTN","IBCNRP",24,0)
 S X="#" I $G(IBIND) S X="#  + => Indiv. Plan"
"RTN","IBCNRP",25,0)
 I $G(IBW) S X=$E(X_$J("",23),1,23)_"* => Inactive Plan"
"RTN","IBCNRP",26,0)
 S VALMHDR(4)=$$SETSTR^VALM1(" ",X,64,17)
"RTN","IBCNRP",27,0)
 Q
"RTN","IBCNRP",28,0)
 ;
"RTN","IBCNRP",29,0)
INIT ; -- init variables and list array
"RTN","IBCNRP",30,0)
 NEW IBCNRPP,IBCOV,IBCPD6,IBCPOLD,IBCRVD,IBMDTE,IBMUSR,LIM,X
"RTN","IBCNRP",31,0)
 K ^TMP("IBCNR",$J)
"RTN","IBCNRP",32,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCNRP",33,0)
 S VALMCNT1=0
"RTN","IBCNRP",34,0)
 ; MRD;IB*2.0*516 - Rather than pull the zero node here, use $$GET1^DIQ
"RTN","IBCNRP",35,0)
 ; to pull specific pieces down below.
"RTN","IBCNRP",36,0)
 ;S IBGP0=^IBA(355.3,+IBCNGP,0)
"RTN","IBCNRP",37,0)
 ;I $G(IBGP0) D
"RTN","IBCNRP",38,0)
 I $G(^IBA(355.3,+IBCNGP,0)) D
"RTN","IBCNRP",39,0)
 . ;S IBCPD6=$G(IBGP0,U,6)) ;chk pre-cert
"RTN","IBCNRP",40,0)
 . ;I 'IBIND,'$P(IBGP0,"^",2) Q  ;    exclude individual plans
"RTN","IBCNRP",41,0)
 . ;I 'IBW,$P(IBGP0,"^",11) Q  ;      plan is inactive
"RTN","IBCNRP",42,0)
 . ;
"RTN","IBCNRP",43,0)
 . S VALMCNT=VALMCNT+1
"RTN","IBCNRP",44,0)
 . S VALMCNT1=VALMCNT1+1
"RTN","IBCNRP",45,0)
 . S X=$$SETFLD^VALM1(VALMCNT1,"","NUMBER")
"RTN","IBCNRP",46,0)
 . ;
"RTN","IBCNRP",47,0)
 . ;I '$P(IBGP0,"^",2) S $E(X,4)="+"
"RTN","IBCNRP",48,0)
 . ;S X=$$SETFLD^VALM1($P(IBGP0,"^",3),X,"GNAME")
"RTN","IBCNRP",49,0)
 . I '$$GET1^DIQ(355.3,+IBCNGP_",",.02,"I") S $E(X,4)="+"
"RTN","IBCNRP",50,0)
 . S X=$$SETFLD^VALM1($$GET1^DIQ(355.3,+IBCNGP_",",2.01),X,"GNAME")
"RTN","IBCNRP",51,0)
 . ;
"RTN","IBCNRP",52,0)
 . ;I $P(IBGP0,"^",11) S $E(X,24)="*"
"RTN","IBCNRP",53,0)
 . ;S X=$$SETFLD^VALM1($P(IBGP0,"^",4),X,"GNUM")
"RTN","IBCNRP",54,0)
 . I $$GET1^DIQ(355.3,+IBCNGP_",",.11,"I") S $E(X,24)="*"
"RTN","IBCNRP",55,0)
 . S X=$$SETFLD^VALM1($$GET1^DIQ(355.3,+IBCNGP_",",2.02),X,"GNUM")
"RTN","IBCNRP",56,0)
 . ;
"RTN","IBCNRP",57,0)
 . ;S X=$$SETFLD^VALM1($$EXPAND^IBTRE(355.3,.09,$P(IBGP0,"^",9)),X,"TYPE")
"RTN","IBCNRP",58,0)
 . S X=$$SETFLD^VALM1($$GET1^DIQ(355.3,+IBCNGP_",",.09,"E"),X,"TYPE")
"RTN","IBCNRP",59,0)
 . ;
"RTN","IBCNRP",60,0)
 . S IBCNRPP=$$GET1^DIQ(355.3,IBCNGP_",",6.01,"I")
"RTN","IBCNRP",61,0)
 . I IBCNRPP'="" S IBCNRPP=$$GET1^DIQ(366.03,IBCNRPP_",",.01,"E")
"RTN","IBCNRP",62,0)
 . S X=$$SETFLD^VALM1(IBCNRPP,X,"PHARM")
"RTN","IBCNRP",63,0)
 . ;
"RTN","IBCNRP",64,0)
 . S IBCOV=$O(^IBE(355.31,"B","PHARMACY",""))
"RTN","IBCNRP",65,0)
 . S LIM="",IBCVRD=0
"RTN","IBCNRP",66,0)
 . F  S LIM=$O(^IBA(355.32,"B",IBCNGP,LIM)) Q:LIM=""  D
"RTN","IBCNRP",67,0)
 .. I $P(^IBA(355.32,LIM,0),U,2)=IBCOV S IBCVRD=$P(^IBA(355.32,LIM,0),U,4)
"RTN","IBCNRP",68,0)
 . S X=$$SETFLD^VALM1($S(IBCVRD=0:"NO",1:"YES"),X,"COV")
"RTN","IBCNRP",69,0)
 . ;
"RTN","IBCNRP",70,0)
 . S ^TMP("IBCNR",$J,VALMCNT,0)=X
"RTN","IBCNRP",71,0)
 . S ^TMP("IBCNR",$J,"IDX",VALMCNT,VALMCNT1)=IBCNGP
"RTN","IBCNRP",72,0)
 . S ^TMP("IBCNR",$J,"IDX1",VALMCNT1)=IBCNGP
"RTN","IBCNRP",73,0)
 . ;
"RTN","IBCNRP",74,0)
 . I IBCNRPP'="" D    ; If VA PLAN ID exists
"RTN","IBCNRP",75,0)
 . . S IBMDTE=$$GET1^DIQ(355.3,IBCNGP_",",1.07,"E")
"RTN","IBCNRP",76,0)
 . . S IBMUSR=$$GET1^DIQ(355.3,IBCNGP_",",1.08,"E")
"RTN","IBCNRP",77,0)
 . . I IBMDTE'="" D   ; If DATE LAST MATCHED exists
"RTN","IBCNRP",78,0)
 . . . S X="          Matched by: "_IBMUSR_"  "_IBMDTE
"RTN","IBCNRP",79,0)
 . . . S VALMCNT=VALMCNT+1
"RTN","IBCNRP",80,0)
 . . . S ^TMP("IBCNR",$J,VALMCNT,0)=X
"RTN","IBCNRP",81,0)
 . . . S ^TMP("IBCNR",$J,"IDX",VALMCNT,VALMCNT1)=IBCNGP
"RTN","IBCNRP",82,0)
 . . . S ^TMP("IBCNR",$J,"IDX1",VALMCNT1)=IBCNGP
"RTN","IBCNRP",83,0)
 . I IBCNRPP="" D    ; If VA PLAN ID does not exist
"RTN","IBCNRP",84,0)
 . . S IBMDTE=$$GET1^DIQ(355.3,IBCNGP_",",1.07,"E")
"RTN","IBCNRP",85,0)
 . . S IBMUSR=$$GET1^DIQ(355.3,IBCNGP_",",1.08,"E")
"RTN","IBCNRP",86,0)
 . . I IBMDTE'="" D   ; Match Date w/no Plan ID means Deleted
"RTN","IBCNRP",87,0)
 . . . S X="          Deleted by: "_IBMUSR_"  "_IBMDTE
"RTN","IBCNRP",88,0)
 . . . S VALMCNT=VALMCNT+1
"RTN","IBCNRP",89,0)
 . . . S ^TMP("IBCNR",$J,VALMCNT,0)=X
"RTN","IBCNRP",90,0)
 . . . S ^TMP("IBCNR",$J,"IDX",VALMCNT,VALMCNT1)=IBCNGP
"RTN","IBCNRP",91,0)
 . . . S ^TMP("IBCNR",$J,"IDX1",VALMCNT1)=IBCNGP
"RTN","IBCNRP",92,0)
 . ;
"RTN","IBCNRP",93,0)
 . I '$D(^TMP("IBCNR",$J)) S VALMCNT=2,^TMP("IBCNR",$J,1,0)=" ",^TMP("IBCNR",$J,2,0)="   No plans were identified for this company."
"RTN","IBCNRP",94,0)
 Q
"RTN","IBCNRP",95,0)
 ;
"RTN","IBCNRP",96,0)
HELP ; -- help code
"RTN","IBCNRP",97,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNRP",98,0)
 Q
"RTN","IBCNRP",99,0)
 ;
"RTN","IBCNRP",100,0)
EXIT ; -- exit code
"RTN","IBCNRP",101,0)
 K ^TMP("IBCNR",$J),VALMBCK,VALMY
"RTN","IBCNRP",102,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","IBCNRP",103,0)
 Q
"RTN","IBCNRP",104,0)
 ;
"RTN","IBCNRP",105,0)
EXPND ; -- expand code
"RTN","IBCNRP",106,0)
 Q
"RTN","IBCNRP",107,0)
 ;
"RTN","IBCNRP",108,0)
SEL ; -- select plan
"RTN","IBCNRP",109,0)
 D S1
"RTN","IBCNRP",110,0)
 I 'IBX Q  ; no group selected
"RTN","IBCNRP",111,0)
 ;
"RTN","IBCNRP",112,0)
 NEW DA,DIC,DIE,DR,D,IBPLN,IBPLNOLD,IBUSROLD
"RTN","IBCNRP",113,0)
 S DIC="^IBCNR(366.03,",DIC(0)="AEMNZ" D ^DIC
"RTN","IBCNRP",114,0)
 I +Y<1 S D="F" D IX^DIC
"RTN","IBCNRP",115,0)
 I +Y<1 G SPQ
"RTN","IBCNRP",116,0)
 S IBPLN=+Y K Y,X
"RTN","IBCNRP",117,0)
 D PLCK  ; check plan status
"RTN","IBCNRP",118,0)
 S IBPLNOLD=$$GET1^DIQ(355.3,IBCNGP,6.01,"I")
"RTN","IBCNRP",119,0)
 S IBUSROLD=$$GET1^DIQ(355.3,IBCNGP,1.08)
"RTN","IBCNRP",120,0)
 S DA=IBSEL,DIC="^IBA(355.3,",DIE=DIC,DR="6.01////^S X="_IBPLN
"RTN","IBCNRP",121,0)
 I IBPLNOLD'=IBPLN S DR=DR_";1.07///NOW;1.08////"_DUZ
"RTN","IBCNRP",122,0)
 I IBPLNOLD=IBPLN,IBUSROLD="" S DR=DR_";1.07///NOW;1.08////"_DUZ
"RTN","IBCNRP",123,0)
 D ^DIE
"RTN","IBCNRP",124,0)
 D INIT
"RTN","IBCNRP",125,0)
 ;
"RTN","IBCNRP",126,0)
 S IBX=0 F  S IBX=$O(VALMY(IBX)) Q:'IBX  S ^TMP($J,"IBSEL",+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX)))=""
"RTN","IBCNRP",127,0)
 ;
"RTN","IBCNRP",128,0)
 D SPQ
"RTN","IBCNRP",129,0)
 Q
"RTN","IBCNRP",130,0)
 ;
"RTN","IBCNRP",131,0)
PLCK ; -- check plan status
"RTN","IBCNRP",132,0)
 NEW ARRAY
"RTN","IBCNRP",133,0)
 D STCHK^IBCNRU1(IBPLN,.ARRAY)
"RTN","IBCNRP",134,0)
 I $G(ARRAY(1))'="A" D
"RTN","IBCNRP",135,0)
 . W !!,"WARNING....PLAN NOT ACTIVE!"
"RTN","IBCNRP",136,0)
 ;
"RTN","IBCNRP",137,0)
 Q
"RTN","IBCNRP",138,0)
 ;
"RTN","IBCNRP",139,0)
DEL ; -- remove a plan from a group
"RTN","IBCNRP",140,0)
 D S1
"RTN","IBCNRP",141,0)
 ;
"RTN","IBCNRP",142,0)
 NEW DA,DIC,DIE,DR,IBPLNOLD
"RTN","IBCNRP",143,0)
 S IBPLNOLD=$$GET1^DIQ(355.3,IBCNGP,6.01,"I")
"RTN","IBCNRP",144,0)
 S DA=IBSEL,DIC="^IBA(355.3,",DIE=DIC,DR="6.01///@"
"RTN","IBCNRP",145,0)
 I IBPLNOLD'="" S DR=DR_";1.07///NOW;1.08////"_DUZ
"RTN","IBCNRP",146,0)
 D ^DIE
"RTN","IBCNRP",147,0)
 D INIT
"RTN","IBCNRP",148,0)
 ;
"RTN","IBCNRP",149,0)
 S IBX=0 F  S IBX=$O(VALMY(IBX)) Q:'IBX  S ^TMP($J,"IBSEL",+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX)))=""
"RTN","IBCNRP",150,0)
 ;
"RTN","IBCNRP",151,0)
 D SPQ
"RTN","IBCNRP",152,0)
 Q
"RTN","IBCNRP",153,0)
 ;
"RTN","IBCNRP",154,0)
S1 ;
"RTN","IBCNRP",155,0)
 NEW DIR,DIRUT,DUOUT,DTOUT,DIROUT,IBOK,IBQUIT,Y
"RTN","IBCNRP",156,0)
 D EN^VALM2($G(XQORNOD(0)),"S"),FULL^VALM1
"RTN","IBCNRP",157,0)
 S IBX=$O(VALMY(0)),VALMBCK="R"
"RTN","IBCNRP",158,0)
 ;
"RTN","IBCNRP",159,0)
 I 'IBX W !!,"No group selected!" G SPQ
"RTN","IBCNRP",160,0)
 I 'IBMULT D  G SPQ
"RTN","IBCNRP",161,0)
 . I $O(VALMY(IBX)) W !!,*7,"You may only select a single plan!" Q
"RTN","IBCNRP",162,0)
 . I $G(IBALR),+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX))=IBALR W !!,*7,"This plan is not allowed for selection!" Q
"RTN","IBCNRP",163,0)
 . D OK^IBCNSM3
"RTN","IBCNRP",164,0)
 . I IBQUIT S VALMBCK="Q" Q
"RTN","IBCNRP",165,0)
 . ;I IBOK S IBSEL=+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX)),VALMBCK="Q"
"RTN","IBCNRP",166,0)
 . I IBOK S IBSEL=+$G(^TMP("IBCNR",$J,"IDX1",IBX)),VALMBCK="Q"
"RTN","IBCNRP",167,0)
 ;
"RTN","IBCNRP",168,0)
 ;S IBSEL=+$G(^TMP("IBCNR",$J,"IDX",IBX,IBX))
"RTN","IBCNRP",169,0)
 S IBSEL=+$G(^TMP("IBCNR",$J,"IDX1",IBX))
"RTN","IBCNRP",170,0)
 Q
"RTN","IBCNRP",171,0)
 ;
"RTN","IBCNRP",172,0)
SPQ ;
"RTN","IBCNRP",173,0)
 I '$O(IBSEL(0)),VALMBCK="R" D PAUSE^VALM1
"RTN","IBCNRP",174,0)
 Q
"RTN","IBCNRPM1")
0^4^B8669484
"RTN","IBCNRPM1",1,0)
IBCNRPM1 ;DAOU/CMW - Match Multiple Group Plans to a Pharmacy Plan ;10-MAR-2004
"RTN","IBCNRPM1",2,0)
 ;;2.0;INTEGRATED BILLING;**251,516,617**;21-MAR-94;Build 43
"RTN","IBCNRPM1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRPM1",4,0)
 ;
"RTN","IBCNRPM1",5,0)
 ;**Program Description**
"RTN","IBCNRPM1",6,0)
 ;  This program selects a plan and displays the 
"RTN","IBCNRPM1",7,0)
 ;  Test Payer Sheets associated to the Plan.
"RTN","IBCNRPM1",8,0)
 ;
"RTN","IBCNRPM1",9,0)
EN ;  Select a plan
"RTN","IBCNRPM1",10,0)
 NEW DA,DIC,DIE,DR,D,Y
"RTN","IBCNRPM1",11,0)
 S DIC="^IBCNR(366.03,",DIC(0)="ABEMZ",DIC("A")="Select PHARMACY PLAN: "
"RTN","IBCNRPM1",12,0)
 D ^DIC I X="^" G EXIT
"RTN","IBCNRPM1",13,0)
 K DIC("A")
"RTN","IBCNRPM1",14,0)
 I +Y<1 S D="F",DIC="^IBCNR(366.03,",DIC(0)="AEMNZ" D IX^DIC
"RTN","IBCNRPM1",15,0)
 I +Y<1 G EXIT
"RTN","IBCNRPM1",16,0)
 S IBCNRP=+Y
"RTN","IBCNRPM1",17,0)
 ;
"RTN","IBCNRPM1",18,0)
INS ;  Select an insurance company
"RTN","IBCNRPM1",19,0)
 NEW DA,DIC,DIE,DR,D,Y,IBIND,IBMULT,IBW
"RTN","IBCNRPM1",20,0)
 S (IBIND,IBMULT,IBW)=1
"RTN","IBCNRPM1",21,0)
 S DIR(0)="350.9,4.06"
"RTN","IBCNRPM1",22,0)
 S DIR("A")="Select INSURANCE COMPANY",DIR("??")="^D ADH^IBCNSM3"
"RTN","IBCNRPM1",23,0)
 S DIR("?")="Select the Insurance Company for the plan you are entering"
"RTN","IBCNRPM1",24,0)
 D ^DIR K DIR S IBCNRI=+Y I Y<1 G EN
"RTN","IBCNRPM1",25,0)
 I $P($G(^DIC(36,+IBCNRI,0)),"^",2)="N" W !,"This company does not reimburse.  " G INS
"RTN","IBCNRPM1",26,0)
 I $P($G(^DIC(36,+IBCNRI,0)),"^",5) W !,*7,"Warning: Inactive Company" G INS
"RTN","IBCNRPM1",27,0)
 ;
"RTN","IBCNRPM1",28,0)
 D GIPF
"RTN","IBCNRPM1",29,0)
 I '$D(^TMP("IBCNR",$J,"GP")) D  G INS
"RTN","IBCNRPM1",30,0)
 . W !,*7,"** No active Group Plans with Pharmacy coverage found for this Insurance Co."
"RTN","IBCNRPM1",31,0)
 ;
"RTN","IBCNRPM1",32,0)
 D EN^IBCNRPM2(IBCNRP,IBCNRI,.IBCNRGP)
"RTN","IBCNRPM1",33,0)
 ;
"RTN","IBCNRPM1",34,0)
 G INS
"RTN","IBCNRPM1",35,0)
 ;
"RTN","IBCNRPM1",36,0)
GIPF ;  screen for valid GIPF
"RTN","IBCNRPM1",37,0)
 ;
"RTN","IBCNRPM1",38,0)
 N GST1,GP0,GP6,IBCOV,LIM,IBCVRD
"RTN","IBCNRPM1",39,0)
 N GPIEN,GPMDT,GPMU,GPNAM,GPNUM
"RTN","IBCNRPM1",40,0)
 S GST1=1,GPIEN=""
"RTN","IBCNRPM1",41,0)
 K ^TMP("IBCNR",$J,"GP")
"RTN","IBCNRPM1",42,0)
 F  S GPIEN=$O(^IBA(355.3,"B",IBCNRI,GPIEN)) Q:GPIEN=""  D
"RTN","IBCNRPM1",43,0)
 . ;chk for active group
"RTN","IBCNRPM1",44,0)
 . S GP0=$G(^IBA(355.3,GPIEN,0)),GP6=$G(^IBA(355.3,GPIEN,6))
"RTN","IBCNRPM1",45,0)
 . I $P(GP0,U,11)=1 Q
"RTN","IBCNRPM1",46,0)
 . ;chk for pharm plan coverage
"RTN","IBCNRPM1",47,0)
 . S IBCOV=$O(^IBE(355.31,"B","PHARMACY",""))
"RTN","IBCNRPM1",48,0)
 . S LIM="",IBCVRD=0
"RTN","IBCNRPM1",49,0)
 . F  S LIM=$O(^IBA(355.32,"B",GPIEN,LIM)) Q:LIM=""  D
"RTN","IBCNRPM1",50,0)
 .. I $P(^IBA(355.32,LIM,0),U,2)=IBCOV D
"RTN","IBCNRPM1",51,0)
 ... ;chk covered status
"RTN","IBCNRPM1",52,0)
 ... S IBCVRD=$P(^IBA(355.32,LIM,0),U,4)
"RTN","IBCNRPM1",53,0)
 ... I IBCVRD=0 Q
"RTN","IBCNRPM1",54,0)
 ... ; IB*2*516/DF Get new HIPAA fields
"RTN","IBCNRPM1",55,0)
 ... ;S GPNAM=$P($G(GP0),U,3),GPNUM=$P($G(GP0),U,4)
"RTN","IBCNRPM1",56,0)
 ... S GPNAM=$$GET1^DIQ(355.3,GPIEN,2.01),GPNUM=$$GET1^DIQ(355.3,GPIEN,2.02)
"RTN","IBCNRPM1",57,0)
 ... I $G(GPNAM)="" S GPNAM="<blank>"
"RTN","IBCNRPM1",58,0)
 ... I $G(GPNUM)="" S GPNUM="<blank>"
"RTN","IBCNRPM1",59,0)
 ... S GPMDT=$$GET1^DIQ(355.3,GPIEN,1.07,"E")
"RTN","IBCNRPM1",60,0)
 ... S GPMU=$$GET1^DIQ(355.3,GPIEN,1.08,"E")
"RTN","IBCNRPM1",61,0)
 ... ;set array = pharm plan and plan type and match date and match user
"RTN","IBCNRPM1",62,0)
 ... S ^TMP("IBCNR",$J,"GP",GPNAM,GPNUM,GPIEN)=$P($G(GP6),U)_"^"_$P($G(GP0),U,9)_"^"_GPMDT_"^"_GPMU
"RTN","IBCNRPM1",63,0)
 Q
"RTN","IBCNRPM1",64,0)
 ;
"RTN","IBCNRPM1",65,0)
EXIT K IBCNRP,IBCNRI,IBCNRGP
"RTN","IBCNRPM1",66,0)
 K ^TMP("IBCNR",$J)
"RTN","IBCNRPM1",67,0)
 ;
"RTN","IBCNRPM1",68,0)
 Q
"RTN","IBCNRPM2")
0^5^B32798094
"RTN","IBCNRPM2",1,0)
IBCNRPM2 ;BHAM ISC/CMW - Match Multiple Group Plans to a Pharmacy Plan ;10-MAR-2004
"RTN","IBCNRPM2",2,0)
 ;;2.0;INTEGRATED BILLING;**251,276,550,617**;21-MAR-94;Build 43
"RTN","IBCNRPM2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNRPM2",4,0)
 ;; ;
"RTN","IBCNRPM2",5,0)
EN(IBCNRP,IBCNRI,IBCNRGP) ; -- main entry point for IBCNR PAYERSHEET MATCH (LIST TEMPLATE)
"RTN","IBCNRPM2",6,0)
 D EN^VALM("IBCNR GROUP PLAN MATCH")
"RTN","IBCNRPM2",7,0)
 Q
"RTN","IBCNRPM2",8,0)
 ;
"RTN","IBCNRPM2",9,0)
HDR ; -- header code
"RTN","IBCNRPM2",10,0)
 NEW IBCNR0,IBCNRID,IBCNRNM,IBCNR10,IBCNRPBM,IBCNRBIN,IBCNRPCN,IBLEAD
"RTN","IBCNRPM2",11,0)
 NEW IBCNR3,IBCNRIN,NST,LST,X
"RTN","IBCNRPM2",12,0)
 ; get pharmacy plan data
"RTN","IBCNRPM2",13,0)
 S IBCNR0=$G(^IBCNR(366.03,+IBCNRP,0))
"RTN","IBCNRPM2",14,0)
 S IBCNRID=$P(IBCNR0,"^",1) ;id
"RTN","IBCNRPM2",15,0)
 S IBCNRNM=$P(IBCNR0,"^",2) ;name
"RTN","IBCNRPM2",16,0)
 S IBCNR10=$G(^IBCNR(366.03,+IBCNRP,10))
"RTN","IBCNRPM2",17,0)
 S IBCNRPBM=$P(IBCNR10,"^",1) ;pbm
"RTN","IBCNRPM2",18,0)
 S IBCNRBIN=$P(IBCNR10,"^",2) ;bin
"RTN","IBCNRPM2",19,0)
 S IBCNRPCN=$P(IBCNR10,"^",3) ;pcn
"RTN","IBCNRPM2",20,0)
 S IBCNR3=$G(^IBCNR(366.03,+IBCNRP,3,1,0)) ; appl
"RTN","IBCNRPM2",21,0)
 S NST=$S($P(IBCNR3,"^",2)=0:"Inactive ",1:"Active ")
"RTN","IBCNRPM2",22,0)
 S LST=$S($P(IBCNR3,"^",3)=0:"Inactive ",1:"Active ")
"RTN","IBCNRPM2",23,0)
 ; get insurance company name
"RTN","IBCNRPM2",24,0)
 S IBCNRIN=$P($G(^DIC(36,IBCNRI,0)),U)
"RTN","IBCNRPM2",25,0)
 ; row 1
"RTN","IBCNRPM2",26,0)
 S IBLEAD="FOR PHARMACY PLAN: "
"RTN","IBCNRPM2",27,0)
 S X=IBCNRNM_" - "_IBCNRID
"RTN","IBCNRPM2",28,0)
 S VALMHDR(1)=$$SETSTR^VALM1(X,IBLEAD,$L(IBLEAD)+1,80)
"RTN","IBCNRPM2",29,0)
 ; row 2
"RTN","IBCNRPM2",30,0)
 S IBLEAD="BIN: "_IBCNRBIN
"RTN","IBCNRPM2",31,0)
 S X="     PCN: "_IBCNRPCN_"     STATUS:  National "_NST_"/Local "_LST
"RTN","IBCNRPM2",32,0)
 S VALMHDR(2)=$$SETSTR^VALM1(X,IBLEAD,$L(IBLEAD)+1,80)
"RTN","IBCNRPM2",33,0)
 ; row 3
"RTN","IBCNRPM2",34,0)
 ;S X="STATUS:  National "_NST_"/"
"RTN","IBCNRPM2",35,0)
 ;S VALMHDR(3)=$$SETSTR^VALM1("Local "_LST,X,$L(X)+1,80)
"RTN","IBCNRPM2",36,0)
 ; row 4
"RTN","IBCNRPM2",37,0)
 S X="FOR INSURANCE COMPANY: "
"RTN","IBCNRPM2",38,0)
 S VALMHDR(4)=$$SETSTR^VALM1(IBCNRIN,X,$L(X)+1,80)
"RTN","IBCNRPM2",39,0)
 ;
"RTN","IBCNRPM2",40,0)
 Q
"RTN","IBCNRPM2",41,0)
 ;
"RTN","IBCNRPM2",42,0)
INIT ; -- init variables and list array
"RTN","IBCNRPM2",43,0)
 ;
"RTN","IBCNRPM2",44,0)
 I '$D(^TMP("IBCNR",$J,"GP")) D  Q
"RTN","IBCNRPM2",45,0)
 . S VALMCNT=0
"RTN","IBCNRPM2",46,0)
 . W !,*7,"Warning: No Active Group Plans with Pharmacy Coverage Found."
"RTN","IBCNRPM2",47,0)
 ;
"RTN","IBCNRPM2",48,0)
 N GPIEN,IBGP0,IBCPOLD,X,IBCPD6,IBCNRPP,IBCOV,IBCRVD,LIM
"RTN","IBCNRPM2",49,0)
 N IBGNA,IBGNM,IBCNA,IBCNM,IBDAT
"RTN","IBCNRPM2",50,0)
 K ^TMP("IBCNR",$J,"PM")
"RTN","IBCNRPM2",51,0)
 S VALMCNT=0,VALMBG=1,(IBCNA,IBCNM)=""
"RTN","IBCNRPM2",52,0)
 S VALMCNT1=0
"RTN","IBCNRPM2",53,0)
 S (IBIND,IBMULT,IBW)=1
"RTN","IBCNRPM2",54,0)
 F  S IBCNA=$O(^TMP("IBCNR",$J,"GP",IBCNA)) Q:IBCNA=""  D
"RTN","IBCNRPM2",55,0)
 . F  S IBCNM=$O(^TMP("IBCNR",$J,"GP",IBCNA,IBCNM)) Q:IBCNM=""  D
"RTN","IBCNRPM2",56,0)
 .. ;get pharm plan id
"RTN","IBCNRPM2",57,0)
 .. S GPIEN=$O(^TMP("IBCNR",$J,"GP",IBCNA,IBCNM,"")),IBDAT=^TMP("IBCNR",$J,"GP",IBCNA,IBCNM,GPIEN)
"RTN","IBCNRPM2",58,0)
 .. ;set up list
"RTN","IBCNRPM2",59,0)
 .. S VALMCNT=VALMCNT+1
"RTN","IBCNRPM2",60,0)
 .. S VALMCNT1=VALMCNT1+1
"RTN","IBCNRPM2",61,0)
 .. S X=$$SETFLD^VALM1(VALMCNT1,"","NUMBER")
"RTN","IBCNRPM2",62,0)
 .. ;
"RTN","IBCNRPM2",63,0)
 .. ;group name
"RTN","IBCNRPM2",64,0)
 .. S X=$$SETFLD^VALM1(IBCNA,X,"GNAME")
"RTN","IBCNRPM2",65,0)
 .. ;
"RTN","IBCNRPM2",66,0)
 .. ;group number
"RTN","IBCNRPM2",67,0)
 .. S X=$$SETFLD^VALM1(IBCNM,X,"GNUM")
"RTN","IBCNRPM2",68,0)
 .. ;
"RTN","IBCNRPM2",69,0)
 .. ;group plan type
"RTN","IBCNRPM2",70,0)
 .. S X=$$SETFLD^VALM1($$EXPAND^IBTRE(355.3,.09,$P(IBDAT,"^",2)),X,"GTYP")
"RTN","IBCNRPM2",71,0)
 .. ;
"RTN","IBCNRPM2",72,0)
 .. ;pharmacy plan ID
"RTN","IBCNRPM2",73,0)
 .. S IBCNRPP=$P($G(IBDAT),U)
"RTN","IBCNRPM2",74,0)
 .. I IBCNRPP'="" S IBCNRPP=$$GET1^DIQ(366.03,IBCNRPP_",",.01,"E")
"RTN","IBCNRPM2",75,0)
 .. S X=$$SETFLD^VALM1(IBCNRPP,X,"PHRM")
"RTN","IBCNRPM2",76,0)
 .. ;
"RTN","IBCNRPM2",77,0)
 .. ; set up tmp for SEL
"RTN","IBCNRPM2",78,0)
 .. S ^TMP("IBCNR",$J,"PM",VALMCNT,0)=X
"RTN","IBCNRPM2",79,0)
 .. S ^TMP("IBCNR",$J,"PM","IDX",VALMCNT,VALMCNT1)=GPIEN
"RTN","IBCNRPM2",80,0)
 .. S ^TMP("IBCNR",$J,"PM","IDX1",VALMCNT1)=GPIEN
"RTN","IBCNRPM2",81,0)
 .. ;
"RTN","IBCNRPM2",82,0)
 .. I IBCNRPP'="" D    ; If VA PLAN ID exists
"RTN","IBCNRPM2",83,0)
 ... I $P(IBDAT,"^",3)'="" D      ; If Matched Date exists
"RTN","IBCNRPM2",84,0)
 .... S X="          Matched by: "_$P(IBDAT,"^",4)_"  "_$P(IBDAT,"^",3)
"RTN","IBCNRPM2",85,0)
 .... S VALMCNT=VALMCNT+1
"RTN","IBCNRPM2",86,0)
 .... S ^TMP("IBCNR",$J,"PM",VALMCNT,0)=X
"RTN","IBCNRPM2",87,0)
 .... S ^TMP("IBCNR",$J,"PM","IDX",VALMCNT,VALMCNT1)=GPIEN
"RTN","IBCNRPM2",88,0)
 .... S ^TMP("IBCNR",$J,"PM","IDX1",VALMCNT1)=GPIEN
"RTN","IBCNRPM2",89,0)
 .. I IBCNRPP="" D    ; If VA PLAN ID does not exist
"RTN","IBCNRPM2",90,0)
 ... I $P(IBDAT,"^",3)'="" D   ; Match Date w/no Plan ID means Deleted
"RTN","IBCNRPM2",91,0)
 .... S X="          Deleted by: "_$P(IBDAT,"^",4)_"  "_$P(IBDAT,"^",3)
"RTN","IBCNRPM2",92,0)
 .... S VALMCNT=VALMCNT+1
"RTN","IBCNRPM2",93,0)
 .... S ^TMP("IBCNR",$J,"PM",VALMCNT,0)=X
"RTN","IBCNRPM2",94,0)
 .... S ^TMP("IBCNR",$J,"PM","IDX",VALMCNT,VALMCNT1)=GPIEN
"RTN","IBCNRPM2",95,0)
 .... S ^TMP("IBCNR",$J,"PM","IDX1",VALMCNT1)=GPIEN
"RTN","IBCNRPM2",96,0)
 ;
"RTN","IBCNRPM2",97,0)
 Q
"RTN","IBCNRPM2",98,0)
 ;
"RTN","IBCNRPM2",99,0)
HELP ; -- help code
"RTN","IBCNRPM2",100,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNRPM2",101,0)
 Q
"RTN","IBCNRPM2",102,0)
 ;
"RTN","IBCNRPM2",103,0)
EXIT ; -- exit code
"RTN","IBCNRPM2",104,0)
 K ^TMP("IBCNR",$J,"PM"),VALMBCK,VALMY
"RTN","IBCNRPM2",105,0)
 K IBIND,IBMULT,IBW,IBX
"RTN","IBCNRPM2",106,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","IBCNRPM2",107,0)
 Q
"RTN","IBCNRPM2",108,0)
 ;
"RTN","IBCNRPM2",109,0)
EXPND ; -- expand code
"RTN","IBCNRPM2",110,0)
 Q
"RTN","IBCNRPM2",111,0)
 ;
"RTN","IBCNRPM2",112,0)
SEL ;  Select Plan
"RTN","IBCNRPM2",113,0)
 ;
"RTN","IBCNRPM2",114,0)
 D S1
"RTN","IBCNRPM2",115,0)
 ;
"RTN","IBCNRPM2",116,0)
 I 'IBX Q  ; no group selected
"RTN","IBCNRPM2",117,0)
 ;
"RTN","IBCNRPM2",118,0)
 N DA,DIC,DIE,DR,D,IBSEL,IBPLNOLD,IBUSROLD
"RTN","IBCNRPM2",119,0)
 S IBX=0
"RTN","IBCNRPM2",120,0)
 F  S IBX=$O(VALMY(IBX)) Q:IBX=""  D
"RTN","IBCNRPM2",121,0)
 . ;S IBSEL=+$G(^TMP("IBCNR",$J,"PM","IDX",IBX,IBX))
"RTN","IBCNRPM2",122,0)
 . S IBSEL=+$G(^TMP("IBCNR",$J,"PM","IDX1",IBX))
"RTN","IBCNRPM2",123,0)
 . S IBPLNOLD=$$GET1^DIQ(355.3,IBSEL,6.01,"I")
"RTN","IBCNRPM2",124,0)
 . S IBUSROLD=$$GET1^DIQ(355.3,IBSEL,1.08)
"RTN","IBCNRPM2",125,0)
 . S DA=IBSEL,DIC="^IBA(355.3,",DIE=DIC,DR="6.01////^S X="_IBCNRP
"RTN","IBCNRPM2",126,0)
 . ;S DR=DR_";1.07///NOW;1.08////"_DUZ
"RTN","IBCNRPM2",127,0)
 . I IBPLNOLD'=IBCNRP S DR=DR_";1.07///NOW;1.08////"_DUZ
"RTN","IBCNRPM2",128,0)
 . I IBPLNOLD=IBCNRP,IBUSROLD="" S DR=DR_";1.07///NOW;1.08////"_DUZ
"RTN","IBCNRPM2",129,0)
 . D ^DIE
"RTN","IBCNRPM2",130,0)
 D GIPF^IBCNRPM1
"RTN","IBCNRPM2",131,0)
 D INIT
"RTN","IBCNRPM2",132,0)
 ;
"RTN","IBCNRPM2",133,0)
 S IBX=0 F  S IBX=$O(VALMY(IBX)) Q:'IBX  D
"RTN","IBCNRPM2",134,0)
 . S ^TMP($J,"IBSEL",+$G(^TMP("IBCNR",$J,"PM","IDX",IBX,IBX)))=""
"RTN","IBCNRPM2",135,0)
 ;
"RTN","IBCNRPM2",136,0)
 Q
"RTN","IBCNRPM2",137,0)
 ;
"RTN","IBCNRPM2",138,0)
DEL ; remove a plan from a group
"RTN","IBCNRPM2",139,0)
 D S1
"RTN","IBCNRPM2",140,0)
 ;
"RTN","IBCNRPM2",141,0)
 I 'IBX Q  ; no group selected
"RTN","IBCNRPM2",142,0)
 ;
"RTN","IBCNRPM2",143,0)
 NEW DA,DIC,DIE,DR,IBSEL,IBPLNOLD
"RTN","IBCNRPM2",144,0)
 S IBX=0
"RTN","IBCNRPM2",145,0)
 F  S IBX=$O(VALMY(IBX)) Q:IBX=""  D
"RTN","IBCNRPM2",146,0)
 . ;S IBSEL=+$G(^TMP("IBCNR",$J,"PM","IDX",IBX,IBX))
"RTN","IBCNRPM2",147,0)
 . S IBSEL=+$G(^TMP("IBCNR",$J,"PM","IDX1",IBX))
"RTN","IBCNRPM2",148,0)
 . S IBPLNOLD=$$GET1^DIQ(355.3,IBSEL,6.01,"I")
"RTN","IBCNRPM2",149,0)
 . S DA=IBSEL,DIC="^IBA(355.3,",DIE=DIC,DR="6.01///@"
"RTN","IBCNRPM2",150,0)
 . I IBPLNOLD'="" S DR=DR_";1.07///NOW;1.08////"_DUZ
"RTN","IBCNRPM2",151,0)
 . D ^DIE
"RTN","IBCNRPM2",152,0)
 D GIPF^IBCNRPM1
"RTN","IBCNRPM2",153,0)
 D INIT
"RTN","IBCNRPM2",154,0)
 ;
"RTN","IBCNRPM2",155,0)
 S IBX=0 F  S IBX=$O(VALMY(IBX)) Q:'IBX  S ^TMP($J,"IBDEL",+$G(^TMP("IBCNR",$J,"PM","IDX",IBX,IBX)))=""
"RTN","IBCNRPM2",156,0)
 ;
"RTN","IBCNRPM2",157,0)
 Q
"RTN","IBCNRPM2",158,0)
 ;
"RTN","IBCNRPM2",159,0)
S1 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,IBOK,IBQUIT,Y,X
"RTN","IBCNRPM2",160,0)
 D EN^VALM2($G(XQORNOD(0))),FULL^VALM1
"RTN","IBCNRPM2",161,0)
 S IBX=$O(VALMY(0)),VALMBCK="R"
"RTN","IBCNRPM2",162,0)
 ;
"RTN","IBCNRPM2",163,0)
 I 'IBX W !!,"No group selected!" D PAUSE^VALM1 Q
"RTN","IBCNRPM2",164,0)
 I 'IBMULT D  G SPQ
"RTN","IBCNRPM2",165,0)
 . D OK^IBCNSM3
"RTN","IBCNRPM2",166,0)
 . I IBQUIT S VALMBCK="Q" Q
"RTN","IBCNRPM2",167,0)
 . I IBOK S IBSEL=+$G(^TMP("IBCNR",$J,"PM","IDX",IBX)),VALMBCK="Q"
"RTN","IBCNRPM2",168,0)
 ;
"RTN","IBCNRPM2",169,0)
 ;S IBSEL=+$G(^TMP("IBCNR",$J,"PM","IDX",IBX))
"RTN","IBCNRPM2",170,0)
 ;Q
"RTN","IBCNRPM2",171,0)
 ;
"RTN","IBCNRPM2",172,0)
SPQ ;
"RTN","IBCNRPM2",173,0)
 S DIR(0)="SB^Y:YES;N:NO",DIR("B")="NO",DIR("A")="OK to Continue? "
"RTN","IBCNRPM2",174,0)
 D ^DIR K DIR
"RTN","IBCNRPM2",175,0)
 I $G(Y)="^" S IBX="" Q
"RTN","IBCNRPM2",176,0)
 I $G(Y(0))="NO" S IBX=""
"RTN","IBCNRPM2",177,0)
 Q
"RTN","IBJTCA1")
0^6^B63894628
"RTN","IBJTCA1",1,0)
IBJTCA1 ;ALB/ARH - TPI CLAIMS INFO BUILD ;10/31/07  14:17
"RTN","IBJTCA1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,106,137,223,276,363,384,432,452,473,497,521,516,592,617**;21-MAR-94;Build 43
"RTN","IBJTCA1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTCA1",4,0)
 ;
"RTN","IBJTCA1",5,0)
 ;Reference to $$NABP^BPSBUTL supported by IA# 4719
"RTN","IBJTCA1",6,0)
 ;
"RTN","IBJTCA1",7,0)
BLD ; build array for Third Party Joint Inquiry Claims Info screen, IBIFN must be defined
"RTN","IBJTCA1",8,0)
 ;
"RTN","IBJTCA1",9,0)
 N X,IBY,IBZ,IBZ0,IBI,IBT,IBD,IBLN,IBLR,IBD0,IBDI1,IBDM,IBDM1,IBDU,IBDS,IBDU2,IBID0,IBID13,IBNC,IBTC,IBTW,IBSW,IBGRPB,IBGRPE,IBWNR,IBDTX,IBBX19,IBPRVO,IBNABP,IBLVL,IBCNT,IBPRVTYP,IBVL
"RTN","IBJTCA1",10,0)
 N IBXSAVE  ; IB*2.0*473 bi
"RTN","IBJTCA1",11,0)
 N BPSBINFO,IBBPS,IBBPSRX,IBBPSFL
"RTN","IBJTCA1",12,0)
 S VALMCNT=0,X="",IBD0=$G(^DGCR(399,+$G(IBIFN),0)) I IBD0="" S VALMQUIT="" G BLDQ
"RTN","IBJTCA1",13,0)
 F IBI="M","M1","U","S","U2","TX" S @("IBD"_IBI)=$G(^DGCR(399,+IBIFN,IBI))
"RTN","IBJTCA1",14,0)
 S IBDI1=$P(IBD0,U,21),IBDI1=$S(IBDI1="S":2,IBDI1="T":3,1:1) S IBDI1=$$POLICY^IBCEF(IBIFN,,IBDI1)
"RTN","IBJTCA1",15,0)
 S IBID0=$G(^DIC(36,+IBDI1,0)),IBID13=$G(^DIC(36,+IBDI1,.13))
"RTN","IBJTCA1",16,0)
 ;
"RTN","IBJTCA1",17,0)
 S (IBLN,VALMCNT)=1
"RTN","IBJTCA1",18,0)
 ;
"RTN","IBJTCA1",19,0)
 ; MRD;IB*2.0*516 - Try to make the following more readable; also
"RTN","IBJTCA1",20,0)
 ; added IBTC(7), IBTW(7) and IBSW(7).
"RTN","IBJTCA1",21,0)
 ;IB*2.0*432/TAZ - Added IBTW(6) and IBSW(6)
"RTN","IBJTCA1",22,0)
 ;S (IBNC(1),IBTC(1),IBTC(4),IBTC(6))=2,IBTC(5)=78,(IBNC(2),IBTC(2))=42,IBNC(3)=35,IBTW(1)=15,IBTW(2)=16,IBTW(4)=12,IBTW(5)=1,IBTW(6)=20,IBSW(1)=23,IBSW(2)=21,IBSW(4)=60,IBSW(5)=1,IBSW(6)=49
"RTN","IBJTCA1",23,0)
 ;
"RTN","IBJTCA1",24,0)
 S IBNC(1)=2,IBTC(1)=2,IBTW(1)=15,IBSW(1)=23
"RTN","IBJTCA1",25,0)
 S IBNC(2)=42,IBTC(2)=42,IBTW(2)=16,IBSW(2)=21
"RTN","IBJTCA1",26,0)
 S IBNC(3)=35
"RTN","IBJTCA1",27,0)
 S IBTC(4)=2,IBTW(4)=12,IBSW(4)=60
"RTN","IBJTCA1",28,0)
 S IBTC(5)=78,IBTW(5)=1,IBSW(5)=1
"RTN","IBJTCA1",29,0)
 S IBTC(6)=2,IBTW(6)=20,IBSW(6)=49
"RTN","IBJTCA1",30,0)
 S IBTC(7)=2,IBTW(7)=20,IBSW(7)=58
"RTN","IBJTCA1",31,0)
 ;
"RTN","IBJTCA1",32,0)
 S IBLR=1
"RTN","IBJTCA1",33,0)
 ;
"RTN","IBJTCA1",34,0)
 S IBT="Insurance Demographics" S IBLN=$$SETN(IBT,IBLN,IBLR,1)
"RTN","IBJTCA1",35,0)
 S IBWNR=$$WNRBILL^IBEFUNC(IBIFN)
"RTN","IBJTCA1",36,0)
 S IBNABP=$$NABP^IBNCPDPU(IBIFN)
"RTN","IBJTCA1",37,0)
 I IBNABP="" D
"RTN","IBJTCA1",38,0)
 . S IBBPS=$$BILINF^IBNCPUT3(IBIFN,.BPSBINFO)
"RTN","IBJTCA1",39,0)
 . S IBBPSRX=$G(BPSBINFO("PRESCRIPTION"))
"RTN","IBJTCA1",40,0)
 . S IBBPSFL=$G(BPSBINFO("FILL NUMBER"))
"RTN","IBJTCA1",41,0)
 . S IBNABP=$$NABP^BPSBUTL(IBBPSRX,IBBPSFL)   ; IA# 4719
"RTN","IBJTCA1",42,0)
 S IBT=$S(IBWNR:" *",1:"  ")_"Bill Payer: ",IBD=$P(IBID0,U,1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",43,0)
 S IBT="Claim Address: " D  S IBD=$P(IBDM,U,5) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",44,0)
 . I $P(IBID0,U,1)'=$P(IBDM,U,4) S IBD=$P(IBDM,U,4) S IBLN=$$SET(IBT,IBD,IBLN,IBLR) S IBT=""
"RTN","IBJTCA1",45,0)
 I $P(IBDM,U,6)'="" S IBT="",IBD=$P(IBDM,U,6) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",46,0)
 I $P(IBDM1,U,1)'="" S IBT="",IBD=$P(IBDM1,U,1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",47,0)
 S IBT="",IBD=$P(IBDM,U,7),IBD=IBD_$S(IBD'="":", ",1:"")_$P($G(^DIC(5,+$P(IBDM,U,8),0)),U,2)_" "_$P(IBDM,U,9),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",48,0)
 S IBT="Claim Phone: ",IBD=$P($$BADD^IBJTU3(+IBIFN),U,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",49,0)
 S IBLN=$$SET("","",IBLN,5)
"RTN","IBJTCA1",50,0)
 ;
"RTN","IBJTCA1",51,0)
 ; MRD;IB*2.0*516 - Use an IBLR of 7 for this section, then reset below.
"RTN","IBJTCA1",52,0)
 S IBLR=7
"RTN","IBJTCA1",53,0)
 S IBT="Subscriber Demographics" S IBLN=$$SETN(IBT,IBLN,1,1)
"RTN","IBJTCA1",54,0)
 S IBT="Group Number: ",IBD=$P(IBDI1,U,3) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",55,0)
 S IBT="Group Name: ",IBD=$P(IBDI1,U,15) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",56,0)
 S IBT="Subscriber ID: ",IBD=$P(IBDI1,U,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",57,0)
 S IBT="Employer: ",IBD=$$EMPL(+DFN) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",58,0)
 S IBT="Insured's Name: ",IBD=$P(IBDI1,U,17) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",59,0)
 S IBT="Relationship: ",IBD=$$EXSET^IBJU1($P(IBDI1,U,16),2.312,16) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",60,0)
 S IBLR=1
"RTN","IBJTCA1",61,0)
 ;
"RTN","IBJTCA1",62,0)
 S (IBNC(1),IBTC(1))=2,(IBNC(2),IBTC(2))=42,IBNC(3)=29,IBTW(1)=12,IBTW(2)=16,IBSW(1)=26,IBSW(2)=22
"RTN","IBJTCA1",63,0)
 S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",64,0)
 ;JWS:IB*2.0*592:US131 - added dental claim #7
"RTN","IBJTCA1",65,0)
 I $$FT^IBCEF(IBIFN)=2!($$FT^IBCEF(IBIFN)=7) D
"RTN","IBJTCA1",66,0)
 . N IBXDATA,IBXSAVE K ^TMP("IBXSAVE",$J)
"RTN","IBJTCA1",67,0)
 . D F^IBCEF("N-HCFA 1500 BOX 19",,,IBIFN)
"RTN","IBJTCA1",68,0)
 . I IBXDATA'="" S IBBX19(1)=$E(IBXDATA,1,40) S:$E(IBXDATA,41,$L(IBXDATA))'="" IBBX19(2)=$E(IBXDATA,41,$L(IBXDATA))
"RTN","IBJTCA1",69,0)
 ;
"RTN","IBJTCA1",70,0)
 S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA1",71,0)
 S IBT="Claim Information" S IBLN=$$SETN(IBT,IBLN,3,1)
"RTN","IBJTCA1",72,0)
 S IBT="Bill Type: ",IBD=$$EXSET^IBJU1($P(IBD0,U,5),399,.05) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",73,0)
 S IBT="Time Frame: ",IBD=$$EXSET^IBJU1($P(IBD0,U,6),399,.06) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",74,0)
 S IBT="Rate Type: ",IBD=$P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",75,0)
 S IBT="AR Status: ",IBD=$P($$ARSTATA^IBJTU4(IBIFN),U,1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",76,0)
 S IBT=" Sequence: ",IBD=$P($$EXSET^IBJU1($P(IBD0,U,21),399,.21)," ",1) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",77,0)
 S IBT="Purch Svc: ",IBD=$S($P(IBDU2,U,11)="":"NO",1:$$EXPAND^IBTRE(399,233,$P(IBDU2,U,11))),IBLN=$$SET(IBT,IBD,IBLN,4)
"RTN","IBJTCA1",78,0)
 I $P(IBDM1,"^",8) S IBT="  ECME No: ",IBD=$P($P(IBDM1,"^",8),";",1),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",79,0)
 I $L($P(IBDM1,"^",9)) S IBT="ECME Ap No: ",IBD=$P(IBDM1,"^",9),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",80,0)
 I IBNABP'="" S IBT=$S(($L($TR(IBNABP," ",""))=7):"  NCPDP No: ",1:"       NPI: "),IBD=IBNABP,IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",81,0)
 ; IB*2.0*521 add Claim HPID to display
"RTN","IBJTCA1",82,0)
 S IBD=$S($P(IBD0,U,21)="P":$P(IBDM1,U,13),$P(IBD0,U,21)="S":$P(IBDM1,U,14),$P(IBD0,U,21)="T":$P(IBDM1,U,15),1:"")
"RTN","IBJTCA1",83,0)
 S:IBD="" IBD=$$HPD^IBCNHUT1(+IBDI1) S IBVL=$$HOD^IBCNHUT1(IBD,+IBDI1,IBD) S IBT=$P(IBVL,U,2)_": ",IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",84,0)
 I IBWNR S IBT="MRA Status: ",IBD=$S($P(IBDTX,U,5):$P(IBDTX,U,5),1:"NOT RECEIVED"),IBLN=$$SET(IBT,$S(IBD:$$EXPAND^IBTRE(399,24,IBD),1:IBD),IBLN,IBLR)
"RTN","IBJTCA1",85,0)
 I $G(IBBX19(1))'="" D
"RTN","IBJTCA1",86,0)
 . S IBT="   Box 19: ",IBD=IBBX19(1),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",87,0)
 . I $G(IBBX19(2))'="" S IBT=$J("",11),IBD=IBBX19(2),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",88,0)
 ;
"RTN","IBJTCA1",89,0)
 S IBLR=6,IBPRVO=""
"RTN","IBJTCA1",90,0)
 S IBT="Providers: ",IBD="NONE"
"RTN","IBJTCA1",91,0)
 ;IB*2.0*432/TAZ - Changed how providers are displayed to take line-level providers into account.
"RTN","IBJTCA1",92,0)
 ;D F^IBCEF("N-ALL PROVIDERS","IBZ",,IBIFN)
"RTN","IBJTCA1",93,0)
 D F^IBCEF("N-ALL PROVIDERS 1","IBZ",,IBIFN)
"RTN","IBJTCA1",94,0)
 S IBZ0=0
"RTN","IBJTCA1",95,0)
 S IBLVL=0
"RTN","IBJTCA1",96,0)
 ;F  S Z=$O(IBZ(Z)) Q:'Z  D
"RTN","IBJTCA1",97,0)
 ;. I $G(IBZ(Z)),$G(IBZ(Z,1))'="" S IBLN=$$SET(IBT,"(OLD PROV DATA) "_IBZ(Z,1),IBLN,IBLR),IBZ0=1 Q
"RTN","IBJTCA1",98,0)
 ;. I $P($G(IBZ(Z,1)),U)'="" S IBD=$E($$EXPAND^IBTRE(399.0222,.01,Z)_":"_$J("",15),1,15)_$P(IBZ(Z,1),U)_$S($P(IBZ(Z,1),U,4)'="":" ("_$P(IBZ(Z,1),U,4)_")",1:"") S IBLN=$$SET(IBT,IBD,IBLN,IBLR) S IBT=$J("",11),IBZ0=1
"RTN","IBJTCA1",99,0)
 ;I 'IBZ0 S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",100,0)
 S IBLVL=0
"RTN","IBJTCA1",101,0)
 F  S IBLVL=$O(IBZ(IBLVL)) Q:'IBLVL  D
"RTN","IBJTCA1",102,0)
 . S IBT=IBT_$S(IBLVL=1:"Claim: ",1:"Line: ")
"RTN","IBJTCA1",103,0)
 . S IBPRVTYP="",IBCNT=0
"RTN","IBJTCA1",104,0)
 . F  S IBCNT=$O(IBZ(IBLVL,IBCNT)) Q:'IBCNT  D
"RTN","IBJTCA1",105,0)
 .. I IBLVL=1 S IBD=$J("",5)
"RTN","IBJTCA1",106,0)
 .. I IBLVL=2 S IBD=$E("("_IBCNT_")"_$J("",5),1,5)
"RTN","IBJTCA1",107,0)
 .. F  S IBPRVTYP=$O(IBZ(IBLVL,IBCNT,IBPRVTYP)) Q:'IBPRVTYP  D
"RTN","IBJTCA1",108,0)
 ... S IBD=IBD_$E($$EXPAND^IBTRE(399.0222,.01,IBPRVTYP)_":"_$J("",15),1,15)
"RTN","IBJTCA1",109,0)
 ... S IBD=IBD_$P(IBZ(IBLVL,IBCNT,IBPRVTYP),U)
"RTN","IBJTCA1",110,0)
 ... I $L($P(IBZ(IBLVL,IBCNT,IBPRVTYP),U,4)) S IBD=IBD_" ("_$P(IBZ(IBLVL,IBCNT,IBPRVTYP),U,4)_")"
"RTN","IBJTCA1",111,0)
 ... S IBLN=$$SET(IBT,IBD,IBLN,IBLR),IBT="",IBD=$J("",5)
"RTN","IBJTCA1",112,0)
 ;
"RTN","IBJTCA1",113,0)
 S IBGRPE=IBLN,IBLN=IBGRPB+1,IBLR=2
"RTN","IBJTCA1",114,0)
 ;
"RTN","IBJTCA1",115,0)
 S IBT="Charge Type: ",IBD=$$EXSET^IBJU1($P(IBD0,U,27),399,.27) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",116,0)
 S IBT="Service Dates: ",IBD=$$DATE^IBJU1($P(IBDU,U,1))_" - "_$$DATE^IBJU1($P(IBDU,U,2)) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",117,0)
 S IBT="Orig Claim: ",IBD=$$BILL^RCJIBFN2(+IBIFN) S IBLN=$$SET(IBT,$J($P(IBD,U,1),9,2),IBLN,IBLR)
"RTN","IBJTCA1",118,0)
 S IBT="Balance Due: ",IBD=$J($P(IBD,U,3),9,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",119,0)
 I +$P(IBDM,U,2) S IBX=$S($P(IBD0,U,21)="P":2,1:1) D  S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",120,0)
 . S IBT=$S(IBX=2:"Secondary",1:"Primary")_": ",IBD=$P($G(^DIC(36,+$P(IBDM,U,IBX),0)),U,1)
"RTN","IBJTCA1",121,0)
 . S IBX=$P(IBDU2,U,(IBX+3)) I +IBX S IBX="("_$J(IBX,0,2)_")" S IBD=$E(IBD,1,(IBSW(IBLR)-$L(IBX)-2))_"  "_IBX
"RTN","IBJTCA1",122,0)
 I +$P(IBDM,U,3) S IBX=$S($P(IBD0,U,21)="T":2,1:3) D  S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA1",123,0)
 . S IBT=$S(IBX=2:"Secondary",1:"Tertiary")_": ",IBD=$P($G(^DIC(36,+$P(IBDM,U,IBX),0)),U,1)
"RTN","IBJTCA1",124,0)
 . S IBX=$P(IBDU2,U,(IBX+3)) I +IBX S IBX="("_$J(IBX,0,2)_")" S IBD=$E(IBD,1,(IBSW(IBLR)-$L(IBX)-2))_"  "_IBX
"RTN","IBJTCA1",125,0)
 S IBLN=$$SET("","",IBLN,5)
"RTN","IBJTCA1",126,0)
 I IBWNR S IBT="MRA Rec Date: " D  S IBLN=$$SET(IBT,IBD,IBLN,2)
"RTN","IBJTCA1",127,0)
 . N Z
"RTN","IBJTCA1",128,0)
 . ; find last MRA for receipt date
"RTN","IBJTCA1",129,0)
 . S (IBD,Z)="" F  S Z=$O(^IBM(361.1,"B",IBIFN,Z),-1) Q:'Z  I $P($G(^IBM(361.1,Z,0)),U,4)=1 S IBD=$$DATE^IBJU1($P($P(^IBM(361.1,Z,0),U,6),".")) Q
"RTN","IBJTCA1",130,0)
 F Z=IBLN:1:IBGRPE S IBLN=$$SET("","",IBLN,5)
"RTN","IBJTCA1",131,0)
 ;
"RTN","IBJTCA1",132,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE)
"RTN","IBJTCA1",133,0)
 ;
"RTN","IBJTCA1",134,0)
 S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA1",135,0)
 D CONT^IBJTCA2
"RTN","IBJTCA1",136,0)
 ;
"RTN","IBJTCA1",137,0)
COPAY I $O(^IBA(362.4,"C",IBIFN,0)) D
"RTN","IBJTCA1",138,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,IBLR)   ; blank line
"RTN","IBJTCA1",139,0)
 . S IBNC(1)=21,IBT="Related Prescription Copay Information" S IBLN=$$SETN(IBT,IBLN,1,1)
"RTN","IBJTCA1",140,0)
 . N IBZ,IBX,IBC,IBCAP
"RTN","IBJTCA1",141,0)
 . S IBZ=0 F  S IBZ=$O(^IBA(362.4,"C",IBIFN,IBZ)) Q:'IBZ  D
"RTN","IBJTCA1",142,0)
 .. K ^TMP("IBTPJI",$J)
"RTN","IBJTCA1",143,0)
 .. S IBC=$G(^IBA(362.4,IBZ,0))
"RTN","IBJTCA1",144,0)
 .. D:$P(IBC,"^",5) RX^PSO52API($P(IBD0,"^",2),"IBTPJI",$P(IBC,"^",5),"","I^")
"RTN","IBJTCA1",145,0)
 .. ; original fill
"RTN","IBJTCA1",146,0)
 .. I $P(IBC,"^",10)=0 D
"RTN","IBJTCA1",147,0)
 ... S IBX=+$G(^TMP($J,"IBTPJI",$P(IBD0,"^",2),+$P(IBC,"^",5),106)),IBCAP=+$G(^(106.6))
"RTN","IBJTCA1",148,0)
 .. ; refills
"RTN","IBJTCA1",149,0)
 .. E  D
"RTN","IBJTCA1",150,0)
 ... S IBX=+$G(^TMP($J,"IBTPJI",$P(IBD0,"^",2),+$P(IBC,"^",5),"IB",+$P(IBC,"^",10),9)),IBCAP=+$G(^(9.1))
"RTN","IBJTCA1",151,0)
 .. I '$G(IBX),$G(IBCAP) S IBT="  <copay exceeded cap>",IBLN=$$SET(IBT,"",IBLN,4) Q
"RTN","IBJTCA1",152,0)
 .. I '$G(IBX) S IBT="  <none found>",IBLN=$$SET(IBT,"",IBLN,4) Q
"RTN","IBJTCA1",153,0)
 .. S IBX=$G(^IB(IBX,0))
"RTN","IBJTCA1",154,0)
 .. S IBT="Rx: "_$P(IBC,"^")_"  Chg: $"_$FN($P(IBX,"^",7),",",2)_"   Status: "_$$TITLE^XLFSTR($$EXTERNAL^DILFD(350,.05,"",$P(IBX,"^",5)))_"   Bill: "_$P(IBX,"^",11)
"RTN","IBJTCA1",155,0)
 .. S IBLN=$$SET(IBT,"",IBLN,4)
"RTN","IBJTCA1",156,0)
 K ^TMP("IBTPJI",$J)
"RTN","IBJTCA1",157,0)
 ;
"RTN","IBJTCA1",158,0)
 S (IBLN,VALMCNT)=IBLN-1
"RTN","IBJTCA1",159,0)
 ;
"RTN","IBJTCA1",160,0)
BLDQ Q
"RTN","IBJTCA1",161,0)
 ;
"RTN","IBJTCA1",162,0)
EMPL(DFN) ; returns employer name
"RTN","IBJTCA1",163,0)
 Q $P($G(^DPT(+DFN,.311)),U,1)
"RTN","IBJTCA1",164,0)
 ;
"RTN","IBJTCA1",165,0)
SET(TTL,DATA,LN,LR) ;
"RTN","IBJTCA1",166,0)
 N IBY
"RTN","IBJTCA1",167,0)
 S IBY=$J(TTL,IBTW(LR))_DATA D SET1(IBY,LN,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJTCA1",168,0)
 S LN=LN+1
"RTN","IBJTCA1",169,0)
 Q LN
"RTN","IBJTCA1",170,0)
 ;
"RTN","IBJTCA1",171,0)
SETN(TTL,LN,LR,RV) ;
"RTN","IBJTCA1",172,0)
 N IBY
"RTN","IBJTCA1",173,0)
 S IBY=" "_TTL_" " D SET1(IBY,LN,IBNC(LR),$L(IBY),$G(RV))
"RTN","IBJTCA1",174,0)
 S LN=LN+1
"RTN","IBJTCA1",175,0)
 Q LN
"RTN","IBJTCA1",176,0)
 ;
"RTN","IBJTCA1",177,0)
SET1(STR,LN,COL,WD,RV) ; set up TMP array with screen data
"RTN","IBJTCA1",178,0)
 N IBX S IBX=$G(^TMP("IBJTCA",$J,LN,0))
"RTN","IBJTCA1",179,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTCA1",180,0)
 D SET^VALM10(LN,IBX) I $G(RV)'="" D CNTRL^VALM10(LN,COL,WD,IORVON,IORVOFF)
"RTN","IBJTCA1",181,0)
 Q
"RTN","IBJTRX")
0^2^B87956137
"RTN","IBJTRX",1,0)
IBJTRX ;ALB/ESG - TPJI ePharmacy ECME claim information ;22-Oct-2010
"RTN","IBJTRX",2,0)
 ;;2.0;INTEGRATED BILLING;**435,452,494,521,617**;21-MAR-94;Build 43
"RTN","IBJTRX",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTRX",4,0)
 ;
"RTN","IBJTRX",5,0)
 ; Reference to $$CLAIM^BPSBUTL supported by IA# 4719
"RTN","IBJTRX",6,0)
 ; Reference to BPS RESPONSES file# 9002313.03 supported by IA# 4813
"RTN","IBJTRX",7,0)
 ; Reference to $$NPI^XUSNPI supported by IA# 4532
"RTN","IBJTRX",8,0)
 ; Reference to ^BPSVRX supported by IA# 5723
"RTN","IBJTRX",9,0)
 ;
"RTN","IBJTRX",10,0)
 Q
"RTN","IBJTRX",11,0)
 ;
"RTN","IBJTRX",12,0)
EN ; -- main entry point for IBJT ECME RESP INFO
"RTN","IBJTRX",13,0)
 N IBZ,IBRXDATA,IBRXIEN,X,Y
"RTN","IBJTRX",14,0)
 D FULL^VALM1
"RTN","IBJTRX",15,0)
 I '$G(IBIFN) W !!,"No Claim Defined!" D PAUSE^VALM1 G EX
"RTN","IBJTRX",16,0)
 I '$$ISRX^IBCEF1(IBIFN) W !!,"Not available. This is not a Pharmacy Claim." D PAUSE^VALM1 G EX
"RTN","IBJTRX",17,0)
 I $$ECME^IBTRE(IBIFN)="" W !!,"Not available. This is a Pharmacy Claim, but not an ECME Claim." D PAUSE^VALM1 G EX
"RTN","IBJTRX",18,0)
 ;
"RTN","IBJTRX",19,0)
 S IBZ=+$O(^IBA(362.4,"C",IBIFN,0))
"RTN","IBJTRX",20,0)
 I 'IBZ W !!,"Rx data not found for this claim." D PAUSE^VALM1 G EX
"RTN","IBJTRX",21,0)
 S IBRXDATA=$G(^IBA(362.4,IBZ,0))
"RTN","IBJTRX",22,0)
 S IBRXIEN=+$P(IBRXDATA,U,5)            ; RX ien ptr file 52
"RTN","IBJTRX",23,0)
 I 'IBRXIEN W !!,"Rx IEN cannot be determined." D PAUSE^VALM1 G EX
"RTN","IBJTRX",24,0)
 ;
"RTN","IBJTRX",25,0)
 D EN^VALM("IBJT ECME RESP INFO")
"RTN","IBJTRX",26,0)
EX ;
"RTN","IBJTRX",27,0)
 S VALMBCK="R"
"RTN","IBJTRX",28,0)
 Q
"RTN","IBJTRX",29,0)
 ;
"RTN","IBJTRX",30,0)
HDR ; -- header code
"RTN","IBJTRX",31,0)
 D HDR^IBJTU1(+IBIFN,+DFN,13)
"RTN","IBJTRX",32,0)
 Q
"RTN","IBJTRX",33,0)
 ;
"RTN","IBJTRX",34,0)
INIT ; -- init variables and list array
"RTN","IBJTRX",35,0)
 N IBM1,ECME,ECMEAP,RXORG,DOCIEN,PHARMNPI,DOCNPI,RESPIEN,ZR,RSPSUB,ZM,BPSM,BPSMCOB,IBLINE,ZC,ZCTOT,ZCN
"RTN","IBJTRX",36,0)
 N IBZ,IBRXDATA,IBRXIEN,IBRXFILL,IBCOBN,IBBPS,IB0,IBS,IBHPD,IBVL,IBCPY,IBM0
"RTN","IBJTRX",37,0)
 K ^TMP("IBJTRX",$J)
"RTN","IBJTRX",38,0)
 S VALMCNT=0
"RTN","IBJTRX",39,0)
 ;
"RTN","IBJTRX",40,0)
 S IBZ=+$O(^IBA(362.4,"C",IBIFN,0))
"RTN","IBJTRX",41,0)
 S IBRXDATA=$G(^IBA(362.4,IBZ,0))
"RTN","IBJTRX",42,0)
 S IBRXIEN=+$P(IBRXDATA,U,5)            ; RX ien ptr file 52
"RTN","IBJTRX",43,0)
 S IBRXFILL=+$P(IBRXDATA,U,10)          ; rx fill#
"RTN","IBJTRX",44,0)
 S IBCOBN=+$$COBN^IBCEF(IBIFN)          ; current payer sequence #
"RTN","IBJTRX",45,0)
 S IBBPS=$$CLAIM^BPSBUTL(IBRXIEN,IBRXFILL,IBCOBN)    ; DBIA 4719
"RTN","IBJTRX",46,0)
 ;
"RTN","IBJTRX",47,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBJTRX",48,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBJTRX",49,0)
 S IBS=$G(^DGCR(399,IBIFN,"S"))
"RTN","IBJTRX",50,0)
 S ECME=$P($P(IBM1,U,8),";",1)               ; ECME#
"RTN","IBJTRX",51,0)
 S ECMEAP=$P(IBM1,U,9)                       ; ECME approval number
"RTN","IBJTRX",52,0)
 S RXORG=$$RXSITE^IBCEF73A(IBIFN)            ; pharmacy file 4 ien
"RTN","IBJTRX",53,0)
 S DOCIEN=$$RXAPI1^IBNCPUT1(IBRXIEN,4,"I")   ; ien of doctor who wrote the Rx (52,4)
"RTN","IBJTRX",54,0)
 S (PHARMNPI,DOCNPI)=""
"RTN","IBJTRX",55,0)
 I RXORG S PHARMNPI=$P($$NPI^XUSNPI("Organization_ID",RXORG),U,1)   ; pharmacy NPI
"RTN","IBJTRX",56,0)
 I DOCIEN S DOCNPI=$P($$NPI^XUSNPI("Individual_ID",DOCIEN),U,1)     ; doctor NPI
"RTN","IBJTRX",57,0)
 I PHARMNPI'>0 S PHARMNPI="No NPI on file"
"RTN","IBJTRX",58,0)
 I DOCNPI'>0 S DOCNPI="No NPI on file"
"RTN","IBJTRX",59,0)
 ;
"RTN","IBJTRX",60,0)
 S RESPIEN=+$P(IBBPS,U,3)    ; BPS response file ien
"RTN","IBJTRX",61,0)
 I RESPIEN D
"RTN","IBJTRX",62,0)
 . ; IB*2.0*521 - add HPID from response to TPJI screen
"RTN","IBJTRX",63,0)
 . S IBM0=$G(^DGCR(399,IBIFN,"M")),IBCPY=$S($P(IB0,U,21)="P":$P(IBM0,U),$P(IB0,U,21)="S":$P(IBM0,U,2),1:$P(IBM0,"^",3))
"RTN","IBJTRX",64,0)
 . I $P($G(^BPSR(RESPIEN,560)),U,8)="01" S IBHPD=$P($G(^BPSR(RESPIEN,560)),U,9) S IBVL=$$HOD^IBCNHUT1(IBHPD,IBCPY)
"RTN","IBJTRX",65,0)
 . S ZR=RESPIEN_","
"RTN","IBJTRX",66,0)
 . S RSPSUB=+$O(^BPSR(RESPIEN,1000,0))
"RTN","IBJTRX",67,0)
 . I RSPSUB D
"RTN","IBJTRX",68,0)
 .. S ZM=RSPSUB_","_RESPIEN_","
"RTN","IBJTRX",69,0)
 .. D GETS^DIQ(9002313.0301,ZM,"129;133:137;505;506;507;509;517:520;571;572;2193","IEN","BPSM")  ; get selected $ amount fields
"RTN","IBJTRX",70,0)
 .. D GETS^DIQ(9002313.0301,ZM,"355.01*","IEN","BPSMCOB")  ; get cob/other payer data fields
"RTN","IBJTRX",71,0)
 .. Q
"RTN","IBJTRX",72,0)
 . Q
"RTN","IBJTRX",73,0)
 ;
"RTN","IBJTRX",74,0)
 S IBLINE=$$SETL("",ECME,"ECME No",25,11,1)
"RTN","IBJTRX",75,0)
 S IBLINE=$$SETL(IBLINE,PHARMNPI,"Pharmacy NPI",14,15,40)
"RTN","IBJTRX",76,0)
 D SET(IBLINE)
"RTN","IBJTRX",77,0)
 ;
"RTN","IBJTRX",78,0)
 S IBLINE=$$SETL("",ECMEAP,"ECME Ap No",25,11,1)
"RTN","IBJTRX",79,0)
 S IBLINE=$$SETL(IBLINE,DOCNPI,"Provider NPI",14,15,40)
"RTN","IBJTRX",80,0)
 D SET(IBLINE)
"RTN","IBJTRX",81,0)
 ; IB*2.0*521 - add validated HPID from response to TPJI screen
"RTN","IBJTRX",82,0)
 S:$G(IBVL)="" IBVL="^HPID/OEID" S IBLINE=$$SETL("",$G(IBHPD),$P(IBVL,U,2),25,11,1)
"RTN","IBJTRX",83,0)
 D SET(IBLINE)
"RTN","IBJTRX",84,0)
 ;
"RTN","IBJTRX",85,0)
 D SET(" ")
"RTN","IBJTRX",86,0)
 S IBLINE=$$SETL("",$P(IBRXDATA,U,1)_" / "_IBRXFILL,"Rx No",31,11,1)
"RTN","IBJTRX",87,0)
 S IBLINE=$$SETL(IBLINE,$$FMTE^XLFDT($P(IBRXDATA,U,3),"2Z"),"Date of Svc",8,15,40)
"RTN","IBJTRX",88,0)
 D SET(IBLINE)
"RTN","IBJTRX",89,0)
 ;
"RTN","IBJTRX",90,0)
 S IBLINE=$$SETL("",$$RXAPI1^IBNCPUT1(IBRXIEN,6,"E"),"Drug Name",36,11,1)
"RTN","IBJTRX",91,0)
 S IBLINE=$$SETL(IBLINE,$P(IBRXDATA,U,8),"NDC #",24,15,40)
"RTN","IBJTRX",92,0)
 D SET(IBLINE)
"RTN","IBJTRX",93,0)
 ;
"RTN","IBJTRX",94,0)
 S IBLINE=$$SETL("",$$AMT(+$P($G(^DGCR(399,IBIFN,"U1")),U,1)),"Billed Amt",36,11,1)
"RTN","IBJTRX",95,0)
 S IBLINE=$$SETL(IBLINE,$S(IBCOBN=2:"Secondary",IBCOBN=3:"Tertiary",1:"Primary"),"COB",15,15,40)
"RTN","IBJTRX",96,0)
 D SET(IBLINE)
"RTN","IBJTRX",97,0)
 ;
"RTN","IBJTRX",98,0)
 D SET(" ")
"RTN","IBJTRX",99,0)
 ;
"RTN","IBJTRX",100,0)
 ; For cancelled bills only, display the IB cancel status, date, and reason (IB*2*494)
"RTN","IBJTRX",101,0)
 I $P(IB0,U,13)=7 D
"RTN","IBJTRX",102,0)
 . S IBLINE=$$SETL("","CANCELLED ("_$$FMTE^XLFDT($P(IBS,U,17),"2DZ")_")","IB Status",20,11,1)
"RTN","IBJTRX",103,0)
 . S IBLINE=$$SETL(IBLINE,$P(IBS,U,19),"Reason",100,6,36)
"RTN","IBJTRX",104,0)
 . D SET(IBLINE),SET(" ")
"RTN","IBJTRX",105,0)
 . Q
"RTN","IBJTRX",106,0)
 ;
"RTN","IBJTRX",107,0)
 ; if response data is not available, get out here
"RTN","IBJTRX",108,0)
 ;
"RTN","IBJTRX",109,0)
 I 'RESPIEN D  G INITX
"RTN","IBJTRX",110,0)
 . D SET(" ECME Response Information is not on file.")
"RTN","IBJTRX",111,0)
 . D SET(" No further information available for display.")
"RTN","IBJTRX",112,0)
 . Q
"RTN","IBJTRX",113,0)
 ;
"RTN","IBJTRX",114,0)
 S IBLINE=$$SETL("",,"Payment Information",,20,1)
"RTN","IBJTRX",115,0)
 D SET(IBLINE,"3;2;19")
"RTN","IBJTRX",116,0)
 ;
"RTN","IBJTRX",117,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,506,"E"))),"Ingredient Cost Paid",15,26,1) D SET(IBLINE)
"RTN","IBJTRX",118,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,507,"E"))),"Dispensing Fee Paid",15,26,1) D SET(IBLINE)
"RTN","IBJTRX",119,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,505,"E")),,1),"Patient Resp (Ins)",15,26,1) D SET(IBLINE)
"RTN","IBJTRX",120,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,509,"E"))),"Expected Payment Amount",15,26,1) D SET(IBLINE)
"RTN","IBJTRX",121,0)
 ;
"RTN","IBJTRX",122,0)
 D SET(" ")
"RTN","IBJTRX",123,0)
 S IBLINE=$$SETL("",,"Patient Responsibility Amounts",,31,1)
"RTN","IBJTRX",124,0)
 D SET(IBLINE,"3;2;30")
"RTN","IBJTRX",125,0)
 ;
"RTN","IBJTRX",126,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,517,"E"))),"Deductible",10,13,1)
"RTN","IBJTRX",127,0)
 S IBLINE=$$SETL(IBLINE,$$AMT($G(BPSM(9002313.0301,ZM,572,"E"))),"Coinsurance",10,13,27)
"RTN","IBJTRX",128,0)
 S IBLINE=$$SETL(IBLINE,$$AMT($G(BPSM(9002313.0301,ZM,518,"E"))),"Amount of Copay",9,18,52)
"RTN","IBJTRX",129,0)
 D SET(IBLINE)
"RTN","IBJTRX",130,0)
 ;
"RTN","IBJTRX",131,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,137,"E"))),"Coverage Gap",10,13,1)
"RTN","IBJTRX",132,0)
 S IBLINE=$$SETL(IBLINE,$$AMT($G(BPSM(9002313.0301,ZM,571,"E"))),"Processor Fee",10,13,27)
"RTN","IBJTRX",133,0)
 S IBLINE=$$SETL(IBLINE,$$AMT($G(BPSM(9002313.0301,ZM,520,"E"))),"Exceed Benefit Max",9,18,52)
"RTN","IBJTRX",134,0)
 D SET(IBLINE)
"RTN","IBJTRX",135,0)
 ;
"RTN","IBJTRX",136,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,129,"E"))),"Health Plan-funded Assistance Amount",15,39,1)
"RTN","IBJTRX",137,0)
 D SET(IBLINE)
"RTN","IBJTRX",138,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,2193,"E"))),"Patient Pay Component Amount",15,39,1)
"RTN","IBJTRX",139,0)
 D SET(IBLINE)
"RTN","IBJTRX",140,0)
 ;
"RTN","IBJTRX",141,0)
 D SET(" ")
"RTN","IBJTRX",142,0)
 S IBLINE=$$SETL("",,"Product Selection Amounts",,26,1)
"RTN","IBJTRX",143,0)
 D SET(IBLINE,"3;2;25")
"RTN","IBJTRX",144,0)
 ;
"RTN","IBJTRX",145,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,519,"E"))),"Prod Sel Amt",12,21,1)
"RTN","IBJTRX",146,0)
 S IBLINE=$$SETL(IBLINE,$$AMT($G(BPSM(9002313.0301,ZM,135,"E"))),"Prod Sel /Non-Pref Formulary",9,33,37)
"RTN","IBJTRX",147,0)
 D SET(IBLINE)
"RTN","IBJTRX",148,0)
 ;
"RTN","IBJTRX",149,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,134,"E"))),"Prod Sel/Brand Drug",12,21,1)
"RTN","IBJTRX",150,0)
 S IBLINE=$$SETL(IBLINE,$$AMT($G(BPSM(9002313.0301,ZM,136,"E"))),"Prod Sel/Brand Non-Pref Formulary",9,33,37)
"RTN","IBJTRX",151,0)
 D SET(IBLINE)
"RTN","IBJTRX",152,0)
 ;
"RTN","IBJTRX",153,0)
 S IBLINE=$$SETL("",$$AMT($G(BPSM(9002313.0301,ZM,133,"E"))),"Provider Network Adj",12,21,1)
"RTN","IBJTRX",154,0)
 D SET(IBLINE)
"RTN","IBJTRX",155,0)
 ;
"RTN","IBJTRX",156,0)
 ; Display COB/Other Payer data
"RTN","IBJTRX",157,0)
 I '$D(BPSMCOB(9002313.035501)) D  G INITX
"RTN","IBJTRX",158,0)
 . D SET(" ")
"RTN","IBJTRX",159,0)
 . D SET(" No COB/Other Payer Data on file in the ECME Response.")
"RTN","IBJTRX",160,0)
 . Q
"RTN","IBJTRX",161,0)
 ;
"RTN","IBJTRX",162,0)
 S ZC="" F ZCTOT=0:1 S ZC=$O(BPSMCOB(9002313.035501,ZC)) Q:ZC=""     ; count how many entries exist
"RTN","IBJTRX",163,0)
 S ZC="",ZCN=0 F  S ZC=$O(BPSMCOB(9002313.035501,ZC)) Q:ZC=""  D
"RTN","IBJTRX",164,0)
 . S ZCN=ZCN+1
"RTN","IBJTRX",165,0)
 . D SET(" ")
"RTN","IBJTRX",166,0)
 . S IBLINE="COB/Other Payer ("_ZCN_" of "_ZCTOT_") (from other payer response message)"
"RTN","IBJTRX",167,0)
 . D SET(" "_IBLINE,"3;2;"_$L(IBLINE))
"RTN","IBJTRX",168,0)
 . S IBLINE=$$SETL("",$G(BPSMCOB(9002313.035501,ZC,356,"E")),"Other Payer Cardholder ID",40,27,1)
"RTN","IBJTRX",169,0)
 . D SET(IBLINE)
"RTN","IBJTRX",170,0)
 . S IBLINE=$$SETL("",$G(BPSMCOB(9002313.035501,ZC,144,"E")),"Other Payer Effective Date",10,27,1)
"RTN","IBJTRX",171,0)
 . S IBLINE=$$SETL(IBLINE,$G(BPSMCOB(9002313.035501,ZC,145,"E")),"Other Payer Termination Date",10,32,38)
"RTN","IBJTRX",172,0)
 . D SET(IBLINE)
"RTN","IBJTRX",173,0)
 . S IBLINE=$$SETL("",$G(BPSMCOB(9002313.035501,ZC,142,"E")),"Other Payer Person Code",6,27,1)
"RTN","IBJTRX",174,0)
 . S IBLINE=$$SETL(IBLINE,$G(BPSMCOB(9002313.035501,ZC,143,"E")),"Other Payer Pt Relationship Code",9,32,38)
"RTN","IBJTRX",175,0)
 . D SET(IBLINE)
"RTN","IBJTRX",176,0)
 . S IBLINE=$$SETL("",$G(BPSMCOB(9002313.035501,ZC,340,"E")),"Other Payer ID (BIN)",24,27,1)
"RTN","IBJTRX",177,0)
 . S IBLINE=$$SETL(IBLINE,$G(BPSMCOB(9002313.035501,ZC,991,"E")),"Other Payer PCN",9,32,38)
"RTN","IBJTRX",178,0)
 . D SET(IBLINE)
"RTN","IBJTRX",179,0)
 . S IBLINE=$$SETL("",$G(BPSMCOB(9002313.035501,ZC,992,"E")),"Other Payer Group ID",40,27,1)
"RTN","IBJTRX",180,0)
 . D SET(IBLINE)
"RTN","IBJTRX",181,0)
 . S IBLINE=$$SETL("",$G(BPSMCOB(9002313.035501,ZC,127,"E")),"Other Payer Help Desk",40,27,1)
"RTN","IBJTRX",182,0)
 . D SET(IBLINE)
"RTN","IBJTRX",183,0)
 . Q
"RTN","IBJTRX",184,0)
 ;
"RTN","IBJTRX",185,0)
INITX ;
"RTN","IBJTRX",186,0)
 D SET(" "),SET(" ")
"RTN","IBJTRX",187,0)
 Q
"RTN","IBJTRX",188,0)
 ;
"RTN","IBJTRX",189,0)
VER ; Action to launch the View ePharmacy Rx report
"RTN","IBJTRX",190,0)
 N BPSVRX
"RTN","IBJTRX",191,0)
 K ^TMP("BPSVRX-TPJI",$J)
"RTN","IBJTRX",192,0)
 D FULL^VALM1
"RTN","IBJTRX",193,0)
 I $G(IBRXDATA)="" W !!,"System error. IBRXDATA missing." D PAUSE^VALM1 G VERX
"RTN","IBJTRX",194,0)
 ;
"RTN","IBJTRX",195,0)
 ; save the current TPJI display array data
"RTN","IBJTRX",196,0)
 M ^TMP("BPSVRX-TPJI",$J,"IBJTCA")=^TMP("IBJTCA",$J)
"RTN","IBJTRX",197,0)
 M ^TMP("BPSVRX-TPJI",$J,"IBJTRX")=^TMP("IBJTRX",$J)
"RTN","IBJTRX",198,0)
 M ^TMP("BPSVRX-TPJI",$J,"IBTPJI")=^TMP($J,"IBTPJI")
"RTN","IBJTRX",199,0)
 ;
"RTN","IBJTRX",200,0)
 S BPSVRX("RXIEN")=+$P(IBRXDATA,U,5)            ; RX ien ptr file 52
"RTN","IBJTRX",201,0)
 S BPSVRX("FILL#")=+$P(IBRXDATA,U,10)           ; rx fill#
"RTN","IBJTRX",202,0)
 D ^BPSVRX                                      ; DBIA #5723
"RTN","IBJTRX",203,0)
 ;
"RTN","IBJTRX",204,0)
 ; After returning from this List Manager report, we need to rebuild
"RTN","IBJTRX",205,0)
 ; the display array for the TPJI screens because they are killed by the report.
"RTN","IBJTRX",206,0)
 I '$D(^TMP("IBJTCA",$J)) M ^TMP("IBJTCA",$J)=^TMP("BPSVRX-TPJI",$J,"IBJTCA")
"RTN","IBJTRX",207,0)
 I '$D(^TMP("IBJTRX",$J)) M ^TMP("IBJTRX",$J)=^TMP("BPSVRX-TPJI",$J,"IBJTRX")
"RTN","IBJTRX",208,0)
 I '$D(^TMP($J,"IBTPJI")) M ^TMP($J,"IBTPJI")=^TMP("BPSVRX-TPJI",$J,"IBTPJI")
"RTN","IBJTRX",209,0)
 ;
"RTN","IBJTRX",210,0)
VERX ;
"RTN","IBJTRX",211,0)
 S VALMBCK="R"
"RTN","IBJTRX",212,0)
 K ^TMP("BPSVRX-TPJI",$J)
"RTN","IBJTRX",213,0)
 Q
"RTN","IBJTRX",214,0)
 ;
"RTN","IBJTRX",215,0)
HELP ; -- help code
"RTN","IBJTRX",216,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTRX",217,0)
 Q
"RTN","IBJTRX",218,0)
 ;
"RTN","IBJTRX",219,0)
EXIT ; -- exit code
"RTN","IBJTRX",220,0)
 K ^TMP("IBJTRX",$J)
"RTN","IBJTRX",221,0)
 I $D(VALMEVL) D CLEAN^VALM10,KILL^VALM10()
"RTN","IBJTRX",222,0)
 Q
"RTN","IBJTRX",223,0)
 ;
"RTN","IBJTRX",224,0)
SETL(TEXT,DATA,LABEL,LEND,LENL,COL) ; build line of text
"RTN","IBJTRX",225,0)
 ;  TEXT - existing line of text data
"RTN","IBJTRX",226,0)
 ;  DATA - field data
"RTN","IBJTRX",227,0)
 ; LABEL - field label
"RTN","IBJTRX",228,0)
 ;  LEND - max length of data
"RTN","IBJTRX",229,0)
 ;  LENL - length of label (label will be right justified so the colons line up)
"RTN","IBJTRX",230,0)
 ;   COL - starting column for insert
"RTN","IBJTRX",231,0)
 ;
"RTN","IBJTRX",232,0)
 N D1,STR S D1="",COL=$G(COL,1)
"RTN","IBJTRX",233,0)
 I $G(LABEL)'="" S D1=$J(LABEL,+$G(LENL))
"RTN","IBJTRX",234,0)
 I $D(DATA) S D1=D1_": "_$$FO^IBCNEUT1(DATA,+$G(LEND))
"RTN","IBJTRX",235,0)
 S STR=$$SETSTR^VALM1(D1,$G(TEXT),COL,$L(D1))
"RTN","IBJTRX",236,0)
 ;
"RTN","IBJTRX",237,0)
 Q $E(STR,1,80)
"RTN","IBJTRX",238,0)
 ;
"RTN","IBJTRX",239,0)
SET(TEXT,VID) ; set data in variable TEXT into ListMan display
"RTN","IBJTRX",240,0)
 ; VID is video attribute data of line if any
"RTN","IBJTRX",241,0)
 ;      Format: type;start column;width
"RTN","IBJTRX",242,0)
 ;      type=1 (reverse video)
"RTN","IBJTRX",243,0)
 ;      type=2 (bold)
"RTN","IBJTRX",244,0)
 ;      type=3 (underline)
"RTN","IBJTRX",245,0)
 ;
"RTN","IBJTRX",246,0)
 S VALMCNT=VALMCNT+1
"RTN","IBJTRX",247,0)
 S ^TMP("IBJTRX",$J,VALMCNT,0)=$G(TEXT)    ; set text line into display array
"RTN","IBJTRX",248,0)
 I $G(VID)="" G SETX
"RTN","IBJTRX",249,0)
 ;
"RTN","IBJTRX",250,0)
 ; video attributes
"RTN","IBJTRX",251,0)
 N ON,OFF
"RTN","IBJTRX",252,0)
 S ON=$S(+VID=1:IORVON,+VID=2:IOINHI,1:IOUON)
"RTN","IBJTRX",253,0)
 S OFF=$S(+VID=1:IORVOFF,+VID=2:IOINORM,1:IOUOFF)
"RTN","IBJTRX",254,0)
 D CNTRL^VALM10(VALMCNT,+$P(VID,";",2),+$P(VID,";",3),ON,OFF)
"RTN","IBJTRX",255,0)
 ;
"RTN","IBJTRX",256,0)
SETX ;
"RTN","IBJTRX",257,0)
 Q
"RTN","IBJTRX",258,0)
 ;
"RTN","IBJTRX",259,0)
AMT(VAL,L,P) ; convert dollar amount to external display
"RTN","IBJTRX",260,0)
 ; VAL can be a number or the Fileman external version of the number
"RTN","IBJTRX",261,0)
 ;   L is the $J field length (default 8)
"RTN","IBJTRX",262,0)
 ;   P is a flag indicating the number should be enclosed within parentheses
"RTN","IBJTRX",263,0)
 ; strip $ and spaces
"RTN","IBJTRX",264,0)
 S VAL=+$TR($G(VAL),"$ ")
"RTN","IBJTRX",265,0)
 I '$G(L) S L=8
"RTN","IBJTRX",266,0)
 I $G(P) Q $J($FN(-VAL,"P",2),L+1)
"RTN","IBJTRX",267,0)
 Q $J(VAL,L,2)
"RTN","IBJTRX",268,0)
 ;
"RTN","IBNCPDP1")
0^7^B180640575
"RTN","IBNCPDP1",1,0)
IBNCPDP1 ;OAK/ELZ - IB BILLING DETERMINATION PROCESSING FOR NEW RX REQUESTS ;5/22/08
"RTN","IBNCPDP1",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,339,363,383,405,384,411,434,437,435,455,452,473,494,534,550,617**;21-MAR-94;Build 43
"RTN","IBNCPDP1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBNCPDP1",4,0)
 ;
"RTN","IBNCPDP1",5,0)
 ; Reference to CL^SDCO21 supported by IA# 406
"RTN","IBNCPDP1",6,0)
 ; Reference to IN5^VADPT supported by IA# 10061
"RTN","IBNCPDP1",7,0)
 ; Reference to $$MWC^PSOBPSU2 supported by IA# 4970
"RTN","IBNCPDP1",8,0)
 ;
"RTN","IBNCPDP1",9,0)
RX(DFN,IBD) ; pharmacy package call, passing in IBD by ref
"RTN","IBNCPDP1",10,0)
 ; this is called by PSO for all prescriptions issued, return is
"RTN","IBNCPDP1",11,0)
 ; a response to bill ECME or not with array for billing data elements
"RTN","IBNCPDP1",12,0)
 ;
"RTN","IBNCPDP1",13,0)
 ;warning: back-billing flag:
"RTN","IBNCPDP1",14,0)
 ;if passed IBSCRES(IBRXN,IBFIL)=1
"RTN","IBNCPDP1",15,0)
 ; - then the SC Determination is just done by the IB clerk (billable)
"RTN","IBNCPDP1",16,0)
 ; - set by routine IBNCPBB
"RTN","IBNCPDP1",17,0)
 ;
"RTN","IBNCPDP1",18,0)
 ; IBD("PLAN") - is specified only if RX API is called for billing
"RTN","IBNCPDP1",19,0)
 ; determination for secondary claims or if the user is resubmitting
"RTN","IBNCPDP1",20,0)
 ; a claim from the PSO Reject Information Screen.
"RTN","IBNCPDP1",21,0)
 ;
"RTN","IBNCPDP1",22,0)
 ;clean up the list of non-answered SC/Env.indicators questions and INS
"RTN","IBNCPDP1",23,0)
 K IBD("SC/EI NO ANSW"),IBD("INS")
"RTN","IBNCPDP1",24,0)
 ;
"RTN","IBNCPDP1",25,0)
 N IBTRKR,IBARR,IBADT,IBRXN,IBFIL,IBTRKRN,IBRMARK,IBANY,IBX,IBT,IBINS,IBSAVE,IBPRDATA,IBDISPFEE,IBADMINFEE
"RTN","IBNCPDP1",26,0)
 N IBFEE,IBBI,IBIT,IBPRICE,IBRS,IBRT,IBTRN,IBCHG,IBRES,IBNEEDS,IBELIG,IBDEA,IBPTYP,IBACDUTY,IBINSXRES
"RTN","IBNCPDP1",27,0)
 ;
"RTN","IBNCPDP1",28,0)
 ; eligibility verification request flag - esg 9/9/10 IB*2*435
"RTN","IBNCPDP1",29,0)
 S IBELIG=($G(IBD("RX ACTION"))="ELIG")
"RTN","IBNCPDP1",30,0)
 ;
"RTN","IBNCPDP1",31,0)
 I '$G(DFN) S IBRES="0^No DFN" G RXQ
"RTN","IBNCPDP1",32,0)
 ;
"RTN","IBNCPDP1",33,0)
 S IBRES="0^Error"
"RTN","IBNCPDP1",34,0)
 S IBADT=+$G(IBD("DOS"),DT)      ; date of service (default to today)
"RTN","IBNCPDP1",35,0)
 ;
"RTN","IBNCPDP1",36,0)
 ; -- gather all active pharmacy insurance policies for patient on date of service
"RTN","IBNCPDP1",37,0)
 D RXINS^IBNCPDPU(DFN,IBADT,.IBINS)
"RTN","IBNCPDP1",38,0)
 ;
"RTN","IBNCPDP1",39,0)
 ; -- determine rate type
"RTN","IBNCPDP1",40,0)
 S IBRT=$$RT^IBNCPDPU(DFN,IBADT,.IBINS,.IBPTYP)
"RTN","IBNCPDP1",41,0)
 ;
"RTN","IBNCPDP1",42,0)
 ; If the rate type was selected by the user for manual primary or secondary claims processing, then update IBRT
"RTN","IBNCPDP1",43,0)
 I $G(IBD("RTYPE")),$G(IBD("PLAN")) D
"RTN","IBNCPDP1",44,0)
 . S $P(IBRT,U,1)=+IBD("RTYPE")                              ; overwrite the rate type ien [1]
"RTN","IBNCPDP1",45,0)
 . S $P(IBRT,U,2)=$$COSTTYP^IBNCPUT3(+IBD("RTYPE"),IBADT)    ; overwrite the basis of cost determination [2]
"RTN","IBNCPDP1",46,0)
 . I $P(IBRT,U,3)="" S $P(IBRT,U,3)=IBPTYP                   ; overwrite eligibility if null [3]
"RTN","IBNCPDP1",47,0)
 . Q
"RTN","IBNCPDP1",48,0)
 ;
"RTN","IBNCPDP1",49,0)
 ; -- Process an eligibility verification request
"RTN","IBNCPDP1",50,0)
 I IBELIG D  G RXQ
"RTN","IBNCPDP1",51,0)
 . S IBRES=1
"RTN","IBNCPDP1",52,0)
 . D SETINSUR(IBADT,IBRT,IBELIG,.IBINS,.IBD,.IBRES)
"RTN","IBNCPDP1",53,0)
 . Q
"RTN","IBNCPDP1",54,0)
 ;
"RTN","IBNCPDP1",55,0)
 ; additional data integrity checks
"RTN","IBNCPDP1",56,0)
 S IBRXN=+$G(IBD("IEN")) I 'IBRXN S IBRES="0^No Rx IEN" G RXQ
"RTN","IBNCPDP1",57,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G RXQ
"RTN","IBNCPDP1",58,0)
 S IBD("QTY")=+$G(IBD("QTY")) I 'IBD("QTY") S IBRES="0^No Quantity" G RXQ
"RTN","IBNCPDP1",59,0)
 ;
"RTN","IBNCPDP1",60,0)
 ; -- Gather claims tracking information if it exists
"RTN","IBNCPDP1",61,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP1",62,0)
 ; date can't be before parameters
"RTN","IBNCPDP1",63,0)
 S $P(IBTRKR,U)=$S('$P(IBTRKR,U,4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP1",64,0)
 ; already in claims tracking
"RTN","IBNCPDP1",65,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP1",66,0)
 ;
"RTN","IBNCPDP1",67,0)
 ; Gather and store insurance information in the IBD("INS") insurance array
"RTN","IBNCPDP1",68,0)
 D SETINSUR(IBADT,IBRT,IBELIG,.IBINS,.IBD,.IBRES)
"RTN","IBNCPDP1",69,0)
 I $G(IBD("NO ECME INSURANCE")) S IBINSXRES=$G(IBRES)      ; save IBRES when there are insurance errors
"RTN","IBNCPDP1",70,0)
 ;
"RTN","IBNCPDP1",71,0)
 ;for secondary billing - skip claim tracking functionality
"RTN","IBNCPDP1",72,0)
 G:$G(IBD("RXCOB"))>1 GETINS
"RTN","IBNCPDP1",73,0)
 ;
"RTN","IBNCPDP1",74,0)
 ; -- claims tracking info
"RTN","IBNCPDP1",75,0)
 I IBTRKRN,$$PAPERBIL^IBNCPNB(IBTRKRN) S IBRES="0^Existing IB Bill in CT",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",76,0)
 ;
"RTN","IBNCPDP1",77,0)
 ; -- no pharmacy coverage, update ct if applicable, quit
"RTN","IBNCPDP1",78,0)
 I '$$PTCOV^IBCNSU3(DFN,IBADT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED") D:$P(IBTRKR,U,4)=2 CT S IBRES="0^"_IBRMARK,IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",79,0)
 ;
"RTN","IBNCPDP1",80,0)
 ; Environmental Indicators Validation
"RTN","IBNCPDP1",81,0)
 ; Find out if the patient is Active Duty - IB*2*534
"RTN","IBNCPDP1",82,0)
 S IBACDUTY=$P(IBRT,U,3)="T"&$$ACDUTY^IBNCPDPU(DFN)
"RTN","IBNCPDP1",83,0)
 ; Retrieve indicators from file #52 and overwrite the indicators in IBD array
"RTN","IBNCPDP1",84,0)
 D GETINDIC^IBNCPUT2(+IBD("IEN"),.IBD)
"RTN","IBNCPDP1",85,0)
 ; Process patient exemptions if any and if not already resolved
"RTN","IBNCPDP1",86,0)
 S IBNEEDS=0 ;flag will be set to 1 if at least one of the questions wasn't answered
"RTN","IBNCPDP1",87,0)
 I $G(IBD("SC/EI OVR"))'=1,'IBACDUTY D
"RTN","IBNCPDP1",88,0)
 . D CL^SDCO21(DFN,IBADT,"",.IBARR)
"RTN","IBNCPDP1",89,0)
 . I $D(IBARR)>9 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX),";;",2) Q:IBT=""  D:$D(IBARR(+IBT))
"RTN","IBNCPDP1",90,0)
 . . I $G(IBD($P(IBT,U,2)))=0 Q
"RTN","IBNCPDP1",91,0)
 . . I $G(IBD($P(IBT,U,2))) S IBRMARK=$P(IBT,U,3) Q
"RTN","IBNCPDP1",92,0)
 . . I '$G(IBSCRES(IBRXN,IBFIL)) S IBNEEDS=1 D
"RTN","IBNCPDP1",93,0)
 . . . S IBD("SC/EI NO ANSW")=$S($G(IBD("SC/EI NO ANSW"))="":$P(IBT,U,2),1:$G(IBD("SC/EI NO ANSW"))_","_$P(IBT,U,2))
"RTN","IBNCPDP1",94,0)
 I '$D(IBRMARK),IBNEEDS=1 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBNCPDP1",95,0)
 I $D(IBRMARK) D CT S IBRES="0^"_IBRMARK G RXQ
"RTN","IBNCPDP1",96,0)
 ;
"RTN","IBNCPDP1",97,0)
 ;  -- check for drug billable
"RTN","IBNCPDP1",98,0)
 I '$$BILLABLE^IBNCPDP($G(IBD("DRUG")),$P(IBRT,U,3),.IBRMARK,.IBD) S IBRES="0^"_IBRMARK D CT G RXQ
"RTN","IBNCPDP1",99,0)
 ;
"RTN","IBNCPDP1",100,0)
 ; -- check for sensitive diagnosis drug and ROI on file
"RTN","IBNCPDP1",101,0)
 I $$SENS^IBNCPDR($G(IBD("DRUG")),.IBD),$D(IBD("INS",1,3)) D
"RTN","IBNCPDP1",102,0)
 . I '$$ROI^IBNCPDR4(DFN,$G(IBD("DRUG")),+$P($G(IBD("INS",1,3)),U,5),IBADT) D  Q
"RTN","IBNCPDP1",103,0)
 .. ;
"RTN","IBNCPDP1",104,0)
 .. ; no active ROI found for patient/drug/insurance/DOS
"RTN","IBNCPDP1",105,0)
 .. S IBRMARK="ROI NOT OBTAINED"
"RTN","IBNCPDP1",106,0)
 .. S IBRES="0^NO ACTIVE/VALID ROI FOR DRUG OR INSURANCE"      ; PSO routine PSOREJU3 contains this text
"RTN","IBNCPDP1",107,0)
 .. Q
"RTN","IBNCPDP1",108,0)
 . ;
"RTN","IBNCPDP1",109,0)
 . ; active ROI found, clear out RNB from Claims Tracking and variable IBRMARK
"RTN","IBNCPDP1",110,0)
 . D ROICLN^IBNCPDR4(IBTRKRN,IBRXN,IBFIL)
"RTN","IBNCPDP1",111,0)
 . I $G(IBRMARK)["ROI" K IBRMARK
"RTN","IBNCPDP1",112,0)
 . Q
"RTN","IBNCPDP1",113,0)
 I $D(IBRMARK) D CT G RXQ
"RTN","IBNCPDP1",114,0)
 ;
"RTN","IBNCPDP1",115,0)
 ; Clean-up the NEEDS SC DETERMINATION record if resolved
"RTN","IBNCPDP1",116,0)
 ; And check if it is non-billable in CT
"RTN","IBNCPDP1",117,0)
 I IBTRKRN D
"RTN","IBNCPDP1",118,0)
 . N IBNBR,IBNBRT
"RTN","IBNCPDP1",119,0)
 . S IBNBR=$P($G(^IBT(356,+IBTRKRN,0)),U,19) Q:'IBNBR
"RTN","IBNCPDP1",120,0)
 . S IBNBRT=$P($G(^IBE(356.8,IBNBR,0)),U) Q:IBNBRT=""
"RTN","IBNCPDP1",121,0)
 . ;
"RTN","IBNCPDP1",122,0)
 . ; if refill was deleted (not RX) and now the refill is re-entered
"RTN","IBNCPDP1",123,0)
 . ;use $$RXSTATUS^IBNCPRR instead of $G(^PSRX(IBRXN,"STA"))
"RTN","IBNCPDP1",124,0)
 . I IBNBRT="PRESCRIPTION DELETED",$$RXSTATUS^IBNCPRR(DFN,IBRXN)'=13 D  Q
"RTN","IBNCPDP1",125,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",126,0)
 . . ; clean up REASON NOT BILLABLE and ADDITIONAL COMMENT
"RTN","IBNCPDP1",127,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@;1.08////@" D ^DIE
"RTN","IBNCPDP1",128,0)
 . ;
"RTN","IBNCPDP1",129,0)
 . ; Clean up NBR if released
"RTN","IBNCPDP1",130,0)
 . I IBNBRT="PRESCRIPTION NOT RELEASED" D:$G(IBD("RELEASE DATE"))  Q
"RTN","IBNCPDP1",131,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",132,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",133,0)
 . ;
"RTN","IBNCPDP1",134,0)
 . ; Clean up 'Needs SC determ'
"RTN","IBNCPDP1",135,0)
 . I IBNBRT="NEEDS SC DETERMINATION" D  Q
"RTN","IBNCPDP1",136,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",137,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",138,0)
 . ;
"RTN","IBNCPDP1",139,0)
 . ; Clean up 'DRUG NOT BILLABLE' since we made it through the $$BILLABLE function above - IB*2*550
"RTN","IBNCPDP1",140,0)
 . I IBNBRT="DRUG NOT BILLABLE" D  Q
"RTN","IBNCPDP1",141,0)
 .. N DIE,DA,DR
"RTN","IBNCPDP1",142,0)
 .. S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@;1.08////@" D ^DIE
"RTN","IBNCPDP1",143,0)
 .. Q
"RTN","IBNCPDP1",144,0)
 . ;
"RTN","IBNCPDP1",145,0)
 . S IBRMARK=IBNBRT
"RTN","IBNCPDP1",146,0)
 I $D(IBRMARK) S IBRES="0^Non-Billable in CT: "_IBRMARK G RXQ
"RTN","IBNCPDP1",147,0)
 ;
"RTN","IBNCPDP1",148,0)
GETINS ; -- examine the insurance data for a patient
"RTN","IBNCPDP1",149,0)
 ;
"RTN","IBNCPDP1",150,0)
 ; if insurance errors were detected earlier, then restore IBRES and get out
"RTN","IBNCPDP1",151,0)
 I $G(IBD("NO ECME INSURANCE")) S IBRES=$G(IBINSXRES) G RXQ
"RTN","IBNCPDP1",152,0)
 ;
"RTN","IBNCPDP1",153,0)
RATEPRIC ; determine rates/prices to use
"RTN","IBNCPDP1",154,0)
 ;
"RTN","IBNCPDP1",155,0)
 I 'IBRT D CT S IBRES="0^Cannot determine Rate type" G RXQ
"RTN","IBNCPDP1",156,0)
 S IBBI=$$EVNTITM^IBCRU3(+IBRT,3,"PRESCRIPTION FILL",IBADT,.IBRS)
"RTN","IBNCPDP1",157,0)
 I 'IBBI,$P(IBBI,";")'="VA COST" D CT S IBRES="0^Cannot find Billable Item" G RXQ
"RTN","IBNCPDP1",158,0)
 ;
"RTN","IBNCPDP1",159,0)
 ; Check for missing NDC
"RTN","IBNCPDP1",160,0)
 I $G(IBD("NDC"))="" D CT S IBRES="0^Missing NDC" G RXQ
"RTN","IBNCPDP1",161,0)
 ;
"RTN","IBNCPDP1",162,0)
 ;1;BEDSECTION;1^
"RTN","IBNCPDP1",163,0)
 ;IBRS(1,18,5)=
"RTN","IBNCPDP1",164,0)
 S IBRS=+$O(IBRS($P(IBBI,";"),0))
"RTN","IBNCPDP1",165,0)
 S IBIT=$$ITPTR^IBCRU2($P(IBBI,";"),$S($P(IBRT,U,2)="A":$$NDC^IBNCPNB($G(IBD("NDC"))),1:"PRESCRIPTION"))
"RTN","IBNCPDP1",166,0)
 I 'IBIT,$P(IBRT,U,2)'="C" D CT S IBRES="0^Cannot find Item Pointer" G RXQ
"RTN","IBNCPDP1",167,0)
 ;8
"RTN","IBNCPDP1",168,0)
 S IBPRICE=+$$BICOST^IBCRCI(+IBRT,3,IBADT,"PRESCRIPTION FILL",+IBIT,,,$S($P(IBRT,U,2)="A":IBD("QTY"),1:1))
"RTN","IBNCPDP1",169,0)
 ;36^2991001
"RTN","IBNCPDP1",170,0)
 ;
"RTN","IBNCPDP1",171,0)
 ; return the true value of drug cost for 3rd party bill if it is zero
"RTN","IBNCPDP1",172,0)
 I IBD("COST")=0,$P($G(^DGCR(399.3,+$P(IBRT,U,1),0)),U,5) S IBD("COST")=$$RXPCT(.IBD,.BWHERE)
"RTN","IBNCPDP1",173,0)
 ;
"RTN","IBNCPDP1",174,0)
 ; get fees if any, ignore return, don't care about price, just need fees
"RTN","IBNCPDP1",175,0)
 S IBCHG=$$RATECHG^IBCRCC(+IBRS,$S($P(IBRT,U,2)'="C":1,1:IBD("QTY")*IBD("COST")),IBADT,.IBFEE)
"RTN","IBNCPDP1",176,0)
 I $P(IBRT,U,2)="C" S IBPRICE=+IBCHG
"RTN","IBNCPDP1",177,0)
 ;
"RTN","IBNCPDP1",178,0)
 S IBDISPFEE=+$P($G(IBFEE),U,1)     ; dispensing fee
"RTN","IBNCPDP1",179,0)
 S IBADMINFEE=+$P($G(IBFEE),U,2)    ; administrative fee
"RTN","IBNCPDP1",180,0)
 ;
"RTN","IBNCPDP1",181,0)
 I 'IBPRICE D CT S IBRES="0^Cannot find price for Item" G RXQ
"RTN","IBNCPDP1",182,0)
 ;
"RTN","IBNCPDP1",183,0)
 ; build pricing data string
"RTN","IBNCPDP1",184,0)
 S IBPRDATA=""
"RTN","IBNCPDP1",185,0)
 S $P(IBPRDATA,U,1)=IBDISPFEE                     ; dispensing fee
"RTN","IBNCPDP1",186,0)
 S $P(IBPRDATA,U,2)=$S($P(IBRT,U,2)="A":"01",$P(IBRT,U,2)="C":"05",1:"07")   ; basis of cost determination
"RTN","IBNCPDP1",187,0)
 S $P(IBPRDATA,U,3)=$S($P(IBRT,U,2)="C":IBD("QTY")*IBD("COST")+IBDISPFEE,$P(IBRT,U,2)="A":IBPRICE-IBDISPFEE-IBADMINFEE,1:IBPRICE)   ; basis of cost amount
"RTN","IBNCPDP1",188,0)
 S $P(IBPRDATA,U,4)=IBPRICE                       ; gross amount due
"RTN","IBNCPDP1",189,0)
 S $P(IBPRDATA,U,5)=IBADMINFEE                    ; administrative fee
"RTN","IBNCPDP1",190,0)
 S $P(IBPRDATA,U,6)=IBD("QTY")*IBD("COST")        ; ingredient cost
"RTN","IBNCPDP1",191,0)
 S $P(IBPRDATA,U,7)=IBPRICE-IBADMINFEE            ; usual & customary charge (U&C)
"RTN","IBNCPDP1",192,0)
 ;
"RTN","IBNCPDP1",193,0)
 ; store the pricing data string on each node 2 that may exist
"RTN","IBNCPDP1",194,0)
 S IBX=0 F  S IBX=$O(IBD("INS",IBX)) Q:'IBX  S IBD("INS",IBX,2)=IBPRDATA
"RTN","IBNCPDP1",195,0)
 ;
"RTN","IBNCPDP1",196,0)
 S IBRES=$S($D(IBRMARK):"0^"_IBRMARK,1:1)
"RTN","IBNCPDP1",197,0)
 I IBRES,'$G(IBD("RELEASE DATE")) S IBRMARK="PRESCRIPTION NOT RELEASED"
"RTN","IBNCPDP1",198,0)
 ;
"RTN","IBNCPDP1",199,0)
 D CT
"RTN","IBNCPDP1",200,0)
 ;
"RTN","IBNCPDP1",201,0)
RXQ ; final processing
"RTN","IBNCPDP1",202,0)
 ; set the 3rd piece of IBRES (default Vet)
"RTN","IBNCPDP1",203,0)
 S $P(IBRES,U,3)=$S($L($P($G(IBRT),U,3)):$P(IBRT,U,3),1:"V")
"RTN","IBNCPDP1",204,0)
 ;
"RTN","IBNCPDP1",205,0)
 ; possibly add entries to files 366.14 and 366.15 (not for eligibility verification requests)
"RTN","IBNCPDP1",206,0)
 I 'IBELIG D
"RTN","IBNCPDP1",207,0)
 . I IBRES D START^IBNCPDP6(IBRXN_";"_IBFIL,$P(IBRES,U,3),+IBRT)
"RTN","IBNCPDP1",208,0)
 . D LOG^IBNCPDP2("BILLABLE STATUS CHECK",IBRES)
"RTN","IBNCPDP1",209,0)
 . Q
"RTN","IBNCPDP1",210,0)
 ;
"RTN","IBNCPDP1",211,0)
 Q IBRES
"RTN","IBNCPDP1",212,0)
 ;
"RTN","IBNCPDP1",213,0)
 ;
"RTN","IBNCPDP1",214,0)
CT ; files in claims tracking
"RTN","IBNCPDP1",215,0)
 Q:$G(IBD("RXCOB"))>1  ;Claim Tracking is updated only for the primary payer (payer sequence =1)
"RTN","IBNCPDP1",216,0)
 ;If null then the payer sequence = Primary is assumed
"RTN","IBNCPDP1",217,0)
 I IBTRKR D CT^IBNCPDPU(DFN,IBRXN,IBFIL,IBADT,$G(IBRMARK))
"RTN","IBNCPDP1",218,0)
 Q
"RTN","IBNCPDP1",219,0)
 ;
"RTN","IBNCPDP1",220,0)
SETINSUR(IBADT,IBRT,IBELIG,IBINS,IBD,IBRES) ; build insurance data array
"RTN","IBNCPDP1",221,0)
 ; Input variables:
"RTN","IBNCPDP1",222,0)
 ;    IBADT - date of service/identify insurance as of this date
"RTN","IBNCPDP1",223,0)
 ;     IBRT - rate type variable - [1] rate type ien, [2] type (A/C/T), [3] eligibility (V/T/C)
"RTN","IBNCPDP1",224,0)
 ;   IBELIG - eligibility request flag (1/0)
"RTN","IBNCPDP1",225,0)
 ;    IBINS - insurance array as returned by RXINS^IBNCPDPU
"RTN","IBNCPDP1",226,0)
 ;      IBD - input/output - array entries passed in and certain array entries returned
"RTN","IBNCPDP1",227,0)
 ; Output variable:
"RTN","IBNCPDP1",228,0)
 ;    IBRES - only returned if insurance errors
"RTN","IBNCPDP1",229,0)
 ;
"RTN","IBNCPDP1",230,0)
 ; Note: if more than one insurance with the same COB then the latest insurance occurrence overrides the first one(s)
"RTN","IBNCPDP1",231,0)
 ; Example:
"RTN","IBNCPDP1",232,0)
 ; IBINS("S",1,1)=""
"RTN","IBNCPDP1",233,0)
 ; IBINS("S",1,3)="" <<--- this will be primary
"RTN","IBNCPDP1",234,0)
 ;
"RTN","IBNCPDP1",235,0)
 K IBD("INS"),IBD("NO ECME INSURANCE")
"RTN","IBNCPDP1",236,0)
 ;
"RTN","IBNCPDP1",237,0)
 N IBCNT,IBERMSG,IBRXPOL,IBT,IBX
"RTN","IBNCPDP1",238,0)
 ; IBERMSG - error message array
"RTN","IBNCPDP1",239,0)
 ; IBRXPOL - array of Rx policies found
"RTN","IBNCPDP1",240,0)
 ;
"RTN","IBNCPDP1",241,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D
"RTN","IBNCPDP1",242,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D
"RTN","IBNCPDP1",243,0)
 .. N IBDAT,IBPL,IBINSN,IBPIEN,IBY,IBZ,IBCHNM,IBREL,IBPLNTYP
"RTN","IBNCPDP1",244,0)
 .. S IBZ=$G(IBINS(IBT,0)) Q:IBZ=""
"RTN","IBNCPDP1",245,0)
 .. S IBPL=$P(IBZ,U,18) ; plan
"RTN","IBNCPDP1",246,0)
 .. Q:'IBPL
"RTN","IBNCPDP1",247,0)
 .. Q:'$$PLCOV^IBCNSU3(IBPL,IBADT,3)           ; not a pharmacy plan
"RTN","IBNCPDP1",248,0)
 .. I $G(IBD("PLAN")) Q:IBPL'=$G(IBD("PLAN"))  ; skip other plans if we call RX API for a specific plan (IBD("PLAN"))
"RTN","IBNCPDP1",249,0)
 .. ;
"RTN","IBNCPDP1",250,0)
 .. ; at this point we have found an Rx policy.  We'll count these up later by IBX.
"RTN","IBNCPDP1",251,0)
 .. S IBRXPOL(IBX,IBT)=""
"RTN","IBNCPDP1",252,0)
 .. ;
"RTN","IBNCPDP1",253,0)
 .. S IBPLNTYP=$P($G(^IBE(355.1,+$P($G(IBINS(IBT,355.3)),U,9),0)),U,1)   ; type of plan name, insurance plan type
"RTN","IBNCPDP1",254,0)
 .. I '$G(IBD("PLAN")) I '$D(IBD("INS",IBX)),$P(IBRT,U,3)="V",(IBPLNTYP["TRICARE"!(IBPLNTYP="CHAMPVA")) S IBERMSG(IBX)=IBPLNTYP_" coverage for a Veteran" Q
"RTN","IBNCPDP1",255,0)
 .. ;
"RTN","IBNCPDP1",256,0)
 .. S IBPIEN=+$G(^IBA(355.3,+IBPL,6))
"RTN","IBNCPDP1",257,0)
 .. I 'IBPIEN S IBERMSG(IBX)="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDP1",258,0)
 .. ;
"RTN","IBNCPDP1",259,0)
 .. K IBY D STCHK^IBCNRU1(IBPIEN,.IBY,IBELIG)
"RTN","IBNCPDP1",260,0)
 .. I $E($G(IBY(1)))'="A" S IBERMSG(IBX)=$$ERMSG^IBNCPNB($G(IBY(6))) Q  ; not active
"RTN","IBNCPDP1",261,0)
 .. ;
"RTN","IBNCPDP1",262,0)
 .. ; at this point we have a valid policy for this IBX
"RTN","IBNCPDP1",263,0)
 .. S IBERMSG(IBX)=""          ; no error message
"RTN","IBNCPDP1",264,0)
 .. S IBINSN=$P($G(^DIC(36,+$G(^IBA(355.3,+IBPL,0)),0)),U) ; ins name
"RTN","IBNCPDP1",265,0)
 .. S IBCHNM=$$NAME^IBCEFG1($P(IBZ,U,17))   ; standardize subscriber/cardholder name
"RTN","IBNCPDP1",266,0)
 .. S IBREL=+$P($G(IBINS(IBT,4)),U,5)       ; pointer to pharmacy relationship code file
"RTN","IBNCPDP1",267,0)
 .. ; use the #4.05 field if it exists, otherwise use the old pt relationship field #16
"RTN","IBNCPDP1",268,0)
 .. S IBREL=$S(IBREL:$$EXTERNAL^DILFD(2.312,4.05,,IBREL),1:$P(IBZ,U,16))
"RTN","IBNCPDP1",269,0)
 .. ;
"RTN","IBNCPDP1",270,0)
 .. S IBDAT=""
"RTN","IBNCPDP1",271,0)
 .. S $P(IBDAT,U,1)=IBPL       ; Plan IEN
"RTN","IBNCPDP1",272,0)
 .. S $P(IBDAT,U,2)=$G(IBY(2)) ; BIN
"RTN","IBNCPDP1",273,0)
 .. S $P(IBDAT,U,3)=$G(IBY(3)) ; PCN
"RTN","IBNCPDP1",274,0)
 .. S $P(IBDAT,U,4)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",1),0)),U) ; Payer Sheet B1 name
"RTN","IBNCPDP1",275,0)
 .. S $P(IBDAT,U,5)=$P($G(IBINS(IBT,355.3)),U,4) ; Group ID
"RTN","IBNCPDP1",276,0)
 .. S $P(IBDAT,U,6)=$P(IBZ,U,2)     ; Cardholder ID
"RTN","IBNCPDP1",277,0)
 .. S $P(IBDAT,U,7)=IBREL           ; Patient Relationship Code
"RTN","IBNCPDP1",278,0)
 .. S $P(IBDAT,U,8)=$P(IBCHNM,U,2)  ; Cardholder First Name
"RTN","IBNCPDP1",279,0)
 .. S $P(IBDAT,U,9)=$P(IBCHNM,U,1)  ; Cardholder Last Name
"RTN","IBNCPDP1",280,0)
 .. S $P(IBDAT,U,10)=$P($G(^DIC(36,+IBZ,.11)),U,5) ; State
"RTN","IBNCPDP1",281,0)
 .. S $P(IBDAT,U,11)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",2),0)),U) ; Payer Sheet B2 name
"RTN","IBNCPDP1",282,0)
 .. S $P(IBDAT,U,12)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",3),0)),U) ; Payer Sheet B3 name
"RTN","IBNCPDP1",283,0)
 .. S $P(IBDAT,U,13)=$G(IBY(4)) ; Software/Vendor Cert ID
"RTN","IBNCPDP1",284,0)
 .. S $P(IBDAT,U,14)=IBINSN ; Ins Name
"RTN","IBNCPDP1",285,0)
 .. S $P(IBDAT,U,15)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",4),0)),U) ; Payer Sheet E1 name
"RTN","IBNCPDP1",286,0)
 .. S $P(IBDAT,U,16)=+$P($G(IBY(5)),",",1)     ; Payer Sheet B1 ien
"RTN","IBNCPDP1",287,0)
 .. S $P(IBDAT,U,17)=+$P($G(IBY(5)),",",2)     ; Payer Sheet B2 ien
"RTN","IBNCPDP1",288,0)
 .. S $P(IBDAT,U,18)=+$P($G(IBY(5)),",",3)     ; Payer Sheet B3 ien
"RTN","IBNCPDP1",289,0)
 .. S $P(IBDAT,U,19)=+$P($G(IBY(5)),",",4)     ; Payer Sheet E1 ien
"RTN","IBNCPDP1",290,0)
 .. S $P(IBDAT,U,20)=$P($G(IBINS(IBT,4)),U,6)  ; Pharmacy Person Code
"RTN","IBNCPDP1",291,0)
 .. S IBD("INS",IBX,1)=IBDAT
"RTN","IBNCPDP1",292,0)
 .. ;
"RTN","IBNCPDP1",293,0)
 .. S IBDAT=""
"RTN","IBNCPDP1",294,0)
 .. S $P(IBDAT,U,1)=$P($G(IBINS(IBT,355.3)),U,3) ;group name
"RTN","IBNCPDP1",295,0)
 .. S $P(IBDAT,U,2)=$$PHONE^IBNCPDP6(+IBZ) ;ins co ph 3
"RTN","IBNCPDP1",296,0)
 .. S $P(IBDAT,U,3)=$$GET1^DIQ(366.03,IBPIEN_",",.01) ;plan ID
"RTN","IBNCPDP1",297,0)
 .. S $P(IBDAT,U,4)=$S(IBPLNTYP="TRICARE":"T",IBPLNTYP="CHAMPVA":"C",1:"V") ; plan type
"RTN","IBNCPDP1",298,0)
 .. S $P(IBDAT,U,5)=+$G(^IBA(355.3,+IBPL,0)) ; insurance co ien
"RTN","IBNCPDP1",299,0)
 .. S $P(IBDAT,U,6)=$P(IBZ,U,20) ;(#.2) COB field of the (#.3121) insurance Type multiple of the Patient file (#2)
"RTN","IBNCPDP1",300,0)
 .. S $P(IBDAT,U,7)=IBT  ; 2.312 subfile ien
"RTN","IBNCPDP1",301,0)
 .. S $P(IBDAT,U,8)=$$GET1^DIQ(366.03,IBPIEN_",",10.1) ; maximum ncpdp transactions
"RTN","IBNCPDP1",302,0)
 .. S IBD("INS",IBX,3)=IBDAT
"RTN","IBNCPDP1",303,0)
 .. Q
"RTN","IBNCPDP1",304,0)
 . Q
"RTN","IBNCPDP1",305,0)
 ;
"RTN","IBNCPDP1",306,0)
 ; Count the number of pharmacy insurance policies by IBX found up above
"RTN","IBNCPDP1",307,0)
 S IBX=0 F IBCNT=0:1 S IBX=$O(IBRXPOL(IBX)) Q:'IBX
"RTN","IBNCPDP1",308,0)
 ;
"RTN","IBNCPDP1",309,0)
 ; Determine the value of the IBX variable here.  This is basically the COB sequence# to be used.
"RTN","IBNCPDP1",310,0)
 ; If there is only 1 pharmacy policy or no pharmacy policies, then set IBX in this manner
"RTN","IBNCPDP1",311,0)
 I IBCNT'>1 D
"RTN","IBNCPDP1",312,0)
 . I $D(IBD("INS")) S IBX=+$O(IBD("INS",0))     ; use the only one in this array
"RTN","IBNCPDP1",313,0)
 . I '$D(IBD("INS")) S IBX=+$O(IBERMSG(0))      ; the only one here (or 0)
"RTN","IBNCPDP1",314,0)
 . Q
"RTN","IBNCPDP1",315,0)
 ;
"RTN","IBNCPDP1",316,0)
 ; If there are multiple pharmacy policies on file, then the COB field in the pt. policy must be used correctly
"RTN","IBNCPDP1",317,0)
 ;   and primary insurance must be at #1
"RTN","IBNCPDP1",318,0)
 I IBCNT>1 S IBX=1
"RTN","IBNCPDP1",319,0)
 ;
"RTN","IBNCPDP1",320,0)
 ; In all cases, if this variable is set, then use it
"RTN","IBNCPDP1",321,0)
 I $G(IBD("RXCOB"))>1 S IBX=$G(IBD("RXCOB"))
"RTN","IBNCPDP1",322,0)
 ;
"RTN","IBNCPDP1",323,0)
 ; Check insurance at IBX
"RTN","IBNCPDP1",324,0)
 I '$D(IBD("INS",IBX)),$G(IBERMSG(IBX))'="" S IBRES="0^Not ECME billable: "_IBERMSG(IBX),IBD("NO ECME INSURANCE")=1 G SETINX
"RTN","IBNCPDP1",325,0)
 I '$D(IBD("INS",IBX)) S IBRES="0^No Insurance ECME billable",IBD("NO ECME INSURANCE")=1
"RTN","IBNCPDP1",326,0)
SETINX ;
"RTN","IBNCPDP1",327,0)
 Q
"RTN","IBNCPDP1",328,0)
 ;
"RTN","IBNCPDP1",329,0)
RXPCT(IBD,BWHERE) ; Penny drug cost calculation
"RTN","IBNCPDP1",330,0)
 ; Input-IBD array, BWHERE
"RTN","IBNCPDP1",331,0)
 ; Output-return quotient of drug true value with 4 decimal places, or 0
"RTN","IBNCPDP1",332,0)
 N IBDIEN,IBDRX,IBNDC,IBFRM,IBDRFL,IBUNIT,IBSYN,IBQUO,IBDQUO,IBPSUF,IBPORD,IBPDISP,IBDRUG
"RTN","IBNCPDP1",333,0)
 S IBDIEN=IBD("IEN"),IBNDC=IBD("NDC"),IBDRX=IBD("DRUG"),IBDRFL=IBD("FILL NUMBER")
"RTN","IBNCPDP1",334,0)
 S IBFRM=$G(BWHERE),IBQUO=0
"RTN","IBNCPDP1",335,0)
 G:'IBDRX RXPCTQ
"RTN","IBNCPDP1",336,0)
 ; default unit price from (50-13/15)
"RTN","IBNCPDP1",337,0)
 D GETS^DIQ(50,IBDRX,".01;13;15","I","IBUNIT")
"RTN","IBNCPDP1",338,0)
 S IBPORD=$G(IBUNIT(50,IBDRX_",",13,"I"))
"RTN","IBNCPDP1",339,0)
 S IBPDISP=$G(IBUNIT(50,IBDRX_",",15,"I"))
"RTN","IBNCPDP1",340,0)
 S (IBDQUO,IBQUO)=$S(IBPORD&IBPDISP:(IBPORD/IBPDISP),1:0)
"RTN","IBNCPDP1",341,0)
 ;
"RTN","IBNCPDP1",342,0)
 ; unit price from (50.1-402/403) if NDC exists in the SYNONYM subfile
"RTN","IBNCPDP1",343,0)
 D DATA^IBRXUTL(IBDRX)
"RTN","IBNCPDP1",344,0)
 S IBSYN=0 F  S IBSYN=$O(^TMP($J,"IBDRUG",IBDRX,"SYN",IBSYN)) Q:'IBSYN  D
"RTN","IBNCPDP1",345,0)
 . I IBNDC'="",$G(^TMP($J,"IBDRUG",IBDRX,"SYN",IBSYN,2))=IBNDC D
"RTN","IBNCPDP1",346,0)
 .. S IBPSUF=IBSYN_","_IBDRX_","
"RTN","IBNCPDP1",347,0)
 .. D GETS^DIQ(50.1,IBPSUF,".01;402;403","I","IBUNIT")
"RTN","IBNCPDP1",348,0)
 .. S IBPORD=$G(IBUNIT(50.1,IBPSUF,402,"I"))
"RTN","IBNCPDP1",349,0)
 .. S IBPDISP=$G(IBUNIT(50.1,IBPSUF,403,"I"))
"RTN","IBNCPDP1",350,0)
 .. S IBQUO=$S(IBPORD&IBPDISP:(IBPORD/IBPDISP),1:0)
"RTN","IBNCPDP1",351,0)
 ;
"RTN","IBNCPDP1",352,0)
 ; API #4970 - use the default unit price for CMOP
"RTN","IBNCPDP1",353,0)
 I $$MWC^PSOBPSU2(IBDIEN,IBDRFL)="C" D
"RTN","IBNCPDP1",354,0)
 . Q:(IBFRM="PE")!(IBFRM="PP")
"RTN","IBNCPDP1",355,0)
 . S IBQUO=IBDQUO
"RTN","IBNCPDP1",356,0)
 ; set the lowest value 0.0001 with 4 decimal if less than 0.00005
"RTN","IBNCPDP1",357,0)
 I IBQUO S IBQUO=$J(IBQUO,1,4),IBQUO=$S(IBQUO>0:IBQUO,1:"0.0001")
"RTN","IBNCPDP1",358,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBNCPDP1",359,0)
RXPCTQ ;
"RTN","IBNCPDP1",360,0)
 Q IBQUO
"RTN","IBNCPDP1",361,0)
 ;
"RTN","IBNCPDP1",362,0)
EXEMPT ; exemption reasons
"RTN","IBNCPDP1",363,0)
 ; variable from SD call ^ variable from PSO ^ reason not billable
"RTN","IBNCPDP1",364,0)
 ;;1^AO^AGENT ORANGE
"RTN","IBNCPDP1",365,0)
 ;;2^IR^IONIZING RADIATION
"RTN","IBNCPDP1",366,0)
 ;;3^SC^SC TREATMENT
"RTN","IBNCPDP1",367,0)
 ;;4^SWA^SOUTHWEST ASIA
"RTN","IBNCPDP1",368,0)
 ;;5^MST^MILITARY SEXUAL TRAUMA
"RTN","IBNCPDP1",369,0)
 ;;6^HNC^HEAD/NECK CANCER
"RTN","IBNCPDP1",370,0)
 ;;7^CV^COMBAT VETERAN
"RTN","IBNCPDP1",371,0)
 ;;8^SHAD^PROJECT 112/SHAD
"RTN","IBNCPDP1",372,0)
 ;;
"RTN","IBNCPDP1",373,0)
 ;
"RTN","IBNCPEV3")
0^1^B38344902
"RTN","IBNCPEV3",1,0)
IBNCPEV3 ;ALB/DMB - ECME RXS WITH NON-BILLABLE STATUS ;5/22/08
"RTN","IBNCPEV3",2,0)
 ;;2.0;INTEGRATED BILLING;**534,617**;21-MAR-94;Build 43
"RTN","IBNCPEV3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBNCPEV3",4,0)
 ;
"RTN","IBNCPEV3",5,0)
 ; ICR #6131 documents the usage of this entry point by the ECME application
"RTN","IBNCPEV3",6,0)
 ;
"RTN","IBNCPEV3",7,0)
COLLECT(BEGDT,ENDDT,MWC,RELNRL,IBDRUG,DRUGCLS,ALLRCNT,IBPHARM,IBINS,IBNBSTS,IBELIG1,IBGLTMP,IBPAT,IBBILL,IBMIN,IBMAX) ;
"RTN","IBNCPEV3",8,0)
 ; Compile the data for the new Non-Billable Status report
"RTN","IBNCPEV3",9,0)
 ; Input:
"RTN","IBNCPEV3",10,0)
 ;    BEGDT - Beginning Date
"RTN","IBNCPEV3",11,0)
 ;    ENDDT - Ending Date
"RTN","IBNCPEV3",12,0)
 ;      MWC - A:All; M:Mail; W:Window; C:CMOP, if multiple entries MWC="C,M"
"RTN","IBNCPEV3",13,0)
 ;   RELNRL - 1:All; 2:Released; 3:Not Released
"RTN","IBNCPEV3",14,0)
 ;   IBDRUG - 0:All; DRUG to report on (ptr to #50), if multiple entries IBDRUG=ptr,ptr,...
"RTN","IBNCPEV3",15,0)
 ;  DRUGCLS - 0:All; DRUG CLASS to report on (ptr to #50.5), if multiple entries DRUGCLS=ptr,ptr,... 
"RTN","IBNCPEV3",16,0)
 ;  ALLRCNT - A:All; R:Most recent
"RTN","IBNCPEV3",17,0)
 ;  IBPHARM/IBPHARM(ptr) - 0:All pharmacies; 1:Array of IENs of pharmacies
"RTN","IBNCPEV3",18,0)
 ;  IBINS/IBINS(ptr) - 0:All insurances or list of file 36 IENs
"RTN","IBNCPEV3",19,0)
 ;  IBNBSTS/IBNBSTS(x) - 0:All; 1:Array of Non-Billable Status
"RTN","IBNCPEV3",20,0)
 ;  IBELIG1/IBELIG1(x) - 0:All; 1:Array of multiple eligibilities
"RTN","IBNCPEV3",21,0)
 ;  IBGLTMP - Temporary Global Storage (returned with extracted data)
"RTN","IBNCPEV3",22,0)
 ;  IBPAT - 0:All; ptr to #2 PATIENT, IBPAT=ptr,ptr,...
"RTN","IBNCPEV3",23,0)
 ;  IBBILL - 0:All; 1:Range of Billed Amount - then check IBMIN and IBMAX
"RTN","IBNCPEV3",24,0)
 ;    IBMIN=minimum billed amount entered, default is 0
"RTN","IBNCPEV3",25,0)
 ;    IBMAX=maximum billed amount entered, default is 999999
"RTN","IBNCPEV3",26,0)
 ;
"RTN","IBNCPEV3",27,0)
 ; Output:
"RTN","IBNCPEV3",28,0)
 ;    1 - Successful
"RTN","IBNCPEV3",29,0)
 ;   -1 - Unsuccessful
"RTN","IBNCPEV3",30,0)
 ;     
"RTN","IBNCPEV3",31,0)
 ; Check Parameters
"RTN","IBNCPEV3",32,0)
 I $G(IBGLTMP)="" Q -1
"RTN","IBNCPEV3",33,0)
 ;
"RTN","IBNCPEV3",34,0)
 N DATE,IEN,IEN1,X,X0,X2,X7,DIV,INS,RX,FILL,DRUG,RLDT,ELIG
"RTN","IBNCPEV3",35,0)
 N DFN,DRGCOST,I,IBDGLCS,IBSTOP,STATUS
"RTN","IBNCPEV3",36,0)
 K ^TMP($J)
"RTN","IBNCPEV3",37,0)
 ;
"RTN","IBNCPEV3",38,0)
 ; Loop through the IB NCPDP Event Log for the data range
"RTN","IBNCPEV3",39,0)
 S DATE=BEGDT-.1 F  S DATE=$O(^IBCNR(366.14,"B",DATE)) Q:'DATE!(DATE>ENDDT)  D
"RTN","IBNCPEV3",40,0)
 . S IEN="" F  S IEN=$O(^IBCNR(366.14,"B",DATE,IEN)) Q:'IEN  D
"RTN","IBNCPEV3",41,0)
 .. S IEN1=0 F  S IEN1=$O(^IBCNR(366.14,IEN,1,IEN1)) Q:'IEN1  D
"RTN","IBNCPEV3",42,0)
 ... S X0=$G(^IBCNR(366.14,IEN,1,IEN1,0))
"RTN","IBNCPEV3",43,0)
 ... ;
"RTN","IBNCPEV3",44,0)
 ... ; If not a Billable Status Check, quit
"RTN","IBNCPEV3",45,0)
 ... I +X0'=1 Q
"RTN","IBNCPEV3",46,0)
 ... ;
"RTN","IBNCPEV3",47,0)
 ... ; If successful, quit
"RTN","IBNCPEV3",48,0)
 ... I $P(X0,"^",7)'=0 Q
"RTN","IBNCPEV3",49,0)
 ... ;
"RTN","IBNCPEV3",50,0)
 ... ; Check Non-Status Reason matches user input
"RTN","IBNCPEV3",51,0)
 ... I IBNBSTS=1,'$D(IBNBSTS(+$P(X0,U,2))) Q
"RTN","IBNCPEV3",52,0)
 ... ;
"RTN","IBNCPEV3",53,0)
 ... ; Check Division matches user input
"RTN","IBNCPEV3",54,0)
 ... S DIV=+$P(X0,U,9)
"RTN","IBNCPEV3",55,0)
 ... I IBPHARM=1,'$D(IBPHARM(DIV)) Q
"RTN","IBNCPEV3",56,0)
 ... ;
"RTN","IBNCPEV3",57,0)
 ... ; Check Insurance matches user input
"RTN","IBNCPEV3",58,0)
 ... S INS=$$GETINS(IEN,IEN1)
"RTN","IBNCPEV3",59,0)
 ... I IBINS'=0,'$$CHKINS(IBINS,+INS) Q
"RTN","IBNCPEV3",60,0)
 ... S INS=$P(INS,"^",2)
"RTN","IBNCPEV3",61,0)
 ... ;
"RTN","IBNCPEV3",62,0)
 ... ; Get Rx and Fill
"RTN","IBNCPEV3",63,0)
 ... S X2=$G(^IBCNR(366.14,IEN,1,IEN1,2))
"RTN","IBNCPEV3",64,0)
 ... S RX=$P(X2,U,12),FILL=$P(X2,U,3)
"RTN","IBNCPEV3",65,0)
 ... I 'RX S RX=$P(X2,U,2)
"RTN","IBNCPEV3",66,0)
 ... I 'RX Q
"RTN","IBNCPEV3",67,0)
 ... ;
"RTN","IBNCPEV3",68,0)
 ... ; Check Fill Type matches user input
"RTN","IBNCPEV3",69,0)
 ... I MWC'="A",MWC'[$$MWC^PSOBPSU2(RX,FILL) Q
"RTN","IBNCPEV3",70,0)
 ... ;
"RTN","IBNCPEV3",71,0)
 ... ; Check Drug matches user input
"RTN","IBNCPEV3",72,0)
 ... S DRUG=$$FILE^IBRXUTL(RX,6,"I")
"RTN","IBNCPEV3",73,0)
 ... I IBDRUG D  I IBSTOP=0 Q
"RTN","IBNCPEV3",74,0)
 .... S IBSTOP=0
"RTN","IBNCPEV3",75,0)
 .... F I=1:1:$L(IBDRUG,",") I DRUG=$P(IBDRUG,",",I) S IBSTOP=1 Q
"RTN","IBNCPEV3",76,0)
 ... ;
"RTN","IBNCPEV3",77,0)
 ... ; Check Drug Class matches user input
"RTN","IBNCPEV3",78,0)
 ... S IBDGCLS=$$CLSNAME^IBNCPEV3($$GETDRGCL^IBNCPEV3(DRUG),99)
"RTN","IBNCPEV3",79,0)
 ... I DRUGCLS'=0 D  I IBSTOP=0 Q
"RTN","IBNCPEV3",80,0)
 .... S IBSTOP=0
"RTN","IBNCPEV3",81,0)
 .... F I=1:1:$L(DRUGCLS,";") I IBDGCLS=$P(DRUGCLS,";",I) S IBSTOP=1 Q
"RTN","IBNCPEV3",82,0)
 ... ;
"RTN","IBNCPEV3",83,0)
 ... ; Check Released matches user input
"RTN","IBNCPEV3",84,0)
 ... S RLDT=$P($$RXRLDT^PSOBPSUT(RX,FILL),".")
"RTN","IBNCPEV3",85,0)
 ... I RELNRL'=1 Q:RELNRL=2&'RLDT  Q:RELNRL=3&RLDT
"RTN","IBNCPEV3",86,0)
 ... ;
"RTN","IBNCPEV3",87,0)
 ... ; Check Eligibilities matches user input
"RTN","IBNCPEV3",88,0)
 ... S X7=$G(^IBCNR(366.14,IEN,1,IEN1,7))
"RTN","IBNCPEV3",89,0)
 ... S ELIG=$P(X7,U,5)
"RTN","IBNCPEV3",90,0)
 ... I IBELIG1=1,'$D(IBELIG1(ELIG)) Q
"RTN","IBNCPEV3",91,0)
 ... ;
"RTN","IBNCPEV3",92,0)
 ... ; Check Patient(s) matches user input
"RTN","IBNCPEV3",93,0)
 ... S DFN=+$P(X0,U,3)
"RTN","IBNCPEV3",94,0)
 ... I IBPAT'=0 D  I IBSTOP=0 Q
"RTN","IBNCPEV3",95,0)
 .... S IBSTOP=0
"RTN","IBNCPEV3",96,0)
 .... F I=1:1:$L(IBPAT,",") I $P(IBPAT,",",I)=DFN S IBSTOP=1 Q
"RTN","IBNCPEV3",97,0)
 ... ;
"RTN","IBNCPEV3",98,0)
 ... ; Check Drug Cost matches Bill Amount user input
"RTN","IBNCPEV3",99,0)
 ... S DRGCOST=$$COST(RX,FILL)
"RTN","IBNCPEV3",100,0)
 ... I IBBILL'=0 I (DRGCOST<$G(IBMIN))!(DRGCOST>$G(IBMAX)) Q
"RTN","IBNCPEV3",101,0)
 ... ;
"RTN","IBNCPEV3",102,0)
 ... ; Get Data
"RTN","IBNCPEV3",103,0)
 ... ;  Division, Insurance, Patient Name, SSN, Eligibility, RX, Fill
"RTN","IBNCPEV3",104,0)
 ... ;  Date, Drug Cost, Drug, Released On, Fill Type,
"RTN","IBNCPEV3",105,0)
 ... ;  Status (RX status/Released-Not released)
"RTN","IBNCPEV3",106,0)
 ... S STATUS=$$RXAPI1^IBNCPUT1(RX,100,"I")
"RTN","IBNCPEV3",107,0)
 ... ; If most recent, temporary Sort by RX and Fill
"RTN","IBNCPEV3",108,0)
 ... ; Else store in the global
"RTN","IBNCPEV3",109,0)
 ... I ALLRCNT="R" S ^TMP($J,"IBNCPEV3",+RX,+FILL,DATE)=DIV_U_INS_U_DFN_U_ELIG_U_DRGCOST_U_0_U_DRUG_U_RLDT_U_STATUS_U_$P(X0,U,2)
"RTN","IBNCPEV3",110,0)
 ... E  S @IBGLTMP@(DIV,INS,+DFN,DATE,+RX,+FILL)=ELIG_U_DRGCOST_U_0_U_DRUG_U_RLDT_U_STATUS_U_$P(X0,U,2)
"RTN","IBNCPEV3",111,0)
 ;
"RTN","IBNCPEV3",112,0)
 ; If most recent, get most recent record for each RX and fill and populate the array
"RTN","IBNCPEV3",113,0)
 I ALLRCNT="R" D
"RTN","IBNCPEV3",114,0)
 . S RX="" F  S RX=$O(^TMP($J,"IBNCPEV3",RX)) Q:'RX  D
"RTN","IBNCPEV3",115,0)
 .. S FILL="" F  S FILL=$O(^TMP($J,"IBNCPEV3",RX,FILL)) Q:FILL=""  D
"RTN","IBNCPEV3",116,0)
 ... S DATE=$O(^TMP($J,"IBNCPEV3",RX,FILL,""),-1)
"RTN","IBNCPEV3",117,0)
 ... S X=$G(^TMP($J,"IBNCPEV3",RX,FILL,DATE)),DIV=$P(X,U,1),INS=$P(X,U,2),DFN=$P(X,U,3)
"RTN","IBNCPEV3",118,0)
 ... S @IBGLTMP@(DIV,INS,+DFN,DATE,RX,FILL)=$P(X,U,4,10)
"RTN","IBNCPEV3",119,0)
 . ; Clean up scratch global
"RTN","IBNCPEV3",120,0)
 . K ^TMP($J,"IBNCPEV3")
"RTN","IBNCPEV3",121,0)
 Q 1
"RTN","IBNCPEV3",122,0)
 ;
"RTN","IBNCPEV3",123,0)
 ;
"RTN","IBNCPEV3",124,0)
DRUGDIE(IEN,FLD,FORMAT,IBARR) ;
"RTN","IBNCPEV3",125,0)
 ;  Return field values for Drug file 
"RTN","IBNCPEV3",126,0)
 ;  Function returns field data if one field is specified. If
"RTN","IBNCPEV3",127,0)
 ;    multiple fields, the function will return "" and the field
"RTN","IBNCPEV3",128,0)
 ;    values are returned in IBARR
"RTN","IBNCPEV3",129,0)
 ; Example: W $$DRUGDIE^IBNCPEV3(134,25,"E",.ARR)
"RTN","IBNCPEV3",130,0)
 ;  IEN - IEN of DRUG FILE #50
"RTN","IBNCPEV3",131,0)
 ;  FLD - Field Number(s) (like .01)
"RTN","IBNCPEV3",132,0)
 ;  FORMAT - Specifies internal or external value of returned field
"RTN","IBNCPEV3",133,0)
 ;         - optional, defaults to "I"
"RTN","IBNCPEV3",134,0)
 ;  IBARR - Array to return value(s). Optional. Pass by reference.
"RTN","IBNCPEV3",135,0)
 ;           See EN^DIQ documentation for variable DIQ
"RTN","IBNCPEV3",136,0)
 ;
"RTN","IBNCPEV3",137,0)
 I $G(IEN)="" Q ""
"RTN","IBNCPEV3",138,0)
 I $G(FLD)="" Q ""
"RTN","IBNCPEV3",139,0)
 I $G(FORMAT)'="E" S FORMAT="I"
"RTN","IBNCPEV3",140,0)
 N DIQ,PSSDIY,IBDIQ
"RTN","IBNCPEV3",141,0)
 S IBDIQ="IBARR",IBDIQ(0)=FORMAT
"RTN","IBNCPEV3",142,0)
 D EN^PSSDI(50,"IB",50,.FLD,.IEN,.IBDIQ)
"RTN","IBNCPEV3",143,0)
 Q $G(IBARR(50,IEN,FLD,FORMAT))
"RTN","IBNCPEV3",144,0)
 ;
"RTN","IBNCPEV3",145,0)
CLSNAME(CLASS,IBLEN) ;
"RTN","IBNCPEV3",146,0)
 ; Get Drug Class Name
"RTN","IBNCPEV3",147,0)
 I $G(CLASS)="" Q ""
"RTN","IBNCPEV3",148,0)
 K ^TMP($J,"IBPEV-CLASS")
"RTN","IBNCPEV3",149,0)
 N Y,IEN
"RTN","IBNCPEV3",150,0)
 S Y=""
"RTN","IBNCPEV3",151,0)
 D C^PSN50P65(CLASS,"","IBPEV-CLASS")
"RTN","IBNCPEV3",152,0)
 S IEN=$O(^TMP($J,"IBPEV-CLASS",0))
"RTN","IBNCPEV3",153,0)
 I IEN]"" S Y=$E($G(^TMP($J,"IBPEV-CLASS",IEN,1)),1,IBLEN)
"RTN","IBNCPEV3",154,0)
 K ^TMP($J,"IBPEV-CLASS")
"RTN","IBNCPEV3",155,0)
 Q Y
"RTN","IBNCPEV3",156,0)
 ;
"RTN","IBNCPEV3",157,0)
GETINS(IEN,IEN1) ;
"RTN","IBNCPEV3",158,0)
 ;Get the Insurance from INSURANCE multiple
"RTN","IBNCPEV3",159,0)
 ;Input: IEN  = IEN of the IB NCPCP BILLING EVENT LOG
"RTN","IBNCPEV3",160,0)
 ;       IEN1 = IEN of the EVENT subfile
"RTN","IBNCPEV3",161,0)
 ;
"RTN","IBNCPEV3",162,0)
 ;Output: Insurance Company Pointer or null if not found
"RTN","IBNCPEV3",163,0)
 ;
"RTN","IBNCPEV3",164,0)
 I '$G(IEN) Q "0^UNKNOWN INSURANCE"
"RTN","IBNCPEV3",165,0)
 I '$G(IEN1) Q "0^UNKNOWN INSURANCE"
"RTN","IBNCPEV3",166,0)
 ;
"RTN","IBNCPEV3",167,0)
 ; Get Group Plan from first INSURANCE multiple entry
"RTN","IBNCPEV3",168,0)
 N IEN2,GPLAN,INS,INSNM
"RTN","IBNCPEV3",169,0)
 S IEN2=$O(^IBCNR(366.14,IEN,1,IEN1,5,0))
"RTN","IBNCPEV3",170,0)
 I 'IEN2 Q "0^UNKNOWN INSURANCE"
"RTN","IBNCPEV3",171,0)
 S GPLAN=$P($G(^IBCNR(366.14,IEN,1,IEN1,5,IEN2,0)),"^",2)
"RTN","IBNCPEV3",172,0)
 I 'GPLAN Q "0^UNKNOWN INSURANCE"
"RTN","IBNCPEV3",173,0)
 ;
"RTN","IBNCPEV3",174,0)
 ; Get Insurance Company from the Group Plan record
"RTN","IBNCPEV3",175,0)
 S INS=+$G(^IBA(355.3,GPLAN,0))
"RTN","IBNCPEV3",176,0)
 I INS=0 Q "0^UNKNOWN INSURANCE"
"RTN","IBNCPEV3",177,0)
 S INSNM=$$GET1^DIQ(36,INS,.01,"E")
"RTN","IBNCPEV3",178,0)
 I INSNM="" S INSNM="UNKNOWN INSURANCE"
"RTN","IBNCPEV3",179,0)
 Q INS_"^"_INSNM
"RTN","IBNCPEV3",180,0)
 ;
"RTN","IBNCPEV3",181,0)
CHKINS(LIST,INS) ;
"RTN","IBNCPEV3",182,0)
 ;Check if the IB NCPDP EVENT LOG has the user-entered insurance
"RTN","IBNCPEV3",183,0)
 ;Input: LIST = Semi-colon separated list of Insurances selected by the user
"RTN","IBNCPEV3",184,0)
 ;       INS  = IEN of the Insurance Company (#36) file
"RTN","IBNCPEV3",185,0)
 ;
"RTN","IBNCPEV3",186,0)
 ;Output: 1 = Match found
"RTN","IBNCPEV3",187,0)
 ;        0 = No match found
"RTN","IBNCPEV3",188,0)
 ;
"RTN","IBNCPEV3",189,0)
 I $G(LIST)="" Q 0
"RTN","IBNCPEV3",190,0)
 I '$G(INS) Q 0
"RTN","IBNCPEV3",191,0)
 ;
"RTN","IBNCPEV3",192,0)
 N I,IN1,RETV
"RTN","IBNCPEV3",193,0)
 S RETV=0
"RTN","IBNCPEV3",194,0)
 F I=2:1 S IN1=$P($G(LIST),";",I) Q:IN1=""  S RETV=$S(IN1=INS:1,1:0) Q:RETV
"RTN","IBNCPEV3",195,0)
 Q RETV
"RTN","IBNCPEV3",196,0)
 ;
"RTN","IBNCPEV3",197,0)
COST(RX,FILL) ;
"RTN","IBNCPEV3",198,0)
 ; Calculate Drug Cost for RX/Fill
"RTN","IBNCPEV3",199,0)
 ; Input:
"RTN","IBNCPEV3",200,0)
 ;   RX:   Prescription IEN
"RTN","IBNCPEV3",201,0)
 ;   FILL: Fill Number
"RTN","IBNCPEV3",202,0)
 ; Output:
"RTN","IBNCPEV3",203,0)
 ;   Drug Cost
"RTN","IBNCPEV3",204,0)
 ;
"RTN","IBNCPEV3",205,0)
 I '$G(RX) Q ""
"RTN","IBNCPEV3",206,0)
 I $G(FILL)="" Q ""
"RTN","IBNCPEV3",207,0)
 ;
"RTN","IBNCPEV3",208,0)
 N DATA,COST,QTY
"RTN","IBNCPEV3",209,0)
 I FILL=0 S COST=$$FILE^IBRXUTL(RX,17,"I"),QTY=$$FILE^IBRXUTL(RX,7,"I")
"RTN","IBNCPEV3",210,0)
 I FILL S COST=$$SUBFILE^IBRXUTL(RX,FILL,"",1.2,"I"),QTY=$$SUBFILE^IBRXUTL(RX,FILL,"",1,"I")
"RTN","IBNCPEV3",211,0)
 Q COST*QTY
"RTN","IBNCPEV3",212,0)
 ;
"RTN","IBNCPEV3",213,0)
 ;Get VA DRUG CLASS pointer
"RTN","IBNCPEV3",214,0)
 ;       
"RTN","IBNCPEV3",215,0)
 ; Input Variables: BP50 - ptr to DRUG (#50)
"RTN","IBNCPEV3",216,0)
 ;
"RTN","IBNCPEV3",217,0)
 ; Return Value -> n = ptr to VA DRUG CLASS (#50.605)
"RTN","IBNCPEV3",218,0)
 ;                 0 = Unknown
"RTN","IBNCPEV3",219,0)
 ;
"RTN","IBNCPEV3",220,0)
GETDRGCL(BP50) Q $$DRUGDIE(BP50,25)
"RTN","IBNCPEV3",221,0)
 ;
"VER")
8.0^22.2
"^DD",355.3,355.3,1.07,0)
DATE LAST MATCHED^D^^1;7^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",355.3,355.3,1.07,3)
(No range limit on date)
"^DD",355.3,355.3,1.07,21,0)
^^1^1^3180705^
"^DD",355.3,355.3,1.07,21,1,0)
This is the date the policy was last matched.
"^DD",355.3,355.3,1.07,"DT")
3180705
"^DD",355.3,355.3,1.08,0)
LAST MATCHED BY^P200'^VA(200,^1;8^Q
"^DD",355.3,355.3,1.08,21,0)
^^1^1^3180705^
"^DD",355.3,355.3,1.08,21,1,0)
This is the user who last matched the policy.
"^DD",355.3,355.3,1.08,"DT")
3180705
**INSTALL NAME**
PSS*1.0*214
"BLD",10866,0)
PSS*1.0*214^PHARMACY DATA MANAGEMENT^0^3181129^y
"BLD",10866,1,0)
^^1^1^3180305^
"BLD",10866,1,1,0)
MCCF EDI TAS EPHARMACY BUILDS 5 & 6
"BLD",10866,4,0)
^9.64PA^^
"BLD",10866,6.3)
43
"BLD",10866,"ABPKG")
n
"BLD",10866,"KRN",0)
^9.67PA^779.2^20
"BLD",10866,"KRN",.4,0)
.4
"BLD",10866,"KRN",.401,0)
.401
"BLD",10866,"KRN",.402,0)
.402
"BLD",10866,"KRN",.403,0)
.403
"BLD",10866,"KRN",.5,0)
.5
"BLD",10866,"KRN",.84,0)
.84
"BLD",10866,"KRN",3.6,0)
3.6
"BLD",10866,"KRN",3.8,0)
3.8
"BLD",10866,"KRN",9.2,0)
9.2
"BLD",10866,"KRN",9.8,0)
9.8
"BLD",10866,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",10866,"KRN",9.8,"NM",1,0)
PSSLOOK^^0^B137686641
"BLD",10866,"KRN",9.8,"NM",2,0)
PSSBPSUT^^0^B5090315
"BLD",10866,"KRN",9.8,"NM",3,0)
PSSDEE^^0^B156658460
"BLD",10866,"KRN",9.8,"NM","B","PSSBPSUT",2)

"BLD",10866,"KRN",9.8,"NM","B","PSSDEE",3)

"BLD",10866,"KRN",9.8,"NM","B","PSSLOOK",1)

"BLD",10866,"KRN",19,0)
19
"BLD",10866,"KRN",19.1,0)
19.1
"BLD",10866,"KRN",101,0)
101
"BLD",10866,"KRN",409.61,0)
409.61
"BLD",10866,"KRN",771,0)
771
"BLD",10866,"KRN",779.2,0)
779.2
"BLD",10866,"KRN",870,0)
870
"BLD",10866,"KRN",8989.51,0)
8989.51
"BLD",10866,"KRN",8989.52,0)
8989.52
"BLD",10866,"KRN",8994,0)
8994
"BLD",10866,"KRN","B",.4,.4)

"BLD",10866,"KRN","B",.401,.401)

"BLD",10866,"KRN","B",.402,.402)

"BLD",10866,"KRN","B",.403,.403)

"BLD",10866,"KRN","B",.5,.5)

"BLD",10866,"KRN","B",.84,.84)

"BLD",10866,"KRN","B",3.6,3.6)

"BLD",10866,"KRN","B",3.8,3.8)

"BLD",10866,"KRN","B",9.2,9.2)

"BLD",10866,"KRN","B",9.8,9.8)

"BLD",10866,"KRN","B",19,19)

"BLD",10866,"KRN","B",19.1,19.1)

"BLD",10866,"KRN","B",101,101)

"BLD",10866,"KRN","B",409.61,409.61)

"BLD",10866,"KRN","B",771,771)

"BLD",10866,"KRN","B",779.2,779.2)

"BLD",10866,"KRN","B",870,870)

"BLD",10866,"KRN","B",8989.51,8989.51)

"BLD",10866,"KRN","B",8989.52,8989.52)

"BLD",10866,"KRN","B",8994,8994)

"BLD",10866,"QUES",0)
^9.62^^
"BLD",10866,"REQB",0)
^9.611^1^1
"BLD",10866,"REQB",1,0)
PSS*1.0*220^2
"BLD",10866,"REQB","B","PSS*1.0*220",1)

"MBREQ")
1
"PKG",586,-1)
1^1
"PKG",586,0)
PHARMACY DATA MANAGEMENT^PSS^Maintenance of Pharmacy files.
"PKG",586,20,0)
^9.402P^^
"PKG",586,22,0)
^9.49I^1^1
"PKG",586,22,1,0)
1.0^2970930^2971128^1
"PKG",586,22,1,"PAH",1,0)
214^3181129^520824633
"PKG",586,22,1,"PAH",1,1,0)
^^1^1^3181129
"PKG",586,22,1,"PAH",1,1,1,0)
MCCF EDI TAS EPHARMACY BUILDS 5 & 6
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PSSBPSUT")
0^2^B5090315
"RTN","PSSBPSUT",1,0)
PSSBPSUT ;BIRM/MFR - BPS (ECME) Utilities ;05/14/07
"RTN","PSSBPSUT",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**127,214**;9/30/97;Build 43
"RTN","PSSBPSUT",3,0)
 ;
"RTN","PSSBPSUT",4,0)
NCPDPQTY(DRUG,RXQTY) ; Return the NCPDP quantity (Billing Quantity)
"RTN","PSSBPSUT",5,0)
 ; Input: (r) DRUG  - DRUG file (#50) IEN
"RTN","PSSBPSUT",6,0)
 ;        (r) RXQTY - Quantity dispensed from the PRESCRIPTION file (#52)) 
"RTN","PSSBPSUT",7,0)
 ;0utput:  NCPDPQTY - Billing Quantity (3 decimal places)^NCPDP Dispense Unit (EA, GM or ML)
"RTN","PSSBPSUT",8,0)
 ;
"RTN","PSSBPSUT",9,0)
 N UNIT,MULTIP
"RTN","PSSBPSUT",10,0)
 ;
"RTN","PSSBPSUT",11,0)
 S DRUG=+$G(DRUG),RXQTY=+$G(RXQTY)
"RTN","PSSBPSUT",12,0)
 ;
"RTN","PSSBPSUT",13,0)
 ; - Invalid DRUG IEN or DRUG not on file 
"RTN","PSSBPSUT",14,0)
 I 'DRUG!'$D(^PSDRUG(DRUG,0)) Q "-1^INVALID DRUG"
"RTN","PSSBPSUT",15,0)
 ;
"RTN","PSSBPSUT",16,0)
 ; - Invalid NCPDP Dispense Unit
"RTN","PSSBPSUT",17,0)
 S UNIT=$$GET1^DIQ(50,DRUG,82,"I") I UNIT'="EA",UNIT'="GM",UNIT'="ML" Q RXQTY
"RTN","PSSBPSUT",18,0)
 ;
"RTN","PSSBPSUT",19,0)
 ; - Invalid NCPDP Conversion Multiplier
"RTN","PSSBPSUT",20,0)
 S MULTIP=+$$GET1^DIQ(50,DRUG,83) I MULTIP'>0 Q RXQTY_"^"_UNIT
"RTN","PSSBPSUT",21,0)
 ;
"RTN","PSSBPSUT",22,0)
 Q $J(RXQTY*MULTIP,0,3)_"^"_UNIT
"RTN","PSSBPSUT",23,0)
 ;
"RTN","PSSBPSUT",24,0)
EPHARM(PSSDRUG) ; ePharmacy Billable fields check
"RTN","PSSBPSUT",25,0)
 ; Check if the ePharmacy Billable fields are all nil.  If so, give the user the 
"RTN","PSSBPSUT",26,0)
 ; opportunity to input a value into the fields.
"RTN","PSSBPSUT",27,0)
 ;
"RTN","PSSBPSUT",28,0)
 ; Input: (r) PSSDRUG - DRUG file (#50) IEN
"RTN","PSSBPSUT",29,0)
 ;
"RTN","PSSBPSUT",30,0)
 N ARRAY,DA,DATA,DIE,DIR,DR,I,PSSDRUG1,TODAY,Y
"RTN","PSSBPSUT",31,0)
 ;
"RTN","PSSBPSUT",32,0)
 ; Pull existing values from ^PSDRUG, for ePharmacy Billable fields, and put into ARRAY.
"RTN","PSSBPSUT",33,0)
 S PSSDRUG1=PSSDRUG_","
"RTN","PSSBPSUT",34,0)
 D GETS^DIQ(50,PSSDRUG1,"84;85;86;100","I","ARRAY")
"RTN","PSSBPSUT",35,0)
 ;
"RTN","PSSBPSUT",36,0)
 ; If INACTIVE DATE is not greater than today, QUIT. Do not check ePharmacy Billable Fields.
"RTN","PSSBPSUT",37,0)
 S TODAY=$$DT^XLFDT
"RTN","PSSBPSUT",38,0)
 I (ARRAY(50,PSSDRUG1,100,"I")'="")&(ARRAY(50,PSSDRUG1,100,"I")'>TODAY) Q
"RTN","PSSBPSUT",39,0)
 ;
"RTN","PSSBPSUT",40,0)
 ; Check the 3 fields in ARRAY.  If any field has a value defined, QUIT.
"RTN","PSSBPSUT",41,0)
 S DATA=""
"RTN","PSSBPSUT",42,0)
 F I=84,85,86 I $G(ARRAY(50,PSSDRUG1,I,"I"))'="" S DATA=1
"RTN","PSSBPSUT",43,0)
 I DATA=1 Q
"RTN","PSSBPSUT",44,0)
 ;
"RTN","PSSBPSUT",45,0)
 ; All 3 fields were nil.  Prompt user if they would like to enter values.
"RTN","PSSBPSUT",46,0)
 S DIR("A",1)=" "
"RTN","PSSBPSUT",47,0)
 S DIR("A",2)="  None of the ePharmacy Billable fields are marked.  ePharmacy claims"
"RTN","PSSBPSUT",48,0)
 S DIR("A",3)="  will not be billed if not marked.  Do you wish to mark any of the"
"RTN","PSSBPSUT",49,0)
 S DIR("A")="  fields (Y/N)"
"RTN","PSSBPSUT",50,0)
 S DIR(0)="Y"
"RTN","PSSBPSUT",51,0)
 D ^DIR
"RTN","PSSBPSUT",52,0)
 ;
"RTN","PSSBPSUT",53,0)
 I Y'=1 Q    ; If user did not respond YES to entering ePharmacy Billable fields, QUIT.
"RTN","PSSBPSUT",54,0)
 ;
"RTN","PSSBPSUT",55,0)
 W !
"RTN","PSSBPSUT",56,0)
 ; Display the 3 ePharmacy Billable fields to the user.
"RTN","PSSBPSUT",57,0)
 S DIE="^PSDRUG("
"RTN","PSSBPSUT",58,0)
 S DA=PSSDRUG
"RTN","PSSBPSUT",59,0)
 S DR="84ePharmacy Billable;85  ePharmacy Billable (TRICARE);86  ePharmacy Billable (CHAMPVA)"
"RTN","PSSBPSUT",60,0)
 D ^DIE
"RTN","PSSBPSUT",61,0)
 ;
"RTN","PSSBPSUT",62,0)
 Q
"RTN","PSSDEE")
0^3^B156658460
"RTN","PSSDEE",1,0)
PSSDEE ;BIR/WRT - MASTER DRUG ENTER/EDIT ROUTINE ;Nov 27, 2018@10:03
"RTN","PSSDEE",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**3,5,15,16,20,22,28,32,34,33,38,57,47,68,61,82,90,110,155,156,180,193,200,207,195,227,220,214**;9/30/97;Build 43
"RTN","PSSDEE",3,0)
 ;
"RTN","PSSDEE",4,0)
 ;Reference to ^PS(59 supported by DBIA #1976
"RTN","PSSDEE",5,0)
 ;Reference to REACT1^PSNOUT supported by DBIA #2080
"RTN","PSSDEE",6,0)
 ;Reference to $$UP^XLFSTR(X) supported by DBIA #10104
"RTN","PSSDEE",7,0)
 ;Reference to $$PSJDF^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSSDEE",8,0)
 ;Reference to PSNAPIS supported by DBIA #2531
"RTN","PSSDEE",9,0)
 ;Reference to ^XMB("NETNAME" supported by DBIA #1131
"RTN","PSSDEE",10,0)
 ;Reference to ^XUSEC supported by DIBA #10076
"RTN","PSSDEE",11,0)
 ;Reference to FDR & FDT^PSNACT supported by DBIA #6754
"RTN","PSSDEE",12,0)
 ;
"RTN","PSSDEE",13,0)
BEGIN N PSSUPRAF,PSSTDRUG
"RTN","PSSDEE",14,0)
 S PSSFLAG=0 D ^PSSDEE2 S PSSZ=1 F PSSXX=1:1 K DA D ASK Q:PSSFLAG
"RTN","PSSDEE",15,0)
DONE D ^PSSDEE2 K PSSFLAGK,PSSXX,DIE,DIR,CLFLAG,CLFALG,DISPDRG,DLAYGO,DR,ENTRY,FLAG,FLG1,FLG2,FLG4,FLG5,FLG6,FLG7,FLGKY,FLGMTH,FLGNDF,FLGOI,K,NEWDF
"RTN","PSSDEE",16,0)
 K NFLAG,NWND,NWPC1,NWPC2,NWPC3OLDDF,PSIUDA,PSIUX,PSNP,PSSANS,PSSASK,PSSDA,PSSDD,PSSFLAG,PSSOR,PSSZ,PSXBT,PSXF,PSXFL,PSXUM,PSXGOOD,PSXLOC,ZAPFLG
"RTN","PSSDEE",17,0)
 Q
"RTN","PSSDEE",18,0)
ASK ;
"RTN","PSSDEE",19,0)
 W ! S DIC="^PSDRUG(",DIC(0)="QEALMNTV",DLAYGO=50,DIC("T")="",DIC("W")="S PSSTDRUG=Y D GETTIER^PSSDEE(PSSTDRUG)" D ^DIC K DIC I Y<0 S PSSFLAG=1 Q
"RTN","PSSDEE",20,0)
 N PSINACT S (FLG1,FLG2,FLG3,FLG4,FLG5,FLG6,FLG7,FLAG,FLGKY,FLGOI,PSINACT)=0 K ^TMP($J,"ADD"),^TMP($J,"SOL")
"RTN","PSSDEE",21,0)
 S DA=+Y,DISPDRG=DA L +^PSDRUG(DISPDRG):0 I '$T W !,$C(7),"Another person is editing this one." Q
"RTN","PSSDEE",22,0)
 D BEFORE^PSSDEEA($T(+0))  ; drug enter/edit auditing
"RTN","PSSDEE",23,0)
 I $G(^PSDRUG(DA,"I")) S PSINACT=$G(^PSDRUG(DA,"I")) I PSINACT,PSINACT<DT S PSINACT=1  ;;<<*180 - RJS
"RTN","PSSDEE",24,0)
 S PSSHUIDG=1,PSSNEW=$P(Y,"^",3) D USE,NOPE,COMMON,DEA,MF K PSSHUIDG,PSSUPRAF
"RTN","PSSDEE",25,0)
 ; if any outpatient site has a dispense machine running HL7 V.2.4, then
"RTN","PSSDEE",26,0)
 ; run the new routine and create message
"RTN","PSSDEE",27,0)
 N XX,DNSNAM,DNSPORT,DVER,DMFU,PSSUPRA S XX=""
"RTN","PSSDEE",28,0)
 F XX=0:0 S XX=$O(^PS(59,XX)) Q:'XX  D
"RTN","PSSDEE",29,0)
 .S DVER=$$GET1^DIQ(59,XX_",",105,"I"),DMFU=$$GET1^DIQ(59,XX_",",105.2)
"RTN","PSSDEE",30,0)
 .S DNSNAM=$$GET1^DIQ(59,XX_",",2006),DNSPORT=$$GET1^DIQ(59,XX_",",2007)
"RTN","PSSDEE",31,0)
 .D:DVER="2.4"&(DNSNAM'="")&(DMFU="YES") DRG^PSSDGUPD(DISPDRG,PSSNEW,DNSNAM,DNSPORT)
"RTN","PSSDEE",32,0)
 D DRG^PSSHUIDG(DISPDRG,PSSNEW) L -^PSDRUG(DISPDRG)
"RTN","PSSDEE",33,0)
 D AFTER^PSSDEEA($T(+0))  ; drug enter/edit auditing
"RTN","PSSDEE",34,0)
 S XX=$P($G(^PSDRUG(DISPDRG,2)),"^",3) I XX["U"!(XX["I") D  S XX=""
"RTN","PSSDEE",35,0)
 .S XX=$$SNDHL7^PSSMSTR() D:XX
"RTN","PSSDEE",36,0)
 ..Q:PSSNEW&'((XX=2)!(XX=3))  ;U=1,N=2,B=3
"RTN","PSSDEE",37,0)
 ..Q:'PSSNEW&(XX=2)  ;U=1,N=2,B=3
"RTN","PSSDEE",38,0)
 ..N VAR
"RTN","PSSDEE",39,0)
 ..I PSSNEW&((XX=2)!(XX=3)) S VAR="Would you like to send this new drug to PADE"
"RTN","PSSDEE",40,0)
 ..E  S VAR="Would you like to send a drug file update to PADE"
"RTN","PSSDEE",41,0)
 ..W !!,"This drug is marked for either UD or IV use, and you have at least"
"RTN","PSSDEE",42,0)
 ..W !,"one active Pharmacy Automated Dispensing Equipment (PADE)."
"RTN","PSSDEE",43,0)
 ..K DIR,DIRUT,DUOUT,DTOUT
"RTN","PSSDEE",44,0)
 ..S DIR(0)="Y",DIR("A")=VAR
"RTN","PSSDEE",45,0)
 ..S DIR("?")="Enter Y for Yes or N for No." D ^DIR K DIR
"RTN","PSSDEE",46,0)
 ..Q:'Y
"RTN","PSSDEE",47,0)
 ..N PSSPADE S PSSPADE=1 S XX=""
"RTN","PSSDEE",48,0)
 ..D ENP^PSSHLDFS(DISPDRG,$S(PSSNEW:"MAD",1:"MUP"))
"RTN","PSSDEE",49,0)
 D EPHARM^PSSBPSUT(DISPDRG)
"RTN","PSSDEE",50,0)
 K FLG3,PSSNEW
"RTN","PSSDEE",51,0)
 Q
"RTN","PSSDEE",52,0)
 ;
"RTN","PSSDEE",53,0)
COMMON ;
"RTN","PSSDEE",54,0)
 S DIE="^PSDRUG(",DR="[PSSCOMMON]"
"RTN","PSSDEE",55,0)
 D ^DIE
"RTN","PSSDEE",56,0)
 I $D(Y)!($D(DTOUT)) Q
"RTN","PSSDEE",57,0)
 I '$D(^PSDRUG(DA,660)) S $P(^PSDRUG(DA,660),"^",6)=""
"RTN","PSSDEE",58,0)
 I '$D(Y) W !,"PRICE PER DISPENSE UNIT: ",$P(^PSDRUG(DA,660),"^",6)
"RTN","PSSDEE",59,0)
 D DEA,CK,ASKND,OIKILL^PSSDEE1,COMMON1
"RTN","PSSDEE",60,0)
 Q
"RTN","PSSDEE",61,0)
 ;
"RTN","PSSDEE",62,0)
COMMON1 W !,"Just a reminder...you are editing ",$P(^PSDRUG(DISPDRG,0),"^"),"."
"RTN","PSSDEE",63,0)
 S (PSSVVDA,DA)=DISPDRG D DOSN^PSSDOS S DA=PSSVVDA K PSSVVDA D USE,APP,ORDITM^PSSDEE1
"RTN","PSSDEE",64,0)
 Q
"RTN","PSSDEE",65,0)
CK D DSPY^PSSDEE1 S FLGNDF=0
"RTN","PSSDEE",66,0)
 Q
"RTN","PSSDEE",67,0)
ASKND S %=-1 I $D(^XUSEC("PSNMGR",DUZ)) D MESSAGE^PSSDEE1 W !!,"Do you wish to match/rematch to NATIONAL DRUG file" S %=1 S:FLGMTH=1 %=2 D YN^DICN
"RTN","PSSDEE",68,0)
 I %=0 W !,"If you answer ""yes"", you will attempt to match to NDF." G ASKND
"RTN","PSSDEE",69,0)
 S PSSUPRAF=%
"RTN","PSSDEE",70,0)
 I %=2 K X,Y Q
"RTN","PSSDEE",71,0)
 I %<0 K X,Y Q
"RTN","PSSDEE",72,0)
 I %=1 D  ;;<<*180 - RJS
"RTN","PSSDEE",73,0)
 .D RSET^PSSDEE1
"RTN","PSSDEE",74,0)
 .I 'PSINACT D EN1^PSSUTIL(DISPDRG,1)
"RTN","PSSDEE",75,0)
 .S X="PSNOUT" X ^%ZOSF("TEST") I  D REACT1^PSNOUT S DA=DISPDRG I $D(^PSDRUG(DA,"ND")),$P(^PSDRUG(DA,"ND"),"^",2)]"" D ONE
"RTN","PSSDEE",76,0)
 Q  ;;<< *180 - RJS
"RTN","PSSDEE",77,0)
ONE S PSNP=$G(^PSDRUG(DA,"I")) I PSNP,PSNP<DT Q
"RTN","PSSDEE",78,0)
 W !,"You have just VERIFIED this match and MERGED the entry." D CKDF D EN2^PSSUTIL(DISPDRG,1) S:'$D(OLDDF) OLDDF="" I OLDDF'=NEWDF S FLGNDF=1 D WR
"RTN","PSSDEE",79,0)
 Q
"RTN","PSSDEE",80,0)
CKDF S NWND=^PSDRUG(DA,"ND"),NWPC1=$P(NWND,"^",1),NWPC3=$P(NWND,"^",3),DA=NWPC1,K=NWPC3 S X=$$PSJDF^PSNAPIS(DA,K) S NEWDF=$P(X,"^",2),DA=DISPDRG
"RTN","PSSDEE",81,0)
 N PSSK D PKIND^PSSDDUT2
"RTN","PSSDEE",82,0)
 Q
"RTN","PSSDEE",83,0)
NOPE S ZAPFLG=0 I '$D(^PSDRUG(DA,"ND")),$D(^PSDRUG(DA,2)),$P(^PSDRUG(DA,2),"^",1)']"" D DFNULL
"RTN","PSSDEE",84,0)
 I '$D(^PSDRUG(DA,"ND")),'$D(^PSDRUG(DA,2)) D DFNULL
"RTN","PSSDEE",85,0)
 I $D(^PSDRUG(DA,"ND")),$P(^PSDRUG(DA,"ND"),"^",2)']"",$D(^PSDRUG(DA,2)),$P(^PSDRUG(DA,2),"^",1)']"" D DFNULL
"RTN","PSSDEE",86,0)
 Q
"RTN","PSSDEE",87,0)
DFNULL S OLDDF="",ZAPFLG=1
"RTN","PSSDEE",88,0)
 Q
"RTN","PSSDEE",89,0)
ZAPIT I $D(ZAPFLG),ZAPFLG=1,FLGNDF=1,OLDDF'=NEWDF D CKIV^PSSDEE1
"RTN","PSSDEE",90,0)
 Q
"RTN","PSSDEE",91,0)
APP W !!,"MARK THIS DRUG AND EDIT IT FOR: " D CHOOSE
"RTN","PSSDEE",92,0)
 Q
"RTN","PSSDEE",93,0)
CHOOSE I $D(^XUSEC("PSORPH",DUZ))!($D(^XUSEC("PSXCMOPMGR",DUZ))) W !,"O  - Outpatient" S FLG1=1
"RTN","PSSDEE",94,0)
 I $D(^XUSEC("PSJU MGR",DUZ)) W !,"U  - Unit Dose" S FLG2=1
"RTN","PSSDEE",95,0)
 I $D(^XUSEC("PSJI MGR",DUZ)) W !,"I  - IV" S FLG3=1
"RTN","PSSDEE",96,0)
 I $D(^XUSEC("PSGWMGR",DUZ)) W !,"W  - Ward Stock" S FLG4=1
"RTN","PSSDEE",97,0)
 I $D(^XUSEC("PSAMGR",DUZ))!($D(^XUSEC("PSA ORDERS",DUZ))) W !,"D  - Drug Accountability" S FLG5=1
"RTN","PSSDEE",98,0)
 I $D(^XUSEC("PSDMGR",DUZ)) W !,"C  - Controlled Substances" S FLG6=1
"RTN","PSSDEE",99,0)
 I $D(^XUSEC("PSORPH",DUZ)) W !,"X  - Non-VA Med" S FLG7=1
"RTN","PSSDEE",100,0)
 I FLG1,FLG2,FLG3,FLG4,FLG5,FLG6 S FLAG=1
"RTN","PSSDEE",101,0)
 I FLAG W !,"A  - ALL"
"RTN","PSSDEE",102,0)
 W !
"RTN","PSSDEE",103,0)
 I 'FLG1,'FLG2,'FLG3,'FLG4,'FLG5,'FLG6,'FLG7 W !,"You do not have the proper keys to continue. Sorry, this concludes your editing session.",! S FLGKY=1 K DIRUT,X Q
"RTN","PSSDEE",104,0)
 I FLGKY'=1 D
"RTN","PSSDEE",105,0)
 . K DIR S DIR(0)="FO^1:30"
"RTN","PSSDEE",106,0)
 . S DIR("A")="Enter your choice(s) separated by commas "
"RTN","PSSDEE",107,0)
 . F  D ^DIR Q:$$CHECK($$UP^XLFSTR(X))
"RTN","PSSDEE",108,0)
 . S PSSANS=X,PSSANS=$$UP^XLFSTR(PSSANS) D BRANCH,BRANCH1
"RTN","PSSDEE",109,0)
 Q
"RTN","PSSDEE",110,0)
 ;
"RTN","PSSDEE",111,0)
CHECK(X) ; Validates Application Use response
"RTN","PSSDEE",112,0)
 N CHECK,I,C
"RTN","PSSDEE",113,0)
 S CHECK=1 I X=""!(Y["^")!($D(DIRUT)) Q CHECK
"RTN","PSSDEE",114,0)
 F I=1:1:$L(X,",") D
"RTN","PSSDEE",115,0)
 . S C=$P(X,",",I) W !?43,C," - "
"RTN","PSSDEE",116,0)
 . I C="O",FLG1 W "Outpatient" Q
"RTN","PSSDEE",117,0)
 . I C="U",FLG2 W "Unit Dose" Q
"RTN","PSSDEE",118,0)
 . I C="I",FLG3 W "IV" Q
"RTN","PSSDEE",119,0)
 . I C="W",FLG4 W "Ward Stock" Q
"RTN","PSSDEE",120,0)
 . I C="D",FLG5 W "Drug Accountability" Q
"RTN","PSSDEE",121,0)
 . I C="C",FLG6 W "Controlled Substances" Q
"RTN","PSSDEE",122,0)
 . I C="X",FLG7 W "Non-VA Med" Q
"RTN","PSSDEE",123,0)
 . W "Invalid Entry",$C(7) S CHECK=0
"RTN","PSSDEE",124,0)
 Q CHECK
"RTN","PSSDEE",125,0)
BRANCH D:PSSANS["O" OP D:PSSANS["U" UD D:PSSANS["I" IV D:PSSANS["W" WS
"RTN","PSSDEE",126,0)
 D:PSSANS["D" DACCT D:PSSANS["C" CS D:PSSANS["X" NVM
"RTN","PSSDEE",127,0)
 Q
"RTN","PSSDEE",128,0)
BRANCH1 I FLAG,PSSANS["A" D OP,UD,IV,WS,DACCT,CS,NVM
"RTN","PSSDEE",129,0)
 Q
"RTN","PSSDEE",130,0)
OP I FLG1 D
"RTN","PSSDEE",131,0)
 . W !,"** You are NOW editing OUTPATIENT fields. **"
"RTN","PSSDEE",132,0)
 . S PSIUDA=DA,PSIUX="O^Outpatient Pharmacy" D ^PSSGIU
"RTN","PSSDEE",133,0)
 . I %=1 D
"RTN","PSSDEE",134,0)
 . . S DIE="^PSDRUG(",DR="[PSSOP]" D ^DIE K DIR D OPEI,ASKCMOP
"RTN","PSSDEE",135,0)
 . . S X="PSOCLO1" X ^%ZOSF("TEST") I  D ASKCLOZ S FLGOI=1
"RTN","PSSDEE",136,0)
 I FLG1 D CKCMOP
"RTN","PSSDEE",137,0)
 Q
"RTN","PSSDEE",138,0)
CKCMOP I $P($G(^PSDRUG(DISPDRG,2)),"^",3)'["O" S:$D(^PSDRUG(DISPDRG,3)) $P(^PSDRUG(DISPDRG,3),"^",1)=0 K:$D(^PSDRUG("AQ",DISPDRG)) ^PSDRUG("AQ",DISPDRG) S DA=DISPDRG D ^PSSREF
"RTN","PSSDEE",139,0)
 Q
"RTN","PSSDEE",140,0)
UD I FLG2 W !,"** You are NOW editing UNIT DOSE fields. **" S PSIUDA=DA,PSIUX="U^Unit Dose" D ^PSSGIU I %=1 S DIE="^PSDRUG(",DR="62.05;212.2" D ^DIE S DIE="^PSDRUG(",DR="212",DR(2,50.0212)=".01;1" D ^DIE S FLGOI=1
"RTN","PSSDEE",141,0)
 Q
"RTN","PSSDEE",142,0)
IV I FLG3 W !,"** You are NOW editing IV fields. **" S (PSIUDA,PSSDA)=DA,PSIUX="I^IV" D ^PSSGIU I %=1 D IV1 S FLGOI=1
"RTN","PSSDEE",143,0)
 Q
"RTN","PSSDEE",144,0)
IV1 K PSSIVOUT ;This variable controls the selection process loop.
"RTN","PSSDEE",145,0)
 W !,"Edit Additives or Solutions: " K DIR S DIR(0)="SO^A:ADDITIVES;S:SOLUTIONS;" D ^DIR Q:$D(DIRUT)  S PSSASK=Y(0) D:PSSASK="ADDITIVES" ENA^PSSVIDRG D:PSSASK="SOLUTIONS" ENS^PSSVIDRG I '$D(PSSIVOUT) G IV1
"RTN","PSSDEE",146,0)
 K PSSIVOUT
"RTN","PSSDEE",147,0)
 Q
"RTN","PSSDEE",148,0)
WS I FLG4 W !,"** You are NOW editing WARD STOCK fields. **" S DIE="^PSDRUG(",DR="300;301;302" D ^DIE
"RTN","PSSDEE",149,0)
 Q
"RTN","PSSDEE",150,0)
DACCT I FLG5 W !,"** You are NOW editing DRUG ACCOUNTABILITY fields. **" S DIE="^PSDRUG(",DR="441" D ^DIE S DIE="^PSDRUG(",DR="9",DR(2,50.1)="1;2;400;401;402;403;404;405" D ^DIE
"RTN","PSSDEE",151,0)
 Q
"RTN","PSSDEE",152,0)
CS I FLG6 W !,"** You are NOW Marking/Unmarking for CONTROLLED SUBS. **" S PSIUDA=DA,PSIUX="N^Controlled Substances" D ^PSSGIU
"RTN","PSSDEE",153,0)
 Q
"RTN","PSSDEE",154,0)
NVM I FLG7 W !,"** You are NOW Marking/Unmarking for NON-VA MEDS. **" S PSIUDA=DA,PSIUX="X^Non-VA Med" D ^PSSGIU
"RTN","PSSDEE",155,0)
 Q
"RTN","PSSDEE",156,0)
ASKCMOP I $D(^XUSEC("PSXCMOPMGR",DUZ)) W !!,"Do you wish to mark to transmit to CMOP? " K DIR S DIR(0)="Y",DIR("?")="If you answer ""yes"", you will attempt to mark this drug to transmit to CMOP."
"RTN","PSSDEE",157,0)
 D ^DIR I "Nn"[$E(X) K X,Y,DIRUT Q
"RTN","PSSDEE",158,0)
 I "Yy"[$E(X) S PSXFL=0 D TEXT^PSSMARK H 7 N PSXUDA S (PSXUM,PSXUDA)=DA,PSXLOC=$P(^PSDRUG(DA,0),"^"),PSXGOOD=0,PSXF=0,PSXBT=0 D BLD^PSSMARK,PICK2^PSSMARK S DA=PSXUDA
"RTN","PSSDEE",159,0)
 Q
"RTN","PSSDEE",160,0)
ASKCLOZ W !!,"Do you wish to mark/unmark as a LAB MONITOR or CLOZAPINE DRUG? " K DIR S DIR(0)="Y",DIR("?")="If you answer ""yes"", you will have the opportunity to edit LAB MONITOR or CLOZAPINE fields."
"RTN","PSSDEE",161,0)
 D ^DIR I "Nn"[$E(X) K X,Y,DIRUT Q
"RTN","PSSDEE",162,0)
 I "Yy"[$E(X) S NFLAG=0 D MONCLOZ
"RTN","PSSDEE",163,0)
 Q
"RTN","PSSDEE",164,0)
MONCLOZ K PSSAST D FLASH W !,"Mark/Unmark for Lab Monitor or Clozapine: " K DIR S DIR(0)="S^L:LAB MONITOR;C:CLOZAPINE;" D ^DIR Q:$D(DIRUT)  S PSSAST=Y(0) D:PSSAST="LAB MONITOR" ^PSSLAB D:$G(PSSAST)="CLOZAPINE" CLOZ
"RTN","PSSDEE",165,0)
 Q
"RTN","PSSDEE",166,0)
FLASH K LMFLAG,CLFALG,WHICH S WHICH=$P($G(^PSDRUG(DISPDRG,"CLOZ1")),"^"),LMFLAG=0,CLFLAG=0
"RTN","PSSDEE",167,0)
 I WHICH="PSOCLO1" S CLFLAG=1
"RTN","PSSDEE",168,0)
 I WHICH'="PSOCLO1" S:WHICH'="" LMFLAG=1
"RTN","PSSDEE",169,0)
 Q
"RTN","PSSDEE",170,0)
CLOZ Q:NFLAG  Q:$D(DTOUT)  Q:$D(DIRUT)  Q:$D(DUOUT)  W !,"** You are NOW editing CLOZAPINE fields. **" D ^PSSCLDRG
"RTN","PSSDEE",171,0)
 Q
"RTN","PSSDEE",172,0)
USE K PACK S PACK="" S:$P($G(^PSDRUG(DISPDRG,"PSG")),"^",2)]"" PACK="W" I $D(^PSDRUG(DISPDRG,2)) S PACK=PACK_$P(^PSDRUG(DISPDRG,2),"^",3)
"RTN","PSSDEE",173,0)
 I PACK'="" D
"RTN","PSSDEE",174,0)
 .W $C(7) N XX W !! F XX=1:1:79 W "*"
"RTN","PSSDEE",175,0)
 .W !,"This entry is marked for the following PHARMACY packages: "
"RTN","PSSDEE",176,0)
 .D USE1
"RTN","PSSDEE",177,0)
 Q
"RTN","PSSDEE",178,0)
USE1 W:PACK["O" !," Outpatient" W:PACK["U" !," Unit Dose" W:PACK["I" !," IV"
"RTN","PSSDEE",179,0)
 W:PACK["W" !," Ward Stock" W:PACK["D" !," Drug Accountability"
"RTN","PSSDEE",180,0)
 W:PACK["N" !," Controlled Substances" W:PACK["X" !," Non-VA Med"
"RTN","PSSDEE",181,0)
 W:'$D(PACK) !," NONE"
"RTN","PSSDEE",182,0)
 I PACK'["O",PACK'["U",PACK'["I",PACK'["W",PACK'["D",PACK'["N",PACK'["X" W !," NONE"
"RTN","PSSDEE",183,0)
 Q
"RTN","PSSDEE",184,0)
WR I ^XMB("NETNAME")'["CMOP-" W:OLDDF'="" !,"The dosage form has changed from "_OLDDF_" to "_NEWDF_" due to",!,"matching/rematching to NDF.",!,"You will need to rematch to Orderable Item.",!
"RTN","PSSDEE",185,0)
 Q
"RTN","PSSDEE",186,0)
PRIMDRG I $D(^PS(59.7,1,20)),$P(^PS(59.7,1,20),"^",1)=4!($P(^PS(59.7,1,20),"^",1)=4.5) I $D(^PSDRUG(DISPDRG,2)) S VAR=$P(^PSDRUG(DISPDRG,2),"^",3) I VAR["U"!(VAR["I") D PRIM1
"RTN","PSSDEE",187,0)
 Q
"RTN","PSSDEE",188,0)
PRIM1 W !!,"You need to match this drug to ""PRIMARY DRUG"" file as well.",! S DIE="^PSDRUG(",DR="64",DA=DISPDRG D ^DIE K VAR
"RTN","PSSDEE",189,0)
 Q
"RTN","PSSDEE",190,0)
MF I $P($G(^PS(59.7,1,80)),"^",2)>1 I $D(^PSDRUG(DISPDRG,2)) S PSSOR=$P(^PSDRUG(DISPDRG,2),"^",1) I PSSOR]"" D EN^PSSPOIDT(PSSOR),EN2^PSSHL1(PSSOR,"MUP")
"RTN","PSSDEE",191,0)
 Q
"RTN","PSSDEE",192,0)
MFA I $P($G(^PS(59.7,1,80)),"^",2)>1 S PSSOR=$P(^PS(52.6,ENTRY,0),"^",11),PSSDD=$P(^PS(52.6,ENTRY,0),"^",2) I PSSOR]"" D EN^PSSPOIDT(PSSOR),EN2^PSSHL1(PSSOR,"MUP") D MFDD
"RTN","PSSDEE",193,0)
 Q
"RTN","PSSDEE",194,0)
MFS I $P($G(^PS(59.7,1,80)),"^",2)>1 S PSSOR=$P(^PS(52.7,ENTRY,0),"^",11),PSSDD=$P(^PS(52.7,ENTRY,0),"^",2) I PSSOR]"" D EN^PSSPOIDT(PSSOR),EN2^PSSHL1(PSSOR,"MUP") D MFDD
"RTN","PSSDEE",195,0)
 Q
"RTN","PSSDEE",196,0)
MFDD I $D(^PSDRUG(PSSDD,2)) S PSSOR=$P(^PSDRUG(PSSDD,2),"^",1) I PSSOR]"" D EN^PSSPOIDT(PSSOR),EN2^PSSHL1(PSSOR,"MUP")
"RTN","PSSDEE",197,0)
 Q
"RTN","PSSDEE",198,0)
OPEI ;
"RTN","PSSDEE",199,0)
 S DIE="^PSDRUG(",DR="28",DA=DISPDRG
"RTN","PSSDEE",200,0)
 D ^DIE
"RTN","PSSDEE",201,0)
 Q:'+$P($G(^PSDRUG(DA,6)),"^")
"RTN","PSSDEE",202,0)
OPEI2 ; get external dispensing devices associated with the drug
"RTN","PSSDEE",203,0)
 W !!,"Defining a dispensing device at the drug level for a division will override"
"RTN","PSSDEE",204,0)
 W !,"the dispensing device settings in the OUTPATIENT SITE File (#59). If populated,",!,"the drug will be sent to the dispensing device for that division.",!
"RTN","PSSDEE",205,0)
 S DR="906"
"RTN","PSSDEE",206,0)
 D ^DIE
"RTN","PSSDEE",207,0)
 Q
"RTN","PSSDEE",208,0)
DEA ;
"RTN","PSSDEE",209,0)
 I $P($G(^PSDRUG(DISPDRG,3)),"^")=1,($P(^PSDRUG(DISPDRG,0),"^",3)[1!($P(^(0),"^",3)[2)) D DSH
"RTN","PSSDEE",210,0)
 Q
"RTN","PSSDEE",211,0)
DSH W !!,"****************************************************************************"
"RTN","PSSDEE",212,0)
 W !,"This entry contains a ""1"" or a ""2"" in the ""DEA, SPECIAL HDLG""",!,"field, therefore this item has been UNMARKED for CMOP transmission."
"RTN","PSSDEE",213,0)
 W !,"****************************************************************************",! S $P(^PSDRUG(DISPDRG,3),"^")=0 K ^PSDRUG("AQ",DISPDRG) S DA=DISPDRG N % D ^PSSREF
"RTN","PSSDEE",214,0)
 Q
"RTN","PSSDEE",215,0)
CPTIER(VAPID) ;Called from PSSCOMMON Input Template
"RTN","PSSDEE",216,0)
 ; VAPID = IEN OF DRUG FILE #50
"RTN","PSSDEE",217,0)
 N CPDATE,X,PSSCP D NOW^%DTC S CPDATE=X S PSSCP=$$CPTIER^PSNAPIS("",CPDATE,VAPID,1) K CPDATE,X
"RTN","PSSDEE",218,0)
 ;  PSSCP = Copay Tier^Effective Date^End Date
"RTN","PSSDEE",219,0)
 W !,"Copay Tier: ",$P(PSSCP,"^",1)
"RTN","PSSDEE",220,0)
 W !,"Copay Effective Date: " S Y=$P(PSSCP,"^",2) D DD^%DT W Y K Y,PSSCP
"RTN","PSSDEE",221,0)
 Q
"RTN","PSSDEE",222,0)
 ;
"RTN","PSSDEE",223,0)
GETTIER(PSSTDRUG) ;called by DIC to get copay tier for today's date 
"RTN","PSSDEE",224,0)
 N VAPID,CPDATE,X,PSSCP,VAPROD,PSSDRGCL,PSSCONVD,PSSINACT,PSSFSN,PSSNFORM,PSSMSG,PSSRESTR,PSSDRDAT,PSSFD D NOW^%DTC S CPDATE=X
"RTN","PSSDEE",225,0)
 D GETS^DIQ(50,PSSTDRUG,"2;22;51;6;100;101;102","IE","PSSDRDAT")
"RTN","PSSDEE",226,0)
 S (PSSDRGCL,PSSFSN,PSSNFORM,PSSINACT,PSSMSG,PSSRESTR,VAPROD)=""
"RTN","PSSDEE",227,0)
 S:$G(PSSDRDAT(50,PSSTDRUG_",",2,"E"))'="" PSSDRGCL=PSSDRDAT(50,PSSTDRUG_",",2,"E")
"RTN","PSSDEE",228,0)
 S:$G(PSSDRDAT(50,PSSTDRUG_",",6,"E"))'="" PSSFSN=PSSDRDAT(50,PSSTDRUG_",",6,"E")
"RTN","PSSDEE",229,0)
 S:$G(PSSDRDAT(50,PSSTDRUG_",",51,"E"))'="" PSSNFORM=PSSDRDAT(50,PSSTDRUG_",",51,"E")
"RTN","PSSDEE",230,0)
 S:$G(PSSDRDAT(50,PSSTDRUG_",",100,"I")) PSSINACT=PSSDRDAT(50,PSSTDRUG_",",100,"I")
"RTN","PSSDEE",231,0)
 S:$G(PSSDRDAT(50,PSSTDRUG_",",101,"E"))'="" PSSMSG=PSSDRDAT(50,PSSTDRUG_",",101,"E")
"RTN","PSSDEE",232,0)
 S:$G(PSSDRDAT(50,PSSTDRUG_",",102,"E"))'="" PSSRESTR=PSSDRDAT(50,PSSTDRUG_",",102,"E")
"RTN","PSSDEE",233,0)
 S:$G(PSSDRDAT(50,PSSTDRUG_",",22,"I")) VAPROD=PSSDRDAT(50,PSSTDRUG_",",22,"I")
"RTN","PSSDEE",234,0)
 W " "_$$GET1^DIQ(50,PSSTDRUG,2)
"RTN","PSSDEE",235,0)
 S PSSCP=$$CPTIER^PSNAPIS(VAPROD,CPDATE,"",1) K CPDATE,X
"RTN","PSSDEE",236,0)
 W:$G(PSSFSN)["" "  "_PSSFSN W:$G(PSSNFORM)["" "  ",PSSNFORM ;FSN; local non-formulary
"RTN","PSSDEE",237,0)
 S PSSFD=$$FDR^PSNACT(VAPROD) ;ppsn
"RTN","PSSDEE",238,0)
 W:PSSFD'="" "  "_PSSFD
"RTN","PSSDEE",239,0)
 I $G(VAPROD),$P(PSSCP,"^")'="" W "  Tier ",$P(PSSCP,"^")
"RTN","PSSDEE",240,0)
 S:$G(PSSINACT) PSSCONVD=$$DATE(PSSINACT)  ;inactive date
"RTN","PSSDEE",241,0)
 W:$G(PSSCONVD)'="" "  "_PSSCONVD
"RTN","PSSDEE",242,0)
 W:$G(PSSMSG)'="" "  "_PSSMSG
"RTN","PSSDEE",243,0)
 W:$G(PSSRESTR)'="" "  "_PSSRESTR
"RTN","PSSDEE",244,0)
 Q
"RTN","PSSDEE",245,0)
 ;
"RTN","PSSDEE",246,0)
DATE(PSSCONVD) ;convert fileman date to mm/dd/yyyy
"RTN","PSSDEE",247,0)
 N DATE
"RTN","PSSDEE",248,0)
 S DATE="",DATE=$E(PSSCONVD,4,5)_"/"_$E(PSSCONVD,6,7)_"/"_(1700+$E(PSSCONVD,1,3))
"RTN","PSSDEE",249,0)
 Q DATE
"RTN","PSSDEE",250,0)
 ;
"RTN","PSSDEE",251,0)
FD(PSSTDRUG) ;
"RTN","PSSDEE",252,0)
 N VAPROD,PSSDRDAT
"RTN","PSSDEE",253,0)
 D GETS^DIQ(50,PSSTDRUG,22,"I","PSSDRDAT")
"RTN","PSSDEE",254,0)
 S VAPROD=PSSDRDAT(50,PSSTDRUG_",",22,"I")
"RTN","PSSDEE",255,0)
 Q:VAPROD=""
"RTN","PSSDEE",256,0)
 S PSSFD="",PSSFD=$$GET1^DIQ(50.68,VAPROD,109)  ;ppsn
"RTN","PSSDEE",257,0)
 W:PSSFD'="" !,"Formulary Designator: "_PSSFD
"RTN","PSSDEE",258,0)
 I $D(^PSNDF(50.68,VAPROD,5.1,1,0)) D FDT^PSNACT(VAPROD) ;ppsn
"RTN","PSSDEE",259,0)
 Q
"RTN","PSSLOOK")
0^1^B137686641
"RTN","PSSLOOK",1,0)
PSSLOOK ;BIR/WRT - Drug file lookup ;Nov 27, 2018@10:04
"RTN","PSSLOOK",2,0)
 ;;1.0;PHARMACY DATA MANAGEMENT;**3,7,15,16,20,24,29,38,68,61,87,90,127,147,170,189,192,200,195,213,227,220,214**;9/30/97;Build 43
"RTN","PSSLOOK",3,0)
 ;
"RTN","PSSLOOK",4,0)
 ;Reference to ^PS(50.605 supported by DBIA #2138
"RTN","PSSLOOK",5,0)
 ;Reference to ^PS(50.608 supported by DBIA #2136
"RTN","PSSLOOK",6,0)
 ;Reference to ^PS(50.609 supported by DBIA #2137
"RTN","PSSLOOK",7,0)
 ;Reference to ^PS(50.607 supported by DBIA #2221
"RTN","PSSLOOK",8,0)
 ;Reference to $$FORMRX^PSNAPIS(DA,K,.LIST) supported by DBIA #2574
"RTN","PSSLOOK",9,0)
 ;Reference to $$FORMI^PSNAPIS(P1,P3) supported by DBIA #2574
"RTN","PSSLOOK",10,0)
 ;Reference to $$PSJDF^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSSLOOK",11,0)
 ;Reference to $$PSJST^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSSLOOK",12,0)
 ;Reference to $$PROD2^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSSLOOK",13,0)
 ;Reference to $$CPTIER^PSNAPIS(P1,P3) supported by DBIA #2531
"RTN","PSSLOOK",14,0)
 ;Reference to $$VAGN^PSNAPIS(P1) supported by DBIA #2531
"RTN","PSSLOOK",15,0)
 ;Reference to ^PSNDF(50.68 supported by DBIA 3735
"RTN","PSSLOOK",16,0)
 ;Reference to DATA^PSN50P68 supported by DBIA 4545
"RTN","PSSLOOK",17,0)
 ;Reference to FD & FDT^PSNACT supported by DBIA #6754
"RTN","PSSLOOK",18,0)
 ;
"RTN","PSSLOOK",19,0)
START S QUIT=0,PSSFG=0 D KILL F PSSXX=1:1 D PICK Q:PSSFG
"RTN","PSSLOOK",20,0)
DONE D KILL K PSSFG,PSSXX,QUIT,FM,FMS,Y2K
"RTN","PSSLOOK",21,0)
 Q
"RTN","PSSLOOK",22,0)
PICK W ! K DIC S DIC="^PSDRUG(",DIC(0)="AEQMVTN",DIC("T")="",DIC("W")="S PSSTDRUG=Y D GETTIER^PSSDEE(PSSTDRUG)" D ^DIC K DIC I Y<0 S PSSFG=1 Q
"RTN","PSSLOOK",23,0)
 S IFN=+Y D NDDATA,GETDATA,INACT,NOD66,FORMAT,KILL
"RTN","PSSLOOK",24,0)
 Q
"RTN","PSSLOOK",25,0)
NDDATA I $D(^PSDRUG(IFN,"ND")) S CLPTR=$P(^PSDRUG(IFN,"ND"),"^",6) I $P(^PSDRUG(IFN,"ND"),"^",2)]"" S NDNODE=^PSDRUG(IFN,"ND"),VAGNPTR=$P(NDNODE,"^",1),VAPN=$P(NDNODE,"^",2),SZPTR=$P(NDNODE,"^",4),TYPTR=$P(NDNODE,"^",5) D NDF,NDF1
"RTN","PSSLOOK",26,0)
 Q
"RTN","PSSLOOK",27,0)
NDF S DA=VAGNPTR,X=$$VAGN^PSNAPIS(DA),VAGN=X,PS=$P(^PS(50.609,SZPTR,0),"^",1),PT=$P(^PS(50.608,TYPTR,0),"^",1),P3=$P(NDNODE,"^",3)
"RTN","PSSLOOK",28,0)
 K X S DA=VAGNPTR,K=P3,X=$$PROD2^PSNAPIS(DA,K) I X]"",$P(X,"^")]"" S VAPRN=$P(X,"^"),VADU=$P(X,"^",4),CMOPID=$P(X,"^",2)
"RTN","PSSLOOK",29,0)
 S CSF="" I $P(NDNODE,"^",3) S CSF=$$GET1^DIQ(50.68,$P(NDNODE,"^",3),19,"I")
"RTN","PSSLOOK",30,0)
 ;
"RTN","PSSLOOK",31,0)
 S (PSSNIEN,CSF)="",PSSNIEN=$P(NDNODE,"^",3)
"RTN","PSSLOOK",32,0)
 K ^TMP($J,"PSNVAPR"),PSSHTH,PSSHTD,PSSPEPAC,PSSDOTSN
"RTN","PSSLOOK",33,0)
 I PSSNIEN'="" D DATA^PSN50P68(PSSNIEN,"","PSNVAPR")  ;using the PRE encapuslation API instead
"RTN","PSSLOOK",34,0)
 I $D(^TMP($J,"PSNVAPR",PSSNIEN)) D
"RTN","PSSLOOK",35,0)
 .S:$G(^TMP($J,"PSNVAPR",PSSNIEN,19))'="" CSF=$P(^TMP($J,"PSNVAPR",PSSNIEN,19),"^")
"RTN","PSSLOOK",36,0)
 .S:$G(^TMP($J,"PSNVAPR",PSSNIEN,5))'="" VAPRN=^TMP($J,"PSNVAPR",PSSNIEN,5)
"RTN","PSSLOOK",37,0)
 .S:$G(^TMP($J,"PSNVAPR",PSSNIEN,6))'="" CMOPID=^TMP($J,"PSNVAPR",PSSNIEN,6)
"RTN","PSSLOOK",38,0)
 .; Hazardous Waste fields
"RTN","PSSLOOK",39,0)
 .S (PSSHTH,PSSHTD,PSSPEPAC,PSSWSC,PSSDOTSN)=""
"RTN","PSSLOOK",40,0)
 .S:$G(^TMP($J,"PSNVAPR",PSSNIEN,101))'="" PSSHTH=^TMP($J,"PSNVAPR",PSSNIEN,101)
"RTN","PSSLOOK",41,0)
 .S:$G(^TMP($J,"PSNVAPR",PSSNIEN,102))'="" PSSHTD=^TMP($J,"PSNVAPR",PSSNIEN,102)
"RTN","PSSLOOK",42,0)
 .S:$G(^TMP($J,"PSNVAPR",PSSNIEN,103))'="" PSSPEPAC=^TMP($J,"PSNVAPR",PSSNIEN,103)
"RTN","PSSLOOK",43,0)
 .S:$G(^TMP($J,"PSNVAPR",PSSNIEN,104))'="" PSSWSC=^TMP($J,"PSNVAPR",PSSNIEN,104)
"RTN","PSSLOOK",44,0)
 .S HAZWCNT2=1,HAZWCNT=0,DIWL=1,DIWR=50
"RTN","PSSLOOK",45,0)
 .F  S HAZWCNT=$O(^TMP($J,"PSNVAPR",PSSNIEN,105,HAZWCNT)) Q:'HAZWCNT  D
"RTN","PSSLOOK",46,0)
 .. S X="",X=^TMP($J,"PSNVAPR",PSSNIEN,105,HAZWCNT) S PSSDOTSN(HAZWCNT)=X
"RTN","PSSLOOK",47,0)
 Q
"RTN","PSSLOOK",48,0)
IT S CMOPID=$P(X,"^",2)
"RTN","PSSLOOK",49,0)
 Q
"RTN","PSSLOOK",50,0)
NDF1 S X=$$PSJDF^PSNAPIS(DA,K),VADF=$P(X,"^",2)
"RTN","PSSLOOK",51,0)
 Q
"RTN","PSSLOOK",52,0)
INACT S ACT="" I $D(^PSDRUG(IFN,"I")) S Y=$P(^PSDRUG(IFN,"I"),"^",1) X ^DD("DD") S ACT=Y
"RTN","PSSLOOK",53,0)
 Q
"RTN","PSSLOOK",54,0)
GETDATA S NODE0=^PSDRUG(IFN,0),GN=$P(NODE0,"^",1),CL=$P(NODE0,"^",2),DEA=$P(NODE0,"^",3),WRN=$P(NODE0,"^",8),NF=$P(NODE0,"^",9),MESS=$P(NODE0,"^",10),VNF=$P(NODE0,"^",11),CLASS="",WARN="" S:NF=1 NF="N/F" S:VNF=1 VNF="V-N/F"
"RTN","PSSLOOK",55,0)
 S PSSNODE=$G(^PSDRUG(IFN,"DOS"))
"RTN","PSSLOOK",56,0)
 I CL'="",$G(CLPTR)'="" S CLASS=CL_"  "_$P(^PS(50.605,CLPTR,0),"^",2)
"RTN","PSSLOOK",57,0)
 S PSSX=$Q(^PSDRUG(IFN,950)),PSSMAX=$P(@PSSX,"^",3)
"RTN","PSSLOOK",58,0)
 D GETS^DIQ(50.095,PSSMAX_","_IFN_",","*","E","PSSDAT","PSSERR")
"RTN","PSSLOOK",59,0)
 S PSSDT=$G(PSSDAT(50.095,PSSMAX_","_IFN_",",.01,"E"))
"RTN","PSSLOOK",60,0)
 S PSSUSR=$G(PSSDAT(50.095,PSSMAX_","_IFN_",",1,"E"))
"RTN","PSSLOOK",61,0)
 S PSSVAL=$G(PSSDAT(50.095,PSSMAX_","_IFN_",",3,"E"))
"RTN","PSSLOOK",62,0)
 I $D(^PSDRUG(IFN,3)) S:$P(^PSDRUG(IFN,3),"^")=0 CMOP="NO" S:$P(^PSDRUG(IFN,3),"^")=1 CMOP="YES"
"RTN","PSSLOOK",63,0)
 I $D(^PSDRUG(IFN,5)) S QDM=^PSDRUG(IFN,5)
"RTN","PSSLOOK",64,0)
 S OINM="" S NDC="" I $D(^PSDRUG(IFN,2)) S NODE2=^PSDRUG(IFN,2) S:$P(NODE2,"^",1)]"" OIPTR=$P(NODE2,"^",1) S NDC=$P(NODE2,"^",4) S:$P(NODE2,"^",6)]"" PDPTR=$P(NODE2,"^",6) S APP=$P(NODE2,"^",3),FM="" D TWOA
"RTN","PSSLOOK",65,0)
 Q
"RTN","PSSLOOK",66,0)
TWOA I $D(OIPTR) S OI=$P(^PS(50.7,OIPTR,0),"^",1),DFPTR=$P(^PS(50.7,OIPTR,0),"^",2),DF=$P(^PS(50.606,DFPTR,0),"^",1),FMS=$P(^PS(50.7,OIPTR,0),"^",12) S:FMS]"" FM=" (N/F)" S OINM=OI_" "_DF_FM
"RTN","PSSLOOK",67,0)
 ;I $D(PDPTR) S PD=$P(^PS(50.3,PDPTR,0),"^",1)
"RTN","PSSLOOK",68,0)
 Q
"RTN","PSSLOOK",69,0)
NOD66 S (DUPOU,PPDU,PPOU,DU,SS)="" I $D(^PSDRUG(IFN,660)) S NDE=^PSDRUG(IFN,660),OUPTR=$P(NDE,"^",2),PPOU=$P(NDE,"^",3),DUPOU=$P(NDE,"^",5),PPDU=$P(NDE,"^",6),SS=$P(NDE,"^",7),DU=$P(NDE,"^",8) I OUPTR]"" S OU=$P(^DIC(51.5,OUPTR,0),"^")
"RTN","PSSLOOK",70,0)
 Q
"RTN","PSSLOOK",71,0)
SYN I $D(^PSDRUG(IFN,1,0)) F ZZZ=0:0 S ZZZ=$O(^PSDRUG(IFN,1,ZZZ)) Q:'ZZZ  S SYNM=$P(^PSDRUG(IFN,1,ZZZ,0),"^",1),INT=$P(^PSDRUG(IFN,1,ZZZ,0),"^",3) D SYN1
"RTN","PSSLOOK",72,0)
 Q
"RTN","PSSLOOK",73,0)
SYN1 S INT=$S(INT=0:"Trade Name",INT=1:"Quick Code",INT="C":"Ctrl Substances",INT="D":"Drug Accountability",1:"") D FULL Q:$G(QUIT)  W ?14,SYNM,?55,INT,!
"RTN","PSSLOOK",74,0)
 Q
"RTN","PSSLOOK",75,0)
SYN2 S:INT=0 INT="Trade" S:INT=1 INT="Quick" S:INT="C" INT="Ctrl Subs" S:INT="D" INT="Drug Acct" W ?16,SYNM,?57,INT,!
"RTN","PSSLOOK",76,0)
 Q
"RTN","PSSLOOK",77,0)
IFCAP I $D(^PSDRUG(IFN,441,0)) F QQQ=0:0 S QQQ=$O(^PSDRUG(IFN,441,QQQ)) Q:'QQQ  S IFCAPNM=$P(^PSDRUG(IFN,441,QQQ,0),"^",1)
"RTN","PSSLOOK",78,0)
 Q
"RTN","PSSLOOK",79,0)
FORMAT ; BEGIN WRITING
"RTN","PSSLOOK",80,0)
 N DAW
"RTN","PSSLOOK",81,0)
 W @IOF,"DRUG NAME: ",GN,"  (IEN: ",IFN,")",!
"RTN","PSSLOOK",82,0)
 F XX=1:1:77 W "="
"RTN","PSSLOOK",83,0)
 W !
"RTN","PSSLOOK",84,0)
 W:$D(VAPRN) "VA PRINT NAME: ",?17,VAPRN W:$D(CMOPID) ?60,"CMOP ID#: ",CMOPID W:$D(VAPN) !,"VA PRODUCT NAME: ",?17,VAPN W:$D(CMOP) ?60,"CMOP DISPENSE: ",CMOP
"RTN","PSSLOOK",85,0)
 W:$D(OINM) !,"ORDERABLE ITEM: ",?17,OINM W:$D(VAPN) ?60,"NDF DF: ",VADF
"RTN","PSSLOOK",86,0)
 I $D(OIPTR),OIPTR]"" W !,"ORDERABLE ITEM TEXT: ",! D OITXT
"RTN","PSSLOOK",87,0)
 W:$D(PD) !,"PRIMARY DRUG: ",?17,PD
"RTN","PSSLOOK",88,0)
 W !,"SYNONYM(S): " D SYN D FULL Q:$G(QUIT)  W !,"MESSAGE: ",MESS,!
"RTN","PSSLOOK",89,0)
 D FULL Q:$G(QUIT)  F XX=1:1:77 W "-"
"RTN","PSSLOOK",90,0)
 W !
"RTN","PSSLOOK",91,0)
 D FULL Q:$G(QUIT)  W "DEA, SPECIAL HDLG: ",DEA,?48,"NDC: ",?63,NDC
"RTN","PSSLOOK",92,0)
 S DAW=+$$GET1^DIQ(50,IFN,81)
"RTN","PSSLOOK",93,0)
 D FULL Q:$G(QUIT)  W !,"DAW CODE:  ",DAW," - ",$$DAWEXT^PSSDAWUT(DAW)
"RTN","PSSLOOK",94,0)
 D FULL Q:$G(QUIT)  W !,"CS FEDERAL SCHEDULE: ",$G(CSF)
"RTN","PSSLOOK",95,0)
 ;
"RTN","PSSLOOK",96,0)
 ;Hazardous Waste
"RTN","PSSLOOK",97,0)
 W !
"RTN","PSSLOOK",98,0)
 S PSSHTDX=0
"RTN","PSSLOOK",99,0)
 I $G(PSSHTD)=1 S PSSHTDX=1
"RTN","PSSLOOK",100,0)
 D FULL Q:$G(QUIT)  W:$G(PSSHTH)'="" !,"Hazardous to Handle: ",$S(PSSHTH=1:"YES",PSSHTH=0:"NO",1:"")
"RTN","PSSLOOK",101,0)
 D FULL Q:$G(QUIT)  W:$G(PSSHTD)'="" !,"Hazardous to Dispose: ",$S(PSSHTD=1:"YES",PSSHTD=0:"NO",1:"")
"RTN","PSSLOOK",102,0)
 I $G(PSSPEPAC)'=""&(PSSHTDX) D FULL Q:$G(QUIT)  W !,"        Primary EPA Code: ",PSSPEPAC
"RTN","PSSLOOK",103,0)
 I $G(PSSWSC)'=""&(PSSHTDX) D FULL Q:$G(QUIT)  W !,"         Waste Sort Code: ",PSSWSC
"RTN","PSSLOOK",104,0)
 ;
"RTN","PSSLOOK",105,0)
 N HAZWCNT,HAZWCNT2,X,DIWL,DIWR,DIWF
"RTN","PSSLOOK",106,0)
 K ^UTILITY($J,"W")
"RTN","PSSLOOK",107,0)
 S HAZWCNT=0,HAZWCNT2=1,HAZWCNT=0,DIWL=1,DIWR=50
"RTN","PSSLOOK",108,0)
 F  S HAZWCNT=$O(PSSDOTSN(HAZWCNT)) Q:HAZWCNT=""  S X=PSSDOTSN(HAZWCNT) D ^DIWP
"RTN","PSSLOOK",109,0)
 S HAZWCNT=0 F  S HAZWCNT=$O(^UTILITY($J,"W",DIWL,HAZWCNT)) Q:'HAZWCNT  D
"RTN","PSSLOOK",110,0)
 .D FULL Q:$G(QUIT)
"RTN","PSSLOOK",111,0)
 .I HAZWCNT2=1 W !,"       DOT Shipping Name: "
"RTN","PSSLOOK",112,0)
 .I HAZWCNT2>1 W !,"                          "
"RTN","PSSLOOK",113,0)
 .W $G(^UTILITY($J,"W",DIWL,HAZWCNT,0)) S HAZWCNT2=2
"RTN","PSSLOOK",114,0)
 K ^UTILITY($J,"W")
"RTN","PSSLOOK",115,0)
 ;I $G(PSSDOTSN)'=""&(PSSHTDX) D FULL Q:$G(QUIT)  W !,"       DOT Shipping Name: ",PSSDOTSN
"RTN","PSSLOOK",116,0)
 W !
"RTN","PSSLOOK",117,0)
 ;
"RTN","PSSLOOK",118,0)
 D FULL Q:$G(QUIT)  W !,"INACTIVE DATE: ",ACT
"RTN","PSSLOOK",119,0)
 D FULL Q:$G(QUIT)  W:$D(QDM) !,"QUANTITY DISPENSE MESSAGE: ",QDM,!
"RTN","PSSLOOK",120,0)
 D FULL Q:$G(QUIT)  I WRN]"" W !,"WARNING LABEL: " S X=WRN F Z0=1:1 Q:$P(X,",",Z0,99)=""  S Z1=$P(X,",",Z0) W:$D(^PS(54,Z1,0)) ?19,$P(^(0),"^",1),! I '$D(^(0)) W ?19,"NO SUCH WARNING LABEL" K X Q
"RTN","PSSLOOK",121,0)
 D FULL Q:$G(QUIT)  S PSSLOOK=1 D
"RTN","PSSLOOK",122,0)
 .N DRUG,PSSWSITE
"RTN","PSSLOOK",123,0)
 .I $P($G(^PSDRUG(IFN,0)),"^")="" K PSSLOOK Q
"RTN","PSSLOOK",124,0)
 .S PSSWSITE=+$O(^PS(59.7,0)) W !,"WARNING LABEL SOURCE is " D
"RTN","PSSLOOK",125,0)
 ..I $P($G(^PS(59.7,PSSWSITE,10)),"^",9)="N" W "set to 'NEW'" Q
"RTN","PSSLOOK",126,0)
 ..W "not set to 'NEW'"
"RTN","PSSLOOK",127,0)
 .K PSSWRN
"RTN","PSSLOOK",128,0)
 .D FULL Q:$G(QUIT)  W !,"NEW WARNING LABEL:"
"RTN","PSSLOOK",129,0)
 .S ^TMP("PSSWRNB",$J,$P(^PSDRUG(IFN,0),"^"))="" D ^PSSWRNE
"RTN","PSSLOOK",130,0)
 .K PSSLOOK,^TMP("PSSWRNB",$J),PSSWRN
"RTN","PSSLOOK",131,0)
 D FULL Q:$G(QUIT)  W:'$D(QDM) ! F XX=1:1:77 W "-"
"RTN","PSSLOOK",132,0)
 D FULL Q:$G(QUIT)  W !
"RTN","PSSLOOK",133,0)
 W "ORDER UNIT: ",?27 W:$D(OU) OU W ?40,"PRICE/ORDER UNIT: ",?67,PPOU
"RTN","PSSLOOK",134,0)
 D FULL Q:$G(QUIT)  W !,"DISPENSE UNIT: ",?27,DU W:$D(VADU) ?40,"VA DISPENSE UNIT: ",?67,VADU
"RTN","PSSLOOK",135,0)
 D FULL Q:$G(QUIT)  W !,"DISPENSE UNITS/ORDER UNIT: ",?21,DUPOU,?40,"PRICE/DISPENSE UNIT: ",?67,PPDU
"RTN","PSSLOOK",136,0)
 D:$G(PSSVAL)]""
"RTN","PSSLOOK",137,0)
 . D FULL Q:$G(QUIT)  W !,"DATE PRICE/DISPENSE UNIT LAST CHANGED:  ",?27,PSSDT
"RTN","PSSLOOK",138,0)
 . D FULL Q:$G(QUIT)  W !,"BY:  ",PSSUSR,?27,"VALUE:  ",PSSVAL
"RTN","PSSLOOK",139,0)
 D FULL Q:$G(QUIT)  W !,"NCPDP DISPENSE UNIT: ",$$GET1^DIQ(50,IFN,82),?40,"NCPDP QUANTITY MULTIPLIER: ",?67,$J($$GET1^DIQ(50,IFN,83),10,5)
"RTN","PSSLOOK",140,0)
 D FULL Q:$G(QUIT)  W !,"MAXIMUM DAYS SUPPLY: ",$$GET1^DIQ(50,IFN,66)
"RTN","PSSLOOK",141,0)
 D FULL Q:$G(QUIT)  W !,"ePharmacy Billable: ",$$GET1^DIQ(50,IFN,84)
"RTN","PSSLOOK",142,0)
 D FULL Q:$G(QUIT)  W !?2,"ePharmacy Billable (TRICARE): ",$$GET1^DIQ(50,IFN,85) W ?40,"ePharmacy Billable (CHAMPVA): ",$$GET1^DIQ(50,IFN,86)
"RTN","PSSLOOK",143,0)
 D FULL Q:$G(QUIT)  W !,"Sensitive Diagnosis Drug: ",$$GET1^DIQ(50,IFN,87) W !
"RTN","PSSLOOK",144,0)
 D FULL Q:$G(QUIT)  W !,"APPL PKG USE:" S APPL="" S:'$D(APP) APPL="  NONE"
"RTN","PSSLOOK",145,0)
 I $D(APP) D
"RTN","PSSLOOK",146,0)
 . S:APP["O" APPL=APPL_"  Outpatient" S:APP["U" APPL=APPL_"  Unit Dose"
"RTN","PSSLOOK",147,0)
 . S:APP["I" APPL=APPL_"  IV" S:APP["W" APPL=APPL_"  Ward Stock"
"RTN","PSSLOOK",148,0)
 . S:APP["N" APPL=APPL_"  Control Subs" S:APP["X" APPL=APPL_"  Non-VA Med"
"RTN","PSSLOOK",149,0)
 . S:APPL="" APPL="  NONE"
"RTN","PSSLOOK",150,0)
 W ?13,APPL
"RTN","PSSLOOK",151,0)
 I $P(PSSNODE,"^",2) S (PSSCALC,PSSUNIT)=$P($G(^PS(50.607,+$P(PSSNODE,U,2),0)),U),PSSSTR=$P(PSSNODE,"^")
"RTN","PSSLOOK",152,0)
 I $G(PSSUNIT)'="",$G(PSSUNIT)["/" D UNCALC
"RTN","PSSLOOK",153,0)
 D FULL Q:$G(QUIT)  W !,"STRENGTH: ",$S($E($P(PSSNODE,U),1)=".":"0",1:"")_$P(PSSNODE,U),?35,"UNIT: ",$G(PSSCALC)
"RTN","PSSLOOK",154,0)
 D FULL Q:$G(QUIT)  W !,"POSSIBLE DOSAGES:"
"RTN","PSSLOOK",155,0)
 I $D(^PSDRUG(IFN,"DOS1",0)) F PDS=0:0 S PDS=$O(^PSDRUG(IFN,"DOS1",PDS)) Q:'PDS  D
"RTN","PSSLOOK",156,0)
 .S POSDOS=^PSDRUG(IFN,"DOS1",PDS,0)
"RTN","PSSLOOK",157,0)
 .D FULL Q:$G(QUIT)  W !,"   DISPENSE UNITS PER DOSE: ",$S($E($P(POSDOS,U),1)=".":"0",1:"")_$P(POSDOS,U),?40,"DOSE: ",$S($E($P(POSDOS,U,2),1)=".":"0",1:"")_$P(POSDOS,U,2),?55,"PACKAGE: ",$P(POSDOS,U,3)
"RTN","PSSLOOK",158,0)
 .D FULL Q:$G(QUIT)  W !,"       BCMA UNITS PER DOSE: ",$P(POSDOS,U,4)
"RTN","PSSLOOK",159,0)
 D FULL Q:$G(QUIT)  W !,"LOCAL POSSIBLE DOSAGES:"
"RTN","PSSLOOK",160,0)
 I $D(^PSDRUG(IFN,"DOS2",0)) F PDS=0:0 S PDS=$O(^PSDRUG(IFN,"DOS2",PDS)) Q:'PDS  D
"RTN","PSSLOOK",161,0)
 .S LPDOS=^PSDRUG(IFN,"DOS2",PDS,0)
"RTN","PSSLOOK",162,0)
 .D FULL Q:$G(QUIT)  W !,"   LOCAL POSSIBLE DOSAGE: " D
"RTN","PSSLOOK",163,0)
 ..I $L($P(LPDOS,U))'>27 W $P(LPDOS,U),?55,"PACKAGE: ",$P(LPDOS,U,2)
"RTN","PSSLOOK",164,0)
 ..E   W !,?10,$P(LPDOS,U),!,?55,"PACKAGE: ",$P(LPDOS,U,2)
"RTN","PSSLOOK",165,0)
 ..D FULL Q:$G(QUIT)  W !,"     BCMA UNITS PER DOSE: ",$P(LPDOS,U,3) D FULL Q:$G(QUIT)  D LPDNW
"RTN","PSSLOOK",166,0)
 D FULL Q:$G(QUIT)  W ! F XX=1:1:77 W "-"
"RTN","PSSLOOK",167,0)
 D FULL Q:$G(QUIT)  W !,"VA CLASS: ",$G(CLASS)
"RTN","PSSLOOK",168,0)
 D FULL Q:$G(QUIT)  W !,"LOCAL NON-FORMULARY: ",$G(NF),"          ","VISN NON-FORMULARY: ",$G(VNF)
"RTN","PSSLOOK",169,0)
 N DA,K,LIST,PSXDN,PSXGN,X,XX1,XX2
"RTN","PSSLOOK",170,0)
 K PSXGN,PSXVP I $D(^PSDRUG(IFN,"ND")) S PSXDN=$G(^PSDRUG(IFN,"ND")),PSXGN=$P(PSXDN,"^"),PSXVP=$P(PSXDN,"^",3)
"RTN","PSSLOOK",171,0)
 I $G(PSXGN),$G(PSXVP) S X=$$PROD2^PSNAPIS(PSXGN,PSXVP),XX1=$$FORMI^PSNAPIS(PSXGN,PSXVP)
"RTN","PSSLOOK",172,0)
 D FULL Q:$G(QUIT)  W !,"National Formulary Indicator: "_$S($G(XX1)=1:"YES",$G(XX1)=0:"NO",1:"Not Matched to NDF")
"RTN","PSSLOOK",173,0)
 I $G(PSXVP) D FD^PSNACT(PSXVP) ;PPSN
"RTN","PSSLOOK",174,0)
 I $D(^PSDRUG(IFN,65,0)) D FULL Q:$G(QUIT)  W !,"FORMULARY ALTERNATIVES: ",! F FA=0:0 S FA=$O(^PSDRUG(IFN,65,FA)) Q:'FA  S LDFPTR=$P($G(^PSDRUG(IFN,65,FA,0)),"^") I LDFPTR D FULL Q:$G(QUIT)  W ?26,$P($G(^PSDRUG(LDFPTR,0)),"^"),!
"RTN","PSSLOOK",175,0)
 N CPDATE,PSSTIER D NOW^%DTC S CPDATE=$P(%,".") S PSSTIER=$$CPTIER^PSNAPIS($P($G(^PSDRUG(IFN,"ND")),"^",3),CPDATE,IFN,1) K CPDATE,%
"RTN","PSSLOOK",176,0)
 ;  PSSTIER = Copay Tier^Effective Date^End Date
"RTN","PSSLOOK",177,0)
 W !,"Copay Tier: ",$P(PSSTIER,"^",1)
"RTN","PSSLOOK",178,0)
 W !,"Copay Effective Date: " S Y=$P(PSSTIER,"^",2) D DD^%DT W Y K Y
"RTN","PSSLOOK",179,0)
 D FULL Q:$G(QUIT)  I $G(PSXGN),$G(PSXVP) W !,"National Restriction: " S XX2=$$FORMRX^PSNAPIS(PSXGN,PSXVP,.LIST) I $G(XX2)=1,$D(LIST) F XX2=0:0 S XX2=$O(LIST(XX2)) Q:'XX2  D FULL Q:$G(QUIT)  W !,LIST(XX2,0)
"RTN","PSSLOOK",180,0)
 I $G(PSXVP) D FDT^PSNACT(PSXVP) ;PPSN
"RTN","PSSLOOK",181,0)
 W !,"Local Drug Text: ",! I $D(^PSDRUG(IFN,9,0)) D LDT
"RTN","PSSLOOK",182,0)
 Q
"RTN","PSSLOOK",183,0)
LDT F TXT1=0:0 S TXT1=$O(^PSDRUG(IFN,9,TXT1)) Q:'TXT1  S TEXPTR=^PSDRUG(IFN,9,TXT1,0) F PPP=0:0 S PPP=$O(^PS(51.7,TEXPTR,2,PPP)) Q:'PPP  S PST=$P($G(^PS(51.7,TEXPTR,0)),"^",2) I 'PST S WPT=^PS(51.7,TEXPTR,2,PPP,0) D FULL Q:$G(QUIT)  W WPT,!
"RTN","PSSLOOK",184,0)
 ;
"RTN","PSSLOOK",185,0)
 ;
"RTN","PSSLOOK",186,0)
KILL K IFN,APP,INT,VADU,VAGN,VAPN,VAPRN,P3,VAGNPTR,MESS,CLASS,DEA,ACT,CL,CLPTR,CMOP,DF,DFPTR,DU,DUPOUGN,IFCAPNM,NDC,NDE,NDNODE,NF,NODE0,NODE2,OI,OINM,OIPTR,OU,PD,PDPTR,PPDU,PPOU,PS,PT,NOD66,SYNM,SZPTR,TYPTR,WARN,WRN,XX,ZZZ,SS,OUPTR,CMOPID
"RTN","PSSLOOK",187,0)
 K DUPOU,QQQ,GN,QDM,APPL,VADF,DFP,DFRM,Y,Z0,Z1,DDD,PPP,TEXT,TXTPTR,TXT,TXT1,TEXPTR,VNF,WPT,FA,LDFPTR,TEXTPTR,QUIT,PST,D0,DA,K,DIR
"RTN","PSSLOOK",188,0)
 K PSSNODE,PSDOSUN,PDS,POSDOS,LPDOS,CSF,PSSSTR,PSSUNIT,PSSCALC,PSSTIER
"RTN","PSSLOOK",189,0)
 K ^TMP($J,"PSNVAPR")
"RTN","PSSLOOK",190,0)
 K PSSWSC,PSSNIEN,PSSHTH,PSSHTD,PSSPEPAC,PSSDOTSN,PSSCLEF,PSSPKG,PSSOMIT,PSSEXLMT,PSSHTDX,PSSII,PSSIII
"RTN","PSSLOOK",191,0)
 Q
"RTN","PSSLOOK",192,0)
OITXT I $D(^PS(50.7,OIPTR,1,0)) F TXT=0:0 S TXT=$O(^PS(50.7,OIPTR,1,TXT)) Q:'TXT  S TEXTPTR=^PS(50.7,OIPTR,1,TXT,0) F DDD=0:0 S DDD=$O(^PS(51.7,TEXTPTR,2,DDD)) Q:'DDD  D IDATE I 'Y2K S TEXT=^PS(51.7,TEXTPTR,2,DDD,0) D FULL Q:$G(QUIT)  W TEXT,!
"RTN","PSSLOOK",193,0)
 Q
"RTN","PSSLOOK",194,0)
FULL D:($Y+5)>IOSL&('$G(QUIT)) FSCRN
"RTN","PSSLOOK",195,0)
 Q
"RTN","PSSLOOK",196,0)
FSCRN Q:$G(QUIT)  W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue,'^' to exit" D ^DIR W @IOF S:Y'=1 QUIT=1
"RTN","PSSLOOK",197,0)
 Q
"RTN","PSSLOOK",198,0)
IDATE S Y2K=$P($G(^PS(51.7,TEXTPTR,0)),"^",2)
"RTN","PSSLOOK",199,0)
 Q
"RTN","PSSLOOK",200,0)
UNCALC ;
"RTN","PSSLOOK",201,0)
 N PSSVA,PSSVA1,PSSVB,PSSVB1,PSSDASH,PSSNDFS,PSSDASH2,PSSDASH3,PSSDASH5 K PSSCALC
"RTN","PSSLOOK",202,0)
 S PSSDASH=0 S PSSNDFS=$$PSJST^PSNAPIS(+$P($G(^PSDRUG(IFN,"ND")),"^"),+$P($G(^PSDRUG(IFN,"ND")),"^",3)) S PSSNDFS=+$P($G(PSSNDFS),"^",2)
"RTN","PSSLOOK",203,0)
 I $G(PSSNDFS),$G(PSSSTR),+$G(PSSSTR)'=+$G(PSSNDFS) S PSSDASH=1
"RTN","PSSLOOK",204,0)
 S PSSVA=$P(PSSUNIT,"/"),PSSVB=$P(PSSUNIT,"/",2),PSSVA1=+$G(PSSVA),PSSVB1=+$G(PSSVB)
"RTN","PSSLOOK",205,0)
 I $G(PSSDASH) S PSSDASH2=PSSSTR/PSSNDFS,PSSDASH3=PSSDASH2*$S($G(PSSVB1):PSSVB1,1:1) S PSSDASH5=$S('$G(PSSVB1):PSSDASH3_$G(PSSVB),1:PSSDASH3_$P(PSSVB,PSSVB1,2))
"RTN","PSSLOOK",206,0)
 S PSSCALC=$S($G(PSSDASH):$S('$G(PSSVA1):PSSVA,1:$P(PSSVA1,PSSVA1,2))_"/"_$G(PSSDASH5),1:PSSUNIT)
"RTN","PSSLOOK",207,0)
 Q
"RTN","PSSLOOK",208,0)
 ;
"RTN","PSSLOOK",209,0)
LPDNW ;Display Dose Unit and Numeric Dose fields, added with patch PSS*1*147
"RTN","PSSLOOK",210,0)
 N PSSLKL1,PSSLKL2,PSSLKL3,PSSLKL4
"RTN","PSSLOOK",211,0)
 S PSSLKL4=""
"RTN","PSSLOOK",212,0)
 S PSSLKL1=$P(LPDOS,"^",5),PSSLKL2=$P(LPDOS,"^",6)
"RTN","PSSLOOK",213,0)
 I PSSLKL1 S PSSLKL4=$P($G(^PS(51.24,+PSSLKL1,0)),"^")
"RTN","PSSLOOK",214,0)
 S PSSLKL3=$S($E(PSSLKL2)=".":"0",1:"")_PSSLKL2
"RTN","PSSLOOK",215,0)
 I $L(PSSLKL3)<18 D FULL Q:$G(QUIT)  W !?5,"NUMERIC DOSE: "_PSSLKL3,?38,"DOSE UNIT: "_PSSLKL4 Q
"RTN","PSSLOOK",216,0)
 D FULL Q:$G(QUIT)  W !?5,"NUMERIC DOSE: "_PSSLKL3
"RTN","PSSLOOK",217,0)
 D FULL Q:$G(QUIT)  W !?38,"DOSE UNIT: "_PSSLKL4
"RTN","PSSLOOK",218,0)
 Q
"VER")
8.0^22.2
**END**
**END**
