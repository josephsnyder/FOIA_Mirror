KIDS Distribution saved on Oct 18, 2018@08:29:39
PRCA*4.5*326 IB*2.0*609
**KIDS**:PRCA IB EPAYMENTS BUNDLE 3.0^IB*2.0*609^PRCA*4.5*326^

**INSTALL NAME**
PRCA IB EPAYMENTS BUNDLE 3.0
"BLD",10688,0)
PRCA IB EPAYMENTS BUNDLE 3.0^^1^3181018^y
"BLD",10688,1,0)
^^5^5^3180815^^
"BLD",10688,1,1,0)
The purpose of this patch is to meet the requirements of the Medical Care
"BLD",10688,1,2,0)
Collection Fund (MCCF) Electronic Data Interchange (EDI) Transaction 
"BLD",10688,1,3,0)
Application Suite (TAS) Phase 1 project as related to Accounts Receivable
"BLD",10688,1,4,0)
(PRCA). Two patches will be released in this KIDS multi-build distribution
"BLD",10688,1,5,0)
containing: PRCA*4.5*326 and IB*2*609.
"BLD",10688,6.3)
15
"BLD",10688,10,0)
^9.63^2^2
"BLD",10688,10,1,0)
IB*2.0*609^1
"BLD",10688,10,2,0)
PRCA*4.5*326^1
"BLD",10688,10,"B","IB*2.0*609",1)

"BLD",10688,10,"B","PRCA*4.5*326",2)

"BLD",10688,"KRN",0)
^9.67PA^779.2^20
"BLD",10688,"KRN",.4,0)
.4
"BLD",10688,"KRN",.401,0)
.401
"BLD",10688,"KRN",.402,0)
.402
"BLD",10688,"KRN",.403,0)
.403
"BLD",10688,"KRN",.5,0)
.5
"BLD",10688,"KRN",.84,0)
.84
"BLD",10688,"KRN",3.6,0)
3.6
"BLD",10688,"KRN",3.8,0)
3.8
"BLD",10688,"KRN",9.2,0)
9.2
"BLD",10688,"KRN",9.8,0)
9.8
"BLD",10688,"KRN",19,0)
19
"BLD",10688,"KRN",19.1,0)
19.1
"BLD",10688,"KRN",101,0)
101
"BLD",10688,"KRN",409.61,0)
409.61
"BLD",10688,"KRN",771,0)
771
"BLD",10688,"KRN",779.2,0)
779.2
"BLD",10688,"KRN",870,0)
870
"BLD",10688,"KRN",8989.51,0)
8989.51
"BLD",10688,"KRN",8989.52,0)
8989.52
"BLD",10688,"KRN",8994,0)
8994
"BLD",10688,"KRN","B",.4,.4)

"BLD",10688,"KRN","B",.401,.401)

"BLD",10688,"KRN","B",.402,.402)

"BLD",10688,"KRN","B",.403,.403)

"BLD",10688,"KRN","B",.5,.5)

"BLD",10688,"KRN","B",.84,.84)

"BLD",10688,"KRN","B",3.6,3.6)

"BLD",10688,"KRN","B",3.8,3.8)

"BLD",10688,"KRN","B",9.2,9.2)

"BLD",10688,"KRN","B",9.8,9.8)

"BLD",10688,"KRN","B",19,19)

"BLD",10688,"KRN","B",19.1,19.1)

"BLD",10688,"KRN","B",101,101)

"BLD",10688,"KRN","B",409.61,409.61)

"BLD",10688,"KRN","B",771,771)

"BLD",10688,"KRN","B",779.2,779.2)

"BLD",10688,"KRN","B",870,870)

"BLD",10688,"KRN","B",8989.51,8989.51)

"BLD",10688,"KRN","B",8989.52,8989.52)

"BLD",10688,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.2
**INSTALL NAME**
IB*2.0*609
"BLD",10686,0)
IB*2.0*609^INTEGRATED BILLING^0^3181018^y
"BLD",10686,4,0)
^9.64PA^^
"BLD",10686,6.3)
26
"BLD",10686,"KRN",0)
^9.67PA^779.2^20
"BLD",10686,"KRN",.4,0)
.4
"BLD",10686,"KRN",.401,0)
.401
"BLD",10686,"KRN",.402,0)
.402
"BLD",10686,"KRN",.403,0)
.403
"BLD",10686,"KRN",.5,0)
.5
"BLD",10686,"KRN",.84,0)
.84
"BLD",10686,"KRN",3.6,0)
3.6
"BLD",10686,"KRN",3.8,0)
3.8
"BLD",10686,"KRN",9.2,0)
9.2
"BLD",10686,"KRN",9.8,0)
9.8
"BLD",10686,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",10686,"KRN",9.8,"NM",1,0)
IBJTEP^^0^B143453029
"BLD",10686,"KRN",9.8,"NM",2,0)
IBJTPE^^0^B134537091
"BLD",10686,"KRN",9.8,"NM",3,0)
IBJTTB1^^0^B26656525
"BLD",10686,"KRN",9.8,"NM",4,0)
IBJTTA1^^0^B11283229
"BLD",10686,"KRN",9.8,"NM","B","IBJTEP",1)

"BLD",10686,"KRN",9.8,"NM","B","IBJTPE",2)

"BLD",10686,"KRN",9.8,"NM","B","IBJTTA1",4)

"BLD",10686,"KRN",9.8,"NM","B","IBJTTB1",3)

"BLD",10686,"KRN",19,0)
19
"BLD",10686,"KRN",19.1,0)
19.1
"BLD",10686,"KRN",101,0)
101
"BLD",10686,"KRN",409.61,0)
409.61
"BLD",10686,"KRN",771,0)
771
"BLD",10686,"KRN",779.2,0)
779.2
"BLD",10686,"KRN",870,0)
870
"BLD",10686,"KRN",8989.51,0)
8989.51
"BLD",10686,"KRN",8989.52,0)
8989.52
"BLD",10686,"KRN",8994,0)
8994
"BLD",10686,"KRN","B",.4,.4)

"BLD",10686,"KRN","B",.401,.401)

"BLD",10686,"KRN","B",.402,.402)

"BLD",10686,"KRN","B",.403,.403)

"BLD",10686,"KRN","B",.5,.5)

"BLD",10686,"KRN","B",.84,.84)

"BLD",10686,"KRN","B",3.6,3.6)

"BLD",10686,"KRN","B",3.8,3.8)

"BLD",10686,"KRN","B",9.2,9.2)

"BLD",10686,"KRN","B",9.8,9.8)

"BLD",10686,"KRN","B",19,19)

"BLD",10686,"KRN","B",19.1,19.1)

"BLD",10686,"KRN","B",101,101)

"BLD",10686,"KRN","B",409.61,409.61)

"BLD",10686,"KRN","B",771,771)

"BLD",10686,"KRN","B",779.2,779.2)

"BLD",10686,"KRN","B",870,870)

"BLD",10686,"KRN","B",8989.51,8989.51)

"BLD",10686,"KRN","B",8989.52,8989.52)

"BLD",10686,"KRN","B",8994,8994)

"BLD",10686,"QUES",0)
^9.62^^
"BLD",10686,"REQB",0)
^9.611^^
"MBREQ")
1
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,20,0)
^9.402P^1^1
"PKG",230,20,1,0)
2^^IBAXDR
"PKG",230,20,1,1)

"PKG",230,20,"B",2,1)

"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
609^3181018^520824650
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","IBJTEP")
0^1^B143453029
"RTN","IBJTEP",1,0)
IBJTEP ;ALB/TJB - TP ERA/835 INFORMATION SCREEN ;01-MAY-2015
"RTN","IBJTEP",2,0)
 ;;2.0;INTEGRATED BILLING;**530,609**;21-MAR-94;Build 26
"RTN","IBJTEP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTEP",4,0)
 ;; ;
"RTN","IBJTEP",5,0)
EN ; -- main entry point for IBJT ERA 835 INFORMATION
"RTN","IBJTEP",6,0)
 D EN^VALM("IBJT ERA 835 INFORMATION")
"RTN","IBJTEP",7,0)
 Q
"RTN","IBJTEP",8,0)
 ;
"RTN","IBJTEP",9,0)
HDR ; -- header code
"RTN","IBJTEP",10,0)
 N IBRP,IBREJ S IBRP(U)=", "
"RTN","IBJTEP",11,0)
 ; Add the EEOB, Reject and ECME indicators to the Bill
"RTN","IBJTEP",12,0)
 S IBREJ=$S($$BILLREJ^IBJTU6(EPBILL):"c",1:"")
"RTN","IBJTEP",13,0)
 S VALMHDR(1)=$$EEOB^IBJTLA1(IBIFN)_IBREJ_EPBILL_$$ECME^IBTRE(IBIFN)_"  "_$E(EPNM,1,20)_"  "_EPSS_" DOB: "_EPDOB_"  Subsc ID: "_EPSID
"RTN","IBJTEP",14,0)
 S VALMHDR(2)="Svc Date: "_EPDOS_"  Orig Amt: "_EPAMT_"  ERA#: "_$$REPLACE^XLFSTR(ERALST,.IBRP)
"RTN","IBJTEP",15,0)
 Q
"RTN","IBJTEP",16,0)
 ;
"RTN","IBJTEP",17,0)
INIT ; -- init variables and list array
"RTN","IBJTEP",18,0)
 N AQ,EPIEN,EPTN,ERAIEN,EPARR,EPPCT,EOBCT,EOBMX,FL,IBAR,IBI,IBCOL,IBEBERA,IBRX,IBSHEOB,IBSPEOB ; IB*2.0*609
"RTN","IBJTEP",19,0)
 N II,LINE,QQ,RCBAMT,RCRC,RCOIN,RCDED,RCERR,RCFLD,RMIEN,RCRDC,RCRLN,RCXY,RCMD,Z
"RTN","IBJTEP",20,0)
 S EOBMX=0
"RTN","IBJTEP",21,0)
 S ERALST="",$P(SP80," ",80)=" "
"RTN","IBJTEP",22,0)
 ; IBIFN comes in from the TPJI screen and will be cleaned up there
"RTN","IBJTEP",23,0)
 I '$G(IBIFN) S VALMQUIT="" G INITQ
"RTN","IBJTEP",24,0)
 K EPARR D BILL^IBRFN3(IBIFN,.EPARR) ; Get Bill information
"RTN","IBJTEP",25,0)
 S EPBILL=EPARR("BN") ; K-Bill
"RTN","IBJTEP",26,0)
 S EPPAT=$$GET1^DIQ(399,IBIFN_",",.02,"I") ; Get Patient IEN 
"RTN","IBJTEP",27,0)
 S EPNM=$$GET1^DIQ(399,IBIFN_",",.02) ; Get Patient Name
"RTN","IBJTEP",28,0)
 ; Get Total Charges and justify the amount
"RTN","IBJTEP",29,0)
 S EPAMT=$J(EPARR("TCG"),$L(EPARR("TCG")),2)
"RTN","IBJTEP",30,0)
 S EPSS=$E(EPNM)_$$GET1^DIQ(2,EPPAT_",",.364) ; Get Short SSN
"RTN","IBJTEP",31,0)
 S EPDOB=$$GET1^DIQ(2,EPPAT_",",.03) ; Get DOB
"RTN","IBJTEP",32,0)
 S EPSID=$P(EPARR("PIN"),U,6) ; Get Subscriber ID
"RTN","IBJTEP",33,0)
 S EPDOS=$$FMTE^XLFDT(EPARR("STF"),"5DZ") ; Get Date of Service
"RTN","IBJTEP",34,0)
 S:EPARR("STF")'=EPARR("STT") EPDOS=EPDOS_" - "_$$FMTE^XLFDT(EPARR("STT"),"5DZ") ; If Bill for date range
"RTN","IBJTEP",35,0)
 ; Check to see if we may have an EEOB if not report no ERA Information for this K-Bill
"RTN","IBJTEP",36,0)
 S EPIEN=$O(^IBM(361.1,"B",$G(IBIFN),"")) I EPIEN="" S VALMCNT=2 D SET^VALM10(1," "),SET^VALM10(2,"No ERA Information for Bill: "_EPBILL) G INITQ
"RTN","IBJTEP",37,0)
 ; Get % Collected from AR claim - IA 1452 - IB*2.0*609
"RTN","IBJTEP",38,0)
 S IBAR=$$BILL^RCJIBFN2(IBIFN),IBCOL=$P(IBAR,U,5)
"RTN","IBJTEP",39,0)
 ; Collect all possible EOBs associated with this Claim
"RTN","IBJTEP",40,0)
 S IBSHEOB=0,IBI=0 F  S IBI=$O(^IBM(361.1,"B",IBIFN,IBI)) Q:'IBI  S IBSHEOB=IBSHEOB+1,IBSHEOB(IBI)=0
"RTN","IBJTEP",41,0)
 ; Loop on the IEN for the EEOBs - exclude MRAs, but include all insurances 
"RTN","IBJTEP",42,0)
 S EPIEN="",LINE=0,EOBCT=0 F  S EPIEN=$O(IBSHEOB(EPIEN)) Q:EPIEN=""  D
"RTN","IBJTEP",43,0)
 . Q:$P($G(^IBM(361.1,EPIEN,0)),U,4)=1  ; Get next because this is an MRA
"RTN","IBJTEP",44,0)
 . S EPTN=$$GET1^DIQ(361.1,EPIEN_",",.07),ERAIEN=$O(^RCY(344.4,"D",EPTN,""))
"RTN","IBJTEP",45,0)
 . Q:U_ERALST_U[(U_ERAIEN_U)  ; Quit if we have already reported this ERA #
"RTN","IBJTEP",46,0)
 . S ERAIEN=ERAIEN_"," K IBEPAR,IBPLB
"RTN","IBJTEP",47,0)
 . D GETS^DIQ(344.4,ERAIEN,".01;.02;.03;.04;.05;.06;.07;.08;.09;.1;.11;.12;.13;.14;.15;4.02;","E","IBEPAR")
"RTN","IBJTEP",48,0)
 . D GETS^DIQ(344.4,ERAIEN,"2*;","E","IBPLB") ; ERA Level Adjustments
"RTN","IBJTEP",49,0)
 . Q:$D(IBEPAR)'>0  ; No IBEPAR - no data done with this record.
"RTN","IBJTEP",50,0)
 . S ERALST=$$PUSH(ERALST,ERAIEN) S XLN="ERA#: "_$G(IBEPAR("344.4",ERAIEN,".01","E")),XSP=$E(SP80,1,(22-$L(XLN)))
"RTN","IBJTEP",51,0)
 . S EPPCT=$S($G(EPARR("TCG"))>0:($G(IBEPAR("344.4",ERAIEN,".05","E"))/EPARR("TCG"))*100,1:0)
"RTN","IBJTEP",52,0)
 . D SET(.LINE,"** ERA SUMMARY DATA ** ")
"RTN","IBJTEP",53,0)
 . D SET(.LINE,XLN_XSP_"TRACE#: "_$G(IBEPAR("344.4",ERAIEN,".02","E")))
"RTN","IBJTEP",54,0)
 . ; Holding onto the line below because the change of calculation 
"RTN","IBJTEP",55,0)
 . ; S XLN="ERA DATE (PAYER): "_$G(IBEPAR("344.4",ERAIEN,".04","E"))_"     TOTAL AMT PD: "_$J($G(IBEPAR("344.4",ERAIEN,".05","E")),9)_"   % COLLECTED: "_$J(EPPCT,6,2)
"RTN","IBJTEP",56,0)
 . S XLN="ERA DATE (PAYER): "_$G(IBEPAR("344.4",ERAIEN,".04","E"))_"                 TOTAL AMT PD: "_$J($G(IBEPAR("344.4",ERAIEN,".05","E")),9)
"RTN","IBJTEP",57,0)
 . D SET(.LINE,XLN)
"RTN","IBJTEP",58,0)
 . D SET(.LINE,"PAYER NAME/TIN: "_$G(IBEPAR("344.4",ERAIEN,".06","E"))_"/"_$G(IBEPAR("344.4",ERAIEN,".03","E")))
"RTN","IBJTEP",59,0)
 . D SET(.LINE,"FILE DATE/TIME: "_$G(IBEPAR("344.4",ERAIEN,".07","E")))
"RTN","IBJTEP",60,0)
 . D SET(.LINE,"EFT MATCH STATUS: "_$G(IBEPAR("344.4",ERAIEN,".09","E")))
"RTN","IBJTEP",61,0)
 . S XLN="ERA TYPE: "_$G(IBEPAR("344.4",ERAIEN,".1","E")),XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTEP",62,0)
 . D SET(.LINE,XLN_XSP_"INDIVIDUAL EOB COUNT: "_$G(IBEPAR("344.4",ERAIEN,".11","E")))
"RTN","IBJTEP",63,0)
 . S XLN="MAIL MESSAGE: "_$G(IBEPAR("344.4",ERAIEN,".12","E")),XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTEP",64,0)
 . D SET(.LINE,XLN_XSP_"CHECK#: "_$G(IBEPAR("344.4",ERAIEN,".13","E")))
"RTN","IBJTEP",65,0)
 . S XLN="DETAIL POST STATUS: "_$G(IBEPAR("344.4",ERAIEN,".14","E")),XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTEP",66,0)
 . D SET(.LINE,XLN_XSP_"EXPECTED PAYMENT METHOD CODE: "_$G(IBEPAR("344.4",ERAIEN,".15","E")))
"RTN","IBJTEP",67,0)
 . D SET(.LINE," ")
"RTN","IBJTEP",68,0)
 . D SET(.LINE,"********** ERA LEVEL ADJUSTMENTS **********")
"RTN","IBJTEP",69,0)
 . I $D(IBPLB)=0 D SET(.LINE,"  -- NONE --")
"RTN","IBJTEP",70,0)
 . D:$D(IBPLB)'=0  ; If we have PLB Data report it
"RTN","IBJTEP",71,0)
 .. S FL="",RCF=0 F  S FL=$O(IBPLB(344.42,FL)) Q:FL=""  D
"RTN","IBJTEP",72,0)
 ... I RCF'=0 D SET(.LINE," ")
"RTN","IBJTEP",73,0)
 ... S RCF=RCF+1
"RTN","IBJTEP",74,0)
 ... S XLN="   ADJUSTMENT REASON CODE: "_IBPLB(344.42,FL,.02,"E"),XSP=$E(SP80,1,(45-$L(XLN)))
"RTN","IBJTEP",75,0)
 ... I $G(IBPLB(344.42,FL,.02,"E"))'="" S ACT=$$FIND1^DIC(345.1,,"B",IBPLB(344.42,FL,.02,"E")),ACT=$$GET1^DIQ(345.1,ACT,.05)
"RTN","IBJTEP",76,0)
 ... D SET(.LINE,XLN_XSP_"ADJUSTMENT AMOUNT: "_$J(IBPLB(344.42,FL,.03,"E"),9))
"RTN","IBJTEP",77,0)
 ... D SET(.LINE,"   ADJUSTMENT CODE TEXT: "_ACT)
"RTN","IBJTEP",78,0)
 ... D SET(.LINE,"   REFERENCE: "_IBPLB(344.42,FL,.01,"E"))
"RTN","IBJTEP",79,0)
 . D SET(.LINE," ")
"RTN","IBJTEP",80,0)
 . K IBEBERA S ZZEPIEN=EPIEN D EEOB^IBJTEP1("IBEBERA",ERAIEN,EPBILL,1)
"RTN","IBJTEP",81,0)
 . F EOBCT=1:1:IBEBERA D
"RTN","IBJTEP",82,0)
 .. K IBEOB,IBGX,IBCL,IBDGCR,IBRX,IBSPL,IBEERR S EPIEN=$O(IBEBERA(EOBCT,""))
"RTN","IBJTEP",83,0)
 .. D GETS^DIQ(361.1,EPIEN_",",".01;.02;.03;.04;.06;.14;1.01;1.02;1.03;1.1;1.11;2.03;2.04;3.03;3.04;3.05;3.06;3.07;","EI","IBEOB")
"RTN","IBJTEP",84,0)
 .. D GETS^DIQ(361.1,EPIEN_",","10*;","EI","IBGX"),RESORT^IBJTEP1("IBGX",361.111),RESORT^IBJTEP1("IBGX",361.11) ; Claim Level Adjustments
"RTN","IBJTEP",85,0)
 .. D GETS^DIQ(361.1,EPIEN_",","15*;","EI","IBCL") ; Line Level Adjustments
"RTN","IBJTEP",86,0)
 .. D GETS^DIQ(361.1,EPIEN_",","8*;","EI","IBSPL") ; ERA Splits for this EEOB
"RTN","IBJTEP",87,0)
 .. D GETS^DIQ(361.1,EPIEN_",","20;","","IBEERR") ; EOB Errors if they exist
"RTN","IBJTEP",88,0)
 .. ; Make it easier to walk the data
"RTN","IBJTEP",89,0)
 .. D RESORT^IBJTEP1("IBCL",361.11511),RESORT^IBJTEP1("IBCL",361.115),RESORT^IBJTEP1("IBCL",361.1151)
"RTN","IBJTEP",90,0)
 .. D RESORT^IBJTEP1("IBCL",361.1152),RESORT^IBJTEP1("IBCL",361.1154)
"RTN","IBJTEP",91,0)
 .. D GETS^DIQ(399,IBEOB(361.1,EPIEN_",",.01,"I")_",","460;","EI","IBDGCR")
"RTN","IBJTEP",92,0)
 .. D SET(.LINE,"********** EOB/835 INFORMATION ("_EOBCT_" of "_IBEBERA_") **********")
"RTN","IBJTEP",93,0)
 .. S XLN="  EOB Type: "_$G(IBEOB("361.1",EPIEN_",",".04","E")),XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTEP",94,0)
 .. D SET(.LINE,XLN_XSP_"EOB Paid Date: "_$G(IBEOB("361.1",EPIEN_",",".06","E")))
"RTN","IBJTEP",95,0)
 .. S TSDT=$$FMTE^XLFDT($G(IBEOB("361.1",EPIEN_",","1.1","I")),"2Z"),TEDT=$$FMTE^XLFDT($G(IBEOB("361.1",EPIEN_",","1.11","I")),"2Z"),XLN="  Svc From Date: "_TSDT,XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTEP",96,0)
 .. D SET(.LINE,XLN_XSP_"Svc to Date: "_TEDT)
"RTN","IBJTEP",97,0)
 .. D SET(.LINE,"         ICN: "_$G(IBEOB("361.1",EPIEN_",",".14","E")))
"RTN","IBJTEP",98,0)
 .. D SET(.LINE,"  Payer Name/TIN: "_$G(IBEOB("361.1",EPIEN_",",".02","E"))_"/"_$G(IBEOB("361.1",EPIEN_",",".03","E")))
"RTN","IBJTEP",99,0)
 .. S XLN="     ERA #: "_$G(IBEPAR("344.4",ERAIEN,".01","E")),XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTEP",100,0)
 .. D SET(.LINE,XLN_XSP_"Auto-Post Status: "_$G(IBEPAR("344.4",ERAIEN,"4.02","E")))
"RTN","IBJTEP",101,0)
 .. D SET(.LINE,"   Trace #: "_$G(IBEPAR("344.4",ERAIEN,".02","E")))
"RTN","IBJTEP",102,0)
 .. S TECME=$P($G(IBDGCR(399,IBEOB(361.1,EPIEN_",",.01,"I")_",",460,"E")),";",1)
"RTN","IBJTEP",103,0)
 .. D GETRX^IBJTEP1(EPIEN,.IBRX)
"RTN","IBJTEP",104,0)
 .. S TRX=$$GET1^DIQ(52,+TECME_",",".01")_"/"_$G(IBRX("FILL"))_"/"_$G(IBRX("RELEASED STATUS"))
"RTN","IBJTEP",105,0)
 .. I TECME="" S TRX=""
"RTN","IBJTEP",106,0)
 .. S XLN=" ECME #: "_TECME,XSP=$E(SP80,1,(25-$L(XLN))),XSP1=$E(SP80,1,(39-$L(XLN_XSP_"DOS: "_$G(IBRX("DOS")))))
"RTN","IBJTEP",107,0)
 .. D SET(.LINE,XLN_XSP_"DOS: "_$G(IBRX("DOS"))_XSP1_"Rx/Fill/Release Status: "_TRX)
"RTN","IBJTEP",108,0)
 .. D SET(.LINE,"--------------------------------------------------------------------------------")
"RTN","IBJTEP",109,0)
 .. D:$D(IBSPL)>1  ; This EEOB was split display split payment information
"RTN","IBJTEP",110,0)
 ... N SPL
"RTN","IBJTEP",111,0)
 ... D SET(.LINE,"** A/R CORRECTED PAYMENT DATA:")
"RTN","IBJTEP",112,0)
 ... D SET(.LINE,"   TOTAL AMT PD:          "_$J(IBEOB(361.1,EPIEN_",",1.01,"E"),9,2))
"RTN","IBJTEP",113,0)
 ... S SPL="" F  S SPL=$O(IBSPL(361.18,SPL)) Q:SPL=""  D
"RTN","IBJTEP",114,0)
 .... D SET(.LINE,"     "_$S(IBSPL(361.18,SPL,.03,"I")'="":$$BN1^PRCAFN(IBSPL(361.18,SPL,.03,"I"))_$J("",8),1:"[suspense] "_IBSPL(361.18,SPL,.01,"E"))_"  "_$J(IBSPL(361.18,SPL,.02,"E"),9,2))
"RTN","IBJTEP",115,0)
 ... D SET(.LINE," ")
"RTN","IBJTEP",116,0)
 .. D SET(.LINE,"CLAIM LEVEL PAY STATUS:")
"RTN","IBJTEP",117,0)
 .. D SET(.LINE,"  Total Submitted Charges :"_$J($G(IBEOB("361.1",EPIEN_",","2.04","E")),11,2)_"  Payer Covered Amount    :"_$J($G(IBEOB("361.1",EPIEN_",","1.03","E")),11,2))
"RTN","IBJTEP",118,0)
 .. D SET(.LINE,"  Payer Paid Amount       :"_$J($G(IBEOB("361.1",EPIEN_",","1.01","E")),11,2)_"  MEDICARE Allowed Amount :"_$J($G(IBEOB("361.1",EPIEN_",","2.03","E")),11,2))
"RTN","IBJTEP",119,0)
 .. D SET(.LINE,"  Patient Responsibility  :"_$J($G(IBEOB("361.1",EPIEN_",","1.02","E")),11,2)_" %              Collected :"_$J(+IBCOL,11,0)_" %") ; IB*2.0*609
"RTN","IBJTEP",120,0)
 .. D SET(.LINE,"--------------------------------------------------------------------------------")
"RTN","IBJTEP",121,0)
 .. D SET(.LINE,"CLAIM LEVEL ADJUSTMENTS:")
"RTN","IBJTEP",122,0)
 .. S AA="",ACNT=0 F  S AA=$O(IBGX(361.11,AA)) Q:AA=""  S ACNT=ACNT+1,AQ="" D
"RTN","IBJTEP",123,0)
 ... S CC=AA F  S CC=$O(IBGX(361.111,CC)) Q:$E(CC,1,$L(AA))'=AA  D
"RTN","IBJTEP",124,0)
 .... I AQ="" S AQ=$J(ACNT,3)_") "
"RTN","IBJTEP",125,0)
 .... E  S ACNT=ACNT+1,AQ=$J(ACNT,3)_") "
"RTN","IBJTEP",126,0)
 .... D SET(.LINE,AQ_"ADJ. AMT: "_$J(IBGX(361.111,CC,.02,"E"),9,2)_"  ADJ GROUP: "_IBGX(361.11,AA,.01,"I")_" => "_IBGX(361.11,AA,.01,"E"))
"RTN","IBJTEP",127,0)
 .... S RMIEN=$$FIND1^DIC(345,"","BX",IBGX(361.111,CC,.01,"E"),"","","RCERR")
"RTN","IBJTEP",128,0)
 .... I RMIEN'="" K RCERR,RCRDC,RCFLD S RCXY=$$GET1^DIQ(345,RMIEN_",",4,"","RCRDC","RCERR") D DLN("RCRDC","RCFLD",55,69)
"RTN","IBJTEP",129,0)
 .... D SET(.LINE,"     ADJ. CODE: "_IBGX(361.111,CC,.01,"E")_" => "_RCFLD(1))
"RTN","IBJTEP",130,0)
 .... I RCFLD>1 F II=2:1:RCFLD D SET(.LINE,"          "_RCFLD(II))
"RTN","IBJTEP",131,0)
 .. I ACNT=0 D SET(.LINE,"  -- None --")
"RTN","IBJTEP",132,0)
 .. D SET(.LINE,"CLAIM LEVEL REMARKS: ")
"RTN","IBJTEP",133,0)
 .. S RCRC=0 F II="3.03","3.04","3.05","3.06","3.07" D:IBEOB("361.1",EPIEN_",",II,"E")'=""
"RTN","IBJTEP",134,0)
 ... ; Get IEN for this remark code - if no IEN then need to look at the data "RM1" to "RM5"
"RTN","IBJTEP",135,0)
 ... S RMIEN=$$FIND1^DIC(346,"","BX",IBEOB("361.1",EPIEN_",",II,"E"),"","","RCERR")
"RTN","IBJTEP",136,0)
 ... I RMIEN'="" K RCERR,RCRDC,RCFLD S RCXY=$$GET1^DIQ(346,RMIEN_",",4,"","RCRDC","RCERR") D DLN("RCRDC","RCFLD",57,69)
"RTN","IBJTEP",137,0)
 ... I RMIEN="" S RCFLD=$S(II="3.03":5.011,II="3.04":5.021,II="3.05":5.031,II="3.06":5.041,II="3.07":5.051,1:5.011) S RCRLN=$$GET1^DIQ(361.1,EPIEN_",",RCFLD)
"RTN","IBJTEP",138,0)
 ... S RCRC=RCRC+1 D SET(.LINE,"  --- REMARK CODE("_RCRC_"): "_IBEOB("361.1",EPIEN_",",II,"E")_" => "_RCFLD(1))
"RTN","IBJTEP",139,0)
 ... I RCFLD>1 F II=2:1:RCFLD D SET(.LINE,"          "_RCFLD(II))
"RTN","IBJTEP",140,0)
 .. I RCRC=0 D SET(.LINE,"  -- None --")
"RTN","IBJTEP",141,0)
 .. D SET(.LINE,"--------------------------------------------------------------------------------")
"RTN","IBJTEP",142,0)
 .. ; Walk through the line level information...
"RTN","IBJTEP",143,0)
 .. D SET(.LINE,"EEOB LINE LEVEL ADJUSTMENTS:")
"RTN","IBJTEP",144,0)
 .. K ^XTMP("IBJTEP",$J) M ^XTMP("IBJTEP",$J)=IBCL
"RTN","IBJTEP",145,0)
 .. S RCPL=0,EE="" F  S EE=$O(IBCL(361.115,EE)) Q:EE=""  S RCPL=RCPL+1 D
"RTN","IBJTEP",146,0)
 ... S QQ=EE,RCMD="" F  S QQ=$O(IBCL(361.1152,QQ)) Q:$E(QQ,1,$L(EE))'=EE  S RCMD=IBCL(361.1152,QQ,.01,"I")
"RTN","IBJTEP",147,0)
 ... D SET(.LINE," #   SV DT  REVCD   PROC  MOD  UNITS   BILLED  DEDUCT   COINS    ALLOW     PYMT")
"RTN","IBJTEP",148,0)
 ... S RCBAMT=$$BILLN^IBJTEP1(IBEOB(361.1,EPIEN_",",.01,"I"),IBCL(361.115,EE,.1,"E"),IBCL(361.115,EE,.04,"E"))
"RTN","IBJTEP",149,0)
 ... S RCDED=$$ADJU^IBJTEP1("DEDUCT",.IBCL,EE),RCOIN=$$ADJU^IBJTEP1("COINS",.IBCL,EE) ; Get Deductable and Co-Insurance amts.
"RTN","IBJTEP",150,0)
 ... S XLN=$J(RCPL,2,0)_" "_$$FMTE^XLFDT(IBCL(361.115,EE,.16,"I"),"2Z")_" "_$$CJ^XLFSTR(IBCL(361.115,EE,.1,"E"),5)_" "_$$CJ^XLFSTR(IBCL(361.115,EE,.04,"E"),8)_$$CJ^XLFSTR(RCMD,5)_" "_$$CJ^XLFSTR(IBCL(361.115,EE,.11,"E"),3)
"RTN","IBJTEP",151,0)
 ... D SET(.LINE,XLN_" "_$J(RCBAMT,9,2)_$J(RCDED,8,2)_$J(RCOIN,8,2)_$J(IBCL(361.115,EE,.13,"E"),9,2)_$J(IBCL(361.115,EE,.03,"E"),9,2))
"RTN","IBJTEP",152,0)
 ... D SET(.LINE," ")
"RTN","IBJTEP",153,0)
 ... D SET(.LINE,"  Product/Service Description:"_IBCL(361.115,EE,.09,"E"))
"RTN","IBJTEP",154,0)
 ... D SET(.LINE,"  Payer Policy Reference:"_$G(IBCL(361.11512,EE,.01,"E")))
"RTN","IBJTEP",155,0)
 ... D SET(.LINE," ")
"RTN","IBJTEP",156,0)
 ... S ACNT=0,AA=EE F  S AA=$O(IBCL(361.1151,AA)) Q:$E(AA,1,$L(EE))'=EE  D
"RTN","IBJTEP",157,0)
 .... S ACNT=ACNT+1
"RTN","IBJTEP",158,0)
 .... S CC=AA,RCRC=0 F  S CC=$O(IBCL(361.11511,CC)) Q:$E(CC,1,$L(AA))'=AA  D
"RTN","IBJTEP",159,0)
 ..... S RCRC=RCRC+1 D SET(.LINE,"  -> ADJ AMT: "_$J(IBCL(361.11511,CC,.02,"E"),9,2)_"  ADJ GROUP: "_IBCL(361.1151,AA,.01,"I")_" - "_IBCL(361.1151,AA,.01,"E")_"  "_$$CJ^XLFSTR("QTY: "_+$G(IBCL(361.11511,CC,.03,"E")),8))
"RTN","IBJTEP",160,0)
 ..... S RCXY=$$FIND1^DIC(345,"","BX",IBCL(361.11511,CC,.01,"E"),"","","RCERR")
"RTN","IBJTEP",161,0)
 ..... K RCRDC,RCERR S RCXY=$$GET1^DIQ(345,RCXY_",",4,"","RCRDC","RCERR")
"RTN","IBJTEP",162,0)
 ..... I $D(RCRDC)>0 K RCFLD D DLN("RCRDC","RCFLD",57,57)
"RTN","IBJTEP",163,0)
 ..... I $D(RCRDC)=0 K RCFLD S RCRDC(1)=IBCL(361.11511,CC,.04,"E") D DLN("RCRDC","RCFLD",57,57) ; If no data from file 345 use data from FMS
"RTN","IBJTEP",164,0)
 ..... D SET(.LINE,"      ADJ CODE: "_$$CJ^XLFSTR(IBCL(361.11511,CC,.01,"E"),5)_" "_RCFLD(1))
"RTN","IBJTEP",165,0)
 ..... I RCFLD>1 F II=2:1:RCFLD D SET(.LINE,"                      "_RCFLD(II))
"RTN","IBJTEP",166,0)
 ... ; Display RARC Codes for this Line Item
"RTN","IBJTEP",167,0)
 ... I $D(IBCL(361.1154))'=0 S QQ=EE,RCMD="" F  S QQ=$O(IBCL(361.1154,QQ)) Q:$E(QQ,1,$L(EE))'=EE  D
"RTN","IBJTEP",168,0)
 .... S RMIEN=$$FIND1^DIC(346,"","BX",IBCL(361.1154,QQ,.02,"E"),"","","RCERR")
"RTN","IBJTEP",169,0)
 .... I RMIEN'="" K RCERR,RCRDC,RCFLD S RCXY=$$GET1^DIQ(346,RMIEN_",",4,"","RCRDC","RCERR") D DLN("RCRDC","RCFLD",57,68)
"RTN","IBJTEP",170,0)
 .... D SET(.LINE,"  --- RARC: "_IBCL(361.1154,QQ,.02,"E")_" - "_RCFLD(1))
"RTN","IBJTEP",171,0)
 .... I RCFLD>1 F II=2:1:RCFLD D SET(.LINE,"          "_RCFLD(II))
"RTN","IBJTEP",172,0)
 ... D SET(.LINE," ")
"RTN","IBJTEP",173,0)
 .. I ACNT=0 D SET(.LINE,"  -- No Line Level Adjustments --")
"RTN","IBJTEP",174,0)
 .. ; If there are EOB Errors add them to the screen 
"RTN","IBJTEP",175,0)
 .. D:$D(IBEERR(361.1,EPIEN_",",20))>9
"RTN","IBJTEP",176,0)
 ... D SET(.LINE," "),SET(.LINE,"EEOB MESSAGE ERRORS:")
"RTN","IBJTEP",177,0)
 ... N II S II=0 F  S II=$O(IBEERR(361.1,EPIEN_",",20,II)) Q:(II="")!(II'=+II)  D SET(.LINE,$G(IBEERR(361.1,EPIEN_",",20,II)))
"RTN","IBJTEP",178,0)
 . D SET(.LINE,"================================================================================")
"RTN","IBJTEP",179,0)
 . S EPIEN=ZZEPIEN
"RTN","IBJTEP",180,0)
 ; No EEOB IEN, then report that No ERA recieved for this bill
"RTN","IBJTEP",181,0)
 I LINE=0 S VALMCNT=2 D SET^VALM10(1," "),SET^VALM10(2,"No ERA Information for Bill: "_EPBILL) G INITQ
"RTN","IBJTEP",182,0)
 S VALMCNT=LINE
"RTN","IBJTEP",183,0)
 ;
"RTN","IBJTEP",184,0)
INITQ K IBEPAR,IBPLB,IBEOB,IBDGCR,IBGX,IBSPL,IBEERR,TT,AA,EE,RCPL,ACT,ACNT,CC,XLN,XSP,XSP1,TSDT,TEDT,TRX,TECME,RCF,SP80,X,ZZEPIEN
"RTN","IBJTEP",185,0)
 Q
"RTN","IBJTEP",186,0)
 ;
"RTN","IBJTEP",187,0)
HELP ; -- help code
"RTN","IBJTEP",188,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTEP",189,0)
 Q
"RTN","IBJTEP",190,0)
 ;
"RTN","IBJTEP",191,0)
EXIT ; -- exit code
"RTN","IBJTEP",192,0)
 K EPBILL,EPEOB,ERALST,EPPAT,EPNM,EPSS,EPDOB,EPDOS,EPSID,EPAMT,EPARR
"RTN","IBJTEP",193,0)
 D CLEAR^VALM1,CLEAN^VALM10
"RTN","IBJTEP",194,0)
 Q
"RTN","IBJTEP",195,0)
 ;
"RTN","IBJTEP",196,0)
EXPND ; -- expand code
"RTN","IBJTEP",197,0)
 Q
"RTN","IBJTEP",198,0)
 ;
"RTN","IBJTEP",199,0)
PUSH(VAR,VALUE) ;
"RTN","IBJTEP",200,0)
 S VALUE=$TR(VALUE,",") ; Remove Commas from string
"RTN","IBJTEP",201,0)
 Q:$G(VAR)="" VALUE ; Empty variable
"RTN","IBJTEP",202,0)
 ; If this VALUE is on the list don't add it a second time
"RTN","IBJTEP",203,0)
 I U_VAR_U[(U_VALUE_U) Q VAR
"RTN","IBJTEP",204,0)
 Q VAR_U_VALUE
"RTN","IBJTEP",205,0)
 ;
"RTN","IBJTEP",206,0)
 ; Get the code modifier description
"RTN","IBJTEP",207,0)
MODC(MCD) ;
"RTN","IBJTEP",208,0)
 Q:$G(MCD)="" "No Modifier Code Description"
"RTN","IBJTEP",209,0)
 N ZZIEN,ZZDEC
"RTN","IBJTEP",210,0)
 S ZZIEN=$$FIND1^DIC(81.3,,"BX","26","","","")
"RTN","IBJTEP",211,0)
 S ZZDEC=$$GET1^DIQ(81.3,ZZIEN_",",.02)
"RTN","IBJTEP",212,0)
 Q:ZZDEC="" "No Modifier Code Description"
"RTN","IBJTEP",213,0)
 Q ZZDEC
"RTN","IBJTEP",214,0)
 ; Make CARC or RARC description lines the right length for display
"RTN","IBJTEP",215,0)
DLN(ZIN,ZARR,FLN,SLN) ;
"RTN","IBJTEP",216,0)
 ; ZIN - array to get lines of text
"RTN","IBJTEP",217,0)
 ; ZRARR - array for display passed by indirection
"RTN","IBJTEP",218,0)
 ; FLN - First line length; SLN - Second and subsequent line lengths
"RTN","IBJTEP",219,0)
 N ZI,ZX,ZL,ZXL,ZICT,ZCT,ZSP,ZLN
"RTN","IBJTEP",220,0)
 S ZI="",ZCT=0,ZICT=0
"RTN","IBJTEP",221,0)
 ; Get number of lines in array
"RTN","IBJTEP",222,0)
 F  S ZI=$O(@ZIN@(ZI)) Q:ZI=""  S ZICT=ZICT+1
"RTN","IBJTEP",223,0)
 ; If more than one line in array, process the line
"RTN","IBJTEP",224,0)
 D:ZICT>1
"RTN","IBJTEP",225,0)
 . S ZI="",ZL="" F  S ZI=$O(@ZIN@(ZI)) Q:ZI=""  S ZL=ZL_$S($L(ZL)>1:" ",1:"")_@ZIN@(ZI) D
"RTN","IBJTEP",226,0)
 .. F  Q:$L(ZL)<SLN  S ZCT=ZCT+1 D
"RTN","IBJTEP",227,0)
 ... I ZCT=1 S:$L(ZL)<FLN @ZARR@(ZCT)=ZL,ZL="" D:$L(ZL)>FLN  ; First line
"RTN","IBJTEP",228,0)
 .... S ZXL="" F ZX=1:1 Q:($L(ZXL)+$L($P(ZL," ",ZX)))>FLN  S ZXL=ZXL_$S($L(ZXL)>0:" ",1:"")_$P(ZL," ",ZX)
"RTN","IBJTEP",229,0)
 .... K ZSP S @ZARR@(ZCT)=ZXL,ZSP(ZXL)="",ZL=$$REPLACE^XLFSTR(ZL,.ZSP),ZL=$$TRIM^XLFSTR(ZL)
"RTN","IBJTEP",230,0)
 ... D:ZCT>1
"RTN","IBJTEP",231,0)
 .... S ZXL="" F ZX=1:1 Q:($L(ZXL)+$L($P(ZL," ",ZX)))>SLN  S ZXL=ZXL_$S($L(ZXL)>0:" ",1:"")_$P(ZL," ",ZX)
"RTN","IBJTEP",232,0)
 .... K ZSP S @ZARR@(ZCT)=ZXL,ZSP(ZXL)="",ZL=$$REPLACE^XLFSTR(ZL,.ZSP),ZL=$$TRIM^XLFSTR(ZL)
"RTN","IBJTEP",233,0)
 . I ($L(ZL)>1) S ZCT=ZCT+1,@ZARR@(ZCT)=ZL,ZL=""
"RTN","IBJTEP",234,0)
 . S @ZARR=ZCT
"RTN","IBJTEP",235,0)
 ; One line in array break up if necessary
"RTN","IBJTEP",236,0)
 I ZICT=1 D
"RTN","IBJTEP",237,0)
 . S ZX=$O(@ZIN@(""))
"RTN","IBJTEP",238,0)
 . I $L(@ZIN@(ZX))<FLN S @ZARR@(1)=@ZIN@(ZX),@ZARR=1 Q
"RTN","IBJTEP",239,0)
 . ; Otherwise we are spanning two lines
"RTN","IBJTEP",240,0)
 . S ZL="" F ZI=1:1 Q:($L(ZL)+$L($P(@ZIN@(ZX)," ",ZI)))>FLN  S ZL=ZL_$S($L(ZL)>0:" ",1:"")_$P(@ZIN@(ZX)," ",ZI)
"RTN","IBJTEP",241,0)
 . S @ZARR@(1)=ZL,@ZARR@(2)=$P(@ZIN@(ZX)," ",ZI,9999)
"RTN","IBJTEP",242,0)
 . S @ZARR=2
"RTN","IBJTEP",243,0)
 Q
"RTN","IBJTEP",244,0)
 ;
"RTN","IBJTEP",245,0)
SET(LINE,DATA) ; -- set arrays
"RTN","IBJTEP",246,0)
 ; LINE = line number passed by reference
"RTN","IBJTEP",247,0)
 ; DATA = string to add to displayed data
"RTN","IBJTEP",248,0)
 S LINE=LINE+1
"RTN","IBJTEP",249,0)
 D SET^VALM10(LINE,$G(DATA))
"RTN","IBJTEP",250,0)
 Q
"RTN","IBJTPE")
0^2^B134537091
"RTN","IBJTPE",1,0)
IBJTPE ;ALB/TJB - TP ERA/835 PRINT EEOB INFORMATIN SCREEN ;20-MAY-2015
"RTN","IBJTPE",2,0)
 ;;2.0;INTEGRATED BILLING;**530,609**;21-MAR-94;Build 26
"RTN","IBJTPE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTPE",4,0)
 ;; ;
"RTN","IBJTPE",5,0)
EN ; -- main entry point for IBJT 835 EEOB PRINT
"RTN","IBJTPE",6,0)
 D EN^VALM("IBJT 835 EEOB PRINT")
"RTN","IBJTPE",7,0)
 Q
"RTN","IBJTPE",8,0)
 ;
"RTN","IBJTPE",9,0)
HDR ; -- header code
"RTN","IBJTPE",10,0)
 S VALMHDR(1)="IBJT 835 EEOB PRINT."
"RTN","IBJTPE",11,0)
 S VALMHDR(2)="Print EEOBs for further investigation"
"RTN","IBJTPE",12,0)
 Q
"RTN","IBJTPE",13,0)
 ;
"RTN","IBJTPE",14,0)
INIT ; -- init variables and list array
"RTN","IBJTPE",15,0)
 ; Array IBEBERA (From IBJTEP) contains the the EEOBs for this KBILL
"RTN","IBJTPE",16,0)
 N IBRP,IBEIEN,CT,DIR,EOBLST,IBEBERA,IBPERA,JJ,X,Y,DTOUT,DUOUT,DIROUT,DIRUT,IBNUM,IBPEOB,IBALL
"RTN","IBJTPE",17,0)
 S IBNUM=1,(CT,EOBLST,IBALL)=0,JJ=""
"RTN","IBJTPE",18,0)
 D FULL^VALM1
"RTN","IBJTPE",19,0)
IN1 ;
"RTN","IBJTPE",20,0)
 S IBRP(U)=", "
"RTN","IBJTPE",21,0)
 ; ERALST is from IBJTEP and will be cleaned up there
"RTN","IBJTPE",22,0)
 I $L(ERALST)=0 W !,"No ERA Information for Bill: "_EPBILL K DIR S DIR(0)="E" D ^DIR K DIR G INITQ
"RTN","IBJTPE",23,0)
 I $L(ERALST,U)=1 S IBPERA=ERALST G IN2
"RTN","IBJTPE",24,0)
 S DIR("A")="Enter a SINGLE ERA# or (A)LL ERAs/All EEOBs to print: ",DIR(0)="FA^1:15"
"RTN","IBJTPE",25,0)
 S DIR("A",1)="This claim has EEOBs on multiple ERAs. Enter a SINGLE ERA# from the following"
"RTN","IBJTPE",26,0)
 S DIR("A",2)="list or enter ALL to print ALL associated EEOBS from all ERAs in the list."
"RTN","IBJTPE",27,0)
 S DIR("A",3)="Available ERAs: "_$$REPLACE^XLFSTR(ERALST,.IBRP)
"RTN","IBJTPE",28,0)
 S DIR("PRE")="S X=$$UP^XLFSTR(X)"
"RTN","IBJTPE",29,0)
 D ^DIR K DIR
"RTN","IBJTPE",30,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S VALMQUIT="" G INITQ
"RTN","IBJTPE",31,0)
 I Y=$E("ALL",1,$L(Y)) S IBALL=1 G IND ; Print All EOBs for All ERAs
"RTN","IBJTPE",32,0)
 S IBPERA=Y I (U_ERALST_U)'[(U_Y_U) W !!,"ERA: "_Y_" not a valid selection. Please try again...",! S X="",IBPERA="" G IN1
"RTN","IBJTPE",33,0)
IN2 ;
"RTN","IBJTPE",34,0)
 ; EPBILL is from IBJTEP and will be cleaned up there
"RTN","IBJTPE",35,0)
 K IBEBERA D EEOB^IBJTEP1("IBEBERA",IBPERA,EPBILL,1) S JJ="" F  S JJ=$O(IBEBERA(JJ)) Q:JJ=""  S CT=CT+1,EOBLST(CT)=$O(IBEBERA(JJ,""))
"RTN","IBJTPE",36,0)
 I CT=1 S IBPEOB="1," G IND
"RTN","IBJTPE",37,0)
 ; Get the EOB to Print if more than one.
"RTN","IBJTPE",38,0)
 S IBRNG="1-"_IBEBERA
"RTN","IBJTPE",39,0)
 S DIR("A")="Select EEOB# to Print ("_IBRNG_"), (A)ll EEOBs or (E)xit: ",DIR(0)="LA^1:"_IBEBERA
"RTN","IBJTPE",40,0)
 S DIR("PRE")="S X=$S(""Aa""[$E(X):"""_IBRNG_""",""Ee""[$E(X):""^"",1:X)"
"RTN","IBJTPE",41,0)
 D ^DIR K DIR
"RTN","IBJTPE",42,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S VALMQUIT=1 G INITQ
"RTN","IBJTPE",43,0)
 ; IBPEOB will be a list of numbers to print
"RTN","IBJTPE",44,0)
 S IBPEOB=Y
"RTN","IBJTPE",45,0)
 ; Ask device
"RTN","IBJTPE",46,0)
IND N POP S %ZIS="QM" D ^%ZIS I POP S VALMQUIT="" G INITQ
"RTN","IBJTPE",47,0)
 I $D(IO("Q")) D  S VALMQUIT="" G INITQ
"RTN","IBJTPE",48,0)
 . S ZTRTN=$S(IBALL=1:"EOBALL^IBJTPE",1:"EOBOUT^IBJTPE"),ZTDESC="AR EDI - Print EEOB Detail from 835 Information"
"RTN","IBJTPE",49,0)
 . S ZTSAVE("IB*")="",ZTSAVE("EOB*")=""
"RTN","IBJTPE",50,0)
 . D ^%ZTLOAD
"RTN","IBJTPE",51,0)
 . W !!,$S($D(ZTSK):"Your task number "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBJTPE",52,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJTPE",53,0)
 U IO
"RTN","IBJTPE",54,0)
 ; If IBALL set, print all EOBs on all ERAs otherwise print just selected EOBs/ERAs
"RTN","IBJTPE",55,0)
 G EOBALL:IBALL,EOBOUT
"RTN","IBJTPE",56,0)
 ;
"RTN","IBJTPE",57,0)
INITQ ;
"RTN","IBJTPE",58,0)
 S VALMQUIT=""
"RTN","IBJTPE",59,0)
 K IBEOB,EOBLST,IBRNG
"RTN","IBJTPE",60,0)
 Q
"RTN","IBJTPE",61,0)
 ;
"RTN","IBJTPE",62,0)
HELP ; -- help code
"RTN","IBJTPE",63,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJTPE",64,0)
 Q
"RTN","IBJTPE",65,0)
 ;
"RTN","IBJTPE",66,0)
EXIT ; -- exit code
"RTN","IBJTPE",67,0)
 Q
"RTN","IBJTPE",68,0)
 ;
"RTN","IBJTPE",69,0)
EXPND ; -- expand code
"RTN","IBJTPE",70,0)
 Q
"RTN","IBJTPE",71,0)
 ;
"RTN","IBJTPE",72,0)
EOBALL ; Entry point to print all ERAs and all EOBs
"RTN","IBJTPE",73,0)
 N ZQ,ZQL,IBPERA,JJ,IBEBERA,CT,IBSL,IBPG,BB,IBQUIT,IBREPG ; IB*2.0*609
"RTN","IBJTPE",74,0)
 S (IBPG,IBQUIT,IBREPG,IBSL)=0,ZQL=$L(ERALST,U)
"RTN","IBJTPE",75,0)
 F ZQ=1:1 S IBPERA=$P(ERALST,U,ZQ) Q:IBPERA=""  S:IBPG>0 IBREPG=1 D  Q:IBQUIT
"RTN","IBJTPE",76,0)
 . K IBEBERA D EEOB^IBJTEP1("IBEBERA",IBPERA,EPBILL,1) S JJ="",CT=0 F  S JJ=$O(IBEBERA(JJ)) Q:JJ=""  S CT=CT+1,EOBLST(CT)=$O(IBEBERA(JJ,""))
"RTN","IBJTPE",77,0)
 . S IBSL=0 ; Print new page because we are switching ERA #s
"RTN","IBJTPE",78,0)
 . ; IB*2.0*609 - eliminate use of IBPEOB variable to fix crash when printing ALL EEOBs
"RTN","IBJTPE",79,0)
 . S BB="" F  S BB=$O(EOBLST(BB)) Q:BB=""  S IBEIEN=EOBLST(BB) D EBO Q:IBQUIT
"RTN","IBJTPE",80,0)
 . I ZQ<ZQL D ASK(.IBQUIT)
"RTN","IBJTPE",81,0)
 I 'IBQUIT D SET("      ***  END OF REPORT  ***"),ASK(.IBQUIT)
"RTN","IBJTPE",82,0)
 G INITQ
"RTN","IBJTPE",83,0)
 Q
"RTN","IBJTPE",84,0)
EOBOUT ; Entry for either queued or screen print of EEOB
"RTN","IBJTPE",85,0)
 N AA,AQ,BB,BC,CC,EE,II,QQ,IBDT,IBPG,IBSL,IBQUIT,IBEOB,IBGX,IBCL,IBSPL,IBEERR,IBDGCR,IBEPAR,ACNT,IBQUIT,IBRDC,IBPERR,XLN,XSP,RCBAMT,RCDED,RCMD,RCOIN
"RTN","IBJTPE",86,0)
 N RCPL,RCRC,RCRLN,RCXY,RMIEN,SP80,TDOS,TECME,TEDT,TRX,TSTAT,TSDT,XSP1,IBREPG
"RTN","IBJTPE",87,0)
 S (IBQUIT,IBSL,IBPG,IBREPG)=0
"RTN","IBJTPE",88,0)
 S BB="" F BC=1:1 S BB=$P(IBPEOB,",",BC) Q:BB=""  S IBEIEN=EOBLST(BB) D EBO Q:IBQUIT
"RTN","IBJTPE",89,0)
 I 'IBQUIT D SET("      ***  END OF REPORT  ***"),ASK(.IBQUIT)
"RTN","IBJTPE",90,0)
 G INITQ
"RTN","IBJTPE",91,0)
 Q
"RTN","IBJTPE",92,0)
EBO ; Display the EOB DATA for IBEIEN
"RTN","IBJTPE",93,0)
 S SP80=$J("",IOM),IBDT=$$FMTE^XLFDT($$NOW^XLFDT,1) ; Date format Mon dd, yyyy@hh:mm:ss see kernel documentation
"RTN","IBJTPE",94,0)
 I (IBSL=0)&(IBPG=0) D RHDR(IBPERA,IBDT,.IBPG)
"RTN","IBJTPE",95,0)
 I IBREPG=1 S IBREPG=0 D RHDR(IBPERA,IBDT,.IBPG)
"RTN","IBJTPE",96,0)
 K IBEOB,IBGX,IBCL,IBDGCR,IBEPAR,IBSPL,IBEERR
"RTN","IBJTPE",97,0)
 D GETS^DIQ(361.1,IBEIEN_",",".01;.02;.03;.04;.06;.14;1.01;1.02;1.03;1.1;1.11;2.03;2.04;3.03;3.04;3.05;3.06;3.07;","EI","IBEOB")
"RTN","IBJTPE",98,0)
 D GETS^DIQ(361.1,IBEIEN_",","10*;","EI","IBGX"),RESORT^IBJTEP1("IBGX",361.111),RESORT^IBJTEP1("IBGX",361.11) ; Claim Level Adjustments
"RTN","IBJTPE",99,0)
 D GETS^DIQ(361.1,IBEIEN_",","15*;","EI","IBCL") ; Line Level Adjustments
"RTN","IBJTPE",100,0)
 D GETS^DIQ(361.1,IBEIEN_",","8*;","EI","IBSPL") ; ERA Splits for this EEOB
"RTN","IBJTPE",101,0)
 D GETS^DIQ(361.1,IBEIEN_",","20;","","IBEERR") ; EOB Errors if they exist
"RTN","IBJTPE",102,0)
 N IBAR,IBCOL ; IB*2.0*609
"RTN","IBJTPE",103,0)
 S IBAR=$$BILL^RCJIBFN2($G(IBEOB(361.1,IBEIEN_",",.01,"I"))),IBCOL=$P(IBAR,U,5) ; IB*2.0*609
"RTN","IBJTPE",104,0)
 ; Make it easier to walk the data
"RTN","IBJTPE",105,0)
 D RESORT^IBJTEP1("IBCL",361.11511),RESORT^IBJTEP1("IBCL",361.115),RESORT^IBJTEP1("IBCL",361.1151)
"RTN","IBJTPE",106,0)
 D RESORT^IBJTEP1("IBCL",361.1152),RESORT^IBJTEP1("IBCL",361.1154)
"RTN","IBJTPE",107,0)
 D GETS^DIQ(399,IBEOB(361.1,IBEIEN_",",.01,"I")_",","460;","EI","IBDGCR")
"RTN","IBJTPE",108,0)
 D GETS^DIQ(344.4,IBPERA_",",".01;.02;.03;.04;.05;.06;.07;.08;.09;.1;.11;.12;.13;.14;.15;4.02;","E","IBEPAR")
"RTN","IBJTPE",109,0)
 ;
"RTN","IBJTPE",110,0)
 D SET("**********  EOB/835 INFORMATION ("_BB_" of "_IBEBERA_") **********") Q:IBQUIT
"RTN","IBJTPE",111,0)
 S XLN="  EOB Type: "_$G(IBEOB("361.1",IBEIEN_",",".04","E")),XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTPE",112,0)
 D SET(XLN_XSP_"EOB Paid Date: "_$G(IBEOB("361.1",IBEIEN_",",".06","E"))) Q:IBQUIT
"RTN","IBJTPE",113,0)
 S TSDT=$$FMTE^XLFDT($G(IBEOB("361.1",IBEIEN_",","1.1","I")),"2Z"),TEDT=$$FMTE^XLFDT($G(IBEOB("361.1",IBEIEN_",","1.11","I")),"2Z"),XLN="  Svc From Date: "_TSDT,XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTPE",114,0)
 D SET(XLN_XSP_"Svc to Date: "_TEDT) Q:IBQUIT
"RTN","IBJTPE",115,0)
 D SET("         ICN: "_$G(IBEOB("361.1",IBEIEN_",",".14","E"))) Q:IBQUIT
"RTN","IBJTPE",116,0)
 D SET("  Payer Name/TIN: "_$G(IBEOB("361.1",IBEIEN_",",".02","E"))_"/"_$G(IBEOB("361.1",IBEIEN_",",".03","E"))) Q:IBQUIT
"RTN","IBJTPE",117,0)
 S XLN="     ERA #: "_$G(IBEPAR("344.4",IBPERA_",",".01","E")),XSP=$E(SP80,1,(40-$L(XLN)))
"RTN","IBJTPE",118,0)
 D SET(XLN_XSP_"Auto-Post Status: "_$G(IBEPAR("344.4",IBPERA_",","4.02","E"))) Q:IBQUIT
"RTN","IBJTPE",119,0)
 D SET("   Trace #: "_$G(IBEPAR("344.4",IBPERA_",",".02","E"))) Q:IBQUIT
"RTN","IBJTPE",120,0)
 ; Access to PSOORDER supported by DBIA #1878
"RTN","IBJTPE",121,0)
 S TECME=$P($G(IBDGCR(399,IBEOB(361.1,IBEIEN_",",.01,"I")_",",460,"E")),";",1),TDOS=$$FMTE^XLFDT($$DOS^PSOBPSU1(+TECME),"2Z")
"RTN","IBJTPE",122,0)
 ;Reference to $$STATUS^BPSOSRX supported by IA 4412
"RTN","IBJTPE",123,0)
 S TRX=$$GET1^DIQ(52,+TECME_",",".01")
"RTN","IBJTPE",124,0)
 S TSTAT=$P($$STATUS^BPSOSRX(TRX,$$LSTRFL^PSOBPSU1(+TECME)),"^")
"RTN","IBJTPE",125,0)
 S TRX=TRX_"/"_$$LSTRFL^PSOBPSU1(+TECME)_"/"_TSTAT
"RTN","IBJTPE",126,0)
 I TECME="" S TDOS="",TRX=""
"RTN","IBJTPE",127,0)
 S XLN=" ECME #: "_TECME,XSP=$E(SP80,1,(25-$L(XLN))),XSP1=$E(SP80,1,(39-$L(XLN_XSP_"DOS: "_TDOS)))
"RTN","IBJTPE",128,0)
 D SET(XLN_XSP_"DOS: "_TDOS_XSP1_"Rx/Fill/Release Status: "_TRX) Q:IBQUIT
"RTN","IBJTPE",129,0)
 D SET("--------------------------------------------------------------------------------") Q:IBQUIT
"RTN","IBJTPE",130,0)
 D:$D(IBSPL)>1  Q:IBQUIT  ; This EEOB was split display split payment information
"RTN","IBJTPE",131,0)
 . N SPL
"RTN","IBJTPE",132,0)
 . D SET("** A/R CORRECTED PAYMENT DATA:") Q:IBQUIT
"RTN","IBJTPE",133,0)
 . D SET("   TOTAL AMT PD:          "_$J(IBEOB(361.1,IBEIEN_",",1.01,"E"),9,2)) Q:IBQUIT
"RTN","IBJTPE",134,0)
 . S SPL="" F  S SPL=$O(IBSPL(361.18,SPL)) Q:SPL=""  D  Q:IBQUIT
"RTN","IBJTPE",135,0)
 .. D SET("     "_$S(IBSPL(361.18,SPL,.03,"I")'="":$$BN1^PRCAFN(IBSPL(361.18,SPL,.03,"I"))_$J("",8),1:"[suspense] "_IBSPL(361.18,SPL,.01,"E"))_"  "_$J(IBSPL(361.18,SPL,.02,"E"),9,2)) Q:IBQUIT
"RTN","IBJTPE",136,0)
 . D SET(" ") Q:IBQUIT
"RTN","IBJTPE",137,0)
 D SET("CLAIM LEVEL PAY STATUS:") Q:IBQUIT
"RTN","IBJTPE",138,0)
 D SET("  Total Submitted Charges :"_$J($G(IBEOB("361.1",IBEIEN_",","2.04","E")),11,2)_"  Payer Covered Amount    :"_$J($G(IBEOB("361.1",IBEIEN_",","1.03","E")),11,2)) Q:IBQUIT
"RTN","IBJTPE",139,0)
 D SET("  Payer Paid Amount       :"_$J($G(IBEOB("361.1",IBEIEN_",","1.01","E")),11,2)_"  MEDICARE Allowed Amount :"_$J($G(IBEOB("361.1",IBEIEN_",","2.03","E")),11,2)) Q:IBQUIT
"RTN","IBJTPE",140,0)
 D SET("  Patient Responsibility  :"_$J($G(IBEOB("361.1",IBEIEN_",","1.02","E")),11,2)_"              % Collected :"_$J(+IBCOL,11,0)_" %") Q:IBQUIT  ; IB*2.0*609
"RTN","IBJTPE",141,0)
 D SET("--------------------------------------------------------------------------------") Q:IBQUIT
"RTN","IBJTPE",142,0)
 D SET("CLAIM LEVEL ADJUSTMENTS:") Q:IBQUIT
"RTN","IBJTPE",143,0)
 S AA="",ACNT=0 F  S AA=$O(IBGX(361.11,AA)) Q:AA=""  S ACNT=ACNT+1,AQ="" D  Q:IBQUIT
"RTN","IBJTPE",144,0)
 . S CC=AA F  S CC=$O(IBGX(361.111,CC)) Q:$E(CC,1,$L(AA))'=AA  D  Q:IBQUIT
"RTN","IBJTPE",145,0)
 .. I AQ="" S AQ=$J(ACNT,3)_") "
"RTN","IBJTPE",146,0)
 .. E  S ACNT=ACNT+1,AQ=$J(ACNT,3)_") "
"RTN","IBJTPE",147,0)
 .. D SET(AQ_"ADJ. AMT: "_$J(IBGX(361.111,CC,.02,"E"),9,2)_"  ADJ GROUP: "_IBGX(361.11,AA,.01,"I")_" => "_IBGX(361.11,AA,.01,"E")) Q:IBQUIT
"RTN","IBJTPE",148,0)
 .. S RMIEN=$$FIND1^DIC(345,"","BX",IBGX(361.111,CC,.01,"E"),"","","IBPERR")
"RTN","IBJTPE",149,0)
 .. I RMIEN'="" K IBPERR,RCRDC,RCFLD S RCXY=$$GET1^DIQ(345,RMIEN_",",4,"","RCRDC","IBPERR") D DLN^IBJTEP("RCRDC","RCFLD",57,69)
"RTN","IBJTPE",150,0)
 .. D SET("     ADJ. CODE: "_IBGX(361.111,CC,.01,"E")_" => "_RCFLD(1)) Q:IBQUIT
"RTN","IBJTPE",151,0)
 .. I RCFLD>1 F II=2:1:RCFLD D SET("          "_RCFLD(II)) Q:IBQUIT
"RTN","IBJTPE",152,0)
 I ACNT=0 D SET("  -- None --") Q:IBQUIT
"RTN","IBJTPE",153,0)
 D:'IBQUIT SET("CLAIM LEVEL REMARKS: ") Q:IBQUIT
"RTN","IBJTPE",154,0)
 S RCRC=0 F II="3.03","3.04","3.05","3.06","3.07" D:IBEOB("361.1",IBEIEN_",",II,"E")'=""  Q:IBQUIT
"RTN","IBJTPE",155,0)
 . ; Get IEN for this remark code - if no IEN then need to look at the data "RM1" to "RM5"
"RTN","IBJTPE",156,0)
 . S RMIEN=$$FIND1^DIC(346,"","BX",IBEOB("361.1",IBEIEN_",",II,"E"),"","","IBPERR")
"RTN","IBJTPE",157,0)
 . I RMIEN'="" K IBPERR,RCRDC,RCFLD S RCXY=$$GET1^DIQ(346,RMIEN_",",4,"","RCRDC","IBPERR") D DLN^IBJTEP("RCRDC","RCFLD",50,68)
"RTN","IBJTPE",158,0)
 . I RMIEN="" S RCFLD=$S(II="3.03":5.011,II="3.04":5.021,II="3.05":5.031,II="3.06":5.041,II="3.07":5.051,1:5.011) S RCRLN=$$GET1^DIQ(361.1,IBEIEN_",",RCFLD)
"RTN","IBJTPE",159,0)
 . S RCRC=RCRC+1 D SET("  --- REMARK CODE("_RCRC_"): "_IBEOB("361.1",IBEIEN_",",II,"E")_" => "_RCFLD(1)) Q:IBQUIT
"RTN","IBJTPE",160,0)
 . I RCFLD>1 F II=2:1:RCFLD D SET("          "_RCFLD(II)) Q:IBQUIT
"RTN","IBJTPE",161,0)
 I RCRC=0 D SET("  -- None --") Q:IBQUIT
"RTN","IBJTPE",162,0)
 D:'IBQUIT SET("--------------------------------------------------------------------------------") Q:IBQUIT
"RTN","IBJTPE",163,0)
 ; Walk through the line level information...
"RTN","IBJTPE",164,0)
 D SET("EEOB LINE LEVEL ADJUSTMENTS:") Q:IBQUIT
"RTN","IBJTPE",165,0)
 S RCPL=0,EE="" F  S EE=$O(IBCL(361.115,EE)) Q:EE=""  S RCPL=RCPL+1 D  Q:IBQUIT
"RTN","IBJTPE",166,0)
 . S QQ=EE,RCMD="" F  S QQ=$O(IBCL(361.1152,QQ)) Q:$E(QQ,1,$L(EE))'=EE  S RCMD=IBCL(361.1152,QQ,.01,"I")
"RTN","IBJTPE",167,0)
 . D SET(" #   SV DT  REVCD   PROC  MOD  UNITS   BILLED  DEDUCT   COINS    ALLOW     PYMT") Q:IBQUIT
"RTN","IBJTPE",168,0)
 . S RCBAMT=$$BILLN^IBJTEP1(IBEOB(361.1,IBEIEN_",",.01,"I"),IBCL(361.115,EE,.1,"E"),IBCL(361.115,EE,.04,"E"))
"RTN","IBJTPE",169,0)
 . S RCDED=$$ADJU^IBJTEP1("DEDUCT",.IBCL,EE),RCOIN=$$ADJU^IBJTEP1("COINS",.IBCL,EE) ; Get Deductable and Co-Insurance amts.
"RTN","IBJTPE",170,0)
 . S XLN=$J(RCPL,2,0)_" "_$$FMTE^XLFDT(IBCL(361.115,EE,.16,"I"),"2Z")_" "_$$CJ^XLFSTR(IBCL(361.115,EE,.1,"E"),5)_" "_$$CJ^XLFSTR(IBCL(361.115,EE,.04,"E"),8)_$$CJ^XLFSTR(RCMD,5)_" "_$$CJ^XLFSTR(IBCL(361.115,EE,.11,"E"),3)
"RTN","IBJTPE",171,0)
 . D SET(XLN_" "_$J(RCBAMT,9,2)_$J(RCDED,8,2)_$J(RCOIN,8,2)_$J(IBCL(361.115,EE,.13,"E"),9,2)_$J(IBCL(361.115,EE,.03,"E"),9,2)) Q:IBQUIT
"RTN","IBJTPE",172,0)
 . D SET(" ") Q:IBQUIT
"RTN","IBJTPE",173,0)
 . D SET("  Product/Service Description:"_IBCL(361.115,EE,.09,"E")) Q:IBQUIT
"RTN","IBJTPE",174,0)
 . D SET("  Payer Policy Reference:"_$G(IBCL(361.11512,EE,.01,"E"))) Q:IBQUIT
"RTN","IBJTPE",175,0)
 . D SET(" ") Q:IBQUIT
"RTN","IBJTPE",176,0)
 . S ACNT=0,AA=EE F  S AA=$O(IBCL(361.1151,AA)) Q:$E(AA,1,$L(EE))'=EE  D  Q:IBQUIT
"RTN","IBJTPE",177,0)
 .. S ACNT=ACNT+1
"RTN","IBJTPE",178,0)
 .. S CC=AA,RCRC=0 F  S CC=$O(IBCL(361.11511,CC)) Q:$E(CC,1,$L(AA))'=AA  D  Q:IBQUIT
"RTN","IBJTPE",179,0)
 ... S RCRC=RCRC+1 D SET("  -> ADJ. AMT: "_$J(IBCL(361.11511,CC,.02,"E"),9,2)_"  ADJ GROUP: "_IBCL(361.1151,AA,.01,"I")_" - "_IBCL(361.1151,AA,.01,"E")_"  "_$$CJ^XLFSTR("QTY: "_+$G(IBCL(361.11511,CC,.03,"E")),8)) Q:IBQUIT
"RTN","IBJTPE",180,0)
 ... S RCXY=$$FIND1^DIC(345,"","BX",IBCL(361.11511,CC,.01,"E"),"","","RCERR")
"RTN","IBJTPE",181,0)
 ... K RCRDC,RCERR S RCXY=$$GET1^DIQ(345,RCXY_",",4,"","RCRDC","RCERR")
"RTN","IBJTPE",182,0)
 ... I $D(RCRDC)>0 K RCFLD D DLN^IBJTEP("RCRDC","RCFLD",57,57)
"RTN","IBJTPE",183,0)
 ... I $D(RCRDC)=0 K RCFLD S RCRDC(1)=IBCL(361.11511,CC,.04,"E") D DLN^IBJTEP("RCRDC","RCFLD",57,57) ; If no data from file 345 use data from FMS
"RTN","IBJTPE",184,0)
 ... D SET("      ADJ CODE: "_$$CJ^XLFSTR(IBCL(361.11511,CC,.01,"E"),5)_" "_RCFLD(1)) Q:IBQUIT
"RTN","IBJTPE",185,0)
 ... I RCFLD>1 F II=2:1:RCFLD D SET("                      "_RCFLD(II)) Q:IBQUIT
"RTN","IBJTPE",186,0)
 . ; Display RARC Codes for this Line Item
"RTN","IBJTPE",187,0)
 . I $D(IBCL(361.1154))'=0 S QQ=EE,RCMD="" F  S QQ=$O(IBCL(361.1154,QQ)) Q:$E(QQ,1,$L(EE))'=EE  D  Q:IBQUIT
"RTN","IBJTPE",188,0)
 .. S RMIEN=$$FIND1^DIC(346,"","BX",IBCL(361.1154,QQ,.02,"E"),"","","IBERR")
"RTN","IBJTPE",189,0)
 .. I RMIEN'="" K IBPERR,RCRDC,RCFLD S RCXY=$$GET1^DIQ(346,RMIEN_",",4,"","RCRDC","IBPERR") D DLN^IBJTEP("RCRDC","RCFLD",50,68)
"RTN","IBJTPE",190,0)
 .. D SET("  --- RARC: "_IBCL(361.1154,QQ,.02,"E")_" - "_RCFLD(1)) Q:IBQUIT
"RTN","IBJTPE",191,0)
 .. I RCFLD>1 F II=2:1:RCFLD D SET("          "_RCFLD(II)) Q:IBQUIT
"RTN","IBJTPE",192,0)
 . D:ACNT'=0 SET(" ") Q:IBQUIT
"RTN","IBJTPE",193,0)
 I ACNT=0 D SET("  -- No Line Level Adjustments --") Q:IBQUIT
"RTN","IBJTPE",194,0)
 ; If there are EOB Errors add them to the Report
"RTN","IBJTPE",195,0)
 D:$D(IBEERR(361.1,IBEIEN_",",20))>9
"RTN","IBJTPE",196,0)
 . D SET(" ") Q:IBQUIT  D SET("EEOB MESSAGE ERRORS:") Q:IBQUIT
"RTN","IBJTPE",197,0)
 . N II S II=0 F  S II=$O(IBEERR(361.1,IBEIEN_",",20,II)) Q:II=""  D SET($G(IBEERR(361.1,IBEIEN_",",20,II))) Q:IBQUIT
"RTN","IBJTPE",198,0)
 D:'IBQUIT SET("================================================================================") Q:IBQUIT
"RTN","IBJTPE",199,0)
 ;
"RTN","IBJTPE",200,0)
 Q
"RTN","IBJTPE",201,0)
SET(DATA,NEW) ;
"RTN","IBJTPE",202,0)
 I $G(NEW)="" S NEW=1
"RTN","IBJTPE",203,0)
 W DATA,! S IBSL=IBSL+1
"RTN","IBJTPE",204,0)
 I IBSL'<(IOSL-4) S IBQUIT=$$NEWPG(.IBPG,NEW,.IBSL,IBPERA)
"RTN","IBJTPE",205,0)
 Q
"RTN","IBJTPE",206,0)
RHDR(IBSCR,IBDT,IBPG) ;Prints EOB detail report heading
"RTN","IBJTPE",207,0)
 ; IBSCR - IEN of the ERA; IBDT - Report Date; IBPG - page #, passed by reference.
"RTN","IBJTPE",208,0)
 N Z
"RTN","IBJTPE",209,0)
 S Z=$G(^RCY(344.4,IBSCR,0))
"RTN","IBJTPE",210,0)
 I IBPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","IBJTPE",211,0)
 S IBPG=IBPG+1
"RTN","IBJTPE",212,0)
 D HDRP("EDI EEOB DETAIL - 835 INFORMATION SCREEN "_$$FMTE^XLFDT(IBDT,2),1,"Page: "_IBPG)
"RTN","IBJTPE",213,0)
 D HDRP($E(" ERA NUMBER: "_IBSCR_$J("",25),1,25)_" ERA DATE: "_$$FMTE^XLFDT($P(Z,U,4)),1)
"RTN","IBJTPE",214,0)
 D HDRP("INS COMPANY: "_$P(Z,U,6)_"/"_$P(Z,U,3),1)
"RTN","IBJTPE",215,0)
 D HDRP("ERA TRACE #: "_$P(Z,U,2),1)
"RTN","IBJTPE",216,0)
 W !,$TR($J("",IOM)," ","="),!
"RTN","IBJTPE",217,0)
 S IBSL=5
"RTN","IBJTPE",218,0)
 Q
"RTN","IBJTPE",219,0)
 ;
"RTN","IBJTPE",220,0)
NEWPG(IBPG,IBNEW,IBSL,IBSCR) ; Check for new page needed, output header
"RTN","IBJTPE",221,0)
 ; IBPG = Page number passwd by referece
"RTN","IBJTPE",222,0)
 ; IBNEW = 1 to force new page
"RTN","IBJTPE",223,0)
 ; IBSL = page length passed by reference
"RTN","IBJTPE",224,0)
 ; Function returns 1 if user chooses to stop output
"RTN","IBJTPE",225,0)
 N IBSTOP S IBSTOP=0
"RTN","IBJTPE",226,0)
 I IBNEW!'IBPG!(IBSL'<(IOSL-4)) D
"RTN","IBJTPE",227,0)
 . D:IBPG ASK(.IBSTOP) I IBSTOP Q
"RTN","IBJTPE",228,0)
 . W @IOF
"RTN","IBJTPE",229,0)
 . D RHDR(IBSCR,IBDT,.IBPG)
"RTN","IBJTPE",230,0)
 Q IBSTOP
"RTN","IBJTPE",231,0)
 ;
"RTN","IBJTPE",232,0)
ASK(IBSTOP) ; User if you want to quit or continue
"RTN","IBJTPE",233,0)
 S IBSTOP=0
"RTN","IBJTPE",234,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBJTPE",235,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBJTPE",236,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","IBJTPE",237,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBSTOP=1 Q
"RTN","IBJTPE",238,0)
 Q
"RTN","IBJTPE",239,0)
 ;
"RTN","IBJTPE",240,0)
HDRP(Z,X,Z1) ; Print Header (Z=String, X=1 (line feed) X=0 (no LF), Z1 (page number right justified)
"RTN","IBJTPE",241,0)
 I X=1 W !
"RTN","IBJTPE",242,0)
 W ?(IOM-$L(Z)\2),Z W:$G(Z1)]"" ?(IOM-$L(Z1)),Z1
"RTN","IBJTPE",243,0)
 Q
"RTN","IBJTTA1")
0^4^B11283229
"RTN","IBJTTA1",1,0)
IBJTTA1 ;ALB/ARH - TPI AR ACCOUNT/CLAIM PROFILE BUILD ; 06-MAR-1995
"RTN","IBJTTA1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,609**;21-MAR-94;Build 26
"RTN","IBJTTA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJTTA1",4,0)
 ;
"RTN","IBJTTA1",5,0)
BLD ;
"RTN","IBJTTA1",6,0)
 N X,IBY,IBS,IBI,IBD0,IBDS,IBDU1,IBCNT,IBLN,IBAR
"RTN","IBJTTA1",7,0)
 S IBD0=$G(^DGCR(399,+IBIFN,0)),IBDS=$G(^DGCR(399,+IBIFN,"S")),IBDU1=$G(^DGCR(399,+IBIFN,"U1"))
"RTN","IBJTTA1",8,0)
 S IBAR=$$BILL^RCJIBFN2(IBIFN)
"RTN","IBJTTA1",9,0)
 ;
"RTN","IBJTTA1",10,0)
 S VALMCNT=0,IBCNT=0,X=""
"RTN","IBJTTA1",11,0)
 ;
"RTN","IBJTTA1",12,0)
 ; original bill
"RTN","IBJTTA1",13,0)
 ;
"RTN","IBJTTA1",14,0)
 S IBS=$P(IBD0,U,13),(IBI,IBY)="" D
"RTN","IBJTTA1",15,0)
 . I IBS=1 S IBI="ENTERED",IBY=$P(IBDS,U,1) Q
"RTN","IBJTTA1",16,0)
 . I IBS=2 S IBI="REVIEWED",IBY=$P(IBDS,U,4) S:$P(IBDS,U,7)>IBY IBI="REVIEWED (2nd)",IBY=$P(IBDS,U,7) Q
"RTN","IBJTTA1",17,0)
 . I IBS=3 S IBI="AUTHORIZED",IBY=$P(IBDS,U,10) Q
"RTN","IBJTTA1",18,0)
 . I IBS=4 S IBI="PRINTED (First)",IBY=$P(IBDS,U,12) S:$P(IBDS,U,14)>IBY IBI="PRINTED (Last)",IBY=$P(IBDS,U,14) Q
"RTN","IBJTTA1",19,0)
 . I IBS=5 S IBI="TRANSMITTED",IBY="" Q
"RTN","IBJTTA1",20,0)
 . I IBS=7 S IBI="CANCELLED",IBY=$P(IBDS,U,17) Q
"RTN","IBJTTA1",21,0)
 . I IBS=0 S IBI="CLOSED",IBY="" Q
"RTN","IBJTTA1",22,0)
 S IBY=$$DATE(IBY),X=$$SETFLD^VALM1(IBY,X,"DATE")
"RTN","IBJTTA1",23,0)
 S IBY="IB Status: "_IBI,X=$$SETFLD^VALM1(IBY,X,"TRTY")
"RTN","IBJTTA1",24,0)
 ;
"RTN","IBJTTA1",25,0)
 S IBY=+IBDU1-$P(IBDU1,U,2),IBY=$J(IBY,11,2),X=$$SETFLD^VALM1(IBY,X,"TAMT")
"RTN","IBJTTA1",26,0)
 S IBY=$P(IBAR,U,1),IBY=$J(IBY,11,2),X=$$SETFLD^VALM1(IBY,X,"CAMT")
"RTN","IBJTTA1",27,0)
 D SET(X)
"RTN","IBJTTA1",28,0)
 ;
"RTN","IBJTTA1",29,0)
 ; AR profile of transactions
"RTN","IBJTTA1",30,0)
 ;
"RTN","IBJTTA1",31,0)
 D TRN^RCJIBFN2(IBIFN)
"RTN","IBJTTA1",32,0)
 I $D(^TMP("RCJIB",$J)) S IBI=0 F  S IBI=$O(^TMP("RCJIB",$J,IBI)) Q:'IBI  D
"RTN","IBJTTA1",33,0)
 . S IBLN=^TMP("RCJIB",$J,IBI)
"RTN","IBJTTA1",34,0)
 . S IBY=IBCNT+1,X=$$SETFLD^VALM1(IBY,X,"NUMBER")
"RTN","IBJTTA1",35,0)
 . S IBY=$P(IBLN,U,1),X=$$SETFLD^VALM1(IBY,X,"TRNUM")
"RTN","IBJTTA1",36,0)
 . S IBY=$$DATE(+$P(IBLN,U,2)),X=$$SETFLD^VALM1(IBY,X,"DATE")
"RTN","IBJTTA1",37,0)
 . ; BEGIN IB*2*609 - Display Initials if this is a decrease adjustment
"RTN","IBJTTA1",38,0)
 . I +$P(IBLN,U,3)'=35 S IBY=$P($$STNO^RCJIBFN2(+$P(IBLN,U,3)),U,1),X=$$SETFLD^VALM1(IBY,X,"TRTY")
"RTN","IBJTTA1",39,0)
 . E  D
"RTN","IBJTTA1",40,0)
 . .N IBRCT0,IBUSR
"RTN","IBJTTA1",41,0)
 . .S IBRCT0=$$N0^RCJIBFN1($P(IBLN,U))
"RTN","IBJTTA1",42,0)
 . .S IBY=$P($$STNO^RCJIBFN2(+$P(IBLN,U,3)),U,1)
"RTN","IBJTTA1",43,0)
 . .S IBUSR=$$GET1^DIQ(200,+$P(IBRCT0,U,3)_",",1)
"RTN","IBJTTA1",44,0)
 . .S IBUSR=$S(IBUSR="POST":"Auto",1:IBUSR)
"RTN","IBJTTA1",45,0)
 . .S IBY=IBY_" ("_IBUSR_")"
"RTN","IBJTTA1",46,0)
 . .S X=$$SETFLD^VALM1(IBY,X,"TRTY")
"RTN","IBJTTA1",47,0)
 . ; END IB*2*609
"RTN","IBJTTA1",48,0)
 . S IBY=$J($P(IBLN,U,4),11,2),X=$$SETFLD^VALM1(IBY,X,"TAMT")
"RTN","IBJTTA1",49,0)
 . S IBY=$J($P(IBLN,U,5),11,2),X=$$SETFLD^VALM1(IBY,X,"CAMT")
"RTN","IBJTTA1",50,0)
 . D SET(X,+IBI)
"RTN","IBJTTA1",51,0)
 ;
"RTN","IBJTTA1",52,0)
 D SET("") D SET("")
"RTN","IBJTTA1",53,0)
 S X="   Total Collected:   "_$J(+$P(IBAR,U,4),10,2) D SET(X)
"RTN","IBJTTA1",54,0)
 I +$P(IBAR,U,5) S X="   Percent Collected: "_$J($P(IBAR,U,5),10,2)_"%" D SET(X)
"RTN","IBJTTA1",55,0)
 ;
"RTN","IBJTTA1",56,0)
 ; reason cancelled
"RTN","IBJTTA1",57,0)
 I +$P(IBDS,U,18) K IBY D RCANC^IBJTU2(IBIFN,.IBY,47) I +IBY D
"RTN","IBJTTA1",58,0)
 . S X="   Reason Cancelled by ("_$P(IBY,U,3)_"): ",X=X_$J(" ",(32-$L(X)))
"RTN","IBJTTA1",59,0)
 . S IBI=0 F  S IBI=$O(IBY(IBI)) Q:'IBI  S X=X_IBY(IBI) D SET(X) S X=$J(" ",32)
"RTN","IBJTTA1",60,0)
 ;
"RTN","IBJTTA1",61,0)
 K ^TMP("RCJIB",$J) I '$D(^TMP("IBJTTAX",$J)) K ^TMP("IBJTTA",$J,"IDX")
"RTN","IBJTTA1",62,0)
 Q
"RTN","IBJTTA1",63,0)
 ;
"RTN","IBJTTA1",64,0)
DATE(X) ; date in external format
"RTN","IBJTTA1",65,0)
 N Y S Y="" I $G(X)?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTTA1",66,0)
 Q Y
"RTN","IBJTTA1",67,0)
 ;
"RTN","IBJTTA1",68,0)
SET(X,TRNS) ; set up list manager screen array
"RTN","IBJTTA1",69,0)
 S VALMCNT=VALMCNT+1 N CNT
"RTN","IBJTTA1",70,0)
 S:+$G(TRNS) IBCNT=IBCNT+1 S CNT=$S(+IBCNT:IBCNT,1:1)
"RTN","IBJTTA1",71,0)
 S ^TMP("IBJTTA",$J,VALMCNT,0)=X
"RTN","IBJTTA1",72,0)
 S ^TMP("IBJTTA",$J,"IDX",VALMCNT,+CNT)=""
"RTN","IBJTTA1",73,0)
 S:$G(TRNS) ^TMP("IBJTTAX",$J,CNT)=VALMCNT_U_IBIFN_U_$G(TRNS)
"RTN","IBJTTA1",74,0)
 Q
"RTN","IBJTTB1")
0^3^B26656525
"RTN","IBJTTB1",1,0)
IBJTTB1 ;ALB/ARH - TPI AR TRANSACTION PROFILE BUILD ;07-APR-1995
"RTN","IBJTTB1",2,0)
 ;;2.0;INTEGRATED BILLING;**39,530,609**; 21-MAR-94;Build 26
"RTN","IBJTTB1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJTTB1",4,0)
 ;
"RTN","IBJTTB1",5,0)
BLD ; build array for list manager AR TRANSACTION
"RTN","IBJTTB1",6,0)
 ; input:  DFN, IBIFN - ptr to bill (399), IBTRNS - ptr to transaction (433)
"RTN","IBJTTB1",7,0)
 N IBI,IBJ,IBX,IBRCT0,IBRCT1,IBRCT2,IBRCT3,IBRCT5,IBRCT8,IBLN,IBSTR,IBD,IBT,IBT1,IBT2,IBT3,IBLL,IBRL,IBLC,IBRC,IBLW,IBRW,IBTRTY,IBBC,IBADDM,STRG,IB12,IB32,IB20,IBEDAT,IBERR,IBERA,IBXRC
"RTN","IBJTTB1",8,0)
 Q:'$G(IBTRNS)
"RTN","IBJTTB1",9,0)
 S IBLL=16,IBRL=16,IBLC=2,IBRC=35,IBLW=12+IBLL,IBRW=25+IBRL,IB12=12,IB20=20,IB32=32
"RTN","IBJTTB1",10,0)
 ;
"RTN","IBJTTB1",11,0)
 S IBRCT0=$$N0^RCJIBFN1(IBTRNS),IBRCT1=$$N1^RCJIBFN1(IBTRNS),IBRCT2=$$N2^RCJIBFN1(IBTRNS)
"RTN","IBJTTB1",12,0)
 S IBRCT3=$$N3^RCJIBFN1(IBTRNS),IBRCT5=$$N5^RCJIBFN1(IBTRNS),IBRCT8=$$N8^RCJIBFN1(IBTRNS)
"RTN","IBJTTB1",13,0)
 S IBTRTY=$P($$STNO^RCJIBFN2(+$P(IBRCT1,U,2)),U,3)
"RTN","IBJTTB1",14,0)
 ;
"RTN","IBJTTB1",15,0)
 ; IB*2.0*530 - Get ERA#, Trace# and 835 Payer/Tin from Receipt
"RTN","IBJTTB1",16,0)
 D:$P(IBRCT1,U,3)]""
"RTN","IBJTTB1",17,0)
 . S IBXRC=$$FIND1^DIC(344,"","",$P(IBRCT1,U,3),"B","","IBERR"),IBERA=$$GET1^DIQ(344,IBXRC_",",".18","I")
"RTN","IBJTTB1",18,0)
 . D GETS^DIQ(344.4,IBERA_",",".01;.02;.03;.06","E","IBEDAT")
"RTN","IBJTTB1",19,0)
 I $P(IBRCT1,U,3)="" S IBERA=0,IBEDAT(344.4,IBERA_",",.01,"E")="NO ERA#",IBEDAT(344.4,IBERA_",",.02,"E")="NO TRACE#",IBEDAT(344.4,IBERA_",",.03,"E")="NO TIN",IBEDAT(344.4,IBERA_",",.06,"E")="NO PAYER"
"RTN","IBJTTB1",20,0)
 ;
"RTN","IBJTTB1",21,0)
 S IBLN=1,IBSTR=""
"RTN","IBJTTB1",22,0)
 S IBD="TRANS. NO: ",IBD=$J(IBD,IBLL)_$P(IBRCT0,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBLC,IBLW)
"RTN","IBJTTB1",23,0)
 S IBD="TRANS. TYPE: ",IBD=$J(IBD,IBLL)_$P($$STNO^RCJIBFN2(+$P(IBRCT1,U,2)),U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBRC,IBRW)
"RTN","IBJTTB1",24,0)
 S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTB1",25,0)
 ;
"RTN","IBJTTB1",26,0)
 S IBD="TRANS. DATE: ",IBD=$J(IBD,IBLL)_$$DATE^IBJU1(+IBRCT1) S IBSTR=$$SETLN(IBD,IBSTR,IBLC,IBLW)
"RTN","IBJTTB1",27,0)
 S IBD="DATE POSTED: ",IBD=$J(IBD,IBLL)_$$DATE^IBJU1(+$P(IBRCT1,U,7))
"RTN","IBJTTB1",28,0)
 S IBD=IBD_"  ("_$P($G(^VA(200,+$P(IBRCT0,U,3),0)),U,2)_")" S IBSTR=$$SETLN(IBD,IBSTR,IBRC,IBRW)
"RTN","IBJTTB1",29,0)
 S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTB1",30,0)
 ;
"RTN","IBJTTB1",31,0)
 ; IB*2.0*530 - Add ERA#, Trace # and 835 Payer/TIN to screen
"RTN","IBJTTB1",32,0)
 S IBD="TRANS. AMOUNT: ",IBD=$J(IBD,IBLL)_$FN($P(IBRCT1,U,5),",",2) S IBSTR=$$SETLN(IBD,IBSTR,IBLC,IBLW)
"RTN","IBJTTB1",33,0)
 I IBTRTY=2!(IBTRTY=20) S IBD="ERA#: ",IBD=$J(IBD,8)_$G(IBEDAT(344.4,IBERA_",",.01,"E")) S IBSTR=$$SETLN(IBD,IBSTR,IB32,IB20)
"RTN","IBJTTB1",34,0)
 I IBTRTY=2!(IBTRTY=20) S IBD="RECEIPT #: ",IBD=$J(IBD,IB12)_$P(IBRCT1,U,3) S IBSTR=$$SETLN(IBD,IBSTR,54,26)
"RTN","IBJTTB1",35,0)
 S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTB1",36,0)
 I IBTRTY=2!(IBTRTY=20) S IBD="PAYER NAME/TIN: ",IBD=$J(IBD,IBLL)_$G(IBEDAT(344.4,IBERA_",",.06,"E"))_"/"_$G(IBEDAT(344.4,IBERA_",",.03,"E")) S IBSTR=$$SETLN(IBD,IBSTR,IBLC,66)
"RTN","IBJTTB1",37,0)
 S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTB1",38,0)
 I IBTRTY=2!(IBTRTY=20) S IBD="TRACE#: ",IBD=$J(IBD,IBLL)_$G(IBEDAT(344.4,IBERA_",",.02,"E")) S IBSTR=$$SETLN(IBD,IBSTR,IBLC,66)
"RTN","IBJTTB1",39,0)
 S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTB1",40,0)
 ; Display FMS Status IB*2.0*609 - Next 7 lines
"RTN","IBJTTB1",41,0)
 I IBTRTY=2!(IBTRTY=20),$G(IBXRC) D
"RTN","IBJTTB1",42,0)
 . N FMSDOC
"RTN","IBJTTB1",43,0)
 . S FMSDOC=$$FMSSTAT^RCDPUREC(IBXRC)
"RTN","IBJTTB1",44,0)
 . S IBD="FMS DOCUMENT: "_$TR($P(FMSDOC,"^")," ")_"   FMS DOC STATUS: "_$P(FMSDOC,"^",2)
"RTN","IBJTTB1",45,0)
 . S IBSTR=$$SETLN(IBD,IBSTR,IBLC,76)
"RTN","IBJTTB1",46,0)
 . S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTB1",47,0)
 ;
"RTN","IBJTTB1",48,0)
 I IBTRTY=21!(IBTRTY=1) S IBD="ADJUSTMENT #: ",IBD=$J(IBD,IBLL)_$P(IBRCT1,U,4) S IBSTR=$$SETLN(IBD,IBSTR,IBLC,IBLW)
"RTN","IBJTTB1",49,0)
 I $P(IBRCT0,U,2)'="" I IBTRTY=1!((IBTRTY>7)&(IBTRTY<12))!(IBTRTY=21)!(IBTRTY=29)!(IBTRTY=30) D
"RTN","IBJTTB1",50,0)
 . S IBD="DATE CALM DONE: ",IBD=$J(IBD,IBLL)_$$DATE^IBJU1($P(IBRCT0,U,2)) S IBSTR=$$SETLN(IBD,IBSTR,IBRC,IBRW)
"RTN","IBJTTB1",51,0)
 I IBSTR'="" S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTB1",52,0)
 ;
"RTN","IBJTTB1",53,0)
 I IBTRTY=17!($P(IBRCT5,U,2)'="") S IBD="FOLLOW-UP DATE: ",IBD=$J(IBD,IBLL)_$$DATE^IBJU1($P(IBRCT5,U,2)) S IBSTR=$$SETLN(IBD,IBSTR,IBLC,IBLW)
"RTN","IBJTTB1",54,0)
 I IBSTR'="" S IBLN=$$SET(IBSTR,IBLN),IBSTR=""
"RTN","IBJTTB1",55,0)
 ;
"RTN","IBJTTB1",56,0)
 I $P(IBRCT0,U,4)["INCOMPLETE" S IBLN=$$SET(" ",IBLN) D
"RTN","IBJTTB1",57,0)
 . S IBD="NOTE: ",IBD=$J(IBD,IBLL)_$P(IBRCT0,U,4) S IBSTR=$$SETLN(IBD,"",IBLC,79),IBLN=$$SET(IBSTR,IBLN) S IBSTR=""
"RTN","IBJTTB1",58,0)
 ;
"RTN","IBJTTB1",59,0)
 I IBTRTY=8!(IBTRTY=9) S IBLN=$$SET(" ",IBLN) D  S IBLN=$$SET(IBSTR,IBLN) S IBSTR=""
"RTN","IBJTTB1",60,0)
 . S IBT=22,IBSTR="TERMINATION REASON: ",IBD=$P(IBRCT1,U,6) S IBSTR=$$SETLN(IBD,IBSTR,IBT,50)
"RTN","IBJTTB1",61,0)
 ;
"RTN","IBJTTB1",62,0)
 ; balance and collection amounts
"RTN","IBJTTB1",63,0)
 D BCSCR^IBJTTB2
"RTN","IBJTTB1",64,0)
 ;
"RTN","IBJTTB1",65,0)
 ; administrative charges
"RTN","IBJTTB1",66,0)
 I IBRCT2'="",IBTRTY=12 S IBLN=$$SET(" ",IBLN) S IBSTR="" D
"RTN","IBJTTB1",67,0)
 . S IBT=2,IBD="ADMINISTRATIVE COST CHARGE: " S IBSTR=$$SETLN(IBD,IBSTR,IBT,29)
"RTN","IBJTTB1",68,0)
 . D ADDM^IBJTTB2 S IBI=0 F  S IBI=$O(IBADDM(IBI)) Q:'IBI  D  S IBLN=$$SET(IBSTR,IBLN) S IBSTR=""
"RTN","IBJTTB1",69,0)
 .. S IBT=32,IBD=$P(IBADDM(IBI),U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,17)
"RTN","IBJTTB1",70,0)
 .. S IBT=50,IBD=$J($P(IBADDM(IBI),U,2),11,2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,11)
"RTN","IBJTTB1",71,0)
 ;
"RTN","IBJTTB1",72,0)
 K STRG D N4^RCJIBFN1(IBTRNS) S (IBI,IBJ)=0 F  S IBI=$O(STRG(IBI)) Q:'IBI  D  S IBLN=$$SET(IBSTR,IBLN) S IBSTR=""
"RTN","IBJTTB1",73,0)
 . S IBX=STRG(IBI) Q:IBX=""  S IBJ=IBJ+1
"RTN","IBJTTB1",74,0)
 . I IBJ=1 S IBLN=$$SET(" ",IBLN)
"RTN","IBJTTB1",75,0)
 . S IBT=7,IBD=$S(IBJ=1:"FY: ",1:"    ")_$P(IBX,U,1) S IBSTR=$$SETLN(IBD,IBSTR,IBT,8)
"RTN","IBJTTB1",76,0)
 . S IBT=28,IBD=$S(IBJ=1:"PR AMT: ",1:"        ")_$FN(+$P(IBX,U,2),",",2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,21)
"RTN","IBJTTB1",77,0)
 . S IBT=57,IBD=$S(IBJ=1:"FY TR AMT: ",1:"           ")_$FN(+$P(IBX,U,4),",",2) S IBSTR=$$SETLN(IBD,IBSTR,IBT,22)
"RTN","IBJTTB1",78,0)
 K STRG
"RTN","IBJTTB1",79,0)
 ;
"RTN","IBJTTB1",80,0)
 S IBLN=$$SET(" ",IBLN),IBSTR="COMMENTS: "
"RTN","IBJTTB1",81,0)
 S IBT=11,IBD=$P(IBRCT5,U,1) I IBD'="" S IBSTR=$$SETLN(IBD,IBSTR,IBT,45),IBLN=$$SET(IBSTR,IBLN) S IBSTR=""
"RTN","IBJTTB1",82,0)
 D TRCOMM^IBJTTB2,COMM^IBJTTB2
"RTN","IBJTTB1",83,0)
 ;
"RTN","IBJTTB1",84,0)
 S VALMCNT=IBLN-1
"RTN","IBJTTB1",85,0)
 ;
"RTN","IBJTTB1",86,0)
 Q
"RTN","IBJTTB1",87,0)
 ;
"RTN","IBJTTB1",88,0)
SETLN(STR,IBX,COL,WD) ;
"RTN","IBJTTB1",89,0)
 S IBX=$$SETSTR^VALM1(STR,IBX,COL,WD)
"RTN","IBJTTB1",90,0)
 Q IBX
"RTN","IBJTTB1",91,0)
 ;
"RTN","IBJTTB1",92,0)
SET(STR,LN) ; set up TMP array with screen data
"RTN","IBJTTB1",93,0)
 N IBX,IBI
"RTN","IBJTTB1",94,0)
 D SET^VALM10(LN,STR)
"RTN","IBJTTB1",95,0)
 S LN=LN+1
"RTN","IBJTTB1",96,0)
SETQ Q LN
"VER")
8.0^22.2
**INSTALL NAME**
PRCA*4.5*326
"BLD",10687,0)
PRCA*4.5*326^ACCOUNTS RECEIVABLE^0^3181018^y
"BLD",10687,1,0)
^^1^1^3180815^^
"BLD",10687,1,1,0)
Patch for builds 4 and 5 of ePayments MCCF project.
"BLD",10687,4,0)
^9.64PA^344.6^7
"BLD",10687,4,344,0)
344
"BLD",10687,4,344,2,0)
^9.641^344^1
"BLD",10687,4,344,2,344,0)
AR BATCH PAYMENT  (File-top level)
"BLD",10687,4,344,2,344,1,0)
^9.6411^202^1
"BLD",10687,4,344,2,344,1,202,0)
ORIGINAL FMS DOCUMENT
"BLD",10687,4,344,222)
y^y^p^^^^n^^n
"BLD",10687,4,344,224)

"BLD",10687,4,344.31,0)
344.31
"BLD",10687,4,344.31,2,0)
^9.641^344.31^1
"BLD",10687,4,344.31,2,344.31,0)
EDI THIRD PARTY EFT DETAIL  (File-top level)
"BLD",10687,4,344.31,2,344.31,1,0)
^9.6411^.03^4
"BLD",10687,4,344.31,2,344.31,1,.01,0)
EFT TRANSACTION
"BLD",10687,4,344.31,2,344.31,1,.02,0)
PAYER NAME
"BLD",10687,4,344.31,2,344.31,1,.03,0)
PAYER ID
"BLD",10687,4,344.31,2,344.31,1,.14,0)
TRANSACTION #
"BLD",10687,4,344.31,222)
y^y^p^^^^n^^n
"BLD",10687,4,344.31,224)

"BLD",10687,4,344.4,0)
344.4
"BLD",10687,4,344.4,2,0)
^9.641^344.41^2
"BLD",10687,4,344.4,2,344.4,0)
ELECTRONIC REMITTANCE ADVICE  (File-top level)
"BLD",10687,4,344.4,2,344.4,1,0)
^9.6411^.19^6
"BLD",10687,4,344.4,2,344.4,1,.03,0)
INSURANCE CO ID
"BLD",10687,4,344.4,2,344.4,1,.06,0)
PAYMENT FROM
"BLD",10687,4,344.4,2,344.4,1,.19,0)
AUTO-DECREASE BLOCKED
"BLD",10687,4,344.4,2,344.4,1,4.04,0)
MARKED FOR AUTOPOST USER
"BLD",10687,4,344.4,2,344.4,1,5.03,0)
DATE CHECK MATCHED
"BLD",10687,4,344.4,2,344.4,1,5.04,0)
CHECK MATCHED USER
"BLD",10687,4,344.4,2,344.41,0)
ERA DETAIL  (sub-file)
"BLD",10687,4,344.4,2,344.41,1,0)
^9.6411^6.01^1
"BLD",10687,4,344.4,2,344.41,1,6.01,0)
MARKED FOR AUTOPOST USER
"BLD",10687,4,344.4,222)
y^n^p^^^^n^^n
"BLD",10687,4,344.4,224)

"BLD",10687,4,344.6,0)
344.6
"BLD",10687,4,344.6,2,0)
^9.641^344.6^1
"BLD",10687,4,344.6,2,344.6,0)
RCDPE AUTO-PAY EXCLUSION  (File-top level)
"BLD",10687,4,344.6,2,344.6,1,0)
^9.6411^.11^3
"BLD",10687,4,344.6,2,344.6,1,.09,0)
PHARMACY PAYER
"BLD",10687,4,344.6,2,344.6,1,.1,0)
TRICARE PAYER
"BLD",10687,4,344.6,2,344.6,1,.11,0)
PAYER ADDED FROM EFT
"BLD",10687,4,344.6,222)
y^n^p^^^^n^^n
"BLD",10687,4,344.6,224)

"BLD",10687,4,344.61,0)
344.61
"BLD",10687,4,344.61,2,0)
^9.641^344.61^1
"BLD",10687,4,344.61,2,344.61,0)
RCDPE PARAMETER  (File-top level)
"BLD",10687,4,344.61,2,344.61,1,0)
^9.6411^.05^5
"BLD",10687,4,344.61,2,344.61,1,.03,0)
AUTO-DECREASE MED ENABLED
"BLD",10687,4,344.61,2,344.61,1,.04,0)
AUTO-DECREASE MED DAYS DEFAULT
"BLD",10687,4,344.61,2,344.61,1,.05,0)
AUTO-DECREASE MED AMT DEFAULT
"BLD",10687,4,344.61,2,344.61,1,.11,0)
AUTO-DECREASE MED ZERO ENABLED
"BLD",10687,4,344.61,2,344.61,1,.12,0)
AUTO-DECREASE MED DAYS (ZERO)
"BLD",10687,4,344.61,222)
y^y^p^^^^n^^n
"BLD",10687,4,344.61,224)

"BLD",10687,4,344.62,0)
344.62
"BLD",10687,4,344.62,2,0)
^9.641^344.62^1
"BLD",10687,4,344.62,2,344.62,0)
RCDPE CARC-RARC AUTO DEC  (File-top level)
"BLD",10687,4,344.62,2,344.62,1,0)
^9.6411^.13^7
"BLD",10687,4,344.62,2,344.62,1,.02,0)
CARC AUTO DECREASE
"BLD",10687,4,344.62,2,344.62,1,.08,0)
CARC AUTO DECREASE NO-PAY
"BLD",10687,4,344.62,2,344.62,1,.09,0)
DATE ADDED NO-PAY
"BLD",10687,4,344.62,2,344.62,1,.1,0)
UPDATED BY (NO-PAY)
"BLD",10687,4,344.62,2,344.62,1,.11,0)
DATE LAST UPDATED NO-PAY
"BLD",10687,4,344.62,2,344.62,1,.12,0)
CARC DECREASE AMOUNT NO-PAY
"BLD",10687,4,344.62,2,344.62,1,.13,0)
COMMENT NO-PAY
"BLD",10687,4,344.62,222)
y^y^p^^^^n^^n
"BLD",10687,4,344.62,224)

"BLD",10687,4,344.71,0)
344.71
"BLD",10687,4,344.71,2,0)
^9.641^344.711^1
"BLD",10687,4,344.71,2,344.711,0)
MULTI TRANS SPLIT  (sub-file)
"BLD",10687,4,344.71,2,344.711,1,0)
^9.6411^.04^4
"BLD",10687,4,344.71,2,344.711,1,.01,0)
SEQUENCE
"BLD",10687,4,344.71,2,344.711,1,.02,0)
CLAIM
"BLD",10687,4,344.71,2,344.711,1,.03,0)
AMOUNT
"BLD",10687,4,344.71,2,344.711,1,.04,0)
COMMENT
"BLD",10687,4,344.71,222)
y^y^p^^^^n^^n
"BLD",10687,4,344.71,224)

"BLD",10687,4,"APDD",344,344)

"BLD",10687,4,"APDD",344,344,202)

"BLD",10687,4,"APDD",344.31,344.31)

"BLD",10687,4,"APDD",344.31,344.31,.01)

"BLD",10687,4,"APDD",344.31,344.31,.02)

"BLD",10687,4,"APDD",344.31,344.31,.03)

"BLD",10687,4,"APDD",344.31,344.31,.14)

"BLD",10687,4,"APDD",344.4,344.4)

"BLD",10687,4,"APDD",344.4,344.4,.03)

"BLD",10687,4,"APDD",344.4,344.4,.06)

"BLD",10687,4,"APDD",344.4,344.4,.19)

"BLD",10687,4,"APDD",344.4,344.4,4.04)

"BLD",10687,4,"APDD",344.4,344.4,5.03)

"BLD",10687,4,"APDD",344.4,344.4,5.04)

"BLD",10687,4,"APDD",344.4,344.41)

"BLD",10687,4,"APDD",344.4,344.41,6.01)

"BLD",10687,4,"APDD",344.6,344.6)

"BLD",10687,4,"APDD",344.6,344.6,.09)

"BLD",10687,4,"APDD",344.6,344.6,.1)

"BLD",10687,4,"APDD",344.6,344.6,.11)

"BLD",10687,4,"APDD",344.61,344.61)

"BLD",10687,4,"APDD",344.61,344.61,.03)

"BLD",10687,4,"APDD",344.61,344.61,.04)

"BLD",10687,4,"APDD",344.61,344.61,.05)

"BLD",10687,4,"APDD",344.61,344.61,.11)

"BLD",10687,4,"APDD",344.61,344.61,.12)

"BLD",10687,4,"APDD",344.62,344.62)

"BLD",10687,4,"APDD",344.62,344.62,.02)

"BLD",10687,4,"APDD",344.62,344.62,.08)

"BLD",10687,4,"APDD",344.62,344.62,.09)

"BLD",10687,4,"APDD",344.62,344.62,.1)

"BLD",10687,4,"APDD",344.62,344.62,.11)

"BLD",10687,4,"APDD",344.62,344.62,.12)

"BLD",10687,4,"APDD",344.62,344.62,.13)

"BLD",10687,4,"APDD",344.71,344.711)

"BLD",10687,4,"APDD",344.71,344.711,.01)

"BLD",10687,4,"APDD",344.71,344.711,.02)

"BLD",10687,4,"APDD",344.71,344.711,.03)

"BLD",10687,4,"APDD",344.71,344.711,.04)

"BLD",10687,4,"B",344,344)

"BLD",10687,4,"B",344.31,344.31)

"BLD",10687,4,"B",344.4,344.4)

"BLD",10687,4,"B",344.6,344.6)

"BLD",10687,4,"B",344.61,344.61)

"BLD",10687,4,"B",344.62,344.62)

"BLD",10687,4,"B",344.71,344.71)

"BLD",10687,6.3)
26
"BLD",10687,"ABPKG")
n
"BLD",10687,"INIT")
POST^RCP326
"BLD",10687,"KRN",0)
^9.67PA^779.2^20
"BLD",10687,"KRN",.4,0)
.4
"BLD",10687,"KRN",.401,0)
.401
"BLD",10687,"KRN",.402,0)
.402
"BLD",10687,"KRN",.403,0)
.403
"BLD",10687,"KRN",.5,0)
.5
"BLD",10687,"KRN",.84,0)
.84
"BLD",10687,"KRN",3.6,0)
3.6
"BLD",10687,"KRN",3.8,0)
3.8
"BLD",10687,"KRN",9.2,0)
9.2
"BLD",10687,"KRN",9.8,0)
9.8
"BLD",10687,"KRN",9.8,"NM",0)
^9.68A^79^77
"BLD",10687,"KRN",9.8,"NM",1,0)
RCDPEX2^^0^B32725849
"BLD",10687,"KRN",9.8,"NM",2,0)
RCDPEAP^^0^B211031316
"BLD",10687,"KRN",9.8,"NM",3,0)
RCDPRPL3^^0^B82192868
"BLD",10687,"KRN",9.8,"NM",4,0)
RCDPRPL4^^0^B36743675
"BLD",10687,"KRN",9.8,"NM",5,0)
RCDPLPS2^^0^B102212504
"BLD",10687,"KRN",9.8,"NM",8,0)
RCDPEM6^^0^B92313176
"BLD",10687,"KRN",9.8,"NM",9,0)
RCDPTAR^^0^B200693399
"BLD",10687,"KRN",9.8,"NM",10,0)
RCDPEM2^^0^B136538323
"BLD",10687,"KRN",9.8,"NM",11,0)
RCDPEM3^^0^B205394257
"BLD",10687,"KRN",9.8,"NM",12,0)
RCDPEWL^^0^B79960126
"BLD",10687,"KRN",9.8,"NM",13,0)
RCDPRPLM^^0^B92487304
"BLD",10687,"KRN",9.8,"NM",14,0)
RCDPEDA2^^0^B148982269
"BLD",10687,"KRN",9.8,"NM",15,0)
RCDPARC1^^0^B8176922
"BLD",10687,"KRN",9.8,"NM",16,0)
RCDPTAR1^^0^B44014323
"BLD",10687,"KRN",9.8,"NM",17,0)
RCDPEWL7^^0^B237405649
"BLD",10687,"KRN",9.8,"NM",18,0)
RCDPEDA3^^0^B111755243
"BLD",10687,"KRN",9.8,"NM",19,0)
RCDPEDA4^^0^B37590225
"BLD",10687,"KRN",9.8,"NM",20,0)
RCDPEMB^^0^B489577
"BLD",10687,"KRN",9.8,"NM",21,0)
RCDPEAA2^^0^B156548123
"BLD",10687,"KRN",9.8,"NM",22,0)
RCDPEWL6^^0^B88977671
"BLD",10687,"KRN",9.8,"NM",23,0)
RCDPRU^^0^B191751308
"BLD",10687,"KRN",9.8,"NM",24,0)
RCDPEAP1^^0^B111273424
"BLD",10687,"KRN",9.8,"NM",25,0)
RCDPEWL4^^0^B67782893
"BLD",10687,"KRN",9.8,"NM",26,0)
RCDPUREC^^0^B141629081
"BLD",10687,"KRN",9.8,"NM",27,0)
RCDPEM^^0^B75647011
"BLD",10687,"KRN",9.8,"NM",28,0)
RCDPEMA^^0^B31450000
"BLD",10687,"KRN",9.8,"NM",29,0)
RCDPURET^^0^B76662118
"BLD",10687,"KRN",9.8,"NM",30,0)
RCBEUTRA^^0^B30280657
"BLD",10687,"KRN",9.8,"NM",31,0)
RCDPAYER^^0^B25164505
"BLD",10687,"KRN",9.8,"NM",32,0)
RCBEPAY^^0^B33466454
"BLD",10687,"KRN",9.8,"NM",33,0)
RCDPLPL4^^0^B246541574
"BLD",10687,"KRN",9.8,"NM",34,0)
RCDPEAPP^^0^B188964958
"BLD",10687,"KRN",9.8,"NM",35,0)
RCDPARC^^0^B191533427
"BLD",10687,"KRN",9.8,"NM",36,0)
RCDPEM9^^0^B81945399
"BLD",10687,"KRN",9.8,"NM",37,0)
RCP326^^0^B8513731
"BLD",10687,"KRN",9.8,"NM",38,0)
RCDPEWL0^^0^B210141800
"BLD",10687,"KRN",9.8,"NM",39,0)
RCDPEWLD^^0^B136472540
"BLD",10687,"KRN",9.8,"NM",40,0)
RCDPESP3^^0^B9104300
"BLD",10687,"KRN",9.8,"NM",41,0)
RCDPEM21^^0^B34544967
"BLD",10687,"KRN",9.8,"NM",42,0)
RCDPESP^^0^B156068474
"BLD",10687,"KRN",9.8,"NM",43,0)
RCDPESP6^^0^B44732260
"BLD",10687,"KRN",9.8,"NM",44,0)
RCDPESP5^^0^B246127471
"BLD",10687,"KRN",9.8,"NM",45,0)
RCDPESP1^^0^B115604323
"BLD",10687,"KRN",9.8,"NM",46,0)
RCDPESP2^^0^B186739461
"BLD",10687,"KRN",9.8,"NM",47,0)
RCDPEAD^^0^B225208697
"BLD",10687,"KRN",9.8,"NM",48,0)
RCDPEAD1^^0^B89886464
"BLD",10687,"KRN",9.8,"NM",49,0)
RCDPESP7^^0^B23355054
"BLD",10687,"KRN",9.8,"NM",50,0)
RCDPEM7^^0^B161364446
"BLD",10687,"KRN",9.8,"NM",51,0)
RCDPEWL8^^0^B102929282
"BLD",10687,"KRN",9.8,"NM",52,0)
RCDPEV0^^0^B69507034
"BLD",10687,"KRN",9.8,"NM",53,0)
RCDPEWLZ^^0^B23932525
"BLD",10687,"KRN",9.8,"NM",54,0)
RCDPEWL1^^0^B82257710
"BLD",10687,"KRN",9.8,"NM",55,0)
RCDPEAC^^0^B168209657
"BLD",10687,"KRN",9.8,"NM",56,0)
RCDPEAA1^^0^B152088479
"BLD",10687,"KRN",9.8,"NM",57,0)
RCDPEADP^^0^B143486020
"BLD",10687,"KRN",9.8,"NM",58,0)
RCDPEAD2^^0^B2447533
"BLD",10687,"KRN",9.8,"NM",59,0)
RCDPELAR^^0^B155712886
"BLD",10687,"KRN",9.8,"NM",60,0)
RCDPELA1^^0^B120642762
"BLD",10687,"KRN",9.8,"NM",61,0)
RCDPEDAR^^0^B78240638
"BLD",10687,"KRN",9.8,"NM",62,0)
RCDPEM4^^0^B215103817
"BLD",10687,"KRN",9.8,"NM",63,0)
RCDPEAR2^^0^B118872172
"BLD",10687,"KRN",9.8,"NM",64,0)
RCDPENR2^^0^B255388817
"BLD",10687,"KRN",9.8,"NM",65,0)
RCDPENR3^^0^B205654805
"BLD",10687,"KRN",9.8,"NM",66,0)
RCDPENR4^^0^B70397699
"BLD",10687,"KRN",9.8,"NM",67,0)
RCDPEAR1^^0^B185349630
"BLD",10687,"KRN",9.8,"NM",68,0)
RCDPEAPS^^0^B32681554
"BLD",10687,"KRN",9.8,"NM",69,0)
RCDPEX1^^0^B19648805
"BLD",10687,"KRN",9.8,"NM",70,0)
RCDPPLB^^0^B211841359
"BLD",10687,"KRN",9.8,"NM",71,0)
RCDPE8NZ^^0^B126399220
"BLD",10687,"KRN",9.8,"NM",72,0)
RCDPEAPQ^^0^B57896147
"BLD",10687,"KRN",9.8,"NM",73,0)
RCDPEU1^^0^B118506999
"BLD",10687,"KRN",9.8,"NM",74,0)
PRCABJ2^^0^B15862562
"BLD",10687,"KRN",9.8,"NM",75,0)
RCBEADJ^^0^B102510722
"BLD",10687,"KRN",9.8,"NM",76,0)
RCBEADJ1^^0^B18611715
"BLD",10687,"KRN",9.8,"NM",77,0)
RCDPEP^^0^B153033159
"BLD",10687,"KRN",9.8,"NM",78,0)
RCDPENRU^^0^B276717279
"BLD",10687,"KRN",9.8,"NM",79,0)
RCDPEU2^^0^B9466209
"BLD",10687,"KRN",9.8,"NM","B","PRCABJ2",74)

"BLD",10687,"KRN",9.8,"NM","B","RCBEADJ",75)

"BLD",10687,"KRN",9.8,"NM","B","RCBEADJ1",76)

"BLD",10687,"KRN",9.8,"NM","B","RCBEPAY",32)

"BLD",10687,"KRN",9.8,"NM","B","RCBEUTRA",30)

"BLD",10687,"KRN",9.8,"NM","B","RCDPARC",35)

"BLD",10687,"KRN",9.8,"NM","B","RCDPARC1",15)

"BLD",10687,"KRN",9.8,"NM","B","RCDPAYER",31)

"BLD",10687,"KRN",9.8,"NM","B","RCDPE8NZ",71)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAA1",56)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAA2",21)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAC",55)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAD",47)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAD1",48)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAD2",58)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEADP",57)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAP",2)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAP1",24)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAPP",34)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAPQ",72)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAPS",68)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAR1",67)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEAR2",63)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEDA2",14)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEDA3",18)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEDA4",19)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEDAR",61)

"BLD",10687,"KRN",9.8,"NM","B","RCDPELA1",60)

"BLD",10687,"KRN",9.8,"NM","B","RCDPELAR",59)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEM",27)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEM2",10)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEM21",41)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEM3",11)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEM4",62)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEM6",8)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEM7",50)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEM9",36)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEMA",28)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEMB",20)

"BLD",10687,"KRN",9.8,"NM","B","RCDPENR2",64)

"BLD",10687,"KRN",9.8,"NM","B","RCDPENR3",65)

"BLD",10687,"KRN",9.8,"NM","B","RCDPENR4",66)

"BLD",10687,"KRN",9.8,"NM","B","RCDPENRU",78)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEP",77)

"BLD",10687,"KRN",9.8,"NM","B","RCDPESP",42)

"BLD",10687,"KRN",9.8,"NM","B","RCDPESP1",45)

"BLD",10687,"KRN",9.8,"NM","B","RCDPESP2",46)

"BLD",10687,"KRN",9.8,"NM","B","RCDPESP3",40)

"BLD",10687,"KRN",9.8,"NM","B","RCDPESP5",44)

"BLD",10687,"KRN",9.8,"NM","B","RCDPESP6",43)

"BLD",10687,"KRN",9.8,"NM","B","RCDPESP7",49)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEU1",73)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEU2",79)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEV0",52)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWL",12)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWL0",38)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWL1",54)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWL4",25)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWL6",22)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWL7",17)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWL8",51)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWLD",39)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEWLZ",53)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEX1",69)

"BLD",10687,"KRN",9.8,"NM","B","RCDPEX2",1)

"BLD",10687,"KRN",9.8,"NM","B","RCDPLPL4",33)

"BLD",10687,"KRN",9.8,"NM","B","RCDPLPS2",5)

"BLD",10687,"KRN",9.8,"NM","B","RCDPPLB",70)

"BLD",10687,"KRN",9.8,"NM","B","RCDPRPL3",3)

"BLD",10687,"KRN",9.8,"NM","B","RCDPRPL4",4)

"BLD",10687,"KRN",9.8,"NM","B","RCDPRPLM",13)

"BLD",10687,"KRN",9.8,"NM","B","RCDPRU",23)

"BLD",10687,"KRN",9.8,"NM","B","RCDPTAR",9)

"BLD",10687,"KRN",9.8,"NM","B","RCDPTAR1",16)

"BLD",10687,"KRN",9.8,"NM","B","RCDPUREC",26)

"BLD",10687,"KRN",9.8,"NM","B","RCDPURET",29)

"BLD",10687,"KRN",9.8,"NM","B","RCP326",37)

"BLD",10687,"KRN",19,0)
19
"BLD",10687,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",10687,"KRN",19,"NM",1,0)
RCDPE AUTO-POST REPORT^^0
"BLD",10687,"KRN",19,"NM",2,0)
RCDPE PAYER EXCLUSION NAME TIN^^0
"BLD",10687,"KRN",19,"NM",3,0)
RCDPE ERA POSTED BY PAPER EOB^^0
"BLD",10687,"KRN",19,"NM","B","RCDPE AUTO-POST REPORT",1)

"BLD",10687,"KRN",19,"NM","B","RCDPE ERA POSTED BY PAPER EOB",3)

"BLD",10687,"KRN",19,"NM","B","RCDPE PAYER EXCLUSION NAME TIN",2)

"BLD",10687,"KRN",19.1,0)
19.1
"BLD",10687,"KRN",101,0)
101
"BLD",10687,"KRN",101,"NM",0)
^9.68A^30^29
"BLD",10687,"KRN",101,"NM",2,0)
RCDPE EOB AUTO-DECREASE^^0
"BLD",10687,"KRN",101,"NM",3,0)
RCDPE EOB WORKLIST MENU^^0
"BLD",10687,"KRN",101,"NM",4,0)
RCDPE EOB WORKLIST SPLIT LINE^^0
"BLD",10687,"KRN",101,"NM",5,0)
RCDPE EOB WORKLIST DIST ADJ^^0
"BLD",10687,"KRN",101,"NM",6,0)
RCDPE EOB WORKLIST VERIFY^^0
"BLD",10687,"KRN",101,"NM",7,0)
RCDPE VIEW/PRINT WORKLIST ERA^^0
"BLD",10687,"KRN",101,"NM",8,0)
RCDPE EOB WL REVIEW^^0
"BLD",10687,"KRN",101,"NM",9,0)
RCDPE EOB WORKLIST CHANGE VIEW^^0
"BLD",10687,"KRN",101,"NM",10,0)
RCDPE EOB WL RECEIPT VIEW^^0
"BLD",10687,"KRN",101,"NM",11,0)
RCDPE EOB WORKLIST MARK FOR AUTO POST^^0
"BLD",10687,"KRN",101,"NM",12,0)
RCDPE EOB WORKLIST REFRESH^^0
"BLD",10687,"KRN",101,"NM",13,0)
RCDPE EOB WORKLIST RECEIPT PROCESSING^^0
"BLD",10687,"KRN",101,"NM",14,0)
RCDPE EOB WORKLIST RESEARCH^^0
"BLD",10687,"KRN",101,"NM",15,0)
RCDPE WORKLIST ERA LIST MENU^^0
"BLD",10687,"KRN",101,"NM",16,0)
RCDPE WORKLIST ERA SELECT^^4^
"BLD",10687,"KRN",101,"NM",17,0)
RCDPE WORKLIST ERA SORT^^4^
"BLD",10687,"KRN",101,"NM",18,0)
RCDPE ERA LIST VIEW ERA^^4^
"BLD",10687,"KRN",101,"NM",19,0)
RCDPE ERA WORKLIST CHANGE VIEW^^4^
"BLD",10687,"KRN",101,"NM",20,0)
VALM QUIT^^4^
"BLD",10687,"KRN",101,"NM",21,0)
RCDPE EFT ERA MANUAL MATCH^^4^
"BLD",10687,"KRN",101,"NM",22,0)
RCDPE WORKLIST ERA MARK FOR AUTO POST^^4^
"BLD",10687,"KRN",101,"NM",23,0)
RCDPE EOB WORKLIST ADMIN COST ADJ^^4^
"BLD",10687,"KRN",101,"NM",24,0)
RCDPE EOB WORKLIST RESEARCH MENU^^0
"BLD",10687,"KRN",101,"NM",25,0)
RCDPE EOB WORKLIST BILL COMMENT^^4^
"BLD",10687,"KRN",101,"NM",26,0)
RCDPE EOB WORKLIST FULL ACCT PROF^^4^
"BLD",10687,"KRN",101,"NM",27,0)
RCDPE EOB WL RESEARCH EXIT^^4^
"BLD",10687,"KRN",101,"NM",28,0)
RCDPE EOB WORKLIST TPJI^^4^
"BLD",10687,"KRN",101,"NM",29,0)
RCDPE VIEW/PRINT WORKLIST EOB^^4^
"BLD",10687,"KRN",101,"NM",30,0)
RCDPE EOB WORKLIST REESTABLISH^^4^
"BLD",10687,"KRN",101,"NM","B","RCDPE EFT ERA MANUAL MATCH",21)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB AUTO-DECREASE",2)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WL RECEIPT VIEW",10)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WL RESEARCH EXIT",27)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WL REVIEW",8)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST ADMIN COST ADJ",23)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST BILL COMMENT",25)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST CHANGE VIEW",9)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST DIST ADJ",5)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST FULL ACCT PROF",26)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST MARK FOR AUTO POST",11)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST MENU",3)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST RECEIPT PROCESSING",13)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST REESTABLISH",30)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST REFRESH",12)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST RESEARCH",14)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST RESEARCH MENU",24)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST SPLIT LINE",4)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST TPJI",28)

"BLD",10687,"KRN",101,"NM","B","RCDPE EOB WORKLIST VERIFY",6)

"BLD",10687,"KRN",101,"NM","B","RCDPE ERA LIST VIEW ERA",18)

"BLD",10687,"KRN",101,"NM","B","RCDPE ERA WORKLIST CHANGE VIEW",19)

"BLD",10687,"KRN",101,"NM","B","RCDPE VIEW/PRINT WORKLIST EOB",29)

"BLD",10687,"KRN",101,"NM","B","RCDPE VIEW/PRINT WORKLIST ERA",7)

"BLD",10687,"KRN",101,"NM","B","RCDPE WORKLIST ERA LIST MENU",15)

"BLD",10687,"KRN",101,"NM","B","RCDPE WORKLIST ERA MARK FOR AUTO POST",22)

"BLD",10687,"KRN",101,"NM","B","RCDPE WORKLIST ERA SELECT",16)

"BLD",10687,"KRN",101,"NM","B","RCDPE WORKLIST ERA SORT",17)

"BLD",10687,"KRN",101,"NM","B","VALM QUIT",20)

"BLD",10687,"KRN",409.61,0)
409.61
"BLD",10687,"KRN",409.61,"NM",0)
^9.68A^2^2
"BLD",10687,"KRN",409.61,"NM",1,0)
RCDPE WORKLIST ERA LIST^^0
"BLD",10687,"KRN",409.61,"NM",2,0)
RCDPE PAYER FLAGS^^0
"BLD",10687,"KRN",409.61,"NM","B","RCDPE PAYER FLAGS",2)

"BLD",10687,"KRN",409.61,"NM","B","RCDPE WORKLIST ERA LIST",1)

"BLD",10687,"KRN",771,0)
771
"BLD",10687,"KRN",779.2,0)
779.2
"BLD",10687,"KRN",870,0)
870
"BLD",10687,"KRN",8989.51,0)
8989.51
"BLD",10687,"KRN",8989.51,"NM",0)
^9.68A^2^2
"BLD",10687,"KRN",8989.51,"NM",1,0)
RCDPE EDI LOCKBOX WORKLIST^^0
"BLD",10687,"KRN",8989.51,"NM",2,0)
RCDPE APAR^^0
"BLD",10687,"KRN",8989.51,"NM","B","RCDPE APAR",2)

"BLD",10687,"KRN",8989.51,"NM","B","RCDPE EDI LOCKBOX WORKLIST",1)

"BLD",10687,"KRN",8989.52,0)
8989.52
"BLD",10687,"KRN",8994,0)
8994
"BLD",10687,"KRN","B",.4,.4)

"BLD",10687,"KRN","B",.401,.401)

"BLD",10687,"KRN","B",.402,.402)

"BLD",10687,"KRN","B",.403,.403)

"BLD",10687,"KRN","B",.5,.5)

"BLD",10687,"KRN","B",.84,.84)

"BLD",10687,"KRN","B",3.6,3.6)

"BLD",10687,"KRN","B",3.8,3.8)

"BLD",10687,"KRN","B",9.2,9.2)

"BLD",10687,"KRN","B",9.8,9.8)

"BLD",10687,"KRN","B",19,19)

"BLD",10687,"KRN","B",19.1,19.1)

"BLD",10687,"KRN","B",101,101)

"BLD",10687,"KRN","B",409.61,409.61)

"BLD",10687,"KRN","B",771,771)

"BLD",10687,"KRN","B",779.2,779.2)

"BLD",10687,"KRN","B",870,870)

"BLD",10687,"KRN","B",8989.51,8989.51)

"BLD",10687,"KRN","B",8989.52,8989.52)

"BLD",10687,"KRN","B",8994,8994)

"BLD",10687,"QUES",0)
^9.62^^
"BLD",10687,"REQB",0)
^9.611^2^2
"BLD",10687,"REQB",1,0)
PRCA*4.5*321^1
"BLD",10687,"REQB",2,0)
PRCA*4.5*315^1
"BLD",10687,"REQB","B","PRCA*4.5*315",2)

"BLD",10687,"REQB","B","PRCA*4.5*321",1)

"FIA",344)
AR BATCH PAYMENT
"FIA",344,0)
^RCY(344,
"FIA",344,0,0)
344I
"FIA",344,0,1)
y^y^p^^^^n^^n
"FIA",344,0,10)

"FIA",344,0,11)

"FIA",344,0,"RLRO")

"FIA",344,0,"VR")
4.5^PRCA
"FIA",344,344)
1
"FIA",344,344,202)

"FIA",344.31)
EDI THIRD PARTY EFT DETAIL
"FIA",344.31,0)
^RCY(344.31,
"FIA",344.31,0,0)
344.31IP
"FIA",344.31,0,1)
y^y^p^^^^n^^n
"FIA",344.31,0,10)

"FIA",344.31,0,11)

"FIA",344.31,0,"RLRO")

"FIA",344.31,0,"VR")
4.5^PRCA
"FIA",344.31,344.31)
1
"FIA",344.31,344.31,.01)

"FIA",344.31,344.31,.02)

"FIA",344.31,344.31,.03)

"FIA",344.31,344.31,.14)

"FIA",344.4)
ELECTRONIC REMITTANCE ADVICE
"FIA",344.4,0)
^RCY(344.4,
"FIA",344.4,0,0)
344.4I
"FIA",344.4,0,1)
y^n^p^^^^n^^n
"FIA",344.4,0,10)

"FIA",344.4,0,11)

"FIA",344.4,0,"RLRO")

"FIA",344.4,0,"VR")
4.5^PRCA
"FIA",344.4,344.4)
1
"FIA",344.4,344.4,.03)

"FIA",344.4,344.4,.06)

"FIA",344.4,344.4,.19)

"FIA",344.4,344.4,4.04)

"FIA",344.4,344.4,5.03)

"FIA",344.4,344.4,5.04)

"FIA",344.4,344.41)
1
"FIA",344.4,344.41,6.01)

"FIA",344.6)
RCDPE AUTO-PAY EXCLUSION
"FIA",344.6,0)
^RCY(344.6,
"FIA",344.6,0,0)
344.6I
"FIA",344.6,0,1)
y^n^p^^^^n^^n
"FIA",344.6,0,10)

"FIA",344.6,0,11)

"FIA",344.6,0,"RLRO")

"FIA",344.6,0,"VR")
4.5^PRCA
"FIA",344.6,344.6)
1
"FIA",344.6,344.6,.09)

"FIA",344.6,344.6,.1)

"FIA",344.6,344.6,.11)

"FIA",344.61)
RCDPE PARAMETER
"FIA",344.61,0)
^RCY(344.61,
"FIA",344.61,0,0)
344.61P
"FIA",344.61,0,1)
y^y^p^^^^n^^n
"FIA",344.61,0,10)

"FIA",344.61,0,11)

"FIA",344.61,0,"RLRO")

"FIA",344.61,0,"VR")
4.5^PRCA
"FIA",344.61,344.61)
1
"FIA",344.61,344.61,.03)

"FIA",344.61,344.61,.04)

"FIA",344.61,344.61,.05)

"FIA",344.61,344.61,.11)

"FIA",344.61,344.61,.12)

"FIA",344.62)
RCDPE CARC-RARC AUTO DEC
"FIA",344.62,0)
^RCY(344.62,
"FIA",344.62,0,0)
344.62
"FIA",344.62,0,1)
y^y^p^^^^n^^n
"FIA",344.62,0,10)

"FIA",344.62,0,11)

"FIA",344.62,0,"RLRO")

"FIA",344.62,0,"VR")
4.5^PRCA
"FIA",344.62,344.62)
1
"FIA",344.62,344.62,.02)

"FIA",344.62,344.62,.08)

"FIA",344.62,344.62,.09)

"FIA",344.62,344.62,.1)

"FIA",344.62,344.62,.11)

"FIA",344.62,344.62,.12)

"FIA",344.62,344.62,.13)

"FIA",344.71)
RCDPE SUSPENSE AUDIT
"FIA",344.71,0)
^RCY(344.71,
"FIA",344.71,0,0)
344.71D
"FIA",344.71,0,1)
y^y^p^^^^n^^n
"FIA",344.71,0,10)

"FIA",344.71,0,11)

"FIA",344.71,0,"RLRO")

"FIA",344.71,0,"VR")
4.5^PRCA
"FIA",344.71,344.71)
1
"FIA",344.71,344.71,1)

"FIA",344.71,344.711)
1
"FIA",344.71,344.711,.01)

"FIA",344.71,344.711,.02)

"FIA",344.71,344.711,.03)

"FIA",344.71,344.711,.04)

"INIT")
POST^RCP326
"IX",344.31,344.31,"APT",0)
344.31^APT^index by payer name and payer TIN.^R^^R^IR^I^344.31^^^^^S
"IX",344.31,344.31,"APT",.1,0)
^^2^2^3171117^
"IX",344.31,344.31,"APT",.1,1,0)
Index by payer name and payer ID. To be used when sorting reports by payer
"IX",344.31,344.31,"APT",.1,2,0)
name first then payer ID.
"IX",344.31,344.31,"APT",1)
S ^RCY(344.31,"APT",$E(X(1),1,60),$E(X(2),1,30),DA)=""
"IX",344.31,344.31,"APT",2)
K ^RCY(344.31,"APT",$E(X(1),1,60),$E(X(2),1,30),DA)
"IX",344.31,344.31,"APT",2.5)
K ^RCY(344.31,"APT")
"IX",344.31,344.31,"APT",11.1,0)
^.114IA^2^2
"IX",344.31,344.31,"APT",11.1,1,0)
1^F^344.31^.02^60^1^F
"IX",344.31,344.31,"APT",11.1,1,3)

"IX",344.31,344.31,"APT",11.1,2,0)
2^F^344.31^.03^30^2^F
"IX",344.31,344.31,"APT",11.1,2,3)

"IX",344.31,344.31,"ATP",0)
344.31^ATP^Index by payer TIN and payer name.^R^^R^IR^I^344.31^^^^^S
"IX",344.31,344.31,"ATP",.1,0)
^^2^2^3171117^
"IX",344.31,344.31,"ATP",.1,1,0)
Index by payer ID and payer name. To be used when sorting reports by payer
"IX",344.31,344.31,"ATP",.1,2,0)
ID first then payer name.
"IX",344.31,344.31,"ATP",1)
S ^RCY(344.31,"ATP",$E(X(1),1,30),$E(X(2),1,60),DA)=""
"IX",344.31,344.31,"ATP",2)
K ^RCY(344.31,"ATP",$E(X(1),1,30),$E(X(2),1,60),DA)
"IX",344.31,344.31,"ATP",2.5)
K ^RCY(344.31,"ATP")
"IX",344.31,344.31,"ATP",11.1,0)
^.114IA^2^2
"IX",344.31,344.31,"ATP",11.1,1,0)
1^F^344.31^.03^30^1^F
"IX",344.31,344.31,"ATP",11.1,1,3)

"IX",344.31,344.31,"ATP",11.1,2,0)
2^F^344.31^.02^60^2^F
"IX",344.31,344.31,"ATP",11.1,2,3)

"IX",344.31,344.31,"C",0)
344.31^C^Used to look up entries by the full payer name.^R^^F^IR^I^344.31^^^^^LS
"IX",344.31,344.31,"C",.1,0)
^^1^1^3170316^
"IX",344.31,344.31,"C",.1,1,0)
This cross-reference is used for payer names of up to 60 characters.
"IX",344.31,344.31,"C",1)
S ^RCY(344.31,"C",$E(X,1,60),DA)=""
"IX",344.31,344.31,"C",2)
K ^RCY(344.31,"C",$E(X,1,60),DA)
"IX",344.31,344.31,"C",2.5)
K ^RCY(344.31,"C")
"IX",344.31,344.31,"C",11.1,0)
^.114IA^1^1
"IX",344.31,344.31,"C",11.1,1,0)
1^F^344.31^.02^60^1^F
"IX",344.31,344.31,"D",0)
344.31^D^Cross ref. EFT detail record identifier^R^^F^IR^I^344.31^^^^^LS
"IX",344.31,344.31,"D",.1,0)
^^2^2^3171212^
"IX",344.31,344.31,"D",.1,1,0)
This cross-reference is used to lookup an EFT DETAIL line using the EFT
"IX",344.31,344.31,"D",.1,2,0)
number and Transaction # fields combined in the format nnnn.nnn.
"IX",344.31,344.31,"D",1)
S ^RCY(344.31,"D",X,DA)=""
"IX",344.31,344.31,"D",2)
K ^RCY(344.31,"D",X,DA)
"IX",344.31,344.31,"D",2.5)
K ^RCY(344.31,"D")
"IX",344.31,344.31,"D",11.1,0)
^.114IA^1^1
"IX",344.31,344.31,"D",11.1,1,0)
1^F^344.31^.14^^1^F
"IX",344.31,344.31,"D",11.1,1,2)
S X=$P(^RCY(344.31,DA,0),U)_"."_X_" "
"IX",344.31,344.31,"D",11.1,1,3)

"IX",344.4,344.4,"APT",0)
344.4^APT^Index by payer name and TIN^R^^R^IR^I^344.4^^^^^S
"IX",344.4,344.4,"APT",.1,0)
^^2^2^3171117^
"IX",344.4,344.4,"APT",.1,1,0)
Index by payer name and payer ID. To be used when sorting reports by payer
"IX",344.4,344.4,"APT",.1,2,0)
name first then payer ID.
"IX",344.4,344.4,"APT",1)
S ^RCY(344.4,"APT",$E(X(1),1,60),$E(X(2),1,30),DA)=""
"IX",344.4,344.4,"APT",2)
K ^RCY(344.4,"APT",$E(X(1),1,60),$E(X(2),1,30),DA)
"IX",344.4,344.4,"APT",2.5)
K ^RCY(344.4,"APT")
"IX",344.4,344.4,"APT",11.1,0)
^.114IA^2^2
"IX",344.4,344.4,"APT",11.1,1,0)
1^F^344.4^.06^60^1^F
"IX",344.4,344.4,"APT",11.1,1,3)

"IX",344.4,344.4,"APT",11.1,2,0)
2^F^344.4^.03^30^2^F
"IX",344.4,344.4,"APT",11.1,2,3)

"IX",344.4,344.4,"ATP",0)
344.4^ATP^Index by payer TIN and payer name.^R^^R^IR^I^344.4^^^^^S
"IX",344.4,344.4,"ATP",.1,0)
^^2^2^3171117^
"IX",344.4,344.4,"ATP",.1,1,0)
Index by payer ID and payer name. To be used when sorting reports by payer
"IX",344.4,344.4,"ATP",.1,2,0)
ID first then payer name.
"IX",344.4,344.4,"ATP",1)
S ^RCY(344.4,"ATP",$E(X(1),1,30),$E(X(2),1,60),DA)=""
"IX",344.4,344.4,"ATP",2)
K ^RCY(344.4,"ATP",$E(X(1),1,30),$E(X(2),1,60),DA)
"IX",344.4,344.4,"ATP",2.5)
K ^RCY(344.4,"ATP")
"IX",344.4,344.4,"ATP",11.1,0)
^.114IA^2^2
"IX",344.4,344.4,"ATP",11.1,1,0)
1^F^344.4^.03^30^1^F
"IX",344.4,344.4,"ATP",11.1,1,3)

"IX",344.4,344.4,"ATP",11.1,2,0)
2^F^344.4^.06^60^2^F
"IX",344.4,344.4,"ATP",11.1,2,3)

"IX",344.4,344.4,"ATRID",0)
344.4^ATRID^Xref by bank trace # and ins co id #^MU^^R^IR^I^344.4^^^^^S
"IX",344.4,344.4,"ATRID",1)
S ^RCY(344.4,"ATRID",$E(X(1),1,50),$E(X(2),1,30),DA)=""
"IX",344.4,344.4,"ATRID",2)
K ^RCY(344.4,"ATRID",$E(X(1),1,50),$E(X(2),1,30),DA)
"IX",344.4,344.4,"ATRID",2.5)
K ^RCY(344.4,"ATRID")
"IX",344.4,344.4,"ATRID",11.1,0)
^.114IA^2^2
"IX",344.4,344.4,"ATRID",11.1,1,0)
1^F^344.4^.02^30^1^F
"IX",344.4,344.4,"ATRID",11.1,2,0)
2^F^344.4^.03^30^2^F
"IX",344.4,344.4,"ATRIDUP",0)
344.4^ATRIDUP^Case-insensitive lookup for Trace # and Insurance Co.^MU^^R^IR^I^344.4^^^^^S
"IX",344.4,344.4,"ATRIDUP",.1,0)
^^5^5^3141001^
"IX",344.4,344.4,"ATRIDUP",.1,1,0)
This cross-reference is used for claim matching without regard to case.  
"IX",344.4,344.4,"ATRIDUP",.1,2,0)
The trace number and insurance company are converted to uppercase and the 
"IX",344.4,344.4,"ATRIDUP",.1,3,0)
software uses this for matching claims by the trace number.  The values 
"IX",344.4,344.4,"ATRIDUP",.1,4,0)
in the TRACE NUMBER (#.02) and INSURANCE CO ID (#.03) fields remain 
"IX",344.4,344.4,"ATRIDUP",.1,5,0)
unchanged.
"IX",344.4,344.4,"ATRIDUP",1)
S ^RCY(344.4,"ATRIDUP",$$UP^XLFSTR($E(X(1),1,50)),$$UP^XLFSTR($E(X(2),1,30)),DA)=""
"IX",344.4,344.4,"ATRIDUP",2)
K ^RCY(344.4,"ATRIDUP",$$UP^XLFSTR($E(X(1),1,50)),$$UP^XLFSTR($E(X(2),1,30)),DA)
"IX",344.4,344.4,"ATRIDUP",2.5)
K ^RCY(344.4,"ATRIDUP")
"IX",344.4,344.4,"ATRIDUP",11.1,0)
^.114IA^2^2
"IX",344.4,344.4,"ATRIDUP",11.1,1,0)
1^F^344.4^.02^50^1^F
"IX",344.4,344.4,"ATRIDUP",11.1,2,0)
2^F^344.4^.03^30^2^F
"IX",344.4,344.4,"C",0)
344.4^C^Used to look up entries by the full payer name.^MU^^F^IR^I^344.4^^^^^LS
"IX",344.4,344.4,"C",.1,0)
^^3^3^3170310^
"IX",344.4,344.4,"C",.1,1,0)
This cross-reference is used for payer names of up to 60 characters. 
"IX",344.4,344.4,"C",.1,2,0)
 
"IX",344.4,344.4,"C",.1,3,0)
Do not delete this cross-reference.
"IX",344.4,344.4,"C",1)
S ^RCY(344.4,"C",$$UP^XLFSTR($E(X,1,60)),DA)=""
"IX",344.4,344.4,"C",2)
K ^RCY(344.4,"C",$$UP^XLFSTR($E(X,1,60)),DA)
"IX",344.4,344.4,"C",2.5)
K ^RCY(344.4,"C")
"IX",344.4,344.4,"C",11.1,0)
^.114IA^1^1
"IX",344.4,344.4,"C",11.1,1,0)
1^F^344.4^.06^60^1^F
"KRN",19,2919476,-1)
0^3
"KRN",19,2919476,0)
RCDPE ERA POSTED BY PAPER EOB^Update ERA Posted Using Paper EOB^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2919476,1,0)
^19.06^4^4^3030828^^^^
"KRN",19,2919476,1,1,0)
This option is used to mark an ERA as posted when the paper EOB containing
"KRN",19,2919476,1,2,0)
this ERA data was posted to your A/R and FMS and no reference to the ERA
"KRN",19,2919476,1,3,0)
was included.  This will mark the ERA as posted.  It will require you to
"KRN",19,2919476,1,4,0)
enter the receipt # that was used to post the ERA information.
"KRN",19,2919476,25)
POSTED^RCDPEM21
"KRN",19,2919476,"U")
UPDATE ERA POSTED USING PAPER 
"KRN",19,2922181,-1)
0^1
"KRN",19,2922181,0)
RCDPE AUTO-POST REPORT^Auto-Post Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2922181,1,0)
^^3^3^3171129^
"KRN",19,2922181,1,1,0)
This report lists ERAs that have been auto-posted by the nightly process.
"KRN",19,2922181,1,2,0)
The report can be filtered by Station/Division, payer type, payer name or 
"KRN",19,2922181,1,3,0)
TIN and by date range.
"KRN",19,2922181,25)
RPT^RCDPEAPP
"KRN",19,2922181,"U")
AUTO-POST REPORT
"KRN",19,2922186,-1)
0^2
"KRN",19,2922186,0)
RCDPE PAYER EXCLUSION NAME TIN^Payer Implementation Report^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2922186,1,0)
^19.06^2^2^3171205^^^
"KRN",19,2922186,1,1,0)
Launches a report to show the payers, with columns for payer name, payer 
"KRN",19,2922186,1,2,0)
TIN, and the date on which the payer was added to the database.
"KRN",19,2922186,25)
RPT^RCDPESP3
"KRN",19,2922186,"U")
PAYER IMPLEMENTATION REPORT
"KRN",101,1697,-1)
4^20
"KRN",101,1697,0)
VALM QUIT
"KRN",101,6663,-1)
0^3
"KRN",101,6663,0)
RCDPE EOB WORKLIST MENU^EOB WORKLIST MENU^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6663,1,0)
^101.06^2^2^3170328^^^^
"KRN",101,6663,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,6663,1,2,0)
manually on ERAs received.
"KRN",101,6663,4)
26^4
"KRN",101,6663,10,0)
^101.01PA^32^32
"KRN",101,6663,10,6,0)
6672^^100^
"KRN",101,6663,10,6,"^")
RCDPE EOB WORKLIST SPLIT LINE
"KRN",101,6663,10,7,0)
6673^^110^
"KRN",101,6663,10,7,"^")
RCDPE EOB WORKLIST DIST ADJ
"KRN",101,6663,10,17,0)
6761^^230^
"KRN",101,6663,10,17,"^")
RCDPE EOB WORKLIST VERIFY
"KRN",101,6663,10,23,0)
8398^AD^999^^^
"KRN",101,6663,10,23,"^")
RCDPE EOB AUTO-DECREASE
"KRN",101,6663,10,24,0)
6675^ERA^310^
"KRN",101,6663,10,24,"^")
RCDPE VIEW/PRINT WORKLIST ERA
"KRN",101,6663,10,25,0)
6691^^210^
"KRN",101,6663,10,25,"^")
RCDPE EOB WL REVIEW
"KRN",101,6663,10,27,0)
7960^^240^
"KRN",101,6663,10,27,"^")
RCDPE EOB WORKLIST CHANGE VIEW
"KRN",101,6663,10,28,0)
6682^^200^
"KRN",101,6663,10,28,"^")
RCDPE EOB WL RECEIPT VIEW
"KRN",101,6663,10,29,0)
8019^^300^
"KRN",101,6663,10,29,"^")
RCDPE EOB WORKLIST MARK FOR AUTO POST
"KRN",101,6663,10,30,0)
6674^^120^
"KRN",101,6663,10,30,"^")
RCDPE EOB WORKLIST REFRESH
"KRN",101,6663,10,31,0)
8009^RP^320^
"KRN",101,6663,10,31,"^")
RCDPE EOB WORKLIST RECEIPT PROCESSING
"KRN",101,6663,10,32,0)
6678^^130^
"KRN",101,6663,10,32,"^")
RCDPE EOB WORKLIST RESEARCH
"KRN",101,6663,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,6663,26)
D SHOW^VALM
"KRN",101,6663,28)
Select Action: 
"KRN",101,6663,99)
64729,55918
"KRN",101,6664,-1)
0^24
"KRN",101,6664,0)
RCDPE EOB WORKLIST RESEARCH MENU^Research Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6664,1,0)
^101.06^2^2^3170327^^^^
"KRN",101,6664,1,1,0)
This is the main menu that contains the actions that can be performed to 
"KRN",101,6664,1,2,0)
research a payment/denial for a claim when reviewing an EOB.
"KRN",101,6664,2,0)
^101.02A^^0
"KRN",101,6664,4)
26^4
"KRN",101,6664,10,0)
^101.01PA^12^12
"KRN",101,6664,10,4,0)
6691^^300^
"KRN",101,6664,10,4,"^")
RCDPE EOB WL REVIEW
"KRN",101,6664,10,5,0)
6688^^200^
"KRN",101,6664,10,5,"^")
RCDPE EOB WORKLIST BILL COMMENT
"KRN",101,6664,10,7,0)
6669^^100^
"KRN",101,6664,10,7,"^")
RCDPE EOB WORKLIST FULL ACCT PROF
"KRN",101,6664,10,8,0)
6677^^310^
"KRN",101,6664,10,8,"^")
RCDPE EOB WL RESEARCH EXIT
"KRN",101,6664,10,9,0)
6666^^130^
"KRN",101,6664,10,9,"^")
RCDPE EOB WORKLIST TPJI
"KRN",101,6664,10,11,0)
6665^^115^
"KRN",101,6664,10,11,"^")
RCDPE VIEW/PRINT WORKLIST EOB
"KRN",101,6664,10,12,0)
6687^^210^
"KRN",101,6664,10,12,"^")
RCDPE EOB WORKLIST REESTABLISH
"KRN",101,6664,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,6664,26)
D SHOW^VALM
"KRN",101,6664,28)
Select Action: 
"KRN",101,6664,99)
64729,55918
"KRN",101,6665,-1)
4^29
"KRN",101,6665,0)
RCDPE VIEW/PRINT WORKLIST EOB
"KRN",101,6666,-1)
4^28
"KRN",101,6666,0)
RCDPE EOB WORKLIST TPJI
"KRN",101,6669,-1)
4^26
"KRN",101,6669,0)
RCDPE EOB WORKLIST FULL ACCT PROF
"KRN",101,6672,-1)
0^4
"KRN",101,6672,0)
RCDPE EOB WORKLIST SPLIT LINE^Split/Edit A Line^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6672,1,0)
^101.06^3^3^3030218^^^^
"KRN",101,6672,1,1,0)
This option allows the user to split the payment and adjustment amounts of
"KRN",101,6672,1,2,0)
a selected line in the ERA to redistribute the funds to more accurately
"KRN",101,6672,1,3,0)
reflect the disposition of the payment/adjustment.
"KRN",101,6672,4)
^^^TB
"KRN",101,6672,20)
D SPLIT^RCDPEWL0
"KRN",101,6672,99)
64729,55918
"KRN",101,6673,-1)
0^5
"KRN",101,6673,0)
RCDPE EOB WORKLIST DIST ADJ^Distribute Adj Amts^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6673,1,0)
^101.06^4^4^3170328^^^^
"KRN",101,6673,1,1,0)
This option allows the user to select an adjustment line that has a
"KRN",101,6673,1,2,0)
negative net payment to allow this amount to be distributed to other
"KRN",101,6673,1,3,0)
lines so the total amount of payments received to post equals the total
"KRN",101,6673,1,4,0)
amount of the deposit.
"KRN",101,6673,4)
^^^TB
"KRN",101,6673,20)
D DISTADJ^RCDPEWL6
"KRN",101,6673,99)
64729,55918
"KRN",101,6674,-1)
0^12
"KRN",101,6674,0)
RCDPE EOB WORKLIST REFRESH^Refresh Scratch Pad^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6674,1,0)
^101.06^3^3^3170328^^^^
"KRN",101,6674,1,1,0)
This option allows the user to 'refresh' the worklist scratch pad entry
"KRN",101,6674,1,2,0)
to remove all previously entered edits/splits/adjustments and restore it
"KRN",101,6674,1,3,0)
to the state it was in before any manual changes were made.
"KRN",101,6674,4)
^^^TB
"KRN",101,6674,20)
D REFRESH^RCDPEWL6
"KRN",101,6674,99)
64729,55918
"KRN",101,6675,-1)
0^7
"KRN",101,6675,0)
RCDPE VIEW/PRINT WORKLIST ERA^View/Print ERA^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6675,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,6675,1,1,0)
This option allows the user to view the summary or summary and detail
"KRN",101,6675,1,2,0)
information for an electronic remittance advice (ERA).
"KRN",101,6675,20)
D PRERA^RCDPEWL0
"KRN",101,6675,99)
64729,55918
"KRN",101,6677,-1)
4^27
"KRN",101,6677,0)
RCDPE EOB WL RESEARCH EXIT
"KRN",101,6678,-1)
0^14
"KRN",101,6678,0)
RCDPE EOB WORKLIST RESEARCH^Research Menu^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6678,1,0)
^101.06^2^2^3030219^^^^
"KRN",101,6678,1,1,0)
This option allows the user access to the IB options for cancel, edit, add
"KRN",101,6678,1,2,0)
patient charges from within the EDI Lockbox worklist function.
"KRN",101,6678,4)
^^^
"KRN",101,6678,20)
D RESEARCH^RCDPEWL2
"KRN",101,6678,99)
64729,55918
"KRN",101,6682,-1)
0^10
"KRN",101,6682,0)
RCDPE EOB WL RECEIPT VIEW^Look At Receipt^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6682,20)
D VRECPT^RCDPEWL4
"KRN",101,6682,99)
64729,55918
"KRN",101,6687,-1)
4^30
"KRN",101,6687,0)
RCDPE EOB WORKLIST REESTABLISH
"KRN",101,6688,-1)
4^25
"KRN",101,6688,0)
RCDPE EOB WORKLIST BILL COMMENT
"KRN",101,6691,-1)
0^8
"KRN",101,6691,0)
RCDPE EOB WL REVIEW^Review Line^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6691,20)
D REVIEW^RCDPEWL5
"KRN",101,6691,99)
64729,55918
"KRN",101,6755,-1)
0^15
"KRN",101,6755,0)
RCDPE WORKLIST ERA LIST MENU^ERA WORKLIST PICK LIST^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6755,1,0)
^101.06^2^2^3170307^^^^
"KRN",101,6755,1,1,0)
This is the main menu that contains the actions that can be performed
"KRN",101,6755,1,2,0)
manually on ERAs received.
"KRN",101,6755,4)
26^4
"KRN",101,6755,10,0)
^101.01PA^8^8
"KRN",101,6755,10,1,0)
6756^^50^
"KRN",101,6755,10,1,"^")
RCDPE WORKLIST ERA SELECT
"KRN",101,6755,10,2,0)
6757^^100^
"KRN",101,6755,10,2,"^")
RCDPE WORKLIST ERA SORT
"KRN",101,6755,10,3,0)
6758^^150^
"KRN",101,6755,10,3,"^")
RCDPE ERA LIST VIEW ERA
"KRN",101,6755,10,4,0)
7958^^200^
"KRN",101,6755,10,4,"^")
RCDPE ERA WORKLIST CHANGE VIEW
"KRN",101,6755,10,5,0)
1697^^999^^^EXIT
"KRN",101,6755,10,5,"^")
VALM QUIT
"KRN",101,6755,10,6,0)
8008^^300^
"KRN",101,6755,10,6,"^")
RCDPE EFT ERA MANUAL MATCH
"KRN",101,6755,10,7,0)
8018^^125^
"KRN",101,6755,10,7,"^")
RCDPE WORKLIST ERA MARK FOR AUTO POST
"KRN",101,6755,10,8,0)
7602^^350^
"KRN",101,6755,10,8,"^")
RCDPE EOB WORKLIST ADMIN COST ADJ
"KRN",101,6755,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,6755,26)
D SHOW^VALM
"KRN",101,6755,28)
Select Action: 
"KRN",101,6755,99)
64729,55918
"KRN",101,6756,-1)
4^16
"KRN",101,6756,0)
RCDPE WORKLIST ERA SELECT
"KRN",101,6757,-1)
4^17
"KRN",101,6757,0)
RCDPE WORKLIST ERA SORT
"KRN",101,6758,-1)
4^18
"KRN",101,6758,0)
RCDPE ERA LIST VIEW ERA
"KRN",101,6761,-1)
0^6
"KRN",101,6761,0)
RCDPE EOB WORKLIST VERIFY^Verify^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,6761,1,0)
^101.06^3^3^3170328^^^^
"KRN",101,6761,1,1,0)
This option allows the user to access the options for verifying the
"KRN",101,6761,1,2,0)
EEOBs against the data on the VistA system to insure the payments are
"KRN",101,6761,1,3,0)
being made for the correct claim.
"KRN",101,6761,20)
D VERIF^RCDPEWL8
"KRN",101,6761,99)
64729,55918
"KRN",101,7602,-1)
4^23
"KRN",101,7602,0)
RCDPE EOB WORKLIST ADMIN COST ADJ
"KRN",101,7958,-1)
4^19
"KRN",101,7958,0)
RCDPE ERA WORKLIST CHANGE VIEW
"KRN",101,7960,-1)
0^9
"KRN",101,7960,0)
RCDPE EOB WORKLIST CHANGE VIEW^Change View^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,7960,20)
D CV^RCDPEWL
"KRN",101,7960,99)
64729,55918
"KRN",101,8008,-1)
4^21
"KRN",101,8008,0)
RCDPE EFT ERA MANUAL MATCH
"KRN",101,8009,-1)
0^13
"KRN",101,8009,0)
RCDPE EOB WORKLIST RECEIPT PROCESSING^Receipt Processing^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,8009,1,0)
^101.06^1^1^3170328^^^
"KRN",101,8009,1,1,0)
This option will jump to the receipt profile listmanager
"KRN",101,8009,20)
D RECPROC^RCDPEWL4
"KRN",101,8009,99)
64729,55918
"KRN",101,8018,-1)
4^22
"KRN",101,8018,0)
RCDPE WORKLIST ERA MARK FOR AUTO POST
"KRN",101,8019,-1)
0^11
"KRN",101,8019,0)
RCDPE EOB WORKLIST MARK FOR AUTO POST^Mark for Auto Post^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,8019,1,0)
^101.06^3^3^3170328^^^^
"KRN",101,8019,1,1,0)
This option allows the user to mark an ERA for auto-posting.  If the ERA
"KRN",101,8019,1,2,0)
passes validation, the ERA will be marked as an auto-post candidate to get
"KRN",101,8019,1,3,0)
posted by the Nightly Background Job.
"KRN",101,8019,20)
D AUTOPOST^RCDPEWL8(2)
"KRN",101,8019,99)
64729,55918
"KRN",101,8398,-1)
0^2
"KRN",101,8398,0)
RCDPE EOB AUTO-DECREASE^Auto Decr. Stop/Allow^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,8398,1,0)
^^2^2^3180214^
"KRN",101,8398,1,1,0)
This option allows the user to stop or allow auto-decreasing of CARC
"KRN",101,8398,1,2,0)
adjustments on a zero balance no-pay ERA.
"KRN",101,8398,2,0)
^101.02A^2^2
"KRN",101,8398,2,1,0)
AD
"KRN",101,8398,2,2,0)
AD
"KRN",101,8398,2,"B","AD",1)

"KRN",101,8398,2,"B","AD",2)

"KRN",101,8398,4)
^^^
"KRN",101,8398,20)
D BLOCK^RCDPEWLZ(RCSCR)
"KRN",101,8398,99)
64729,55918
"KRN",409.61,554,-1)
0^1
"KRN",409.61,554,0)
RCDPE WORKLIST ERA LIST^1^^80^7^19^1^1^#^RCDPE WORKLIST ERA LIST MENU^ERA List - Worklist^1^^1
"KRN",409.61,554,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,554,"ARRAY")
 ^TMP("RCDPE-ERA_WL",$J)
"KRN",409.61,554,"COL",0)
^409.621^7^4
"KRN",409.61,554,"COL",3,0)
DATE_PAID^45^11^ERA PAID DT
"KRN",409.61,554,"COL",4,0)
TOT_PAID^58^12^TOT AMT PAID
"KRN",409.61,554,"COL",6,0)
DATE_RECEIVED^73^8^DT REC'D
"KRN",409.61,554,"COL",7,0)
PAYER_LN^9^36^PAYER NAME/MATCH STATUS & DATE
"KRN",409.61,554,"COL","B","DATE_PAID",3)

"KRN",409.61,554,"COL","B","DATE_RECEIVED",6)

"KRN",409.61,554,"COL","B","PAYER_LN",7)

"KRN",409.61,554,"COL","B","TOT_PAID",4)

"KRN",409.61,554,"FNL")
D FNL^RCDPEWL7
"KRN",409.61,554,"HDR")
D HDR^RCDPEWL7
"KRN",409.61,554,"HLP")
D HELP^RCDPEWL7
"KRN",409.61,554,"INIT")
D INIT^RCDPEWL7
"KRN",409.61,795,-1)
0^2
"KRN",409.61,795,0)
RCDPE PAYER FLAGS^1^^101^4^19^1^1^^RCDPE PAYER FLAGS MENU^Payer Pharmacy/Tricare^1^^1
"KRN",409.61,795,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,795,"ARRAY")
 ^TMP("RCDPEP",$J)
"KRN",409.61,795,"COL",0)
^409.621^7^7
"KRN",409.61,795,"COL",1,0)
LINE^1^4^ #
"KRN",409.61,795,"COL",2,0)
PAYER^6^55^PAYER^^1
"KRN",409.61,795,"COL",3,0)
PHARMACY FLAG^75^2^Rx
"KRN",409.61,795,"COL",4,0)
TRICARE FLAG^79^2^TR
"KRN",409.61,795,"COL",5,0)
ID^63^10^TIN
"KRN",409.61,795,"COL",6,0)
DATE ADDED^82^12^DATE ADDED
"KRN",409.61,795,"COL",7,0)
EFT ONLY^93^8^EFT ONLY
"KRN",409.61,795,"COL","AIDENT",1,2)

"KRN",409.61,795,"COL","B","DATE ADDED",6)

"KRN",409.61,795,"COL","B","EFT ONLY",7)

"KRN",409.61,795,"COL","B","ID",5)

"KRN",409.61,795,"COL","B","LINE",1)

"KRN",409.61,795,"COL","B","PAYER",2)

"KRN",409.61,795,"COL","B","PHARMACY FLAG",3)

"KRN",409.61,795,"COL","B","TRICARE FLAG",4)

"KRN",409.61,795,"FNL")
D EXIT^RCDPEP
"KRN",409.61,795,"HDR")
D HDR^RCDPEP
"KRN",409.61,795,"HLP")
D HELP^RCDPEP
"KRN",409.61,795,"INIT")
D INIT^RCDPEP
"KRN",8989.51,941,-1)
0^2
"KRN",8989.51,941,0)
RCDPE APAR^Display unposted EEOBs by user pref^1
"KRN",8989.51,941,1)
F
"KRN",8989.51,941,6)
F
"KRN",8989.51,941,20,0)
^^21^21^3180214^
"KRN",8989.51,941,20,1,0)
The AUTO-POST - AWAITING RESOLUTION screen that is generated when
"KRN",8989.51,941,20,2,0)
executing the RCDPE AUTO-POST AWAITING RESOLUTION option provides the
"KRN",8989.51,941,20,3,0)
capability to filter the data displayed via the Change View action. The
"KRN",8989.51,941,20,4,0)
Change View action saves the filter preferences by user.
"KRN",8989.51,941,20,5,0)
 
"KRN",8989.51,941,20,6,0)
Parameter Instance              Possible Value
"KRN",8989.51,941,20,7,0)
  
"KRN",8989.51,941,20,8,0)
--------------------------------------------------------------------------
"KRN",8989.51,941,20,9,0)
ALL_PAYERS/RANGE_OF_PAYERS      3 fields:A/R;StartWith;GoTo 
"KRN",8989.51,941,20,10,0)
                                     (e.g.,'R;AE;AEZ') 
"KRN",8989.51,941,20,11,0)
Note: The second and third fields of ALL_PAYERS/RANGE_OF_PAYERS are only
"KRN",8989.51,941,20,12,0)
       present When the first field is set to 'R' (Range of Payers)
"KRN",8989.51,941,20,13,0)
 
"KRN",8989.51,941,20,14,0)
MEDICAL/PHARMACY                1 field: M/P/T/A
"KRN",8989.51,941,20,15,0)
Note: M/P/T/A (M)edical (P)harmacy (T)ricare or (A)ll
"KRN",8989.51,941,20,16,0)
 
"KRN",8989.51,941,20,17,0)
SORT                            2 fields:N/P/R/U;1/0
"KRN",8989.51,941,20,18,0)
Note: 1st field D=Date/Time ERA Filed, N=Payer Name, P=Amount Posted
"KRN",8989.51,941,20,19,0)
                R=Auto Post Reject Reason, R=Unposted Amount
"KRN",8989.51,941,20,20,0)
      2nd field H=Highest to Lowest, L=Lowest to Highest
"KRN",8989.51,941,20,21,0)
                Null if first field is N or P
"KRN",8989.51,941,30,0)
^8989.513I^1^1
"KRN",8989.51,941,30,1,0)
1^200
"KRN",8989.51,942,-1)
0^1
"KRN",8989.51,942,0)
RCDPE EDI LOCKBOX WORKLIST^ERA Worklist Change View Parameters^1
"KRN",8989.51,942,1)
F
"KRN",8989.51,942,6)
F
"KRN",8989.51,942,20,0)
^^20^20^3171204^
"KRN",8989.51,942,20,1,0)
The ERA List - Worklist screen within the ERA Worklist option [RCDPE EDI LOCKBOX
"KRN",8989.51,942,20,2,0)
WORKLIST]  provides the capability to filter the data displayed via the Change
"KRN",8989.51,942,20,3,0)
View action. The Change View action allows users to change and save their
"KRN",8989.51,942,20,4,0)
individual filter preferences.
"KRN",8989.51,942,20,5,0)
  
"KRN",8989.51,942,20,6,0)
Below is a list of the parameter/value pairs (instances) for the Change View 
"KRN",8989.51,942,20,7,0)
action, which are stored using this Parameter Definition.
"KRN",8989.51,942,20,8,0)
 
"KRN",8989.51,942,20,9,0)
 Parameter Instance               Possible Value
"KRN",8989.51,942,20,10,0)
 ------------------------------------------------------------------------------
"KRN",8989.51,942,20,11,0)
 ERA_POSTING_STATUS               'U':Unposted;'P':Posted;'B':Both
"KRN",8989.51,942,20,12,0)
 ERA-EFT_MATCH_STATUS             'N':Not Matched;'M':Matched;'B':Both
"KRN",8989.51,942,20,13,0)
 ALL_PAYERS/RANGE_OF_PAYERS       3 fields:A/R;StartWith;GoTo (e.g.,'R;AE;AEZ')
"KRN",8989.51,942,20,14,0)
 ERA_AUTO_POSTING                 'A':Auto-Posting;'N':Non Auto-Posting;'B':Both
"KRN",8989.51,942,20,15,0)
 ERA_CLAIM_TYPE                   'M':Medical;'P':Pharmacy;T:Tricare'A':All
"KRN",8989.51,942,20,16,0)
 ERA_PAYMENT_TYPE                 'Z':Zero;'P':Payment;'B':Both
"KRN",8989.51,942,20,17,0)
 AUTO-POST_STATUS                 'M':Marked;'P':Partial;'C':Complete;'A':All
"KRN",8989.51,942,20,18,0)
 
"KRN",8989.51,942,20,19,0)
Note: The second and third fields of ALL_PAYERS/RANGE_OF_PAYERS are only
"KRN",8989.51,942,20,20,0)
      present When the first field is set to 'R' (Range of Payers)
"KRN",8989.51,942,30,0)
^8989.513I^1^1
"KRN",8989.51,942,30,1,0)
1^200
"MBREQ")
1
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",561,-1)
1^1
"PKG",561,0)
ACCOUNTS RECEIVABLE^PRCA^FMS
"PKG",561,20,0)
^9.402P^1^1
"PKG",561,20,1,0)
2^^PRCAMRG
"PKG",561,20,1,1)

"PKG",561,20,"B",2,1)

"PKG",561,22,0)
^9.49I^1^1
"PKG",561,22,1,0)
4.5^2950320^2950331
"PKG",561,22,1,"PAH",1,0)
326^3181018^520824650
"PKG",561,22,1,"PAH",1,1,0)
^^1^1^3181018
"PKG",561,22,1,"PAH",1,1,1,0)
Patch for builds 4 and 5 of ePayments MCCF project.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
77
"RTN","PRCABJ2")
0^74^B15862562
"RTN","PRCABJ2",1,0)
PRCABJ2 ;ALB/SAB - NIGHTLY PROCESS FOR ACCOUNTS RECEIVABLE ;07-JUL-15
"RTN","PRCABJ2",2,0)
 ;;4.5;Accounts Receivable;**304,321,326**;Mar 20, 1995;Build 26
"RTN","PRCABJ2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PRCABJ2",4,0)
 ;
"RTN","PRCABJ2",5,0)
 ; read of DGCR(399.2 allowed by DBIA 3822
"RTN","PRCABJ2",6,0)
 ;
"RTN","PRCABJ2",7,0)
 Q
"RTN","PRCABJ2",8,0)
 ; Auto-audit Paper and Electronic (EDI) bills if ready
"RTN","PRCABJ2",9,0)
ABAUDIT ;
"RTN","PRCABJ2",10,0)
 ; Local Variables
"RTN","PRCABJ2",11,0)
 ;    APIEN - Accounts Payable (file #430) ien
"RTN","PRCABJ2",12,0)
 ;
"RTN","PRCABJ2",13,0)
 N APIEN,BILLTYP,BILLTYPF,BILLVAL,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PRCABJ2",14,0)
 N APD0,APD202,FLG1,FLG2,FLG1E,FLG2E,NBLIEN ; PRCA*4.5*321
"RTN","PRCABJ2",15,0)
 N PRCABLNO,PRCAECME,RATEIEN,RCPAPER,XX ; PRCA*4.5*321
"RTN","PRCABJ2",16,0)
 ;
"RTN","PRCABJ2",17,0)
 S APIEN=""
"RTN","PRCABJ2",18,0)
 ;
"RTN","PRCABJ2",19,0)
 ;Check parameters to see if it needs to run.
"RTN","PRCABJ2",20,0)
 S FLG1=$$GET1^DIQ(342,"1,",7.05,"I")   ; Get the value of the auto-audit medical paper bill flag
"RTN","PRCABJ2",21,0)
 S FLG2=$$GET1^DIQ(342,"1,",7.06,"I")   ; Get the value of the auto-audit pharmacy paper bill flag
"RTN","PRCABJ2",22,0)
 S FLG1E=$$GET1^DIQ(342,"1,",7.07,"I") ; Get the value of the auto-audit medical EDI bill flag - PRCA*4.5*321
"RTN","PRCABJ2",23,0)
 S FLG2E=$$GET1^DIQ(342,"1,",7.08,"I") ; Get the value of the auto-audit pharmacy EDI bill flag - PRCA*4.5*321
"RTN","PRCABJ2",24,0)
 ;
"RTN","PRCABJ2",25,0)
 ; Quit if all auto-audit parameters are set to 'No'
"RTN","PRCABJ2",26,0)
 Q:('FLG1)&('FLG2)&('FLG1E)&('FLG2E)  ; PRCA*4.5*321
"RTN","PRCABJ2",27,0)
 ;
"RTN","PRCABJ2",28,0)
 ;retrieve DB values
"RTN","PRCABJ2",29,0)
 S NBLIEN=$O(^PRCA(430.3,"B","NEW BILL",""))  ; New Bill Status IEN
"RTN","PRCABJ2",30,0)
 ;S CATIEN=$O(^PRCA(430.2,"C","RI",""))        ; Reimbursable Insurance IEN  ; removed PRCA*4.5*321
"RTN","PRCABJ2",31,0)
 ;S HICD=$O(^PRCA(430.6,"B","HI",""))          ; Health insurance IEN  ; removed PRCA*4.5*321
"RTN","PRCABJ2",32,0)
 ;S ACTIVE=$O(^PRCA(430.3,"B","ACTIVE",""))    ; New Bill Status IEN  ; removed PRCA*4.5*321
"RTN","PRCABJ2",33,0)
 S BILLTYP=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",""))  ; Bill Type IEN
"RTN","PRCABJ2",34,0)
 S BILLTYPF=$O(^DGCR(399.3,"B","FEE REIMB INS","")) ; Re-Imb. Fee Bill Type IEN - PRCA*4.5*326
"RTN","PRCABJ2",35,0)
 ;S RCPAPER=1 ; Field 27 in ^DGCR(399 ; 0 - is electronic, 1 - FORCE LOCAL PRINT  ; removed PRCA*4.5*321
"RTN","PRCABJ2",36,0)
 ;
"RTN","PRCABJ2",37,0)
 Q:NBLIEN=""
"RTN","PRCABJ2",38,0)
 ;
"RTN","PRCABJ2",39,0)
 F  S APIEN=$O(^PRCA(430,"AC",NBLIEN,APIEN)) Q:'APIEN  D
"RTN","PRCABJ2",40,0)
 . S APD0=$G(^PRCA(430,APIEN,0))   ; Patient info
"RTN","PRCABJ2",41,0)
 . S APD202=$G(^PRCA(430,APIEN,202))   ;Insured info
"RTN","PRCABJ2",42,0)
 . S BILLVAL=$$GET1^DIQ(399,APIEN_",",.07,"I") ; PRCA*4.5*326
"RTN","PRCABJ2",43,0)
 . I BILLVAL'=BILLTYP,BILLVAL'=BILLTYPF Q  ; Rate Type must be Reimbursable Insurance - PRCA*4.5*326
"RTN","PRCABJ2",44,0)
 . ; BEGIN - PRCA*4.5*321
"RTN","PRCABJ2",45,0)
 . Q:$$GET1^DIQ(430,APIEN_",",7,"I")=""       ; Quit if no PATIENT IEN
"RTN","PRCABJ2",46,0)
 . Q:$$GET1^DIQ(430,APIEN_",",9,"I")=""       ; Quit if no DEBTOR information
"RTN","PRCABJ2",47,0)
 . Q:$$GET1^DIQ(430,APIEN_",",239,"I")=""     ; quit if no subscriber name stored
"RTN","PRCABJ2",48,0)
 . Q:$$GET1^DIQ(430,APIEN_",",243,"I")=""     ; quit if no group name stored
"RTN","PRCABJ2",49,0)
 . Q:$$GET1^DIQ(430,APIEN_",",244,"I")=""     ; quit if no group number stored
"RTN","PRCABJ2",50,0)
 . Q:$$BILLREJ^PRCAUDT(APIEN)  ; PRCA*4.5*321 - claim has reject messages, do not audit
"RTN","PRCABJ2",51,0)
 . ;
"RTN","PRCABJ2",52,0)
 . S RATEIEN=$$GET1^DIQ(399,APIEN_",",.07,"I") ; Get bill's rate type ; IA 4118
"RTN","PRCABJ2",53,0)
 . Q:'RATEIEN
"RTN","PRCABJ2",54,0)
 . ; A rate type is auto-audited if BILL RESULTING FROM field is non-null
"RTN","PRCABJ2",55,0)
 . Q:'$$GET1^DIQ(399.3,RATEIEN_",",.11,"I")  ; Quit if not an auto-audit rate type
"RTN","PRCABJ2",56,0)
 . ;Read on IB file #399 field #27 covered by ICR #3820
"RTN","PRCABJ2",57,0)
 . S RCPAPER=$$GET1^DIQ(399,APIEN_",",27,"I") ; 0 - is electronic, 1 - is paper
"RTN","PRCABJ2",58,0)
 . ;Get the Bill number to check if it is a Pharmacy bill
"RTN","PRCABJ2",59,0)
 . S PRCABLNO=$$GET1^DIQ(430,APIEN_",",.01,"I")
"RTN","PRCABJ2",60,0)
 . S PRCAECME=$$GETECME^RCDPENR1(PRCABLNO)
"RTN","PRCABJ2",61,0)
 . I PRCAECME="",'FLG1,RCPAPER Q     ;Skip this paper bill if No Medical processing
"RTN","PRCABJ2",62,0)
 . I PRCAECME'="",'FLG2,RCPAPER Q    ;Skip this paper bill if No Pharmacy processing
"RTN","PRCABJ2",63,0)
 . I PRCAECME="",'FLG1E,'RCPAPER Q     ;Skip this EDI bill if No Medical processing
"RTN","PRCABJ2",64,0)
 . I PRCAECME'="",'FLG2E,'RCPAPER Q    ;Skip this EDI bill if No Pharmacy processing
"RTN","PRCABJ2",65,0)
 . ;
"RTN","PRCABJ2",66,0)
 . ; Bill Passed all checks now call auto-audit for this Bill number
"RTN","PRCABJ2",67,0)
 . D AUDITX^PRCAUDT(APIEN)
"RTN","PRCABJ2",68,0)
 Q
"RTN","RCBEADJ")
0^75^B102510722
"RTN","RCBEADJ",1,0)
RCBEADJ ;WISC/RFJ-adjustment ;Jun 06, 2014@19:11:19
"RTN","RCBEADJ",2,0)
 ;;4.5;Accounts Receivable;**169,172,204,173,208,233,298,301,315,326**;Mar 20, 1995;Build 26
"RTN","RCBEADJ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCBEADJ",4,0)
 Q
"RTN","RCBEADJ",5,0)
 ;
"RTN","RCBEADJ",6,0)
 ;
"RTN","RCBEADJ",7,0)
DECREASE ;  menu option: create a decrease adjustment
"RTN","RCBEADJ",8,0)
 D ADJUST("DECREASE")
"RTN","RCBEADJ",9,0)
 Q
"RTN","RCBEADJ",10,0)
 ;
"RTN","RCBEADJ",11,0)
 ;
"RTN","RCBEADJ",12,0)
INCREASE ;  menu option: create an increase adjustment
"RTN","RCBEADJ",13,0)
 D ADJUST("INCREASE")
"RTN","RCBEADJ",14,0)
 Q
"RTN","RCBEADJ",15,0)
 ;
"RTN","RCBEADJ",16,0)
ADJUST(RCBETYPE,RCEDI) ;  create an adjustment
"RTN","RCBEADJ",17,0)
 ;  rcbetype = INCREASE for increase or DECREASE for decrease
"RTN","RCBEADJ",18,0)
 ;  rcedi = the ien of the bill selected via the EDI Worklist;ien of 
"RTN","RCBEADJ",19,0)
 ;    XX      the ERA entry or null/undefined if bill should be selected
"RTN","RCBEADJ",20,0)
 I '$G(GOTBILL) N RCBILLDA  ;PRCA*4.5*315 If entering from worklist
"RTN","RCBEADJ",21,0)
 F  D  Q:RCBILLDA<0!$G(RCEDI)!$G(GOTBILL)
"RTN","RCBEADJ",22,0)
 .   K RCTRANDA,RCLIST,RCTRREV
"RTN","RCBEADJ",23,0)
 .   ;
"RTN","RCBEADJ",24,0)
 .   ;  select a bill
"RTN","RCBEADJ",25,0)
 .   I '$G(GOTBILL) S RCBILLDA=$S('$G(RCEDI):$$GETABILL^RCBEUBIL,1:+RCEDI)  ;PRCA*4.5*315
"RTN","RCBEADJ",26,0)
 .   I RCBILLDA<1 Q
"RTN","RCBEADJ",27,0)
 .   I $D(^PRCA(430,"TCSP",RCBILLDA)),(RCBETYPE="INCREASE") D  ;PRCA*4.5*315/DRF
"RTN","RCBEADJ",28,0)
 ..    S RCTRREV=$$ASKREV()
"RTN","RCBEADJ",29,0)
 ..    W !
"RTN","RCBEADJ",30,0)
 .   I $D(^PRCA(430,"TCSP",RCBILLDA)),(RCBETYPE="DECREASE") S %=$$ASKCM Q:(%'=1)     ; prca*4.5*301 & *315
"RTN","RCBEADJ",31,0)
 .   ;
"RTN","RCBEADJ",32,0)
 .   ;  adjust the bill
"RTN","RCBEADJ",33,0)
 .   D ADJBILL(RCBETYPE,RCBILLDA,$P($G(RCEDI),";",2))
"RTN","RCBEADJ",34,0)
 Q
"RTN","RCBEADJ",35,0)
 ;
"RTN","RCBEADJ",36,0)
ADJBILL(RCBETYPE,RCBILLDA,RCEDIWL) ;  adjust a bill
"RTN","RCBEADJ",37,0)
 ; RCEDIWL = ien of ERA entry if called from worklist
"RTN","RCBEADJ",38,0)
 N RCAMOUNT,RCBALANC,RCDATA7,RCLIST,RCONTADJ,RCTRANDA,TOTALCAL,TOTALSTO,I,X,Y
"RTN","RCBEADJ",39,0)
 ;  lock the bill
"RTN","RCBEADJ",40,0)
 L +^PRCA(430,RCBILLDA):5 E  W !,"ANOTHER USER IS CURRENTLY WORKING WITH THIS BILL." Q
"RTN","RCBEADJ",41,0)
 ;
"RTN","RCBEADJ",42,0)
 ;  show data for the bill
"RTN","RCBEADJ",43,0)
 D SHOWBILL^RCWROFF1(RCBILLDA)
"RTN","RCBEADJ",44,0)
 ;
"RTN","RCBEADJ",45,0)
 ;  check the balance of the bill
"RTN","RCBEADJ",46,0)
 W !!,"Checking the bill's balance ..."
"RTN","RCBEADJ",47,0)
 S RCBALANC=$$OUTOFBAL^RCBDBBAL(RCBILLDA)
"RTN","RCBEADJ",48,0)
 I RCBALANC="" W " IN Balance!"
"RTN","RCBEADJ",49,0)
 ;
"RTN","RCBEADJ",50,0)
 ;  out of balance, ask to fix it
"RTN","RCBEADJ",51,0)
 I RCBALANC'="" D  I RCBILLDA<1 D UNLOCK Q
"RTN","RCBEADJ",52,0)
 .   S TOTALCAL=$P(RCBALANC,"^")+$P(RCBALANC,"^",2)+$P(RCBALANC,"^",3)+$P(RCBALANC,"^",4)+$P(RCBALANC,"^",5)
"RTN","RCBEADJ",53,0)
 .   S RCDATA7=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",54,0)
 .   S TOTALSTO=$P(RCDATA7,"^")+$P(RCDATA7,"^",2)+$P(RCDATA7,"^",3)+$P(RCDATA7,"^",4)+$P(RCDATA7,"^",5)
"RTN","RCBEADJ",55,0)
 .   W " OUT of Balance!"
"RTN","RCBEADJ",56,0)
 .   W !!,"                  BALANCE:",$J("Calculated",12),$J("Stored",12)
"RTN","RCBEADJ",57,0)
 .   W !,"                  ------- ",$J("------------",12),$J("------------",12)
"RTN","RCBEADJ",58,0)
 .   W !,"        Principal Balance:",$J($P(RCBALANC,"^",1),12,2),$J($P(RCDATA7,"^",1),12,2)
"RTN","RCBEADJ",59,0)
 .   I +$P(RCBALANC,"^",1)'=+$P(RCDATA7,"^",1) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",60,0)
 .   W !,"         Interest Balance:",$J($P(RCBALANC,"^",2),12,2),$J($P(RCDATA7,"^",2),12,2)
"RTN","RCBEADJ",61,0)
 .   I +$P(RCBALANC,"^",2)'=+$P(RCDATA7,"^",2) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",62,0)
 .   W !,"            Admin Balance:",$J($P(RCBALANC,"^",3),12,2),$J($P(RCDATA7,"^",3),12,2)
"RTN","RCBEADJ",63,0)
 .   I +$P(RCBALANC,"^",3)'=+$P(RCDATA7,"^",3) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",64,0)
 .   W !,"               MF Balance:",$J($P(RCBALANC,"^",4),12,2),$J($P(RCDATA7,"^",4),12,2)
"RTN","RCBEADJ",65,0)
 .   I +$P(RCBALANC,"^",4)'=+$P(RCDATA7,"^",4) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",66,0)
 .   W !,"               CC Balance:",$J($P(RCBALANC,"^",5),12,2),$J($P(RCDATA7,"^",5),12,2)
"RTN","RCBEADJ",67,0)
 .   I +$P(RCBALANC,"^",5)'=+$P(RCDATA7,"^",5) W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",68,0)
 .   W !,"                  ------- ",$J("-------------",12),$J("-------------",12)
"RTN","RCBEADJ",69,0)
 .   W !,"                    TOTAL:",$J(TOTALCAL,12,2),$J(TOTALSTO,12,2)
"RTN","RCBEADJ",70,0)
 .   I +TOTALCAL'=+TOTALSTO W "  <<-- OUT OF BALANCE"
"RTN","RCBEADJ",71,0)
 .   ;
"RTN","RCBEADJ",72,0)
 .   ;  ask to fix the balances
"RTN","RCBEADJ",73,0)
 .   S Y=$$ASKFIX I Y'=1 W !,"  NOTE: You must fix the Balance Discrepancy before processing an adjustment!" S RCBILLDA=0 Q
"RTN","RCBEADJ",74,0)
 .   ;
"RTN","RCBEADJ",75,0)
 .   ;  fix it
"RTN","RCBEADJ",76,0)
 .   S $P(RCDATA7,"^",1)=+$P(RCBALANC,"^",1) ; principal
"RTN","RCBEADJ",77,0)
 .   S $P(RCDATA7,"^",2)=+$P(RCBALANC,"^",2) ; interest
"RTN","RCBEADJ",78,0)
 .   S $P(RCDATA7,"^",3)=+$P(RCBALANC,"^",3) ; admin
"RTN","RCBEADJ",79,0)
 .   S $P(RCDATA7,"^",4)=+$P(RCBALANC,"^",4) ; marshal fee
"RTN","RCBEADJ",80,0)
 .   S $P(RCDATA7,"^",5)=+$P(RCBALANC,"^",5) ; court cost
"RTN","RCBEADJ",81,0)
 .   S $P(^PRCA(430,RCBILLDA,7),"^",1,5)=$P(RCDATA7,"^",1,5)
"RTN","RCBEADJ",82,0)
 .   ;
"RTN","RCBEADJ",83,0)
 .   W !,"  Balance Discrepancy FIXED!"
"RTN","RCBEADJ",84,0)
 ;
"RTN","RCBEADJ",85,0)
 ;  if the principal balance is zero, do not allow it to be adjusted
"RTN","RCBEADJ",86,0)
 ;  ask to close/cancel it
"RTN","RCBEADJ",87,0)
 I RCBETYPE="DECREASE",'$G(^PRCA(430,RCBILLDA,7)) W !!,"Note: This bill has NO PRINCIPAL BALANCE to decrease !" D INTADMIN(RCBILLDA),UNLOCK Q
"RTN","RCBEADJ",88,0)
 ;
"RTN","RCBEADJ",89,0)
 ; If entry is from EDI Lockbox worklist, display total adjustments in ERA
"RTN","RCBEADJ",90,0)
 N AP D
"RTN","RCBEADJ",91,0)
 .N BILL,EOB,ERA,SEQ S ERA="",AP=0
"RTN","RCBEADJ",92,0)
 .F  S ERA=$O(^RCY(344.4,"AP",1,ERA)) Q:'ERA  D  Q:AP
"RTN","RCBEADJ",93,0)
 ..S SEQ=0
"RTN","RCBEADJ",94,0)
 ..F  S SEQ=$O(^RCY(344.4,"AP",1,ERA,SEQ)) Q:'SEQ  D  Q:AP
"RTN","RCBEADJ",95,0)
 ...S EOB=$P($G(^RCY(344.4,ERA,1,SEQ,0)),U,2) Q:'EOB
"RTN","RCBEADJ",96,0)
 ...S:$P($G(^IBM(361.1,EOB,0)),U)=RCBILLDA AP=1 ;IA #4051
"RTN","RCBEADJ",97,0)
 ;
"RTN","RCBEADJ",98,0)
 ;  Ask to enter transaction even though it is marked for autopost PRCA*4.5*298
"RTN","RCBEADJ",99,0)
 I RCBETYPE="DECREASE",AP S Y=$$ASKAUPO() I Y'=1 W !,"Exiting bill adjustment." D UNLOCK Q
"RTN","RCBEADJ",100,0)
 ;
"RTN","RCBEADJ",101,0)
 ; Display warning for decrease adjustment if pending payments exist
"RTN","RCBEADJ",102,0)
 I RCBETYPE="DECREASE" D WARN^RCBEADJ1(RCBILLDA) ; PRCA*4.5*326
"RTN","RCBEADJ",103,0)
 ;
"RTN","RCBEADJ",104,0)
 ;  ask to enter adjustment amount
"RTN","RCBEADJ",105,0)
 S RCAMOUNT=$$AMOUNT(RCBILLDA,RCBETYPE)
"RTN","RCBEADJ",106,0)
 I RCAMOUNT<0 D UNLOCK Q
"RTN","RCBEADJ",107,0)
 ;
"RTN","RCBEADJ",108,0)
 ;  if decrease, make negative
"RTN","RCBEADJ",109,0)
 I RCBETYPE="DECREASE" S RCAMOUNT=-RCAMOUNT
"RTN","RCBEADJ",110,0)
 ;
"RTN","RCBEADJ",111,0)
 ;  ask if it is a contract adjustment (45,46,47 added PRCA*4.5*315)/DRF)
"RTN","RCBEADJ",112,0)
 I RCBETYPE="DECREASE","^9^28^29^30^32^45^46^47^"[("^"_$P($G(^PRCA(430,RCBILLDA,0)),"^",2)_"^") S RCONTADJ=$$ASKCONT I RCONTADJ<0 D UNLOCK Q
"RTN","RCBEADJ",113,0)
 ;
"RTN","RCBEADJ",114,0)
 ;  show what the new transaction will look like
"RTN","RCBEADJ",115,0)
 S RCDATA7=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",116,0)
 W !!,"If you process the transaction, the bill will look like:"
"RTN","RCBEADJ",117,0)
 W !,"Current Principal Balance: ",$J($P(RCDATA7,"^"),11,2)
"RTN","RCBEADJ",118,0)
 W !,"  NEW ",RCBETYPE," Adjustment: ",$J(RCAMOUNT,11,2)
"RTN","RCBEADJ",119,0)
 W !,"                           -----------"
"RTN","RCBEADJ",120,0)
 W !,"    NEW Principal Balance: ",$J($P(RCDATA7,"^")+RCAMOUNT,11,2)
"RTN","RCBEADJ",121,0)
 ;
"RTN","RCBEADJ",122,0)
 ;  ask to enter transaction
"RTN","RCBEADJ",123,0)
 S Y=$$ASKOK(RCBETYPE) I Y'=1 D UNLOCK Q
"RTN","RCBEADJ",124,0)
 ;
"RTN","RCBEADJ",125,0)
ADDADJ ;  add adjustment
"RTN","RCBEADJ",126,0)
 S RCTRANDA=$$INCDEC^RCBEUTR1(RCBILLDA,RCAMOUNT,"","","",$G(RCONTADJ))
"RTN","RCBEADJ",127,0)
 I 'RCTRANDA W !,"  *** W A R N I N G: Adjustment NOT Processed! ***" D UNLOCK Q
"RTN","RCBEADJ",128,0)
 I RCTRANDA W !,"  Adjustment Transaction: ",RCTRANDA," has been added."
"RTN","RCBEADJ",129,0)
 I RCTRANDA,'$G(RCEDIWL),(RCBETYPE="DECREASE"),$D(^PRCA(430,"TCSP",RCBILLDA)) D DECADJ^RCTCSPU(RCBILLDA,RCTRANDA) ;prca*4.5*301 add cs decrease adjustment
"RTN","RCBEADJ",130,0)
 I RCTRANDA,$G(RCTRREV)=0 S PRCABN=RCBILLDA D CSITRN^RCTCSPD5
"RTN","RCBEADJ",131,0)
 I RCTRANDA,$G(RCTRREV)=0,'$G(RCEDIWL),(RCBETYPE="INCREASE"),$D(^PRCA(430,"TCSP",RCBILLDA)) S PRCABN=RCBILLDA D INCADJ^RCTCSPU(RCBILLDA,RCTRANDA) ;PRCA*4.5*315/DRF add cs increase adjustment
"RTN","RCBEADJ",132,0)
 I $G(RCTRREV)=1 S PRCABN=RCBILLDA D CSITRY^RCTCSPD5
"RTN","RCBEADJ",133,0)
 I '$G(REFMS)&(DT>$$LDATE^RCRJR(DT)) S Y=$E($$FPS^RCAMFN01(DT,1),1,5)_"01" D DD^%DT W !!,"   * * * * Transmission will be held until "_Y_" * * * *"
"RTN","RCBEADJ",134,0)
 ;
"RTN","RCBEADJ",135,0)
 ;  ask to enter a comment
"RTN","RCBEADJ",136,0)
 W !!,"Enter a comment for the ",RCBETYPE," Adjustment:"
"RTN","RCBEADJ",137,0)
 S Y=$$EDIT433^RCBEUTRA(RCTRANDA,"41;")
"RTN","RCBEADJ",138,0)
 ;
"RTN","RCBEADJ",139,0)
 ;  ask to exempt interest and admin charges
"RTN","RCBEADJ",140,0)
 I RCBETYPE="DECREASE" D INTADMIN(RCBILLDA)
"RTN","RCBEADJ",141,0)
 ;
"RTN","RCBEADJ",142,0)
 ;  notification of subsequent payer bulletin
"RTN","RCBEADJ",143,0)
 S RCDATA7=$G(^PRCA(430,RCBILLDA,7)),X=0
"RTN","RCBEADJ",144,0)
 F I=1:1:5 S X=X+$P(RCDATA7,"^",I)
"RTN","RCBEADJ",145,0)
 I RCDATA7'="",'X D
"RTN","RCBEADJ",146,0)
 .   N PRCABN,PRCAEN,PRCAMT
"RTN","RCBEADJ",147,0)
 .   S PRCABN=RCBILLDA,PRCAEN=RCTRANDA,PRCAMT=+$P($G(^PRCA(433,RCTRANDA,1)),"^",5)
"RTN","RCBEADJ",148,0)
 .   D EOB^PRCADJ
"RTN","RCBEADJ",149,0)
 ;
"RTN","RCBEADJ",150,0)
 ;  unlock and ask the next bill to adjust
"RTN","RCBEADJ",151,0)
 D UNLOCK
"RTN","RCBEADJ",152,0)
 Q
"RTN","RCBEADJ",153,0)
 ;
"RTN","RCBEADJ",154,0)
 ;
"RTN","RCBEADJ",155,0)
UNLOCK ;  unlock bill and transaction
"RTN","RCBEADJ",156,0)
 L -^PRCA(430,RCBILLDA)
"RTN","RCBEADJ",157,0)
 I $G(RCTRANDA) L -^PRCA(433,RCTRANDA)
"RTN","RCBEADJ",158,0)
 Q
"RTN","RCBEADJ",159,0)
 ;
"RTN","RCBEADJ",160,0)
 ;
"RTN","RCBEADJ",161,0)
INTADMIN(RCBILLDA) ;  ask and adjust the interest and admin
"RTN","RCBEADJ",162,0)
 N RCAMOUNT,RCTRANDA,Y
"RTN","RCBEADJ",163,0)
 ;
"RTN","RCBEADJ",164,0)
 ;  check to see if there is interest and admin charges
"RTN","RCBEADJ",165,0)
 S RCAMOUNT=$G(^PRCA(430,RCBILLDA,7))
"RTN","RCBEADJ",166,0)
 I '$P(RCAMOUNT,"^",2),'$P(RCAMOUNT,"^",3),'$P(RCAMOUNT,"^",4),'$P(RCAMOUNT,"^",5) Q
"RTN","RCBEADJ",167,0)
 ;
"RTN","RCBEADJ",168,0)
 ;  only ask if there is no principal
"RTN","RCBEADJ",169,0)
 I RCAMOUNT Q
"RTN","RCBEADJ",170,0)
 ;
"RTN","RCBEADJ",171,0)
 W !!,"You have the option to automatically EXEMPT the interest"
"RTN","RCBEADJ",172,0)
 W !,"and administrative charges.  This will close the bill."
"RTN","RCBEADJ",173,0)
 S Y=$$ASKEXEMP I Y'=1 Q
"RTN","RCBEADJ",174,0)
 ;
"RTN","RCBEADJ",175,0)
 W !!,"Creating an EXEMPT transaction ..."
"RTN","RCBEADJ",176,0)
 S RCTRANDA=$$EXEMPT^RCBEUTR2(RCBILLDA,$P(RCAMOUNT,"^",2)_"^"_$P(RCAMOUNT,"^",3)_"^^"_$P(RCAMOUNT,"^",4)_"^"_$P(RCAMOUNT,"^",5))
"RTN","RCBEADJ",177,0)
 I 'RCTRANDA W !,"  *** W A R N I N G: EXEMPTION NOT Processed! ***" Q
"RTN","RCBEADJ",178,0)
 I RCTRANDA W !,"   Exempt Transaction: ",RCTRANDA," has been added."
"RTN","RCBEADJ",179,0)
INTC35B ;Check if CS5B entry needed for exempt transaction
"RTN","RCBEADJ",180,0)
 I RCTRANDA,'$G(RCEDIWL),(RCBETYPE="DECREASE"),$D(^PRCA(430,"TCSP",RCBILLDA)) D DECADJ^RCTCSPU(RCBILLDA,RCTRANDA) ;prca*4.5*301 add cs exempt
"RTN","RCBEADJ",181,0)
 I '$G(REFMS)&(DT>$$LDATE^RCRJR(DT)) S Y=$E($$FPS^RCAMFN01(DT,1),1,5)_"01" D DD^%DT W !!,"   * * * * Transmission will be held until "_Y_" * * * *"
"RTN","RCBEADJ",182,0)
 ;
"RTN","RCBEADJ",183,0)
 W !,"  Current Bill Status: ",$P($G(^PRCA(430.3,+$P($G(^PRCA(430,RCBILLDA,0)),"^",8),0)),"^")
"RTN","RCBEADJ",184,0)
 Q
"RTN","RCBEADJ",185,0)
 ;
"RTN","RCBEADJ",186,0)
ASKOK(RCBETYPE) ;  ask record decrease or increase transaction
"RTN","RCBEADJ",187,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",188,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",189,0)
 S DIR("A")="Are you sure you want to enter this "_RCBETYPE_" adjustment "
"RTN","RCBEADJ",190,0)
 W ! D ^DIR
"RTN","RCBEADJ",191,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1 I $G(GOTBILL) S RCDPGQ=1    ; account profile listman quit flag  *315
"RTN","RCBEADJ",192,0)
 Q Y
"RTN","RCBEADJ",193,0)
 ;
"RTN","RCBEADJ",194,0)
ASKAUPO() ;  ask record even though marked for auto post PRCA*4.5*298
"RTN","RCBEADJ",195,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",196,0)
 S DIR(0)="YOA",DIR("B")="NO"
"RTN","RCBEADJ",197,0)
 S DIR("A")="Marked for Auto-Post. Are you sure? (Y/N) "
"RTN","RCBEADJ",198,0)
 W ! D ^DIR
"RTN","RCBEADJ",199,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1 I $G(GOTBILL) S RCDPGQ=1    ; account profile listman quit flag  *315
"RTN","RCBEADJ",200,0)
 Q Y
"RTN","RCBEADJ",201,0)
 ;
"RTN","RCBEADJ",202,0)
ASKFIX() ;  ask to fix bill's balance
"RTN","RCBEADJ",203,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",204,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",205,0)
 S DIR("A")="  Do you want to FIX the balance discrepancy "
"RTN","RCBEADJ",206,0)
 W ! D ^DIR
"RTN","RCBEADJ",207,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1 I $G(GOTBILL) S RCDPGQ=1    ; account profile listman quit flag  *315
"RTN","RCBEADJ",208,0)
 Q Y
"RTN","RCBEADJ",209,0)
 ;
"RTN","RCBEADJ",210,0)
 ;
"RTN","RCBEADJ",211,0)
ASKEXEMP() ;  ask to record an exempt transaction
"RTN","RCBEADJ",212,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",213,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCBEADJ",214,0)
 S DIR("A")="  Would you like to EXEMPT the interest and admin charges "
"RTN","RCBEADJ",215,0)
 D ^DIR
"RTN","RCBEADJ",216,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1 I $G(GOTBILL) S RCDPGQ=1    ; account profile listman quit flag  *315
"RTN","RCBEADJ",217,0)
 Q Y
"RTN","RCBEADJ",218,0)
 ;
"RTN","RCBEADJ",219,0)
 ;
"RTN","RCBEADJ",220,0)
ASKCONT() ;  ask if contract adjustment
"RTN","RCBEADJ",221,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",222,0)
 S DIR(0)="YO",DIR("B")="YES"
"RTN","RCBEADJ",223,0)
 S DIR("A")="  Is this a CONTRACT adjustment "
"RTN","RCBEADJ",224,0)
 W ! D ^DIR
"RTN","RCBEADJ",225,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1 I $G(GOTBILL) S RCDPGQ=1    ; account profile listman quit flag  *315
"RTN","RCBEADJ",226,0)
 Q Y
"RTN","RCBEADJ",227,0)
 ;
"RTN","RCBEADJ",228,0)
 ;
"RTN","RCBEADJ",229,0)
ASKREV() ; Ask if Treasury reversal *315/DRF
"RTN","RCBEADJ",230,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",231,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCBEADJ",232,0)
 S DIR("A")="  Is this a TREASURY reversal "
"RTN","RCBEADJ",233,0)
 W ! D ^DIR
"RTN","RCBEADJ",234,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1 I $G(GOTBILL) S RCDPGQ=1    ; account profile listman quit flag  *315
"RTN","RCBEADJ",235,0)
 Q Y
"RTN","RCBEADJ",236,0)
 ;
"RTN","RCBEADJ",237,0)
 ;
"RTN","RCBEADJ",238,0)
ADJNUM(RCBILLDA) ;  get next adjustment number for a bill
"RTN","RCBEADJ",239,0)
 N %,ADJUST,DATA1,RCTRANDA
"RTN","RCBEADJ",240,0)
 S RCTRANDA=0
"RTN","RCBEADJ",241,0)
 F  S RCTRANDA=$O(^PRCA(433,"C",RCBILLDA,RCTRANDA)) Q:'RCTRANDA  S DATA1=$G(^PRCA(433,RCTRANDA,1)) I $P(DATA1,"^",4),$P(DATA1,"^",2)=1!($P(DATA1,"^",2)=35) S ADJUST=$P(DATA1,"^",4)+1
"RTN","RCBEADJ",242,0)
 Q ADJUST
"RTN","RCBEADJ",243,0)
 ;
"RTN","RCBEADJ",244,0)
 ;
"RTN","RCBEADJ",245,0)
AMOUNT(RCBILLDA,RCBETYPE) ;  enter the adjustment amount for a bill
"RTN","RCBEADJ",246,0)
 N DIR,DIRUT,DTOUT,DUOUT,PRINBAL,X,Y
"RTN","RCBEADJ",247,0)
 S PRINBAL=+$P($G(^PRCA(430,RCBILLDA,7)),"^")
"RTN","RCBEADJ",248,0)
 I RCBETYPE="INCREASE" S PRINBAL=9999999.99
"RTN","RCBEADJ",249,0)
 W !!,"Enter the ",RCBETYPE," Adjustment AMOUNT, from .01 to ",$J(PRINBAL,0,2),"."
"RTN","RCBEADJ",250,0)
 S DIR(0)="NAO^.01:"_PRINBAL_":2"
"RTN","RCBEADJ",251,0)
 S DIR("A")="  "_RCBETYPE_" PRINCIPAL BALANCE BY: "
"RTN","RCBEADJ",252,0)
 D ^DIR
"RTN","RCBEADJ",253,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1 I $G(GOTBILL) S RCDPGQ=1    ; account profile listman quit flag  *315
"RTN","RCBEADJ",254,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCBEADJ",255,0)
 ;
"RTN","RCBEADJ",256,0)
ASKCM() ;  ask if the action is being performed due to the claims matching process  *315
"RTN","RCBEADJ",257,0)
 N DIR,DIQ2,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCBEADJ",258,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCBEADJ",259,0)
 S DIR("A")="Is this action being performed due to the CLAIMS MATCHING process "
"RTN","RCBEADJ",260,0)
 D ^DIR
"RTN","RCBEADJ",261,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1 I $G(GOTBILL) S RCDPGQ=1    ; account profile listman quit flag  *315
"RTN","RCBEADJ",262,0)
 Q Y
"RTN","RCBEADJ",263,0)
 ;
"RTN","RCBEADJ1")
0^76^B18611715
"RTN","RCBEADJ1",1,0)
RCBEADJ1 ;ALB/PJH - PENDING PAYMENTS ;24-FEB-03
"RTN","RCBEADJ1",2,0)
 ;;4.5;Accounts Receivable;**173,276,321,326**;Mar 20, 1995;Build 26
"RTN","RCBEADJ1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCBEADJ1",4,0)
 Q
"RTN","RCBEADJ1",5,0)
WARN(RCBILLDA) ; Display warning if pending payments exist EP ^RCBEADJ 
"RTN","RCBEADJ1",6,0)
 ; Input - RCBILLDA - Pointer #430 - required
"RTN","RCBEADJ1",7,0)
 ; Output - None - output to screen only
"RTN","RCBEADJ1",8,0)
 ;
"RTN","RCBEADJ1",9,0)
 ; Check for valid input
"RTN","RCBEADJ1",10,0)
 Q:'$G(RCBILLDA)
"RTN","RCBEADJ1",11,0)
 ;
"RTN","RCBEADJ1",12,0)
 N DEBTOR,RCAMT,RCEOB,RCERA,RCLINE,RCPAID,RCPEND,RCRCPT,RCRCPTN,RCSUB,RCTOT,RCTRACE,RCTRANDA,RCZ,RCZL
"RTN","RCBEADJ1",13,0)
 ; Set DEBTOR value
"RTN","RCBEADJ1",14,0)
 S DEBTOR=RCBILLDA_";PRCA(430,"
"RTN","RCBEADJ1",15,0)
 ; Check for unprocessed receipts
"RTN","RCBEADJ1",16,0)
 S RCPEND=$$PENDPAY^RCDPURET(DEBTOR)
"RTN","RCBEADJ1",17,0)
 ; Extract receipt numbers and amounts paid on individual lines for pending receipts
"RTN","RCBEADJ1",18,0)
 S RCRCPT=0
"RTN","RCBEADJ1",19,0)
 F  S RCRCPT=$O(^TMP($J,"RCDPUREC","PP",RCRCPT)) Q:'RCRCPT  D
"RTN","RCBEADJ1",20,0)
 . S RCRCPTN=$$GET1^DIQ(344,RCRCPT_",",.01) Q:RCRCPTN=""
"RTN","RCBEADJ1",21,0)
 . S RCPEND("R",RCRCPTN)=0
"RTN","RCBEADJ1",22,0)
 . S RCTRANDA=0
"RTN","RCBEADJ1",23,0)
 . F  S RCTRANDA=$O(^TMP($J,"RCDPUREC","PP",RCRCPT,RCTRANDA)) Q:'RCTRANDA  D
"RTN","RCBEADJ1",24,0)
 . . S RCAMT=$P($G(^TMP($J,"RCDPUREC","PP",RCRCPT,RCTRANDA)),U,4) Q:+RCAMT=0
"RTN","RCBEADJ1",25,0)
 . . ; Save paid amount for this claim on this receipt
"RTN","RCBEADJ1",26,0)
 . . S RCPEND("R",RCRCPTN)=RCPEND("R",RCRCPTN)+RCAMT
"RTN","RCBEADJ1",27,0)
 . . ; Get trace number for ERA
"RTN","RCBEADJ1",28,0)
 . . S RCERA=$$GET1^DIQ(344,RCRCPT_",",.18,"I")
"RTN","RCBEADJ1",29,0)
 . . S RCTRACE=$S(RCERA:$$GET1^DIQ(344.4,RCERA_",",.02,"I"),1:"No Trace Number")
"RTN","RCBEADJ1",30,0)
 . . ; Save trace number
"RTN","RCBEADJ1",31,0)
 . . S RCPEND("R",RCRCPTN,"T")=RCTRACE
"RTN","RCBEADJ1",32,0)
 ; Clear ^TMP array returned by $$PENDPAY
"RTN","RCBEADJ1",33,0)
 K ^TMP($J,"RCDPUREC","PP")
"RTN","RCBEADJ1",34,0)
 ; Find EEOB's for this claim
"RTN","RCBEADJ1",35,0)
 S RCEOB=0
"RTN","RCBEADJ1",36,0)
 F  S RCEOB=$O(^IBM(361.1,"B",RCBILLDA,RCEOB)) Q:'RCEOB  D
"RTN","RCBEADJ1",37,0)
 . ;Find ERAs for this EOB - may be multiple
"RTN","RCBEADJ1",38,0)
 . S RCERA=0
"RTN","RCBEADJ1",39,0)
 . F  S RCERA=$O(^RCY(344.4,"ADET",RCEOB,RCERA)) Q:'RCERA  D
"RTN","RCBEADJ1",40,0)
 . . ; Ignore ERA which already has a receipt - processed or otherwise
"RTN","RCBEADJ1",41,0)
 . . I $$GET1^DIQ(344.4,RCERA_",",.08,"I") Q
"RTN","RCBEADJ1",42,0)
 . . ; Get ERA lines for this EOB
"RTN","RCBEADJ1",43,0)
 . . S RCLINE=0,RCTOT=0
"RTN","RCBEADJ1",44,0)
 . . F  S RCLINE=$O(^RCY(344.4,"ADET",RCEOB,RCERA,RCLINE)) Q:'RCLINE  D
"RTN","RCBEADJ1",45,0)
 . . . ; Get paid amount from ERA line
"RTN","RCBEADJ1",46,0)
 . . . S RCPAID=$$GET1^DIQ(344.41,RCLINE_","_RCERA_",",.03)
"RTN","RCBEADJ1",47,0)
 . . . ; Ignore zero lines
"RTN","RCBEADJ1",48,0)
 . . . Q:'RCPAID
"RTN","RCBEADJ1",49,0)
 . . . ; If no scratchpad use paid amount from ERA - does not take into account ERA level adjustments
"RTN","RCBEADJ1",50,0)
 . . . I '$D(^RCY(344.49,RCERA)) S RCTOT=RCTOT+RCPAID Q
"RTN","RCBEADJ1",51,0)
 . . . ; Find ERA line in scratchpad
"RTN","RCBEADJ1",52,0)
 . . . S RCZL=$$FIND(RCERA,RCLINE) Q:'RCZL
"RTN","RCBEADJ1",53,0)
 . . . ; If scratchpad exists scan B index for split lines(344.49 is DINUM with 344.4)
"RTN","RCBEADJ1",54,0)
 . . . S RCSUB=RCZL
"RTN","RCBEADJ1",55,0)
 . . . F  S RCSUB=$O(^RCY(344.49,RCERA,1,"B",RCSUB)) Q:(RCSUB\1)'=RCZL  D
"RTN","RCBEADJ1",56,0)
 . . . . S RCZ=$O(^RCY(344.49,RCERA,1,"B",RCSUB,"")) Q:'RCZ
"RTN","RCBEADJ1",57,0)
 . . . . ; Check AR BILL is for this claim
"RTN","RCBEADJ1",58,0)
 . . . . Q:$$GET1^DIQ(344.491,RCZ_","_RCERA_",",.07,"I")'=RCBILLDA
"RTN","RCBEADJ1",59,0)
 . . . . ; Add AMOUNT TO POST ON RECEIPT to pending total - should resolve reversals
"RTN","RCBEADJ1",60,0)
 . . . . S RCTOT=RCTOT+$$GET1^DIQ(344.491,RCZ_","_RCERA_",",.03)
"RTN","RCBEADJ1",61,0)
 . . ; If claim total for the ERA is zero do not save trace number and paid amount
"RTN","RCBEADJ1",62,0)
 . . Q:RCTOT=0
"RTN","RCBEADJ1",63,0)
 . . ; Otherwise get trace number
"RTN","RCBEADJ1",64,0)
 . . S RCTRACE=$$GET1^DIQ(344.4,RCERA_",",.02,"I")
"RTN","RCBEADJ1",65,0)
 . . S RCPEND=RCPEND+RCTOT
"RTN","RCBEADJ1",66,0)
 . . ; Save totals by ERA
"RTN","RCBEADJ1",67,0)
 . . S RCPEND("E",RCERA)=RCTOT,RCPEND("E",RCERA,"T")=$S(RCTRACE'="":RCTRACE,1:"No Trace Number")
"RTN","RCBEADJ1",68,0)
 Q:'RCPEND
"RTN","RCBEADJ1",69,0)
 W !!,"Warning - Pending Payments of $"_$J(RCPEND,0,2)_" exist."
"RTN","RCBEADJ1",70,0)
 ; List unprocessed receipts
"RTN","RCBEADJ1",71,0)
 S RCRCPTN=""
"RTN","RCBEADJ1",72,0)
 F  S RCRCPTN=$O(RCPEND("R",RCRCPTN)) Q:RCRCPTN=""  W !,"Rcpt: ",RCRCPTN,?16,$J("$"_$J(RCPEND("R",RCRCPTN),0,2),11),?29,$G(RCPEND("R",RCRCPTN,"T"))
"RTN","RCBEADJ1",73,0)
 ; List unprocessed EOB
"RTN","RCBEADJ1",74,0)
 S RCERA=""
"RTN","RCBEADJ1",75,0)
 F  S RCERA=$O(RCPEND("E",RCERA)) Q:'RCERA  W !,"ERA : ",RCERA,?16,$J("$"_$J(RCPEND("E",RCERA),0,2),11),?29,$G(RCPEND("E",RCERA,"T"))
"RTN","RCBEADJ1",76,0)
 Q
"RTN","RCBEADJ1",77,0)
 ;
"RTN","RCBEADJ1",78,0)
FIND(RCERA,RCLINE) ; Search ORIGINAL ERA SEQUENCES for this line
"RTN","RCBEADJ1",79,0)
 ; Input RCERA - Scratchpad IEN 
"RTN","RCBEADJ1",80,0)
 ;       RCLINE - ERA line to find
"RTN","RCBEADJ1",81,0)
 ; Output RET - Scratchpad line number
"RTN","RCBEADJ1",82,0)
 ;
"RTN","RCBEADJ1",83,0)
 N DA,ORIG,RCSUB,RET
"RTN","RCBEADJ1",84,0)
 S RCSUB=0,RET=0
"RTN","RCBEADJ1",85,0)
 F  S RCSUB=$O(^RCY(344.49,RCERA,1,"ASEQ",RCSUB)) Q:RET  Q:'RCSUB  D
"RTN","RCBEADJ1",86,0)
 . S DA=$O(^RCY(344.49,RCERA,1,"ASEQ",RCSUB,"")) Q:'DA
"RTN","RCBEADJ1",87,0)
 . ;Get Original sequences
"RTN","RCBEADJ1",88,0)
 . S ORIG=$$GET1^DIQ(344.491,DA_","_RCERA_",",.09) Q:ORIG=""
"RTN","RCBEADJ1",89,0)
 . ;Check if scratchpad line is for original ERA line
"RTN","RCBEADJ1",90,0)
 . S ORIG=","_ORIG_","
"RTN","RCBEADJ1",91,0)
 . S:$F(ORIG,","_RCLINE_",") RET=RCSUB
"RTN","RCBEADJ1",92,0)
 Q RET
"RTN","RCBEPAY")
0^32^B33466454
"RTN","RCBEPAY",1,0)
RCBEPAY ;WISC/RFJ - payment processing (top routine) ;1 Jun 00
"RTN","RCBEPAY",2,0)
 ;;4.5;Accounts Receivable;**153,304,301,326**;Mar 20, 1995;Build 26
"RTN","RCBEPAY",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCBEPAY",4,0)
 ;
"RTN","RCBEPAY",5,0)
 Q
"RTN","RCBEPAY",6,0)
 ;
"RTN","RCBEPAY",7,0)
 ;
"RTN","RCBEPAY",8,0)
PROCESS(RCRECTDA,RCPAYDA) ;  process a payment for receipt
"RTN","RCBEPAY",9,0)
 ;  rcrectda - receipt ien file 344
"RTN","RCBEPAY",10,0)
 ;  rcpayda  - payment ien file 344 under rcrectda
"RTN","RCBEPAY",11,0)
 ;  returns 0 if processed, 1^error if not processed
"RTN","RCBEPAY",12,0)
 ;
"RTN","RCBEPAY",13,0)
 N RCACCT,RCBILLDA,RCDATA,RCERROR,RCPAYAMT,RCPAYDAT,RCTRANDA,X,RCERROR
"RTN","RCBEPAY",14,0)
 ;
"RTN","RCBEPAY",15,0)
 ;  lock the receipt payment
"RTN","RCBEPAY",16,0)
 L +^RCY(344,RCRECTDA,1,RCPAYDA):10
"RTN","RCBEPAY",17,0)
 I '$T Q "1^Another user is working with this payment"
"RTN","RCBEPAY",18,0)
 ;
"RTN","RCBEPAY",19,0)
 ;  get the payment data
"RTN","RCBEPAY",20,0)
 S RCDATA=^RCY(344,RCRECTDA,1,RCPAYDA,0)
"RTN","RCBEPAY",21,0)
 ;
"RTN","RCBEPAY",22,0)
 ;  there is no account, this will go to suspense
"RTN","RCBEPAY",23,0)
 I $P(RCDATA,"^",3)="" L -^RCY(344,RCRECTDA,1,RCPAYDA) D  Q RCERROR
"RTN","RCBEPAY",24,0)
 . S RCERROR=0
"RTN","RCBEPAY",25,0)
 . I '$T S RCERROR="1^Another user is updating the Suspense File Audit Log."  Q
"RTN","RCBEPAY",26,0)
 . ;
"RTN","RCBEPAY",27,0)
 . ;file a "P"ending entry in the Suspense Audit Log File and for the disposition
"RTN","RCBEPAY",28,0)
 . ;if not already there and not $0 payment (auto-adjustment back to FMS).
"RTN","RCBEPAY",29,0)
 . I '$D(^RCY(344,RCRECTDA,1,RCPAYDA,3)),($P($G(^RCY(344,RCRECTDA,1,RCPAYDA,0)),U,4)'=0) D
"RTN","RCBEPAY",30,0)
 . . D AUDIT(RCRECTDA,RCPAYDA,"I")
"RTN","RCBEPAY",31,0)
 . . ;
"RTN","RCBEPAY",32,0)
 . . ;update disposition
"RTN","RCBEPAY",33,0)
 . . D SUSPDIS(RCRECTDA,RCPAYDA,"P")
"RTN","RCBEPAY",34,0)
 ;
"RTN","RCBEPAY",35,0)
 ;  check the payment for errors
"RTN","RCBEPAY",36,0)
 S X=$$CHECKPAY^RCBEPAYC(RCRECTDA,RCPAYDA)
"RTN","RCBEPAY",37,0)
 I X L -^RCY(344,RCRECTDA,1,RCPAYDA) Q X
"RTN","RCBEPAY",38,0)
 ;
"RTN","RCBEPAY",39,0)
 ;  get the payment date from the payment.  if not on payment get it
"RTN","RCBEPAY",40,0)
 ;  from the deposit.  if not on deposit, set equal to today
"RTN","RCBEPAY",41,0)
 S RCPAYDAT=$P($P(RCDATA,"^",6),".") I 'RCPAYDAT S RCPAYDAT=$P($G(^RCY(344.1,+$P(^RCY(344,RCRECTDA,0),"^",6),0)),"^",3) I 'RCPAYDAT S RCPAYDAT=DT
"RTN","RCBEPAY",42,0)
 ;  get the payment amount (amount paid minus amount processed).
"RTN","RCBEPAY",43,0)
 ;  if the payment amount is not greater than zero, do not post.
"RTN","RCBEPAY",44,0)
 S RCPAYAMT=$P(RCDATA,"^",4)-$P(RCDATA,"^",5) I RCPAYAMT'>0 L -^RCY(344,RCRECTDA,1,RCPAYDA) Q 0
"RTN","RCBEPAY",45,0)
 ;
"RTN","RCBEPAY",46,0)
 ;  get the account
"RTN","RCBEPAY",47,0)
 S RCACCT=$P(RCDATA,"^",3)
"RTN","RCBEPAY",48,0)
 ;  if the account is a bill and the debtor is first party,
"RTN","RCBEPAY",49,0)
 ;  then get the account from the debtor file
"RTN","RCBEPAY",50,0)
 I RCACCT["PRCA(430," S X=$P($G(^RCD(340,+$P($G(^PRCA(430,+RCACCT,0)),"^",9),0)),"^") I X["DPT(" S RCACCT=X
"RTN","RCBEPAY",51,0)
 ;
"RTN","RCBEPAY",52,0)
 ;
"RTN","RCBEPAY",53,0)
 ;  ----------------- START PROCESSING PAYMENT -----------------
"RTN","RCBEPAY",54,0)
 ;
"RTN","RCBEPAY",55,0)
 ;  === benefit debt (example: first party account) ===
"RTN","RCBEPAY",56,0)
 I RCACCT["DPT(" D  Q RCERROR
"RTN","RCBEPAY",57,0)
 .   S RCERROR=$$FIRSTPTY^RCBEPAYF
"RTN","RCBEPAY",58,0)
 .   ;  store or clear error
"RTN","RCBEPAY",59,0)
 .   D SETERROR(RCRECTDA,RCPAYDA,$P(RCERROR,"^",2))
"RTN","RCBEPAY",60,0)
 .   L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",61,0)
 ;
"RTN","RCBEPAY",62,0)
 ;
"RTN","RCBEPAY",63,0)
 ;  === non-benefit debt (example: third party) ===
"RTN","RCBEPAY",64,0)
 S RCBILLDA=+$P(RCDATA,"^",3)
"RTN","RCBEPAY",65,0)
 ;  lock the bill to prevent another used from changing the balance
"RTN","RCBEPAY",66,0)
 L +^PRCA(430,RCBILLDA):10
"RTN","RCBEPAY",67,0)
 I '$T D  Q RCERROR
"RTN","RCBEPAY",68,0)
 .   S RCERROR="1^Another user is working with bill "_$P(^PRCA(430,RCBILLDA,0),"^")
"RTN","RCBEPAY",69,0)
 .   D SETERROR(RCRECTDA,RCPAYDA,$P(RCERROR,"^",2))
"RTN","RCBEPAY",70,0)
 .   L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",71,0)
 ;
"RTN","RCBEPAY",72,0)
 ;  exempt any interest/admin/penalty charges added on or after
"RTN","RCBEPAY",73,0)
 ;  the payment date
"RTN","RCBEPAY",74,0)
 D EXEMPT^RCBECHGE(RCBILLDA,RCPAYDAT)
"RTN","RCBEPAY",75,0)
 ;
"RTN","RCBEPAY",76,0)
 ;  once charges have been exempted, recheck the payment for errors
"RTN","RCBEPAY",77,0)
 S X=$$CHECKPAY^RCBEPAYC(RCRECTDA,RCPAYDA)
"RTN","RCBEPAY",78,0)
 I X D  Q RCERROR
"RTN","RCBEPAY",79,0)
 .   S RCERROR="1^"_$P(X,"^",2)
"RTN","RCBEPAY",80,0)
 .   D SETERROR(RCRECTDA,RCPAYDA,$P(RCERROR,"^",2))
"RTN","RCBEPAY",81,0)
 .   L -^PRCA(430,RCBILLDA)
"RTN","RCBEPAY",82,0)
 .   L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",83,0)
 ;
"RTN","RCBEPAY",84,0)
 ;  apply payment to bill
"RTN","RCBEPAY",85,0)
 ;  return error if problem adding payment transaction
"RTN","RCBEPAY",86,0)
 S RCTRANDA=$$PAYTRAN^RCBEPAY1(RCBILLDA,RCPAYAMT,RCRECTDA,RCPAYDA,RCPAYDAT)
"RTN","RCBEPAY",87,0)
 I 'RCTRANDA D  Q RCERROR
"RTN","RCBEPAY",88,0)
 .   S RCERROR="1^"_$P(RCTRANDA,"^",2)
"RTN","RCBEPAY",89,0)
 .   D SETERROR(RCRECTDA,RCPAYDA,$P(RCERROR,"^",2))
"RTN","RCBEPAY",90,0)
 .   L -^PRCA(430,RCBILLDA)
"RTN","RCBEPAY",91,0)
 .   L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",92,0)
 ;
"RTN","RCBEPAY",93,0)
 ;  set the amount processed in the receipt
"RTN","RCBEPAY",94,0)
 D SETAMT(RCRECTDA,RCPAYDA,$P($G(^PRCA(433,RCTRANDA,1)),"^",5))
"RTN","RCBEPAY",95,0)
 ;
"RTN","RCBEPAY",96,0)
 ;  payment applied to bill
"RTN","RCBEPAY",97,0)
 D SETERROR(RCRECTDA,RCPAYDA,"")
"RTN","RCBEPAY",98,0)
 L -^PRCA(430,RCBILLDA)
"RTN","RCBEPAY",99,0)
 L -^RCY(344,RCRECTDA,1,RCPAYDA)
"RTN","RCBEPAY",100,0)
 Q 0
"RTN","RCBEPAY",101,0)
 ;
"RTN","RCBEPAY",102,0)
 ;
"RTN","RCBEPAY",103,0)
SETAMT(RCRECTDA,RCPAYDA,RCAMOUNT) ;  update the amount posted on the receipt
"RTN","RCBEPAY",104,0)
 N DATA
"RTN","RCBEPAY",105,0)
 S DATA=$G(^RCY(344,RCRECTDA,1,RCPAYDA,0))
"RTN","RCBEPAY",106,0)
 I DATA="" Q
"RTN","RCBEPAY",107,0)
 S $P(^RCY(344,RCRECTDA,1,RCPAYDA,0),"^",5)=$P(DATA,"^",5)+RCAMOUNT
"RTN","RCBEPAY",108,0)
 Q
"RTN","RCBEPAY",109,0)
 ;
"RTN","RCBEPAY",110,0)
 ;
"RTN","RCBEPAY",111,0)
SETERROR(RCRECTDA,RCPAYDA,RCERROR) ;  store the error on the receipt
"RTN","RCBEPAY",112,0)
 ;  or clear the posting error if null and defined
"RTN","RCBEPAY",113,0)
 ;  error is null and posting error data in file is null
"RTN","RCBEPAY",114,0)
 I RCERROR="",$P($G(^RCY(344,RCRECTDA,1,RCPAYDA,1)),"^")="" Q
"RTN","RCBEPAY",115,0)
 ;  error is null, clear posting error
"RTN","RCBEPAY",116,0)
 I RCERROR="" S $P(^RCY(344,RCRECTDA,1,RCPAYDA,1),"^")="" Q
"RTN","RCBEPAY",117,0)
 ;  error exists, set the posting error
"RTN","RCBEPAY",118,0)
 I RCERROR'="" S $P(^RCY(344,RCRECTDA,1,RCPAYDA,1),"^")=$E(RCERROR,1,60)
"RTN","RCBEPAY",119,0)
 Q
"RTN","RCBEPAY",120,0)
 ;
"RTN","RCBEPAY",121,0)
 ;
"RTN","RCBEPAY",122,0)
AUDIT(RCRECTDA,RCPAYDA,RCSTAT,RCMTS) ; store entry in Suspense Audit Log
"RTN","RCBEPAY",123,0)
 ; Input
"RTN","RCBEPAY",124,0)
 ;  RCRECTDA - IEN of Receipt file #344
"RTN","RCBEPAY",125,0)
 ;  RCPAYDA  - IEN of Receipt Transaction file #344.01
"RTN","RCBEPAY",126,0)
 ;  RCSTAT -   Status  I = In Suspense, P = Paid  or R = Refund
"RTN","RCBEPAY",127,0)
 ;  RCMTS(N) - Array of Multi-Trans split information (OPTIONAL) 
"RTN","RCBEPAY",128,0)
 ;      $P(2) = AMOUNT
"RTN","RCBEPAY",129,0)
 ;      $P(3) = Suspense comment 
"RTN","RCBEPAY",130,0)
 ;      $P(4) = Account/Claim
"RTN","RCBEPAY",131,0)
 ;    e.g.
"RTN","RCBEPAY",132,0)
 ;      RCMTS(1)="290613;PRCA(430,^2^^K100005"
"RTN","RCBEPAY",133,0)
 ;      RCMTS(2)="290618;PRCA(430,^2^^K100010"
"RTN","RCBEPAY",134,0)
 ;      RCMTS(3)="^2.42^Collected/Closed^"
"RTN","RCBEPAY",135,0)
 ;
"RTN","RCBEPAY",136,0)
 ; Output - Update RCDPE SUSPENSE AUDIT file #344.71 
"RTN","RCBEPAY",137,0)
 N FDAIEN,RCAUDIT,RCDATA,RCDATA1,RCDATA0 ; PRCA*4.5*326
"RTN","RCBEPAY",138,0)
 ;
"RTN","RCBEPAY",139,0)
 ; get the data elements
"RTN","RCBEPAY",140,0)
 S RCDATA=$G(^RCY(344,RCRECTDA,0))  ;double check these
"RTN","RCBEPAY",141,0)
 S RCDATA0=$G(^RCY(344,RCRECTDA,1,RCPAYDA,0))
"RTN","RCBEPAY",142,0)
 S RCDATA1=$G(^RCY(344,RCRECTDA,1,RCPAYDA,1))
"RTN","RCBEPAY",143,0)
 ;
"RTN","RCBEPAY",144,0)
 ; set up array
"RTN","RCBEPAY",145,0)
 S RCAUDIT(344.71,"+1,",.01)=$$NOW^XLFDT      ;Date/Time Stamp
"RTN","RCBEPAY",146,0)
 S RCAUDIT(344.71,"+1,",.02)=DUZ              ;User
"RTN","RCBEPAY",147,0)
 S RCAUDIT(344.71,"+1,",.03)=$P(RCDATA,U,1)   ;Receipt #
"RTN","RCBEPAY",148,0)
 S RCAUDIT(344.71,"+1,",.04)=RCPAYDA          ;Transaction #
"RTN","RCBEPAY",149,0)
 S RCAUDIT(344.71,"+1,",.05)=$P(RCDATA0,U,4)  ;Amount
"RTN","RCBEPAY",150,0)
 S RCAUDIT(344.71,"+1,",.06)=$P(RCDATA0,U,9)  ;Claim #
"RTN","RCBEPAY",151,0)
 S RCAUDIT(344.71,"+1,",.07)=RCSTAT           ;Status
"RTN","RCBEPAY",152,0)
 S RCAUDIT(344.71,"+1,",.08)=$P(RCDATA1,U,2)  ;Reason text
"RTN","RCBEPAY",153,0)
 ;
"RTN","RCBEPAY",154,0)
 ;file entry
"RTN","RCBEPAY",155,0)
 D UPDATE^DIE(,"RCAUDIT","FDAIEN") ; Added FDAIEN - PRCA*4.5*326
"RTN","RCBEPAY",156,0)
 ;
"RTN","RCBEPAY",157,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCBEPAY",158,0)
 ; check if filing was successful
"RTN","RCBEPAY",159,0)
 Q:'$G(FDAIEN(1))
"RTN","RCBEPAY",160,0)
 ; if this is a multi-trans split update #344.711
"RTN","RCBEPAY",161,0)
 Q:'$D(RCMTS)
"RTN","RCBEPAY",162,0)
 ; 
"RTN","RCBEPAY",163,0)
 N DA,DD,DIC,DLAYGO,DO,DR,RCACC,RCAMT,RCCOM,RCSUB,X,Y,Z
"RTN","RCBEPAY",164,0)
 ; Save details of each claim/suspense line in the split
"RTN","RCBEPAY",165,0)
 S RCSUB=0
"RTN","RCBEPAY",166,0)
 F  S RCSUB=$O(RCMTS(RCSUB)) Q:'RCSUB  D
"RTN","RCBEPAY",167,0)
 .S RCAMT=$P(RCMTS(RCSUB),U,2)
"RTN","RCBEPAY",168,0)
 .S RCCOM=$P(RCMTS(RCSUB),U,3)
"RTN","RCBEPAY",169,0)
 .S RCACC=$P(RCMTS(RCSUB),U,4)
"RTN","RCBEPAY",170,0)
 .S:RCACC="" RCACC="SUSPENSE"
"RTN","RCBEPAY",171,0)
 .S DLAYGO=344.711,DA(1)=FDAIEN(1),DIC(0)="L",X=RCSUB,DIC="^RCY(344.71,"_DA(1)_",1,"
"RTN","RCBEPAY",172,0)
 .S DIC("DR")=".02///"_RCACC_";.03///"_$J(+RCAMT,"",2)_";.04///"_RCCOM
"RTN","RCBEPAY",173,0)
 .D FILE^DICN
"RTN","RCBEPAY",174,0)
 .K DIC,DD,DO,DLAYGO
"RTN","RCBEPAY",175,0)
 Q
"RTN","RCBEPAY",176,0)
 ; END PRCA*4.5*326
"RTN","RCBEPAY",177,0)
 ;
"RTN","RCBEPAY",178,0)
SUSPDIS(RCRECTDA,RCTRANDA,RCSTAT) ;Update the disposition field
"RTN","RCBEPAY",179,0)
 ;
"RTN","RCBEPAY",180,0)
 N DA,DR,DIE,DTOUT
"RTN","RCBEPAY",181,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCBEPAY",182,0)
 S DR="3.01////"_RCSTAT_";"
"RTN","RCBEPAY",183,0)
 I RCSTAT="P" D
"RTN","RCBEPAY",184,0)
 . S DR=DR_"3.02////"_$$NOW^XLFDT_";"
"RTN","RCBEPAY",185,0)
 . S DR=DR_"3.03////"_DUZ_";"
"RTN","RCBEPAY",186,0)
 I RCSTAT'="P" D
"RTN","RCBEPAY",187,0)
 . S DR=DR_"3.04////"_$$NOW^XLFDT_";"
"RTN","RCBEPAY",188,0)
 . S DR=DR_"3.05////"_DUZ_";"
"RTN","RCBEPAY",189,0)
 S DR=$P(DR,";",1,$L(DR,";")-1)
"RTN","RCBEPAY",190,0)
 ;
"RTN","RCBEPAY",191,0)
 D ^DIE
"RTN","RCBEPAY",192,0)
 Q
"RTN","RCBEPAY",193,0)
 ; 
"RTN","RCBEUTRA")
0^30^B30280657
"RTN","RCBEUTRA",1,0)
RCBEUTRA ;WISC/RFJ-utilties for transactions (in file 433)           ;1 Jun 00
"RTN","RCBEUTRA",2,0)
 ;;4.5;Accounts Receivable;**153,169,204,326**;Mar 20, 1995;Build 26
"RTN","RCBEUTRA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCBEUTRA",4,0)
 Q
"RTN","RCBEUTRA",5,0)
 ;
"RTN","RCBEUTRA",6,0)
 ;
"RTN","RCBEUTRA",7,0)
ADD433(BILLDA,TRANTYPE) ;  add a new transaction to file 433 (silent)
"RTN","RCBEUTRA",8,0)
 ;  return: ien of 433 transaction or 0^error msg
"RTN","RCBEUTRA",9,0)
 ;        : ^prca(433,ien) will be locked if entry selected
"RTN","RCBEUTRA",10,0)
 ; Input - optional variable RCDUZ for the processed by user. SET in ^RCDPEAP from MARKED FOR AUTOPOST USER. PRCA*4.5*326 
"RTN","RCBEUTRA",11,0)
 N %I,DA,DATA0,DD,DIC,DICR,DIE,DINUM,DIW,DLAYGO,DO,I,RCTRANDA,REFCODE,X,Y
"RTN","RCBEUTRA",12,0)
 ;
"RTN","RCBEUTRA",13,0)
 ;  find next available transaction number
"RTN","RCBEUTRA",14,0)
 ;  add an extra level of locks, some operating systems do not process
"RTN","RCBEUTRA",15,0)
 ;  the locks correctly if they happen at the same time.
"RTN","RCBEUTRA",16,0)
 L +^PRCA(433,"ADDNEWENTRY")
"RTN","RCBEUTRA",17,0)
 ;  start with last entry in file
"RTN","RCBEUTRA",18,0)
 ;    -> if no data is in the entry, lock it
"RTN","RCBEUTRA",19,0)
 ;       -> if the lock works and no data was added (prior to the lock)
"RTN","RCBEUTRA",20,0)
 ;          -> then you have the entry.
"RTN","RCBEUTRA",21,0)
 ;          -> otherwise, unlock it and start over
"RTN","RCBEUTRA",22,0)
 F DINUM=$P(^PRCA(433,0),"^",3)+1:1 I '$D(^PRCA(433,DINUM)) L +^PRCA(433,DINUM):1 Q:$T&('$D(^PRCA(433,DINUM)))  L -^PRCA(433,DINUM)
"RTN","RCBEUTRA",23,0)
 L -^PRCA(433,"ADDNEWENTRY")
"RTN","RCBEUTRA",24,0)
 ;
"RTN","RCBEUTRA",25,0)
 ;  add entry to file
"RTN","RCBEUTRA",26,0)
 S RCTRANDA=DINUM,(DIC,DIE)="^PRCA(433,",DIC(0)="L",DLAYGO=433,X=DINUM
"RTN","RCBEUTRA",27,0)
 ;  build DR string, 42=processed by (use postmaster if queued)
"RTN","RCBEUTRA",28,0)
 S DIC("DR")="42////"_$S($G(RCDUZ):RCDUZ,$D(ZTQUEUED):.5,1:DUZ)_";" ; PRCA*4.5*326 Use RCDUZ if defined
"RTN","RCBEUTRA",29,0)
 S DIC("DR")=DIC("DR")_".03////"_BILLDA_";"  ;bill ien
"RTN","RCBEUTRA",30,0)
 S DIC("DR")=DIC("DR")_"12////"_TRANTYPE_";" ;transaction type
"RTN","RCBEUTRA",31,0)
 S DATA0=$G(^PRCA(430,BILLDA,0))
"RTN","RCBEUTRA",32,0)
 ;  appropriation symbol
"RTN","RCBEUTRA",33,0)
 I $P(DATA0,"^",18)'="" S DIC("DR")=DIC("DR")_"8////"_$P(DATA0,"^",18)_";"
"RTN","RCBEUTRA",34,0)
 ;  segment
"RTN","RCBEUTRA",35,0)
 I $P(DATA0,"^",21)'="" S DIC("DR")=DIC("DR")_"6////"_$P(DATA0,"^",21)_";"
"RTN","RCBEUTRA",36,0)
 ;  test for referral code
"RTN","RCBEUTRA",37,0)
 S REFCODE=$P($G(^PRCA(430,BILLDA,6)),"^",5)
"RTN","RCBEUTRA",38,0)
 I REFCODE'="" S REFCODE=$S(REFCODE="DC":"RC",1:REFCODE),DIC("DR")=DIC("DR")_"7////"_REFCODE_";"
"RTN","RCBEUTRA",39,0)
 ;  file it
"RTN","RCBEUTRA",40,0)
 D FILE^DICN
"RTN","RCBEUTRA",41,0)
 I Y=-1 L -^PRCA(433,RCTRANDA) Q "0^UNABLE TO ADD A NEW ENTRY TO FILE 433"
"RTN","RCBEUTRA",42,0)
 Q RCTRANDA
"RTN","RCBEUTRA",43,0)
 ;
"RTN","RCBEUTRA",44,0)
 ;
"RTN","RCBEUTRA",45,0)
FY433(RCTRANDA) ;  transfer fiscal year multiple from 430 to 433
"RTN","RCBEUTRA",46,0)
 ;  bill number must be stored in file 433, field .03 before calling
"RTN","RCBEUTRA",47,0)
 N BILLDA,FY,FYDATA
"RTN","RCBEUTRA",48,0)
 S BILLDA=+$P($G(^PRCA(433,RCTRANDA,0)),"^",2) I 'BILLDA Q
"RTN","RCBEUTRA",49,0)
 K ^PRCA(433,RCTRANDA,4)
"RTN","RCBEUTRA",50,0)
 S FY=0 F  S FY=$O(^PRCA(430,BILLDA,2,FY)) Q:'FY  D
"RTN","RCBEUTRA",51,0)
 .   S FYDATA=$G(^PRCA(430,BILLDA,2,FY,0)) I $P(FYDATA,"^")="" Q
"RTN","RCBEUTRA",52,0)
 .   S ^PRCA(433,RCTRANDA,4,FY,0)=$P(FYDATA,"^",1,3)_"^1"
"RTN","RCBEUTRA",53,0)
 .   S ^PRCA(433,RCTRANDA,4,"B",$P(FYDATA,"^"),FY)=""
"RTN","RCBEUTRA",54,0)
 ;
"RTN","RCBEUTRA",55,0)
 S ^PRCA(433,RCTRANDA,4,0)="^433.01I^"_$P($G(^PRCA(430,BILLDA,2,0)),"^",3,4)
"RTN","RCBEUTRA",56,0)
 Q
"RTN","RCBEUTRA",57,0)
 ;
"RTN","RCBEUTRA",58,0)
 ;
"RTN","RCBEUTRA",59,0)
FYMULT(RCTRANDA) ;  apply payment to fy multiple, oldest first
"RTN","RCBEUTRA",60,0)
 N AMOUNT,FYDA,FYAMOUNT
"RTN","RCBEUTRA",61,0)
 ;  transfer fy multiple if not there
"RTN","RCBEUTRA",62,0)
 I '$D(^PRCA(433,RCTRANDA,4)) D FY433(RCTRANDA)
"RTN","RCBEUTRA",63,0)
 ;  amount is principal amount
"RTN","RCBEUTRA",64,0)
 S AMOUNT=$P($$TRANVALU^RCDPBTLM(RCTRANDA),"^",2) I 'AMOUNT Q
"RTN","RCBEUTRA",65,0)
 ;
"RTN","RCBEUTRA",66,0)
 ;  the transaction value is minus, decrease principal
"RTN","RCBEUTRA",67,0)
 I AMOUNT<0 D  Q
"RTN","RCBEUTRA",68,0)
 .   S AMOUNT=-AMOUNT
"RTN","RCBEUTRA",69,0)
 .   S FYDA=0 F  S FYDA=$O(^PRCA(433,RCTRANDA,4,FYDA)) Q:'FYDA  D  I 'AMOUNT Q
"RTN","RCBEUTRA",70,0)
 .   .   S FYAMOUNT=$P($G(^PRCA(433,RCTRANDA,4,FYDA,0)),"^",2)
"RTN","RCBEUTRA",71,0)
 .   .   ;  fy amount is greater than transaction amount
"RTN","RCBEUTRA",72,0)
 .   .   I FYAMOUNT>AMOUNT D  Q
"RTN","RCBEUTRA",73,0)
 .   .   .   S $P(^PRCA(433,RCTRANDA,4,FYDA,0),"^",2)=FYAMOUNT-AMOUNT
"RTN","RCBEUTRA",74,0)
 .   .   .   S $P(^PRCA(433,RCTRANDA,4,FYDA,0),"^",5)=AMOUNT
"RTN","RCBEUTRA",75,0)
 .   .   .   S AMOUNT=0
"RTN","RCBEUTRA",76,0)
 .   .   ;  fy amount not greater than total amount
"RTN","RCBEUTRA",77,0)
 .   .   S $P(^PRCA(433,RCTRANDA,4,FYDA,0),"^",2)=0
"RTN","RCBEUTRA",78,0)
 .   .   S $P(^PRCA(433,RCTRANDA,4,FYDA,0),"^",5)=FYAMOUNT
"RTN","RCBEUTRA",79,0)
 .   .   S AMOUNT=AMOUNT-FYAMOUNT
"RTN","RCBEUTRA",80,0)
 .   ;  move back to 430
"RTN","RCBEUTRA",81,0)
 .   D FYMULT^RCBEUBIL(RCTRANDA)
"RTN","RCBEUTRA",82,0)
 ;
"RTN","RCBEUTRA",83,0)
 ;  the transaction value is plus, increase principal
"RTN","RCBEUTRA",84,0)
 S FYDA=$O(^PRCA(433,RCTRANDA,4,999),-1) I 'FYDA Q
"RTN","RCBEUTRA",85,0)
 S $P(^PRCA(433,RCTRANDA,4,FYDA,0),"^",2)=$P(^PRCA(433,RCTRANDA,4,FYDA,0),"^",2)+AMOUNT
"RTN","RCBEUTRA",86,0)
 S $P(^PRCA(433,RCTRANDA,4,FYDA,0),"^",5)=AMOUNT
"RTN","RCBEUTRA",87,0)
 ;  move back to 430
"RTN","RCBEUTRA",88,0)
 D FYMULT^RCBEUBIL(RCTRANDA)
"RTN","RCBEUTRA",89,0)
 Q
"RTN","RCBEUTRA",90,0)
 ;
"RTN","RCBEUTRA",91,0)
 ;
"RTN","RCBEUTRA",92,0)
EDIT433(RCTRANDA,DR) ;  edit the field in 433 with the DR string passed
"RTN","RCBEUTRA",93,0)
 I '$D(^PRCA(433,RCTRANDA)) Q
"RTN","RCBEUTRA",94,0)
 N %,D,D0,D1,DA,DDH,DI,DIC,DIE,DQ,J,X,Y
"RTN","RCBEUTRA",95,0)
 S (DIC,DIE)="^PRCA(433,",DA=RCTRANDA
"RTN","RCBEUTRA",96,0)
 D ^DIE
"RTN","RCBEUTRA",97,0)
 ;  user pressed up-arrow
"RTN","RCBEUTRA",98,0)
 I $D(Y) Q "0^TRANSACTION NOT COMPLETELY PROCESSED"
"RTN","RCBEUTRA",99,0)
 Q 1
"RTN","RCBEUTRA",100,0)
 ;
"RTN","RCBEUTRA",101,0)
 ;
"RTN","RCBEUTRA",102,0)
PROCESS(RCTRANDA) ;  mark transaction as processed
"RTN","RCBEUTRA",103,0)
 I '$D(^PRCA(433,RCTRANDA,0)) Q
"RTN","RCBEUTRA",104,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCBEUTRA",105,0)
 S (DIC,DIE)="^PRCA(433,",DA=RCTRANDA
"RTN","RCBEUTRA",106,0)
 S DR="3////0;4////2;"
"RTN","RCBEUTRA",107,0)
 D ^DIE
"RTN","RCBEUTRA",108,0)
 Q
"RTN","RCBEUTRA",109,0)
 ;
"RTN","RCBEUTRA",110,0)
 ;
"RTN","RCBEUTRA",111,0)
INCOMPLE(RCTRANDA) ;  opposite of processed, make a transaction incomplete
"RTN","RCBEUTRA",112,0)
 I '$D(^PRCA(433,RCTRANDA,0)) Q
"RTN","RCBEUTRA",113,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCBEUTRA",114,0)
 S (DIC,DIE)="^PRCA(433,",DA=RCTRANDA
"RTN","RCBEUTRA",115,0)
 S DR="4////1;"
"RTN","RCBEUTRA",116,0)
 D ^DIE
"RTN","RCBEUTRA",117,0)
 Q
"RTN","RCBEUTRA",118,0)
 ;
"RTN","RCBEUTRA",119,0)
 ;
"RTN","RCBEUTRA",120,0)
DEL433(RCTRANDA,COMMENT,ARCHIVE) ;  delete (mark incomplete) in file 433
"RTN","RCBEUTRA",121,0)
 ;  comment is the user comment in field 41 (default USER CANCELLED)
"RTN","RCBEUTRA",122,0)
 ;  archive is set to 1 if called to archive transaction
"RTN","RCBEUTRA",123,0)
 I '$D(^PRCA(433,RCTRANDA,0)) Q
"RTN","RCBEUTRA",124,0)
 N %,D,D0,DA,DI,DIC,DIE,DQ,DR,J,RCBILLDA,X,Y
"RTN","RCBEUTRA",125,0)
 ;
"RTN","RCBEUTRA",126,0)
 S (DIC,DIE)="^PRCA(433,",DA=RCTRANDA
"RTN","RCBEUTRA",127,0)
 ;  build DR string
"RTN","RCBEUTRA",128,0)
 S DR=""
"RTN","RCBEUTRA",129,0)
 S DR=DR_"4////1;"  ;transaction status incomplete
"RTN","RCBEUTRA",130,0)
 S DR=DR_"10////1;" ;incomplete transaction flag
"RTN","RCBEUTRA",131,0)
 S DR=DR_"11///T;"  ;transaction date
"RTN","RCBEUTRA",132,0)
 I $G(COMMENT)="" S COMMENT="USER CANCELLED"
"RTN","RCBEUTRA",133,0)
 S DR=DR_"41///"_COMMENT_";"
"RTN","RCBEUTRA",134,0)
 ;  brief comment
"RTN","RCBEUTRA",135,0)
 S RCBILLDA=$P($G(^PRCA(433,RCTRANDA,0)),"^",2)
"RTN","RCBEUTRA",136,0)
 S DR=DR_"5.02////SYSTEM "_$S($G(ARCHIVE):"ARCHIVED",1:"INACTIVATED")_$S(RCBILLDA:" (BILL "_$P($G(^PRCA(430,RCBILLDA,0)),"^")_")",1:"")_";"
"RTN","RCBEUTRA",137,0)
 D ^DIE
"RTN","RCBEUTRA",138,0)
 ;  since the bill number (field .03) is required, it must be manually removed
"RTN","RCBEUTRA",139,0)
 I RCBILLDA S $P(^PRCA(433,RCTRANDA,0),"^",2)="" K ^PRCA(433,"C",RCBILLDA,RCTRANDA)
"RTN","RCBEUTRA",140,0)
 ;  remove fy multiple
"RTN","RCBEUTRA",141,0)
 K ^PRCA(433,RCTRANDA,4)
"RTN","RCBEUTRA",142,0)
 Q
"RTN","RCBEUTRA",143,0)
 ;
"RTN","RCBEUTRA",144,0)
 ;
"RTN","RCBEUTRA",145,0)
ADDCOMM(RCTRANDA,COMMENT) ;  automatically put a comment on a transaction
"RTN","RCBEUTRA",146,0)
 ;  comment in the array comment(1)=first line
"RTN","RCBEUTRA",147,0)
 ;                       comment(2)=second line
"RTN","RCBEUTRA",148,0)
 N CURRLINE,LINE
"RTN","RCBEUTRA",149,0)
 ;  get the last line
"RTN","RCBEUTRA",150,0)
 S CURRLINE=$O(^PRCA(433,RCTRANDA,7,99999999),-1)
"RTN","RCBEUTRA",151,0)
 ;  if comment already on transaction, add a blank line and
"RTN","RCBEUTRA",152,0)
 ;  date time of new comment
"RTN","RCBEUTRA",153,0)
 I CURRLINE D
"RTN","RCBEUTRA",154,0)
 .   S CURRLINE=CURRLINE+1,^PRCA(433,RCTRANDA,7,CURRLINE,0)=" "
"RTN","RCBEUTRA",155,0)
 .   S CURRLINE=CURRLINE+1,^PRCA(433,RCTRANDA,7,CURRLINE,0)="Comment added on: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","RCBEUTRA",156,0)
 ;  add new lines
"RTN","RCBEUTRA",157,0)
 F LINE=1:1 Q:'$D(COMMENT(LINE))  S ^PRCA(433,RCTRANDA,7,CURRLINE+LINE,0)=COMMENT(LINE)
"RTN","RCBEUTRA",158,0)
 ;  set the 0th node
"RTN","RCBEUTRA",159,0)
 S ^PRCA(433,RCTRANDA,7,0)="^^"_(CURRLINE+LINE-1)_"^"_(CURRLINE+LINE-1)_"^"_DT_"^"
"RTN","RCBEUTRA",160,0)
 Q
"RTN","RCBEUTRA",161,0)
FMSDATE(X) ;Finds the next month & year and sets the date for transmission
"RTN","RCBEUTRA",162,0)
 ;of the document to FMS.  If DT is after EOAM and the document has not
"RTN","RCBEUTRA",163,0)
 ;been previously transmitted, the date will be set to the first of the
"RTN","RCBEUTRA",164,0)
 ;next month.  If the DT is after the EOAM and the document is being 
"RTN","RCBEUTRA",165,0)
 ;re-transmitted, the the date of transmission will be DT. The flag REGEN
"RTN","RCBEUTRA",166,0)
 ;is set in the source code if the document is being 
"RTN","RCBEUTRA",167,0)
 ;re-transmitted, thus will have a transmission date of DT.
"RTN","RCBEUTRA",168,0)
 I $G(REFMS) G QUIT
"RTN","RCBEUTRA",169,0)
 I DT>$$LDATE^RCRJR(DT) S X=$E($$FPS^RCAMFN01(X,1),1,5)_"01"
"RTN","RCBEUTRA",170,0)
QUIT Q X
"RTN","RCDPARC")
0^35^B191533427
"RTN","RCDPARC",1,0)
RCDPARC ;ALB/TJB - CARC REPORT ON PAYER OR CARC CODE ;9/15/14 3:00pm
"RTN","RCDPARC",2,0)
 ;;4.5;Accounts Receivable;**303,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPARC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPARC",4,0)
 Q
"RTN","RCDPARC",5,0)
 ; PRCA*4.5*303 - CARC and Payer report
"RTN","RCDPARC",6,0)
 ; DESCRIPTION :
"RTN","RCDPARC",7,0)
 ;   The following generates a report that displays selected or all
"RTN","RCDPARC",8,0)
 ;   CARC Codes and Payers and totals the amounts for each CARC code.
"RTN","RCDPARC",9,0)
 ;   several filters may be used to limit the CARC codes or Payer information
"RTN","RCDPARC",10,0)
 ;   to be displayed:
"RTN","RCDPARC",11,0)
EN ; Entry point for Report
"RTN","RCDPARC",12,0)
 N DUOUT,DTOUT,DIR,X,Y,RCDT1,RCDT2,RCDET,ZTRTN,ZTSK,ZTDESC,ZTSAVE,ZTSTOP,%ZIS,POP,DTOK,DIVHDR,CRHDR
"RTN","RCDPARC",13,0)
 N RCDIV,RCINC,VAUTD,RCLAIM,RCRANGE,RCNP,RCJOB,RCNP1,RCPG,RCNOW,RCHR,RCODE,RCPAR,RCPAY,RCRARC,RCSTOP,RCWHICH,EX
"RTN","RCDPARC",14,0)
 S RCRARC=0,RCSTOP=0
"RTN","RCDPARC",15,0)
 ; ICR 1077 - Get division/station
"RTN","RCDPARC",16,0)
 D DIVISION^VAUTOMA
"RTN","RCDPARC",17,0)
 I 'VAUTD&($D(VAUTD)'=11) G ARCQ
"RTN","RCDPARC",18,0)
 ;
"RTN","RCDPARC",19,0)
 S DIR("A")="(S)ummary or(D)etail Report format?: ",DIR(0)="SA^S:Summary Information only;D:Detail and Totals"
"RTN","RCDPARC",20,0)
 S DIR("B")="SUMMARY" D ^DIR K DIR
"RTN","RCDPARC",21,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G ARCQ
"RTN","RCDPARC",22,0)
 S RCDET=($E(Y,1)="D")
"RTN","RCDPARC",23,0)
 ; Get CARC Codes for report
"RTN","RCDPARC",24,0)
 D GCARC^RCDPCRR(.RCODE) G:RCSTOP ARCQ
"RTN","RCDPARC",25,0)
 ;
"RTN","RCDPARC",26,0)
 S RCRARC=0 ; Set RARCs not to display on report, but keep around just in case Susan changes her mind.
"RTN","RCDPARC",27,0)
 ;
"RTN","RCDPARC",28,0)
 S RCLAIM=$$RTYPE^RCDPEU1("A") G:RCLAIM=-1 ARCQ ; Payer Type
"RTN","RCDPARC",29,0)
 ; Get Payer information
"RTN","RCDPARC",30,0)
 S RCWHICH=$$NMORTIN^RCDPEAPP() G:RCWHICH=-1 ARCQ   ; Filter by Payer Name or TIN
"RTN","RCDPARC",31,0)
 ;
"RTN","RCDPARC",32,0)
 S RCPAR("SELC")=$$PAYRNG^RCDPEU1(1,1,RCWHICH)      ; PRCA*4.5*326 - Selected or Range of Payers
"RTN","RCDPARC",33,0)
 G:RCPAR("SELC")=-1 ARCQ                            ; PRCA*4.5*326 '^' or timeout
"RTN","RCDPARC",34,0)
 S RCPAY=RCPAR("SELC")
"RTN","RCDPARC",35,0)
 ;
"RTN","RCDPARC",36,0)
 I RCPAR("SELC")'="A" D  G:XX=-1 ARCQ               ; PRCA*4.5*326 - Since we don't want all payers 
"RTN","RCDPARC",37,0)
 . S RCPAR("TYPE")=RCLAIM                           ;         prompt for payers we do want
"RTN","RCDPARC",38,0)
 . S RCPAR("SRCH")=$S(RCWHICH=2:"T",1:"N")
"RTN","RCDPARC",39,0)
 . S RCPAR("FILE")=344.4
"RTN","RCDPARC",40,0)
 . S RCPAR("DICA")="Select Insurance Company"_$S(RCWHICH=1:" NAME: ",1:" TIN: ")
"RTN","RCDPARC",41,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPARC",42,0)
 ;
"RTN","RCDPARC",43,0)
 S DIR("A")="Sort Report by (C)ARC or (P)ayer?: ",DIR(0)="SA^P:Payer Name;CARC: CARC Codes;C:CARC Codes"
"RTN","RCDPARC",44,0)
 S DIR("B")="CARC" D ^DIR K DIR
"RTN","RCDPARC",45,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G ARCQ
"RTN","RCDPARC",46,0)
 S RCSORT=$E(Y,1)
"RTN","RCDPARC",47,0)
 ;
"RTN","RCDPARC",48,0)
 S DIR("?")="Enter the Beginning date for the report"
"RTN","RCDPARC",49,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: ",DIR("B")="T" D ^DIR K DIR
"RTN","RCDPARC",50,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G ARCQ
"RTN","RCDPARC",51,0)
 S RCDT1=Y
"RTN","RCDPARC",52,0)
 S DIR("?")="Enter the end date for the report"
"RTN","RCDPARC",53,0)
 S DIR("B")=$$DATE^RCDPRU($P($$NOW^XLFDT,"."),"2Z")
"RTN","RCDPARC",54,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")="T" D ^DIR K DIR
"RTN","RCDPARC",55,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G ARCQ
"RTN","RCDPARC",56,0)
 S RCDT2=Y
"RTN","RCDPARC",57,0)
 S DTOK=$$CHECKDT^RCDPRU(RCDT1,RCDT2,361.1)
"RTN","RCDPARC",58,0)
 I 'DTOK W !!,"*** Note: Date Range "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2)," ***",! W "*** No Records found ***",! D ASK^RCDPRU(.RCSTOP) G ARCQ
"RTN","RCDPARC",59,0)
 ; Get input to export to excel. Removed per Susan (03/24/2015)
"RTN","RCDPARC",60,0)
 S RCEXCEL=0
"RTN","RCDPARC",61,0)
 ;
"RTN","RCDPARC",62,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPARC",63,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPARC",64,0)
 . S ZTRTN="ENQ^RCDPARC",ZTDESC="AR - 835 CARC & PAYER DATA REPORT",ZTSAVE("*")=""
"RTN","RCDPARC",65,0)
 . D ^%ZTLOAD
"RTN","RCDPARC",66,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPARC",67,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPARC",68,0)
 U IO
"RTN","RCDPARC",69,0)
 ;
"RTN","RCDPARC",70,0)
ENQ ; Queue point for report.
"RTN","RCDPARC",71,0)
 S RCNOW=$$NOW^RCDPRU(),RCPG=0,$P(RCHR,"=",IOM)=""
"RTN","RCDPARC",72,0)
 ;
"RTN","RCDPARC",73,0)
 K ^TMP("RCDPARC_REPORT",$J)
"RTN","RCDPARC",74,0)
 ; Collect the data and put it into the ^TMP global
"RTN","RCDPARC",75,0)
 D GETDATA($G(RCODE("CARC")),.RCPAY,.RCTIN,$G(RCSORT),$G(RCRARC),RCDT1,RCDT2,$NA(^TMP("RCDPARC_REPORT",$J)),.VAUTD)
"RTN","RCDPARC",76,0)
 ;
"RTN","RCDPARC",77,0)
REPORT ; Print out the report
"RTN","RCDPARC",78,0)
 ; Set up Division Header Text and CARC Header Text
"RTN","RCDPARC",79,0)
 S:VAUTD=1 DIVHDR="ALL" D:VAUTD=0
"RTN","RCDPARC",80,0)
 . N I S DIVHDR="",I="" F  S I=$O(VAUTD(I)) Q:I=""  S:DIVHDR'="" DIVHDR=DIVHDR_", "_VAUTD(I) S:DIVHDR="" DIVHDR=VAUTD(I)
"RTN","RCDPARC",81,0)
 I RCODE("CARC")="ALL" S CRHDR="ALL"
"RTN","RCDPARC",82,0)
 E  S CRHDR=RCODE("CARC")
"RTN","RCDPARC",83,0)
 ; Trim information so it will fit on an 80 or IOM character line
"RTN","RCDPARC",84,0)
 D:($L(DIVHDR)+$L(CRHDR))>(IOM-25)
"RTN","RCDPARC",85,0)
 . N VAL,DH,CH,R1,R2 S DH=0,CH=0,R1=0,R2=0,VAL=(IOM-25)\2 ; get half of the screen length
"RTN","RCDPARC",86,0)
 . S:$L(DIVHDR)>VAL DH=1 S:$L(CRHDR)>VAL CH=1 S:DH=0 R1=VAL-$L(DIVHDR) S:CH=0 R2=VAL-$L(CRHDR)
"RTN","RCDPARC",87,0)
 . I $L(DIVHDR)>(VAL+R2) S DIVHDR=$E(DIVHDR,1,(VAL+R2))_"..."
"RTN","RCDPARC",88,0)
 . I $L(CRHDR)>(VAL+R1) S CRHDR=$E(CRHDR,1,(VAL+R2))_"..."
"RTN","RCDPARC",89,0)
 ;
"RTN","RCDPARC",90,0)
 I 'RCEXCEL D
"RTN","RCDPARC",91,0)
 . S RCSTOP=$$NEWPG(.RCPG,1,.RCSL,RCDET,$G(RCRARC)) ; PRCA*4.5*326 - use $$NEWPG for first header
"RTN","RCDPARC",92,0)
 E  D
"RTN","RCDPARC",93,0)
 . ; Excel Report
"RTN","RCDPARC",94,0)
 . W "CARC^PAYER^TIN^REP_DATE^AMOUNT",!
"RTN","RCDPARC",95,0)
 ;
"RTN","RCDPARC",96,0)
 D PRTREP($NA(^TMP("RCDPARC_REPORT",$J,"REPORT")),$NA(^TMP("RCDPARC_REPORT",$J,"~~SUM")),RCSORT,RCDET,$G(RCRARC),.RCSTOP) G:RCSTOP ARCQ
"RTN","RCDPARC",97,0)
 D ASK^RCDPRU(.RCSTOP)
"RTN","RCDPARC",98,0)
 ;
"RTN","RCDPARC",99,0)
ARCQ ; Clean-up and quit
"RTN","RCDPARC",100,0)
 K DHDR,RCEXCEL,RCLIST,RCLPAY,RCODE,RCPAY,RCSORT,RCRARC,RCTIN,RCTLIST
"RTN","RCDPARC",101,0)
 K ^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPARC",102,0)
 ;K ^TMP("RCDPARC_REPORT",$J)
"RTN","RCDPARC",103,0)
 Q
"RTN","RCDPARC",104,0)
 ;
"RTN","RCDPARC",105,0)
PRTREP(DATA,SUMM,SORT,CD,RA,RCSTOP) ; Print report data out of the "REPORT" subarray
"RTN","RCDPARC",106,0)
 ; Input:   DATA        - Compiled report data in ^TMP("RCDPARC_REPORT",$J)
"RTN","RCDPARC",107,0)
 ;          SUM         - Compiled grand totals in ^TMP("RCDPARC_REPORT",$J,"~~SUM")
"RTN","RCDPARC",108,0)
 ;          SORT        - Selected Sort Option
"RTN","RCDPARC",109,0)
 ;          CD          - 'D' - Detail report, 'S' - Summary report
"RTN","RCDPARC",110,0)
 ;          RA          - Always 0 for now to not display CARCS on report
"RTN","RCDPARC",111,0)
 ; Output:  RCSTOP      - 1 if user quit out of the display, 0 otherwise
"RTN","RCDPARC",112,0)
 N AMTA,AMTB,AMTP,CL,CZ,DESC,DIWL,DIWR,DLN,DX0,DZ,IX,IY,LN,LN2,PAY,PCT,PYRTINS,PYZ,RCSL
"RTN","RCDPARC",113,0)
 N TIN,TIX,TIY,X,XX,YY,ZZ
"RTN","RCDPARC",114,0)
 S $P(LN,"-",80)="",$P(DLN,"=",80)="",$P(LN2,"-",78)="",LN2="  "_LN2,RCSL=8
"RTN","RCDPARC",115,0)
 ; Do Grand totals - moved to top of report per Susan on 7/16/2015
"RTN","RCDPARC",116,0)
 S DX0=$G(@SUMM@("CLAIMS")),PCT=0
"RTN","RCDPARC",117,0)
 S:+$P(DX0,U,2)'=0 PCT=$J(($P(DX0,U,4)/$P(DX0,U,2))*100,3,0)
"RTN","RCDPARC",118,0)
 S:+$P(DX0,U,2)=0 PCT="ERR"
"RTN","RCDPARC",119,0)
 I RCSL'<(IOSL-4) S RCSTOP=$$NEWPG(.RCPG,1,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",120,0)
 W !
"RTN","RCDPARC",121,0)
 W "GRAND TOTAL ALL CARCS / ALL PAYERS ON REPORT",!
"RTN","RCDPARC",122,0)
 W "   TOTAL #CLAIMS:  ",$J($P(DX0,U,1),6,0),"  ADJ: ",PCT,"% [TOT AMT ADJUSTED / TOT AMT BILLED]",!
"RTN","RCDPARC",123,0)
 W "   AMT ADJUST: $",$J($P(DX0,U,4),11,2),"  AMT BILLED: $",$J($P(DX0,U,2),11,2),"  AMT PAID: $",$J($P(DX0,U,3),11,2),!
"RTN","RCDPARC",124,0)
 W !,DLN,!! S RCSL=RCSL+5
"RTN","RCDPARC",125,0)
 ;
"RTN","RCDPARC",126,0)
 S IX="",IEN="",CL=0,AMTB=0,AMTP=0,DESC="Empty Description"
"RTN","RCDPARC",127,0)
 F  S IX=$O(@DATA@(IX)) Q:IX=""!RCSTOP  S TIX=$G(@DATA@(IX)),IY="" D  Q:RCSTOP 
"RTN","RCDPARC",128,0)
 . D:SORT="C"  Q:RCSTOP  ; CARC Sorted output IX => CARC; IY => Payer Name
"RTN","RCDPARC",129,0)
 .. S DX0=$G(@DATA@(IX,"~~SUM")),CL=$P(DX0,U,1),AMTB=$P(DX0,U,2),AMTP=$P(DX0,U,3),AMTA=$P(DX0,U,4),DESC=$P(DX0,U,5),PCT=(AMTA/AMTB)*100
"RTN","RCDPARC",130,0)
 .. W "CARC: ",$J(IX,4)," TOTAL #CLAIMS: ",$J(CL,5,0)," ADJ:",$J(PCT,3,0),"% [TOT AMT ADJUSTED / TOT AMT BILLED]",! S RCSL=RCSL+1
"RTN","RCDPARC",131,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",132,0)
 .. W "  AMT ADJUST: ",$J(AMTA,11,2),"  AMT BILLED: ",$J(AMTB,12,2),"  AMT PAID: ",$J(AMTP,12,2),! S RCSL=RCSL+1
"RTN","RCDPARC",133,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",134,0)
 .. S X="Desc: "_$E(DESC,1,73),DIWL=1,DIWR=80 K ^UTILITY($J,"W") D ^DIWP,^DIWW S RCSL=RCSL+1
"RTN","RCDPARC",135,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",136,0)
 .. W LN,! S RCSL=RCSL+1
"RTN","RCDPARC",137,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",138,0)
 .. S CZ=0,PAY="" F  S PAY=$O(@DATA@(IX,"~~SUM",PAY)) Q:PAY=""!RCSTOP  S CZ=CZ+1 D  Q:RCSTOP
"RTN","RCDPARC",139,0)
 ... S DZ=@DATA@(IX,"~~SUM",PAY),PCT=$S((+$P(DZ,U,2)'=0):($P(DZ,U,4)/$P(DZ,U,2)*100),1:"ERROR")
"RTN","RCDPARC",140,0)
 ... I CZ>1 W LN2,! S RCSL=RCSL+1
"RTN","RCDPARC",141,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",142,0)
 ... ; PRCA*4.5*321 Start modified code block
"RTN","RCDPARC",143,0)
 ... D PAYTINS^RCDPRU2(PAY,.PYRTINS)
"RTN","RCDPARC",144,0)
 ... W " PAYER NAME/TIN",!
"RTN","RCDPARC",145,0)
 ... S RCSL=RCSL+1
"RTN","RCDPARC",146,0)
 ... S PYZ="" F  S PYZ=$O(PYRTINS(PYZ)) Q:PYZ=""  D  Q:RCSTOP
"RTN","RCDPARC",147,0)
 .... W " ",$$PAYTIN^RCDPRU2(PYRTINS(PYZ),76),!
"RTN","RCDPARC",148,0)
 .... S RCSL=RCSL+1
"RTN","RCDPARC",149,0)
 .... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA)
"RTN","RCDPARC",150,0)
 ... ; PRCA*4.5*321 End modified code block
"RTN","RCDPARC",151,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",152,0)
 ... W "  #CLAIMS: ",$J($P(DZ,U,1),4,0)," ADJ:",$J(PCT,3,0),"% [ADJ: ",$J($P(DZ,U,4),10,2),"/BILLED: ",$J($P(DZ,U,2),10,2),"] PAID: ",$J($P(DZ,U,3),10,2),! S RCSL=RCSL+1
"RTN","RCDPARC",153,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",154,0)
 ... D:RCDET DETAIL(DATA,IX,PAY,.RCSL,.RCSTOP) Q:RCSTOP  ; Data array, CARC, Payer/TIN
"RTN","RCDPARC",155,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",156,0)
 .. Q:RCSTOP  W LN,! S RCSL=RCSL+1 ; Removed "!," in front of "LN"
"RTN","RCDPARC",157,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",158,0)
 . Q:RCSTOP
"RTN","RCDPARC",159,0)
 . D:SORT="P"  Q:RCSTOP  ; Payer Sorted output IX => Payer Name; IY => CARC
"RTN","RCDPARC",160,0)
 .. ; PRCA*4.5*321 Start modified code block
"RTN","RCDPARC",161,0)
 .. D PAYTINS^RCDPRU2(IX,.PYRTINS)
"RTN","RCDPARC",162,0)
 .. W " PAYER NAME/TIN",!
"RTN","RCDPARC",163,0)
 .. S RCSL=RCSL+1
"RTN","RCDPARC",164,0)
 .. S PYZ="" F  S PYZ=$O(PYRTINS(PYZ)) Q:PYZ=""  D  Q:RCSTOP
"RTN","RCDPARC",165,0)
 ... W " ",$$PAYTIN^RCDPRU2(PYRTINS(PYZ),76),!
"RTN","RCDPARC",166,0)
 ... S RCSL=RCSL+1
"RTN","RCDPARC",167,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA)
"RTN","RCDPARC",168,0)
 .. ; PRCA*4.5*321 End modified code block
"RTN","RCDPARC",169,0)
 .. S DX0=$G(@DATA@(IX,"~~SUM")),CL=$P(DX0,U,1),AMTB=$P(DX0,U,2),AMTP=$P(DX0,U,3),AMTA=$P(DX0,U,4),PCT=(AMTA/AMTB)*100
"RTN","RCDPARC",170,0)
 .. W "#CLAIMS: ",$J(CL,4,0)," ADJ: ",$J(PCT,3,0),"% [ADJ:",$J(AMTA,10,2),"/BILLED:",$J(AMTB,11,2),"] PAID:",$J(AMTP,11,2),! S RCSL=RCSL+1
"RTN","RCDPARC",171,0)
 .. W LN,!! S RCSL=RCSL+2
"RTN","RCDPARC",172,0)
 .. S CZ=0,IY="" F  S IY=$O(@DATA@(IX,"~~SUM",IY)) Q:IY=""  S CZ=CZ+1 D  Q:RCSTOP
"RTN","RCDPARC",173,0)
 ... S DZ=@DATA@(IX,"~~SUM",IY)
"RTN","RCDPARC",174,0)
 ... I CZ>1 W LN2,! S RCSL=RCSL+1
"RTN","RCDPARC",175,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",176,0)
 ... S PCT=$S((+$P(DZ,U,2)'=0):($P(DZ,U,4)/$P(DZ,U,2)*100),1:"ERROR")
"RTN","RCDPARC",177,0)
 ... W ?2,"CARC: ",$J(IY,4),?14,"#CLAIMS: ",$J($P(DZ,U,1),5,0),?30,"ADJ: ",$J(PCT,3,0),"% [AMT ADJUSTED / AMT BILLED]",! S RCSL=RCSL+1
"RTN","RCDPARC",178,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",179,0)
 ... W ?2,"AMT ADJUST: ",$J($P(DZ,U,4),11,2),?26,"  BILLED: ",$J($P(DZ,U,2),12,2),?56," PAID: ",$J($P(DZ,U,3),12,2),! S RCSL=RCSL+1
"RTN","RCDPARC",180,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",181,0)
 ... S X="Desc: "_$E($P(DZ,U,5),1,68),DIWL=3,DIWR=80 K ^UTILITY($J,"W") D ^DIWP,^DIWW S RCSL=RCSL+1
"RTN","RCDPARC",182,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",183,0)
 ... D:RCDET DETAIL(DATA,IX,IY,.RCSL,.RCSTOP) Q:RCSTOP  ; Data array, Payer/TIN, CARC
"RTN","RCDPARC",184,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",185,0)
 .. Q:RCSTOP  W LN,! S RCSL=RCSL+1 ; Removed "!," in front of LN
"RTN","RCDPARC",186,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",187,0)
 Q
"RTN","RCDPARC",188,0)
 ;
"RTN","RCDPARC",189,0)
DETAIL(DATA,L1,L2,RCSL,DSTOP) ; Print detail information for this entry
"RTN","RCDPARC",190,0)
 N IEN,DOS,DX,DY,HDR,PCT,PAT,SSN
"RTN","RCDPARC",191,0)
 S HDR=0
"RTN","RCDPARC",192,0)
 S IEN="" F  S IEN=$O(@DATA@(L1,L2,IEN)) Q:IEN=""!DSTOP  S HDR=HDR+1 D  Q:DSTOP 
"RTN","RCDPARC",193,0)
 . ; Print out Detail
"RTN","RCDPARC",194,0)
 . D:HDR=1  Q:DSTOP
"RTN","RCDPARC",195,0)
 .. W "  ------------------------------------------------------------------------------",! S RCSL=RCSL+1
"RTN","RCDPARC",196,0)
 .. W "  CLAIM#    DOS    %ADJ  [AMT ADJ/AMT BILLED]  PAID   PATIENT NAME          SSN",! S RCSL=RCSL+1
"RTN","RCDPARC",197,0)
 .. W "  ==============================================================================",! S RCSL=RCSL+1
"RTN","RCDPARC",198,0)
 .. I RCSL'<(IOSL-2) S DSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:DSTOP
"RTN","RCDPARC",199,0)
 . S DX=@DATA@(L1,L2,IEN,0),DY=@DATA@(L1,L2,IEN,1),DOS=$$DATE^RCDPRU($$GET1^DIQ(399,$P(DX,U,1)_",",.03,"I")),PCT=($P(DY,U,2)/$P(DX,U,6))*100
"RTN","RCDPARC",200,0)
 . ;S $P(DX,U,6)=654321.99,$P(DX,U,7)=123456.99
"RTN","RCDPARC",201,0)
 . S PAT=$$GET1^DIQ(2,$P(DX,U,3)_",",.01,"E"),SSN="("_$E($$GET1^DIQ(2,$P(DX,U,3)_",",.09,"E"),*-3,*)_")"
"RTN","RCDPARC",202,0)
 . W ?2,$P(DX,U,2),?10,DOS,?19,$J(PCT,3,0),?24,$J($P(DY,U,2),9,2),?34,$J($P(DX,U,6),9,2),?44,$J($P(DX,U,7),9,2),?54,$E(PAT,1,19),?74,SSN,! S RCSL=RCSL+1
"RTN","RCDPARC",203,0)
 . I RCSL'<(IOSL-2) S DSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:DSTOP
"RTN","RCDPARC",204,0)
 . ;W "RCRARC = ",RCRARC,"   DY=",DY,!
"RTN","RCDPARC",205,0)
 . ; Write out RARC if we have one
"RTN","RCDPARC",206,0)
 . I RCRARC=1&($P(DY,U,5)'="") S X="RARC: "_$P(DY,U,5)_"  "_$P(DY,U,6),DIWL=5,DIWR=80 K ^UTILITY($J,"W") D ^DIWP,^DIWW S RCSL=RCSL+1
"RTN","RCDPARC",207,0)
 . I RCSL'<(IOSL-2) S DSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:DSTOP
"RTN","RCDPARC",208,0)
 W ! S RCSL=RCSL+1
"RTN","RCDPARC",209,0)
 Q
"RTN","RCDPARC",210,0)
HDR(CD,RA) ; Report header
"RTN","RCDPARC",211,0)
 N ZZ S ZZ=$S($G(RA)=1:" & RARC",1:"")
"RTN","RCDPARC",212,0)
 Q:CD "EDI LOCKBOX 835 CARC"_ZZ_" DATA REPORT - DETAIL FORMAT"
"RTN","RCDPARC",213,0)
 Q "EDI LOCKBOX 835 CARC DATA REPORT - SUMMARY FORMAT"
"RTN","RCDPARC",214,0)
 ;
"RTN","RCDPARC",215,0)
HDRP(Z,X,Z1) ; Print Header (Z=String, X=1 (line feed) X=0 (no LF), Z1 (page number right justified)
"RTN","RCDPARC",216,0)
 I $G(X)=1 W !
"RTN","RCDPARC",217,0)
 W ?(IOM-$L(Z)\2),Z W:$G(Z1)]"" ?(IOM-$L(Z1)),Z1
"RTN","RCDPARC",218,0)
 Q
"RTN","RCDPARC",219,0)
NEWPG(RCPG,RCNEW,RCSL,CD,RA) ; Check for new page needed, output header
"RTN","RCDPARC",220,0)
 ; RCPG = Page number passwd by referece
"RTN","RCDPARC",221,0)
 ; RCNEW = 1 to force new page
"RTN","RCDPARC",222,0)
 ; RCSL = page length passed by reference
"RTN","RCDPARC",223,0)
 ; Function returns 1 if user chooses to stop output
"RTN","RCDPARC",224,0)
 N ZSTOP,XX ; PRCA*4.5*326
"RTN","RCDPARC",225,0)
 S ZSTOP=0
"RTN","RCDPARC",226,0)
 I RCNEW!'RCPG!(($Y+5)>IOSL) D
"RTN","RCDPARC",227,0)
 . D:RCPG ASK^RCDPRU(.ZSTOP) Q:ZSTOP
"RTN","RCDPARC",228,0)
 . S RCPG=RCPG+1 W @IOF
"RTN","RCDPARC",229,0)
 . D HDRP($$HDR(CD,RA),1,"Page: "_RCPG)
"RTN","RCDPARC",230,0)
 . D HDRP("SORT BY: "_$S($E(RCSORT,1)="C":"CARC",1:"Payer")_"  RUN DATE: "_RCNOW,1)
"RTN","RCDPARC",231,0)
 . D HDRP("Divisions: "_DIVHDR_" CARCs: "_CRHDR,1)
"RTN","RCDPARC",232,0)
 . ; PRCA*4.5*326 - Include M/P/T filter in header
"RTN","RCDPARC",233,0)
 . S XX=$S(RCWHICH=2:"PAYER TINS",1:"835 PAYERS")_": "_$S(RCPAY="R":"Range",RCPAY="S":"Selected",1:"All")
"RTN","RCDPARC",234,0)
 . S XX=XX_$J("",44-$L(XX))_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPARC",235,0)
 . S XX=XX_$S(RCLAIM="M":"MEDICAL",RCLAIM="P":"PHARMACY",RCLAIM="T":"TRICARE",1:"ALL")
"RTN","RCDPARC",236,0)
 . D HDRP(XX,1)
"RTN","RCDPARC",237,0)
 . D HDRP("EOB PAID DATE RANGE: "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2),1)
"RTN","RCDPARC",238,0)
 . W !,RCHR,! S RCSL=7
"RTN","RCDPARC",239,0)
 Q ZSTOP
"RTN","RCDPARC",240,0)
 ;
"RTN","RCDPARC",241,0)
 ;
"RTN","RCDPARC",242,0)
 ; Select Range or list of CARC Codes
"RTN","RCDPARC",243,0)
CARC ;
"RTN","RCDPARC",244,0)
 N DIR,OKAY
"RTN","RCDPARC",245,0)
 S DIR("A")="Enter a List or Range of CARC codes: ",DIR(0)="F^1:200"
"RTN","RCDPARC",246,0)
 S DIR("?")="Codes can be entered as: 1,2,4:15,A1:B6"
"RTN","RCDPARC",247,0)
 S DIR("?",1)="Please enter a list or range of CARC Codes, use a comma "
"RTN","RCDPARC",248,0)
 S DIR("?",2)="and a colon ':' to delimit ranges of codes."
"RTN","RCDPARC",249,0)
 D ^DIR K DIR
"RTN","RCDPARC",250,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCSTOP=1 Q
"RTN","RCDPARC",251,0)
 S RCODE=X,OKAY=$$VAL^RCDPRU(345,.RCODE)
"RTN","RCDPARC",252,0)
 I 'OKAY S DIR("A",1)="Invalid Range/List of CARC Codes, Please reenter.." G CARC
"RTN","RCDPARC",253,0)
 K DIR("A",1) ; Clean up DIR
"RTN","RCDPARC",254,0)
 Q RCODE
"RTN","RCDPARC",255,0)
 ; Get data for report and apply filters if necessary
"RTN","RCDPARC",256,0)
GETDATA(GCARC,GPAYER,GTIN,GSORT,GRARC,GSTART,GSTOP,GARRAY,GDIV) ;
"RTN","RCDPARC",257,0)
 ; Input: GCCARC - Range of CARC codes to include
"RTN","RCDPARC",258,0)
 ;        GPAYER - Range of payers to include 
"RTN","RCDPARC",259,0)
 ;        GTIN   - Range of TINs to include
"RTN","RCDPARC",260,0)
 ;        GSORT  - Sort order 
"RTN","RCDPARC",261,0)
 ;        GRARC  - Flag to display RARC codes on the report (0 = No)
"RTN","RCDPARC",262,0)
 ;        GSTART - Start date
"RTN","RCDPARC",263,0)
 ;        GSTOP  - End date
"RTN","RCDPARC",264,0)
 ;        GARRAY - Root of the array in which to store the output data
"RTN","RCDPARC",265,0)
 ;        GDIV   - Range of Divisions to include
"RTN","RCDPARC",266,0)
 ; Output: @GARRAY("BILLS",IEN,0)=A1^A2^A3^A4^A5^A6^A7
"RTN","RCDPARC",267,0)
 ;           A1=Pointer to BILL/CLAIM file (#399)
"RTN","RCDPARC",268,0)
 ;           A2=Bill Number
"RTN","RCDPARC",269,0)
 ;           A3=Pointer to patient file (#2)
"RTN","RCDPARC",270,0)
 ;           A4=Payer Name from EOB, pointer to Insurance file (#36)
"RTN","RCDPARC",271,0)
 ;           A5=TIN from EOB
"RTN","RCDPARC",272,0)
 ;           A6=Total Charges
"RTN","RCDPARC",273,0)
 ;           A7=Paid amount
"RTN","RCDPARC",274,0)
 ;
"RTN","RCDPARC",275,0)
 N SDT,IEN,CNT,ZX,RM,ZND,CARR,PNARR,PTARR,RCSET,GLINE,DZN,PTR,ZPAY,RCERR,RCDEN
"RTN","RCDPARC",276,0)
 S SDT=$O(^IBM(361.1,"E",GSTART),-1)
"RTN","RCDPARC",277,0)
 ; Set up the arrays for filtering on CARC, PAYER name and Payer TINs
"RTN","RCDPARC",278,0)
 D RNG^RCDPRU("CARC",GCARC,.CARR)
"RTN","RCDPARC",279,0)
 ;Get possible bills to work on from ^IBM(361.1,"E") index
"RTN","RCDPARC",280,0)
 F  S SDT=$O(^IBM(361.1,"E",SDT)) Q:SDT=""!(SDT>GSTOP)  D
"RTN","RCDPARC",281,0)
 . S IEN="" F  S IEN=$O(^IBM(361.1,"E",SDT,IEN)) Q:IEN=""  D
"RTN","RCDPARC",282,0)
 .. S RM=$$GET1^DIQ(361.1,IEN_",",102,"I") Q:$G(RM)=1  ; Quit looking if this EOB is removed
"RTN","RCDPARC",283,0)
 .. ; If not all divisions then check to see if this EOB should be included
"RTN","RCDPARC",284,0)
 .. I GDIV=0 S RCDIV="",RCDEN=$$GET1^DIQ(361.1,IEN_",",.01,"I") S:RCDEN'="" RCDIV=$$GET1^DIQ(399,RCDEN_",",.22,"I") Q:RCDIV=""  Q:$G(GDIV(RCDIV))=""
"RTN","RCDPARC",285,0)
 .. ; Get the data for this claim and 835 Payer
"RTN","RCDPARC",286,0)
 .. S ZND=^IBM(361.1,IEN,0),PTR=$P(ZND,U,1),ZPAY=$$GPAYR^RCDPRU2($P(ZND,U,3))
"RTN","RCDPARC",287,0)
 .. S RCSET=1
"RTN","RCDPARC",288,0)
 .. ; Are there CARC codes for this record
"RTN","RCDPARC",289,0)
 .. S:($G(^IBM(361.1,IEN,10,0))']"")&($G(^IBM(361.1,IEN,15,0))']"") RCSET=0
"RTN","RCDPARC",290,0)
 .. ;
"RTN","RCDPARC",291,0)
 .. I RCPAY="A",RCLAIM'="A" D  Q:'RCSET  ; If both not specified check for inclusion
"RTN","RCDPARC",292,0)
 ... S RCSET=$$ISTYPE^RCDPEU1(361.1,IEN,RCLAIM) ; PRCA*4.5*326 filter by Tricare etc.
"RTN","RCDPARC",293,0)
 .. ;
"RTN","RCDPARC",294,0)
 .. ; Check Payer Name
"RTN","RCDPARC",295,0)
 .. I RCPAY'="A" D
"RTN","RCDPARC",296,0)
 ... S RCSET=$$ISSEL^RCDPEU1(361.1,IEN) ; PRCA*4.5*326 this this a selected payer.
"RTN","RCDPARC",297,0)
 .. ;
"RTN","RCDPARC",298,0)
 .. Q:RCSET=0  ; No need to check further get next IEN
"RTN","RCDPARC",299,0)
 .. ; Pointer to the bill (^DGCR(399,))^KBill #^Patient pointer^Payer Pointer [^DIC(36)]^Payer ID/TIN^Total Charges^Paid Amount
"RTN","RCDPARC",300,0)
 .. S DZN=$G(^DGCR(399,PTR,0))
"RTN","RCDPARC",301,0)
 .. S:($G(^IBM(361.1,IEN,10,0))]"")!($G(^IBM(361.1,IEN,15,0))]"") @GARRAY@("BILLS",IEN,0)=PTR_U_$P(DZN,U,1)_U_$P(DZN,U,2)_U_$P(ZND,U,2)_U_$P(ZND,U,3)_U_$G(^DGCR(399,PTR,"U1"))_U_$P($G(^IBM(361.1,IEN,1)),U,1)
"RTN","RCDPARC",302,0)
 .. S CNT=0
"RTN","RCDPARC",303,0)
 .. ; Get Claim Level CARC Data
"RTN","RCDPARC",304,0)
 .. D:$G(^IBM(361.1,IEN,10,0))]""
"RTN","RCDPARC",305,0)
 ... ; Get CARC information, CARC is in 361.11
"RTN","RCDPARC",306,0)
 ... N IX,RCGX S IX="" D GETS^DIQ(361.1,IEN_",","10*;","E","RCGX")
"RTN","RCDPARC",307,0)
 ... ; CARC^AMOUNT^QUANTITY^DESCRIPTION
"RTN","RCDPARC",308,0)
 ... S IX="" F  S IX=$O(RCGX("361.111",IX)) Q:IX=""  D
"RTN","RCDPARC",309,0)
 .... ; Quit if this CARC is not in the list
"RTN","RCDPARC",310,0)
 .... Q:'$$CHK^RCDPRU2("CARC",RCGX("361.111",IX,.01,"E"),.CARR)
"RTN","RCDPARC",311,0)
 .... S CNT=CNT+1
"RTN","RCDPARC",312,0)
 .... S @GARRAY@("BILLS",IEN,"C",CNT)=RCGX("361.111",IX,.01,"E")_U_RCGX("361.111",IX,.02,"E")_U_RCGX("361.111",IX,.03,"E")_U_RCGX("361.111",IX,.04,"E")
"RTN","RCDPARC",313,0)
 .. ; Get Line level CARC Data
"RTN","RCDPARC",314,0)
 .. D:$G(^IBM(361.1,IEN,15,0))]""
"RTN","RCDPARC",315,0)
 ... ; Get CARC and RARC information. CARC is in 361.11511 and RARC is in 361.1154
"RTN","RCDPARC",316,0)
 ... N IX,RCGX S IX="" D GETS^DIQ(361.1,IEN_",","15*;","IE","RCGX")
"RTN","RCDPARC",317,0)
 ... ; CARC^AMOUNT^QUANTITY^DESCRIPTION
"RTN","RCDPARC",318,0)
 ... S IX="" F  S IX=$O(RCGX("361.11511",IX)) Q:IX=""  D
"RTN","RCDPARC",319,0)
 .... ; Quit if this CARC is not on the list
"RTN","RCDPARC",320,0)
 .... Q:'$$CHK^RCDPRU2("CARC",RCGX("361.11511",IX,.01,"E"),.CARR)
"RTN","RCDPARC",321,0)
 .... S CNT=CNT+1
"RTN","RCDPARC",322,0)
 .... S @GARRAY@("BILLS",IEN,"C",CNT)=RCGX("361.11511",IX,.01,"E")_U_RCGX("361.11511",IX,.02,"E")_U_RCGX("361.11511",IX,.03,"E")_U_RCGX("361.11511",IX,.04,"E")
"RTN","RCDPARC",323,0)
 ... ; RARC^DESCRIPTION
"RTN","RCDPARC",324,0)
 ... S IX="" F ZX=1:1 S IX=$O(RCGX("361.1154",IX)) Q:IX=""  S @GARRAY@("BILLS",IEN,"R",ZX)=RCGX("361.1154",IX,.02,"E")_U_RCGX("361.1154",IX,.03,"E")
"RTN","RCDPARC",325,0)
 ; Possible bills have been accumulated in "BILLS" sub-array, Apply filters and accumulate data in "REPORT" sub-array
"RTN","RCDPARC",326,0)
 D SORT^RCDPARC1(GARRAY,GSORT)
"RTN","RCDPARC",327,0)
 Q
"RTN","RCDPARC1")
0^15^B8176922
"RTN","RCDPARC1",1,0)
RCDPARC1 ;AITC/CJE - CARC REPORT ON PAYER OR CARC CODE ;9/15/14 3:00pm
"RTN","RCDPARC1",2,0)
 ;;4.5;Accounts Receivable;**326**;Mar 20, 1995;Build 26
"RTN","RCDPARC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPARC1",4,0)
 Q
"RTN","RCDPARC1",5,0)
 ;
"RTN","RCDPARC1",6,0)
SORT(ARRAY,SORT) ; Sort and summarize data based on SORT variable
"RTN","RCDPARC1",7,0)
 N CARC,IEN,D1,D2,PIEN,PAYER,Z,TIN,DESC,R1,BILL S IEN=""
"RTN","RCDPARC1",8,0)
 ; IEN= IEN from file 361.1; PIEN= 835 Payer IEN from file 344.6
"RTN","RCDPARC1",9,0)
 F  S IEN=$O(@ARRAY@("BILLS",IEN)) Q:IEN=""  D
"RTN","RCDPARC1",10,0)
 . S D1=@ARRAY@("BILLS",IEN,0),TIN=$P(D1,U,5),BILL=$P(D1,U,2)
"RTN","RCDPARC1",11,0)
 . S PAYER=$$GPAYR^RCDPRU2(TIN) Q:$G(PAYER)=""  ; couldn't find a payer to match TIN, quit
"RTN","RCDPARC1",12,0)
 . S CARC="",Z="",R1=""
"RTN","RCDPARC1",13,0)
 . F  S Z=$O(@ARRAY@("BILLS",IEN,"C",Z)) Q:Z=""  S D2=@ARRAY@("BILLS",IEN,"C",Z),CARC=$P(D2,U,1),DESC=$P(D2,U,4) D
"RTN","RCDPARC1",14,0)
 .. ; If RARC exists append to CARC Information
"RTN","RCDPARC1",15,0)
 .. S:$G(@ARRAY@("BILLS",IEN,"R",Z))'="" R1=@ARRAY@("BILLS",IEN,"R",Z)
"RTN","RCDPARC1",16,0)
 .. ;W "RARC: |",$G(@ARRAY@("BILLS",IEN,"R",Z)),"|",!
"RTN","RCDPARC1",17,0)
 .. D:SORT="C"  ; Sort by CARC, group by Payer
"RTN","RCDPARC1",18,0)
 ... S @ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,0)=D1
"RTN","RCDPARC1",19,0)
 ... ; First time through set the "BILLS" D2 into report, otherwise add adjustment amt to the existing for this CARC
"RTN","RCDPARC1",20,0)
 ... I $G(@ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,1))="" S @ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,1)=D2_U_R1
"RTN","RCDPARC1",21,0)
 ... E  S $P(@ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,1),U,2)=$P(@ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,1),U,2)+$P(D2,U,2) ;W "CARC: ",CARC," Bill: ",BILL," D2: ",D2,!
"RTN","RCDPARC1",22,0)
 .. D:SORT="P"  ; Sort by Payer, group by CARC
"RTN","RCDPARC1",23,0)
 ... S @ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,0)=D1
"RTN","RCDPARC1",24,0)
 ... ; First time through set the "BILLS" D2 into report, otherwise add adjustment amt to the existing for this CARC
"RTN","RCDPARC1",25,0)
 ... I $G(@ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,1))="" S @ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,1)=D2_U_R1
"RTN","RCDPARC1",26,0)
 ... E  S $P(@ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,1),U,2)=$P(@ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,1),U,2)+$P(D2,U,2)
"RTN","RCDPARC1",27,0)
 .. ;I CARC=1 W ARRAY," BILL:",BILL," CARC:",CARC,"  ",PAYER_"/"_TIN,"  ",$P(D1,U,6),"  ",$P(D1,U,7),"  ",DESC,"  ",$P(D2,U,2),"  ",SORT,!
"RTN","RCDPARC1",28,0)
 .. D SUM^RCDPRU2(ARRAY,IEN,BILL,CARC,PAYER_"/"_TIN,$P(D1,U,6),$P(D1,U,7),DESC,$P(D2,U,2),SORT)
"RTN","RCDPARC1",29,0)
 Q
"RTN","RCDPAYER")
0^31^B25164505
"RTN","RCDPAYER",1,0)
RCDPAYER ;ALB/PJH - TPJI Utility ;Jun 06, 2014@19:11:19
"RTN","RCDPAYER",2,0)
 ;;4.5;Accounts Receivable;**269,276,298,326**;Mar 20, 1995;Build 26
"RTN","RCDPAYER",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPAYER",4,0)
 ;
"RTN","RCDPAYER",5,0)
 ;Integration Agreement 5549
"RTN","RCDPAYER",6,0)
 ;
"RTN","RCDPAYER",7,0)
 Q
"RTN","RCDPAYER",8,0)
 ;
"RTN","RCDPAYER",9,0)
EN(IB3611) ;Called from IBJTTC
"RTN","RCDPAYER",10,0)
 ; IB3611 = ien of EXPLANATION OF BENEFITS file (361.1)
"RTN","RCDPAYER",11,0)
 ; gathers payer contact data from file 361.1 and 344.4
"RTN","RCDPAYER",12,0)
 ; returns the data to IBJTTC for display on COMMENT HISTORY screen of TPJI
"RTN","RCDPAYER",13,0)
 N AR3444,CONTACTS,ERA3,FOUND,I,IBTEXT,IB25,STR,WEB,NAME
"RTN","RCDPAYER",14,0)
 ;
"RTN","RCDPAYER",15,0)
 S CONTACTS="",STR="",FOUND=0,WEB="",NAME=""
"RTN","RCDPAYER",16,0)
 ;
"RTN","RCDPAYER",17,0)
 ;Retrieve contacts from EOB file
"RTN","RCDPAYER",18,0)
 S IB25=$P($G(^IBM(361.1,IB3611,25)),U,1,7) ;IA 4051
"RTN","RCDPAYER",19,0)
 S:$TR(IB25,U,"")]"" FOUND=1,STR=IB25
"RTN","RCDPAYER",20,0)
 ;
"RTN","RCDPAYER",21,0)
 ;Get ERA reference
"RTN","RCDPAYER",22,0)
 S AR3444=$O(^RCY(344.4,"ADET",IB3611,""))
"RTN","RCDPAYER",23,0)
 ;
"RTN","RCDPAYER",24,0)
 ;If no contact in EOB retrieve contacts from ERA file
"RTN","RCDPAYER",25,0)
 I AR3444,'FOUND D
"RTN","RCDPAYER",26,0)
 .S ERA3=$P($G(^RCY(344.4,AR3444,3)),U,1,7)
"RTN","RCDPAYER",27,0)
 .S:$TR(ERA3,U,"")]"" FOUND=1,STR=ERA3
"RTN","RCDPAYER",28,0)
 ;
"RTN","RCDPAYER",29,0)
 ;Retrieve Payer Web Address from ERA file
"RTN","RCDPAYER",30,0)
 I AR3444 S WEB=$P($G(^RCY(344.4,AR3444,5)),U) S:WEB]"" FOUND=1
"RTN","RCDPAYER",31,0)
 ;
"RTN","RCDPAYER",32,0)
 ;Get Payer Contact Name
"RTN","RCDPAYER",33,0)
 S NAME=$P(STR,U) S:NAME]"" FOUND=1
"RTN","RCDPAYER",34,0)
 ;
"RTN","RCDPAYER",35,0)
 ;Format contacts
"RTN","RCDPAYER",36,0)
 I STR]"" D
"RTN","RCDPAYER",37,0)
 .N I,CTYP,CPOS
"RTN","RCDPAYER",38,0)
 .F I=2,4,6 D:$P(STR,U,I)]""
"RTN","RCDPAYER",39,0)
 ..;Validate contact type
"RTN","RCDPAYER",40,0)
 ..S CTYP=$P(STR,U,I+1)
"RTN","RCDPAYER",41,0)
 ..S CPOS=$S(CTYP="TE":1,CTYP="FX":2,CTYP="EM":3,CTYP="EX":4,1:0)
"RTN","RCDPAYER",42,0)
 ..Q:'CPOS
"RTN","RCDPAYER",43,0)
 ..;Save only first occurance of each type of contact
"RTN","RCDPAYER",44,0)
 ..S:$P(CONTACTS,U,CPOS)="" $P(CONTACTS,U,CPOS)=$P(STR,U,I)
"RTN","RCDPAYER",45,0)
 ;
"RTN","RCDPAYER",46,0)
 ;Allow for misfiled legacy contact data
"RTN","RCDPAYER",47,0)
 I FOUND,NAME="",WEB="",CONTACTS="" S FOUND=0
"RTN","RCDPAYER",48,0)
 ;Return found_web_phone_fax_email
"RTN","RCDPAYER",49,0)
 Q FOUND_U_NAME_U_WEB_U_CONTACTS
"RTN","RCDPAYER",50,0)
 ;
"RTN","RCDPAYER",51,0)
ADD(PRCABN) ;Update AR Transaction file #433 with comment type transaction
"RTN","RCDPAYER",52,0)
 ;PRCABN = Bill/Claim IEN for file #399.
"RTN","RCDPAYER",53,0)
 ;called only if 'ERA Contact Information' type comment is not found
"RTN","RCDPAYER",54,0)
 ;serves as a notice to the user that the contact data came from the 835 ERA. Called from IBJTTC
"RTN","RCDPAYER",55,0)
 ;
"RTN","RCDPAYER",56,0)
 ;Note; PJH 8/11/2010 - see ADJUST^RCJIBFN3 (called by ARCA^IBJTA1)
"RTN","RCDPAYER",57,0)
 ;
"RTN","RCDPAYER",58,0)
 N AUTHDT,IBIFN,MRADT,STATUS
"RTN","RCDPAYER",59,0)
 S IBIFN=PRCABN
"RTN","RCDPAYER",60,0)
 S STATUS=$P($G(^DGCR(399,IBIFN,0)),U,13)
"RTN","RCDPAYER",61,0)
 S AUTHDT=$P($G(^DGCR(399,IBIFN,"S")),U,10)
"RTN","RCDPAYER",62,0)
 S MRADT=$P($G(^DGCR(399,IBIFN,"S")),U,7)
"RTN","RCDPAYER",63,0)
 ;
"RTN","RCDPAYER",64,0)
 ;If claim status is "NOT REVIEWED" or claim status is "CANCELLED"
"RTN","RCDPAYER",65,0)
 ;with neither MRA request date nor Authorization date present
"RTN","RCDPAYER",66,0)
 ;comment may not be added
"RTN","RCDPAYER",67,0)
 I STATUS=1!(STATUS=7&(MRADT="")&(AUTHDT="")) Q
"RTN","RCDPAYER",68,0)
 ;
"RTN","RCDPAYER",69,0)
 ;If claim status is "REQUEST MRA" or claim status is "CANCELLED"
"RTN","RCDPAYER",70,0)
 ;with MRA request date present, but no Authorization date comment
"RTN","RCDPAYER",71,0)
 ;cannot be added
"RTN","RCDPAYER",72,0)
 I STATUS=2!(STATUS=7&(MRADT'="")&(AUTHDT="")) Q
"RTN","RCDPAYER",73,0)
 ;
"RTN","RCDPAYER",74,0)
 ;Ignore bill cancelled in IB
"RTN","RCDPAYER",75,0)
 I '$D(^PRCA(430,PRCABN,2,0)) Q
"RTN","RCDPAYER",76,0)
 ;
"RTN","RCDPAYER",77,0)
 ;Ignore Archived bill
"RTN","RCDPAYER",78,0)
 I $P($G(^PRCA(430,PRCABN,0)),"^",8)=49 Q
"RTN","RCDPAYER",79,0)
 ;
"RTN","RCDPAYER",80,0)
 ;Build AR Transaction
"RTN","RCDPAYER",81,0)
 ;
"RTN","RCDPAYER",82,0)
 N PRCAEN,PRCAA1,DR,DIE,DA,D0,PRCAD,RCASK,PRCAA2,PRCA,PRCATY
"RTN","RCDPAYER",83,0)
 ;
"RTN","RCDPAYER",84,0)
 ;Create stub record in 433
"RTN","RCDPAYER",85,0)
 D SETTR^PRCAUTL,PATTR^PRCAUTL Q:'$D(PRCAEN)
"RTN","RCDPAYER",86,0)
 ;
"RTN","RCDPAYER",87,0)
 S PRCAA1=$S($D(^PRCA(433,PRCAEN,4,0)):+$P(^(0),U,4),1:0)
"RTN","RCDPAYER",88,0)
 Q:PRCAA1'>0  S PRCAA2=$P(^(0),U,3)
"RTN","RCDPAYER",89,0)
 ;
"RTN","RCDPAYER",90,0)
 ;Direct update of [PRCA COMMENT] edit template fields 
"RTN","RCDPAYER",91,0)
 ;(excluding Date of Contact, Extended Comments and Follow-up Date)
"RTN","RCDPAYER",92,0)
 S DIE="^PRCA(433,",DA=PRCAEN
"RTN","RCDPAYER",93,0)
 S DR=".03////"_PRCABN ;Bill Number
"RTN","RCDPAYER",94,0)
 S DR=DR_";3////0" ;Calm Code Done
"RTN","RCDPAYER",95,0)
 S DR=DR_";12////"_$O(^PRCA(430.3,"AC",17,0)) ;Transaction Type
"RTN","RCDPAYER",96,0)
 S DR=DR_";15////0" ;Transaction Amount
"RTN","RCDPAYER",97,0)
 S DR=DR_";42////.5" ;Processed by POSTMASTER
"RTN","RCDPAYER",98,0)
 S DR=DR_";11////"_DT ;Transaction date
"RTN","RCDPAYER",99,0)
 S DR=DR_";4////2" ;Transaction status (complete)
"RTN","RCDPAYER",100,0)
 S DR=DR_";5.02////ERA Payer Contact Information" D ^DIE
"RTN","RCDPAYER",101,0)
 ;
"RTN","RCDPAYER",102,0)
 ;Leave validation checks in place
"RTN","RCDPAYER",103,0)
 I $P($G(^PRCA(433,PRCAEN,5)),"^",2)=""!'$P(^PRCA(433,PRCAEN,1),"^") S PRCACOMM="TRANSACTION INCOMPLETE" D DELETE^PRCAWO1 K PRCACOMM Q
"RTN","RCDPAYER",104,0)
 ;
"RTN","RCDPAYER",105,0)
 I '$D(PRCAD("DELETE")) S RCASK=1 D TRANUP^PRCAUTL,UPPRIN^PRCADJ
"RTN","RCDPAYER",106,0)
 ;
"RTN","RCDPAYER",107,0)
 I $P($G(^RCD(340,+$P(^PRCA(430,PRCABN,0),"^",9),0)),"^")[";DPT(" D
"RTN","RCDPAYER",108,0)
 .;Ensure comment does not appear on patient statement
"RTN","RCDPAYER",109,0)
 .S $P(^PRCA(433,PRCAEN,0),"^",10)=1
"RTN","RCDPAYER",110,0)
 Q
"RTN","RCDPAYER",111,0)
 ;
"RTN","RCDPAYER",112,0)
 ;Audit Comment from EOB Move/Copy
"RTN","RCDPAYER",113,0)
AUDIT(ORIG,TEXT,MODE) ;
"RTN","RCDPAYER",114,0)
 ; ORIG = ien of entry in 361.1
"RTN","RCDPAYER",115,0)
 ; TEXT = move/copy reason
"RTN","RCDPAYER",116,0)
 ; MODE = is this a move or a copy event
"RTN","RCDPAYER",117,0)
 ;
"RTN","RCDPAYER",118,0)
 ;Translate EOB ien  to claim number IA 4051
"RTN","RCDPAYER",119,0)
 N PRCABN
"RTN","RCDPAYER",120,0)
 S PRCABN=$P($G(^IBM(361.1,ORIG,0)),U) Q:'PRCABN
"RTN","RCDPAYER",121,0)
 ;Build AR Transaction
"RTN","RCDPAYER",122,0)
 ;
"RTN","RCDPAYER",123,0)
 N PRCAEN,PRCAA1,DR,DIE,DA,D0,PRCAD,RCASK,PRCAA2,PRCA,PRCATY
"RTN","RCDPAYER",124,0)
 ;
"RTN","RCDPAYER",125,0)
 ;Create stub record in 433
"RTN","RCDPAYER",126,0)
 D SETTR^PRCAUTL,PATTR^PRCAUTL Q:'$D(PRCAEN)
"RTN","RCDPAYER",127,0)
 ;
"RTN","RCDPAYER",128,0)
 S PRCAA1=$S($D(^PRCA(433,PRCAEN,4,0)):+$P(^(0),U,4),1:0)
"RTN","RCDPAYER",129,0)
 Q:PRCAA1'>0  S PRCAA2=$P(^(0),U,3)
"RTN","RCDPAYER",130,0)
 ;
"RTN","RCDPAYER",131,0)
 N MTEXT,INIT
"RTN","RCDPAYER",132,0)
 S INIT=$$GET1^DIQ(200,DUZ,1)
"RTN","RCDPAYER",133,0)
 S:INIT="" INIT="USER UNK."
"RTN","RCDPAYER",134,0)
 S MTEXT="EEOB MOVED BY "_INIT
"RTN","RCDPAYER",135,0)
 I MODE="C" S MTEXT="EEOB COPIED BY "_INIT
"RTN","RCDPAYER",136,0)
 I MODE="R" S MTEXT="EEOB REMOVED BY "_INIT
"RTN","RCDPAYER",137,0)
 I MODE="W" S MTEXT="EEOB MOVE/COPY IN SPLIT/EDIT"
"RTN","RCDPAYER",138,0)
 ;Direct update of [PRCA COMMENT] edit template fields 
"RTN","RCDPAYER",139,0)
 ;(excluding Date of Contact, Extended Comments and Follow-up Date)
"RTN","RCDPAYER",140,0)
 S DIE="^PRCA(433,",DA=PRCAEN
"RTN","RCDPAYER",141,0)
 S DR=".03////"_PRCABN ;Bill Number
"RTN","RCDPAYER",142,0)
 S DR=DR_";3////0" ;Calm Code Done
"RTN","RCDPAYER",143,0)
 S DR=DR_";12////"_$O(^PRCA(430.3,"AC",17,0)) ;Transaction Type
"RTN","RCDPAYER",144,0)
 S DR=DR_";15////0" ;Transaction Amount
"RTN","RCDPAYER",145,0)
 S DR=DR_";42////"_$S($G(RCDUZ):RCDUZ,1:DUZ) ;Processed by - PRCA*4.5*326 use RCDUZ if it is set
"RTN","RCDPAYER",146,0)
 S DR=DR_";4////2" ;Transaction status (complete)
"RTN","RCDPAYER",147,0)
 S DR=DR_";5.02////"_MTEXT ;Brief comment
"RTN","RCDPAYER",148,0)
 D ^DIE
"RTN","RCDPAYER",149,0)
 ;Store justification text in comment field
"RTN","RCDPAYER",150,0)
 N DA,DIC,DLAYGO,DR,X
"RTN","RCDPAYER",151,0)
 S DA(1)=PRCAEN
"RTN","RCDPAYER",152,0)
 S DIC="^PRCA(433,"_DA(1)_",7,",DIC(0)="L",X=$P(TEXT,U)
"RTN","RCDPAYER",153,0)
 D FILE^DICN
"RTN","RCDPAYER",154,0)
 ;Store auto generated text from stand alone option in comment field
"RTN","RCDPAYER",155,0)
 I $P(TEXT,U,2)]"" D
"RTN","RCDPAYER",156,0)
 .N DA,DIC,DLAYGO,DR,X
"RTN","RCDPAYER",157,0)
 .S DA(1)=PRCAEN
"RTN","RCDPAYER",158,0)
 .S DIC="^PRCA(433,"_DA(1)_",7,",DIC(0)="L",X="- "_$P(TEXT,U,2)
"RTN","RCDPAYER",159,0)
 .D FILE^DICN
"RTN","RCDPAYER",160,0)
 Q
"RTN","RCDPE8NZ")
0^71^B126399220
"RTN","RCDPE8NZ",1,0)
RCDPE8NZ ;ALB/TMK/KML/hrubovcak - Unapplied EFT Deposits report ;Jun 06, 2014@19:11:19
"RTN","RCDPE8NZ",2,0)
 ;;4.5;Accounts Receivable;**173,212,208,269,276,283,293,298,317,318,326**;Mar 20, 1995;Build 26
"RTN","RCDPE8NZ",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPE8NZ",4,0)
 ;
"RTN","RCDPE8NZ",5,0)
EN ; entry point for Unapplied EFT Deposits Report [RCDPE UNAPPLIED EFT DEP REPORT]
"RTN","RCDPE8NZ",6,0)
 ; ^RCY(344.3,0) = EDI LOCKBOX DEPOSIT^344.3I^
"RTN","RCDPE8NZ",7,0)
 ;
"RTN","RCDPE8NZ",8,0)
 N %ZIS,DIR,RCDISPTY,RCDTRNG,RCENDT,RCHDR,RCLNCNT,RCLSTMGR,RCPGNUM,RCRPLST,RCSTDT,RCTMPND,RCTYPE,X,Y
"RTN","RCDPE8NZ",9,0)
 ; RCDISPTY - display type for Excel
"RTN","RCDPE8NZ",10,0)
 ; RCDTRNG - range of dates
"RTN","RCDPE8NZ",11,0)
 ; RCHDR - report header
"RTN","RCDPE8NZ",12,0)
 ; RCLNCNT - line counter for ^TMP storage
"RTN","RCDPE8NZ",13,0)
 ; RCLSTMGR - ListMan flag
"RTN","RCDPE8NZ",14,0)
 ; RCPGNUM - page number
"RTN","RCDPE8NZ",15,0)
 ; RCRPLST - node for report list in ^TMP
"RTN","RCDPE8NZ",16,0)
 ; RCTMPND - storage node (or null) for SL^RCPEARL
"RTN","RCDPE8NZ",17,0)
 ; RCTYPE - Payer type filter M - MEDICAL, P-PHARMACY, T-TRICARE, A-ALL
"RTN","RCDPE8NZ",18,0)
 ;
"RTN","RCDPE8NZ",19,0)
 S RCRPLST=$T(+0)_"_EFT"  ; storage for list of entries
"RTN","RCDPE8NZ",20,0)
 S RCLNCNT=0,RCLSTMGR="",RCTMPND=""  ; initial values for ListMan
"RTN","RCDPE8NZ",21,0)
 S RCTYPE=$$RTYPE^RCDPEU1("A") G:(RCTYPE=-1) RPTQ ; PRCA*4.5*326 - Add M/P/T filter
"RTN","RCDPE8NZ",22,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'(RCDTRNG>0) RPTQ
"RTN","RCDPE8NZ",23,0)
 S RCSTDT=$P(RCDTRNG,U,2),RCENDT=$P(RCDTRNG,U,3)
"RTN","RCDPE8NZ",24,0)
 ; ask if export to excel
"RTN","RCDPE8NZ",25,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() G:RCDISPTY<0 RPTQ
"RTN","RCDPE8NZ",26,0)
 ; for Excel, set ListMan flag to prevent question
"RTN","RCDPE8NZ",27,0)
 I RCDISPTY S RCLSTMGR="^" D INFO^RCDPEM6
"RTN","RCDPE8NZ",28,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 RPTQ
"RTN","RCDPE8NZ",29,0)
 I RCLSTMGR D  G RPTQ  ; send output to ListMan
"RTN","RCDPE8NZ",30,0)
 .S RCTMPND=$T(+0)_"^UNAPPLIED EFT" K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPE8NZ",31,0)
 .D MKRPRT
"RTN","RCDPE8NZ",32,0)
 .N H,L,HDR S L=0
"RTN","RCDPE8NZ",33,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPE8NZ",34,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 3 lines of report header
"RTN","RCDPE8NZ",35,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPE8NZ",36,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPE8NZ",37,0)
 .; invoke ListMan
"RTN","RCDPE8NZ",38,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPE8NZ",39,0)
 ;
"RTN","RCDPE8NZ",40,0)
 ; Ask device
"RTN","RCDPE8NZ",41,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPE8NZ",42,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPE8NZ",43,0)
 .N ZTRTN,ZTSAVE,ZTDESC,POP,ZTSK
"RTN","RCDPE8NZ",44,0)
 .S ZTRTN="MKRPRT^RCDPE8NZ",ZTDESC="AR - List of unlinked EFT deposit payments"
"RTN","RCDPE8NZ",45,0)
 .S ZTSAVE("RC*")=""
"RTN","RCDPE8NZ",46,0)
 .D ^%ZTLOAD
"RTN","RCDPE8NZ",47,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task.")
"RTN","RCDPE8NZ",48,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPE8NZ",49,0)
 ;
"RTN","RCDPE8NZ",50,0)
 U IO
"RTN","RCDPE8NZ",51,0)
 D MKRPRT
"RTN","RCDPE8NZ",52,0)
 Q
"RTN","RCDPE8NZ",53,0)
 ;
"RTN","RCDPE8NZ",54,0)
MKRPRT ; Entry point for queued job
"RTN","RCDPE8NZ",55,0)
 N RCTSKCNT,RCARDEP,RCCR,RCDA,RCDATA,RCDT,RCEFT,RCEFTIEN,RCREC,RCSTAT,RCSTOP,RCSUM,RCTOT,RCTR,RCUNAP,RECEXT,Y,Z,ZTSTOP
"RTN","RCDPE8NZ",56,0)
 ;
"RTN","RCDPE8NZ",57,0)
 ;  get list of unlinked EFT deposit data
"RTN","RCDPE8NZ",58,0)
 K ^TMP(RCRPLST,$J) ; subscripts: dep date,EFT ien,EFT det ien
"RTN","RCDPE8NZ",59,0)
 ;  Data is FMS doc indicator^FMS doc #^FMS Doc Status
"RTN","RCDPE8NZ",60,0)
 ;    FMS doc indicator = -1:no receipt  -2:no FMS doc  1:FMS doc exists
"RTN","RCDPE8NZ",61,0)
 ;
"RTN","RCDPE8NZ",62,0)
 S (RCTSKCNT,RCSTOP,RCSUM,RCUNAP)=0
"RTN","RCDPE8NZ",63,0)
 S RCARDEP="" F  S RCARDEP=$O(^RCY(344.3,"ARDEP",RCARDEP)) Q:RCARDEP=""!RCSTOP  S RCDA=0 F  S RCDA=$O(^RCY(344.3,"ARDEP",RCARDEP,RCDA)) Q:'RCDA  D  Q:RCSTOP
"RTN","RCDPE8NZ",64,0)
 . S RCDATA=$G(^RCY(344.3,RCDA,0)),RCDT=$P(RCDATA,U,7),RCTOT=0
"RTN","RCDPE8NZ",65,0)
 . Q:RCDT<RCSTDT  ; Before start date
"RTN","RCDPE8NZ",66,0)
 . Q:RCDT>(RCENDT+.999999)  ; After the end date
"RTN","RCDPE8NZ",67,0)
 . Q:'$P(RCDATA,"^",8)  ; no payment amt
"RTN","RCDPE8NZ",68,0)
 . S RCEFT=0 F  S RCEFT=$O(^RCY(344.31,"B",RCDA,RCEFT)) Q:'RCEFT!RCSTOP  S RCDATA(0)=$G(^RCY(344.31,RCEFT,0)) D  Q:RCSTOP
"RTN","RCDPE8NZ",69,0)
 . . I '$$ISTYPE^RCDPEU1(344.31,RCEFT,RCTYPE) Q  ;PRCA*4.5*326
"RTN","RCDPE8NZ",70,0)
 . . S RCTSKCNT=RCTSKCNT+1
"RTN","RCDPE8NZ",71,0)
 . . I '(RCTSKCNT#100),$D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ Q
"RTN","RCDPE8NZ",72,0)
 . . Q:$P($G(^RCY(344.31,RCEFT,3)),U)        ; EFT has been removed   PRCA*4.5*293
"RTN","RCDPE8NZ",73,0)
 . . S RCREC=$$GETREC(RCEFT,RCDATA(0),.RECEXT)
"RTN","RCDPE8NZ",74,0)
 . . Q:RCREC="PURGED"  ; need to prevent processed EFTs that had receipts purged from being generated on the report
"RTN","RCDPE8NZ",75,0)
 . . ;; PRCA276 - need to add EFT entries without a receipt to the total number of unapplied deposits
"RTN","RCDPE8NZ",76,0)
 . . I 'RCREC S RCUNAP=RCUNAP+1,^TMP(RCRPLST,$J,RCDT,RCDA,RCEFT)=-1,RCTOT=RCTOT+$P(RCDATA(0),U,7) Q  ; No receipt therefore no FMS document
"RTN","RCDPE8NZ",77,0)
 . . S RCSTAT=$$FMSSTAT^RCDPUREC(RCREC)
"RTN","RCDPE8NZ",78,0)
 . . I $E($P(RCSTAT,U),1,2)="TR",$P(RCSTAT,U,2)["ACCEPTED" Q
"RTN","RCDPE8NZ",79,0)
 . . S RCUNAP=RCUNAP+1,RCTOT=RCTOT+$P(RCDATA(0),U,7)  ; total unapplied deposits and total dollar amount of unapplied deposits
"RTN","RCDPE8NZ",80,0)
 . . I $P(RCSTAT,U,2)="NOT ENTERED" S ^TMP(RCRPLST,$J,RCDT,RCDA,RCEFT)="-2^^"_$P(RCSTAT,U) Q  ; No FMS doc
"RTN","RCDPE8NZ",81,0)
 . . S ^TMP(RCRPLST,$J,RCDT,RCDA,RCEFT)="1^"_$P(RCSTAT,U,1,2)_"^"_RECEXT
"RTN","RCDPE8NZ",82,0)
 . S:RCTOT ^TMP(RCRPLST,$J,RCDT,RCDA)=RCTOT,RCSUM=RCSUM+RCTOT
"RTN","RCDPE8NZ",83,0)
 ;
"RTN","RCDPE8NZ",84,0)
 D:'RCLSTMGR HDRBLD
"RTN","RCDPE8NZ",85,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPE8NZ",86,0)
 ;
"RTN","RCDPE8NZ",87,0)
 I RCDISPTY D EXCEL Q
"RTN","RCDPE8NZ",88,0)
 ;
"RTN","RCDPE8NZ",89,0)
 D RPT
"RTN","RCDPE8NZ",90,0)
 Q
"RTN","RCDPE8NZ",91,0)
 ;
"RTN","RCDPE8NZ",92,0)
RPT ;  display/print the report using data populated in temporary global array
"RTN","RCDPE8NZ",93,0)
 N RCPAYID,RCPAYER,XX,YY,ZZ   ;PRCA*4.5*318
"RTN","RCDPE8NZ",94,0)
 ;
"RTN","RCDPE8NZ",95,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; initial report header
"RTN","RCDPE8NZ",96,0)
 ;
"RTN","RCDPE8NZ",97,0)
 S RCDT=0
"RTN","RCDPE8NZ",98,0)
 F  S RCDT=$O(^TMP(RCRPLST,$J,RCDT)) Q:'RCDT  D  Q:RCSTOP
"RTN","RCDPE8NZ",99,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPE8NZ",100,0)
 .D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPE8NZ",101,0)
 .S Y="DEPOSIT DATE: "_$$FMTE^XLFDT(RCDT,1),Y=$J("",80-$L(Y)\2)_Y D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",102,0)
 .S RCARDEP=0 F  S RCARDEP=$O(^TMP(RCRPLST,$J,RCDT,RCARDEP)) Q:'RCARDEP  D
"RTN","RCDPE8NZ",103,0)
 ..D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPE8NZ",104,0)
 ..S RCTSKCNT=RCTSKCNT+1 I 'RCLSTMGR,(RCTSKCNT#100),$D(ZTQUEUED),$$S^%ZTLOAD D  Q  ; stop task
"RTN","RCDPE8NZ",105,0)
 ...S (RCSTOP,ZTSTOP)=1 D SL^RCDPEARL("TASK STOPPED BY USER!!",.RCLNCNT,RCTMPND) K ZTREQ
"RTN","RCDPE8NZ",106,0)
 ..;
"RTN","RCDPE8NZ",107,0)
 ..S RCDATA(0)=$G(^RCY(344.3,RCARDEP,0))
"RTN","RCDPE8NZ",108,0)
 ..I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPE8NZ",109,0)
 ..; PRCA*4.5*283 - Change the spaces for DEP # from 10 to 13 to allow 9 digit DEP #
"RTN","RCDPE8NZ",110,0)
 ..; PRCA*4.5*317 Shift line 2 chars to the right
"RTN","RCDPE8NZ",111,0)
 ..S Y="  "_$E($P(RCDATA(0),U,6)_$S('$$HACEFT^RCDPEU(RCARDEP):"",1:"-HAC")_$J("",13),1,13)  ;deposit #
"RTN","RCDPE8NZ",112,0)
 ..S Y=Y_"  "_$E($$FMTE^XLFDT($P(RCDATA(0),U,7),2)_$J("",16),1,16)     ; deposit date
"RTN","RCDPE8NZ",113,0)
 ..S Y=Y_"  "_$E($J(+$P(RCDATA(0),U,8),"",2)_$J("",20),1,20)           ; total amt deposit
"RTN","RCDPE8NZ",114,0)
 ..S Y=Y_"  "_$J(+$G(^TMP(RCRPLST,$J,RCDT,RCARDEP)),"",2)              ; total amt unposted
"RTN","RCDPE8NZ",115,0)
 ..D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",116,0)
 ..S RCEFTIEN=0 F  S RCEFTIEN=$O(^TMP(RCRPLST,$J,RCDT,RCARDEP,RCEFTIEN)) Q:'RCEFTIEN  S RCDATA=$G(^(RCEFTIEN)),RCEFT("DEP")=$G(^RCY(344.31,RCEFTIEN,0)) D
"RTN","RCDPE8NZ",117,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPE8NZ",118,0)
 ...N RCPAY S RCPAY=$P(RCEFT("DEP"),U,2) S:RCPAY="" RCPAY="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPE8NZ",119,0)
 ...;
"RTN","RCDPE8NZ",120,0)
 ...; PRCA*4.5*317 Shift line 2 chars to the right
"RTN","RCDPE8NZ",121,0)
 ...;S Y="   "_RCPAY_"/"_$P(RCEFT("DEP"),U,3)  D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)   ; payer/ID
"RTN","RCDPE8NZ",122,0)
 ...; PRCA*4.5*318 Account for payer names of 60 characters and payer ID of 20 characters
"RTN","RCDPE8NZ",123,0)
 ...S RCPAYID=$P(RCEFT("DEP"),U,3)
"RTN","RCDPE8NZ",124,0)
 ...S RCPAYER=RCPAY_"/"_RCPAYID      ; payer/ID
"RTN","RCDPE8NZ",125,0)
 ...I $L(RCPAYER)>77 D
"RTN","RCDPE8NZ",126,0)
 ... . S ZZ=$L(RCPAYER,"/"),XX=$P(RCPAYER,"/",1,ZZ-1),YY=$P(RCPAYER,"/",ZZ)
"RTN","RCDPE8NZ",127,0)
 ... . S XX=$E(XX,1,$L(XX)-($L(RCPAYER)-77)),RCPAYER=XX_"/"_YY
"RTN","RCDPE8NZ",128,0)
 ...S Y="   "_RCPAYER
"RTN","RCDPE8NZ",129,0)
 ...; end of PRCA*4.5*318
"RTN","RCDPE8NZ",130,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)   ; payer/ID
"RTN","RCDPE8NZ",131,0)
 ...; PRCA*4.5*317 Shift line 2 chars to the right
"RTN","RCDPE8NZ",132,0)
 ...S Y="    "_$E($P(RCEFT("DEP"),U,4)_$J("",50),1,50)                ; trace #
"RTN","RCDPE8NZ",133,0)
 ...S Y=Y_" "_$E($J(+$P(RCEFT("DEP"),U,7),"",2)_$J("",12),1,12)       ; payment amt
"RTN","RCDPE8NZ",134,0)
 ...;
"RTN","RCDPE8NZ",135,0)
 ...; PRCA*4.5*317 Shift lines 2 to thr right to allow 12 digit receipt #
"RTN","RCDPE8NZ",136,0)
 ...S Y=Y_" "_$S($P(RCDATA,U,4)'="":$P(RCDATA,U,4),1:"NO RECEIPT")    ; receipt #
"RTN","RCDPE8NZ",137,0)
 ... D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",138,0)
 ...; PRCA*4.5*317 Shift line 2 chars to the right
"RTN","RCDPE8NZ",139,0)
 ...S Z=$P(RCEFT("DEP"),U,8)
"RTN","RCDPE8NZ",140,0)
 ...S Y="      "_$E($S('Z:"UNMATCHED",Z=2:"PAPER EOB",1:"MATCHED TO ERA #: "_$P(RCEFT("DEP"),U,10)_$S(Z=-1:" (TOTALS MISMATCH)",1:""))_$J("",40),1,40)_"  "
"RTN","RCDPE8NZ",141,0)
 ...S Y=Y_$S($P(RCDATA,U)=-1:"NO RECEIPT",$P(RCDATA,U)=-2:"NO FMS DOCUMENT",1:$E($P(RCDATA,U,2)_" - "_$P(RCDATA,U,3),1,30))
"RTN","RCDPE8NZ",142,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",143,0)
 ;
"RTN","RCDPE8NZ",144,0)
 I '$D(^TMP(RCRPLST,$J)) D SL^RCDPEARL("*** NO RECORDS TO PRINT ***",.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",145,0)
 ;
"RTN","RCDPE8NZ",146,0)
 I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPE8NZ",147,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPE8NZ",148,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","RCDPE8NZ",149,0)
 G:RCSTOP RPTQ
"RTN","RCDPE8NZ",150,0)
 ;
"RTN","RCDPE8NZ",151,0)
 I 'RCLSTMGR,'RCSTOP,$E(IOST,1,2)="C-" D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPE8NZ",152,0)
 ;
"RTN","RCDPE8NZ",153,0)
RPTQ ;
"RTN","RCDPE8NZ",154,0)
 K ^TMP(RCRPLST,$J)
"RTN","RCDPE8NZ",155,0)
 Q
"RTN","RCDPE8NZ",156,0)
 ;
"RTN","RCDPE8NZ",157,0)
GETREC(EFTDA,EFTDET,RECEXT) ; function,  prca276
"RTN","RCDPE8NZ",158,0)
 ; input - EFTDA - IEN OF 344.31
"RTN","RCDPE8NZ",159,0)
 ; input - EFTDET - data stored at the 0 subscript of the THIRD PARTY EFT DETAIL file (344.31)
"RTN","RCDPE8NZ",160,0)
 ; input - RECEXT passed by reference
"RTN","RCDPE8NZ",161,0)
 ; output - RECEXT populated with the external receipt value that gets generated on the report
"RTN","RCDPE8NZ",162,0)
 ; output - RECEIPT - returns internal value of the receipt that either comes from the EFT file (344.31) or the ERA file (344.4) 
"RTN","RCDPE8NZ",163,0)
 N RECEIPT
"RTN","RCDPE8NZ",164,0)
 S RECEXT=0
"RTN","RCDPE8NZ",165,0)
 S RECEIPT=+$P($G(^RCY(344.4,+$P(EFTDET,U,10),0)),U,8)  ; get receipt off the ERA record
"RTN","RCDPE8NZ",166,0)
 I 'RECEIPT,$P(EFTDET,U,8)=2 S RECEIPT=+$O(^RCY(344,"AEFT",EFTDA,0))  ; EFT processed against paper EOB
"RTN","RCDPE8NZ",167,0)
 I 'RECEIPT S RECEIPT=$P(EFTDET,U,9) ; receipt not posted in payment file so get from EFT detail (unprocessed EFT)
"RTN","RCDPE8NZ",168,0)
 I +RECEIPT,'$D(^RCY(344,RECEIPT)) Q "PURGED"  ; handle purged receipts but broken pointer exists in 344.31; need to handle as a processed EFT 
"RTN","RCDPE8NZ",169,0)
 I +RECEIPT S RECEXT=$P(^RCY(344,RECEIPT,0),U)
"RTN","RCDPE8NZ",170,0)
 Q +RECEIPT
"RTN","RCDPE8NZ",171,0)
 ;
"RTN","RCDPE8NZ",172,0)
 ;
"RTN","RCDPE8NZ",173,0)
HDRBLD ; create the report header
"RTN","RCDPE8NZ",174,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPE8NZ",175,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPE8NZ",176,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPE8NZ",177,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPE8NZ",178,0)
 ;   RCPGNUM - page counter
"RTN","RCDPE8NZ",179,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPE8NZ",180,0)
 ; INPUT: 
"RTN","RCDPE8NZ",181,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPE8NZ",182,0)
 ;   RCRTYP - Report Type (EOB or ERA)
"RTN","RCDPE8NZ",183,0)
 ;   VAUTD
"RTN","RCDPE8NZ",184,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPE8NZ",185,0)
 ;
"RTN","RCDPE8NZ",186,0)
 ;
"RTN","RCDPE8NZ",187,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPE8NZ",188,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPE8NZ",189,0)
 .S RCHDR(1)="DEPOSIT #^DEPOSIT DATE^TOT AMT DEPOSIT^TOT AMT UNPOSTED^PAYER ID^TRACE #^PAYMENT AMT^RECEIPT #^ERA MATCHED^FMS DOC #/STATUS"
"RTN","RCDPE8NZ",190,0)
 ;
"RTN","RCDPE8NZ",191,0)
 N DIV,HCNT,Y
"RTN","RCDPE8NZ",192,0)
 S HCNT=0  ; header counter
"RTN","RCDPE8NZ",193,0)
 ;
"RTN","RCDPE8NZ",194,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPE8NZ",195,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPE8NZ",196,0)
 S Y="Run Date: "_RCHDR("RUNDATE")_"                 MEDICAL/PHARMACY/TRICARE: "   ; PRCA*4.5*326
"RTN","RCDPE8NZ",197,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL") ; PRCA*4.5*326
"RTN","RCDPE8NZ",198,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPE8NZ",199,0)
 ;
"RTN","RCDPE8NZ",200,0)
 S Y="Date Range: "_$$FMTE^XLFDT(RCSTDT,2)_" - "_$$FMTE^XLFDT(RCENDT,2)_" (Deposit Date)",Y=$J("",80-$L(Y)\2)_Y
"RTN","RCDPE8NZ",201,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPE8NZ",202,0)
 S Y="TOTAL NUMBER OF UNAPPLIED DEPOSITS: "_RCUNAP,HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPE8NZ",203,0)
 S Y="TOTAL AMOUNT OF UNAPPLIED DEPOSITS: $"_$FN(RCSUM,",",2),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPE8NZ",204,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPE8NZ",205,0)
 ;
"RTN","RCDPE8NZ",206,0)
 ; PRCA*4.5*317 Shift each line 2 chars to the right
"RTN","RCDPE8NZ",207,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="  DEPOSIT #      DEPOSIT DATE      TOT AMT OF DEPOSIT    TOT AMT UNPOSTED"
"RTN","RCDPE8NZ",208,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="   PAYER/ID"
"RTN","RCDPE8NZ",209,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",4)_"TRACE #"_$J("",44)_"PAYMENT AMT  RECEIPT #"
"RTN","RCDPE8NZ",210,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",6)_$E("ERA MATCHED"_$J("",40),1,40)_"  FMS DOC #/STATUS"
"RTN","RCDPE8NZ",211,0)
 ; PRCA*4.5*317 End
"RTN","RCDPE8NZ",212,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y  ; row of equal signs at bottom
"RTN","RCDPE8NZ",213,0)
 ;
"RTN","RCDPE8NZ",214,0)
 S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPE8NZ",215,0)
 Q
"RTN","RCDPE8NZ",216,0)
 ;
"RTN","RCDPE8NZ",217,0)
HDRLM ; create the report header
"RTN","RCDPE8NZ",218,0)
 ; returns RCHDR
"RTN","RCDPE8NZ",219,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPE8NZ",220,0)
 ; INPUT: 
"RTN","RCDPE8NZ",221,0)
 ;   RCSTDT - Date Range
"RTN","RCDPE8NZ",222,0)
 K RCHDR
"RTN","RCDPE8NZ",223,0)
 ;
"RTN","RCDPE8NZ",224,0)
 N DIV,HCNT,Y
"RTN","RCDPE8NZ",225,0)
 S HCNT=0  ; header counter
"RTN","RCDPE8NZ",226,0)
 S Y="Date Range: "_$$FMTE^XLFDT(RCSTDT,2)_" - "_$$FMTE^XLFDT(RCENDT,2)_" (Deposit Date) "
"RTN","RCDPE8NZ",227,0)
 S Y=Y_"MEDICAL/PHARMACY/TRICARE: "                                                ; PRCA*4.5*326
"RTN","RCDPE8NZ",228,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL") ; PRCA*4.5*326
"RTN","RCDPE8NZ",229,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPE8NZ",230,0)
 S Y="TOTAL NUMBER OF UNAPPLIED DEPOSITS: "_RCUNAP,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPE8NZ",231,0)
 S Y="TOTAL AMOUNT OF UNAPPLIED DEPOSITS: $"_$FN(RCSUM,",",2),HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPE8NZ",232,0)
 ;
"RTN","RCDPE8NZ",233,0)
 ; PRCA*4.5*317 Shift each line 2 chars to the right
"RTN","RCDPE8NZ",234,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="  DEPOSIT #      DEPOSIT DATE      TOT AMT OF DEPOSIT    TOT AMT UNPOSTED"
"RTN","RCDPE8NZ",235,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="   PAYER/ID"
"RTN","RCDPE8NZ",236,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",4)_"TRACE #"_$J("",44)_"PAYMENT AMT  RECEIPT #"
"RTN","RCDPE8NZ",237,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",6)_$E("ERA MATCHED"_$J("",40),1,40)_"  FMS DOC #/STATUS"
"RTN","RCDPE8NZ",238,0)
 ; PRCA*4.5*317 End
"RTN","RCDPE8NZ",239,0)
 ;
"RTN","RCDPE8NZ",240,0)
 S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPE8NZ",241,0)
 Q
"RTN","RCDPE8NZ",242,0)
 ;
"RTN","RCDPE8NZ",243,0)
 ; extrinsic variable, name for header PRCA*4.5*298
"RTN","RCDPE8NZ",244,0)
HDRNM() Q "Unapplied EFT Deposits Report"
"RTN","RCDPE8NZ",245,0)
 ;
"RTN","RCDPE8NZ",246,0)
EXCEL ; Print report formatted for export to Excel
"RTN","RCDPE8NZ",247,0)
 N STR1
"RTN","RCDPE8NZ",248,0)
 W !,$G(RCHDR(1)),!
"RTN","RCDPE8NZ",249,0)
 S RCDT=0 F  S RCDT=$O(^TMP(RCRPLST,$J,RCDT)) Q:'RCDT  D  Q:RCSTOP
"RTN","RCDPE8NZ",250,0)
 .S RCARDEP=0 F  S RCARDEP=$O(^TMP(RCRPLST,$J,RCDT,RCARDEP)) Q:'RCARDEP  D
"RTN","RCDPE8NZ",251,0)
 ..S RCDATA(0)=$G(^RCY(344.3,RCARDEP,0))
"RTN","RCDPE8NZ",252,0)
 ..S STR1=$P(RCDATA(0),U,6)_$S('$$HACEFT^RCDPEU(RCARDEP):"",1:"-HAC")_U_$$FMTE^XLFDT($P(RCDATA(0),U,7))_U_$P(RCDATA(0),U,8)_U
"RTN","RCDPE8NZ",253,0)
 ..S STR1=STR1_+$G(^TMP(RCRPLST,$J,RCDT,RCARDEP))_U
"RTN","RCDPE8NZ",254,0)
 ..S RCEFTIEN=0 F  S RCEFTIEN=$O(^TMP(RCRPLST,$J,RCDT,RCARDEP,RCEFTIEN)) Q:'RCEFTIEN  S RCDATA=$G(^(RCEFTIEN)),RCEFT("DEP")=$G(^RCY(344.31,RCEFTIEN,0)) D
"RTN","RCDPE8NZ",255,0)
 ...W STR1 S:$P(RCEFT("DEP"),U,2)="" $P(RCEFT("DEP"),U,2)="NO PAYER NAME RECEIVED" ;PRCA*4.5*298
"RTN","RCDPE8NZ",256,0)
 ...W $P(RCEFT("DEP"),U,2)_"/"_$P(RCEFT("DEP"),U,3)_U_$P(RCEFT("DEP"),U,4)_U
"RTN","RCDPE8NZ",257,0)
 ...W +$P(RCEFT("DEP"),U,7)_U_$S($P(RCDATA,U,4)'="":$P(RCDATA,U,4),1:"NO RECEIPT")_U
"RTN","RCDPE8NZ",258,0)
 ...W $P(RCEFT("DEP"),U,10)_U
"RTN","RCDPE8NZ",259,0)
 ...W $S($P(RCDATA,U)=-1:"NO RECEIPT",$P(RCDATA,U)=-2:"NO FMS DOCUMENT",1:$P(RCDATA,U,2)_" - "_$P(RCDATA,U,3))
"RTN","RCDPE8NZ",260,0)
 ...W !
"RTN","RCDPE8NZ",261,0)
 Q
"RTN","RCDPE8NZ",262,0)
 ;
"RTN","RCDPEAA1")
0^56^B152088479
"RTN","RCDPEAA1",1,0)
RCDPEAA1 ;ALB/KML - AUTO POST AWAITING RESOLUTION (APAR) - LIST OF UNPOSTED EEOBS ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA1",2,0)
 ;;4.5;Accounts Receivable;**298,304,317,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAA1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA1",4,0)
 Q
"RTN","RCDPEAA1",5,0)
 ;
"RTN","RCDPEAA1",6,0)
EN ; Main entry point
"RTN","RCDPEAA1",7,0)
 N RCQUIT,RCPROG
"RTN","RCDPEAA1",8,0)
 S RCQUIT=0
"RTN","RCDPEAA1",9,0)
 S RCPROG="RCDPEAA1"
"RTN","RCDPEAA1",10,0)
 ; Calling Change View API in Menu Option Mode
"RTN","RCDPEAA1",11,0)
 S RCQUIT=$$PARAMS("MO") ; PRCA*4.5*321
"RTN","RCDPEAA1",12,0)
 Q:RCQUIT
"RTN","RCDPEAA1",13,0)
 D EN^VALM("RCDPE APAR EEOB LIST")
"RTN","RCDPEAA1",14,0)
 ;
"RTN","RCDPEAA1",15,0)
ENQ Q
"RTN","RCDPEAA1",16,0)
 ;
"RTN","RCDPEAA1",17,0)
INIT ; EP Listman Template - RCDPE APAR EEOB LIST
"RTN","RCDPEAA1",18,0)
 ;
"RTN","RCDPEAA1",19,0)
 ; Parameters for selecting EEOBs to be included in the list are
"RTN","RCDPEAA1",20,0)
 ; contained in the global ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,parameter name)
"RTN","RCDPEAA1",21,0)
 ;
"RTN","RCDPEAA1",22,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",23,0)
 N FDTTM,P1,P2,RCAPAR,RCDA,RCPROG
"RTN","RCDPEAA1",24,0)
 S RCAPAR=1,P1="RCDPE_APAR_EEOB_PASS1",P2="RCDPE_APAR_EEOB_PASS2"
"RTN","RCDPEAA1",25,0)
 S RCPROG="RCDPE-APAR_EEOB_WL"
"RTN","RCDPEAA1",26,0)
 D FULL^VALM1,CLEAN^VALM10
"RTN","RCDPEAA1",27,0)
 K ^TMP($J,RCPROG),^TMP($J,P1),^TMP($J,P2)
"RTN","RCDPEAA1",28,0)
 K ^TMP(RCPROG,$J),^TMP("RCDPE-APAR_EEOB_WLDX",$J)
"RTN","RCDPEAA1",29,0)
 ; First Pass - Get ERAs that are in a 'partial' auto-post status
"RTN","RCDPEAA1",30,0)
 S RCDA=0
"RTN","RCDPEAA1",31,0)
 F  D  Q:'RCDA
"RTN","RCDPEAA1",32,0)
 . S RCDA=$O(^RCY(344.4,"E",1,RCDA))
"RTN","RCDPEAA1",33,0)
 . Q:'RCDA
"RTN","RCDPEAA1",34,0)
 . Q:'$$FILTER(RCDA)  ; Record didn't pass filter criteria
"RTN","RCDPEAA1",35,0)
 . S ^TMP($J,P1,RCDA)=""
"RTN","RCDPEAA1",36,0)
 ;
"RTN","RCDPEAA1",37,0)
 D:$D(^TMP($J,P1)) BLD^RCDPEAA4(P1,P2,RCPROG) ; Build, Sort and Output the list
"RTN","RCDPEAA1",38,0)
 ;
"RTN","RCDPEAA1",39,0)
 ; If no EEOBs found display the message below in the list area
"RTN","RCDPEAA1",40,0)
 I '$O(^TMP(RCPROG,$J,0)) D
"RTN","RCDPEAA1",41,0)
 . S ^TMP(RCPROG,$J,1,0)="THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA"
"RTN","RCDPEAA1",42,0)
 . S VALMCNT=1
"RTN","RCDPEAA1",43,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",44,0)
 Q
"RTN","RCDPEAA1",45,0)
 ;
"RTN","RCDPEAA1",46,0)
HDR ;
"RTN","RCDPEAA1",47,0)
 N LINE,RCMDRX,RCPAYR,SORT,X,Y
"RTN","RCDPEAA1",48,0)
 S RCPAYR=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEAA1",49,0)
 S RCMDRX=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",50,0)
 S Y=$S(RCMDRX="M":"MEDICAL",RCMDRX="P":"PHARMACY",RCMDRX="T":"TRICARE",1:"ALL")_" CLAIMS"
"RTN","RCDPEAA1",51,0)
 S X=$S(($P(RCPAYR,U)="A")!(RCPAYR=""):"ALL PAYERS",1:"PAYERS: "_$P(RCPAYR,U,2)_"-"_$P(RCPAYR,U,3))
"RTN","RCDPEAA1",52,0)
 S VALMHDR(1)="Current View:"_$J("",4)_Y_" for "_X
"RTN","RCDPEAA1",53,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",54,0)
 S SORT=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",1)
"RTN","RCDPEAA1",55,0)
 S X=$S(SORT="N":"Payer Name",SORT="R":"Reason",SORT="D":"Date",SORT="U":"Unposted",1:"Posted")
"RTN","RCDPEAA1",56,0)
 S Y=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",2)
"RTN","RCDPEAA1",57,0)
 I SORT="D" S X=X_$S(Y="H":" - Descending",1:" - Ascending")
"RTN","RCDPEAA1",58,0)
 E  S X=X_$S(Y="H":" - Highest to Lowest",Y="L":" - Lowest to Highest",1:"")
"RTN","RCDPEAA1",59,0)
 S VALMHDR(2)="   Sorted By:"_$J("",4)_X
"RTN","RCDPEAA1",60,0)
 S LINE=$J("",10)_$$LJ^XLFSTR("ERA #.Sequence",17)
"RTN","RCDPEAA1",61,0)
 S LINE=LINE_$$LJ^XLFSTR("Claim #",14)
"RTN","RCDPEAA1",62,0)
 S LINE=LINE_$$RJ^XLFSTR("Posted",13)_" "
"RTN","RCDPEAA1",63,0)
 ; S LINE=LINE_$$LJ^XLFSTR("Post Dt",11)
"RTN","RCDPEAA1",64,0)
 S LINE=LINE_$$LJ^XLFSTR("Created Dt",11) ; PRCA*4.5*321
"RTN","RCDPEAA1",65,0)
 S LINE=LINE_$$RJ^XLFSTR("Unposted",13)
"RTN","RCDPEAA1",66,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",67,0)
 S VALMHDR(3)=LINE
"RTN","RCDPEAA1",68,0)
 Q
"RTN","RCDPEAA1",69,0)
 ;
"RTN","RCDPEAA1",70,0)
EXIT ; -- Clean up list
"RTN","RCDPEAA1",71,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",72,0)
 K ^TMP("RCDPE_APAR_PVW",$J)
"RTN","RCDPEAA1",73,0)
 K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",74,0)
 K ^TMP("RCDPE-APAR_EEOB_WL",$J),^TMP("RCDPE-APAR_EEOB_WLDX",$J)
"RTN","RCDPEAA1",75,0)
 K ^TMP($J,"RCDPE_APAR_EEOB_PASS1"),^TMP($J,"RCDPE_APAR_EEOB_PASS2")
"RTN","RCDPEAA1",76,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",77,0)
 K RCAPAR
"RTN","RCDPEAA1",78,0)
 Q
"RTN","RCDPEAA1",79,0)
 ;
"RTN","RCDPEAA1",80,0)
PARAMS(SOURCE) ; Retrieve/Edit/Save View Parameters for APAR EEOB Worklist
"RTN","RCDPEAA1",81,0)
 ; Input:   SOURCE      - "MO" - Called from Menu Option 
"RTN","RCDPEAA1",82,0)
 ;                        "CV" - Called from Change View action
"RTN","RCDPEAA1",83,0)
 ; Output: ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR") - P1^P2^P3 Where:
"RTN","RCDPEAA1",84,0)
 ;                                                      P1- All Payers/Range of Payers
"RTN","RCDPEAA1",85,0)
 ;                                                          ("A": All/"R":Range of Payers)
"RTN","RCDPEAA1",86,0)
 ;                                                      P2- START WITH PAYER (e.g.,'AET')
"RTN","RCDPEAA1",87,0)
 ;                                                          (Range Limited Only)
"RTN","RCDPEAA1",88,0)
 ;                                                      P3- GO TO PAYER (e.g.,'AETZ')
"RTN","RCDPEAA1",89,0)
 ;                                                         (Range Limited Only)
"RTN","RCDPEAA1",90,0)
 ;         ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")-  (M)edical, (P)harmacy, or (B)
"RTN","RCDPEAA1",91,0)
 ;        
"RTN","RCDPEAA1",92,0)
 ;         ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT") - P1^P2 Where
"RTN","RCDPEAA1",93,0)
 ;                                                    P1 - Sort Type
"RTN","RCDPEAA1",94,0)
 ;                                                         "N" - Payer Name
"RTN","RCDPEAA1",95,0)
 ;                                                         "P" - Posted Amount
"RTN","RCDPEAA1",96,0)
 ;                                                         "R" - Auto-Post Reject Reason
"RTN","RCDPEAA1",97,0)
 ;                                                         "U" - Unposted Amount
"RTN","RCDPEAA1",98,0)
 ;                                                    P2 - H - Highest to Lowest Amount
"RTN","RCDPEAA1",99,0)
 ;                                                         L - Lowest to Highest Amount
"RTN","RCDPEAA1",100,0)
 ;                                                         ""- If P1="N" or "P"
"RTN","RCDPEAA1",101,0)
 ; Returns: 1 if user ^ arrowed or timed out, 0 otherwise
"RTN","RCDPEAA1",102,0)
 N RCQUIT,RCXPAR,USEPVW,XX    ;PRCA*4.5*321 added RCQUIT
"RTN","RCDPEAA1",103,0)
 S (RCQUIT,USEPVW)=0          ;PRCA*4.5*321 initialise USEPW
"RTN","RCDPEAA1",104,0)
 ; Retrieve user's saved preferred view (if any)
"RTN","RCDPEAA1",105,0)
 D:SOURCE="MO" GETWLPVW(.RCXPAR)
"RTN","RCDPEAA1",106,0)
 ;
"RTN","RCDPEAA1",107,0)
 ;Only ask user if they want to use their preferred view in the following scenarios:
"RTN","RCDPEAA1",108,0)
 ; a) Source is "MO" and user has a preferred view on file
"RTN","RCDPEAA1",109,0)
 ; b) Source is "CV" (change view action), user has a preferred view but is
"RTN","RCDPEAA1",110,0)
 ;    not using the preferred view criteria at this time.
"RTN","RCDPEAA1",111,0)
 S XX=$$PREFVW(SOURCE)
"RTN","RCDPEAA1",112,0)
 I ((XX=1)&(SOURCE="MO"))!((XX=0)&(SOURCE="CV")) D  ; PRCA*4.5*321 - move Q:USEPVW
"RTN","RCDPEAA1",113,0)
 . ;
"RTN","RCDPEAA1",114,0)
 . ; Ask the user if they want to use the preferred view
"RTN","RCDPEAA1",115,0)
 . S USEPVW=$$ASKUVW^RCDPEWL0()
"RTN","RCDPEAA1",116,0)
 . I USEPVW=-1 S RCQUIT=1 Q
"RTN","RCDPEAA1",117,0)
 . Q:'USEPVW
"RTN","RCDPEAA1",118,0)
 . ;
"RTN","RCDPEAA1",119,0)
 . ; Set the Sort/Filtering Criteria from the preferred view 
"RTN","RCDPEAA1",120,0)
 . M ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)=^TMP("RCDPE_APAR_PVW",$J)
"RTN","RCDPEAA1",121,0)
 ;
"RTN","RCDPEAA1",122,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",123,0)
 Q:USEPVW 0
"RTN","RCDPEAA1",124,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",125,0)
 ; PRCA*4.5*326 prompt for type filter first in case we need to use it in payer selection
"RTN","RCDPEAA1",126,0)
 S RCQUIT=$$MORP() ; Select Medical or Pharmacy, or Tricare
"RTN","RCDPEAA1",127,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",128,0)
 S RCQUIT=$$PAYR() ; Select Payer(s)
"RTN","RCDPEAA1",129,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",130,0)
 S RCQUIT=$$SORT() ; Select Sort
"RTN","RCDPEAA1",131,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",132,0)
 S RCQUIT=$$SAVEPVW() ; Save Preferred View
"RTN","RCDPEAA1",133,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",134,0)
 Q 0
"RTN","RCDPEAA1",135,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",136,0)
 ;
"RTN","RCDPEAA1",137,0)
GETWLPVW(RCXPAR)  ; Retrieves the preferred view settings for the APAR worklist
"RTN","RCDPEAA1",138,0)
 ; for the user
"RTN","RCDPEAA1",139,0)
 ; PRCA*4.5*317 - Added subroutine
"RTN","RCDPEAA1",140,0)
 ; Input:   None
"RTN","RCDPEAA1",141,0)
 ; Output:  RCXPAR()                        - Array of preferred view sort/filter criteria
"RTN","RCDPEAA1",142,0)
 ;          ^TMP("RCDPE_APAR_EEOB_PARAMS",$)- Global array of preferred view settings
"RTN","RCDPEAA1",143,0)
 N XX
"RTN","RCDPEAA1",144,0)
 K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",145,0)
 D GETLST^XPAR(.RCXPAR,"USR","RCDPE APAR","I")
"RTN","RCDPEAA1",146,0)
 D:$D(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS")) PVWSAVE(.RCXPAR)
"RTN","RCDPEAA1",147,0)
 ;
"RTN","RCDPEAA1",148,0)
 S XX=$G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))
"RTN","RCDPEAA1",149,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=$S(XX'="":$TR(XX,";","^"),1:"A")
"RTN","RCDPEAA1",150,0)
 S XX=$G(RCXPAR("MEDICAL/PHARMACY"))
"RTN","RCDPEAA1",151,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")=$S(XX'="":$TR(XX,";","^"),1:"A") ; PRCA*4.5*326 Default A
"RTN","RCDPEAA1",152,0)
 ; PRCA&4.5*321 - add sort to preferened view
"RTN","RCDPEAA1",153,0)
 S XX=$G(RCXPAR("SORT"))
"RTN","RCDPEAA1",154,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")=$S(XX'="":$TR(XX,";","^"),1:"N")
"RTN","RCDPEAA1",155,0)
 Q
"RTN","RCDPEAA1",156,0)
 ;
"RTN","RCDPEAA1",157,0)
PVWSAVE(RCXPAR) ; Save a copy of the preferred view on file
"RTN","RCDPEAA1",158,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEAA1",159,0)
 ; Input: RCXPAR - array of preferred view setting for the user
"RTN","RCDPEAA1",160,0)
 ; Output: ^TMP("RCERA_PVW") - a copy of the preferred settings
"RTN","RCDPEAA1",161,0)
 ;
"RTN","RCDPEAA1",162,0)
 K ^TMP("RCDPE_APAR_PVW",$J)
"RTN","RCDPEAA1",163,0)
 ; only continue if we have answers to all APAR related preferred view prompts
"RTN","RCDPEAA1",164,0)
 Q:'$D(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))
"RTN","RCDPEAA1",165,0)
 Q:'$D(RCXPAR("MEDICAL/PHARMACY"))
"RTN","RCDPEAA1",166,0)
 Q:'$D(RCXPAR("SORT"))  ; PRCA*4.5*321
"RTN","RCDPEAA1",167,0)
 ;
"RTN","RCDPEAA1",168,0)
 S ^TMP("RCDPE_APAR_PVW",$J,"RCPAYR")=$TR(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"),";","^")
"RTN","RCDPEAA1",169,0)
 S ^TMP("RCDPE_APAR_PVW",$J,"RCMEDRX")=$TR(RCXPAR("MEDICAL/PHARMACY"),";","^")
"RTN","RCDPEAA1",170,0)
 S ^TMP("RCDPE_APAR_PVW",$J,"SORT")=$TR(RCXPAR("SORT"),";","^") ; PRCA*4.5*321
"RTN","RCDPEAA1",171,0)
 Q
"RTN","RCDPEAA1",172,0)
 ;
"RTN","RCDPEAA1",173,0)
PREFVW(SOURCE,RCXPAR) ; Checks to see if the user has a preferred view
"RTN","RCDPEAA1",174,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEAA1",175,0)
 ; When source is 'CV', checks to see if the preferred view is being used
"RTN","RCDPEAA1",176,0)
 ; Input:   SOURCE                         - 'MO' - When called from the Lockbox menu
"RTN","RCDPEAA1",177,0)
 ;                                                  option
"RTN","RCDPEAA1",178,0)
 ;                                           'CV' - When called from the Change View
"RTN","RCDPEAA1",179,0)
 ;                                                  action
"RTN","RCDPEAA1",180,0)
 ;          RCXPAR                        - Array of preferred view values
"RTN","RCDPEAA1",181,0)
 ;          ^TMP("RCDPE_APAR_EEOB_PARAMS")- Global array of currently in use defaults
"RTN","RCDPEAA1",182,0)
 ;          ^TMP("RCDPE_APAR_PVW",$J)     - Global array of preferred view settings
"RTN","RCDPEAA1",183,0)
 ;
"RTN","RCDPEAA1",184,0)
 ; Returns: 1 - User has preferred view if SOURCE is 'MO' or is using
"RTN","RCDPEAA1",185,0)
 ;              their preferred view if SOURCE is 'CV'
"RTN","RCDPEAA1",186,0)
 ;          0 - User is not using their preferred view
"RTN","RCDPEAA1",187,0)
 ;         -1 - User does not have a preferred view
"RTN","RCDPEAA1",188,0)
 ;
"RTN","RCDPEAA1",189,0)
 I SOURCE="MO" Q $S($D(^TMP("RCDPE_APAR_PVW",$J)):1,1:-1)
"RTN","RCDPEAA1",190,0)
 Q:'$D(^TMP("RCDPE_APAR_PVW",$J)) -1      ; No stored preferred view
"RTN","RCDPEAA1",191,0)
 Q:$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"))'=$G(^TMP("RCDPE_APAR_PVW",$J,"RCPAYR")) 0
"RTN","RCDPEAA1",192,0)
 Q:$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))'=$G(^TMP("RCDPE_APAR_PVW",$J,"RCMEDRX")) 0
"RTN","RCDPEAA1",193,0)
 Q:$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT"))'=$G(^TMP("RCDPE_APAR_PVW",$J,"SORT")) 0 ; PRCA*4.5*321
"RTN","RCDPEAA1",194,0)
 Q 1
"RTN","RCDPEAA1",195,0)
 ;
"RTN","RCDPEAA1",196,0)
PAYR() ; Payer Selection
"RTN","RCDPEAA1",197,0)
 ; Input:   ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR") - Current payer selection setting
"RTN","RCDPEAA1",198,0)
 ; Output:  ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR") - Updated  payer selection setting
"RTN","RCDPEAA1",199,0)
 ;          RCQUIT=1 if user ^ or timed out
"RTN","RCDPEAA1",200,0)
 ; Returns: 1 if user ^ arrowed or time out
"RTN","RCDPEAA1",201,0)
 N DIR,DIRUT,DIROUT,DUOUT,DTOUT,RCPAYR,RCPAYRDF,RCXPAR,RCDRLIM,RCERROR,RCAUTOPDF
"RTN","RCDPEAA1",202,0)
 N RCTYPEDF,RCQ,X,XX,Y
"RTN","RCDPEAA1",203,0)
 S RCPAYRDF=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEAA1",204,0)
 S RCQUIT=0
"RTN","RCDPEAA1",205,0)
 K DIR
"RTN","RCDPEAA1",206,0)
 S DIR(0)="SA^A:ALL;R:RANGE"
"RTN","RCDPEAA1",207,0)
 S DIR("A")="(A)LL payers, (R)ANGE of payer names: "
"RTN","RCDPEAA1",208,0)
 S DIR("B")="ALL"
"RTN","RCDPEAA1",209,0)
 S DIR("?",1)="Entering ALL will select all payers."
"RTN","RCDPEAA1",210,0)
 S DIR("?")="If RANGE is entered, you will be prompted for a payer range."
"RTN","RCDPEAA1",211,0)
 S:$P(RCPAYRDF,"^")'="" DIR("B")=$P(RCPAYRDF,"^")  ;Stored preferred view, use as default
"RTN","RCDPEAA1",212,0)
 W !
"RTN","RCDPEAA1",213,0)
 D ^DIR
"RTN","RCDPEAA1",214,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q 1
"RTN","RCDPEAA1",215,0)
 S RCPAYR=Y
"RTN","RCDPEAA1",216,0)
 I RCPAYR="A" S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=Y Q 0
"RTN","RCDPEAA1",217,0)
 I RCPAYR="R" D  Q:RCQUIT RCQUIT
"RTN","RCDPEAA1",218,0)
 . W !,"Names you select here will be the payer names from the ERA, NOT the INS File"
"RTN","RCDPEAA1",219,0)
 . K DIR
"RTN","RCDPEAA1",220,0)
 . S DIR("?")="Enter a name between 1 and 30 characters in UPPERCASE"
"RTN","RCDPEAA1",221,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="Start with payer name: "
"RTN","RCDPEAA1",222,0)
 . S:$P(RCPAYRDF,"^",2)'="" DIR("B")=$P(RCPAYRDF,"^",2)  ;Stored preferred view, use as default
"RTN","RCDPEAA1",223,0)
 . W !
"RTN","RCDPEAA1",224,0)
 . D ^DIR
"RTN","RCDPEAA1",225,0)
 . I $D(DTOUT)!$D(DUOUT) D  Q
"RTN","RCDPEAA1",226,0)
 . . S RCQUIT=1 Q
"RTN","RCDPEAA1",227,0)
 . . K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")
"RTN","RCDPEAA1",228,0)
 . S RCPAYR("FROM")=Y
"RTN","RCDPEAA1",229,0)
 . K DIR
"RTN","RCDPEAA1",230,0)
 . S DIR("?")="Enter a name between 1 and 30 characters in UPPERCASE"
"RTN","RCDPEAA1",231,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="Go to payer name: "
"RTN","RCDPEAA1",232,0)
 . S DIR("B")=$E(RCPAYR("FROM"),1,27)_"ZZZ"
"RTN","RCDPEAA1",233,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEAA1",234,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAA1",235,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=RCPAYR_"^"_RCPAYR("FROM")_"^"_Y
"RTN","RCDPEAA1",236,0)
 Q 0
"RTN","RCDPEAA1",237,0)
 ;
"RTN","RCDPEAA1",238,0)
MORP() ; Ask for Medical or Pharmacy, Tricare (Or All)
"RTN","RCDPEAA1",239,0)
 ; Input: None
"RTN","RCDPEAA1",240,0)
 ; Returns: 1 if user ^ arrowed or timed out, 0 otherwise
"RTN","RCDPEAA1",241,0)
 N DEF
"RTN","RCDPEAA1",242,0)
 S DEF=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",243,0)
 S DEF=$S(DEF="P":"PHARMACY",DEF="M":"MEDICAL",DEF="T":"TRICARE",1:"ALL") ; PRCA*4.5*326
"RTN","RCDPEAA1",244,0)
 S RCQ=$$RTYPE^RCDPEU1(DEF) ; PRCA*4.5*326
"RTN","RCDPEAA1",245,0)
 I RCQ=-1 Q 1
"RTN","RCDPEAA1",246,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")=RCQ
"RTN","RCDPEAA1",247,0)
 Q 0
"RTN","RCDPEAA1",248,0)
 ;
"RTN","RCDPEAA1",249,0)
SORT() ; Ask for Sort - Payer, Dollar, Date, Trace Number
"RTN","RCDPEAA1",250,0)
 ; Input: None
"RTN","RCDPEAA1",251,0)
 ; Returns: 1 if user ^ arrowed or timed out, 0 otherwise
"RTN","RCDPEAA1",252,0)
 N DEF,DIR,DIRUT,DTOUT,DUOUT,P1,X,XX,Y
"RTN","RCDPEAA1",253,0)
 S DEF=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",1)
"RTN","RCDPEAA1",254,0)
 S DEF=$S(DEF="D":"DATE",DEF="N":"PAYER NAME",DEF="P":"POSTED",DEF="R":"REASON",DEF="U":"UNPOSTED",1:"")
"RTN","RCDPEAA1",255,0)
 S DIR(0)="SA^D:DATE;N:PAYER NAME;P:POSTED;R:REASON;U:UNPOSTED"
"RTN","RCDPEAA1",256,0)
 S DIR("A")="Sort By (D)ATE, PAYER (N)AME, (R)EASON, (P)OSTED, (U)NPOSTED: "
"RTN","RCDPEAA1",257,0)
 S DIR("B")=$S(DEF'="":DEF,1:"DATE")
"RTN","RCDPEAA1",258,0)
 S DIR("?",1)="Enter 'DATE' to sort by date created."
"RTN","RCDPEAA1",259,0)
 S DIR("?",2)="Enter 'PAYER NAME' to sort by payer name."
"RTN","RCDPEAA1",260,0)
 S DIR("?",3)="Enter 'REASON' to sort by auto-post reject reason."
"RTN","RCDPEAA1",261,0)
 S DIR("?",4)="Enter 'POSTED' to sort by the posted amount."
"RTN","RCDPEAA1",262,0)
 S DIR("?")="Enter 'UNPOSTED' to sort by the unposted amount."
"RTN","RCDPEAA1",263,0)
 W !
"RTN","RCDPEAA1",264,0)
 D ^DIR
"RTN","RCDPEAA1",265,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEAA1",266,0)
 I Y="N"!(Y="R") D  Q 0
"RTN","RCDPEAA1",267,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")=Y
"RTN","RCDPEAA1",268,0)
 ;
"RTN","RCDPEAA1",269,0)
 S P1=Y,XX=""
"RTN","RCDPEAA1",270,0)
 I P1="P"!(P1="U") S XX=$$HTOL() I XX=-1 Q 1
"RTN","RCDPEAA1",271,0)
 I P1="D" S XX=$$DATEORD() I XX=-1 Q 1
"RTN","RCDPEAA1",272,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")=P1_"^"_XX
"RTN","RCDPEAA1",273,0)
 Q 0
"RTN","RCDPEAA1",274,0)
 ;
"RTN","RCDPEAA1",275,0)
HTOL() ; Ask for how dollar amounts should be sorted - either highest to
"RTN","RCDPEAA1",276,0)
 ; lowest amount or lowest to highest amount
"RTN","RCDPEAA1",277,0)
 ; Input: None
"RTN","RCDPEAA1",278,0)
 ; Returns: -1 - if user ^ arrowed or timed out
"RTN","RCDPEAA1",279,0)
 ; H - Highest to Lowest
"RTN","RCDPEAA1",280,0)
 ; L - Lowest to Highest
"RTN","RCDPEAA1",281,0)
 N DEF,DIR,DIRUT,DTOUT,DUOUT,P1,X,Y
"RTN","RCDPEAA1",282,0)
 S DEF=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",2)
"RTN","RCDPEAA1",283,0)
 S DEF=$S(DEF="H":"HIGHEST TO LOWEST",DEF="L":"LOWEST TO HIGHEST",1:"")
"RTN","RCDPEAA1",284,0)
 S DIR(0)="SA^H:HIGHEST TO LOWEST;L:LOWEST TO HIGHEST"
"RTN","RCDPEAA1",285,0)
 S DIR("A")="Sort By (H)IGHEST TO LOWEST or (L)OWEST TO HIGHEST: "
"RTN","RCDPEAA1",286,0)
 S DIR("B")=$S(DEF'="":DEF,1:"HIGHEST TO LOWEST")
"RTN","RCDPEAA1",287,0)
 S DIR("?",1)="Enter 'HIGHEST TO LOWEST' to sort amounts in decreasing order."
"RTN","RCDPEAA1",288,0)
 S DIR("?")="Enter 'LOWEST TO HIGHEST' to sort amounts in increasing order."
"RTN","RCDPEAA1",289,0)
 W !
"RTN","RCDPEAA1",290,0)
 D ^DIR
"RTN","RCDPEAA1",291,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPEAA1",292,0)
 Q Y
"RTN","RCDPEAA1",293,0)
DATEORD() ; Ask how creation date should be sorted - ascending or descending
"RTN","RCDPEAA1",294,0)
 ; Input: None
"RTN","RCDPEAA1",295,0)
 ; Returns: -1 - if user ^ arrowed or timed out
"RTN","RCDPEAA1",296,0)
 ; H - Descending (Highest to lowest)
"RTN","RCDPEAA1",297,0)
 ; L - Ascending (Lowest to Highest)
"RTN","RCDPEAA1",298,0)
 N DEF,DIR,DIRUT,DTOUT,DUOUT,P1,X,Y
"RTN","RCDPEAA1",299,0)
 S DEF=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",2)
"RTN","RCDPEAA1",300,0)
 S DEF=$S(DEF="H":"DESCENDING",DEF="L":"ASCENDING",1:"")
"RTN","RCDPEAA1",301,0)
 S DIR(0)="SA^A:ASCENDING;D:DESCENDING"
"RTN","RCDPEAA1",302,0)
 S DIR("A")="Sort in (A)SCENDING or (D)ESCENDING order: "
"RTN","RCDPEAA1",303,0)
 S DIR("B")=$S(DEF'="":DEF,1:"ASCENDING")
"RTN","RCDPEAA1",304,0)
 S DIR("?",1)="Enter 'ASCENDING' to see oldest EEOBs first."
"RTN","RCDPEAA1",305,0)
 S DIR("?")="Enter 'DESCENDING' to see newest EEOBs first."
"RTN","RCDPEAA1",306,0)
 W !
"RTN","RCDPEAA1",307,0)
 D ^DIR
"RTN","RCDPEAA1",308,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPEAA1",309,0)
 S Y=$S(Y="D":"H",1:"L")
"RTN","RCDPEAA1",310,0)
 Q Y
"RTN","RCDPEAA1",311,0)
SAVEPVW() ; Option to save as User Preferred View
"RTN","RCDPEAA1",312,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEAA1",313,0)
 ; Input: ^TMP("RCDPE_APAR_EEOB_PARAMS",$J) - Global array of current worklist settings
"RTN","RCDPEAA1",314,0)
 ; Output Current worklist settings set as preferred view (potentially)
"RTN","RCDPEAA1",315,0)
 ;        ^TMP("RCDPE_APAR_PVW",$J)         - Global array of preferred view settings
"RTN","RCDPEAA1",316,0)
 ; Returns: 1 - User ^ arrowed or timed out, 0 otherwise
"RTN","RCDPEAA1",317,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,XX,Y
"RTN","RCDPEAA1",318,0)
 K DIR
"RTN","RCDPEAA1",319,0)
 W !
"RTN","RCDPEAA1",320,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEAA1",321,0)
 S DIR("A")="Do you want to save this as your preferred view (Y/N)? "
"RTN","RCDPEAA1",322,0)
 D ^DIR
"RTN","RCDPEAA1",323,0)
 ; PRCA*4.5*321 ; Start modified code block
"RTN","RCDPEAA1",324,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEAA1",325,0)
 I Y=1 D
"RTN","RCDPEAA1",326,0)
 . S XX=^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")
"RTN","RCDPEAA1",327,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","ALL_PAYERS/RANGE_OF_PAYERS",$TR(XX,"^",";"),.RCERROR)
"RTN","RCDPEAA1",328,0)
 . S XX=^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")
"RTN","RCDPEAA1",329,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","MEDICAL/PHARMACY",XX,.RCERROR)
"RTN","RCDPEAA1",330,0)
 . S XX=^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")
"RTN","RCDPEAA1",331,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","SORT",$TR(XX,"^",";"),.RCERROR)
"RTN","RCDPEAA1",332,0)
 . ;
"RTN","RCDPEAA1",333,0)
 . ;Capture new preferred settings for comparison
"RTN","RCDPEAA1",334,0)
 . K ^TMP("RCDPE_APAR_PVW",$J)
"RTN","RCDPEAA1",335,0)
 . M ^TMP("RCDPE_APAR_PVW",$J)=^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",336,0)
 Q 0
"RTN","RCDPEAA1",337,0)
 ; PRCA*4.5*321 ; End modified code block
"RTN","RCDPEAA1",338,0)
 ;
"RTN","RCDPEAA1",339,0)
FILTER(RCDA) ; Returns 1 if record in entry 344.4 passes
"RTN","RCDPEAA1",340,0)
 ; the edits for the APAR worklist selection of EEOBs
"RTN","RCDPEAA1",341,0)
 ; Parameters found in ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",342,0)
 ; 
"RTN","RCDPEAA1",343,0)
 ; Input: RCDA - Internal IEN OF 344.4
"RTN","RCDPEAA1",344,0)
 ; Returns: 1 if the ERA Record passes filters, 0 otherwise
"RTN","RCDPEAA1",345,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",346,0)
 N OK,RCECME,RCERATYP,RCIEN,RCPAYR,RCPAYFR,RCPAYTO,XX
"RTN","RCDPEAA1",347,0)
 S OK=1
"RTN","RCDPEAA1",348,0)
 ;
"RTN","RCDPEAA1",349,0)
 S RCPAYR=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,1)
"RTN","RCDPEAA1",350,0)
 S RCPAYFR=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,2)
"RTN","RCDPEAA1",351,0)
 S RCPAYTO=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,3)
"RTN","RCDPEAA1",352,0)
 S RCERATYP=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",353,0)
 ; Payer name filter
"RTN","RCDPEAA1",354,0)
 I RCPAYR'="A" D  Q:'OK OK
"RTN","RCDPEAA1",355,0)
 . S XX=$$GET1^DIQ(344.4,RCDA,.06,"I") ; Payer Name
"RTN","RCDPEAA1",356,0)
 . S XX=$$UP^XLFSTR(XX)
"RTN","RCDPEAA1",357,0)
 . ;
"RTN","RCDPEAA1",358,0)
 . ; Make sure the Payer is in the selected Payer range
"RTN","RCDPEAA1",359,0)
 . I $S(XX=RCPAYFR:1,XX=RCPAYTO:1,XX]RCPAYFR:RCPAYTO]XX,1:0) Q
"RTN","RCDPEAA1",360,0)
 . S OK=0
"RTN","RCDPEAA1",361,0)
 ;
"RTN","RCDPEAA1",362,0)
 ; ERA Type (Medical/Pharmacy) filter
"RTN","RCDPEAA1",363,0)
 I RCERATYP'="A" D  ; PRCA*4.5*326
"RTN","RCDPEAA1",364,0)
 . I '$$ISTYPE^RCDPEU1(344.4,RCDA,RCERATYP) S OK=0 ; PRCA*4.5*326
"RTN","RCDPEAA1",365,0)
 Q OK
"RTN","RCDPEAA1",366,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",367,0)
 ;
"RTN","RCDPEAA1",368,0)
ENTEREOB ; EP Protocol action - RCDPE APAR SELECT EEOB
"RTN","RCDPEAA1",369,0)
 ; Enter the APAR EEOB SCRATCHPAD
"RTN","RCDPEAA1",370,0)
 N RCDA,RCDA1,RCIENS,X,XQORM
"RTN","RCDPEAA1",371,0)
 S VALMBCK="R"
"RTN","RCDPEAA1",372,0)
 S RCIENS=$$SEL()
"RTN","RCDPEAA1",373,0)
 I 'RCIENS D INIT Q
"RTN","RCDPEAA1",374,0)
 D EN^VALM("RCDPE APAR SELECTED EEOB")
"RTN","RCDPEAA1",375,0)
 D INIT
"RTN","RCDPEAA1",376,0)
 Q
"RTN","RCDPEAA1",377,0)
 ;
"RTN","RCDPEAA1",378,0)
SEL() ; Select an item from the APAR list of EEOBs
"RTN","RCDPEAA1",379,0)
 ; Input: None
"RTN","RCDPEAA1",380,0)
 ; Returns: RCIENS - Internal IENs A1^A2^A3 Where:
"RTN","RCDPEAA1",381,0)
 ; A1 - IEN for in file 344.49
"RTN","RCDPEAA1",382,0)
 ; A2 - IEN for subfile 344.491
"RTN","RCDPEAA1",383,0)
 ; A3 - Selectable line item from listman screen
"RTN","RCDPEAA1",384,0)
 N RCDA,RCITEMS,RCSEQ,VALMY
"RTN","RCDPEAA1",385,0)
 D FULL^VALM1
"RTN","RCDPEAA1",386,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEAA1",387,0)
 S (RCSEQ,RCDA,RCITEMS)=0
"RTN","RCDPEAA1",388,0)
 F  D  Q:'RCSEQ
"RTN","RCDPEAA1",389,0)
 . S RCSEQ=$O(VALMY(RCSEQ))
"RTN","RCDPEAA1",390,0)
 . Q:'RCSEQ
"RTN","RCDPEAA1",391,0)
 . S RCITEMS=$P($G(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ)),U,2,3)_U_RCSEQ
"RTN","RCDPEAA1",392,0)
 Q RCITEMS
"RTN","RCDPEAA1",393,0)
 ;
"RTN","RCDPEAA1",394,0)
CV ;
"RTN","RCDPEAA1",395,0)
 ; Change View action for APAR pick list
"RTN","RCDPEAA1",396,0)
 D FULL^VALM1 D PARAMS("CV")
"RTN","RCDPEAA1",397,0)
 D HDR,INIT S VALMBCK="R",VALMBG=1
"RTN","RCDPEAA1",398,0)
 Q
"RTN","RCDPEAA2")
0^21^B156548123
"RTN","RCDPEAA2",1,0)
RCDPEAA2 ;ALB/KML - APAR Screen - SELECTED EOB ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA2",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAA2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA2",4,0)
 Q
"RTN","RCDPEAA2",5,0)
 ;
"RTN","RCDPEAA2",6,0)
INIT(RCIENS) ; Entry point for List template to build the display of the EEOB on APAR
"RTN","RCDPEAA2",7,0)
 ;  
"RTN","RCDPEAA2",8,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA2",9,0)
 ;
"RTN","RCDPEAA2",10,0)
 N FDTTM
"RTN","RCDPEAA2",11,0)
 D CLEAN^VALM10
"RTN","RCDPEAA2",12,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP("RCS",$J)
"RTN","RCDPEAA2",13,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEAA2",14,0)
 D BLD(RCIENS)
"RTN","RCDPEAA2",15,0)
 Q
"RTN","RCDPEAA2",16,0)
 ;
"RTN","RCDPEAA2",17,0)
 ;
"RTN","RCDPEAA2",18,0)
BLD(RCIENS) ; Display selected EEOB  on APAR screen
"RTN","RCDPEAA2",19,0)
 N RCZ0,RCECME,REASON,V1,RCLI1,TLINE,RCSCR,Z,ZZ,Z0,ZZ1,RC0,RCTL,RCTS,RCCL,RCCL1
"RTN","RCDPEAA2",20,0)
 S RCSCR=$P(RCIENS,U),Z=$P(^RCY(344.49,RCSCR,1,$P(RCIENS,U,2),0),U),RCPROG="RCDPEAA2"
"RTN","RCDPEAA2",21,0)
 I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEAA2",22,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEAA2",23,0)
 .. S ^TMP("RCS",$J,ZZ,ZZ1)=""
"RTN","RCDPEAA2",24,0)
 . S ^TMP("RCS",$J,ZZ)=""
"RTN","RCDPEAA2",25,0)
 S (RCTS,ZZ)=0
"RTN","RCDPEAA2",26,0)
 F  S ZZ=$O(^TMP("RCS",$J,ZZ)) Q:'ZZ  D
"RTN","RCDPEAA2",27,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0))
"RTN","RCDPEAA2",28,0)
 . S RCECME=$P($G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),4)),U,2)  ; ECME # (344.41,.24)
"RTN","RCDPEAA2",29,0)
 . S REASON=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",5)  ; AUTOPOST REJECTION REASON (344.41,5)
"RTN","RCDPEAA2",30,0)
 . S TLINE=$$TOPLINE(RCZ0)
"RTN","RCDPEAA2",31,0)
 . D SET(TLINE,$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",32,0)
 . ; PRCA*4.5*304 - Add claim comment to screen if it exists for this ERA EEOB detail line
"RTN","RCDPEAA2",33,0)
 . S:$P(RCZ0,U,9)'="" RCCL=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",4)
"RTN","RCDPEAA2",34,0)
 . D:$G(RCCL)'=""  ; If we have a ERA Detail line comment, display it
"RTN","RCDPEAA2",35,0)
 . . D SLINE(RCCL,"RCCL1",58,76)
"RTN","RCDPEAA2",36,0)
 . . S TLINE=$J("",4)_"Claim Comment: "_RCCL1(1)
"RTN","RCDPEAA2",37,0)
 . . D SET(TLINE,$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",38,0)
 . . ; If we have a second line for the comment then put it on the screen
"RTN","RCDPEAA2",39,0)
 . . I RCCL1>1 D SET($J("",4)_RCCL1(2),$P(RCZ0,U),$P(RCZ0,U),ZZ) I RCCL1=3 D SET($J("",4)_RCCL1(3),$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",40,0)
 . ; **End of *304 modifications**
"RTN","RCDPEAA2",41,0)
 . ; sub-line info (e.g., "n.001")
"RTN","RCDPEAA2",42,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP("RCS",$J,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEAA2",43,0)
 . . S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEAA2",44,0)
 . . S RCT=$P(RCZZ0,U),RCTL=$L(RCT)
"RTN","RCDPEAA2",45,0)
 . . S V1=$S($P(RCZZ0,U,2)'["**ADJ":"",$P($P(RCZZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEAA2",46,0)
 . . S RCLI1=$S(V1="":" Claim #: "_$P(RCZZ0,U,2)_" Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),ZZ1),1:"??"),1:V1)
"RTN","RCDPEAA2",47,0)
 . . D SET($J("",4)_$P("   ^(V)",U,$P(RCZZ0,U,13)+1)_RCT_RCLI1,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",48,0)
 . . I $P(RCZZ0,U,7) D CLINES(RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",49,0)
 . . ;
"RTN","RCDPEAA2",50,0)
 . . D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCT,RCT,ZZ1)
"RTN","RCDPEAA2",51,0)
 . . ; display pharmacy EEOB data  
"RTN","RCDPEAA2",52,0)
 . . I RCECME]"" D RXLINES(RCZZ0,RCECME,RCT,ZZ1)
"RTN","RCDPEAA2",53,0)
 . . ; PRCA*4.5*321 BEGIN
"RTN","RCDPEAA2",54,0)
 . . I $P(RCZZ0,U,10)'="" D
"RTN","RCDPEAA2",55,0)
 . . . D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",56,0)
 . . . D SET($J("",9)_"Added By User: "_$$GET1^DIQ(344.491,ZZ1_","_RCSCR_",",2.03),RCTS,RCT,ZZ1)
"RTN","RCDPEAA2",57,0)
 . . . D SET($J("",9)_"Date/Time Added: "_$$GET1^DIQ(344.491,ZZ1_","_RCSCR_",",2.04),RCTS,RCT,ZZ1)
"RTN","RCDPEAA2",58,0)
 . . ; PRCA*4.5*321 END
"RTN","RCDPEAA2",59,0)
 . . I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D ADJLINES(RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",60,0)
 . . I $G(^TMP($J,"RC_REVIEW")) D REVLINES(RCSCR,RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",61,0)
 . . D SET($J("",7)_"APAR Reason: "_REASON,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",62,0)
 . . S A="",$P(A,".",79)="" D SET(A,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",63,0)
 I VALMCNT=0 D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEAA2",64,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEAA2",65,0)
 Q
"RTN","RCDPEAA2",66,0)
 ;
"RTN","RCDPEAA2",67,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set ListManager arrays
"RTN","RCDPEAA2",68,0)
 ; X = the data to set into the global
"RTN","RCDPEAA2",69,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEAA2",70,0)
 ; RCSEQ1 = = the sub line #
"RTN","RCDPEAA2",71,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEAA2",72,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",73,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEAA2",74,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEAA2",75,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEAA2",76,0)
 Q
"RTN","RCDPEAA2",77,0)
 ;
"RTN","RCDPEAA2",78,0)
TOPLINE(RCZ0) ; Function returns the top line of the EEOB display
"RTN","RCDPEAA2",79,0)
 ; RCZ0 = the 0-node of the whole number entry line for the EEOB
"RTN","RCDPEAA2",80,0)
 N A
"RTN","RCDPEAA2",81,0)
 S A=" "_$S($P(RCZ0,U,13):"(V)",1:"   ")_"EEOB: ERA Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+$P(RCZ0,U,6),"",2)
"RTN","RCDPEAA2",82,0)
 I $G(^TMP($J,"RC_REVIEW")) S A=A_"  Reviewed?: "_$S($P(RCZ0,U,11)="":"NO",1:$$EXTERNAL^DILFD(344.491,.11,,$P(RCZ0,U,11)))
"RTN","RCDPEAA2",83,0)
 Q A
"RTN","RCDPEAA2",84,0)
 ;
"RTN","RCDPEAA2",85,0)
 ;PRCA*4.5*304 - Split long line into printable lengths
"RTN","RCDPEAA2",86,0)
SLINE(ZIN,ZARR,FLN,SLN) ;
"RTN","RCDPEAA2",87,0)
 ; ZIN - Input string; ZARR - Array output of lines ; FLN - First line length ; SLN - Subsequent line lengths
"RTN","RCDPEAA2",88,0)
 ; Assumes ZIN max length is 132 characters and FLN and SLN variables will make ZIN fit in 3 lines.
"RTN","RCDPEAA2",89,0)
 N ZL,ZI,ZM
"RTN","RCDPEAA2",90,0)
 I $L(ZIN)<(FLN+1) S @ZARR@(1)=ZIN,@ZARR=1 Q
"RTN","RCDPEAA2",91,0)
 ; Otherwise we are spanning more than 1 line
"RTN","RCDPEAA2",92,0)
 S ZL="" F ZI=1:1 Q:($L(ZL)+$L($P(ZIN," ",ZI)))>FLN  S ZL=ZL_$S($L(ZL)>0:" ",1:"")_$P(ZIN," ",ZI)
"RTN","RCDPEAA2",93,0)
 S @ZARR@(1)=ZL,ZL=$P(ZIN," ",ZI,9999)
"RTN","RCDPEAA2",94,0)
 I $L(ZL)<(SLN+1) S @ZARR@(2)=ZL,@ZARR=2 Q
"RTN","RCDPEAA2",95,0)
 ; Spilling onto a third line.
"RTN","RCDPEAA2",96,0)
 S ZM="" F ZI=1:1 Q:($L(ZM)+$L($P(ZL," ",ZI)))>SLN  S ZM=ZM_$S($L(ZM)>0:" ",1:"")_$P(ZL," ",ZI)
"RTN","RCDPEAA2",97,0)
 S @ZARR@(2)=ZM,ZM=$P(ZL," ",ZI,9999)
"RTN","RCDPEAA2",98,0)
 S @ZARR@(3)=ZM,@ZARR=3
"RTN","RCDPEAA2",99,0)
 Q
"RTN","RCDPEAA2",100,0)
 ; **END of *304 changes**
"RTN","RCDPEAA2",101,0)
 ;
"RTN","RCDPEAA2",102,0)
CLINES(RCZZ0,RCT,ZZ1) ;  called from BLD ; set up the claim information lines
"RTN","RCDPEAA2",103,0)
 ; 
"RTN","RCDPEAA2",104,0)
 ;  Input -   RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",105,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",106,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",107,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",108,0)
 N A,RCX,Q,QQ
"RTN","RCDPEAA2",109,0)
 S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEAA2",110,0)
 ; Find Rx copay status
"RTN","RCDPEAA2",111,0)
 S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEAA2",112,0)
 ; Find M/T status
"RTN","RCDPEAA2",113,0)
 S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEAA2",114,0)
 S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEAA2",115,0)
 S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEAA2",116,0)
 D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",117,0)
 S ^TMP("RC_BILL",$J,$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEAA2",118,0)
 S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEAA2",119,0)
 S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEAA2",120,0)
 D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",121,0)
 Q
"RTN","RCDPEAA2",122,0)
 ;
"RTN","RCDPEAA2",123,0)
REVLINES(RCSCR,RCZZ0,RCT,ZZ1) ;called from BLD; set up the reviewed lines
"RTN","RCDPEAA2",124,0)
 ; 
"RTN","RCDPEAA2",125,0)
 ;    Input - RCSCR = ien of 344.49 (and 344.4)
"RTN","RCDPEAA2",126,0)
 ;            RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",127,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",128,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",129,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",130,0)
 N A,A0,B,B0
"RTN","RCDPEAA2",131,0)
 S A=$J("",10)_"REVIEW STATUS: ("_$S($P(RCZZ0,U,11)="I":"REVIEW IN PROCESS",$P(RCZZ0,U,11)=1:"REVIEWED",1:"NOT REVIEWED")
"RTN","RCDPEAA2",132,0)
 I $P(RCZZ0,U,12) S A=A_"   SET BY: "_$E($P($G(^VA(200,$P(RCZZ0,U,12),0)),U),1,20)
"RTN","RCDPEAA2",133,0)
 D SET(A_")",+$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",134,0)
 S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ1,4,A)) Q:'A  S A0=$G(^(A,0)) D
"RTN","RCDPEAA2",135,0)
 . D SET($J("",12)_$$FMTE^XLFDT($P(A0,U),2)_"  "_$P($G(^VA(200,+$P(A0,U,2),0)),U)_$S($P(A0,U,4):"  LAST EDIT: "_$$FMTE^XLFDT($P(A0,U,4),2),1:""),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",136,0)
 . S B=0 F  S B=$O(^RCY(344.49,RCSCR,1,ZZ1,4,A,1,B)) Q:'B  S B0=$G(^(B,0)) D
"RTN","RCDPEAA2",137,0)
 . . I $L(B0)>64 D SET($J("",15)_$E(B0,1,64),$P(RCZZ0,U),RCT,ZZ1) S B0="  "_$E(B0,65,$L(B0)) ; Split line if > 64 characters in comment line
"RTN","RCDPEAA2",138,0)
 . . D SET($J("",15)_B0,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",139,0)
 Q
"RTN","RCDPEAA2",140,0)
 ;
"RTN","RCDPEAA2",141,0)
ADJLINES(RCZZ0,RCT,ZZ1) ; called from BLD;  set up the adjustment lines
"RTN","RCDPEAA2",142,0)
 ; 
"RTN","RCDPEAA2",143,0)
 ;  Input -   RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",144,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",145,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",146,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",147,0)
 N RCAZ,RCAZ0,Z3
"RTN","RCDPEAA2",148,0)
 S Z3=""
"RTN","RCDPEAA2",149,0)
 D SET($J("",4+RCTL)_"ADJUSTMENTS:",$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",150,0)
 S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEAA2",151,0)
 . S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEAA2",152,0)
 . I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",153,0)
 . I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",154,0)
 . I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEAA2",155,0)
 . . S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEAA2",156,0)
 . I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",157,0)
 . I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",158,0)
 . D SET(Z3,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",159,0)
 . I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",160,0)
 Q
"RTN","RCDPEAA2",161,0)
 ;
"RTN","RCDPEAA2",162,0)
 ;
"RTN","RCDPEAA2",163,0)
RXLINES(RCZZ0,RCECME,RCT,ZZ1) ; called from BLD ; set up the Pharmacy lines
"RTN","RCDPEAA2",164,0)
 ;
"RTN","RCDPEAA2",165,0)
 ;  Input -   RCZZ0   = zero node data at 344.491
"RTN","RCDPEAA2",166,0)
 ;            RCECME  = ECME # for Pharmacy claims
"RTN","RCDPEAA2",167,0)
 ;            RCT     = sub line #
"RTN","RCDPEAA2",168,0)
 ;            ZZ1     = reference to the to the subline in
"RTN","RCDPEAA2",169,0)
 ;                      file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",170,0)
 N RXARRAY
"RTN","RCDPEAA2",171,0)
 D GETPHARM^RCDPEWLP($P(RCZZ0,U,7),.RXARRAY)
"RTN","RCDPEAA2",172,0)
 D SET($J("",9)_"ECME #: "_RCECME,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",173,0)
 I '$D(RXARRAY) D SET($J("",9)_" Pharmacy data does not exist for this claim",$P(RCZZ0,U),RCT,ZZ1) Q
"RTN","RCDPEAA2",174,0)
 D SET($J("",9)_"Rx/Fill/Release Status: "_RXARRAY("RX")_"/"_RXARRAY("FILL")_"/"_RXARRAY("RELEASED STATUS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",175,0)
 D SET($J("",9)_"DOS: "_RXARRAY("DOS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",176,0)
 Q
"RTN","RCDPEAA2",177,0)
 ;
"RTN","RCDPEAA2",178,0)
HDR ; Creates header lines for the selected EEOB display
"RTN","RCDPEAA2",179,0)
 N RC0,RC4,RC5,Z,RCDA,RCSEQ
"RTN","RCDPEAA2",180,0)
 I '$G(RCIENS) S VALMQUIT=1 Q
"RTN","RCDPEAA2",181,0)
 S RCDA=$P(RCIENS,U),RCSEQ=$P(RCIENS,U,3)
"RTN","RCDPEAA2",182,0)
 S RC0=$G(^RCY(344.4,RCDA,0)),RC4=$G(^RCY(344.4,RCDA,4)),RC5=$G(^RCY(344.4,RCDA,5))
"RTN","RCDPEAA2",183,0)
 S VALMHDR(1)=$E("ERA Entry #: "_$P(RC0,U)_$J("",31),1,31)_"Total Amt Pd: "_$J(+$P(RC0,U,5),"",2)
"RTN","RCDPEAA2",184,0)
 I +RCSEQ S VALMHDR(2)=$E("Posted Amt: "_$J($P(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ),U,5),"",2)_$J("",31),1,31)
"RTN","RCDPEAA2",185,0)
 S VALMHDR(2)=$G(VALMHDR(2))_"Un-posted balance: "_$J($P(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ),U,4),"",2)
"RTN","RCDPEAA2",186,0)
 S VALMHDR(3)="Payer Name/ID: "_$P(RC0,U,6)_"/"_$P(RC0,U,3)
"RTN","RCDPEAA2",187,0)
 S Z=+$O(^RCY(344.31,"AERA",RCDA,0))
"RTN","RCDPEAA2",188,0)
 I Z S VALMHDR(4)="EFT #/TRACE #: "_$$GET1^DIQ(344.31,Z_",",.01,"E")_"/"_$P(RC0,U,2) ; PRCA*4.5*326
"RTN","RCDPEAA2",189,0)
 I 'Z,$P(RC5,U,2)'="" S VALMHDR(4)="PAPER CHECK #: "_$P(RC5,U,2)
"RTN","RCDPEAA2",190,0)
 S VALMHDR(5)="Posted Receipt #(s): "_$$RCPTS(RCDA,RC0)
"RTN","RCDPEAA2",191,0)
 Q
"RTN","RCDPEAA2",192,0)
 ;
"RTN","RCDPEAA2",193,0)
RCPTS(RCDA,RC0) ; pull list of 'other receipt #s
"RTN","RCDPEAA2",194,0)
 ;  input  - RCDA  = ien of entry in 344.4
"RTN","RCDPEAA2",195,0)
 ;           RC0   = data string at zero node of entry in 344.4
"RTN","RCDPEAA2",196,0)
 ;  output - RCPTS = returns list of receipts stored at 344.4,.08 and 344.48 multiple
"RTN","RCDPEAA2",197,0)
 N X,RIEN,RCPTS
"RTN","RCDPEAA2",198,0)
 S X=0
"RTN","RCDPEAA2",199,0)
 S RCPTS=$P($G(^RCY(344,+$P(RC0,U,8),0)),U)
"RTN","RCDPEAA2",200,0)
 I RCPTS="" G RCPTSQ  ; receipt not posted to any of EEOB items
"RTN","RCDPEAA2",201,0)
 S RCPTS=RCPTS_","
"RTN","RCDPEAA2",202,0)
 F  S X=$O(^RCY(344.4,RCDA,8,X)) Q:'X  S RIEN=+^(X,0) S RCPTS=RCPTS_$P($G(^RCY(344,RIEN,0)),U)_","
"RTN","RCDPEAA2",203,0)
 S RCPTS=$$TRIM^XLFSTR(RCPTS,"R",",")  ; remove orphan comma from last receipt number
"RTN","RCDPEAA2",204,0)
RCPTSQ ;
"RTN","RCDPEAA2",205,0)
 Q RCPTS
"RTN","RCDPEAA2",206,0)
 ;
"RTN","RCDPEAA2",207,0)
EXIT ; -- Clean up list
"RTN","RCDPEAA2",208,0)
 K RCFASTXT
"RTN","RCDPEAA2",209,0)
 Q
"RTN","RCDPEAA2",210,0)
 ;
"RTN","RCDPEAA2",211,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEAA2",212,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEAA2",213,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEAA2",214,0)
 ; RC = the ien of file 430
"RTN","RCDPEAA2",215,0)
 N Z,Z0,Q
"RTN","RCDPEAA2",216,0)
 S Z=""
"RTN","RCDPEAA2",217,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEAA2",218,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEAA2",219,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEAA2",220,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEAA2",221,0)
 I $G(RC)'="" D
"RTN","RCDPEAA2",222,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEAA2",223,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEAA2",224,0)
 Q Z
"RTN","RCDPEAA2",225,0)
 ;
"RTN","RCDPEAA2",226,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEAA2",227,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEAA2",228,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEAA2",229,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEAA2",230,0)
 Q A
"RTN","RCDPEAA2",231,0)
 ;
"RTN","RCDPEAA2",232,0)
COPAY(RCIFN)       ; Returns 1 if any not cancelled 1st party bills exist for
"RTN","RCDPEAA2",233,0)
 ; a 3rd party bill or any bills related to this 3rd party bill
"RTN","RCDPEAA2",234,0)
 ; RCIFN = the 3rd party bill #
"RTN","RCDPEAA2",235,0)
 N FIRST,RCTP0,RCTP1,RCTP2
"RTN","RCDPEAA2",236,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEAA2",237,0)
 D RELBILL^IBRFN(RCIFN) ; DBIA 3124
"RTN","RCDPEAA2",238,0)
 S RCTP0=0 F  S RCTP0=$O(^TMP("IBRBF",$J,RCIFN,RCTP0)) Q:RCTP0=""  S RCTP1=$G(^(RCTP0)) D
"RTN","RCDPEAA2",239,0)
 . I $P(RCTP1,U,3) K ^TMP("IBRBF",$J,RCIFN,RCTP0) Q  ; IB cancelled
"RTN","RCDPEAA2",240,0)
 . S RCTP2=$O(^PRCA(430,"B",+$P(RCTP1,U,4),0)) I $P($G(^PRCA(430,+RCTP2,0)),U,8)=39 K ^TMP("IBRBF",$J,RCIFN,RCTP0) ; AR cancelled
"RTN","RCDPEAA2",241,0)
 S FIRST=$S($O(^TMP("IBRBF",$J,RCIFN,0)):1,1:0)
"RTN","RCDPEAA2",242,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEAA2",243,0)
 Q FIRST
"RTN","RCDPEAA2",244,0)
 ;
"RTN","RCDPEAA2",245,0)
MARK(RCIENS) ;EP - Protocol action - RCDPE MARK FOR AUTO POST
"RTN","RCDPEAA2",246,0)
 ; Mark for Auto-Post - EEOB on APAR gets marked for auto-post if it passes
"RTN","RCDPEAA2",247,0)
 ; autoposting validation
"RTN","RCDPEAA2",248,0)
 ; Input:   RCIENS  - Internal IEN of entry in file 344.49^ien of 
"RTN","RCDPEAA2",249,0)
 ;                    344.491^selectable line item from listman screen
"RTN","RCDPEAA2",250,0)
 ;
"RTN","RCDPEAA2",251,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEAA2",252,0)
 . D FULL^VALM1
"RTN","RCDPEAA2",253,0)
 . S VALMBCK="R"
"RTN","RCDPEAA2",254,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEAA2",255,0)
 . D PAUSE^VALM1
"RTN","RCDPEAA2",256,0)
 ;
"RTN","RCDPEAA2",257,0)
 N RESULT,REASON,LINE,DIR,X,Y,RCERROR,XX,ERADA1,RCDFDA
"RTN","RCDPEAA2",258,0)
 S:$G(RCIENS)="" RCIENS=+$$SEL^RCDPEAA1()
"RTN","RCDPEAA2",259,0)
 Q:'RCIENS
"RTN","RCDPEAA2",260,0)
 I '$$VALID($P(RCIENS,U),$P(RCIENS,U,2),.RESULT) D  G MARKQ ; $$VALID split from RCDPEAP - PRCA*4.5*326
"RTN","RCDPEAA2",261,0)
 . S LINE=$O(RESULT(""))
"RTN","RCDPEAA2",262,0)
 . S REASON=$TR(RESULT(LINE),U,"-")
"RTN","RCDPEAA2",263,0)
 . S DIR(0)="EA",DIR("A",1)="EEOB cannot be marked for Auto-Post for the following reason:"
"RTN","RCDPEAA2",264,0)
 . S DIR("A",2)=REASON
"RTN","RCDPEAA2",265,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEAA2",266,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEAA2",267,0)
 ; EEOB passed validation; ready for Autopost
"RTN","RCDPEAA2",268,0)
 L +^RCY(344.4,$P(RCIENS,U),0):5 I '$T D NOLOCK G MARKQ
"RTN","RCDPEAA2",269,0)
 S ERADA1=$P($G(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),0)),U,9)  ; get 344.41 ien (344.491,.09)
"RTN","RCDPEAA2",270,0)
 S RCDFDA(344.41,ERADA1_","_$P(RCIENS,U)_",",6)=1
"RTN","RCDPEAA2",271,0)
 S RCDFDA(344.41,ERADA1_","_$P(RCIENS,U)_",",6.01)=DUZ ; PRCA*4.5*326
"RTN","RCDPEAA2",272,0)
 D FILE^DIE("","RCDFDA")
"RTN","RCDPEAA2",273,0)
 D UPDERA($P(RCIENS,U),DUZ) ; PRCA*4.5*326 - also update top level ERA
"RTN","RCDPEAA2",274,0)
 S DIR(0)="EA",DIR("A",1)=$P(RCIENS,U)_"."_ERADA1_" has been marked for auto-post and has been removed from the APAR List."
"RTN","RCDPEAA2",275,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEAA2",276,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEAA2",277,0)
 L -^RCY(344.4,$P(RCIENS,U),0)
"RTN","RCDPEAA2",278,0)
MARKQ ;
"RTN","RCDPEAA2",279,0)
 Q
"RTN","RCDPEAA2",280,0)
 ;
"RTN","RCDPEAA2",281,0)
NOLOCK ; entry cannot be locked
"RTN","RCDPEAA2",282,0)
 N DIR
"RTN","RCDPEAA2",283,0)
 S DIR(0)="EA"
"RTN","RCDPEAA2",284,0)
 S DIR("A",1)="Sorry, another user is editing this ERA entry."
"RTN","RCDPEAA2",285,0)
 S DIR("A",2)="Try again later."
"RTN","RCDPEAA2",286,0)
 S DIR("A",3)=""
"RTN","RCDPEAA2",287,0)
 S DIR("A")="PRESS ENTER TO CONTINUE "
"RTN","RCDPEAA2",288,0)
 D ^DIR
"RTN","RCDPEAA2",289,0)
 Q
"RTN","RCDPEAA2",290,0)
 ;
"RTN","RCDPEAA2",291,0)
VIEWERA(RCIENS) ; View/Print ERA - protocol entry from APAR EEOB List screen and APAR - EEOB ITEM - SCRATCHPAD screen
"RTN","RCDPEAA2",292,0)
 N RCSCR
"RTN","RCDPEAA2",293,0)
 I RCPROG="RCDPEAA2" S RCSCR=$P(RCIENS,U)
"RTN","RCDPEAA2",294,0)
 I RCPROG="RCDPEAA1" S RCSCR=+$$SEL^RCDPEAA1()
"RTN","RCDPEAA2",295,0)
 I RCSCR>0 D PRERA^RCDPEWL0
"RTN","RCDPEAA2",296,0)
 Q
"RTN","RCDPEAA2",297,0)
 ;
"RTN","RCDPEAA2",298,0)
VALID(RCSCR,SCRLINE,RCARRAY) ;Validates Scratchpad line - Used by APAR/Mark for Auto-post - split from RCDPEAP  - PRCA*4.5*326
"RTN","RCDPEAA2",299,0)
 ;Input
"RTN","RCDPEAA2",300,0)
 ;  RCSCR   - #344.4/#344.49 file IEN
"RTN","RCDPEAA2",301,0)
 ;  SCRLINE - Subscript of first scratchpad entry for the ERA line
"RTN","RCDPEAA2",302,0)
 ;  RCARRAY - Passed reference to result array
"RTN","RCDPEAA2",303,0)
 ;Output
"RTN","RCDPEAA2",304,0)
 ;  OK      - Boolean 1 or 0
"RTN","RCDPEAA2",305,0)
 ;  RCARRAY - Array of claim(s) which fail validation
"RTN","RCDPEAA2",306,0)
 ;
"RTN","RCDPEAA2",307,0)
 ;            e.g  line number 2
"RTN","RCDPEAA2",308,0)
 ;                 RCARRAY(2.001)="K800001^NOT AN ACTIVE CLAIM"
"RTN","RCDPEAA2",309,0)
 ;
"RTN","RCDPEAA2",310,0)
 ;            e.g. split line number 2
"RTN","RCDPEAA2",311,0)
 ;                 RCARRAY(2.001)="K800002^CLAIM REFERRED TO GENERAL COUNCIL"
"RTN","RCDPEAA2",312,0)
 ;                 RCARRAY(2.006)="K800003^PAYMENT EXCEEDS CLAIM BALANCE"
"RTN","RCDPEAA2",313,0)
 ;
"RTN","RCDPEAA2",314,0)
 N CLAIM,DONE,SEQ,SEQ1,SUB,STATUS,WLINE
"RTN","RCDPEAA2",315,0)
 K RCARRAY,CLARRAY
"RTN","RCDPEAA2",316,0)
 S SUB=SCRLINE,SEQ=$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U),DONE=0
"RTN","RCDPEAA2",317,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,SUB)) Q:SUB=""  D  Q:DONE
"RTN","RCDPEAA2",318,0)
 . ;Get scratchpad N.001 line and data
"RTN","RCDPEAA2",319,0)
 . S WLINE=$G(^RCY(344.49,RCSCR,1,SUB,0)),SEQ1=$P(WLINE,".") I SEQ1'=SEQ S DONE=1 Q
"RTN","RCDPEAA2",320,0)
 . ;Get claim number from N.00N line - ignore suspense lines
"RTN","RCDPEAA2",321,0)
 . S CLAIM=$P(WLINE,U,7) I 'CLAIM Q
"RTN","RCDPEAA2",322,0)
 . ;Claim must be OPEN or ACTIVE
"RTN","RCDPEAA2",323,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8) I STATUS'=42,STATUS'=16 S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^NOT AN ACTIVE CLAIM" Q
"RTN","RCDPEAA2",324,0)
 . ;Check that payment does not exceed balance and no pending payments (at the time of auto posting)
"RTN","RCDPEAA2",325,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3) I '$$CHECKPAY^RCDPEAP(.CLARRAY,CLAIM) S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^PAYMENT EXCEEDS CLAIM BALANCE" Q
"RTN","RCDPEAA2",326,0)
 . ;Check if referred to general council
"RTN","RCDPEAA2",327,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^CLAIM REFERRED TO GENERAL COUNCIL" Q
"RTN","RCDPEAA2",328,0)
 . ;Check that payment is not negative
"RTN","RCDPEAA2",329,0)
 . I $P(WLINE,U,6)<0 S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^PAYMENT AMOUNT IS NEGATIVE" Q
"RTN","RCDPEAA2",330,0)
 ;Returns 1 if line is OK
"RTN","RCDPEAA2",331,0)
 Q $S($O(RCARRAY(""))]"":0,1:1)
"RTN","RCDPEAA2",332,0)
 ;
"RTN","RCDPEAA2",333,0)
UPDERA(ERAIEN,RCDUZ) ; Update MARK FOR AUTOPOST USER top level ERA with DUZ from detail line. PRCA*4.5*326
"RTN","RCDPEAA2",334,0)
 ; MARK FOR AUTOPOST USER is required at ERA level for initial receipt and AR transaction crreation
"RTN","RCDPEAA2",335,0)
 ; so the MARK FOR AUTOPOST USER at the top level will be equal to the last detail line marekd for autopost
"RTN","RCDPEAA2",336,0)
 N FDA,IENS
"RTN","RCDPEAA2",337,0)
 S FDA(344.4,ERAIEN_",",4.04)=RCDUZ
"RTN","RCDPEAA2",338,0)
 D FILE^DIE("","FDA")
"RTN","RCDPEAA2",339,0)
 Q
"RTN","RCDPEAC")
0^55^B168209657
"RTN","RCDPEAC",1,0)
RCDPEAC ;ALB/TMK/PJH - ACTIVE BILLS WITH EEOB ON FILE ;Jun 06, 2014@19:11:19
"RTN","RCDPEAC",2,0)
 ;;4.5;Accounts Receivable;**208,269,276,298,303,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAC",4,0)
 ;
"RTN","RCDPEAC",5,0)
EN ; Entry point for Active Bills With EEOB Report [RCDPE ACTIVE WITH EEOB REPORT]
"RTN","RCDPEAC",6,0)
 N %ZIS,DTOUT,DUOUT,CHAM,HDR,POP,RCCT,RCDISPTY,RCHDR,RCINS,RCLSTMGR,RCPGNUM,RCSORT,RCSTOP,RCTMPND,TRIC,VAUTD,X,Y
"RTN","RCDPEAC",7,0)
 N START,END,RCZRO
"RTN","RCDPEAC",8,0)
 ; PRCA*4.5*276 - IA 1077 - Query Division
"RTN","RCDPEAC",9,0)
 D DIVISION^VAUTOMA
"RTN","RCDPEAC",10,0)
 I 'VAUTD&($D(VAUTD)'=11) Q
"RTN","RCDPEAC",11,0)
 ; PRCA*4.5*276 - select report format
"RTN","RCDPEAC",12,0)
 Q:'$$SELECT(.RCINS,.RCSORT,.RCZRO,.RCTYPE)
"RTN","RCDPEAC",13,0)
 ;
"RTN","RCDPEAC",14,0)
 S RCTMPND="",RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAC",15,0)
 I RCLSTMGR D  G ENOUT
"RTN","RCDPEAC",16,0)
 . S RCTMPND=$T(+0)_"^AR - ACTIVE BILLS WITH EEOB REPORT"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEAC",17,0)
 . D ENQ
"RTN","RCDPEAC",18,0)
 . M HDR=RCHDR
"RTN","RCDPEAC",19,0)
 . D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEAC",20,0)
 . I $D(RCTMPND) K ^TMP($J,RCTMPND)
"RTN","RCDPEAC",21,0)
 ;
"RTN","RCDPEAC",22,0)
 W !
"RTN","RCDPEAC",23,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEAC",24,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPEAC",25,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEAC",26,0)
 .S ZTRTN="ENQ^RCDPEAC",ZTDESC="AR - ACTIVE BILLS WITH EEOB REPORT"
"RTN","RCDPEAC",27,0)
 .S ZTSAVE("*")=""
"RTN","RCDPEAC",28,0)
 .D ^%ZTLOAD
"RTN","RCDPEAC",29,0)
 .W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEAC",30,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPEAC",31,0)
 U IO
"RTN","RCDPEAC",32,0)
 ;
"RTN","RCDPEAC",33,0)
ENQ ; Queued entry point for the report
"RTN","RCDPEAC",34,0)
 ; RCSORT and array RCINS must exist
"RTN","RCDPEAC",35,0)
 ; RCINS = "A" for all ins co, "R" for range, "S" for selected individual
"RTN","RCDPEAC",36,0)
 ;         for RCINS="R"  ("FR")=from payer name and ("TR")=to payer name
"RTN","RCDPEAC",37,0)
 ;         for RCINS="S"  ("S",INS CO IEN IN FILE 36)=""
"RTN","RCDPEAC",38,0)
 ; RCSORT = "PN" for sort by patient name followed by ;- if reverse order
"RTN","RCDPEAC",39,0)
 ;          "L4" for sort by patient SSN followed by ;- if reverse order
"RTN","RCDPEAC",40,0)
 ;
"RTN","RCDPEAC",41,0)
 N POSTDT,RC0,RC399,RC399M1,RC430,RCACT,RCBILL,RCEIEN,RCEOB,RCEX,RCEXT,RCINC,RCKEY2,RCKEY4,RCNEW
"RTN","RCDPEAC",42,0)
 N RCPAYNAM,RCPT,RCSSN,RCSTOP,RCTOT,RCZ,RCZ0,RCZ1,SN,X,Y,Z,Z0
"RTN","RCDPEAC",43,0)
 K ^TMP($J,"RCSORT")
"RTN","RCDPEAC",44,0)
 S RCCT=0 ;Page count for List Manager
"RTN","RCDPEAC",45,0)
 S RCEXT=0 ; Set Excel page 1 count
"RTN","RCDPEAC",46,0)
 I 'RCLSTMGR D HDRBLD
"RTN","RCDPEAC",47,0)
 I RCLSTMGR D HDRLM
"RTN","RCDPEAC",48,0)
 S RCACT=+$O(^PRCA(430.3,"AC",102,0)) ; Get active status ien
"RTN","RCDPEAC",49,0)
 G:'RCACT ENOUT
"RTN","RCDPEAC",50,0)
 ;
"RTN","RCDPEAC",51,0)
 I 'RCLSTMGR D HDRLST^RCDPEARL(0,.RCHDR)  ; initial report header
"RTN","RCDPEAC",52,0)
 S RCBILL=0,RCDT=START-.0001
"RTN","RCDPEAC",53,0)
 ; PRCA*4.5*303 - Changed loop to use the "AD" index on 361.1 so that the number of records checked is limited by
"RTN","RCDPEAC",54,0)
 ; the START and END dates of when the EEOB was recieved in VistA
"RTN","RCDPEAC",55,0)
 ; PRCA*4.5*326 - Start modified block. Change INCLUDE params and shorten line lengths.
"RTN","RCDPEAC",56,0)
 F  S RCDT=$O(^IBM(361.1,"AD",RCDT)) Q:(RCDT>END)!(RCDT="")  D
"RTN","RCDPEAC",57,0)
 . S RCEIEN="" F  S RCEIEN=$O(^IBM(361.1,"AD",RCDT,RCEIEN)) Q:RCEIEN=""  D  ;
"RTN","RCDPEAC",58,0)
 . . S RCBILL=$P(^IBM(361.1,RCEIEN,0),U,1)
"RTN","RCDPEAC",59,0)
 . . S RCINC=$$INCLUDE(RCBILL,RCEIEN,RCTYPE) ; PRCA*4.5*326 - Inclusion by payer or payer type
"RTN","RCDPEAC",60,0)
 . . I RCINC,($P(^PRCA(430,RCBILL,0),U,8)=RCACT),$$EEOB(RCBILL,.RCEOB,RCZRO) D  ; PRCA*4.5*326
"RTN","RCDPEAC",61,0)
 . . . S (RCTOT,RCEOB,SN)=0
"RTN","RCDPEAC",62,0)
 . . . F  S RCEOB=$O(RCEOB(RCEOB)) Q:'RCEOB  F  S SN=$O(RCEOB(RCEOB,SN))  Q:'SN  D
"RTN","RCDPEAC",63,0)
 . . . . S RCTOT=RCTOT+$G(^IBM(361.1,RCEOB,1))
"RTN","RCDPEAC",64,0)
 . . . . ; PRCA*4.5*326 - Begin block - Change insurance co. name (file 36) to payer name (file 344.6)
"RTN","RCDPEAC",65,0)
 . . . . S RCPAYNAM=$$INSNM(RCBILL,RCEIEN)
"RTN","RCDPEAC",66,0)
 . . . . S RCKEY2=$$SL1(RCSORT,RCBILL),RCKEY4=+RCEOB(RCEOB,SN)_"_"_RCEOB_"_"_SN
"RTN","RCDPEAC",67,0)
 . . . . S ^TMP($J,"RCSORT",RCPAYNAM,RCKEY2,RCBILL,RCKEY4,RCEOB)=$P(RCEOB(RCEOB,SN),U,2) ; PRCA*4.5.303 add ERA PD AMOUNT
"RTN","RCDPEAC",68,0)
 . . . . I $O(RCEOB(0)) S ^TMP($J,"RCSORT",RCPAYNAM,RCKEY2,RCBILL)=RCTOT   ;This is from the eob and will be the same for each line
"RTN","RCDPEAC",69,0)
 . . . . ; PRCA*4.5*326 - End block
"RTN","RCDPEAC",70,0)
 ;
"RTN","RCDPEAC",71,0)
 S RCZ="",(RCSTOP,RCNEW)=0
"RTN","RCDPEAC",72,0)
 F  S RCZ=$O(^TMP($J,"RCSORT",RCZ)) Q:RCZ=""!RCSTOP  D  S:($G(RCINS)="R")!($G(RCINS)="S")&(RCPGNUM>1) RCNEW=1
"RTN","RCDPEAC",73,0)
 . I RCSORT'["-" D
"RTN","RCDPEAC",74,0)
 .. S RCZ0="" F  S RCZ0=$O(^TMP($J,"RCSORT",RCZ,RCZ0)) Q:RCZ0=""!RCSTOP  D OUTPUT(RCZ,RCZ0,RCSORT,.RCSTOP,.RCINS,RCNEW) S RCNEW=0
"RTN","RCDPEAC",75,0)
 . I RCSORT["-" D
"RTN","RCDPEAC",76,0)
 .. S RCZ0="" F  S RCZ0=$O(^TMP($J,"RCSORT",RCZ,RCZ0),-1) Q:RCZ0=""!RCSTOP  D OUTPUT(RCZ,RCZ0,RCSORT,.RCSTOP,.RCINS,.RCNEW) S RCNEW=0
"RTN","RCDPEAC",77,0)
 ;
"RTN","RCDPEAC",78,0)
 I '$D(^TMP($J,"RCSORT")) S $P(Z," ",25)="",Z=Z_"*** NO RECORDS TO PRINT ***" D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",79,0)
 I $D(^TMP($J,"RCSORT")),'RCSTOP D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCCT,RCTMPND)
"RTN","RCDPEAC",80,0)
 ; PRCA*4.5*303 - If regular report (no listmanager or queued) ask user to quit
"RTN","RCDPEAC",81,0)
 I 'RCSTOP,'RCLSTMGR,'$D(ZTQUEUED) D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAC",82,0)
 ;
"RTN","RCDPEAC",83,0)
ENOUT I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAC",84,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAC",85,0)
 K ^TMP($J,"RCSORT"),RCDT
"RTN","RCDPEAC",86,0)
 Q
"RTN","RCDPEAC",87,0)
 ;
"RTN","RCDPEAC",88,0)
OUTPUT(RCZ,RCZ0,RCSORT,RCSTOP,RCINS,RCNEW) ; Output the data
"RTN","RCDPEAC",89,0)
 ; RCZ, RCZ0 are the first 2 sort levels for the array
"RTN","RCDPEAC",90,0)
 ; RCINS = insurance co info array
"RTN","RCDPEAC",91,0)
 ; RCSTOP passed by ref - returned if user chooses to stop
"RTN","RCDPEAC",92,0)
 ; RCNEW = 1 if the header should be forced to print
"RTN","RCDPEAC",93,0)
 N ZZ,RCEPD
"RTN","RCDPEAC",94,0)
 S RCBILL=0 F  S RCBILL=$O(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL)) Q:'RCBILL!RCSTOP  S RCZ1="" F  S RCZ1=$O(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL,RCZ1)) Q:RCZ1=""!RCSTOP  D
"RTN","RCDPEAC",95,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCSTOP) W !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAC",96,0)
 . ; IA 1992 - BILL/CLAIMS file (#399)
"RTN","RCDPEAC",97,0)
 . S RC399=$G(^DGCR(399,RCBILL,0)),RC399M1=$G(^DGCR(399,RCBILL,"M1")),RCPT=+$P(RC399,U,2),RC430=$G(^PRCA(430,RCBILL,0))   ;RC430 is from the top level
"RTN","RCDPEAC",98,0)
 . ; PRCA*4.5*276 - Check for Division
"RTN","RCDPEAC",99,0)
 . I VAUTD=0 Q:$P(RC399,U,22)=""  Q:$G(VAUTD($P(RC399,U,22)))=""
"RTN","RCDPEAC",100,0)
 . ; PRCA*4.5*326 remove phamacy check. Now in $$INCLUDE logic
"RTN","RCDPEAC",101,0)
 . S RCSTOP=$$NEWPG(.RCINS,RCNEW) S RCNEW=0 Q:RCSTOP
"RTN","RCDPEAC",102,0)
 . S RCSTOP=$$NEWPG(.RCINS,RCNEW) Q:RCSTOP
"RTN","RCDPEAC",103,0)
 . S X=$$GET1^DIQ(430,RCBILL_",",11)
"RTN","RCDPEAC",104,0)
 . ; PRCA*4.5*276 - Row #1: Print last 4 SSN only - Move Bill Number to end
"RTN","RCDPEAC",105,0)
 . S RCSSN=$P($G(^DPT(RCPT,0)),U,9),RCSSN=$E(RCSSN,$L(RCSSN)-3,$L(RCSSN))
"RTN","RCDPEAC",106,0)
 . I $G(RCDISPTY) S RCEX=$P($G(^DPT(RCPT,0)),U)_"^"_RCSSN_"^"_$TR($P(RC430,U),"-","")
"RTN","RCDPEAC",107,0)
 . E  D
"RTN","RCDPEAC",108,0)
 . . S Z=$E($P($G(^DPT(RCPT,0)),U)_$J("",25),1,25)_"  "_$E(RCSSN_$J("",5),1,5)_"  "_$TR($P(RC430,U),"-","")
"RTN","RCDPEAC",109,0)
 . . D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",110,0)
 . ; PRCA*4.5*276 - Row #2: Move Ins Name, Balance, Amt Bill, Amt Paid
"RTN","RCDPEAC",111,0)
 . S Y=+$G(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL))
"RTN","RCDPEAC",112,0)
 . I $G(RCDISPTY) S RCEX=RCEX_"^"_RCZ_"^"_+X_"^"_+$P(RC430,U,3)_"^"_Y ; PRCA*4.5*326 - Use RCZ for insurance name
"RTN","RCDPEAC",113,0)
 . E  D
"RTN","RCDPEAC",114,0)
 . . ; PRCA*4.5*326 - Use RCZ for insurance name
"RTN","RCDPEAC",115,0)
 . . S Z=$E(RCZ_$J("",30),1,30)_$E($J("",12)_$J(+X,"",2),1+$L($J(+X,"",2)),12+$L($J(+X,"",2)))_$E($J("",13)_$J(+$P(RC430,U,3),"",2),1+$L($J(+$P(RC430,U,3),"",2)),13+$L($J(+$P(RC430,U,3),"",2)))_$E($J("",13),1,13-$L(Y))_$J(Y,"",2)
"RTN","RCDPEAC",116,0)
 . . D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",117,0)
 . ; PRCA*4.5*276 Do not display Date Referred
"RTN","RCDPEAC",118,0)
 . S RCEOB=0,RCEPD="" F  S RCEOB=$O(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL,RCZ1,RCEOB)) Q:'RCEOB!RCSTOP  S RCEPD=$G(^TMP($J,"RCSORT",RCZ,RCZ0,RCBILL,RCZ1,RCEOB)) D
"RTN","RCDPEAC",119,0)
 . . S RCSTOP=$$NEWPG(.RCINS,RCNEW)
"RTN","RCDPEAC",120,0)
 . . Q:RCSTOP
"RTN","RCDPEAC",121,0)
 . . S RC0=$G(^IBM(361.1,RCEOB,0))
"RTN","RCDPEAC",122,0)
 . . S RCSTOP=$$NEWPG(.RCINS,RCNEW) Q:RCSTOP
"RTN","RCDPEAC",123,0)
 . . ; PRCA*4.5*276 - Row #3: Trace#, Date Rec'd, Date Posted
"RTN","RCDPEAC",124,0)
 . . I $G(RCDISPTY) W !,RCEX_"^"_$P(RC0,U,7)_"^"_$$FMTE^XLFDT($P(RC0,U,5),"2D")_"^"_$S(RCZ1:$$FMTE^XLFDT(+RCZ1,"2D"),1:"")_"^"_RCEPD
"RTN","RCDPEAC",125,0)
 . . E  D
"RTN","RCDPEAC",126,0)
 . . . S Z="  "_$P(RC0,U,7)_$J("",50-$L($P(RC0,U,7)))_$J(RCEPD,10,2)_" "_$E($$FMTE^XLFDT($P(RC0,U,5),"2D")_$J("",8),1,8)_" "_$E($S(RCZ1:$$FMTE^XLFDT(+RCZ1,"2D"),1:"")_$J("",8),1,8)
"RTN","RCDPEAC",127,0)
 . . . D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",128,0)
 . I '$G(RCDISPTY) S Z="" D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAC",129,0)
 ;
"RTN","RCDPEAC",130,0)
 Q
"RTN","RCDPEAC",131,0)
 ;
"RTN","RCDPEAC",132,0)
INCLUDE(RCZ,EOBIEN,RCTYPE) ; PRCA*4.5*326 change parameters
"RTN","RCDPEAC",133,0)
 ; Function returns 1 if record should be included based on ins co
"RTN","RCDPEAC",134,0)
 ; RCINS = array containing insurance co information
"RTN","RCDPEAC",135,0)
 ; RCZ = ien of the entry in file 430
"RTN","RCDPEAC",136,0)
 N OK,RCI,RCINM,RCAINP,XX ; PRCA*4.5*326
"RTN","RCDPEAC",137,0)
 S OK=1
"RTN","RCDPEAC",138,0)
 S RCI=+$$INS(RCZ)
"RTN","RCDPEAC",139,0)
 ;
"RTN","RCDPEAC",140,0)
 I 'RCI S OK=0 G INCQ ; Not a third party bill
"RTN","RCDPEAC",141,0)
 ;
"RTN","RCDPEAC",142,0)
 ; PRCA*4.5*326 - Start modified block - Check for payer match
"RTN","RCDPEAC",143,0)
 I RCINS'="A" D  ;
"RTN","RCDPEAC",144,0)
 . S OK=$$ISSEL^RCDPEU1(361.1,EOBIEN)
"RTN","RCDPEAC",145,0)
 E  I RCTYPE'="A" D  ;
"RTN","RCDPEAC",146,0)
 . S OK=$$ISTYPE^RCDPEU1(361.1,EOBIEN,RCTYPE)
"RTN","RCDPEAC",147,0)
 ; PRCA*4.5*326 - End modified block
"RTN","RCDPEAC",148,0)
 ;
"RTN","RCDPEAC",149,0)
INCQ Q OK
"RTN","RCDPEAC",150,0)
 ;
"RTN","RCDPEAC",151,0)
INSNM(RCZ,EOBIEN) ; Returns the name of payer from the ERA associated with the EOB
"RTN","RCDPEAC",152,0)
 ; If that is null, return the insurance co for bill ien RCZ file 430
"RTN","RCDPEAC",153,0)
 ; Input: RCZ = Point to bill, file #430
"RTN","RCDPEAC",154,0)
 ;        EOBIEN = Pointer to EOB file 361.1
"RTN","RCDPEAC",155,0)
 ; Returns: NM = Free text name of Payer from ERA or insurance on bill if ERA not found.
"RTN","RCDPEAC",156,0)
 ;
"RTN","RCDPEAC",157,0)
 N ERAIEN,FILE,NM
"RTN","RCDPEAC",158,0)
 S NM=""
"RTN","RCDPEAC",159,0)
 S ERAIEN=$$EOBERA^RCDPEU1(EOBIEN)
"RTN","RCDPEAC",160,0)
 I ERAIEN S NM=$$GETNAME^RCDPEU1(344.4,ERAIEN)
"RTN","RCDPEAC",161,0)
 I NM="" S NM=$P($G(^DIC(36,+$$INS(RCZ),0)),U)
"RTN","RCDPEAC",162,0)
 Q NM
"RTN","RCDPEAC",163,0)
 ;
"RTN","RCDPEAC",164,0)
INS(RCZ) ; Returns ien of insurance co for bill ien RCZ from file 430
"RTN","RCDPEAC",165,0)
 N RC
"RTN","RCDPEAC",166,0)
 S RC=$P($G(^PRCA(430,RCZ,0)),U,9) ;DEBTOR
"RTN","RCDPEAC",167,0)
 Q $S($P($G(^RCD(340,+RC,0)),U)'["DIC(36":"",1:+^(0))
"RTN","RCDPEAC",168,0)
 ;
"RTN","RCDPEAC",169,0)
NEWPG(RCINS,RCNEW) ; Check for new page needed, output header
"RTN","RCDPEAC",170,0)
 ; RCINS = ins co selection criteria
"RTN","RCDPEAC",171,0)
 ; RCNEW = 1 to force new page
"RTN","RCDPEAC",172,0)
 ; Function returns 1 if user chooses to stop output
"RTN","RCDPEAC",173,0)
 I RCNEW!(($Y+5)>IOSL) D
"RTN","RCDPEAC",174,0)
 . D:'$G(RCDISPTY) HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEAC",175,0)
 Q RCSTOP
"RTN","RCDPEAC",176,0)
 ;
"RTN","RCDPEAC",177,0)
EEOB(RCZ,RCEOB,RCZRO) ; Find all non-MRA  EEOBs for bill ien RCZ
"RTN","RCDPEAC",178,0)
 ; Function returns 1 if any valid EEOBs found, 0 if none
"RTN","RCDPEAC",179,0)
 ; RCEOB(eob ien)=date posted returned for valid EEOBs found -
"RTN","RCDPEAC",180,0)
 ;                pass by reference
"RTN","RCDPEAC",181,0)
 N OK,Z,Z0,Z00,DET,SN,ZPD,ZINC
"RTN","RCDPEAC",182,0)
 K RCEOB
"RTN","RCDPEAC",183,0)
 ;
"RTN","RCDPEAC",184,0)
 S (Z,OK,SN,ZINC)=0
"RTN","RCDPEAC",185,0)
 ; IA 4051 for File #361.1
"RTN","RCDPEAC",186,0)
 F  S Z=$O(^IBM(361.1,"B",RCZ,Z)) Q:'Z  I $P($G(^IBM(361.1,Z,0)),U,4)'=1 D
"RTN","RCDPEAC",187,0)
 . ; retrieve the EEOB data from ERA Detail sub-entry
"RTN","RCDPEAC",188,0)
 . S (Z0,DET)=0
"RTN","RCDPEAC",189,0)
 . F  S Z0=$O(^RCY(344.4,"ADET",Z,Z0)) Q:'Z0  F  S DET=$O(^RCY(344.4,"ADET",Z,Z0,DET)) Q:'DET  D  ; ERA Detail
"RTN","RCDPEAC",190,0)
 . . ; PRCA*4.5*303 - added check for Zero paid or Paid > 0 check for report.
"RTN","RCDPEAC",191,0)
 . . S ZINC=0,ZPD=+$P($G(^RCY(344.4,Z0,1,DET,0)),U,3)
"RTN","RCDPEAC",192,0)
 . . I (RCZRO="Z"),(ZPD=0) S ZINC=1
"RTN","RCDPEAC",193,0)
 . . I (RCZRO="A"),(ZPD>0) S ZINC=1
"RTN","RCDPEAC",194,0)
 . . ; PRCA*4.5*303 - Removed looking for Receipt, include record based on ERA DETAIL POST STATUS
"RTN","RCDPEAC",195,0)
 . . S Z00=$P($G(^RCY(344.4,Z0,0)),U,14)
"RTN","RCDPEAC",196,0)
 . . ; PRCA*4.5*303 - Removed check for Receipt (If Z1 is not empty) Changed date to Piece 7 and
"RTN","RCDPEAC",197,0)
 . . ; added check for either 0 paid or paid >0 depending on selection. Added ERA PD AMOUNT as second piece of RCEOB array
"RTN","RCDPEAC",198,0)
 . . I (ZINC)&((Z00=0)!(Z00=1)!(Z00=2)!(Z00=5)) S SN=SN+1,RCEOB(Z,SN)=+$P($G(^RCY(344.4,Z0,0)),U,7)_U_ZPD,OK=1
"RTN","RCDPEAC",199,0)
 ;
"RTN","RCDPEAC",200,0)
 Q OK
"RTN","RCDPEAC",201,0)
 ;
"RTN","RCDPEAC",202,0)
SL1(RCSORT,RCZ) ; Function returns 1st sort level data from ien RCZ in file 430
"RTN","RCDPEAC",203,0)
 ; RCSORT = "PN" for patient name sort = "L4" for SSN last 4 sort
"RTN","RCDPEAC",204,0)
 N DAT
"RTN","RCDPEAC",205,0)
 I RCSORT="PN" S DAT=$P($G(^DPT(+$P($G(^PRCA(430,RCZ,0)),U,7),0)),U)
"RTN","RCDPEAC",206,0)
 I RCSORT="L4" S DAT=$P($G(^DPT(+$P($G(^PRCA(430,RCZ,0)),U,7),0)),U,9),DAT=$E(DAT,$L(DAT)-3,$L(DAT))
"RTN","RCDPEAC",207,0)
 Q $S($G(DAT)'="":DAT,1:" ")
"RTN","RCDPEAC",208,0)
 ;
"RTN","RCDPEAC",209,0)
SELECT(RCINS,RCSORT,RCZRO,RCTYPE) ; Select insurance co, sort criteria, Zero Payment, Bill type (Med/RX) and if output for EXCEL format is selected
"RTN","RCDPEAC",210,0)
 ; Function returns values selected for RCSORT and RCINS - passed by ref
"RTN","RCDPEAC",211,0)
 N RCQUIT,DONE,DIR,X,Y,%DT
"RTN","RCDPEAC",212,0)
 S (RCQUIT,DONE,RCLSTMGR)=0
"RTN","RCDPEAC",213,0)
 ; PRCA*4.5*326 - Begin changed block - Ask to show Medical/Pharmacy Tricare or All
"RTN","RCDPEAC",214,0)
 S RCTYPE=$$RTYPE^RCDPEU1("")
"RTN","RCDPEAC",215,0)
 I RCTYPE=-1 G SELQ
"RTN","RCDPEAC",216,0)
 ;
"RTN","RCDPEAC",217,0)
 S RCINS=$$PAYRNG^RCDPEU1()
"RTN","RCDPEAC",218,0)
 I RCINS=-1 G SELQ
"RTN","RCDPEAC",219,0)
 ;
"RTN","RCDPEAC",220,0)
 I RCINS'="A" D  I XX=-1 G SELQ
"RTN","RCDPEAC",221,0)
 . S RCPAR("TYPE")=RCTYPE
"RTN","RCDPEAC",222,0)
 . S RCPAR("SELC")=RCINS
"RTN","RCDPEAC",223,0)
 . S RCPAR("DICA")="SELECT INSURANCE COMPANY: "
"RTN","RCDPEAC",224,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPEAC",225,0)
 ; PRCA*4.5*326 - End changed block
"RTN","RCDPEAC",226,0)
 ;
"RTN","RCDPEAC",227,0)
 ; PRCA*4.5*303 - Add Zero $ Prompt and Medical/Pharmacy EEOBs Prompt
"RTN","RCDPEAC",228,0)
 S DIR(0)="SA^A:ALL;Z:ZERO PAYMENT EEOBs",DIR("A")="RUN REPORT FOR (A)LL EEOBs or (Z)ERO PAYMENT EEOBs only: ",DIR("B")="ALL" W ! D ^DIR K DIR
"RTN","RCDPEAC",229,0)
 I $D(DTOUT)!$D(DUOUT) G SELQ
"RTN","RCDPEAC",230,0)
 S RCZRO=$E(Y,1)
"RTN","RCDPEAC",231,0)
 ;
"RTN","RCDPEAC",232,0)
 S DIR(0)="SA^P:PATIENT NAME;L:LAST 4 OF PATIENT SSN",DIR("A")="WITHIN INS CO, SORT BY (P)ATIENT NAME OR (L)AST 4 OF SSN?: ",DIR("B")="PATIENT NAME" W ! D ^DIR K DIR
"RTN","RCDPEAC",233,0)
 I $D(DTOUT)!$D(DUOUT) G SELQ
"RTN","RCDPEAC",234,0)
 S RCSORT=$S(Y="P":"PN",1:"L4")
"RTN","RCDPEAC",235,0)
 S DIR(0)="SA^F:FIRST TO LAST;L:LAST TO FIRST",DIR("A")="SORT "_$S(RCSORT="PN":"PATIENT NAME",1:"LAST 4")_" (F)IRST TO LAST OR (L)AST TO FIRST?: ",DIR("B")="FIRST TO LAST" D ^DIR K DIR
"RTN","RCDPEAC",236,0)
 I $D(DTOUT)!$D(DUOUT) G SELQ
"RTN","RCDPEAC",237,0)
 I Y="L" S RCSORT=RCSORT_";-"
"RTN","RCDPEAC",238,0)
 ;
"RTN","RCDPEAC",239,0)
 ; PRCA*4.5*298 - Add Date Range Prompts
"RTN","RCDPEAC",240,0)
 K DIR
"RTN","RCDPEAC",241,0)
 S DIR("?")="ENTER THE EARLIEST RECEIVED DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAC",242,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="START DATE (RECEIVED): ",DIR("B")="T" D ^DIR K DIR
"RTN","RCDPEAC",243,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G SELQ
"RTN","RCDPEAC",244,0)
 S START=Y
"RTN","RCDPEAC",245,0)
 K DIR
"RTN","RCDPEAC",246,0)
 S DIR("?")="ENTER THE LATEST RECEIVED DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAC",247,0)
 S DIR("B")="T"
"RTN","RCDPEAC",248,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE",DIR("A")="END DATE (RECEIVED): " D ^DIR K DIR
"RTN","RCDPEAC",249,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G SELQ
"RTN","RCDPEAC",250,0)
 S END=Y
"RTN","RCDPEAC",251,0)
 ; PRCA*4.5*326 - Remove old Tricare and CHAMPVA prompts
"RTN","RCDPEAC",252,0)
 ;
"RTN","RCDPEAC",253,0)
 ; PRCA*4.5*276 - Determine whether to gather data for Excel report.
"RTN","RCDPEAC",254,0)
 S RCDISPTY=$$DISPTY^RCDPEM3 G SELQ:RCDISPTY<0
"RTN","RCDPEAC",255,0)
 I RCDISPTY D INFO^RCDPEM6 S DONE=1 G SELQ
"RTN","RCDPEAC",256,0)
 ;
"RTN","RCDPEAC",257,0)
 ; PRCA*4.5*298 - Add ListManager Prompts
"RTN","RCDPEAC",258,0)
 S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 SELQ
"RTN","RCDPEAC",259,0)
 ;
"RTN","RCDPEAC",260,0)
 S DONE=1
"RTN","RCDPEAC",261,0)
 ;
"RTN","RCDPEAC",262,0)
SELQ ;
"RTN","RCDPEAC",263,0)
 Q DONE
"RTN","RCDPEAC",264,0)
 ;
"RTN","RCDPEAC",265,0)
LIST(DIR,RCINS) ; Sets up help array for ins co selected in DIR("?")
"RTN","RCDPEAC",266,0)
 N CT,Z
"RTN","RCDPEAC",267,0)
 S CT=1
"RTN","RCDPEAC",268,0)
 I '$O(RCINS("S",0)) S DIR("?")="NO INSURANCE COMPANIES SELECTED" Q
"RTN","RCDPEAC",269,0)
 S DIR("?",1)="INSURANCE COMPANIES ALREADY SELECTED:"
"RTN","RCDPEAC",270,0)
 S Z=0 F  S Z=$O(RCINS("S",Z)) Q:'Z  S CT=CT+1,DIR("?",CT)="   "_$P($G(^DIC(36,Z,0)),U)
"RTN","RCDPEAC",271,0)
 S DIR("?")=" "
"RTN","RCDPEAC",272,0)
 Q
"RTN","RCDPEAC",273,0)
 ;
"RTN","RCDPEAC",274,0)
HDRBLD ; create the report header
"RTN","RCDPEAC",275,0)
 ; returns RCHDR,RCPGNUM,RCSTOP
"RTN","RCDPEAC",276,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAC",277,0)
 ;   RCHDR("PGNUM") = page number
"RTN","RCDPEAC",278,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEAC",279,0)
 ;   RCHDR("RUNDATE") = date/time report generated
"RTN","RCDPEAC",280,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEAC",281,0)
 ;   RCSTOP - flag to stop listing
"RTN","RCDPEAC",282,0)
 ; INPUT:
"RTN","RCDPEAC",283,0)
 ;   RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAC",284,0)
 ;   RCPAY - Payer filter value(s)
"RTN","RCDPEAC",285,0)
 ;   RCLSTMGR
"RTN","RCDPEAC",286,0)
 ;
"RTN","RCDPEAC",287,0)
 N Z0
"RTN","RCDPEAC",288,0)
 S Z0=""
"RTN","RCDPEAC",289,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAC",290,0)
 ;
"RTN","RCDPEAC",291,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEAC",292,0)
 . S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEAC",293,0)
 . S RCHDR(1)="PATIENT NAME^SSN^BILL#^INS CO NAME^BALANCE^AMT BILLE^AMT PAID^TRACE#^DT REC'D^DT POST^ERA PD AMT"
"RTN","RCDPEAC",294,0)
 ;
"RTN","RCDPEAC",295,0)
 N MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAC",296,0)
 S RCHDR(1)=$$HDRNM,HCNT=1  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEAC",297,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPEAC",298,0)
 ;
"RTN","RCDPEAC",299,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAC",300,0)
 I VAUTD=1 S Y="DIVISIONS: ALL"
"RTN","RCDPEAC",301,0)
 I VAUTD=0 D
"RTN","RCDPEAC",302,0)
 . S Z0=0,Y="DIVISIONS: " F X=1:1 S Z0=$O(VAUTD(Z0)) Q:Z0=""  S:X>1 Y=Y_", " S Y=Y_VAUTD(Z0)
"RTN","RCDPEAC",303,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAC",304,0)
 I RCINS="S" S Z=0,Z0="" F  S Z=$O(RCINS("S",Z)) Q:'Z  S Z0=Z0_$S(Z0'="":",",1:"")_$P($G(^DIC(36,Z,0)),U)
"RTN","RCDPEAC",305,0)
 ; PRCA*4.5*326 - Start modified block
"RTN","RCDPEAC",306,0)
 S Z0="PAYERS: "_$S(RCINS="A":"ALL   ",RCINS="R":"RANGE",1:"SELECTED")
"RTN","RCDPEAC",307,0)
 S Z0=Z0_$J("",16)_"MEDICAL/PHARMACY/TRICARE: "_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEAC",308,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Z0)\2)_Z0,Z0=""
"RTN","RCDPEAC",309,0)
 ; PRCA*4.5*326 modify next two lines for tricare filter
"RTN","RCDPEAC",310,0)
 S Z0=Z0_"DATE RANGE: "_$$FMTE^XLFDT(START,"2Z")_"-"_$$FMTE^XLFDT(END,"2Z")
"RTN","RCDPEAC",311,0)
 S Z0=Z0_$J("",16)_"  PAYMENT TYPE: "_$S(RCZRO="Z":"ZERO PAYMENT",1:"ALL")
"RTN","RCDPEAC",312,0)
 ; PRCA*4.5*326 - End modified block
"RTN","RCDPEAC",313,0)
 ;
"RTN","RCDPEAC",314,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Z0)\2)_Z0
"RTN","RCDPEAC",315,0)
 ;
"RTN","RCDPEAC",316,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAC",317,0)
 S Y="PATIENT NAME               SSN    BILL#",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",318,0)
 S Y="INS CO NAME                        BALANCE   AMT BILLED        AMT PAID",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",319,0)
 S Y="   TRACE#                                           ERA PD AMT  REC'D  DT POST",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",320,0)
 S Y=$TR($J("",IOM)," ","="),HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",321,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAC",322,0)
 Q
"RTN","RCDPEAC",323,0)
 ;
"RTN","RCDPEAC",324,0)
HDRLM ; create the list manager version of the report header
"RTN","RCDPEAC",325,0)
 ; returns RCHDR,RCPGNUM,RCSTOP
"RTN","RCDPEAC",326,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAC",327,0)
 ;   RCHDR("PGNUM") = page number
"RTN","RCDPEAC",328,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEAC",329,0)
 ;   RCHDR("RUNDATE") = date/time report generated
"RTN","RCDPEAC",330,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEAC",331,0)
 ;   RCSTOP - flag to stop listing
"RTN","RCDPEAC",332,0)
 ;INPUT:
"RTN","RCDPEAC",333,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAC",334,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAC",335,0)
 ; RCLSTMGR
"RTN","RCDPEAC",336,0)
 ;
"RTN","RCDPEAC",337,0)
 N Z0 S Z0=""
"RTN","RCDPEAC",338,0)
 K RCHDR S RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAC",339,0)
 N MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAC",340,0)
 ; PRCA*4.5*326 Start modified code block
"RTN","RCDPEAC",341,0)
 S HCNT=1
"RTN","RCDPEAC",342,0)
 S RCHDR("TITLE")=$$HDRNM,RCHDR("XECUTE")="Q"
"RTN","RCDPEAC",343,0)
 S RCHDR(1)="DATE RANGE: "_$$FMTE^XLFDT(START,"2Z")_"-"_$$FMTE^XLFDT(END,"2Z")_$J("",16)
"RTN","RCDPEAC",344,0)
 S RCHDR(1)=RCHDR(1)_"  PAYMENT TYPE: "_$S(RCZRO="Z":"ZERO PAYMENT",1:"ALL")
"RTN","RCDPEAC",345,0)
 I VAUTD=1 S Y="DIVISIONS: ALL"
"RTN","RCDPEAC",346,0)
 I VAUTD=0 D
"RTN","RCDPEAC",347,0)
 . S Z0=0,Y="DIVISIONS: " F X=1:1 S Z0=$O(VAUTD(Z0)) Q:Z0=""  S:X>1 Y=Y_", " S Y=Y_VAUTD(Z0)
"RTN","RCDPEAC",348,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",349,0)
 I RCINS="S" S Z=0,Z0="" F  S Z=$O(RCINS("S",Z)) Q:'Z  S Z0=Z0_$S(Z0'="":",",1:"")_$P($G(^DIC(36,Z,0)),U)
"RTN","RCDPEAC",350,0)
 S Z0="PAYERS: "_$S(RCINS="A":"ALL     ",RCINS="R":"RANGE",1:"SELECTED")
"RTN","RCDPEAC",351,0)
 S Z0=Z0_$J("",44-$L(Z0))_"MEDICAL/PHARMACY/TRICARE: "_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEAC",352,0)
 ; PRCA*4.5*326 End modified code block
"RTN","RCDPEAC",353,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Z0
"RTN","RCDPEAC",354,0)
 I RCINS="A" S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAC",355,0)
 ;
"RTN","RCDPEAC",356,0)
 S Y="PATIENT NAME               SSN    BILL#",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",357,0)
 S Y="INS CO NAME                        BALANCE   AMT BILLED        AMT PAID",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",358,0)
 S Y="   TRACE#                                           ERA PD AMT  REC'D  DT POST",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAC",359,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAC",360,0)
 Q
"RTN","RCDPEAC",361,0)
 ;
"RTN","RCDPEAC",362,0)
 ; extrinsic variable, name for header PRCA*4.5*298
"RTN","RCDPEAC",363,0)
HDRNM() Q "EDI LOCKBOX ACTIVE BILLS W/EEOB REPORT"
"RTN","RCDPEAC",364,0)
 ;
"RTN","RCDPEAD")
0^47^B225208697
"RTN","RCDPEAD",1,0)
RCDPEAD ;ALB/PJH - AUTO DECREASE ;Jun 06, 2014@19:11:19
"RTN","RCDPEAD",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAD",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAD",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAD",5,0)
 ;
"RTN","RCDPEAD",6,0)
EN ;Auto Decrease - applies to auto-posted claims only
"RTN","RCDPEAD",7,0)
 N RCAMT,RCDATE,RCDAY,RCSTART,RCITEM
"RTN","RCDPEAD",8,0)
 N RC344610,RCMDAP,RCMDAD,RCJ,RCK,RCIARR,J
"RTN","RCDPEAD",9,0)
 ; BEGIN PRCA*4.5*326 - added EN1A subroutine
"RTN","RCDPEAD",10,0)
 ;
"RTN","RCDPEAD",11,0)
 ; Quit if medical auto posting is OFF
"RTN","RCDPEAD",12,0)
 Q:'$$GET1^DIQ(344.61,"1,",.02,"I")
"RTN","RCDPEAD",13,0)
 ;
"RTN","RCDPEAD",14,0)
 ; Quit if medical auto decrease of payment lines is OFF
"RTN","RCDPEAD",15,0)
 Q:'$$GET1^DIQ(344.61,"1,",.03,"I") 
"RTN","RCDPEAD",16,0)
 ;
"RTN","RCDPEAD",17,0)
 ; Get the RCDPE PARAMETER file #344.61 field.04 AUTO DECREASE MED DAYS DEFAULT value and
"RTN","RCDPEAD",18,0)
 ; calculate process date by subtracting this value from today's date
"RTN","RCDPEAD",19,0)
 S RCDAY=$$FMADD^XLFDT(DT\1,-$$GET1^DIQ(344.61,"1,",.04))
"RTN","RCDPEAD",20,0)
 ;
"RTN","RCDPEAD",21,0)
 ; Search ERA's paid lines requiring auto-decrease
"RTN","RCDPEAD",22,0)
 D EN1A(RCDAY,1)
"RTN","RCDPEAD",23,0)
 ;
"RTN","RCDPEAD",24,0)
 ; Quit if medical auto decrease of no-payment lines is OFF
"RTN","RCDPEAD",25,0)
 Q:'$$GET1^DIQ(344.61,"1,",.11,"I")
"RTN","RCDPEAD",26,0)
 ;
"RTN","RCDPEAD",27,0)
 ; Get days to wait for no-pay lines 
"RTN","RCDPEAD",28,0)
 S RCDAY=$$FMADD^XLFDT(DT\1,-$$GET1^DIQ(344.61,"1,",.12))
"RTN","RCDPEAD",29,0)
 ; Search ERA's for no pay lines requiring auto-decrease
"RTN","RCDPEAD",30,0)
 D EN1A(RCDAY,2)
"RTN","RCDPEAD",31,0)
 ;
"RTN","RCDPEAD",32,0)
 ; Payer Rejects
"RTN","RCDPEAD",33,0)
 D REJ
"RTN","RCDPEAD",34,0)
 ;
"RTN","RCDPEAD",35,0)
 ; END PRCA*4.5*326
"RTN","RCDPEAD",36,0)
 Q
"RTN","RCDPEAD",37,0)
 ;
"RTN","RCDPEAD",38,0)
EN1A(RCDAY,PAID) ; Scan ERA's for auto-posted lines on RCDAY
"RTN","RCDPEAD",39,0)
 ; INPUT  RCDAY - Day to search for auto-posted but not decreased lines
"RTN","RCDPEAD",40,0)
 ;        PAID -  1 = decrease paid lines only, 2 = decrease no-pay lines only
"RTN","RCDPEAD",41,0)
 ; OUTPUT - Auto-decreases claims
"RTN","RCDPEAD",42,0)
 ; 
"RTN","RCDPEAD",43,0)
 ; PRCA*4.5*304 - removed generic auto-decrease amount. Now auto-decrease is by CARC
"RTN","RCDPEAD",44,0)
 ; Allow for a range of dates in future - currently only checks for RCDAY
"RTN","RCDPEAD",45,0)
 ;
"RTN","RCDPEAD",46,0)
 ; Scan F index for ERA within date range
"RTN","RCDPEAD",47,0)
 S RCDATE=$$FMADD^XLFDT(RCDAY,-1)
"RTN","RCDPEAD",48,0)
 F  S RCDATE=$O(^RCY(344.4,"F",RCDATE)) Q:'RCDATE  Q:(RCDATE\1)>RCDAY  D
"RTN","RCDPEAD",49,0)
 . ;
"RTN","RCDPEAD",50,0)
 . ; Scan "F" index of ERA file for ERA entries with AUTOPOST DATE field #4.03 matching RCDAY
"RTN","RCDPEAD",51,0)
 . D EN2(RCDATE,RCDAY,PAID)
"RTN","RCDPEAD",52,0)
 Q
"RTN","RCDPEAD",53,0)
 ;
"RTN","RCDPEAD",54,0)
EN2(RCDATE,RCDAY,PAID) ; Scans the 'F' index of the ERA file for ERA entries with an - PRCA*4.5*326
"RTN","RCDPEAD",55,0)
 ; AUTOPOST DATE field (#4.03) matching RCDAY
"RTN","RCDPEAD",56,0)
 ; Input:   RCDATE      - Current date being search
"RTN","RCDPEAD",57,0)
 ;          RCDAY       - AUTO DECREASES MED DAYS DEFAULT (File 344.61, field .04)
"RTN","RCDPEAD",58,0)
 ;          PAID        - 1 = decrease paid lines, 2 = decrease no-pay lines
"RTN","RCDPEAD",59,0)
 N PAYID,PAYNAM,RCERA,RCRTYPE
"RTN","RCDPEAD",60,0)
 S RCERA=0
"RTN","RCDPEAD",61,0)
 F  S RCERA=$O(^RCY(344.4,"F",RCDATE,RCERA)) Q:'RCERA  D
"RTN","RCDPEAD",62,0)
 . N RC3446,RCPARM
"RTN","RCDPEAD",63,0)
 . ;
"RTN","RCDPEAD",64,0)
 . ; Quit if ERA is for Pharmacy
"RTN","RCDPEAD",65,0)
 . S RCRTYPE=$$PHARM^RCDPEAP1(RCERA)
"RTN","RCDPEAD",66,0)
 . Q:RCRTYPE
"RTN","RCDPEAD",67,0)
 . ;
"RTN","RCDPEAD",68,0)
 . ; Check payer exclusion file for this ERA's payer
"RTN","RCDPEAD",69,0)
 . S PAYID=$P($G(^RCY(344.4,RCERA,0)),U,3)
"RTN","RCDPEAD",70,0)
 . S PAYNAM=$P($G(^RCY(344.4,RCERA,0)),U,6)
"RTN","RCDPEAD",71,0)
 . I PAYID'="",PAYNAM'="" D
"RTN","RCDPEAD",72,0)
 . . S RCPARM=$O(^RCY(344.6,"CPID",PAYNAM,PAYID,""))
"RTN","RCDPEAD",73,0)
 . . S:RCPARM'="" RC3446=$G(^RCY(344.6,RCPARM,0))
"RTN","RCDPEAD",74,0)
 . ;
"RTN","RCDPEAD",75,0)
 . ; Ignore ERA if EXCLUDE MED CLAIMS POSTING  (#.06) or
"RTN","RCDPEAD",76,0)
 . ; EXCLUDE MED CLAIMS DECREASE (#.07) fields set to 'yes'
"RTN","RCDPEAD",77,0)
 . I $G(RC3446)'="" Q:$P(RC3446,U,6)=1  Q:$P(RC3446,U,7)=1
"RTN","RCDPEAD",78,0)
 . ; 
"RTN","RCDPEAD",79,0)
 . ; Build index to scratchpad for this ERA
"RTN","RCDPEAD",80,0)
 . N RCARRAY
"RTN","RCDPEAD",81,0)
 . D BUILD^RCDPEAP(RCERA,.RCARRAY)
"RTN","RCDPEAD",82,0)
 . ;
"RTN","RCDPEAD",83,0)
 . ; Scan ERA DETAIL entries in #344.41 for auto-posted medical claims
"RTN","RCDPEAD",84,0)
 . D EN3(RCDATE,RCERA,.RCARRAY,PAID) ; PRCA*4.5*326
"RTN","RCDPEAD",85,0)
 Q
"RTN","RCDPEAD",86,0)
 ;
"RTN","RCDPEAD",87,0)
EN3(RCDATE,RCERA,RCARRAY,PAID) ; Scan ERA DETAIL entries in #344.41 for auto-posted medical claims - PRCA*4.5*326 added PAID
"RTN","RCDPEAD",88,0)
 ; Input:   RCDATE      - Current date being search
"RTN","RCDPEAD",89,0)
 ;          RCERA       - ERA number
"RTN","RCDPEAD",90,0)
 ;          RCARRAY     - Array of ERA Scratchpad lines
"RTN","RCDPEAD",91,0)
 ;          PAID        - 1 = decrease paid lines, 2 = decrease no-pay lines
"RTN","RCDPEAD",92,0)
 N IENS,RCADJ,RCLINE
"RTN","RCDPEAD",93,0)
 S RCLINE=0
"RTN","RCDPEAD",94,0)
 ;
"RTN","RCDPEAD",95,0)
 ; Find auto-posted paid lines to auto-decrease
"RTN","RCDPEAD",96,0)
 I PAID=1 D
"RTN","RCDPEAD",97,0)
 .F  S RCLINE=$O(^RCY(344.4,"F",RCDATE,RCERA,RCLINE)) Q:'RCLINE  D
"RTN","RCDPEAD",98,0)
 ..; Ignore claim line if already auto decreased
"RTN","RCDPEAD",99,0)
 ..Q:$P($G(^RCY(344.4,RCERA,1,RCLINE,5)),U,3)
"RTN","RCDPEAD",100,0)
 ..; Process line
"RTN","RCDPEAD",101,0)
 ..D EN4(RCDATE,RCERA,.RCARRAY,PAID,RCLINE)
"RTN","RCDPEAD",102,0)
 ;
"RTN","RCDPEAD",103,0)
 ; Find zero lines on the auto-posted ERA which are auto-decrease candidates
"RTN","RCDPEAD",104,0)
 I PAID=2 D
"RTN","RCDPEAD",105,0)
 .F  S RCLINE=$O(RCARRAY(RCLINE)) Q:'RCLINE  D
"RTN","RCDPEAD",106,0)
 ..; Ignore claim line if already auto decreased
"RTN","RCDPEAD",107,0)
 ..Q:$P($G(^RCY(344.4,RCERA,1,RCLINE,5)),U,3)
"RTN","RCDPEAD",108,0)
 ..; Process line
"RTN","RCDPEAD",109,0)
 ..D EN4(RCDATE,RCERA,.RCARRAY,PAID,RCLINE)
"RTN","RCDPEAD",110,0)
 Q
"RTN","RCDPEAD",111,0)
 ; 
"RTN","RCDPEAD",112,0)
EN4(RCDATE,RCERA,RCARRAY,PAID,RCLINE) ; Auto-decrease selected lines
"RTN","RCDPEAD",113,0)
 ;
"RTN","RCDPEAD",114,0)
 ; Get claim number RCBILL for the ERA line using EOB #361.1 pointer
"RTN","RCDPEAD",115,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEAD",116,0)
 N COMMENT,EOBIEN,RCBAL,RCBILL,RCMAX,RCTRANDA,RCZERO
"RTN","RCDPEAD",117,0)
  ; Check if this is a zero payment line
"RTN","RCDPEAD",118,0)
 S RCZERO=$S($$GET1^DIQ(344.41,RCLINE_","_RCERA_",",.03)=0:1,1:0)
"RTN","RCDPEAD",119,0)
 ;
"RTN","RCDPEAD",120,0)
 ; Quit if this is a no-payment line and loop is for payment lines
"RTN","RCDPEAD",121,0)
 I PAID=1,RCZERO Q
"RTN","RCDPEAD",122,0)
 ; Quit if this is not a no-payment line and loop is for no-payment lines
"RTN","RCDPEAD",123,0)
 I PAID=2,'RCZERO Q
"RTN","RCDPEAD",124,0)
 ;
"RTN","RCDPEAD",125,0)
 ; Ignore zero amount reversals
"RTN","RCDPEAD",126,0)
 I RCZERO Q:'$G(RCARRAY(RCLINE))
"RTN","RCDPEAD",127,0)
 ;
"RTN","RCDPEAD",128,0)
 ; Ignore zero lines if status is unverified in scratchpad (#344.491,.13)
"RTN","RCDPEAD",129,0)
 I RCZERO D  Q:'$$GET1^DIQ(344.491,IENS,.13,"I")
"RTN","RCDPEAD",130,0)
 . S IENS=$G(RCARRAY(RCLINE))_","_RCERA
"RTN","RCDPEAD",131,0)
 ; END PRCA*4.5*326
"RTN","RCDPEAD",132,0)
 ;
"RTN","RCDPEAD",133,0)
 ; Get pointer to EOB file #361.1 from ERA DETAIL
"RTN","RCDPEAD",134,0)
 S EOBIEN=$P($G(^RCY(344.4,RCERA,1,RCLINE,0)),U,2),RCBILL=0
"RTN","RCDPEAD",135,0)
 ;
"RTN","RCDPEAD",136,0)
 ; Get ^DGCR(399 pointer (DINUM for #430 file)
"RTN","RCDPEAD",137,0)
 S:EOBIEN RCBILL=$P($G(^IBM(361.1,EOBIEN,0)),U) Q:'RCBILL
"RTN","RCDPEAD",138,0)
 ;
"RTN","RCDPEAD",139,0)
 ; Skip zero lines if other unposted non-zero amount ERA lines exist for this bill
"RTN","RCDPEAD",140,0)
 ;;I RCZERO,$$OTHER(RCBILL,RCERA) Q  ; PRCA*4.4*326
"RTN","RCDPEAD",141,0)
 ;
"RTN","RCDPEAD",142,0)
 ; If claim has been split/edit and claim changed in APAR do not auto decrease
"RTN","RCDPEAD",143,0)
 Q:$$SPLIT(RCERA,RCLINE,RCBILL,.RCARRAY)
"RTN","RCDPEAD",144,0)
 ;
"RTN","RCDPEAD",145,0)
 ; Do not auto decrease if claim is referred to General Council
"RTN","RCDPEAD",146,0)
 Q:$P($G(^PRCA(430,RCBILL,6)),U,4)]""
"RTN","RCDPEAD",147,0)
 ;
"RTN","RCDPEAD",148,0)
 ; Claim must be OPEN or ACTIVE
"RTN","RCDPEAD",149,0)
 N STATUS
"RTN","RCDPEAD",150,0)
 S STATUS=$P($G(^PRCA(430,RCBILL,0)),"^",8)
"RTN","RCDPEAD",151,0)
 I STATUS'=42,STATUS'=16 Q 
"RTN","RCDPEAD",152,0)
 ;
"RTN","RCDPEAD",153,0)
 ; PRCA*4.5*304 - A CARC must be included and have an auto-decrease limit before auto-decreasing can occur.
"RTN","RCDPEAD",154,0)
 S RCAMT=$$CARCLMT(EOBIEN,RCZERO) ; PRCA*4.5*326 - added RCZERO
"RTN","RCDPEAD",155,0)
 Q:$L(RCAMT)=0         ; No CARCs on EOB were eligible for auto-decrease
"RTN","RCDPEAD",156,0)
 ;
"RTN","RCDPEAD",157,0)
 ; Order CARCs for Auto-Decrease in largest to smallest amount order
"RTN","RCDPEAD",158,0)
 K RCIARR
"RTN","RCDPEAD",159,0)
 F J=1:1 S RCITEM=$P(RCAMT,U,J) Q:RCITEM=""  S RCIARR(-($P(RCITEM,";",1)),J)=RCITEM
"RTN","RCDPEAD",160,0)
 Q:$D(RCIARR)<10  ; Quit if CARC adjustment array doesn't have any elements to process
"RTN","RCDPEAD",161,0)
 ;
"RTN","RCDPEAD",162,0)
 ; Get top limit for auto-decrease
"RTN","RCDPEAD",163,0)
 S RCMAX=+$$GET1^DIQ(344.61,"1,",.05)
"RTN","RCDPEAD",164,0)
 ;
"RTN","RCDPEAD",165,0)
 ; Walk the RCIARR and apply CARC based adjustments to the bill.
"RTN","RCDPEAD",166,0)
 S RCJ="",RCADJ=0
"RTN","RCDPEAD",167,0)
 F  S RCJ=$O(RCIARR(RCJ)) Q:RCJ=""  S RCK="" F  S RCK=$O(RCIARR(RCJ,RCK)) Q:RCK=""  D
"RTN","RCDPEAD",168,0)
 . ; Get current balance on Bill
"RTN","RCDPEAD",169,0)
 . S RCBAL=$P($G(^PRCA(430,RCBILL,7)),U)
"RTN","RCDPEAD",170,0)
 . ;
"RTN","RCDPEAD",171,0)
 . ; Check pending payment amount and bill balance 
"RTN","RCDPEAD",172,0)
 . N PENDING
"RTN","RCDPEAD",173,0)
 . S PENDING=$$PENDPAY^RCDPURET(RCBILL)
"RTN","RCDPEAD",174,0)
 . K ^TMP($J,"RCDPUREC","PP")
"RTN","RCDPEAD",175,0)
 . Q:(RCBAL-PENDING)<(+$P(RCIARR(RCJ,RCK),";",1))
"RTN","RCDPEAD",176,0)
 . ;
"RTN","RCDPEAD",177,0)
 . Q:(RCADJ+$P(RCIARR(RCJ,RCK),";",1))>RCMAX  ; Don't apply decrease if over top limit
"RTN","RCDPEAD",178,0)
 . ;
"RTN","RCDPEAD",179,0)
 . S COMMENT(1)="MEDICAL AUTO-DECREASE FOR CARC: "_$P(RCIARR(RCJ,RCK),";",2)_" AMOUNT: "_+$P(RCIARR(RCJ,RCK),";",1) ; PRCA*&4.5*326
"RTN","RCDPEAD",180,0)
 . S COMMENT(1)=COMMENT(1)_" (MAX DEC: "_+$P($$ACTCARC($P(RCIARR(RCJ,RCK),";",2),RCZERO),U,2)_")" ; PRCA*4.5*326
"RTN","RCDPEAD",181,0)
 . ; If this CARC is expired then add that information to the comment
"RTN","RCDPEAD",182,0)
 . I $P(RCIARR(RCJ,RCK),";",3)'="" S COMMENT(1)=COMMENT(1)_" CARC expired on "_$$FMTE^XLFDT($P(RCIARR(RCJ,RCK),";",3),"6D")
"RTN","RCDPEAD",183,0)
 . ; Apply contract adjustment for CARC adjustment amount from claim information
"RTN","RCDPEAD",184,0)
 . S RCTRANDA=$$INCDEC^RCBEUTR1(RCBILL,-$P(RCIARR(RCJ,RCK),";",1),.COMMENT,"","",1) Q:'RCTRANDA
"RTN","RCDPEAD",185,0)
 . ; Update total adjustments for line
"RTN","RCDPEAD",186,0)
 . S RCADJ=RCADJ+$P(RCIARR(RCJ,RCK),";",1)
"RTN","RCDPEAD",187,0)
 ; Update auto-decrease indicator, auto decrease amount and auto decrease date
"RTN","RCDPEAD",188,0)
 N DA,DIE,DR S DA(1)=RCERA,DA=RCLINE,DIE="^RCY(344.4,"_DA(1)_",1,",DR="7///1;8///"_RCADJ_";10///"_DT D ^DIE
"RTN","RCDPEAD",189,0)
 ; PRCA*4.5*304 - End of updates
"RTN","RCDPEAD",190,0)
 ; Update last auto decrease date on ERA
"RTN","RCDPEAD",191,0)
 N DA,DIE,DR S DA=RCERA,DIE="^RCY(344.4,",DR="4.03///"_DT D ^DIE
"RTN","RCDPEAD",192,0)
 Q
"RTN","RCDPEAD",193,0)
 ;
"RTN","RCDPEAD",194,0)
REJ ; Process zero balance denial ERA's - PRCA*4.5*326
"RTN","RCDPEAD",195,0)
 N PAID,PAYID,PAYNAM,RC3446,RCDAY,RCLINE,RCPARM
"RTN","RCDPEAD",196,0)
 ; Get days to wait for payer rejects (rename no-pay lines field) 
"RTN","RCDPEAD",197,0)
 S RCDAY=$$FMADD^XLFDT(DT\1,-$$GET1^DIQ(344.61,"1,",.12))
"RTN","RCDPEAD",198,0)
 ; Scan AFD index for ERA received within date range
"RTN","RCDPEAD",199,0)
 S RCDATE=$$FMADD^XLFDT(RCDAY,-1)_".99999",PAID=0
"RTN","RCDPEAD",200,0)
 F  S RCDATE=$O(^RCY(344.4,"AFD",RCDATE)) Q:'RCDATE  Q:(RCDATE\1)>RCDAY  D
"RTN","RCDPEAD",201,0)
 . S RCERA=0
"RTN","RCDPEAD",202,0)
 . ; Check for payer reject ERA's
"RTN","RCDPEAD",203,0)
 . F  S RCERA=$O(^RCY(344.4,"AFD",RCDATE,RCERA)) Q:'RCERA  D
"RTN","RCDPEAD",204,0)
 .. ; Ignore ERA if total paid is not zero
"RTN","RCDPEAD",205,0)
 .. Q:+$$GET1^DIQ(344.4,RCERA_",",.05)
"RTN","RCDPEAD",206,0)
 .. ; Ignore ERA if removed from worklist
"RTN","RCDPEAD",207,0)
 .. Q:+$$GET1^DIQ(344.4,RCERA_",",.16,"I")
"RTN","RCDPEAD",208,0)
 .. ; Ignore ERA if not payment type of NON
"RTN","RCDPEAD",209,0)
 .. Q:$$GET1^DIQ(344.4,RCERA_",",.15)'="NON"
"RTN","RCDPEAD",210,0)
 .. ; Quit if ERA is for Pharmacy
"RTN","RCDPEAD",211,0)
 .. S RCRTYPE=$$PHARM^RCDPEAP1(RCERA)
"RTN","RCDPEAD",212,0)
 .. Q:RCRTYPE
"RTN","RCDPEAD",213,0)
 .. ; Check payer exclusion file for this ERA's payer
"RTN","RCDPEAD",214,0)
 .. S PAYID=$P($G(^RCY(344.4,RCERA,0)),U,3)
"RTN","RCDPEAD",215,0)
 .. S PAYNAM=$P($G(^RCY(344.4,RCERA,0)),U,6)
"RTN","RCDPEAD",216,0)
 .. I PAYID'="",PAYNAM'="" D
"RTN","RCDPEAD",217,0)
 .. . S RCPARM=$O(^RCY(344.6,"CPID",PAYNAM,PAYID,""))
"RTN","RCDPEAD",218,0)
 .. . S:RCPARM'="" RC3446=$G(^RCY(344.6,RCPARM,0))
"RTN","RCDPEAD",219,0)
 .. ; Ignore ERA if EXCLUDE MED CLAIMS POSTING  (#.06) or EXCLUDE MED CLAIMS DECREASE (#.07) fields set to 'yes'
"RTN","RCDPEAD",220,0)
 .. I $G(RC3446)'="" Q:$P(RC3446,U,6)=1  Q:$P(RC3446,U,7)=1
"RTN","RCDPEAD",221,0)
 .. ; Ignore ERA if auto-post blocked
"RTN","RCDPEAD",222,0)
 .. Q:$$GET1^DIQ(344.4,RCERA_",",.19,"I")
"RTN","RCDPEAD",223,0)
 .. ;
"RTN","RCDPEAD",224,0)
 .. ; Build Scratchpad (if needed) and Verify Lines
"RTN","RCDPEAD",225,0)
 .. K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAD",226,0)
 .. S RCSCR=$$SCRPAD^RCDPEWLZ(RCERA)
"RTN","RCDPEAD",227,0)
 .. I 'RCSCR Q
"RTN","RCDPEAD",228,0)
 .. ; Ignore ERA if it has PLBs
"RTN","RCDPEAD",229,0)
 .. I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) Q
"RTN","RCDPEAD",230,0)
 .. ;
"RTN","RCDPEAD",231,0)
 .. ; Build index to scratchpad for this ERA
"RTN","RCDPEAD",232,0)
 .. N RCARRAY
"RTN","RCDPEAD",233,0)
 .. D BUILD^RCDPEAP(RCERA,.RCARRAY)
"RTN","RCDPEAD",234,0)
 .. ; Search lines
"RTN","RCDPEAD",235,0)
 .. S RCLINE=0
"RTN","RCDPEAD",236,0)
 .. F  S RCLINE=$O(RCARRAY(RCLINE)) Q:'RCLINE  D
"RTN","RCDPEAD",237,0)
 ...; Ignore claim line if already auto decreased
"RTN","RCDPEAD",238,0)
 ...Q:$P($G(^RCY(344.4,RCERA,1,RCLINE,5)),U,3)
"RTN","RCDPEAD",239,0)
 ...; Process line
"RTN","RCDPEAD",240,0)
 ...D EN4(RCDATE,RCERA,.RCARRAY,PAID,RCLINE)
"RTN","RCDPEAD",241,0)
 Q
"RTN","RCDPEAD",242,0)
 ;
"RTN","RCDPEAD",243,0)
SPLIT(RCSCR,RCLINE,RCBILL,RCARRAY) ;Check for SPLIT/EDIT in scratchpad
"RTN","RCDPEAD",244,0)
 ;Input RCSCR - IEN of #344.49
"RTN","RCDPEAD",245,0)
 ;      RCLINE - ERA detail line sequence number
"RTN","RCDPEAD",246,0)
 ;      RCBILL - IEN of #430
"RTN","RCDPEAD",247,0)
 ;      ARRAY - reference to passed array (from BUILD^RCDPEAP)
"RTN","RCDPEAD",248,0)
 ;Output return value 1/0 = Split/Not Split 
"RTN","RCDPEAD",249,0)
 N SUB,SUB1
"RTN","RCDPEAD",250,0)
 ;Find ERA line in scratchpad
"RTN","RCDPEAD",251,0)
 S SUB=$G(RCARRAY(RCLINE)) Q:'SUB 0
"RTN","RCDPEAD",252,0)
 ;Get n.001 line
"RTN","RCDPEAD",253,0)
 S SUB1=$O(^RCY(344.49,RCSCR,1,SUB)) Q:'SUB1 0
"RTN","RCDPEAD",254,0)
 ;Check sequence number is the same
"RTN","RCDPEAD",255,0)
 Q:$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),".")'=$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U) 0
"RTN","RCDPEAD",256,0)
 ;Check that claim number is unchanged from original ERA
"RTN","RCDPEAD",257,0)
 Q:$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,7)=RCBILL 0
"RTN","RCDPEAD",258,0)
 ;Otherwise claim was edited (and should not be decreased)
"RTN","RCDPEAD",259,0)
 Q 1
"RTN","RCDPEAD",260,0)
 ;
"RTN","RCDPEAD",261,0)
CARCLMT(RCEOB,RCZERO,FROMADP,ADATE) ;EP from COMPILE^RCDPEADP
"RTN","RCDPEAD",262,0)
 ; PRCA*4.5*304 - Check to see if CARC are included and are eligible
"RTN","RCDPEAD",263,0)
 ; for auto-decrease. Return 0 if not, Max Amount ^ CARC if it is.
"RTN","RCDPEAD",264,0)
 ; Input:   RCEOB   - Internal IEN for the explanation of benefits field (361.1)
"RTN","RCDPEAD",265,0)
 ;          FROMADP - 1 if being called from COMPILE^RCDPEADP, 0 otherwise
"RTN","RCDPEAD",266,0)
 ;                    Optional, default to 0
"RTN","RCDPEAD",267,0)
 ;          ADATE   - Internal Auto-Post Date (only passed if FROMADP=1)
"RTN","RCDPEAD",268,0)
 ;          RCZERO  - 0 = ERA Line with payment 1 = ERA Line without payment
"RTN","RCDPEAD",269,0)
 ; Returns: A1;A2;A3;A4^B1;B2;B3;B4^...^N1;N2;N3;N4 Where:
"RTN","RCDPEAD",270,0)
 ;           A1 - Auto-Decrease amount of the 1st CARC code in the EOB
"RTN","RCDPEAD",271,0)
 ;           A2 - 1st CARC code in the EOB
"RTN","RCDPEAD",272,0)
 ;           A3 - Deactivation Date of the 1st CARC code in the EOB if
"RTN","RCDPEAD",273,0)
 ;                it has one and is less than today AND FROMADP=0
"RTN","RCDPEAD",274,0)
 ;                Otherwise Quantity of the first CARC code in the EOB if
"RTN","RCDPEAD",275,0)
 ;                FROMADP=1
"RTN","RCDPEAD",276,0)
 ;           A4 - Reason of the 1st CARC code in the EOB
"RTN","RCDPEAD",277,0)
 ;                only passed if FROMADP=1
"RTN","RCDPEAD",278,0)
 N I,RCAMT,RCCAMT,RCCODE,RCCODES,RCDATA,RCITEM,RCTAMT,XDT,XIEN
"RTN","RCDPEAD",279,0)
 S:'$D(FROMADP) FROMADP=0
"RTN","RCDPEAD",280,0)
 S RCAMT="",RCCODES=""
"RTN","RCDPEAD",281,0)
 ;
"RTN","RCDPEAD",282,0)
 ; Extract the CARC codes from the EOB.
"RTN","RCDPEAD",283,0)
 ; Returned are ^A1;A2;A3;A4^A1;A2;A3;A4^... Where
"RTN","RCDPEAD",284,0)
 ;                 A1 - CARC code
"RTN","RCDPEAD",285,0)
 ;                 A2 - Auto Decrease Amount
"RTN","RCDPEAD",286,0)
 ;                 A3 - Quantity       (only returned if FROMADP=1)
"RTN","RCDPEAD",287,0)
 ;                 A4 - REASON         (only returned if FROMADP=1)
"RTN","RCDPEAD",288,0)
 D GETCARCS(RCEOB,.RCCODES,FROMADP)
"RTN","RCDPEAD",289,0)
 ; 
"RTN","RCDPEAD",290,0)
 ; Loop through all of the CARC codes found.  If none, it will exit.
"RTN","RCDPEAD",291,0)
 F I=2:1:$L(RCCODES,"^") D
"RTN","RCDPEAD",292,0)
 . S RCITEM=$P(RCCODES,"^",I)
"RTN","RCDPEAD",293,0)
 . Q:RCITEM=""
"RTN","RCDPEAD",294,0)
 . S RCCODE=$P(RCITEM,";",1),RCCAMT=$P(RCITEM,";",2)
"RTN","RCDPEAD",295,0)
 . ;
"RTN","RCDPEAD",296,0)
 . ; Quit If the Adjustment amount is a negative amount
"RTN","RCDPEAD",297,0)
 . Q:+RCCAMT<0
"RTN","RCDPEAD",298,0)
 . ;
"RTN","RCDPEAD",299,0)
 . ; Look up code in CARC table and get max adjustment
"RTN","RCDPEAD",300,0)
 . S RCDATA=$$ACTCARC(RCCODE,RCZERO) ; PRCA*4.5*326
"RTN","RCDPEAD",301,0)
 . ;
"RTN","RCDPEAD",302,0)
 . ; Quit If auto decrease is not active on this code
"RTN","RCDPEAD",303,0)
 . Q:+RCDATA=0
"RTN","RCDPEAD",304,0)
 . ;
"RTN","RCDPEAD",305,0)
 . ; Get code inactive date if it exists
"RTN","RCDPEAD",306,0)
 . S XIEN=$$FIND1^DIC(345,,"O",RCCODE)
"RTN","RCDPEAD",307,0)
 . S:$G(XIEN)'="" XDT=$$GET1^DIQ(345,XIEN_",",2,"I")
"RTN","RCDPEAD",308,0)
 . I $G(XDT)'="" S:XDT'<DT XDT=""
"RTN","RCDPEAD",309,0)
 . S RCTAMT=$P(RCDATA,U,2)                  ; Get limit
"RTN","RCDPEAD",310,0)
 . ;
"RTN","RCDPEAD",311,0)
 . ; 11/11/2015: Compare the max adjustment in parameters to the adjustment on EEOB
"RTN","RCDPEAD",312,0)
 . ; Quit if over 
"RTN","RCDPEAD",313,0)
 . ;
"RTN","RCDPEAD",314,0)
 . ; If the CARC payer adjustment <= CARC max adjustment amount, Then add to list
"RTN","RCDPEAD",315,0)
 . ; for possible adjustments.
"RTN","RCDPEAD",316,0)
 . I RCCAMT<(RCTAMT+.01) D
"RTN","RCDPEAD",317,0)
 . . ;
"RTN","RCDPEAD",318,0)
 . . ; If we're being called from the auto-decrease report, return all CARC information
"RTN","RCDPEAD",319,0)
 . . I FROMADP D  Q
"RTN","RCDPEAD",320,0)
 . . . S XX=RCCAMT_";"_RCCODE_";"_$P(RCITEM,";",3,4)
"RTN","RCDPEAD",321,0)
 . . . S RCAMT=$S(RCAMT'[";":XX,1:RCAMT_"^"_XX)
"RTN","RCDPEAD",322,0)
 . . S RCAMT=$S($L(RCAMT)=0:RCCAMT_";"_RCCODE_";"_XDT,1:RCAMT_U_RCCAMT_";"_RCCODE_";"_XDT)
"RTN","RCDPEAD",323,0)
 Q RCAMT
"RTN","RCDPEAD",324,0)
 ;
"RTN","RCDPEAD",325,0)
GETCARCS(RCEOB,RCCODES,FROMADP) ; Extract the CARCs from an EOB at claim and line levels
"RTN","RCDPEAD",326,0)
 ; Input:   RCEOB   - Internal IEN for the explanation of benefits field (361.1)
"RTN","RCDPEAD",327,0)
 ;          FROMADP - 1 if being called from COMPILE^RCDPEAD1, 0 otherwise
"RTN","RCDPEAD",328,0)
 ;                    Optional, default to 0
"RTN","RCDPEAD",329,0)
 ; Output:  RCCODES - ^ delimitted string of CARC code information from the
"RTN","RCDPEAD",330,0)
 ;                      claim and claim ine levels for the specified EOB
"RTN","RCDPEAD",331,0)
 ;                      ^A1;A2;A3;A4^A1;A2;A3;A4^... Where
"RTN","RCDPEAD",332,0)
 ;                        A1 - CARC code
"RTN","RCDPEAD",333,0)
 ;                        A2 - Auto Decrease Amount
"RTN","RCDPEAD",334,0)
 ;                        A3 - Quantity       (only returned if FROMADP=1)
"RTN","RCDPEAD",335,0)
 ;                        A4 - REASON         (only returned if FROMADP=1)
"RTN","RCDPEAD",336,0)
 N IENS,RCAMT,QUANT,REASON,RCCODE,RCI,RCJ,RCL
"RTN","RCDPEAD",337,0)
 S:'$D(FROMADP) FROMADP=0
"RTN","RCDPEAD",338,0)
 S RCI=0,RCCODES=""
"RTN","RCDPEAD",339,0)
 ;
"RTN","RCDPEAD",340,0)
 ; Get to the Codes at the claim level
"RTN","RCDPEAD",341,0)
 F  D  Q:'RCI
"RTN","RCDPEAD",342,0)
 . S RCI=$O(^IBM(361.1,RCEOB,10,RCI))
"RTN","RCDPEAD",343,0)
 . Q:'RCI
"RTN","RCDPEAD",344,0)
 . S RCJ=0
"RTN","RCDPEAD",345,0)
 . F  D  Q:'RCJ
"RTN","RCDPEAD",346,0)
 . . S RCJ=$O(^IBM(361.1,RCEOB,10,RCI,1,RCJ))
"RTN","RCDPEAD",347,0)
 . . Q:'RCJ
"RTN","RCDPEAD",348,0)
 . . S IENS=RCJ_","_RCI_","_RCEOB_","
"RTN","RCDPEAD",349,0)
 . . S RCCODE=$$GET1^DIQ(361.111,IENS,.01,"I") ; CARC Code
"RTN","RCDPEAD",350,0)
 . . Q:RCCODE=""
"RTN","RCDPEAD",351,0)
 . . S RCAMT=$$GET1^DIQ(361.111,IENS,.02,"I")  ; CARC Amount
"RTN","RCDPEAD",352,0)
 . . I 'FROMADP S RCCODES=RCCODES_"^"_RCCODE_";"_RCAMT Q
"RTN","RCDPEAD",353,0)
 . . S QUANT=$$GET1^DIQ(361.111,IENS,.03,"I")  ; CARC Quantity
"RTN","RCDPEAD",354,0)
 . . S REASON=$$GET1^DIQ(361.111,IENS,.04,"I") ; CARC Reason
"RTN","RCDPEAD",355,0)
 . . S:$L(REASON)>30 REASON=$E(REASON,1,27)_"..."
"RTN","RCDPEAD",356,0)
 . . S RCCODES=RCCODES_"^"_RCCODE_";"_RCAMT_";"_QUANT_";"_REASON
"RTN","RCDPEAD",357,0)
 ;
"RTN","RCDPEAD",358,0)
 ; Get Claim Line level CARCs
"RTN","RCDPEAD",359,0)
 S RCL=0
"RTN","RCDPEAD",360,0)
 F  D  Q:+RCL=0
"RTN","RCDPEAD",361,0)
 . S RCL=$O(^IBM(361.1,RCEOB,15,RCL))
"RTN","RCDPEAD",362,0)
 . Q:+RCL=0
"RTN","RCDPEAD",363,0)
 . S RCI=0
"RTN","RCDPEAD",364,0)
 . F  D  Q:+RCI=0
"RTN","RCDPEAD",365,0)
 . . S RCI=$O(^IBM(361.1,RCEOB,15,RCL,1,RCI))
"RTN","RCDPEAD",366,0)
 . . Q:+RCI=0
"RTN","RCDPEAD",367,0)
 . . S RCJ=0
"RTN","RCDPEAD",368,0)
 . . F  D  Q:+RCJ=0
"RTN","RCDPEAD",369,0)
 . . . S RCJ=$O(^IBM(361.1,RCEOB,15,RCL,1,RCI,1,RCJ))
"RTN","RCDPEAD",370,0)
 . . . Q:+RCJ=0
"RTN","RCDPEAD",371,0)
 . . . S IENS=RCJ_","_RCI_","_RCL_","_RCEOB_","
"RTN","RCDPEAD",372,0)
 . . . S RCCODE=$$GET1^DIQ(361.11511,IENS,.01,"I") ; CARC Code
"RTN","RCDPEAD",373,0)
 . . . Q:RCCODE=""
"RTN","RCDPEAD",374,0)
 . . . S RCAMT=$$GET1^DIQ(361.11511,IENS,.02,"I")  ; CARC Amount
"RTN","RCDPEAD",375,0)
 . . . I 'FROMADP S RCCODES=RCCODES_"^"_RCCODE_";"_RCAMT Q
"RTN","RCDPEAD",376,0)
 . . . S QUANT=$$GET1^DIQ(361.11511,IENS,.03,"I")  ; CARC Quantity
"RTN","RCDPEAD",377,0)
 . . . S REASON=$$GET1^DIQ(361.11511,IENS,.04,"I") ; CARC Reason
"RTN","RCDPEAD",378,0)
 . . . S:$L(REASON)>30 REASON=$E(REASON,1,27)_"..."
"RTN","RCDPEAD",379,0)
 . . . S RCCODES=RCCODES_"^"_RCCODE_";"_RCAMT_";"_QUANT_";"_REASON
"RTN","RCDPEAD",380,0)
 Q
"RTN","RCDPEAD",381,0)
 ;
"RTN","RCDPEAD",382,0)
 ; PRCA*4.5*304 - Added function
"RTN","RCDPEAD",383,0)
ACTCARC(CODE,RCZERO) ; Is this CARC an active code for auto-decrease
"RTN","RCDPEAD",384,0)
 ; Input:   CODE    - CARC code being checked
"RTN","RCDPEAD",385,0)
 ;          RCZERO  - O = Claim line with payment, 1 = Claim line with no payment
"RTN","RCDPEAD",386,0)
 ; Returns: '0^NOT ACTIVE' if not active
"RTN","RCDPEAD",387,0)
 ;          '1^{amount}' if active and the second piece is the decrease amount
"RTN","RCDPEAD",388,0)
 N AIEN,FIELD,XX
"RTN","RCDPEAD",389,0)
 I $G(CODE)="" Q "0^NOT ACTIVE"
"RTN","RCDPEAD",390,0)
 S AIEN=$O(^RCY(344.62,"B",CODE,""))
"RTN","RCDPEAD",391,0)
 I AIEN="" Q "0^NOT ACTIVE"
"RTN","RCDPEAD",392,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEAD",393,0)
 S FIELD=$S(RCZERO:.08,1:.02) ; No pay line CARCs have separate on/off switch
"RTN","RCDPEAD",394,0)
 S XX=$$GET1^DIQ(344.62,AIEN,FIELD,"I")       ; Quit if auto-decrease is off
"RTN","RCDPEAD",395,0)
 S FIELD=$S(RCZERO:.12,1:.06) ; No pay line CARCs have different maximum
"RTN","RCDPEAD",396,0)
 I XX=1 Q "1^"_$$GET1^DIQ(344.62,AIEN,FIELD)  ; Active code returns maximum allowed decrease amount
"RTN","RCDPEAD",397,0)
 ; END PRCA*4.5*326
"RTN","RCDPEAD",398,0)
 Q "0^NOT ACTIVE"
"RTN","RCDPEAD",399,0)
 ;
"RTN","RCDPEAD",400,0)
OTHER(RCBILLDA,ORIG) ; Check if APAR/WL entries exist on other ERA for this bill
"RTN","RCDPEAD",401,0)
 ; INPUT 
"RTN","RCDPEAD",402,0)
 ;    RCBILLDA - IEN for claim in #430 or #399
"RTN","RCDPEAD",403,0)
 ;    ORIG - IEN for current ERA      
"RTN","RCDPEAD",404,0)
 ; OUTPUT
"RTN","RCDPEAD",405,0)
 ;    RCPEND - 1 = Other ERA payments exist   0 - No other ERA payments exit
"RTN","RCDPEAD",406,0)
 ;
"RTN","RCDPEAD",407,0)
 N AUTOSTA,RCERA,RCEOB,RCLINE,RCPAID,RCPEND,RCTOT,RCZ,RCZL
"RTN","RCDPEAD",408,0)
 ; Find EEOB's for this claim
"RTN","RCDPEAD",409,0)
 S RCEOB=0,RCPEND=0
"RTN","RCDPEAD",410,0)
 F  S RCEOB=$O(^IBM(361.1,"B",RCBILLDA,RCEOB)) Q:'RCEOB  Q:RCPEND  D
"RTN","RCDPEAD",411,0)
 . ;Find ERAs for this EOB - may be multiple
"RTN","RCDPEAD",412,0)
 . S RCERA=0
"RTN","RCDPEAD",413,0)
 . F  S RCERA=$O(^RCY(344.4,"ADET",RCEOB,RCERA)) Q:'RCERA  Q:RCPEND  D
"RTN","RCDPEAD",414,0)
 . . ; Ignore original ERA
"RTN","RCDPEAD",415,0)
 . . Q:RCERA=ORIG
"RTN","RCDPEAD",416,0)
 . . ; Get auto-post status for ERA
"RTN","RCDPEAD",417,0)
 . . S AUTOSTA=$$GET1^DIQ(344.4,RCERA_",",4.02,"I")
"RTN","RCDPEAD",418,0)
 . . ; Ignore completely processed auto-post ERA
"RTN","RCDPEAD",419,0)
 . . Q:AUTOSTA=2
"RTN","RCDPEAD",420,0)
 . . ; Ignore non-auto-post ERA which already have a receipt - processed or otherwise
"RTN","RCDPEAD",421,0)
 . . I AUTOSTA="",$$GET1^DIQ(344.4,RCERA_",",.08,"I") Q
"RTN","RCDPEAD",422,0)
 . . ; Get ERA lines for this EOB
"RTN","RCDPEAD",423,0)
 . . S RCLINE=0,RCTOT=0
"RTN","RCDPEAD",424,0)
 . . F  S RCLINE=$O(^RCY(344.4,"ADET",RCEOB,RCERA,RCLINE)) Q:'RCLINE  Q:RCPEND  D
"RTN","RCDPEAD",425,0)
 . . . ; Ignore auto-posted lines (which have a receipt)
"RTN","RCDPEAD",426,0)
 . . . I AUTOSTA]"",$$GET1^DIQ(344.41,RCLINE_","_RCERA_",",.25) Q
"RTN","RCDPEAD",427,0)
 . . . ; Get paid amount from ERA line
"RTN","RCDPEAD",428,0)
 . . . S RCPAID=$$GET1^DIQ(344.41,RCLINE_","_RCERA_",",.03)
"RTN","RCDPEAD",429,0)
 . . . ; Ignore zero lines  
"RTN","RCDPEAD",430,0)
 . . . Q:'RCPAID
"RTN","RCDPEAD",431,0)
 . . . ; If no scratchpad use paid amount from ERA
"RTN","RCDPEAD",432,0)
 . . . I '$D(^RCY(344.49,RCERA)) S RCTOT=RCTOT+RCPAID Q
"RTN","RCDPEAD",433,0)
 . . . ; Find ERA line in scratchpad
"RTN","RCDPEAD",434,0)
 . . . S RCZL=$$FIND(RCERA,RCLINE) Q:'RCZL
"RTN","RCDPEAD",435,0)
 . . . ; If scratchpad exists scan B index for split lines(344.49 is DINUM with 344.4)
"RTN","RCDPEAD",436,0)
 . . . S RCSUB=RCZL
"RTN","RCDPEAD",437,0)
 . . . F  S RCSUB=$O(^RCY(344.49,RCERA,1,"B",RCSUB)) Q:(RCSUB\1)'=RCZL  D
"RTN","RCDPEAD",438,0)
 . . . . S RCZ=$O(^RCY(344.49,RCERA,1,"B",RCSUB,"")) Q:'RCZ
"RTN","RCDPEAD",439,0)
 . . . . ; Check AR BILL is for this claim
"RTN","RCDPEAD",440,0)
 . . . . Q:$$GET1^DIQ(344.491,RCZ_","_RCERA_",",.07,"I")'=RCBILLDA
"RTN","RCDPEAD",441,0)
 . . . . ; Add AMOUNT TO POST ON RECEIPT to pending total - should resolve reversals
"RTN","RCDPEAD",442,0)
 . . . . S RCTOT=RCTOT+$$GET1^DIQ(344.491,RCZ_","_RCERA_",",.03)
"RTN","RCDPEAD",443,0)
 . . ; If claim total for the ERA is non-zero auto-decrease is blocked
"RTN","RCDPEAD",444,0)
 . . S:RCTOT>0 RCPEND=1
"RTN","RCDPEAD",445,0)
 Q RCPEND
"RTN","RCDPEAD",446,0)
 ;
"RTN","RCDPEAD",447,0)
FIND(RCERA,RCLINE) ; Search ORIGINAL ERA SEQUENCES for this line
"RTN","RCDPEAD",448,0)
 ; Input RCERA - Scratchpad IEN 
"RTN","RCDPEAD",449,0)
 ; RCLINE - ERA line to find
"RTN","RCDPEAD",450,0)
 ; Output RET - Scratchpad line number
"RTN","RCDPEAD",451,0)
 ;
"RTN","RCDPEAD",452,0)
 N DA,ORIG,RCSUB,RET
"RTN","RCDPEAD",453,0)
 S RCSUB=0,RET=0
"RTN","RCDPEAD",454,0)
 F  S RCSUB=$O(^RCY(344.49,RCERA,1,"ASEQ",RCSUB)) Q:RET  Q:'RCSUB  D
"RTN","RCDPEAD",455,0)
 . S DA=$O(^RCY(344.49,RCERA,1,"ASEQ",RCSUB,"")) Q:'DA
"RTN","RCDPEAD",456,0)
 . ;Get Original sequences
"RTN","RCDPEAD",457,0)
 . S ORIG=$$GET1^DIQ(344.491,DA_","_RCERA_",",.09) Q:ORIG=""
"RTN","RCDPEAD",458,0)
 . ;Check if scratchpad line is for original ERA line
"RTN","RCDPEAD",459,0)
 . S ORIG=","_ORIG_","
"RTN","RCDPEAD",460,0)
 . S:$F(ORIG,","_RCLINE_",") RET=RCSUB
"RTN","RCDPEAD",461,0)
 Q RET
"RTN","RCDPEAD1")
0^48^B89886464
"RTN","RCDPEAD1",1,0)
RCDPEAD1 ;OIFO-BAYPINES/PJH - AUTO-DECREASE REPORT ;Nov 23, 2014@12:48:50
"RTN","RCDPEAD1",2,0)
 ;;4.5;Accounts Receivable;**298,318,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAD1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAD1",4,0)
 ;
"RTN","RCDPEAD1",5,0)
CARCS(A1,A2,A3,CARCS) ; Get CARC Auto-Decrease data
"RTN","RCDPEAD1",6,0)
 ; Input:   A1              - "EXCEL" if exporting to excel
"RTN","RCDPEAD1",7,0)
 ;                            Internal fileman date if not exporting to excel
"RTN","RCDPEAD1",8,0)
 ;          A2              - Excel Line Counter if exporting to excel
"RTN","RCDPEAD1",9,0)
 ;                            External Claim number is sorting by claim
"RTN","RCDPEAD1",10,0)
 ;                            External Payer Name if sorting by Payer
"RTN","RCDPEAD1",11,0)
 ;                            External Patient Name if sorting by Patient Name
"RTN","RCDPEAD1",12,0)
 ;          A3              - Record Counter
"RTN","RCDPEAD1",13,0)
 ;          CARCS           - ^ delimited string of CARC information
"RTN","RCDPEAD1",14,0)
 ;                            See SAVE for a complete description
"RTN","RCDPEAD1",15,0)
 ; Output:  ^TMP("RCDPEADP",$J,A1,A2,A3,A4) - C1^C2^C3^C4 Where:
"RTN","RCDPEAD1",16,0)
 ;                          - A1 - "EXCEL" if exporting to excel
"RTN","RCDPEAD1",17,0)
 ;                                  Internal fileman date if not exporting to excel
"RTN","RCDPEAD1",18,0)
 ;                            A2 - Excel Line Counter if exporting to excel
"RTN","RCDPEAD1",19,0)
 ;                                 External Claim number is sorting by claim
"RTN","RCDPEAD1",20,0)
 ;                                 External Payer Name if sorting by Payer
"RTN","RCDPEAD1",21,0)
 ;                                 External Patient Name if sorting by Patient Name
"RTN","RCDPEAD1",22,0)
 ;                            A3 - Record Counter
"RTN","RCDPEAD1",23,0)
 ;                            A4 - CARC Counter
"RTN","RCDPEAD1",24,0)
 ;                            C1 - CARC Code (file 361.111, field .01)
"RTN","RCDPEAD1",25,0)
 ;                            C2 - Decrease Amount (file 361.111, field .02)
"RTN","RCDPEAD1",26,0)
 ;                            C3 - Quantity (file 361.111, field .03)
"RTN","RCDPEAD1",27,0)
 ;                            C4 - Reason (file 361.111, field .04)
"RTN","RCDPEAD1",28,0)
 N AMT,CARC,CCTR,OCARC,QUANT,REASON,XX
"RTN","RCDPEAD1",29,0)
 ;
"RTN","RCDPEAD1",30,0)
 ; Loop through all of the valid CARCs found in the EOB record
"RTN","RCDPEAD1",31,0)
 F CCTR=1:1:$L(CARCS,"^") D
"RTN","RCDPEAD1",32,0)
 . S OCARC=$P(CARCS,"^",CCTR)
"RTN","RCDPEAD1",33,0)
 . S CARC=$P(OCARC,";",2)                   ; CARC Code
"RTN","RCDPEAD1",34,0)
 . S AMT=$P(OCARC,";",1)                    ; Amount
"RTN","RCDPEAD1",35,0)
 . S QUANT=$P(OCARC,";",3)                  ; Quantity
"RTN","RCDPEAD1",36,0)
 . S REASON=$P(OCARC,";",4)                 ; Reason Text
"RTN","RCDPEAD1",37,0)
 . S XX=CARC_"^"_AMT_"^"_QUANT_"^"_REASON
"RTN","RCDPEAD1",38,0)
 . S ^TMP("RCDPEADP",$J,A1,A2,A3,CCTR)=XX
"RTN","RCDPEAD1",39,0)
 Q
"RTN","RCDPEAD1",40,0)
 ;
"RTN","RCDPEAD1",41,0)
COMPILE(INPUTS,RCVAUTD,DTOTAL,GTOTAL) ; EP Generate the Auto-Decrease report ^TMP array
"RTN","RCDPEAD1",42,0)
 ; Input:   INPUTS  - A1^A2^A3^...^An Where:
"RTN","RCDPEAD1",43,0)
 ;                       A1 -  1  - All divisions selected
"RTN","RCDPEAD1",44,0)
 ;                             2  - Selected divisions
"RTN","RCDPEAD1",45,0)
 ;                       A2 -  C  - Sort by Claim
"RTN","RCDPEAD1",46,0)
 ;                             P  - Sort by Payer 
"RTN","RCDPEAD1",47,0)
 ;                             N  - Sort by Patient Name
"RTN","RCDPEAD1",48,0)
 ;                       A3 -  F  - First to Last Sort Order
"RTN","RCDPEAD1",49,0)
 ;                             L  - Last to First Sort Order
"RTN","RCDPEAD1",50,0)
 ;                       A4 -  B1|B2
"RTN","RCDPEAD1",51,0)
 ;                             B1 - Auto-Post Start Date
"RTN","RCDPEAD1",52,0)
 ;                             B2 - Auto-Post End Date
"RTN","RCDPEAD1",53,0)
 ;                       A5 -  1 - Output to Excel
"RTN","RCDPEAD1",54,0)
 ;                             2 - Otherwise
"RTN","RCDPEAD1",55,0)
 ;          RCVAUTD     - Array of selected Divisions
"RTN","RCDPEAD1",56,0)
 ;                        Only passed if A1=2
"RTN","RCDPEAD1",57,0)
 ; Output:  DTOTAL()            - Array of totals by Auto-Post Date
"RTN","RCDPEAD1",58,0)
 ;          GTOTAL              - Grand totals
"RTN","RCDPEAD1",59,0)
 ;          ^TMP("RCDPEADP",$J) - Array of report data
"RTN","RCDPEAD1",60,0)
 ;                                See SAVE for a full description
"RTN","RCDPEAD1",61,0)
 N AMT,ADDATE,CARCS,END,ERAIEN,EOBIEN,EXCEL,RCTR,RCRZ,RCSORT,RCTYPE,RCZERO,STA,STNAM,STNUM,XX ; PRCA*4.5*326
"RTN","RCDPEAD1",62,0)
 ;
"RTN","RCDPEAD1",63,0)
 S XX=$P(INPUTS,"^",4)                      ; Auto-Post Date range
"RTN","RCDPEAD1",64,0)
 S ADDATE=$$FMADD^XLFDT($P(XX,"|",1),-1)
"RTN","RCDPEAD1",65,0)
 S END=$P(XX,"|",2)                         ; Auto-Post End Date
"RTN","RCDPEAD1",66,0)
 S RCTR=0                                   ; Record counter
"RTN","RCDPEAD1",67,0)
 S EXCEL=$P(INPUTS,"^",5)                   ; 1 output to Excel, 0 otherwise
"RTN","RCDPEAD1",68,0)
 S RCSORT=$P(INPUTS,"^",2)                  ; Sort Type
"RTN","RCDPEAD1",69,0)
 S RCTYPE=$P(INPUTS,"^",7) ; PRCA*4.5*326 Payer Type
"RTN","RCDPEAD1",70,0)
 ;
"RTN","RCDPEAD1",71,0)
 ; ^RCY(344.4,0) = "ELECTRONIC REMITTANCE ADVICE^344.4I^"
"RTN","RCDPEAD1",72,0)
 ;                 G cross-ref.   REGULAR    WHOLE FILE (#344.4)
"RTN","RCDPEAD1",73,0)
 ;                 Field:  AUTO-POST DATE  (344.41,9)
"RTN","RCDPEAD1",74,0)
 ; Scan G index for ERA within date range
"RTN","RCDPEAD1",75,0)
 F  S ADDATE=$O(^RCY(344.4,"G",ADDATE)) Q:'ADDATE  Q:(ADDATE\1)>END  D
"RTN","RCDPEAD1",76,0)
 . S ERAIEN=""
"RTN","RCDPEAD1",77,0)
 . F  D  Q:'ERAIEN
"RTN","RCDPEAD1",78,0)
 . . S ERAIEN=$O(^RCY(344.4,"G",ADDATE,ERAIEN))
"RTN","RCDPEAD1",79,0)
 . . Q:'ERAIEN
"RTN","RCDPEAD1",80,0)
 . . D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)        ; Check for valid Division
"RTN","RCDPEAD1",81,0)
 . . I $P(INPUTS,"^",1)=2,'$D(RCVAUTD(STA)) Q   ; Not a valid Division
"RTN","RCDPEAD1",82,0)
 . . I RCTYPE'="A",'$$ISTYPE^RCDPEU1(344.4,ERAIEN,RCTYPE) Q  ; PRCA*4.5*326 - Not a valid payer type
"RTN","RCDPEAD1",83,0)
 . . ;
"RTN","RCDPEAD1",84,0)
 . . ; Scan index for auto-decreased claim lines within the ERA
"RTN","RCDPEAD1",85,0)
 . . ; and Save claim line detail to ^TMP global
"RTN","RCDPEAD1",86,0)
 . . S RCRZ=""
"RTN","RCDPEAD1",87,0)
 . . F  D  Q:'RCRZ
"RTN","RCDPEAD1",88,0)
 . . . S RCRZ=$O(^RCY(344.4,"G",ADDATE,ERAIEN,RCRZ))
"RTN","RCDPEAD1",89,0)
 . . . Q:'RCRZ
"RTN","RCDPEAD1",90,0)
 . . . S EOBIEN=$$GET1^DIQ(344.41,RCRZ_","_ERAIEN_",",.02,"I")
"RTN","RCDPEAD1",91,0)
 . . . ; Check if this decrease was for a zero line
"RTN","RCDPEAD1",92,0)
 . . . S RCZERO=0 ; PRCA*4.5*326
"RTN","RCDPEAD1",93,0)
 . . . I +$$GET1^DIQ(344.41,RCRZ_","_ERAIEN_",",.03)=0 S RCZERO=1 ; PRCA*4.5*326
"RTN","RCDPEAD1",94,0)
 . . . ; Get amount decreased
"RTN","RCDPEAD1",95,0)
 . . . S AMT=+$$GET1^DIQ(344.41,RCRZ_","_ERAIEN_",",8)
"RTN","RCDPEAD1",96,0)
 . . . ;
"RTN","RCDPEAD1",97,0)
 . . . ; Find all Claim level and Claim line level CARCs
"RTN","RCDPEAD1",98,0)
 . . . S CARCS=$$CARCLMT^RCDPEAD(EOBIEN,RCZERO,1,ADDATE) ; PRCA*4.5*326
"RTN","RCDPEAD1",99,0)
 . . . S CARCS=$$MAX(CARCS,AMT) ; PRCA*4.5*326 - remove any CARCs which were not decreased
"RTN","RCDPEAD1",100,0)
 . . . Q:+CARCS=0                               ; No CARCs found
"RTN","RCDPEAD1",101,0)
 . . . D SAVE^RCDPEADP(ADDATE,ERAIEN,RCRZ,EXCEL,RCSORT,CARCS,.RCTR,STNAM,STNUM)
"RTN","RCDPEAD1",102,0)
 Q
"RTN","RCDPEAD1",103,0)
 ;
"RTN","RCDPEAD1",104,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; Get the station for this ERA
"RTN","RCDPEAD1",105,0)
 ; Input:   ERAIEN  - Internal IEN for file 344.4
"RTN","RCDPEAD1",106,0)
 ; Output:  STA     - Internal Station IEN
"RTN","RCDPEAD1",107,0)
 ;          STNUM   - Station Number
"RTN","RCDPEAD1",108,0)
 ;          STNAM   - Station Name
"RTN","RCDPEAD1",109,0)
 N ERAEOB,ERABILL,STAIEN
"RTN","RCDPEAD1",110,0)
 S (ERAEOB,ERABILL)=""
"RTN","RCDPEAD1",111,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEAD1",112,0)
 S ERAEOB=$$GET1^DIQ(344.41,"1,"_ERAIEN_",",.02,"I")
"RTN","RCDPEAD1",113,0)
 Q:'ERAEOB
"RTN","RCDPEAD1",114,0)
 S ERABILL=$$GET1^DIQ(361.1,ERAEOB,.01,"I")
"RTN","RCDPEAD1",115,0)
 Q:'ERABILL
"RTN","RCDPEAD1",116,0)
 S STAIEN=$$GET1^DIQ(399,ERABILL,.22,"I")
"RTN","RCDPEAD1",117,0)
 Q:'STAIEN
"RTN","RCDPEAD1",118,0)
 S STA=STAIEN
"RTN","RCDPEAD1",119,0)
 S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEAD1",120,0)
 S STNUM=$$GET1^DIQ(40.8,STAIEN,1,"I")
"RTN","RCDPEAD1",121,0)
 Q
"RTN","RCDPEAD1",122,0)
 ;
"RTN","RCDPEAD1",123,0)
HDR(EXCEL,HDRINFO,PAGE,NOLINE) ; Print the report header
"RTN","RCDPEAD1",124,0)
 ; Input:   EXCEL       - 1 if output to Excel, 0 otherwise
"RTN","RCDPEAD1",125,0)
 ;          HDRINFO()   - Array of Header information
"RTN","RCDPEAD1",126,0)
 ;          PAGE        - Current Page Number
"RTN","RCDPEAD1",127,0)
 ;          NOLINE      - 1 to not display Claim line header
"RTN","RCDPEAD1",128,0)
 ;                        Optional, defaults to 0
"RTN","RCDPEAD1",129,0)
 ; Output:  PAGE        - Updated Page Number (if EXCEL=0)
"RTN","RCDPEAD1",130,0)
 N DIV,MSG,SUB,XX,Y,Z0,Z1
"RTN","RCDPEAD1",131,0)
 S:'$D(NOLINE) NOLINE=0
"RTN","RCDPEAD1",132,0)
 I EXCEL D  Q
"RTN","RCDPEAD1",133,0)
 . W !,"STATION^STATION NUMBER^CLAIM #^PATIENT NAME^PAYER^DECREASE AMOUNT^DATE^CARC"
"RTN","RCDPEAD1",134,0)
 . W "^DECREASE AMT^#^REASON"
"RTN","RCDPEAD1",135,0)
 ;
"RTN","RCDPEAD1",136,0)
 S PAGE=PAGE+1
"RTN","RCDPEAD1",137,0)
 W @IOF
"RTN","RCDPEAD1",138,0)
 S MSG(1)="                     EDI Lockbox Auto-Decrease Adjustment Report "
"RTN","RCDPEAD1",139,0)
 S MSG(1)=MSG(1)_"       Page: "_PAGE
"RTN","RCDPEAD1",140,0)
 S MSG(2)="                        Run Date: "_HDRINFO("RUNDATE")
"RTN","RCDPEAD1",141,0)
 S Z0="Divisions: "_HDRINFO("DIVISIONS")
"RTN","RCDPEAD1",142,0)
 S MSG(3)=$S($L(Z0)<75:$J("",75-$L(Z0)\2),1:"")_Z0
"RTN","RCDPEAD1",143,0)
 S XX=" (Date Decrease Applied)"
"RTN","RCDPEAD1",144,0)
 S MSG(4)="               Date Range: "_HDRINFO("START")_" - "_HDRINFO("END")_XX
"RTN","RCDPEAD1",145,0)
 S MSG(5)=$E(HDRINFO("SORT")_$J("",46),1,44)_" "_HDRINFO("TYPE") ;  ; PRCA*4.5*326
"RTN","RCDPEAD1",146,0)
 S MSG(6)=""
"RTN","RCDPEAD1",147,0)
 I 'NOLINE D
"RTN","RCDPEAD1",148,0)
 . S MSG(7)="Claim #       Patient Name          Payer             Decrease Amt  Date    "
"RTN","RCDPEAD1",149,0)
 . S MSG(8)="============================================================================"
"RTN","RCDPEAD1",150,0)
 D EN^DDIOL(.MSG)
"RTN","RCDPEAD1",151,0)
 Q
"RTN","RCDPEAD1",152,0)
 ;
"RTN","RCDPEAD1",153,0)
HINFO(INPUTS,HDRINFO) ;Get header information
"RTN","RCDPEAD1",154,0)
 ; Input:   INPUTS       - See REPORT^RCDPEADP for a complete description
"RTN","RCDPEAD1",155,0)
 ;          HDRINFO      - Return array - passed by reference
"RTN","RCDPEAD1",156,0)
 ; Output:  HDRINFO      - Formatted header array for ListMan
"RTN","RCDPEAD1",157,0)
 N XX
"RTN","RCDPEAD1",158,0)
 S XX=$P(INPUTS,"^",4)                      ; Auto-Post Date range
"RTN","RCDPEAD1",159,0)
 S HDRINFO("START")=$$FMTE^XLFDT($P(XX,"|",1),"2SZ")
"RTN","RCDPEAD1",160,0)
 S HDRINFO("END")=$$FMTE^XLFDT($P(XX,"|",2),"2SZ")
"RTN","RCDPEAD1",161,0)
 S HDRINFO("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"2SZ")
"RTN","RCDPEAD1",162,0)
 s XX=$P(INPUTS,"^",2)                      ; Sort Type
"RTN","RCDPEAD1",163,0)
 S HDRINFO("SORT")="SORTED BY: "_$S(XX="C":"CLAIM",XX="P":"PAYER",1:"PATIENT NAME")
"RTN","RCDPEAD1",164,0)
 S XX=$S($P(INPUTS,"^",3)="L":"LAST TO FIRST",1:"FIRST TO LAST")
"RTN","RCDPEAD1",165,0)
 S HDRINFO("SORT")=HDRINFO("SORT")_" - "_XX
"RTN","RCDPEAD1",166,0)
 ; Format Division filter
"RTN","RCDPEAD1",167,0)
 S XX=$P(INPUTS,"^",1)                      ; XX=1 - All Divisions, 2- selected
"RTN","RCDPEAD1",168,0)
 S HDRINFO("DIVISIONS")=$S(XX=2:$$LINE^RCDPEAD2(.RCVAUTD),1:"ALL")
"RTN","RCDPEAD1",169,0)
 ; PRCA*4.5*326 - Add M/P/T filter to report
"RTN","RCDPEAD1",170,0)
 S XX=$P(INPUTS,"^",7) ; M/P/T/A = Medical/Pharmacy/Tricare/All
"RTN","RCDPEAD1",171,0)
 S HDRINFO("TYPE")="MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEAD1",172,0)
 S HDRINFO("TYPE")=HDRINFO("TYPE")_$S(XX="M":"MEDICAL",XX="P":"PHARMACY",XX="T":"TRICARE",1:"ALL")
"RTN","RCDPEAD1",173,0)
 Q
"RTN","RCDPEAD1",174,0)
 ;
"RTN","RCDPEAD1",175,0)
LMAN(DATA,A1,A2,A3,XX) ; Format and save List Manager line
"RTN","RCDPEAD1",176,0)
 ; Input:   DATA - ERA line adjustment total
"RTN","RCDPEAD1",177,0)
 ;          A1,A2,A3 - ^TMP("RCDPEAP") subscripts
"RTN","RCDPEAD1",178,0)
 ;          XX - List Counter for ^TMP("RCDPE_ADP",$J)
"RTN","RCDPEAD1",179,0)
 N CARCAMT,CCTR,DATA1,Y
"RTN","RCDPEAD1",180,0)
 S Y=$E($P(DATA,U,3),1,12)                     ; Claim #
"RTN","RCDPEAD1",181,0)
 S $E(Y,15)=$E($P(DATA,U,4),1,20)              ; Patient Name
"RTN","RCDPEAD1",182,0)
 S $E(Y,37)=$E($P(DATA,U,5),1,19)              ; Payer Name
"RTN","RCDPEAD1",183,0)
 S $E(Y,55)=$J($P(DATA,U,6),12,2)              ; Auto-Decrease  Amount
"RTN","RCDPEAD1",184,0)
 S $E(Y,69)=$P(DATA,U,7)                       ; Auto-Decrease Date
"RTN","RCDPEAD1",185,0)
 S ^TMP("RCDPE_ADP",$J,XX)=Y,XX=XX+1
"RTN","RCDPEAD1",186,0)
 S ^TMP("RCDPE_ADP",$J,XX)=" ",XX=XX+1
"RTN","RCDPEAD1",187,0)
 S ^TMP("RCDPE_ADP",$J,XX)="    CARC                  Decrease Amt    #    Reason",XX=XX+1
"RTN","RCDPEAD1",188,0)
 S ^TMP("RCDPE_ADP",$J,XX)="    --------------------  -------------  ----  -----------------------------",XX=XX+1
"RTN","RCDPEAD1",189,0)
 S CCTR=0
"RTN","RCDPEAD1",190,0)
 F  S CCTR=$O(^TMP("RCDPEADP",$J,A1,A2,A3,CCTR)) Q:'CCTR  D
"RTN","RCDPEAD1",191,0)
 . ;Display a line for each CARC adjustment on the line
"RTN","RCDPEAD1",192,0)
 . S DATA1=$G(^TMP("RCDPEADP",$J,A1,A2,A3,CCTR)),CARCAMT=$P(DATA1,U,2)
"RTN","RCDPEAD1",193,0)
 . S Y="    "_$E($P(DATA1,U,1),1,20)        ; CARC
"RTN","RCDPEAD1",194,0)
 . S $E(Y,27)=$J($P(DATA1,U,2),12,2)        ; Decrease Amount
"RTN","RCDPEAD1",195,0)
 . S $E(Y,42)=$J($P(DATA1,U,3),4)           ; Quantity
"RTN","RCDPEAD1",196,0)
 . S $E(Y,48)=$E($P(DATA1,U,4),1,32)        ; Reason
"RTN","RCDPEAD1",197,0)
 . S ^TMP("RCDPE_ADP",$J,XX)=Y,XX=XX+1
"RTN","RCDPEAD1",198,0)
 S ^TMP("RCDPE_ADP",$J,XX)=" ",XX=XX+1
"RTN","RCDPEAD1",199,0)
 Q
"RTN","RCDPEAD1",200,0)
 ;
"RTN","RCDPEAD1",201,0)
LMOUT(INPUT,RCVAUTD,IO) ; EP Output report to Listman
"RTN","RCDPEAD1",202,0)
 ; Input:   INPUT       - See REPORT for a complete description
"RTN","RCDPEAD1",203,0)
 ;          RCVAUTD     -  Array of selected Divisions
"RTN","RCDPEAD1",204,0)
 ;                         Only passed if A1=2
"RTN","RCDPEAD1",205,0)
 ;          IO          -  Output device array
"RTN","RCDPEAD1",206,0)
 ; Output:  ^TMP("RCDPE_LAR",$J,CTR)=Line - Array of display lines (no headers)
"RTN","RCDPEAD1",207,0)
 ;                                           for output to Listman
"RTN","RCDPEAD1",208,0)
 ;                                           Only set when A7-1
"RTN","RCDPEAD1",209,0)
 N HDR,HDRINFO,XX,Z0
"RTN","RCDPEAD1",210,0)
 D REPORT^RCDPEADP(INPUT,.RCVAUTD,.IO)                    ; Get the lines to be displayed
"RTN","RCDPEAD1",211,0)
 D HINFO(INPUT,.HDRINFO)
"RTN","RCDPEAD1",212,0)
 S HDR("TITLE")="AUTO-DECREASE REPORT"
"RTN","RCDPEAD1",213,0)
 S HDR(1)="                        RUN DATE: "_HDRINFO("RUNDATE")
"RTN","RCDPEAD1",214,0)
 S Z0="DIVISIONS: "_HDRINFO("DIVISIONS")
"RTN","RCDPEAD1",215,0)
 S HDR(2)=$S($L(Z0)<75:$J("",75-$L(Z0)\2),1:"")_Z0
"RTN","RCDPEAD1",216,0)
 S XX=" (DATE DECREASE APPLIED)"
"RTN","RCDPEAD1",217,0)
 S HDR(3)="               DATE RANGE: "_HDRINFO("START")_" - "_HDRINFO("END")_XX
"RTN","RCDPEAD1",218,0)
 S HDR(4)=$E(HDRINFO("SORT")_$J("",46),1,44)_" "_HDRINFO("TYPE") ; PRCA*4.5*326
"RTN","RCDPEAD1",219,0)
 S HDR(5)=""
"RTN","RCDPEAD1",220,0)
 S HDR(6)=""
"RTN","RCDPEAD1",221,0)
 S HDR(7)="CLAIM #       PATIENT NAME          PAYER             DECREASE AMT  DATE    "
"RTN","RCDPEAD1",222,0)
 D LMRPT^RCDPEARL(.HDR,$NA(^TMP("RCDPE_ADP",$J))) ; Generate ListMan display
"RTN","RCDPEAD1",223,0)
 ;
"RTN","RCDPEAD1",224,0)
 K ^TMP("RCDPEADP",$J),^TMP($J,"RCDPEADP"),^TMP("RCDPE_ADP",$J)
"RTN","RCDPEAD1",225,0)
 Q
"RTN","RCDPEAD1",226,0)
 ;
"RTN","RCDPEAD1",227,0)
TOTALD(EXCEL,HDRINFO,PAGE,STOP,DAY,DTOTAL) ; Totals for a single day
"RTN","RCDPEAD1",228,0)
 ; Input:   EXCEL       - 1 if output to Excel, 0 otherwise
"RTN","RCDPEAD1",229,0)
 ;          HDRINFO()   - Array of header information
"RTN","RCDPEAD1",230,0)
 ;          PAGE        - Current Page Number
"RTN","RCDPEAD1",231,0)
 ;          DAY         - Internal Fileman date to display totals for
"RTN","RCDPEAD1",232,0)
 ;          DTOTAL()    - Array of totals by day
"RTN","RCDPEAD1",233,0)
 ;          IOSL        - Page length
"RTN","RCDPEAD1",234,0)
 ; Output:  PAGE        - Updated Page Number (if a new header is displayed)
"RTN","RCDPEAD1",235,0)
 ;          STOP        - 1 if displaying to screen and user asked to stop
"RTN","RCDPEAD1",236,0)
 N DAMT,DCNT,Y
"RTN","RCDPEAD1",237,0)
 I 'EXCEL,$Y>(IOSL-4) D
"RTN","RCDPEAD1",238,0)
 . D ASK^RCDPEADP(.STOP,0)
"RTN","RCDPEAD1",239,0)
 . Q:STOP
"RTN","RCDPEAD1",240,0)
 . D HDR(EXCEL,.HDRINFO,.PAGE)
"RTN","RCDPEAD1",241,0)
 Q:STOP
"RTN","RCDPEAD1",242,0)
 S DCNT=$P(DTOTAL(DAY),U),DAMT=$P(DTOTAL(DAY),U,2)
"RTN","RCDPEAD1",243,0)
 S Y="**Totals for Date: "_$$FMTE^XLFDT(DAY,"2Z")
"RTN","RCDPEAD1",244,0)
 S $E(Y,35)="    # of Decrease Adjustments: "_DCNT
"RTN","RCDPEAD1",245,0)
 W !!,Y
"RTN","RCDPEAD1",246,0)
 S Y="",$E(Y,28)="Total Amount of Decrease Adjustments: $"_$J(DAMT,3,2)
"RTN","RCDPEAD1",247,0)
 W !,Y
"RTN","RCDPEAD1",248,0)
 Q
"RTN","RCDPEAD1",249,0)
 ;
"RTN","RCDPEAD1",250,0)
 ;TOTALS ; Print totals for EXCEL
"RTN","RCDPEAD1",251,0)
 ;N DAY,DAMT,DCNT
"RTN","RCDPEAD1",252,0)
 ;S DAY=""
"RTN","RCDPEAD1",253,0)
 ;F  S DAY=$O(DTOTAL(DAY)) Q:'DAY  D  Q:STOP
"RTN","RCDPEAD1",254,0)
 ;.;Day totals
"RTN","RCDPEAD1",255,0)
 ;.D TOTALD(DAY)
"RTN","RCDPEAD1",256,0)
 ;;Grand totals
"RTN","RCDPEAD1",257,0)
 ;D TOTALG
"RTN","RCDPEAD1",258,0)
 ;Q
"RTN","RCDPEAD1",259,0)
 ;
"RTN","RCDPEAD1",260,0)
TOTALG(EXCEL,HDRINFO,PAGE,GTOTAL,STOP) ; Overall report total
"RTN","RCDPEAD1",261,0)
 ; Input:   EXCEL       - 1 if output to Excel, 0 otherwise
"RTN","RCDPEAD1",262,0)
 ;          HDRINFO()   - Array of header information
"RTN","RCDPEAD1",263,0)
 ;          PAGE        - Current Page Number
"RTN","RCDPEAD1",264,0)
 ;          GTOTAL()    - Grand Totals for report
"RTN","RCDPEAD1",265,0)
 ;          IOSL        - Page length
"RTN","RCDPEAD1",266,0)
 ; Output:  PAGE        - Updated Page Number (if a new header is displayed)
"RTN","RCDPEAD1",267,0)
 N Y
"RTN","RCDPEAD1",268,0)
 I 'EXCEL,$Y>(IOSL-6) D
"RTN","RCDPEAD1",269,0)
 . D ASK^RCDPEADP(.STOP,0)
"RTN","RCDPEAD1",270,0)
 . Q:STOP
"RTN","RCDPEAD1",271,0)
 . D HDR(EXCEL,.HDRINFO,.PAGE)
"RTN","RCDPEAD1",272,0)
 Q:STOP
"RTN","RCDPEAD1",273,0)
 W !!,"**** Totals for Date Range:           # of Decrease Adjustments: "_+$P(GTOTAL,U,1)
"RTN","RCDPEAD1",274,0)
 S Y="",$E(Y,28)="Total Amount of Decrease Adjustments: $"_$J((+$P(GTOTAL,U,2)),3,2)
"RTN","RCDPEAD1",275,0)
 W !,Y,!
"RTN","RCDPEAD1",276,0)
 Q
"RTN","RCDPEAD1",277,0)
 ;
"RTN","RCDPEAD1",278,0)
 ; BEGIN - PRCA*4.5*326
"RTN","RCDPEAD1",279,0)
MAX(RCINP,RCMAX) ; Input CARCs and remove any over what was actually auto-decreased
"RTN","RCDPEAD1",280,0)
 ; INPUT  - RCINP - list of all CARCs on EEOB
"RTN","RCDPEAD1",281,0)
 ;          RCMAX - total amount auto-decreased on claim
"RTN","RCDPEAD1",282,0)
 ; OUTPUT - RCOUT - list of CARCs actually auto-decreased
"RTN","RCDPEAD1",283,0)
 ;                
"RTN","RCDPEAD1",284,0)
 N J,RCIARR,RCITEM,RCJ,RCK,RCNT,RCOUT,RCTOT
"RTN","RCDPEAD1",285,0)
 ;
"RTN","RCDPEAD1",286,0)
 S RCOUT=""
"RTN","RCDPEAD1",287,0)
 ; Order CARCs for Auto-Decrease in largest to smallest amount order
"RTN","RCDPEAD1",288,0)
 F J=1:1 S RCITEM=$P(RCINP,U,J) Q:RCITEM=""  S RCIARR(-($P(RCITEM,";",1)),J)=RCITEM
"RTN","RCDPEAD1",289,0)
 Q:$D(RCIARR)<10 RCOUT ; Quit if CARC adjustment array doesn't have any elements to process
"RTN","RCDPEAD1",290,0)
 ;
"RTN","RCDPEAD1",291,0)
 ; Get top limit for auto-decrease
"RTN","RCDPEAD1",292,0)
 ;S RCMAX=+$$GET1^DIQ(344.61,"1,",.05)
"RTN","RCDPEAD1",293,0)
 ; Only include CARCs if the decrease total is less than or equal to claim maximum
"RTN","RCDPEAD1",294,0)
 S RCJ="",RCTOT=0,RCNT=0
"RTN","RCDPEAD1",295,0)
 F  S RCJ=$O(RCIARR(RCJ)) Q:RCJ=""  D
"RTN","RCDPEAD1",296,0)
 .S RCK=""
"RTN","RCDPEAD1",297,0)
 .F  S RCK=$O(RCIARR(RCJ,RCK)) Q:RCK=""  D
"RTN","RCDPEAD1",298,0)
 ..S RCTOT=RCTOT+$P(RCIARR(RCJ,RCK),";")
"RTN","RCDPEAD1",299,0)
 ..Q:RCTOT>RCMAX
"RTN","RCDPEAD1",300,0)
 ..S RCNT=RCNT+1
"RTN","RCDPEAD1",301,0)
 ..S $P(RCOUT,U,RCNT)=RCIARR(RCJ,RCK)
"RTN","RCDPEAD1",302,0)
 Q RCOUT
"RTN","RCDPEAD1",303,0)
 ;END - PRCA*4.5*326
"RTN","RCDPEAD2")
0^58^B2447533
"RTN","RCDPEAD2",1,0)
RCDPEAD2 ;AITC/CJE - AUTO-DECREASE REPORT ;Nov 23, 2014@12:48:50
"RTN","RCDPEAD2",2,0)
 ;;4.5;Accounts Receivable;**326**;Mar 20, 1995;Build 26
"RTN","RCDPEAD2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAD2",4,0)
 ;
"RTN","RCDPEAD2",5,0)
 Q
"RTN","RCDPEAD2",6,0)
 ;
"RTN","RCDPEAD2",7,0)
EXCEL(DATA,A1,A2,A3) ; Format EXCEL line
"RTN","RCDPEAD2",8,0)
 ; Input:   DATA - ERA line adjustment total
"RTN","RCDPEAD2",9,0)
 ;          A1,A2,A3 - ^TMP("RCDPEAP") subscripts
"RTN","RCDPEAD2",10,0)
 N CARCAMT,CCTR,DATA1
"RTN","RCDPEAD2",11,0)
 S CCTR=0
"RTN","RCDPEAD2",12,0)
 F  S CCTR=$O(^TMP("RCDPEADP",$J,A1,A2,A3,CCTR)) Q:'CCTR  D
"RTN","RCDPEAD2",13,0)
 . ;Display an EXCEL line for each CARC adjustment on the line
"RTN","RCDPEAD2",14,0)
 . S DATA1=$G(^TMP("RCDPEADP",$J,A1,A2,A3,CCTR)),CARCAMT=$P(DATA1,U,2)
"RTN","RCDPEAD2",15,0)
 . W !,$P(DATA,U,1,5)_U_CARCAMT_U_$P(DATA,U,7)_U_DATA1
"RTN","RCDPEAD2",16,0)
 Q
"RTN","RCDPEAD2",17,0)
 ;
"RTN","RCDPEAD2",18,0)
LINE(DIV) ; List selected stations
"RTN","RCDPEAD2",19,0)
 ; Input:   DIV()       - Array of selected divisions
"RTN","RCDPEAD2",20,0)
 ; Returns: Comma delimited list of selected divisions
"RTN","RCDPEAD2",21,0)
 N LINE,P,SUB
"RTN","RCDPEAD2",22,0)
 S LINE="",SUB="",P=0
"RTN","RCDPEAD2",23,0)
 F  D  Q:'SUB
"RTN","RCDPEAD2",24,0)
 . S SUB=$O(DIV(SUB))
"RTN","RCDPEAD2",25,0)
 . Q:'SUB
"RTN","RCDPEAD2",26,0)
 . S P=P+1,$P(LINE,", ",P)=$G(DIV(SUB))
"RTN","RCDPEAD2",27,0)
 Q LINE
"RTN","RCDPEAD2",28,0)
 ;
"RTN","RCDPEAD2",29,0)
CLAIM(EOBIEN) ; Gets the claim number from AR
"RTN","RCDPEAD2",30,0)
 ; Input:   EOBIEN      - Internal IEN for file 361.1
"RTN","RCDPEAD2",31,0)
 ; Returns: External Claim Number
"RTN","RCDPEAD2",32,0)
 N CLAIM,CLAIMIEN
"RTN","RCDPEAD2",33,0)
 Q:'$G(EOBIEN)>0 "(no EOB IEN)"
"RTN","RCDPEAD2",34,0)
 S CLAIMIEN=$$GET1^DIQ(361.1,EOBIEN,.01,"I")    ; IEN for file 399
"RTN","RCDPEAD2",35,0)
 Q:'CLAIMIEN "(no Claim IEN)"
"RTN","RCDPEAD2",36,0)
 S CLAIM=$$GET1^DIQ(430,CLAIMIEN,.01,"I")
"RTN","RCDPEAD2",37,0)
 Q:CLAIM="" "(Claim not found)"
"RTN","RCDPEAD2",38,0)
 Q CLAIM                                        ; Return claim (nnn-Knnnnnn)
"RTN","RCDPEADP")
0^57^B143486020
"RTN","RCDPEADP",1,0)
RCDPEADP ;OIFO-BAYPINES/PJH - AUTO-DECREASE REPORT ;Nov 23, 2014@12:48:50
"RTN","RCDPEADP",2,0)
 ;;4.5;Accounts Receivable;**298,318,326**;Mar 20, 1995;Build 26
"RTN","RCDPEADP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEADP",4,0)
 ; Read ^DGCR(399)      via Private IA 3820
"RTN","RCDPEADP",5,0)
 ; Read ^DG(40.8)       via Controlled IA 417
"RTN","RCDPEADP",6,0)
 ; Read ^IBM(361.1)     via Private IA 4051
"RTN","RCDPEADP",7,0)
 ; Use DIVISION^VAUTOMA via Controlled IA 664
"RTN","RCDPEADP",8,0)
 ;
"RTN","RCDPEADP",9,0)
RPT ; entry point for Auto-Decrease Adjustment report [RCDPE AUTO-DECREASE REPORT]
"RTN","RCDPEADP",10,0)
 N INPUT,RCVAUTD
"RTN","RCDPEADP",11,0)
 S INPUT=$$STADIV(.RCVAUTD)                   ; Division filter
"RTN","RCDPEADP",12,0)
 Q:'INPUT                                     ; '^' or timeout
"RTN","RCDPEADP",13,0)
 S $P(INPUT,"^",2)=$$ASKSORT()                ; Select Sort Criteria
"RTN","RCDPEADP",14,0)
 Q:$P(INPUT,"^",2)="0"                        ; '^' or timeout
"RTN","RCDPEADP",15,0)
 S $P(INPUT,"^",3)=$$SORTORD($P(INPUT,"^",2)) ; Select Sort Order
"RTN","RCDPEADP",16,0)
 Q:$P(INPUT,"^",3)="0"                        ; '^' or timeout
"RTN","RCDPEADP",17,0)
 S $P(INPUT,"^",4)=$$DTRNG()                  ; Select Date Range for Report
"RTN","RCDPEADP",18,0)
 Q:'$P(INPUT,"^",4)                           ; '^' or timeout
"RTN","RCDPEADP",19,0)
 S $P(INPUT,"^",4)=$P($P(INPUT,"^",4),"|",2,3)
"RTN","RCDPEADP",20,0)
 ; PRCA*4.5*326 Filter by payer type
"RTN","RCDPEADP",21,0)
 S $P(INPUT,"^",7)=$$RTYPE^RCDPEU1() ; PRCA*4.5*326 Ask for payer types to include
"RTN","RCDPEADP",22,0)
 I $P(INPUT,"^",7)<0 Q
"RTN","RCDPEADP",23,0)
 S $P(INPUT,"^",6)=$$ASKLM^RCDPEARL           ; Ask to Display in Listman Template
"RTN","RCDPEADP",24,0)
 Q:$P(INPUT,"^",6)<0                          ; '^' or timeout
"RTN","RCDPEADP",25,0)
 I $P(INPUT,"^",6)=1 D  Q                     ; Compile data and call listman to display
"RTN","RCDPEADP",26,0)
 . D LMOUT^RCDPEAD1(INPUT,.RCVAUTD,.IO)
"RTN","RCDPEADP",27,0)
 S $P(INPUT,"^",5)=$$DISPTY()                 ; Select Display Type
"RTN","RCDPEADP",28,0)
 Q:$P(INPUT,"^",5)=-1                         ; '^' or timeout
"RTN","RCDPEADP",29,0)
 D:$P(INPUT,"^",5)=1 INFO^RCDPEM6             ; Display capture information for Excel
"RTN","RCDPEADP",30,0)
 Q:'$$DEVICE($P(INPUT,"^",5),.IO)             ; Ask output device
"RTN","RCDPEADP",31,0)
 ;
"RTN","RCDPEADP",32,0)
 ; Compile and Display Report data (queued) - not allowed for EXCEL
"RTN","RCDPEADP",33,0)
 I $P(INPUT,"^",5)'=1,$D(IO("Q")) D  Q
"RTN","RCDPEADP",34,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEADP",35,0)
 .S ZTRTN="REPORT^RCDPEADP(INPUT,.RCVAUTD,.IO)"
"RTN","RCDPEADP",36,0)
 .S ZTDESC="EDI LOCKBOX AUTO-DECREASE REPORT"
"RTN","RCDPEADP",37,0)
 .S ZTSAVE("RC*")="",ZTSAVE("INPUT")="",ZTSAVE("IO*")=""
"RTN","RCDPEADP",38,0)
 .D ^%ZTLOAD
"RTN","RCDPEADP",39,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPEADP",40,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPEADP",41,0)
 .K ZTSK,IO("Q")
"RTN","RCDPEADP",42,0)
 .D HOME^%ZIS
"RTN","RCDPEADP",43,0)
 ; Compile and Display Report data (non-queued)
"RTN","RCDPEADP",44,0)
 D REPORT(INPUT,.RCVAUTD,.IO)                     ; Compile and Display Report data
"RTN","RCDPEADP",45,0)
 Q
"RTN","RCDPEADP",46,0)
 ;
"RTN","RCDPEADP",47,0)
STADIV(RCVAUTD) ; Division/Station Filter
"RTN","RCDPEADP",48,0)
 ; Input:   None
"RTN","RCDPEADP",49,0)
 ; Output:  RCVAUTD()   - Array of selected Divisions/Stations if 2 is returned
"RTN","RCDPEADP",50,0)
 ; Returns: 1           - All Divisions/Stations selected
"RTN","RCDPEADP",51,0)
 ;          2           - Specified Divisions/Stations selected
"RTN","RCDPEADP",52,0)
 ;          0           - "^" or timeout
"RTN","RCDPEADP",53,0)
 N DIR,DIROUT,DTOUT,DUOUT,VAUTD,Y
"RTN","RCDPEADP",54,0)
 ;
"RTN","RCDPEADP",55,0)
 ; Division selection - IA 664
"RTN","RCDPEADP",56,0)
 ; RETURNS Y=-1 (quit), VAUTD=1 (for all),VAUTD=0 (selected divisions in VAUTD)
"RTN","RCDPEADP",57,0)
 D DIVISION^VAUTOMA
"RTN","RCDPEADP",58,0)
 Q:Y<0 0
"RTN","RCDPEADP",59,0)
 Q:VAUTD=1 1                                ; All Divisions selected
"RTN","RCDPEADP",60,0)
 M RCVAUTD=VAUTD                            ; Save selected divisions
"RTN","RCDPEADP",61,0)
 Q 2
"RTN","RCDPEADP",62,0)
 ;
"RTN","RCDPEADP",63,0)
ASKSORT() ; Select the sort criteria
"RTN","RCDPEADP",64,0)
 ; Input:   None
"RTN","RCDPEADP",65,0)
 ; Returns: C       - Sort by Claim
"RTN","RCDPEADP",66,0)
 ;          P       - Sort by Payer 
"RTN","RCDPEADP",67,0)
 ;          N       - Sort by Patient Name
"RTN","RCDPEADP",68,0)
 ;          0       - User entered '^' or timed out
"RTN","RCDPEADP",69,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,XX
"RTN","RCDPEADP",70,0)
 S DIR(0)="SA^C:CLAIM;P:PAYER;N:PATIENT NAME;"
"RTN","RCDPEADP",71,0)
 S DIR("A")="Sort by (C)LAIM #, (P)AYER or PATIENT (N)AME?: "
"RTN","RCDPEADP",72,0)
 S DIR("?",1)="Enter 'C' to sort by Claim Number, 'P' to sort by Payer or 'N' to sort"
"RTN","RCDPEADP",73,0)
 S DIR("?")="by Patient Name."
"RTN","RCDPEADP",74,0)
 S DIR("B")="CLAIM"
"RTN","RCDPEADP",75,0)
 D ^DIR
"RTN","RCDPEADP",76,0)
 Q:$D(DTOUT)!$D(DUOUT) 0
"RTN","RCDPEADP",77,0)
 Q Y
"RTN","RCDPEADP",78,0)
 ;
"RTN","RCDPEADP",79,0)
SORTORD(SORT) ; Select the sort order
"RTN","RCDPEADP",80,0)
 ; Input:   SORT    - 'C' - Sort by Claim Number
"RTN","RCDPEADP",81,0)
 ;                    'P' - Sort by Payer
"RTN","RCDPEADP",82,0)
 ;                    'N' - Sort by Patient Name
"RTN","RCDPEADP",83,0)
 ; Returns: F       - First to Last
"RTN","RCDPEADP",84,0)
 ;          L       - Last to First 
"RTN","RCDPEADP",85,0)
 ;          0       - User entered '^' or timed out
"RTN","RCDPEADP",86,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,XX,YY
"RTN","RCDPEADP",87,0)
 S XX=" (F)IRST TO LAST or (L)AST TO FIRST?: "
"RTN","RCDPEADP",88,0)
 S YY=$S(SORT="C":"CLAIM",SORT="P":"PAYER",1:"PATIENT NAME")
"RTN","RCDPEADP",89,0)
 S DIR("A")="Sort "_YY_XX
"RTN","RCDPEADP",90,0)
 S DIR(0)="SA^F:FIRST TO LAST;L:LAST TO FIRST"
"RTN","RCDPEADP",91,0)
 S DIR("B")="FIRST TO LAST"
"RTN","RCDPEADP",92,0)
 D ^DIR
"RTN","RCDPEADP",93,0)
 Q:$D(DTOUT)!$D(DUOUT) 0
"RTN","RCDPEADP",94,0)
 Q Y
"RTN","RCDPEADP",95,0)
 ;
"RTN","RCDPEADP",96,0)
DTRNG() ; Get the date range for the report
"RTN","RCDPEADP",97,0)
 ; Input:   None
"RTN","RCDPEADP",98,0)
 ; Returns: A1|A2|A3    - Where:
"RTN","RCDPEADP",99,0)
 ;                          A1 - 0 - User up-arrowed or timed out, 1 otherwise
"RTN","RCDPEADP",100,0)
 ;                          A2 - Auto-Post Start Date
"RTN","RCDPEADP",101,0)
 ;                          A3 - Auto-Post End Date
"RTN","RCDPEADP",102,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,RCEND,RCSTART,RNGFLG,X,Y
"RTN","RCDPEADP",103,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEADP",104,0)
 Q:RCSTART=-1 0
"RTN","RCDPEADP",105,0)
 Q:RCSTART "1|"_RCSTART_"|"_RCEND
"RTN","RCDPEADP",106,0)
 Q:'RCSTART "0||"
"RTN","RCDPEADP",107,0)
 Q 0
"RTN","RCDPEADP",108,0)
 ;
"RTN","RCDPEADP",109,0)
DATES(BDATE,EDATE) ; Get a date range.
"RTN","RCDPEADP",110,0)
 ; Input:   None
"RTN","RCDPEADP",111,0)
 ; Output:  BDATE   - Internal Auto-Post Start Date
"RTN","RCDPEADP",112,0)
 ;          EDATE   - Internal Auto-Post End Date
"RTN","RCDPEADP",113,0)
D1 ; looping tag
"RTN","RCDPEADP",114,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEADP",115,0)
 S DIR("?")="Enter the earliest Auto-Posting date to include on the report."
"RTN","RCDPEADP",116,0)
 S DIR(0)="DAO^:"_DT_":APE"
"RTN","RCDPEADP",117,0)
 S DIR("A")="Start Date: "
"RTN","RCDPEADP",118,0)
 D ^DIR
"RTN","RCDPEADP",119,0)
 K DIR
"RTN","RCDPEADP",120,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEADP",121,0)
 S BDATE=Y
"RTN","RCDPEADP",122,0)
 S DIR("?")="Enter the latest Auto-Posting date to include on the report."
"RTN","RCDPEADP",123,0)
 S DIR("B")=Y(0)
"RTN","RCDPEADP",124,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE"
"RTN","RCDPEADP",125,0)
 S DIR("A")="End Date: "
"RTN","RCDPEADP",126,0)
 D ^DIR
"RTN","RCDPEADP",127,0)
 K DIR
"RTN","RCDPEADP",128,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEADP",129,0)
 S EDATE=Y
"RTN","RCDPEADP",130,0)
 Q
"RTN","RCDPEADP",131,0)
 ;
"RTN","RCDPEADP",132,0)
DISPTY() ; Get display/output type
"RTN","RCDPEADP",133,0)
 ; Input:   None
"RTN","RCDPEADP",134,0)
 ; Returns: 1       - Output to Excel
"RTN","RCDPEADP",135,0)
 ;          0       - Output to paper 
"RTN","RCDPEADP",136,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,Y
"RTN","RCDPEADP",137,0)
 S DIR(0)="Y"
"RTN","RCDPEADP",138,0)
 S DIR("A")="Export the report to Microsoft Excel"
"RTN","RCDPEADP",139,0)
 S DIR("B")="NO"
"RTN","RCDPEADP",140,0)
 D ^DIR
"RTN","RCDPEADP",141,0)
 I $G(DUOUT) Q -1
"RTN","RCDPEADP",142,0)
 Q Y
"RTN","RCDPEADP",143,0)
 ;
"RTN","RCDPEADP",144,0)
DEVICE(EXCEL,IO) ; Select the output device
"RTN","RCDPEADP",145,0)
 ; Input:   EXCEL   - 1 - Output to Excel, 0 otherwise
"RTN","RCDPEADP",146,0)
 ; Output:  
"RTN","RCDPEADP",147,0)
 ;          IO      - Array of selected output info
"RTN","RCDPEADP",148,0)
 ; Returns: 0       - No device selected, 1 Otherwise
"RTN","RCDPEADP",149,0)
 N POP,%ZIS
"RTN","RCDPEADP",150,0)
 S %ZIS="QM"
"RTN","RCDPEADP",151,0)
 D ^%ZIS
"RTN","RCDPEADP",152,0)
 Q:POP 0
"RTN","RCDPEADP",153,0)
 Q 1
"RTN","RCDPEADP",154,0)
 ;
"RTN","RCDPEADP",155,0)
REPORT(INPUTS,RCVAUTD,IO) ; EP Compile and print report
"RTN","RCDPEADP",156,0)
 ; Input:   INPUTS  - A1^A2^A3^...^An Where:
"RTN","RCDPEADP",157,0)
 ;                       A1 -  1  - All divisions selected
"RTN","RCDPEADP",158,0)
 ;                             2  - Selected divisions
"RTN","RCDPEADP",159,0)
 ;                       A2 -  C  - Sort by Claim
"RTN","RCDPEADP",160,0)
 ;                             P  - Sort by Payer 
"RTN","RCDPEADP",161,0)
 ;                             N  - Sort by Patient Name
"RTN","RCDPEADP",162,0)
 ;                       A3 -  F  - First to Last Sort Order
"RTN","RCDPEADP",163,0)
 ;                             L  - Last to First Sort Order
"RTN","RCDPEADP",164,0)
 ;                       A4 -  B1|B2
"RTN","RCDPEADP",165,0)
 ;                             B1 - Auto-Post Start Date
"RTN","RCDPEADP",166,0)
 ;                             B2 - Auto-Post End Date
"RTN","RCDPEADP",167,0)
 ;                       A5 -  1 - Output to Excel
"RTN","RCDPEADP",168,0)
 ;                             0 - Otherwise
"RTN","RCDPEADP",169,0)
 ;                       A6 -  1 - Output to List Manager
"RTN","RCDPEADP",170,0)
 ;                             0 - Otherwise
"RTN","RCDPEADP",171,0)
 ;                       A7 -  M/P/T/A = Medical/Pharmacy/Tricare/All
"RTN","RCDPEADP",172,0)
 ;
"RTN","RCDPEADP",173,0)
 ;          RCVAUTD         -  Array of selected Divisions
"RTN","RCDPEADP",174,0)
 ;                             Only passed if A1=2
"RTN","RCDPEADP",175,0)
 ;          IO      - Output Device
"RTN","RCDPEADP",176,0)
 ; Output:  
"RTN","RCDPEADP",177,0)
 N DTOTAL,GTOTAL,XX,ZTREQ
"RTN","RCDPEADP",178,0)
 U IO
"RTN","RCDPEADP",179,0)
 K ^TMP("RCDPEADP",$J),^TMP("RCDPE_ADP",$J)
"RTN","RCDPEADP",180,0)
 D COMPILE^RCDPEAD1(INPUTS,.RCVAUTD,.DTOTAL,.GTOTAL) ; Scan ERA file for entries in date range
"RTN","RCDPEADP",181,0)
 D DISP(INPUTS,.DTOTAL,.GTOTAL)              ; Display Report
"RTN","RCDPEADP",182,0)
 K ^TMP("RCDPEADP",$J),^TMP("RCSELPAY",$J)  ; Clear TMP global
"RTN","RCDPEADP",183,0)
 D ^%ZISC                                   ; Close device
"RTN","RCDPEADP",184,0)
 Q
"RTN","RCDPEADP",185,0)
 ;
"RTN","RCDPEADP",186,0)
SAVE(ADDATE,ERAIEN,RCRZ,EXCEL,RCSORT,CARCS,RCTR,STNAM,STNUM) ; Put the data into the ^TMP global
"RTN","RCDPEADP",187,0)
 ; Input:   ADDATE              - Current Internal Date being processed
"RTN","RCDPEADP",188,0)
 ;          ERAIEN              - Internal IEN of the ERA record
"RTN","RCDPEADP",189,0)
 ;          RCRZ                - ERA line number
"RTN","RCDPEADP",190,0)
 ;          EXCEL               - 1 output to Excel, 0 otherwise
"RTN","RCDPEADP",191,0)
 ;          RCSORT              - C  - Sort by Claim
"RTN","RCDPEADP",192,0)
 ;                                P  - Sort by Payer 
"RTN","RCDPEADP",193,0)
 ;                                N  - Sort by Patient Name
"RTN","RCDPEADP",194,0)
 ;          CARCS               - ^ delimited string of CARC information found
"RTN","RCDPEADP",195,0)
 ;                                on the EOB record pointed to by the ERA detail record
"RTN","RCDPEADP",196,0)
 ;                                A1;A2;A3;A4^B1;B2;B3;B4^...^N1;N2;N3;N4 Where:
"RTN","RCDPEADP",197,0)
 ;                                  A1 - Auto-Decrease amount of the 1st CARC code
"RTN","RCDPEADP",198,0)
 ;                                  A2 - 1st CARC code
"RTN","RCDPEADP",199,0)
 ;                                  A3 - Quantity of the first CARC code
"RTN","RCDPEADP",200,0)
 ;                                  A4 - Truncated Reason text of the 1st CARC 
"RTN","RCDPEADP",201,0)
 ;          DTOTAL()            - Current Array of totals by Auto-Post Date
"RTN","RCDPEADP",202,0)
 ;          GTOTAL              - Current Grand totals
"RTN","RCDPEADP",203,0)
 ;          RCTR                - Current Record Counter
"RTN","RCDPEADP",204,0)
 ;          STNAM               - Station name
"RTN","RCDPEADP",205,0)
 ;          STNUM               - Station number
"RTN","RCDPEADP",206,0)
 ;          ^TMP("RCDPEADP",$J) - Current report data
"RTN","RCDPEADP",207,0)
 ;                                See DISP for a full description
"RTN","RCDPEADP",208,0)
 ; Output:  DTOTAL()            - Updated Array of totals by Auto-Post Date
"RTN","RCDPEADP",209,0)
 ;          GTOTAL              - Updated Grand totals
"RTN","RCDPEADP",210,0)
 ;          RCTR                - Updated Record Counter
"RTN","RCDPEADP",211,0)
 ;          ^TMP("RCDPEADP",$J,A1,A2,A3) - B1^B2^B3^...^Bn Where:
"RTN","RCDPEADP",212,0)
 ;                          - A1 - "EXCEL" if exporting to excel
"RTN","RCDPEADP",213,0)
 ;                                  Internal fileman date if not exporting to excel
"RTN","RCDPEADP",214,0)
 ;                            A2 - Excel Line Counter if exporting to excel
"RTN","RCDPEADP",215,0)
 ;                                 External Claim number is sorting by claim
"RTN","RCDPEADP",216,0)
 ;                                 External Payer Name if sorting by Payer
"RTN","RCDPEADP",217,0)
 ;                                 External Patient Name if sorting by Patient Name
"RTN","RCDPEADP",218,0)
 ;                            A3 - Record Counter
"RTN","RCDPEADP",219,0)
 ;                            B1 - External Station Name
"RTN","RCDPEADP",220,0)
 ;                            B2 - External Station Number
"RTN","RCDPEADP",221,0)
 ;                            B3 - External Claim Number
"RTN","RCDPEADP",222,0)
 ;                            B4 - External Patient Name
"RTN","RCDPEADP",223,0)
 ;                            B5 - External Payer Name
"RTN","RCDPEADP",224,0)
 ;                            B6 - Auto-Decrease Amount
"RTN","RCDPEADP",225,0)
 ;                            B7 - Auto-Decrease Date
"RTN","RCDPEADP",226,0)
 ;          ^TMP("RCDPEADP",$J,A1,A2,A3,A4) - C1^C2^C3^C4 Where:
"RTN","RCDPEADP",227,0)
 ;                          - A1 - "EXCEL" if exporting to excel
"RTN","RCDPEADP",228,0)
 ;                                  Internal fileman date if not exporting to excel
"RTN","RCDPEADP",229,0)
 ;                            A2 - Excel Line Counter if exporting to excel
"RTN","RCDPEADP",230,0)
 ;                                 External Claim number is sorting by claim
"RTN","RCDPEADP",231,0)
 ;                                 External Payer Name if sorting by Payer
"RTN","RCDPEADP",232,0)
 ;                                 External Patient Name if sorting by Patient Name
"RTN","RCDPEADP",233,0)
 ;                            A3 - Record Counter
"RTN","RCDPEADP",234,0)
 ;                            A4 - CARC Counter
"RTN","RCDPEADP",235,0)
 ;                            C1 - CARC Code (file 361.111, field .01)
"RTN","RCDPEADP",236,0)
 ;                            C2 - Decrease Amount (file 361.111, field .02)
"RTN","RCDPEADP",237,0)
 ;                            C3 - Quantity (file 361.111, field .03)
"RTN","RCDPEADP",238,0)
 ;                            C4 - Reason (file 361.111, field .04)
"RTN","RCDPEADP",239,0)
 N A1,A2,AMOUNT,CARC,CLAIM,DATE,EOBIEN,PAYNAM,PTNAM,XX,Y
"RTN","RCDPEADP",240,0)
 S PAYNAM=$$GET1^DIQ(344.4,ERAIEN,.06,"E")              ; Payer name from ERA record
"RTN","RCDPEADP",241,0)
 S DATE=$$FMTE^XLFDT(ADDATE,"2SZ")                      ; Format Auto-Decrease date
"RTN","RCDPEADP",242,0)
 S AMOUNT=$$GET1^DIQ(344.41,RCRZ_","_ERAIEN_",",8,"I")  ; Auto-Decrease Amount
"RTN","RCDPEADP",243,0)
 Q:+AMOUNT=0
"RTN","RCDPEADP",244,0)
 S EOBIEN=$$GET1^DIQ(344.41,RCRZ_","_ERAIEN_",",.02,"I") ; IEN to file 361.1 - ERA Detail
"RTN","RCDPEADP",245,0)
 S CLAIM=$$CLAIM^RCDPEAD2(EOBIEN)                        ; Claim # 
"RTN","RCDPEADP",246,0)
 S PTNAM=$$PNM4^RCDPEWL1(ERAIEN,RCRZ)                    ; Patient Name from Claim file #399
"RTN","RCDPEADP",247,0)
 S:PTNAM="" PTNAM="(unknown)"
"RTN","RCDPEADP",248,0)
 S RCTR=RCTR+1
"RTN","RCDPEADP",249,0)
 ;
"RTN","RCDPEADP",250,0)
 ; If EXCEL sorting is done in EXCEL
"RTN","RCDPEADP",251,0)
 I EXCEL=1 D
"RTN","RCDPEADP",252,0)
 . S A1="EXCEL",A2=$G(^TMP("RCDPEADP",$J,A1))+1
"RTN","RCDPEADP",253,0)
 . S ^TMP("RCDPEADP",$J,A1)=A2
"RTN","RCDPEADP",254,0)
 ;
"RTN","RCDPEADP",255,0)
 ; Otherwise sort by DATE and selected criteria
"RTN","RCDPEADP",256,0)
 I 'EXCEL D
"RTN","RCDPEADP",257,0)
 . S A1=ADDATE
"RTN","RCDPEADP",258,0)
 . S A2=$S($E(RCSORT)="C":CLAIM,$E(RCSORT)="P":PAYNAM,1:PTNAM)
"RTN","RCDPEADP",259,0)
 ; 
"RTN","RCDPEADP",260,0)
 ; Update ^TMP global if claim level adjustments  are found for this claim
"RTN","RCDPEADP",261,0)
 S XX=STNAM_U_STNUM_U_CLAIM_U_PTNAM_U_PAYNAM_U_AMOUNT_U_DATE
"RTN","RCDPEADP",262,0)
 S ^TMP("RCDPEADP",$J,A1,A2,RCTR)=XX                    ; Claim Information
"RTN","RCDPEADP",263,0)
 D CARCS^RCDPEAD1(A1,A2,RCTR,CARCS)                              ; CARC information
"RTN","RCDPEADP",264,0)
 ;
"RTN","RCDPEADP",265,0)
 ; Update totals for individual date
"RTN","RCDPEADP",266,0)
 S $P(DTOTAL(ADDATE),U)=$P($G(DTOTAL(ADDATE)),U)+1
"RTN","RCDPEADP",267,0)
 S $P(DTOTAL(ADDATE),U,2)=$P($G(DTOTAL(ADDATE)),U,2)+AMOUNT
"RTN","RCDPEADP",268,0)
 ;
"RTN","RCDPEADP",269,0)
 ; Update totals for date range
"RTN","RCDPEADP",270,0)
 S $P(GTOTAL,U)=$P($G(GTOTAL),U)+1,$P(GTOTAL,U,2)=$P($G(GTOTAL),U,2)+AMOUNT
"RTN","RCDPEADP",271,0)
 Q
"RTN","RCDPEADP",272,0)
 ;
"RTN","RCDPEADP",273,0)
DISP(INPUTS,DTOTAL,GTOTAL) ; Format the display for screen/printer or MS Excel
"RTN","RCDPEADP",274,0)
 ; Input:   INPUTS  - A1^A2^A3^...^An Where:
"RTN","RCDPEADP",275,0)
 ;                       A1 -  1  - All divisions selected
"RTN","RCDPEADP",276,0)
 ;                             2  - Selected divisions
"RTN","RCDPEADP",277,0)
 ;                       A2 -  C  - Sort by Claim
"RTN","RCDPEADP",278,0)
 ;                             P  - Sort by Payer 
"RTN","RCDPEADP",279,0)
 ;                             N  - Sort by Patient Name
"RTN","RCDPEADP",280,0)
 ;                       A3 -  F  - First to Last Sort Order
"RTN","RCDPEADP",281,0)
 ;                             L  - Last to First Sort Order
"RTN","RCDPEADP",282,0)
 ;                       A4 -  B1|B2
"RTN","RCDPEADP",283,0)
 ;                             B1 - Auto-Post Start Date
"RTN","RCDPEADP",284,0)
 ;                             B2 - Auto-Post End Date
"RTN","RCDPEADP",285,0)
 ;                       A5 -  1 - Output to Excel
"RTN","RCDPEADP",286,0)
 ;                             0 - Otherwise
"RTN","RCDPEADP",287,0)
 ;                       A6 -  1 - Output to List Manager
"RTN","RCDPEADP",288,0)
 ;                             0 - Otherwise
"RTN","RCDPEADP",289,0)
 ;                       A7 -  M/P/T/A = Medical/Pharmacy/Tricare/All
"RTN","RCDPEADP",290,0)
 ;
"RTN","RCDPEADP",291,0)
 ;          IO      - Output Device
"RTN","RCDPEADP",292,0)
 ;          DTOTAL()- Array of totals by Internal Auto-Post date
"RTN","RCDPEADP",293,0)
 ;          GTOTAL  - Grand Totals for the selected date period
"RTN","RCDPEADP",294,0)
 ;          ^TMP("RCDPEADP",$J) - See SAVE for a complete description
"RTN","RCDPEADP",295,0)
 N A1,A2,A3,DATA,EXCEL,HDRINFO,LMAN,LCNT,MODE,PAGE,RCRDNUM,STOP,Y
"RTN","RCDPEADP",296,0)
 U IO                                       ; Use the selected device
"RTN","RCDPEADP",297,0)
 S EXCEL=$P(INPUTS,"^",5),LMAN=$P(INPUTS,U,6)
"RTN","RCDPEADP",298,0)
 ;
"RTN","RCDPEADP",299,0)
 ; Header information
"RTN","RCDPEADP",300,0)
 S XX=$P(INPUTS,"^",4)                      ; Auto-Post Date range
"RTN","RCDPEADP",301,0)
 S HDRINFO("START")=$$FMTE^XLFDT($P(XX,"|",1),"2SZ")
"RTN","RCDPEADP",302,0)
 S HDRINFO("END")=$$FMTE^XLFDT($P(XX,"|",2),"2SZ")
"RTN","RCDPEADP",303,0)
 S HDRINFO("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"2SZ")
"RTN","RCDPEADP",304,0)
 s XX=$P(INPUTS,"^",2)                      ; Sort Type
"RTN","RCDPEADP",305,0)
 S HDRINFO("SORT")="Sorted By: "_$S(XX="C":"Claim",XX="P":"Payer",1:"Patient Name")
"RTN","RCDPEADP",306,0)
 S XX=$S($P(INPUTS,"^",3)="L":"Last to First",1:"First to Last")
"RTN","RCDPEADP",307,0)
 S HDRINFO("SORT")=HDRINFO("SORT")_" - "_XX
"RTN","RCDPEADP",308,0)
 ; PRCA*4.5*326 - Add M/P/T filter to report
"RTN","RCDPEADP",309,0)
 S XX=$P(INPUTS,"^",7) ; M/P/T/A = Medical/Pharmacy/Tricare/All
"RTN","RCDPEADP",310,0)
 S HDRINFO("TYPE")="Medical/Pharmacy/Tricare: "
"RTN","RCDPEADP",311,0)
 S HDRINFO("TYPE")=HDRINFO("TYPE")_$S(XX="M":"MEDICAL",XX="P":"PHARMACY",XX="T":"TRICARE",1:"ALL")
"RTN","RCDPEADP",312,0)
 ;
"RTN","RCDPEADP",313,0)
 ; Format Division filter
"RTN","RCDPEADP",314,0)
 S XX=$P(INPUTS,"^",1)                      ; XX=1 - All Divisions, 2- selected
"RTN","RCDPEADP",315,0)
 S HDRINFO("DIVISIONS")=$S(XX=2:$$LINE^RCDPEAD2(.RCVAUTD),1:"ALL")
"RTN","RCDPEADP",316,0)
 ;
"RTN","RCDPEADP",317,0)
 S A1="",PAGE=0,STOP=0,LCNT=1
"RTN","RCDPEADP",318,0)
 S MODE=$S($P(INPUTS,"^",3)="L":-1,1:1)     ; Mode for $ORDER direction
"RTN","RCDPEADP",319,0)
 F  D  Q:(A1="")!STOP
"RTN","RCDPEADP",320,0)
 . S A1=$O(^TMP("RCDPEADP",$J,A1))
"RTN","RCDPEADP",321,0)
 . Q:A1=""
"RTN","RCDPEADP",322,0)
 . I PAGE D ASK(.STOP,0) Q:STOP             ; Output to screen, quit if user wants to
"RTN","RCDPEADP",323,0)
 . D:'LMAN HDR^RCDPEAD1(EXCEL,.HDRINFO,.PAGE)              ; Display Header
"RTN","RCDPEADP",324,0)
 . ;
"RTN","RCDPEADP",325,0)
 . S A2=""
"RTN","RCDPEADP",326,0)
 . F  D  Q:(A2="")!STOP
"RTN","RCDPEADP",327,0)
 . . S A2=$O(^TMP("RCDPEADP",$J,A1,A2),MODE)
"RTN","RCDPEADP",328,0)
 . . I 'EXCEL,A2="",'LMAN D TOTALD^RCDPEAD1(EXCEL,.HDRINFO,.PAGE,.STOP,A1,.DTOTAL)
"RTN","RCDPEADP",329,0)
 . . Q:A2=""
"RTN","RCDPEADP",330,0)
 . . S A3=0
"RTN","RCDPEADP",331,0)
 . . F  D  Q:'A3!STOP
"RTN","RCDPEADP",332,0)
 . . . S A3=$O(^TMP("RCDPEADP",$J,A1,A2,A3))
"RTN","RCDPEADP",333,0)
 . . . Q:'A3
"RTN","RCDPEADP",334,0)
 . . . S DATA=^TMP("RCDPEADP",$J,A1,A2,A3)           ; Auto-Decreased Claim
"RTN","RCDPEADP",335,0)
 . . . I EXCEL D EXCEL^RCDPEAD2(DATA,A1,A2,A3) Q     ; Output to Excel
"RTN","RCDPEADP",336,0)
 . . . I LMAN D LMAN^RCDPEAD1(DATA,A1,A2,A3,.LCNT) Q
"RTN","RCDPEADP",337,0)
 . . . I $Y>(IOSL-4) D  Q:STOP                       ; End of page
"RTN","RCDPEADP",338,0)
 . . . . D ASK(.STOP,0)
"RTN","RCDPEADP",339,0)
 . . . . Q:STOP
"RTN","RCDPEADP",340,0)
 . . . . D HDR^RCDPEAD1(EXCEL,.HDRINFO,.PAGE)
"RTN","RCDPEADP",341,0)
 . . . S Y=$E($P(DATA,U,3),1,12)                     ; Claim #
"RTN","RCDPEADP",342,0)
 . . . S $E(Y,15)=$E($P(DATA,U,4),1,20)              ; Patient Name
"RTN","RCDPEADP",343,0)
 . . . S $E(Y,37)=$E($P(DATA,U,5),1,19)              ; Payer Name
"RTN","RCDPEADP",344,0)
 . . . S $E(Y,55)=$J($P(DATA,U,6),12,2)              ; Auto-Decrease  Amount
"RTN","RCDPEADP",345,0)
 . . . S $E(Y,69)=$P(DATA,U,7)                       ; Auto-Decrease Date
"RTN","RCDPEADP",346,0)
 . . . W !,Y
"RTN","RCDPEADP",347,0)
 . . . D DCARCS(A1,A2,A3,EXCEL,.HDRINFO,.PAGE,.STOP) ; Display CARCs
"RTN","RCDPEADP",348,0)
 . . . W:'EXCEL !
"RTN","RCDPEADP",349,0)
 ;
"RTN","RCDPEADP",350,0)
 ; Grand totals
"RTN","RCDPEADP",351,0)
 I $D(GTOTAL),'LMAN D
"RTN","RCDPEADP",352,0)
 . I 'STOP,'EXCEL D                                 ; Print grand total if not Excel
"RTN","RCDPEADP",353,0)
 . . D TOTALG^RCDPEAD1(EXCEL,.HDRINFO,.PAGE,GTOTAL,.STOP)
"RTN","RCDPEADP",354,0)
 . I 'STOP D                                        ; Report finished
"RTN","RCDPEADP",355,0)
 . . W !,$$ENDORPRT^RCDPEARL,!
"RTN","RCDPEADP",356,0)
 . . D ASK(.STOP,1)
"RTN","RCDPEADP",357,0)
 ;
"RTN","RCDPEADP",358,0)
 ; Null Report
"RTN","RCDPEADP",359,0)
 I '$D(GTOTAL),'LMAN D
"RTN","RCDPEADP",360,0)
 . D HDR^RCDPEAD1(EXCEL,.HDRINFO,.PAGE)
"RTN","RCDPEADP",361,0)
 . W !!,?26,"*** No Records to Print ***",!
"RTN","RCDPEADP",362,0)
 . W !,$$ENDORPRT^RCDPEARL
"RTN","RCDPEADP",363,0)
 . S:'$D(ZTQUEUED) X=$$ASKSTOP^RCDPELAR()
"RTN","RCDPEADP",364,0)
 ;
"RTN","RCDPEADP",365,0)
 ; List manager
"RTN","RCDPEADP",366,0)
 I LMAN D
"RTN","RCDPEADP",367,0)
 .S:LCNT=1 ^TMP("RCDPE_ADP",$J,LCNT)=$J("",26)_"*** No Records to Print ***",LCNT=LCNT+1
"RTN","RCDPEADP",368,0)
 .S ^TMP("RCDPE_ADP",$J,LCNT)=" ",LCNT=LCNT+1
"RTN","RCDPEADP",369,0)
 .S ^TMP("RCDPE_ADP",$J,LCNT)=$$ENDORPRT^RCDPEARL
"RTN","RCDPEADP",370,0)
 ; Close device
"RTN","RCDPEADP",371,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEADP",372,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEADP",373,0)
 Q
"RTN","RCDPEADP",374,0)
 ;
"RTN","RCDPEADP",375,0)
DCARCS(A1,A2,A3,EXCEL,HDRINFO,PAGE,STOP) ; Display detailes CARC information - added as part of PRCA*4.5*318 re-write 
"RTN","RCDPEADP",376,0)
 ; Input:   A1                  - "EXCEL" if exporting to excel
"RTN","RCDPEADP",377,0)
 ;                                Internal fileman date if not exporting to excel
"RTN","RCDPEADP",378,0)
 ;          A2                  - Excel Line Counter if exporting to excel
"RTN","RCDPEADP",379,0)
 ;                                External Claim number is sorting by claim
"RTN","RCDPEADP",380,0)
 ;                                External Payer Name if sorting by Payer
"RTN","RCDPEADP",381,0)
 ;                                External Patient Name if sorting by Patient Name
"RTN","RCDPEADP",382,0)
 ;          A3                  - Record Counter
"RTN","RCDPEADP",383,0)
 ;          EXCEL               - 1 if exporting to Excel, 0 otherwise
"RTN","RCDPEADP",384,0)
 ;          HDRINFO()           - Array of header information
"RTN","RCDPEADP",385,0)
 ;          PAGE                - Current Page number
"RTN","RCDPEADP",386,0)
 ;          ^TMP("RCDPEADP",$J) - Array of report data. See SAVE for details
"RTN","RCDPEADP",387,0)
 ; Output:  PAGE                - Updated Page number
"RTN","RCDPEADP",388,0)
 ;          STOP                - 1 if user aborts display, 0 otherwise
"RTN","RCDPEADP",389,0)
 N A4,DATA,FIRST,XX
"RTN","RCDPEADP",390,0)
 S A4="",FIRST=1
"RTN","RCDPEADP",391,0)
 F  D  Q:(A4="")!STOP
"RTN","RCDPEADP",392,0)
 . S A4=$O(^TMP("RCDPEADP",$J,A1,A2,A3,A4))
"RTN","RCDPEADP",393,0)
 . Q:A4=""
"RTN","RCDPEADP",394,0)
 . S DATA=^TMP("RCDPEADP",$J,A1,A2,A3,A4)
"RTN","RCDPEADP",395,0)
 . I 'EXCEL,$Y>(IOSL-4) D  Q:STOP           ; End of page
"RTN","RCDPEADP",396,0)
 . . D ASK(.STOP,0)
"RTN","RCDPEADP",397,0)
 . . Q:STOP
"RTN","RCDPEADP",398,0)
 . . S FIRST=1
"RTN","RCDPEADP",399,0)
 . . D HDR^RCDPEAD1(EXCEL,.HDRINFO,.PAGE,1)
"RTN","RCDPEADP",400,0)
 . I FIRST D                                ; CARC header
"RTN","RCDPEADP",401,0)
 . . S FIRST=0
"RTN","RCDPEADP",402,0)
 . . I EXCEL D  Q
"RTN","RCDPEADP",403,0)
 . . . W !!,"CARC^Decrease Amt^Quantity^Reason"
"RTN","RCDPEADP",404,0)
 . . W !!,"    CARC                  Decrease Amt    #    Reason"
"RTN","RCDPEADP",405,0)
 . . W !,"    --------------------  -------------  ----  -----------------------------"
"RTN","RCDPEADP",406,0)
 . S XX="    "_$E($P(DATA,U,1),1,20)        ; CARC
"RTN","RCDPEADP",407,0)
 . S $E(XX,27)=$J($P(DATA,U,2),12,2)        ; Decrease Amount
"RTN","RCDPEADP",408,0)
 . S $E(XX,42)=$J($P(DATA,U,3),4)           ; Quantity
"RTN","RCDPEADP",409,0)
 . S $E(XX,48)=$E($P(DATA,U,4),1,32)        ; Reason
"RTN","RCDPEADP",410,0)
 . W !,XX
"RTN","RCDPEADP",411,0)
 Q
"RTN","RCDPEADP",412,0)
 ;
"RTN","RCDPEADP",413,0)
ASK(STOP,TYP) ; Ask to continue, if TYP=1 then prompt to finish
"RTN","RCDPEADP",414,0)
 ; Input:   TYP     - 1 - Prompt to finish, 0 Otherwise
"RTN","RCDPEADP",415,0)
 ;          IOST    - Device Type
"RTN","RCDPEADP",416,0)
 ; Output:  STOP    - 1 to abort print, 0 otherwise
"RTN","RCDPEADP",417,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEADP",418,0)
 Q:$E(IOST,1,2)'["C-"                               ; Not a terminal
"RTN","RCDPEADP",419,0)
 S:$G(TYP)=1 DIR("A")="Enter RETURN to finish"
"RTN","RCDPEADP",420,0)
 S DIR(0)="E"
"RTN","RCDPEADP",421,0)
 W !
"RTN","RCDPEADP",422,0)
 D ^DIR
"RTN","RCDPEADP",423,0)
 I ($D(DIRUT))!($D(DUOUT)) S STOP=1
"RTN","RCDPEADP",424,0)
 Q
"RTN","RCDPEAP")
0^2^B211031316
"RTN","RCDPEAP",1,0)
RCDPEAP ;ALB/PJH - AUTO POST MATCHING EFT ERA PAIR ;Oct 15, 2014@12:36:51
"RTN","RCDPEAP",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAP",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAP",5,0)
 ;
"RTN","RCDPEAP",6,0)
EN ;Auto-post ERA Receipts
"RTN","RCDPEAP",7,0)
 ;Process newly matched and matched but unprocessed ERAs
"RTN","RCDPEAP",8,0)
 D EN1
"RTN","RCDPEAP",9,0)
 ;Process previously processed ERA's
"RTN","RCDPEAP",10,0)
 D EN2
"RTN","RCDPEAP",11,0)
 Q
"RTN","RCDPEAP",12,0)
 ;
"RTN","RCDPEAP",13,0)
EN1 ;Auto-post newly matched and matched but unprocessed ERA
"RTN","RCDPEAP",14,0)
 N RCRZ,RCEFTDA
"RTN","RCDPEAP",15,0)
 S RCRZ=0
"RTN","RCDPEAP",16,0)
 ;Scan ERA file for auto-post candidates with AUTO-POST STATUS = UNPOSTED
"RTN","RCDPEAP",17,0)
 F  S RCRZ=$O(^RCY(344.4,"E",0,RCRZ)) Q:'RCRZ  D
"RTN","RCDPEAP",18,0)
 .;Get EFT reference
"RTN","RCDPEAP",19,0)
 .S RCEFTDA=$O(^RCY(344.31,"AERA",RCRZ,"")) Q:'RCEFTDA
"RTN","RCDPEAP",20,0)
 .;Check that EFT funds were posted to FMS and Accepted by FMS.  If not, quit and go to next unposted ERA
"RTN","RCDPEAP",21,0)
 .N RCOK,RCDEPTDA,RCRECTDA
"RTN","RCDPEAP",22,0)
 .S RCOK=1
"RTN","RCDPEAP",23,0)
 .I $P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,8),$P($G(^RCY(344.31,+RCEFTDA,0)),U,7) D  Q:'RCOK
"RTN","RCDPEAP",24,0)
 ..S RCDEPTDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPTDA,0)) ; Get deposit ticket and EFT receipt (CR - 8NZZ)
"RTN","RCDPEAP",25,0)
 ..I RCRECTDA N Z S Z=$P($$FMSSTAT^RCDPUREC(RCRECTDA),U,2) Q:$E(Z)="A"
"RTN","RCDPEAP",26,0)
 ..S RCOK=0
"RTN","RCDPEAP",27,0)
 .;
"RTN","RCDPEAP",28,0)
 .;Auto-Post
"RTN","RCDPEAP",29,0)
 .D AUTOPOST(RCEFTDA,RCRZ)
"RTN","RCDPEAP",30,0)
 Q
"RTN","RCDPEAP",31,0)
 ;
"RTN","RCDPEAP",32,0)
 ; Process ERA
"RTN","RCDPEAP",33,0)
AUTOPOST(RCEFTDA,RCERA) ; 
"RTN","RCDPEAP",34,0)
 ; RCEFTDA = ien of file #344.31
"RTN","RCDPEAP",35,0)
 ; RCERA = ien of file #344.4
"RTN","RCDPEAP",36,0)
 ;
"RTN","RCDPEAP",37,0)
 ;Lock ERA
"RTN","RCDPEAP",38,0)
 L +^RCY(344.4,RCERA):5 Q:'$T
"RTN","RCDPEAP",39,0)
 ;
"RTN","RCDPEAP",40,0)
 ;Build Scratchpad and Verify Lines
"RTN","RCDPEAP",41,0)
 N ALLOK,RCERR,RCLINES,RCRCPTDA,RCSCR,RCTRDA,ZEROBAL ; PRCA*4.5*318 Variables placed in alpha order
"RTN","RCDPEAP",42,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP",43,0)
 S RCSCR=$$SCRPAD(RCERA)
"RTN","RCDPEAP",44,0)
 ; Re-set AUTO-POST STATUS  if unable to create scratchpad
"RTN","RCDPEAP",45,0)
 I 'RCSCR D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create scratchpad") G AUTOQ
"RTN","RCDPEAP",46,0)
 ;
"RTN","RCDPEAP",47,0)
 ; ERA cannot be autoposted; remove any pre-existing value to the AUTO-POST STATUS so ERA can be processed manually in the Worklist
"RTN","RCDPEAP",48,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-ERA level Adjustment(s)") G AUTOQ
"RTN","RCDPEAP",49,0)
 ;
"RTN","RCDPEAP",50,0)
 I $$UNBAL^RCDPEAP1(RCERA) D  Q  ; PRCA*4.5*318 Added line
"RTN","RCDPEAP",51,0)
 .D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unbalanced ERA") ; PRCA*4.5*321
"RTN","RCDPEAP",52,0)
 ;
"RTN","RCDPEAP",53,0)
 ;Check if all lines can be posted
"RTN","RCDPEAP",54,0)
 S ALLOK=$$ALLOK(RCERA,RCSCR,.ZEROBAL,.RCLINES)
"RTN","RCDPEAP",55,0)
 ;
"RTN","RCDPEAP",56,0)
 ;If $$ALLOK post entire ERA and reset AUTO-POST STATUS = COMPLETE
"RTN","RCDPEAP",57,0)
 I ALLOK D POSTALL(RCERA)
"RTN","RCDPEAP",58,0)
 ;
"RTN","RCDPEAP",59,0)
 ; If 'ALLOK and 'ZEROBAL(matching positive/negative pairs to not balance out to zero), then ERA needs to go to the standard worklist for manual receipt processing
"RTN","RCDPEAP",60,0)
 I 'ALLOK,'ZEROBAL D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-+/- pairs do not balance") G AUTOQ
"RTN","RCDPEAP",61,0)
 ;
"RTN","RCDPEAP",62,0)
 ;If 'ALLOK and some of the lines passed validation then post receipt to summary ERA and set AUTO-POST STATUS = PARTIAL
"RTN","RCDPEAP",63,0)
 ;Un-posted lines fall to APAR list for processing.
"RTN","RCDPEAP",64,0)
 I 'ALLOK D POSTERA(RCERA,.RCLINES)
"RTN","RCDPEAP",65,0)
 ;Unlock ERA
"RTN","RCDPEAP",66,0)
AUTOQ D UNLOCKE
"RTN","RCDPEAP",67,0)
 Q
"RTN","RCDPEAP",68,0)
 ;
"RTN","RCDPEAP",69,0)
EN2 ;Auto-Post Previously Processed ERA
"RTN","RCDPEAP",70,0)
 N AUTORCPT,CLAIM,COMPLETE,EOBIEN,RCDUZ,RCERA,RCIFN,RCRCPTDA,RCLINES
"RTN","RCDPEAP",71,0)
 S RCERA=0,AUTORCPT=1 ;Variable AUTORCPT suppresses #344 trigger update to ERA receipt field
"RTN","RCDPEAP",72,0)
 ;Scan ERA file for auto-post candidates with AUTO-POST STATUS = PARTIAL
"RTN","RCDPEAP",73,0)
 F  S RCERA=$O(^RCY(344.4,"E",1,RCERA)) Q:'RCERA  D
"RTN","RCDPEAP",74,0)
 . ;Ignore if it was just partially posted in POSTLNS so we do not process again
"RTN","RCDPEAP",75,0)
 . Q:$D(^TMP("RCDPEAP",$J,RCERA))
"RTN","RCDPEAP",76,0)
 . S RCDUZ=$$GET1^DIQ(344.4,RCERA_",",4.04,"I") ; PRCA*4.5*326
"RTN","RCDPEAP",77,0)
 . ;Set receipt variable to null for each ERA so that the receipt number from the previous ERA is not hanging around
"RTN","RCDPEAP",78,0)
 . S RCRCPTDA=""
"RTN","RCDPEAP",79,0)
 . ;Check if there are lines that are set for auto-posting and if they can be posted or have errors.
"RTN","RCDPEAP",80,0)
 . K RCLINES
"RTN","RCDPEAP",81,0)
 . S RCLINES=0
"RTN","RCDPEAP",82,0)
 . D VALID^RCDPEAP1(RCERA,.RCLINES)
"RTN","RCDPEAP",83,0)
 . ;If valid lines found create receipt for those lines (Variable RCLINES is only incremented for valid lines)
"RTN","RCDPEAP",84,0)
 . I RCLINES D
"RTN","RCDPEAP",85,0)
 . . N RCEFTDA,RCDEPTDA,RCRECTDA
"RTN","RCDPEAP",86,0)
 . . ;Get EFT reference
"RTN","RCDPEAP",87,0)
 . . S RCEFTDA=$O(^RCY(344.31,"AERA",RCERA,"")) Q:'RCEFTDA
"RTN","RCDPEAP",88,0)
 . . ;Get deposit ticket and EFT receipt
"RTN","RCDPEAP",89,0)
 . . S RCDEPTDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPTDA,0))
"RTN","RCDPEAP",90,0)
 . . ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",91,0)
 . . ; Creates basic receipt for ERA of payment type EDI LOCKBOX; 2nd parameter means an alpha suffix on receipt number
"RTN","RCDPEAP",92,0)
 . . S RCRCPTDA=$$BLDRCPT^RCDPEMA(RCERA,RCDUZ) ; PRCA*4.5*326 Add RCDUZ to call 
"RTN","RCDPEAP",93,0)
 . . I 'RCRCPTDA Q  ;PRCA*4.5*318 - Problem building receipt header
"RTN","RCDPEAP",94,0)
 . . K RCERR
"RTN","RCDPEAP",95,0)
 . . D RCPTDET^RCDPEMA(RCERA,RCRCPTDA,.RCLINES,.RCERR) ; Adds detail to a receipt based on file 344.49 and RCLINES array
"RTN","RCDPEAP",96,0)
 . . ;;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL - PRCA*4.5*318 - replaced following line
"RTN","RCDPEAP",97,0)
 . . ;;I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",98,0)
 . . I $O(RCERR("")) Q  ; PRCA*4.5*318 - Do not attempt to process partially filed receipt
"RTN","RCDPEAP",99,0)
 . . ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",100,0)
 . . I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",101,0)
 . . I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",102,0)
 . . ;Process Receipt to FMS
"RTN","RCDPEAP",103,0)
 . . D PROCESS^RCDPURE1(RCRCPTDA,2) I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D UNLOCKR Q
"RTN","RCDPEAP",104,0)
 . . ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",105,0)
 . . D ERAREF(RCERA,RCRCPTDA)
"RTN","RCDPEAP",106,0)
 . . ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",107,0)
 . . D UNLOCKR
"RTN","RCDPEAP",108,0)
 . ;Update ERA and ERA detail lines with receipt # or auto-post rejection reason
"RTN","RCDPEAP",109,0)
 . D ERADET^RCDPEAP1(RCERA,RCRCPTDA,.RCLINES)
"RTN","RCDPEAP",110,0)
 . ;Determine if posting complete for this ERA
"RTN","RCDPEAP",111,0)
 . S COMPLETE=$$COMPLETE(RCERA)
"RTN","RCDPEAP",112,0)
 . ;If complete update ERA detail post status to POSTED
"RTN","RCDPEAP",113,0)
 . I COMPLETE S DIE="^RCY(344.4,",DR=".14////1",DA=RCERA D ^DIE
"RTN","RCDPEAP",114,0)
 . ;Update the audit log
"RTN","RCDPEAP",115,0)
 . D AUDITLOG(RCERA,$S(COMPLETE:2,1:1),"Auto Posting: Previously processed ERA posting attempt")
"RTN","RCDPEAP",116,0)
 . ;Set ERA auto-post status and update latest auto-post date
"RTN","RCDPEAP",117,0)
 . S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////"_$S(COMPLETE:2,1:1),DA=RCERA D ^DIE
"RTN","RCDPEAP",118,0)
 ;Unlock ERA
"RTN","RCDPEAP",119,0)
 D UNLOCKE
"RTN","RCDPEAP",120,0)
 Q
"RTN","RCDPEAP",121,0)
 ;
"RTN","RCDPEAP",122,0)
 ;Functions/Sub-routines in alpha order
"RTN","RCDPEAP",123,0)
 ;
"RTN","RCDPEAP",124,0)
ACTIVE(EOBIEN) ;Verify claim is active
"RTN","RCDPEAP",125,0)
 ; EOBIEN - IEN of file 361.1
"RTN","RCDPEAP",126,0)
 N RCIFN,RCBILL,RCSTATUS
"RTN","RCDPEAP",127,0)
 ;Get EOB number (implies this is 3rd Party claim)
"RTN","RCDPEAP",128,0)
 I 'EOBIEN Q 0
"RTN","RCDPEAP",129,0)
 ;Get #399 claim number from EOB
"RTN","RCDPEAP",130,0)
 S RCIFN=$P($G(^IBM(361.1,EOBIEN,0)),U) Q:'RCIFN 0
"RTN","RCDPEAP",131,0)
 S RCBILL=$P($G(^DGCR(399,RCIFN,0)),U) Q:RCBILL="" 0  ; IA 4051
"RTN","RCDPEAP",132,0)
 ;Check if bill is cancelled or closed
"RTN","RCDPEAP",133,0)
 S RCSTATUS=$P($G(^DGCR(399,RCIFN,0)),U,13)
"RTN","RCDPEAP",134,0)
 Q $S(RCSTATUS=0:0,RCSTATUS=7:0,1:1)
"RTN","RCDPEAP",135,0)
 ; 
"RTN","RCDPEAP",136,0)
ALLOK(RCERA,RCSCR,ZEROBAL,RCLINES) ;Verify which scratchpad lines are able to auto-post
"RTN","RCDPEAP",137,0)
 ; RCERA - 344.4 ien
"RTN","RCDPEAP",138,0)
 ; RCSCR - 344.49 ien
"RTN","RCDPEAP",139,0)
 ; ZEROBAL - flag that represents if ERA has zero payment balance after processing matched positive/negative pairs, passed by reference
"RTN","RCDPEAP",140,0)
 ; RCLINES - array of ERA line references (passed in by reference)
"RTN","RCDPEAP",141,0)
 ;           NOTE:  ORIGINAL ERA SEQUENCES (344.491, .09) can have multiple ERA line references separated by commas (e.g., 3,4)
"RTN","RCDPEAP",142,0)
 ; returns 0 or 1 (ALLOK)
"RTN","RCDPEAP",143,0)
 N ALLOK,AMT,ERALINE,STATUS,SUB,SUB1,CLAIM,WLINE,VERIFY
"RTN","RCDPEAP",144,0)
 K CLARRAY
"RTN","RCDPEAP",145,0)
 S (ZEROBAL,ALLOK)=1
"RTN","RCDPEAP",146,0)
 S (SUB,RCLINES)=0
"RTN","RCDPEAP",147,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP",148,0)
 . ;Get scratchpad line and data
"RTN","RCDPEAP",149,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1  S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0)),AMT=$P(WLINE,U,3)
"RTN","RCDPEAP",150,0)
 . ;If integer sequence, get ERA line reference and verify flag and then quit for this sequence and go on to the non-integer sequence to finish validation
"RTN","RCDPEAP",151,0)
 . I $P(WLINE,U)?1N.N S VERIFY=1 S ERALINE=$P(WLINE,U,9) S:'$P(WLINE,U,13) ALLOK=0,RCLINES(ERALINE)="0^^1",VERIFY=0 Q
"RTN","RCDPEAP",152,0)
 . ; ignore zero valued lines
"RTN","RCDPEAP",153,0)
 . Q:AMT=0  Q:AMT="0.00"
"RTN","RCDPEAP",154,0)
 . ;Get claim number from N.001 line - if not found treat as inactive
"RTN","RCDPEAP",155,0)
 . S CLAIM=$P(WLINE,U,7) I 'CLAIM S ALLOK=0,$P(RCLINES(ERALINE),U,3)=2 Q
"RTN","RCDPEAP",156,0)
 . ;Save claim number
"RTN","RCDPEAP",157,0)
 . S $P(RCLINES(ERALINE),U,2)=$P($G(^PRCA(430,CLAIM,0)),U) Q:'VERIFY
"RTN","RCDPEAP",158,0)
 . ;Claim must be OPEN or ACTIVE
"RTN","RCDPEAP",159,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8) I STATUS'=42,STATUS'=16 S ALLOK=0,$P(RCLINES(ERALINE),U,3)=2 Q
"RTN","RCDPEAP",160,0)
 . ;Check that payment does not exceed balance and no pending payments (at the time of auto posting)
"RTN","RCDPEAP",161,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3) I '$$CHECKPAY(.CLARRAY,CLAIM) S ALLOK=0,$P(RCLINES(ERALINE),U,3)=3 Q
"RTN","RCDPEAP",162,0)
 . ;Check if referred to general council
"RTN","RCDPEAP",163,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S ALLOK=0,$P(RCLINES(ERALINE),U,3)=4 Q
"RTN","RCDPEAP",164,0)
 . ;Line is potentially postable
"RTN","RCDPEAP",165,0)
 . S $P(RCLINES(ERALINE),U)=1,$P(RCLINES(ERALINE),U,3)=$P(WLINE,U,6),RCLINES=$G(RCLINES)+1
"RTN","RCDPEAP",166,0)
 Q ALLOK
"RTN","RCDPEAP",167,0)
 ;
"RTN","RCDPEAP",168,0)
AUDITLOG(DA,RCNEWST,RCREASON) ;
"RTN","RCDPEAP",169,0)
 ; Update the Auto-post Audit Log
"RTN","RCDPEAP",170,0)
 ;
"RTN","RCDPEAP",171,0)
 I '$G(DA) Q
"RTN","RCDPEAP",172,0)
 I $G(RCREASON)="" Q
"RTN","RCDPEAP",173,0)
 ;
"RTN","RCDPEAP",174,0)
 N RCAUDIT,RCOLDST,DIE,DR,X,Y,DTOUT,DUOUT,DROUT,DIRUT
"RTN","RCDPEAP",175,0)
 ; Get the current status
"RTN","RCDPEAP",176,0)
 S RCOLDST=$$GET1^DIQ(344.4,DA_",",4.02,"I")
"RTN","RCDPEAP",177,0)
 ; If the new status is null, set to old status (no change)
"RTN","RCDPEAP",178,0)
 I $G(RCNEWST)="" S RCNEWST=RCOLDST
"RTN","RCDPEAP",179,0)
 ; File
"RTN","RCDPEAP",180,0)
 S RCAUDIT(344.72,"+1,",.01)=$$NOW^XLFDT ;Date/Time Stamp
"RTN","RCDPEAP",181,0)
 S RCAUDIT(344.72,"+1,",.02)=$S($G(RCDUZ):RCDUZ,1:DUZ)         ;User PRCA*4.5*321 Use RCDUZ if defined
"RTN","RCDPEAP",182,0)
 S RCAUDIT(344.72,"+1,",.03)=DA          ;ERA #
"RTN","RCDPEAP",183,0)
 S RCAUDIT(344.72,"+1,",.04)=RCOLDST     ;Old Status
"RTN","RCDPEAP",184,0)
 I RCNEWST'="@" S RCAUDIT(344.72,"+1,",.05)=RCNEWST ;New status
"RTN","RCDPEAP",185,0)
 S RCAUDIT(344.72,"+1,",.06)=$E(RCREASON,1,80) ;Reason text
"RTN","RCDPEAP",186,0)
 D UPDATE^DIE(,"RCAUDIT")
"RTN","RCDPEAP",187,0)
 Q
"RTN","RCDPEAP",188,0)
 ;
"RTN","RCDPEAP",189,0)
BUILD(RCSCR,ARRAY) ; EP from EN2^RCDPEAD - Build list of ERA lines
"RTN","RCDPEAP",190,0)
 ;
"RTN","RCDPEAP",191,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",192,0)
 ; ARRAY = the array that will hold the list of ERA lines, passed by reference
"RTN","RCDPEAP",193,0)
 ;
"RTN","RCDPEAP",194,0)
 N ERALINE,FOUND,SCRLINE,SUB,SUB1
"RTN","RCDPEAP",195,0)
 K ARRAY
"RTN","RCDPEAP",196,0)
 S SUB=0,ARRAY=0
"RTN","RCDPEAP",197,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D:SUB'["."
"RTN","RCDPEAP",198,0)
 . ;Get actual scratchpad ^RCY(344.49,RCSCR,1) node
"RTN","RCDPEAP",199,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1
"RTN","RCDPEAP",200,0)
 . ;;Ignore zero lines - removed PRCA*4.5*326
"RTN","RCDPEAP",201,0)
 . ;Q:'$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,3)
"RTN","RCDPEAP",202,0)
 . ; Get ERA line
"RTN","RCDPEAP",203,0)
 . S ERALINE=$$GET1^DIQ(344.491,SUB1_","_RCSCR,.09) ; PRCA*4.5*326
"RTN","RCDPEAP",204,0)
 . ; Ignore reversals
"RTN","RCDPEAP",205,0)
 . Q:ERALINE[","  ; PRCA*4.5*326
"RTN","RCDPEAP",206,0)
 . ;Index scratchpad line by ERA sequence
"RTN","RCDPEAP",207,0)
 . S ARRAY(ERALINE)=SUB1,ARRAY=$G(ARRAY)+1 ; PRCA*4.5*326
"RTN","RCDPEAP",208,0)
 Q
"RTN","RCDPEAP",209,0)
 ;
"RTN","RCDPEAP",210,0)
CHECKPAY(ARRAY,CLAIM) ;Check balance versus payments
"RTN","RCDPEAP",211,0)
 ; ARRAY = array of claim numbers and respective payment amounts
"RTN","RCDPEAP",212,0)
 ;         e.g. ARRAY(430 ien) = 123.04
"RTN","RCDPEAP",213,0)
 ; CLAIM = AR BILL (344.491, .07) - IEN of file 430
"RTN","RCDPEAP",214,0)
 Q:'CLAIM 0
"RTN","RCDPEAP",215,0)
 ;
"RTN","RCDPEAP",216,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEAP",217,0)
 N RCADMIN,RCBAL,RCCOURT,RCINT,RCMAR,RCPRIN
"RTN","RCDPEAP",218,0)
 S RCPRIN=$$GET1^DIQ(430,CLAIM_",",71) ; Principle Balance
"RTN","RCDPEAP",219,0)
 S RCINT=$$GET1^DIQ(430,CLAIM_",",72) ; Interest
"RTN","RCDPEAP",220,0)
 S RCADMIN=$$GET1^DIQ(430,CLAIM_",",73) ; Admin Cost
"RTN","RCDPEAP",221,0)
 S RCMAR=$$GET1^DIQ(430,CLAIM_",",74) ; Marshal Fee
"RTN","RCDPEAP",222,0)
 S RCCOURT=$$GET1^DIQ(430,CLAIM_",",75) ; Court Cost
"RTN","RCDPEAP",223,0)
 S RCBAL=RCPRIN+RCINT+RCADMIN+RCMAR+RCCOURT ; Total balance
"RTN","RCDPEAP",224,0)
 ; get the payment amount to be posted to the claim
"RTN","RCDPEAP",225,0)
 S AMT=ARRAY(CLAIM)
"RTN","RCDPEAP",226,0)
 ;Payment exceeds principle balance
"RTN","RCDPEAP",227,0)
 Q:AMT>RCBAL 0
"RTN","RCDPEAP",228,0)
 ; END PRCA*4.5*326
"RTN","RCDPEAP",229,0)
 ;Check pending payments for claim
"RTN","RCDPEAP",230,0)
 N PENDING S PENDING=$$PENDPAY^RCDPURET(CLAIM) K ^TMP($J,"RCDPUREC","PP")
"RTN","RCDPEAP",231,0)
 ;Pending payments is > billed
"RTN","RCDPEAP",232,0)
 I PENDING>AMT Q 0
"RTN","RCDPEAP",233,0)
 ;otherwise OK to post payment
"RTN","RCDPEAP",234,0)
 Q 1
"RTN","RCDPEAP",235,0)
 ; 
"RTN","RCDPEAP",236,0)
CLEAR(DA) ;Clear scratchpad
"RTN","RCDPEAP",237,0)
 N DIK S DIK="^RCY(344.49," D ^DIK
"RTN","RCDPEAP",238,0)
 Q
"RTN","RCDPEAP",239,0)
 ;
"RTN","RCDPEAP",240,0)
COMPLETE(RCSCR) ;Check for non-zero lines without a receipt
"RTN","RCDPEAP",241,0)
 ;
"RTN","RCDPEAP",242,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",243,0)
 ; Returns status of check (1 or 0)
"RTN","RCDPEAP",244,0)
 N RCSUB,SCRSUB,COMPLETE,SCRLINE,RCERA
"RTN","RCDPEAP",245,0)
 ;Default to complete
"RTN","RCDPEAP",246,0)
 S SCRSUB=0,COMPLETE=1,RCERA=RCSCR
"RTN","RCDPEAP",247,0)
 ;Scan scratchpad
"RTN","RCDPEAP",248,0)
 F  S SCRSUB=$O(^RCY(344.49,RCSCR,1,SCRSUB)) Q:'SCRSUB  D  Q:'COMPLETE
"RTN","RCDPEAP",249,0)
 . ;Ignore zero and split lines (splitting line should not change balance)
"RTN","RCDPEAP",250,0)
 . S SCRLINE=$G(^RCY(344.49,RCSCR,1,SCRSUB,0)) Q:$P(SCRLINE,U)'?1N.N  Q:$P(SCRLINE,U,3)=0  Q:$P(SCRLINE,U,3)="0.00"
"RTN","RCDPEAP",251,0)
 . ;Check if non-zero line has receipt on ERA, DETAIL line
"RTN","RCDPEAP",252,0)
 . S RCSUB=$P(SCRLINE,U,9) I RCSUB,$P($G(^RCY(344.4,RCERA,1,RCSUB,4)),U,3)]"" Q
"RTN","RCDPEAP",253,0)
 . ;Otherwise more AUTO-posting to do
"RTN","RCDPEAP",254,0)
 . S COMPLETE=0
"RTN","RCDPEAP",255,0)
 Q COMPLETE
"RTN","RCDPEAP",256,0)
 ;
"RTN","RCDPEAP",257,0)
ERAREF(RCSCR,RCRCPTDA) ; update ERA reference and EFT record IEN in file 344
"RTN","RCDPEAP",258,0)
 ; RCSCR - IEN of record in file 344.49
"RTN","RCDPEAP",259,0)
 ; RCRCPTDA - ien of record in file 344 (receipt ien)
"RTN","RCDPEAP",260,0)
 N Z,DR,DIE,DA
"RTN","RCDPEAP",261,0)
 S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEAP",262,0)
 S DIE="^RCY(344,",DA=RCRCPTDA,DR=".18////"_RCSCR_$S(Z:";.17////"_Z,1:"") D ^DIE
"RTN","RCDPEAP",263,0)
 Q
"RTN","RCDPEAP",264,0)
 ;
"RTN","RCDPEAP",265,0)
NOTOK(RCSCR) ;Verify all scratchpad lines passed auto verify (V)
"RTN","RCDPEAP",266,0)
 ;
"RTN","RCDPEAP",267,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",268,0)
 ; Returns status of check (1 or 0)
"RTN","RCDPEAP",269,0)
 N NOTOK,SUB
"RTN","RCDPEAP",270,0)
 S SUB=0,NOTOK=0
"RTN","RCDPEAP",271,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,SUB)) Q:'SUB  D  Q:NOTOK
"RTN","RCDPEAP",272,0)
 . ;Set NOTOK if any single line is unverified
"RTN","RCDPEAP",273,0)
 . S:$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U,13)'=1 NOTOK=1
"RTN","RCDPEAP",274,0)
 Q NOTOK
"RTN","RCDPEAP",275,0)
 ;
"RTN","RCDPEAP",276,0)
POSTALL(RCERA) ; all lines in ERA get posted on first attempt of auto-post
"RTN","RCDPEAP",277,0)
 ;
"RTN","RCDPEAP",278,0)
 ; RCERA = ien of 344.4
"RTN","RCDPEAP",279,0)
 ;
"RTN","RCDPEAP",280,0)
 ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",281,0)
 ; PRCA*4.5*326 begin modified code block
"RTN","RCDPEAP",282,0)
 N RCDUZ
"RTN","RCDPEAP",283,0)
 S RCDUZ=$$GET1^DIQ(344.4,RCERA_",",4.04,"I")
"RTN","RCDPEAP",284,0)
 S RCRCPTDA=$$BLDRCPT^RCDPUREC(DT,"",+$O(^RC(341.1,"AC",14,0)),RCDUZ)  ; Creates basic receipt for ERA of payment type EDI LOCKBOX; 2nd parameter means no alpha suffix on receipt number
"RTN","RCDPEAP",285,0)
 D RCPTDET^RCDPEM(RCSCR,RCRCPTDA,.RCERR,RCDUZ) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEAP",286,0)
 ; PRCA*4.5*326 end modified code block
"RTN","RCDPEAP",287,0)
 ;
"RTN","RCDPEAP",288,0)
 ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",289,0)
 I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",290,0)
 ;
"RTN","RCDPEAP",291,0)
 ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",292,0)
 I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",293,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",294,0)
 ;
"RTN","RCDPEAP",295,0)
 ;Process Receipt to FMS
"RTN","RCDPEAP",296,0)
 D PROCESS^RCDPURE1(RCRCPTDA,2)
"RTN","RCDPEAP",297,0)
 I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Error in receipt processing"),UNLOCKR Q
"RTN","RCDPEAP",298,0)
 ;
"RTN","RCDPEAP",299,0)
 ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",300,0)
 D ERAREF(RCSCR,RCRCPTDA)
"RTN","RCDPEAP",301,0)
 ;
"RTN","RCDPEAP",302,0)
 ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",303,0)
 D UNLOCKR
"RTN","RCDPEAP",304,0)
 ;
"RTN","RCDPEAP",305,0)
 ;Update the audit log
"RTN","RCDPEAP",306,0)
 D AUDITLOG(RCERA,2,"Auto Posting: ERA posted successfully")
"RTN","RCDPEAP",307,0)
 ;Update ERA receipt and detail post status
"RTN","RCDPEAP",308,0)
 S DIE="^RCY(344.4,",DR=".14////1;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP",309,0)
 ;Set ERA auto-post status to 'complete' and update latest auto-post date
"RTN","RCDPEAP",310,0)
 S DIE="^RCY(344.4,"
"RTN","RCDPEAP",311,0)
 S DR="4.01////"_DT_";4.02////2"
"RTN","RCDPEAP",312,0)
 S DA=RCERA
"RTN","RCDPEAP",313,0)
 D ^DIE
"RTN","RCDPEAP",314,0)
 ;Update auto-post date for each claim line
"RTN","RCDPEAP",315,0)
 N RCLINE,RCSCSUB,RCSCD0
"RTN","RCDPEAP",316,0)
 S RCSCSUB=0
"RTN","RCDPEAP",317,0)
 F  S RCSCSUB=$O(^RCY(344.49,RCERA,1,RCSCSUB)) Q:'RCSCSUB  D
"RTN","RCDPEAP",318,0)
 . S RCSCD0=$G(^RCY(344.49,RCERA,1,RCSCSUB,0))
"RTN","RCDPEAP",319,0)
 . ;Ignore if zero value (line not on receipt) otherwise get original ERA line sequence
"RTN","RCDPEAP",320,0)
 . Q:'+$P(RCSCD0,U,3)  S RCLINE=$P(RCSCD0,U,9) Q:'RCLINE
"RTN","RCDPEAP",321,0)
 . ;Update ERA line with receipt number and auto-post date
"RTN","RCDPEAP",322,0)
 . N DA,DIE,DR S DA(1)=RCERA,DA=RCLINE,DIE="^RCY(344.4,"_DA(1)_",1,",DR=".25////"_RCRCPTDA_";9////"_DT D ^DIE
"RTN","RCDPEAP",323,0)
 Q
"RTN","RCDPEAP",324,0)
 ;
"RTN","RCDPEAP",325,0)
POSTERA(RCERA,RCLINES) ; only some of the EEOB lines passed validation on first attempt (DAY 1) of auto-post
"RTN","RCDPEAP",326,0)
 ; therefore assign the receipt number and 'partial' post status to ERA summary
"RTN","RCDPEAP",327,0)
 ;
"RTN","RCDPEAP",328,0)
 ; RCERA = ien of 344.4
"RTN","RCDPEAP",329,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP",330,0)
 ;
"RTN","RCDPEAP",331,0)
 ; no lines passed validation;  at lease 1 EEOB line needs to pass validation before assigning a receipt to the ERA
"RTN","RCDPEAP",332,0)
 I RCLINES=0 S RCRCPTDA="" G POSTERAQ
"RTN","RCDPEAP",333,0)
 ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",334,0)
 S RCRCPTDA=$$BLDRCPT^RCDPEMA(RCERA) ; Creates basic receipt for ERA of payment type EDI LOCKBOXA
"RTN","RCDPEAP",335,0)
 D RCPTDET^RCDPEMA(RCSCR,RCRCPTDA,.RCLINES,.RCERR) ; Adds detail to a receipt based on file 344.49 and RCLINES array
"RTN","RCDPEAP",336,0)
 ;
"RTN","RCDPEAP",337,0)
 ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",338,0)
 I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",339,0)
 ;
"RTN","RCDPEAP",340,0)
 ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",341,0)
 I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",342,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",343,0)
 ;
"RTN","RCDPEAP",344,0)
 ;Process Receipt to FMS
"RTN","RCDPEAP",345,0)
 D PROCESS^RCDPURE1(RCRCPTDA,2)
"RTN","RCDPEAP",346,0)
 I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Error in receipt processing"),UNLOCKR Q
"RTN","RCDPEAP",347,0)
 ;
"RTN","RCDPEAP",348,0)
 ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",349,0)
 D ERAREF(RCSCR,RCRCPTDA)
"RTN","RCDPEAP",350,0)
 ;
"RTN","RCDPEAP",351,0)
 ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",352,0)
 D UNLOCKR
"RTN","RCDPEAP",353,0)
 ;Update ERA receipt and detail post status
"RTN","RCDPEAP",354,0)
 S DIE="^RCY(344.4,",DR=".14////5;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP",355,0)
POSTERAQ ;
"RTN","RCDPEAP",356,0)
 D POSTLNS(RCERA,RCRCPTDA,.RCLINES)
"RTN","RCDPEAP",357,0)
 Q
"RTN","RCDPEAP",358,0)
 ;
"RTN","RCDPEAP",359,0)
POSTLNS(RCERA,RCRCPTDA,RCLINES) ; this subroutine should only be called when some of the EEOB lines
"RTN","RCDPEAP",360,0)
 ;                                passed validation on FIRST attempt (DAY 1) of auto-post
"RTN","RCDPEAP",361,0)
 ;
"RTN","RCDPEAP",362,0)
 ; RCERA = ien of ERA entry in 344.4
"RTN","RCDPEAP",363,0)
 ; RCRCPTDA = ien of receipt entry in 344 or undefined if receipt not created since none of the lines passed validation
"RTN","RCDPEAP",364,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP",365,0)
 ;
"RTN","RCDPEAP",366,0)
 ;Mark ERA as processed to prevent reprocessing in EN2^RCDPEAP which runs next
"RTN","RCDPEAP",367,0)
 S ^TMP("RCDPEAP",$J,RCERA)=""
"RTN","RCDPEAP",368,0)
 S RCRCPTDA=$G(RCRCPTDA)
"RTN","RCDPEAP",369,0)
 ;Update individual claim lines on ERA
"RTN","RCDPEAP",370,0)
 N RCLIN,DA,DIE,DR,LNUM,RCI,REJECT
"RTN","RCDPEAP",371,0)
 S RCLIN=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP",372,0)
 . ; flag the line if it was rejected during validation
"RTN","RCDPEAP",373,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP",374,0)
 . ;get all ERA line references (e.g. RCLINES(RCLIN) could have multiple line # references)
"RTN","RCDPEAP",375,0)
 . ;Need to parse out each line reference so that the necessary fields can be updated for the specific line
"RTN","RCDPEAP",376,0)
 . F RCI=1:1 S LNUM=$P(RCLIN,",",RCI) Q:LNUM=""  D
"RTN","RCDPEAP",377,0)
 . . S DA(1)=RCERA,DA=LNUM,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP",378,0)
 . . ;If not posted then the AUTO-POST REJECTION REASON (344.41,5) needs to be updated ;otherwise update line with receipt number and auto-post date
"RTN","RCDPEAP",379,0)
 . . I REJECT S DR="5////"_$P(RCLINES(RCLIN),U,3)
"RTN","RCDPEAP",380,0)
 . . E  S DR=".25////"_RCRCPTDA_";9////"_DT
"RTN","RCDPEAP",381,0)
 . . D ^DIE
"RTN","RCDPEAP",382,0)
 ;Update the Audit Log
"RTN","RCDPEAP",383,0)
 D AUDITLOG(RCERA,1,"Auto Posting: Some of the ERA lines went to APAR")
"RTN","RCDPEAP",384,0)
 ;Set ERA AUTO-POST STATUS = PARTIAL and update auto-post date
"RTN","RCDPEAP",385,0)
 S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////1",DA=RCERA D ^DIE
"RTN","RCDPEAP",386,0)
 Q
"RTN","RCDPEAP",387,0)
 ;
"RTN","RCDPEAP",388,0)
SCRPAD(RCERA) ;Build Scratchpad entry in #344.49 for the ERA
"RTN","RCDPEAP",389,0)
 ;
"RTN","RCDPEAP",390,0)
 ; Input - RCERA - IEN for #344.4
"RTN","RCDPEAP",391,0)
 ;
"RTN","RCDPEAP",392,0)
 ; Output - RCSCR = Scratchpad IEN (Success) or 0 (Fail)
"RTN","RCDPEAP",393,0)
 ;
"RTN","RCDPEAP",394,0)
 N RC0,RC5,RCSCR,RCDAT,X
"RTN","RCDPEAP",395,0)
 S RC0=$G(^RCY(344.4,RCERA,0)),RC5=$G(^RCY(344.4,RCERA,5))
"RTN","RCDPEAP",396,0)
 ;Ignore is this ERA already has a receipt
"RTN","RCDPEAP",397,0)
 I +$P(RC0,U,8) Q 0
"RTN","RCDPEAP",398,0)
 ;Ignore if this is zero ERA
"RTN","RCDPEAP",399,0)
 I +$P(RC0,U,5)=0 Q 0
"RTN","RCDPEAP",400,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEAP",401,0)
 ;Ignore if this is not a valid auto-post ERA type 
"RTN","RCDPEAP",402,0)
 ;I "^ACH^CHK^"'[(U_$P(RC0,U,15)_U) Q 0 ; added CHK - PRCA*4.5*321
"RTN","RCDPEAP",403,0)
 I "^ACH^CHK^NON^BOP^"'[(U_$P(RC0,U,15)_U) Q 0
"RTN","RCDPEAP",404,0)
 ;ERA must be matched to an EFT to be eligible for mark for autopost
"RTN","RCDPEAP",405,0)
 I '$O(^RCY(344.31,"AERA",RCERA,"")) Q 0
"RTN","RCDPEAP",406,0)
 ; END PRCA*4.5*326
"RTN","RCDPEAP",407,0)
 ;Scratchpad already exists
"RTN","RCDPEAP",408,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0)) I RCSCR G SCRPADX
"RTN","RCDPEAP",409,0)
 ;Create new Scratchpad
"RTN","RCDPEAP",410,0)
 S RCSCR=+$$ADDREC^RCDPEWL(RCERA,.RCDAT) I 'RCSCR Q 0
"RTN","RCDPEAP",411,0)
 ;Add all the ERA lines to the Scratchpad entry
"RTN","RCDPEAP",412,0)
 D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEAP",413,0)
SCRPADX ;Return Scratchpad IEN
"RTN","RCDPEAP",414,0)
 Q RCSCR
"RTN","RCDPEAP",415,0)
 ;
"RTN","RCDPEAP",416,0)
SETSTA(DA,STATUS,RCREASON) ;Set ERA auto-post status
"RTN","RCDPEAP",417,0)
 ; Log status change
"RTN","RCDPEAP",418,0)
 I '$G(DA) Q
"RTN","RCDPEAP",419,0)
 I $G(STATUS)="" Q
"RTN","RCDPEAP",420,0)
 ;
"RTN","RCDPEAP",421,0)
 D AUDITLOG(DA,STATUS,$G(RCREASON))
"RTN","RCDPEAP",422,0)
 ; Update status
"RTN","RCDPEAP",423,0)
 N DIE,DR
"RTN","RCDPEAP",424,0)
 S DIE="^RCY(344.4,"
"RTN","RCDPEAP",425,0)
 S DR="4.02////"_STATUS
"RTN","RCDPEAP",426,0)
 S DR=DR_";4.04///"_$S(STATUS=0&(DUZ'=.5):"`"_DUZ,1:"@")
"RTN","RCDPEAP",427,0)
 D ^DIE
"RTN","RCDPEAP",428,0)
 Q
"RTN","RCDPEAP",429,0)
 ;
"RTN","RCDPEAP",430,0)
 ;
"RTN","RCDPEAP",431,0)
UNLOCKR ;Unlock ERA receipt and deposit ticket
"RTN","RCDPEAP",432,0)
 L -^RCY(344,RCRCPTDA)
"RTN","RCDPEAP",433,0)
 L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPEAP",434,0)
 Q
"RTN","RCDPEAP",435,0)
 ;
"RTN","RCDPEAP",436,0)
UNLOCKE ;Unlock ERA
"RTN","RCDPEAP",437,0)
 L -^RCY(344.4,RCERA)
"RTN","RCDPEAP",438,0)
 Q
"RTN","RCDPEAP1")
0^24^B111273424
"RTN","RCDPEAP1",1,0)
RCDPEAP1 ;ALB/KML - AUTO POST MATCHING EFT ERA PAIR - CONT. ;Jun 06, 2014@19:11:19
"RTN","RCDPEAP1",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAP1",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAP1",5,0)
 ;
"RTN","RCDPEAP1",6,0)
 ;-------------------------------
"RTN","RCDPEAP1",7,0)
 ;RCDPEM0 and RCDPEAP SUBROUTINES
"RTN","RCDPEAP1",8,0)
 ;-------------------------------
"RTN","RCDPEAP1",9,0)
AUTOCHK(RCERA) ;Verify if ERA can be auto-posted - PRE-CHECK USED IN RCDPEM0
"RTN","RCDPEAP1",10,0)
 ; Many checks done by this are also done AUTOCHK2 below so if these are changed, may also need to be changed
"RTN","RCDPEAP1",11,0)
 N NOTOK,RCDSUB,RCD0,RCSCR
"RTN","RCDPEAP1",12,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP1",13,0)
 ;Check for exceptions
"RTN","RCDPEAP1",14,0)
 S RCDSUB=0,NOTOK=0
"RTN","RCDPEAP1",15,0)
 F  S RCDSUB=$O(^RCY(344.4,RCERA,1,RCDSUB)) Q:'RCDSUB  D  Q:NOTOK
"RTN","RCDPEAP1",16,0)
 . ;Exception exists if INVALID BILL NUMBER field is populated in #344.41
"RTN","RCDPEAP1",17,0)
 . S RCD0=$G(^RCY(344.4,RCERA,1,RCDSUB,0)) S:($P(RCD0,U,5)]"") NOTOK=1
"RTN","RCDPEAP1",18,0)
 ;Cannot auto-post if exceptions exist
"RTN","RCDPEAP1",19,0)
 Q:NOTOK 0
"RTN","RCDPEAP1",20,0)
 ; Ignore ERA if ERA level Adjustments exist
"RTN","RCDPEAP1",21,0)
 I $O(^RCY(344.4,RCERA,2,0)) Q 0
"RTN","RCDPEAP1",22,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEAP1",23,0)
 ; Ignore non-ACH type ERA to prevent CHK type ERA from automatically auto-posting in nightly job - PRCA*4.5*321
"RTN","RCDPEAP1",24,0)
 ;I $$GET1^DIQ(344.4,RCERA_",",.15)'="ACH" Q 0 ; extended - PRCA*4.5*326
"RTN","RCDPEAP1",25,0)
 ; Ignore non-valid auto-post ERA types
"RTN","RCDPEAP1",26,0)
 I "^ACH^CHK^BOP^NON^"'[(U_$$GET1^DIQ(344.4,RCERA_",",.15)_U) Q 0
"RTN","RCDPEAP1",27,0)
 ; ERA must be matched to an EFT to be eligible for mark for autopost
"RTN","RCDPEAP1",28,0)
 I '$O(^RCY(344.31,"AERA",RCERA,"")) Q 0
"RTN","RCDPEAP1",29,0)
 ; END PRCA*4.5*326
"RTN","RCDPEAP1",30,0)
 ;Create scratchpad
"RTN","RCDPEAP1",31,0)
 S RCSCR=$$SCRPAD^RCDPEAP(RCERA) Q:'RCSCR 0
"RTN","RCDPEAP1",32,0)
 ;Ignore ERA if claim level adjustments without payment exist
"RTN","RCDPEAP1",33,0)
 ;This will only get set if the scratchpad is created, not if it already exists.  Looking at the code, it
"RTN","RCDPEAP1",34,0)
 ;will mainly set if there are ERA level adjustments and may get set for unbalanced pairs, which is found
"RTN","RCDPEAP1",35,0)
 ;by the ZEROBAL function.  So, I think this does not have a real purpose but was not 100% sure.
"RTN","RCDPEAP1",36,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D CLEAR^RCDPEAP(RCSCR) Q 0
"RTN","RCDPEAP1",37,0)
 ; ERA needs to drop to standard worklist if adjustment between matching 
"RTN","RCDPEAP1",38,0)
 ;positive/negative does not create a zero balance
"RTN","RCDPEAP1",39,0)
 I '$$ZEROBAL(RCSCR) D CLEAR^RCDPEAP(RCSCR) Q 0
"RTN","RCDPEAP1",40,0)
 ;Clear scratchpad
"RTN","RCDPEAP1",41,0)
 D CLEAR^RCDPEAP(RCSCR)
"RTN","RCDPEAP1",42,0)
 ;This is valid auto-post - return to MATCH^RCPDEM0
"RTN","RCDPEAP1",43,0)
 Q 1
"RTN","RCDPEAP1",44,0)
 ;
"RTN","RCDPEAP1",45,0)
AUTOCHK2(RCERA,RCTYP) ; RCTYP added PRCA*4.5*321
"RTN","RCDPEAP1",46,0)
 ;Check if this entry is an auto-post candidate
"RTN","RCDPEAP1",47,0)
 ;This has the same/similar checks as MATCH^RCDPEM0 and AUTOCHK above.  If those procedures are
"RTN","RCDPEAP1",48,0)
 ;  changed, this may need to updated as well.
"RTN","RCDPEAP1",49,0)
 ;
"RTN","RCDPEAP1",50,0)
 ;Input
"RTN","RCDPEAP1",51,0)
 ;  RCERA: IEN from Electronic Remittance Advice file (#344.4)
"RTN","RCDPEAP1",52,0)
 ;  RCTYP: Call type 0 = Worklist/Mark for autopost  1 = Manual match ; PRCA*4.5*321
"RTN","RCDPEAP1",53,0)
 ;Output
"RTN","RCDPEAP1",54,0)
 ;  1: Auto-Post candidate
"RTN","RCDPEAP1",55,0)
 ;  0^Reason: Not a auto-post candidate and reason
"RTN","RCDPEAP1",56,0)
 ;
"RTN","RCDPEAP1",57,0)
 ; Validate Parameter
"RTN","RCDPEAP1",58,0)
 I '$G(RCERA) Q "0^Invalid Parameter"
"RTN","RCDPEAP1",59,0)
 I $G(RCTYP)="" Q "0^Invalid Parameter" ; PRCA*4.5*321
"RTN","RCDPEAP1",60,0)
 I (RCTYP>1)!(RCTYP<0) Q "0^Invalid Parameter" ; PRCA*4.5*321
"RTN","RCDPEAP1",61,0)
 ;
"RTN","RCDPEAP1",62,0)
 N STATUS,RC0,RCERATYP,RCXCLDE,RCDSUB,NOTOK,RCCREATE,RCSCR
"RTN","RCDPEAP1",63,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP1",64,0)
 ;
"RTN","RCDPEAP1",65,0)
 ; Check if record exists
"RTN","RCDPEAP1",66,0)
 I '$D(^RCY(344.4,RCERA,0)) Q "0^Invalid ERA record"
"RTN","RCDPEAP1",67,0)
 ;
"RTN","RCDPEAP1",68,0)
 ; Check current status
"RTN","RCDPEAP1",69,0)
 S STATUS=$$GET1^DIQ(344.4,RCERA_",",4.02,"I")
"RTN","RCDPEAP1",70,0)
 I STATUS=0 Q "0^Already marked for Auto-Posting"
"RTN","RCDPEAP1",71,0)
 I STATUS=1 Q "0^Already partially Auto-Posted"
"RTN","RCDPEAP1",72,0)
 I STATUS=2 Q "0^Already completely Auto-Posted"
"RTN","RCDPEAP1",73,0)
 ;
"RTN","RCDPEAP1",74,0)
 ; Check for matching
"RTN","RCDPEAP1",75,0)
 I '$$GET1^DIQ(344.4,RCERA_",",.09,"I") Q "0^ERA not matched"
"RTN","RCDPEAP1",76,0)
 ;
"RTN","RCDPEAP1",77,0)
 ; Check for zero value ERA
"RTN","RCDPEAP1",78,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEAP1",79,0)
 I +$P(RC0,U,5)=0 Q "0^Zero value ERA"
"RTN","RCDPEAP1",80,0)
 ;
"RTN","RCDPEAP1",81,0)
 ; Determine if ERA should be excluded using the site parameters
"RTN","RCDPEAP1",82,0)
 S RCERATYP=$$PHARM(RCERA)
"RTN","RCDPEAP1",83,0)
 ;
"RTN","RCDPEAP1",84,0)
 ; Check if medical claim and auto-posting is turned off
"RTN","RCDPEAP1",85,0)
 I 'RCERATYP,'$P($G(^RCY(344.61,1,0)),U,2) Q "0^Medical auto-posting off"
"RTN","RCDPEAP1",86,0)
 ;
"RTN","RCDPEAP1",87,0)
 ; Check if pharmacy claim and auto-posting is turned off
"RTN","RCDPEAP1",88,0)
 I RCERATYP,'$P($G(^RCY(344.61,1,1)),U,1) Q "0^Pharmacy auto-posting off"
"RTN","RCDPEAP1",89,0)
 ;
"RTN","RCDPEAP1",90,0)
 ; Check if ERA payer is excluded from autopost
"RTN","RCDPEAP1",91,0)
 S RCXCLDE=0
"RTN","RCDPEAP1",92,0)
 S:'RCERATYP RCXCLDE=$$EXCLUDE(RCERA)
"RTN","RCDPEAP1",93,0)
 S:RCERATYP RCXCLDE=$$EXCLDRX(RCERA)
"RTN","RCDPEAP1",94,0)
 I RCXCLDE Q "0^"_$S(RCERATYP:"Pharmacy",1:"Medical")_" payer excluded"
"RTN","RCDPEAP1",95,0)
 ;
"RTN","RCDPEAP1",96,0)
 ; Check for invalid bill number exception
"RTN","RCDPEAP1",97,0)
 S RCDSUB=0,NOTOK=0
"RTN","RCDPEAP1",98,0)
 F  S RCDSUB=$O(^RCY(344.4,RCERA,1,RCDSUB)) Q:'RCDSUB  D  Q:NOTOK
"RTN","RCDPEAP1",99,0)
 . S RCD0=$G(^RCY(344.4,RCERA,1,RCDSUB,0))
"RTN","RCDPEAP1",100,0)
 . I $P(RCD0,U,5)]"" S NOTOK=1
"RTN","RCDPEAP1",101,0)
 I NOTOK Q "0^Invalid Bill Number Exception(s)"
"RTN","RCDPEAP1",102,0)
 ;
"RTN","RCDPEAP1",103,0)
 ; Check for ERA level Adjustments
"RTN","RCDPEAP1",104,0)
 I $O(^RCY(344.4,RCERA,2,0)) Q "0^ERA level Adjustment(s)"
"RTN","RCDPEAP1",105,0)
 ;
"RTN","RCDPEAP1",106,0)
 ; Check if receipt already created
"RTN","RCDPEAP1",107,0)
 I +$P(RC0,U,8) Q "0^ERA has a receipt"
"RTN","RCDPEAP1",108,0)
 ;
"RTN","RCDPEAP1",109,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEAP1",110,0)
 ; Check payment type of ERA - CHK type is allowed for a manual match
"RTN","RCDPEAP1",111,0)
 ;I "^ACH^CHK^"'[(U_$P(RC0,U,15)_U) Q "0^Payment Type is not ACH or CHK" ; PRCA*4.5*321
"RTN","RCDPEAP1",112,0)
 ; Check payment type of ERA - now also includes CHK, NON and BOP type from manual match
"RTN","RCDPEAP1",113,0)
 I "^ACH^CHK^BOP^NON^"'[(U_$P(RC0,U,15)_U) Q "0^Payment Type is not ACH, CHK, BOP or NON"
"RTN","RCDPEAP1",114,0)
 ;
"RTN","RCDPEAP1",115,0)
 ; CHK type ERA must be matched to an EFT to be eligible for mark for autopost
"RTN","RCDPEAP1",116,0)
 ;I $P(RC0,U,15)="CHK",'$O(^RCY(344.31,"AERA",RCERA,"")) Q "0^ERA is not matched to an EFT" ; PRCA*4.5*321
"RTN","RCDPEAP1",117,0)
 ;  CHK, NON and BOP type ERA must be matched to an EFT to be eligible for mark for autopost
"RTN","RCDPEAP1",118,0)
 I "^CHK^BOP^NON^"'[(U_$P(RC0,U,15)_U),'$O(^RCY(344.31,"AERA",RCERA,"")) Q "0^ERA is not matched to an EFT" ; 
"RTN","RCDPEAP1",119,0)
 ; END PRCA*4.5*326
"RTN","RCDPEAP1",120,0)
 ;
"RTN","RCDPEAP1",121,0)
 ; Create scratchpad if needed
"RTN","RCDPEAP1",122,0)
 S RCCREATE=0
"RTN","RCDPEAP1",123,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0))
"RTN","RCDPEAP1",124,0)
 I 'RCSCR S RCSCR=$$SCRPAD^RCDPEAP(RCERA) S RCCREATE=1
"RTN","RCDPEAP1",125,0)
 I 'RCSCR Q "0^Unable to create scratchpad"
"RTN","RCDPEAP1",126,0)
 ;
"RTN","RCDPEAP1",127,0)
 ; Check if claim level adjustments without payment exist
"RTN","RCDPEAP1",128,0)
 ; Note that PRCA*298 sets this temp global only if the scratchpad is created by the call above ($$SCRPAD^RCDPEAP). If the
"RTN","RCDPEAP1",129,0)
 ;   scratchpad already exists, the TMP global will never get set.   Looking at the code, it will mainly set if there
"RTN","RCDPEAP1",130,0)
 ;   are ERA level adjustments and may get set for unbalanced pairs, which is found by the ZEROBAL function.  So, I think
"RTN","RCDPEAP1",131,0)
 ;   this does not have a real purpose but was not 100% sure and wanted to mimic what AUTOCHK does.
"RTN","RCDPEAP1",132,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D:RCCREATE CLEAR^RCDPEAP(RCSCR) Q "0^Claim Level Adjustments w/o payment"
"RTN","RCDPEAP1",133,0)
 ;
"RTN","RCDPEAP1",134,0)
 ; Check if adjustment between matching positive/negative does not create a zero balance
"RTN","RCDPEAP1",135,0)
 I '$$ZEROBAL(RCSCR) D:RCCREATE CLEAR^RCDPEAP(RCSCR) Q "0^+/- pairs do not balance"
"RTN","RCDPEAP1",136,0)
 ;
"RTN","RCDPEAP1",137,0)
 ; Clear scratchpad if it was created by this function
"RTN","RCDPEAP1",138,0)
 D:RCCREATE CLEAR^RCDPEAP(RCSCR)
"RTN","RCDPEAP1",139,0)
 ;
"RTN","RCDPEAP1",140,0)
 ;If we got this far, this is an autopost candidate so quit with 1
"RTN","RCDPEAP1",141,0)
 Q 1
"RTN","RCDPEAP1",142,0)
 ;
"RTN","RCDPEAP1",143,0)
EXCLUDE(RCERA) ;Verify if auto-posting is allowed for this Payer - PRECHECK USED IN RCDPEM0
"RTN","RCDPEAP1",144,0)
 ;Not allowed if medical auto-posting is switched off
"RTN","RCDPEAP1",145,0)
 Q:'$P($G(^RCY(344.61,1,0)),U,2) 1
"RTN","RCDPEAP1",146,0)
 ;Check if Payer Name and Payer ID from ERA are in auto-posting payer table
"RTN","RCDPEAP1",147,0)
 N RCPNM,RCPID,RCPXDA
"RTN","RCDPEAP1",148,0)
 S RCPNM=$P($G(^RCY(344.4,RCERA,0)),U,6) Q:RCPNM="" 1
"RTN","RCDPEAP1",149,0)
 S RCPID=$P($G(^RCY(344.4,RCERA,0)),U,3) Q:RCPID="" 1
"RTN","RCDPEAP1",150,0)
 ;Auto-post is allowed if this is a new payer (not in table)
"RTN","RCDPEAP1",151,0)
 S RCPXDA=$O(^RCY(344.6,"CPID",RCPNM,RCPID,"")) Q:RCPXDA="" 0
"RTN","RCDPEAP1",152,0)
 ;If payer table entry found check if payer is excluded from medical auto-post
"RTN","RCDPEAP1",153,0)
 Q:$P($G(^RCY(344.6,RCPXDA,0)),U,6)=1 1
"RTN","RCDPEAP1",154,0)
 ;Otherwise it is OK to auto-post
"RTN","RCDPEAP1",155,0)
 Q 0
"RTN","RCDPEAP1",156,0)
 ;
"RTN","RCDPEAP1",157,0)
PHARM(RCERA) ;Check if ERA is for Pharmacy only (ECME number on first line) - CALLED FROM RCDPEM0
"RTN","RCDPEAP1",158,0)
 N SUB S SUB=$O(^RCY(344.4,RCERA,1,0)) Q:'SUB 0
"RTN","RCDPEAP1",159,0)
 Q:$P($G(^RCY(344.4,RCERA,1,SUB,4)),U,2)]"" 1
"RTN","RCDPEAP1",160,0)
 Q 0
"RTN","RCDPEAP1",161,0)
 ;
"RTN","RCDPEAP1",162,0)
ERADET(RCERA,RCRCPTDA,RCLINES) ; called on subsequent attempts of auto-post for a given ERA (DAY 2, DAY 3, ex.)
"RTN","RCDPEAP1",163,0)
 ;  update ERA with receipt or if not posted then update the AUTO-POST REJECTION REASON (#5)
"RTN","RCDPEAP1",164,0)
 ;
"RTN","RCDPEAP1",165,0)
 ; RCERA = ien of entry in file 344.4
"RTN","RCDPEAP1",166,0)
 ; RCRCPTDA = ien of receipt number (344, .01) - optional
"RTN","RCDPEAP1",167,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP1",168,0)
 ;
"RTN","RCDPEAP1",169,0)
 I '$G(RCERA) Q
"RTN","RCDPEAP1",170,0)
 S RCRCPTDA=$G(RCRCPTDA)
"RTN","RCDPEAP1",171,0)
 ;
"RTN","RCDPEAP1",172,0)
 N DA,DIC,DIE,DLAYGO,DO,DR,X
"RTN","RCDPEAP1",173,0)
 ; Update receipt.  If this is the first receipt, put it in the RECEIPT (#08) field.  If not, put in OTHER RECEIPTS multiple (#344.48)
"RTN","RCDPEAP1",174,0)
 I RCRCPTDA D
"RTN","RCDPEAP1",175,0)
 . I $P($G(^RCY(344.4,RCERA,0)),U,8)]"" S DA(1)=RCERA,DIC="^RCY(344.4,"_DA(1)_",8,",DIC(0)="L",X=RCRCPTDA D FILE^DICN I 1
"RTN","RCDPEAP1",176,0)
 . E  S DIE="^RCY(344.4,",DR=".14////1;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP1",177,0)
 ;
"RTN","RCDPEAP1",178,0)
 ; Update ERA detail line with Receipt or reject reason as appropriate
"RTN","RCDPEAP1",179,0)
 ; PRCA*4.5*318 begins
"RTN","RCDPEAP1",180,0)
 N RCLIN,REJECT
"RTN","RCDPEAP1",181,0)
 S RCLIN=0
"RTN","RCDPEAP1",182,0)
 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP1",183,0)
 . ; Set REJECT to true if the line was rejected during validation
"RTN","RCDPEAP1",184,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP1",185,0)
 . ;If not posted then update the AUTO-POST REJECTION REASON (#5)
"RTN","RCDPEAP1",186,0)
 . ;Otherwise update line with receipt number and autopost date
"RTN","RCDPEAP1",187,0)
 . S DA(1)=RCERA,DA=RCLIN,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP1",188,0)
 . I 'REJECT,'RCRCPTDA Q
"RTN","RCDPEAP1",189,0)
 . I REJECT S DR="5///"_$P(RCLINES(RCLIN),U,3)
"RTN","RCDPEAP1",190,0)
 . E  S DR=".25///"_RCRCPTDA_";9///"_DT
"RTN","RCDPEAP1",191,0)
 . D ^DIE
"RTN","RCDPEAP1",192,0)
 ; PRCA*4.5*318 ends
"RTN","RCDPEAP1",193,0)
 Q
"RTN","RCDPEAP1",194,0)
 ;
"RTN","RCDPEAP1",195,0)
ZEROBAL(RCSCR) ;
"RTN","RCDPEAP1",196,0)
 ; per requirements, only positive/negative payment pairs where payment 
"RTN","RCDPEAP1",197,0)
 ; calculates to zero are allowed for auto-post
"RTN","RCDPEAP1",198,0)
 ; if payment ends up less than zero or greater than zero then ERA cannot
"RTN","RCDPEAP1",199,0)
 ;be autoposted.  
"RTN","RCDPEAP1",200,0)
 ; ERA gets sent to the standard worklist for manual receipt processing
"RTN","RCDPEAP1",201,0)
 ; note:  a payment pair represents 2 EEOB sequences with the same claim
"RTN","RCDPEAP1",202,0)
 ;         RCSCR - 344.49 ien
"RTN","RCDPEAP1",203,0)
 ;         X - returns 1 or 0
"RTN","RCDPEAP1",204,0)
 ; 
"RTN","RCDPEAP1",205,0)
 N SUB,SUB1,WLINE,X,ERALINE
"RTN","RCDPEAP1",206,0)
 S SUB=0,X=1,ERALINE=""
"RTN","RCDPEAP1",207,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP1",208,0)
 . ;Get scratchpad line and data 
"RTN","RCDPEAP1",209,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1  S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAP1",210,0)
 . ;If integer sequence, get ERA line reference then quit for this sequence and go on to the non-integer sequence to finish validation
"RTN","RCDPEAP1",211,0)
 . I $P(WLINE,U)?1N.N S ERALINE=$P(WLINE,U,9) Q 
"RTN","RCDPEAP1",212,0)
 . ; there are multiple EEOB sequences for the specific bill number so an adjustment took place; 
"RTN","RCDPEAP1",213,0)
 . ; if payment adjustment doesn't generate a zero payment balance at 344.491,.06 then this ERA needs to drop to standard worklist
"RTN","RCDPEAP1",214,0)
 . I ERALINE[",",+$P(WLINE,U,6)'=0 S X=0 Q
"RTN","RCDPEAP1",215,0)
 . ;do not autopost ERA if one of payments is negative amount
"RTN","RCDPEAP1",216,0)
 . I $P(WLINE,U,6)<0 S X=0
"RTN","RCDPEAP1",217,0)
 Q X
"RTN","RCDPEAP1",218,0)
 ;
"RTN","RCDPEAP1",219,0)
 ; Verify if auto-posting is allowed for Pharmacy claims and for the Payer - PRECHECK USED IN RCDPEM0
"RTN","RCDPEAP1",220,0)
EXCLDRX(RCERA) ;
"RTN","RCDPEAP1",221,0)
 ;Not allowed if pharmacy auto-posting is switched off
"RTN","RCDPEAP1",222,0)
 Q:'$P($G(^RCY(344.61,1,1)),U,1) 1
"RTN","RCDPEAP1",223,0)
 ;Check if Payer Name and Payer ID from ERA are in auto-posting payer table
"RTN","RCDPEAP1",224,0)
 N RCPNM,RCPID,RCPXDA
"RTN","RCDPEAP1",225,0)
 S RCPNM=$P($G(^RCY(344.4,RCERA,0)),U,6) Q:RCPNM="" 1
"RTN","RCDPEAP1",226,0)
 S RCPID=$P($G(^RCY(344.4,RCERA,0)),U,3) Q:RCPID="" 1
"RTN","RCDPEAP1",227,0)
 ;Auto-post is allowed if this is a new payer (not in table)
"RTN","RCDPEAP1",228,0)
 S RCPXDA=$O(^RCY(344.6,"CPID",RCPNM,RCPID,"")) Q:RCPXDA="" 0
"RTN","RCDPEAP1",229,0)
 ;If payer table entry found check if payer is excluded from pharmacy auto-post
"RTN","RCDPEAP1",230,0)
 Q:$P($G(^RCY(344.6,RCPXDA,0)),U,8)=1 1
"RTN","RCDPEAP1",231,0)
 ;Otherwise it is OK to auto-post
"RTN","RCDPEAP1",232,0)
 Q 0
"RTN","RCDPEAP1",233,0)
 ;
"RTN","RCDPEAP1",234,0)
VALID(RCERA,RCLINES) ;
"RTN","RCDPEAP1",235,0)
 ;Verify which scratchpad lines are able to auto-post - called by EN2^RCDPEAP
"RTN","RCDPEAP1",236,0)
 ;
"RTN","RCDPEAP1",237,0)
 ; RCERA - Electronic Remittance Advice (#344.4) IEN
"RTN","RCDPEAP1",238,0)
 ; RCLINES - Array of ERA line references (passed in by reference)
"RTN","RCDPEAP1",239,0)
 ;           RCLINES(ERALINE)=1  - ERA line(s) are postable.  Also RCLINES counter is incremented.
"RTN","RCDPEAP1",240,0)
 ;           RCLINES(ERALINE)=0^^Reject Reason Code - ERA line(s) are not postable
"RTN","RCDPEAP1",241,0)
 ;           NOTE: ORIGINAL ERA SEQUENCES (#.09) can have multiple ERA line references separated by commas (e.g.,"3,4")
"RTN","RCDPEAP1",242,0)
 ;
"RTN","RCDPEAP1",243,0)
 ;Check for ScratchPad entry.  If missing (should not happen), quit
"RTN","RCDPEAP1",244,0)
 N RCSCR
"RTN","RCDPEAP1",245,0)
 S RCSCR=$O(^RCY(344.49,"B",+$G(RCERA),""))
"RTN","RCDPEAP1",246,0)
 I RCSCR="" S RCLINES=0 Q
"RTN","RCDPEAP1",247,0)
 ;Loop through scratchpad for this ERA
"RTN","RCDPEAP1",248,0)
 N SUB,SUB1,WLINE,ERALINE,PIECE,SEQ,CLAIM,STATUS,CLARRAY,AUTOPOST
"RTN","RCDPEAP1",249,0)
 S SUB=0 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP1",250,0)
 . ;Get scratchpad line and data
"RTN","RCDPEAP1",251,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,""))
"RTN","RCDPEAP1",252,0)
 . I 'SUB1 Q
"RTN","RCDPEAP1",253,0)
 . S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAP1",254,0)
 . ;If integer sequence, get ERA line reference and check for auto-post flag
"RTN","RCDPEAP1",255,0)
 . I $P(WLINE,U)?1N.N D  Q
"RTN","RCDPEAP1",256,0)
 .. S ERALINE=$P(WLINE,U,9)
"RTN","RCDPEAP1",257,0)
 .. ; If ERA reference is missing (should not happen), skip ahead to next integer sequence
"RTN","RCDPEAP1",258,0)
 .. I ERALINE="" S SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",259,0)
 .. ; Check for receipt - PRCA*4.5*318 
"RTN","RCDPEAP1",260,0)
 .. I $$GET1^DIQ(344.41,ERALINE_","_RCERA_",",.25)]"" S SUB=SUB\1_".999" Q  ; PRCA*4.5*318
"RTN","RCDPEAP1",261,0)
 .. S AUTOPOST=1
"RTN","RCDPEAP1",262,0)
 .. F PIECE=1:1 S SEQ=$P(ERALINE,",",PIECE) Q:'SEQ  I '$P($G(^RCY(344.4,RCERA,1,SEQ,5)),U,2) S AUTOPOST=0 Q
"RTN","RCDPEAP1",263,0)
 .. ; Unless all of the associated ERA detail lines are set for auto-post, skip ahead to next integer sequence
"RTN","RCDPEAP1",264,0)
 .. I 'AUTOPOST S SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",265,0)
 . ;If no claim number (suspense), set to autopost but check the rest of the lines for the ERA reference
"RTN","RCDPEAP1",266,0)
 . S CLAIM=$P(WLINE,U,7)
"RTN","RCDPEAP1",267,0)
 . I 'CLAIM S RCLINES(ERALINE)=1 Q
"RTN","RCDPEAP1",268,0)
 . ;Quit with error if claim is not OPEN or ACTIVE
"RTN","RCDPEAP1",269,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8)
"RTN","RCDPEAP1",270,0)
 . I STATUS'=42,STATUS'=16 S RCLINES(ERALINE)="0^^5",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",271,0)
 . ;Quit with error if referred to general council
"RTN","RCDPEAP1",272,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S RCLINES(ERALINE)="0^^7",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",273,0)
 . ;Check for negative payment amount
"RTN","RCDPEAP1",274,0)
 . I $P(WLINE,U,6)<0 S RCLINES(ERALINE)="0^^6",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",275,0)
 . ;Increment claim balance.  If payment exceeds claim balance and no pending payments (at the time of auto posting), quit
"RTN","RCDPEAP1",276,0)
 . ;  with error.  Also deduct the amount from the balance so subsequent, smaller amounts may get posted
"RTN","RCDPEAP1",277,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3)
"RTN","RCDPEAP1",278,0)
 . I '$$CHECKPAY^RCDPEAP(.CLARRAY,CLAIM) S RCLINES(ERALINE)="0^^3",SUB=SUB\1_".999",CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))-$P(WLINE,U,3) Q
"RTN","RCDPEAP1",279,0)
 . ;Line is potentially postable - update flag
"RTN","RCDPEAP1",280,0)
 . S RCLINES(ERALINE)=1
"RTN","RCDPEAP1",281,0)
 ;
"RTN","RCDPEAP1",282,0)
 ;Reset the MARK FOR AUTOPOST flag on ERA lines and return count of auto-postable lines - PRCA*4.5*318
"RTN","RCDPEAP1",283,0)
 N DA,DIE,DR,RCLIN,RCI
"RTN","RCDPEAP1",284,0)
 S RCLIN=0,RCLINES=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP1",285,0)
 . I +RCLINES(RCLIN) S RCLINES=RCLINES+1
"RTN","RCDPEAP1",286,0)
 . ;Set MARK FOR AUTO-POST (#6) to NO for every line
"RTN","RCDPEAP1",287,0)
 . S DA(1)=RCERA,DA=RCLIN,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP1",288,0)
 . S DR="6///0"
"RTN","RCDPEAP1",289,0)
 . D ^DIE
"RTN","RCDPEAP1",290,0)
 Q
"RTN","RCDPEAP1",291,0)
 ;
"RTN","RCDPEAP1",292,0)
UNBAL(RCERA) ; PRCA*4.5*318 added method
"RTN","RCDPEAP1",293,0)
 ; Determine if the ERA total matches the EFT total for the selected ERA
"RTN","RCDPEAP1",294,0)
 ; Input:   RCERA    - Internal IEN of the selected ERA
"RTN","RCDPEAP1",295,0)
 ; Returns: 1 - ERA is unbalanced, 0 otherwise
"RTN","RCDPEAP1",296,0)
 N RCLTOT,RCSUB,RCTOT
"RTN","RCDPEAP1",297,0)
 ;ERA total balance - on matched ERAs the ERA total balance is the same as the EFT total
"RTN","RCDPEAP1",298,0)
 S RCTOT=+$$GET1^DIQ(344.4,RCERA_",",.05)
"RTN","RCDPEAP1",299,0)
 ;Sum of ERA claim line payments
"RTN","RCDPEAP1",300,0)
 S RCSUB=0,RCLTOT=0
"RTN","RCDPEAP1",301,0)
 F  S RCSUB=$O(^RCY(344.4,RCERA,1,RCSUB)) Q:'RCSUB  D
"RTN","RCDPEAP1",302,0)
 . S RCLTOT=RCLTOT+$$GET1^DIQ(344.41,RCSUB_","_RCERA_",",.03)
"RTN","RCDPEAP1",303,0)
 ;Plus sum of ERA adjustment lines
"RTN","RCDPEAP1",304,0)
 S RCSUB=0
"RTN","RCDPEAP1",305,0)
 F  S RCSUB=$O(^RCY(344.4,RCERA,2,RCSUB)) Q:'RCSUB  D
"RTN","RCDPEAP1",306,0)
 . S RCLTOT=RCLTOT+$$GET1^DIQ(344.42,RCSUB_","_RCERA_",",.03)
"RTN","RCDPEAP1",307,0)
 ;Return 1 if total of ERA lines does not match EFT
"RTN","RCDPEAP1",308,0)
 Q $S(RCTOT=RCLTOT:0,1:1)
"RTN","RCDPEAPP")
0^34^B188964958
"RTN","RCDPEAPP",1,0)
RCDPEAPP ;OIFO-BAYPINES/PJH - AUTO POST REPORT ;Dec 20, 2014@18:42
"RTN","RCDPEAPP",2,0)
 ;;4.5;Accounts Receivable;**298,304,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAPP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAPP",4,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPEAPP",5,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPEAPP",6,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAPP",7,0)
 ;Use DIVISION^VAUTOMA via Controlled IA 664
"RTN","RCDPEAPP",8,0)
 ; PRCA*4.5*326 - Extensive re-write of this routine to add selection/sort by Payer TIN
"RTN","RCDPEAPP",9,0)
RPT ; entry point for Auto-Post Report [RCDPE AUTO-POST REPORT]
"RTN","RCDPEAPP",10,0)
 N POP,RCDISP,RCDIV,RCDIVS,RCDTRNG,RCJOB,RCLAIM,RCPAGE,RCPAR,RCPARRAY,RCPAY,RCPROG,RCRANGE
"RTN","RCDPEAPP",11,0)
 N RCSORT,RCTYPE,RCWHICH,STANAM,STANUM,X,Y
"RTN","RCDPEAPP",12,0)
 S (RCDTRNG,RCPAGE)=0,RCPROG="RCDPEAPP",RCJOB=$J    ; Initialize page and start point
"RTN","RCDPEAPP",13,0)
 S RCDIV=$$STADIV(.RCDIVS) Q:'RCDIV                 ; Select Filter/Sort by Division
"RTN","RCDPEAPP",14,0)
 S RCTYPE=$$DETORSUM() Q:RCTYPE=-1                  ; Detail or Summary mode
"RTN","RCDPEAPP",15,0)
 ;
"RTN","RCDPEAPP",16,0)
 S RCLAIM=$$RTYPE^RCDPEU1() Q:RCLAIM=-1             ; PRCA*4.5*326 - Add Tricare filter to Med/Pharm/Both
"RTN","RCDPEAPP",17,0)
 S RCWHICH=$$NMORTIN() Q:RCWHICH=-1                 ; PRCA*4.5*326 - Filter by Payer Name or TIN
"RTN","RCDPEAPP",18,0)
 ;
"RTN","RCDPEAPP",19,0)
 S RCPAR("SELC")=$$PAYRNG^RCDPEU1(0,1,RCWHICH)      ; PRCA*4.5*326 - Selected or Range of Payers
"RTN","RCDPEAPP",20,0)
 Q:RCPAR("SELC")=-1                                 ; PRCA*4.5*326 '^' or timeout
"RTN","RCDPEAPP",21,0)
 S RCPAY=RCPAR("SELC")
"RTN","RCDPEAPP",22,0)
 ;
"RTN","RCDPEAPP",23,0)
 I RCPAR("SELC")'="A" D  Q:XX=-1                    ; PRCA*4.5*326 - Since we don't want all payers 
"RTN","RCDPEAPP",24,0)
 . S RCPAR("TYPE")=RCLAIM
"RTN","RCDPEAPP",25,0)
 . S RCPAR("SRCH")=$S(RCWHICH=2:"T",1:"N")          ; prompt for payers we do want
"RTN","RCDPEAPP",26,0)
 . S RCPAR("FILE")=344.4
"RTN","RCDPEAPP",27,0)
 . S RCPAR("DICA")="Select Insurance Company"_$S(RCWHICH=1:" NAME: ",1:" TIN: ")
"RTN","RCDPEAPP",28,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPEAPP",29,0)
 ;
"RTN","RCDPEAPP",30,0)
 S RCSORT=$$SORTT() Q:RCSORT=-1                     ; Select Sort
"RTN","RCDPEAPP",31,0)
 S RCRANGE=$$DTRNG() Q:RCRANGE=0                    ; Select Date Range for Report
"RTN","RCDPEAPP",32,0)
 S RCDISP=$$DISPTY() Q:RCDISP=-1                    ; Output to Excel?    
"RTN","RCDPEAPP",33,0)
 I RCDISP D INFO^RCDPEM6                            ; Display capture information for Excel
"RTN","RCDPEAPP",34,0)
 ;
"RTN","RCDPEAPP",35,0)
 ; PRCA*4.5*304 - If not Excel, inform user to make sure printer/screen will display 132
"RTN","RCDPEAPP",36,0)
 ; columns
"RTN","RCDPEAPP",37,0)
 I 'RCDISP W !,"This report requires 132 column display."
"RTN","RCDPEAPP",38,0)
 S %ZIS="QM" D ^%ZIS Q:POP                          ; Select output device
"RTN","RCDPEAPP",39,0)
 ;
"RTN","RCDPEAPP",40,0)
 ; Option to queue
"RTN","RCDPEAPP",41,0)
 I 'RCDISP,$D(IO("Q")) D  Q
"RTN","RCDPEAPP",42,0)
 . N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEAPP",43,0)
 . S ZTRTN="REPORT^RCDPEAPP"
"RTN","RCDPEAPP",44,0)
 . S ZTDESC="EDI LOCKBOX AUTO POST REPORT"
"RTN","RCDPEAPP",45,0)
 . S ZTSAVE("RC*")="" ;**FA** ,ZTSAVE("VAUTD")=""
"RTN","RCDPEAPP",46,0)
 . S ZTSAVE("^TMP(""RCDPEU1"",$J,")="" ; PRCA*4.5*326
"RTN","RCDPEAPP",47,0)
 . D ^%ZTLOAD
"RTN","RCDPEAPP",48,0)
 . I $D(ZTSK) W !!,"Task number "_ZTSK_" was queued."
"RTN","RCDPEAPP",49,0)
 . E  W !!,"Unable to queue this job."
"RTN","RCDPEAPP",50,0)
 . K IO("Q")
"RTN","RCDPEAPP",51,0)
 . D HOME^%ZIS
"RTN","RCDPEAPP",52,0)
 ;
"RTN","RCDPEAPP",53,0)
 D REPORT                                           ; Compile and print report
"RTN","RCDPEAPP",54,0)
 Q
"RTN","RCDPEAPP",55,0)
 ;
"RTN","RCDPEAPP",56,0)
STADIV(DIVS) ; Division/Station Filter/Sort
"RTN","RCDPEAPP",57,0)
 ; Input:   None
"RTN","RCDPEAPP",58,0)
 ; Output:  DIVS(A1)=A1^A3 Selected Divisions (if not 'ALL') Where:
"RTN","RCDPEAPP",59,0)
 ;           A1 - Division IEN
"RTN","RCDPEAPP",60,0)
 ;           A2 - Division Name
"RTN","RCDPEAPP",61,0)
 ;           A3 - Station Number
"RTN","RCDPEAPP",62,0)
 ; Returns: -1 - User ^ or timed out
"RTN","RCDPEAPP",63,0)
 ;           1 - All divisions selected
"RTN","RCDPEAPP",64,0)
 ;           2 - Selected Divisions
"RTN","RCDPEAPP",65,0)
 N DIR,DIRUT,DIROUT,DIV,DTOUT,DUOUT,STNUM,VAUTD,Y
"RTN","RCDPEAPP",66,0)
 D DIVISION^VAUTOMA Q:Y<0 -1                ; IA 664
"RTN","RCDPEAPP",67,0)
 I VAUTD=1 S RCDIV=1 Q 1                    ; All Divisions selected
"RTN","RCDPEAPP",68,0)
 K DIVS
"RTN","RCDPEAPP",69,0)
 S DIV=""
"RTN","RCDPEAPP",70,0)
 F  D  Q:DIV=""
"RTN","RCDPEAPP",71,0)
 . S DIV=$O(VAUTD(DIV))
"RTN","RCDPEAPP",72,0)
 . Q:DIV=""
"RTN","RCDPEAPP",73,0)
 . S STNUM=$$GET1^DIQ(40.8,DIV,1,"E")
"RTN","RCDPEAPP",74,0)
 . S:STNUM="" STNUM="UNKNOWN"
"RTN","RCDPEAPP",75,0)
 . S DIVS(DIV)=VAUTD(DIV)_"^"_STNUM
"RTN","RCDPEAPP",76,0)
 Q 2                                        ; Some Divisions selected
"RTN","RCDPEAPP",77,0)
 ;
"RTN","RCDPEAPP",78,0)
DETORSUM() ; Ask the user wants to see the detail or summary report
"RTN","RCDPEAPP",79,0)
 ; Input:   None
"RTN","RCDPEAPP",80,0)
 ; Returns: -1 - User ^ or timed out
"RTN","RCDPEAPP",81,0)
 ;           D - Detail Mode
"RTN","RCDPEAPP",82,0)
 ;           S - Summary Mode
"RTN","RCDPEAPP",83,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y
"RTN","RCDPEAPP",84,0)
 S DIR(0)="SA^S:SUMMARY;D:DETAIL;",DIR("A")="Display (S)UMMARY or (D)ETAIL Format?: "
"RTN","RCDPEAPP",85,0)
 S DIR("B")="DETAIL"
"RTN","RCDPEAPP",86,0)
 S XX="Select 'SUMMARY' to see the summary report or "
"RTN","RCDPEAPP",87,0)
 S DIR("?")=XX_"'DETAIL' to see the detail report"
"RTN","RCDPEAPP",88,0)
 D ^DIR
"RTN","RCDPEAPP",89,0)
 Q:$D(DTOUT)!$D(DUOUT) -1
"RTN","RCDPEAPP",90,0)
 Q Y
"RTN","RCDPEAPP",91,0)
 ;
"RTN","RCDPEAPP",92,0)
NMORTIN() ; EP - Ask the user if they want to filter by Payer Name or TIN
"RTN","RCDPEAPP",93,0)
 ; Input:   None
"RTN","RCDPEAPP",94,0)
 ; Returns: -1 - User ^ or timed out
"RTN","RCDPEAPP",95,0)
 ;           1 - Filter by Payer Name
"RTN","RCDPEAPP",96,0)
 ;           2 - Filter by Payer TIN
"RTN","RCDPEAPP",97,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEAPP",98,0)
 S DIR(0)="SA^N:NAME;T:TIN;"
"RTN","RCDPEAPP",99,0)
 S DIR("A")="Select Insurance Companies by NAME or TIN: "
"RTN","RCDPEAPP",100,0)
 S DIR("B")="TIN"
"RTN","RCDPEAPP",101,0)
 S DIR("?")="Select 'NAME' to select Payers by name or 'TIN' to select Payers by TIN"
"RTN","RCDPEAPP",102,0)
 D ^DIR
"RTN","RCDPEAPP",103,0)
 Q:$D(DTOUT)!$D(DUOUT) -1
"RTN","RCDPEAPP",104,0)
 Q:Y="N" 1
"RTN","RCDPEAPP",105,0)
 Q 2
"RTN","RCDPEAPP",106,0)
 ;
"RTN","RCDPEAPP",107,0)
SELPAY(RCJOB,RCPARRAY) ; Move ^TMP("RCSELPAY",RCJOB) into RCPARRAY for lookup
"RTN","RCDPEAPP",108,0)
 ; note that payer names for 344.4 are UPPER CASE
"RTN","RCDPEAPP",109,0)
 ; Input:   RCJOB                   - $J
"RTN","RCDPEAPP",110,0)
 ;          ^TMP("RCSELPAY",RCJOB,) - Temp array of selected Payers
"RTN","RCDPEAPP",111,0)
 ; Output:  RCPARRAY(A1,A2)=A3      - Array of selected Payers Where:
"RTN","RCDPEAPP",112,0)
 ;                                     A1 - Payer Name or TIN based on the way ^TMP("RCSELPAY" was built
"RTN","RCDPEAPP",113,0)
 ;                                     A2 - Counter
"RTN","RCDPEAPP",114,0)
 ;                                     A3 - Payer Name/TIN or TIN/Payer Name based on the way ^TMP("RCSELPAY" was built
"RTN","RCDPEAPP",115,0)
 N PAYER,PSUB
"RTN","RCDPEAPP",116,0)
 S PSUB=0
"RTN","RCDPEAPP",117,0)
 F  S PSUB=$O(^TMP("RCSELPAY",RCJOB,PSUB)) Q:'PSUB  D
"RTN","RCDPEAPP",118,0)
 . S PAYER=$G(^TMP("RCSELPAY",RCJOB,PSUB))
"RTN","RCDPEAPP",119,0)
 . S:PAYER'="" RCPARRAY($P(PAYER,"/",1),PSUB)=PAYER
"RTN","RCDPEAPP",120,0)
 Q
"RTN","RCDPEAPP",121,0)
 ;
"RTN","RCDPEAPP",122,0)
SORTT() ; Ask the user if they want to sort by Payer Name or Payer TIN
"RTN","RCDPEAPP",123,0)
 ; Input:   None
"RTN","RCDPEAPP",124,0)
 ; Returns: -1 - User ^ or timed out
"RTN","RCDPEAPP",125,0)
 ;           0 - Sort by Payer Name
"RTN","RCDPEAPP",126,0)
 ;           1 - Sort by Payer TIN
"RTN","RCDPEAPP",127,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEAPP",128,0)
 S DIR(0)="SA^N:NAME;T:TIN;"
"RTN","RCDPEAPP",129,0)
 S DIR("A")="Sort by Insurance Company NAME or TIN: "
"RTN","RCDPEAPP",130,0)
 S DIR("B")="TIN"
"RTN","RCDPEAPP",131,0)
 S DIR("?",1)="Select 'NAME' to sort by Division/Payer Name or"
"RTN","RCDPEAPP",132,0)
 S DIR("?")="select 'TIN' to sort by Division/Payer TIN"
"RTN","RCDPEAPP",133,0)
 D ^DIR
"RTN","RCDPEAPP",134,0)
 Q:$D(DTOUT)!$D(DUOUT) -1
"RTN","RCDPEAPP",135,0)
 Q:Y="N" 0
"RTN","RCDPEAPP",136,0)
 Q 1
"RTN","RCDPEAPP",137,0)
 ;
"RTN","RCDPEAPP",138,0)
DTRNG() ; Get the date range for the report
"RTN","RCDPEAPP",139,0)
 ; Input:   None
"RTN","RCDPEAPP",140,0)
 ; Returns: 0 - User ^ or timed out
"RTN","RCDPEAPP",141,0)
 ;          1^Start Date^End Date
"RTN","RCDPEAPP",142,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,RCEND,RNGFLG,RCSTART,X,Y
"RTN","RCDPEAPP",143,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEAPP",144,0)
 Q:RCSTART=-1 0
"RTN","RCDPEAPP",145,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPEAPP",146,0)
 Q:'RCSTART "0^^"
"RTN","RCDPEAPP",147,0)
 Q 0
"RTN","RCDPEAPP",148,0)
 ;
"RTN","RCDPEAPP",149,0)
DISPTY() ; Get display/output type
"RTN","RCDPEAPP",150,0)
 ; Input:   None
"RTN","RCDPEAPP",151,0)
 ; Return:: -1 - User ^ or timed out
"RTN","RCDPEAPP",152,0)
 ;           0 - Not to Excel
"RTN","RCDPEAPP",153,0)
 ;           1 - Output to Excel
"RTN","RCDPEAPP",154,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEAPP",155,0)
 S DIR(0)="Y"
"RTN","RCDPEAPP",156,0)
 S DIR("A")="Export the report to Microsoft Excel"
"RTN","RCDPEAPP",157,0)
 S DIR("B")="NO"
"RTN","RCDPEAPP",158,0)
 D ^DIR
"RTN","RCDPEAPP",159,0)
 Q:$D(DTOUT)!$D(DUOUT) -1
"RTN","RCDPEAPP",160,0)
 Q Y
"RTN","RCDPEAPP",161,0)
 ;
"RTN","RCDPEAPP",162,0)
DATES(BDATE,EDATE) ; Get a date range.
"RTN","RCDPEAPP",163,0)
 ; Input:   None
"RTN","RCDPEAPP",164,0)
 ; Output:  BDATE   - Internal Begin date
"RTN","RCDPEAPP",165,0)
 ;          EDATE   - Internal End date
"RTN","RCDPEAPP",166,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEAPP",167,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEAPP",168,0)
 S DIR("?")="Enter the earliest Auto-Posting date to include on the report"
"RTN","RCDPEAPP",169,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: "
"RTN","RCDPEAPP",170,0)
 D ^DIR K DIR
"RTN","RCDPEAPP",171,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEAPP",172,0)
 S BDATE=Y
"RTN","RCDPEAPP",173,0)
 S DIR("?")="Enter the latest Auto-Posting date to include on the report"
"RTN","RCDPEAPP",174,0)
 S DIR("B")=Y(0)
"RTN","RCDPEAPP",175,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="End Date: "
"RTN","RCDPEAPP",176,0)
 D ^DIR K DIR
"RTN","RCDPEAPP",177,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEAPP",178,0)
 S EDATE=Y
"RTN","RCDPEAPP",179,0)
 Q
"RTN","RCDPEAPP",180,0)
 ;
"RTN","RCDPEAPP",181,0)
REPORT ; Compile and print report
"RTN","RCDPEAPP",182,0)
 ; Input:   RCDISP  - 0 - Output to paper or screen, 1 - Output to Excel
"RTN","RCDPEAPP",183,0)
 ;          RCDIV   - 1 - All divisions, 2 - Selected divisions
"RTN","RCDPEAPP",184,0)
 ;          RCDIVS()- Array of selected divisions if RCDIV=2
"RTN","RCDPEAPP",185,0)
 ;          RCRANGE - 1^Start Date^End Date
"RTN","RCDPEAPP",186,0)
 ;          RCJOB   - $J
"RTN","RCDPEAPP",187,0)
 ;          RCLAIM  - "M" - Medical Claims, "P" - Pharmacy Claims, "B" - Both
"RTN","RCDPEAPP",188,0)
 ;          RCPAGE  - Initialized to 0
"RTN","RCDPEAPP",189,0)
 ;          RCPARRAY- Array of selected payers 
"RTN","RCDPEAPP",190,0)
 ;          RCPROG  - "RCDPEAPP"
"RTN","RCDPEAPP",191,0)
 ;          RCSORT  - 0 - Sort by Payer Name, 1 - Sort by Payer TIN
"RTN","RCDPEAPP",192,0)
 ;          RCTYPE  - 'D' for detail report, 'S' for summary
"RTN","RCDPEAPP",193,0)
 ;          RCWHICH - 1 - Filter by Payer Name, 2 - Filter by Payer TIN
"RTN","RCDPEAPP",194,0)
 ;          ^TMP("RCDPEU1",$J) - Selected payerers (see SELPAY^RCDPEU1 for details)
"RTN","RCDPEAPP",195,0)
 ;
"RTN","RCDPEAPP",196,0)
 N GLOB,GTOTAL,ZTREQ
"RTN","RCDPEAPP",197,0)
 K ^TMP(RCPROG,$J),^TMP("RCDPEAPP2",$J)
"RTN","RCDPEAPP",198,0)
 S GLOB=$NA(^TMP(RCPROG,$J))
"RTN","RCDPEAPP",199,0)
 D COMPILE^RCDPEAPQ                         ; Scan ERA file for entries in date range
"RTN","RCDPEAPP",200,0)
 D DISP                                     ; Display the Report
"RTN","RCDPEAPP",201,0)
 ;
"RTN","RCDPEAPP",202,0)
 ; Clear ^TMP global
"RTN","RCDPEAPP",203,0)
 K ^TMP(RCPROG,$J),^TMP("RCSELPAY",RCJOB),^TMP("RCDPEAPP2",$J),^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPEAPP",204,0)
 Q
"RTN","RCDPEAPP",205,0)
 ;
"RTN","RCDPEAPP",206,0)
DISP ; Format the display for screen/printer or MS Excel
"RTN","RCDPEAPP",207,0)
 ; Input:   GLOB    - "^TMP("RCDPEAPP",$J)
"RTN","RCDPEAPP",208,0)
 ;          RCDISP  - 1 - Output to Excel, 0 otherwise
"RTN","RCDPEAPP",209,0)
 ;          RCDIV   - 1 - All Divisions selected
"RTN","RCDPEAPP",210,0)
 ;          RCDIVS  - Array of selected Divisions (if all not selected)
"RTN","RCDPEAPP",211,0)
 ;          RCPARRAY- Array of selected Payers
"RTN","RCDPEAPP",212,0)
 ;          RCPAY   - 1 - All Payers selected
"RTN","RCDPEAPP",213,0)
 N DIVS,LINE1,LINE2,PAYERS,RCDATA,RCHDRDT,RCSTOP,SUB,SUB1,SUB2,SUB3
"RTN","RCDPEAPP",214,0)
 S RCHDRDT=$$FMTE^XLFDT($$NOW^XLFDT,"2SZ")       ; Date/time for header
"RTN","RCDPEAPP",215,0)
 S LINE1=$TR($J("",131)," ","-"),LINE2=$TR(LINE1,"-","=")
"RTN","RCDPEAPP",216,0)
 U IO
"RTN","RCDPEAPP",217,0)
 ;
"RTN","RCDPEAPP",218,0)
 ; Report by division or 'ALL'
"RTN","RCDPEAPP",219,0)
 D LINED(RCDIV,.RCDIVS,.DIVS)                   ; Format Division filter
"RTN","RCDPEAPP",220,0)
 D LINEP(RCPAY,.RCPARRAY,RCWHICH,.PAYERS)       ; Format Payer filter
"RTN","RCDPEAPP",221,0)
 S SUB="",RCSTOP=0
"RTN","RCDPEAPP",222,0)
 F  S SUB=$O(@GLOB@(SUB)) Q:SUB=""  D  Q:RCSTOP
"RTN","RCDPEAPP",223,0)
 . D HDR(.DIVS,.PAYERS)                         ; Display Header
"RTN","RCDPEAPP",224,0)
 . I 'RCDISP D
"RTN","RCDPEAPP",225,0)
 . . W !,"DIVISION: ",SUB
"RTN","RCDPEAPP",226,0)
 . . W:RCTYPE="S" !,LINE1
"RTN","RCDPEAPP",227,0)
 . S SUB1=""                                    ; Division
"RTN","RCDPEAPP",228,0)
 . F  S SUB1=$O(@GLOB@(SUB,SUB1)) Q:SUB1=""  D  Q:RCSTOP
"RTN","RCDPEAPP",229,0)
 . . S SUB2=""
"RTN","RCDPEAPP",230,0)
 . . F  S SUB2=$O(@GLOB@(SUB,SUB1,SUB2)) Q:SUB2=""  D  Q:RCSTOP
"RTN","RCDPEAPP",231,0)
 . . . ;
"RTN","RCDPEAPP",232,0)
 . . . ; Display payer sub-header for detail report only
"RTN","RCDPEAPP",233,0)
 . . . I 'RCDISP,RCTYPE="D" D HDRP(SUB1_"/"_SUB2)
"RTN","RCDPEAPP",234,0)
 . . . S SUB3=""
"RTN","RCDPEAPP",235,0)
 . . . F  S SUB3=$O(@GLOB@(SUB,SUB1,SUB2,SUB3)) Q:SUB3=""  D  Q:RCSTOP
"RTN","RCDPEAPP",236,0)
 . . . . S RCDATA=@GLOB@(SUB,SUB1,SUB2,SUB3)
"RTN","RCDPEAPP",237,0)
 . . . . I 'RCDISP D  Q:RCSTOP
"RTN","RCDPEAPP",238,0)
 . . . . . I $Y>(IOSL-6) D HDR(.DIVS,.PAYERS) Q:RCSTOP
"RTN","RCDPEAPP",239,0)
 . . . . . W !,$P(RCDATA,U,4)                   ; Patient Name
"RTN","RCDPEAPP",240,0)
 . . . . . W ?31,$P(RCDATA,U,5)                 ; ERA#
"RTN","RCDPEAPP",241,0)
 . . . . . W ?38,$P(RCDATA,U,6)                 ; Date Received
"RTN","RCDPEAPP",242,0)
 . . . . . W ?49,$P(RCDATA,U,7)                 ; Date Autposted
"RTN","RCDPEAPP",243,0)
 . . . . . W ?58,$P(RCDATA,U,8)                 ; EFT#
"RTN","RCDPEAPP",244,0)
 . . . . . W ?67,$P(RCDATA,U,9)                 ; "TR" Receipt
"RTN","RCDPEAPP",245,0)
 . . . . . W ?79,$E($P(RCDATA,U,10),1,12)       ; Bill #
"RTN","RCDPEAPP",246,0)
 . . . . . W ?91,$J($P(RCDATA,U,11),8)          ; Original Billed Amount
"RTN","RCDPEAPP",247,0)
 . . . . . W ?103,$J($P(RCDATA,U,12),8)         ; Paid Amount
"RTN","RCDPEAPP",248,0)
 . . . . . W ?113,$J($P(RCDATA,U,13),8)         ; Balance
"RTN","RCDPEAPP",249,0)
 . . . . . W ?123,$P(RCDATA,U,14)               ; % COLLECTED
"RTN","RCDPEAPP",250,0)
 . . . . . W !,?8,"TRACE#:",$P(RCDATA,U,15)     ; Trace #
"RTN","RCDPEAPP",251,0)
 . . . . . ;
"RTN","RCDPEAPP",252,0)
 . . . . . ; Subtotals for Payer on detail report
"RTN","RCDPEAPP",253,0)
 . . . . . I 'RCDISP,$O(@GLOB@(SUB,SUB1,SUB2,SUB3))="" D TOTALDP(SUB,SUB1,SUB2)
"RTN","RCDPEAPP",254,0)
 . . . . I RCDISP D
"RTN","RCDPEAPP",255,0)
 . . . . . W !,RCDATA
"RTN","RCDPEAPP",256,0)
 . . . ;
"RTN","RCDPEAPP",257,0)
 . . . ; Subtotals for Division on detail report
"RTN","RCDPEAPP",258,0)
 . . . I 'RCDISP,RCTYPE="D",$O(@GLOB@(SUB,SUB1))="" D TOTALD(SUB)
"RTN","RCDPEAPP",259,0)
 ;
"RTN","RCDPEAPP",260,0)
 ; Grand totals
"RTN","RCDPEAPP",261,0)
 I $D(GTOTAL),'RCSTOP D
"RTN","RCDPEAPP",262,0)
 . I 'RCDISP,RCTYPE="D" D TOTALG                ; Print grand only total if detail report
"RTN","RCDPEAPP",263,0)
 . I 'RCDISP,RCTYPE="S" D TOTALS                ; Print all totals if summary report
"RTN","RCDPEAPP",264,0)
 . W !,$$ENDORPRT^RCDPEARL D:'$G(ZTSK) ASK(.RCSTOP)
"RTN","RCDPEAPP",265,0)
 ;
"RTN","RCDPEAPP",266,0)
 I '$D(GTOTAL) D                                ; Null Report
"RTN","RCDPEAPP",267,0)
 . D HDR(.DIVS,.PAYERS)
"RTN","RCDPEAPP",268,0)
 . W !!,?26,"*** NO RECORDS TO PRINT ***",!
"RTN","RCDPEAPP",269,0)
 . W !,$$ENDORPRT^RCDPEARL D:'$G(ZTSK) ASK(.RCSTOP) ; PRCA*4.5*326
"RTN","RCDPEAPP",270,0)
 ;
"RTN","RCDPEAPP",271,0)
 ; Close device
"RTN","RCDPEAPP",272,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAPP",273,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAPP",274,0)
 Q
"RTN","RCDPEAPP",275,0)
 ;
"RTN","RCDPEAPP",276,0)
ASK(STOP) ; Ask to continue
"RTN","RCDPEAPP",277,0)
 ; Output:  STOP    - 1 if display is aborted
"RTN","RCDPEAPP",278,0)
 I $E(IOST,1,2)'["C-" Q                         ; Not displaying to screen, quit
"RTN","RCDPEAPP",279,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEAPP",280,0)
 S DIR("A")="Press ENTER to continue: "
"RTN","RCDPEAPP",281,0)
 S DIR(0)="EA"
"RTN","RCDPEAPP",282,0)
 D ^DIR
"RTN","RCDPEAPP",283,0)
 I ($D(DIRUT))!($D(DUOUT)) S STOP=1
"RTN","RCDPEAPP",284,0)
 Q
"RTN","RCDPEAPP",285,0)
 ;
"RTN","RCDPEAPP",286,0)
HDR(DIVS,PAYERS) ; Print the report header
"RTN","RCDPEAPP",287,0)
 ; Input:   DIVS()      - Array of selected Division lines for Header
"RTN","RCDPEAPP",288,0)
 ;          PAYERS()    - Array of selected Payer lines for Header
"RTN","RCDPEAPP",289,0)
 ;          RCDISP      - 1 - Output to Excel, 0 otherwise
"RTN","RCDPEAPP",290,0)
 ;          RCHDRDT     - External Print Date/Tim
"RTN","RCDPEAPP",291,0)
 ;          RCPAGE      - Current Page number
"RTN","RCDPEAPP",292,0)
 ;          RCRANGE     - Selected Date Range
"RTN","RCDPEAPP",293,0)
 ;          RCSORT      - 0 - Sort by Payer Name, 1 - Sort by Payer TIN
"RTN","RCDPEAPP",294,0)
 ;          RCSTOP      - 1 if display aborted
"RTN","RCDPEAPP",295,0)
 ; Output:  RCPAGE      - Updated Page Number
"RTN","RCDPEAPP",296,0)
 ;          RCSTOP      - 1 if display aborted
"RTN","RCDPEAPP",297,0)
 N END,LN,MSG,START,XX,Y
"RTN","RCDPEAPP",298,0)
 Q:RCSTOP
"RTN","RCDPEAPP",299,0)
 S START=$$FMTE^XLFDT($P(RCRANGE,U,2),"2DZ")
"RTN","RCDPEAPP",300,0)
 S END=$$FMTE^XLFDT($P(RCRANGE,U,3),"2DZ")
"RTN","RCDPEAPP",301,0)
 I RCDISP D  Q          ; Output to Excel
"RTN","RCDPEAPP",302,0)
 . S XX="STATION^STATION NUMBER^PAYER^PATIENT NAME/SSN^ERA#^DT REC'D"
"RTN","RCDPEAPP",303,0)
 . S XX=XX_"^DT POST^EFT#^RECEIPT#^BILL#^AMT BILLED^AMT PAID^BALANCE^%COLL^TRACE#"
"RTN","RCDPEAPP",304,0)
 . W !,XX
"RTN","RCDPEAPP",305,0)
 I RCPAGE D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEAPP",306,0)
 S RCPAGE=RCPAGE+1
"RTN","RCDPEAPP",307,0)
 W @IOF
"RTN","RCDPEAPP",308,0)
 S MSG(1)="EDI LOCKBOX AUTO-POST REPORT - "_$S(RCTYPE="D":"DETAIL ",1:"SUMMARY")
"RTN","RCDPEAPP",309,0)
 S MSG(1)=MSG(1)_$J("",47)_"Print Date: "_RCHDRDT_"    Page: "_RCPAGE
"RTN","RCDPEAPP",310,0)
 ;
"RTN","RCDPEAPP",311,0)
 S LN=2,XX=""
"RTN","RCDPEAPP",312,0)
 F  D  Q:XX=""                              ; Display Division filters
"RTN","RCDPEAPP",313,0)
 . S XX=$O(DIVS(XX))
"RTN","RCDPEAPP",314,0)
 . Q:XX=""
"RTN","RCDPEAPP",315,0)
 . S MSG(LN)=DIVS(XX),LN=LN+1
"RTN","RCDPEAPP",316,0)
 ;
"RTN","RCDPEAPP",317,0)
 S MSG(LN)="CLAIM TYPE: "
"RTN","RCDPEAPP",318,0)
 S MSG(LN)=MSG(LN)_$S(RCLAIM="P":"PHARMACY",RCLAIM="M":"MEDICAL",RCLAIM="T":"TRICARE",1:"ALL")
"RTN","RCDPEAPP",319,0)
 S MSG(LN)=MSG(LN)_$J("",55-$L(MSG(LN)))_"SORTED BY: "_$S(RCSORT=0:"PAYER NAME",1:"PAYER TIN") ; PRCA*4.5*326
"RTN","RCDPEAPP",320,0)
 S LN=LN+1
"RTN","RCDPEAPP",321,0)
 S MSG(LN)=$S(RCWHICH=2:"TINS",1:"PAYERS")_" : "_$S(RCPAY="S":"SELECTED",RCPAY="R":"RANGE",1:"ALL") ; PRCA*4.5*326
"RTN","RCDPEAPP",322,0)
 S LN=LN+1
"RTN","RCDPEAPP",323,0)
 S MSG(LN)="AUTOPOST POSTING RESULTS FOR DATE RANGE: "_START_" - "_END
"RTN","RCDPEAPP",324,0)
 S LN=LN+1,MSG(LN)=LINE2
"RTN","RCDPEAPP",325,0)
 S LN=LN+1
"RTN","RCDPEAPP",326,0)
 S MSG(LN)="PATIENT NAME/SSN               ERA#   DT REC'D   DT POST  EFT#     RECEIPT#"
"RTN","RCDPEAPP",327,0)
 S MSG(LN)=MSG(LN)_"    BILL#       AMT BILLED  AMT PAID   BALANCE  %COLL"
"RTN","RCDPEAPP",328,0)
 S LN=LN+1,MSG(LN)=LINE2
"RTN","RCDPEAPP",329,0)
 D EN^DDIOL(.MSG)
"RTN","RCDPEAPP",330,0)
 Q
"RTN","RCDPEAPP",331,0)
 ;
"RTN","RCDPEAPP",332,0)
HDRP(PAYNAM) ; Print Payer Sub-header
"RTN","RCDPEAPP",333,0)
 ; Input:   LINE1   - 131 '-'s
"RTN","RCDPEAPP",334,0)
 ;          PAYNAM  - TIN/Payer Name or Payer NAME/TIN depending on sort
"RTN","RCDPEAPP",335,0)
 W !,LINE1,!,"PAYER: ",PAYNAM,!,LINE1
"RTN","RCDPEAPP",336,0)
 Q
"RTN","RCDPEAPP",337,0)
 ;
"RTN","RCDPEAPP",338,0)
LINED(RCDIV,RCDIVS,DIVS) ; List selected Divisions
"RTN","RCDPEAPP",339,0)
 ; Input:   RCDIV   - 1 - All Divisions Selected,
"RTN","RCDPEAPP",340,0)
 ;          RCDIVS()- Array of selected Divisions
"RTN","RCDPEAPP",341,0)
 ; Output   DIVS()  - Array of lines to print the Divisions
"RTN","RCDPEAPP",342,0)
 ; Returns: Comma Delimitted list of Divisions
"RTN","RCDPEAPP",343,0)
 N LN,SUB,XX
"RTN","RCDPEAPP",344,0)
 K DIVS
"RTN","RCDPEAPP",345,0)
 S SUB="",LN=1,DIVS(1)="DIVISIONS:  "
"RTN","RCDPEAPP",346,0)
 I RCDIV=1 S DIVS(1)=DIVS(1)_"ALL" Q
"RTN","RCDPEAPP",347,0)
 F  D  Q:'SUB
"RTN","RCDPEAPP",348,0)
 . S SUB=$O(RCDIVS(SUB))
"RTN","RCDPEAPP",349,0)
 . Q:'SUB
"RTN","RCDPEAPP",350,0)
 . S XX=$P(RCDIVS(SUB),"^",2)
"RTN","RCDPEAPP",351,0)
 . I $L(XX)+$L(DIVS(LN))+2>132 D
"RTN","RCDPEAPP",352,0)
 . . S LN=LN+1,DIVS(LN)="            "_XX
"RTN","RCDPEAPP",353,0)
 . E  S DIVS(LN)=$S($L(DIVS(LN))=12:DIVS(LN)_XX,1:DIVS(LN)_", "_XX)
"RTN","RCDPEAPP",354,0)
 Q
"RTN","RCDPEAPP",355,0)
 ;
"RTN","RCDPEAPP",356,0)
LINEP(RCPAY,RCPARRAY,RCWHICH,PAYERS) ; List selected Payers
"RTN","RCDPEAPP",357,0)
 ; Input:   RCPAY       - 2 - All Payers selected
"RTN","RCDPEAPP",358,0)
 ;          RCPARRAY    - Array of selected Payers
"RTN","RCDPEAPP",359,0)
 ;          RCWHICH     - 1 - Filter by Payer Name, 2 - Filter by Payer TIN
"RTN","RCDPEAPP",360,0)
 ; Output:  PAYERS()    - Array of lines to Print the Payers
"RTN","RCDPEAPP",361,0)
 ; Returns: Comma delimited list of Payer Names
"RTN","RCDPEAPP",362,0)
 N CTR,DPAYS,LN,PAYR,PCE,XX
"RTN","RCDPEAPP",363,0)
 K PAYERS
"RTN","RCDPEAPP",364,0)
 S PAYR="",LN=1,PAYERS(1)="PAYERS:     "
"RTN","RCDPEAPP",365,0)
 S PCE=$S(RCWHICH=1:2,1:1)
"RTN","RCDPEAPP",366,0)
 I $P(RCPAY,U,1)=2 S PAYERS(1)=PAYERS(1)_"ALL" Q
"RTN","RCDPEAPP",367,0)
 F  D  Q:PAYR=""
"RTN","RCDPEAPP",368,0)
 . S PAYR=$O(RCPARRAY(PAYR))
"RTN","RCDPEAPP",369,0)
 . Q:PAYR=""
"RTN","RCDPEAPP",370,0)
 . S CTR=""
"RTN","RCDPEAPP",371,0)
 . F  D  Q:CTR=""
"RTN","RCDPEAPP",372,0)
 . . S CTR=$O(RCPARRAY(PAYR,CTR))
"RTN","RCDPEAPP",373,0)
 . . Q:CTR=""
"RTN","RCDPEAPP",374,0)
 . . S XX=$P(RCPARRAY(PAYR,CTR),"/",PCE)    ; Payer TIN
"RTN","RCDPEAPP",375,0)
 . . Q:$D(DPAYS(XX))                        ; Already displayed
"RTN","RCDPEAPP",376,0)
 . . S DPAYS(XX)=""
"RTN","RCDPEAPP",377,0)
 . . I $L(XX)+$L(PAYERS(LN))+2>132 D
"RTN","RCDPEAPP",378,0)
 . . . S LN=LN+1,PAYERS(LN)="            "_XX
"RTN","RCDPEAPP",379,0)
 . . E  S PAYERS(LN)=$S($L(PAYERS(LN))=12:PAYERS(LN)_XX,1:PAYERS(LN)_", "_XX)
"RTN","RCDPEAPP",380,0)
 Q
"RTN","RCDPEAPP",381,0)
 ;
"RTN","RCDPEAPP",382,0)
TOTALS ; Print totals for summary report
"RTN","RCDPEAPP",383,0)
 ; Input:   GLOB    - "^TMP("RCPDEAPP",$J)
"RTN","RCDPEAPP",384,0)
 N DBAL,DBAMT,DCNT,DIV,DPAMT,PAYIX1,PAYIX2
"RTN","RCDPEAPP",385,0)
 S DIV=""
"RTN","RCDPEAPP",386,0)
 F  D  Q:DIV=""  Q:RCSTOP
"RTN","RCDPEAPP",387,0)
 . S DIV=$O(@GLOB@(DIV))
"RTN","RCDPEAPP",388,0)
 . Q:DIV=""
"RTN","RCDPEAPP",389,0)
 . S PAYIX1=""
"RTN","RCDPEAPP",390,0)
 . F  D  Q:PAYIX1=""  Q:RCSTOP
"RTN","RCDPEAPP",391,0)
 . . S PAYIX1=$O(@GLOB@(DIV,PAYIX1))
"RTN","RCDPEAPP",392,0)
 . . Q:PAYIX1=""
"RTN","RCDPEAPP",393,0)
 . . S PAYIX2=""
"RTN","RCDPEAPP",394,0)
 . . F  D  Q:PAYIX2=""  Q:RCSTOP
"RTN","RCDPEAPP",395,0)
 . . . S PAYIX2=$O(@GLOB@(DIV,PAYIX1,PAYIX2))
"RTN","RCDPEAPP",396,0)
 . . . Q:PAYIX2=""
"RTN","RCDPEAPP",397,0)
 . . . D TOTALDP(DIV,PAYIX1,PAYIX2)         ; Payer Totals
"RTN","RCDPEAPP",398,0)
 . D TOTALD(DIV)                            ; Division Totals
"RTN","RCDPEAPP",399,0)
 D TOTALG                                   ; Grand Totals
"RTN","RCDPEAPP",400,0)
 Q
"RTN","RCDPEAPP",401,0)
 ;
"RTN","RCDPEAPP",402,0)
TOTALD(DIV) ; Display totals for a division
"RTN","RCDPEAPP",403,0)
 ; Input:   DIV     - Division Name
"RTN","RCDPEAPP",404,0)
 ;          DIVS()  - Array of selected Division lines for Header
"RTN","RCDPEAPP",405,0)
 ;          PAYERS()- Array of selected Payer lines for Header
"RTN","RCDPEAPP",406,0)
 ;          GLOB    - "^TMP("RCPDEAPP",$J)
"RTN","RCDPEAPP",407,0)
 ;          LINE1   - 131 '-'s
"RTN","RCDPEAPP",408,0)
 ;          RCDISP  - 1 - Output to Excel, 0 otherwise
"RTN","RCDPEAPP",409,0)
 ; Output:  RCSTOP  - 1 if display aborted, 0 otherwise
"RTN","RCDPEAPP",410,0)
 N DBAL,DBAMT,DCNT,DPAMTL
"RTN","RCDPEAPP",411,0)
 S DCNT=$P(@GLOB@(DIV),U),DBAMT=$P(@GLOB@(DIV),U,2)
"RTN","RCDPEAPP",412,0)
 S DPAMT=$P(@GLOB@(DIV),U,3),DBAL=$P(@GLOB@(DIV),U,4)
"RTN","RCDPEAPP",413,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR(.DIVS,.PAYERS) Q:RCSTOP
"RTN","RCDPEAPP",414,0)
 W !,"DIVISION TOTALS FOR ",DIV,?90,$J(DBAMT,10,2)
"RTN","RCDPEAPP",415,0)
 W $J(DPAMT,10,2),$J(DBAL,10,2)
"RTN","RCDPEAPP",416,0)
 W:DBAMT'=0 $J(DPAMT/DBAMT*100,9,2),"%"
"RTN","RCDPEAPP",417,0)
 W !,?8,"COUNT",?90,$J(DCNT,10,0),$J(DCNT,10,0),$J(DCNT,10,0)
"RTN","RCDPEAPP",418,0)
 W !,?8,"MEAN",?90,$J(DBAMT/DCNT,10,2),$J(DPAMT/DCNT,10,2),$J(DBAL/DCNT,10,2)
"RTN","RCDPEAPP",419,0)
 W !,LINE1
"RTN","RCDPEAPP",420,0)
 Q
"RTN","RCDPEAPP",421,0)
 ;
"RTN","RCDPEAPP",422,0)
TOTALDP(DIV,PAYIX1,PAYIX2) ; Display totals for a payer within a division
"RTN","RCDPEAPP",423,0)
 ; Input:   DIV     - Division Name
"RTN","RCDPEAPP",424,0)
 ;          PAYIX1  - Payer Name OR TIN
"RTN","RCDPEAPP",425,0)
 ;          PAYIX2  - TIN OR Payer Name
"RTN","RCDPEAPP",426,0)
 ;          DIVS()  - Array of selected Division lines for Header
"RTN","RCDPEAPP",427,0)
 ;          GLOB    - "^TMP("RCPDEAPP",$J)
"RTN","RCDPEAPP",428,0)
 ;          LINE1   - 131 '-'s
"RTN","RCDPEAPP",429,0)
 ;          PAYERS()- Array of selected Payer lines for Header
"RTN","RCDPEAPP",430,0)
 ;          RCDISP  - 1 - Output to Excel, 0 otherwise
"RTN","RCDPEAPP",431,0)
 ; Output:  RCSTOP  - 1 if display aborted, 0 otherwise
"RTN","RCDPEAPP",432,0)
 N DBAL,DBAMT,DCNT,DPAMT
"RTN","RCDPEAPP",433,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR(.DIVS,.PAYERS) Q:RCSTOP
"RTN","RCDPEAPP",434,0)
 S DCNT=$P(@GLOB@(DIV,PAYIX1,PAYIX2),U),DBAMT=$P(@GLOB@(DIV),U,2)
"RTN","RCDPEAPP",435,0)
 S DPAMT=$P(@GLOB@(DIV),U,3),DBAL=$P(@GLOB@(DIV),U,4)
"RTN","RCDPEAPP",436,0)
 W:RCTYPE="D" !,?92,"---------------------------------------"
"RTN","RCDPEAPP",437,0)
 W !,"SUBTOTALS FOR PAYER: ",PAYIX1,"/",PAYIX2,?90,$J(DBAMT,10,2),$J(DPAMT,10,2)
"RTN","RCDPEAPP",438,0)
 W $J(DBAL,10,2)
"RTN","RCDPEAPP",439,0)
 W:DBAMT'=0 $J(DPAMT/DBAMT*100,9,2),"%"
"RTN","RCDPEAPP",440,0)
 W !,?8,"COUNT",?90,$J(DCNT,10,0),$J(DCNT,10,0),$J(DCNT,10,0)
"RTN","RCDPEAPP",441,0)
 W !,?8,"MEAN",?90,$J(DBAMT/DCNT,10,2),$J(DPAMT/DCNT,10,2),$J(DBAL/DCNT,10,2)
"RTN","RCDPEAPP",442,0)
 W !,LINE1
"RTN","RCDPEAPP",443,0)
 Q
"RTN","RCDPEAPP",444,0)
 ;
"RTN","RCDPEAPP",445,0)
TOTALG ;Display overall report total
"RTN","RCDPEAPP",446,0)
 ; Input:   DIVS()  - Array of selected Division lines for Header
"RTN","RCDPEAPP",447,0)
 ;          PAYERS()- Array of selected Payer lines for Header
"RTN","RCDPEAPP",448,0)
 ;          GTOTAL  - Grand Totals
"RTN","RCDPEAPP",449,0)
 ;          LINE1   - 131 '-'s
"RTN","RCDPEAPP",450,0)
 ;          RCDISP  - 1 - Output to Excel, 0 otherwise
"RTN","RCDPEAPP",451,0)
 ; Output:  RCSTOP  - 1 if display aborted, 0 otherwise
"RTN","RCDPEAPP",452,0)
 I 'RCDISP,$Y>(IOSL-6) D HDR(.DIVS,.PAYERS) Q:RCSTOP
"RTN","RCDPEAPP",453,0)
 W !,"GRAND TOTALS FOR ALL DIVISIONS",?90,$J(+$P(GTOTAL,U,2),10,2)
"RTN","RCDPEAPP",454,0)
 W $J(+$P(GTOTAL,U,3),10,2),$J(+$P(GTOTAL,U,4),10,2)
"RTN","RCDPEAPP",455,0)
 W $J($P(GTOTAL,U,3)/$P(GTOTAL,U,2)*100,9,2),"%"
"RTN","RCDPEAPP",456,0)
 W !,?8,"COUNT",?90,$J(+$P(GTOTAL,U),10,0),$J(+$P(GTOTAL,U),10,0),$J(+$P(GTOTAL,U),10,0)
"RTN","RCDPEAPP",457,0)
 W !,?8,"MEAN",?90,$J($P(GTOTAL,U,2)/$P(GTOTAL,U),10,2)
"RTN","RCDPEAPP",458,0)
 W $J($P(GTOTAL,U,3)/$P(GTOTAL,U),10,2),$J($P(GTOTAL,U,4)/$P(GTOTAL,U),10,2)
"RTN","RCDPEAPP",459,0)
 W !,LINE1
"RTN","RCDPEAPP",460,0)
 Q
"RTN","RCDPEAPQ")
0^72^B57896147
"RTN","RCDPEAPQ",1,0)
RCDPEAPQ ;AITC/CJE - AUTO POST REPORT -CONTINUED ;Dec 20, 2014@18:42
"RTN","RCDPEAPQ",2,0)
 ;;4.5;Accounts Receivable;**298,304,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAPQ",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAPQ",4,0)
 ; PRCA*4.5*326 - Routine created as an overflow for RCDPEAPP due to size
"RTN","RCDPEAPQ",5,0)
 Q
"RTN","RCDPEAPQ",6,0)
SAVE(ERAIEN,RCRZ,RCTYPE,APDATE,RCSORT) ; EP - Save to ^TMP global
"RTN","RCDPEAPQ",7,0)
 ; Input:   ERAIEN  - Internal IEN into file 344.4
"RTN","RCDPEAPQ",8,0)
 ;          RCRZ    - Internal IEN into sub-file 344.41
"RTN","RCDPEAPQ",9,0)
 ;          RCTYPE  - 'D' for detail report, 'S' for summary
"RTN","RCDPEAPQ",10,0)
 ;          APDATE  - Internal Auto-Posting date
"RTN","RCDPEAPQ",11,0)
 ;          RCSORT  - 0 - Sort by Payer Name, 1 - Sort by Payer TIN
"RTN","RCDPEAPQ",12,0)
 ;          STNAM   - Division Name (Primary Sort)
"RTN","RCDPEAPQ",13,0)
 ;          STNUM   - Station Number
"RTN","RCDPEAPQ",14,0)
 ;          ^TMP("RCDPEAPP2",$J,ERAIEN,RCRZ) - Array of detail lines
"RTN","RCDPEAPQ",15,0)
 ; Output:   GTOTAL  - A1^A2^A3^A4 Where:
"RTN","RCDPEAPQ",16,0)
 ;                     A1 - Total Count
"RTN","RCDPEAPQ",17,0)
 ;                     A2 - Total Original Amounts
"RTN","RCDPEAPQ",18,0)
 ;                     A3 - Total Payment Amounts
"RTN","RCDPEAPQ",19,0)
 ;                     A4 - Total Balance
"RTN","RCDPEAPQ",20,0)
 N BALANCE,BAMT,BILL,CLAIMIEN,COLLECT,DATE,EFTNUM,EOBIEN,ERADATE,ERANUM
"RTN","RCDPEAPQ",21,0)
 N PAMT,PAYIX1,PAYIX2,PAYNAM,PTNAM,RECEIPT,SEQ,SEQ1,SEQ2,STIX
"RTN","RCDPEAPQ",22,0)
 N TIN,TOTBAL,TOTBAMT,TOTPAMT,TRACE,XX
"RTN","RCDPEAPQ",23,0)
 S PAYNAM=$$GET1^DIQ(344.4,ERAIEN,.06,"E")          ; Payer Name from ERA Record
"RTN","RCDPEAPQ",24,0)
 S TIN=$$GET1^DIQ(344.4,ERAIEN,.03,"E")             ; Payer TIN from ERA Record
"RTN","RCDPEAPQ",25,0)
 S:RCSORT=0 PAYIX1=PAYNAM,PAYIX2=TIN
"RTN","RCDPEAPQ",26,0)
 S:RCSORT=1 PAYIX1=TIN,PAYIX2=PAYNAM
"RTN","RCDPEAPQ",27,0)
 S:PAYNAM="" PAYNAM="UNKNOWN"
"RTN","RCDPEAPQ",28,0)
 S STIX=STNAM_"/"_STNUM
"RTN","RCDPEAPQ",29,0)
 S (TOTBAMT,TOTBAL,TOTPAMT)=0
"RTN","RCDPEAPQ",30,0)
 ;
"RTN","RCDPEAPQ",31,0)
 ; Detail mode, get these extra fields
"RTN","RCDPEAPQ",32,0)
 I RCTYPE="D" D
"RTN","RCDPEAPQ",33,0)
 . S TRACE=$$GET1^DIQ(344.4,ERAIEN,.02,"E")         ; Trace Number
"RTN","RCDPEAPQ",34,0)
 . S PTNAM=$$PNM4^RCDPEWL1(ERAIEN,RCRZ)             ; Patient name from claim file #399
"RTN","RCDPEAPQ",35,0)
 . S ERANUM=$$GET1^DIQ(344.4,ERAIEN,.01,"E")        ; ERA Number
"RTN","RCDPEAPQ",36,0)
 . S ERADATE=$$GET1^DIQ(344.4,ERAIEN,.07,"I")       ; Date received (file date/time)
"RTN","RCDPEAPQ",37,0)
 . S ERADATE=$$FMTE^XLFDT(ERADATE,"2DZ")
"RTN","RCDPEAPQ",38,0)
 . S DATE=$$FMTE^XLFDT(APDATE,"2DZ")                ; Auto-Posting DATE
"RTN","RCDPEAPQ",39,0)
 . S EFTNUM=$O(^RCY(344.31,"AERA",ERANUM,""))       ; EFT Number
"RTN","RCDPEAPQ",40,0)
 . S:EFTNUM EFTNUM=$$GET1^DIQ(344.31,EFTNUM,.01,"E")
"RTN","RCDPEAPQ",41,0)
 . S XX=$$GET1^DIQ(344.41,RCRZ_","_ERAIEN,.25,"I")  ; Receipt IEN
"RTN","RCDPEAPQ",42,0)
 . S RECEIPT=$$EXTERNAL^DILFD(344.41,.25,,XX)
"RTN","RCDPEAPQ",43,0)
 ;
"RTN","RCDPEAPQ",44,0)
 ; Get link to the scratchpad detail line. If the worklist detail records exist, 
"RTN","RCDPEAPQ",45,0)
 ; loop through the ones with the same prefix to get the data (this will have split-edits)
"RTN","RCDPEAPQ",46,0)
 S SEQ=$G(^TMP("RCDPEAPP2",$J,ERAIEN,RCRZ))
"RTN","RCDPEAPQ",47,0)
 I SEQ D
"RTN","RCDPEAPQ",48,0)
 . S SEQ1=SEQ
"RTN","RCDPEAPQ",49,0)
 . F  S SEQ1=$O(^RCY(344.49,ERAIEN,1,"B",SEQ1)) Q:'SEQ1!(SEQ1\1'=SEQ)  D
"RTN","RCDPEAPQ",50,0)
 . . S SEQ2=$O(^RCY(344.49,ERAIEN,1,"B",SEQ1,""))
"RTN","RCDPEAPQ",51,0)
 . . Q:SEQ2=""
"RTN","RCDPEAPQ",52,0)
 . . S (BAMT,BALANCE,COLLECT)=""
"RTN","RCDPEAPQ",53,0)
 . . S CLAIMIEN=$$GET1^DIQ(344.491,SEQ2_","_ERAIEN,.07,"I") ; AR Bill
"RTN","RCDPEAPQ",54,0)
 . . S BILL=$$GET1^DIQ(344.491,SEQ2_","_ERAIEN,.02,"I")     ; Claim #
"RTN","RCDPEAPQ",55,0)
 . . I BILL="" S BILL="<blank>"
"RTN","RCDPEAPQ",56,0)
 . . S PAMT=$$GET1^DIQ(344.491,SEQ2_","_ERAIEN,.06,"I")     ; Amount Paid on Claim
"RTN","RCDPEAPQ",57,0)
 . . ;
"RTN","RCDPEAPQ",58,0)
 . . ; If there is a claim, get billed amount and balance from the claim
"RTN","RCDPEAPQ",59,0)
 . . I CLAIMIEN D
"RTN","RCDPEAPQ",60,0)
 . . . S BAMT=$J(+$$GET1^DIQ(430,CLAIMIEN,3,"I"),0,2)       ; Original Amount
"RTN","RCDPEAPQ",61,0)
 . . . S BALANCE=$J(+$$GET1^DIQ(430,CLAIMIEN,71,"I"),0,2)   ; Principal Balance
"RTN","RCDPEAPQ",62,0)
 . . ;
"RTN","RCDPEAPQ",63,0)
 . . ; Update total amounts
"RTN","RCDPEAPQ",64,0)
 . . S TOTBAMT=TOTBAMT+BAMT,TOTBAL=TOTBAL+BALANCE,TOTPAMT=TOTPAMT+PAMT
"RTN","RCDPEAPQ",65,0)
 . . I RCTYPE="D" D                         ; Get extra data for detail report
"RTN","RCDPEAPQ",66,0)
 . . . S PTNAM=$S('CLAIMIEN:"",1:$$PNM4^RCDPEWL1(ERAIEN,RCRZ))
"RTN","RCDPEAPQ",67,0)
 . . . S:BAMT COLLECT=$J(PAMT/BAMT*100,0,2)_"%"
"RTN","RCDPEAPQ",68,0)
 . . . S CNT=CNT+1
"RTN","RCDPEAPQ",69,0)
 . . . S XX=STNAM_U_STNUM_U_$S(RCSORT:TIN_"/"_PAYNAM,1:PAYNAM_"/"_TIN)_U ; PRCA*4.5*326 add TIN
"RTN","RCDPEAPQ",70,0)
 . . . S XX=XX_PTNAM_U_ERANUM_U_ERADATE_U_DATE_U_EFTNUM
"RTN","RCDPEAPQ",71,0)
 . . . S XX=XX_U_RECEIPT_U_BILL_U_BAMT_U_PAMT_U_BALANCE_U_COLLECT_U_TRACE
"RTN","RCDPEAPQ",72,0)
 . . . S @GLOB@(STIX,PAYIX1,PAYIX2,CNT)=XX ; Add data for detail report
"RTN","RCDPEAPQ",73,0)
 ;
"RTN","RCDPEAPQ",74,0)
 ; If the worlist detail record does not exist, get data from ERA detail
"RTN","RCDPEAPQ",75,0)
 I 'SEQ D
"RTN","RCDPEAPQ",76,0)
 . S (TOTBAMT,TOTBAL,COLLECT,CLAIMIEN)=0
"RTN","RCDPEAPQ",77,0)
 . S EOBIEN=$$GET1^DIQ(344.41,RCRZ_","_ERAIEN,.02,"I")  ; IEN for 361.1
"RTN","RCDPEAPQ",78,0)
 . S:EOBIEN CLAIMIEN=$$GET1^DIQ(361.1,EOBIEN,.01,"I")   ; IEN for 399
"RTN","RCDPEAPQ",79,0)
 . S BILL=$$EXTERNAL^DILFD(344.41,.02,,EOBIEN)          ; Bill Number
"RTN","RCDPEAPQ",80,0)
 . ;
"RTN","RCDPEAPQ",81,0)
 . ; Get Billed Amount from AR (Original Balance)
"RTN","RCDPEAPQ",82,0)
 . I CLAIMIEN D
"RTN","RCDPEAPQ",83,0)
 . . S TOTBAMT=$J(+$$GET1^DIQ(430,CLAIMIEN,3,"I"),0,2)   ; Original Amount
"RTN","RCDPEAPQ",84,0)
 . S TOTPAMT=$$GET1^DIQ(344.41,RCRZ_","_ERAIEN,.03,"I") ; Amount Paid on Claim
"RTN","RCDPEAPQ",85,0)
 . ;
"RTN","RCDPEAPQ",86,0)
 . ; Balance from AR (Principal Balance)
"RTN","RCDPEAPQ",87,0)
 . S:CLAIMIEN TOTBAL=$J(+$$GET1^DIQ(430,CLAIMIEN,71,"I"),0,2) ; Principal Balance
"RTN","RCDPEAPQ",88,0)
 . ;
"RTN","RCDPEAPQ",89,0)
 . ; Detail Report, get extra data and then update the detail global
"RTN","RCDPEAPQ",90,0)
 . I RCTYPE="D" D
"RTN","RCDPEAPQ",91,0)
 . . S PTNAM=$S('CLAIMIEN:"",1:$$PNM4^RCDPEWL1(ERAIEN,RCRZ))
"RTN","RCDPEAPQ",92,0)
 . . S:TOTBAMT COLLECT=$J(TOTPAMT/TOTBAMT*100,0,2)_"%"
"RTN","RCDPEAPQ",93,0)
 . . S CNT=CNT+1
"RTN","RCDPEAPQ",94,0)
 . . S XX=STNAM_U_STNUM_U_PAYNAM_U_PTNAM_U_ERANUM_U_ERADATE_U_DATE_U_EFTNUM
"RTN","RCDPEAPQ",95,0)
 . . S XX=XX_U_RECEIPT_U_BILL_U_TOTBAMT_U_TOTPAMT_U_TOTBAL_U_COLLECT_U_TRACE
"RTN","RCDPEAPQ",96,0)
 . . S @GLOB@(STIX,PAYIX1,PAYIX2,CNT)=XX
"RTN","RCDPEAPQ",97,0)
 ;
"RTN","RCDPEAPQ",98,0)
 ; Update totals for individual division
"RTN","RCDPEAPQ",99,0)
 S $P(@GLOB@(STIX),U,1)=$P($G(@GLOB@(STIX)),U,1)+1
"RTN","RCDPEAPQ",100,0)
 S $P(@GLOB@(STIX),U,2)=$P($G(@GLOB@(STIX)),U,2)+TOTBAMT
"RTN","RCDPEAPQ",101,0)
 S $P(@GLOB@(STIX),U,3)=$P($G(@GLOB@(STIX)),U,3)+TOTPAMT
"RTN","RCDPEAPQ",102,0)
 S $P(@GLOB@(STIX),U,4)=$P($G(@GLOB@(STIX)),U,4)+TOTBAL
"RTN","RCDPEAPQ",103,0)
 ;
"RTN","RCDPEAPQ",104,0)
 ; Update totals for individual division/payer
"RTN","RCDPEAPQ",105,0)
 S $P(@GLOB@(STIX,PAYIX1,PAYIX2),U,1)=$P($G(@GLOB@(STIX,PAYIX1,PAYIX2)),U,1)+1
"RTN","RCDPEAPQ",106,0)
 S $P(@GLOB@(STIX,PAYIX1,PAYIX2),U,2)=$P($G(@GLOB@(STIX,PAYIX1,PAYIX2)),U,2)+TOTBAMT
"RTN","RCDPEAPQ",107,0)
 S $P(@GLOB@(STIX,PAYIX1,PAYIX2),U,3)=$P($G(@GLOB@(STIX,PAYIX1,PAYIX2)),U,3)+TOTPAMT
"RTN","RCDPEAPQ",108,0)
 S $P(@GLOB@(STIX,PAYIX1,PAYIX2),U,4)=$P($G(@GLOB@(STIX,PAYIX1,PAYIX2)),U,4)+TOTBAL
"RTN","RCDPEAPQ",109,0)
 ;
"RTN","RCDPEAPQ",110,0)
 ; Update grand totals
"RTN","RCDPEAPQ",111,0)
 S $P(GTOTAL,U,1)=$P($G(GTOTAL),U,1)+1,$P(GTOTAL,U,2)=$P($G(GTOTAL),U,2)+TOTBAMT
"RTN","RCDPEAPQ",112,0)
 S $P(GTOTAL,U,3)=$P($G(GTOTAL),U,3)+TOTPAMT,$P(GTOTAL,U,4)=$P($G(GTOTAL),U,4)+TOTBAL
"RTN","RCDPEAPQ",113,0)
 Q
"RTN","RCDPEAPQ",114,0)
 ;
"RTN","RCDPEAPQ",115,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; EP - Get the station (Division) for this ERA
"RTN","RCDPEAPQ",116,0)
 ; Input:   ERAIEN  -
"RTN","RCDPEAPQ",117,0)
 ; Output:  STA     - Internal Division IEN
"RTN","RCDPEAPQ",118,0)
 ;          STNUM   - Division Number
"RTN","RCDPEAPQ",119,0)
 ;          STNAME  - Division Name
"RTN","RCDPEAPQ",120,0)
 N ERAEOB,ERABILL,FOUND,STAIEN
"RTN","RCDPEAPQ",121,0)
 S (ERAEOB,ERABILL,FOUND)=""
"RTN","RCDPEAPQ",122,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEAPQ",123,0)
 D
"RTN","RCDPEAPQ",124,0)
 . S ERAEOB=$$GET1^DIQ(344.41,"1,"_ERAIEN_",",.02,"I") Q:'ERAEOB
"RTN","RCDPEAPQ",125,0)
 . S ERABILL=$$GET1^DIQ(361.1,ERAEOB,.01,"I") Q:'ERABILL
"RTN","RCDPEAPQ",126,0)
 . S STAIEN=$$GET1^DIQ(399,ERABILL,.22,"I") Q:'STAIEN
"RTN","RCDPEAPQ",127,0)
 . S STA=STAIEN
"RTN","RCDPEAPQ",128,0)
 . S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEAPQ",129,0)
 . S STNUM=$$GET1^DIQ(40.8,STAIEN,1,"E")
"RTN","RCDPEAPQ",130,0)
 Q
"RTN","RCDPEAPQ",131,0)
 ;
"RTN","RCDPEAPQ",132,0)
COMPILE ; Generate the Auto Posting report ^TMP array
"RTN","RCDPEAPQ",133,0)
 ; Input:   GLOB    - "^TMP("RCDPEAPP",$J)"
"RTN","RCDPEAPQ",134,0)
 ;          RCDISP  - 0 - Output to paper or screen, 1 - Output to Excel
"RTN","RCDPEAPQ",135,0)
 ;          RCDIV   - 1 - All divisions, 2 - Selected divisions
"RTN","RCDPEAPQ",136,0)
 ;          RCDIVS()- Array of selected divisions if RCDIV=2
"RTN","RCDPEAPQ",137,0)
 ;          RCRANGE - 1^Start Date^End Date
"RTN","RCDPEAPQ",138,0)
 ;          RCJOB   - $J
"RTN","RCDPEAPQ",139,0)
 ;          RCLAIM  - "M" - Medical Claims, "P" - Pharmacy Claims, "B" - Both
"RTN","RCDPEAPQ",140,0)
 ;          RCPAGE  - Initialized to 0
"RTN","RCDPEAPQ",141,0)
 ;          RCPARRAY- Array of selected payers 
"RTN","RCDPEAPQ",142,0)
 ;          RCPROG  - "RCDPEAPP"
"RTN","RCDPEAPQ",143,0)
 ;          RCSORT  - 0 - Sort by Payer Name, 1 - Sort by Payer TIN
"RTN","RCDPEAPQ",144,0)
 ;          RCWHICH - 1 - Filter by Payer Name, 2 - Filter by Payer TIN
"RTN","RCDPEAPQ",145,0)
 ;          RCTYPE  - 'D' for detail report, 'S' for summary
"RTN","RCDPEAPQ",146,0)
 ;          ^TMP("RCSELPAY",RCJOB) - Selected Payer Names or TINs
"RTN","RCDPEAPQ",147,0)
 ; Ouput:   GTOTAL  - A1^A2^A3^A4 Where:
"RTN","RCDPEAPQ",148,0)
 ;                     A1 - Total Count
"RTN","RCDPEAPQ",149,0)
 ;                     A2 - Total Original Amounts
"RTN","RCDPEAPQ",150,0)
 ;                     A3 - Total Payment Amounts
"RTN","RCDPEAPQ",151,0)
 ;                     A4 - Total Balance
"RTN","RCDPEAPQ",152,0)
 ;          ^TMP("RCSELPAY",RCJOB,A1)=A2/A3 Where:
"RTN","RCDPEAPQ",153,0)
 ;                      A1 - CTR
"RTN","RCDPEAPQ",154,0)
 ;                      A2 - Payer Name if RCWHICH=1 else Payer TIN
"RTN","RCDPEAPQ",155,0)
 ;                      A3 - Payer TIN if RCWHICH=1 else Payer Name
"RTN","RCDPEAPQ",156,0)
 N APDATE,CNT,END,ERAIEN,IEN,OKAY,RCECME,RCRZ,STA,STNAM,STNUM
"RTN","RCDPEAPQ",157,0)
 S APDATE=$$FMADD^XLFDT($P(RCRANGE,U,2),-1)
"RTN","RCDPEAPQ",158,0)
 S END=$P(RCRANGE,U,3),CNT=0
"RTN","RCDPEAPQ",159,0)
 ;
"RTN","RCDPEAPQ",160,0)
 ; Scan F index for ERA within date range
"RTN","RCDPEAPQ",161,0)
 F  S APDATE=$O(^RCY(344.4,"F",APDATE)) Q:'APDATE  Q:(APDATE\1)>END  D
"RTN","RCDPEAPQ",162,0)
 . S ERAIEN=""
"RTN","RCDPEAPQ",163,0)
 . F  S ERAIEN=$O(^RCY(344.4,"F",APDATE,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEAPQ",164,0)
 . . ;
"RTN","RCDPEAPQ",165,0)
 . . ; Check division - Note return values are set to UNKNOWN if not available
"RTN","RCDPEAPQ",166,0)
 . . D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEAPQ",167,0)
 . . I RCDIV=2,'$D(RCDIVS(STA)) Q
"RTN","RCDPEAPQ",168,0)
 . . ;
"RTN","RCDPEAPQ",169,0)
 . . ; PRCA*4.5*304 - Check if we include this ERA in report
"RTN","RCDPEAPQ",170,0)
 . . I RCPAY="A",RCLAIM'="A" D  Q:'OKAY  ; PRCA*4.5*326 If all payers included, check by type
"RTN","RCDPEAPQ",171,0)
 . . . S OKAY=$$ISTYPE^RCDPEU1(344.4,ERAIEN,RCLAIM)
"RTN","RCDPEAPQ",172,0)
 . . ;
"RTN","RCDPEAPQ",173,0)
 . . ; Check Payer Name
"RTN","RCDPEAPQ",174,0)
 . . I RCPAY'="A" D  Q:'OKAY               ; PRCA*4.5*326 
"RTN","RCDPEAPQ",175,0)
 . . . S OKAY=$$ISSEL^RCDPEU1(344.4,ERAIEN)
"RTN","RCDPEAPQ",176,0)
 . . ;
"RTN","RCDPEAPQ",177,0)
 . . ; If it does not already exist for this ERA, build X-ref of ERA detail lines to the lines in the worklist
"RTN","RCDPEAPQ",178,0)
 . . I '$D(^TMP("RCDPEAPP2",$J,ERAIEN)) D BUILD(ERAIEN)
"RTN","RCDPEAPQ",179,0)
 . . ;
"RTN","RCDPEAPQ",180,0)
 . . ; Scan index for auto posted claim lines within the ERA
"RTN","RCDPEAPQ",181,0)
 . . S RCRZ=""
"RTN","RCDPEAPQ",182,0)
 . . F  S RCRZ=$O(^RCY(344.4,"F",APDATE,ERAIEN,RCRZ)) Q:'RCRZ  D
"RTN","RCDPEAPQ",183,0)
 . . . D SAVE(ERAIEN,RCRZ,RCTYPE,APDATE,RCSORT)     ; Save claim line detail to ^TMP global
"RTN","RCDPEAPQ",184,0)
 Q
"RTN","RCDPEAPQ",185,0)
 ;
"RTN","RCDPEAPQ",186,0)
BUILD(RCSCR) ; Build cross-reference of ERA detail lines to ERA scratch-pad lines
"RTN","RCDPEAPQ",187,0)
 ; Input:   RCSCR   - Internal IEN of file 344.4/344.49
"RTN","RCDPEAPQ",188,0)
 N CNT,ERADET,ERALINE,SUB,SUB1
"RTN","RCDPEAPQ",189,0)
 Q:'$G(RCSCR)                               ; No ERA IEN
"RTN","RCDPEAPQ",190,0)
 Q:'$D(^RCY(344.49,RCSCR))                  ; No scratch pad entry for ERA
"RTN","RCDPEAPQ",191,0)
 S SUB=0
"RTN","RCDPEAPQ",192,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAPQ",193,0)
 . Q:SUB["."                                ; Skip split edit lines
"RTN","RCDPEAPQ",194,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) ; Get scratchpad ^RCY(344.49,RCSCR,1) node
"RTN","RCDPEAPQ",195,0)
 . Q:'SUB1
"RTN","RCDPEAPQ",196,0)
 . ;
"RTN","RCDPEAPQ",197,0)
 . ; Get pointer back to ERA detail line(s) - This can be a set of comma pieces
"RTN","RCDPEAPQ",198,0)
 . S ERALINE=$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,9)
"RTN","RCDPEAPQ",199,0)
 . F CNT=1:1:$L(ERALINE,",") D
"RTN","RCDPEAPQ",200,0)
 . . S ERADET=$P(ERALINE,",",CNT)
"RTN","RCDPEAPQ",201,0)
 . . I ERADET S ^TMP("RCDPEAPP2",$J,RCSCR,ERADET)=+$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAPQ",202,0)
 Q
"RTN","RCDPEAPS")
0^68^B32681554
"RTN","RCDPEAPS",1,0)
RCDPEAPS ;ALB/DMB - ERA STATUS CHANGE AUDIT REPORT ;Nov 25, 2015
"RTN","RCDPEAPS",2,0)
 ;;4.5;Accounts Receivable;**304,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAPS",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAPS",4,0)
 ;
"RTN","RCDPEAPS",5,0)
 ;
"RTN","RCDPEAPS",6,0)
EN ;
"RTN","RCDPEAPS",7,0)
 ; Prompt for report type
"RTN","RCDPEAPS",8,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,RCALL,RCTYPE,RCERA,RCRANGE ; PRCA*4.5*326
"RTN","RCDPEAPS",9,0)
 S DIR(0)="SA^S:SINGLE ERA;A:ALL"
"RTN","RCDPEAPS",10,0)
 S DIR("A")="SELECT (S)ingle ERA or (A)LL: ",DIR("B")="ALL"
"RTN","RCDPEAPS",11,0)
 D ^DIR
"RTN","RCDPEAPS",12,0)
 I Y'="S",Y'="A" Q
"RTN","RCDPEAPS",13,0)
 S RCALL=Y ; PRCA*4.5*326
"RTN","RCDPEAPS",14,0)
 ;
"RTN","RCDPEAPS",15,0)
 ; If Single ERA, select the ERA
"RTN","RCDPEAPS",16,0)
 S RCERA="",RCTYPE="A"
"RTN","RCDPEAPS",17,0)
 I RCALL="S" S RCERA=$$SELERA() Q:'RCERA  G RANGE  ; PRCA*4.5*326
"RTN","RCDPEAPS",18,0)
 ;
"RTN","RCDPEAPS",19,0)
 ; If ALL ERAs, select Type of Payers to include and Date Range for Report
"RTN","RCDPEAPS",20,0)
 S RCTYPE=$$RTYPE^RCDPEU1("A") I RCTYPE=-1 Q  ; PRCA*4.5*326
"RTN","RCDPEAPS",21,0)
 ;
"RTN","RCDPEAPS",22,0)
RANGE ; Select date range for audit transactions
"RTN","RCDPEAPS",23,0)
 S RCRANGE=""
"RTN","RCDPEAPS",24,0)
 S RCRANGE=$$DTRNG() I 'RCRANGE Q
"RTN","RCDPEAPS",25,0)
 ;
"RTN","RCDPEAPS",26,0)
 ; Prompt for device
"RTN","RCDPEAPS",27,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","RCDPEAPS",28,0)
 S %ZIS="QM"
"RTN","RCDPEAPS",29,0)
 D ^%ZIS
"RTN","RCDPEAPS",30,0)
 I POP G ENQ
"RTN","RCDPEAPS",31,0)
 I $D(IO("Q")) D  G ENQ
"RTN","RCDPEAPS",32,0)
 . S ZTRTN="RUN^RCDPEAPS(RCERA,RCRANGE)"
"RTN","RCDPEAPS",33,0)
 . S ZTIO=ION
"RTN","RCDPEAPS",34,0)
 . S ZTSAVE("*")=""
"RTN","RCDPEAPS",35,0)
 . S ZTDESC="ERA STATUS CHANGE AUDIT REPORT"
"RTN","RCDPEAPS",36,0)
 . D ^%ZTLOAD
"RTN","RCDPEAPS",37,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","RCDPEAPS",38,0)
 . D HOME^%ZIS
"RTN","RCDPEAPS",39,0)
 U IO
"RTN","RCDPEAPS",40,0)
 ;
"RTN","RCDPEAPS",41,0)
 D RUN(RCERA,RCRANGE)
"RTN","RCDPEAPS",42,0)
 ;
"RTN","RCDPEAPS",43,0)
ENQ ;
"RTN","RCDPEAPS",44,0)
 Q
"RTN","RCDPEAPS",45,0)
 ;
"RTN","RCDPEAPS",46,0)
RUN(RCERA,RCRANGE) ;
"RTN","RCDPEAPS",47,0)
 ;
"RTN","RCDPEAPS",48,0)
 K ^TMP("RCDPEAPS",$J)
"RTN","RCDPEAPS",49,0)
 ;
"RTN","RCDPEAPS",50,0)
 ; Compile Data
"RTN","RCDPEAPS",51,0)
 D COMPILE(RCERA,RCRANGE)
"RTN","RCDPEAPS",52,0)
 ;
"RTN","RCDPEAPS",53,0)
 ; Generate Report
"RTN","RCDPEAPS",54,0)
 D REPORT(RCRANGE)
"RTN","RCDPEAPS",55,0)
 ;
"RTN","RCDPEAPS",56,0)
 K ^TMP("RCDPEAPS",$J)
"RTN","RCDPEAPS",57,0)
 Q
"RTN","RCDPEAPS",58,0)
 ;
"RTN","RCDPEAPS",59,0)
COMPILE(RCERA,RCRANGE) ;
"RTN","RCDPEAPS",60,0)
 ; Compile the data
"RTN","RCDPEAPS",61,0)
 ;
"RTN","RCDPEAPS",62,0)
 N CNT,BDATE,EDATE,AUDDATE,IEN,CNT,DATA
"RTN","RCDPEAPS",63,0)
 S CNT=0,BDATE=$P(RCRANGE,U,1)-.000001,EDATE=$P(RCRANGE,U,2)+.999999
"RTN","RCDPEAPS",64,0)
 ;
"RTN","RCDPEAPS",65,0)
 ; If RCERA is non-zero, then we are doing a single ERA
"RTN","RCDPEAPS",66,0)
 I RCERA D  Q
"RTN","RCDPEAPS",67,0)
 . S IEN="" F  S IEN=$O(^RCY(344.72,"E",RCERA,IEN)) Q:'IEN  D
"RTN","RCDPEAPS",68,0)
 .. S DATA=$G(^RCY(344.72,IEN,0))
"RTN","RCDPEAPS",69,0)
 .. S AUDDATE=$P(DATA,U,1)
"RTN","RCDPEAPS",70,0)
 .. I AUDDATE="" Q
"RTN","RCDPEAPS",71,0)
 .. I AUDDATE<BDATE!(AUDDATE>EDATE) Q
"RTN","RCDPEAPS",72,0)
 .. S CNT=CNT+1
"RTN","RCDPEAPS",73,0)
 .. S ^TMP("RCDPEAPS",$J,RCERA,AUDDATE,CNT)=$P(DATA,U,4)_U_$P(DATA,U,5)_U_$P(DATA,U,2)_U_$P(DATA,U,6)
"RTN","RCDPEAPS",74,0)
 ;
"RTN","RCDPEAPS",75,0)
 ; If RCERA is zero, then we are gathering data by date
"RTN","RCDPEAPS",76,0)
 I 'RCERA D  Q
"RTN","RCDPEAPS",77,0)
 . S AUDDATE=BDATE F  S AUDDATE=$O(^RCY(344.72,"B",AUDDATE)) Q:'AUDDATE!(AUDDATE>EDATE)  D
"RTN","RCDPEAPS",78,0)
 .. S IEN="" F  S IEN=$O(^RCY(344.72,"B",AUDDATE,IEN)) Q:'IEN  D
"RTN","RCDPEAPS",79,0)
 ... S DATA=$G(^RCY(344.72,IEN,0))
"RTN","RCDPEAPS",80,0)
 ... I $P(DATA,U,3)="" Q
"RTN","RCDPEAPS",81,0)
 ... S CNT=CNT+1
"RTN","RCDPEAPS",82,0)
 ... S ^TMP("RCDPEAPS",$J,$P(DATA,U,3),AUDDATE,CNT)=$P(DATA,U,4)_U_$P(DATA,U,5)_U_$P(DATA,U,2)_U_$P(DATA,U,6)
"RTN","RCDPEAPS",83,0)
 Q
"RTN","RCDPEAPS",84,0)
 ;
"RTN","RCDPEAPS",85,0)
REPORT(RCRANGE) ;
"RTN","RCDPEAPS",86,0)
 ; Display output
"RTN","RCDPEAPS",87,0)
 ;
"RTN","RCDPEAPS",88,0)
 ; Initialize Report Date, Page Number and Sting of underscores
"RTN","RCDPEAPS",89,0)
 N RCSCR,RCNOW,RCPG,RCHR,ERA,DATE,CNT,DATA,LINES
"RTN","RCDPEAPS",90,0)
 S RCSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","RCDPEAPS",91,0)
 S RCNOW=$$UP^XLFSTR($$NOW^RCDPRU()),RCPG=0,RCHR="",$P(RCHR,"-",IOM+1)=""
"RTN","RCDPEAPS",92,0)
 ;
"RTN","RCDPEAPS",93,0)
 U IO
"RTN","RCDPEAPS",94,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCRANGE)
"RTN","RCDPEAPS",95,0)
 I '$D(^TMP("RCDPEAPS",$J)) W !,"No data found"
"RTN","RCDPEAPS",96,0)
 ;
"RTN","RCDPEAPS",97,0)
 ; Display the detail
"RTN","RCDPEAPS",98,0)
 S ERA="" F  S ERA=$O(^TMP("RCDPEAPS",$J,ERA)) Q:'ERA  D  I RCPG=0 Q
"RTN","RCDPEAPS",99,0)
 . I RCTYPE'="A",'$$ISTYPE^RCDPEU1(344.4,ERA,RCTYPE) Q  ; PRCA*4.5*326 Filter by Medical, Tricare or Pharmacy
"RTN","RCDPEAPS",100,0)
 . S DATE="" F  S DATE=$O(^TMP("RCDPEAPS",$J,ERA,DATE)) Q:'DATE  D  I RCPG=0 Q
"RTN","RCDPEAPS",101,0)
 .. S CNT=0 F  S CNT=$O(^TMP("RCDPEAPS",$J,ERA,DATE,CNT)) Q:'CNT  D  I RCPG=0 Q
"RTN","RCDPEAPS",102,0)
 ... S DATA=^TMP("RCDPEAPS",$J,ERA,DATE,CNT)
"RTN","RCDPEAPS",103,0)
 ... S LINES=2
"RTN","RCDPEAPS",104,0)
 ... I $P(DATA,U,4)]"" S LINES=3
"RTN","RCDPEAPS",105,0)
 ... I RCSCR S LINES=LINES+1
"RTN","RCDPEAPS",106,0)
 ... D CHKP(RCNOW,.RCPG,RCHR,RCRANGE,RCSCR,LINES) I RCPG=0 Q
"RTN","RCDPEAPS",107,0)
 ... W !,ERA,?15,$$FMTE^XLFDT(DATE,"2Z"),?38,$$STATUS($P(DATA,U,1)),?49,$$STATUS($P(DATA,U,2))
"RTN","RCDPEAPS",108,0)
 ... W ?63,$E($$GET1^DIQ(200,+$P(DATA,U,3)_",",.01),1,IOM-63)
"RTN","RCDPEAPS",109,0)
 ... I $P(DATA,U,4)]"" W !,?3,$E($P(DATA,U,4),1,IOM-4)
"RTN","RCDPEAPS",110,0)
 ... W !
"RTN","RCDPEAPS",111,0)
 ;
"RTN","RCDPEAPS",112,0)
 I 'RCSCR W !,@IOF
"RTN","RCDPEAPS",113,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","RCDPEAPS",114,0)
 D ^%ZISC
"RTN","RCDPEAPS",115,0)
 ;
"RTN","RCDPEAPS",116,0)
 I RCPG,RCSCR D PAUSE
"RTN","RCDPEAPS",117,0)
 Q
"RTN","RCDPEAPS",118,0)
 ;
"RTN","RCDPEAPS",119,0)
HEADER(RCNOW,RCPG,RCHR,RCRANGE) ;
"RTN","RCDPEAPS",120,0)
 ; Print Header
"RTN","RCDPEAPS",121,0)
 ;
"RTN","RCDPEAPS",122,0)
 N LINE
"RTN","RCDPEAPS",123,0)
 W @IOF
"RTN","RCDPEAPS",124,0)
 S RCPG=RCPG+1
"RTN","RCDPEAPS",125,0)
 S LINE="EDI Lockbox ERA Status Change Audit Report"
"RTN","RCDPEAPS",126,0)
 W ?(IOM-$L(LINE)\2),LINE
"RTN","RCDPEAPS",127,0)
 S LINE="Page: "_RCPG_" "
"RTN","RCDPEAPS",128,0)
 W ?(IOM-$L(LINE)),LINE
"RTN","RCDPEAPS",129,0)
 S LINE="RUN DATE: "_RCNOW
"RTN","RCDPEAPS",130,0)
 S LINE=LINE_"             MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEAPS",131,0)
 S LINE=LINE_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARAMCY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEAPS",132,0)
 W !?(IOM-$L(LINE)\2),LINE
"RTN","RCDPEAPS",133,0)
 S LINE="DATE RANGE: "_$$FMTE^XLFDT($P(RCRANGE,U,1),"5DZ")_" - "_$$FMTE^XLFDT($P(RCRANGE,U,2),"5DZ")
"RTN","RCDPEAPS",134,0)
 W !?(IOM-$L(LINE)\2),LINE
"RTN","RCDPEAPS",135,0)
 ;
"RTN","RCDPEAPS",136,0)
 W !!,"ERA#",?15,"Date/Time Edited",?38,"Status (Old/New)",?63,"User"
"RTN","RCDPEAPS",137,0)
 W !?3,"Reason Text"
"RTN","RCDPEAPS",138,0)
 W !,RCHR
"RTN","RCDPEAPS",139,0)
 Q
"RTN","RCDPEAPS",140,0)
 ;
"RTN","RCDPEAPS",141,0)
PAUSE() ;
"RTN","RCDPEAPS",142,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","RCDPEAPS",143,0)
 S DIR(0)="E"
"RTN","RCDPEAPS",144,0)
 D ^DIR
"RTN","RCDPEAPS",145,0)
 Q Y
"RTN","RCDPEAPS",146,0)
 ;
"RTN","RCDPEAPS",147,0)
CHKP(RCNOW,RCPG,RCHR,RCRANGE,RCSCR,LINES) ;
"RTN","RCDPEAPS",148,0)
 ; Check if we need to do a page break
"RTN","RCDPEAPS",149,0)
 ;
"RTN","RCDPEAPS",150,0)
 I $Y'>(IOSL-LINES) Q
"RTN","RCDPEAPS",151,0)
 I RCSCR,'$$PAUSE S RCPG=0 Q
"RTN","RCDPEAPS",152,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCRANGE)
"RTN","RCDPEAPS",153,0)
 Q
"RTN","RCDPEAPS",154,0)
 ;
"RTN","RCDPEAPS",155,0)
SELERA() ;
"RTN","RCDPEAPS",156,0)
 ; Lookup on the Electronic Remittance Advice (#344.4) file
"RTN","RCDPEAPS",157,0)
 ;
"RTN","RCDPEAPS",158,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","RCDPEAPS",159,0)
 S DIC="^RCY(344.4,",DIC(0)="QEAMn"
"RTN","RCDPEAPS",160,0)
 D ^DIC
"RTN","RCDPEAPS",161,0)
 I $G(DTOUT)!$G(DUOUT)!(Y=-1) Q 0
"RTN","RCDPEAPS",162,0)
 Q +Y
"RTN","RCDPEAPS",163,0)
 ;
"RTN","RCDPEAPS",164,0)
DTRNG() ;
"RTN","RCDPEAPS",165,0)
 ; Get the date range for the report
"RTN","RCDPEAPS",166,0)
 ;
"RTN","RCDPEAPS",167,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT,BDATE
"RTN","RCDPEAPS",168,0)
 S DIR("?")="ENTER THE EARLIEST AUDIT DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAPS",169,0)
 S DIR(0)="DA^:"_DT_":APE",DIR("A")="START DATE: ",DIR("B")="T" D ^DIR
"RTN","RCDPEAPS",170,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q 0
"RTN","RCDPEAPS",171,0)
 S BDATE=Y
"RTN","RCDPEAPS",172,0)
 K DIR
"RTN","RCDPEAPS",173,0)
 S DIR("?")="ENTER THE LATEST AUDIT DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPEAPS",174,0)
 S DIR("B")=Y(0)
"RTN","RCDPEAPS",175,0)
 S DIR(0)="DA^"_BDATE_":"_DT_":APE",DIR("A")="END DATE: ",DIR("B")="T" D ^DIR
"RTN","RCDPEAPS",176,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 0
"RTN","RCDPEAPS",177,0)
 Q BDATE_"^"_Y
"RTN","RCDPEAPS",178,0)
 ;
"RTN","RCDPEAPS",179,0)
STATUS(STATUS) ;
"RTN","RCDPEAPS",180,0)
 ; Convert internal status to external status
"RTN","RCDPEAPS",181,0)
 I '$D(STATUS) Q ""
"RTN","RCDPEAPS",182,0)
 I STATUS="" Q "NULL"
"RTN","RCDPEAPS",183,0)
 Q $$EXTERNAL^DILFD(344.4,4.02,,STATUS)
"RTN","RCDPEAR1")
0^67^B185349630
"RTN","RCDPEAR1",1,0)
RCDPEAR1 ;ALB/TMK/PJH - ERA Unmatched Aging Report (file #344.4) ;Dec 20, 2014@18:41:35
"RTN","RCDPEAR1",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,293,298,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAR1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAR1",4,0)
 Q
"RTN","RCDPEAR1",5,0)
 ;
"RTN","RCDPEAR1",6,0)
 ; PRCA*4.5*298 routine completely refactored
"RTN","RCDPEAR1",7,0)
EN1 ; entry point - ERA Unmatched Aging Report [RCDPE ERA AGING REPORT]
"RTN","RCDPEAR1",8,0)
 ; data from ELECTRONIC REMITTANCE ADVICE file (#344.4)
"RTN","RCDPEAR1",9,0)
 N RCDISPTY,RCDT,RCDTRNG,RCHDR,RCJOB,RCLNCNT,RCLSTMGR,RCOUT,RCPAR,RCPAY,RCPGNUM,RCPYRLST
"RTN","RCDPEAR1",10,0)
 N RCSTOP,RCTMPND,RCTYPE,RCXCLUDE,RCZROBAL,VAUTD,Y
"RTN","RCDPEAR1",11,0)
 ; RCDISPTY - display type (Excel)
"RTN","RCDPEAR1",12,0)
 ; RCDTRNG - selected date range
"RTN","RCDPEAR1",13,0)
 ; RCDT("BEG") - start date, RCDT("END") - end date
"RTN","RCDPEAR1",14,0)
 ; RCHDR - header array
"RTN","RCDPEAR1",15,0)
 ; RCLSTMGR - list manager flag
"RTN","RCDPEAR1",16,0)
 ; RCDTRNG - "1^start date^end date"
"RTN","RCDPEAR1",17,0)
 ; RCXCLUDE("CHAMPVA") - boolean, exclude CHAMPVA
"RTN","RCDPEAR1",18,0)
 ; RCXCLUDE("TRICARE") - boolean, exclude TriCare
"RTN","RCDPEAR1",19,0)
 ; RCZROBAL - zero balance flag
"RTN","RCDPEAR1",20,0)
 ; VAUTD - division information
"RTN","RCDPEAR1",21,0)
 ; RCTYPE - MEDICAL/PHARMACY/TRICARE/ALL = M/P/T/A
"RTN","RCDPEAR1",22,0)
 ; RCPAY - S=SELECTED, R=RANGE, A=ALL (Selected or range - payers stored in ^TMP(""RCDPEU1"",$J))
"RTN","RCDPEAR1",23,0)
 ;
"RTN","RCDPEAR1",24,0)
 K ^TMP($J,"RC TOTAL")  ; clear old totals
"RTN","RCDPEAR1",25,0)
 W !,$$HDRNM D DIVISION^VAUTOMA  ; returns VAUTD
"RTN","RCDPEAR1",26,0)
 I 'VAUTD&($D(VAUTD)'=11) G EN1Q
"RTN","RCDPEAR1",27,0)
 S RCLSTMGR=""  ; initial value, won't be asked if non-null
"RTN","RCDPEAR1",28,0)
 S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEAR1",29,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() I 'RCDTRNG G EN1Q
"RTN","RCDPEAR1",30,0)
 S RCDT("BEG")=$P(RCDTRNG,U,2),RCDT("END")=$P(RCDTRNG,U,3)
"RTN","RCDPEAR1",31,0)
 ;
"RTN","RCDPEAR1",32,0)
 ; PRCA*4.5*326 - Ask to show Medical/Pharmacy Tricare or All
"RTN","RCDPEAR1",33,0)
 S RCTYPE=$$RTYPE^RCDPEU1("A")
"RTN","RCDPEAR1",34,0)
 I RCTYPE=-1 G EN1Q
"RTN","RCDPEAR1",35,0)
 ;
"RTN","RCDPEAR1",36,0)
 S RCPAR("SELC")=$$PAYRNG^RCDPEU1()             ; PRCA*4.5*326 - Selected or Range of Payers
"RTN","RCDPEAR1",37,0)
 I RCPAR("SELC")=-1 G EN1Q                      ; PRCA*4.5*326 '^' or timeout
"RTN","RCDPEAR1",38,0)
 S RCPAY=RCPAR("SELC")
"RTN","RCDPEAR1",39,0)
 ;
"RTN","RCDPEAR1",40,0)
 I RCPAR("SELC")'="A" D  Q:XX=-1                ; PRCA*4.5*326 - Since we don't want all payers 
"RTN","RCDPEAR1",41,0)
 . S RCPAR("TYPE")=RCTYPE                       ;         prompt for payers we do want
"RTN","RCDPEAR1",42,0)
 . S RCPAR("DICA")="Select Insurance Company NAME: "
"RTN","RCDPEAR1",43,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPEAR1",44,0)
 ;
"RTN","RCDPEAR1",45,0)
 ; Get Zero Balance Filter
"RTN","RCDPEAR1",46,0)
 S RCZROBAL=$$ZROBAL() G:RCZROBAL<0 EN1Q
"RTN","RCDPEAR1",47,0)
 ; display type, ask for Excel format
"RTN","RCDPEAR1",48,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() I RCDISPTY=-1 G EN1Q
"RTN","RCDPEAR1",49,0)
 ; display device info about Excel format, set ListMan flag to prevent question
"RTN","RCDPEAR1",50,0)
 I RCDISPTY S RCLSTMGR="^" D INFO^RCDPEM6
"RTN","RCDPEAR1",51,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR1",52,0)
 S RCJOB=$J  ; needed in RPTOUT
"RTN","RCDPEAR1",53,0)
 ;
"RTN","RCDPEAR1",54,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEAR1",55,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EN1Q
"RTN","RCDPEAR1",56,0)
 ; display in ListMan format and exit on return
"RTN","RCDPEAR1",57,0)
 I RCLSTMGR D  G EN1Q
"RTN","RCDPEAR1",58,0)
 .S RCTMPND=$T(+0)_"^ERA UNMATCHED AGING"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEAR1",59,0)
 .D RPTOUT
"RTN","RCDPEAR1",60,0)
 .N H,L,HDR S L=0
"RTN","RCDPEAR1",61,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEAR1",62,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEAR1",63,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEAR1",64,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEAR1",65,0)
 .; invoke ListMan
"RTN","RCDPEAR1",66,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEAR1",67,0)
 ;
"RTN","RCDPEAR1",68,0)
 ; Ask device
"RTN","RCDPEAR1",69,0)
 N %ZIS S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR1",70,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR1",71,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK,ZTSTOP
"RTN","RCDPEAR1",72,0)
 .S ZTRTN="RPTOUT^RCDPEAR1",ZTDESC="AR - EDI LOCKBOX ERA AGING REPORT"
"RTN","RCDPEAR1",73,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEAR1",74,0)
 .S ZTSAVE("^TMP(""RCDPEU1"",$J,")="" ; PRCA*4.5*326
"RTN","RCDPEAR1",75,0)
 .D ^%ZTLOAD
"RTN","RCDPEAR1",76,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPEAR1",77,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR1",78,0)
 ;
"RTN","RCDPEAR1",79,0)
 U IO S RCTMPND="" D RPTOUT
"RTN","RCDPEAR1",80,0)
 ;
"RTN","RCDPEAR1",81,0)
EN1Q ; exit and clean up
"RTN","RCDPEAR1",82,0)
 K ^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J),^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPEAR1",83,0)
 I '$G(RCLSTMGR) D ^%ZISC
"RTN","RCDPEAR1",84,0)
 Q
"RTN","RCDPEAR1",85,0)
 ;
"RTN","RCDPEAR1",86,0)
RPTOUT ; Entry point for listing report
"RTN","RCDPEAR1",87,0)
 ; RCTMPND = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR1",88,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR1",89,0)
 ; Return global if RCTMPND not null: ^TMP($J,RCTMPND,line#)=line text
"RTN","RCDPEAR1",90,0)
 N ERADT,J,PYMNTFRM,RC0,RCEDT,RCEXCEP,RCFLIEN,RCITM,RCNT,RCSF0,RCZ,STA,STNAM,STNUM,X,XX,Y,Z,Z0
"RTN","RCDPEAR1",91,0)
 ; ERADT - date of entry
"RTN","RCDPEAR1",92,0)
 ; RCFLIEN - entry number in file #344.4
"RTN","RCDPEAR1",93,0)
 ; RCITM - entry in ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I
"RTN","RCDPEAR1",94,0)
 ; RCSF0 - zero node of sub-file entry
"RTN","RCDPEAR1",95,0)
 ;
"RTN","RCDPEAR1",96,0)
 S RCTMPND=$G(RCTMPND)  I RCTMPND'="" K ^TMP($J,RCTMPND)  ; clear residual data
"RTN","RCDPEAR1",97,0)
 ; RCNT - count of items
"RTN","RCDPEAR1",98,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR1",99,0)
 S RCFLIEN=0,RCNT=0
"RTN","RCDPEAR1",100,0)
 F  S RCFLIEN=$O(^RCY(344.4,"AMATCH",0,RCFLIEN)) Q:'RCFLIEN  D
"RTN","RCDPEAR1",101,0)
 .K RCITM M RCITM=^RCY(344.4,RCFLIEN)  ; grab entire entry
"RTN","RCDPEAR1",102,0)
 .Q:$P($G(RCITM(6)),U)  ; who removed the ERA - PRCA*4.5*293
"RTN","RCDPEAR1",103,0)
 .S ERADT=+$P($G(RCITM(0)),U,7)  ; (#.07) FILE DATE/TIME [7D]
"RTN","RCDPEAR1",104,0)
 .Q:'ERADT  ; no date, don't include
"RTN","RCDPEAR1",105,0)
 .; Check date range
"RTN","RCDPEAR1",106,0)
 .Q:(RCDT("BEG")>ERADT\1)!(ERADT\1>RCDT("END"))
"RTN","RCDPEAR1",107,0)
 .; Check Station/Division
"RTN","RCDPEAR1",108,0)
 .;I '$$CHKDIV^RCDPEDAR(RCFLIEN,1,.VAUTD) Q
"RTN","RCDPEAR1",109,0)
 .I 'VAUTD D ERASTA^RCDPEM4(RCFLIEN,.STA,.STNUM,.STNAM) I '$D(VAUTD(STA)) Q
"RTN","RCDPEAR1",110,0)
 .;
"RTN","RCDPEAR1",111,0)
 .I RCPAY'="A" D  Q:'XX
"RTN","RCDPEAR1",112,0)
 ..S XX=$$ISSEL^RCDPEU1(344.4,RCFLIEN)             ; PRCA*4.5*326 Check if payer was selected
"RTN","RCDPEAR1",113,0)
 .E  I RCTYPE'="A" D  Q:'XX                        ; If all of a give type of payer selected
"RTN","RCDPEAR1",114,0)
 ..S XX=$$ISTYPE^RCDPEU1(344.4,RCFLIEN,RCTYPE)     ;  check that payer matches type
"RTN","RCDPEAR1",115,0)
 .;
"RTN","RCDPEAR1",116,0)
 .; Check for Zero Bal
"RTN","RCDPEAR1",117,0)
 .I 'RCZROBAL,'$P($G(RCITM(0)),U,5) Q  ; (#.05) TOTAL AMOUNT PAID [5N]
"RTN","RCDPEAR1",118,0)
 .S ^TMP($J,"RCERA_AGED",$$FMDIFF^XLFDT(ERADT,DT),RCFLIEN)=0,RCNT=RCNT+1
"RTN","RCDPEAR1",119,0)
 ;
"RTN","RCDPEAR1",120,0)
 S ^TMP($J,"RC TOTAL","COUNT")=RCNT  ; save counter
"RTN","RCDPEAR1",121,0)
 ; build header, initialize stop flag
"RTN","RCDPEAR1",122,0)
 D:'RCLSTMGR HDRBLD S RCSTOP=0
"RTN","RCDPEAR1",123,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPEAR1",124,0)
 ;
"RTN","RCDPEAR1",125,0)
 ; Excel format, print and exit
"RTN","RCDPEAR1",126,0)
 I RCDISPTY D EXCEL,^%ZISC G EXIT
"RTN","RCDPEAR1",127,0)
 ;
"RTN","RCDPEAR1",128,0)
 D  ;  Calculate total amount for ERA
"RTN","RCDPEAR1",129,0)
 .N T S T=0  ; total
"RTN","RCDPEAR1",130,0)
 .S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D
"RTN","RCDPEAR1",131,0)
 ..S RC0=$G(^RCY(344.4,RCFLIEN,0)),T=T+$P(RC0,U,5)
"RTN","RCDPEAR1",132,0)
 .;
"RTN","RCDPEAR1",133,0)
 .S ^TMP($J,"RC TOTAL","AMOUNT")=T
"RTN","RCDPEAR1",134,0)
 ;
"RTN","RCDPEAR1",135,0)
 S RCLNCNT=0  ; line counter
"RTN","RCDPEAR1",136,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; first header in report
"RTN","RCDPEAR1",137,0)
 ; list totals
"RTN","RCDPEAR1",138,0)
 S Y=" Total NUMBER Aged Electronic ERA messages found: "_$FN(^TMP($J,"RC TOTAL","COUNT"),",")
"RTN","RCDPEAR1",139,0)
 D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",140,0)
 S Y=" Total AMOUNT Aged Electronic ERA messages found: $"_$FN(^TMP($J,"RC TOTAL","AMOUNT"),",",2)
"RTN","RCDPEAR1",141,0)
 D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",142,0)
 ; if filters selected show total excluded
"RTN","RCDPEAR1",143,0)
 F J="CHAMPVA","TRICARE" I $G(RCXCLUDE(J)) S Y=" "_J_" exclusion count: "_(+$G(^TMP($J,"RC TOTAL",J))) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",144,0)
 D SL^RCDPEARL(" "_$TR($J("",78)," ","="),.RCLNCNT,RCTMPND)  ; row of equal signs
"RTN","RCDPEAR1",145,0)
 ;
"RTN","RCDPEAR1",146,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D  G:RCSTOP EXIT
"RTN","RCDPEAR1",147,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",148,0)
 .I RCPGNUM D SL^RCDPEARL(" ",.RCLNCNT,.RCTMPND) ; On detail list, skip line
"RTN","RCDPEAR1",149,0)
 .I 'RCLSTMGR,'RCPGNUM!(($Y+5)>IOSL) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",150,0)
 .S RC0=$G(^RCY(344.4,RCFLIEN,0))
"RTN","RCDPEAR1",151,0)
 .S RCEXCEP=$$XCEPT^RCDPEWLP(RCFLIEN)  ; PRCA*4.5*298  assignment of ERA exception flag (will either be "" or "x")
"RTN","RCDPEAR1",152,0)
 .S Z=$$SETSTR^VALM1($J(RCEXCEP_-RCZ,4),"",1,5)  ; PRCA*4.5*298 display ERA exception flag
"RTN","RCDPEAR1",153,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U,2),Z,5,50)
"RTN","RCDPEAR1",154,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",155,0)
 .S Z=$$SETSTR^VALM1($$PAYTIN^RCDPRU2($P(RC0,U,6)_"/"_$P(RC0,U,3),78),"",3,78) ; PRCA*4.5*321
"RTN","RCDPEAR1",156,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",157,0)
 .S Z=$$SETSTR^VALM1($J("",16)_$S($P(RC0,U,7):$$FMTE^XLFDT($P(RC0,U,7)\1,2),1:""),"",1,25)
"RTN","RCDPEAR1",158,0)
 .S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,5),15,2),Z,26,17)
"RTN","RCDPEAR1",159,0)
 .S Z=$$SETSTR^VALM1("  "_+$P(RC0,U,11),Z,43,11)
"RTN","RCDPEAR1",160,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U),Z_$S('$$HACERA^RCDPEU(RCFLIEN):"",1:" (HAC ERA)"),54,16) ; PRCA*4.5*321
"RTN","RCDPEAR1",161,0)
 .S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,4),2),Z,70,10)                 ; PRCA*4.5*321
"RTN","RCDPEAR1",162,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",163,0)
 .I "23"[$$ADJ^RCDPEU(RCFLIEN) D SL^RCDPEARL($J("",9)_"** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***",.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",164,0)
 .I $O(^RCY(344.4,RCFLIEN,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",165,0)
 ..N Q
"RTN","RCDPEAR1",166,0)
 ..D DISPADJ^RCDPESR8(RCFLIEN,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",167,0)
 ..I $O(^TMP($J,"RCERA_ADJ",0)) D SL^RCDPEARL($J("",9)_"** GENERAL ADJUSTMENT DATA EXIST FOR THIS ERA **",.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",168,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D SL^RCDPEARL($J("",9)_$G(^TMP($J,"RCERA_ADJ",Q)),.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",169,0)
 .;
"RTN","RCDPEAR1",170,0)
 .N D,RCSFIEN S RCSFIEN=0  ; RCSFIEN - sub-file ien, RCSF0 - zero node of sub-file entry
"RTN","RCDPEAR1",171,0)
 .F  S RCSFIEN=$O(^RCY(344.4,RCFLIEN,1,RCSFIEN)) Q:'RCSFIEN  S RCSF0=$G(^(RCSFIEN,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",172,0)
 ..N RCDATA,RCOUT  ; set by RCDPESR0, RCDATA - message data, RCOUT - formatted message display
"RTN","RCDPEAR1",173,0)
 ..I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",174,0)
 ..S D=$J("",7)_" EEOB Seq #: "_$P(RCSF0,U)_$S($D(^RCY(344.4,RCFLIEN,1,"ATB",1,RCSFIEN)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",175,0)
 ..S D=D_$S('$P(RCSF0,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RCSF0,U,2),0)),0)),U))_"  "_$J(+$P(RCSF0,U,3),"",2)
"RTN","RCDPEAR1",176,0)
 ..D SL^RCDPEARL(D,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",177,0)
 ..Q:$P(RCSF0,U,2)
"RTN","RCDPEAR1",178,0)
 ..D DISP^RCDPESR0("^RCY(344.4,"_RCFLIEN_",1,"_RCSFIEN_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",179,0)
 ..I '$O(RCOUT(0)) D SL^RCDPEARL($J("",9)_" NO DETAIL FOUND",.RCLNCNT,RCTMPND) Q
"RTN","RCDPEAR1",180,0)
 ..S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",181,0)
 ...I 'RCDISPTY,'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",182,0)
 ...D SL^RCDPEARL($J("",9)_"*"_RCOUT(Z),.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",183,0)
 ;
"RTN","RCDPEAR1",184,0)
 ; PRCA*4.5*298, put end-of-report into SL^RCDPEARL
"RTN","RCDPEAR1",185,0)
 I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",186,0)
 ;
"RTN","RCDPEAR1",187,0)
EXIT ;
"RTN","RCDPEAR1",188,0)
 ; PRCA*4.5*298, added ListMan check
"RTN","RCDPEAR1",189,0)
 I '$D(ZTQUEUED),'RCLSTMGR D
"RTN","RCDPEAR1",190,0)
 .I 'RCSTOP,RCPGNUM,RCTMPND="" D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR1",191,0)
 .D ^%ZISC
"RTN","RCDPEAR1",192,0)
 ;
"RTN","RCDPEAR1",193,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RCDPEAR1",194,0)
 K ^TMP($J,"RCERA_AGED"),^TMP("RCSELPAY",$J),^TMP($J,"RC TOTAL"),^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPEAR1",195,0)
 Q
"RTN","RCDPEAR1",196,0)
 ;
"RTN","RCDPEAR1",197,0)
HDRBLD ; Create the report header
"RTN","RCDPEAR1",198,0)
 ; Input:   RCDISPTY        - 1 - Output to excel, 0 otherwise
"RTN","RCDPEAR1",199,0)
 ;          RCDTRNG         - Date range selected
"RTN","RCDPEAR1",200,0)
 ;          RCXCLUDE        - TRICARE /CHAMPVA flags
"RTN","RCDPEAR1",201,0)
 ;          VAUTD           - Divisions to include in report (if listed in VAUTD array)
"RTN","RCDPEAR1",202,0)
 ; Output:  RCHDR(0)        - Header text line count
"RTN","RCDPEAR1",203,0)
 ;          RCHDR(1)        - Excel column data (only set If DISPTY=1)
"RTN","RCDPEAR1",204,0)
 ;          RCHDR("XECUTE") - M code for page number
"RTN","RCDPEAR1",205,0)
 ;          RCHDR("RUNDATE")- Date/time report generated, external format
"RTN","RCDPEAR1",206,0)
 ;          RCPGNUM         - Page counter
"RTN","RCDPEAR1",207,0)
 ;          RCSTOP          - Flag to exit
"RTN","RCDPEAR1",208,0)
 ;
"RTN","RCDPEAR1",209,0)
 N CHATRI,DIV,HCNT,XX,Y
"RTN","RCDPEAR1",210,0)
 K RCHDR
"RTN","RCDPEAR1",211,0)
 S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR1",212,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEAR1",213,0)
 . S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEAR1",214,0)
 . S XX="Aged Days^Trace #^Payment From/ID^ERA Date^File Date^Amount Paid"
"RTN","RCDPEAR1",215,0)
 . S XX=XX_"^EEOB Cnt^ERA #^EEOB Detail"
"RTN","RCDPEAR1",216,0)
 . S RCHDR(1)=XX
"RTN","RCDPEAR1",217,0)
 ;
"RTN","RCDPEAR1",218,0)
 S XX="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"
"RTN","RCDPEAR1",219,0)
 S XX=XX_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"_"_""          Page: ""_RCPGNUM"
"RTN","RCDPEAR1",220,0)
 S RCHDR("XECUTE")=XX
"RTN","RCDPEAR1",221,0)
 S HCNT=1
"RTN","RCDPEAR1",222,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1
"RTN","RCDPEAR1",223,0)
 S RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAR1",224,0)
 ;
"RTN","RCDPEAR1",225,0)
 ; divisions
"RTN","RCDPEAR1",226,0)
 S Y="DIVISIONS: "
"RTN","RCDPEAR1",227,0)
 I $D(VAUTD)=1 S Y=Y_"ALL",Y=$J("",80-$L(Y)\2)_Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",228,0)
 I $D(VAUTD)>1 D
"RTN","RCDPEAR1",229,0)
 . N S,X S S=0
"RTN","RCDPEAR1",230,0)
 . F  S S=$O(VAUTD(S)) Q:'S  D
"RTN","RCDPEAR1",231,0)
 . . S X=VAUTD(S)_$S($O(VAUTD(S)):", ",1:"")
"RTN","RCDPEAR1",232,0)
 . . I $L(X)+$L(Y)>80 D
"RTN","RCDPEAR1",233,0)
 . . . S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y,Y=$J(" ",12)
"RTN","RCDPEAR1",234,0)
 . . S Y=Y_X
"RTN","RCDPEAR1",235,0)
 . ;
"RTN","RCDPEAR1",236,0)
 . S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",237,0)
 ;
"RTN","RCDPEAR1",238,0)
 ; Payers - PRCA*4.5*326
"RTN","RCDPEAR1",239,0)
 S Y="PAYERS: "
"RTN","RCDPEAR1",240,0)
 S Y=Y_$S(RCPAY="S":"SELECTED",RCPAY="R":"RANGE",1:"ALL")
"RTN","RCDPEAR1",241,0)
 S Y=Y_$J("",45-$L(Y))_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEAR1",242,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEAR1",243,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",244,0)
 ;
"RTN","RCDPEAR1",245,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEAR1",246,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEAR1",247,0)
 S Y="DATE RANGE: "_Y("1ST")_" - "_Y("LST")_" (ERA FILE DATE)"
"RTN","RCDPEAR1",248,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAR1",249,0)
 ;
"RTN","RCDPEAR1",250,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAR1",251,0)
 S Y="AGED"
"RTN","RCDPEAR1",252,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",253,0)
 S Y="DAYS  TRACE #"
"RTN","RCDPEAR1",254,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",255,0)
 S Y="  PAYMENT FROM/ID" ; PRCA*4.5*321 - Allow extra room for 60 character Payer Name
"RTN","RCDPEAR1",256,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",257,0)
 S Y="                FILE DATE      AMOUNT PAID  EEOB CNT   ERA #           ERA DATE"
"RTN","RCDPEAR1",258,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",259,0)
 S Y="",$P(Y,"=",80)="",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",260,0)
 S RCHDR(0)=HCNT  ; total lines in header
"RTN","RCDPEAR1",261,0)
 Q
"RTN","RCDPEAR1",262,0)
 ;
"RTN","RCDPEAR1",263,0)
HDRLM ; Create the list manager version of the report header
"RTN","RCDPEAR1",264,0)
 ; Input:   RCDTRNG     - Date range filter value to be printed as part of the
"RTN","RCDPEAR1",265,0)
 ;                        header
"RTN","RCDPEAR1",266,0)
 ;          RCPAY       - 1 - All Payers
"RTN","RCDPEAR1",267,0)
 ;                        2 - Selected Payers
"RTN","RCDPEAR1",268,0)
 ;          RCPAY()     - Array of selected Payers if RCPAY=2
"RTN","RCDPEAR1",269,0)
 ;          RCLSTMGR    -
"RTN","RCDPEAR1",270,0)
 ;          VAUTD       - 1 - All divisions
"RTN","RCDPEAR1",271,0)
 ;                        2 - Selected divisions
"RTN","RCDPEAR1",272,0)
 ;          VAUTD()     - Array of selected divisions (if VAUTD=2)
"RTN","RCDPEAR1",273,0)
 ; Output:  RCHDR(0)    - Header text line count
"RTN","RCDPEAR1",274,0)
 ;
"RTN","RCDPEAR1",275,0)
 N DATE,DIV,HCNT,MSG,Y,Z0
"RTN","RCDPEAR1",276,0)
 K RCHDR
"RTN","RCDPEAR1",277,0)
 S Z0="",RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR1",278,0)
 S RCHDR(1)="DATE RANGE: "_$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z")
"RTN","RCDPEAR1",279,0)
 S RCHDR(1)=RCHDR(1)_" - "_$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z")_" (ERA FILE DATE)"
"RTN","RCDPEAR1",280,0)
 S HCNT=1
"RTN","RCDPEAR1",281,0)
 ;
"RTN","RCDPEAR1",282,0)
 S Y="DIVISIONS: "
"RTN","RCDPEAR1",283,0)
 I $D(VAUTD)=1 S Y=Y_"ALL",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",284,0)
 I $D(VAUTD)>1 D
"RTN","RCDPEAR1",285,0)
 . N S,X
"RTN","RCDPEAR1",286,0)
 . S S=0
"RTN","RCDPEAR1",287,0)
 . F  S S=$O(VAUTD(S)) Q:'S  D
"RTN","RCDPEAR1",288,0)
 . . S X=VAUTD(S)_$S($O(VAUTD(S)):", ",1:"")
"RTN","RCDPEAR1",289,0)
 . . I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",12)
"RTN","RCDPEAR1",290,0)
 . . S Y=Y_X
"RTN","RCDPEAR1",291,0)
 .;
"RTN","RCDPEAR1",292,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",293,0)
 ;
"RTN","RCDPEAR1",294,0)
 ; Payers - PRCA*4.5*326
"RTN","RCDPEAR1",295,0)
 S Y="PAYERS: "
"RTN","RCDPEAR1",296,0)
 S Y=Y_$S(RCPAY="S":"SELECTED",RCPAY="R":"RANGE",1:"ALL")
"RTN","RCDPEAR1",297,0)
 S Y=Y_$J("",45-$L(Y))_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEAR1",298,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEAR1",299,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",300,0)
 ;
"RTN","RCDPEAR1",301,0)
 S Y="AGED"
"RTN","RCDPEAR1",302,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",303,0)
 S Y="DAYS  TRACE #"
"RTN","RCDPEAR1",304,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",305,0)
 S Y="  PAYMENT FROM/ID" ; PRCA*4.5*321 - Allow extra room for 60 character Payer Name
"RTN","RCDPEAR1",306,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",307,0)
 S Y="                FILE DATE      AMOUNT PAID  EEOB CNT   ERA #           ERA DATE"
"RTN","RCDPEAR1",308,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",309,0)
 S RCHDR(0)=HCNT  ; total lines in header
"RTN","RCDPEAR1",310,0)
 Q
"RTN","RCDPEAR1",311,0)
 ; extrinsic variable, name for header PRCA*4.5*298
"RTN","RCDPEAR1",312,0)
HDRNM() Q "ERA UNMATCHED AGING REPORT"
"RTN","RCDPEAR1",313,0)
 ;
"RTN","RCDPEAR1",314,0)
EXCEL ; Print report to screen, one record per line for export to MS Excel.
"RTN","RCDPEAR1",315,0)
 N D,RCSF0,RC1ST,RCEXCEP,RCFLIEN,RCLN,RCSFIEN,RCZ,Z
"RTN","RCDPEAR1",316,0)
 ; RCSFIEN - sub-file ien
"RTN","RCDPEAR1",317,0)
 D HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEAR1",318,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D  G:RCSTOP PRTQ2
"RTN","RCDPEAR1",319,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",320,0)
 .S RC0=$G(^RCY(344.4,RCFLIEN,0))
"RTN","RCDPEAR1",321,0)
 .S RCEXCEP=$$XCEPT^RCDPEWLP(RCFLIEN)  ; PRCA*4.5*298  assignment of ERA exception flag (will either be "" or "x")
"RTN","RCDPEAR1",322,0)
 .S Z=$J(RCEXCEP_-RCZ,4)_U_$P(RC0,U,2)_U_$P(RC0,U,6)_"/"_$P(RC0,U,3)_U_$$FMTE^XLFDT($P(RC0,U,4),2)_U_$$FMTE^XLFDT($P(RC0,U,7),2)_U   ;PRCA*4.5*298 display ERA exception flag
"RTN","RCDPEAR1",323,0)
 .S Z=Z_$P(RC0,U,5)_U_$P(RC0,U,11)_U_$P(RC0,U)
"RTN","RCDPEAR1",324,0)
 .W !,Z
"RTN","RCDPEAR1",325,0)
 .S RCLN=Z,RC1ST=0
"RTN","RCDPEAR1",326,0)
 .K Z
"RTN","RCDPEAR1",327,0)
 .I "23"[$$ADJ^RCDPEU(RCFLIEN) D LSTXCEL W "^** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***"
"RTN","RCDPEAR1",328,0)
 .I $O(^RCY(344.4,RCFLIEN,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",329,0)
 ..N Q
"RTN","RCDPEAR1",330,0)
 ..D DISPADJ^RCDPESR8(RCFLIEN,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",331,0)
 ..I $O(^TMP($J,"RCERA_ADJ",0)) D LSTXCEL W "^** GENERAL ADJUSTMENT DATA EXISTS FOR ERA **"
"RTN","RCDPEAR1",332,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D LSTXCEL W "^"_$G(^TMP($J,"RCERA_ADJ",Q))
"RTN","RCDPEAR1",333,0)
 .;
"RTN","RCDPEAR1",334,0)
 .S RCSFIEN=0 F  S RCSFIEN=$O(^RCY(344.4,RCFLIEN,1,RCSFIEN)) Q:'RCSFIEN  S RCSF0=$G(^(RCSFIEN,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",335,0)
 ..N D
"RTN","RCDPEAR1",336,0)
 ..K RCOUT
"RTN","RCDPEAR1",337,0)
 ..S D=" EEOB Seq #: "_$P(RCSF0,U)_$S($D(^RCY(344.4,RCFLIEN,1,"ATB",1,RCSFIEN)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",338,0)
 ..S D=D_$S('$P(RCSF0,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RCSF0,U,2),0)),0)),U))_"  "_$J(+$P(RCSF0,U,3),"",2)
"RTN","RCDPEAR1",339,0)
 ..D LSTXCEL W "^",D
"RTN","RCDPEAR1",340,0)
 ..Q:$P(RCSF0,U,2)
"RTN","RCDPEAR1",341,0)
 ..D DISP^RCDPESR0("^RCY(344.4,"_RCFLIEN_",1,"_RCSFIEN_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",342,0)
 ..I '$O(RCOUT(0)) D LSTXCEL W "^NO DETAIL FOUND" Q
"RTN","RCDPEAR1",343,0)
 ..S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",344,0)
 ...D LSTXCEL W "^*"_RCOUT(Z)
"RTN","RCDPEAR1",345,0)
 ;
"RTN","RCDPEAR1",346,0)
 W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPEAR1",347,0)
 Q
"RTN","RCDPEAR1",348,0)
 ;
"RTN","RCDPEAR1",349,0)
LSTXCEL ; Display repeat info line before each EEOB detail section.
"RTN","RCDPEAR1",350,0)
 ; First detail line does not need it
"RTN","RCDPEAR1",351,0)
 I RC1ST W !,RCLN Q
"RTN","RCDPEAR1",352,0)
 S RC1ST=1 Q
"RTN","RCDPEAR1",353,0)
 ;
"RTN","RCDPEAR1",354,0)
PRTQ2 I '$D(ZTQUEUED),'RCSTOP,RCPGNUM,RCTMPND="" D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR1",355,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR1",356,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR1",357,0)
 K ^TMP($J,"RCEFT_AGED")
"RTN","RCDPEAR1",358,0)
 Q
"RTN","RCDPEAR1",359,0)
 ;
"RTN","RCDPEAR1",360,0)
ZROBAL() ; function, Get Zero Payment Filter
"RTN","RCDPEAR1",361,0)
 ; returns 1 for yes, zero for no, -1 on '^' or timeout
"RTN","RCDPEAR1",362,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEAR1",363,0)
 S DIR(0)="YA",DIR("A")="Include Zero payment amounts? (Y/N): ",DIR("B")="YES"
"RTN","RCDPEAR1",364,0)
 D ^DIR
"RTN","RCDPEAR1",365,0)
 I $D(DUOUT)!$D(DIRUT)!$D(DTOUT) S Y=-1
"RTN","RCDPEAR1",366,0)
 Q Y
"RTN","RCDPEAR2")
0^63^B118872172
"RTN","RCDPEAR2",1,0)
RCDPEAR2 ;ALB/TMK/PJH - EFT Unmatched Aging Report - FILE 344.3 ;Nov 24, 2014@18:31:57
"RTN","RCDPEAR2",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,283,293,298,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEAR2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAR2",4,0)
 Q
"RTN","RCDPEAR2",5,0)
 ;
"RTN","RCDPEAR2",6,0)
 ; PRCA*4.5*298 notes at bottom
"RTN","RCDPEAR2",7,0)
EN1 ; option: EFT Unmatched Aging Report [RCDPE EFT AGING REPORT]
"RTN","RCDPEAR2",8,0)
 N %ZIS,DIC,DIR,DTOUT,DUOUT,POP,RCDISPTY,RCDTRNG,RCEND,RCHDR
"RTN","RCDPEAR2",9,0)
 N RCJOB1,RCLSTMGR,RCPAR,RCPAY,RCPGNUM,RCSTART,RCTMPND,RCTYPE,X,Y
"RTN","RCDPEAR2",10,0)
 ; RCDISPTY = display type
"RTN","RCDPEAR2",11,0)
 ; RCEND = end date
"RTN","RCDPEAR2",12,0)
 ; RCLSTMGR = list manager flag
"RTN","RCDPEAR2",13,0)
 ; RCTYPE = Type of payers to include M/P/T/A MEDICAL/PHARMACY/TRICARE/ALL
"RTN","RCDPEAR2",14,0)
 ; RCDTRNG= "1^start date^end date"
"RTN","RCDPEAR2",15,0)
 ; RCSTART = start date
"RTN","RCDPEAR2",16,0)
 ; RCTMPND = name of the subscript for ^TMP to use
"RTN","RCDPEAR2",17,0)
 ; RCPAY = A - All payers, S - Selected Payers, R - Range of Payers
"RTN","RCDPEAR2",18,0)
 ;
"RTN","RCDPEAR2",19,0)
 S RCLSTMGR=""  ; initial value
"RTN","RCDPEAR2",20,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'(RCDTRNG>0) EN1Q
"RTN","RCDPEAR2",21,0)
 S RCSTART=$P(RCDTRNG,U,2)-1,RCEND=$P(RCDTRNG,U,3)
"RTN","RCDPEAR2",22,0)
 ;
"RTN","RCDPEAR2",23,0)
 ; PRCA*4.5*326 - Ask to show Medical/Pharmacy Tricare or All
"RTN","RCDPEAR2",24,0)
 S RCTYPE=$$RTYPE^RCDPEU1("")
"RTN","RCDPEAR2",25,0)
 I RCTYPE=-1 G EN1Q
"RTN","RCDPEAR2",26,0)
 ;
"RTN","RCDPEAR2",27,0)
 S RCPAY=$$PAYRNG^RCDPEU1()             ; PRCA*4.5*326 - Selected or Range of Payers
"RTN","RCDPEAR2",28,0)
 I RCPAY=-1 G EN1Q                      ; PRCA*4.5*326 '^' or timeout
"RTN","RCDPEAR2",29,0)
 ;
"RTN","RCDPEAR2",30,0)
 I RCPAY'="A" D  I XX=-1 G EN1Q         ; PRCA*4.5*326 - Since we don't want all payers 
"RTN","RCDPEAR2",31,0)
 . S RCPAR("TYPE")=RCTYPE               ;         prompt for payers we do want
"RTN","RCDPEAR2",32,0)
 . S RCPAR("SELC")=RCPAY
"RTN","RCDPEAR2",33,0)
 . S RCPAR("FILE")=344.31
"RTN","RCDPEAR2",34,0)
 . S RCPAR("DICA")="Select Insurance Company NAME: "
"RTN","RCDPEAR2",35,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPEAR2",36,0)
 ;
"RTN","RCDPEAR2",37,0)
 ;Get display type
"RTN","RCDPEAR2",38,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() G:RCDISPTY<0 EN1Q
"RTN","RCDPEAR2",39,0)
 ; display device info about Excel format, set ListMan flag to prevent question
"RTN","RCDPEAR2",40,0)
 I RCDISPTY S RCLSTMGR="^" D INFO^RCDPEM6
"RTN","RCDPEAR2",41,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR2",42,0)
 ;
"RTN","RCDPEAR2",43,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEAR2",44,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL I RCLSTMGR<0 G EN1Q
"RTN","RCDPEAR2",45,0)
 ; display in ListMan format and exit on return
"RTN","RCDPEAR2",46,0)
 I RCLSTMGR D  G EN1Q
"RTN","RCDPEAR2",47,0)
 .S RCTMPND=$T(+0)_"^EFT UNMATCHED AGING"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEAR2",48,0)
 .D RPTOUT
"RTN","RCDPEAR2",49,0)
 .N H,L,HDR S L=0
"RTN","RCDPEAR2",50,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEAR2",51,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 3 lines of report header
"RTN","RCDPEAR2",52,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEAR2",53,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEAR2",54,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEAR2",55,0)
 ;
"RTN","RCDPEAR2",56,0)
 S RCTMPND=""
"RTN","RCDPEAR2",57,0)
 ; Ask device
"RTN","RCDPEAR2",58,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR2",59,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR2",60,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSTOP
"RTN","RCDPEAR2",61,0)
 .S ZTRTN="RPTOUT^RCDPEAR2",ZTDESC="EFT AGING REPORT"
"RTN","RCDPEAR2",62,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEAR2",63,0)
 .S ZTSAVE("^TMP(""RCDPEU1"",$J,")="" ; PRCA*4.5*326
"RTN","RCDPEAR2",64,0)
 .D ^%ZTLOAD
"RTN","RCDPEAR2",65,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPEAR2",66,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR2",67,0)
 ;
"RTN","RCDPEAR2",68,0)
 U IO D RPTOUT
"RTN","RCDPEAR2",69,0)
 ;
"RTN","RCDPEAR2",70,0)
EN1Q ; exit and clean up
"RTN","RCDPEAR2",71,0)
 I 'RCLSTMGR D ^%ZISC
"RTN","RCDPEAR2",72,0)
 K ^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J),^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPEAR2",73,0)
 Q
"RTN","RCDPEAR2",74,0)
 ;
"RTN","RCDPEAR2",75,0)
RPTOUT ; Entry point for queued job, nightly job
"RTN","RCDPEAR2",76,0)
 ; RCTMPND = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR2",77,0)
 ;         If undefined or null, output is printed
"RTN","RCDPEAR2",78,0)
 ; Return global if RCTMPND not null: ^TMP($J,RCTMPND,line#)=line text
"RTN","RCDPEAR2",79,0)
 N DIC,DUOUT,RC0,RC13,RC3443,RCCT,RCIEN,RCNT,RCOUT,RCPAYER,RCPAYID
"RTN","RCDPEAR2",80,0)
 N RCSTOP,RCTOT,RCZ,X,XX,YY,Z,Z0,ZZ
"RTN","RCDPEAR2",81,0)
 S RCTMPND=$G(RCTMPND)
"RTN","RCDPEAR2",82,0)
 S (RCCT,RCSTOP,RCNT,RCTOT)=0
"RTN","RCDPEAR2",83,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR2",84,0)
 ; build local payer array here
"RTN","RCDPEAR2",85,0)
 I RCTMPND'="" K ^TMP($J,RCTMPND)
"RTN","RCDPEAR2",86,0)
 ; cross-ref on file #344.31 field #.08 - MATCH STATUS
"RTN","RCDPEAR2",87,0)
 S RCIEN=0 F  S RCIEN=$O(^RCY(344.31,"AMATCH",0,RCIEN)) Q:'RCIEN  D   ;unmatched entries only
"RTN","RCDPEAR2",88,0)
 .Q:$P($G(^RCY(344.31,RCIEN,3)),U)  ; EFT has been removed
"RTN","RCDPEAR2",89,0)
 .Q:$P($G(^RCY(344.31,RCIEN,0)),U,7)=0  ; payment of zero
"RTN","RCDPEAR2",90,0)
 .;
"RTN","RCDPEAR2",91,0)
 .S RC13=$P($G(^RCY(344.31,RCIEN,0)),U,13)  ; date received
"RTN","RCDPEAR2",92,0)
 .; Check for payer match
"RTN","RCDPEAR2",93,0)
 .I RCPAY'="A" D  Q:'XX
"RTN","RCDPEAR2",94,0)
 .. S XX=$$ISSEL^RCDPEU1(344.31,RCIEN)                ; PRCA*4.5*326 Check if payer was selected
"RTN","RCDPEAR2",95,0)
 .E  I RCTYPE'="A" D  Q:'XX                            ; If all of a give type of payer selected
"RTN","RCDPEAR2",96,0)
 .. S XX=$$ISTYPE^RCDPEU1(344.31,RCIEN,RCTYPE)        ;  check that payer matches type
"RTN","RCDPEAR2",97,0)
 .; Check date range
"RTN","RCDPEAR2",98,0)
 .Q:(RCSTART>RC13)!(RC13>RCEND)
"RTN","RCDPEAR2",99,0)
 .; Passed all the filters - include on report
"RTN","RCDPEAR2",100,0)
 .S ^TMP($J,"RCEFT_AGED",$$FMDIFF^XLFDT(RC13,DT),RCIEN)=0,RCNT=RCNT+1
"RTN","RCDPEAR2",101,0)
 ;
"RTN","RCDPEAR2",102,0)
 D:'RCLSTMGR HDRBLD  ; create header
"RTN","RCDPEAR2",103,0)
 D:RCLSTMGR HDRLM  ; create Listman header
"RTN","RCDPEAR2",104,0)
 ;
"RTN","RCDPEAR2",105,0)
 I RCDISPTY D EXCEL Q
"RTN","RCDPEAR2",106,0)
 ;
"RTN","RCDPEAR2",107,0)
 ; Find total amount of EFTs
"RTN","RCDPEAR2",108,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",109,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",110,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",111,0)
 .S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",112,0)
 ;
"RTN","RCDPEAR2",113,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; initial report header
"RTN","RCDPEAR2",114,0)
 ;
"RTN","RCDPEAR2",115,0)
 S Z=$$SETSTR^VALM1("Totals:","",1,79)
"RTN","RCDPEAR2",116,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",117,0)
 S Z=$$SETSTR^VALM1(" Number Aged Electronic EFT Messages Found: "_RCNT,"",1,79)
"RTN","RCDPEAR2",118,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",119,0)
 S Z=$$SETSTR^VALM1(" Amount Aged Electronic EFT Messages Found: $"_$FN(+RCTOT,",",2),"",1,79)
"RTN","RCDPEAR2",120,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",121,0)
 D SL^RCDPEARL($TR($J("",IOM)," ","="),.RCCT,RCTMPND)
"RTN","RCDPEAR2",122,0)
 ;
"RTN","RCDPEAR2",123,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",124,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",125,0)
 .I RCPGNUM D SL^RCDPEARL(" ",.RCCT,.RCTMPND) ; On detail list, skip line
"RTN","RCDPEAR2",126,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR2",127,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",128,0)
 .S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",129,0)
 .S Z=$$SETSTR^VALM1($J(-RCZ,4),"",1,4)
"RTN","RCDPEAR2",130,0)
 .; PRCA*4.5*318 moved deposit date up a row to give more room for payer/payer ID
"RTN","RCDPEAR2",131,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U,4),Z,5,52)  ;trace#
"RTN","RCDPEAR2",132,0)
 .S Z=$$SETSTR^VALM1($$FMTE^XLFDT($P(RC0,U,12),2),Z,73,8)  ; deposit date
"RTN","RCDPEAR2",133,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",134,0)
 .N RCPAY S RCPAY=$P(RC0,U,2) S:RCPAY="" RCPAY="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEAR2",135,0)
 .S RCPAYID=$P(RC0,U,3)                          ; Payer ID    ;PRCA*4.5*298
"RTN","RCDPEAR2",136,0)
 .;PRCA*4.5*318 dynamically display payer name/ID based on length
"RTN","RCDPEAR2",137,0)
 .S RCPAYER=RCPAY_"/"_RCPAYID
"RTN","RCDPEAR2",138,0)
 .I $L(RCPAYER)>76 D
"RTN","RCDPEAR2",139,0)
 . . S ZZ=$L(RCPAYER,"/"),XX=$P(RCPAYER,"/",1,ZZ-1),YY=$P(RCPAYER,"/",ZZ)
"RTN","RCDPEAR2",140,0)
 . . S XX=$E(RCPAYER,1,$L(XX)-($L(RCPAYER)-76)),RCPAYER=XX_"/"_YY
"RTN","RCDPEAR2",141,0)
 .S Z=$$SETSTR^VALM1(RCPAYER,"",5,76) ; PRCA*4.5*298            (payer/payer ID)
"RTN","RCDPEAR2",142,0)
 .;S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,12),2),Z,70,10)  ; deposit date
"RTN","RCDPEAR2",143,0)
 .;end of PRCA*4.5*318 display change
"RTN","RCDPEAR2",144,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",145,0)
 .S Z=$$SETSTR^VALM1($J("",6)_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:""),"",1,17)
"RTN","RCDPEAR2",146,0)
 .S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,7),15,2),Z,18,17)
"RTN","RCDPEAR2",147,0)
 .; PRCA*4.5*283 - change length from 8 to 11 to allow for 9 digit DEP #'s
"RTN","RCDPEAR2",148,0)
 .; PRCA*4.5*326 - add EFT identifier
"RTN","RCDPEAR2",149,0)
 .S Z=$$SETSTR^VALM1(" "_$P(RC3443,U,6)_"/"_$$GET1^DIQ(344.31,RCIEN_",",.01,"E"),Z,35,17)
"RTN","RCDPEAR2",150,0)
 .S Z=$$SETSTR^VALM1("  "_$S($P(RC3443,U,12):"",1:"NOT ")_"Posted to 8NZZ"_$S($P(RC3443,U,12):" "_$$FMTE^XLFDT($P(RC3443,U,11),2),1:""),Z,52,36)
"RTN","RCDPEAR2",151,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",152,0)
 .K RCOUT
"RTN","RCDPEAR2",153,0)
 .D GETS^DIQ(344.31,RCIEN_",",2,"E","RCOUT")
"RTN","RCDPEAR2",154,0)
 .Q:'$O(RCOUT(344.31,RCIEN_",",2,0))
"RTN","RCDPEAR2",155,0)
 .D SL^RCDPEARL($J("",8)_"--EXCEPTION NOTES--",.RCCT,RCTMPND)
"RTN","RCDPEAR2",156,0)
 .S Z=0 F  S Z=$O(RCOUT(344.31,RCIEN_",",2,Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR2",157,0)
 ..I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR2",158,0)
 ..D SL^RCDPEARL($J("",8)_" "_RCOUT(344.31,RCIEN_",",2,Z),.RCCT,RCTMPND)
"RTN","RCDPEAR2",159,0)
 ;
"RTN","RCDPEAR2",160,0)
 ;
"RTN","RCDPEAR2",161,0)
 ; PRCA*4.5*298, put end-of-report into SL^RCDPEARL
"RTN","RCDPEAR2",162,0)
 D SL^RCDPEARL(" ",.RCCT,RCTMPND)  ; skip a line
"RTN","RCDPEAR2",163,0)
 D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCCT,RCTMPND)
"RTN","RCDPEAR2",164,0)
 ;
"RTN","RCDPEAR2",165,0)
PRTQ ;
"RTN","RCDPEAR2",166,0)
 ; PRCA*4.5*298, added ListMan check
"RTN","RCDPEAR2",167,0)
 I '$D(ZTQUEUED),'RCLSTMGR,'RCSTOP D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR2",168,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",169,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",170,0)
 K ^TMP($J,"RCEFT_AGED"),ZTQUEUED
"RTN","RCDPEAR2",171,0)
 K ^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPEAR2",172,0)
 Q
"RTN","RCDPEAR2",173,0)
 ;
"RTN","RCDPEAR2",174,0)
 ; extrinsic variable, text for header PRCA*4.5*298
"RTN","RCDPEAR2",175,0)
HDRNM() Q "EFT UNMATCHED AGING REPORT"
"RTN","RCDPEAR2",176,0)
 ;
"RTN","RCDPEAR2",177,0)
HDRBLD ; create the report header
"RTN","RCDPEAR2",178,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEAR2",179,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAR2",180,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEAR2",181,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEAR2",182,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEAR2",183,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEAR2",184,0)
 ;INPUT:
"RTN","RCDPEAR2",185,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAR2",186,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAR2",187,0)
 ; RCLSTMGR
"RTN","RCDPEAR2",188,0)
 ;
"RTN","RCDPEAR2",189,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR2",190,0)
 ;
"RTN","RCDPEAR2",191,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEAR2",192,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEAR2",193,0)
 .S RCHDR(1)="Aged Days^Trace #^Deposit From/ID^File Date^Deposit Amount^Dep#/EFT#^Deposit Post Status^Deposit Date" ; PRCA*4.3*326
"RTN","RCDPEAR2",194,0)
 ;
"RTN","RCDPEAR2",195,0)
 N START,END,MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAR2",196,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),2),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),2)
"RTN","RCDPEAR2",197,0)
 ;
"RTN","RCDPEAR2",198,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEAR2",199,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPEAR2",200,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEAR2",201,0)
 ;
"RTN","RCDPEAR2",202,0)
 ; Payer(s) - PRCA*4.5*326 Add MPT filter
"RTN","RCDPEAR2",203,0)
 S Y="PAYERS: "_$S(RCPAY="R":"RANGE",RCPAY="S":"SELECTED",1:"ALL")
"RTN","RCDPEAR2",204,0)
 S Y=$E(Y_$J("",80),1,41)_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEAR2",205,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEAR2",206,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",207,0)
 S Y="DATE RANGE: "_$P($$FMTE^XLFDT(START,2),"@")_" - "_$P($$FMTE^XLFDT(END,2),"@")_" (DATE EFT FILED)"
"RTN","RCDPEAR2",208,0)
 S Y=$J("",80-$L(Y)\2)_Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",209,0)
 ;
"RTN","RCDPEAR2",210,0)
 S Y="AGED",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",211,0)
 ; PRCA*4.5*318 moved deposit date up a row
"RTN","RCDPEAR2",212,0)
 S Y="DAYS  TRACE #                                                           DEP DATE",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",213,0)
 S Y="    DEPOSIT FROM/ID",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",214,0)
 S Y="      FILE DATE     DEPOSIT AMOUNT  DEP#/EFT#        DEPOSIT POST STATUS",HCNT=HCNT+1,RCHDR(HCNT)=Y ; PRCA*4.5*326
"RTN","RCDPEAR2",215,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y  ; row of equal signs at bottom
"RTN","RCDPEAR2",216,0)
 ;
"RTN","RCDPEAR2",217,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAR2",218,0)
 ;
"RTN","RCDPEAR2",219,0)
 Q
"RTN","RCDPEAR2",220,0)
 ;
"RTN","RCDPEAR2",221,0)
HDRLM ; create the Listman header section
"RTN","RCDPEAR2",222,0)
 ; returns RCHDR
"RTN","RCDPEAR2",223,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAR2",224,0)
 ;INPUT:
"RTN","RCDPEAR2",225,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAR2",226,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAR2",227,0)
 ;
"RTN","RCDPEAR2",228,0)
 K RCHDR S RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR2",229,0)
 ;
"RTN","RCDPEAR2",230,0)
 N START,END,MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAR2",231,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),2),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),2)
"RTN","RCDPEAR2",232,0)
 S Y="DATE RANGE: "_$P($$FMTE^XLFDT(START,2),"@")_" - "_$P($$FMTE^XLFDT(END,2),"@")_" (DATE EFT FILED)"
"RTN","RCDPEAR2",233,0)
 S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",234,0)
 ; Payer(s) - PRCA*4.5*326 Add MPT filter
"RTN","RCDPEAR2",235,0)
 S Y="PAYERS: "_$S(RCPAY="R":"RANGE",RCPAY="S":"SELECTED",1:"ALL")
"RTN","RCDPEAR2",236,0)
 S Y=$E(Y_$J("",80),1,41)_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEAR2",237,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEAR2",238,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",239,0)
 ;
"RTN","RCDPEAR2",240,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAR2",241,0)
 S Y="AGED",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",242,0)
 ; PRCA*4.5*318 moved deposit date up a row
"RTN","RCDPEAR2",243,0)
 S Y="DAYS TRACE #                                                           DEP DATE",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",244,0)
 S Y="    DEPOSIT FROM/ID",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",245,0)
 S Y="     FILE DATE     DEPOSIT AMOUNT  DEP#/EFT#         DEPOSIT POST STATUS",HCNT=HCNT+1,RCHDR(HCNT)=Y ; PRCA*4.5*326
"RTN","RCDPEAR2",246,0)
 ;
"RTN","RCDPEAR2",247,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAR2",248,0)
 ;
"RTN","RCDPEAR2",249,0)
 Q
"RTN","RCDPEAR2",250,0)
 ;
"RTN","RCDPEAR2",251,0)
EXCEL ; Print report to screen, one record per line for export to MS Excel.
"RTN","RCDPEAR2",252,0)
 ; RCTMPND = name of the subscript for ^TMP to use
"RTN","RCDPEAR2",253,0)
 W !!,"Aged Days^Trace #^Deposit From/ID^File Date^Deposit Amount^Dep#/EFT#^Deposit Post Status^Deposit Date" ; PRCA*4.5*326
"RTN","RCDPEAR2",254,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ2
"RTN","RCDPEAR2",255,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",256,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",257,0)
 .N RCPAY S RCPAY=$P(RC0,U,2) S:RCPAY="" RCPAY="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEAR2",258,0)
 .S Z=$J(-RCZ,4)_"^"_$P(RC0,U,4)_"^"_RCPAY_"/"_$P(RC0,U,3)_"^"_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:"")_"^" ; PRCA*4.5*298
"RTN","RCDPEAR2",259,0)
 .S Z=Z_$P(RC0,U,7)_"^"_$P(RC3443,U,6)_"/"_$P(RC0,U)_"."_$P(RC0,U,14)_"^" ; PRCA*4.5*326
"RTN","RCDPEAR2",260,0)
 .S Z=Z_$S($P(RC3443,U,12):"",1:"NOT ")_"Posted to 8NZZ"_$S($P(RC3443,U,12):"^"_$$FMTE^XLFDT($P(RC0,U,12),2),1:"") ; PRCA*4.5*326
"RTN","RCDPEAR2",261,0)
 .W !,Z
"RTN","RCDPEAR2",262,0)
 W !!,"*** END OF REPORT ***",!
"RTN","RCDPEAR2",263,0)
 ;
"RTN","RCDPEAR2",264,0)
PRTQ2 ;
"RTN","RCDPEAR2",265,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",266,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",267,0)
 K ^TMP($J,"RCEFT_AGED"),^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR2",268,0)
 Q
"RTN","RCDPEAR2",269,0)
 ;
"RTN","RCDPEAR2",270,0)
 ;PRCA*4.5*298
"RTN","RCDPEAR2",271,0)
 ; removed RCIND local variable
"RTN","RCDPEAR2",272,0)
 ; changed RC00 to RC3443
"RTN","RCDPEAR2",273,0)
 ; replaced SETLINE with SL^RCDPEARL
"RTN","RCDPEAR2",274,0)
 ; added $$HDRNM
"RTN","RCDPEAR2",275,0)
 ; added RCLSTMGR in checks for header
"RTN","RCDPEAR2",276,0)
 ; changed upper case text to mixed case throughout
"RTN","RCDPEAR2",277,0)
 ;
"RTN","RCDPEDA2")
0^14^B148982269
"RTN","RCDPEDA2",1,0)
RCDPEDA2 ;AITC/DW - ACTIVITY REPORT ;Feb 17, 2017@10:37:00
"RTN","RCDPEDA2",2,0)
 ;;4.5;Accounts Receivable;**318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEDA2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDA2",4,0)
 Q
"RTN","RCDPEDA2",5,0)
 ;
"RTN","RCDPEDA2",6,0)
RPT2(INPUT) ;EP from RCDPEDAR
"RTN","RCDPEDA2",7,0)
 ; Loop through EDI LOCKBOX DEPOSIT entries
"RTN","RCDPEDA2",8,0)
 ; Input:   INPUT                           - A1^A2^A3^...^An Where:
"RTN","RCDPEDA2",9,0)
 ;                                             A1 - 1 - Called by nightly job, 0 otherwise
"RTN","RCDPEDA2",10,0)
 ;                                             A2 - 1 - Display to list manager, 0 otherwise
"RTN","RCDPEDA2",11,0)
 ;                                             A3 - 1 - Detail report, 0 - Summary report
"RTN","RCDPEDA2",12,0)
 ;                                             A4 - Current Page Number
"RTN","RCDPEDA2",13,0)
 ;                                             A5 - Stop Flag
"RTN","RCDPEDA2",14,0)
 ;                                             A6 - Start of Date Range
"RTN","RCDPEDA2",15,0)
 ;                                             A7 - End of Date Range
"RTN","RCDPEDA2",16,0)
 ;                                             A8 - Current Line Number
"RTN","RCDPEDA2",17,0)
 ;                                             A9 - Internal Date being processed
"RTN","RCDPEDA2",18,0)
 ;                                             A10- 1 - Only Display EFTs with a debit flag of 'D'
"RTN","RCDPEDA2",19,0)
 ;                                                  0 - Display all EFTs
"RTN","RCDPEDA2",20,0)
 ;          ^TMP(B1,$J,B2,B3)               = ""
"RTN","RCDPEDA2",21,0)
 ;          ^TMP(B1,$J,B2,B3,"EFT",B4)      = "" Where:
"RTN","RCDPEDA2",22,0)
 ;                                            B1 - "RCDAILYACT"
"RTN","RCDPEDA2",23,0)
 ;                                            B2 - Internal Date from DATE/TIME ADDED
"RTN","RCDPEDA2",24,0)
 ;                                                 (344.3, .13)
"RTN","RCDPEDA2",25,0)
 ;                                            B3 - Internal IEN for 344.3
"RTN","RCDPEDA2",26,0)
 ;                                            B4 - Internal IEN for file 344.31
"RTN","RCDPEDA2",27,0)
 ; Output:  INPUT                           - A1^A2^A3^...^An - The following pieces 
"RTN","RCDPEDA2",28,0)
 ;                                                              may be updated
"RTN","RCDPEDA2",29,0)
 ;                                             A4 - Updated Page Number
"RTN","RCDPEDA2",30,0)
 ;                                             A5 - Stop Flag
"RTN","RCDPEDA2",31,0)
 ;                                             A6 - Updated Line number
"RTN","RCDPEDA2",32,0)
 ;          ^TMP($J,"TOTALS","DEBIT")       - Current Total # of debits for date range
"RTN","RCDPEDA2",33,0)
 ;          ^TMP($J,"TOTALS","DEBIT","D")   - Total # of debits for Internal date (C1)
"RTN","RCDPEDA2",34,0)
 ;          ^TMP($J,"TOTALS","DEBITA")      - Current Total Debit Amount for date range
"RTN","RCDPEDA2",35,0)
 ;          ^TMP($J,"TOTALS","DEBITA","D")  - Total Debit Amount for Internal date (C1)
"RTN","RCDPEDA2",36,0)
 ;          ^TMP($J,"TOTALS","DEP",C1)      - Total # of deposits by Internal date (C1)
"RTN","RCDPEDA2",37,0)
 ;          ^TMP($J,"TOTALS","DEPA",C1)     - Total Deposit Amount by Internal date (C1)
"RTN","RCDPEDA2",38,0)
 ;          ^TMP($J,"TOTALS","EFT","D")     - Total Deposit Amount by EFTs for date
"RTN","RCDPEDA2",39,0)
 ;          ^TMP($J,"TOTALS","FMS")         - FMS Document Status or "NO FMS DOC"
"RTN","RCDPEDA2",40,0)
 ;          ^TMP($J,"TOTALS","FMS","D",-1)  - Total Deposit Amount by FMS Document
"RTN","RCDPEDA2",41,0)
 ;          ^TMP($J,"TOTALS","FMS","D",0)   - Total Amount for Error/Rejected documents
"RTN","RCDPEDA2",42,0)
 ;          ^TMP($J,"TOTALS","FMS","D",1")  - Total Amount for 'A','M',"F' or 'T' docs
"RTN","RCDPEDA2",43,0)
 ;          ^TMP($J,"TOTALS","FMS","D",2")  - Total Amount for queued docs
"RTN","RCDPEDA2",44,0)
 ;          ^TMP($J,"TOTALS","FMSTOT")      - Updated Total Deposit Amount for date range
"RTN","RCDPEDA2",45,0)
 ;          ^TMP($J,"TOTALS","MATCH","D")   - Current Total matched EFTs for date
"RTN","RCDPEDA2",46,0)
 N CRDOC,DETL,DLNCT,DTADD,IEN344,IEN3443,IEN34431,TOTDEP,Q,X,XX,YY
"RTN","RCDPEDA2",47,0)
 S DETL=$P(INPUT,"^",3),DTADD=$P(INPUT,"^",9)
"RTN","RCDPEDA2",48,0)
 ;
"RTN","RCDPEDA2",49,0)
 ; Clear the following daily totals
"RTN","RCDPEDA2",50,0)
 K ^TMP($J,"TOTALS","EFT","D")
"RTN","RCDPEDA2",51,0)
 K ^TMP($J,"TOTALS","FMS","D")
"RTN","RCDPEDA2",52,0)
 K ^TMP($J,"TOTALS","MATCH","D")
"RTN","RCDPEDA2",53,0)
 K ^TMP($J,"TOTALS","DEBIT","D")            ;PRCA*4.5*321 Add Debit flag logic
"RTN","RCDPEDA2",54,0)
 K ^TMP($J,"TOTALS","DEBITA","D")
"RTN","RCDPEDA2",55,0)
 K ^TMP($J,"ONEDEP"),^TMP($J,"DEPERRS")     ;PRCA*4.5*321
"RTN","RCDPEDA2",56,0)
 S IEN3443="",DLNCT=0                       ;PRCA*4.5*321 Add DLNCT
"RTN","RCDPEDA2",57,0)
 F  D  Q:IEN3443=""  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",58,0)
 . S IEN3443=$O(^TMP("RCDAILYACT",$J,DTADD,IEN3443))
"RTN","RCDPEDA2",59,0)
 . Q:IEN3443=""
"RTN","RCDPEDA2",60,0)
 . S XX=$$GET1^DIQ(344.3,IEN3443,.03,"I")       ; IEN for 344.1
"RTN","RCDPEDA2",61,0)
 . S IEN344=+$O(^RCY(344,"AD",+XX,0))           ; IEN for 344
"RTN","RCDPEDA2",62,0)
 . S XX=$G(^TMP($J,"TOTALS","DEP",DTADD))
"RTN","RCDPEDA2",63,0)
 . S ^TMP($J,"TOTALS","DEP",DTADD)=XX+1         ; # of deposits for day
"RTN","RCDPEDA2",64,0)
 . S TOTDEP=$$GET1^DIQ(344.3,IEN3443,.08,"I")   ; Total Deposit Amount
"RTN","RCDPEDA2",65,0)
 . S XX=$G(^TMP($J,"TOTALS","DEPA",DTADD))
"RTN","RCDPEDA2",66,0)
 . S ^TMP($J,"TOTALS","DEPA",DTADD)=XX+TOTDEP   ; Total Deposit Amount for day
"RTN","RCDPEDA2",67,0)
 . S CRDOC=$$GET1^DIQ(344,IEN344,200,"I")       ; FMS Document Number
"RTN","RCDPEDA2",68,0)
 . S ^TMP($J,"TOTALS","CRDOC",IEN3443)=CRDOC
"RTN","RCDPEDA2",69,0)
 . I CRDOC="" D                                 ; No FMS Document Number
"RTN","RCDPEDA2",70,0)
 . . S YY=$G(^TMP($J,"TOTALS","FMS","D",-1))
"RTN","RCDPEDA2",71,0)
 . . S ^TMP($J,"TOTALS","FMS","D",-1)=YY+TOTDEP
"RTN","RCDPEDA2",72,0)
 . . S ^TMP($J,"TOTALS","FMS")="NO FMS DOC"
"RTN","RCDPEDA2",73,0)
 . I CRDOC'="" D                                ; FMS Document Number found
"RTN","RCDPEDA2",74,0)
 . . I $$GET1^DIQ(344,IEN344,201,"I") S YY="ACCEPTED" ; Default ON-LINE entry to accepted - PRCA*4.5*326
"RTN","RCDPEDA2",75,0)
 . . E  S YY=$$STATUS^GECSSGET(CRDOC)              ; Get the status of the doc - PRCA*4.5*326
"RTN","RCDPEDA2",76,0)
 . . I YY=-1 D  Q                               ; Document wasn't found
"RTN","RCDPEDA2",77,0)
 . . . S XX=$G(^TMP($J,"TOTALS","FMS","D",-1))
"RTN","RCDPEDA2",78,0)
 . . . S ^TMP($J,"TOTALS","FMS","D",-1)=XX+TOTDEP
"RTN","RCDPEDA2",79,0)
 . . . S ^TMP($J,"TOTALS","FMS")="STATUS MISSING"
"RTN","RCDPEDA2",80,0)
 . . S XX=$E($P(YY," "),1,10)                   ; First Word of the status
"RTN","RCDPEDA2",81,0)
 . . S ^TMP($J,"TOTALS","FMS")=XX               ; First Word of the status
"RTN","RCDPEDA2",82,0)
 . . S Q=$E(YY,1)                               ; First Character of the status
"RTN","RCDPEDA2",83,0)
 . . S Q=$S(Q="E"!(Q="R"):0,Q="Q":2,1:1)        ; Q=0 - Reject or Error, 2 - Queued, 1 - good
"RTN","RCDPEDA2",84,0)
 . . S XX=$G(^TMP($J,"TOTALS","FMS","D",Q))
"RTN","RCDPEDA2",85,0)
 . . S ^TMP($J,"TOTALS","FMS","D",Q)=XX+TOTDEP  ; Rej/Err, Queued OR good Amount for day
"RTN","RCDPEDA2",86,0)
 . ;
"RTN","RCDPEDA2",87,0)
 . D ONEDEP(.INPUT,IEN3443,TOTDEP,.DLNCT)       ;PRCA*4.5*321 Gather and display one deposit
"RTN","RCDPEDA2",88,0)
 Q
"RTN","RCDPEDA2",89,0)
 ;
"RTN","RCDPEDA2",90,0)
ONEDEP(INPUT,IEN3443,TOTDEP,DLNCT) ; Gather and display lines for one Deposit
"RTN","RCDPEDA2",91,0)
 ; PRCA*4.5*321 new method to first gather all the lines before displaying them
"RTN","RCDPEDA2",92,0)
 ; Input:   INPUT                       - See RPT2 for details
"RTN","RCDPEDA2",93,0)
 ;          ^TMP(B1,$J,B2,B3)           - See RPT2 for details
"RTN","RCDPEDA2",94,0)
 ;          IEN3443                     - Internal IEN for file 344.3
"RTN","RCDPEDA2",95,0)
 ;          TOTDEP                      - Total Deposit Amount (344.3, .08)
"RTN","RCDPEDA2",96,0)
 ;          DLNCT                       - Current # of deposit lines displayed
"RTN","RCDPEDA2",97,0)
 ;          ^TMP($J,"DEPERRS")          - Current Line Count
"RTN","RCDPEDA2",98,0)
 ;                                        Note: Only passed if not in detail mode
"RTN","RCDPEDA2",99,0)
 ;          ^TMP($J,"DEPERRS,X) - Error line(s)
"RTN","RCDPEDA2",100,0)
 ; Output:  INPUT                       - See RPT2 for details
"RTN","RCDPEDA2",101,0)
 ;          DLNCT                       - Updated # of deposit lines displayed
"RTN","RCDPEDA2",102,0)
 ;          ^TMP(B1,$J,B2,B3,"EFT",B4)  - See RPT2 for details
"RTN","RCDPEDA2",103,0)
 ;          ^TMP($J,"TOTALS","DEP",C1)  - See RPT2 for details
"RTN","RCDPEDA2",104,0)
 ;          ^TMP($J,"DEPERRS")          - Updated Line Count
"RTN","RCDPEDA2",105,0)
 ;                                        Note: Only passed if not in detail mode
"RTN","RCDPEDA2",106,0)
 N CURLNS,DEPLNS,DETL,DTADD,EFTCTR,EFTLN,EFTLNS,LSTMAN,XX,YY,ZZ
"RTN","RCDPEDA2",107,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA2",108,0)
 S DTADD=$P(INPUT,"^",9)
"RTN","RCDPEDA2",109,0)
 K:DETL ^TMP($J,"ONEDEP"),^TMP($J,"DEPERRS")
"RTN","RCDPEDA2",110,0)
 S LSTMAN=$P(INPUT,"^",2)
"RTN","RCDPEDA2",111,0)
 I DETL D                                   ; Gather Detail Line
"RTN","RCDPEDA2",112,0)
 . D DETLN(.INPUT,IEN3443,TOTDEP)
"RTN","RCDPEDA2",113,0)
 S ^TMP($J,"TOTALS","FMSTOT")=0             ; Initialize FMS total for range
"RTN","RCDPEDA2",114,0)
 D ERRMSGS^RCDPEDA4(.INPUT,IEN3443)         ; Gather any error message lines
"RTN","RCDPEDA2",115,0)
 D PROCEFT(.INPUT,IEN3443)                  ; Gather lines for EFT records
"RTN","RCDPEDA2",116,0)
 Q:'DETL
"RTN","RCDPEDA2",117,0)
 ;
"RTN","RCDPEDA2",118,0)
 ; Determine overall line count for deposit
"RTN","RCDPEDA2",119,0)
 S ZZ=1                          ; deposit line (1st line per record)                 
"RTN","RCDPEDA2",120,0)
 S ZZ=ZZ+$G(^TMP($J,"DEPERRS"))  ; deposit errors line cnt
"RTN","RCDPEDA2",121,0)
 S XX=0 F XX=$O(^TMP($J,"ONEDEP",XX)) D  Q:XX=""
"RTN","RCDPEDA2",122,0)
 . S ZZ=ZZ+$G(^TMP($J,"ONEDEP",XX))
"RTN","RCDPEDA2",123,0)
 S DEPLNS=ZZ
"RTN","RCDPEDA2",124,0)
 ;
"RTN","RCDPEDA2",125,0)
 ; If not outputting to listman and at least 1 deposit is already displayed
"RTN","RCDPEDA2",126,0)
 ; on the page, check to see if we have don't have room to display the 
"RTN","RCDPEDA2",127,0)
 ; deposit detail line
"RTN","RCDPEDA2",128,0)
 I 'LSTMAN,DLNCT,(DLNCT+DEPLNS+2)>IOSL D  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",129,0)
 . S DLNCT=0
"RTN","RCDPEDA2",130,0)
 . D NEWDHDR(.INPUT,DTADD)
"RTN","RCDPEDA2",131,0)
 . Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",132,0)
 ; Display first deposit line
"RTN","RCDPEDA2",133,0)
 S DLNCT=DLNCT+1
"RTN","RCDPEDA2",134,0)
 S XX=^TMP($J,"ONEDEP",0,1)
"RTN","RCDPEDA2",135,0)
 D SL^RCDPEDA3(.INPUT,XX)
"RTN","RCDPEDA2",136,0)
 ;
"RTN","RCDPEDA2",137,0)
 ; If not outputting to listman, check to see if we have don't have room to
"RTN","RCDPEDA2",138,0)
 ; display any deposit error info
"RTN","RCDPEDA2",139,0)
 S XX=$G(^TMP($J,"DEPERRS"))
"RTN","RCDPEDA2",140,0)
 I 'LSTMAN,XX,XX<IOSL,(DLNCT+XX)>IOSL D  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",141,0)
 . S DLNCT=0
"RTN","RCDPEDA2",142,0)
 . D NEWDHDR(.INPUT,DTADD)
"RTN","RCDPEDA2",143,0)
 . Q:$P(INPUT,"^",5)=1 
"RTN","RCDPEDA2",144,0)
 S DLNCT=DLNCT+XX
"RTN","RCDPEDA2",145,0)
 ;
"RTN","RCDPEDA2",146,0)
 ; Display Deposit Error (if any)
"RTN","RCDPEDA2",147,0)
 S XX=""
"RTN","RCDPEDA2",148,0)
 F  D  Q:XX=""
"RTN","RCDPEDA2",149,0)
 . S XX=$O(^TMP($J,"DEPERRS",XX))
"RTN","RCDPEDA2",150,0)
 . Q:XX=""
"RTN","RCDPEDA2",151,0)
 . S YY=^TMP($J,"DEPERRS",XX)
"RTN","RCDPEDA2",152,0)
 . D SL^RCDPEDA3(.INPUT,YY)
"RTN","RCDPEDA2",153,0)
 ;
"RTN","RCDPEDA2",154,0)
 ; Display Remaining Deposit lines one EFT at a time
"RTN","RCDPEDA2",155,0)
 S EFTCTR=0
"RTN","RCDPEDA2",156,0)
 F  D  Q:EFTCTR=""  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",157,0)
 . S EFTCTR=$O(^TMP($J,"ONEDEP",EFTCTR))
"RTN","RCDPEDA2",158,0)
 . Q:EFTCTR=""
"RTN","RCDPEDA2",159,0)
 . ;
"RTN","RCDPEDA2",160,0)
 . ; If not outputting to listman, check to see if we have don't have room to
"RTN","RCDPEDA2",161,0)
 . ; display any EFT
"RTN","RCDPEDA2",162,0)
 . S EFTLNS=$G(^TMP($J,"ONEDEP",EFTCTR))
"RTN","RCDPEDA2",163,0)
 . I 'LSTMAN,EFTLNS<IOSL,(DLNCT+EFTLNS)>IOSL D  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",164,0)
 . . D NEWDHDR(.INPUT,DTADD)
"RTN","RCDPEDA2",165,0)
 . . Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",166,0)
 . . S XX=^TMP($J,"ONEDEP",0,1)
"RTN","RCDPEDA2",167,0)
 . . D SL^RCDPEDA3(.INPUT,XX)
"RTN","RCDPEDA2",168,0)
 . . S DLNCT=1
"RTN","RCDPEDA2",169,0)
 . S EFTLN=""
"RTN","RCDPEDA2",170,0)
 . F  D  Q:EFTLN=""
"RTN","RCDPEDA2",171,0)
 . . S EFTLN=$O(^TMP($J,"ONEDEP",EFTCTR,EFTLN))
"RTN","RCDPEDA2",172,0)
 . . Q:EFTLN=""
"RTN","RCDPEDA2",173,0)
 . . S ZZ=^TMP($J,"ONEDEP",EFTCTR,EFTLN)
"RTN","RCDPEDA2",174,0)
 . . D SL^RCDPEDA3(.INPUT,ZZ)
"RTN","RCDPEDA2",175,0)
 . . S DLNCT=DLNCT+1
"RTN","RCDPEDA2",176,0)
 Q
"RTN","RCDPEDA2",177,0)
 ;
"RTN","RCDPEDA2",178,0)
NEWDHDR(INPUT,DTADD) ; display a new deposit header for the specified date
"RTN","RCDPEDA2",179,0)
 ; Input:   INPUT   - See RPT2 for details
"RTN","RCDPEDA2",180,0)
 ;          DTADD   - Internal Date deposit are being displayed for
"RTN","RCDPEDA2",181,0)
 N XX
"RTN","RCDPEDA2",182,0)
 D HDR^RCDPEDA3(.INPUT)
"RTN","RCDPEDA2",183,0)
 Q:$P(INPUT,"^",5)=1   ; user quit or timed out
"RTN","RCDPEDA2",184,0)
 S XX="DATE EFT DEPOSIT RECEIVED: "_$$FMTE^XLFDT(DTADD,"2Z")
"RTN","RCDPEDA2",185,0)
 S XX=$J("",80-$L(XX)\2)_XX              ; Center it
"RTN","RCDPEDA2",186,0)
 D SL^RCDPEDA3(.INPUT,XX)
"RTN","RCDPEDA2",187,0)
 D SL^RCDPEDA3(.INPUT," ")
"RTN","RCDPEDA2",188,0)
 Q
"RTN","RCDPEDA2",189,0)
 ;
"RTN","RCDPEDA2",190,0)
DETLN(INPUT,IEN3443,TOTDEP) ; Display detail line
"RTN","RCDPEDA2",191,0)
 ; Input:   INPUT                   - See RPT2 for details
"RTN","RCDPEDA2",192,0)
 ;          IEN3443                 - Internal IEN for file 344.3
"RTN","RCDPEDA2",193,0)
 ;          TOTDEP                  - Total Deposit Amount (344.3, .08)
"RTN","RCDPEDA2",194,0)
 ;          ^TMP($J,"TOTALS","FMS") - FMS Document # or "NO FMS DOC"
"RTN","RCDPEDA2",195,0)
 ; Output:  INPUT                   - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA2",196,0)
 ;                                      A5 - Updated Page Number
"RTN","RCDPEDA2",197,0)
 ;                                      A6 - Stop Flag
"RTN","RCDPEDA2",198,0)
 ;                                      A8 - Updated Line Counter
"RTN","RCDPEDA2",199,0)
 ;
"RTN","RCDPEDA2",200,0)
 N DTADD,DETL,LSTMAN,NJ,X,XX,YY
"RTN","RCDPEDA2",201,0)
 S LSTMAN=$P(INPUT,"^",2),NJ=$P(INPUT,"^",1)
"RTN","RCDPEDA2",202,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA2",203,0)
 S XX=$$GET1^DIQ(344.3,IEN3443,.06,"I")         ; Deposit Number
"RTN","RCDPEDA2",204,0)
 ;
"RTN","RCDPEDA2",205,0)
 S X=$$SETSTR^VALM1(XX,"",1,9)
"RTN","RCDPEDA2",206,0)
 ;
"RTN","RCDPEDA2",207,0)
 S YY=$$GET1^DIQ(344.3,IEN3443,.07,"I")         ; Deposit Date
"RTN","RCDPEDA2",208,0)
 S X=$$SETSTR^VALM1($$FMTE^XLFDT(YY\1,"2Z"),X,12,10)
"RTN","RCDPEDA2",209,0)
 ;
"RTN","RCDPEDA2",210,0)
 S X=$$SETSTR^VALM1("",X,23,8)
"RTN","RCDPEDA2",211,0)
 S X=$$SETSTR^VALM1("",X,32,10)
"RTN","RCDPEDA2",212,0)
 S XX=^TMP($J,"TOTALS","FMS")
"RTN","RCDPEDA2",213,0)
 S X=$$SETSTR^VALM1($E($J(TOTDEP,"",2)_$J("",20),1,20)_XX,X,43,37)
"RTN","RCDPEDA2",214,0)
 S ^TMP($J,"ONEDEP",0,1)=X    ; PRCA*4.5*321
"RTN","RCDPEDA2",215,0)
 Q
"RTN","RCDPEDA2",216,0)
 ;
"RTN","RCDPEDA2",217,0)
PROCEFT(INPUT,IEN3443)  ; Process EFT records
"RTN","RCDPEDA2",218,0)
 ; Input:   INPUT                           - See RPT2 for details
"RTN","RCDPEDA2",219,0)
 ;          IEN3443                         - Internal IEN for file 344.3
"RTN","RCDPEDA2",220,0)
 ;          ^TMP($J,"ONEDEP",0,1)           - Deposit Detail line
"RTN","RCDPEDA2",221,0)
 ;          ^TMP($J,"TOTALS","DEBIT","D")   - Current Total # of Debit EFTs for date
"RTN","RCDPEDA2",222,0)
 ;          ^TMP($J,"TOTALS","DEBITA","D")  - Current Total Amount of Debit EFTs for date
"RTN","RCDPEDA2",223,0)
 ;          ^TMP($J,"TOTALS","EFT","D")     - Current Total Deposit Amount by EFTs for date
"RTN","RCDPEDA2",224,0)
 ;          ^TMP($J,"TOTALS","MATCH","D")   - Current Total matched EFTs for date
"RTN","RCDPEDA2",225,0)
 ;          ^TMP($J,"TOTALS","FMSTOT")      - Current Total Deposit Amount for date range
"RTN","RCDPEDA2",226,0)
 ; Output:  INPUT                           - A1^A2^A3^...^An - The following pieces
"RTN","RCDPEDA2",227,0)
 ;                                                              may be updated
"RTN","RCDPEDA2",228,0)
 ;                                              A5 - Updated Page Number
"RTN","RCDPEDA2",229,0)
 ;                                              A6 - Stop Flag
"RTN","RCDPEDA2",230,0)
 ;                                              A8 - Updated Line Counter
"RTN","RCDPEDA2",231,0)
 ;       ^TMP($J,"ONEDEP",0,1)               - Deposit Detail line
"RTN","RCDPEDA2",232,0)
 ;       ^TMP($J,"ONEDEP","EFTCTR")          - # of lines for This EFT
"RTN","RCDPEDA2",233,0)
 ;       ^TMP($J,"ONEDEP","EFTCTR",xx)=LINE  - EFT Lines
"RTN","RCDPEDA2",234,0)
 ;       ^TMP($J,"TOTALS","DEBIT","D")   - Updated Total # of Debit EFTs for date
"RTN","RCDPEDA2",235,0)
 ;       ^TMP($J,"TOTALS","DEBITA","D")  - Updated Total Amount of Debit EFTs for date
"RTN","RCDPEDA2",236,0)
 ;       ^TMP($J,"TOTALS","DEBIT")       - Updated Total # of Debit EFTs for date range
"RTN","RCDPEDA2",237,0)
 ;       ^TMP($J,"TOTALS","DEBITA")      - Updated Total Amount of Debit EFTs for date range
"RTN","RCDPEDA2",238,0)
 ;       ^TMP($J,"TOTALS","FMSTOT")      - Updated Total Deposit Amount for date range
"RTN","RCDPEDA2",239,0)
 ;       ^TMP($J,"TOTALS","EFT","D")     - Updated Total Deposit Amount by EFTs for date
"RTN","RCDPEDA2",240,0)
 ;       ^TMP($J,"TOTALS","MATCH","D")   - Updated Total matched EFTs for date
"RTN","RCDPEDA2",241,0)
 N DETL,DFLG,DTADD,EFTCTR,IEN34431,PAMT,RCFMS1,TRDOC,X,XX,YY    ; PRCA*4.5*321 Added DFLG
"RTN","RCDPEDA2",242,0)
 ; PRCA*4.5*321 capture display and line cnt to ^TMP($J,"ONEDEP")
"RTN","RCDPEDA2",243,0)
 S ^TMP($J,"TOTALS","FMSTOT")=0,EFTCTR=0
"RTN","RCDPEDA2",244,0)
 S DTADD=$P(INPUT,"^",9)
"RTN","RCDPEDA2",245,0)
 S RCFMS1="NO FMS DOC"
"RTN","RCDPEDA2",246,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA2",247,0)
 S IEN34431=""
"RTN","RCDPEDA2",248,0)
 F  D  Q:IEN34431=""  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",249,0)
 . S IEN34431=$O(^TMP("RCDAILYACT",$J,DTADD,IEN3443,"EFT",IEN34431))
"RTN","RCDPEDA2",250,0)
 . Q:IEN34431=""
"RTN","RCDPEDA2",251,0)
 . S XX=$G(^TMP($J,"TOTALS","EFT","D"))+1
"RTN","RCDPEDA2",252,0)
 . S ^TMP($J,"TOTALS","EFT","D")=XX                ; Total # EFTs for date
"RTN","RCDPEDA2",253,0)
 . ;
"RTN","RCDPEDA2",254,0)
 . S YY=$$GET1^DIQ(344.31,IEN34431,3,"E")          ; Debit/Credit flag ; PRCA*4.5*321 added line
"RTN","RCDPEDA2",255,0)
 . S DFLG=$S(YY="D":1,1:0)                         ; PRCA*4.5*321 added line
"RTN","RCDPEDA2",256,0)
 . S PAMT=$$GET1^DIQ(344.31,IEN34431,.07,"I")      ; Amount of Payment
"RTN","RCDPEDA2",257,0)
 . I DFLG D                                        ; PRCA*4.5*321 added if Statement
"RTN","RCDPEDA2",258,0)
 . . S XX=$G(^TMP($J,"TOTALS","DEBIT","D"))+1
"RTN","RCDPEDA2",259,0)
 . . S ^TMP($J,"TOTALS","DEBIT","D")=XX            ; Total # Debit EFTs for date
"RTN","RCDPEDA2",260,0)
 . . S XX=$G(^TMP($J,"TOTALS","DEBITA","D"))       ; Total Debit Amounts for date
"RTN","RCDPEDA2",261,0)
 . . S ^TMP($J,"TOTALS","DEBITA","D")=XX+PAMT
"RTN","RCDPEDA2",262,0)
 . ;
"RTN","RCDPEDA2",263,0)
 . S XX=+$$GET1^DIQ(344.31,IEN34431,.09,"I")       ; Receipt # from 344.31
"RTN","RCDPEDA2",264,0)
 . S TRDOC=$$GET1^DIQ(344,XX,200,"I")              ; FMS Document #
"RTN","RCDPEDA2",265,0)
 . I $$GET1^DIQ(344,XX,201,"I") S X="ACCEPTED" ; Default ON-LINE ENTRY status to accepted - PRCA*4.5*326
"RTN","RCDPEDA2",266,0)
 . E  S X=$S(TRDOC'="":$$STATUS^GECSSGET(TRDOC),1:"") ; PRCA*4.5*326
"RTN","RCDPEDA2",267,0)
 . I X'="",X'=-1,$E(X,1)'="R",$E(X,1)'="E" D
"RTN","RCDPEDA2",268,0)
 . . S XX=$G(^TMP($J,"TOTALS","FMSTOT"))
"RTN","RCDPEDA2",269,0)
 . . S ^TMP($J,"TOTALS","FMSTOT")=XX+PAMT          ; Total Amount of Payment
"RTN","RCDPEDA2",270,0)
 . . S RCFMS1=$S($E(X,1)="Q":"QUEUED TO POST",1:"POSTED")
"RTN","RCDPEDA2",271,0)
 . S XX=$S(X="":"",X=-1:"NO FMS DOC",1:$E($P(X," ",1),1,10))
"RTN","RCDPEDA2",272,0)
 . S RCFMS1(IEN34431)=XX                           ; FMS Document Status for EFT
"RTN","RCDPEDA2",273,0)
 . S XX=$$GET1^DIQ(344.31,IEN34431,.08,"I")        ; Match Status
"RTN","RCDPEDA2",274,0)
 . I XX D
"RTN","RCDPEDA2",275,0)
 . . S XX=$G(^TMP($J,"TOTALS","MATCH","D"))
"RTN","RCDPEDA2",276,0)
 . . S ^TMP($J,"TOTALS","MATCH","D")=XX+1          ; Total Matched EFTS by date
"RTN","RCDPEDA2",277,0)
 . I DETL D                            ;PRCA*4.5*321
"RTN","RCDPEDA2",278,0)
 . . S EFTCTR=EFTCTR+1
"RTN","RCDPEDA2",279,0)
 . . D EFTDTL(.INPUT,IEN3443,IEN34431,.RCFMS1,EFTCTR)
"RTN","RCDPEDA2",280,0)
 . . S YY=$G(^TMP($J,"ONEDEP",EFTCTR))+1
"RTN","RCDPEDA2",281,0)
 . . S ^TMP($J,"ONEDEP",EFTCTR)=YY
"RTN","RCDPEDA2",282,0)
 . . S ^TMP($J,"ONEDEP",EFTCTR,YY)=" "
"RTN","RCDPEDA2",283,0)
 Q
"RTN","RCDPEDA2",284,0)
 ;
"RTN","RCDPEDA2",285,0)
EFTDTL(INPUT,IEN3443,IEN34431,RCFMS1,EFTCTR)   ; Display EFT Detail
"RTN","RCDPEDA2",286,0)
 ; Input:   INPUT                   - See RPT2 for details
"RTN","RCDPEDA2",287,0)
 ;          IEN3443                 - Internal IEN for file 344.3
"RTN","RCDPEDA2",288,0)
 ;          IEN34431                - Internal IEN for file 344.31
"RTN","RCDPEDA2",289,0)
 ;          RCFMS1(IEN34431)        - FMS Document Status for EFT IEN
"RTN","RCDPEDA2",290,0)
 ;          EFTCTR                  - Used to store lines for an EFT
"RTN","RCDPEDA2",291,0)
 ;          ^TMP($J,ONEDEP,0,1)     - Deposit Detail line
"RTN","RCDPEDA2",292,0)
 ; Output:  INPUT                   - See RPT2 for details
"RTN","RCDPEDA2",293,0)
 ;          ^TMP($J,ONEDEP,0,1)     - Deposit Detail line
"RTN","RCDPEDA2",294,0)
 ;          ^TMP($J,ONEDEP,EFTCTR)  - # of lines for EFT
"RTN","RCDPEDA2",295,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- EFT Deposit Lines ;PRCA*4.5*321 capture display to ^TMP($J,"ONEDEP",EFTRCR) including line cnt
"RTN","RCDPEDA2",296,0)
 N EFTLN,MDT,PAY,PAYER,PAYID,X,XX,YY,ZZ
"RTN","RCDPEDA2",297,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.01,"E")       ; EFT Transaction detail - PRCA*4.5*326
"RTN","RCDPEDA2",298,0)
 S X=$$SETSTR^VALM1(XX,"",3,9)
"RTN","RCDPEDA2",299,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.12,"I")       ; Date Claims Paid
"RTN","RCDPEDA2",300,0)
 S X=$$SETSTR^VALM1($$FMTE^XLFDT(XX\1,"2Z"),X,23,8) ; PRCA*4.5*326 - move 8 back for MATCH DATE
"RTN","RCDPEDA2",301,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.07,"I")       ; Amount of Payment
"RTN","RCDPEDA2",302,0)
 S X=$$SETSTR^VALM1($J(XX,"",2),X,33,18)        ; PRCA*4.5*326 - move 8 back for MATCH DATE
"RTN","RCDPEDA2",303,0)
 ;
"RTN","RCDPEDA2",304,0)
 ; PRCA*4.5*284, Move to left 3 space (61 to 58) to allow for 10 digit ERA #'s
"RTN","RCDPEDA2",305,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.08,"I")       ; Match Status
"RTN","RCDPEDA2",306,0)
 S YY=$$GET1^DIQ(344.31,IEN34431,.1,"I")        ; ERA IEN
"RTN","RCDPEDA2",307,0)
 S MDT=""
"RTN","RCDPEDA2",308,0)
 I XX=1 S MDT=$$MATCHDT^RCDPEWL7(IEN34431) ; PRCA*4.5*326 - Date matched to ERA
"RTN","RCDPEDA2",309,0)
 ; PRCA*4.5*326 - next line, move 8 back and add MATCH DATE
"RTN","RCDPEDA2",310,0)
 S X=$$SETSTR^VALM1($$EXTERNAL^DILFD(344.31,.08,"",+XX)_$S(XX=1:"/ERA #"_YY,1:"")_" "_MDT,X,49,30)
"RTN","RCDPEDA2",311,0)
 S ^TMP($J,"ONEDEP",EFTCTR,1)=X
"RTN","RCDPEDA2",312,0)
 ;
"RTN","RCDPEDA2",313,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.04,"I")       ; Trace Number
"RTN","RCDPEDA2",314,0)
 S X=$$SETSTR^VALM1(XX,"",5,$L(XX))
"RTN","RCDPEDA2",315,0)
 S XX=$G(^TMP($J,"TOTALS","CRDOC",IEN3443))
"RTN","RCDPEDA2",316,0)
 S X=$$SETSTR^VALM1(XX,X,59,$L(XX))             ; CR Doc
"RTN","RCDPEDA2",317,0)
 S ^TMP($J,"ONEDEP",EFTCTR,2)=X
"RTN","RCDPEDA2",318,0)
 ;
"RTN","RCDPEDA2",319,0)
 S PAYER=$$GET1^DIQ(344.31,IEN34431,.02,"I")    ; Payer Name
"RTN","RCDPEDA2",320,0)
 S:PAYER="" PAYER="NO PAYER NAME RECEIVED"
"RTN","RCDPEDA2",321,0)
 S PAYID=$$GET1^DIQ(344.31,IEN34431,.03,"I")    ; Payer ID
"RTN","RCDPEDA2",322,0)
 S PAY=PAYER_"/"_PAYID
"RTN","RCDPEDA2",323,0)
 I $L(PAY)>74 D
"RTN","RCDPEDA2",324,0)
 . S ZZ=$L(PAY,"/"),XX=$P(PAY,"/",1,ZZ-1),YY=$P(PAY,"/",ZZ)
"RTN","RCDPEDA2",325,0)
 . S XX=$E(XX,1,$L(XX)-($L(PAY)-74)),PAY=XX_"/"_YY
"RTN","RCDPEDA2",326,0)
 S X=$$SETSTR^VALM1(PAY,"",7,74)
"RTN","RCDPEDA2",327,0)
 S ^TMP($J,"ONEDEP",EFTCTR,3)=X
"RTN","RCDPEDA2",328,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=3
"RTN","RCDPEDA2",329,0)
 ;
"RTN","RCDPEDA2",330,0)
 ; PRCA*4.5*318 add TR #s to detail rpt
"RTN","RCDPEDA2",331,0)
 ; Gather & display all TR Doc #s for EFT detail record           
"RTN","RCDPEDA2",332,0)
 D GETTR^RCDPEDA4(IEN34431,.INPUT)              ; PRCA*4.5*321 moved for routine size
"RTN","RCDPEDA2",333,0)
 S X=""
"RTN","RCDPEDA2",334,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,3,"E")         ; Debit Flag ; PRCA 4.5*321 Added line
"RTN","RCDPEDA2",335,0)
 S XX=$S(XX="D":"DEBIT",1:"     ")              ; PRCA*4.5*321 Added line
"RTN","RCDPEDA2",336,0)
 S X=$$SETSTR^VALM1(XX,X,37,5)
"RTN","RCDPEDA2",337,0)
 ;
"RTN","RCDPEDA2",338,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.09,"I")       ; Receipt IEN
"RTN","RCDPEDA2",339,0)
 I XX'="" D
"RTN","RCDPEDA2",340,0)
 . S YY=$$GET1^DIQ(344,XX,.01,"I")              ; Receipt Number
"RTN","RCDPEDA2",341,0)
 . S X=$$SETSTR^VALM1(YY,X,45,12)               ; PRCA*4.5*321 changed 46 to 45
"RTN","RCDPEDA2",342,0)
 S X=$$SETSTR^VALM1($G(RCFMS1(IEN34431)),X,61,19)
"RTN","RCDPEDA2",343,0)
 S EFTLN=$G(^TMP($J,"ONEDEP",EFTCTR))+1
"RTN","RCDPEDA2",344,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA2",345,0)
 S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=X
"RTN","RCDPEDA2",346,0)
 D EFTERRS^RCDPEDA4(.INPUT,IEN34431,EFTCTR)     ; Display any EFT Errors
"RTN","RCDPEDA2",347,0)
 D DUP(.INPUT,IEN34431,EFTCTR)                  ; Display any Duplicate Errors
"RTN","RCDPEDA2",348,0)
 Q
"RTN","RCDPEDA2",349,0)
 ;
"RTN","RCDPEDA2",350,0)
DUP(INPUT,IEN34431,EFTCTR) ; Check to see if the EFT was a duplicate
"RTN","RCDPEDA2",351,0)
 ; Input:   IEN34431                - Internal IEN for file 344.31
"RTN","RCDPEDA2",352,0)
 ;          INPUT                   - See RPT2 for details
"RTN","RCDPEDA2",353,0)
 ;          EFTCTR                  - Used to store lines for EFT
"RTN","RCDPEDA2",354,0)
 ;          ^TMP($J,ONEDEP,EFTCTE)  - Current # of lines for EFT
"RTN","RCDPEDA2",355,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- Current Deposit Lines
"RTN","RCDPEDA2",356,0)
 ; Output:  ^TMP($J,ONEDEP,EFTCTR)  - Updated # of lines for EFT
"RTN","RCDPEDA2",357,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- Updated EFT Lines
"RTN","RCDPEDA2",358,0)
 ;
"RTN","RCDPEDA2",359,0)
 ;PRCA*4.5*321 capture display to ^TMP($J,"ONEDEP",EFTRCR) including line cnt
"RTN","RCDPEDA2",360,0)
 N EFTLN,XX,YY
"RTN","RCDPEDA2",361,0)
 Q:'$D(^RCY(344.31,IEN34431,3))                 ; Not a duplicate
"RTN","RCDPEDA2",362,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.18,"I")       ; Date/Time Removed
"RTN","RCDPEDA2",363,0)
 S YY=$$GET1^DIQ(344.31,IEN34431,.17,"I")       ; User who removed it
"RTN","RCDPEDA2",364,0)
 S X="   MARKED AS DUPLICATE: "_$$FMTE^XLFDT(XX)_" "_$$EXTERNAL^DILFD(344.31,.17,,YY)
"RTN","RCDPEDA2",365,0)
 S EFTLN=$G(^TMP($J,"ONEDEP",EFTCTR))+1
"RTN","RCDPEDA2",366,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA2",367,0)
 S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=X
"RTN","RCDPEDA2",368,0)
 S EFTLN=EFTLN+1
"RTN","RCDPEDA2",369,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA2",370,0)
 S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=" "
"RTN","RCDPEDA2",371,0)
 Q
"RTN","RCDPEDA2",372,0)
 ;
"RTN","RCDPEDA2",373,0)
FMSTAT(IEN344) ; Calculate FMS Document status
"RTN","RCDPEDA3")
0^18^B111755243
"RTN","RCDPEDA3",1,0)
RCDPEDA3 ;AITC/DW - ACTIVITY REPORT ;Feb 17, 2017@10:37:00
"RTN","RCDPEDA3",2,0)
 ;;4.5;Accounts Receivable;**318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEDA3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDA3",4,0)
 Q
"RTN","RCDPEDA3",5,0)
 ;
"RTN","RCDPEDA3",6,0)
HDR(INPUT) ;EP from RCDPEDAR
"RTN","RCDPEDA3",7,0)
 ; Displays report header
"RTN","RCDPEDA3",8,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDA3",9,0)
 ;                         A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA3",10,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA3",11,0)
 ;                         A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA3",12,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDA3",13,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",14,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDA3",15,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDA3",16,0)
 ;                         A9 - Current line count
"RTN","RCDPEDA3",17,0)
 ;                         A10- 1 - Only Display EFTs with a debit flag of 'D'
"RTN","RCDPEDA3",18,0)
 ;                              0 - Display all EFTs
"RTN","RCDPEDA3",19,0)
 ; Output:  INPUT       - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA3",20,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDA3",21,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",22,0)
 ;                         A8 - Updated line count
"RTN","RCDPEDA3",23,0)
 N CTR,CURPG,DETL,DONLY,DTST,DTEND,NJ,NOJUST,PLN,STOP,X,XX,Y,Z,Z0,Z1
"RTN","RCDPEDA3",24,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA3",25,0)
 S CURPG=$P(INPUT,"^",4)
"RTN","RCDPEDA3",26,0)
 S STOP=$P(INPUT,"^",5)
"RTN","RCDPEDA3",27,0)
 S DTST=$P(INPUT,"^",6)                     ; Date Range Start
"RTN","RCDPEDA3",28,0)
 S DTEND=$P(INPUT,"^",7)                    ; Date Range Ends
"RTN","RCDPEDA3",29,0)
 S DONLY=$P(INPUT,"^",10)                   ; EFTs with Debits Only  ;PRCA*4.5*321 add debit logic
"RTN","RCDPEDA3",30,0)
 S NJ=$P(INPUT,"^",1)
"RTN","RCDPEDA3",31,0)
 Q:NJ&(CURPG)
"RTN","RCDPEDA3",32,0)
 I CURPG!($E(IOST,1,2)="C-") D
"RTN","RCDPEDA3",33,0)
 . Q:NJ
"RTN","RCDPEDA3",34,0)
 . I CURPG,($E(IOST,1,2)="C-") D  Q:STOP
"RTN","RCDPEDA3",35,0)
 . . S STOP=$$ASK()
"RTN","RCDPEDA3",36,0)
 . W @IOF ; Write form feed
"RTN","RCDPEDA3",37,0)
 I STOP S $P(INPUT,"^",5)=1 Q
"RTN","RCDPEDA3",38,0)
 S CURPG=CURPG+1,$P(INPUT,"^",4)=CURPG
"RTN","RCDPEDA3",39,0)
 ;
"RTN","RCDPEDA3",40,0)
 ; PRCA276 if coming from nightly job need to define payer selection variable
"RTN","RCDPEDA3",41,0)
 I NJ N RCPAY,RCTYPE D  ; PRCA*4.5*321
"RTN","RCDPEDA3",42,0)
 . S RCPAY="A"
"RTN","RCDPEDA3",43,0)
 . S RCTYPE="A"
"RTN","RCDPEDA3",44,0)
 ;
"RTN","RCDPEDA3",45,0)
 ; PRCA276 if coming from nightly job need to define division selection variable
"RTN","RCDPEDA3",46,0)
 I NJ N VAUTD S VAUTD=1
"RTN","RCDPEDA3",47,0)
 S Z0="EDI LOCKBOX EFT DAILY ACTIVITY "_$S(DETL:"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDA3",48,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEDA3",49,0)
 S Z=$$SETSTR^VALM1("Page: "_CURPG,Z,70,10)
"RTN","RCDPEDA3",50,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",51,0)
 S Z="RUN DATE: "_$$FMTE^XLFDT($$NOW^XLFDT(),"2Z"),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDA3",52,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",53,0)
 ;
"RTN","RCDPEDA3",54,0)
 ; PRCA276 add divisions to header
"RTN","RCDPEDA3",55,0)
 S Z1=""
"RTN","RCDPEDA3",56,0)
 I 'VAUTD D
"RTN","RCDPEDA3",57,0)
 . S Z0=0
"RTN","RCDPEDA3",58,0)
 . F  D  Q:'Z0
"RTN","RCDPEDA3",59,0)
 .. S Z0=$O(VAUTD(Z0))
"RTN","RCDPEDA3",60,0)
 .. Q:'Z0
"RTN","RCDPEDA3",61,0)
 .. S XX=$$GET1^DIQ(40.8,Z0,1,"I") ;Facility Number   ;PRCA*4.5*321
"RTN","RCDPEDA3",62,0)
 .. ;S Z1=Z1_VAUTD(Z0)_", "
"RTN","RCDPEDA3",63,0)
 .. S Z1=Z1_XX_", "
"RTN","RCDPEDA3",64,0)
 S Z="DIVISIONS: "_$S(VAUTD:"ALL",1:$E(Z1,1,$L(Z1)-2)),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDA3",65,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",66,0)
 ;
"RTN","RCDPEDA3",67,0)
 S NOJUST=0
"RTN","RCDPEDA3",68,0)
 ; PRCA*4.5*326 - Use RCPAY for payer selection type in header, Add M/P/T filter
"RTN","RCDPEDA3",69,0)
 S Z="PAYERS: "_$S(RCPAY="A":"ALL",RCPAY="R":"RANGE",1:"SELECTED")
"RTN","RCDPEDA3",70,0)
 S Z=$E(Z_$J("",80),1,44)_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEDA3",71,0)
 S Z=Z_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEDA3",72,0)
 ; PRCA*4.5*326 End changes.
"RTN","RCDPEDA3",73,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",74,0)
 S CTR=1
"RTN","RCDPEDA3",75,0)
 F  D  Q:CTR=""
"RTN","RCDPEDA3",76,0)
 . S CTR=$O(PLN(CTR))
"RTN","RCDPEDA3",77,0)
 . Q:CTR=""
"RTN","RCDPEDA3",78,0)
 . D SL(.INPUT,PLN(CTR))
"RTN","RCDPEDA3",79,0)
 ;
"RTN","RCDPEDA3",80,0)
 ; PRCA276  add date filter to header
"RTN","RCDPEDA3",81,0)
 S Z="DATE RANGE: "_$$FMTE^XLFDT(DTST,"2Z")_" - "_$$FMTE^XLFDT(DTEND,"2Z")
"RTN","RCDPEDA3",82,0)
 S Z=Z_" (DATE DEPOSIT ADDED)        DEBIT ONLY EFTs: "   ; PRCA*4.5*321 debit info
"RTN","RCDPEDA3",83,0)
 S Z=Z_$S(DONLY:"YES",1:"NO")
"RTN","RCDPEDA3",84,0)
 S Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDA3",85,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",86,0)
 I DETL D
"RTN","RCDPEDA3",87,0)
 . ;
"RTN","RCDPEDA3",88,0)
 . ; PRCA*4.5*283 - Add 3 more spaces between DEP # and DEPOSIT DT 
"RTN","RCDPEDA3",89,0)
 . ; and remove 3 spaces between DEPOSIT DT and DEP AMOUNT to allow for 9 digit DEP #'s
"RTN","RCDPEDA3",90,0)
 . D SL(.INPUT,"")
"RTN","RCDPEDA3",91,0)
 . S XX="DEP #      DEPOSIT DT  "_$J("",19)_"DEP AMOUNT          FMS DEPOSIT STAT"
"RTN","RCDPEDA3",92,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",93,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",94,0)
 . ;
"RTN","RCDPEDA3",95,0)
 . ; PRCA*4.5*318, Move entire EFT # row to left 1 space to adjust for other rows needing space
"RTN","RCDPEDA3",96,0)
 . ; PRCA*4.5*284, Move Match Status to left 3 space to allow for 10 digit ERA #'s
"RTN","RCDPEDA3",97,0)
 . ; PRCA*4.5*326 - make room and add match date
"RTN","RCDPEDA3",98,0)
 . S XX=$J("",2)_"EFT #"_$J("",15)_"DATE PD   PAYMENT AMOUNT  ERA MATCH STATUS & DATE"
"RTN","RCDPEDA3",99,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",100,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",101,0)
 . ; PRCA*4.5*318, Move entire EFT Payer Trace # row to left 6 spaces to adjust for other rows needing space
"RTN","RCDPEDA3",102,0)
 . S Z=$$SETSTR^VALM1($J("",4)_"EFT PAYER TRACE #","",1,52)
"RTN","RCDPEDA3",103,0)
 . S Z=$$SETSTR^VALM1("CR #",Z,59,4)     ;PRCA*4.5*318 add CR #
"RTN","RCDPEDA3",104,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",105,0)
 . ; PRCA*4.5*318, Move entire Payment From row to left 8 spaces to adjust 
"RTN","RCDPEDA3",106,0)
 . ; a possible 60 character Payer Name and 20 character Payer ID
"RTN","RCDPEDA3",107,0)
 . S XX=$J("",6)_"PAYMENT FROM"
"RTN","RCDPEDA3",108,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",109,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",110,0)
 . S XX=$J("",3)_"TR #"                    ;PRCA*4.5*318 add TR #
"RTN","RCDPEDA3",111,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",112,0)
 . D SL(.INPUT,Z)                          ; TR DOC header
"RTN","RCDPEDA3",113,0)
 . S XX=$J("",36)_"DEBIT   DEP RECEIPT #"  ;PRCA*4.5*321
"RTN","RCDPEDA3",114,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",115,0)
 . S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDA3",116,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",117,0)
 D SL(.INPUT,$TR($J("",IOM-1)," ","="))
"RTN","RCDPEDA3",118,0)
 Q
"RTN","RCDPEDA3",119,0)
 ;
"RTN","RCDPEDA3",120,0)
TOTSDAY(INPUT) ;EP from RCDPEDAR
"RTN","RCDPEDA3",121,0)
 ;               Display the totals for the specified date
"RTN","RCDPEDA3",122,0)
 ;
"RTN","RCDPEDA3",123,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDA3",124,0)
 ;                         A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA3",125,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA3",126,0)
 ;                         A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA3",127,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDA3",128,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",129,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDA3",130,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDA3",131,0)
 ;                         A8 - Current Line Counter
"RTN","RCDPEDA3",132,0)
 ;                         A9 - Internal Date being processed
"RTN","RCDPEDA3",133,0)
 ;          ^TMP($J,"TOTALS","DEBIT")       - Current Total # of debits for date range
"RTN","RCDPEDA3",134,0)
 ;          ^TMP($J,"TOTALS","DEBIT","D")   - Total # of debits for Internal date (C1)
"RTN","RCDPEDA3",135,0)
 ;          ^TMP($J,"TOTALS","DEBITA")      - Current Total Debit Amount for date range
"RTN","RCDPEDA3",136,0)
 ;          ^TMP($J,"TOTALS","DEBITA","D")  - Total Debit Amount for Internal date (C1)
"RTN","RCDPEDA3",137,0)
 ;          ^TMP($J,"TOTALS","DEP")         - Current Total # of deposits for date range
"RTN","RCDPEDA3",138,0)
 ;          ^TMP($J,"TOTALS","DEP",C1)      - Total # of deposits for Internal date (C1)
"RTN","RCDPEDA3",139,0)
 ;          ^TMP($J,"TOTALS","DEPA")        - Current Total Deposit Amount for date range
"RTN","RCDPEDA3",140,0)
 ;          ^TMP($J,"TOTALS","DEPA",C1)     - Total Deposit Amount for Internal date (C1)
"RTN","RCDPEDA3",141,0)
 ;          ^TMP($J,"TOTALS","EFT","D")     - Total Deposit Amount by EFTs for date
"RTN","RCDPEDA3",142,0)
 ;          ^TMP($J,"TOTALS","EFT","T")     - Current Total Deposit Amount by EFTs for range
"RTN","RCDPEDA3",143,0)
 ;          ^TMP($J,"TOTALS","FMS")         - FMS Document Status or "NO FMS DOC"
"RTN","RCDPEDA3",144,0)
 ;          ^TMP($J,"TOTALS","FMS","D",-1)  - Total Deposit Amount by FMS Document
"RTN","RCDPEDA3",145,0)
 ;          ^TMP($J,"TOTALS","FMS","D",0)   - Total Amount for Error/Rejected documents
"RTN","RCDPEDA3",146,0)
 ;          ^TMP($J,"TOTALS","FMS","D",1")  - Total Amount for 'A','M',"F' or 'T' docs
"RTN","RCDPEDA3",147,0)
 ;          ^TMP($J,"TOTALS","FMS","D",2")  - Total Amount for queued docs
"RTN","RCDPEDA3",148,0)
 ;          ^TMP($J,"TOTALS","FMS","T",-1)  - Total Deposit Amount by FMS Document for range
"RTN","RCDPEDA3",149,0)
 ;          ^TMP($J,"TOTALS","FMS","T",0)   - Total Amount for Error/Rejected docs for range
"RTN","RCDPEDA3",150,0)
 ;          ^TMP($J,"TOTALS","FMS","T",1")  - Total Amount for 'A','M',"F' or 'T' docs range
"RTN","RCDPEDA3",151,0)
 ;          ^TMP($J,"TOTALS","FMS","T",2")  - Total Amount for queued docs for range
"RTN","RCDPEDA3",152,0)
 ;          ^TMP($J,"TOTALS","FMSTOT")      - Updated Total Deposit Amount for date range
"RTN","RCDPEDA3",153,0)
 ;          ^TMP($J,"TOTALS","MATCH","D")   - Current Total matched EFTs for date
"RTN","RCDPEDA3",154,0)
 ;          ^TMP($J,"TOTALS","MATCH","T")   - Current Total matched EFTs for date range
"RTN","RCDPEDA3",155,0)
 ; Output:  INPUT       - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA3",156,0)
 ;                         A4 - Updated Page Number
"RTN","RCDPEDA3",157,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",158,0)
 ;                         A8 - Updated Line Counter
"RTN","RCDPEDA3",159,0)
 ;          ^TMP($J,"TOTALS","DEBIT")       - Updated Total # of debits for date range
"RTN","RCDPEDA3",160,0)
 ;          ^TMP($J,"TOTALS","DEBIT","D")   - Updated Total # of debits for Internal date (C1)
"RTN","RCDPEDA3",161,0)
 ;          ^TMP($J,"TOTALS","DEBITA")      - Updated Total Debit Amount for date range
"RTN","RCDPEDA3",162,0)
 ;          ^TMP($J,"TOTALS","DEBITA","D")  - Updated Total Debit Amount for Internal date (C1)
"RTN","RCDPEDA3",163,0)
 ;          ^TMP($J,"TOTALS","DEP")         - Updated Total # of deposits for date range
"RTN","RCDPEDA3",164,0)
 ;          ^TMP($J,"TOTALS","DEPA")        - Updated Total Deposit Amount for date range
"RTN","RCDPEDA3",165,0)
 ;          ^TMP($J,"TOTALS","EFT","T")     - Updated Total Deposit Amount by EFTs for range
"RTN","RCDPEDA3",166,0)
 ;          ^TMP($J,"TOTALS","FMS","T",-1)  - Updated Deposit Amount by FMS Document for range
"RTN","RCDPEDA3",167,0)
 ;          ^TMP($J,"TOTALS","FMS","T",0)   - Updated Amount for Error/Rejected docs for range
"RTN","RCDPEDA3",168,0)
 ;          ^TMP($J,"TOTALS","FMS","T",1")  - Updated Amount for 'A','M',"F' or 'T' docs range
"RTN","RCDPEDA3",169,0)
 ;          ^TMP($J,"TOTALS","FMS","T",2")  - Updated Amount for queued docs for range
"RTN","RCDPEDA3",170,0)
 ;          ^TMP($J,"TOTALS","MATCH","T")   - Updated Total Matched EFTs for date range
"RTN","RCDPEDA3",171,0)
 N CURPG,DETL,DTADD,LSTMAN,NL,Q,XX,YY
"RTN","RCDPEDA3",172,0)
 S LSTMAN=$P(INPUT,"^",2)                   ; Display to Listman flag
"RTN","RCDPEDA3",173,0)
 S NJ=$P(INPUT,"^",1)                       ; Called from Nightly Process flag
"RTN","RCDPEDA3",174,0)
 S DETL=$P(INPUT,"^",3)                     ; Detail Report flag
"RTN","RCDPEDA3",175,0)
 S CURPG=$P(INPUT,"^",4)                    ; Current Page Counter
"RTN","RCDPEDA3",176,0)
 S DTADD=$P(INPUT,"^",9)                    ; Date to display totals for
"RTN","RCDPEDA3",177,0)
 S XX=$G(^TMP($J,"TOTALS","DEPA"))          ; Current Total Deposit Amount for date range
"RTN","RCDPEDA3",178,0)
 S YY=$G(^TMP($J,"TOTALS","DEPA",DTADD))    ; Total Deposit Amount for date
"RTN","RCDPEDA3",179,0)
 S ^TMP($J,"TOTALS","DEPA")=XX+YY           ; Updated Total for range
"RTN","RCDPEDA3",180,0)
 S XX=$G(^TMP($J,"TOTALS","DEP"))           ; Current Total # of Deposits for date range
"RTN","RCDPEDA3",181,0)
 S YY=$G(^TMP($J,"TOTALS","DEP",DTADD))     ; Total # of Deposits for date
"RTN","RCDPEDA3",182,0)
 S ^TMP($J,"TOTALS","DEP")=XX+YY            ; Updated Total # for range
"RTN","RCDPEDA3",183,0)
 ;
"RTN","RCDPEDA3",184,0)
 S XX=$G(^TMP($J,"TOTALS","EFT","T"))       ; Current Total Amount by EFTs for date range
"RTN","RCDPEDA3",185,0)
 S YY=$G(^TMP($J,"TOTALS","EFT","D"))       ; Total Amount by EFTs for date
"RTN","RCDPEDA3",186,0)
 S ^TMP($J,"TOTALS","EFT","T")=XX+YY        ; Updated Total Amount for range
"RTN","RCDPEDA3",187,0)
 ;
"RTN","RCDPEDA3",188,0)
 S XX=$G(^TMP($J,"TOTALS","MATCH","T"))     ; Current Total # Matched EFTs for date range
"RTN","RCDPEDA3",189,0)
 S YY=$G(^TMP($J,"TOTALS","MATCH","D"))     ; # Matched EFTs for date
"RTN","RCDPEDA3",190,0)
 S ^TMP($J,"TOTALS","MATCH","T")=XX+YY      ; Updated Total # Matched EFTs for date range
"RTN","RCDPEDA3",191,0)
 ;
"RTN","RCDPEDA3",192,0)
 ; Update document status totals for range
"RTN","RCDPEDA3",193,0)
 F Q=-1,0,1,2 D
"RTN","RCDPEDA3",194,0)
 . S XX=$G(^TMP($J,"TOTALS","FMS","T",Q))   ; Current Total # of Q status for date range
"RTN","RCDPEDA3",195,0)
 . S YY=$G(^TMP($J,"TOTALS","FMS","D",Q))   ; # of Q status for date
"RTN","RCDPEDA3",196,0)
 . S ^TMP($J,"TOTALS","FMS","T",Q)=XX+YY    ; Updated Total # of Q status for date range
"RTN","RCDPEDA3",197,0)
 ;
"RTN","RCDPEDA3",198,0)
 ; daily totals
"RTN","RCDPEDA3",199,0)
 ;I $S('NJ:($Y+5)>IOSL,1:0)!'CURPG D  Q:$P(INPUT,"^",5)=1  ; PRCA*4.5*321 changed
"RTN","RCDPEDA3",200,0)
 I $S('NJ:1,1:0)!'CURPG D  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",201,0)
 . D:'LSTMAN HDR(.INPUT)
"RTN","RCDPEDA3",202,0)
 S XX=$E("**TOTALS FOR DATE: "_$$FMTE^XLFDT(DTADD\1,"2Z")_$J("",30),1,30)
"RTN","RCDPEDA3",203,0)
 S YY=$G(^TMP($J,"TOTALS","DEP",DTADD))
"RTN","RCDPEDA3",204,0)
 S XX=XX_"   # OF DEPOSIT TICKETS RECEIVED: "_+YY_$J("",5)
"RTN","RCDPEDA3",205,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",206,0)
 S YY=$G(^TMP($J,"TOTALS","DEPA",DTADD))
"RTN","RCDPEDA3",207,0)
 S XX=$J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",208,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",209,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",210,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",211,0)
 D SL(.INPUT,$J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:")
"RTN","RCDPEDA3",212,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",213,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","D",1))
"RTN","RCDPEDA3",214,0)
 S XX=$J("",39)_"ACCEPTED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",215,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",216,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",217,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","D",2))
"RTN","RCDPEDA3",218,0)
 S XX=$J("",41)_"QUEUED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",219,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",220,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",221,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","D",0))
"RTN","RCDPEDA3",222,0)
 S XX=$J("",35)_"ERROR/REJECT: $"_$J(YY,"",2)
"RTN","RCDPEDA3",223,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",224,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",225,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","D",-1))
"RTN","RCDPEDA3",226,0)
 S XX=$J("",37)_"NOT IN FMS: $"_$J(YY,"",2)
"RTN","RCDPEDA3",227,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",228,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",229,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",230,0)
 ;
"RTN","RCDPEDA3",231,0)
 ; PRCA*4.5*321 add all debit logic
"RTN","RCDPEDA3",232,0)
 S XX=$G(^TMP($J,"TOTALS","DEBIT"))         ; Current Total # of debit EFTs for date range
"RTN","RCDPEDA3",233,0)
 S YY=$G(^TMP($J,"TOTALS","DEBIT","D"))     ; Total # of debit EFTs for date
"RTN","RCDPEDA3",234,0)
 S ^TMP($J,"TOTALS","DEBIT")=XX+YY          ; Updated Total # of debit EFTs for range
"RTN","RCDPEDA3",235,0)
 S XX=$G(^TMP($J,"TOTALS","DEBITA"))        ; Current Total amount of debit EFTs for date range
"RTN","RCDPEDA3",236,0)
 S YY=$G(^TMP($J,"TOTALS","DEBITA","D"))    ; Total amount of debit EFTs for date
"RTN","RCDPEDA3",237,0)
 S ^TMP($J,"TOTALS","DEBITA")=XX+YY         ; Updated Total amount of debit EFTs for range
"RTN","RCDPEDA3",238,0)
 S YY=+$G(^TMP($J,"TOTALS","DEBIT","D"))
"RTN","RCDPEDA3",239,0)
 S XX=$J("",27)_"# EFT DEBIT VOUCHERS: "_YY
"RTN","RCDPEDA3",240,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",241,0)
 S YY=+$G(^TMP($J,"TOTALS","DEBITA","D"))
"RTN","RCDPEDA3",242,0)
 S XX=$J("",33)_"DEBIT VOUCHERS: $"_$J(YY,"",2)
"RTN","RCDPEDA3",243,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",244,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",245,0)
 ;
"RTN","RCDPEDA3",246,0)
 S YY=+$G(^TMP($J,"TOTALS","EFT","D"))
"RTN","RCDPEDA3",247,0)
 S XX=$J("",26)_"# EFT PAYMENT RECORDS: "_YY
"RTN","RCDPEDA3",248,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",249,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",250,0)
 S YY=+$G(^TMP($J,"TOTALS","MATCH","D"))
"RTN","RCDPEDA3",251,0)
 S XX=$J("",25)_"# EFT PAYMENTS MATCHED: "_YY
"RTN","RCDPEDA3",252,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",253,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",254,0)
 ; PRCA*4.5*321 remove Matched payment amt posted
"RTN","RCDPEDA3",255,0)
 ;S YY=+$G(^TMP($J,"TOTALS","DEPAP",DTADD))
"RTN","RCDPEDA3",256,0)
 ;S XX=$J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",257,0)
 ;D SL(.INPUT,XX)
"RTN","RCDPEDA3",258,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",259,0)
 Q
"RTN","RCDPEDA3",260,0)
 ;
"RTN","RCDPEDA3",261,0)
TOTSF(INPUT) ; EP from RCDPEDAR
"RTN","RCDPEDA3",262,0)
 ;             Display Final Totals
"RTN","RCDPEDA3",263,0)
 ;
"RTN","RCDPEDA3",264,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDA3",265,0)
 ;                         A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA3",266,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA3",267,0)
 ;                         A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA3",268,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDA3",269,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",270,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDA3",271,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDA3",272,0)
 ;                         A8 - Current Line Counter
"RTN","RCDPEDA3",273,0)
 ;                         A9 - Internal Date being processed
"RTN","RCDPEDA3",274,0)
 ;          ^TMP($J,"TOTALS","DEP")         - Total # of deposits for date range
"RTN","RCDPEDA3",275,0)
 ;          ^TMP($J,"TOTALS","DEPA")        - Total Deposit Amount for date range
"RTN","RCDPEDA3",276,0)
 ;          ^TMP($J,"TOTALS","EFT","T")     - Total Deposit Amount by EFTs for range
"RTN","RCDPEDA3",277,0)
 ;          ^TMP($J,"TOTALS","FMS","T",-1)  - Total Deposit Amount by FMS Document for range
"RTN","RCDPEDA3",278,0)
 ;          ^TMP($J,"TOTALS","FMS","T",0)   - Total Amount for Error/Rejected docs for range
"RTN","RCDPEDA3",279,0)
 ;          ^TMP($J,"TOTALS","FMS","T",1")  - Total Amount for 'A','M',"F' or 'T' docs range
"RTN","RCDPEDA3",280,0)
 ;          ^TMP($J,"TOTALS","FMS","T",2")  - Total Amount for queued docs for range
"RTN","RCDPEDA3",281,0)
 ;          ^TMP($J,"TOTALS","MATCH","T")   - Total Matched EFTs for date range
"RTN","RCDPEDA3",282,0)
 ; Output:  INPUT       - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA3",283,0)
 ;                         A5 - Updated Page Number
"RTN","RCDPEDA3",284,0)
 ;                         A6 - Stop Flag
"RTN","RCDPEDA3",285,0)
 ;                         A8 - Updated Line Counter
"RTN","RCDPEDA3",286,0)
 N LSTMAN,NJ,XX,YY
"RTN","RCDPEDA3",287,0)
 S LSTMAN=$P(INPUT,"^",2),NJ=$P(INPUT,"^",1)
"RTN","RCDPEDA3",288,0)
 ;
"RTN","RCDPEDA3",289,0)
 ; header if no output was displayed and not being displayed in listman
"RTN","RCDPEDA3",290,0)
 ;I '$O(^TMP("RCDAILYACT",$J,0)),'LSTMAN D HDR(.INPUT)  ; PRCA*4.5*321 hdr regardless if no output
"RTN","RCDPEDA3",291,0)
 I 'LSTMAN D HDR(.INPUT)
"RTN","RCDPEDA3",292,0)
 ;
"RTN","RCDPEDA3",293,0)
 ; If user quit or (Nightly process flag AND not display to listman) - end here
"RTN","RCDPEDA3",294,0)
 I $P(INPUT,"^",5)=1!(NJ&'LSTMAN) Q
"RTN","RCDPEDA3",295,0)
 ;D SL(.INPUT," ")                                        ; PRCA*4.5*321 removed
"RTN","RCDPEDA3",296,0)
 S XX=$E("**** TOTALS FOR DATE RANGE:"_$J("",30),1,30)
"RTN","RCDPEDA3",297,0)
 S YY=+$G(^TMP($J,"TOTALS","DEP"))
"RTN","RCDPEDA3",298,0)
 S XX=XX_"   # OF DEPOSIT TICKETS RECEIVED: "_YY_$J("",5)
"RTN","RCDPEDA3",299,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",300,0)
 S YY=+$G(^TMP($J,"TOTALS","DEPA"))
"RTN","RCDPEDA3",301,0)
 S XX=$J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",302,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",303,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",304,0)
 D SL(.INPUT,$J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:")
"RTN","RCDPEDA3",305,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","T",1))
"RTN","RCDPEDA3",306,0)
 S XX=$J("",39)_"ACCEPTED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",307,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",308,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","T",2))
"RTN","RCDPEDA3",309,0)
 S XX=$J("",41)_"QUEUED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",310,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",311,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","T",0))
"RTN","RCDPEDA3",312,0)
 S XX=$J("",35)_"ERROR/REJECT: $"_$J(YY,"",2)
"RTN","RCDPEDA3",313,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",314,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","T",-1))
"RTN","RCDPEDA3",315,0)
 S XX=$J("",37)_"NOT IN FMS: $"_$J(YY,"",2)
"RTN","RCDPEDA3",316,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",317,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",318,0)
 ;
"RTN","RCDPEDA3",319,0)
 S YY=+$G(^TMP($J,"TOTALS","DEBIT"))
"RTN","RCDPEDA3",320,0)
 S XX=$J("",21)_"TOTAL # EFT DEBIT VOUCHERS: "_YY
"RTN","RCDPEDA3",321,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",322,0)
 S YY=+$G(^TMP($J,"TOTALS","DEBITA"))
"RTN","RCDPEDA3",323,0)
 S XX=$J("",27)_"TOTAL DEBIT VOUCHERS: $"_$J(YY,"",2)
"RTN","RCDPEDA3",324,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",325,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",326,0)
 ;
"RTN","RCDPEDA3",327,0)
 S YY=+$G(^TMP($J,"TOTALS","EFT","T"))
"RTN","RCDPEDA3",328,0)
 S XX=$J("",26)_"# EFT PAYMENT RECORDS: "_YY
"RTN","RCDPEDA3",329,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",330,0)
 S YY=+$G(^TMP($J,"TOTALS","MATCH","T"))
"RTN","RCDPEDA3",331,0)
 S XX=$J("",25)_"# EFT PAYMENTS MATCHED: "_YY
"RTN","RCDPEDA3",332,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",333,0)
 ; PRCA*4.5*321 remove Matched payment amt posted
"RTN","RCDPEDA3",334,0)
 ;S YY=+$G(^TMP($J,"TOTALS","DEPAP"))
"RTN","RCDPEDA3",335,0)
 ;S XX=$J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",336,0)
 ;D SL(.INPUT,XX)
"RTN","RCDPEDA3",337,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",338,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",339,0)
 Q
"RTN","RCDPEDA3",340,0)
 ;
"RTN","RCDPEDA3",341,0)
ASK() ; Ask to continue
"RTN","RCDPEDA3",342,0)
 ; PRCA*4.5*321 changed to extrinsic function
"RTN","RCDPEDA3",343,0)
 ; Input: None
"RTN","RCDPEDA3",344,0)
 ; Returns: 1 if user wants to stop, 0 otherwise
"RTN","RCDPEDA3",345,0)
 I $E(IOST,1,2)'["C-" Q 0
"RTN","RCDPEDA3",346,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDA3",347,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEDA3",348,0)
 I ($D(DIRUT))!($D(DUOUT)) Q 1
"RTN","RCDPEDA3",349,0)
 Q 0
"RTN","RCDPEDA3",350,0)
 ;
"RTN","RCDPEDA3",351,0)
SL(INPUT,Z) ;EP from RCDPEDAR & RCDEPA2
"RTN","RCDPEDA3",352,0)
 ;            Writes or stores line
"RTN","RCDPEDA3",353,0)
 ;
"RTN","RCDPEDA3",354,0)
 ; Input:   INPUT                   - A1^A2^A3^...^An Where:
"RTN","RCDPEDA3",355,0)
 ;                                      A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA3",356,0)
 ;                                      A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA3",357,0)
 ;                                      A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA3",358,0)
 ;                                      A4 - Current Page Number
"RTN","RCDPEDA3",359,0)
 ;                                      A5 - Stop Flag
"RTN","RCDPEDA3",360,0)
 ;                                      A6 - Start of Date Range
"RTN","RCDPEDA3",361,0)
 ;                                      A7 - End of Date Range
"RTN","RCDPEDA3",362,0)
 ;                                      A8 - Current Line Number
"RTN","RCDPEDA3",363,0)
 ;          Z                       - Data line to write or store
"RTN","RCDPEDA3",364,0)
 ;          RCCT                    - Current line counter
"RTN","RCDPEDA3",365,0)
 ;          RCNJ                    - 1 to set array, 0 to write line
"RTN","RCDPEDA3",366,0)
 ;          ^TMP($J,"RCDPE_DAR")    - Current array of stored lines (if RCNJ=1)
"RTN","RCDPEDA3",367,0)
 ; Output:  INPUT                   - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA3",368,0)
 ;                                      A11 - Updated Line Number
"RTN","RCDPEDA3",369,0)
 ; Output:  
"RTN","RCDPEDA3",370,0)
 ;          ^TMP($J,"RCDPE_DAR")    - Updated array of stored lines (if RCNJ=1)
"RTN","RCDPEDA3",371,0)
 N XX
"RTN","RCDPEDA3",372,0)
 S XX=$P(INPUT,"^",8)+1
"RTN","RCDPEDA3",373,0)
 S $P(INPUT,"^",8)=XX
"RTN","RCDPEDA3",374,0)
 ;
"RTN","RCDPEDA3",375,0)
 ; Called from nightly process
"RTN","RCDPEDA3",376,0)
 I $P(INPUT,"^",1) S ^TMP($J,"RCDPE_DAR",XX)=Z Q
"RTN","RCDPEDA3",377,0)
 W !,Z
"RTN","RCDPEDA3",378,0)
 Q
"RTN","RCDPEDA4")
0^19^B37590225
"RTN","RCDPEDA4",1,0)
RCDPEDA4 ;AITC/DW - ACTIVITY REPORT ;Feb 17, 2017@10:37:00
"RTN","RCDPEDA4",2,0)
 ;;4.5;Accounts Receivable;**318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEDA4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDA4",4,0)
 ; Continuation of RCDPEDAR - Daily activity Report
"RTN","RCDPEDA4",5,0)
 Q
"RTN","RCDPEDA4",6,0)
 ;
"RTN","RCDPEDA4",7,0)
ERRMSGS(INPUT,IEN3443) ;EP from RCDPEDA2
"RTN","RCDPEDA4",8,0)
 ; Display any EFT error messages
"RTN","RCDPEDA4",9,0)
 ; Input:   INPUT               - See EFTERRS for details
"RTN","RCDPEDA4",10,0)
 ;          IEN3443             - Internal IEN for file 344.3
"RTN","RCDPEDA4",11,0)
 ;          ^TMP($J,"DEPERRS")  - Current Line Count
"RTN","RCDPEDA4",12,0)
 ;                                Note: Only passed if not in detail mode
"RTN","RCDPEDA4",13,0)
 ;          ^TMP($J,"DEPERRS,X) - Error line(s)
"RTN","RCDPEDA4",14,0)
 ; Output:  ^TMP($J,"DEPERRS")  - Current Line Count
"RTN","RCDPEDA4",15,0)
 ;                                Note: Only passed if not in detail mode
"RTN","RCDPEDA4",16,0)
 ;
"RTN","RCDPEDA4",17,0)
 ; PRCA*4.5*321 capture display and line cnt to ^TMP($J,"DEPERRS")
"RTN","RCDPEDA4",18,0)
 N DETL,ERRS,LNCT,XX,ZZ
"RTN","RCDPEDA4",19,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA4",20,0)
 S XX=$$GET1^DIQ(344.3,IEN3443,2,"I","ERRS")    ; Error Message WP field
"RTN","RCDPEDA4",21,0)
 Q:'$D(ERRS)                                    ; No errors
"RTN","RCDPEDA4",22,0)
 S XX=$J("",3)_"ERROR MESSAGES FOR EFT:"
"RTN","RCDPEDA4",23,0)
 S LNCT=$G(^TMP($J,"DEPERRS"))+1
"RTN","RCDPEDA4",24,0)
 S ^TMP($J,"DEPERRS")=LNCT
"RTN","RCDPEDA4",25,0)
 S ^TMP($J,"DEPERRS",LNCT)=XX
"RTN","RCDPEDA4",26,0)
 S XX=""
"RTN","RCDPEDA4",27,0)
 F  D  Q:XX=""
"RTN","RCDPEDA4",28,0)
 . S XX=$O(ERRS(XX))
"RTN","RCDPEDA4",29,0)
 . Q:XX=""
"RTN","RCDPEDA4",30,0)
 . S ZZ=$J("",5)_ERRS(XX)
"RTN","RCDPEDA4",31,0)
 . S LNCT=$G(^TMP($J,"DEPERRS"))+1
"RTN","RCDPEDA4",32,0)
 . S ^TMP($J,"DEPERRS")=LNCT
"RTN","RCDPEDA4",33,0)
 . S ^TMP($J,"DEPERRS",LNCT)=ZZ
"RTN","RCDPEDA4",34,0)
 Q
"RTN","RCDPEDA4",35,0)
 ; 
"RTN","RCDPEDA4",36,0)
EFTERRS(INPUT,IEN34431,EFTCTR) ;EP from RCDPEDA2
"RTN","RCDPEDA4",37,0)
 ; Output any EFT Detail errors
"RTN","RCDPEDA4",38,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDA4",39,0)
 ;                          A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA4",40,0)
 ;                          A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA4",41,0)
 ;                          A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA4",42,0)
 ;                          A4 - Current Page Number
"RTN","RCDPEDA4",43,0)
 ;                          A5 - Stop Flag
"RTN","RCDPEDA4",44,0)
 ;                          A6 - Start of Date Range
"RTN","RCDPEDA4",45,0)
 ;                          A7 - End of Date Range
"RTN","RCDPEDA4",46,0)
 ;                          A8 - Current Line Counter
"RTN","RCDPEDA4",47,0)
 ;                          A9 - Internal Date being processed
"RTN","RCDPEDA4",48,0)
 ;                          A10- 1 - Only Display EFTs with a debit flag of 'D'
"RTN","RCDPEDA4",49,0)
 ;                               0 - Display all EFTs
"RTN","RCDPEDA4",50,0)
 ;          IEN34431    - Internal IEN for file 344.31
"RTN","RCDPEDA4",51,0)
 ;          EFTCTR                  - Used to store lines for EFT
"RTN","RCDPEDA4",52,0)
 ;          ^TMP($J,ONEDEP,0,1)     - Deposit Detail line
"RTN","RCDPEDA4",53,0)
 ;          ^TMP($J,ONEDEP,EFTCTR)  - Current # of lines for EFT
"RTN","RCDPEDA4",54,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- EFT Deposit Lines
"RTN","RCDPEDA4",55,0)
 ; Output   ^TMP($J,ONEDEP,EFTCTR)  - Updated # of lines for EFT
"RTN","RCDPEDA4",56,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- Updated EFT Deposit Lines
"RTN","RCDPEDA4",57,0)
 Q:'$O(^RCY(344.31,IEN34431,2,0))           ; No error message
"RTN","RCDPEDA4",58,0)
 N EFTLN,ERRS,V,XX,YY
"RTN","RCDPEDA4",59,0)
 S XX=$J("",3)_"ERROR MESSAGES FOR EFT DETAIL:"
"RTN","RCDPEDA4",60,0)
 S EFTLN=$G(^TMP($J,"ONEDEP",EFTCTR))+1
"RTN","RCDPEDA4",61,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA4",62,0)
 S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=XX
"RTN","RCDPEDA4",63,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,2,"I","ERRS")
"RTN","RCDPEDA4",64,0)
 S V=""
"RTN","RCDPEDA4",65,0)
 F  D  Q:V=""
"RTN","RCDPEDA4",66,0)
 . S V=$O(ERRS(V))
"RTN","RCDPEDA4",67,0)
 . Q:V=""
"RTN","RCDPEDA4",68,0)
 . S XX=$J("",5)_ERRS(V)
"RTN","RCDPEDA4",69,0)
 . S EFTLN=EFTLN+1
"RTN","RCDPEDA4",70,0)
 . S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA4",71,0)
 . S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=XX
"RTN","RCDPEDA4",72,0)
 Q
"RTN","RCDPEDA4",73,0)
 ;
"RTN","RCDPEDA4",74,0)
LMHDR(RCSTOP,RCDET,RCNJ,RCDT1,RCDT2,RCHDR,DONLY) ;EP from RCDPEDAR      
"RTN","RCDPEDA4",75,0)
 ; ListMan report heading
"RTN","RCDPEDA4",76,0)
 ; Input:   RCDET       - 1 to display detail, 0 otherwise
"RTN","RCDPEDA4",77,0)
 ;          RCNJ        - Set 1, indicates report was called from the nightly
"RTN","RCDPEDA4",78,0)
 ;                        process OR displaying to listman.  Used to set lines
"RTN","RCDPEDA4",79,0)
 ;                        into a ^TMP array instead of displaying them.
"RTN","RCDPEDA4",80,0)
 ;          RCDT1       - Internal Start Date of date range
"RTN","RCDPEDA4",81,0)
 ;          RCDT2       - Internal End Date of date range
"RTN","RCDPEDA4",82,0)
 ;          DONLY       - 1 - Only EFTs with debits, 0 - display all EFTs
"RTN","RCDPEDA4",83,0)
 ;          RCNP        - Payer Selection flag A1^A2^A3 Where:
"RTN","RCDPEDA4",84,0)
 ;                         A1 - 1 - Range,2 - All,3 -Specific
"RTN","RCDPEDA4",85,0)
 ;                         A2 - From Payer text (only set if A1=1)
"RTN","RCDPEDA4",86,0)
 ;                         A3 - Through text (only set if A1=1)
"RTN","RCDPEDA4",87,0)
 ;          ^TMP("RCSELPAY",$J,B1) - Selected payers to be displayed
"RTN","RCDPEDA4",88,0)
 ; Output:  RCHDR       - Array of listman header lines
"RTN","RCDPEDA4",89,0)
 ;          RCSTOP      - 1 if user stopped 
"RTN","RCDPEDA4",90,0)
 ;
"RTN","RCDPEDA4",91,0)
 N RCCT,X,XX,Y,Z,Z0,Z1
"RTN","RCDPEDA4",92,0)
 S RCCT=0
"RTN","RCDPEDA4",93,0)
 S XX=$S(RCDET:"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDA4",94,0)
 S RCHDR("TITLE")="EDI LOCKBOX EFT DAILY ACTIVITY "_XX
"RTN","RCDPEDA4",95,0)
 S Z1=""
"RTN","RCDPEDA4",96,0)
 I 'VAUTD D
"RTN","RCDPEDA4",97,0)
 . S Z0=0
"RTN","RCDPEDA4",98,0)
 . F  D  Q:'Z0
"RTN","RCDPEDA4",99,0)
 . . S Z0=$O(VAUTD(Z0))
"RTN","RCDPEDA4",100,0)
 . . Q:'Z0
"RTN","RCDPEDA4",101,0)
 . . S XX=$$GET1^DIQ(40.8,Z0,1,"I")  ; Facility Number  ;PRCA*4.5*321
"RTN","RCDPEDA4",102,0)
 . . ;S Z1=Z1_VAUTD(Z0)_", "
"RTN","RCDPEDA4",103,0)
 . . S Z1=Z1_XX_", "
"RTN","RCDPEDA4",104,0)
 S Z="DIVISIONS: "_$S(VAUTD:"ALL",1:$E(Z1,1,$L(Z1)-2))
"RTN","RCDPEDA4",105,0)
 I 'RCDET D
"RTN","RCDPEDA4",106,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=""
"RTN","RCDPEDA4",107,0)
 S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",108,0)
 ;
"RTN","RCDPEDA4",109,0)
 I 'RCDET D
"RTN","RCDPEDA4",110,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=""
"RTN","RCDPEDA4",111,0)
 S Z="DATE RANGE: "_$$FMTE^XLFDT(RCDT1,"2Z")_" - "
"RTN","RCDPEDA4",112,0)
 S Z=Z_$$FMTE^XLFDT(RCDT2,"2Z")_" (DATE DEPOSIT ADDED)"
"RTN","RCDPEDA4",113,0)
 S Z=Z_"        DEBIT ONLY EFTs: "_$S(DONLY=1:"YES",1:"NO") ; PRCA*4.5*321 Added line
"RTN","RCDPEDA4",114,0)
 I 'RCDET D
"RTN","RCDPEDA4",115,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=""
"RTN","RCDPEDA4",116,0)
 S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",117,0)
 I RCDET D
"RTN","RCDPEDA4",118,0)
 . S XX="DEP #      DEPOSIT DT  "_$J("",19)
"RTN","RCDPEDA4",119,0)
 . S XX=XX_"DEP AMOUNT          FMS DEPOSIT STAT"
"RTN","RCDPEDA4",120,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,80)
"RTN","RCDPEDA4",121,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",122,0)
 . ; PRCA*4.5*318, Move entire EFT # row to left 1 space to adjust for other rows needing space
"RTN","RCDPEDA4",123,0)
 . ; PRCA*4.5*326 - make room and add match date
"RTN","RCDPEDA4",124,0)
 . S XX=$J("",2)_"EFT #"_$J("",15)_"DATE PD   PAYMENT AMOUNT  ERA MATCH STATUS & DATE"
"RTN","RCDPEDA4",125,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,80)
"RTN","RCDPEDA4",126,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",127,0)
 . ; PRCA*4.5*318, Move entire EFT Payer Trace # row to left 6 spaces to adjust for other rows needing space
"RTN","RCDPEDA4",128,0)
 . S Z=$$SETSTR^VALM1($J("",4)_"EFT PAYER TRACE #","",1,30)
"RTN","RCDPEDA4",129,0)
 . ;PRCA*4.5*318 add CR #
"RTN","RCDPEDA4",130,0)
 . S Z=$$SETSTR^VALM1("CR #",Z,59,80)
"RTN","RCDPEDA4",131,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",132,0)
 . ; PRCA*4.5*318, Move entire Payment From row to left 8 spaces to adjust 
"RTN","RCDPEDA4",133,0)
 . ; a possible 60 character Payer Name and 20 character Payer ID
"RTN","RCDPEDA4",134,0)
 . S Z=$$SETSTR^VALM1($J("",6)_"PAYMENT FROM","",1,30)
"RTN","RCDPEDA4",135,0)
 . S Z=$$SETSTR^VALM1("DEBIT",Z,37,5)            ; PRCA*4.5*321 Added line
"RTN","RCDPEDA4",136,0)
 . S Z=$$SETSTR^VALM1("DEP RECEIPT #",Z,45,30)   ; PRCA*4.5*321 used to be 31,30
"RTN","RCDPEDA4",137,0)
 . S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDA4",138,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",139,0)
 . ;PRCA*4.5*318 add TR #s
"RTN","RCDPEDA4",140,0)
 . S Z=$$SETSTR^VALM1("TR #","",4,30)
"RTN","RCDPEDA4",141,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",142,0)
 Q
"RTN","RCDPEDA4",143,0)
 ;
"RTN","RCDPEDA4",144,0)
GETTR(IEN34431,INPUT)   ;EP from RCDPEDA2
"RTN","RCDPEDA4",145,0)
 ; Gathers and Displays all TR Doc #s for a specified EFT detail record
"RTN","RCDPEDA4",146,0)
 ; PRCA*4.5*318 add TR #s to detail rpt
"RTN","RCDPEDA4",147,0)
 ; Input:   IEN34431                - Internal IEN for file #344.31
"RTN","RCDPEDA4",148,0)
 ;          INPUT                   - See EFTERRS for details
"RTN","RCDPEDA4",149,0)
 ;          EFTCTR                  - Used to store lines for EFT
"RTN","RCDPEDA4",150,0)
 ;          ^TMP($J,ONEDEP,0,1)     - Deposit Detail line
"RTN","RCDPEDA4",151,0)
 ;          ^TMP($J,ONEDEP,EFTCTR)  - Current # of lines for EFT
"RTN","RCDPEDA4",152,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- EFT Deposit Lines
"RTN","RCDPEDA4",153,0)
 ; Output   ^TMP($J,ONEDEP,0,1)     - Updated Detail line
"RTN","RCDPEDA4",154,0)
 ;          ^TMP($J,ONEDEP,EFTCTR)  - Updated # of lines for EFT
"RTN","RCDPEDA4",155,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- EFT Deposit Lines
"RTN","RCDPEDA4",156,0)
 ;
"RTN","RCDPEDA4",157,0)
 ; PRCA*4.5*321 capture display to ^TMP($J,"ONEDEP",EFTRCR) including line cnt
"RTN","RCDPEDA4",158,0)
 N CTR,EFTLN,IEN3444,IENS,LNCT,RECEIPT,TRDOC,TRDOCS,XX,ZZ
"RTN","RCDPEDA4",159,0)
 ;
"RTN","RCDPEDA4",160,0)
 ; First gather up all the TR Document numbers into as many lines as needed
"RTN","RCDPEDA4",161,0)
 S CTR=1,LNCT=$G(^TMP($J,"ONEDEP"))
"RTN","RCDPEDA4",162,0)
 S EFTLN=$G(^TMP($J,"ONEDEP",EFTCTR))
"RTN","RCDPEDA4",163,0)
 S IEN3444=$$GET1^DIQ(344.31,IEN34431,.1,"I") ; Internal IEN for for 344.4
"RTN","RCDPEDA4",164,0)
 S RECEIPT=$$GET1^DIQ(344.4,IEN3444,.08,"I")  ; Receipt # from 344.4
"RTN","RCDPEDA4",165,0)
 I RECEIPT'="" D
"RTN","RCDPEDA4",166,0)
 . S TRDOC=$TR($$GET1^DIQ(344,RECEIPT,200,"I")," ")    ; FMS Document #
"RTN","RCDPEDA4",167,0)
 . I TRDOC="" Q
"RTN","RCDPEDA4",168,0)
 . S TRDOCS(CTR)=TRDOC
"RTN","RCDPEDA4",169,0)
 . S XX=""
"RTN","RCDPEDA4",170,0)
 . F  D  Q:XX=""
"RTN","RCDPEDA4",171,0)
 . . S XX=$O(^RCY(344.4,IEN3444,8,XX))
"RTN","RCDPEDA4",172,0)
 . . Q:XX=""
"RTN","RCDPEDA4",173,0)
 . . S IENS=XX_","_IEN3444_","
"RTN","RCDPEDA4",174,0)
 . . S RECEIPT=$$GET1^DIQ(344.48,IENS,.01,"I")  ; Other receipt numbers
"RTN","RCDPEDA4",175,0)
 . . I RECEIPT="" Q
"RTN","RCDPEDA4",176,0)
 . . S TRDOC=$TR($$GET1^DIQ(344,RECEIPT,200,"I")," ")   ; FMS Document #
"RTN","RCDPEDA4",177,0)
 . . Q:TRDOC=""
"RTN","RCDPEDA4",178,0)
 . . I $L(TRDOC)+$L($G(TRDOCS(CTR)))+1>73 D  Q
"RTN","RCDPEDA4",179,0)
 . . . S CTR=CTR+1,TRDOCS(CTR)=TRDOC
"RTN","RCDPEDA4",180,0)
 . . S TRDOCS(CTR)=TRDOCS(CTR)_", "_TRDOC
"RTN","RCDPEDA4",181,0)
 ;
"RTN","RCDPEDA4",182,0)
 ; Now display the TR Document numbers
"RTN","RCDPEDA4",183,0)
 I '$D(TRDOCS) D  Q    ; blank line for TR#s
"RTN","RCDPEDA4",184,0)
 . S EFTLN=EFTLN+1
"RTN","RCDPEDA4",185,0)
 . S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA4",186,0)
 . S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=" "
"RTN","RCDPEDA4",187,0)
 S XX=""
"RTN","RCDPEDA4",188,0)
 F  D  Q:XX=""
"RTN","RCDPEDA4",189,0)
 . S XX=$O(TRDOCS(XX))
"RTN","RCDPEDA4",190,0)
 . Q:XX=""
"RTN","RCDPEDA4",191,0)
 . S EFTLN=EFTLN+1
"RTN","RCDPEDA4",192,0)
 . S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA4",193,0)
 . S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=$J("",3)_TRDOCS(XX)
"RTN","RCDPEDA4",194,0)
 Q
"RTN","RCDPEDA4",195,0)
 ;
"RTN","RCDPEDAR")
0^61^B78240638
"RTN","RCDPEDAR",1,0)
RCDPEDAR ;ALB/TMK - ACTIVITY REPORT ;Jun 06, 2014@19:11:19
"RTN","RCDPEDAR",2,0)
 ;;4.5;Accounts Receivable;**173,276,284,283,298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEDAR",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDAR",4,0)
 Q
"RTN","RCDPEDAR",5,0)
 ;
"RTN","RCDPEDAR",6,0)
RPT ; Daily Activity Rpt On Demand
"RTN","RCDPEDAR",7,0)
 N POP,RCDET,RCDIV,RCDONLY,RCDT1,RCDT2,RCHDR,RCINC,RCLSTMGR,RCNJ
"RTN","RCDPEDAR",8,0)
 N RCPAR,RCPAY,RCPYRSEL,RCRANGE,RCSTOP,RCTMPND,RCTYPE,VAUTD,X,XX,Y,%ZIS
"RTN","RCDPEDAR",9,0)
 S RCNJ=0                                   ; Not the nightly job, user interactions
"RTN","RCDPEDAR",10,0)
 D DIVISION^VAUTOMA                         ; IA 664 Select Division/Station - sets VAUTD
"RTN","RCDPEDAR",11,0)
 I 'VAUTD,($D(VAUTD)'=11) Q
"RTN","RCDPEDAR",12,0)
 S RCDET=$$RTYPE()                          ; Select Report Type (Summary/Detail)
"RTN","RCDPEDAR",13,0)
 Q:RCDET=-1
"RTN","RCDPEDAR",14,0)
 S XX=$$DTRANGE(.RCDT1,.RCDT2)              ; Select Date Range to be used
"RTN","RCDPEDAR",15,0)
 Q:'XX
"RTN","RCDPEDAR",16,0)
 ;
"RTN","RCDPEDAR",17,0)
 ; PRCA*4.5*326 - Ask to show Medical/Pharmacy Tricare or All
"RTN","RCDPEDAR",18,0)
 S RCTYPE=$$RTYPE^RCDPEU1("")
"RTN","RCDPEDAR",19,0)
 I RCTYPE<0 Q
"RTN","RCDPEDAR",20,0)
 ;
"RTN","RCDPEDAR",21,0)
 S RCPAY=$$PAYRNG^RCDPEU1()             ; PRCA*4.5*326 - Selected or Range of Payers
"RTN","RCDPEDAR",22,0)
 Q:RCPAY=-1                             ; PRCA*4.5*326 '^' or timeout
"RTN","RCDPEDAR",23,0)
 ;
"RTN","RCDPEDAR",24,0)
 I RCPAY'="A" D  Q:XX=-1                ; PRCA*4.5*326 - Since we don't want all payers 
"RTN","RCDPEDAR",25,0)
 . S RCPAR("SELC")=RCPAY                ;         prompt for payers we do want
"RTN","RCDPEDAR",26,0)
 . S RCPAR("TYPE")=RCTYPE
"RTN","RCDPEDAR",27,0)
 . S RCPAR("FILE")=344.4
"RTN","RCDPEDAR",28,0)
 . S RCPAR("DICA")="Select Insurance Company NAME: "
"RTN","RCDPEDAR",29,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPEDAR",30,0)
 ;
"RTN","RCDPEDAR",31,0)
 S RCDONLY=$$DBTONLY()                      ; Debit only filter   ;PRCA*4.5*321
"RTN","RCDPEDAR",32,0)
 Q:RCDONLY=-1                               ; '^' or timeout
"RTN","RCDPEDAR",33,0)
 S RCLSTMGR=$$ASKLM^RCDPEARL                ; Ask to Display in Listman Template
"RTN","RCDPEDAR",34,0)
 Q:RCLSTMGR<0                               ; '^' or timeout
"RTN","RCDPEDAR",35,0)
 ;
"RTN","RCDPEDAR",36,0)
 I RCLSTMGR=1 D  Q                          ; ListMan Template format, put in array
"RTN","RCDPEDAR",37,0)
 . S RCTMPND="RCDPE_DAR"
"RTN","RCDPEDAR",38,0)
 . K ^TMP($J,RCTMPND)
"RTN","RCDPEDAR",39,0)
 . D EN(RCDET,RCDT1,RCDT2,RCLSTMGR,RCDONLY)
"RTN","RCDPEDAR",40,0)
 . D LMHDR^RCDPEDA4(.RCSTOP,RCDET,1,RCDT1,RCDT2,.RCHDR,RCDONLY)
"RTN","RCDPEDAR",41,0)
 . D LMRPT^RCDPEARL(.RCHDR,$NA(^TMP($J,RCTMPND))) ; Generate ListMan display
"RTN","RCDPEDAR",42,0)
 . K ^TMP($J,RCTMPND)
"RTN","RCDPEDAR",43,0)
 ;
"RTN","RCDPEDAR",44,0)
 ; Ask device
"RTN","RCDPEDAR",45,0)
 S %ZIS="QM"
"RTN","RCDPEDAR",46,0)
 D ^%ZIS
"RTN","RCDPEDAR",47,0)
 Q:POP
"RTN","RCDPEDAR",48,0)
 ;
"RTN","RCDPEDAR",49,0)
 I $D(IO("Q")) D  Q                         ; Queued Report
"RTN","RCDPEDAR",50,0)
 . N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEDAR",51,0)
 . S ZTRTN="EN^RCDPEDAR("_RCDET_","_RCDT1_","_RCDT2_",0,"_RCDONLY_")" ;PRCA*4.5*321 added RCDONLY
"RTN","RCDPEDAR",52,0)
 . S ZTDESC="AR - EDI LOCKBOX EFT DAILY ACTIVITY REPORT"
"RTN","RCDPEDAR",53,0)
 . S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEDAR",54,0)
 . S ZTSAVE("^TMP(""RCDPEU1"",$J,")="" ; PRCA*4.5*326
"RTN","RCDPEDAR",55,0)
 . ;
"RTN","RCDPEDAR",56,0)
 . D ^%ZTLOAD
"RTN","RCDPEDAR",57,0)
 . W !!,$S($D(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task.")
"RTN","RCDPEDAR",58,0)
 . K ZTSK,IO("Q")
"RTN","RCDPEDAR",59,0)
 . D HOME^%ZIS
"RTN","RCDPEDAR",60,0)
 ;
"RTN","RCDPEDAR",61,0)
 U IO
"RTN","RCDPEDAR",62,0)
 D EN(RCDET,RCDT1,RCDT2,RCLSTMGR,RCDONLY)
"RTN","RCDPEDAR",63,0)
 Q
"RTN","RCDPEDAR",64,0)
 ;
"RTN","RCDPEDAR",65,0)
DBTONLY() ; Allows the user to select filter to only show EFTs with debits
"RTN","RCDPEDAR",66,0)
 ; PRCA*4.5*321 Added subroutine
"RTN","RCDPEDAR",67,0)
 ; Input:   None
"RTN","RCDPEDAR",68,0)
 ; Returns: 0       - All EFTs to display
"RTN","RCDPEDAR",69,0)
 ;          1       - Only EFTs with debits to be displayed
"RTN","RCDPEDAR",70,0)
 ;         -1       - User up-arrowed or timed out
"RTN","RCDPEDAR",71,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDAR",72,0)
 S DIR("A")="Show EFTs with debits only? "
"RTN","RCDPEDAR",73,0)
 S DIR(0)="SA^Y:YES;N:NO"
"RTN","RCDPEDAR",74,0)
 S DIR("B")="NO"
"RTN","RCDPEDAR",75,0)
 S DIR("?",1)="Enter 'YES' to only show EFTs with a debit flag of 'D'."
"RTN","RCDPEDAR",76,0)
 S DIR("?")="Enter 'NO' to show all EFTs."
"RTN","RCDPEDAR",77,0)
 D ^DIR
"RTN","RCDPEDAR",78,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPEDAR",79,0)
 Q $E(Y,1)="Y"
"RTN","RCDPEDAR",80,0)
 ;
"RTN","RCDPEDAR",81,0)
RTYPE() ; Allows the user to select the report type (Summary/Detail)
"RTN","RCDPEDAR",82,0)
 ; Input:   None
"RTN","RCDPEDAR",83,0)
 ; Returns: 0       - Summary Display
"RTN","RCDPEDAR",84,0)
 ;          1       - Detail Display
"RTN","RCDPEDAR",85,0)
 ;         -1       - User up-arrowed or timed out
"RTN","RCDPEDAR",86,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDAR",87,0)
 S DIR("A")="(S)UMMARY OR (D)ETAIL?: "
"RTN","RCDPEDAR",88,0)
 S DIR(0)="SA^S:SUMMARY TOTALS ONLY;D:DETAIL AND TOTALS"
"RTN","RCDPEDAR",89,0)
 S DIR("B")="D"
"RTN","RCDPEDAR",90,0)
 D ^DIR
"RTN","RCDPEDAR",91,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPEDAR",92,0)
 Q Y="D"
"RTN","RCDPEDAR",93,0)
 ;
"RTN","RCDPEDAR",94,0)
DTRANGE(STDATE,ENDDATE) ; Allows the user to select the date range to by used
"RTN","RCDPEDAR",95,0)
 ; Input:   None
"RTN","RCDPEDAR",96,0)
 ; Output:  STDATE  = Internal Fileman Date to start at
"RTN","RCDPEDAR",97,0)
 ;          ENDDATE - Internal Fileman Date to end at
"RTN","RCDPEDAR",98,0)
 ; Returns: 0 - User up-arrowed or timed out, 1 otherwise
"RTN","RCDPEDAR",99,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDAR",100,0)
 S DIR("?")="Enter the earliest date of receipt of deposit to include on the report."
"RTN","RCDPEDAR",101,0)
 S DIR(0)="DAO^:"_DT_":APE"
"RTN","RCDPEDAR",102,0)
 S DIR("A")="START DATE: "
"RTN","RCDPEDAR",103,0)
 D ^DIR
"RTN","RCDPEDAR",104,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y="") 0
"RTN","RCDPEDAR",105,0)
 S STDATE=Y
"RTN","RCDPEDAR",106,0)
 K DIR
"RTN","RCDPEDAR",107,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEDAR",108,0)
 S DIR("B")=Y(0)
"RTN","RCDPEDAR",109,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="END DATE: "
"RTN","RCDPEDAR",110,0)
 D ^DIR
"RTN","RCDPEDAR",111,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y="") 0
"RTN","RCDPEDAR",112,0)
 S ENDDATE=Y
"RTN","RCDPEDAR",113,0)
 Q 1
"RTN","RCDPEDAR",114,0)
 ;
"RTN","RCDPEDAR",115,0)
EN(RCDET,RCDT1,RCDT2,RCLSTMGR,DONLY) ; Entry point for report, might be queued
"RTN","RCDPEDAR",116,0)
 ; Input:   RCDET       - 1 - Detail Report, 0 - Summary
"RTN","RCDPEDAR",117,0)
 ;          RCDT1       - Internal Fileman Start date
"RTN","RCDPEDAR",118,0)
 ;          RCDT2       - Internal Fileman End date
"RTN","RCDPEDAR",119,0)
 ;          RCLSTMGR    - 1 display in list manager, 0 otherwise
"RTN","RCDPEDAR",120,0)
 ;                        Optional, defaults to 0
"RTN","RCDPEDAR",121,0)
 ;          DONLY       - 1 only display EFTs with a debit flag of 'D'
"RTN","RCDPEDAR",122,0)
 ;                        0 display all EFTs
"RTN","RCDPEDAR",123,0)
 ;          RCPAY       - A - All Payers selected
"RTN","RCDPEDAR",124,0)
 ;                      - R - Range of Payers
"RTN","RCDPEDAR",125,0)
 ;                      - S - Specific payers
"RTN","RCDPEDAR",126,0)
 ;          RCPYRSEL    - Array of selected payers (Only present if A1=3 above
"RTN","RCDPEDAR",127,0)
 ;          VAUTD       - 1 - All selected divisions OR an array of selected divisions
"RTN","RCDPEDAR",128,0)
 N DFLG,DTADD,IEN3443,IEN34431,INPUT,RCFLG,RCJOB,RCT,XX,Z   ; PRCA*4.5*321 Added DFLG
"RTN","RCDPEDAR",129,0)
 N:$G(ZTSK) ZTSTOP                          ; Job was tasked, ZTSTOP = flag to stop
"RTN","RCDPEDAR",130,0)
 S:'$D(RCLSTMGR) RCLSTMGR=0
"RTN","RCDPEDAR",131,0)
 S RCPAY=$G(RCPAY,"A") ; PRCA*4.5*326
"RTN","RCDPEDAR",132,0)
 ;
"RTN","RCDPEDAR",133,0)
 S XX=$S(RCLSTMGR:1,1:0)
"RTN","RCDPEDAR",134,0)
 S INPUT=XX_"^"_RCLSTMGR_"^"_+RCDET
"RTN","RCDPEDAR",135,0)
 S RCJOB=$J
"RTN","RCDPEDAR",136,0)
 K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEDAR",137,0)
 K ^TMP($J,"TOTALS")                        ; Initialize Totals temp workspace
"RTN","RCDPEDAR",138,0)
 ;
"RTN","RCDPEDAR",139,0)
 ; Loop through all of the EDI LOCKBOX DEPOSIT records in the selected date
"RTN","RCDPEDAR",140,0)
 ; range and add any that pass the payer and division filters into ^TMP
"RTN","RCDPEDAR",141,0)
 ; by the internal date added
"RTN","RCDPEDAR",142,0)
 S DTADD=RCDT1-.0001,RCT=0
"RTN","RCDPEDAR",143,0)
 S $P(INPUT,"^",4)=0                        ; Current Page Number
"RTN","RCDPEDAR",144,0)
 S $P(INPUT,"^",5)=0                        ; Stop Flag
"RTN","RCDPEDAR",145,0)
 S $P(INPUT,"^",10)=DONLY
"RTN","RCDPEDAR",146,0)
 F  D  Q:'DTADD  Q:DTADD>(RCDT2_".9999")  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDAR",147,0)
 . S DTADD=$O(^RCY(344.3,"ARECDT",DTADD))
"RTN","RCDPEDAR",148,0)
 . Q:'DTADD
"RTN","RCDPEDAR",149,0)
 . Q:DTADD>(RCDT2_".9999")
"RTN","RCDPEDAR",150,0)
 . S IEN3443=0
"RTN","RCDPEDAR",151,0)
 . F  D  Q:'IEN3443  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDAR",152,0)
 . . S IEN3443=$O(^RCY(344.3,"ARECDT",DTADD,IEN3443))
"RTN","RCDPEDAR",153,0)
 . . Q:'IEN3443
"RTN","RCDPEDAR",154,0)
 . . S IEN34431="",RCFLG=0
"RTN","RCDPEDAR",155,0)
 . . F  D  Q:IEN34431=""
"RTN","RCDPEDAR",156,0)
 . . . S IEN34431=$O(^RCY(344.31,"B",IEN3443,IEN34431))
"RTN","RCDPEDAR",157,0)
 . . . Q:IEN34431=""
"RTN","RCDPEDAR",158,0)
 . . . ;
"RTN","RCDPEDAR",159,0)
 . . . I RCPAY'="A" D  Q:'XX
"RTN","RCDPEDAR",160,0)
 . . . . S XX=$$ISSEL^RCDPEU1(344.31,IEN34431)          ; PRCA*4.5*326 Check if payer was selected
"RTN","RCDPEDAR",161,0)
 . . . I RCTYPE'="A" D  Q:'XX                           ; If all of a given type of payer selected
"RTN","RCDPEDAR",162,0)
 . . . . S XX=$$ISTYPE^RCDPEU1(344.31,IEN34431,RCTYPE)  ;  check that payer matches type
"RTN","RCDPEDAR",163,0)
 . . . ;
"RTN","RCDPEDAR",164,0)
 . . . Q:'$$CHKDIV(IEN34431,0,.VAUTD)       ; Not a selected station/division
"RTN","RCDPEDAR",165,0)
 . . . ;
"RTN","RCDPEDAR",166,0)
 . . . ; PRCA*4.5*321 Added filter for Debit EFTs Only below
"RTN","RCDPEDAR",167,0)
 . . . I DONLY D  Q:DFLG'="D"               ; Not an EFT with a debit flag of 'D'
"RTN","RCDPEDAR",168,0)
 . . . . S DFLG=$$GET1^DIQ(344.31,IEN34431,3,"E")
"RTN","RCDPEDAR",169,0)
 . . . S RCFLG=1
"RTN","RCDPEDAR",170,0)
 . . . S ^TMP("RCDAILYACT",$J,DTADD\1,IEN3443,"EFT",IEN34431)=""
"RTN","RCDPEDAR",171,0)
 . . ;
"RTN","RCDPEDAR",172,0)
 . . S:RCFLG ^TMP("RCDAILYACT",$J,DTADD\1,IEN3443)=""
"RTN","RCDPEDAR",173,0)
 . . S RCT=RCT+1                            ; Current Record Count
"RTN","RCDPEDAR",174,0)
 . . ;
"RTN","RCDPEDAR",175,0)
 . . ; Check for user stopped every 100 records
"RTN","RCDPEDAR",176,0)
 . . I '(RCT#100),$D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","RCDPEDAR",177,0)
 . . . S ZTSTOP=1
"RTN","RCDPEDAR",178,0)
 . . . S $P(INPUT,"^",5)=1                  ; Stop now
"RTN","RCDPEDAR",179,0)
 . . . K ZTREQ
"RTN","RCDPEDAR",180,0)
 ;
"RTN","RCDPEDAR",181,0)
 I '$P(INPUT,"^",5) D
"RTN","RCDPEDAR",182,0)
 . S $P(INPUT,"^",6)=RCDT1                  ; Start of Date Range
"RTN","RCDPEDAR",183,0)
 . S $P(INPUT,"^",7)=RCDT2                  ; End of Date Range
"RTN","RCDPEDAR",184,0)
 . D RPT1(.INPUT)
"RTN","RCDPEDAR",185,0)
 D ENQ(INPUT)
"RTN","RCDPEDAR",186,0)
 Q
"RTN","RCDPEDAR",187,0)
 ;
"RTN","RCDPEDAR",188,0)
ENQ(INPUT) ; Clean up
"RTN","RCDPEDAR",189,0)
 ; Input:   INPUT       - A1^A2^A3^...^A8 Where:
"RTN","RCDPEDAR",190,0)
 ;                         A1 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDAR",191,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDAR",192,0)
 ;                         A3 - 0 if NOT called from Nightly Process, 1 otherwise
"RTN","RCDPEDAR",193,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDAR",194,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDAR",195,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDAR",196,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDAR",197,0)
 ;          ZTQUEUED    - Defined if Joh was queued
"RTN","RCDPEDAR",198,0)
 ; Output:  ZTREQ       - "@" Only returned if ZTQUEUED is defined
"RTN","RCDPEDAR",199,0)
 N XX,YY,ZZ
"RTN","RCDPEDAR",200,0)
 K ^TMP($J,"DEPERRS"),^TMP($J,"ONEDEP")  ; PRCA*4.5*321
"RTN","RCDPEDAR",201,0)
 K ^TMP("RCDAILYACT",$J),^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",202,0)
 K ^TMP($J,"TOTALS")
"RTN","RCDPEDAR",203,0)
 K ^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPEDAR",204,0)
 I '$D(ZTQUEUED) D
"RTN","RCDPEDAR",205,0)
 . D ^%ZISC
"RTN","RCDPEDAR",206,0)
 . S XX=$P(INPUT,"^",1)                     ; Nightly Process Flag
"RTN","RCDPEDAR",207,0)
 . S YY=$P(INPUT,"^",5)                     ; Stop Flag
"RTN","RCDPEDAR",208,0)
 . S ZZ=$P(INPUT,"^",4)                     ; Current Page Number
"RTN","RCDPEDAR",209,0)
 . I 'XX,'YY,ZZ D
"RTN","RCDPEDAR",210,0)
 . . S XX=""
"RTN","RCDPEDAR",211,0)
 . . D ASK^RCDPEARL(.XX)
"RTN","RCDPEDAR",212,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEDAR",213,0)
 Q
"RTN","RCDPEDAR",214,0)
 ;
"RTN","RCDPEDAR",215,0)
RPT1(INPUT) ;EP from RCDPEM1 (Nightly Process)
"RTN","RCDPEDAR",216,0)
 ; Output the report
"RTN","RCDPEDAR",217,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDAR",218,0)
 ;                         A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDAR",219,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDAR",220,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDAR",221,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDAR",222,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDAR",223,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDAR",224,0)
 ;          ^TMP(B1,$J,B2,B3)          = "" - Array of record IENs in 344.3 in date range
"RTN","RCDPEDAR",225,0)
 ;                                            and for selected payer(s) and division(s)
"RTN","RCDPEDAR",226,0)
 ;          ^TMP(B1,$J,B2,B3,"EFT",B4) = "" - Array of record IENS in 344.31 for above Where:
"RTN","RCDPEDAR",227,0)
 ;                        B1 - "RCDAILYACT"
"RTN","RCDPEDAR",228,0)
 ;                        B2 - Internal Date from DATE/TIME ADDED (344.3, .13)
"RTN","RCDPEDAR",229,0)
 ;                        B3 - Internal IEN for 344.3
"RTN","RCDPEDAR",230,0)
 ;                        B4 - Internal IEN for file 344.31
"RTN","RCDPEDAR",231,0)
 ; Output:  INPUT       - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDAR",232,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDAR",233,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDAR",234,0)
 ;
"RTN","RCDPEDAR",235,0)
 N CURPG,DETL,DTADD,DTEND,DTST,HDR1,LSTMAN,NJ
"RTN","RCDPEDAR",236,0)
 S DETL=$P(INPUT,"^",3)                     ; Detail Report flag
"RTN","RCDPEDAR",237,0)
 S LSTMAN=$P(INPUT,"^",2)                   ; Listman flag
"RTN","RCDPEDAR",238,0)
 S NJ=$P(INPUT,"^",1)                       ; Nightly Process flag
"RTN","RCDPEDAR",239,0)
 S CURPG=$P(INPUT,"^",4)                    ; Current Page Number
"RTN","RCDPEDAR",240,0)
 S DTST=$P(INPUT,"^",6)                     ; Date Range Start
"RTN","RCDPEDAR",241,0)
 S DTEND=$P(INPUT,"^",7)                    ; Date Range End
"RTN","RCDPEDAR",242,0)
 S $P(INPUT,"^",8)=0                        ; Current line counter
"RTN","RCDPEDAR",243,0)
 S DTADD=""
"RTN","RCDPEDAR",244,0)
 F  D  Q:DTADD=""  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDAR",245,0)
 . S DTADD=$O(^TMP("RCDAILYACT",$J,DTADD))
"RTN","RCDPEDAR",246,0)
 . Q:DTADD=""
"RTN","RCDPEDAR",247,0)
 . ;
"RTN","RCDPEDAR",248,0)
 . I 'LSTMAN,DETL D  Q:$P(INPUT,"^",5)=1               ; PRCA*4.5*321
"RTN","RCDPEDAR",249,0)
 . . D HDR^RCDPEDA3(.INPUT)
"RTN","RCDPEDAR",250,0)
 . ;
"RTN","RCDPEDAR",251,0)
 . I DETL D                                   ; Detail Report
"RTN","RCDPEDAR",252,0)
 . . S HDR1="DATE EFT DEPOSIT RECEIVED: "_$$FMTE^XLFDT(DTADD,"2Z")  ; PRCA*4.5*321 moved location
"RTN","RCDPEDAR",253,0)
 . . S HDR1=$J("",80-$L(HDR1)\2)_HDR1         ; Center it
"RTN","RCDPEDAR",254,0)
 . . D SL^RCDPEDA3(.INPUT,HDR1)
"RTN","RCDPEDAR",255,0)
 . . D SL^RCDPEDA3(.INPUT," ")
"RTN","RCDPEDAR",256,0)
 . S $P(INPUT,"^",9)=DTADD
"RTN","RCDPEDAR",257,0)
 . D RPT2^RCDPEDA2(.INPUT)                  ; Process all 344.3 records found
"RTN","RCDPEDAR",258,0)
 . Q:$P(INPUT,"^",5)=1                      ; User quit
"RTN","RCDPEDAR",259,0)
 . D TOTSDAY^RCDPEDA3(.INPUT)               ; Display Totals for Date
"RTN","RCDPEDAR",260,0)
 ;
"RTN","RCDPEDAR",261,0)
 Q:$P(INPUT,"^",5)=1                        ; User quit
"RTN","RCDPEDAR",262,0)
 D TOTSF^RCDPEDA3(.INPUT)                   ; Display Final Totals
"RTN","RCDPEDAR",263,0)
 D SL^RCDPEDA3(.INPUT,$$ENDORPRT^RCDPEARL)  ; Display End of Report
"RTN","RCDPEDAR",264,0)
 Q
"RTN","RCDPEDAR",265,0)
 ;
"RTN","RCDPEDAR",266,0)
CHKDIV(IEN,FLG,VAUTD) ;
"RTN","RCDPEDAR",267,0)
 ; IEN - ien in file 344.31 or 344.4
"RTN","RCDPEDAR",268,0)
 ; FLG - 0 if IEN contains ien in file 344.31, 1 if IEN contains ien in file 344.4
"RTN","RCDPEDAR",269,0)
 ; VAUTD - array of selected divisions from DIVISION^VAUTOMA API call
"RTN","RCDPEDAR",270,0)
 ; returns 1 if division associated with an entry in 344.31 is on the list in VAUTD
"RTN","RCDPEDAR",271,0)
 ; returns 0 otherwise
"RTN","RCDPEDAR",272,0)
 N ERA,I,NAME,RCSTA,RES
"RTN","RCDPEDAR",273,0)
 S RES=0
"RTN","RCDPEDAR",274,0)
 I VAUTD=1 S RES=1 G CHKDIVX
"RTN","RCDPEDAR",275,0)
 I 'IEN G CHKDIVX
"RTN","RCDPEDAR",276,0)
 S ERA=$S(FLG:IEN,1:$P($G(^RCY(344.31,IEN,0)),U,10))
"RTN","RCDPEDAR",277,0)
 S RCSTA=$$ERASTA^RCDPEM3(ERA),NAME=$P(RCSTA,U)
"RTN","RCDPEDAR",278,0)
 I NAME="UNKNOWN" G CHKDIVX
"RTN","RCDPEDAR",279,0)
 S I=0 I 'VAUTD F  S I=$O(VAUTD(I)) Q:'I!RES  I NAME=VAUTD(I) S RES=1
"RTN","RCDPEDAR",280,0)
CHKDIVX ;
"RTN","RCDPEDAR",281,0)
 Q RES
"RTN","RCDPELA1")
0^60^B120642762
"RTN","RCDPELA1",1,0)
RCDPELA1 ;EDE/FA - LIST ALL AUTO-POSTED RECEIPTS REPORT ;Nov 17, 2016
"RTN","RCDPELA1",2,0)
 ;;4.5;Accounts Receivable;**318,326**;Mar 20, 1995;Build 26
"RTN","RCDPELA1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPELA1",4,0)
 ;
"RTN","RCDPELA1",5,0)
 Q   ; no direct entry
"RTN","RCDPELA1",6,0)
 ;
"RTN","RCDPELA1",7,0)
RPTOUT(INPUT) ; Output the report to paper/screen, listman or excel
"RTN","RCDPELA1",8,0)
 ; Input:   INPUT   - See REPORT for a complete description
"RTN","RCDPELA1",9,0)
 ;          ^TMP($J,A1,"SEL",A2,A3,A4,A5)="" - if record passed filters Where:
"RTN","RCDPELA1",10,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELA1",11,0)
 ;                                 A2 - Uppercased Payer Name (primary sort)
"RTN","RCDPELA1",12,0)
 ;                                 A3 - Secondary Sort Value
"RTN","RCDPELA1",13,0)
 ;                                 A4 - Internal IEN for file 344.4
"RTN","RCDPELA1",14,0)
 ;                                 A5 - Internal IEN for file 344.41
"RTN","RCDPELA1",15,0)
 ; Output:  ^TMP("RCDPE_LAR",$J,CTR)=Line - Array of display lines (no headers)
"RTN","RCDPELA1",16,0)
 ;                                          for output to Listman
"RTN","RCDPELA1",17,0)
 ;                                          Only set when A7-1
"RTN","RCDPELA1",18,0)
 ;
"RTN","RCDPELA1",19,0)
 ;         ^TMP($J,A1,"ZERO",A3,A4)="" - List of EEOBs with zero balance  Where:
"RTN","RCDPELA1",20,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELA1",21,0)
 ;                                 A3 - IEN of #344.4 (ERA #)
"RTN","RCDPELA1",22,0)
 ;                                 A4 - IEN of #344.41 (original sequence #)
"RTN","RCDPELA1",23,0)
 ;
"RTN","RCDPELA1",24,0)
 N A1,DATA,EXCEL,FIRST,IEN3444,LNCNT,LSTMAN
"RTN","RCDPELA1",25,0)
 N ONEERA,OUTTYP,PAGE,PAYER,STOP,SVAL
"RTN","RCDPELA1",26,0)
 S (LNCNT,PAGE)=0                           ; Initialize Line/Page counters
"RTN","RCDPELA1",27,0)
 S $P(INPUT,"^",9)=0                        ; Line Counter for Listman output
"RTN","RCDPELA1",28,0)
 S EXCEL=$P(INPUT,"^",8)
"RTN","RCDPELA1",29,0)
 S LSTMAN=$P(INPUT,"^",7)
"RTN","RCDPELA1",30,0)
 S DATA=0
"RTN","RCDPELA1",31,0)
 S OUTYPE=$S(EXCEL:2,LSTMAN:1,1:0)
"RTN","RCDPELA1",32,0)
 I OUTYPE=2 D                               ; Excel Ouput
"RTN","RCDPELA1",33,0)
 . S XX="Payer^ERA^Date Received^Date Posted^Receipt^Trace #"
"RTN","RCDPELA1",34,0)
 . S XX=XX_"^Receipt Total^ERA Total^Missing Receipts^User^Amount^FMS Doc #"
"RTN","RCDPELA1",35,0)
 . W !,XX
"RTN","RCDPELA1",36,0)
 . ;
"RTN","RCDPELA1",37,0)
 S A1="RCDPE_LAR",PAYER="",STOP=0
"RTN","RCDPELA1",38,0)
 S FIRST=$O(^TMP($J,A1,"SEL",""))           ; First payer on the report
"RTN","RCDPELA1",39,0)
 F  D  Q:PAYER=""  Q:STOP
"RTN","RCDPELA1",40,0)
 . S PAYER=$O(^TMP($J,A1,"SEL",PAYER))
"RTN","RCDPELA1",41,0)
 . Q:PAYER=""
"RTN","RCDPELA1",42,0)
 . S DATA=1                                 ; found data
"RTN","RCDPELA1",43,0)
 . ;
"RTN","RCDPELA1",44,0)
 . I OUTYPE=1 D                             ; Listman Output
"RTN","RCDPELA1",45,0)
 . . S XX=$P(INPUT,"^",9)+1
"RTN","RCDPELA1",46,0)
 . . S $P(INPUT,"^",9)=XX
"RTN","RCDPELA1",47,0)
 . . S ^TMP(A1,$J,XX)=PAYER
"RTN","RCDPELA1",48,0)
 . ;
"RTN","RCDPELA1",49,0)
 . I OUTYPE=0 D  Q:STOP                     ; Paper/Screen output
"RTN","RCDPELA1",50,0)
 . . S:PAGE>1!(PAYER'=FIRST) STOP=$$ASKSTOP^RCDPELAR()
"RTN","RCDPELA1",51,0)
 . . Q:STOP
"RTN","RCDPELA1",52,0)
 . . S LNCNT=0
"RTN","RCDPELA1",53,0)
 . . D HEADER(INPUT,.LNCNT,.PAGE)
"RTN","RCDPELA1",54,0)
 . . D:'EXCEL ERAHDR(PAYER,.LNCNT,PAGE)
"RTN","RCDPELA1",55,0)
 . S SVAL=""
"RTN","RCDPELA1",56,0)
 . F  D  Q:SVAL=""  Q:STOP
"RTN","RCDPELA1",57,0)
 . . S SVAL=$O(^TMP($J,A1,"SEL",PAYER,SVAL))
"RTN","RCDPELA1",58,0)
 . . Q:SVAL=""
"RTN","RCDPELA1",59,0)
 . . S IEN3444=""
"RTN","RCDPELA1",60,0)
 . . F  D  Q:IEN3444=""  Q:STOP
"RTN","RCDPELA1",61,0)
 . . . S IEN3444=$O(^TMP($J,A1,"SEL",PAYER,SVAL,IEN3444))
"RTN","RCDPELA1",62,0)
 . . . Q:IEN3444=""
"RTN","RCDPELA1",63,0)
 . . . D ZEROBAL(IEN3444)  ; determine which IEN34441 lines are zero balance
"RTN","RCDPELA1",64,0)
 . . . K ONEERA
"RTN","RCDPELA1",65,0)
 . . . S XX=$$GET1^DIQ(344.4,IEN3444,.05,"I") ; Total Amount Paid
"RTN","RCDPELA1",66,0)
 . . . S XX=$J(XX,12,2)
"RTN","RCDPELA1",67,0)
 . . . S ONEERA="0^"_XX_"^0^0"                ; Initial ERA values
"RTN","RCDPELA1",68,0)
 . . . S IEN34441=""
"RTN","RCDPELA1",69,0)
 . . . F  D  Q:IEN34441=""  Q:STOP
"RTN","RCDPELA1",70,0)
 . . . . S IEN34441=$O(^TMP($J,A1,"SEL",PAYER,SVAL,IEN3444,IEN34441))
"RTN","RCDPELA1",71,0)
 . . . . Q:IEN34441=""
"RTN","RCDPELA1",72,0)
 . . . . ;
"RTN","RCDPELA1",73,0)
 . . . . Q:$D(^TMP($J,A1,"ZERO",IEN3444,IEN34441))  ; eliminates reversals
"RTN","RCDPELA1",74,0)
 . . . . ;
"RTN","RCDPELA1",75,0)
 . . . . ; Get all the detail lines needed to output one ERA record
"RTN","RCDPELA1",76,0)
 . . . . D ONEDLN(OUTYPE,IEN3444,IEN34441,.ONEERA)
"RTN","RCDPELA1",77,0)
 . . . D ADDERAH(OUTYPE,.ONEERA,IEN3444)      ; Add the ERA Header lines
"RTN","RCDPELA1",78,0)
 . . . ;
"RTN","RCDPELA1",79,0)
 . . . ; Output all the lines for one ERA
"RTN","RCDPELA1",80,0)
 . . . S STOP=$$OUTERA(.INPUT,OUTYPE,PAYER,.ONEERA,.LNCNT,.PAGE)
"RTN","RCDPELA1",81,0)
 I 'DATA,'EXCEL,'LSTMAN D
"RTN","RCDPELA1",82,0)
 . D HEADER(INPUT,.LNCNT,.PAGE)
"RTN","RCDPELA1",83,0)
 . D ERAHDR(PAYER,.LNCNT,PAGE)
"RTN","RCDPELA1",84,0)
 I 'EXCEL D
"RTN","RCDPELA1",85,0)
 . S XX=$$ENDORPRT^RCDPEARL
"RTN","RCDPELA1",86,0)
 . I OUTYPE=1 D  Q
"RTN","RCDPELA1",87,0)
 . . S YY=$P(INPUT,"^",9)+1
"RTN","RCDPELA1",88,0)
 . . S $P(INPUT,"^",9)=YY
"RTN","RCDPELA1",89,0)
 . . S ^TMP(A1,$J,YY)=XX
"RTN","RCDPELA1",90,0)
 . W !,XX
"RTN","RCDPELA1",91,0)
 . I 'STOP S STOP=$$ASKSTOP^RCDPELAR()
"RTN","RCDPELA1",92,0)
 . Q:STOP
"RTN","RCDPELA1",93,0)
 Q
"RTN","RCDPELA1",94,0)
 ;
"RTN","RCDPELA1",95,0)
ZEROBAL(IEN3444)    ; Is it a zero value EEOB
"RTN","RCDPELA1",96,0)
 ; Those EEOB with reversals will have a zero value.  This builds
"RTN","RCDPELA1",97,0)
 ; an array of them.
"RTN","RCDPELA1",98,0)
 ; Input:   IEN3444     - Internal IEN for file 344.4
"RTN","RCDPELA1",99,0)
 ; Output:
"RTN","RCDPELA1",100,0)
 ;         ^TMP($J,A1,"ZERO",A3,A4)="" - List of EEOBs with zero balance  Where:
"RTN","RCDPELA1",101,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELA1",102,0)
 ;                                 A3 - IEN of #344.4 (ERA #)
"RTN","RCDPELA1",103,0)
 ;                                 A4 - IEN of #344.41 (original sequence #)
"RTN","RCDPELA1",104,0)
 ;
"RTN","RCDPELA1",105,0)
 N A1,A2,AMTPOST,IENS,ORIGSEQ,RCSEQ,RCDA1,XX
"RTN","RCDPELA1",106,0)
 K ^TMP($J,"RCDPE_LAR","ZERO",IEN3444)
"RTN","RCDPELA1",107,0)
 ;
"RTN","RCDPELA1",108,0)
 S A1="RCDPE_LAR",A2="ZERO"
"RTN","RCDPELA1",109,0)
 S RCSEQ=0
"RTN","RCDPELA1",110,0)
 F  S RCSEQ=$O(^RCY(344.49,IEN3444,1,"B",RCSEQ)) Q:'RCSEQ  D
"RTN","RCDPELA1",111,0)
 . Q:RCSEQ#1'=0 
"RTN","RCDPELA1",112,0)
 . S RCDA1=+$O(^RCY(344.49,IEN3444,1,"B",RCSEQ,0))
"RTN","RCDPELA1",113,0)
 . Q:'RCDA1
"RTN","RCDPELA1",114,0)
 . S IENS=RCDA1_","_IEN3444_","
"RTN","RCDPELA1",115,0)
 . S AMTPOST=$$GET1^DIQ(344.491,IENS,.03,"I")  ; Amount to post on receipt
"RTN","RCDPELA1",116,0)
 . I AMTPOST>0 Q                               ; Not zero value line
"RTN","RCDPELA1",117,0)
 . S ORIGSEQ=$$GET1^DIQ(344.491,IENS,.09,"I")  ; list of original seq #s with zero balance
"RTN","RCDPELA1",118,0)
 . S XX=0
"RTN","RCDPELA1",119,0)
 . F XX=1:1 Q:$P(ORIGSEQ,",",XX)=""  S ^TMP($J,A1,A2,IEN3444,($P(ORIGSEQ,",",XX)))=""
"RTN","RCDPELA1",120,0)
 Q
"RTN","RCDPELA1",121,0)
 ;
"RTN","RCDPELA1",122,0)
ONEDLN(OUTYPE,IEN3444,IEN34441,ONEERA) ; Gather all of the ERA Detail lines to display
"RTN","RCDPELA1",123,0)
 ; one ERA record
"RTN","RCDPELA1",124,0)
 ; Input:   OUTYPE      - O - Output to Screen or paper
"RTN","RCDPELA1",125,0)
 ;                        1 - Output to Listman
"RTN","RCDPELA1",126,0)
 ;                        2 - Output to Excel
"RTN","RCDPELA1",127,0)
 ;          IEN3444     - Internal IEN for file 344.4
"RTN","RCDPELA1",128,0)
 ;          IEN34441    - Internal IEN for sub file 344.41 of the ERA detail
"RTN","RCDPELA1",129,0)
 ;                        line being processed
"RTN","RCDPELA1",130,0)
 ;          ONEERA      - A1^A2^A3^A4 Where:
"RTN","RCDPELA1",131,0)
 ;                         A1 - Current Number of lines in the ERA display
"RTN","RCDPELA1",132,0)
 ;                         A2 - ERA Total for the ERA (formatted)
"RTN","RCDPELA1",133,0)
 ;                         A3 - Current Receipt Total for the ERA (formatted)
"RTN","RCDPELA1",134,0)
 ;                         A4 - 1 if ERA contains at least one detail record 
"RTN","RCDPELA1",135,0)
 ;                                with a missing receipt.
"RTN","RCDPELA1",136,0)
 ;                              0 otherwise
"RTN","RCDPELA1",137,0)
 ;          ONEERA(LN)=A4- Where
"RTN","RCDPELA1",138,0)
 ;                         LN - Line number for ERA Display
"RTN","RCDPELA1",139,0)
 ;                         A4 - Actual display line
"RTN","RCDPELA1",140,0)
 ; Ouput:   ONEERA     - A1^A2^A3^A4 Where:
"RTN","RCDPELA1",141,0)
 ;                         A1 - Updated Number of lines in the ERA display
"RTN","RCDPELA1",142,0)
 ;                         A2 - ERA Total for the ERA (formatted)
"RTN","RCDPELA1",143,0)
 ;                         A3 - Updated Receipt Total for the ERA (formatted)
"RTN","RCDPELA1",144,0)
 ;                         A4 - 1 if ERA contains at least one detail record 
"RTN","RCDPELA1",145,0)
 ;                                with a missing receipt.
"RTN","RCDPELA1",146,0)
 ;                              0 otherwise
"RTN","RCDPELA1",147,0)
 ;          ONEERA(LN)=A4- Where
"RTN","RCDPELA1",148,0)
 ;                         LN - Line number for ERA Display
"RTN","RCDPELA1",149,0)
 ;                         A4 - Actual display line
"RTN","RCDPELA1",150,0)
 N AMT,DTPOST,DTREC,LCNT,IENS,LN,PAYER,RECEIPT,TRDOC,USER,XX,YY
"RTN","RCDPELA1",151,0)
 S IENS=IEN34441_","_IEN3444_","
"RTN","RCDPELA1",152,0)
 S LCNT=$P(ONEERA,"^",1)+1
"RTN","RCDPELA1",153,0)
 S $P(ONEERA,"^",1)=LCNT                    ; ERA Line counter
"RTN","RCDPELA1",154,0)
 ;
"RTN","RCDPELA1",155,0)
 ; Build detail line for ERA Detail record being process
"RTN","RCDPELA1",156,0)
 S XX=$$GET1^DIQ(344.4,IEN3444,.07,"I")     ; ERA Date Received
"RTN","RCDPELA1",157,0)
 S DTREC=$$FMTE^XLFDT(XX,"2DZ")
"RTN","RCDPELA1",158,0)
 S XX=$$GET1^DIQ(344.41,IENS,9,"I")         ; Auto-Post Date
"RTN","RCDPELA1",159,0)
 S DTPOST=$$FMTE^XLFDT(XX,"2DZ")
"RTN","RCDPELA1",160,0)
 S XX=$$GET1^DIQ(344.41,IENS,.25,"I")       ; Receipt Pointer
"RTN","RCDPELA1",161,0)
 S RECEIPT=$$GET1^DIQ(344,XX,.01,"I")       ; Receipt Number
"RTN","RCDPELA1",162,0)
 S TRDOC=$$GET1^DIQ(344,XX,200,"I")         ; FMS Document #
"RTN","RCDPELA1",163,0)
 I RECEIPT="" D
"RTN","RCDPELA1",164,0)
 . S $P(ONEERA,"^",4)=1
"RTN","RCDPELA1",165,0)
 . S RECEIPT="* Missing *"
"RTN","RCDPELA1",166,0)
 S XX=$O(^RCY(344.72,"E",IEN3444,""))       ; IEN of the Auto-Post Audit File entry
"RTN","RCDPELA1",167,0)
 S USER=$$GET1^DIQ(344.72,XX,.02,"I")       ; User IEN who marked for Auto-Post
"RTN","RCDPELA1",168,0)
 S USER=$$GET1^DIQ(200,USER,1,"I")          ; Initials of User who marked for Auto-Post
"RTN","RCDPELA1",169,0)
 S AMT=$$GET1^DIQ(344.41,IENS,.03,"I")      ; Amount Paid
"RTN","RCDPELA1",170,0)
 I RECEIPT'="* Missing *" D
"RTN","RCDPELA1",171,0)
 . S YY=$P(ONEERA,"^",3)                    ; Current Receipt Total
"RTN","RCDPELA1",172,0)
 . S $P(ONEERA,"^",3)=AMT+YY                ; Updated Receipt Total
"RTN","RCDPELA1",173,0)
 S AMT=$J(AMT,12,2)                         ; Formatted Paid
"RTN","RCDPELA1",174,0)
 I OUTYPE=2 D  Q                            ; Output to Excel
"RTN","RCDPELA1",175,0)
 . S LN=$$GET1^DIQ(344.4,IEN3444,.06,"I")   ; Payment From
"RTN","RCDPELA1",176,0)
 . S LN=LN_"^"_IEN3444_"^"_DTREC_"^"_DTPOST_"^"_RECEIPT
"RTN","RCDPELA1",177,0)
 . S $P(LN,"^",10)=USER
"RTN","RCDPELA1",178,0)
 . S $P(LN,"^",11)=AMT
"RTN","RCDPELA1",179,0)
 . S $P(LN,"^",12)=TRDOC
"RTN","RCDPELA1",180,0)
 . S ONEERA(LCNT)=LN
"RTN","RCDPELA1",181,0)
 ;
"RTN","RCDPELA1",182,0)
 S LN="       "
"RTN","RCDPELA1",183,0)
 S LN=$$SETSTR^VALM1(DTREC,LN,9,10)
"RTN","RCDPELA1",184,0)
 S LN=$$SETSTR^VALM1(DTPOST,LN,19,10)
"RTN","RCDPELA1",185,0)
 S LN=$$SETSTR^VALM1(RECEIPT,LN,30,$L(RECEIPT))
"RTN","RCDPELA1",186,0)
 S LN=$$SETSTR^VALM1(USER,LN,43,$L(USER))
"RTN","RCDPELA1",187,0)
 S LN=$$SETSTR^VALM1(AMT,LN,50,$L(AMT))
"RTN","RCDPELA1",188,0)
 S LN=$$SETSTR^VALM1(TRDOC,LN,65,$L(TRDOC))
"RTN","RCDPELA1",189,0)
 S ONEERA(LCNT)=LN
"RTN","RCDPELA1",190,0)
 Q
"RTN","RCDPELA1",191,0)
 ;
"RTN","RCDPELA1",192,0)
ADDERAH(OUTYPE,ONEERA,IEN3444) ; Add the header lines to ERA output array
"RTN","RCDPELA1",193,0)
 ; Input:   OUTYPE      - O - Output to Screen or paper
"RTN","RCDPELA1",194,0)
 ;                        1 - Output to Listman
"RTN","RCDPELA1",195,0)
 ;                        2 - Output to Excel
"RTN","RCDPELA1",196,0)
 ;          ONEERA      - A1^A2^A3^A4 Where:
"RTN","RCDPELA1",197,0)
 ;                        A1 - Number of lines in the ERA display
"RTN","RCDPELA1",198,0)
 ;                        A2 - Total Receipt amount for the ERA (formatted)
"RTN","RCDPELA1",199,0)
 ;                        A3 - Total Amount paid for the ERA (formatted)
"RTN","RCDPELA1",200,0)
 ;                        A4 - 1 if ERA contains at least one detail record 
"RTN","RCDPELA1",201,0)
 ;                               with a missing receipt.
"RTN","RCDPELA1",202,0)
 ;                             0 otherwise
"RTN","RCDPELA1",203,0)
 ;          ONEERA(LN)=A4- Where
"RTN","RCDPELA1",204,0)
 ;                        LN - Line number for ERA Display
"RTN","RCDPELA1",205,0)
 ;                        A4 - Actual display line
"RTN","RCDPELA1",206,0)
 ;          IEN3444     - Internal IEN for file 344.4
"RTN","RCDPELA1",207,0)
 ; Ouput:   ONEERA      - Receipt Total Formatted, ERA Lines 1-4 added
"RTN","RCDPELA1",208,0)
 N LN,MISSINGR,TOTERA,TOTREC,TRACE,XX
"RTN","RCDPELA1",209,0)
 S XX=$P(ONEERA,"^",3)                      ; Final Receipt Total
"RTN","RCDPELA1",210,0)
 S TOTREC=$J(XX,12,2)                       ; Formatted total
"RTN","RCDPELA1",211,0)
 S TOTERA=$P(ONEERA,"^",2)                  ; Formatted ERA Total
"RTN","RCDPELA1",212,0)
 S XX=$$COMPLETE^RCDPELAR(IEN3444)
"RTN","RCDPELA1",213,0)
 S MISSINGR=$S(XX=0:"* Missing Receipts *",1:"")
"RTN","RCDPELA1",214,0)
 S TRACE=$$GET1^DIQ(344.4,IEN3444,.02,"I")  ; Trace Number
"RTN","RCDPELA1",215,0)
 I OUTYPE=2 D  Q                            ; Excel output
"RTN","RCDPELA1",216,0)
 . S XX=""
"RTN","RCDPELA1",217,0)
 . F  D  Q:XX=""
"RTN","RCDPELA1",218,0)
 . . S XX=$O(ONEERA(XX))
"RTN","RCDPELA1",219,0)
 . . Q:XX=""
"RTN","RCDPELA1",220,0)
 . . S $P(ONEERA(XX),"^",6)=TRACE            ; Formatted Receipt Total
"RTN","RCDPELA1",221,0)
 . . S $P(ONEERA(XX),"^",7)=TOTREC           ; Formatted Receipt Total
"RTN","RCDPELA1",222,0)
 . . S $P(ONEERA(XX),"^",8)=$P(ONEERA,"^",2) ; Formatted ERA Total
"RTN","RCDPELA1",223,0)
 . . S $P(ONEERA(XX),"^",9)=MISSINGR
"RTN","RCDPELA1",224,0)
 ;
"RTN","RCDPELA1",225,0)
 ; 1st Main ERA display line
"RTN","RCDPELA1",226,0)
 S LN="ERA: "
"RTN","RCDPELA1",227,0)
 S LN=$$SETSTR^VALM1(IEN3444,LN,6,$L(IEN3444))
"RTN","RCDPELA1",228,0)
 S LN=$$SETSTR^VALM1("ERA Total: ",LN,20,11)
"RTN","RCDPELA1",229,0)
 S LN=$$SETSTR^VALM1(TOTERA,LN,32,$L(TOTERA))
"RTN","RCDPELA1",230,0)
 S LN=$$SETSTR^VALM1(MISSINGR,LN,53,$L(MISSINGR))
"RTN","RCDPELA1",231,0)
 S XX=$P(ONEERA,"^",1)+1
"RTN","RCDPELA1",232,0)
 S $P(ONEERA,"^",1)=XX                       ; Update Line counter
"RTN","RCDPELA1",233,0)
 S ONEERA(.1)=LN
"RTN","RCDPELA1",234,0)
 ;
"RTN","RCDPELA1",235,0)
 ; 2nd Main ERA display line
"RTN","RCDPELA1",236,0)
 S LN="                Receipt Total:"
"RTN","RCDPELA1",237,0)
 S LN=$$SETSTR^VALM1(TOTREC,LN,32,$L(TOTREC))
"RTN","RCDPELA1",238,0)
 S XX=$P(ONEERA,"^",1)+1
"RTN","RCDPELA1",239,0)
 S $P(ONEERA,"^",1)=XX                       ; Update Line counter
"RTN","RCDPELA1",240,0)
 S ONEERA(.2)=LN
"RTN","RCDPELA1",241,0)
 ;
"RTN","RCDPELA1",242,0)
 ; 3rd Main ERA display line
"RTN","RCDPELA1",243,0)
 S LN="                      Trace #:"
"RTN","RCDPELA1",244,0)
 S XX=$$GET1^DIQ(344.4,IEN3444,.02,"I")     ; Trace Number
"RTN","RCDPELA1",245,0)
 S LN=$$SETSTR^VALM1(XX,LN,32,$L(XX))
"RTN","RCDPELA1",246,0)
 S XX=$P(ONEERA,"^",1)+1
"RTN","RCDPELA1",247,0)
 S $P(ONEERA,"^",1)=XX                      ; Update Line counter
"RTN","RCDPELA1",248,0)
 S ONEERA(.3)=LN
"RTN","RCDPELA1",249,0)
 Q
"RTN","RCDPELA1",250,0)
 ;
"RTN","RCDPELA1",251,0)
OUTERA(INPUT,OUTYPE,PAYER,ONEERA,LNCNT,PAGE) ; Output the display lines for one ERA
"RTN","RCDPELA1",252,0)
 ; Input:   INPUT   - See REPORT for a complete description
"RTN","RCDPELA1",253,0)
 ;          OUTYPE      - O - Output to Screen or paper
"RTN","RCDPELA1",254,0)
 ;                        1 - Output to Listman
"RTN","RCDPELA1",255,0)
 ;                        2 - Output to Excel
"RTN","RCDPELA1",256,0)
 ;          PAYER       - Payer Name
"RTN","RCDPELA1",257,0)
 ;          ONEERA      - Array of lines to display for one ERA
"RTN","RCDPELA1",258,0)
 ;          LNCNT       - Current Line Count
"RTN","RCDPELA1",259,0)
 ;          PAGE        - Current Page Count
"RTN","RCDPELA1",260,0)
 ; Output:  LNCNT       - Updated Line Count
"RTN","RCDPELA1",261,0)
 ;          PAGE        - Updated Page Count
"RTN","RCDPELA1",262,0)
 ;          A9          - Part of Input above
"RTN","RCDPELA1",263,0)
 ;                        Updated Line counter for Listman Output
"RTN","RCDPELA1",264,0)
 ;          ^TMP("RCDPE_LAR",$J,CTR)=Line - Array of display lines (no headers)
"RTN","RCDPELA1",265,0)
 ;                                          for output to Listman
"RTN","RCDPELA1",266,0)
 ;                                          Only set when A7-1
"RTN","RCDPELA1",267,0)
 ; Returns: 1 if user quit, 0 otherwise
"RTN","RCDPELA1",268,0)
 N LN,STOP,XX
"RTN","RCDPELA1",269,0)
 S STOP=0
"RTN","RCDPELA1",270,0)
 S XX=LNCNT-4+$P(ONEERA,"^",1)                ; LNCNT + # of lines to display
"RTN","RCDPELA1",271,0)
 I 'OUTYPE,(XX>(IOSL-3)) D  Q:STOP 1
"RTN","RCDPELA1",272,0)
 . S STOP=$$ASKSTOP^RCDPELAR()
"RTN","RCDPELA1",273,0)
 . Q:STOP
"RTN","RCDPELA1",274,0)
 . S LNCNT=0
"RTN","RCDPELA1",275,0)
 . D HEADER(INPUT,.LNCNT,.PAGE)
"RTN","RCDPELA1",276,0)
 . D ERAHDR(PAYER,.LNCNT,.PAGE)
"RTN","RCDPELA1",277,0)
 S LN=""
"RTN","RCDPELA1",278,0)
 F  D  Q:LN=""  Q:STOP
"RTN","RCDPELA1",279,0)
 . S LN=$O(ONEERA(LN))
"RTN","RCDPELA1",280,0)
 . Q:LN=""
"RTN","RCDPELA1",281,0)
 . S LNCNT=LNCNT+1
"RTN","RCDPELA1",282,0)
 . I OUTYPE=1 D  Q
"RTN","RCDPELA1",283,0)
 . . S XX=$P(INPUT,"^",9)+1
"RTN","RCDPELA1",284,0)
 . . S $P(INPUT,"^",9)=XX
"RTN","RCDPELA1",285,0)
 . . S ^TMP("RCDPE_LAR",$J,XX)=ONEERA(LN)
"RTN","RCDPELA1",286,0)
 . W !,ONEERA(LN)
"RTN","RCDPELA1",287,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",288,0)
 W:OUTYPE=0 !
"RTN","RCDPELA1",289,0)
 I OUTYPE=1 D
"RTN","RCDPELA1",290,0)
 . S XX=$P(INPUT,"^",9)+1
"RTN","RCDPELA1",291,0)
 . S $P(INPUT,"^",9)=XX
"RTN","RCDPELA1",292,0)
 . S ^TMP("RCDPE_LAR",$J,XX)=" "
"RTN","RCDPELA1",293,0)
 Q STOP
"RTN","RCDPELA1",294,0)
 ;
"RTN","RCDPELA1",295,0)
HEADER(INPUT,LNCNT,PAGE) ; Display a Page Header
"RTN","RCDPELA1",296,0)
 ; Input:   INPUT   - See REPORT for a complete description
"RTN","RCDPELA1",297,0)
 ;          LNCNT   - Current Line Count
"RTN","RCDPELA1",298,0)
 ;          PAGE    - Current Page Count
"RTN","RCDPELA1",299,0)
 ; Output:  LNCNT   - Updated Line Count
"RTN","RCDPELA1",300,0)
 ;          PAGE    - Updated Page Count
"RTN","RCDPELA1",301,0)
 N XX,YY,ZZ
"RTN","RCDPELA1",302,0)
 S YY="AUTO-POSTED RECEIPT REPORT",PAGE=PAGE+1
"RTN","RCDPELA1",303,0)
 S XX=$$NOW^XLFDT(),XX=$$FMTE^XLFDT(XX)
"RTN","RCDPELA1",304,0)
 S XX=$$SETSTR^VALM1(XX,YY,40,21)
"RTN","RCDPELA1",305,0)
 S YY="Page: "_$J(PAGE,3)
"RTN","RCDPELA1",306,0)
 S XX=$$SETSTR^VALM1(YY,XX,72,$L(YY))
"RTN","RCDPELA1",307,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",308,0)
 W @IOF,XX
"RTN","RCDPELA1",309,0)
 ;
"RTN","RCDPELA1",310,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",311,0)
 S XX=$$HDRLN2(INPUT)
"RTN","RCDPELA1",312,0)
 W !,XX
"RTN","RCDPELA1",313,0)
 ;
"RTN","RCDPELA1",314,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",315,0)
 S XX=$$HDRLN3(INPUT)
"RTN","RCDPELA1",316,0)
 W !,XX
"RTN","RCDPELA1",317,0)
 ;
"RTN","RCDPELA1",318,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",319,0)
 W !                                        ; Blank line
"RTN","RCDPELA1",320,0)
 Q
"RTN","RCDPELA1",321,0)
 ;
"RTN","RCDPELA1",322,0)
HDRLN2(INPUT) ; Build the 2nd header line
"RTN","RCDPELA1",323,0)
 ; Input:   INPUT   - See REPORT for a complete description
"RTN","RCDPELA1",324,0)
 ; Returns: Text for 2nd header line
"RTN","RCDPELA1",325,0)
 N XX,YY,ZZ
"RTN","RCDPELA1",326,0)
 S XX="FILTERS: "_$S($P(INPUT,"^",1)=1:"All",1:"Sel")_" Divs;"
"RTN","RCDPELA1",327,0)
 S XX=XX_$S($P(INPUT,"^",5)=1:" All",1:" Sel")_" Payers;"
"RTN","RCDPELA1",328,0)
 S YY=$P(INPUT,"^",10)
"RTN","RCDPELA1",329,0)
 S XX=XX_" "_$S(YY="M":"Medical",YY="P":"Pharmacy",YY="T":"Tricare",1:"All")_";"
"RTN","RCDPELA1",330,0)
 S XX=XX_$S($P(INPUT,"^",2)=1:" Auto-Post Date",1:" ERA Dt Received")
"RTN","RCDPELA1",331,0)
 S YY=$P($P(INPUT,"^",3),"|",1),YY=$$FMTE^XLFDT(YY,"2Z")
"RTN","RCDPELA1",332,0)
 S ZZ=$P($P(INPUT,"^",3),"|",2),ZZ=$$FMTE^XLFDT(ZZ,"2Z")
"RTN","RCDPELA1",333,0)
 S XX=XX_" "_YY_"-"_ZZ
"RTN","RCDPELA1",334,0)
 Q XX
"RTN","RCDPELA1",335,0)
 ;
"RTN","RCDPELA1",336,0)
HDRLN3(INPUT) ; Build the 2nd header line
"RTN","RCDPELA1",337,0)
 ; Input:   INPUT   - A1^A2^A3^...^An Where:
"RTN","RCDPELA1",338,0)
 ;                       A1 - 1 - All divisions selected
"RTN","RCDPELA1",339,0)
 ;                            2 - Selected divisions
"RTN","RCDPELA1",340,0)
 ;                       A2 - 1 - Filter by Auto-Post date range
"RTN","RCDPELA1",341,0)
 ;                            2 - Filter by ERA Date Received date range
"RTN","RCDPELA1",342,0)
 ;                       A3 - B1|B2   - Where:
"RTN","RCDPELA1",343,0)
 ;                             B1 - ERA Date Received Start Date if A2=2
"RTN","RCDPELA1",344,0)
 ;                                  Auto-Post Start Date of A2=1
"RTN","RCDPELA1",345,0)
 ;                             B2 - ERA Date Received End Date if A2=2
"RTN","RCDPELA1",346,0)
 ;                                  Auto-Post End Date of A2=1
"RTN","RCDPELA1",347,0)
 ;                       A4 - 1 - Posted/Completed Receipts
"RTN","RCDPELA1",348,0)
 ;                            2 - Only ERAs with Missing Receipts
"RTN","RCDPELA1",349,0)
 ;                            3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELA1",350,0)
 ;                       A5 - 1 - All insurance companies selected
"RTN","RCDPELA1",351,0)
 ;                            2 - Selected insurance companies chosen
"RTN","RCDPELA1",352,0)
 ;                       A6 - 1 - Auto-Post Date/ERA Date Received Sort
"RTN","RCDPELA1",353,0)
 ;                            2 - Payer sort
"RTN","RCDPELA1",354,0)
 ;                            3 - Missing Receipts
"RTN","RCDPELA1",355,0)
 ;                       A7 - 0 - Do not display in a listman template
"RTN","RCDPELA1",356,0)
 ;                            1 - Display in a listman template
"RTN","RCDPELA1",357,0)
 ;                       A8 - 0 - Output to paper
"RTN","RCDPELA1",358,0)
 ;                            1 - Output to Excel
"RTN","RCDPELA1",359,0)
 ;                       A9 - Line counter for Listman output
"RTN","RCDPELA1",360,0)
 ;                       A10 - M/P/T/A - Medical/Pharmacy/tricare/All  
"RTN","RCDPELA1",361,0)
 ; Returns: Text for 2nd header line
"RTN","RCDPELA1",362,0)
 N XX,YY,ZZ
"RTN","RCDPELA1",363,0)
 S YY=$P(INPUT,"^",4)
"RTN","RCDPELA1",364,0)
 S:YY=1 ZZ="Posted/Completed Receipts"      ; Receipt filter
"RTN","RCDPELA1",365,0)
 S:YY=2 ZZ="Missing Receipts Only"
"RTN","RCDPELA1",366,0)
 S:YY=3 ZZ="All Receipts"
"RTN","RCDPELA1",367,0)
 S XX=" ERA: "_ZZ
"RTN","RCDPELA1",368,0)
 S XX=$$SETSTR^VALM1("SORT: ",XX,40,6)
"RTN","RCDPELA1",369,0)
 S YY=$P(INPUT,"^",6)                       ; Selected Sort
"RTN","RCDPELA1",370,0)
 I YY=1,$P(INPUT,"^",2)=1 S ZZ="Auto-Post Date"
"RTN","RCDPELA1",371,0)
 I YY=1,$P(INPUT,"^",2)=2 S ZZ="ERA Date Received"
"RTN","RCDPELA1",372,0)
 I YY=2 S ZZ="Payer"
"RTN","RCDPELA1",373,0)
 I YY=3 S ZZ="Missing Receipts"
"RTN","RCDPELA1",374,0)
 S XX=$$SETSTR^VALM1(ZZ,XX,46,$L(ZZ))
"RTN","RCDPELA1",375,0)
 Q XX
"RTN","RCDPELA1",376,0)
 ;
"RTN","RCDPELA1",377,0)
ERAHDR(PAYER,LNCNT,PAGE) ; Display ERA Header Lines
"RTN","RCDPELA1",378,0)
 ; Input:   PAYER   - Payer Name
"RTN","RCDPELA1",379,0)
 ;          LNCNT   - Current Line Count
"RTN","RCDPELA1",380,0)
 ;          PAGE    - Current Page Count
"RTN","RCDPELA1",381,0)
 ; Output:  LNCNT   - Updated Line Count
"RTN","RCDPELA1",382,0)
 ;          PAGE    - Updated Page Count
"RTN","RCDPELA1",383,0)
 N XX,YY,ZZ
"RTN","RCDPELA1",384,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",385,0)
 S XX="        DATE      DATE"
"RTN","RCDPELA1",386,0)
 W !,XX
"RTN","RCDPELA1",387,0)
 ;
"RTN","RCDPELA1",388,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",389,0)
 S XX=$$ERAHDR2()
"RTN","RCDPELA1",390,0)
 W !,XX
"RTN","RCDPELA1",391,0)
 ;
"RTN","RCDPELA1",392,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",393,0)
 S XX=$J("",80),XX=$TR(XX," ","-")
"RTN","RCDPELA1",394,0)
 W !,XX
"RTN","RCDPELA1",395,0)
 ;
"RTN","RCDPELA1",396,0)
 S LNCNT=LNCNT+1
"RTN","RCDPELA1",397,0)
 W !,"Payer: ",PAYER
"RTN","RCDPELA1",398,0)
 Q
"RTN","RCDPELA1",399,0)
 ;
"RTN","RCDPELA1",400,0)
ERAHDR2() ; Build the 2nd ERA header line
"RTN","RCDPELA1",401,0)
 ; Input:   None
"RTN","RCDPELA1",402,0)
 ; Returns: Text for 2nd ERA header line
"RTN","RCDPELA1",403,0)
 N XX
"RTN","RCDPELA1",404,0)
 S XX="        " ;RECEIVED  POSTED     RECEIPT"
"RTN","RCDPELA1",405,0)
 S XX=$$SETSTR^VALM1("RECEIVED",XX,9,8)
"RTN","RCDPELA1",406,0)
 S XX=$$SETSTR^VALM1("POSTED",XX,19,6)
"RTN","RCDPELA1",407,0)
 S XX=$$SETSTR^VALM1("RECEIPT",XX,30,7)
"RTN","RCDPELA1",408,0)
 S XX=$$SETSTR^VALM1("USER",XX,43,4)
"RTN","RCDPELA1",409,0)
 S XX=$$SETSTR^VALM1("      AMOUNT",XX,50,12)
"RTN","RCDPELA1",410,0)
 S XX=$$SETSTR^VALM1("FMS DOC",XX,65,7)
"RTN","RCDPELA1",411,0)
 Q XX
"RTN","RCDPELA1",412,0)
 ;
"RTN","RCDPELAR")
0^59^B155712886
"RTN","RCDPELAR",1,0)
RCDPELAR ;EDE/FA - LIST ALL AUTO-POSTED RECEIPTS REPORT ;Nov 17, 2016
"RTN","RCDPELAR",2,0)
 ;;4.5;Accounts Receivable;**318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPELAR",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPELAR",4,0)
 ;
"RTN","RCDPELAR",5,0)
EN ; Main entry point
"RTN","RCDPELAR",6,0)
 N INPUT,RCPAR,RCVAUTD,XX,YY
"RTN","RCDPELAR",7,0)
 K ^TMP($J,"RCDPE_LAR"),^TMP("RCDPE_LAR",$J)
"RTN","RCDPELAR",8,0)
 K ^TMP("RCSELPAY",$J),^TMP($J,"SELPAYER")
"RTN","RCDPELAR",9,0)
 ;
"RTN","RCDPELAR",10,0)
 S INPUT=$$STADIV(.RCVAUTD)                     ; Division filter
"RTN","RCDPELAR",11,0)
 Q:'INPUT                                       ; '^' or timeout
"RTN","RCDPELAR",12,0)
 S $P(INPUT,"^",2)=$$APORERA()                  ; Filter by Auto-Post Date or ERA Date Received
"RTN","RCDPELAR",13,0)
 Q:'$P(INPUT,"^",2)                             ; '^' or timeout
"RTN","RCDPELAR",14,0)
 S $P(INPUT,"^",3)=$$DTRNG(0)                   ; Start Date|End date
"RTN","RCDPELAR",15,0)
 Q:'$P(INPUT,"^",3)                             ; '^' or timeout
"RTN","RCDPELAR",16,0)
 S $P(INPUT,"^",4)=$$SELERA()                   ; Select type of ERAS to be displayed
"RTN","RCDPELAR",17,0)
 Q:'$P(INPUT,"^",4)
"RTN","RCDPELAR",18,0)
 ;
"RTN","RCDPELAR",19,0)
 ; PRCA*4.5*326 - Ask to show Medical/Pharmacy Tricare or All
"RTN","RCDPELAR",20,0)
 S $P(INPUT,"^",10)=$$RTYPE^RCDPEU1("")
"RTN","RCDPELAR",21,0)
 I $P(INPUT,"^",10)<0 Q
"RTN","RCDPELAR",22,0)
 ;
"RTN","RCDPELAR",23,0)
 S RCPAR("SELC")=$$PAYRNG^RCDPEU1()             ; PRCA*4.5*326 - Selected or Range of Payers
"RTN","RCDPELAR",24,0)
 Q:RCPAR("SELC")=-1                             ; PRCA*4.5*326 '^' or timeout
"RTN","RCDPELAR",25,0)
 S $P(INPUT,"^",5)=RCPAR("SELC")
"RTN","RCDPELAR",26,0)
 ;
"RTN","RCDPELAR",27,0)
 I RCPAR("SELC")'="A" D  Q:XX=-1                ; PRCA*4.5*326 - Since we don't want all payers 
"RTN","RCDPELAR",28,0)
 . S RCPAR("TYPE")=$P(INPUT,"^",10)             ;         prompt for payers we do want
"RTN","RCDPELAR",29,0)
 . S RCPAR("FILE")=344.4
"RTN","RCDPELAR",30,0)
 . S RCPAR("DICA")="Select Insurance Company NAME: "
"RTN","RCDPELAR",31,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPELAR",32,0)
 ;
"RTN","RCDPELAR",33,0)
 S XX=$P(INPUT,"^",2),YY=$P(INPUT,"^",4)
"RTN","RCDPELAR",34,0)
 S $P(INPUT,"^",6)=$$RPTSORT(XX,YY)             ; Select Secondary sort
"RTN","RCDPELAR",35,0)
 Q:'$P(INPUT,"^",6)                             ; '^' or timeout
"RTN","RCDPELAR",36,0)
 S $P(INPUT,"^",7)=$$ASKLM^RCDPEARL             ; Ask to Display in Listman Template
"RTN","RCDPELAR",37,0)
 Q:$P(INPUT,"^",7)<0                            ; '^' or timeout
"RTN","RCDPELAR",38,0)
 I $P(INPUT,"^",7)=1 D  Q                       ; Compile data and call listman to display
"RTN","RCDPELAR",39,0)
 . D LMOUT(INPUT,.RCVAUTD,.IO)
"RTN","RCDPELAR",40,0)
 S $P(INPUT,"^",8)=$$EXCEL()                    ; Ask to output to Excel
"RTN","RCDPELAR",41,0)
 Q:$P(INPUT,"^",8)=-1                           ; '^' or timeout
"RTN","RCDPELAR",42,0)
 D:$P(INPUT,"^",8)=1 INFO^RCDPEM6               ; Display capture information for Excel
"RTN","RCDPELAR",43,0)
 S $P(INPUT,"^",9)=$$DEVICE($P(INPUT,"^",8),.IO)    ; Ask output device
"RTN","RCDPELAR",44,0)
 Q:'$P(INPUT,"^",9)
"RTN","RCDPELAR",45,0)
 ;
"RTN","RCDPELAR",46,0)
 ; Option to queue
"RTN","RCDPELAR",47,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPELAR",48,0)
 . N JOB S JOB=$J
"RTN","RCDPELAR",49,0)
 . N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPELAR",50,0)
 . S ZTRTN="REPORT^RCDPELAR(INPUT,.RCVAUTD,.IO,JOB)"
"RTN","RCDPELAR",51,0)
 . S ZTDESC="LIST ALL AUTO-POSTED RECEIPTS REPORT"
"RTN","RCDPELAR",52,0)
 . M RCPYRSEL=^TMP("RCSELPAY",$J)
"RTN","RCDPELAR",53,0)
 . S ZTSAVE("RC*")="",ZTSAVE("VAUTD")="",ZTSAVE("IO*")=""
"RTN","RCDPELAR",54,0)
 . S ZTSAVE("INPUT")="",ZTSAVE("JOB")=""
"RTN","RCDPELAR",55,0)
 . S ZTSAVE("^TMP(""RCDPEU1"",$J,")=""
"RTN","RCDPELAR",56,0)
 . D ^%ZTLOAD
"RTN","RCDPELAR",57,0)
 . W !!,$S($D(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task.")
"RTN","RCDPELAR",58,0)
 . K ZTSK,IO("Q")
"RTN","RCDPELAR",59,0)
 . D HOME^%ZIS
"RTN","RCDPELAR",60,0)
 ;
"RTN","RCDPELAR",61,0)
 D REPORT(INPUT,.RCVAUTD,.IO)           ; Compile and Display Report data
"RTN","RCDPELAR",62,0)
 Q
"RTN","RCDPELAR",63,0)
 ;
"RTN","RCDPELAR",64,0)
LMOUT(INPUT,RCVAUTD,IO) ; Output report to Listman
"RTN","RCDPELAR",65,0)
 ; Input:   INPUT       - See REPORT for a complete description
"RTN","RCDPELAR",66,0)
 ;          RCVAUTD     -  Array of selected Divisions
"RTN","RCDPELAR",67,0)
 ;                         Only passed if A1=2
"RTN","RCDPELAR",68,0)
 ; Output:  ^TMP("RCDPE_LAR",$J,CTR)=Line - Array of display lines (no headers)
"RTN","RCDPELAR",69,0)
 ;                                           for output to Listman
"RTN","RCDPELAR",70,0)
 ;                                           Only set when A7-1
"RTN","RCDPELAR",71,0)
 N HDR
"RTN","RCDPELAR",72,0)
 S $P(INPUT,"^",9)=0                             ; Initial listman line counter
"RTN","RCDPELAR",73,0)
 D REPORT(INPUT,.RCVAUTD,.IO)                    ; Get the lines to be displayed
"RTN","RCDPELAR",74,0)
 S HDR("TITLE")="AUTO-POSTED RECEIPT REPORT"
"RTN","RCDPELAR",75,0)
 S HDR(1)=$$HDRLN2^RCDPELA1(INPUT)
"RTN","RCDPELAR",76,0)
 S HDR(2)=$$HDRLN3^RCDPELA1(INPUT)
"RTN","RCDPELAR",77,0)
 S HDR(3)=""
"RTN","RCDPELAR",78,0)
 S HDR(4)=""
"RTN","RCDPELAR",79,0)
 S HDR(5)="PAYER"
"RTN","RCDPELAR",80,0)
 S HDR(6)="        DATE      DATE"
"RTN","RCDPELAR",81,0)
 S HDR(7)=$$ERAHDR2^RCDPELA1()
"RTN","RCDPELAR",82,0)
 D LMRPT^RCDPEARL(.HDR,$NA(^TMP("RCDPE_LAR",$J))) ; Generate ListMan display
"RTN","RCDPELAR",83,0)
 ;
"RTN","RCDPELAR",84,0)
 D ^%ZISC                                       ; Close the device
"RTN","RCDPELAR",85,0)
 K ^TMP("RCDPE_LAR",$J),^TMP($J,"RCDPE_LAR")
"RTN","RCDPELAR",86,0)
 K ^TMP("RCSELPAY",$J),^TMP($J,"SELPAYER")
"RTN","RCDPELAR",87,0)
 Q
"RTN","RCDPELAR",88,0)
 ;
"RTN","RCDPELAR",89,0)
STADIV(RCVAUTD) ; Division/Station Filter
"RTN","RCDPELAR",90,0)
 ; Input:   None
"RTN","RCDPELAR",91,0)
 ; Output:  RCVAUTD     - Array of selected divisions, if 1 is returned
"RTN","RCDPELAR",92,0)
 ; Returns: 0           - User up-arrowed or timed out
"RTN","RCDPELAR",93,0)
 ;          1           - All divisions selected
"RTN","RCDPELAR",94,0)
 ;          2           - Selected Divisions
"RTN","RCDPELAR",95,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,VAUTD,X,Y
"RTN","RCDPELAR",96,0)
 D DIVISION^VAUTOMA                         ; IA #664 allows this
"RTN","RCDPELAR",97,0)
 Q:Y<0 0                                    ; User up-arrowed or timed out
"RTN","RCDPELAR",98,0)
 Q:VAUTD=1 1                                ; All divisions selected
"RTN","RCDPELAR",99,0)
 M RCVAUTD=VAUTD                            ; Save selected divisions (if any)
"RTN","RCDPELAR",100,0)
 Q 2
"RTN","RCDPELAR",101,0)
 ;
"RTN","RCDPELAR",102,0)
APORERA() ; Ask the user if they want to filter by Auto-Post Date or ERA Date
"RTN","RCDPELAR",103,0)
 ; received
"RTN","RCDPELAR",104,0)
 ; Input:   None
"RTN","RCDPELAR",105,0)
 ; Returns: 0       - User up-arrowed or timed out
"RTN","RCDPELAR",106,0)
 ;          1       - Filter by Auto-Post date range
"RTN","RCDPELAR",107,0)
 ;          2       - Filter by ERA Date Received
"RTN","RCDPELAR",108,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPELAR",109,0)
 S DIR("A")="(A)uto-Post Date or (E)RA Date Received? (A/E): "
"RTN","RCDPELAR",110,0)
 S DIR(0)="SA^A:Auto-Post Date;E:ERA Date Received"
"RTN","RCDPELAR",111,0)
 S DIR("?",1)="Enter 'A' to filter by an Auto-Post Date Range."
"RTN","RCDPELAR",112,0)
 S DIR("?")="Enter 'E' to filter by an ERA Date Received Date Range."
"RTN","RCDPELAR",113,0)
 S DIR("B")="A"
"RTN","RCDPELAR",114,0)
 D ^DIR
"RTN","RCDPELAR",115,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 0
"RTN","RCDPELAR",116,0)
 Q:Y="A" 1
"RTN","RCDPELAR",117,0)
 Q 2
"RTN","RCDPELAR",118,0)
 ;
"RTN","RCDPELAR",119,0)
DTRNG(WHICH) ; Allows the user to select the Auto-Post OR ERA Received
"RTN","RCDPELAR",120,0)
 ; date range to be used
"RTN","RCDPELAR",121,0)
 ; Input:   WHICH   - 0 - Auto-Post Date Range
"RTN","RCDPELAR",122,0)
 ;                    1 - ERA Date Received Date Range
"RTN","RCDPELAR",123,0)
 ; Returns: 0       - User up-arrowed or timed out, 1 otherwise
"RTN","RCDPELAR",124,0)
 ;          A1^A2   - Where:
"RTN","RCDPELAR",125,0)
 ;                    A1 - Aut-Post Start Date
"RTN","RCDPELAR",126,0)
 ;                    A2 - Auto-Post End Date
"RTN","RCDPELAR",127,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,RANGE,START,X,XX,Y
"RTN","RCDPELAR",128,0)
 S DIR(0)="DAO^:"_DT_":APE"
"RTN","RCDPELAR",129,0)
 S DIR("A")="Start Date: "
"RTN","RCDPELAR",130,0)
 S XX="Enter the earliest "_$S(WHICH=0:"Auto-Post date",1:"ERA Date Received")
"RTN","RCDPELAR",131,0)
 S XX=XX_" for receipts to include on the report"
"RTN","RCDPELAR",132,0)
 S DIR("?")=XX
"RTN","RCDPELAR",133,0)
 D ^DIR
"RTN","RCDPELAR",134,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y="") 0
"RTN","RCDPELAR",135,0)
 S START=Y
"RTN","RCDPELAR",136,0)
ENDDT ; Prompt for end date
"RTN","RCDPELAR",137,0)
 K DIR
"RTN","RCDPELAR",138,0)
 S DIR("B")=Y(0)
"RTN","RCDPELAR",139,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE"
"RTN","RCDPELAR",140,0)
 S DIR("A")="End Date: "
"RTN","RCDPELAR",141,0)
 S XX="Enter the latest "_$S(WHICH=0:"Auto-Post date",1:"ERA Date Received")
"RTN","RCDPELAR",142,0)
 S XX=XX_" for receipts to include on the report"
"RTN","RCDPELAR",143,0)
 S DIR("?")=XX
"RTN","RCDPELAR",144,0)
 D ^DIR
"RTN","RCDPELAR",145,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y="") 0
"RTN","RCDPELAR",146,0)
 I Y<START D  G ENDDT
"RTN","RCDPELAR",147,0)
 . S XX=$$FMTE^XLFDT(START,"2ZD") ;****
"RTN","RCDPELAR",148,0)
 . W !,*7,"Enter an End date that is not less than "_XX
"RTN","RCDPELAR",149,0)
 S RANGE=START_"|"_Y
"RTN","RCDPELAR",150,0)
 Q RANGE
"RTN","RCDPELAR",151,0)
 ;
"RTN","RCDPELAR",152,0)
SELERA() ; Ask the user which types of ERA the want to see on the report
"RTN","RCDPELAR",153,0)
 ; Input:   None
"RTN","RCDPELAR",154,0)
 ; Returns: 0       - User up-arrowed or timed out
"RTN","RCDPELAR",155,0)
 ;          1       - Posted/Completed Receipts
"RTN","RCDPELAR",156,0)
 ;          2       - Only ERAs with Missing Receipts
"RTN","RCDPELAR",157,0)
 ;          3       - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",158,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPELAR",159,0)
 S DIR("A")="Select ERAs to be Displayed: "
"RTN","RCDPELAR",160,0)
 S DIR(0)="SA^1:Posted/Completed Receipts;2:Missing Receipts;3:Both"
"RTN","RCDPELAR",161,0)
 S DIR("B")="Both"
"RTN","RCDPELAR",162,0)
 S DIR("?",1)="Enter 1 to only display Posted Receipts."
"RTN","RCDPELAR",163,0)
 S DIR("?",2)="Enter 2 to only display ERAs with missing receipts."
"RTN","RCDPELAR",164,0)
 S DIR("?")="Enter 3 to display all receipts."
"RTN","RCDPELAR",165,0)
 D ^DIR
"RTN","RCDPELAR",166,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 0
"RTN","RCDPELAR",167,0)
 Q Y
"RTN","RCDPELAR",168,0)
 ;
"RTN","RCDPELAR",169,0)
RPTSORT(WHICH,ERASEL) ; Ask the user how they want to sort the data
"RTN","RCDPELAR",170,0)
 ; Input:   WHICH   - 1- Filtering by Auto-Post Date
"RTN","RCDPELAR",171,0)
 ;                    2 - Filtering by ERA Date Received 
"RTN","RCDPELAR",172,0)
 ;          ERASEL  - ERA Filter          
"RTN","RCDPELAR",173,0)
 ;                    1 - Posted/Completed Receipts
"RTN","RCDPELAR",174,0)
 ;                    2 - Only ERAs with Missing Receipts
"RTN","RCDPELAR",175,0)
 ;                    3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",176,0)
 ; Returns: 0       - User up-arrowed or timed out
"RTN","RCDPELAR",177,0)
 ;          1       - Auto-Post Date sort
"RTN","RCDPELAR",178,0)
 ;          2       - Missing Receipts
"RTN","RCDPELAR",179,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y
"RTN","RCDPELAR",180,0)
 ;
"RTN","RCDPELAR",181,0)
 ; If the user is only showing Posted/Completed Receipts OR 
"RTN","RCDPELAR",182,0)
 ; Missing Receipts then the only possible sort value is by date
"RTN","RCDPELAR",183,0)
 I ERASEL'=3 Q 1
"RTN","RCDPELAR",184,0)
 S DIR("A")="Sort by (D)ate or (M)issing Receipts: "
"RTN","RCDPELAR",185,0)
 S DIR(0)="SA^D:Date;M:Missing Receipts"
"RTN","RCDPELAR",186,0)
 S DIR("B")="D"
"RTN","RCDPELAR",187,0)
 S XX=$S(WHICH=1:"Auto-Post date.",1:"ERA Date Received.")
"RTN","RCDPELAR",188,0)
 S DIR("?",1)="Enter 'D' to sort by "_XX
"RTN","RCDPELAR",189,0)
 S DIR("?")="Enter 'M' to display Missing Receipts first."
"RTN","RCDPELAR",190,0)
 D ^DIR
"RTN","RCDPELAR",191,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 0
"RTN","RCDPELAR",192,0)
 S XX=$S(Y="D":1,Y="P":2,1:3)
"RTN","RCDPELAR",193,0)
 Q XX
"RTN","RCDPELAR",194,0)
 ;
"RTN","RCDPELAR",195,0)
EXCEL() ; Ask the user if they want to export to Excel
"RTN","RCDPELAR",196,0)
 ; Input:   None
"RTN","RCDPELAR",197,0)
 ; Returns: -1      - User up-arrowed or timed out
"RTN","RCDPELAR",198,0)
 ;           0      - Output to paper
"RTN","RCDPELAR",199,0)
 ;           1      - Output to Excel
"RTN","RCDPELAR",200,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPELAR",201,0)
 S DIR(0)="Y"
"RTN","RCDPELAR",202,0)
 S DIR("A")="Export the report to Microsoft Excel"
"RTN","RCDPELAR",203,0)
 S DIR("B")="NO"
"RTN","RCDPELAR",204,0)
 S DIR("?")="Enter 'YES' to output to Excel. Otherwise enter 'NO'"
"RTN","RCDPELAR",205,0)
 D ^DIR
"RTN","RCDPELAR",206,0)
 I $G(DUOUT) Q -1
"RTN","RCDPELAR",207,0)
 Q Y
"RTN","RCDPELAR",208,0)
 ;
"RTN","RCDPELAR",209,0)
DEVICE(EXCEL,IO) ; Select the output device
"RTN","RCDPELAR",210,0)
 ; Input:   EXCEL   - 1 - Ouput to Excel, 0 otherwise
"RTN","RCDPELAR",211,0)
 ; Output:  %ZIS    - Selected device
"RTN","RCDPELAR",212,0)
 ;          IO      - Array of selected output info
"RTN","RCDPELAR",213,0)
 ; Returns: 0       - No device selected, 1 otherwise
"RTN","RCDPELAR",214,0)
 N POP,RCPYRSEL,%ZIS
"RTN","RCDPELAR",215,0)
 S %ZIS="QM"
"RTN","RCDPELAR",216,0)
 D ^%ZIS
"RTN","RCDPELAR",217,0)
 Q:POP 0
"RTN","RCDPELAR",218,0)
 Q:EXCEL 1                  ; Output to Excel, no queueing
"RTN","RCDPELAR",219,0)
 ;
"RTN","RCDPELAR",220,0)
 Q 1
"RTN","RCDPELAR",221,0)
 ;
"RTN","RCDPELAR",222,0)
REPORT(INPUT,RCVAUTD,IO,JOB) ; Compile and run the report
"RTN","RCDPELAR",223,0)
 ; Expects ZTQUEUED to be defined already if queued
"RTN","RCDPELAR",224,0)
 ; Input:   INPUT   - A1^A2^A3^...^An Where:
"RTN","RCDPELAR",225,0)
 ;                       A1 - 1 - All divisions selected
"RTN","RCDPELAR",226,0)
 ;                            2 - Selected divisions
"RTN","RCDPELAR",227,0)
 ;                       A2 - 1 - Filter by Auto-Post date range
"RTN","RCDPELAR",228,0)
 ;                            2 - Filter by ERA Date Received date range
"RTN","RCDPELAR",229,0)
 ;                       A3 - B1|B2   - Where:
"RTN","RCDPELAR",230,0)
 ;                             B1 - ERA Date Received Start Date if A2=2
"RTN","RCDPELAR",231,0)
 ;                                  Auto-Post Start Date of A2=1
"RTN","RCDPELAR",232,0)
 ;                             B2 - ERA Date Received End Date if A2=2
"RTN","RCDPELAR",233,0)
 ;                                  Auto-Post End Date of A2=1
"RTN","RCDPELAR",234,0)
 ;                       A4 - 1 - Posted/Completed Receipts
"RTN","RCDPELAR",235,0)
 ;                            2 - Only ERAs with Missing Receipts
"RTN","RCDPELAR",236,0)
 ;                            3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",237,0)
 ;                       A5 - 1 - All insurance companies selected
"RTN","RCDPELAR",238,0)
 ;                            2 - Selected insurance companies chosen
"RTN","RCDPELAR",239,0)
 ;                       A6 - 1 - Auto-Post Date/ERA Date Received Sort
"RTN","RCDPELAR",240,0)
 ;                            2 - Payer sort
"RTN","RCDPELAR",241,0)
 ;                            3 - Missing Receipts
"RTN","RCDPELAR",242,0)
 ;                       A7 - 0 - Do not display in a listman template
"RTN","RCDPELAR",243,0)
 ;                            1 - Display in a listman template
"RTN","RCDPELAR",244,0)
 ;                       A8 - 0 - Output to paper
"RTN","RCDPELAR",245,0)
 ;                            1 - Output to Excel
"RTN","RCDPELAR",246,0)
 ;                       A9 - Line counter for Listman output
"RTN","RCDPELAR",247,0)
 ;                       A10 - M/P/T/A = Medical/Pharmacy/Tricare/All  
"RTN","RCDPELAR",248,0)
 ;           RCVAUTD -  Array of selected Divisions
"RTN","RCDPELAR",249,0)
 ;                      Only passed if A1=2
"RTN","RCDPELAR",250,0)
 ;           IO      - Interface device
"RTN","RCDPELAR",251,0)
 ;           JOB     - $J (optional, only passed in when report is queued)
"RTN","RCDPELAR",252,0)
 ;           ^TMP("RCSELPAY",$J)- Global Array of selected insurance companies
"RTN","RCDPELAR",253,0)
 ; Output:   ^TMP("RCDPE_LAR",$J,CTR)=Line - Array of display lines (no headers)
"RTN","RCDPELAR",254,0)
 ;                                           for output to Listman
"RTN","RCDPELAR",255,0)
 ;                                           Only set when A7-1
"RTN","RCDPELAR",256,0)
 N CURDT,DIVFLT,DTEND,DTSTART,ERAFILT,WHICH,RCTYPE,RCPAYS,SORT,STOP,XX
"RTN","RCDPELAR",257,0)
 K ^TMP("RCDPE_LAR",$J),^TMP($J,"RCDPE_LAR")
"RTN","RCDPELAR",258,0)
 ; I '$G(JOB) S JOB=""
"RTN","RCDPELAR",259,0)
 U IO
"RTN","RCDPELAR",260,0)
 ; D PAYERS(JOB)                            ; Rearrange payer global for easier use
"RTN","RCDPELAR",261,0)
 S DIVFLT=$P(INPUT,"^",1)                   ; Division filter
"RTN","RCDPELAR",262,0)
 S WHICH=$P(INPUT,"^",2)                    ; 1 - Auto-Post date, 2 - ERA Date Received
"RTN","RCDPELAR",263,0)
 S SORT=$P(INPUT,"^",6)                     ; Type of secondary sort
"RTN","RCDPELAR",264,0)
 S DTEND=$P($P(INPUT,"^",3),"|",2)_".9999"  ; End of Date Range
"RTN","RCDPELAR",265,0)
 S DTSTART=$P($P(INPUT,"^",3),"|",1)        ; End of Date Range
"RTN","RCDPELAR",266,0)
 S ERAFILT=$P(INPUT,"^",4)                  ; ERA Filter
"RTN","RCDPELAR",267,0)
 S RCTYPE=$P(INPUT,"^",10)                  ; PRCA*4.5*326 Medical/Pharmacy/Tricare/All
"RTN","RCDPELAR",268,0)
 S RCPAYS=$P(INPUT,"^",5)                   ; Payers All/Selected/Range
"RTN","RCDPELAR",269,0)
 ;
"RTN","RCDPELAR",270,0)
 ; First filter and sort the report
"RTN","RCDPELAR",271,0)
 S CURDT=(DTSTART-1)_.9999                  ;PRCA*4.5*321 Added '_.9999'
"RTN","RCDPELAR",272,0)
 F  D  Q:'CURDT  Q:CURDT>(DTEND)
"RTN","RCDPELAR",273,0)
 . S:WHICH=1 CURDT=$O(^RCY(344.4,"F",CURDT))
"RTN","RCDPELAR",274,0)
 . S:WHICH=2 CURDT=$O(^RCY(344.4,"AFD",CURDT))
"RTN","RCDPELAR",275,0)
 . Q:'CURDT
"RTN","RCDPELAR",276,0)
 . Q:CURDT>(DTEND)
"RTN","RCDPELAR",277,0)
 . I WHICH=2 D RPTE(DIVFLT,CURDT,SORT,ERAFILT,.RCVAUTD,RCTYPE,RCPAYS) Q
"RTN","RCDPELAR",278,0)
 . D RPTA(DIVFLT,CURDT,SORT,ERAFILT,.RCVAUTD,RCTYPE,RCPAYS)
"RTN","RCDPELAR",279,0)
 ;
"RTN","RCDPELAR",280,0)
 D RPTOUT^RCDPELA1(INPUT)                ; Output the report
"RTN","RCDPELAR",281,0)
 ;
"RTN","RCDPELAR",282,0)
 ; Quit if Listman - clean up of ^TMP & device is handled in LMOUT^RCDPELAR
"RTN","RCDPELAR",283,0)
 I $P(INPUT,"^",7)=1 Q
"RTN","RCDPELAR",284,0)
 ;
"RTN","RCDPELAR",285,0)
 ; Close device
"RTN","RCDPELAR",286,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPELAR",287,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPELAR",288,0)
 K ^TMP("RCDPE_LAR",$J),^TMP($J,"RCDPE_LAR")
"RTN","RCDPELAR",289,0)
 K ^TMP("RCSELPAY",$J),^TMP($J,"SELPAYER")
"RTN","RCDPELAR",290,0)
 K ^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPELAR",291,0)
 K ZTQUEUED
"RTN","RCDPELAR",292,0)
 Q
"RTN","RCDPELAR",293,0)
 ;
"RTN","RCDPELAR",294,0)
PAYERS(JOB) ; Rearrange payer global for easier use
"RTN","RCDPELAR",295,0)
 ; Input:   ^TMP("RCSELPAY",$J,nn)=Payer Name - Global Array of selected
"RTN","RCDPELAR",296,0)
 ;                                              insurance companies
"RTN","RCDPELAR",297,0)
 ; Output   ^TMP($J,"SELPAYER",Payer Name)="" - Global Array of selected
"RTN","RCDPELAR",298,0)
 ;                                    insurance rearranged for easier checks
"RTN","RCDPELAR",299,0)
 I JOB="" S JOB=$J
"RTN","RCDPELAR",300,0)
 N PAYER,XX
"RTN","RCDPELAR",301,0)
 K ^TMP($J,"SELPAYER")
"RTN","RCDPELAR",302,0)
 S XX=""
"RTN","RCDPELAR",303,0)
 F  D  Q:XX=""
"RTN","RCDPELAR",304,0)
 . S XX=$O(^TMP("RCSELPAY",JOB,XX))
"RTN","RCDPELAR",305,0)
 . Q:XX=""
"RTN","RCDPELAR",306,0)
 . S PAYER=$$UP^XLFSTR(^TMP("RCSELPAY",JOB,XX))
"RTN","RCDPELAR",307,0)
 . S ^TMP($J,"SELPAYER",PAYER)=""
"RTN","RCDPELAR",308,0)
 K ^TMP("RCSELPAY",JOB)
"RTN","RCDPELAR",309,0)
 Q
"RTN","RCDPELAR",310,0)
 ;
"RTN","RCDPELAR",311,0)
RPTE(DIVFLT,CURDT,SORT,ERAFILT,VAUTD,RCTYPE,RCPAYS) ; Use the ERA Date Received index and filter out
"RTN","RCDPELAR",312,0)
 ; divisions, payers that weren't selected
"RTN","RCDPELAR",313,0)
 ; Input:   DIVFLT              - 1 - All Divisions selected, 2 otherwise
"RTN","RCDPELAR",314,0)
 ;          CURDT               - Date being processed
"RTN","RCDPELAR",315,0)
 ;          SORT                - 1 - Auto-Post Date Sort
"RTN","RCDPELAR",316,0)
 ;                                2 - Missing Receipts
"RTN","RCDPELAR",317,0)
 ;          ERAFILT             - 1 - Posted/Completed Receipts
"RTN","RCDPELAR",318,0)
 ;                                2 - Only ERAs with Missing Receipts
"RTN","RCDPELAR",319,0)
 ;                                3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",320,0)
 ;          VAUTD               - Array of selected divisions
"RTN","RCDPELAR",321,0)
 ;          RCTYPE              - Type of payer - M/P/T/A
"RTN","RCDPELAR",322,0)
 ;          RCPAYS              - A - All payers, S - Selected Payers, R - Range of Payers
"RTN","RCDPELAR",323,0)
 ;         ^TMP("RCSELPAY",$J)  - Global Array of selected insurance companies
"RTN","RCDPELAR",324,0)
 ; Output: ^TMP($J,A1,"SEL",A2,A3,A4,A5)="" - if record passed filters Where:
"RTN","RCDPELAR",325,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELAR",326,0)
 ;                                 A2 - Uppercased Payer Name (primary sort)
"RTN","RCDPELAR",327,0)
 ;                                 A3 - Secondary Sort Value
"RTN","RCDPELAR",328,0)
 ;                                 A4 - Internal IEN for file 344.4
"RTN","RCDPELAR",329,0)
 ;                                 A5 - Internal IEN for sub file 344.41
"RTN","RCDPELAR",330,0)
 N COMPLETE,IEN3444,IEN34441,IENS,PAYER,RECEIPT,SVAL,TIN,XX
"RTN","RCDPELAR",331,0)
 S IEN3444=0
"RTN","RCDPELAR",332,0)
 F  D  Q:'IEN3444
"RTN","RCDPELAR",333,0)
 . S IEN3444=$O(^RCY(344.4,"AFD",CURDT,IEN3444))
"RTN","RCDPELAR",334,0)
 . Q:'IEN3444
"RTN","RCDPELAR",335,0)
 . S PAYER=$$GET1^DIQ(344.4,IEN3444,.06,"I")            ; Payment From field
"RTN","RCDPELAR",336,0)
 . S PAYER=$$UP^XLFSTR(PAYER)
"RTN","RCDPELAR",337,0)
 . S XX=1
"RTN","RCDPELAR",338,0)
 . I RCPAYS'="A" D  Q:'XX
"RTN","RCDPELAR",339,0)
 . . S XX=$$ISSEL^RCDPEU1(344.4,IEN3444)                ; PRCA*4.5*326 Check if payer was selected
"RTN","RCDPELAR",340,0)
 . E  I RCTYPE'="A" D  Q:'XX                            ; If all of a give type of payer selected
"RTN","RCDPELAR",341,0)
 . . S XX=$$ISTYPE^RCDPEU1(344.4,IEN3444,RCTYPE)        ;  check that payer matches type
"RTN","RCDPELAR",342,0)
 . I DIVFLT'=1 Q:'$$CHKDIV^RCDPEDAR(IEN3444,1,.VAUTD)   ; Not a selected Division
"RTN","RCDPELAR",343,0)
 . S XX=$$GET1^DIQ(344.4,IEN3444,4.01,"I")              ; Auto-Post date on ERA
"RTN","RCDPELAR",344,0)
 . Q:'XX                                                ; skip if not auto-posted ERA
"RTN","RCDPELAR",345,0)
 . S COMPLETE=$$COMPLETE(IEN3444)                       ; Check for missing receipts
"RTN","RCDPELAR",346,0)
 . I ERAFILT=1,'COMPLETE Q                              ; Missing Receipt
"RTN","RCDPELAR",347,0)
 . I ERAFILT=2,COMPLETE Q                               ; Not a Missing Receipt
"RTN","RCDPELAR",348,0)
 . ;
"RTN","RCDPELAR",349,0)
 . ; Just showing missing receipts and this ERA doesn't have any
"RTN","RCDPELAR",350,0)
 . I ERAFILT=2,COMPLETE Q
"RTN","RCDPELAR",351,0)
 . S IEN34441=0
"RTN","RCDPELAR",352,0)
 . F  D  Q:'IEN34441
"RTN","RCDPELAR",353,0)
 . . S IEN34441=$O(^RCY(344.4,IEN3444,1,IEN34441))
"RTN","RCDPELAR",354,0)
 . . Q:'IEN34441
"RTN","RCDPELAR",355,0)
 . . S IENS=IEN34441_","_IEN3444_","
"RTN","RCDPELAR",356,0)
 . . S SVAL=$S(SORT=1:CURDT,1:COMPLETE)                 ; Get the sort value
"RTN","RCDPELAR",357,0)
 . . S ^TMP($J,"RCDPE_LAR","SEL",PAYER,SVAL,IEN3444,IEN34441)=""
"RTN","RCDPELAR",358,0)
 Q
"RTN","RCDPELAR",359,0)
 ;
"RTN","RCDPELAR",360,0)
RPTA(DIVFLT,CURDT,SORT,ERAFILT,VAUTD,RCTYPE,RCPAYS) ; Use the Auto-Post Date index and filter out
"RTN","RCDPELAR",361,0)
 ; divisions, payers that weren't selected
"RTN","RCDPELAR",362,0)
 ; Input:   DIVFLT              - 1 - All Divisions selected, 2 otherwise
"RTN","RCDPELAR",363,0)
 ;          CURDT               - Date being processed
"RTN","RCDPELAR",364,0)
 ;          SORT                - 1 - Auto-Post Date Sort
"RTN","RCDPELAR",365,0)
 ;                                2 - Missing Receipts
"RTN","RCDPELAR",366,0)
 ;          ERAFILT             - 1 - Posted/Completed Receipts
"RTN","RCDPELAR",367,0)
 ;                                2 - Only ERAs with Missing Receipts
"RTN","RCDPELAR",368,0)
 ;                                3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",369,0)
 ;          VAUTD               - Array of selected divisions
"RTN","RCDPELAR",370,0)
 ;          RCTYPE              - Type of payer - M/P/T/A
"RTN","RCDPELAR",371,0)
 ;          RCPAYS              - A - All payers, S - Selected Payers, R - Range of Payers
"RTN","RCDPELAR",372,0)
 ;         ^TMP("RCSELPAY",$J)  - Global Array of selected insurance companies
"RTN","RCDPELAR",373,0)
 ;         ^TMP($J,"RCDPE_LAR","ERA") - see output for definition
"RTN","RCDPELAR",374,0)
 ; Output: ^TMP($J,A1,"SEL",A2,A3,A4,A5)="" - if record passed filters Where:
"RTN","RCDPELAR",375,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELAR",376,0)
 ;                                 A2 - Uppercased Payer Name (primary sort)
"RTN","RCDPELAR",377,0)
 ;                                 A3 - Secondary Sort Value
"RTN","RCDPELAR",378,0)
 ;                                 A4 - Internal IEN for file 344.4
"RTN","RCDPELAR",379,0)
 ;                                 A5 - Internal IEN for sub file 344.41
"RTN","RCDPELAR",380,0)
 ;        ^TMP($J,A1,"ERA",A2)="" - List of ERAs that were already pulled Where:
"RTN","RCDPELAR",381,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELAR",382,0)
 ;                                 A2 - IEN of #344.4 (ERA #)
"RTN","RCDPELAR",383,0)
 ;
"RTN","RCDPELAR",384,0)
 N COMPLETE,IEN3444,IEN3441,PAYER,SVAL
"RTN","RCDPELAR",385,0)
 S IEN3444=0
"RTN","RCDPELAR",386,0)
 F  D  Q:'IEN3444
"RTN","RCDPELAR",387,0)
 . S IEN3444=$O(^RCY(344.4,"F",CURDT,IEN3444))
"RTN","RCDPELAR",388,0)
 . Q:'IEN3444
"RTN","RCDPELAR",389,0)
 . I DIVFLT'=1 Q:'$$CHKDIV^RCDPEDAR(IEN3444,1,.VAUTD)   ; Not a selected Division
"RTN","RCDPELAR",390,0)
 . S COMPLETE=$$COMPLETE(IEN3444)
"RTN","RCDPELAR",391,0)
 . I ERAFILT=1,'COMPLETE Q                              ; Missing Receipt
"RTN","RCDPELAR",392,0)
 . I ERAFILT=2,COMPLETE Q                               ; Not a Missing Receipt
"RTN","RCDPELAR",393,0)
 . S PAYER=$$GET1^DIQ(344.4,IEN3444,.06,"I")            ; Payment From field
"RTN","RCDPELAR",394,0)
 . S PAYER=$$UP^XLFSTR(PAYER)
"RTN","RCDPELAR",395,0)
 . ; Q:'$D(^TMP($J,"SELPAYER",PAYER))                   ; Not a selected payer
"RTN","RCDPELAR",396,0)
 . S XX=1
"RTN","RCDPELAR",397,0)
 . I RCPAYS'="A" D  Q:'XX
"RTN","RCDPELAR",398,0)
 . . S XX=$$ISSEL^RCDPEU1(344.4,IEN3444)                ; PRCA*4.5*326 Check if payer was selected
"RTN","RCDPELAR",399,0)
 . E  I RCTYPE'="A" D  Q:'XX                            ; If all of a give type of payer selected
"RTN","RCDPELAR",400,0)
 . . S XX=$$ISTYPE^RCDPEU1(344.4,IEN3444,RCTYPE)        ;  check that payer matches type
"RTN","RCDPELAR",401,0)
 . Q:$D(^TMP($J,"RCDPE_LAR","ERA",IEN3444))             ; Already pulled this ERA
"RTN","RCDPELAR",402,0)
 . ;
"RTN","RCDPELAR",403,0)
 . S ^TMP($J,"RCDPE_LAR","ERA",IEN3444)=""
"RTN","RCDPELAR",404,0)
 . S IEN34441=0
"RTN","RCDPELAR",405,0)
 . F  D  Q:'IEN34441
"RTN","RCDPELAR",406,0)
 . . S IEN34441=$O(^RCY(344.4,IEN3444,1,IEN34441))
"RTN","RCDPELAR",407,0)
 . . Q:'IEN34441
"RTN","RCDPELAR",408,0)
 . . S SVAL=$S(SORT=1:CURDT,1:COMPLETE)                ; Get the sort value
"RTN","RCDPELAR",409,0)
 . . S ^TMP($J,"RCDPE_LAR","SEL",PAYER,SVAL,IEN3444,IEN34441)=""
"RTN","RCDPELAR",410,0)
 Q
"RTN","RCDPELAR",411,0)
 ;
"RTN","RCDPELAR",412,0)
COMPLETE(IEN3444) ; Checks an ERA for missing receipts
"RTN","RCDPELAR",413,0)
 ; Input:   IEN3444   - ERA to be checked
"RTN","RCDPELAR",414,0)
 ; Returns: 0 if at least one detail line of the ERA has a missing receipt
"RTN","RCDPELAR",415,0)
 ;          1 otherwise
"RTN","RCDPELAR",416,0)
 N XX
"RTN","RCDPELAR",417,0)
 S XX=$$GET1^DIQ(344.4,IEN3444,4.02,"I")    ; Auto-Post Status field
"RTN","RCDPELAR",418,0)
 I XX=2 Q 1                                 ; Complete ERA
"RTN","RCDPELAR",419,0)
 Q 0
"RTN","RCDPELAR",420,0)
 ;
"RTN","RCDPELAR",421,0)
ASKSTOP() ; Ask to continue
"RTN","RCDPELAR",422,0)
 ; Input:   IOST    - Device Type 
"RTN","RCDPELAR",423,0)
 ; Returns: 1 - User wants to quit, 0 otherwise
"RTN","RCDPELAR",424,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPELAR",425,0)
 Q:$E(IOST,1,2)'["C-" 0                     ; Not a terminal
"RTN","RCDPELAR",426,0)
 S DIR(0)="E"
"RTN","RCDPELAR",427,0)
 W ! D ^DIR
"RTN","RCDPELAR",428,0)
 I ($D(DIRUT))!($D(DUOUT)) Q 1
"RTN","RCDPELAR",429,0)
 Q 0
"RTN","RCDPELAR",430,0)
 ;
"RTN","RCDPEM")
0^27^B75647011
"RTN","RCDPEM",1,0)
RCDPEM ;ALB/TMK/PJH - POST EFT, ERA MATCHING TO EFT ;Jun 06, 2014@19:11:19
"RTN","RCDPEM",2,0)
 ;;4.5;Accounts Receivable;**173,255,269,276,283,298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEM",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM",4,0)
 ; IA 4050 covers call to SPL1^IBCEOBAR
"RTN","RCDPEM",5,0)
 ; Note - keep processing in line with RCDPXPAP
"RTN","RCDPEM",6,0)
 ;
"RTN","RCDPEM",7,0)
EN ; Post EFT deposits, auto-match EFT's and ERA's 
"RTN","RCDPEM",8,0)
 ;
"RTN","RCDPEM",9,0)
 K ^TMP($J,"RCDPETOT"),^TMP("RCDPEAP",$J)
"RTN","RCDPEM",10,0)
 ; ^TMP($J,"RCDPETOT",344.3 or 344.31,file ien)=
"RTN","RCDPEM",11,0)
 ;  (1) match (0/1/-1)   (2) total $   (3) posted (0/1)  (4) error ref
"RTN","RCDPEM",12,0)
 ;  (5) EFT deposit ien 344.1 if added for EFT
"RTN","RCDPEM",13,0)
 ;
"RTN","RCDPEM",14,0)
 N RCZ,RCSUM,RCDEP,RECTDA,RC0,RCER,RCDUZ,Z,Z0,Z1,DA,X,Y,DIE,DR
"RTN","RCDPEM",15,0)
 M RCDUZ=DUZ
"RTN","RCDPEM",16,0)
 N DUZ S DUZ=+$O(^VA(200,"B","EDILOCKBOX,AUTOMATIC",0)),DUZ(0)="" S:'DUZ DUZ=.5
"RTN","RCDPEM",17,0)
 K ^TMP($J,"RCXM"),^TMP($J,"RCTOT")
"RTN","RCDPEM",18,0)
 S ZTREQ="@"
"RTN","RCDPEM",19,0)
 L +^RCY(344.3,"ALOCK"):5 I '$T D  G ENQ ; Lock record
"RTN","RCDPEM",20,0)
 . ; Send bulletin that job could not be run
"RTN","RCDPEM",21,0)
 . S ^TMP($J,"RCXM",1)="The nightly job to post EFT deposits and match EFTs to ERAs could not be run",^TMP($J,"RCXM",2)="Another match process was already running (lock on ^RCY(344.3,""ALOCK"") )"
"RTN","RCDPEM",22,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",23,0)
 ;
"RTN","RCDPEM",24,0)
 ; Post deposits for any unposted EFTs in file 344.3
"RTN","RCDPEM",25,0)
 ; 'Unposted' EFTs have a 0 in AMOUNT POSTED field
"RTN","RCDPEM",26,0)
 S ^TMP($J,"RCTOT","EFT_DEP")=0
"RTN","RCDPEM",27,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.3,"APOST",0,RCZ)) Q:'RCZ  S RC0=$G(^RCY(344.3,RCZ,0))  I RC0'="",$P(RC0,U,8) D
"RTN","RCDPEM",28,0)
 . S ^TMP($J,"RCTOT","EFT_DEP")=^TMP($J,"RCTOT","EFT_DEP")+1
"RTN","RCDPEM",29,0)
 . ; Verify check sums
"RTN","RCDPEM",30,0)
 . S RCSUM=$$CHKSUM^RCDPESR3(RCZ)
"RTN","RCDPEM",31,0)
 . I RCSUM'=$P(RC0,U,9) D  Q
"RTN","RCDPEM",32,0)
 .. ; Bulletin that check sums do not match
"RTN","RCDPEM",33,0)
 .. ; Update record error list and checksum error field
"RTN","RCDPEM",34,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2)
"RTN","RCDPEM",35,0)
 .. S RCER(2)="  Checksum is invalid and the EFT deposit record is corrupted.",RCER(3)="  Stored Checksum = "_$P(RC0,U,9)_" Calculated Checksum: "_RCSUM,RCER(4)="  This EFT deposit cannot be sent to FMS.  You must ask for it to be"
"RTN","RCDPEM",36,0)
 .. S RCER(5)="   retransmitted to your site."
"RTN","RCDPEM",37,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",38,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",39,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",40,0)
 .. S DIE="^RCY(344.3,",DA=RCZ,DR=".1////1" D ^DIE
"RTN","RCDPEM",41,0)
 .. S ^TMP($J,"RCTOT","CSUM")=$G(^TMP($J,"RCTOT","CSUM"))+1
"RTN","RCDPEM",42,0)
 . ;
"RTN","RCDPEM",43,0)
 . S RCDEP=+$P(RC0,U,3),RECTDA=+$O(^RCY(344,"AD",RCDEP,0))
"RTN","RCDPEM",44,0)
 . I RCDEP D LOCKDEP(RCDEP,1)
"RTN","RCDPEM",45,0)
 . I 'RCDEP!'RECTDA D  ;  Add deposit and/or receipt to files 344.1, 344
"RTN","RCDPEM",46,0)
 .. I 'RCDEP D  ; Add dep record RCDEP, update field .03 with the pointer
"RTN","RCDPEM",47,0)
 ... S RCDEP=+$$ADDDEP^RCDPEM0($P(RC0,U,6),$P(RC0,U,7),RCZ)
"RTN","RCDPEM",48,0)
 ... S ^TMP($J,"RCTOT","DEPOSIT")=$G(^TMP($J,"RCTOT","DEPOSIT"))+1
"RTN","RCDPEM",49,0)
 .. ;
"RTN","RCDPEM",50,0)
 .. I 'RECTDA,RCDEP D  ; Add receipt record, post to rev source cd 8NZZ
"RTN","RCDPEM",51,0)
 ... S RECTDA=+$$ADDREC^RCDPEM0(RCDEP,RCZ)
"RTN","RCDPEM",52,0)
 .. ;
"RTN","RCDPEM",53,0)
 . I RCDEP D LOCKDEP(RCDEP,0)
"RTN","RCDPEM",54,0)
 . ;
"RTN","RCDPEM",55,0)
 . I 'RCDEP!'RECTDA D  Q  ; Could not add entry to file 344.1 or 344 
"RTN","RCDPEM",56,0)
 .. ; Send a bulletin, update error text
"RTN","RCDPEM",57,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2),RCER(2)="  "_$S('RCDEP:"Neither a deposit nor a receipt were able",1:"A receipt was not able")_" to be added - no match attempted"
"RTN","RCDPEM",58,0)
 .. I RCDEP,'RECTDA S RCER(3)="  Deposit Ticket # created: "_$P($G(^RCY(344.1,+$P(RC0,U,3),0)),U)
"RTN","RCDPEM",59,0)
 .. S RCER($O(RCER(""),-1)+1)="This EFT deposit can't be sent to FMS.  You must ask Austin to retransmit"
"RTN","RCDPEM",60,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",61,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",62,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",63,0)
 .. S ^TMP($J,"RCTOT","ERR")=$G(^TMP($J,"RCTOT","ERR"))+1
"RTN","RCDPEM",64,0)
 . ;
"RTN","RCDPEM",65,0)
 . S DIE="^RCY(344.31," S Z=0 F  S Z=$O(^RCY(344.31,"B",RCZ,Z)) Q:'Z  S DA=Z,DR=".11////1" D ^DIE
"RTN","RCDPEM",66,0)
 ;
"RTN","RCDPEM",67,0)
 ;Update payer table for new payers - PRCA*4.5*298
"RTN","RCDPEM",68,0)
 D NEWPYR^RCDPESP
"RTN","RCDPEM",69,0)
 ;Scan Non-Released Rx Exceptions for released Rx - PRCA*4.5*298
"RTN","RCDPEM",70,0)
 D EN^RCDPEX4
"RTN","RCDPEM",71,0)
 ;
"RTN","RCDPEM",72,0)
 D MATCH(0,1)
"RTN","RCDPEM",73,0)
 ;
"RTN","RCDPEM",74,0)
 ;Auto Post - PRCA*4.5*298
"RTN","RCDPEM",75,0)
 D EN^RCDPEAP
"RTN","RCDPEM",76,0)
 ;Auto Decrease - PRCA*4.5*298
"RTN","RCDPEM",77,0)
 D EN^RCDPEAD
"RTN","RCDPEM",78,0)
 ;
"RTN","RCDPEM",79,0)
 ;Workload Notifications - PRCA*4.5*321
"RTN","RCDPEM",80,0)
 D EN^RCDPEM7
"RTN","RCDPEM",81,0)
 ;
"RTN","RCDPEM",82,0)
 L -^RCY(344.3,"ALOCK")
"RTN","RCDPEM",83,0)
ENQ K ^TMP($J,"RCDPETOT"),^TMP("RCDPEAP",$J)
"RTN","RCDPEM",84,0)
 ;
"RTN","RCDPEM",85,0)
 ;ePayments 5010 part II enhancements
"RTN","RCDPEM",86,0)
 ;Create Bulletins of EEOB Moved or Copied today
"RTN","RCDPEM",87,0)
 D EN^RCDPEM8
"RTN","RCDPEM",88,0)
 Q
"RTN","RCDPEM",89,0)
 ;
"RTN","RCDPEM",90,0)
MATCH(RCMAN,RCPROC) ; match unmatched EFTs with ERAs
"RTN","RCDPEM",91,0)
 ; RCMAN = 1 if job run manually, outside of nightly processing
"RTN","RCDPEM",92,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM",93,0)
 ;
"RTN","RCDPEM",94,0)
 N RC0,RCER,RCZ,RCHAC
"RTN","RCDPEM",95,0)
 I '$O(^RCY(344.31,"AMATCH",0,0)) D  G MATCHQ
"RTN","RCDPEM",96,0)
 . ; Send bulletin - no unmatched EFTs found
"RTN","RCDPEM",97,0)
 . N RCT
"RTN","RCDPEM",98,0)
 . S RCT=+$O(^TMP($J,"RCXM"," "),-1)+1
"RTN","RCDPEM",99,0)
 . S ^TMP($J,"RCXM",RCT)=$S('$G(RCMAN):"The nightly job",1:"The manual option")_" to match EFTs has found no EFTs are currently unmatched on your system"
"RTN","RCDPEM",100,0)
 . I $G(RCMAN) S ^TMP($J,"RCXM",RCT+1)="The action was initiated by "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPEM",101,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",102,0)
 ;
"RTN","RCDPEM",103,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.31,"AMATCH",0,RCZ)) Q:'RCZ  D
"RTN","RCDPEM",104,0)
 . K RCER
"RTN","RCDPEM",105,0)
 . S RC0=$G(^RCY(344.31,RCZ,0)),RCHAC=($E($P($G(^RCY(344.3,+RC0,0)),U,6),1,3)="HAC")
"RTN","RCDPEM",106,0)
 . Q:RC0=""  ; Bad xref
"RTN","RCDPEM",107,0)
 . Q:$S('RCHAC:'$P(RC0,U,11),1:0)  ; EFT deposit must have been recorded
"RTN","RCDPEM",108,0)
 . S ^TMP($J,"RCTOT","EFT")=$G(^TMP($J,"RCTOT","EFT"))+1
"RTN","RCDPEM",109,0)
 . I RCHAC S ^TMP($J,"RCTOT","EFT_HAC")=$G(^TMP($J,"RCTOT","EFT_HAC"))+1
"RTN","RCDPEM",110,0)
 . S ^TMP($J,"RCDPETOT",344.31,RCZ)=""
"RTN","RCDPEM",111,0)
 . ;
"RTN","RCDPEM",112,0)
 . D MATCH^RCDPEM0(RCZ,RCPROC)
"RTN","RCDPEM",113,0)
 ;
"RTN","RCDPEM",114,0)
 I '$O(^TMP($J,"RCXM",0)) K RCER S RCER(1)="",RCER(2)="NO EXCEPTIONS WHILE MATCHING EFTs-ERAs OR IN RECORDING THE DEPOSITS TO FMS" D BULL^RCDPEM1("","",.RCER) K RCER
"RTN","RCDPEM",115,0)
 D EN2^RCDPEM1,BULL^RCDPEM1("","",.RCER)
"RTN","RCDPEM",116,0)
 D SENDBULL^RCDPEM1
"RTN","RCDPEM",117,0)
 ;
"RTN","RCDPEM",118,0)
MATCHQ K ^TMP($J,"RCDPETOT"),^TMP($J,"RCTOT")
"RTN","RCDPEM",119,0)
 Q
"RTN","RCDPEM",120,0)
 ;
"RTN","RCDPEM",121,0)
LOCKDEP(RCDEP,LOCK) ; Lock/confirm deposit ien RCDEP file 341.1
"RTN","RCDPEM",122,0)
 ; If LOCK = 1 lock deposit
"RTN","RCDPEM",123,0)
 ; If LOCK = 0 unlock deposit
"RTN","RCDPEM",124,0)
 I $G(LOCK) D
"RTN","RCDPEM",125,0)
 . L +^RCY(344.1,RCDEP,0):DILOCKTM
"RTN","RCDPEM",126,0)
 . D CONFIRM^RCDPUDEP(RCDEP) ; confirm to prevent changes
"RTN","RCDPEM",127,0)
 I '$G(LOCK) L -^RCY(344.1,RCDEP,0)
"RTN","RCDPEM",128,0)
 Q
"RTN","RCDPEM",129,0)
 ; PRCA*4.5*326 Add RCDUZ to parameters
"RTN","RCDPEM",130,0)
RCPTDET(RCRZ,RECTDA1,RCER,RCDUZ) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEM",131,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEM",132,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEM",133,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEM",134,0)
 ;
"RTN","RCDPEM",135,0)
 N DA,DIE,DR,Q,RCR,RCSPL,RCZ0,RCTRANDA,RCQ,X,Y,Z0,Z1,Z ; PRCA*4.5*318
"RTN","RCDPEM",136,0)
 ;
"RTN","RCDPEM",137,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEM",138,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0))
"RTN","RCDPEM",139,0)
 . I $P(RCZ0,U)'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEM",140,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEM",141,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1,$G(RCDUZ)) ; PRCA*4.5*326 Add RCDUZ to parameters
"RTN","RCDPEM",142,0)
 . ;
"RTN","RCDPEM",143,0)
 . I RCTRANDA'>0 D  Q  ; Error adding receipt detail - PRCA*4.5*318
"RTN","RCDPEM",144,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(1) ; PRCA*4.5*318 - pass RCPROC value to $$SETERR
"RTN","RCDPEM",145,0)
 .. S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEM",146,0)
 . ;
"RTN","RCDPEM",147,0)
 . ;Store receipt line detail
"RTN","RCDPEM",148,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEM",149,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEM",150,0)
 ;
"RTN","RCDPEM",151,0)
 ; Update A/R CORRECTED PAYMENT multiple with apportionment for split lines
"RTN","RCDPEM",152,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEM",153,0)
 . S Z1=$O(RCSPL(Z,"")) Q:Z1=""
"RTN","RCDPEM",154,0)
 . I $O(RCSPL(Z,""),-1)=Z1,'$$SPLIT(Z,Z1,RCERA) Q  ; No split occurred
"RTN","RCDPEM",155,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEM",156,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEM",157,0)
 .. Q:'Q
"RTN","RCDPEM",158,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspensed
"RTN","RCDPEM",159,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEM",160,0)
 .. E  D
"RTN","RCDPEM",161,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEM",162,0)
 . ; BEGIN - PRCA*4.5*321
"RTN","RCDPEM",163,0)
 . ;Move/Copy/Remove EEOB detail for split line
"RTN","RCDPEM",164,0)
 . N CLAIM,IEN3611,RCSPLIT,RCSUB,RCZSAV
"RTN","RCDPEM",165,0)
 . ; Sub-array of split claim detail for individual line
"RTN","RCDPEM",166,0)
 . M RCSPLIT=RCSPL(Z)
"RTN","RCDPEM",167,0)
 . ; Protect Z subscript variable from overwrite by triggers
"RTN","RCDPEM",168,0)
 . S RCZSAV=Z
"RTN","RCDPEM",169,0)
 . ; Get scratchpad line number for this ERA line
"RTN","RCDPEM",170,0)
 . S RCSUB=$O(^RCY(344.49,RCRZ,1,"ASEQ",Z,""))
"RTN","RCDPEM",171,0)
 . ; Original claim number from Scratchpad line
"RTN","RCDPEM",172,0)
 . S CLAIM=$$GET1^DIQ(344.491,RCSUB_","_RCRZ_",",.02)
"RTN","RCDPEM",173,0)
 . ; EOB for original claim from ERA line
"RTN","RCDPEM",174,0)
 . S IEN3611=$$GET1^DIQ(344.41,RCQ_","_RCRZ_",",.02,"I")
"RTN","RCDPEM",175,0)
 . ; Automatic Move/Copy/Remove EOB
"RTN","RCDPEM",176,0)
 . I $$AUTO^RCDPEM5(CLAIM,.RCSPLIT,RCERA,"W",IEN3611)
"RTN","RCDPEM",177,0)
 . ; Restore Z
"RTN","RCDPEM",178,0)
 . S Z=RCZSAV
"RTN","RCDPEM",179,0)
 . ; END  - PRCA*4.5*321
"RTN","RCDPEM",180,0)
 ;
"RTN","RCDPEM",181,0)
 Q
"RTN","RCDPEM",182,0)
SPLIT(Z,Z1,RCERA) ;Check if worklist was split but to to single claim
"RTN","RCDPEM",183,0)
 N SUB,NBILL,OBILL
"RTN","RCDPEM",184,0)
 ;Find split line in scratchpad
"RTN","RCDPEM",185,0)
 S SUB=$O(^RCY(344.49,RCERA,1,"B",Z1,"")) Q:'SUB 0
"RTN","RCDPEM",186,0)
 ;Get original claim number from scratchpad
"RTN","RCDPEM",187,0)
 S OBILL=$P($G(^RCY(344.49,RCERA,1,SUB-1,0)),U,2)
"RTN","RCDPEM",188,0)
 ;New claim number
"RTN","RCDPEM",189,0)
 S NBILL=$P(RCSPL(Z,Z1),U,2)
"RTN","RCDPEM",190,0)
 ;If new and old claim are not the same this is a move via split
"RTN","RCDPEM",191,0)
 I OBILL'="",OBILL'=NBILL Q 1
"RTN","RCDPEM",192,0)
 ;Otherwise this is not a split
"RTN","RCDPEM",193,0)
 Q 0
"RTN","RCDPEM",194,0)
 ;
"RTN","RCDPEM",195,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEM",196,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEM",197,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEM",198,0)
 ; RCPROC = Function calling this subroutine
"RTN","RCDPEM",199,0)
 ;        = 1 EFT match to ERA   = 0 manual add receipt
"RTN","RCDPEM",200,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEM",201,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEM",202,0)
 ;
"RTN","RCDPEM",203,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEM",204,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEM",205,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEM",206,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEM",207,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEM",208,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";.27////"_RCR_";"
"RTN","RCDPEM",209,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEM",210,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEM",211,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEM",212,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEM",213,0)
 I $P(RCUP,U,2)["**ADJ" S RCCOM=RCCOM_$S(RCCOM'="":"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA")
"RTN","RCDPEM",214,0)
 I RCCOM]"" S DR=DR_"1.02////"_$E(RCCOM,1,60)_";"
"RTN","RCDPEM",215,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEM",216,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEM",217,0)
 D ^DIE
"RTN","RCDPEM",218,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPEM",219,0)
 D:RCCOM]"" AUDIT^RCDPECH(RECTDA1,RCTRANDA,RCZ,RCR)
"RTN","RCDPEM",220,0)
 Q
"RTN","RCDPEM",221,0)
 ;
"RTN","RCDPEM2")
0^10^B136538323
"RTN","RCDPEM2",1,0)
RCDPEM2 ;ALB/TMK/PJH - MANUAL ERA AND EFT MATCHING ;Jun 11, 2014@13:24:36
"RTN","RCDPEM2",2,0)
 ;;4.5;Accounts Receivable;**173,208,276,284,293,298,303,304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEM2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM2",4,0)
 Q
"RTN","RCDPEM2",5,0)
 ;
"RTN","RCDPEM2",6,0)
 ; PRCA*4.5*303 - Manually Match EFT from Worklist screen
"RTN","RCDPEM2",7,0)
MATCHWL ; Manually 'match' ERA to an EFT that originates from [RCDPE WORKLIST ERA LIST]
"RTN","RCDPEM2",8,0)
 N DA,DIC,DIE,DIR,DR,DTRNG,DTOUT,DUOUT,EFTTOT,END,ERATOT,RCEFT,RCERA,RCMBG,RCMATCH,RCNAME,RCQUIT,START,X,Y
"RTN","RCDPEM2",9,0)
 D FULL^VALM1
"RTN","RCDPEM2",10,0)
 ;
"RTN","RCDPEM2",11,0)
 ; PRCA*4.5*303 moved code out because this routine grew too large
"RTN","RCDPEM2",12,0)
 I $$ML0^RCDPRU() G MWQ ; if true then quit, othewise continue
"RTN","RCDPEM2",13,0)
 ;
"RTN","RCDPEM2",14,0)
ML1 ; Select EFT to Match to this ERA
"RTN","RCDPEM2",15,0)
 ; BEGIN PRCA*4.5*326 - replace ^DIC call to EFT picker utility
"RTN","RCDPEM2",16,0)
 S DIC("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",17,0)
 S DIC("S")="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPEM2",18,0)
 S:$G(DTRNG) DIC("S")=DIC("S")_"&'($P($G(^(0)),U,13)<START)&'($P($G(^(0)),U,13)>END)"
"RTN","RCDPEM2",19,0)
 ; end PRCA*4.5*293
"RTN","RCDPEM2",20,0)
 ;
"RTN","RCDPEM2",21,0)
 W !
"RTN","RCDPEM2",22,0)
 S Y=$$ASKEFT^RCDPEU2(DIC("A"),DIC("S"))
"RTN","RCDPEM2",23,0)
 I Y'>0 G MWQ
"RTN","RCDPEM2",24,0)
 S RCEFT=+Y,RCEFT(0)=$G(^RCY(344.31,+Y,0))
"RTN","RCDPEM2",25,0)
 ; END PRCA*4.5*326
"RTN","RCDPEM2",26,0)
 W !
"RTN","RCDPEM2",27,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",28,0)
 W !
"RTN","RCDPEM2",29,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",30,0)
 I $D(DUOUT)!$D(DTOUT) G MWQ
"RTN","RCDPEM2",31,0)
 I Y'=1 G ML1
"RTN","RCDPEM2",32,0)
 ; Go to the Manual match, we have the ERA and EFT
"RTN","RCDPEM2",33,0)
 D M12A
"RTN","RCDPEM2",34,0)
 ;
"RTN","RCDPEM2",35,0)
 ; Quit back to the worklist VALMBCK will be killed by List Manager.
"RTN","RCDPEM2",36,0)
 ; Rebuild the screen because we may have changed it.
"RTN","RCDPEM2",37,0)
MWQ D INIT^RCDPEWL7
"RTN","RCDPEM2",38,0)
 S VALMBCK="R",VALMBG=RCMBG
"RTN","RCDPEM2",39,0)
 Q
"RTN","RCDPEM2",40,0)
 ;
"RTN","RCDPEM2",41,0)
MATCH1 ; Manually 'match' an ERA to an EFT
"RTN","RCDPEM2",42,0)
 N DA,DIC,DIE,DIR,DIROUT,DR,DTRNG,DTOUT,DUOUT,EFTTOT,END,ERATOT
"RTN","RCDPEM2",43,0)
 N RCEFT,RCERA,RCMATCH,RCMTFLG,RCNAME,RCQUIT,START,X,XX,Y,YY
"RTN","RCDPEM2",44,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MATCH AN EFT DETAIL RECORD"
"RTN","RCDPEM2",45,0)
 W !,"WITH AN ERA RECORD."
"RTN","RCDPEM2",46,0)
 ; PRCA*4.5*298 - Add ability to specify a date range
"RTN","RCDPEM2",47,0)
 S DIR("A")="Select by date Range? (Y/N) ",DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEM2",48,0)
 D ^DIR K DIR
"RTN","RCDPEM2",49,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",50,0)
 I Y<1 G M1
"RTN","RCDPEM2",51,0)
 S DTRNG=Y  ; flag indicating date range selected
"RTN","RCDPEM2",52,0)
 K DIR
"RTN","RCDPEM2",53,0)
 S DIR("?")="Enter the earliest date for the selection range."
"RTN","RCDPEM2",54,0)
 ; value in DIR(0) for %DT = APE: ask date, past assumed, echo answer
"RTN","RCDPEM2",55,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: "
"RTN","RCDPEM2",56,0)
 D ^DIR K DIR
"RTN","RCDPEM2",57,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G M1Q
"RTN","RCDPEM2",58,0)
 S START=Y
"RTN","RCDPEM2",59,0)
 K DIR,X,Y
"RTN","RCDPEM2",60,0)
 S DIR("?")="Enter the latest date for the selection range."
"RTN","RCDPEM2",61,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPEM2",62,0)
 D ^DIR K DIR
"RTN","RCDPEM2",63,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G M1Q
"RTN","RCDPEM2",64,0)
 S END=Y
"RTN","RCDPEM2",65,0)
 ;
"RTN","RCDPEM2",66,0)
 ; Replace DIC call to EFT selector utility - PRCA*4.5*326
"RTN","RCDPEM2",67,0)
M1 S DIC("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",68,0)
 ;
"RTN","RCDPEM2",69,0)
 ; start PRCA*4.5*293 Add extra checks to filter out EFTs that have 
"RTN","RCDPEM2",70,0)
 ; a payment amount of zero or EFTs that have been removed.
"RTN","RCDPEM2",71,0)
 ; Only UNMATCHED EFTs with payment amt >0 and not removed should
"RTN","RCDPEM2",72,0)
 ; be selectable by the user.
"RTN","RCDPEM2",73,0)
 ;
"RTN","RCDPEM2",74,0)
 S DIC("S")="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPEM2",75,0)
 S:$G(DTRNG) DIC("S")=DIC("S")_"&'($P($G(^(0)),U,13)<START)&'($P($G(^(0)),U,13)>END)"
"RTN","RCDPEM2",76,0)
 S Y=$$ASKEFT^RCDPEU2(DIC("A"),DIC("S"))
"RTN","RCDPEM2",77,0)
 I Y'>0 G M1Q
"RTN","RCDPEM2",78,0)
 S RCEFT=+Y
"RTN","RCDPEM2",79,0)
 ; end PRCA*4.5*293
"RTN","RCDPEM2",80,0)
 W !
"RTN","RCDPEM2",81,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",82,0)
 W !
"RTN","RCDPEM2",83,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: "
"RTN","RCDPEM2",84,0)
 S DIR(0)="YA",DIR("B")="YES"
"RTN","RCDPEM2",85,0)
 D ^DIR K DIR
"RTN","RCDPEM2",86,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",87,0)
 I Y'=1 G M1
"RTN","RCDPEM2",88,0)
 ; Add EFT line identifier - PRCA*4.5*326
"RTN","RCDPEM2",89,0)
M12 S DIR("A")="SELECT THE UNMATCHED ERA TO MATCH TO EFT #" ; PRCA*4.5*326
"RTN","RCDPEM2",90,0)
 S DIR("A")=DIR("A")_$$GET1^DIQ(344.31,RCEFT,.01,"E")_": " ; PRCA*4.5*326
"RTN","RCDPEM2",91,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,8)"
"RTN","RCDPEM2",92,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",93,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",94,0)
 S RCERA=+Y
"RTN","RCDPEM2",95,0)
 W !
"RTN","RCDPEM2",96,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",97,0)
 W !
"RTN","RCDPEM2",98,0)
 S DIR("A")="ARE YOU SURE THIS IS THE CORRECT ERA TO MATCH TO?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",99,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",100,0)
 I Y'=1 G M12
"RTN","RCDPEM2",101,0)
 ;
"RTN","RCDPEM2",102,0)
M12A ; PRCA*4.5*303 - MATCH WL jumps here to complete the manual match
"RTN","RCDPEM2",103,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEM2",104,0)
 S ERATOT=$$GET1^DIQ(344.4,RCERA,.05,"I") ; ERA Paid Amount
"RTN","RCDPEM2",105,0)
 S EFTTOT=$$GET1^DIQ(344.31,RCEFT,.07,"I") ; EFT Amount of Payment
"RTN","RCDPEM2",106,0)
 S RCMATCH=(+ERATOT=+EFTTOT) ; Do the Totals Match
"RTN","RCDPEM2",107,0)
 ;
"RTN","RCDPEM2",108,0)
 ; If the totals don't match, manual match is not allowed
"RTN","RCDPEM2",109,0)
 ;I 'RCMATCH D  G M1Q
"RTN","RCDPEM2",110,0)
 ;. W !,*7,$J("",3)_"> The amount of payment on these two records do not agree."
"RTN","RCDPEM2",111,0)
 ;. K DIR S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEM2",112,0)
 ;. D ^DIR
"RTN","RCDPEM2",113,0)
 ;. S RCQUIT=1
"RTN","RCDPEM2",114,0)
 ;
"RTN","RCDPEM2",115,0)
 S XX=$$GET1^DIQ(344.4,RCERA,.06,"I") ; ERA Payer Name
"RTN","RCDPEM2",116,0)
 S YY=$$GET1^DIQ(344.31,RCEFT,.02,"I") ; EFT Payer Name
"RTN","RCDPEM2",117,0)
 S RCNAME=(XX=YY) ; Do the Payer Names Match
"RTN","RCDPEM2",118,0)
 I 'RCNAME D  G:RCQUIT M1Q
"RTN","RCDPEM2",119,0)
 . N Z
"RTN","RCDPEM2",120,0)
 . S RCQUIT=0,Z=1
"RTN","RCDPEM2",121,0)
 . S DIR("A",1)="***WARNING***"
"RTN","RCDPEM2",122,0)
 . I 'RCNAME S Z=Z+1,DIR("A",Z)=$J("",3)_"> The payer names on these two records do not agree"
"RTN","RCDPEM2",123,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE YOU SURE YOU WANT TO MATCH THESE 2 RECORDS?: "
"RTN","RCDPEM2",124,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",125,0)
 . I $S($D(DUOUT)!$D(DTOUT):1,Y'=1:1,1:0) S RCQUIT=1 Q
"RTN","RCDPEM2",126,0)
 ; END PRCA*4.5*326
"RTN","RCDPEM2",127,0)
 S DIE="^RCY(344.4,",DR=".09////1",DA=RCERA D ^DIE
"RTN","RCDPEM2",128,0)
 I '$D(Y) S DIE="^RCY(344.31,",DR=".08////1;.1////"_RCERA,DA=RCEFT D ^DIE
"RTN","RCDPEM2",129,0)
 S RCMTFLG=$S('$D(Y):1,1:0)
"RTN","RCDPEM2",130,0)
 ; PRCA*4.5*326 - Add EFT suffix
"RTN","RCDPEM2",131,0)
 W !,"EFT #"_$$GET1^DIQ(344.31,RCEFT,.01,"E")_" WAS "_$S(RCMTFLG:"SUCCESSFULLY",1:"NOT")_" MATCHED TO ERA #"_RCERA ; PRCA*4.5*326
"RTN","RCDPEM2",132,0)
 I 'RCMTFLG S DIR(0)="E" D ^DIR K DIR G M1Q
"RTN","RCDPEM2",133,0)
 ;PRCA*4.5*304 add ability to use auto-posting for a manually matched item
"RTN","RCDPEM2",134,0)
 ;  Only if the amount of payments match.
"RTN","RCDPEM2",135,0)
 I 'RCMATCH D  G M1Q    ;if payment amounts don't match, don't allow for auto-posting.
"RTN","RCDPEM2",136,0)
 . W !,"ERA/EFT balances do not match - cannot Mark for Auto-Post. Press any key." S DIR(0)="E" D ^DIR K DIR
"RTN","RCDPEM2",137,0)
 W !
"RTN","RCDPEM2",138,0)
 K DIR
"RTN","RCDPEM2",139,0)
 S DIR("A")="Do you wish to mark this entry for Auto Posting (Y/N)? "
"RTN","RCDPEM2",140,0)
 S DIR(0)="YA"
"RTN","RCDPEM2",141,0)
 D ^DIR
"RTN","RCDPEM2",142,0)
 I 'Y K DIR S DIR(0)="E" D ^DIR G M1Q
"RTN","RCDPEM2",143,0)
 N AUTOPOST
"RTN","RCDPEM2",144,0)
 S AUTOPOST=$$AUTOCHK2^RCDPEAP1(RCERA,1) ; Allow auto-post for CHK and ACH type ERA - PRCA*4.5*321
"RTN","RCDPEM2",145,0)
 I AUTOPOST D
"RTN","RCDPEM2",146,0)
 . D SETSTA^RCDPEAP(RCERA,0,"Manual Match: Marked as Auto-Post Candidate")
"RTN","RCDPEM2",147,0)
 . W !,"ERA has been successfully Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEM2",148,0)
 I 'AUTOPOST D
"RTN","RCDPEM2",149,0)
 . D AUDITLOG^RCDPEAP(RCERA,"","Manual Match: Not Marked as Auto-Post Candidate-"_$P(AUTOPOST,U,2))
"RTN","RCDPEM2",150,0)
 . W !,"ERA was NOT Marked as an Auto-Post CANDIDATE - ",$P(AUTOPOST,U,2)
"RTN","RCDPEM2",151,0)
 K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPEM2",152,0)
M1Q Q
"RTN","RCDPEM2",153,0)
 ;
"RTN","RCDPEM2",154,0)
MATCH2 ; Manually 'match' a 0-balance EFT to a paper EOB
"RTN","RCDPEM2",155,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCEFT,RCRCPT
"RTN","RCDPEM2",156,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE EFT DETAIL RECORD",!,"AS MATCHED TO A PAPER EOB"
"RTN","RCDPEM2",157,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEM2",158,0)
M2 S DIC("A")="SELECT THE UNMATCHED 0-BALANCE EFT TO MARK AS MATCHED TO PAPER EOB: "
"RTN","RCDPEM2",159,0)
 S DIC("S")="I '$P(^(0),U,8),'$P(^(0),U,7)"
"RTN","RCDPEM2",160,0)
 S Y=$$ASKEFT^RCDPEU2(DIC("A"),DIC("S"))
"RTN","RCDPEM2",161,0)
 I Y'>0 G M2Q
"RTN","RCDPEM2",162,0)
 ; END PRCA*4.5*326
"RTN","RCDPEM2",163,0)
 S RCEFT=+Y
"RTN","RCDPEM2",164,0)
 W !
"RTN","RCDPEM2",165,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",166,0)
 W !
"RTN","RCDPEM2",167,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MARK AS MATCHED?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",168,0)
 I $D(DUOUT)!$D(DTOUT) G M2Q
"RTN","RCDPEM2",169,0)
 I Y'=1 G M2
"RTN","RCDPEM2",170,0)
 S DIE="^RCY(344.31,",DR=".08////2",DA=RCEFT D ^DIE
"RTN","RCDPEM2",171,0)
 S DIR(0)="EA",DIR("A")="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCHED TO PAPER EOB" D ^DIR K DIR
"RTN","RCDPEM2",172,0)
M2Q Q
"RTN","RCDPEM2",173,0)
 ;
"RTN","RCDPEM2",174,0)
MANTR ; Mark an EFT detail record as 'TR' posted manually
"RTN","RCDPEM2",175,0)
 N DA,DR,DIC,DIE,DIR,X,Y,RCEFT,DUOUT,DTOUT,RCZ0,RCTR,RCHOW
"RTN","RCDPEM2",176,0)
 ; EFT detail cannot be associated with a receipt or TR document
"RTN","RCDPEM2",177,0)
 ;
"RTN","RCDPEM2",178,0)
 W !,"*****",!," YOU SHOULD ONLY USE THIS OPTION IF YOU HAVE AN EFT DETAIL RECORD ON YOUR",!," UNAPPLIED DEPOSIT REPORT WHOSE DETAIL WAS ENTERED ON LINE VIA A TR DOCUMENT",!,"*****",!
"RTN","RCDPEM2",179,0)
 S DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,16)="""",$P(^(0),U,11)",DIC("A")="SELECT THE EFT DETAIL WHOSE 'TR' DOC WAS MANUALLY ENTERED ON LINE: ",DIC="^RCY(344.31,"
"RTN","RCDPEM2",180,0)
 W ! D ^DIC K DIC
"RTN","RCDPEM2",181,0)
 I Y'>0 G MANTRQ
"RTN","RCDPEM2",182,0)
 S RCEFT=+Y,RCZ0=$G(^RCY(344.31,RCEFT,0))
"RTN","RCDPEM2",183,0)
 S DIR(0)="FA^2:30^K:X'?1""TR"".E X",DIR("A")="ENTER THE TR DOC # THAT WAS ENTERED ON-LINE FOR THE EFT DETAIL: "
"RTN","RCDPEM2",184,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",185,0)
 I $D(DTOUT)!$D(DUOUT) G MANTRQ
"RTN","RCDPEM2",186,0)
 S RCTR=Y,DR=""
"RTN","RCDPEM2",187,0)
 ;
"RTN","RCDPEM2",188,0)
 I '$P(RCZ0,U,8) D  G:RCQUIT MANTRQ  ;Unmatched
"RTN","RCDPEM2",189,0)
 . S DIR(0)="SA^E:ELECTRONIC ERA;P:PAPER EOB",DIR("A")="WAS THE EFT DETAIL RECEIVED BY (E)RA or (P)APER EOB?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",190,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEM2",191,0)
 . S RCHOW=Y,DR=""
"RTN","RCDPEM2",192,0)
 . I RCHOW="E" D
"RTN","RCDPEM2",193,0)
 .. S DR=";.09R;.08////1"
"RTN","RCDPEM2",194,0)
 . I RCHOW="P" D
"RTN","RCDPEM2",195,0)
 .. S DR=";.08////2"
"RTN","RCDPEM2",196,0)
 ;
"RTN","RCDPEM2",197,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS WILL MARK EFT DETAIL #: "_RCEFT_" AS MANUALLY POSTED",DIR("A",2)="  USING TR DOC: "_RCTR
"RTN","RCDPEM2",198,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",199,0)
 I Y'=1 D  G MANTRQ
"RTN","RCDPEM2",200,0)
 . S DIR(0)="EA",DIR("A")="EFT NOT UPDATED - Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEM2",201,0)
 S DIE="^RCY(344.31,",DA=RCEFT,DR=".16R"_DR D ^DIE
"RTN","RCDPEM2",202,0)
 I $D(Y) D
"RTN","RCDPEM2",203,0)
 . S DIE="^RCY(344.31,",DA=RCEFT,DR=".16///@;.08///"_$S($P(RCZ0,U,8)'="":$P(RCZ0,U,8),1:"@") D ^DIE
"RTN","RCDPEM2",204,0)
 . S DIR("A")="EFT NOT UPDATED - Press ENTER to continue: "
"RTN","RCDPEM2",205,0)
 E  D
"RTN","RCDPEM2",206,0)
 . S DIR("A")="STATUS UPDATED FOR EFT DETAIL #: "_RCEFT_" - Press ENTER to continue: "
"RTN","RCDPEM2",207,0)
 S DIR(0)="EA"
"RTN","RCDPEM2",208,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",209,0)
 ;
"RTN","RCDPEM2",210,0)
MANTRQ Q
"RTN","RCDPEM2",211,0)
 ;
"RTN","RCDPEM2",212,0)
CHK() ; Function returns the ien of CHECK/MO payment type
"RTN","RCDPEM2",213,0)
 Q +$O(^RC(341.1,"AC",4,0))
"RTN","RCDPEM2",214,0)
 ;
"RTN","RCDPEM2",215,0)
 ;
"RTN","RCDPEM2",216,0)
 ;
"RTN","RCDPEM2",217,0)
MATCH3 ; Manually 'match' a 0-balance ERA that has no check or EFT
"RTN","RCDPEM2",218,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCERA,RCRCPT
"RTN","RCDPEM2",219,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE ERA WITH NO",!,"CHECK OR EFT AS 'MATCH-0 PAYMENT' TO REMOVE IT FROM THE ERA AGING REPORT"
"RTN","RCDPEM2",220,0)
M3 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE ERA TO MARK AS MATCHED: "
"RTN","RCDPEM2",221,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,5)"
"RTN","RCDPEM2",222,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",223,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M3Q
"RTN","RCDPEM2",224,0)
 S RCERA=+Y
"RTN","RCDPEM2",225,0)
 W !
"RTN","RCDPEM2",226,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",227,0)
 W !
"RTN","RCDPEM2",228,0)
 S DIR("A")="ARE YOU SURE THIS IS THE ERA YOU WANT TO MARK AS MATCH-0 PAYMENT? (Y/N) ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",229,0)
 I $D(DUOUT)!$D(DTOUT) G M3Q
"RTN","RCDPEM2",230,0)
 I Y'=1 G M3
"RTN","RCDPEM2",231,0)
 S DIE="^RCY(344.4,",DR=".09////3",DA=RCERA D ^DIE
"RTN","RCDPEM2",232,0)
 S DIR(0)="EA",DIR("A")="ERA #"_RCERA_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCH-0 PAYMENT" D ^DIR K DIR
"RTN","RCDPEM2",233,0)
M3Q Q
"RTN","RCDPEM2",234,0)
 ;
"RTN","RCDPEM2",235,0)
UNMATCH ; Used to 'unmatch' an ERA matched in error
"RTN","RCDPEM2",236,0)
 N AUTOPOST,DA,DIC,DIE,DIK,DIR,DIROUT,DR,DTOUT,DUOUTX,RCEFT,RCQUIT,RCWL,X,XX,Y
"RTN","RCDPEM2",237,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.4,"
"RTN","RCDPEM2",238,0)
 S DIC("S")="I '$P(^(0),U,8),$S('$P(^(0),U,14):1,1:$P(^(0),U,9)=3),$P(^(0),U,9)"
"RTN","RCDPEM2",239,0)
 D ^DIC K DIC
"RTN","RCDPEM2",240,0)
 Q:Y'>0
"RTN","RCDPEM2",241,0)
 S RCWL=+Y,RCQUIT=0
"RTN","RCDPEM2",242,0)
 I $D(^RCY(344.49,RCWL,0)) D  Q:RCQUIT
"RTN","RCDPEM2",243,0)
 . S DIR(0)="YA"
"RTN","RCDPEM2",244,0)
 . S XX="THIS ERA ALREADY HAS A SCRATCH PAD ENTRY AND MUST BE DELETED BEFORE IT CAN BE"
"RTN","RCDPEM2",245,0)
 . S DIR("A",1)=XX
"RTN","RCDPEM2",246,0)
 . S DIR("A")="UNMATCHED. DO YOU WANT TO DELETE THE SCRATCH PAD ENTRY FOR THIS ERA NOW? "
"RTN","RCDPEM2",247,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",248,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",249,0)
 . S DIK="^RCY(344.49,",DA=RCWL D ^DIK
"RTN","RCDPEM2",250,0)
 S AUTOPOST=""
"RTN","RCDPEM2",251,0)
 I $O(^RCY(344.31,"AERA",RCWL,0)) S RCEFT=+$O(^(0)) D  Q:RCQUIT
"RTN","RCDPEM2",252,0)
 . S AUTOPOST=$$GET1^DIQ(344.4,RCWL_",",4.02,"I")
"RTN","RCDPEM2",253,0)
 . W !!,"THIS ERA IS MATCHED TO EFT #"_$$OUT^RCDPEM3(RCEFT)
"RTN","RCDPEM2",254,0)
 . I AUTOPOST=0 W !,"* WARNING: This ERA will be Un-Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEM2",255,0)
 . S DIR("A")="ARE YOU SURE YOU WANT TO UNMATCH THEM? ",DIR(0)="YA"
"RTN","RCDPEM2",256,0)
 . D ^DIR K DIR
"RTN","RCDPEM2",257,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",258,0)
 . S DIE="^RCY(344.31,",DR=".1///@;.08////0",DA=RCEFT D ^DIE
"RTN","RCDPEM2",259,0)
 . W !,"EFT #"_$$OUT^RCDPEM3(RCEFT)_" IS NOW UNMATCHED",!
"RTN","RCDPEM2",260,0)
 ; PRCA*4.5*326 - If check if unmatched, delete date matched and user
"RTN","RCDPEM2",261,0)
 S DIE="^RCY(344.4,",DR=".09////0;.13///@;.14////0;5.03///@;5.04///@"
"RTN","RCDPEM2",262,0)
 S DA=RCWL
"RTN","RCDPEM2",263,0)
 D ^DIE
"RTN","RCDPEM2",264,0)
 I AUTOPOST=0 D SETSTA^RCDPEAP(RCWL,"@","Unmatch: Removed as Auto-Post Candidate")
"RTN","RCDPEM2",265,0)
 S DIR("A")="ERA HAS BEEN SUCCESSFULLY UNMATCHED - Press ENTER to continue: "
"RTN","RCDPEM2",266,0)
 S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEM2",267,0)
 Q
"RTN","RCDPEM2",268,0)
 ;
"RTN","RCDPEM2",269,0)
 ; PRCA*4.5*284 - Changed option name from 'Mark ERA Return to Payer' to 'Remove ERA from Active Worklist'
"RTN","RCDPEM2",270,0)
RETN ; Entrypoint for Remove ERA from Active Worklist
"RTN","RCDPEM2",271,0)
 N DIR,X,Y,DTOUT,DUOUT,DIC,RCY,DIE,DA,DR,MSG,%
"RTN","RCDPEM2",272,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPE MARK ERA",DUZ)
"RTN","RCDPEM2",273,0)
 I 'MSG(0) W !!,"SORRY, YOU ARE NOT AUTHORIZED TO USE THIS OPTION",!,"This option is locked with RCDPE MARK ERA key.",! S DIR(0)="E" D ^DIR K DIR Q
"RTN","RCDPEM2",274,0)
 W !!,"Use this option to remove an ERA from the EEOB Worklist that should not have"
"RTN","RCDPEM2",275,0)
 W !,"been sent to your site by the payer; or the ERA cannot be removed off the"
"RTN","RCDPEM2",276,0)
 W !,"Worklist using the 'Update ERA Posted Using Paper EOB' option."
"RTN","RCDPEM2",277,0)
 W !!,"This option is only to be used if the paper check has been sent back to the"
"RTN","RCDPEM2",278,0)
 W !,"payer without being deposited.  Once removed, the ERA can no longer be"
"RTN","RCDPEM2",279,0)
 W !,"accessed for processing, but can be viewed under the posted Worklist. For"
"RTN","RCDPEM2",280,0)
 W !,"auditing purposes, this option requires the user to enter a reason for"
"RTN","RCDPEM2",281,0)
 W !,"removing the ERA.",!
"RTN","RCDPEM2",282,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ",DIC("S")="I '$P(^(0),U,9),'$P(^(0),U,14)" D ^DIC K DIC
"RTN","RCDPEM2",283,0)
 Q:Y'>0
"RTN","RCDPEM2",284,0)
 S RCY=+Y
"RTN","RCDPEM2",285,0)
 S DIR(0)="YA",DIR("A",1)="THIS WILL REMOVE THE ERA # "_+Y_" FROM THE ACTIVE WORKLIST",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? " W ! D ^DIR K DIR
"RTN","RCDPEM2",286,0)
 W !
"RTN","RCDPEM2",287,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=0) D NOCHNG^RCDPEMB Q
"RTN","RCDPEM2",288,0)
 S DIE="^RCY(344.4,",DA=RCY,DR=".18" D ^DIE
"RTN","RCDPEM2",289,0)
 I $D(Y) D NOCHNG^RCDPEMB Q
"RTN","RCDPEM2",290,0)
 ; PRCA*4.5*284 Set EFT MATCH STATUS (#344.4,.09) as '4' FOR REMOVED rather than '2' FOR MATCHED TO PAPER CHECK
"RTN","RCDPEM2",291,0)
 D NOW^%DTC S DR=".14////4;.09////4;.16////"_DUZ_";.17////"_% D ^DIE
"RTN","RCDPEM2",292,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEM2",293,0)
 W ! D ^DIR
"RTN","RCDPEM2",294,0)
 Q
"RTN","RCDPEM21")
0^41^B34544967
"RTN","RCDPEM21",1,0)
RCDPEM21 ;ALB/TMK/PJH - MANUAL MATCH TO PAPER EOB ;Jun 11, 2014@13:24:36
"RTN","RCDPEM21",2,0)
 ;;4.5;Accounts Receivable;**173,208,276,284,293,298,303,304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEM21",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM21",4,0)
 Q
"RTN","RCDPEM21",5,0)
 ;
"RTN","RCDPEM21",6,0)
 ; Called from [RCDPE ERA POSTED BY PAPER EOB]
"RTN","RCDPEM21",7,0)
 ;
"RTN","RCDPEM21",8,0)
 ; Begin PRCA*4.5*276 - PJH
"RTN","RCDPEM21",9,0)
POSTED ;
"RTN","RCDPEM21",10,0)
 N DIR,X,Y
"RTN","RCDPEM21",11,0)
 S DIR("A")="Select type of receipt to ERA link"
"RTN","RCDPEM21",12,0)
 S DIR("B")="M"
"RTN","RCDPEM21",13,0)
 S DIR(0)="S^M:Manually select receipt to post;"
"RTN","RCDPEM21",14,0)
 S DIR(0)=DIR(0)_"A:Automatic search for receipt to post"
"RTN","RCDPEM21",15,0)
 D ^DIR K DIR
"RTN","RCDPEM21",16,0)
 I Y="M" D MANUAL Q
"RTN","RCDPEM21",17,0)
 I Y="A" D AUTO
"RTN","RCDPEM21",18,0)
 Q
"RTN","RCDPEM21",19,0)
 ;
"RTN","RCDPEM21",20,0)
MANUAL ; Mark an ERA as posted when the data
"RTN","RCDPEM21",21,0)
 ; was previously posted using paper EOB information
"RTN","RCDPEM21",22,0)
 N DIC,DIE,DIR,DA,DR,ERA,RCPT,X,Y,%
"RTN","RCDPEM21",23,0)
 ; Must be unmatched or matched to paper check, must be accepted by FMS, must not be posted yet
"RTN","RCDPEM21",24,0)
 W !!,"THIS OPTION IS USED WHEN YOU HAVE POSTED AN ERA PAID WITH A PAPER CHECK",!,"BY USING THE PAPER EOB AND YOU DID NOT REFERENCE THE ERA IN THE RECEIPT",!!
"RTN","RCDPEM21",25,0)
MAN1 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0",DIC="^RCY(344.4,",DIC(0)="AEMQ"
"RTN","RCDPEM21",26,0)
 D ^DIC K DIC
"RTN","RCDPEM21",27,0)
 ;
"RTN","RCDPEM21",28,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM21",29,0)
 ;
"RTN","RCDPEM21",30,0)
 ;Check if ERA is already linked to a receipt
"RTN","RCDPEM21",31,0)
 I $$RCHECK(+Y) G MAN1
"RTN","RCDPEM21",32,0)
 S ERA=+Y
"RTN","RCDPEM21",33,0)
 ;
"RTN","RCDPEM21",34,0)
 S DIC="^RCY(344,",DIC(0)="AEMQ",DIC("A")="RECEIPT: ",DIC("S")="I $$FMS^RCDPEM21(Y,0)"
"RTN","RCDPEM21",35,0)
 D ^DIC K DIC
"RTN","RCDPEM21",36,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM21",37,0)
 S RCPT=+Y
"RTN","RCDPEM21",38,0)
 ;
"RTN","RCDPEM21",39,0)
 D NOW^%DTC
"RTN","RCDPEM21",40,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPEM21",41,0)
 S DIE="^RCY(344.4,",DR=".08////"_RCPT_";.09////2;.14////2;20.03////1",DA=ERA
"RTN","RCDPEM21",42,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPEM21",43,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPEM21",44,0)
 D ^DIE
"RTN","RCDPEM21",45,0)
 I '$D(Y) D
"RTN","RCDPEM21",46,0)
 . S DIR(0)="EA",DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB",DIR("A")="Press ENTER to continue: " D ^DIR K DIR
"RTN","RCDPEM21",47,0)
 ;
"RTN","RCDPEM21",48,0)
MANUALQ Q
"RTN","RCDPEM21",49,0)
 ;
"RTN","RCDPEM21",50,0)
 ;VISN 15 software - created by Karen Flores
"RTN","RCDPEM21",51,0)
 ;
"RTN","RCDPEM21",52,0)
AUTO ;Select ERA's for linking to receipt
"RTN","RCDPEM21",53,0)
 N EXIT
"RTN","RCDPEM21",54,0)
 S EXIT=0 F  D LNKERA Q:EXIT
"RTN","RCDPEM21",55,0)
 Q
"RTN","RCDPEM21",56,0)
 ;
"RTN","RCDPEM21",57,0)
RCHECK(RCSCR) ;Check if already linked to a receipt
"RTN","RCDPEM21",58,0)
 N REC,RNUM,RNAM,AMT
"RTN","RCDPEM21",59,0)
 S REC=$G(^RCY(344.4,RCSCR,0)),RNUM=$P(REC,U,8)
"RTN","RCDPEM21",60,0)
 ;Ignore check if zero amount ERA
"RTN","RCDPEM21",61,0)
 Q:'$P(REC,U,5) 0
"RTN","RCDPEM21",62,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM21",63,0)
 Q:'RNUM 0
"RTN","RCDPEM21",64,0)
 S RNAM=$P($G(^RCY(344,RNUM,0)),U)
"RTN","RCDPEM21",65,0)
 W !!,"ERA ",RCSCR," is already linked to receipt ",RNAM,!
"RTN","RCDPEM21",66,0)
 Q 1
"RTN","RCDPEM21",67,0)
 ;
"RTN","RCDPEM21",68,0)
LNKERA ;Select ERA
"RTN","RCDPEM21",69,0)
 N ABORT,DIC,DUOUT,DTOUT,REC,RCSCR,X,Y
"RTN","RCDPEM21",70,0)
 ;Must be unposted and either unmatched or matched to paper check
"RTN","RCDPEM21",71,0)
 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0"
"RTN","RCDPEM21",72,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" W ! D ^DIC K DIC
"RTN","RCDPEM21",73,0)
 S RCSCR=+Y I RCSCR'>0 S EXIT=1 Q
"RTN","RCDPEM21",74,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM21",75,0)
 Q:$$RCHECK(RCSCR)
"RTN","RCDPEM21",76,0)
 ;
"RTN","RCDPEM21",77,0)
 ;Finds receipt automatically from AR TRANSACTION file #433 
"RTN","RCDPEM21",78,0)
 N AMT,ART,ARTND1,ATTY,BILL,EOB,EOBND,FOUND,RCND,RCSCR1,RECEPT,TAMT
"RTN","RCDPEM21",79,0)
 N TRACE
"RTN","RCDPEM21",80,0)
 ;Trace# from ERA
"RTN","RCDPEM21",81,0)
 S TRACE=$P($G(^RCY(344.4,RCSCR,0)),U,2)
"RTN","RCDPEM21",82,0)
 ;Clear workfile
"RTN","RCDPEM21",83,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM21",84,0)
 ;
"RTN","RCDPEM21",85,0)
 S (FOUND,ABORT,RCSCR1)=0
"RTN","RCDPEM21",86,0)
 ;Scan claim lines in ERA for non zero bills
"RTN","RCDPEM21",87,0)
 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:+RCSCR1=0!(FOUND)  D
"RTN","RCDPEM21",88,0)
 .S RCND=$G(^RCY(344.4,RCSCR,1,RCSCR1,0))
"RTN","RCDPEM21",89,0)
 .;Ignore bill if AMOUNT PAID is zero
"RTN","RCDPEM21",90,0)
 .S AMT=$P(RCND,"^",3) Q:+AMT=0
"RTN","RCDPEM21",91,0)
 .;Ignore if EOB has no EOB detail record
"RTN","RCDPEM21",92,0)
 .S EOB=+$P(RCND,"^",2) Q:'EOB
"RTN","RCDPEM21",93,0)
 .;Get EOB detail record
"RTN","RCDPEM21",94,0)
 .S EOBND=$G(^IBM(361.1,EOB,0))
"RTN","RCDPEM21",95,0)
 .;Extract Bill number from EOB detail
"RTN","RCDPEM21",96,0)
 .S BILL=$P(EOBND,"^",1) Q:BILL=""
"RTN","RCDPEM21",97,0)
 .;Ignore duplicate bills on ERA
"RTN","RCDPEM21",98,0)
 .Q:$D(^TMP("RCDPEM2",$J,BILL))
"RTN","RCDPEM21",99,0)
 .S ^TMP("RCDPEM2",$J,BILL)=""
"RTN","RCDPEM21",100,0)
 .;Search AR TRANSACTION file #433 for the bill - newest first
"RTN","RCDPEM21",101,0)
 .S ART=""
"RTN","RCDPEM21",102,0)
 .F  S ART=$O(^PRCA(433,"C",BILL,ART),-1) Q:+ART=0!(FOUND)  D
"RTN","RCDPEM21",103,0)
 ..S ARTND1=$G(^PRCA(433,ART,1))
"RTN","RCDPEM21",104,0)
 ..;Get transaction type
"RTN","RCDPEM21",105,0)
 ..S ATTY=$P(ARTND1,"^",2) Q:'ATTY
"RTN","RCDPEM21",106,0)
 ..;Ignore if not a payment
"RTN","RCDPEM21",107,0)
 ..S ATTY=$P($G(^PRCA(430.3,ATTY,0)),"^",1) Q:ATTY'["PAYMENT"
"RTN","RCDPEM21",108,0)
 ..;Get receipt number
"RTN","RCDPEM21",109,0)
 ..S RECEPT=$P(ARTND1,"^",3) Q:RECEPT=""
"RTN","RCDPEM21",110,0)
 ..;Ignore receipt if status is not 'ACCEPTED BY FMS'
"RTN","RCDPEM21",111,0)
 ..Q:'$$FMS(RECEPT,1)
"RTN","RCDPEM21",112,0)
 ..W !!,"PATIENT: "_$$PNM4^RCDPEWL1(RCSCR,RCSCR1)
"RTN","RCDPEM21",113,0)
 ..W !,"Bill number: ",$P($G(^DGCR(399,BILL,0)),U)
"RTN","RCDPEM21",114,0)
 ..W !,"Check #: ",$$CHQ(RECEPT,BILL)
"RTN","RCDPEM21",115,0)
 ..W !,"Trace #: ",TRACE
"RTN","RCDPEM21",116,0)
 ..W !,"DOS: ",$$FMTE^XLFDT($P($G(^DGCR(399,BILL,0)),U,3))
"RTN","RCDPEM21",117,0)
 ..S TAMT=+$P(ARTND1,"^",5)
"RTN","RCDPEM21",118,0)
 ..W !,"AR Transaction amount: ",TAMT
"RTN","RCDPEM21",119,0)
 ..W !,"RECEIPT#: ",RECEPT
"RTN","RCDPEM21",120,0)
 ..W !,"Date of Receipt: ",$$FMTE^XLFDT($$RCDATE^RCDPRU(RECEPT))
"RTN","RCDPEM21",121,0)
 ..W !,"Total Receipt AMOUNT: ",$J($$AMT^RCDPRU(RECEPT),2,2),!
"RTN","RCDPEM21",122,0)
 .. ; PRCA*4.5*284 Change default response from YES to NO
"RTN","RCDPEM21",123,0)
 ..S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPEM21",124,0)
 ..S DIR("A")="Link to update Remittance entry # "_RCSCR
"RTN","RCDPEM21",125,0)
 ..S DIR("A")=DIR("A")_" with receipt "_RECEPT
"RTN","RCDPEM21",126,0)
 ..D ^DIR K DIR
"RTN","RCDPEM21",127,0)
 ..;Aborted
"RTN","RCDPEM21",128,0)
 ..I $D(DUOUT)!$D(DTOUT) S ABORT=1,FOUND=1 Q
"RTN","RCDPEM21",129,0)
 ..;Attempt to update ERA - finish if successful
"RTN","RCDPEM21",130,0)
 ..I +Y>0 D UPDERA(RCSCR,RECEPT,.FOUND)
"RTN","RCDPEM21",131,0)
 ;Update failed
"RTN","RCDPEM21",132,0)
 I FOUND=0 W !!,"No matching payment transactions found for this ERA"
"RTN","RCDPEM21",133,0)
 ;Clear workfile
"RTN","RCDPEM21",134,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM21",135,0)
 Q
"RTN","RCDPEM21",136,0)
 ;
"RTN","RCDPEM21",137,0)
 ; Moved to RCDPRU because of size issues PRCA*4.5*303
"RTN","RCDPEM21",138,0)
UPDERA(DA,RECEPT,FOUND) ;Mark ERA as posted to paper EOB
"RTN","RCDPEM21",139,0)
 D UPDERA^RCDPRU(DA,RECEPT,.FOUND)
"RTN","RCDPEM21",140,0)
 Q FOUND
"RTN","RCDPEM21",141,0)
 ;
"RTN","RCDPEM21",142,0)
 ;Check FMS status
"RTN","RCDPEM21",143,0)
FMS(RECEPT,FLG) ;
"RTN","RCDPEM21",144,0)
 ; FLG = 1 if RECEPT contains receipt number
"RTN","RCDPEM21",145,0)
 ; FLG = 0 if RECEPT contains ien of the receipt
"RTN","RCDPEM21",146,0)
 N FMSDOCNO,RCRECTDA,RES
"RTN","RCDPEM21",147,0)
 S RES=0 I $G(RECEPT)="" G FMSX
"RTN","RCDPEM21",148,0)
 ;Get receipt IEN
"RTN","RCDPEM21",149,0)
 I 'FLG S RCRECTDA=RECEPT
"RTN","RCDPEM21",150,0)
 I FLG S RCRECTDA=$O(^RCY(344,"B",RECEPT,0))
"RTN","RCDPEM21",151,0)
 I 'RCRECTDA G FMSX
"RTN","RCDPEM21",152,0)
 ;Get FMS document number
"RTN","RCDPEM21",153,0)
 S FMSDOCNO=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPEM21",154,0)
 ;Ignore if not accepted
"RTN","RCDPEM21",155,0)
 I $P(FMSDOCNO,U,2)'="ACCEPTED BY FMS" G FMSX
"RTN","RCDPEM21",156,0)
 ;Otherwise can be linked
"RTN","RCDPEM21",157,0)
 S RES=1
"RTN","RCDPEM21",158,0)
FMSX ;
"RTN","RCDPEM21",159,0)
 Q RES
"RTN","RCDPEM21",160,0)
 ;
"RTN","RCDPEM21",161,0)
CHQ(RECEPT,BILL) ;Get check number for this bill
"RTN","RCDPEM21",162,0)
 N RCRECTDA,RCTRAN,RCCHK,PATBILL
"RTN","RCDPEM21",163,0)
 ;Get receipt IEN
"RTN","RCDPEM21",164,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA ""
"RTN","RCDPEM21",165,0)
 ;Scan Receipt looking for this bill IEN
"RTN","RCDPEM21",166,0)
 S RCTRAN=0,RCCHK=""
"RTN","RCDPEM21",167,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D  Q:RCCHK]""
"RTN","RCDPEM21",168,0)
 .;Check for match on bill IEN
"RTN","RCDPEM21",169,0)
 .S PATBILL=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,3)
"RTN","RCDPEM21",170,0)
 .;Ignore Patient pointers or null field
"RTN","RCDPEM21",171,0)
 .Q:$P(PATBILL,";",2)'="PRCA(430,"
"RTN","RCDPEM21",172,0)
 .;Compare bill IEN399 to IEN430
"RTN","RCDPEM21",173,0)
 .Q:$P(PATBILL,";")'=BILL
"RTN","RCDPEM21",174,0)
 .;Get check number for this line
"RTN","RCDPEM21",175,0)
 .S RCCHK=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,7)
"RTN","RCDPEM21",176,0)
 Q RCCHK
"RTN","RCDPEM21",177,0)
 ;
"RTN","RCDPEM21",178,0)
 ;; End PRCA*4.5*276 - PJH
"RTN","RCDPEM21",179,0)
 ;
"RTN","RCDPEM3")
0^11^B205394257
"RTN","RCDPEM3",1,0)
RCDPEM3 ;OIFO-BAYPINES/RBN - ERA AUDIT REPORT and return EFT function ;Jun 06, 2014@19:11:19
"RTN","RCDPEM3",2,0)
 ;;4.5;Accounts Receivable;**276,284,298,326**;Mar 20, 1995;Build 26
"RTN","RCDPEM3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM3",4,0)
 ;
"RTN","RCDPEM3",5,0)
 ; General read access of IB EOB file #361.1 is allowed from AR (IA 4051)
"RTN","RCDPEM3",6,0)
 ; completely refactored for PRCA*4.5*298
"RTN","RCDPEM3",7,0)
 Q
"RTN","RCDPEM3",8,0)
 ;
"RTN","RCDPEM3",9,0)
 ; PRCA*4.5*284 - Changed report name from 'Mark ERA returned to Payer' to 'Remove ERA from active worklist'
"RTN","RCDPEM3",10,0)
 ;
"RTN","RCDPEM3",11,0)
 ; generates an audit report that displays all ERAs that have been removed from the worklist.  
"RTN","RCDPEM3",12,0)
 ; The user can select filters with which to limit the number of ERAs displayed:
"RTN","RCDPEM3",13,0)
 ;   Station/Division - default is all
"RTN","RCDPEM3",14,0)
 ;   Date Range - default is all
"RTN","RCDPEM3",15,0)
 ;   Start Date type - no default, P:Date removed from worklist, R:Date ERA Received, B:Both Dates
"RTN","RCDPEM3",16,0)
 ;                 
"RTN","RCDPEM3",17,0)
 ; INPUT:
"RTN","RCDPEM3",18,0)
 ;    user is prompted for the Station/Division, Date/Time range, and start/end dates
"RTN","RCDPEM3",19,0)
 ;
"RTN","RCDPEM3",20,0)
 ; OUTPUT:
"RTN","RCDPEM3",21,0)
 ;  report which displays returned ERAs, it contains:
"RTN","RCDPEM3",22,0)
 ;    User's name -  who performed the transaction
"RTN","RCDPEM3",23,0)
 ;    Date/Time ERA received from the payer
"RTN","RCDPEM3",24,0)
 ;    Date/Time ERA removed from worklist
"RTN","RCDPEM3",25,0)
 ;    Free text reasons for returning the ERA to the payer
"RTN","RCDPEM3",26,0)
 ;    ERA number
"RTN","RCDPEM3",27,0)
 ;    Trace number
"RTN","RCDPEM3",28,0)
 ;    Dollar amount of ERA
"RTN","RCDPEM3",29,0)
 ;    Payer name
"RTN","RCDPEM3",30,0)
 ;
"RTN","RCDPEM3",31,0)
 ; data taken from ELECTRONIC REMITTANCE ADVICE file (#344.4)
"RTN","RCDPEM3",32,0)
 ;                
"RTN","RCDPEM3",33,0)
 ; ^TMP($J,"RC REMV ERA", line #) structure:
"RTN","RCDPEM3",34,0)
 ;    STATION NAME^PAYER^ERA #^DEPOSIT #^DATE REMOVED^USER^REMOVE REASON^ERA #^ERA DATE^T0TAL AMOUNT
"RTN","RCDPEM3",35,0)
 ;
"RTN","RCDPEM3",36,0)
EN ; entry point for Remove ERA from Active Worklist Audit Report [RCDPE REMOVED ERA AUDIT]
"RTN","RCDPEM3",37,0)
 N %ZIS,I,RCDISPTY,RCDIV,RCDTRNG,RCEND,RCHDR,RCLNCNT,RCLSTMGR,RCPAGE,RCPG,RCSSD,RCSTA,RCSTART,RCSTNO,RCSTOP,RCTMPND
"RTN","RCDPEM3",38,0)
 N RCTYPE,VAUTD,X,Y
"RTN","RCDPEM3",39,0)
 ; RCDTRNG  - Date/Time range of report (range flag^start date^end date)
"RTN","RCDPEM3",40,0)
 ; RCDISPTY   - Display/print/Excel flag
"RTN","RCDPEM3",41,0)
 ; RCPAGE - page number of the report
"RTN","RCDPEM3",42,0)
 ; RCSSD - Selected Start Date (W:Date Removed from Worklist;R:Date ERA Received;B:Both Dates
"RTN","RCDPEM3",43,0)
 ; RCLNCNT - counter for SL^RCDPEARL
"RTN","RCDPEM3",44,0)
 ; RCSTOP - flag to exit listing
"RTN","RCDPEM3",45,0)
 ; RCTMPND - storage node for SL^RCDPEARL
"RTN","RCDPEM3",46,0)
 ; RCTYPE - M/P/T/A = MEDICAL/PHARMACY/TRICARE/ALL
"RTN","RCDPEM3",47,0)
 ;
"RTN","RCDPEM3",48,0)
 S RCLSTMGR=""  ; ListMan flag, set to '^' if sent to Excel
"RTN","RCDPEM3",49,0)
 S RCTMPND=""  ; if null, report lines not stored in ^TMP, written directly
"RTN","RCDPEM3",50,0)
 S (RCSTOP,RCPG,RCLNCNT)=0  ; initial values of zero
"RTN","RCDPEM3",51,0)
 ; S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEM3",52,0)
 S RCPAGE=0  ; report page number
"RTN","RCDPEM3",53,0)
 ; PRCA*4.5*276 - Modify Header display
"RTN","RCDPEM3",54,0)
 S RCDIV="ALL"  ; default to All divisions
"RTN","RCDPEM3",55,0)
 S RCSSD=$$DTPRB^RCDPEM4() G:RCSSD=0 EXIT
"RTN","RCDPEM3",56,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'RCDTRNG EXIT
"RTN","RCDPEM3",57,0)
 S RCSTART=$P(RCDTRNG,U,2),RCEND=$P(RCDTRNG,U,3)
"RTN","RCDPEM3",58,0)
 ; VAUTD=1 for 'ALL'
"RTN","RCDPEM3",59,0)
 D DIVISION^VAUTOMA Q:Y=-1
"RTN","RCDPEM3",60,0)
 I 'VAUTD&($D(VAUTD)'=11) G EXIT
"RTN","RCDPEM3",61,0)
 I VAUTD=0 D
"RTN","RCDPEM3",62,0)
 .N J,C S (J,C)=0,RCDIV="" F  S J=$O(VAUTD(J)) Q:'J  S C=C+1,$P(RCDIV,", ",C)=VAUTD(J)
"RTN","RCDPEM3",63,0)
 ;
"RTN","RCDPEM3",64,0)
 S RCTYPE=$$RTYPE^RCDPEU1("A") G:RCTYPE=-1 EXIT ; PRCA*4.5*326 M/P/T filter
"RTN","RCDPEM3",65,0)
 ; ask display type for Excel
"RTN","RCDPEM3",66,0)
 S RCDISPTY=$$DISPTY() G:RCDISPTY<0 EXIT
"RTN","RCDPEM3",67,0)
 ; display Excel info, set ListMan flag to prevent question
"RTN","RCDPEM3",68,0)
 I RCDISPTY D INFO^RCDPEM6 S RCLSTMGR="^"
"RTN","RCDPEM3",69,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEM3",70,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EXIT
"RTN","RCDPEM3",71,0)
 ; display in ListMan format and exit on return
"RTN","RCDPEM3",72,0)
 I RCLSTMGR D  G EXIT
"RTN","RCDPEM3",73,0)
 .S RCTMPND=$T(+0)_"^REMOVE ERA AUDIT"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEM3",74,0)
 .D REPRT,DISP(RCDISPTY)
"RTN","RCDPEM3",75,0)
 .N H,L,HDR S L=0
"RTN","RCDPEM3",76,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEM3",77,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEM3",78,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEM3",79,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEM3",80,0)
 .; invoke ListMan
"RTN","RCDPEM3",81,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEM3",82,0)
 ;
"RTN","RCDPEM3",83,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEM3",84,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPEM3",85,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEM3",86,0)
 .S ZTRTN="ENFRMQ^RCDPEM3"
"RTN","RCDPEM3",87,0)
 .S ZTDESC=$$HDRNM
"RTN","RCDPEM3",88,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEM3",89,0)
 .D ^%ZTLOAD
"RTN","RCDPEM3",90,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" queued.",1:"Unable to queue this task.")
"RTN","RCDPEM3",91,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPEM3",92,0)
 ;
"RTN","RCDPEM3",93,0)
 U IO
"RTN","RCDPEM3",94,0)
 ;
"RTN","RCDPEM3",95,0)
ENFRMQ ; entry point from queue
"RTN","RCDPEM3",96,0)
 D REPRT
"RTN","RCDPEM3",97,0)
 D DISP(RCDISPTY)
"RTN","RCDPEM3",98,0)
 D EXIT
"RTN","RCDPEM3",99,0)
 Q
"RTN","RCDPEM3",100,0)
 ;
"RTN","RCDPEM3",101,0)
DISPTY() ; function, ask display/output type
"RTN","RCDPEM3",102,0)
 ; input from user
"RTN","RCDPEM3",103,0)
 ; returns: Output destination (0=Display, 1=MS Excel, -1=timeout or '^')
"RTN","RCDPEM3",104,0)
 N DIR,DUOUT,X,Y
"RTN","RCDPEM3",105,0)
 S DIR(0)="YA",DIR("A")="Export the report to Microsoft Excel? (Y/N): ",DIR("B")="NO"
"RTN","RCDPEM3",106,0)
 D ^DIR
"RTN","RCDPEM3",107,0)
 I $D(DUOUT)!$D(DIRUT) S Y=-1
"RTN","RCDPEM3",108,0)
 Q Y
"RTN","RCDPEM3",109,0)
 ;
"RTN","RCDPEM3",110,0)
ERASTA(ERAIEN) ; function, returns "station name ^ station #" for an ERA
"RTN","RCDPEM3",111,0)
 ; ERAIEN - ien of the ERA
"RTN","RCDPEM3",112,0)
 Q:'($G(ERAIEN)>0) "-1^"  ; must have valid IEN  
"RTN","RCDPEM3",113,0)
 N ERAEOB,BILLPTR,J,M,P,STAPTR,STNAM,STANMBR,Y
"RTN","RCDPEM3",114,0)
 ; ERAEOB  - EOB corresponding to the ERA
"RTN","RCDPEM3",115,0)
 ; BILLPTR - pointer to Bill corresponding to the ERA
"RTN","RCDPEM3",116,0)
 ; STAPTR - IEN of the Station of the ERA
"RTN","RCDPEM3",117,0)
 S STNAM=""  ; initial value
"RTN","RCDPEM3",118,0)
 D
"RTN","RCDPEM3",119,0)
 .;^RCY(344.4,D0,1,D1,0)= (#.01) SEQUENCE # [1N] ^ (#.02) EOB DETAIL [2P:361.1]
"RTN","RCDPEM3",120,0)
 .S J=0 F  S J=$O(^RCY(344.4,ERAIEN,1,J)) Q:'J!(STNAM]"")  S M=^(J,0) D
"RTN","RCDPEM3",121,0)
 ..N J,Y  ; protect loop counter, Y used below 
"RTN","RCDPEM3",122,0)
 ..S ERAEOB=0,P=+$P(M,U,2) I P>0,$D(^IBM(361.1,P,0)) S Y=$G(^(0)),ERAEOB=P
"RTN","RCDPEM3",123,0)
 ..Q:'ERAEOB  ; pointer to ^IBM(361.1,0) = EXPLANATION OF BENEFITS^361.1
"RTN","RCDPEM3",124,0)
 ..S BILLPTR=$P(Y,U) Q:'(BILLPTR>0)
"RTN","RCDPEM3",125,0)
 ..; ^DGCR(399,0) = BILL/CLAIMS^399
"RTN","RCDPEM3",126,0)
 ..S STAPTR=$P($G(^DGCR(399,BILLPTR,0)),U,22) Q:'(STAPTR>0)
"RTN","RCDPEM3",127,0)
 ..; ^DG(40.8,0) = MEDICAL CENTER DIVISION^40.8
"RTN","RCDPEM3",128,0)
 ..S STNAM=$$GET1^DIQ(40.8,STAPTR_",",.01,"","","RCDIERR")  ; 40.8,.01 = NAME
"RTN","RCDPEM3",129,0)
 ..Q:STNAM=""
"RTN","RCDPEM3",130,0)
 ..S STANMBR=$P(^DG(40.8,STAPTR,0),U,2)  ; IA 417
"RTN","RCDPEM3",131,0)
 ;
"RTN","RCDPEM3",132,0)
 S:STNAM="" STNAM="STATION UNKNOWN",STANMBR="000"
"RTN","RCDPEM3",133,0)
 Q STNAM_"^"_STANMBR
"RTN","RCDPEM3",134,0)
 ;
"RTN","RCDPEM3",135,0)
REPRT ; Generate the report ^TMP array
"RTN","RCDPEM3",136,0)
 ; INPUT:
"RTN","RCDPEM3",137,0)
 ;   RCSSD
"RTN","RCDPEM3",138,0)
 ;   RCDTRNG
"RTN","RCDPEM3",139,0)
 N DTXREF,START,END,ERAIEN,X,DTERA,ZROND
"RTN","RCDPEM3",140,0)
 ; DTXREF - date from cross-reference, "AC" is ERA DATE (#.04), "AD" is REMOVED DATE (#.17)
"RTN","RCDPEM3",141,0)
 ; DTERA - Date ERA received
"RTN","RCDPEM3",142,0)
 ; START - Start date of report date range
"RTN","RCDPEM3",143,0)
 ; END - End date of report date range
"RTN","RCDPEM3",144,0)
 ; ERAIEN - IEN of ERA
"RTN","RCDPEM3",145,0)
 ; RCSSD  - Start date (W:Date Removed from Worklist;R:Date ERA Received;B:Both Dates)
"RTN","RCDPEM3",146,0)
 ; ZROND - node zero of entry in file #344.4
"RTN","RCDPEM3",147,0)
 ;
"RTN","RCDPEM3",148,0)
 ; ^RCY(344.4,D0,6)= (#.16) REMOVED BY [1P:200] ^ (#.17) REMOVED DATE [2D] ^ (#.18) REMOVE REASON [3F] ^
"RTN","RCDPEM3",149,0)
 ;
"RTN","RCDPEM3",150,0)
 K ^TMP($J,"RC REMV ERA"),^TMP($J,"RC TOTAL")
"RTN","RCDPEM3",151,0)
 ; If user picked W:Date Removed from Worklist or B:Both Dates, use x-ref "AD" (REMOVED DATE)
"RTN","RCDPEM3",152,0)
 I (RCSSD="W")!(RCSSD="B") D
"RTN","RCDPEM3",153,0)
 .S END=$P(RCDTRNG,U,3),START=$P(RCDTRNG,U,2),DTXREF=START-.0000001
"RTN","RCDPEM3",154,0)
 .F  S DTXREF=$O(^RCY(344.4,"AD",DTXREF)) Q:'DTXREF!(DTXREF\1>END)  D
"RTN","RCDPEM3",155,0)
 ..S ERAIEN=0
"RTN","RCDPEM3",156,0)
 ..F  S ERAIEN=$O(^RCY(344.4,"AD",DTXREF,ERAIEN)) Q:'ERAIEN  I $D(^RCY(344.4,ERAIEN,6)) S ZROND=$G(^(0)) D:ZROND]""
"RTN","RCDPEM3",157,0)
 ...I $$ISTYPE^RCDPEU1(344.4,ERAIEN,"T") D  ;
"RTN","RCDPEM3",158,0)
 ....N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM3",159,0)
 ...I '$$ISTYPE^RCDPEU1(344.4,ERAIEN,RCTYPE) Q  ; PRCA*4.5*326 Filter by payer type
"RTN","RCDPEM3",160,0)
 ...;
"RTN","RCDPEM3",161,0)
 ...D PROC(ERAIEN)
"RTN","RCDPEM3",162,0)
 ;
"RTN","RCDPEM3",163,0)
 ; If user picked R:Date ERA Received or B:Both Dates, use x-ref "AC" (ERA DATE)
"RTN","RCDPEM3",164,0)
 I (RCSSD="R")!(RCSSD="B") D
"RTN","RCDPEM3",165,0)
 .S END=$P(RCDTRNG,U,3),START=$P(RCDTRNG,U,2),DTXREF=START-.0000001
"RTN","RCDPEM3",166,0)
 .F  S DTXREF=$O(^RCY(344.4,"AC",DTXREF)) Q:'DTXREF!(DTXREF\1>END)  D
"RTN","RCDPEM3",167,0)
 ..S ERAIEN=0 F  S ERAIEN=$O(^RCY(344.4,"AC",DTXREF,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM3",168,0)
 ...Q:'$D(^RCY(344.4,ERAIEN,6))  S ZROND=$G(^(0)) Q:ZROND=""
"RTN","RCDPEM3",169,0)
 ...Q:$D(^TMP($J,"RC REMV ERA",$P(ZROND,U)))  ; data is in ^TMP
"RTN","RCDPEM3",170,0)
 ...I $$ISTYPE^RCDPEU1(344.4,ERAIEN,"T") D  ;
"RTN","RCDPEM3",171,0)
 ....N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM3",172,0)
 ...I '$$ISTYPE^RCDPEU1(344.4,ERAIEN,RCTYPE) Q  ; PRCA*4.5*326 Filter by payer type
"RTN","RCDPEM3",173,0)
 ...S DTERA=$P(ZROND,U,4) Q:'DTERA  D PROC(ERAIEN)
"RTN","RCDPEM3",174,0)
 ;
"RTN","RCDPEM3",175,0)
 Q
"RTN","RCDPEM3",176,0)
 ;
"RTN","RCDPEM3",177,0)
DISP(RCDISPTY) ; Format the display for screen/printer or MS Excel
"RTN","RCDPEM3",178,0)
 ; RCDISPTY -  Display/print/Excel flag
"RTN","RCDPEM3",179,0)
 ; LOCAL VARIABLES: IEN - line number of the data in ^TMP (see above)
"RTN","RCDPEM3",180,0)
 D:'RCLSTMGR HDRBLD
"RTN","RCDPEM3",181,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPEM3",182,0)
 N A,IEN,LEN,RCNAM,Y
"RTN","RCDPEM3",183,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEM3",184,0)
 S IEN=0
"RTN","RCDPEM3",185,0)
 ; PRCA*4.5*276 - Modify Display
"RTN","RCDPEM3",186,0)
 F  S IEN=$O(^TMP($J,"RC REMV ERA",IEN)) Q:'IEN!RCSTOP  S Y=^(IEN) D
"RTN","RCDPEM3",187,0)
 .I RCDISPTY W !,Y Q  ; Excel format
"RTN","RCDPEM3",188,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM3",189,0)
 .S A=$$PAD^RCDPEARL($P(Y,U,3),15)_$P(Y,U,2) D SL^RCDPEARL(A,.RCLNCNT,RCTMPND) ; ERA & Payer
"RTN","RCDPEM3",190,0)
 .S A=$$PAD^RCDPEARL($J("",5)_$P(Y,U,4),29)  ;  date ERA received
"RTN","RCDPEM3",191,0)
 .S A=$$PAD^RCDPEARL(A_$P(Y,U,5),46)  ; Date/Time Removed
"RTN","RCDPEM3",192,0)
 .S RCNAM=$P(Y,U,7) ; User who removed
"RTN","RCDPEM3",193,0)
 .; add ERA amount and user who removed
"RTN","RCDPEM3",194,0)
 .S A=$$PAD^RCDPEARL(A_"$"_$P(Y,U,6),58)_$E(RCNAM,1,19)  ; limit name to 19 chars.
"RTN","RCDPEM3",195,0)
 .D SL^RCDPEARL(A,.RCLNCNT,RCTMPND)
"RTN","RCDPEM3",196,0)
 .D WP($P(Y,U,8))  ; reason removed
"RTN","RCDPEM3",197,0)
 ;
"RTN","RCDPEM3",198,0)
 Q:RCSTOP
"RTN","RCDPEM3",199,0)
 ; end of report
"RTN","RCDPEM3",200,0)
 D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPEM3",201,0)
 D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEM3",202,0)
 ;
"RTN","RCDPEM3",203,0)
 I '$D(ZTQUEUED),'RCLSTMGR,'RCSTOP D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEM3",204,0)
 Q
"RTN","RCDPEM3",205,0)
 ;
"RTN","RCDPEM3",206,0)
PROC(ERAIEN) ;  Put data into ^TMP based on filters
"RTN","RCDPEM3",207,0)
 ; ERAIEN  - ien of the ERA
"RTN","RCDPEM3",208,0)
 N ERAEOB,DTERA,DTRTN,RMVRSN,TRACE,AMT,PAYER,USER,Y,DEPTCKT,ERA,RCLOCDV,RCNTRY,P
"RTN","RCDPEM3",209,0)
 ; ERAEOB - EOB corresponding to this ERA
"RTN","RCDPEM3",210,0)
 ; RCDIV  - Name of station
"RTN","RCDPEM3",211,0)
 ; STANMBR  - Station number
"RTN","RCDPEM3",212,0)
 ; DTERA  - Date of ERA
"RTN","RCDPEM3",213,0)
 ; DTRTN  - Date ERA removed from worklist
"RTN","RCDPEM3",214,0)
 ; RMVRSN   - Justification for removal of ERA
"RTN","RCDPEM3",215,0)
 ; TRACE  - Trace number of the ERA
"RTN","RCDPEM3",216,0)
 ; AMT    - Total amount of the ERA
"RTN","RCDPEM3",217,0)
 ; PAYER  - ERA payer
"RTN","RCDPEM3",218,0)
 ; USER   - User who completed the removal of the ERA from the worklist
"RTN","RCDPEM3",219,0)
 ; DEPTCKT   - deposit ticket
"RTN","RCDPEM3",220,0)
 ; RCNTRY - entry from ^RCY(344.4,ien)
"RTN","RCDPEM3",221,0)
 ;
"RTN","RCDPEM3",222,0)
 S Y=$$ERASTA(ERAIEN)  ; station name and number
"RTN","RCDPEM3",223,0)
 S RCSTA=$P(Y,U),RCSTNO=$P(Y,U,2)
"RTN","RCDPEM3",224,0)
 ; PRCA*4.5*276 - Modify Display
"RTN","RCDPEM3",225,0)
 I 'VAUTD Q:RCDIV'[RCSTA
"RTN","RCDPEM3",226,0)
 M RCNTRY=^RCY(344.4,ERAIEN)
"RTN","RCDPEM3",227,0)
 S ERAEOB=$P($G(RCNTRY(1,1,0)),U,2)
"RTN","RCDPEM3",228,0)
 S Y=$P(RCNTRY(0),U,4),DTERA=$$FMTE^XLFDT(Y,"2D")
"RTN","RCDPEM3",229,0)
 S ERA=$P(RCNTRY(0),U)  ; (#.01) ENTRY [1N] 
"RTN","RCDPEM3",230,0)
 S TRACE=$P(RCNTRY(0),U,2)
"RTN","RCDPEM3",231,0)
 S AMT=$P(RCNTRY(0),U,5)
"RTN","RCDPEM3",232,0)
 S Y=$P(RCNTRY(6),U,2),DTRTN=$$FMTE^XLFDT(Y,2)  ; (#.17) REMOVED DATE [2D]
"RTN","RCDPEM3",233,0)
 S RMVRSN=$P(RCNTRY(6),U,3)  ; (#.18) REMOVE REASON [3F] 
"RTN","RCDPEM3",234,0)
 ; user's name for report
"RTN","RCDPEM3",235,0)
 S USER="",Y=+$P(RCNTRY(6),U) S:Y>0 USER=$$NAME^XUSER(Y,"F")
"RTN","RCDPEM3",236,0)
 S PAYER=""
"RTN","RCDPEM3",237,0)
 ; get PAYER if available
"RTN","RCDPEM3",238,0)
 I ERAEOB S P=+$P($G(^IBM(361.1,ERAEOB,0)),U,2) S:P>0 PAYER=$$GET1^DIQ(36,P_",",.01,"","","RCDIERR")
"RTN","RCDPEM3",239,0)
 S:PAYER="" PAYER="PAYER UNKNOWN"
"RTN","RCDPEM3",240,0)
 ; get Deposit Ticket
"RTN","RCDPEM3",241,0)
 ;S DEPTCKT="UNKNOWN" D
"RTN","RCDPEM3",242,0)
 ;.S Y=+$P(RCNTRY(0),U,8) Q:'Y  ; (#.08) RECEIPT [8P:344]
"RTN","RCDPEM3",243,0)
 ;.S Y=$P($G(^RCY(344,Y,0)),U,6) Q:'Y  ; file #344,(#.06) DEPOSIT TICKET [6P:344.1]
"RTN","RCDPEM3",244,0)
 ;.S DEPTCKT=$P($G(^RCY(344.1,DEPTCKT,0)),U)  ; file #344.1, (#.01) TICKET # [1F] 
"RTN","RCDPEM3",245,0)
 ;
"RTN","RCDPEM3",246,0)
 ; PRCA*4.5*276 - Remove Trace# from Excel
"RTN","RCDPEM3",247,0)
 S ^TMP($J,"RC REMV ERA",ERA)=RCSTA_U_PAYER_U_ERA_U_DTRTN_U_DTERA_U_AMT_U_USER_U_RMVRSN
"RTN","RCDPEM3",248,0)
 Q
"RTN","RCDPEM3",249,0)
 ;
"RTN","RCDPEM3",250,0)
 ;
"RTN","RCDPEM3",251,0)
HDRBLD ; create the report header
"RTN","RCDPEM3",252,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEM3",253,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM3",254,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEM3",255,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEM3",256,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEM3",257,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEM3",258,0)
 ; INPUT:
"RTN","RCDPEM3",259,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM3",260,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM3",261,0)
 ;   RCXCLUDE - TRICARE /CHAMPVA flags
"RTN","RCDPEM3",262,0)
 ;
"RTN","RCDPEM3",263,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM3",264,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEM3",265,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEM3",266,0)
 .S RCHDR(1)="STATION NAME^PAYER^ERA NUMBER^DATE REMOVED^DATE RECEIVED^AMOUNT^USER^REMOVED REASON"
"RTN","RCDPEM3",267,0)
 ;
"RTN","RCDPEM3",268,0)
 N DIV,HCNT,Y
"RTN","RCDPEM3",269,0)
 S HCNT=0  ; counter for header
"RTN","RCDPEM3",270,0)
 ;
"RTN","RCDPEM3",271,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEM3",272,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPEM3",273,0)
 S Y="Run Date/Time: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEM3",274,0)
 ;
"RTN","RCDPEM3",275,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEM3",276,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEM3",277,0)
 S Y="Date Range: "_Y("1ST")_" - "_Y("LST")
"RTN","RCDPEM3",278,0)
 S Y=Y_" ("_$S(RCSSD="B":"Received & Removed",RCSSD="W":"Date Removed from Worklist",1:"Date ERA Received")_")"
"RTN","RCDPEM3",279,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM3",280,0)
 K Y  ; delete Y subscripts
"RTN","RCDPEM3",281,0)
 S Y="DIVISIONS: "_RCDIV,Y=$J("",80-$L(Y)\2)_Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM3",282,0)
 S Y="MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEM3",283,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEM3",284,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM3",285,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM3",286,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="ERA#           Payer Name"
"RTN","RCDPEM3",287,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     Date/Time               Date ERA         Total Amt   User Who"
"RTN","RCDPEM3",288,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     Removed                 Received         Paid        Removed"
"RTN","RCDPEM3",289,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y  ; row of equal signs at bottom
"RTN","RCDPEM3",290,0)
 ;
"RTN","RCDPEM3",291,0)
 S RCHDR(0)=HCNT  ; line count for header
"RTN","RCDPEM3",292,0)
 ;
"RTN","RCDPEM3",293,0)
 Q
"RTN","RCDPEM3",294,0)
 ;
"RTN","RCDPEM3",295,0)
HDRLM ; create the Listman header
"RTN","RCDPEM3",296,0)
 ; returns RCHDR
"RTN","RCDPEM3",297,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM3",298,0)
 ; INPUT:
"RTN","RCDPEM3",299,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM3",300,0)
 ;   RCXCLUDE - TRICARE /CHAMPVA flags
"RTN","RCDPEM3",301,0)
 ;
"RTN","RCDPEM3",302,0)
 N DIV,HCNT,Y
"RTN","RCDPEM3",303,0)
 S HCNT=0  ; counter for header
"RTN","RCDPEM3",304,0)
 ;
"RTN","RCDPEM3",305,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEM3",306,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEM3",307,0)
 S Y="Date Range: "_Y("1ST")_" - "_Y("LST")
"RTN","RCDPEM3",308,0)
 S Y=Y_" ("_$S(RCSSD="B":"Received & Removed",RCSSD="W":"Date Removed from Worklist",1:"Date ERA Received")_")"
"RTN","RCDPEM3",309,0)
 S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEM3",310,0)
 K Y  ; delete Y subscripts
"RTN","RCDPEM3",311,0)
 S Y="DIVISIONS: "_RCDIV,Y=Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM3",312,0)
 S Y="MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEM3",313,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEM3",314,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM3",315,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM3",316,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="ERA#           Payer Name"
"RTN","RCDPEM3",317,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     Date/Time               Date ERA         Total Amt   User Who"
"RTN","RCDPEM3",318,0)
 S HCNT=HCNT+1,RCHDR(HCNT)="     Removed                 Received         Paid        Removed"
"RTN","RCDPEM3",319,0)
 ;
"RTN","RCDPEM3",320,0)
 S RCHDR(0)=HCNT  ; line count for header
"RTN","RCDPEM3",321,0)
 ;
"RTN","RCDPEM3",322,0)
 Q
"RTN","RCDPEM3",323,0)
 ; extrinsic var, name for header PRCA*4.5*298
"RTN","RCDPEM3",324,0)
HDRNM() Q "ERAs Removed from Active Worklist - Audit Report"
"RTN","RCDPEM3",325,0)
 ;
"RTN","RCDPEM3",326,0)
EXIT ;
"RTN","RCDPEM3",327,0)
 D ^%ZISC
"RTN","RCDPEM3",328,0)
 K ^TMP($J,"RC REMV ERA"),^TMP($J,"RC TOTAL")
"RTN","RCDPEM3",329,0)
 Q
"RTN","RCDPEM3",330,0)
 ;
"RTN","RCDPEM3",331,0)
WP(RR) ; format Removed Reason comments
"RTN","RCDPEM3",332,0)
 ; RR - Removed Reason
"RTN","RCDPEM3",333,0)
 I RR="" Q
"RTN","RCDPEM3",334,0)
 N PCS,I,CNTR,CMNT,Y
"RTN","RCDPEM3",335,0)
 ; PCS - Number of " " $pieces in the comment
"RTN","RCDPEM3",336,0)
 ; CNTR - CMNT line counter
"RTN","RCDPEM3",337,0)
 ; CMNT - comment text to be displayed
"RTN","RCDPEM3",338,0)
 S PCS=$L(RR," "),CNTR=1,CMNT(CNTR)=" Removed Reason: "
"RTN","RCDPEM3",339,0)
 F I=1:1:PCS D
"RTN","RCDPEM3",340,0)
 .S Y=$P(RR," ",I)
"RTN","RCDPEM3",341,0)
 .S:$L(CMNT(CNTR))+$L(Y)>72 CNTR=CNTR+1,CMNT(CNTR)=$J(" ",17)
"RTN","RCDPEM3",342,0)
 .S CMNT(CNTR)=CMNT(CNTR)_" "_Y
"RTN","RCDPEM3",343,0)
 ;
"RTN","RCDPEM3",344,0)
 F I=1:1:CNTR D SL^RCDPEARL(CMNT(I),.RCLNCNT,RCTMPND)
"RTN","RCDPEM3",345,0)
 Q
"RTN","RCDPEM3",346,0)
 ;
"RTN","RCDPEM3",347,0)
RETN ; Entry point for Remove Duplicate EFT Deposits [RCDPE REMOVE DUP DEPOSITS]
"RTN","RCDPEM3",348,0)
 N DA,DIC,DIE,DIR,DR,DTOUT,MSG,RCERANUM,RCY,X,Y
"RTN","RCDPEM3",349,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPE REMOVE DUPLICATES",DUZ)
"RTN","RCDPEM3",350,0)
 I 'MSG(0) W !,"You are not authorized to use this option.",! S DIR(0)="E" D ^DIR K DIR Q
"RTN","RCDPEM3",351,0)
 W !!,"          WARNING: Removing an EFT is **NOT** reversible."
"RTN","RCDPEM3",352,0)
 W !,"  Use this option only if you are sure you want to remove this EFT."
"RTN","RCDPEM3",353,0)
 W !," Please be aware that once an EFT is removed - it cannot be restored.",!!
"RTN","RCDPEM3",354,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEM3",355,0)
 S DIR("A")="Are you sure you want to continue? "
"RTN","RCDPEM3",356,0)
 D ^DIR K DIR
"RTN","RCDPEM3",357,0)
 I $D(DUOUT)!$D(DTOUT)!'Y Q
"RTN","RCDPEM3",358,0)
 ; EDI THIRD PARTY EFT DETAIL (#344.31)
"RTN","RCDPEM3",359,0)
 ; PRCA*4.5*326 - Use EFT picker utility instead of DIC call
"RTN","RCDPEM3",360,0)
 ; screening logic for field #.08 MATCH STATUS [8S], must be UNMATCHED
"RTN","RCDPEM3",361,0)
 S DIC("S")="I '$P(^(0),U,8)"
"RTN","RCDPEM3",362,0)
 S DIC("A")="Select EDI THIRD PARTY EFT DETAIL EFT TRANSACTION: "
"RTN","RCDPEM3",363,0)
 S RCY=$$ASKEFT^RCDPEU2(DIC("A"),DIC("S"))
"RTN","RCDPEM3",364,0)
 I RCY'>0 Q 
"RTN","RCDPEM3",365,0)
 S RCERANUM=$$GET1^DIQ(344.31,RCY_",",.01,"E") ; Get EFT number
"RTN","RCDPEM3",366,0)
 ; PRCA*4.5*326 - End changed block
"RTN","RCDPEM3",367,0)
 ;
"RTN","RCDPEM3",368,0)
 K DIR S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEM3",369,0)
 S DIR("A",1)="This will mark EFT # "_RCERANUM_" as removed."
"RTN","RCDPEM3",370,0)
 S DIR("A")="Are you sure you want to continue? "
"RTN","RCDPEM3",371,0)
 W !
"RTN","RCDPEM3",372,0)
 D ^DIR K DIR
"RTN","RCDPEM3",373,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=0) D NOCHNG Q
"RTN","RCDPEM3",374,0)
 S DIE="^RCY(344.31,",DA=RCY,DR=".19" D ^DIE
"RTN","RCDPEM3",375,0)
 I $D(Y) D NOCHNG Q  ; user aborted edit
"RTN","RCDPEM3",376,0)
 ;
"RTN","RCDPEM3",377,0)
 ; 344.31,.08 - MATCH STATUS
"RTN","RCDPEM3",378,0)
 ; 344.31,.17 - USER WHO REMOVED EFT 
"RTN","RCDPEM3",379,0)
 ; 344.31,.18 - DATE/TIME DUPLICATE REMOVED
"RTN","RCDPEM3",380,0)
 S DR=".08////1;.17////"_DUZ_";.18////"_$$NOW^XLFDT D ^DIE
"RTN","RCDPEM3",381,0)
 W !!
"RTN","RCDPEM3",382,0)
 K DIR S DIR(0)="EA"
"RTN","RCDPEM3",383,0)
 S DIR("A")="Press return to continue: "
"RTN","RCDPEM3",384,0)
 S DIR("A",1)="EFT # "_RCERANUM_" has been marked as removed."
"RTN","RCDPEM3",385,0)
 D ^DIR
"RTN","RCDPEM3",386,0)
 Q
"RTN","RCDPEM3",387,0)
 ;
"RTN","RCDPEM3",388,0)
NOCHNG ;
"RTN","RCDPEM3",389,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPEM3",390,0)
 S DIR(0)="EA"
"RTN","RCDPEM3",391,0)
 S DIR("A")="Press return to continue: "
"RTN","RCDPEM3",392,0)
 S DIR("A",1)="*** This EFT was NOT removed. ***"
"RTN","RCDPEM3",393,0)
 W !! D ^DIR
"RTN","RCDPEM3",394,0)
 Q
"RTN","RCDPEM3",395,0)
 ;
"RTN","RCDPEM3",396,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEM3",397,0)
DICW ; Identifier code for EFT lookup - EP MATCH1^RCDPEM3 and MATCH2^RCDPEM2 
"RTN","RCDPEM3",398,0)
 ; Input - Y = EFT DETAIL #344.31 IEN
"RTN","RCDPEM3",399,0)
 ;         D = Index ("B","C","E","F","FNLZ")
"RTN","RCDPEM3",400,0)
 ;
"RTN","RCDPEM3",401,0)
 N DATA,DEPDAT,DEPNO,EFTID,EFTIEN,EFTTR,PAYAMT,PAYNAM,PAYTR,SP,TIN
"RTN","RCDPEM3",402,0)
 S DATA=$G(^RCY(344.31,Y,0)) I DATA="" Q
"RTN","RCDPEM3",403,0)
 S SP=$J("",3),EFTIEN=$P(DATA,U)
"RTN","RCDPEM3",404,0)
 S EFTTR="",EFTID=EFTIEN I $P(DATA,U,14) S EFTID=EFTID_"."_$P(DATA,U,14)
"RTN","RCDPEM3",405,0)
 S PAYNAM=$$GET1^DIQ(344.31,Y,.02,"E")
"RTN","RCDPEM3",406,0)
 S TIN=$$GET1^DIQ(344.31,Y,.03,"E")
"RTN","RCDPEM3",407,0)
 S PAYTR=$$GET1^DIQ(344.31,Y,.04,"E")
"RTN","RCDPEM3",408,0)
 S PAYAMT=$$GET1^DIQ(344.31,Y,.07,"E")
"RTN","RCDPEM3",409,0)
 S DEPNO=$$GET1^DIQ(344.3,EFTIEN,.03,"E")
"RTN","RCDPEM3",410,0)
 S DEPDAT=$$FMTE^XLFDT($$GET1^DIQ(344.3,EFTIEN,.07,"I"),"2DZ")
"RTN","RCDPEM3",411,0)
 ; EFT DETAIL lookup
"RTN","RCDPEM3",412,0)
 I $G(DZ)="??"!($G(DZ)="?") D  ;
"RTN","RCDPEM3",413,0)
 . S PAYNAM=$E(PAYNAM,1,58-$L(TIN))_"/"_TIN I PAYNAM="/" S PAYNAM=""
"RTN","RCDPEM3",414,0)
 . W ?10,EFTID,?20," ",PAYNAM
"RTN","RCDPEM3",415,0)
 . W !,?20," ",PAYTR,?48," ",$J(PAYAMT,10)
"RTN","RCDPEM3",416,0)
 . W ?59," ",DEPNO,?71," ",DEPDAT
"RTN","RCDPEM3",417,0)
 E  D  ;
"RTN","RCDPEM3",418,0)
 . S PAYNAM=$E(PAYNAM,1,52-$L(TIN))_"/"_TIN I PAYNAM="/" S PAYNAM=""
"RTN","RCDPEM3",419,0)
 . I D="B"!(D="D") D  Q  ; Search index EFT# or EFT ID#
"RTN","RCDPEM3",420,0)
 . . W ?25," ",PAYNAM
"RTN","RCDPEM3",421,0)
 . . W !,?25," ",PAYTR,?48," ",$J(PAYAMT,10)
"RTN","RCDPEM3",422,0)
 . . W ?59," ",DEPNO,?71," ",DEPDAT
"RTN","RCDPEM3",423,0)
 . I D="C" D  Q  ; Search index PAYER NAME
"RTN","RCDPEM3",424,0)
 . . W "  ",EFTID
"RTN","RCDPEM3",425,0)
 . . W !,?20," ",PAYTR,?48," ",$J(PAYAMT,10)
"RTN","RCDPEM3",426,0)
 . . W ?59," ",DEPNO,?71," ",DEPDAT
"RTN","RCDPEM3",427,0)
 . I D="E" D  Q  ; Search index DATE/TIME DUPLICATE REMOVED
"RTN","RCDPEM3",428,0)
 . . W "  ",EFTID,?25," ",PAYNAM
"RTN","RCDPEM3",429,0)
 . . W !,?25," ",PAYTR,?48," ",$J(PAYAMT,10)
"RTN","RCDPEM3",430,0)
 . . W ?59," ",DEPNO,?71," ",DEPDAT
"RTN","RCDPEM3",431,0)
 . I D="F" D  Q  ; Search index TRACE#
"RTN","RCDPEM3",432,0)
 . . W "  ",EFTID,?48,$J(PAYAMT,10),?59," ",DEPNO,?71," ",DEPDAT
"RTN","RCDPEM3",433,0)
 . . W !,?25," ",PAYNAM
"RTN","RCDPEM3",434,0)
 ;
"RTN","RCDPEM3",435,0)
 ; Next line required to fix problem when ??, ^ from help, then ?? again reverts back to old help.
"RTN","RCDPEM3",436,0)
 ; If DIC(0)["A" DIC("W") is not killed off. 
"RTN","RCDPEM3",437,0)
 I $G(DIC(0))'["A" S DIC(0)="A"_$G(DIC(0))
"RTN","RCDPEM3",438,0)
 Q
"RTN","RCDPEM3",439,0)
 ;
"RTN","RCDPEM3",440,0)
OUT(RCEFT) ; EP UNMATCH^RCDPEM2
"RTN","RCDPEM3",441,0)
 ; INPUT - RCEFT - #344.31 ien
"RTN","RCDPEM3",442,0)
 ; OUTPUT - EFT_"."_TRAN - formatted EFT line
"RTN","RCDPEM3",443,0)
 N EFT,TRAN
"RTN","RCDPEM3",444,0)
 S EFT=$$GET1^DIQ(344.31,RCEFT_",",.01,"I")
"RTN","RCDPEM3",445,0)
 S TRAN=$$GET1^DIQ(344.31,RCEFT_",",.14)
"RTN","RCDPEM3",446,0)
 Q EFT_"."_TRAN
"RTN","RCDPEM3",447,0)
 ; END PRCA*4,5*326
"RTN","RCDPEM4")
0^62^B215103817
"RTN","RCDPEM4",1,0)
RCDPEM4 ;OIFO-BAYPINES/PJH - EPAYMENTS AUDIT REPORTS ;Nov 17, 2014@17:00:41
"RTN","RCDPEM4",2,0)
 ;;4.5;Accounts Receivable;**276,284,298,304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEM4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM4",4,0)
 ;
"RTN","RCDPEM4",5,0)
EOB ; EEOB Move/Copy/Rmove Audit Report [RCDPE EEOB MOVE/COPY/RMOVE RPT]
"RTN","RCDPEM4",6,0)
 N RCRTYP S RCRTYP="EOB"  ; record type
"RTN","RCDPEM4",7,0)
 D ASKUSR
"RTN","RCDPEM4",8,0)
 Q
"RTN","RCDPEM4",9,0)
 ;
"RTN","RCDPEM4",10,0)
POST ; ERAs Posted with Paper EOB Audit Report [RCDPE ERA W/PAPER EOB REPORT]
"RTN","RCDPEM4",11,0)
 N RCRTYP S RCRTYP="ERA"  ; record type
"RTN","RCDPEM4",12,0)
 D ASKUSR
"RTN","RCDPEM4",13,0)
 Q
"RTN","RCDPEM4",14,0)
 ;
"RTN","RCDPEM4",15,0)
ASKUSR ;collect filter and device options
"RTN","RCDPEM4",16,0)
 Q:$G(RCRTYP)=""  ; must have record type
"RTN","RCDPEM4",17,0)
 N %ZIS,POP,RCACT,RCDISPTY,RCDIV,RCDTRNG,RCHDR,RCLSTMGR,RCLNCNT,RCPGNUM,RCPROG,RCSTA,RCSTOP
"RTN","RCDPEM4",18,0)
 N RCTMPND,RCTYPE,VAUTD,X,Y
"RTN","RCDPEM4",19,0)
 ; RCACT - selected actions for EOB
"RTN","RCDPEM4",20,0)
 ; RCDISPTY - display type
"RTN","RCDPEM4",21,0)
 ; RCDIV - selected divs.
"RTN","RCDPEM4",22,0)
 ; RCDTRNG - date range for report
"RTN","RCDPEM4",23,0)
 ; RCHDR - header array
"RTN","RCDPEM4",24,0)
 ; RCLSTMGR - ListMan output flag
"RTN","RCDPEM4",25,0)
 ; RCPGNUM - report page count
"RTN","RCDPEM4",26,0)
 ; RCPROG - ^TMP storage node for entries
"RTN","RCDPEM4",27,0)
 ; RCSTA - station
"RTN","RCDPEM4",28,0)
 ; RCSTOP - flag to stop report
"RTN","RCDPEM4",29,0)
 ; RCTMPND - ListMan storage node
"RTN","RCDPEM4",30,0)
 ; RCTYPE - Type of EEOBs to include M/P/T/A MEDICAL/PHARMACY/TRICARE/ALL
"RTN","RCDPEM4",31,0)
 ;
"RTN","RCDPEM4",32,0)
 S RCPROG=$T(+0),RCLSTMGR="",RCACT="",(RCLNCNT,RCSTOP)=0,RCTMPND=""
"RTN","RCDPEM4",33,0)
 ; S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEM4",34,0)
 ;Select Date Range for Report
"RTN","RCDPEM4",35,0)
 S RCDTRNG=$$DTRNG() G:'RCDTRNG EXIT
"RTN","RCDPEM4",36,0)
 ;Select Filter for Action Type (Move,Copy,Remove or All)
"RTN","RCDPEM4",37,0)
 I RCRTYP="EOB" S RCACT=$$ACTION G:RCACT<0 EXIT
"RTN","RCDPEM4",38,0)
 ;Select Filter/Sort by Division
"RTN","RCDPEM4",39,0)
 D STADIV G:'RCDIV EXIT
"RTN","RCDPEM4",40,0)
 ; Begin PRCA*4.5*326 Tricare filter
"RTN","RCDPEM4",41,0)
 S RCTYPE=$$RTYPE^RCDPEU1("A") I RCTYPE=-1 G EXIT
"RTN","RCDPEM4",42,0)
 ;
"RTN","RCDPEM4",43,0)
 ; Select Display Type , exit if indicated
"RTN","RCDPEM4",44,0)
 S RCDISPTY=$$DISPTY() G:RCDISPTY<0 EXIT
"RTN","RCDPEM4",45,0)
 ;Display capture information for Excel, set RCLSTMGR to prevent question
"RTN","RCDPEM4",46,0)
 I RCDISPTY D INFO^RCDPEM6 S RCLSTMGR="^"
"RTN","RCDPEM4",47,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EXIT
"RTN","RCDPEM4",48,0)
 I RCLSTMGR D  G EXIT
"RTN","RCDPEM4",49,0)
 .X "S RCTMPND=$T(+0)_U_$$HDR"_RCRTYP K ^TMP($J,RCTMPND)  ; ^TMP storage node, clean any residue
"RTN","RCDPEM4",50,0)
 .D RPRTCMPL
"RTN","RCDPEM4",51,0)
 .N H,L,HDR S L=0
"RTN","RCDPEM4",52,0)
 .X "S HDR(""TITLE"")=$$HDR"_RCRTYP
"RTN","RCDPEM4",53,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEM4",54,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEM4",55,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEM4",56,0)
 .; invoke ListMan
"RTN","RCDPEM4",57,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEM4",58,0)
 ;
"RTN","RCDPEM4",59,0)
 ;Select output device
"RTN","RCDPEM4",60,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEM4",61,0)
 ;Option to queue
"RTN","RCDPEM4",62,0)
 I 'RCDISPTY,$D(IO("Q")) D  Q
"RTN","RCDPEM4",63,0)
 .N ZTSK,ZTDESC,ZTSAVE,ZTQUEUED,ZTRTN
"RTN","RCDPEM4",64,0)
 .S ZTRTN="RPRTCMPL^RCDPEM4"
"RTN","RCDPEM4",65,0)
 .S ZTDESC="EDI LOCKBOX PAPER EOB AUDIT REPORT"
"RTN","RCDPEM4",66,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEM4",67,0)
 .D ^%ZTLOAD
"RTN","RCDPEM4",68,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task."),!
"RTN","RCDPEM4",69,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEM4",70,0)
 ;
"RTN","RCDPEM4",71,0)
 ;Compile and Print Report
"RTN","RCDPEM4",72,0)
 D RPRTCMPL
"RTN","RCDPEM4",73,0)
 Q
"RTN","RCDPEM4",74,0)
 ;
"RTN","RCDPEM4",75,0)
RPRTCMPL ;Compile and print report
"RTN","RCDPEM4",76,0)
 K ^TMP(RCPROG,$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEM4",77,0)
 ;Scan ERA file for entries in date range
"RTN","RCDPEM4",78,0)
 I RCRTYP="ERA" D CMPLERA
"RTN","RCDPEM4",79,0)
 ;Scan EOB file for entries in date range
"RTN","RCDPEM4",80,0)
 I RCRTYP="EOB" D CMPLEOB
"RTN","RCDPEM4",81,0)
 ;Display Report
"RTN","RCDPEM4",82,0)
 D DISP
"RTN","RCDPEM4",83,0)
 ;
"RTN","RCDPEM4",84,0)
EXIT ;
"RTN","RCDPEM4",85,0)
 ;Clear old data
"RTN","RCDPEM4",86,0)
 K ^TMP(RCPROG,$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEM4",87,0)
 Q
"RTN","RCDPEM4",88,0)
 ;
"RTN","RCDPEM4",89,0)
CMPLERA ;Generate the ERA posted with paper EOB report ^TMP array
"RTN","RCDPEM4",90,0)
 ; ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I^
"RTN","RCDPEM4",91,0)
 N START,END,ERAIEN,STA,STNAM,STNUM
"RTN","RCDPEM4",92,0)
 ;Date Range
"RTN","RCDPEM4",93,0)
 S START=0,END="9999999",SUB=0
"RTN","RCDPEM4",94,0)
 S:$P(RCDTRNG,U) START=$P(RCDTRNG,U,2),END=$P(RCDTRNG,U,3)_".24" ; PRCA*4.5*326 allow for time at end of date range
"RTN","RCDPEM4",95,0)
 ;Selected division or All
"RTN","RCDPEM4",96,0)
 ;Scan AFL index for ERA within date range
"RTN","RCDPEM4",97,0)
 F  S START=$O(^RCY(344.4,"AFL",START)) Q:'START  Q:START>END  D
"RTN","RCDPEM4",98,0)
 .S ERAIEN=""
"RTN","RCDPEM4",99,0)
 .F  S ERAIEN=$O(^RCY(344.4,"AFL",START,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM4",100,0)
 ..;Ignore if not posted with paper EOB
"RTN","RCDPEM4",101,0)
 ..Q:'$D(^RCY(344.4,ERAIEN,7))
"RTN","RCDPEM4",102,0)
 ..;Check division
"RTN","RCDPEM4",103,0)
 ..D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEM4",104,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEM4",105,0)
 ..I '$$ISTYPE^RCDPEU1(344.4,ERAIEN,RCTYPE) Q  ; PRCA*4.5*326 - M/P/T/A filter
"RTN","RCDPEM4",106,0)
 ..;
"RTN","RCDPEM4",107,0)
 ..D SVERA^RCDPEM41(ERAIEN,STA,STNUM,STNAM)
"RTN","RCDPEM4",108,0)
 ;
"RTN","RCDPEM4",109,0)
 Q
"RTN","RCDPEM4",110,0)
 ;
"RTN","RCDPEM4",111,0)
CMPLEOB ;Generate the EOB Moved/Copy/Remove report ^TMP array
"RTN","RCDPEM4",112,0)
 N DTSUB,START,END,EOBIEN,IEN101,STA,STNAM,STNUM
"RTN","RCDPEM4",113,0)
 ;Date Range
"RTN","RCDPEM4",114,0)
 S START=$P(RCDTRNG,U,2),END=$P(RCDTRNG,U,3)
"RTN","RCDPEM4",115,0)
 ;Selected division or All
"RTN","RCDPEM4",116,0)
 ;Scan AEOB index for EOB within date range
"RTN","RCDPEM4",117,0)
 F  S START=$O(^IBM(361.1,"AEOB",START)) Q:'START  Q:(START\1)>END  D
"RTN","RCDPEM4",118,0)
 .S EOBIEN=""
"RTN","RCDPEM4",119,0)
 .F  S EOBIEN=$O(^IBM(361.1,"AEOB",START,EOBIEN)) Q:'EOBIEN  D
"RTN","RCDPEM4",120,0)
 ..; Ignore if not MOVED/COPIED
"RTN","RCDPEM4",121,0)
 ..S IEN101=$O(^IBM(361.1,"AEOB",START,EOBIEN,"")) Q:'IEN101
"RTN","RCDPEM4",122,0)
 ..; Check division
"RTN","RCDPEM4",123,0)
 ..D EOBSTA(EOBIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEM4",124,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEM4",125,0)
 ..I '$$ISTYPE^RCDPEU1(361.1,EOBIEN,RCTYPE) Q  ; PRCA*4.5*326 - M/P/T/A filter
"RTN","RCDPEM4",126,0)
 ..;
"RTN","RCDPEM4",127,0)
 ..;
"RTN","RCDPEM4",128,0)
 ..D SVEOB^RCDPEM41(EOBIEN,IEN101,STA,STNUM,STNAM)
"RTN","RCDPEM4",129,0)
 ;
"RTN","RCDPEM4",130,0)
 Q
"RTN","RCDPEM4",131,0)
 ;
"RTN","RCDPEM4",132,0)
DISP ; Format the display for screen/printer or MS Excel
"RTN","RCDPEM4",133,0)
 N DVFLTR,IEN,RCNTRY,SUB,Y
"RTN","RCDPEM4",134,0)
 ;Format Division Filter
"RTN","RCDPEM4",135,0)
 S DVFLTR=$S(RCRTYP="EOB":"ALL STATIONS/DIVISIONS",1:"ALL") I RCDIV=2 S DVFLTR=$$LINE(.VAUTD)
"RTN","RCDPEM4",136,0)
 D:'RCLSTMGR HDRBLD  ; Report header
"RTN","RCDPEM4",137,0)
 D:RCLSTMGR HDRLM  ; Listman header
"RTN","RCDPEM4",138,0)
 ; RCNTRY - entry from ^TMP(RCPROG,$J)
"RTN","RCDPEM4",139,0)
 ;
"RTN","RCDPEM4",140,0)
 U IO
"RTN","RCDPEM4",141,0)
 ;
"RTN","RCDPEM4",142,0)
 ; Display Header for first time
"RTN","RCDPEM4",143,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEM4",144,0)
 ;Report by division or 'ALL'
"RTN","RCDPEM4",145,0)
 S SUB=0,RCSTOP=0
"RTN","RCDPEM4",146,0)
 F  S SUB=$O(^TMP(RCPROG,$J,SUB)) Q:SUB=""!RCSTOP  D
"RTN","RCDPEM4",147,0)
 .S IEN=0 F  S IEN=$O(^TMP(RCPROG,$J,SUB,IEN)) Q:'IEN!RCSTOP  S RCNTRY=^(IEN) D
"RTN","RCDPEM4",148,0)
 ..I RCDISPTY W !,RCNTRY Q  ; spreadsheet format
"RTN","RCDPEM4",149,0)
 ..I RCRTYP="ERA" D  ; ERA posted with paper EOB
"RTN","RCDPEM4",150,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM4",151,0)
 ...S Y=$$PAD^RCDPEARL($P(RCNTRY,U,5),11)  ; ERA#
"RTN","RCDPEM4",152,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,6),13) ;RECEIPT#
"RTN","RCDPEM4",153,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,3),18) ;DATE/TIME
"RTN","RCDPEM4",154,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,4),16) ;USER LASTNAME,FIRSTNAME
"RTN","RCDPEM4",155,0)
 ...S Y=Y_$P(RCNTRY,U,7) ;MATCH STATUS
"RTN","RCDPEM4",156,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",157,0)
 ...D SL^RCDPEARL($J("",61)_$P(RCNTRY,U,8),.RCLNCNT,RCTMPND) ;POST STATUS
"RTN","RCDPEM4",158,0)
 ..;
"RTN","RCDPEM4",159,0)
 ..I RCRTYP="EOB" D  ; EOB Moved/Copied
"RTN","RCDPEM4",160,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM4",161,0)
 ...S Y=$$PAD^RCDPEARL($P(RCNTRY,U,5),20) ; ORIGINAL BILL
"RTN","RCDPEM4",162,0)
 ...S Y=Y_$P(RCNTRY,U,8) ; TRACE #
"RTN","RCDPEM4",163,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",164,0)
 ...S Y=$$PAD^RCDPEARL($J("",6)_$P(RCNTRY,U,7),15) ;ERA
"RTN","RCDPEM4",165,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,3),20) ;DATE/TIME
"RTN","RCDPEM4",166,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,12),15) ;MOVED/COPIED/REMOVED
"RTN","RCDPEM4",167,0)
 ...S Y=Y_$$PAD^RCDPEARL("$"_$P(RCNTRY,U,9),11) ;PAYMENT AMOUNT
"RTN","RCDPEM4",168,0)
 ...S Y=Y_$P(RCNTRY,U,4) ; USER LASTNAME,FIRSTNAME
"RTN","RCDPEM4",169,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",170,0)
 ...D:$P(RCNTRY,U,12)'="REMOVED"
"RTN","RCDPEM4",171,0)
 ....S Y=$$PAD^RCDPEARL("New Bill: "_$P(RCNTRY,U,6),25) ;NEW BILL
"RTN","RCDPEM4",172,0)
 ....S Y=Y_"Other Bill Number(s): "_$P(RCNTRY,U,11) ;OTHER BILLS
"RTN","RCDPEM4",173,0)
 ....D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",174,0)
 ...;
"RTN","RCDPEM4",175,0)
 ...D WP($P(RCNTRY,U,10))  ; Justification comments
"RTN","RCDPEM4",176,0)
 ...D SL^RCDPEARL("",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPEM4",177,0)
 .;
"RTN","RCDPEM4",178,0)
 .; end of report
"RTN","RCDPEM4",179,0)
 .I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",180,0)
 ;
"RTN","RCDPEM4",181,0)
 D:'$D(^TMP(RCPROG,$J))
"RTN","RCDPEM4",182,0)
 .D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip line
"RTN","RCDPEM4",183,0)
 .D SL^RCDPEARL("     *** NO RECORDS TO PRINT ***",.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",184,0)
 ;
"RTN","RCDPEM4",185,0)
 ;Close device
"RTN","RCDPEM4",186,0)
 I '$D(ZTQUEUED),'RCLSTMGR D ^%ZISC
"RTN","RCDPEM4",187,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RCDPEM4",188,0)
 Q
"RTN","RCDPEM4",189,0)
 ;
"RTN","RCDPEM4",190,0)
LINE(VAUTD) ;List selected stations
"RTN","RCDPEM4",191,0)
 N LINE,SUB
"RTN","RCDPEM4",192,0)
 S LINE="",SUB=""
"RTN","RCDPEM4",193,0)
 F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEM4",194,0)
 .S LINE=LINE_$G(VAUTD(SUB))_", "
"RTN","RCDPEM4",195,0)
 Q $E(LINE,1,$L(LINE)-2)
"RTN","RCDPEM4",196,0)
 ;
"RTN","RCDPEM4",197,0)
SELDIV(VAUTD,Z) ;Devisions are organized as Z(1)="DIV1,DIV2,..., Z(2)="DIVN,DIVN+1,... etc.
"RTN","RCDPEM4",198,0)
 ; Input:
"RTN","RCDPEM4",199,0)
 ;   VAUTD (required/pass-by-ref) - Division(s) array; result of call to DIVISION^VAUTOMA
"RTN","RCDPEM4",200,0)
 ; Output:
"RTN","RCDPEM4",201,0)
 ;   Z (required/pass-by-ref) - reformatted array of divisions
"RTN","RCDPEM4",202,0)
 ;
"RTN","RCDPEM4",203,0)
 N SUB,CNT
"RTN","RCDPEM4",204,0)
 S CNT=1,Z(CNT)="DIVISIONS: "
"RTN","RCDPEM4",205,0)
 I $D(VAUTD)=1 D  Q
"RTN","RCDPEM4",206,0)
 . S Z(CNT)=Z(CNT)_"ALL"
"RTN","RCDPEM4",207,0)
 .S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEM4",208,0)
 I $D(VAUTD)>1,'VAUTD D
"RTN","RCDPEM4",209,0)
 .S SUB=VAUTD
"RTN","RCDPEM4",210,0)
 .F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEM4",211,0)
 ..I Z(CNT)="DIVISIONS: " S Z(CNT)=Z(CNT)_VAUTD(SUB) Q
"RTN","RCDPEM4",212,0)
 ..S Z(CNT)=Z(CNT)_$S(Z(CNT)]"":",",1:"")_VAUTD(SUB)
"RTN","RCDPEM4",213,0)
 ..I $L(Z(CNT))>50 S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT),CNT=CNT+1,Z(CNT)=""
"RTN","RCDPEM4",214,0)
 ;
"RTN","RCDPEM4",215,0)
 I Z(CNT)]"" S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEM4",216,0)
 I Z(CNT)="" K Z(CNT)
"RTN","RCDPEM4",217,0)
 Q
"RTN","RCDPEM4",218,0)
 ;
"RTN","RCDPEM4",219,0)
HDRBLD ; create the report header
"RTN","RCDPEM4",220,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEM4",221,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM4",222,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEM4",223,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEM4",224,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEM4",225,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEM4",226,0)
 ; INPUT: 
"RTN","RCDPEM4",227,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM4",228,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM4",229,0)
 ;   RCRTYP - Report Type (EOB or ERA)
"RTN","RCDPEM4",230,0)
 ;   VAUTD
"RTN","RCDPEM4",231,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM4",232,0)
 ;
"RTN","RCDPEM4",233,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEM4",234,0)
 .S RCHDR(0)=1,RCHDR(1)="^^^",RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEM4",235,0)
 .S:RCRTYP="ERA" RCHDR(1)="STATION^STATION NUMBER^DATE/TIME^USER^ERA^RECEIPT^MATCH STATUS^POSTED STATUS"
"RTN","RCDPEM4",236,0)
 .S:RCRTYP="EOB" RCHDR(1)="STATION^STATION NUMBER^DATE/TIME^USER^ORIGINAL BILL^NEW BILL^ERA#^TRACE#^PAYMENT AMOUNT^JUSTIFICATION^OTHER BILLS^MOVED/COPIED"
"RTN","RCDPEM4",237,0)
 ;
"RTN","RCDPEM4",238,0)
 N START,END,MSG,DATE,Y,DIV,HCNT,J
"RTN","RCDPEM4",239,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z"),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z"),HCNT=0
"RTN","RCDPEM4",240,0)
 ;
"RTN","RCDPEM4",241,0)
 S RCHDR(0)=0  ; header line count
"RTN","RCDPEM4",242,0)
 X "S Y=$$HDR"_RCRTYP S HCNT=1
"RTN","RCDPEM4",243,0)
 ;
"RTN","RCDPEM4",244,0)
 I RCRTYP="ERA" D
"RTN","RCDPEM4",245,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",246,0)
 .S Y="Run Date/Time: "_RCHDR("RUNDATE")
"RTN","RCDPEM4",247,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",248,0)
 .S Y="DIVISIONS: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",249,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",250,0)
 .S Y="Date Range: "_START_" - "_END_" (DATE ERA UPDATED)"
"RTN","RCDPEM4",251,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",252,0)
 .; PRCA*4.5*326
"RTN","RCDPEM4",253,0)
 .S Y="MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEM4",254,0)
 .S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEM4",255,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",256,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",257,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                        Date/Time         User Who        EFT Match Status"
"RTN","RCDPEM4",258,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="ERA #      Receipt #    ERA Updated       Updated             Detail Post Status"
"RTN","RCDPEM4",259,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",260,0)
 ;
"RTN","RCDPEM4",261,0)
 I RCRTYP="EOB" D
"RTN","RCDPEM4",262,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",263,0)
 .S Y="Run Date/Time: "_RCHDR("RUNDATE")
"RTN","RCDPEM4",264,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",265,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",266,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",267,0)
 .S Y="Date Range: "_START_" - "_END_" (Date EEOB was Moved/Copied/Removed)"
"RTN","RCDPEM4",268,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",269,0)
 .; PRCA*4.5*326
"RTN","RCDPEM4",270,0)
 .S Y="MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEM4",271,0)
 .S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEM4",272,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",273,0)
 .S Y=" Action(s) Selected: "_$S(RCACT="M":"MOVE",RCACT="C":"COPY",RCACT="R":"REMOVE",1:"ALL")
"RTN","RCDPEM4",274,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",275,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",276,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="Orig Bill#          Trace #"
"RTN","RCDPEM4",277,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                                  Moved/Copied/   Total Amt  User Who Moved/"
"RTN","RCDPEM4",278,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="     ERA #     Date/Time          Removed         Paid       Copied/Removed"
"RTN","RCDPEM4",279,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",280,0)
 ;
"RTN","RCDPEM4",281,0)
 ; add row of equal signs, not for ListMan
"RTN","RCDPEM4",282,0)
 S Y=RCHDR(0)+1,RCHDR(0)=Y,RCHDR(Y)=$TR($J("",80)," ","=")
"RTN","RCDPEM4",283,0)
 Q
"RTN","RCDPEM4",284,0)
 ;
"RTN","RCDPEM4",285,0)
HDRLM ; create the Listman header
"RTN","RCDPEM4",286,0)
 ; returns RCHDR
"RTN","RCDPEM4",287,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM4",288,0)
 ; INPUT: 
"RTN","RCDPEM4",289,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM4",290,0)
 ;   VAUTD - Division  filter value(s)
"RTN","RCDPEM4",291,0)
 N START,END,MSG,DATE,Y,DIV,HCNT,J
"RTN","RCDPEM4",292,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z"),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z"),HCNT=0
"RTN","RCDPEM4",293,0)
 ;
"RTN","RCDPEM4",294,0)
 S RCHDR(0)=0  ; header line count
"RTN","RCDPEM4",295,0)
 X "S Y=$$HDR"_RCRTYP
"RTN","RCDPEM4",296,0)
 I RCRTYP="ERA" D
"RTN","RCDPEM4",297,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",298,0)
 .S HCNT=1,RCHDR(HCNT)=""
"RTN","RCDPEM4",299,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)_"     "
"RTN","RCDPEM4",300,0)
 .; PRCA*4.5*326
"RTN","RCDPEM4",301,0)
 .S Y=Y_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEM4",302,0)
 .S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEM4",303,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",304,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",305,0)
 .S Y="Date Range: "_START_" - "_END_" (DATE ERA UPDATED)"
"RTN","RCDPEM4",306,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",307,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",308,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                        Date/Time         User Who        EFT Match Status"
"RTN","RCDPEM4",309,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="ERA #      Receipt #    ERA Updated       Updated             Detail Post Status"
"RTN","RCDPEM4",310,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",311,0)
 ;
"RTN","RCDPEM4",312,0)
 I RCRTYP="EOB" D
"RTN","RCDPEM4",313,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",314,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)_"     "
"RTN","RCDPEM4",315,0)
 .; PRCA*4.5*326
"RTN","RCDPEM4",316,0)
 .S Y=Y_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEM4",317,0)
 .S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEM4",318,0)
 .S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",319,0)
 .S Y="Date Range: "_START_" - "_END_" (Date EEOB was Moved/Copied/Removed)"
"RTN","RCDPEM4",320,0)
 .S HCNT=2,RCHDR(HCNT)=Y
"RTN","RCDPEM4",321,0)
 .S Y="Action(s) Selected: "_$S(RCACT="M":"MOVE",RCACT="C":"COPY",RCACT="R":"REMOVE",1:"ALL")
"RTN","RCDPEM4",322,0)
 .S HCNT=3,RCHDR(HCNT)=Y
"RTN","RCDPEM4",323,0)
 .S HCNT=4,RCHDR(HCNT)=""
"RTN","RCDPEM4",324,0)
 .S HCNT=5,RCHDR(HCNT)="Orig Bill#          Trace #"
"RTN","RCDPEM4",325,0)
 .S HCNT=6,RCHDR(HCNT)="                                  Moved/Copied/   Total Amt  User Who Moved/"
"RTN","RCDPEM4",326,0)
 .S HCNT=7,RCHDR(HCNT)="     ERA #     Date/Time          Removed         Paid       Copied/Removed"
"RTN","RCDPEM4",327,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",328,0)
 ;
"RTN","RCDPEM4",329,0)
 ; add row of equal signs, not for ListMan
"RTN","RCDPEM4",330,0)
 S:'RCLSTMGR Y=RCHDR(0)+1,RCHDR(0)=Y,RCHDR(Y)=" "_$TR($J("",78)," ","=")
"RTN","RCDPEM4",331,0)
 Q
"RTN","RCDPEM4",332,0)
 ;
"RTN","RCDPEM4",333,0)
HDREOB() ; extrinsic variable, header for EOB report
"RTN","RCDPEM4",334,0)
 Q "EEOB Move/Copy/Remove - Audit Report"
"RTN","RCDPEM4",335,0)
 ;
"RTN","RCDPEM4",336,0)
HDRERA() ; extrinsic variable, header for ERA report
"RTN","RCDPEM4",337,0)
 Q "ERAs Posted with Paper EOB - Audit Report"
"RTN","RCDPEM4",338,0)
 ;
"RTN","RCDPEM4",339,0)
HDRXEC(TYP) ; create xecute code for header
"RTN","RCDPEM4",340,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDR"_TYP_"^"_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"_"_""          Page: ""_RCPGNUM"
"RTN","RCDPEM4",341,0)
 Q
"RTN","RCDPEM4",342,0)
 ;
"RTN","RCDPEM4",343,0)
DTRNG() ; function, return date range for a report
"RTN","RCDPEM4",344,0)
 N DIR,DUOUT,X,Y,RCSTART,RCEND
"RTN","RCDPEM4",345,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEM4",346,0)
 Q:RCSTART=-1 0
"RTN","RCDPEM4",347,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPEM4",348,0)
 Q:'RCSTART "0^^"
"RTN","RCDPEM4",349,0)
 Q 0
"RTN","RCDPEM4",350,0)
 ;
"RTN","RCDPEM4",351,0)
DATES(BDATE,EDATE) ;Get a date range.
"RTN","RCDPEM4",352,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEM4",353,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEM4",354,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start date: " D ^DIR K DIR
"RTN","RCDPEM4",355,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEM4",356,0)
 S BDATE=Y
"RTN","RCDPEM4",357,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEM4",358,0)
 S DIR("B")=Y(0)
"RTN","RCDPEM4",359,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="  End date: " D ^DIR K DIR
"RTN","RCDPEM4",360,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEM4",361,0)
 S EDATE=Y
"RTN","RCDPEM4",362,0)
 Q
"RTN","RCDPEM4",363,0)
 ;
"RTN","RCDPEM4",364,0)
STADIV ;Division/Station Filter/Sort
"RTN","RCDPEM4",365,0)
 ;
"RTN","RCDPEM4",366,0)
 ;Sort selection
"RTN","RCDPEM4",367,0)
 N DIR,DUOUT,Y
"RTN","RCDPEM4",368,0)
 S RCDIV=0
"RTN","RCDPEM4",369,0)
 ;
"RTN","RCDPEM4",370,0)
 ;Division selection - IA 664
"RTN","RCDPEM4",371,0)
 ;RETURNS Y=-1 (quit), VAUTD=1 (for all),VAUTD=0 (selected divisions in VAUTD)
"RTN","RCDPEM4",372,0)
 D DIVISION^VAUTOMA Q:Y<0
"RTN","RCDPEM4",373,0)
 ;
"RTN","RCDPEM4",374,0)
 ;If ALL selected
"RTN","RCDPEM4",375,0)
 I VAUTD=1 S RCDIV=1 Q
"RTN","RCDPEM4",376,0)
 ;If some DIVISIONS selected
"RTN","RCDPEM4",377,0)
 S RCDIV=2
"RTN","RCDPEM4",378,0)
 Q
"RTN","RCDPEM4",379,0)
 ;
"RTN","RCDPEM4",380,0)
ACTION() ; Get action type
"RTN","RCDPEM4",381,0)
 N DIR,X,Y,DIROUT,DUOUT
"RTN","RCDPEM4",382,0)
 S DIR("A")="Move/Copy/Remove or All (M/C/R/A): "
"RTN","RCDPEM4",383,0)
 S DIR("B")="All"  ; default to ALL
"RTN","RCDPEM4",384,0)
 S DIR(0)="SAB^M:Move;C:Copy;R:Remove;A:All"
"RTN","RCDPEM4",385,0)
 D ^DIR Q:$G(DIROUT)!$G(DUOUT) -1
"RTN","RCDPEM4",386,0)
 ;
"RTN","RCDPEM4",387,0)
 Q Y
"RTN","RCDPEM4",388,0)
 ;
"RTN","RCDPEM4",389,0)
DISPTY() ; Get display/output type
"RTN","RCDPEM4",390,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPEM4",391,0)
 S DIR(0)="YA"
"RTN","RCDPEM4",392,0)
 S DIR("A")="Export the report to Microsoft Excel? "
"RTN","RCDPEM4",393,0)
 S DIR("B")="NO"
"RTN","RCDPEM4",394,0)
 D ^DIR I $G(DUOUT) Q -1
"RTN","RCDPEM4",395,0)
 Q Y
"RTN","RCDPEM4",396,0)
 ;
"RTN","RCDPEM4",397,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; Get the station for this ERA
"RTN","RCDPEM4",398,0)
 ; read allowed on BILL/CLAIMS file (#399) via IA 3820
"RTN","RCDPEM4",399,0)
 ; returns STA: station IEN, STNAM: station name, STNUM: station number
"RTN","RCDPEM4",400,0)
 N ERAEOB,ERABILL,STAIEN
"RTN","RCDPEM4",401,0)
 S (ERAEOB,ERABILL)=""
"RTN","RCDPEM4",402,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEM4",403,0)
 D
"RTN","RCDPEM4",404,0)
 .S ERAEOB=$P($G(^RCY(344.4,ERAIEN,1,1,0)),U,2) Q:'ERAEOB  ; if EOB pointer not on first sub-file entry then stop
"RTN","RCDPEM4",405,0)
 .S ERABILL=$P($G(^IBM(361.1,ERAEOB,0)),U,1) Q:'ERABILL  ; EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPEM4",406,0)
 .S STAIEN=$P($G(^DGCR(399,ERABILL,0)),U,22) Q:'STAIEN  ;(#.22) DEFAULT DIVISION [22P:40.8]
"RTN","RCDPEM4",407,0)
 .S STA=STAIEN
"RTN","RCDPEM4",408,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEM4",409,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2) ;IA 417
"RTN","RCDPEM4",410,0)
 ;
"RTN","RCDPEM4",411,0)
 Q
"RTN","RCDPEM4",412,0)
 ;
"RTN","RCDPEM4",413,0)
EOBSTA(EOBIEN,STA,STNUM,STNAM) ; Get the station for this EOB
"RTN","RCDPEM4",414,0)
 ;Allowed read on 399 via IA 3820
"RTN","RCDPEM4",415,0)
 N BILL,STAIEN
"RTN","RCDPEM4",416,0)
 S (BILL)=""
"RTN","RCDPEM4",417,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEM4",418,0)
 D
"RTN","RCDPEM4",419,0)
 .S BILL=$P(^IBM(361.1,EOBIEN,0),U,1) Q:'BILL
"RTN","RCDPEM4",420,0)
 .S STAIEN=$P($G(^DGCR(399,BILL,0)),U,22) Q:'STAIEN
"RTN","RCDPEM4",421,0)
 .S STA=STAIEN
"RTN","RCDPEM4",422,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEM4",423,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2) ;IA 417
"RTN","RCDPEM4",424,0)
 Q
"RTN","RCDPEM4",425,0)
 ;
"RTN","RCDPEM4",426,0)
DTPRB() ; Get the Start Date type
"RTN","RCDPEM4",427,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","RCDPEM4",428,0)
 S DIR(0)="SABO^W:Date Removed from Worklist;R:Date ERA Received;B:Both Dates"
"RTN","RCDPEM4",429,0)
 S DIR("A")="Select Start Date Type: "
"RTN","RCDPEM4",430,0)
 D ^DIR K DIR
"RTN","RCDPEM4",431,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S Y=0
"RTN","RCDPEM4",432,0)
 Q Y
"RTN","RCDPEM4",433,0)
 ;
"RTN","RCDPEM4",434,0)
WP(JC) ; format justification comments
"RTN","RCDPEM4",435,0)
 ; JC - Justification Comment
"RTN","RCDPEM4",436,0)
 I JC="" Q
"RTN","RCDPEM4",437,0)
 N PCS,I,CNTR,CMNT,Y
"RTN","RCDPEM4",438,0)
 ; PCS - Number of " " $pieces in the comment
"RTN","RCDPEM4",439,0)
 ; CNTR - CMNT line counter
"RTN","RCDPEM4",440,0)
 ; CMNT - comment text to be displayed
"RTN","RCDPEM4",441,0)
 S PCS=$L(JC," "),CNTR=1,CMNT(CNTR)=" Justification Comments: "
"RTN","RCDPEM4",442,0)
 F I=1:1:PCS D
"RTN","RCDPEM4",443,0)
 .S Y=$P(JC," ",I)
"RTN","RCDPEM4",444,0)
 .S:$L(CMNT(CNTR))+$L(Y)>72 CNTR=CNTR+1,CMNT(CNTR)=$J(" ",25)
"RTN","RCDPEM4",445,0)
 .S CMNT(CNTR)=CMNT(CNTR)_" "_Y
"RTN","RCDPEM4",446,0)
 ;
"RTN","RCDPEM4",447,0)
 F I=1:1:CNTR D SL^RCDPEARL(CMNT(I),.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",448,0)
 Q
"RTN","RCDPEM4",449,0)
 ;
"RTN","RCDPEM6")
0^8^B92313176
"RTN","RCDPEM6",1,0)
RCDPEM6 ;OIFO-BAYPINES/RBN - DUPLICATE EFT DEPOSITS AUDIT REPORT ;Jun 11, 2014@18:03:49
"RTN","RCDPEM6",2,0)
 ;;4.5;Accounts Receivable;**276,298,326**;Mar 20, 1995;Build 26
"RTN","RCDPEM6",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM6",4,0)
 ;
"RTN","RCDPEM6",5,0)
 ; completely refactored for PRCA*4.5*298
"RTN","RCDPEM6",6,0)
 Q
"RTN","RCDPEM6",7,0)
 ;
"RTN","RCDPEM6",8,0)
 ; generate an audit report that displays EFTs that have been removed by the user
"RTN","RCDPEM6",9,0)
 ; user selects a date range to limit the number of EFTs displayed.
"RTN","RCDPEM6",10,0)
 ; EDI THIRD PARTY EFT DETAIL file (#344.31)
"RTN","RCDPEM6",11,0)
 ;
"RTN","RCDPEM6",12,0)
 ; INPUT: user prompted for Date/Time range
"RTN","RCDPEM6",13,0)
 ;
"RTN","RCDPEM6",14,0)
 ; OUTPUT:
"RTN","RCDPEM6",15,0)
 ; report OF EFTs that have been removed.  
"RTN","RCDPEM6",16,0)
 ; The report has the following:
"RTN","RCDPEM6",17,0)
 ;   Trace number, Payer name, Deposit number, Date removed, User, Justification for removal
"RTN","RCDPEM6",18,0)
 ; data taken from EDI THIRD PARTY EFT DETAIL file (#344.31)
"RTN","RCDPEM6",19,0)
 ; report formatted for 80 columns
"RTN","RCDPEM6",20,0)
 ;
"RTN","RCDPEM6",21,0)
 ; put into ^TMP($J,"RCDPEM6",counter) for ListMan
"RTN","RCDPEM6",22,0)
 ; $pieces: DEPOSIT NUMBER^EFT DETAIL^PAYER^TRACE NUMBER^AMOUNT^DATE REMOVED^USER^JUSTIFICATION ; PRCA*4.5*326
"RTN","RCDPEM6",23,0)
 ;
"RTN","RCDPEM6",24,0)
EN1 ; entry point for EFT Audit Report
"RTN","RCDPEM6",25,0)
 N I,RCDISPTY,RCDTRNG,RCHDR,RCLSTMGR,RCPGNUM,RCSTOP,RCTMPND,RCTYPE,X,Y
"RTN","RCDPEM6",26,0)
 ; RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM6",27,0)
 ; RCDTRNG - date range selected
"RTN","RCDPEM6",28,0)
 ; RCHDR - header array
"RTN","RCDPEM6",29,0)
 ; RCLSTMGR - ListMan flag
"RTN","RCDPEM6",30,0)
 ; RCPGNUM - report page number
"RTN","RCDPEM6",31,0)
 ; RCSTOP - boolean, User indicated to stop
"RTN","RCDPEM6",32,0)
 ; RCTMPND - storage node in ^TMP
"RTN","RCDPEM6",33,0)
 ;
"RTN","RCDPEM6",34,0)
 S RCLSTMGR=0,RCSTOP=1 ; PRCA*4.5*326 - Initialize variables used in EXIT
"RTN","RCDPEM6",35,0)
 W !,"    "_$$HDRNM,!
"RTN","RCDPEM6",36,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'(RCDTRNG>0) EXIT
"RTN","RCDPEM6",37,0)
 S RCTYPE=$$RTYPE^RCDPEU1("A") I RCTYPE=-1 G EXIT    ; PRCA*4.5*326
"RTN","RCDPEM6",38,0)
 S RCLSTMGR=""  ; ListMan flag, set to '^' if sent to Excel
"RTN","RCDPEM6",39,0)
 S RCTMPND=""  ; if null, report lines not stored in ^TMP, written directly
"RTN","RCDPEM6",40,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() G:RCDISPTY<0 EXIT
"RTN","RCDPEM6",41,0)
 ; display information for Excel, indicate not to ask for ListMan
"RTN","RCDPEM6",42,0)
 I RCDISPTY D INFO S RCLSTMGR=U
"RTN","RCDPEM6",43,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEM6",44,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EXIT
"RTN","RCDPEM6",45,0)
 I RCLSTMGR D  G EXIT
"RTN","RCDPEM6",46,0)
 .S RCTMPND=$T(+0)_"^DUP EFT"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEM6",47,0)
 .D GENRPRT,DSPRPRT  ; generate report and store it in ^TMP
"RTN","RCDPEM6",48,0)
 .N H,L,HDR S L=0
"RTN","RCDPEM6",49,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEM6",50,0)
 .F H=1:1 Q:'$D(RCHDR(H))  S L=H,HDR(H)=RCHDR(H)  ; take first 3 lines of report header
"RTN","RCDPEM6",51,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEM6",52,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEM6",53,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEM6",54,0)
 ;
"RTN","RCDPEM6",55,0)
 ; Select output device
"RTN","RCDPEM6",56,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEM6",57,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPEM6",58,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEM6",59,0)
 .S ZTRTN="ENFRMQ^RCDPEM6",ZTDESC=$$HDRNM,ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEM6",60,0)
 .D ^%ZTLOAD
"RTN","RCDPEM6",61,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" queued.",1:"Unable to queue this task.")
"RTN","RCDPEM6",62,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPEM6",63,0)
 ;
"RTN","RCDPEM6",64,0)
 U IO
"RTN","RCDPEM6",65,0)
 ; fall through to generate report
"RTN","RCDPEM6",66,0)
 ;
"RTN","RCDPEM6",67,0)
ENFRMQ ; entry point from TaskMan Queue
"RTN","RCDPEM6",68,0)
 D GENRPRT,DSPRPRT
"RTN","RCDPEM6",69,0)
 D EXIT
"RTN","RCDPEM6",70,0)
 Q
"RTN","RCDPEM6",71,0)
 ;
"RTN","RCDPEM6",72,0)
GENRPRT ; Generate the report ^TMP array
"RTN","RCDPEM6",73,0)
 ; INPUT: RCDTRNG - date range for report
"RTN","RCDPEM6",74,0)
 ;
"RTN","RCDPEM6",75,0)
 N EFTIEN,FRSTDT,INDXDT,LSTDT,X,Y
"RTN","RCDPEM6",76,0)
 ; INDXDT - date of EFT from "E" x-ref
"RTN","RCDPEM6",77,0)
 ; FRSTDT  - Start date of report date range
"RTN","RCDPEM6",78,0)
 ; LSTDT - End date of report date range
"RTN","RCDPEM6",79,0)
 ; EFTIEN - IEN of EFT
"RTN","RCDPEM6",80,0)
 ;
"RTN","RCDPEM6",81,0)
 K ^TMP($J,"RC DUP EFT")  ; used for report
"RTN","RCDPEM6",82,0)
 S FRSTDT=$P(RCDTRNG,U,2) S:FRSTDT<1 FRSTDT=2010101  ; 1 Jan 1901
"RTN","RCDPEM6",83,0)
 S LSTDT=$P(RCDTRNG,U,3) S:LSTDT<1 LSTDT=4010101  ; 1 Jan 2101
"RTN","RCDPEM6",84,0)
 S INDXDT=FRSTDT-.00000001  ; initial value for x-ref
"RTN","RCDPEM6",85,0)
 ;
"RTN","RCDPEM6",86,0)
 ; ^RCY(344.31,D0,3) = (#.17) USER WHO REMOVED EFT [1P:200] ^ (#.18) DATE/TIME DUPLICATE REMOVED [2D] ^ (#.19) EFT REMOVAL REASON [3F]
"RTN","RCDPEM6",87,0)
 F  S INDXDT=$O(^RCY(344.31,"E",INDXDT)) Q:'INDXDT!($P(INDXDT,".",1)>LSTDT)  D  ; PRCA*4.5*326
"RTN","RCDPEM6",88,0)
 . S EFTIEN=0 F  S EFTIEN=$O(^RCY(344.31,"E",INDXDT,EFTIEN)) Q:'EFTIEN  D  ;
"RTN","RCDPEM6",89,0)
 . . I '$$ISTYPE^RCDPEU1(344.31,EFTIEN,RCTYPE) Q  ; PRCA*4.5*326
"RTN","RCDPEM6",90,0)
 . . D:$D(^RCY(344.31,EFTIEN,3)) PROC(EFTIEN)
"RTN","RCDPEM6",91,0)
 ;
"RTN","RCDPEM6",92,0)
 Q
"RTN","RCDPEM6",93,0)
 ;
"RTN","RCDPEM6",94,0)
DSPRPRT ; Format display for screen/printer, Excel, or ListMan
"RTN","RCDPEM6",95,0)
 ; RCDISPTY - display for Excel flag
"RTN","RCDPEM6",96,0)
 ; RCLSTMGR - display for ListMan flag
"RTN","RCDPEM6",97,0)
 ;
"RTN","RCDPEM6",98,0)
 N CNT,DUPEFT,IEN,LINE,RCLNCNT,Y
"RTN","RCDPEM6",99,0)
 ; CNT - Count of EFT Deposits removed
"RTN","RCDPEM6",100,0)
 ; IEN - line number of the data in ^TMP
"RTN","RCDPEM6",101,0)
 ; DUPEFT - Data from ^TMP($J,"RC DUP EFT",IEN)
"RTN","RCDPEM6",102,0)
 ; RCLNCNT - line counter for SL^RCDPEARL
"RTN","RCDPEM6",103,0)
 ;
"RTN","RCDPEM6",104,0)
 D:'RCLSTMGR HDRBLD
"RTN","RCDPEM6",105,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPEM6",106,0)
 ;
"RTN","RCDPEM6",107,0)
 I $G(RCTMPND)'="" K ^TMP($J,RCTMPND) S RCLNCNT=0
"RTN","RCDPEM6",108,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; initial report header
"RTN","RCDPEM6",109,0)
 S IEN="",CNT=0
"RTN","RCDPEM6",110,0)
 F  S IEN=$O(^TMP($J,"RC DUP EFT",IEN)) Q:'IEN!RCSTOP  D
"RTN","RCDPEM6",111,0)
 .S CNT=CNT+1,DUPEFT=^TMP($J,"RC DUP EFT",IEN)
"RTN","RCDPEM6",112,0)
 .I RCDISPTY D SL^RCDPEARL(DUPEFT,.RCLNCNT,RCTMPND) Q  ; Excel format, write line and quit
"RTN","RCDPEM6",113,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM6",114,0)
 .; BEGIN PRCA*4.5*326
"RTN","RCDPEM6",115,0)
 .S Y=$$PAD^RCDPEARL(" "_$P(DUPEFT,U)_"/"_$P(DUPEFT,U,2),20)_$P(DUPEFT,U,4) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",116,0)
 .S Y=$J(" ",6)_$P(DUPEFT,U,3) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",117,0)
 .S Y=$$PAD^RCDPEARL($J(" ",16)_$J($P(DUPEFT,U,5),0,2),28)_$P(DUPEFT,U,6)
"RTN","RCDPEM6",118,0)
 .S Y=$$PAD^RCDPEARL(Y,50)_$E($P(DUPEFT,U,7),1,25) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",119,0)
 .D WP($P(DUPEFT,U,8)) D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",120,0)
 .; END - PRCA*4.5*326
"RTN","RCDPEM6",121,0)
 ;
"RTN","RCDPEM6",122,0)
 I 'RCDISPTY,'RCSTOP D  ; not for Excel
"RTN","RCDPEM6",123,0)
 .S Y=" Total number of duplicates removed: "_CNT D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND),SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",124,0)
 ;
"RTN","RCDPEM6",125,0)
 I 'RCSTOP D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",126,0)
 ;
"RTN","RCDPEM6",127,0)
 Q
"RTN","RCDPEM6",128,0)
 ;
"RTN","RCDPEM6",129,0)
PROC(EFTIEN) ;  gather data into ^TMP
"RTN","RCDPEM6",130,0)
 ; EFTIEN = ien of the EFT
"RTN","RCDPEM6",131,0)
 ;
"RTN","RCDPEM6",132,0)
 N AMT,DEPNO,EFTLID,JUST,PAYER,PTR,RCRD,RTRNDT,TRACE,USER ; Added EFTLID - PRCA*4.5*326
"RTN","RCDPEM6",133,0)
 ; JUST - Justification for returning EFT
"RTN","RCDPEM6",134,0)
 ; TRACE - EFT Trace number
"RTN","RCDPEM6",135,0)
 ; AMT - amount of the EFT
"RTN","RCDPEM6",136,0)
 ; PAYER - EFT payer
"RTN","RCDPEM6",137,0)
 ; PTR - pointer to #344.3
"RTN","RCDPEM6",138,0)
 ; RTRNDT - Date EFT returned
"RTN","RCDPEM6",139,0)
 ; USER - User who completed the transaction
"RTN","RCDPEM6",140,0)
 ; DEPNO - Deposit # of EFT
"RTN","RCDPEM6",141,0)
 ; EFTLID  - EFT Detail line identifier NNNN.NN
"RTN","RCDPEM6",142,0)
 ;
"RTN","RCDPEM6",143,0)
 S RCRD(0)=$G(^RCY(344.31,EFTIEN,0)),RCRD(3)=$G(^(3))
"RTN","RCDPEM6",144,0)
 S USER=$$NAME^XUSER($P(RCRD(3),U),"F")
"RTN","RCDPEM6",145,0)
 S RTRNDT=$$FMTE^XLFDT($P(^RCY(344.31,EFTIEN,3),U,2),2)
"RTN","RCDPEM6",146,0)
 S JUST=$P(RCRD(3),U,3)
"RTN","RCDPEM6",147,0)
 S PAYER=$P(RCRD(0),U,2) S:PAYER="" PAYER="Unknown Payer"
"RTN","RCDPEM6",148,0)
 S TRACE=$P(RCRD(0),U,4),AMT=$P(RCRD(0),U,7)
"RTN","RCDPEM6",149,0)
 S PTR=+$P(RCRD(0),U)
"RTN","RCDPEM6",150,0)
 ; EDI LOCKBOX DEPOSIT (#344.3), (#.06) DEPOSIT NUMBER [6F]
"RTN","RCDPEM6",151,0)
 S:PTR>0 DEPNO=$P($G(^RCY(344.3,PTR,0)),U,6)
"RTN","RCDPEM6",152,0)
 S:DEPNO="" DEPNO="Unknown"
"RTN","RCDPEM6",153,0)
 S EFTLID=$$GET1^DIQ(344.31,EFTIEN_",",.01,"E") ; PRCA*4.5*326
"RTN","RCDPEM6",154,0)
 S ^TMP($J,"RC DUP EFT",EFTIEN)=DEPNO_"^"_EFTLID_"^"_PAYER_"^"_TRACE_"^"_AMT_"^"_RTRNDT_"^"_USER_"^"_JUST ; PRCA*4.5*326
"RTN","RCDPEM6",155,0)
 Q
"RTN","RCDPEM6",156,0)
 ;
"RTN","RCDPEM6",157,0)
HDRBLD ; create the report header
"RTN","RCDPEM6",158,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEM6",159,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM6",160,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEM6",161,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEM6",162,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEM6",163,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEM6",164,0)
 ; INPUT: 
"RTN","RCDPEM6",165,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM6",166,0)
 ;   RCRTYP - Report Type (EOB or ERA)
"RTN","RCDPEM6",167,0)
 ;   RCDTRNG - selected dates
"RTN","RCDPEM6",168,0)
 ;
"RTN","RCDPEM6",169,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM6",170,0)
 ;
"RTN","RCDPEM6",171,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEM6",172,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEM6",173,0)
 .S RCHDR(1)="DEPOSIT NUMBER^EFT NUMBER^PAYER^TRACE NUMBER^AMOUNT^DATE REMOVED^USER^JUSTIFICATION"
"RTN","RCDPEM6",174,0)
 ;
"RTN","RCDPEM6",175,0)
 N DIV,HCNT,Y
"RTN","RCDPEM6",176,0)
 S HCNT=0  ; counter for header
"RTN","RCDPEM6",177,0)
 ;
"RTN","RCDPEM6",178,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEM6",179,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y_""            Page: ""_RCPGNUM"
"RTN","RCDPEM6",180,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE")
"RTN","RCDPEM6",181,0)
 ; PRCA*4.5*326 - Add M/P/T filter
"RTN","RCDPEM6",182,0)
 S Y=Y_$J("",17)_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPEM6",183,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPEM6",184,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEM6",185,0)
 ;
"RTN","RCDPEM6",186,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEM6",187,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEM6",188,0)
 S Y="Date Range: "_Y("1ST")_" - "_$$FMTE^XLFDT(Y("LST"),"2Z")_" (DATE EFT REMOVAL)"
"RTN","RCDPEM6",189,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM6",190,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",191,0)
 K Y  ; delete Y subscripts
"RTN","RCDPEM6",192,0)
 I $G(RCLSTMGR) S HCNT=HCNT+1,RCHDR(HCNT)="",HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",193,0)
 S Y=$$PAD^RCDPEARL(" Deposit#/EFT#",20)_"Trace #",HCNT=HCNT+1,RCHDR(HCNT)=Y ; PRCA*4.5*326
"RTN","RCDPEM6",194,0)
 S Y=$$PAD^RCDPEARL($J(" ",6)_"Payer Name",28),Y=Y_"Date/Time",Y=$$PAD^RCDPEARL(Y,50)_"User Who"
"RTN","RCDPEM6",195,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",196,0)
 S Y=$J(" ",16)_"Amount",Y=$$PAD^RCDPEARL(Y,28)_"Removed",Y=$$PAD^RCDPEARL(Y,50)_"Removed"
"RTN","RCDPEM6",197,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",198,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",199,0)
 ;
"RTN","RCDPEM6",200,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEM6",201,0)
 Q
"RTN","RCDPEM6",202,0)
 ;
"RTN","RCDPEM6",203,0)
HDRLM ; create the Listman Screen header section
"RTN","RCDPEM6",204,0)
 ; returns RCHDR
"RTN","RCDPEM6",205,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM6",206,0)
 ; INPUT: 
"RTN","RCDPEM6",207,0)
 ;   RCDTRNG - selected dates
"RTN","RCDPEM6",208,0)
 ;
"RTN","RCDPEM6",209,0)
 K RCHDR S RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM6",210,0)
 ;
"RTN","RCDPEM6",211,0)
 N DIV,HCNT,Y
"RTN","RCDPEM6",212,0)
 S HCNT=0  ; counter for header
"RTN","RCDPEM6",213,0)
 ;
"RTN","RCDPEM6",214,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEM6",215,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEM6",216,0)
 S Y="Date Range: "_Y("1ST")_" - "_$$FMTE^XLFDT(Y("LST"),"2Z")_" (DATE EFT REMOVAL)"
"RTN","RCDPEM6",217,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",218,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",219,0)
 K Y  ; delete Y subscripts
"RTN","RCDPEM6",220,0)
 S Y="Medical/Pharmacy/Tricare: " ; PRCA*4.5*326 - Add M/P/T filter
"RTN","RCDPEM6",221,0)
 S Y=Y_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL") ; ; PRCA*4.5*326
"RTN","RCDPEM6",222,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",223,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM6",224,0)
 S Y=$$PAD^RCDPEARL(" Deposit#/EFT#",20)_"Trace #",HCNT=HCNT+1,RCHDR(HCNT)=Y ; PRCA*4.5*326
"RTN","RCDPEM6",225,0)
 S Y=$$PAD^RCDPEARL($J(" ",6)_"Payer Name",28),Y=Y_"Date/Time",Y=$$PAD^RCDPEARL(Y,50)_"User Who"
"RTN","RCDPEM6",226,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",227,0)
 S Y=$J(" ",16)_"Amount",Y=$$PAD^RCDPEARL(Y,28)_"Removed",Y=$$PAD^RCDPEARL(Y,50)_"Removed"
"RTN","RCDPEM6",228,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM6",229,0)
 ;
"RTN","RCDPEM6",230,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEM6",231,0)
 Q
"RTN","RCDPEM6",232,0)
 ;
"RTN","RCDPEM6",233,0)
 ; extrinsic variable, header text
"RTN","RCDPEM6",234,0)
HDRNM() Q "Duplicate EFT Deposits - Audit Report"
"RTN","RCDPEM6",235,0)
 ;
"RTN","RCDPEM6",236,0)
EXIT ;
"RTN","RCDPEM6",237,0)
 I '$D(ZTQUEUED),'RCLSTMGR,'RCSTOP D ASK^RCDPEARL(.RCSTOP) ; PRCA*4.5*326
"RTN","RCDPEM6",238,0)
 D ^%ZISC
"RTN","RCDPEM6",239,0)
 K ^TMP($J,"RC DUP EFT")  ; clean up
"RTN","RCDPEM6",240,0)
 Q
"RTN","RCDPEM6",241,0)
 ;
"RTN","RCDPEM6",242,0)
INFO ; Useful Info for Excel capture
"RTN","RCDPEM6",243,0)
 N SP S SP=$J(" ",10)  ; spaces
"RTN","RCDPEM6",244,0)
 W !!!,SP_"Before continuing, please set up your terminal to capture the"
"RTN","RCDPEM6",245,0)
 W !,SP_"report data as this report may take a while to run."
"RTN","RCDPEM6",246,0)
 W !!,SP_"To avoid undesired wrapping of the data saved to the"
"RTN","RCDPEM6",247,0)
 W !,SP_"file, please enter '0;256;999' at the 'DEVICE:' prompt."
"RTN","RCDPEM6",248,0)
 W !!,SP_"It may be necessary to set the terminal's display width"
"RTN","RCDPEM6",249,0)
 W !,SP_"to 256 characters, which can be performed by selecting the"
"RTN","RCDPEM6",250,0)
 W !,SP_"Display option located within the 'Setup' menu on the"
"RTN","RCDPEM6",251,0)
 W !,SP_"tool bar of the terminal emulation software (e.g. KEA,"
"RTN","RCDPEM6",252,0)
 W !,SP_"Reflection, or Smarterm).",!!
"RTN","RCDPEM6",253,0)
 Q
"RTN","RCDPEM6",254,0)
 ;
"RTN","RCDPEM6",255,0)
WP(JC) ; format justification comments
"RTN","RCDPEM6",256,0)
 ; JC - Justification Comment
"RTN","RCDPEM6",257,0)
 I JC="" Q
"RTN","RCDPEM6",258,0)
 N PCS,I,CNTR,CMNT,Y
"RTN","RCDPEM6",259,0)
 ; PCS - Number of " " $pieces in the comment
"RTN","RCDPEM6",260,0)
 ; CNTR - CMNT line counter
"RTN","RCDPEM6",261,0)
 ; CMNT - comment text to be displayed
"RTN","RCDPEM6",262,0)
 S PCS=$L(JC," "),CNTR=1,CMNT(CNTR)=" Justification Comments: "
"RTN","RCDPEM6",263,0)
 F I=1:1:PCS D
"RTN","RCDPEM6",264,0)
 .S Y=$P(JC," ",I)
"RTN","RCDPEM6",265,0)
 .S:$L(CMNT(CNTR))+$L(Y)>72 CNTR=CNTR+1,CMNT(CNTR)=$J(" ",25)
"RTN","RCDPEM6",266,0)
 .S CMNT(CNTR)=CMNT(CNTR)_" "_Y
"RTN","RCDPEM6",267,0)
 ;
"RTN","RCDPEM6",268,0)
 F I=1:1:CNTR D SL^RCDPEARL(CMNT(I),.RCLNCNT,RCTMPND)
"RTN","RCDPEM6",269,0)
 Q
"RTN","RCDPEM6",270,0)
 ;
"RTN","RCDPEM6",271,0)
NOW() ;function, Returns current date/time in format mm/dd/yy@hh:mm:ss
"RTN","RCDPEM6",272,0)
 Q $$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPEM6",273,0)
 ;
"RTN","RCDPEM7")
0^50^B161364446
"RTN","RCDPEM7",1,0)
RCDPEM7 ;OIFO-BAYPINES/PJH - OVERDUE EFT AND ERA BULLETINS ;Jun 06, 2014@19:11:19
"RTN","RCDPEM7",2,0)
 ;;4.5;Accounts Receivable;**276,298,303,304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEM7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM7",4,0)
 ;
"RTN","RCDPEM7",5,0)
EN ; Main entry point for overdue EFT/ERA bulletins
"RTN","RCDPEM7",6,0)
 ;
"RTN","RCDPEM7",7,0)
 N TODAY,ERACNT,ERATOT,ERA1CNT,ERA2CNT,ERA1TOT,ERA2TOT,EFTCNT,EFTTOT,RCPROG,RCSUSCNT,RCSUSAMT,RCMXDYS
"RTN","RCDPEM7",8,0)
 ;Clear workfiles
"RTN","RCDPEM7",9,0)
 S RCPROG="RCDPEM7" K ^TMP(RCPROG,$J)
"RTN","RCDPEM7",10,0)
 ;Set counters and totals
"RTN","RCDPEM7",11,0)
 S (EFTCNT,ERACNT,ERA1CNT,ERA2CNT,EFTTOT,ERATOT,ERA1TOT,ERA2TOT,RCSUSCNT,RCSUSAMT)=0
"RTN","RCDPEM7",12,0)
 ;Cuttoff of 12:00 am today
"RTN","RCDPEM7",13,0)
 S TODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPEM7",14,0)
 ;
"RTN","RCDPEM7",15,0)
 ;Verify this is correct day for bulletins - PRCA*4.5*321
"RTN","RCDPEM7",16,0)
 N X
"RTN","RCDPEM7",17,0)
 S X=TODAY
"RTN","RCDPEM7",18,0)
 D DW^%DTC
"RTN","RCDPEM7",19,0)
 I $$GET1^DIQ(344.61,"1,",.1)'=X Q
"RTN","RCDPEM7",20,0)
 ;
"RTN","RCDPEM7",21,0)
 ;Retrieve the max days allowed in suspense parameter
"RTN","RCDPEM7",22,0)
 S RCMXDYS=$$GET1^DIQ(342,"1,",7.04)
"RTN","RCDPEM7",23,0)
 ;
"RTN","RCDPEM7",24,0)
 ;Scan for overdue ERA and unposted ERA
"RTN","RCDPEM7",25,0)
 D ERASCAN
"RTN","RCDPEM7",26,0)
 ;Scan for overdue EFT
"RTN","RCDPEM7",27,0)
 D EFTSCAN
"RTN","RCDPEM7",28,0)
 ;Scan for overdue Suspended ERA's - PRCA*4.5*304
"RTN","RCDPEM7",29,0)
 D SUSPSCAN
"RTN","RCDPEM7",30,0)
 ;Bulletins
"RTN","RCDPEM7",31,0)
 D BULLETIN
"RTN","RCDPEM7",32,0)
 ;Clear workfiles
"RTN","RCDPEM7",33,0)
 K ^TMP(RCPROG,$J)
"RTN","RCDPEM7",34,0)
 Q
"RTN","RCDPEM7",35,0)
 ;
"RTN","RCDPEM7",36,0)
ERASCAN ;Scan ERA
"RTN","RCDPEM7",37,0)
 N AMT,ERAIEN,FDATE,PNAME,REC0,SUB,STATUS,TRACE ; PRCA*4.5*326
"RTN","RCDPEM7",38,0)
 ;Scan for unmatched ERA
"RTN","RCDPEM7",39,0)
 S ERAIEN=0,STATUS=0,SUB="ERA"
"RTN","RCDPEM7",40,0)
 F  S ERAIEN=$O(^RCY(344.4,"AMATCH",STATUS,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM7",41,0)
 .S REC0=$G(^RCY(344.4,ERAIEN,0))
"RTN","RCDPEM7",42,0)
 .;Get ERA file date/time
"RTN","RCDPEM7",43,0)
 .S FDATE=$P(REC0,U,7) Q:'FDATE
"RTN","RCDPEM7",44,0)
 .;Ignore if <31 days overdue
"RTN","RCDPEM7",45,0)
 .Q:$$FMDIFF^XLFDT(TODAY,FDATE,1)<31
"RTN","RCDPEM7",46,0)
 .;Trace, Payer Name and Amount
"RTN","RCDPEM7",47,0)
 .S PNAME=$P(REC0,U,6),AMT=$P(REC0,U,5),TRACE=$P(REC0,U,2) ; PRCA*4.5*326
"RTN","RCDPEM7",48,0)
 .I $L(PNAME)>35 S PNAME=$E(PNAME,1,35) ; limit size of the name
"RTN","RCDPEM7",49,0)
 .;Update count and totals
"RTN","RCDPEM7",50,0)
 .S ERACNT=ERACNT+1,ERATOT=ERATOT+AMT
"RTN","RCDPEM7",51,0)
 . ; PRCA*4.5*303 added the FDATE subscript to the global so that the line
"RTN","RCDPEM7",52,0)
 . ; items collate in date ascending order.
"RTN","RCDPEM7",53,0)
 . ;Save ERA#, Payer Name, File Date, Trace# and Amount Paid
"RTN","RCDPEM7",54,0)
 .S ^TMP(RCPROG,$J,"ERA",FDATE,ERACNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",55,0)
 .S ^TMP(RCPROG,$J,"ERA",FDATE,ERACNT,"TR")="   "_TRACE ; PRCA*4.5*326
"RTN","RCDPEM7",56,0)
 ;
"RTN","RCDPEM7",57,0)
 ;Scan for Matched/Unposted ERA
"RTN","RCDPEM7",58,0)
 S SUB="ERA1"
"RTN","RCDPEM7",59,0)
 F STATUS=-1,1,2,3 D
"RTN","RCDPEM7",60,0)
 . S ERAIEN=0 F  S ERAIEN=$O(^RCY(344.4,"AMATCH",STATUS,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM7",61,0)
 .. S REC0=$G(^RCY(344.4,ERAIEN,0))
"RTN","RCDPEM7",62,0)
 .. ;Get ERA file date/time
"RTN","RCDPEM7",63,0)
 .. S FDATE=$P(REC0,U,7) Q:'FDATE
"RTN","RCDPEM7",64,0)
 .. ;Ignore if <31 days overdue
"RTN","RCDPEM7",65,0)
 .. Q:$$FMDIFF^XLFDT(TODAY,FDATE,1)<31
"RTN","RCDPEM7",66,0)
 .. ;Ignore if not unposted posted
"RTN","RCDPEM7",67,0)
 .. Q:$P($G(^RCY(344.4,ERAIEN,0)),U,14)>0
"RTN","RCDPEM7",68,0)
 .. ;Payer Name, Trace and Amount
"RTN","RCDPEM7",69,0)
 .. S PNAME=$P(REC0,U,6),AMT=$P(REC0,U,5),TRACE=$P(REC0,U,2) ; PRCA*4.5*326
"RTN","RCDPEM7",70,0)
 .. I $L(PNAME)>35 S PNAME=$E(PNAME,1,35) ; limit size of the name
"RTN","RCDPEM7",71,0)
 .. ; PRCA*4.5*303 Split into "ACH" and not "ACH"
"RTN","RCDPEM7",72,0)
 .. ;Update count and totals
"RTN","RCDPEM7",73,0)
 .. S:$P(REC0,U,15)="ACH" ERA1CNT=ERA1CNT+1,ERA1TOT=ERA1TOT+AMT
"RTN","RCDPEM7",74,0)
 .. S:$P(REC0,U,15)'="ACH" ERA2CNT=ERA2CNT+1,ERA2TOT=ERA2TOT+AMT
"RTN","RCDPEM7",75,0)
 .. ;PRCA*4.5*303 added the FDATE subscript to the global so that the line
"RTN","RCDPEM7",76,0)
 .. ;items collate in date ascending order.
"RTN","RCDPEM7",77,0)
 .. ; BEGIN PRCA*4.5*326
"RTN","RCDPEM7",78,0)
 .. ;Save ERA#, Payer Name, File Date, Trace# and Amount Paid
"RTN","RCDPEM7",79,0)
 .. I $P(REC0,U,15)="ACH" D
"RTN","RCDPEM7",80,0)
 ... S ^TMP(RCPROG,$J,"ERA1",FDATE,ERA1CNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",81,0)
 ... S ^TMP(RCPROG,$J,"ERA1",FDATE,ERA1CNT,"TR")="   "_TRACE
"RTN","RCDPEM7",82,0)
 ..I $P(REC0,U,15)'="ACH" D
"RTN","RCDPEM7",83,0)
 ... S ^TMP(RCPROG,$J,"ERA2",FDATE,ERA2CNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",84,0)
 ... S ^TMP(RCPROG,$J,"ERA2",FDATE,ERA2CNT,"TR")="   "_TRACE
"RTN","RCDPEM7",85,0)
 .. ; END PRCA*4.5*326
"RTN","RCDPEM7",86,0)
 .. Q
"RTN","RCDPEM7",87,0)
 . Q
"RTN","RCDPEM7",88,0)
 Q
"RTN","RCDPEM7",89,0)
 ;
"RTN","RCDPEM7",90,0)
EFTSCAN ;Scan EFT
"RTN","RCDPEM7",91,0)
 N DEPN,EFTIEN,IEN3443,EFTDATE,TRACE,REC0,REC31,REC4,STATUS,PAYER,DEPAMT
"RTN","RCDPEM7",92,0)
 ;Scan for unmatched EFT
"RTN","RCDPEM7",93,0)
 S EFTIEN=0,STATUS=0
"RTN","RCDPEM7",94,0)
 ; PRCA*4.5*303 Check all statuses report on unmatched EFTs, Matched EFTs with unposted ERAs
"RTN","RCDPEM7",95,0)
 ; 4-7-2016 Removed F STATUS=-1,0,1 per issue identifying duplicate EFTs this will need to be
"RTN","RCDPEM7",96,0)
 ; addressed in another project
"RTN","RCDPEM7",97,0)
 S STATUS=0 F  S EFTIEN=$O(^RCY(344.31,"AMATCH",STATUS,EFTIEN)) Q:'EFTIEN  D
"RTN","RCDPEM7",98,0)
 .S REC31=$G(^RCY(344.31,EFTIEN,0))
"RTN","RCDPEM7",99,0)
 .;PRCA*4.5*303 Get zero node of the associated ERA if matched
"RTN","RCDPEM7",100,0)
 .S REC4=$S($P(REC31,U,10)'="":$G(^RCY(344.4,$P(REC31,U,10),0)),1:"")
"RTN","RCDPEM7",101,0)
 .;Get pointer to EFT file
"RTN","RCDPEM7",102,0)
 .S IEN3443=$P(REC31,U) Q:'IEN3443
"RTN","RCDPEM7",103,0)
 .S REC0=$G(^RCY(344.3,IEN3443,0))
"RTN","RCDPEM7",104,0)
 .;Get EFT file date
"RTN","RCDPEM7",105,0)
 .S EFTDATE=$P(REC0,U,2) Q:'EFTDATE
"RTN","RCDPEM7",106,0)
 .;Ignore if <15 days overdue
"RTN","RCDPEM7",107,0)
 .Q:$$FMDIFF^XLFDT(TODAY,EFTDATE,1)<15
"RTN","RCDPEM7",108,0)
 .;PRCA*4.5*303 - if we have a ERA check to see if we include this record or quit
"RTN","RCDPEM7",109,0)
 .I REC4'="" Q:$P(REC4,U,14)'=0  ; Not posted status is 0 - everything else is ignored
"RTN","RCDPEM7",110,0)
 .;Deposit number and payment amount
"RTN","RCDPEM7",111,0)
 .S DEPN=$P(REC0,U,6),DEPAMT=$P(REC31,U,7)
"RTN","RCDPEM7",112,0)
 .;Payer ID and Trace from EFT detail file
"RTN","RCDPEM7",113,0)
 .S PAYER=$P(REC31,U,2),TRACE=$P(REC31,U,4) S:PAYER="" PAYER="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEM7",114,0)
 .;If payer and trace combined are >40 truncate payer name first
"RTN","RCDPEM7",115,0)
 .I $L(PAYER_TRACE)>40 D
"RTN","RCDPEM7",116,0)
 ..I $L(PAYER)>20 S PAYER=$E(PAYER,1,20) ; limit size of the name
"RTN","RCDPEM7",117,0)
 ..Q:$L(PAYER_TRACE)<41
"RTN","RCDPEM7",118,0)
 ..S TRACE=$E(TRACE,1,20) ; limit size of the trace
"RTN","RCDPEM7",119,0)
 .;Update count and totals
"RTN","RCDPEM7",120,0)
 .S EFTCNT=EFTCNT+1,EFTTOT=EFTTOT+DEPAMT
"RTN","RCDPEM7",121,0)
 .; PRCA*4.5*303 added EFTDATE to the subscripts before EFTCNT so report will sort in
"RTN","RCDPEM7",122,0)
 .; date ascending order.
"RTN","RCDPEM7",123,0)
 .;Save Deposit No, Receipt, Payer ID, EFT Date and Deposit Amount
"RTN","RCDPEM7",124,0)
 .S ^TMP(RCPROG,$J,"EFT",EFTDATE,EFTCNT)=$$EFTL(DEPN,TRACE,PAYER,EFTDATE,DEPAMT)
"RTN","RCDPEM7",125,0)
 Q
"RTN","RCDPEM7",126,0)
 ;
"RTN","RCDPEM7",127,0)
 ; PRCA*4.5*304
"RTN","RCDPEM7",128,0)
 ; Scan for ERA's older than allowed by parameter
"RTN","RCDPEM7",129,0)
SUSPSCAN ;
"RTN","RCDPEM7",130,0)
 N RCCT,RCDATA,RCSDATE,RCDATA0,RCDATA2,RCDATA3,RCMAXDAY,RCRECTDA,RCTRANDA
"RTN","RCDPEM7",131,0)
 N RCDEP,RCTRACE,RCPAYER,RCEFTDT,RCDEPAMT,RCDAYS,RCUSER,RCREC,RCDISP,RCRSN,RCSREC
"RTN","RCDPEM7",132,0)
 ;
"RTN","RCDPEM7",133,0)
 ;initialize counters
"RTN","RCDPEM7",134,0)
 S (RCSUSAMT,RCSUSCNT)=0
"RTN","RCDPEM7",135,0)
 ;
"RTN","RCDPEM7",136,0)
 ;calculate the last date to stop gathering entries on
"RTN","RCDPEM7",137,0)
 S RCMAXDAY=TODAY-RCMXDYS
"RTN","RCDPEM7",138,0)
 ;
"RTN","RCDPEM7",139,0)
 ;Loop through the In Suspense index
"RTN","RCDPEM7",140,0)
 S (RCRECTDA,RCCT)=0
"RTN","RCDPEM7",141,0)
 F  S RCRECTDA=$O(^RCY(344,"AN",RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPEM7",142,0)
 . S RCDATA=$G(^RCY(344,RCRECTDA,0))
"RTN","RCDPEM7",143,0)
 . S RCREC=$P(RCDATA,U)
"RTN","RCDPEM7",144,0)
 . S RCTRANDA=0 F  S RCTRANDA=$O(^RCY(344,"AN",RCRECTDA,RCTRANDA)) Q:'RCTRANDA  D
"RTN","RCDPEM7",145,0)
 . . S RCDATA0=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPEM7",146,0)
 . . S RCDATA2=$G(^RCY(344,RCRECTDA,1,RCTRANDA,2))
"RTN","RCDPEM7",147,0)
 . . S RCDATA3=$G(^RCY(344,RCRECTDA,1,RCTRANDA,3))
"RTN","RCDPEM7",148,0)
 . . ;get date into suspense
"RTN","RCDPEM7",149,0)
 . . S RCSDATE=$P(RCDATA3,U,2)
"RTN","RCDPEM7",150,0)
 . . S RCDAYS=$$FMTH^XLFDT(TODAY,1)-$$FMTH^XLFDT(RCSDATE,1)
"RTN","RCDPEM7",151,0)
 . . Q:RCSDATE=""
"RTN","RCDPEM7",152,0)
 . . ;
"RTN","RCDPEM7",153,0)
 . . ;if younger than the cutoff date, quit
"RTN","RCDPEM7",154,0)
 . . Q:RCDAYS'>RCMXDYS
"RTN","RCDPEM7",155,0)
 . . ;
"RTN","RCDPEM7",156,0)
 . . ; get the user and disposition
"RTN","RCDPEM7",157,0)
 . . S RCUSER=$$GET1^DIQ(200,$P(RCDATA3,U,3)_",",1,"E")
"RTN","RCDPEM7",158,0)
 . . S RCDISP=$$UP^XLFSTR($$GET1^DIQ(344.01,RCTRANDA_","_RCRECTDA_",",3.01))
"RTN","RCDPEM7",159,0)
 . . ;
"RTN","RCDPEM7",160,0)
 . . ;Suspense status has been cleared quit
"RTN","RCDPEM7",161,0)
 . . Q:$P(RCDATA2,U,6)'="" 
"RTN","RCDPEM7",162,0)
 . . ;
"RTN","RCDPEM7",163,0)
 . . ;Extract needed info for report
"RTN","RCDPEM7",164,0)
 . . S RCEFTDT=$P(RCDATA0,U,6),RCDEPAMT=$P(RCDATA0,U,4)
"RTN","RCDPEM7",165,0)
 . . ;
"RTN","RCDPEM7",166,0)
 . . ;update counter and amount info
"RTN","RCDPEM7",167,0)
 . . S RCSUSCNT=RCSUSCNT+1
"RTN","RCDPEM7",168,0)
 . . S RCSUSAMT=RCSUSAMT+RCDEPAMT
"RTN","RCDPEM7",169,0)
 . . S RCRSN=$E($P($G(^RCY(344,RCRECTDA,1,RCTRANDA,1)),U,2),1,12)
"RTN","RCDPEM7",170,0)
 . . S RCSREC=RCREC_"@"_RCTRANDA
"RTN","RCDPEM7",171,0)
 . . ;
"RTN","RCDPEM7",172,0)
 . . ;update temporary array
"RTN","RCDPEM7",173,0)
 . . S ^TMP(RCPROG,$J,"SUSPENSE",RCSDATE,RCSUSCNT)=$$ESUSPL(RCSDATE,RCDAYS,RCUSER,RCSREC,RCDEPAMT,RCDISP,RCRSN)
"RTN","RCDPEM7",174,0)
 ;
"RTN","RCDPEM7",175,0)
 Q
"RTN","RCDPEM7",176,0)
 ;
"RTN","RCDPEM7",177,0)
BULLETIN ;Create bulletins only if overdue EFT/ERA found
"RTN","RCDPEM7",178,0)
 ;
"RTN","RCDPEM7",179,0)
 N ARRAY,SBJ,SUB,CNT,CNT1,RCPROG1,GLB,RCMXDYS,IDX
"RTN","RCDPEM7",180,0)
 S RCPROG1="RCDPEM7A",GLB=$NA(^TMP(RCPROG1,$J,"XMTEXT"))
"RTN","RCDPEM7",181,0)
 ;
"RTN","RCDPEM7",182,0)
 ;Unmatched ERA bulletins
"RTN","RCDPEM7",183,0)
 I ERACNT D
"RTN","RCDPEM7",184,0)
 .;Build header
"RTN","RCDPEM7",185,0)
 .S SUB="ERA" K @GLB
"RTN","RCDPEM7",186,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-Unmatched ERAs > 30 days"
"RTN","RCDPEM7",187,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have not yet been"
"RTN","RCDPEM7",188,0)
 .S @GLB@(2)="matched."
"RTN","RCDPEM7",189,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",190,0)
 .S @GLB@(4)="Total # of ERAs - "_ERACNT
"RTN","RCDPEM7",191,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERATOT,",",2)
"RTN","RCDPEM7",192,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",193,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",194,0)
 .S @GLB@(8)="   TRACE#" ; PRCA*4.5*326
"RTN","RCDPEM7",195,0)
 .;
"RTN","RCDPEM7",196,0)
 .;Move unmatched ERA search findings into message
"RTN","RCDPEM7",197,0)
 .S CNT=0,CNT1=9,SUB="ERA" ; PRCA*4.5*326
"RTN","RCDPEM7",198,0)
 .S IDX="" F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",199,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",200,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT,"TR") ; PRCA*4.5*326
"RTN","RCDPEM7",201,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",202,0)
 .D SEND
"RTN","RCDPEM7",203,0)
 .K @GLB
"RTN","RCDPEM7",204,0)
 ;
"RTN","RCDPEM7",205,0)
 ;Unposted "ACH" ERA bulletins
"RTN","RCDPEM7",206,0)
 ; PRCA*4.5*303 - modified this bulletin to show only "ACH" expected payments
"RTN","RCDPEM7",207,0)
 I ERA1CNT D
"RTN","RCDPEM7",208,0)
 .;Build header
"RTN","RCDPEM7",209,0)
 .S SUB="ERA1" K @GLB
"RTN","RCDPEM7",210,0)
 .; PRCA*4.5*303 - Changed SBJ to make sure it was less than 65 characters
"RTN","RCDPEM7",211,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-EFT:Matched/Not Posted ERA>30 days"
"RTN","RCDPEM7",212,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have been matched but"
"RTN","RCDPEM7",213,0)
 .S @GLB@(2)="have not been posted"
"RTN","RCDPEM7",214,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",215,0)
 .S @GLB@(4)="Total # of ERAs - ""MATCHED TO EFT"" - "_ERA1CNT
"RTN","RCDPEM7",216,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERA1TOT,",",2)
"RTN","RCDPEM7",217,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",218,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",219,0)
 .S @GLB@(8)="   TRACE#" ; PRCA*4.5*326
"RTN","RCDPEM7",220,0)
 .;
"RTN","RCDPEM7",221,0)
 .;Move unposted ERA search findings into message
"RTN","RCDPEM7",222,0)
 .S CNT=0,CNT1=9,IDX="" ; PRCA*4.5*326
"RTN","RCDPEM7",223,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",224,0)
 ..S CNT1=CNT1+1
"RTN","RCDPEM7",225,0)
 ..S @GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",226,0)
 ..S CNT1=CNT1+1 ; PRCA*4.5*326
"RTN","RCDPEM7",227,0)
 ..S @GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT,"TR") ; PRCA*4.5*326
"RTN","RCDPEM7",228,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",229,0)
 .D SEND
"RTN","RCDPEM7",230,0)
 .K @GLB
"RTN","RCDPEM7",231,0)
 ;
"RTN","RCDPEM7",232,0)
 ;Unposted "CHK" ERA bulletins or ERAs, that don't match "ACH"
"RTN","RCDPEM7",233,0)
 ; PRCA*4.5*303 - modified this bulletin to show "CHK" expected payments (or don't match "ACH")
"RTN","RCDPEM7",234,0)
 I ERA2CNT D
"RTN","RCDPEM7",235,0)
 .;Build header
"RTN","RCDPEM7",236,0)
 .S SUB="ERA2" K @GLB
"RTN","RCDPEM7",237,0)
 .; PRCA*4.5*303 - Changed SBJ to make sure it was less than 65 characters
"RTN","RCDPEM7",238,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-PAPER:Matched/Not Posted ERA>30 days"
"RTN","RCDPEM7",239,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have been matched but"
"RTN","RCDPEM7",240,0)
 .S @GLB@(2)="have not been posted"
"RTN","RCDPEM7",241,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",242,0)
 .S @GLB@(4)="Total # of ERAs - ""MATCHED TO PAPER CHECK"" - "_ERA2CNT
"RTN","RCDPEM7",243,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERA2TOT,",",2)
"RTN","RCDPEM7",244,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",245,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",246,0)
 .S @GLB@(8)="   TRACE#" ; PRCA*4.5*326
"RTN","RCDPEM7",247,0)
 .;
"RTN","RCDPEM7",248,0)
 .;Move unposted ERA search findings into message
"RTN","RCDPEM7",249,0)
 .S CNT=0,CNT1=9,IDX="" ; PRCA*4.5*326
"RTN","RCDPEM7",250,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",251,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",252,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT,"TR") ; PRCA*4.5*326
"RTN","RCDPEM7",253,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",254,0)
 .D SEND
"RTN","RCDPEM7",255,0)
 .K @GLB
"RTN","RCDPEM7",256,0)
 ;
"RTN","RCDPEM7",257,0)
 ;Unmatched EFT bulletins
"RTN","RCDPEM7",258,0)
 ; PRCA*4.5*303 - Changed logic to send "No EFTs more than 14 days..." message if no EFTs
"RTN","RCDPEM7",259,0)
 ;I EFTCNT D
"RTN","RCDPEM7",260,0)
 ;Build header
"RTN","RCDPEM7",261,0)
 S SUB="EFT" K @GLB
"RTN","RCDPEM7",262,0)
 S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-EFTs > 14 days"
"RTN","RCDPEM7",263,0)
 I EFTCNT=0 D  G B1
"RTN","RCDPEM7",264,0)
 . S @GLB@(1)="**** There are NO EFTs more than 14 days old that have not yet been matched."
"RTN","RCDPEM7",265,0)
 . S @GLB@(2)=" "
"RTN","RCDPEM7",266,0)
 . S @GLB@(3)="Total # of EFTs - "_EFTCNT
"RTN","RCDPEM7",267,0)
 . S @GLB@(4)="Total Dollar Amount - $"_$FN(0,",",2)
"RTN","RCDPEM7",268,0)
 . S @GLB@(5)=" "
"RTN","RCDPEM7",269,0)
 . S @GLB@(6)="** END OF REPORT **"
"RTN","RCDPEM7",270,0)
 ;
"RTN","RCDPEM7",271,0)
 I EFTCNT>0 D
"RTN","RCDPEM7",272,0)
 .S @GLB@(1)="The following EFTs were received more than 14 days ago and have not yet"
"RTN","RCDPEM7",273,0)
 .S @GLB@(2)="been matched."
"RTN","RCDPEM7",274,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",275,0)
 .S @GLB@(4)="Total # of EFTs - "_EFTCNT
"RTN","RCDPEM7",276,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(EFTTOT,",",2)
"RTN","RCDPEM7",277,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",278,0)
 .S @GLB@(7)="DEPOSIT#   PAYER NAME/TRACE#                         EFT DATE    DEPOSIT AMT"
"RTN","RCDPEM7",279,0)
 .;
"RTN","RCDPEM7",280,0)
 .;Move EFT search findings into message
"RTN","RCDPEM7",281,0)
 .S CNT=0,CNT1=8,SUB="EFT",IDX=""
"RTN","RCDPEM7",282,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",283,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",284,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",285,0)
B1 ;
"RTN","RCDPEM7",286,0)
 D SEND
"RTN","RCDPEM7",287,0)
 K @GLB
"RTN","RCDPEM7",288,0)
 ;
"RTN","RCDPEM7",289,0)
 ;PRCA*4.5*304 - Add suspense bulletin
"RTN","RCDPEM7",290,0)
 ; Suspense bulletins
"RTN","RCDPEM7",291,0)
 ;
"RTN","RCDPEM7",292,0)
 ; Send bulletin if items in suspense
"RTN","RCDPEM7",293,0)
 I RCSUSCNT D
"RTN","RCDPEM7",294,0)
 . ;
"RTN","RCDPEM7",295,0)
 . N DT
"RTN","RCDPEM7",296,0)
 . ;Retrieve the parameter
"RTN","RCDPEM7",297,0)
 . S RCMXDYS=$$GET1^DIQ(342,"1,",7.04)
"RTN","RCDPEM7",298,0)
 . ;
"RTN","RCDPEM7",299,0)
 . ;Build header
"RTN","RCDPEM7",300,0)
 . S SUB="SUSPENSE" K @GLB
"RTN","RCDPEM7",301,0)
 . S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-SUSPENSE ENTRIES OVERDUE FOR PROCESSING"
"RTN","RCDPEM7",302,0)
 . S @GLB@(1)="The following entries have been in Suspense past the #days allowed by site"
"RTN","RCDPEM7",303,0)
 . S @GLB@(2)="parameter - which is currently set at "_RCMXDYS_" days."
"RTN","RCDPEM7",304,0)
 . S @GLB@(3)=" "
"RTN","RCDPEM7",305,0)
 . S @GLB@(4)="Total # of Overdue Entries in Suspense  - "_RCSUSCNT
"RTN","RCDPEM7",306,0)
 . S @GLB@(5)="Total Dollar Amount Overdue in Suspense - "_"$"_$FN(RCSUSAMT,",",2)
"RTN","RCDPEM7",307,0)
 . S @GLB@(6)=" "
"RTN","RCDPEM7",308,0)
 . S @GLB@(7)="SUSP DATE  #DAYS USER RECEIPT#               AMOUNT DISP        REASON"
"RTN","RCDPEM7",309,0)
 . ;
"RTN","RCDPEM7",310,0)
 . ;Move Suspense search findings into message
"RTN","RCDPEM7",311,0)
 . S CNT=0,CNT1=8,SUB="SUSPENSE",DT=0
"RTN","RCDPEM7",312,0)
 . F  S DT=$O(^TMP(RCPROG,$J,SUB,DT)) Q:'DT  D
"RTN","RCDPEM7",313,0)
 . . F  S CNT=$O(^TMP(RCPROG,$J,SUB,DT,CNT)) Q:'CNT  D
"RTN","RCDPEM7",314,0)
 . . . S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,DT,CNT)
"RTN","RCDPEM7",315,0)
 . S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",316,0)
 . D SEND
"RTN","RCDPEM7",317,0)
 . K @GLB
"RTN","RCDPEM7",318,0)
 Q
"RTN","RCDPEM7",319,0)
 ;
"RTN","RCDPEM7",320,0)
SEND ;Transmit mail message
"RTN","RCDPEM7",321,0)
 N XMDUZ,XMTEXT,XMSUB,XMY,XMINSTR
"RTN","RCDPEM7",322,0)
 S XMDUZ=DUZ,XMTEXT=GLB,XMSUB=SBJ,XMY("I:G.RCDPE AUDIT")=""
"RTN","RCDPEM7",323,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEM7",324,0)
 S XMINSTR("FLAGS")="P"
"RTN","RCDPEM7",325,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY,.XMINSTR)
"RTN","RCDPEM7",326,0)
 Q
"RTN","RCDPEM7",327,0)
 ;
"RTN","RCDPEM7",328,0)
ERAL(X1,X2,X3,X4) ;Format ERA Message line
"RTN","RCDPEM7",329,0)
 N SPACE
"RTN","RCDPEM7",330,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",331,0)
 S X1=X1_$E(SPACE,1,12-$L(X1))
"RTN","RCDPEM7",332,0)
 S X2=X1_$E(X2,1,43)_$E(SPACE,1,43-$L(X2))
"RTN","RCDPEM7",333,0)
 S X3=$$FMTE^XLFDT(X3,"2D")
"RTN","RCDPEM7",334,0)
 S X4="$"_$FN(X4,",",2)
"RTN","RCDPEM7",335,0)
 Q X2_$J(X3,8)_$J(X4,15)
"RTN","RCDPEM7",336,0)
 ;
"RTN","RCDPEM7",337,0)
EFTL(X1,X2,X3,X4,X5) ;Format EFT Message line
"RTN","RCDPEM7",338,0)
 N SPACE
"RTN","RCDPEM7",339,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",340,0)
 S X1=X1_$E(SPACE,1,10-$L(X1))_" "
"RTN","RCDPEM7",341,0)
 S X2=X3_"/"_X2 ;Payer and Trace
"RTN","RCDPEM7",342,0)
 S X2=X1_$E(X2,1,41)_$E(SPACE,1,42-$L(X2))
"RTN","RCDPEM7",343,0)
 S X4=$$FMTE^XLFDT(X4,"2D")
"RTN","RCDPEM7",344,0)
 S X5="$"_$FN(X5,",",2)
"RTN","RCDPEM7",345,0)
 Q X2_$J(X4,8)_$J(X5,15)
"RTN","RCDPEM7",346,0)
 ;
"RTN","RCDPEM7",347,0)
 ;PRCA*4.5*304
"RTN","RCDPEM7",348,0)
ESUSPL(X1,X2,X3,X4,X5,X6,X7) ;Format Suspense Message line
"RTN","RCDPEM7",349,0)
 N SPACE
"RTN","RCDPEM7",350,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",351,0)
 ;spacing for Suspense Date
"RTN","RCDPEM7",352,0)
 S X1=$$FMTE^XLFDT(X1,"2D")
"RTN","RCDPEM7",353,0)
 S X1=X1_$E(SPACE,1,10-$L(X1))
"RTN","RCDPEM7",354,0)
 ;spacing for # days in suspense
"RTN","RCDPEM7",355,0)
 S X2=$E(SPACE,1,6-$L(X2))_X2
"RTN","RCDPEM7",356,0)
 ;spacing for USER
"RTN","RCDPEM7",357,0)
 S X3=" "_X3_$E(SPACE,1,5-$L(X3))
"RTN","RCDPEM7",358,0)
 ;spacing for RECEIPT NUMBER_TRANS #
"RTN","RCDPEM7",359,0)
 S X4=$E(X4_SPACE,1,16)
"RTN","RCDPEM7",360,0)
 ;spacing for amount in suspense
"RTN","RCDPEM7",361,0)
 S X5=$J("$"_$FN(X5,",",2),13)_" "
"RTN","RCDPEM7",362,0)
 ;spacing for STATUS
"RTN","RCDPEM7",363,0)
 S X6=X6_$E(SPACE,1,12-$L(X6))
"RTN","RCDPEM7",364,0)
 ;spacing for REASON
"RTN","RCDPEM7",365,0)
 S X7=X7_$E(SPACE,1,12-$L(X7))
"RTN","RCDPEM7",366,0)
 ;return concatenated string
"RTN","RCDPEM7",367,0)
 Q X1_X2_X3_X4_X5_X6_X7
"RTN","RCDPEM7",368,0)
 ;
"RTN","RCDPEM9")
0^36^B81945399
"RTN","RCDPEM9",1,0)
RCDPEM9 ;OIFO-BAYPINES/PJH - PAYER SELECTION ;10/18/11 6:17pm
"RTN","RCDPEM9",2,0)
 ;;4.5;Accounts Receivable;**276,284,318,326**;Mar 20, 1995;Build 26
"RTN","RCDPEM9",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPEM9",4,0)
 ;
"RTN","RCDPEM9",5,0)
 ; PRCA*4.5*318 - Added parameters MIXED and BLANKLN
"RTN","RCDPEM9",6,0)
 ; PRCA*4.5*326 - Extensive rewrite to include selection/sort by payer TIN in the Auto Post Report
"RTN","RCDPEM9",7,0)
GETPAY(FILE,MIXED,BLANKLN,NMORTIN,SHOWTIN) ; Let user select payer for filter
"RTN","RCDPEM9",8,0)
 ; Input:   FILE    - File to retrieve Payers from either #344.4 OR ##344.31
"RTN","RCDPEM9",9,0)
 ;          MIXED   - 1 to display prompts in mixed case
"RTN","RCDPEM9",10,0)
 ;                    Optional, defaults to 0
"RTN","RCDPEM9",11,0)
 ;          BLANKLN - 0 skip initial blank line
"RTN","RCDPEM9",12,0)
 ;                    Optional, defaults to 1
"RTN","RCDPEM9",13,0)
 ;          NMORTIN - 1 to look-up Payer by Payer Name, 2 to look-up by TIN
"RTN","RCDPEM9",14,0)
 ;                    0 or undefined - pre-326 behavior, look-up by payer name and don't include TIN in output array.
"RTN","RCDPEM9",15,0)
 ;                    Optional, defaults to 0
"RTN","RCDPEM9",16,0)
 ;          SHOWTIN - 1 to append the Payer Name or Payer TIN when displaying payers
"RTN","RCDPEM9",17,0)
 ;                    Optional, defaults to 0
"RTN","RCDPEM9",18,0)
 ; Output:  ^TMP("RCSELPAY",$J) - Array of selected Payers
"RTN","RCDPEM9",19,0)
 ; Returns: A1^A2^A3 Where:
"RTN","RCDPEM9",20,0)
 ;           A1 - -1 - None selected
"RTN","RCDPEM9",21,0)
 ;                 1 - Range of payers
"RTN","RCDPEM9",22,0)
 ;                 2 - All payers selected
"RTN","RCDPEM9",23,0)
 ;                 3 - Specific payers
"RTN","RCDPEM9",24,0)
 ;           A2 - From Range (When a from/thru range is selected by user)
"RTN","RCDPEM9",25,0)
 ;           A3 - Thru Range (When a from/thru range is selected by user)
"RTN","RCDPEM9",26,0)
 N CNT,DIR,DIROUT,DIRUT,DTOUT,DUOUT,I,IEN,INDX
"RTN","RCDPEM9",27,0)
 N RCANS,RCANS2,RCINC,RCINSF,RCINST,RCPAY,RNG1,RNG2,RTNFLG,TIN,X,XX,Y
"RTN","RCDPEM9",28,0)
 S:'$D(MIXED) MIXED=0   ; PRCA*4.5*318 - Added logic for MIXED and BLANKLN
"RTN","RCDPEM9",29,0)
 S:'$D(BLANKLN) BLANKLN=1
"RTN","RCDPEM9",30,0)
 S:'$D(NMORTIN) NMORTIN=0
"RTN","RCDPEM9",31,0)
 S:'$D(SHOWTIN) SHOWTIN=0
"RTN","RCDPEM9",32,0)
 ;
"RTN","RCDPEM9",33,0)
 S RTNFLG=0,INDX=1,RNG1="",RNG2=""
"RTN","RCDPEM9",34,0)
 K ^TMP("RCSELPAY",$J)                      ; Clear list of selected Payers
"RTN","RCDPEM9",35,0)
 ;
"RTN","RCDPEM9",36,0)
 ; Select option required (All, Selected or Range)
"RTN","RCDPEM9",37,0)
 I NMORTIN=2 D
"RTN","RCDPEM9",38,0)
 . S DIR(0)="SA^A:ALL;S:SPECIFIC"
"RTN","RCDPEM9",39,0)
 . S:MIXED DIR("A")="Run Report for (A)LL or (S)PECIFIC Insurance Companies?: "
"RTN","RCDPEM9",40,0)
 . S:'MIXED DIR("A")="RUN REPORT FOR (A)LL OR (S)PECIFIC INSURANCE COMPANIES?: "
"RTN","RCDPEM9",41,0)
 E  D
"RTN","RCDPEM9",42,0)
 . S DIR(0)="SA^A:ALL;S:SPECIFIC;R:RANGE"
"RTN","RCDPEM9",43,0)
 . S:MIXED DIR("A")="Run Report for (A)LL, (S)PECIFIC, or (R)ANGE of Insurance Companies?: "
"RTN","RCDPEM9",44,0)
 . S:'MIXED DIR("A")="RUN REPORT FOR (A)LL, (S)PECIFIC, OR (R)ANGE OF INSURANCE COMPANIES?: "
"RTN","RCDPEM9",45,0)
 . S DIR("?",2)="Enter 'RANGE' to select an Insurance Company range."
"RTN","RCDPEM9",46,0)
 S DIR("B")="ALL"
"RTN","RCDPEM9",47,0)
 S DIR("?",1)="Enter 'ALL' to select all Insurance Companies."
"RTN","RCDPEM9",48,0)
 S DIR("?")="Enter 'SPECIFIC' to select specific Insurance Companies."
"RTN","RCDPEM9",49,0)
 W:BLANKLN !         ; PRCA*4.5*318 - Added condition for BLANKLN
"RTN","RCDPEM9",50,0)
 D ^DIR K DIR
"RTN","RCDPEM9",51,0)
 ;
"RTN","RCDPEM9",52,0)
 ; Abort on ^ exit or timeout
"RTN","RCDPEM9",53,0)
 I $D(DTOUT)!$D(DUOUT) S RTNFLG=-1 Q RTNFLG
"RTN","RCDPEM9",54,0)
 ;
"RTN","RCDPEM9",55,0)
 ; ALL payers 
"RTN","RCDPEM9",56,0)
 ; Switch to use new Payer Name/Payer TIN index
"RTN","RCDPEM9",57,0)
 I Y="A" D
"RTN","RCDPEM9",58,0)
 . S CNT=0,RCPAY="",RTNFLG=2
"RTN","RCDPEM9",59,0)
 . F  S RCPAY=$O(^RCY(FILE,"C",RCPAY)) Q:RCPAY=""  D
"RTN","RCDPEM9",60,0)
 . . S CNT=CNT+1,IEN=$O(^RCY(FILE,"C",RCPAY,""))
"RTN","RCDPEM9",61,0)
 . . S TIN=$$GET1^DIQ(FILE,IEN,.03,"E")
"RTN","RCDPEM9",62,0)
 . . S XX=$S(NMORTIN=2:TIN_"/"_RCPAY,NMORTIN=1:RCPAY_"/"_TIN,1:RCPAY)
"RTN","RCDPEM9",63,0)
 . . S ^TMP("RCSELPAY",$J,CNT)=XX
"RTN","RCDPEM9",64,0)
 ;
"RTN","RCDPEM9",65,0)
 ; Selected Payers
"RTN","RCDPEM9",66,0)
 I Y="S" D
"RTN","RCDPEM9",67,0)
 . D GLIST(FILE,NMORTIN),GETPAYS(CNT,MIXED,NMORTIN)  ; PRCA*4.5*318 - Added parameter MIXED
"RTN","RCDPEM9",68,0)
 ;
"RTN","RCDPEM9",69,0)
 ; Range of Payers
"RTN","RCDPEM9",70,0)
 I Y="R" D
"RTN","RCDPEM9",71,0)
 . D GLIST(FILE,NMORTIN),GETPAYR(MIXED,BLANKLN)  ; PRCA*4.5*318 - Added parameters MIXED and BLANKLN
"RTN","RCDPEM9",72,0)
 ;
"RTN","RCDPEM9",73,0)
 K:RTNFLG'=2 ^TMP("RCPAYER",$J)             ; Clear list of all payers
"RTN","RCDPEM9",74,0)
 K:RTNFLG=-1 ^TMP("RCSELPAY",$J)            ; Aborting, clear any selected payers
"RTN","RCDPEM9",75,0)
 ;
"RTN","RCDPEM9",76,0)
 ; PRCA*4.5*284 - Update return value to include from/thru range. See above for documentation
"RTN","RCDPEM9",77,0)
 Q RTNFLG_"^"_RNG1_"^"_RNG2                 ; Return value
"RTN","RCDPEM9",78,0)
 ;
"RTN","RCDPEM9",79,0)
GLIST(FILE,NMORTIN) ; Build list for this file
"RTN","RCDPEM9",80,0)
 ; Input:   FILE    - File to retrieve Payers from either #344.4 OR ##344.31
"RTN","RCDPEM9",81,0)
 ;          NMORTIN - 2 - lookup by TIN, 1 - lookup by Payer Name, 0 - pre 326 behavior
"RTN","RCDPEM9",82,0)
 ; Output:  ^TMP("RCPAYER",$J,A1)=A2 Where:
"RTN","RCDPEM9",83,0)
 ;                    A1 - Counter
"RTN","RCDPEM9",84,0)
 ;                    A2 - Payer Name/TIN if NMORTIN=1, TIN/Payer Name if NMORTIN=2, else Payer Name 
"RTN","RCDPEM9",85,0)
 ;          ^TMP("RCPAYER",$J,"B",B1,B2)=B3 Where:
"RTN","RCDPEM9",86,0)
 ;                    B1 - Payer TIN if NMORTIN=2, else Payer Name
"RTN","RCDPEM9",87,0)
 ;                    B2 - Counter
"RTN","RCDPEM9",88,0)
 ;                    B3 - Payer Name if NMORTIN=0 or 1, else Payer TIN
"RTN","RCDPEM9",89,0)
 N IEN,PAYNAM,TIN
"RTN","RCDPEM9",90,0)
 K ^TMP("RCPAYER",$J)                       ; Clear workfile
"RTN","RCDPEM9",91,0)
 I NMORTIN=2 D  Q                           ; Build list of Payers by TIN
"RTN","RCDPEM9",92,0)
 . S CNT=0,TIN=""
"RTN","RCDPEM9",93,0)
 . F  S TIN=$O(^RCY(FILE,"ATP",TIN)) Q:TIN=""  D
"RTN","RCDPEM9",94,0)
 . . S PAYNAM=""
"RTN","RCDPEM9",95,0)
 . . F  S PAYNAM=$O(^RCY(FILE,"ATP",TIN,PAYNAM)) Q:PAYNAM=""  D
"RTN","RCDPEM9",96,0)
 . . . S CNT=CNT+1
"RTN","RCDPEM9",97,0)
 . . . S ^TMP("RCPAYER",$J,CNT)=TIN_"/"_PAYNAM
"RTN","RCDPEM9",98,0)
 . . . S ^TMP("RCPAYER",$J,"B",TIN,CNT)=PAYNAM
"RTN","RCDPEM9",99,0)
 ;
"RTN","RCDPEM9",100,0)
 S CNT=0,PAYNAM=""
"RTN","RCDPEM9",101,0)
 F  S PAYNAM=$O(^RCY(FILE,"APT",PAYNAM)) Q:PAYNAM=""  D
"RTN","RCDPEM9",102,0)
 . S TIN=""
"RTN","RCDPEM9",103,0)
 . F  S TIN=$O(^RCY(FILE,"APT",PAYNAM,TIN)) Q:TIN=""  D
"RTN","RCDPEM9",104,0)
 . . S CNT=CNT+1
"RTN","RCDPEM9",105,0)
 . . S ^TMP("RCPAYER",$J,CNT)=$S(NMORTIN=1:PAYNAM_"/"_TIN,1:PAYNAM)
"RTN","RCDPEM9",106,0)
 . . S ^TMP("RCPAYER",$J,"B",PAYNAM,CNT)=TIN
"RTN","RCDPEM9",107,0)
 Q
"RTN","RCDPEM9",108,0)
 ;
"RTN","RCDPEM9",109,0)
 ; PRCA*4.5*318 - Added parameter & logic for MIXED
"RTN","RCDPEM9",110,0)
GETPAYS(CNT,MIXED,NMORTIN) ; Select Specific payer for filter
"RTN","RCDPEM9",111,0)
 ; Input:   CNT     - Number of Payers
"RTN","RCDPEM9",112,0)
 ;          MIXED   - 1 to display prompts in mixed case
"RTN","RCDPEM9",113,0)
 ;                    Optional, defaults to 0
"RTN","RCDPEM9",114,0)
 ;          NMORTIN - 2 to lookup by TIN, 1 to lookup by Payer, 0 - Pre 326 behavior
"RTN","RCDPEM9",115,0)
 ;                    Optional, defaults to 0
"RTN","RCDPEM9",116,0)
 ; Output: RTNFLG -1 - No Payer selected
"RTN","RCDPEM9",117,0)
 ;                 3 - At least one Payer selected
"RTN","RCDPEM9",118,0)
 S:'$D(MIXED) MIXED=0
"RTN","RCDPEM9",119,0)
 S:'$D(NMORTIN) NMORTIN=0
"RTN","RCDPEM9",120,0)
 K ^TMP("RCDPEM9",$J)
"RTN","RCDPEM9",121,0)
 F  Q:RTNFLG'=0  D
"RTN","RCDPEM9",122,0)
 . N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEM9",123,0)
 . S DIR("A")="SELECT INSURANCE COMPANY"
"RTN","RCDPEM9",124,0)
 . S:MIXED DIR("A")="Select Insurance Company "_$S(NMORTIN=2:"TIN",1:"NAME")   ; PRCA*4.5*318
"RTN","RCDPEM9",125,0)
 . S DIR(0)="FO^1:30"
"RTN","RCDPEM9",126,0)
 . S DIR("?")="ENTER THE "_$S(NMORTIN=2:"TIN",1:"NAME")_" OF THE PAYER OR '??' TO LIST PAYERS"
"RTN","RCDPEM9",127,0)
 . ; PRCA*4.5*318 - Added MIXED
"RTN","RCDPEM9",128,0)
 . S:MIXED DIR("?")="Enter the "_$S(NMORTIN=2:"TIN",1:"name")_" of the payer or '??' to list payers"
"RTN","RCDPEM9",129,0)
 . S DIR("??")="^D LIST^RCDPEM9(CNT)"
"RTN","RCDPEM9",130,0)
 . D ^DIR K DIR
"RTN","RCDPEM9",131,0)
 . ;
"RTN","RCDPEM9",132,0)
 . ; User pressed ENTER
"RTN","RCDPEM9",133,0)
 . I Y="",'$D(DTOUT) S RTNFLG=$S($D(^TMP("RCSELPAY",$J)):3,1:-1) Q
"RTN","RCDPEM9",134,0)
 . ;
"RTN","RCDPEM9",135,0)
 . ; First check for exits
"RTN","RCDPEM9",136,0)
 . I $D(DUOUT)!$D(DTOUT)!$D(DIRUT)!$D(DIROUT) S RTNFLG=-1 Q
"RTN","RCDPEM9",137,0)
 . S (RCANS,RCANS2)="",RCANS=Y
"RTN","RCDPEM9",138,0)
 . I NMORTIN=2 D  Q                               ; TIN lookup
"RTN","RCDPEM9",139,0)
 . . I '$D(^TMP("RCPAYER",$J,"B",RCANS)) D  Q
"RTN","RCDPEM9",140,0)
 . . . W "  ??"
"RTN","RCDPEM9",141,0)
 . . I $D(^TMP("RCDPEM9",$J,RCANS)) D  Q
"RTN","RCDPEM9",142,0)
 . . . W:'MIXED "  ?? PAYER ALREADY SELECTED"
"RTN","RCDPEM9",143,0)
 . . . W:MIXED "  ?? Payer already selected"
"RTN","RCDPEM9",144,0)
 . . D SELTIN(RCANS,.INDX)
"RTN","RCDPEM9",145,0)
 . ;
"RTN","RCDPEM9",146,0)
 . ; Check for Partial Match on user input
"RTN","RCDPEM9",147,0)
 . I '(RCANS?.N) D   Q:'$G(RCANS2)
"RTN","RCDPEM9",148,0)
 . . S RCANS2=$O(^TMP("RCPAYER",$J,"B",RCANS,RCANS2))
"RTN","RCDPEM9",149,0)
 . . D:'RCANS2 PART(NMORTIN,RCANS,.INDX)
"RTN","RCDPEM9",150,0)
 . S:$G(RCANS2) RCANS=RCANS2
"RTN","RCDPEM9",151,0)
 . I RCANS="" W "  ??" Q
"RTN","RCDPEM9",152,0)
 . I RCANS?.N,((+RCANS<1)!(+RCANS>CNT)) W "  ??" Q
"RTN","RCDPEM9",153,0)
 . I RCANS'?.N W "  ??" Q
"RTN","RCDPEM9",154,0)
 . I $D(^TMP("RCDPEM9",$J,RCANS)) D  Q
"RTN","RCDPEM9",155,0)
 . . W:'MIXED "  ?? PAYER ALREADY SELECTED"
"RTN","RCDPEM9",156,0)
 . . W:MIXED "  ?? Payer already selected"
"RTN","RCDPEM9",157,0)
 . S ^TMP("RCDPEM9",$J,RCANS)=""
"RTN","RCDPEM9",158,0)
 . W "  ",^TMP("RCPAYER",$J,RCANS)
"RTN","RCDPEM9",159,0)
 . S ^TMP("RCSELPAY",$J,INDX)=$G(^TMP("RCPAYER",$J,RCANS))
"RTN","RCDPEM9",160,0)
 . S INDX=INDX+1
"RTN","RCDPEM9",161,0)
 K ^TMP("RCDPEM9",$J)
"RTN","RCDPEM9",162,0)
 Q
"RTN","RCDPEM9",163,0)
 ;
"RTN","RCDPEM9",164,0)
SELTIN(TIN,INDX) ; Show all the payers with the selected TIN and ask the user
"RTN","RCDPEM9",165,0)
 ; if they want to select the TIN
"RTN","RCDPEM9",166,0)
 ; Input:   TIN                     - User Selected TIN
"RTN","RCDPEM9",167,0)
 ;          INDX                    - Current # of selected Payers
"RTN","RCDPEM9",168,0)
 ;          ^TMP("RCPAYER",$J,"B")  - Array of TINs on file
"RTN","RCDPEM9",169,0)
 ;          ^TMP("RCSELPAY",$J,A1)= A2/A3  Current Selected Payers Where:
"RTN","RCDPEM9",170,0)
 ;                            A1 - Counter
"RTN","RCDPEM9",171,0)
 ;                            A2 - Selected TIN
"RTN","RCDPEM9",172,0)
 ;                            A3 - Selected PAYER
"RTN","RCDPEM9",173,0)
 ; Output:  INDX                    - Updated # of selected Payers                     
"RTN","RCDPEM9",174,0)
 ;          ^TMP("RCSELPAY",$J,A1)= A2/A3  Updated Selected Payers Where:
"RTN","RCDPEM9",175,0)
 ;                            A1 - Counter
"RTN","RCDPEM9",176,0)
 ;                            A2 - Selected TIN
"RTN","RCDPEM9",177,0)
 ;                            A3 - Selected PAYER
"RTN","RCDPEM9",178,0)
 N CTR,DIR,DIROUT,DIRUT,DTOUT,DUOUT,SELPAY,X,Y
"RTN","RCDPEM9",179,0)
 W !,"The following Payers with TIN ",TIN," have ERAs on file"
"RTN","RCDPEM9",180,0)
 D PART(2,TIN,INDX,.SELPAY)
"RTN","RCDPEM9",181,0)
 S DIR(0)="Y"
"RTN","RCDPEM9",182,0)
 S DIR("A")="Select this TIN"
"RTN","RCDPEM9",183,0)
 S DIR("B")="YES"
"RTN","RCDPEM9",184,0)
 D ^DIR
"RTN","RCDPEM9",185,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPEM9",186,0)
 Q:Y=0
"RTN","RCDPEM9",187,0)
 M ^TMP("RCSELPAY",$J)=SELPAY("RCSELPAY")
"RTN","RCDPEM9",188,0)
 S INDX=$O(SELPAY("RCSELPAY",""),-1)+1
"RTN","RCDPEM9",189,0)
 Q
"RTN","RCDPEM9",190,0)
 ;
"RTN","RCDPEM9",191,0)
LIST(CNT) ; Display all the Payers
"RTN","RCDPEM9",192,0)
 ; Prompt users for stations to be used for filtering
"RTN","RCDPEM9",193,0)
 ; Input:   CNT - Total # of Payers in tmp file
"RTN","RCDPEM9",194,0)
 ;          ^TMP("RCPAYER",$J,A1)=A2 Where:
"RTN","RCDPEM9",195,0)
 ;                    A1 - Counter
"RTN","RCDPEM9",196,0)
 ;                    A2 - Payer Name/TIN if NMORTIN=1, TIN/Payer Name if NMORTIN=2, else Payer Name
"RTN","RCDPEM9",197,0)
 N I
"RTN","RCDPEM9",198,0)
 F I=1:1:CNT D
"RTN","RCDPEM9",199,0)
 . W !,I,".",?5,$G(^TMP("RCPAYER",$J,I))
"RTN","RCDPEM9",200,0)
 Q
"RTN","RCDPEM9",201,0)
 ;
"RTN","RCDPEM9",202,0)
PART(NMORTIN,RCANS,INDX,SELPAY) ; Give the user a list of partial matches
"RTN","RCDPEM9",203,0)
 ; Input:   NMORTIN - 2 - Lookup by Payer TIN, 0 or 1 - Lookup by Payer Name
"RTN","RCDPEM9",204,0)
 ;          RCANS   - User Payer or TIN selection
"RTN","RCDPEM9",205,0)
 ;          INDX    - Current # of selected Payers (only passed if NMORTIN=2)
"RTN","RCDPEM9",206,0)
 ; Output:  SELPAY()- Array of selected Payers (only returned if NMORTIN=2)
"RTN","RCDPEM9",207,0)
 ;          ^TMP("RCPAYER",$J,A1)=A2 Where:
"RTN","RCDPEM9",208,0)
 ;                    A1 - Counter
"RTN","RCDPEM9",209,0)
 ;                    A2 - Payer Name/TIN if NMORTIN=1, TIN/Payer Name if NMORTIN=2, else Payer Name
"RTN","RCDPEM9",210,0)
 ;          ^TMP("RCPAYER",$J,"B",B1,B2)=B3 Where:
"RTN","RCDPEM9",211,0)
 ;                    B1 - Payer TIN if NMORTIN=0, else Payer Name
"RTN","RCDPEM9",212,0)
 ;                    B2 - Counter
"RTN","RCDPEM9",213,0)
 ;                    B3 - Payer Name if NMORTIN=0 or 1, else Payer TIN
"RTN","RCDPEM9",214,0)
 ; Output:  List of Payers that meet the partial match
"RTN","RCDPEM9",215,0)
 N RCPAR,CNT,CTR,RCSAVE
"RTN","RCDPEM9",216,0)
 S CNT=0,RCPAR=RCANS,RCPAR=$O(^TMP("RCPAYER",$J,"B",RCPAR),-1)
"RTN","RCDPEM9",217,0)
 F  D  Q:RCPAR=""
"RTN","RCDPEM9",218,0)
 . S RCPAR=$O(^TMP("RCPAYER",$J,"B",RCPAR))
"RTN","RCDPEM9",219,0)
 . Q:RCPAR=""
"RTN","RCDPEM9",220,0)
 . I $E(RCPAR,1,$L(RCANS))'[RCANS S RCPAR="" Q
"RTN","RCDPEM9",221,0)
 . S CTR=0
"RTN","RCDPEM9",222,0)
 . F  D  Q:CTR=""
"RTN","RCDPEM9",223,0)
 . . S CTR=$O(^TMP("RCPAYER",$J,"B",RCPAR,CTR))
"RTN","RCDPEM9",224,0)
 . . Q:CTR=""
"RTN","RCDPEM9",225,0)
 . . W !,?5
"RTN","RCDPEM9",226,0)
 . . W:NMORTIN'=2 CTR,"."
"RTN","RCDPEM9",227,0)
 . . W ^TMP("RCPAYER",$J,CTR)
"RTN","RCDPEM9",228,0)
 . . I NMORTIN=2 D
"RTN","RCDPEM9",229,0)
 . . . S SELPAY("RCSELPAY",INDX)=^TMP("RCPAYER",$J,CTR),INDX=INDX+1
"RTN","RCDPEM9",230,0)
 . . S CNT=CNT+1
"RTN","RCDPEM9",231,0)
 . . I CNT=1 S RCSAVE=^TMP("RCPAYER",$J,CTR)
"RTN","RCDPEM9",232,0)
 W:'CNT "  ??"
"RTN","RCDPEM9",233,0)
 I NMORTIN'=2,CNT=1 D  ; one match by name, select it automatically
"RTN","RCDPEM9",234,0)
 . S ^TMP("RCSELPAY",$J,INDX)=RCSAVE,INDX=INDX+1
"RTN","RCDPEM9",235,0)
 . W " - SELECTED"
"RTN","RCDPEM9",236,0)
 Q
"RTN","RCDPEM9",237,0)
 ;
"RTN","RCDPEM9",238,0)
 ; PRCA*4.5*318 - Added parameters & logic for MIXED & BLANKLN
"RTN","RCDPEM9",239,0)
GETPAYR(MIXED,BLANKLN) ;select payer for filter, range
"RTN","RCDPEM9",240,0)
 ; called from ^RCDPEAR1
"RTN","RCDPEM9",241,0)
 ; Input: MIXED   - 1 to display prompts in mixed case
"RTN","RCDPEM9",242,0)
 ;                  Optional, defaults to 0
"RTN","RCDPEM9",243,0)
 ;        BLANKLN - 0 skip initial blank line
"RTN","RCDPEM9",244,0)
 ;                  Optional, defaults to 1 
"RTN","RCDPEM9",245,0)
 ;
"RTN","RCDPEM9",246,0)
 S:'$D(MIXED) MIXED=0           ; PRCA*4.5*318
"RTN","RCDPEM9",247,0)
 S:'$D(BLANKLN) BLANKLN=1
"RTN","RCDPEM9",248,0)
 ;
"RTN","RCDPEM9",249,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,INDX,X,Y,RCINSF,RCINST,NUM
"RTN","RCDPEM9",250,0)
 S DIR("?")="ENTER THE NAME OF THE PAYER OR '??' TO LIST PAYERS"
"RTN","RCDPEM9",251,0)
 S DIR("??")="^D LIST^RCDPEM9(CNT)"
"RTN","RCDPEM9",252,0)
 S DIR(0)="FA^1:30^K:X'?1.U.E X"
"RTN","RCDPEM9",253,0)
 S DIR("A")="START WITH INSURANCE COMPANY NAME: "
"RTN","RCDPEM9",254,0)
 S DIR("B")=$E($O(^TMP("RCPAYER",$J,"B","")),1,30)
"RTN","RCDPEM9",255,0)
 I MIXED D         ;PRCA*4.5*318
"RTN","RCDPEM9",256,0)
 . S DIR("?")="Enter the name of the payer or '??' to list payers"
"RTN","RCDPEM9",257,0)
 . S DIR("A")="Start with Insurance Company name: "
"RTN","RCDPEM9",258,0)
 D ^DIR K DIR
"RTN","RCDPEM9",259,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT)!(Y="") S RTNFLG=-1 Q
"RTN","RCDPEM9",260,0)
 S RCINSF=Y
"RTN","RCDPEM9",261,0)
 S DIR("?")="ENTER THE NAME OF THE PAYER OR '??' TO LIST PAYERS"
"RTN","RCDPEM9",262,0)
 S DIR("??")="^D LIST^RCDPEM9(CNT)"
"RTN","RCDPEM9",263,0)
 S DIR(0)="FA^1:30^K:X'?1.U.E X"
"RTN","RCDPEM9",264,0)
 S DIR("A")="GO TO INSURANCE COMPANY NAME: "
"RTN","RCDPEM9",265,0)
 I MIXED D         ;PRCA*4.5*318
"RTN","RCDPEM9",266,0)
 . S DIR("?")="Enter the name of the payer or '??' to list payers"
"RTN","RCDPEM9",267,0)
 . S DIR("A")="Go to Insurance Company name: "
"RTN","RCDPEM9",268,0)
 S DIR("B")=$E($O(^TMP("RCPAYER",$J,"B",""),-1),1,30)
"RTN","RCDPEM9",269,0)
 ; PRCA*4.5*318 - added conditional for MIXED & BLANKLN
"RTN","RCDPEM9",270,0)
 F  W:BLANKLN ! D ^DIR Q:$S($D(DTOUT)!$D(DUOUT):1,1:RCINSF']Y)  D
"RTN","RCDPEM9",271,0)
 . W:'MIXED !,"'GO TO' NAME MUST COME AFTER 'START WITH' NAME"
"RTN","RCDPEM9",272,0)
 . W:MIXED !,"'GO TO' name must come after 'START WITH' name"
"RTN","RCDPEM9",273,0)
 K DIR
"RTN","RCDPEM9",274,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT)!(Y="") S RTNFLG=-1 Q
"RTN","RCDPEM9",275,0)
 S RCINST=Y_"Z"  ;entry of "ABC" will pick up "ABC INSURANCE" if "Z" is appended
"RTN","RCDPEM9",276,0)
 ;If the first name is an exact match, back up to the previous entry
"RTN","RCDPEM9",277,0)
 I $D(^TMP("RCPAYER",$J,"B",RCINSF)) S RCINSF=$O(^TMP("RCPAYER",$J,"B",RCINSF),-1)
"RTN","RCDPEM9",278,0)
 ; PRCA*4.5*284 - Save from/thru user responses in RNG1 & RNG2 to rebuild after report is queued. Will be returned to the calling program.
"RTN","RCDPEM9",279,0)
 S RNG1=RCINSF,RNG2=RCINST
"RTN","RCDPEM9",280,0)
 S INDX=1 F  S RCINSF=$O(^TMP("RCPAYER",$J,"B",RCINSF)) Q:RCINSF=""  Q:RCINSF]RCINST  D
"RTN","RCDPEM9",281,0)
 . S NUM=$O(^TMP("RCPAYER",$J,"B",RCINSF,""))
"RTN","RCDPEM9",282,0)
 . S ^TMP("RCSELPAY",$J,INDX)=$G(^TMP("RCPAYER",$J,NUM))
"RTN","RCDPEM9",283,0)
 . S INDX=INDX+1
"RTN","RCDPEM9",284,0)
 ;Set return value
"RTN","RCDPEM9",285,0)
 I INDX=1 S RTNFLG=-1 Q  ; no entries in selected range
"RTN","RCDPEM9",286,0)
 S RTNFLG=1
"RTN","RCDPEM9",287,0)
 Q
"RTN","RCDPEMA")
0^28^B31450000
"RTN","RCDPEMA",1,0)
RCDPEMA ;ALB/PJH - AUTO-POSTING RECEIPT CREATION ;Oct 15, 2014@12:37:52
"RTN","RCDPEMA",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEMA",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEMA",4,0)
 ;
"RTN","RCDPEMA",5,0)
RCPTDET(RCRZ,RECTDA1,RCLINES,RCER) ; Adds detail to a receipt based on file 344.49 and exceptions in array RCLINES
"RTN","RCDPEMA",6,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEMA",7,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEMA",8,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEMA",9,0)
 ; RCLINES = array to indicate which scratchpad lines can be posted (assigned a receipt)
"RTN","RCDPEMA",10,0)
 ;
"RTN","RCDPEMA",11,0)
 N DA,DIE,DR,Q,RCDUZ,RCLINE,RCOSEQ,RCQ,RCR,RCSPL,RCTRANDA,RCZ0,SEQLINES,RCSEQ,X,Y,Z,Z0,Z1
"RTN","RCDPEMA",12,0)
 ;
"RTN","RCDPEMA",13,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEMA",14,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0)),RCSEQ=$P(RCZ0,U)
"RTN","RCDPEMA",15,0)
 . ;Check first line for prefix to see if ERA line is valid for auto-post
"RTN","RCDPEMA",16,0)
 . I RCSEQ?1N.N,$P(RCZ0,U,9),$P($G(RCLINES($P(RCZ0,U,9))),U) S SEQLINES(RCSEQ)=""
"RTN","RCDPEMA",17,0)
 . ;Skip WORKLIST lines that do not need associated receipt detail
"RTN","RCDPEMA",18,0)
 . Q:'$D(SEQLINES(RCSEQ\1))
"RTN","RCDPEMA",19,0)
 . I RCSEQ'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEMA",20,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEMA",21,0)
 . S RCOSEQ=$G(RCSPL(RCSEQ\1)) ; PRCA*4.5*326
"RTN","RCDPEMA",22,0)
 . S RCDUZ=$$GET1^DIQ(344.41,RCOSEQ_","_RCRZ_",",6.01,"I") ; PRCA*4.5*326
"RTN","RCDPEMA",23,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1,RCDUZ) ; PRCA*4.5*326 Pass RCDUZ
"RTN","RCDPEMA",24,0)
 . ;
"RTN","RCDPEMA",25,0)
 . I RCTRANDA'>0 D  Q  ; Error adding receipt detail - PRCA*4.5*318
"RTN","RCDPEMA",26,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(1) ; PRCA*4.5*318 - pass RCPROC value to $$SETERR 
"RTN","RCDPEMA",27,0)
 .. S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEMA",28,0)
 . ;
"RTN","RCDPEMA",29,0)
 . ;Store receipt line detail
"RTN","RCDPEMA",30,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEMA",31,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEMA",32,0)
 ;
"RTN","RCDPEMA",33,0)
 ; Update A/R CORRECTED PAYMENT multiple with apportionment for split lines
"RTN","RCDPEMA",34,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEMA",35,0)
 .; Move EEOB if one claim entered-changed 10/19/11-see +25^RCDPEWL8
"RTN","RCDPEMA",36,0)
 . S Z1=$O(RCSPL(Z,"")) Q:Z1=""
"RTN","RCDPEMA",37,0)
 . I $O(RCSPL(Z,""),-1)=Z1,'$$SPLIT(Z,Z1,RCERA) Q  ; No split occurred
"RTN","RCDPEMA",38,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEMA",39,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEMA",40,0)
 .. Q:'Q
"RTN","RCDPEMA",41,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspense
"RTN","RCDPEMA",42,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEMA",43,0)
 .. E  D
"RTN","RCDPEMA",44,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEMA",45,0)
 . ; BEGIN - PRCA*4.5*321
"RTN","RCDPEMA",46,0)
 . ;Move/Copy/Remove EEOB detail for split line
"RTN","RCDPEMA",47,0)
 . N CLAIM,IEN3611,RCSPLIT,RCSUB,RCZSAV
"RTN","RCDPEMA",48,0)
 . ; Sub-array of split claim detail for individual line
"RTN","RCDPEMA",49,0)
 . M RCSPLIT=RCSPL(Z)
"RTN","RCDPEMA",50,0)
 . ; Protect Z subscript variable from overwrite by triggers
"RTN","RCDPEMA",51,0)
 . S RCZSAV=Z
"RTN","RCDPEMA",52,0)
 . ; Get scratchpad line number for this ERA line
"RTN","RCDPEMA",53,0)
 . S RCSUB=$O(^RCY(344.49,RCRZ,1,"ASEQ",Z,""))
"RTN","RCDPEMA",54,0)
 . ; Original claim number from Scratchpad line
"RTN","RCDPEMA",55,0)
 . S CLAIM=$$GET1^DIQ(344.491,RCSUB_","_RCRZ_",",.02)
"RTN","RCDPEMA",56,0)
 . ; EOB for original claim from ERA line
"RTN","RCDPEMA",57,0)
 . S IEN3611=$$GET1^DIQ(344.41,RCQ_","_RCRZ_",",.02,"I")
"RTN","RCDPEMA",58,0)
 . ; Automatic Move/Copy/Remove EOB
"RTN","RCDPEMA",59,0)
 . I $$AUTO^RCDPEM5(CLAIM,.RCSPLIT,RCERA,"A",IEN3611)
"RTN","RCDPEMA",60,0)
 . ; Restore Z
"RTN","RCDPEMA",61,0)
 . S Z=RCZSAV
"RTN","RCDPEMA",62,0)
 . ; END  - PRCA*4.5*321 ;
"RTN","RCDPEMA",63,0)
 Q
"RTN","RCDPEMA",64,0)
 ;
"RTN","RCDPEMA",65,0)
SPLIT(Z,Z1,RCERA) ;Check if worklist was split to single claim
"RTN","RCDPEMA",66,0)
 N SUB,NBILL,OBILL
"RTN","RCDPEMA",67,0)
 ;Find split line in scratchpad
"RTN","RCDPEMA",68,0)
 S SUB=$O(^RCY(344.49,RCERA,1,"B",Z1,"")) Q:'SUB 0
"RTN","RCDPEMA",69,0)
 ;Get original claim number from scratchpad
"RTN","RCDPEMA",70,0)
 S OBILL=$P($G(^RCY(344.49,RCERA,1,SUB-1,0)),U,2)
"RTN","RCDPEMA",71,0)
 ;New claim number
"RTN","RCDPEMA",72,0)
 S NBILL=$P(RCSPL(Z,Z1),U,2)
"RTN","RCDPEMA",73,0)
 ;If new and old claim are not the same this is a move via split
"RTN","RCDPEMA",74,0)
 I OBILL'="",OBILL'=NBILL Q 1
"RTN","RCDPEMA",75,0)
 ;Otherwise this is not a split
"RTN","RCDPEMA",76,0)
 Q 0
"RTN","RCDPEMA",77,0)
 ;
"RTN","RCDPEMA",78,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEMA",79,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEMA",80,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEMA",81,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEMA",82,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEMA",83,0)
 ;
"RTN","RCDPEMA",84,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEMA",85,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEMA",86,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEMA",87,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEMA",88,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEMA",89,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";.27////"_RCR_";"
"RTN","RCDPEMA",90,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEMA",91,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEMA",92,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEMA",93,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEMA",94,0)
 I $P(RCUP,U,2)["**ADJ" S RCCOM=RCCOM_$S(RCCOM'="":"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA")
"RTN","RCDPEMA",95,0)
 I RCCOM]"" S DR=DR_"1.02////"_$E(RCCOM,1,60)_";"
"RTN","RCDPEMA",96,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEMA",97,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEMA",98,0)
 D ^DIE
"RTN","RCDPEMA",99,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPEMA",100,0)
 D:RCCOM]"" AUDIT^RCDPECH(RECTDA1,RCTRANDA,RCZ,RCR)
"RTN","RCDPEMA",101,0)
 Q
"RTN","RCDPEMA",102,0)
 ; PRCA*4.5*326 Add RCDUZ parameter
"RTN","RCDPEMA",103,0)
BLDRCPT(RCERA,RCDUZ) ; Create a receipt for Auto Posting ERA with multiple Receipts - alpha char at the 10th character
"RTN","RCDPEMA",104,0)
 ; LAYGO new entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPEMA",105,0)
 ; input - RCERA = Pointer to 344.4
"RTN","RCDPEMA",106,0)
 ; returns new IEN on success, else zero
"RTN","RCDPEMA",107,0)
 ; called by auto-post process (RCDPEAP)
"RTN","RCDPEMA",108,0)
 ;
"RTN","RCDPEMA",109,0)
 N RECEIPT,TYPE,LASTREC
"RTN","RCDPEMA",110,0)
 S TYPE=$E($G(^RC(341.1,+$O(^RC(341.1,"AC",14,0)),0)))  ; ^RC(341.1,0) = AR EVENT TYPE
"RTN","RCDPEMA",111,0)
 ; retrieve the last receipt recorded on the ERA (if it exists)
"RTN","RCDPEMA",112,0)
 S LASTREC=$$GETREC(RCERA)
"RTN","RCDPEMA",113,0)
 ; Make sure last receipt for the ERA is 10-chars long and the last char is between A - Y (can't be Z),
"RTN","RCDPEMA",114,0)
 ; Otherwise grab a new number and append "A"
"RTN","RCDPEMA",115,0)
 I LASTREC'="",$L(LASTREC)=10,$A($E(LASTREC,10))>64,$A($E(LASTREC,10))<90 D
"RTN","RCDPEMA",116,0)
 . S RECEIPT=$E(LASTREC,1,9)_$C($A($E(LASTREC,10))+1)
"RTN","RCDPEMA",117,0)
 E  D
"RTN","RCDPEMA",118,0)
 . S RECEIPT=$$NEXT^RCDPUREC(TYPE_$E(DT,2,7))_"A"
"RTN","RCDPEMA",119,0)
 ;
"RTN","RCDPEMA",120,0)
 ; Prevents duplicate Receipt # entries from being filed
"RTN","RCDPEMA",121,0)
 F  Q:'$D(^RCY(344,"B",RECEIPT))  D
"RTN","RCDPEMA",122,0)
 . S RECEIPT=$E(RECEIPT,1)_$E(1000001+$E(RECEIPT,2,7),2,7)_$E(RECEIPT,8,9)_"A"
"RTN","RCDPEMA",123,0)
 ;
"RTN","RCDPEMA",124,0)
 L +^RCY(344,"B",RECEIPT):DILOCKTM E  Q 0  ; if LOCK timeout return zero
"RTN","RCDPEMA",125,0)
 ;
"RTN","RCDPEMA",126,0)
 ; add entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPEMA",127,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPEMA",128,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPEMA",129,0)
 ;  .02 = opened by                  .03 = date opened = transmission date
"RTN","RCDPEMA",130,0)
 ;  .04 = type of payment           
"RTN","RCDPEMA",131,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPEMA",132,0)
 S DIC("DR")=".02////"_$S($G(RCDUZ):RCDUZ,1:DUZ)_";.03///"_DT_";.04////14;.14////1;"
"RTN","RCDPEMA",133,0)
 S X=RECEIPT
"RTN","RCDPEMA",134,0)
 D FILE^DICN
"RTN","RCDPEMA",135,0)
 L -^RCY(344,"B",RECEIPT)
"RTN","RCDPEMA",136,0)
 I Y>0 Q +Y  ; Y set by DICN, return new IEN
"RTN","RCDPEMA",137,0)
 Q 0  ; entry not created
"RTN","RCDPEMA",138,0)
 ;
"RTN","RCDPEMA",139,0)
GETREC(RCERA) ; returns the receipt number
"RTN","RCDPEMA",140,0)
 ; input - RCERA = ien of entry in 344.4
"RTN","RCDPEMA",141,0)
 ; output - returns the receipt number in external form
"RTN","RCDPEMA",142,0)
 N X,RECEIPT
"RTN","RCDPEMA",143,0)
 S RECEIPT=""
"RTN","RCDPEMA",144,0)
 S X=$O(^RCY(344.4,RCERA,1,"RECEIPT",""),-1)  ; get last RECEIPT ien from 344.41 subfile
"RTN","RCDPEMA",145,0)
 S:X RECEIPT=$P($G(^RCY(344,X,0)),U)  ; get external form of receipt  
"RTN","RCDPEMA",146,0)
 Q RECEIPT
"RTN","RCDPEMB")
0^20^B489577
"RTN","RCDPEMB",1,0)
RCDPEMB ;AITC/CJE - CONTINUE MANUAL ERA AND EFT MATCHING ;Jun 11, 2014@13:24:36
"RTN","RCDPEMB",2,0)
 ;;4.5;Accounts Receivable;**326**;Mar 20, 1995;Build 26
"RTN","RCDPEMB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEMB",4,0)
 Q
"RTN","RCDPEMB",5,0)
 ;
"RTN","RCDPEMB",6,0)
 ; PRCA*4.5*326 - Move subroutine here to resolve routine size issue in RCDPEM2
"RTN","RCDPEMB",7,0)
NOCHNG ; EP
"RTN","RCDPEMB",8,0)
 ; Input: None
"RTN","RCDPEMB",9,0)
 ; Output: None
"RTN","RCDPEMB",10,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","RCDPEMB",11,0)
 D EN^DDIOL("NO CHANGES HAVE BEEN MADE.","","!")
"RTN","RCDPEMB",12,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEMB",13,0)
 W !! D ^DIR
"RTN","RCDPEMB",14,0)
 Q
"RTN","RCDPENR2")
0^64^B255388817
"RTN","RCDPENR2",1,0)
RCDPENR2 ;ALB/SAB - EPay National Reports - ERA/EFT Trending Report ;12/10/14
"RTN","RCDPENR2",2,0)
 ;;4.5;Accounts Receivable;**304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPENR2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR2",4,0)
 ;
"RTN","RCDPENR2",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR2",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR2",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR2",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR2",9,0)
 ;Use DIVISION^VAUTOMA via Controlled IA 664
"RTN","RCDPENR2",10,0)
 ;
"RTN","RCDPENR2",11,0)
 Q
"RTN","RCDPENR2",12,0)
 ;
"RTN","RCDPENR2",13,0)
 ;
"RTN","RCDPENR2",14,0)
EFTERA()  ;  EFT/ERA TRENDING REPORT
"RTN","RCDPENR2",15,0)
 ;
"RTN","RCDPENR2",16,0)
 N DIRUT,DIROUT,DTOUT,DUOUT,X,Y,POP
"RTN","RCDPENR2",17,0)
 N RCBGDT,RCDATA,RCDATE,RCDISP,RCENDDT,RCPYRLST,RCSDT,RCEDT,RCRQDIV,RCRPT
"RTN","RCDPENR2",18,0)
 N RCTIN,RCDIV,RCEXCEL,RCEX,RCPAR,RCPAY,RCPAYR,RCTINR,RCTYPE,RCWHICH
"RTN","RCDPENR2",19,0)
 ;
"RTN","RCDPENR2",20,0)
 ; Alert software to display to screen
"RTN","RCDPENR2",21,0)
 S RCDISP=1
"RTN","RCDPENR2",22,0)
 ;
"RTN","RCDPENR2",23,0)
 ; Ask for Division
"RTN","RCDPENR2",24,0)
 S RCRQDIV=$$GETDIV(.RCDIV)
"RTN","RCDPENR2",25,0)
 Q:RCRQDIV=-1
"RTN","RCDPENR2",26,0)
 ;
"RTN","RCDPENR2",27,0)
 S RCTYPE=$$RTYPE^RCDPEU1() Q:RCTYPE=-1           ; PRCA*4.5*326 - Add Tricare filter to Med/Pharm/Both
"RTN","RCDPENR2",28,0)
 S RCWHICH=$$NMORTIN^RCDPEAPP() Q:RCWHICH=-1      ; PRCA*4.5*326 Filter by Payer Name or TIN
"RTN","RCDPENR2",29,0)
 ;
"RTN","RCDPENR2",30,0)
 S RCPAR("SELC")=$$PAYRNG^RCDPEU1(0,1,RCWHICH)    ; PRCA*4.5*326 - Selected or Range of Payers
"RTN","RCDPENR2",31,0)
 Q:RCPAR("SELC")=-1                               ; PRCA*4.5*326 '^' or timeout
"RTN","RCDPENR2",32,0)
 S RCPAY=RCPAR("SELC")
"RTN","RCDPENR2",33,0)
 ;
"RTN","RCDPENR2",34,0)
 I RCPAR("SELC")'="A" D  Q:XX=-1                  ; PRCA*4.5*326 - Since we don't want all payers 
"RTN","RCDPENR2",35,0)
 . S RCPAR("TYPE")=RCTYPE                         ;         prompt for payers we do want
"RTN","RCDPENR2",36,0)
 . S RCPAR("SRCH")=$S(RCWHICH=2:"T",1:"N")
"RTN","RCDPENR2",37,0)
 . S RCPAR("FILE")=344.4
"RTN","RCDPENR2",38,0)
 . S RCPAR("DICA")="Select Insurance Company"_$S(RCWHICH=1:" NAME: ",1:" TIN: ")
"RTN","RCDPENR2",39,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPENR2",40,0)
 ;
"RTN","RCDPENR2",41,0)
 ; Ask the user for rate type
"RTN","RCDPENR2",42,0)
 S RCRATE=$$GETRATE()
"RTN","RCDPENR2",43,0)
 Q:RCRATE=-1
"RTN","RCDPENR2",44,0)
 ;
"RTN","RCDPENR2",45,0)
 ; Ask the user for report type, with a prompt for the main report.
"RTN","RCDPENR2",46,0)
 S RCRPT=$$GETRPT(1)
"RTN","RCDPENR2",47,0)
 Q:RCRPT=-1
"RTN","RCDPENR2",48,0)
 ;
"RTN","RCDPENR2",49,0)
 ; Retrieve start date
"RTN","RCDPENR2",50,0)
 S RCBGDT=$$GETSDATE()
"RTN","RCDPENR2",51,0)
 Q:RCBGDT=-1
"RTN","RCDPENR2",52,0)
 ;
"RTN","RCDPENR2",53,0)
 ; Retrieve end date.  Send user start date as the lower bound.
"RTN","RCDPENR2",54,0)
 S RCENDDT=$$GETEDATE(RCBGDT)
"RTN","RCDPENR2",55,0)
 Q:RCENDDT=-1
"RTN","RCDPENR2",56,0)
 ;
"RTN","RCDPENR2",57,0)
 ;If the user is running the main report, ask if they wish to export to Excel
"RTN","RCDPENR2",58,0)
 S RCEXCEL=0
"RTN","RCDPENR2",59,0)
 S:RCRPT="M" RCEXCEL=$$DISPTY^RCDPRU()
"RTN","RCDPENR2",60,0)
 D:RCEXCEL INFO^RCDPRU
"RTN","RCDPENR2",61,0)
 I 'RCEXCEL,(RCRPT="M") W !!,"This report requires 132 columns.",!!
"RTN","RCDPENR2",62,0)
 D AUTO(1,RCBGDT,RCENDDT,.RCPYRLST,RCRQDIV,RCRPT,RCEXCEL,RCRATE,.RCDIV)
"RTN","RCDPENR2",63,0)
 Q
"RTN","RCDPENR2",64,0)
 ;
"RTN","RCDPENR2",65,0)
AUTO(RCDISP,RCBGDT,RCENDDT,RCPYRLST,RCRQDIV,RCRPT,RCEXCEL,RCRATE,RCDIV) ;
"RTN","RCDPENR2",66,0)
 ; Inputs: RCDISP - Display results to screen or archive file flag
"RTN","RCDPENR2",67,0)
 ;         RCBGDT - begin date of the report
"RTN","RCDPENR2",68,0)
 ;         RCENDDT - End date of the report
"RTN","RCDPENR2",69,0)
 ;         RCPYRLST - Payers to report on (All, range, or single payer) (Redundant with PRCA*4.5*326)
"RTN","RCDPENR2",70,0)
 ;         RCRQDIV - Division to report on - (A)ll or a single division
"RTN","RCDPENR2",71,0)
 ;         RCRPT - (M)ain, (S)ummary or (G)rand Total Report
"RTN","RCDPENR2",72,0)
 ;         RCEXCEL - Flag to indicate output in "^" delimited format
"RTN","RCDPENR2",73,0)
 ;         RCRATE - Billing Rate Type flag
"RTN","RCDPENR2",74,0)
 ;         RCDIV - Divisions to report on.
"RTN","RCDPENR2",75,0)
 ;         RCPAY - Payers to report on (All, range, or single payer)                    ; PRCA*4.5*326
"RTN","RCDPENR2",76,0)
 ;         RCTYPE - Types of payers to include (M - Medical, P - Pharmacy, T - Tricare) ; PRCA*4.5*326
"RTN","RCDPENR2",77,0)
 ;         RCWHICH - select payers by name or TIN (1 - Name, 2 - TIN)                   ; PRCA*4.5*326
"RTN","RCDPENR2",78,0)
 ;
"RTN","RCDPENR2",79,0)
 ;Select output device
"RTN","RCDPENR2",80,0)
 W !
"RTN","RCDPENR2",81,0)
 I RCDISP S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPENR2",82,0)
 ;Option to queue
"RTN","RCDPENR2",83,0)
 I 'RCDISP,$D(IO("Q")) D  Q
"RTN","RCDPENR2",84,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPENR2",85,0)
 .S ZTRTN="REPORT^RCDPENR2"
"RTN","RCDPENR2",86,0)
 .S ZTDESC="EFT/ERA Trending Report"
"RTN","RCDPENR2",87,0)
 .S ZTSAVE("RC*")=""
"RTN","RCDPENR2",88,0)
 .S ZTSAVE("^TMP(""RCDPEU1"",$J,")=""
"RTN","RCDPENR2",89,0)
 .D ^%ZTLOAD
"RTN","RCDPENR2",90,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPENR2",91,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPENR2",92,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPENR2",93,0)
 ;
"RTN","RCDPENR2",94,0)
 ;Compile and Print Report
"RTN","RCDPENR2",95,0)
 D REPORT
"RTN","RCDPENR2",96,0)
 Q
"RTN","RCDPENR2",97,0)
 ;
"RTN","RCDPENR2",98,0)
REPORT   ; Trace the ERA file for the given date range
"RTN","RCDPENR2",99,0)
 ;
"RTN","RCDPENR2",100,0)
 N RCPYRS,RCINS,RCDATA,RCDTLDT,RCDTLIEN,RCIEN,RCEOB,RCBILLNO,RCBATCH,RCPHARM,RCPYALL,RCTINALL
"RTN","RCDPENR2",101,0)
 ;
"RTN","RCDPENR2",102,0)
 ;Note: RCPYALL an RCTINALL are used in tag HEADER to determine header output.
"RTN","RCDPENR2",103,0)
 ;
"RTN","RCDPENR2",104,0)
 ; Clear temp arrays
"RTN","RCDPENR2",105,0)
 K ^TMP("RCDPEADP",$J),^TMP("RCDPENR2",$J)
"RTN","RCDPENR2",106,0)
 ;
"RTN","RCDPENR2",107,0)
 ; Compile list of divisions
"RTN","RCDPENR2",108,0)
 D DIV(.RCDIV)
"RTN","RCDPENR2",109,0)
 ;
"RTN","RCDPENR2",110,0)
 ; Gather raw data
"RTN","RCDPENR2",111,0)
 D GETEFT^RCDPENR3(RCBGDT,RCENDDT,RCRATE)
"RTN","RCDPENR2",112,0)
 D GETERA^RCDPENR4(RCBGDT,RCENDDT,RCRATE)
"RTN","RCDPENR2",113,0)
 ;
"RTN","RCDPENR2",114,0)
 ;Check for data captures
"RTN","RCDPENR2",115,0)
 I '$D(^TMP("RCDPENR2",$J,"MAIN")) D  Q
"RTN","RCDPENR2",116,0)
 .  W !!,"There was no data available for the requested report.  Please try again."
"RTN","RCDPENR2",117,0)
 ;
"RTN","RCDPENR2",118,0)
 ;Generate the statistics if any data captured
"RTN","RCDPENR2",119,0)
 D COMPILE^RCDPENR3
"RTN","RCDPENR2",120,0)
 ;
"RTN","RCDPENR2",121,0)
 ; Print out the results
"RTN","RCDPENR2",122,0)
 D PRINT(RCRPT)
"RTN","RCDPENR2",123,0)
 ;
"RTN","RCDPENR2",124,0)
 ;Clean up temp array afterwards
"RTN","RCDPENR2",125,0)
 K ^TMP("RCDPENR2",$J)
"RTN","RCDPENR2",126,0)
 K ^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPENR2",127,0)
 Q 
"RTN","RCDPENR2",128,0)
 ;
"RTN","RCDPENR2",129,0)
 ;Print the results.
"RTN","RCDPENR2",130,0)
PRINT(RCSUMFLG) ;Print the results
"RTN","RCDPENR2",131,0)
 ;
"RTN","RCDPENR2",132,0)
 ; Temp Array format
"RTN","RCDPENR2",133,0)
 ;   ^TMP("RCDPENR1",$J,"TOT")=# Medical 835's ^ # Pharmacy 835's ^
"RTN","RCDPENR2",134,0)
 N RCSTOP,RCPAGE,RCLINE,RCRUNDT,RCRPIEN,RCSUBJ,RCXMZ
"RTN","RCDPENR2",135,0)
 ;
"RTN","RCDPENR2",136,0)
 ;set separator print line.
"RTN","RCDPENR2",137,0)
 S RCLINE="",$P(RCLINE,"-",IOM)=""
"RTN","RCDPENR2",138,0)
 ;
"RTN","RCDPENR2",139,0)
 ; Init the stop flag, page count
"RTN","RCDPENR2",140,0)
 S RCSTOP=0,RCPAGE=0
"RTN","RCDPENR2",141,0)
 ;
"RTN","RCDPENR2",142,0)
 ; Set the Run date for the report
"RTN","RCDPENR2",143,0)
 S RCRUNDT=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPENR2",144,0)
 ;
"RTN","RCDPENR2",145,0)
 ; Open the device
"RTN","RCDPENR2",146,0)
 I RCDISP U IO
"RTN","RCDPENR2",147,0)
 ;
"RTN","RCDPENR2",148,0)
 I 'RCDISP D  Q:'RCRPIEN
"RTN","RCDPENR2",149,0)
 . S RCRPIEN=$$INITARCH^RCDPENR1("EFT/ERA TRENDING")
"RTN","RCDPENR2",150,0)
 ;
"RTN","RCDPENR2",151,0)
 ; Display Header
"RTN","RCDPENR2",152,0)
 D HEADER
"RTN","RCDPENR2",153,0)
 ;
"RTN","RCDPENR2",154,0)
 ; Display the Main Level report 
"RTN","RCDPENR2",155,0)
 I RCSUMFLG="M" D
"RTN","RCDPENR2",156,0)
 .  S RCSTOP=$$MAIN()
"RTN","RCDPENR2",157,0)
 Q:RCSTOP
"RTN","RCDPENR2",158,0)
 ;
"RTN","RCDPENR2",159,0)
 S:RCSUMFLG="M" RCSUMFLG="S"   ; Reset summary flag to prevent Main Column headers from appearing.
"RTN","RCDPENR2",160,0)
 ;
"RTN","RCDPENR2",161,0)
 ; Display the Payer/TIN summary information
"RTN","RCDPENR2",162,0)
 I RCSUMFLG'="G" S RCSTOP=$$SUMMARY()
"RTN","RCDPENR2",163,0)
 Q:RCSTOP
"RTN","RCDPENR2",164,0)
 ;
"RTN","RCDPENR2",165,0)
 ; Display the grand total at the end
"RTN","RCDPENR2",166,0)
 S RCSTOP=$$GRAND()
"RTN","RCDPENR2",167,0)
 Q:RCSTOP
"RTN","RCDPENR2",168,0)
 ;
"RTN","RCDPENR2",169,0)
 ; If not displaying to screen, send
"RTN","RCDPENR2",170,0)
 I 'RCDISP D
"RTN","RCDPENR2",171,0)
 . S RCSUBJ="ERA/EFT TRENDING REPORT"
"RTN","RCDPENR2",172,0)
 . S RCXMZ=$$XM^RCDPENRU(RCRPIEN,RCBGDT,RCENDDT,RCSUBJ)
"RTN","RCDPENR2",173,0)
 ;
"RTN","RCDPENR2",174,0)
 ;Report finished
"RTN","RCDPENR2",175,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",176,0)
 I RCDISP W !,$$ENDORPRT^RCDPEARL
"RTN","RCDPENR2",177,0)
 W !
"RTN","RCDPENR2",178,0)
 ;
"RTN","RCDPENR2",179,0)
 ;Close device
"RTN","RCDPENR2",180,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPENR2",181,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPENR2",182,0)
 Q
"RTN","RCDPENR2",183,0)
 ;
"RTN","RCDPENR2",184,0)
HEADER ;Print the results
"RTN","RCDPENR2",185,0)
 ;
"RTN","RCDPENR2",186,0)
 ; Undeclared Parameters - RCDISP and RCRPIEN
"RTN","RCDPENR2",187,0)
 ;
"RTN","RCDPENR2",188,0)
 N RCDIVTXT,RCPYRTXT,RCSTR,RCTYPTXT
"RTN","RCDPENR2",189,0)
 ;
"RTN","RCDPENR2",190,0)
 S RCDIVTXT=$$DIVTXT^RCDPENR1()
"RTN","RCDPENR2",191,0)
 S RCPYRTXT=$S(RCPAY="S":"SELECTED",RCPAY="R":"RANGE",1:"ALL")_" " ; PRCA*4.5*326
"RTN","RCDPENR2",192,0)
 S RCPYRTXT=RCPYRTXT_$S(RCWHICH=2:"TINS",1:"PAYERS")               ; PRCA*4.5*326
"RTN","RCDPENR2",193,0)
 S RCTYPTXT=$S('+$G(RCEXCEL):"MEDICAL/PHARMACY/TRICARE: ",1:"")    ; PRCA*4.5*326
"RTN","RCDPENR2",194,0)
 S RCTYPTXT=RCTYPTXT_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL") ; PRCA*4.5*326
"RTN","RCDPENR2",195,0)
 ;
"RTN","RCDPENR2",196,0)
 S RCPAGE=RCPAGE+1
"RTN","RCDPENR2",197,0)
 I '+RCDISP D  Q
"RTN","RCDPENR2",198,0)
 . S RCSTR="EFT/ERA TRENDING REPORT^PAGE "_$J(RCPAGE,5)
"RTN","RCDPENR2",199,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",200,0)
 . S RCSTR="^"_RCDIVTXT_"^"_RCPYRTXT_"^"_RCTYPTXT
"RTN","RCDPENR2",201,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",202,0)
 . S RCSTR="^"_"DATE RANGE: "_$$FMTE^XLFDT(RCBGDT,2)_" - "_$$FMTE^XLFDT(RCENDDT,2)_"^"_"RUN DATE: "_RCRUNDT
"RTN","RCDPENR2",203,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",204,0)
 . D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR2",205,0)
 W @IOF,"EFT/ERA TRENDING REPORT"
"RTN","RCDPENR2",206,0)
 I '+$G(RCEXCEL) D  Q
"RTN","RCDPENR2",207,0)
 . W ?70,"PAGE ",$J(RCPAGE,5),!
"RTN","RCDPENR2",208,0)
 . W " "_$E(RCDIVTXT,1,23),?25,$E(RCPYRTXT,1,20),?46,$E(RCTYPTXT,1,35),!
"RTN","RCDPENR2",209,0)
 . W ?5,"DATE RANGE: ",$$FMTE^XLFDT(RCBGDT,2)," - ",$$FMTE^XLFDT(RCENDDT,2)
"RTN","RCDPENR2",210,0)
 . W ?51,"RUN DATE: ",RCRUNDT,!
"RTN","RCDPENR2",211,0)
 . W RCLINE,!
"RTN","RCDPENR2",212,0)
 I +$G(RCEXCEL) D
"RTN","RCDPENR2",213,0)
 . W "^PAGE ",$J(RCPAGE,5),!
"RTN","RCDPENR2",214,0)
 . W "^",RCDIVTXT,"^",RCPYRTXT,"^",RCTYPTXT,!
"RTN","RCDPENR2",215,0)
 . W "^","DATE RANGE: ",$$FMTE^XLFDT(RCBGDT,2)," - ",$$FMTE^XLFDT(RCENDDT,2)
"RTN","RCDPENR2",216,0)
 . W "^","RUN DATE: ",RCRUNDT,!
"RTN","RCDPENR2",217,0)
 . W RCLINE,!
"RTN","RCDPENR2",218,0)
 ;
"RTN","RCDPENR2",219,0)
 ;Re-display the column headers
"RTN","RCDPENR2",220,0)
 I (RCSUMFLG="M"),(RCPAGE'=1) D COLHEAD
"RTN","RCDPENR2",221,0)
 Q
"RTN","RCDPENR2",222,0)
 ;
"RTN","RCDPENR2",223,0)
 ;Print the Detailed portion of the report
"RTN","RCDPENR2",224,0)
MAIN() ;
"RTN","RCDPENR2",225,0)
 ;
"RTN","RCDPENR2",226,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCINSTIN,RCCLAIM,RCBILL
"RTN","RCDPENR2",227,0)
 N RCAMTBL,RCPAID,RCBILLDT,RCERADT,RCEFTDT,RCPOSTDT,RCTRACE,RCATPST,RCIDX,RCAMTPD
"RTN","RCDPENR2",228,0)
 N RCETRAN,RCERA,RCEOB,RCEFTNO,RCBEDY,RCEEDY,RCEPDY,RCBPDY,RCTOTDY,RCTMP,RCSTOP,RCIDX
"RTN","RCDPENR2",229,0)
 ;
"RTN","RCDPENR2",230,0)
 ; Print ERA/EFT combinations for each Insurance Company/Tin combination
"RTN","RCDPENR2",231,0)
 S RCINSTIN="",RCSTOP=0
"RTN","RCDPENR2",232,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN)) Q:RCINSTIN=""  D  Q:RCSTOP
"RTN","RCDPENR2",233,0)
 . S RCSTOP=$$PRINTINS(RCINSTIN)
"RTN","RCDPENR2",234,0)
 . Q:RCSTOP
"RTN","RCDPENR2",235,0)
 . F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",236,0)
 . . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",237,0)
 . . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",238,0)
 . . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",239,0)
 . . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",240,0)
 . . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",241,0)
 . . S RCSTOP=$$PRINTHDR(RCSTRING)
"RTN","RCDPENR2",242,0)
 . . Q:RCSTOP
"RTN","RCDPENR2",243,0)
 . . S RCCLAIM=""
"RTN","RCDPENR2",244,0)
 . . F  S RCCLAIM=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,I,RCCLAIM)) Q:RCCLAIM=""  D  Q:RCSTOP
"RTN","RCDPENR2",245,0)
 . . . I $Y>(IOSL-7) D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",246,0)
 . . . S RCDATA=$G(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,I,RCCLAIM))
"RTN","RCDPENR2",247,0)
 . . . I RCDATA="" D  Q
"RTN","RCDPENR2",248,0)
 . . . . W !,"No data captured for this section during the specified time period.",!
"RTN","RCDPENR2",249,0)
 . . . ;
"RTN","RCDPENR2",250,0)
 . . . ;Init display values for the days
"RTN","RCDPENR2",251,0)
 . . . S (RCBEDY,RCEEDY,RCEPDY,RCBPDY)=""
"RTN","RCDPENR2",252,0)
 . . . S RCBILL=$$GET1^DIQ(399,+RCCLAIM_",",".01","E")
"RTN","RCDPENR2",253,0)
 . . . I $P(RCDATA,U,9),$P(RCDATA,U,8) S RCBEDY=$$FMTH^XLFDT($P(RCDATA,U,9),1)-$$FMTH^XLFDT($P(RCDATA,U,8),1)
"RTN","RCDPENR2",254,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9) S RCEEDY=$$FMTH^XLFDT($P(RCDATA,U,10),1)-$$FMTH^XLFDT($P(RCDATA,U,9),1)
"RTN","RCDPENR2",255,0)
 . . . S RCIDX=$S($$FMTH^XLFDT($P(RCDATA,U,10),1)>$$FMTH^XLFDT($P(RCDATA,U,10),1):10,1:9)  ; Find the latest date between ERA and EFT
"RTN","RCDPENR2",256,0)
 . . . I $P(RCDATA,U,11),$P(RCDATA,U,RCIDX) S RCEPDY=$$FMTH^XLFDT($P(RCDATA,U,11),1)-$$FMTH^XLFDT($P(RCDATA,U,RCIDX),1)  ; Use latest date to determ days btw ERA/EFT and Posting
"RTN","RCDPENR2",257,0)
 . . . I $P(RCDATA,U,11),$P(RCDATA,U,8) S RCBPDY=$$FMTH^XLFDT($P(RCDATA,U,11),1)-$$FMTH^XLFDT($P(RCDATA,U,8),1)
"RTN","RCDPENR2",258,0)
 . . . I RCEXCEL D
"RTN","RCDPENR2",259,0)
 . . . . S RCTMP=RCBILL_"^"_$$FMTE^XLFDT($P(RCDATA,U,5),2)_"^"_$P(RCDATA,U,6)_"^"_$P(RCDATA,U,7)_"^"_$$FMTE^XLFDT($P(RCDATA,U,8),2)
"RTN","RCDPENR2",260,0)
 . . . . S RCTMP=RCTMP_"^"_$$FMTE^XLFDT($P(RCDATA,U,9),2)_"^"_$$FMTE^XLFDT($P(RCDATA,U,10),2)_"^"_$$FMTE^XLFDT($P(RCDATA,U,11),2)_"^"_$P(RCDATA,U,12)_"^"_$P(RCDATA,U,13)
"RTN","RCDPENR2",261,0)
 . . . . S RCTMP=RCTMP_"^"_$P(RCDATA,U,14)_"^"_$P(RCDATA,U,2)_"^"_$P(RCDATA,U,15)_"^"_$P(RCDATA,U,3)_"^"
"RTN","RCDPENR2",262,0)
 . . . . S RCTMP=RCTMP_RCBEDY_"^"_RCEEDY_"^"_RCEPDY_"^"_RCBPDY
"RTN","RCDPENR2",263,0)
 . . . . W RCTMP,!
"RTN","RCDPENR2",264,0)
 . . . I 'RCEXCEL D
"RTN","RCDPENR2",265,0)
 . . . . W RCBILL,?21,$$FMTE^XLFDT($P(RCDATA,U,5),2),?30,$J($P(RCDATA,U,6),10,2),?41,$J($P(RCDATA,U,7),10,2),?52,$$FMTE^XLFDT($P(RCDATA,U,8),2)
"RTN","RCDPENR2",266,0)
 . . . . W ?61,$$FMTE^XLFDT($P(RCDATA,U,9),2),?75,$$FMTE^XLFDT($P(RCDATA,U,10),2),?89,$$FMTE^XLFDT($P(RCDATA,U,11),2),?98,$P(RCDATA,U,12),?109,$P(RCDATA,U,13),!
"RTN","RCDPENR2",267,0)
 . . . . W ?5,$P(RCDATA,U,14),?17,$P(RCDATA,U,2),?28,$J($P(RCDATA,U,15),6),?39,$P(RCDATA,U,3),?50,$J(RCBEDY,8)
"RTN","RCDPENR2",268,0)
 . . . . W ?67,$J(RCEEDY,8),?83,$J(RCEPDY,8),?106,$J(RCBPDY,8),!
"RTN","RCDPENR2",269,0)
 . . W RCLINE,!
"RTN","RCDPENR2",270,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",271,0)
 ; Section break - ask user if they wish to continue...
"RTN","RCDPENR2",272,0)
 I +$G(RCEXCEL)=0 D
"RTN","RCDPENR2",273,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",274,0)
 . Q:RCSTOP
"RTN","RCDPENR2",275,0)
 . D HEADER
"RTN","RCDPENR2",276,0)
 ;
"RTN","RCDPENR2",277,0)
 Q RCSTOP
"RTN","RCDPENR2",278,0)
 ;
"RTN","RCDPENR2",279,0)
SUMMARY() ;Print the Payer Summary portion of the report
"RTN","RCDPENR2",280,0)
 ;
"RTN","RCDPENR2",281,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCSTOP,RCERAFLG,I
"RTN","RCDPENR2",282,0)
 ;
"RTN","RCDPENR2",283,0)
 ; Print ERA/EFT combinations for each Insurance Company/Tin combination
"RTN","RCDPENR2",284,0)
 S RCINSTIN="",RCSTOP=0
"RTN","RCDPENR2",285,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN)) Q:RCINSTIN=""  D  Q:RCSTOP
"RTN","RCDPENR2",286,0)
 . I $Y>(IOSL-7) D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",287,0)
 . D PRINTINS(RCINSTIN)
"RTN","RCDPENR2",288,0)
 . ; Print all 3 combinations
"RTN","RCDPENR2",289,0)
 . F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",290,0)
 . . S RCDATA=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I))
"RTN","RCDPENR2",291,0)
 . . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",292,0)
 . . S RCERAFLG=0
"RTN","RCDPENR2",293,0)
 . . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",294,0)
 . . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",295,0)
 . . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",296,0)
 . . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",297,0)
 . . I (RCEFTTXT="EFT"),(RCERATXT["ERA") S RCERAFLG=1
"RTN","RCDPENR2",298,0)
 . . D PRINTGT^RCDPENR3(RCSTRING,RCDATA,RCDISP,RCERAFLG,RCEXCEL)
"RTN","RCDPENR2",299,0)
 ;
"RTN","RCDPENR2",300,0)
 Q RCSTOP
"RTN","RCDPENR2",301,0)
 ;
"RTN","RCDPENR2",302,0)
 ;Total for all payers in report
"RTN","RCDPENR2",303,0)
GRAND() ;
"RTN","RCDPENR2",304,0)
 ;
"RTN","RCDPENR2",305,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCSTOP,RCERAFLG,I
"RTN","RCDPENR2",306,0)
 ;
"RTN","RCDPENR2",307,0)
 S RCSTOP=0
"RTN","RCDPENR2",308,0)
 ; Print the Grand Total Banner
"RTN","RCDPENR2",309,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",310,0)
 I RCSUMFLG'="G",RCDISP D
"RTN","RCDPENR2",311,0)
 . W !,"GRAND TOTALS ALL PAYERS",!!
"RTN","RCDPENR2",312,0)
 . W RCLINE,!
"RTN","RCDPENR2",313,0)
 ;
"RTN","RCDPENR2",314,0)
 ; Print all 3 EOB/Payment combinations
"RTN","RCDPENR2",315,0)
 F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",316,0)
 . S RCDATA=$G(^TMP("RCDPENR2",$J,"GTOT",I))
"RTN","RCDPENR2",317,0)
 . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",318,0)
 . S RCERAFLG=0
"RTN","RCDPENR2",319,0)
 . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",320,0)
 . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",321,0)
 . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",322,0)
 . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",323,0)
 . I (RCEFTTXT="EFT"),(RCERATXT["ERA") S RCERAFLG=1
"RTN","RCDPENR2",324,0)
 . D PRINTGT^RCDPENR3(RCSTRING,RCDATA,RCDISP,RCERAFLG,RCEXCEL)
"RTN","RCDPENR2",325,0)
 ;
"RTN","RCDPENR2",326,0)
 Q RCSTOP
"RTN","RCDPENR2",327,0)
 ;
"RTN","RCDPENR2",328,0)
PRINTINS(RCINS) ; Print the insurance header line
"RTN","RCDPENR2",329,0)
 ; Input:   RCINS   - Payer Name/TIN to be displayed
"RTN","RCDPENR2",330,0)
 ;          RCLINE  - line of dashes used for separation
"RTN","RCDPENR2",331,0)
 ; Returns 1 - User quit out of report, 0 otherwise
"RTN","RCDPENR2",332,0)
 N RCSTOP,XX,YY,ZZ
"RTN","RCDPENR2",333,0)
 ;
"RTN","RCDPENR2",334,0)
 S RCSTOP=0
"RTN","RCDPENR2",335,0)
 I $Y>(IOSL-7) D
"RTN","RCDPENR2",336,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",337,0)
 . Q:RCSTOP
"RTN","RCDPENR2",338,0)
 . D HEADER
"RTN","RCDPENR2",339,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",340,0)
 W "PAYER NAME/TIN",!                       ; PRCA*4.5*321
"RTN","RCDPENR2",341,0)
 W " ",$$PAYTIN^RCDPRU2(RCINS,78),!         ; PRCA*4.5*321
"RTN","RCDPENR2",342,0)
 W RCLINE,!
"RTN","RCDPENR2",343,0)
 Q RCSTOP
"RTN","RCDPENR2",344,0)
 ;
"RTN","RCDPENR2",345,0)
 ;Print the Payment Method header lines
"RTN","RCDPENR2",346,0)
PRINTHDR(RCTITLE) ;
"RTN","RCDPENR2",347,0)
 ; Undeclared parameters
"RTN","RCDPENR2",348,0)
 ;   RCLINE - line of "-" for report formating
"RTN","RCDPENR2",349,0)
 ;   RCSUMFLG - Type of report (M=Main,S=Summary,G=Grand Total)
"RTN","RCDPENR2",350,0)
 ;   RCDISP - Is the report being email (0) or Printed (1)
"RTN","RCDPENR2",351,0)
 ;   RCRPIEN - IEN to store the report if emailing
"RTN","RCDPENR2",352,0)
 ;
"RTN","RCDPENR2",353,0)
 N RCBORDER,RCSTOP,RCSTR
"RTN","RCDPENR2",354,0)
 ;
"RTN","RCDPENR2",355,0)
 S RCBORDER="",$P(RCBORDER,"*",20)="",RCSTOP=0
"RTN","RCDPENR2",356,0)
 I $Y>(IOSL-7),RCDISP D
"RTN","RCDPENR2",357,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",358,0)
 . Q:RCSTOP
"RTN","RCDPENR2",359,0)
 . D HEADER
"RTN","RCDPENR2",360,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",361,0)
 ;
"RTN","RCDPENR2",362,0)
 ; Display report type being displayed
"RTN","RCDPENR2",363,0)
 I 'RCDISP D  Q
"RTN","RCDPENR2",364,0)
 . S RCSTR=RCBORDER_"     "_RCTITLE_"     "_RCBORDER
"RTN","RCDPENR2",365,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",366,0)
 . D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR2",367,0)
 I RCDISP D
"RTN","RCDPENR2",368,0)
 . W RCBORDER,"     ",RCTITLE,"     ",RCBORDER,!
"RTN","RCDPENR2",369,0)
 . W RCLINE,!
"RTN","RCDPENR2",370,0)
 ;
"RTN","RCDPENR2",371,0)
 D:RCSUMFLG="M" COLHEAD    ;display column headers
"RTN","RCDPENR2",372,0)
 ;
"RTN","RCDPENR2",373,0)
 Q RCSTOP
"RTN","RCDPENR2",374,0)
 ;
"RTN","RCDPENR2",375,0)
 ; Retrieve the Division
"RTN","RCDPENR2",376,0)
GETDIV(RCDIV) ;
"RTN","RCDPENR2",377,0)
 ;
"RTN","RCDPENR2",378,0)
 ; The use of DIVISION^VAUTOMA Supported by IA 1077
"RTN","RCDPENR2",379,0)
 ;
"RTN","RCDPENR2",380,0)
 N VAUTD
"RTN","RCDPENR2",381,0)
 D DIVISION^VAUTOMA
"RTN","RCDPENR2",382,0)
 I VAUTD=1 S RCDIV("A")="" Q 1
"RTN","RCDPENR2",383,0)
 I 'VAUTD&($D(VAUTD)'=11) Q -1
"RTN","RCDPENR2",384,0)
 M RCDIV=VAUTD
"RTN","RCDPENR2",385,0)
 Q 1
"RTN","RCDPENR2",386,0)
 ;
"RTN","RCDPENR2",387,0)
 ;Retrieve the Report Type
"RTN","RCDPENR2",388,0)
GETRATE() ;
"RTN","RCDPENR2",389,0)
 ;
"RTN","RCDPENR2",390,0)
 ;RCMNFLG - Ask to print the Main report (Detailed) report.  0=No, 1=Yes
"RTN","RCDPENR2",391,0)
 N X,Y,DIC,DTOUT,DUOUT
"RTN","RCDPENR2",392,0)
 ;
"RTN","RCDPENR2",393,0)
 S DIC="^DGCR(399.3,",DIC(0)="AEQMN"
"RTN","RCDPENR2",394,0)
 S DIC("S")="I $P(^(0),U,7)=""i"""
"RTN","RCDPENR2",395,0)
 D ^DIC K DIC
"RTN","RCDPENR2",396,0)
 Q +Y
"RTN","RCDPENR2",397,0)
 ;
"RTN","RCDPENR2",398,0)
 ;Retrieve the Report Type
"RTN","RCDPENR2",399,0)
GETRPT(RCMNFLG) ;
"RTN","RCDPENR2",400,0)
 ;
"RTN","RCDPENR2",401,0)
 ;RCMNFLG - Ask to print the Main report (Detailed) report.  0=No, 1=Yes
"RTN","RCDPENR2",402,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPENR2",403,0)
 ;
"RTN","RCDPENR2",404,0)
 ; Prompt with Main (EFT/ERA Trending report (from RCDPENR2))
"RTN","RCDPENR2",405,0)
 I $G(RCMNFLG) D
"RTN","RCDPENR2",406,0)
 . S DIR("A")="Print (M)AIN Report, (S)UMMARY by Payer or (G)RAND TOTALS ONLY: "
"RTN","RCDPENR2",407,0)
 . S DIR(0)="SA^M:MAIN;S:SUMMARY;G:GRAND TOTAL"
"RTN","RCDPENR2",408,0)
 ;
"RTN","RCDPENR2",409,0)
 ; Prompt w/o main (Volume Statistics report (from RCDPENR1))
"RTN","RCDPENR2",410,0)
 I '$G(RCMNFLG) D
"RTN","RCDPENR2",411,0)
 . S DIR("A")="(S)UMMARY by Payer or (G)RAND TOTALS ONLY: "
"RTN","RCDPENR2",412,0)
 . S DIR(0)="SA^S:SUMMARY;G:GRAND TOTAL"
"RTN","RCDPENR2",413,0)
 ;
"RTN","RCDPENR2",414,0)
 S DIR("?")="Select the type of report to Generate."
"RTN","RCDPENR2",415,0)
 S DIR("B")="G"
"RTN","RCDPENR2",416,0)
 D ^DIR K DIR
"RTN","RCDPENR2",417,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPENR2",418,0)
 Q Y
"RTN","RCDPENR2",419,0)
 ;
"RTN","RCDPENR2",420,0)
 ;
"RTN","RCDPENR2",421,0)
GETSDATE()  ;
"RTN","RCDPENR2",422,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCTODAY
"RTN","RCDPENR2",423,0)
 ;
"RTN","RCDPENR2",424,0)
 ;Assume the start date is 45 days prior to the end date
"RTN","RCDPENR2",425,0)
 ;
"RTN","RCDPENR2",426,0)
 ;Get the start date.  
"RTN","RCDPENR2",427,0)
 S RCTODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPENR2",428,0)
 S DIR("?")="ENTER THE EARLIEST DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPENR2",429,0)
 S DIR(0)="DA^:"_RCTODAY_":APE",DIR("A")="Start with DATE: "
"RTN","RCDPENR2",430,0)
 D ^DIR K DIR
"RTN","RCDPENR2",431,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPENR2",432,0)
 Q Y
"RTN","RCDPENR2",433,0)
 ;
"RTN","RCDPENR2",434,0)
 ; Retrieve the end date of the report from the user.
"RTN","RCDPENR2",435,0)
GETEDATE(RCBDATE)  ;
"RTN","RCDPENR2",436,0)
 ; RCBDATE - Begin date of the report.  Used as a lower bound
"RTN","RCDPENR2",437,0)
 ;
"RTN","RCDPENR2",438,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCTODAY
"RTN","RCDPENR2",439,0)
 ;
"RTN","RCDPENR2",440,0)
 ; Get the End date first.  Assume the end date is today.
"RTN","RCDPENR2",441,0)
 S RCTODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPENR2",442,0)
 S DIR("?")="ENTER THE LATEST DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPENR2",443,0)
 S DIR("B")=$$FMTE^XLFDT(RCTODAY,2)
"RTN","RCDPENR2",444,0)
 S DIR(0)="DAO^"_$G(RCBDATE)_":"_RCTODAY_":APE",DIR("A")="Go to DATE: " D ^DIR K DIR
"RTN","RCDPENR2",445,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPENR2",446,0)
 Q Y
"RTN","RCDPENR2",447,0)
 ; 
"RTN","RCDPENR2",448,0)
GETARPYR(RCTIN,RCPAY) ; Retrieve the Payer IEN from the RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPENR2",449,0)
 ; Input: RCTIN - Payer ID
"RTN","RCDPENR2",450,0)
 ;        RCPAY - Payer Name (optional)
"RTN","RCDPENR2",451,0)
 ; Return: Payer IEN (#344.6)
"RTN","RCDPENR2",452,0)
 ;
"RTN","RCDPENR2",453,0)
 N RCIEN,QUIT,ZZ
"RTN","RCDPENR2",454,0)
 S RCPAY=$G(RCPAY)
"RTN","RCDPENR2",455,0)
 ;
"RTN","RCDPENR2",456,0)
 ; Send the IEN entry in the file if the Payer is in it.  Otherwise, send 0.
"RTN","RCDPENR2",457,0)
 S RCIEN=0
"RTN","RCDPENR2",458,0)
 ;
"RTN","RCDPENR2",459,0)
 ; PRCA*4.5*321 - Add optional payer name to search to narrow down payer
"RTN","RCDPENR2",460,0)
 I RCPAY'="" D  ;
"RTN","RCDPENR2",461,0)
 . S ZZ="",QUIT=0
"RTN","RCDPENR2",462,0)
 . F  S ZZ=$O(^RCY(344.6,"C",RCTIN_" ",ZZ)) Q:ZZ=""  D  I RCIEN Q  ;
"RTN","RCDPENR2",463,0)
 . . I $$GET1^DIQ(344.6,ZZ_",",.01,"E")=RCPAY S RCIEN=ZZ
"RTN","RCDPENR2",464,0)
 ;
"RTN","RCDPENR2",465,0)
 I 'RCIEN D  ;
"RTN","RCDPENR2",466,0)
 . S RCIEN=$O(^RCY(344.6,"C",RCTIN_" ",""))
"RTN","RCDPENR2",467,0)
 ;
"RTN","RCDPENR2",468,0)
 Q +RCIEN
"RTN","RCDPENR2",469,0)
 ;
"RTN","RCDPENR2",470,0)
 ; Determine if the payer in the ERA or EFT should be included in the report.
"RTN","RCDPENR2",471,0)
INSCHK(RCINS) ;
"RTN","RCDPENR2",472,0)
 ;
"RTN","RCDPENR2",473,0)
 ;Send yes if all payers are being reported on.
"RTN","RCDPENR2",474,0)
 Q:$D(^TMP("RCDPENR2",$J,"INS","A")) 1
"RTN","RCDPENR2",475,0)
 ;
"RTN","RCDPENR2",476,0)
 ; Send yes if Payer is in the list to report on
"RTN","RCDPENR2",477,0)
 Q:$D(^TMP("RCDPENR2",$J,"INS",RCINS)) 1
"RTN","RCDPENR2",478,0)
 ;
"RTN","RCDPENR2",479,0)
 ; Otherwise, send no
"RTN","RCDPENR2",480,0)
 Q 0
"RTN","RCDPENR2",481,0)
 ;
"RTN","RCDPENR2",482,0)
 ; build the list of divisions to report on.
"RTN","RCDPENR2",483,0)
DIV(RCDIV) ;
"RTN","RCDPENR2",484,0)
 ;
"RTN","RCDPENR2",485,0)
 N RCI
"RTN","RCDPENR2",486,0)
 ;
"RTN","RCDPENR2",487,0)
 ; If all divisions selected, set the all division flag
"RTN","RCDPENR2",488,0)
 I $D(RCDIV("A")) S ^TMP("RCDPENR2",$J,"DIVALL")="" Q
"RTN","RCDPENR2",489,0)
 ;
"RTN","RCDPENR2",490,0)
 ; Loop through division list and build temp array for it.
"RTN","RCDPENR2",491,0)
 S RCI=0
"RTN","RCDPENR2",492,0)
 F  S RCI=$O(RCDIV(RCI)) Q:'RCI  S ^TMP("RCDPENR2",$J,"DIV",RCDIV(RCI))=""
"RTN","RCDPENR2",493,0)
 Q
"RTN","RCDPENR2",494,0)
 ;Determine the text to display for the Payer TINs
"RTN","RCDPENR2",495,0)
TINTXT() ;
"RTN","RCDPENR2",496,0)
 ;
"RTN","RCDPENR2",497,0)
 N RCTIN,RCTXT,RCTNTXT
"RTN","RCDPENR2",498,0)
 ; 
"RTN","RCDPENR2",499,0)
 Q:$D(^TMP("RCDPEADP",$J,"TIN","A")) "ALL PAYER TINS"
"RTN","RCDPENR2",500,0)
 ;
"RTN","RCDPENR2",501,0)
 ;Build list of Payer Tins
"RTN","RCDPENR2",502,0)
 ;
"RTN","RCDPENR2",503,0)
 S RCTIN="",RCTXT=""
"RTN","RCDPENR2",504,0)
 F  S RCTIN=$O(^TMP("RCDPEADP",$J,"TIN",RCTIN)) Q:RCTIN=""  D
"RTN","RCDPENR2",505,0)
 . S RCTNTXT=$$GET1^DIQ(344.6,+RCTIN_",",".02","I")
"RTN","RCDPENR2",506,0)
 . S RCTXT=RCTXT_RCTNTXT_","
"RTN","RCDPENR2",507,0)
 ;
"RTN","RCDPENR2",508,0)
 ; Remove comma at the end. 
"RTN","RCDPENR2",509,0)
 S RCTXT=$E(RCTXT,1,$L(RCTXT)-1)
"RTN","RCDPENR2",510,0)
 ;
"RTN","RCDPENR2",511,0)
 ; Display the first 35 characters of the division text list,
"RTN","RCDPENR2",512,0)
 Q $E(RCTXT,1,35)
"RTN","RCDPENR2",513,0)
 ;
"RTN","RCDPENR2",514,0)
COLHEAD ;
"RTN","RCDPENR2",515,0)
 ;
"RTN","RCDPENR2",516,0)
 N RCTMP
"RTN","RCDPENR2",517,0)
 ;
"RTN","RCDPENR2",518,0)
 ;Display the column headers
"RTN","RCDPENR2",519,0)
 I RCEXCEL D
"RTN","RCDPENR2",520,0)
 . S RCTMP="CLAIM#^DOS^AMT BILLED^AMT PAID^BILLED^ERA/EOB REC'D^EFT/PMT REC'D^POSTED^TRACE #"
"RTN","RCDPENR2",521,0)
 . S RCTMP=RCTMP_"^ETRANS TYPE^ERA#^#EEOBS^EFT#^#DAYS:(BILL/ERA)^#DAYS:(ERA/EFT)^#DAYS:(ERA+EFT/POSTED)^TOTAL #DAYS(BILL/POSTED)"
"RTN","RCDPENR2",522,0)
 . W RCTMP,!
"RTN","RCDPENR2",523,0)
 I 'RCEXCEL D
"RTN","RCDPENR2",524,0)
 . W "CLAIM#",?21,"DOS",?30,"AMT BILLED",?41,"AMT PAID",?52,"BILLED",?61,"ERA/EOB REC'D",?75,"EFT/PMT REC'D",?89,"POSTED",?98,"TRACE #",?109,"AUTOPOST/MANUAL",!
"RTN","RCDPENR2",525,0)
 . W ?5,"ETRANS TYPE",?17,"ERA#",?28,"#EEOBS",?39,"EFT#",?50,"#DAYS:(BILL/ERA)",?67,"#DAYS:(ERA/EFT)",?83,"#DAYS:(ERA+EFT/POSTED)",?106,"TOTAL #DAYS(BILL/POSTED)",!
"RTN","RCDPENR2",526,0)
 . W RCLINE,!
"RTN","RCDPENR2",527,0)
 Q
"RTN","RCDPENR2",528,0)
 ;
"RTN","RCDPENR2",529,0)
 ;Entry point for reprinting the header.
"RTN","RCDPENR2",530,0)
REPRINT(RCIEN) ;
"RTN","RCDPENR2",531,0)
 ;
"RTN","RCDPENR2",532,0)
 N I,RCDATA,J,RCSTOP,PAGE
"RTN","RCDPENR2",533,0)
 ;
"RTN","RCDPENR2",534,0)
 ;
"RTN","RCDPENR2",535,0)
 S PAGE=1
"RTN","RCDPENR2",536,0)
 D RPTHDR(RCIEN,PAGE)
"RTN","RCDPENR2",537,0)
 ;
"RTN","RCDPENR2",538,0)
 S I=4,RCSTOP=0  ;loop through the main body
"RTN","RCDPENR2",539,0)
 F  S I=$O(^RCDM(344.91,RCIEN,1,I)) Q:'I  D  Q:RCSTOP
"RTN","RCDPENR2",540,0)
 .  S RCDATA=$G(^RCDM(344.91,RCIEN,1,I,0))
"RTN","RCDPENR2",541,0)
 .  ;
"RTN","RCDPENR2",542,0)
 .  I $Y>(IOSL-4) D  Q:RCSTOP
"RTN","RCDPENR2",543,0)
 .  . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",544,0)
 .  . Q:RCSTOP
"RTN","RCDPENR2",545,0)
 .  . S PAGE=PAGE+1
"RTN","RCDPENR2",546,0)
 .  . D RPTHDR(RCIEN,PAGE)
"RTN","RCDPENR2",547,0)
 .  ; main body of report
"RTN","RCDPENR2",548,0)
 .  W $P(RCDATA,U)
"RTN","RCDPENR2",549,0)
 .  I RCDATA["^" W ?65,$P(RCDATA,U,2)
"RTN","RCDPENR2",550,0)
 .  W !      ;Add <CRLF>
"RTN","RCDPENR2",551,0)
 Q
"RTN","RCDPENR2",552,0)
 ;
"RTN","RCDPENR2",553,0)
RPTHDR(RCIEN,PAGE) ; Reprint the header
"RTN","RCDPENR2",554,0)
 ;
"RTN","RCDPENR2",555,0)
 N I,RCDATA
"RTN","RCDPENR2",556,0)
 ;
"RTN","RCDPENR2",557,0)
 W @IOF   ; Create new page
"RTN","RCDPENR2",558,0)
 ;
"RTN","RCDPENR2",559,0)
 F I=1:1:4 D
"RTN","RCDPENR2",560,0)
 . S RCDATA=$G(^RCDM(344.91,RCIEN,1,I,0))
"RTN","RCDPENR2",561,0)
 . ; header lines formatting
"RTN","RCDPENR2",562,0)
 . I I=1 W ?15,$P(RCDATA,U),?70,PAGE,! Q
"RTN","RCDPENR2",563,0)
 . I I=2 W ?5,$P(RCDATA,U,2),! Q
"RTN","RCDPENR2",564,0)
 . I I=3!(I=4) W ?5,$P(RCDATA,U,2),?45,$P(RCDATA,U,3),! Q
"RTN","RCDPENR2",565,0)
 Q
"RTN","RCDPENR3")
0^65^B205654805
"RTN","RCDPENR3",1,0)
RCDPENR3 ;ALB/SAB - EPay National Reports - ERA/EFT Trending Report, part 2 ;06/30/15
"RTN","RCDPENR3",2,0)
 ;;4.5;Accounts Receivable;**304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPENR3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR3",4,0)
 ;
"RTN","RCDPENR3",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR3",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR3",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR3",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR3",9,0)
 ;
"RTN","RCDPENR3",10,0)
 Q
"RTN","RCDPENR3",11,0)
 ;
"RTN","RCDPENR3",12,0)
 ;
"RTN","RCDPENR3",13,0)
 ;Generate the needed statistics for the report
"RTN","RCDPENR3",14,0)
COMPILE ;
"RTN","RCDPENR3",15,0)
 ;
"RTN","RCDPENR3",16,0)
 ;RCERATYP values 1="ERA/EFT"  2="ERA/PAPER CHECK"  3="PAPER EOB/EFT"
"RTN","RCDPENR3",17,0)
 ;     needed for the correct report sort order
"RTN","RCDPENR3",18,0)
 N I,RCINSTIN,RCERATYP,RCCLAIM,RCDATA,RCDAYS,RCEFTPD,RCEPDT,RCERAIEN,RCERANUM,RCEFTIEN  ; Looping variable
"RTN","RCDPENR3",19,0)
 N RCGPDATA,RCGPCT,RCGPBILL,RCGPPD,RCGPBECT,RCGPBEDY,RCGPEECT,RCGPEEDY,RCGPEPCT,RCGPEPDY,RCGPBPCT,RCGPBPDY,RCGPECT,RCGPENM,RCGPFCT,RCGPFPD  ; Grand Total W/Payment method variables 
"RTN","RCDPENR3",20,0)
 N RCPPDATA,RCPPCT,RCPPBILL,RCPPPD,RCPPBECT,RCPPBEDY,RCPPEECT,RCPPEEDY,RCPPEPCT,RCPPEPDY,RCPPBPCT,RCPPBPDY,RCPPECT,RCPPENM,RCPPFCT,RCPPFPD  ; Payer W/Payment method variables 
"RTN","RCDPENR3",21,0)
 ;
"RTN","RCDPENR3",22,0)
 ;Initialize all valid ERA/EFT combinations to report on.
"RTN","RCDPENR3",23,0)
 ; init grand total
"RTN","RCDPENR3",24,0)
 F I=1:1:3 I '$D(^TMP("RCDPENR2",$J,"GTOT",I)) S ^TMP("RCDPENR2",$J,"GTOT",I)=0
"RTN","RCDPENR3",25,0)
 ;
"RTN","RCDPENR3",26,0)
 ; init insurance grand totals
"RTN","RCDPENR3",27,0)
 S RCINSTIN=""
"RTN","RCDPENR3",28,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN)) Q:RCINSTIN=""  D
"RTN","RCDPENR3",29,0)
 . F I=1:1:3 I '$D(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I)) S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I)=0
"RTN","RCDPENR3",30,0)
 ;
"RTN","RCDPENR3",31,0)
 ; Compile results
"RTN","RCDPENR3",32,0)
 S RCINSTIN=""
"RTN","RCDPENR3",33,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN)) Q:RCINSTIN=""  D
"RTN","RCDPENR3",34,0)
 . S RCERATYP=""
"RTN","RCDPENR3",35,0)
 . F  S RCERATYP=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP)) Q:RCERATYP=""  D
"RTN","RCDPENR3",36,0)
 . . S RCCLAIM=""
"RTN","RCDPENR3",37,0)
 . . F  S RCCLAIM=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP,RCCLAIM)) Q:RCCLAIM=""  D
"RTN","RCDPENR3",38,0)
 . . . S RCDATA=$G(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP,RCCLAIM))
"RTN","RCDPENR3",39,0)
 . . . Q:RCDATA=""
"RTN","RCDPENR3",40,0)
 . . . ;
"RTN","RCDPENR3",41,0)
 . . . ; Extract the Grand Total by EFT/ERA type
"RTN","RCDPENR3",42,0)
 . . . S RCGPDATA=$G(^TMP("RCDPENR2",$J,"GTOT",RCERATYP))
"RTN","RCDPENR3",43,0)
 . . . S RCGPCT=$P(RCGPDATA,U)
"RTN","RCDPENR3",44,0)
 . . . S RCGPBILL=$P(RCGPDATA,U,2)
"RTN","RCDPENR3",45,0)
 . . . S RCGPPD=$P(RCGPDATA,U,3)
"RTN","RCDPENR3",46,0)
 . . . S RCGPBECT=$P(RCGPDATA,U,4)
"RTN","RCDPENR3",47,0)
 . . . S RCGPBEDY=$P(RCGPDATA,U,5)
"RTN","RCDPENR3",48,0)
 . . . S RCGPEECT=$P(RCGPDATA,U,6)
"RTN","RCDPENR3",49,0)
 . . . S RCGPEEDY=$P(RCGPDATA,U,7)
"RTN","RCDPENR3",50,0)
 . . . S RCGPEPCT=$P(RCGPDATA,U,8)
"RTN","RCDPENR3",51,0)
 . . . S RCGPEPDY=$P(RCGPDATA,U,9)
"RTN","RCDPENR3",52,0)
 . . . S RCGPBPCT=$P(RCGPDATA,U,10)
"RTN","RCDPENR3",53,0)
 . . . S RCGPBPDY=$P(RCGPDATA,U,11)
"RTN","RCDPENR3",54,0)
 . . . S RCGPECT=$P(RCGPDATA,U,12)
"RTN","RCDPENR3",55,0)
 . . . S RCGPENM=$P(RCGPDATA,U,13)
"RTN","RCDPENR3",56,0)
 . . . S RCGPFCT=$P(RCGPDATA,U,14)
"RTN","RCDPENR3",57,0)
 . . . S RCGPFPD=$P(RCGPDATA,U,15)
"RTN","RCDPENR3",58,0)
 . . . ;
"RTN","RCDPENR3",59,0)
 . . . ; Extract the Payer specific information by EFT/ERA type
"RTN","RCDPENR3",60,0)
 . . . S RCPPDATA=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,RCERATYP))
"RTN","RCDPENR3",61,0)
 . . . S RCPPCT=$P(RCPPDATA,U)
"RTN","RCDPENR3",62,0)
 . . . S RCPPBILL=$P(RCPPDATA,U,2)
"RTN","RCDPENR3",63,0)
 . . . S RCPPPD=$P(RCPPDATA,U,3)
"RTN","RCDPENR3",64,0)
 . . . S RCPPBECT=$P(RCPPDATA,U,4)
"RTN","RCDPENR3",65,0)
 . . . S RCPPBEDY=$P(RCPPDATA,U,5)
"RTN","RCDPENR3",66,0)
 . . . S RCPPEECT=$P(RCPPDATA,U,6)
"RTN","RCDPENR3",67,0)
 . . . S RCPPEEDY=$P(RCPPDATA,U,7)
"RTN","RCDPENR3",68,0)
 . . . S RCPPEPCT=$P(RCPPDATA,U,8)
"RTN","RCDPENR3",69,0)
 . . . S RCPPEPDY=$P(RCPPDATA,U,9)
"RTN","RCDPENR3",70,0)
 . . . S RCPPBPCT=$P(RCPPDATA,U,10)
"RTN","RCDPENR3",71,0)
 . . . S RCPPBPDY=$P(RCPPDATA,U,11)
"RTN","RCDPENR3",72,0)
 . . . S RCPPECT=$P(RCPPDATA,U,12)
"RTN","RCDPENR3",73,0)
 . . . S RCPPENM=$P(RCPPDATA,U,13)
"RTN","RCDPENR3",74,0)
 . . . S RCPPFCT=$P(RCPPDATA,U,14)
"RTN","RCDPENR3",75,0)
 . . . S RCPPFPD=$P(RCPPDATA,U,15)
"RTN","RCDPENR3",76,0)
 . . . ;
"RTN","RCDPENR3",77,0)
 . . . ; Total counts - Grand/Payment Method
"RTN","RCDPENR3",78,0)
 . . . S RCGPCT=RCGPCT+1
"RTN","RCDPENR3",79,0)
 . . . S RCGPBILL=RCGPBILL+$P(RCDATA,U,6)
"RTN","RCDPENR3",80,0)
 . . . S RCGPPD=RCGPPD+$P(RCDATA,U,7)
"RTN","RCDPENR3",81,0)
 . . . ;
"RTN","RCDPENR3",82,0)
 . . . ; Total counts - Payer/Payment method
"RTN","RCDPENR3",83,0)
 . . . S RCPPCT=RCPPCT+1
"RTN","RCDPENR3",84,0)
 . . . S RCPPBILL=RCPPBILL+$P(RCDATA,U,6)
"RTN","RCDPENR3",85,0)
 . . . S RCPPPD=RCPPPD+$P(RCDATA,U,7)
"RTN","RCDPENR3",86,0)
 . . . ;
"RTN","RCDPENR3",87,0)
 . . . ; Billed to ERA received
"RTN","RCDPENR3",88,0)
 . . . I $P(RCDATA,U,8),$P(RCDATA,U,9) D
"RTN","RCDPENR3",89,0)
 . . . . S RCGPBECT=RCGPBECT+1
"RTN","RCDPENR3",90,0)
 . . . . S RCPPBECT=RCPPBECT+1
"RTN","RCDPENR3",91,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,9),$P(RCDATA,U,8),1)
"RTN","RCDPENR3",92,0)
 . . . . S RCGPBEDY=RCGPBEDY+RCDAYS
"RTN","RCDPENR3",93,0)
 . . . . S RCPPBEDY=RCPPBEDY+RCDAYS
"RTN","RCDPENR3",94,0)
 . . . ;
"RTN","RCDPENR3",95,0)
 . . . ; ERA to EFT received
"RTN","RCDPENR3",96,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9) D
"RTN","RCDPENR3",97,0)
 . . . . S RCGPEECT=RCGPEECT+1
"RTN","RCDPENR3",98,0)
 . . . . S RCPPEECT=RCPPEECT+1
"RTN","RCDPENR3",99,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,10),$P(RCDATA,U,9),1)
"RTN","RCDPENR3",100,0)
 . . . . S RCGPEEDY=RCGPEEDY+RCDAYS
"RTN","RCDPENR3",101,0)
 . . . . S RCPPEEDY=RCPPEEDY+RCDAYS
"RTN","RCDPENR3",102,0)
 . . . ;
"RTN","RCDPENR3",103,0)
 . . . ; ERA and EFT received, and payment Posted
"RTN","RCDPENR3",104,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9),$P(RCDATA,U,11) D
"RTN","RCDPENR3",105,0)
 . . . . S RCGPEPCT=RCGPEPCT+1
"RTN","RCDPENR3",106,0)
 . . . . S RCPPEPCT=RCPPEPCT+1
"RTN","RCDPENR3",107,0)
 . . . . S RCEPDT=$S($P(RCDATA,U,9)>$P(RCDATA,U,10):9,1:10)  ;determine which date is later
"RTN","RCDPENR3",108,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,11),$P(RCDATA,U,RCEPDT),1)
"RTN","RCDPENR3",109,0)
 . . . . S RCGPEPDY=RCGPEPDY+RCDAYS
"RTN","RCDPENR3",110,0)
 . . . . S RCPPEPDY=RCPPEPDY+RCDAYS
"RTN","RCDPENR3",111,0)
 . . . ;
"RTN","RCDPENR3",112,0)
 . . . ; Bill to Payment Posted
"RTN","RCDPENR3",113,0)
 . . . I $P(RCDATA,U,8),$P(RCDATA,U,11) D
"RTN","RCDPENR3",114,0)
 . . . . S RCGPBPCT=RCGPBPCT+1
"RTN","RCDPENR3",115,0)
 . . . . S RCPPBPCT=RCPPBPCT+1
"RTN","RCDPENR3",116,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,11),$P(RCDATA,U,8),1)
"RTN","RCDPENR3",117,0)
 . . . . S RCGPBPDY=RCGPBPDY+RCDAYS
"RTN","RCDPENR3",118,0)
 . . . . S RCPPBPDY=RCPPBPDY+RCDAYS
"RTN","RCDPENR3",119,0)
 . . . ;
"RTN","RCDPENR3",120,0)
 . . . ; If the ERA hasn't already been counted, add it to the totals
"RTN","RCDPENR3",121,0)
 . . . S RCERAIEN=$P(RCDATA,U,2)
"RTN","RCDPENR3",122,0)
 . . . I RCERAIEN,'$D(^TMP("RCDPENR2",$J,"ERA",RCERAIEN)) D
"RTN","RCDPENR3",123,0)
 . . . . S ^TMP("RCDPENR2",$J,"ERA",RCERAIEN)=""
"RTN","RCDPENR3",124,0)
 . . . . S RCERANUM=$P(RCDATA,U,15)
"RTN","RCDPENR3",125,0)
 . . . . S RCGPECT=RCGPECT+1,RCPPECT=RCPPECT+1
"RTN","RCDPENR3",126,0)
 . . . . S RCGPENM=RCGPENM+RCERANUM,RCPPENM=RCPPENM+RCERANUM
"RTN","RCDPENR3",127,0)
 . . . ;
"RTN","RCDPENR3",128,0)
 . . . ; If the EFT hasn't already been counted, add it to the totals
"RTN","RCDPENR3",129,0)
 . . . S RCEFTIEN=$P(RCDATA,U,3)
"RTN","RCDPENR3",130,0)
 . . . I (RCEFTIEN),('$D(^TMP("RCDPENR2",$J,"EFT",RCEFTIEN))) D
"RTN","RCDPENR3",131,0)
 . . . . S ^TMP("RCDPENR2",$J,"EFT",RCEFTIEN)=""
"RTN","RCDPENR3",132,0)
 . . . . S RCEFTPD=$P(RCDATA,U,18)
"RTN","RCDPENR3",133,0)
 . . . . S RCGPFCT=RCGPFCT+1,RCPPFCT=RCPPFCT+1
"RTN","RCDPENR3",134,0)
 . . . . S RCGPFPD=RCGPFPD+RCEFTPD,RCPPFPD=RCPPFPD+RCEFTPD
"RTN","RCDPENR3",135,0)
 . . . ;
"RTN","RCDPENR3",136,0)
 . . . ; Update the payer specific information By Payment Method
"RTN","RCDPENR3",137,0)
 . . . S $P(RCPPDATA,U)=RCPPCT
"RTN","RCDPENR3",138,0)
 . . . S $P(RCPPDATA,U,2)=RCPPBILL
"RTN","RCDPENR3",139,0)
 . . . S $P(RCPPDATA,U,3)=RCPPPD
"RTN","RCDPENR3",140,0)
 . . . S $P(RCPPDATA,U,4)=RCPPBECT
"RTN","RCDPENR3",141,0)
 . . . S $P(RCPPDATA,U,5)=RCPPBEDY
"RTN","RCDPENR3",142,0)
 . . . S $P(RCPPDATA,U,6)=RCPPEECT
"RTN","RCDPENR3",143,0)
 . . . S $P(RCPPDATA,U,7)=RCPPEEDY
"RTN","RCDPENR3",144,0)
 . . . S $P(RCPPDATA,U,8)=RCPPEPCT
"RTN","RCDPENR3",145,0)
 . . . S $P(RCPPDATA,U,9)=RCPPEPDY
"RTN","RCDPENR3",146,0)
 . . . S $P(RCPPDATA,U,10)=RCPPBPCT
"RTN","RCDPENR3",147,0)
 . . . S $P(RCPPDATA,U,11)=RCPPBPDY
"RTN","RCDPENR3",148,0)
 . . . S $P(RCPPDATA,U,12)=RCPPECT
"RTN","RCDPENR3",149,0)
 . . . S $P(RCPPDATA,U,13)=RCPPENM
"RTN","RCDPENR3",150,0)
 . . . S $P(RCPPDATA,U,14)=RCPPFCT
"RTN","RCDPENR3",151,0)
 . . . S $P(RCPPDATA,U,15)=RCPPFPD
"RTN","RCDPENR3",152,0)
 . . . S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,RCERATYP)=RCPPDATA
"RTN","RCDPENR3",153,0)
 . . . ;
"RTN","RCDPENR3",154,0)
 . . . ; Update the Grand Total specific information By Payment Method
"RTN","RCDPENR3",155,0)
 . . . S $P(RCGPDATA,U)=RCGPCT
"RTN","RCDPENR3",156,0)
 . . . S $P(RCGPDATA,U,2)=RCGPBILL
"RTN","RCDPENR3",157,0)
 . . . S $P(RCGPDATA,U,3)=RCGPPD
"RTN","RCDPENR3",158,0)
 . . . S $P(RCGPDATA,U,4)=RCGPBECT
"RTN","RCDPENR3",159,0)
 . . . S $P(RCGPDATA,U,5)=RCGPBEDY
"RTN","RCDPENR3",160,0)
 . . . S $P(RCGPDATA,U,6)=RCGPEECT
"RTN","RCDPENR3",161,0)
 . . . S $P(RCGPDATA,U,7)=RCGPEEDY
"RTN","RCDPENR3",162,0)
 . . . S $P(RCGPDATA,U,8)=RCGPEPCT
"RTN","RCDPENR3",163,0)
 . . . S $P(RCGPDATA,U,9)=RCGPEPDY
"RTN","RCDPENR3",164,0)
 . . . S $P(RCGPDATA,U,10)=RCGPBPCT
"RTN","RCDPENR3",165,0)
 . . . S $P(RCGPDATA,U,11)=RCGPBPDY
"RTN","RCDPENR3",166,0)
 . . . S $P(RCGPDATA,U,12)=RCGPECT
"RTN","RCDPENR3",167,0)
 . . . S $P(RCGPDATA,U,13)=RCGPENM
"RTN","RCDPENR3",168,0)
 . . . S $P(RCGPDATA,U,14)=RCGPFCT
"RTN","RCDPENR3",169,0)
 . . . S $P(RCGPDATA,U,15)=RCGPFPD
"RTN","RCDPENR3",170,0)
 . . . S ^TMP("RCDPENR2",$J,"GTOT",RCERATYP)=RCGPDATA
"RTN","RCDPENR3",171,0)
 Q
"RTN","RCDPENR3",172,0)
 ;
"RTN","RCDPENR3",173,0)
 ;Retrieve all necessary information for the EFTs sent during the requested period.
"RTN","RCDPENR3",174,0)
GETEFT(RCSDATE,RCEDATE,RCRATE) ;
"RTN","RCDPENR3",175,0)
 ;RCSDATE - Start date of extraction
"RTN","RCDPENR3",176,0)
 ;RCEDATE - End date of extraction
"RTN","RCDPENR3",177,0)
 ;
"RTN","RCDPENR3",178,0)
 ;^TMP("RCDPENR2",$J,"MAIN",IEN of Claim/Bill #) =
"RTN","RCDPENR3",179,0)
 ; Where:
"RTN","RCDPENR3",180,0)
 ; Piece  Variable
"RTN","RCDPENR3",181,0)
 ; 1      RCBILL   - IEN of Bill/Claim #
"RTN","RCDPENR3",182,0)
 ; 2      RCERA    - IEN of the ERA the bill was paid on.
"RTN","RCDPENR3",183,0)
 ; 3      RCIEN    - IEN of the EFT the money for the bill arrived on
"RTN","RCDPENR3",184,0)
 ; 4      RCEOB    - IEN of the EOB within the ERA 
"RTN","RCDPENR3",185,0)
 ; 5      RCDOS    - Date of Service
"RTN","RCDPENR3",186,0)
 ; 6      RCAMTBL  - Amount Billed
"RTN","RCDPENR3",187,0)
 ; 7      RCAMTPD  - Amount Paid
"RTN","RCDPENR3",188,0)
 ; 8      RCDTBILL - Date of Bill
"RTN","RCDPENR3",189,0)
 ; 9      RCERARCD - Date ERA received
"RTN","RCDPENR3",190,0)
 ; 10     RCEFTRCD - Date EFT received
"RTN","RCDPENR3",191,0)
 ; 11     RCPOSTED - Date Payment Posted to claim
"RTN","RCDPENR3",192,0)
 ; 12     RCTRACE  - ERA Trace number for EOB
"RTN","RCDPENR3",193,0)
 ; 13     RCMETHOD - Method of Payment transmittal
"RTN","RCDPENR3",194,0)
 ; 14     RCTRNTYP - Was payment EFT or Paper Check / Was the ERA Paper or EDI Lockbox
"RTN","RCDPENR3",195,0)
 ; 15     RCERANUM - # EOB'S in ERA
"RTN","RCDPENR3",196,0)
 ; 16     RCDIV    - Division of the bill
"RTN","RCDPENR3",197,0)
 ; 17     RCINSTIN - Insurance/Insurance TIN
"RTN","RCDPENR3",198,0)
 ; 18     RCEFTPD  - Amount paid as an EFT, not as a check.
"RTN","RCDPENR3",199,0)
 ;
"RTN","RCDPENR3",200,0)
 N OKAY,RCLDATE,RCINS,RCIEN,RCEFTDT,RCERA,RCEFT,RCRCPT,RCPOSTED,RCPAYTYP,RCERADT,RCTRACE,RCERAIDX
"RTN","RCDPENR3",201,0)
 N RCTRLN,RCTRBD,RCERANUM,RCTIN,RCPAYER,RCINSTIN,RCLPIEN,RCDTDATA,RCEOB,RCBILL,RCDIV,RCDOS,RCAMTBL
"RTN","RCDPENR3",202,0)
 N RCDTBILL,RCMETHOD,RCPAPER,RCEFTTYP,RCEFTPD,RCTRNTYP,RCDATA,RCAMTPD,RCEFTRCD,RCERARCD,RCRATETP
"RTN","RCDPENR3",203,0)
 N RCMSTAT,RCESUMDT,RCPSUMDT,ZZPNAME
"RTN","RCDPENR3",204,0)
 ;
"RTN","RCDPENR3",205,0)
 ;Get the EFT Detail information for the report batches sent within the given date range.
"RTN","RCDPENR3",206,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR3",207,0)
 F  S RCLDATE=$O(^RCY(344.31,"ADR",RCLDATE)) Q:RCLDATE=""  Q:RCLDATE>RCEDATE  D
"RTN","RCDPENR3",208,0)
 . S RCIEN=0
"RTN","RCDPENR3",209,0)
 . F  S RCIEN=$O(^RCY(344.31,"ADR",RCLDATE,RCIEN)) Q:'RCIEN  D
"RTN","RCDPENR3",210,0)
 . . S RCEFTDT=$G(^RCY(344.31,RCIEN,0))
"RTN","RCDPENR3",211,0)
 . . Q:RCEFTDT=""
"RTN","RCDPENR3",212,0)
 . . I RCPAY="A",RCTYPE'="A" D  Q:'OKAY  ; PRCA*4.5*326 If all payers included, check by type
"RTN","RCDPENR3",213,0)
 . . . S OKAY=$$ISTYPE^RCDPEU1(344.31,RCIEN,RCTYPE)
"RTN","RCDPENR3",214,0)
 . . ; Check Payer Name
"RTN","RCDPENR3",215,0)
 . . I RCPAY'="A" D  Q:'OKAY               ; PRCA*4.5*326 
"RTN","RCDPENR3",216,0)
 . . . S OKAY=$$ISSEL^RCDPEU1(344.31,RCIEN)
"RTN","RCDPENR3",217,0)
 . . ;
"RTN","RCDPENR3",218,0)
 . . S RCERA=$P(RCEFTDT,U,10)            ; ERA IEN
"RTN","RCDPENR3",219,0)
 . . S RCEFTRCD=$P(RCEFTDT,U,13)
"RTN","RCDPENR3",220,0)
 . . S RCEFT=$P(RCEFTDT,U)
"RTN","RCDPENR3",221,0)
 . . S ZZPNAME=$P(RCEFTDT,U,2)
"RTN","RCDPENR3",222,0)
 . . S RCMSTAT=$P(RCEFTDT,U,8)
"RTN","RCDPENR3",223,0)
 . . S RCRCPT=$P(RCEFTDT,U,9)
"RTN","RCDPENR3",224,0)
 . . S RCEFTPD=$P(RCEFTDT,U,7)
"RTN","RCDPENR3",225,0)
 . . S RCPOSTED=$$GET1^DIQ(344.3,RCEFT_",",.11,"I")
"RTN","RCDPENR3",226,0)
 . . S RCPAYTYP=$$GET1^DIQ(344,RCRCPT_",",.04,"I")
"RTN","RCDPENR3",227,0)
 . . I RCERA D  Q
"RTN","RCDPENR3",228,0)
 . . . S RCERADT=$G(^RCY(344.4,RCERA,0)) ; ERA Data extracted
"RTN","RCDPENR3",229,0)
 . . . Q:'RCERADT
"RTN","RCDPENR3",230,0)
 . . . S RCTRACE=$P(RCERADT,U,2)         ; Trace #
"RTN","RCDPENR3",231,0)
 . . . S RCTRLN=$L(RCTRACE),RCTRBD=$S(RCTRLN<11:1,1:RCTRLN-9)
"RTN","RCDPENR3",232,0)
 . . . S RCTRACE=$E(RCTRACE,RCTRBD,RCTRLN)  ; get the last 10 digits of Trace #
"RTN","RCDPENR3",233,0)
 . . . S RCERARCD=$P($P(RCERADT,U,7),".",1)  ;get the date of the ERA
"RTN","RCDPENR3",234,0)
 . . . S RCERANUM=$P(RCERADT,U,11)
"RTN","RCDPENR3",235,0)
 . . . S RCTIN=$P(RCERADT,U,3)
"RTN","RCDPENR3",236,0)
 . . . S RCINS=$P(RCERADT,U,6)
"RTN","RCDPENR3",237,0)
 . . . S RCPAYER=$$GETARPYR^RCDPENR2(RCTIN,ZZPNAME) ; find the AR Payer IEN
"RTN","RCDPENR3",238,0)
 . . . ; Q:'RCPAYER                  ; Quit if Payer/TIN not found
"RTN","RCDPENR3",239,0)
 . . . ; Q:'$$INSCHK^RCDPENR2(RCPAYER)    ; Payer is not in the included list for the report
"RTN","RCDPENR3",240,0)
 . . . S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR3",241,0)
 . . . S RCLPIEN=0
"RTN","RCDPENR3",242,0)
 . . . F  S RCLPIEN=$O(^RCY(344.4,RCERA,1,RCLPIEN)) Q:'RCLPIEN  D
"RTN","RCDPENR3",243,0)
 . . . . S RCDTDATA=$G(^RCY(344.4,RCERA,1,RCLPIEN,0))
"RTN","RCDPENR3",244,0)
 . . . . S RCEOB=$P(RCDTDATA,U,2)
"RTN","RCDPENR3",245,0)
 . . . . S RCBILL=$$BILLIEN^RCDPENR1(RCEOB)
"RTN","RCDPENR3",246,0)
 . . . . Q:RCBILL=""   ; no billing information
"RTN","RCDPENR3",247,0)
 . . . . Q:$D(^TMP("RCDPENR2",$J,"MAIN",RCBILL))  ;already captured.
"RTN","RCDPENR3",248,0)
 . . . . S RCDIV=$$DIV^IBJDF2(RCBILL)
"RTN","RCDPENR3",249,0)
 . . . . S RCDIV=$$GET1^DIQ(40.8,RCDIV_",",".01","E")
"RTN","RCDPENR3",250,0)
 . . . . ;
"RTN","RCDPENR3",251,0)
 . . . . S RCRATETP=$$GET1^DIQ(399,RCBILL_",",.07,"I")
"RTN","RCDPENR3",252,0)
 . . . . Q:RCRATETP'=RCRATE
"RTN","RCDPENR3",253,0)
 . . . . ; Quit if user specified a specific division and bill is not in that Division
"RTN","RCDPENR3",254,0)
 . . . . I '$D(^TMP("RCDPENR2",$J,"DIVALL"))&'$D(^TMP("RCDPENR2",$J,"DIV",RCDIV)) Q 
"RTN","RCDPENR3",255,0)
 . . . . S RCDOS=$$GET1^DIQ(399,RCBILL_",",.03,"I")
"RTN","RCDPENR3",256,0)
 . . . . S RCAMTBL=$$GET1^DIQ(361.1,RCEOB_",",2.04,"I")
"RTN","RCDPENR3",257,0)
 . . . . S RCAMTPD=$$GET1^DIQ(361.1,RCEOB_",",1.01,"I")
"RTN","RCDPENR3",258,0)
 . . . . S RCDTBILL=$$GET1^DIQ(399,RCBILL_",",12,"I")
"RTN","RCDPENR3",259,0)
 . . . . Q:RCDTBILL=""   ;cant calculate if date first printed is NULL
"RTN","RCDPENR3",260,0)
 . . . . ;
"RTN","RCDPENR3",261,0)
 . . . . S RCMETHOD=$S($$GET1^DIQ(344,RCERA_",",4.02,"I")="":"MANUAL",1:"AUTOPOST")
"RTN","RCDPENR3",262,0)
 . . . . S RCPAPER=$P($G(^RCY(344.4,RCERA,20)),U,3)  ; Paper EOB ERA?
"RTN","RCDPENR3",263,0)
 . . . . ;ERA not a paper ERA, is the EOB a Paper EOB
"RTN","RCDPENR3",264,0)
 . . . . S:'RCPAPER RCPAPER=$S($$GET1^DIQ(361.1,RCEOB_",",.17,"I")=0:"ERA",1:"PAPER")
"RTN","RCDPENR3",265,0)
 . . . . S RCEFTTYP=$S(RCPAYTYP=4:"PAPER",1:"EFT")
"RTN","RCDPENR3",266,0)
 . . . . S RCTRNTYP=RCPAPER_"/"_RCEFTTYP
"RTN","RCDPENR3",267,0)
 . . . . S RCERAIDX=$S(RCTRNTYP="ERA/EFT":1,RCTRNTYP="ERA/PAPER":2,RCTRNTYP="PAPER/EFT":3,1:4)
"RTN","RCDPENR3",268,0)
 . . . . Q:RCERAIDX=4   ;Paper Check Paper EOB not supported
"RTN","RCDPENR3",269,0)
 . . . . S RCDATA=RCBILL_U_RCERA_U_RCIEN_U_RCEOB_U_RCDOS_U_RCAMTBL_U_RCAMTPD_U_RCDTBILL_U_RCERARCD
"RTN","RCDPENR3",270,0)
 . . . . S RCDATA=RCDATA_U_RCEFTRCD_U_RCPOSTED_U_RCTRACE_U_RCMETHOD_U
"RTN","RCDPENR3",271,0)
 . . . . S RCDATA=RCDATA_RCTRNTYP_U_RCERANUM_U_RCDIV_U_RCINSTIN_U_RCEFTPD
"RTN","RCDPENR3",272,0)
 . . . . S ^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERAIDX,RCBILL)=RCDATA
"RTN","RCDPENR3",273,0)
 . . I (RCMSTAT=2),(RCIEN),('$D(^TMP("RCDPENR2",$J,"EFT",RCIEN))) D
"RTN","RCDPENR3",274,0)
 . . . S RCTIN=$P(RCEFTDT,U,3)
"RTN","RCDPENR3",275,0)
 . . . S RCINS=$P(RCEFTDT,U,2)
"RTN","RCDPENR3",276,0)
 . . . S RCPAYER=$$GETARPYR^RCDPENR2(RCTIN,ZZPNAME) ; find the AR Payer IEN
"RTN","RCDPENR3",277,0)
 . . . ; Q:'RCPAYER                  ; Quit if Payer/TIN not found
"RTN","RCDPENR3",278,0)
 . . . ; Q:'$$INSCHK^RCDPENR2(RCPAYER)    ; Payer is not in the included list for the report
"RTN","RCDPENR3",279,0)
 . . . S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR3",280,0)
 . . . S RCESUMDT=$G(^TMP("RCDPENR2",$J,"GTOT",3))
"RTN","RCDPENR3",281,0)
 . . . S RCPSUMDT=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,3))
"RTN","RCDPENR3",282,0)
 . . . S $P(RCESUMDT,U,14)=$P(RCESUMDT,U,14)+1
"RTN","RCDPENR3",283,0)
 . . . S $P(RCPSUMDT,U,14)=$P(RCPSUMDT,U,14)+1
"RTN","RCDPENR3",284,0)
 . . . S $P(RCESUMDT,U,15)=$P(RCESUMDT,U,15)+RCEFTPD
"RTN","RCDPENR3",285,0)
 . . . S $P(RCPSUMDT,U,15)=$P(RCPSUMDT,U,15)+RCEFTPD
"RTN","RCDPENR3",286,0)
 . . . S ^TMP("RCDPENR2",$J,"GTOT",3)=RCESUMDT
"RTN","RCDPENR3",287,0)
 . . . S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,3)=RCPSUMDT
"RTN","RCDPENR3",288,0)
 Q
"RTN","RCDPENR3",289,0)
 ;
"RTN","RCDPENR3",290,0)
 ;Print the Grand Total/Summary data for the EFT/ERA Trending Report
"RTN","RCDPENR3",291,0)
PRINTGT(RCTITLE,RCDATA,RCDISP,RCERAFLG,RCEXCEL) ;
"RTN","RCDPENR3",292,0)
 ;
"RTN","RCDPENR3",293,0)
 ; Undeclared Parameter(s) - RCRPIEN,RCLINE,RCSTOP
"RTN","RCDPENR3",294,0)
 ;
"RTN","RCDPENR3",295,0)
 N RCCOUNT,RCBILL,RCPAID,RCPCT,RCBECT,RCBEDY,RCAVGBE,RCEECT,RCEEDY
"RTN","RCDPENR3",296,0)
 N RCEPCT,RCEPDY,RCAVGEP,RCBPCT,RCBPDY,RCAVGBP,RCBORDER,RCSCDATA
"RTN","RCDPENR3",297,0)
 N RCC,RCB,RCAVGEE,RCLTXT,I,RCSTRDTA,RCSTRNG,RCDTXT
"RTN","RCDPENR3",298,0)
 ;
"RTN","RCDPENR3",299,0)
 S RCERAFLG=+$G(RCERAFLG),RCDISP=$G(RCDISP)
"RTN","RCDPENR3",300,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER^RCDPENR2
"RTN","RCDPENR3",301,0)
 ;
"RTN","RCDPENR3",302,0)
 ; Display report type being displayed
"RTN","RCDPENR3",303,0)
 D PRINTHDR^RCDPENR2(RCTITLE)
"RTN","RCDPENR3",304,0)
 ;
"RTN","RCDPENR3",305,0)
 ; Extract data from string and build string for output
"RTN","RCDPENR3",306,0)
 S $P(RCSCDATA,U,1)=+$P(RCDATA,U)
"RTN","RCDPENR3",307,0)
 S RCBILL=+$P(RCDATA,U,2)
"RTN","RCDPENR3",308,0)
 S RCPAID=+$P(RCDATA,U,3)
"RTN","RCDPENR3",309,0)
 S $P(RCSCDATA,U,2)=RCBILL
"RTN","RCDPENR3",310,0)
 S $P(RCSCDATA,U,3)=RCPAID
"RTN","RCDPENR3",311,0)
 S $P(RCSCDATA,U,4)=$S(+RCBILL=0:0,1:RCPAID/RCBILL)*100  ; Convert to percent format
"RTN","RCDPENR3",312,0)
 S RCBECT=+$P(RCDATA,U,4)
"RTN","RCDPENR3",313,0)
 S RCBEDY=+$P(RCDATA,U,5)
"RTN","RCDPENR3",314,0)
 S $P(RCSCDATA,U,6)=$FN($S(+RCBECT=0:0,1:RCBEDY/RCBECT),"",0)
"RTN","RCDPENR3",315,0)
 S RCEECT=+$P(RCDATA,U,6)
"RTN","RCDPENR3",316,0)
 S RCEEDY=+$P(RCDATA,U,7)
"RTN","RCDPENR3",317,0)
 S $P(RCSCDATA,U,7)=$FN($S(+RCEECT=0:0,1:RCEEDY/RCEECT),"",0)
"RTN","RCDPENR3",318,0)
 S RCEPCT=+$P(RCDATA,U,8)
"RTN","RCDPENR3",319,0)
 S RCEPDY=+$P(RCDATA,U,9)
"RTN","RCDPENR3",320,0)
 S $P(RCSCDATA,U,8)=$FN($S(+RCEPCT=0:0,1:RCEPDY/RCEPCT),"",0)
"RTN","RCDPENR3",321,0)
 S RCBPCT=+$P(RCDATA,U,10)
"RTN","RCDPENR3",322,0)
 S RCBPDY=+$P(RCDATA,U,11)
"RTN","RCDPENR3",323,0)
 S $P(RCSCDATA,U,9)=$FN($S(+RCBPCT=0:0,1:RCBPDY/RCBPCT),"",0)
"RTN","RCDPENR3",324,0)
 S $P(RCSCDATA,U,11)=+$P(RCDATA,U,12)
"RTN","RCDPENR3",325,0)
 S $P(RCSCDATA,U,12)=+$P(RCDATA,U,13)
"RTN","RCDPENR3",326,0)
 S $P(RCSCDATA,U,14)=+$P(RCDATA,U,14)
"RTN","RCDPENR3",327,0)
 S $P(RCSCDATA,U,15)=+$P(RCDATA,U,15)
"RTN","RCDPENR3",328,0)
 S $P(RCSCDATA,U,16)=RCPAID-$P(RCDATA,U,15)
"RTN","RCDPENR3",329,0)
 F I=1:1:16 D  Q:RCSTOP
"RTN","RCDPENR3",330,0)
 . I RCDISP,($Y>(IOSL-4)) D  Q:RCSTOP
"RTN","RCDPENR3",331,0)
 . .  D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR3",332,0)
 . .  Q:RCSTOP
"RTN","RCDPENR3",333,0)
 . .  D HEADER^RCDPENR2
"RTN","RCDPENR3",334,0)
 . ;if printing from monthly background job save in file and quit
"RTN","RCDPENR3",335,0)
 . ;Otherwise print to screen
"RTN","RCDPENR3",336,0)
 . S (RCLTXT,RCDTXT)=$P($T(GDTXT+I),";;",2)
"RTN","RCDPENR3",337,0)
 . I RCTITLE["PAPER" D
"RTN","RCDPENR3",338,0)
 . . I (I>5),(I<9) D      ; correct display for lines 6,7,8,16
"RTN","RCDPENR3",339,0)
 . . . I (I=6),RCTITLE["CHECK" Q     ;Dont change line 6 if Paper check section
"RTN","RCDPENR3",340,0)
 . . . S RCB="EFT",RCC="CHK"  ; Correct display for Paper check section
"RTN","RCDPENR3",341,0)
 . . . I RCTITLE["EOB" S RCB="ERA",RCC="EOB"   ;correct display for paper eob
"RTN","RCDPENR3",342,0)
 . . . S RCDTXT=$P(RCLTXT,RCB,1)_RCC_$P(RCLTXT,RCB,2)
"RTN","RCDPENR3",343,0)
 . I 'RCDISP!RCEXCEL D  Q
"RTN","RCDPENR3",344,0)
 . . S RCSTRDTA=$P(RCSCDATA,U,I)
"RTN","RCDPENR3",345,0)
 . . ;Format lines: lines 2&3 are amounts, 4 is a percentage, remainder are integers.
"RTN","RCDPENR3",346,0)
 . . S RCSTRNG=RCDTXT_"^"_$S(I=4:$J($P(RCSTRDTA,"."),2)_"%",1:RCSTRDTA)
"RTN","RCDPENR3",347,0)
 . . I 'RCDISP D SAVEDATA^RCDPENR1(RCSTRNG,RCRPIEN) Q
"RTN","RCDPENR3",348,0)
 . .;if printing in an EXCEL format, print "^" delimited and quit
"RTN","RCDPENR3",349,0)
 . . I RCEXCEL W RCSTRNG,! Q
"RTN","RCDPENR3",350,0)
 . ;Output to screen
"RTN","RCDPENR3",351,0)
 . ;currency format
"RTN","RCDPENR3",352,0)
 . I (I=2)!(I=3)!(I=15) W RCDTXT,?65,$J($P(RCSCDATA,U,I),13,2),! Q
"RTN","RCDPENR3",353,0)
 . ; For the line items that are percentages.  Not using $J formatting due to rounding errors.
"RTN","RCDPENR3",354,0)
 . I I=4 W RCDTXT,?65,$J($P($P(RCSCDATA,U,I),"."),12),"%",! Q
"RTN","RCDPENR3",355,0)
 . ;Otherwise print Number format
"RTN","RCDPENR3",356,0)
 . I (I=16) D  Q
"RTN","RCDPENR3",357,0)
 . . W:RCERAFLG RCDTXT,?65,$J($P(RCSCDATA,U,I),13,2),!
"RTN","RCDPENR3",358,0)
 . W RCDTXT,?65,$J($P(RCSCDATA,U,I),13),!
"RTN","RCDPENR3",359,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR3",360,0)
 I RCDISP W RCLINE,! ;Otherwise print Number format
"RTN","RCDPENR3",361,0)
 I 'RCDISP D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR3",362,0)
 Q RCSTOP
"RTN","RCDPENR3",363,0)
 ;
"RTN","RCDPENR3",364,0)
GDTXT ;
"RTN","RCDPENR3",365,0)
 ;;TOTAL NUMBER OF CLAIMS
"RTN","RCDPENR3",366,0)
 ;;TOTAL AMOUNT BILLED
"RTN","RCDPENR3",367,0)
 ;;TOTAL AMOUNT PAID
"RTN","RCDPENR3",368,0)
 ;;PERCENTAGE AMOUNT PAID: (%Total Paid/Billed)
"RTN","RCDPENR3",369,0)
 ;;
"RTN","RCDPENR3",370,0)
 ;;AVG #DAYS BETWEEN BILLED/ERA
"RTN","RCDPENR3",371,0)
 ;;AVG #DAYS BETWEEN ERA/EFT
"RTN","RCDPENR3",372,0)
 ;;AVG #DAYS BETWEEN ERA+EFT REC'D/PMT POSTED
"RTN","RCDPENR3",373,0)
 ;;AVG #DAYS BETWEEN BILLED/PMT POSTED
"RTN","RCDPENR3",374,0)
 ;;
"RTN","RCDPENR3",375,0)
 ;;TOTAL NUMBER OF ERAs
"RTN","RCDPENR3",376,0)
 ;;TOTAL NUMBER OF EEOBs
"RTN","RCDPENR3",377,0)
 ;;
"RTN","RCDPENR3",378,0)
 ;;TOTAL NUMBER OF EFTs
"RTN","RCDPENR3",379,0)
 ;;TOTAL AMOUNT COLLECTED
"RTN","RCDPENR3",380,0)
 ;;TOTAL DIFFERENCE BETWEEN ERAs (PAID) - EFTs (COLLECTED):
"RTN","RCDPENR3",381,0)
 Q
"RTN","RCDPENR4")
0^66^B70397699
"RTN","RCDPENR4",1,0)
RCDPENR4 ;ALB/SAB - EPay National Reports - ERA/EFT Report Utilities ;12/14/15
"RTN","RCDPENR4",2,0)
 ;;4.5;Accounts Receivable;**304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPENR4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR4",4,0)
 ;
"RTN","RCDPENR4",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR4",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR4",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR4",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR4",9,0)
 Q
"RTN","RCDPENR4",10,0)
 ;
"RTN","RCDPENR4",11,0)
 ; Retrieve a single payer from the 
"RTN","RCDPENR4",12,0)
SPAY() ;
"RTN","RCDPENR4",13,0)
 ;
"RTN","RCDPENR4",14,0)
 N DIC,X,Y,DTOUT,DUOUT,DINUM,DLAYGO,NAME
"RTN","RCDPENR4",15,0)
 ;
"RTN","RCDPENR4",16,0)
 S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","RCDPENR4",17,0)
 S DIC("?")="Enter the Payer name to run this report on."
"RTN","RCDPENR4",18,0)
 S DIC("A")="Select Payer: "
"RTN","RCDPENR4",19,0)
 D ^DIC K DIC
"RTN","RCDPENR4",20,0)
 ; timeout or user requested exit
"RTN","RCDPENR4",21,0)
 I $G(DUOUT)!$G(DTOUT) Q -1
"RTN","RCDPENR4",22,0)
 ;
"RTN","RCDPENR4",23,0)
 ;Return the name instead of the IEN
"RTN","RCDPENR4",24,0)
 Q $P(Y,U,2)
"RTN","RCDPENR4",25,0)
 ;
"RTN","RCDPENR4",26,0)
 ; - Return first/last day of month (if Y=0), previous month (if Y=1),
"RTN","RCDPENR4",27,0)
M1(X,Y) ;
"RTN","RCDPENR4",28,0)
 ;   first/last day of month in MMDDYYYY format (if Y=2), or date in
"RTN","RCDPENR4",29,0)
 ;   external format (if Y=3).
"RTN","RCDPENR4",30,0)
 N X1,X2 S:'$G(X)!(X'?7N.1".".6N) X=DT S:'$G(Y) Y=0
"RTN","RCDPENR4",31,0)
 S X2="31^"_$S($E(X,1,3)#4=0:29,1:28)_"^31^30^31^30^31^31^30^31^30^31"
"RTN","RCDPENR4",32,0)
 I 'Y S X=$E(X,1,5),X=X_"01"_U_X_$P(X2,U,+$E(X,4,5)) Q X
"RTN","RCDPENR4",33,0)
 I Y=1 S X=($E(X,1,5)_"00")-$S(+$E(X,4,5)=1:8900,1:100) Q X
"RTN","RCDPENR4",34,0)
 I Y=2 D  Q X
"RTN","RCDPENR4",35,0)
 .S X1=1700+$E(X,1,3),X=$E(X,4,5),X=X_"01"_X1_U_X_$P(X2,U,+X)_X1
"RTN","RCDPENR4",36,0)
 S Y=X X ^DD("DD") S X=Y
"RTN","RCDPENR4",37,0)
 Q X
"RTN","RCDPENR4",38,0)
 ;
"RTN","RCDPENR4",39,0)
 ; Retrieve the needed 835 information.
"RTN","RCDPENR4",40,0)
GETERA(RCSDATE,RCEDATE,RCRATE) ;
"RTN","RCDPENR4",41,0)
 ;
"RTN","RCDPENR4",42,0)
 N OKAY,RCLDATE,RCBDIV,RCIEN,RCDATA,RCLIEN,RCDTLDT,RCEOB,RCBILL,RCTRACE
"RTN","RCDPENR4",43,0)
 N RCEFTST,RCDOS,RCAMTBL,RCAMTPD,RCDTBILL,RCTIN,RCINS,RCERARCD,RCINS
"RTN","RCDPENR4",44,0)
 N RCPAPER,RCMETHOD,RCEFTTYP,RCTRNTYP,RCINSTIN,RCERAIDX,RCEFTST
"RTN","RCDPENR4",45,0)
 N RCEFTPD,RCDIV,RCERANUM,RCRATETP,RCPAYER,RCTRLN,RCTRBD,RCPOSTED
"RTN","RCDPENR4",46,0)
 ;
"RTN","RCDPENR4",47,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR4",48,0)
 ;
"RTN","RCDPENR4",49,0)
 F  S RCLDATE=$O(^RCY(344.4,"AFD",RCLDATE)) Q:RCLDATE>RCEDATE  Q:RCLDATE=""  D
"RTN","RCDPENR4",50,0)
 . S RCIEN=""
"RTN","RCDPENR4",51,0)
 . F  S RCIEN=$O(^RCY(344.4,"AFD",RCLDATE,RCIEN)) Q:'RCIEN  D  Q
"RTN","RCDPENR4",52,0)
 .. S RCDATA=$G(^RCY(344.4,RCIEN,0))
"RTN","RCDPENR4",53,0)
 .. Q:RCDATA=""         ;No data defined in the transaction
"RTN","RCDPENR4",54,0)
 .. Q:'$P(RCDATA,U,10)  ;Transaction is an MRA
"RTN","RCDPENR4",55,0)
 .. ;
"RTN","RCDPENR4",56,0)
 .. ; Only calculate if status is NULL, Unmatched or Matched to Paper Check
"RTN","RCDPENR4",57,0)
 .. ; GETEFT will have grabbed there rest
"RTN","RCDPENR4",58,0)
 .. S RCEFTST=$P(RCDATA,U,9)
"RTN","RCDPENR4",59,0)
 .. I (RCEFTST=1)!(RCEFTST>2) Q
"RTN","RCDPENR4",60,0)
 .. ;
"RTN","RCDPENR4",61,0)
 .. S RCERARCD=$P($P(RCDATA,U,7),".",1)  ;get the date of the ERA
"RTN","RCDPENR4",62,0)
 .. S RCTRACE=$P(RCDATA,U,2)             ;get the trace number
"RTN","RCDPENR4",63,0)
 .. S RCTRLN=$L(RCTRACE),RCTRBD=$S(RCTRLN<11:1,1:RCTRLN-9)
"RTN","RCDPENR4",64,0)
 .. S RCTRACE=$E(RCTRACE,RCTRBD,RCTRLN)  ; get the last 10 digits of Trace #
"RTN","RCDPENR4",65,0)
 .. S RCTIN=$P(RCDATA,U,3)               ;Payer TIN
"RTN","RCDPENR4",66,0)
 .. S RCINS=$P(RCDATA,U,6)               ;Insurance free text
"RTN","RCDPENR4",67,0)
 .. I RCPAY="A",RCTYPE'="A" D  Q:'OKAY  ; PRCA*4.5*326 If all payers included, check by type
"RTN","RCDPENR4",68,0)
 ... S OKAY=$$ISTYPE^RCDPEU1(344.4,RCIEN,RCTYPE)
"RTN","RCDPENR4",69,0)
 .. ;
"RTN","RCDPENR4",70,0)
 .. ; Check Payer Name
"RTN","RCDPENR4",71,0)
 .. I RCPAY'="A" D  Q:'OKAY               ; PRCA*4.5*326 
"RTN","RCDPENR4",72,0)
 ... S OKAY=$$ISSEL^RCDPEU1(344.4,RCIEN)
"RTN","RCDPENR4",73,0)
 .. S RCERANUM=$P(RCDATA,U,11)           ;# EOBs in ERA
"RTN","RCDPENR4",74,0)
 .. ;
"RTN","RCDPENR4",75,0)
 .. S RCLIEN=0
"RTN","RCDPENR4",76,0)
 .. F  S RCLIEN=$O(^RCY(344.4,RCIEN,1,RCLIEN)) Q:RCLIEN=""  D  Q
"RTN","RCDPENR4",77,0)
 ... S RCDTLDT=$G(^RCY(344.4,RCIEN,1,RCLIEN,0))   ;Get the ERA Detail
"RTN","RCDPENR4",78,0)
 ... Q:RCDTLDT=""             ;Quit if no ERA Detail
"RTN","RCDPENR4",79,0)
 ... ;
"RTN","RCDPENR4",80,0)
 ... S RCEOB=$P(RCDTLDT,U,2)  ;Get the EOB info
"RTN","RCDPENR4",81,0)
 ... Q:'RCEOB                 ;quit if no info
"RTN","RCDPENR4",82,0)
 ... ;
"RTN","RCDPENR4",83,0)
 ... ; Get the BILL/CLAIM IEN from the #399 file
"RTN","RCDPENR4",84,0)
 ... S RCBILL=$$BILLIEN^RCDPENR1(RCEOB)
"RTN","RCDPENR4",85,0)
 ... Q:RCBILL=""    ;EEOB corrupted, quit
"RTN","RCDPENR4",86,0)
 ... ;
"RTN","RCDPENR4",87,0)
 ... S RCDIV=$$DIV^IBJDF2(RCBILL)
"RTN","RCDPENR4",88,0)
 ... S RCDIV=$$GET1^DIQ(40.8,RCDIV_",",".01","E")
"RTN","RCDPENR4",89,0)
 ... ;
"RTN","RCDPENR4",90,0)
 ... S RCRATETP=$$GET1^DIQ(399,RCBILL_",",.07,"I")
"RTN","RCDPENR4",91,0)
 ... Q:RCRATETP'=RCRATE       ;Not requested Rate Type
"RTN","RCDPENR4",92,0)
 ... ;
"RTN","RCDPENR4",93,0)
 ... S RCDOS=$$GET1^DIQ(399,RCBILL_",",.03,"I")
"RTN","RCDPENR4",94,0)
 ... S RCAMTBL=$$GET1^DIQ(361.1,RCEOB_",",2.04,"I")
"RTN","RCDPENR4",95,0)
 ... S RCAMTPD=$$GET1^DIQ(361.1,RCEOB_",",1.01,"I")
"RTN","RCDPENR4",96,0)
 ... S RCDTBILL=$$GET1^DIQ(399,RCBILL_",",12,"I")
"RTN","RCDPENR4",97,0)
 ... Q:RCDTBILL=""   ;cant calculate if date first printed is NULL
"RTN","RCDPENR4",98,0)
 ... S RCMETHOD=$S($P($G(^RCY(344.4,RCIEN,1,RCLIEN,4)),U)="":"MANUAL",1:"AUTOPOST")
"RTN","RCDPENR4",99,0)
 ... S RCPAPER=$P($G(^RCY(344.4,RCLIEN,20)),U,3)  ; Paper EOB ERA?
"RTN","RCDPENR4",100,0)
 ... ;ERA not a paper ERA, is the EOB a Paper EOB
"RTN","RCDPENR4",101,0)
 ... S:'RCPAPER RCPAPER=$S($$GET1^DIQ(361.1,RCEOB_",",.17,"I")=0:"ERA",1:"PAPER")
"RTN","RCDPENR4",102,0)
 ... S RCEFTTYP=$S(RCEFTST=2:"PAPER",1:"EFT")
"RTN","RCDPENR4",103,0)
 ... S RCTRNTYP=RCPAPER_"/"_RCEFTTYP
"RTN","RCDPENR4",104,0)
 ... S RCERAIDX=$S(RCTRNTYP="ERA/EFT":1,RCTRNTYP="ERA/PAPER":2,RCTRNTYP="PAPER/EFT":3,1:4)
"RTN","RCDPENR4",105,0)
 ... Q:RCERAIDX=4   ;Paper Check Paper EOB not supported
"RTN","RCDPENR4",106,0)
 ... ;
"RTN","RCDPENR4",107,0)
 ... S RCPOSTED=$P($G(^RCY(344.4,RCIEN,7)),U)
"RTN","RCDPENR4",108,0)
 ... S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR4",109,0)
 ... ;
"RTN","RCDPENR4",110,0)
 ... S RCDATA=RCBILL_U_RCIEN_U_U_RCEOB_U_RCDOS_U_RCAMTBL_U_RCAMTPD_U_RCDTBILL_U_RCERARCD
"RTN","RCDPENR4",111,0)
 ... S RCDATA=RCDATA_U_U_RCPOSTED_U_RCTRACE_U_RCMETHOD_U
"RTN","RCDPENR4",112,0)
 ... S RCDATA=RCDATA_RCTRNTYP_U_RCERANUM_U_RCDIV_U_RCINSTIN_U
"RTN","RCDPENR4",113,0)
 ... S ^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERAIDX,RCBILL)=RCDATA
"RTN","RCDPENR4",114,0)
 ;
"RTN","RCDPENR4",115,0)
 ; Compile the list of payers using the payer TIN.  The Payer IENS are extracted
"RTN","RCDPENR4",116,0)
TINARY(RCSTART,RCEND) ;
"RTN","RCDPENR4",117,0)
 ;
"RTN","RCDPENR4",118,0)
 ;RCSTART - The text to start the search for insurance companies
"RTN","RCDPENR4",119,0)
 ;RCEND - The text to end the search for insurance companies,
"RTN","RCDPENR4",120,0)
 ;
"RTN","RCDPENR4",121,0)
 N RCI,RCJ,RCFILE
"RTN","RCDPENR4",122,0)
 ;
"RTN","RCDPENR4",123,0)
 ; Clear old data out
"RTN","RCDPENR4",124,0)
 K ^TMP("RCDPEADP",$J,"TIN")
"RTN","RCDPENR4",125,0)
 ;
"RTN","RCDPENR4",126,0)
 ; If start and end are NULL, then User wishes all payers, set flag and quit
"RTN","RCDPENR4",127,0)
 I (RCSTART=""),(RCEND="") S ^TMP("RCDPEADP",$J,"TIN","A")="" Q
"RTN","RCDPENR4",128,0)
 ;
"RTN","RCDPENR4",129,0)
 ; If single payer, find the IEN if it exists and post it.
"RTN","RCDPENR4",130,0)
 I RCSTART=RCEND D  Q
"RTN","RCDPENR4",131,0)
 . S RCJ=""
"RTN","RCDPENR4",132,0)
 . F  S RCJ=$O(^RCY(344.6,"C",RCSTART,RCJ)) Q:RCJ=""  D
"RTN","RCDPENR4",133,0)
 . . S ^TMP("RCDPEADP",$J,"TIN",RCJ)=""
"RTN","RCDPENR4",134,0)
 ;
"RTN","RCDPENR4",135,0)
 ; For a range of payers, loop through the Payer name list until 
"RTN","RCDPENR4",136,0)
 ; you reach the last payer in the range (RCEND)
"RTN","RCDPENR4",137,0)
 ;
"RTN","RCDPENR4",138,0)
 S RCI=$O(^RCY(344.6,"C",RCSTART),-1)    ; Set the starting location for the loop
"RTN","RCDPENR4",139,0)
 ; Loop through the index to find the correct entries.  Append a space
"RTN","RCDPENR4",140,0)
 F  S RCI=$O(^RCY(344.6,"C",RCI)) Q:RCI=""  Q:RCI]RCEND  D
"RTN","RCDPENR4",141,0)
 . S RCJ=""
"RTN","RCDPENR4",142,0)
 . F  S RCJ=$O(^RCY(344.6,"C",RCI,RCJ)) Q:RCJ=""  D
"RTN","RCDPENR4",143,0)
 . . S ^TMP("RCDPEADP",$J,"TIN",RCJ)=""
"RTN","RCDPENR4",144,0)
 ;
"RTN","RCDPENR4",145,0)
 Q
"RTN","RCDPENR4",146,0)
 ;
"RTN","RCDPENR4",147,0)
 ;Look at both Payer and Payer Tin lists and find insurance companies on both lists to report on.
"RTN","RCDPENR4",148,0)
INTRSCT() ;
"RTN","RCDPENR4",149,0)
 ;
"RTN","RCDPENR4",150,0)
 N RCLPIEN,RCPYRFLG
"RTN","RCDPENR4",151,0)
 ;
"RTN","RCDPENR4",152,0)
 ; If ALL payers was selected for both the Payer Name and Payer TIN parameters, set the all flag and quit.
"RTN","RCDPENR4",153,0)
 I $D(^TMP("RCDPEADP",$J,"TIN","A"))&$D(^TMP("RCDPEADP",$J,"INS","A")) S ^TMP("RCDPENR2",$J,"INS","A")="" Q 1
"RTN","RCDPENR4",154,0)
 ;
"RTN","RCDPENR4",155,0)
 ; If All payers was elected for Payer Name and Payer TIN had entries
"RTN","RCDPENR4",156,0)
 ; Loop through the Payer TIN array and update valid report array and quit
"RTN","RCDPENR4",157,0)
 I $D(^TMP("RCDPEADP",$J,"INS","A")) D  Q 1
"RTN","RCDPENR4",158,0)
 . M ^TMP("RCDPENR2",$J,"INS")=^TMP("RCDPEADP",$J,"TIN")
"RTN","RCDPENR4",159,0)
 . K ^TMP("RCDPEADP",$J,"INS","A")  ;remove the all flag from the list
"RTN","RCDPENR4",160,0)
 ;
"RTN","RCDPENR4",161,0)
 ; If All payers was elected for Payer TIN and Payer NAME had entries
"RTN","RCDPENR4",162,0)
 ; Loop through the Payer TIN array and update valid report array and quit
"RTN","RCDPENR4",163,0)
 I $D(^TMP("RCDPEADP",$J,"TIN","A")) D  Q 1
"RTN","RCDPENR4",164,0)
 . M ^TMP("RCDPENR2",$J,"INS")=^TMP("RCDPEADP",$J,"INS")
"RTN","RCDPENR4",165,0)
 . K ^TMP("RCDPENR2",$J,"TIN","A")  ;remove the all flag from the list
"RTN","RCDPENR4",166,0)
 ;
"RTN","RCDPENR4",167,0)
 ; A range of payers (1 or more) were selected for both Payer lists (Name and TIN)
"RTN","RCDPENR4",168,0)
 ; Loop through the TIN array and see if the Payer Name IEN is in the TIN array.
"RTN","RCDPENR4",169,0)
 ; If so, update the valid report array and quit.
"RTN","RCDPENR4",170,0)
 S RCPYRFLG=0,RCLPIEN=""
"RTN","RCDPENR4",171,0)
 F  S RCLPIEN=$O(^TMP("RCDPEADP",$J,"TIN",RCLPIEN)) Q:'RCLPIEN  D
"RTN","RCDPENR4",172,0)
 . I $D(^TMP("RCDPEADP",$J,"INS",RCLPIEN)) D
"RTN","RCDPENR4",173,0)
 . . S ^TMP("RCDPENR2",$J,"INS",RCLPIEN)=""
"RTN","RCDPENR4",174,0)
 . . S:'RCPYRFLG RCPYRFLG=1
"RTN","RCDPENR4",175,0)
 ;
"RTN","RCDPENR4",176,0)
 ; No payers found
"RTN","RCDPENR4",177,0)
 Q RCPYRFLG
"RTN","RCDPENR4",178,0)
 ;
"RTN","RCDPENR4",179,0)
 ;Print the data requested (Volume Statistics Report)
"RTN","RCDPENR4",180,0)
PRINTRP(RCTITLE,RCDATA,RCRPIEN,RCDISP,RCTFLG) ;
"RTN","RCDPENR4",181,0)
 ;
"RTN","RCDPENR4",182,0)
 ;Expected "^" delimeted format of RCDATA is:
"RTN","RCDPENR4",183,0)
 ; Piece 1 - # 837s
"RTN","RCDPENR4",184,0)
 ; Piece 2 - # NCPDPs
"RTN","RCDPENR4",185,0)
 ; Piece 3 - # 835s
"RTN","RCDPENR4",186,0)
 ; Piece 4 - # 837s with 835s
"RTN","RCDPENR4",187,0)
 ; Piece 5 - # NCPDPs with 835s
"RTN","RCDPENR4",188,0)
 ; Piece 6 - Avg days from 837 send to 835 receipt
"RTN","RCDPENR4",189,0)
 ; Piece 7 - Avg days from NCPDP send to 835 receipt
"RTN","RCDPENR4",190,0)
 ;
"RTN","RCDPENR4",191,0)
 ; Undeclared parameters RCLINE (line of "-" characters) RCSTOP (user requested stop flag)
"RTN","RCDPENR4",192,0)
 ;
"RTN","RCDPENR4",193,0)
 N RC835,RCNCPDP,RC837,RCNO837,RCNNCPDP,RCANCPDP,RCAVG837,RCSPACE,RCSTR,RCFLG
"RTN","RCDPENR4",194,0)
 ;
"RTN","RCDPENR4",195,0)
 I $Y>(IOSL-12),RCDISP D  Q:RCSTOP RCFLG
"RTN","RCDPENR4",196,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR4",197,0)
 . I RCSTOP S RCFLG=-1 Q
"RTN","RCDPENR4",198,0)
 . D HEADER^RCDPENR1
"RTN","RCDPENR4",199,0)
 ;
"RTN","RCDPENR4",200,0)
 S RCDISP=$G(RCDISP),RCTFLG=$G(RCTFLG)
"RTN","RCDPENR4",201,0)
 I RCDISP,RCTFLG D
"RTN","RCDPENR4",202,0)
 . W !,RCTITLE,!!
"RTN","RCDPENR4",203,0)
 . W RCLINE,!
"RTN","RCDPENR4",204,0)
 ;
"RTN","RCDPENR4",205,0)
 S RCSPACE=""
"RTN","RCDPENR4",206,0)
 S $P(RCSPACE," ",80)=""
"RTN","RCDPENR4",207,0)
 ;
"RTN","RCDPENR4",208,0)
 I RCDISP D  Q 1
"RTN","RCDPENR4",209,0)
 . W "NUMBER OF 837s TRANSMITTED TO MEDICAL PAYERS",?65,$J(+$P(RCDATA,U),10)
"RTN","RCDPENR4",210,0)
 . W !,"NUMBER OF NCPDP CLAIMS TRANSMITTED TO PHARMACY PBMs",?65,$J(+$P(RCDATA,U,2),10)
"RTN","RCDPENR4",211,0)
 . W !,"NUMBER OF 835s RECEIVED FROM MEDICAL PAYERS",?65,$J(+$P(RCDATA,U,3),10)
"RTN","RCDPENR4",212,0)
 . W !,"NUMBER OF 835s RECEIVED FROM PHARMACY PBMS",?65,$J(+$P(RCDATA,U,4),10)
"RTN","RCDPENR4",213,0)
 . W !,"NUMBER OF 837s WITH A CORRESPONDING 835 (MRA Excluded)",?65,$J(+$P(RCDATA,U,5),10)
"RTN","RCDPENR4",214,0)
 . W !,"NUMBER OF NCPDP CLAIM WITH A CORRESPONDING 835",?65,$J(+$P(RCDATA,U,6),10)
"RTN","RCDPENR4",215,0)
 . W !,"AVG #DAYS BETWEEN 837 TRANSMIT AND 835 RECEIVED",?65,$J(+$P(RCDATA,U,7),10,1)
"RTN","RCDPENR4",216,0)
 . W !,"AVG #DAYS BETWEEN NCPDP CLAIM TRANSMIT AND 835 RCVD",?65,$J(+$P(RCDATA,U,8),10,1)
"RTN","RCDPENR4",217,0)
 . W !,RCLINE,!
"RTN","RCDPENR4",218,0)
 I 'RCDISP D
"RTN","RCDPENR4",219,0)
 . S RCSTR="NUMBER OF 837s TRANSMITTED TO MEDICAL PAYERS^"_+$P(RCDATA,U)
"RTN","RCDPENR4",220,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",221,0)
 . S RCSTR="NUMBER OF NCPDP CLAIMS TRANSMITTED TO PHARMACY PBMs^"_+$P(RCDATA,U,2)
"RTN","RCDPENR4",222,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",223,0)
 . S RCSTR="NUMBER OF 835s RECEIVED FROM MEDICAL PAYERS^"_+$P(RCDATA,U,3)
"RTN","RCDPENR4",224,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",225,0)
 . S RCSTR="NUMBER OF 835s RECEIVED FROM PHARMACY PBMS^"_+$P(RCDATA,U,4)
"RTN","RCDPENR4",226,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",227,0)
 . S RCSTR="NUMBER OF 837s WITH A CORRESPONDING 835 (MRA Excluded)^"_+$P(RCDATA,U,5)
"RTN","RCDPENR4",228,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",229,0)
 . S RCSTR="NUMBER OF NCPDP CLAIM WITH A CORRESPONDING 835^"_+$P(RCDATA,U,6)
"RTN","RCDPENR4",230,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",231,0)
 . S RCSTR="AVG #DAYS BETWEEN 837 TRANSMIT AND 835 RECEIVED^"_+$P(RCDATA,U,7)
"RTN","RCDPENR4",232,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",233,0)
 . S RCSTR="AVG #DAYS BETWEEN NCPDP CLAIM TRANSMIT AND 835 RCVD^"_+$P(RCDATA,U,8)
"RTN","RCDPENR4",234,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",235,0)
 Q 1
"RTN","RCDPENRU")
0^78^B276717279
"RTN","RCDPENRU",1,0)
RCDPENRU ;ALB/SAB - AR DM DATA EXTRACTION (MENU OPTIONS/TRANSMIT E-MAIL) ;15-JUL-15
"RTN","RCDPENRU",2,0)
 ;;4.5;Accounts Receivable;**304,326**;Mar 20, 1995;Build 26
"RTN","RCDPENRU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENRU",4,0)
 ;
"RTN","RCDPENRU",5,0)
 Q
"RTN","RCDPENRU",6,0)
 ;
"RTN","RCDPENRU",7,0)
 ; Tag which runs starts the periodic AR DM reporting processes
"RTN","RCDPENRU",8,0)
AUTO(RCMRUN,RCMAN) ;
"RTN","RCDPENRU",9,0)
 ;
"RTN","RCDPENRU",10,0)
 ; RCMRUN - Which report to run
"RTN","RCDPENRU",11,0)
 ;        E-EFT/ERA Trending Report
"RTN","RCDPENRU",12,0)
 ;        V-Volume Statistics Report
"RTN","RCDPENRU",13,0)
 ; RCMAN - Manual or Automated (1=Manual, 0 or Null - Automated
"RTN","RCDPENRU",14,0)
 ;
"RTN","RCDPENRU",15,0)
 N I,RCBEGDT,RCDATA,RCDIV,RCEFT,RCENDDT,RCFLG,RCPAY,RCPYRLST,RCTYPE,RCVOL,RCWHICH ; PRCA*4.5*326
"RTN","RCDPENRU",16,0)
 ;
"RTN","RCDPENRU",17,0)
 S RCMAN=+$G(RCMAN)
"RTN","RCDPENRU",18,0)
 ; Set variables
"RTN","RCDPENRU",19,0)
 S RCENDDT=$$DT^XLFDT
"RTN","RCDPENRU",20,0)
 S RCBEGDT=$$FMADD^XLFDT(RCENDDT,-90) ; Previous 90 days
"RTN","RCDPENRU",21,0)
 S RCPYRLST("A")="",(RCPYRLST("START"),RCPYRLST("END"))=""
"RTN","RCDPENRU",22,0)
 S RCDIV("A")=""   ;all divisions
"RTN","RCDPENRU",23,0)
 S (RCTYPE,RCPAY)="A" ; PRCA*4.5*326
"RTN","RCDPENRU",24,0)
 S RCWHICH=1          ; PRCA*4.5*326
"RTN","RCDPENRU",25,0)
 S:$G(RCMRUN)="" RCMRUN="B"
"RTN","RCDPENRU",26,0)
 ;
"RTN","RCDPENRU",27,0)
 ; Quit if the end date (the run date) is not Saturday.
"RTN","RCDPENRU",28,0)
 I ('RCMAN),($$DOW^XLFDT(RCENDDT)'="Saturday") Q
"RTN","RCDPENRU",29,0)
 ;
"RTN","RCDPENRU",30,0)
 S (RCVOL,RCEFT,I)=0
"RTN","RCDPENRU",31,0)
 ; Retrieve enable/disabled flags and location in array for the flag for the reports
"RTN","RCDPENRU",32,0)
 F  S I=$O(^RCDM(344.9,I)) Q:'I  D
"RTN","RCDPENRU",33,0)
 .  S RCDATA=$G(^RCDM(344.9,I,0))
"RTN","RCDPENRU",34,0)
 .  Q:RCDATA=""
"RTN","RCDPENRU",35,0)
 .  S RCFLG(I)=RCDATA
"RTN","RCDPENRU",36,0)
 .  S:RCDATA["VOLUME" RCVOL=I
"RTN","RCDPENRU",37,0)
 .  S:RCDATA["EFT/ERA" RCEFT=I
"RTN","RCDPENRU",38,0)
 ;
"RTN","RCDPENRU",39,0)
 ; Run Volume Statistics Report if enabled
"RTN","RCDPENRU",40,0)
 I +RCVOL,(RCMRUN'="E") D:+$P($G(RCFLG(RCVOL)),U,2) AUTO^RCDPENR1(0,RCBEGDT,RCENDDT,.RCPYRLST,"A","G")
"RTN","RCDPENRU",41,0)
 ;
"RTN","RCDPENRU",42,0)
 S (RCPYRLST("TIN","START"),RCPYRLST("TIN","END"))=""
"RTN","RCDPENRU",43,0)
 ;
"RTN","RCDPENRU",44,0)
 ; Run EFT/ERA Trending Report if enabled
"RTN","RCDPENRU",45,0)
 I +RCEFT,(RCMRUN'="V") D:+$P($G(RCFLG(RCEFT)),U,2) AUTO^RCDPENR2(0,RCBEGDT,RCENDDT,.RCPYRLST,"A","G",1,8,.RCDIV)
"RTN","RCDPENRU",46,0)
 ;
"RTN","RCDPENRU",47,0)
 ;Cleanup
"RTN","RCDPENRU",48,0)
 K ^TMP("RCDPENR2",$J),^TMP("RCDPEADP",$J),^TMP("RCDPENR1",$J)
"RTN","RCDPENRU",49,0)
 ;
"RTN","RCDPENRU",50,0)
 ; Write mesage back to the user...
"RTN","RCDPENRU",51,0)
 I RCMAN W $S(RCMRUN="E":"THE EFT/ERA TRENDING REPORT HAS ",RCMRUN="V":"THE VOLUME STATISTICS REPORT HAS ",1:"ALL REPORTS HAVE "),"BEEN STARTED.",!
"RTN","RCDPENRU",52,0)
 ;
"RTN","RCDPENRU",53,0)
 Q
"RTN","RCDPENRU",54,0)
VPE ; - View/print entries in RCDPE DM REPORT ARCHIVE file (#344.91) for a given report date.
"RTN","RCDPENRU",55,0)
 N RCDATA,RCHDR,RCIEN,RCDT,RCRPT,RCPAGE,RCDISP,POP
"RTN","RCDPENRU",56,0)
 ;
"RTN","RCDPENRU",57,0)
 S RCPAGE=0,RCDISP=1
"RTN","RCDPENRU",58,0)
 ; Check for entries
"RTN","RCDPENRU",59,0)
 I '$O(^RCDM(344.91,0)) W !!,"There are no entries available.",*7 Q
"RTN","RCDPENRU",60,0)
 ;
"RTN","RCDPENRU",61,0)
 ; Ask for the date to report on
"RTN","RCDPENRU",62,0)
 S RCIEN=$$GETDT
"RTN","RCDPENRU",63,0)
 Q:RCIEN=-1
"RTN","RCDPENRU",64,0)
 ;
"RTN","RCDPENRU",65,0)
 ;Select output device
"RTN","RCDPENRU",66,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPENRU",67,0)
 ;Option to queue
"RTN","RCDPENRU",68,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPENRU",69,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPENRU",70,0)
 .S ZTRTN="VPE1^RCDPENRU"
"RTN","RCDPENRU",71,0)
 .S ZTDESC="EDI Volume Statistics Report"
"RTN","RCDPENRU",72,0)
 .S ZTSAVE("RC*")=""
"RTN","RCDPENRU",73,0)
 .D ^%ZTLOAD
"RTN","RCDPENRU",74,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPENRU",75,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPENRU",76,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPENRU",77,0)
 ;
"RTN","RCDPENRU",78,0)
 ;
"RTN","RCDPENRU",79,0)
 ;Reprint the report to the specified device
"RTN","RCDPENRU",80,0)
VPE1 ;
"RTN","RCDPENRU",81,0)
 ; Display the selected report.
"RTN","RCDPENRU",82,0)
 ;
"RTN","RCDPENRU",83,0)
 S RCRPT=$P(RCIEN,U,2),RCIEN=$P(RCIEN,U)
"RTN","RCDPENRU",84,0)
 ;
"RTN","RCDPENRU",85,0)
 ; Extract the data and build the data string or array.
"RTN","RCDPENRU",86,0)
 D GETRPT(RCIEN,.RCHDR,.RCDATA)
"RTN","RCDPENRU",87,0)
 ;
"RTN","RCDPENRU",88,0)
 ; Print the VOLUME STATISTICS reports
"RTN","RCDPENRU",89,0)
 I RCRPT="VOLUME STATISTICS" D REPRINT^RCDPENR1(RCHDR,RCDATA)
"RTN","RCDPENRU",90,0)
 I RCRPT="EFT/ERA TRENDING" D REPRINT^RCDPENR2(RCIEN)
"RTN","RCDPENRU",91,0)
 ;
"RTN","RCDPENRU",92,0)
 Q
"RTN","RCDPENRU",93,0)
 ;
"RTN","RCDPENRU",94,0)
GETDT() ;
"RTN","RCDPENRU",95,0)
 ;
"RTN","RCDPENRU",96,0)
 N X,Y,DIC,DTOUT,DUOUT
"RTN","RCDPENRU",97,0)
 ;
"RTN","RCDPENRU",98,0)
 S DIC="^RCDM(344.91,",DIC(0)="AEMQZ",DIC("A")="Enter MONTH/YEAR: "
"RTN","RCDPENRU",99,0)
 S DIC("?")="Enter the Month/Year (MM/DD) of the report(s) to view or print"
"RTN","RCDPENRU",100,0)
 S DIC("W")="D EN^DDIOL($$UP^XLFSTR($$FMTE^XLFDT($P(^(0),U,2),9)),,""?40"")"
"RTN","RCDPENRU",101,0)
 D ^DIC
"RTN","RCDPENRU",102,0)
 K DIC
"RTN","RCDPENRU",103,0)
 I $G(DTOUT)!$G(DUOUT) S Y=-1 Q
"RTN","RCDPENRU",104,0)
 Q:Y'>0 Y
"RTN","RCDPENRU",105,0)
 Q Y
"RTN","RCDPENRU",106,0)
 ;
"RTN","RCDPENRU",107,0)
 ;Return the report data
"RTN","RCDPENRU",108,0)
GETRPT(RCIEN,RCHDR,RCDATA) ;
"RTN","RCDPENRU",109,0)
 ; Input  -  RCIEN  - IEN for the report
"RTN","RCDPENRU",110,0)
 ; Output -  RCHDR  - Header information for the report
"RTN","RCDPENRU",111,0)
 ;           RCDATA - Body of data for the report.
"RTN","RCDPENRU",112,0)
 ;
"RTN","RCDPENRU",113,0)
 ; Initiaze variables
"RTN","RCDPENRU",114,0)
 N RCI,RCSTR,RCD0
"RTN","RCDPENRU",115,0)
 ;
"RTN","RCDPENRU",116,0)
 S RCI=1,RCSTR=""
"RTN","RCDPENRU",117,0)
 ;
"RTN","RCDPENRU",118,0)
 ; get the header record info in line one.
"RTN","RCDPENRU",119,0)
 S RCHDR=$G(^RCDM(344.91,RCIEN,1,RCI,0))
"RTN","RCDPENRU",120,0)
 ;
"RTN","RCDPENRU",121,0)
 ; get the info for the report body
"RTN","RCDPENRU",122,0)
 F  S RCI=$O(^RCDM(344.91,RCIEN,1,RCI)) Q:'RCI  D
"RTN","RCDPENRU",123,0)
 . S RCD0=$G(^RCDM(344.91,RCIEN,1,RCI,0))
"RTN","RCDPENRU",124,0)
 . S RCSTR=RCSTR_$P(RCD0,U,2)_U
"RTN","RCDPENRU",125,0)
 ;
"RTN","RCDPENRU",126,0)
 ; remove the extra ^ piece
"RTN","RCDPENRU",127,0)
 S RCDATA=$P(RCSTR,U,1,$L(RCSTR,U)-1)
"RTN","RCDPENRU",128,0)
 Q
"RTN","RCDPENRU",129,0)
DER ; - Disable/enable report(s) or extraction process.
"RTN","RCDPENRU",130,0)
 N RCSTAT,RCSTTXT,RCSTTXT1,RCDATA,RCIEN,RCDMNM
"RTN","RCDPENRU",131,0)
 N X,Y,DIR,DIRUT,DIROUT,DUOUT,DTOUT
"RTN","RCDPENRU",132,0)
 ;
"RTN","RCDPENRU",133,0)
 S (Y,RCIEN)=0
"RTN","RCDPENRU",134,0)
 F  S RCIEN=$O(^RCDM(344.9,RCIEN)) Q:'RCIEN  D  Q:Y=-1
"RTN","RCDPENRU",135,0)
 . ;
"RTN","RCDPENRU",136,0)
 . ; Ask user to disable/enable reports.
"RTN","RCDPENRU",137,0)
 . W ! S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPENRU",138,0)
 . ;values should be the same for the reports, so get the status of the first report.
"RTN","RCDPENRU",139,0)
 . S RCDATA=$G(^RCDM(344.9,RCIEN,0))
"RTN","RCDPENRU",140,0)
 . Q:RCDATA=""
"RTN","RCDPENRU",141,0)
 . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPENRU",142,0)
 . S RCDMNM=$P(RCDATA,U)
"RTN","RCDPENRU",143,0)
 . ; set up message
"RTN","RCDPENRU",144,0)
 . S:RCSTAT RCSTTXT="enabled",RCSTTXT1="disable"
"RTN","RCDPENRU",145,0)
 . S:'RCSTAT RCSTTXT="disabled",RCSTTXT1="re-enable"
"RTN","RCDPENRU",146,0)
 . ;
"RTN","RCDPENRU",147,0)
 . S DIR("A",1)="The nightly AR DM "_RCDMNM_" report is currently "_RCSTTXT_"."
"RTN","RCDPENRU",148,0)
 . S DIR("A")=" Do you want to "_RCSTTXT1_" it?"
"RTN","RCDPENRU",149,0)
 . D ^DIR K DIR
"RTN","RCDPENRU",150,0)
 . I $G(DTOUT)!$G(DUOUT) S Y=-1 Q
"RTN","RCDPENRU",151,0)
 . D:Y UPDSTAT(RCSTAT,RCIEN)
"RTN","RCDPENRU",152,0)
 Q
"RTN","RCDPENRU",153,0)
 ;
"RTN","RCDPENRU",154,0)
 ; Update the status of the 
"RTN","RCDPENRU",155,0)
UPDSTAT(RCSTAT,RCIEN) ;
"RTN","RCDPENRU",156,0)
 N DA,DIE,DR,NEWSTAT,X,Y
"RTN","RCDPENRU",157,0)
 ;
"RTN","RCDPENRU",158,0)
 S NEWSTAT=$S(RCSTAT=0:1,1:0)
"RTN","RCDPENRU",159,0)
 S DA=RCIEN,DIE="^RCDM(344.9,",DR=".02///"_NEWSTAT
"RTN","RCDPENRU",160,0)
 D ^DIE
"RTN","RCDPENRU",161,0)
 Q
"RTN","RCDPENRU",162,0)
 ;
"RTN","RCDPENRU",163,0)
MAN1 ; - Manually start AR DM extraction process.
"RTN","RCDPENRU",164,0)
 N DIRUT,DIROUT,DUOUT,X,Y,DTOUT,DIR
"RTN","RCDPENRU",165,0)
 ;
"RTN","RCDPENRU",166,0)
 ;Let the process know that this is a rerun, do not transmit.
"RTN","RCDPENRU",167,0)
 S DIR("A")="Enter the AR DM report to Manually Start: "
"RTN","RCDPENRU",168,0)
 S DIR(0)="SAO^V:VOLUME STATISTICS;E:EFT/ERA TRENDING REPORT;B:BOTH"
"RTN","RCDPENRU",169,0)
 S DIR("?",1)="Enter V to Manually start the Volume Statistics report, E for the "
"RTN","RCDPENRU",170,0)
 S DIR("?")="EFT/ERA Trending Report, or B for Both reports"
"RTN","RCDPENRU",171,0)
 D ^DIR
"RTN","RCDPENRU",172,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q
"RTN","RCDPENRU",173,0)
 ;
"RTN","RCDPENRU",174,0)
 ; Run the selected report
"RTN","RCDPENRU",175,0)
 D AUTO(Y,1)
"RTN","RCDPENRU",176,0)
 Q
"RTN","RCDPENRU",177,0)
 ;
"RTN","RCDPENRU",178,0)
MAN2 ; - Manually transmit DM extract file.
"RTN","RCDPENRU",179,0)
 N DIR,Y,DTOUT,DUOUT,DIRUT,DIROUT,X
"RTN","RCDPENRU",180,0)
 N RCIEN,RCBGDT,RCENDDT,RCSUB,RCXMZ
"RTN","RCDPENRU",181,0)
 ;
"RTN","RCDPENRU",182,0)
 S RCPAGE=0,RCDISP=1
"RTN","RCDPENRU",183,0)
 ; Check for entries
"RTN","RCDPENRU",184,0)
 I '$O(^RCDM(344.91,0)) W !!,"There are no entries available to retransmit.",*7 Q
"RTN","RCDPENRU",185,0)
 ;
"RTN","RCDPENRU",186,0)
MAN2A ; Ask for the date and report to retransmit
"RTN","RCDPENRU",187,0)
 S RCIEN=$$GETDT
"RTN","RCDPENRU",188,0)
 Q:RCIEN=-1
"RTN","RCDPENRU",189,0)
 ;
"RTN","RCDPENRU",190,0)
 S RCBGDT=$P($$GET1^DIQ(344.91,+RCIEN_",",".04","I"),".")
"RTN","RCDPENRU",191,0)
 S RCENDDT=$P($$GET1^DIQ(344.91,+RCIEN_",",".05","I"),".")
"RTN","RCDPENRU",192,0)
 S RCSUB=$$GET1^DIQ(344.91,+RCIEN_",",".01","E")
"RTN","RCDPENRU",193,0)
 ;
"RTN","RCDPENRU",194,0)
 ;Confirm the resend
"RTN","RCDPENRU",195,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPENRU",196,0)
 S DIR("A")="Are you sure you want to transmit this report? "
"RTN","RCDPENRU",197,0)
 D ^DIR K DIR
"RTN","RCDPENRU",198,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q
"RTN","RCDPENRU",199,0)
 ;
"RTN","RCDPENRU",200,0)
 ;Transmit
"RTN","RCDPENRU",201,0)
 S RCXMZ=$$XM(+RCIEN,RCBGDT,RCENDDT,RCSUB)
"RTN","RCDPENRU",202,0)
 ;
"RTN","RCDPENRU",203,0)
 ;Check for success
"RTN","RCDPENRU",204,0)
 I $G(RCXMZ) W " Done."
"RTN","RCDPENRU",205,0)
 E  D  G:Y MAN2A
"RTN","RCDPENRU",206,0)
 .S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPENRU",207,0)
 .S DIR("A")="The DM extract message failed to transmit...try again"
"RTN","RCDPENRU",208,0)
 .W !,*7 D ^DIR K DIR
"RTN","RCDPENRU",209,0)
 .I $D(DTOUT)!$D(DUOUT)!(Y="")  Q
"RTN","RCDPENRU",210,0)
 ;
"RTN","RCDPENRU",211,0)
 Q
"RTN","RCDPENRU",212,0)
 ;
"RTN","RCDPENRU",213,0)
 ; - DM extract reports message (shown when DM Menu is called up).
"RTN","RCDPENRU",214,0)
MSG ;
"RTN","RCDPENRU",215,0)
 N RCDT,RCDT1,RCST,RCN,RCIEN,RCFLG,RCNAME
"RTN","RCDPENRU",216,0)
 ;
"RTN","RCDPENRU",217,0)
 W @IOF
"RTN","RCDPENRU",218,0)
 S RCDT=$$M1^RCDPENR4(DT,1),RCDT1=$$M1^RCDPENR4(RCDT,3)
"RTN","RCDPENRU",219,0)
 S RCIEN=0,RCFLG=0
"RTN","RCDPENRU",220,0)
 F  S RCIEN=$O(^RCDM(344.91,"C",RCDT,RCIEN)) Q:'RCIEN  D
"RTN","RCDPENRU",221,0)
 . S RCN=$G(^RCDM(344.91,RCDT,0)),RCNAME=$P(RCN,U),RCST=$P(RCN,U,3) I 'RCST G ENQ
"RTN","RCDPENRU",222,0)
 . I RCST=1 D  Q
"RTN","RCDPENRU",223,0)
 . . W !,"The "_RCNAME_" DM extract process for ",RCDT1," was initiated on "
"RTN","RCDPENRU",224,0)
 . . W $$M1^RCDPENR4($P(RCN,U,4),3),!,"but it hasn't run yet.",!
"RTN","RCDPENRU",225,0)
 . . D MSQ
"RTN","RCDPENRU",226,0)
 . ;
"RTN","RCDPENRU",227,0)
 . I RCST=3 D  Q
"RTN","RCDPENRU",228,0)
 . . W !,"The "_RCNAME_" DM report data for ",IBDT1," has been successfully"
"RTN","RCDPENRU",229,0)
 . . W !,"extracted on ",$$M1^RCDPENR4($P(RCN,U,5),3),". This data has been"
"RTN","RCDPENRU",230,0)
 . . W !,"sent to the Central Collections mail group in FORUM.",*7
"RTN","RCDPENRU",231,0)
 . ; Set array of reports that are not completed or on standby
"RTN","RCDPENRU",232,0)
 . S ^TMP("RCDPENRU",$J,"DM",RCIEN)=""
"RTN","RCDPENRU",233,0)
 I $D(^TMP("RCDPENRU",$J,"DM")) D MSG1(RCDT,RCDT1)
"RTN","RCDPENRU",234,0)
 K ^TMP("RCDPENRU",$J)
"RTN","RCDPENRU",235,0)
 Q
"RTN","RCDPENRU",236,0)
 ;
"RTN","RCDPENRU",237,0)
 ; Output those currently started.
"RTN","RCDPENRU",238,0)
MSG1(RCDT,RCDT1) ;
"RTN","RCDPENRU",239,0)
 ;
"RTN","RCDPENRU",240,0)
 N RCIEN
"RTN","RCDPENRU",241,0)
 ;
"RTN","RCDPENRU",242,0)
 W !
"RTN","RCDPENRU",243,0)
 D MSH(RCDT1)
"RTN","RCDPENRU",244,0)
 W !
"RTN","RCDPENRU",245,0)
 S RCIEN=0
"RTN","RCDPENRU",246,0)
 F  S RCIEN=$O(^TMP("RCDPENRU",$J,"DM",RCIEN)) Q:RCIEN=""  D
"RTN","RCDPENRU",247,0)
 . S RCDATA=$G(^RCDM(344.91,RCIEN,0))
"RTN","RCDPENRU",248,0)
 . Q:'RCDATA
"RTN","RCDPENRU",249,0)
 . I $Y'<(IOSL-14) R X:DTIME
"RTN","RCDPENRU",250,0)
 . S RCSTAT=$$GET1^DIQ(344.91,RCIEN_",",.03,"E") ; Get the external display for the status
"RTN","RCDPENRU",251,0)
 . S RCNAME=$P(RCDATA,U)
"RTN","RCDPENRU",252,0)
 . W RCDT1,?12,RCNAME,?35,RCSTAT,!
"RTN","RCDPENRU",253,0)
 Q
"RTN","RCDPENRU",254,0)
 ;
"RTN","RCDPENRU",255,0)
 ; Restart Message
"RTN","RCDPENRU",256,0)
MSQ ;
"RTN","RCDPENRU",257,0)
 W !,"If you want, you can restart the DM extract process"
"RTN","RCDPENRU",258,0)
 W !,"by using the ""Manually Start DM Extraction"" option in"
"RTN","RCDPENRU",259,0)
 W !,"the Diagnostic Measures Extract Menu."
"RTN","RCDPENRU",260,0)
 Q
"RTN","RCDPENRU",261,0)
 ;
"RTN","RCDPENRU",262,0)
MSH(RCDT1) ; - DM extract reports message header.
"RTN","RCDPENRU",263,0)
 W !,"Data for the following DM reports have not been extracted"
"RTN","RCDPENRU",264,0)
 W !," for ",RCDT1,":",!!,*7
"RTN","RCDPENRU",265,0)
 Q
"RTN","RCDPENRU",266,0)
 ;
"RTN","RCDPENRU",267,0)
CHK ; - Check file #344.91 for completed and/or transmitted DM extracts
"RTN","RCDPENRU",268,0)
 ;   (shown when DM Extract Menu is called up).
"RTN","RCDPENRU",269,0)
 N RCDT,RCDATA,RCDATE,RCENDDT,RCNEXDT,RCDONE,RCMSARY,RCVS,RCTR,RCI,RCJ,RCEMARY
"RTN","RCDPENRU",270,0)
 N RCINCARY,RCMSG,RCRPTYPE,RCTREM,RCTRST,RCVSEM,RCVSST,RCJD,RCQ,RC0
"RTN","RCDPENRU",271,0)
 ;
"RTN","RCDPENRU",272,0)
 S RCDT=$$DT^XLFDT,RCI=0
"RTN","RCDPENRU",273,0)
 F  S RCI=$O(^RCDM(344.91,"C",RCI)) Q:'RCI  D
"RTN","RCDPENRU",274,0)
 . ; - Check to see if next month is missing from file, if any.
"RTN","RCDPENRU",275,0)
 . S RCNEXDT=RCI+$S($E(RCI,4,5)=12:8900,1:100)
"RTN","RCDPENRU",276,0)
 . I $D(^RCDM(344.91,"C",RCNEXDT))!(RCNEXDT>RCDT) Q
"RTN","RCDPENRU",277,0)
 . ;
"RTN","RCDPENRU",278,0)
 . S RCDONE=0
"RTN","RCDPENRU",279,0)
 . ;check for any future missing dates between the current and next days run.
"RTN","RCDPENRU",280,0)
 . F  Q:RCDONE  D
"RTN","RCDPENRU",281,0)
 . . S RCNEXDT=RCNEXDT+$S($E(RCNEXDT,4,5)=12:8900,1:100)
"RTN","RCDPENRU",282,0)
 . . I $D(^RCDM(344.91,"C",RCNEXDT))!(RCNEXDT>RCDT) S RCDONE=1 Q
"RTN","RCDPENRU",283,0)
 . . ;
"RTN","RCDPENRU",284,0)
 . . ;Date missing update missing array for both reports.
"RTN","RCDPENRU",285,0)
 . . S RCMSARY("VS",RCNEXDT)="",RCMSARY("TR",RCNEXDT)=""
"RTN","RCDPENRU",286,0)
 . ;
"RTN","RCDPENRU",287,0)
 . ;init loop variable and report missing flags to 1 (missing)
"RTN","RCDPENRU",288,0)
 . S RCJ=0,RCVS=1,RCTR=1
"RTN","RCDPENRU",289,0)
 . F  S RCJ=$O(^RCDM(344.91,"C",RCI,RCJ)) Q:'RCJ  D 
"RTN","RCDPENRU",290,0)
 . . S RCJD=$G(^RCDM(344.91,RCJ,0))
"RTN","RCDPENRU",291,0)
 . . S RCRPT=$P(RCJD,U)
"RTN","RCDPENRU",292,0)
 . . S RCRPTYPE=$S(RCRPT="VOLUME STATISTICS":"VS",1:"TR")
"RTN","RCDPENRU",293,0)
 . . I RCRPT="VOLUME STATISTICS" S RCVS=0 Q
"RTN","RCDPENRU",294,0)
 . . I RCRPT="EFT/ERA TRENDING REPORT" S RCTR=0
"RTN","RCDPENRU",295,0)
 . ;
"RTN","RCDPENRU",296,0)
 . ;update missing array
"RTN","RCDPENRU",297,0)
 . S:RCVS RCMSARY("VS",RCI)=""
"RTN","RCDPENRU",298,0)
 . S:RCTR RCMSARY("TR",RCI)=""
"RTN","RCDPENRU",299,0)
 . ;
"RTN","RCDPENRU",300,0)
 . ;check status of reports to report completion, transmission issues
"RTN","RCDPENRU",301,0)
 . ;init loop variable and report missing flags to 1 (missing)
"RTN","RCDPENRU",302,0)
 . S RCJ=0,RCVSST=1,RCTRST=1,RCVSEM=1,RCTREM=1
"RTN","RCDPENRU",303,0)
 . F  S RCJ=$O(^RCDM(344.91,"C",RCI,RCJ)) Q:'RCJ  D 
"RTN","RCDPENRU",304,0)
 . . S RCJD=$G(^RCDM(344.91,RCJ,0))
"RTN","RCDPENRU",305,0)
 . . S RCRPT=$P(RCJD,U),RCSTAT=$P(RCJD,U,3),RCMSG=$P(RCJD,U,7)
"RTN","RCDPENRU",306,0)
 . . S RCRPTYPE=$S(RCRPT="VOLUME STATISTICS":"VS",1:"TR")
"RTN","RCDPENRU",307,0)
 . . I RCSTAT'=3 S RCINCARY(RCRPTYPE,RCI)=""
"RTN","RCDPENRU",308,0)
 . . I 'RCMSG S RCEMARY(RCRPTYPE,RCI)=""
"RTN","RCDPENRU",309,0)
 ;
"RTN","RCDPENRU",310,0)
 I '$D(RCMSARY),'$D(RCINCARY),'$D(RCEMARY) W "Done" Q
"RTN","RCDPENRU",311,0)
 ;
"RTN","RCDPENRU",312,0)
 ;Report what dates are missing for which reports, which are incomplete and which were not sent
"RTN","RCDPENRU",313,0)
 ;
"RTN","RCDPENRU",314,0)
 I $D(RCMSARY) D
"RTN","RCDPENRU",315,0)
 . S RCJ=0 F  S RCJ=$O(RCMSARY(RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",316,0)
 . . S RCQ=$S(RCJ="TR":"EFT/ERA TRENDING REPORT",1:"VOLUME STATISTICS")
"RTN","RCDPENRU",317,0)
 . . I $D(RCMSARY(RCJ))=10 W !!,"The "_RCQ_" data has NOT been fully extracted for these months:",!,*7
"RTN","RCDPENRU",318,0)
 . . S RC0=0 F  S RC0=$O(RCMSARY(RCJ,RC0)) Q:'RC0  W "  ",$$M1^RCDPENR4(RC0,3)
"RTN","RCDPENRU",319,0)
 . W !,"If you want, you can start the DM extract process for these"
"RTN","RCDPENRU",320,0)
 . W !,"months by using the ""Manually Start DM Extraction"" option."
"RTN","RCDPENRU",321,0)
 ;
"RTN","RCDPENRU",322,0)
 I $D(RCINCARY) D
"RTN","RCDPENRU",323,0)
 . S RCJ=0 F  S RCJ=$O(RCINCARY(RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",324,0)
 . . S RCQ=$S(RCJ="TR":"EFT/ERA TRENDING REPORT",1:"VOLUME STATISTICS")
"RTN","RCDPENRU",325,0)
 . . I $D(RCINCARY(RCJ))=10 W !!,"The "_RCQ_" data has NOT been transmitted for these months:",!,*7
"RTN","RCDPENRU",326,0)
 . . S RC0=0 F  S RC0=$O(RCINCARY(RCJ,RC0)) Q:'RC0  W "  ",$$M1^RCDPENR4(RC0,3)
"RTN","RCDPENRU",327,0)
 . W !,"If you want, you can re-transmit the DM extract data for these"
"RTN","RCDPENRU",328,0)
 . W !,"months by using the ""Manually Transmit DM Extract"" option."
"RTN","RCDPENRU",329,0)
 ;
"RTN","RCDPENRU",330,0)
 I $D(RCEMARY) D
"RTN","RCDPENRU",331,0)
 . S RCJ=0 F  S RCJ=$O(RCEMARY(RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",332,0)
 . . S RCQ=$S(RCJ="TR":"EFT/ERA TRENDING REPORT",1:"VOLUME STATISTICS")
"RTN","RCDPENRU",333,0)
 . . I $D(RCEMARY(RCJ))=10 W !!,"The "_RCQ_" data has NOT stored an email message for these months:",!,*7
"RTN","RCDPENRU",334,0)
 . . S RC0=0 F  S RC0=$O(RCEMARY(RCJ,RC0)) Q:'RC0  W "  ",$$M1^RCDPENR4(RC0,3)
"RTN","RCDPENRU",335,0)
 . W !,"If you want, you can re-transmit the DM extract data for these"
"RTN","RCDPENRU",336,0)
 . W !,"months by using the ""Manually Transmit DM Extract"" option."
"RTN","RCDPENRU",337,0)
 ;
"RTN","RCDPENRU",338,0)
 Q
"RTN","RCDPENRU",339,0)
XM(RCDMIEN,RCBEGDT,RCENDDT,XMSUB) ; - Create/transmit DM extract file message.
"RTN","RCDPENRU",340,0)
 N DA,DIE,DR,RCSTE,X,Y,XMTEXT,XMDUZ,DT,CT,XMZ,RCJ,DT,DT1,DTRNG,RCXMZ,RCMG
"RTN","RCDPENRU",341,0)
 S RCXMZ=0
"RTN","RCDPENRU",342,0)
 K ^TMP("RCDPENRU",$J) S RCXMZ=0,DT=$$DT^XLFDT,RCSTE=$$SITE^VASITE,X=$E(DT,4,7)_(1700+$E(DT,1,3))
"RTN","RCDPENRU",343,0)
 S ^TMP("RCDPENRU",$J,1)="HDR^"_$P(RCSTE,U,3)_U_$P(RCSTE,U,2)_U_X
"RTN","RCDPENRU",344,0)
 S CT=1,RCJ=0
"RTN","RCDPENRU",345,0)
 S DTRNG=$E(RCBEGDT,4,7)_(1700+$E(RCBEGDT,1,3))_"~"_$E(RCENDDT,4,7)_(1700+$E(RCBEGDT,1,3))
"RTN","RCDPENRU",346,0)
 ; Build the body of the message
"RTN","RCDPENRU",347,0)
 F  S RCJ=$O(^RCDM(344.91,RCDMIEN,1,RCJ)) Q:'RCJ  D
"RTN","RCDPENRU",348,0)
 . S CT=CT+1
"RTN","RCDPENRU",349,0)
 . S ^TMP("RCDPENRU",$J,CT)="DAT~"_DTRNG_"^"_$G(^RCDM(344.91,RCDMIEN,1,RCJ,0))
"RTN","RCDPENRU",350,0)
 ;
"RTN","RCDPENRU",351,0)
 S ^TMP("RCDPENRU",$J,CT+1)="END^"_$P(RCSTE,U,3)
"RTN","RCDPENRU",352,0)
 S XMSUB=XMSUB_"-"_DTRNG_" ("_$P(RCSTE,U,2)_")"
"RTN","RCDPENRU",353,0)
 ;
"RTN","RCDPENRU",354,0)
 S RCMG=$P($G(^IBE(350.9,1,4)),U,5)
"RTN","RCDPENRU",355,0)
 Q:RCMG="" RCXMZ
"RTN","RCDPENRU",356,0)
 ;
"RTN","RCDPENRU",357,0)
 S XMDUZ="ACCOUNTS RECEIVABLE PACKAGE"
"RTN","RCDPENRU",358,0)
 S XMTEXT="^TMP(""RCDPENRU"",$J,",XMY(RCMG)=""
"RTN","RCDPENRU",359,0)
 S XMTEXT="^TMP(""RCDPENRU"",$J,",XMY(RCMG)=""
"RTN","RCDPENRU",360,0)
 D SEND
"RTN","RCDPENRU",361,0)
 ;
"RTN","RCDPENRU",362,0)
 I $G(XMZ) S RCXMZ=XMZ,DIE="^RCDM(344.91,",DA=RCDMIEN,DR=".03///3;.07///1;.06///"_XMZ D ^DIE
"RTN","RCDPENRU",363,0)
 ;
"RTN","RCDPENRU",364,0)
 Q RCXMZ
"RTN","RCDPENRU",365,0)
 ;
"RTN","RCDPENRU",366,0)
ENQ K IB2,IBDT2,IBD1,IBD2,IBDT,IBFL,IBFR,IBN,IBS,IBST,IBST1,IBX,IBX1,BY,DHD
"RTN","RCDPENRU",367,0)
 K DIC,DIOEND,FLDS,FR,IOP,L,TO,X,XMZ,Y,%
"RTN","RCDPENRU",368,0)
ENQ1 K IB0,IB1,IBC,IBDT1,IBMG,IBSTE,XMSUB,XMTEXT,XMY,^TMP("DME",$J)
"RTN","RCDPENRU",369,0)
 Q
"RTN","RCDPENRU",370,0)
 ;
"RTN","RCDPENRU",371,0)
SEND ; Calls ^XMD to send the mail message with the data extracted
"RTN","RCDPENRU",372,0)
 ; Obs: By NEWing DUZ, ^XMD will assume DUZ=.5 (Sender=POSTMASTER)
"RTN","RCDPENRU",373,0)
 ;
"RTN","RCDPENRU",374,0)
 N DUZ D ^XMD
"RTN","RCDPENRU",375,0)
 Q
"RTN","RCDPENRU",376,0)
 ;
"RTN","RCDPENRU",377,0)
 ; Pass RCPAY by reference
"RTN","RCDPENRU",378,0)
GETPAY(RCPAY) ; Get payer information
"RTN","RCDPENRU",379,0)
 N EX,RCLPAY,DTOUT,DUOUT,X,Y,DIR,DIRUT,DIROUT
"RTN","RCDPENRU",380,0)
 S EX=1 ; Exit status
"RTN","RCDPENRU",381,0)
 S DIR("A")="Select (A)ll or (R)ange of Payer Names?: ",DIR(0)="SA^A:All Payer Names;R:Range or List of Payer Names"
"RTN","RCDPENRU",382,0)
 S DIR("B")="ALL" D ^DIR K DIR
"RTN","RCDPENRU",383,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S EX=0 Q EX
"RTN","RCDPENRU",384,0)
 S RCLPAY=Y I $G(Y)="A" S RCPAY="ALL",RCPAY("DATA")="ALL" G GPO
"RTN","RCDPENRU",385,0)
 ; Get Range of Payers from Insurance file
"RTN","RCDPENRU",386,0)
 I RCLPAY="R" S EX=$$GETRANG(.RCPAY,"P"),RCPAY="R"
"RTN","RCDPENRU",387,0)
GPO ;
"RTN","RCDPENRU",388,0)
 Q EX
"RTN","RCDPENRU",389,0)
 ;
"RTN","RCDPENRU",390,0)
 ; RTNARR - Indirect Return array
"RTN","RCDPENRU",391,0)
 ; TYPE - The type of lookup "P" - Payer; "T" - TIN
"RTN","RCDPENRU",392,0)
GETRANG(RTNARR,TYPE) ;
"RTN","RCDPENRU",393,0)
 N DIC,D,RCDTN,RCDN,RCPT,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,IDX
"RTN","RCDPENRU",394,0)
 I $G(TYPE)=""!("PT"'[$G(TYPE)) S RTNARR="ERROR" Q  ; Quit if TYPE not correct
"RTN","RCDPENRU",395,0)
 S IDX=$S(TYPE="P":"B",TYPE="T":"C")
"RTN","RCDPENRU",396,0)
 K DIC S DIC="^DIC(36,",DIC(0)="AES",D=IDX
"RTN","RCDPENRU",397,0)
 S DIC("A")="Start with "_$S(TYPE="P":"Payer Name",TYPE="T":"Payer TIN")_": "
"RTN","RCDPENRU",398,0)
 I TYPE="P" S DIC("W")=""
"RTN","RCDPENRU",399,0)
 E  S DIC("W")="D EN^DDIOL($P(^(0),U,1),,""?35"")"
"RTN","RCDPENRU",400,0)
 D IX^DIC I $D(DTOUT)!$D(DUOUT)!(Y="")!(Y=-1) Q 0
"RTN","RCDPENRU",401,0)
 S RCDN=$O(^DIC(36,IDX,X,""))
"RTN","RCDPENRU",402,0)
 S RTNARR("START")=RCDN_U_X_U_Y,RTNARR("DATA")=X
"RTN","RCDPENRU",403,0)
 ;
"RTN","RCDPENRU",404,0)
 K DIC S DIC="^DIC(36,",DIC(0)="AES",D=IDX
"RTN","RCDPENRU",405,0)
 S DIC("A")="Go to with "_$S(TYPE="P":"Payer Name",TYPE="T":"Payer TIN")_": "
"RTN","RCDPENRU",406,0)
 I TYPE="P" S DIC("W")=""
"RTN","RCDPENRU",407,0)
 E  S DIC("W")="D EN^DDIOL($P(^(0),U,1),,""?35"")"
"RTN","RCDPENRU",408,0)
 D IX^DIC I $D(DTOUT)!$D(DUOUT)!(Y="")!(Y=-1) Q 0
"RTN","RCDPENRU",409,0)
 S RCDN=$O(^DIC(36,IDX,X,""))
"RTN","RCDPENRU",410,0)
 S RTNARR("END")=RCDN_U_X_U_Y
"RTN","RCDPENRU",411,0)
 I TYPE="P" S RTNARR("DATA")=$P(RTNARR("START"),U,4)_":"_$P(RTNARR("END"),U,4)
"RTN","RCDPENRU",412,0)
 I TYPE="T" S RTNARR("DATA")=$P(RTNARR("START"),U,2)_":"_$P(RTNARR("END"),U,2)
"RTN","RCDPENRU",413,0)
 Q 1
"RTN","RCDPENRU",414,0)
 ;
"RTN","RCDPENRU",415,0)
 ;Retrieve a list of valid payers
"RTN","RCDPENRU",416,0)
GETPAYER(RCPYRLST) ;
"RTN","RCDPENRU",417,0)
 ;
"RTN","RCDPENRU",418,0)
 N RCANS
"RTN","RCDPENRU",419,0)
 ;
"RTN","RCDPENRU",420,0)
 ; Initialize start and end nodes in array
"RTN","RCDPENRU",421,0)
 S (RCPYRLST("START"),RCPYRLST("END"))=""
"RTN","RCDPENRU",422,0)
 ;
"RTN","RCDPENRU",423,0)
 ; Ask user whether they wish to see All payers, a specific Payer, or a range of payers
"RTN","RCDPENRU",424,0)
 S RCANS=$$GETANS(1)
"RTN","RCDPENRU",425,0)
 I RCANS=-1 S RCPYRLST("QUIT")="" Q
"RTN","RCDPENRU",426,0)
 ;
"RTN","RCDPENRU",427,0)
 ; Exit if user wants all payers
"RTN","RCDPENRU",428,0)
 Q:$E(RCANS)="A"
"RTN","RCDPENRU",429,0)
 ;
"RTN","RCDPENRU",430,0)
 ; Get the payer if the user wishes a single payer
"RTN","RCDPENRU",431,0)
 I RCANS="S" D  Q
"RTN","RCDPENRU",432,0)
 . S RCANS=$$GETANS(2)
"RTN","RCDPENRU",433,0)
 . I RCANS=-1 S RCPYRLST("QUIT")="" Q
"RTN","RCDPENRU",434,0)
 . S (RCPYRLST("START"),RCPYRLST("END"))=RCANS
"RTN","RCDPENRU",435,0)
 ;
"RTN","RCDPENRU",436,0)
 ; User wishes a range, Get the Beginning payer
"RTN","RCDPENRU",437,0)
 S RCANS=$$GETANS(3)
"RTN","RCDPENRU",438,0)
 I RCANS=-1 S RCPYRLST("QUIT")="" Q
"RTN","RCDPENRU",439,0)
 S RCPYRLST("START")=$$UP^XLFSTR(RCANS)
"RTN","RCDPENRU",440,0)
 ;
"RTN","RCDPENRU",441,0)
 ; Get the ending payer
"RTN","RCDPENRU",442,0)
 S RCANS=$$GETANS(4)
"RTN","RCDPENRU",443,0)
 I RCANS=-1 S RCPYRLST("QUIT")="" Q
"RTN","RCDPENRU",444,0)
 S RCPYRLST("END")=$$UP^XLFSTR(RCANS)
"RTN","RCDPENRU",445,0)
 ;
"RTN","RCDPENRU",446,0)
 Q
"RTN","RCDPENRU",447,0)
 ;
"RTN","RCDPENRU",448,0)
 ;Get users answers to questions for reports.
"RTN","RCDPENRU",449,0)
GETANS(RCIDX) ;
"RTN","RCDPENRU",450,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPENRU",451,0)
 ;
"RTN","RCDPENRU",452,0)
 ; Ask the user what kind of report
"RTN","RCDPENRU",453,0)
 I RCIDX=1 D
"RTN","RCDPENRU",454,0)
 . S DIR("?")="Select to (A) to see All payers on the report or (R) for a range of payers."
"RTN","RCDPENRU",455,0)
 . S DIR("A")="(A)LL PAYERS, (R)ANGE OF PAYER NAMES: "
"RTN","RCDPENRU",456,0)
 . ;S DIR("S")="A:ALL;S:SINGLE;R:RANGE"
"RTN","RCDPENRU",457,0)
 . S DIR("B")="ALL",DIR(0)="SA^A:ALL;R:RANGE"
"RTN","RCDPENRU",458,0)
 ;
"RTN","RCDPENRU",459,0)
 ; Ask the user for the Payer to report on (Single Payer option)
"RTN","RCDPENRU",460,0)
 I RCIDX=2 Q $$SPAY^RCDPENR4
"RTN","RCDPENRU",461,0)
 ;
"RTN","RCDPENRU",462,0)
 ; Ask the user for the payer to start the reporting on (Range Option)
"RTN","RCDPENRU",463,0)
 I RCIDX=3 D
"RTN","RCDPENRU",464,0)
 . S DIR("?")="Enter the first Payer name to run this report on."
"RTN","RCDPENRU",465,0)
 . S DIR("A")="Select First Payer: ",DIR(0)="FA"
"RTN","RCDPENRU",466,0)
 ;
"RTN","RCDPENRU",467,0)
 ; Ask the user for the payer to end the reporting on (Range Option)
"RTN","RCDPENRU",468,0)
 I RCIDX=4 D
"RTN","RCDPENRU",469,0)
 . S DIR("?")="Enter the last Payer name to run this report on."
"RTN","RCDPENRU",470,0)
 . S DIR("A")="Select Last Payer: ",DIR(0)="FA"
"RTN","RCDPENRU",471,0)
 ;
"RTN","RCDPENRU",472,0)
 I RCIDX=5 D
"RTN","RCDPENRU",473,0)
 . S DIR("?")="Select to (A) to see All Payer TINs on the report, or (R) for a Range of Payer TINs."
"RTN","RCDPENRU",474,0)
 . S DIR("A")="SELECT (A)LL PAYER TINs, (R)ANGE of PAYER TINs: "
"RTN","RCDPENRU",475,0)
 . ;S DIR("S")="A:All;R:Range"
"RTN","RCDPENRU",476,0)
 . S DIR("B")="ALL",DIR(0)="SA^A:ALL;R:RANGE"
"RTN","RCDPENRU",477,0)
 ;
"RTN","RCDPENRU",478,0)
 I $G(DIR(0))="" S DIR(0)="FA"
"RTN","RCDPENRU",479,0)
 D ^DIR
"RTN","RCDPENRU",480,0)
 K DIR
"RTN","RCDPENRU",481,0)
 I ($D(DIRUT))!($D(DUOUT)) S Y=-1
"RTN","RCDPENRU",482,0)
 I Y="N" S Y=-1
"RTN","RCDPENRU",483,0)
 Q Y
"RTN","RCDPENRU",484,0)
 ;
"RTN","RCDPENRU",485,0)
 ; Compile the list of payers.  The Payer IENS are extracted
"RTN","RCDPENRU",486,0)
PYRARY(RCSTART,RCEND,RCSWITCH) ;
"RTN","RCDPENRU",487,0)
 ;
"RTN","RCDPENRU",488,0)
 ;RCSTART - The text to start the search for insurance companies
"RTN","RCDPENRU",489,0)
 ;RCEND - The text to end the search for insurance companies,
"RTN","RCDPENRU",490,0)
 ;RCSWITCH - A flag to indicate which file to perform the insurance lookup
"RTN","RCDPENRU",491,0)
 ;           1 or Null) RCDPE AUTO-PAY EXCLUSION FILE (#344.6)
"RTN","RCDPENRU",492,0)
 ;                   2) INSURANCE COMPANY FILE (#36)
"RTN","RCDPENRU",493,0)
 ;
"RTN","RCDPENRU",494,0)
 N RCI,RCJ,RCFILE
"RTN","RCDPENRU",495,0)
 ;
"RTN","RCDPENRU",496,0)
 ; Clear any older data out of the array.
"RTN","RCDPENRU",497,0)
 K ^TMP("RCDPEADP",$J,"INS")
"RTN","RCDPENRU",498,0)
 ;
"RTN","RCDPENRU",499,0)
 ; If start and end are NULL, then User wishes all payers, set flag and quit
"RTN","RCDPENRU",500,0)
 I (RCSTART=""),(RCEND="") S ^TMP("RCDPEADP",$J,"INS","A")="" Q
"RTN","RCDPENRU",501,0)
 ;
"RTN","RCDPENRU",502,0)
 I $G(RCSWITCH)=2 D INSLKUP(RCSTART,RCEND) Q
"RTN","RCDPENRU",503,0)
 ;
"RTN","RCDPENRU",504,0)
 ; If single payer, find the IEN if it exists and post it.
"RTN","RCDPENRU",505,0)
 I RCSTART=RCEND D  Q
"RTN","RCDPENRU",506,0)
 . S RCJ=""
"RTN","RCDPENRU",507,0)
 . F  S RCJ=$O(^RCY(344.6,"B",RCSTART,RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",508,0)
 . . S ^TMP("RCDPEADP",$J,"INS",RCJ)=""
"RTN","RCDPENRU",509,0)
 ;
"RTN","RCDPENRU",510,0)
 ; For a range of payers, loop through the Payer name list until 
"RTN","RCDPENRU",511,0)
 ; you reach the last payer in the range (RCEND)
"RTN","RCDPENRU",512,0)
 ;
"RTN","RCDPENRU",513,0)
 S RCI=$O(^RCY(344.6,"B",RCSTART),-1)    ; Set the starting location for the loop
"RTN","RCDPENRU",514,0)
 F  S RCI=$O(^RCY(344.6,"B",RCI)) Q:RCI=""  Q:(RCI]RCEND)  D
"RTN","RCDPENRU",515,0)
 . S RCJ=""
"RTN","RCDPENRU",516,0)
 . F  S RCJ=$O(^RCY(344.6,"B",RCI,RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",517,0)
 . . S ^TMP("RCDPEADP",$J,"INS",RCJ)=""
"RTN","RCDPENRU",518,0)
 ;
"RTN","RCDPENRU",519,0)
 Q
"RTN","RCDPENRU",520,0)
 ;
"RTN","RCDPENRU",521,0)
 ; Check to see if the Payer is in the list of Payers to process
"RTN","RCDPENRU",522,0)
INSCHK(RCINSIEN) ;
"RTN","RCDPENRU",523,0)
 ;Return value 0 - No, not in list or 1 - Yes in list
"RTN","RCDPENRU",524,0)
 ;
"RTN","RCDPENRU",525,0)
 ; If all payers are supposed to be process, then send back a 1
"RTN","RCDPENRU",526,0)
 Q:$D(^TMP("RCDPEADP",$J,"INS","A")) 1
"RTN","RCDPENRU",527,0)
 ;
"RTN","RCDPENRU",528,0)
 ; If the payer is in the list of payers, send back yes
"RTN","RCDPENRU",529,0)
 Q:$D(^TMP("RCDPEADP",$J,"INS",RCINSIEN)) 1
"RTN","RCDPENRU",530,0)
 ;
"RTN","RCDPENRU",531,0)
 ;Payer not in list, quit with No
"RTN","RCDPENRU",532,0)
 Q 0
"RTN","RCDPENRU",533,0)
 ;
"RTN","RCDPENRU",534,0)
 ; Compile the list of payers from the Insurance File.  The Payer IENS are extracted
"RTN","RCDPENRU",535,0)
INSLKUP(RCSTART,RCEND) ;
"RTN","RCDPENRU",536,0)
 ;
"RTN","RCDPENRU",537,0)
 ;RCSTART - The text to start the search for insurance companies
"RTN","RCDPENRU",538,0)
 ;RCEND - The text to end the search for insurance companies,
"RTN","RCDPENRU",539,0)
 ;
"RTN","RCDPENRU",540,0)
 N RCI,RCJ
"RTN","RCDPENRU",541,0)
 ;
"RTN","RCDPENRU",542,0)
 S RCI=RCSTART
"RTN","RCDPENRU",543,0)
 ;
"RTN","RCDPENRU",544,0)
 ;Loop through the Payer name list until you reach the last payer in the range (RCEND)
"RTN","RCDPENRU",545,0)
INSLP ;
"RTN","RCDPENRU",546,0)
 S RCJ=""
"RTN","RCDPENRU",547,0)
 F  S RCJ=$O(^DIC(36,"B",RCI,RCJ)) Q:RCJ=""  D
"RTN","RCDPENRU",548,0)
 . S ^TMP("RCDPEADP",$J,"INS",RCJ)=""
"RTN","RCDPENRU",549,0)
 S RCI=$O(^DIC(36,"B",RCI))
"RTN","RCDPENRU",550,0)
 G:RCI]RCEND INSQT
"RTN","RCDPENRU",551,0)
 G INSLP
"RTN","RCDPENRU",552,0)
 ;
"RTN","RCDPENRU",553,0)
 ;Work is done, exit
"RTN","RCDPENRU",554,0)
INSQT ;
"RTN","RCDPENRU",555,0)
 Q
"RTN","RCDPENRU",556,0)
 ;
"RTN","RCDPEP")
0^77^B153033159
"RTN","RCDPEP",1,0)
RCDPEP ;AITC/CJE - FLAG PAYERS AS PHARMACY/TRICARE ; 19-APR-2017
"RTN","RCDPEP",2,0)
 ;;4.5;Accounts Receivable;**321,326**;;Build 26
"RTN","RCDPEP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEP",4,0)
 ;
"RTN","RCDPEP",5,0)
EN(FILTER,DATEFILT) ; -- main entry point for RCDPE PAYER FLAGS template
"RTN","RCDPEP",6,0)
 ; Input: FILTER - A=All payers, P=Pharmacy payers, T=Tricare payers,
"RTN","RCDPEP",7,0)
 ; M=Medical (Neither Pharmacy nor Tricare)
"RTN","RCDPEP",8,0)
 ; DATEFILT - Additional Filter by Date. Has 3 pieces by '^'
"RTN","RCDPEP",9,0)
 ;            Piece 1 - 1=Filter by date, 0=Don't
"RTN","RCDPEP",10,0)
 ;            Piece 2 - START - First DATE ADDED to include(FM format)
"RTN","RCDPEP",11,0)
 ;            Piece 3 - END - Last DATE ADDED to include (FM format)
"RTN","RCDPEP",12,0)
 ; 
"RTN","RCDPEP",13,0)
 I '$D(DATEFILT) S DATEFILT=$$GETDATE()
"RTN","RCDPEP",14,0)
 I DATEFILT=-1 Q  ;
"RTN","RCDPEP",15,0)
 I '$D(FILTER) S FILTER=$$GETFILT()
"RTN","RCDPEP",16,0)
 I FILTER=-1 Q  ;
"RTN","RCDPEP",17,0)
 ;
"RTN","RCDPEP",18,0)
 D EN^VALM("RCDPE PAYER FLAGS")
"RTN","RCDPEP",19,0)
 Q
"RTN","RCDPEP",20,0)
 ;
"RTN","RCDPEP",21,0)
GETDATE() ; Ask if the user wants to filter by date. If so prompt for start
"RTN","RCDPEP",22,0)
          ; and end dates.
"RTN","RCDPEP",23,0)
 ; Input: None
"RTN","RCDPEP",24,0)
 ; Output: Return value=date filter parameters delimiter by '^'
"RTN","RCDPEP",25,0)
 ;         Piece 1 - 1=Filter by date, 0=Don't
"RTN","RCDPEP",26,0)
 ;         Piece 2 - START - First DATE ADDED to include(FM format)
"RTN","RCDPEP",27,0)
 ;         Piece 3 - END - Last DATE ADDED to include (FM format)
"RTN","RCDPEP",28,0)
 ; 
"RTN","RCDPEP",29,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FD1,FD2,FILTER,OLDDATE,OD1,OD2,RETURN,X,XX,Y
"RTN","RCDPEP",30,0)
 D FULL^VALM1
"RTN","RCDPEP",31,0)
 S VALMBCK="R"
"RTN","RCDPEP",32,0)
 S RETURN="0"
"RTN","RCDPEP",33,0)
 ;
"RTN","RCDPEP",34,0)
 S XX=$P($P($G(XQORNOD(0)),"^",4),"=",2) ; User selection with action
"RTN","RCDPEP",35,0)
 S FD1=$P(XX,";",2),FD2=$P(XX,";",3)
"RTN","RCDPEP",36,0)
 ; See if user selection is valid (must be T + or - N days)
"RTN","RCDPEP",37,0)
 S FD1=$$PARSED(FD1)
"RTN","RCDPEP",38,0)
 S FD2=$$PARSED(FD2)
"RTN","RCDPEP",39,0)
 I FD1,FD2 Q 1_"^"_FD1_"^"_FD2
"RTN","RCDPEP",40,0)
 ;
"RTN","RCDPEP",41,0)
 S OLDDATE=$G(DATEFILT,0)
"RTN","RCDPEP",42,0)
 S OD1=$P(OLDDATE,"^",2),OD2=$P(OLDDATE,"^",3)
"RTN","RCDPEP",43,0)
 ;
"RTN","RCDPEP",44,0)
 S DIR(0)="YA"
"RTN","RCDPEP",45,0)
 S DIR("A")="Filter by Date Added? "
"RTN","RCDPEP",46,0)
 S DIR("B")=$S(OLDDATE:"YES",1:"NO")
"RTN","RCDPEP",47,0)
 S DIR("?",1)="Enter 'Y' or 'Yes' to filter the list by DATE ADDED"
"RTN","RCDPEP",48,0)
 S DIR("?")="Enter 'N' or 'No' if you do not wish to filter the list by date"
"RTN","RCDPEP",49,0)
 D ^DIR
"RTN","RCDPEP",50,0)
 I $D(DIRUT) Q -1
"RTN","RCDPEP",51,0)
 I Y=0 Q 0
"RTN","RCDPEP",52,0)
 S RETURN=1
"RTN","RCDPEP",53,0)
 ;
"RTN","RCDPEP",54,0)
 ; Prompt for start and end date
"RTN","RCDPEP",55,0)
 K DIR
"RTN","RCDPEP",56,0)
 S DIR(0)="DA^"
"RTN","RCDPEP",57,0)
 S DIR("A")="Filter start date: "
"RTN","RCDPEP",58,0)
 ; set default to existing filter start date if it is set.
"RTN","RCDPEP",59,0)
 I OD1'="" S DIR("B")=$$FMTE^XLFDT(OD1,"2DZ")
"RTN","RCDPEP",60,0)
 D ^DIR
"RTN","RCDPEP",61,0)
 I $D(DIRUT) Q -1
"RTN","RCDPEP",62,0)
 S (FD1,$P(RETURN,"^",2))=Y
"RTN","RCDPEP",63,0)
 ;
"RTN","RCDPEP",64,0)
 K DIR
"RTN","RCDPEP",65,0)
 S DIR(0)="DA^"_FD1_":"_DT
"RTN","RCDPEP",66,0)
 S DIR("A")="Filter end date ("
"RTN","RCDPEP",67,0)
 S DIR("A")=DIR("A")_$$FMTE^XLFDT(FD1,"2DZ")_"-"
"RTN","RCDPEP",68,0)
 S DIR("A")=DIR("A")_$$FMTE^XLFDT(DT,"2DZ")_"): "
"RTN","RCDPEP",69,0)
 ; Set default to existing filter end date if it is valid.
"RTN","RCDPEP",70,0)
 ; (it must follow the selected start date). Otherwise default to today.
"RTN","RCDPEP",71,0)
 I OD2'="",OD2'<FD1 S DIR("B")=$$FMTE^XLFDT(OD2,"2DZ")
"RTN","RCDPEP",72,0)
 I '$D(DIR("B")) S DIR("B")="T"
"RTN","RCDPEP",73,0)
 D ^DIR
"RTN","RCDPEP",74,0)
 I $D(DIRUT) Q -1
"RTN","RCDPEP",75,0)
 S (FD2,$P(RETURN,"^",3))=Y
"RTN","RCDPEP",76,0)
 ;
"RTN","RCDPEP",77,0)
 Q RETURN
"RTN","RCDPEP",78,0)
 ;
"RTN","RCDPEP",79,0)
GETFILT() ; Get filter on payer type
"RTN","RCDPEP",80,0)
 ; Input: None
"RTN","RCDPEP",81,0)
 ; Return: Filter type.
"RTN","RCDPEP",82,0)
 ;         A=All payers, P=Pharmacy payers, T=Tricare payers,
"RTN","RCDPEP",83,0)
 ;         M=Medical (Neither Pharmacy nor Tricare)
"RTN","RCDPEP",84,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FILTER,X,XX,Y
"RTN","RCDPEP",85,0)
 ; Check for value specified on protocol
"RTN","RCDPEP",86,0)
 S XX=$P($P($G(XQORNOD(0)),"^",4),"=",2) ; User selection with action
"RTN","RCDPEP",87,0)
 S XX=$E(XX)
"RTN","RCDPEP",88,0)
 I XX'="","APTM"[XX Q XX
"RTN","RCDPEP",89,0)
 ;
"RTN","RCDPEP",90,0)
 S DIR(0)="SA^A:All;P:Pharmacy only;T:Tricare only;M:Medical"
"RTN","RCDPEP",91,0)
 S DIR("A")="Select payers to show. (A)ll, (P)harmacy, (T)ricare, (M)edical: "
"RTN","RCDPEP",92,0)
 S DIR("B")="A"
"RTN","RCDPEP",93,0)
 S DIR("?",1)="Select the type of filter to determine what payers will"
"RTN","RCDPEP",94,0)
 S DIR("?",2)="be displayed as follows:"
"RTN","RCDPEP",95,0)
 S DIR("?",3)=" A - All payers including those with and without a flag"
"RTN","RCDPEP",96,0)
 S DIR("?",4)=" P - Only payers flagged for Pharmacy"
"RTN","RCDPEP",97,0)
 S DIR("?",5)=" T - Only payers flagged for Tricare"
"RTN","RCDPEP",98,0)
 S DIR("?")=" M - Payers NOT flagged for Pharmacy or Tricare"
"RTN","RCDPEP",99,0)
 ; S DIR("??")="RCDPE PAYER FLAGS FILTER"
"RTN","RCDPEP",100,0)
 ;
"RTN","RCDPEP",101,0)
 D ^DIR
"RTN","RCDPEP",102,0)
 I $D(DIRUT) Q -1
"RTN","RCDPEP",103,0)
 Q Y
"RTN","RCDPEP",104,0)
 ;
"RTN","RCDPEP",105,0)
HDR ; EP - header code for RCDPE PAYER FLAGS template
"RTN","RCDPEP",106,0)
 ; Input: Variables FILTER and DATEFILT are assumed to exist
"RTN","RCDPEP",107,0)
 ; Output: ListMan template header in VALMHDR array
"RTN","RCDPEP",108,0)
 ;
"RTN","RCDPEP",109,0)
 ; Show active filters in the template header
"RTN","RCDPEP",110,0)
 N FTEXT
"RTN","RCDPEP",111,0)
 S FTEXT=$S(FILTER="P":"Pharmacy",FILTER="T":"Tricare",FILTER="M":"Medical",1:"All")
"RTN","RCDPEP",112,0)
 S FTEXT=$$UP^XLFSTR(FTEXT)
"RTN","RCDPEP",113,0)
 S FTEXT=FTEXT_" Payers"
"RTN","RCDPEP",114,0)
 I DATEFILT D  ;
"RTN","RCDPEP",115,0)
 . S FTEXT=FTEXT_" added between "
"RTN","RCDPEP",116,0)
 . S FTEXT=FTEXT_$$FMTE^XLFDT($P(DATEFILT,"^",2),"2DZ")
"RTN","RCDPEP",117,0)
 . S FTEXT=FTEXT_" and "_$$FMTE^XLFDT($P(DATEFILT,"^",3),"2DZ")
"RTN","RCDPEP",118,0)
 S VALMHDR(1)="Current Filter: "_FTEXT
"RTN","RCDPEP",119,0)
 Q
"RTN","RCDPEP",120,0)
 ;
"RTN","RCDPEP",121,0)
INIT ; EP - init variables and list array for RCDPE PAYER FLAGS template
"RTN","RCDPEP",122,0)
 ; Input: Variables FILTER and DATEFILT are assumed to exist
"RTN","RCDPEP",123,0)
 ; Output: ^TMP("RCDPEP",$J) - Body lines to display for selected template
"RTN","RCDPEP",124,0)
 ;                             ^TMP($J,"RCDPEPIX") - Index of displayed payers
"RTN","RCDPEP",125,0)
 S SORT="B"
"RTN","RCDPEP",126,0)
 I $G(FILTER)="" S FILTER="A"
"RTN","RCDPEP",127,0)
 I $G(DATEFILT)="" S DATEFILT=0
"RTN","RCDPEP",128,0)
 K ^TMP("RCDPEP",$J),^TMP($J,"RCDPEPIX")
"RTN","RCDPEP",129,0)
 D BLD(SORT,FILTER,DATEFILT)
"RTN","RCDPEP",130,0)
 Q  ;
"RTN","RCDPEP",131,0)
 ;
"RTN","RCDPEP",132,0)
BLD(SORT,FILTER,DATEFILT) ; - Build the listman body template
"RTN","RCDPEP",133,0)
 ; Input: SORT=Index on 344.6 to use for display order
"RTN","RCDPEP",134,0)
 ; FILTER=Filter based on FLAG (see EN subroutine for detail)
"RTN","RCDPEP",135,0)
 ; DATEFILT=Filter based on date added.
"RTN","RCDPEP",136,0)
 N CNT,LINE,LN,XX
"RTN","RCDPEP",137,0)
 D GETPAY(FILTER,DATEFILT) ; get the list of payers sorted and filtered.
"RTN","RCDPEP",138,0)
 S VALMBG=1,VALMCNT=0,LINE="",CNT=""
"RTN","RCDPEP",139,0)
 ;
"RTN","RCDPEP",140,0)
 F  D  Q:CNT=""  ;
"RTN","RCDPEP",141,0)
 . S CNT=$O(^TMP($J,"RCDPEPIX",CNT))
"RTN","RCDPEP",142,0)
 . Q:CNT=""  ;
"RTN","RCDPEP",143,0)
 . S VALMCNT=VALMCNT+1
"RTN","RCDPEP",144,0)
 . D BLD1PAY(CNT)
"RTN","RCDPEP",145,0)
 Q
"RTN","RCDPEP",146,0)
 ;
"RTN","RCDPEP",147,0)
BLD1PAY(PAYCNT) ; (Re)build one payor line into the listman array
"RTN","RCDPEP",148,0)
 ; Input PAYCNT - The sequence number of the payer being built
"RTN","RCDPEP",149,0)
 ; Output - Lines set into template array (^TMP("RCDPEP",$J)).
"RTN","RCDPEP",150,0)
 N DATALN,LINE,XX
"RTN","RCDPEP",151,0)
 S LINE=$$SETSTR^VALM1(" "_PAYCNT,"",1,4)
"RTN","RCDPEP",152,0)
 S DATALN=^TMP($J,"RCDPEPIX",PAYCNT)
"RTN","RCDPEP",153,0)
 S XX=$P(DATALN,"^",2) ; Name
"RTN","RCDPEP",154,0)
 S XX=$E(XX,1,55) ; Truncate name to 55 characters to fit
"RTN","RCDPEP",155,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,6,55)
"RTN","RCDPEP",156,0)
 S XX=$P(DATALN,"^",3) ; Payer ID
"RTN","RCDPEP",157,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,63,10)
"RTN","RCDPEP",158,0)
 S XX=$P(DATALN,"^",5) ; Phamacy payer flag
"RTN","RCDPEP",159,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,75,2)
"RTN","RCDPEP",160,0)
 S XX=$P(DATALN,"^",6) ; Tricare payer flag
"RTN","RCDPEP",161,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,79,2)
"RTN","RCDPEP",162,0)
 S XX=$P(DATALN,"^",4) ; Date added
"RTN","RCDPEP",163,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,82,10)
"RTN","RCDPEP",164,0)
 D SET^VALM10(PAYCNT,LINE,PAYCNT)
"RTN","RCDPEP",165,0)
 S XX=$P(DATALN,"^",7) ; EFT only payer
"RTN","RCDPEP",166,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,93,3)
"RTN","RCDPEP",167,0)
 D SET^VALM10(PAYCNT,LINE,PAYCNT)
"RTN","RCDPEP",168,0)
 Q
"RTN","RCDPEP",169,0)
 ;
"RTN","RCDPEP",170,0)
GETPAY(FILTER,DATEFILT) ; Retrieve the payors sorted and filtered
"RTN","RCDPEP",171,0)
 ; Input: FILTER=Type of filter by Pharmacy or Tricare flag
"RTN","RCDPEP",172,0)
 ; DATEFILT=Filter by date added
"RTN","RCDPEP",173,0)
 ; Output: ^TMP($J,"RCDPEPIX")=PIEN^NAME^PHARMACY_FLAG^TRICARE_FLAG
"RTN","RCDPEP",174,0)
 N CNT,NAME,PIEN
"RTN","RCDPEP",175,0)
 S CNT=0,NAME=""
"RTN","RCDPEP",176,0)
 I $G(SORT)="" S SORT="B"
"RTN","RCDPEP",177,0)
 S FILTER=$G(FILTER)
"RTN","RCDPEP",178,0)
 F  D  Q:NAME=""  ;
"RTN","RCDPEP",179,0)
 . S NAME=$O(^RCY(344.6,SORT,NAME))
"RTN","RCDPEP",180,0)
 . Q:NAME=""
"RTN","RCDPEP",181,0)
 . S PIEN=""
"RTN","RCDPEP",182,0)
 . F  S PIEN=$O(^RCY(344.6,SORT,NAME,PIEN)) Q:PIEN=""  D  ; PRCA*4.5*326
"RTN","RCDPEP",183,0)
 . . I '$$CHKPAY(PIEN,FILTER,DATEFILT) Q  ;
"RTN","RCDPEP",184,0)
 . . S CNT=CNT+1 D GET1PAY(PIEN,CNT)
"RTN","RCDPEP",185,0)
 Q  ;
"RTN","RCDPEP",186,0)
 ;
"RTN","RCDPEP",187,0)
GET1PAY(PIEN,CNT) ; Get the data for one payer and add it to the list
"RTN","RCDPEP",188,0)
 ; Input: PIEN - Internal entry number to file 344.6
"RTN","RCDPEP",189,0)
 ; CNT - Incremental counter
"RTN","RCDPEP",190,0)
 ; Output: ^TMP($J,"RCDPEPIX",CNT)=A1^A2^A3^A4^A5^A6
"RTN","RCDPEP",191,0)
 ; Where A1=PIEN - The payer internal entry number on file 344.6
"RTN","RCDPEP",192,0)
 ;       A2=NAME - The payer name
"RTN","RCDPEP",193,0)
 ;       A3=PAYER ID (also known as TIN)
"RTN","RCDPEP",194,0)
 ;       A4=DATE ADDED
"RTN","RCDPEP",195,0)
 ;       A5=PHARMACY PAYER - A Yes/No/Null field to flag a payer as pharmacy
"RTN","RCDPEP",196,0)
 ;       A6=TRICARE PAYER - A Yes/No/Null filed to flag a payer as tricare
"RTN","RCDPEP",197,0)
 ;
"RTN","RCDPEP",198,0)
 N DATAOUT,DATEA,OUTARR,RCID,RCNAME,RCPF,RCTF
"RTN","RCDPEP",199,0)
 D GETS^DIQ(344.6,PIEN_",",".01;.02;.03;.09;.1","EI","OUTARR")
"RTN","RCDPEP",200,0)
 S RCNAME=OUTARR(344.6,PIEN_",",.01,"E")
"RTN","RCDPEP",201,0)
 S RCID=OUTARR(344.6,PIEN_",",.02,"E")
"RTN","RCDPEP",202,0)
 S DATAOUT=PIEN
"RTN","RCDPEP",203,0)
 S DATAOUT=DATAOUT_"^"_RCNAME ; Name
"RTN","RCDPEP",204,0)
 S DATAOUT=DATAOUT_"^"_RCID ; Payer ID
"RTN","RCDPEP",205,0)
 S DATEA=OUTARR(344.6,PIEN_",",.03,"I") ; Date added
"RTN","RCDPEP",206,0)
 S DATEA=$$FMTE^XLFDT(DATEA,"2DZ") ; Format as MM/DD/YY
"RTN","RCDPEP",207,0)
 S DATAOUT=DATAOUT_"^"_DATEA
"RTN","RCDPEP",208,0)
 S RCPF=$S(OUTARR(344.6,PIEN_",",.09,"I"):"Y",1:"")
"RTN","RCDPEP",209,0)
 S DATAOUT=DATAOUT_"^"_RCPF ; Pharmacy payer flag
"RTN","RCDPEP",210,0)
 S RCTF=$S(OUTARR(344.6,PIEN_",",.1,"I"):"Y",1:"")
"RTN","RCDPEP",211,0)
 S DATAOUT=DATAOUT_"^"_RCTF ; Tricare payer flag
"RTN","RCDPEP",212,0)
 S DATAOUT=DATAOUT_"^"_$S('$D(^RCY(344.4,"APT",RCNAME,RCID)):"YES",1:"") ; EFT ONLY PAYER/TIN 
"RTN","RCDPEP",213,0)
 S ^TMP($J,"RCDPEPIX",CNT)=DATAOUT
"RTN","RCDPEP",214,0)
 Q
"RTN","RCDPEP",215,0)
 ;
"RTN","RCDPEP",216,0)
CHKPAY(PIEN,FILTER,DATEFILT) ; Apply selected filters to a payer
"RTN","RCDPEP",217,0)
 ; Input: PIEN - Internal entry number to file 344.6
"RTN","RCDPEP",218,0)
 ; FILTER - A=All payers, P=Pharmacy payers, T=Tricare payers,
"RTN","RCDPEP",219,0)
 ;          M=Medical (Neither Pharmacy nor Tricare)
"RTN","RCDPEP",220,0)
 ; DATEFILT - Additional Filter by Date. Has 3 pieces by '^'
"RTN","RCDPEP",221,0)
 ;            Piece 1 - 1=Filter by date, 0=Don't
"RTN","RCDPEP",222,0)
 ;            Piece 2 - START - First DATE ADDED to include(FM format)
"RTN","RCDPEP",223,0)
 ;            Piece 3 - END - Last DATE ADDED to include (FM format)
"RTN","RCDPEP",224,0)
 ; Returns: 1 if record matches filter, otherwise 0.
"RTN","RCDPEP",225,0)
 N D1,D2,DC,CREATED,MATCHT,MATCHD,PFLAG,TFLAG
"RTN","RCDPEP",226,0)
 S (MATCHT,MATCHD)=0
"RTN","RCDPEP",227,0)
 I FILTER="A" D  ;
"RTN","RCDPEP",228,0)
 . S MATCHT=1
"RTN","RCDPEP",229,0)
 E  D  ;
"RTN","RCDPEP",230,0)
 . S PFLAG=$$GET1^DIQ(344.6,PIEN_",",.09,"I")
"RTN","RCDPEP",231,0)
 . S TFLAG=$$GET1^DIQ(344.6,PIEN_",",.1,"I")
"RTN","RCDPEP",232,0)
 . I FILTER="P",PFLAG S MATCHT=1
"RTN","RCDPEP",233,0)
 . I FILTER="T",TFLAG S MATCHT=1
"RTN","RCDPEP",234,0)
 . I FILTER="M",'PFLAG,'TFLAG S MATCHT=1
"RTN","RCDPEP",235,0)
 ;
"RTN","RCDPEP",236,0)
 I 'DATEFILT D  ;
"RTN","RCDPEP",237,0)
 . S MATCHD=1
"RTN","RCDPEP",238,0)
 E  D  ;
"RTN","RCDPEP",239,0)
 . S D1=$P(DATEFILT,"^",2)
"RTN","RCDPEP",240,0)
 . S D2=$P(DATEFILT,"^",3)
"RTN","RCDPEP",241,0)
 . S DC=$$GET1^DIQ(344.6,PIEN_",",.03,"I")
"RTN","RCDPEP",242,0)
 . S DC=$P(DC,".",1) ; strip off the time portion for comparison
"RTN","RCDPEP",243,0)
 . I DC=D1!(DC=D2)!(DC>D1&(DC<D2)) S MATCHD=1
"RTN","RCDPEP",244,0)
 ; 
"RTN","RCDPEP",245,0)
 Q MATCHT&MATCHD
"RTN","RCDPEP",246,0)
 ;
"RTN","RCDPEP",247,0)
CHKKEY() ; Check security key for editing
"RTN","RCDPEP",248,0)
 ; Inputs: None
"RTN","RCDPEP",249,0)
 ; Returns: 1 - User has security key editing, 0 - User does not have key
"RTN","RCDPEP",250,0)
 ;
"RTN","RCDPEP",251,0)
 Q 1 ; Always return 1 since security key is no longer required.
"RTN","RCDPEP",252,0)
 N RET
"RTN","RCDPEP",253,0)
 D OWNSKEY^XUSRB(.RET,"RCDPE PAYER IDENTIFY")
"RTN","RCDPEP",254,0)
 I 'RET(0) D  ;
"RTN","RCDPEP",255,0)
 . W !!,*7,">>>> Security key RCDPE PAYER IDENTIFY is required for this action"
"RTN","RCDPEP",256,0)
 . D PAUSE^VALM1
"RTN","RCDPEP",257,0)
 Q RET(0)
"RTN","RCDPEP",258,0)
 ;
"RTN","RCDPEP",259,0)
EDIT ; EP - for RCDPE PAYER FLAGS EDIT protocol
"RTN","RCDPEP",260,0)
 ; Input: None
"RTN","RCDPEP",261,0)
 ; Output: File 344.6 is updated
"RTN","RCDPEP",262,0)
 ;         Listman array is updated
"RTN","RCDPEP",263,0)
 ;
"RTN","RCDPEP",264,0)
 N DA,DIC,DIE,DO,DR,DTOUT,EDT,LINE,PCNT,PIEN,PROMPT,RET,SEL,X,XX,Y
"RTN","RCDPEP",265,0)
 S VALMBCK="R"
"RTN","RCDPEP",266,0)
 D FULL^VALM1
"RTN","RCDPEP",267,0)
 ; Check security key for edit access
"RTN","RCDPEP",268,0)
 I '$$CHKKEY() Q  ;
"RTN","RCDPEP",269,0)
 ;
"RTN","RCDPEP",270,0)
 S PROMPT="Select a Payer Entry to edit: "
"RTN","RCDPEP",271,0)
 S PIEN=$$SELENT(1,PROMPT,VALMBG,VALMLST,.SEL,"RCDPEPIX",0)
"RTN","RCDPEP",272,0)
 Q:'PIEN
"RTN","RCDPEP",273,0)
 ;
"RTN","RCDPEP",274,0)
 ; Lock Editing of this payer entry
"RTN","RCDPEP",275,0)
 L +^RCY(344.6,PIEN):3 I '$T D  Q
"RTN","RCDPEP",276,0)
  . W !!,*7,"Someone else is editing this Payer Entry."
"RTN","RCDPEP",277,0)
  . W !,"Try again later."
"RTN","RCDPEP",278,0)
  . D PAUSE^VALM1
"RTN","RCDPEP",279,0)
 ;
"RTN","RCDPEP",280,0)
 ; Let the user edit the payer entry
"RTN","RCDPEP",281,0)
 S DIE="^RCY(344.6,"
"RTN","RCDPEP",282,0)
 W !!,"Edit flags for payer : "_$$GET1^DIQ(344.6,PIEN_",",.01,"E"),!
"RTN","RCDPEP",283,0)
 S DA=PIEN
"RTN","RCDPEP",284,0)
 S DR=".09Pharmacy Flag;.1Tricare Flag"
"RTN","RCDPEP",285,0)
 D ^DIE
"RTN","RCDPEP",286,0)
 ;
"RTN","RCDPEP",287,0)
 L -^RCY(344.6,PIEN)
"RTN","RCDPEP",288,0)
 D GET1PAY(PIEN,+SEL)
"RTN","RCDPEP",289,0)
 D BLD1PAY(+SEL)
"RTN","RCDPEP",290,0)
 Q
"RTN","RCDPEP",291,0)
 ;
"RTN","RCDPEP",292,0)
SELENT(FULL,PROMPT,START,END,PCNT,WLIST,MULT) ; EP - Protocol Action
"RTN","RCDPEP",293,0)
 ; Select Entry(s) to perform an action upon
"RTN","RCDPEP",294,0)
 ; Called from protocols : RCDPE PAYER FLAGS EDIT
"RTN","RCDPEP",295,0)
 ; RCDPE PAYER FLAG PHARM
"RTN","RCDPEP",296,0)
 ; RCDPE PAYER FLAG TRIC
"RTN","RCDPEP",297,0)
 ; Input: FULL - 1 - full screen mode, 0 otherwise
"RTN","RCDPEP",298,0)
 ;        PROMPT - Prompt to be displayed to the user
"RTN","RCDPEP",299,0)
 ;        START - Starting selection value
"RTN","RCDPEP",300,0)
 ;        END - Ending selection value
"RTN","RCDPEP",301,0)
 ;        WLIST - Worklist, the user is selecting from
"RTN","RCDPEP",302,0)
 ;                Optional, defaults to 'RCDPEPIX'
"RTN","RCDPEP",303,0)
 ;        MULT - 1 to allow multiple selection,
"RTN","RCDPEP",304,0)
 ;               0 or null otherwise
"RTN","RCDPEP",305,0)
 ;               Optional defaults to 0
"RTN","RCDPEP",306,0)
 ; Output: PCNT - Selected Phone Book Entry line(s)
"RTN","RCDPEP",307,0)
 ; Returns: Selected Payer Entry IEN(s)
"RTN","RCDPEP",308,0)
 ;          Error message if invalid selection
"RTN","RCDPEP",309,0)
 N CTR,DIROUT,DIRUT,DLINE,DTOUT,DUOUT,PIEN,PIENS,X,XX,Y,YY
"RTN","RCDPEP",310,0)
 S:'$D(WLIST) WLIST="RCDPEPIX"
"RTN","RCDPEP",311,0)
 S:'$D(MULT) MULT=0
"RTN","RCDPEP",312,0)
 D:FULL FULL^VALM1
"RTN","RCDPEP",313,0)
 ; Check for multi-selection
"RTN","RCDPEP",314,0)
 S PCNT=$$PARSEL($G(XQORNOD(0)),START,END)
"RTN","RCDPEP",315,0)
 ;
"RTN","RCDPEP",316,0)
 ; W !!!,"PCNT="_PCNT_" MULT="_MULT H 10
"RTN","RCDPEP",317,0)
 I 'MULT,$P(PCNT,",",2) D  Q ""                      ; Invalid multi-selection
"RTN","RCDPEP",318,0)
 . W !,*7,">>>> Only single entry selection is allowed"
"RTN","RCDPEP",319,0)
 . K DIR
"RTN","RCDPEP",320,0)
 . D PAUSE^VALM1
"RTN","RCDPEP",321,0)
 S:PCNT="" PCNT=$$SELENTRY(PROMPT,START,END,MULT)
"RTN","RCDPEP",322,0)
 Q:'PCNT ""
"RTN","RCDPEP",323,0)
 ;
"RTN","RCDPEP",324,0)
 S PIENS=""
"RTN","RCDPEP",325,0)
 F CTR=1:1:$L(PCNT,",") D
"RTN","RCDPEP",326,0)
 . S XX=$P(PCNT,",",CTR)
"RTN","RCDPEP",327,0)
 . I XX'="" D  ;
"RTN","RCDPEP",328,0)
 . . S YY=$P(^TMP($J,WLIST,XX),"^",1)
"RTN","RCDPEP",329,0)
 . . S PIENS=$S(PIENS="":YY,1:PIENS_","_YY)
"RTN","RCDPEP",330,0)
 Q PIENS
"RTN","RCDPEP",331,0)
 ;
"RTN","RCDPEP",332,0)
SELENTRY(PROMPT,START,END,MULT) ; Select a line 
"RTN","RCDPEP",333,0)
 ; Input: PROMPT - Prompt to be displayed to the user
"RTN","RCDPEP",334,0)
 ; START - Start comment # that can be selected
"RTN","RCDPEP",335,0)
 ; END - Ending comment # that can be selected
"RTN","RCDPEP",336,0)
 ; MULT - 1=Multiple selection allowed, 0=otherwise
"RTN","RCDPEP",337,0)
 ; Returns: Selected Comment # or "" if not selected
"RTN","RCDPEP",338,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEP",339,0)
 S MULT=+$G(MULT)
"RTN","RCDPEP",340,0)
 S DIR(0)=$S(MULT:"L",1:"N")_"O^"_START_":"_END_":0"
"RTN","RCDPEP",341,0)
 S DIR("A")=PROMPT
"RTN","RCDPEP",342,0)
 D ^DIR K DIR
"RTN","RCDPEP",343,0)
 Q Y
"RTN","RCDPEP",344,0)
 ;
"RTN","RCDPEP",345,0)
FLAGP ; EP - for RCDPE PAYER FLAG PHARM protocol
"RTN","RCDPEP",346,0)
 ; Toggle pharmacy flag on selected lines
"RTN","RCDPEP",347,0)
 ; Input: None
"RTN","RCDPEP",348,0)
 ; Output: None 
"RTN","RCDPEP",349,0)
 D FLAG("P")
"RTN","RCDPEP",350,0)
 Q
"RTN","RCDPEP",351,0)
 ;
"RTN","RCDPEP",352,0)
FLAGT ; EP - for RCDPE PAYER FLAG TRIC protocol
"RTN","RCDPEP",353,0)
 ; Toggle Tricare flag on selected lines
"RTN","RCDPEP",354,0)
 ; Input: None
"RTN","RCDPEP",355,0)
 ; Output: None 
"RTN","RCDPEP",356,0)
 D FLAG("T")
"RTN","RCDPEP",357,0)
 Q
"RTN","RCDPEP",358,0)
 ;
"RTN","RCDPEP",359,0)
FLAG(TYPE) ; Flag a list of entries as Pharmacy or Tricare
"RTN","RCDPEP",360,0)
 ; Input: TYPE - P=Pharmacy, T=Tricare
"RTN","RCDPEP",361,0)
 ; Output: File 344.6 is updated
"RTN","RCDPEP",362,0)
 ; ListMan array is updated
"RTN","RCDPEP",363,0)
 N CONTINUE,CTR,FIELD,PERR,PIEN,PIENS,PROMPT,SELS,STOP,XX,ZS,ZZ
"RTN","RCDPEP",364,0)
 S FIELD=$S(TYPE="P":.09,1:.1)
"RTN","RCDPEP",365,0)
 S VALMBCK="R"
"RTN","RCDPEP",366,0)
 ; Check security key for edit access
"RTN","RCDPEP",367,0)
 I '$$CHKKEY() Q  ;
"RTN","RCDPEP",368,0)
 ;
"RTN","RCDPEP",369,0)
 S PROMPT="Select lines on which to toggle "
"RTN","RCDPEP",370,0)
 S PROMPT=PROMPT_$S(TYPE="P":"Pharmacy",1:"Tricare")_" Flag"
"RTN","RCDPEP",371,0)
 S PIENS=$$SELENT(1,PROMPT,VALMBG,VALMLST,.SELS,"RCDPEPIX",1)
"RTN","RCDPEP",372,0)
 Q:PIENS=""  ;
"RTN","RCDPEP",373,0)
 S (PERR,PIEN,ZZ,ZS)=""
"RTN","RCDPEP",374,0)
 ;
"RTN","RCDPEP",375,0)
 ; First lock all entries to be deleted
"RTN","RCDPEP",376,0)
 F CTR=1:1:$L(PIENS,",") D
"RTN","RCDPEP",377,0)
 . S PIEN=$P(PIENS,",",CTR) I PIEN="" Q  ;
"RTN","RCDPEP",378,0)
 . S XX=$P(SELS,",",CTR)
"RTN","RCDPEP",379,0)
 . ;
"RTN","RCDPEP",380,0)
 . ; Lock this payer exclusion for editing 
"RTN","RCDPEP",381,0)
 . L +^RCY(344.6,PIEN):3 I '$T D  Q
"RTN","RCDPEP",382,0)
 . . S PERR=$S(PERR="":XX,1:PERR_","_XX)
"RTN","RCDPEP",383,0)
 . S ZZ=$S(ZZ="":PIEN,1:ZZ_","_PIEN)
"RTN","RCDPEP",384,0)
 . S ZS=$S(ZS="":XX,1:ZS_","_XX)
"RTN","RCDPEP",385,0)
 S PIENS=ZZ                                ; Entry(s) that can be deleted
"RTN","RCDPEP",386,0)
 S SELS=ZS
"RTN","RCDPEP",387,0)
 ;
"RTN","RCDPEP",388,0)
 ; Did we lock at least one entry?
"RTN","RCDPEP",389,0)
 I PIENS="" D  Q
"RTN","RCDPEP",390,0)
 . W !!,*7,"All entries are being edited by another user - Nothing done."
"RTN","RCDPEP",391,0)
 . D PAUSE^VALM1
"RTN","RCDPEP",392,0)
 ;
"RTN","RCDPEP",393,0)
 ; Next warn the user if we couldn't lock them all
"RTN","RCDPEP",394,0)
 I PERR'="" D  Q:STOP
"RTN","RCDPEP",395,0)
 . S STOP=0
"RTN","RCDPEP",396,0)
 . W !!,*7,"Warning: The following entries: ",PERR," are being edited by another user"
"RTN","RCDPEP",397,0)
 . W !,"These entries will not be updated."
"RTN","RCDPEP",398,0)
 . S CONTINUE=$$ASKYN("Continue with update of other payers?")
"RTN","RCDPEP",399,0)
 . I 'CONTINUE D
"RTN","RCDPEP",400,0)
 . . S STOP=1
"RTN","RCDPEP",401,0)
 . . F CTR=1:1:$L(PIENS,",") D
"RTN","RCDPEP",402,0)
 . . . S PIEN=$P(PIENS,",",CTR)
"RTN","RCDPEP",403,0)
 . . . L -^RCY(344.6,PIEN)
"RTN","RCDPEP",404,0)
 ;
"RTN","RCDPEP",405,0)
 ; Flag selected entries
"RTN","RCDPEP",406,0)
 F CTR=1:1:$L(PIENS,",") D  ;
"RTN","RCDPEP",407,0)
 . N FDA,IENS,OLDVAL,VALUE
"RTN","RCDPEP",408,0)
 . S PIEN=$P(PIENS,",",CTR)
"RTN","RCDPEP",409,0)
 . S IENS=PIEN_","
"RTN","RCDPEP",410,0)
 . S SEL=$P(SELS,",",CTR)
"RTN","RCDPEP",411,0)
 . S OLDVAL=$$GET1^DIQ(344.6,IENS,FIELD,"I")
"RTN","RCDPEP",412,0)
 . S VALUE=$S('OLDVAL:1,1:0)
"RTN","RCDPEP",413,0)
 . S FDA(344.6,IENS,FIELD)=VALUE
"RTN","RCDPEP",414,0)
 . L -^RCY(344.6,PIEN)
"RTN","RCDPEP",415,0)
 . D FILE^DIE("","FDA")
"RTN","RCDPEP",416,0)
 . D GET1PAY(PIEN,SEL)
"RTN","RCDPEP",417,0)
 . D BLD1PAY(SEL)
"RTN","RCDPEP",418,0)
 Q
"RTN","RCDPEP",419,0)
 ;
"RTN","RCDPEP",420,0)
FILTER ; EP - for RCDPE PAYER FLAGS FILTER protocol
"RTN","RCDPEP",421,0)
 ; Change the filter from a protocol
"RTN","RCDPEP",422,0)
 ; Inputs - None
"RTN","RCDPEP",423,0)
 ; Output - Sets variables FILTER and DATEFILT
"RTN","RCDPEP",424,0)
 N NEWDATE,NEWFILT
"RTN","RCDPEP",425,0)
 S VALMBCK="R"
"RTN","RCDPEP",426,0)
 D FULL^VALM1
"RTN","RCDPEP",427,0)
 S NEWDATE=$$GETDATE()
"RTN","RCDPEP",428,0)
 I NEWDATE=-1 Q  ;
"RTN","RCDPEP",429,0)
 S NEWFILT=$$GETFILT()
"RTN","RCDPEP",430,0)
 I NEWFILT=-1 Q  ;
"RTN","RCDPEP",431,0)
 S DATEFILT=NEWDATE
"RTN","RCDPEP",432,0)
 S FILTER=NEWFILT
"RTN","RCDPEP",433,0)
 D HDR,INIT
"RTN","RCDPEP",434,0)
 Q
"RTN","RCDPEP",435,0)
 ;
"RTN","RCDPEP",436,0)
PARSEL(VALMNOD,BEG,END) ; -- split out pre-answers from user
"RTN","RCDPEP",437,0)
 ; Inputs - VALMNOD= User input from protocol menu including pre-answers
"RTN","RCDPEP",438,0)
 ;          BEG=Begining of the valid numeric range
"RTN","RCDPEP",439,0)
 ;          END=End of the valid numeric range
"RTN","RCDPEP",440,0)
 ; Returns - Y=Comma separated list of valid numeric entries
"RTN","RCDPEP",441,0)
 ;
"RTN","RCDPEP",442,0)
 ; This code is adapted from VALM2. 
"RTN","RCDPEP",443,0)
 N I,J,L,X,Y
"RTN","RCDPEP",444,0)
 S Y=$TR($P($P(VALMNOD,U,4),"=",2),"/\; .",",,,,,")
"RTN","RCDPEP",445,0)
 ; Run through the list, skip invalid selections and expand ranges
"RTN","RCDPEP",446,0)
 S X=Y,Y=""
"RTN","RCDPEP",447,0)
 F I=1:1 S J=$P(X,",",I) Q:J=""  D  ;
"RTN","RCDPEP",448,0)
 . I J'["-",J>(BEG-1),J<(END+1) S Y=Y_J_"," ; single valid selection 
"RTN","RCDPEP",449,0)
 . I J["-",J,J<$P(J,"-",2) D  ;
"RTN","RCDPEP",450,0)
 . . F L=+J:1:+$P(J,"-",2) D  ;
"RTN","RCDPEP",451,0)
 . . . I L>(BEG-1),L<(END+1) S Y=Y_L_"," ; valid selection from expanded range
"RTN","RCDPEP",452,0)
 Q Y
"RTN","RCDPEP",453,0)
 ;
"RTN","RCDPEP",454,0)
PARSED(X) ; Take a date in external format and check if it is a valid
"RTN","RCDPEP",455,0)
          ; DATE ADDED (.03) in file 344.6
"RTN","RCDPEP",456,0)
 ; Input - Date in External format
"RTN","RCDPEP",457,0)
 ; Output - Date in Fileman format or 0 if the input was invalid
"RTN","RCDPEP",458,0)
 D VAL^DIE(344.6,"+1,",.03,"",X,.RET)
"RTN","RCDPEP",459,0)
 Q RET
"RTN","RCDPEP",460,0)
 ;
"RTN","RCDPEP",461,0)
ASKYN(PROMPT,DEFAULT) ; Ask a yes/no question
"RTN","RCDPEP",462,0)
 ; Input: PROMPT - Question to be asked
"RTN","RCDPEP",463,0)
 ;        DEFAULT - Default Answer
"RTN","RCDPEP",464,0)
 ;        1 - YES, 0 - NO
"RTN","RCDPEP",465,0)
 ;        Optional, defaults to 0
"RTN","RCDPEP",466,0)
 ; Returns: 1 - User answered YES, 0 othewise
"RTN","RCDPEP",467,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEP",468,0)
 S:$G(DEFAULT)'=1 DEFAULT=0
"RTN","RCDPEP",469,0)
 S DIR(0)="Y",DIR("A")=PROMPT
"RTN","RCDPEP",470,0)
 S DIR("B")=$S(DEFAULT:"YES",1:"NO")
"RTN","RCDPEP",471,0)
 D ^DIR
"RTN","RCDPEP",472,0)
 Q Y
"RTN","RCDPEP",473,0)
 ;
"RTN","RCDPEP",474,0)
HELP ; EP - for template RCDPE PAYER FLAGS help
"RTN","RCDPEP",475,0)
 ; Input: None
"RTN","RCDPEP",476,0)
 ; Output: Text from a help frame displayed to the screen
"RTN","RCDPEP",477,0)
 N FILTER,DATEFILT,XQH
"RTN","RCDPEP",478,0)
 S VALMBCK="R"
"RTN","RCDPEP",479,0)
 S XQH="RCDPE PAYER FLAGS GENERAL"
"RTN","RCDPEP",480,0)
 D EN^XQH
"RTN","RCDPEP",481,0)
 Q
"RTN","RCDPEP",482,0)
 ;
"RTN","RCDPEP",483,0)
EXIT ; -- exit code
"RTN","RCDPEP",484,0)
 D FULL^VALM1
"RTN","RCDPEP",485,0)
 Q
"RTN","RCDPESP")
0^42^B156068474
"RTN","RCDPESP",1,0)
RCDPESP ;BIRM/EWL - ePayment Lockbox Site Parameters Definition - Files 344.61 & 344.6 ;Nov 19, 2014@15:26:16
"RTN","RCDPESP",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPESP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP",4,0)
 ;
"RTN","RCDPESP",5,0)
EN ; entry point for EDI Lockbox Parameters [RCDPE EDI LOCKBOX PARAMETERS]
"RTN","RCDPESP",6,0)
 N DA,DIC,DIE,DIR,DIRUT,DLAYGO,DR,DTOUT,DUOUT,X,Y  ; FileMan variables
"RTN","RCDPESP",7,0)
 ;
"RTN","RCDPESP",8,0)
 W !," Update AR Site Parameters",!
"RTN","RCDPESP",9,0)
 ;
"RTN","RCDPESP",10,0)
 S X="RCDPE AUTO DEC" I '$D(^XUSEC(X,DUZ)) W !!,"You do not hold the "_X_" security key." Q
"RTN","RCDPESP",11,0)
 ; Lock the parameter file
"RTN","RCDPESP",12,0)
 L +^RCY(344.61,1):DILOCKTM E  D  Q
"RTN","RCDPESP",13,0)
 .W !!," Another user is currently using the AR Site Parameters option."
"RTN","RCDPESP",14,0)
 .W !," Please try again later."
"RTN","RCDPESP",15,0)
 ;
"RTN","RCDPESP",16,0)
 ; PRCA*4.5*326 - Once lock is successful, take a snapshot of the parameters for monitoring
"RTN","RCDPESP",17,0)
 D EN^RCDPESP6
"RTN","RCDPESP",18,0)
 ;
"RTN","RCDPESP",19,0)
 ; Check parameter file
"RTN","RCDPESP",20,0)
 N FDAEDI,FDAPAYER,IEN,IENS,RCQUIT
"RTN","RCDPESP",21,0)
 ; FDAPAYER - FDA array for RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP",22,0)
 ; FDAEDI - FDA array for RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP",23,0)
 ; RCAUDVAL - audit data for RCDPE PARAMETER AUDIT file (#344.7)
"RTN","RCDPESP",24,0)
 ; IEN - entry #
"RTN","RCDPESP",25,0)
 ; IENS - IEN_comma
"RTN","RCDPESP",26,0)
 ; RCQUIT - exit flag
"RTN","RCDPESP",27,0)
 ;
"RTN","RCDPESP",28,0)
 ; function returns 1 on success
"RTN","RCDPESP",29,0)
 S Y=$$EDILOCK^RCMSITE  ; Update EDI Lockbox site parameters
"RTN","RCDPESP",30,0)
 I 'Y G ABORT  ; user entered '^'
"RTN","RCDPESP",31,0)
 ;
"RTN","RCDPESP",32,0)
 ;----------------------------------------------
"RTN","RCDPESP",33,0)
 ; prca*4.5*304
"RTN","RCDPESP",34,0)
 ; Enable/disable auto-auditing of paper bills
"RTN","RCDPESP",35,0)
 ;----------------------------------------------
"RTN","RCDPESP",36,0)
 ;
"RTN","RCDPESP",37,0)
 S RCQUIT=0 W !
"RTN","RCDPESP",38,0)
 S RCQUIT=$$AUDIT^RCDPESP5
"RTN","RCDPESP",39,0)
 I RCQUIT G ABORT ; PRCA*4.5*326 must have single exit point
"RTN","RCDPESP",40,0)
 ;
"RTN","RCDPESP",41,0)
 W !
"RTN","RCDPESP",42,0)
 I '$D(^RCY(344.61,1,0)) W !,"There is a problem with the RCDPE PARAMETER file (#344.61)." G EXIT
"RTN","RCDPESP",43,0)
 ;
"RTN","RCDPESP",44,0)
 ;----------------------------------------------
"RTN","RCDPESP",45,0)
 ; prca*4.5*321
"RTN","RCDPESP",46,0)
 ; WORKLOAD NOTIFICATION BULLETIN DAYS
"RTN","RCDPESP",47,0)
 ;----------------------------------------------
"RTN","RCDPESP",48,0)
 N BULL S BULL=$$GET1^DIQ(344.61,"1,",.1,"I")
"RTN","RCDPESP",49,0)
 K DIR S:BULL]"" DIR("B")=$$GET1^DIQ(344.61,"1,",.1,"E")
"RTN","RCDPESP",50,0)
 S DIR("?")=$$GET1^DID(344.61,.1,,"HELP-PROMPT")
"RTN","RCDPESP",51,0)
 S DIR("A")=$$GET1^DID(344.61,.1,,"TITLE")
"RTN","RCDPESP",52,0)
 S DIR(0)="344.61,.1"
"RTN","RCDPESP",53,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",54,0)
 I BULL'=Y D  ; update and audit
"RTN","RCDPESP",55,0)
 .S RCAUDVAL(1)="344.61^.1^1^"_Y_U_BULL
"RTN","RCDPESP",56,0)
 .S FDAEDI(344.61,"1,",.1)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",57,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",58,0)
 W !
"RTN","RCDPESP",59,0)
 ;
"RTN","RCDPESP",60,0)
 ;----------------------------------------------
"RTN","RCDPESP",61,0)
 ; Enable/disable auto-posting of medical claims
"RTN","RCDPESP",62,0)
 ;----------------------------------------------
"RTN","RCDPESP",63,0)
 N APMC,APMCT
"RTN","RCDPESP",64,0)
 ;PRCA*4.5*304 Move from Medical Auto decrease section below
"RTN","RCDPESP",65,0)
 N ADMC  ; ^DD(344.61,.03,0)="AUTO-DECREASE MED ENABLED^S^0:No;1:Yes;^0;3^Q"
"RTN","RCDPESP",66,0)
 S ADMC=""  ; Init in case Medical Auto Posting is turned off.
"RTN","RCDPESP",67,0)
 ;end PRCA*4.5*304
"RTN","RCDPESP",68,0)
 ; APMC=AUTO POSTING OF MEDICAL CLAIMS ENABLED
"RTN","RCDPESP",69,0)
 ; APMCT=TEMP APMC
"RTN","RCDPESP",70,0)
 S APMCT=$$GET1^DIQ(344.61,"1,",.02,"I"),APMC=$S(APMCT=1:"Yes",APMCT=0:"No",1:"")
"RTN","RCDPESP",71,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(APMC="":"Y",1:APMC)
"RTN","RCDPESP",72,0)
 S DIR("A")=$$GET1^DID(344.61,.02,,"TITLE")
"RTN","RCDPESP",73,0)
 S DIR("?")=$$GET1^DID(344.61,.02,,"HELP-PROMPT")
"RTN","RCDPESP",74,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",75,0)
 I APMCT'=Y D  ; user updated value
"RTN","RCDPESP",76,0)
 .S FDAEDI(344.61,"1,",.02)=Y D FILE^DIE(,"FDAEDI") K FDAEDI
"RTN","RCDPESP",77,0)
 .D NOTIFY($S(Y=1:"Yes",Y=0:"No",1:"*missing*"))
"RTN","RCDPESP",78,0)
 .S RCAUDVAL(1)="344.61^.02^1^"_Y_U_('Y) D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",79,0)
 ;
"RTN","RCDPESP",80,0)
 I Y=0 G RXPARMS
"RTN","RCDPESP",81,0)
 ;
"RTN","RCDPESP",82,0)
 ; Set/Reset payer exclusions for medical claim posting
"RTN","RCDPESP",83,0)
 D EXCLLIST(1) ; Display the exclusion list
"RTN","RCDPESP",84,0)
 D SETEXCL(1) I $G(RCQUIT) G ABORT ; SET/RESET exclusions
"RTN","RCDPESP",85,0)
 D EXCLLIST(1) ; Display the exclusion list
"RTN","RCDPESP",86,0)
 W !
"RTN","RCDPESP",87,0)
 ;
"RTN","RCDPESP",88,0)
 ; Enable/disable auto-decrease of paid medical claims
"RTN","RCDPESP",89,0)
 N RETURN
"RTN","RCDPESP",90,0)
 S RETURN=$$PAID^RCDPESP7
"RTN","RCDPESP",91,0)
 G:RETURN=2 RXPARMS
"RTN","RCDPESP",92,0)
 ;
"RTN","RCDPESP",93,0)
 ; Enable/disable auto-decrease of non-paid medical claims
"RTN","RCDPESP",94,0)
 I RETURN=0 S RETURN=$$NOPAY^RCDPESP7
"RTN","RCDPESP",95,0)
 ;
"RTN","RCDPESP",96,0)
 I RETURN=1 G ABORT
"RTN","RCDPESP",97,0)
 ;
"RTN","RCDPESP",98,0)
 ; Set/Reset payer exclusions for medical claim decrease
"RTN","RCDPESP",99,0)
 D EXCLLIST(2) ; Display the exclusion list
"RTN","RCDPESP",100,0)
 D SETEXCL(2) I $G(RCQUIT) G ABORT ; SET/RESET exclusions
"RTN","RCDPESP",101,0)
 D EXCLLIST(2) ; Display the exclusion list
"RTN","RCDPESP",102,0)
 W !
"RTN","RCDPESP",103,0)
 ;
"RTN","RCDPESP",104,0)
 ; code falls through
"RTN","RCDPESP",105,0)
 ;
"RTN","RCDPESP",106,0)
RXPARMS ; branch here from above
"RTN","RCDPESP",107,0)
 ;----------------------------------------------
"RTN","RCDPESP",108,0)
 ; Enable/disable auto-posting of pharmacy claims
"RTN","RCDPESP",109,0)
 ;----------------------------------------------
"RTN","RCDPESP",110,0)
 N APPC,APPCT
"RTN","RCDPESP",111,0)
 ; APPC=AUTO POSTING OF PHARMACY CLAIMS ENABLED
"RTN","RCDPESP",112,0)
 ; APPCT=TEMP APMC
"RTN","RCDPESP",113,0)
 S APPCT=$$GET1^DIQ(344.61,"1,",1.01,"I"),APPC=$S(APPCT=1:"Yes",APPCT=0:"No",1:"")
"RTN","RCDPESP",114,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(APPC="":"Yes",1:APPC)
"RTN","RCDPESP",115,0)
 S DIR("A")=$$GET1^DID(344.61,1.01,,"TITLE")
"RTN","RCDPESP",116,0)
 S DIR("?")=$$GET1^DID(344.61,1.01,,"HELP-PROMPT")
"RTN","RCDPESP",117,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",118,0)
 I APPCT'=Y D  ; user updated value
"RTN","RCDPESP",119,0)
 .S FDAEDI(344.61,"1,",1.01)=Y D FILE^DIE(,"FDAEDI") K FDAEDI
"RTN","RCDPESP",120,0)
 .D NOTIFY($S(Y=1:"Yes",Y=0:"No",1:"*missing*"),1)
"RTN","RCDPESP",121,0)
 .S RCAUDVAL(1)="344.61^1.01^1^"_Y_U_('Y) D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",122,0)
 ;
"RTN","RCDPESP",123,0)
 ; If yes, set/Reset payer exclusions for pharmacy claims posting
"RTN","RCDPESP",124,0)
 I Y=1 D  G:$G(RCQUIT)=1 ABORT
"RTN","RCDPESP",125,0)
 . D EXCLLIST(3) ; Display the exclusion list
"RTN","RCDPESP",126,0)
 . D SETEXCL(3) Q:$G(RCQUIT)  ; SET/RESET exclusions
"RTN","RCDPESP",127,0)
 . D EXCLLIST(3) ; Display the exclusion list
"RTN","RCDPESP",128,0)
 . W !
"RTN","RCDPESP",129,0)
 . ;
"RTN","RCDPESP",130,0)
 ;
"RTN","RCDPESP",131,0)
 ; Show Pharmacy prompt but don't allow change
"RTN","RCDPESP",132,0)
 D:$$GET1^DIQ(344.61,"1,",1.01,"I")=1  G:$G(RCQUIT)=1 ABORT
"RTN","RCDPESP",133,0)
 . W !,"ENABLE AUTO-DECREASE OF PHARMACY CLAIMS (Y/N): NO//"
"RTN","RCDPESP",134,0)
 . W !,"   Determines if auto-decrease of pharmacy claims are enabled for this site."
"RTN","RCDPESP",135,0)
 . W !,"   NOTE:  Not editable and set to Disabled until further notice.",!
"RTN","RCDPESP",136,0)
 . K DIR S DIR(0)="EA"
"RTN","RCDPESP",137,0)
 . S DIR("A")="Press Enter to continue: "
"RTN","RCDPESP",138,0)
 . D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1
"RTN","RCDPESP",139,0)
 . W !
"RTN","RCDPESP",140,0)
 ;
"RTN","RCDPESP",141,0)
 ; set MEDICAL EFT OVERRIDE ^DD(344.61,.06,0) = MEDICAL EFT POST PREVENT DAYS
"RTN","RCDPESP",142,0)
 N MEO S MEO=$$GET1^DIQ(344.61,"1,",.06)
"RTN","RCDPESP",143,0)
 K DIR S:MEO]"" DIR("B")=MEO
"RTN","RCDPESP",144,0)
 S DIR("?")=$$GET1^DID(344.61,.06,,"HELP-PROMPT")
"RTN","RCDPESP",145,0)
 S DIR(0)="NA^14:60:0",DIR("A")=$$GET1^DID(344.61,.06,,"TITLE") ; PRCA*4.5*321 Change max from 99 to 60
"RTN","RCDPESP",146,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",147,0)
 I MEO'=Y D  ; update and audit
"RTN","RCDPESP",148,0)
 .S RCAUDVAL(1)="344.61^.06^1^"_Y_U_MEO
"RTN","RCDPESP",149,0)
 .S FDAEDI(344.61,"1,",.06)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",150,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",151,0)
 ;
"RTN","RCDPESP",152,0)
 ;----------------------------------------------
"RTN","RCDPESP",153,0)
 ; Set PHARMACY EFT OVERRIDE
"RTN","RCDPESP",154,0)
 ;----------------------------------------------
"RTN","RCDPESP",155,0)
 N PEO S PEO=$$GET1^DIQ(344.61,"1,",.07)
"RTN","RCDPESP",156,0)
 K DIR S:PEO]"" DIR("B")=PEO
"RTN","RCDPESP",157,0)
 S DIR("?")=$$GET1^DID(344.61,.07,,"HELP-PROMPT")
"RTN","RCDPESP",158,0)
 S DIR(0)="NA^21:365:0",DIR("A")=$$GET1^DID(344.61,.07,,"TITLE") ; PRCA*4.5*321 Change max from 999 to 365
"RTN","RCDPESP",159,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",160,0)
 I PEO'=Y D  ; update and audit
"RTN","RCDPESP",161,0)
 .S RCAUDVAL(1)="344.61^.07^1^"_Y_U_PEO
"RTN","RCDPESP",162,0)
 .S FDAEDI(344.61,"1,",.07)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",163,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",164,0)
 ;
"RTN","RCDPESP",165,0)
 G EXIT
"RTN","RCDPESP",166,0)
 ;
"RTN","RCDPESP",167,0)
ABORT ; Called when user enters a '^' or times out
"RTN","RCDPESP",168,0)
 ; fall through to EXIT
"RTN","RCDPESP",169,0)
 ;
"RTN","RCDPESP",170,0)
EXIT ; Unlock, ask user to press return, exit
"RTN","RCDPESP",171,0)
 D EXIT^RCDPESP6 ; PRCA*4.5*326 - Send mail message if parameters have been edited.
"RTN","RCDPESP",172,0)
 L -^RCY(344.61,1)
"RTN","RCDPESP",173,0)
 D PAUSE
"RTN","RCDPESP",174,0)
 Q
"RTN","RCDPESP",175,0)
 ;
"RTN","RCDPESP",176,0)
PAUSE ; prompt user to press return
"RTN","RCDPESP",177,0)
 W ! N DIR
"RTN","RCDPESP",178,0)
 S DIR("T")=3,DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR
"RTN","RCDPESP",179,0)
 Q
"RTN","RCDPESP",180,0)
 ;
"RTN","RCDPESP",181,0)
COUNT(TYPE) ; Count active CARCs in file 344.62 (RCDPE CARC-RARC AUTO DEC)
"RTN","RCDPESP",182,0)
 N NUM,I
"RTN","RCDPESP",183,0)
 I (TYPE'=1)&(TYPE'=0) Q 0  ; If TYPE is not active (1) or in-active (0) quit with count = 0
"RTN","RCDPESP",184,0)
 S NUM=0
"RTN","RCDPESP",185,0)
 S I="" F  S I=$O(^RCY(344.62,"ACTV",TYPE,I)) Q:I=""  S NUM=NUM+1
"RTN","RCDPESP",186,0)
 Q NUM
"RTN","RCDPESP",187,0)
 ;
"RTN","RCDPESP",188,0)
EXCLLIST(TYP) ; CHOICE determines which exclusions to list
"RTN","RCDPESP",189,0)
 ; TYP - TYPE OF EXLUSION - REQUIRED
"RTN","RCDPESP",190,0)
 ; IX - which index to use
"RTN","RCDPESP",191,0)
 ; IEN - points to an excluded payer for the selected choice
"RTN","RCDPESP",192,0)
 Q:'("^1^2^3^"[(U_$G(TYP)_U))  ; one or two only
"RTN","RCDPESP",193,0)
 N IX,IEN,CT,LIST S (IEN,CT)=0 W !
"RTN","RCDPESP",194,0)
 S IX=$S(TYP=1:"EXMDPOST",TYP=2:"EXMDDECR",TYP=3:"EXRXPOST",1:"") ;,TYP=4:"EXRXDECR",1:"")
"RTN","RCDPESP",195,0)
 S LIST=$S(TYP=1:"",TYP=3:"",1:"** Additional ")_"Payers excluded from "_$S(TYP=1:"Medical Auto-Posting:",TYP=3:"Pharmacy Auto-Posting",1:"Medical Auto-Decrease:")
"RTN","RCDPESP",196,0)
 F  S IEN=$O(^RCY(344.6,IX,1,IEN)) Q:'IEN  D
"RTN","RCDPESP",197,0)
 . S CT=CT+1
"RTN","RCDPESP",198,0)
 . W:CT=1 !,LIST
"RTN","RCDPESP",199,0)
 . W !,"  "_$P(^RCY(344.6,IEN,0),U,1)_" "_$P(^RCY(344.6,IEN,0),U,2)
"RTN","RCDPESP",200,0)
 ;
"RTN","RCDPESP",201,0)
 I TYP=2 W !,"All payers excluded from Auto-Posting are also excluded from Auto-Decrease."
"RTN","RCDPESP",202,0)
 W:CT=0 !,"   No "_$S(TYP=2:"additional ",1:"")_"payers excluded from "_$S(TYP=1:"Medical Auto-Posting:",TYP=3:"Pharmacy Auto-Posting",1:"Medical Auto-Decrease:")
"RTN","RCDPESP",203,0)
 ; if list is for auto-decrease and there are exclusions write a message
"RTN","RCDPESP",204,0)
 Q
"RTN","RCDPESP",205,0)
 ;
"RTN","RCDPESP",206,0)
SETEXCL(TYP) ; LOOP FOR SETTING PAYER EXCLUSIONS
"RTN","RCDPESP",207,0)
 ; TYP - TYPE OF EXLUSION - REQUIRED
"RTN","RCDPESP",208,0)
 N FDAPAYER,IEN,DONE,CT,X,Y,FLD,RTYP,DIC,DIR,RCAUDVAL,PREC,CMT
"RTN","RCDPESP",209,0)
 ; FDAPAYER - FDA FOR FILE 344.6
"RTN","RCDPESP",210,0)
 ; FLD - FIELD BEING MODIFIED
"RTN","RCDPESP",211,0)
 ; RTYP - STRING REPRESENTING FIELD
"RTN","RCDPESP",212,0)
 ; DONE - INDICATOR TO LEAVE LOOP
"RTN","RCDPESP",213,0)
 ; RCAUDVAL - ARRAY FOR AUDITING
"RTN","RCDPESP",214,0)
 ; PREC - HOLDER FOR Y(0) AFTER ^DIC CALL
"RTN","RCDPESP",215,0)
 ;         FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE,COMMENT
"RTN","RCDPESP",216,0)
 I $G(TYP)=1 S FLD=.06,CMT=1,RTYP="MEDICAL CLAIMS POSTING"
"RTN","RCDPESP",217,0)
 I $G(TYP)=2 S FLD=.07,CMT=2,RTYP="MEDICAL CLAIMS DECREASE"
"RTN","RCDPESP",218,0)
 I $G(TYP)=3 S FLD=.08,CMT=3,RTYP="PHARMACY CLAIMS POSTING"
"RTN","RCDPESP",219,0)
 I '$D(FLD) Q 
"RTN","RCDPESP",220,0)
 ;
"RTN","RCDPESP",221,0)
 W !!,"Select a Payer to add or remove from the exclusion list.",!
"RTN","RCDPESP",222,0)
 S (RCQUIT,CT,DONE)=0 F  Q:DONE!RCQUIT  D
"RTN","RCDPESP",223,0)
 . S DIC="^RCY(344.6,",DIC(0)="AEMQZ",DIC("A")="Payer: "
"RTN","RCDPESP",224,0)
 . S DIC("S")="I $$SCREEN^RCDPESP(Y)" ; PRCA*4.5*326
"RTN","RCDPESP",225,0)
 . D ^DIC I X="^" S RCQUIT=1 Q
"RTN","RCDPESP",226,0)
 . I +$G(Y)<1 S DONE=1 Q
"RTN","RCDPESP",227,0)
 . S CT=CT+1,IEN=+Y,IENS=IEN_",",PREC=Y(0)
"RTN","RCDPESP",228,0)
 . K FDAPAYER
"RTN","RCDPESP",229,0)
 . N COMMENT,STAT
"RTN","RCDPESP",230,0)
 . S COMMENT=""
"RTN","RCDPESP",231,0)
 . S STAT='$$GET1^DIQ(344.6,IENS,FLD,"I")
"RTN","RCDPESP",232,0)
 . S FDAPAYER(344.6,IENS,FLD)=STAT
"RTN","RCDPESP",233,0)
 . ; GET COMMENT HERE
"RTN","RCDPESP",234,0)
 . K Y S DIR("A")="COMMENT: ",DIR(0)="FA^3:72"
"RTN","RCDPESP",235,0)
 . S DIR("PRE")="S X=$$TRIM^XLFSTR(X,""LR"")" ; comment required and should be significant
"RTN","RCDPESP",236,0)
 . S DIR("?")="Enter an explanation for "_$S(STAT:"adding the payer to",1:"removing the payer from")_" the list of Excluded Payers."
"RTN","RCDPESP",237,0)
 . D ^DIR I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPESP",238,0)
 . S COMMENT=Y
"RTN","RCDPESP",239,0)
 . I COMMENT]"" D
"RTN","RCDPESP",240,0)
 . . I STAT S FDAPAYER(344.6,IENS,CMT)=COMMENT
"RTN","RCDPESP",241,0)
 . . E  S FDAPAYER(344.6,IENS,CMT)=""
"RTN","RCDPESP",242,0)
 . . W !,$P(PREC,U,1)_" "_$P(PREC,U,2)_" has been "
"RTN","RCDPESP",243,0)
 . . W $S(STAT:"added to",1:"removed from")_" the list of Excluded Payers"
"RTN","RCDPESP",244,0)
 . . I TYP=1 D
"RTN","RCDPESP",245,0)
 . . . W !,"If medical auto-decrease is turned on, "
"RTN","RCDPESP",246,0)
 . . . I STAT W "this payer will be excluded from medical auto-decrease too."
"RTN","RCDPESP",247,0)
 . . . I 'STAT,'$$GET1^DIQ(344.6,IEN_",",.07,"I") W "this payer will no longer be excluded from Medical Auto-Decrease."
"RTN","RCDPESP",248,0)
 . . . I 'STAT,$$GET1^DIQ(344.6,IEN_",",.07,"I") W "Medical Auto-Decrease is set to be excluded for this payer."
"RTN","RCDPESP",249,0)
 . . K RCAUDVAL
"RTN","RCDPESP",250,0)
 . . D FILE^DIE(,"FDAPAYER")
"RTN","RCDPESP",251,0)
 . . S RCAUDVAL(1)="344.6"_U_FLD_U_IEN_U_STAT_U_('STAT)_U_COMMENT
"RTN","RCDPESP",252,0)
 . . D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",253,0)
 Q
"RTN","RCDPESP",254,0)
 ;
"RTN","RCDPESP",255,0)
NOTIFY(VAL,TYPE) ; Notify CBO team of change to Site Parameters
"RTN","RCDPESP",256,0)
 N GLB,GLO,MSG,SITE,SUBJ,XMINSTR,XMTO
"RTN","RCDPESP",257,0)
 S SITE=$$SITE^VASITE
"RTN","RCDPESP",258,0)
 S TYPE=+$G(TYPE)  ;init optional parameter
"RTN","RCDPESP",259,0)
 ; limit subject to 65 chars.
"RTN","RCDPESP",260,0)
 S SUBJ=$E("Site Parameter edit, Station #"_$P(SITE,U,3)_" - "_$P(SITE,U,2),1,65)
"RTN","RCDPESP",261,0)
 S MSG(1)=" "
"RTN","RCDPESP",262,0)
 S MSG(2)="        Site: "_$P(SITE,U,2)
"RTN","RCDPESP",263,0)
 S MSG(3)="   Station #: "_$P(SITE,U,3)
"RTN","RCDPESP",264,0)
 S MSG(4)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","RCDPESP",265,0)
 S MSG(5)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"5ZPM")
"RTN","RCDPESP",266,0)
 S MSG(6)="  Changed by: "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPESP",267,0)
 S MSG(7)=" "
"RTN","RCDPESP",268,0)
 S MSG(8)="  ENABLE AUTO-POSTING OF "_$S(TYPE=1:"PHARMACY",1:"MEDICAL")_" CLAIMS = "_VAL
"RTN","RCDPESP",269,0)
 S MSG(9)=" "
"RTN","RCDPESP",270,0)
 ;Copy message to ePayments CBO team
"RTN","RCDPESP",271,0)
 S XMTO(DUZ)=""
"RTN","RCDPESP",272,0)
 ; S:$$PROD^XUPROD XMTO("PAYMENTS@DOMAIN.EXT")="" ; PRCA*4.5*326 autopost on/off message no longer required by ePay
"RTN","RCDPESP",273,0)
 ;
"RTN","RCDPESP",274,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPESP",275,0)
 D SENDMSG^XMXAPI(DUZ,SUBJ,"MSG",.XMTO,.XMINSTR)
"RTN","RCDPESP",276,0)
 ;
"RTN","RCDPESP",277,0)
 I $D(^TMP("XMERR",$J)) D
"RTN","RCDPESP",278,0)
 .D MES^XPDUTL("MailMan reported a problem trying to send the notification message.")
"RTN","RCDPESP",279,0)
 .D MES^XPDUTL("  ")
"RTN","RCDPESP",280,0)
 .S (GLO,GLB)="^TMP(""XMERR"","_$J
"RTN","RCDPESP",281,0)
 .S GLO=GLO_")"
"RTN","RCDPESP",282,0)
 .F  S GLO=$Q(@GLO) Q:GLO'[GLB  D MES^XPDUTL("   "_GLO_" = "_$G(@GLO))
"RTN","RCDPESP",283,0)
 .D MES^XPDUTL("  ")
"RTN","RCDPESP",284,0)
 Q
"RTN","RCDPESP",285,0)
 ;
"RTN","RCDPESP",286,0)
AUDIT(INP) ; WRITE AUDIT RECORD(S)
"RTN","RCDPESP",287,0)
 ; INP = audit value in this format:
"RTN","RCDPESP",288,0)
 ;       FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP",289,0)
 Q:'$O(INP(0))   ; nothing to audit
"RTN","RCDPESP",290,0)
 N FDAUDT  ; FileMan FDA array for audits
"RTN","RCDPESP",291,0)
 N IDX S IDX=0
"RTN","RCDPESP",292,0)
 F  S IDX=$O(INP(IDX)) Q:'IDX  D
"RTN","RCDPESP",293,0)
 . K FDAUDT
"RTN","RCDPESP",294,0)
 . S FDAUDT(344.7,"+1,",.01)=$$NOW^XLFDT
"RTN","RCDPESP",295,0)
 . S FDAUDT(344.7,"+1,",.02)=$P(INP(IDX),U,3) ; IEN
"RTN","RCDPESP",296,0)
 . S FDAUDT(344.7,"+1,",.03)=DUZ  ; user
"RTN","RCDPESP",297,0)
 . S FDAUDT(344.7,"+1,",.04)=$P(INP(IDX),U,2) ; FIELD NUMBER
"RTN","RCDPESP",298,0)
 . S FDAUDT(344.7,"+1,",.05)=$P(INP(IDX),U,1) ; FILE NUMBER
"RTN","RCDPESP",299,0)
 . S FDAUDT(344.7,"+1,",.06)=$P(INP(IDX),U,4) ; NEW VALUE
"RTN","RCDPESP",300,0)
 . S FDAUDT(344.7,"+1,",.07)=$P(INP(IDX),U,5) ; OLD VALUE
"RTN","RCDPESP",301,0)
 . S FDAUDT(344.7,"+1,",.08)=$P(INP(IDX),U,6) ; COMMENT
"RTN","RCDPESP",302,0)
 . D UPDATE^DIE(,"FDAUDT")
"RTN","RCDPESP",303,0)
 Q
"RTN","RCDPESP",304,0)
 ;
"RTN","RCDPESP",305,0)
 ; *************************************************************
"RTN","RCDPESP",306,0)
 ; CALLS RELATED TO CREATING EPAYMENT PAYER EXCLUSION PARAMETERS
"RTN","RCDPESP",307,0)
 ; *************************************************************
"RTN","RCDPESP",308,0)
 ;
"RTN","RCDPESP",309,0)
NEWPYR ;Add new payers to payer table - called from AR Nightly Job (EN^RCDPEM)
"RTN","RCDPESP",310,0)
 ; PRCA*4.5*326 - Add payers that are just on EFTs to file 344.6
"RTN","RCDPESP",311,0)
 N RCDATE,RCFDA,RCEFT,RCERA,RCUPD,RCXD
"RTN","RCDPESP",312,0)
 ;Get date/time of last run otherwise start at previous day
"RTN","RCDPESP",313,0)
 S RCDATE=$P($G(^RCY(344.61,1,0)),U,8) S:RCDATE="" RCDATE=$$FMADD^XLFDT($$NOW^XLFDT\1,-1)
"RTN","RCDPESP",314,0)
 S RCXD=RCDATE
"RTN","RCDPESP",315,0)
 F  S RCXD=$O(^RCY(344.4,"AFD",RCXD)) Q:'RCXD  D
"RTN","RCDPESP",316,0)
 . S RCERA="" F  S RCERA=$O(^RCY(344.4,"AFD",RCXD,RCERA)) Q:'RCERA  D  ;
"RTN","RCDPESP",317,0)
 . . S RCUPD=$$PAYRINIT(RCERA,344.4)
"RTN","RCDPESP",318,0)
 ;
"RTN","RCDPESP",319,0)
 S RCXD=$$FMADD^XLFDT($P(RCDATE,".",1),-1)
"RTN","RCDPESP",320,0)
 F  S RCXD=$O(^RCY(344.31,"ADR",RCXD)) Q:'RCXD  D
"RTN","RCDPESP",321,0)
 . S RCEFT="" F  S RCEFT=$O(^RCY(344.31,"ADR",RCXD,RCEFT)) Q:'RCEFT  D  ;
"RTN","RCDPESP",322,0)
 . . S RCUPD=$$PAYRINIT(RCEFT,344.31)
"RTN","RCDPESP",323,0)
 ;
"RTN","RCDPESP",324,0)
 ;Update last run date
"RTN","RCDPESP",325,0)
 S RCFDA(344.61,"1,",.08)=$$NOW^XLFDT()
"RTN","RCDPESP",326,0)
 D FILE^DIE("","RCFDA")
"RTN","RCDPESP",327,0)
 ; PRCA*4.5*326 - End modified block
"RTN","RCDPESP",328,0)
 Q
"RTN","RCDPESP",329,0)
 ;
"RTN","RCDPESP",330,0)
PAYERPRM(IEN,EXMDPOST,EXMDDECR) ; USED TO UPDATE A NEW PAYER
"RTN","RCDPESP",331,0)
 ; CHECK IEN FOR VALID INPUT
"RTN","RCDPESP",332,0)
 Q:'$G(IEN)!('$D(^RCY(344.4,+$G(IEN),0))) 0
"RTN","RCDPESP",333,0)
 N PFDA,PAYER,ID,CPAYERID,PIENS
"RTN","RCDPESP",334,0)
 S PAYER=$E($$GET1^DIQ(344.4,IEN_",",.06),1,35)
"RTN","RCDPESP",335,0)
 Q:PAYER="" 0
"RTN","RCDPESP",336,0)
 S ID=$E($$GET1^DIQ(344.4,IEN_",",.03),1,30)
"RTN","RCDPESP",337,0)
 I '$D(^RCY(344.6,"CPID",PAYER,ID)) Q 0
"RTN","RCDPESP",338,0)
 ; FILE CURRENT SETTINGS
"RTN","RCDPESP",339,0)
 S PIENS=$O(^RCY(344.6,"CPID",PAYER,ID,0))_","
"RTN","RCDPESP",340,0)
 S PFDA(344.6,PIENS,.04)=DUZ
"RTN","RCDPESP",341,0)
 S PFDA(344.6,PIENS,.05)=$$NOW^XLFDT
"RTN","RCDPESP",342,0)
 S PFDA(344.6,PIENS,.06)=+$G(EXMDPOST)
"RTN","RCDPESP",343,0)
 S PFDA(344.6,PIENS,.07)=+$G(EXMDDECR)
"RTN","RCDPESP",344,0)
 D FILE^DIE(,"PFDA")
"RTN","RCDPESP",345,0)
 Q 1
"RTN","RCDPESP",346,0)
 ;
"RTN","RCDPESP",347,0)
PAYRINIT(IEN,FILE) ; Add Payer Name and Payer ID to Payer table #344.6 
"RTN","RCDPESP",348,0)
 ;
"RTN","RCDPESP",349,0)
 N PFDA,PAYER,ID,PIENS,ERADATE,RCFLD
"RTN","RCDPESP",350,0)
 ;
"RTN","RCDPESP",351,0)
 Q:'$G(IEN)!('$D(^RCY(344.4,+$G(IEN)))) 0
"RTN","RCDPESP",352,0)
 ; PRCA*4.5*326 - Add payers from EFTs
"RTN","RCDPESP",353,0)
 S RCFLD("NAME")=$S(FILE=344.4:.06,1:.02)
"RTN","RCDPESP",354,0)
 S RCFLD("ID")=.03
"RTN","RCDPESP",355,0)
 S RCFLD("DATE")=$S(FILE=344.4:.07,1:.13)
"RTN","RCDPESP",356,0)
 ;
"RTN","RCDPESP",357,0)
 S PAYER=$$GET1^DIQ(FILE,IEN_",",RCFLD("NAME")) Q:PAYER="" 0
"RTN","RCDPESP",358,0)
 S ID=$$GET1^DIQ(FILE,IEN_",",RCFLD("ID")) Q:ID="" 0
"RTN","RCDPESP",359,0)
 I $D(^RCY(344.6,"CPID",PAYER,ID)) Q 1
"RTN","RCDPESP",360,0)
 S ERADATE=$$GET1^DIQ(FILE,IEN_",",RCFLD("DATE"),"I")
"RTN","RCDPESP",361,0)
 ; PRCA*4.5*326 - End modified block
"RTN","RCDPESP",362,0)
 ;
"RTN","RCDPESP",363,0)
 ; UPDATE PAYER PARAMETERS
"RTN","RCDPESP",364,0)
 S PIENS="+1,"
"RTN","RCDPESP",365,0)
 S PFDA(344.6,PIENS,.01)=PAYER
"RTN","RCDPESP",366,0)
 S PFDA(344.6,PIENS,.02)=ID
"RTN","RCDPESP",367,0)
 S PFDA(344.6,PIENS,.03)=ERADATE
"RTN","RCDPESP",368,0)
 S PFDA(344.6,PIENS,.04)=.5
"RTN","RCDPESP",369,0)
 S PFDA(344.6,PIENS,.05)=$$NOW^XLFDT
"RTN","RCDPESP",370,0)
 S PFDA(344.6,PIENS,.06)=0
"RTN","RCDPESP",371,0)
 S PFDA(344.6,PIENS,.07)=0
"RTN","RCDPESP",372,0)
 I FILE=344.31 S PFDA(344.6,PIENS,.11)=1 ; PRCA*4.5*326
"RTN","RCDPESP",373,0)
 D UPDATE^DIE(,"PFDA")
"RTN","RCDPESP",374,0)
 Q 1
"RTN","RCDPESP",375,0)
 ;
"RTN","RCDPESP",376,0)
SCREEN(IEN) ; Screen out payers that don't have an associated ERA - PRCA*4.5*326
"RTN","RCDPESP",377,0)
 ; Input: IEN - Internal entry number from file 344.6
"RTN","RCDPESP",378,0)
 ; Returns: 1 - Payer has an associated ERA, otherwise 0.
"RTN","RCDPESP",379,0)
 N NAME,ID
"RTN","RCDPESP",380,0)
 S NAME=$$GET1^DIQ(344.6,IEN_",",.01)
"RTN","RCDPESP",381,0)
 S ID=$$GET1^DIQ(344.6,IEN_",",.02)
"RTN","RCDPESP",382,0)
 I NAME=""!(ID="") Q 0
"RTN","RCDPESP",383,0)
 I $D(^RCY(344.4,"APT",NAME,ID)) Q 1
"RTN","RCDPESP",384,0)
 Q 0
"RTN","RCDPESP1")
0^45^B115604323
"RTN","RCDPESP1",1,0)
RCDPESP1 ;BIRM/SAB,hrubovcak - ePayment Lockbox Site Parameter Reports ;7/1/15
"RTN","RCDPESP1",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPESP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP1",4,0)
 ;
"RTN","RCDPESP1",5,0)
 Q
"RTN","RCDPESP1",6,0)
 ;
"RTN","RCDPESP1",7,0)
RPT ; EDI Lockbox Parameters Report [RCDPE SITE PARAMETER REPORT]
"RTN","RCDPESP1",8,0)
 ; report data from:
"RTN","RCDPESP1",9,0)
 ;    AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",10,0)
 ;    RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",11,0)
 ;    RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",12,0)
 ;
"RTN","RCDPESP1",13,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP1",14,0)
 ;    RTYPE - Type of Report to run (Medical, Pharmacy, or Both)
"RTN","RCDPESP1",15,0)
 ;
"RTN","RCDPESP1",16,0)
 N RCTYPE
"RTN","RCDPESP1",17,0)
 W !,$$HDRLN,!
"RTN","RCDPESP1",18,0)
 ;
"RTN","RCDPESP1",19,0)
 S RCTYPE=$$RTYPE^RCDPESP2() G:RCTYPE=-1 RPTQ
"RTN","RCDPESP1",20,0)
 W !!   ;Spacing before the next prompt
"RTN","RCDPESP1",21,0)
 ;
"RTN","RCDPESP1",22,0)
 N %ZIS,POP S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPESP1",23,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPESP1",24,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPESP1",25,0)
 .S ZTRTN="SPRPT^RCDPESP1",ZTDESC=$$HDRLN,ZTSAVE("RC*")=""
"RTN","RCDPESP1",26,0)
 .D ^%ZTLOAD
"RTN","RCDPESP1",27,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPESP1",28,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPESP1",29,0)
 ;
"RTN","RCDPESP1",30,0)
 D SPRPT
"RTN","RCDPESP1",31,0)
RPTQ Q
"RTN","RCDPESP1",32,0)
 ;
"RTN","RCDPESP1",33,0)
SPRPT ; site parameter report entry point
"RTN","RCDPESP1",34,0)
 ; RCNTR - counter
"RTN","RCDPESP1",35,0)
 ; RCFLD - DD field number
"RTN","RCDPESP1",36,0)
 ; RCHDR - header information
"RTN","RCDPESP1",37,0)
 ; RCPARM - parameters
"RTN","RCDPESP1",38,0)
 ; RCSTOP - exit flag
"RTN","RCDPESP1",39,0)
 N J,RCNTR,RCFLD,RCGLB,RCHDR,RCPARM,RCSTOP,V,X,Y,RCSTRING
"RTN","RCDPESP1",40,0)
 N RCDATA,RCCODE,RCDESC,RCSTAT,RCI,RCCARCD,RCCIEN,RCITEM,RCACTV
"RTN","RCDPESP1",41,0)
 ;
"RTN","RCDPESP1",42,0)
 S X="RC" F  S X=$O(^TMP($J,X)) Q:'($E(X,1,2)="RC")  K ^TMP($J,X) ; clear out old data
"RTN","RCDPESP1",43,0)
 ;
"RTN","RCDPESP1",44,0)
 ; RCGLB - ^TMP global storage locations
"RTN","RCDPESP1",45,0)
 ;     ^TMP($J,"RC342") - AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",46,0)
 ;   ^TMP($J,"RC344.6") - RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",47,0)
 ;  ^TMP($J,"RC344.61") - RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",48,0)
 F J=342,344.6,344.61 S RCGLB(J)=$NA(^TMP($J,"RC"_J)) K @RCGLB(J)
"RTN","RCDPESP1",49,0)
 ;
"RTN","RCDPESP1",50,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"10S")
"RTN","RCDPESP1",51,0)
 S RCHDR("PGNMBR")=0  ; page number
"RTN","RCDPESP1",52,0)
 ;
"RTN","RCDPESP1",53,0)
 ; AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",54,0)
 D GETS^DIQ(342,"1,",".01;7.02;7.03;7.04;7.05;7.06;7.07;7.08;","E",RCGLB(342))
"RTN","RCDPESP1",55,0)
 ; add site to header data
"RTN","RCDPESP1",56,0)
 S RCHDR("SITE")="Site: "_@RCGLB(342)@(342,"1,",.01,"E")
"RTN","RCDPESP1",57,0)
 ;
"RTN","RCDPESP1",58,0)
 F RCFLD=7.02,7.03,7.04,7.05,7.06,7.07,7.08 S RCITEM=$S(RCFLD>7.04:"TITLE",1:"LABEL") D  ; EFT and ERA days unmatched  - PRCA*4.5*321
"RTN","RCDPESP1",59,0)
 . I RCTYPE="P",(RCFLD=7.05)!(RCFLD=7.07) Q  ; Dont display if only showing Pharmacy parameters - PRCA*4.5*321
"RTN","RCDPESP1",60,0)
 . I RCTYPE="M",(RCFLD=7.06)!(RCFLD=7.08) Q  ; Dont display if only showing medical parameters - PRCA*4.5*321
"RTN","RCDPESP1",61,0)
 . S Y=$$GET1^DID(342,RCFLD,,RCITEM)_": "_@RCGLB(342)@(342,"1,",RCFLD,"E")
"RTN","RCDPESP1",62,0)
 . I RCFLD=7.05 D AD2RPT(" ")
"RTN","RCDPESP1",63,0)
 . I (RCFLD=7.06)&(RCTYPE="P") D AD2RPT(" ")
"RTN","RCDPESP1",64,0)
 . D AD2RPT(Y)
"RTN","RCDPESP1",65,0)
 ;
"RTN","RCDPESP1",66,0)
 D AD2RPT(" ")
"RTN","RCDPESP1",67,0)
 ;
"RTN","RCDPESP1",68,0)
 ; Display Medical Parameters
"RTN","RCDPESP1",69,0)
 ; RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",70,0)
 D GETS^DIQ(344.61,"1,",".02;.03;.04;.05;.06;.07;.1;.11;.12;1.01;1.02","E",RCGLB(344.61)) ; PRCA*4.5*321/PRCA*4.5*326
"RTN","RCDPESP1",71,0)
 ;
"RTN","RCDPESP1",72,0)
 S Y=$$GET1^DID(344.61,.1,,"LABEL")_": "_@RCGLB(344.61)@(344.61,"1,",.1,"E") ; PRCA*4.5*321
"RTN","RCDPESP1",73,0)
 D AD2RPT(Y) ; PRCA*4.5*321
"RTN","RCDPESP1",74,0)
 D AD2RPT(" ") ;  PRCA*4.5*321
"RTN","RCDPESP1",75,0)
 ;
"RTN","RCDPESP1",76,0)
 ; get auto-post and auto-decrease settings, save zero node
"RTN","RCDPESP1",77,0)
 S X=$G(^RCY(344.61,1,0)),RCPARM("AUTO-POST")=$P(X,U,2),RCPARM("AUTO-DECREASE")=$P(X,U,3),RCPARM(344.61,0)=X
"RTN","RCDPESP1",78,0)
 S RCPARM("RX AUTO-POST")=$P($G(^RCY(344.61,1,1)),U)
"RTN","RCDPESP1",79,0)
 ;
"RTN","RCDPESP1",80,0)
 ; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",81,0)
 ;   screening logic: ^DD(344.6,.06,0)="EXCLUDE MED CLAIMS POSTING^S^0:No;1:Yes;^0;6^Q"
"RTN","RCDPESP1",82,0)
 D LIST^DIC(344.6,,"@;.01;.02;.06;1","P",,,,,"I $P(^(0),U,6)=1",,RCGLB(344.6))
"RTN","RCDPESP1",83,0)
 ;
"RTN","RCDPESP1",84,0)
 ; PRCA*4.5*304 - Print Medical Claim Parameters
"RTN","RCDPESP1",85,0)
 I RCTYPE'="P" D
"RTN","RCDPESP1",86,0)
 .; RCDPE PARAMETER file (#344.61), auto-posting of medical claims
"RTN","RCDPESP1",87,0)
 .S X=$$GET1^DID(344.61,.02,,"TITLE"),V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",88,0)
 .S Y=X_" "_@RCGLB(344.61)@(344.61,"1,",.02,"E")
"RTN","RCDPESP1",89,0)
 .D AD2RPT(Y)
"RTN","RCDPESP1",90,0)
 .;
"RTN","RCDPESP1",91,0)
 .I (RCPARM("AUTO-POST")!RCPARM("AUTO-DECREASE")) D  ; list auto-post excluded payers
"RTN","RCDPESP1",92,0)
 ..I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",93,0)
 ...S X="     No payers excluded from medical auto-posting." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",94,0)
 ..;
"RTN","RCDPESP1",95,0)
 ..D AD2RPT("   Excluded Payer                      Comment")
"RTN","RCDPESP1",96,0)
 ..S RCNTR=0
"RTN","RCDPESP1",97,0)
 ..F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",98,0)
 ...S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",99,0)
 ...S Y="   "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",100,0)
 ...D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",101,0)
 .;
"RTN","RCDPESP1",102,0)
 .I RCPARM("AUTO-POST") D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",103,0)
 .;
"RTN","RCDPESP1",104,0)
 .K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",105,0)
 .; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",106,0)
 .;   screening logic: ^DD(344.6,.07,0)="EXCLUDE MED CLAIMS DECREASE^S^0:No;1:Yes;^0;7^Q"
"RTN","RCDPESP1",107,0)
 .D LIST^DIC(344.6,,"@;.01;.02;.07;2","P",,,,,"I $P(^(0),U,7)=1",,RCGLB(344.6))
"RTN","RCDPESP1",108,0)
 .;
"RTN","RCDPESP1",109,0)
 .; BEGIN PRCA*4.5*326
"RTN","RCDPESP1",110,0)
 .D AD2RPT(" ") ; blank line
"RTN","RCDPESP1",111,0)
 .; Display Auto-Decrease parameters for paid lines
"RTN","RCDPESP1",112,0)
 .D AUTOD(1,.RCGBL,RCTYPE)
"RTN","RCDPESP1",113,0)
 .; Display Auto-Decrease parameters for no-pay lines
"RTN","RCDPESP1",114,0)
 .D AUTOD(0,.RCGBL,RCTYPE)
"RTN","RCDPESP1",115,0)
 .D AD2RPT(" ") ; blank line
"RTN","RCDPESP1",116,0)
 .; END PRCA*4.5*326
"RTN","RCDPESP1",117,0)
 .I (RCPARM("AUTO-POST")!RCPARM("AUTO-DECREASE")) D  ; list excluded auto-decrease payers
"RTN","RCDPESP1",118,0)
 .. Q:'RCPARM("AUTO-DECREASE")
"RTN","RCDPESP1",119,0)
 .. D AD2RPT("     All payers excluded from Auto-Posting are excluded from Auto-Decrease.")
"RTN","RCDPESP1",120,0)
 .. I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",121,0)
 ... S X="       No additional payers excluded from Medical Auto-Decrease." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",122,0)
 ..;
"RTN","RCDPESP1",123,0)
 .. D AD2RPT("     Additional Excluded Payer           Comment")
"RTN","RCDPESP1",124,0)
 .. S RCNTR=0
"RTN","RCDPESP1",125,0)
 .. F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",126,0)
 ... S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",127,0)
 ... S Y="     "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",128,0)
 ... D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",129,0)
 .;
"RTN","RCDPESP1",130,0)
 .D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",131,0)
 ;
"RTN","RCDPESP1",132,0)
 K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",133,0)
 ; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",134,0)
 ;   screening logic: ^DD(344.6,.06,0)="EXCLUDE MED CLAIMS POSTING^S^0:No;1:Yes;^0;6^Q"
"RTN","RCDPESP1",135,0)
 D LIST^DIC(344.6,,"@;.01;.02;.08;3","P",,,,,"I $P(^(0),U,8)=1",,RCGLB(344.6))
"RTN","RCDPESP1",136,0)
 ;
"RTN","RCDPESP1",137,0)
 ; PRCA*4.5*304 - Print Pharmacy Claim Parameters
"RTN","RCDPESP1",138,0)
 I RCTYPE'="M" D
"RTN","RCDPESP1",139,0)
 .; RCDPE PARAMETER file (#344.61), auto-posting of pharmacy claims
"RTN","RCDPESP1",140,0)
 .S X=$$GET1^DID(344.61,1.01,,"TITLE"),V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",141,0)
 .S Y=X_" "_@RCGLB(344.61)@(344.61,"1,",1.01,"E")
"RTN","RCDPESP1",142,0)
 .D AD2RPT(Y)
"RTN","RCDPESP1",143,0)
 .;
"RTN","RCDPESP1",144,0)
 . I RCPARM("RX AUTO-POST") D  ; list auto-post excluded payers
"RTN","RCDPESP1",145,0)
 .. I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",146,0)
 ... S X="     No payers excluded from pharmacy auto-posting." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",147,0)
 ..;
"RTN","RCDPESP1",148,0)
 .. D AD2RPT("   Excluded Payer                      Comment")
"RTN","RCDPESP1",149,0)
 .. S RCNTR=0
"RTN","RCDPESP1",150,0)
 .. F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",151,0)
 ... S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",152,0)
 ... S Y="   "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",153,0)
 ... D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",154,0)
 .. S X=$P($$GET1^DID(344.61,1.02,,"TITLE")," (",1)_": "  ; remove yes/no prompt
"RTN","RCDPESP1",155,0)
 .. S Y="     "_X_" "_$S(@RCGLB(344.61)@(344.61,"1,",1.02,"E")="":"No",1:@RCGLB(344.61)@(344.61,"1,",1.02,"E"))
"RTN","RCDPESP1",156,0)
 .. D AD2RPT(" "),AD2RPT(Y)
"RTN","RCDPESP1",157,0)
 .;
"RTN","RCDPESP1",158,0)
 .I RCPARM("RX AUTO-POST") D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",159,0)
 .;
"RTN","RCDPESP1",160,0)
 .K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",161,0)
 .;
"RTN","RCDPESP1",162,0)
 .; PRCA*4.5*304 - Print the CARC Auto-decrease parameters
"RTN","RCDPESP1",163,0)
 . I $$CARCCHK(RCTYPE,"P") D
"RTN","RCDPESP1",164,0)
 .. S RCSTRING=$TR($J("",73)," ","-"),RCI=0
"RTN","RCDPESP1",165,0)
 .. D AD2RPT("  CARC  Description                                             Max. Amt")
"RTN","RCDPESP1",166,0)
 .. D AD2RPT(RCSTRING)
"RTN","RCDPESP1",167,0)
 .. ;
"RTN","RCDPESP1",168,0)
 .. ; Loop and print entries
"RTN","RCDPESP1",169,0)
 .. F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP1",170,0)
 .. . S RCDATA=$G(^RCY(344.62,RCI,0)),Y=""
"RTN","RCDPESP1",171,0)
 .. . Q:RCDATA=""
"RTN","RCDPESP1",172,0)
 .. . S RCCODE=$P(RCDATA,U),RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP1",173,0)
 .. . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP1",174,0)
 .. . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPESP1",175,0)
 .. . Q:RCSTAT'=1
"RTN","RCDPESP1",176,0)
 .. . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP1",177,0)
 .. . D GETCODES^RCDPCRR(RCCODE,"","A",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP1",178,0)
 .. . S Y="  "_$E(RCCODE,1,4)_"  "
"RTN","RCDPESP1",179,0)
 .. . S Y=Y_$E(RCDESC,1,55)_$J($P(RCDATA,U,6),10,0)
"RTN","RCDPESP1",180,0)
 .. . I '$$ACT^RCDPRU(345,RCCODE,) S Y=Y_" (I)"  ; if inactive, display (i)
"RTN","RCDPESP1",181,0)
 .. . D AD2RPT(Y)
"RTN","RCDPESP1",182,0)
 ;
"RTN","RCDPESP1",183,0)
 ; RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",184,0)
 F RCFLD=.06,.07 D
"RTN","RCDPESP1",185,0)
 . Q:(RCFLD=.06)&(RCTYPE="P")  ; Dont display if only showing Pharmacy parameters
"RTN","RCDPESP1",186,0)
 . Q:(RCFLD=.07)&(RCTYPE="M")  ; Dont display if only showing medical parameters
"RTN","RCDPESP1",187,0)
 . S Y=$$GET1^DID(344.61,RCFLD,,"TITLE")_" "_@RCGLB(344.61)@(344.61,"1,",RCFLD,"E")
"RTN","RCDPESP1",188,0)
 . D AD2RPT(Y)
"RTN","RCDPESP1",189,0)
 ;
"RTN","RCDPESP1",190,0)
 D AD2RPT(" "),AD2RPT($$ENDORPRT^RCDPEARL)
"RTN","RCDPESP1",191,0)
 ;
"RTN","RCDPESP1",192,0)
 S RCSTOP=0 U IO D SPHDR(.RCHDR)
"RTN","RCDPESP1",193,0)
 S J=0 F  S J=$O(^TMP($J,"RC SP REPORT",J)) Q:'J!RCSTOP  S Y=^TMP($J,"RC SP REPORT",J,0) D
"RTN","RCDPESP1",194,0)
 .W !,Y Q:'$O(^TMP($J,"RC SP REPORT",J))  ; quit if last line
"RTN","RCDPESP1",195,0)
 .I '$G(ZTSK),$E(IOST,1,2)="C-",$Y+3>IOSL D ASK^RCDPEARL(.RCSTOP) I 'RCSTOP D SPHDR(.RCHDR) Q
"RTN","RCDPESP1",196,0)
 .Q:RCSTOP  Q:$Y+2<IOSL
"RTN","RCDPESP1",197,0)
 .D SPHDR(.RCHDR)
"RTN","RCDPESP1",198,0)
 ;
"RTN","RCDPESP1",199,0)
 I '$G(ZTSK),$E(IOST,1,2)="C-",'RCSTOP D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP1",200,0)
 ;
"RTN","RCDPESP1",201,0)
 ; close device
"RTN","RCDPESP1",202,0)
 U IO(0) D ^%ZISC
"RTN","RCDPESP1",203,0)
 ;
"RTN","RCDPESP1",204,0)
 S X="RC" F  S X=$O(^TMP($J,X)) Q:'($E(X,1,2)="RC")  K ^TMP($J,X) ; clean up
"RTN","RCDPESP1",205,0)
 ;
"RTN","RCDPESP1",206,0)
 Q
"RTN","RCDPESP1",207,0)
 ;
"RTN","RCDPESP1",208,0)
SPHDR(HDR) ; HDR passed by ref.
"RTN","RCDPESP1",209,0)
 ; HDR("RUNDATE") - run date, external format
"RTN","RCDPESP1",210,0)
 ;  HDR("PGNMBR") - page number
"RTN","RCDPESP1",211,0)
 ;    HDR("SITE") - site name
"RTN","RCDPESP1",212,0)
 N P,X,Y
"RTN","RCDPESP1",213,0)
 S P=$G(HDR("PGNMBR"))+1,HDR("PGNMBR")=P  ; increment page count
"RTN","RCDPESP1",214,0)
 ; 
"RTN","RCDPESP1",215,0)
 S X=$$HDRLN
"RTN","RCDPESP1",216,0)
 S P=IOM-($L(X)+10)\2,Y=$J(" ",P)_X_$J(" ",P)_" Page: "_HDR("PGNMBR")
"RTN","RCDPESP1",217,0)
 W @IOF,Y
"RTN","RCDPESP1",218,0)
 S X="   Run Date: "_HDR("RUNDATE"),Y=X_$J(HDR("SITE"),IOM-($L(X)+1))
"RTN","RCDPESP1",219,0)
 W !,Y
"RTN","RCDPESP1",220,0)
 S Y=" "_$TR($J("",IOM-2)," ","-")  ; space_row of hyphens
"RTN","RCDPESP1",221,0)
 W !,Y
"RTN","RCDPESP1",222,0)
 Q
"RTN","RCDPESP1",223,0)
 ;
"RTN","RCDPESP1",224,0)
AD2RPT(A) ; add line to report
"RTN","RCDPESP1",225,0)
 Q:$G(A)=""
"RTN","RCDPESP1",226,0)
 N C S C=$G(^TMP($J,"RC SP REPORT",0))+1,^TMP($J,"RC SP REPORT",0)=C
"RTN","RCDPESP1",227,0)
 S ^TMP($J,"RC SP REPORT",C,0)=A Q
"RTN","RCDPESP1",228,0)
 ;
"RTN","RCDPESP1",229,0)
HDRLN() Q "EDI Lockbox Parameters Report"_$S($G(RCTYPE)="B":" - ALL",$G(RCTYPE)="M":" - MEDICAL",$G(RCTYPE)="P":" - PHARMACY",1:"")  ; extrinsic variable
"RTN","RCDPESP1",230,0)
 ;
"RTN","RCDPESP1",231,0)
 ;Function to check to see if the CARC parameters are to appear on the report
"RTN","RCDPESP1",232,0)
CARCCHK(RCTYPE,TYPE) ;
"RTN","RCDPESP1",233,0)
 ;
"RTN","RCDPESP1",234,0)
 N RCMEN,RCREN
"RTN","RCDPESP1",235,0)
 ;
"RTN","RCDPESP1",236,0)
 ; Return 1 if valid to print, 0 otherwise
"RTN","RCDPESP1",237,0)
 ;
"RTN","RCDPESP1",238,0)
 Q:RCTYPE="B"&($G(TYPE)="M") +$P($G(^RCY(344.61,1,0)),U,3)  ;User wants all parameters and we are checking for medical auto decrease
"RTN","RCDPESP1",239,0)
 ;
"RTN","RCDPESP1",240,0)
 Q:RCTYPE="B"&($G(TYPE)="P") +$P($G(^RCY(344.61,1,1)),U,2)  ;User wants all parameters and we are checking for Pharmacy auto decrease
"RTN","RCDPESP1",241,0)
 ;
"RTN","RCDPESP1",242,0)
 S (RCMEN,RCREN)=""
"RTN","RCDPESP1",243,0)
 ;
"RTN","RCDPESP1",244,0)
 ;Print if Report type is medical and auto-decrease for medical is on
"RTN","RCDPESP1",245,0)
 I RCTYPE="M" S RCMEN=+$P($G(^RCY(344.61,1,0)),U,3) Q RCMEN
"RTN","RCDPESP1",246,0)
 ;
"RTN","RCDPESP1",247,0)
 ;Print if Report type is pharmacy and auto-decrease for pharmacy is on
"RTN","RCDPESP1",248,0)
 I RCTYPE="P" S RCREN=+$P($G(^RCY(344.61,1,1)),U,2) Q RCREN
"RTN","RCDPESP1",249,0)
 ;
"RTN","RCDPESP1",250,0)
 Q 0  ;Don't print the CARCs
"RTN","RCDPESP1",251,0)
 ;
"RTN","RCDPESP1",252,0)
 ; BEGIN - PRCA*4.5*326
"RTN","RCDPESP1",253,0)
AUTOD(PAID,RCGBL,RCTYPE) ; Display auto-decrease parameters
"RTN","RCDPESP1",254,0)
 ; INPUT   PAID - 1 = paid line parameters 0 = no-payment line parameters
"RTN","RCDPESP1",255,0)
 ;         RCGBL - field value array from LIST^DIC call
"RTN","RCDPESP1",256,0)
 ;         RCTYPE - report type (P)harmacy, (M)edical
"RTN","RCDPESP1",257,0)
 ; OUTPUT   Lists parameters
"RTN","RCDPESP1",258,0)
 ;
"RTN","RCDPESP1",259,0)
 N CNT,FIELD,X,Y
"RTN","RCDPESP1",260,0)
 ; RCDPE PARAMETER file (#344.61), auto-decrease of medical claims 
"RTN","RCDPESP1",261,0)
 S FIELD=$S(PAID:.03,1:.11)
"RTN","RCDPESP1",262,0)
 S X=$$GET1^DID(344.61,FIELD,,"TITLE"),V=" (Y/N): ",V=" Y/N)"
"RTN","RCDPESP1",263,0)
 S:X[V X=$P(X,V)_$P(X,V,2) ; remove yes/no prompt
"RTN","RCDPESP1",264,0)
 S Y=$J(X,45)_@RCGLB(344.61)@(344.61,"1,",FIELD,"E")
"RTN","RCDPESP1",265,0)
 D AD2RPT(" ")
"RTN","RCDPESP1",266,0)
 D AD2RPT(Y)
"RTN","RCDPESP1",267,0)
 ; If auto-decrease is off - do not display CARCS or auto-decrease days or auto-decrease maximum
"RTN","RCDPESP1",268,0)
 I +$$GET1^DIQ(344.61,"1,",FIELD,"I")=0 Q
"RTN","RCDPESP1",269,0)
 ;
"RTN","RCDPESP1",270,0)
 I PAID D AD2RPT("MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE PER CLAIM: "_"$"_(+$P(RCPARM(344.61,0),U,5)))
"RTN","RCDPESP1",271,0)
 ;
"RTN","RCDPESP1",272,0)
 S CNT=0
"RTN","RCDPESP1",273,0)
 ; Print the CARC Auto-decrease parameters
"RTN","RCDPESP1",274,0)
 I $$CARCCHK(RCTYPE,"M") D
"RTN","RCDPESP1",275,0)
 . D AD2RPT(" ")
"RTN","RCDPESP1",276,0)
 . D AD2RPT(" AUTO-DECREASE "_$S(PAID:"",1:"NO-PAY ")_"MEDICAL CLAIMS FOR THE FOLLOWING CARC/AMOUNTS ONLY:")
"RTN","RCDPESP1",277,0)
 . D AD2RPT(" ")
"RTN","RCDPESP1",278,0)
 . S RCSTRING=$TR($J("",70)," ","-"),RCI=0
"RTN","RCDPESP1",279,0)
 . D AD2RPT(" CARC Description                                            Max. Amt")
"RTN","RCDPESP1",280,0)
 . D AD2RPT(" "_RCSTRING)
"RTN","RCDPESP1",281,0)
 . ;
"RTN","RCDPESP1",282,0)
 . ; Loop and print entries
"RTN","RCDPESP1",283,0)
 . F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP1",284,0)
 . . S Y=""
"RTN","RCDPESP1",285,0)
 . . S RCCODE=$$GET1^DIQ(344.62,RCI_",",.01)
"RTN","RCDPESP1",286,0)
 . . Q:'RCCODE
"RTN","RCDPESP1",287,0)
 . . S RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP1",288,0)
 . . S RCDESC=$G(^RC(345,RCCIEN,1,1,0)) ; WP field 345.04
"RTN","RCDPESP1",289,0)
 . . S FIELD=$S(PAID:.02,1:.08)
"RTN","RCDPESP1",290,0)
 . . S RCSTAT=$$GET1^DIQ(344.62,RCI,FIELD,"I")
"RTN","RCDPESP1",291,0)
 . . Q:RCSTAT'=1
"RTN","RCDPESP1",292,0)
 . . S CNT=CNT+1
"RTN","RCDPESP1",293,0)
 . . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP1",294,0)
 . . D GETCODES^RCDPCRR(RCCODE,"","A",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP1",295,0)
 . . S Y=" "_$J(RCCODE,4)_" "
"RTN","RCDPESP1",296,0)
 . . S Y=Y_$E(RCDESC,1,53)
"RTN","RCDPESP1",297,0)
 . . S:$L(RCDESC)<53 Y=Y_$J("",(53-$L(RCDESC)))
"RTN","RCDPESP1",298,0)
 . . S FIELD=$S(PAID:.06,1:.12)
"RTN","RCDPESP1",299,0)
 . . S Y=Y_$J($$GET1^DIQ(344.62,RCI,FIELD,"I"),10,0)
"RTN","RCDPESP1",300,0)
 . . I '$$ACT^RCDPRU(345,RCCODE,) S Y=Y_" (I)"  ; if inactive, display (i)
"RTN","RCDPESP1",301,0)
 . . D AD2RPT(Y)
"RTN","RCDPESP1",302,0)
 . I CNT=0 D AD2RPT(" No CARCs are set up for "_$S(PAID:"",1:"NO-PAY ")_"auto-decrease")
"RTN","RCDPESP1",303,0)
 ;
"RTN","RCDPESP1",304,0)
 ; Display auto-decrease days
"RTN","RCDPESP1",305,0)
 S FIELD=$S(PAID:.04,1:.12)
"RTN","RCDPESP1",306,0)
 S X=$P($$GET1^DID(344.61,FIELD,,"TITLE")," (",1)_": "
"RTN","RCDPESP1",307,0)
 S Y=$J(X,40)_@RCGLB(344.61)@(344.61,"1,",FIELD,"E")
"RTN","RCDPESP1",308,0)
 D AD2RPT(" "),AD2RPT(Y)
"RTN","RCDPESP1",309,0)
 Q
"RTN","RCDPESP1",310,0)
 ; END - PRCA*4.5*326
"RTN","RCDPESP2")
0^46^B186739461
"RTN","RCDPESP2",1,0)
RCDPESP2 ;BIRM/SAB - ePayment Lockbox Parameter Audit and Exclusion Reports ;07/01/15
"RTN","RCDPESP2",2,0)
 ;;4.5;Accounts Receivable;**298,304,317,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPESP2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP2",4,0)
 ;
"RTN","RCDPESP2",5,0)
 Q
"RTN","RCDPESP2",6,0)
 ;
"RTN","RCDPESP2",7,0)
RPT1 ; EDI Lockbox Parameters Report [RCDPE SITE PARAMETER REPORT]
"RTN","RCDPESP2",8,0)
 ;
"RTN","RCDPESP2",9,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP2",10,0)
 ;              including data concerning changes to the RCDPE PPARAMETER file.
"RTN","RCDPESP2",11,0)
 ;
"RTN","RCDPESP2",12,0)
 ; Input:       None
"RTN","RCDPESP2",13,0)
 ;
"RTN","RCDPESP2",14,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",15,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST^DIC OUTPUT
"RTN","RCDPESP2",16,0)
 ;
"RTN","RCDPESP2",17,0)
 ; GLOBALS:     ^RCY(344.7, - RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",18,0)
 ;
"RTN","RCDPESP2",19,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP2",20,0)
 ;
"RTN","RCDPESP2",21,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP2",22,0)
 ;    RCRANGE - RETURN VALUE FOR DATE RANGE FOR THE REPORT
"RTN","RCDPESP2",23,0)
 ;    RCSTDT  - STARTING DATE FOR THE REPORT
"RTN","RCDPESP2",24,0)
 ;    RCENDT  - END DATE FOR THE REPORT
"RTN","RCDPESP2",25,0)
 ;    RCEXCEL - INDIATES IF OUTPUT IS GOING TO EXCEL
"RTN","RCDPESP2",26,0)
 ;    RCSCR   - SCREEN FOR LIST^DIC CALL
"RTN","RCDPESP2",27,0)
 ;    RCFLDS  - FIELDS TO BE CAPTURED IN LIST^DIC CALL
"RTN","RCDPESP2",28,0)
 ;    RCDIGET   - ^TMP GLOBAL RESULTS FROM LIST^DIC CALL
"RTN","RCDPESP2",29,0)
 ;    RCDIERR   - HOLDS ERRORS FROM LIST^DIC
"RTN","RCDPESP2",30,0)
 ;    RCHDR("RUNDATE")   - DATE THE REPORT RAN
"RTN","RCDPESP2",31,0)
 ;    RCHDR("PAGE")  - PAGE COUNTER
"RTN","RCDPESP2",32,0)
 ;    RCSTOP  - STOP DISPLAYING THE REPORT
"RTN","RCDPESP2",33,0)
 ;    RCPARAM - PARAMETER THAT WAS CHANGED
"RTN","RCDPESP2",34,0)
 ;    RCPARAM("OLDVAL")   - OLD PARAMETER VALUE
"RTN","RCDPESP2",35,0)
 ;    RCPARAM("TIME")  - TIME PARAMETER WAS CHANGED
"RTN","RCDPESP2",36,0)
 ;    RCPARAM("NEWVAL")   - NEW PARAMETER VALUE
"RTN","RCDPESP2",37,0)
 ;    RCPARAM("USER")  - USER WHO CHANGED A PARAMETER
"RTN","RCDPESP2",38,0)
 ;    RCTMP   - HOLDS ONE LINE OF DATA FROM LIST^DIC OUTPUT
"RTN","RCDPESP2",39,0)
 ;    RCTYPE  - TYPE OF REPORT TO RUN (MEDICAL, PHARMACY, OR BOTH)
"RTN","RCDPESP2",40,0)
 ;    RCTF - FIELD NUMBER FROM RCTMP VARIABLE
"RTN","RCDPESP2",41,0)
 ;
"RTN","RCDPESP2",42,0)
 N RCDIERR,RCDIGET,RCENDT,RCEXCEL,RCFLDS,RCHDR,RCIEN,RCPARAM,RCRANGE,RCSCR,RCSTDT,RCSTOP
"RTN","RCDPESP2",43,0)
 N RCTF,RCTMP,RCTYPE,RCFILE,RCSL ; RCTF added PRCA*4.5*326
"RTN","RCDPESP2",44,0)
 ; Kernel variables
"RTN","RCDPESP2",45,0)
 N X1,X2,X,Y,%ZIS,POP
"RTN","RCDPESP2",46,0)
 S RCSTOP=0,RCSL=0
"RTN","RCDPESP2",47,0)
 W !!,"EDI Lockbox Parameters Audit Report",!
"RTN","RCDPESP2",48,0)
 ;
"RTN","RCDPESP2",49,0)
 S (RCHDR("PAGE"),RCSTOP,RCHDR,RCEXCEL)=0
"RTN","RCDPESP2",50,0)
 ;
"RTN","RCDPESP2",51,0)
 ; retrieve report type (Medical, Pharmacy, or Both)
"RTN","RCDPESP2",52,0)
 S RCTYPE=$$RTYPE()
"RTN","RCDPESP2",53,0)
 Q:RCTYPE=-1
"RTN","RCDPESP2",54,0)
 S RCHDR("REPORTTYPE")=RCTYPE
"RTN","RCDPESP2",55,0)
 ;
"RTN","RCDPESP2",56,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPESP2",57,0)
 Q:RCRANGE=0
"RTN","RCDPESP2",58,0)
 S RCSTDT=$P(RCRANGE,U,2),RCENDT=$P(RCRANGE,U,3)
"RTN","RCDPESP2",59,0)
 S RCEXCEL=$$DISPTY^RCDPEM3() Q:+RCEXCEL=-1
"RTN","RCDPESP2",60,0)
 ; Display capture information for Excel
"RTN","RCDPESP2",61,0)
 I RCEXCEL D INFO^RCDPEM6
"RTN","RCDPESP2",62,0)
 ;Select output device
"RTN","RCDPESP2",63,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP2",64,0)
 ; INPUT PARAMETER:
"RTN","RCDPESP2",65,0)
 ;   RCEXCEL - IF 1 THEN OUTPUT FOR EXCEL
"RTN","RCDPESP2",66,0)
 ;
"RTN","RCDPESP2",67,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5S")
"RTN","RCDPESP2",68,0)
 S RCHDR("DATERANGE")=$$FMTE^XLFDT(RCSTDT,"5D")_" - "_$$FMTE^XLFDT(RCENDT,"5D")
"RTN","RCDPESP2",69,0)
 ;
"RTN","RCDPESP2",70,0)
 S RCENDT=RCENDT+.999999
"RTN","RCDPESP2",71,0)
 ;S RCSCR="I ($P(^(0),U,5)=344.61)&($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",72,0)
 S RCSCR="I ($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",73,0)
 S RCFLDS="@;.04;.01I;.07;.06;.03;.05I;.02"
"RTN","RCDPESP2",74,0)
 S RCDIGET=$NA(^TMP("RCDPESP2",$J)) K @RCDIGET
"RTN","RCDPESP2",75,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR,,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",76,0)
 I $D(RCDIERR) W !!,"ERROR COLLECTING THE REPORT DATA" D ASK^RCDPEARL() Q
"RTN","RCDPESP2",77,0)
 ; No changes found for date range - quit - comment added PRCA*4.5*326
"RTN","RCDPESP2",78,0)
 I '$D(@RCDIGET@("DILIST",1)) D  Q
"RTN","RCDPESP2",79,0)
 . D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) S RCSL=9
"RTN","RCDPESP2",80,0)
 . W !,"NO PARAMETER AUDIT ENTRIES TO REPORT",!
"RTN","RCDPESP2",81,0)
 . D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",82,0)
 ; Loop though changes from #344.7 - comment added PRCA*4.5*326
"RTN","RCDPESP2",83,0)
 S RCIEN=0
"RTN","RCDPESP2",84,0)
 F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",85,0)
 . I 'RCHDR("PAGE") D
"RTN","RCDPESP2",86,0)
 . . D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) S RCSL=9
"RTN","RCDPESP2",87,0)
 . Q:RCSTOP
"RTN","RCDPESP2",88,0)
 . K RCPARAM
"RTN","RCDPESP2",89,0)
 . S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,8)
"RTN","RCDPESP2",90,0)
 . S RCFILE=$P(RCTMP,U,6)
"RTN","RCDPESP2",91,0)
 . S RCTF=$P(RCTMP,U) ; PRCA*4.5*326
"RTN","RCDPESP2",92,0)
 . ;
"RTN","RCDPESP2",93,0)
 . Q:RCFILE=344.6  ; Excluded payers reported elswhere
"RTN","RCDPESP2",94,0)
 . ;
"RTN","RCDPESP2",95,0)
 . S RCPARAM=$$GET1^DID(RCFILE,RCTF,,"LABEL") ; PRCA*4.5*326
"RTN","RCDPESP2",96,0)
 . ;
"RTN","RCDPESP2",97,0)
 . Q:'$$RPTYPE(RCTYPE,RCPARAM)
"RTN","RCDPESP2",98,0)
 . ;
"RTN","RCDPESP2",99,0)
 . I RCFILE=344.61,RCTF=.11 S RCPARAM="AUTO-DECREASE MED NOPAY ENABLED" ; PRCA*4.5*326
"RTN","RCDPESP2",100,0)
 . I RCFILE=344.61,RCTF=.12 S RCPARAM="AUTO-DECREASE MED DAYS (NO-PAY)" ; PRCA*4.5*326
"RTN","RCDPESP2",101,0)
 . ;
"RTN","RCDPESP2",102,0)
 . S RCPARAM("TIME")=$$FMTE^XLFDT($P(RCTMP,U,2),"2")
"RTN","RCDPESP2",103,0)
 . S RCPARAM("USER")=$P(RCTMP,U,5)
"RTN","RCDPESP2",104,0)
 . ; Next line - added EDI claim auto-decrease no-pay parameter field .08 - PRCA*4.5*326
"RTN","RCDPESP2",105,0)
 . I (RCTF=.02)!(RCTF=1.01)!(RCTF=.08) D
"RTN","RCDPESP2",106,0)
 . . I RCFILE=344.62 S RCPARAM=RCPARAM_" ("_$S($P(RCTMP,U,7)'="":$P($G(^RCY(RCFILE,$P(RCTMP,U,7),0)),U,1),1:"ERR")_")"
"RTN","RCDPESP2",107,0)
 . . S RCPARAM("OLDVAL")=$S(+$P(RCTMP,U,3)=0:"No",+$P(RCTMP,U,3)=1:"Yes",1:"Err")
"RTN","RCDPESP2",108,0)
 . . S RCPARAM("NEWVAL")=$S(+$P(RCTMP,U,4)=0:"No",+$P(RCTMP,U,4)=1:"Yes",1:"Err")
"RTN","RCDPESP2",109,0)
 . ; Next line - added EDI claim auto-audit parameter fields - PRCA*4.5*321
"RTN","RCDPESP2",110,0)
 . I (RCTF=.03)!(RCTF=.11)!(RCTF=7.05)!(RCTF=7.06)!(RCTF=7.07)!(RCTF=7.08) D
"RTN","RCDPESP2",111,0)
 . . S RCPARAM("OLDVAL")=$S($P(RCTMP,U,3):"Yes",1:"No")
"RTN","RCDPESP2",112,0)
 . . S RCPARAM("NEWVAL")=$S($P(RCTMP,U,4):"Yes",1:"No")
"RTN","RCDPESP2",113,0)
 . ; Next line - added EDI claim auto-decrease no-pay parameter field .12 - PRCA*4.5*326
"RTN","RCDPESP2",114,0)
 . I (RCFILE=344.62)&((RCTF=.12)!(RCTF=.06)) D
"RTN","RCDPESP2",115,0)
 . . S RCPARAM=RCPARAM_" ("_$S($P(RCTMP,U,7)'="":$P($G(^RCY(RCFILE,$P(RCTMP,U,7),0)),U,1),1:"ERR")_")"
"RTN","RCDPESP2",116,0)
 . ; Next line - added EDI claim auto-audit parameter fields - PRCA*4.5*321
"RTN","RCDPESP2",117,0)
 . I '$F("^.02^.03^1.01^7.05^7.06^7.07^7.08^.08^.11^",U_RCTF_U) D  ; Add .08 and .11 PRCA*4.5*326
"RTN","RCDPESP2",118,0)
 . . S RCPARAM("OLDVAL")=$P(RCTMP,U,3)
"RTN","RCDPESP2",119,0)
 . . S RCPARAM("NEWVAL")=$P(RCTMP,U,4)
"RTN","RCDPESP2",120,0)
 . I 'RCEXCEL D
"RTN","RCDPESP2",121,0)
 . . W !,RCPARAM,?32,RCPARAM("TIME"),?51,RCPARAM("OLDVAL"),?56,RCPARAM("NEWVAL"),?61,$E(RCPARAM("USER"),1,IOM-61) S RCSL=RCSL+1
"RTN","RCDPESP2",122,0)
 . . I RCSL>=(IOSL-2) D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) Q:RCSTOP  S RCSL=9
"RTN","RCDPESP2",123,0)
 . I RCEXCEL W !,RCPARAM_U_RCPARAM("TIME")_U_RCPARAM("OLDVAL")_U_RCPARAM("NEWVAL")_U_RCPARAM("USER")
"RTN","RCDPESP2",124,0)
 ;
"RTN","RCDPESP2",125,0)
 ; end of report
"RTN","RCDPESP2",126,0)
 I 'RCSTOP W !!,$$ENDORPRT^RCDPEARL D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",127,0)
RPT1Q K @RCDIGET
"RTN","RCDPESP2",128,0)
 Q
"RTN","RCDPESP2",129,0)
 ;
"RTN","RCDPESP2",130,0)
HDRLPR(RCEXCEL,RCHDR,RCSTOP) ; Report header Lockbox Parameter Report
"RTN","RCDPESP2",131,0)
 ;   RCEXCEL - if true output for Excel
"RTN","RCDPESP2",132,0)
 ;   RCHDR("PAGE") - page count, passed by ref.
"RTN","RCDPESP2",133,0)
 ;   RCSTOP  - report exit flag
"RTN","RCDPESP2",134,0)
 ;   RCTYPE  - Type of report to run
"RTN","RCDPESP2",135,0)
 ;
"RTN","RCDPESP2",136,0)
 N RCTYPED
"RTN","RCDPESP2",137,0)
 S RCTYPED=$S(RCHDR("REPORTTYPE")="M":"MEDICAL",RCHDR("REPORTTYPE")="P":"PHARMACY",1:"ALL")
"RTN","RCDPESP2",138,0)
 ;
"RTN","RCDPESP2",139,0)
 I RCEXCEL D  Q  ; Excel header for PARAMETER AUDITS
"RTN","RCDPESP2",140,0)
 .Q:RCHDR("PAGE")
"RTN","RCDPESP2",141,0)
 .W !,"PARAMETER^DATE/TIME EDITED^OLD VALUE^NEW VALUE^USER"
"RTN","RCDPESP2",142,0)
 .S RCHDR("PAGE")=1  ; only print once
"RTN","RCDPESP2",143,0)
 ;
"RTN","RCDPESP2",144,0)
 I 'RCEXCEL D
"RTN","RCDPESP2",145,0)
 .I RCHDR("PAGE") D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP2",146,0)
 .W @IOF
"RTN","RCDPESP2",147,0)
 .S RCHDR("PAGE")=RCHDR("PAGE")+1
"RTN","RCDPESP2",148,0)
 . W $$CNTR("EDI Lockbox Parameter Audit Report"),?IOM-8,"Page: "_RCHDR("PAGE")
"RTN","RCDPESP2",149,0)
 . W !,$$CNTR("RUN DATE: "_RCHDR("RUNDATE"))
"RTN","RCDPESP2",150,0)
 . W !,$$CNTR("DATE RANGE: "_RCHDR("DATERANGE"))
"RTN","RCDPESP2",151,0)
 . W !,$$CNTR("REPORT TYPE: "_RCTYPED)
"RTN","RCDPESP2",152,0)
 . W !!,"LOCKBOX PARAMETER UPDATES"
"RTN","RCDPESP2",153,0)
 . W !,"-------------------------                           Values"
"RTN","RCDPESP2",154,0)
 . W !,"Parameter                       Date/Time Edited   Old  New  User"
"RTN","RCDPESP2",155,0)
 . N I S $P(I,"=",IOM+1)="" W !,I
"RTN","RCDPESP2",156,0)
 Q
"RTN","RCDPESP2",157,0)
 ;
"RTN","RCDPESP2",158,0)
RPT2 ; EDI Lockbox Exclusion Audit Report [RCDPE EXCLUSION AUDIT REPORT]
"RTN","RCDPESP2",159,0)
 ;
"RTN","RCDPESP2",160,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP2",161,0)
 ;              including data concerning changes to the RCDPE AUTO-PAY EXCLUSION file.
"RTN","RCDPESP2",162,0)
 ;
"RTN","RCDPESP2",163,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",164,0)
 ;              ^RCY(344.6,              RCDPE AUTO-PAY EXCLUSION
"RTN","RCDPESP2",165,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST DIC OUTPUT
"RTN","RCDPESP2",166,0)
 ;
"RTN","RCDPESP2",167,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP2",168,0)
 ;
"RTN","RCDPESP2",169,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP2",170,0)
 ;    RCRANGE - date range for report
"RTN","RCDPESP2",171,0)
 ;    RCSTDT  - report start date
"RTN","RCDPESP2",172,0)
 ;    RCENDT  - report end date
"RTN","RCDPESP2",173,0)
 ;    RCEXCEL - true if report in Excel format
"RTN","RCDPESP2",174,0)
 ;    RCSCR - screening logic for LIST^DIC
"RTN","RCDPESP2",175,0)
 ;    RCFLDS  - fields for LIST^DIC
"RTN","RCDPESP2",176,0)
 ;    RCDIGET - storage for results from LIST^DIC
"RTN","RCDPESP2",177,0)
 ;    RCDIERR - errors from LIST^DIC
"RTN","RCDPESP2",178,0)
 ;    RCHDR("PAGE")  - page counter
"RTN","RCDPESP2",179,0)
 ;    RCHDR("RUNDATE") - date/time report was run 
"RTN","RCDPESP2",180,0)
 ;    RCSTOP  - report exit flag
"RTN","RCDPESP2",181,0)
 ;    RCPARAM - parameter that was changed
"RTN","RCDPESP2",182,0)
 ;    RCPARAM("TIME")   - time parameter changed
"RTN","RCDPESP2",183,0)
 ;    RCPARAM("OLDVAL") - old parameter value
"RTN","RCDPESP2",184,0)
 ;    RCPARAM("NEWVAL") - new parameter value
"RTN","RCDPESP2",185,0)
 ;    RCPARAM("USER")  - USER WHO CHANGED A PARAMETER
"RTN","RCDPESP2",186,0)
 ;    RCTMP - one record from LIST^DIC
"RTN","RCDPESP2",187,0)
 ;    RCFND - flag indicating records returned
"RTN","RCDPESP2",188,0)
 ;    RCTYPE  - TYPE OF REPORT TO RUN (MEDICAL, PHARMACY, OR BOTH)
"RTN","RCDPESP2",189,0)
 ;
"RTN","RCDPESP2",190,0)
 W !!,"   EDI Lockbox Exclusion Audit Report",!
"RTN","RCDPESP2",191,0)
 ;
"RTN","RCDPESP2",192,0)
 N RCENDT,RCEXCEL,RCFLDS,RCFND,RCDIGET,RCHDR,RCIEN,RCDIERR,RCPARAM,RCRANGE,RCSCR,RCSTDT,RCSTOP,RCTMP,RCTYPE,RCSCRTYP,RCDIMED,RCDIRX
"RTN","RCDPESP2",193,0)
 ; Kernel variables
"RTN","RCDPESP2",194,0)
 N X1,X2,X,Y,%ZIS,POP
"RTN","RCDPESP2",195,0)
 ; initialize values
"RTN","RCDPESP2",196,0)
 S (RCHDR("PAGE"),RCSTOP,RCIEN,RCEXCEL,RCFND)=0
"RTN","RCDPESP2",197,0)
 S RCDIGET=$NA(^TMP("RCDPESP2",$J)) K @RCDIGET
"RTN","RCDPESP2",198,0)
 ; PRCA*4.5*304 - Medical and RX audit entries
"RTN","RCDPESP2",199,0)
 S RCDIMED=$NA(^TMP("RCDPESP2-MED",$J)) K @RCDIMED
"RTN","RCDPESP2",200,0)
 S RCDIRX=$NA(^TMP("RCDPESP2-RX",$J)) K @RCDIRX
"RTN","RCDPESP2",201,0)
 ;
"RTN","RCDPESP2",202,0)
 S RCTYPE=$$RTYPE()
"RTN","RCDPESP2",203,0)
 Q:RCTYPE=-1
"RTN","RCDPESP2",204,0)
 S RCHDR("REPORTTYPE")=RCTYPE
"RTN","RCDPESP2",205,0)
 ;
"RTN","RCDPESP2",206,0)
 ; GET DATE RANGES
"RTN","RCDPESP2",207,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPESP2",208,0)
 Q:RCRANGE=0
"RTN","RCDPESP2",209,0)
 S RCSTDT=$P(RCRANGE,U,2)-.0000001,RCENDT=$P(RCRANGE,U,3)+.9999999
"RTN","RCDPESP2",210,0)
 ;
"RTN","RCDPESP2",211,0)
 ; output fields for LIST^DIC
"RTN","RCDPESP2",212,0)
 S RCFLDS="@;.04;.01I;.06;.03;.08;.02"
"RTN","RCDPESP2",213,0)
 ; .04 - CHANGED FIELD  .01 - TIMESTAMP      .06 - NEW VALUE
"RTN","RCDPESP2",214,0)
 ; .03 - CHANGED BY     .08 - COMMENT        .02 - MODIFIED IEN
"RTN","RCDPESP2",215,0)
 ;
"RTN","RCDPESP2",216,0)
 ; first part of LIST^DIC screening logic
"RTN","RCDPESP2",217,0)
 S RCSCR="I ($P(^(0),U,5)=344.6)&($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",218,0)
 ;
"RTN","RCDPESP2",219,0)
 ; OUTPUT TO EXCEL?
"RTN","RCDPESP2",220,0)
 S RCEXCEL=$$DISPTY^RCDPEM3() Q:+RCEXCEL=-1
"RTN","RCDPESP2",221,0)
 I RCEXCEL D INFO^RCDPEM6
"RTN","RCDPESP2",222,0)
 ;
"RTN","RCDPESP2",223,0)
 ;Select output device
"RTN","RCDPESP2",224,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP2",225,0)
 ;
"RTN","RCDPESP2",226,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5S")
"RTN","RCDPESP2",227,0)
 ;
"RTN","RCDPESP2",228,0)
 ; PROCESS AUTO-POST EXCLUSIONS
"RTN","RCDPESP2",229,0)
 ;
"RTN","RCDPESP2",230,0)
 ; PRCA*4.5*304 - Get the correct screening logic, based on the type of audit reeport to run
"RTN","RCDPESP2",231,0)
 S RCSCR(.06)=RCSCR_"&($P(^(0),U,4)=.06)" ; screening logic for medical auto-post
"RTN","RCDPESP2",232,0)
 S RCSCR(.07)=RCSCR_"&($P(^(0),U,4)=.07)" ; screening logic for medical auto-decrease
"RTN","RCDPESP2",233,0)
 S RCSCR(.08)=RCSCR_"&($P(^(0),U,4)=.08)" ; screening logic for pharmacy auto-post
"RTN","RCDPESP2",234,0)
 ;
"RTN","RCDPESP2",235,0)
 ;PRCA*4.5*304 - Get the medical and RX audit entries for Auto-Post exclusions
"RTN","RCDPESP2",236,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.06),,RCDIMED,"RCDIERR")
"RTN","RCDPESP2",237,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",238,0)
 I $D(RCDIERR) W !!,"Error collecting auto-post report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",239,0)
 ;
"RTN","RCDPESP2",240,0)
 ; Get the correct screening logic, based on the type of audit to run
"RTN","RCDPESP2",241,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.07),,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",242,0)
 ;
"RTN","RCDPESP2",243,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",244,0)
 I $D(RCDIERR) W !!,"Error collecting auto-decrease report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",245,0)
 ;
"RTN","RCDPESP2",246,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.08),,RCDIRX,"RCDIERR")
"RTN","RCDPESP2",247,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",248,0)
 I $D(RCDIERR) W !!,"Error collecting auto-post report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",249,0)
 ;
"RTN","RCDPESP2",250,0)
 I (RCTYPE="B")!(RCTYPE="M") D  G:RCSTOP RPT2Q
"RTN","RCDPESP2",251,0)
 . D HDRXAR(.06,RCTYPE)  ; complete header
"RTN","RCDPESP2",252,0)
 . ;
"RTN","RCDPESP2",253,0)
 . S RCFND=$D(@RCDIMED@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",254,0)
 . I 'RCFND W !,"No Auto-post Exclusions to Display",!
"RTN","RCDPESP2",255,0)
 . ;
"RTN","RCDPESP2",256,0)
 . I RCFND S RCIEN=0 D
"RTN","RCDPESP2",257,0)
 .. F  S RCIEN=$O(@RCDIMED@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",258,0)
 ... S RCTMP=$P(@RCDIMED@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",259,0)
 ... I 'RCEXCEL,$Y+4>IOSL D HDRXAR(.06,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",260,0)
 ... D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",261,0)
 . ; PROCESS MEDICAL AUTO-DECREASE EXCLUSIONS
"RTN","RCDPESP2",262,0)
 . D  ; complete header or just the section
"RTN","RCDPESP2",263,0)
 .. I $Y+11<IOSL D SECTHDR(.07)  Q  ; just section header
"RTN","RCDPESP2",264,0)
 .. D HDRXAR(.07,RCTYPE)  ; complete header
"RTN","RCDPESP2",265,0)
 . ;
"RTN","RCDPESP2",266,0)
 . S RCFND=$D(@RCDIGET@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",267,0)
 . I 'RCFND W !,"No Auto-decrease Exclusions to Display",!
"RTN","RCDPESP2",268,0)
 . ; RECORDS RETURNED
"RTN","RCDPESP2",269,0)
 . I RCFND S RCIEN=0 F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",270,0)
 .. S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",271,0)
 .. I $Y+4>IOSL D HDRXAR(.07,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",272,0)
 .. D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",273,0)
 ;
"RTN","RCDPESP2",274,0)
 I (RCTYPE="B")!(RCTYPE="P") D  G:RCSTOP RPT2Q
"RTN","RCDPESP2",275,0)
 . I RCTYPE="P" D HDRXAR(.08,RCTYPE)  ; complete header
"RTN","RCDPESP2",276,0)
 . I RCTYPE'="P" D  ; complete header or just the section
"RTN","RCDPESP2",277,0)
 .. I $Y+11<IOSL D SECTHDR(.08)  Q  ; just section header
"RTN","RCDPESP2",278,0)
 .. D HDRXAR(.08,RCTYPE)  ; complete header
"RTN","RCDPESP2",279,0)
 . ;
"RTN","RCDPESP2",280,0)
 . S RCFND=$D(@RCDIRX@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",281,0)
 . I 'RCFND W !,"No Auto-decrease Exclusions to Display",!
"RTN","RCDPESP2",282,0)
 . ; RECORDS RETURNED
"RTN","RCDPESP2",283,0)
 . I RCFND S RCIEN=0 F  S RCIEN=$O(@RCDIRX@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",284,0)
 .. S RCTMP=$P(@RCDIRX@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",285,0)
 .. I $Y+4>IOSL D HDRXAR(.08,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",286,0)
 .. D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",287,0)
 ;
"RTN","RCDPESP2",288,0)
 ; end of report
"RTN","RCDPESP2",289,0)
 W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPESP2",290,0)
 D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",291,0)
 ;
"RTN","RCDPESP2",292,0)
RPT2Q ;
"RTN","RCDPESP2",293,0)
 K @RCDIGET,@RCDIMED,@RCDIRX  ; clean up
"RTN","RCDPESP2",294,0)
 Q
"RTN","RCDPESP2",295,0)
 ;
"RTN","RCDPESP2",296,0)
GETPAYER() ; GET THE PAYER NAME + PAYER ID
"RTN","RCDPESP2",297,0)
 N RCIEN,RCPAYR
"RTN","RCDPESP2",298,0)
 S RCIEN=$P(RCTMP,U,6)
"RTN","RCDPESP2",299,0)
 I '$D(^RCY(344.6,RCIEN)) Q ""
"RTN","RCDPESP2",300,0)
 S RCPAYR=$$GET1^DIQ(344.6,RCIEN_",",.01)_" "_$$GET1^DIQ(344.6,RCIEN_",",.02)
"RTN","RCDPESP2",301,0)
 Q RCPAYR
"RTN","RCDPESP2",302,0)
 ;
"RTN","RCDPESP2",303,0)
HDRXAR(RCTYP,RCTYPD) ; Report header for exclusin auto report
"RTN","RCDPESP2",304,0)
 ;   RCTYP -   .06 = AUTO-POSTING EXCLUSION (medical)
"RTN","RCDPESP2",305,0)
 ;             .07 = AUTO-DECREASE EXCLUSION (medical)
"RTN","RCDPESP2",306,0)
 ;             .08 = AUTO-POSTING EXCLUSION (pharmacy)
"RTN","RCDPESP2",307,0)
 ;   RCTYPD  - M = Medical
"RTN","RCDPESP2",308,0)
 ;             P = Pharmacy
"RTN","RCDPESP2",309,0)
 ;             B = Both
"RTN","RCDPESP2",310,0)
 ;
"RTN","RCDPESP2",311,0)
 N RCTYPED
"RTN","RCDPESP2",312,0)
 S RCTYPED=$S(RCTYPD="M":"MEDICAL",RCTYPD="P":"PHARMACY",1:"ALL")
"RTN","RCDPESP2",313,0)
 ;
"RTN","RCDPESP2",314,0)
 I RCEXCEL D  Q
"RTN","RCDPESP2",315,0)
 .Q:RCHDR("PAGE")
"RTN","RCDPESP2",316,0)
 .; Excel header for parameter audits
"RTN","RCDPESP2",317,0)
 .W !!,"TYPE^CHANGE^PAYER^TIMESTAMP^USER^COMMENT"
"RTN","RCDPESP2",318,0)
 .S RCHDR("PAGE")=1  ; only print it once
"RTN","RCDPESP2",319,0)
 ;
"RTN","RCDPESP2",320,0)
 I RCHDR("PAGE") D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP2",321,0)
 W @IOF
"RTN","RCDPESP2",322,0)
 S RCHDR("PAGE")=RCHDR("PAGE")+1
"RTN","RCDPESP2",323,0)
 ; report header for parameter audits
"RTN","RCDPESP2",324,0)
 W $$CNTR("EDI Lockbox Exclusion Audit Report"),?IOM-8,"Page: "_RCHDR("PAGE")
"RTN","RCDPESP2",325,0)
 W !,$$CNTR("DIVISIONS: ALL")
"RTN","RCDPESP2",326,0)
 W !,$$CNTR("RUN DATE: "_$G(RCHDR("RUNDATE")))
"RTN","RCDPESP2",327,0)
 W !,$$CNTR("DATE RANGE: "_$$FMTE^XLFDT($P(RCRANGE,U,2),"5D")_" - "_$$FMTE^XLFDT($P(RCRANGE,U,3),"5D"))
"RTN","RCDPESP2",328,0)
 W !,$$CNTR("REPORT TYPE: "_RCTYPED)
"RTN","RCDPESP2",329,0)
 D SECTHDR(RCTYP,RCTYPD)
"RTN","RCDPESP2",330,0)
 Q
"RTN","RCDPESP2",331,0)
 ;
"RTN","RCDPESP2",332,0)
SECTHDR(RCTYPE,RCREPT) ; SECTION HEADER
"RTN","RCDPESP2",333,0)
 ;   RCTYP - .06 = AUTO-POSTING EXCLUSION (medical)
"RTN","RCDPESP2",334,0)
 ;           .07 = AUTO-DECREASE EXCLUSION (medical)
"RTN","RCDPESP2",335,0)
 ;           .08 = AUTO-POSTING EXCLUSION (pharmacy)
"RTN","RCDPESP2",336,0)
 ;   RCREPT - "M" = "MEDICAL"
"RTN","RCDPESP2",337,0)
 ;            "P" = "PHARMACY"
"RTN","RCDPESP2",338,0)
 Q:$G(RCEXCEL)
"RTN","RCDPESP2",339,0)
 ;
"RTN","RCDPESP2",340,0)
 I RCTYPE=.06 D
"RTN","RCDPESP2",341,0)
 .W !!,"MEDICAL AUTO-POSTING PAYER EXCLUSION LIST"
"RTN","RCDPESP2",342,0)
 .W !,"-----------------------------------------"
"RTN","RCDPESP2",343,0)
 ;
"RTN","RCDPESP2",344,0)
 I RCTYPE=.07 D
"RTN","RCDPESP2",345,0)
 .W !!,"MEDICAL AUTO-DECREASE PAYER EXCLUSION LIST"
"RTN","RCDPESP2",346,0)
 .W !,"------------------------------------------"
"RTN","RCDPESP2",347,0)
 ;
"RTN","RCDPESP2",348,0)
  I RCTYPE=.08 D
"RTN","RCDPESP2",349,0)
 .W !!,"PHARMACY AUTO-POSTING PAYER EXCLUSION LIST"
"RTN","RCDPESP2",350,0)
 .W !,"------------------------------------------"
"RTN","RCDPESP2",351,0)
 ;
"RTN","RCDPESP2",352,0)
 W !,"Change Payer                            Date/Time Edited   User"
"RTN","RCDPESP2",353,0)
 W !,$TR($J("",IOM-1)," ","=")  ; row of equal signs
"RTN","RCDPESP2",354,0)
 Q
"RTN","RCDPESP2",355,0)
 ;
"RTN","RCDPESP2",356,0)
CNTR(TXT) ; center TXT
"RTN","RCDPESP2",357,0)
 Q $J("",IOM-$L(TXT)\2)_TXT
"RTN","RCDPESP2",358,0)
 ;
"RTN","RCDPESP2",359,0)
DTRNG() ; function, returns date range for the report
"RTN","RCDPESP2",360,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND
"RTN","RCDPESP2",361,0)
 S (RCSTART,RCEND)=0 D DATES(.RCSTART,.RCEND)
"RTN","RCDPESP2",362,0)
 Q:RCSTART=-1 0
"RTN","RCDPESP2",363,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPESP2",364,0)
 Q:'RCSTART "0^^"
"RTN","RCDPESP2",365,0)
 Q 0
"RTN","RCDPESP2",366,0)
 ;
"RTN","RCDPESP2",367,0)
DATES(BDATE,EDATE) ; Get a date range, both values passed by ref.
"RTN","RCDPESP2",368,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPESP2",369,0)
 S (BDATE,EDATE)=0
"RTN","RCDPESP2",370,0)
 S DIR("?")="Enter the earliest AUDIT DATE to include on the report"
"RTN","RCDPESP2",371,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Report start date: " D ^DIR K DIR
"RTN","RCDPESP2",372,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPESP2",373,0)
 S BDATE=Y K DIR,X,Y
"RTN","RCDPESP2",374,0)
 S DIR("?")="Enter the latest AUDIT DATE to include on the report"
"RTN","RCDPESP2",375,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="Report end date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPESP2",376,0)
 D ^DIR K DIR
"RTN","RCDPESP2",377,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPESP2",378,0)
 S EDATE=Y
"RTN","RCDPESP2",379,0)
 Q
"RTN","RCDPESP2",380,0)
 ;
"RTN","RCDPESP2",381,0)
DSPXCLSN(RCX) ; display exclusion
"RTN","RCDPESP2",382,0)
 ; RCX - exclusion value from ^DIC call
"RTN","RCDPESP2",383,0)
 N RCXCLSN
"RTN","RCDPESP2",384,0)
 S RCXCLSN("CHANGE")=$S($P(RCX,U,3):"Added",1:"Removed")
"RTN","RCDPESP2",385,0)
 S RCXCLSN("TIME")=$$FMTE^XLFDT($P(RCX,U,2),"2")
"RTN","RCDPESP2",386,0)
 S RCXCLSN("USER")=$P(RCX,U,4)
"RTN","RCDPESP2",387,0)
 S RCXCLSN("PAYER")=$$GETPAYER
"RTN","RCDPESP2",388,0)
 S RCXCLSN("COMMENT")=$P(RCX,U,5)
"RTN","RCDPESP2",389,0)
 ;
"RTN","RCDPESP2",390,0)
 I 'RCEXCEL D  Q
"RTN","RCDPESP2",391,0)
 .N Y S Y=RCXCLSN("CHANGE"),$E(Y,9)=$E(RCXCLSN("PAYER"),1,30),$E(Y,41)=" "_RCXCLSN("TIME"),Y=Y_" "_RCXCLSN("USER")
"RTN","RCDPESP2",392,0)
 .W !,Y,!,"  Comment: "_RCXCLSN("COMMENT")
"RTN","RCDPESP2",393,0)
 ; Excel format
"RTN","RCDPESP2",394,0)
 S RCXCLSN("LABEL")=$$GET1^DID(344.6,$P(RCX,U,1),,"LABEL")
"RTN","RCDPESP2",395,0)
 W !,RCXCLSN("LABEL")_U_RCXCLSN("CHANGE")_U_RCXCLSN("PAYER")_U_RCXCLSN("TIME")_U_RCXCLSN("USER")_U_RCXCLSN("COMMENT")
"RTN","RCDPESP2",396,0)
 ;
"RTN","RCDPESP2",397,0)
 Q
"RTN","RCDPESP2",398,0)
 ;
"RTN","RCDPESP2",399,0)
 ;Retrieve the parameter for the type of information to display
"RTN","RCDPESP2",400,0)
RTYPE(DEF) ;EP from RCDPEAA1
"RTN","RCDPESP2",401,0)
 ; Input:   DEF     - Value to use a default
"RTN","RCDPESP2",402,0)
 ; Returns: -1      - User ^ or timed out
"RTN","RCDPESP2",403,0)
 ;           M      - User selected MEDICAL
"RTN","RCDPESP2",404,0)
 ;           P      - User selected PHARMACY
"RTN","RCDPESP2",405,0)
 ;           B      - User selected BOTH
"RTN","RCDPESP2",406,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT,RCTYPE
"RTN","RCDPESP2",407,0)
 S RCTYPE=""
"RTN","RCDPESP2",408,0)
 S DIR("?")="Enter the type of information to display on the report"
"RTN","RCDPESP2",409,0)
 S DIR(0)="SA^M:MEDICAL;P:PHARMACY;B:BOTH"
"RTN","RCDPESP2",410,0)
 S DIR("A")="(M)EDICAL, (P)HARMACY, or (B)OTH: "    ; PRCA*4.5*317 changed 'OR' to 'or'
"RTN","RCDPESP2",411,0)
 S DIR("B")=$S($G(DEF)'="":DEF,1:"BOTH")
"RTN","RCDPESP2",412,0)
 D ^DIR
"RTN","RCDPESP2",413,0)
 K DIR
"RTN","RCDPESP2",414,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPESP2",415,0)
 Q:Y="" "B"
"RTN","RCDPESP2",416,0)
 Q $E(Y)
"RTN","RCDPESP2",417,0)
 ;
"RTN","RCDPESP2",418,0)
 ;Check to see if the Data element matches the report type
"RTN","RCDPESP2",419,0)
RPTYPE(RCTYPE,RCPARAM) ;
"RTN","RCDPESP2",420,0)
 ; Return 1 if valid to print, 0 otherwise
"RTN","RCDPESP2",421,0)
 N RCDATA,RCMEN,RCREN
"RTN","RCDPESP2",422,0)
 ;
"RTN","RCDPESP2",423,0)
 S (RCMEN,RCREN)=""
"RTN","RCDPESP2",424,0)
 ; Get Auto Decrease parameters
"RTN","RCDPESP2",425,0)
 I RCTYPE="M" S RCMEN=$P($G(^RCY(344.61,1,0)),U,3)
"RTN","RCDPESP2",426,0)
 I RCTYPE="P" S RCREN=$P($G(^RCY(344.61,1,1)),U,2)
"RTN","RCDPESP2",427,0)
 ;
"RTN","RCDPESP2",428,0)
 Q:RCTYPE="B" 1
"RTN","RCDPESP2",429,0)
 Q:(RCTYPE="M")&(RCPARAM["MED") 1       ; Medical Parameters
"RTN","RCDPESP2",430,0)
 Q:(RCTYPE="P")&(RCPARAM["RX") 1        ; Pharmacy parameters
"RTN","RCDPESP2",431,0)
 Q:(RCTYPE="P")&(RCPARAM["PHARM") 1        ; Pharmacy parameters
"RTN","RCDPESP2",432,0)
 Q:(RCTYPE="M")&(RCMEN)&(RCPARAM["DECREASE") 1         ; Auto-decrease for med is on
"RTN","RCDPESP2",433,0)
 Q:(RCTYPE="P")&(RCREN)&(RCPARAM["DECREASE") 1         ; Auto-decrease for pharmacy
"RTN","RCDPESP2",434,0)
 Q 0
"RTN","RCDPESP3")
0^40^B9104300
"RTN","RCDPESP3",1,0)
RCDPESP3 ;BIRM/EWL - ePayment Lockbox Payer Implementation Report ;Jun 11, 2014@13:00:05
"RTN","RCDPESP3",2,0)
 ;;4.5;Accounts Receivable;**298,326**;Nov 11, 2013;Build 26
"RTN","RCDPESP3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP3",4,0)
RPT ; RUN THE PAYER IMPLEMENTATION REPORT
"RTN","RCDPESP3",5,0)
 ;
"RTN","RCDPESP3",6,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP3",7,0)
 ;              including data concerning changes to the RCDPE AUTO PAY EXCLUSION file.
"RTN","RCDPESP3",8,0)
 ;
"RTN","RCDPESP3",9,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP3",10,0)
 ;              ^RCY(344.6,              RCDPE AUTO PAY EXCLUSION
"RTN","RCDPESP3",11,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST DIC OUTPUT
"RTN","RCDPESP3",12,0)
 ;
"RTN","RCDPESP3",13,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP3",14,0)
 ;
"RTN","RCDPESP3",15,0)
 ; LOCAL VARIABLES: 
"RTN","RCDPESP3",16,0)
 ;    RCGET   - HOLDS POINTER TO TMP FILE RESULTS FROM LIST^DIC CALL
"RTN","RCDPESP3",17,0)
 ;    RCMSG   - HOLDS ERRORS FROM LIST^DIC
"RTN","RCDPESP3",18,0)
 ;    RCRUN   - DATE THE REPORT RAN
"RTN","RCDPESP3",19,0)
 ;    RCLINECT- LINE COUNTER
"RTN","RCDPESP3",20,0)
 ;    RCPAGE  - PAGE COUNTER
"RTN","RCDPESP3",21,0)
 ;    RCSTOP  - STOP DISPLAYING THE REPORT
"RTN","RCDPESP3",22,0)
 ;    RCIEN   - IEN OF CURRENT PAYER
"RTN","RCDPESP3",23,0)
 ;    RCPAYER - PAYER NAME
"RTN","RCDPESP3",24,0)
 ;    RCID    - PAYER ID
"RTN","RCDPESP3",25,0)
 ;    RCTIME  - TIMESTAMP PAYER WAS ADDED
"RTN","RCDPESP3",26,0)
 ;
"RTN","RCDPESP3",27,0)
 ; FOR REPORT FORMATTING
"RTN","RCDPESP3",28,0)
 ;    SPT     - TOTAL LINE SPACE - DATE & 2 SPACES 
"RTN","RCDPESP3",29,0)
 ;    SPI     - LINE SPACE AVAILABLE FOR PAYER ID
"RTN","RCDPESP3",30,0)
 ;    SPN     - LINE SPACE AVAILABLE FOR PAYER NAME
"RTN","RCDPESP3",31,0)
 ;    T1      - 1ST TAB STOP
"RTN","RCDPESP3",32,0)
 ;    T2      - 2ND TAB STOP
"RTN","RCDPESP3",33,0)
 N %ZIS,CT,RCGET,RCID,RCIEN,RCLINECT,RCPAGE,RCPAYER,RCRUNDT,RCSTOP,RCTIME,RCTYPE,SPI,SPN,SPT,T1,T2
"RTN","RCDPESP3",34,0)
 ; FILEMAN VARIABLES
"RTN","RCDPESP3",35,0)
 N POP,X,X1,X2,Y,ZIS
"RTN","RCDPESP3",36,0)
 S (RCPAGE,RCSTOP,RCIEN,RCLINECT)=0
"RTN","RCDPESP3",37,0)
 ;
"RTN","RCDPESP3",38,0)
 ; PRCA*4.5*326 - Filter by MEDICAL, PHARMACY, TRICARE OR ALL
"RTN","RCDPESP3",39,0)
 S RCTYPE=$$RTYPE^RCDPEU1 I RCTYPE=-1 Q
"RTN","RCDPESP3",40,0)
 ;Select output device
"RTN","RCDPESP3",41,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP3",42,0)
 ; SET UP PAGE FORMATTING
"RTN","RCDPESP3",43,0)
 I IOM<100 D
"RTN","RCDPESP3",44,0)
 . S SPT=IOM-10 ; SPACE AVAILABLE FOR PAYER ID AND PAYER NAME
"RTN","RCDPESP3",45,0)
 . S SPI=(SPT\3)-1 ; SPACE FOR PAYER ID
"RTN","RCDPESP3",46,0)
 . S SPN=SPT-SPI ; SPACE FOR PAYER NAME
"RTN","RCDPESP3",47,0)
 I IOM'<100 D
"RTN","RCDPESP3",48,0)
 . S SPT=90 ; SPACE AVAILABLE FOR PAYER ID AND PAYER NAME
"RTN","RCDPESP3",49,0)
 . S SPI=30 ; SPACE FOR PAYER ID
"RTN","RCDPESP3",50,0)
 . S SPN=60 ; SPACE FOR PAYER NAME
"RTN","RCDPESP3",51,0)
 S T1=SPI+1,T2=SPT+2
"RTN","RCDPESP3",52,0)
 ; 
"RTN","RCDPESP3",53,0)
 ; ********************************
"RTN","RCDPESP3",54,0)
 ; PROCESS THE PAYERS
"RTN","RCDPESP3",55,0)
 ; ********************************
"RTN","RCDPESP3",56,0)
 D HDR S RCLINECT=6
"RTN","RCDPESP3",57,0)
 F  S RCIEN=$O(^RCY(344.6,RCIEN)) Q:('RCIEN)!RCSTOP  D
"RTN","RCDPESP3",58,0)
 . ; PRCA*4.5*326 - Filter by MEDICAL, PHARMACY, TRICARE OR ALL
"RTN","RCDPESP3",59,0)
 . I '$$CHKTYPE^RCDPEU1(RCIEN,RCTYPE) Q
"RTN","RCDPESP3",60,0)
 . S RCPAYER=$$GET1^DIQ(344.6,RCIEN_",",.01)
"RTN","RCDPESP3",61,0)
 . S RCID=$$GET1^DIQ(344.6,RCIEN_",",.02)
"RTN","RCDPESP3",62,0)
 . S RCTIME=$$FMTE^XLFDT($$GET1^DIQ(344.6,RCIEN_",",.03,"I"),"2D")
"RTN","RCDPESP3",63,0)
 . I $L($P(RCTIME,"/",1))=1 S $P(RCTIME,"/",1)="0"_$P(RCTIME,"/",1)
"RTN","RCDPESP3",64,0)
 . I $L($P(RCTIME,"/",2))=1 S $P(RCTIME,"/",2)="0"_$P(RCTIME,"/",2)
"RTN","RCDPESP3",65,0)
 . I RCLINECT+1>IOSL D HDR S RCLINECT=6
"RTN","RCDPESP3",66,0)
 . S RCLINECT=RCLINECT+1
"RTN","RCDPESP3",67,0)
 . W !,$E(RCID,1,SPI),?T1,$E(RCPAYER,1,SPN),?T2,RCTIME
"RTN","RCDPESP3",68,0)
 I 'RCSTOP D ASK^RCDPEARL()
"RTN","RCDPESP3",69,0)
 Q
"RTN","RCDPESP3",70,0)
 ;
"RTN","RCDPESP3",71,0)
HDR ; Report header
"RTN","RCDPESP3",72,0)
 ; LOCAL VARIABLES
"RTN","RCDPESP3",73,0)
 ; LN - SEPARATION LINE
"RTN","RCDPESP3",74,0)
 N LN,XX
"RTN","RCDPESP3",75,0)
 I RCPAGE D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP3",76,0)
 W @IOF
"RTN","RCDPESP3",77,0)
 S RCPAGE=RCPAGE+1 I RCPAGE=1 S RCRUNDT=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPESP3",78,0)
  ; PRCA*4.5*326 - Start modifications
"RTN","RCDPESP3",79,0)
 W $$CNTR^RCDPESP2("PAYER IMPLEMENTATION REPORT"),?IOM-8,"Page: "_RCPAGE
"RTN","RCDPESP3",80,0)
 S XX="RUN DATE: "_RCRUNDT_"             MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPESP3",81,0)
 S XX=XX_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPESP3",82,0)
 W !,$$CNTR^RCDPESP2(XX)
"RTN","RCDPESP3",83,0)
 ; PRCA*4.5*326 - End modifications
"RTN","RCDPESP3",84,0)
 W !!,"PAYER TIN",?T1,"PAYER NAME",?T2-2,"DATE ADDED"
"RTN","RCDPESP3",85,0)
 S $P(LN,"=",SPT+11)="" W !,LN
"RTN","RCDPESP3",86,0)
 Q
"RTN","RCDPESP5")
0^44^B246127471
"RTN","RCDPESP5",1,0)
RCDPESP5 ;ALB/SAB - ePayment Lockbox Site Parameters Definition - Files 344.71 ;03/19/2015
"RTN","RCDPESP5",2,0)
 ;;4.5;Accounts Receivable;**304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPESP5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP5",4,0)
 ;
"RTN","RCDPESP5",5,0)
 Q
"RTN","RCDPESP5",6,0)
 ;
"RTN","RCDPESP5",7,0)
CARC(RCQUIT,PAID) ;Update the CARC/RARC inclusion table
"RTN","RCDPESP5",8,0)
 ; INPUT   RCQUIT - Added RCQUIT as input parameter - PRCA*4.5*321
"RTN","RCDPESP5",9,0)
 ;         PAID 1 = payment lines  0 = no-payment lines - PRCA*4.5*326
"RTN","RCDPESP5",10,0)
 ;initialize
"RTN","RCDPESP5",11,0)
 N RCANS,RCCARC,RCCHG,RCCDATA,RCCIEN,RCEDIT,RCRSN,RCSTAT
"RTN","RCDPESP5",12,0)
 N RCAMT,RCNAMT,RCAUDARY,RCCARCDS,RCYN,RCVAL,RCINACT,RCACTV,RCTXT
"RTN","RCDPESP5",13,0)
 S RCEDIT="",RCANS=""
"RTN","RCDPESP5",14,0)
 ;
"RTN","RCDPESP5",15,0)
 S RCTXT=$S(PAID:"",1:"NO-PAY ") ; PRCA*4.5*326
"RTN","RCDPESP5",16,0)
 ;Display initial entry line.
"RTN","RCDPESP5",17,0)
 W !,"AUTO-DECREASE "_RCTXT_"MEDICAL CLAIMS FOR THE FOLLOWING CARC/AMOUNTS ONLY:",!
"RTN","RCDPESP5",18,0)
 ;
"RTN","RCDPESP5",19,0)
 ;
"RTN","RCDPESP5",20,0)
 ;Loop until the user quits
"RTN","RCDPESP5",21,0)
 F  D  Q:RCANS="Q"
"RTN","RCDPESP5",22,0)
 . ;
"RTN","RCDPESP5",23,0)
 . ;display list of currently enabled/disabled CARCs/RARCs
"RTN","RCDPESP5",24,0)
 . D PRTCARC(PAID) ; PRCA*4.5*326
"RTN","RCDPESP5",25,0)
 . ;
"RTN","RCDPESP5",26,0)
 . ; add some spacing
"RTN","RCDPESP5",27,0)
 . W !!
"RTN","RCDPESP5",28,0)
 . ;
"RTN","RCDPESP5",29,0)
 . ;Ask user for the CARC/RARC to enable/disable (QUIT) [default] to exit
"RTN","RCDPESP5",30,0)
 . ;
"RTN","RCDPESP5",31,0)
 . S RCCARC=$$GETCARC()
"RTN","RCDPESP5",32,0)
 . I RCCARC=-1 S RCQUIT=1,RCANS="Q" Q
"RTN","RCDPESP5",33,0)
 . I RCCARC=0 S RCANS="Q" Q
"RTN","RCDPESP5",34,0)
 . ;
"RTN","RCDPESP5",35,0)
 . ;Validate CARC entered
"RTN","RCDPESP5",36,0)
 . S RCVAL=$$VAL^RCDPCRR(345,RCCARC)  ; Validate the CARC against File 345
"RTN","RCDPESP5",37,0)
 . S RCACTV=$$ACT^RCDPRU(345,RCCARC,)  ; Check if CARC is an active code
"RTN","RCDPESP5",38,0)
 . ;
"RTN","RCDPESP5",39,0)
 . ;If the CARC is invalid, warn user and exit back to the CARC prompt
"RTN","RCDPESP5",40,0)
 . I 'RCVAL W !,"The CARC code you have entered is not a valid CARC code.  Please try again" Q
"RTN","RCDPESP5",41,0)
 . ;
"RTN","RCDPESP5",42,0)
 . ; Print CARC and description and initialize inactive variable
"RTN","RCDPESP5",43,0)
 . S RCCARCDS="",RCINACT=""
"RTN","RCDPESP5",44,0)
 . D GETCODES^RCDPCRR(RCCARC,"","A",$$DT^XLFDT,"RCCARCDS","1^70")
"RTN","RCDPESP5",45,0)
 . I $D(RCCARCDS("CARC",RCCARC))'=10 D
"RTN","RCDPESP5",46,0)
 . . S RCINACT=1
"RTN","RCDPESP5",47,0)
 . . D GETCODES^RCDPCRR(RCCARC,"","I",$$DT^XLFDT,"RCCARCDS","1^70")
"RTN","RCDPESP5",48,0)
 . S RCCIEN=$O(RCCARCDS("CARC",RCCARC,""))
"RTN","RCDPESP5",49,0)
 . S RCDESC=$P(RCCARCDS("CARC",RCCARC,RCCIEN),U,6)
"RTN","RCDPESP5",50,0)
 . ;
"RTN","RCDPESP5",51,0)
 . ; If the description is 70 characters, add ellipsis to the string to indicate there is more to the description
"RTN","RCDPESP5",52,0)
 . S:$E(RCDESC)=70 RCDESC=RCDESC_" ..."
"RTN","RCDPESP5",53,0)
 . W !,?3,RCDESC,!
"RTN","RCDPESP5",54,0)
 . I 'RCACTV W "   *** WARNING: CARC code "_RCCARC_" is no longer active.",!
"RTN","RCDPESP5",55,0)
 . ;
"RTN","RCDPESP5",56,0)
 . ; Look up CARC/RARC in table.
"RTN","RCDPESP5",57,0)
 . S RCCIEN=$O(^RCY(344.62,"B",RCCARC,""))
"RTN","RCDPESP5",58,0)
 . S (RCAMT,RCSTAT)=0  ; Initialize if new code entry for table
"RTN","RCDPESP5",59,0)
 . I RCCIEN D         ; Code exists in table
"RTN","RCDPESP5",60,0)
 . . ; BEGIN - PRCA*4.5*326
"RTN","RCDPESP5",61,0)
 . . ; Get current payment Auto-decrease status and Max decrease amount
"RTN","RCDPESP5",62,0)
 . . I PAID=1 D  ; Payment lines
"RTN","RCDPESP5",63,0)
 . . . S RCSTAT=$$GET1^DIQ(344.62,RCCIEN,.02,"I")
"RTN","RCDPESP5",64,0)
 . . . S RCAMT=$$GET1^DIQ(344.62,RCCIEN,.06)
"RTN","RCDPESP5",65,0)
 . . I PAID=0 D  ; No payment lines
"RTN","RCDPESP5",66,0)
 . . . S RCSTAT=$$GET1^DIQ(344.62,RCCIEN,.08,"I")
"RTN","RCDPESP5",67,0)
 . . . S RCAMT=$$GET1^DIQ(344.62,RCCIEN,.12)
"RTN","RCDPESP5",68,0)
 . . ; END - PRCA*4.5*326 
"RTN","RCDPESP5",69,0)
 . ;
"RTN","RCDPESP5",70,0)
 . ; Init Audit array to send each update individually
"RTN","RCDPESP5",71,0)
 . S RCAUDARY(1)=""
"RTN","RCDPESP5",72,0)
 . S RCAUDARY(2)=""
"RTN","RCDPESP5",73,0)
 . ;
"RTN","RCDPESP5",74,0)
 . ; If present and enabled
"RTN","RCDPESP5",75,0)
 . I RCCIEN,RCSTAT D  Q
"RTN","RCDPESP5",76,0)
 . . ;
"RTN","RCDPESP5",77,0)
 . . S RCNAMT=0,RCRSN=""  ;Initialize variables
"RTN","RCDPESP5",78,0)
 . . ;
"RTN","RCDPESP5",79,0)
 . . ; Confirm that this is the correct CARC
"RTN","RCDPESP5",80,0)
 . . S RCYN=$$CONFIRM(4,PAID) ; Added PAID - PRCA*4.5*326
"RTN","RCDPESP5",81,0)
 . . Q:RCYN=-1
"RTN","RCDPESP5",82,0)
 . . ;
"RTN","RCDPESP5",83,0)
 . . ; Ask for reason
"RTN","RCDPESP5",84,0)
 . . S RCRSN=$$GETREASN(RCCARC)
"RTN","RCDPESP5",85,0)
 . . Q:RCRSN=-1   ; User requested to quit
"RTN","RCDPESP5",86,0)
 . . ;
"RTN","RCDPESP5",87,0)
 . . ; Confirm the disabling
"RTN","RCDPESP5",88,0)
 . . S RCYN=$$CONFIRM(3,PAID) ; Added PAID - PRCA*4.5*326
"RTN","RCDPESP5",89,0)
 . . Q:RCYN=-1
"RTN","RCDPESP5",90,0)
 . . ;
"RTN","RCDPESP5",91,0)
 . . D UPDDATA(RCCIEN,0,RCAMT,RCRSN,PAID) ; If disabling - PAID added PRCA*4.5*326
"RTN","RCDPESP5",92,0)
 . . ;
"RTN","RCDPESP5",93,0)
 . . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",94,0)
 . . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",95,0)
 . . ;
"RTN","RCDPESP5",96,0)
 . . ;Don't need a second entry in the audit file so kill it to prevent audit logging from crashing
"RTN","RCDPESP5",97,0)
 . . K RCAUDARY(2)
"RTN","RCDPESP5",98,0)
 . . ;
"RTN","RCDPESP5",99,0)
 . . ; Update audit log for disable CARC
"RTN","RCDPESP5",100,0)
 . . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",101,0)
 . . S FIELD=$S(PAID:.02,1:.08) ; PRCA*4.5*326
"RTN","RCDPESP5",102,0)
 . . S RCAUDARY(1)="344.62^"_FIELD_"^"_RCCIEN_"^0^1^"_RCRSN ; PRCA*4.5*326
"RTN","RCDPESP5",103,0)
 . . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",104,0)
 . ;
"RTN","RCDPESP5",105,0)
 . ; Confirm that this is the correct CARC to Enable
"RTN","RCDPESP5",106,0)
 . S RCYN=$$CONFIRM(1,PAID) ; Added PAID - PRCA*4.5*326
"RTN","RCDPESP5",107,0)
 . Q:RCYN=-1
"RTN","RCDPESP5",108,0)
 . ;
"RTN","RCDPESP5",109,0)
 . ; Ask for new amount
"RTN","RCDPESP5",110,0)
 . S RCNAMT=$$GETAMT()
"RTN","RCDPESP5",111,0)
 . Q:RCNAMT=-1   ; User requested to quit
"RTN","RCDPESP5",112,0)
 . ;
"RTN","RCDPESP5",113,0)
 . ; Ask for reason
"RTN","RCDPESP5",114,0)
 . S RCRSN=$$GETREASN(RCCARC)
"RTN","RCDPESP5",115,0)
 . Q:RCRSN=-1   ; User requested to quit
"RTN","RCDPESP5",116,0)
 . ;
"RTN","RCDPESP5",117,0)
 . ; Confirm save
"RTN","RCDPESP5",118,0)
 . S RCYN=$$CONFIRM(2,PAID) ; Added PAID - PRCA*4.5*326
"RTN","RCDPESP5",119,0)
 . I (RCYN="N")!(RCYN=-1) W !,"NOT SAVED",!! Q
"RTN","RCDPESP5",120,0)
 . ;   
"RTN","RCDPESP5",121,0)
 . ; Re-enable if disabled and quit
"RTN","RCDPESP5",122,0)
 . I RCCIEN D  Q
"RTN","RCDPESP5",123,0)
 . . D UPDDATA(RCCIEN,1,RCNAMT,RCRSN,PAID)  ; Renable and update amount - PAID added PRCA*4.5*326
"RTN","RCDPESP5",124,0)
 . . ;
"RTN","RCDPESP5",125,0)
 . . ;Update audit file with reason and amount changes.
"RTN","RCDPESP5",126,0)
 . . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",127,0)
 . . S FIELD=$S(PAID:.02,1:.08) ; PRCA*4.5*326
"RTN","RCDPESP5",128,0)
 . . S RCAUDARY(1)="344.62^"_FIELD_"^"_RCCIEN_"^1^"_RCSTAT_"^"_RCRSN ; PRCA*4.5*326
"RTN","RCDPESP5",129,0)
 . . S FIELD=$S(PAID:.06,1:.12) ; PRCA*4.5*326
"RTN","RCDPESP5",130,0)
 . . S RCAUDARY(2)="344.62^"_FIELD_"^"_RCCIEN_"^"_RCNAMT_"^"_RCAMT_"^"_RCRSN ; PRCA*4.5*326
"RTN","RCDPESP5",131,0)
 . . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",132,0)
 . . ;
"RTN","RCDPESP5",133,0)
 . . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",134,0)
 . . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",135,0)
 . ;
"RTN","RCDPESP5",136,0)
 . ; Store new entry
"RTN","RCDPESP5",137,0)
 . D ADDDATA(RCCARC,RCNAMT,RCRSN,PAID) ; PAID added PRCA*4.5*326
"RTN","RCDPESP5",138,0)
 . ;
"RTN","RCDPESP5",139,0)
 . ;Update audit file with reason and amount changes.
"RTN","RCDPESP5",140,0)
 . S RCCIEN=$$FIND1^DIC(344.62,"","",RCCARC,"","","RCERR") I RCCIEN="" S RCCIEN="ERROR"
"RTN","RCDPESP5",141,0)
 . ;
"RTN","RCDPESP5",142,0)
 . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",143,0)
 . S FIELD=$S(PAID:.02,1:.08) ; PRCA*4.5*326
"RTN","RCDPESP5",144,0)
 . S RCAUDARY(1)="344.62^"_FIELD_"^"_RCCIEN_"^1^0^"_RCRSN ; PRCA*4.5*326
"RTN","RCDPESP5",145,0)
 . S FIELD=$S(PAID:.06,1:.12) ; PRCA*4.5*326
"RTN","RCDPESP5",146,0)
 . S RCAUDARY(2)="344.62^"_FIELD_"^"_RCCIEN_"^"_RCNAMT_"^0^"_RCRSN ; PRCA*4.5*326
"RTN","RCDPESP5",147,0)
 . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",148,0)
 . ;
"RTN","RCDPESP5",149,0)
 . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",150,0)
 . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",151,0)
 ;
"RTN","RCDPESP5",152,0)
 Q
"RTN","RCDPESP5",153,0)
 ;
"RTN","RCDPESP5",154,0)
PRTCARC(PAID) ;Display current entries that have been defined for inclusion or exclusion into - PAID added - PRCA*4.5*326
"RTN","RCDPESP5",155,0)
 ;
"RTN","RCDPESP5",156,0)
 N FIELD,RCI,RCCT,RCSTRING,RCDATA,RCINACT,RCCARCD,RCDESC,RCCIEN,RCSTAT,RCCODE
"RTN","RCDPESP5",157,0)
 ;
"RTN","RCDPESP5",158,0)
 S RCI=0,RCCT=0,RCSTRING=""
"RTN","RCDPESP5",159,0)
 S RCSTRING=$TR($J("",73)," ","-")
"RTN","RCDPESP5",160,0)
 ;
"RTN","RCDPESP5",161,0)
 ; Print Header
"RTN","RCDPESP5",162,0)
 ;
"RTN","RCDPESP5",163,0)
 W !!,?3,"CARC ",?9,"Description",?65,"Max. Amt"
"RTN","RCDPESP5",164,0)
 W !,?3,RCSTRING
"RTN","RCDPESP5",165,0)
 ;
"RTN","RCDPESP5",166,0)
 ; Loop and print entries
"RTN","RCDPESP5",167,0)
 F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP5",168,0)
 . S RCDATA=$G(^RCY(344.62,RCI,0))
"RTN","RCDPESP5",169,0)
 . Q:RCDATA=""
"RTN","RCDPESP5",170,0)
 . S RCCODE=$P(RCDATA,U),RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP5",171,0)
 . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP5",172,0)
 . S FIELD=$S(PAID:.02,1:.08)
"RTN","RCDPESP5",173,0)
 . S RCSTAT=$$GET1^DIQ(344.62,RCI,FIELD,"I")
"RTN","RCDPESP5",174,0)
 . Q:RCSTAT'=1
"RTN","RCDPESP5",175,0)
 . S RCCT=RCCT+1
"RTN","RCDPESP5",176,0)
 . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP5",177,0)
 . D GETCODES^RCDPCRR(RCCODE,"","B",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP5",178,0)
 . S FIELD=$S(PAID:.06,1:.12)
"RTN","RCDPESP5",179,0)
 . W !,?3,RCCODE,?9,$E(RCDESC,1,55),?63,$J($$GET1^DIQ(344.62,RCI,FIELD,"I"),10,0)
"RTN","RCDPESP5",180,0)
 . I $P(RCCARCD("CARC",RCCODE,RCCIEN),U,3)'="" W " (I)"  ; if inactive, display (I)
"RTN","RCDPESP5",181,0)
 . K RCCARCD
"RTN","RCDPESP5",182,0)
 ;
"RTN","RCDPESP5",183,0)
 I RCCT=0 W !,?5,"NO CARC/AMOUNTS ENTERED"
"RTN","RCDPESP5",184,0)
 Q
"RTN","RCDPESP5",185,0)
 ;
"RTN","RCDPESP5",186,0)
 ;Retrieve the next CARC code to enable/disable
"RTN","RCDPESP5",187,0)
GETCARC() ;
"RTN","RCDPESP5",188,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",189,0)
 S DIR("?")="Enter a CARC code to enable/disable or Q to Quit."
"RTN","RCDPESP5",190,0)
 S DIR(0)="FAO"
"RTN","RCDPESP5",191,0)
 S DIR("??")="^D LIST^RCDPCRR(345)"
"RTN","RCDPESP5",192,0)
 S DIR("A")="CARC: "
"RTN","RCDPESP5",193,0)
 D ^DIR
"RTN","RCDPESP5",194,0)
 K DIR
"RTN","RCDPESP5",195,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPESP5",196,0)
 I Y="" Q 0
"RTN","RCDPESP5",197,0)
 Q Y
"RTN","RCDPESP5",198,0)
 ;
"RTN","RCDPESP5",199,0)
 ;Ask user to change or disable an enabled CARC auto-decrement
"RTN","RCDPESP5",200,0)
CHGDIS() ;
"RTN","RCDPESP5",201,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",202,0)
 S DIR("?")="Either (D)isable the CARC from Auto-Decrease or (C)hange the maximum amount of Auto-Decrease."
"RTN","RCDPESP5",203,0)
 S DIR(0)="FA"
"RTN","RCDPESP5",204,0)
 S DIR("A")="(C)hange or (D)isable: "
"RTN","RCDPESP5",205,0)
 S DIR("S")="C:Change;D:Disable"
"RTN","RCDPESP5",206,0)
 D ^DIR
"RTN","RCDPESP5",207,0)
 K DIR
"RTN","RCDPESP5",208,0)
 Q Y
"RTN","RCDPESP5",209,0)
 ;
"RTN","RCDPESP5",210,0)
 ;Ask user to change or disable an enabled CARC auto-decrement
"RTN","RCDPESP5",211,0)
CONFIRM(RCIDX,PAID) ; Added PAID - PRCA*4.5*326
"RTN","RCDPESP5",212,0)
 N DA,DIR,DTOUT,DUOUT,DIRUT,DIROUT,RCTXT,X,Y
"RTN","RCDPESP5",213,0)
 ;
"RTN","RCDPESP5",214,0)
 S RCTXT=$S(PAID:"",1:"NO-PAY ") ; PRCA*4.5*326
"RTN","RCDPESP5",215,0)
 ; Confirm if the CARC code is correct
"RTN","RCDPESP5",216,0)
 I RCIDX=1 D
"RTN","RCDPESP5",217,0)
 . S DIR("?")="Either (Y)es to confirm that this is the correct code or (N)o to enter a different code."
"RTN","RCDPESP5",218,0)
 . S DIR("A")="ENABLE this CARC for Auto-Decrease of "_RCTXT_"Medical Claims (Y/N)? "
"RTN","RCDPESP5",219,0)
 ;
"RTN","RCDPESP5",220,0)
 ; Confirm if the user wishes to Enable the changes
"RTN","RCDPESP5",221,0)
 I RCIDX=2 D
"RTN","RCDPESP5",222,0)
 . S DIR("?")="Either (Y)es to confirm changes or (N)o to exit without saving."
"RTN","RCDPESP5",223,0)
 . S DIR("A")="Save this CARC? (Y)es or (N)o: "
"RTN","RCDPESP5",224,0)
 ;
"RTN","RCDPESP5",225,0)
 ; Confirm if the user wishes to Disable the changes
"RTN","RCDPESP5",226,0)
 I RCIDX=3 D
"RTN","RCDPESP5",227,0)
 . S DIR("?")="Either (Y)es to confirm changes or (N)o to exit without saving."
"RTN","RCDPESP5",228,0)
 . S DIR("A")="Remove this CARC? (Y)es or (N)o: "
"RTN","RCDPESP5",229,0)
 ;
"RTN","RCDPESP5",230,0)
 ; Confirm if the CARC code is correct
"RTN","RCDPESP5",231,0)
 I RCIDX=4 D
"RTN","RCDPESP5",232,0)
 . S DIR("?")="Either (Y)es to confirm that this is the correct code or (N)o to enter a different code."
"RTN","RCDPESP5",233,0)
 . S DIR("A")="DISABLE this CARC for Auto-Decrease of "_RCTXT_"Medical Claims (Y/N)? "
"RTN","RCDPESP5",234,0)
 ;
"RTN","RCDPESP5",235,0)
 S DIR(0)="YA"
"RTN","RCDPESP5",236,0)
 S DIR("S")="Y:Yes;N:No"
"RTN","RCDPESP5",237,0)
 D ^DIR
"RTN","RCDPESP5",238,0)
 K DIR
"RTN","RCDPESP5",239,0)
 I $G(DTOUT)!$G(DUOUT) S Y=-1
"RTN","RCDPESP5",240,0)
 I Y="0" S Y=-1
"RTN","RCDPESP5",241,0)
 Q Y
"RTN","RCDPESP5",242,0)
 ;
"RTN","RCDPESP5",243,0)
 ;Ask user the maximum amount to allow for auto-decrease
"RTN","RCDPESP5",244,0)
GETAMT() ;
"RTN","RCDPESP5",245,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPESP5",246,0)
 N DA,DIR,DIRUT,DIROUT,DTOUT,DUOUT,RCMAX,X,Y
"RTN","RCDPESP5",247,0)
 S RCMAX=+$$GET1^DIQ(344.61,"1,",.05)
"RTN","RCDPESP5",248,0)
 S DIR("?")="Enter the maximum amount the CARC can be auto-decreased between $1 and $"_RCMAX
"RTN","RCDPESP5",249,0)
 S DIR(0)="NA^1:"_RCMAX_":0"
"RTN","RCDPESP5",250,0)
 S DIR("A")="MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE PER CLAIM (1-"_RCMAX_"): "
"RTN","RCDPESP5",251,0)
 ; END PRCA*4.5*326
"RTN","RCDPESP5",252,0)
 D ^DIR
"RTN","RCDPESP5",253,0)
 K DIR
"RTN","RCDPESP5",254,0)
 I $G(DUOUT) S Y=-1
"RTN","RCDPESP5",255,0)
 Q Y
"RTN","RCDPESP5",256,0)
 ;
"RTN","RCDPESP5",257,0)
 ;Get the reason for modification
"RTN","RCDPESP5",258,0)
GETREASN(RCCARC) ;
"RTN","RCDPESP5",259,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",260,0)
 S DIR("?")="Enter reason for enabling/disabling, or changing the Maximum Dollar decrease amount for CARC "_RCCARC_" (3-50 chars)."
"RTN","RCDPESP5",261,0)
 S DIR(0)="FA^3:50"
"RTN","RCDPESP5",262,0)
 S DIR("A")="COMMENT: "
"RTN","RCDPESP5",263,0)
 S DIR("PRE")="S X=$$TRIM^XLFSTR(X,""LR"")" ; comment required and should be significant
"RTN","RCDPESP5",264,0)
 D ^DIR
"RTN","RCDPESP5",265,0)
 K DIR
"RTN","RCDPESP5",266,0)
 I $G(DUOUT) S Y=-1
"RTN","RCDPESP5",267,0)
 Q Y
"RTN","RCDPESP5",268,0)
 ;
"RTN","RCDPESP5",269,0)
 ;Update the database and audit log
"RTN","RCDPESP5",270,0)
UPDDATA(RCCIEN,RCSTAT,RCAMT,RCRSN,PAID) ; PAID added PRCA*4.5*326
"RTN","RCDPESP5",271,0)
 N DA,DR,DIE,DTOUT,X,Y,DIC
"RTN","RCDPESP5",272,0)
 ; replaced //// with /// in following 5 lines - PRCA*4.5*321
"RTN","RCDPESP5",273,0)
 S DA=RCCIEN,(DIC,DIE)="^RCY(344.62,"
"RTN","RCDPESP5",274,0)
 ; BEGIN - PRCA*4.5*326
"RTN","RCDPESP5",275,0)
  ; Paid lines
"RTN","RCDPESP5",276,0)
 I PAID=1 D
"RTN","RCDPESP5",277,0)
 .S DR=".02///"_RCSTAT_";"
"RTN","RCDPESP5",278,0)
 .S DR=DR_".05///"_$$DT^XLFDT_";" ; PRCA*4.5*326
"RTN","RCDPESP5",279,0)
 .S DR=DR_".04///"_DUZ_";"
"RTN","RCDPESP5",280,0)
 .S DR=DR_".06///"_RCAMT_";"
"RTN","RCDPESP5",281,0)
 .S DR=DR_".07///"_RCRSN_";"
"RTN","RCDPESP5",282,0)
 ; No-pay lines
"RTN","RCDPESP5",283,0)
 I PAID=0 D
"RTN","RCDPESP5",284,0)
 .S DR=".08///"_RCSTAT_";"
"RTN","RCDPESP5",285,0)
 .S DR=DR_".11///"_$$DT^XLFDT_";"
"RTN","RCDPESP5",286,0)
 .S DR=DR_".10///"_DUZ_";"
"RTN","RCDPESP5",287,0)
 .S DR=DR_".12///"_RCAMT_";"
"RTN","RCDPESP5",288,0)
 .S DR=DR_".13///"_RCRSN_";"
"RTN","RCDPESP5",289,0)
 ; END - PRCA*4.5*326
"RTN","RCDPESP5",290,0)
 ;
"RTN","RCDPESP5",291,0)
 L +^RCY(344.62,RCCIEN):10 E  Q  ; PRCA*4.5*326 timeout condition added
"RTN","RCDPESP5",292,0)
 D ^DIE
"RTN","RCDPESP5",293,0)
 L -^RCY(344.62,RCCIEN)
"RTN","RCDPESP5",294,0)
 Q  ; PRCA*4.5*326 - return value removed 
"RTN","RCDPESP5",295,0)
 ;
"RTN","RCDPESP5",296,0)
 ;Add new entry to the table
"RTN","RCDPESP5",297,0)
ADDDATA(RCCARC,RCAMT,RCRSN,PAID) ; PAID added PRCA*4.5*326
"RTN","RCDPESP5",298,0)
 N RCENTRY,RCROOT,MSGROOT
"RTN","RCDPESP5",299,0)
 ;
"RTN","RCDPESP5",300,0)
 ; BEGIN - PRCA*4.5*326
"RTN","RCDPESP5",301,0)
 ; set up array for paid lines
"RTN","RCDPESP5",302,0)
 I PAID=1 D
"RTN","RCDPESP5",303,0)
 .S RCENTRY(344.62,"+1,",.01)=RCCARC        ;CARC Code
"RTN","RCDPESP5",304,0)
 .S RCENTRY(344.62,"+1,",.02)=1 ;Enabled status
"RTN","RCDPESP5",305,0)
 .S RCENTRY(344.62,"+1,",.03)=$$DT^XLFDT    ;Date added PRCA*4.5*326
"RTN","RCDPESP5",306,0)
 .S RCENTRY(344.62,"+1,",.04)=DUZ           ;User
"RTN","RCDPESP5",307,0)
 .S RCENTRY(344.62,"+1,",.06)=RCAMT         ;Max amount
"RTN","RCDPESP5",308,0)
 .S RCENTRY(344.62,"+1,",.07)=RCRSN         ;Comment
"RTN","RCDPESP5",309,0)
 ; set up array for no=pay lines
"RTN","RCDPESP5",310,0)
 I PAID=0 D
"RTN","RCDPESP5",311,0)
 .S RCENTRY(344.62,"+1,",.01)=RCCARC        ;CARC Code
"RTN","RCDPESP5",312,0)
 .S RCENTRY(344.62,"+1,",.08)=1             ;Enabled status
"RTN","RCDPESP5",313,0)
 .S RCENTRY(344.62,"+1,",.09)=$$DT^XLFDT    ;Date/Time added
"RTN","RCDPESP5",314,0)
 .S RCENTRY(344.62,"+1,",.10)=DUZ           ;User
"RTN","RCDPESP5",315,0)
 .S RCENTRY(344.62,"+1,",.12)=RCAMT         ;Max amount
"RTN","RCDPESP5",316,0)
 .S RCENTRY(344.62,"+1,",.13)=RCRSN         ;Comment
"RTN","RCDPESP5",317,0)
 ; END - PRCA*4.5*326
"RTN","RCDPESP5",318,0)
 ;file entry
"RTN","RCDPESP5",319,0)
 D UPDATE^DIE(,"RCENTRY","RCROOT","MSGROOT")
"RTN","RCDPESP5",320,0)
 Q
"RTN","RCDPESP5",321,0)
AUDIT() ;
"RTN","RCDPESP5",322,0)
 ;
"RTN","RCDPESP5",323,0)
 N EMEDANS,EOLDMED,EOLDRX,ERXANS,MEDANS,OLDMED,OLDRX,RXANS ; PRCA*4.5*321
"RTN","RCDPESP5",324,0)
 ;
"RTN","RCDPESP5",325,0)
 ; Get existing answers for Medical and Pharmacy paper bills
"RTN","RCDPESP5",326,0)
 S OLDMED=$$GET1^DIQ(342,"1,",7.05,"I")
"RTN","RCDPESP5",327,0)
 S OLDRX=$$GET1^DIQ(342,"1,",7.06,"I")
"RTN","RCDPESP5",328,0)
 ;
"RTN","RCDPESP5",329,0)
 ; Get existing answers for Medical and Pharmacy EDI (electronic) bills ; PRCA*4.5*321
"RTN","RCDPESP5",330,0)
 S EOLDMED=$$GET1^DIQ(342,"1,",7.07,"I") ; PRCA*4.5*321
"RTN","RCDPESP5",331,0)
 S EOLDRX=$$GET1^DIQ(342,"1,",7.08,"I") ; PRCA*4.5*321
"RTN","RCDPESP5",332,0)
 ;
"RTN","RCDPESP5",333,0)
 ; Get Medical paper bills
"RTN","RCDPESP5",334,0)
 S MEDANS=$$GETAUDIT(1)
"RTN","RCDPESP5",335,0)
 Q:MEDANS=-1 1
"RTN","RCDPESP5",336,0)
 ; File Medical paper bills
"RTN","RCDPESP5",337,0)
 I MEDANS'=OLDMED D
"RTN","RCDPESP5",338,0)
 . N RCAUDVAL
"RTN","RCDPESP5",339,0)
 . D FILEANS(7.05,MEDANS)
"RTN","RCDPESP5",340,0)
 . ; FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP5",341,0)
 . S RCAUDVAL(1)="342^7.05^1^"_MEDANS_U_OLDMED_U_"Updating the Medical Auto-Audit of paper bills"
"RTN","RCDPESP5",342,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",343,0)
 ;
"RTN","RCDPESP5",344,0)
 ; Get Pharmacy paper bills
"RTN","RCDPESP5",345,0)
 S RXANS=$$GETAUDIT(2)
"RTN","RCDPESP5",346,0)
 Q:RXANS=-1 1
"RTN","RCDPESP5",347,0)
 ;
"RTN","RCDPESP5",348,0)
 ; File Pharmacy paper bills
"RTN","RCDPESP5",349,0)
 I RXANS'=OLDRX D
"RTN","RCDPESP5",350,0)
 . N RCAUDVAL
"RTN","RCDPESP5",351,0)
 . D FILEANS(7.06,RXANS)
"RTN","RCDPESP5",352,0)
 . S RCAUDVAL(1)="342^7.06^1^"_RXANS_U_OLDRX_U_"Updating the Pharmacy Auto-Audit of paper bills"
"RTN","RCDPESP5",353,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",354,0)
 ; 
"RTN","RCDPESP5",355,0)
 ; BEGIN PRCA*4.5*321
"RTN","RCDPESP5",356,0)
 ; Get Medical electronic bills
"RTN","RCDPESP5",357,0)
 S EMEDANS=$$GETAUDIT(3)
"RTN","RCDPESP5",358,0)
 Q:EMEDANS=-1 1
"RTN","RCDPESP5",359,0)
 ; File Medical electronic bills
"RTN","RCDPESP5",360,0)
 I EMEDANS'=EOLDMED D
"RTN","RCDPESP5",361,0)
 . N RCAUDVAL
"RTN","RCDPESP5",362,0)
 . D FILEANS(7.07,EMEDANS)
"RTN","RCDPESP5",363,0)
 . ; FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP5",364,0)
 . S RCAUDVAL(1)="342^7.07^1^"_EMEDANS_U_EOLDMED_U_"Updating the Medical Auto-Audit of electronic bills"
"RTN","RCDPESP5",365,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",366,0)
 ;
"RTN","RCDPESP5",367,0)
 ; Get Pharmacy electronic bills
"RTN","RCDPESP5",368,0)
 S ERXANS=$$GETAUDIT(4)
"RTN","RCDPESP5",369,0)
 Q:ERXANS=-1 1
"RTN","RCDPESP5",370,0)
 ;
"RTN","RCDPESP5",371,0)
 ; File Pharmacy electronic bills
"RTN","RCDPESP5",372,0)
 I ERXANS'=EOLDRX D
"RTN","RCDPESP5",373,0)
 . N RCAUDVAL
"RTN","RCDPESP5",374,0)
 . D FILEANS(7.08,ERXANS)
"RTN","RCDPESP5",375,0)
 . S RCAUDVAL(1)="342^7.08^1^"_ERXANS_U_EOLDRX_U_"Updating the Pharmacy Auto-Audit of electronic bills"
"RTN","RCDPESP5",376,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",377,0)
 ; END PRCA*4.5*321
"RTN","RCDPESP5",378,0)
 ;
"RTN","RCDPESP5",379,0)
 Q 0
"RTN","RCDPESP5",380,0)
 ;
"RTN","RCDPESP5",381,0)
 ;Retrieve the parameter for the bill type
"RTN","RCDPESP5",382,0)
GETAUDIT(FLAG) ;
"RTN","RCDPESP5",383,0)
 ; BEGIN PRCA*4.5*321
"RTN","RCDPESP5",384,0)
 ;FLAG - What audit type (1=Med Paper, 2=RX Paper, 3=Med EDI, 4=Rx EDI)
"RTN","RCDPESP5",385,0)
 Q:'$G(FLAG) -1
"RTN","RCDPESP5",386,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FLDNO,RCANS,TYPL,TYPU,X,Y
"RTN","RCDPESP5",387,0)
 S TYPL=$S(FLAG>2:"electronic",1:"paper")
"RTN","RCDPESP5",388,0)
 S TYPU=$S(FLAG>2:"ELECTRONIC",1:"PAPER")
"RTN","RCDPESP5",389,0)
 S FLDNO=$S(FLAG=1:7.05,FLAG=2:7.06,FLAG=3:7.07,FLAG=4:7.08,1:0)
"RTN","RCDPESP5",390,0)
 Q:'FLDNO -1
"RTN","RCDPESP5",391,0)
 ;
"RTN","RCDPESP5",392,0)
 ; Prompt for Medical Auto-audit
"RTN","RCDPESP5",393,0)
 D:$G(FLAG)#2=1
"RTN","RCDPESP5",394,0)
 . S DIR("A")="ENABLE AUTO-AUDIT FOR MEDICAL "_TYPU_" BILLS (Y/N): "
"RTN","RCDPESP5",395,0)
 . S DIR("?",1)="Allow a site to automatically audit their Medical "_TYPL_" Bills"
"RTN","RCDPESP5",396,0)
 . S DIR("?",2)="during the AR Nightly Process."
"RTN","RCDPESP5",397,0)
 . S DIR("?",3)=" "
"RTN","RCDPESP5",398,0)
 . S RCANS=$$GET1^DIQ(342,"1,",FLDNO)
"RTN","RCDPESP5",399,0)
 ;
"RTN","RCDPESP5",400,0)
 ; Prompt for Pharmacy Auto-audit
"RTN","RCDPESP5",401,0)
 D:$G(FLAG)#2=0
"RTN","RCDPESP5",402,0)
 . S DIR("A")="ENABLE AUTO-AUDIT FOR PHARMACY "_TYPU_" BILLS (Y/N): "
"RTN","RCDPESP5",403,0)
 . S DIR("?",1)="Allow a site to automatically audit their Pharmacy "_TYPL_" Bills"
"RTN","RCDPESP5",404,0)
 . S DIR("?",2)="during the AR Nightly Process."
"RTN","RCDPESP5",405,0)
 . S DIR("?",3)=" "
"RTN","RCDPESP5",406,0)
 . S RCANS=$$GET1^DIQ(342,"1,",FLDNO)
"RTN","RCDPESP5",407,0)
 ; END PRCA*4.5*321
"RTN","RCDPESP5",408,0)
 ;
"RTN","RCDPESP5",409,0)
 S DIR(0)="YAO"
"RTN","RCDPESP5",410,0)
 S DIR("?")="Enter Yes or No to select automatic processing of "_TYPL_" bills." ; PRCA*4.5*321
"RTN","RCDPESP5",411,0)
 S DIR("B")=$S($G(RCANS)'="":RCANS,1:"No")
"RTN","RCDPESP5",412,0)
 D ^DIR K DIR
"RTN","RCDPESP5",413,0)
 I Y="" Q ""
"RTN","RCDPESP5",414,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPESP5",415,0)
 Q Y
"RTN","RCDPESP5",416,0)
 ;
"RTN","RCDPESP5",417,0)
 ;File the answer
"RTN","RCDPESP5",418,0)
FILEANS(FIELD,ANS) ;
"RTN","RCDPESP5",419,0)
 ;
"RTN","RCDPESP5",420,0)
 N DR,DIE,DA,DTOUT,DIDEL,X,Y
"RTN","RCDPESP5",421,0)
 ;
"RTN","RCDPESP5",422,0)
 ;Update Transaction
"RTN","RCDPESP5",423,0)
 S DR=FIELD_"///"_ANS           ;Original Confirmation #
"RTN","RCDPESP5",424,0)
 S DIE="^RC(342,"
"RTN","RCDPESP5",425,0)
 S DA=1
"RTN","RCDPESP5",426,0)
 D ^DIE
"RTN","RCDPESP5",427,0)
 ;
"RTN","RCDPESP5",428,0)
 Q
"RTN","RCDPESP5",429,0)
 ;
"RTN","RCDPESP5",430,0)
 ;BEGIN PRCA*4.5*326
"RTN","RCDPESP5",431,0)
CARCDSP(RCMAX) ; EP ^RCDPESP7
"RTN","RCDPESP5",432,0)
 N RCCHECK
"RTN","RCDPESP5",433,0)
 ;
"RTN","RCDPESP5",434,0)
 ; Check for CARCs that will be reset to the new maximum and display
"RTN","RCDPESP5",435,0)
 S RCCHECK=0
"RTN","RCDPESP5",436,0)
 ; Paid line CARCs
"RTN","RCDPESP5",437,0)
 D CHECK(RCMAX,1,1,.RCCHECK)
"RTN","RCDPESP5",438,0)
 ; No-pay line CARCs
"RTN","RCDPESP5",439,0)
 D CHECK(RCMAX,0,1,.RCCHECK)
"RTN","RCDPESP5",440,0)
 ;
"RTN","RCDPESP5",441,0)
 ; Finish if none found
"RTN","RCDPESP5",442,0)
 Q:'RCCHECK 1
"RTN","RCDPESP5",443,0)
 ;
"RTN","RCDPESP5",444,0)
 ; Ask if OK to proceed and reduce these CARCs
"RTN","RCDPESP5",445,0)
 N DIR,DTOUT,DUOUT
"RTN","RCDPESP5",446,0)
 S DIR(0)="YA"
"RTN","RCDPESP5",447,0)
 S DIR("A")="Do you want to continue (Y/N)? "
"RTN","RCDPESP5",448,0)
 W ! D ^DIR
"RTN","RCDPESP5",449,0)
 ; Abort
"RTN","RCDPESP5",450,0)
 I $D(DUOUT)!$D(DTOUT) Q "QUIT"
"RTN","RCDPESP5",451,0)
 ; Go back and re-enter maximum amount
"RTN","RCDPESP5",452,0)
 I 'Y Q 0
"RTN","RCDPESP5",453,0)
 ;
"RTN","RCDPESP5",454,0)
 ; Update the CARCs previously displayed
"RTN","RCDPESP5",455,0)
 S RCCHECK=0
"RTN","RCDPESP5",456,0)
 ; Update paid line CARCs
"RTN","RCDPESP5",457,0)
 D CHECK(RCMAX,1,0,.RCCHECK)
"RTN","RCDPESP5",458,0)
 ; Update no-pay line CARCs
"RTN","RCDPESP5",459,0)
 D CHECK(RCMAX,0,0,.RCCHECK)
"RTN","RCDPESP5",460,0)
 Q 1
"RTN","RCDPESP5",461,0)
 ;
"RTN","RCDPESP5",462,0)
CHECK(RCMAX,RCPAID,RCDSP,RCCNT) ;Display/Reset any CARC maximum values which exceed upper limit
"RTN","RCDPESP5",463,0)
 ; Input  - RCMAX = Maximum allowed $ decrease per claim (from #344.61, #.05)
"RTN","RCDPESP5",464,0)
 ;          RCPAID - 1 = CARCs for paid claims, 0 = CARC's for NO-PAY claims
"RTN","RCDPESP5",465,0)
 ;          RCDSP - 1 = display only, 0 = update only
"RTN","RCDPESP5",466,0)
 ;          RCCNT = cummulative count of pay and no-pay records found
"RTN","RCDPESP5",467,0)
 ; Output - Updates #344.62 - RCDPE CARC-RARC AUTO DEC
"RTN","RCDPESP5",468,0)
 ;          Updates #344.7 - RCDPE PARAMETER AUDIT
"RTN","RCDPESP5",469,0)
 ;
"RTN","RCDPESP5",470,0)
 N RCACT,RCAMT,RCARR,RCCODE,RCCT,RCDESC,RCFLD,RCFLDA,RCI,RCINACT,RCSTAT,RCSUB,RCTXT
"RTN","RCDPESP5",471,0)
 ; Max Amount field
"RTN","RCDPESP5",472,0)
 S RCFLD=$S(RCPAID:.06,1:.12)
"RTN","RCDPESP5",473,0)
 ; Auto-decrease Y/N field
"RTN","RCDPESP5",474,0)
 S RCFLDA=$S(RCPAID:.02,1:.08)
"RTN","RCDPESP5",475,0)
 ; Search for entries that need reducing
"RTN","RCDPESP5",476,0)
 S RCI=0,RCARR=0
"RTN","RCDPESP5",477,0)
 F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP5",478,0)
 . ; Check if this is an active code
"RTN","RCDPESP5",479,0)
 . S RCACT=$$GET1^DIQ(344.62,RCI_",",RCFLDA,"I")
"RTN","RCDPESP5",480,0)
 . Q:'RCACT
"RTN","RCDPESP5",481,0)
 . ; Maximum amount for CARC
"RTN","RCDPESP5",482,0)
 . S RCAMT=$$GET1^DIQ(344.62,RCI_",",RCFLD)
"RTN","RCDPESP5",483,0)
 . ; Check if limit exceeded
"RTN","RCDPESP5",484,0)
 . Q:RCAMT'>RCMAX
"RTN","RCDPESP5",485,0)
 . ; Save CARC  for reset and/or display
"RTN","RCDPESP5",486,0)
 . S RCARR=RCARR+1,RCCNT=RCCNT+1
"RTN","RCDPESP5",487,0)
 . S RCARR(RCARR)=RCI_U_RCAMT
"RTN","RCDPESP5",488,0)
 ;
"RTN","RCDPESP5",489,0)
 Q:RCARR=0
"RTN","RCDPESP5",490,0)
 ;
"RTN","RCDPESP5",491,0)
 I RCDSP=1 D
"RTN","RCDPESP5",492,0)
 .S RCTXT=$S('RCPAID:"NO-PAY ",1:"")
"RTN","RCDPESP5",493,0)
 .W !!,"Warning:"
"RTN","RCDPESP5",494,0)
 .W !," The following "_RCTXT_"CARC codes' max. amt will be changed to the new limit $"_RCMAX
"RTN","RCDPESP5",495,0)
 S RCSUB=0
"RTN","RCDPESP5",496,0)
 F  S RCSUB=$O(RCARR(RCSUB)) Q:'RCSUB  D
"RTN","RCDPESP5",497,0)
 . S RCI=$P(RCARR(RCSUB),U)
"RTN","RCDPESP5",498,0)
 . S RCAMT=$P(RCARR(RCSUB),U,2)
"RTN","RCDPESP5",499,0)
 . ; Display line
"RTN","RCDPESP5",500,0)
 . I RCDSP D
"RTN","RCDPESP5",501,0)
 . . S RCCODE=$$GET1^DIQ(344.62,RCI_",",.01)
"RTN","RCDPESP5",502,0)
 . . S RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP5",503,0)
 . . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP5",504,0)
 . . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP5",505,0)
 . . W !,?3,RCCODE,?9,$E(RCDESC,1,55),?63,$J(RCAMT,10,0)
"RTN","RCDPESP5",506,0)
 . ; Reset CARC to top limit
"RTN","RCDPESP5",507,0)
 . I 'RCDSP D
"RTN","RCDPESP5",508,0)
 . . N RCAUDARY,RCSTAT,RCTXT
"RTN","RCDPESP5",509,0)
 . . S RCSTAT=$$GET1^DIQ(344.62,RCI_",",.02) ; Leave status unchanged
"RTN","RCDPESP5",510,0)
 . . S RCTXT="Max. Amt reduced to top limit"
"RTN","RCDPESP5",511,0)
 . . ; Update #344.62 - RCDPE CARC-RARC AUTO DEC
"RTN","RCDPESP5",512,0)
 . . D UPDDATA(RCI,RCSTAT,RCMAX,RCTXT,RCPAID)
"RTN","RCDPESP5",513,0)
 . . S RCTXT="Updated automatically - over maximum allowed"
"RTN","RCDPESP5",514,0)
 . . ; Update #344.7 - RCDPE PARAMETER AUDIT
"RTN","RCDPESP5",515,0)
 . . S RCAUDARY(1)="344.62^"_RCFLD_"^"_RCI_"^"_RCMAX_"^"_RCAMT_"^"_RCTXT
"RTN","RCDPESP5",516,0)
 . . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",517,0)
 Q
"RTN","RCDPESP5",518,0)
 ; END PRCA*4.5*326
"RTN","RCDPESP6")
0^43^B44732260
"RTN","RCDPESP6",1,0)
RCDPESP6 ;AITC/CJE - ePayment Lockbox Site Parameters - Notify Changes;
"RTN","RCDPESP6",2,0)
 ;;4.5;Accounts Receivable;**326**;;Build 26
"RTN","RCDPESP6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP6",4,0)
 ;
"RTN","RCDPESP6",5,0)
 Q
"RTN","RCDPESP6",6,0)
EN ; On entry into parameter edit, save a snapshot of the files
"RTN","RCDPESP6",7,0)
 ; Input: None
"RTN","RCDPESP6",8,0)
 ; Output: ^TMP("RCDPESP6",$J) created by merging in files 344.6, 344.61 and 344.62
"RTN","RCDPESP6",9,0)
 K ^TMP("RCDPESP6",$J)
"RTN","RCDPESP6",10,0)
 M ^TMP("RCDPESP6",$J,344.6)=^RCY(344.6)   ; Save payer exclusions
"RTN","RCDPESP6",11,0)
 M ^TMP("RCDPESP6",$J,344.61)=^RCY(344.61) ; Save parameters
"RTN","RCDPESP6",12,0)
 M ^TMP("RCDPESP6",$J,344.62)=^RCY(344.62) ; Save CARC/RARC auto dec
"RTN","RCDPESP6",13,0)
 Q
"RTN","RCDPESP6",14,0)
EXIT ; On exit from parameter edit, compare snapshot with live files.
"RTN","RCDPESP6",15,0)
 ; Send a mail message if any designated items have changed.
"RTN","RCDPESP6",16,0)
 ; Input: ^TMP("RCDPESP6",$J) created above by merging in files 344.6, 344.61 and 344.62
"RTN","RCDPESP6",17,0)
 ; Output: Mail message (if any parameters have changed)
"RTN","RCDPESP6",18,0)
 ;
"RTN","RCDPESP6",19,0)
 N CHANGES,CHGCNT,LINES,RCMSGTXT,RCSITE,RCSUBJ,XMINSTR,XMTO
"RTN","RCDPESP6",20,0)
 ;
"RTN","RCDPESP6",21,0)
 S CHGCNT=0
"RTN","RCDPESP6",22,0)
 S CHGCNT=$$CHKCHNG(.RCMSGTXT) ; Check for any changes in parameters
"RTN","RCDPESP6",23,0)
 ;
"RTN","RCDPESP6",24,0)
 I 'CHGCNT Q  ; No changes made so don't send message
"RTN","RCDPESP6",25,0)
 ;
"RTN","RCDPESP6",26,0)
 S RCSITE=$$SITE^VASITE()
"RTN","RCDPESP6",27,0)
 S RCSUBJ=$E("ePayments EDI Lockbox Parameters changed "_$P(RCSITE,U,2),1,65)
"RTN","RCDPESP6",28,0)
 D HEADER(.RCMSGTXT,RCSITE)
"RTN","RCDPESP6",29,0)
 ;
"RTN","RCDPESP6",30,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPESP6",31,0)
 ;
"RTN","RCDPESP6",32,0)
 S XMTO(DUZ)="",XMTO("G.RCDPE AUDIT")=""
"RTN","RCDPESP6",33,0)
 ;
"RTN","RCDPESP6",34,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPESP6",35,0)
 D SENDMSG^XMXAPI(DUZ,RCSUBJ,"RCMSGTXT",.XMTO,.XMINSTR)
"RTN","RCDPESP6",36,0)
 ;
"RTN","RCDPESP6",37,0)
 I $D(^TMP("XMERR",$J)) D
"RTN","RCDPESP6",38,0)
 . N G
"RTN","RCDPESP6",39,0)
 . D MES^XPDUTL("MailMan returned an error.")
"RTN","RCDPESP6",40,0)
 . D MES^XPDUTL("The error text is:")
"RTN","RCDPESP6",41,0)
 . S G=$NA(^TMP("XMERR",$J))
"RTN","RCDPESP6",42,0)
 . F  S G=$Q(@G) Q:G=""  Q:$QS(G,2)'=$J  D MES^XPDUTL("  "_$C(34)_@G_$C(34))
"RTN","RCDPESP6",43,0)
 . D MES^XPDUTL(" * End of Error Text *")
"RTN","RCDPESP6",44,0)
 . K ^TMP("XMERR",$J)
"RTN","RCDPESP6",45,0)
 ;
"RTN","RCDPESP6",46,0)
 K ^TMP("RCDPESP6",$J) ; Clean up saved files
"RTN","RCDPESP6",47,0)
 Q
"RTN","RCDPESP6",48,0)
 ;
"RTN","RCDPESP6",49,0)
HEADER(MSGTXT,RCSITE)  ; Add Header Lines to the mail message text
"RTN","RCDPESP6",50,0)
 ; Input: None
"RTN","RCDPESP6",51,0)
 ; Output: Array MSGTXT passed by reference
"RTN","RCDPESP6",52,0)
 ;
"RTN","RCDPESP6",53,0)
 ; limit subject to 65 chars.
"RTN","RCDPESP6",54,0)
 S MSGTXT(1)=" "
"RTN","RCDPESP6",55,0)
 S MSGTXT(2)="        Site: "_$P(RCSITE,U,2)
"RTN","RCDPESP6",56,0)
 S MSGTXT(3)="    Station # "_$P(RCSITE,U,3)
"RTN","RCDPESP6",57,0)
 S MSGTXT(4)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","RCDPESP6",58,0)
 S MSGTXT(5)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"1ZPM")
"RTN","RCDPESP6",59,0)
 S MSGTXT(6)="        User: "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPESP6",60,0)
 S MSGTXT(7)=" "
"RTN","RCDPESP6",61,0)
 S MSGTXT(8)=" The following EDI Lockbox Site Parameters were changed: "
"RTN","RCDPESP6",62,0)
 S MSGTXT(9)=" "
"RTN","RCDPESP6",63,0)
 S MSGTXT(10)=$J("",50)_$J("OLD VALUE",10)_"  "_$J("NEW VALUE",10)
"RTN","RCDPESP6",64,0)
 Q
"RTN","RCDPESP6",65,0)
CHKCHNG(LINE) ; Check for changes in EDI Lockbox site parameters
"RTN","RCDPESP6",66,0)
 ; Input: ^TMP("RCDPESP6",$J) - Copy of file 344.6, 344.61 and 344.62 taken on entry
"RTN","RCDPESP6",67,0)
 ; Output: LINE - Change lines to add to the mail message. Passed by reference.
"RTN","RCDPESP6",68,0)
 ; Return: COUNT of the number of changes. 0 if no changes were made.
"RTN","RCDPESP6",69,0)
 N COUNT,DOTS,HEAD,IEN,J,REC0,REC1,XNEW,XOLD
"RTN","RCDPESP6",70,0)
 ;
"RTN","RCDPESP6",71,0)
 S (COUNT,HEAD)=0,HEAD("SIZE")=10
"RTN","RCDPESP6",72,0)
 S HEAD("TXT")="ALL PAYERS"
"RTN","RCDPESP6",73,0)
 S DOTS="" F J=1:1:40 S DOTS=DOTS_"."
"RTN","RCDPESP6",74,0)
 ; Check parameters in 344.61 that apply to all payers
"RTN","RCDPESP6",75,0)
 S REC0=$G(^TMP("RCDPESP6",$J,344.61,1,0))
"RTN","RCDPESP6",76,0)
 ;
"RTN","RCDPESP6",77,0)
 ; Auto-post med claims enabled
"RTN","RCDPESP6",78,0)
 S XOLD=$P(REC0,"^",2)
"RTN","RCDPESP6",79,0)
 S XNEW=$$GET1^DIQ(344.61,"1,",.02,"I")
"RTN","RCDPESP6",80,0)
 I XNEW'=XOLD D  ;
"RTN","RCDPESP6",81,0)
 . D LNOUT(.HEAD,.LINE,"AUTO-POST MED CLAIMS ENABLED",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",82,0)
 ;
"RTN","RCDPESP6",83,0)
 ; Auto-decrease med enabled
"RTN","RCDPESP6",84,0)
 S XOLD=$P(REC0,"^",3)
"RTN","RCDPESP6",85,0)
 S XNEW=$$GET1^DIQ(344.61,"1,",.03,"I")
"RTN","RCDPESP6",86,0)
 I XNEW'=XOLD D  ;
"RTN","RCDPESP6",87,0)
 . D LNOUT(.HEAD,.LINE,"AUTO-DECREASE MED ENABLED",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",88,0)
 ;
"RTN","RCDPESP6",89,0)
 ; Auto-decrease med days
"RTN","RCDPESP6",90,0)
 S XOLD=$P(REC0,"^",4)
"RTN","RCDPESP6",91,0)
 S XNEW=$$GET1^DIQ(344.61,"1,",.04,"I")
"RTN","RCDPESP6",92,0)
 I XNEW'=XOLD D  ;
"RTN","RCDPESP6",93,0)
 . D LNOUT(.HEAD,.LINE,"AUTO-DECREASE DAYS DEFAULT",XOLD,XNEW,"D",.COUNT)
"RTN","RCDPESP6",94,0)
 ;
"RTN","RCDPESP6",95,0)
 ; Auto-decrease no-pay med enabled
"RTN","RCDPESP6",96,0)
 S XOLD=$P(REC0,"^",11)
"RTN","RCDPESP6",97,0)
 S XNEW=$$GET1^DIQ(344.61,"1,",.11,"I")
"RTN","RCDPESP6",98,0)
 I XNEW'=XOLD D  ;
"RTN","RCDPESP6",99,0)
 . D LNOUT(.HEAD,.LINE,"AUTO-DECREASE NO-PAY MED ENABLED",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",100,0)
 ;
"RTN","RCDPESP6",101,0)
 ; Auto-decrease no-pay med days
"RTN","RCDPESP6",102,0)
 S XOLD=$P(REC0,"^",12)
"RTN","RCDPESP6",103,0)
 S XNEW=$$GET1^DIQ(344.61,"1,",.12,"I")
"RTN","RCDPESP6",104,0)
 I XNEW'=XOLD D  ;
"RTN","RCDPESP6",105,0)
 . D LNOUT(.HEAD,.LINE,"AUTO-DECREASE NO-PAY DAYS DEFAULT",XOLD,XNEW,"D",.COUNT)
"RTN","RCDPESP6",106,0)
 ;
"RTN","RCDPESP6",107,0)
 ; Auto-decrease med amount
"RTN","RCDPESP6",108,0)
 S XOLD=$P(REC0,"^",5)
"RTN","RCDPESP6",109,0)
 S XNEW=$$GET1^DIQ(344.61,"1,",.05,"I")
"RTN","RCDPESP6",110,0)
 I XNEW'=XOLD D  ;
"RTN","RCDPESP6",111,0)
 . D LNOUT(.HEAD,.LINE,"AUTO-DECREASE AMT DEFAULT",XOLD,XNEW,"$",.COUNT)
"RTN","RCDPESP6",112,0)
 ;
"RTN","RCDPESP6",113,0)
 S REC1=$G(^TMP("RCDPESP6",$J,344.61,1,1))
"RTN","RCDPESP6",114,0)
 ; Auto-post Rx
"RTN","RCDPESP6",115,0)
 S XOLD=$P(REC1,"^",1)
"RTN","RCDPESP6",116,0)
 S XNEW=$$GET1^DIQ(344.61,"1,",1.01,"I")
"RTN","RCDPESP6",117,0)
 I XNEW'=XOLD D  ;
"RTN","RCDPESP6",118,0)
 . D LNOUT(.HEAD,.LINE,"AUTO-POST RX CLAIMS ENABLED",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",119,0)
 ;
"RTN","RCDPESP6",120,0)
 ; Auto-decrease Rx
"RTN","RCDPESP6",121,0)
 S XOLD=$P(REC1,"^",2)
"RTN","RCDPESP6",122,0)
 S XNEW=$$GET1^DIQ(344.61,"1,",1.02,"I")
"RTN","RCDPESP6",123,0)
 I XNEW'=XOLD D  ;
"RTN","RCDPESP6",124,0)
 . D LNOUT(.HEAD,.LINE,"AUTO-DECREASE RX ENABLED",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",125,0)
 ;
"RTN","RCDPESP6",126,0)
 ; Check each payer in 344.6 for changes
"RTN","RCDPESP6",127,0)
 S IEN=0
"RTN","RCDPESP6",128,0)
 F  S IEN=$O(^RCY(344.6,IEN)) Q:'IEN  D  ;
"RTN","RCDPESP6",129,0)
 . S REC0=$G(^TMP("RCDPESP6",$J,344.6,IEN,0))
"RTN","RCDPESP6",130,0)
 . S HEAD=0
"RTN","RCDPESP6",131,0)
 . S HEAD("TXT")="PAYER: "_$$GET1^DIQ(344.6,IEN_",",.01,"E")
"RTN","RCDPESP6",132,0)
 . ; Exclude med claims posting
"RTN","RCDPESP6",133,0)
 . S XOLD=$P(REC0,"^",6)
"RTN","RCDPESP6",134,0)
 . S XNEW=$$GET1^DIQ(344.6,IEN_",",.06,"I")
"RTN","RCDPESP6",135,0)
 . I XOLD'=XNEW D  ;
"RTN","RCDPESP6",136,0)
 . . D LNOUT(.HEAD,.LINE,"EXCLUDE MED CLAIMS POSTING",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",137,0)
 . ; Exclude med claims decrease
"RTN","RCDPESP6",138,0)
 . S XOLD=$P(REC0,"^",7)
"RTN","RCDPESP6",139,0)
 . S XNEW=$$GET1^DIQ(344.6,IEN_",",.07,"I")
"RTN","RCDPESP6",140,0)
 . I XOLD'=XNEW D  ;
"RTN","RCDPESP6",141,0)
 . . D LNOUT(.HEAD,.LINE,"EXCLUDE MED CLAIMS DECREASE",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",142,0)
 . ; Exclude Rx claim posting
"RTN","RCDPESP6",143,0)
 . S XOLD=$P(REC0,"^",8)
"RTN","RCDPESP6",144,0)
 . S XNEW=$$GET1^DIQ(344.6,IEN_",",.08,"I")
"RTN","RCDPESP6",145,0)
 . I XOLD'=XNEW D  ;
"RTN","RCDPESP6",146,0)
 . . D LNOUT(.HEAD,.LINE,"EXCLUDE RX CLAIM POSTING",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",147,0)
 ;
"RTN","RCDPESP6",148,0)
 ; Check each CARC-RARC in 344.62 for changes
"RTN","RCDPESP6",149,0)
 S IEN=0
"RTN","RCDPESP6",150,0)
 F  S IEN=$O(^RCY(344.62,IEN)) Q:'IEN  D  ;
"RTN","RCDPESP6",151,0)
 . S REC0=$G(^TMP("RCDPESP6",$J,344.62,IEN,0))
"RTN","RCDPESP6",152,0)
 . S REC1=$G(^TMP("RCDPESP6",$J,344.62,IEN,1))
"RTN","RCDPESP6",153,0)
 . S HEAD=0
"RTN","RCDPESP6",154,0)
 . S HEAD("TXT")="CARC/RARK CODE: "_$$GET1^DIQ(344.62,IEN_",",.01,"E")
"RTN","RCDPESP6",155,0)
 . S REC0=$G(^TMP("RCDPESP6",$J,344.62,IEN,0))
"RTN","RCDPESP6",156,0)
 . ; CARC auto decrease
"RTN","RCDPESP6",157,0)
 . S XOLD=$P(REC0,"^",2)
"RTN","RCDPESP6",158,0)
 . S XNEW=$$GET1^DIQ(344.62,IEN_",",.02,"I")
"RTN","RCDPESP6",159,0)
 . I XOLD'=XNEW D  ;
"RTN","RCDPESP6",160,0)
 . . D LNOUT(.HEAD,.LINE,"CARC AUTO DECREASE",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",161,0)
 . ; CARC decrease amount
"RTN","RCDPESP6",162,0)
 . S XOLD=$P(REC0,"^",6)
"RTN","RCDPESP6",163,0)
 . S XNEW=$$GET1^DIQ(344.62,IEN_",",.06,"I")
"RTN","RCDPESP6",164,0)
 . I XOLD'=XNEW D  ;
"RTN","RCDPESP6",165,0)
 . . D LNOUT(.HEAD,.LINE,"CARC DECREASE AMOUNT",XOLD,XNEW,"$",.COUNT)
"RTN","RCDPESP6",166,0)
 . ;
"RTN","RCDPESP6",167,0)
 . ; CARC auto decrease no-pay
"RTN","RCDPESP6",168,0)
 . S XOLD=$P(REC1,"^",1)
"RTN","RCDPESP6",169,0)
 . S XNEW=$$GET1^DIQ(344.62,IEN_",",.08,"I")
"RTN","RCDPESP6",170,0)
 . I XOLD'=XNEW D  ;
"RTN","RCDPESP6",171,0)
 . . D LNOUT(.HEAD,.LINE,"CARC AUTO DECREASE NO-PAY",XOLD,XNEW,"B",.COUNT)
"RTN","RCDPESP6",172,0)
 . ; CARC decrease amount no pay
"RTN","RCDPESP6",173,0)
 . S XOLD=$P(REC1,"^",5)
"RTN","RCDPESP6",174,0)
 . S XNEW=$$GET1^DIQ(344.62,IEN_",",.12,"I")
"RTN","RCDPESP6",175,0)
 . I XOLD'=XNEW D  ;
"RTN","RCDPESP6",176,0)
 . . D LNOUT(.HEAD,.LINE,"CARC DECREASE AMOUNT NO-PAY",XOLD,XNEW,"$",.COUNT)
"RTN","RCDPESP6",177,0)
 ;
"RTN","RCDPESP6",178,0)
 Q COUNT
"RTN","RCDPESP6",179,0)
 ;
"RTN","RCDPESP6",180,0)
LNOUT(HEAD,LINE,TXT,XOLD,XNEW,TYPE,COUNT)   ; Format a line for the message
"RTN","RCDPESP6",181,0)
 ; Input: TXT - Description of the changed field
"RTN","RCDPESP6",182,0)
 ;        XOLD - Old Value (Internal format)
"RTN","RCDPESP6",183,0)
 ;        XNEW - New Value (Internal Format)
"RTN","RCDPESP6",184,0)
 ;        Type - "B" - Boolean 1-Yes, 0 - N
"RTN","RCDPESP6",185,0)
 ;               "$" - Dollar amount
"RTN","RCDPESP6",186,0)
 ;               "D" - Days
"RTN","RCDPESP6",187,0)
 ;               "T" - Text
"RTN","RCDPESP6",188,0)
 ; Output: COUNT passed by reference
"RTN","RCDPESP6",189,0)
 ;         HEAD passed by reference
"RTN","RCDPESP6",190,0)
 ;         LINE passed by reference
"RTN","RCDPESP6",191,0)
 ;               
"RTN","RCDPESP6",192,0)
 N RETURN,YNEW,YOLD
"RTN","RCDPESP6",193,0)
 ; Output header for this section if not already done 
"RTN","RCDPESP6",194,0)
 I 'HEAD D  ;
"RTN","RCDPESP6",195,0)
 . S COUNT=COUNT+1
"RTN","RCDPESP6",196,0)
 . S LINE(COUNT+HEAD("SIZE"))=HEAD("TXT")
"RTN","RCDPESP6",197,0)
 . S HEAD=1
"RTN","RCDPESP6",198,0)
 ;
"RTN","RCDPESP6",199,0)
 ; Output: Formatted line of text
"RTN","RCDPESP6",200,0)
 S YOLD=XOLD,YNEW=XNEW
"RTN","RCDPESP6",201,0)
 S COUNT=COUNT+1
"RTN","RCDPESP6",202,0)
 S LINE(COUNT+HEAD("SIZE"))=$E("   "_TXT_DOTS,1,50)
"RTN","RCDPESP6",203,0)
 I TYPE="B" D  ;
"RTN","RCDPESP6",204,0)
 . S YOLD=$S(XOLD:"YES",1:"NO")
"RTN","RCDPESP6",205,0)
 . S YNEW=$S(XNEW:"YES",1:"NO")
"RTN","RCDPESP6",206,0)
 I TYPE="$" D  ;
"RTN","RCDPESP6",207,0)
 . S YOLD=$FN(XOLD,",",2)
"RTN","RCDPESP6",208,0)
 . S YNEW=$FN(XNEW,",",2)
"RTN","RCDPESP6",209,0)
 S YOLD=$J(YOLD,10),YNEW=$J(YNEW,10)
"RTN","RCDPESP6",210,0)
 S LINE(COUNT+HEAD("SIZE"))=LINE(COUNT+HEAD("SIZE"))_YOLD_"  "_YNEW
"RTN","RCDPESP6",211,0)
 Q
"RTN","RCDPESP7")
0^49^B23355054
"RTN","RCDPESP7",1,0)
RCDPESP7 ;AITC/PJH - ePayment Lockbox Site Parameters Definition - auto-decrease ;Nov. 
"RTN","RCDPESP7",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPESP7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP7",4,0)
 ;
"RTN","RCDPESP7",5,0)
PAID() ; Paid claim auto-decrease parameters - EP from RCDPESP
"RTN","RCDPESP7",6,0)
 ; INPUT - None
"RTN","RCDPESP7",7,0)
 ; OUTPUT 0 = "OK"
"RTN","RCDPESP7",8,0)
 ;        1 = "ABORT"
"RTN","RCDPESP7",9,0)
 ;        2 = "SKIP"
"RTN","RCDPESP7",10,0)
 ;        
"RTN","RCDPESP7",11,0)
 N ADMC,DTOUT,DUOUT,FDAEDI,RCAUDVAL,RCQUIT,Y
"RTN","RCDPESP7",12,0)
 S ADMC=$$GET1^DIQ(344.61,"1,",.03,"I") ; get current value
"RTN","RCDPESP7",13,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(ADMC=""!(ADMC=1):"Yes",1:"No")
"RTN","RCDPESP7",14,0)
 S DIR("A")="ENABLE AUTO-DECREASE OF MEDICAL CLAIMS WITH PAYMENTS (Y/N):"
"RTN","RCDPESP7",15,0)
 S DIR("?")=$$GET1^DID(344.61,.03,,"HELP-PROMPT")
"RTN","RCDPESP7",16,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPESP7",17,0)
 ; if user changed value, update and audit
"RTN","RCDPESP7",18,0)
 S:ADMC'=Y FDAEDI(344.61,"1,",.03)=Y,RCAUDVAL(1)="344.61^.03^1^"_Y_U_ADMC
"RTN","RCDPESP7",19,0)
 I Y=0 D  Q 2  ; value set to No, update (if needed), go to Pharmacy params.
"RTN","RCDPESP7",20,0)
 . D:$D(FDAEDI) FILE^DIE(,"FDAEDI"),AUDIT^RCDPESP(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP7",21,0)
 ;
"RTN","RCDPESP7",22,0)
 ; Set auto-decrease maximum amount
"RTN","RCDPESP7",23,0)
 N ADAMT,ADNAMT,RCOK ; ^DD(344.61,.05,0) = MED AMT DEFAULT AUTO-DECREASE
"RTN","RCDPESP7",24,0)
ADAMT ; BEGIN - PRCA*4.5*326
"RTN","RCDPESP7",25,0)
 S ADAMT=$$GET1^DIQ(344.61,"1,",.05)
"RTN","RCDPESP7",26,0)
 K DIR S DIR("B")=ADAMT
"RTN","RCDPESP7",27,0)
 S DIR("?")=$$GET1^DID(344.61,.05,,"HELP-PROMPT")
"RTN","RCDPESP7",28,0)
 S DIR(0)="NA^0:99999:0",DIR("A")=$$GET1^DID(344.61,.05,,"TITLE")
"RTN","RCDPESP7",29,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPESP7",30,0)
 S:ADAMT'=Y FDAEDI(344.61,"1,",.05)=Y,RCAUDVAL(2)="344.61^.05^1^"_Y_U_ADAMT
"RTN","RCDPESP7",31,0)
 S ADNAMT=Y
"RTN","RCDPESP7",32,0)
 ;
"RTN","RCDPESP7",33,0)
 ; Check if any CARCs need reset and give choice to proceed
"RTN","RCDPESP7",34,0)
 S RCOK=$$CARCDSP^RCDPESP5(ADNAMT)
"RTN","RCDPESP7",35,0)
 ; Finish if user exit selected
"RTN","RCDPESP7",36,0)
 Q:RCOK="QUIT" 1
"RTN","RCDPESP7",37,0)
 ; If user chooses to not reset then go back to re-enter maximum
"RTN","RCDPESP7",38,0)
 I RCOK=0 K FDAEDI(344.61,"1,",.05),RCAUDVAL(2) G ADAMT
"RTN","RCDPESP7",39,0)
 ; END - PRCA*4.5*326
"RTN","RCDPESP7",40,0)
 ;
"RTN","RCDPESP7",41,0)
 ; file changes to medical auto-decrease parameters
"RTN","RCDPESP7",42,0)
 D:$D(FDAEDI) FILE^DIE(,"FDAEDI")
"RTN","RCDPESP7",43,0)
 D:$D(RCAUDVAL) AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP7",44,0)
 K FDAEDI,RCAUDVAL
"RTN","RCDPESP7",45,0)
 ;
"RTN","RCDPESP7",46,0)
 ; If auto-decrease (medical for now) on, ask about CARC/RARC auto-decrease setup
"RTN","RCDPESP7",47,0)
 W !
"RTN","RCDPESP7",48,0)
 S RCQUIT=0
"RTN","RCDPESP7",49,0)
 D CARC^RCDPESP5(.RCQUIT,1) ; pass RCQUIT by reference - PRCA*4.5*321
"RTN","RCDPESP7",50,0)
 W !
"RTN","RCDPESP7",51,0)
 ; If no active CARCs Turn medical auto-decrease off, Then go to Pharacy params
"RTN","RCDPESP7",52,0)
 I ($$COUNT^RCDPESP(1)=0)&($$GET1^DIQ(344.61,"1,",.03,"I")=1) D  Q 2
"RTN","RCDPESP7",53,0)
 . K FDAEDI,RCAUDVAL
"RTN","RCDPESP7",54,0)
 . S ADMC=$$GET1^DIQ(344.61,"1,",.03,"I")
"RTN","RCDPESP7",55,0)
 . S FDAEDI(344.61,"1,",.03)=0,RCAUDVAL(1)="344.61^.03^1^"_0_U_ADMC_U_"SYSTEM disabled Medical Auto-decrease, there are NO active CARCs"
"RTN","RCDPESP7",56,0)
 . D FILE^DIE(,"FDAEDI"),AUDIT^RCDPESP(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP7",57,0)
 . W !,"*** System has DISABLED Medical Auto-decrease, there are NO active CARCs.",!
"RTN","RCDPESP7",58,0)
 . D PAUSE^RCDPESP
"RTN","RCDPESP7",59,0)
 Q:RCQUIT 1
"RTN","RCDPESP7",60,0)
 ;
"RTN","RCDPESP7",61,0)
 ; Set number of days to wait before auto-decrease amount
"RTN","RCDPESP7",62,0)
 N ADMT ; ^DD(344.61,.04,0) = AUTO-DECREASE MED DAYS DEFAULT
"RTN","RCDPESP7",63,0)
 S ADMT=$$GET1^DIQ(344.61,"1,",.04)
"RTN","RCDPESP7",64,0)
 K DIR S:ADMT]"" DIR("B")=ADMT
"RTN","RCDPESP7",65,0)
 S DIR("?")=$$GET1^DID(344.61,.04,,"HELP-PROMPT")
"RTN","RCDPESP7",66,0)
 S DIR(0)="NA^0:7:0",DIR("A")=$$GET1^DID(344.61,.04,,"TITLE")
"RTN","RCDPESP7",67,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPESP7",68,0)
 S:ADMT'=Y FDAEDI(344.61,"1,",.04)=Y,RCAUDVAL(1)="344.61^.04^1^"_Y_U_ADMT
"RTN","RCDPESP7",69,0)
 ; ;
"RTN","RCDPESP7",70,0)
 ; file changes to medical auto-decrease parameters
"RTN","RCDPESP7",71,0)
 D:$D(FDAEDI) FILE^DIE(,"FDAEDI")
"RTN","RCDPESP7",72,0)
 D:$D(RCAUDVAL) AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP7",73,0)
 K RCAUDVAL
"RTN","RCDPESP7",74,0)
 Q 0
"RTN","RCDPESP7",75,0)
 ;
"RTN","RCDPESP7",76,0)
NOPAY() ; No-payment claim auto-decrease parameters - EP from RCDPESP
"RTN","RCDPESP7",77,0)
 ; INPUT - None
"RTN","RCDPESP7",78,0)
 ; OUTPUT 0 = "OK"
"RTN","RCDPESP7",79,0)
 ;        1 = "ABORT"
"RTN","RCDPESP7",80,0)
 ;
"RTN","RCDPESP7",81,0)
 ; If auto-decrease of paid claims is off skip auto-decrease no-pay parameters
"RTN","RCDPESP7",82,0)
 Q:'$$GET1^DIQ(344.61,"1,",.03,"I") 0
"RTN","RCDPESP7",83,0)
 ;
"RTN","RCDPESP7",84,0)
 N ADMC,DTOUT,DUOUT,FDAEDI,RCAUDVAL,RCQUIT,Y
"RTN","RCDPESP7",85,0)
 S ADMC=$$GET1^DIQ(344.61,"1,",.11,"I") ; get current value
"RTN","RCDPESP7",86,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(ADMC=""!(ADMC=1):"Yes",1:"No")
"RTN","RCDPESP7",87,0)
 S DIR("A")="ENABLE AUTO-DECREASE OF MEDICAL CLAIMS WITH NO PAYMENTS (Y/N):"
"RTN","RCDPESP7",88,0)
 S DIR("?")=$$GET1^DID(344.61,.11,,"HELP-PROMPT")
"RTN","RCDPESP7",89,0)
 W !
"RTN","RCDPESP7",90,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPESP7",91,0)
 ; if user changed value, update and audit
"RTN","RCDPESP7",92,0)
 S:ADMC'=Y FDAEDI(344.61,"1,",.11)=Y,RCAUDVAL(1)="344.61^.11^1^"_Y_U_ADMC
"RTN","RCDPESP7",93,0)
 I Y=0 D  Q "SKIP"  ; value set to No, update (if needed), go to Pharmacy params.
"RTN","RCDPESP7",94,0)
 . D:$D(FDAEDI) FILE^DIE(,"FDAEDI"),AUDIT^RCDPESP(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP7",95,0)
 ;
"RTN","RCDPESP7",96,0)
 ; If no-pay auto-decrease on, ask about CARC/RARC auto-decrease setup
"RTN","RCDPESP7",97,0)
 W !
"RTN","RCDPESP7",98,0)
 S RCQUIT=0
"RTN","RCDPESP7",99,0)
 D CARC^RCDPESP5(.RCQUIT,0) ; pass RCQUIT by reference - PRCA*4.5*321
"RTN","RCDPESP7",100,0)
 W !
"RTN","RCDPESP7",101,0)
 ; If no active CARCs Turn medical no-pay auto-decrease off, Then go to Pharacy params
"RTN","RCDPESP7",102,0)
 I ($$COUNT^RCDPESP(1)=0)&($$GET1^DIQ(344.61,"1,",.11,"I")=1) D  Q 1
"RTN","RCDPESP7",103,0)
 . K FDAEDI,RCAUDVAL
"RTN","RCDPESP7",104,0)
 . S ADMC=$$GET1^DIQ(344.61,"1,",.11,"I")
"RTN","RCDPESP7",105,0)
 . S FDAEDI(344.61,"1,",.03)=0,RCAUDVAL(1)="344.61^.11^1^"_0_U_ADMC_U_"SYSTEM disabled Medical Auto-decrease, there are NO active CARCs"
"RTN","RCDPESP7",106,0)
 . D FILE^DIE(,"FDAEDI"),AUDIT^RCDPESP(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP7",107,0)
 . W !,"*** System has DISABLED Medical No-Pay Auto-decrease, there are NO active CARCs.",!
"RTN","RCDPESP7",108,0)
 . D PAUSE^RCDPESP
"RTN","RCDPESP7",109,0)
 Q:RCQUIT 1
"RTN","RCDPESP7",110,0)
 ;
"RTN","RCDPESP7",111,0)
 ; Set number of days to wait before no-pay auto-decrease amount
"RTN","RCDPESP7",112,0)
 N ADMT ; ^DD(344.61,.12,0) = AUTO-DECREASE MED DAYS DEFAULT (ZERO)
"RTN","RCDPESP7",113,0)
 S ADMT=$$GET1^DIQ(344.61,"1,",.12)
"RTN","RCDPESP7",114,0)
 K DIR S:ADMT]"" DIR("B")=ADMT
"RTN","RCDPESP7",115,0)
 S DIR("?")=$$GET1^DID(344.61,.12,,"HELP-PROMPT")
"RTN","RCDPESP7",116,0)
 S DIR(0)="NA^0:45:0",DIR("A")=$$GET1^DID(344.61,.12,,"TITLE")
"RTN","RCDPESP7",117,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPESP7",118,0)
 S:ADMT'=Y FDAEDI(344.61,"1,",.12)=Y,RCAUDVAL(2)="344.61^.12^1^"_Y_U_ADMT
"RTN","RCDPESP7",119,0)
 ; ;
"RTN","RCDPESP7",120,0)
 ; file changes to medical no-pay auto-decrease parameters
"RTN","RCDPESP7",121,0)
 D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP7",122,0)
 D:$D(RCAUDVAL) AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP7",123,0)
 K RCAUDVAL
"RTN","RCDPESP7",124,0)
 Q 0
"RTN","RCDPESP7",125,0)
 ;
"RTN","RCDPEU1")
0^73^B118506999
"RTN","RCDPEU1",1,0)
RCDPEU1 ;AITC/CJE - ELECTRONIC PAYER UTILITIES ;05-NOV-02
"RTN","RCDPEU1",2,0)
 ;;4.5;Accounts Receivable;**326**;Mar 20, 1995;Build 26
"RTN","RCDPEU1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEU1",4,0)
 Q
"RTN","RCDPEU1",5,0)
SELPAY(PARAM) ; EP
"RTN","RCDPEU1",6,0)
 ; New all purpose payer selection subroutine. Based off file 344.6
"RTN","RCDPEU1",7,0)
 ; Including options to include only given payer types (Medical/Pharmacy/Tricare/All)
"RTN","RCDPEU1",8,0)
 ; and to filter selection to include only payers that have entries in file 344.4 or 344.31
"RTN","RCDPEU1",9,0)
 ; This subroutine may be used to replace all previous payer seletion prompts. 
"RTN","RCDPEU1",10,0)
 ; Input - PARAM array of parameters passed by reference
"RTN","RCDPEU1",11,0)
 ;         PARAM("TYPE") - Types of payers to include in the selection (optional defaults to A)
"RTN","RCDPEU1",12,0)
 ;                          P - Pharmacy, T - Tricare, M - Medical (neither P nor T), A - All 
"RTN","RCDPEU1",13,0)
 ;         PARAM("FILE") - Only include payers that have entries on the ERA or EFT file (optional)
"RTN","RCDPEU1",14,0)
 ;                          344.4 -  ERA, 344.31 - EFT
"RTN","RCDPEU1",15,0)
 ;         PARAM("SRCH") - Search by payer name or TIN (optional defaults to N)
"RTN","RCDPEU1",16,0)
 ;                          N - Payer Name, T - TIN 
"RTN","RCDPEU1",17,0)
 ;         PARAM("SELC") - Seclect individual payers, or range of payers (optional defaults to S)
"RTN","RCDPEU1",18,0)
 ;                          S - Selected payers, R - Range of payers
"RTN","RCDPEU1",19,0)
 ;         PARAM("DICA") - Text that will be used to prompt the user (optional)
"RTN","RCDPEU1",20,0)
 ;                         defaults to "Select payer "_$S(PARAM("SRCH")="N":"name",1:"TIN")
"RTN","RCDPEU1",21,0)
 ;
"RTN","RCDPEU1",22,0)
 ; Output - ^TMP("RCDPEU1",$J,PAYERIEN)=""
"RTN","RCDPEU1",23,0)
 ;          ^TMP("RCDPEU1",$J,"N",NAME,PAYERIEN)=""
"RTN","RCDPEU1",24,0)
 ;          ^TMP("RCDPEU1",$J,"T",TIN,PAYERIEN)=""
"RTN","RCDPEU1",25,0)
 ;          Where:
"RTN","RCDPEU1",26,0)
 ;                 PAYERIEN = Internal entry number of the payer from file 344.6
"RTN","RCDPEU1",27,0)
 ;                 NAME     = Payer name, TIN = Payer TIN
"RTN","RCDPEU1",28,0)
 ;                 FLAG     = Pharmacy or Tricare or Medical flag based on Pharmacy and Tricare flags from file 344.6
"RTN","RCDPEU1",29,0)
 ;                            T - has tricare flag, P - has pharmacy flag, M - has neither T or P flag.
"RTN","RCDPEU1",30,0)
 ; 
"RTN","RCDPEU1",31,0)
 ; Returns - 1 - Success, -1 - Abort
"RTN","RCDPEU1",32,0)
 ;
"RTN","RCDPEU1",33,0)
 N RCA,RET,RETURN,QUIT
"RTN","RCDPEU1",34,0)
 ;
"RTN","RCDPEU1",35,0)
 D INIT
"RTN","RCDPEU1",36,0)
 S RETURN=1
"RTN","RCDPEU1",37,0)
 ;
"RTN","RCDPEU1",38,0)
 S QUIT=0
"RTN","RCDPEU1",39,0)
 I PARAM("SELC")="R" D  ;
"RTN","RCDPEU1",40,0)
 . S RCA="Select START range for payer names: "
"RTN","RCDPEU1",41,0)
 . F  S RET=$$PROMPT(.PARAM,RCA) Q:(RET'=0)  D RMESS
"RTN","RCDPEU1",42,0)
 . I RET=-1 S RETURN=-1 Q
"RTN","RCDPEU1",43,0)
 . S RCA="Select END range for payer names: "
"RTN","RCDPEU1",44,0)
 . F  S RET=$$PROMPT(.PARAM,RCA) Q:(RET'=0)  D RMESS
"RTN","RCDPEU1",45,0)
 . I RET=-1 S RETURN=-1 Q
"RTN","RCDPEU1",46,0)
 . D EXPAND
"RTN","RCDPEU1",47,0)
 ;
"RTN","RCDPEU1",48,0)
 I PARAM("SELC")="S" D  ;
"RTN","RCDPEU1",49,0)
 . S QUIT=0
"RTN","RCDPEU1",50,0)
 . F  D  Q:QUIT  ;
"RTN","RCDPEU1",51,0)
 . . S RET=$$PROMPT(.PARAM,PARAM("DICA"))
"RTN","RCDPEU1",52,0)
 . . I RET=-1 S RETURN=-1,QUIT=1 Q
"RTN","RCDPEU1",53,0)
 . . I RET=0 D  ;
"RTN","RCDPEU1",54,0)
 . . . I $D(^TMP("RCDPEU1",$J)) S QUIT=1
"RTN","RCDPEU1",55,0)
 . . . E  D RMESS
"RTN","RCDPEU1",56,0)
 ;
"RTN","RCDPEU1",57,0)
 I RETURN=-1 D CLEAN Q -1
"RTN","RCDPEU1",58,0)
 S RETURN=$S($D(^TMP("RCDPEU1",$J)):1,1:-1)
"RTN","RCDPEU1",59,0)
 Q RETURN
"RTN","RCDPEU1",60,0)
 ;
"RTN","RCDPEU1",61,0)
PROMPT(PARAM,RCA) ; Prompt for a payer from file 344.6 with various filter options
"RTN","RCDPEU1",62,0)
 ; Input: PARAM - array of parameters defined in subroutine SELPAY above
"RTN","RCDPEU1",63,0)
 ; Output: ^TMP("RCDPEU1",$J) as defined in subroutine SELPAY above
"RTN","RCDPEU1",64,0)
 ; Returns:  1 - Payer selected
"RTN","RCDPEU1",65,0)
 ;           0 - No payer selected
"RTN","RCDPEU1",66,0)
 ;          -1 - user typed '^' or timed out
"RTN","RCDPEU1",67,0)
 ;
"RTN","RCDPEU1",68,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,RETURN,X,Y
"RTN","RCDPEU1",69,0)
 S RETURN=1
"RTN","RCDPEU1",70,0)
 ;
"RTN","RCDPEU1",71,0)
 I PARAM("SRCH")="N" D  ; Select payers by name
"RTN","RCDPEU1",72,0)
 . S DIC=344.6
"RTN","RCDPEU1",73,0)
 . S DIC(0)="QEA"
"RTN","RCDPEU1",74,0)
 . S DIC("A")=RCA
"RTN","RCDPEU1",75,0)
 . S DIC("S")="I $$CHKPAY^RCDPEU1(Y,"""_PARAM("TYPE")_""","""_PARAM("FILE")_""")"
"RTN","RCDPEU1",76,0)
 . I PARAM("SELC")="R",$D(^TMP("RCDPEU1",$J)) D       ; Choosing second name of a range
"RTN","RCDPEU1",77,0)
 . . S DIC("S")=DIC("S")_",$$CHKRNG^RCDPEU1(Y)"  ; only offer payer names that follow start range 
"RTN","RCDPEU1",78,0)
 . D ^DIC
"RTN","RCDPEU1",79,0)
 . I $D(DTOUT)!$D(DUOUT) S RETURN=-1 Q
"RTN","RCDPEU1",80,0)
 . I Y=-1 S RETURN=0 Q
"RTN","RCDPEU1",81,0)
 . D ADDPAY(+Y)
"RTN","RCDPEU1",82,0)
 ;
"RTN","RCDPEU1",83,0)
 I PARAM("SRCH")="T" D  ; Select payers by TIN
"RTN","RCDPEU1",84,0)
 . N RET
"RTN","RCDPEU1",85,0)
 . S DIR("A")="Select Insurance Company TIN"
"RTN","RCDPEU1",86,0)
 . S DIR(0)="FO^1:30"
"RTN","RCDPEU1",87,0)
 . S DIR("?")="Enter the TIN of the payer or '??' to list payers"
"RTN","RCDPEU1",88,0)
 . S DIR("??")="^D TLIST^RCDPEU1"
"RTN","RCDPEU1",89,0)
 . D ^DIR
"RTN","RCDPEU1",90,0)
 . I $D(DTOUT)!$D(DUOUT) S RETURN=-1 Q
"RTN","RCDPEU1",91,0)
 . I Y="" S RETURN=0 Q
"RTN","RCDPEU1",92,0)
 . S RET=$$SRCHTIN(Y,.PARAM)
"RTN","RCDPEU1",93,0)
 . I RET=-1 S RETURN=-1 Q
"RTN","RCDPEU1",94,0)
 . I RET'="" D ADDTIN(RET)
"RTN","RCDPEU1",95,0)
 Q RETURN
"RTN","RCDPEU1",96,0)
 ;
"RTN","RCDPEU1",97,0)
EXPAND ; Expand range of payer names given start and end points.
"RTN","RCDPEU1",98,0)
 ; Input: Start and end points of the range in the global ^TMP("RCDPEU1",$J) documented in SELPAY above.
"RTN","RCDPEU1",99,0)
 ; Output: More enntries in ^TMP("RCDPEU1",$J), one for each matching payer in the range.
"RTN","RCDPEU1",100,0)
 N K1,NAME
"RTN","RCDPEU1",101,0)
 S NAME(1)=$O(^TMP("RCDPEU1",$J,"N",""))
"RTN","RCDPEU1",102,0)
 S NAME(2)=$O(^TMP("RCDPEU1",$J,"N",""),-1) ; Note if user picks same name as start and end range 1=2
"RTN","RCDPEU1",103,0)
 ;
"RTN","RCDPEU1",104,0)
 D EXPANDX(NAME(1))
"RTN","RCDPEU1",105,0)
 ;
"RTN","RCDPEU1",106,0)
 S K1=NAME(1)
"RTN","RCDPEU1",107,0)
 F  S K1=$O(^RCY(344.6,"B",K1)) Q:K1=""!(K1]NAME(2))  D EXPANDX(K1)
"RTN","RCDPEU1",108,0)
 Q
"RTN","RCDPEU1",109,0)
EXPANDX(NAME) ; Add all payers with the same name into the list
"RTN","RCDPEU1",110,0)
 ; Input: NAME - Payer Name
"RTN","RCDPEU1",111,0)
 ;        PARAM - Input parameters
"RTN","RCDPEU1",112,0)
 ; Output: ^TMP("RCDPEU1",$J)
"RTN","RCDPEU1",113,0)
 N PAYIEN
"RTN","RCDPEU1",114,0)
 S PAYIEN=""
"RTN","RCDPEU1",115,0)
 F  S PAYIEN=$O(^RCY(344.6,"B",NAME,PAYIEN)) Q:PAYIEN=""  D  ;
"RTN","RCDPEU1",116,0)
 . I $$CHKPAY(PAYIEN,PARAM("TYPE"),PARAM("FILE")) D ADDPAY(PAYIEN)
"RTN","RCDPEU1",117,0)
 Q
"RTN","RCDPEU1",118,0)
 ;
"RTN","RCDPEU1",119,0)
ADDPAY(PAYIEN) ; Add payer to the output array.
"RTN","RCDPEU1",120,0)
 ; Input - PAYIEN = Internal entry number from file #344.6
"RTN","RCDPEU1",121,0)
 ; Output - New entries in ^TMP("RCDPEU1",$J
"RTN","RCDPEU1",122,0)
 N NAME,TIN
"RTN","RCDPEU1",123,0)
 S ^TMP("RCDPEU1",$J,PAYIEN)=""
"RTN","RCDPEU1",124,0)
 S NAME=$$GET1^DIQ(344.6,PAYIEN_",",.01,"E")
"RTN","RCDPEU1",125,0)
 S TIN=$$GET1^DIQ(344.6,PAYIEN_",",.02,"E")
"RTN","RCDPEU1",126,0)
 S ^TMP("RCDPEU1",$J,"N",NAME,TIN,PAYIEN)=""
"RTN","RCDPEU1",127,0)
 S ^TMP("RCDPEU1",$J,"T",TIN,NAME,PAYIEN)=""
"RTN","RCDPEU1",128,0)
 Q
"RTN","RCDPEU1",129,0)
ADDTIN(TIN) ; Add all payers with TIN to the output array
"RTN","RCDPEU1",130,0)
 ; Input - Payer Identifer string (TIN) matching one or more entries in file #344.6 
"RTN","RCDPEU1",131,0)
 N PAYIEN
"RTN","RCDPEU1",132,0)
 S PAYIEN=""
"RTN","RCDPEU1",133,0)
 F  S PAYIEN=$O(^RCY(344.6,"C",TIN,PAYIEN)) Q:'PAYIEN  D  ;
"RTN","RCDPEU1",134,0)
 . D ADDPAY(PAYIEN)
"RTN","RCDPEU1",135,0)
 Q
"RTN","RCDPEU1",136,0)
SRCHTIN(RCX,PARAM) ; Given user input narrow down the TIN that the user wants
"RTN","RCDPEU1",137,0)
 ; Input: RCX - User input to use in TIN lookup.
"RTN","RCDPEU1",138,0)
 ;        PARAM - array of input parameters (see subroutine SELPAY for detailed description)
"RTN","RCDPEU1",139,0)
 N CNT,COUNT,DIR,DTOUT,DUOUT,K1,K2,K3,LIST,QUIT,RETURN,SPACE,SX,X,Y
"RTN","RCDPEU1",140,0)
 I $D(^RCY(344.6,"C",RCX_" ")) D CHKTIN(RCX_" ",.PARAM,.LIST)
"RTN","RCDPEU1",141,0)
 S K1=RCX_" "
"RTN","RCDPEU1",142,0)
 F  S K1=$O(^RCY(344.6,"C",K1)) Q:K1=""!($E(K1,1,$L(RCX))'=RCX)  D  ;
"RTN","RCDPEU1",143,0)
 . D CHKTIN(K1,.PARAM,.LIST)
"RTN","RCDPEU1",144,0)
 ;
"RTN","RCDPEU1",145,0)
 I '$D(LIST) D  Q 0
"RTN","RCDPEU1",146,0)
 . W !,"No matching TIN found",!
"RTN","RCDPEU1",147,0)
 ;
"RTN","RCDPEU1",148,0)
 S COUNT=0,K1=""
"RTN","RCDPEU1",149,0)
 F  S K1=$O(LIST("T",K1)) Q:K1=""  D  ; 
"RTN","RCDPEU1",150,0)
 . S COUNT=COUNT+1
"RTN","RCDPEU1",151,0)
 . S LIST(COUNT)=K1
"RTN","RCDPEU1",152,0)
 ; Show results and let user pick a TIN by sequence number or TIN
"RTN","RCDPEU1",153,0)
 S (COUNT,K1,K2,K3,RETURN)="",(CNT,QUIT,SX)=0
"RTN","RCDPEU1",154,0)
 F  S COUNT=$O(LIST(COUNT)) Q:'COUNT  D  I QUIT Q
"RTN","RCDPEU1",155,0)
 . S CNT=CNT+1
"RTN","RCDPEU1",156,0)
 . W !,$J(COUNT_".",4)_"  " S SPACE=0
"RTN","RCDPEU1",157,0)
 . S K1=LIST(COUNT)
"RTN","RCDPEU1",158,0)
 . F  S K2=$O(LIST("T",K1,K2)) Q:K2=""  D  I QUIT Q
"RTN","RCDPEU1",159,0)
 . . I SPACE W !,"      "
"RTN","RCDPEU1",160,0)
 . . W $E(K1_$J("",31),1,30)
"RTN","RCDPEU1",161,0)
 . . W $E(K2,1,42)
"RTN","RCDPEU1",162,0)
 . . I 'SPACE S SPACE=1
"RTN","RCDPEU1",163,0)
 S DIR(0)="NO^1:"_CNT_":0"
"RTN","RCDPEU1",164,0)
 D ^DIR
"RTN","RCDPEU1",165,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPEU1",166,0)
 I Y S RETURN=LIST(Y)
"RTN","RCDPEU1",167,0)
 Q RETURN
"RTN","RCDPEU1",168,0)
 ;
"RTN","RCDPEU1",169,0)
CHKPAY(PAYIEN,TYPE,FILE) ; Check if payer meets the filter requirements
"RTN","RCDPEU1",170,0)
 ; Input:  PAYIEN - Internal entry number of the payer from file 344.6
"RTN","RCDPEU1",171,0)
 ;         TYPE   - M - Medical, P - Pharmacy, T- Tricare, A - All
"RTN","RCDPEU1",172,0)
 ;         FILE   - 344.4 - ERA, 344.31 EFT - Payer must have entries in the given file
"RTN","RCDPEU1",173,0)
 ; Return: 1 - Payer matches the filter criteria, otherwise 0.
"RTN","RCDPEU1",174,0)
 ;
"RTN","RCDPEU1",175,0)
 N NAME,FLAG,RETURN,TIN
"RTN","RCDPEU1",176,0)
 I TYPE="A",FILE="" Q 1
"RTN","RCDPEU1",177,0)
 ;
"RTN","RCDPEU1",178,0)
 S RETURN=1
"RTN","RCDPEU1",179,0)
 I TYPE'="A" D  I 'RETURN Q 0
"RTN","RCDPEU1",180,0)
 . S RETURN=$$CHKTYPE(PAYIEN,TYPE)
"RTN","RCDPEU1",181,0)
 ;
"RTN","RCDPEU1",182,0)
 I FILE D  I 'RETURN Q 0
"RTN","RCDPEU1",183,0)
 . S NAME=$$GET1^DIQ(344.6,PAYIEN_",",.01,"I")
"RTN","RCDPEU1",184,0)
 . S TIN=$$GET1^DIQ(344.6,PAYIEN_",",.02,"I")
"RTN","RCDPEU1",185,0)
 . I '$D(^RCY(FILE,"APT",NAME,TIN)) S RETURN=0
"RTN","RCDPEU1",186,0)
 Q 1
"RTN","RCDPEU1",187,0)
CHKRNG(PAYIEN) ; Check if second picked payer name follows the first
"RTN","RCDPEU1",188,0)
 ; Input: PAYIEN = Internal entry number of payer from file #344.6
"RTN","RCDPEU1",189,0)
 ;        ^TMP("RCDPEU1",$J global array contains previously picked payer
"RTN","RCDPEU1",190,0)
 ; Return: 1 - if PAYIEN's name follows that of payer in ^TMP, otherwise 0
"RTN","RCDPEU1",191,0)
 ;
"RTN","RCDPEU1",192,0)
 N NAME,RETURN
"RTN","RCDPEU1",193,0)
 S RETURN=0
"RTN","RCDPEU1",194,0)
 S NAME(1)=$O(^TMP("RCDPEU1",$J,"N",""))
"RTN","RCDPEU1",195,0)
 S NAME(2)=$$GET1^DIQ(344.6,PAYIEN_",",.01,"E")
"RTN","RCDPEU1",196,0)
 I NAME(2)]NAME(1)!(NAME(2)=NAME(1)) S RETURN=1
"RTN","RCDPEU1",197,0)
 Q RETURN
"RTN","RCDPEU1",198,0)
 ;
"RTN","RCDPEU1",199,0)
CHKTIN(TIN,PARAM,OUT) ; Given a TIN check filter criteria and add passing entries to the OUT array
"RTN","RCDPEU1",200,0)
 ; Input: TIN = Payer Identifier string that matches one or more payers in file #344.6
"RTN","RCDPEU1",201,0)
 ;        PARAM = Input parameter array. See subroutine SELPAY for detailed documentation
"RTN","RCDPEU1",202,0)
 ; Output: OUT (passed by reference) array of payers matching filter parameters. Sorted by TIN then NAME
"RTN","RCDPEU1",203,0)
 N PAYIEN
"RTN","RCDPEU1",204,0)
 S PAYIEN=""
"RTN","RCDPEU1",205,0)
 F  S PAYIEN=$O(^RCY(344.6,"C",TIN,PAYIEN)) Q:PAYIEN=""  D  ;
"RTN","RCDPEU1",206,0)
 . I $$CHKPAY(PAYIEN,PARAM("TYPE"),PARAM("FILE")) D  ;
"RTN","RCDPEU1",207,0)
 . . N PNAME
"RTN","RCDPEU1",208,0)
 . . S PNAME=$$GET1^DIQ(344.6,PAYIEN_",",.01,"E")
"RTN","RCDPEU1",209,0)
 . . I PNAME="" Q
"RTN","RCDPEU1",210,0)
 . . S OUT("T",TIN,PNAME,PAYIEN)=""
"RTN","RCDPEU1",211,0)
 Q
"RTN","RCDPEU1",212,0)
TLIST ; List TINS for user help.  Only TINS matching filter criteria are displayed.
"RTN","RCDPEU1",213,0)
 N COUNT,PAYIEN,QUIT,TIN
"RTN","RCDPEU1",214,0)
 S (QUIT,COUNT)=0
"RTN","RCDPEU1",215,0)
 S TIN=""
"RTN","RCDPEU1",216,0)
 F  S TIN=$O(^RCY(344.6,"C",TIN)) Q:TIN=""  D  I QUIT Q
"RTN","RCDPEU1",217,0)
 . S PAYIEN=""
"RTN","RCDPEU1",218,0)
 . F  S PAYIEN=$O(^RCY(344.6,"C",TIN,PAYIEN)) Q:PAYIEN=""  D  I QUIT Q
"RTN","RCDPEU1",219,0)
 . . I '$$CHKPAY(PAYIEN,$G(PARAM("TYPE"),"A"),$G(PARAM("FILE"))) Q
"RTN","RCDPEU1",220,0)
 . . S COUNT=COUNT+1
"RTN","RCDPEU1",221,0)
 . . I COUNT>21 S COUNT=1 I '$$GOON^VALM1() S QUIT=1 Q
"RTN","RCDPEU1",222,0)
 . . W !,$E(TIN_$J("",30),1,30)_" "_$E($$GET1^DIQ(344.6,PAYIEN_",",.01,"E"),1,39)
"RTN","RCDPEU1",223,0)
 Q
"RTN","RCDPEU1",224,0)
INIT ; Initialize parameters and return array
"RTN","RCDPEU1",225,0)
 ; Input - PARAM array see comments for SELPAY above
"RTN","RCDPEU1",226,0)
 ;
"RTN","RCDPEU1",227,0)
 S PARAM("TYPE")=$G(PARAM("TYPE"),"A")
"RTN","RCDPEU1",228,0)
 S PARAM("FILE")=$G(PARAM("FILE"))
"RTN","RCDPEU1",229,0)
 S PARAM("SRCH")=$G(PARAM("SRCH"),"N")
"RTN","RCDPEU1",230,0)
 S PARAM("SELC")=$G(PARAM("SELC"),"S")
"RTN","RCDPEU1",231,0)
 S PARAM("DICA")=$G(PARAM("DICA"),"Select payer "_$S(PARAM("SRCH")="N":"name",1:"TIN")_": ")
"RTN","RCDPEU1",232,0)
 ;
"RTN","RCDPEU1",233,0)
 K ^TMP("RCDPEU1",$J)
"RTN","RCDPEU1",234,0)
 Q
"RTN","RCDPEU1",235,0)
CLEAN ; Clean up output array if user aborts
"RTN","RCDPEU1",236,0)
 K ^TMP("RCDPEU1",$J)
"RTN","RCDPEU1",237,0)
 Q
"RTN","RCDPEU1",238,0)
RTYPE(DEF) ;EP
"RTN","RCDPEU1",239,0)
 ; Input:   DEF     - Value to use a default
"RTN","RCDPEU1",240,0)
 ; Returns: -1      - User ^ or timed out
"RTN","RCDPEU1",241,0)
 ;           A      - User selected ALL
"RTN","RCDPEU1",242,0)
 ;           M      - User selected MEDICAL
"RTN","RCDPEU1",243,0)
 ;           P      - User selected PHARMACY
"RTN","RCDPEU1",244,0)
 ;           B      - User selected BOTH
"RTN","RCDPEU1",245,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT,RCTYPE,RETURN
"RTN","RCDPEU1",246,0)
 S RCTYPE=""
"RTN","RCDPEU1",247,0)
 S DIR("?")="Enter the type of payer to include"
"RTN","RCDPEU1",248,0)
 S DIR(0)="SA^M:MEDICAL;P:PHARMACY;T:TRICARE;A:ALL"
"RTN","RCDPEU1",249,0)
 S DIR("A")="(M)EDICAL, (P)HARMACY, (T)RICARE or (A)LL: "
"RTN","RCDPEU1",250,0)
 S DIR("B")=$S($G(DEF)'="":DEF,1:"ALL")
"RTN","RCDPEU1",251,0)
 D ^DIR
"RTN","RCDPEU1",252,0)
 K DIR
"RTN","RCDPEU1",253,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPEU1",254,0)
 Q:Y="" "A"
"RTN","RCDPEU1",255,0)
 S RETURN=$E(Y)
"RTN","RCDPEU1",256,0)
 ; If Pharmacy or Tricare chosen, check if payer exist and if not give warning
"RTN","RCDPEU1",257,0)
 I (RETURN="P"&('$D(^RCY(344.6,"ARX",1)))) D WARN("pharmacy")
"RTN","RCDPEU1",258,0)
 I (RETURN="T"&('$D(^RCY(344.6,"ATR",1)))) D WARN("tricare")
"RTN","RCDPEU1",259,0)
 Q RETURN
"RTN","RCDPEU1",260,0)
 ;
"RTN","RCDPEU1",261,0)
PAYTYPE(NAME,TIN,TYPE) ; EP
"RTN","RCDPEU1",262,0)
 ; Is a payer Medical, Pharmacy or Tricare based on flags in the payer exclusion file.
"RTN","RCDPEU1",263,0)
 ; Inputs: NAME - The free text name of the payer
"RTN","RCDPEU1",264,0)
 ;         TIN  - The ID if the payer
"RTN","RCDPEU1",265,0)
 ;         TYPE - M : Medical, P : Pharmacy, T: Tricare
"RTN","RCDPEU1",266,0)
 ; Returns : 1 - Yes, payer matches type, 0 - No, payer does not match type
"RTN","RCDPEU1",267,0)
 N IEN,FLAG
"RTN","RCDPEU1",268,0)
 S IEN=$$GETPAY(NAME,TIN)
"RTN","RCDPEU1",269,0)
 I 'IEN Q 0
"RTN","RCDPEU1",270,0)
 Q $$CHKTYPE(IEN,TYPE)
"RTN","RCDPEU1",271,0)
 ;
"RTN","RCDPEU1",272,0)
GETPAY(NAME,TIN) ; EP - Get payer IEN given name and TIN
"RTN","RCDPEU1",273,0)
 ; Inputs: NAME - The free text name of the payer
"RTN","RCDPEU1",274,0)
 ;         TIN  - The ID if the payer
"RTN","RCDPEU1",275,0)
 ; Returns: Internal entry number from file 344.6
"RTN","RCDPEU1",276,0)
 I NAME=""!(TIN)="" Q 0
"RTN","RCDPEU1",277,0)
 Q +$O(^RCY(344.6,"CPID",NAME,TIN,""))
"RTN","RCDPEU1",278,0)
 ;
"RTN","RCDPEU1",279,0)
CHKTYPE(IEN,TYPE) ; EP
"RTN","RCDPEU1",280,0)
 ; Inputs: IEN - Internal entry number from file 344.6
"RTN","RCDPEU1",281,0)
 ;         TYPE - M : Medical, P : Pharmacy, T: Tricare, A: All
"RTN","RCDPEU1",282,0)
 ; Returns: 1 if the payer matches the type, otherwise 0
"RTN","RCDPEU1",283,0)
 I TYPE="A" Q 1
"RTN","RCDPEU1",284,0)
 S FLAG("P")=+$$GET1^DIQ(344.6,IEN_",",.09,"I")
"RTN","RCDPEU1",285,0)
 S FLAG("T")=+$$GET1^DIQ(344.6,IEN_",",.1,"I")
"RTN","RCDPEU1",286,0)
 ;
"RTN","RCDPEU1",287,0)
 I TYPE="T",FLAG("T") Q 1
"RTN","RCDPEU1",288,0)
 I TYPE="P",FLAG("P") Q 1
"RTN","RCDPEU1",289,0)
 I TYPE="M",'FLAG("P"),'FLAG("T") Q 1
"RTN","RCDPEU1",290,0)
 Q 0
"RTN","RCDPEU1",291,0)
ISTYPE(FILE,IEN,TYPE) ; EP
"RTN","RCDPEU1",292,0)
 ; Check if payer is a given type based on IEN from a FILE
"RTN","RCDPEU1",293,0)
 ; Input: FILE - file from which to get Payer name and TIN
"RTN","RCDPEU1",294,0)
 ;               allowed values 344.4 - ERA, 344.31 - EFT, 361.1 - EOB
"RTN","RCDPEU1",295,0)
 ;        IEN  - Internal entry number of entry in FILE
"RTN","RCDPEU1",296,0)
 ;        TYPE - M : Medical, P : Pharmacy, T: Tricare
"RTN","RCDPEU1",297,0)
 ; Return 1 - payer matches type, else 0.
"RTN","RCDPEU1",298,0)
 I TYPE="A" Q 1
"RTN","RCDPEU1",299,0)
 N IEN3444,NAME,TIN
"RTN","RCDPEU1",300,0)
 ; For EOB try to get Payer from associated ERA, if none exists use TIN only to check the type.
"RTN","RCDPEU1",301,0)
 I FILE=361.1 D  I FILE=361.1 Q $$EOBTYP(IEN,TYPE)  ;
"RTN","RCDPEU1",302,0)
 . S IEN3444=$$EOBERA(IEN)
"RTN","RCDPEU1",303,0)
 . I IEN3444 S FILE=344.4,IEN=IEN3444
"RTN","RCDPEU1",304,0)
 ;
"RTN","RCDPEU1",305,0)
 S NAME=$$GETNAME(FILE,IEN)
"RTN","RCDPEU1",306,0)
 S TIN=$$GETTIN(FILE,IEN)
"RTN","RCDPEU1",307,0)
 I NAME=""!(TIN="") Q 0
"RTN","RCDPEU1",308,0)
 Q $$PAYTYPE(NAME,TIN,TYPE)
"RTN","RCDPEU1",309,0)
 ;
"RTN","RCDPEU1",310,0)
ISSEL(FILE,IEN,RCJOB) ; EP
"RTN","RCDPEU1",311,0)
 ; Check if payer was selected by the user give the file and IEN
"RTN","RCDPEU1",312,0)
 ; Input: FILE - file from which to get Payer name and TIN
"RTN","RCDPEU1",313,0)
 ;               allowed values 344.4 - ERA, 344.31 - EFT, 361.1 - EOB
"RTN","RCDPEU1",314,0)
 ;        IEN  - Internal entry number of entry in FILE
"RTN","RCDPEU1",315,0)
 ; Return 1 - payer was selected, else 0.
"RTN","RCDPEU1",316,0)
 ;
"RTN","RCDPEU1",317,0)
 N IEN3444,NAME,RETURN,TIN
"RTN","RCDPEU1",318,0)
 S RETURN=0
"RTN","RCDPEU1",319,0)
 S RCJOB=$G(RCJOB,$J)
"RTN","RCDPEU1",320,0)
 I FILE=361.1 D  I FILE=361.1 Q RETURN
"RTN","RCDPEU1",321,0)
 . S IEN3444=$$EOBERA(IEN)
"RTN","RCDPEU1",322,0)
 . I IEN3444 D  ;
"RTN","RCDPEU1",323,0)
 . . S FILE=344.4,IEN=IEN3444
"RTN","RCDPEU1",324,0)
 . E  D  ;
"RTN","RCDPEU1",325,0)
 . . S TIN=$$GET1^DIQ(361.1,IEN_",",.03,"E")
"RTN","RCDPEU1",326,0)
 . . I $D(^TMP("RCDPEU1",RCJOB,"T",TIN))
"RTN","RCDPEU1",327,0)
 ;
"RTN","RCDPEU1",328,0)
 S NAME=$$GETNAME(FILE,IEN)
"RTN","RCDPEU1",329,0)
 S TIN=$$GETTIN(FILE,IEN)
"RTN","RCDPEU1",330,0)
 I NAME=""!(TIN="") Q 0
"RTN","RCDPEU1",331,0)
 I $D(^TMP("RCDPEU1",RCJOB,"N",NAME,TIN)) S RETURN=1
"RTN","RCDPEU1",332,0)
 Q RETURN
"RTN","RCDPEU1",333,0)
 ;
"RTN","RCDPEU1",334,0)
GETNAME(FILE,IEN) ; Get Payer Name give file and IEN
"RTN","RCDPEU1",335,0)
 N FIELD
"RTN","RCDPEU1",336,0)
 S FIELD=$S(FILE=344.4:.06,1:.02)
"RTN","RCDPEU1",337,0)
 Q $$GET1^DIQ(FILE,IEN_",",FIELD,"E")
"RTN","RCDPEU1",338,0)
 ;
"RTN","RCDPEU1",339,0)
GETTIN(FILE,IEN) ; Get Payer TIN give file and IEN
"RTN","RCDPEU1",340,0)
 N FIELD
"RTN","RCDPEU1",341,0)
 S FIELD=.03
"RTN","RCDPEU1",342,0)
 Q $$GET1^DIQ(FILE,IEN_",",FIELD,"E")
"RTN","RCDPEU1",343,0)
 ;
"RTN","RCDPEU1",344,0)
PAYRNG(MIXED,BLANKLN,NMORTIN) ; How does the user want to select payers?
"RTN","RCDPEU1",345,0)
 ; Input:   MIXED   - 1 to display prompts in mixed case
"RTN","RCDPEU1",346,0)
 ;                    Optional, defaults to 0
"RTN","RCDPEU1",347,0)
 ;          BLANKLN - 0 skip initial blank line
"RTN","RCDPEU1",348,0)
 ;                    Optional, defaults to 1
"RTN","RCDPEU1",349,0)
 ;          NMORTIN - 1 to look-up Payer by Payer Name, 2 to look-up by TIN
"RTN","RCDPEU1",350,0)
 ;                    0 or undefined - pre-326 behavior, look-up by payer name and don't include TIN in output array.
"RTN","RCDPEU1",351,0)
 ;                    Optional, defaults to 0
"RTN","RCDPEU1",352,0)
 ; Output:  ^TMP("RCSELPAY",$J) - Array of selected Payers
"RTN","RCDPEU1",353,0)
 ; Returns: A - All, S - Selected, R - Range, (-1) - User '^' or timeout
"RTN","RCDPEU1",354,0)
 ;
"RTN","RCDPEU1",355,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,RTNFLG,TIN,X,XX,Y
"RTN","RCDPEU1",356,0)
 S:'$D(MIXED) MIXED=0
"RTN","RCDPEU1",357,0)
 S:'$D(BLANKLN) BLANKLN=1
"RTN","RCDPEU1",358,0)
 S:'$D(NMORTIN) NMORTIN=0
"RTN","RCDPEU1",359,0)
 ;
"RTN","RCDPEU1",360,0)
 S RTNFLG=0
"RTN","RCDPEU1",361,0)
 ;
"RTN","RCDPEU1",362,0)
 ; Select option required (All, Selected or Range)
"RTN","RCDPEU1",363,0)
 I NMORTIN=2 D
"RTN","RCDPEU1",364,0)
 . S DIR(0)="SA^A:ALL;S:SPECIFIC"
"RTN","RCDPEU1",365,0)
 . S:MIXED DIR("A")="Run Report for (A)LL or (S)PECIFIC Insurance Companies?: "
"RTN","RCDPEU1",366,0)
 . S:'MIXED DIR("A")="RUN REPORT FOR (A)LL OR (S)PECIFIC INSURANCE COMPANIES?: "
"RTN","RCDPEU1",367,0)
 E  D
"RTN","RCDPEU1",368,0)
 . S DIR(0)="SA^A:ALL;S:SPECIFIC;R:RANGE"
"RTN","RCDPEU1",369,0)
 . S:MIXED DIR("A")="Run Report for (A)LL, (S)PECIFIC, or (R)ANGE of Insurance Companies?: "
"RTN","RCDPEU1",370,0)
 . S:'MIXED DIR("A")="RUN REPORT FOR (A)LL, (S)PECIFIC, OR (R)ANGE OF INSURANCE COMPANIES?: "
"RTN","RCDPEU1",371,0)
 . S DIR("?",2)="Enter 'RANGE' to select an Insurance Company range."
"RTN","RCDPEU1",372,0)
 S DIR("B")="ALL"
"RTN","RCDPEU1",373,0)
 S DIR("?",1)="Enter 'ALL' to select all Insurance Companies."
"RTN","RCDPEU1",374,0)
 S DIR("?")="Enter 'SPECIFIC' to select specific Insurance Companies."
"RTN","RCDPEU1",375,0)
 W:BLANKLN !         ; PRCA*4.5*318 - Added condition for BLANKLN
"RTN","RCDPEU1",376,0)
 D ^DIR K DIR
"RTN","RCDPEU1",377,0)
 ;
"RTN","RCDPEU1",378,0)
 ; Abort on ^ exit or timeout
"RTN","RCDPEU1",379,0)
 I $D(DTOUT)!$D(DUOUT) S RTNFLG=-1 Q RTNFLG
"RTN","RCDPEU1",380,0)
 ;
"RTN","RCDPEU1",381,0)
 Q Y
"RTN","RCDPEU1",382,0)
EOBERA(IEN3611) ; Get ERA that corresponds to an EOB so we can find payers.
"RTN","RCDPEU1",383,0)
 ; Input IEN3611 - Internal entry from file 361.1 EOB
"RTN","RCDPEU1",384,0)
 ; Returns - Internal entry number from file 344.4 ERA
"RTN","RCDPEU1",385,0)
 ;           use reverse $Order to get the latest ERA in case there is more than one.
"RTN","RCDPEU1",386,0)
 Q $O(^RCY(344.4,"ADET",+IEN3611,"A"),-1)
"RTN","RCDPEU1",387,0)
 ;
"RTN","RCDPEU1",388,0)
EOBTYP(IEN3611,TYPE) ; If EOB has no ERA, use TIN from EOB to determine M/P/T type
"RTN","RCDPEU1",389,0)
 ; Input IEN3611 - Internal entry from file 361.1 EOB
"RTN","RCDPEU1",390,0)
 ;       TYPE - M : Medical, P : Pharmacy, T: Tricare
"RTN","RCDPEU1",391,0)
 ; Returns - 1 at least one payer with TIN is of type TYPE
"RTN","RCDPEU1",392,0)
 N IEN,TIN
"RTN","RCDPEU1",393,0)
 S RETURN=0
"RTN","RCDPEU1",394,0)
 S TIN=$$GET1^DIQ(361.1,IEN3611_",",.03,"E")
"RTN","RCDPEU1",395,0)
 I TIN'="" D  ;
"RTN","RCDPEU1",396,0)
 . S IEN=""
"RTN","RCDPEU1",397,0)
 . F  S IEN=$O(^RCY(344.6,"C",TIN_" ",IEN)) Q:'IEN  D  Q:RETURN=1
"RTN","RCDPEU1",398,0)
 . . S RETURN=$$CHKTYPE(IEN,TYPE)
"RTN","RCDPEU1",399,0)
 Q RETURN
"RTN","RCDPEU1",400,0)
 ;
"RTN","RCDPEU1",401,0)
RMESS ; Output message that entry is required.
"RTN","RCDPEU1",402,0)
 W !!,"You must select "
"RTN","RCDPEU1",403,0)
 W $S(PARAM("SELC")="R":"a",1:"at least one")_" "
"RTN","RCDPEU1",404,0)
 W $S(PARAM("SRCH")="N":"payer",1:"TIN"),*7,!
"RTN","RCDPEU1",405,0)
 Q
"RTN","RCDPEU1",406,0)
 ;
"RTN","RCDPEU1",407,0)
WARN(TYPE) ; Warn user that no payers of TYPE have been flagged
"RTN","RCDPEU1",408,0)
 ; Input: TYPE - P=Pharmacy, T="Tricare"
"RTN","RCDPEU1",409,0)
 ; Output: warning message to screen.
"RTN","RCDPEU1",410,0)
 W !!,"WARNING - There are no "_TYPE_" payers flagged in the system."
"RTN","RCDPEU1",411,0)
 W !,"          Please use the Identify Payers option to flag payers.",*7
"RTN","RCDPEU1",412,0)
 Q
"RTN","RCDPEU2")
0^79^B9466209
"RTN","RCDPEU2",1,0)
RCDPEU2 ;AITC/CJE - ELECTRONIC PAYER UTILITIES ;05-NOV-02
"RTN","RCDPEU2",2,0)
 ;;4.5;Accounts Receivable;**326**;Mar 20, 1995;Build 26
"RTN","RCDPEU2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEU2",4,0)
 Q
"RTN","RCDPEU2",5,0)
EFT344(PROMPT,IEN344) ; Select and EFT and update reciept - EP
"RTN","RCDPEU2",6,0)
 ; Input: PROMPT - Prompt to use when picking an EFT
"RTN","RCDPEU2",7,0)
 ;        IEN344 - Internal entry number to file 344
"RTN","RCDPEU2",8,0)
 ; Output
"RTN","RCDPEU2",9,0)
 N FDA,IEN34431,SCREEN
"RTN","RCDPEU2",10,0)
 S SCREEN="I '$O(^RCY(344,""AEFT"",+Y,0)),$P($G(^RCY(344.31,+Y,0)),U,8)=0"
"RTN","RCDPEU2",11,0)
 S IEN34431=$$ASKEFT(PROMPT,SCREEN)
"RTN","RCDPEU2",12,0)
 I IEN34431>0,IEN344 D  ;
"RTN","RCDPEU2",13,0)
 . S FDA(344,IEN344_",",.17)=IEN34431
"RTN","RCDPEU2",14,0)
 . D FILE^DIE("","FDA")
"RTN","RCDPEU2",15,0)
 . I '$D(^TMP("DIERR",$J)) K DIC("W")
"RTN","RCDPEU2",16,0)
 . W !!,IEN34431,!!
"RTN","RCDPEU2",17,0)
 Q
"RTN","RCDPEU2",18,0)
ASKEFT(PROMPT,SCREEN) ; Select an EFT for an EDI Lockbox receipt - EP
"RTN","RCDPEU2",19,0)
 ; Inputs: PROMPT - Prompt to use when asking user to enter an EFT.
"RTN","RCDPEU2",20,0)
 ;         SCREEN - Screen for use in file 344.31 look-up
"RTN","RCDPEU2",21,0)
 ; Returns: IEN from file 344.31 or -1 if user times out or '^'
"RTN","RCDPEU2",22,0)
 ;
"RTN","RCDPEU2",23,0)
 N COUNT,DA,DIC,DIR,DIRUT,DIROUT,DTOUT,DUOUT,FIELDS,FILE,FLAGS,IENS,INDEXES,QUIT,RETURN,VALUE,X,Y
"RTN","RCDPEU2",24,0)
 K ^TMP("DILIST",$J),^TMP("DIERR",$J)
"RTN","RCDPEU2",25,0)
 S (RETURN,QUIT)=0
"RTN","RCDPEU2",26,0)
 S FILE=344.31,IENS=""
"RTN","RCDPEU2",27,0)
 S FIELDS=".01;.02;.03;.04;.07;.14"
"RTN","RCDPEU2",28,0)
 S FLAGS="M"
"RTN","RCDPEU2",29,0)
 S INDEXES=""
"RTN","RCDPEU2",30,0)
 F  D  Q:QUIT  ;
"RTN","RCDPEU2",31,0)
 . W !,PROMPT R VALUE:DT
"RTN","RCDPEU2",32,0)
 . I '$T S QUIT=1,RETURN=-1 Q  ; Timeout
"RTN","RCDPEU2",33,0)
 . I VALUE="" S QUIT=1,RETURN=0 Q
"RTN","RCDPEU2",34,0)
 . I $E(VALUE)="^"!(VALUE="") S QUIT=1,RETURN=-1 Q
"RTN","RCDPEU2",35,0)
 . I $E(VALUE)="?" S VALUE=""
"RTN","RCDPEU2",36,0)
 . I VALUE="" D  ;
"RTN","RCDPEU2",37,0)
 . . D LIST^DIC(FILE,"",FIELDS,FLAGS,"*","","","B",SCREEN,"","","")
"RTN","RCDPEU2",38,0)
 . E  D  ;
"RTN","RCDPEU2",39,0)
 . . D FIND^DIC(FILE,"",FIELDS,FLAGS,VALUE,"","",SCREEN,"","","")
"RTN","RCDPEU2",40,0)
 . S COUNT=$P($G(^TMP("DILIST",$J,0)),"^",1)
"RTN","RCDPEU2",41,0)
 . I COUNT=1,VALUE'="" D  Q  ;
"RTN","RCDPEU2",42,0)
 . . S RETURN=+$P($G(^TMP("DILIST",$J,2,1)),"^",1),QUIT=1
"RTN","RCDPEU2",43,0)
 . I COUNT>0 D  ;
"RTN","RCDPEU2",44,0)
 . . S RETURN=$$PICKEFT()
"RTN","RCDPEU2",45,0)
 . . I RETURN>0 S QUIT=1
"RTN","RCDPEU2",46,0)
 Q RETURN
"RTN","RCDPEU2",47,0)
 ;
"RTN","RCDPEU2",48,0)
PICKEFT() ; Given output from FIND^DIC, pick an EFT from the list
"RTN","RCDPEU2",49,0)
 ; Input: ^TMP("DILIST",$J) in non-packed format
"RTN","RCDPEU2",50,0)
 ; Returns: IEN from file 344.31, or 0 if user does not pick an item from the list
"RTN","RCDPEU2",51,0)
 ;
"RTN","RCDPEU2",52,0)
 N CNT,COUNT,QUIT,RETURN
"RTN","RCDPEU2",53,0)
 S COUNT=$P($G(^TMP("DILIST",$J,0)),"^",1)
"RTN","RCDPEU2",54,0)
 S (QUIT,RETURN)=0
"RTN","RCDPEU2",55,0)
 F CNT=1:1:COUNT D  Q:QUIT  ;
"RTN","RCDPEU2",56,0)
 . D WRITE(CNT)
"RTN","RCDPEU2",57,0)
 . I CNT#10=0!(CNT=COUNT) D  Q:QUIT  ;
"RTN","RCDPEU2",58,0)
 . . S RETURN=$$READ(CNT) I RETURN=-1!(RETURN>0) S QUIT=1
"RTN","RCDPEU2",59,0)
 Q RETURN
"RTN","RCDPEU2",60,0)
 ;
"RTN","RCDPEU2",61,0)
READ(LAST) ;
"RTN","RCDPEU2",62,0)
 ; Input: LAST - The last number displayed that can be picked in the number range 1-LAST
"RTN","RCDPEU2",63,0)
 ; Returns: IEN from 344.31 if one is picked, otherwise -1 (^ or timeout) or 0 - nothing picked
"RTN","RCDPEU2",64,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,QUIT,RETURN,VALUE,X,Y
"RTN","RCDPEU2",65,0)
 S RETURN=0
"RTN","RCDPEU2",66,0)
 S DIR(0)="NO^1:"_LAST
"RTN","RCDPEU2",67,0)
 D ^DIR
"RTN","RCDPEU2",68,0)
 I $D(DTOUT)!($D(DUOUT)) Q -1
"RTN","RCDPEU2",69,0)
 I Y,$D(^TMP("DILIST",$J,2,Y)) S RETURN=^TMP("DILIST",$J,2,Y)
"RTN","RCDPEU2",70,0)
 Q RETURN
"RTN","RCDPEU2",71,0)
WRITE(X) ; Write out one entry from 344.31
"RTN","RCDPEU2",72,0)
 ; Input: X=Counter from ^TMP("DILIST",$J) output from FIND^DIC
"RTN","RCDPEU2",73,0)
 ; Output: To screen
"RTN","RCDPEU2",74,0)
 N DEPDAT,DEPNO,EFTID,EFTIEN,EFTTR,PAYAMT,PAYNAM,PAYTR,SP,TIN
"RTN","RCDPEU2",75,0)
 S SP=$J("",3)
"RTN","RCDPEU2",76,0)
 S EFTIEN=$P(^TMP("DILIST",$J,1,X),".")
"RTN","RCDPEU2",77,0)
 S EFTID=^TMP("DILIST",$J,"ID",X,.01)
"RTN","RCDPEU2",78,0)
 S PAYNAM=^TMP("DILIST",$J,"ID",X,.02)
"RTN","RCDPEU2",79,0)
 S TIN=^TMP("DILIST",$J,"ID",X,.03)
"RTN","RCDPEU2",80,0)
 S PAYTR=^TMP("DILIST",$J,"ID",X,.04)
"RTN","RCDPEU2",81,0)
 S PAYAMT=^TMP("DILIST",$J,"ID",X,.07)
"RTN","RCDPEU2",82,0)
 S DEPNO=$$GET1^DIQ(344.3,EFTIEN,.03,"E")
"RTN","RCDPEU2",83,0)
 S DEPDAT=$$FMTE^XLFDT($$GET1^DIQ(344.3,EFTIEN,.07,"I"),"2DZ")
"RTN","RCDPEU2",84,0)
 ; EFT DETAIL lookup
"RTN","RCDPEU2",85,0)
 S PAYNAM=$E(PAYNAM,1,62-$L(TIN))_"/"_TIN I PAYNAM="/" S PAYNAM=""
"RTN","RCDPEU2",86,0)
 W !,$J(X,4),?7,EFTID,?16," ",PAYNAM
"RTN","RCDPEU2",87,0)
 W !,?16," ",PAYTR,?48," ",$J(PAYAMT,10)
"RTN","RCDPEU2",88,0)
 W ?59," ",DEPNO,?71," ",DEPDAT
"RTN","RCDPEU2",89,0)
 Q
"RTN","RCDPEV0")
0^52^B69507034
"RTN","RCDPEV0",1,0)
RCDPEV0 ;ALB/TMK - EDI LOCKBOX WORKLIST VERIFY PAYMENTS ;Jun 06, 2014@19:11:19
"RTN","RCDPEV0",2,0)
 ;;4.5;Accounts Receivable;**208,261,298,326**;Mar 20, 1995;Build 26
"RTN","RCDPEV0",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEV0",4,0)
 Q
"RTN","RCDPEV0",5,0)
 ;
"RTN","RCDPEV0",6,0)
RPT(RCSCR) ; Print/display discrepancy report
"RTN","RCDPEV0",7,0)
 D FULL^VALM1
"RTN","RCDPEV0",8,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP
"RTN","RCDPEV0",9,0)
 S %ZIS="QM" D ^%ZIS G:POP RPTQ
"RTN","RCDPEV0",10,0)
 I $D(IO("Q")) D  G RPTQ
"RTN","RCDPEV0",11,0)
 . S ZTRTN="DISRPT^RCDPEV0("_RCSCR_","_+$G(^TMP("RCBATCH_SELECTED",$J))_")",ZTDESC="AR - Print ERA Discrepancy Report From Worklist"
"RTN","RCDPEV0",12,0)
 . D ^%ZTLOAD
"RTN","RCDPEV0",13,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEV0",14,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEV0",15,0)
 U IO
"RTN","RCDPEV0",16,0)
 D DISRPT(RCSCR,+$G(^TMP("RCBATCH_SELECTED",$J)))
"RTN","RCDPEV0",17,0)
RPTQ Q
"RTN","RCDPEV0",18,0)
 ;
"RTN","RCDPEV0",19,0)
 ; BEGIN EPRCA*4.5*326
"RTN","RCDPEV0",20,0)
RPT1(RCSCR) ; Print/display discrepancy report - Auto-post ERA
"RTN","RCDPEV0",21,0)
 D FULL^VALM1
"RTN","RCDPEV0",22,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP
"RTN","RCDPEV0",23,0)
 S %ZIS="QM" D ^%ZIS G:POP RPTQ
"RTN","RCDPEV0",24,0)
 I $D(IO("Q")) D  G RPTQ
"RTN","RCDPEV0",25,0)
 . S ZTRTN="DISRPT^RCDPEV0("_RCSCR_","_+$G(^TMP("RCBATCH_SELECTED",$J))_")",ZTDESC="AR - Print Auto-post ERA Discrepancy Report From Worklist"
"RTN","RCDPEV0",26,0)
 . D ^%ZTLOAD
"RTN","RCDPEV0",27,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEV0",28,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEV0",29,0)
 U IO
"RTN","RCDPEV0",30,0)
 D DISRPT1(RCSCR,+$G(^TMP("RCBATCH_SELECTED",$J)))
"RTN","RCDPEV0",31,0)
RPT1Q Q
"RTN","RCDPEV0",32,0)
 ; END PRCA*4.5*326
"RTN","RCDPEV0",33,0)
 ;
"RTN","RCDPEV0",34,0)
DISRPT(RCSCR,RCBATCH) ; Queued job entrypoint
"RTN","RCDPEV0",35,0)
 ; RCSCR = the ien of the entry in file 344.49
"RTN","RCDPEV0",36,0)
 ; RCBATCH = the # of the batch within the ERA.  If all batches, this is null
"RTN","RCDPEV0",37,0)
 N X,Z,Z0,RC3444,RCSTOP,RCPG,RCANY,RCZ,RCZ0,RCZ1,SPLIT,SSN,AMT1,AMT2,RCBILL,RESULT,DTFR1,DTFR2,DTTO1,DTTO2
"RTN","RCDPEV0",38,0)
 S (RCSTOP,RCPG,RCANY)=0
"RTN","RCDPEV0",39,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.49,RCSCR,1,"ANV",0,RCZ)) Q:'RCZ  D  Q:RCSTOP
"RTN","RCDPEV0",40,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ W:+$G(RCPG) !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEV0",41,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,RCZ,0))
"RTN","RCDPEV0",42,0)
 . Q:'$D(^RCY(344.49,RCSCR,1,"ASEQ",+RCZ0,RCZ))  ; Not top level
"RTN","RCDPEV0",43,0)
 . Q:RCZ0=""
"RTN","RCDPEV0",44,0)
 . I $G(RCBATCH),$P(RCZ0,U,14)'=RCBATCH Q  ; Not in the batch
"RTN","RCDPEV0",45,0)
 . S SPLIT=(+$O(^RCY(344.49,RCSCR,1,"B",+RCZ0_".9999"),-1)'=(+RCZ0_".001"))
"RTN","RCDPEV0",46,0)
 . S RC3444=$G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),0))
"RTN","RCDPEV0",47,0)
 . S RCBILL=+$G(^IBM(361.1,+$P(RC3444,U,2),0))
"RTN","RCDPEV0",48,0)
 . I 'RCBILL Q  ; PRCA*4.5*326
"RTN","RCDPEV0",49,0)
 . S RCANY=1 ; PRCA*4.5*326
"RTN","RCDPEV0",50,0)
 . S RESULT=$$VER^RCDPEV(RCSCR,RCBILL,+$P(RCZ0,U,9),1)
"RTN","RCDPEV0",51,0)
 . S AMT1=$S($E($P(RESULT,U,5))="*":"*",1:"")_$S($TR($P(RESULT,U,5),"*")="":"NO DATA",1:$J($TR($P(RESULT,U,5),"*"),"",2))
"RTN","RCDPEV0",52,0)
 . S AMT2=$S($E($P(RESULT,U,4))="*":"*",1:"")_$S($TR($P(RESULT,U,4),"*")="":"NO DATA",1:$J($TR($P(RESULT,U,4),"*"),"",2))
"RTN","RCDPEV0",53,0)
 . S DTFR1=$S($TR($P(RESULT,U,7),"*")="":"",1:$S($E($P(RESULT,U,7))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,7),"*"),"2D"))
"RTN","RCDPEV0",54,0)
 . S DTFR2=$S($TR($P(RESULT,U,6),"*")="":"",1:$S($E($P(RESULT,U,6))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,6),"*"),"2D"))
"RTN","RCDPEV0",55,0)
 . S DTTO1=$S($TR($P(RESULT,U,9),"*")="":"",1:$S($E($P(RESULT,U,9))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,9),"*"),"2D"))
"RTN","RCDPEV0",56,0)
 . S DTTO2=$S($TR($P(RESULT,U,8),"*")="":"",1:$S($E($P(RESULT,U,8))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,8),"*"),"2D"))
"RTN","RCDPEV0",57,0)
 . S X="EEOB Sequence #(s) on the ERA: "_$P(RCZ0,U,9)_"  "_$S($P(RC3444,U,5)'="":$P(RC3444,U,5),$P(RC3444,U,17)'="":$P(RC3444,U,17),$G(RCBILL):$P($G(^DGCR(399,+RCBILL,0)),U),1:"")
"RTN","RCDPEV0",58,0)
 . I ($Y+7)>IOSL!'RCPG D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP,"U") Q:RCSTOP  ; PRCA*4.5*326
"RTN","RCDPEV0",59,0)
 . W !!,X
"RTN","RCDPEV0",60,0)
 . I ($Y+5)>IOSL D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP,"U") Q:RCSTOP  ; PRCA*4.5*326
"RTN","RCDPEV0",61,0)
 . S X="VistA: ",SSN=$P(RESULT,U,10),SSN=$E($E(SSN,$L(SSN)-3,$L(SSN))_$J("",4),1,4)
"RTN","RCDPEV0",62,0)
 . S X=X_$S('RCBILL:"NOT RELATED TO A VistA BILL",1:$E($P(RESULT,U,2)_$J("",30),1,30)_" "_SSN_"  "_$E(AMT2_$J("",15),1,15)_"  "_$E($S(DTFR2="":"NO DATA",1:DTFR2)_$J("",9),1,9)_"- "_$S(DTTO2'="":DTTO2,1:"NO DATA"))
"RTN","RCDPEV0",63,0)
 . W !,X
"RTN","RCDPEV0",64,0)
 . S X="  ERA: "_$E($P(RESULT,U,3)_$J("",30),1,30)_$J("",7)_$E(AMT1_$J("",15),1,15)_"  "_$E($S(DTFR1="":"NO DATA",1:DTFR1)_$J("",9),1,9)_"- "_$S(DTTO1'="":DTTO1,1:"NO DATA")
"RTN","RCDPEV0",65,0)
 . W !,X
"RTN","RCDPEV0",66,0)
 . Q:'SPLIT
"RTN","RCDPEV0",67,0)
 . W !,?9,"<<< THIS EEOB HAS BEEN SPLIT >>>"
"RTN","RCDPEV0",68,0)
 . S RCZ1=+RCZ0 F  S RCZ1=$O(^RCY(344.49,RCSCR,1,"B",RCZ1)) Q:(RCZ1\1)'=+RCZ0!RCSTOP  D
"RTN","RCDPEV0",69,0)
 .. S Z=+$O(^RCY(344.49,RCSCR,1,"B",RCZ1,0))
"RTN","RCDPEV0",70,0)
 .. S Z0=$G(^RCY(344.49,RCSCR,1,Z,0))
"RTN","RCDPEV0",71,0)
 .. I ($Y+5)>IOSL D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP,"U") Q:RCSTOP  ; PRCA*4.5*326
"RTN","RCDPEV0",72,0)
 .. W !,?15,$S($P(Z0,U,7):"",1:"BILL NOT IN VISTA: "),$P(Z0,U,2)_"  "_$J($P(Z0,U,5),"",2)
"RTN","RCDPEV0",73,0)
 . W !
"RTN","RCDPEV0",74,0)
 ;
"RTN","RCDPEV0",75,0)
 I 'RCANY D:'RCPG HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP,"U") W !,"THERE ARE NO UNVERIFIED LINES WITH DISCREPANCIES IN THIS ERA"_$S($G(RCBATCH):" BATCH",1:"") ; PRCA*4.5*326
"RTN","RCDPEV0",76,0)
 I '$D(ZTQUEUED),'RCSTOP,RCPG D ASK()
"RTN","RCDPEV0",77,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEV0",78,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEV0",79,0)
 Q
"RTN","RCDPEV0",80,0)
 ;
"RTN","RCDPEV0",81,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEV0",82,0)
DISRPT1(RCSCR,RCBATCH) ; Queued job entrypoint - Auto-post ERA
"RTN","RCDPEV0",83,0)
 ; RCSCR = the ien of the entry in file 344.49
"RTN","RCDPEV0",84,0)
 ; RCBATCH = the # of the batch within the ERA. If all batches, this is null
"RTN","RCDPEV0",85,0)
 ;
"RTN","RCDPEV0",86,0)
 ; Sort verified status into scratchpad sequence
"RTN","RCDPEV0",87,0)
 N ARR,RCZ,RCVER
"RTN","RCDPEV0",88,0)
 F RCVER=0,1 D
"RTN","RCDPEV0",89,0)
 .S RCZ=0
"RTN","RCDPEV0",90,0)
 .F  S RCZ=$O(^RCY(344.49,RCSCR,1,"ANV",RCVER,RCZ)) Q:'RCZ  D
"RTN","RCDPEV0",91,0)
 . . S ARR(RCZ)=RCVER
"RTN","RCDPEV0",92,0)
 ;
"RTN","RCDPEV0",93,0)
 N AMT1,AMT2,DTFR1,DTFR2,DTTO1,DTTO2,RCANY,RCSTOP,RCPG,RCZ0,RCZ1,RCBILL,RCEOB,RCLINE,RESULT
"RTN","RCDPEV0",94,0)
 N SPLIT,SSN,X,Z,Z0
"RTN","RCDPEV0",95,0)
 S (RCSTOP,RCPG,RCANY,RCZ)=0
"RTN","RCDPEV0",96,0)
 F  S RCZ=$O(ARR(RCZ)) Q:'RCZ  D  Q:RCSTOP
"RTN","RCDPEV0",97,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ W:+$G(RCPG) !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEV0",98,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,RCZ,0))
"RTN","RCDPEV0",99,0)
 . Q:'$D(^RCY(344.49,RCSCR,1,"ASEQ",+RCZ0,RCZ))  ; Not top level
"RTN","RCDPEV0",100,0)
 . Q:RCZ0=""
"RTN","RCDPEV0",101,0)
 . I $G(RCBATCH),$$GET1^DIQ(344.491,RCZ_","_RCSCR_",",.14)'=RCBATCH Q  ; Not in the batch
"RTN","RCDPEV0",102,0)
 . S SPLIT=(+$O(^RCY(344.49,RCSCR,1,"B",+RCZ0_".9999"),-1)'=(+RCZ0_".001"))
"RTN","RCDPEV0",103,0)
 . S RC3444=$G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),0))
"RTN","RCDPEV0",104,0)
 . S RCLINE=+$$GET1^DIQ(344.491,RCZ_","_RCSCR_",",.09)
"RTN","RCDPEV0",105,0)
 . S RCEOB=+$$GET1^DIQ(344.41,RCLINE_","_RCSCR_",",.02,"I")
"RTN","RCDPEV0",106,0)
 . S RCBILL=+$$GET1^DIQ(361.1,RCEOB_",",.01,"I")
"RTN","RCDPEV0",107,0)
 . S RESULT=$$VER^RCDPEV(RCSCR,RCBILL,+RC3444,1)
"RTN","RCDPEV0",108,0)
 . ; Ignore lines with no discrepancies
"RTN","RCDPEV0",109,0)
 . Q:'$F(RESULT,"^*")
"RTN","RCDPEV0",110,0)
 . S RCANY=1
"RTN","RCDPEV0",111,0)
 . S RCVER=ARR(RCZ) ; Verification status
"RTN","RCDPEV0",112,0)
 . S AMT1=$S($E($P(RESULT,U,5))="*":"*",1:"")_$S($TR($P(RESULT,U,5),"*")="":"NO DATA",1:$J($TR($P(RESULT,U,5),"*"),"",2))
"RTN","RCDPEV0",113,0)
 . S AMT2=$S($E($P(RESULT,U,4))="*":"*",1:"")_$S($TR($P(RESULT,U,4),"*")="":"NO DATA",1:$J($TR($P(RESULT,U,4),"*"),"",2))
"RTN","RCDPEV0",114,0)
 . S DTFR1=$S($TR($P(RESULT,U,7),"*")="":"",1:$S($E($P(RESULT,U,7))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,7),"*"),"2D"))
"RTN","RCDPEV0",115,0)
 . S DTFR2=$S($TR($P(RESULT,U,6),"*")="":"",1:$S($E($P(RESULT,U,6))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,6),"*"),"2D"))
"RTN","RCDPEV0",116,0)
 . S DTTO1=$S($TR($P(RESULT,U,9),"*")="":"",1:$S($E($P(RESULT,U,9))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,9),"*"),"2D"))
"RTN","RCDPEV0",117,0)
 . S DTTO2=$S($TR($P(RESULT,U,8),"*")="":"",1:$S($E($P(RESULT,U,8))="*":"*",1:"")_$$FMTE^XLFDT($TR($P(RESULT,U,8),"*"),"2D"))
"RTN","RCDPEV0",118,0)
 . S X="EEOB Sequence #(s) on the ERA: "_$P(RCZ0,U,9)_" "_$S($P(RC3444,U,5)'="":$P(RC3444,U,5),$P(RC3444,U,17)'="":$P(RC3444,U,17),$G(RCBILL):$P($G(^DGCR(399,+RCBILL,0)),U),1:"")
"RTN","RCDPEV0",119,0)
 . W " ("_$S(RCVER:"Verified",1:"Unverified")
"RTN","RCDPEV0",120,0)
 . I ($Y+7)>IOSL!'RCPG D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP,"A") Q:RCSTOP
"RTN","RCDPEV0",121,0)
 . W !!,X
"RTN","RCDPEV0",122,0)
 . I ($Y+5)>IOSL D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP,"A") Q:RCSTOP
"RTN","RCDPEV0",123,0)
 . S X="VistA: ",SSN=$P(RESULT,U,10),SSN=$E($E(SSN,$L(SSN)-3,$L(SSN))_$J("",4),1,4)
"RTN","RCDPEV0",124,0)
 . S X=X_$S('RCBILL:"NOT RELATED TO A VistA BILL",1:$E($P(RESULT,U,2)_$J("",30),1,30)_" "_SSN_" "_$E(AMT2_$J("",15),1,15)_" "_$E($S(DTFR2="":"NO DATA",1:DTFR2)_$J("",9),1,9)_"- "_$S(DTTO2'="":DTTO2,1:"NO DATA"))
"RTN","RCDPEV0",125,0)
 . W !,X
"RTN","RCDPEV0",126,0)
 . S X=" ERA: "_$E($P(RESULT,U,3)_$J("",30),1,30)_$J("",7)_$E(AMT1_$J("",15),1,15)_" "_$E($S(DTFR1="":"NO DATA",1:DTFR1)_$J("",9),1,9)_"- "_$S(DTTO1'="":DTTO1,1:"NO DATA")
"RTN","RCDPEV0",127,0)
 . W !,X
"RTN","RCDPEV0",128,0)
 . Q:'SPLIT
"RTN","RCDPEV0",129,0)
 . W !,?9,"<<< THIS EEOB HAS BEEN SPLIT >>>"
"RTN","RCDPEV0",130,0)
 . S RCZ1=+RCZ0 F  S RCZ1=$O(^RCY(344.49,RCSCR,1,"B",RCZ1)) Q:(RCZ1\1)'=+RCZ0!RCSTOP  D
"RTN","RCDPEV0",131,0)
 .. S Z=+$O(^RCY(344.49,RCSCR,1,"B",RCZ1,0))
"RTN","RCDPEV0",132,0)
 .. S Z0=$G(^RCY(344.49,RCSCR,1,Z,0))
"RTN","RCDPEV0",133,0)
 .. I ($Y+5)>IOSL D HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP,"A") Q:RCSTOP
"RTN","RCDPEV0",134,0)
 .. W !,?15,$S($P(Z0,U,7):"",1:"BILL NOT IN VISTA: "),$P(Z0,U,2)_" "_$J($P(Z0,U,5),"",2)
"RTN","RCDPEV0",135,0)
 . W !
"RTN","RCDPEV0",136,0)
 ;
"RTN","RCDPEV0",137,0)
 I 'RCANY D
"RTN","RCDPEV0",138,0)
 .D:'RCPG HDR(.RCPG,RCSCR,$G(RCBATCH),.RCSTOP,"A")
"RTN","RCDPEV0",139,0)
 .W !,"THERE ARE NO AUTO-POST LINES WITH DISCREPANCIES IN THIS ERA"
"RTN","RCDPEV0",140,0)
 .W $S($G(RCBATCH):" BATCH",1:"")
"RTN","RCDPEV0",141,0)
 I '$D(ZTQUEUED),'RCSTOP,RCPG D ASK()
"RTN","RCDPEV0",142,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEV0",143,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEV0",144,0)
 Q
"RTN","RCDPEV0",145,0)
 ; END PRCA*4.5*326
"RTN","RCDPEV0",146,0)
 ;
"RTN","RCDPEV0",147,0)
HDR(RCPG,RCSCR,RCBATCH,RCSTOP,RCTYP) ;Print header - RCTYP added - PRCA*4.5*326
"RTN","RCDPEV0",148,0)
 ; RCPG = last page #
"RTN","RCDPEV0",149,0)
 ; RCSCR = the entry # in file 344.49
"RTN","RCDPEV0",150,0)
 ; RCSTOP = returned as 1 if abort is detected
"RTN","RCDPEV0",151,0)
 ; RCTYP = 'A' for all verification discrepancies, 'U' for unverified discrepancies only
"RTN","RCDPEV0",152,0)
 N RCDAT,RCPAY,RCTRACE ; PRCA*4.5*326
"RTN","RCDPEV0",153,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ W:+$G(RCPG) !,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEV0",154,0)
 I RCPG&($E(IOST,1,2)="C-") D ASK(.RCSTOP) Q:RCSTOP
"RTN","RCDPEV0",155,0)
 S RCDAT=$$GET1^DIQ(344.4,RCSCR_",",.04,"I") ; PRCA*4.5*326
"RTN","RCDPEV0",156,0)
 S RCPAY=$$GET1^DIQ(344.4,RCSCR_",",.06,"I") ; PRCA*4.5*326
"RTN","RCDPEV0",157,0)
 S RCTRACE=$$GET1^DIQ(344.4,RCSCR_",",.02,"I") ; PRCA*4.5*326
"RTN","RCDPEV0",158,0)
 W !,@IOF,*13
"RTN","RCDPEV0",159,0)
 S RCPG=$G(RCPG)+1
"RTN","RCDPEV0",160,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEV0",161,0)
 I RCTYP="U" W !,"EDI LBOX WORKLIST - UNVERIFIED LINES DISCREPANCIES REPORT",?59
"RTN","RCDPEV0",162,0)
 E   W !,"EDI LBOX WORKLIST - AUTOPOST ERA LINES DISCREPANCIES REPORT",?61
"RTN","RCDPEV0",163,0)
 W $$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!
"RTN","RCDPEV0",164,0)
 W !,"ERA #: ",RCSCR,?20
"RTN","RCDPEV0",165,0)
 W $S($O(^RCY(344.49,RCSCR,3,0)):"BATCH: "_$E($S($G(RCBATCH):+RCBATCH,1:"ALL")_$J("",11),1,11),1:$J("",18))
"RTN","RCDPEV0",166,0)
 W "TRACE #: "_RCTRACE
"RTN","RCDPEV0",167,0)
 W !,"PAYER: "_$E(RCPAY_$J("",30),1,30)_"  ERA DT: "_$$FMTE^XLFDT(RCDAT,"2D")
"RTN","RCDPEV0",168,0)
 ; END PRCA*4.5*326
"RTN","RCDPEV0",169,0)
 W !!,?7,"PATIENT NAME"_$J("",25)_"SUBMITTED AMT    SVC DATE(S)"
"RTN","RCDPEV0",170,0)
 W !,"* preceding data = data has discrepancy"
"RTN","RCDPEV0",171,0)
 W !,$TR($J("",IOM)," ","=")
"RTN","RCDPEV0",172,0)
 Q
"RTN","RCDPEV0",173,0)
 ;
"RTN","RCDPEV0",174,0)
ASK(RCSTOP) ; Ask to continue
"RTN","RCDPEV0",175,0)
 ; If passed by reference ,RCSTOP is returned as 1 if print is aborted
"RTN","RCDPEV0",176,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEV0",177,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEV0",178,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEV0",179,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEV0",180,0)
 Q
"RTN","RCDPEV0",181,0)
 ;
"RTN","RCDPEWL")
0^12^B79960126
"RTN","RCDPEWL",1,0)
RCDPEWL ;ALB/TMK/KML - ELECTRONIC EOB MESSAGE WORKLIST ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL",2,0)
 ;;4.5;Accounts Receivable;**173,208,269,298,317,318,326**;Mar 20, 1995;Build 26
"RTN","RCDPEWL",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL",5,0)
 ;
"RTN","RCDPEWL",6,0)
EN ; Main entry point
"RTN","RCDPEWL",7,0)
 N RCFASTXT,DA,DIC,X,Y,RCERA,RCNOED,RCQUIT  ;PRCA*4.5*317 Added RCQUIT
"RTN","RCDPEWL",8,0)
 D FULL^VALM1
"RTN","RCDPEWL",9,0)
 ;
"RTN","RCDPEWL",10,0)
 S DIR(0)="SA^L:LIST;S:SPECIFIC"
"RTN","RCDPEWL",11,0)
 S DIR("A")="Do you want a (L)IST of ERAs or a (S)PECIFIC one?: "
"RTN","RCDPEWL",12,0)
 S DIR("?",1)="Enter LIST to see a list of ERAs."
"RTN","RCDPEWL",13,0)
 S DIR("?")="Enter SPECIFIC to see a selected ERA."
"RTN","RCDPEWL",14,0)
 S DIR("B")="LIST"
"RTN","RCDPEWL",15,0)
 W !
"RTN","RCDPEWL",16,0)
 D ^DIR
"RTN","RCDPEWL",17,0)
 K DIR
"RTN","RCDPEWL",18,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPEWL",19,0)
 I Y="S" D  Q
"RTN","RCDPEWL",20,0)
 . S DIC="^RCY(344.4,",DIC(0)="AEMQ"
"RTN","RCDPEWL",21,0)
 . D ^DIC
"RTN","RCDPEWL",22,0)
 . I Y>0 D WL^RCDPEWL7(+Y)
"RTN","RCDPEWL",23,0)
 ;
"RTN","RCDPEWL",24,0)
 ; Calling Preferred View API in Menu Option Mode
"RTN","RCDPEWL",25,0)
 D PARAMS^RCDPEWL0("MO")
"RTN","RCDPEWL",26,0)
 Q:$G(RCQUIT)
"RTN","RCDPEWL",27,0)
 D EN^VALM("RCDPE WORKLIST ERA LIST")
"RTN","RCDPEWL",28,0)
 Q
"RTN","RCDPEWL",29,0)
 ;
"RTN","RCDPEWL",30,0)
DISP(RCERA,RCNOED) ; Entry to worklist from receipt processing
"RTN","RCDPEWL",31,0)
 ;  RCERA = ien of entry in file 344.49
"RTN","RCDPEWL",32,0)
 ; RCNOED = 1 if receipt exists/no editing allowed
"RTN","RCDPEWL",33,0)
 ;        = 2 if no edit and called from receipt processing
"RTN","RCDPEWL",34,0)
 ;  ; prca*4.5*298 - added AUTOPOST input argument
"RTN","RCDPEWL",35,0)
 ; AUTOPOST = "" if ERA is non-autopost
"RTN","RCDPEWL",36,0)
 ;          = 0  if auto-posted ERA is in UNPOSTED status
"RTN","RCDPEWL",37,0)
 ;          = 1 if auto-posted ERA is in PARTIAL posted status
"RTN","RCDPEWL",38,0)
 ;          = 2 if auto-posted ERA is in COMPLETE status
"RTN","RCDPEWL",39,0)
 ;
"RTN","RCDPEWL",40,0)
 N DUOUT,DTOUT,DIC,DIK,X,Y,DIR,RCQUIT,DA,DIE,DR,RCSCR,RC0,RC5,RCDAT,RCUNM
"RTN","RCDPEWL",41,0)
 ;
"RTN","RCDPEWL",42,0)
 S RCSCR("NOEDIT")=+$G(RCNOED)
"RTN","RCDPEWL",43,0)
 S RCQUIT=0,RC0=$G(^RCY(344.4,RCERA,0)),RC5=$G(^RCY(344.4,RCERA,5))
"RTN","RCDPEWL",44,0)
 I 'RCSCR("NOEDIT"),'$O(^RCY(344.49,"B",RCERA,0)) D  G:RCQUIT DISPQ
"RTN","RCDPEWL",45,0)
 . ;allow additional selections
"RTN","RCDPEWL",46,0)
 . S DIR("A",1)="No worklist scratchpad entry exists for this ERA."
"RTN","RCDPEWL",47,0)
 . S DIR("A")="(C)reate scratchpad, (V)iew ERA details or (E)xit:"
"RTN","RCDPEWL",48,0)
 . S DIR(0)="SAO^C:CREATE SCRATCHPAD;V:VIEW ERA DETAILS;E:EXIT"
"RTN","RCDPEWL",49,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL",50,0)
 . I (Y'="V")&(Y'="C")&(Y'="E") S RCERA=-1,RCQUIT=1 Q
"RTN","RCDPEWL",51,0)
 . I Y="V" S RCSCR=RCERA D PRERA1^RCDPEWL0 S RCERA=-1,RCQUIT=1  Q
"RTN","RCDPEWL",52,0)
 . I Y="E" S RCERA=-1,RCQUIT=1 Q
"RTN","RCDPEWL",53,0)
 . ; prca*4.5*298  Y is = "C" therefore perform the pre-existing scratchpad creation/editing algorithm
"RTN","RCDPEWL",54,0)
 . I $P(RC0,U,15)'="" W !!,"PAYMENT METHOD CODE REPORTED: "_$P(RC0,U,15),!
"RTN","RCDPEWL",55,0)
 . I $P(RC0,U,15)="" W !!,"NO PAYMENT METHOD CODE REPORTED",!
"RTN","RCDPEWL",56,0)
 . I $P(RC0,U,9)=0,$P(RC5,U,2)="" D  Q:RCQUIT
"RTN","RCDPEWL",57,0)
 .. S RCQUIT=0,RCUNM=0
"RTN","RCDPEWL",58,0)
 .. I +$P(RC0,U,5)=0,"ACH"'[(U_$P(RC0,U,15)_U) D  Q:RCQUIT!RCUNM
"RTN","RCDPEWL",59,0)
 ... S DIR("A",1)="This ERA has no payment associated with it and can be marked as",DIR("A",2)="'MATCH-0 PAYMENT' to remove it from the ERA AGING REPORT if no paper check or",DIR("A",3)="EFT is expected to be received for this ERA"
"RTN","RCDPEWL",60,0)
 ... S DIR("?")="Do NOT respond YES here unless you are sure there will be no EFT or paper",DIR("?",1)=" check to be received for this 0-PAYMENT ERA"
"RTN","RCDPEWL",61,0)
 ... S DIR("A")="Do you want to do this?: "
"RTN","RCDPEWL",62,0)
 ... S DIR(0)="YA"
"RTN","RCDPEWL",63,0)
 ... D ^DIR K DIR
"RTN","RCDPEWL",64,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",65,0)
 ... I Y'=1 Q
"RTN","RCDPEWL",66,0)
 ... S DIE="^RCY(344.4,",DR=".09////3;.14////3",DA=RCERA D ^DIE S RCUNM=1
"RTN","RCDPEWL",67,0)
 .. I 'RCUNM D
"RTN","RCDPEWL",68,0)
 ... S DIR("A",1)="This ERA does NOT have a matching EFT",DIR("A")="Enter the number of the paper check you received for this ERA: ",DIR(0)="344.01,.07A"
"RTN","RCDPEWL",69,0)
 ... I $P(RC5,U,2)'="" S DIR("B")=$P(RC5,U,2)
"RTN","RCDPEWL",70,0)
 ... I $G(DIR("B"))="",$P(RC0,U,2)'="" S DIR("B")=$P(RC0,U,2)
"RTN","RCDPEWL",71,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",72,0)
 ... I $D(DTOUT)!$D(DUOUT)!(Y="") D  S RCQUIT=1 Q
"RTN","RCDPEWL",73,0)
 .... S DIR(0)="EA",DIR("A",1)="There must be either a paper check or an EFT for this ERA",DIR("A")="PRESS RETURN TO CONTINUE " W !!  D ^DIR K DIR
"RTN","RCDPEWL",74,0)
 ... S RCDAT("CHECK#")=Y
"RTN","RCDPEWL",75,0)
 ... S DIR(0)="344.01,.1O",DIR("B")=$$FMTE^XLFDT($P(RC0,U,4),2)
"RTN","RCDPEWL",76,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",77,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",78,0)
 ... S RCDAT("CHECKDT")=Y
"RTN","RCDPEWL",79,0)
 ... S DIR(0)="344.01,.08O"
"RTN","RCDPEWL",80,0)
 ... W ! D ^DIR K DIR
"RTN","RCDPEWL",81,0)
 ... I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL",82,0)
 ... S RCDAT("BANK")=Y
"RTN","RCDPEWL",83,0)
 ... S DIR("A",1)="ERA #"_RCERA_" (TRACE #:"_$P(RC0,U,2)_") matched to paper check "_RCDAT("CHECK#"),DIR("A")="Is this correct?: ",DIR(0)="YA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL",84,0)
 ... I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEWL",85,0)
 ... S DIE="^RCY(344.4,",DA=RCERA
"RTN","RCDPEWL",86,0)
 ... ; PRCA*4.5*326 - Add date matched and user for check match
"RTN","RCDPEWL",87,0)
 ... S DR=".13////"_RCDAT("CHECK#")_";.09////2;5.03///"_$$DT^XLFDT()_";5.04///"_$G(DUZ)
"RTN","RCDPEWL",88,0)
 ... D ^DIE
"RTN","RCDPEWL",89,0)
 ;
"RTN","RCDPEWL",90,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0))
"RTN","RCDPEWL",91,0)
 I 'RCSCR D  ; Build the entry in file 344.49
"RTN","RCDPEWL",92,0)
 . I RCSCR("NOEDIT") D  Q
"RTN","RCDPEWL",93,0)
 .. S DIR("A")="NO worklist entry exists for this ERA - PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL",94,0)
 . ;
"RTN","RCDPEWL",95,0)
 . S RCSCR=+$$ADDREC(RCERA,.RCDAT)
"RTN","RCDPEWL",96,0)
 . I RCSCR D  Q:'RCSCR
"RTN","RCDPEWL",97,0)
 .. F X=1:1:6 L +^RCY(344.4,RCSCR):5 Q:$T  I X=6 D  Q
"RTN","RCDPEWL",98,0)
 ... S DA=RCSCR,DIK="^RCY(344.49," D ^DIK S RCSCR=0
"RTN","RCDPEWL",99,0)
 ... S DIR(0)="EA",DIR("A",1)="Another user has locked this entry - NEW RECORD NOT CREATED",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL",100,0)
 .. Q:'RCSCR
"RTN","RCDPEWL",101,0)
 .. ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL",102,0)
 .. ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL",103,0)
 .. ;D SETBATCH^RCDPEWLB(RCSCR) ; prca*4.5*298
"RTN","RCDPEWL",104,0)
 .. D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEWL",105,0)
 .. K ^TMP($J,"BATCHES")
"RTN","RCDPEWL",106,0)
 ;
"RTN","RCDPEWL",107,0)
 I RCSCR D  G:'RCSCR DISPQ
"RTN","RCDPEWL",108,0)
 . ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL",109,0)
 . ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL",110,0)
 . ;Q:'$$BAT^RCDPEWL7(RCSCR)
"RTN","RCDPEWL",111,0)
 . ;I 'RCSCR("NOEDIT"),'$G(^TMP("RCBATCH_SELECTED",$J)) L +^RCY(344.4,RCSCR):5 I '$T W !!,"Another user is currently editing this entry",! S DIR(0)="E" D ^DIR K DIR S RCSCR=0 Q
"RTN","RCDPEWL",112,0)
 . I 'RCSCR("NOEDIT") L +^RCY(344.4,RCSCR):5 I '$T W !!,"Another user is currently editing this entry",! S DIR(0)="E" D ^DIR K DIR S RCSCR=0 Q
"RTN","RCDPEWL",113,0)
 . D EN^VALM("RCDPE EOB WORKLIST")
"RTN","RCDPEWL",114,0)
 ;
"RTN","RCDPEWL",115,0)
DISPQ L -^RCY(344.4,+$G(RCERA))
"RTN","RCDPEWL",116,0)
 Q
"RTN","RCDPEWL",117,0)
 ;
"RTN","RCDPEWL",118,0)
INIT ; -- set up initial variables
"RTN","RCDPEWL",119,0)
 N RCQUIT,RCREV
"RTN","RCDPEWL",120,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWL",121,0)
 S RCQUIT=0
"RTN","RCDPEWL",122,0)
 ; PRCA*4.5*298: Removed functionality for retrieving/storing user preferences in file #344.49
"RTN","RCDPEWL",123,0)
 ; and replaced with the use of parameters handled by PARAMS^RCDPEWLA.
"RTN","RCDPEWL",124,0)
 D PARAMS^RCDPEWLA("MO") I $G(RCQUIT) S VALMQUIT=1 Q
"RTN","RCDPEWL",125,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL",126,0)
 Q
"RTN","RCDPEWL",127,0)
 ;
"RTN","RCDPEWL",128,0)
CV ; Change View Action for EEOB Worklist
"RTN","RCDPEWL",129,0)
 D FULL^VALM1
"RTN","RCDPEWL",130,0)
 D PARAMS^RCDPEWLA("CV")
"RTN","RCDPEWL",131,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM"))),HDR
"RTN","RCDPEWL",132,0)
 S VALMBCK="R",VALMBG=1
"RTN","RCDPEWL",133,0)
 Q
"RTN","RCDPEWL",134,0)
 ;
"RTN","RCDPEWL",135,0)
ADDREC(RCERA,RCDAT) ; Add a record to file 344.49
"RTN","RCDPEWL",136,0)
 ; RCERA = ien of file 344.4
"RTN","RCDPEWL",137,0)
 ; RCDAT = array containing additional data to add to new entry
"RTN","RCDPEWL",138,0)
 ;
"RTN","RCDPEWL",139,0)
 N DIC,DLAYGO,X,Y,DO,DD,RCY,DINUM
"RTN","RCDPEWL",140,0)
 S RCY=0,DIC("DR")=""
"RTN","RCDPEWL",141,0)
 S DIC(0)="L",DLAYGO=344.49,(DINUM,X)=RCERA,DIC="^RCY(344.49,"
"RTN","RCDPEWL",142,0)
 I $G(RCDAT("CHECK#"))'="" S DIC("DR")=".04////"_RCDAT("CHECK#")_";"
"RTN","RCDPEWL",143,0)
 I $G(RCDAT("CHECKDT"))'="" S DIC("DR")=DIC("DR")_".05////"_RCDAT("CHECKDT")_";"
"RTN","RCDPEWL",144,0)
 I $G(RCDAT("BANK"))'="" S DIC("DR")=DIC("DR")_".06////"_RCDAT("BANK")_";"
"RTN","RCDPEWL",145,0)
 K DD,DO D FILE^DICN K DIC
"RTN","RCDPEWL",146,0)
 I Y>0 S RCY=+Y
"RTN","RCDPEWL",147,0)
 Q RCY
"RTN","RCDPEWL",148,0)
 ;
"RTN","RCDPEWL",149,0)
HDR ; Creates header lines for the selected ERA display
"RTN","RCDPEWL",150,0)
 N X,Z,I,RC,RC5,RC4,RCARC,RCSORTBY,RCEEOBPU ; PRCA*4.5*326 - RCARC added
"RTN","RCDPEWL",151,0)
 F I=1:1:5 S VALMHDR(I)=""
"RTN","RCDPEWL",152,0)
 I '$G(RCSCR) S VALMQUIT=1 Q
"RTN","RCDPEWL",153,0)
 S RC=$G(^RCY(344.4,+RCSCR,0)),RC5=$G(^RCY(344.4,+RCSCR,5))
"RTN","RCDPEWL",154,0)
 S RC4=$G(^RCY(344.4,+RCSCR,4))  ;prca*4.5*298 
"RTN","RCDPEWL",155,0)
 S VALMHDR(1)=$E("ERA Entry #: "_$P(RC,U)_$J("",31),1,31)_"Total Amt Pd: "_$J(+$P(RC,U,5),"",2)
"RTN","RCDPEWL",156,0)
 S VALMHDR(2)="Payer Name/ID: "_$P(RC,U,6)_"/"_$P(RC,U,3)
"RTN","RCDPEWL",157,0)
 S Z=+$O(^RCY(344.31,"AERA",+RCSCR,0))
"RTN","RCDPEWL",158,0)
 I Z S VALMHDR(3)="EFT #/TRACE #: "_$$GET1^DIQ(344.31,Z_",",.01,"E")_"/"_$E($P(RC,U,2),1,40) ; PRCA*4.5*326
"RTN","RCDPEWL",159,0)
 I 'Z,$P(RC5,U,2)'="" S VALMHDR(3)="PAPER CHECK #: "_$P(RC5,U,2)
"RTN","RCDPEWL",160,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL",161,0)
 ; batches but just remove from execution.
"RTN","RCDPEWL",162,0)
 ;I $G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL",163,0)
 ;. N Z,Z0
"RTN","RCDPEWL",164,0)
 ;. S Z=+$G(^TMP("RCBATCH_SELECTED",$J)),Z0=$G(^RCY(344.49,RCSCR,3,Z,0))
"RTN","RCDPEWL",165,0)
 ;. S RCT=RCT+1,VALMHDR(RCT)="BATCH: "_Z_"  "_$P(Z0,U,2)_"  "_$$EXTERNAL^DILFD(344.493,.03,"",$P(Z0,U,3))
"RTN","RCDPEWL",166,0)
 I $G(RCSCR("NOEDIT")) D
"RTN","RCDPEWL",167,0)
 . S VALMHDR(4)="*** RECEIPT(S) ALREADY CREATED *** ("_$$RECEIPTS(RCSCR)_")"
"RTN","RCDPEWL",168,0)
 I $P(RC4,U,2)]"" D  ;AUTO-POST STATUS (344.4, 4.02);  if not null, then the selected ERA is designated for auto-post
"RTN","RCDPEWL",169,0)
 . ; Setting the Auto-Post info in the header
"RTN","RCDPEWL",170,0)
 . N AUTOPSTS
"RTN","RCDPEWL",171,0)
 . S AUTOPSTS="Auto-Post Status: "_$S($P(RC4,U,2)=0:"Unposted",$P(RC4,U,2)=1:"Partial",1:"Complete")
"RTN","RCDPEWL",172,0)
 . S AUTOPSTS=AUTOPSTS_"    Auto-Post Date: "_$S($P(RC4,U,2)>0:$$FMTE^XLFDT($P(RC4,U)),1:"") ; PRCA*4.5*318
"RTN","RCDPEWL",173,0)
 . S VALMHDR(5)=AUTOPSTS
"RTN","RCDPEWL",174,0)
 ; BEGIN PRCA*4,.5*326
"RTN","RCDPEWL",175,0)
 ; Check for auto-decrease CARCs if this is a denial ERA
"RTN","RCDPEWL",176,0)
 I $$GET1^DIQ(344.4,+RCSCR,.15)="NON" D
"RTN","RCDPEWL",177,0)
 .N RCARC
"RTN","RCDPEWL",178,0)
 .S RCARC=$$WLH^RCDPEWLZ(+RCSCR)
"RTN","RCDPEWL",179,0)
 .S:RCARC]"" VALMHDR(4)=RCARC
"RTN","RCDPEWL",180,0)
 ; ENd PRCA*4,.5*326
"RTN","RCDPEWL",181,0)
 ; Displaying Current View (PRCA*4.5*298)
"RTN","RCDPEWL",182,0)
 S $E(VALMHDR(1),60)="Current View:"
"RTN","RCDPEWL",183,0)
 S RCSORTBY=$G(^TMP($J,"RC_SORTPARM"))
"RTN","RCDPEWL",184,0)
 S $E(VALMHDR(2),60)=$S(RCSORTBY="F":"ZERO-PAYMENTS FIRST",RCSORTBY="L":"ZERO-PAYMENTS LAST",1:"NO SORT ORDER")
"RTN","RCDPEWL",185,0)
 S RCEEOBPU=$G(^TMP($J,"RC_EEOBPOST"))
"RTN","RCDPEWL",186,0)
 S $E(VALMHDR(3),60)=$S(RCEEOBPU="P":"POSTED EEOBs ONLY",RCEEOBPU="U":"UNPOSTED EEOBs ONLY",1:"ALL EEOBS")
"RTN","RCDPEWL",187,0)
 Q
"RTN","RCDPEWL",188,0)
 ;
"RTN","RCDPEWL",189,0)
FNL ; -- Clean up list
"RTN","RCDPEWL",190,0)
 K ^TMP("RCDPE-EOB_WLDX",$J),^TMP("RCDPE-EOB_WL",$J),^TMP($J,"RC_SORTPARM"),^TMP($J,"RC_BILL")
"RTN","RCDPEWL",191,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","RCDPEWL",192,0)
 K RCFASTXT
"RTN","RCDPEWL",193,0)
 Q
"RTN","RCDPEWL",194,0)
 ;
"RTN","RCDPEWL",195,0)
SEL(RCDA) ; Select entry from worklist scratch pad screen
"RTN","RCDPEWL",196,0)
 ; RCDA = array returned if selections made
"RTN","RCDPEWL",197,0)
 ;    RCDA(n)=ien of entry(s) in file 344.41 
"RTN","RCDPEWL",198,0)
 ;            where n = the line # selected  
"RTN","RCDPEWL",199,0)
 K RCDA
"RTN","RCDPEWL",200,0)
 N VALMY
"RTN","RCDPEWL",201,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL",202,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RCDA(RCDA)=$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCDA)),U,2,5)
"RTN","RCDPEWL",203,0)
 Q
"RTN","RCDPEWL",204,0)
 ;
"RTN","RCDPEWL",205,0)
NOEDIT ; Display no edit allowed if receipt exists
"RTN","RCDPEWL",206,0)
 N DIR,X,Y
"RTN","RCDPEWL",207,0)
 S DIR(0)="EA",DIR("A",1)="This action is NOT available since the ERA already has a receipt."
"RTN","RCDPEWL",208,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL",209,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWL",210,0)
 Q
"RTN","RCDPEWL",211,0)
 ;
"RTN","RCDPEWL",212,0)
NOBATCH ; Display action not allowed if working at batch level not the ERA level
"RTN","RCDPEWL",213,0)
 N DIR,X,Y
"RTN","RCDPEWL",214,0)
 S DIR(0)="EA",DIR("A",1)="This action is NOT valid when in a batch within the ERA."
"RTN","RCDPEWL",215,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL",216,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWL",217,0)
 Q
"RTN","RCDPEWL",218,0)
 ;
"RTN","RCDPEWL",219,0)
RECEIPTS(RCSCR) ; get list of receipts for the ERA 
"RTN","RCDPEWL",220,0)
 ; Input: RCSCR: ERA File (#344.4) IEN
"RTN","RCDPEWL",221,0)
 ; Output: "" - No Receipt / REC# - One Receipt / REC#A-REC#Z - Range of Receipts
"RTN","RCDPEWL",222,0)
 N X,RECEIPT,CTR,RC0
"RTN","RCDPEWL",223,0)
 K ARRAY,STR
"RTN","RCDPEWL",224,0)
 S X=0,CTR=1,(STR,RECEIPT)=""
"RTN","RCDPEWL",225,0)
 F  S X=$O(^RCY(344.4,RCSCR,1,"RECEIPT",X)) Q:'X  D
"RTN","RCDPEWL",226,0)
 . S:X RECEIPT=$P($G(^RCY(344,X,0)),U)  ; get external form of receipt 
"RTN","RCDPEWL",227,0)
 . I RECEIPT]"" S ARRAY(RECEIPT)=""
"RTN","RCDPEWL",228,0)
 ; array of receipts does not exist so this could be a non auto-posted ERA; so only 1 receipt will be assigned; retrieve at 344.4, .08
"RTN","RCDPEWL",229,0)
 I '$D(ARRAY),$$GET1^DIQ(344.4,RCSCR,.08)'="" S ARRAY($$GET1^DIQ(344.4,RCSCR,.08))=""
"RTN","RCDPEWL",230,0)
 ;
"RTN","RCDPEWL",231,0)
 I $O(ARRAY($O(ARRAY(""))))'="" D
"RTN","RCDPEWL",232,0)
 . S STR=$O(ARRAY(""))_"-"_$O(ARRAY(""),-1)
"RTN","RCDPEWL",233,0)
 E  D
"RTN","RCDPEWL",234,0)
 . S STR=$O(ARRAY(""))
"RTN","RCDPEWL",235,0)
 Q STR
"RTN","RCDPEWL0")
0^38^B210141800
"RTN","RCDPEWL0",1,0)
RCDPEWL0 ;ALB/TMK/PJH - ELECTRONIC EOB WORKLIST ACTIONS ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL0",2,0)
 ;;4.5;Accounts Receivable;**173,208,252,269,298,317,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEWL0",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL0",4,0)
 Q
"RTN","RCDPEWL0",5,0)
 ;
"RTN","RCDPEWL0",6,0)
PARAMS(SOURCE) ; Retrieve/Edit/Save View Parameters for ERA Worklist
"RTN","RCDPEWL0",7,0)
 ; Input:   SOURCE      - "MO" - Menu Option
"RTN","RCDPEWL0",8,0)
 ;                        "CV" - Change View Action
"RTN","RCDPEWL0",9,0)
 ; Output: Sort/Filtering Criteria for the worklist sent into ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWL0",10,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCPOST") - ERA Posting Status ("P":Posted/"U":Unposted)
"RTN","RCDPEWL0",11,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCAUTOP")- Auto-Posting Queue
"RTN","RCDPEWL0",12,0)
 ;                                            ("A":Auto-Posting/"N":Non Auto-Posting/"B":Both)
"RTN","RCDPEWL0",13,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCAPSTA")- Auto-Posting Status  ; PRCA*4.5*326
"RTN","RCDPEWL0",14,0)
 ;                                            ("M":Marked/"P":Partial/"C":Complete/"A":All)
"RTN","RCDPEWL0",15,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCMATCH")- ERA Matching Status ("M":Matched/"U":Unmatched)
"RTN","RCDPEWL0",16,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCTYPE") - ERA Claim Type ("M":Medical/"P":Pharmacy/"B":Both)
"RTN","RCDPEWL0",17,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCDT")   - A1^A2 Where:
"RTN","RCDPEWL0",18,0)
 ;                                            A1 - ERA Received EARLIEST DATE (Range Limited Only)
"RTN","RCDPEWL0",19,0)
 ;                                            A2 - ERA Received LATEST DATE (Range Limited Only)
"RTN","RCDPEWL0",20,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCPAYR") - B1^B2^B3 Where:
"RTN","RCDPEWL0",21,0)
 ;                                            B1 - All Payers/Range of Payers
"RTN","RCDPEWL0",22,0)
 ;                                                 ("A": All/"R":Range of Payers)
"RTN","RCDPEWL0",23,0)
 ;                                            B2 - START WITH PAYER (e.g.,'AET')
"RTN","RCDPEWL0",24,0)
 ;                                                 (Range Limited Only)
"RTN","RCDPEWL0",25,0)
 ;                                            B3 - GO TO PAYER (e.g.,'AETZ') (Range Limited Only)
"RTN","RCDPEWL0",26,0)
 ;
"RTN","RCDPEWL0",27,0)
 ;         ^TMP("RCERA_PVW",$J) - Same layout as ^TMP("RCERA_PARAMS",$J).  This global contains
"RTN","RCDPEWL0",28,0)
 ;                                the sort/filters of the user's preferred view (for ERA main page)
"RTN","RCDPEWL0",29,0)
 ;                                while ^TMP("RCERA_PARAMS",$J) contains the sort/filters of what is
"RTN","RCDPEWL0",30,0)
 ;                                currently displayed.  They may or may not be the same values.
"RTN","RCDPEWL0",31,0)
 ;
"RTN","RCDPEWL0",32,0)
 ;          ^TMP("RCSCRATCH_PVW",$J)   - This global contains the sort/filters of the user's preferred view
"RTN","RCDPEWL0",33,0)
 ;                                for the Scratch Pad.  See PARAMS^RCDPEWLA for the layout.
"RTN","RCDPEWL0",34,0)
 ;
"RTN","RCDPEWL0",35,0)
 ;         RCQUIT=1 if the user exited out, 0 otherwise
"RTN","RCDPEWL0",36,0)
 ;
"RTN","RCDPEWL0",37,0)
 N RCXPAR,USEPVW,X,XX,Y                ; PRCA*4.5*317 Added USEPVW,XX
"RTN","RCDPEWL0",38,0)
 S RCQUIT=0
"RTN","RCDPEWL0",39,0)
 ;
"RTN","RCDPEWL0",40,0)
 ; Ask Date Range Selection when coming straight from the menu option
"RTN","RCDPEWL0",41,0)
 I SOURCE="MO" D  Q:RCQUIT
"RTN","RCDPEWL0",42,0)
 . K ^TMP("RCERA_PARAMS",$J),^TMP("RCERA_PVW",$J),^TMP("RCSCRATCH_PVW",$J)
"RTN","RCDPEWL0",43,0)
 . S RCQUIT=$$DTR()  ; Set date range filter
"RTN","RCDPEWL0",44,0)
 . Q:RCQUIT
"RTN","RCDPEWL0",45,0)
 . ;
"RTN","RCDPEWL0",46,0)
 . ;Retrieve user's saved preferred view (if any)
"RTN","RCDPEWL0",47,0)
 . D GETWLPVW(.RCXPAR)
"RTN","RCDPEWL0",48,0)
 ;
"RTN","RCDPEWL0",49,0)
 ;Only ask user if they want to use their preferred view in the following scenarios:
"RTN","RCDPEWL0",50,0)
 ; a) Source is "MO" and user has a preferred view on file
"RTN","RCDPEWL0",51,0)
 ; b) Source is "CV" (change view action), user has a preferred view but is
"RTN","RCDPEWL0",52,0)
 ;    not using the preferred view criteria at this time.
"RTN","RCDPEWL0",53,0)
 S XX=$$PREFVW(SOURCE)
"RTN","RCDPEWL0",54,0)
 I ((XX=1)&(SOURCE="MO"))!((XX=0)&(SOURCE="CV")) D  Q:USEPVW
"RTN","RCDPEWL0",55,0)
 . ;
"RTN","RCDPEWL0",56,0)
 . ; Ask the user if they want to use the preferred view
"RTN","RCDPEWL0",57,0)
 . S USEPVW=$$ASKUVW()
"RTN","RCDPEWL0",58,0)
 . I USEPVW=-1 S RCQUIT=1 Q
"RTN","RCDPEWL0",59,0)
 . Q:'USEPVW
"RTN","RCDPEWL0",60,0)
 . ;
"RTN","RCDPEWL0",61,0)
 . ; Set the Sort/Filtering Criteria from the preferred view 
"RTN","RCDPEWL0",62,0)
 . M ^TMP("RCERA_PARAMS",$J)=^TMP("RCERA_PVW",$J)
"RTN","RCDPEWL0",63,0)
 ;
"RTN","RCDPEWL0",64,0)
 W !!,"Select parameters for displaying the list of ERAs"
"RTN","RCDPEWL0",65,0)
 S RCQUIT=$$PARAMS2^RCDPEWLD()
"RTN","RCDPEWL0",66,0)
 Q:RCQUIT
"RTN","RCDPEWL0",67,0)
 D SAVEPVW                                  ; Ask if they want to save as preferred view
"RTN","RCDPEWL0",68,0)
 Q
"RTN","RCDPEWL0",69,0)
 ;
"RTN","RCDPEWL0",70,0)
GETWLPVW(RCXPAR) ;  Retrieves the preferred view settings for the ERA worklist
"RTN","RCDPEWL0",71,0)
 ; for the user
"RTN","RCDPEWL0",72,0)
 ; Input:   None
"RTN","RCDPEWL0",73,0)
 ; Output:  RCXPAR()               - Array of preferred view sort/filter criteria
"RTN","RCDPEWL0",74,0)
 ;          ^TMP("RCERA_PARAMS",$J)- Global array of preferred view settings
"RTN","RCDPEWL0",75,0)
 ;          ^TMP("RCERA_PVW")      - A copy of the preferred settings (if any)
"RTN","RCDPEWL0",76,0)
 N XX
"RTN","RCDPEWL0",77,0)
 K RCXPAR
"RTN","RCDPEWL0",78,0)
 D GETLST^XPAR(.RCXPAR,"USR","RCDPE EDI LOCKBOX WORKLIST","I")
"RTN","RCDPEWL0",79,0)
 D:$D(RCXPAR("ERA_POSTING_STATUS")) PVWSAVE(.RCXPAR)
"RTN","RCDPEWL0",80,0)
 ;
"RTN","RCDPEWL0",81,0)
 S XX=$G(RCXPAR("ERA_POSTING_STATUS"))
"RTN","RCDPEWL0",82,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPOST")=$S(XX'="":XX,1:"U")
"RTN","RCDPEWL0",83,0)
 S XX=$G(RCXPAR("ERA_AUTO_POSTING"))
"RTN","RCDPEWL0",84,0)
 S ^TMP("RCERA_PARAMS",$J,"RCAUTOP")=$S(XX'="":XX,1:"B")
"RTN","RCDPEWL0",85,0)
 S XX=$G(RCXPAR("ERA-EFT_MATCH_STATUS"))
"RTN","RCDPEWL0",86,0)
 S ^TMP("RCERA_PARAMS",$J,"RCMATCH")=$S(XX'="":XX,1:"B")
"RTN","RCDPEWL0",87,0)
 S XX=$G(RCXPAR("ERA_CLAIM_TYPE"))
"RTN","RCDPEWL0",88,0)
 ; S ^TMP("RCERA_PARAMS",$J,"RCTYPE")=$S(XX'="":XX,1:"B")     ; PRCA*4.5*321
"RTN","RCDPEWL0",89,0)
 S ^TMP("RCERA_PARAMS",$J,"RCTYPE")=$S(XX'="":XX,1:"A")       ; PRCA*4.5*321 change default to (A)LL
"RTN","RCDPEWL0",90,0)
 S XX=$G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))
"RTN","RCDPEWL0",91,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=$S(XX'="":$TR(XX,";","^"),1:"A")
"RTN","RCDPEWL0",92,0)
 S XX=$G(RCXPAR("ERA_PAYMENT_TYPE"))                                 ; PRCA*4.5*321 new filter
"RTN","RCDPEWL0",93,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPAYMNT")=$S(XX'="":XX,1:"B")            ; PRCA*4.5*321
"RTN","RCDPEWL0",94,0)
 S XX=$G(RCXPAR("AUTO-POST_STATUS")) ; PRCA*4.5*326
"RTN","RCDPEWL0",95,0)
 S ^TMP("RCERA_PARAMS",$J,"RCAPSTA")=$S(XX'="":XX,1:"A") ; PRCA*4.5*326
"RTN","RCDPEWL0",96,0)
 Q
"RTN","RCDPEWL0",97,0)
 ;
"RTN","RCDPEWL0",98,0)
PVWSAVE(RCXPAR) ; Save a copy of the preferred view on file
"RTN","RCDPEWL0",99,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEWL0",100,0)
 ; Input:   RCXPAR            - array of preferred view setting for the user
"RTN","RCDPEWL0",101,0)
 ; Output:  ^TMP("RCERA_PVW") - a copy of the preferred settings
"RTN","RCDPEWL0",102,0)
 ;
"RTN","RCDPEWL0",103,0)
 K ^TMP("RCERA_PVW",$J)
"RTN","RCDPEWL0",104,0)
 ; only continue if we have answers to all ERA Worklist related preferred view prompts
"RTN","RCDPEWL0",105,0)
 Q:'$D(RCXPAR("ERA_POSTING_STATUS"))
"RTN","RCDPEWL0",106,0)
 Q:'$D(RCXPAR("ERA_AUTO_POSTING"))
"RTN","RCDPEWL0",107,0)
 Q:'$D(RCXPAR("ERA-EFT_MATCH_STATUS"))
"RTN","RCDPEWL0",108,0)
 Q:'$D(RCXPAR("ERA_CLAIM_TYPE"))
"RTN","RCDPEWL0",109,0)
 Q:'$D(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))
"RTN","RCDPEWL0",110,0)
 Q:'$D(RCXPAR("ERA_PAYMENT_TYPE"))  ; PRCA*4.5*321
"RTN","RCDPEWL0",111,0)
 Q:'$D(RCXPAR("AUTO-POST_STATUS"))  ; PRCA*4.5*326
"RTN","RCDPEWL0",112,0)
 ;
"RTN","RCDPEWL0",113,0)
 S ^TMP("RCERA_PVW",$J,"RCPOST")=RCXPAR("ERA_POSTING_STATUS")
"RTN","RCDPEWL0",114,0)
 S ^TMP("RCERA_PVW",$J,"RCAUTOP")=RCXPAR("ERA_AUTO_POSTING")
"RTN","RCDPEWL0",115,0)
 S ^TMP("RCERA_PVW",$J,"RCMATCH")=RCXPAR("ERA-EFT_MATCH_STATUS")
"RTN","RCDPEWL0",116,0)
 S ^TMP("RCERA_PVW",$J,"RCTYPE")=RCXPAR("ERA_CLAIM_TYPE")
"RTN","RCDPEWL0",117,0)
 S ^TMP("RCERA_PVW",$J,"RCPAYR")=$TR(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"),";","^")
"RTN","RCDPEWL0",118,0)
 S ^TMP("RCERA_PVW",$J,"RCPAYMNT")=RCXPAR("ERA_PAYMENT_TYPE") ; PRCA*4.5*321 new filter
"RTN","RCDPEWL0",119,0)
 S ^TMP("RCERA_PVW",$J,"RCPAPST")=RCXPAR("AUTO-POST_STATUS") ; PRCA*4.5*326
"RTN","RCDPEWL0",120,0)
 Q
"RTN","RCDPEWL0",121,0)
 ;
"RTN","RCDPEWL0",122,0)
PREFVW(SOURCE) ; Checks to see if the user has a preferred view
"RTN","RCDPEWL0",123,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEWL0",124,0)
 ; When source is 'CV', checks to see if the preferred view is being used
"RTN","RCDPEWL0",125,0)
 ; Input:   SOURCE                  - 'MO' - When called from the Worklist menu
"RTN","RCDPEWL0",126,0)
 ;                                           option
"RTN","RCDPEWL0",127,0)
 ;                                    'CV' - When called from the Change View
"RTN","RCDPEWL0",128,0)
 ;                                           action
"RTN","RCDPEWL0",129,0)
 ;
"RTN","RCDPEWL0",130,0)
 ;          ^TMP("RCERA_PVW")       - Global array of preferred view settings
"RTN","RCDPEWL0",131,0)
 ;          ^TMP("RCERA_PARAMS")    - Global array of currently in use defaults
"RTN","RCDPEWL0",132,0)
 ; Returns: 1 - User has preferred view if SOURCE is 'MO' or is using
"RTN","RCDPEWL0",133,0)
 ;              their preferred view if SOURCE is 'CV'
"RTN","RCDPEWL0",134,0)
 ;          0 - User is not using their preferred view
"RTN","RCDPEWL0",135,0)
 ;         -1 - User does not have a preferred view 
"RTN","RCDPEWL0",136,0)
 I SOURCE="MO" Q $S($D(^TMP("RCERA_PVW",$J)):1,1:-1)
"RTN","RCDPEWL0",137,0)
 Q:'$D(^TMP("RCERA_PVW",$J)) -1  ; No stored preferred view
"RTN","RCDPEWL0",138,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))'=$G(^TMP("RCERA_PVW",$J,"RCPOST")) 0
"RTN","RCDPEWL0",139,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))'=$G(^TMP("RCERA_PVW",$J,"RCAUTOP")) 0
"RTN","RCDPEWL0",140,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCMATCH"))'=$G(^TMP("RCERA_PVW",$J,"RCMATCH")) 0
"RTN","RCDPEWL0",141,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))'=$G(^TMP("RCERA_PVW",$J,"RCTYPE")) 0
"RTN","RCDPEWL0",142,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))'=$G(^TMP("RCERA_PVW",$J,"RCPAYR")) 0
"RTN","RCDPEWL0",143,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))'=$G(^TMP("RCERA_PVW",$J,"RCPAYMNT")) 0  ; PRCA*4.5*321
"RTN","RCDPEWL0",144,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCAPSTA"))'=$G(^TMP("RCERA_PVW",$J,"RCAPSTA")) 0 ; PRCA*4.5*326
"RTN","RCDPEWL0",145,0)
 Q 1
"RTN","RCDPEWL0",146,0)
 ;
"RTN","RCDPEWL0",147,0)
ASKUVW() ;EP from PARAMS^RCDPEWLA, PARAMS^RCDPEAA1
"RTN","RCDPEWL0",148,0)
 ; Prompts the user to see if they want to use their preferred view
"RTN","RCDPEWL0",149,0)
 ; PRCA*4.5*317 added function
"RTN","RCDPEWL0",150,0)
 ; Input:   None
"RTN","RCDPEWL0",151,0)
 ; Returns: 1 - User wants to use their preferred view
"RTN","RCDPEWL0",152,0)
 ;          0 - User does not want to use their preferred view
"RTN","RCDPEWL0",153,0)
 ;         -1 - User typed '^'
"RTN","RCDPEWL0",154,0)
 N DIR,DTOUT,DUOUT
"RTN","RCDPEWL0",155,0)
 S DIR(0)="Y"
"RTN","RCDPEWL0",156,0)
 S DIR("A")="Use preferred view"
"RTN","RCDPEWL0",157,0)
 S DIR("B")="N"
"RTN","RCDPEWL0",158,0)
 W !
"RTN","RCDPEWL0",159,0)
 D ^DIR
"RTN","RCDPEWL0",160,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPEWL0",161,0)
 Q:Y 1   ; response is YES
"RTN","RCDPEWL0",162,0)
 Q 0
"RTN","RCDPEWL0",163,0)
 ;
"RTN","RCDPEWL0",164,0)
SAVEPVW ; Option to save as User Preferred View
"RTN","RCDPEWL0",165,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEWL0",166,0)
 ; Input:   ^TMP("RCERA_PARAMS")    - Global array of current worklist settings
"RTN","RCDPEWL0",167,0)
 ; Output   Current worklist settings set as preferred view (potentially)
"RTN","RCDPEWL0",168,0)
 N DIR,DTOUT,DUOUT,RCERROR,XX
"RTN","RCDPEWL0",169,0)
 K DIR
"RTN","RCDPEWL0",170,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEWL0",171,0)
 S DIR("A")="Do you want to save this as your preferred view (Y/N)? "
"RTN","RCDPEWL0",172,0)
 W !
"RTN","RCDPEWL0",173,0)
 D ^DIR
"RTN","RCDPEWL0",174,0)
 Q:Y'=1
"RTN","RCDPEWL0",175,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCPOST")
"RTN","RCDPEWL0",176,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_POSTING_STATUS",XX,.RCERROR)
"RTN","RCDPEWL0",177,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCAUTOP")
"RTN","RCDPEWL0",178,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_AUTO_POSTING",XX,.RCERROR)
"RTN","RCDPEWL0",179,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCMATCH")
"RTN","RCDPEWL0",180,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA-EFT_MATCH_STATUS",XX,.RCERROR)
"RTN","RCDPEWL0",181,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCTYPE")
"RTN","RCDPEWL0",182,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_CLAIM_TYPE",XX,.RCERROR)
"RTN","RCDPEWL0",183,0)
 S XX=$TR(^TMP("RCERA_PARAMS",$J,"RCPAYR"),"^",";")
"RTN","RCDPEWL0",184,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ALL_PAYERS/RANGE_OF_PAYERS",XX,.RCERROR)
"RTN","RCDPEWL0",185,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCPAYMNT")                                               ; PRCA*4.5*321
"RTN","RCDPEWL0",186,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_PAYMENT_TYPE",XX,.RCERROR) ; PRCA*4.5*321
"RTN","RCDPEWL0",187,0)
 S XX=$TR(^TMP("RCERA_PARAMS",$J,"RCAPSTA"),"^",";") ; PRCA*4.5*326
"RTN","RCDPEWL0",188,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","AUTO-POST_STATUS",XX,.RCERROR) ; PRCA*4.5*326
"RTN","RCDPEWL0",189,0)
 ;
"RTN","RCDPEWL0",190,0)
 K ^TMP("RCERA_PVW",$J)
"RTN","RCDPEWL0",191,0)
 M ^TMP("RCERA_PVW",$J)=^TMP("RCERA_PARAMS",$J)  ; capture new preferred settings for comparison
"RTN","RCDPEWL0",192,0)
 Q
"RTN","RCDPEWL0",193,0)
 ;
"RTN","RCDPEWL0",194,0)
DTR() ; Date Range Selection
"RTN","RCDPEWL0",195,0)
 ; Input:   ^TMP("RCERA_PARAMS",$J,"RCDT") - Current selected Date Range (if any)
"RTN","RCDPEWL0",196,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCDT") - Updated Selected Date Range
"RTN","RCDPEWL0",197,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWL0",198,0)
DTR1 ;
"RTN","RCDPEWL0",199,0)
 N DIR,DTOUT,DTQUIT,DUOUT,Y,FROM,TO,RCDTRNG
"RTN","RCDPEWL0",200,0)
 S ^TMP("RCERA_PARAMS",$J,"RCDT")="0^"_DT
"RTN","RCDPEWL0",201,0)
 K DIR S DIR(0)="YA"
"RTN","RCDPEWL0",202,0)
 S DIR("A")="Limit the selection to a date range when the ERA was received?: "
"RTN","RCDPEWL0",203,0)
 S DIR("B")="NO"
"RTN","RCDPEWL0",204,0)
 S DIR("?")="Enter YES to specify a date range filter."
"RTN","RCDPEWL0",205,0)
 W !
"RTN","RCDPEWL0",206,0)
 D ^DIR
"RTN","RCDPEWL0",207,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWL0",208,0)
 I Y D  G:DTQUIT DTR1
"RTN","RCDPEWL0",209,0)
 . S DTQUIT=0
"RTN","RCDPEWL0",210,0)
 . S FROM=$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),"^",1)
"RTN","RCDPEWL0",211,0)
 . S TO=$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),"^",2)
"RTN","RCDPEWL0",212,0)
 . W !
"RTN","RCDPEWL0",213,0)
 . S RCDTRNG=$$DTRANGE(FROM,TO)
"RTN","RCDPEWL0",214,0)
 . I RCDTRNG="^" S DTQUIT=1 Q
"RTN","RCDPEWL0",215,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCDT")=RCDTRNG
"RTN","RCDPEWL0",216,0)
 Q 0
"RTN","RCDPEWL0",217,0)
 ;
"RTN","RCDPEWL0",218,0)
DTRANGE(DEFFROM,DEFTO) ; Asks for and returns a Date Range
"RTN","RCDPEWL0",219,0)
 ; Input: DEFFROM - Default FROM date
"RTN","RCDPEWL0",220,0)
 ;        DEFTO   - Default TO date
"RTN","RCDPEWL0",221,0)
 ;Output: From_Date^To_Date (YYYMMDD^YYYDDMM) or "^" (timeout or ^ entered)
"RTN","RCDPEWL0",222,0)
 ;
"RTN","RCDPEWL0",223,0)
 N DIR,Y,DTOUT,DUOUT,RCDFR,START
"RTN","RCDPEWL0",224,0)
 S RCQUIT=0
"RTN","RCDPEWL0",225,0)
 S DIR(0)="DAE^:"_DT_":E"
"RTN","RCDPEWL0",226,0)
 S DIR("A")="Earliest date: "
"RTN","RCDPEWL0",227,0)
 S DIR("?")="Enter the start of the date range."
"RTN","RCDPEWL0",228,0)
 S:($G(DEFFROM)) DIR("B")=$$FMTE^XLFDT(DEFFROM,2)
"RTN","RCDPEWL0",229,0)
 D ^DIR
"RTN","RCDPEWL0",230,0)
 I $D(DTOUT)!$D(DUOUT) Q "^"
"RTN","RCDPEWL0",231,0)
 S RCDFR=Y,START=$$FMTE^XLFDT(RCDFR,"2DZ")
"RTN","RCDPEWL0",232,0)
 K DIR
"RTN","RCDPEWL0",233,0)
 S DIR(0)="DAE^"_RCDFR_":"_DT_":E"
"RTN","RCDPEWL0",234,0)
 S DIR("A")="Latest date: "
"RTN","RCDPEWL0",235,0)
 S DIR("?",1)="Enter the end of the date range. The ending date must be greater than "
"RTN","RCDPEWL0",236,0)
 S DIR("?")="or equal to "_START_"."
"RTN","RCDPEWL0",237,0)
 S:($G(DEFTO)) DIR("B")=$$FMTE^XLFDT(DEFTO,2)
"RTN","RCDPEWL0",238,0)
 D ^DIR
"RTN","RCDPEWL0",239,0)
 I $D(DTOUT)!$D(DUOUT) Q "^"
"RTN","RCDPEWL0",240,0)
 Q (RCDFR_"^"_Y)
"RTN","RCDPEWL0",241,0)
 ;
"RTN","RCDPEWL0",242,0)
SPLIT ; Split line in ERA list
"RTN","RCDPEWL0",243,0)
 ; input - RCSCR = ien of 344.49 and 344.4
"RTN","RCDPEWL0",244,0)
 N RCLINE,RCZ,RCDA,Q,Q0,Z,Z0,DIR,X,Y,CT,L,L1,RCONE,RCQUIT
"RTN","RCDPEWL0",245,0)
 D FULL^VALM1
"RTN","RCDPEWL0",246,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G SPLITQ   ;prca*4.5*298  auto-posted ERAs cannot enter Split/Edit action
"RTN","RCDPEWL0",247,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G SPLITQ
"RTN","RCDPEWL0",248,0)
 W !!,"Select the entry that has a line you need to Split/Edit",!
"RTN","RCDPEWL0",249,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEWL0",250,0)
 S Z=+$O(RCDA(0)) G:'$G(RCDA(Z)) SPLITQ
"RTN","RCDPEWL0",251,0)
 S RCLINE=+RCDA(Z),Z0=+$O(^TMP("RCDPE-EOB_WLDX",$J,Z_".999"),-1)
"RTN","RCDPEWL0",252,0)
 S RCZ=Z F  S RCZ=$O(^TMP("RCDPE-EOB_WLDX",$J,RCZ)) Q:'RCZ!(RCZ\1'=Z)  D
"RTN","RCDPEWL0",253,0)
 . S Q=$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCZ)),U,2)
"RTN","RCDPEWL0",254,0)
 . Q:'Q
"RTN","RCDPEWL0",255,0)
 . S RCZ(RCZ)=Q
"RTN","RCDPEWL0",256,0)
 . S Q0=0 F  S Q0=$O(^RCY(344.49,RCSCR,1,Q,1,Q0)) Q:'Q0  I "01"[$P($G(^(Q0,0)),U,2) K RCZ(RCZ) Q
"RTN","RCDPEWL0",257,0)
 I '$O(RCZ(0)) D  G SPLITQ
"RTN","RCDPEWL0",258,0)
 . S DIR(0)="EA",DIR("A",1)="This entry has no lines available to Edit/Split",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL0",259,0)
 S RCQUIT=0
"RTN","RCDPEWL0",260,0)
 I $P($G(^RCY(344.49,RCSCR,1,RCLINE,0)),U,13) D  G:RCQUIT SPLITQ
"RTN","RCDPEWL0",261,0)
 . S DIR("A",1)="WARNING!  This line has already been VERIFIED",DIR("A")="Are you sure you want to continue?: ",DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL0",262,0)
 . I Y'=1 S RCQUIT=1
"RTN","RCDPEWL0",263,0)
 S CT=0,CT=CT+1,DIR("?",CT)="Enter the line # that you want to split or edit:",RCONE=1
"RTN","RCDPEWL0",264,0)
 S L=Z F  S L=$O(RCZ(L)) Q:'L  D
"RTN","RCDPEWL0",265,0)
 . S L1=+$G(^TMP("RCDPE-EOB_WLDX",$J,L))
"RTN","RCDPEWL0",266,0)
 . S CT=CT+1
"RTN","RCDPEWL0",267,0)
 . S DIR("?",CT)=$G(^TMP("RCDPE-EOB_WL",$J,L1,0)),CT=CT+1,DIR("?",CT)=$G(^TMP("RCDPE-EOB_WL",$J,L1+1,0)) S RCONE(1)=$S(RCONE:L,1:"") S RCONE=0
"RTN","RCDPEWL0",268,0)
 S DIR("?")=" ",Y=-1
"RTN","RCDPEWL0",269,0)
 I $G(RCONE(1)) S Y=+RCONE(1) K DIR G:'Y SPLITQ
"RTN","RCDPEWL0",270,0)
 I '$G(RCONE(1)) D  K DIR I $D(DTOUT)!$D(DUOUT)!(Y\1'=Z) G SPLITQ
"RTN","RCDPEWL0",271,0)
 . F  S DIR(0)="NAO^"_(Z+.001)_":"_Z0_":3",DIR("A")="Which line of entry "_Z_" do you want to Split/Edit?: " S:$G(RCONE(1))'="" DIR("B")=RCONE(1) D ^DIR Q:'Y!$D(DUOUT)!$D(DTOUT)  D  Q:Y>0
"RTN","RCDPEWL0",272,0)
 .. I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !!,"Line "_Y_" does NOT exist - TRY AGAIN",! S Y=-1 Q
"RTN","RCDPEWL0",273,0)
 .. I '$D(RCZ(Y)) W !!,"Line "_Y_" has been used in a DISTRIBUTE ADJ action and can't be edited",! S Y=-1 Q
"RTN","RCDPEWL0",274,0)
 .. S Q=+$O(^RCY(344.49,RCSCR,1,"B",Y,0))
"RTN","RCDPEWL0",275,0)
 ;
"RTN","RCDPEWL0",276,0)
 K ^TMP("RCDPE_SPLIT_REBLD",$J)
"RTN","RCDPEWL0",277,0)
 D SPLIT^RCDPEWL3(RCSCR,+Y)
"RTN","RCDPEWL0",278,0)
 I $G(^TMP("RCDPE_SPLIT_REBLD",$J)) K ^TMP("RCDPE_SPLIT_REBLD",$J) D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL0",279,0)
 ;
"RTN","RCDPEWL0",280,0)
SPLITQ S VALMBCK="R"
"RTN","RCDPEWL0",281,0)
 Q
"RTN","RCDPEWL0",282,0)
 ;
"RTN","RCDPEWL0",283,0)
PRTERA ; View/prt
"RTN","RCDPEWL0",284,0)
 N DIC,X,Y,RCSCR
"RTN","RCDPEWL0",285,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL0",286,0)
 Q:Y'>0
"RTN","RCDPEWL0",287,0)
 S RCSCR=+Y
"RTN","RCDPEWL0",288,0)
 D PRERA1
"RTN","RCDPEWL0",289,0)
 Q
"RTN","RCDPEWL0",290,0)
 ;
"RTN","RCDPEWL0",291,0)
PRERA ; RCSCR is assumed to be defined
"RTN","RCDPEWL0",292,0)
 D FULL^VALM1 ; Protocol entry
"RTN","RCDPEWL0",293,0)
PRERA1 ; Option entry
"RTN","RCDPEWL0",294,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,DIR,X,Y,RCERADET
"RTN","RCDPEWL0",295,0)
 D EXCWARN^RCDPEWLP(RCSCR)
"RTN","RCDPEWL0",296,0)
 S DIR("?",1)="Including expanded detail will significantly increase the size of this report",DIR("?",2)="IF YOU CHOOSE TO INCLUDE IT, ALL PAYMENT DETAILS FOR EACH EEOB WILL BE"
"RTN","RCDPEWL0",297,0)
 S DIR("?")="listed.  If you want just summary data for each EEOB, do NOT include it."
"RTN","RCDPEWL0",298,0)
 S DIR(0)="YA",DIR("A")="Do you want to include expanded EEOB detail?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL0",299,0)
 I $D(DUOUT)!$D(DTOUT) G PRERAQ
"RTN","RCDPEWL0",300,0)
 S RCERADET=+Y
"RTN","RCDPEWL0",301,0)
 S %ZIS="QM" D ^%ZIS G:POP PRERAQ
"RTN","RCDPEWL0",302,0)
 I $D(IO("Q")) D  G PRERAQ
"RTN","RCDPEWL0",303,0)
 . S ZTRTN="VPERA^RCDPEWL0("_RCSCR_","_RCERADET_")",ZTDESC="AR - Print ERA From Worklist"
"RTN","RCDPEWL0",304,0)
 . D ^%ZTLOAD
"RTN","RCDPEWL0",305,0)
 . W !!,$S($D(ZTSK):"Your task # "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEWL0",306,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEWL0",307,0)
 U IO
"RTN","RCDPEWL0",308,0)
 D VPERA(RCSCR,RCERADET)
"RTN","RCDPEWL0",309,0)
 Q
"RTN","RCDPEWL0",310,0)
 ;
"RTN","RCDPEWL0",311,0)
VPERA(RCSCR,RCERADET) ; Queued entry
"RTN","RCDPEWL0",312,0)
 ; RCSCR = ien of entry in file 344.4
"RTN","RCDPEWL0",313,0)
 ; RCERADET = 1 if inclusion of all EOB details from file 361.1 is
"RTN","RCDPEWL0",314,0)
 ;  desired, 0 if not
"RTN","RCDPEWL0",315,0)
 N Z,Z0,RCSTOP,RCZ,RCPG,RCDOT,RCDIQ,RCDIQ1,RCDIQ2,RCXM1,RC,RCSCR1,RC3611
"RTN","RCDPEWL0",316,0)
 K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT"),^TMP($J,"RC_SUMALL")
"RTN","RCDPEWL0",317,0)
 S (RCSTOP,RCPG)=0,RCDOT="",$P(RCDOT,".",79)=""
"RTN","RCDPEWL0",318,0)
 D GETS^DIQ(344.4,RCSCR_",","*","IEN","RCDIQ")
"RTN","RCDPEWL0",319,0)
 D TXT0^RCDPEX31(RCSCR,.RCDIQ,.RCXM1,.RC) ; Get top level 0-node captioned flds
"RTN","RCDPEWL0",320,0)
 I $O(^RCY(344.4,RCSCR,2,0)) S RC=RC+1,RCXM1(RC)="  **ERA LEVEL ADJUSTMENTS**"
"RTN","RCDPEWL0",321,0)
 S RCSCR1=0 F  S RCSCR1=$O(^RCY(344.4,RCSCR,2,RCSCR1)) Q:'RCSCR1  D
"RTN","RCDPEWL0",322,0)
 . K RCDIQ2
"RTN","RCDPEWL0",323,0)
 . D GETS^DIQ(344.42,RCSCR1_","_RCSCR_",","*","IEN","RCDIQ2")
"RTN","RCDPEWL0",324,0)
 . D TXT2^RCDPEX31(RCSCR,RCSCR1,.RCDIQ2,.RCXM1,.RC) ; Get top level ERA adjs
"RTN","RCDPEWL0",325,0)
 S RCSCR1=0 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:'RCSCR1  D
"RTN","RCDPEWL0",326,0)
 . K RCDIQ1
"RTN","RCDPEWL0",327,0)
 . D GETS^DIQ(344.41,RCSCR1_","_RCSCR_",","*","IE","RCDIQ1")  ;PRCA*4.5*298  need to retrieve all fields even if null  (changed "IEN" to "IE")
"RTN","RCDPEWL0",328,0)
 . D TXT00^RCDPEX31(RCSCR,RCSCR1,.RCDIQ1,.RCXM1,.RC)
"RTN","RCDPEWL0",329,0)
 . ;HIPAA 5010
"RTN","RCDPEWL0",330,0)
 . N PNAME4
"RTN","RCDPEWL0",331,0)
 . S PNAME4=$$PNM4^RCDPEWL1(RCSCR,RCSCR1)
"RTN","RCDPEWL0",332,0)
 . I $L(PNAME4)<32 D
"RTN","RCDPEWL0",333,0)
 . .S RC=RC+1,RCXM1(RC-1)=$E("PATIENT: "_PNAME4_$J("",41),1,41)_"CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,RCSCR1),RCXM1(RC)=" "
"RTN","RCDPEWL0",334,0)
 . I $L(PNAME4)>31 D
"RTN","RCDPEWL0",335,0)
 . .S RC=RC+1,RCXM1(RC-1)=$J("",41)_"CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,RCSCR1)
"RTN","RCDPEWL0",336,0)
 . .S RC=RC+1,RCXM1(RC-1)=$E("PATIENT: "_PNAME4,1,78),RCXM1(RC)=" "
"RTN","RCDPEWL0",337,0)
 . D PROV^RCDPEWLD(RCSCR,RCSCR1,.RCXM1,.RC)
"RTN","RCDPEWL0",338,0)
 . S RC3611=$P($G(^RCY(344.4,RCSCR,1,RCSCR1,0)),U,2)
"RTN","RCDPEWL0",339,0)
 . I RCERADET D
"RTN","RCDPEWL0",340,0)
 .. I 'RC3611 D  Q
"RTN","RCDPEWL0",341,0)
 ... D DISP^RCDPESR0("^RCY(344.4,"_RCSCR_",1,"_RCSCR1_",1)","^TMP($J,""RC_SUMRAW"")",1,"^TMP($J,""RC_SUMOUT"")",75,1)
"RTN","RCDPEWL0",342,0)
 ..;
"RTN","RCDPEWL0",343,0)
 .. E  D  ; Detail record is in 361.1
"RTN","RCDPEWL0",344,0)
 ... K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEWL0",345,0)
 ... D GETEOB^IBCECSA6(RC3611,2)
"RTN","RCDPEWL0",346,0)
 ... I $O(^IBM(361.1,RC3611,"ERR",0)) D GETERR^RCDPEDS(RC3611,+$O(^TMP("PRCA_EOB",$J,RC3611," "),-1)) ; get filing errors
"RTN","RCDPEWL0",347,0)
 ... S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,RC3611,Z)) Q:'Z  S RC=RC+1,^TMP($J,"RC_SUMOUT",RC)=$G(^TMP("PRCA_EOB",$J,RC3611,Z))
"RTN","RCDPEWL0",348,0)
 ... S RC=RC+2,^TMP($J,"RC_SUMOUT",RC-1)=" ",^TMP($J,"RC_SUMOUT",RC)=" "
"RTN","RCDPEWL0",349,0)
 ... K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEWL0",350,0)
 . I $D(RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2)) D
"RTN","RCDPEWL0",351,0)
 .. S RC=RC+1,RCXM1(RC)="  **EXCEPTION RESOLUTION LOG DATA**"
"RTN","RCDPEWL0",352,0)
 .. S Z=0 F  S Z=$O(RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2,Z)) Q:'Z  S RC=RC+1,RCXM1(RC)=RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2,Z)
"RTN","RCDPEWL0",353,0)
 . S RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEWL0",354,0)
 . S Z0=+$O(^TMP($J,"RC_SUMALL"," "),-1)
"RTN","RCDPEWL0",355,0)
 . S Z=0 F  S Z=$O(RCXM1(Z)) Q:'Z  S Z0=Z0+1,^TMP($J,"RC_SUMALL",Z0)=RCXM1(Z)
"RTN","RCDPEWL0",356,0)
 . K RCXM1 S RC=0
"RTN","RCDPEWL0",357,0)
 . S Z=0 F  S Z=$O(^TMP($J,"RC_SUMOUT",Z)) Q:'Z  S Z0=Z0+1,^TMP($J,"RC_SUMALL",Z0)=$G(^TMP($J,"RC_SUMOUT",Z))
"RTN","RCDPEWL0",358,0)
 S RCSTOP=0,Z=""
"RTN","RCDPEWL0",359,0)
 F  S Z=$O(^TMP($J,"RC_SUMALL",Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEWL0",360,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEWL0",361,0)
 . I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEWL0",362,0)
 .. D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEWL0",363,0)
 .. D HDR(.RCPG)
"RTN","RCDPEWL0",364,0)
 . W !,$G(^TMP($J,"RC_SUMALL",Z))
"RTN","RCDPEWL0",365,0)
 ;
"RTN","RCDPEWL0",366,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEWL0",367,0)
 ;
"RTN","RCDPEWL0",368,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEWL0",369,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEWL0",370,0)
 ;
"RTN","RCDPEWL0",371,0)
PRERAQ K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT"),^TMP($J,"SUMALL")
"RTN","RCDPEWL0",372,0)
 S VALMBCK="R"
"RTN","RCDPEWL0",373,0)
 Q
"RTN","RCDPEWL0",374,0)
 ;
"RTN","RCDPEWL0",375,0)
HDR(RCPG) ;Report hdr
"RTN","RCDPEWL0",376,0)
 ; RCPG = last page #
"RTN","RCDPEWL0",377,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEWL0",378,0)
 S RCPG=$G(RCPG)+1
"RTN","RCDPEWL0",379,0)
 W !,?5,"EDI LOCKBOX WORKLIST - ERA DETAIL",?55,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!,$TR($J("",IOM)," ","=")
"RTN","RCDPEWL0",380,0)
 Q
"RTN","RCDPEWL0",381,0)
 ;
"RTN","RCDPEWL0",382,0)
ASK(RCSTOP) ;
"RTN","RCDPEWL0",383,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEWL0",384,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEWL0",385,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEWL0",386,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEWL0",387,0)
 Q
"RTN","RCDPEWL0",388,0)
 ;
"RTN","RCDPEWL1")
0^54^B82257710
"RTN","RCDPEWL1",1,0)
RCDPEWL1 ;ALB/TMK - ELECTRONIC EOB WORKLIST SCREEN ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL1",2,0)
 ;;4.5;Accounts Receivable;**173,208,222,298,304,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEWL1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL1",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL1",5,0)
 ; IA for call to ^DGENA = 3812
"RTN","RCDPEWL1",6,0)
 Q
"RTN","RCDPEWL1",7,0)
 ;
"RTN","RCDPEWL1",8,0)
BLD(RCSORT) ; Build the detail display record for the WL scratch pad record
"RTN","RCDPEWL1",9,0)
 ; Assume RCSCR = ien from file 344.49
"RTN","RCDPEWL1",10,0)
 ; RCSORT = "" or 'N' for no sort  'F' for 0-pays first, 'L' for last
"RTN","RCDPEWL1",11,0)
 ;
"RTN","RCDPEWL1",12,0)
 N A,A0,B,B0,Q,Q0,Q1,QQ,V1,X,Y,Z,Z0,Z3,ZZ,ZZ1,RCT,RCZ,RCZ0,RCZZ0,RCSA,RCAZ,RCAZ0,RCSCT,RCS1,RCLI1,RCY34441,RCZERO,RCTS,RCTL,RCCL,RCCL1
"RTN","RCDPEWL1",13,0)
 N RCECME,RXARRAY,RC4,RECEIPT,AUTOERA  ;prca*4.5*298
"RTN","RCDPEWL1",14,0)
 S RCSORT=$P($G(RCSORT),U),RCSORT=$S(RCSORT="":"N",1:RCSORT)
"RTN","RCDPEWL1",15,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP($J,"RCS"),^TMP("RC_BILL",$J)
"RTN","RCDPEWL1",16,0)
 ;
"RTN","RCDPEWL1",17,0)
 S VALMCNT=0
"RTN","RCDPEWL1",18,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,"B",Z)) Q:'Z  I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEWL1",19,0)
 . S RCZ=ZZ,RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCS1=$P(RCZ0,U,6)
"RTN","RCDPEWL1",20,0)
 . ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL1",21,0)
 . ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL1",22,0)
 . ;Q:$S('$G(^TMP("RCBATCH_SELECTED",$J)):0,1:$P(RCZ0,U,14)'=+^TMP("RCBATCH_SELECTED",$J))  ; Must be entire ERA or match the selected batch to continue
"RTN","RCDPEWL1",23,0)
 . S RCZERO=$S($P(RCZ0,U,2)["**ADJ":"-1",RCSORT="N":1,RCSORT="F":+RCS1'=0,1:+RCS1=0)
"RTN","RCDPEWL1",24,0)
 . ;
"RTN","RCDPEWL1",25,0)
 . ; This is a top-level entry - find the sublines
"RTN","RCDPEWL1",26,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEWL1",27,0)
 .. S ^TMP($J,"RCS",RCZERO,ZZ,ZZ1)=""
"RTN","RCDPEWL1",28,0)
 . S ^TMP($J,"RCS",RCZERO,ZZ)=""
"RTN","RCDPEWL1",29,0)
 ;
"RTN","RCDPEWL1",30,0)
 S RCZERO="",RCTS=0 F  S RCZERO=$O(^TMP($J,"RCS",RCZERO)) Q:RCZERO=""  S ZZ=0 F  S ZZ=$O(^TMP($J,"RCS",RCZERO,ZZ)) Q:'ZZ  D
"RTN","RCDPEWL1",31,0)
 . N A
"RTN","RCDPEWL1",32,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCY34441=$G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),0))
"RTN","RCDPEWL1",33,0)
 .;  get ECME# and Receipt from EEOB
"RTN","RCDPEWL1",34,0)
 . S RC4=$P($G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),4)),U,2,3)
"RTN","RCDPEWL1",35,0)
 . S RCECME=$P(RC4,U)
"RTN","RCDPEWL1",36,0)
 . S RECEIPT=$S(+$P(RC4,U,2):$P($G(^RCY(344,$P(RC4,U,2),0)),U),1:"")
"RTN","RCDPEWL1",37,0)
 . ; get auto-post status
"RTN","RCDPEWL1",38,0)
 . S AUTOERA=$S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0)
"RTN","RCDPEWL1",39,0)
 . ;Filtering Posted/Unposted EEOBs (Auto-Posting ERAs only)
"RTN","RCDPEWL1",40,0)
 . I $G(^TMP($J,"RC_EEOBPOST"))="P",RECEIPT="" Q
"RTN","RCDPEWL1",41,0)
 . I $G(^TMP($J,"RC_EEOBPOST"))="U",RECEIPT'="" Q
"RTN","RCDPEWL1",42,0)
 . S RCTS=RCTS+1,A=$$TOPLINE(RCZ0,RCTS)
"RTN","RCDPEWL1",43,0)
 . D SET(A,RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",44,0)
 . ; PRCA*4.5*304 - Add claim comment to screen if it exists for this ERA EEOB detail line
"RTN","RCDPEWL1",45,0)
 . S:$P(RCZ0,U,9)'="" RCCL=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",4)
"RTN","RCDPEWL1",46,0)
 . D:$G(RCCL)'=""  ; If we have a ERA Detail line comment, display it
"RTN","RCDPEWL1",47,0)
 . . D SLINE^RCDPEAA2(RCCL,"RCCL1",56,74)
"RTN","RCDPEWL1",48,0)
 . . N TLINE S TLINE=$J("",8)_"Claim Comment: "_RCCL1(1)
"RTN","RCDPEWL1",49,0)
 . . D SET(TLINE,RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",50,0)
 . . ; If we have a second or third line for the comment then put it on the screen
"RTN","RCDPEWL1",51,0)
 . . I RCCL1>1 D SET($J("",8)_RCCL1(2),RCTS,RCTS,ZZ) I RCCL1=3 D SET($J("",8)_RCCL1(3),RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",52,0)
 . ; **End of *304 modifications**
"RTN","RCDPEWL1",53,0)
 . I $P(RCY34441,U,11) D
"RTN","RCDPEWL1",54,0)
 .. D SET("EEOB TRANSFERRED TO "_$E($P($G(^DIC(4,+$P(RCY34441,U,11),0)),U),1,20)_" "_$$FMTE^XLFDT($P(RCY34441,U,12),"2D")_" STATUS: "_$$EXTERNAL^DILFD(344.41,.1,"",+$P(RCY34441,U,10)),RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",55,0)
 . ;
"RTN","RCDPEWL1",56,0)
 . S RCT=RCTS
"RTN","RCDPEWL1",57,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP($J,"RCS",RCZERO,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEWL1",58,0)
 .. S RCT=RCT+.001
"RTN","RCDPEWL1",59,0)
 .. S RCTL=$L(RCT)
"RTN","RCDPEWL1",60,0)
 .. S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEWL1",61,0)
 .. S V1=$S($P(RCZ0,U,2)'["**ADJ":"",$P($P(RCZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEWL1",62,0)
 .. S RCLI1=$S(V1="":" Claim #: "_$P(RCZZ0,U,2)_" Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),RCZ),1:"??"),1:V1)
"RTN","RCDPEWL1",63,0)
 .. D SET($J("",4)_$P("   ^(V)",U,$P(RCZZ0,U,13)+1)_RCT_RCLI1,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",64,0)
 .. I '$P(RCZZ0,U,7),$P(RCZ0,U,2)'["**ADJ" D SET($J("",4+RCTL)_"***CLAIM NOT FOUND IN YOUR AR ***",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",65,0)
 .. I $P(RCZZ0,U,7) D
"RTN","RCDPEWL1",66,0)
 ... N A,RCX,Q
"RTN","RCDPEWL1",67,0)
 ... S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEWL1",68,0)
 ... ; Find Rx copay status
"RTN","RCDPEWL1",69,0)
 ... S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEWL1",70,0)
 ... ; Find M/T status
"RTN","RCDPEWL1",71,0)
 ... S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEWL1",72,0)
 ... S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEWL1",73,0)
 ... ;
"RTN","RCDPEWL1",74,0)
 ... S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEWL1",75,0)
 ... D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",76,0)
 ... S ^TMP("RC_BILL",$J,$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEWL1",77,0)
 ... S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEWL1",78,0)
 ... S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEWL1",79,0)
 ... D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",80,0)
 .. ;
"RTN","RCDPEWL1",81,0)
 .. D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",82,0)
 .. I AUTOERA,$P(RCZZ0,U,3)>0 D SET($J("",9)_"Receipt: "_RECEIPT,RCTS,RCT,ZZ1)   ; if auto-posted ERA display EEOB level receipt number
"RTN","RCDPEWL1",83,0)
 .. ; display pharmacy EEOB data  
"RTN","RCDPEWL1",84,0)
 .. I RCECME]"" D PHARM(RCZZ0,RCECME,RCT,ZZ1)
"RTN","RCDPEWL1",85,0)
 .. ; PRCA*4.5*321 BEGIN
"RTN","RCDPEWL1",86,0)
 .. I $P(RCZZ0,U,10)'="" D
"RTN","RCDPEWL1",87,0)
 ... D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",88,0)
 ... D SET($J("",9)_"Added By User: "_$$GET1^DIQ(344.491,ZZ1_","_RCSCR_",",2.03),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",89,0)
 ... D SET($J("",9)_"Date/Time Added: "_$$GET1^DIQ(344.491,ZZ1_","_RCSCR_",",2.04),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",90,0)
 .. ; PRCA*4.5*321 END
"RTN","RCDPEWL1",91,0)
 .. ; PRCA*4.5*326 BEGIN
"RTN","RCDPEWL1",92,0)
 .. ; If this is a zero balance denial ERA display auto-decrease total for line
"RTN","RCDPEWL1",93,0)
 .. I $$GET1^DIQ(344.4,RCSCR_",",.15)="NON" D
"RTN","RCDPEWL1",94,0)
 ... N RCARC
"RTN","RCDPEWL1",95,0)
 ... S RCARC=$$WLL^RCDPEWLZ(RCSCR,ZZ)
"RTN","RCDPEWL1",96,0)
 ... D:RCARC]"" SET($J("",9)_RCARC)
"RTN","RCDPEWL1",97,0)
 .. ; PRCA*4.5*326 END
"RTN","RCDPEWL1",98,0)
 .. I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D
"RTN","RCDPEWL1",99,0)
 ... S Z3=""
"RTN","RCDPEWL1",100,0)
 ... D SET($J("",4+RCTL)_"ADJUSTMENTS:",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",101,0)
 ... S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEWL1",102,0)
 .... S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEWL1",103,0)
 .... ;
"RTN","RCDPEWL1",104,0)
 .... I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",105,0)
 .... I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",106,0)
 .... ;
"RTN","RCDPEWL1",107,0)
 .... I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEWL1",108,0)
 ..... S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEWL1",109,0)
 .... I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",110,0)
 .... I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",111,0)
 .... D SET(Z3,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",112,0)
 .... I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",113,0)
 .. ;
"RTN","RCDPEWL1",114,0)
 .. I $P($G(^TMP($J,"RC_SORTPARM")),U,2) D
"RTN","RCDPEWL1",115,0)
 ... S A=$J("",10)_"REVIEW STATUS: ("_$S($P(RCZ0,U,11)="I":"REVIEW IN PROCESS",$P(RCZ0,U,11)=1:"REVIEWED",1:"NOT REVIEWED")
"RTN","RCDPEWL1",116,0)
 ... I $P(RCZ0,U,12) S A=A_"   SET BY: "_$E($P($G(^VA(200,$P(RCZ0,U,12),0)),U),1,20)
"RTN","RCDPEWL1",117,0)
 ... D SET(A_")",+RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",118,0)
 ... S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ,4,A)) Q:'A  S A0=$G(^(A,0)) D
"RTN","RCDPEWL1",119,0)
 .... D SET($J("",12)_$$FMTE^XLFDT($P(A0,U),2)_"  "_$P($G(^VA(200,+$P(A0,U,2),0)),U)_$S($P(A0,U,4):"  LAST EDIT: "_$$FMTE^XLFDT($P(A0,U,4),2),1:""),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",120,0)
 .... S B=0 F  S B=$O(^RCY(344.49,RCSCR,1,ZZ,4,A,1,B)) Q:'B  S B0=$G(^(B,0)) D
"RTN","RCDPEWL1",121,0)
 ..... I $L(B0)>64 D SET($J("",15)_$E(B0,1,64),RCTS,RCT,ZZ1) S B0="  "_$E(B0,65,$L(B0)) ; Split line if > 64 characters in comment line
"RTN","RCDPEWL1",122,0)
 ..... D SET($J("",15)_B0,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",123,0)
 .. S A="",$P(A,".",79)="" D SET(A,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",124,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL1",125,0)
 ; batches but just remove from execution.
"RTN","RCDPEWL1",126,0)
 ; I VALMCNT=0 D
"RTN","RCDPEWL1",127,0)
 ;. I $G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL1",128,0)
 ;. . D SET("THERE ARE NO EEOBs ASSIGNED TO THIS BATCH")
"RTN","RCDPEWL1",129,0)
 ;. E  D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEWL1",130,0)
 I VALMCNT=0 D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEWL1",131,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEWL1",132,0)
 Q
"RTN","RCDPEWL1",133,0)
 ;
"RTN","RCDPEWL1",134,0)
TOPLINE(RCZ0,RCTS) ; Function returns the top line of the EEOB display
"RTN","RCDPEWL1",135,0)
 ; RCZ0 = the 0-node of the whole number entry line for the EEOB
"RTN","RCDPEWL1",136,0)
 ; RCTS = the selectable line #
"RTN","RCDPEWL1",137,0)
 N A
"RTN","RCDPEWL1",138,0)
 S A=" "_$S($P(RCZ0,U,13):"(V)",1:"   ")_"EEOB Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" On ERA: "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+$P(RCZ0,U,6),"",2)
"RTN","RCDPEWL1",139,0)
 I $P($G(^TMP($J,"RC_SORTPARM")),U,2) S A=A_"  Reviewed?: "_$S($P(RCZ0,U,11)="":"NO",1:$$EXTERNAL^DILFD(344.491,.11,,$P(RCZ0,U,11)))
"RTN","RCDPEWL1",140,0)
 S A=$E(RCTS_$J("",4),1,4)_A
"RTN","RCDPEWL1",141,0)
 Q A
"RTN","RCDPEWL1",142,0)
 ;
"RTN","RCDPEWL1",143,0)
PHARM(RCZZ0,RCECME,RCT,ZZ1) ;
"RTN","RCDPEWL1",144,0)
 N RXARRAY
"RTN","RCDPEWL1",145,0)
 D GETPHARM^RCDPEWLP($P(RCZZ0,U,7),.RXARRAY)
"RTN","RCDPEWL1",146,0)
 D SET($J("",9)_"ECME #: "_RCECME,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",147,0)
 I '$D(RXARRAY) D SET($J("",9)_" Pharmacy data does not exist for this claim",$P(RCZZ0,U),RCT,ZZ1) Q
"RTN","RCDPEWL1",148,0)
 D SET($J("",9)_"Rx/Fill/Release Status: "_RXARRAY("RX")_"/"_RXARRAY("FILL")_"/"_RXARRAY("RELEASED STATUS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",149,0)
 D SET($J("",9)_"DOS: "_RXARRAY("DOS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",150,0)
 Q
"RTN","RCDPEWL1",151,0)
 ;
"RTN","RCDPEWL1",152,0)
INIT ;
"RTN","RCDPEWL1",153,0)
 S VALMBG=$G(^TMP($J,"RC_VALMBG"))
"RTN","RCDPEWL1",154,0)
 Q
"RTN","RCDPEWL1",155,0)
 ;
"RTN","RCDPEWL1",156,0)
HDR ;
"RTN","RCDPEWL1",157,0)
 D HDR^RCDPEWL
"RTN","RCDPEWL1",158,0)
 Q
"RTN","RCDPEWL1",159,0)
 ;
"RTN","RCDPEWL1",160,0)
FNL ; -- Clean up list
"RTN","RCDPEWL1",161,0)
 K RCFASTXT
"RTN","RCDPEWL1",162,0)
 Q
"RTN","RCDPEWL1",163,0)
 ;
"RTN","RCDPEWL1",164,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set arrays
"RTN","RCDPEWL1",165,0)
 ; X = the data to set into the global
"RTN","RCDPEWL1",166,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL1",167,0)
 ; RCSEQ1 = the sub line #
"RTN","RCDPEWL1",168,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEWL1",169,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEWL1",170,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL1",171,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEWL1",172,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEWL1",173,0)
 Q
"RTN","RCDPEWL1",174,0)
 ;
"RTN","RCDPEWL1",175,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEWL1",176,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEWL1",177,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEWL1",178,0)
 ; RC = the ien of file 430
"RTN","RCDPEWL1",179,0)
 N Z,Z0,Q
"RTN","RCDPEWL1",180,0)
 S Z=""
"RTN","RCDPEWL1",181,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEWL1",182,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEWL1",183,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEWL1",184,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEWL1",185,0)
 I $G(RC)'="" D
"RTN","RCDPEWL1",186,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEWL1",187,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEWL1",188,0)
 Q Z
"RTN","RCDPEWL1",189,0)
 ;
"RTN","RCDPEWL1",190,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEWL1",191,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEWL1",192,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEWL1",193,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEWL1",194,0)
 Q A
"RTN","RCDPEWL1",195,0)
 ;
"RTN","RCDPEWL1",196,0)
COPAY(RCIFN)       ; Returns 1 if any not cancelled 1st party bills exist for
"RTN","RCDPEWL1",197,0)
 ; a 3rd party bill or any bills related to this 3rd party bill
"RTN","RCDPEWL1",198,0)
 ; RCIFN = the 3rd party bill #
"RTN","RCDPEWL1",199,0)
 N FIRST,RCTP0,RCTP1,RCTP2
"RTN","RCDPEWL1",200,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEWL1",201,0)
 D RELBILL^IBRFN(RCIFN) ; DBIA 3124
"RTN","RCDPEWL1",202,0)
 S RCTP0=0 F  S RCTP0=$O(^TMP("IBRBF",$J,RCIFN,RCTP0)) Q:RCTP0=""  S RCTP1=$G(^(RCTP0)) D
"RTN","RCDPEWL1",203,0)
 . I $P(RCTP1,U,3) K ^TMP("IBRBF",$J,RCIFN,RCTP0) Q  ; IB cancelled
"RTN","RCDPEWL1",204,0)
 . S RCTP2=$O(^PRCA(430,"B",+$P(RCTP1,U,4),0)) I $P($G(^PRCA(430,+RCTP2,0)),U,8)=39 K ^TMP("IBRBF",$J,RCIFN,RCTP0) ; AR cancelled
"RTN","RCDPEWL1",205,0)
 S FIRST=$S($O(^TMP("IBRBF",$J,RCIFN,0)):1,1:0)
"RTN","RCDPEWL1",206,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEWL1",207,0)
 Q FIRST
"RTN","RCDPEWL1",208,0)
 ;
"RTN","RCDPEWL4")
0^25^B67782893
"RTN","RCDPEWL4",1,0)
RCDPEWL4 ;ALB/TMK/PJH - ELECTRONIC EOB WORKLIST ACTIONS ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL4",2,0)
 ;;4.5;Accounts Receivable;**173,208,269,298,303,318,326**;Mar 20, 1995;Build 26
"RTN","RCDPEWL4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL4",4,0)
 ; RCSCR variable must be defined for this routine
"RTN","RCDPEWL4",5,0)
 Q
"RTN","RCDPEWL4",6,0)
 ;
"RTN","RCDPEWL4",7,0)
DISTADJ(RCFR,RCTO,RCAMT,RCCOM) ; Action that distributes an adjustment amount
"RTN","RCDPEWL4",8,0)
 ; against another line item's payment
"RTN","RCDPEWL4",9,0)
 ; Assumes RCSCR = ien of the entry in file 344.49
"RTN","RCDPEWL4",10,0)
 ; RCFR = ien of entry in 344.491 that has a negative net
"RTN","RCDPEWL4",11,0)
 ; RCTO = ien of entry in 344.491 that will be decremented
"RTN","RCDPEWL4",12,0)
 ; RCAMT = the amount being adjusted (positive #)
"RTN","RCDPEWL4",13,0)
 ; RCCOM = the comment to place on the decrease adjustment
"RTN","RCDPEWL4",14,0)
 ;
"RTN","RCDPEWL4",15,0)
 N RCFRX,RCREF,RCFR0,RCFR1,RCFR10,RCTO0,RCTO1,RCTO10,RCY
"RTN","RCDPEWL4",16,0)
 N DA,DD,DIK,DR,DIC,DIE,DIK,DIR,DLAYGO,DO,NONVA,X,Y ; PRCA*4.5*326
"RTN","RCDPEWL4",17,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL Q
"RTN","RCDPEWL4",18,0)
 S RCFR0=$G(^RCY(344.49,RCSCR,1,RCFR,0)),RCTO0=$G(^RCY(344.49,RCSCR,1,RCTO,0)),RCFRX=+$O(^RCY(344.49,RCSCR,1,"B",RCFR0\1,0)),RCFRX=$G(^RCY(344.49,RCSCR,1,RCFRX,0))
"RTN","RCDPEWL4",19,0)
 S RCREF=$P($P(RCFRX,U,2),"**ADJ",2),RCREF=$S(RCREF="":"",RCREF=0:$P(RCFRX,U,9),1:$P($G(^RCY(344.4,RCSCR,2,+RCREF,0)),U))
"RTN","RCDPEWL4",20,0)
 S RCFR1=+$O(^RCY(344.49,RCSCR,1,"B",RCFR0\1,0)),RCTO1=+$O(^RCY(344.49,RCSCR,1,"B",RCTO0\1,0))
"RTN","RCDPEWL4",21,0)
 S RCFR10=$G(^RCY(344.49,RCSCR,1,RCFR1,0)),RCTO10=$G(^RCY(344.49,RCSCR,1,RCTO1,0))
"RTN","RCDPEWL4",22,0)
 S RCFR0=$G(^RCY(344.49,RCSCR,1,RCFR,0)),RCTO0=$G(^RCY(344.49,RCSCR,1,RCTO,0))
"RTN","RCDPEWL4",23,0)
 S DA(2)=RCSCR,DA(1)=RCFR
"RTN","RCDPEWL4",24,0)
 S DIC("DR")=".02////1;.03////"_RCAMT_";.04////"_$S($P(RCTO0,U,2)'="":$P(RCTO0,U,2),RCREF'="":RCREF,1:"UNKNOWN")
"RTN","RCDPEWL4",25,0)
 S DIC("DR")=DIC("DR")_";.05////0;.06////0;.09////RETRACTED FUNDS DEDUCTED FROM OTHER PAYMENT ON THIS ERA",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL4",26,0)
 S DLAYGO=344.4911,DIC(0)="L",X=+$O(^RCY(344.49,RCSCR,1,RCFR,1,"B",""),-1)+1
"RTN","RCDPEWL4",27,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","RCDPEWL4",28,0)
 S RCY=+Y
"RTN","RCDPEWL4",29,0)
 I RCY'>0 D  Q
"RTN","RCDPEWL4",30,0)
 . S DIR(0)="EA",DIR("A",1)="PROBLEM ADDING ADJUSTMENT - NO DISTRIBUTION PERFORMED",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL4",31,0)
 ;
"RTN","RCDPEWL4",32,0)
 S DA(2)=RCSCR,DA(1)=RCTO
"RTN","RCDPEWL4",33,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEWL4",34,0)
 ; Check if the distribution is to a non-VA claim
"RTN","RCDPEWL4",35,0)
 S NONVA=0 I $P($G(^RCY(344.49,RCSCR,1,RCTO1,0)),U,2)'["**ADJ",'$P(RCTO0,U,7) S NONVA=1
"RTN","RCDPEWL4",36,0)
 S DIC("DR")=".02////0;.03////"_$J(-RCAMT,"",2)
"RTN","RCDPEWL4",37,0)
 S DIC("DR")=DIC("DR")_";.04////"_$S($P(RCFR0,U,2)'="":$P(RCFR0,U,2),RCREF'="":RCREF,1:"UNKNOWN")
"RTN","RCDPEWL4",38,0)
 ; If a non-VA distribution the background action is set none - comment is fixed text concatenated with PLB comment
"RTN","RCDPEWL4",39,0)
 S DIC("DR")=DIC("DR")_";.05////"_$S(NONVA:0,$P($G(^RCY(344.49,RCSCR,1,RCTO1,0)),U,2)'["**ADJ":"1;.08////0",1:0)
"RTN","RCDPEWL4",40,0)
 S DIC("DR")=DIC("DR")_";.06////0"_$S(RCCOM'="":";.09////"_RCCOM,1:"")
"RTN","RCDPEWL4",41,0)
 ; END PRCA*4.5*326
"RTN","RCDPEWL4",42,0)
 ; 
"RTN","RCDPEWL4",43,0)
 S DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL4",44,0)
 S DLAYGO=344.4911,DIC(0)="L",X=+$O(^RCY(344.49,RCSCR,1,RCTO,1,"B",""),-1)+1
"RTN","RCDPEWL4",45,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","RCDPEWL4",46,0)
 S RCY=+Y
"RTN","RCDPEWL4",47,0)
 ;
"RTN","RCDPEWL4",48,0)
 I RCY'>0 D  Q
"RTN","RCDPEWL4",49,0)
 . N DA
"RTN","RCDPEWL4",50,0)
 . S DA(2)=RCSCR,DA(1)=RCFR,DA=RCY,DIK="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1," D ^DIK
"RTN","RCDPEWL4",51,0)
 . S DIR(0)="EA",DIR("A",1)="PROBLEM ADDING ADJUSTMENT - NO DISTRIBUTION PERFORMED",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL4",52,0)
 ;
"RTN","RCDPEWL4",53,0)
 S DA(1)=RCSCR,DA=RCFR,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCFR0,U,6)+RCAMT,"",2)_";.08////"_$J($P(RCFR0,U,8)+RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",54,0)
 S DA=RCFR1,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCFR10,U,6)+RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",55,0)
 S DA(1)=RCSCR,DA=RCTO,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCTO0,U,6)-RCAMT,"",2)_";.03////"_$J($P(RCTO0,U,3)-RCAMT,"",2)_";.08////"_$J($P(RCTO0,U,8)-RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",56,0)
 S DA(1)=RCSCR,DA=RCTO1,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".06////"_$J($P(RCTO10,U,6)-RCAMT,"",2)_";.03////"_$J($P(RCTO10,U,3)-RCAMT,"",2)_";.08////"_$J($P(RCTO10,U,8)-RCAMT,"",2) D ^DIE
"RTN","RCDPEWL4",57,0)
 ;
"RTN","RCDPEWL4",58,0)
 ; If the distribution is to a none-VA claim set the receipt line comment - this is picked up in DET^RCDPEM when the receipt is created
"RTN","RCDPEWL4",59,0)
 I NONVA S DA(1)=RCSCR,DA=RCTO,DIE="^RCY(344.49,"_DA(1)_",1,",DR=".1///"_RCCOM D ^DIE ; PRCA*4.5*326
"RTN","RCDPEWL4",60,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL4",61,0)
 Q
"RTN","RCDPEWL4",62,0)
 ;
"RTN","RCDPEWL4",63,0)
NEWREC ; Create a new receipt from scratch pad entry
"RTN","RCDPEWL4",64,0)
 N Z,Z0,RCOK,RCRECTDA,RCSTOP,DIR,X,Y,RECTDA,CT,DIE,DA,DR,RCER,RCPAYTY,RCHAC,RCDEP,DIC
"RTN","RCDPEWL4",65,0)
 D FULL^VALM1
"RTN","RCDPEWL4",66,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV^RCDPEWL2 G NEWRECQ
"RTN","RCDPEWL4",67,0)
 S (RCSTOP,RCOK)=0,VALMBCK="R"
"RTN","RCDPEWL4",68,0)
 S RECTDA=$P($G(^RCY(344.49,RCSCR,0)),U,2)
"RTN","RCDPEWL4",69,0)
 I 'RECTDA S RECTDA=$P($G(^RCY(344.4,RCSCR,0)),U,8)
"RTN","RCDPEWL4",70,0)
 ; PRCA*4.5*303 - Corrected receipt number display to use RECTDA in the DIR("A",1) variable
"RTN","RCDPEWL4",71,0)
 I RECTDA D  G NEWRECQ
"RTN","RCDPEWL4",72,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ERA ALREADY HAS A RECEIPT - "_$P($G(^RCY(344,RECTDA,0)),U)_" - NO RECEIPT CREATED",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL4",73,0)
 S DIR("A",1)="THIS ACTION WILL CREATE THE RECEIPT FOR THIS ERA.  ONCE THE RECEIPT IS",DIR("A",2)=" CREATED HERE, NO MORE AUTOMATIC ADJUSTMENTS MAY BE MADE FOR THIS ERA.",DIR("A",3)=" "
"RTN","RCDPEWL4",74,0)
 S DIR("A")="ARE YOU SURE YOU ARE READY TO CREATE THIS RECEIPT?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","RCDPEWL4",75,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEWL4",76,0)
 I Y'=1 S DIR(0)="EA",DIR("A")="NO RECEIPT CREATED - PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",77,0)
 I $$HASADJ^RCDPEWL8(RCSCR,.RCOK) D  G NEWRECQ
"RTN","RCDPEWL4",78,0)
 . S DIR(0)="EA",DIR("A",1)="AT LEAST ONE LINE ITEM WAS FOUND WITH A NEGATIVE PAYMENT AMOUNT",DIR("A")="NO RECEIPT CAN BE CREATED - PRESS RETURN TO CONTINUE " D ^DIR K DIR S RCSTOP=1
"RTN","RCDPEWL4",79,0)
 I 'RCOK S DIR(0)="EA",DIR("A")="NO RECEIPT CAN BE CREATED - NO POSTABLE LINE ITEMS WERE FOUND" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",80,0)
 ;
"RTN","RCDPEWL4",81,0)
 S RCHAC=$$HACERA^RCDPEU(RCSCR)
"RTN","RCDPEWL4",82,0)
 S RCPAYTY=$S(RCHAC:8,$P($G(^RCY(344.4,+RCSCR,5)),U,2)="":14,1:4)
"RTN","RCDPEWL4",83,0)
 S RCDEP=""
"RTN","RCDPEWL4",84,0)
 I RCPAYTY=4 D
"RTN","RCDPEWL4",85,0)
 . N RCOK1
"RTN","RCDPEWL4",86,0)
 . F  D  Q:RCOK1
"RTN","RCDPEWL4",87,0)
 .. S RCOK1=1
"RTN","RCDPEWL4",88,0)
 .. S DIC="^RCY(344.1,",DIC("S")="I $P(^(0),U,12)=1",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL4",89,0)
 .. Q:Y'>0
"RTN","RCDPEWL4",90,0)
 .. S RCDEP=+Y
"RTN","RCDPEWL4",91,0)
 .. I RCDEP,$$TOOOLD^RCDPEWLA(RCDEP) S RCOK1=0,RCDEP=""
"RTN","RCDPEWL4",92,0)
 S RECTDA=$$BLDRCPT^RCDPUREC(DT,+RCDEP_$S(RCPAYTY=4:"ERACHK",1:""),+$O(^RC(341.1,"AC",+RCPAYTY,0))) ; Note:ERA with paper check is type 4, but receipt needs to start with an 'E'
"RTN","RCDPEWL4",93,0)
 I 'RECTDA W ! S DIR(0)="EA",DIR("A",1)="A PROBLEM WAS ENCOUNTERED ADDING THE RECEIPT - NO RECEIPT ADDED",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR G NEWRECQ
"RTN","RCDPEWL4",94,0)
 ;
"RTN","RCDPEWL4",95,0)
 D RCPTDET^RCDPEM(RCSCR,RECTDA,.RCER)
"RTN","RCDPEWL4",96,0)
 ;
"RTN","RCDPEWL4",97,0)
 S DIE="^RCY(344.49,",DA=RCSCR,DR=".02////"_RECTDA D ^DIE
"RTN","RCDPEWL4",98,0)
 S DIE="^RCY(344.4,",DA=RCSCR,DR=".08////"_RECTDA D ^DIE
"RTN","RCDPEWL4",99,0)
 S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEWL4",100,0)
 S DIE="^RCY(344,",DA=RECTDA,DR=".18////"_RCSCR_$S(Z:";.17////"_Z,1:"")_$S(RCPAYTY=4:";.06////"_RCDEP,1:"")_$S($P($G(^RCY(344.31,Z,0)),U,15)'="":";.16////"_$P(^RCY(344.31,Z,0),U,15),1:"") D ^DIE
"RTN","RCDPEWL4",101,0)
 ;
"RTN","RCDPEWL4",102,0)
 I $O(RCER(0)) D
"RTN","RCDPEWL4",103,0)
 . S CT=1,DIR(0)="EA",DIR("A",1)="THE FOLLOWING PROBLEMS OCCURRED WHILE ADDING THE RECEIPT: "
"RTN","RCDPEWL4",104,0)
 . S Z=0 F  S Z=$O(RCER(Z)) Q:'Z  S CT=CT+1,DIR("A",CT)=RCER(Z)
"RTN","RCDPEWL4",105,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEWL4",106,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL4",107,0)
 ;
"RTN","RCDPEWL4",108,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO GO TO RECEIPT PROCESSING NOW? ",DIR("A",1)=" ",DIR("A",2)="RECEIPT "_$P($G(^RCY(344,+RECTDA,0)),U)_" HAS BEEN CREATED FOR THIS ERA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL4",109,0)
 I Y=1 S RCRECTDA=RECTDA D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPEWL4",110,0)
 S RCSCR=0
"RTN","RCDPEWL4",111,0)
 S VALMBCK="Q"
"RTN","RCDPEWL4",112,0)
 ;
"RTN","RCDPEWL4",113,0)
NEWRECQ Q
"RTN","RCDPEWL4",114,0)
 ;
"RTN","RCDPEWL4",115,0)
VRECPT ;EP - Protocol action - RCDPE EOB WL RECEIPT VIEW
"RTN","RCDPEWL4",116,0)
 ; Preview receipt lines
"RTN","RCDPEWL4",117,0)
 ; Assume RCSCR = ien from file 344.49 (and 344.4)
"RTN","RCDPEWL4",118,0)
 N DIR,RCOK,RCZ,X,Y,Z,Z0
"RTN","RCDPEWL4",119,0)
 D FULL^VALM1
"RTN","RCDPEWL4",120,0)
 S VALMBCK="R"
"RTN","RCDPEWL4",121,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEWL4",122,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEWL4",123,0)
 . D PAUSE^VALM1
"RTN","RCDPEWL4",124,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D VR^RCDPEWLP(RCSCR) G VRECPTQ   ; prca*4.5*298  auto-posted ERAs are handled differently
"RTN","RCDPEWL4",125,0)
 ;
"RTN","RCDPEWL4",126,0)
 ;
"RTN","RCDPEWL4",127,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL4",128,0)
 ; batches but just remove from execution.
"RTN","RCDPEWL4",129,0)
 ; I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL Q
"RTN","RCDPEWL4",130,0)
 ;I $O(^RCY(344.49,RCSCR,3,0)) D  Q:'RCOK
"RTN","RCDPEWL4",131,0)
 ;. S RCOK=1
"RTN","RCDPEWL4",132,0)
 ;. S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,3,Z)) Q:'Z  I '$P($G(^(Z,0)),U,3) S RCOK=0 Q
"RTN","RCDPEWL4",133,0)
 ;. I 'RCOK S DIR(0)="EA",DIR("A",1)="A RECEIPT CANNOT BE PREVIEWED UNTIL ALL BATCHES FOR THIS ERA ARE MARKED AS",DIR("A",2)="'READY TO POST'",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL4",134,0)
 ; end of prca*4.5*298
"RTN","RCDPEWL4",135,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  I $P(Z,".",2) S Z0=$G(^(Z,0)) I $P(Z0,U,6)<0 S RCZ($P(Z0,U))=$P(Z0,U,2)_U_$P(Z0,U,6)
"RTN","RCDPEWL4",136,0)
 I $O(RCZ(""))'="" D
"RTN","RCDPEWL4",137,0)
 . W !,"THE FOLLOWING LINES HAVE A NET PAYMENT LESS THAN 0.  THESE LINES MUST HAVE",!,"THIS NEGATIVE AMOUNT DISTRIBUTED TO OTHER LINE(S) IN THE ERA BEFORE A",!,"RECEIPT CAN BE CREATED."
"RTN","RCDPEWL4",138,0)
 . S Z="" F  S Z=$O(RCZ(Z)) Q:Z=""  W !,$J("",5)_$J(Z,10)_"  "_$E($P(RCZ(Z),U)_$J("",15),1,15)_"  "_$J(+$P(RCZ(Z),U,2),"",2)
"RTN","RCDPEWL4",139,0)
 . W !
"RTN","RCDPEWL4",140,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","RCDPEWL4",141,0)
 ;
"RTN","RCDPEWL4",142,0)
 D EN^VALM("RCDPE EOB RECEIPT PREVIEW")
"RTN","RCDPEWL4",143,0)
VRECPTQ ;
"RTN","RCDPEWL4",144,0)
 S VALMBCK=$S('$G(RCSCR):"Q",1:"R")
"RTN","RCDPEWL4",145,0)
 Q
"RTN","RCDPEWL4",146,0)
 ;
"RTN","RCDPEWL4",147,0)
 ; PRCA*4.5*303 - Receipt Processing 
"RTN","RCDPEWL4",148,0)
RECPROC ;EP - Protocol action -  RCDPE EON WORKLIST RECEIPT PROCESSING
"RTN","RCDPEWL4",149,0)
 ; Receipt Processing
"RTN","RCDPEWL4",150,0)
 ; Called by RCDPE EOB WORKLIST RECEIPT PROCESSING protocol
"RTN","RCDPEWL4",151,0)
 ; Assume RCSCR is the IEN from file 344.49 (and 344.4)
"RTN","RCDPEWL4",152,0)
 ; Variable RCRECTDA is needed by RECEIPT PROFILE so is not newed
"RTN","RCDPEWL4",153,0)
 ; Variable RCDPFXIT is used by RCDPLPLM for immediate exit so newed it here so that does not happen
"RTN","RCDPEWL4",154,0)
 ;
"RTN","RCDPEWL4",155,0)
 N ARRAY,RECIEN,RECEIPT,CNT,DIR,X,Y,DTOUT,DUOUT,DROUT,DIRUT,I,LIST,RCDPFXIT
"RTN","RCDPEWL4",156,0)
 D FULL^VALM1
"RTN","RCDPEWL4",157,0)
 S VALMBCK="R"
"RTN","RCDPEWL4",158,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEWL4",159,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEWL4",160,0)
 . D PAUSE^VALM1
"RTN","RCDPEWL4",161,0)
 ;
"RTN","RCDPEWL4",162,0)
 ; Get list of receipts from the ERA detail multiple
"RTN","RCDPEWL4",163,0)
 S RECIEN=0,CNT=0
"RTN","RCDPEWL4",164,0)
 F  S RECIEN=$O(^RCY(344.4,RCSCR,1,"RECEIPT",RECIEN)) Q:'RECIEN  D
"RTN","RCDPEWL4",165,0)
 . S RECEIPT=$P($G(^RCY(344,RECIEN,0)),U)
"RTN","RCDPEWL4",166,0)
 . I RECEIPT]"" S CNT=CNT+1,ARRAY(CNT)=RECEIPT_"^"_RECIEN
"RTN","RCDPEWL4",167,0)
 ;
"RTN","RCDPEWL4",168,0)
 ; The array of receipts does not exist, this could be a non auto-posted ERA; so only 1 receipt will be assigned; retrieve at 344.4, .08
"RTN","RCDPEWL4",169,0)
 I '$D(ARRAY),$$GET1^DIQ(344.4,RCSCR_",",.08)'="" S CNT=1,ARRAY(1)=$$GET1^DIQ(344.4,RCSCR_",",.08,"E")_"^"_$$GET1^DIQ(344.4,RCSCR_",",.08,"I")
"RTN","RCDPEWL4",170,0)
 ;
"RTN","RCDPEWL4",171,0)
 ; No receipt - display mesage and quit
"RTN","RCDPEWL4",172,0)
 I CNT=0 K DIR S DIR("A",1)="No receipts exist for this ERA." G RECPROCQ
"RTN","RCDPEWL4",173,0)
 ;
"RTN","RCDPEWL4",174,0)
 ; One receipt - Use it
"RTN","RCDPEWL4",175,0)
 I CNT=1 S RCRECTDA=$P(ARRAY(1),U,2) G RECPROC1
"RTN","RCDPEWL4",176,0)
 ;
"RTN","RCDPEWL4",177,0)
 ; Multiple receipts - User needs to select
"RTN","RCDPEWL4",178,0)
 W !
"RTN","RCDPEWL4",179,0)
 S LIST=""
"RTN","RCDPEWL4",180,0)
 F I=1:1:CNT S LIST=LIST_$S(LIST]"":";",1:"")_I_":"_$P(ARRAY(I),U,1)
"RTN","RCDPEWL4",181,0)
 S DIR(0)="SO^"_LIST,DIR("A")="Select Receipt"
"RTN","RCDPEWL4",182,0)
 D ^DIR
"RTN","RCDPEWL4",183,0)
 I Y<1!(Y>CNT) K DIR S DIR("A",1)="No selection made" G RECPROCQ
"RTN","RCDPEWL4",184,0)
 S RCRECTDA=$P(ARRAY(Y),U,2)
"RTN","RCDPEWL4",185,0)
RECPROC1 ;
"RTN","RCDPEWL4",186,0)
 D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPEWL4",187,0)
 ; If RCDPFXIT is set, exit option entirely was selected so quit back to the menu
"RTN","RCDPEWL4",188,0)
 I $G(RCDPFXIT) S VALMBCK="Q"
"RTN","RCDPEWL4",189,0)
 Q
"RTN","RCDPEWL4",190,0)
 ;
"RTN","RCDPEWL4",191,0)
RECPROCQ ;
"RTN","RCDPEWL4",192,0)
 ; Display the message in DIR("A",1) and then press enter
"RTN","RCDPEWL4",193,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWL4",194,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL4",195,0)
 Q
"RTN","RCDPEWL6")
0^22^B88977671
"RTN","RCDPEWL6",1,0)
RCDPEWL6 ;ALB/TMK/KML - ELECTRONIC EOB WORKLIST ACTIONS ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL6",2,0)
 ;;4.5;Accounts Receivable;**173,208,222,276,298,303,318,326**;Mar 20, 1995;Build 26
"RTN","RCDPEWL6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL6",4,0)
 Q
"RTN","RCDPEWL6",5,0)
 ;
"RTN","RCDPEWL6",6,0)
DISTADJ ;EP - Protocol action - RCDPE EOB WORKLIST DIST ADJ
"RTN","RCDPEWL6",7,0)
 ; Distribute an adjustment that retracts a payment to other bill(s)
"RTN","RCDPEWL6",8,0)
 ;
"RTN","RCDPEWL6",9,0)
 ; Input - RCSCR - Scratchpad #344.49 IEN
"RTN","RCDPEWL6",10,0)
 ;
"RTN","RCDPEWL6",11,0)
 N RCDA,RCDA1,RCAMT,RCADJ,RCQUIT,Z,Z0,Z1,DIR,X,Y,CT,RCZ,RCZ1,RCZ2,RCADJOK,TOT,DTOUT,DUOUT
"RTN","RCDPEWL6",12,0)
 N RCNONSP,RCACTIVE,RCZZ1,RCZZ2,RCADJSTR  ; prca276 - variables used to establish non-specific payment adjustments and AR BILL claim status (fix to negative claim balance issue)
"RTN","RCDPEWL6",13,0)
 D FULL^VALM1
"RTN","RCDPEWL6",14,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G DISTQ   ;prca*4.5*298  auto-posted ERAs cannot enter dISTRIBUTE ADJ AMTS action      
"RTN","RCDPEWL6",15,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G DISTQ
"RTN","RCDPEWL6",16,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL G DISTQ
"RTN","RCDPEWL6",17,0)
 ;
"RTN","RCDPEWL6",18,0)
 S Z=0,RCADJOK="" F  S Z=$O(^TMP("RCDPE-EOB_WLDX",$J,Z)) Q:'Z  S Z1=+$P($G(^(Z)),U,2),Z0=$G(^RCY(344.49,RCSCR,1,Z1,0)) D
"RTN","RCDPEWL6",19,0)
 . I $P(Z0,U)'["." S RCADJOK=($P(Z0,U,2)["**ADJ") Q
"RTN","RCDPEWL6",20,0)
 . ; Following validation line removed - allow distribution to non-VA claims - PRCA*4.5*326
"RTN","RCDPEWL6",21,0)
 . ;I '$P(Z0,U,7),'RCADJOK Q  ; Suspense item cannot be used to adjust
"RTN","RCDPEWL6",22,0)
 . I $P(Z0,U,6)<0 S RCZ(Z)=$P(Z0,U,6)_U_Z1 Q
"RTN","RCDPEWL6",23,0)
 . I $P(Z0,U,6)>0 D  Q
"RTN","RCDPEWL6",24,0)
 .. N Q,ONHLD,IBA
"RTN","RCDPEWL6",25,0)
 .. S ONHLD=0
"RTN","RCDPEWL6",26,0)
 .. I $P(Z0,U,7) I $$IB^IBRUTL(+$P(Z0,U,7),1) S Q=0 F  S Q=$O(IBA(Q)) Q:'Q  I $P($G(^IB(+IBA(Q),0)),U,5)=8 S ONHLD=1 Q
"RTN","RCDPEWL6",27,0)
 .. S RCZ1(+$P(Z0,U,6),Z)=Z1_U_ONHLD,RCZ2(Z)=Z1_U_$P(Z0,U,6)_U_ONHLD Q
"RTN","RCDPEWL6",28,0)
 ;
"RTN","RCDPEWL6",29,0)
 I $O(RCZ(0))="" D  G DISTQ
"RTN","RCDPEWL6",30,0)
 . S DIR(0)="EA",DIR("A",1)="NO LINES EXIST NEEDING ADJUSTMENT DISTRIBUTION",DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",31,0)
 ;
"RTN","RCDPEWL6",32,0)
 I $O(RCZ1(0))="" D  G DISTQ
"RTN","RCDPEWL6",33,0)
 . S DIR(0)="EA",DIR("A",1)="NO VALID LINES EXIST ON THIS ERA WHERE A DISTRIBUTION CAN BE MADE",DIR("A",2)=$$WHAT(RCSCR),DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",34,0)
 ;
"RTN","RCDPEWL6",35,0)
 S RCQUIT=0
"RTN","RCDPEWL6",36,0)
 F  S DIR(0)="NA^1:9999:3",DIR("A")="SELECT A LINE THAT NEEDS AN ADJUSTMENT AMOUNT DISTRIBUTED: " D  Q:RCQUIT
"RTN","RCDPEWL6",37,0)
 . S DIR("?",1)="THE FOLLOWING LINE(S) HAVE AN ADJUSTMENT THAT CAUSED A NEGATIVE NET PAYMENT.",DIR("?",2)="IN ORDER TO BALANCE THE RECEIPT AND THE DEPOSIT, THESE AMOUNTS WILL NEED TO",DIR("?",3)="  BE DISTRIBUTED TO OTHER LINE(S)",CT=3
"RTN","RCDPEWL6",38,0)
 . S Z=0
"RTN","RCDPEWL6",39,0)
 . F  S Z=$O(RCZ(Z)) Q:'Z  S CT=CT+1,DIR("?",CT)="  "_$J(Z,8)_"  "_$J($P(RCZ(Z),U),15,2)
"RTN","RCDPEWL6",40,0)
 . S DIR("?")=" "
"RTN","RCDPEWL6",41,0)
 . I $O(RCZ(0))=$O(RCZ(""),-1) S DIR("B")=$O(RCZ(0))
"RTN","RCDPEWL6",42,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL6",43,0)
 . I $D(DUOUT)!$D(DTOUT)!(Y="") S RCQUIT=1,RCDA="" Q
"RTN","RCDPEWL6",44,0)
 . I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !,"THIS LINE DOES NOT EXIST FOR THIS ERA" W ! Q
"RTN","RCDPEWL6",45,0)
 . I '$D(RCZ(Y)) D  Q:Y=""
"RTN","RCDPEWL6",46,0)
 .. I Y'[".",$D(RCZ(Y_".001")),$O(RCZ(Y+1),-1)=(Y_".001") S Y=Y_".001" Q
"RTN","RCDPEWL6",47,0)
 .. W !,$S(Y["."!($O(RCZ(Y))\1'=(Y\1)):"THIS LINE DOESN'T NEED AN ADJUSTMENT DISTRIBUTION",1:"PLEASE ENTER THE ENTIRE LINE # (Such as: 1.001)") W !
"RTN","RCDPEWL6",48,0)
 .. S Y=""
"RTN","RCDPEWL6",49,0)
 . W !,"  LINE #: "_+Y_"  AMOUNT NEEDED TO DISTRIBUTE: "_$J(+RCZ(Y),"",2),!
"RTN","RCDPEWL6",50,0)
 . ; RCDA = the ien of the line in file 344.491
"RTN","RCDPEWL6",51,0)
 . ; RCDA(1) = the line #        RCDA(2) = the amount to be adjusted (+)
"RTN","RCDPEWL6",52,0)
 . S RCDA=$P(RCZ(Y),U,2),RCDA(1)=Y,RCQUIT=1,RCDA(2)=-$P(RCZ(Y),U)
"RTN","RCDPEWL6",53,0)
 ;
"RTN","RCDPEWL6",54,0)
 G:$G(RCDA)="" DISTQ
"RTN","RCDPEWL6",55,0)
 ;
"RTN","RCDPEWL6",56,0)
 S RCQUIT=0
"RTN","RCDPEWL6",57,0)
 ;
"RTN","RCDPEWL6",58,0)
 ; PRCA*4.5*303 - May miss if multiple amounts are equal, changed calculation to use RCZ2 instead of RCZ1 
"RTN","RCDPEWL6",59,0)
 ; Old code: S (TOT,Z)=0 F  S Z=$O(RCZ1(Z)) Q:'Z  S TOT=TOT+Z
"RTN","RCDPEWL6",60,0)
 S (TOT,Z)=0 F  S Z=$O(RCZ2(Z)) Q:'Z  S TOT=TOT+$P(RCZ2(Z),U,2)
"RTN","RCDPEWL6",61,0)
 I TOT<RCDA(2) D  G DISTQ
"RTN","RCDPEWL6",62,0)
 . S DIR(0)="EA",DIR("A",1)="THE ERA DOES NOT HAVE ENOUGH VALID PAYMENTS TO OFFSET THIS DISTRIBUTION",DIR("A",2)=$$WHAT(RCSCR),DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",63,0)
 F  S DIR(0)="NA^1:9999:3",DIR("A")="SELECT A LINE TO DISTRIBUTE THE ADJUSTMENT AMOUNT TO: " D  Q:RCQUIT
"RTN","RCDPEWL6",64,0)
 . S DIR("?",1)="THE FOLLOWING LINE(S) HAVE A NET PAYMENT THAT CAN BE USED TO OFFSET THE",DIR("?",2)="  NEGATIVE NET PAYMENT FOR LINE "_RCDA(1)_" ("_$J(+$P(RCZ(RCDA(1)),U),"",2)_"):",CT=2
"RTN","RCDPEWL6",65,0)
 . S Z="" F  S Z=$O(RCZ1(Z),-1) Q:'Z  S Z0=0 F  S Z0=$O(RCZ1(Z,Z0)) Q:'Z0  S CT=CT+1,DIR("?",CT)="  "_$J(Z0,8)_"  "_$J(+Z,15,2)_$S($P(RCZ1(Z,Z0),U,2):" On hold exists",1:"")
"RTN","RCDPEWL6",66,0)
 . S DIR("?")=" "
"RTN","RCDPEWL6",67,0)
 . I $O(RCZ2(0))=$O(RCZ2(""),-1) S DIR("B")=$O(RCZ2(0))
"RTN","RCDPEWL6",68,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL6",69,0)
 . I $D(DUOUT)!$D(DTOUT)!(Y="") S RCQUIT=1,RCDA1="" Q
"RTN","RCDPEWL6",70,0)
 . I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !,"THIS LINE DOES NOT EXIST FOR THIS ERA" W ! Q
"RTN","RCDPEWL6",71,0)
 . I '$D(RCZ2(Y)) D  Q:Y=""
"RTN","RCDPEWL6",72,0)
 .. I Y'[".",$D(RCZ2(Y_".001")),$O(RCZ2(Y+1),-1)=(Y_".001") S Y=Y_".001" Q
"RTN","RCDPEWL6",73,0)
 .. I Y'[".",$O(RCZ2(Y))\1'=Y S Y=Y_"."
"RTN","RCDPEWL6",74,0)
 .. W !,$S(Y[".":"THIS LINE CANNOT BE USED FOR AN ADJUSTMENT DISTRIBUTION",1:"PLEASE ENTER THE ENTIRE LINE # (Such as: 1.001)") W !
"RTN","RCDPEWL6",75,0)
 .. S Y=""
"RTN","RCDPEWL6",76,0)
 . ; prca276 - next few lines represent the a fix to prevent distributions agains collected/closed claims (claim balance = zero dollars)
"RTN","RCDPEWL6",77,0)
 . ;distributions should only occur on line items that have specific payments against active claims 
"RTN","RCDPEWL6",78,0)
 . S RCZZ1=$P(^TMP("RCDPE-EOB_WLDX",$J,Y),U,2) ; get line item sequence # off the VIEW order before accessing the scratchpad
"RTN","RCDPEWL6",79,0)
 . S (RCZZ2,RCNONSP)=0 F  S RCZZ2=$O(^RCY(344.49,RCSCR,1,RCZZ1,1,RCZZ2)) Q:'RCZZ2  Q:RCNONSP  S RCADJSTR=$G(^(RCZZ2,0)) S RCNONSP=$S($P(RCADJSTR,U,2)=3:1,$P(RCADJSTR,U,2)=5:1,1:0)    ;identify if non-specific payment adjustments exist
"RTN","RCDPEWL6",80,0)
 . ; do not evaluate claim status for non-specific payment adjustments
"RTN","RCDPEWL6",81,0)
 . ;  or distributions to non-VistA claims - PRCA*4.5*326
"RTN","RCDPEWL6",82,0)
 . I 'RCNONSP,$P(^RCY(344.49,RCSCR,1,RCZZ1,0),U,7) D  Q:'RCACTIVE  ; PRCA*4.5*326
"RTN","RCDPEWL6",83,0)
 . . S RCACTIVE=$$GET1^DIQ(430,$P(^RCY(344.49,RCSCR,1,RCZZ1,0),U,7),8)
"RTN","RCDPEWL6",84,0)
 . . I (RCACTIVE'="ACTIVE")&(RCACTIVE'="OPEN") S RCACTIVE=0 W !,"THIS IS NOT AN ACTIVE BILL !",!,"CANNOT PERFORM DISTRIBUTION TO THIS CLAIM",! Q
"RTN","RCDPEWL6",85,0)
 . . S RCACTIVE=1
"RTN","RCDPEWL6",86,0)
 . I $P(RCZ2(Y),U,3) W !,"Warning - on-hold exists for this claim",!
"RTN","RCDPEWL6",87,0)
 . W !,"  LINE #: "_+Y_"  LINE BALANCE: "_$J(+$P(RCZ2(Y),U,2),"",2),!
"RTN","RCDPEWL6",88,0)
 . ; RCDA1 = the ien of the line in file 344.491
"RTN","RCDPEWL6",89,0)
 . ; RCDA1(1) = the line # in the display
"RTN","RCDPEWL6",90,0)
 . S RCDA1(1)=Y,RCDA1=+$G(RCZ2(Y)),RCQUIT=1
"RTN","RCDPEWL6",91,0)
 . S Z=$O(^RCY(344.49,RCSCR,1,"B",RCDA1(1)\1,0))
"RTN","RCDPEWL6",92,0)
 . S RCADJ=0
"RTN","RCDPEWL6",93,0)
 . I $P($G(^RCY(344.49,RCSCR,1,Z,0)),U,2)["**ADJ" S RCADJ=1 W !,"THE LINE SELECTED IS AN ADDITIONAL PAYMENT LINE, NOT SPECIFIC TO A CLAIM",!,"THE AMT WILL BE DISTRIBUTED, BUT A DECREASE ADJUSTMENT WILL NOT BE PERFORMED",!
"RTN","RCDPEWL6",94,0)
 ;
"RTN","RCDPEWL6",95,0)
 G:'$G(RCDA1) DISTQ
"RTN","RCDPEWL6",96,0)
 ;
"RTN","RCDPEWL6",97,0)
 S DIR("B")=$S(RCDA(2)<$P(RCZ2(RCDA1(1)),U,2):$J(RCDA(2),"",2),1:$J($P(RCZ2(+RCDA1(1)),U,2),"",2))
"RTN","RCDPEWL6",98,0)
 S DIR(0)="NA^.01:"_DIR("B")_":2",DIR("A")="ADJUSTMENT AMOUNT TO DISTRIBUTE: "
"RTN","RCDPEWL6",99,0)
 S DIR("?",1)="THIS IS THE AMOUNT OF THE ADJUSTMENT THAT SHOULD BE APPLIED TO THIS",DIR("?")="PAYMENT LINE.  THE AMT ENTERED MUST BE BETWEEN .01 AND "_$J(DIR("B"),"",2)
"RTN","RCDPEWL6",100,0)
 D ^DIR K DIR
"RTN","RCDPEWL6",101,0)
 ;
"RTN","RCDPEWL6",102,0)
 I $D(DUOUT)!$D(DTOUT)!'Y D  G DISTQ
"RTN","RCDPEWL6",103,0)
 . S DIR(0)="EA",DIR("A",1)="NO AMOUNT WAS ENTERED - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",104,0)
 S RCAMT=$J(Y,"",2)
"RTN","RCDPEWL6",105,0)
 ;
"RTN","RCDPEWL6",106,0)
 D ^DIR K DIR
"RTN","RCDPEWL6",107,0)
 I $D(DUOUT)!$D(DTOUT) D  G DISTQ
"RTN","RCDPEWL6",108,0)
 . S DIR(0)="EA",DIR("A")="USER ABORT - PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",109,0)
 ;
"RTN","RCDPEWL6",110,0)
 S Y=""
"RTN","RCDPEWL6",111,0)
 I 'RCADJ D  G:'$D(RCDA) DISTQ
"RTN","RCDPEWL6",112,0)
 . N Z,RCA
"RTN","RCDPEWL6",113,0)
 . S RCA=0,Z1=+$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCDA(1)\1)),U,2),Z=$G(^RCY(344.49,RCSCR,1,Z1,0)),RCA("#")=+$P($P(Z,U,2),"**ADJ",2)
"RTN","RCDPEWL6",114,0)
 . I $P(Z,U,2)["**ADJ" D
"RTN","RCDPEWL6",115,0)
 .. S RCA=1
"RTN","RCDPEWL6",116,0)
 .. S RCA("REF")=$S(RCA("#"):$P($G(^RCY(344.4,RCSCR,2,RCA("#"),0)),U),1:$P(Z,U,9))
"RTN","RCDPEWL6",117,0)
 . S Z=$S(RCA:RCA("#"),1:$G(^RCY(344.49,RCSCR,1,RCDA,0)))
"RTN","RCDPEWL6",118,0)
 . S DIR(0)="FAO^1:60",DIR("A")="  > ",DIR("A",1)="DECREASE ADJ COMMENT (1-60 CHARACTERS): "
"RTN","RCDPEWL6",119,0)
 . S DIR("B")="RETRACTED FOR "
"RTN","RCDPEWL6",120,0)
 . S DIR("B")=DIR("B")_$S(RCA:"ERA ADJ #"_Z_" Ref: "_RCA("REF"),1:"CLAIM "_$S($P(Z,U,2)'="":$P(Z,U,2),1:"UNKNOWN"))
"RTN","RCDPEWL6",121,0)
 . I $L(DIR("B"))>60 S DIR("B")=$E(DIR("B"),1,60)
"RTN","RCDPEWL6",122,0)
 . D ^DIR K DIR
"RTN","RCDPEWL6",123,0)
 . ;
"RTN","RCDPEWL6",124,0)
 . I $D(DUOUT)!$D(DTOUT) D  Q
"RTN","RCDPEWL6",125,0)
 .. K RCDA
"RTN","RCDPEWL6",126,0)
 .. S DIR(0)="EA",DIR("A")="USER ABORT - PRESS RETURN TO CONTINUE " D ^DIR K DIR
"RTN","RCDPEWL6",127,0)
 ;
"RTN","RCDPEWL6",128,0)
 D DISTADJ^RCDPEWL4(RCDA,RCDA1,RCAMT,Y)
"RTN","RCDPEWL6",129,0)
 ;
"RTN","RCDPEWL6",130,0)
DISTQ S VALMBCK="R"
"RTN","RCDPEWL6",131,0)
 Q
"RTN","RCDPEWL6",132,0)
 ;
"RTN","RCDPEWL6",133,0)
REFRESH ;EP - Protocol action - RCDPE EOB WORKLIST REFRESH
"RTN","RCDPEWL6",134,0)
 ; Refresh the entry in file 344.49 to remove all user adjustments
"RTN","RCDPEWL6",135,0)
 N DA,DIK,DIR,RCQUIT,RCREDEF,X,Y,Z,Z0
"RTN","RCDPEWL6",136,0)
 D FULL^VALM1
"RTN","RCDPEWL6",137,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEWL6",138,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEWL6",139,0)
 . D PAUSE^VALM1
"RTN","RCDPEWL6",140,0)
 . S VALMBCK="R"
"RTN","RCDPEWL6",141,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G REFQ   ;prca*4.5*298  auto-posted ERAs cannot enter REFRESH SCRATCHPAD action      
"RTN","RCDPEWL6",142,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G REFQ
"RTN","RCDPEWL6",143,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL6",144,0)
 ; batches but just remove from execution
"RTN","RCDPEWL6",145,0)
 ;I $G(^TMP("RCBATCH_SELECTED",$J)) D NOBATCH^RCDPEWL G REFQ  ;prca*4.5*298
"RTN","RCDPEWL6",146,0)
 S DIR(0)="YA"
"RTN","RCDPEWL6",147,0)
 S DIR("A",1)="THIS ACTION WILL DELETE AND REBUILD THIS EEOB WORKLIST SCRATCH PAD ENTRY",DIR("A",2)="ALL EDITS/SPLITS/DISTRIBUTE ADJUSTMENTS ENTERED FOR THIS ERA WILL BE ERASED"
"RTN","RCDPEWL6",148,0)
 S DIR("A",3)="AND ALL ENTRIES MARKED AS MANUALLY VERIFIED WILL BE UNMARKED",DIR("A",4)=" "
"RTN","RCDPEWL6",149,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO DO THIS?: "
"RTN","RCDPEWL6",150,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL6",151,0)
 I Y'=1 G REFQ
"RTN","RCDPEWL6",152,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL6",153,0)
 ; batches but just remove from execution
"RTN","RCDPEWL6",154,0)
 ;I $O(^RCY(344.49,RCSCR,3,0)) S RCQUIT=0 D  I RCQUIT G REFQ
"RTN","RCDPEWL6",155,0)
 ;. S DIR(0)="YA",DIR("A")="DO YOU WANT TO REDEFINE YOUR BATCHES TOO?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL6",156,0)
 ;. I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEWL6",157,0)
 ;. S RCREDEF=+Y
"RTN","RCDPEWL6",158,0)
 ;. K ^TMP($J,"BATCHES")
"RTN","RCDPEWL6",159,0)
 ;. S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,3,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","RCDPEWL6",160,0)
 ;.. I RCREDEF S DA=Z,DA(1)=RCSCR,DIK="^RCY(344.49,"_DA(1)_",3," D ^DIK Q
"RTN","RCDPEWL6",161,0)
 ;.. S ^TMP($J,"BATCHES",+$P(Z0,U,6),$P(Z0,U,7))=+Z0_U_$P(Z0,U,8)
"RTN","RCDPEWL6",162,0)
 ;. I 'RCREDEF S ^TMP($J,"BATCHES")=+$O(^TMP($J,"BATCHES",0))
"RTN","RCDPEWL6",163,0)
 ;. I RCREDEF D SETBATCH^RCDPEWLB(RCSCR)
"RTN","RCDPEWL6",164,0)
 D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEWL6",165,0)
 D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL6",166,0)
 K ^TMP($J,"BATCHES")
"RTN","RCDPEWL6",167,0)
REFQ S VALMBG=1,VALMBCK="R"
"RTN","RCDPEWL6",168,0)
 Q
"RTN","RCDPEWL6",169,0)
 ;
"RTN","RCDPEWL6",170,0)
WHAT(RCSCR) ; Text for what to do if not enough funds found for dist adj
"RTN","RCDPEWL6",171,0)
 Q $S($O(^RCY(344.31,"AERA",+RCSCR,0)):"THIS ERA MUST BE MOVED TO SUSPENSE",1:"THIS ERA'S RECEIPT MUST BE ENTERED MANUALLY")
"RTN","RCDPEWL6",172,0)
 ;
"RTN","RCDPEWL6",173,0)
ADJUST ; Allow entry into increase/decrease adjustment functions
"RTN","RCDPEWL6",174,0)
 N DIR,X,Y,RCTYP,RCY,DIC
"RTN","RCDPEWL6",175,0)
 D FULL^VALM1
"RTN","RCDPEWL6",176,0)
 ;
"RTN","RCDPEWL6",177,0)
 I $G(RCSCR("NOEDIT"))=2 D NOTAV^RCDPEWL2 G ADJUSTQ
"RTN","RCDPEWL6",178,0)
 ; PRCA*4.5*276 - check for authorized user
"RTN","RCDPEWL6",179,0)
 I '$D(^XUSEC("PRCADJ",DUZ)) D  Q
"RTN","RCDPEWL6",180,0)
 .S DIR(0)="EA",DIR("A",1)="The Adjust (Inc/Dec) Action is locked."
"RTN","RCDPEWL6",181,0)
 .S DIR("A",2)="Please speak to your Supervisor to request the key."
"RTN","RCDPEWL6",182,0)
 .S DIR("A")="PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEWL6",183,0)
 ; PRCA*4.5*276 - end of changes
"RTN","RCDPEWL6",184,0)
 ;
"RTN","RCDPEWL6",185,0)
 S DIR(0)="SA^D:DECREASE ADJUSTMENT;I:INCREASE ADJUSTMENT",DIR("B")="DECREASE ADJUSTMENT",DIR("A")="TYPE OF ADJUSTMENT: "
"RTN","RCDPEWL6",186,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL6",187,0)
 M ^TMP("RC_SAVE_TMP",$J)=^TMP($J)
"RTN","RCDPEWL6",188,0)
 I $D(DUOUT)!$D(DTOUT)!(Y="") G ADJUSTQ
"RTN","RCDPEWL6",189,0)
 ;
"RTN","RCDPEWL6",190,0)
 S RCTYP=$S(Y="D":"DECREASE",1:"INCREASE")
"RTN","RCDPEWL6",191,0)
 F  S RCY=$$GETABILL^RCBEUBIL Q:RCY<0!(RCY'<1)
"RTN","RCDPEWL6",192,0)
 G:RCY<1 ADJUSTQ
"RTN","RCDPEWL6",193,0)
 D ADJUST^RCBEADJ(RCTYP,RCY_";"_RCSCR)
"RTN","RCDPEWL6",194,0)
 I $D(^TMP("RC_BILL",$J,RCY)) D
"RTN","RCDPEWL6",195,0)
 . D UPDBAL(RCY)
"RTN","RCDPEWL6",196,0)
 . W !,"Claim balance is now: ",$J(+$P($$BILL^RCJIBFN2(RCY),U,3),"",2)
"RTN","RCDPEWL6",197,0)
 ;
"RTN","RCDPEWL6",198,0)
ADJUSTQ D RESTMP
"RTN","RCDPEWL6",199,0)
 D RET^RCDPEWL2
"RTN","RCDPEWL6",200,0)
 S VALMBCK="R"
"RTN","RCDPEWL6",201,0)
 Q
"RTN","RCDPEWL6",202,0)
 ;
"RTN","RCDPEWL6",203,0)
RESTMP ;
"RTN","RCDPEWL6",204,0)
 I $D(^TMP("RC_SAVE_TMP",$J)) M ^TMP($J)=^TMP("RC_SAVE_TMP",$J) K ^TMP("RC_SAVE_TMP")
"RTN","RCDPEWL6",205,0)
 Q
"RTN","RCDPEWL6",206,0)
 ;
"RTN","RCDPEWL6",207,0)
UPDBAL(RCY) ; Updates the claim balance if bill exists in list
"RTN","RCDPEWL6",208,0)
 ; RCY = ien of bill in file 430
"RTN","RCDPEWL6",209,0)
 ;
"RTN","RCDPEWL6",210,0)
 N X,Y,Z,Z0,Z1
"RTN","RCDPEWL6",211,0)
 S Z0=$J(+$P($$BILL^RCJIBFN2(RCY),U,3),"",2)
"RTN","RCDPEWL6",212,0)
 S Z=0 F  S Z=$O(^TMP("RC_BILL",$J,RCY,Z)) Q:'Z  D
"RTN","RCDPEWL6",213,0)
 . S X=+$G(^TMP("RCDPE-EOB_WLDX",$J,Z))
"RTN","RCDPEWL6",214,0)
 . Q:'X
"RTN","RCDPEWL6",215,0)
 . S Y=$G(^TMP("RCDPE-EOB_WL",$J,X+1,0))
"RTN","RCDPEWL6",216,0)
 . I Y["Claim Bal: " S Z1=$P(Y,"Claim Bal: ")_"Claim Bal: "_Z0_$G(^TMP("RC_BILL",$J,RCY,Z)),^TMP("RCDPE-EOB_WL",$J,X+1,0)=Z1
"RTN","RCDPEWL6",217,0)
 Q
"RTN","RCDPEWL6",218,0)
 ;
"RTN","RCDPEWL7")
0^17^B237405649
"RTN","RCDPEWL7",1,0)
RCDPEWL7 ;ALB/TMK/KML - EDI LOCKBOX WORKLIST ERA DISPLAY SCREEN ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL7",2,0)
 ;;4.5;Accounts Receivable;**208,222,269,276,298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEWL7",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL7",4,0)
 Q
"RTN","RCDPEWL7",5,0)
 ;
"RTN","RCDPEWL7",6,0)
BLD(RCSORT) ; Build list with sort criteria
"RTN","RCDPEWL7",7,0)
 ; RCSORT = the sort levels to use to display the data in ^ pieces
"RTN","RCDPEWL7",8,0)
 ;  piece 1 = the codes for the first level sort (sort code;null or -)
"RTN","RCDPEWL7",9,0)
 ;  piece 2 = the codes for the second level sort
"RTN","RCDPEWL7",10,0)
 ;     sort code is the type of data to sort by;- indicates reverse order
"RTN","RCDPEWL7",11,0)
 N Z,Z1,RCT,RCZ
"RTN","RCDPEWL7",12,0)
 S (RCT,VALMCNT)=0
"RTN","RCDPEWL7",13,0)
 I '$D(^TMP($J,"RCERA_LIST")) D
"RTN","RCDPEWL7",14,0)
 . S Z=0 F  S Z=$O(^TMP("RCDPE-ERA_WLDX",$J,Z)) Q:'Z  S RCZ=$P($G(^(Z)),U,2) D
"RTN","RCDPEWL7",15,0)
 .. I $$FILTER(RCZ) S ^TMP($J,"RCERA_LIST",$$SL(RCZ,$P(RCSORT,U)),$$SL(RCZ,$P(RCSORT,U,2)),RCZ)=""
"RTN","RCDPEWL7",16,0)
 . K ^TMP("RCDPE-ERA_WLDX",$J),^TMP("RCDPE-ERA_WL",$J)
"RTN","RCDPEWL7",17,0)
 ;
"RTN","RCDPEWL7",18,0)
 S Z=""
"RTN","RCDPEWL7",19,0)
 I RCSORT'["PN;-" D
"RTN","RCDPEWL7",20,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z)) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1)) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",21,0)
 ;
"RTN","RCDPEWL7",22,0)
 I $P(RCSORT,U)["PN;-" D
"RTN","RCDPEWL7",23,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z),-1) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1)) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",24,0)
 ;
"RTN","RCDPEWL7",25,0)
 I $P(RCSORT,U,2)["PN;-" D
"RTN","RCDPEWL7",26,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z)) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1),-1) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",27,0)
 ;
"RTN","RCDPEWL7",28,0)
 I '$O(^TMP($J,"RCERA_LIST",0)) D SET("No ERAs left for your selection criteria")
"RTN","RCDPEWL7",29,0)
 K ^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",30,0)
 S ^TMP("RCERA_PARAMS",$J,"SORT")=RCSORT
"RTN","RCDPEWL7",31,0)
 Q
"RTN","RCDPEWL7",32,0)
 ;
"RTN","RCDPEWL7",33,0)
EXTRACT(RCSRT1,RCSRT2,RCT) ; Extract the data
"RTN","RCDPEWL7",34,0)
 ; RCSRT1 = data value at 1st sort level
"RTN","RCDPEWL7",35,0)
 ; RCSRT2 = data value at 2nd sort level
"RTN","RCDPEWL7",36,0)
 ; RCT = running entry counter - returned if passed by ref
"RTN","RCDPEWL7",37,0)
 N AUTOCOMP,FIRST,MDT,RC0,RCARC,RCEFT,RCEXCEP,RCPOST,RCSTAT,RCZ,X,XX,Z,Z0 ;PRCA*4.5*318 Variable XX added
"RTN","RCDPEWL7",38,0)
 S RCZ=0 F  S RCZ=$O(^TMP($J,"RCERA_LIST",RCSRT1,RCSRT2,RCZ)) Q:'RCZ  D
"RTN","RCDPEWL7",39,0)
 . S RCT=RCT+1,RC0=$G(^RCY(344.4,RCZ,0))
"RTN","RCDPEWL7",40,0)
 . S RCEFT=+$O(^RCY(344.31,"AERA",RCZ,0))
"RTN","RCDPEWL7",41,0)
 . S MDT=$$MATCHDT^RCDPEWL7(RCEFT,"2D") ; PRCA*4.5*326 - Add date matched
"RTN","RCDPEWL7",42,0)
 . S RCEXCEP=$$XCEPT^RCDPEWLP(RCZ)  ; prca*4.5*298  assignment of ERA exception flag
"RTN","RCDPEWL7",43,0)
 . S AUTOCOMP=$$STA(RCZ) ;PRCA*4.5*326
"RTN","RCDPEWL7",44,0)
 . S RCARC=$$WLF^RCDPEWLZ(RCZ)
"RTN","RCDPEWL7",45,0)
 . S RCSTAT=$S('RCEFT:U_$S($P(RC0,U,15)="CHK":"(CHECK PAYMENT EXPECTED)",$P(RC0,U,15)="NON":"(NO PAYMENT EXPECTED)",$P(RC0,U,9)=2:"(CHECK PAYMENT CHOSEN)",1:"N/A"),1:$$FMSSTAT^RCDPUREC(+$P($G(^RCY(344.31,RCEFT,0)),U,9)))
"RTN","RCDPEWL7",46,0)
 . S RCPOST=$S(RCEFT:"EFT RECEIPT STATUS: ",1:"")_$P(RCSTAT,U,2)
"RTN","RCDPEWL7",47,0)
 . ;prca*4.5*298 include Auto-Post Complete indicator and ERA exception flag in $SELECT statement
"RTN","RCDPEWL7",48,0)
 . S X=$E(RCT_$J("",5),1,5)_"  "_$S(RCEXCEP]"":RCEXCEP,AUTOCOMP]"":AUTOCOMP,RCARC]"":RCARC,$D(^RCY(344.49,RCZ)):" ",1:"-")_$E($P(RC0,U)_$J("",10),1,10)_"  "_$E($P(RC0,U,2)_$J("",50),1,50)
"RTN","RCDPEWL7",49,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",50,0)
 . S X=$J("",43)_$J($$FMTE^XLFDT($P(RC0,U,7),"2D"),8)_$J("",2)_$J(+$P(RC0,U,5),12,2)
"RTN","RCDPEWL7",51,0)
 . S $E(X,73,80)=$$FMTE^XLFDT($P(RC0,U,7),"2D")
"RTN","RCDPEWL7",52,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",53,0)
 . ; PRCA*4.5*326 Start changed block
"RTN","RCDPEWL7",54,0)
 . S X=$J("",8)_$E($P(RC0,U,6)_$J("",30),1,30)_"  APPROX # EEOBs: "_+$$CTEEOB^RCDPEWLB(RCZ)
"RTN","RCDPEWL7",55,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",56,0)
 . S X=$P(RC0,U,9),XX=$$EXTERNAL^DILFD(344.4,.09,"",$P(RC0,U,9))
"RTN","RCDPEWL7",57,0)
 . S XX=$S(X=1:"EFT MATCHED",X=2:"CHK MATCHED",X=3:"MATCH-0 PAY",XX=-1:"MATCH W/ERR",1:$P(XX," ",1))
"RTN","RCDPEWL7",58,0)
 . I X=2 S MDT=$$GET1^DIQ(344.4,RCZ_",",5.03,"I") I MDT'="" S MDT=$$FMTE^XLFDT(MDT,"2D")
"RTN","RCDPEWL7",59,0)
 . S:$$UNBAL^RCDPEAP1(RCZ) XX=XX_" - UNBALANCED"
"RTN","RCDPEWL7",60,0)
 . S X=$J("",8)_$E(XX_$J("",25),1,25)_" "_$E(MDT_$J("",8),1,8)
"RTN","RCDPEWL7",61,0)
 . S X=X_"  "_RCPOST
"RTN","RCDPEWL7",62,0)
 . ; PRCA*4.5*326 End changed block
"RTN","RCDPEWL7",63,0)
 . D SET(X,RCT)
"RTN","RCDPEWL7",64,0)
 . D SET(" ",RCT)
"RTN","RCDPEWL7",65,0)
 ;.; prca*4.5*298  per patch requirements, keep code related to
"RTN","RCDPEWL7",66,0)
 ;. ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL7",67,0)
 ;. ;I $G(^TMP("RCERA_PARAMS",$J,"BATCHON")) D
"RTN","RCDPEWL7",68,0)
 ;.. ;S Z=0 F  S Z=$O(^RCY(344.49,RCZ,3,Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="" D
"RTN","RCDPEWL7",69,0)
 ;...; S X=$J("",12)_$E("- BATCH #"_$P(Z0,U)_$J("",4),1,13)_" "_$E($P(Z0,U,2)_$J("",30),1,30)_"  "_$S('$P(Z0,U,3):"NOT ",1:"")_"READY TO POST"
"RTN","RCDPEWL7",70,0)
 ;... ;D SET(X,RCT)
"RTN","RCDPEWL7",71,0)
 ;
"RTN","RCDPEWL7",72,0)
 S VALMSG="Enter ?? for more actions and help" ; PRCA*4.5*326
"RTN","RCDPEWL7",73,0)
 ;
"RTN","RCDPEWL7",74,0)
 Q
"RTN","RCDPEWL7",75,0)
 ;
"RTN","RCDPEWL7",76,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEWL7",77,0)
STA(RCZ) ;Determine auto-post status and if marked for auto-post
"RTN","RCDPEWL7",78,0)
 ; Input - RCZ = ERA ien
"RTN","RCDPEWL7",79,0)
 ; Output - "" = UNPOSTED
"RTN","RCDPEWL7",80,0)
 ;          "A" = COMPLETE
"RTN","RCDPEWL7",81,0)
 ;          "P" = PARTIAL
"RTN","RCDPEWL7",82,0)
 ;          "M" = MARKED
"RTN","RCDPEWL7",83,0)
 N STA
"RTN","RCDPEWL7",84,0)
 ;Get ERA auto-post status
"RTN","RCDPEWL7",85,0)
 S STA=$$GET1^DIQ(344.4,RCZ_",",4.02,"I")
"RTN","RCDPEWL7",86,0)
 ;Not auto-post ERA
"RTN","RCDPEWL7",87,0)
 Q:STA="" ""
"RTN","RCDPEWL7",88,0)
 ;Unposted but marked for autopost
"RTN","RCDPEWL7",89,0)
 I STA=0,$$GET1^DIQ(344.4,RCZ_",",4.04,"I")]"" Q "M"
"RTN","RCDPEWL7",90,0)
 ;Unposted - EFT still not accepted
"RTN","RCDPEWL7",91,0)
 Q:STA=0 ""
"RTN","RCDPEWL7",92,0)
 ;Complete
"RTN","RCDPEWL7",93,0)
 Q:STA=2 "A"
"RTN","RCDPEWL7",94,0)
 ;Partial
"RTN","RCDPEWL7",95,0)
 N MATCH,SUB
"RTN","RCDPEWL7",96,0)
 S MATCH=0,SUB=0
"RTN","RCDPEWL7",97,0)
 F  S SUB=$O(^RCY(344.4,RCZ,1,SUB)) Q:'SUB  D  Q:MATCH
"RTN","RCDPEWL7",98,0)
 .S MATCH=$$GET1^DIQ(344.41,SUB_","_RCZ,6,"I")
"RTN","RCDPEWL7",99,0)
 Q $S(MATCH:"M",1:"P")
"RTN","RCDPEWL7",100,0)
 ; END PRCA*4.5*326
"RTN","RCDPEWL7",101,0)
 ;
"RTN","RCDPEWL7",102,0)
MATCHDT(RCEFT,FORMAT) ;EP
"RTN","RCDPEWL7",103,0)
 ; Get the Date the ERA was matched
"RTN","RCDPEWL7",104,0)
 ; Input: RCEFT    - IEN for file 344.31
"RTN","RCDPEWL7",105,0)
 ;        FORMAT   - (Optional) date format for second parameter of FMTE^XLFDT (Defaults to 2DZ)
"RTN","RCDPEWL7",106,0)
 ; Returns: External date when the ERA was matched or ""
"RTN","RCDPEWL7",107,0)
 I '$G(RCEFT) Q ""
"RTN","RCDPEWL7",108,0)
 N IENS,XX
"RTN","RCDPEWL7",109,0)
 I $G(FORMAT)="" S FORMAT="2DZ"
"RTN","RCDPEWL7",110,0)
 S XX=$O(^RCY(344.31,RCEFT,4,"A"),-1)   ; Get last Match Status History record
"RTN","RCDPEWL7",111,0)
 Q:XX="" ""
"RTN","RCDPEWL7",112,0)
 S IENS=XX_","_RCEFT_","
"RTN","RCDPEWL7",113,0)
 S XX=$$GET1^DIQ(344.314,IENS,.02,"I")
"RTN","RCDPEWL7",114,0)
 Q:XX="" ""
"RTN","RCDPEWL7",115,0)
 S XX=$$FMTE^XLFDT(XX,FORMAT)
"RTN","RCDPEWL7",116,0)
 Q XX
"RTN","RCDPEWL7",117,0)
 ;
"RTN","RCDPEWL7",118,0)
SL(Y,SORT) ; Returns data for sort level from entry Y in file 344.4
"RTN","RCDPEWL7",119,0)
 ; SORT = the sort data in ';' delimited pieces
"RTN","RCDPEWL7",120,0)
 ;    pc 1 = code for sort data
"RTN","RCDPEWL7",121,0)
 ;    pc 2 = the order requested (- or null)
"RTN","RCDPEWL7",122,0)
 ;
"RTN","RCDPEWL7",123,0)
 N RC0,DAT,SORT1,SORT2
"RTN","RCDPEWL7",124,0)
 S SORT1=$P(SORT,";"),SORT2=$P(SORT,";",2)
"RTN","RCDPEWL7",125,0)
 S RC0=$G(^RCY(344.4,Y,0)),DAT=" "
"RTN","RCDPEWL7",126,0)
 ; No sort
"RTN","RCDPEWL7",127,0)
 I SORT="" G SLQ
"RTN","RCDPEWL7",128,0)
 ; Amt paid
"RTN","RCDPEWL7",129,0)
 I SORT1="AP" D  G SLQ
"RTN","RCDPEWL7",130,0)
 . S DAT=SORT2_+$P(RC0,U,5)
"RTN","RCDPEWL7",131,0)
 ; ERA date pd
"RTN","RCDPEWL7",132,0)
 I SORT1="DP" D  G SLQ
"RTN","RCDPEWL7",133,0)
 . S DAT=SORT2_($P(RC0,U,4)\1)
"RTN","RCDPEWL7",134,0)
 ; Payer name
"RTN","RCDPEWL7",135,0)
 I SORT1="PN" D  G SLQ
"RTN","RCDPEWL7",136,0)
 . S DAT=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEWL7",137,0)
 ; ERA date received
"RTN","RCDPEWL7",138,0)
 I SORT1="DR" D  G SLQ
"RTN","RCDPEWL7",139,0)
 . S DAT=SORT2_($P(RC0,U,7)\1)
"RTN","RCDPEWL7",140,0)
 ;
"RTN","RCDPEWL7",141,0)
SLQ Q $S(DAT'="":DAT,1:" ")
"RTN","RCDPEWL7",142,0)
 ;
"RTN","RCDPEWL7",143,0)
INIT ; Entry point for List template to build the display of ERAs
"RTN","RCDPEWL7",144,0)
 ;
"RTN","RCDPEWL7",145,0)
 ; Parameters for selecting ERAs to be included in the list are
"RTN","RCDPEWL7",146,0)
 ; contained in the global ^TMP("RCERA_PARAMS",$J,parameter name)
"RTN","RCDPEWL7",147,0)
 ;
"RTN","RCDPEWL7",148,0)
 N RCZ,RC0,RCT,RCTT,RCQUIT,RCDTFR,RCDTTO,DTOUT,DUOUT,DIR,X,Y,Z,Z1,RCPOST,RCEFT,RCINDX,QFLG
"RTN","RCDPEWL7",149,0)
 D CLEAN^VALM10
"RTN","RCDPEWL7",150,0)
 K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",151,0)
 ;
"RTN","RCDPEWL7",152,0)
 S (RCT,RCTT,RCQUIT)=0
"RTN","RCDPEWL7",153,0)
 ;
"RTN","RCDPEWL7",154,0)
 S RCDTFR=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U),RCDTTO=$S($P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U,2):$P(^("RCDT"),U,2),1:DT)
"RTN","RCDPEWL7",155,0)
 ;
"RTN","RCDPEWL7",156,0)
 S RCINDX=$S(RCDTFR:RCDTFR-.00000001,1:0)
"RTN","RCDPEWL7",157,0)
 W !!,"SEARCHING, PLEASE STANDBY (PRESS '^' TO QUIT SEARCH)",!!
"RTN","RCDPEWL7",158,0)
 F  S RCINDX=$O(^RCY(344.4,"AFD",RCINDX)) Q:'RCINDX!(RCINDX\1>RCDTTO)!RCQUIT  S RCZ=0 F  S RCZ=$O(^RCY(344.4,"AFD",RCINDX,RCZ)) Q:'RCZ  D  Q:RCQUIT
"RTN","RCDPEWL7",159,0)
 . S RCTT=RCTT+1
"RTN","RCDPEWL7",160,0)
 . I (RCTT#10000=0) D  Q:RCQUIT=1
"RTN","RCDPEWL7",161,0)
 . . S RCTT=0
"RTN","RCDPEWL7",162,0)
 . . D WAIT^DICD
"RTN","RCDPEWL7",163,0)
 . . D INITKB^XGF ; supported by DBIA 3173
"RTN","RCDPEWL7",164,0)
 . . S QFLG=$$READ^XGF(1,1)
"RTN","RCDPEWL7",165,0)
 . . Q:$G(DTOUT)
"RTN","RCDPEWL7",166,0)
 . . S:QFLG="^" RCQUIT=1 Q
"RTN","RCDPEWL7",167,0)
 . . I $D(DUOUT)!(Y=0) S RCQUIT=1 Q
"RTN","RCDPEWL7",168,0)
 . . D RESETKB^XGF
"RTN","RCDPEWL7",169,0)
 . ;
"RTN","RCDPEWL7",170,0)
 . S RC0=$G(^RCY(344.4,RCZ,0))
"RTN","RCDPEWL7",171,0)
 . I $$FILTER(RCZ) S ^TMP($J,"RCERA_LIST",$$SL(RCZ,"DR"),$$SL(RCZ,""),RCZ)=""
"RTN","RCDPEWL7",172,0)
 ;
"RTN","RCDPEWL7",173,0)
 ; Output the list
"RTN","RCDPEWL7",174,0)
 I 'RCQUIT D
"RTN","RCDPEWL7",175,0)
 . D:$D(^TMP($J,"RCERA_LIST")) BLD("DR^N")
"RTN","RCDPEWL7",176,0)
 . ; If no ERAs found display the message below in the list area
"RTN","RCDPEWL7",177,0)
 . I '$O(^TMP("RCDPE-ERA_WL",$J,0)) D
"RTN","RCDPEWL7",178,0)
 . . S ^TMP("RCDPE-ERA_WL",$J,1,0)="THERE ARE NO ERAs MATCHING YOUR SELECTION CRITERIA" S VALMCNT=2
"RTN","RCDPEWL7",179,0)
 I RCQUIT K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP($J,"RCERA_LIST") S VALMQUIT=""
"RTN","RCDPEWL7",180,0)
 Q
"RTN","RCDPEWL7",181,0)
 ;
"RTN","RCDPEWL7",182,0)
HDR ; Header for ERA Worklist (List user Current Screen View selections)
"RTN","RCDPEWL7",183,0)
 ; Input: ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWL7",184,0)
 ; Output: VALMHDR
"RTN","RCDPEWL7",185,0)
 N X,XX,XX2
"RTN","RCDPEWL7",186,0)
 ;
"RTN","RCDPEWL7",187,0)
 ; PRCA*4.5*321 - Total re-write of header subroutine to add new filters and shorten lines etc.
"RTN","RCDPEWL7",188,0)
 ; First header line. Date range and Pharmacy/Tricare/Medical
"RTN","RCDPEWL7",189,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCDT"))
"RTN","RCDPEWL7",190,0)
 S XX="DATE RANGE  : "
"RTN","RCDPEWL7",191,0)
 I $P(X,U) D  ;
"RTN","RCDPEWL7",192,0)
 . S XX=XX_$$FMTE^XLFDT($P(X,U),2)
"RTN","RCDPEWL7",193,0)
 . I $P(X,U,2) S XX=XX_"-"_$$FMTE^XLFDT($P(X,U,2),2)
"RTN","RCDPEWL7",194,0)
 E  S XX=XX_"NONE SELECTED"
"RTN","RCDPEWL7",195,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWL7",196,0)
 S XX2="PHARM/TRIC/MEDICAL: "
"RTN","RCDPEWL7",197,0)
 S XX2=XX2_$S(X="M":"MEDICAL ONLY",X="P":"PHARMACY ONLY",X="T":"TRICARE ONLY",1:"ALL")
"RTN","RCDPEWL7",198,0)
 S XX=$$SETSTR^VALM1(XX2,XX,40,41)
"RTN","RCDPEWL7",199,0)
 S VALMHDR(1)=XX
"RTN","RCDPEWL7",200,0)
 ;
"RTN","RCDPEWL7",201,0)
 ; Second header line. Match/Unmatched and Auto-posting/Non Autoposting
"RTN","RCDPEWL7",202,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH"))
"RTN","RCDPEWL7",203,0)
 S XX="MATCH STATUS: "_$S(X="N":"NOT MATCHED",X="M":"MATCHED",1:"BOTH")
"RTN","RCDPEWL7",204,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))
"RTN","RCDPEWL7",205,0)
 S XX2="AUTO-POSTING: "
"RTN","RCDPEWL7",206,0)
 S XX2=XX2_$S(X="A":"AUTO-POSTING ONLY",X="N":"NON AUTO-POSTING ONLY",1:"BOTH")
"RTN","RCDPEWL7",207,0)
 S XX=$$SETSTR^VALM1(XX2,XX,46,35)
"RTN","RCDPEWL7",208,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEWL7",209,0)
 I X'="N" D
"RTN","RCDPEWL7",210,0)
 .S X=$G(^TMP("RCERA_PARAMS",$J,"RCAPSTA"))
"RTN","RCDPEWL7",211,0)
 .S XX2="AUTOP: "_$S(X="P":"PARTIAL",X="C":"COMPLETE",X="M":"MARKED",1:"ALL")
"RTN","RCDPEWL7",212,0)
 .S XX=$$SETSTR^VALM1(XX2,XX,27,15)
"RTN","RCDPEWL7",213,0)
 ; END PRCA*4.5*326
"RTN","RCDPEWL7",214,0)
 S VALMHDR(2)=XX
"RTN","RCDPEWL7",215,0)
 ;
"RTN","RCDPEWL7",216,0)
 ; Third header line. Post status, payer name range and zero payment/payment
"RTN","RCDPEWL7",217,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWL7",218,0)
 S XX="POST STATUS : "_$S(X="U":"UNPOSTED",X="P":"POSTED",1:"BOTH")
"RTN","RCDPEWL7",219,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEWL7",220,0)
 I $P(X,U)="A"!(X="") D  ;
"RTN","RCDPEWL7",221,0)
 . S XX2="ALL PAYERS"
"RTN","RCDPEWL7",222,0)
 E  D  ;
"RTN","RCDPEWL7",223,0)
 . S XX2=$P(X,U,2)_"-"_$P(X,U,3)
"RTN","RCDPEWL7",224,0)
 . I $L(XX2)>11 S XX2="RANGE"
"RTN","RCDPEWL7",225,0)
 S XX2="PAYERS: "_XX2
"RTN","RCDPEWL7",226,0)
 S XX=$$SETSTR^VALM1(XX2,XX,26,20)
"RTN","RCDPEWL7",227,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))
"RTN","RCDPEWL7",228,0)
 S XX2="PAYMENT TYPE: "
"RTN","RCDPEWL7",229,0)
 S XX2=XX2_$S(X="Z":"ZERO PAYMENTS ONLY",X="P":"PAYMENTS ONLY",1:"BOTH")
"RTN","RCDPEWL7",230,0)
 S XX=$$SETSTR^VALM1(XX2,XX,46,35)
"RTN","RCDPEWL7",231,0)
 S VALMHDR(3)=XX
"RTN","RCDPEWL7",232,0)
 ;
"RTN","RCDPEWL7",233,0)
 S VALMHDR(4)="#       ERA #            Trace#"
"RTN","RCDPEWL7",234,0)
 Q
"RTN","RCDPEWL7",235,0)
 ;
"RTN","RCDPEWL7",236,0)
FNL ; -- Clean up list
"RTN","RCDPEWL7",237,0)
 K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP("RCERA_PARAMS",$J),^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",238,0)
 Q
"RTN","RCDPEWL7",239,0)
 ;
"RTN","RCDPEWL7",240,0)
SET(X,RCSEQ,RCSEQ1) ; -- set arrays
"RTN","RCDPEWL7",241,0)
 ; X = the data to set into the global
"RTN","RCDPEWL7",242,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL7",243,0)
 ; RCSEQ1 = the ien of the entry in file 344.4
"RTN","RCDPEWL7",244,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-ERA_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL7",245,0)
 I $G(RCSEQ) S ^TMP("RCDPE-ERA_WL",$J,"IDX",VALMCNT,RCSEQ)=$G(RCSEQ1)
"RTN","RCDPEWL7",246,0)
 I $G(RCSEQ1) S ^TMP("RCDPE-ERA_WLDX",$J,RCSEQ)=VALMCNT_U_RCSEQ1
"RTN","RCDPEWL7",247,0)
 Q
"RTN","RCDPEWL7",248,0)
 ;
"RTN","RCDPEWL7",249,0)
ENTERWL ; Enter the worklist with an ERA
"RTN","RCDPEWL7",250,0)
 D WL($$SEL())
"RTN","RCDPEWL7",251,0)
 D BLD($G(^TMP("RCERA_PARAMS",$J,"SORT")))
"RTN","RCDPEWL7",252,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",253,0)
 Q
"RTN","RCDPEWL7",254,0)
 ;
"RTN","RCDPEWL7",255,0)
SEL() ; Select an ERA from the ERA list
"RTN","RCDPEWL7",256,0)
 N RCDA,VALMY
"RTN","RCDPEWL7",257,0)
 D FULL^VALM1
"RTN","RCDPEWL7",258,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL7",259,0)
 S RCERA=0
"RTN","RCDPEWL7",260,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RCERA=+$P($G(^TMP("RCDPE-ERA_WLDX",$J,RCDA)),U,2)
"RTN","RCDPEWL7",261,0)
 ;
"RTN","RCDPEWL7",262,0)
 Q RCERA
"RTN","RCDPEWL7",263,0)
 ;
"RTN","RCDPEWL7",264,0)
WL(RCERA) ; Enter worklist
"RTN","RCDPEWL7",265,0)
 ;
"RTN","RCDPEWL7",266,0)
 ;             input - RCERA = ien of the ERA entry in file 344.4
"RTN","RCDPEWL7",267,0)
 ;
"RTN","RCDPEWL7",268,0)
 N DA,DIE,DIR,DR,DTOUT,DUOUT,I,PREVENT,RC0,RCNOED,RCQUIT,RCSORT,RCEXC,RETCODES,STATE,TYPE,X,Y
"RTN","RCDPEWL7",269,0)
 Q:RCERA'>0
"RTN","RCDPEWL7",270,0)
 ; PRCA*4.5*304 - Reentry if we cleared exceptions
"RTN","RCDPEWL7",271,0)
WL1 ; retest to make sure this ERA does not have an exception
"RTN","RCDPEWL7",272,0)
 S TYPE=$S($$PAYTYPE("P"):"P",1:"M"),RCEXC=0 ; PRCA*4.5*321
"RTN","RCDPEWL7",273,0)
 ; PRCA*4.5*304 - see if we have the ERA and go to WL1 to retest.
"RTN","RCDPEWL7",274,0)
 I ($$XCEPT^RCDPEWLP(RCERA)]"")&(TYPE="M") D EXCDENY^RCDPEWLP Q  ;cannot process MEDICAL ERA if exception exists then fall back to Worklist.
"RTN","RCDPEWL7",275,0)
 ; PRCA*4.5*304 - Removed the G:($G(RCERA)'="")&&($G(RCEXC)=1) WL1 from above so it falls back to the worklist instead of going forward to the "Select ERA"
"RTN","RCDPEWL7",276,0)
 ; I ($$XCEPT^RCDPEWLP(RCERA)]"")&(TYPE="M") D EXCDENY^RCDPEWLP G:($G(RCERA)'="")&&($G(RCEXC)=1) WL1 Q
"RTN","RCDPEWL7",277,0)
 S (RCQUIT,RCNOED,PREVENT)=0,RC0=$G(^RCY(344.4,RCERA,0)),RCSORT=""
"RTN","RCDPEWL7",278,0)
 I $P(RC0,U,8) D
"RTN","RCDPEWL7",279,0)
 . I '$D(^RCY(344.49,RCERA,0)) D  Q
"RTN","RCDPEWL7",280,0)
 .. S RCQUIT=1
"RTN","RCDPEWL7",281,0)
 .. W ! S DIR(0)="EA",DIR("A",1)="A SCRATCH PAD WAS NOT CREATED FOR THIS ERA BEFORE POSTING",DIR("A",2)="USE THE VIEW/PRINT ERA OPTION TO SEE ITS DETAIL",DIR("A")="Press ENTER to continue: " D ^DIR K DIR Q
"RTN","RCDPEWL7",282,0)
 . ;
"RTN","RCDPEWL7",283,0)
 . S RCNOED=+$P(RC0,U,8)
"RTN","RCDPEWL7",284,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ERA ALREADY HAS A RECEIPT - YOU MAY ONLY VIEW ITS SCRATCH PAD",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWL7",285,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEWL7",286,0)
 G:RCQUIT WLQ
"RTN","RCDPEWL7",287,0)
 G:RCNOED WLD   ; already has a receipt so no need to check for older unposted EFTs
"RTN","RCDPEWL7",288,0)
 ; function $$AGEDEFTS - search for any UNPOSTED EFTs older than 14 days (medical) or 30 days (pharmacy)
"RTN","RCDPEWL7",289,0)
 ; return value of 0, 2, or 3 represent that entry into scratchpad can occur
"RTN","RCDPEWL7",290,0)
 S RETCODES=$$AGEDEFTS^RCDPEWLP(RCERA,TYPE)
"RTN","RCDPEWL7",291,0)
 F I=1:1 S STATE=$P(RETCODES,U,I) Q:STATE=""  S PREVENT=$S($E(STATE,1)=1:1,1:0)
"RTN","RCDPEWL7",292,0)
 Q:PREVENT   ; prevent user from entering scratchpad; there are older EFTs on the system that need to be worked.
"RTN","RCDPEWL7",293,0)
WLD ;
"RTN","RCDPEWL7",294,0)
 D DISP^RCDPEWL(RCERA,RCNOED)
"RTN","RCDPEWL7",295,0)
 ;
"RTN","RCDPEWL7",296,0)
 ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL7",297,0)
 ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL7",298,0)
 ;I 'RCQUIT,$G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL7",299,0)
 ;. S DA(1)=RCERA,DA=+$G(^TMP("RCBATCH_SELECTED",$J)),DR=".05////0",DIE="^RCY(344.49,"_DA(1)_",3," D ^DIE
"RTN","RCDPEWL7",300,0)
 ;. L -^RCY(344.49,DA(1),3,DA,0)
"RTN","RCDPEWL7",301,0)
 ;. K ^TMP("RCBATCH_SELECTED",$J)
"RTN","RCDPEWL7",302,0)
 ;E  D
"RTN","RCDPEWL7",303,0)
 ;L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL7",304,0)
WLQ ;
"RTN","RCDPEWL7",305,0)
 L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL7",306,0)
 Q
"RTN","RCDPEWL7",307,0)
 ;
"RTN","RCDPEWL7",308,0)
PRERA ; View/Print ERA from ERA list menu
"RTN","RCDPEWL7",309,0)
 N RCSCR
"RTN","RCDPEWL7",310,0)
 S RCSCR=$$SEL()
"RTN","RCDPEWL7",311,0)
 I RCSCR>0 D PRERA^RCDPEWL0
"RTN","RCDPEWL7",312,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",313,0)
 Q
"RTN","RCDPEWL7",314,0)
 ;
"RTN","RCDPEWL7",315,0)
BAT(RCERA) ; Select batch, if needed
"RTN","RCDPEWL7",316,0)
 ; Returns 1 if batch selected OK or no batch needed
"RTN","RCDPEWL7",317,0)
 ; RCERA = ien of entry in file 344.49
"RTN","RCDPEWL7",318,0)
 N RCINUSE,RCQUIT,RCADJ,RC0,RCOK,DIR,DTOUT,DUOUT,X,Y,Z
"RTN","RCDPEWL7",319,0)
 K ^TMP("RCBATCH_SELECTED",$J)
"RTN","RCDPEWL7",320,0)
 S RCOK=1
"RTN","RCDPEWL7",321,0)
 I '$O(^RCY(344.49,RCERA,3,0)) G BATQ
"RTN","RCDPEWL7",322,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEWL7",323,0)
 S (RCQUIT,RCADJ)=0
"RTN","RCDPEWL7",324,0)
 I $$HASADJ^RCDPEWL8(RCERA) D
"RTN","RCDPEWL7",325,0)
 . S RCADJ=1
"RTN","RCDPEWL7",326,0)
 . S DIR("A",1)="THIS ERA HAS NEGATIVE ADJUSTMENTS THAT NEED TO BE DISTRIBUTED TO OTHER",DIR("A",2)="PAYMENTS ON THE ERA.  YOU CANNOT SELECT ANY INDIVIDUAL BATCHES UNTIL",DIR("A",3)="THE DISTRIBUTIONS ARE COMPLETE."
"RTN","RCDPEWL7",327,0)
 . S DIR("A")="Press ENTER to continue: ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL7",328,0)
 S RCINUSE=+$O(^RCY(344.49,"AINUSE",1,RCERA,0))
"RTN","RCDPEWL7",329,0)
 I RCINUSE D
"RTN","RCDPEWL7",330,0)
 . N OK,Z
"RTN","RCDPEWL7",331,0)
 . Q:RCADJ!$P(RC0,U,8)
"RTN","RCDPEWL7",332,0)
 . S OK=0 S Z=0 F  S Z=$O(^RCY(344.49,RCERA,3,Z)) Q:'Z  I '$P($G(^RCY(344.49,RCERA,3,Z,0)),U,5) S OK=1 Q
"RTN","RCDPEWL7",333,0)
 . I 'OK D  Q
"RTN","RCDPEWL7",334,0)
 .. S DIR("A",1)="ALL BATCHES WITHIN THIS ERA ARE CURRENTLY IN USE - TRY AGAIN LATER",DIR("A")="Press ENTER to continue: ",DIR(0)="EA" W ! D ^DIR K DIR S RCQUIT=1,RCOK=0 Q
"RTN","RCDPEWL7",335,0)
 . W !!,"AT LEAST 1 BATCH WITHIN THIS ERA IS CURRENTLY IN USE",!,"AT THIS TIME, YOU CAN ONLY ACCESS INDIVIDUAL BATCHES",!
"RTN","RCDPEWL7",336,0)
 . D SELBAT^RCDPEWL8(RCERA,.RCQUIT)
"RTN","RCDPEWL7",337,0)
 . I RCQUIT S RCOK=0
"RTN","RCDPEWL7",338,0)
 E  D
"RTN","RCDPEWL7",339,0)
 . Q:$P(RC0,U,8)!RCADJ  ; Always require the entire ERA be used
"RTN","RCDPEWL7",340,0)
 . S DIR(0)="SA^E:(E)NTIRE ERA;B:(B)ATCH",DIR("A")="DO YOU WANT THE (E)NTIRE ERA OR JUST A (B)ATCH?: " W ! D ^DIR K DIR
"RTN","RCDPEWL7",341,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1,RCOK=0 Q
"RTN","RCDPEWL7",342,0)
 . I Y="E" D  Q
"RTN","RCDPEWL7",343,0)
 .. S RCQUIT=1 F Z=1:1:2 L +^RCY(344.4,RCERA,0):5 I $T S RCQUIT=0 Q
"RTN","RCDPEWL7",344,0)
 .. I RCQUIT S RCOK=0,DIR(0)="EA",DIR("A",1)="ANOTHER USER IS CURRENTLY USING THIS ERA, TRY AGAIN LATER",DIR("A")="Press ENTER to continue: " W ! D ^DIR K DIR Q
"RTN","RCDPEWL7",345,0)
 . D SELBAT^RCDPEWL8(RCERA,.RCQUIT)
"RTN","RCDPEWL7",346,0)
 . I RCQUIT S RCOK=0
"RTN","RCDPEWL7",347,0)
 ;
"RTN","RCDPEWL7",348,0)
BATQ Q RCOK
"RTN","RCDPEWL7",349,0)
 ;
"RTN","RCDPEWL7",350,0)
PAYTYPE(IEN,TYPE) ; EP - New way to tell if a payer is pharamcy, Tricare or medical - Added for PRCA*4.5*321
"RTN","RCDPEWL7",351,0)
 ; Input: IEN - Internal entry number of an ERA (#344.4)
"RTN","RCDPEWL7",352,0)
 ;        TYPE="P" - Pharmacy, "T" - Tricare, "M" - Medical
"RTN","RCDPEWL7",353,0)
 ;        ("M" is neither pharmacy nor Tricare)
"RTN","RCDPEWL7",354,0)
 ; Return: 1 - Payer on ERA matches the TYPE
"RTN","RCDPEWL7",355,0)
 ;         0 - Payer on ERA does not match the type. Or can't find payer.
"RTN","RCDPEWL7",356,0)
 ;
"RTN","RCDPEWL7",357,0)
 N FLAG,RETURN
"RTN","RCDPEWL7",358,0)
 S RETURN=0
"RTN","RCDPEWL7",359,0)
 I '$$PAYFLAGS(IEN,.FLAG) Q 0
"RTN","RCDPEWL7",360,0)
 I TYPE="P",FLAG("P") S RETURN=1
"RTN","RCDPEWL7",361,0)
 I TYPE="T",FLAG("T") S RETURN=1
"RTN","RCDPEWL7",362,0)
 I TYPE="M",'FLAG("P"),'FLAG("T") S RETURN=1
"RTN","RCDPEWL7",363,0)
 Q RETURN
"RTN","RCDPEWL7",364,0)
 ;
"RTN","RCDPEWL7",365,0)
PAYFLAGS(IEN,FLAG) ; EP - Return the pharmacy and tricare flags for an ERA
"RTN","RCDPEWL7",366,0)
 ; Input: IEN - Internal entry number of an ERA (#344.4)
"RTN","RCDPEWL7",367,0)
 ; Return: 1 - Payer found
"RTN","RCDPEWL7",368,0)
 ;         0 - Can't find payer.
"RTN","RCDPEWL7",369,0)
 ; Variable FLAG passed by reference to return values of the pharmacy and Tricare flags.
"RTN","RCDPEWL7",370,0)
 ;
"RTN","RCDPEWL7",371,0)
 N RCINS,RCPAYIEN,RCTIN,X
"RTN","RCDPEWL7",372,0)
 S RCTIN=$$GET1^DIQ(344.4,IEN_",",.03)
"RTN","RCDPEWL7",373,0)
 I RCTIN="" Q 0
"RTN","RCDPEWL7",374,0)
 S RCINS=$$GET1^DIQ(344.4,IEN_",",.06)
"RTN","RCDPEWL7",375,0)
 I RCINS="" Q 0
"RTN","RCDPEWL7",376,0)
 ;
"RTN","RCDPEWL7",377,0)
 ; Find a payer that matches both TIN and PAYER NAME from the ERA
"RTN","RCDPEWL7",378,0)
 S RCPAYIEN=""
"RTN","RCDPEWL7",379,0)
 S X=0
"RTN","RCDPEWL7",380,0)
 F  S X=$O(^RCY(344.6,"C",RCTIN_" ",X)) Q:'X  D  Q:RCPAYIEN  ;
"RTN","RCDPEWL7",381,0)
 . N PAYNAME
"RTN","RCDPEWL7",382,0)
 . S PAYNAME=$$GET1^DIQ(344.6,X_",",.01)
"RTN","RCDPEWL7",383,0)
 . I PAYNAME=RCINS S RCPAYIEN=X
"RTN","RCDPEWL7",384,0)
 I 'RCPAYIEN Q 0
"RTN","RCDPEWL7",385,0)
 ;
"RTN","RCDPEWL7",386,0)
 S FLAG("P")=+$$GET1^DIQ(344.6,RCPAYIEN_",",.09,"I")
"RTN","RCDPEWL7",387,0)
 S FLAG("T")=+$$GET1^DIQ(344.6,RCPAYIEN_",",.1,"I")
"RTN","RCDPEWL7",388,0)
 Q 1
"RTN","RCDPEWL7",389,0)
 ;
"RTN","RCDPEWL7",390,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEWL7",391,0)
HELP ; list manager help
"RTN","RCDPEWL7",392,0)
 D FULL^VALM1
"RTN","RCDPEWL7",393,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",394,0)
 W @IOF
"RTN","RCDPEWL7",395,0)
 W !,"ePay Electronic Remittance Advice Status"
"RTN","RCDPEWL7",396,0)
 W !!,"The following ERA Status indicators may appear to the left of ERA number:",!
"RTN","RCDPEWL7",397,0)
 ;
"RTN","RCDPEWL7",398,0)
 W !," '-' = No scratchpad."
"RTN","RCDPEWL7",399,0)
 W !," 'x' = EXC exceptions exist."
"RTN","RCDPEWL7",400,0)
 W !," 'c' = No-pay ERA with auto-decrease CARCs."
"RTN","RCDPEWL7",401,0)
 W !," 'A' = Auto-post complete."
"RTN","RCDPEWL7",402,0)
 W !," 'P' = Auto-post partially completed."
"RTN","RCDPEWL7",403,0)
 W !," 'M' = Marked for Auto-post, waiting processing."
"RTN","RCDPEWL7",404,0)
 D PAUSE^VALM1
"RTN","RCDPEWL7",405,0)
 Q
"RTN","RCDPEWL7",406,0)
 ; Following FILTER code moved from RCDPEWL0 due to routine size
"RTN","RCDPEWL7",407,0)
FILTER(IEN344P4) ; Returns 1 if record in entry IEN344P4 in 344.4 passes
"RTN","RCDPEWL7",408,0)
 ; the edits for the worklist selection of ERAs
"RTN","RCDPEWL7",409,0)
 ; Parameters found in ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWL7",410,0)
 N OK,RCPOST,RCAPST,RCAPSTA,RCAUTOP,RCMATCH,RCTYPE,RCDFR,RCDTO,RCPAYFR,RCPAYMNT,RCPAYTO,RCPAYR,RC0,RC4
"RTN","RCDPEWL7",411,0)
 S OK=1,RC0=$G(^RCY(344.4,IEN344P4,0)),RC4=$G(^RCY(344.4,IEN344P4,4))
"RTN","RCDPEWL7",412,0)
 ;
"RTN","RCDPEWL7",413,0)
 S RCMATCH=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH")),RCPOST=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWL7",414,0)
 S RCAUTOP=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP")),RCTYPE=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWL7",415,0)
 S RCDFR=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U),RCDTO=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U,2)
"RTN","RCDPEWL7",416,0)
 S RCPAYR=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U),RCPAYFR=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U,2),RCPAYTO=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U,3)
"RTN","RCDPEWL7",417,0)
 S RCPAYMNT=$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))    ; PRCA*4.5*321
"RTN","RCDPEWL7",418,0)
 S RCAPSTA=$G(^TMP("RCERA_PARAMS",$J,"RCAPSTA"))
"RTN","RCDPEWL7",419,0)
 ;
"RTN","RCDPEWL7",420,0)
 ; Post status
"RTN","RCDPEWL7",421,0)
 I $S(RCPOST="B":0,RCPOST="U":$P(RC0,U,14),1:'$P(RC0,U,14)) S OK=0 G FQ
"RTN","RCDPEWL7",422,0)
 ; Auto-Posting status
"RTN","RCDPEWL7",423,0)
 I $S(RCAUTOP="B":0,RCAUTOP="A":($P(RC4,U,2)=""),1:($P(RC4,U,2)'="")) S OK=0 G FQ
"RTN","RCDPEWL7",424,0)
 ; If ERA is autopost and filtering on selected Autopost statuses check status
"RTN","RCDPEWL7",425,0)
 I $P(RC4,U,2)'="",RCAPSTA'="A",(RCAUTOP="B")!(RCAUTOP="A") D  G:OK=0 FQ
"RTN","RCDPEWL7",426,0)
 .;Auto-post Status
"RTN","RCDPEWL7",427,0)
 .S RCAPST=$$GET1^DIQ(344.4,IEN344P4_",",4.02,"I")
"RTN","RCDPEWL7",428,0)
 .;Complete filter
"RTN","RCDPEWL7",429,0)
 .I RCAPSTA="C" S:RCAPST'=2 OK=0 G FQ
"RTN","RCDPEWL7",430,0)
 .;Partial filter
"RTN","RCDPEWL7",431,0)
 .I RCAPSTA="P" S:RCAPST'=1 OK=0 G FQ
"RTN","RCDPEWL7",432,0)
 .;Marked for Auto-post filter - ignores if not partial post or unposted
"RTN","RCDPEWL7",433,0)
 .I RCAPSTA="M",RCAPST'=1,RCAPST'=0 S OK=0 G FQ
"RTN","RCDPEWL7",434,0)
 .;Marked for Auto-post filter - ignores PARTIAL auto-post era if no lines on ERA are marked
"RTN","RCDPEWL7",435,0)
 .I RCAPSTA="M",RCAPST=1,'$O(^RCY(344.4,"AP",1,IEN344P4,"")) S OK=0 G FQ
"RTN","RCDPEWL7",436,0)
 .;Marked for Auto-post filter - ignores UNPROCESSED auto-post era if no marked for autopost user 
"RTN","RCDPEWL7",437,0)
 .I RCAPSTA="M",RCAPST=0,$$GET1^DIQ(344.4,IEN344P4_",",4.04,"I")="" S OK=0 G FQ
"RTN","RCDPEWL7",438,0)
 ; Match status
"RTN","RCDPEWL7",439,0)
 I $S(RCMATCH="B":0,RCMATCH="N":$P(RC0,U,9),1:'$P(RC0,U,9)) S OK=0 G FQ
"RTN","RCDPEWL7",440,0)
 ; Medical/Pharmacy/Tricare Claim
"RTN","RCDPEWL7",441,0)
 ; I $S(RCTYPE="B":0,RCTYPE="M":$$PHARM^RCDPEWLP(IEN344P4),1:'$$PHARM^RCDPEWLP(IEN344P4)) S OK=0 G FQ
"RTN","RCDPEWL7",442,0)
 I RCTYPE'="A" D  I 'OK G FQ
"RTN","RCDPEWL7",443,0)
 . N RCFLAG
"RTN","RCDPEWL7",444,0)
 . I '$$PAYFLAGS^RCDPEWL7(IEN344P4,.RCFLAG) S OK=0 Q
"RTN","RCDPEWL7",445,0)
 . I RCTYPE="P",'RCFLAG("P") S OK=0 Q
"RTN","RCDPEWL7",446,0)
 . I RCTYPE="T",'RCFLAG("T") S OK=0 Q
"RTN","RCDPEWL7",447,0)
 . I RCTYPE="M",(RCFLAG("P")!RCFLAG("T")) S OK=0
"RTN","RCDPEWL7",448,0)
 ; dt rec'd range
"RTN","RCDPEWL7",449,0)
 I $S(RCDFR=0:0,1:$P(RC0,U,7)\1<RCDFR) S OK=0 G FQ
"RTN","RCDPEWL7",450,0)
 I $S(RCDTO=DT:0,1:$P(RC0,U,7)\1>RCDTO) S OK=0 G FQ
"RTN","RCDPEWL7",451,0)
 ; Payer name
"RTN","RCDPEWL7",452,0)
 I RCPAYR'="A" D  G:'OK FQ
"RTN","RCDPEWL7",453,0)
 . N Q
"RTN","RCDPEWL7",454,0)
 . S Q=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEWL7",455,0)
 . I $S(Q=RCPAYFR:1,Q=RCPAYTO:1,Q]RCPAYFR:RCPAYTO]Q,1:0) Q
"RTN","RCDPEWL7",456,0)
 . S OK=0
"RTN","RCDPEWL7",457,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEWL7",458,0)
 ; Zero amount or payment
"RTN","RCDPEWL7",459,0)
 I RCPAYMNT'="B" D  ;
"RTN","RCDPEWL7",460,0)
 . I RCPAYMNT="Z",$P(RC0,U,5) S OK=0 Q
"RTN","RCDPEWL7",461,0)
 . I RCPAYMNT="P",'$P(RC0,U,5) S OK=0
"RTN","RCDPEWL7",462,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEWL7",463,0)
 ;
"RTN","RCDPEWL7",464,0)
FQ Q OK
"RTN","RCDPEWL7",465,0)
 ; END PRCA*4.5*326
"RTN","RCDPEWL8")
0^51^B102929282
"RTN","RCDPEWL8",1,0)
RCDPEWL8 ;ALB/TMK/PJH - EDI LOCKBOX WORKLIST ERA LEVEL ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL8",2,0)
 ;;4.5;Accounts Receivable;**208,269,276,298,304,318,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEWL8",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL8",4,0)
 Q
"RTN","RCDPEWL8",5,0)
 ;
"RTN","RCDPEWL8",6,0)
FILESP ; Action that files the split lines
"RTN","RCDPEWL8",7,0)
 ; Assumes RCDIR,RCLINE,RCSCR,RCSPLIT array defined
"RTN","RCDPEWL8",8,0)
 N RCTOT,Z,RCZ0,RCZ1,DTOUT,DUOUT,DIR,X,Y,DIE,DA,DR,DIC,DD,DO,DLAYGO,RCZ,RCZZ,RCZT,VALBCK
"RTN","RCDPEWL8",9,0)
 D FULL^VALM1
"RTN","RCDPEWL8",10,0)
 I '$G(^TMP("RCDPE_EOB_SPLIT_OK",$J)) D  Q
"RTN","RCDPEWL8",11,0)
 . S VALMBCK="R"
"RTN","RCDPEWL8",12,0)
 . F Z=2,3 S RCTOT(Z)=$$TOT^RCDPEWL3(Z,.RCSPLIT)
"RTN","RCDPEWL8",13,0)
 . S DIR(0)="EA"
"RTN","RCDPEWL8",14,0)
 . S DIR("A",1)="TOTAL "_$S(+RCTOT(2)'=+$P(RCDIR,U,2):"PAYMENTS",1:"ADJUSTMENTS")_$S(+RCTOT(3)=+$P(RCDIR,U,3):"",+RCTOT(2)'=+$P(RCDIR,U,2):" AND ADJUSTMENTS",1:"")_" DO NOT MATCH THE ORIGINAL AMOUNT(s):"
"RTN","RCDPEWL8",15,0)
 . S DIR("A",2)=$E("  ORIG PAY AMT: "_$J(+$P(RCDIR,U,2),"",2)_$J("",35),1,35)_" ORIG ADJ AMT: "_$J(+$P(RCDIR,U,3),"",2)
"RTN","RCDPEWL8",16,0)
 . S DIR("A",3)=$E("   AMT ENTERED: "_$J(+RCTOT(2),"",2)_$J("",35),1,35)_"  AMT ENTERED: "_$J(+RCTOT(3),"",2)
"RTN","RCDPEWL8",17,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL8",18,0)
 S DA(1)=RCSCR
"RTN","RCDPEWL8",19,0)
 S RCZ0=+$P(RCLINE,U,2),RCZZ=+$G(^RCY(344.49,DA(1),1,RCZ0,0)),RCZZ(1)=""
"RTN","RCDPEWL8",20,0)
 S RCZ=+$O(RCSPLIT(0))
"RTN","RCDPEWL8",21,0)
 ;
"RTN","RCDPEWL8",22,0)
 ;Option to move/copy EOB
"RTN","RCDPEWL8",23,0)
 I RCZ D  Q:$G(VALMBCK)="Q"
"RTN","RCDPEWL8",24,0)
 .;;Move/Copy removed 10/19/11-now in receipt creation +136^RCDPEM
"RTN","RCDPEWL8",25,0)
 .;;Q:$$UPDWL^RCDPEM5($P(RCDIR,U),.RCSPLIT,RCERA)
"RTN","RCDPEWL8",26,0)
 .;;User abort
"RTN","RCDPEWL8",27,0)
 .;;K ^TMP($J,"RCDPE_SPLIT_FILE") S VALMBCK="Q"
"RTN","RCDPEWL8",28,0)
 ;
"RTN","RCDPEWL8",29,0)
 I RCZ D
"RTN","RCDPEWL8",30,0)
 . S DIE="^RCY(344.49,"_DA(1)_",1,",DA=RCZ0,RCZT=$P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3)
"RTN","RCDPEWL8",31,0)
 . S DR=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.06////"_$J(+RCZT,"",2)_";.08////"_$J($P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL8",32,0)
 . S DR=DR_";.07///"_$S($P(RCSPLIT(RCZ),U,5):"/"_$P(RCSPLIT(RCZ),U,5),1:"@")_";.03////"_$S(RCZT'<0:$J(+RCZT,"",2),1:"0.00")_$S($P(RCSPLIT(RCZ),U,6)'="":";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@"),1:"")
"RTN","RCDPEWL8",33,0)
 . D ^DIE,UPD^RCDPEWL3(DA(1),DA)
"RTN","RCDPEWL8",34,0)
 . I $P(RCDIR,U,3) D
"RTN","RCDPEWL8",35,0)
 .. N DA
"RTN","RCDPEWL8",36,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ0,DA=1,DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL8",37,0)
 .. S RCZZ(1)=$G(^RCY(344.49,DA(2),1,DA(1),1,1,0))
"RTN","RCDPEWL8",38,0)
 .. S DR=".03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":".09////"_$P(RCSPLIT(RCZ),U,4),1:"")
"RTN","RCDPEWL8",39,0)
 .. D ^DIE
"RTN","RCDPEWL8",40,0)
 F  S RCZ=$O(RCSPLIT(RCZ)) Q:'RCZ  D
"RTN","RCDPEWL8",41,0)
 . S DIC(0)="L",DLAYGO=344.491,DIC="^RCY(344.49,"_DA(1)_",1,",X=+$O(^RCY(344.49,RCSCR,1,"B",RCZZ\1+.999),-1)+.001
"RTN","RCDPEWL8",42,0)
 . S DIC("DR")=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.08////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_";.06////"_$J($P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL8",43,0)
 . I $P(RCSPLIT(RCZ),U,6)'="" S DIC("DR")=DIC("DR")_";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@")
"RTN","RCDPEWL8",44,0)
 . I $P(RCSPLIT(RCZ),U,5) S DIC("DR")=DIC("DR")_";.07////"_$P(RCSPLIT(RCZ),U,5)
"RTN","RCDPEWL8",45,0)
 . K DD,DO D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL8",46,0)
 . S RCZ1=+Y
"RTN","RCDPEWL8",47,0)
 . I Y D UPD^RCDPEWL3(RCSCR,RCZ1)
"RTN","RCDPEWL8",48,0)
 . I Y,$P(RCDIR,U,3) D
"RTN","RCDPEWL8",49,0)
 .. N DA
"RTN","RCDPEWL8",50,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ1,X=1,DIC(0)="L",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL8",51,0)
 .. S DIC("DR")=".02////"_$P(RCZZ(1),U,2)_";.03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":";.09////"_$P(RCSPLIT(RCZ),U,4),$P(RCZZ(1),U,9)'="":";.09////"_$P(RCZZ(1),U,9),1:"")
"RTN","RCDPEWL8",52,0)
 .. F Z=4:1:8 I $P(RCZZ(1),U,Z)'="" S DIC("DR")=DIC("DR")_";"_(Z/100)_"////"_$P(RCZZ(1),U,Z)
"RTN","RCDPEWL8",53,0)
 .. D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL8",54,0)
 K ^TMP($J,"RCDPE_SPLIT_FILE")
"RTN","RCDPEWL8",55,0)
 S VALMBCK="Q"
"RTN","RCDPEWL8",56,0)
 Q
"RTN","RCDPEWL8",57,0)
 ;
"RTN","RCDPEWL8",58,0)
SELBAT(RCERA,RCQUIT) ; Select a batch
"RTN","RCDPEWL8",59,0)
 ; If batch is selected, global ^TMP("RCBATCH_SELECTED",$J) is set = 
"RTN","RCDPEWL8",60,0)
 ;   batch ien selected
"RTN","RCDPEWL8",61,0)
 ; RCQUIT = 1 if selection not made
"RTN","RCDPEWL8",62,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",63,0)
 Q  ;prca*4.5*298
"RTN","RCDPEWL8",64,0)
 N DA,DIC,DIE,DIR,DR,DTOUT,DUOUT,RCBAT,X,Y
"RTN","RCDPEWL8",65,0)
 S RCQUIT=0
"RTN","RCDPEWL8",66,0)
 S DA(1)=RCERA,DIC(0)="AEMQ",DIC="^RCY(344.49,"_DA(1)_",3,",DIC("S")="I '$P(^(0),U,5)" D ^DIC
"RTN","RCDPEWL8",67,0)
 I Y'>0 S RCQUIT=1 Q
"RTN","RCDPEWL8",68,0)
 S RCBAT=+Y
"RTN","RCDPEWL8",69,0)
 L +^RCY(344.4,RCERA,0):5 I '$T S DIR("A",1)="ANOTHER USER HAS JUST ACCESSED THE ENTIRE ERA - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR S RCQUIT=1 Q
"RTN","RCDPEWL8",70,0)
 L +^RCY(344.49,RCERA,3,RCBAT,0):5 I '$T!$P($G(^(0)),U,5) S DIR("A",1)="ANOTHER USER HAS JUST OPENED THIS BATCH - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)=-"EA" W ! D ^DIR K DIR S RCQUIT=1 Q
"RTN","RCDPEWL8",71,0)
 S DA=RCBAT,DA(1)=RCERA,DIE="^RCY(344.49,"_DA(1)_",3,",DR=".05////1" D ^DIE L -^RCY(344.49,RCERA,3,RCBAT,0)
"RTN","RCDPEWL8",72,0)
 I $P($G(^RCY(344.49,RCERA,3,RCBAT,0)),U,3) D
"RTN","RCDPEWL8",73,0)
 . S DIR(0)="EA",DIR("A",1)="** WARNING - THIS BATCH HAS BEEN FLAGGED AS READY TO POST",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL8",74,0)
 S ^TMP("RCBATCH_SELECTED",$J)=RCBAT
"RTN","RCDPEWL8",75,0)
 L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL8",76,0)
 Q
"RTN","RCDPEWL8",77,0)
 ;
"RTN","RCDPEWL8",78,0)
SORT ; Select a new sort for the list of ERAs
"RTN","RCDPEWL8",79,0)
 D FULL^VALM1
"RTN","RCDPEWL8",80,0)
 N RCSORT,DUOUT,DTOUT,DIR,X,Y,RCS1,RCS2,RCORD
"RTN","RCDPEWL8",81,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",82,0)
 S DIR("L",1)="  SELECT A FIRST LEVEL SORT",DIR("L",2)=" "
"RTN","RCDPEWL8",83,0)
 S DIR("L",3)="    A  AMOUNT PAID      E  ERA PAID DATE"
"RTN","RCDPEWL8",84,0)
 S DIR("L")="    P  PAYER NAME       D  DATE ERA RECEIVED"
"RTN","RCDPEWL8",85,0)
 S DIR(0)="S^A:AMOUNT PAID;E:ERA PAID DATE;P:PAYER NAME;D:DATE ERA RECEIVED",DIR("B")=$P($P(DIR(0),"D:",2),";")
"RTN","RCDPEWL8",86,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL8",87,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",88,0)
 S RCS1=$S(Y="A":"AP",Y="E":"DP",Y="P":"PN",1:"DR")
"RTN","RCDPEWL8",89,0)
 S RCORD=$$ORD(.RCS1)
"RTN","RCDPEWL8",90,0)
 Q:'$D(RCS1)
"RTN","RCDPEWL8",91,0)
 S $P(RCSORT,U)=(RCS1_";"_RCORD)
"RTN","RCDPEWL8",92,0)
 K X
"RTN","RCDPEWL8",93,0)
 S X(1)=$S(RCS1'="AP":"A:AMOUNT PAID",1:"E:ERA PAID DATE")
"RTN","RCDPEWL8",94,0)
 S X(2)=$S(RCS1'="AP"&(RCS1'="DP"):"E:ERA PAID DATE",1:"P:PAYER NAME")
"RTN","RCDPEWL8",95,0)
 S X(3)=$S(RCS1="DR":"P:PAYER NAME",1:"D:DATE ERA RECEIVED")
"RTN","RCDPEWL8",96,0)
 S DIR(0)="S^N:NONE;"_X(1)_";"_X(2)_";"_X(3)
"RTN","RCDPEWL8",97,0)
 S DIR("B")="NONE"
"RTN","RCDPEWL8",98,0)
 S DIR("L",1)="  SELECT A SECOND LEVEL SORT",DIR("L",2)=" "
"RTN","RCDPEWL8",99,0)
 S DIR("L",3)="    N  NONE"_$J("",13)_$P(X(1),":")_"  "_$P(X(1),":",2)
"RTN","RCDPEWL8",100,0)
 S DIR("L")="    "_$E($P(X(2),":")_"  "_$P(X(2),":",2)_$J("",20),1,20)_$P(X(3),":")_"  "_$P(X(3),":",2)
"RTN","RCDPEWL8",101,0)
 K X W ! D ^DIR K DIR
"RTN","RCDPEWL8",102,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",103,0)
 S RCS2=$S(Y="N":"N",Y="A":"AP",Y="E":"DP",Y="P":"PN",1:"DR")
"RTN","RCDPEWL8",104,0)
 S RCORD=$$ORD(.RCS2)
"RTN","RCDPEWL8",105,0)
 Q:'$D(RCS2)
"RTN","RCDPEWL8",106,0)
 S $P(RCSORT,U,2)=(RCS2_";"_RCORD)
"RTN","RCDPEWL8",107,0)
 K ^TMP($J,"RCERA_LIST") D BLD^RCDPEWL7(RCSORT)
"RTN","RCDPEWL8",108,0)
 Q
"RTN","RCDPEWL8",109,0)
 ;
"RTN","RCDPEWL8",110,0)
ORD(RCS) ; Select an order for the sorted field code in RCS
"RTN","RCDPEWL8",111,0)
 ; Kill RCS if nothing selected, passed by reference
"RTN","RCDPEWL8",112,0)
 ; Returns '-' if reverse order selected
"RTN","RCDPEWL8",113,0)
 N DIR,X,Y,ORD,RCQUIT
"RTN","RCDPEWL8",114,0)
 S RCQUIT=0,ORD=""
"RTN","RCDPEWL8",115,0)
 I RCS="N" G ORDQ
"RTN","RCDPEWL8",116,0)
 I RCS="PN" D  G ORDQ
"RTN","RCDPEWL8",117,0)
 . S DIR(0)="SA^F:FIRST TO LAST;L:LAST TO FIRST"
"RTN","RCDPEWL8",118,0)
 . S DIR("B")=$P($P(DIR(0),"F:",2),";")
"RTN","RCDPEWL8",119,0)
 . S DIR("A")="  SORT (F)IRST TO LAST OR (L)AST TO FIRST?: "
"RTN","RCDPEWL8",120,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",121,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",122,0)
 . S ORD=$S(Y="F":"",1:"-")
"RTN","RCDPEWL8",123,0)
 ;
"RTN","RCDPEWL8",124,0)
 I RCS="AP" D  G ORDQ
"RTN","RCDPEWL8",125,0)
 . S DIR("A")="  SORT (L)OWEST TO HIGHEST OR (H)IGHEST TO LOWEST?: "
"RTN","RCDPEWL8",126,0)
 . S DIR(0)="SA^L:LOWEST TO HIGHEST;H:HIGHEST TO LOWEST"
"RTN","RCDPEWL8",127,0)
 . S DIR("B")=$P($P(DIR(0),"L:",2),";")
"RTN","RCDPEWL8",128,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",129,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",130,0)
 . S ORD=$S(Y="L":"",1:"-")
"RTN","RCDPEWL8",131,0)
 ;
"RTN","RCDPEWL8",132,0)
 I RCS="DP"!(RCS="DR") D  G ORDQ
"RTN","RCDPEWL8",133,0)
 . S DIR("A")="  SORT (E)ARLIEST TO LATEST OR (L)ATEST TO EARLIEST?: "
"RTN","RCDPEWL8",134,0)
 . S DIR(0)="SA^E:EARLIEST TO LATEST;L:LATEST TO EARLIEST"
"RTN","RCDPEWL8",135,0)
 . S DIR("B")=$P($P(DIR(0),"E:",2),";")
"RTN","RCDPEWL8",136,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",137,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",138,0)
 . S ORD=$S(Y="E":"",1:"-")
"RTN","RCDPEWL8",139,0)
 ;
"RTN","RCDPEWL8",140,0)
 ; Invalid sort code
"RTN","RCDPEWL8",141,0)
 S RCQUIT=1
"RTN","RCDPEWL8",142,0)
 ;
"RTN","RCDPEWL8",143,0)
ORDQ I RCQUIT K RCS
"RTN","RCDPEWL8",144,0)
 Q ORD
"RTN","RCDPEWL8",145,0)
 ;
"RTN","RCDPEWL8",146,0)
BATDSP ; Ask Display/Hide batch info on ERA list screen
"RTN","RCDPEWL8",147,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",148,0)
 Q  ;prca*4.5*298
"RTN","RCDPEWL8",149,0)
 N DIR,DTOUT,DUOUT,RCZ,X,Y
"RTN","RCDPEWL8",150,0)
 D FULL^VALM1
"RTN","RCDPEWL8",151,0)
 S RCZ=+$G(^TMP("RCERA_PARAMS",$J,"BATCHON"))
"RTN","RCDPEWL8",152,0)
 S DIR("A",1)="BATCH INFO DISPLAY IS CURRENTLY TURNED "_$S('RCZ:"OFF",1:"ON"),DIR("A")="DO YOU WANT TO TURN IT "_$S('RCZ:"ON",1:"OFF")_" NOW?: "
"RTN","RCDPEWL8",153,0)
 S DIR(0)="YA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL8",154,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",155,0)
 Q:$D(DUOUT)!$D(DTOUT)!'Y
"RTN","RCDPEWL8",156,0)
 S ^TMP("RCERA_PARAMS",$J,"BATCHON")=$S(RCZ:0,1:1)
"RTN","RCDPEWL8",157,0)
 D BLD^RCDPEWL7($G(^TMP("RCERA_PARAMS",$J,"SORT")))
"RTN","RCDPEWL8",158,0)
 Q
"RTN","RCDPEWL8",159,0)
 ;
"RTN","RCDPEWL8",160,0)
HASADJ(RCSCR,RCOK) ; Function=1 if WL entry has any adj not yet distributed
"RTN","RCDPEWL8",161,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEWL8",162,0)
 ; RCOK = if passed by reference, returns 1 if ANY postable lines exist
"RTN","RCDPEWL8",163,0)
 N Z,Z0,RCSTOP
"RTN","RCDPEWL8",164,0)
 S RCSTOP=0,RCOK=0
"RTN","RCDPEWL8",165,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:RCSTOP
"RTN","RCDPEWL8",166,0)
 . ;HIPAA 5010 - negative value now takes precedence over adjustment
"RTN","RCDPEWL8",167,0)
 . I $P(Z0,U,6)>0!$O(^RCY(344.49,RCSCR,1,Z,1,0)) S RCOK=1
"RTN","RCDPEWL8",168,0)
 . I $P(Z0,U,6)<0 S RCSTOP=1
"RTN","RCDPEWL8",169,0)
 Q RCSTOP
"RTN","RCDPEWL8",170,0)
 ;
"RTN","RCDPEWL8",171,0)
VERIF ;EP - Protocol action - RCDPE EOB WORKLIST VERIFY
"RTN","RCDPEWL8",172,0)
 ; Entrypoint to verification options
"RTN","RCDPEWL8",173,0)
 N DIR,DTOUT,DUOUT,RCAUTO,RCQUIT,X,Y ; PRCA*4.5*326
"RTN","RCDPEWL8",174,0)
 D FULL^VALM1
"RTN","RCDPEWL8",175,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEWL8",176,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEWL8",177,0)
 . D PAUSE^VALM1
"RTN","RCDPEWL8",178,0)
 . S VALMBCK="R"
"RTN","RCDPEWL8",179,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEWL8",180,0)
 ;I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G VERIFQ   ;prca*4.5*298  auto-posted ERAs cannot enter VERIFY action
"RTN","RCDPEWL8",181,0)
 S RCAUTO=$$GET1^DIQ(344.4,RCSCR_",",4.02,"I") ; Autopost status
"RTN","RCDPEWL8",182,0)
 ; If ERA is an auto-post allow report only
"RTN","RCDPEWL8",183,0)
 I RCAUTO]"" D RPT1^RCDPEV0(RCERA) W !! Q
"RTN","RCDPEWL8",184,0)
 ; END PRCA*4.5*326
"RTN","RCDPEWL8",185,0)
 ;
"RTN","RCDPEWL8",186,0)
 W !!!!
"RTN","RCDPEWL8",187,0)
 S RCQUIT=0
"RTN","RCDPEWL8",188,0)
 F  D  Q:RCQUIT
"RTN","RCDPEWL8",189,0)
 . W !,"VERIFY EEOBs:",!,?10,"1",$J("",5),"MANUALLY MARK AS VERIFIED",!,?10,"2",$J("",5),"REPORT OF UNVERIFIED WITH DISCREPANCIES",!,?10,"3",$J("",5),"QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEWL8",190,0)
 . S DIR(0)="SAO^1:MANUAL VERIFICATION;2:REPORT UNVERIFIED DISCREPANCIES;3:QUIT"
"RTN","RCDPEWL8",191,0)
 . S DIR("A")="Select Action: ",DIR("B")="QUIT" W ! D ^DIR K DIR
"RTN","RCDPEWL8",192,0)
 . I Y=3!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",193,0)
 . ;
"RTN","RCDPEWL8",194,0)
 . I Y=1 D MVER^RCDPEV(RCERA) W !! Q
"RTN","RCDPEWL8",195,0)
 . ;
"RTN","RCDPEWL8",196,0)
 . I Y=2 D RPT^RCDPEV0(RCERA) W !! Q
"RTN","RCDPEWL8",197,0)
 ;
"RTN","RCDPEWL8",198,0)
VERIFQ S VALMBCK="R"
"RTN","RCDPEWL8",199,0)
 Q
"RTN","RCDPEWL8",200,0)
 ;
"RTN","RCDPEWL8",201,0)
BATED ; Entry point to batch edit options
"RTN","RCDPEWL8",202,0)
 ; prca*4.5*298  per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",203,0)
 Q  ; prca*4.5*298
"RTN","RCDPEWL8",204,0)
 N DA,DIC,DIR,DTOUT,DUOUT,RCQUIT,X,Y
"RTN","RCDPEWL8",205,0)
 D FULL^VALM1
"RTN","RCDPEWL8",206,0)
 ;
"RTN","RCDPEWL8",207,0)
 W !!!!
"RTN","RCDPEWL8",208,0)
 S RCQUIT=0
"RTN","RCDPEWL8",209,0)
 I '$O(^RCY(344.49,RCERA,3,0)) W !,"***** THERE ARE CURRENTLY NO BATCHES DEFINED FOR THIS ERA *****",!
"RTN","RCDPEWL8",210,0)
 ; No menu if entering from a batch level
"RTN","RCDPEWL8",211,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) W !,"EDITING BATCH #"_+^TMP("RCBATCH_SELECTED",$J) D EDIT^RCDPEWLB(RCERA,+^TMP("RCBATCH_SELECTED",$J)) G BATEDQ
"RTN","RCDPEWL8",212,0)
 F  D  Q:RCQUIT
"RTN","RCDPEWL8",213,0)
 . I '$D(^XUSEC("PRCA ERA BATCH MAINT",DUZ)) D  Q
"RTN","RCDPEWL8",214,0)
 .. S RCQUIT=1
"RTN","RCDPEWL8",215,0)
 .. S DIR(0)="EA",DIR("A")="YOU DO NOT HAVE SECURITY ACCESS TO THIS ACTION - Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEWL8",216,0)
 .;
"RTN","RCDPEWL8",217,0)
 . W !,"BATCH MAINTENANCE:",!,?10,"1",$J("",5),"EDIT BATCH",!,?10,"2",$J("",5),"NEW BATCH ASSIGNMENT",!,?10,"3",$J("",5),"MARK ALL READY TO POST",!,?10,"4",$J("",5),"BATCH SUMMARY REPORT",!,?10,"5",$J("",5),"QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEWL8",218,0)
 . S DIR(0)="SAO^1:EDIT BATCH;2:NEW BATCHES;3:MARK ALL;4:BATCH SUMMARY;5:QUIT"
"RTN","RCDPEWL8",219,0)
 . S DIR("A")="Select Action: ",DIR("B")="Quit" W ! D ^DIR K DIR
"RTN","RCDPEWL8",220,0)
 . I Y="5"!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",221,0)
 . ;
"RTN","RCDPEWL8",222,0)
 . I Y=1 D  W !! Q
"RTN","RCDPEWL8",223,0)
 .. I '$O(^RCY(344.49,RCERA,3,0)) D NOTSET^RCDPEWLC Q
"RTN","RCDPEWL8",224,0)
 .. S DIR("B")="ONE",DIR(0)="SA^A:ALL;O:ONE",DIR("A")="EDIT(A)LL or (O)NE BATCH?: " W ! D ^DIR K DIR
"RTN","RCDPEWL8",225,0)
 .. I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",226,0)
 .. I Y="A" D EDITALL^RCDPEWLB(RCERA) Q
"RTN","RCDPEWL8",227,0)
 .. S DA(1)=RCERA,DIC="^RCY(344.49,"_DA(1)_",3,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL8",228,0)
 .. Q:Y'>0
"RTN","RCDPEWL8",229,0)
 .. D EDIT^RCDPEWLB(RCERA,+Y)
"RTN","RCDPEWL8",230,0)
 . ;
"RTN","RCDPEWL8",231,0)
 . I Y=2 D REBATCH^RCDPEWLB(RCERA) W !! Q
"RTN","RCDPEWL8",232,0)
 . ;
"RTN","RCDPEWL8",233,0)
 . I Y=3 D MARKALL^RCDPEWLB(RCERA) W !! Q
"RTN","RCDPEWL8",234,0)
 . ;
"RTN","RCDPEWL8",235,0)
 . I Y=4 D SUMRPT^RCDPEWLC(RCERA) W !! Q
"RTN","RCDPEWL8",236,0)
 ;
"RTN","RCDPEWL8",237,0)
BATEDQ S VALMBCK="R"
"RTN","RCDPEWL8",238,0)
 Q
"RTN","RCDPEWL8",239,0)
 ;
"RTN","RCDPEWL8",240,0)
AUTOPOST(SOURCE) ;EP Protocol action - RCDPE EOB WORKLIST MARK FOR AUTO POST
"RTN","RCDPEWL8",241,0)
 ; Input:
"RTN","RCDPEWL8",242,0)
 ;   SOURCE
"RTN","RCDPEWL8",243,0)
 ;      1:Called by Worklist (RCDPE WORKLIST ERA MARK FOR AUTO POST)
"RTN","RCDPEWL8",244,0)
 ;      2:Called by Scratchpad (RCDPE WORKLIST EOB MARK FOR AUTO POST)
"RTN","RCDPEWL8",245,0)
 ;   If SOURCE=2, RCSCR will be set to the IEN of 344.4
"RTN","RCDPEWL8",246,0)
 ;
"RTN","RCDPEWL8",247,0)
 D FULL^VALM1
"RTN","RCDPEWL8",248,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEWL8",249,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEWL8",250,0)
 . D PAUSE^VALM1
"RTN","RCDPEWL8",251,0)
 . S VALMBCK="R"
"RTN","RCDPEWL8",252,0)
 ;
"RTN","RCDPEWL8",253,0)
 ; If called by Worklist (SOURCE=1), then ask which ERA
"RTN","RCDPEWL8",254,0)
 ; If called by Scratchpad (SOURCE=2), ERA is already in variable RCSCR
"RTN","RCDPEWL8",255,0)
 N RCERA
"RTN","RCDPEWL8",256,0)
 I SOURCE=1 S RCERA=$$SEL^RCDPEWL7()
"RTN","RCDPEWL8",257,0)
 I SOURCE=2 S RCERA=$G(RCSCR)
"RTN","RCDPEWL8",258,0)
 I 'RCERA S VALMBCK="R" Q
"RTN","RCDPEWL8",259,0)
 ;
"RTN","RCDPEWL8",260,0)
 N AUTOPOST
"RTN","RCDPEWL8",261,0)
 S AUTOPOST=$$AUTOCHK2^RCDPEAP1(RCERA,0) ; added parameter - PRCA*4.5*321
"RTN","RCDPEWL8",262,0)
 I AUTOPOST D
"RTN","RCDPEWL8",263,0)
 . D SETSTA^RCDPEAP(RCERA,0,"Worklist: Marked as Auto-Post Candidate")
"RTN","RCDPEWL8",264,0)
 . W !,"ERA has been successfully Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEWL8",265,0)
 I 'AUTOPOST D
"RTN","RCDPEWL8",266,0)
 . D AUDITLOG^RCDPEAP(RCERA,"","Worklist: Not Marked as Auto-Post Candidate-"_$P(AUTOPOST,U,2))
"RTN","RCDPEWL8",267,0)
 . W !,"ERA was NOT Marked as an Auto-Post CANDIDATE - ",$P(AUTOPOST,U,2)
"RTN","RCDPEWL8",268,0)
 ;
"RTN","RCDPEWL8",269,0)
AUTOPSTQ ;
"RTN","RCDPEWL8",270,0)
 K DIR
"RTN","RCDPEWL8",271,0)
 S DIR(0)="E" D ^DIR
"RTN","RCDPEWL8",272,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",273,0)
 Q
"RTN","RCDPEWLD")
0^39^B136472540
"RTN","RCDPEWLD",1,0)
RCDPEWLD ;ALB/CLT - Continuation of routine RCDPEWL0 ;09 DEC 2016
"RTN","RCDPEWLD",2,0)
 ;;4.5;Accounts Receivable;**252,317,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPEWLD",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWLD",4,0)
 Q
"RTN","RCDPEWLD",5,0)
 ;
"RTN","RCDPEWLD",6,0)
PROV(RCSCR,RCSCR1,RCXM1,RC) ;Get prov data from ERA (FILE 344.4) and claim (FILE 399)
"RTN","RCDPEWLD",7,0)
 N RCXXX,RCYYY,RCDPEPV,RCCLAIM,RCIEN,RCBILL,RCID,RCBLANK,RCNPI,DIC,X,Y
"RTN","RCDPEWLD",8,0)
 N RCPROV,RCEXP,XUSNPI,RCRTN,RCBNM,RCCOM1,RCCOM2,RCWARN,RCYNODE3
"RTN","RCDPEWLD",9,0)
 ;
"RTN","RCDPEWLD",10,0)
 S RCBLANK="" F X=1:1:30 S RCBLANK=RCBLANK_" "
"RTN","RCDPEWLD",11,0)
 S RC=RC+1 S RCXM1(RC-1)=RCBLANK
"RTN","RCDPEWLD",12,0)
 S RCYNODE3=$G(^RCY(344.4,RCSCR,1,RCSCR1,3))
"RTN","RCDPEWLD",13,0)
 ;
"RTN","RCDPEWLD",14,0)
LKBOX ;Get provider data from ELECTRONIC REMITTANCE ADVICE file (#344.4)
"RTN","RCDPEWLD",15,0)
 S RC=RC+1,RCXM1(RC-1)=$E("**EOB PROVIDER(S)/NPI"_$J(" ",39),1,39)_"CLAIM PROVIDER(S)/NPI**"  ;setting sub-header for worklist
"RTN","RCDPEWLD",16,0)
 S RC=RC+1,RCXM1(RC-1)=$E("---------------------"_$J(" ",39),1,39)_"-----------------------"
"RTN","RCDPEWLD",17,0)
 ;
"RTN","RCDPEWLD",18,0)
 S RCPROV="BILLING",$P(RCYYY(RCPROV),U,3)=0        ; piece 3 initialize for error msgs
"RTN","RCDPEWLD",19,0)
 I $P(RCYNODE3,U)'="" S RCYYY(RCPROV)="/"_$P(RCYNODE3,U)   ; Billing Prov NPI 
"RTN","RCDPEWLD",20,0)
 ;
"RTN","RCDPEWLD",21,0)
 S RCPROV="RENDERING"
"RTN","RCDPEWLD",22,0)
 I $P(RCYNODE3,U,3)=2 S RCPROV="SERVICING"
"RTN","RCDPEWLD",23,0)
 I $P(RCYNODE3,U,3)="",($P(RCYNODE3,U,4)'[","),($P(RCYNODE3,U,4)'="") S RCPROV="SERVICING"
"RTN","RCDPEWLD",24,0)
 I $P(RCYNODE3,U,2)'=""!($P(RCYNODE3,U,4)'="") S RCYYY(RCPROV)=$E($P(RCYNODE3,U,4),1,20)_"/"_$P(RCYNODE3,U,2)
"RTN","RCDPEWLD",25,0)
 S $P(RCYYY(RCPROV),U,3)=0                          ; initialize for error msgs
"RTN","RCDPEWLD",26,0)
 D NPICHK        ; RCPROV has to be "RENDERING" or "SERVICING" when this tag is called !
"RTN","RCDPEWLD",27,0)
 ;
"RTN","RCDPEWLD",28,0)
CLAIM ;Retrieve provider data from the claim
"RTN","RCDPEWLD",29,0)
 S RCCLAIM=$$GET1^DIQ(361.1,$P(^RCY(344.4,RCSCR,1,RCSCR1,0),U,2),.01) ;determine claim num based on entry in 344.4
"RTN","RCDPEWLD",30,0)
 S DIC="^DGCR(399,",DIC(0)="",X=RCCLAIM D ^DIC S RCCLAIM=+Y      ;find ien for file 399
"RTN","RCDPEWLD",31,0)
 D GETS^DIQ(399,RCCLAIM,"222*","IE","RCXXX")         ;retrieve prov information
"RTN","RCDPEWLD",32,0)
 S RCBILL=$$GET1^DIQ(399,RCCLAIM,.22,"I")            ;retrieve default division
"RTN","RCDPEWLD",33,0)
 S RCBNM=$$GET1^DIQ(4,$$GET1^DIQ(40.8,RCBILL,.07,"I"),.01)  ;get name from institution file
"RTN","RCDPEWLD",34,0)
 S RCBILL=$$GET1^DIQ(4,$$GET1^DIQ(40.8,RCBILL,.07,"I"),41.99)  ;get NPI from institution file
"RTN","RCDPEWLD",35,0)
 ;
"RTN","RCDPEWLD",36,0)
 S $P(RCYYY("BILLING"),U,2)=RCBNM_"/"_RCBILL_"^"_0  ;NPI set into local array
"RTN","RCDPEWLD",37,0)
 I $D(RCXXX) S RCPROV="" F  S RCPROV=$O(RCXXX(399.0222,RCPROV)) Q:RCPROV=""  D  ;loop through claim providers
"RTN","RCDPEWLD",38,0)
 . S RCIEN=$P(RCXXX(399.0222,RCPROV,.02,"I"),";",1)
"RTN","RCDPEWLD",39,0)
 . S RCID=$S($P(RCXXX(399.0222,RCPROV,.02,"I"),";",2)["VA(200":"Individual_ID",1:"Non_VA_Provider_ID")
"RTN","RCDPEWLD",40,0)
 . S RCNPI=$$NPI^XUSNPI(RCID,RCIEN)                  ;retrieve provider NPI
"RTN","RCDPEWLD",41,0)
 . S $P(RCYYY(RCXXX(399.0222,RCPROV,.01,"E")),U,2)=$E(RCXXX(399.0222,RCPROV,.02,"E"),1,20)_"/"_$S(+RCNPI=0:"No NPI on file",+RCNPI=-1:"Can't look up NPI",1:+RCNPI)
"RTN","RCDPEWLD",42,0)
 . S:$P(RCYYY(RCXXX(399.0222,RCPROV,.01,"E")),U,3)="" $P(RCYYY(RCXXX(399.0222,RCPROV,.01,"E")),U,3)=0
"RTN","RCDPEWLD",43,0)
LINESET ;SET THE PRINT LINES
"RTN","RCDPEWLD",44,0)
 S (RCWARN,RCPROV)="" F  S RCPROV=$O(RCYYY(RCPROV)) Q:RCPROV=""  D  ;loop through the found provider types
"RTN","RCDPEWLD",45,0)
 . S RC=RC+1                                          ;increment line counter
"RTN","RCDPEWLD",46,0)
 . ; build display detail line
"RTN","RCDPEWLD",47,0)
 . S RCXM1(RC-1)=RCPROV_": "_$P(RCYYY(RCPROV),U,1)
"RTN","RCDPEWLD",48,0)
 . I $L(RCXM1(RC-1))>39 D
"RTN","RCDPEWLD",49,0)
 .. S RCXM1(RC-1)=$E($P(RCXM1(RC-1),"/"),1,27)_"/"_$P(RCXM1(RC-1),"/",2)
"RTN","RCDPEWLD",50,0)
 . S RCXM1(RC-1)=$E(RCXM1(RC-1)_RCBLANK,1,39)_$P(RCYYY(RCPROV),U,2)
"RTN","RCDPEWLD",51,0)
 . I $P(RCYYY(RCPROV),U,3)'=0 S RCWARN=$P(RCYYY(RCPROV),U,3)
"RTN","RCDPEWLD",52,0)
 I RCWARN'="" D
"RTN","RCDPEWLD",53,0)
 . S RC=RC+1,RCXM1(RC-1)=" "                          ;Blank line for separation
"RTN","RCDPEWLD",54,0)
 . S RC=RC+1,RCXM1(RC-1)="Rendering/Servicing Provider NPI Warning:"
"RTN","RCDPEWLD",55,0)
 . S RC=RC+1,RCXM1(RC-1)=RCWARN
"RTN","RCDPEWLD",56,0)
 S RC=RC+1,RCXM1(RC-1)=" "                            ;Blank line to separate from possible comments
"RTN","RCDPEWLD",57,0)
 S RCCOM1=$P(RCYNODE3,U,5),RCCOM2=$P(RCYNODE3,U,6) D  ;Error in NPI format
"RTN","RCDPEWLD",58,0)
 . I $G(RCCOM1)'="" S RC=RC+1,RCXM1(RC-1)=RCCOM1
"RTN","RCDPEWLD",59,0)
 . I $G(RCCOM2)'="" S RC=RC+1,RCXM1(RC-1)=RCCOM2
"RTN","RCDPEWLD",60,0)
 Q
"RTN","RCDPEWLD",61,0)
 ;
"RTN","RCDPEWLD",62,0)
NPICHK ;CHECK THAT THE NPI RETURNED MATCHES THE ENTITY TYPE QUALIFIER
"RTN","RCDPEWLD",63,0)
 S RCEXP="" Q:$P(RCYNODE3,U,3)=""               ; ENTITY TYPE QUALIFIER
"RTN","RCDPEWLD",64,0)
 ;
"RTN","RCDPEWLD",65,0)
 S RCCOM2=$P(RCYNODE3,U,6) ; Ren/Serv comment
"RTN","RCDPEWLD",66,0)
 S XUSNPI=$P(RCYNODE3,U,2)
"RTN","RCDPEWLD",67,0)
 I RCCOM2="",(XUSNPI="") S RCEXP="**NO SERVICING/RENDERING NPI INCLUDED IN 835**" D EXPSET Q
"RTN","RCDPEWLD",68,0)
 S RCRTN=$$QI^XUSNPI(XUSNPI)
"RTN","RCDPEWLD",69,0)
 I $P(RCRTN,U,1)="Individual_ID" D  Q
"RTN","RCDPEWLD",70,0)
 . I $P(RCYNODE3,U,3)'=1 S RCEXP="**NPI from 835 indicated organizational but is associated with an individual**" D EXPSET Q
"RTN","RCDPEWLD",71,0)
 I $P(RCRTN,U,1)="Organization_ID" D  Q
"RTN","RCDPEWLD",72,0)
 . I $P(RCYNODE3,U,3)'=2 S RCEXP="**NPI from 835 indicated individual but is associated with an organization**" D EXPSET Q
"RTN","RCDPEWLD",73,0)
 I $E($P(RCRTN,U,1),1,3)="Non" D  Q
"RTN","RCDPEWLD",74,0)
 . N RCIEN,RCTYPE S RCIEN=$P(RCRTN,U,2),RCTYPE=$$GET1^DIQ(355.93,RCIEN,.02,"I") Q:$G(RCTYPE)=""
"RTN","RCDPEWLD",75,0)
 . I $P(RCYNODE3,U,3)=1,RCTYPE=1 S RCEXP="**NPI from 835 indicated individual but is associated with an organization**" D EXPSET Q
"RTN","RCDPEWLD",76,0)
 . I $P(RCYNODE3,U,3)=2,RCTYPE=2 S RCEXP="**NPI from 835 indicated organizational but is associated with an individual**" D EXPSET Q
"RTN","RCDPEWLD",77,0)
 I RCCOM2="",(+RCRTN=0) S RCEXP="**The NPI returned on the 835 is not associated with this VistA system**" D EXPSET Q
"RTN","RCDPEWLD",78,0)
 Q
"RTN","RCDPEWLD",79,0)
 ;
"RTN","RCDPEWLD",80,0)
EXPSET ;SET THE PRINT LINE WITH THE ERROR AS DEFINED IN RCEXP
"RTN","RCDPEWLD",81,0)
 S $P(RCYYY(RCPROV),U,3)=RCEXP
"RTN","RCDPEWLD",82,0)
 Q
"RTN","RCDPEWLD",83,0)
 ;
"RTN","RCDPEWLD",84,0)
PARAMS(RCQUIT) ;PARAMETERS ENTRY CONTINUED FROM RCDPEWL0
"RTN","RCDPEWLD",85,0)
 I $G(RCQUIT) K ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWLD",86,0)
PARMSQ ;
"RTN","RCDPEWLD",87,0)
 Q
"RTN","RCDPEWLD",88,0)
 ;
"RTN","RCDPEWLD",89,0)
PARAMS2() ;EP from RCDPEWL0
"RTN","RCDPEWLD",90,0)
 ; PRCA*4.5*317 - Moved due to routine size issues
"RTN","RCDPEWLD",91,0)
 ; Input:   None
"RTN","RCDPEWLD",92,0)
 ; Returns: RCQUIT  - 1 if user ^ or timed out, 0 otherwise
"RTN","RCDPEWLD",93,0)
 S RCQUIT=$$PAYMNT()                        ; Ask for zero/payment PRCA*4.5*321
"RTN","RCDPEWLD",94,0)
 Q:RCQUIT 1                                                      ; PRCA*4.5*321
"RTN","RCDPEWLD",95,0)
 S RCQUIT=$$POSTSTAT()                      ; Ask Posting Status
"RTN","RCDPEWLD",96,0)
 Q:RCQUIT 1
"RTN","RCDPEWLD",97,0)
 S RCQUIT=$$POSTMETH                        ; Ask Posting Method
"RTN","RCDPEWLD",98,0)
 Q:RCQUIT 1
"RTN","RCDPEWLD",99,0)
 S RCQUIT=$$MATCHST                         ; Ask ERA-EFT Matching Status
"RTN","RCDPEWLD",100,0)
 Q:RCQUIT 1
"RTN","RCDPEWLD",101,0)
 S RCQUIT=$$CLAIMTYP()                      ; Ask Claim Type
"RTN","RCDPEWLD",102,0)
 Q:RCQUIT 1
"RTN","RCDPEWLD",103,0)
 S RCQUIT=$$PAYR()                          ; Ask for selected payers
"RTN","RCDPEWLD",104,0)
 Q RCQUIT
"RTN","RCDPEWLD",105,0)
 ;
"RTN","RCDPEWLD",106,0)
PAYMNT() ; Payment Type (Zero/Payment or Both) Selection ; PRCA*4.5*321 this whole subroutine
"RTN","RCDPEWLD",107,0)
 ; Input:   ^TMP("RCERA_PARAMS")               - Global array of preferred values (if any)
"RTN","RCDPEWLD",108,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCPAYMNT") - ERA Posting Status filter
"RTN","RCDPEWLD",109,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",110,0)
 N DIR,DTOUT,DUOUT,RCTYPEDF
"RTN","RCDPEWLD",111,0)
 S RCTYPEDF=$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))
"RTN","RCDPEWLD",112,0)
 K DIR S DIR(0)="SA^Z:ZERO;P:PAYMENT;B:BOTH"
"RTN","RCDPEWLD",113,0)
 S DIR("A")="(Z)ERO, (P)AYMENT, or (B)OTH: "
"RTN","RCDPEWLD",114,0)
 S DIR("B")="B"
"RTN","RCDPEWLD",115,0)
 S DIR("?",1)="Select ZERO to only see ERAs with a zero total amount paid."
"RTN","RCDPEWLD",116,0)
 S DIR("?",2)="Select PAYMENT to only see ERAs with a non-zero amount paid."
"RTN","RCDPEWLD",117,0)
 S DIR("?")="Select BOTH to see both zero and non-zero amount ERAs."
"RTN","RCDPEWLD",118,0)
 S:RCTYPEDF'="" DIR("B")=RCTYPEDF     ;Stored preferred value, use as default
"RTN","RCDPEWLD",119,0)
 W !
"RTN","RCDPEWLD",120,0)
 D ^DIR
"RTN","RCDPEWLD",121,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",122,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPAYMNT")=Y
"RTN","RCDPEWLD",123,0)
 Q 0
"RTN","RCDPEWLD",124,0)
 ;
"RTN","RCDPEWLD",125,0)
POSTSTAT() ; ERA Posting Status (Posted/Unposted/Both) Selection
"RTN","RCDPEWLD",126,0)
 ; Input:   ^TMP("RCERA_PARAMS")            - Global array of preferred values (if any)
"RTN","RCDPEWLD",127,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCPOST")- ERA Posting Status filter
"RTN","RCDPEWLD",128,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",129,0)
 N DIR,DTOUT,DUOUT,RCPOSTDF
"RTN","RCDPEWLD",130,0)
 S RCPOSTDF=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWLD",131,0)
 K DIR S DIR(0)="SA^U:UNPOSTED;P:POSTED;B:BOTH"
"RTN","RCDPEWLD",132,0)
 S DIR("A")="ERA posting status: (U)NPOSTED, (P)OSTED, or (B)OTH: "
"RTN","RCDPEWLD",133,0)
 S DIR("B")="U"
"RTN","RCDPEWLD",134,0)
 S DIR("?",1)="Select UNPOSTED to only see ERAs with a status of UNPOSTED."
"RTN","RCDPEWLD",135,0)
 S DIR("?",2)="Select POSTED to only see ERAs with a status of POSTED."
"RTN","RCDPEWLD",136,0)
 S DIR("?")="Select BOTH to see both unposted and posted ERAs."
"RTN","RCDPEWLD",137,0)
 S:RCPOSTDF'="" DIR("B")=RCPOSTDF    ; Stored preferred value, use as default
"RTN","RCDPEWLD",138,0)
 W !
"RTN","RCDPEWLD",139,0)
 D ^DIR
"RTN","RCDPEWLD",140,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",141,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPOST")=Y
"RTN","RCDPEWLD",142,0)
 Q 0
"RTN","RCDPEWLD",143,0)
 ;
"RTN","RCDPEWLD",144,0)
POSTMETH()  ; PRCA*4.5*317 moved from RCDPEWL0 because of routine size issues
"RTN","RCDPEWLD",145,0)
 ; ERA Posting Method (Auto-Posting/Non Auto-Posting/Both) Selection
"RTN","RCDPEWLD",146,0)
 ; Input:   ^TMP("RCERA_PARAMS")             - Global array of preferred values (if any)
"RTN","RCDPEWLD",147,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCAUTOP")- ERA Posting Status filter
"RTN","RCDPEWLD",148,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",149,0)
 N DIR,DTOUT,DUOUT,RCAUTOPDF
"RTN","RCDPEWLD",150,0)
P1 S RCAUTOPDF=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP")) ; PRCA*4.5*326
"RTN","RCDPEWLD",151,0)
 K DIR S DIR(0)="SA^A:AUTO-POSTING;N:NON AUTO-POSTING;B:BOTH"
"RTN","RCDPEWLD",152,0)
 S DIR("A")="Display (A)UTO-POSTING, (N)ON AUTO-POSTING, or (B)OTH: "
"RTN","RCDPEWLD",153,0)
 S DIR("B")="B"
"RTN","RCDPEWLD",154,0)
 S DIR("?",1)="Select AUTO-POSTING to only see auto-posted ERAs."
"RTN","RCDPEWLD",155,0)
 S DIR("?",2)="Select NON AUTO-POSTING to only see ERAs that were NOT auto-posted."
"RTN","RCDPEWLD",156,0)
 S DIR("?")="Select BOTH to see both auto-posted and non auto-posted ERAs."
"RTN","RCDPEWLD",157,0)
 S:RCAUTOPDF'="" DIR("B")=RCAUTOPDF    ;Stored preferred value, use as default
"RTN","RCDPEWLD",158,0)
 W !
"RTN","RCDPEWLD",159,0)
 D ^DIR
"RTN","RCDPEWLD",160,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",161,0)
 G:'$$VALP(Y) P1 ; PRCA*4.5*326
"RTN","RCDPEWLD",162,0)
 S ^TMP("RCERA_PARAMS",$J,"RCAUTOP")=Y
"RTN","RCDPEWLD",163,0)
 ; If including auto-post ERA ask for auto-post status filters
"RTN","RCDPEWLD",164,0)
 I Y'="N" Q $$AUTOPST() ; PRCA*4.5*326
"RTN","RCDPEWLD",165,0)
 Q 0
"RTN","RCDPEWLD",166,0)
 ;
"RTN","RCDPEWLD",167,0)
MATCHST()  ; ERA-EFT Matching Status(Matched/Unmatched/Both) Selection
"RTN","RCDPEWLD",168,0)
 ; Input:   ^TMP("RCERA_PARAMS")             - Global array of preferred values (if any)
"RTN","RCDPEWLD",169,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCMATCH")- ERA Posting Status filter
"RTN","RCDPEWLD",170,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",171,0)
 N DIR,DTOUT,DUOUT,RCMATCHD
"RTN","RCDPEWLD",172,0)
M1 S RCMATCHD=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH")) ; PRCA*4.5*326
"RTN","RCDPEWLD",173,0)
 K DIR S DIR(0)="SA^N:NOT MATCHED;M:MATCHED;B:BOTH"
"RTN","RCDPEWLD",174,0)
 S DIR("A")="ERA-EFT match status: (N)OT MATCHED, (M)ATCHED, or (B)OTH: "
"RTN","RCDPEWLD",175,0)
 S DIR("B")="B"
"RTN","RCDPEWLD",176,0)
 S DIR("?",1)="Select NOT MATCHED to only see unmatched ERAs."
"RTN","RCDPEWLD",177,0)
 S DIR("?",2)="Select MATCHED to only see matched ERAs."
"RTN","RCDPEWLD",178,0)
 S DIR("?")="Select BOTH to see both matched and unmatched ERAs."
"RTN","RCDPEWLD",179,0)
 S:RCMATCHD'="" DIR("B")=RCMATCHD      ;Stored preferred value, use as default
"RTN","RCDPEWLD",180,0)
 W !
"RTN","RCDPEWLD",181,0)
 D ^DIR
"RTN","RCDPEWLD",182,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",183,0)
 G:'$$VALM(Y) M1 ; PRCA*4.5*326
"RTN","RCDPEWLD",184,0)
 S ^TMP("RCERA_PARAMS",$J,"RCMATCH")=Y
"RTN","RCDPEWLD",185,0)
 Q 0
"RTN","RCDPEWLD",186,0)
 ;
"RTN","RCDPEWLD",187,0)
CLAIMTYP()  ; Claim Type (Medical/Pharmacy/Both) Selection
"RTN","RCDPEWLD",188,0)
 ; Input:   ^TMP("RCERA_PARAMS")             - Global array of preferred values (if any)
"RTN","RCDPEWLD",189,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCTYPE") - ERA Posting Status filter
"RTN","RCDPEWLD",190,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",191,0)
 N DIR,DTOUT,DUOUT,RCTYPEDF
"RTN","RCDPEWLD",192,0)
 S RCTYPEDF=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWLD",193,0)
 ; PRCA*4.5*321 - Changed set of codes and help
"RTN","RCDPEWLD",194,0)
 K DIR S DIR(0)="SA^M:MEDICAL;P:PHARMACY;T:TRICARE;A:ALL"
"RTN","RCDPEWLD",195,0)
 S DIR("A")="(M)EDICAL, (P)HARMACY, (T)RICARE or (A)LL: "
"RTN","RCDPEWLD",196,0)
 S DIR("B")="A"
"RTN","RCDPEWLD",197,0)
 S DIR("?",1)="Select MEDICAL to only see ERAs with a payer type of medical."
"RTN","RCDPEWLD",198,0)
 S DIR("?",2)="Select PHARMACY to only see ERAs with a payer type of pharmacy."
"RTN","RCDPEWLD",199,0)
 S DIR("?",3)="Select TRICARE to only see ERAs with a payer type of Tricare."
"RTN","RCDPEWLD",200,0)
 S DIR("?")="Select ALL to see medical, pharmacy and Tricare ERAs."
"RTN","RCDPEWLD",201,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEWLD",202,0)
 S:RCTYPEDF'="" DIR("B")=RCTYPEDF     ;Stored preferred value, use as default
"RTN","RCDPEWLD",203,0)
 W !
"RTN","RCDPEWLD",204,0)
 D ^DIR
"RTN","RCDPEWLD",205,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",206,0)
 S ^TMP("RCERA_PARAMS",$J,"RCTYPE")=Y
"RTN","RCDPEWLD",207,0)
 I ($E(Y)="P"&('$D(^RCY(344.6,"ARX",1)))) D WARN^RCDPEU1("pharmacy") ; PRCA*4.5*326
"RTN","RCDPEWLD",208,0)
 I ($E(Y)="T"&('$D(^RCY(344.6,"ATR",1)))) D WARN^RCDPEU1("tricare")  ; PRCA*4.5*326
"RTN","RCDPEWLD",209,0)
 Q 0
"RTN","RCDPEWLD",210,0)
 ;
"RTN","RCDPEWLD",211,0)
PAYR() ; Payer Selection
"RTN","RCDPEWLD",212,0)
 ; Input:   ^TMP("RCERA_PARAMS",$J)          - Global array of preferred values (if any)
"RTN","RCDPEWLD",213,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCTYPE") - ERA Posting Status filter
"RTN","RCDPEWLD",214,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",215,0)
 N DIR,DTOUT,DUOUT,PQUIT,RCPAYR,RCPAYRDF
"RTN","RCDPEWLD",216,0)
 S RCPAYRDF=$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEWLD",217,0)
 S RCQUIT=0
"RTN","RCDPEWLD",218,0)
 K DIR S DIR(0)="SA^A:ALL;R:RANGE"
"RTN","RCDPEWLD",219,0)
 S DIR("A")="(A)LL payers, (R)ANGE of payer names: "
"RTN","RCDPEWLD",220,0)
 S DIR("B")="ALL"
"RTN","RCDPEWLD",221,0)
 S DIR("?",1)="Entering ALL will select all payers."
"RTN","RCDPEWLD",222,0)
 S DIR("?")="If RANGE is entered, you will be prompted for a payer range."
"RTN","RCDPEWLD",223,0)
 S:$P(RCPAYRDF,"^")'="" DIR("B")=$P(RCPAYRDF,"^",1)      ;Stored preferred value, use as default
"RTN","RCDPEWLD",224,0)
 W !
"RTN","RCDPEWLD",225,0)
 D ^DIR
"RTN","RCDPEWLD",226,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",227,0)
 S RCPAYR=Y
"RTN","RCDPEWLD",228,0)
 I RCPAYR="A" S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=Y       ;All payers selected
"RTN","RCDPEWLD",229,0)
 I RCPAYR="R" D  G:PQUIT PAYR
"RTN","RCDPEWLD",230,0)
 . S PQUIT=0
"RTN","RCDPEWLD",231,0)
 . W !,"Names you select here will be the payer names from the ERA, not the ins. file"
"RTN","RCDPEWLD",232,0)
 . K DIR
"RTN","RCDPEWLD",233,0)
 . S DIR("?")="Enter a name from 1 to 30 characters in UPPER CASE."
"RTN","RCDPEWLD",234,0)
 . S DIR(0)="FA^1:30^K:X'?.U X"
"RTN","RCDPEWLD",235,0)
 . S DIR("A")="Start with payer name: "
"RTN","RCDPEWLD",236,0)
 . S:$P(RCPAYRDF,"^",2)'="" DIR("B")=$P(RCPAYRDF,"^",2)  ;Stored preferred value, use as default
"RTN","RCDPEWLD",237,0)
 . W !
"RTN","RCDPEWLD",238,0)
 . D ^DIR
"RTN","RCDPEWLD",239,0)
 . I $D(DTOUT)!$D(DUOUT) D  Q
"RTN","RCDPEWLD",240,0)
 . . S PQUIT=1
"RTN","RCDPEWLD",241,0)
 . . K ^TMP("RCERA_PARAMS",$J,"RCPAYR")
"RTN","RCDPEWLD",242,0)
 . S RCPAYR("FROM")=Y
"RTN","RCDPEWLD",243,0)
 . K DIR
"RTN","RCDPEWLD",244,0)
 . S DIR("?")="Enter a name from 1 to 30 characters in UPPER CASE."
"RTN","RCDPEWLD",245,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="Go to payer name: "
"RTN","RCDPEWLD",246,0)
 . S DIR("B")=$E(RCPAYR("FROM"),1,27)_"ZZZ"
"RTN","RCDPEWLD",247,0)
 . S:$P(RCPAYRDF,"^",3)'="" DIR("B")=$P(RCPAYRDF,"^",3)   ;Stored preferred value, use as default
"RTN","RCDPEWLD",248,0)
 . W !
"RTN","RCDPEWLD",249,0)
 . D ^DIR
"RTN","RCDPEWLD",250,0)
 . I $D(DTOUT)!$D(DUOUT) S PQUIT=1 Q
"RTN","RCDPEWLD",251,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=RCPAYR_"^"_RCPAYR("FROM")_"^"_Y
"RTN","RCDPEWLD",252,0)
 Q 0
"RTN","RCDPEWLD",253,0)
 ;
"RTN","RCDPEWLD",254,0)
 ; BEGIN PRCA*4.5*326
"RTN","RCDPEWLD",255,0)
AUTOPST() ; Auto-post Status (Marked/Partial/Complete/All) Selection
"RTN","RCDPEWLD",256,0)
 ; Input: ^TMP("RCERA_PARAMS") - Global array of preferred values (if any)
"RTN","RCDPEWLD",257,0)
 ; Output: ^TMP("RCERA_PARAMS",$J,"RCAPSTA") - Auto-post Status filter
"RTN","RCDPEWLD",258,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",259,0)
 N DIR,DTOUT,DUOUT,APTYPEDF
"RTN","RCDPEWLD",260,0)
A1 S APTYPEDF=$G(^TMP("RCERA_PARAMS",$J,"RCAPSTA"))
"RTN","RCDPEWLD",261,0)
 K DIR S DIR(0)="SA^M:MARKED;P:PARTIAL;C:COMPLETE;A:ALL"
"RTN","RCDPEWLD",262,0)
 S DIR("A")="Auto-Post status: (M)ARKED, (P)ARTIAL, (C)OMPLETE or (A)LL: "
"RTN","RCDPEWLD",263,0)
 S DIR("B")="A"
"RTN","RCDPEWLD",264,0)
 S DIR("?",1)="Select MARKED to only see ERAs currently marked for autopost."
"RTN","RCDPEWLD",265,0)
 S DIR("?",2)="Select PARTIAL to only see ERAs with a partial auto-post status."
"RTN","RCDPEWLD",266,0)
 S DIR("?",3)="Select COMPLETE to only see ERAs with a complete auto-post status."
"RTN","RCDPEWLD",267,0)
 S DIR("?")="Select ALL to see ERAs with any autopost status."
"RTN","RCDPEWLD",268,0)
 S:APTYPEDF'="" DIR("B")=APTYPEDF     ;Stored preferred value, use as default
"RTN","RCDPEWLD",269,0)
 W !
"RTN","RCDPEWLD",270,0)
 D ^DIR
"RTN","RCDPEWLD",271,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",272,0)
 G:'$$VALA(Y) A1
"RTN","RCDPEWLD",273,0)
 S ^TMP("RCERA_PARAMS",$J,"RCAPSTA")=Y
"RTN","RCDPEWLD",274,0)
 Q 0
"RTN","RCDPEWLD",275,0)
 ;
"RTN","RCDPEWLD",276,0)
VALA(INP) ; Compare input auto-post status filter to other filters
"RTN","RCDPEWLD",277,0)
 ; Input INP - Y value from ^DIR
"RTN","RCDPEWLD",278,0)
 ; Output 1 = Valid 0 = Invalid
"RTN","RCDPEWLD",279,0)
 ;
"RTN","RCDPEWLD",280,0)
 I INP="C",$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))="U" D  Q 0
"RTN","RCDPEWLD",281,0)
 .W !!,"Auto-post COMPLETE is an invalid selection for UNPOSTED ERAs"
"RTN","RCDPEWLD",282,0)
 I INP="P",$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))="U" D  Q 0
"RTN","RCDPEWLD",283,0)
 .W !!,"Auto-post PARTIAL is an invalid selection for UNPOSTED ERAs"
"RTN","RCDPEWLD",284,0)
 I INP="M",$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))="P" D  Q 0
"RTN","RCDPEWLD",285,0)
 .W !!,"MARKED for Auto-post is an invalid selection for POSTED ERAs"
"RTN","RCDPEWLD",286,0)
 Q 1
"RTN","RCDPEWLD",287,0)
 ;
"RTN","RCDPEWLD",288,0)
VALM(INP) ; Compare input match type filter to other filters
"RTN","RCDPEWLD",289,0)
 ; Input INP - Y value from ^DIR
"RTN","RCDPEWLD",290,0)
 ; Output 1 = Valid 0 = Invalid
"RTN","RCDPEWLD",291,0)
 ;
"RTN","RCDPEWLD",292,0)
 I INP="N",$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))="A" D  Q 0
"RTN","RCDPEWLD",293,0)
 .W !!,"NOT MATCHED is an invalid selection for AUTO-POSTING ERAs"
"RTN","RCDPEWLD",294,0)
 Q 1
"RTN","RCDPEWLD",295,0)
 ;
"RTN","RCDPEWLD",296,0)
VALP(INP) ; Compare input posting method filter to other filters
"RTN","RCDPEWLD",297,0)
 ; Input INP - Y value from ^DIR
"RTN","RCDPEWLD",298,0)
 ; Output 1 = Valid 0 = Invalid
"RTN","RCDPEWLD",299,0)
 ;
"RTN","RCDPEWLD",300,0)
 I INP="A",$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))="Z" D  Q 0
"RTN","RCDPEWLD",301,0)
 .W !!,"AUTO-POSTING is an invalid selection for ZERO ERAs"
"RTN","RCDPEWLD",302,0)
 Q 1
"RTN","RCDPEWLD",303,0)
 ; END PRCA*4.5*326
"RTN","RCDPEWLZ")
0^53^B23932525
"RTN","RCDPEWLZ",1,0)
RCDPEWLZ ;ALB/PJH-Block Auto-decrease protocol ;09 Feb 2018
"RTN","RCDPEWLZ",2,0)
 ;;4.5;Accounts Receivable;**326**;Mar 20, 1995;Build 26
"RTN","RCDPEWLZ",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPEWLZ",4,0)
 Q
"RTN","RCDPEWLZ",5,0)
 ;
"RTN","RCDPEWLZ",6,0)
BLOCK(RCERA) ;  Stop/Allow Auto Decrease of zero balance denials
"RTN","RCDPEWLZ",7,0)
 ;
"RTN","RCDPEWLZ",8,0)
 ; Input - RCERA - IEN of ERA in #344.4
"RTN","RCDPEWLZ",9,0)
 ;
"RTN","RCDPEWLZ",10,0)
 ; Check that the ERA has auto-decrease CARCs which are not decreased
"RTN","RCDPEWLZ",11,0)
 N RCARRAY
"RTN","RCDPEWLZ",12,0)
 D AUTO(RCERA,.RCARRAY)
"RTN","RCDPEWLZ",13,0)
 ;
"RTN","RCDPEWLZ",14,0)
 D FULL^VALM1
"RTN","RCDPEWLZ",15,0)
 S VALMBCK="R"
"RTN","RCDPEWLZ",16,0)
 ;
"RTN","RCDPEWLZ",17,0)
 I 'RCARRAY D  G QUIT
"RTN","RCDPEWLZ",18,0)
 .W !!,"This option is only valid if an ERA has auto-decrease CARCs."
"RTN","RCDPEWLZ",19,0)
 ;
"RTN","RCDPEWLZ",20,0)
 I RCARRAY("D") D  G QUIT
"RTN","RCDPEWLZ",21,0)
 .W !!,"This option is not valid, the ERA has already been auto-decreased."
"RTN","RCDPEWLZ",22,0)
 ;
"RTN","RCDPEWLZ",23,0)
 N RCSTA,X
"RTN","RCDPEWLZ",24,0)
 S RCSTA=$$GET1^DIQ(344.4,RCERA_",",.19,"I")
"RTN","RCDPEWLZ",25,0)
 ;
"RTN","RCDPEWLZ",26,0)
 ;
"RTN","RCDPEWLZ",27,0)
 W !!,"This option will "
"RTN","RCDPEWLZ",28,0)
 W $S(RCSTA:"ALLOW the nightly process to auto-decrease",1:"STOP the nightly process from auto-decreasing")
"RTN","RCDPEWLZ",29,0)
 W !," the CARCs on this ERA.",!
"RTN","RCDPEWLZ",30,0)
 ;
"RTN","RCDPEWLZ",31,0)
 I $$ASKSTAT(RCSTA)'=1 Q
"RTN","RCDPEWLZ",32,0)
 ;
"RTN","RCDPEWLZ",33,0)
 ; Update ERA
"RTN","RCDPEWLZ",34,0)
 D UPD(RCERA,RCSTA)
"RTN","RCDPEWLZ",35,0)
 ;
"RTN","RCDPEWLZ",36,0)
 W !,"... CARCs on this ERA will "_$S(RCSTA:"",1:"NOT ")_"be auto-decreased ..."
"RTN","RCDPEWLZ",37,0)
 ;
"RTN","RCDPEWLZ",38,0)
QUIT ;  pause and rebuild the header
"RTN","RCDPEWLZ",39,0)
 W !!,"press RETURN to continue: "
"RTN","RCDPEWLZ",40,0)
 R X:DTIME
"RTN","RCDPEWLZ",41,0)
 ;
"RTN","RCDPEWLZ",42,0)
 N RCARC
"RTN","RCDPEWLZ",43,0)
 S RCARC=$$WLH^RCDPEWLZ(+RCSCR)
"RTN","RCDPEWLZ",44,0)
 S:RCARC]"" VALMHDR(4)=RCARC
"RTN","RCDPEWLZ",45,0)
 Q
"RTN","RCDPEWLZ",46,0)
 ;
"RTN","RCDPEWLZ",47,0)
ASKSTAT(RCSTA) ;  ask if its okay to block to unblock from auto-decrease
"RTN","RCDPEWLZ",48,0)
 ;  1 is yes, otherwise no
"RTN","RCDPEWLZ",49,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPEWLZ",50,0)
 S DIR(0)="YO",DIR("B")="Y"
"RTN","RCDPEWLZ",51,0)
 S DIR("A")="Do you want to "_$S(RCSTA:"ALLOW",1:"STOP")_" auto-decrease of this ERA"
"RTN","RCDPEWLZ",52,0)
 D ^DIR
"RTN","RCDPEWLZ",53,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPEWLZ",54,0)
 Q Y
"RTN","RCDPEWLZ",55,0)
 ;
"RTN","RCDPEWLZ",56,0)
AUTO(RCERA,RCARRAY) ; Search ERA for Auto-Decrease CARCs 
"RTN","RCDPEWLZ",57,0)
 ; INPUT -  RCERA = ERA number/IEN
"RTN","RCDPEWLZ",58,0)
 ;          RCARRAY = return array reference
"RTN","RCDPEWLZ",59,0)
 ; OUTPUT - RCARRAY = list of ERA lines and auto-decrease CARC/amounts for each line
"RTN","RCDPEWLZ",60,0)
 ;
"RTN","RCDPEWLZ",61,0)
 ;          RCARRAY=1 
"RTN","RCDPEWLZ",62,0)
 ;          RCARRAY(1)="5.71;22;^10.00;23;"  - list of decrease amounts for each auto-decrease CARC
"RTN","RCDPEWLZ",63,0)
 ;          RCARRAY(1,"D")=1   - indicates line is decreased already
"RTN","RCDPEWLZ",64,0)
 ;          RCARRAY(1,"B")=1   - indicates line is/was blocked
"RTN","RCDPEWLZ",65,0)
 ;
"RTN","RCDPEWLZ",66,0)
 N EOBIEN,PAYID,PAYNAM,RC3446,RCARC,RCBLK,RCDAY,RCPARM,RCRCVD,RCSUB,RCRTYPE,RCZERO
"RTN","RCDPEWLZ",67,0)
 K RCARRAY
"RTN","RCDPEWLZ",68,0)
 S RCARRAY=0,RCARRAY("D")=0
"RTN","RCDPEWLZ",69,0)
 ; Ignore ERA if total paid is not zero
"RTN","RCDPEWLZ",70,0)
 Q:+$$GET1^DIQ(344.4,RCERA_",",.05)
"RTN","RCDPEWLZ",71,0)
 ; Ignore ERA if removed from worklist
"RTN","RCDPEWLZ",72,0)
 Q:+$$GET1^DIQ(344.4,RCERA_",",.16,"I")
"RTN","RCDPEWLZ",73,0)
 ; Calculate process date by subtracting DENIAL decrease days from today's date
"RTN","RCDPEWLZ",74,0)
 S RCDAY=$$FMADD^XLFDT(DT\1,-$$GET1^DIQ(344.61,"1,",.12))
"RTN","RCDPEWLZ",75,0)
 ; Compare to ERA received date
"RTN","RCDPEWLZ",76,0)
 S RCRCVD=$$GET1^DIQ(344.4,RCERA_",",.07,"I")
"RTN","RCDPEWLZ",77,0)
 ; If not already decreased then check that auto-decrease date is not already past
"RTN","RCDPEWLZ",78,0)
 I $$GET1^DIQ(344.4,RCERA_",",4.03,"I")="",RCRCVD\1<RCDAY Q
"RTN","RCDPEWLZ",79,0)
 ; Ignore ERA if not payment type of NON
"RTN","RCDPEWLZ",80,0)
 I $$GET1^DIQ(344.4,RCERA_",",.15)'="NON"
"RTN","RCDPEWLZ",81,0)
 ; Ignore ERA if it has PLBs
"RTN","RCDPEWLZ",82,0)
 Q:$D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS"))
"RTN","RCDPEWLZ",83,0)
 ; Quit if ERA is for Pharmacy
"RTN","RCDPEWLZ",84,0)
 S RCRTYPE=$$PHARM^RCDPEAP1(RCERA)
"RTN","RCDPEWLZ",85,0)
 Q:RCRTYPE
"RTN","RCDPEWLZ",86,0)
 ; Check payer exclusion file for this ERA's payer
"RTN","RCDPEWLZ",87,0)
 S PAYID=$P($G(^RCY(344.4,RCERA,0)),U,3)
"RTN","RCDPEWLZ",88,0)
 S PAYNAM=$P($G(^RCY(344.4,RCERA,0)),U,6)
"RTN","RCDPEWLZ",89,0)
 I PAYID'="",PAYNAM'="" D
"RTN","RCDPEWLZ",90,0)
 . S RCPARM=$O(^RCY(344.6,"CPID",PAYNAM,PAYID,""))
"RTN","RCDPEWLZ",91,0)
 . S:RCPARM'="" RC3446=$G(^RCY(344.6,RCPARM,0))
"RTN","RCDPEWLZ",92,0)
 ; Ignore ERA if EXCLUDE MED CLAIMS POSTING  (#.06) or EXCLUDE MED CLAIMS DECREASE (#.07) fields set to 'yes'
"RTN","RCDPEWLZ",93,0)
 I $G(RC3446)'="" Q:$P(RC3446,U,6)=1  Q:$P(RC3446,U,7)=1
"RTN","RCDPEWLZ",94,0)
 ; Scan ERA for EOB - do NOT use scratchpad
"RTN","RCDPEWLZ",95,0)
 S RCSUB=0,RCZERO=1
"RTN","RCDPEWLZ",96,0)
 F  S RCSUB=$O(^RCY(344.4,RCERA,1,RCSUB)) Q:'RCSUB  D
"RTN","RCDPEWLZ",97,0)
 .; Get IEN of EOB
"RTN","RCDPEWLZ",98,0)
 .S EOBIEN=$$GET1^DIQ(344.41,RCSUB_","_RCERA,.02,"I")
"RTN","RCDPEWLZ",99,0)
 .Q:'EOBIEN
"RTN","RCDPEWLZ",100,0)
 .; Get CARCS
"RTN","RCDPEWLZ",101,0)
 .S RCARC=$$CARCLMT^RCDPEAD(EOBIEN,RCZERO)
"RTN","RCDPEWLZ",102,0)
 .; No CARCs on EOB were eligible for auto-decrease
"RTN","RCDPEWLZ",103,0)
 .Q:$L(RCARC)=0
"RTN","RCDPEWLZ",104,0)
 .; Save CARCs agains line number
"RTN","RCDPEWLZ",105,0)
 .S RCARRAY(RCSUB)=RCARC
"RTN","RCDPEWLZ",106,0)
 .; CARCs found indicator
"RTN","RCDPEWLZ",107,0)
 .S RCARRAY=1
"RTN","RCDPEWLZ",108,0)
 .; Determine if line is already auto-decreased
"RTN","RCDPEWLZ",109,0)
 .S:$$GET1^DIQ(344.41,RCSUB_","_RCERA_",",10,"I")]"" RCARRAY("D")=1
"RTN","RCDPEWLZ",110,0)
 Q
"RTN","RCDPEWLZ",111,0)
 ;
"RTN","RCDPEWLZ",112,0)
UPD(RCERA,RCSTA) ; Update AUTO-DECREASE BLOCKED status of an ERA
"RTN","RCDPEWLZ",113,0)
 N DA,DIE,DR
"RTN","RCDPEWLZ",114,0)
 S DA=RCERA
"RTN","RCDPEWLZ",115,0)
 S DIE="^RCY(344.4,",DR=".19///"_$S(RCSTA:0,1:1) D ^DIE
"RTN","RCDPEWLZ",116,0)
 Q
"RTN","RCDPEWLZ",117,0)
 ;
"RTN","RCDPEWLZ",118,0)
WLF(RCERA) ; Return auto-decrease flag - EP EXTRACT^RCDPEWL7
"RTN","RCDPEWLZ",119,0)
 ; INPUT  - RCERA = IEN of ERA in #344.4
"RTN","RCDPEWLZ",120,0)
 ; OUTPUT - 'c' or null
"RTN","RCDPEWLZ",121,0)
 N RCARRAY
"RTN","RCDPEWLZ",122,0)
 ; Check for CARCs
"RTN","RCDPEWLZ",123,0)
 D AUTO(RCERA,.RCARRAY)
"RTN","RCDPEWLZ",124,0)
 ; Return result
"RTN","RCDPEWLZ",125,0)
 Q $S(RCARRAY:"c",1:"")
"RTN","RCDPEWLZ",126,0)
 ;
"RTN","RCDPEWLZ",127,0)
WLH(RCERA) ; Auto-decrease status for ERA - EP HDR^RCDPEWL
"RTN","RCDPEWLZ",128,0)
 ; INPUT  - RCERA = IEN of ERA in #344.4
"RTN","RCDPEWLZ",129,0)
 ; OUTPUT - RCTXT = display text
"RTN","RCDPEWLZ",130,0)
 N RCARRAY
"RTN","RCDPEWLZ",131,0)
 ; Check for CARCs
"RTN","RCDPEWLZ",132,0)
 D AUTO(RCERA,.RCARRAY)
"RTN","RCDPEWLZ",133,0)
 ; If none return null
"RTN","RCDPEWLZ",134,0)
 I 'RCARRAY Q ""
"RTN","RCDPEWLZ",135,0)
 ; Check if ERA is auto-decrease blocked
"RTN","RCDPEWLZ",136,0)
 Q:$$GET1^DIQ(344.4,RCERA_",",.19,"I") "Auto-Decrease CARCS are stopped from auto-decrease"
"RTN","RCDPEWLZ",137,0)
 ; Check if already auto-decreased
"RTN","RCDPEWLZ",138,0)
 Q:RCARRAY("D") "ERA has processed Auto-Decrease CARCS"
"RTN","RCDPEWLZ",139,0)
 ; Else
"RTN","RCDPEWLZ",140,0)
 Q "ERA has unprocessed Auto-Decrease CARCS"
"RTN","RCDPEWLZ",141,0)
 ;
"RTN","RCDPEWLZ",142,0)
WLL(RCERA,RCLINE) ; Auto-decrease status for ERA line - EP - RCDPEWL0
"RTN","RCDPEWLZ",143,0)
 ; INPUT  - RCERA = IEN of ERA in #344.4
"RTN","RCDPEWLZ",144,0)
 ;          RCLINE = ERA line number
"RTN","RCDPEWLZ",145,0)
 ; OUTPUT - RCTXT = display text
"RTN","RCDPEWLZ",146,0)
 N I,RCARC,RCARRAY,RCTOT
"RTN","RCDPEWLZ",147,0)
 ; Check for CARCs on ERA
"RTN","RCDPEWLZ",148,0)
 D AUTO(RCERA,.RCARRAY)
"RTN","RCDPEWLZ",149,0)
 ; Check for CARCs on line
"RTN","RCDPEWLZ",150,0)
 Q:'$D(RCARRAY(RCLINE)) ""
"RTN","RCDPEWLZ",151,0)
 ; Total line CARCS
"RTN","RCDPEWLZ",152,0)
 S RCTOT=0
"RTN","RCDPEWLZ",153,0)
 F I=1:1 S RCARC=$P(RCARRAY(RCLINE),U,I) Q:RCARC=""  S RCTOT=RCTOT+$P(RCARC,";")
"RTN","RCDPEWLZ",154,0)
 Q $S(RCTOT:"Auto-decrease CARC total: $"_RCTOT,1:"")
"RTN","RCDPEWLZ",155,0)
 ;
"RTN","RCDPEWLZ",156,0)
SCRPAD(RCERA) ;Build Scratchpad entry in #344.49 for the ERA - EP REJ^RCDPEAD
"RTN","RCDPEWLZ",157,0)
 ;
"RTN","RCDPEWLZ",158,0)
 ; Input - RCERA - IEN for #344.4
"RTN","RCDPEWLZ",159,0)
 ;
"RTN","RCDPEWLZ",160,0)
 ; Output - RCSCR = Scratchpad IEN (Success) or 0 (Fail)
"RTN","RCDPEWLZ",161,0)
 ;
"RTN","RCDPEWLZ",162,0)
 N RC0,RC5,RCSCR,RCDAT,X
"RTN","RCDPEWLZ",163,0)
 S RC0=$G(^RCY(344.4,RCERA,0)),RC5=$G(^RCY(344.4,RCERA,5))
"RTN","RCDPEWLZ",164,0)
 ;Ignore is this ERA already has a receipt
"RTN","RCDPEWLZ",165,0)
 I +$P(RC0,U,8) Q 0
"RTN","RCDPEWLZ",166,0)
 ;Denial ERA must be expected payment type NON 
"RTN","RCDPEWLZ",167,0)
 I $P(RC0,U,15)'="NON" Q 0
"RTN","RCDPEWLZ",168,0)
 ;Scratchpad already exists
"RTN","RCDPEWLZ",169,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0)) I RCSCR G SCRPADX
"RTN","RCDPEWLZ",170,0)
 ;Create new Scratchpad
"RTN","RCDPEWLZ",171,0)
 S RCSCR=+$$ADDREC^RCDPEWL(RCERA,.RCDAT) I 'RCSCR Q 0
"RTN","RCDPEWLZ",172,0)
 ;Add all the ERA lines to the Scratchpad entry
"RTN","RCDPEWLZ",173,0)
 D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEWLZ",174,0)
SCRPADX ;Return Scratchpad IEN
"RTN","RCDPEWLZ",175,0)
 Q RCSCR
"RTN","RCDPEX1")
0^69^B19648805
"RTN","RCDPEX1",1,0)
RCDPEX1 ;ALB/TMK - ELECTRONIC EOB MESSAGE EXCEPTIONS PROCESS ;Aug 14, 2014@15:07:12
"RTN","RCDPEX1",2,0)
 ;;4.5;Accounts Receivable;**173,262,298,304,326**;Mar 20, 1995;Build 26
"RTN","RCDPEX1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX1",4,0)
 ;
"RTN","RCDPEX1",5,0)
EN ; Main entry point
"RTN","RCDPEX1",6,0)
 D DT^DICRW
"RTN","RCDPEX1",7,0)
 N RCFASTXT,RCDA,RCEXCTYP,RCINCEX,DIR,Y,X,RCPAR,RCPAY,RCQUIT,RCTYPE,XX
"RTN","RCDPEX1",8,0)
 ; Ask for TRANSMISSION exceptions or DATA exceptions
"RTN","RCDPEX1",9,0)
 S DIR("A")="DO YOU WANT TO SEE (T)RANSMISSION OR (D)ATA EXCEPTIONS?: ",DIR("B")="T",DIR(0)="SAO^T:TRANSMISSION;D:DATA"
"RTN","RCDPEX1",10,0)
 S DIR("?",1)="TRANSMISSION EXCEPTIONS INCLUDE ANY PROBLEM ENCOUNTERED WHEN AN ERA/EEOB",DIR("?",2)="  IS RECEIVED AT THE SITE AND BEFORE IT IS STORED PERMANENTLY IN VISTA."
"RTN","RCDPEX1",11,0)
 S DIR("?",3)="  THIS INCLUDES PARTIAL MESSAGE RECEIPTS, EXTRACT PROBLEMS AND EEOBs THAT ",DIR("?",4)="  WERE TRANSFERRED IN FROM ANOTHER SITE."
"RTN","RCDPEX1",12,0)
 S DIR("?",5)="DATA EXCEPTIONS INCLUDE EEOB DETAIL RECORDS FOR SPECIFIC BILLS THAT CAN'T BE"
"RTN","RCDPEX1",13,0)
 S DIR("?",6)="  FULLY PROCESSED INTO THE VISTA SYSTEM.  THIS INCLUDES EEOB DETAIL FOR",DIR("?",7)="  CLAIMS THAT NEED TO BE TRANSFERRED TO ANOTHER SITE OR WHOSE DETAIL COULD",DIR("?")="  NOT BE STORED IN IB"
"RTN","RCDPEX1",14,0)
 D ^DIR K DIR
"RTN","RCDPEX1",15,0)
 I Y=""!(Y="^") Q
"RTN","RCDPEX1",16,0)
 S RCEXCTYP=Y,RCQUIT=0
"RTN","RCDPEX1",17,0)
 I RCEXCTYP="D" D  ; Include exceptions for MEDICAL, PHARMACY or BOTH - PRCA*4.5*298 Filter question for medical, pharmacy or both
"RTN","RCDPEX1",18,0)
 . S RCTYPE=$$RTYPE^RCDPEU1("A") ; PRCA*4.5*326 Pick MEDICAL/PHARMACY/TRICARE/ALL
"RTN","RCDPEX1",19,0)
 . I RCTYPE=-1 S RCQUIT=1 Q
"RTN","RCDPEX1",20,0)
 . ;
"RTN","RCDPEX1",21,0)
 . S RCPAY=$$PAYRNG^RCDPEU1()    ; PRCA*4.5*326 New payer selection
"RTN","RCDPEX1",22,0)
 . I RCTYPE=-1 S RCQUIT=1 Q
"RTN","RCDPEX1",23,0)
 . I RCPAY'="A" D  ;
"RTN","RCDPEX1",24,0)
 . . S RCPAR("TYPE")=RCTYPE,RCPAR("SELC")=RCPAY
"RTN","RCDPEX1",25,0)
 . . S RCPAR("DICA")="Select Insurance Company NAME: "
"RTN","RCDPEX1",26,0)
 . . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPEX1",27,0)
 . . I XX=-1 S RCQUIT=1
"RTN","RCDPEX1",28,0)
 ;
"RTN","RCDPEX1",29,0)
 ; Exit if the user asks to exit. 
"RTN","RCDPEX1",30,0)
 I RCQUIT Q
"RTN","RCDPEX1",31,0)
 ;
"RTN","RCDPEX1",32,0)
 ; Transmission exceptions
"RTN","RCDPEX1",33,0)
 I RCEXCTYP="T" D EN^VALM("RCDPEX EOB EXCEPTION LIST")
"RTN","RCDPEX1",34,0)
 I RCEXCTYP="D" D EN^VALM("RCDPEX EOB_SUM EXCEPTION LIST")
"RTN","RCDPEX1",35,0)
 K RCFASTXT,RCDA
"RTN","RCDPEX1",36,0)
 Q
"RTN","RCDPEX1",37,0)
 ;
"RTN","RCDPEX1",38,0)
INIT ; -- set up initial variables
"RTN","RCDPEX1",39,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX1",40,0)
 D BLD
"RTN","RCDPEX1",41,0)
 Q
"RTN","RCDPEX1",42,0)
 ;
"RTN","RCDPEX1",43,0)
REBLD ; Set up formatted global
"RTN","RCDPEX1",44,0)
 ;
"RTN","RCDPEX1",45,0)
BLD ; -- build list of messages
"RTN","RCDPEX1",46,0)
 N DA,DR,RCSEQ,RCMSG,RCS,RCER,RCDPDATA,RC0,TOOSOON,X,Z
"RTN","RCDPEX1",47,0)
 K ^TMP("RCDPEX-EOB",$J),^TMP("RCDPEX-EOBDX",$J)
"RTN","RCDPEX1",48,0)
 S (RCMSG,RCSEQ,VALMCNT)=0
"RTN","RCDPEX1",49,0)
 ;
"RTN","RCDPEX1",50,0)
 ; Extract from 344.5
"RTN","RCDPEX1",51,0)
 F  S RCMSG=$O(^RCY(344.5,"AEXC",1,RCMSG)) Q:'RCMSG  S RC0=$G(^(RCMSG,0)) D
"RTN","RCDPEX1",52,0)
 . I ($P(RC0,U,3)\1)=DT S TOOSOON=0 D  Q:TOOSOON
"RTN","RCDPEX1",53,0)
 .. ; If partial msg, allow a day before it's an exception
"RTN","RCDPEX1",54,0)
 .. I $P(RC0,U,10)=2 Q
"RTN","RCDPEX1",55,0)
 . ;
"RTN","RCDPEX1",56,0)
 . ; -- add to list
"RTN","RCDPEX1",57,0)
 . ;Display message id, type, date recorded, exception, mail msg #
"RTN","RCDPEX1",58,0)
 . S RCSEQ=RCSEQ+1
"RTN","RCDPEX1",59,0)
 . S DR=".01:.03;.1;.11",DA=RCMSG D DIQ3445(DA,DR)
"RTN","RCDPEX1",60,0)
 . S X=""
"RTN","RCDPEX1",61,0)
 . S X=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCDPDATA(344.5,RCMSG,.01,"E")),"",1,26)
"RTN","RCDPEX1",62,0)
 . S X=$$SETSTR^VALM1("  "_$E($G(RCDPDATA(344.5,RCMSG,.02,"I")),4,6),X,27,9)
"RTN","RCDPEX1",63,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.03,"E")),X,36,22)
"RTN","RCDPEX1",64,0)
 . S X=$$SETSTR^VALM1("  "_$G(RCDPDATA(344.5,RCMSG,.11,"E")),X,58,17)
"RTN","RCDPEX1",65,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",66,0)
 . S X=$J("",4)_"EXCEPTION: "_$G(RCDPDATA(344.5,RCMSG,.1,"E"))
"RTN","RCDPEX1",67,0)
 . D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",68,0)
 . S DR=1,DA=RCMSG D DIQ3445(DA,DR) ; Get display data
"RTN","RCDPEX1",69,0)
 . S Z=0 F  S Z=$O(RCDPDATA(344.5,RCMSG,1,Z)) Q:'Z  S X=$J("",6)_RCDPDATA(344.5,RCMSG,1,Z) D SET(X,344.5,RCMSG,RCSEQ)
"RTN","RCDPEX1",70,0)
 ;
"RTN","RCDPEX1",71,0)
 I '$D(^TMP("RCDPEX-EOB",$J)) S VALMCNT=2,^TMP("RCDPEX-EOB",$J,1,0)=" ",^TMP("RCDPEX-EOB",$J,2,0)="   There Are No EEOB Exception Records On File"
"RTN","RCDPEX1",72,0)
 Q
"RTN","RCDPEX1",73,0)
 ;
"RTN","RCDPEX1",74,0)
FNL ; -- Clean up list
"RTN","RCDPEX1",75,0)
 K ^TMP("RCDPEX-EOBDX",$J),^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPEX1",76,0)
 D CLEAN^VALM10
"RTN","RCDPEX1",77,0)
 K RCFASTXT
"RTN","RCDPEX1",78,0)
 Q
"RTN","RCDPEX1",79,0)
 ;
"RTN","RCDPEX1",80,0)
SET(X,FILE,RCMSG,RCSEQ) ; -- set arrays for EOB exception records
"RTN","RCDPEX1",81,0)
 ; X = the data to set into the global
"RTN","RCDPEX1",82,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX1",83,0)
 S ^TMP("RCDPEX-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX1",84,0)
 S ^TMP("RCDPEX-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_FILE
"RTN","RCDPEX1",85,0)
 Q
"RTN","RCDPEX1",86,0)
 ;
"RTN","RCDPEX1",87,0)
HDR ;
"RTN","RCDPEX1",88,0)
 S VALMHDR(1)=$J("",21)_"ERA/EEOB MESSAGES WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX1",89,0)
 S VALMHDR(2)=" "
"RTN","RCDPEX1",90,0)
 Q
"RTN","RCDPEX1",91,0)
 ;
"RTN","RCDPEX1",92,0)
DIQ3445(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.5
"RTN","RCDPEX1",93,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",94,0)
 K RCDPDATA(344.5)
"RTN","RCDPEX1",95,0)
 S DIQ(0)="EI",DIC="^RCY(344.5,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",96,0)
 Q
"RTN","RCDPEX1",97,0)
 ;
"RTN","RCDPEX1",98,0)
DIQ3444(DA,DR) ; DIQ call to retrieve data for DR fields in file 344.4
"RTN","RCDPEX1",99,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPEX1",100,0)
 K RCDPDATA(344.4)
"RTN","RCDPEX1",101,0)
 S DIQ(0)="EI",DIC="^RCY(344.4,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPEX1",102,0)
 Q
"RTN","RCDPEX1",103,0)
 ;
"RTN","RCDPEX2")
0^1^B32725849
"RTN","RCDPEX2",1,0)
RCDPEX2 ;ALB/TMK/KML/PJH - ELECTRONIC EOB DETAIL EXCEPTION MAIN LIST TEMPLATE ;Aug 14, 2014@15:07:21
"RTN","RCDPEX2",2,0)
 ;;4.5;Accounts Receivable;**173,269,298,304,326**;Mar 20, 1995;Build 26
"RTN","RCDPEX2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX2",4,0)
 ;
"RTN","RCDPEX2",5,0)
INIT ;EP from listman template RCDPEX EOB_SUM EXCEPTION LIST
"RTN","RCDPEX2",6,0)
 ; set up initial variables
"RTN","RCDPEX2",7,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","RCDPEX2",8,0)
 D BLD
"RTN","RCDPEX2",9,0)
 Q
"RTN","RCDPEX2",10,0)
 ;
"RTN","RCDPEX2",11,0)
REBLD ; Set up formatted global
"RTN","RCDPEX2",12,0)
 ;
"RTN","RCDPEX2",13,0)
BLD ;EP from RCDPEX3,RCDPEX31,RCDEPEX32
"RTN","RCDPEX2",14,0)
 ; Build list of messages from file 344.4
"RTN","RCDPEX2",15,0)
 ; Input:   RCDWLIEN  - Optional set to a selected ERA if the user opts to see
"RTN","RCDPEX2",16,0)
 ;                      exceptions after receiving an 'ACCESS DENIED' message
"RTN","RCDPEX2",17,0)
 ;                      in the ERA WORKLIST when they tried to create a scratch
"RTN","RCDPEX2",18,0)
 ;                      pad for the ERA (EXCDENY^RCDPEWLP).  Otherwise, undefined
"RTN","RCDPEX2",19,0)
 ;          RCPAY       'R' = RANGE, 'S' = SELECTED, 'A' = ALL
"RTN","RCDPEX2",20,0)
 ;          RCTYPE   -  'M' - Only display Medical Exceptions
"RTN","RCDPEX2",21,0)
 ;                      'P' - Only display Pharmacy Exceptions
"RTN","RCDPEX2",22,0)
 ;                      'T' - Tricare
"RTN","RCDPEX2",23,0)
 ;                      'A' - Display Medical and Pharmacy and Tricare Exceptions
"RTN","RCDPEX2",24,0)
 ;          ^TMP(^TMP("RCDPEU1",$J) holds selected payers to display.
"RTN","RCDPEX2",25,0)
 ;
"RTN","RCDPEX2",26,0)
 N DA,DR,RC0,RCBILL,RCDECME,RCDPDATA,RCPYRIEN,RCER,RCEXC,RCMSG1,RCS,RCSEQ,RCSUB,RCX,RCX1,X,XX,Y,YY
"RTN","RCDPEX2",27,0)
 K ^TMP("RCDPEX_SUM-EOB",$J),^TMP("RCDPEX_SUM-EOBDX",$J)
"RTN","RCDPEX2",28,0)
 K ^TMP("RCDPEADP",$J)                      ; Temp insurance array
"RTN","RCDPEX2",29,0)
 S (RCSEQ,VALMCNT)=0
"RTN","RCDPEX2",30,0)
 ;
"RTN","RCDPEX2",31,0)
 ; Extract from 344.4
"RTN","RCDPEX2",32,0)
 S RCER=0
"RTN","RCDPEX2",33,0)
 F  D  Q:'RCER
"RTN","RCDPEX2",34,0)
 . S RCER=$O(^RCY(344.4,"AEXC",RCER))
"RTN","RCDPEX2",35,0)
 . Q:'RCER
"RTN","RCDPEX2",36,0)
 . S RCMSG=0
"RTN","RCDPEX2",37,0)
 . F  D  Q:'RCMSG
"RTN","RCDPEX2",38,0)
 . . S RCMSG=$O(^RCY(344.4,"AEXC",RCER,RCMSG))
"RTN","RCDPEX2",39,0)
 . . Q:'RCMSG
"RTN","RCDPEX2",40,0)
 . . S RCSUB=RCMSG_",",DR=".02:.06",DA=RCMSG K DA(1)
"RTN","RCDPEX2",41,0)
 . . ;
"RTN","RCDPEX2",42,0)
 . . I RCPAY'="A" D  Q:'XX
"RTN","RCDPEX2",43,0)
 . . . S XX=$$ISSEL^RCDPEU1(344.4,DA)           ; PRCA*4.5*326 Check if payer was selected
"RTN","RCDPEX2",44,0)
 . . E  I RCTYPE'="A" D  Q:'XX                   ; If all of a give type of payer selected
"RTN","RCDPEX2",45,0)
 . . . S XX=$$ISTYPE^RCDPEU1(344.4,DA,RCTYPE)   ;  check that payer matches type
"RTN","RCDPEX2",46,0)
 . . ;
"RTN","RCDPEX2",47,0)
 . . D DIQ3444(DA,DR,.RCDPDATA)             ; Extract Trace #, Payer Name/TIN, ERA Date
"RTN","RCDPEX2",48,0)
 . . ;
"RTN","RCDPEX2",49,0)
 . . ; HIPPA 5010 - display of the Trace # on a separate line due to the increased
"RTN","RCDPEX2",50,0)
 . . ; length from 30 to 50 characters   
"RTN","RCDPEX2",51,0)
 . . S RCX("TRACE")=$G(RCDPDATA(344.4,RCSUB,.02,"E"))
"RTN","RCDPEX2",52,0)
 . . S RCX("INCOID")=$G(RCDPDATA(344.4,RCSUB,.03,"E"))
"RTN","RCDPEX2",53,0)
 . . S RCX("PAYFROM")=$G(RCDPDATA(344.4,RCSUB,.06,"E"))
"RTN","RCDPEX2",54,0)
 . . ;
"RTN","RCDPEX2",55,0)
 . . ; Quit if the exception is not for a specified ERA (when called from the ERA worklist)
"RTN","RCDPEX2",56,0)
 . . I $G(RCDWLIEN)'="",(RCDWLIEN'=+RCSUB) Q
"RTN","RCDPEX2",57,0)
 . . ;
"RTN","RCDPEX2",58,0)
 . . S RCDECME=0 ; PRCA*4.5*326 - no point looking for ECME# on data exception.  It is not present.
"RTN","RCDPEX2",59,0)
 . . S RCS=0
"RTN","RCDPEX2",60,0)
 . . F  D  Q:'RCS
"RTN","RCDPEX2",61,0)
 . . . S RCS=$O(^RCY(344.4,"AEXC",RCER,RCMSG,RCS))
"RTN","RCDPEX2",62,0)
 . . . Q:'RCS
"RTN","RCDPEX2",63,0)
 . . . S RC0=$G(^RCY(344.4,RCMSG,1,RCS,0))
"RTN","RCDPEX2",64,0)
 . . . S DA(1)=RCMSG,DA=RCS,RCSUB=DA_","_DA(1)_","
"RTN","RCDPEX2",65,0)
 . . . S DR=".01;.02;.03;.05;.07;.08;.1;.11;.12;.15;.24;9.01",DA=RCS
"RTN","RCDPEX2",66,0)
 . . . D DIQ3444(.DA,DR,.RCDPDATA)
"RTN","RCDPEX2",67,0)
 . . . S RCX1=$$SETSTR^VALM1($E(RCX("PAYFROM"),1,25)_"/"_$E(RCX("INCOID"),1,20),"",9,78)
"RTN","RCDPEX2",68,0)
 . . . S RCSEQ=RCSEQ+1
"RTN","RCDPEX2",69,0)
 . . . S RCX=$$SETSTR^VALM1($E(RCSEQ_$J("",4),1,4)_"  "_$G(RCX("TRACE")),"",1,80)
"RTN","RCDPEX2",70,0)
 . . . S XX=$G(RCDPDATA(344.4,RCMSG_",",.04,"I"))     ; ERA Date
"RTN","RCDPEX2",71,0)
 . . . S RCX=$$SETSTR^VALM1("  "_$$FMTE^XLFDT(XX,"2DZ"),RCX,70,10)
"RTN","RCDPEX2",72,0)
 . . . D SET(RCX,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",73,0)
 . . . D SET(RCX1,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",74,0)
 . . . S X=$$SETSTR^VALM1($J("",6)_"Seq #: "_$G(RCDPDATA(344.41,RCSUB,.01,"E")),"",1,17)
"RTN","RCDPEX2",75,0)
 . . . S XX=$G(RCDPDATA(344.41,RCSUB,.02,"E"))
"RTN","RCDPEX2",76,0)
 . . . S RCBILL=$S(XX'="":XX,1:"*"_$G(RCDPDATA(344.41,RCSUB,.05,"E")))
"RTN","RCDPEX2",77,0)
 . . . S X=$$SETSTR^VALM1(" Bill: "_RCBILL,X,18,20)
"RTN","RCDPEX2",78,0)
 . . . S X=$$SETSTR^VALM1(" Pt: "_$G(RCDPDATA(344.41,RCSUB,.15,"E")),X,38,25)
"RTN","RCDPEX2",79,0)
 . . . S X=$$SETSTR^VALM1(" Pd: "_$J(+$G(RCDPDATA(344.41,RCSUB,.03,"E")),"",2),X,63,17)
"RTN","RCDPEX2",80,0)
 . . . D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",81,0)
 . . . ;
"RTN","RCDPEX2",82,0)
 . . . I +RCDECME D  ;PRCA*4.5*298 Display pharmacy data when ECME number is present
"RTN","RCDPEX2",83,0)
 . . . . S X=$$SETSTR^VALM1($J("",6)_"ECME #: "_$G(RCDPDATA(344.41,RCSUB,.24,"E")),X,1,28)
"RTN","RCDPEX2",84,0)
 . . . . N RCOMMNT,RCRLSDT  ; comment & release date
"RTN","RCDPEX2",85,0)
 . . . . ; IA #4701, RELEASE DATE for the prescription/fill
"RTN","RCDPEX2",86,0)
 . . . . S RCRLSDT=$$RXRLDT^PSOBPSUT($G(RCDPDATA(344.41,RCSUB,.24,"E")))   ; get release date
"RTN","RCDPEX2",87,0)
 . . . . S X=$$SETSTR^VALM1(" Release Date: "_$$FMTE^XLFDT(RCRLSDT),X,29,51)
"RTN","RCDPEX2",88,0)
 . . . . D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",89,0)
 . . . . S RCOMMNT=$G(RCDPDATA(344.41,RCSUB,9.01,"E"))  ; Rx comment
"RTN","RCDPEX2",90,0)
 . . . . S X=$$SETSTR^VALM1("      Comment: "_RCOMMNT,X,1,80)
"RTN","RCDPEX2",91,0)
 . . . . D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",92,0)
 . . . ;
"RTN","RCDPEX2",93,0)
 . . . I $P(RC0,U,11) D
"RTN","RCDPEX2",94,0)
 . . . . S X=$J("",10)_"Transferred To: "_$G(RCDPDATA(344.41,RCSUB,.11,"E"))
"RTN","RCDPEX2",95,0)
 . . . . S XX=$$FMTE^XLFDT($G(RCDPDATA(344.41,RCSUB,.12,"I")),"2DZ")
"RTN","RCDPEX2",96,0)
 . . . . S X=$$SETSTR^VALM1("  On: "_XX,X,$L(X)+1,25)
"RTN","RCDPEX2",97,0)
 . . . . D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",98,0)
 . . . S XX=$G(RCDPDATA(344.41,RCSUB,.08,"E"))
"RTN","RCDPEX2",99,0)
 . . . S RCEXC=$S($G(RCDPDATA(344.41,RCSUB,.07,"I"))=99:$S(XX'="":XX,1:"UNKNOWN"),1:$G(RCDPDATA(344.41,RCSUB,.07,"E")))
"RTN","RCDPEX2",100,0)
 . . . ; PRCA*4.5*298 Remove comment " (TRANSFER NEEDED IF NOT YOURS)"
"RTN","RCDPEX2",101,0)
 . . . S X=$J("",10)_"**Exception: "_RCEXC
"RTN","RCDPEX2",102,0)
 . . . I $P(RC0,U,7)=1 D
"RTN","RCDPEX2",103,0)
 . . . . I $P(RC0,U,10)=0 S X=X_" (TRANSFER REJECTED)" Q
"RTN","RCDPEX2",104,0)
 . . . . I $P(RC0,U,16) S X=X_" (TRANSFER ACKNOWLEDGED)" Q
"RTN","RCDPEX2",105,0)
 . . . . S X=X_" (TRANSFER NOT ACKNOWLEDGED)"
"RTN","RCDPEX2",106,0)
 . . . D SET(X,RCSEQ,RCMSG,RCS)
"RTN","RCDPEX2",107,0)
 ;
"RTN","RCDPEX2",108,0)
 I '$D(^TMP("RCDPEX_SUM-EOB",$J)) D
"RTN","RCDPEX2",109,0)
 . S VALMCNT=2,^TMP("RCDPEX_SUM-EOB",$J,1,0)=" "
"RTN","RCDPEX2",110,0)
 . S ^TMP("RCDPEX_SUM-EOB",$J,2,0)="   There Are No EEOB Detail Exceptions On File"
"RTN","RCDPEX2",111,0)
 Q
"RTN","RCDPEX2",112,0)
 ;
"RTN","RCDPEX2",113,0)
FNL ;EP from listman template RCDPEX EOB_SUM EXCEPTION LIST 
"RTN","RCDPEX2",114,0)
 ; Clean up list
"RTN","RCDPEX2",115,0)
 K ^TMP("RCDPEX_SUM-EOBDX",$J)
"RTN","RCDPEX2",116,0)
 D CLEAN^VALM10
"RTN","RCDPEX2",117,0)
 K RCFASTXT
"RTN","RCDPEX2",118,0)
 Q
"RTN","RCDPEX2",119,0)
 ;
"RTN","RCDPEX2",120,0)
SET(X,RCSEQ,RCMSG,RCS) ; Set arrays for EOB exception records
"RTN","RCDPEX2",121,0)
 ; Input:   X       - Data to set into the global
"RTN","RCDPEX2",122,0)
 ;          RCSEQ   - Listman line #
"RTN","RCDPEX2",123,0)
 ;          RCMSG   - IEN for 344.41 multiple
"RTN","RCDPEX2",124,0)
 ;          RCS     - IEN for 344.4
"RTN","RCDPEX2",125,0)
 ; Output:  Line added to the listman body
"RTN","RCDPEX2",126,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPEX_SUM-EOB",$J,VALMCNT,0)=X
"RTN","RCDPEX2",127,0)
 S ^TMP("RCDPEX_SUM-EOB",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEX2",128,0)
 S ^TMP("RCDPEX_SUM-EOBDX",$J,RCSEQ)=VALMCNT_U_RCMSG_U_RCS
"RTN","RCDPEX2",129,0)
 Q
"RTN","RCDPEX2",130,0)
 ;
"RTN","RCDPEX2",131,0)
HDR ;EP from listman template RCDPEX EOB_SUM EXCEPTION LIST
"RTN","RCDPEX2",132,0)
 S VALMHDR(1)=$J("",19)_"EEOB DETAIL DATA WITH EXCEPTION CONDITIONS"
"RTN","RCDPEX2",133,0)
 ; 
"RTN","RCDPEX2",134,0)
 ; HIPPA 5010 - display of the following headers on a separate line due to the
"RTN","RCDPEX2",135,0)
 ; increased length of Trace # from 30 to 50 characters
"RTN","RCDPEX2",136,0)
 S VALMHDR(2)="  #   Trace #"_$J("",58)_"EOB Date"
"RTN","RCDPEX2",137,0)
 Q
"RTN","RCDPEX2",138,0)
 ;
"RTN","RCDPEX2",139,0)
DIQ3444(DA,DR,RCPDATA) ; DIQ call to retrieve data for DR fields in file 344.4/344.41
"RTN","RCDPEX2",140,0)
 ; Input:   DA      - IEN for file 344.4
"RTN","RCDPEX2",141,0)
 ;          DR      - Semi-colon delimitted list of fields to be retrieved
"RTN","RCDPEX2",142,0)
 ; Output:  RCPDATA - Array of selected fields
"RTN","RCDPEX2",143,0)
 N %I,D0,DIC,DIQ,DIQ2,FILE,YY
"RTN","RCDPEX2",144,0)
 S FILE=$S($D(DA(1)):344.41,1:344.4)
"RTN","RCDPEX2",145,0)
 K RCDPDATA(FILE)
"RTN","RCDPEX2",146,0)
 D GETS^DIQ(FILE,DA_","_$S($G(DA(1)):DA(1)_",",1:""),DR,"EI","RCDPDATA")
"RTN","RCDPEX2",147,0)
 Q
"RTN","RCDPLPL4")
0^33^B246541574
"RTN","RCDPLPL4",1,0)
RCDPLPL4 ;ALB/SAB - Multiple Bill Link Payments ;17 Mar 16
"RTN","RCDPLPL4",2,0)
 ;;4.5;Accounts Receivable;**304,301,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPLPL4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPL4",4,0)
 ;
"RTN","RCDPLPL4",5,0)
 Q
"RTN","RCDPLPL4",6,0)
 ;
"RTN","RCDPLPL4",7,0)
MULTIPLE(RCRECTDA,RCTRANDA,RCGECSCR,RCSTATUS) ; Process multiple bills for the same receipt transaction.
"RTN","RCDPLPL4",8,0)
 ;
"RTN","RCDPLPL4",9,0)
 N RCAMT,RCCT,RCAMTRM,RCEXIT,RCMSG,RCNWTRAN,RCTACCT,RCTAMT,RCTDATA,RCACT,RCARRAY,RCEXT,RCRSP,RCSPRSS
"RTN","RCDPLPL4",10,0)
 N RCDACNO,I,RCNM,RCBLIEN,RCDACNOI,RCUNAPN,RCQTSP,RCANS,RCDACT,RCDATA,RCPIEN,RCTACCTT
"RTN","RCDPLPL4",11,0)
 N RCTAMT,RCTCMT,RCTDNM,RCUNRCN,RCDCHKSW,HRCDCKSW
"RTN","RCDPLPL4",12,0)
 ;
"RTN","RCDPLPL4",13,0)
 S (RCSPRSS,RCEXIT,RCCT)=0
"RTN","RCDPLPL4",14,0)
 S RCTDATA=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPLPL4",15,0)
 I RCTDATA="" D  Q
"RTN","RCDPLPL4",16,0)
 .  S RCMSG="The initial receipt transaction data is missing.  Unable to link a claim to this transaction."
"RTN","RCDPLPL4",17,0)
 .  D WRITE^RCDPRPLU(RCMSG)
"RTN","RCDPLPL4",18,0)
 ;
"RTN","RCDPLPL4",19,0)
 ; Retrieve payment amount on the transaction
"RTN","RCDPLPL4",20,0)
 S (RCAMT,RCAMTRM)=+$P(RCTDATA,U,4)
"RTN","RCDPLPL4",21,0)
 ;
"RTN","RCDPLPL4",22,0)
 I RCAMT=0 D  Q
"RTN","RCDPLPL4",23,0)
 .  S RCMSG="The transaction balance is 0.  Unable to link a claim to this transaction."
"RTN","RCDPLPL4",24,0)
 .  D WRITE^RCDPRPLU(RCMSG)
"RTN","RCDPLPL4",25,0)
 ;
"RTN","RCDPLPL4",26,0)
 ;Retrieve list of Bills to link to payment
"RTN","RCDPLPL4",27,0)
 F  D  Q:RCAMTRM=0  Q:RCEXIT
"RTN","RCDPLPL4",28,0)
 . ;
"RTN","RCDPLPL4",29,0)
 . ;Re-init the suspense quit flag
"RTN","RCDPLPL4",30,0)
 . S RCQTSP=0
"RTN","RCDPLPL4",31,0)
 . ;
"RTN","RCDPLPL4",32,0)
 . ;Ask the user for the account
"RTN","RCDPLPL4",33,0)
 . S RCDCHKSW=1,HRCDCKSW=0,RCACCT=$$GETACCT(RCRECTDA) I RCDCHKSW=0 W ! Q    ;prca*4.5*301
"RTN","RCDPLPL4",34,0)
 . I RCACCT=-1 D  Q
"RTN","RCDPLPL4",35,0)
 . . S RCRSP=$$CONQUIT()
"RTN","RCDPLPL4",36,0)
 . . S:RCRSP=1 RCEXIT=1
"RTN","RCDPLPL4",37,0)
 . ;
"RTN","RCDPLPL4",38,0)
 . I RCACCT=0 D  Q
"RTN","RCDPLPL4",39,0)
 . . W !,?6,"Invalid Bill Number, Please try again...."
"RTN","RCDPLPL4",40,0)
 . S:RCACCT="SUSPENSE" RCACCT=""     ;Payment needs to remain in suspense.
"RTN","RCDPLPL4",41,0)
 . ;
"RTN","RCDPLPL4",42,0)
 . ;Ask the user for the amount
"RTN","RCDPLPL4",43,0)
 . S RCAMT=$$GETAMT(RCACCT,RCAMTRM)
"RTN","RCDPLPL4",44,0)
 . Q:RCAMT=-1
"RTN","RCDPLPL4",45,0)
 . ;
"RTN","RCDPLPL4",46,0)
 . ;Ask the user for Comment if no account is entered.
"RTN","RCDPLPL4",47,0)
 . S RCCMT=""
"RTN","RCDPLPL4",48,0)
 . I RCACCT="" S RCCMT=$$GETCMT()
"RTN","RCDPLPL4",49,0)
 . ;timed out or ^ - exit.
"RTN","RCDPLPL4",50,0)
 . I (RCCMT=-1)!(RCCMT="^") Q
"RTN","RCDPLPL4",51,0)
 . ;
"RTN","RCDPLPL4",52,0)
 . ;Update the array and amount remaining.
"RTN","RCDPLPL4",53,0)
 . S RCCT=RCCT+1
"RTN","RCDPLPL4",54,0)
 . S RCARRAY(RCCT)=RCACCT_U_RCAMT_U_RCCMT_U_$$GETACTNM(RCACCT)
"RTN","RCDPLPL4",55,0)
 . S RCAMTRM=RCAMTRM-RCAMT
"RTN","RCDPLPL4",56,0)
 . ;
"RTN","RCDPLPL4",57,0)
 . ;Check to see if user wishes to continue
"RTN","RCDPLPL4",58,0)
 . I RCAMTRM>0 D
"RTN","RCDPLPL4",59,0)
 . . ;
"RTN","RCDPLPL4",60,0)
 . . ;ask if user wishes to continue
"RTN","RCDPLPL4",61,0)
 . . S RCRSP=$$CONTINUE(RCAMTRM)
"RTN","RCDPLPL4",62,0)
 . . ;
"RTN","RCDPLPL4",63,0)
 . . ;User wishes to continue
"RTN","RCDPLPL4",64,0)
 . . Q:RCRSP=1
"RTN","RCDPLPL4",65,0)
 . . ;
"RTN","RCDPLPL4",66,0)
 . . ;if no, ask if user is sure and that all selected payments will not be linked.
"RTN","RCDPLPL4",67,0)
 . . S RCRSP=$$CONQUIT()
"RTN","RCDPLPL4",68,0)
 . . I RCRSP=1 S RCEXIT=1
"RTN","RCDPLPL4",69,0)
 ;
"RTN","RCDPLPL4",70,0)
 ; If the user is exiting before completion, quit.
"RTN","RCDPLPL4",71,0)
 Q:RCEXIT
"RTN","RCDPLPL4",72,0)
 ;
"RTN","RCDPLPL4",73,0)
 ;State all money is disbursed and display all accounts for confirmation
"RTN","RCDPLPL4",74,0)
 W !!,"*** RECEIPT HAS BEEN FULLY DISBURSED ***",!
"RTN","RCDPLPL4",75,0)
 ;
"RTN","RCDPLPL4",76,0)
 ; Ask if user wishes to review the list again
"RTN","RCDPLPL4",77,0)
 S RCANS=$$GETANS(1)
"RTN","RCDPLPL4",78,0)
 ;
"RTN","RCDPLPL4",79,0)
 ;Spacing line
"RTN","RCDPLPL4",80,0)
 W !
"RTN","RCDPLPL4",81,0)
 ;
"RTN","RCDPLPL4",82,0)
 ; Review the list if necessary
"RTN","RCDPLPL4",83,0)
 I RCANS=1 D
"RTN","RCDPLPL4",84,0)
 . S I=0
"RTN","RCDPLPL4",85,0)
 . W !,?5,"PATIENT NAME",?36,"ACCOUNT",?50,"PAYMENT TO APPLY",!
"RTN","RCDPLPL4",86,0)
 . F I=1:1:RCCT D
"RTN","RCDPLPL4",87,0)
 . . S (RCNM,RCDACNO,RCDACNOI)=""
"RTN","RCDPLPL4",88,0)
 . . S RCDATA=$G(RCARRAY(I))
"RTN","RCDPLPL4",89,0)
 . . S RCDACT=$P(RCDATA,U)
"RTN","RCDPLPL4",90,0)
 . . S:RCDACT="" RCNM="SUSPENSE"
"RTN","RCDPLPL4",91,0)
 . . I RCDACT[";DPT" D
"RTN","RCDPLPL4",92,0)
 . . . S RCNM=$P($G(^DPT($P(RCDACT,";"),0)),U)
"RTN","RCDPLPL4",93,0)
 . . . S RCDACNO=""
"RTN","RCDPLPL4",94,0)
 . . I RCDACT[";PRCA" D
"RTN","RCDPLPL4",95,0)
 . . . S RCDACNOI=$P(RCDACT,";")
"RTN","RCDPLPL4",96,0)
 . . . S RCDACNO=$P($G(^PRCA(430,$P(RCDACNOI,U),0)),U)
"RTN","RCDPLPL4",97,0)
 . . . S RCPIEN=$P($G(^DGCR(399,RCDACNOI,0)),U,2)
"RTN","RCDPLPL4",98,0)
 . . . I RCPIEN="" S RCNM="PATIENT NAME NOT FOUND" Q
"RTN","RCDPLPL4",99,0)
 . . . S RCNM=$P($G(^DPT(RCPIEN,0)),U)
"RTN","RCDPLPL4",100,0)
 . . . I RCNM="" S RCNM="PATIENT NAME NOT FOUND"
"RTN","RCDPLPL4",101,0)
 . . W ?5,RCNM,?36,RCDACNO,?50,"$",$J($FN($P(RCDATA,U,2),",",2),15),!
"RTN","RCDPLPL4",102,0)
 ;
"RTN","RCDPLPL4",103,0)
 ; Ask the user if they wish to update.  Quit if they time out, "^" out, or say No to updating.
"RTN","RCDPLPL4",104,0)
 S RCANS=$$GETANS(2)
"RTN","RCDPLPL4",105,0)
 Q:RCANS'=1
"RTN","RCDPLPL4",106,0)
 ;
"RTN","RCDPLPL4",107,0)
 ;Initialize error flag
"RTN","RCDPLPL4",108,0)
 S RCERROR=0
"RTN","RCDPLPL4",109,0)
 ;
"RTN","RCDPLPL4",110,0)
 ;Surpress PNORBILL^RCDPURED output
"RTN","RCDPLPL4",111,0)
 S RCSPRSS=1
"RTN","RCDPLPL4",112,0)
 ;
"RTN","RCDPLPL4",113,0)
 ;create line spacing
"RTN","RCDPLPL4",114,0)
 W !!
"RTN","RCDPLPL4",115,0)
 ;
"RTN","RCDPLPL4",116,0)
 ;Link the payments
"RTN","RCDPLPL4",117,0)
 F RCACT=1:1:RCCT D  Q:RCERROR
"RTN","RCDPLPL4",118,0)
 . ;
"RTN","RCDPLPL4",119,0)
 . ;Extract data to update
"RTN","RCDPLPL4",120,0)
 . S RCTAMT=$P(RCARRAY(RCACT),U,2)   ;Payment Amount
"RTN","RCDPLPL4",121,0)
 . S RCTACCT=$P(RCARRAY(RCACT),U,1)    ;Account to link to.
"RTN","RCDPLPL4",122,0)
 . S RCTCMT=$P(RCARRAY(RCACT),U,3)
"RTN","RCDPLPL4",123,0)
 . S RCTDNM=$P(RCARRAY(RCACT),U,4)
"RTN","RCDPLPL4",124,0)
 . S RCTACCTT=$S(RCTACCT="":"the Suspense Item",1:RCTACCT)
"RTN","RCDPLPL4",125,0)
 . ;
"RTN","RCDPLPL4",126,0)
 . ;If not the first transaction, create a new one
"RTN","RCDPLPL4",127,0)
 . I RCACT'=1 D  Q
"RTN","RCDPLPL4",128,0)
 . . ;
"RTN","RCDPLPL4",129,0)
 . . ; Create new transaction
"RTN","RCDPLPL4",130,0)
 . . S RCNWTRAN=$$COPYTRAN(RCRECTDA,RCTDATA,RCTAMT,RCGECSCR)
"RTN","RCDPLPL4",131,0)
 . . ;
"RTN","RCDPLPL4",132,0)
 . . ; Link the Payment using the display name
"RTN","RCDPLPL4",133,0)
 . . D LINKPAY(RCRECTDA,RCNWTRAN,RCTDNM)
"RTN","RCDPLPL4",134,0)
 . . ;
"RTN","RCDPLPL4",135,0)
 . . ; build unapplied deposit number
"RTN","RCDPLPL4",136,0)
 . . S RCUNRCN=$P($G(^RCY(344,RCRECTDA,0)),U)
"RTN","RCDPLPL4",137,0)
 . . S RCUNAPN=$S($L(RCUNRCN)>9:$E(RCUNRCN,$L(RCUNRCN-9),$L(RCUNRCN)),1:RCUNRCN)
"RTN","RCDPLPL4",138,0)
 . . S RCUNAPN=RCUNAPN_$E("0000",1,4-$L(RCNWTRAN))_RCNWTRAN
"RTN","RCDPLPL4",139,0)
 . . D SETUNAPP^RCDPURET(RCRECTDA,RCNWTRAN,RCUNAPN) ; add new unapplied deposit #
"RTN","RCDPLPL4",140,0)
 . . ;
"RTN","RCDPLPL4",141,0)
 . . ; If creating a new suspense item, update the comment field and audit logs
"RTN","RCDPLPL4",142,0)
 . . I RCTCMT'="" D
"RTN","RCDPLPL4",143,0)
 . . . ;
"RTN","RCDPLPL4",144,0)
 . . . D UPDCMT(RCRECTDA,RCNWTRAN,RCTCMT)  ; add comment
"RTN","RCDPLPL4",145,0)
 . . . I $G(RCGECSCR)'="" D
"RTN","RCDPLPL4",146,0)
 . . . . D AUDIT^RCBEPAY(RCRECTDA,RCNWTRAN,"I")
"RTN","RCDPLPL4",147,0)
 . . . . D SUSPDIS^RCBEPAY(RCRECTDA,RCNWTRAN,"P")
"RTN","RCDPLPL4",148,0)
 . . . W !,"***** PAYMENT AMOUNT LEFT IN SUSPENSE = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",149,0)
 . . ;
"RTN","RCDPLPL4",150,0)
 . . ; If linking an account, process the linking
"RTN","RCDPLPL4",151,0)
 . . I RCTCMT="" D
"RTN","RCDPLPL4",152,0)
 . . . ;
"RTN","RCDPLPL4",153,0)
 . . . ; If the receipt has been processed, process the payment
"RTN","RCDPLPL4",154,0)
 . . . I $G(RCGECSCR)'="" D  Q
"RTN","RCDPLPL4",155,0)
 . . . . W !,RCTDNM," - Updating the Linked Account with PMT = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",156,0)
 . . . . D REMCMT(RCRECTDA,RCNWTRAN)   ; Remove the supense comment.  No longer needed.
"RTN","RCDPLPL4",157,0)
 . . . . D PROCESS(RCRECTDA,RCNWTRAN,RCTDNM)
"RTN","RCDPLPL4",158,0)
 . . . ;
"RTN","RCDPLPL4",159,0)
 . . . ; The receipt has not been processed
"RTN","RCDPLPL4",160,0)
 . . . W !,RCTDNM," - Receipt has not been processed.  Account linked but not"
"RTN","RCDPLPL4",161,0)
 . . . W !,?6,"updated for the PMT = $",$J(RCTAMT,"",2)
"RTN","RCDPLPL4",162,0)
 . ;
"RTN","RCDPLPL4",163,0)
 . ;If this is the first transaction, adjust the payment amount to be the amount not split out.
"RTN","RCDPLPL4",164,0)
 . I RCACT=1 D
"RTN","RCDPLPL4",165,0)
 . . ;
"RTN","RCDPLPL4",166,0)
 . . ; Modify the original payment amount
"RTN","RCDPLPL4",167,0)
 . . D ADJTRAMT(RCRECTDA,RCTRANDA,RCTAMT,RCGECSCR,.RCARRAY) ; Added RCARRAY - PRCA*4.5*326
"RTN","RCDPLPL4",168,0)
 . . ;
"RTN","RCDPLPL4",169,0)
 . . ; Adjusting the amount in suspense, update the comment field and audit logs
"RTN","RCDPLPL4",170,0)
 . . I RCTCMT'="" D  Q
"RTN","RCDPLPL4",171,0)
 . . . D UPDCMT(RCRECTDA,RCTRANDA,RCTCMT)  ; add comment
"RTN","RCDPLPL4",172,0)
 . . . I $G(RCGECSCR)'="" D
"RTN","RCDPLPL4",173,0)
 . . . . D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"I")
"RTN","RCDPLPL4",174,0)
 . . . . D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"P")
"RTN","RCDPLPL4",175,0)
 . . . W !,"***** PAYMENT AMOUNT LEFT IN SUSPENSE = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",176,0)
 . . ;
"RTN","RCDPLPL4",177,0)
 . . ; Link the Payment, send account if PRCA, Patient name in Patient
"RTN","RCDPLPL4",178,0)
 . . D LINKPAY(RCRECTDA,RCTRANDA,RCTDNM)
"RTN","RCDPLPL4",179,0)
 . . ;
"RTN","RCDPLPL4",180,0)
 . . ;Remove the comment, item is no longer in suspense
"RTN","RCDPLPL4",181,0)
 . . D REMCMT(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",182,0)
 . . ;
"RTN","RCDPLPL4",183,0)
 . . ; If the receipt has been processed, process the payment
"RTN","RCDPLPL4",184,0)
 . . I $G(RCGECSCR)'="" D  Q
"RTN","RCDPLPL4",185,0)
 . . . W !,RCTDNM," - Updating the Linked Account with PMT = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",186,0)
 . . . D PROCESS(RCRECTDA,RCTRANDA,RCTDNM)
"RTN","RCDPLPL4",187,0)
 . . ;
"RTN","RCDPLPL4",188,0)
 . . ; The receipt has not been processed
"RTN","RCDPLPL4",189,0)
 . . W !,RCTDNM," - Receipt has not been processed.  Account linked but not"
"RTN","RCDPLPL4",190,0)
 . . W !,?6,"updated for the PMT = $",$J(RCTAMT,"",2)
"RTN","RCDPLPL4",191,0)
 ;
"RTN","RCDPLPL4",192,0)
 W !!
"RTN","RCDPLPL4",193,0)
 ;
"RTN","RCDPLPL4",194,0)
 D ENDMSG(RCSTATUS)
"RTN","RCDPLPL4",195,0)
 ;
"RTN","RCDPLPL4",196,0)
 D WRITE^RCDPRPLU(" ")
"RTN","RCDPLPL4",197,0)
 ;
"RTN","RCDPLPL4",198,0)
 Q
"RTN","RCDPLPL4",199,0)
 ;
"RTN","RCDPLPL4",200,0)
GETACCT(RCRECTDA) ; Ask the user for the account
"RTN","RCDPLPL4",201,0)
 ;
"RTN","RCDPLPL4",202,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,DA,RCSUSFLG,RCSTAT
"RTN","RCDPLPL4",203,0)
 ;
"RTN","RCDPLPL4",204,0)
 S RCSUSFLG=0
"RTN","RCDPLPL4",205,0)
 S DIR("A")="BILL NUMBER: ",DIR(0)="FAO"
"RTN","RCDPLPL4",206,0)
 S DIR("PRE")="I X=""SUSPENSE"" S X=""^"",RCSUSFLG=1"
"RTN","RCDPLPL4",207,0)
 D ^DIR
"RTN","RCDPLPL4",208,0)
 Q:RCSUSFLG "SUSPENSE"
"RTN","RCDPLPL4",209,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPLPL4",210,0)
 ;
"RTN","RCDPLPL4",211,0)
 ;Force to all caps
"RTN","RCDPLPL4",212,0)
 S Y=$$UP^XLFSTR(Y)
"RTN","RCDPLPL4",213,0)
 ;
"RTN","RCDPLPL4",214,0)
 ; Check for valid bill number
"RTN","RCDPLPL4",215,0)
 I '$O(^PRCA(430,"D",Y,"")) S Y=""      ; Not a valid bill number
"RTN","RCDPLPL4",216,0)
 ;
"RTN","RCDPLPL4",217,0)
 Q:Y="" 0   ; quit if invalid bill number or lookup number
"RTN","RCDPLPL4",218,0)
 ;
"RTN","RCDPLPL4",219,0)
 S X=Y
"RTN","RCDPLPL4",220,0)
 S DA(1)=RCRECTDA
"RTN","RCDPLPL4",221,0)
 D PNORBILL^RCDPURED
"RTN","RCDPLPL4",222,0)
 ; 
"RTN","RCDPLPL4",223,0)
 ;if this is an account, is it active?  If not, request a new account.
"RTN","RCDPLPL4",224,0)
 I $G(X)[";PRCA" D  Q:RCSTAT'="ACTIVE" 0
"RTN","RCDPLPL4",225,0)
 . S RCSTAT=$$GET1^DIQ(430,$P($G(X),";")_",",8,"E")
"RTN","RCDPLPL4",226,0)
 . I RCSTAT'="ACTIVE",$P($G(^RCD(340,+$P(^PRCA(430,$P($G(X),";"),0),"^",9),0)),"^")[";DPT(" W !,"This bill's status is currently ",RCSTAT,".",!,"Please select a different account."
"RTN","RCDPLPL4",227,0)
 ;
"RTN","RCDPLPL4",228,0)
 ;Something went wrong.  Try again.
"RTN","RCDPLPL4",229,0)
 I '$D(X) Q 0
"RTN","RCDPLPL4",230,0)
 ;
"RTN","RCDPLPL4",231,0)
 ; Account found, return it
"RTN","RCDPLPL4",232,0)
 Q X
"RTN","RCDPLPL4",233,0)
 ;
"RTN","RCDPLPL4",234,0)
GETAMT(RCACCT,RCAMT) ; Ask the user for the amount
"RTN","RCDPLPL4",235,0)
 ;
"RTN","RCDPLPL4",236,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,DA,RCFLG,AMTFLG
"RTN","RCDPLPL4",237,0)
 ;
"RTN","RCDPLPL4",238,0)
 ;
"RTN","RCDPLPL4",239,0)
 S RCFLG=0
"RTN","RCDPLPL4",240,0)
 F  D  Q:RCFLG
"RTN","RCDPLPL4",241,0)
 . S AMTFLG=1  ; Set amount flag check to 1 in case the account is a SUSPENSE account
"RTN","RCDPLPL4",242,0)
 . S DIR("A")="Amount to apply to Account",DIR(0)="N^0.01:"_$J(RCAMT,"",2)_":2"
"RTN","RCDPLPL4",243,0)
 . D ^DIR
"RTN","RCDPLPL4",244,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y="")  S Y=-1,RCFLG=1 Q
"RTN","RCDPLPL4",245,0)
 . ;If not a SUSPENSE account, check the balance.
"RTN","RCDPLPL4",246,0)
 . I RCACCT'="" S AMTFLG=$$PAYCHK(RCACCT,Y)
"RTN","RCDPLPL4",247,0)
 . ;amount applied is greater than the amount owed.  Try again
"RTN","RCDPLPL4",248,0)
 . Q:'AMTFLG
"RTN","RCDPLPL4",249,0)
 . I +Y>0 S RCFLG=1 Q
"RTN","RCDPLPL4",250,0)
 . S Y=0,RCFLG=1
"RTN","RCDPLPL4",251,0)
 Q Y
"RTN","RCDPLPL4",252,0)
 ;
"RTN","RCDPLPL4",253,0)
GETCMT() ; Ask the user for a comment
"RTN","RCDPLPL4",254,0)
 ;
"RTN","RCDPLPL4",255,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",256,0)
 F  D  Q:Y'=""
"RTN","RCDPLPL4",257,0)
 . S Y=$$COM^RCDPECH ; PRCA*4.5*321
"RTN","RCDPLPL4",258,0)
 . ;strip all leading and trailing spaces
"RTN","RCDPLPL4",259,0)
 . S Y=$$TRIM^XLFSTR(Y)
"RTN","RCDPLPL4",260,0)
 . I Y="" W !,"A comment is required when changing the status of an item in Suspense.  Please",!,"try again." Q
"RTN","RCDPLPL4",261,0)
 . I $D(DTOUT) S Y=-1
"RTN","RCDPLPL4",262,0)
 Q Y
"RTN","RCDPLPL4",263,0)
 ;
"RTN","RCDPLPL4",264,0)
CONTINUE(RCAMTRM) ; Ask the user to see if they wish to continue
"RTN","RCDPLPL4",265,0)
 ;
"RTN","RCDPLPL4",266,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",267,0)
 S DIR("A")="Receipt has $"_$J(RCAMTRM,10,2)_" left to link.  Do you wish to link another? ",DIR(0)="YA"
"RTN","RCDPLPL4",268,0)
 D ^DIR
"RTN","RCDPLPL4",269,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPLPL4",270,0)
 Q Y
"RTN","RCDPLPL4",271,0)
 ;
"RTN","RCDPLPL4",272,0)
 ; Confirm with the user that the wish to stop before completing the linking of payments
"RTN","RCDPLPL4",273,0)
CONQUIT() ;
"RTN","RCDPLPL4",274,0)
 ;
"RTN","RCDPLPL4",275,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",276,0)
 S DIR("A",1)="Exiting now will prevent the linking of any previously selected claims to this"
"RTN","RCDPLPL4",277,0)
 S DIR("A")="receipt.  Are you sure? ",DIR(0)="YA"
"RTN","RCDPLPL4",278,0)
 D ^DIR
"RTN","RCDPLPL4",279,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q 1
"RTN","RCDPLPL4",280,0)
 Q Y
"RTN","RCDPLPL4",281,0)
 ;
"RTN","RCDPLPL4",282,0)
 ;Create a new transaction using an existing transaction as the foundation.
"RTN","RCDPLPL4",283,0)
COPYTRAN(RCRECTDA,RCTDATA,RCAMT,RCGECSCR) ;
"RTN","RCDPLPL4",284,0)
 ; Input 
"RTN","RCDPLPL4",285,0)
 ;   RCRECTDA - IEN of Receipt file #344
"RTN","RCDPLPL4",286,0)
 ;   RCPAYDA  - IEN of Receipt Transaction file #344.01
"RTN","RCDPLPL4",287,0)
 ;   RCAMT    - Amount
"RTN","RCDPLPL4",288,0)
 ;   RCGECSCR - null = receipt not processed
"RTN","RCDPLPL4",289,0)
 ; Output
"RTN","RCDPLPL4",290,0)
 ;   Update Receipt file #344 and Audit log #344,71
"RTN","RCDPLPL4",291,0)
 ;
"RTN","RCDPLPL4",292,0)
 N RCNWTRAN,DR,DA,DTOUT,DIE,X,Y,RCTDATA3
"RTN","RCDPLPL4",293,0)
 ;
"RTN","RCDPLPL4",294,0)
 S RCTDATA3=$G(^RCY(344,RCRECTDA,1,RCTRANDA,3))
"RTN","RCDPLPL4",295,0)
 ;Create a new transaction
"RTN","RCDPLPL4",296,0)
 S RCNWTRAN=$$ADDTRAN^RCDPURET(RCRECTDA)
"RTN","RCDPLPL4",297,0)
 S RCCMT="Multi-Trans Split"
"RTN","RCDPLPL4",298,0)
 ;
"RTN","RCDPLPL4",299,0)
 ;Update Transaction
"RTN","RCDPLPL4",300,0)
 S DR=".02////"_$P(RCTDATA,U,2)       ;Original Confirmation #
"RTN","RCDPLPL4",301,0)
 S DR=DR_";.04///"_RCAMT              ;Amount
"RTN","RCDPLPL4",302,0)
 S DR=DR_";.06////"_$P(RCTDATA,U,6)   ;Original date of payment
"RTN","RCDPLPL4",303,0)
 S DR=DR_";.07////"_$P(RCTDATA,U,7)   ;Original Check #
"RTN","RCDPLPL4",304,0)
 S DR=DR_";.08////"_$P(RCTDATA,U,8)   ;Original Check routing #
"RTN","RCDPLPL4",305,0)
 S DR=DR_";.1////"_$P(RCTDATA,U,10)   ;Original date on the check
"RTN","RCDPLPL4",306,0)
 S DR=DR_";.11////"_$P(RCTDATA,U,11)  ;Original CC number
"RTN","RCDPLPL4",307,0)
 S DR=DR_";.12////"_$P(RCTDATA,U,12)  ;Original user who entered the check
"RTN","RCDPLPL4",308,0)
 S DR=DR_";.13////"_$P(RCTDATA,U,13)  ;Original check account #
"RTN","RCDPLPL4",309,0)
 S DR=DR_";.14///"_DUZ                ;User Linking the payment
"RTN","RCDPLPL4",310,0)
 S DR=DR_";1.02////"_RCCMT            ;Initial Comment
"RTN","RCDPLPL4",311,0)
 S DR=DR_";3.02////"_$P(RCTDATA3,U,2) ;Date Trans. originally suspense
"RTN","RCDPLPL4",312,0)
 S DR=DR_";3.03////"_$P(RCTDATA3,U,3) ;User who originally suspended Trans.
"RTN","RCDPLPL4",313,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",314,0)
 S DA=RCNWTRAN,DA(1)=RCRECTDA
"RTN","RCDPLPL4",315,0)
 D ^DIE
"RTN","RCDPLPL4",316,0)
 S $P(^RCY(344,RCRECTDA,1,RCNWTRAN,0),"^",19)=$G(RCDPTYPE)
"RTN","RCDPLPL4",317,0)
 ;
"RTN","RCDPLPL4",318,0)
 ;Update the Audit Log
"RTN","RCDPLPL4",319,0)
 I $G(RCGECSCR)'="" D AUDIT^RCBEPAY(RCRECTDA,RCNWTRAN,"I")
"RTN","RCDPLPL4",320,0)
 ;
"RTN","RCDPLPL4",321,0)
 Q RCNWTRAN
"RTN","RCDPLPL4",322,0)
 ;
"RTN","RCDPLPL4",323,0)
 ;Adjust the original transaction's payment amount to match to the actual, split amount.
"RTN","RCDPLPL4",324,0)
ADJTRAMT(RCRECTDA,RCTRANDA,RCAMT,RCGECSCR,RCARRAY) ; Added RCARRAY - PRCA*4.5*326
"RTN","RCDPLPL4",325,0)
 ; Input 
"RTN","RCDPLPL4",326,0)
 ;   RCRECTDA - IEN of Receipt file #344
"RTN","RCDPLPL4",327,0)
 ;   RCPAYDA  - IEN of Receipt Transaction file #344.01
"RTN","RCDPLPL4",328,0)
 ;   RCAMT    - Amount
"RTN","RCDPLPL4",329,0)
 ;   RCGECSCR - null = receipt not processed
"RTN","RCDPLPL4",330,0)
 ;   RCARRAY  - Array of Multi-Trans split information (OPTIONAL)
"RTN","RCDPLPL4",331,0)
 ; Output
"RTN","RCDPLPL4",332,0)
 ;   Update Receipt file #344 and Audit log #344,71
"RTN","RCDPLPL4",333,0)
 ;
"RTN","RCDPLPL4",334,0)
 N RCCMT,DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",335,0)
 S RCCMT="Multi-Trans Split"
"RTN","RCDPLPL4",336,0)
 ;
"RTN","RCDPLPL4",337,0)
 S DR=".04///"_RCAMT_";1.02///"_RCCMT
"RTN","RCDPLPL4",338,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",339,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",340,0)
 D ^DIE
"RTN","RCDPLPL4",341,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",342,0)
 ;
"RTN","RCDPLPL4",343,0)
 ;Update the Audit Log
"RTN","RCDPLPL4",344,0)
 I $G(RCGECSCR)'="" D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"I",.RCARRAY) ; Added RCARRAY - PRCA*4.5*326
"RTN","RCDPLPL4",345,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPLPL4",346,0)
 D AUDIT^RCDPECH(RCRECTDA,RCTRANDA,"","")
"RTN","RCDPLPL4",347,0)
 Q
"RTN","RCDPLPL4",348,0)
 ;
"RTN","RCDPLPL4",349,0)
 ;Link the Transaction to an existing account
"RTN","RCDPLPL4",350,0)
LINKPAY(RCRECTDA,RCTRANDA,RCACCT) ;
"RTN","RCDPLPL4",351,0)
 ;
"RTN","RCDPLPL4",352,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",353,0)
 S DR=".09///"_RCACCT
"RTN","RCDPLPL4",354,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",355,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",356,0)
 D ^DIE
"RTN","RCDPLPL4",357,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",358,0)
 Q
"RTN","RCDPLPL4",359,0)
 ;
"RTN","RCDPLPL4",360,0)
 ;Remove the suspense comment, item no longer in suspense
"RTN","RCDPLPL4",361,0)
REMCMT(RCRECTDA,RCTRANDA) ;
"RTN","RCDPLPL4",362,0)
 ;
"RTN","RCDPLPL4",363,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",364,0)
 S DR="1.02///@"
"RTN","RCDPLPL4",365,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",366,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",367,0)
 D ^DIE
"RTN","RCDPLPL4",368,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",369,0)
 Q
"RTN","RCDPLPL4",370,0)
 ;
"RTN","RCDPLPL4",371,0)
GETACTNM(RCACCT) ;
"RTN","RCDPLPL4",372,0)
 N RCACCTL,RCIEN,RCFILE
"RTN","RCDPLPL4",373,0)
 S RCACCTL=""
"RTN","RCDPLPL4",374,0)
 Q:RCACCT="" RCACCTL
"RTN","RCDPLPL4",375,0)
 S RCFILE=$S(RCACCT[";PRCA(430":430,1:2)
"RTN","RCDPLPL4",376,0)
 S RCIEN=$P(RCACCT,";")
"RTN","RCDPLPL4",377,0)
 S RCACCTL=$$GET1^DIQ(RCFILE,RCIEN_",",".01","E")
"RTN","RCDPLPL4",378,0)
 S:$L(RCACCTL,"-")>1 RCACCTL=$P(RCACCTL,"-",2)
"RTN","RCDPLPL4",379,0)
 Q RCACCTL
"RTN","RCDPLPL4",380,0)
 ;
"RTN","RCDPLPL4",381,0)
 ;Update the suspense comment
"RTN","RCDPLPL4",382,0)
UPDCMT(RCRECTDA,RCTRANDA,RCCMT) ;
"RTN","RCDPLPL4",383,0)
 ;
"RTN","RCDPLPL4",384,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",385,0)
 S DR="1.02///"_RCCMT_";" S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",386,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",387,0)
 D ^DIE
"RTN","RCDPLPL4",388,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPLPL4",389,0)
 D AUDIT^RCDPECH(RCRECTDA,RCTRANDA,"","")
"RTN","RCDPLPL4",390,0)
 Q
"RTN","RCDPLPL4",391,0)
 ;
"RTN","RCDPLPL4",392,0)
 ;Process and update the payment amounts
"RTN","RCDPLPL4",393,0)
 ;Note:  some of the code and logic below is also in tag PROCESS^RCDPLPL3.  
"RTN","RCDPLPL4",394,0)
 ;       If changes in logic are made below, please review this tag as well.
"RTN","RCDPLPL4",395,0)
PROCESS(RCRECTDA,RCTRANDA,RCTDNM) ;
"RTN","RCDPLPL4",396,0)
 ;
"RTN","RCDPLPL4",397,0)
 N RCERROR
"RTN","RCDPLPL4",398,0)
 S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",399,0)
 ;  an error occurred during processing a payment
"RTN","RCDPLPL4",400,0)
 I RCERROR D  Q
"RTN","RCDPLPL4",401,0)
 . W !
"RTN","RCDPLPL4",402,0)
 . W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL4",403,0)
 . W !,"|  An ERROR has occurred when processing payment ",RCTRANDA," on receipt ",$P(^RCY(344,RCRECTDA,0),"^"),".",?79,"|"
"RTN","RCDPLPL4",404,0)
 . W !,"|  The error message returned during processing is:",?79,"|"
"RTN","RCDPLPL4",405,0)
 . W !,"|",?79,"|"
"RTN","RCDPLPL4",406,0)
 . W !,"|  ",$P(RCERROR,"^",2),?79,"|"
"RTN","RCDPLPL4",407,0)
 . W !,"|",?79,"|"
"RTN","RCDPLPL4",408,0)
 . W !,"|  You will need to correct the error before you can link the payment.",?79,"|"
"RTN","RCDPLPL4",409,0)
 . W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL4",410,0)
 . W !
"RTN","RCDPLPL4",411,0)
 . D DELEACCT^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",412,0)
 . W !,"Account "_RCTDNM_" was deleted and not linked."
"RTN","RCDPLPL4",413,0)
 ;
"RTN","RCDPLPL4",414,0)
 ;File entry in Audit Log
"RTN","RCDPLPL4",415,0)
 D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"P")
"RTN","RCDPLPL4",416,0)
 ;
"RTN","RCDPLPL4",417,0)
 ; Update Suspense Status
"RTN","RCDPLPL4",418,0)
 D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"PD")
"RTN","RCDPLPL4",419,0)
 ;
"RTN","RCDPLPL4",420,0)
 I $E(RCSTATUS)="A" D
"RTN","RCDPLPL4",421,0)
 . ;  send mail message to the RCDP PAYMENTS mail group
"RTN","RCDPLPL4",422,0)
 . D MAILMSG^RCDPLPSR(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",423,0)
 . ;  place an x in the fms doc field so it will show on the
"RTN","RCDPLPL4",424,0)
 . ;  suspense report
"RTN","RCDPLPL4",425,0)
 . D EDITFMS^RCDPURET(RCRECTDA,RCTRANDA,"x")
"RTN","RCDPLPL4",426,0)
 Q
"RTN","RCDPLPL4",427,0)
 ;
"RTN","RCDPLPL4",428,0)
 ;Display end of processing message.
"RTN","RCDPLPL4",429,0)
ENDMSG(RCSTATUS) ;
"RTN","RCDPLPL4",430,0)
 ;
"RTN","RCDPLPL4",431,0)
 I $E(RCSTATUS)="A" D
"RTN","RCDPLPL4",432,0)
 . W !,"Since the FMS cash receipt document is Accepted in FMS, you need to go"
"RTN","RCDPLPL4",433,0)
 . W !,"online in FMS and transfer the amount paid out of the station's suspense"
"RTN","RCDPLPL4",434,0)
 . W !,"account.",!
"RTN","RCDPLPL4",435,0)
 . W !,"Mail message(s) sent to RCDP PAYMENTS mail group.",!
"RTN","RCDPLPL4",436,0)
 I $E(RCSTATUS)'="A" D
"RTN","RCDPLPL4",437,0)
 . W !,"Since the FMS cash receipt document is NOT Accepted in FMS, you can use"
"RTN","RCDPLPL4",438,0)
 . W !,"the option Process Receipt located under the Receipt Processing Menu"
"RTN","RCDPLPL4",439,0)
 . W !,"to regenerate the cash receipt document to FMS.",!
"RTN","RCDPLPL4",440,0)
 Q
"RTN","RCDPLPL4",441,0)
 ;
"RTN","RCDPLPL4",442,0)
 ;Get users answers to questions for reports.
"RTN","RCDPLPL4",443,0)
GETANS(RCIDX) ;
"RTN","RCDPLPL4",444,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPLPL4",445,0)
 ;
"RTN","RCDPLPL4",446,0)
 ; Ask the user what kind of report
"RTN","RCDPLPL4",447,0)
 I RCIDX=1 D
"RTN","RCDPLPL4",448,0)
 . S DIR("?")="Select to Y to review the payments, N to skip the review."
"RTN","RCDPLPL4",449,0)
 . S DIR("A")="Do you want to review the payment list before updating accounts (Y/N)? "
"RTN","RCDPLPL4",450,0)
 ;
"RTN","RCDPLPL4",451,0)
 ; Ask the user for the payer to start the reporting on (Range Option)
"RTN","RCDPLPL4",452,0)
 I RCIDX=2 D
"RTN","RCDPLPL4",453,0)
 . S DIR("?")="Enter Y to update the accounts, N to return to the LP menu"
"RTN","RCDPLPL4",454,0)
 . S DIR("A")="Do you want to update accounts with these payments (Y/N)? "
"RTN","RCDPLPL4",455,0)
 ;
"RTN","RCDPLPL4",456,0)
 S DIR(0)="YA"
"RTN","RCDPLPL4",457,0)
 D ^DIR
"RTN","RCDPLPL4",458,0)
 K DIR
"RTN","RCDPLPL4",459,0)
 I $G(DTOUT)!$G(DUOUT) Q -1
"RTN","RCDPLPL4",460,0)
 Q Y
"RTN","RCDPLPL4",461,0)
 ;
"RTN","RCDPLPL4",462,0)
 ;Retrieve the review response question from the user
"RTN","RCDPLPL4",463,0)
GETANS1() ;
"RTN","RCDPLPL4",464,0)
 ;
"RTN","RCDPLPL4",465,0)
 N FLG,X,Y
"RTN","RCDPLPL4",466,0)
 S FLG=0,Y=0
"RTN","RCDPLPL4",467,0)
 F  D  Q:FLG=1
"RTN","RCDPLPL4",468,0)
 . R !,"Do you want to review the payment list before updating accounts (Y/N)? ",X:DTIME
"RTN","RCDPLPL4",469,0)
 . ;I $G(DTOUT) S FLG=1 Q    ;If it times out, treat it like a No and go to the next prompt.
"RTN","RCDPLPL4",470,0)
 . I X="" W !,"Enter Y or N to continue." Q
"RTN","RCDPLPL4",471,0)
 . I X["?" W !,"Select to Y to review the payments, N to skip the review." Q
"RTN","RCDPLPL4",472,0)
 . S X=$$UP^XLFSTR(X)
"RTN","RCDPLPL4",473,0)
 . I X="Y" S Y=1,FLG=1 Q
"RTN","RCDPLPL4",474,0)
 . I X="N" S Y=0,FLG=1 Q
"RTN","RCDPLPL4",475,0)
 . W !,"Select to Y to review the payments, N to skip the review."
"RTN","RCDPLPL4",476,0)
 Q Y
"RTN","RCDPLPL4",477,0)
 ;
"RTN","RCDPLPL4",478,0)
 ;Is the amount entered < the amount owed. (AR ACCOUNTS ONLY, NO DEBTORS)
"RTN","RCDPLPL4",479,0)
PAYCHK(RCACCT,RCAMT) ;
"RTN","RCDPLPL4",480,0)
 ;
"RTN","RCDPLPL4",481,0)
 N OWED,FLG
"RTN","RCDPLPL4",482,0)
 ;
"RTN","RCDPLPL4",483,0)
 S FLG=0
"RTN","RCDPLPL4",484,0)
 ; account is the debtor account. No need to check...
"RTN","RCDPLPL4",485,0)
 Q:RCACCT'["PRCA" 1
"RTN","RCDPLPL4",486,0)
 ;  calculate amount owed for a bill
"RTN","RCDPLPL4",487,0)
 S OWED=$G(^PRCA(430,+RCACCT,7))
"RTN","RCDPLPL4",488,0)
 S OWED=$P(OWED,"^")+$P(OWED,"^",2)+$P(OWED,"^",3)+$P(OWED,"^",4)+$P(OWED,"^",5)
"RTN","RCDPLPL4",489,0)
 I RCAMT>OWED W !,"The requested payment is greater than then amount owed please try again.",! Q FLG
"RTN","RCDPLPL4",490,0)
 S FLG=1
"RTN","RCDPLPL4",491,0)
 Q FLG
"RTN","RCDPLPS2")
0^5^B102212504
"RTN","RCDPLPS2",1,0)
RCDPLPS2 ;ALB/SAB - link payment tracking report ;5 Feb 2015
"RTN","RCDPLPS2",2,0)
 ;;4.5;Accounts Receivable;**304,326**;Feb 05, 2015;Build 26
"RTN","RCDPLPS2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPS2",4,0)
 Q
"RTN","RCDPLPS2",5,0)
 ;
"RTN","RCDPLPS2",6,0)
EN ;
"RTN","RCDPLPS2",7,0)
 ;
"RTN","RCDPLPS2",8,0)
 ;init variables
"RTN","RCDPLPS2",9,0)
 N %,RCBEGDT,RCENDFLG,RCENDDT,RCEXCEL,RCPT,RCRANGE,RCUSER
"RTN","RCDPLPS2",10,0)
 ;
"RTN","RCDPLPS2",11,0)
 ;Set initial values of report parameters
"RTN","RCDPLPS2",12,0)
 S RCBEGDT="",RCENDDT="",RCUSER="A",RCPT="",RCENDFLG=0
"RTN","RCDPLPS2",13,0)
 ;
"RTN","RCDPLPS2",14,0)
 ; PRCA*4.5*326 - Prompt for receipt number. Not required, so continue if not entered
"RTN","RCDPLPS2",15,0)
 S RCPT=$$RCPT()
"RTN","RCDPLPS2",16,0)
 I RCPT=-1 Q  ; Timed out or '^'
"RTN","RCDPLPS2",17,0)
 ;
"RTN","RCDPLPS2",18,0)
 I RCPT="" D  I RCENDFLG Q  ; PRCA*4.5*326 - Other prompts only needed if receipt was not selected
"RTN","RCDPLPS2",19,0)
 . ;get date range, quit if timed out or user wished to exit.
"RTN","RCDPLPS2",20,0)
 . S RCRANGE=$$DTRNG()
"RTN","RCDPLPS2",21,0)
 . I RCRANGE=0 S RCENDFLG=1 Q
"RTN","RCDPLPS2",22,0)
 . ;
"RTN","RCDPLPS2",23,0)
 . ;Extract begin and end date of report
"RTN","RCDPLPS2",24,0)
 . S RCBEGDT=$P(RCRANGE,U,2),RCENDDT=$P(RCRANGE,U,3)
"RTN","RCDPLPS2",25,0)
 . ;
"RTN","RCDPLPS2",26,0)
 . ;(Optional) get the AR Clerk to filter on.
"RTN","RCDPLPS2",27,0)
 . S RCUSER=$$USER()
"RTN","RCDPLPS2",28,0)
 . I RCUSER="" S RCENDFLG=1 Q
"RTN","RCDPLPS2",29,0)
 ;
"RTN","RCDPLPS2",30,0)
 ; PRCA*4.5*326 - Produce report for export to Microsoft Excel?
"RTN","RCDPLPS2",31,0)
 S RCEXCEL=$$DISPTY^RCDPRU() Q:+RCEXCEL=-1
"RTN","RCDPLPS2",32,0)
 I RCEXCEL D INFO^RCDPRU
"RTN","RCDPLPS2",33,0)
 ;
"RTN","RCDPLPS2",34,0)
 ; Parameter RCENDFLG is set if user exits
"RTN","RCDPLPS2",35,0)
 D REPORT(RCBEGDT,RCENDDT,RCUSER,RCPT,RCEXCEL,.RCENDFLG) ; PRCA*4.5*236 params RCPT, RCEXCEL and RCENDFLG
"RTN","RCDPLPS2",36,0)
 ;
"RTN","RCDPLPS2",37,0)
 I 'RCENDFLG R !,"Press RETURN to continue:",%:DTIME
"RTN","RCDPLPS2",38,0)
 Q
"RTN","RCDPLPS2",39,0)
 ;
"RTN","RCDPLPS2",40,0)
 ; Get the date range for the report
"RTN","RCDPLPS2",41,0)
DTRNG() ;
"RTN","RCDPLPS2",42,0)
 ;
"RTN","RCDPLPS2",43,0)
 ;Retrieve the date range 
"RTN","RCDPLPS2",44,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPLPS2",45,0)
 ;
"RTN","RCDPLPS2",46,0)
 ;format it for use in the report
"RTN","RCDPLPS2",47,0)
 Q:RCSTART=-1 0
"RTN","RCDPLPS2",48,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPLPS2",49,0)
 Q:'RCSTART "0^^"
"RTN","RCDPLPS2",50,0)
 Q 0
"RTN","RCDPLPS2",51,0)
 ;
"RTN","RCDPLPS2",52,0)
 ;Get start and end dates.  Default is Today for the End date and 45 days from end date for the beginning date
"RTN","RCDPLPS2",53,0)
DATES(RCBDATE,RCEDATE) ;
"RTN","RCDPLPS2",54,0)
 ;
"RTN","RCDPLPS2",55,0)
 N DIR,DUOUT,RNGFLG,X,Y,DTOUT,DIROUT,DIRUT,RCTODAY
"RTN","RCDPLPS2",56,0)
 ;
"RTN","RCDPLPS2",57,0)
 S RCTODAY=$$DT^XLFDT()
"RTN","RCDPLPS2",58,0)
 ; Get the End date first.  Assume the end date is today.
"RTN","RCDPLPS2",59,0)
 S RCBDATE=$$HTFM^XLFDT($$FMTH^XLFDT(RCTODAY)-45),RCEDATE=RCTODAY
"RTN","RCDPLPS2",60,0)
 ;
"RTN","RCDPLPS2",61,0)
 ;Get the start date.  
"RTN","RCDPLPS2",62,0)
 S DIR("?")="ENTER THE EARLIEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPLPS2",63,0)
 S DIR(0)="DAO^::APE",DIR("A")="START DATE: "
"RTN","RCDPLPS2",64,0)
 D ^DIR K DIR
"RTN","RCDPLPS2",65,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCBDATE=-1 Q
"RTN","RCDPLPS2",66,0)
 S RCBDATE=Y
"RTN","RCDPLPS2",67,0)
 ;
"RTN","RCDPLPS2",68,0)
 ;Get the end date
"RTN","RCDPLPS2",69,0)
 S DIR("?")="ENTER THE LATEST AUTO POSTING DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPLPS2",70,0)
 S DIR("B")=$$FMTE^XLFDT(RCTODAY,2)
"RTN","RCDPLPS2",71,0)
 S DIR(0)="DAO^"_RCBDATE_":"_RCTODAY_":APE",DIR("A")="END DATE: " D ^DIR K DIR
"RTN","RCDPLPS2",72,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCEDATE=-1 Q
"RTN","RCDPLPS2",73,0)
 S RCEDATE=Y
"RTN","RCDPLPS2",74,0)
 ;
"RTN","RCDPLPS2",75,0)
 Q
"RTN","RCDPLPS2",76,0)
 ;
"RTN","RCDPLPS2",77,0)
 ; Ask to see if the report needs to be by a specific user. Return the IEN if 
"RTN","RCDPLPS2",78,0)
USER() ;
"RTN","RCDPLPS2",79,0)
 ;
"RTN","RCDPLPS2",80,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND,DTOUT,DIRUT,DIROUT
"RTN","RCDPLPS2",81,0)
 ; All clerks or 1 clerk
"RTN","RCDPLPS2",82,0)
 S DIR("?")="Search on All AR Users (A), or a Single User (S)"
"RTN","RCDPLPS2",83,0)
 S DIR("B")="ALL"
"RTN","RCDPLPS2",84,0)
 S DIR(0)="SOA^S:Single User;A:All AR Users"
"RTN","RCDPLPS2",85,0)
 S DIR("A")="(S)ingle User or (A)ll Users? "
"RTN","RCDPLPS2",86,0)
 D ^DIR K DIR
"RTN","RCDPLPS2",87,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q ""
"RTN","RCDPLPS2",88,0)
 Q:Y="A" Y
"RTN","RCDPLPS2",89,0)
 ;
"RTN","RCDPLPS2",90,0)
 ;If a single clerk is needed, retrieve and return. 
"RTN","RCDPLPS2",91,0)
 Q $$ARCLERK
"RTN","RCDPLPS2",92,0)
 ;
"RTN","RCDPLPS2",93,0)
 ; Get the AR Clerk
"RTN","RCDPLPS2",94,0)
ARCLERK() ;
"RTN","RCDPLPS2",95,0)
 ;
"RTN","RCDPLPS2",96,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND,DTOUT,DIRUT,DIROUT
"RTN","RCDPLPS2",97,0)
 ;
"RTN","RCDPLPS2",98,0)
 S DIR("?")="ENTER AN AR USER TO SEARCH TRANSACTIONS FOR"
"RTN","RCDPLPS2",99,0)
 S DIR(0)="PA^VA(200,:AEMQ",DIR("A")="AR USER? " D ^DIR K DIR
"RTN","RCDPLPS2",100,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q ""
"RTN","RCDPLPS2",101,0)
 Q +Y
"RTN","RCDPLPS2",102,0)
 ;
"RTN","RCDPLPS2",103,0)
 ; PRCA*4.5*326 - added subroutine RCPT
"RTN","RCDPLPS2",104,0)
RCPT() ; Prompt user for single receipt number for which to display entries
"RTN","RCDPLPS2",105,0)
 N D,DIC,DTOUT,DUOUT,RETURN,X,Y
"RTN","RCDPLPS2",106,0)
 S RETURN=""
"RTN","RCDPLPS2",107,0)
 S DIC="^RCY(344,"
"RTN","RCDPLPS2",108,0)
 S DIC(0)="AEQ"
"RTN","RCDPLPS2",109,0)
 S DIC("A")="RECEIPT NUMBER: "
"RTN","RCDPLPS2",110,0)
 S DIC("S")="I $D(^RCY(344.71,""D"",$P(^(0),U,1)))"
"RTN","RCDPLPS2",111,0)
 D ^DIC
"RTN","RCDPLPS2",112,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPLPS2",113,0)
 I Y'=-1 S RETURN=$P(Y,U,2)
"RTN","RCDPLPS2",114,0)
 Q RETURN
"RTN","RCDPLPS2",115,0)
 ;
"RTN","RCDPLPS2",116,0)
REPORT(RCBEGDT,RCENDDT,RCUSER,RCPT,RCEXCEL,RCENDFLG) ;  report to show link payment audit log in FMS
"RTN","RCDPLPS2",117,0)
 N %ZIS,POP,RCDISP
"RTN","RCDPLPS2",118,0)
 ;
"RTN","RCDPLPS2",119,0)
 ;Select output device
"RTN","RCDPLPS2",120,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPLPS2",121,0)
 ;
"RTN","RCDPLPS2",122,0)
 ;Option to queue
"RTN","RCDPLPS2",123,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPLPS2",124,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPLPS2",125,0)
 .S ZTRTN="DQ^RCDPLPS2"
"RTN","RCDPLPS2",126,0)
 .S ZTDESC="EDI LOCKBOX LINK PAYMENT AUDIT LOG REPORT"
"RTN","RCDPLPS2",127,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPLPS2",128,0)
 .D ^%ZTLOAD
"RTN","RCDPLPS2",129,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPLPS2",130,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPLPS2",131,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPLPS2",132,0)
 ;
"RTN","RCDPLPS2",133,0)
 D DQ
"RTN","RCDPLPS2",134,0)
 ;
"RTN","RCDPLPS2",135,0)
 Q
"RTN","RCDPLPS2",136,0)
 ;
"RTN","RCDPLPS2",137,0)
 ;  report (queue) starts here
"RTN","RCDPLPS2",138,0)
DQ ;
"RTN","RCDPLPS2",139,0)
 N %,PAGE,RCDATE,RCDTDIS1,RCDTDIS2,RCENTRY,RCMFST,RCMULT,RCRJFLAG,RCRJLINE,RCNOW,SCREEN,Y ; PRCA*4.5*326
"RTN","RCDPLPS2",140,0)
 ;
"RTN","RCDPLPS2",141,0)
 K ^TMP("RCDPLPS2",$J)
"RTN","RCDPLPS2",142,0)
 S RCCT=0
"RTN","RCDPLPS2",143,0)
 ; PRCA*4.5*326 - Begin changes
"RTN","RCDPLPS2",144,0)
 ; If report is for a single receipt use the "D" cross reference
"RTN","RCDPLPS2",145,0)
 I RCPT'="" D  ;
"RTN","RCDPLPS2",146,0)
 . S RCENTRY=0
"RTN","RCDPLPS2",147,0)
 . F  S RCENTRY=$O(^RCY(344.71,"D",RCPT,RCENTRY)) Q:'RCENTRY  D  ;
"RTN","RCDPLPS2",148,0)
 . . D EXTRACT(RCENTRY,.RCCT)
"RTN","RCDPLPS2",149,0)
 ;
"RTN","RCDPLPS2",150,0)
 E  D  ;
"RTN","RCDPLPS2",151,0)
 . ; Gather the data using the Date cross-reference, starting with the Begin date
"RTN","RCDPLPS2",152,0)
 . ; Also make sure to gather all entries from the end date.
"RTN","RCDPLPS2",153,0)
 . ;
"RTN","RCDPLPS2",154,0)
 . S RCDATE=RCBEGDT,RCENDDT=RCENDDT+.999999
"RTN","RCDPLPS2",155,0)
 . F  S RCDATE=$O(^RCY(344.71,"B",RCDATE)) Q:'RCDATE  Q:RCDATE>RCENDDT  D
"RTN","RCDPLPS2",156,0)
 . . S RCENTRY=0
"RTN","RCDPLPS2",157,0)
 . . F  S RCENTRY=$O(^RCY(344.71,"B",RCDATE,RCENTRY)) Q:'RCENTRY  D
"RTN","RCDPLPS2",158,0)
 . . . D EXTRACT(RCENTRY,.RCCT)
"RTN","RCDPLPS2",159,0)
 ; PRCA*4.5*326 - End changes
"RTN","RCDPLPS2",160,0)
 ;
"RTN","RCDPLPS2",161,0)
 ;  print report
"RTN","RCDPLPS2",162,0)
 S Y=$P(RCBEGDT,".") D DD^%DT S RCDTDIS1=Y
"RTN","RCDPLPS2",163,0)
 S Y=$P(RCENDDT,".") D DD^%DT S RCDTDIS2=Y
"RTN","RCDPLPS2",164,0)
 D NOW^%DTC S Y=% D DD^%DT S RCNOW=Y
"RTN","RCDPLPS2",165,0)
 S PAGE=1,RCRJLINE="",$P(RCRJLINE,"-",81)=""
"RTN","RCDPLPS2",166,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPLPS2",167,0)
 U IO D H
"RTN","RCDPLPS2",168,0)
 S RCDATE=0
"RTN","RCDPLPS2",169,0)
 F  S RCDATE=$O(^TMP("RCDPLPS2",$J,RCDATE)) Q:'RCDATE!($G(RCRJFLAG))  D
"RTN","RCDPLPS2",170,0)
 . S RCCT=0
"RTN","RCDPLPS2",171,0)
 . F  S RCCT=$O(^TMP("RCDPLPS2",$J,RCDATE,RCCT)) Q:'RCCT!($G(RCRJFLAG))  D
"RTN","RCDPLPS2",172,0)
 . . S RCDATA=$G(^TMP("RCDPLPS2",$J,RCDATE,RCCT))
"RTN","RCDPLPS2",173,0)
 . . ; PRCA*4.5*326 - Export in Excel format if requested
"RTN","RCDPLPS2",174,0)
 . . S RCMULT=$S($P(RCDATA,U,8)="Multi-Trans Split":1,1:0) ; #344.711 change - PRCA*4.5*326
"RTN","RCDPLPS2",175,0)
 . . S RCMFST=+$G(^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S")) ; #344.711 change - PRCA*4.5*326
"RTN","RCDPLPS2",176,0)
 . . I RCMULT,'RCMFST Q  ; #344.711 change - PRCA*4.5*326
"RTN","RCDPLPS2",177,0)
 . . I RCEXCEL D  ;
"RTN","RCDPLPS2",178,0)
 . . . W $P(RCDATA,U,3)_U_$P(RCDATA,U,4)_U_$P(RCDATA,U)_U_$P(RCDATA,"^",5)_U_$P(RCDATA,U,6)_U
"RTN","RCDPLPS2",179,0)
 . . . W $P(RCDATA,U,2)_U_$P(RCDATA,U,7)_U_$P(RCDATA,U,8),!
"RTN","RCDPLPS2",180,0)
 . . . ; BEGIN #344.711 - PRCA*4.5*326
"RTN","RCDPLPS2",181,0)
 . . . Q:'RCMULT
"RTN","RCDPLPS2",182,0)
 . . . S RCSPL=0
"RTN","RCDPLPS2",183,0)
 . . . F  S RCSPL=$O(^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S",RCSPL)) Q:'RCSPL  D  Q:$G(RCRJFLAG)
"RTN","RCDPLPS2",184,0)
 . . . . S RCDATA=$G(^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S",RCSPL)) Q:RCDATA=""
"RTN","RCDPLPS2",185,0)
 . . . . W "^^^^^^^^"_$P(RCDATA,U)_U_$P(RCDATA,U,2)_U_$P(RCDATA,U,3),!
"RTN","RCDPLPS2",186,0)
 . . . ; END #344.711 - PRCA*4.5*326
"RTN","RCDPLPS2",187,0)
 . . ; Print in report format if Excel not requested
"RTN","RCDPLPS2",188,0)
 . . E  D  ;
"RTN","RCDPLPS2",189,0)
 . . . I 'RCMULT W $P(RCDATA,U,3),?15,$P(RCDATA,U,4),?22,$P(RCDATA,U),?32,$J($P(RCDATA,"^",5),10,2)
"RTN","RCDPLPS2",190,0)
 . . . E  W $P(RCDATA,U,3),?22,$P(RCDATA,U),?32,$J(RCMFST,10,2)
"RTN","RCDPLPS2",191,0)
 . . . ; BEGIN #344.711 - PRCA*4.5*326
"RTN","RCDPLPS2",192,0)
 . . . W ?43,$P(RCDATA,U,6),?51,$P(RCDATA,U,2),?56,$E($P(RCDATA,U,7),1,11)
"RTN","RCDPLPS2",193,0)
 . . . I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPLPS2",194,0)
 . . . W:$P(RCDATA,U,8)]"" !,?5,$P(RCDATA,U,8)
"RTN","RCDPLPS2",195,0)
 . . . W !
"RTN","RCDPLPS2",196,0)
 . . . I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPLPS2",197,0)
 . . . Q:'RCMULT
"RTN","RCDPLPS2",198,0)
 . . . S RCSPL=0
"RTN","RCDPLPS2",199,0)
 . . . F  S RCSPL=$O(^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S",RCSPL)) Q:'RCSPL  D  Q:$G(RCRJFLAG)
"RTN","RCDPLPS2",200,0)
 . . . . S RCDATA=$G(^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S",RCSPL)) Q:RCDATA=""
"RTN","RCDPLPS2",201,0)
 . . . . W ?18,$P(RCDATA,U),?26,$J("$"_$J($P(RCDATA,U,2),0,2),10),?38,$E($P(RCDATA,U,3),1,40),!
"RTN","RCDPLPS2",202,0)
 . . . . I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPLPS2",203,0)
 . . . ; END #344.711 - PRCA*4.5*326
"RTN","RCDPLPS2",204,0)
 ; PRCA*4.5*326 - End changes
"RTN","RCDPLPS2",205,0)
 ;
"RTN","RCDPLPS2",206,0)
 K ^TMP("RCDPLPS2",$J)
"RTN","RCDPLPS2",207,0)
 D ^%ZISC
"RTN","RCDPLPS2",208,0)
 S:$G(RCRJFLAG) RCENDFLG=1
"RTN","RCDPLPS2",209,0)
 I 'RCENDFLG,'RCEXCEL W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPLPS2",210,0)
 Q
"RTN","RCDPLPS2",211,0)
 ;
"RTN","RCDPLPS2",212,0)
 ; PRCA*4.5*326 - Add subroutine EXTRACT
"RTN","RCDPLPS2",213,0)
EXTRACT(RCENTRY,RCCT) ; Extract and store data for a single suspense audit file entry
"RTN","RCDPLPS2",214,0)
 ; Input: RCENTRY = IEN of SUSPENSE AUDIT FILE entry (#344.71)
"RTN","RCDPLPS2",215,0)
 ; Output: ^TMP("RCDPLPS2",$J) containing report data
"RTN","RCDPLPS2",216,0)
 ;
"RTN","RCDPLPS2",217,0)
 N RCAMT,RCDATE,RCDATA,RCEOB,RCFLG,RCLUSER,RCRECTDA,RCREASON,RCSTATUS,RCTRANDA,RCX,RCX,RCX2,RCY,Y
"RTN","RCDPLPS2",218,0)
 ;
"RTN","RCDPLPS2",219,0)
 S RCDATA=$G(^RCY(344.71,RCENTRY,0))
"RTN","RCDPLPS2",220,0)
 ;
"RTN","RCDPLPS2",221,0)
 ;Quit if corrupt index entry
"RTN","RCDPLPS2",222,0)
 Q:RCDATA=""
"RTN","RCDPLPS2",223,0)
 ;
"RTN","RCDPLPS2",224,0)
 ;Get the user.  If filtering on user, quit if the user is not the filter user.
"RTN","RCDPLPS2",225,0)
 S RCLUSER=$P(RCDATA,U,2)
"RTN","RCDPLPS2",226,0)
 I RCUSER["",RCUSER'="A",RCUSER'=RCLUSER Q
"RTN","RCDPLPS2",227,0)
 ;
"RTN","RCDPLPS2",228,0)
 ;Update the counter
"RTN","RCDPLPS2",229,0)
 S RCCT=RCCT+1
"RTN","RCDPLPS2",230,0)
 ;
"RTN","RCDPLPS2",231,0)
 ;get the rest of the data
"RTN","RCDPLPS2",232,0)
 S RCDATE=$P(RCDATA,U,1)   ;Date/Time of suspese entry
"RTN","RCDPLPS2",233,0)
 S RCRECTDA=$P(RCDATA,U,3)    ;Receipt Number
"RTN","RCDPLPS2",234,0)
 S RCTRANDA=$P(RCDATA,U,4)    ;Receipt Transaction Number
"RTN","RCDPLPS2",235,0)
 S RCAMT=$P(RCDATA,U,5)       ;Amount originally placed in suspense
"RTN","RCDPLPS2",236,0)
 S RCEOB=""
"RTN","RCDPLPS2",237,0)
 S:$P(RCDATA,U,6)[";PRCA" RCEOB=$P($$GET1^DIQ(430,$P($P(RCDATA,U,6),";")_",",".01","E"),"-",2)  ;Claim #
"RTN","RCDPLPS2",238,0)
 S:$P(RCDATA,U,6)[";DPT" RCEOB=$E($$GET1^DIQ(2,$P($P(RCDATA,U,6),";")_",",".01","E"),1,7)       ;Pat Name
"RTN","RCDPLPS2",239,0)
 S RCSTATUS=$$GET1^DIQ(344.71,RCENTRY_",",".07","E")  ;Suspense Status
"RTN","RCDPLPS2",240,0)
 S RCREASON=$P(RCDATA,U,8)    ;Reason for Suspense Status
"RTN","RCDPLPS2",241,0)
 ;
"RTN","RCDPLPS2",242,0)
 S RCFLG=$G(^TMP("RCDPLPS2",$J,"IDX",RCRECTDA,RCTRANDA))
"RTN","RCDPLPS2",243,0)
 ;Store in the temporary array
"RTN","RCDPLPS2",244,0)
 S:RCFLG="" ^TMP("RCDPLPS2",$J,"IDX",RCRECTDA,RCTRANDA)=RCCT_"~"_RCDATE
"RTN","RCDPLPS2",245,0)
 I RCFLG'="" D
"RTN","RCDPLPS2",246,0)
 . S RCX=$P(RCFLG,U),RCX2=$P(RCX,"~",2),RCX=$P(RCX,"~"),RCY=$P(RCFLG,U,2)
"RTN","RCDPLPS2",247,0)
 . I (RCY=""),(RCREASON="Multi-Trans Split") D
"RTN","RCDPLPS2",248,0)
 . . S $P(^TMP("RCDPLPS2",$J,"IDX",RCRECTDA,RCTRANDA),U,2)=1
"RTN","RCDPLPS2",249,0)
 . . K ^TMP("RCDPLPS2",$J,RCX2,RCX)
"RTN","RCDPLPS2",250,0)
 S ^TMP("RCDPLPS2",$J,RCDATE,RCCT)=$$FMTE^XLFDT(RCDATE,"2D")_U_$$USERINIT^RCDPLPS1(RCLUSER)_U_RCRECTDA_U_RCTRANDA_U_RCAMT_U_RCEOB_U_RCSTATUS_U_RCREASON
"RTN","RCDPLPS2",251,0)
 ; BEGIN #344.711 change - PRCA*4.5*326
"RTN","RCDPLPS2",252,0)
 N IENS,RCCAMT,RCCLAIM,RCCOM,RCSPL
"RTN","RCDPLPS2",253,0)
 S RCSPL=0,^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S")=0
"RTN","RCDPLPS2",254,0)
 F  S RCSPL=$O(^RCY(344.71,RCENTRY,1,RCSPL)) Q:'RCSPL  D
"RTN","RCDPLPS2",255,0)
 . S IENS=RCSPL_","_RCENTRY_","
"RTN","RCDPLPS2",256,0)
 . S RCCLAIM=$$GET1^DIQ(344.711,IENS,.02)
"RTN","RCDPLPS2",257,0)
 . S RCCAMT=$$GET1^DIQ(344.711,IENS,.03)
"RTN","RCDPLPS2",258,0)
 . S RCCOM=$$GET1^DIQ(344.711,IENS,.04)
"RTN","RCDPLPS2",259,0)
 . S ^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S",RCSPL)=RCCLAIM_U_RCCAMT_U_RCCOM
"RTN","RCDPLPS2",260,0)
 . S ^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S")=^TMP("RCDPLPS2",$J,RCDATE,RCCT,"S")+RCCAMT
"RTN","RCDPLPS2",261,0)
 ; END #344.711 - PRCA*4.5*326
"RTN","RCDPLPS2",262,0)
 Q
"RTN","RCDPLPS2",263,0)
H ;  header
"RTN","RCDPLPS2",264,0)
 N %
"RTN","RCDPLPS2",265,0)
 I RCEXCEL D  Q  ; PRCA*4.5*321 - Header for EXCEL format
"RTN","RCDPLPS2",266,0)
 . W !,"RECEIPT#^TRANSACTION^DATE^AMOUNT^CLAIM^USER^DISPOSITION^REASON^CLAIMS^AMOUNT^COMMENT",! ; #344.711 - PRCA*4.5*326
"RTN","RCDPLPS2",267,0)
 ;
"RTN","RCDPLPS2",268,0)
 S %=RCNOW_"  PAGE "_PAGE,PAGE=PAGE+1 I PAGE'=2!(SCREEN) W @IOF
"RTN","RCDPLPS2",269,0)
 W $C(13),"LINK PAYMENT TRACKING REPORT",?50,%
"RTN","RCDPLPS2",270,0)
 W !,"  FOR THE DATE RANGE: ",$S(RCPT="":RCDTDIS1_"  TO  "_RCDTDIS2,1:"")
"RTN","RCDPLPS2",271,0)
 I RCPT="" D  ;
"RTN","RCDPLPS2",272,0)
 . W ?55,"FOR USER(S): ",$E($S(RCUSER="A":"ALL",1:$$GET1^DIQ(200,RCUSER_",",.01,"E")),1,10)
"RTN","RCDPLPS2",273,0)
 E  D  ; PRCA*4.5*321 - display receipt number in header if selected
"RTN","RCDPLPS2",274,0)
 . W ?55,"RECEIPT#: "_RCPT
"RTN","RCDPLPS2",275,0)
 W !,"RECEIPT#",?15,"TRANS#",?22,"DATE",?36,"AMOUNT",?43,"CLAIM",?51,"USER",?56,"DISPOSITION" ; #344.71 - PRCA*4.5*326
"RTN","RCDPLPS2",276,0)
 W !,?5,"REASON",?18,"CLAIMS" ; #344.71 - PRCA*4.5*326
"RTN","RCDPLPS2",277,0)
 W !,RCRJLINE,!
"RTN","RCDPLPS2",278,0)
 Q
"RTN","RCDPLPS2",279,0)
 ;
"RTN","RCDPPLB")
0^70^B211841359
"RTN","RCDPPLB",1,0)
RCDPPLB ;ALB/TJB - ERA/PROVIDER LEVEL ADJUSTMENTS REPORT ;1/02/15 10:00am
"RTN","RCDPPLB",2,0)
 ;;4.5;Accounts Receivable;**303,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPPLB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPPLB",4,0)
 Q
"RTN","RCDPPLB",5,0)
 ; PRCA*4.5*303 - ERA/PROVIDER LEVEL ADJUSTMENTS REPORT 
"RTN","RCDPPLB",6,0)
 ;
"RTN","RCDPPLB",7,0)
 ; DESCRIPTION : The following generates a report to display ERA data with PLB
"RTN","RCDPPLB",8,0)
 ;     data details. The report is ad-hoc and allow the user to extract report
"RTN","RCDPPLB",9,0)
 ;     data, as well as view and manage refund requests for all PLB adjustment
"RTN","RCDPPLB",10,0)
 ;     codes (FB, WO, 72, IR, J1, L6, CS, WU, etc.):
"RTN","RCDPPLB",11,0)
 ;
"RTN","RCDPPLB",12,0)
EN ; Entry point for Report
"RTN","RCDPPLB",13,0)
 N %ZIS,CD,CRHDR,CZ,DIVHDR,DUOUT,DTOUT,DIR,DTOK,DL,DX0,EXLN,FILE,I,IEN,IDX,IX,JJ,KK,PCT,POP,PY,R,RCCD,RCODE
"RTN","RCDPPLB",14,0)
 N RCDET,RCDISP,RCDONE,RCDT1,RCDT2,RCDET,RCDONE,RCEXCEL,RCHR,RCJOB,RCPG,RCTLIST,RCRD,RCNOW,RCPAR,RCLPAY,RCPAYS
"RTN","RCDPPLB",15,0)
 N RCQUIT,RCSORT,RCSTOP,RCSTAT,RCTIN,RCTYPE,RCWHICH
"RTN","RCDPPLB",16,0)
 N TY,X,XX,XCNT,Y,Z,ZN,ZPPY,ZPY,ZTDESC,ZTRTN,ZTSAVE,ZTSK,ZTSTOP,ZZ,ZZPNAME
"RTN","RCDPPLB",17,0)
 S RCQUIT=0,RCODE="" ; Global variable to signal exit
"RTN","RCDPPLB",18,0)
 ;
"RTN","RCDPPLB",19,0)
 ; ICR 1077 - Get division/station
"RTN","RCDPPLB",20,0)
 D DIVISION^VAUTOMA
"RTN","RCDPPLB",21,0)
 I 'VAUTD&($D(VAUTD)'=11) G PLBQ
"RTN","RCDPPLB",22,0)
 S DIR("A")="(S)ummary or(D)etail Report format? ",DIR(0)="SA^S:Summary Information only;D:Detail and Totals"
"RTN","RCDPPLB",23,0)
 S DIR("B")="SUMMARY" D ^DIR K DIR
"RTN","RCDPPLB",24,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G PLBQ
"RTN","RCDPPLB",25,0)
 S RCDET=(Y="D")
"RTN","RCDPPLB",26,0)
 ;
"RTN","RCDPPLB",27,0)
 ; Get PLB Codes for report
"RTN","RCDPPLB",28,0)
 D PLBC(.RCODE) G:$G(RCODE)']"" PLBQ
"RTN","RCDPPLB",29,0)
 ;
"RTN","RCDPPLB",30,0)
 S RCTYPE=$$RTYPE^RCDPEU1() G:RCTYPE=-1 PLBQ     ; PRCA*4.5*326 - Add Tricare filter to Med/Pharm/Both
"RTN","RCDPPLB",31,0)
 S RCWHICH=$$NMORTIN^RCDPEAPP() Q:RCWHICH=-1     ; PRCA*4.5*326 - Filter by Payer Name or TIN
"RTN","RCDPPLB",32,0)
 ;
"RTN","RCDPPLB",33,0)
 S RCPAR("SELC")=$$PAYRNG^RCDPEU1(0,1,RCWHICH)   ; PRCA*4.5*326 - Selected or Range of Payers
"RTN","RCDPPLB",34,0)
 G:RCPAR("SELC")=-1 PLBQ                         ; PRCA*4.5*326 '^' or timeout
"RTN","RCDPPLB",35,0)
 S RCPAYS=RCPAR("SELC")
"RTN","RCDPPLB",36,0)
 ;
"RTN","RCDPPLB",37,0)
 I RCPAR("SELC")'="A" D  G:XX=-1 PLBQ            ; PRCA*4.5*326 - Since we don't want all payers 
"RTN","RCDPPLB",38,0)
 . S RCPAR("TYPE")=RCTYPE                        ;         prompt for payers we do want
"RTN","RCDPPLB",39,0)
 . S RCPAR("SRCH")=$S(RCWHICH=2:"T",1:"N")
"RTN","RCDPPLB",40,0)
 . S RCPAR("FILE")=344.4
"RTN","RCDPPLB",41,0)
 . S RCPAR("DICA")="Select Insurance Company"_$S(RCWHICH=1:" NAME: ",1:" TIN: ")
"RTN","RCDPPLB",42,0)
 . S XX=$$SELPAY^RCDPEU1(.RCPAR)
"RTN","RCDPPLB",43,0)
 ;
"RTN","RCDPPLB",44,0)
 S DIR("A")="Sort Report (C)odes or (P)ayer?: ",DIR(0)="SA^C:PLB Codes;P:Payer Name;CODES:PLB Codes"
"RTN","RCDPPLB",45,0)
 S DIR("B")="CODES" D ^DIR K DIR
"RTN","RCDPPLB",46,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G PLBQ
"RTN","RCDPPLB",47,0)
 S RCSORT=$E(Y,1)
"RTN","RCDPPLB",48,0)
 ;
"RTN","RCDPPLB",49,0)
 S DIR("?")="Enter the Beginning date for the report"
"RTN","RCDPPLB",50,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: ",DIR("B")="T" D ^DIR K DIR
"RTN","RCDPPLB",51,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G PLBQ
"RTN","RCDPPLB",52,0)
 S RCDT1=Y
"RTN","RCDPPLB",53,0)
 S DIR("?")="Enter the end date for the report"
"RTN","RCDPPLB",54,0)
 S DIR("B")="T"
"RTN","RCDPPLB",55,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="End Date: " D ^DIR K DIR
"RTN","RCDPPLB",56,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G PLBQ
"RTN","RCDPPLB",57,0)
 S RCDT2=Y
"RTN","RCDPPLB",58,0)
 S DTOK=$$CHECKDT^RCDPRU(RCDT1,RCDT2,344.4)
"RTN","RCDPPLB",59,0)
 I 'DTOK W !!,"*** Note: Date Range "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2)," ***",! W "*** No Records found ***",! D ASK^RCDPRU(.RCQUIT) G PLBQ
"RTN","RCDPPLB",60,0)
 ; Removed Excel per Susan on 03/24/2015 meeting
"RTN","RCDPPLB",61,0)
 ; Get input to export to excel.
"RTN","RCDPPLB",62,0)
 S RCEXCEL=""
"RTN","RCDPPLB",63,0)
 ;S RCEXCEL=$$DISPTY^RCDPRU()
"RTN","RCDPPLB",64,0)
 ;D:RCEXCEL INFO^RCDPRU
"RTN","RCDPPLB",65,0)
 ;
"RTN","RCDPPLB",66,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPPLB",67,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPPLB",68,0)
 . S ZTRTN="ENQ^RCDPPLB",ZTDESC="AR - 835 Provider Adjustment & Payer Data Report"
"RTN","RCDPPLB",69,0)
 . S ZTSAVE("*")=""
"RTN","RCDPPLB",70,0)
 . S ZTSAVE("^TMP(""RCDPEU1"",$J,")=""
"RTN","RCDPPLB",71,0)
 . D ^%ZTLOAD
"RTN","RCDPPLB",72,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPPLB",73,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPPLB",74,0)
 U IO
"RTN","RCDPPLB",75,0)
 ;
"RTN","RCDPPLB",76,0)
ENQ ; Start here for queued report
"RTN","RCDPPLB",77,0)
 S RCNOW=$$NOW^RCDPRU(),RCPG=0,$P(RCHR,"=",IOM)=""
"RTN","RCDPPLB",78,0)
 ;
"RTN","RCDPPLB",79,0)
 K ^TMP("RCDPPLB_REPORT",$J)
"RTN","RCDPPLB",80,0)
 ; Collect the data and put it into the ^TMP global
"RTN","RCDPPLB",81,0)
 D GETDATA($G(RCODE),RCPAYS,RCTYPE,$G(RCSORT),RCDT1,RCDT2,$NA(^TMP("RCDPPLB_REPORT",$J)),.VAUTD)
"RTN","RCDPPLB",82,0)
 ;
"RTN","RCDPPLB",83,0)
REPORT ; Print out the report
"RTN","RCDPPLB",84,0)
 ; Set up Division Header Text and PLB Code Header Text
"RTN","RCDPPLB",85,0)
 S RCSL=0
"RTN","RCDPPLB",86,0)
 S:VAUTD=1 DIVHDR="ALL" D:VAUTD=0
"RTN","RCDPPLB",87,0)
 . N I S DIVHDR="",I="" F  S I=$O(VAUTD(I)) Q:I=""  S:DIVHDR'="" DIVHDR=DIVHDR_", "_VAUTD(I) S:DIVHDR="" DIVHDR=VAUTD(I)
"RTN","RCDPPLB",88,0)
 S CRHDR=RCODE
"RTN","RCDPPLB",89,0)
 ; Trim information so it will fit on an 80 or IOM character line
"RTN","RCDPPLB",90,0)
 D:($L(DIVHDR)+$L(CRHDR))>(IOM-25)
"RTN","RCDPPLB",91,0)
 . N VAL,DH,CH,R1,R2 S DH=0,CH=0,R1=0,R2=0,VAL=(IOM-25)\2 ; get half of the screen length
"RTN","RCDPPLB",92,0)
 . S:$L(DIVHDR)>VAL DH=1 S:$L(CRHDR)>VAL CH=1 S:DH=0 R1=VAL-$L(DIVHDR) S:CH=0 R2=VAL-$L(CRHDR)
"RTN","RCDPPLB",93,0)
 . I $L(DIVHDR)>(VAL+R2) S DIVHDR=$E(DIVHDR,1,(VAL+R2))_"..."
"RTN","RCDPPLB",94,0)
 . I $L(CRHDR)>(VAL+R1) S CRHDR=$E(CRHDR,1,(VAL+R2))_"..."
"RTN","RCDPPLB",95,0)
 ;
"RTN","RCDPPLB",96,0)
 I 'RCEXCEL D
"RTN","RCDPPLB",97,0)
 . S RCSTOP=$$NEWPG(.RCPG,1,.RCSL,RCSORT) ; PRCA*4.5*326 - use $$NEWPG for first header
"RTN","RCDPPLB",98,0)
 E  D
"RTN","RCDPPLB",99,0)
 . ; Excel Report
"RTN","RCDPPLB",100,0)
 . W "CODE^PAYER^TIN^REP_DATE^AMOUNT",!
"RTN","RCDPPLB",101,0)
 ;
"RTN","RCDPPLB",102,0)
 S $P(ZLN,"-",80)="",$P(ZDLN,"=",80)="",$P(ZLN2,"-",78)="",ZLN2="  "_ZLN2,RCSL=7
"RTN","RCDPPLB",103,0)
 ; Do Grand totals first - per Susan 7/16/2015
"RTN","RCDPPLB",104,0)
 S DX0=$G(^TMP("RCDPPLB_REPORT",$J,"TOTALS")),PCT=0
"RTN","RCDPPLB",105,0)
 S:+$P(DX0,U,5)'=0 PCT=$J(($P(DX0,U,1)/$P(DX0,U,5))*100,3,0)
"RTN","RCDPPLB",106,0)
 S:+$P(DX0,U,5)=0 PCT="ERR"
"RTN","RCDPPLB",107,0)
 I RCSL>=(IOSL-4) S RCQUIT=$$NEWPG(.RCPG,1,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",108,0)
 W ! S RCSL=RCSL+1
"RTN","RCDPPLB",109,0)
 W "GRAND TOTALS FOR ALL PLB CODES & PAYERS ON REPORT",! S RCSL=RCSL+1
"RTN","RCDPPLB",110,0)
 W "   TOTAL #ERAs:  ",$J($P(DX0,U,3),6,0),"  ADJ: ",PCT,"% [TOT AMT ADJUSTED / TOT AMT BILLED]",! S RCSL=RCSL+1
"RTN","RCDPPLB",111,0)
 W "   AMT ADJUST: $",$J($P(DX0,U,1),11,2),"  AMT BILLED: $",$J($P(DX0,U,5),11,2),"  AMT PAID: $",$J($P(DX0,U,2),11,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",112,0)
 W !,ZDLN,!! S RCSL=RCSL+1
"RTN","RCDPPLB",113,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) G:RCQUIT PLBQ
"RTN","RCDPPLB",114,0)
 ;
"RTN","RCDPPLB",115,0)
 S ZZ="" F  S ZZ=$O(^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ)) Q:ZZ=""  S ZDAT=^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ) D  Q:RCQUIT
"RTN","RCDPPLB",116,0)
 . D:RCSORT="C"  Q:RCQUIT
"RTN","RCDPPLB",117,0)
 .. W "ADJ CODE: ",ZZ,"  # ERAs: ",$J($P(ZDAT,U,3),5),"  ADJ: ",$S(+$P(ZDAT,U,5)>0:$J((($P(ZDAT,U,1)/$P(ZDAT,U,5))*100),3,0),1:"ERR"),"% [TOT AMT ADJUSTED / TOT AMT BILLED]",! S RCSL=RCSL+1
"RTN","RCDPPLB",118,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",119,0)
 .. W "   AMT ADJUST: ",$J($P(ZDAT,U,1),8,2),"  AMT BILLED: ",$J($P(ZDAT,U,5),9,2),"  AMT PAID: ",$J($P(ZDAT,U,2),9,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",120,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",121,0)
 .. W "ADJ CODE TEXT: ",$P(ZDAT,U,4),! S RCSL=RCSL+1
"RTN","RCDPPLB",122,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",123,0)
 .. W ZLN,! S RCSL=RCSL+1
"RTN","RCDPPLB",124,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",125,0)
 .. S PY="",CZ=0 F  S PY=$O(^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ,PY)) Q:PY=""  S ZPY=^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ,PY) D  Q:RCQUIT  S CZ=CZ+1
"RTN","RCDPPLB",126,0)
 ... S:+($P(ZPY,U,5))'=0 ZPPY=$J((($P(ZPY,U,1)/$P(ZPY,U,5))*100),3,0)
"RTN","RCDPPLB",127,0)
 ... S:+($P(ZPY,U,5))=0 ZPPY="ERR"
"RTN","RCDPPLB",128,0)
 ... I CZ>0 W ZLN2,! S RCSL=RCSL+1
"RTN","RCDPPLB",129,0)
 ... W " PAYER NAME/TIN",!
"RTN","RCDPPLB",130,0)
 ... S RCSL=RCSL+1
"RTN","RCDPPLB",131,0)
 ... W " ",$$PAYTIN^RCDPRU2(PY,76),! ; PRCA*4.5*321
"RTN","RCDPPLB",132,0)
 ... S RCSL=RCSL+1                   ; PRCA*4.5*321
"RTN","RCDPPLB",133,0)
 ... I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",134,0)
 ... W "  #ERAs: ",$J($P(ZPY,U,3),4),"  ADJ: ",ZPPY,"% [ADJ: ",$J($P(ZPY,U,1),8,2),"/ BILLED: ",$J($P(ZPY,U,5),9,2),"] PAID: ",$J($P(ZPY,U,2),9,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",135,0)
 ... D:RCDET DETAIL(RCSORT,ZZ,PY,$NA(^TMP("RCDPPLB_REPORT",$J))) Q:RCQUIT
"RTN","RCDPPLB",136,0)
 .. W:'RCQUIT ZLN,! S RCSL=RCSL+1
"RTN","RCDPPLB",137,0)
 . D:RCSORT="P"  Q:RCQUIT
"RTN","RCDPPLB",138,0)
 .. W " PAYER NAME/TIN",!
"RTN","RCDPPLB",139,0)
 .. S RCSL=RCSL+1
"RTN","RCDPPLB",140,0)
 .. W " ",$$PAYTIN^RCDPRU2(ZZ,76),! ; PRCA*4.5*321
"RTN","RCDPPLB",141,0)
 .. S RCSL=RCSL+1                   ; PRCA*4.5*321
"RTN","RCDPPLB",142,0)
 .. ; PRCA*4.5*321 End modified code block
"RTN","RCDPPLB",143,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",144,0)
 .. W "# ERAs:",$J($P(ZDAT,U,3),5),"  ADJ: ",$S(+$P(ZDAT,U,5)>0:$J((($P(ZDAT,U,1)/$P(ZDAT,U,5))*100),3,0),1:"ERR"),"% [AMT ADJ:",$J($P(ZDAT,U,1),8,2),"/ BILLED:",$J($P(ZDAT,U,5),9,2),"] PAID:",$J($P(ZDAT,U,2),9,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",145,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",146,0)
 .. W ZLN,! S RCSL=RCSL+1
"RTN","RCDPPLB",147,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",148,0)
 .. S PY="",CZ=0 F  S PY=$O(^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ,PY)) Q:PY=""  S ZPY=^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ,PY) D  Q:RCQUIT  S CZ=CZ+1
"RTN","RCDPPLB",149,0)
 ... S ZPPY=$S(+$P(ZPY,U,5)'=0:$J((($P(ZPY,U,1)/$P(ZPY,U,5))*100),3,0),1:"ERR")
"RTN","RCDPPLB",150,0)
 ... I CZ>0 W ZLN2,! S RCSL=RCSL+1
"RTN","RCDPPLB",151,0)
 ... W "  ADJ CODE: ",PY,"  ADJ CODE TXT: ",$P(ZPY,U,4),! S RCSL=RCSL+1
"RTN","RCDPPLB",152,0)
 ... I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",153,0)
 ... W "  #ERAs: ",$J($P(ZPY,U,3),4),"  ADJ: ",ZPPY,"% [ADJ: ",$J($P(ZPY,U,1),8,2),"/ BILLED: ",$J($P(ZPY,U,5),9,2),"] PAID: ",$J($P(ZPY,U,2),9,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",154,0)
 ... D:RCDET DETAIL(RCSORT,ZZ,PY,$NA(^TMP("RCDPPLB_REPORT",$J))) Q:RCQUIT
"RTN","RCDPPLB",155,0)
 .. I 'RCQUIT W ZLN,! S RCSL=RCSL+1
"RTN","RCDPPLB",156,0)
 D:'RCQUIT ASK^RCDPRU(.RCQUIT)
"RTN","RCDPPLB",157,0)
PLBQ ;
"RTN","RCDPPLB",158,0)
 K RCQUIT,VAUTD,ZDAT,ZLN,ZDLN,ZLN2
"RTN","RCDPPLB",159,0)
 K ^TMP("RCDPPLB_REPORT",$J),^TMP("RCDPEU1",$J) ; PRCA*4.5*326
"RTN","RCDPPLB",160,0)
 Q
"RTN","RCDPPLB",161,0)
 ;
"RTN","RCDPPLB",162,0)
 ; SORT = by CODES or Payer; CAT = CODE or Payer/TIN to lookup
"RTN","RCDPPLB",163,0)
 ; DET = Second subscipt either Payer/TIN if Sort="C" or PLB Code if Sort="P"; ZGBL = Global to use through indirection
"RTN","RCDPPLB",164,0)
DETAIL(SORT,CAT,DET,ZGBL) ; Detail Report
"RTN","RCDPPLB",165,0)
 N ZLN1,ZFS,ZZ,ZDET,ZDZN,ZPCT,ZADJ,ZBIL,ZPD S $P(ZLN1,"-",77)="-",ZLN1="  "_ZLN1
"RTN","RCDPPLB",166,0)
 S ZFS=$S(SORT="C":"ERA",1:"PAYR")
"RTN","RCDPPLB",167,0)
 W ZLN1,! S RCSL=RCSL+1
"RTN","RCDPPLB",168,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",169,0)
 W "  #ERA        DATE     %ADJ    ADJUST       BILLED       PAID      CHECK#",! S RCSL=RCSL+1
"RTN","RCDPPLB",170,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",171,0)
 W "     TRACE#",! S RCSL=RCSL+1
"RTN","RCDPPLB",172,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",173,0)
 ;W "       COMMENTS ",! S RCSL=RCSL+1
"RTN","RCDPPLB",174,0)
 W "     REFERENCE#",! S RCSL=RCSL+1
"RTN","RCDPPLB",175,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",176,0)
 S ZZ="" F  S ZZ=$O(@ZGBL@(ZFS,CAT,ZZ)) Q:ZZ=""  S ZDZN=@ZGBL@(ZFS,CAT,ZZ,0) D  Q:RCQUIT
"RTN","RCDPPLB",177,0)
 . S ZDET=$$GETDT(SORT,CAT,DET,ZDZN,ZGBL)
"RTN","RCDPPLB",178,0)
 . Q:ZDET'=DET  ; If this isn't the same then skip
"RTN","RCDPPLB",179,0)
 . S ZADJ=$$DAMT("A",$S(SORT="C":CAT,1:DET),$P(ZDZN,U,1),ZFS,ZGBL),ZBIL=$$DAMT("B",CAT,$P(ZDZN,U,1),ZFS,ZGBL),ZPD=$$DAMT("P",CAT,$P(ZDZN,U,1),ZFS,ZGBL)
"RTN","RCDPPLB",180,0)
 . S ZPCT=$S(ZBIL'=0:$J(((ZADJ/ZBIL)*100),3,0),1:"ERR")
"RTN","RCDPPLB",181,0)
 . W $J($P(ZDZN,U,1),9),?12,$$DATE^RCDPRU($P(ZDZN,U,4)),?23,$J(ZPCT,3,0),?29,$J(ZADJ,9,2),?42,$J(ZBIL,9,2),?54,$J(ZPD,9,2),?68,$P(ZDZN,U,13),! S RCSL=RCSL+1
"RTN","RCDPPLB",182,0)
 . I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",183,0)
 . W ?9,$P(ZDZN,U,2),! S RCSL=RCSL+1 ; Trace
"RTN","RCDPPLB",184,0)
 . I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",185,0)
 . W ?9,$$DTCM(CAT,$P(ZDZN,U,1),ZFS,ZGBL),! S RCSL=RCSL+1 ; Reference #
"RTN","RCDPPLB",186,0)
 Q:RCQUIT
"RTN","RCDPPLB",187,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",188,0)
 ;W ZLN1,! S RCSL=RCSL+1
"RTN","RCDPPLB",189,0)
 Q
"RTN","RCDPPLB",190,0)
 ;
"RTN","RCDPPLB",191,0)
GETDT(SORT,CAT,DT,ZND,ZGBL) ; Get detail information for this entry
"RTN","RCDPPLB",192,0)
 N MYDT,MM
"RTN","RCDPPLB",193,0)
 S MYDT=""
"RTN","RCDPPLB",194,0)
 I SORT="C" Q $P(ZND,U,6)_"/"_$P(ZND,U,3)
"RTN","RCDPPLB",195,0)
 ; Otherwise we have a payer sort and need to do more work
"RTN","RCDPPLB",196,0)
 S MM=0.11 F  S MM=$O(@ZGBL@("00_ERA",$P(ZND,U,1),MM)) Q:MM=""  I $P(@ZGBL@("00_ERA",$P(ZND,U,1),MM),U,1)=DT S MYDT=$P(@ZGBL@("00_ERA",$P(ZND,U,1),MM),U,1) Q
"RTN","RCDPPLB",197,0)
 Q MYDT
"RTN","RCDPPLB",198,0)
 ;
"RTN","RCDPPLB",199,0)
 ; Get the type of amount from the ^TMP global
"RTN","RCDPPLB",200,0)
DAMT(TYPE,FIRST,ZIEN,XFS,XGBL) ; Get amounts
"RTN","RCDPPLB",201,0)
 N ZAMT,XDN S ZAMT=0
"RTN","RCDPPLB",202,0)
 ; Adjustment amount
"RTN","RCDPPLB",203,0)
 I TYPE="A" D  Q ZAMT
"RTN","RCDPPLB",204,0)
 . S AA=0.1 F  S AA=$O(@XGBL@("00_ERA",ZIEN,AA)) Q:AA=""  D
"RTN","RCDPPLB",205,0)
 .. Q:$P(@XGBL@("00_ERA",ZIEN,AA),U,1)'=FIRST  ; Not the correct record
"RTN","RCDPPLB",206,0)
 .. ; Otherwise we have the right record get the adjustment amount
"RTN","RCDPPLB",207,0)
 .. S ZAMT=ZAMT+$P(@XGBL@("00_ERA",ZIEN,AA),U,2)
"RTN","RCDPPLB",208,0)
 ; Total billed on ERA
"RTN","RCDPPLB",209,0)
 I TYPE="B" Q @XGBL@("00_ERA",ZIEN,0.1)
"RTN","RCDPPLB",210,0)
 ; Paid Amount
"RTN","RCDPPLB",211,0)
 I TYPE="P" Q $P(@XGBL@("00_ERA",ZIEN,0),U,5)
"RTN","RCDPPLB",212,0)
 Q ZAMT
"RTN","RCDPPLB",213,0)
 ;
"RTN","RCDPPLB",214,0)
DTCM(FIRST,ZIEN,XFS,XGBL) ; Get comment or reference number
"RTN","RCDPPLB",215,0)
 N AA,XDN,ZCM
"RTN","RCDPPLB",216,0)
 S XDN=0,ZCM=""
"RTN","RCDPPLB",217,0)
 D
"RTN","RCDPPLB",218,0)
 . S AA=0.1 F  S AA=$O(@XGBL@("00_ERA",ZIEN,AA)) Q:AA=""!(XDN=1)  D
"RTN","RCDPPLB",219,0)
 .. Q:$P(@XGBL@("00_ERA",ZIEN,AA),U,1)'=FIRST  ; Not the correct record
"RTN","RCDPPLB",220,0)
 .. ; Otherwise we have the right record get the adjustment amount
"RTN","RCDPPLB",221,0)
 .. S ZCM=$P(@XGBL@("00_ERA",ZIEN,AA),U,3),XDN=1
"RTN","RCDPPLB",222,0)
 Q ZCM
"RTN","RCDPPLB",223,0)
 ;
"RTN","RCDPPLB",224,0)
HDR(CD) ; Report header
"RTN","RCDPPLB",225,0)
 Q:CD "EDI LOCKBOX 835 PROVIDER LEVEL ADJUSTMENT (PLB) REPORT - DETAIL"
"RTN","RCDPPLB",226,0)
 Q "EDI LOCKBOX 835 PROVIDER LEVEL ADJUSTMENT (PLB) REPORT - SUMMARY"
"RTN","RCDPPLB",227,0)
 ;
"RTN","RCDPPLB",228,0)
HDRP(Z,X,Z1) ; Print Header (Z=String, X=1 (line feed) X=0 (no LF), Z1 (page number right justified)
"RTN","RCDPPLB",229,0)
 N LGT S LGT=$L(Z)+$L($G(Z1))
"RTN","RCDPPLB",230,0)
 I $G(X)=1 W !
"RTN","RCDPPLB",231,0)
 W ?(IOM-LGT\2),Z W:$G(Z1)]"" ?(IOM-$L(Z1)),Z1
"RTN","RCDPPLB",232,0)
 Q
"RTN","RCDPPLB",233,0)
 ;
"RTN","RCDPPLB",234,0)
NEWPG(RCPG,RCNEW,RCSL,CD) ; Check for new page needed, output header
"RTN","RCDPPLB",235,0)
 ; RCPG = Page number passwd by referece
"RTN","RCDPPLB",236,0)
 ; RCNEW = 1 to force new page
"RTN","RCDPPLB",237,0)
 ; RCSL = page length passed by reference
"RTN","RCDPPLB",238,0)
 ; Function returns 1 if user chooses to stop output
"RTN","RCDPPLB",239,0)
 N ZSTOP S ZSTOP=0
"RTN","RCDPPLB",240,0)
 I RCNEW!'RCPG!(($Y+5)>IOSL) D
"RTN","RCDPPLB",241,0)
 . D:RCPG ASK^RCDPRU(.ZSTOP) Q:ZSTOP
"RTN","RCDPPLB",242,0)
 . S RCPG=RCPG+1 W @IOF
"RTN","RCDPPLB",243,0)
 . D HDRP($$HDR(RCDET),1,"Page: "_RCPG)
"RTN","RCDPPLB",244,0)
 . D HDRP("SORT by "_$S($E(CD,1)="C":"PLB CODES",1:"PAYER NAMES")_"  REPORT RUN DATE: "_RCNOW,1)
"RTN","RCDPPLB",245,0)
 . D HDRP("DIVISION: "_DIVHDR_" Codes: "_CRHDR,1)
"RTN","RCDPPLB",246,0)
 . ; PRCA*4.5*326 - Include M/P/T filter in header
"RTN","RCDPPLB",247,0)
 . S XX="835 PAYERS: "_$S(RCWHICH=2:"None",1:$S($E(RCPAYS)="A":"All",1:"Selected"))_" "
"RTN","RCDPPLB",248,0)
 . S XX=XX_"835 PAYER TINs: "_$S(RCWHICH=1:"None",1:$S($E(RCPAYS)="A":"All",1:"Selected"))_" "
"RTN","RCDPPLB",249,0)
 . S XX=XX_"MEDICAL/PHARMACY/TRICARE: "
"RTN","RCDPPLB",250,0)
 . S XX=XX_$S(RCTYPE="M":"MEDICAL",RCTYPE="P":"PHARMACY",RCTYPE="T":"TRICARE",1:"ALL")
"RTN","RCDPPLB",251,0)
 . D HDRP(XX,1)
"RTN","RCDPPLB",252,0)
 . D HDRP("Date Range: "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2),1)
"RTN","RCDPPLB",253,0)
 . W !,RCHR,! S RCSL=7
"RTN","RCDPPLB",254,0)
 Q ZSTOP
"RTN","RCDPPLB",255,0)
 ;
"RTN","RCDPPLB",256,0)
 ; Get data for report and apply filters if necessary
"RTN","RCDPPLB",257,0)
GETDATA(GPLB,RCPAYS,RCTYPE,GSORT,GSTART,GSTOP,GARRAY,GDIV) ;
"RTN","RCDPPLB",258,0)
 N SDT,IEN,CD,CNT,IX,ZX,XY,RM,PARR,PNARR,PTARR,RCSET,GLINE,ZN,ZED,ZEN,ZPAY,ZTIN,ZDESC,ZZ,RCERR,RCGX,RCEB,EOBTOT,STA,STNUM,STNAM,ZLVL
"RTN","RCDPPLB",259,0)
 S SDT=$O(^RCY(344.4,"AC",GSTART),-1)
"RTN","RCDPPLB",260,0)
 S ZLVL=$S(GSORT="C":"ERA",1:"PAYR")
"RTN","RCDPPLB",261,0)
 ; Set up arrays for filtering on PLB, PAYER name and Payer TINs
"RTN","RCDPPLB",262,0)
 D RNG^RCDPRU("PLB",.GPLB,.PARR)
"RTN","RCDPPLB",263,0)
 ; RNG^RCDPRU("PAYER",GPAYER,.PARR),RNG^RCDPRU("TIN",GTIN,.PARR)
"RTN","RCDPPLB",264,0)
 ;Get possible ERAs to work on from ^RCY(344.4,"AC") index
"RTN","RCDPPLB",265,0)
 F  S SDT=$O(^RCY(344.4,"AC",SDT)) Q:SDT=""!(SDT>GSTOP)  D
"RTN","RCDPPLB",266,0)
 . S IEN="" F  S IEN=$O(^RCY(344.4,"AC",SDT,IEN)) Q:IEN=""  S ZN=^RCY(344.4,IEN,0) D
"RTN","RCDPPLB",267,0)
 .. I GDIV=0 D ERASTA^RCDPEM4(IEN,.STA,.STNUM,.STNAM) Q:'$D(GDIV(STA))  ; If not the right Division/station then get next ERA
"RTN","RCDPPLB",268,0)
 .. K RCGX D GETS^DIQ(344.4,IEN_",","2*;","E","RCGX") Q:$D(RCGX)=0  ; Quit if no PLBs on this ERA
"RTN","RCDPPLB",269,0)
 .. S ZTIN=$$GET1^DIQ(344.4,IEN_",",.03,"E"),ZPAY=$$GET1^DIQ(344.4,IEN_",",.06,"E")
"RTN","RCDPPLB",270,0)
 .. ;
"RTN","RCDPPLB",271,0)
 .. I RCPAYS="A",RCTYPE'="A" D  Q:'ZZ   ; PRCA*4.5*326 If all payers included, check by type
"RTN","RCDPPLB",272,0)
 ... S ZZ=$$ISTYPE^RCDPEU1(344.4,IEN,RCTYPE)
"RTN","RCDPPLB",273,0)
 .. ; Check Payer Name
"RTN","RCDPPLB",274,0)
 .. I RCPAYS'="A" D  Q:'ZZ               ; PRCA*4.5*326 
"RTN","RCDPPLB",275,0)
 ... S ZZ=$$ISSEL^RCDPEU1(344.4,IEN)
"RTN","RCDPPLB",276,0)
 .. ;
"RTN","RCDPPLB",277,0)
 .. ; Billed amount on the EOBs, Get EOB Details
"RTN","RCDPPLB",278,0)
 .. K RCEB D GETS^DIQ(344.4,IEN_",","1*;","I","RCEB")
"RTN","RCDPPLB",279,0)
 .. ; Walk EOB Details and get the total amount billed
"RTN","RCDPPLB",280,0)
 .. S EOBTOT=0
"RTN","RCDPPLB",281,0)
 .. I $D(RCEB)>9 S XY="" F  S XY=$O(RCEB(344.41,XY)) Q:XY=""  S EOBTOT=EOBTOT+$$GET1^DIQ(361.1,RCEB(344.41,XY,.02,"I")_",","2.04","E")
"RTN","RCDPPLB",282,0)
 .. ; Get list of PLB Codes for this ERA
"RTN","RCDPPLB",283,0)
 .. S IX="" K CD F ZZ=1:1 S IX=$O(RCGX(344.42,IX)) Q:IX=""  D
"RTN","RCDPPLB",284,0)
 ... I '$$CHECK("PLB",RCGX(344.42,IX,.02,"E"),.PARR) Q  ; If plb not included in report quit and go to the next entry 
"RTN","RCDPPLB",285,0)
 ... ; Get IEN for PLB Code, then get description for code from file 345.1
"RTN","RCDPPLB",286,0)
 ... S ZEN=$$FIND1^DIC(345.1,"","",RCGX(344.42,IX,.02,"E"),"B","","RCERR") S:$G(ZEN)]"" ZDESC=$$GET1^DIQ(345.1,ZEN_",",.05,"","RCERR")
"RTN","RCDPPLB",287,0)
 ... S:$G(ZDESC)="" ZDESC=$G(RCGX(344.42,IX,.04,"E")) ; If no description use the Description from FSC
"RTN","RCDPPLB",288,0)
 ... S:$G(ZDESC)="" ZDESC="Bad data recieved from FSC" ; Otherwise make one up.
"RTN","RCDPPLB",289,0)
 ... ; PLB Code ^ Adj. Amount ^ Reference / Comment ^ Code Description
"RTN","RCDPPLB",290,0)
 ... S CD(ZZ)=$S(RCGX(344.42,IX,.02,"E")'="":RCGX(344.42,IX,.02,"E"),1:"00")_U_RCGX(344.42,IX,.03,"E")_U_RCGX(344.42,IX,.01,"E")_U_ZDESC
"RTN","RCDPPLB",291,0)
 ... S @GARRAY@("00_ERA",IEN,ZZ)=CD(ZZ)
"RTN","RCDPPLB",292,0)
 ... ; Add items to report global sorted by Payer or PLB Code
"RTN","RCDPPLB",293,0)
 ... S @GARRAY@("00_ERA",IEN,0)=ZN,@GARRAY@("00_ERA",IEN,0.1)=EOBTOT
"RTN","RCDPPLB",294,0)
 ... ;D:GSORT="C" BYCODE^RCDPRU(ZN,.CD,IEN,GARRAY,EOBTOT) D:GSORT="P" BYPAYR^RCDPRU(ZN,.CD,IEN,GARRAY,EOBTOT)
"RTN","RCDPPLB",295,0)
 ... S ZED=$S(GSORT="C":$P(CD(ZZ),U,1),1:$P(ZN,U,6)_"/"_$P(ZN,U,3)),@GARRAY@(ZLVL,ZED,IEN,0)=ZN
"RTN","RCDPPLB",296,0)
 D SUMIT^RCDPRU(GARRAY,ZLVL,GSORT)
"RTN","RCDPPLB",297,0)
 Q
"RTN","RCDPPLB",298,0)
 ; Check to see if this ITEM is included for processing
"RTN","RCDPPLB",299,0)
CHECK(TYPE,ITEM,ARRAY) ;
"RTN","RCDPPLB",300,0)
 ; If all are included no need to check further
"RTN","RCDPPLB",301,0)
 I TYPE="TIN" S:$E(ITEM,$L(ITEM))'=" " ITEM=ITEM_" " ; Add space to TIN if needed.
"RTN","RCDPPLB",302,0)
 Q:$G(ARRAY(TYPE))="ALL" 1
"RTN","RCDPPLB",303,0)
 Q:$G(ARRAY(TYPE,ITEM))=1 1
"RTN","RCDPPLB",304,0)
 Q 0
"RTN","RCDPPLB",305,0)
 ;
"RTN","RCDPPLB",306,0)
PLBC(RET) ; Get PLB Codes to limit for report or all
"RTN","RCDPPLB",307,0)
 N PLLIST,PLCODE,DTOUT,DUOUT,FILE S FILE=345.1
"RTN","RCDPPLB",308,0)
 S DIR("A")="Select (C)ode, (R)ange of Codes or (A)ll ?: ",DIR(0)="SA^A:All Codes;C:Single Code;R:Range/List of Codes"
"RTN","RCDPPLB",309,0)
 S DIR("B")="ALL" D ^DIR K DIR
"RTN","RCDPPLB",310,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPPLB",311,0)
 S PLLIST=Y
"RTN","RCDPPLB",312,0)
 I PLLIST="A" S RET="ALL" Q
"RTN","RCDPPLB",313,0)
 I PLLIST="C" D  Q
"RTN","RCDPPLB",314,0)
 .; if invalid code return here
"RTN","RCDPPLB",315,0)
C1 .;
"RTN","RCDPPLB",316,0)
 . S DIR("A")="Enter a Code: ",DIR(0)="FA^1:200"
"RTN","RCDPPLB",317,0)
 . S DIR("?")="Only a single codes can be entered as: WO"
"RTN","RCDPPLB",318,0)
 . S DIR("?",1)="Please enter one Code for the report."
"RTN","RCDPPLB",319,0)
 . S DIR("?",2)="The single validated code will be included in the report."
"RTN","RCDPPLB",320,0)
 . D ^DIR K DIR
"RTN","RCDPPLB",321,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPPLB",322,0)
 . S PLCODE=$$UP^RCDPRU(X),PLCODE=$TR(PLCODE," ","")
"RTN","RCDPPLB",323,0)
 . I (PLCODE[":"),(PLCODE["-"),(PLCODE[",") W !!,"PLB Code: "_PLCODE_" not found, Please try again...",! S X="",PLCODE="" G C1
"RTN","RCDPPLB",324,0)
 . I '$$VAL(FILE,.PLCODE) W !!,"PLB Code: "_PLCODE_" not found, Please try again...",! S X="",PLCODE="" G C1
"RTN","RCDPPLB",325,0)
 . S RET=PLCODE
"RTN","RCDPPLB",326,0)
 ;
"RTN","RCDPPLB",327,0)
 I PLLIST="R" D
"RTN","RCDPPLB",328,0)
 . ; if invalid range/list of codes return here
"RTN","RCDPPLB",329,0)
C2 . ;
"RTN","RCDPPLB",330,0)
 . S DIR("A")="Enter a List or Range of Codes",DIR(0)="F^1:200"
"RTN","RCDPPLB",331,0)
 . S DIR("?")="Codes can be entered as: WO,51,AH:CT"
"RTN","RCDPPLB",332,0)
 . S DIR("?",1)="Please enter a list or range of Codes, use a comma between elements"
"RTN","RCDPPLB",333,0)
 . S DIR("?",2)="and a colon ':' or '-' to delimit ranges of codes."
"RTN","RCDPPLB",334,0)
 . D ^DIR K DIR
"RTN","RCDPPLB",335,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPPLB",336,0)
 . S PLCODE=$$UP^RCDPRU(X) I '$$VAL(FILE,.PLCODE) W !!,"PLB Code: "_PLCODE_" not found, Please try again...",! S X="",PLCODE="" G C2
"RTN","RCDPPLB",337,0)
 . S RET=PLCODE
"RTN","RCDPPLB",338,0)
 Q
"RTN","RCDPPLB",339,0)
 ;
"RTN","RCDPPLB",340,0)
VAL(XF,CODE) ; Validate a range or list of PLB Codes
"RTN","RCDPPLB",341,0)
 ; If invalid code is found VAILD = 0 and CODE will contain the offending codes
"RTN","RCDPPLB",342,0)
 Q $$VAL^RCDPRU(XF,.CODE)
"RTN","RCDPPLB",343,0)
 ;
"RTN","RCDPRPL3")
0^3^B82192868
"RTN","RCDPRPL3",1,0)
RCDPRPL3 ;WISC/RFJ-receipt profile listmanager options ;1 Jun 99
"RTN","RCDPRPL3",2,0)
 ;;4.5;Accounts Receivable;**114,148,153,173,301,326**;Mar 20, 1995;Build 26
"RTN","RCDPRPL3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPRPL3",4,0)
 Q
"RTN","RCDPRPL3",5,0)
 ;
"RTN","RCDPRPL3",6,0)
 ;  routine contains the entry points for receipt management
"RTN","RCDPRPL3",7,0)
 ;
"RTN","RCDPRPL3",8,0)
 ;
"RTN","RCDPRPL3",9,0)
EDITREC ;  option: edit the receipt, deposit #
"RTN","RCDPRPL3",10,0)
 D FULL^VALM1
"RTN","RCDPRPL3",11,0)
 S VALMBCK="R"
"RTN","RCDPRPL3",12,0)
 ;
"RTN","RCDPRPL3",13,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) Q
"RTN","RCDPRPL3",14,0)
 ;
"RTN","RCDPRPL3",15,0)
 W !
"RTN","RCDPRPL3",16,0)
 D EDITREC^RCDPUREC(RCRECTDA)
"RTN","RCDPRPL3",17,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL3",18,0)
 ;
"RTN","RCDPRPL3",19,0)
 ;  rebuild the header
"RTN","RCDPRPL3",20,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPL3",21,0)
 Q
"RTN","RCDPRPL3",22,0)
 ;
"RTN","RCDPRPL3",23,0)
 ;
"RTN","RCDPRPL3",24,0)
PROCESS ;  option: process receipt
"RTN","RCDPRPL3",25,0)
 N RCNE,RCOK,RCEFT,RCEFT1,RCHAC,RC,RCERA,RCAMT,RCQUIT,CRTR,Z  ;PRCA*4.5*326 added RCNE
"RTN","RCDPRPL3",26,0)
 D FULL^VALM1
"RTN","RCDPRPL3",27,0)
 S VALMBCK="R"
"RTN","RCDPRPL3",28,0)
 ;
"RTN","RCDPRPL3",29,0)
 S RC=$S('$P($G(^RCY(344,RCRECTDA,0)),U,6)&$$LBEVENT^RCDPEU():1,1:0),CRTR=$P("cash^transfer",U,RC+1)
"RTN","RCDPRPL3",30,0)
 W !!,"This option will process the payments for the receipt updating the AR"
"RTN","RCDPRPL3",31,0)
 W !,"Package and generate the "_CRTR_" receipt document to FMS.  Any decrease"
"RTN","RCDPRPL3",32,0)
 W !,"adjustments entered via the EDI Lockbox Worklist will also be generated."
"RTN","RCDPRPL3",33,0)
 W !,"Once a receipt has been processed, the receipt status will change to closed"
"RTN","RCDPRPL3",34,0)
 W !,"and no further processing of the receipt can occur.  If the FMS "_CRTR
"RTN","RCDPRPL3",35,0)
 W !," receipt document rejects, you can use this same option to reprocess the"
"RTN","RCDPRPL3",36,0)
 W !,"receipt.",!
"RTN","RCDPRPL3",37,0)
 ;
"RTN","RCDPRPL3",38,0)
 S RCEFT=+$P($G(^RCY(344,RCRECTDA,0)),U,17),RCERA=$P($G(^(0)),U,18),RCHAC=0
"RTN","RCDPRPL3",39,0)
 S RCAMT=+$$PAYTOTAL^RCDPURED(RCRECTDA)
"RTN","RCDPRPL3",40,0)
 ;
"RTN","RCDPRPL3",41,0)
 S RCQUIT=0
"RTN","RCDPRPL3",42,0)
 I RCERA,'RCEFT D  Q:RCQUIT
"RTN","RCDPRPL3",43,0)
 . I +$P($G(^RCY(344.4,+RCERA,0)),U,5)'=RCAMT D  S RCQUIT=1 Q
"RTN","RCDPRPL3",44,0)
 .. W !,"This receipt cannot be processed because the total amount of the associated",!," ERA ("_$J(+$P($G(^RCY(344.4,+RCERA,0)),U,5),"",2)_") does not equal the total amount on the receipt ("_$J(RCAMT,"",2)_")"
"RTN","RCDPRPL3",45,0)
 .. S VALMSG="Receipt total not = ERA total - Receipt NOT processed"
"RTN","RCDPRPL3",46,0)
 .. D RET^RCDPEWL2
"RTN","RCDPRPL3",47,0)
 ;
"RTN","RCDPRPL3",48,0)
 I RCEFT D  Q:'RCOK
"RTN","RCDPRPL3",49,0)
 . N RCOK1
"RTN","RCDPRPL3",50,0)
 . S RCOK=0,RCEFT1=+$G(^RCY(344.3,+RCEFT,0)),RCHAC=($E($P($G(^RCY(344.3,RCEFT1,0)),U,6),1,3)="HAC")
"RTN","RCDPRPL3",51,0)
 . N Z,DIR,DIE,DA,DR
"RTN","RCDPRPL3",52,0)
 . I $P($G(^RCY(344.3,+RCEFT1,0)),U,10) D  Q
"RTN","RCDPRPL3",53,0)
 .. W !,"This receipt cannot be processed until EDI Lockbox checksum exception is",!," cleared on the EFT transmission"
"RTN","RCDPRPL3",54,0)
 .. S VALMSG="EDI LOCKBOX exception still exists - Receipt NOT processed"
"RTN","RCDPRPL3",55,0)
 .. D RET^RCDPEWL2
"RTN","RCDPRPL3",56,0)
 . ;
"RTN","RCDPRPL3",57,0)
 . I +$P($G(^RCY(344.31,+RCEFT,0)),U,7)'=RCAMT D  Q
"RTN","RCDPRPL3",58,0)
 .. W !,"This receipt cannot be processed - the receipt total does not match the",!," EFT total for this EDI Lockbox receipt"
"RTN","RCDPRPL3",59,0)
 .. S VALMSG="EDI LOCKBOX total of receipt not = EFT - Receipt NOT processed"
"RTN","RCDPRPL3",60,0)
 .. D RET^RCDPEWL2
"RTN","RCDPRPL3",61,0)
 . ; Check that EFT funds were posted
"RTN","RCDPRPL3",62,0)
 . S RCOK1=1
"RTN","RCDPRPL3",63,0)
 . I $P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFT,0)),0)),U,8),$P($G(^RCY(344.31,+RCEFT,0)),U,7) D  Q:'RCOK1
"RTN","RCDPRPL3",64,0)
 .. N RCRECTDA,RCDEPDA
"RTN","RCDPRPL3",65,0)
 .. S RCDEPDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFT,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPDA,0)) ; Get deposit and its receipt
"RTN","RCDPRPL3",66,0)
 .. I RCRECTDA S Z=$P($$FMSSTAT^RCDPUREC(RCRECTDA),U,2) Q:$E(Z)="A"  ; EFT Accepted by FMS
"RTN","RCDPRPL3",67,0)
 .. W !,"This receipt cannot be processed yet - the EFT's deposit has not been",!," successfully sent to FMS.  Status currently is "_Z
"RTN","RCDPRPL3",68,0)
 .. S VALMSG="EDI LOCKBOX EFT not yet posted",RCOK1=0
"RTN","RCDPRPL3",69,0)
 .. D RET^RCDPEWL2
"RTN","RCDPRPL3",70,0)
 . S RCOK=1
"RTN","RCDPRPL3",71,0)
 ;
"RTN","RCDPRPL3",72,0)
 I +$P($G(^RCY(344,RCRECTDA,0)),U,6),+$P(^(0),U,17) D  Q:'RCOK
"RTN","RCDPRPL3",73,0)
 . S RCOK=0
"RTN","RCDPRPL3",74,0)
 . S DIR("A",1)="A DEPOSIT CANNOT BE ASSOCIATED WITH AN EDI LOCKBOX EFT DETAIL RECEIPT"
"RTN","RCDPRPL3",75,0)
 . S DIR(0)="YA",DIR("A")="DO YOU WANT TO DELETE THIS RECEIPT'S DEPOSIT REFERENCE NOW?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPRPL3",76,0)
 . I Y=1 S DIE="^RCY(344,",DR=".06///@",DA=RCRECTDA D ^DIE S RCOK=1 Q
"RTN","RCDPRPL3",77,0)
 . S VALMSG="EDI LBOX ERA receipt cannot have a deposit - Receipt NOT processed"
"RTN","RCDPRPL3",78,0)
 ;
"RTN","RCDPRPL3",79,0)
 N RCDEPTDA,RCDPDATA,RCDPFLAG,RCDPFHLP,RCTRDA,RCSCR,STATUS,RCADJ
"RTN","RCDPRPL3",80,0)
 ;
"RTN","RCDPRPL3",81,0)
 ;  lock receipt
"RTN","RCDPRPL3",82,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) S VALMSG="Receipt NOT Processed." Q
"RTN","RCDPRPL3",83,0)
 ;
"RTN","RCDPRPL3",84,0)
 ;  apply decrease adjustments from worklist entry
"RTN","RCDPRPL3",85,0)
 S RCSCR=+$O(^RCY(344.4,"ARCT",RCRECTDA,0)),RCSCR=$S($D(^RCY(344.49,+RCSCR,0)):RCSCR,1:0)
"RTN","RCDPRPL3",86,0)
 S RCADJ=$$ERAWL^RCDPRPL4(RCSCR)
"RTN","RCDPRPL3",87,0)
 I RCADJ=2 D UNLOCK Q
"RTN","RCDPRPL3",88,0)
 I RCADJ<0 D  Q
"RTN","RCDPRPL3",89,0)
 . W !,"The bill balance for the bills listed above must be manually increased to",!,"accommodate the automatic ERA Worklist dec adjustment amounts and to allow",!,"the ERA receipt to be balanced - Receipt NOT processed."
"RTN","RCDPRPL3",90,0)
 . D UNLOCK
"RTN","RCDPRPL3",91,0)
 ;
"RTN","RCDPRPL3",92,0)
 ;  warning no transactions
"RTN","RCDPRPL3",93,0)
 I '$O(^RCY(344,RCRECTDA,1,0)) D
"RTN","RCDPRPL3",94,0)
 .   W !,"WARNING, no transactions are on the receipt.  Processing will only change"
"RTN","RCDPRPL3",95,0)
 .   W !,"the status of the receipt to closed."
"RTN","RCDPRPL3",96,0)
 ;
"RTN","RCDPRPL3",97,0)
 D DIQ344^RCDPRPLM(RCRECTDA,".06;.08;.17;.18;200;")
"RTN","RCDPRPL3",98,0)
 ;  code sheet already sent once, this is a retransmission, check it
"RTN","RCDPRPL3",99,0)
 I RCDPDATA(344,RCRECTDA,200,"E")'="" D
"RTN","RCDPRPL3",100,0)
 .   S STATUS=$$STATUS^GECSSGET(RCDPDATA(344,RCRECTDA,200,"E"))
"RTN","RCDPRPL3",101,0)
 .   W !,"This receipt has been previously processed to FMS in the cash receipt"
"RTN","RCDPRPL3",102,0)
 .   W !,"document ",$TR(RCDPDATA(344,RCRECTDA,200,"E")," "),".  The current status for this document in the"
"RTN","RCDPRPL3",103,0)
 .   W !,"Generic Code Sheet Stack file is ",STATUS,"."
"RTN","RCDPRPL3",104,0)
 .   ;
"RTN","RCDPRPL3",105,0)
 .   ;  okay to continue if status is Error, Rejected, or not defined (-1)
"RTN","RCDPRPL3",106,0)
 .   I $E(STATUS)="E"!($E(STATUS)="R")!(STATUS=-1) Q
"RTN","RCDPRPL3",107,0)
 .   ;  okay to continue if document has not been transmitted
"RTN","RCDPRPL3",108,0)
 .   I $E(STATUS)="Q"!($E(STATUS)="M") Q
"RTN","RCDPRPL3",109,0)
 .   ;  okay to continue if document is transmitted for 2 days
"RTN","RCDPRPL3",110,0)
 .   I $E(STATUS)="T",$$FMDIFF^XLFDT(DT,RCDPDATA(344,RCRECTDA,.08,"I"))>1 Q
"RTN","RCDPRPL3",111,0)
 .   ;
"RTN","RCDPRPL3",112,0)
 .   ;  do not allow reprocessing
"RTN","RCDPRPL3",113,0)
 .   S RCDPFLAG=1
"RTN","RCDPRPL3",114,0)
 .   I $E(STATUS)="A" W !!,"You cannot reprocess and retransmit an ACCEPTED document."
"RTN","RCDPRPL3",115,0)
 .   I $E(STATUS)="T" W !!,"You cannot reprocess and retransmit a document which has previously been",!,"transmitted and is waiting on confirmation (less than 2 days since",!,"processing)."
"RTN","RCDPRPL3",116,0)
 I $G(RCDPFLAG) D UNLOCK Q
"RTN","RCDPRPL3",117,0)
 ;
"RTN","RCDPRPL3",118,0)
 ;  check payments to verify it doesn't exceed bill amt
"RTN","RCDPRPL3",119,0)
 W !!,"Checking payment amounts versus billed amounts ..."
"RTN","RCDPRPL3",120,0)
 S RCTRDA=0 F  S RCTRDA=$O(^RCY(344,RCRECTDA,1,RCTRDA)) Q:'RCTRDA  D
"RTN","RCDPRPL3",121,0)
 .   S X=$$CHECKPAY(RCRECTDA,RCTRDA)
"RTN","RCDPRPL3",122,0)
 .   I 'X Q
"RTN","RCDPRPL3",123,0)
 .   ;  exceeds billed amt
"RTN","RCDPRPL3",124,0)
 .   S RCDPFLAG=1
"RTN","RCDPRPL3",125,0)
 .   ;  check for >1 pending payment for this transaction
"RTN","RCDPRPL3",126,0)
 .   I +$P(X,"^",3)'=$P(^RCY(344,RCRECTDA,1,RCTRDA,0),"^",4) S RCDPFLAG=2
"RTN","RCDPRPL3",127,0)
 .   W !," " I RCDPFLAG=2 W "*" S RCDPFHLP=1
"RTN","RCDPRPL3",128,0)
 .   W "WARNING: Trans# ",RCTRDA,". Pending Payments $ ",$J($P(X,"^",3),0,2)," exceed billed amount $ ",$J($P(X,"^",2),0,2)
"RTN","RCDPRPL3",129,0)
 I $G(RCDPFLAG) D  Q
"RTN","RCDPRPL3",130,0)
 .   I $G(RCDPFHLP) W !,"NOTE: * Indicates more than one pending payment entered against this bill."
"RTN","RCDPRPL3",131,0)
 .   W !,"Adjust payments listed above before processing."
"RTN","RCDPRPL3",132,0)
 .   D UNLOCK
"RTN","RCDPRPL3",133,0)
 ;
"RTN","RCDPRPL3",134,0)
 W "  payments okay."
"RTN","RCDPRPL3",135,0)
 ;
"RTN","RCDPRPL3",136,0)
 S RCDEPTDA=RCDPDATA(344,RCRECTDA,.06,"I")
"RTN","RCDPRPL3",137,0)
 ;  lock deposit tckt
"RTN","RCDPRPL3",138,0)
 I RCDEPTDA I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCK Q
"RTN","RCDPRPL3",139,0)
 ;
"RTN","RCDPRPL3",140,0)
 ;  check for critical fields, deposit ticket, date of deposit
"RTN","RCDPRPL3",141,0)
 ; No deposit ticket is OK for ERA not related to an EFT or for HAC ERA
"RTN","RCDPRPL3",142,0)
 I 'RCDEPTDA,$S('$G(RCDPDATA(344,RCRECTDA,.18,"I")):1,$$EDILB^RCDPEU(RCRECTDA)=2:0,1:'$$HAC^RCDPURE1(RCRECTDA)) D
"RTN","RCDPRPL3",143,0)
 .   W !!,"WARNING, Deposit Ticket is missing.  If you continue with processing,"
"RTN","RCDPRPL3",144,0)
 .   W !,"the AR accounts will be updated and a cash receipt (CR) document will"
"RTN","RCDPRPL3",145,0)
 .   W !,"NOT be sent to FMS.  You have the option to add the Deposit Ticket now."
"RTN","RCDPRPL3",146,0)
 .   D EDITREC^RCDPUREC(RCRECTDA,".06;")
"RTN","RCDPRPL3",147,0)
 .   S (RCDEPTDA,RCDPDATA(344,RCRECTDA,.06,"I"))=$P(^RCY(344,RCRECTDA,0),"^",6)
"RTN","RCDPRPL3",148,0)
 ;
"RTN","RCDPRPL3",149,0)
 ;  deposit ticket added
"RTN","RCDPRPL3",150,0)
 I RCDEPTDA D
"RTN","RCDPRPL3",151,0)
 .   D EDITDEP^RCDPUDEP(RCDEPTDA,1)
"RTN","RCDPRPL3",152,0)
 .   D DIQ3441^RCDPDPLM(RCDEPTDA,".03;")
"RTN","RCDPRPL3",153,0)
 .   I RCDPDATA(344.1,RCDEPTDA,.03,"I") Q
"RTN","RCDPRPL3",154,0)
 .   W !!,"No DEPOSIT DATE, you can edit the deposit data now."
"RTN","RCDPRPL3",155,0)
 .   D EDITDEP^RCDPUDEP(RCDEPTDA,1)
"RTN","RCDPRPL3",156,0)
 .   D DIQ3441^RCDPDPLM(RCDEPTDA,".03;")
"RTN","RCDPRPL3",157,0)
 .   I RCDPDATA(344.1,RCDEPTDA,.03,"I") Q
"RTN","RCDPRPL3",158,0)
 .   W !!,"Still No DEPOSIT DATE, use the Edit Deposit option under Deposit Processing."
"RTN","RCDPRPL3",159,0)
 .   S RCDPFLAG=1
"RTN","RCDPRPL3",160,0)
 I $G(RCDPFLAG) D UNLOCK Q
"RTN","RCDPRPL3",161,0)
 ;
"RTN","RCDPRPL3",162,0)
 W !
"RTN","RCDPRPL3",163,0)
 I $$ASKPROC'=1 D  Q
"RTN","RCDPRPL3",164,0)
 . I $G(RCADJ)>0 W !!,*7,"WARNING - EDI Lbox Worklist auto dec adjustments have already been made for",!,"this receipt!!!"
"RTN","RCDPRPL3",165,0)
 . D UNLOCK
"RTN","RCDPRPL3",166,0)
 ;
"RTN","RCDPRPL3",167,0)
 ;  process receipt, pass 1 to show messages
"RTN","RCDPRPL3",168,0)
 D PROCESS^RCDPURE1(RCRECTDA,1) K CSRECPT
"RTN","RCDPRPL3",169,0)
 D UNLOCK
"RTN","RCDPRPL3",170,0)
 D INIT^RCDPRPLM
"RTN","RCDPRPL3",171,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPL3",172,0)
 I $P(^RCY(344,RCRECTDA,0),"^",8) S VALMSG="Receipt PROCESSED."
"RTN","RCDPRPL3",173,0)
 Q
"RTN","RCDPRPL3",174,0)
 ;
"RTN","RCDPRPL3",175,0)
 ;
"RTN","RCDPRPL3",176,0)
UNLOCK ;  unlock/pause
"RTN","RCDPRPL3",177,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL3",178,0)
 I $G(RCDEPTDA) L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPRPL3",179,0)
 W !!,"Press RETURN to continue: " R X:DTIME
"RTN","RCDPRPL3",180,0)
 S VALMSG="Receipt NOT Processed."
"RTN","RCDPRPL3",181,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPL3",182,0)
 Q
"RTN","RCDPRPL3",183,0)
 ;
"RTN","RCDPRPL3",184,0)
 ;
"RTN","RCDPRPL3",185,0)
CHECKPAY(RCRECTDA,RCTRDA) ;  called to check amt pd against amt of bill
"RTN","RCDPRPL3",186,0)
 N PAYDATA,PENDING,X
"RTN","RCDPRPL3",187,0)
 ;  receipt already processed
"RTN","RCDPRPL3",188,0)
 I $P($G(^RCY(344,RCRECTDA,0)),"^",7) Q 0
"RTN","RCDPRPL3",189,0)
 S PAYDATA=$G(^RCY(344,RCRECTDA,1,RCTRDA,0))
"RTN","RCDPRPL3",190,0)
 ;  payment is 0
"RTN","RCDPRPL3",191,0)
 I '$P(PAYDATA,"^",4) Q 0
"RTN","RCDPRPL3",192,0)
 ;  payment processed
"RTN","RCDPRPL3",193,0)
 I $P(PAYDATA,"^",5) Q 0
"RTN","RCDPRPL3",194,0)
 ;  not a bill
"RTN","RCDPRPL3",195,0)
 I $P(PAYDATA,"^",3)'["PRCA(430," Q 0
"RTN","RCDPRPL3",196,0)
 ;  first party bill (do not check dollars)
"RTN","RCDPRPL3",197,0)
 I $P($G(^RCD(340,+$P($G(^PRCA(430,+$P(PAYDATA,"^",3),0)),"^",9),0)),"^")["DPT(" Q 0
"RTN","RCDPRPL3",198,0)
 ; TCSP bill, no payments allowed   prca*4.5*301 BB
"RTN","RCDPRPL3",199,0)
 I $D(^PRCA(430,"TCSP",+$P(PAYDATA,"^",3))) Q 0
"RTN","RCDPRPL3",200,0)
 ;  bill not activated or open
"RTN","RCDPRPL3",201,0)
 S X=$P($G(^PRCA(430,+$P(PAYDATA,"^",3),0)),"^",8)
"RTN","RCDPRPL3",202,0)
 I X'=42,X'=16 Q "1^0"
"RTN","RCDPRPL3",203,0)
 ;  calculate dollars on receivable
"RTN","RCDPRPL3",204,0)
 S X=$G(^PRCA(430,+$P(PAYDATA,"^",3),7)),X=$P(X,"^")+$P(X,"^",2)+$P(X,"^",3)+$P(X,"^",4)+$P(X,"^",5)
"RTN","RCDPRPL3",205,0)
 ;  get pending payments
"RTN","RCDPRPL3",206,0)
 ;  use pending since there may be more than one payment
"RTN","RCDPRPL3",207,0)
 ;  to the same bill on the receipt
"RTN","RCDPRPL3",208,0)
 S PENDING=$$PENDPAY^RCDPURET($P(PAYDATA,"^",3))
"RTN","RCDPRPL3",209,0)
 K ^TMP($J,"RCDPUREC","PP") ;set by pending payment call
"RTN","RCDPRPL3",210,0)
 ;  pending payments is not > billed
"RTN","RCDPRPL3",211,0)
 I PENDING'>X Q 0
"RTN","RCDPRPL3",212,0)
 ;  greater, return billed amt ^ pending payment amt
"RTN","RCDPRPL3",213,0)
 Q "1^"_X_"^"_PENDING
"RTN","RCDPRPL3",214,0)
 ;
"RTN","RCDPRPL3",215,0)
 ;
"RTN","RCDPRPL3",216,0)
ASKPROC() ;  ask if its okay to process the receipt
"RTN","RCDPRPL3",217,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL3",218,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL3",219,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPRPL3",220,0)
 S DIR("A")="  Are you sure you want to PROCESS this receipt"
"RTN","RCDPRPL3",221,0)
 D ^DIR
"RTN","RCDPRPL3",222,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL3",223,0)
 Q Y
"RTN","RCDPRPL4")
0^4^B36743675
"RTN","RCDPRPL4",1,0)
RCDPRPL4 ;WISC/RFJ/PJH-receipt profile listmanager options ;1 Apr 01
"RTN","RCDPRPL4",2,0)
 ;;4.5;Accounts Receivable;**169,172,173,269,276,326**;Mar 20, 1995;Build 26
"RTN","RCDPRPL4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPRPL4",4,0)
 Q
"RTN","RCDPRPL4",5,0)
 ;
"RTN","RCDPRPL4",6,0)
 ;  this routine contains the entry points for receipt management
"RTN","RCDPRPL4",7,0)
 ;
"RTN","RCDPRPL4",8,0)
 ;
"RTN","RCDPRPL4",9,0)
ONLINE ;  allow the supervisor to mark the CR document as input on line
"RTN","RCDPRPL4",10,0)
 ;
"RTN","RCDPRPL4",11,0)
 ; Input - RCRECDA - IEN of CR receipt in #344
"RTN","RCDPRPL4",12,0)
 ;
"RTN","RCDPRPL4",13,0)
 D FULL^VALM1
"RTN","RCDPRPL4",14,0)
 S VALMBCK="R"
"RTN","RCDPRPL4",15,0)
 ;
"RTN","RCDPRPL4",16,0)
 ;  get fms document and status
"RTN","RCDPRPL4",17,0)
 N %,FMSDOC,GECSDATA
"RTN","RCDPRPL4",18,0)
 S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPL4",19,0)
 ;
"RTN","RCDPRPL4",20,0)
 W !!,"This option will allow you to mark a rejected Cash Receipt document as"
"RTN","RCDPRPL4",21,0)
 W !,"entered on line.  This will prevent the document from being listed on"
"RTN","RCDPRPL4",22,0)
 W !,"the nightly mailman message used to help manage the receipts and deposits."
"RTN","RCDPRPL4",23,0)
 ;
"RTN","RCDPRPL4",24,0)
 W !!,"FMS Cash Receipt Document: ",$P(FMSDOC,"^"),?48,"Status: ",$P(FMSDOC,"^",2)
"RTN","RCDPRPL4",25,0)
 ;
"RTN","RCDPRPL4",26,0)
 I '$D(^XUSEC("PRCAY PAYMENT SUP",DUZ)) W !!,"You are not an owner of the supervisor PRCAY PAYMENT SUP security key." D QUIT Q
"RTN","RCDPRPL4",27,0)
 ;
"RTN","RCDPRPL4",28,0)
 ;  cr accepted
"RTN","RCDPRPL4",29,0)
 I $E($P(FMSDOC,"^",2))="A" W !!,"You CANNOT mark the Cash Receipt document as entered on line.",!,"The CR document is ACCEPTED ??" D QUIT Q
"RTN","RCDPRPL4",30,0)
 ;
"RTN","RCDPRPL4",31,0)
 ;  not been transmitted for 2 days
"RTN","RCDPRPL4",32,0)
 I $E($P(FMSDOC,"^",2))="T",$$FMDIFF^XLFDT(DT,$P(^RCY(344,RCRECTDA,0),"^",8))'>2 W !!,"You CANNOT mark the Cash Receipt document as entered on line.",!,"The CR document has NOT been TRANSMITTED for 2 days ??" D QUIT Q
"RTN","RCDPRPL4",33,0)
 ;
"RTN","RCDPRPL4",34,0)
 ;  cr queued for transmission
"RTN","RCDPRPL4",35,0)
 I $E($P(FMSDOC,"^",2))="Q"!($E($P(FMSDOC,"^",2))="M") W !!,"You CANNOT mark the Cash Receipt document as entered on line.",!,"The CR document is waiting to be TRANSMITTED ??" D QUIT Q
"RTN","RCDPRPL4",36,0)
 ;
"RTN","RCDPRPL4",37,0)
 ;  check to see if already marked as entered on line
"RTN","RCDPRPL4",38,0)
 I $E($P(FMSDOC,"^",2))="O" D  Q
"RTN","RCDPRPL4",39,0)
 .   I $$ASKSTAT("REMOVE")'=1 Q
"RTN","RCDPRPL4",40,0)
 .   W !,"... removing CR status as entered on line ..."
"RTN","RCDPRPL4",41,0)
 .   ;  remove the ON-LINE status on field 201
"RTN","RCDPRPL4",42,0)
 .   D EDITREC^RCDPUREC(RCRECTDA,"201///0;")
"RTN","RCDPRPL4",43,0)
 .   ;  show the new status
"RTN","RCDPRPL4",44,0)
 .   S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPL4",45,0)
 .   W !!,"FMS Cash Receipt Document: ",$P(FMSDOC,"^"),?48,"Status: ",$P(FMSDOC,"^",2)
"RTN","RCDPRPL4",46,0)
 .   D QUIT
"RTN","RCDPRPL4",47,0)
 ;
"RTN","RCDPRPL4",48,0)
 ;  ask to change the status to entered on line
"RTN","RCDPRPL4",49,0)
 I $$ASKSTAT("ENTER")'=1 D QUIT Q
"RTN","RCDPRPL4",50,0)
 ;
"RTN","RCDPRPL4",51,0)
 ;  change the status to entered on line
"RTN","RCDPRPL4",52,0)
 W !!,"... changing status to entered on line ..."
"RTN","RCDPRPL4",53,0)
 W !,"... changing the generic code sheet stack file status to ACCEPTED ..."
"RTN","RCDPRPL4",54,0)
 ;
"RTN","RCDPRPL4",55,0)
 ;  set the status to entered on line in field 201 and FMS reference in field 200 - PRCA*4.5*326
"RTN","RCDPRPL4",56,0)
 D EDITREC^RCDPUREC(RCRECTDA,"201///1;")
"RTN","RCDPRPL4",57,0)
 ;
"RTN","RCDPRPL4",58,0)
 ;  set the generic code sheet status as accepted
"RTN","RCDPRPL4",59,0)
 ;  get the document ien
"RTN","RCDPRPL4",60,0)
 D DATA^GECSSGET($P(FMSDOC,"^"))
"RTN","RCDPRPL4",61,0)
 I $G(GECSDATA) D SETSTAT^GECSSTAA(GECSDATA,"A")
"RTN","RCDPRPL4",62,0)
 ;
"RTN","RCDPRPL4",63,0)
 ;  show the new status
"RTN","RCDPRPL4",64,0)
 S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPL4",65,0)
 W !!,"FMS Cash Receipt Document: ",$P(FMSDOC,"^"),?48,"Status: ",$P(FMSDOC,"^",2)
"RTN","RCDPRPL4",66,0)
 ;
"RTN","RCDPRPL4",67,0)
QUIT ;  pause and rebuild the header
"RTN","RCDPRPL4",68,0)
 W !!,"press RETURN to continue: "
"RTN","RCDPRPL4",69,0)
 R %:DTIME
"RTN","RCDPRPL4",70,0)
 D HDR^RCDPRPLM
"RTN","RCDPRPL4",71,0)
 Q
"RTN","RCDPRPL4",72,0)
 ;
"RTN","RCDPRPL4",73,0)
 ;
"RTN","RCDPRPL4",74,0)
ASKSTAT(ACTION) ;  ask if its okay to remove or change the entered online status
"RTN","RCDPRPL4",75,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL4",76,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL4",77,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPRPL4",78,0)
 S DIR("A",1)="  Do you want to "_ACTION_" the status showing the Cash Receipt"
"RTN","RCDPRPL4",79,0)
 S DIR("A")="  document was entered ON LINE"
"RTN","RCDPRPL4",80,0)
 D ^DIR
"RTN","RCDPRPL4",81,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL4",82,0)
 Q Y
"RTN","RCDPRPL4",83,0)
 ;
"RTN","RCDPRPL4",84,0)
ERAWL(RCSCR) ; Generate automatic dec adj from ERA Worklist in RCSCR
"RTN","RCDPRPL4",85,0)
 ; RCADJ returned = 1 if passed by reference and adjustment successful
"RTN","RCDPRPL4",86,0)
 ;       returned = 2 if passed by ref and adjustments aborted
"RTN","RCDPRPL4",87,0)
 ;       returned = -1 if error
"RTN","RCDPRPL4",88,0)
 ;       returned = 0 if no WL adjustments found
"RTN","RCDPRPL4",89,0)
 N RCZ,RCZ0,Z00,V00,RCCOM,RC1,RCADJ,RCOK,WLA
"RTN","RCDPRPL4",90,0)
 S RC1=1,RCZ=0,RCADJ=0
"RTN","RCDPRPL4",91,0)
 F  S RCZ=$O(^RCY(344.49,RCSCR,1,RCZ)) Q:'RCZ!(RCADJ=2)  S V00=$G(^(RCZ,0)),RCZ0=0 F  S RCZ0=$O(^RCY(344.49,RCSCR,1,RCZ,1,RCZ0)) Q:'RCZ0!(RCADJ=2)  S Z00=$G(^(RCZ0,0)) Q:"12"'[+$P(Z00,U,5)  D
"RTN","RCDPRPL4",92,0)
 . S RCCOM(1)=$P(Z00,U,9)
"RTN","RCDPRPL4",93,0)
 . I RC1,$P(Z00,U,5)=1 D  Q:RCADJ=2
"RTN","RCDPRPL4",94,0)
 .. S RC1=0
"RTN","RCDPRPL4",95,0)
 .. S DIR(0)="YA",DIR("B")="YES",DIR("A",1)="Generating automatic decrease adjustments from EDI Lbox Worklist ...",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: "
"RTN","RCDPRPL4",96,0)
 .. D ^DIR K DIR
"RTN","RCDPRPL4",97,0)
 .. I Y'=1 S RCADJ=2
"RTN","RCDPRPL4",98,0)
 . I $P(Z00,U,8)=1 D  Q  ; previously done
"RTN","RCDPRPL4",99,0)
 .. I $P(Z00,U,5)=1 W !,"  Automatic decrease adj from ERA Worklist for bill #"_$P($G(^PRCA(430,+$P(V00,U,7),0)),U),!,"    for amount of "_$J(+$P(Z00,U,3),"",2)_" was previously completed" S RCADJ=1
"RTN","RCDPRPL4",100,0)
 . I $P(Z00,U,5)=1 D  Q  ; Decrease adj
"RTN","RCDPRPL4",101,0)
 .. S WLA=$$INCDEC^RCBEUTR1($P(V00,U,7),$P(Z00,U,3),.RCCOM,,,1) I 'WLA D
"RTN","RCDPRPL4",102,0)
 ... ; PRCA276 - $$INCDEC can now return "0^1" which means a negative claim balance could have occurred if the decrease adjustment was applied to the claim
"RTN","RCDPRPL4",103,0)
 ... S RCADJ=-1 W !,"  Could not perform automatic decrease adj from ERA Worklist for ",!,"    bill # "_$P($G(^PRCA(430,+$P(V00,U,7),0)),U)_" for amount of "_$J(+$P(Z00,U,3),"",2)
"RTN","RCDPRPL4",104,0)
 ... I $P(WLA,U,2) D
"RTN","RCDPRPL4",105,0)
 .... S RCADJ=2
"RTN","RCDPRPL4",106,0)
 .... W !,"WARNING:  Receipt cannot be processed.",!,"Processing this receipt will cause this bill to have a negative balance",!,"which is outside the scope of VA Accounting regulations."
"RTN","RCDPRPL4",107,0)
 .... W !,"Correct the error and reprocess this receipt."
"RTN","RCDPRPL4",108,0)
 .. E  D  ; success
"RTN","RCDPRPL4",109,0)
 ... D UPD(RCSCR,RCZ,RCZ0)
"RTN","RCDPRPL4",110,0)
 ... S RCADJ=1
"RTN","RCDPRPL4",111,0)
 ... W !,"  EDI Lbox Worklist automatic dec adjustment made to "_$P($G(^PRCA(430,+$P(V00,U,7),0)),U)_": "_$J(+$P(Z00,U,3),"",2)
"RTN","RCDPRPL4",112,0)
 . I $P(Z00,U,5)=2 D  Q  ; Bill comment
"RTN","RCDPRPL4",113,0)
 .. D ADDCOMM^RCBEUTRA($P(V00,U,7),.RCCOM),UPD(RCSCR,RCZ,RCZ0)
"RTN","RCDPRPL4",114,0)
 ;
"RTN","RCDPRPL4",115,0)
 Q $G(RCADJ)
"RTN","RCDPRPL4",116,0)
 ;
"RTN","RCDPRPL4",117,0)
UPD(RCSCR,Z,Z0) ; Mark as complete so it doesn't get done twice
"RTN","RCDPRPL4",118,0)
 N DA,DIE,DR
"RTN","RCDPRPL4",119,0)
 S DA(2)=RCSCR,DA(1)=Z,DA=Z0
"RTN","RCDPRPL4",120,0)
 S DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,",DR=".08////1" D ^DIE
"RTN","RCDPRPL4",121,0)
 Q
"RTN","RCDPRPL4",122,0)
 ;
"RTN","RCDPRPLM")
0^13^B92487304
"RTN","RCDPRPLM",1,0)
RCDPRPLM ;;WISC/RFJ-receipt profile listmanager top routine ;1 Jun 99
"RTN","RCDPRPLM",2,0)
 ;;4.5;Accounts Receivable;**114,148,149,173,196,220,217,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPRPLM",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPRPLM",4,0)
 ;
"RTN","RCDPRPLM",5,0)
 N RCDPFXIT
"RTN","RCDPRPLM",6,0)
 ;
"RTN","RCDPRPLM",7,0)
RECTPROF ;  entry point called by link payment to prevent newing
"RTN","RCDPRPLM",8,0)
 ; fast exit var RCDPFXIT
"RTN","RCDPRPLM",9,0)
 N RCRECTDA
"RTN","RCDPRPLM",10,0)
 ;
"RTN","RCDPRPLM",11,0)
 F  D  Q:'RCRECTDA
"RTN","RCDPRPLM",12,0)
 . W !! S RCRECTDA=$$SELRECT^RCDPUREC(1)  ;allow adding new receipt
"RTN","RCDPRPLM",13,0)
 . I RCRECTDA<1 S RCRECTDA=0 Q
"RTN","RCDPRPLM",14,0)
 . D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPRPLM",15,0)
 . ; fast exit
"RTN","RCDPRPLM",16,0)
 . I $G(RCDPFXIT) S RCRECTDA=0
"RTN","RCDPRPLM",17,0)
 Q
"RTN","RCDPRPLM",18,0)
 ;
"RTN","RCDPRPLM",19,0)
 ;
"RTN","RCDPRPLM",20,0)
INIT ; init for list manager
"RTN","RCDPRPLM",21,0)
 N DATE,FMSDOC,GECSDA1,GECSDATA,RCCANCEL,RCDPDATA,RCDPFCAN,RCLINE,RCTOTAL,RCTRDA,SPACE,RCEFT,X,Z,Z0,RCZ,RCZ0,RCZ1,RCZ2,EFTFUND
"RTN","RCDPRPLM",22,0)
 K ^TMP("RCDPRPLM",$J),^TMP("VALM VIDEO",$J)
"RTN","RCDPRPLM",23,0)
 ;
"RTN","RCDPRPLM",24,0)
 ; fast exit
"RTN","RCDPRPLM",25,0)
 I $G(RCDPFXIT) S VALMQUIT=1 Q
"RTN","RCDPRPLM",26,0)
 ;
"RTN","RCDPRPLM",27,0)
 D DIQ344(RCRECTDA,".02:200")
"RTN","RCDPRPLM",28,0)
 ;
"RTN","RCDPRPLM",29,0)
 ; set listmanager line #
"RTN","RCDPRPLM",30,0)
 S RCLINE=0
"RTN","RCDPRPLM",31,0)
 ;
"RTN","RCDPRPLM",32,0)
 K ^TMP($J,"RCEFT")
"RTN","RCDPRPLM",33,0)
 S EFTFUND=$S(DT<$$ADDPTEDT^PRCAACC():"5287.4/8NZZ ",1:"528704/8NZZ ")
"RTN","RCDPRPLM",34,0)
 S RCEFT=+$O(^RCY(344.3,"ARDEP",+$P($G(^RCY(344,RCRECTDA,0)),U,6),0))
"RTN","RCDPRPLM",35,0)
 I RCEFT D
"RTN","RCDPRPLM",36,0)
 . S Z=0 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  S Z0=$G(^RCY(344.31,+Z,0)) I $P(Z0,U,14) S ^TMP($J,"RCEFT",$P(Z0,U,14))=Z_U_$E($P(Z0,U,2),1,12)
"RTN","RCDPRPLM",37,0)
 S RCTRDA=0 F  S RCTRDA=$O(^RCY(344,RCRECTDA,1,RCTRDA)) Q:'RCTRDA  D
"RTN","RCDPRPLM",38,0)
 . D DIQ34401(RCRECTDA,RCTRDA)
"RTN","RCDPRPLM",39,0)
 . S RCLINE=RCLINE+1 D SET("",RCLINE,1,80,.01)
"RTN","RCDPRPLM",40,0)
 . ;check for payment cancelled
"RTN","RCDPRPLM",41,0)
 . S RCCANCEL=0
"RTN","RCDPRPLM",42,0)
 . I $P($G(^RCY(344,RCRECTDA,1,RCTRDA,0)),"^",4)=0,$P($G(^(1)),"^")'="" D
"RTN","RCDPRPLM",43,0)
 . . S RCCANCEL=1,RCDPFCAN=1
"RTN","RCDPRPLM",44,0)
 . . D SET("**",RCLINE,5,6)
"RTN","RCDPRPLM",45,0)
 . ;account
"RTN","RCDPRPLM",46,0)
 . I $G(RCDPDATA(344.01,RCTRDA,.03,"E"))="" D
"RTN","RCDPRPLM",47,0)
 . . S RCDPDATA(344.01,RCTRDA,.03,"E")="[ "_$S(RCEFT:EFTFUND_$P($G(^TMP($J,"RCEFT",RCTRDA)),U,2),1:"suspense"_$$GETUNAPP^RCXFMSCR(RCRECTDA,RCTRDA,0))_" ]"
"RTN","RCDPRPLM",48,0)
 . D SET("",RCLINE,7,33,.03)
"RTN","RCDPRPLM",49,0)
 . ;date of payment
"RTN","RCDPRPLM",50,0)
 . I RCDPDATA(344.01,RCTRDA,.06,"I") D
"RTN","RCDPRPLM",51,0)
 . . D SET($E(RCDPDATA(344.01,RCTRDA,.06,"I"),4,5)_"/"_$E(RCDPDATA(344.01,RCTRDA,.06,"I"),6,7)_"/"_$E(RCDPDATA(344.01,RCTRDA,.06,"I"),2,3),RCLINE,35,42)
"RTN","RCDPRPLM",52,0)
 . ;entered by
"RTN","RCDPRPLM",53,0)
 . I RCDPDATA(344.01,RCTRDA,.12,"E")'="" D
"RTN","RCDPRPLM",54,0)
 . . S X=$E($P(RCDPDATA(344.01,RCTRDA,.12,"E"),",",2))_$E(RCDPDATA(344.01,RCTRDA,.12,"E"))
"RTN","RCDPRPLM",55,0)
 . . I RCDPDATA(344.01,RCTRDA,.12,"I")=.5 S X="ar"
"RTN","RCDPRPLM",56,0)
 . . D SET(X,RCLINE,45,46)
"RTN","RCDPRPLM",57,0)
 . I RCDPDATA(344.01,RCTRDA,.14,"E")'="" D
"RTN","RCDPRPLM",58,0)
 . . S X=$E($P(RCDPDATA(344.01,RCTRDA,.14,"E"),",",2))_$E(RCDPDATA(344.01,RCTRDA,.14,"E"))
"RTN","RCDPRPLM",59,0)
 . . D SET(X,RCLINE,54,55)
"RTN","RCDPRPLM",60,0)
 . D SET($J(RCDPDATA(344.01,RCTRDA,.04,"E"),8,2),RCLINE,62,70)
"RTN","RCDPRPLM",61,0)
 . D SET($J(RCDPDATA(344.01,RCTRDA,.05,"E"),8,2),RCLINE,72,80)
"RTN","RCDPRPLM",62,0)
 . ;
"RTN","RCDPRPLM",63,0)
 . ;if not processed, show if amount > bill
"RTN","RCDPRPLM",64,0)
 . S X=$$CHECKPAY^RCDPRPL3(RCRECTDA,RCTRDA) I X D
"RTN","RCDPRPLM",65,0)
 . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",66,0)
 . . D SET("  WARNING: Pending Payments ($ "_$J($P(X,"^",3),0,2)_") exceed amount billed ($ "_$J($P(X,"^",2),0,2)_")",RCLINE,1,80)
"RTN","RCDPRPLM",67,0)
 . ;
"RTN","RCDPRPLM",68,0)
 . ;show line 2 for check/credit payment
"RTN","RCDPRPLM",69,0)
 . I $$OPTCK^RCDPRPL2("SHOWCHECK",2) D
"RTN","RCDPRPLM",70,0)
 . . ;receipt type of payment is check
"RTN","RCDPRPLM",71,0)
 . . I RCDPDATA(344,RCRECTDA,.04,"I")=4!(RCDPDATA(344,RCRECTDA,.04,"I")=12) D  Q
"RTN","RCDPRPLM",72,0)
 . . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",73,0)
 . . . D SET("      Check #",RCLINE,1,80,.07)
"RTN","RCDPRPLM",74,0)
 . . . I 'RCDPDATA(344.01,RCTRDA,.1,"I") S RCDPDATA(344.01,RCTRDA,.1,"I")="???????"
"RTN","RCDPRPLM",75,0)
 . . . D SET("Date: "_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),4,5)_"/"_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),6,7)_"/"_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),2,3),RCLINE,32,80)
"RTN","RCDPRPLM",76,0)
 . . . D SET("Bank #",RCLINE,47,80,.08)
"RTN","RCDPRPLM",77,0)
 . . ;receipt type of payment is credit
"RTN","RCDPRPLM",78,0)
 . . I RCDPDATA(344,RCRECTDA,.04,"I")=7 D
"RTN","RCDPRPLM",79,0)
 . . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",80,0)
 . . . D SET("      Card #",RCLINE,1,80,.11)
"RTN","RCDPRPLM",81,0)
 . . . D SET("Confirmation #",RCLINE,35,80,.02)
"RTN","RCDPRPLM",82,0)
 . ;
"RTN","RCDPRPLM",83,0)
 . ;show line 3 for acct lookup, batch and seq #
"RTN","RCDPRPLM",84,0)
 . I $$OPTCK^RCDPRPL2("SHOWACCT",2) D
"RTN","RCDPRPLM",85,0)
 . . I RCDPDATA(344.01,RCTRDA,.21,"E")="",RCDPDATA(344.01,RCTRDA,.22,"E")="",RCDPDATA(344.01,RCTRDA,.23,"E")="" Q
"RTN","RCDPRPLM",86,0)
 . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",87,0)
 . . D SET("      AcctLU",RCLINE,1,80,.21)
"RTN","RCDPRPLM",88,0)
 . . D SET("Batch/Sequence: "_RCDPDATA(344.01,RCTRDA,.22,"E")_"/"_RCDPDATA(344.01,RCTRDA,.23,"E"),RCLINE,37,80)
"RTN","RCDPRPLM",89,0)
 . ;
"RTN","RCDPRPLM",90,0)
 . ;show if posting error
"RTN","RCDPRPLM",91,0)
 . I $$OPTCK^RCDPRPL2("SHOWCOMMENTS",2),RCDPDATA(344.01,RCTRDA,1.01,"E")'="" D
"RTN","RCDPRPLM",92,0)
 . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",93,0)
 . . S X="Posting Error"
"RTN","RCDPRPLM",94,0)
 . . I RCCANCEL S X="Cancel Data"
"RTN","RCDPRPLM",95,0)
 . . D SET("      "_X,RCLINE,1,80,1.01)
"RTN","RCDPRPLM",96,0)
 . ;
"RTN","RCDPRPLM",97,0)
 . ;show if comment
"RTN","RCDPRPLM",98,0)
 . I $$OPTCK^RCDPRPL2("SHOWCOMMENTS",2),RCDPDATA(344.01,RCTRDA,1.02,"E")'="" D
"RTN","RCDPRPLM",99,0)
 . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",100,0)
 . . D SET("      Comment",RCLINE,1,80,1.02)
"RTN","RCDPRPLM",101,0)
 . ;
"RTN","RCDPRPLM",102,0)
 . ;if EDI Lockbox pending adjustments, show it
"RTN","RCDPRPLM",103,0)
 . I $P($G(^RCY(344,RCRECTDA,0)),U,18),$G(RCDPDATA(344.01,RCTRDA,.27,"E")) D
"RTN","RCDPRPLM",104,0)
 . . S RCZ=$P(^RCY(344,RCRECTDA,0),U,18),RCZ0=RCDPDATA(344.01,RCTRDA,.27,"E")
"RTN","RCDPRPLM",105,0)
 . . S RCZ1=0 F  S RCZ1=$O(^RCY(344.49,RCZ,1,RCZ0,1,RCZ1)) Q:'RCZ1  S RCZ2=$G(^(RCZ1,0)) I $P(RCZ2,U,5)'="","12"[$P(RCZ2,U,5),'$P(RCZ2,U,8) D
"RTN","RCDPRPLM",106,0)
 . . . I $P(RCZ2,U,5)=1 S RCLINE=RCLINE+1 D SET("      Pending decrease adjustment for "_$J($P(RCZ2,U,3),"",2),RCLINE,1,80) Q
"RTN","RCDPRPLM",107,0)
 . . . I $$OPTCK^RCDPRPL2("SHOWCOMMENTS",2),$P(RCZ2,U,5)=2 S RCLINE=RCLINE+1 D SET("      Comment: "_$P(RCZ2,U,9),RCLINE,1,80) Q
"RTN","RCDPRPLM",108,0)
 . ;
"RTN","RCDPRPLM",109,0)
 . ;calculate totals
"RTN","RCDPRPLM",110,0)
 . S RCTOTAL(1)=$G(RCTOTAL(1))+RCDPDATA(344.01,RCTRDA,.04,"E")
"RTN","RCDPRPLM",111,0)
 . S RCTOTAL(2)=$G(RCTOTAL(2))+RCDPDATA(344.01,RCTRDA,.05,"E")
"RTN","RCDPRPLM",112,0)
 . ;
"RTN","RCDPRPLM",113,0)
 . ;kill local variable to prevent store errors
"RTN","RCDPRPLM",114,0)
 . K RCDPDATA(344.01,RCTRDA)
"RTN","RCDPRPLM",115,0)
 ;
"RTN","RCDPRPLM",116,0)
 ; show totals
"RTN","RCDPRPLM",117,0)
 K ^TMP($J,"RCEFT")
"RTN","RCDPRPLM",118,0)
 S RCLINE=RCLINE+1 D SET("",RCLINE,1,80)
"RTN","RCDPRPLM",119,0)
 D SET("--------  --------",RCLINE,62,80)
"RTN","RCDPRPLM",120,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",121,0)
 D SET("      TOTAL DOLLARS FOR RECEIPT",RCLINE,1,80)
"RTN","RCDPRPLM",122,0)
 D SET($J($G(RCTOTAL(1)),8,2),RCLINE,62,70)
"RTN","RCDPRPLM",123,0)
 D SET($J($G(RCTOTAL(2)),8,2),RCLINE,72,80)
"RTN","RCDPRPLM",124,0)
 ; show cancelled
"RTN","RCDPRPLM",125,0)
 I $G(RCDPFCAN) D
"RTN","RCDPRPLM",126,0)
 . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",127,0)
 . D SET("**indicates payment is CANCELLED",RCLINE,5,80)
"RTN","RCDPRPLM",128,0)
 ;
"RTN","RCDPRPLM",129,0)
 ; show history
"RTN","RCDPRPLM",130,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",131,0)
 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",132,0)
 ; start history on first line of a screen if it does not fit on
"RTN","RCDPRPLM",133,0)
 ; current screen
"RTN","RCDPRPLM",134,0)
 I (RCLINE#12)>8 F SPACE=(RCLINE#12):1:12 S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",135,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",136,0)
 D SET("Receipt History",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPRPLM",137,0)
 S DATE=RCDPDATA(344,RCRECTDA,.03,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",138,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",139,0)
 S SPACE="",$P(SPACE," ",80)=""
"RTN","RCDPRPLM",140,0)
 I RCDPDATA(344,RCRECTDA,.02,"I")=.5 S RCDPDATA(344,RCRECTDA,.02,"E")="accounts receivable"
"RTN","RCDPRPLM",141,0)
 D SET($E("   Opened By: "_RCDPDATA(344,RCRECTDA,.02,"E")_SPACE,1,39)_"Date/Time    Opened: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",142,0)
 S DATE=RCDPDATA(344,RCRECTDA,.12,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",143,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",144,0)
 I RCDPDATA(344,RCRECTDA,.11,"I")=.5 S RCDPDATA(344,RCRECTDA,.11,"E")="accounts receivable"
"RTN","RCDPRPLM",145,0)
 D SET($E("Last Edit By: "_RCDPDATA(344,RCRECTDA,.11,"E")_SPACE,1,39)_"Date/Time Last Edit: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",146,0)
 S DATE=RCDPDATA(344,RCRECTDA,.08,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",147,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",148,0)
 I RCDPDATA(344,RCRECTDA,.07,"I")=.5 S RCDPDATA(344,RCRECTDA,.07,"E")="accounts receivable"
"RTN","RCDPRPLM",149,0)
 D SET($E("Processed By: "_RCDPDATA(344,RCRECTDA,.07,"E")_SPACE,1,39)_"Date/Time Processed: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",150,0)
 ;
"RTN","RCDPRPLM",151,0)
 ;show fms code sheets if switch on
"RTN","RCDPRPLM",152,0)
 I $$OPTCK^RCDPRPL2("SHOWFMS",2) D
"RTN","RCDPRPLM",153,0)
 . S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPLM",154,0)
 . S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",155,0)
 . S RCLINE=RCLINE+1 D SET("FMS Cash Receipt Document:",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPRPLM",156,0)
 . D SET($P(FMSDOC,"^")_$S($P(FMSDOC,"^",3):"(on deposit)",1:""),RCLINE,28,80)
"RTN","RCDPRPLM",157,0)
 . D SET("Status: "_$P(FMSDOC,"^",2),RCLINE,55,80)
"RTN","RCDPRPLM",158,0)
 . N DIQ2 D DATA^GECSSGET($P(FMSDOC,"^"),1)
"RTN","RCDPRPLM",159,0)
 . I '$G(GECSDATA) Q
"RTN","RCDPRPLM",160,0)
 . S GECSDA1=0 F  S GECSDA1=$O(GECSDATA(2100.1,GECSDATA,10,GECSDA1)) Q:'GECSDA1  D
"RTN","RCDPRPLM",161,0)
 . . S RCLINE=RCLINE+1 D SET(GECSDATA(2100.1,GECSDATA,10,GECSDA1),RCLINE,1,80)
"RTN","RCDPRPLM",162,0)
 ;
"RTN","RCDPRPLM",163,0)
 ; show EEOB detail if switch on
"RTN","RCDPRPLM",164,0)
 D SHEOB^RCDPRPL2
"RTN","RCDPRPLM",165,0)
 ;
"RTN","RCDPRPLM",166,0)
 ; set valmcnt to # of lines in list
"RTN","RCDPRPLM",167,0)
 S VALMCNT=RCLINE
"RTN","RCDPRPLM",168,0)
 D HDR
"RTN","RCDPRPLM",169,0)
 Q
"RTN","RCDPRPLM",170,0)
 ;
"RTN","RCDPRPLM",171,0)
 ;
"RTN","RCDPRPLM",172,0)
SET(STRING,LINE,COLBEG,COLEND,FIELD,ON,OFF) ;  set array
"RTN","RCDPRPLM",173,0)
 I $G(FIELD) S STRING=STRING_$S(STRING="":"",1:": ")_$G(RCDPDATA(344.01,RCTRDA,FIELD,"E"))
"RTN","RCDPRPLM",174,0)
 I STRING="",'$G(FIELD) D SET^VALM10(LINE,$J("",80)) Q
"RTN","RCDPRPLM",175,0)
 I '$D(@VALMAR@(LINE,0)) D SET^VALM10(LINE,$J("",80))
"RTN","RCDPRPLM",176,0)
 D SET^VALM10(LINE,$$SETSTR^VALM1(STRING,@VALMAR@(LINE,0),COLBEG,COLEND-COLBEG+1))
"RTN","RCDPRPLM",177,0)
 I $G(ON)]""!($G(OFF)]"") D CNTRL^VALM10(LINE,COLBEG,$L(STRING),ON,OFF)
"RTN","RCDPRPLM",178,0)
 Q
"RTN","RCDPRPLM",179,0)
 ;
"RTN","RCDPRPLM",180,0)
 ;
"RTN","RCDPRPLM",181,0)
DIQ344(DA,DR) ; retrieves data for flds in file 344
"RTN","RCDPRPLM",182,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPRPLM",183,0)
 K RCDPDATA(344,DA)
"RTN","RCDPRPLM",184,0)
 S DIQ(0)="IE",DIC="^RCY(344,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPRPLM",185,0)
 Q
"RTN","RCDPRPLM",186,0)
 ;
"RTN","RCDPRPLM",187,0)
 ;
"RTN","RCDPRPLM",188,0)
DIQ34401(DA,SUBDA) ; retrieves data for flds in file 344
"RTN","RCDPRPLM",189,0)
 ; da = receipt da
"RTN","RCDPRPLM",190,0)
 N %I,D0,DIC,DIQ,DIQ2,DR
"RTN","RCDPRPLM",191,0)
 K RCDPDATA(344.01,SUBDA)
"RTN","RCDPRPLM",192,0)
 S DR=1,DR(344.01)=".01:1.02",DA(344.01)=SUBDA
"RTN","RCDPRPLM",193,0)
 S DIQ(0)="IE",DIC="^RCY(344,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPRPLM",194,0)
 Q
"RTN","RCDPRPLM",195,0)
 ;
"RTN","RCDPRPLM",196,0)
 ;
"RTN","RCDPRPLM",197,0)
HDR ; header code for list manager display
"RTN","RCDPRPLM",198,0)
 N DATE,DEPIEN,EFTIEN,ERAIEN,FMSDOC,FMSTTR,PAYER,RCDPDATA,RCEFT,SPACE,XX,Z
"RTN","RCDPRPLM",199,0)
 D DIQ344(RCRECTDA,".01;.04;.06;.08;.14;.17;.18;")
"RTN","RCDPRPLM",200,0)
 S SPACE="",$P(SPACE," ",80)=""
"RTN","RCDPRPLM",201,0)
 ;
"RTN","RCDPRPLM",202,0)
 ; PRCA*4.5*321 - Start of modified code block
"RTN","RCDPRPLM",203,0)
 S XX=$E("   Receipt #: "_RCDPDATA(344,RCRECTDA,.01,"E")_SPACE,1,39)
"RTN","RCDPRPLM",204,0)
 S XX=XX_"Type of Payment: "_RCDPDATA(344,RCRECTDA,.04,"E")
"RTN","RCDPRPLM",205,0)
 S VALMHDR(1)=XX
"RTN","RCDPRPLM",206,0)
 ;
"RTN","RCDPRPLM",207,0)
 S Z=RCDPDATA(344,RCRECTDA,.06,"E")
"RTN","RCDPRPLM",208,0)
 S DEPIEN=+$P($G(^RCY(344,RCRECTDA,0)),U,6)
"RTN","RCDPRPLM",209,0)
 S RCEFT=+$O(^RCY(344.3,"ARDEP",DEPIEN,0))
"RTN","RCDPRPLM",210,0)
 S EFTIEN=RCDPDATA(344,RCRECTDA,.17,"I")
"RTN","RCDPRPLM",211,0)
 S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPLM",212,0)
 S FMSTTR=$S($P(FMSDOC,"-",1)="TR":1,1:0)
"RTN","RCDPRPLM",213,0)
 S XX=""
"RTN","RCDPRPLM",214,0)
 I 'RCEFT&'EFTIEN D  ;
"RTN","RCDPRPLM",215,0)
 . S XX="   Deposit #: "_Z
"RTN","RCDPRPLM",216,0)
 E  D  ;
"RTN","RCDPRPLM",217,0)
 . I RCEFT D  ;
"RTN","RCDPRPLM",218,0)
 . . S XX=" EFT Deposit: "_Z
"RTN","RCDPRPLM",219,0)
 . E  D  ;
"RTN","RCDPRPLM",220,0)
 . . ; PRCA*4.5*321 - Since EFT and ERA are now displayed on their own line, put TIN/Payer here 
"RTN","RCDPRPLM",221,0)
 . . N TIN
"RTN","RCDPRPLM",222,0)
 . . S PAYER=$$GET1^DIQ(344.31,EFTIEN_",",.02,"E")
"RTN","RCDPRPLM",223,0)
 . . S TIN=$$GET1^DIQ(344.31,EFTIEN_",",.03,"E")
"RTN","RCDPRPLM",224,0)
 . . S XX="   Payer: "_TIN_"/"_PAYER
"RTN","RCDPRPLM",225,0)
 S XX=$E(XX_SPACE,1,39)
"RTN","RCDPRPLM",226,0)
 S XX=XX_" Receipt Status: "_RCDPDATA(344,RCRECTDA,.14,"E")
"RTN","RCDPRPLM",227,0)
 S VALMHDR(2)=XX
"RTN","RCDPRPLM",228,0)
 ;
"RTN","RCDPRPLM",229,0)
 S ERAIEN=RCDPDATA(344,RCRECTDA,.18,"I")
"RTN","RCDPRPLM",230,0)
 S XX=""
"RTN","RCDPRPLM",231,0)
 I FMSTTR!ERAIEN S XX="   ERA #: "_RCDPDATA(344,RCRECTDA,.18,"E")
"RTN","RCDPRPLM",232,0)
 S XX=$E(XX_SPACE,1,21)
"RTN","RCDPRPLM",233,0)
 I FMSTTR!ERAIEN S XX=XX_"ERA TTL: "_$J($$GET1^DIQ(344.4,ERAIEN_",",.05,"E"),9)
"RTN","RCDPRPLM",234,0)
 S XX=$E(XX_SPACE,1,39)
"RTN","RCDPRPLM",235,0)
 ; get fms document and status
"RTN","RCDPRPLM",236,0)
 S XX=XX_" FMS Document: "_$TR($P(FMSDOC,"^")," ")_$S($P(FMSDOC,"^",3):"(on deposit)",1:"")
"RTN","RCDPRPLM",237,0)
 S VALMHDR(3)=XX
"RTN","RCDPRPLM",238,0)
 ;
"RTN","RCDPRPLM",239,0)
 S XX=""
"RTN","RCDPRPLM",240,0)
 I FMSTTR!EFTIEN S XX="   EFT #: "_$$GET1^DIQ(344.31,EFTIEN_",",.01,"I")_"."_$$GET1^DIQ(344.31,EFTIEN_",",.14) ; PRCA*4.5*326
"RTN","RCDPRPLM",241,0)
 S XX=$E(XX_SPACE,1,21)
"RTN","RCDPRPLM",242,0)
 I FMSTTR!EFTIEN S XX=XX_"EFT TTL: "_$J($$GET1^DIQ(344.31,EFTIEN_",",.07,"E"),9)_" "
"RTN","RCDPRPLM",243,0)
 S XX=$E(XX_SPACE,1,39)
"RTN","RCDPRPLM",244,0)
 S XX=XX_" FMS Doc Status: "_$P(FMSDOC,"^",2)
"RTN","RCDPRPLM",245,0)
 S VALMHDR(4)=XX
"RTN","RCDPRPLM",246,0)
 ; PRCA*4.5*321 - End of modified code block
"RTN","RCDPRPLM",247,0)
 ;
"RTN","RCDPRPLM",248,0)
 I RCDPDATA(344,RCRECTDA,.08,"I") S VALMSG="Receipt processed on "_RCDPDATA(344,RCRECTDA,.08,"E")
"RTN","RCDPRPLM",249,0)
 Q
"RTN","RCDPRPLM",250,0)
 ;
"RTN","RCDPRPLM",251,0)
 ;
"RTN","RCDPRPLM",252,0)
EXIT ; exit option/clean up
"RTN","RCDPRPLM",253,0)
 K ^TMP("RCDPRPLM",$J)
"RTN","RCDPRPLM",254,0)
 Q
"RTN","RCDPRU")
0^23^B191751308
"RTN","RCDPRU",1,0)
RCDPRU ;ALB/TJB - CARC REPORT ON PAYER OR CARC CODE ;9/15/14 3:00pm
"RTN","RCDPRU",2,0)
 ;;4.5;Accounts Receivable;**303,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPRU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPRU",4,0)
 Q
"RTN","RCDPRU",5,0)
 ; PRCA*4.5*303 - CARC and Payer report utilities
"RTN","RCDPRU",6,0)
 ; IA 594 - ACCOUNTS RECEIVABLE CATEGORY file (#430.2)
"RTN","RCDPRU",7,0)
 ; IA 1077 - Using DIVISION^VAUTOMA to query for division
"RTN","RCDPRU",8,0)
 ; IA 1992 - BILL/CLAIMS file (#399)
"RTN","RCDPRU",9,0)
 ; IA 3820 - BILL/CLAIMS file (#399)
"RTN","RCDPRU",10,0)
 ; IA 3822 - RATE TYPE file (#399.3)
"RTN","RCDPRU",11,0)
 ; IA 4051 - EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPRU",12,0)
 ; IA 4996 - BILL/CLAIMS file (#399)
"RTN","RCDPRU",13,0)
 ;
"RTN","RCDPRU",14,0)
DISPTY() ; function, ask display/output type
"RTN","RCDPRU",15,0)
         ; processes input from user
"RTN","RCDPRU",16,0)
         ; returns: Output destination (0=Display, 1=MS Excel, -1=timeout or '^)
"RTN","RCDPRU",17,0)
 N DIR,DUOUT,DIRUT,X,Y
"RTN","RCDPRU",18,0)
 S DIR(0)="YA",DIR("A")="Export the report to Microsoft Excel? (Y/N): ",DIR("B")="NO"
"RTN","RCDPRU",19,0)
 D ^DIR
"RTN","RCDPRU",20,0)
 I $D(DUOUT)!$D(DIRUT) S Y=-1
"RTN","RCDPRU",21,0)
 Q Y
"RTN","RCDPRU",22,0)
 ;
"RTN","RCDPRU",23,0)
INFO ; Useful Info for Excel capture
"RTN","RCDPRU",24,0)
 N SP S SP=$J(" ",10)  ; spaces
"RTN","RCDPRU",25,0)
 W !!!,SP_"Before continuing, please set up your terminal to capture the"
"RTN","RCDPRU",26,0)
 W !,SP_"report data as this report may take a while to run."
"RTN","RCDPRU",27,0)
 W !!,SP_"To avoid undesired wrapping of the data saved to the"
"RTN","RCDPRU",28,0)
 W !,SP_"file, please enter '0;256;999' at the 'DEVICE:' prompt."
"RTN","RCDPRU",29,0)
 W !!,SP_"It may be necessary to set the terminal's display width"
"RTN","RCDPRU",30,0)
 W !,SP_"to 256 characters, which can be performed by selecting the"
"RTN","RCDPRU",31,0)
 W !,SP_"Display option located within the 'Setup' menu on the"
"RTN","RCDPRU",32,0)
 W !,SP_"tool bar of the terminal emulation software (e.g. KEA,"
"RTN","RCDPRU",33,0)
 W !,SP_"Reflection, or Smarterm).",!!
"RTN","RCDPRU",34,0)
 Q
"RTN","RCDPRU",35,0)
 ;
"RTN","RCDPRU",36,0)
ASK(RCSTOP) ; User if you want to quit or continue
"RTN","RCDPRU",37,0)
 S RCSTOP=0
"RTN","RCDPRU",38,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPRU",39,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPRU",40,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPRU",41,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPRU",42,0)
 Q
"RTN","RCDPRU",43,0)
 ;
"RTN","RCDPRU",44,0)
UP(TEXT) ; Translate text to upper case
"RTN","RCDPRU",45,0)
 Q $$UP^XLFSTR($G(TEXT))
"RTN","RCDPRU",46,0)
 ;
"RTN","RCDPRU",47,0)
DATE(X,F) ; date in external format
"RTN","RCDPRU",48,0)
 I $G(F)="" S F="2Z" ; set date to return mm/dd/yy 
"RTN","RCDPRU",49,0)
 Q $$FMTE^XLFDT(X,F)
"RTN","RCDPRU",50,0)
 ;
"RTN","RCDPRU",51,0)
NOW(F) ; Date/Time of right now in external format
"RTN","RCDPRU",52,0)
 S:$G(F)="" F=1 ; Date format Mon dd, yyyy@hh:mm:ss see kernel documentation
"RTN","RCDPRU",53,0)
 Q $$FMTE^XLFDT($$NOW^XLFDT,F)
"RTN","RCDPRU",54,0)
 ;
"RTN","RCDPRU",55,0)
VAL(XF,CODE) ; Validate a range or list of CARC (345), RARC (346) or PLB (345.1) Codes
"RTN","RCDPRU",56,0)
 ; If invalid code is found VAILD = 0 and CODE will contain the offending codes
"RTN","RCDPRU",57,0)
 N VALID,ELEM,I,RNG1,RNG2,O1,O2,NWCD,RET S RET=""
"RTN","RCDPRU",58,0)
 S VALID=1,NWCD=$TR(CODE,";",":"),NWCD=$TR(NWCD,"-",":") ; Fix ";" or "-" to ":" (colons) for parsing
"RTN","RCDPRU",59,0)
 F I=1:1 S ELEM=$P(NWCD,",",I) Q:ELEM=""  D
"RTN","RCDPRU",60,0)
 .; Is this a single code or range:
"RTN","RCDPRU",61,0)
 .I $L(ELEM,":")>2 S VALID=0,RET=$$PUSH(.RET,ELEM) Q
"RTN","RCDPRU",62,0)
 .I ELEM[":" D  Q  ; Range
"RTN","RCDPRU",63,0)
 ..S RNG1=$P(ELEM,":",1),RNG2=$P(ELEM,":",2)
"RTN","RCDPRU",64,0)
 ..;Lookup the codes
"RTN","RCDPRU",65,0)
 ..S O1=$O(^RC(XF,"B",RNG1),-1),O1=$O(^RC(XF,"B",O1))
"RTN","RCDPRU",66,0)
 ..S O2=$O(^RC(XF,"B",RNG2),-1),O2=$O(^RC(XF,"B",O2))
"RTN","RCDPRU",67,0)
 ..I RNG1'=O1 S VALID=0,RET=$$PUSH(.RET,RNG1)
"RTN","RCDPRU",68,0)
 ..I RNG2'=O2 S VALID=0,RET=$$PUSH(.RET,RNG2)
"RTN","RCDPRU",69,0)
 .E  D
"RTN","RCDPRU",70,0)
 ..;Validate individual items
"RTN","RCDPRU",71,0)
 ..S O1=$O(^RC(XF,"B",ELEM),-1),O1=$O(^RC(XF,"B",O1))
"RTN","RCDPRU",72,0)
 ..I ELEM'=O1 S VALID=0,RET=$$PUSH(.RET,ELEM)
"RTN","RCDPRU",73,0)
 ;
"RTN","RCDPRU",74,0)
 S:VALID CODE=NWCD
"RTN","RCDPRU",75,0)
 S:'VALID CODE=RET
"RTN","RCDPRU",76,0)
 Q VALID
"RTN","RCDPRU",77,0)
 ;
"RTN","RCDPRU",78,0)
ACT(XF,CODE,DATE) ; Is the code active on Date
"RTN","RCDPRU",79,0)
 ; If code is active return 1. If no date use today, date should be in fileman format.
"RTN","RCDPRU",80,0)
 N VALID,XIEN,XDT S VALID=0
"RTN","RCDPRU",81,0)
 I '$D(XF) Q VALID  ; No file return 0
"RTN","RCDPRU",82,0)
 I $G(CODE)="" Q VALID  ; No code return 0
"RTN","RCDPRU",83,0)
 S:'$D(DATE) DATE=$$DT^XLFDT
"RTN","RCDPRU",84,0)
 S XIEN=$$FIND1^DIC(XF,,"O",CODE)
"RTN","RCDPRU",85,0)
 I XIEN="" Q VALID  ; No IEN for this code return 0
"RTN","RCDPRU",86,0)
 S XDT=$$GET1^DIQ(XF,XIEN_",",2,"I") ; Get date in FM format
"RTN","RCDPRU",87,0)
 S:XDT="" VALID=1 ; No stop date so it is active
"RTN","RCDPRU",88,0)
 I (XDT'="")&(XDT>DATE) S VALID=1
"RTN","RCDPRU",89,0)
 Q VALID
"RTN","RCDPRU",90,0)
 ;
"RTN","RCDPRU",91,0)
PUSH(VAR,VALUE) ;
"RTN","RCDPRU",92,0)
 Q:VAR="" VALUE ; Empty variable
"RTN","RCDPRU",93,0)
 Q VAR_U_VALUE
"RTN","RCDPRU",94,0)
 ;
"RTN","RCDPRU",95,0)
RNG(TYPE,ITEM,ARRAY) ; EP
"RTN","RCDPRU",96,0)
 ; Collect data in a list or range to an array
"RTN","RCDPRU",97,0)
 ; Input:   TYPE            - Type of data being collected
"RTN","RCDPRU",98,0)
 ;                            CARC  - Carc codes
"RTN","RCDPRU",99,0)
 ;                            PAYER - Payer names
"RTN","RCDPRU",100,0)
 ;                            PLB   - Provider Level Balance Codes
"RTN","RCDPRU",101,0)
 ;                            TIN   - Payer IDs
"RTN","RCDPRU",102,0)
 ;          ITEM            - Comma delimitted list of codes and/or ranges to parse
"RTN","RCDPRU",103,0)
 ; Output:  ARRAY           - Array containing all of the data parsed from ITEM
"RTN","RCDPRU",104,0)
 I $G(ITEM)="ALL"!($G(ITEM)="A") S ARRAY(TYPE)="ALL" Q
"RTN","RCDPRU",105,0)
 N DELIM,ELEM,I,NW,X1,X2
"RTN","RCDPRU",106,0)
 ;
"RTN","RCDPRU",107,0)
 ; Before processing CARC and PLB Codes, translate any dashes found in ranges
"RTN","RCDPRU",108,0)
 ; to colons
"RTN","RCDPRU",109,0)
 I TYPE'="PAYER",TYPE'="TIN" D
"RTN","RCDPRU",110,0)
 . S NW=$TR(ITEM,";",":"),NW=$TR(NW,"-",":"),DELIM=":"
"RTN","RCDPRU",111,0)
 E  D  ;
"RTN","RCDPRU",112,0)
 . S NW=ITEM
"RTN","RCDPRU",113,0)
 . S DELIM="~:~"
"RTN","RCDPRU",114,0)
 ;
"RTN","RCDPRU",115,0)
 ; Process each code or range int the comma delimitted list
"RTN","RCDPRU",116,0)
 F I=1:1 S ELEM=$P(NW,",",I) Q:ELEM=""  D
"RTN","RCDPRU",117,0)
 . ; Single element set into array 
"RTN","RCDPRU",118,0)
 . I ELEM'[DELIM S ARRAY(TYPE,ELEM)=1 Q
"RTN","RCDPRU",119,0)
 . D RNGIT(TYPE,ELEM,DELIM,.ARRAY)
"RTN","RCDPRU",120,0)
 Q
"RTN","RCDPRU",121,0)
 ;
"RTN","RCDPRU",122,0)
RNGIT(TYPE,ITEM,DELIM,ZAR) ; Process ranges for CARC/PLB/PAYER/TIN
"RTN","RCDPRU",123,0)
 ; Input:   TYPE            - Type of data being collected
"RTN","RCDPRU",124,0)
 ;                            CARC  - Carc codes
"RTN","RCDPRU",125,0)
 ;                            PAYER - Payer names
"RTN","RCDPRU",126,0)
 ;                            PLB   - Provider Level Balance Codes
"RTN","RCDPRU",127,0)
 ;                            TIN   - Payer IDs
"RTN","RCDPRU",128,0)
 ;          ITEM            - Code or Code range being processed
"RTN","RCDPRU",129,0)
 ;          DELIM           - Range delimitter to use
"RTN","RCDPRU",130,0)
 ; Output:  ZAR             - Array containing all of the data parsed from ITEM
"RTN","RCDPRU",131,0)
 N ELEM,FILE,IDX,O1,X1,X2,ZGBL
"RTN","RCDPRU",132,0)
 ;
"RTN","RCDPRU",133,0)
 ; Set file # and index for the range lookup
"RTN","RCDPRU",134,0)
 S FILE=$S(TYPE="CARC":345,TYPE="PAYER":344.6,TYPE="TIN":344.6,TYPE="PLB":345.1,1:0)
"RTN","RCDPRU",135,0)
 S IDX=$S(TYPE="CARC":"B",TYPE="PAYER":"B",TYPE="TIN":"C",TYPE="PLB":"B",1:0)
"RTN","RCDPRU",136,0)
 ;
"RTN","RCDPRU",137,0)
 ; Get closed root of the Global
"RTN","RCDPRU",138,0)
 S ZGBL=$$ROOT^DILFD(FILE,"",1,"")
"RTN","RCDPRU",139,0)
 Q:ZGBL=""
"RTN","RCDPRU",140,0)
 ;
"RTN","RCDPRU",141,0)
 ; Process range of things in ITEM
"RTN","RCDPRU",142,0)
 S X1=$P(ITEM,DELIM,1),X2=$P(ITEM,DELIM,2)
"RTN","RCDPRU",143,0)
 S O1=$O(@ZGBL@(IDX,X1),-1)                 ; Set the start
"RTN","RCDPRU",144,0)
 F  S O1=$O(@ZGBL@(IDX,O1)) Q:(O1="")!($$AFTER(O1,X2))  S ZAR(TYPE,O1)=1
"RTN","RCDPRU",145,0)
 Q
"RTN","RCDPRU",146,0)
 ;
"RTN","RCDPRU",147,0)
AFTER(ZZ1,ZZ2) ; Is ZZ1 after (or collates after) ZZ2
"RTN","RCDPRU",148,0)
 N XZ1,XZ2
"RTN","RCDPRU",149,0)
 S XZ1=+ZZ1,XZ2=+ZZ2
"RTN","RCDPRU",150,0)
 I (XZ1'=0)&(XZ2'=0) Q (XZ1>XZ2)  ; Numeric
"RTN","RCDPRU",151,0)
 I (XZ1=0)&(XZ2'=0) Q 1  ; XZ1 not numeric, XZ2 numeric, XZ1 is after XZ2
"RTN","RCDPRU",152,0)
 I (XZ1=0)&(XZ2=0) Q (ZZ1]ZZ2)  ; Both not numeric see if XZ1 collates after XZ2
"RTN","RCDPRU",153,0)
 Q 1 ; Default to after 
"RTN","RCDPRU",154,0)
 ;
"RTN","RCDPRU",155,0)
GLIST(FILE,IDX,GLARR) ;Build list for this file
"RTN","RCDPRU",156,0)
 ; Build list of available payers
"RTN","RCDPRU",157,0)
 N CNT,RCPAY S CNT=0,RCPAY=""
"RTN","RCDPRU",158,0)
 F  S RCPAY=$O(^RCY(FILE,IDX,RCPAY)) Q:RCPAY=""  D
"RTN","RCDPRU",159,0)
 .S CNT=CNT+1
"RTN","RCDPRU",160,0)
 .S @GLARR@(CNT)=RCPAY
"RTN","RCDPRU",161,0)
 .S @GLARR@(IDX,RCPAY,CNT)=""
"RTN","RCDPRU",162,0)
 ;
"RTN","RCDPRU",163,0)
 Q
"RTN","RCDPRU",164,0)
 ;
"RTN","RCDPRU",165,0)
GETPAY(RCPAY) ; EP
"RTN","RCDPRU",166,0)
 ; Get selected payers using file 344.6
"RTN","RCDPRU",167,0)
 ; Note: Similar to GETPAY^RCDPEM9 except that method uses 344.4 or 344.31
"RTN","RCDPRU",168,0)
 ; Input:   None
"RTN","RCDPRU",169,0)
 ; Output:  RCPAY       - ALL if all payers selected
"RTN","RCDPRU",170,0)
 ;          RCPAY(DATA) - 'ALL' - all payers selected
"RTN","RCDPRU",171,0)
 ; Returns: 1 - Payer selection made, 0 otherwise
"RTN","RCDPRU",172,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,EX,RCLPAY,Y
"RTN","RCDPRU",173,0)
 S EX=1 ; Exit status
"RTN","RCDPRU",174,0)
 S DIR("A")="Select (A)ll or (R)ange of 835 Payer Names?: "
"RTN","RCDPRU",175,0)
 S DIR(0)="SA^A:All Payer Names;R:Range or List of Payer Names"
"RTN","RCDPRU",176,0)
 S DIR("B")="ALL"
"RTN","RCDPRU",177,0)
 D ^DIR
"RTN","RCDPRU",178,0)
 K DIR
"RTN","RCDPRU",179,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S EX=0 Q EX
"RTN","RCDPRU",180,0)
 S RCLPAY=Y
"RTN","RCDPRU",181,0)
 I $G(Y)="A" S RCPAY="ALL",RCPAY("DATA")="ALL" Q EX
"RTN","RCDPRU",182,0)
 ;
"RTN","RCDPRU",183,0)
 ; Get Range of 835 Payers
"RTN","RCDPRU",184,0)
 I RCLPAY="R" S EX=$$GETRNG(.RCPAY,"P"),RCPAY="R"
"RTN","RCDPRU",185,0)
 Q EX
"RTN","RCDPRU",186,0)
 ;
"RTN","RCDPRU",187,0)
GETTIN(RCTIN) ; EP
"RTN","RCDPRU",188,0)
 ; Get selected Payer TINs
"RTN","RCDPRU",189,0)
 ; Input:   None
"RTN","RCDPRU",190,0)
 ; Output:  RCTIN       - ALL if all payer TINs selected
"RTN","RCDPRU",191,0)
 ;          RCPAY(DATA) - 'ALL' - all payer TINs selected
"RTN","RCDPRU",192,0)
 ; Returns: 1 - Payer selection made, 0 otherwise
"RTN","RCDPRU",193,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,EX,RCTLIST,X,Y
"RTN","RCDPRU",194,0)
 S EX=1 ; Exit status
"RTN","RCDPRU",195,0)
 S DIR("A")="Select (A)ll or (R)ange of 835 Payer TINs?: "
"RTN","RCDPRU",196,0)
 S DIR(0)="SA^A:All Payer TINs;R:Range or List of Payer TINs"
"RTN","RCDPRU",197,0)
 S DIR("B")="ALL"
"RTN","RCDPRU",198,0)
 D ^DIR K DIR
"RTN","RCDPRU",199,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S EX=0 Q EX
"RTN","RCDPRU",200,0)
 S RCTLIST=Y
"RTN","RCDPRU",201,0)
 I $G(Y)="A" S RCTIN="ALL",RCTIN("DATA")="ALL" Q EX
"RTN","RCDPRU",202,0)
 ;
"RTN","RCDPRU",203,0)
 ; Get Range of 835 Payer TINs
"RTN","RCDPRU",204,0)
 I RCTLIST="R" S EX=$$GETRNG(.RCTIN,"T"),RCTIN="R"
"RTN","RCDPRU",205,0)
 Q EX
"RTN","RCDPRU",206,0)
 ;
"RTN","RCDPRU",207,0)
GETRNG(RTNARR,TYPE) ; Allows the user to specify a payer name or TIN range
"RTN","RCDPRU",208,0)
 ; Input:   TYPE            - 'P' - Payer Name range selection
"RTN","RCDPRU",209,0)
 ;                            'T' - Payer TIN range selection
"RTN","RCDPRU",210,0)
 ; Output:  RTNARR          - 'ERROR' - Invalid TYPE of range selected
"RTN","RCDPRU",211,0)
 ;          RTNARR(DATA)    - A1~:~A2 Where:
"RTN","RCDPRU",212,0)
 ;                             A1 - External Payer Name or TIN of selected 
"RTN","RCDPRU",213,0)
 ;                                  344.6 Payer for range start
"RTN","RCDPRU",214,0)
 ;                             A2 - External Payer Name or TIN of selected
"RTN","RCDPRU",215,0)
 ;                                  344.6 Payer for range end
"RTN","RCDPRU",216,0)
 ;          RTNARR(START)   - Starting Range Value A1^A2^A3^A4 Where:
"RTN","RCDPRU",217,0)
 ;                             A1 - Internal IEN of selected 344.6 Payer for
"RTN","RCDPRU",218,0)
 ;                                   range start
"RTN","RCDPRU",219,0)
 ;                             A2 - External Payer Name or TIN for range start
"RTN","RCDPRU",220,0)
 ;                             A3 - Internal IEN of selected 344.6 Payer for
"RTN","RCDPRU",221,0)
 ;                                  range start
"RTN","RCDPRU",222,0)
 ;                             A4 - External Payer Name or TIN for range end
"RTN","RCDPRU",223,0)
 ;          RTNARR(END)     - Ending Range Value A1^A2^A3^A4 Where:
"RTN","RCDPRU",224,0)
 ;                             A1 - Internal IEN of selected 344.6 Payer for 
"RTN","RCDPRU",225,0)
 ;                                  range end
"RTN","RCDPRU",226,0)
 ;                             A2 - External Payer Name or TIN for range end
"RTN","RCDPRU",227,0)
 ;                             A3 - Internal IEN of selected 344.6 for range end
"RTN","RCDPRU",228,0)
 ;                             A4 - External Payer Name or TIN for range end
"RTN","RCDPRU",229,0)
 N D,DIC,DIROUT,DIRUT,DTOUT,DUOUT,IDX,RCDTN,RCDN,RCPT,X,Y
"RTN","RCDPRU",230,0)
 I $G(TYPE)=""!("PT"'[$G(TYPE)) S RTNARR="ERROR" Q  ; Quit if TYPE not correct
"RTN","RCDPRU",231,0)
 S IDX=$S(TYPE="P":"B",TYPE="T":"C")
"RTN","RCDPRU",232,0)
 K DIC
"RTN","RCDPRU",233,0)
 S DIC="^RCY(344.6,",DIC(0)="AES",D=IDX
"RTN","RCDPRU",234,0)
 S DIC("A")="Start with 835 "_$S(TYPE="P":"Payer Name",TYPE="T":"Payer TIN")_": "
"RTN","RCDPRU",235,0)
 I TYPE="P" S DIC("W")="D EN^DDIOL($P(^(0),U,2),,""?35"")"
"RTN","RCDPRU",236,0)
 E  S DIC("W")="D EN^DDIOL($P(^(0),U,1),,""?35"")"
"RTN","RCDPRU",237,0)
 D IX^DIC
"RTN","RCDPRU",238,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")!(Y=-1) Q 0
"RTN","RCDPRU",239,0)
 S RCDN=$O(^RCY(344.6,IDX,X,""))
"RTN","RCDPRU",240,0)
 S RTNARR("START")=RCDN_U_X_U_Y,RTNARR("DATA")=X
"RTN","RCDPRU",241,0)
 ;
"RTN","RCDPRU",242,0)
 K DIC
"RTN","RCDPRU",243,0)
 S DIC="^RCY(344.6,",DIC(0)="AES",D=IDX
"RTN","RCDPRU",244,0)
 S DIC("A")="Go to with 835 "_$S(TYPE="P":"Payer Name",TYPE="T":"Payer TIN")_": "
"RTN","RCDPRU",245,0)
 I TYPE="P" S DIC("W")="D EN^DDIOL($P(^(0),U,2),,""?35"")"
"RTN","RCDPRU",246,0)
 E  S DIC("W")="D EN^DDIOL($P(^(0),U,1),,""?35"")"
"RTN","RCDPRU",247,0)
 D IX^DIC
"RTN","RCDPRU",248,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")!(Y=-1) Q 0
"RTN","RCDPRU",249,0)
 S RCDN=$O(^RCY(344.6,IDX,X,""))
"RTN","RCDPRU",250,0)
 S RTNARR("END")=RCDN_U_X_U_Y
"RTN","RCDPRU",251,0)
 I TYPE="P" S RTNARR("DATA")=$P(RTNARR("START"),U,4)_"~:~"_$P(RTNARR("END"),U,4) ;PCRA*4.5*321
"RTN","RCDPRU",252,0)
 I TYPE="T" S RTNARR("DATA")=$P(RTNARR("START"),U,2)_"~:~"_$P(RTNARR("END"),U,2) ;PCRA*4.5*321
"RTN","RCDPRU",253,0)
 Q 1
"RTN","RCDPRU",254,0)
 ;
"RTN","RCDPRU",255,0)
CHECKDT(GSTART,GSTOP,GFILE) ; See if we have any possible data to report
"RTN","RCDPRU",256,0)
 N SDT,IEN,PTR,COUNT,RCGX
"RTN","RCDPRU",257,0)
 S COUNT=0
"RTN","RCDPRU",258,0)
 I GFILE=361.1 D
"RTN","RCDPRU",259,0)
 . S SDT=GSTART-0.001
"RTN","RCDPRU",260,0)
 . F  S SDT=$O(^IBM(361.1,"E",SDT)) Q:(SDT="")!(SDT>GSTOP)!(COUNT>0)  S COUNT=COUNT+1
"RTN","RCDPRU",261,0)
 I GFILE=344.4 D
"RTN","RCDPRU",262,0)
 . S SDT=GSTART-.001
"RTN","RCDPRU",263,0)
 . F  S SDT=$O(^RCY(344.4,"AC",SDT)) Q:(SDT="")!(SDT>GSTOP)!(COUNT>0)  D
"RTN","RCDPRU",264,0)
 .. S IEN="" F  S IEN=$O(^RCY(344.4,"AC",SDT,IEN)) Q:IEN=""  D
"RTN","RCDPRU",265,0)
 ... K RCGX D GETS^DIQ(344.4,IEN_",","2*;","E","RCGX") Q:$D(RCGX)=0
"RTN","RCDPRU",266,0)
 ... S COUNT=COUNT+1 ; We have at least 1 ERA with a PLB
"RTN","RCDPRU",267,0)
 Q COUNT
"RTN","RCDPRU",268,0)
 ;
"RTN","RCDPRU",269,0)
 ; RARR - Report array to walk; SUBS - Subscript to walk to sum the report
"RTN","RCDPRU",270,0)
 ; ZSORT - Sorting on PLB Codes "C" or Payer/TIN "P"
"RTN","RCDPRU",271,0)
SUMIT(RARR,SUBS,ZSORT) ; Summarize data in the array reference for PLB Report
"RTN","RCDPRU",272,0)
 N LVL2,ZZ,XX,ZAD,ZCO,ZDC,ZN,ZPAT,ZPD,ZT,ZC,ZCT,ZS,ZTOT,YY,QQ,OLD,TADJ,ZIDX
"RTN","RCDPRU",273,0)
 S ZT=0,ZC=0,ZTOT=0,ZAD=0,ZCO="",OLD=""
"RTN","RCDPRU",274,0)
 I $G(SUBS)="" Q  ; We should always have this Variable
"RTN","RCDPRU",275,0)
 S ZZ="",ZCT=0,ZAD=0
"RTN","RCDPRU",276,0)
 ; Walk the collection in "ERA" or "PAYR" this will have all of the ERAs for this report and summarize
"RTN","RCDPRU",277,0)
 F  S ZZ=$O(@RARR@(SUBS,ZZ)) Q:ZZ=""  D
"RTN","RCDPRU",278,0)
 . K ZCT S XX="",ZCT=0,ZTOT=0,ZAD=0,ZPD=0,ZDC=""
"RTN","RCDPRU",279,0)
 . ; XX will be the IEN of the ERA to count.
"RTN","RCDPRU",280,0)
 . F  S XX=$O(@RARR@(SUBS,ZZ,XX)) Q:XX=""  S ZN=@RARR@(SUBS,ZZ,XX,0),ZPD=ZPD+$P(ZN,U,5),ZPAT=$P(ZN,U,6)_"/"_$P(ZN,U,3) D
"RTN","RCDPRU",281,0)
 .. S ZCT=ZCT+1 S:ZSORT="C" ZCT(ZPAT)=$G(ZCT(ZPAT))+1,ZPD(ZZ_ZPAT)=$G(ZPD(ZZ_ZPAT))+$P(ZN,U,5) ; Count the ERAs and get paid for this payer
"RTN","RCDPRU",282,0)
 .. S ZTOT=+$G(@RARR@("00_ERA",XX,.1))
"RTN","RCDPRU",283,0)
 .. ; Get the adjusted amounts for the PLB codes (in ZZ if by Code)
"RTN","RCDPRU",284,0)
 .. I ZSORT="C" S ZAD=$$TAMT(XX,RARR,ZZ),ZDC=$$TCD(XX,RARR,ZZ)
"RTN","RCDPRU",285,0)
 .. I ZSORT="P" S YY=0.11 F  S YY=$O(@RARR@("00_ERA",XX,YY)) Q:YY=""  D 
"RTN","RCDPRU",286,0)
 ... ; Get PLB Code, Adjusted amt and Code Description for By Payer summary
"RTN","RCDPRU",287,0)
 ... N QPD S QPD=0,ZCO=$P($G(@RARR@("00_ERA",XX,YY)),U,1),QPD("ADJ")=$P($G(@RARR@("00_ERA",XX,YY)),U,2),ZDC=$P($G(@RARR@("00_ERA",XX,YY)),U,4)
"RTN","RCDPRU",288,0)
 ... S QPD=$G(@RARR@("SUMMARY",ZZ,ZCO)) ; existing data for this PLB Code (QPD)
"RTN","RCDPRU",289,0)
 ... I ($G(OLD(ZZ,ZCO,XX))'=1) S QPD("PAID")=$P(QPD,U,2)+$P(ZN,U,5),QPD("COUNT")=$P(QPD,U,3)+1,QPD("TBILLED")=$P(QPD,U,5)+ZTOT
"RTN","RCDPRU",290,0)
 ... E  S QPD("PAID")=$P(QPD,U,2),QPD("COUNT")=$P(QPD,U,3),QPD("TBILLED")=$P(QPD,U,5)
"RTN","RCDPRU",291,0)
 ... ; Adj Amt ^ Paid ^ Count of ERAs ^ Description ^ Total Billed
"RTN","RCDPRU",292,0)
 ... S ZAD=($P(QPD,U,1)+QPD("ADJ")),ZPD=QPD("PAID"),ZCT=QPD("COUNT"),ZTOT=QPD("TBILLED")
"RTN","RCDPRU",293,0)
 ... S @RARR@("SUMMARY",ZZ,ZCO)=ZAD_U_ZPD_U_ZCT_U_ZDC_U_ZTOT
"RTN","RCDPRU",294,0)
 ... S OLD(ZZ,ZCO,XX)=1
"RTN","RCDPRU",295,0)
 .. S LVL2=$S(ZSORT="C":ZPAT,ZSORT="P":ZCO,1:XX)
"RTN","RCDPRU",296,0)
 .. S:ZSORT="C" ZAD=ZAD+$P($G(@RARR@("SUMMARY",ZZ,LVL2)),U,1),ZTOT=ZTOT+$P($G(@RARR@("SUMMARY",ZZ,LVL2)),U,5) ; Sum the ADJ & BILLED amounts
"RTN","RCDPRU",297,0)
 .. ; Adj Amt ^ Paid ^ Count of ERAs ^ ^ Total Billed
"RTN","RCDPRU",298,0)
 .. I ZSORT="C" S @RARR@("SUMMARY",ZZ,LVL2)=ZAD_U_ZPD(ZZ_ZPAT)_U_ZCT(ZPAT)_U_U_ZTOT
"RTN","RCDPRU",299,0)
 ;
"RTN","RCDPRU",300,0)
 ; Summarize the Code level totals
"RTN","RCDPRU",301,0)
 I ZSORT="C" K OLD S ZZ="",QQ="" F  S ZZ=$O(@RARR@("ERA",ZZ)) Q:ZZ=""  D
"RTN","RCDPRU",302,0)
 . S QQ="",(ZCT,ZPD,ZAD,ZTOT)=0 F  S QQ=$O(@RARR@("ERA",ZZ,QQ)) Q:QQ=""  D
"RTN","RCDPRU",303,0)
 .. S ZCT=ZCT+1
"RTN","RCDPRU",304,0)
 .. S ZPD=ZPD+$P(@RARR@("ERA",ZZ,QQ,0),U,5),ZTOT=ZTOT+@RARR@("00_ERA",QQ,.1),ZAD=ZAD+$$TAMT(QQ,RARR,ZZ),ZDC=$$TCD(QQ,RARR,ZZ)
"RTN","RCDPRU",305,0)
 . S @RARR@("SUMMARY",ZZ)=ZAD_U_ZPD_U_ZCT_U_ZDC_U_ZTOT
"RTN","RCDPRU",306,0)
 ;
"RTN","RCDPRU",307,0)
 ; Summarize the Payer level totals
"RTN","RCDPRU",308,0)
 I ZSORT="P" K OLD S ZZ="",QQ="" F  S ZZ=$O(@RARR@("PAYR",ZZ)) Q:ZZ=""  D
"RTN","RCDPRU",309,0)
 . S QQ="",(ZCT,ZPD,ZAD,ZTOT)=0 F  S QQ=$O(@RARR@("PAYR",ZZ,QQ)) Q:QQ=""  D
"RTN","RCDPRU",310,0)
 .. S ZCT=ZCT+1
"RTN","RCDPRU",311,0)
 .. S ZPD=ZPD+$P(@RARR@("PAYR",ZZ,QQ,0),U,5),ZTOT=ZTOT+@RARR@("00_ERA",QQ,.1),ZAD=ZAD+$$TAMT(QQ,RARR,"")
"RTN","RCDPRU",312,0)
 . S @RARR@("SUMMARY",ZZ)=ZAD_U_ZPD_U_ZCT_U_U_ZTOT
"RTN","RCDPRU",313,0)
 ;
"RTN","RCDPRU",314,0)
 ; Collect and summarize the Grand Totals.
"RTN","RCDPRU",315,0)
 S ZZ="",QQ="" F  S ZZ=$O(@RARR@(SUBS,ZZ)) Q:ZZ=""  D 
"RTN","RCDPRU",316,0)
 . S XX="" F  S XX=$O(@RARR@(SUBS,ZZ,XX)) Q:XX=""  S ZT=$G(@RARR@("TOTALS")),ZS=$G(@RARR@("SUMMARY",ZZ)) D  S @RARR@("ZZ_COUNTED",XX)=1
"RTN","RCDPRU",317,0)
 .. S ZN=$G(@RARR@(SUBS,ZZ,XX,0)),ZN("TBILLED")=@RARR@("00_ERA",XX,.1),TADJ=$$TAMT(XX,RARR,"")
"RTN","RCDPRU",318,0)
 .. I $G(@RARR@("ZZ_COUNTED",XX))'=1 D
"RTN","RCDPRU",319,0)
 ... S @RARR@("TOTALS")=($P(ZT,U,1)+TADJ)_U_($P(ZT,U,2)+$P(ZN,U,5))_U_($P(ZT,U,3)+1)_U_U_($P(ZT,U,5)+ZN("TBILLED"))
"RTN","RCDPRU",320,0)
 Q
"RTN","RCDPRU",321,0)
 ;
"RTN","RCDPRU",322,0)
TAMT(ZIEN,XGBL,ZCODE) ; Get Adjustment Amounts
"RTN","RCDPRU",323,0)
 N ZAMT,XDN,AA S ZAMT=0
"RTN","RCDPRU",324,0)
 ; ZCODE if defined is get the Adjustment amounts for just this code
"RTN","RCDPRU",325,0)
 ; otherwise sum the adjustment amounts for this ERA in ZIEN
"RTN","RCDPRU",326,0)
 D
"RTN","RCDPRU",327,0)
 . S AA=0.1 F  S AA=$O(@XGBL@("00_ERA",ZIEN,AA)) Q:AA=""  D
"RTN","RCDPRU",328,0)
 .. I $G(ZCODE)'="" Q:$P($G(@XGBL@("00_ERA",ZIEN,AA)),U,1)'=ZCODE  ; Quit if we don't have the right code
"RTN","RCDPRU",329,0)
 .. ; Collect adjustment amounts to return for this ZIEN
"RTN","RCDPRU",330,0)
 .. S ZAMT=ZAMT+$P(@XGBL@("00_ERA",ZIEN,AA),U,2)
"RTN","RCDPRU",331,0)
 Q ZAMT
"RTN","RCDPRU",332,0)
 ;
"RTN","RCDPRU",333,0)
TCD(ZIEN,XGBL,ZCODE) ; Get PLB Description for Code & IEN given
"RTN","RCDPRU",334,0)
 N RET,AA S RET=""
"RTN","RCDPRU",335,0)
 Q:$G(ZCODE)="" ""
"RTN","RCDPRU",336,0)
 S AA=0.1 F  S AA=$O(@XGBL@("00_ERA",ZIEN,AA)) Q:AA=""  D  Q:RET'=""
"RTN","RCDPRU",337,0)
 . Q:$P($G(@XGBL@("00_ERA",ZIEN,AA)),U,1)'=ZCODE  ; Quit if we don't have the right code
"RTN","RCDPRU",338,0)
 . S RET=$P(@XGBL@("00_ERA",ZIEN,AA),U,4)
"RTN","RCDPRU",339,0)
 Q RET
"RTN","RCDPRU",340,0)
 ;
"RTN","RCDPRU",341,0)
 ; Moved from RCDPEM2 because of size issues
"RTN","RCDPRU",342,0)
UPDERA(DA,RECEPT,FOUND) ;Mark ERA as posted to paper EOB
"RTN","RCDPRU",343,0)
 N Y,X,DR,DIE,%
"RTN","RCDPRU",344,0)
 D NOW^%DTC
"RTN","RCDPRU",345,0)
 S DIE="^RCY(344.4,",FOUND=0
"RTN","RCDPRU",346,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPRU",347,0)
 S DR=".08///"_RECEPT_";.09///2;.14///2;20.03///1"
"RTN","RCDPRU",348,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPRU",349,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPRU",350,0)
 D ^DIE
"RTN","RCDPRU",351,0)
 I '$D(Y) D
"RTN","RCDPRU",352,0)
 .K DIR
"RTN","RCDPRU",353,0)
 .S DIR(0)="EA"
"RTN","RCDPRU",354,0)
 .S DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB"
"RTN","RCDPRU",355,0)
 .S DIR("A")="Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPRU",356,0)
 .S FOUND=1
"RTN","RCDPRU",357,0)
 E  W !,"Unable to update ERA for receipt "_RECEPT,!
"RTN","RCDPRU",358,0)
 Q FOUND
"RTN","RCDPRU",359,0)
 ;
"RTN","RCDPRU",360,0)
 ; Get Reciept Date (moved from RCDPEM2
"RTN","RCDPRU",361,0)
RCDATE(RECEPT) ;
"RTN","RCDPRU",362,0)
 N RCRECTDA
"RTN","RCDPRU",363,0)
 ;Get receipt IEN
"RTN","RCDPRU",364,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA 0
"RTN","RCDPRU",365,0)
 ;Return Receipt date
"RTN","RCDPRU",366,0)
 Q $P($G(^RCY(344,RCRECTDA,0)),U,3)
"RTN","RCDPRU",367,0)
 ;
"RTN","RCDPRU",368,0)
AMT(RECEPT) ;Total Receipt amount
"RTN","RCDPRU",369,0)
 N RCRECTDA,RCTRAN,RCTOT
"RTN","RCDPRU",370,0)
 ;Get receipt IEN
"RTN","RCDPRU",371,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA 0
"RTN","RCDPRU",372,0)
 ;Total the Receipt transactions
"RTN","RCDPRU",373,0)
 S RCTRAN=0,RCTOT=0
"RTN","RCDPRU",374,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D
"RTN","RCDPRU",375,0)
 .S RCTOT=RCTOT+$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,4)
"RTN","RCDPRU",376,0)
 Q RCTOT
"RTN","RCDPRU",377,0)
 ;
"RTN","RCDPRU",378,0)
 ; Moved from RCDPEM2 for Manual match because RCDPEM2 was too big in size
"RTN","RCDPRU",379,0)
 ; END, DTRNG, RCERA, RCMBG, START variables are newed and cleaned up in RCDPEM2
"RTN","RCDPRU",380,0)
ML0() ;
"RTN","RCDPRU",381,0)
ML0A S RCERA=$$SEL^RCDPEWL7() ; Select ERA to use from screen
"RTN","RCDPRU",382,0)
 S RCMBG=VALMBG ; Save the line, we need it when we go back to the worklist.
"RTN","RCDPRU",383,0)
 I RCERA=0 Q 1
"RTN","RCDPRU",384,0)
 S RCERA(0)=^RCY(344.4,RCERA,0) ; Get the zero node for this ERA 
"RTN","RCDPRU",385,0)
 I ((+($P(RCERA(0),U,9)))>0)!($P(RCERA(0),U,8)'="") D  Q 1 ; PRCA*4.5*326
"RTN","RCDPRU",386,0)
 . W !,"ERA is already matched please select another ERA..."
"RTN","RCDPRU",387,0)
 . D WAIT^VALM1
"RTN","RCDPRU",388,0)
 S DIR("A")="Select EFT by date Range? (Y/N) ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR
"RTN","RCDPRU",389,0)
 I $D(DUOUT)!$D(DTOUT) Q 1
"RTN","RCDPRU",390,0)
 I Y<1 G MLQ ; Go to the EFT Selection
"RTN","RCDPRU",391,0)
 S DTRNG=Y  ; flag indicating date range selected
"RTN","RCDPRU",392,0)
 K DIR S DIR("?")="Enter the earliest date for the selection range."
"RTN","RCDPRU",393,0)
 ; value in DIR(0) for %DT = APE: ask date, past assumed, echo answer
"RTN","RCDPRU",394,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: " D ^DIR K DIR
"RTN","RCDPRU",395,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 1
"RTN","RCDPRU",396,0)
 S START=Y K DIR,X,Y
"RTN","RCDPRU",397,0)
 S DIR("?")="Enter the latest date for the selection range."
"RTN","RCDPRU",398,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPRU",399,0)
 D ^DIR K DIR
"RTN","RCDPRU",400,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 1
"RTN","RCDPRU",401,0)
 S END=Y
"RTN","RCDPRU",402,0)
 ;
"RTN","RCDPRU",403,0)
MLQ Q 0
"RTN","RCDPTAR")
0^9^B200693399
"RTN","RCDPTAR",1,0)
RCDPTAR ;ALB/TJB - EFT TRANSACTION AUDIT REPORT ;1/02/15
"RTN","RCDPTAR",2,0)
 ;;4.5;Accounts Receivable;**303,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPTAR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPTAR",4,0)
 ;
"RTN","RCDPTAR",5,0)
 Q
"RTN","RCDPTAR",6,0)
 ; PRCA*4.5*303 - EFT TRANSACTION AUDIT REPORT
"RTN","RCDPTAR",7,0)
 ;
"RTN","RCDPTAR",8,0)
 ; Executed by the option "EFT Transaction Audit Report" from the "EDI Lockbox Reports Menu"
"RTN","RCDPTAR",9,0)
 ;
"RTN","RCDPTAR",10,0)
 ; DESCRIPTION: The following generates a report that displays an audit history for an EFT
"RTN","RCDPTAR",11,0)
 ;
"RTN","RCDPTAR",12,0)
EN ; Main entry point for this report
"RTN","RCDPTAR",13,0)
 ; Ask Summary or Detail output
"RTN","RCDPTAR",14,0)
 ;
"RTN","RCDPTAR",15,0)
 N DIR,X,Y,DUOUT,DTOUT,DIRUT,DIROUT,RCREP
"RTN","RCDPTAR",16,0)
 W !
"RTN","RCDPTAR",17,0)
 S DIR(0)="SOA^S:Summary Information Only;D:Detail Report"
"RTN","RCDPTAR",18,0)
 S DIR("A")="(S)ummary or (D)etail Report format? "
"RTN","RCDPTAR",19,0)
 S DIR("B")="SUMMARY"
"RTN","RCDPTAR",20,0)
 D ^DIR
"RTN","RCDPTAR",21,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q
"RTN","RCDPTAR",22,0)
 S RCREP=Y
"RTN","RCDPTAR",23,0)
 ;
"RTN","RCDPTAR",24,0)
 I RCREP="S" D SUM^RCDPTAR1
"RTN","RCDPTAR",25,0)
 I RCREP="D" D DET
"RTN","RCDPTAR",26,0)
 Q
"RTN","RCDPTAR",27,0)
 ;
"RTN","RCDPTAR",28,0)
DET ; Entry point for detailed report
"RTN","RCDPTAR",29,0)
 ; Input: variable RCREP defined and equal to "D"
"RTN","RCDPTAR",30,0)
 ; Output: Written to device
"RTN","RCDPTAR",31,0)
 ;
"RTN","RCDPTAR",32,0)
 N RCDATA,RCDET
"RTN","RCDPTAR",33,0)
 ;
"RTN","RCDPTAR",34,0)
DET1 ; Prompt for user selection criteria
"RTN","RCDPTAR",35,0)
 K DIR
"RTN","RCDPTAR",36,0)
 S DIR(0)="SO^N:Deposit Number;D:Deposit Date;R:Receipt Number;T:Trace Number"
"RTN","RCDPTAR",37,0)
 S DIR("PRE")="S:X?1N X=$S(X=1:""N"",X=2:""d"",X=3:""r"",X=4:""t"",1:""X"")"
"RTN","RCDPTAR",38,0)
 S DIR("L",1)="Search for EFT Number by:"
"RTN","RCDPTAR",39,0)
 S DIR("L",2)=""
"RTN","RCDPTAR",40,0)
 S DIR("L",3)="  1. Deposit (N)umber"
"RTN","RCDPTAR",41,0)
 S DIR("L",4)="  2. Deposit (D)ate"
"RTN","RCDPTAR",42,0)
 S DIR("L",5)="  3. (R)eceipt #"
"RTN","RCDPTAR",43,0)
 S DIR("L")="  4. (T)race #"
"RTN","RCDPTAR",44,0)
 S DIR("A")="Search for EFT by"
"RTN","RCDPTAR",45,0)
 D ^DIR
"RTN","RCDPTAR",46,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G DETQ
"RTN","RCDPTAR",47,0)
 S RCDET=Y
"RTN","RCDPTAR",48,0)
 ;
"RTN","RCDPTAR",49,0)
 ; Do lookup of EFTs based on the user selection above
"RTN","RCDPTAR",50,0)
 S RCDATA=""
"RTN","RCDPTAR",51,0)
 D @($S(RCDET="N":"DN",RCDET="D":"DT",RCDET="R":"RC",1:"TR")_"(.RCDATA)")
"RTN","RCDPTAR",52,0)
 I RCDATA=-1 G DETQ
"RTN","RCDPTAR",53,0)
 I RCDATA="" G DET1
"RTN","RCDPTAR",54,0)
 ;
"RTN","RCDPTAR",55,0)
  ; Prompt for device
"RTN","RCDPTAR",56,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","RCDPTAR",57,0)
 S %ZIS="QM"
"RTN","RCDPTAR",58,0)
 D ^%ZIS
"RTN","RCDPTAR",59,0)
 I POP G DETQ
"RTN","RCDPTAR",60,0)
 I $D(IO("Q")) D  G DETQ
"RTN","RCDPTAR",61,0)
 . S ZTRTN="RUN^RCDPTAR(RCDATA)"
"RTN","RCDPTAR",62,0)
 . S ZTIO=ION
"RTN","RCDPTAR",63,0)
 . S ZTSAVE("*")=""
"RTN","RCDPTAR",64,0)
 . S ZTDESC="EFT TRANSACTION SUMMARY REPORT"
"RTN","RCDPTAR",65,0)
 . D ^%ZTLOAD
"RTN","RCDPTAR",66,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","RCDPTAR",67,0)
 . D HOME^%ZIS
"RTN","RCDPTAR",68,0)
 U IO
"RTN","RCDPTAR",69,0)
 ;
"RTN","RCDPTAR",70,0)
 D RUN(RCDATA)
"RTN","RCDPTAR",71,0)
 Q
"RTN","RCDPTAR",72,0)
 ;
"RTN","RCDPTAR",73,0)
DETQ ;
"RTN","RCDPTAR",74,0)
 Q
"RTN","RCDPTAR",75,0)
 ;
"RTN","RCDPTAR",76,0)
RUN(RCDATA) ; Compile and output the report
"RTN","RCDPTAR",77,0)
 ; Input: RCDATA - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",78,0)
 ; Output: none
"RTN","RCDPTAR",79,0)
 ;
"RTN","RCDPTAR",80,0)
 ; Compile Data
"RTN","RCDPTAR",81,0)
 D COMPILE(RCDATA)
"RTN","RCDPTAR",82,0)
 ;
"RTN","RCDPTAR",83,0)
 ; Generate Report
"RTN","RCDPTAR",84,0)
 D REPORT(RCDATA)
"RTN","RCDPTAR",85,0)
 ;
"RTN","RCDPTAR",86,0)
 K ^TMP("RCDPTAR",$J)
"RTN","RCDPTAR",87,0)
 Q
"RTN","RCDPTAR",88,0)
 ;
"RTN","RCDPTAR",89,0)
DN(RCDATA) ; Lookup by Deposit Number
"RTN","RCDPTAR",90,0)
 ; Input: RCDATA - null on entry
"RTN","RCDPTAR",91,0)
 ; Output: RCDATA passed by refence - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",92,0)
 ; Note variable RCDEFLUP is needed by LOOKUP^RCDPUDEP, which is called by the .01 field
"RTN","RCDPTAR",93,0)
 ;
"RTN","RCDPTAR",94,0)
 N DIC,DTOUT,DUOUT,Y,RCDEFLUP,LOCKIEN
"RTN","RCDPTAR",95,0)
 ;
"RTN","RCDPTAR",96,0)
 ; Lookup Deposit Number
"RTN","RCDPTAR",97,0)
 W !
"RTN","RCDPTAR",98,0)
 S DIC="^RCY(344.1,",DIC(0)="QEAMn",DIC("A")="Select DEPOSIT: ",DIC("W")="D DICW^RCDPUDEP"
"RTN","RCDPTAR",99,0)
 S RCDEFLUP=1
"RTN","RCDPTAR",100,0)
 D ^DIC
"RTN","RCDPTAR",101,0)
 I $G(DTOUT)!$G(DUOUT)!(Y=-1) S RCDATA=-1 Q
"RTN","RCDPTAR",102,0)
 ;
"RTN","RCDPTAR",103,0)
 S LOCKIEN=+$O(^RCY(344.3,"ARDEP",+Y,""))
"RTN","RCDPTAR",104,0)
 I 'LOCKIEN W !!,"EFT NOT FOUND - please check Deposit" D PAUSE Q
"RTN","RCDPTAR",105,0)
 ;
"RTN","RCDPTAR",106,0)
 ; Get EFT pointer
"RTN","RCDPTAR",107,0)
 S RCDATA=$$EFT(LOCKIEN)
"RTN","RCDPTAR",108,0)
 Q
"RTN","RCDPTAR",109,0)
 ;
"RTN","RCDPTAR",110,0)
DT(RCDATA) ; Deposit Date
"RTN","RCDPTAR",111,0)
 ; Input: RCDATA - null on entry
"RTN","RCDPTAR",112,0)
 ; Output: RCDATA passed by refence - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",113,0)
 ;
"RTN","RCDPTAR",114,0)
 N CNT,DATA,DEPIEN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,ITEM,LINE,LIST,RCDT,RCI,RCIEN,X,Y
"RTN","RCDPTAR",115,0)
 ;
"RTN","RCDPTAR",116,0)
DT1 ; Ask the user for the Deposit Date
"RTN","RCDPTAR",117,0)
 K DIR
"RTN","RCDPTAR",118,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("B")="T"
"RTN","RCDPTAR",119,0)
 S DIR("A")="Select DEPOSIT DATE: "
"RTN","RCDPTAR",120,0)
 D ^DIR
"RTN","RCDPTAR",121,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCDATA=-1 Q
"RTN","RCDPTAR",122,0)
 S RCDT=Y
"RTN","RCDPTAR",123,0)
 ;
"RTN","RCDPTAR",124,0)
 ; Build List
"RTN","RCDPTAR",125,0)
 K LIST
"RTN","RCDPTAR",126,0)
 S RCI="",CNT=0 F  S RCI=$O(^RCY(344.3,"ADEP",RCDT,RCI)) Q:RCI=""  D
"RTN","RCDPTAR",127,0)
 . S RCIEN="" F  S RCIEN=$O(^RCY(344.3,"ADEP",RCDT,RCI,RCIEN)) Q:RCIEN=""  D
"RTN","RCDPTAR",128,0)
 .. S DEPIEN=$P($G(^RCY(344.3,RCIEN,0)),U,3)
"RTN","RCDPTAR",129,0)
 .. I DEPIEN="" Q
"RTN","RCDPTAR",130,0)
 .. S DATA=$G(^RCY(344.1,DEPIEN,0))
"RTN","RCDPTAR",131,0)
 .. I DATA="" Q
"RTN","RCDPTAR",132,0)
 .. S CNT=CNT+1
"RTN","RCDPTAR",133,0)
 .. ; Code below is similiar to DICW^RCDPUDEP code
"RTN","RCDPTAR",134,0)
 .. S LINE=$J(CNT,3)_". "_$P(DATA,U,1)
"RTN","RCDPTAR",135,0)
 .. S $E(LINE,19)="by: "_$E($P($G(^VA(200,+$P(DATA,"^",6),0)),"^"),1,15)
"RTN","RCDPTAR",136,0)
 .. I '$P(DATA,"^",7) S $P(DATA,"^",7)="???????"
"RTN","RCDPTAR",137,0)
 .. S $E(LINE,39)="on: "_$E($P(DATA,"^",7),4,5)_"/"_$E($P(DATA,"^",7),6,7)_"/"_$E($P(DATA,"^",7),2,3)
"RTN","RCDPTAR",138,0)
 .. S $E(LINE,52)="amt: $"_$J($P(DATA,"^",4),10,2)
"RTN","RCDPTAR",139,0)
 .. S $E(LINE,70)=$P("N/A^OPEN^DEPOSITED^CONFIRMED^PROCESSED^VOID","^",+$P(DATA,"^",12)+1)
"RTN","RCDPTAR",140,0)
 .. S LIST(CNT)=RCIEN_"^"_$P(DATA,U,1)_"^"_LINE
"RTN","RCDPTAR",141,0)
 ;
"RTN","RCDPTAR",142,0)
 ; If no deposits in the LIST, display a message and try again
"RTN","RCDPTAR",143,0)
 I CNT=0 W !,"Date ",$$DATE^RCDPRU(RCDT)," does not have any valid deposits, please try again...",! G DT1
"RTN","RCDPTAR",144,0)
 ;
"RTN","RCDPTAR",145,0)
 ; If only one deposit in the list, use it
"RTN","RCDPTAR",146,0)
 I CNT=1 S RCDATA=$$EFT(+LIST(CNT)) Q
"RTN","RCDPTAR",147,0)
 ;
"RTN","RCDPTAR",148,0)
 ; Multiple entries found so prompt for the one that is wanted
"RTN","RCDPTAR",149,0)
 W !!,"Deposits on ",$$DATE^RCDPRU(RCDT)
"RTN","RCDPTAR",150,0)
 K DIR,ITEM
"RTN","RCDPTAR",151,0)
 S DIR(0)="SAO^"
"RTN","RCDPTAR",152,0)
 S DIR("A")="Select DEPOSIT: "
"RTN","RCDPTAR",153,0)
 S DIR("L",1)="  Choose from:"
"RTN","RCDPTAR",154,0)
 F LINE=1:1:CNT D
"RTN","RCDPTAR",155,0)
 . S DATA=LIST(LINE),DIR(0)=DIR(0)_LINE_":"_$P(DATA,U,2)_";"
"RTN","RCDPTAR",156,0)
 . S DIR("L",LINE+1)=$P(DATA,U,3),ITEM(LINE)=+DATA
"RTN","RCDPTAR",157,0)
 . W !,"  ",$P(DATA,U,3)
"RTN","RCDPTAR",158,0)
 S DIR(0)=$E(DIR(0),1,$L(DIR(0))-1)
"RTN","RCDPTAR",159,0)
 S DIR("L")=DIR("L",CNT+1) K DIR("L",CNT+1)
"RTN","RCDPTAR",160,0)
 W !
"RTN","RCDPTAR",161,0)
 D ^DIR
"RTN","RCDPTAR",162,0)
 I $D(DTOUT)!$D(DUOUT) S RCDATA=-1 Q
"RTN","RCDPTAR",163,0)
 I Y="" G DT1
"RTN","RCDPTAR",164,0)
 S RCDATA=$$EFT(ITEM(Y))
"RTN","RCDPTAR",165,0)
 Q
"RTN","RCDPTAR",166,0)
 ;
"RTN","RCDPTAR",167,0)
RC(RCDATA) ; Lookup by Receipt Number
"RTN","RCDPTAR",168,0)
 ; Input: RCDATA - null on entry
"RTN","RCDPTAR",169,0)
 ; Output: RCDATA passed by refence - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",170,0)
 ;
"RTN","RCDPTAR",171,0)
 N DIC,D,DTOUT,DUOUT,X,Y,RCIEN,RCDTN,RCED
"RTN","RCDPTAR",172,0)
 ;
"RTN","RCDPTAR",173,0)
 W !
"RTN","RCDPTAR",174,0)
 S DIC="^RCY(344,",DIC(0)="QEAMn",DIC("A")="Select RECEIPT: "
"RTN","RCDPTAR",175,0)
 S DIC("W")="D DICW^RCDPUREC"
"RTN","RCDPTAR",176,0)
 S DIC("S")="I $$EDILBEV^RCDPEU($P($G(^(0)),U,4))"
"RTN","RCDPTAR",177,0)
 D ^DIC
"RTN","RCDPTAR",178,0)
 I $D(DTOUT)!$D(DUOUT)!(Y=-1) S RCDATA=-1 Q
"RTN","RCDPTAR",179,0)
 ;
"RTN","RCDPTAR",180,0)
 ; Check if there is a pointer to the AR Deposit
"RTN","RCDPTAR",181,0)
 S RCDATA=""
"RTN","RCDPTAR",182,0)
 S RCIEN=$P($G(^RCY(344,+Y,0)),U,6)
"RTN","RCDPTAR",183,0)
 ;
"RTN","RCDPTAR",184,0)
 ; If there is, then get the EFT via AR Deposit and EDI LockBox files
"RTN","RCDPTAR",185,0)
 I RCIEN D
"RTN","RCDPTAR",186,0)
 . ; Get Ticket Number
"RTN","RCDPTAR",187,0)
 . S RCDTN=$P($G(^RCY(344.1,RCIEN,0)),U,1)
"RTN","RCDPTAR",188,0)
 . I RCDTN="" Q
"RTN","RCDPTAR",189,0)
 . ;
"RTN","RCDPTAR",190,0)
 . ; Get EDI Lockbox Deposit File
"RTN","RCDPTAR",191,0)
 . S RCED=$O(^RCY(344.3,"C",RCDTN,""))
"RTN","RCDPTAR",192,0)
 . I RCED="" Q
"RTN","RCDPTAR",193,0)
 . S RCDATA=$$EFT(RCED)
"RTN","RCDPTAR",194,0)
 ;
"RTN","RCDPTAR",195,0)
 ; If this AR Deposit record is not found, check if it is a receipt on the ERA
"RTN","RCDPTAR",196,0)
 I 'RCIEN D
"RTN","RCDPTAR",197,0)
 . S ERAIEN=$O(^RCY(344.4,"H",+Y,""))
"RTN","RCDPTAR",198,0)
 . I 'ERAIEN S ERAIEN=$O(^RCY(344.4,"ARCT",+Y,""))
"RTN","RCDPTAR",199,0)
 . I 'ERAIEN Q
"RTN","RCDPTAR",200,0)
 . S EFTIEN=$O(^RCY(344.31,"AERA",ERAIEN,""))
"RTN","RCDPTAR",201,0)
 . I EFTIEN S RCDATA=$$EFTDATA(EFTIEN)
"RTN","RCDPTAR",202,0)
 ;
"RTN","RCDPTAR",203,0)
 I RCDATA="" W !!,"EFT NOT FOUND - please check Receipt" D PAUSE Q
"RTN","RCDPTAR",204,0)
 Q
"RTN","RCDPTAR",205,0)
 ;
"RTN","RCDPTAR",206,0)
TR(RCDATA) ; Lookup by Trace Number
"RTN","RCDPTAR",207,0)
 ; Input: RCDATA - null on entry
"RTN","RCDPTAR",208,0)
 ; Output: RCDATA passed by refence - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",209,0)
 N DIC,D,Y,X,DTOUT,DUOUT
"RTN","RCDPTAR",210,0)
 ;
"RTN","RCDPTAR",211,0)
 ; Use "F" index in EDI EFT Detail file
"RTN","RCDPTAR",212,0)
 W !
"RTN","RCDPTAR",213,0)
 S DIC="^RCY(344.31,",DIC(0)="QEASn",D="F",DIC("A")="Select TRACE: "
"RTN","RCDPTAR",214,0)
 ; DIC("W") may need to be fixed if Trace numbers go over 32 characters. The fields
"RTN","RCDPTAR",215,0)
 ; displayed are the EFT#, Insurance company name, amount and Date Recieved.
"RTN","RCDPTAR",216,0)
 S DIC("W")="D EN^DDIOL($J($P(^(0),U,1),7)_"" ""_$$LJ^XLFSTR($E($P(^(0),U,2),1,20),20)_$J($P(^(0),U,7),10)_"" ""_$$DATE^RCDPRU($P(^(0),U,13)),,""?32"")"
"RTN","RCDPTAR",217,0)
 D IX^DIC
"RTN","RCDPTAR",218,0)
 I $D(DTOUT)!$D(DUOUT)!(Y=-1) S RCDATA=-1 Q
"RTN","RCDPTAR",219,0)
 S RCDATA=$$EFTDATA(+Y)
"RTN","RCDPTAR",220,0)
 Q
"RTN","RCDPTAR",221,0)
 ;
"RTN","RCDPTAR",222,0)
EFT(LOCKIEN) ; Select a single EFT Number
"RTN","RCDPTAR",223,0)
 ; Input: LOCKIEN - IEN for LOCKBOX DEPOSIT (#344.3)
"RTN","RCDPTAR",224,0)
 ; Return: LIST(Y) - Delimiter list of information as returned by suboutine EFTDATA
"RTN","RCDPTAR",225,0)
 ;
"RTN","RCDPTAR",226,0)
 I '$G(LOCKIEN) W !!,"No EFT detail for this selection" D PAUSE Q ""
"RTN","RCDPTAR",227,0)
 ;
"RTN","RCDPTAR",228,0)
 N EFTIEN,CNT,DATA,LIST,Y
"RTN","RCDPTAR",229,0)
 ;
"RTN","RCDPTAR",230,0)
 S EFTIEN="",CNT=0
"RTN","RCDPTAR",231,0)
 F  S EFTIEN=$O(^RCY(344.31,"B",LOCKIEN,EFTIEN)) Q:EFTIEN=""  D  ;
"RTN","RCDPTAR",232,0)
 . S DATA=$$EFTDATA(EFTIEN) I DATA]"" S CNT=CNT+1,LIST(CNT)=DATA
"RTN","RCDPTAR",233,0)
 ;
"RTN","RCDPTAR",234,0)
 I CNT=0 W !!,"No EFT detail for this selection" D PAUSE Q ""
"RTN","RCDPTAR",235,0)
 ;
"RTN","RCDPTAR",236,0)
 ; If only one EFT, select it and quit
"RTN","RCDPTAR",237,0)
 I CNT=1 S Y=1 G EFT1
"RTN","RCDPTAR",238,0)
 ;
"RTN","RCDPTAR",239,0)
 ; Display and the let the user select the EFT
"RTN","RCDPTAR",240,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,ROW,TRANS,X
"RTN","RCDPTAR",241,0)
 S DIR(0)="SO^"
"RTN","RCDPTAR",242,0)
 S DIR("A")="Select item from list"
"RTN","RCDPTAR",243,0)
 S DIR("L",1)="Select single EFT:"
"RTN","RCDPTAR",244,0)
 F ROW=1:1:CNT-1 D
"RTN","RCDPTAR",245,0)
 . S DATA=LIST(ROW),LOCKIEN=$P(DATA,U,2),EFTIEN=$P(DATA,U,3),TRANS=$$GET1^DIQ(344.31,EFTIEN_",",.01,"I")
"RTN","RCDPTAR",246,0)
 . S DIR(0)=DIR(0)_ROW_":"_TRANS_";"
"RTN","RCDPTAR",247,0)
 . S DIR("L",(ROW+1))=$J(ROW,3)_". "_TRANS_$$DISPLAY(EFTIEN,LOCKIEN) ; PRCA*4.5*326
"RTN","RCDPTAR",248,0)
 S DATA=LIST(CNT),LOCKIEN=$P(DATA,U,2),EFTIEN=$P(DATA,U,3),TRANS=$$GET1^DIQ(344.31,EFTIEN_",",.01,"I")
"RTN","RCDPTAR",249,0)
 S DIR(0)=DIR(0)_CNT_":"_TRANS
"RTN","RCDPTAR",250,0)
 S DIR("L")=$J(CNT,3)_". "_TRANS_$$DISPLAY(EFTIEN,LOCKIEN) ; PRCA*4.5*326
"RTN","RCDPTAR",251,0)
 D ^DIR
"RTN","RCDPTAR",252,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPTAR",253,0)
 ;
"RTN","RCDPTAR",254,0)
EFT1 ;
"RTN","RCDPTAR",255,0)
 Q LIST(Y)
"RTN","RCDPTAR",256,0)
 ;
"RTN","RCDPTAR",257,0)
EFTDATA(EFTIEN) ; Get associated records for this EFT
"RTN","RCDPTAR",258,0)
 ; Input: EFTIEN - IEN for EFT [344.31]
"RTN","RCDPTAR",259,0)
 ; Returns: A1^A2^A3^A4^45
"RTN","RCDPTAR",260,0)
 ;   where  A1=ERAIEN - IEN for ERA (#344.4)
"RTN","RCDPTAR",261,0)
 ;          A2=LOCKIEN - IEN for LOCKBOX DEPOSIT (#344.3)
"RTN","RCDPTAR",262,0)
 ;          A3=EFTIEN - IEN for EFT (#344.31)
"RTN","RCDPTAR",263,0)
 ;          A4=DEPIEN - IEN for AR DEPOSIT (#344.1)
"RTN","RCDPTAR",264,0)
 ;          A5=BATCHIEN - IEN for AR BATCH PAYMENT (#344)
"RTN","RCDPTAR",265,0)
 ;
"RTN","RCDPTAR",266,0)
 I '$G(EFTIEN) Q ""
"RTN","RCDPTAR",267,0)
 ;
"RTN","RCDPTAR",268,0)
 N BATCHIEN,DEPIEN,ERAIEN,LOCKIEN                       ;PRCA*4.5*321 removed DEPOSIT
"RTN","RCDPTAR",269,0)
 S (ERAIEN,DEPIEN,BATCHIEN)=""
"RTN","RCDPTAR",270,0)
 S ERAIEN=$$GET1^DIQ(344.31,EFTIEN,.1,"I")              ;PRCA*4.5*321 use ^DIQ vs global access
"RTN","RCDPTAR",271,0)
 S LOCKIEN=$$GET1^DIQ(344.31,EFTIEN,.01,"I")            ;PRCA*4.5*321
"RTN","RCDPTAR",272,0)
 I LOCKIEN S DEPIEN=$$GET1^DIQ(344.3,LOCKIEN,.03,"I")   ;PRCA*4.5*321 instead of $O on B index of 344.1
"RTN","RCDPTAR",273,0)
 I DEPIEN S BATCHIEN=$O(^RCY(344,"AD",DEPIEN,""))
"RTN","RCDPTAR",274,0)
 Q ERAIEN_U_LOCKIEN_U_EFTIEN_U_DEPIEN_U_BATCHIEN
"RTN","RCDPTAR",275,0)
 ;
"RTN","RCDPTAR",276,0)
DISPLAY(EFTIEN,LOCKIEN) ; Display EFT detail during user selection process
"RTN","RCDPTAR",277,0)
 ; Input: EFTIEN - IEN for EFT (#344.31)
"RTN","RCDPTAR",278,0)
 ;        LOCKIEN - IEN for LOCKBOX DEPOSIT (#344.3)
"RTN","RCDPTAR",279,0)
 ; Return: X1_"    "_X2_"    "_X3_"    "_X4_"    "_X5
"RTN","RCDPTAR",280,0)
 ; where   X1=PAYER NAME
"RTN","RCDPTAR",281,0)
 ;         X2=TRACE NUMBER
"RTN","RCDPTAR",282,0)
 ;         X3=AMOUNT OF PAYMENT
"RTN","RCDPTAR",283,0)
 ;         X4=DEPOSIT NUMBER
"RTN","RCDPTAR",284,0)
 ;         X5=DEPOSIT DATE
"RTN","RCDPTAR",285,0)
 N SUFX,X ; Added Suffix - PRCA*4.5*326
"RTN","RCDPTAR",286,0)
 S EFTIEN=$G(EFTIEN)
"RTN","RCDPTAR",287,0)
 S LOCKIEN=$G(LOCKIEN)
"RTN","RCDPTAR",288,0)
 S SUFX=$$GET1^DIQ(344.31,EFTIEN_",",.14) ; PRCA*4.5*326
"RTN","RCDPTAR",289,0)
 S:SUFX SUFX="."_SUFX ; PRCA*4.5*326
"RTN","RCDPTAR",290,0)
 S X=SUFX_$J("",4-$L(SUFX)) ; PRCA*4.5*326
"RTN","RCDPTAR",291,0)
 S X=X_$$GET1^DIQ(344.31,EFTIEN_",",.02)_"    "_$$GET1^DIQ(344.31,EFTIEN_",",.04)_"    " ; PRCA*4.5*326
"RTN","RCDPTAR",292,0)
 S X=X_$$GET1^DIQ(344.31,EFTIEN_",",.07)_"    "_$$GET1^DIQ(344.3,LOCKIEN_",",.06)_"    "
"RTN","RCDPTAR",293,0)
 S X=X_$$DATE^RCDPRU($$GET1^DIQ(344.3,LOCKIEN_",",.07,"I"),"2DZ")
"RTN","RCDPTAR",294,0)
 Q X
"RTN","RCDPTAR",295,0)
 ;
"RTN","RCDPTAR",296,0)
COMPILE(RCDATA) ; Compile data for display
"RTN","RCDPTAR",297,0)
 ; Input: RCDATA - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",298,0)
 ; Output: ^TMP("RCDPTAR",$J)
"RTN","RCDPTAR",299,0)
 ;
"RTN","RCDPTAR",300,0)
 I $G(RCDATA)="" Q
"RTN","RCDPTAR",301,0)
 ;
"RTN","RCDPTAR",302,0)
 N BATCHIEN,DEPDATE,DEPIEN,EFTIEN,ERAIEN,FILEDATE,FMSDOCNO,IENS,LASTIEN,LINE,LOCKIEN
"RTN","RCDPTAR",303,0)
 N MATCHDATE,MATCHIEN,PROCDATE,STATUS,TRANS
"RTN","RCDPTAR",304,0)
 K ^TMP("RCDPTAR",$J)
"RTN","RCDPTAR",305,0)
 ;
"RTN","RCDPTAR",306,0)
 ; Get Pointers from RCDATA
"RTN","RCDPTAR",307,0)
 S ERAIEN=$P(RCDATA,U,1),LOCKIEN=$P(RCDATA,U,2),EFTIEN=$P(RCDATA,U,3)
"RTN","RCDPTAR",308,0)
 S DEPIEN=$P(RCDATA,U,4),BATCHIEN=$P(RCDATA,U,5)
"RTN","RCDPTAR",309,0)
 ;
"RTN","RCDPTAR",310,0)
 ; Get Inital Creation/Deposit information
"RTN","RCDPTAR",311,0)
 K RCDATA
"RTN","RCDPTAR",312,0)
 I LOCKIEN D
"RTN","RCDPTAR",313,0)
 . D GETS^DIQ(344.3,LOCKIEN_",",".02;.06;.08","IE","RCDATA")
"RTN","RCDPTAR",314,0)
 . S FILEDATE=$G(RCDATA(344.3,LOCKIEN_",",.02,"I"))
"RTN","RCDPTAR",315,0)
 . I 'FILEDATE Q
"RTN","RCDPTAR",316,0)
 . S ^TMP("RCDPTAR",$J,FILEDATE,1)="DEP#:"_$G(RCDATA(344.3,LOCKIEN_",",.06,"E"))_"  DEP AMT:"_$G(RCDATA(344.3,LOCKIEN_",",.08,"E"))_"^EFT STATUS:RECEIVED"
"RTN","RCDPTAR",317,0)
 ;
"RTN","RCDPTAR",318,0)
 ; Check if posted to revenue code 8NZZ
"RTN","RCDPTAR",319,0)
 S TRANS=$$GET1^DIQ(344.31,EFTIEN_",",.14)
"RTN","RCDPTAR",320,0)
 I TRANS,$D(^RCY(344,+BATCHIEN,1,TRANS,0)),LOCKIEN,$D(RCDATA(344.3,LOCKIEN_",")) D
"RTN","RCDPTAR",321,0)
 . S DEPDATE=$$GET1^DIQ(344.1,DEPIEN_",",.07,"I")
"RTN","RCDPTAR",322,0)
 . I 'DEPDATE Q
"RTN","RCDPTAR",323,0)
 . S ^TMP("RCDPTAR",$J,DEPDATE,2)="DEP#:"_$G(RCDATA(344.3,LOCKIEN_",",.06,"E"))_"  DEP AMT:"_$G(RCDATA(344.3,LOCKIEN_",",.08,"E"))_"^DEP STATUS:POSTED TO 8NZZ"
"RTN","RCDPTAR",324,0)
 ;
"RTN","RCDPTAR",325,0)
 ; Get Match Status History information
"RTN","RCDPTAR",326,0)
 I EFTIEN D
"RTN","RCDPTAR",327,0)
 . ; Get the Last IEN of the multiple
"RTN","RCDPTAR",328,0)
 . S LASTIEN=$O(^RCY(344.31,EFTIEN,4,999999),-1)
"RTN","RCDPTAR",329,0)
 . ; Loop through history and build data
"RTN","RCDPTAR",330,0)
 . S MATCHIEN=0 F  S MATCHIEN=$O(^RCY(344.31,EFTIEN,4,MATCHIEN)) Q:'MATCHIEN  D
"RTN","RCDPTAR",331,0)
 .. S IENS=MATCHIEN_","_EFTIEN_","
"RTN","RCDPTAR",332,0)
 .. D GETS^DIQ(344.314,IENS,"*","IE","RCDATA")
"RTN","RCDPTAR",333,0)
 .. S MATCHDATE=$G(RCDATA(344.314,IENS,.02,"I"))
"RTN","RCDPTAR",334,0)
 .. I MATCHDATE="" Q
"RTN","RCDPTAR",335,0)
 .. S STATUS=$G(RCDATA(344.314,IENS,.01,"E"))
"RTN","RCDPTAR",336,0)
 .. I STATUS="MATCHED WITH ERRORS" S STATUS="MATCHED W/ERRORS"
"RTN","RCDPTAR",337,0)
 .. S LINE="EFT STATUS:"_STATUS
"RTN","RCDPTAR",338,0)
 .. ; If this is the last record and the status is matched, add the ERA record to the data
"RTN","RCDPTAR",339,0)
 .. I MATCHIEN=LASTIEN,STATUS="MATCHED"!(STATUS="MATCHED W/ERRORS"),$$GET1^DIQ(344.31,EFTIEN_",",.1) S LINE=LINE_" ERA#:"_$$GET1^DIQ(344.31,EFTIEN_",",.1)
"RTN","RCDPTAR",340,0)
 .. S ^TMP("RCDPTAR",$J,MATCHDATE,3)=LINE_"^BY "_$E($G(RCDATA(344.314,IENS,.03,"E")),1,14)_" on "_$$DATE^RCDPRU(MATCHDATE,"2ZD")
"RTN","RCDPTAR",341,0)
 ;
"RTN","RCDPTAR",342,0)
 ; Get Receipt information (EFT)
"RTN","RCDPTAR",343,0)
 I BATCHIEN D
"RTN","RCDPTAR",344,0)
 . S PROCDATE=$$GET1^DIQ(344,BATCHIEN_",",.08,"I")
"RTN","RCDPTAR",345,0)
 . I 'PROCDATE Q
"RTN","RCDPTAR",346,0)
 . I $G(DEPDATE),PROCDATE<DEPDATE S PROCDATE=DEPDATE     ;PRCA*4.5*321 add $G
"RTN","RCDPTAR",347,0)
 . S FMSDOCNO=$$FMSSTAT^RCDPUREC(BATCHIEN)
"RTN","RCDPTAR",348,0)
 . S ^TMP("RCDPTAR",$J,PROCDATE,5)="DEP RCPT#:"_$$GET1^DIQ(344,BATCHIEN_",",.01,"E")_" ENTRY#:"_BATCHIEN_"^FMS DOC#:"_$P(FMSDOCNO,U,1)_"^^DOC STATUS:"_$E($P(FMSDOCNO,U,2),1,18)
"RTN","RCDPTAR",349,0)
 ;
"RTN","RCDPTAR",350,0)
 ; Get Receipt information (ERA)
"RTN","RCDPTAR",351,0)
 S BATCHIEN=$$GET1^DIQ(344.4,ERAIEN_",",.08,"I")
"RTN","RCDPTAR",352,0)
 I BATCHIEN D
"RTN","RCDPTAR",353,0)
 . S PROCDATE=$$GET1^DIQ(344,BATCHIEN_",",.08,"I")
"RTN","RCDPTAR",354,0)
 . I $G(DEPDATE),PROCDATE<DEPDATE S PROCDATE=DEPDATE     ; PRCA*4.5*321 add $G
"RTN","RCDPTAR",355,0)
 . I 'PROCDATE Q
"RTN","RCDPTAR",356,0)
 . S FMSDOCNO=$$FMSSTAT^RCDPUREC(BATCHIEN)
"RTN","RCDPTAR",357,0)
 . ;S ^TMP("RCDPTAR",$J,PROCDATE,6)="RCPT#:"_$$GET1^DIQ(344,BATCHIEN_",",.01,"E")_" EFT DETAIL#:"_EFTIEN_"^BY "_$E($$GET1^DIQ(344,BATCHIEN_",",.02,"E"),1,14)_" on "_$$DATE^RCDPRU(PROCDATE,"2DZ")
"RTN","RCDPTAR",358,0)
 . S ^TMP("RCDPTAR",$J,PROCDATE,6)="RCPT#:"_$$GET1^DIQ(344,BATCHIEN_",",.01,"E")_"^BY "_$E($$GET1^DIQ(344,BATCHIEN_",",.02,"E"),1,14)_" on "_$$DATE^RCDPRU(PROCDATE,"2DZ")
"RTN","RCDPTAR",359,0)
 . S ^TMP("RCDPTAR",$J,PROCDATE,7)="FMS DOC#:"_$P(FMSDOCNO,U,1)_"^DOC STATUS:"_$E($P(FMSDOCNO,U,2),1,18)
"RTN","RCDPTAR",360,0)
 Q
"RTN","RCDPTAR",361,0)
 ;
"RTN","RCDPTAR",362,0)
REPORT(RCDATA) ; Print out the report
"RTN","RCDPTAR",363,0)
 ; Input: RCDATA - see subroutine EFTDA about for delimited list of fields
"RTN","RCDPTAR",364,0)
 ; Output: Write statements
"RTN","RCDPTAR",365,0)
 ;
"RTN","RCDPTAR",366,0)
 N CNT,DATE,DATA,LINES,RCHR,RCNOW,RCPG,RCSCR
"RTN","RCDPTAR",367,0)
 ;
"RTN","RCDPTAR",368,0)
 ; Initialize Report Date, Page Number and String of underscores
"RTN","RCDPTAR",369,0)
 S RCSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","RCDPTAR",370,0)
 S RCNOW=$$UP^XLFSTR($$NOW^RCDPRU()),RCPG=0,RCHR="",$P(RCHR,"-",IOM+1)=""
"RTN","RCDPTAR",371,0)
 ;
"RTN","RCDPTAR",372,0)
 U IO
"RTN","RCDPTAR",373,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCDATA)
"RTN","RCDPTAR",374,0)
 I $G(RCDATA)=""!'$D(^TMP("RCDPTAR",$J)) W !,"No data found"
"RTN","RCDPTAR",375,0)
 ;
"RTN","RCDPTAR",376,0)
 ; Display the detail
"RTN","RCDPTAR",377,0)
 S DATE="" F  S DATE=$O(^TMP("RCDPTAR",$J,DATE)) Q:'DATE  D  I RCPG=0 Q
"RTN","RCDPTAR",378,0)
 . S CNT=0 F  S CNT=$O(^TMP("RCDPTAR",$J,DATE,CNT)) Q:'CNT  D  I RCPG=0 Q
"RTN","RCDPTAR",379,0)
 .. S DATA=^TMP("RCDPTAR",$J,DATE,CNT)
"RTN","RCDPTAR",380,0)
 .. S LINES=1
"RTN","RCDPTAR",381,0)
 .. I $P(DATA,U,3)]""!($P(DATA,U,4)]"") S LINES=2
"RTN","RCDPTAR",382,0)
 .. I RCSCR S LINES=LINES+1
"RTN","RCDPTAR",383,0)
 .. D CHKP(RCNOW,.RCPG,RCHR,RCDATA,RCSCR,LINES) I RCPG=0 Q
"RTN","RCDPTAR",384,0)
 .. W !,$$DATE^RCDPRU(DATE,"2DZ"),?10,$P(DATA,U,1),?51,$P(DATA,U,2)
"RTN","RCDPTAR",385,0)
 .. I $P(DATA,U,3)]""!($P(DATA,U,4)]"") W !,?10,$P(DATA,U,3),?51,$P(DATA,U,4)
"RTN","RCDPTAR",386,0)
 ;
"RTN","RCDPTAR",387,0)
 I 'RCSCR W !,@IOF
"RTN","RCDPTAR",388,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","RCDPTAR",389,0)
 D ^%ZISC
"RTN","RCDPTAR",390,0)
 ;
"RTN","RCDPTAR",391,0)
 I RCPG,RCSCR D PAUSE
"RTN","RCDPTAR",392,0)
 Q
"RTN","RCDPTAR",393,0)
 ;
"RTN","RCDPTAR",394,0)
HEADER(RCNOW,RCPG,RCHR,RCDATA) ; Print Header Section
"RTN","RCDPTAR",395,0)
 ; Input: RCNOW - DATE/TIME in external format
"RTN","RCDPTAR",396,0)
 ;        RCPG - Current page number
"RTN","RCDPTAR",397,0)
 ;        RCHR - Line of "-" to margin width
"RTN","RCDPTAR",398,0)
 ;        RCDATA - See subroutine EFTDA about for delimited list of fields
"RTN","RCDPTAR",399,0)
 ; Output: Write statements
"RTN","RCDPTAR",400,0)
 ;
"RTN","RCDPTAR",401,0)
 N EFTDATA,LINE
"RTN","RCDPTAR",402,0)
 S EFTDATA=$G(^RCY(344.31,+$P(RCDATA,U,3),0))
"RTN","RCDPTAR",403,0)
 ;
"RTN","RCDPTAR",404,0)
 W @IOF
"RTN","RCDPTAR",405,0)
 S RCPG=RCPG+1
"RTN","RCDPTAR",406,0)
 W "EFT TRANSACTION AUDIT REPORT"
"RTN","RCDPTAR",407,0)
 S LINE=RCNOW_"   PAGE: "_RCPG_" "
"RTN","RCDPTAR",408,0)
 W ?(IOM-$L(LINE)),LINE
"RTN","RCDPTAR",409,0)
 ; Added EFT line identifier nnn.nn - PRCA*4.5*326
"RTN","RCDPTAR",410,0)
 W !,"EFT#: ",$$AGED(+$P(RCDATA,U,3)),$$GET1^DIQ(344.31,$P(RCDATA,U,3)_",",.01,"E"),?19,"DEPOSIT#: ",$P($G(^RCY(344.3,+$P(RCDATA,U,2),0)),U,6),?42,"EFT TOTAL AMT: "_$P(EFTDATA,U,7)
"RTN","RCDPTAR",411,0)
 W !,"EFT TRACE#: ",$P(EFTDATA,U,4)
"RTN","RCDPTAR",412,0)
 W !,"DATE RECEIVED: ",$$DATE^RCDPRU($P(EFTDATA,U,12)),?26,"PAYER/ID: "_$P(EFTDATA,U,2)_"/"_$P(EFTDATA,U,3)
"RTN","RCDPTAR",413,0)
 ;
"RTN","RCDPTAR",414,0)
 W !,"DATE",?10,"ACTION/DETAILS",?51,"STATUS"
"RTN","RCDPTAR",415,0)
 W !,RCHR
"RTN","RCDPTAR",416,0)
 Q
"RTN","RCDPTAR",417,0)
 ;
"RTN","RCDPTAR",418,0)
PAUSE() ; Pause at end of each page for user input
"RTN","RCDPTAR",419,0)
 ; Input: None
"RTN","RCDPTAR",420,0)
 ; Output: User response
"RTN","RCDPTAR",421,0)
 ;
"RTN","RCDPTAR",422,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPTAR",423,0)
 S DIR(0)="E"
"RTN","RCDPTAR",424,0)
 D ^DIR
"RTN","RCDPTAR",425,0)
 Q Y
"RTN","RCDPTAR",426,0)
 ;
"RTN","RCDPTAR",427,0)
CHKP(RCNOW,RCPG,RCHR,RCDATA,RCSCR,LINES) ; Check if we need to do a page break
"RTN","RCDPTAR",428,0)
 ; Input: RCNOW - DATE/TIME in external format
"RTN","RCDPTAR",429,0)
 ;        RCPG - Current page number
"RTN","RCDPTAR",430,0)
 ;        RCHR - Line of "-" to margin width
"RTN","RCDPTAR",431,0)
 ;        RCDATA - See subroutine EFTDA about for delimited list of fields
"RTN","RCDPTAR",432,0)
 ;        RCSCR - 1 - Output is going to the users screen, 0 - to printer
"RTN","RCDPTAR",433,0)
 ;        LINES - Current line count
"RTN","RCDPTAR",434,0)
 ;
"RTN","RCDPTAR",435,0)
 I $Y'>(IOSL-LINES) Q
"RTN","RCDPTAR",436,0)
 I RCSCR,'$$PAUSE S RCPG=0 Q
"RTN","RCDPTAR",437,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCDATA)
"RTN","RCDPTAR",438,0)
 Q
"RTN","RCDPTAR",439,0)
 ;
"RTN","RCDPTAR",440,0)
AGED(EFTIEN) ; Check if EFT is locked or stale
"RTN","RCDPTAR",441,0)
 ; Input
"RTN","RCDPTAR",442,0)
 ;    EFTIEN: IEN of EDI THIRD PARTY EFT DETAIL (#344.31)
"RTN","RCDPTAR",443,0)
 ; Output
"RTN","RCDPTAR",444,0)
 ;    "*" - Warning; "**" - Error; Null - Good
"RTN","RCDPTAR",445,0)
 N DAYSLIMT,RECVDT,TRARRY
"RTN","RCDPTAR",446,0)
 S RECVDT=$$GET1^DIQ(344.31,EFTIEN_",",.13,"I")
"RTN","RCDPTAR",447,0)
 I RECVDT<$$CUTOFF^RCDPEWLP Q ""  ; EFTs 2 months older than *298 installation do not lock the system
"RTN","RCDPTAR",448,0)
 S DAYSLIMT("M")=$$GET1^DIQ(344.61,1,.06),DAYSLIMT("P")=$$GET1^DIQ(344.61,1,.07)
"RTN","RCDPTAR",449,0)
 D CHKEFT^RCDPEWLP(RECVDT,EFTIEN,"B",.DAYSLIMT,.TRARRY)
"RTN","RCDPTAR",450,0)
 I $D(TRARRY("ERROR")) Q "**"
"RTN","RCDPTAR",451,0)
 I $D(TRARRY("WARNING")) Q "*"
"RTN","RCDPTAR",452,0)
 Q ""
"RTN","RCDPTAR1")
0^16^B44014323
"RTN","RCDPTAR1",1,0)
RCDPTAR1 ;ALB/DMB - EFT TRANSACTION AUDIT REPORT (Summary) ;08/19/15
"RTN","RCDPTAR1",2,0)
 ;;4.5;Accounts Receivable;**303,326**;Mar 20, 1995;Build 26
"RTN","RCDPTAR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPTAR1",4,0)
 ;
"RTN","RCDPTAR1",5,0)
 Q
"RTN","RCDPTAR1",6,0)
 ; PRCA*4.5*303 - EFT TRANSACTION AUDIT REPORT (SUMMARY VERSION)
"RTN","RCDPTAR1",7,0)
 ;
"RTN","RCDPTAR1",8,0)
SUM ;
"RTN","RCDPTAR1",9,0)
 N DIR,X,Y,DUOUT,DTOUT,DIRUT,DIROUT
"RTN","RCDPTAR1",10,0)
 N RCDT1,RCDT2,RCEXCEL
"RTN","RCDPTAR1",11,0)
 ;
"RTN","RCDPTAR1",12,0)
 ; Start Date
"RTN","RCDPTAR1",13,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: ",DIR("B")="T"
"RTN","RCDPTAR1",14,0)
 S DIR("?")="ENTER THE EARLIEST DATE OF RECEIPT OF DEPOSIT TO INCLUDE ON THE REPORT"
"RTN","RCDPTAR1",15,0)
 D ^DIR
"RTN","RCDPTAR1",16,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q
"RTN","RCDPTAR1",17,0)
 S RCDT1=Y
"RTN","RCDPTAR1",18,0)
 ;
"RTN","RCDPTAR1",19,0)
 ; End Date
"RTN","RCDPTAR1",20,0)
 K DIR
"RTN","RCDPTAR1",21,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")="T"
"RTN","RCDPTAR1",22,0)
 S DIR("?")="ENTER THE LATEST DATE OF RECEIPT OF DEPOSIT TO INCLUDE ON THE REPORT"
"RTN","RCDPTAR1",23,0)
 D ^DIR
"RTN","RCDPTAR1",24,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q
"RTN","RCDPTAR1",25,0)
 S RCDT2=Y
"RTN","RCDPTAR1",26,0)
 ;
"RTN","RCDPTAR1",27,0)
 ; Ask Excel
"RTN","RCDPTAR1",28,0)
 S RCEXCEL=$$EXCEL^RCDMCUT2()
"RTN","RCDPTAR1",29,0)
 I RCEXCEL="^" Q
"RTN","RCDPTAR1",30,0)
 I RCEXCEL D EXMSG
"RTN","RCDPTAR1",31,0)
 ;
"RTN","RCDPTAR1",32,0)
 ; Prompt for device
"RTN","RCDPTAR1",33,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","RCDPTAR1",34,0)
 S %ZIS="QM"
"RTN","RCDPTAR1",35,0)
 D ^%ZIS
"RTN","RCDPTAR1",36,0)
 I POP Q
"RTN","RCDPTAR1",37,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPTAR1",38,0)
 . S ZTRTN="RUN^RCDPTAR1(RCDT1,RCDT2,RCEXCEL)"
"RTN","RCDPTAR1",39,0)
 . S ZTIO=ION
"RTN","RCDPTAR1",40,0)
 . S ZTSAVE("*")=""
"RTN","RCDPTAR1",41,0)
 . S ZTDESC="EFT TRANSACTION SUMMARY REPORT"
"RTN","RCDPTAR1",42,0)
 . D ^%ZTLOAD
"RTN","RCDPTAR1",43,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","RCDPTAR1",44,0)
 . D HOME^%ZIS
"RTN","RCDPTAR1",45,0)
 U IO
"RTN","RCDPTAR1",46,0)
 ;
"RTN","RCDPTAR1",47,0)
 D RUN(RCDT1,RCDT2,RCEXCEL)
"RTN","RCDPTAR1",48,0)
 Q
"RTN","RCDPTAR1",49,0)
 ;
"RTN","RCDPTAR1",50,0)
RUN(RCDT1,RCDT2,RCEXCEL) ;
"RTN","RCDPTAR1",51,0)
 ;
"RTN","RCDPTAR1",52,0)
 D COMPILE(RCDT1,RCDT2)
"RTN","RCDPTAR1",53,0)
 ;
"RTN","RCDPTAR1",54,0)
 D REPORT(RCDT1,RCDT2,RCEXCEL)
"RTN","RCDPTAR1",55,0)
 K ^TMP("RCDPTAR1",$J)
"RTN","RCDPTAR1",56,0)
 Q
"RTN","RCDPTAR1",57,0)
 ;
"RTN","RCDPTAR1",58,0)
COMPILE(RCDT1,RCDT2) ;
"RTN","RCDPTAR1",59,0)
 N RCDT,LOCKIEN,LOCKDATA,EFTIEN,EFTDATA,MDATE
"RTN","RCDPTAR1",60,0)
 ;
"RTN","RCDPTAR1",61,0)
 K ^TMP("RCDPTAR1",$J)
"RTN","RCDPTAR1",62,0)
 S RCDT=RCDT1-.0001,RCDT2=RCDT2_".9999"
"RTN","RCDPTAR1",63,0)
 F  S RCDT=$O(^RCY(344.3,"ARECDT",RCDT)) Q:'RCDT!(RCDT>RCDT2)  D
"RTN","RCDPTAR1",64,0)
 . S LOCKIEN="" F  S LOCKIEN=$O(^RCY(344.3,"ARECDT",RCDT,LOCKIEN)) Q:'LOCKIEN  D
"RTN","RCDPTAR1",65,0)
 .. S LOCKDATA=$G(^RCY(344.3,LOCKIEN,0))
"RTN","RCDPTAR1",66,0)
 .. ; Deposit-0|3 (P344.1);Date Posted-0|11;
"RTN","RCDPTAR1",67,0)
 .. S EFTIEN="" F  S EFTIEN=$O(^RCY(344.31,"B",LOCKIEN,EFTIEN)) Q:'EFTIEN  D
"RTN","RCDPTAR1",68,0)
 ... S EFTDATA=$G(^RCY(344.31,EFTIEN,0))
"RTN","RCDPTAR1",69,0)
 ... ; Date Received-0|13;Amount-0|7;Match Status-0|8 (hist);Trace-0|4;Payer Name-0|2;Payer ID-0|3
"RTN","RCDPTAR1",70,0)
 ... S MDATE=$$MDATE($P(EFTDATA,U,8),EFTIEN)
"RTN","RCDPTAR1",71,0)
 ... ; Date Received^Deposit #^EFT Amount^Date Matched^Date Posted^Trace #^Payer Name^Payer ID^Stale/Lock
"RTN","RCDPTAR1",72,0)
 ... S ^TMP("RCDPTAR1",$J,EFTIEN)=$$DATE^RCDPRU($P(EFTDATA,U,13),"2ZD")_U_$$GET1^DIQ(344.3,LOCKIEN_",",.03,"E")
"RTN","RCDPTAR1",73,0)
 ... S $P(^TMP("RCDPTAR1",$J,EFTIEN),U,3,5)=$P(EFTDATA,U,7)_U_$$DATE^RCDPRU(MDATE,"2ZD")_U_$$DATE^RCDPRU($P(LOCKDATA,U,11),"2ZD")
"RTN","RCDPTAR1",74,0)
 ... S $P(^TMP("RCDPTAR1",$J,EFTIEN),U,6,9)=$P(EFTDATA,U,4)_U_$P(EFTDATA,U,2)_U_$P(EFTDATA,U,3)_U_$$AGED^RCDPTAR(EFTIEN)
"RTN","RCDPTAR1",75,0)
 ;
"RTN","RCDPTAR1",76,0)
 Q
"RTN","RCDPTAR1",77,0)
 ;
"RTN","RCDPTAR1",78,0)
MDATE(STATUS,EFTIEN) ;
"RTN","RCDPTAR1",79,0)
 ; Return the Match Date from the Match History Global
"RTN","RCDPTAR1",80,0)
 ; Input:
"RTN","RCDPTAR1",81,0)
 ;   STATUS: Internal value from the EFT MATCH STATUS field
"RTN","RCDPTAR1",82,0)
 ;   EFTIEN: EDI THIRD PARTY EFT DETAIL (#344.31) IEN
"RTN","RCDPTAR1",83,0)
 ; Output:
"RTN","RCDPTAR1",84,0)
 ;   Match Date from the MATCH STATUS HISTORY (#344.314) multiple
"RTN","RCDPTAR1",85,0)
 ;
"RTN","RCDPTAR1",86,0)
 ; Validate Parameters.  If STATUS is equal to UNMATCHED, quit with "" (no match date)
"RTN","RCDPTAR1",87,0)
 I $G(STATUS)=0 Q ""
"RTN","RCDPTAR1",88,0)
 I $G(EFTIEN)="" Q ""
"RTN","RCDPTAR1",89,0)
 ;
"RTN","RCDPTAR1",90,0)
 N MIEN,RCDATA,IENS
"RTN","RCDPTAR1",91,0)
 ;
"RTN","RCDPTAR1",92,0)
 ; Get last record from the Match status history global.  If no history, then quit with "" (no match date)
"RTN","RCDPTAR1",93,0)
 S MIEN=$O(^RCY(344.31,EFTIEN,4,999999),-1)
"RTN","RCDPTAR1",94,0)
 I 'MIEN Q "<No History>"
"RTN","RCDPTAR1",95,0)
 ;
"RTN","RCDPTAR1",96,0)
 ; Get data from match history
"RTN","RCDPTAR1",97,0)
 S IENS=MIEN_","_EFTIEN_","
"RTN","RCDPTAR1",98,0)
 D GETS^DIQ(344.314,IENS,".01;.02","I","RCDATA")
"RTN","RCDPTAR1",99,0)
 ;
"RTN","RCDPTAR1",100,0)
 ; If the most recent record is UNMATCHED, then it is does not match the EFT status so return "" (no match date)
"RTN","RCDPTAR1",101,0)
 I RCDATA(344.314,IENS,.01,"I")=0 Q ""
"RTN","RCDPTAR1",102,0)
 Q RCDATA(344.314,IENS,.02,"I")
"RTN","RCDPTAR1",103,0)
 ;
"RTN","RCDPTAR1",104,0)
REPORT(RCDT1,RCDT2,RCEXCEL) ;
"RTN","RCDPTAR1",105,0)
 N RCSCR,RCNOW,RCPG,RCHR
"RTN","RCDPTAR1",106,0)
 N EFTIEN,DATA,LINES
"RTN","RCDPTAR1",107,0)
 ;
"RTN","RCDPTAR1",108,0)
 ; Initialize Report Date, Page Number and Sting of underscores
"RTN","RCDPTAR1",109,0)
 S RCSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","RCDPTAR1",110,0)
 S RCNOW=$$UP^XLFSTR($$NOW^RCDPRU(2)),RCPG=0,RCHR="",$P(RCHR,"-",IOM+1)=""
"RTN","RCDPTAR1",111,0)
 ;
"RTN","RCDPTAR1",112,0)
 ; Display header for first page
"RTN","RCDPTAR1",113,0)
 U IO
"RTN","RCDPTAR1",114,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCDT1,RCDT2,RCEXCEL)
"RTN","RCDPTAR1",115,0)
 ;
"RTN","RCDPTAR1",116,0)
 ; No data, display message and quit
"RTN","RCDPTAR1",117,0)
 I '$D(^TMP("RCDPTAR1",$J)) W !,"No data found"
"RTN","RCDPTAR1",118,0)
 ;
"RTN","RCDPTAR1",119,0)
 ; Display the detail
"RTN","RCDPTAR1",120,0)
 S EFTIEN=0 F  S EFTIEN=$O(^TMP("RCDPTAR1",$J,EFTIEN)) Q:'EFTIEN  D  I RCPG=0 Q
"RTN","RCDPTAR1",121,0)
 . S DATA=^TMP("RCDPTAR1",$J,EFTIEN)
"RTN","RCDPTAR1",122,0)
 . S LINES=$S(RCEXCEL:1,1:3)
"RTN","RCDPTAR1",123,0)
 . I RCSCR S LINES=LINES+1
"RTN","RCDPTAR1",124,0)
 . D CHKP(RCNOW,.RCPG,RCHR,RCDT1,RCDT2,RCEXCEL,RCSCR,LINES) I RCPG=0 Q
"RTN","RCDPTAR1",125,0)
 . ; If Excel, display as delimited and quit
"RTN","RCDPTAR1",126,0)
 . I RCEXCEL W !,$P(DATA,U,9),$$EFT(EFTIEN),U,$P(DATA,U,1,8) Q
"RTN","RCDPTAR1",127,0)
 . ;
"RTN","RCDPTAR1",128,0)
 . ; Display non-Excel output
"RTN","RCDPTAR1",129,0)
 . W !,$P(DATA,U,9),$$EFT(EFTIEN),?13,$P(DATA,U,1),?25,$P(DATA,U,2),?37,$J($P(DATA,U,3),13,2),?54,$P(DATA,U,4),?69,$P(DATA,U,5)
"RTN","RCDPTAR1",130,0)
 . W !,?4,$P(DATA,U,6)
"RTN","RCDPTAR1",131,0)
 . W !,?11,$P(DATA,U,7),"/",$P(DATA,U,8)
"RTN","RCDPTAR1",132,0)
 ;
"RTN","RCDPTAR1",133,0)
 I 'RCSCR W !,@IOF
"RTN","RCDPTAR1",134,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","RCDPTAR1",135,0)
 D ^%ZISC
"RTN","RCDPTAR1",136,0)
 ;
"RTN","RCDPTAR1",137,0)
 I RCPG,RCSCR D PAUSE
"RTN","RCDPTAR1",138,0)
 Q
"RTN","RCDPTAR1",139,0)
 ;
"RTN","RCDPTAR1",140,0)
HEADER(RCNOW,RCPG,RCHR,RCDT1,RCDT2,RCEXCEL) ;
"RTN","RCDPTAR1",141,0)
 ; Print Header Section
"RTN","RCDPTAR1",142,0)
 ;
"RTN","RCDPTAR1",143,0)
 W @IOF
"RTN","RCDPTAR1",144,0)
 ;
"RTN","RCDPTAR1",145,0)
 ; If Excel, print column headers separated with up-arrows and quit
"RTN","RCDPTAR1",146,0)
 I $G(RCEXCEL) D  Q
"RTN","RCDPTAR1",147,0)
 . W !,"EFT#^DATE RECEIVED^DEPOSIT#^EFT TOTAL AMT^DATE MATCHED^DATE POSTED^TRACE #^PAYER NAME^PAYER ID"
"RTN","RCDPTAR1",148,0)
 . S RCPG=1
"RTN","RCDPTAR1",149,0)
 ;
"RTN","RCDPTAR1",150,0)
 ; Non-Excel Header
"RTN","RCDPTAR1",151,0)
 N LINE
"RTN","RCDPTAR1",152,0)
 S RCPG=RCPG+1
"RTN","RCDPTAR1",153,0)
 S LINE="EFT TRANSACTION AUDIT REPORT - SUMMARY     Page: "_RCPG
"RTN","RCDPTAR1",154,0)
 W !?(IOM-$L(LINE)\2),LINE
"RTN","RCDPTAR1",155,0)
 S LINE="RUN DATE: "_RCNOW
"RTN","RCDPTAR1",156,0)
 W !?(IOM-$L(LINE)\2),LINE
"RTN","RCDPTAR1",157,0)
 S LINE="DATE RANGE: "_$$DATE^RCDPRU(RCDT1,"2D")_" - "_$$DATE^RCDPRU(RCDT2,"2D")_" (DATE DEPOSIT ADDED)"
"RTN","RCDPTAR1",158,0)
 W !?(IOM-$L(LINE)\2),LINE
"RTN","RCDPTAR1",159,0)
 W !!,"EFT#",?13,"DATE RECVD",?25,"DEPOSIT#",?37,"EFT TOTAL AMT",?54,"DATE MATCHED",?69,"DATE POSTED"
"RTN","RCDPTAR1",160,0)
 W !,?4,"TRACE #",!,?11,"PAYER NAME/ID"
"RTN","RCDPTAR1",161,0)
 W !,RCHR
"RTN","RCDPTAR1",162,0)
 Q
"RTN","RCDPTAR1",163,0)
 ;
"RTN","RCDPTAR1",164,0)
EXMSG ;
"RTN","RCDPTAR1",165,0)
 ;Displays the message about capturing to an Excel file format
"RTN","RCDPTAR1",166,0)
 ;
"RTN","RCDPTAR1",167,0)
 W !!?5,"To capture as an Excel format, it is recommended that you queue this"
"RTN","RCDPTAR1",168,0)
 W !?5,"report to a spool device with margins of 256 and page length of 99999"
"RTN","RCDPTAR1",169,0)
 W !?5,"(e.g. spoolname;256;99999). This should help avoid wrapping problems."
"RTN","RCDPTAR1",170,0)
 W !!?5,"Another method would be to set up your terminal to capture the detail"
"RTN","RCDPTAR1",171,0)
 W !?5,"report data. On some terminals, this can be done by clicking on the"
"RTN","RCDPTAR1",172,0)
 W !?5,"'Tools' menu above, then click on 'Capture Incoming Data' to save to"
"RTN","RCDPTAR1",173,0)
 W !?5,"Desktop.  To avoid undesired wrapping of the data saved to the file,"
"RTN","RCDPTAR1",174,0)
 W !?5,"please enter '0;256;99999' at the 'DEVICE:' prompt.",!
"RTN","RCDPTAR1",175,0)
 Q
"RTN","RCDPTAR1",176,0)
 ;
"RTN","RCDPTAR1",177,0)
PAUSE() ;
"RTN","RCDPTAR1",178,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","RCDPTAR1",179,0)
 S DIR(0)="E"
"RTN","RCDPTAR1",180,0)
 D ^DIR
"RTN","RCDPTAR1",181,0)
 Q Y
"RTN","RCDPTAR1",182,0)
 ;
"RTN","RCDPTAR1",183,0)
CHKP(RCNOW,RCPG,RCHR,RCDT1,RCDT2,RCEXCEL,RCSCR,LINES) ;
"RTN","RCDPTAR1",184,0)
 ; Check if we need to do a page break
"RTN","RCDPTAR1",185,0)
 ;
"RTN","RCDPTAR1",186,0)
 I $Y'>(IOSL-LINES) Q
"RTN","RCDPTAR1",187,0)
 I RCSCR,'$$PAUSE S RCPG=0 Q
"RTN","RCDPTAR1",188,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCDT1,RCDT2,RCEXCEL)
"RTN","RCDPTAR1",189,0)
 Q
"RTN","RCDPTAR1",190,0)
 ;
"RTN","RCDPTAR1",191,0)
EFT(EFTIEN) ; Format EFT output - EFT.SEQ - PRCA*4.5*326
"RTN","RCDPTAR1",192,0)
 Q $$GET1^DIQ(344.31,EFTIEN_",",.01,"E")
"RTN","RCDPUREC")
0^26^B141629081
"RTN","RCDPUREC",1,0)
RCDPUREC ;WISC/RFJ - receipt utilities ;Jun 06, 2014@19:11:19
"RTN","RCDPUREC",2,0)
 ;;4.5;Accounts Receivable;**114,148,169,173,208,222,293,298,321,326**;Mar 20, 1995;Build 26
"RTN","RCDPUREC",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPUREC",4,0)
 Q
"RTN","RCDPUREC",5,0)
 ;
"RTN","RCDPUREC",6,0)
ADDRECT(TRANDATE,RCDEPTDA,PAYTYPDA) ;  add a receipt
"RTN","RCDPUREC",7,0)
 ;
"RTN","RCDPUREC",8,0)
 ;  if deposit or payment type is missing, do not add the receipt
"RTN","RCDPUREC",9,0)
 I 'RCDEPTDA!('PAYTYPDA) Q 0
"RTN","RCDPUREC",10,0)
 ;
"RTN","RCDPUREC",11,0)
 N DA,DATA,RCDPFLAG,RECEIPT,TYPE
"RTN","RCDPUREC",12,0)
 ;  if a receipt has already been added for this transmission date
"RTN","RCDPUREC",13,0)
 ;  and deposit number, do not add a new one
"RTN","RCDPUREC",14,0)
 S DA=0 F  S DA=$O(^RCY(344,"AD",+RCDEPTDA,DA)) Q:'DA  S DATA=$G(^RCY(344,DA,0)) I $P($P(DATA,"^",3),".")=TRANDATE,$P(DATA,"^",4)=PAYTYPDA S RCDPFLAG=1 Q
"RTN","RCDPUREC",15,0)
 I $G(RCDPFLAG) Q DA
"RTN","RCDPUREC",16,0)
 ;
"RTN","RCDPUREC",17,0)
 Q $$BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA)
"RTN","RCDPUREC",18,0)
 ;
"RTN","RCDPUREC",19,0)
BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA,RCDUZ) ; function, Build a receipt with/without deposit
"RTN","RCDPUREC",20,0)
 ; LAYGO new entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",21,0)
 ; returns new IEN on success, else zero
"RTN","RCDPUREC",22,0)
 ;
"RTN","RCDPUREC",23,0)
 N GOTONE,RECEIPT,TYPE
"RTN","RCDPUREC",24,0)
 ; ATTMPT - count of attempts
"RTN","RCDPUREC",25,0)
 ; GOTONE - new receipt # flag
"RTN","RCDPUREC",26,0)
 S GOTONE=0
"RTN","RCDPUREC",27,0)
 ;  build unique receipt number for date
"RTN","RCDPUREC",28,0)
 S TYPE=$E($G(^RC(341.1,PAYTYPDA,0))) I TYPE="" S TYPE="Z"  ; ^RC(341.1,0) = AR EVENT TYPE
"RTN","RCDPUREC",29,0)
 I TYPE="C",$G(RCDEPTDA)["ERACHK" S RCDEPTDA=+RCDEPTDA,TYPE="E" ; ERA plus paper check EDI Lockbox receipt
"RTN","RCDPUREC",30,0)
 ;
"RTN","RCDPUREC",31,0)
 ; Accounts Receivable Nightly Process Background Job [PRCA NIGHTLY PROCESS]
"RTN","RCDPUREC",32,0)
 ; -----
"RTN","RCDPUREC",33,0)
 ;
"RTN","RCDPUREC",34,0)
 ;lockbox receipt in the form of L980901A0, do not include century
"RTN","RCDPUREC",35,0)
 F  D  Q:+GOTONE&$L(RECEIPT)  ; must be new and non-null
"RTN","RCDPUREC",36,0)
 .;find a unique receipt #
"RTN","RCDPUREC",37,0)
 .S RECEIPT=$$NEXT(TYPE_$E(TRANDATE,2,7))  ;get last two digits from 00 to ZZ 
"RTN","RCDPUREC",38,0)
 .I RECEIPT="" Q
"RTN","RCDPUREC",39,0)
 .I $D(^RCY(344,"B",RECEIPT)) Q  ; AR BATCH PAYMENT file (#344), RECEIPT # field (#.01)
"RTN","RCDPUREC",40,0)
 .I $D(^PRCA(433,"AF",RECEIPT)) Q  ; AR TRANSACTION file (#433), RECEIPT # field (#13)
"RTN","RCDPUREC",41,0)
 .S GOTONE=1
"RTN","RCDPUREC",42,0)
 ;
"RTN","RCDPUREC",43,0)
 ;
"RTN","RCDPUREC",44,0)
 L +^RCY(344,"B",RECEIPT):DILOCKTM E  Q 0 ; PRCA*4.5*298, if LOCK timeout return zero
"RTN","RCDPUREC",45,0)
 ;
"RTN","RCDPUREC",46,0)
 ; add entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",47,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPUREC",48,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPUREC",49,0)
 ;  .02 = opened by                  .03 = date opened = transmission dt
"RTN","RCDPUREC",50,0)
 ;  .04 = type of payment            .06 = deposit ticket
"RTN","RCDPUREC",51,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPUREC",52,0)
 S DIC("DR")=".02////"_$S($G(RCDUZ):RCDUZ,1:DUZ) ; PRCA*4.5*326 Use RCDUZ passed in
"RTN","RCDPUREC",53,0)
 S DIC("DR")=DIC("DR")_";.03///"_TRANDATE_";.04////"_PAYTYPDA_$S(RCDEPTDA:";.06////"_RCDEPTDA,1:"")_";.14////1;"
"RTN","RCDPUREC",54,0)
 S X=RECEIPT
"RTN","RCDPUREC",55,0)
 D FILE^DICN
"RTN","RCDPUREC",56,0)
 L -^RCY(344,"B",RECEIPT)
"RTN","RCDPUREC",57,0)
 I Y>0 Q +Y  ; Y set by DICN, return new IEN
"RTN","RCDPUREC",58,0)
 Q 0  ; entry not created
"RTN","RCDPUREC",59,0)
 ;
"RTN","RCDPUREC",60,0)
 ;
"RTN","RCDPUREC",61,0)
NEXT(RECEIPT) ; function, get next 2 chars. in sequence 00 to ZZ for receipt
"RTN","RCDPUREC",62,0)
 ;
"RTN","RCDPUREC",63,0)
 ;  start with 00
"RTN","RCDPUREC",64,0)
 I '$D(^RCY(344,"B",RECEIPT_"00")),'$D(^RCY(344,"B",RECEIPT_"00A")) Q RECEIPT_"00"
"RTN","RCDPUREC",65,0)
 ;
"RTN","RCDPUREC",66,0)
 N DIGIT1,DIGIT2,LAST
"RTN","RCDPUREC",67,0)
 ;  get the last one used and increment by 1
"RTN","RCDPUREC",68,0)
 S LAST=$O(^RCY(344,"B",RECEIPT_"ZZ"),-1)  ;example L2980901ZZ
"RTN","RCDPUREC",69,0)
 S DIGIT1=$A($E(LAST,8)),DIGIT2=$A($E(LAST,9))
"RTN","RCDPUREC",70,0)
 ;  increment the ascii value of last digit
"RTN","RCDPUREC",71,0)
 S DIGIT2=DIGIT2+1
"RTN","RCDPUREC",72,0)
 ;  ascii 48=0, 57=9, 65=A, 90=Z
"RTN","RCDPUREC",73,0)
 I DIGIT2>57,DIGIT2<65 S DIGIT2=65 ;an A
"RTN","RCDPUREC",74,0)
 ;  digit2 above a Z, set digit2 to a 0 and increment digit 1
"RTN","RCDPUREC",75,0)
 I DIGIT2>90 S DIGIT2=48,DIGIT1=DIGIT1+1
"RTN","RCDPUREC",76,0)
 I DIGIT1>57,DIGIT1<65 S DIGIT1=65 ;an A
"RTN","RCDPUREC",77,0)
 ;  digit 1 is above a Z, reset and reuse the Z
"RTN","RCDPUREC",78,0)
 I DIGIT1>90 S DIGIT1=90,DIGIT2=90
"RTN","RCDPUREC",79,0)
 ;
"RTN","RCDPUREC",80,0)
 ; If Receipt # already on file get another one
"RTN","RCDPUREC",81,0)
 F  Q:'$D(^RCY(344,"B",RECEIPT_$C(DIGIT1)_$C(DIGIT2)))  D
"RTN","RCDPUREC",82,0)
 . S RECEIPT=$E(RECEIPT,1)_$E(1000001+$E(RECEIPT,2,7),2,7)
"RTN","RCDPUREC",83,0)
 ;
"RTN","RCDPUREC",84,0)
 Q RECEIPT_$C(DIGIT1)_$C(DIGIT2)
"RTN","RCDPUREC",85,0)
 ;
"RTN","RCDPUREC",86,0)
 ;
"RTN","RCDPUREC",87,0)
SELRECT(ADDNEW,RCDEPTDA) ;  select a receipt
"RTN","RCDPUREC",88,0)
 ;  if $g(addnew) allow adding a new receipt
"RTN","RCDPUREC",89,0)
 ;  if $g(rcdeptda) allow selection of receipts for the deposit only
"RTN","RCDPUREC",90,0)
 ;  if $g(addnew) and $g(rcdeptda) deposit number auto set for new receipt
"RTN","RCDPUREC",91,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of receipt
"RTN","RCDPUREC",92,0)
 N %,%Y,C,D0,DA,DI,DIC,DIE,DIK,DG,DLAYGO,DQ,DR,DTOUT,DUOUT,RCREFLUP,X,Y,RCDE,RCLB,RC1,RC2,RCREQ,RCY
"RTN","RCDPUREC",93,0)
 S DIC="^RCY(344,",DIC(0)="QEAM",DIC("A")="Select RECEIPT: "
"RTN","RCDPUREC",94,0)
 S DIC("W")="D DICW^RCDPUREC"
"RTN","RCDPUREC",95,0)
 ;  set screen to select receipts linked to deposit and to screen out
"RTN","RCDPUREC",96,0)
 ;  selection of EDI Lockbox-type receipts unless an EFT is associated
"RTN","RCDPUREC",97,0)
 ;  with the deposit and the receipt is not associated with an ERA
"RTN","RCDPUREC",98,0)
 S RCDE=+$O(^RCY(344.3,"ARDEP",+$G(RCDEPTDA),0))
"RTN","RCDPUREC",99,0)
 I $G(RCDEPTDA) D
"RTN","RCDPUREC",100,0)
 .   S DIC("S")="N Z S Z=$G(^(0)) I $S('$$EDILBEV^RCDPEU($P(Z,U,4)):'RCDE,1:RCDE&'$P(Z,U,18)),($P(Z,U,6)=""""!($P(Z,U,6)=RCDEPTDA))"
"RTN","RCDPUREC",101,0)
 .   S DIC("A")="Select RECEIPT (for deposit "_$P(^RCY(344.1,RCDEPTDA,0),"^")_"): "
"RTN","RCDPUREC",102,0)
 ;  use special lookup on input
"RTN","RCDPUREC",103,0)
 I '$G(RCDEPTDA) S RCREFLUP=1
"RTN","RCDPUREC",104,0)
 ;  add new entries
"RTN","RCDPUREC",105,0)
 S RC1="TYPE NOT VALID FOR THIS RECEIPT",RC2=">>AN EFT REFERENCE IS REQUIRED"
"RTN","RCDPUREC",106,0)
 I $G(ADDNEW) D
"RTN","RCDPUREC",107,0)
 .   S DIC("A")="Select RECEIPT (or add a new one): "
"RTN","RCDPUREC",108,0)
 .   S DIC(0)="QEALM",DLAYGO=344
"RTN","RCDPUREC",109,0)
 .   S DIC("DR")="S RCREQ=0;.02////"_DUZ_";.03///NOW;.14////1;@4;.04"_$S(RCDE:"////"_$$LBEVENT^RCDPEU(),1:"")
"RTN","RCDPUREC",110,0)
 .   ; Next line use EFT picker utility instead of .17 in DR string - PRCA*4.5*326
"RTN","RCDPUREC",111,0)
 .   ; Do not delete DIC("W") from the DR string. It has a role in ^DIC flow if an EFT is not picked.
"RTN","RCDPUREC",112,0)
 .   S DIC("DR")=DIC("DR")_";S RCLB=$$EDILBEV^RCDPEU(+X) S:'RCLB Y=""@6"";I $G(RCDEPTDA) S Y=$S('RCDE:""@8"",1:""@6"");W !,RC2 S RCREQ=1,DIC(""W"")="""";D EFT344^RCDPEU2(""   AR BATCH PAYMENT EFT RECORD: "",DA);S Y=""@99"""
"RTN","RCDPUREC",113,0)
 .   S DIC("DR")=DIC("DR")_";@6;.06"_$S($G(RCDEPTDA):"////"_RCDEPTDA,1:"")_";S:'RCDE Y=""@99"";.17////"_+RCDE_";S Y=""@99"";@8;W *7,!,RC1 S Y=""@4"";@99"
"RTN","RCDPUREC",114,0)
 .   S DIC("DR")=DIC("DR")_";"
"RTN","RCDPUREC",115,0)
 D ^DIC
"RTN","RCDPUREC",116,0)
 S RCY=Y
"RTN","RCDPUREC",117,0)
 I RCY<0,'$G(DUOUT),'$G(DTOUT) S RCY=0
"RTN","RCDPUREC",118,0)
 I $P(RCY,U,3),$G(RCREQ) D
"RTN","RCDPUREC",119,0)
 . I '$P($G(^RCY(344,+RCY,0)),U,17) D  Q
"RTN","RCDPUREC",120,0)
 .. W !,*7,"NO EFT REFERENCED - RECEIPT NOT ADDED"
"RTN","RCDPUREC",121,0)
 .. S DA=+RCY,DIK="^RCY(344," D ^DIK
"RTN","RCDPUREC",122,0)
 .. S RCY=0
"RTN","RCDPUREC",123,0)
 . S DIE="^RCY(344.31,",DA=$P(^RCY(344,+RCY,0),U,17),DR=".08////2" D ^DIE
"RTN","RCDPUREC",124,0)
 Q +RCY
"RTN","RCDPUREC",125,0)
 ;
"RTN","RCDPUREC",126,0)
 ;
"RTN","RCDPUREC",127,0)
DICW ;  write identifier code for receipt lookup
"RTN","RCDPUREC",128,0)
 N DATA
"RTN","RCDPUREC",129,0)
 S DATA=$G(^RCY(344,Y,0)) I DATA="" Q
"RTN","RCDPUREC",130,0)
 ;  opened by
"RTN","RCDPUREC",131,0)
 W ?13,"by: ",$E($P($G(^VA(200,+$P(DATA,"^",2),0)),"^"),1,15)
"RTN","RCDPUREC",132,0)
 ;  date opened
"RTN","RCDPUREC",133,0)
 I '$P(DATA,"^",3) S $P(DATA,"^",3)="???????"
"RTN","RCDPUREC",134,0)
 W ?35," on: ",$E($P(DATA,"^",3),4,5),"/",$E($P(DATA,"^",3),6,7),"/",$E($P(DATA,"^",3),2,3)
"RTN","RCDPUREC",135,0)
 ;  type of payment
"RTN","RCDPUREC",136,0)
 W ?50," ",$E($P($G(^RC(341.1,+$P(DATA,"^",4),0)),"^"),1,18)
"RTN","RCDPUREC",137,0)
 ;  status
"RTN","RCDPUREC",138,0)
 W ?70," ",$S($P(DATA,"^",14):"OPEN",1:"CLOSED")
"RTN","RCDPUREC",139,0)
 Q
"RTN","RCDPUREC",140,0)
 ;
"RTN","RCDPUREC",141,0)
 ;
"RTN","RCDPUREC",142,0)
LOOKUP ;  special lookup on receipts, called from ^dd(344,.01,7.5)
"RTN","RCDPUREC",143,0)
 ;  if rcreflup flag not set, do not use special lookup
"RTN","RCDPUREC",144,0)
 I '$D(RCREFLUP) Q
"RTN","RCDPUREC",145,0)
 ;  user entered O.? for lookup on open receipts
"RTN","RCDPUREC",146,0)
 I X["O."!(X["o.") S DIC("S")="I $P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",147,0)
 ;  user entered C.? for lookup on closed receipts
"RTN","RCDPUREC",148,0)
 I X["C."!(X["c.") S DIC("S")="I '$P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",149,0)
 K DIC("S")
"RTN","RCDPUREC",150,0)
 Q
"RTN","RCDPUREC",151,0)
 ;
"RTN","RCDPUREC",152,0)
 ; PRCA*4.5*298 - updated logic and comments in EDITREC
"RTN","RCDPUREC",153,0)
EDITREC(DA,DR) ;  edit the receipt (DR = string of fields to ask) in AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",154,0)
 ; RCBPYMNT - AR BATCH PAYMENT entry before edit
"RTN","RCDPUREC",155,0)
 N D,D0,DI,DIC,DIE,DQ,EFTKEY,RCBPYMNT,RCDA,RCDR1,RCDR2,RCDR3,X,Y
"RTN","RCDPUREC",156,0)
 S (DIC,DIE)="^RCY(344,",RCDA=DA
"RTN","RCDPUREC",157,0)
 S EFTKEY=$$EFTKEY() ; PRCA*4.5*321 - Check if user has key to unmatch EFTs
"RTN","RCDPUREC",158,0)
 I $G(DR)="" N DR D
"RTN","RCDPUREC",159,0)
 . S DR=".01;.04;"_$S($P($G(^RCY(344,RCDA,0)),U,17):"",1:"I $P($G(^RCY(344,DA,0)),U,17) S Y=""@1001"";.06;@1001;")_"D LBT^RCDPUREC(.Y);.18;@99"
"RTN","RCDPUREC",160,0)
 ;
"RTN","RCDPUREC",161,0)
 I $G(DR)[".04;" D  ; Add a check to DR string for type of payment edit
"RTN","RCDPUREC",162,0)
 .D EDIT4^RCDPURE1(RCDA,DR,.RCDR1,.RCDR2,.RCDR3)  ; get new DR strings in RCDR1,RCDR2,RCDR3
"RTN","RCDPUREC",163,0)
 .S DR=$S($E(RCDR1,$L(RCDR1))'=";":RCDR1,1:$E(RCDR1,1,$L(RCDR1)-1)),DR(1,344,1)=RCDR2,DR(1,344,2)=RCDR3
"RTN","RCDPUREC",164,0)
 ;
"RTN","RCDPUREC",165,0)
 M RCBPYMNT=^RCY(344,DA)  ; save initial values
"RTN","RCDPUREC",166,0)
 ;
"RTN","RCDPUREC",167,0)
 D ^DIE
"RTN","RCDPUREC",168,0)
 ;
"RTN","RCDPUREC",169,0)
 ; (#.04) TYPE OF PAYMENT [4P:341.1], (#.06) DEPOSIT TICKET [6P:344.1], (#.17) EFT RECORD [17P:344.31]
"RTN","RCDPUREC",170,0)
 ; Delete deposit if EDI Lockbox event and EFT referenced
"RTN","RCDPUREC",171,0)
 I $P($G(^RCY(344,RCDA,0)),U,6),$P(^(0),U,17),$$EDILBEV^RCDPEU(+$P(^(0),U,4)) S DIE="^RCY(344,",DR=".06///@" D ^DIE
"RTN","RCDPUREC",172,0)
 Q:'$D(^RCY(344,RCDA,0))  ; entry should still exist
"RTN","RCDPUREC",173,0)
 ;
"RTN","RCDPUREC",174,0)
 ; check if TYPE OF PAYMENT (#.04) changed from CHECK/MO PAYMENT to EDI LOCKBOX, update EFT on RECEIPT
"RTN","RCDPUREC",175,0)
 I $P(RCBPYMNT(0),U,4)=4,$P(^RCY(344,RCDA,0),U,4)=14,$G(RCNE) D
"RTN","RCDPUREC",176,0)
 .K DA,DR S DA=RCDA,DIE="^RCY(344,",DR=".17////"_RCNE D ^DIE
"RTN","RCDPUREC",177,0)
 .D EFTUPD(RCNE,2) ; PRCA*4.5*321 - Change EFT status to PAPER EOB MATCH, notify user.
"RTN","RCDPUREC",178,0)
 .D PAUSE
"RTN","RCDPUREC",179,0)
 ;
"RTN","RCDPUREC",180,0)
 ; check if TYPE OF PAYMENT (#.04) changed from EDI LOCKBOX to CHECK/MO PAYMENT, remove EFT from RECEIPT and
"RTN","RCDPUREC",181,0)
 ; update EDI THIRD PARTY EFT DETAIL status to UNMATCHED
"RTN","RCDPUREC",182,0)
 I $P(RCBPYMNT(0),U,4)=14,$P(^RCY(344,RCDA,0),U,4)=4 D
"RTN","RCDPUREC",183,0)
 .N DA,DR,DIE
"RTN","RCDPUREC",184,0)
 .S DA=RCDA,DIE="^RCY(344,",DR=".17////@" D ^DIE
"RTN","RCDPUREC",185,0)
 .D EFTUPD(+$P(RCBPYMNT(0),U,17),0) ; PRCA*4.5*321 call to change EFT status and notify user.
"RTN","RCDPUREC",186,0)
 .D PAUSE
"RTN","RCDPUREC",187,0)
 ;
"RTN","RCDPUREC",188,0)
 ; PRCA*4.5*321 - Start changed block of code
"RTN","RCDPUREC",189,0)
 ; If this was an EDI LOCKBOX receipt where the EFT was changed insert new EFT
"RTN","RCDPUREC",190,0)
 ; and update original EDI THIRD PARTY EFT DETAIL status to UNMATCHED
"RTN","RCDPUREC",191,0)
 I $P(RCBPYMNT(0),U,4)=14,$P(^RCY(344,RCDA,0),U,4)=14,$G(RCNE),$P(RCBPYMNT(0),U,17)'=RCNE D
"RTN","RCDPUREC",192,0)
 .N DA,DR,DIE
"RTN","RCDPUREC",193,0)
 .S DA=RCDA,DIE="^RCY(344,",DR=".17////"_RCNE D ^DIE
"RTN","RCDPUREC",194,0)
 .D EFTUPD(+$P(RCBPYMNT(0),U,17),0) ; Change EFT status to UNMATCHED, notify user.
"RTN","RCDPUREC",195,0)
 .D EFTUPD(RCNE,2) ; Change EFT status to PAPER EOB MATCH, notify user.
"RTN","RCDPUREC",196,0)
 .D PAUSE
"RTN","RCDPUREC",197,0)
 ; PRCA*4.5*321 - End of changed block of code.
"RTN","RCDPUREC",198,0)
 ;
"RTN","RCDPUREC",199,0)
 D LASTEDIT(RCDA)  ; update (#.11) LAST EDITED BY , (#.12) DATE/TIME LAST EDIT
"RTN","RCDPUREC",200,0)
 ;
"RTN","RCDPUREC",201,0)
 Q
"RTN","RCDPUREC",202,0)
 ;
"RTN","RCDPUREC",203,0)
 ; PRCA*4.5*298 - updated comments in LBT
"RTN","RCDPUREC",204,0)
LBT(Y) ; Determine if Y should be set to @99 in DR string to skip field #.18 ERA REFERENCE
"RTN","RCDPUREC",205,0)
 ; DR(1,344,2)="I $P($G(^RCY(344,DA,0)),U,17) S Y=""@1001"";.06;@1001;D LBT^RCDPUREC(.Y);.18;@99"
"RTN","RCDPUREC",206,0)
 ;  code below assumes DA,RCM3 are set
"RTN","RCDPUREC",207,0)
 N Z,Z0
"RTN","RCDPUREC",208,0)
 ; Z will be true if TYPE OF PAYMENT [4P:341.1] is EDI LOCKBOX
"RTN","RCDPUREC",209,0)
 S Z0=$G(^RCY(344,DA,0)),Z=($P(Z0,U,4)=$$LBEVENT^RCDPEU())
"RTN","RCDPUREC",210,0)
 ; (#.18) ERA REFERENCE [18P:344.4]
"RTN","RCDPUREC",211,0)
 ; Don't allow to edit ERA reference if worklist created it
"RTN","RCDPUREC",212,0)
 ;  ^DD(344.49,.02,0) = "RECEIPT #^P344'^RCY(344,^0;2^Q"
"RTN","RCDPUREC",213,0)
 I $P($G(^RCY(344.49,+$P(Z0,U,18),0)),U,2)=DA S Y="@99" Q
"RTN","RCDPUREC",214,0)
 ; only ask for ERA if not EDI lockbox and deposit # exists
"RTN","RCDPUREC",215,0)
 I $S(Z:1,1:'$P($G(^RCY(344,DA,0)),U,6)) S Y="@99" Q
"RTN","RCDPUREC",216,0)
 W !,RCM3  ; RCM,RCM1,RCM2,RCM3 set in SETV^RCDPURE1
"RTN","RCDPUREC",217,0)
 Q
"RTN","RCDPUREC",218,0)
 ;
"RTN","RCDPUREC",219,0)
 ; PRCA*4.5*298 - updated logic and comments in TYP
"RTN","RCDPUREC",220,0)
TYP(Y) ; Determine where to jump to in the 'type' edit of
"RTN","RCDPUREC",221,0)
 ; Y - passed by ref. from DR string logic
"RTN","RCDPUREC",222,0)
 ; DR(1,344,1)="@20;.04;S RCNO=0,RCN4=X D TYP^RCDPUREC(.Y);.17////^S X=RCNE;S Y=""@22"";@21;.04////^S X=RCO4;I RCOE="""" S Y=""@23"";.17////^S X=RCOE;@23;W !,*7,$S(RCO4=14:$S('RCNO:RCM1,1:RCM2),1:RCM) S Y=""@20"";@22"
"RTN","RCDPUREC",223,0)
 ;  Assumes RCP,RCNO,RCN4,RCO4,DA defined
"RTN","RCDPUREC",224,0)
 N DIR,RCCHANGE,RCEFTSWP
"RTN","RCDPUREC",225,0)
 S RCEFTSWP=EFTKEY&((RCO4=14)&(RCN4=14)) ; PRCA*4.5*321 - Allow edit of matched EFT with security key
"RTN","RCDPUREC",226,0)
 I $S(RCEFTSWP:0,RCN4=RCO4:1,(RCO4'=4)&(RCN4'=4)&(RCO4'=14)&(RCN4'=14):1,1:0) S Y=RCP+2 G TYPQ
"RTN","RCDPUREC",227,0)
 ; To get here, the type was changed and it either was 4 or 14 OR is now 4 or 14
"RTN","RCDPUREC",228,0)
 ; Or per PRCA*4.5*231 user has unmatch key and type is 14 (EDI LOCKBOX) 
"RTN","RCDPUREC",229,0)
 S RCCHANGE=(RCN4'=RCO4)
"RTN","RCDPUREC",230,0)
 I RCCHANGE D  G:Y TYPQ
"RTN","RCDPUREC",231,0)
 .; If receipt Status is OPEN, EDI LOCKBOX can only be changed to CHECK/MO PAYMENT and vice-versa
"RTN","RCDPUREC",232,0)
 .I $P(^RCY(344,DA,0),"^",14),(RCO4=4&(RCN4'=14))!(RCO4=14&(RCN4'=4)) D  S Y=RCP Q  ; PRCA*4.5*321
"RTN","RCDPUREC",233,0)
 ..S $P(^RCY(344,DA,0),"^",4)=RCO4
"RTN","RCDPUREC",234,0)
 ..W !!,"The Payment Type can only be changed to "
"RTN","RCDPUREC",235,0)
 ..W $S(RCO4=4:$$GET1^DIQ(341.1,14,.01),1:$$GET1^DIQ(341.1,4,.01)),$C(7),!
"RTN","RCDPUREC",236,0)
 .; Type can't be changed if the old type was EDI Lockbox and there is an ERA detail record
"RTN","RCDPUREC",237,0)
 .; associated with it. Unless user has the UNMATCH EFT key.
"RTN","RCDPUREC",238,0)
 .I 'EFTKEY,RCO4=14,$P($G(^RCY(344,DA,0)),U,18) S Y=RCP+1 Q  ; PRCA*4.5*321
"RTN","RCDPUREC",239,0)
 .; Type can't be changed to EDI Lockbox if receipt detail already exists. Unless user has the
"RTN","RCDPUREC",240,0)
 .; UNMATCH EFT key.
"RTN","RCDPUREC",241,0)
 .I 'EFTKEY,RCN4=14,$O(^RCY(344,DA,1,0)) S Y=RCP+1 Q         ; PRCA*4.5*321
"RTN","RCDPUREC",242,0)
 .; If payment type was EDI LOCKBOX and is to be changed to CHECK/MO PAYMENT (or vice-versa) confirm with user
"RTN","RCDPUREC",243,0)
 .I (RCO4=14&(RCN4=4))!(RCO4=4&(RCN4=14)) D  Q
"RTN","RCDPUREC",244,0)
 ..K DIR S DIR(0)="Y"
"RTN","RCDPUREC",245,0)
 ..S DIR("A")="Are you sure you want to change Payment Type to "_$$GET1^DIQ(341.1,RCN4,.01),DIR("B")="NO"
"RTN","RCDPUREC",246,0)
 ..W ! D ^DIR W !
"RTN","RCDPUREC",247,0)
 ..I 'Y S $P(^RCY(344,DA,0),"^",4)=RCO4,Y=RCP Q
"RTN","RCDPUREC",248,0)
 ..S:Y Y=RCP+2 S:RCN4=14 Y=0
"RTN","RCDPUREC",249,0)
 ;
"RTN","RCDPUREC",250,0)
 I RCN4'=14 S Y=RCP+2
"RTN","RCDPUREC",251,0)
 ; fall through to TYPQ
"RTN","RCDPUREC",252,0)
TYPQ ;
"RTN","RCDPUREC",253,0)
 ; If type changed to EDI LOCKBOX, must have an EFT reference
"RTN","RCDPUREC",254,0)
 I '$G(Y) D
"RTN","RCDPUREC",255,0)
 .; If ERA is matched to EFT, don't allow to edit EFT unless user has key PRCA*4.5*321
"RTN","RCDPUREC",256,0)
 .I 'EFTKEY,$P($G(^RCY(344,DA,0)),U,17),$P($G(^(0)),U,18),$D(^RCY(344.31,"AERA",+$P($G(^RCY(344,DA,0)),U,18),+$P($G(^RCY(344,DA,0)),U,17))) S Y=RCP+2 Q
"RTN","RCDPUREC",257,0)
 .S RCNE=$$ASK17(DA) I 'RCNE S RCNO=1,Y=RCP+1 Q
"RTN","RCDPUREC",258,0)
 ;
"RTN","RCDPUREC",259,0)
 I $G(Y) S Y="@"_Y
"RTN","RCDPUREC",260,0)
 Q
"RTN","RCDPUREC",261,0)
 ;
"RTN","RCDPUREC",262,0)
LASTEDIT(DA) ;  set when receipt last edit
"RTN","RCDPUREC",263,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",264,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",265,0)
 S DR=".11////"_DUZ_";.12///NOW;"
"RTN","RCDPUREC",266,0)
 D ^DIE
"RTN","RCDPUREC",267,0)
 Q
"RTN","RCDPUREC",268,0)
 ;
"RTN","RCDPUREC",269,0)
 ;
"RTN","RCDPUREC",270,0)
MARKPROC(DA,FMSDOCNO) ;  mark receipt as processed, set receipt as closed,
"RTN","RCDPUREC",271,0)
 ;  store fms document number if passed
"RTN","RCDPUREC",272,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",273,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",274,0)
 S DR=".07////"_DUZ_";.08///NOW;.14////0;"
"RTN","RCDPUREC",275,0)
 I $G(FMSDOCNO)'="" S DR=DR_"200////"_FMSDOCNO_";"
"RTN","RCDPUREC",276,0)
 D ^DIE
"RTN","RCDPUREC",277,0)
 Q
"RTN","RCDPUREC",278,0)
 ;
"RTN","RCDPUREC",279,0)
FMSSTAT(RCRECTDA) ;  return the fms cr document ^ status ^ if sent before lockbox
"RTN","RCDPUREC",280,0)
 N FMSDOCNO,PRELOCK,STATUS
"RTN","RCDPUREC",281,0)
 ;  get the fms document from the receipt
"RTN","RCDPUREC",282,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPUREC",283,0)
 ;  if not on receipt, it may be earlier than lockbox and on deposit
"RTN","RCDPUREC",284,0)
 I FMSDOCNO="" S FMSDOCNO=$P($G(^RCY(344.1,+$P($G(^RCY(344,RCRECTDA,0)),"^",6),2)),"^") I FMSDOCNO'="" S PRELOCK=1
"RTN","RCDPUREC",285,0)
 S STATUS=$$STATUS^GECSSGET(FMSDOCNO)
"RTN","RCDPUREC",286,0)
 I STATUS=-1 S STATUS="NOT ENTERED"
"RTN","RCDPUREC",287,0)
 ;
"RTN","RCDPUREC",288,0)
 ;  if the cr document is entered, check to see if entered on line
"RTN","RCDPUREC",289,0)
 I FMSDOCNO'="",$P($G(^RCY(344,RCRECTDA,2)),"^",2) S STATUS="ON LINE ENTRY"
"RTN","RCDPUREC",290,0)
 ;
"RTN","RCDPUREC",291,0)
 ;  if the cr document is missing, set status to not sent
"RTN","RCDPUREC",292,0)
 I FMSDOCNO="" S FMSDOCNO="NOT SENT"
"RTN","RCDPUREC",293,0)
 ;
"RTN","RCDPUREC",294,0)
 Q FMSDOCNO_"^"_STATUS_"^"_$G(PRELOCK)
"RTN","RCDPUREC",295,0)
 ;
"RTN","RCDPUREC",296,0)
 ; PRCA*4.5*321 - Updated for UNMATCH key changes
"RTN","RCDPUREC",297,0)
ASK17(DA) ; function, Ask, return the EFT detail record IEN for a receipt
"RTN","RCDPUREC",298,0)
 ; Input: DA = the ien of the RECEIPT (file 344)
"RTN","RCDPUREC",299,0)
 ; Returns: IEN in EDI THIRD PARTY EFT DETAIL (#344.31) or zero
"RTN","RCDPUREC",300,0)
 N DIR,OLDEFT,RCARR,QUIT,X,Y
"RTN","RCDPUREC",301,0)
 S OLDEFT=$P($G(^RCY(344,DA,0)),U,17)
"RTN","RCDPUREC",302,0)
 S QUIT=0
"RTN","RCDPUREC",303,0)
 I OLDEFT D  I QUIT Q 0 ; Quit here if user does not want to change EFT
"RTN","RCDPUREC",304,0)
 . N DIR,DUOUT,DTOUT,X,Y
"RTN","RCDPUREC",305,0)
 . D GETS^DIQ(344.31,OLDEFT_",",".01;.02;.04;.07","","RCARR")
"RTN","RCDPUREC",306,0)
 . W !,"Existing EFT:  "_$$GET1^DIQ(344.31,OLDEFT_",",.01,"E")_"     "_RCARR(344.31,OLDEFT_",",.02) ; PRCA*4.5*326
"RTN","RCDPUREC",307,0)
 . W "     "_RCARR(344.31,OLDEFT_",",.04)_"     "_RCARR(344.31,OLDEFT_",",.07)
"RTN","RCDPUREC",308,0)
 . W !
"RTN","RCDPUREC",309,0)
 . S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPUREC",310,0)
 . S DIR("A")="Match a different EFT to this receipt"
"RTN","RCDPUREC",311,0)
 . S DIR("?",1)="The receipt is currently matched to the EFT listed above."
"RTN","RCDPUREC",312,0)
 . S DIR("?",2)="If you answer 'Y' or 'YES' you will be prompted for a different EFT"
"RTN","RCDPUREC",313,0)
 . S DIR("?",3)="to match with this receipt."
"RTN","RCDPUREC",314,0)
 . S DIR("?")="If you answer 'N' or 'NO', no change will be made."
"RTN","RCDPUREC",315,0)
 . D ^DIR
"RTN","RCDPUREC",316,0)
 . I $D(DUOUT)!$D(DTOUT)!('Y) S QUIT=1
"RTN","RCDPUREC",317,0)
 ;
"RTN","RCDPUREC",318,0)
 ; BEGIN - PRCA*4.5*326 - replace ^DIR with ^DIC
"RTN","RCDPUREC",319,0)
G17 ; Reprompt for new EFT
"RTN","RCDPUREC",320,0)
 N FDA,RCPROMPT,RCSCREEN,Y
"RTN","RCDPUREC",321,0)
 S RCPROMPT="  NEW EFT DETAIL RECORD: "
"RTN","RCDPUREC",322,0)
 S RCSCREEN="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPUREC",323,0)
G1 S Y=$$ASKEFT^RCDPEU2(RCPROMPT,RCSCREEN)
"RTN","RCDPUREC",324,0)
 I Y=-1 Q 0
"RTN","RCDPUREC",325,0)
 I Y=0 D  G G1
"RTN","RCDPUREC",326,0)
 . W !,*7,"Must have an EFT for an EDI Lockbox payment type"
"RTN","RCDPUREC",327,0)
 ; END - PRCA*4.5*326
"RTN","RCDPUREC",328,0)
 Q Y
"RTN","RCDPUREC",329,0)
 ;
"RTN","RCDPUREC",330,0)
EFTKEY() ;Check if user has UNMATCH EFT key
"RTN","RCDPUREC",331,0)
 ; Input: None
"RTN","RCDPUREC",332,0)
 ; Returns; 1 if user owns RCDPEPP key ; otherwise 0.
"RTN","RCDPUREC",333,0)
 N MSG
"RTN","RCDPUREC",334,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPEPP",DUZ)
"RTN","RCDPUREC",335,0)
 Q MSG(0)
"RTN","RCDPUREC",336,0)
 ;
"RTN","RCDPUREC",337,0)
EFTUPD(DA,MATCH) ; Update EFT record if payment type is changed
"RTN","RCDPUREC",338,0)
 ; Input: DA = Internal entry number of EFT record.
"RTN","RCDPUREC",339,0)
 ;        MATCH = New match status for the EFT
"RTN","RCDPUREC",340,0)
 ; Output: Notification to user screen, RCMSG.
"RTN","RCDPUREC",341,0)
 N DIE,DIR,DR,RCMSG,X,Y
"RTN","RCDPUREC",342,0)
 S DIE="^RCY(344.31,"
"RTN","RCDPUREC",343,0)
 I DA S DR=".08////"_MATCH D ^DIE
"RTN","RCDPUREC",344,0)
 S Y=$$GET1^DIQ(344.31,DA_",",.01,"E") ; PRCA*4.5*326
"RTN","RCDPUREC",345,0)
 I Y D  ;
"RTN","RCDPUREC",346,0)
 . S RCMSG="EFT TRANSACTION "_Y_" updated to "_$$GET1^DIQ(344.31,DA_",",.08,"E")
"RTN","RCDPUREC",347,0)
 E  S RCMSG="* EFT RECORD not found! *"
"RTN","RCDPUREC",348,0)
 W !,"   "_RCMSG
"RTN","RCDPUREC",349,0)
 Q
"RTN","RCDPUREC",350,0)
PAUSE ; Pause screen till user hits enter
"RTN","RCDPUREC",351,0)
 ; Input: None
"RTN","RCDPUREC",352,0)
 ; output: None
"RTN","RCDPUREC",353,0)
 N DIR,X,Y
"RTN","RCDPUREC",354,0)
 S DIR(0)="EA",DIR("A")="Press return: " D ^DIR
"RTN","RCDPUREC",355,0)
 Q
"RTN","RCDPUREC",356,0)
 ;
"RTN","RCDPUREC",357,0)
DIC19 ;
"RTN","RCDPUREC",358,0)
 S G="^DIC(19)" F  S G=$Q(@G) Q:'$P(G,"^DIC(",2)=19  I @G["IDP" W !,G,!,@G
"RTN","RCDPUREC",359,0)
 ;
"RTN","RCDPUREC",360,0)
 Q
"RTN","RCDPUREC",361,0)
 ;
"RTN","RCDPURET")
0^29^B76662118
"RTN","RCDPURET",1,0)
RCDPURET ;WISC/RFJ-Receipt utilities (transactions) ;1 Jun 99
"RTN","RCDPURET",2,0)
 ;;4.5;Accounts Receivable;**114,141,169,173,196,221,304,301,326**;Mar 20, 1995;Build 26
"RTN","RCDPURET",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPURET",4,0)
 ;
"RTN","RCDPURET",5,0)
 ;use of IBRFN in tag PB allowed by private IA 2031
"RTN","RCDPURET",6,0)
 Q
"RTN","RCDPURET",7,0)
 ;
"RTN","RCDPURET",8,0)
 ;
"RTN","RCDPURET",9,0)
SELTRAN(DA) ;  select a transaction for a receipt
"RTN","RCDPURET",10,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of trans
"RTN","RCDPURET",11,0)
 N %,DIC,DTOUT,DUOUT,RCDATA,X,Y
"RTN","RCDPURET",12,0)
 S DIC="^RCY(344,"_DA_",1,",DIC(0)="QEAM",DIC("A")="Select Receipt TRANSACTION #: "
"RTN","RCDPURET",13,0)
 S DIC("W")="S RCDATA=@(DIC_Y_"",0)"") W:$P(RCDATA,U,3) ?8,""  "",$P(@(U_$P($P(RCDATA,U,3),"";"",2)_+$P(RCDATA,U,3)_"",0)""),U) W ?40,""  $ "",$J($P(RCDATA,U,4),0,2)"
"RTN","RCDPURET",14,0)
 D ^DIC
"RTN","RCDPURET",15,0)
 I Y<0,'$G(DTOUT),'$G(DUOUT) S Y=0
"RTN","RCDPURET",16,0)
 Q +Y
"RTN","RCDPURET",17,0)
 ;
"RTN","RCDPURET",18,0)
 ; PRCA*4.5*326 - Add RCDUZ to parameters
"RTN","RCDPURET",19,0)
ADDTRAN(RECTDA,RCDUZ) ;  add transaction for receipt (in da)
"RTN","RCDPURET",20,0)
 N %DT,%T,D0,DA,DD,DI,DIC,DIE,DINUM,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPURET",21,0)
 I '$D(^RCY(344,RECTDA,1,0)) S ^(0)="^344.01A^"
"RTN","RCDPURET",22,0)
 ;
"RTN","RCDPURET",23,0)
 ;  find next transaction number
"RTN","RCDPURET",24,0)
 S X=$O(^RCY(344,RECTDA,1,9999999),-1)
"RTN","RCDPURET",25,0)
 F X=X+1:1 Q:'$D(^RCY(344,RECTDA,1,X,0))
"RTN","RCDPURET",26,0)
 S DINUM=X
"RTN","RCDPURET",27,0)
 ;
"RTN","RCDPURET",28,0)
 S DA(1)=RECTDA
"RTN","RCDPURET",29,0)
 S DIC="^RCY(344,"_RECTDA_",1,",DIC(0)="L",DLAYGO=344.01
"RTN","RCDPURET",30,0)
 S DIC("DR")=".12////"_$S($G(RCDUZ):RCDUZ,1:DUZ)_";.06///TODAY;" ; PRCA*4.5*326 use RCDUZ passed in
"RTN","RCDPURET",31,0)
 D FILE^DICN
"RTN","RCDPURET",32,0)
 Q +Y
"RTN","RCDPURET",33,0)
 ;
"RTN","RCDPURET",34,0)
 ;
"RTN","RCDPURET",35,0)
CSTRAN(RECTDA,RCPAYAMT,CSRECORD) ;  add SUSPENSE transaction for receipt (in da) ;PRCA*4.5*301
"RTN","RCDPURET",36,0)
 ;DA=1,DA(1)=21,DIC="^RCY(344,21,1,",DIE="^RCY(344,21,1,",DILN=21,DILOCKTM=3,DISYS=18
"RTN","RCDPURET",37,0)
 ;DR=".09;              (#.09) PATIENT NAME OR BILL NUMBER [9F]
"RTN","RCDPURET",38,0)
 ;     S Y=$S('$P(^RCY(344,DA(1),1,DA,0),U,9):"@1",1:"@2");
"RTN","RCDPURET",39,0)
 ;     @1;X RCXSUSP;    (#.01) TRANSACTION [1N]
"RTN","RCDPURET",40,0)
 ;     1.02;            (#1.02) COMMENT [2F]
"RTN","RCDPURET",41,0)
 ;     S Y="@3";
"RTN","RCDPURET",42,0)
 ;     @2;
"RTN","RCDPURET",43,0)
 ;     X RCXAMONT;      W !,"  Amount Owed: $",$J($$PAYDEF^RCDPURET($P(^RCY(344,DA(1),1,DA,0),U,9)),0,2)
"RTN","RCDPURET",44,0)
 ;     @3;
"RTN","RCDPURET",45,0)
 ;     .04;             (#.04) PAYMENT AMOUNT [4N]
"RTN","RCDPURET",46,0)
 ;     .06;             (#.06) DATE OF PAYMENT [6D]
"RTN","RCDPURET",47,0)
 ;     .14////100882"   (#.14) EDITED BY [14P:200]
"RTN","RCDPURET",48,0)
 ; CSDEP - Required input variable.
"RTN","RCDPURET",49,0)
 ;
"RTN","RCDPURET",50,0)
 N %DT,%T,D0,DA,DD,DI,DIC,DIE,DINUM,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPURET",51,0)
 I '$D(^RCY(344,RECTDA,1,0)) S ^(0)="^344.01A^"
"RTN","RCDPURET",52,0)
 ;
"RTN","RCDPURET",53,0)
 ;  find next transaction number
"RTN","RCDPURET",54,0)
 S X=$O(^RCY(344,RECTDA,1,9999999),-1)
"RTN","RCDPURET",55,0)
 F X=X+1:1 Q:'$D(^RCY(344,RECTDA,1,X,0))
"RTN","RCDPURET",56,0)
 S DINUM=X
"RTN","RCDPURET",57,0)
 ;
"RTN","RCDPURET",58,0)
 ; set Payment Fields
"RTN","RCDPURET",59,0)
 K DD,DO
"RTN","RCDPURET",60,0)
 S DA(1)=RECTDA
"RTN","RCDPURET",61,0)
 S DA=DINUM
"RTN","RCDPURET",62,0)
 S DIE="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",63,0)
 K DIC
"RTN","RCDPURET",64,0)
 S DR=".01////"_DA_";.04////"_RCPAYAMT_";.06////"_$P(CSRECORD,U,6)_";.14////.5;"
"RTN","RCDPURET",65,0)
 S DR=DR_"1.02////"_$E(CSRECORD,1,9)_":"_$P(CSRECORD,U,8)_";.25////"_CSDEP_";"
"RTN","RCDPURET",66,0)
 S DIC("DR")=DR
"RTN","RCDPURET",67,0)
 D ^DIE
"RTN","RCDPURET",68,0)
 S $P(^RCY(344,RECTDA,1,0),U,3,4)=DA_U_($P(^RCY(344,RECTDA,1,0),U,4)+1)
"RTN","RCDPURET",69,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",70,0)
 Q
"RTN","RCDPURET",71,0)
 ;
"RTN","RCDPURET",72,0)
 ;
"RTN","RCDPURET",73,0)
EDITTRAN(RECTDA,TRANDA) ;  edit a receipt transaction
"RTN","RCDPURET",74,0)
 ;  returns 1 for success, or 0 (error message)
"RTN","RCDPURET",75,0)
 I '$D(^RCY(344,RECTDA,1,TRANDA,0)) Q 0
"RTN","RCDPURET",76,0)
 ;
"RTN","RCDPURET",77,0)
 N %,%DT,%T,%Y,C,D,D0,D1,DA,DATA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DIU,DIV,DIW,DG,DQ,DR,DZ,RCAMOUNT,RCTYPE,RESULT,X,Y
"RTN","RCDPURET",78,0)
 N RCXAMONT,RCXSUSP,RCXSUSP1,RCXADJ,RCERA,RCADJ,RCXERA
"RTN","RCDPURET",79,0)
 ;
"RTN","RCDPURET",80,0)
 ;  build dr string based on type of payment on receipt
"RTN","RCDPURET",81,0)
 S RCTYPE=$P($G(^RC(341.1,+$P(^RCY(344,RECTDA,0),"^",4),0)),"^",2)
"RTN","RCDPURET",82,0)
 S RCADJ=0,RCERA=+$O(^RCY(344.4,"AREC",RECTDA,0))
"RTN","RCDPURET",83,0)
 S DR=""
"RTN","RCDPURET",84,0)
 I RCERA,$D(^RCY(344.49,+RCERA,0)),$P(^RCY(344,RECTDA,1,TRANDA,0),"^",28) D  ; Worklist has a dec adj associated with it
"RTN","RCDPURET",85,0)
 . N Z
"RTN","RCDPURET",86,0)
 . S Z=$$EXTERNAL^DILFD(344.01,.09,,$P($G(^RCY(344,RECTDA,1,TRANDA,0)),U,9))
"RTN","RCDPURET",87,0)
 . S RCADJ=1,RCXERA="W !,""NOTE: This payment has an EEOB Worklist dec adj associated with it."",!,""BILL NUMBER: "_Z_" (uneditable)""",DR="X RCXERA;"
"RTN","RCDPURET",88,0)
 E  D
"RTN","RCDPURET",89,0)
 . ;  patient name or bill number
"RTN","RCDPURET",90,0)
 . S DR=".09;"
"RTN","RCDPURET",91,0)
 S DR=DR_"S Y=$S('$P(^RCY(344,DA(1),1,DA,0),U,9):""@1"",1:""@2"");"
"RTN","RCDPURET",92,0)
 ;  ask comment if no acct (unapplied)
"RTN","RCDPURET",93,0)
 S RCXSUSP="W !?5,""NOTE: This payment will be posted to the station's suspense fund."""
"RTN","RCDPURET",94,0)
 ;
"RTN","RCDPURET",95,0)
 ; PRCA*4.5*304 - Force user to type something
"RTN","RCDPURET",96,0)
 ; Check for the the existance of a comment.  If none currently exists,
"RTN","RCDPURET",97,0)
 ;   go to new code to prompt user and enforce entry of a comment, otherwise
"RTN","RCDPURET",98,0)
 ;   use the existing field call to edit it.
"RTN","RCDPURET",99,0)
 S RCXSUSP1="S:$P($G(^RCY(344,DA(1),1,DA,1)),U,2)="""" Y=""@4"""
"RTN","RCDPURET",100,0)
 S DR=DR_"@1;X RCXSUSP;X RCXSUSP1;1.02R;S Y=""@3"";@4;1.02///^S X=$$GETRSN^RCDPURET;S Y=""@3"";"
"RTN","RCDPURET",101,0)
 ;
"RTN","RCDPURET",102,0)
 ;  payment amount
"RTN","RCDPURET",103,0)
 S RCXAMONT="W !,""  Amount Owed: $"",$J($$PAYDEF^RCDPURET($P(^RCY(344,DA(1),1,DA,0),U,9)),0,2)"
"RTN","RCDPURET",104,0)
 S DR=DR_"@2;X RCXAMONT;@3;.04;"
"RTN","RCDPURET",105,0)
 ;  date of payment
"RTN","RCDPURET",106,0)
 S DR=DR_".06;"
"RTN","RCDPURET",107,0)
 ;  type of payment = district counsel (3), check (4),
"RTN","RCDPURET",108,0)
 ;                    dept of justice  (5), irs (11),
"RTN","RCDPURET",109,0)
 ;                    lockbox (12)
"RTN","RCDPURET",110,0)
 I RCTYPE=3!(RCTYPE=4)!(RCTYPE=5)!(RCTYPE=11)!(RCTYPE=12)!(RCTYPE=13) D
"RTN","RCDPURET",111,0)
 .   S DR=DR_".07d;"     ; check number
"RTN","RCDPURET",112,0)
 .   S DR=DR_".08d;"     ; bank number
"RTN","RCDPURET",113,0)
 .   S DR=DR_".1d;"      ; date of check
"RTN","RCDPURET",114,0)
 ;  type of payment = credit card (7)
"RTN","RCDPURET",115,0)
 I RCTYPE=7 D
"RTN","RCDPURET",116,0)
 .   S DR=DR_".11d;"     ; credit card number
"RTN","RCDPURET",117,0)
 .   S DR=DR_".02d;"     ; confirmation number
"RTN","RCDPURET",118,0)
 ;
"RTN","RCDPURET",119,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",120,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",121,0)
 ;  edited by
"RTN","RCDPURET",122,0)
 S DR=DR_".14////"_DUZ
"RTN","RCDPURET",123,0)
 D ^DIE
"RTN","RCDPURET",124,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",125,0)
 ;
"RTN","RCDPURET",126,0)
 ;  check for missing fields
"RTN","RCDPURET",127,0)
 S DATA=^RCY(344,RECTDA,1,TRANDA,0)
"RTN","RCDPURET",128,0)
 S RESULT=1
"RTN","RCDPURET",129,0)
 I RESULT,'$P(DATA,"^",4) S RESULT="Payment Amount is ZERO."
"RTN","RCDPURET",130,0)
 I RESULT,'$P(DATA,"^",6) S RESULT="Date of Payment NOT entered."
"RTN","RCDPURET",131,0)
 I RESULT,RCTYPE=13,$$TRACE($P(DATA,"^",3))="" S RESULT="TOP TRACE NUMBER NOT ENTERED"
"RTN","RCDPURET",132,0)
 I RESULT,RCTYPE=7,$P(DATA,"^",11)="" W !,"WARNING: Credit Card Number NOT entered."
"RTN","RCDPURET",133,0)
 I RESULT,$P(DATA,"^",6)<$P(DATA,"^",10) W !,"WARNING: Date of check is greater than the date of payment."
"RTN","RCDPURET",134,0)
 ;
"RTN","RCDPURET",135,0)
 ;  if field is missing, delete the transaction
"RTN","RCDPURET",136,0)
 I 'RESULT D DELETRAN(RECTDA,TRANDA)
"RTN","RCDPURET",137,0)
 ;
"RTN","RCDPURET",138,0)
 ;  if transaction okay, print receipt
"RTN","RCDPURET",139,0)
 I RESULT D RECEIPT^RCDPRECT(RECTDA,TRANDA)
"RTN","RCDPURET",140,0)
 ;
"RTN","RCDPURET",141,0)
 Q RESULT
"RTN","RCDPURET",142,0)
 ;
"RTN","RCDPURET",143,0)
 ;
"RTN","RCDPURET",144,0)
EDITACCT(RECTDA,TRANDA) ;  edit the account on a receipt
"RTN","RCDPURET",145,0)
 N C,D,D0,D1,DA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DISYS,DIU,DIV,DIW,DQ,DR,DZ,X
"RTN","RCDPURET",146,0)
 S DR=".09;"
"RTN","RCDPURET",147,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",148,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",149,0)
 D ^DIE
"RTN","RCDPURET",150,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",151,0)
 Q
"RTN","RCDPURET",152,0)
 ;
"RTN","RCDPURET",153,0)
 ;
"RTN","RCDPURET",154,0)
DELEACCT(RECTDA,TRANDA) ;  delete the account on a receipt
"RTN","RCDPURET",155,0)
 N D,D0,D1,DA,DI,DIC,DICR,DIE,DIG,DIH,DIU,DIV,DIW,DQ,DR,X
"RTN","RCDPURET",156,0)
 S DR=".09///@;.03///@;"
"RTN","RCDPURET",157,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",158,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",159,0)
 D ^DIE
"RTN","RCDPURET",160,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",161,0)
 ;
"RTN","RCDPURET",162,0)
 ;PRCA*4.5*304
"RTN","RCDPURET",163,0)
 ;Update the Audit Log ans Suspense status back to Pending and In Suspense
"RTN","RCDPURET",164,0)
 D AUDIT^RCBEPAY(RECTDA,TRANDA,"I")
"RTN","RCDPURET",165,0)
 D SUSPDIS^RCBEPAY(RECTDA,TRANDA,"P")
"RTN","RCDPURET",166,0)
 Q
"RTN","RCDPURET",167,0)
 ;
"RTN","RCDPURET",168,0)
 ;
"RTN","RCDPURET",169,0)
EDITFMS(RECTDA,TRANDA,DEFAULT) ;  edit fms document number for clearing suspense
"RTN","RCDPURET",170,0)
 N C,D,D0,D1,DA,DDH,DI,DIC,DICR,DIE,DIG,DIH,DIPGM,DISYS,DIU,DIV,DIW,DQ,DR,DZ,X
"RTN","RCDPURET",171,0)
 S DR=".26;"
"RTN","RCDPURET",172,0)
 I $G(DEFAULT)'="" S DR=".26////"_DEFAULT_";"
"RTN","RCDPURET",173,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",174,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",175,0)
 D ^DIE
"RTN","RCDPURET",176,0)
 Q
"RTN","RCDPURET",177,0)
 ;
"RTN","RCDPURET",178,0)
 ;
"RTN","RCDPURET",179,0)
MOVETRAN(RCOLDREC,RCOLDTRA,RCNEWREC) ;  move a transactions data
"RTN","RCDPURET",180,0)
 N %DT,%T,D0,D1,DA,DG,DIC,DICR,DIK,DIU,RCNEWTRA,RESULT,X,Y
"RTN","RCDPURET",181,0)
 ;
"RTN","RCDPURET",182,0)
 ;  add new transaction to 2nd receipt
"RTN","RCDPURET",183,0)
 W !,"Adding a NEW payment transaction to receipt "_$P(^RCY(344,RCNEWREC,0),"^")_": "
"RTN","RCDPURET",184,0)
 S RCNEWTRA=$$ADDTRAN(RCNEWREC)
"RTN","RCDPURET",185,0)
 I 'RCNEWTRA Q "Unable to ADD a new payment transaction."
"RTN","RCDPURET",186,0)
 ;
"RTN","RCDPURET",187,0)
 W "# ",RCNEWTRA
"RTN","RCDPURET",188,0)
 ;
"RTN","RCDPURET",189,0)
 ;  move data to selected receipt and re-index entry
"RTN","RCDPURET",190,0)
 S ^RCY(344,RCNEWREC,1,RCNEWTRA,0)=RCNEWTRA_"^"_$P(^RCY(344,RCOLDREC,1,RCOLDTRA,0),"^",2,99)
"RTN","RCDPURET",191,0)
 S DIK="^RCY(344,"_RCNEWREC_",1,",DA(1)=RCNEWREC,DA=RCNEWTRA
"RTN","RCDPURET",192,0)
 D IX^DIK
"RTN","RCDPURET",193,0)
 ;
"RTN","RCDPURET",194,0)
 S RESULT=$$EDITTRAN(RCNEWREC,RCNEWTRA)
"RTN","RCDPURET",195,0)
 Q RESULT
"RTN","RCDPURET",196,0)
 ;
"RTN","RCDPURET",197,0)
 ;
"RTN","RCDPURET",198,0)
CANCTRAN(RECTDA,RECTRAN) ;  cancel a transaction
"RTN","RCDPURET",199,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,RCDATA,X,Y
"RTN","RCDPURET",200,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",201,0)
 S RCDATA="Cancelled by: "_$P(^VA(200,DUZ,0),"^")_"    Amount: $ "_$J($P(^RCY(344,RECTDA,1,RECTRAN,0),"^",4),0,2)
"RTN","RCDPURET",202,0)
 S DR="1.01////^S X=RCDATA;.04////^S X=0;.05////^S X=0;1.02;"
"RTN","RCDPURET",203,0)
 S DA=RECTRAN,DA(1)=RECTDA
"RTN","RCDPURET",204,0)
 D ^DIE
"RTN","RCDPURET",205,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",206,0)
 Q
"RTN","RCDPURET",207,0)
 ;
"RTN","RCDPURET",208,0)
 ;
"RTN","RCDPURET",209,0)
DELETRAN(RECTDA,TRANDA) ;  delete a transaction
"RTN","RCDPURET",210,0)
 N %,D0,D1,DA,DIC,DICR,DIG,DIH,DIK,DIU,DIV,DIW,X,Y
"RTN","RCDPURET",211,0)
 S DIK="^RCY(344,"_RECTDA_",1,",DA(1)=RECTDA,DA=TRANDA
"RTN","RCDPURET",212,0)
 D ^DIK
"RTN","RCDPURET",213,0)
 D LASTEDIT^RCDPUREC(RECTDA)
"RTN","RCDPURET",214,0)
 Q
"RTN","RCDPURET",215,0)
 ;
"RTN","RCDPURET",216,0)
 ;
"RTN","RCDPURET",217,0)
SETUNAPP(RECTDA,TRANDA,UNAPPNUM) ;  store the unapplied deposit number
"RTN","RCDPURET",218,0)
 N D,D0,DA,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPURET",219,0)
 S (DIC,DIE)="^RCY(344,"_RECTDA_",1,"
"RTN","RCDPURET",220,0)
 S DR=".25////"_UNAPPNUM_";"
"RTN","RCDPURET",221,0)
 S DA=TRANDA,DA(1)=RECTDA
"RTN","RCDPURET",222,0)
 D ^DIE
"RTN","RCDPURET",223,0)
 Q
"RTN","RCDPURET",224,0)
 ;
"RTN","RCDPURET",225,0)
 ;
"RTN","RCDPURET",226,0)
PAYDEF(DEBTOR) ;  get default for payment amount (used in input templates for payments)
"RTN","RCDPURET",227,0)
 N X
"RTN","RCDPURET",228,0)
 I 'DEBTOR Q 0
"RTN","RCDPURET",229,0)
 I DEBTOR[";DPT(" S X=$$BAL^PRCAFN(DEBTOR)
"RTN","RCDPURET",230,0)
 I DEBTOR[";PRCA(430,",",112,107,102,"[(","_$P($G(^PRCA(430.3,+$P($G(^PRCA(430,+DEBTOR,0)),"^",8),0)),"^",3)_",") S X=$G(^PRCA(430,+DEBTOR,7)),X=$P(X,"^")+$P(X,"^",2)+$P(X,"^",3)+$P(X,"^",4)+$P(X,"^",5)
"RTN","RCDPURET",231,0)
 Q +$G(X)
"RTN","RCDPURET",232,0)
 ;
"RTN","RCDPURET",233,0)
 ;
"RTN","RCDPURET",234,0)
PENDPAY(DEBTOR) ;  return pending payments for a debtor
"RTN","RCDPURET",235,0)
 ;  returns ^tmp($j,"rcdpurec","pp",rectda,tranda)=data in 344.01
"RTN","RCDPURET",236,0)
 ;  and the total pending payment dollars
"RTN","RCDPURET",237,0)
 N DATA,RECTDA,TOTAL,TRANDA
"RTN","RCDPURET",238,0)
 K ^TMP($J,"RCDPUREC","PP")
"RTN","RCDPURET",239,0)
 ;  look at open receipts
"RTN","RCDPURET",240,0)
 S RECTDA=0 F  S RECTDA=$O(^RCY(344,"ASTAT",1,RECTDA)) Q:'RECTDA  D
"RTN","RCDPURET",241,0)
 .   S TRANDA=0 F  S TRANDA=$O(^RCY(344,"AACCT",DEBTOR,RECTDA,TRANDA)) Q:'TRANDA  D
"RTN","RCDPURET",242,0)
 .   .   S DATA=$G(^RCY(344,RECTDA,1,TRANDA,0)) I DATA="" Q
"RTN","RCDPURET",243,0)
 .   .   ;  total paid = total processed
"RTN","RCDPURET",244,0)
 .   .   I +$P(DATA,"^",4)=+$P(DATA,"^",5) Q
"RTN","RCDPURET",245,0)
 .   .   S ^TMP($J,"RCDPUREC","PP",RECTDA,TRANDA)=DATA
"RTN","RCDPURET",246,0)
 .   .   S TOTAL=$G(TOTAL)+$P(DATA,"^",4)
"RTN","RCDPURET",247,0)
 Q +$G(TOTAL)
"RTN","RCDPURET",248,0)
TRACE(DEBTOR) ;ENTER TOP TRACE NUMBER FOR TOP RECEIPTS
"RTN","RCDPURET",249,0)
 N TRACE,DIC,DIE,DR,DA
"RTN","RCDPURET",250,0)
 S TRACE="" G TRACEQ:'DEBTOR
"RTN","RCDPURET",251,0)
 S DA=$S(DEBTOR["DPT(":$O(^RCD(340,"B",DEBTOR,0)),1:$P($G(^PRCA(430,+DEBTOR,0)),U,9))
"RTN","RCDPURET",252,0)
 G TRACEQ:'DA
"RTN","RCDPURET",253,0)
 S (DIC,DIE)="^RCD(340,",DR=6.07 D ^DIE
"RTN","RCDPURET",254,0)
 S TRACE=$P($G(^RCD(340,DA,6)),"^",7)
"RTN","RCDPURET",255,0)
TRACEQ Q TRACE
"RTN","RCDPURET",256,0)
 ;
"RTN","RCDPURET",257,0)
 ;PRCA*4.5*304 - Force user to enter a comment if item is in suspense
"RTN","RCDPURET",258,0)
GETRSN() ;
"RTN","RCDPURET",259,0)
 ;
"RTN","RCDPURET",260,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCTODAY
"RTN","RCDPURET",261,0)
 ;
"RTN","RCDPURET",262,0)
 ; Get the Comment:  Assume the end date is today.
"RTN","RCDPURET",263,0)
 F  D  Q:Y'=""
"RTN","RCDPURET",264,0)
 . S DIR("?")="ENTER THE REASON FOR PLACING THE RECEIPT ITEM INTO THE SUSPENSE FUND"
"RTN","RCDPURET",265,0)
 . S DIR(0)="FA^1:60",DIR("A")="COMMENT: " D ^DIR K DIR
"RTN","RCDPURET",266,0)
 . I $G(DTOUT)!$G(DUOUT) S Y="^" Q
"RTN","RCDPURET",267,0)
 . S Y=$$TRIM^XLFSTR(Y)
"RTN","RCDPURET",268,0)
 . I Y="" W !,"A comment is required when changing the status of an item in Suspense.  Please",!,"try again." Q
"RTN","RCDPURET",269,0)
 Q Y
"RTN","RCP326")
0^37^B8513731
"RTN","RCP326",1,0)
RCP326 ;BIRM/EWL ALB/PJH - ePayment Lockbox Post-Installation Processing ;Dec 20, 2014@14:08:45
"RTN","RCP326",2,0)
 ;;4.5;Accounts Receivable;**326**;Jan 21, 2014;Build 26
"RTN","RCP326",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCP326",4,0)
 Q
"RTN","RCP326",5,0)
 ;
"RTN","RCP326",6,0)
POST() ;
"RTN","RCP326",7,0)
 N DIK
"RTN","RCP326",8,0)
 D BMES^XPDUTL("Re-indexing TRANSACTION#  on EFT DETAIL file (#344.31)")
"RTN","RCP326",9,0)
 S DIK="^RCY(344.31,",DIK(1)=".14^D" D ENALL^DIK
"RTN","RCP326",10,0)
 ;
"RTN","RCP326",11,0)
 D BMES^XPDUTL("Creating index by payer name and TIN on EFT DETAIL file (#344.31)")
"RTN","RCP326",12,0)
 S DIK="^RCY(344.31,",DIK(1)=".02^APT" D ENALL^DIK
"RTN","RCP326",13,0)
 ;
"RTN","RCP326",14,0)
 D BMES^XPDUTL("Creating index by TIN and payer name on EFT DETAIL file (#344.31)")
"RTN","RCP326",15,0)
 S DIK="^RCY(344.31,",DIK(1)=".03^ATP" D ENALL^DIK
"RTN","RCP326",16,0)
 ;
"RTN","RCP326",17,0)
 D BMES^XPDUTL("Creating index by payer name and TIN on ERA file (#344.4)")
"RTN","RCP326",18,0)
 S DIK="^RCY(344.4,",DIK(1)=".06^APT" D ENALL^DIK
"RTN","RCP326",19,0)
 ;
"RTN","RCP326",20,0)
 D BMES^XPDUTL("Creating index by TIN and payer name on ERA file (#344.4)")
"RTN","RCP326",21,0)
 S DIK="^RCY(344.4,",DIK(1)=".03^ATP" D ENALL^DIK
"RTN","RCP326",22,0)
 ;
"RTN","RCP326",23,0)
 D BMES^XPDUTL("Creating index by pharmacy flag on Payer Exclusion file (#344.6)")
"RTN","RCP326",24,0)
 S DIK="^RCY(344.6,",DIK(1)=".09^ARX" D ENALL^DIK
"RTN","RCP326",25,0)
 ;
"RTN","RCP326",26,0)
 D BMES^XPDUTL("Creating index by tricare flag on Payer Exclusion file (#344.6)")
"RTN","RCP326",27,0)
 S DIK="^RCY(344.6,",DIK(1)=".1^ATR" D ENALL^DIK
"RTN","RCP326",28,0)
 ;
"RTN","RCP326",29,0)
 ; Populate MED AMT DEFAULT AUTO-DECREASE
"RTN","RCP326",30,0)
 D:$$GET1^DIQ(344.61,"1,",.05)=""
"RTN","RCP326",31,0)
 .N DA,DIE,DR
"RTN","RCP326",32,0)
 .S DIE="^RCY(344.61,",DR=".05///5000;",DA=1 D ^DIE
"RTN","RCP326",33,0)
 ;
"RTN","RCP326",34,0)
US786 ;
"RTN","RCP326",35,0)
 D BMES^XPDUTL("Converting RCDPE APAR, MEDICAL/PHARMACY parameter from 'Both' to 'All'")
"RTN","RCP326",36,0)
 N RCENT,RCERR,RCINST,RCOUT,RCPAR
"RTN","RCP326",37,0)
 K ^TMP($J,"RCP326")
"RTN","RCP326",38,0)
 S RCOUT="^TMP($J,""RCP326"")"
"RTN","RCP326",39,0)
 S RCPAR="RCDPE APAR"
"RTN","RCP326",40,0)
 S RCINST="MEDICAL/PHARMACY"
"RTN","RCP326",41,0)
 D ENVAL^XPAR(.RCOUT,RCPAR,RCINST,.RCERR,1) ; IA 2992 PARAMETER DEFINITION TOOLKIT
"RTN","RCP326",42,0)
 S RCENT=""
"RTN","RCP326",43,0)
 F  S RCENT=$O(^TMP($J,"RCP326",RCENT)) Q:RCENT=""  D  ;
"RTN","RCP326",44,0)
 . I $G(^TMP($J,"RCP326",RCENT,RCINST))="B" D  ;
"RTN","RCP326",45,0)
 . . D EN^XPAR(RCENT,RCPAR,RCINST,"A",.RCERR) ; IA 2992 PARAMETER DEFINITION TOOLKIT
"RTN","RCP326",46,0)
 K ^TMP($J,"RCP326")
"RTN","RCP326",47,0)
 ;
"RTN","RCP326",48,0)
 S ZTRTN="EFT3446^"_$T(+0),ZTDESC="Add EFT Payer/TIN to 344.6",ZTIO="",ZTDTH=$H
"RTN","RCP326",49,0)
 D ^%ZTLOAD
"RTN","RCP326",50,0)
 D MES^XPDUTL($S($G(ZTSK):"Task# "_ZTSK_" queued, to add EFTs to 344.6",1:"Unable to queue EFT 344.6 task."))
"RTN","RCP326",51,0)
 Q
"RTN","RCP326",52,0)
EFT3446 ; Add EFT Payer/TINs to payer exclusion file
"RTN","RCP326",53,0)
 N ID,IEN,NAME,RET
"RTN","RCP326",54,0)
 S IEN=0
"RTN","RCP326",55,0)
 F  S IEN=$O(^RCY(344.31,IEN)) Q:'IEN  D  ;
"RTN","RCP326",56,0)
 . S NAME=$$GET1^DIQ(344.31,IEN_",",.02)
"RTN","RCP326",57,0)
 . S ID=$$GET1^DIQ(344.31,IEN_",",.03)
"RTN","RCP326",58,0)
 . I NAME=""!(ID="") Q
"RTN","RCP326",59,0)
 . I '$D(^RCY(344.6,"CPID",NAME,ID)) S RET=$$PAYRINIT^RCDPESP(IEN,344.31)
"RTN","RCP326",60,0)
 Q
"UP",344.4,344.41,-1)
344.4^1
"UP",344.4,344.41,0)
344.41
"UP",344.71,344.711,-1)
344.71^1
"UP",344.71,344.711,0)
344.711
"VER")
8.0^22.2
"^DD",344,344,202,0)
ORIGINAL FMS DOCUMENT^FJ20^^2;3^K:$L(X)>20!($L(X)<1) X
"^DD",344,344,202,3)
Answer must be 1-20 characters in length.
"^DD",344,344,202,21,0)
^^1^1^3171221^
"^DD",344,344,202,21,1,0)
This is the original FMS document for a CR receipt.
"^DD",344,344,202,23,0)
^^6^6^3171221^
"^DD",344,344,202,23,1,0)
This field is used to save the original rejected FMS document if the
"^DD",344,344,202,23,2,0)
receipt is marked as an ON-LINE entry and the original FMS DOCUMENT field
"^DD",344,344,202,23,3,0)
(#200) value is replaced with a manually entered FMS document.
"^DD",344,344,202,23,4,0)
 
"^DD",344,344,202,23,5,0)
If the on-line entry status of the receipt is removed then the #202 field
"^DD",344,344,202,23,6,0)
value is restored into field #200.
"^DD",344,344,202,"DT")
3171221
"^DD",344.31,344.31,.01,0)
EFT TRANSACTION^RP344.3'O^RCY(344.3,^0;1^Q
"^DD",344.31,344.31,.01,1,0)
^.1^^-1
"^DD",344.31,344.31,.01,1,1,0)
344.31^B
"^DD",344.31,344.31,.01,1,1,1)
S ^RCY(344.31,"B",$E(X,1,30),DA)=""
"^DD",344.31,344.31,.01,1,1,2)
K ^RCY(344.31,"B",$E(X,1,30),DA)
"^DD",344.31,344.31,.01,2)
S Y(0)=Y I $D(DA),$P($G(^RCY(344.31,DA,0)),U,14) S Y=$P($G(^RCY(344.31,DA,0)),U)_"."_$P($G(^RCY(344.31,DA,0)),U,14)
"^DD",344.31,344.31,.01,2.1)
I $D(DA),$P($G(^RCY(344.31,DA,0)),U,14) S Y=$P($G(^RCY(344.31,DA,0)),U)_"."_$P($G(^RCY(344.31,DA,0)),U,14)
"^DD",344.31,344.31,.01,3)
Enter the reference to the EFT transaction that contains this EFT record.
"^DD",344.31,344.31,.01,4)

"^DD",344.31,344.31,.01,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,.01,21,1,0)
This is the pointer to the EFT totals record that this EFT was received in.
"^DD",344.31,344.31,.01,"DT")
3171130
"^DD",344.31,344.31,.02,0)
PAYER NAME^FJ60^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",344.31,344.31,.02,1,0)
^.1^^0
"^DD",344.31,344.31,.02,3)
Answer must be 1-60 characters in length.
"^DD",344.31,344.31,.02,21,0)
^.001^1^1^3100621^^^
"^DD",344.31,344.31,.02,21,1,0)
This is the insurance co name as reported for the payment on the EFT.
"^DD",344.31,344.31,.02,"DT")
3171117
"^DD",344.31,344.31,.03,0)
PAYER ID^F^^0;3^K:$L(X)>20!($L(X)<1) X
"^DD",344.31,344.31,.03,3)
Answer must be 1-20 characters in length.
"^DD",344.31,344.31,.03,21,0)
^^1^1^3030128^
"^DD",344.31,344.31,.03,21,1,0)
This is the payer id as reported for the payment on the EFT.
"^DD",344.31,344.31,.03,"DT")
3171117
"^DD",344.31,344.31,.14,0)
TRANSACTION #^NJ3,0^^0;14^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",344.31,344.31,.14,1,0)
^.1^^0
"^DD",344.31,344.31,.14,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",344.31,344.31,.14,21,0)
^.001^1^1^3171212^^
"^DD",344.31,344.31,.14,21,1,0)
This is the transaction # within the receipt for this EFT.
"^DD",344.31,344.31,.14,"DT")
3171212
"^DD",344.4,344.4,.03,0)
INSURANCE CO ID^RF^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",344.4,344.4,.03,1,0)
^.1
"^DD",344.4,344.4,.03,1,1,0)
344.4^I
"^DD",344.4,344.4,.03,1,1,1)
S ^RCY(344.4,"I",$E(X,1,30),DA)=""
"^DD",344.4,344.4,.03,1,1,2)
K ^RCY(344.4,"I",$E(X,1,30),DA)
"^DD",344.4,344.4,.03,1,1,3)
Do not Delete
"^DD",344.4,344.4,.03,1,1,"%D",0)
^^3^3^3150209^
"^DD",344.4,344.4,.03,1,1,"%D",1,0)
This is a search index on INSURANCE CO ID field, reports against the ERA
"^DD",344.4,344.4,.03,1,1,"%D",2,0)
file use a lookup based on INSURANCE CO ID, this index will reduce the
"^DD",344.4,344.4,.03,1,1,"%D",3,0)
time to generate ad-hoc reports.  
"^DD",344.4,344.4,.03,1,1,"DT")
3150209
"^DD",344.4,344.4,.03,3)
Answer must be 1-30 characters in length.
"^DD",344.4,344.4,.03,21,0)
^^3^3^3020523^
"^DD",344.4,344.4,.03,21,1,0)
This is the insurance co's electronic ID that will be recorded on each
"^DD",344.4,344.4,.03,21,2,0)
ERA received at the site.  This field, along
"^DD",344.4,344.4,.03,21,3,0)
with the trace number should always be unique in this file.
"^DD",344.4,344.4,.03,"DT")
3171117
"^DD",344.4,344.4,.06,0)
PAYMENT FROM^FJ60^^0;6^K:$L(X)>60!($L(X)<1) X
"^DD",344.4,344.4,.06,1,0)
^.1^^0
"^DD",344.4,344.4,.06,3)
Answer must be 1-60 characters in length.
"^DD",344.4,344.4,.06,21,0)
^.001^1^1^3141217^^
"^DD",344.4,344.4,.06,21,1,0)
This is the name of the insurance co as returned on the ERA.
"^DD",344.4,344.4,.06,"DT")
3171117
"^DD",344.4,344.4,.19,0)
AUTO-DECREASE BLOCKED^S^1:YES;0:NO;^6;4^Q
"^DD",344.4,344.4,.19,3)
Enter YES if the ERA should not be auto-decreased.
"^DD",344.4,344.4,.19,21,0)
^^3^3^3180209^
"^DD",344.4,344.4,.19,21,1,0)
This field is used to determine if a zero balance denial ERA with payment 
"^DD",344.4,344.4,.19,21,2,0)
type of 'NON' should be blocked from auto-decrease in the PRCA Nightly
"^DD",344.4,344.4,.19,21,3,0)
Process.
"^DD",344.4,344.4,.19,23,0)
^^3^3^3180209^
"^DD",344.4,344.4,.19,23,1,0)
This field is set manually in the ERA Worklist if an ERA has 
"^DD",344.4,344.4,.19,23,2,0)
auto-decrease CARCs but the user decides to block auto-decrease of these 
"^DD",344.4,344.4,.19,23,3,0)
CARCS.
"^DD",344.4,344.4,.19,"DT")
3180209
"^DD",344.4,344.4,4.04,0)
MARKED FOR AUTOPOST USER^P200'^VA(200,^4;3^Q
"^DD",344.4,344.4,4.04,3)
Select the person who marked the ERA for auto-posting
"^DD",344.4,344.4,4.04,21,0)
^^2^2^3171114^
"^DD",344.4,344.4,4.04,21,1,0)
This is the person who marked the ERA for auto-posting.  This field is 
"^DD",344.4,344.4,4.04,21,2,0)
set automatically by the system.
"^DD",344.4,344.4,4.04,"DT")
3171211
"^DD",344.4,344.4,5.03,0)
DATE CHECK MATCHED^D^^5;3^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",344.4,344.4,5.03,3)
(No range limit on date)
"^DD",344.4,344.4,5.03,21,0)
^^1^1^3171107^
"^DD",344.4,344.4,5.03,21,1,0)
Date the ERA was matched to a paper check.
"^DD",344.4,344.4,5.03,23,0)
^^2^2^3171107^
"^DD",344.4,344.4,5.03,23,1,0)
This date will be automatically set to today's date by the software when
"^DD",344.4,344.4,5.03,23,2,0)
an ERA is matched to a paper check.
"^DD",344.4,344.4,5.03,"DT")
3171107
"^DD",344.4,344.4,5.04,0)
CHECK MATCHED USER^P200'^VA(200,^5;4^Q
"^DD",344.4,344.4,5.04,21,0)
^^1^1^3171107^
"^DD",344.4,344.4,5.04,21,1,0)
The user who matched the ERA to a paper check.
"^DD",344.4,344.4,5.04,23,0)
^^2^2^3171107^
"^DD",344.4,344.4,5.04,23,1,0)
This field will be automatically set to the current user by the software
"^DD",344.4,344.4,5.04,23,2,0)
when an ERA is matched to a paper check.
"^DD",344.4,344.4,5.04,"DT")
3171107
"^DD",344.4,344.41,6.01,0)
MARKED FOR AUTOPOST USER^P200'^VA(200,^5;7^Q
"^DD",344.4,344.41,6.01,3)
Select the person who marked the ERA detail for auto-posting
"^DD",344.4,344.41,6.01,21,0)
^^2^2^3171114^
"^DD",344.4,344.41,6.01,21,1,0)
This is the person who marked the ERA detail for auto-posting.  This 
"^DD",344.4,344.41,6.01,21,2,0)
field is set automatically by the system.
"^DD",344.4,344.41,6.01,"DT")
3171114
"^DD",344.6,344.6,.09,0)
PHARMACY PAYER^S^1:Yes;0:No;^0;9^Q
"^DD",344.6,344.6,.09,1,0)
^.1
"^DD",344.6,344.6,.09,1,1,0)
344.6^ARX
"^DD",344.6,344.6,.09,1,1,1)
S ^RCY(344.6,"ARX",$E(X,1,30),DA)=""
"^DD",344.6,344.6,.09,1,1,2)
K ^RCY(344.6,"ARX",$E(X,1,30),DA)
"^DD",344.6,344.6,.09,1,1,"%D",0)
^^4^4^3180820^
"^DD",344.6,344.6,.09,1,1,"%D",1,0)
This cross reference on Pharmacy Payer will be used to determine if any 
"^DD",344.6,344.6,.09,1,1,"%D",2,0)
pharmacy payers have been flagged on this Vista system. If not a warning
"^DD",344.6,344.6,.09,1,1,"%D",3,0)
message wil be given when filtering reports or worklists to include only
"^DD",344.6,344.6,.09,1,1,"%D",4,0)
this type of payer.
"^DD",344.6,344.6,.09,1,1,"DT")
3180726
"^DD",344.6,344.6,.09,3)
Enter 'Yes' to flag this payer as a pharmacy payer.
"^DD",344.6,344.6,.09,21,0)
^^1^1^3170828^
"^DD",344.6,344.6,.09,21,1,0)
This field is used to flag a specified payer as a pharmacy payer.
"^DD",344.6,344.6,.09,"DT")
3180726
"^DD",344.6,344.6,.1,0)
TRICARE PAYER^S^1:Yes;0:No;^0;10^Q
"^DD",344.6,344.6,.1,1,0)
^.1
"^DD",344.6,344.6,.1,1,1,0)
344.6^ATR
"^DD",344.6,344.6,.1,1,1,1)
S ^RCY(344.6,"ATR",$E(X,1,30),DA)=""
"^DD",344.6,344.6,.1,1,1,2)
K ^RCY(344.6,"ATR",$E(X,1,30),DA)
"^DD",344.6,344.6,.1,1,1,"%D",0)
^^4^4^3180820^
"^DD",344.6,344.6,.1,1,1,"%D",1,0)
This cross reference on Tricare Payer will be used to determine if any 
"^DD",344.6,344.6,.1,1,1,"%D",2,0)
Tricare payers have been flagged on this Vista system. If not a warning
"^DD",344.6,344.6,.1,1,1,"%D",3,0)
message wil be given when filtering reports or worklists to include only
"^DD",344.6,344.6,.1,1,1,"%D",4,0)
this type of payer.
"^DD",344.6,344.6,.1,1,1,"DT")
3180726
"^DD",344.6,344.6,.1,3)
Enter 'Yes' to flag this payer as a Tricare payer.
"^DD",344.6,344.6,.1,21,0)
^^1^1^3170828^
"^DD",344.6,344.6,.1,21,1,0)
This field is used to flag a specified payer as a Tricare payer.
"^DD",344.6,344.6,.1,"DT")
3180726
"^DD",344.6,344.6,.11,0)
PAYER ADDED FROM EFT^S^1:YES;^0;11^Q
"^DD",344.6,344.6,.11,3)
Enter 'YES' if this payer was added from payer/TIN on an EFT
"^DD",344.6,344.6,.11,"DT")
3180806
"^DD",344.61,344.61,.03,0)
AUTO-DECREASE MED ENABLED^S^0:No;1:Yes;^0;3^Q
"^DD",344.61,344.61,.03,.1)
ENABLE AUTO-DECREASE OF MEDICAL CLAIMS WITH PAYMENTS (Y/N): 
"^DD",344.61,344.61,.03,3)
Select Yes to enable auto-decreasing of medical claim amount or No to disable.
"^DD",344.61,344.61,.03,21,0)
^^2^2^3180112^
"^DD",344.61,344.61,.03,21,1,0)
Determines if a medical claim amount can be auto-decreased for claims with
"^DD",344.61,344.61,.03,21,2,0)
non-zero payments during the auto-post processing.
"^DD",344.61,344.61,.03,"DT")
3180312
"^DD",344.61,344.61,.04,0)
AUTO-DECREASE MED DAYS DEFAULT^NJ1,0^^0;4^K:+X'=X!(X>7)!(X<0)!(X?.E1"."1N.N) X
"^DD",344.61,344.61,.04,.1)
NUMBER OF DAYS TO WAIT BEFORE AUTO-DECREASE (0-7): 
"^DD",344.61,344.61,.04,3)
Type a number between 0 and 7, 0 decimal digits.
"^DD",344.61,344.61,.04,21,0)
^^3^3^3180112^
"^DD",344.61,344.61,.04,21,1,0)
This parameter determines the default number of days to wait before 
"^DD",344.61,344.61,.04,21,2,0)
applying the auto-decrease adjustment to non-zero payments being processed
"^DD",344.61,344.61,.04,21,3,0)
by the auto-post processing.
"^DD",344.61,344.61,.04,"DT")
3180122
"^DD",344.61,344.61,.05,0)
AUTO-DECREASE MED AMT DEFAULT^NJ5,0^^0;5^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",344.61,344.61,.05,.1)
MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE PER CLAIM: 
"^DD",344.61,344.61,.05,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",344.61,344.61,.05,21,0)
^^7^7^3180122^^
"^DD",344.61,344.61,.05,21,1,0)
This parameter allows sites to specify the claim dollar amount maximum of 
"^DD",344.61,344.61,.05,21,2,0)
an automatic decrease adjustment that is made for a third party medical
"^DD",344.61,344.61,.05,21,3,0)
claims, if auto-posting and auto-decrease of third party medical claims is
"^DD",344.61,344.61,.05,21,4,0)
turned on for the site. This parameter will default to null and require a
"^DD",344.61,344.61,.05,21,5,0)
response from 1 to 99999 dollars for the parameter question to allow sites
"^DD",344.61,344.61,.05,21,6,0)
to specify the claim dollar amount maximum of an automatic decrease
"^DD",344.61,344.61,.05,21,7,0)
adjustment that is made for third party medical claims.
"^DD",344.61,344.61,.05,"DT")
3180122
"^DD",344.61,344.61,.11,0)
AUTO-DECREASE MED ZERO ENABLED^S^0:No;1:Yes;^0;11^Q
"^DD",344.61,344.61,.11,.1)
ENABLE AUTO-DECREASE OF NO-PAY MEDICAL CLAIMS (Y/N):    
"^DD",344.61,344.61,.11,3)
Select Yes to enable auto-decreasing of no-pay medical claim amount or No to disable. 
"^DD",344.61,344.61,.11,21,0)
^^3^3^3180112^
"^DD",344.61,344.61,.11,21,1,0)
Determines if a medical claim amount can be auto-decreased for claims with
"^DD",344.61,344.61,.11,21,2,0)
no payments (zero dollar) that are not reversals during the auto-post
"^DD",344.61,344.61,.11,21,3,0)
processing. 
"^DD",344.61,344.61,.11,"DT")
3180215
"^DD",344.61,344.61,.12,0)
AUTO-DECREASE MED NO PAY DAYS^NJ2,0^^0;12^K:+X'=X!(X>45)!(X<0)!(X?.E1"."1.N) X
"^DD",344.61,344.61,.12,.1)
NUMBER OF DAYS TO WAIT BEFORE NO PAY AUTO-DECREASE (0-45):
"^DD",344.61,344.61,.12,3)
Type a number between 0 and 45, 0 decimal digits.
"^DD",344.61,344.61,.12,21,0)
^^3^3^3180228^
"^DD",344.61,344.61,.12,21,1,0)
This parameter determines the default number of days to wait before
"^DD",344.61,344.61,.12,21,2,0)
applying the auto-decrease adjustment to medical claims with no payments
"^DD",344.61,344.61,.12,21,3,0)
on denial ERAs being processed by the auto-post processing.
"^DD",344.61,344.61,.12,"DT")
3180228
"^DD",344.62,344.62,.02,0)
CARC AUTO DECREASE^S^0:NO;1:Y;^0;2^Q
"^DD",344.62,344.62,.02,1,0)
^.1
"^DD",344.62,344.62,.02,1,1,0)
344.62^ACTV
"^DD",344.62,344.62,.02,1,1,1)
S ^RCY(344.62,"ACTV",$E(X,1,30),DA)=""
"^DD",344.62,344.62,.02,1,1,2)
K ^RCY(344.62,"ACTV",$E(X,1,30),DA)
"^DD",344.62,344.62,.02,1,1,3)
Do not delete
"^DD",344.62,344.62,.02,1,1,"%D",0)
^^2^2^3151015^
"^DD",344.62,344.62,.02,1,1,"%D",1,0)
Index will be used to obtain a list of the active CARC codes for 
"^DD",344.62,344.62,.02,1,1,"%D",2,0)
automatic decrease to be applied.
"^DD",344.62,344.62,.02,1,1,"DT")
3151015
"^DD",344.62,344.62,.02,3)
Enter Yes to turn Auto-Decrease of claims with payments on, No to turn it off.
"^DD",344.62,344.62,.02,21,0)
^.001^2^2^3180112^^^^
"^DD",344.62,344.62,.02,21,1,0)
A Yes/No prompt defining whether a CARC code can be auto-decreased or 
"^DD",344.62,344.62,.02,21,2,0)
not.
"^DD",344.62,344.62,.02,"DT")
3180116
"^DD",344.62,344.62,.08,0)
CARC AUTO DECREASE NO-PAY^S^0:No;1:Yes;^1;1^Q
"^DD",344.62,344.62,.08,3)
Enter Yes to turn Auto-Decrease of claims with zero payments on, No to turn it off. 
"^DD",344.62,344.62,.08,21,0)
^^2^2^3180130^
"^DD",344.62,344.62,.08,21,1,0)
A Yes/No prompt defining whether a CARC code can be auto-decreased for 
"^DD",344.62,344.62,.08,21,2,0)
claims with zero payments.
"^DD",344.62,344.62,.08,"DT")
3180130
"^DD",344.62,344.62,.09,0)
DATE ADDED NO-PAY^D^^1;2^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",344.62,344.62,.09,3)
Enter the Date the CARC was originally added. 
"^DD",344.62,344.62,.09,21,0)
^^2^2^3180112^
"^DD",344.62,344.62,.09,21,1,0)
The Date when the CARC or RARC code was originally added for
"^DD",344.62,344.62,.09,21,2,0)
auto-decreasing.  
"^DD",344.62,344.62,.09,"DT")
3180112
"^DD",344.62,344.62,.1,0)
UPDATED BY (NO-PAY)^P200'^VA(200,^1;3^Q
"^DD",344.62,344.62,.1,3)
Enter the user who added or updated the entry.
"^DD",344.62,344.62,.1,21,0)
^^2^2^3180112^
"^DD",344.62,344.62,.1,21,1,0)
The user who either added or was the last person to update the entry for
"^DD",344.62,344.62,.1,21,2,0)
the specific CARC or RARC code in this file.
"^DD",344.62,344.62,.1,"DT")
3180112
"^DD",344.62,344.62,.11,0)
DATE LAST UPDATED NO-PAY^D^^1;4^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",344.62,344.62,.11,3)
Enter the date this entry was last updated.
"^DD",344.62,344.62,.11,21,0)
^^1^1^3180130^
"^DD",344.62,344.62,.11,21,1,0)
The date the entry was last updated.
"^DD",344.62,344.62,.11,"DT")
3180130
"^DD",344.62,344.62,.12,0)
CARC DECREASE AMOUNT NO-PAY^NJ12,2^^1;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999999)!(X<0)!(X?.E1"."3.N) X
"^DD",344.62,344.62,.12,3)
Type a dollar amount between 0 and 999999999, 2 decimal digits.
"^DD",344.62,344.62,.12,21,0)
^^2^2^3180112^
"^DD",344.62,344.62,.12,21,1,0)
The maximum amount the CARC or RARC code can decrease the amount of the
"^DD",344.62,344.62,.12,21,2,0)
patient's bill.
"^DD",344.62,344.62,.12,"DT")
3180112
"^DD",344.62,344.62,.13,0)
COMMENT NO-PAY^FJ50^^1;6^K:$L(X)>50!($L(X)<1) X
"^DD",344.62,344.62,.13,3)
Answer must be 1-50 characters in length.
"^DD",344.62,344.62,.13,21,0)
^^2^2^3180112^
"^DD",344.62,344.62,.13,21,1,0)
User comment why the CARC or RARC was allowed to be auto-decreased or why
"^DD",344.62,344.62,.13,21,2,0)
auto-decrease was turned off.
"^DD",344.62,344.62,.13,"DT")
3180112
"^DD",344.71,344.71,1,0)
MULTI TRANS SPLIT^344.711A^^1;0
"^DD",344.71,344.71,1,21,0)
^^3^3^3171117^
"^DD",344.71,344.71,1,21,1,0)
This multiple contains details of how a suspense line is apportioned
"^DD",344.71,344.71,1,21,2,0)
between claims when a multi-transaction split is performed in Receipt
"^DD",344.71,344.71,1,21,3,0)
Processing.  
"^DD",344.71,344.71,1,23,0)
^^2^2^3171117^
"^DD",344.71,344.71,1,23,1,0)
This multiple is updated in RECEIPT PROCESSING and used in the LINK
"^DD",344.71,344.71,1,23,2,0)
PAYMENT TRACKING REPORT.
"^DD",344.71,344.711,0)
MULTI TRANS SPLIT SUB-FIELD^^.04^4
"^DD",344.71,344.711,0,"NM","MULTI TRANS SPLIT")

"^DD",344.71,344.711,.01,0)
SEQUENCE^RNJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",344.71,344.711,.01,1,0)
^.1
"^DD",344.71,344.711,.01,1,1,0)
344.711^B
"^DD",344.71,344.711,.01,1,1,1)
S ^RCY(344.71,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",344.71,344.711,.01,1,1,2)
K ^RCY(344.71,DA(1),1,"B",$E(X,1,30),DA)
"^DD",344.71,344.711,.01,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",344.71,344.711,.01,21,0)
^^1^1^3171117^
"^DD",344.71,344.711,.01,21,1,0)
This is the sequence number within a multi-transaction split.
"^DD",344.71,344.711,.01,23,0)
^^1^1^3171117^
"^DD",344.71,344.711,.01,23,1,0)
This is a sequence number between 1 and 999.
"^DD",344.71,344.711,.01,"DT")
3171117
"^DD",344.71,344.711,.02,0)
CLAIM^FJ15^^0;2^K:$L(X)>15!($L(X)<1) X
"^DD",344.71,344.711,.02,3)
Answer must be 1-15 characters in length.
"^DD",344.71,344.711,.02,21,0)
^^1^1^3171117^
"^DD",344.71,344.711,.02,21,1,0)
This is the claim number within a multi-transaction split.
"^DD",344.71,344.711,.02,23,0)
^^3^3^3171117^
"^DD",344.71,344.711,.02,23,1,0)
This claim number may be either a valid VistA third party claim or a
"^DD",344.71,344.711,.02,23,2,0)
non-VA claim number if part of the suspense line is apportioned back to
"^DD",344.71,344.711,.02,23,3,0)
suspense.  
"^DD",344.71,344.711,.02,"DT")
3171117
"^DD",344.71,344.711,.03,0)
AMOUNT^NJ13,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999999)!(X<0)!(X?.E1"."3.N) X
"^DD",344.71,344.711,.03,3)
Type a dollar amount between 0 and 9999999999, 2 decimal digits.
"^DD",344.71,344.711,.03,21,0)
^^1^1^3171117^
"^DD",344.71,344.711,.03,21,1,0)
This is the amount of the suspense line apportioned to the claim.
"^DD",344.71,344.711,.03,23,0)
^^1^1^3171117^
"^DD",344.71,344.711,.03,23,1,0)
This is the dollar amount transferred to the claim from suspense.
"^DD",344.71,344.711,.03,"DT")
3171117
"^DD",344.71,344.711,.04,0)
COMMENT^FJ50^^0;4^K:$L(X)>50!($L(X)<3) X
"^DD",344.71,344.711,.04,3)
Answer must be 3-50 characters in length.
"^DD",344.71,344.711,.04,21,0)
^^2^2^3171117^
"^DD",344.71,344.711,.04,21,1,0)
This is the suspense comment entered if part of the original suspense line
"^DD",344.71,344.711,.04,21,2,0)
is apportioned to suspense or a non-VA claim.
"^DD",344.71,344.711,.04,"DT")
3171117
**END**
**END**
