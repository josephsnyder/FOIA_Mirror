KIDS Distribution saved on Jun 17, 2013@08:07:55
Patches XU*8.0*550 and KMPR*2.0*2
**KIDS**:XU*8.0*550^KMPR*2.0*2^

**INSTALL NAME**
XU*8.0*550
"BLD",1104,0)
XU*8.0*550^KERNEL^0^3130617^y
"BLD",1104,1,0)
^^1^1^3100803^
"BLD",1104,1,1,0)
Add RUM support for Linux and Windows operating systems.
"BLD",1104,4,0)
^9.64PA^^
"BLD",1104,6)
16^
"BLD",1104,6.3)
23
"BLD",1104,"ABPKG")
n
"BLD",1104,"INID")
^n
"BLD",1104,"INIT")
EN^ZOSVKRPI
"BLD",1104,"KRN",0)
^9.67PA^779.2^20
"BLD",1104,"KRN",.4,0)
.4
"BLD",1104,"KRN",.401,0)
.401
"BLD",1104,"KRN",.402,0)
.402
"BLD",1104,"KRN",.403,0)
.403
"BLD",1104,"KRN",.5,0)
.5
"BLD",1104,"KRN",.84,0)
.84
"BLD",1104,"KRN",3.6,0)
3.6
"BLD",1104,"KRN",3.8,0)
3.8
"BLD",1104,"KRN",9.2,0)
9.2
"BLD",1104,"KRN",9.8,0)
9.8
"BLD",1104,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",1104,"KRN",9.8,"NM",1,0)
ZOSVKRO^^0^B32060181
"BLD",1104,"KRN",9.8,"NM",2,0)
ZOSVKRT^^0^B3418
"BLD",1104,"KRN",9.8,"NM",3,0)
ZOSVKRV^^0^B94057
"BLD",1104,"KRN",9.8,"NM",4,0)
ZOSVKRPI^^0^B1051810
"BLD",1104,"KRN",9.8,"NM","B","ZOSVKRO",1)

"BLD",1104,"KRN",9.8,"NM","B","ZOSVKRPI",4)

"BLD",1104,"KRN",9.8,"NM","B","ZOSVKRT",2)

"BLD",1104,"KRN",9.8,"NM","B","ZOSVKRV",3)

"BLD",1104,"KRN",19,0)
19
"BLD",1104,"KRN",19.1,0)
19.1
"BLD",1104,"KRN",101,0)
101
"BLD",1104,"KRN",409.61,0)
409.61
"BLD",1104,"KRN",771,0)
771
"BLD",1104,"KRN",779.2,0)
779.2
"BLD",1104,"KRN",870,0)
870
"BLD",1104,"KRN",8989.51,0)
8989.51
"BLD",1104,"KRN",8989.52,0)
8989.52
"BLD",1104,"KRN",8994,0)
8994
"BLD",1104,"KRN","B",.4,.4)

"BLD",1104,"KRN","B",.401,.401)

"BLD",1104,"KRN","B",.402,.402)

"BLD",1104,"KRN","B",.403,.403)

"BLD",1104,"KRN","B",.5,.5)

"BLD",1104,"KRN","B",.84,.84)

"BLD",1104,"KRN","B",3.6,3.6)

"BLD",1104,"KRN","B",3.8,3.8)

"BLD",1104,"KRN","B",9.2,9.2)

"BLD",1104,"KRN","B",9.8,9.8)

"BLD",1104,"KRN","B",19,19)

"BLD",1104,"KRN","B",19.1,19.1)

"BLD",1104,"KRN","B",101,101)

"BLD",1104,"KRN","B",409.61,409.61)

"BLD",1104,"KRN","B",771,771)

"BLD",1104,"KRN","B",779.2,779.2)

"BLD",1104,"KRN","B",870,870)

"BLD",1104,"KRN","B",8989.51,8989.51)

"BLD",1104,"KRN","B",8989.52,8989.52)

"BLD",1104,"KRN","B",8994,8994)

"BLD",1104,"QUES",0)
^9.62^^
"BLD",1104,"REQB",0)
^9.611^1^1
"BLD",1104,"REQB",1,0)
KMPR*2.0*1^0
"BLD",1104,"REQB","B","KMPR*2.0*1",1)

"INIT")
EN^ZOSVKRPI
"MBREQ")
0
"PKG",216,-1)
1^1
"PKG",216,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",216,20,0)
^9.402P^2^2
"PKG",216,20,1,0)
200^^XDRM200N
"PKG",216,20,1,1)

"PKG",216,20,2,0)
2^^RGDRM03
"PKG",216,20,2,1)

"PKG",216,20,"B",2,2)

"PKG",216,20,"B",200,1)

"PKG",216,22,0)
^9.49I^1^1
"PKG",216,22,1,0)
8.0^2950703^2950821^627
"PKG",216,22,1,"PAH",1,0)
550^3130617^577
"PKG",216,22,1,"PAH",1,1,0)
^^1^1^3130617
"PKG",216,22,1,"PAH",1,1,1,0)
Add RUM support for Linux and Windows operating systems.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","ZOSVKRO")
0^1^B32060181
"RTN","ZOSVKRO",1,0)
%ZOSVKR ;SF/KAK/RAK - ZOSVKRO - Collect RUM Statistics for Cache on VMS/Linux/Windows;8/20/99  08:43  ;7/29/10  09:57
"RTN","ZOSVKRO",2,0)
 ;;8.0;KERNEL;**90,94,107,122,143,186,550**;July 7, 2010 10:10 am;Build 23
"RTN","ZOSVKRO",3,0)
 ;
"RTN","ZOSVKRO",4,0)
RO(OPT) ; Record option resource usage in ^KMPTMP("KMPR"
"RTN","ZOSVKRO",5,0)
 ;
"RTN","ZOSVKRO",6,0)
 N KMPRTYP S KMPRTYP=0  ; option
"RTN","ZOSVKRO",7,0)
 G EN
"RTN","ZOSVKRO",8,0)
 ;
"RTN","ZOSVKRO",9,0)
RP(PRTCL) ; Record protocol resource usage in ^KMPTMP("KMPR"
"RTN","ZOSVKRO",10,0)
 ; Variable PRTCL = option_name^protocol_name
"RTN","ZOSVKRO",11,0)
 ;
"RTN","ZOSVKRO",12,0)
 ; quit if rum is turned off
"RTN","ZOSVKRO",13,0)
 Q:'$G(^%ZTSCH("LOGRSRC"))
"RTN","ZOSVKRO",14,0)
 ;
"RTN","ZOSVKRO",15,0)
 N OPT
"RTN","ZOSVKRO",16,0)
 S OPT=$P(PRTCL,"^"),PRTCL=$P(PRTCL,"^",2)
"RTN","ZOSVKRO",17,0)
 Q:PRTCL=""
"RTN","ZOSVKRO",18,0)
 ;
"RTN","ZOSVKRO",19,0)
 N KMPRTYP S KMPRTYP=1  ; protocol
"RTN","ZOSVKRO",20,0)
 G EN
"RTN","ZOSVKRO",21,0)
 ;
"RTN","ZOSVKRO",22,0)
RU(KMPROPT,KMPRTYP,KMPRSTAT) ;-- set resource usage into ^KMPTMP("KMPR"
"RTN","ZOSVKRO",23,0)
 ;----------------------------------------------------------------------
"RTN","ZOSVKRO",24,0)
 ; KMPROPT... Option name (may be option, protocol, rpc, etc.)
"RTN","ZOSVKRO",25,0)
 ; KMPRTYP...
"RTN","ZOSVKRO",26,0)
 ;    Type of option:
"RTN","ZOSVKRO",27,0)
 ;                   0 - Option
"RTN","ZOSVKRO",28,0)
 ;                   1 - Protocol
"RTN","ZOSVKRO",29,0)
 ;                   2 - RPC (Remote Procedure Call)
"RTN","ZOSVKRO",30,0)
 ;                   3 - HL7
"RTN","ZOSVKRO",31,0)
 ; KMPRSTAT..
"RTN","ZOSVKRO",32,0)
 ;    Status (for future use):
"RTN","ZOSVKRO",33,0)
 ;                   1 - start
"RTN","ZOSVKRO",34,0)
 ;                   2 - stop
"RTN","ZOSVKRO",35,0)
 ;----------------------------------------------------------------------
"RTN","ZOSVKRO",36,0)
 ;
"RTN","ZOSVKRO",37,0)
 Q:$G(KMPROPT)=""
"RTN","ZOSVKRO",38,0)
 ;
"RTN","ZOSVKRO",39,0)
 S KMPRTYP=+$G(KMPRTYP)
"RTN","ZOSVKRO",40,0)
 S KMPRSTAT=$G(KMPRSTAT)
"RTN","ZOSVKRO",41,0)
 ;
"RTN","ZOSVKRO",42,0)
 N OPT,PRTCL
"RTN","ZOSVKRO",43,0)
 ; 
"RTN","ZOSVKRO",44,0)
 ; OPT   = option name
"RTN","ZOSVKRO",45,0)
 ; PRTCL = protocol name (optional)
"RTN","ZOSVKRO",46,0)
 S OPT=$P(KMPROPT,"^"),PRTCL=$P(KMPROPT,"^",2)
"RTN","ZOSVKRO",47,0)
 ;
"RTN","ZOSVKRO",48,0)
EN ;
"RTN","ZOSVKRO",49,0)
 ; CURHDAY... current $H day
"RTN","ZOSVKRO",50,0)
 ; CURHSEC... current $H seconds
"RTN","ZOSVKRO",51,0)
 ; CURSTAT... current stats
"RTN","ZOSVKRO",52,0)
 ; DIFF...... difference (CURSTAT minus PREVSTAT)
"RTN","ZOSVKRO",53,0)
 ; NODE...... current node
"RTN","ZOSVKRO",54,0)
 ; PREVHDAY.. previous $H day
"RTN","ZOSVKRO",55,0)
 ; PREVHSEC.. previous $H seconds
"RTN","ZOSVKRO",56,0)
 ; PREVSTAT.. previous stats
"RTN","ZOSVKRO",57,0)
 ; PRIMETM... prime time (1) or non-prime time (0)
"RTN","ZOSVKRO",58,0)
 ;
"RTN","ZOSVKRO",59,0)
 N ACTV,ARRAY,CURHDAY,CURHSEC,CURSTAT,CURRHR,DIFF
"RTN","ZOSVKRO",60,0)
 N I,NODE,PREVHDAY,PREVHSEC,PREVSTAT,PRIMETM,Y
"RTN","ZOSVKRO",61,0)
 ;
"RTN","ZOSVKRO",62,0)
 ; quit if not in "PROD" uci
"RTN","ZOSVKRO",63,0)
 S Y="" X $G(^%ZOSF("UCI")) Q:Y'[$G(^%ZOSF("PROD"))
"RTN","ZOSVKRO",64,0)
 ;
"RTN","ZOSVKRO",65,0)
 D GETENV^%ZOSV S NODE=$P(Y,"^",3),U="^"
"RTN","ZOSVKRO",66,0)
 I KMPRTYP I OPT="" S:$P($G(KMPR("JOB",NODE,$J)),"^",10)["$LOGIN$" OPT="$LOGIN$"
"RTN","ZOSVKRO",67,0)
 I OPT="" Q:'+$G(^XUTL("XQ",$J,"T"))  S OPT=$P($G(^XUTL("XQ",$J,^XUTL("XQ",$J,"T"))),"^",2) Q:OPT=""
"RTN","ZOSVKRO",68,0)
 ;
"RTN","ZOSVKRO",69,0)
 ; CURSTAT = current stats for this $job
"RTN","ZOSVKRO",70,0)
 ;         = cpu^dio^bio^pg_fault^cmd^glo^$H_day^$H_sec^ascii_time
"RTN","ZOSVKRO",71,0)
 S CURSTAT=$P($$STATS,"^",1,9)
"RTN","ZOSVKRO",72,0)
 Q:CURSTAT=""
"RTN","ZOSVKRO",73,0)
 ;
"RTN","ZOSVKRO",74,0)
 S CURHDAY=$P(CURSTAT,"^",7),CURHSEC=$P(CURSTAT,"^",8)
"RTN","ZOSVKRO",75,0)
 ;
"RTN","ZOSVKRO",76,0)
 ; PREVSTAT = previous stats for this $job
"RTN","ZOSVKRO",77,0)
 S PREVSTAT=$G(KMPR("JOB",NODE,$J))
"RTN","ZOSVKRO",78,0)
 ;
"RTN","ZOSVKRO",79,0)
 ; if previous option was tagged as being run from taskman(!)
"RTN","ZOSVKRO",80,0)
 ; then mark current OPTion as running from taskman(!)
"RTN","ZOSVKRO",81,0)
 I $P($P(PREVSTAT,"^",10),"***")=("!"_OPT) S OPT="!"_OPT
"RTN","ZOSVKRO",82,0)
 ;
"RTN","ZOSVKRO",83,0)
 ; concatenate to CURSTAT: ...^OPTion^option_type
"RTN","ZOSVKRO",84,0)
 S CURSTAT=CURSTAT_"^"_$S(KMPRTYP=2:"`"_OPT,KMPRTYP=3:"&"_OPT,1:OPT)_"***"_$G(PRTCL)_"^"_$G(XQT)
"RTN","ZOSVKRO",85,0)
 S KMPR("JOB",NODE,$J)=CURSTAT
"RTN","ZOSVKRO",86,0)
 ;
"RTN","ZOSVKRO",87,0)
 ; if option and login or taskman
"RTN","ZOSVKRO",88,0)
 I 'KMPRTYP I OPT="$LOGIN$"!(OPT="$STRT ZTMS$") Q
"RTN","ZOSVKRO",89,0)
 ;
"RTN","ZOSVKRO",90,0)
 I OPT="$LOGOUT$"!(OPT="$STOP ZTMS$")!(OPT="XUPROGMODE") K KMPR("JOB",NODE,$J)
"RTN","ZOSVKRO",91,0)
 ;
"RTN","ZOSVKRO",92,0)
 Q:PREVSTAT=""
"RTN","ZOSVKRO",93,0)
 ;
"RTN","ZOSVKRO",94,0)
 ; check for negative numbers for m commands and glo references
"RTN","ZOSVKRO",95,0)
 F I=5,6 I $P(CURSTAT,"^",I)<0 D 
"RTN","ZOSVKRO",96,0)
 .S $P(CURSTAT,"^",I)=$P(CURSTAT,"^",I)+(2**31)+(2**31)
"RTN","ZOSVKRO",97,0)
 .I $P(PREVSTAT,"^",I)<0 S $P(PREVSTAT,"^",I)=$P(PREVSTAT,"^",I)+(2**31)+(2**31)
"RTN","ZOSVKRO",98,0)
 ;
"RTN","ZOSVKRO",99,0)
 S PREVHDAY=$P(PREVSTAT,"^",7),$P(PREVSTAT,"^",7)=$P(PREVSTAT,"^",8)
"RTN","ZOSVKRO",100,0)
 ;
"RTN","ZOSVKRO",101,0)
 ; quit if not $h
"RTN","ZOSVKRO",102,0)
 Q:'PREVHDAY
"RTN","ZOSVKRO",103,0)
 ;
"RTN","ZOSVKRO",104,0)
 ; if option has been running more than one day
"RTN","ZOSVKRO",105,0)
 ; add the number of seconds in each day to the current $H seconds
"RTN","ZOSVKRO",106,0)
 S $P(CURSTAT,"^",7)=(CURHDAY-PREVHDAY)*86400+CURHSEC
"RTN","ZOSVKRO",107,0)
 ;
"RTN","ZOSVKRO",108,0)
 ; difference = current stats minus previous stats
"RTN","ZOSVKRO",109,0)
 ; DIFF       = CURSTAT - PREVSTAT
"RTN","ZOSVKRO",110,0)
 ;            = cpu^dio^bio^pg_fault^cmd^glo^elapsed_sec
"RTN","ZOSVKRO",111,0)
 F I=1:1:7 S $P(DIFF,"^",I)=$P(CURSTAT,"^",I)-$P(PREVSTAT,"^",I)
"RTN","ZOSVKRO",112,0)
 ;
"RTN","ZOSVKRO",113,0)
 ; quit if negative m commands or global references
"RTN","ZOSVKRO",114,0)
 Q:$P(DIFF,"^",5)<0
"RTN","ZOSVKRO",115,0)
 Q:$P(DIFF,"^",6)<0
"RTN","ZOSVKRO",116,0)
 ;
"RTN","ZOSVKRO",117,0)
 ; option name
"RTN","ZOSVKRO",118,0)
 S OPT=$P(PREVSTAT,"^",10)
"RTN","ZOSVKRO",119,0)
 ;
"RTN","ZOSVKRO",120,0)
 ; PRIMETM = 0: non-prime time
"RTN","ZOSVKRO",121,0)
 ;           1: prime time
"RTN","ZOSVKRO",122,0)
 S PRIMETM=0
"RTN","ZOSVKRO",123,0)
 ;
"RTN","ZOSVKRO",124,0)
 ; set prime time = 1 if after 8am and before 5pm
"RTN","ZOSVKRO",125,0)
 ; non-workday prime time and non-prime time will be converted
"RTN","ZOSVKRO",126,0)
 ; into non-workday time in nightly background job (KMPRBD02)
"RTN","ZOSVKRO",127,0)
 I CURHSEC>28799&(CURHSEC<61201) S PRIMETM=1
"RTN","ZOSVKRO",128,0)
 ;
"RTN","ZOSVKRO",129,0)
 ; global location for data storage
"RTN","ZOSVKRO",130,0)
 S ARRAY=$G(^KMPTMP("KMPR","DLY",NODE,CURHDAY,OPT,$J,PRIMETM))
"RTN","ZOSVKRO",131,0)
 ;
"RTN","ZOSVKRO",132,0)
 ; seven elements for this option
"RTN","ZOSVKRO",133,0)
 F I=1:1:7 S $P(ARRAY,"^",I)=$P($G(ARRAY),"^",I)+$P(DIFF,"^",I)
"RTN","ZOSVKRO",134,0)
 ; 8th piece is occurrence counter for this option
"RTN","ZOSVKRO",135,0)
 S $P(ARRAY,"^",8)=$P(ARRAY,"^",8)+1
"RTN","ZOSVKRO",136,0)
 ;
"RTN","ZOSVKRO",137,0)
 ; current hour => 0 - 23
"RTN","ZOSVKRO",138,0)
 S CURRHR=CURHSEC\3600
"RTN","ZOSVKRO",139,0)
 ;
"RTN","ZOSVKRO",140,0)
 ; time starts at zero hour - shift everything by 10 so zero hour
"RTN","ZOSVKRO",141,0)
 ; begins at 10th piece, hour 1 is 11th, ... and hour 23 is 33rd piece
"RTN","ZOSVKRO",142,0)
 ;
"RTN","ZOSVKRO",143,0)
 ; record last hour this option ran - this will be moved to file 8971.1
"RTN","ZOSVKRO",144,0)
 ; hourly stats are only attributed to the current hour
"RTN","ZOSVKRO",145,0)
 ;
"RTN","ZOSVKRO",146,0)
 ; add ~1 if this job runs from top of hour to 60 seconds
"RTN","ZOSVKRO",147,0)
 ; this will give active number of jobs per hour
"RTN","ZOSVKRO",148,0)
 S ACTV=$P(ARRAY,"^",(CURRHR+10)),$P(ACTV,"~")=$P(ACTV,"~")+1
"RTN","ZOSVKRO",149,0)
 I (($P(CURSTAT,"^",8)#3600)-$P(DIFF,"^",7))<60 S $P(ACTV,"~",2)=1
"RTN","ZOSVKRO",150,0)
 S $P(ARRAY,"^",(CURRHR+10))=ACTV
"RTN","ZOSVKRO",151,0)
 ;
"RTN","ZOSVKRO",152,0)
 ; 9th piece: current $h seconds ~ elapsed seconds ~ difference
"RTN","ZOSVKRO",153,0)
 S $P(ARRAY,"^",9)=($P(CURSTAT,"^",8))_"~"_($P(DIFF,"^",7))_"~"_(($P(CURSTAT,"^",8)#3600)-$P(DIFF,"^",7))
"RTN","ZOSVKRO",154,0)
 ;
"RTN","ZOSVKRO",155,0)
 ; set into global
"RTN","ZOSVKRO",156,0)
 S ^KMPTMP("KMPR","DLY",NODE,CURHDAY,OPT,$J,PRIMETM)=ARRAY
"RTN","ZOSVKRO",157,0)
 ;
"RTN","ZOSVKRO",158,0)
 Q
"RTN","ZOSVKRO",159,0)
 ;
"RTN","ZOSVKRO",160,0)
STATS() ;-- extrinsic - return current stats for this $job
"RTN","ZOSVKRO",161,0)
  ;
"RTN","ZOSVKRO",162,0)
 N MUMPS,OS,OSNUM,PROCESS,RETURN,V,VER,ZH,ZT
"RTN","ZOSVKRO",163,0)
 ;
"RTN","ZOSVKRO",164,0)
 S RETURN=""
"RTN","ZOSVKRO",165,0)
 ; mumps implementation
"RTN","ZOSVKRO",166,0)
 S MUMPS=$$VERSION^%ZOSV(1)
"RTN","ZOSVKRO",167,0)
 ; quit if not cache
"RTN","ZOSVKRO",168,0)
 Q:$TR(MUMPS,"cahe","CAHE")'["CACHE" ""
"RTN","ZOSVKRO",169,0)
 ; operating system
"RTN","ZOSVKRO",170,0)
 S OS=$$OS^%ZOSV
"RTN","ZOSVKRO",171,0)
 ; mumps version
"RTN","ZOSVKRO",172,0)
 S VER=$P($$VERSION^%ZOSV(0),".",1,2)
"RTN","ZOSVKRO",173,0)
 ; $h
"RTN","ZOSVKRO",174,0)
 S ZT=$H_"."_$P($ZTIMESTAMP,".",2)
"RTN","ZOSVKRO",175,0)
 ; if version is greater than 2007
"RTN","ZOSVKRO",176,0)
 I VER>2007 D 
"RTN","ZOSVKRO",177,0)
 .S PROCESS=##class(%SYS.ProcessQuery).%OpenId($J)
"RTN","ZOSVKRO",178,0)
 .Q:PROCESS=""
"RTN","ZOSVKRO",179,0)
 .; cpu time
"RTN","ZOSVKRO",180,0)
 .S $P(RETURN,"^")=+($FN(($P(PROCESS.GetCPUTime(),",")/1000),"",2))
"RTN","ZOSVKRO",181,0)
 .; m commands
"RTN","ZOSVKRO",182,0)
 .S $P(RETURN,"^",5)=PROCESS.LinesExecuted
"RTN","ZOSVKRO",183,0)
 .; global references
"RTN","ZOSVKRO",184,0)
 .S $P(RETURN,"^",6)=PROCESS.GlobalReferences
"RTN","ZOSVKRO",185,0)
 .; $h date
"RTN","ZOSVKRO",186,0)
 .S $P(RETURN,"^",7)=$P(ZT,",")
"RTN","ZOSVKRO",187,0)
 .; $h seconds
"RTN","ZOSVKRO",188,0)
 .S $P(RETURN,"^",8)=$p($P(ZT,",",2),".")
"RTN","ZOSVKRO",189,0)
 .; $h seconds.thousandofsecond
"RTN","ZOSVKRO",190,0)
 .S $P(RETURN,"^",9)=$P(ZT,",",2)
"RTN","ZOSVKRO",191,0)
 ;
"RTN","ZOSVKRO",192,0)
 ; if version is 4 or greater and not linux and not unknown
"RTN","ZOSVKRO",193,0)
 E  I (+VER)'<4&(OS'["UNIX")&(OS'["UNK") D
"RTN","ZOSVKRO",194,0)
  .S V=$V(-1,$J),ZH=$ZU(171)
"RTN","ZOSVKRO",195,0)
 .; cpu time
"RTN","ZOSVKRO",196,0)
 .S $P(RETURN,"^")=$P(ZH,",")
"RTN","ZOSVKRO",197,0)
 .; direct io
"RTN","ZOSVKRO",198,0)
 .S $P(RETURN,"^",2)=$P(ZH,",",7)
"RTN","ZOSVKRO",199,0)
 .; buffered io
"RTN","ZOSVKRO",200,0)
 .S $P(RETURN,"^",3)=$P(ZH,",",8)
"RTN","ZOSVKRO",201,0)
 .; page faults
"RTN","ZOSVKRO",202,0)
 .S $P(RETURN,"^",4)=$P(ZH,",",4)
"RTN","ZOSVKRO",203,0)
 .; m commands
"RTN","ZOSVKRO",204,0)
 .S $P(RETURN,"^",5)=$P($P(V,"^",7),",")
"RTN","ZOSVKRO",205,0)
 .; global references
"RTN","ZOSVKRO",206,0)
 .S $P(RETURN,"^",6)=$P($P(V,"^",7),",",2)
"RTN","ZOSVKRO",207,0)
 .; $h date
"RTN","ZOSVKRO",208,0)
 .S $P(RETURN,"^",7)=$P(ZT,",")
"RTN","ZOSVKRO",209,0)
 .; $h seconds
"RTN","ZOSVKRO",210,0)
 .S $P(RETURN,"^",8)=$p($P(ZT,",",2),".")
"RTN","ZOSVKRO",211,0)
 .; $h seconds.thousandofsecond
"RTN","ZOSVKRO",212,0)
 .S $P(RETURN,"^",9)=$P(ZT,",",2)
"RTN","ZOSVKRO",213,0)
 ;
"RTN","ZOSVKRO",214,0)
 Q RETURN
"RTN","ZOSVKRPI")
0^4^B1051810
"RTN","ZOSVKRPI",1,0)
ZOSVKRPI ;BP/RAK - Post install routine ;8/3/10  10:49
"RTN","ZOSVKRPI",2,0)
 ;;8.0;KERNEL;**550**;;Build 23
"RTN","ZOSVKRPI",3,0)
 ;
"RTN","ZOSVKRPI",4,0)
EN ;-- entry point for post-install
"RTN","ZOSVKRPI",5,0)
 ;
"RTN","ZOSVKRPI",6,0)
 D BMES^XPDUTL(" Begin Post-Install...")
"RTN","ZOSVKRPI",7,0)
 D SAVE
"RTN","ZOSVKRPI",8,0)
 D MES^XPDUTL(" Post-Install complete!")
"RTN","ZOSVKRPI",9,0)
 ;
"RTN","ZOSVKRPI",10,0)
 Q
"RTN","ZOSVKRPI",11,0)
 ;
"RTN","ZOSVKRPI",12,0)
SAVE ;-save correct file as %ZOSVKR
"RTN","ZOSVKRPI",13,0)
 ;
"RTN","ZOSVKRPI",14,0)
 N %D,%S,SCR,ZTOS
"RTN","ZOSVKRPI",15,0)
 S ZTOS=$$OSNUM^ZTMGRSET
"RTN","ZOSVKRPI",16,0)
 ; if not supported
"RTN","ZOSVKRPI",17,0)
 I ZTOS'=3 D  Q
"RTN","ZOSVKRPI",18,0)
 .D MES^XPDUTL(" "_$P($T(@ZTOS^ZTMGRSET),";",3)_" is not supported.  No routine saved!")
"RTN","ZOSVKRPI",19,0)
 ; supported
"RTN","ZOSVKRPI",20,0)
 S %D="%ZOSVKR",%S="ZOSVKRO",SCR="I 1"
"RTN","ZOSVKRPI",21,0)
 D MOVE^ZTMGRSET
"RTN","ZOSVKRPI",22,0)
 D MES^XPDUTL("        for "_$P($T(@ZTOS^ZTMGRSET),";",3)_".")
"RTN","ZOSVKRPI",23,0)
 ;
"RTN","ZOSVKRPI",24,0)
 Q
"RTN","ZOSVKRT")
0^2^B3418
"RTN","ZOSVKRT",1,0)
%ZOSVKR ;SF/KAK/RAK - ZOSVKRT - Collect RUM Statistics for OpenM/Cache;8/20/99  08:43  ;7/29/10  09:59
"RTN","ZOSVKRT",2,0)
 ;;8.0;KERNEL;**90,94,107,122,143,186,550**;July 7, 2010 10:10 am;Build 23
"RTN","ZOSVKRT",3,0)
 ;
"RTN","ZOSVKRT",4,0)
 Q
"RTN","ZOSVKRV")
0^3^B94057
"RTN","ZOSVKRV",1,0)
%ZOSVKR ;SF/KAK/RAK - ZOSVKRV - Collect RUM Statistics for VAX-DSM;8/20/99  08:44 ;7/29/10  09:57
"RTN","ZOSVKRV",2,0)
 ;;8.0;KERNEL;**90,94,107,122,143,186,550**;July 7, 2010 10:10 am;Build 23
"RTN","ZOSVKRV",3,0)
 ;
"RTN","ZOSVKRV",4,0)
RO(OPT) ; Record option resource usage in ^KMPTMP("KMPR"
"RTN","ZOSVKRV",5,0)
 ;
"RTN","ZOSVKRV",6,0)
 Q
"RTN","ZOSVKRV",7,0)
 ;
"RTN","ZOSVKRV",8,0)
RP(PRTCL) ; Record protocol resource usage in ^KMPTMP("KMPR"
"RTN","ZOSVKRV",9,0)
 ; Variable PRTCL = option_name^protocol_name
"RTN","ZOSVKRV",10,0)
 Q
"RTN","ZOSVKRV",11,0)
 ;
"RTN","ZOSVKRV",12,0)
RU(KMPROPT,KMPRTYP,KMPRSTAT) ;-- set resource usage into ^KMPTMP("KMPR"
"RTN","ZOSVKRV",13,0)
 Q
"RTN","ZOSVKRV",14,0)
 ;
"RTN","ZOSVKRV",15,0)
EN ;
"RTN","ZOSVKRV",16,0)
  Q
"RTN","ZOSVKRV",17,0)
 ;
"RTN","ZOSVKRV",18,0)
STATS() ;-- extrinsic - return current stats for this $job
"RTN","ZOSVKRV",19,0)
 ;
"RTN","ZOSVKRV",20,0)
 Q ""
"VER")
8.0^22.0
**INSTALL NAME**
KMPR*2.0*2
"BLD",736,0)
KMPR*2.0*2^CAPACITY MANAGEMENT - RUM^0^3130617^y
"BLD",736,1,0)
^^1^1^3130130^^
"BLD",736,1,1,0)
Patch KMPR*2*2
"BLD",736,4,0)
^9.64PA^^
"BLD",736,6)
13^
"BLD",736,6.3)
12
"BLD",736,"ABPKG")
n
"BLD",736,"INIT")
EN^KMPRPOST
"BLD",736,"KRN",0)
^9.67PA^8989.52^19
"BLD",736,"KRN",.4,0)
.4
"BLD",736,"KRN",.401,0)
.401
"BLD",736,"KRN",.402,0)
.402
"BLD",736,"KRN",.403,0)
.403
"BLD",736,"KRN",.5,0)
.5
"BLD",736,"KRN",.84,0)
.84
"BLD",736,"KRN",3.6,0)
3.6
"BLD",736,"KRN",3.8,0)
3.8
"BLD",736,"KRN",9.2,0)
9.2
"BLD",736,"KRN",9.8,0)
9.8
"BLD",736,"KRN",9.8,"NM",0)
^9.68A^12^11
"BLD",736,"KRN",9.8,"NM",1,0)
KMPRBD04^^0^B32539952
"BLD",736,"KRN",9.8,"NM",2,0)
KMPRUTL^^0^B12744359
"BLD",736,"KRN",9.8,"NM",3,0)
KMPRUTL1^^0^B23586195
"BLD",736,"KRN",9.8,"NM",4,0)
KMPRSS^^0^B5496431
"BLD",736,"KRN",9.8,"NM",5,0)
KMPRSSA^^1^
"BLD",736,"KRN",9.8,"NM",6,0)
KMPRSSB^^1^
"BLD",736,"KRN",9.8,"NM",8,0)
KMPRBD05^^0^B15044365
"BLD",736,"KRN",9.8,"NM",9,0)
KMPRBD02^^0^B30303455
"BLD",736,"KRN",9.8,"NM",10,0)
KMPRPT^^0^B53295132
"BLD",736,"KRN",9.8,"NM",11,0)
KMPRBD01^^0^B7791408
"BLD",736,"KRN",9.8,"NM",12,0)
KMPRPOST^^0^B555999
"BLD",736,"KRN",9.8,"NM","B","KMPRBD01",11)

"BLD",736,"KRN",9.8,"NM","B","KMPRBD02",9)

"BLD",736,"KRN",9.8,"NM","B","KMPRBD04",1)

"BLD",736,"KRN",9.8,"NM","B","KMPRBD05",8)

"BLD",736,"KRN",9.8,"NM","B","KMPRPOST",12)

"BLD",736,"KRN",9.8,"NM","B","KMPRPT",10)

"BLD",736,"KRN",9.8,"NM","B","KMPRSS",4)

"BLD",736,"KRN",9.8,"NM","B","KMPRSSA",5)

"BLD",736,"KRN",9.8,"NM","B","KMPRSSB",6)

"BLD",736,"KRN",9.8,"NM","B","KMPRUTL",2)

"BLD",736,"KRN",9.8,"NM","B","KMPRUTL1",3)

"BLD",736,"KRN",19,0)
19
"BLD",736,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",736,"KRN",19,"NM",1,0)
KMPR START COLLECTION^^0
"BLD",736,"KRN",19,"NM","B","KMPR START COLLECTION",1)

"BLD",736,"KRN",19.1,0)
19.1
"BLD",736,"KRN",101,0)
101
"BLD",736,"KRN",409.61,0)
409.61
"BLD",736,"KRN",771,0)
771
"BLD",736,"KRN",870,0)
870
"BLD",736,"KRN",8989.51,0)
8989.51
"BLD",736,"KRN",8989.52,0)
8989.52
"BLD",736,"KRN",8994,0)
8994
"BLD",736,"KRN","B",.4,.4)

"BLD",736,"KRN","B",.401,.401)

"BLD",736,"KRN","B",.402,.402)

"BLD",736,"KRN","B",.403,.403)

"BLD",736,"KRN","B",.5,.5)

"BLD",736,"KRN","B",.84,.84)

"BLD",736,"KRN","B",3.6,3.6)

"BLD",736,"KRN","B",3.8,3.8)

"BLD",736,"KRN","B",9.2,9.2)

"BLD",736,"KRN","B",9.8,9.8)

"BLD",736,"KRN","B",19,19)

"BLD",736,"KRN","B",19.1,19.1)

"BLD",736,"KRN","B",101,101)

"BLD",736,"KRN","B",409.61,409.61)

"BLD",736,"KRN","B",771,771)

"BLD",736,"KRN","B",870,870)

"BLD",736,"KRN","B",8989.51,8989.51)

"BLD",736,"KRN","B",8989.52,8989.52)

"BLD",736,"KRN","B",8994,8994)

"BLD",736,"QUES",0)
^9.62^^
"BLD",736,"REQB",0)
^9.611^1^1
"BLD",736,"REQB",1,0)
KMPR*2.0*1^1
"BLD",736,"REQB","B","KMPR*2.0*1",1)

"INIT")
EN^KMPRPOST
"KRN",19,7407,-1)
0^1
"KRN",19,7407,0)
KMPR START COLLECTION^Start RUM Collection^^R^^^^^^^^CAPACITY MANAGEMENT - RUM^^
"KRN",19,7407,1,0)
^19.06^1^1^3130130^^^
"KRN",19,7407,1,1,0)
This option will start Resource Usage Monitor (RUM) collection.
"KRN",19,7407,20)

"KRN",19,7407,25)
START^KMPRSS
"KRN",19,7407,"U")
START RUM COLLECTION
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",416,-1)
1^1
"PKG",416,0)
CAPACITY MANAGEMENT - RUM^KMPR
"PKG",416,20,0)
^9.402P^^
"PKG",416,22,0)
^9.49I^1^1
"PKG",416,22,1,0)
2.0^3030602^3030602^577
"PKG",416,22,1,"PAH",1,0)
2^3130617^577
"PKG",416,22,1,"PAH",1,1,0)
^^1^1^3130617
"PKG",416,22,1,"PAH",1,1,1,0)
Patch KMPR*2*2
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
11
"RTN","KMPRBD01")
0^11^B7825307
"RTN","KMPRBD01",1,0)
KMPRBD01 ;OAK/RAK - RUM Daily/Weekly Compression ;11/19/04  10:31
"RTN","KMPRBD01",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1,2**;May 28, 2003;Build 12
"RTN","KMPRBD01",3,0)
 ;
"RTN","KMPRBD01",4,0)
EN ;-- entry point for Background Driver.
"RTN","KMPRBD01",5,0)
 ;
"RTN","KMPRBD01",6,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD01",7,0)
 ;
"RTN","KMPRBD01",8,0)
 N ENDT,STR
"RTN","KMPRBD01",9,0)
 ;
"RTN","KMPRBD01",10,0)
 ; quit if test lab
"RTN","KMPRBD01",11,0)
 Q:$$TESTLAB^KMPDUT1
"RTN","KMPRBD01",12,0)
 ;
"RTN","KMPRBD01",13,0)
 S STR=$$NOW^XLFDT
"RTN","KMPRBD01",14,0)
 D DAILY^KMPRBD02(+$H)
"RTN","KMPRBD01",15,0)
 ; store start, stop and delta times for daily background job
"RTN","KMPRBD01",16,0)
 D STRSTP^KMPDUTL2(2,1,1,STR)
"RTN","KMPRBD01",17,0)
 ;
"RTN","KMPRBD01",18,0)
 ; clean up old "job" nodes.
"RTN","KMPRBD01",19,0)
 D CLEAN
"RTN","KMPRBD01",20,0)
 ;
"RTN","KMPRBD01",21,0)
 ; if sunday do weekly compression
"RTN","KMPRBD01",22,0)
 I '$$DOW^XLFDT(DT,1) D 
"RTN","KMPRBD01",23,0)
 .; store weekly start/stop stats.
"RTN","KMPRBD01",24,0)
 .S STR=$$NOW^XLFDT
"RTN","KMPRBD01",25,0)
 .D WEEKLY^KMPRBD04(DT)
"RTN","KMPRBD01",26,0)
 .; store start, stop and delta times for weekly background job
"RTN","KMPRBD01",27,0)
 .D STRSTP^KMPDUTL2(2,2,1,STR)
"RTN","KMPRBD01",28,0)
 ;
"RTN","KMPRBD01",29,0)
 ; check for errors.
"RTN","KMPRBD01",30,0)
 D ERRORS
"RTN","KMPRBD01",31,0)
 ;
"RTN","KMPRBD01",32,0)
 Q
"RTN","KMPRBD01",33,0)
 ;
"RTN","KMPRBD01",34,0)
CLEAN ;-- clean up old "JOB" nodes
"RTN","KMPRBD01",35,0)
 ;
"RTN","KMPRBD01",36,0)
 N JOB,NODE S NODE=""
"RTN","KMPRBD01",37,0)
 F  S NODE=$O(^KMPTMP("KMPR","JOB",NODE)) Q:NODE=""  D
"RTN","KMPRBD01",38,0)
 .S JOB=0 F  S JOB=$O(^XTMP("KMPR","JOB",NODE,JOB)) Q:'+JOB  D
"RTN","KMPRBD01",39,0)
 ..I '$D(^XUTL("XQ",JOB)) K ^KMPTMP("KMPR","JOB",NODE,JOB)
"RTN","KMPRBD01",40,0)
 ;
"RTN","KMPRBD01",41,0)
 ; Store the number of active user jobs into ^XTMP("KMPR","ACTIVE")
"RTN","KMPRBD01",42,0)
 ; D CLUSTER^%ZKMPRC1
"RTN","KMPRBD01",43,0)
 ;
"RTN","KMPRBD01",44,0)
 Q
"RTN","KMPRBD01",45,0)
 ;
"RTN","KMPRBD01",46,0)
ERRORS ; check and process errors.
"RTN","KMPRBD01",47,0)
 ;
"RTN","KMPRBD01",48,0)
 Q:'$D(^XTMP("KMPR","ERR"))
"RTN","KMPRBD01",49,0)
 ;
"RTN","KMPRBD01",50,0)
 N H,I,LN,N,O,SITE,TEXT,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPRBD01",51,0)
 ;
"RTN","KMPRBD01",52,0)
 S SITE=$$SITE^VASITE
"RTN","KMPRBD01",53,0)
 S XMSUB="RUM Error at site "_$P(SITE,U,3)_" on "_$$FMTE^XLFDT($$DT^XLFDT)
"RTN","KMPRBD01",54,0)
 S TEXT(1)="  The following error(s) have been logged at "_$P(SITE,U,2)_" ("_$P(SITE,U,3)_") "
"RTN","KMPRBD01",55,0)
 S TEXT(2)="  while moving data from ^XTMP(""KMPR"",""DLY"") to file 8971.1."
"RTN","KMPRBD01",56,0)
 S H="",LN=3
"RTN","KMPRBD01",57,0)
 ; H = date in $H format (+$H).
"RTN","KMPRBD01",58,0)
 ; N = node name.
"RTN","KMPRBD01",59,0)
 ; O = option.
"RTN","KMPRBD01",60,0)
 F  S H=$O(^XTMP("KMPR","ERR",H)) Q:H=""  S N="" D 
"RTN","KMPRBD01",61,0)
 .F  S N=$O(^XTMP("KMPR","ERR",H,N)) Q:N=""  S O="" D 
"RTN","KMPRBD01",62,0)
 ..F  S O=$O(^XTMP("KMPR","ERR",H,N,O)) Q:O=""  D 
"RTN","KMPRBD01",63,0)
 ...S TEXT(LN)="",LN=LN+1
"RTN","KMPRBD01",64,0)
 ...S TEXT(LN)="Date..: "_H_"    Node: "_N,LN=LN+1
"RTN","KMPRBD01",65,0)
 ...S TEXT(LN)="Option: "_O,LN=LN+1
"RTN","KMPRBD01",66,0)
 ...; prime time.
"RTN","KMPRBD01",67,0)
 ...S TEXT(LN)="Prime Time     = "_$G(^XTMP("KMPR","ERR",H,N,O,0)),LN=LN+1
"RTN","KMPRBD01",68,0)
 ...; non-prime time.
"RTN","KMPRBD01",69,0)
 ...S TEXT(LN)="Non-Prime Time = "_$G(^XTMP("KMPR","ERR",H,N,O,1)),LN=LN+1
"RTN","KMPRBD01",70,0)
 ...; message.
"RTN","KMPRBD01",71,0)
 ...F I=0:0 S I=$O(^XTMP("KMPR","ERR",H,N,O,"MSG",I)) Q:'I  D 
"RTN","KMPRBD01",72,0)
 ....S TEXT(LN)=^XTMP("KMPR","ERR",H,N,O,"MSG",I),LN=LN+1
"RTN","KMPRBD01",73,0)
 S XMTEXT="TEXT("
"RTN","KMPRBD01",74,0)
 S XMY("G.KMP2-RUM@ISC-ALBANY.DOMAIN.EXT")=""
"RTN","KMPRBD01",75,0)
 D ^XMD
"RTN","KMPRBD01",76,0)
 ;
"RTN","KMPRBD01",77,0)
 K ^KMPTMP("KMPR","ERR")
"RTN","KMPRBD01",78,0)
 ;
"RTN","KMPRBD01",79,0)
 Q
"RTN","KMPRBD02")
0^9^B30303455
"RTN","KMPRBD02",1,0)
KMPRBD02 ;OAK/RAK - RUM Data Compression ;1/30/13  08:29
"RTN","KMPRBD02",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**2**;May 28, 2003;Build 12
"RTN","KMPRBD02",3,0)
 ;
"RTN","KMPRBD02",4,0)
 ; Background Driver (cont.)
"RTN","KMPRBD02",5,0)
 ;
"RTN","KMPRBD02",6,0)
DAILY(KMPRTDAY) ;-- daily data compression and storage
"RTN","KMPRBD02",7,0)
 ;----------------------------------------------------------------------
"RTN","KMPRBD02",8,0)
 ; KMPRTDAY.. Day in $H format (+$H).  This represents the
"RTN","KMPRBD02",9,0)
 ;            ending point for compression.  Only dates LESS than
"RTN","KMPRBD02",10,0)
 ;            KMPRTDAY will be compressed.
"RTN","KMPRBD02",11,0)
 ;
"RTN","KMPRBD02",12,0)
 ; At midnight compress hourly info into daily stats. Daily stats are
"RTN","KMPRBD02",13,0)
 ; stored in file #8971.1.  Hourly data is killed.
"RTN","KMPRBD02",14,0)
 ;----------------------------------------------------------------------
"RTN","KMPRBD02",15,0)
 ;
"RTN","KMPRBD02",16,0)
 Q:'$G(KMPRTDAY)
"RTN","KMPRBD02",17,0)
 ;
"RTN","KMPRBD02",18,0)
 ; if test lab
"RTN","KMPRBD02",19,0)
 I $$TESTLAB^KMPDUT1 D DAILY^KMPRBD05(KMPRTDAY) Q
"RTN","KMPRBD02",20,0)
 ;
"RTN","KMPRBD02",21,0)
 N COUNT,CNT,CNT1,CNT2,DATA,FMHDATE,HDATE,HTIME,I,JOB,MESSAGE
"RTN","KMPRBD02",22,0)
 N NODE,NW,OKAY,OPTION,NP,PT,PTM,X,VAR,USERS,USRDATA,WD,WORKDAY,YSTRDAY
"RTN","KMPRBD02",23,0)
 ;
"RTN","KMPRBD02",24,0)
 K ^TMP($J)
"RTN","KMPRBD02",25,0)
 ;
"RTN","KMPRBD02",26,0)
 ; make sure DT is defined.
"RTN","KMPRBD02",27,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD02",28,0)
 ;
"RTN","KMPRBD02",29,0)
 ; yesterday - this will be the data that is compiled and stored
"RTN","KMPRBD02",30,0)
 S YSTRDAY=$$HADD^XLFDT(KMPRTDAY,-1)
"RTN","KMPRBD02",31,0)
 ;
"RTN","KMPRBD02",32,0)
 S NODE=""
"RTN","KMPRBD02",33,0)
 F  S NODE=$O(^KMPTMP("KMPR","DLY",NODE)) Q:NODE=""  D
"RTN","KMPRBD02",34,0)
 .S HDATE=""
"RTN","KMPRBD02",35,0)
 .F  S HDATE=$O(^KMPTMP("KMPR","DLY",NODE,HDATE)) Q:HDATE=""!(HDATE'<KMPRTDAY)  D 
"RTN","KMPRBD02",36,0)
 ..; if less than 'yesterday' kill - old data
"RTN","KMPRBD02",37,0)
 ..I HDATE<YSTRDAY K ^KMPTMP("KMPR","DLY",NODE,HDATE) Q
"RTN","KMPRBD02",38,0)
 ..;
"RTN","KMPRBD02",39,0)
 ..S FMHDATE=+$$HTFM^XLFDT(HDATE,1)
"RTN","KMPRBD02",40,0)
 ..;
"RTN","KMPRBD02",41,0)
 ..; WORKDAY = 0 : weekend or holiday (non-workday)
"RTN","KMPRBD02",42,0)
 ..;         = 1 : workday
"RTN","KMPRBD02",43,0)
 ..;
"RTN","KMPRBD02",44,0)
 ..S WORKDAY=$$WORKDAY^XUWORKDY(FMHDATE)
"RTN","KMPRBD02",45,0)
 ..;
"RTN","KMPRBD02",46,0)
 ..S OPTION=""
"RTN","KMPRBD02",47,0)
 ..F  S OPTION=$O(^KMPTMP("KMPR","DLY",NODE,HDATE,OPTION)) Q:OPTION=""  D 
"RTN","KMPRBD02",48,0)
 ...K NP,PT
"RTN","KMPRBD02",49,0)
 ...S JOB=0,COUNT=""
"RTN","KMPRBD02",50,0)
 ...F  S JOB=$O(^KMPTMP("KMPR","DLY",NODE,HDATE,OPTION,JOB)) Q:'JOB  D 
"RTN","KMPRBD02",51,0)
 ....S PTM=""
"RTN","KMPRBD02",52,0)
 ....F  S PTM=$O(^KMPTMP("KMPR","DLY",NODE,HDATE,OPTION,JOB,PTM)) Q:PTM=""  D 
"RTN","KMPRBD02",53,0)
 .....; PTM:  non-prime time = 0   prime time = 1
"RTN","KMPRBD02",54,0)
 .....S DATA=^KMPTMP("KMPR","DLY",NODE,HDATE,OPTION,JOB,PTM)
"RTN","KMPRBD02",55,0)
 .....;
"RTN","KMPRBD02",56,0)
 .....; prime time or non-prime time
"RTN","KMPRBD02",57,0)
 .....S VAR=$S((WORKDAY&PTM):"PT",1:"NP") Q:VAR=""
"RTN","KMPRBD02",58,0)
 .....;
"RTN","KMPRBD02",59,0)
 .....; if current data is negative
"RTN","KMPRBD02",60,0)
 .....I $P($G(@VAR@(0)),U,5)<0 D 
"RTN","KMPRBD02",61,0)
 ......S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"C"),U,5)=$P(@VAR,U,5)
"RTN","KMPRBD02",62,0)
 .....;
"RTN","KMPRBD02",63,0)
 .....; if new data is negative
"RTN","KMPRBD02",64,0)
 .....I ($P(DATA,U,5)<0) D 
"RTN","KMPRBD02",65,0)
 ......S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"N"),U,5)=$P(DATA,U,5)
"RTN","KMPRBD02",66,0)
 .....;
"RTN","KMPRBD02",67,0)
 .....; if sum of pieces are negative
"RTN","KMPRBD02",68,0)
 .....I ($P($G(@VAR@(0)),U,5)+$P(DATA,U,5))<0 D 
"RTN","KMPRBD02",69,0)
 ......S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"T"),U,5)=($P(@VAR,U,5))_"+"_($P(DATA,U,5))_"="_($P(@VAR,U,5)+$P(DATA,U,5))
"RTN","KMPRBD02",70,0)
 .....;
"RTN","KMPRBD02",71,0)
 .....; accumulate totals
"RTN","KMPRBD02",72,0)
 .....; data elements - pieces 1 - 8
"RTN","KMPRBD02",73,0)
 .....F I=1:1:8 S $P(@VAR@(1),U,I)=$P($G(@VAR@(1)),U,I)+$P(DATA,U,I)
"RTN","KMPRBD02",74,0)
 .....;
"RTN","KMPRBD02",75,0)
 .....S USERS=$G(^TMP($J,HDATE,NODE,JOB)),USRDATA=0
"RTN","KMPRBD02",76,0)
 .....;
"RTN","KMPRBD02",77,0)
 .....; hour counts - pieces 10 - 33 - offset by -9
"RTN","KMPRBD02",78,0)
 .....; hour 0 = piece 10
"RTN","KMPRBD02",79,0)
 .....; hour 1 = piece 11
"RTN","KMPRBD02",80,0)
 .....; hour 2 = piece 12 ...
"RTN","KMPRBD02",81,0)
 .....F I=10:1:33 S CNT=$P(DATA,U,I) I +CNT D
"RTN","KMPRBD02",82,0)
 ......S CNT1=$P(CNT,"~"),CNT2=$P(CNT,"~",2)
"RTN","KMPRBD02",83,0)
 ......;
"RTN","KMPRBD02",84,0)
 ......; set for every hour that this particular $job ran
"RTN","KMPRBD02",85,0)
 ......I +CNT2 S $P(USERS,U,(I-9))=$P(USERS,U,(I-9))+1,USRDATA=1
"RTN","KMPRBD02",86,0)
 ......;
"RTN","KMPRBD02",87,0)
 ......; if workday capture workday counts
"RTN","KMPRBD02",88,0)
 ......I WORKDAY D
"RTN","KMPRBD02",89,0)
 .......; number of occurrences per hour
"RTN","KMPRBD02",90,0)
 .......S $P(PT(1.1),U,(I-9))=$P($G(PT(1.1)),U,(I-9))+CNT1
"RTN","KMPRBD02",91,0)
 .......; number of users for this particular option/protocol/rpc
"RTN","KMPRBD02",92,0)
 .......S $P(PT(1.2),U,(I-9))=$P($G(PT(1.2)),U,(I-9))+1
"RTN","KMPRBD02",93,0)
 ......;
"RTN","KMPRBD02",94,0)
 ......; else capture non-workday (weekend/holiday) counts
"RTN","KMPRBD02",95,0)
 ......E  D
"RTN","KMPRBD02",96,0)
 .......; number of occurrences per hour
"RTN","KMPRBD02",97,0)
 .......S $P(NP(1.1),U,(I-9))=$P($G(NP(1.1)),U,(I-9))+CNT1
"RTN","KMPRBD02",98,0)
 .......; number of users for this particular option/protocol/rpc
"RTN","KMPRBD02",99,0)
 .......S $P(NP(1.2),U,(I-9))=$P($G(NP(1.2)),U,(I-9))+1
"RTN","KMPRBD02",100,0)
 .....;
"RTN","KMPRBD02",101,0)
 .....; will have every hour that this particular $job ran
"RTN","KMPRBD02",102,0)
 .....I USRDATA S ^TMP($J,HDATE,NODE,JOB)=USERS
"RTN","KMPRBD02",103,0)
 .....;
"RTN","KMPRBD02",104,0)
 .....; piece 1 non-prime time - piece 2 prime time
"RTN","KMPRBD02",105,0)
 .....S $P(COUNT,U,(PTM+1))=$P(COUNT,U,(PTM+1))+1
"RTN","KMPRBD02",106,0)
 .....;
"RTN","KMPRBD02",107,0)
 .....; remove data from array
"RTN","KMPRBD02",108,0)
 .....K ^KMPTMP("KMPR","DLY",NODE,HDATE,OPTION,JOB,PTM)
"RTN","KMPRBD02",109,0)
 ...;
"RTN","KMPRBD02",110,0)
 ...; back to OPTION level
"RTN","KMPRBD02",111,0)
 ...; file data into file #8971.1
"RTN","KMPRBD02",112,0)
 ...D FILE^KMPRBD03(HDATE,NODE,OPTION,.PT,.NP,$P(COUNT,U,2),$P(COUNT,U),.OKAY,.MESSAGE)
"RTN","KMPRBD02",113,0)
 ...;
"RTN","KMPRBD02",114,0)
 ...; if not filed successfully set into 'ERR' node.
"RTN","KMPRBD02",115,0)
 ...I 'OKAY D 
"RTN","KMPRBD02",116,0)
 ....S ^KMPTMP("KMPR","ERR",HDATE,NODE,OPTION,0)=NP_$P(COUNT,U)
"RTN","KMPRBD02",117,0)
 ....S ^KMPTMP("KMPR","ERR",HDATE,NODE,OPTION,1)=PT_$P(COUNT,U,2)
"RTN","KMPRBD02",118,0)
 ....F I=0:0 S I=$O(MESSAGE(I)) Q:'I  D 
"RTN","KMPRBD02",119,0)
 .....S ^KMPTMP("KMPR","ERR",HDATE,NODE,OPTION,"MSG",I)=MESSAGE(I)
"RTN","KMPRBD02",120,0)
 ;
"RTN","KMPRBD02",121,0)
 ; find the total number of jobs that ran first minute of every hour
"RTN","KMPRBD02",122,0)
 S HDATE=""
"RTN","KMPRBD02",123,0)
 F  S HDATE=$O(^TMP($J,HDATE)) Q:HDATE=""!(HDATE'<KMPRTDAY)  D
"RTN","KMPRBD02",124,0)
 .;
"RTN","KMPRBD02",125,0)
 .S FMHDATE=+$$HTFM^XLFDT(HDATE,1)
"RTN","KMPRBD02",126,0)
 .S WORKDAY=$$WORKDAY^XUWORKDY(FMHDATE)
"RTN","KMPRBD02",127,0)
 .;
"RTN","KMPRBD02",128,0)
 .;        WD: workday     NW: non-workday
"RTN","KMPRBD02",129,0)
 .S VAR=$S(WORKDAY:"WD",1:"NW")
"RTN","KMPRBD02",130,0)
 .S NODE=""
"RTN","KMPRBD02",131,0)
 .F  S NODE=$O(^TMP($J,HDATE,NODE)) Q:NODE=""  D
"RTN","KMPRBD02",132,0)
 ..K NW,WD
"RTN","KMPRBD02",133,0)
 ..S JOB=""
"RTN","KMPRBD02",134,0)
 ..F  S JOB=$O(^TMP($J,HDATE,NODE,JOB)) Q:'JOB  D
"RTN","KMPRBD02",135,0)
 ...S DATA=^TMP($J,HDATE,NODE,JOB)
"RTN","KMPRBD02",136,0)
 ...F I=1:1:24 S CNT=$P(DATA,U,I) I +CNT D
"RTN","KMPRBD02",137,0)
 ....S $P(@VAR@(1.1),U,I)=$P($G(@VAR@(1.1)),U,I)+CNT
"RTN","KMPRBD02",138,0)
 ....S $P(@VAR@(1.2),U,I)=$P($G(@VAR@(1.2)),U,I)+1
"RTN","KMPRBD02",139,0)
 ..;
"RTN","KMPRBD02",140,0)
 ..; file number of users information
"RTN","KMPRBD02",141,0)
 ..D FILE^KMPRBD03(HDATE,NODE,"#USERS#",.WD,.NW)
"RTN","KMPRBD02",142,0)
 ;
"RTN","KMPRBD02",143,0)
 K ^TMP($J)
"RTN","KMPRBD02",144,0)
 ;
"RTN","KMPRBD02",145,0)
 Q
"RTN","KMPRBD04")
0^1^B32533502
"RTN","KMPRBD04",1,0)
KMPRBD04 ;OAK/RAK - RUM Data Compression ;1/30/13  08:30
"RTN","KMPRBD04",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**2**;May 28, 2003;Build 12
"RTN","KMPRBD04",3,0)
 ;
"RTN","KMPRBD04",4,0)
 ; Background Driver (cont.)
"RTN","KMPRBD04",5,0)
 ;
"RTN","KMPRBD04",6,0)
WEEKLY(KMPRDT) ;-- compress daily stats to weekly
"RTN","KMPRBD04",7,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD04",8,0)
 ; KMPRDT... Compression date in internal fileman formt.  This date
"RTN","KMPRBD04",9,0)
 ;           must be a Sunday.  It represents the date from which the
"RTN","KMPRBD04",10,0)
 ;           previous weeks data should be compressed. 
"RTN","KMPRBD04",11,0)
 ;           Example: if KMPRDT = 2981011  then compression will begin
"RTN","KMPRBD04",12,0)
 ;                    on 2981010 (KMPRDT-1)
"RTN","KMPRBD04",13,0)
 ;
"RTN","KMPRBD04",14,0)
 ; Every Sunday compress the daily stats in file #8971.1 into weekly
"RTN","KMPRBD04",15,0)
 ; and upload the data to the CM RUM National Database
"RTN","KMPRBD04",16,0)
 ;
"RTN","KMPRBD04",17,0)
 ; ^TMP($J)............. temporary storage for RUM data
"RTN","KMPRBD04",18,0)
 ; ^TMP("KMPR PROC",$J). entries that have been processed and will be
"RTN","KMPRBD04",19,0)
 ;                        updated as 'send to national dabase'
"RTN","KMPRBD04",20,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRBD04",21,0)
 ;
"RTN","KMPRBD04",22,0)
 Q:'$G(KMPRDT)
"RTN","KMPRBD04",23,0)
 ;
"RTN","KMPRBD04",24,0)
 N DATA,DATE,DELDATE,END,HOURS,I,IEN,J,NODE,OPTION,SITE,START
"RTN","KMPRBD04",25,0)
 ;
"RTN","KMPRBD04",26,0)
 ; quit if not sunday
"RTN","KMPRBD04",27,0)
 Q:$$DOW^XLFDT(KMPRDT,1)
"RTN","KMPRBD04",28,0)
 ;
"RTN","KMPRBD04",29,0)
 K ^TMP($J),^TMP("KMPR PROC",$J)
"RTN","KMPRBD04",30,0)
 ;
"RTN","KMPRBD04",31,0)
 ; site info
"RTN","KMPRBD04",32,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPRBD04",33,0)
 ;
"RTN","KMPRBD04",34,0)
 S DATE=KMPRDT
"RTN","KMPRBD04",35,0)
 S (START,END)=""
"RTN","KMPRBD04",36,0)
 ;
"RTN","KMPRBD04",37,0)
 ; date to begin deletion
"RTN","KMPRBD04",38,0)
 S DELDATE=$$FMADD^XLFDT(KMPRDT,-14)
"RTN","KMPRBD04",39,0)
 ;
"RTN","KMPRBD04",40,0)
 W:'$D(ZTQUEUED) !,"Compressing data into weekly format..."
"RTN","KMPRBD04",41,0)
 ; reverse $order to get previous dates
"RTN","KMPRBD04",42,0)
 F  S DATE=$O(^KMPR(8971.1,"B",DATE),-1) Q:'DATE  D 
"RTN","KMPRBD04",43,0)
 .; if DATE is saturday set START and END dates and kill ^TMP($J)
"RTN","KMPRBD04",44,0)
 .I $$DOW^XLFDT(DATE,1)=6 D 
"RTN","KMPRBD04",45,0)
 ..S END=DATE,START=$$FMADD^XLFDT(DATE,-6)
"RTN","KMPRBD04",46,0)
 ..K ^TMP($J)
"RTN","KMPRBD04",47,0)
 .Q:'START
"RTN","KMPRBD04",48,0)
 .S IEN=0
"RTN","KMPRBD04",49,0)
 .F  S IEN=$O(^KMPR(8971.1,"B",DATE,IEN)) Q:'IEN  D
"RTN","KMPRBD04",50,0)
 ..;
"RTN","KMPRBD04",51,0)
 ..Q:'$D(^KMPR(8971.1,IEN,0))
"RTN","KMPRBD04",52,0)
 ..;
"RTN","KMPRBD04",53,0)
 ..; data nodes into DATA() array
"RTN","KMPRBD04",54,0)
 ..S DATA(0)=^KMPR(8971.1,IEN,0),DATA(1)=$G(^(1)),DATA(1.1)=$G(^(1.1)),DATA(1.2)=$G(^(1.2)),DATA(2)=$G(^(2)),DATA(2.1)=$G(^(2.1)),DATA(2.2)=$G(^(2.2)),DATA(3)=$G(^(3))
"RTN","KMPRBD04",55,0)
 ..;
"RTN","KMPRBD04",56,0)
 ..; quit if data has already been sent to national database
"RTN","KMPRBD04",57,0)
 ..Q:$P(DATA(0),U,2)
"RTN","KMPRBD04",58,0)
 ..;
"RTN","KMPRBD04",59,0)
 ..; cpu node
"RTN","KMPRBD04",60,0)
 ..S NODE=$P(DATA(0),U,3) Q:NODE=""
"RTN","KMPRBD04",61,0)
 ..;
"RTN","KMPRBD04",62,0)
 ..; option
"RTN","KMPRBD04",63,0)
 ..S OPTION=$P(DATA(0),U,4)
"RTN","KMPRBD04",64,0)
 ..; rpc
"RTN","KMPRBD04",65,0)
 ..S:OPTION="" OPTION=$P(DATA(0),U,7)
"RTN","KMPRBD04",66,0)
 ..; hl7
"RTN","KMPRBD04",67,0)
 ..S:OPTION="" OPTION=$P(DATA(0),U,9)
"RTN","KMPRBD04",68,0)
 ..;
"RTN","KMPRBD04",69,0)
 ..Q:OPTION=""
"RTN","KMPRBD04",70,0)
 ..;
"RTN","KMPRBD04",71,0)
 ..; OPTION = OptionName^ProtocolName
"RTN","KMPRBD04",72,0)
 ..S $P(OPTION,U,2)=$P(DATA(0),U,5)
"RTN","KMPRBD04",73,0)
 ..;
"RTN","KMPRBD04",74,0)
 ..S ^TMP($J,START,NODE,OPTION,0)=DATA(0)
"RTN","KMPRBD04",75,0)
 ..; change first piece to starting date (START)
"RTN","KMPRBD04",76,0)
 ..S $P(^TMP($J,START,NODE,OPTION,0),U)=START
"RTN","KMPRBD04",77,0)
 ..; second piece not applicable to national database
"RTN","KMPRBD04",78,0)
 ..S $P(^TMP($J,START,NODE,OPTION,0),U,2)=""
"RTN","KMPRBD04",79,0)
 ..; EndingDate^SiteName^SiteNumber
"RTN","KMPRBD04",80,0)
 ..S ^TMP($J,START,NODE,OPTION,99)=END_U_$P(SITE,U,2)_U_$P(SITE,U,3)
"RTN","KMPRBD04",81,0)
 ..;
"RTN","KMPRBD04",82,0)
 ..; add data to get weekly totals
"RTN","KMPRBD04",83,0)
 ..F I=1,1.1,1.2,2,2.1,2.2,3 I DATA(I)]"" D 
"RTN","KMPRBD04",84,0)
 ...; if subscript 1 or 2 or 3 ('I#1) add pieces 1 - 8
"RTN","KMPRBD04",85,0)
 ...; else add pieces 1 - 24
"RTN","KMPRBD04",86,0)
 ...F J=1:1:$S('(I#1):8,1:24) D 
"RTN","KMPRBD04",87,0)
 ....S $P(^TMP($J,START,NODE,OPTION,I),U,J)=$P($G(^TMP($J,START,NODE,OPTION,I)),U,J)+$P(DATA(I),U,J)
"RTN","KMPRBD04",88,0)
 ....; update "HOURS" subscript
"RTN","KMPRBD04",89,0)
 ....S:(I#1)&($P(DATA(I),U,J)) $P(^KMPTMP("KMPR","HOURS",DATE,NODE),U,J)=1
"RTN","KMPRBD04",90,0)
 ..;
"RTN","KMPRBD04",91,0)
 ..; back to IEN level
"RTN","KMPRBD04",92,0)
 ..; add to processed array
"RTN","KMPRBD04",93,0)
 ..S ^TMP("KMPR PROC",$J,IEN)=""
"RTN","KMPRBD04",94,0)
 .;
"RTN","KMPRBD04",95,0)
 .; back to DATE level
"RTN","KMPRBD04",96,0)
 .; if START then transmit data
"RTN","KMPRBD04",97,0)
 .I DATE=START I $D(^TMP($J)) D TRANSMIT K ^TMP($J)
"RTN","KMPRBD04",98,0)
 ;
"RTN","KMPRBD04",99,0)
 ; transmit data to national database
"RTN","KMPRBD04",100,0)
 W:'$D(ZTQUEUED) !,"Transmitting data to national database..."
"RTN","KMPRBD04",101,0)
 D:$D(^TMP($J)) TRANSMIT
"RTN","KMPRBD04",102,0)
 K ^TMP($J)
"RTN","KMPRBD04",103,0)
 ;
"RTN","KMPRBD04",104,0)
 ; update field .02 (SENT TO CM NATIONAL DATABASE) to 'YES' for all
"RTN","KMPRBD04",105,0)
 ; processed entries
"RTN","KMPRBD04",106,0)
 W:'$D(ZTQUEUED) !,"Updating records to reflect transmission..."
"RTN","KMPRBD04",107,0)
 S IEN=0
"RTN","KMPRBD04",108,0)
 F  S IEN=$O(^TMP("KMPR PROC",$J,IEN)) Q:'IEN  D 
"RTN","KMPRBD04",109,0)
 .K FDA,ERROR
"RTN","KMPRBD04",110,0)
 .S FDA($J,8971.1,IEN_",",.02)=1
"RTN","KMPRBD04",111,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPRBD04",112,0)
 K ^TMP("KMPR PROC",$J)
"RTN","KMPRBD04",113,0)
 ;
"RTN","KMPRBD04",114,0)
 ; leave two complete weeks of data in file #8971.1
"RTN","KMPRBD04",115,0)
 D PURGE^KMPRUTL3(DELDATE,1)
"RTN","KMPRBD04",116,0)
 ;
"RTN","KMPRBD04",117,0)
 Q
"RTN","KMPRBD04",118,0)
 ;
"RTN","KMPRBD04",119,0)
TRANSMIT ;-- format ^TMP($J) data, put into e-mail and send to cm.
"RTN","KMPRBD04",120,0)
 ;
"RTN","KMPRBD04",121,0)
 Q:'$D(^TMP($J))
"RTN","KMPRBD04",122,0)
 ;
"RTN","KMPRBD04",123,0)
 N HRSDAYS,I,IEN,LN,N,O,S,TL,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPRBD04",124,0)
 ;
"RTN","KMPRBD04",125,0)
 K ^TMP("KMPRBD04-3",$J)
"RTN","KMPRBD04",126,0)
 ;
"RTN","KMPRBD04",127,0)
 S LN=1
"RTN","KMPRBD04",128,0)
 ; version and patch info and weekly background info
"RTN","KMPRBD04",129,0)
 S Z=$G(^KMPTMP("KMPR","BACKGROUND","WEEKLY","TOTAL","START"))_"^"_$G(^("STOP"))_"^"_$G(^("DELTA"))
"RTN","KMPRBD04",130,0)
 S ^TMP("KMPRBD04-3",$J,LN)="VERSION="_$$VERSION^KMPRUTL_"^"_Z
"RTN","KMPRBD04",131,0)
 ;
"RTN","KMPRBD04",132,0)
 ; get system information
"RTN","KMPRBD04",133,0)
 S LN=LN+1
"RTN","KMPRBD04",134,0)
 S ^TMP("KMPRBD04-3",$J,LN)="SYSINFO="_$$SYSINFO^KMPDUTL1()
"RTN","KMPRBD04",135,0)
 ;
"RTN","KMPRBD04",136,0)
 ; get number of days/hours data for the specified date range
"RTN","KMPRBD04",137,0)
 D HRSDAYS^KMPRUTL3(START,END,1,.HRSDAYS)
"RTN","KMPRBD04",138,0)
 ;
"RTN","KMPRBD04",139,0)
 ; if ^KMPTMP("KMPR","HOURS","START") exists then this is the first time
"RTN","KMPRBD04",140,0)
 ; the "HOURS" subscript is being accessed.  chances are this is only
"RTN","KMPRBD04",141,0)
 ; partial data, so it should be ignored.
"RTN","KMPRBD04",142,0)
 I $G(^KMPTMP("KMPR","HOURS","START"))&($D(HRSDAYS)) D 
"RTN","KMPRBD04",143,0)
 .K HRSDAYS,^KMPTMP("KMPR","HOURS","START")
"RTN","KMPRBD04",144,0)
 ;
"RTN","KMPRBD04",145,0)
 I $D(HRSDAYS) S S=0 D 
"RTN","KMPRBD04",146,0)
 .F  S S=$O(HRSDAYS(S)) Q:'S  S N="" D 
"RTN","KMPRBD04",147,0)
 ..F  S N=$O(HRSDAYS(S,N)) Q:N=""  D 
"RTN","KMPRBD04",148,0)
 ...S LN=LN+1
"RTN","KMPRBD04",149,0)
 ...; StartDate^Node^EndDate^PTDays^PTHours^NPTDays^NPTHours
"RTN","KMPRBD04",150,0)
 ...; ... ^WDDays^WDHours^NWDays^NWHours
"RTN","KMPRBD04",151,0)
 ...S ^TMP("KMPRBD04-3",$J,LN)="HRSDAYS="_START_"^"_N_"^"_END_"^"_HRSDAYS(S,N)
"RTN","KMPRBD04",152,0)
 ;
"RTN","KMPRBD04",153,0)
 ; reformat so that data is in ^TMP("KMPR UPLOAD",$J,LN)= format.
"RTN","KMPRBD04",154,0)
 S IEN=0,S=""
"RTN","KMPRBD04",155,0)
 F  S S=$O(^TMP($J,S)) Q:S=""  S N="" D 
"RTN","KMPRBD04",156,0)
 .F  S N=$O(^TMP($J,S,N)) Q:N=""  S O="" D 
"RTN","KMPRBD04",157,0)
 ..F  S O=$O(^TMP($J,S,N,O)) Q:O=""  S I="",IEN=IEN+1 D 
"RTN","KMPRBD04",158,0)
 ...F  S I=$O(^TMP($J,S,N,O,I)) Q:I=""  D 
"RTN","KMPRBD04",159,0)
 ....S LN=LN+1
"RTN","KMPRBD04",160,0)
 ....S ^TMP("KMPRBD04-3",$J,LN)=IEN_","_I_")="_^TMP($J,S,N,O,I)
"RTN","KMPRBD04",161,0)
 ;
"RTN","KMPRBD04",162,0)
 ; quit if no data to transmit.
"RTN","KMPRBD04",163,0)
 Q:'$D(^TMP("KMPRBD04-3",$J))
"RTN","KMPRBD04",164,0)
 S TL=$$TESTLAB^KMPDUT1
"RTN","KMPRBD04",165,0)
 ; send packman message.
"RTN","KMPRBD04",166,0)
 S XMTEXT="^TMP(""KMPRBD04-3"","_$J_","
"RTN","KMPRBD04",167,0)
 S XMSUB="RUM DATA~"_$P(TL,U,2)_$P(SITE,U,2)_" ("_$P(SITE,U,3)_")~"_$$FMTE^XLFDT(START)_"~"_$P($$VERSION^KMPRUTL,U)
"RTN","KMPRBD04",168,0)
 S XMY("S.KMP2-RUM-SERVER@FO-ALBANYDOMAIN.EXT")=""
"RTN","KMPRBD04",169,0)
 S XMY("CAPACITY,MANAGEMENT@FO-ALBANYDOMAIN.EXT")=""
"RTN","KMPRBD04",170,0)
 D ^XMD
"RTN","KMPRBD04",171,0)
 W:'$D(ZTQUEUED) !,"Message #",$G(XMZ)," sent..."
"RTN","KMPRBD04",172,0)
 K ^TMP("KMPRBD04-3",$J)
"RTN","KMPRBD04",173,0)
 ;
"RTN","KMPRBD04",174,0)
 Q
"RTN","KMPRBD05")
0^8^B15044365
"RTN","KMPRBD05",1,0)
KMPRBD05 ;OAK/RAK - RUM Data Compression for Test Lab ;1/30/13  08:30
"RTN","KMPRBD05",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**2**;May 28, 2003;Build 12
"RTN","KMPRBD05",3,0)
 ;
"RTN","KMPRBD05",4,0)
 ; Background Driver (cont.)
"RTN","KMPRBD05",5,0)
 ;
"RTN","KMPRBD05",6,0)
DAILY(KMPRTDAY) ;-- daily data compression and storage
"RTN","KMPRBD05",7,0)
 ;----------------------------------------------------------------------
"RTN","KMPRBD05",8,0)
 ; KMPRTDAY.. Day in $H format (+$H).  This represents the
"RTN","KMPRBD05",9,0)
 ;            ending point for compression.  Only dates LESS than
"RTN","KMPRBD05",10,0)
 ;            KMPRTDAY will be compressed.
"RTN","KMPRBD05",11,0)
 ;
"RTN","KMPRBD05",12,0)
 ; At midnight compress hourly info into daily stats. Daily stats are
"RTN","KMPRBD05",13,0)
 ; stored in file #8971.1.  Hourly data is killed.
"RTN","KMPRBD05",14,0)
 ;----------------------------------------------------------------------
"RTN","KMPRBD05",15,0)
 ;
"RTN","KMPRBD05",16,0)
 Q:'$G(KMPRTDAY)
"RTN","KMPRBD05",17,0)
 ;
"RTN","KMPRBD05",18,0)
 N CNT,DATA,FMHDATE,HDATE,HR,I,JOB,LAB,MINUTES,NODE,OPTION,QUIET
"RTN","KMPRBD05",19,0)
 ;
"RTN","KMPRBD05",20,0)
 K ^TMP($J)
"RTN","KMPRBD05",21,0)
 ;
"RTN","KMPRBD05",22,0)
 ; make sure DT is defined.
"RTN","KMPRBD05",23,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRBD05",24,0)
 ;
"RTN","KMPRBD05",25,0)
 ; if not queued output dots
"RTN","KMPRBD05",26,0)
 S QUIET=$D(ZTQUEUED)
"RTN","KMPRBD05",27,0)
 W:'QUIET !,"Compiling stats..."
"RTN","KMPRBD05",28,0)
 ;
"RTN","KMPRBD05",29,0)
 K ^KMPTMP("KMPR-TESTLAB"),^TMP($J)
"RTN","KMPRBD05",30,0)
 S NODE=""
"RTN","KMPRBD05",31,0)
 F  S NODE=$O(^KMPTMP("KMPR","DLY",NODE)) Q:NODE=""  D 
"RTN","KMPRBD05",32,0)
 .S HDATE=""
"RTN","KMPRBD05",33,0)
 .F  S HDATE=$O(^KMPTMP("KMPR","DLY",NODE,HDATE)) Q:HDATE=""!(HDATE'<KMPRTDAY)  D 
"RTN","KMPRBD05",34,0)
 ..;
"RTN","KMPRBD05",35,0)
 ..S FMHDATE=+$$HTFM^XLFDT(HDATE,1)
"RTN","KMPRBD05",36,0)
 ..;
"RTN","KMPRBD05",37,0)
 ..S HR=""
"RTN","KMPRBD05",38,0)
 ..F  S HR=$O(^KMPTMP("KMPR","DLY",NODE,HDATE,HR)) Q:HR=""  D 
"RTN","KMPRBD05",39,0)
 ...S OPTION=""
"RTN","KMPRBD05",40,0)
 ...F  S OPTION=$O(^KMPTMP("KMPR","DLY",NODE,HDATE,HR,OPTION)) Q:OPTION=""  D 
"RTN","KMPRBD05",41,0)
 ....S JOB=0
"RTN","KMPRBD05",42,0)
 ....F  S JOB=$O(^KMPTMP("KMPR","DLY",NODE,HDATE,HR,OPTION,JOB)) Q:'JOB  D 
"RTN","KMPRBD05",43,0)
 .....;
"RTN","KMPRBD05",44,0)
 .....S DATA=^KMPTMP("KMPR","DLY",NODE,HDATE,HR,OPTION,JOB)
"RTN","KMPRBD05",45,0)
 .....S MINUTES=$P(DATA,U,10,999)
"RTN","KMPRBD05",46,0)
 .....;
"RTN","KMPRBD05",47,0)
 .....S LAB=""
"RTN","KMPRBD05",48,0)
 .....; if current data is negative
"RTN","KMPRBD05",49,0)
 .....I $P(LAB,U,5)<0 D 
"RTN","KMPRBD05",50,0)
 ......S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"C"),U,5)=$P(LAB,U,5)
"RTN","KMPRBD05",51,0)
 .....;
"RTN","KMPRBD05",52,0)
 .....; if new data is negative
"RTN","KMPRBD05",53,0)
 .....I ($P(DATA,U,5)<0) D 
"RTN","KMPRBD05",54,0)
 ......S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"N"),U,5)=$P(DATA,U,5)
"RTN","KMPRBD05",55,0)
 .....;
"RTN","KMPRBD05",56,0)
 .....; if sum of pieces are negative
"RTN","KMPRBD05",57,0)
 .....I ($P(LAB,U,5)+$P(DATA,U,5))<0 D 
"RTN","KMPRBD05",58,0)
 ......S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"T"),U,5)=($P(LAB,U,5))_"+"_($P(DATA,U,5))_"="_($P(LAB,U,5)+$P(DATA,U,5))
"RTN","KMPRBD05",59,0)
 .....;
"RTN","KMPRBD05",60,0)
 .....; accumulate totals
"RTN","KMPRBD05",61,0)
 .....; data elements - pieces 1 - 8
"RTN","KMPRBD05",62,0)
 .....F I=1:1:8 S $P(LAB,U,I)=$P($G(LAB),U,I)+$P(DATA,U,I)
"RTN","KMPRBD05",63,0)
 .....;
"RTN","KMPRBD05",64,0)
 .....; CNT(1) = minutes  0 = 29
"RTN","KMPRBD05",65,0)
 .....; CNT(2) = minutes 30 = 59
"RTN","KMPRBD05",66,0)
 .....F I=1:1:30 S $P(CNT(1),U,I)=$P(MINUTES,U,I)
"RTN","KMPRBD05",67,0)
 .....F I=31:1:60 S $P(CNT(2),U,(I-30))=$P(MINUTES,U,I)
"RTN","KMPRBD05",68,0)
 .....;
"RTN","KMPRBD05",69,0)
 .....S ^TMP($J,HDATE,NODE,OPTION,HR)=LAB
"RTN","KMPRBD05",70,0)
 .....F I=1:1:30 S $P(^TMP($J,HDATE,NODE,OPTION,HR,1),U,I)=$P($G(^TMP($J,HDATE,NODE,OPTION,HR,1)),U,I)+$P(CNT(1),U,I)
"RTN","KMPRBD05",71,0)
 .....F I=1:1:30 S $P(^TMP($J,HDATE,NODE,OPTION,HR,2),U,I)=$P($G(^TMP($J,HDATE,NODE,OPTION,HR,2)),U,I)+$P(CNT(2),U,I)
"RTN","KMPRBD05",72,0)
 .....; remove data from array
"RTN","KMPRBD05",73,0)
 .....K ^KMPTMP("KMPR","DLY",NODE,HDATE,HR,OPTION,JOB)
"RTN","KMPRBD05",74,0)
 .....W:'QUIET "."
"RTN","KMPRBD05",75,0)
 ;
"RTN","KMPRBD05",76,0)
 ;
"RTN","KMPRBD05",77,0)
 ; compile into daily stats
"RTN","KMPRBD05",78,0)
 S HDATE=0
"RTN","KMPRBD05",79,0)
 F  S HDATE=$O(^TMP($J,HDATE)) Q:'HDATE  S NODE="" D 
"RTN","KMPRBD05",80,0)
 .S FMHDATE=$$HTFM^XLFDT(HDATE) Q:'FMHDATE
"RTN","KMPRBD05",81,0)
 .F  S NODE=$O(^TMP($J,HDATE,NODE)) Q:NODE=""  S OPTION="" D 
"RTN","KMPRBD05",82,0)
 ..F  S OPTION=$O(^TMP($J,HDATE,NODE,OPTION)) Q:OPTION=""  S HR=0 D 
"RTN","KMPRBD05",83,0)
 ...F  S HR=$O(^TMP($J,HDATE,NODE,OPTION,HR)) Q:'HR  D 
"RTN","KMPRBD05",84,0)
 ....S ^KMPTMP("KMPR-TESTLAB",FMHDATE,NODE,OPTION)=FMHDATE_"^^"_NODE_"^"_$P(OPTION,"***")_"^"_$P(OPTION,"***",2)_"^"_$$RUMDESIG^KMPRBD03(OPTION)
"RTN","KMPRBD05",85,0)
 ....S ^KMPTMP("KMPR-TESTLAB",FMHDATE,NODE,OPTION,HR,1)=$G(^TMP($J,HDATE,NODE,OPTION,HR,1))
"RTN","KMPRBD05",86,0)
 ....S ^KMPTMP("KMPR-TESTLAB",FMHDATE,NODE,OPTION,HR,2)=$G(^TMP($J,HDATE,NODE,OPTION,HR,2))
"RTN","KMPRBD05",87,0)
 ....W:'QUIET "."
"RTN","KMPRBD05",88,0)
 ;
"RTN","KMPRBD05",89,0)
 K ^TMP($J)
"RTN","KMPRBD05",90,0)
 ;
"RTN","KMPRBD05",91,0)
 W:'QUIET " done!"
"RTN","KMPRBD05",92,0)
 ;
"RTN","KMPRBD05",93,0)
 Q
"RTN","KMPRPOST")
0^12^B555999
"RTN","KMPRPOST",1,0)
KMPRPOST ;OAK/RAK - RUM Post Install Routine ;1/30/13  06:46
"RTN","KMPRPOST",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**2**;May 28, 2003;Build 12
"RTN","KMPRPOST",3,0)
 ;
"RTN","KMPRPOST",4,0)
EN ;-- entry point for post-install
"RTN","KMPRPOST",5,0)
 ;
"RTN","KMPRPOST",6,0)
 D BMES^XPDUTL(" Begin Post-Install...")
"RTN","KMPRPOST",7,0)
 D OPT
"RTN","KMPRPOST",8,0)
 D MES^XPDUTL(" Post-Install complete!")
"RTN","KMPRPOST",9,0)
 ;
"RTN","KMPRPOST",10,0)
 Q
"RTN","KMPRPOST",11,0)
 ;
"RTN","KMPRPOST",12,0)
OPT ;-- delete entry action from option
"RTN","KMPRPOST",13,0)
 N ERROR,FDA,IEN
"RTN","KMPRPOST",14,0)
 S IEN=$O(^DIC(19,"B","KMPR START COLLECTION",0)) Q:'IEN
"RTN","KMPRPOST",15,0)
 Q:'$D(^DIC(19,IEN,0))
"RTN","KMPRPOST",16,0)
 ; E ACTION PRESENT field
"RTN","KMPRPOST",17,0)
 S FDA($J,19,IEN_",",14)=""
"RTN","KMPRPOST",18,0)
 ; ENTRY ACTION field
"RTN","KMPRPOST",19,0)
 S FDA($J,19,IEN_",",20)=""
"RTN","KMPRPOST",20,0)
 D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPRPOST",21,0)
 Q
"RTN","KMPRPT")
0^10^B53295132
"RTN","KMPRPT",1,0)
KMPRPT ;OAK/RAK - RUM Data by Option/Protocol/RPC ;12/2/05  10:01
"RTN","KMPRPT",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**2**;May 28, 2003;Build 12
"RTN","KMPRPT",3,0)
EN ;-- entry point.
"RTN","KMPRPT",4,0)
 ;
"RTN","KMPRPT",5,0)
 N %ZIS,KMPRDATE,KMPRNODE,KMPROPT,KMPRTTL,OUT,POP,X,Y
"RTN","KMPRPT",6,0)
 N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","KMPRPT",7,0)
 ;
"RTN","KMPRPT",8,0)
 ; title
"RTN","KMPRPT",9,0)
 S KMPRTTL=" RUM Test Lab Data "
"RTN","KMPRPT",10,0)
 D HDR^KMPDUTL4(KMPRTTL)
"RTN","KMPRPT",11,0)
 ; select date
"RTN","KMPRPT",12,0)
 S KMPRDATE=$$DATE Q:KMPRDATE=""
"RTN","KMPRPT",13,0)
 ; node
"RTN","KMPRPT",14,0)
 S KMPRNODE=$P(KMPRDATE,U,2) Q:KMPRNODE=""
"RTN","KMPRPT",15,0)
 S KMPRDATE=$P(KMPRDATE,U,3) Q:'KMPRDATE
"RTN","KMPRPT",16,0)
 ; select option
"RTN","KMPRPT",17,0)
 W !     S KMPROPT=$$OPTION(KMPRNODE,KMPRDATE)
"RTN","KMPRPT",18,0)
 I KMPROPT="" W $C(7),!?3,"No Options for this Date!" Q
"RTN","KMPRPT",19,0)
 ; select output device.
"RTN","KMPRPT",20,0)
 S %ZIS="Q",%ZIS("A")="Device: ",%ZIS("B")="HOME"
"RTN","KMPRPT",21,0)
 W ! D ^%ZIS I POP W !,"No action taken." Q
"RTN","KMPRPT",22,0)
 ; if queued.
"RTN","KMPRPT",23,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","KMPRPT",24,0)
 .S ZTDESC=KMPRTTL
"RTN","KMPRPT",25,0)
 .S ZTRTN="EN1^KMPRPT"
"RTN","KMPRPT",26,0)
 .S ZTSAVE("KMPRDATE")="",ZTSAVE("KMPRNODE")="",ZTSAVE("KMPROPT")=""
"RTN","KMPRPT",27,0)
 .S ZTSAVE("KMPRTTL")=""
"RTN","KMPRPT",28,0)
 .D ^%ZTLOAD W:$G(ZTSK) !,"Task #",ZTSK
"RTN","KMPRPT",29,0)
 .D EXIT
"RTN","KMPRPT",30,0)
 ;
"RTN","KMPRPT",31,0)
 ; if output to terminal display message.
"RTN","KMPRPT",32,0)
 W:$E(IOST,1,2)="C-" !?3,"compiling data..."
"RTN","KMPRPT",33,0)
 D EN1
"RTN","KMPRPT",34,0)
 ;
"RTN","KMPRPT",35,0)
 Q
"RTN","KMPRPT",36,0)
 ;
"RTN","KMPRPT",37,0)
EN1 ;-- entry point from taskman.
"RTN","KMPRPT",38,0)
 ;
"RTN","KMPRPT",39,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRPT",40,0)
 Q:$G(KMPRNODE)=""
"RTN","KMPRPT",41,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRPT",42,0)
 ;
"RTN","KMPRPT",43,0)
 S KMPRTTL=$G(KMPRTTL)
"RTN","KMPRPT",44,0)
 ;
"RTN","KMPRPT",45,0)
 K ^TMP($J)
"RTN","KMPRPT",46,0)
 D DATA,PRINT,EXIT
"RTN","KMPRPT",47,0)
 K ^TMP($J)
"RTN","KMPRPT",48,0)
 ;
"RTN","KMPRPT",49,0)
 Q
"RTN","KMPRPT",50,0)
 ;
"RTN","KMPRPT",51,0)
DATA ;-- set data into KMPRARRY
"RTN","KMPRPT",52,0)
 ;
"RTN","KMPRPT",53,0)
 Q:'$G(KMPRDATE)
"RTN","KMPRPT",54,0)
 Q:$G(KMPRNODE)=""
"RTN","KMPRPT",55,0)
 Q:$G(KMPROPT)=""
"RTN","KMPRPT",56,0)
 ;
"RTN","KMPRPT",57,0)
 N CNT,CONT,DATA,DATE,FMHDATE,HDATE,HR,I,JOB,LAB,MINUTES,OPT,OPTION,QUIET
"RTN","KMPRPT",58,0)
 ;
"RTN","KMPRPT",59,0)
 S QUIET=$D(ZTQUEUED)
"RTN","KMPRPT",60,0)
 ;
"RTN","KMPRPT",61,0)
 K ^TMP($J)
"RTN","KMPRPT",62,0)
 S FMHDATE=+$$HTFM^XLFDT(KMPRDATE,1)
"RTN","KMPRPT",63,0)
 ;
"RTN","KMPRPT",64,0)
 S HR=""
"RTN","KMPRPT",65,0)
 F  S HR=$O(^KMPTMP("KMPR","DLY",KMPRNODE,KMPRDATE,HR)) Q:HR=""  D 
"RTN","KMPRPT",66,0)
 .S OPTION=""
"RTN","KMPRPT",67,0)
 .F  S OPTION=$O(^KMPTMP("KMPR","DLY",KMPRNODE,KMPRDATE,HR,OPTION)) Q:OPTION=""  D 
"RTN","KMPRPT",68,0)
 ..S OPT=$$OPT(OPTION) Q:OPTION=""
"RTN","KMPRPT",69,0)
 ..Q:OPT'=KMPROPT
"RTN","KMPRPT",70,0)
 ..S JOB=0
"RTN","KMPRPT",71,0)
 ..F  S JOB=$O(^KMPTMP("KMPR","DLY",KMPRNODE,KMPRDATE,HR,OPTION,JOB)) Q:'JOB  D 
"RTN","KMPRPT",72,0)
 ...;
"RTN","KMPRPT",73,0)
 ...S DATA=^KMPTMP("KMPR","DLY",KMPRNODE,KMPRDATE,HR,OPTION,JOB)
"RTN","KMPRPT",74,0)
 ...S MINUTES=$P(DATA,U,10,999)
"RTN","KMPRPT",75,0)
 ...;
"RTN","KMPRPT",76,0)
 ...S LAB=""
"RTN","KMPRPT",77,0)
 ...; if current data is negative
"RTN","KMPRPT",78,0)
 ...I $P(LAB,U,5)<0 D 
"RTN","KMPRPT",79,0)
 ....S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"C"),U,5)=$P(LAB,U,5)
"RTN","KMPRPT",80,0)
 ...;
"RTN","KMPRPT",81,0)
 ...; if new data is negative
"RTN","KMPRPT",82,0)
 ...I ($P(DATA,U,5)<0) D 
"RTN","KMPRPT",83,0)
 ....S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"N"),U,5)=$P(DATA,U,5)
"RTN","KMPRPT",84,0)
 ...;
"RTN","KMPRPT",85,0)
 ...; if sum of pieces are negative
"RTN","KMPRPT",86,0)
 ...I ($P(LAB,U,5)+$P(DATA,U,5))<0 D 
"RTN","KMPRPT",87,0)
 ....S $P(^KMPTMP("KMPR","NEG","DLY",OPTION,"T"),U,5)=($P(LAB,U,5))_"+"_($P(DATA,U,5))_"="_($P(LAB,U,5)+$P(DATA,U,5))
"RTN","KMPRPT",88,0)
 ...;
"RTN","KMPRPT",89,0)
 ...; accumulate totals
"RTN","KMPRPT",90,0)
 ...; data elements - pieces 1 - 8
"RTN","KMPRPT",91,0)
 ...F I=1:1:8 S $P(LAB,U,I)=$P($G(LAB),U,I)+$P(DATA,U,I)
"RTN","KMPRPT",92,0)
 ...;
"RTN","KMPRPT",93,0)
 ...; CNT(1) = minutes  0 = 29
"RTN","KMPRPT",94,0)
 ...; CNT(2) = minutes 30 = 59
"RTN","KMPRPT",95,0)
 ...F I=1:1:30 S $P(CNT(1),U,I)=$P(MINUTES,U,I)
"RTN","KMPRPT",96,0)
 ...F I=31:1:60 S $P(CNT(2),U,(I-30))=$P(MINUTES,U,I)
"RTN","KMPRPT",97,0)
 ...;
"RTN","KMPRPT",98,0)
 ...S ^TMP($J,FMHDATE,KMPRNODE,OPT,HR)=LAB
"RTN","KMPRPT",99,0)
 ...F I=1:1:30 S $P(^TMP($J,FMHDATE,KMPRNODE,OPT,HR,1),U,I)=$P($G(^TMP($J,FMHDATE,KMPRNODE,OPT,HR,1)),U,I)+$P(CNT(1),U,I)
"RTN","KMPRPT",100,0)
 ...F I=1:1:30 S $P(^TMP($J,FMHDATE,KMPRNODE,OPT,HR,2),U,I)=$P($G(^TMP($J,FMHDATE,KMPRNODE,OPT,HR,2)),U,I)+$P(CNT(2),U,I)
"RTN","KMPRPT",101,0)
 ...W:'QUIET "."
"RTN","KMPRPT",102,0)
 ;
"RTN","KMPRPT",103,0)
 Q
"RTN","KMPRPT",104,0)
 ;
"RTN","KMPRPT",105,0)
PRINT ;
"RTN","KMPRPT",106,0)
 ;
"RTN","KMPRPT",107,0)
 N DATA,DATE,ELEMENTS,HR,MINUTES,NODE,OCCUR,OPTION
"RTN","KMPRPT",108,0)
 I '$D(^TMP($J)) W !?3,"No Data to Report!" W @IOF,!?($L(KMPRTTL)\2),KMPRTTL,! Q
"RTN","KMPRPT",109,0)
 ;
"RTN","KMPRPT",110,0)
 S DATE=0,CONT=1
"RTN","KMPRPT",111,0)
 F  S DATE=$O(^TMP($J,DATE)) Q:'DATE  S NODE="" D  Q:'CONT
"RTN","KMPRPT",112,0)
 .F  S NODE=$O(^TMP($J,DATE,NODE)) Q:NODE=""  S OPTION="" D  Q:'CONT
"RTN","KMPRPT",113,0)
 ..F  S OPTION=$O(^TMP($J,DATE,NODE,OPTION)) Q:OPTION=""  S HR=0 D  Q:'CONT
"RTN","KMPRPT",114,0)
 ...D HDR
"RTN","KMPRPT",115,0)
 ...F  S HR=$O(^TMP($J,DATE,NODE,OPTION,HR)) Q:'HR  D  Q:'CONT
"RTN","KMPRPT",116,0)
 ....Q:'$D(^TMP($J,DATE,NODE,OPTION,HR))#10  S DATA=^(HR)
"RTN","KMPRPT",117,0)
 ....S ELEMENTS=$P(DATA,U,1,8)
"RTN","KMPRPT",118,0)
 ....S OCCUR=$P(DATA,U,8)
"RTN","KMPRPT",119,0)
 ....S MINUTES=$P(DATA,U,10,99)
"RTN","KMPRPT",120,0)
 ....W !,$J(HR,3)
"RTN","KMPRPT",121,0)
 ....W ?6,$J($FN($S($P(ELEMENTS,U):$P(ELEMENTS,U)/OCCUR,1:$P(ELEMENTS,U)),",",1),5)
"RTN","KMPRPT",122,0)
 ....W ?14,$J($FN($S($P(ELEMENTS,U,2):$P(ELEMENTS,U,2)/OCCUR,1:$P(ELEMENTS,U,2)),",",1),5)
"RTN","KMPRPT",123,0)
 ....W ?22,$J($FN($S($P(ELEMENTS,U,3):$P(ELEMENTS,U,3)/OCCUR,1:$P(ELEMENTS,U,3)),",",1),5)
"RTN","KMPRPT",124,0)
 ....W ?30,$J($FN($S($P(ELEMENTS,U,4):$P(ELEMENTS,U,4)/OCCUR,1:$P(ELEMENTS,U,4)),",",1),5)
"RTN","KMPRPT",125,0)
 ....W ?41,$J($FN($S($P(ELEMENTS,U,5):$P(ELEMENTS,U,5)/OCCUR,1:$P(ELEMENTS,U,5)),",",1),10)
"RTN","KMPRPT",126,0)
 ....W ?53,$J($FN($S($P(ELEMENTS,U,6):$P(ELEMENTS,U,6)/OCCUR,1:$P(ELEMENTS,U,6)),",",1),10)
"RTN","KMPRPT",127,0)
 ....; elapsed time in hr:mn:sc format
"RTN","KMPRPT",128,0)
 ....S X=$S($P(ELEMENTS,U,7):$P(ELEMENTS,U,7)/OCCUR,1:$P(ELEMENTS,U,7))
"RTN","KMPRPT",129,0)
 ....W ?65,$J($FN($$TIME(X),",",1),8)
"RTN","KMPRPT",130,0)
 ....W ?75,$J(OCCUR,3)
"RTN","KMPRPT",131,0)
 ...D CONTINUE^KMPDUTL4("Press RETURN to continue",3,.CONT)
"RTN","KMPRPT",132,0)
 Q
"RTN","KMPRPT",133,0)
 ;
"RTN","KMPRPT",134,0)
EXIT ;--cleanup
"RTN","KMPRPT",135,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","KMPRPT",136,0)
 K KMPRDATE,KMPRNODE,KMPROPT,KMPRTTL
"RTN","KMPRPT",137,0)
 ;
"RTN","KMPRPT",138,0)
 Q
"RTN","KMPRPT",139,0)
 ;
"RTN","KMPRPT",140,0)
DATE() ;--extrinsic function - select list of dates
"RTN","KMPRPT",141,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPRPT",142,0)
 ; Return: FileManExternalDate^NodeName^$HDate
"RTN","KMPRPT",143,0)
 ;         "" - no entry selected
"RTN","KMPRPT",144,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPRPT",145,0)
 N CNT,DIC,DOT,FMDT,HDT,NODE,X,Y
"RTN","KMPRPT",146,0)
 K ^TMP("KMPRPT-LIST",$J)
"RTN","KMPRPT",147,0)
 S NODE="",(CNT,DOT)=0
"RTN","KMPRPT",148,0)
 F  S NODE=$O(^KMPTMP("KMPR","DLY",NODE)) Q:NODE=""  S HDT=0 D 
"RTN","KMPRPT",149,0)
 .F  S HDT=$O(^KMPTMP("KMPR","DLY",NODE,HDT)) Q:'HDT  D 
"RTN","KMPRPT",150,0)
 ..S FMDT=$$FMTE^XLFDT($$HTFM^XLFDT(HDT))
"RTN","KMPRPT",151,0)
 ..S CNT=CNT+1,DOT=DOT+1 W:'(DOT#100) "."
"RTN","KMPRPT",152,0)
 ..S ^TMP("KMPRPT-LIST",$J,CNT,0)=FMDT_"^"_NODE_"^"_HDT
"RTN","KMPRPT",153,0)
 ..S ^TMP("KMPRPT-LIST",$J,"B",FMDT,CNT)=""
"RTN","KMPRPT",154,0)
 S ^TMP("KMPRPT-LIST",$J,0)="RUM Date^1.01^"_CNT_"^"_CNT
"RTN","KMPRPT",155,0)
 S DIC="^TMP(""KMPRPT-LIST"",$J,"
"RTN","KMPRPT",156,0)
 S DIC(0)="E",X="?" D ^DIC
"RTN","KMPRPT",157,0)
 S DIC(0)="AEQZ"
"RTN","KMPRPT",158,0)
 S DIC("A")="Select RUM Date: "
"RTN","KMPRPT",159,0)
 S DIC("W")="W "" - ""_$P(^(0),U,2)"
"RTN","KMPRPT",160,0)
 D ^DIC
"RTN","KMPRPT",161,0)
 K ^TMP("KMPRPT-LIST",$J)
"RTN","KMPRPT",162,0)
 Q $S(Y<1:"",1:$G(Y(0)))
"RTN","KMPRPT",163,0)
 Q
"RTN","KMPRPT",164,0)
 Q ""
"RTN","KMPRPT",165,0)
 ;
"RTN","KMPRPT",166,0)
HDR ;--header info
"RTN","KMPRPT",167,0)
 W @IOF
"RTN","KMPRPT",168,0)
 W ?((80-$L(KMPRTTL))\2),KMPRTTL
"RTN","KMPRPT",169,0)
 S X=$$FMTE^XLFDT(DATE)
"RTN","KMPRPT",170,0)
 W !?((80-$L(X))\2),X
"RTN","KMPRPT",171,0)
 S X="Option: "_OPTION_"   Node: "_NODE
"RTN","KMPRPT",172,0)
 W !?((80-$L(X)\2)),X
"RTN","KMPRPT",173,0)
 ;S X="Option: "_OPTION
"RTN","KMPRPT",174,0)
 ;W !?((80-$L(X))\2),X
"RTN","KMPRPT",175,0)
 W !
"RTN","KMPRPT",176,0)
 W !?3,"|---------------------------Per Occurrence------------------------|"
"RTN","KMPRPT",177,0)
 W !,"Hour",?6," CPU",?14," DIO",?22,"  BIO",?30," Page",?41,"M Commands",?53,"  Global",?65,"Elapsed",?75,"Occ"
"RTN","KMPRPT",178,0)
 W !?6,"Time",?30,"Faults",?53,"References",?65,"  Time"
"RTN","KMPRPT",179,0)
 W !,$$REPEAT^XLFSTR("-",IOM)
"RTN","KMPRPT",180,0)
 ;
"RTN","KMPRPT",181,0)
 ;
"RTN","KMPRPT",182,0)
OPTION(KMPRNODE,KMPRDATE) ;--extrinsic function - select list of options to display
"RTN","KMPRPT",183,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPRPT",184,0)
 ; KMPRNODE... node
"RTN","KMPRPT",185,0)
 ; KMPRDATE... date in $h format
"RTN","KMPRPT",186,0)
 ;
"RTN","KMPRPT",187,0)
 ; Return: FileManExternalDate^NodeName^$HDate
"RTN","KMPRPT",188,0)
 ;         "" - no entry selected
"RTN","KMPRPT",189,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPRPT",190,0)
 Q:'$G(KMPRDATE) ""
"RTN","KMPRPT",191,0)
 Q:$G(KMPRNODE)="" ""
"RTN","KMPRPT",192,0)
 N CNT,DIC,DOT,FMDT,HDT,NODE,X,Y
"RTN","KMPRPT",193,0)
 K ^TMP("KMPRPT-LIST",$J)
"RTN","KMPRPT",194,0)
 S HR="",(CNT,DOT)=0
"RTN","KMPRPT",195,0)
 F  S HR=$O(^KMPTMP("KMPR","DLY",KMPRNODE,KMPRDATE,HR)) Q:HR=""  S OPTION="" D 
"RTN","KMPRPT",196,0)
 .F  S OPTION=$O(^KMPTMP("KMPR","DLY",KMPRNODE,KMPRDATE,HR,OPTION)) Q:OPTION=""  D 
"RTN","KMPRPT",197,0)
 ..S OPT=$$OPT(OPTION) Q:OPT=""
"RTN","KMPRPT",198,0)
 ..Q:$O(^TMP("KMPRPT-LIST",$J,"B",OPT,0))
"RTN","KMPRPT",199,0)
 ..S CNT=CNT+1,DOT=DOT+1 W:'(DOT#100) "."
"RTN","KMPRPT",200,0)
 ..S ^TMP("KMPRPT-LIST",$J,CNT,0)=OPT
"RTN","KMPRPT",201,0)
 ..S ^TMP("KMPRPT-LIST",$J,"B",OPT,CNT)=""
"RTN","KMPRPT",202,0)
 ;
"RTN","KMPRPT",203,0)
 Q:'CNT ""
"RTN","KMPRPT",204,0)
 S ^TMP("KMPRPT-LIST",$J,0)="RUM Option^1.01^"_CNT_"^"_CNT
"RTN","KMPRPT",205,0)
 S DIC="^TMP(""KMPRPT-LIST"",$J,"
"RTN","KMPRPT",206,0)
 S DIC(0)="E",X="??" D ^DIC
"RTN","KMPRPT",207,0)
 S DIC(0)="AEQZ"
"RTN","KMPRPT",208,0)
 S DIC("A")="Select RUM Option: "
"RTN","KMPRPT",209,0)
 D ^DIC
"RTN","KMPRPT",210,0)
 K ^TMP("KMPRPT-LIST",$J)
"RTN","KMPRPT",211,0)
 Q $S(Y<1:"",1:$G(Y(0)))
"RTN","KMPRPT",212,0)
 ;
"RTN","KMPRPT",213,0)
OPT(KMPROPT) ;--extrinsic function - option name
"RTN","KMPRPT",214,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPRPT",215,0)
 ; KMPROPT... option name as stored in ^KMPTMP("KMPR","DLY"
"RTN","KMPRPT",216,0)
 ;
"RTN","KMPRPT",217,0)
 ; Return: OptionName
"RTN","KMPRPT",218,0)
 ;         "" - if not option
"RTN","KMPRPT",219,0)
 ;-----------------------------------------------------------------------------
"RTN","KMPRPT",220,0)
 Q:$G(KMPROPT)="" ""
"RTN","KMPRPT",221,0)
 ; quit if protocol
"RTN","KMPRPT",222,0)
 Q:$E(KMPROPT)="!" ""
"RTN","KMPRPT",223,0)
 ; quit if job queued
"RTN","KMPRPT",224,0)
 Q:$E(KMPROPT)="$" ""
"RTN","KMPRPT",225,0)
 Q $P(KMPROPT,"***")
"RTN","KMPRPT",226,0)
 ;
"RTN","KMPRPT",227,0)
TIME(X) ;-- extrinsic function - display time as hr:mn:sc
"RTN","KMPRPT",228,0)
 Q:'$G(X) 0
"RTN","KMPRPT",229,0)
 N %
"RTN","KMPRPT",230,0)
 S %=X,X="" S:%'<86400 X=(%\86400) S:%#86400 X=X_" "_(%#86400\3600)_":"_$E(%#3600\60+100,2,3)_":"_$E(%#60+100,2,3)
"RTN","KMPRPT",231,0)
 Q X
"RTN","KMPRSS")
0^4^B5496431
"RTN","KMPRSS",1,0)
KMPRSS ;OAK/RAK - Resource Usage Monitor Status ;1/30/13  08:31
"RTN","KMPRSS",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1,2**;May 28, 2003;Build 12
"RTN","KMPRSS",3,0)
 ;
"RTN","KMPRSS",4,0)
STAT ;--display rum environment
"RTN","KMPRSS",5,0)
 ;
"RTN","KMPRSS",6,0)
 D DISPLAY^KMPDSS1("R^RUM")
"RTN","KMPRSS",7,0)
 ;
"RTN","KMPRSS",8,0)
 Q
"RTN","KMPRSS",9,0)
 ;
"RTN","KMPRSS",10,0)
START ; Start Resource Usage Monitor collection
"RTN","KMPRSS",11,0)
 N CHECK,DA,DIE,DIR,DR,X,Y
"RTN","KMPRSS",12,0)
 ; check environment
"RTN","KMPRSS",13,0)
 D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSS",14,0)
 ; if RUM does not support this operating system then quit.
"RTN","KMPRSS",15,0)
 I (+CHECK)=100 W !! D ENVOUTPT^KMPRUTL1(CHECK,1,1) H 1 Q
"RTN","KMPRSS",16,0)
 I +$G(^%ZTSCH("LOGRSRC")) W !!,?10,"The Resource Usage Monitor is already running.",! H 1 Q
"RTN","KMPRSS",17,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","KMPRSS",18,0)
 S DIR("?")="Answer YES to start collecting Resource Usage Monitor data"
"RTN","KMPRSS",19,0)
 S DIR("A")="Do you want to start Resource Usage Monitor collection"
"RTN","KMPRSS",20,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","KMPRSS",21,0)
 I Y D
"RTN","KMPRSS",22,0)
 .S DIE=8989.3,DA=1,DR="300///YES" D ^DIE
"RTN","KMPRSS",23,0)
 .W !!,?10,"Resource Usage Monitor collection is started.",!
"RTN","KMPRSS",24,0)
 .D ENVCHECK^KMPRUTL1(.CHECK,1)
"RTN","KMPRSS",25,0)
 .; if background driver not scheduled to run then start it up
"RTN","KMPRSS",26,0)
 .D:(+CHECK=200) QUEBKG^KMPRUTL1
"RTN","KMPRSS",27,0)
 E  W !!,?10,"Resource Usage Monitor collection is NOT started.",!
"RTN","KMPRSS",28,0)
 H 1
"RTN","KMPRSS",29,0)
 Q
"RTN","KMPRSS",30,0)
 ;
"RTN","KMPRSS",31,0)
STOP ; Stop Resource Usage Monitor collection
"RTN","KMPRSS",32,0)
 N DA,DIE,DIR,DR,DTOUT,DUOUT,X,Y
"RTN","KMPRSS",33,0)
 I '+$G(^%ZTSCH("LOGRSRC")) W !!,?10,"The Resource Usage Monitor is already stopped.",! H 1 Q
"RTN","KMPRSS",34,0)
 W ! K DIR S DIR(0)="Y",DIR("B")="YES"
"RTN","KMPRSS",35,0)
 S DIR("?")="Answer YES to stop collecting Resource Usage Monitor data"
"RTN","KMPRSS",36,0)
 S DIR("A")="Do you want to stop Resource Usage Monitor collection"
"RTN","KMPRSS",37,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","KMPRSS",38,0)
 I Y D
"RTN","KMPRSS",39,0)
 .S DIE=8989.3,DA=1,DR="300///NO" D ^DIE
"RTN","KMPRSS",40,0)
 .W !!,?10,"Resource Usage Monitor collection is stopped.",!
"RTN","KMPRSS",41,0)
 E  W !!,?10,"Resource Usage Monitor collection is NOT stopped.",!
"RTN","KMPRSS",42,0)
 H 1
"RTN","KMPRSS",43,0)
 Q
"RTN","KMPRSSA")
1^5^B0
"RTN","KMPRSSB")
1^6^B0
"RTN","KMPRUTL")
0^2^B12744359
"RTN","KMPRUTL",1,0)
KMPRUTL ;OAK/KAK/RAK - Resource Usage Monitor Utilities ;1/30/13  08:31
"RTN","KMPRUTL",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1,2**;May 28, 2003;Build 12
"RTN","KMPRUTL",3,0)
 ;
"RTN","KMPRUTL",4,0)
GRPHMSG ;-- graph message.
"RTN","KMPRUTL",5,0)
 N TXT
"RTN","KMPRUTL",6,0)
 S TXT(1)="This option displays data in a graphical format.  Please make"
"RTN","KMPRUTL",7,0)
 S TXT(2)="note that this output is intended for comparison/trends only,"
"RTN","KMPRUTL",8,0)
 S TXT(3)="and should not be used for detailed analysis."
"RTN","KMPRUTL",9,0)
 S TXT(1,"F")="!?9",TXT(2,"F")="!?9",TXT(3,"F")="!?9"
"RTN","KMPRUTL",10,0)
 D EN^DDIOL(.TXT)
"RTN","KMPRUTL",11,0)
 Q
"RTN","KMPRUTL",12,0)
 ;
"RTN","KMPRUTL",13,0)
ID(KMPRIEN) ;-- display - called from ^DD(8971.1,0,"ID","W")
"RTN","KMPRUTL",14,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",15,0)
 ; KMPRIEN... Ien for file #8971.1 (RESOURCE USAGE MONITOR).
"RTN","KMPRUTL",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",17,0)
 Q:'$G(KMPRIEN)
"RTN","KMPRUTL",18,0)
 Q:'$D(^KMPR(8971.1,+KMPRIEN,0))
"RTN","KMPRUTL",19,0)
 N DATA,TXT
"RTN","KMPRUTL",20,0)
 S DATA=$G(^KMPR(8971.1,+KMPRIEN,0))
"RTN","KMPRUTL",21,0)
 ; sent to cm national database.
"RTN","KMPRUTL",22,0)
 S TXT(1)=$S($P(DATA,U,2):"sent",1:"not sent")
"RTN","KMPRUTL",23,0)
 S TXT(1)=TXT(1)_$J(" ",10-$L(TXT(1)))
"RTN","KMPRUTL",24,0)
 ; node.
"RTN","KMPRUTL",25,0)
 S TXT(1)=TXT(1)_$P(DATA,U,3)
"RTN","KMPRUTL",26,0)
 S TXT(1)=TXT(1)_$J(" ",22-$L(TXT(1)))
"RTN","KMPRUTL",27,0)
 ; option.
"RTN","KMPRUTL",28,0)
 I $P(DATA,U,4)]"" S TXT(1)=TXT(1)_"option: "_$P(DATA,U,4)
"RTN","KMPRUTL",29,0)
 ; rpc.
"RTN","KMPRUTL",30,0)
 E  I $P(DATA,U,7)]"" S TXT(1)=TXT(1)_"   rpc: "_$P(DATA,U,7)
"RTN","KMPRUTL",31,0)
 S TXT(1,"F")="?16"
"RTN","KMPRUTL",32,0)
 ; if protocol
"RTN","KMPRUTL",33,0)
 I $P(DATA,U,5)'="" D 
"RTN","KMPRUTL",34,0)
 .S TXT(2)="protocol: "_$E($P(DATA,U,5),1,40) ;_" (protocol)"
"RTN","KMPRUTL",35,0)
 .S TXT(2,"F")="!?"_$S($G(DDSDIW):40,1:42)
"RTN","KMPRUTL",36,0)
 ; display TXT() array.
"RTN","KMPRUTL",37,0)
 D EN^DDIOL(.TXT)
"RTN","KMPRUTL",38,0)
 Q
"RTN","KMPRUTL",39,0)
 ;
"RTN","KMPRUTL",40,0)
NODEARRY(KMPRARRY) ;-- put nodes into array.
"RTN","KMPRUTL",41,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",42,0)
 ; KMPRARRY.. Array to contain nodes in format:
"RTN","KMPRUTL",43,0)
 ;            KMPRARRY(NODENAME)=""
"RTN","KMPRUTL",44,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",45,0)
 ;
"RTN","KMPRUTL",46,0)
 K @KMPRARRY
"RTN","KMPRUTL",47,0)
 ;
"RTN","KMPRUTL",48,0)
 N NODE S NODE=""
"RTN","KMPRUTL",49,0)
 F  S NODE=$O(^KMPR(8971.1,"ANODE",NODE)) Q:NODE=""  S @KMPRARRY@(NODE)=""
"RTN","KMPRUTL",50,0)
 Q
"RTN","KMPRUTL",51,0)
 ;
"RTN","KMPRUTL",52,0)
RUMDATES(KMPRDATE) ;-- get RUM date ranges from file 8971.1
"RTN","KMPRUTL",53,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",54,0)
 ; KMPRDATE... Return value (access by reference) in format:
"RTN","KMPRUTL",55,0)
 ;             StartDate^EndDate^ExtStartDate^ExtEndDate
"RTN","KMPRUTL",56,0)
 ;             2981101^2981104^Nov 1, 1998^Nov 4, 1998
"RTN","KMPRUTL",57,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL",58,0)
 ;
"RTN","KMPRUTL",59,0)
 S KMPRDATE=""
"RTN","KMPRUTL",60,0)
 N END,START
"RTN","KMPRUTL",61,0)
 ; determine start date from file 8971.1
"RTN","KMPRUTL",62,0)
 S START=$O(^KMPR(8971.1,"B",0))
"RTN","KMPRUTL",63,0)
 ; determine end date from file 8971.1
"RTN","KMPRUTL",64,0)
 S END=$O(^KMPR(8971.1,"B","A"),-1)
"RTN","KMPRUTL",65,0)
 D DATERNG^KMPRUTL1(.KMPRDATE,START,END)
"RTN","KMPRUTL",66,0)
 ;
"RTN","KMPRUTL",67,0)
 Q
"RTN","KMPRUTL",68,0)
 ;
"RTN","KMPRUTL",69,0)
VERSION() ;-- extrinsic - return current version
"RTN","KMPRUTL",70,0)
 ;
"RTN","KMPRUTL",71,0)
 Q $P($T(+2^KMPRUTL),";",3)_"^"_$P($T(+2^KMPRUTL),";",5)
"RTN","KMPRUTL",72,0)
 ;
"RTN","KMPRUTL",73,0)
ELEARRY(KMPRARRY) ;-- set elements data into KMPRARRY.
"RTN","KMPRUTL",74,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",75,0)
 ; KMPRARRY... Array to contain elements data.
"RTN","KMPRUTL",76,0)
 ;             Format: ElementName^DataPiece
"RTN","KMPRUTL",77,0)
 ;                     KMPRARRY(1)=CPU Time^1
"RTN","KMPRUTL",78,0)
 ;                     KMPRARRY(2)=Elapsed Time^7
"RTN","KMPRUTL",79,0)
 ;                     KMPRARRY(...)=...
"RTN","KMPRUTL",80,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL",81,0)
 ;
"RTN","KMPRUTL",82,0)
 Q:$G(KMPRARRY)=""
"RTN","KMPRUTL",83,0)
 ;
"RTN","KMPRUTL",84,0)
 N DATA,I
"RTN","KMPRUTL",85,0)
 F I=1:1 Q:$P($T(ELEMENTS+I),";",3)=""  D 
"RTN","KMPRUTL",86,0)
 .S DATA=$T(ELEMENTS+I)
"RTN","KMPRUTL",87,0)
 .S @KMPRARRY@(I)=$P(DATA,";",3)_"^"_$P(DATA,";",4)
"RTN","KMPRUTL",88,0)
 Q
"RTN","KMPRUTL",89,0)
 ;
"RTN","KMPRUTL",90,0)
ELEMENT(KMPUVAR) ;-- select RUM data element.
"RTN","KMPRUTL",91,0)
 ; Output Variable:
"RTN","KMPRUTL",92,0)
 ;   KMPUVAR    = Number of Data Piece
"RTN","KMPRUTL",93,0)
 ;              = '^' if DTOUT or DUOUT
"RTN","KMPRUTL",94,0)
 ;   KMPUVAR(0) = Set of Code's Verbiage
"RTN","KMPRUTL",95,0)
 ;
"RTN","KMPRUTL",96,0)
 N DIR,DTOUT,DUOUT,I,X,Y
"RTN","KMPRUTL",97,0)
 S KMPUVAR=""
"RTN","KMPRUTL",98,0)
 S DIR(0)="SXO^"
"RTN","KMPRUTL",99,0)
 F I=1:1 Q:$P($T(ELEMENTS+I),";",3)=""  D 
"RTN","KMPRUTL",100,0)
 .S DIR(0)=DIR(0)_I_":"_$P($T(ELEMENTS+I),";",3)_";"
"RTN","KMPRUTL",101,0)
 S DIR("A")="Enter Key Data Element for Searching RUM Data"
"RTN","KMPRUTL",102,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT)!(Y="") S KMPUVAR="^",KMPUVAR(0)="" Q
"RTN","KMPRUTL",103,0)
 S KMPUVAR=$TR(Y,"12345678^","17562348^"),KMPUVAR(0)=Y(0)
"RTN","KMPRUTL",104,0)
 Q
"RTN","KMPRUTL",105,0)
 ;
"RTN","KMPRUTL",106,0)
ELEMENTS ;-- ;;Element Name;data piece in file 8971.1
"RTN","KMPRUTL",107,0)
 ;;CPU Time;1
"RTN","KMPRUTL",108,0)
 ;;Elapsed Time;7
"RTN","KMPRUTL",109,0)
 ;;M Commands;5
"RTN","KMPRUTL",110,0)
 ;;GLO References;6
"RTN","KMPRUTL",111,0)
 ;;DIO References;2
"RTN","KMPRUTL",112,0)
 ;;BIO References;3
"RTN","KMPRUTL",113,0)
 ;;Page Faults;4
"RTN","KMPRUTL",114,0)
 ;;Occurrences;8
"RTN","KMPRUTL",115,0)
 ;;
"RTN","KMPRUTL",116,0)
PTCHINFO ; -- patch information: routine name ^ current version ^ current patch(es)
"RTN","KMPRUTL",117,0)
 ;;KMPRBD01^2.0^**1**
"RTN","KMPRUTL",118,0)
 ;;KMPRBD02^2.0^**2**
"RTN","KMPRUTL",119,0)
 ;;KMPRBD03^2.0^
"RTN","KMPRUTL",120,0)
 ;;KMPRBD04^2.0^**2**
"RTN","KMPRUTL",121,0)
 ;;KMPRBD05^2.0^**2**
"RTN","KMPRUTL",122,0)
 ;;KMPRP1^2.0^**1**
"RTN","KMPRUTL",123,0)
 ;;KMPRP2^2.0^**1**
"RTN","KMPRUTL",124,0)
 ;;KMPRPG01^2.0^**1**
"RTN","KMPRUTL",125,0)
 ;;KMPRPG02^2.0^**1**
"RTN","KMPRUTL",126,0)
 ;;KMPRPN03^2.0^**1**
"RTN","KMPRUTL",127,0)
 ;;KMPRPOST^2.0^**1**
"RTN","KMPRUTL",128,0)
 ;;KMPRSS^2.0^**1,2**
"RTN","KMPRUTL",129,0)
 ;;KMPRSSA^2.0^**1**
"RTN","KMPRUTL",130,0)
 ;;KMPRSSB^2.0^**1**
"RTN","KMPRUTL",131,0)
 ;;KMPRUTL^2.0^**1,2**
"RTN","KMPRUTL",132,0)
 ;;KMPRUTL1^2.0^**1,2**
"RTN","KMPRUTL",133,0)
 ;;KMPRUTL2^2.0^
"RTN","KMPRUTL",134,0)
 ;;KMPRUTL3^2.0^
"RTN","KMPRUTL",135,0)
 ;;%ZOSVKR^8.0^**90,94,107,122,143,186**
"RTN","KMPRUTL",136,0)
 ;;
"RTN","KMPRUTL1")
0^3^B23586195
"RTN","KMPRUTL1",1,0)
KMPRUTL1 ;OAK/KAK/RAK - Resource Usage Monitor Utility ;1/30/13  08:32
"RTN","KMPRUTL1",2,0)
 ;;2.0;CAPACITY MANAGEMENT - RUM;**1,2**;May 28, 2003;Build 12
"RTN","KMPRUTL1",3,0)
 ;
"RTN","KMPRUTL1",4,0)
DATERNG(KMPUY,KMPUSTR,KMPUEND) ;-- date range
"RTN","KMPRUTL1",5,0)
 ;---------------------------------------------------------------------
"RTN","KMPRUTL1",6,0)
 ; KMPUY..... Value returned in four pieces:
"RTN","KMPRUTL1",7,0)
 ;            fmstartdate^fmenddate^ouputstartdate^outputenddate
"RTN","KMPRUTL1",8,0)
 ;
"RTN","KMPRUTL1",9,0)
 ;            Piece one and two are the date ranges in fileman format.
"RTN","KMPRUTL1",10,0)
 ;            Piece three and four are the same dates in output format:
"RTN","KMPRUTL1",11,0)
 ;                             dy-Mon-yr
"RTN","KMPRUTL1",12,0)
 ;
"RTN","KMPRUTL1",13,0)
 ;                               ********
"RTN","KMPRUTL1",14,0)
 ;                               * NOTE *
"RTN","KMPRUTL1",15,0)
 ;                               ********
"RTN","KMPRUTL1",16,0)
 ;          - The first piece will always be the earliest date entered.
"RTN","KMPRUTL1",17,0)
 ;
"RTN","KMPRUTL1",18,0)
 ;  Optional Parameters:
"RTN","KMPRUTL1",19,0)
 ;
"RTN","KMPRUTL1",20,0)
 ; KMPUSTR... If defined, the earliest date that may be selected.
"RTN","KMPRUTL1",21,0)
 ;            (must be in fileman format)
"RTN","KMPRUTL1",22,0)
 ;
"RTN","KMPRUTL1",23,0)
 ; KMPUEND... If defined, the latest date that may be selected.
"RTN","KMPRUTL1",24,0)
 ;            (must be in fileman format)
"RTN","KMPRUTL1",25,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",26,0)
 ;
"RTN","KMPRUTL1",27,0)
 N DATE1,DATE2,DIR,DIRUT,LINE,X,Y
"RTN","KMPRUTL1",28,0)
 ;
"RTN","KMPRUTL1",29,0)
 S KMPUY="",KMPUSTR=$G(KMPUSTR),KMPUEND=$G(KMPUEND)
"RTN","KMPRUTL1",30,0)
 ;
"RTN","KMPRUTL1",31,0)
RANGE ;-- Ask date ranges
"RTN","KMPRUTL1",32,0)
 S DIR(0)="DOA^"_$S(KMPUSTR:KMPUSTR,1:"")_":"_$S(KMPUEND:KMPUEND,1:"")_":E"
"RTN","KMPRUTL1",33,0)
 S DIR("A")="Start with Date: "
"RTN","KMPRUTL1",34,0)
 S:KMPUSTR DIR("B")=$$FMTE^XLFDT(KMPUSTR,2)
"RTN","KMPRUTL1",35,0)
 S DIR("?")=" "
"RTN","KMPRUTL1",36,0)
 S DIR("?",1)="Enter the starting date.",LINE=2
"RTN","KMPRUTL1",37,0)
 ; if starting date.
"RTN","KMPRUTL1",38,0)
 I KMPUSTR D 
"RTN","KMPRUTL1",39,0)
 .S DIR("?",LINE)="Date must not precede "_$$FMTE^XLFDT(KMPUSTR)
"RTN","KMPRUTL1",40,0)
 .S LINE=LINE+1
"RTN","KMPRUTL1",41,0)
 ; if ending date.
"RTN","KMPRUTL1",42,0)
 I KMPUEND S DIR("?",LINE)="Date must not follow "_$$FMTE^XLFDT(KMPUEND)
"RTN","KMPRUTL1",43,0)
 W ! D ^DIR I $D(DIRUT) S KMPUY="" Q
"RTN","KMPRUTL1",44,0)
 S DATE1=Y
"RTN","KMPRUTL1",45,0)
 S DIR("A")="  End with Date: "
"RTN","KMPRUTL1",46,0)
 S:KMPUEND DIR("B")=$$FMTE^XLFDT(KMPUEND,2)
"RTN","KMPRUTL1",47,0)
 S DIR("?",1)="Enter the ending date."
"RTN","KMPRUTL1",48,0)
 D ^DIR G:Y="" RANGE I Y="^" S KMPUY="" Q
"RTN","KMPRUTL1",49,0)
 S DATE2=Y
"RTN","KMPRUTL1",50,0)
 ; Set earliest date into first piece.
"RTN","KMPRUTL1",51,0)
 S KMPUY=$S(DATE2<DATE1:DATE2,1:DATE1)_U_$S(DATE2>DATE1:DATE2,1:DATE1)
"RTN","KMPRUTL1",52,0)
 S $P(KMPUY,U,3)=$$FMTE^XLFDT($P(KMPUY,U))
"RTN","KMPRUTL1",53,0)
 S $P(KMPUY,U,4)=$$FMTE^XLFDT($P(KMPUY,U,2))
"RTN","KMPRUTL1",54,0)
 ;
"RTN","KMPRUTL1",55,0)
 Q
"RTN","KMPRUTL1",56,0)
 ;
"RTN","KMPRUTL1",57,0)
ENVCHECK(KMPRENV,KMPRQIET) ;-- environment check.
"RTN","KMPRUTL1",58,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",59,0)
 ; KMPRENV... Result of environment check in format:
"RTN","KMPRUTL1",60,0)
 ;            KMPRENV=Number^Text
"RTN","KMPRUTL1",61,0)
 ;            1-99: system status (not an error condition).
"RTN","KMPRUTL1",62,0)
 ;                 0 - RUM turned on and background job queued
"RTN","KMPRUTL1",63,0)
 ;                 1 - RUM is not turned on
"RTN","KMPRUTL1",64,0)
 ;                 2 - 'KMPR BACKGROUND' job has been queued to run
"RTN","KMPRUTL1",65,0)
 ;
"RTN","KMPRUTL1",66,0)
 ;            100>: error condition.
"RTN","KMPRUTL1",67,0)
 ;               100 - RUM not available for 'OS' at this time
"RTN","KMPRUTL1",68,0)
 ;               200 - RUM is on but the option 'KMPR BACKGROUND DRIVER'
"RTN","KMPRUTL1",69,0)
 ;                     is not scheduled to run."
"RTN","KMPRUTL1",70,0)
 ;               201 - The RUM background driver option [KMPR BACKGROUND
"RTN","KMPRUTL1",71,0)
 ;                     DRIVER] is missing
"RTN","KMPRUTL1",72,0)
 ;
"RTN","KMPRUTL1",73,0)
 ; KMPRQIET.. Output message: 0 - output message (not quiet).
"RTN","KMPRUTL1",74,0)
 ;                            1 - do not output message (quiet).
"RTN","KMPRUTL1",75,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",76,0)
 ;
"RTN","KMPRUTL1",77,0)
 K KMPRENV
"RTN","KMPRUTL1",78,0)
 S KMPRENV="0^RUM turned on and background job queued"
"RTN","KMPRUTL1",79,0)
 S KMPRQIET=+$G(KMPRQIET)
"RTN","KMPRUTL1",80,0)
 ;
"RTN","KMPRUTL1",81,0)
 N IEN,IEN1,TEXT
"RTN","KMPRUTL1",82,0)
 ;
"RTN","KMPRUTL1",83,0)
 ; check for operating system availability.
"RTN","KMPRUTL1",84,0)
 S TEXT=$P($G(^%ZOSF("OS")),U)
"RTN","KMPRUTL1",85,0)
 I TEXT'["DSM"&(TEXT'["OpenM") D  Q
"RTN","KMPRUTL1",86,0)
 .S KMPRENV="100^RUM not available for '"_TEXT_"' at this time"
"RTN","KMPRUTL1",87,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",88,0)
 ;
"RTN","KMPRUTL1",89,0)
 ; if rum not started quit.
"RTN","KMPRUTL1",90,0)
 I '$G(^%ZTSCH("LOGRSRC")) D  Q
"RTN","KMPRUTL1",91,0)
 .S KMPRENV="1^RUM is not turned on"
"RTN","KMPRUTL1",92,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",93,0)
 ;
"RTN","KMPRUTL1",94,0)
 S TEXT="KMPR BACKGROUND DRIVER"
"RTN","KMPRUTL1",95,0)
 S IEN=$O(^DIC(19,"B",TEXT,0))
"RTN","KMPRUTL1",96,0)
 I 'IEN D  Q
"RTN","KMPRUTL1",97,0)
 .S KMPRENV="201^The RUM background driver option [KMPR BACKGROUND DRIVER] is missing"
"RTN","KMPRUTL1",98,0)
 .D:'KMPRQIET ENVOUTPT(KMPRENV,1,1)
"RTN","KMPRUTL1",99,0)
 ;
"RTN","KMPRUTL1",100,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRUTL1",101,0)
 I 'IEN1!($P($G(^DIC(19.2,+IEN1,1)),U)']"") D 
"RTN","KMPRUTL1",102,0)
 .S KMPRENV="200^RUM is on but the option '"_TEXT_"' is not scheduled to run"
"RTN","KMPRUTL1",103,0)
 ;
"RTN","KMPRUTL1",104,0)
 Q:KMPRQIET
"RTN","KMPRUTL1",105,0)
 D ENVOUTPT(KMPRENV,1,1) I +KMPRENV<100 Q
"RTN","KMPRUTL1",106,0)
 ;
"RTN","KMPRUTL1",107,0)
 K DIR S DIR(0)="YO",DIR("B")="YES"
"RTN","KMPRUTL1",108,0)
 S DIR("A")="Do you want me to queue this option to run every night at 1 a.m."
"RTN","KMPRUTL1",109,0)
 W ! D ^DIR Q:'Y
"RTN","KMPRUTL1",110,0)
 ;
"RTN","KMPRUTL1",111,0)
 D QUEBKG
"RTN","KMPRUTL1",112,0)
 ;
"RTN","KMPRUTL1",113,0)
 W !
"RTN","KMPRUTL1",114,0)
 S KMPRENV="0^RUM turned on and background job queued"
"RTN","KMPRUTL1",115,0)
 ;
"RTN","KMPRUTL1",116,0)
 Q
"RTN","KMPRUTL1",117,0)
 ;
"RTN","KMPRUTL1",118,0)
ENVOUTPT(KMPRENV,KMPRHILT,KMPRCNTR) ;-- environment check output.
"RTN","KMPRUTL1",119,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",120,0)
 ; KMPRENV... Environment output (see ENVCHECK).
"RTN","KMPRUTL1",121,0)
 ; KMPRHILT.. Highlight text: 0 - do not highlight.
"RTN","KMPRUTL1",122,0)
 ;                            1 - highlight text.
"RTN","KMPRUTL1",123,0)
 ; KMPRCNTR.. Center text:    0 - do not center text.
"RTN","KMPRUTL1",124,0)
 ;                            1 - center text.
"RTN","KMPRUTL1",125,0)
 ;-----------------------------------------------------------------------
"RTN","KMPRUTL1",126,0)
 ;
"RTN","KMPRUTL1",127,0)
 S KMPRENV=$G(KMPRENV),KMPRHILT=+$G(KMPRHILT),KMPRCNTR=+$G(KMPRCNTR)
"RTN","KMPRUTL1",128,0)
 Q:KMPRENV=""
"RTN","KMPRUTL1",129,0)
 ;
"RTN","KMPRUTL1",130,0)
 N INDENT,IORVOFF,IORVON,TEXT
"RTN","KMPRUTL1",131,0)
 S X="IORVOFF;IORVON" D ENDR^%ZISS
"RTN","KMPRUTL1",132,0)
 S KMPRENV=$P(KMPRENV,U,2)
"RTN","KMPRUTL1",133,0)
 S:KMPRHILT KMPRENV=IORVON_" "_KMPRENV_" "_IORVOFF
"RTN","KMPRUTL1",134,0)
 S TEXT(1)=KMPRENV
"RTN","KMPRUTL1",135,0)
 I KMPRCNTR S INDENT=80-$L(TEXT(1))\2,TEXT(1,"F")="!?"_INDENT
"RTN","KMPRUTL1",136,0)
 D EN^DDIOL(.TEXT)
"RTN","KMPRUTL1",137,0)
 ;
"RTN","KMPRUTL1",138,0)
 Q
"RTN","KMPRUTL1",139,0)
 ;
"RTN","KMPRUTL1",140,0)
PKG(PACKAGE) ; Select Package(s)
"RTN","KMPRUTL1",141,0)
 ; Output Variable:
"RTN","KMPRUTL1",142,0)
 ;   PACKAGE = Contains array of package names
"RTN","KMPRUTL1",143,0)
 ;           = PACKAGE("^") if DTOUT or DUOUT
"RTN","KMPRUTL1",144,0)
 ;
"RTN","KMPRUTL1",145,0)
 N DIR,DTOUT,DUOUT,Y
"RTN","KMPRUTL1",146,0)
 S DIR(0)="FO^1:999:0"
"RTN","KMPRUTL1",147,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)!(Y="")
"RTN","KMPRUTL1",148,0)
 .S DIR("A")="Select Package Namespace" D ^DIR I Y'="" S PACKAGE(Y)=""
"RTN","KMPRUTL1",149,0)
 .I Y=" " W !,*7,"Please enter a valid package namespace.",!
"RTN","KMPRUTL1",150,0)
 S:$D(DTOUT)!$D(DUOUT)!('$D(PACKAGE)) PACKAGE("^")=""
"RTN","KMPRUTL1",151,0)
 W !
"RTN","KMPRUTL1",152,0)
 Q
"RTN","KMPRUTL1",153,0)
 ;
"RTN","KMPRUTL1",154,0)
QUEBKG ;-- queue background job KMPR BACKGROUND DRIVER
"RTN","KMPRUTL1",155,0)
 N DA,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPRUTL1",156,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPRUTL1",157,0)
 S TEXT="KMPR BACKGROUND DRIVER"
"RTN","KMPRUTL1",158,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPRUTL1",159,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPRUTL1",160,0)
 ; if already in file 19.2 then kill.
"RTN","KMPRUTL1",161,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPRUTL1",162,0)
 ; schedule for tomorrow@1am.
"RTN","KMPRUTL1",163,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPRUTL1",164,0)
 ; queued to run at what time - set to tomorrow@1am
"RTN","KMPRUTL1",165,0)
 S FDA($J,19.2,"+1,",2)=$$FMADD^XLFDT(DT,1)_".01"
"RTN","KMPRUTL1",166,0)
 ; rescheduling frequency.
"RTN","KMPRUTL1",167,0)
 S FDA($J,19.2,"+1,",6)="1D"
"RTN","KMPRUTL1",168,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPRUTL1",169,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPRUTL1",170,0)
 Q
"VER")
8.0^22.0
**END**
**END**
