KIDS Distribution saved on Mar 09, 2016@12:58:24
MCCF14 - IB*2.0*525 HPID AND IB*2.0*528 ELIGIBILITY
**KIDS**:MCCF FY14 HPID EIV 1.0^IB*2.0*528^IB*2.0*525^

**INSTALL NAME**
MCCF FY14 HPID EIV 1.0
"BLD",9555,0)
MCCF FY14 HPID EIV 1.0^^1^3160309^y
"BLD",9555,1,0)
^^6^6^3150506^
"BLD",9555,1,1,0)
This multiple KIDS build distribution with two patches IB*2.0*525 and 
"BLD",9555,1,2,0)
IB*2.0*528 implements changes to VistA's Integrated Billing (IB) module 
"BLD",9555,1,3,0)
as requested by the Veterans Health Administration (VHA) Chief Business 
"BLD",9555,1,4,0)
Office (CBO) eBusiness Solutions Department to comply with the 
"BLD",9555,1,5,0)
legislative changes mandated by the Health Insurance Portability and 
"BLD",9555,1,6,0)
Accountability Act of 1996 (HIPAA).
"BLD",9555,6.3)
75
"BLD",9555,10,0)
^9.63^2^2
"BLD",9555,10,1,0)
IB*2.0*528^1
"BLD",9555,10,2,0)
IB*2.0*525^1
"BLD",9555,10,"B","IB*2.0*525",2)

"BLD",9555,10,"B","IB*2.0*528",1)

"BLD",9555,"KRN",0)
^9.67PA^779.2^20
"BLD",9555,"KRN",.4,0)
.4
"BLD",9555,"KRN",.401,0)
.401
"BLD",9555,"KRN",.402,0)
.402
"BLD",9555,"KRN",.403,0)
.403
"BLD",9555,"KRN",.5,0)
.5
"BLD",9555,"KRN",.84,0)
.84
"BLD",9555,"KRN",3.6,0)
3.6
"BLD",9555,"KRN",3.8,0)
3.8
"BLD",9555,"KRN",9.2,0)
9.2
"BLD",9555,"KRN",9.8,0)
9.8
"BLD",9555,"KRN",19,0)
19
"BLD",9555,"KRN",19.1,0)
19.1
"BLD",9555,"KRN",101,0)
101
"BLD",9555,"KRN",409.61,0)
409.61
"BLD",9555,"KRN",771,0)
771
"BLD",9555,"KRN",779.2,0)
779.2
"BLD",9555,"KRN",870,0)
870
"BLD",9555,"KRN",8989.51,0)
8989.51
"BLD",9555,"KRN",8989.52,0)
8989.52
"BLD",9555,"KRN",8994,0)
8994
"BLD",9555,"KRN","B",.4,.4)

"BLD",9555,"KRN","B",.401,.401)

"BLD",9555,"KRN","B",.402,.402)

"BLD",9555,"KRN","B",.403,.403)

"BLD",9555,"KRN","B",.5,.5)

"BLD",9555,"KRN","B",.84,.84)

"BLD",9555,"KRN","B",3.6,3.6)

"BLD",9555,"KRN","B",3.8,3.8)

"BLD",9555,"KRN","B",9.2,9.2)

"BLD",9555,"KRN","B",9.8,9.8)

"BLD",9555,"KRN","B",19,19)

"BLD",9555,"KRN","B",19.1,19.1)

"BLD",9555,"KRN","B",101,101)

"BLD",9555,"KRN","B",409.61,409.61)

"BLD",9555,"KRN","B",771,771)

"BLD",9555,"KRN","B",779.2,779.2)

"BLD",9555,"KRN","B",870,870)

"BLD",9555,"KRN","B",8989.51,8989.51)

"BLD",9555,"KRN","B",8989.52,8989.52)

"BLD",9555,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
IB*2.0*528
"BLD",9513,0)
IB*2.0*528^INTEGRATED BILLING^0^3160309^y
"BLD",9513,1,0)
^^8^8^3150818^^
"BLD",9513,1,1,0)
MCCF ENHANCEMENTS PROJECT - EIV
"BLD",9513,1,2,0)
 
"BLD",9513,1,3,0)
This patch implements changes to VistA's Integrated Billing (IB), 
"BLD",9513,1,4,0)
Insurance Company, and Patient Insurance File modules are requested by 
"BLD",9513,1,5,0)
the Veterans Health Administration (VHA) Chief Business Office (CBO)
"BLD",9513,1,6,0)
eBusiness Solutions Department to comply with the legislative
"BLD",9513,1,7,0)
changes mandated by the Health Insurance Portability and Accountability 
"BLD",9513,1,8,0)
Act of 1996 (HIPAA).
"BLD",9513,4,0)
^9.64PA^355.1^9
"BLD",9513,4,2,0)
2
"BLD",9513,4,2,2,0)
^9.641^2.342^2
"BLD",9513,4,2,2,2.312,0)
INSURANCE TYPE  (sub-file)
"BLD",9513,4,2,2,2.312,1,0)
^9.6411^1.08^1
"BLD",9513,4,2,2,2.312,1,1.08,0)
COMMENT - PATIENT POLICY
"BLD",9513,4,2,2,2.342,0)
COMMENT - SUBSCRIBER POLICY  (sub-file)
"BLD",9513,4,2,2,2.342,1,0)
^9.6411^^
"BLD",9513,4,2,222)
y^n^p^^^^n^^n
"BLD",9513,4,2,224)

"BLD",9513,4,36,0)
36
"BLD",9513,4,36,2,0)
^9.641^36^1
"BLD",9513,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",9513,4,36,2,36,1,0)
^9.6411^3.1^6
"BLD",9513,4,36,2,36,1,.01,0)
NAME
"BLD",9513,4,36,2,36,1,.05,0)
INACTIVE
"BLD",9513,4,36,2,36,1,.111,0)
STREET ADDRESS [LINE 1]
"BLD",9513,4,36,2,36,1,.112,0)
STREET ADDRESS [LINE 2]
"BLD",9513,4,36,2,36,1,1,0)
REIMBURSE?
"BLD",9513,4,36,2,36,1,3.1,0)
PAYER
"BLD",9513,4,36,222)
y^n^p^^^^n^^n
"BLD",9513,4,36,224)

"BLD",9513,4,350.9,0)
350.9
"BLD",9513,4,350.9,2,0)
^9.641^350.9^1
"BLD",9513,4,350.9,2,350.9,0)
IB SITE PARAMETERS  (File-top level)
"BLD",9513,4,350.9,2,350.9,1,0)
^9.6411^103^4
"BLD",9513,4,350.9,2,350.9,1,100,0)
IBCN SSVI DISABLE/ENABLE
"BLD",9513,4,350.9,2,350.9,1,101,0)
IBCN SSVI LAST INS DATE XFER
"BLD",9513,4,350.9,2,350.9,1,102,0)
IBCN CURRENT PIVOT ENTRY
"BLD",9513,4,350.9,2,350.9,1,103,0)
IBCN PIVOT FILE DAYS TO RETAIN
"BLD",9513,4,350.9,222)
y^n^p^^^^n^^n
"BLD",9513,4,350.9,224)

"BLD",9513,4,355.1,0)
355.1
"BLD",9513,4,355.1,2,0)
^9.641^355.1^1
"BLD",9513,4,355.1,2,355.1,0)
TYPE OF PLAN  (File-top level)
"BLD",9513,4,355.1,2,355.1,1,0)
^9.6411^.02^2
"BLD",9513,4,355.1,2,355.1,1,.01,0)
NAME
"BLD",9513,4,355.1,2,355.1,1,.02,0)
ABBREVIATION
"BLD",9513,4,355.1,222)
y^n^p^^^^n^^n
"BLD",9513,4,355.1,224)

"BLD",9513,4,355.3,0)
355.3
"BLD",9513,4,355.3,2,0)
^9.641^355.3^1
"BLD",9513,4,355.3,2,355.3,0)
GROUP INSURANCE PLAN  (File-top level)
"BLD",9513,4,355.3,2,355.3,1,0)
^9.6411^2.02^4
"BLD",9513,4,355.3,2,355.3,1,.16,0)
PLAN STANDARD FTF
"BLD",9513,4,355.3,2,355.3,1,.17,0)
PLAN STANDARD FTF VALUE
"BLD",9513,4,355.3,2,355.3,1,2.01,0)
GROUP NAME
"BLD",9513,4,355.3,2,355.3,1,2.02,0)
GROUP NUMBER
"BLD",9513,4,355.3,222)
y^n^p^^^^n^^n
"BLD",9513,4,355.3,224)

"BLD",9513,4,355.33,0)
355.33
"BLD",9513,4,355.33,2,0)
^9.641^355.33^1
"BLD",9513,4,355.33,2,355.33,0)
INSURANCE VERIFICATION PROCESSOR  (File-top level)
"BLD",9513,4,355.33,2,355.33,1,0)
^9.6411^62.09^1
"BLD",9513,4,355.33,2,355.33,1,62.09,0)
SUBSCRIBER PHONE
"BLD",9513,4,355.33,222)
y^n^p^^^^n^^n
"BLD",9513,4,355.33,224)

"BLD",9513,4,366,0)
366
"BLD",9513,4,366,222)
y^n^f^^^^n
"BLD",9513,4,366.1,0)
366.1
"BLD",9513,4,366.1,222)
y^n^f^^^^n
"BLD",9513,4,366.2,0)
366.2
"BLD",9513,4,366.2,222)
y^n^f^^n^^y^o^n
"BLD",9513,4,"APDD",2,2.312)

"BLD",9513,4,"APDD",2,2.312,1.08)

"BLD",9513,4,"APDD",2,2.342)

"BLD",9513,4,"APDD",36,36)

"BLD",9513,4,"APDD",36,36,.01)

"BLD",9513,4,"APDD",36,36,.05)

"BLD",9513,4,"APDD",36,36,.111)

"BLD",9513,4,"APDD",36,36,.112)

"BLD",9513,4,"APDD",36,36,1)

"BLD",9513,4,"APDD",36,36,3.1)

"BLD",9513,4,"APDD",350.9,350.9)

"BLD",9513,4,"APDD",350.9,350.9,100)

"BLD",9513,4,"APDD",350.9,350.9,101)

"BLD",9513,4,"APDD",350.9,350.9,102)

"BLD",9513,4,"APDD",350.9,350.9,103)

"BLD",9513,4,"APDD",355.1,355.1)

"BLD",9513,4,"APDD",355.1,355.1,.01)

"BLD",9513,4,"APDD",355.1,355.1,.02)

"BLD",9513,4,"APDD",355.3,355.3)

"BLD",9513,4,"APDD",355.3,355.3,.16)

"BLD",9513,4,"APDD",355.3,355.3,.17)

"BLD",9513,4,"APDD",355.3,355.3,2.01)

"BLD",9513,4,"APDD",355.3,355.3,2.02)

"BLD",9513,4,"APDD",355.33,355.33)

"BLD",9513,4,"APDD",355.33,355.33,62.09)

"BLD",9513,4,"B",2,2)

"BLD",9513,4,"B",36,36)

"BLD",9513,4,"B",350.9,350.9)

"BLD",9513,4,"B",355.1,355.1)

"BLD",9513,4,"B",355.3,355.3)

"BLD",9513,4,"B",355.33,355.33)

"BLD",9513,4,"B",366,366)

"BLD",9513,4,"B",366.1,366.1)

"BLD",9513,4,"B",366.2,366.2)

"BLD",9513,6)
4^
"BLD",9513,6.3)
163
"BLD",9513,"ABPKG")
n
"BLD",9513,"INI")
PREINST^IBY528PA
"BLD",9513,"INID")
^n^n
"BLD",9513,"INIT")
START^IBY528PO
"BLD",9513,"KRN",0)
^9.67PA^779.2^20
"BLD",9513,"KRN",.4,0)
.4
"BLD",9513,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",9513,"KRN",.4,"NM",1,0)
IB SSVI PIVOT    FILE #366^366^0
"BLD",9513,"KRN",.4,"NM",2,0)
IB SSVI PIVOT B    FILE #366^366^0
"BLD",9513,"KRN",.4,"NM","B","IB SSVI PIVOT    FILE #366",1)

"BLD",9513,"KRN",.4,"NM","B","IB SSVI PIVOT B    FILE #366",2)

"BLD",9513,"KRN",.401,0)
.401
"BLD",9513,"KRN",.401,"NM",0)
^9.68A^2^2
"BLD",9513,"KRN",.401,"NM",1,0)
IB SSVI PIVOT    FILE #366^366^0
"BLD",9513,"KRN",.401,"NM",2,0)
IB SSVI PIVOT B    FILE #366^366^0
"BLD",9513,"KRN",.401,"NM","B","IB SSVI PIVOT    FILE #366",1)

"BLD",9513,"KRN",.401,"NM","B","IB SSVI PIVOT B    FILE #366",2)

"BLD",9513,"KRN",.402,0)
.402
"BLD",9513,"KRN",.402,"NM",0)
^9.68A^13^10
"BLD",9513,"KRN",.402,"NM",2,0)
IB SSVI ENABLE/DISABLE    FILE #350.9^350.9^0
"BLD",9513,"KRN",.402,"NM",5,0)
IBCNE GENERAL PARAMETER EDIT    FILE #350.9^350.9^0
"BLD",9513,"KRN",.402,"NM",6,0)
IBCN PATIENT INSURANCE    FILE #2^2^0
"BLD",9513,"KRN",.402,"NM",7,0)
IBCNBC CV IP EDIT    FILE #355.32^355.32^0
"BLD",9513,"KRN",.402,"NM",8,0)
IBCNBC CV OP EDIT    FILE #355.32^355.32^0
"BLD",9513,"KRN",.402,"NM",9,0)
IBCNBC CV DN EDIT    FILE #355.32^355.32^0
"BLD",9513,"KRN",.402,"NM",10,0)
IBCNBC CV MH EDIT    FILE #355.32^355.32^0
"BLD",9513,"KRN",.402,"NM",11,0)
IBCNBC CV LT EDIT    FILE #355.32^355.32^0
"BLD",9513,"KRN",.402,"NM",12,0)
IBCN AB ACCEPT    FILE #355.4^355.4^0
"BLD",9513,"KRN",.402,"NM",13,0)
IBCNBC CV PH EDIT    FILE #355.32^355.32^0
"BLD",9513,"KRN",.402,"NM","B","IB SSVI ENABLE/DISABLE    FILE #350.9",2)

"BLD",9513,"KRN",.402,"NM","B","IBCN AB ACCEPT    FILE #355.4",12)

"BLD",9513,"KRN",.402,"NM","B","IBCN PATIENT INSURANCE    FILE #2",6)

"BLD",9513,"KRN",.402,"NM","B","IBCNBC CV DN EDIT    FILE #355.32",9)

"BLD",9513,"KRN",.402,"NM","B","IBCNBC CV IP EDIT    FILE #355.32",7)

"BLD",9513,"KRN",.402,"NM","B","IBCNBC CV LT EDIT    FILE #355.32",11)

"BLD",9513,"KRN",.402,"NM","B","IBCNBC CV MH EDIT    FILE #355.32",10)

"BLD",9513,"KRN",.402,"NM","B","IBCNBC CV OP EDIT    FILE #355.32",8)

"BLD",9513,"KRN",.402,"NM","B","IBCNBC CV PH EDIT    FILE #355.32",13)

"BLD",9513,"KRN",.402,"NM","B","IBCNE GENERAL PARAMETER EDIT    FILE #350.9",5)

"BLD",9513,"KRN",.403,0)
.403
"BLD",9513,"KRN",.403,"NM",0)
^9.68A^^
"BLD",9513,"KRN",.5,0)
.5
"BLD",9513,"KRN",.84,0)
.84
"BLD",9513,"KRN",3.6,0)
3.6
"BLD",9513,"KRN",3.6,"NM",0)
^9.68A^^0
"BLD",9513,"KRN",3.8,0)
3.8
"BLD",9513,"KRN",3.8,"NM",0)
^9.68A^2^1
"BLD",9513,"KRN",3.8,"NM",2,0)
IB SSVI^^0
"BLD",9513,"KRN",3.8,"NM","B","IB SSVI",2)

"BLD",9513,"KRN",9.2,0)
9.2
"BLD",9513,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",9513,"KRN",9.8,0)
9.8
"BLD",9513,"KRN",9.8,"NM",0)
^9.68A^143^94
"BLD",9513,"KRN",9.8,"NM",4,0)
IBCNBAA^^0^B170357032
"BLD",9513,"KRN",9.8,"NM",7,0)
IBCNBEE^^0^B50211933
"BLD",9513,"KRN",9.8,"NM",8,0)
IBCNEDE1^^0^B48152754
"BLD",9513,"KRN",9.8,"NM",32,0)
IBCNERPL^^0^B21072359
"BLD",9513,"KRN",9.8,"NM",33,0)
IBCNERPJ^^0^B18323199
"BLD",9513,"KRN",9.8,"NM",34,0)
IBCNERPK^^0^B9770810
"BLD",9513,"KRN",9.8,"NM",36,0)
IBCNSP^^0^B79133086
"BLD",9513,"KRN",9.8,"NM",38,0)
IBJPI^^0^B21646408
"BLD",9513,"KRN",9.8,"NM",39,0)
IBCNVCC^^0^B19887877
"BLD",9513,"KRN",9.8,"NM",45,0)
IBCNVRD0^^0^B157582204
"BLD",9513,"KRN",9.8,"NM",46,0)
IBCNVRD1^^0^B219042298
"BLD",9513,"KRN",9.8,"NM",47,0)
IBCNVPU0^^0^B30762326
"BLD",9513,"KRN",9.8,"NM",48,0)
IBCNVRP0^^0^B26970383
"BLD",9513,"KRN",9.8,"NM",49,0)
IBCNVUT0^^0^B99101857
"BLD",9513,"KRN",9.8,"NM",52,0)
IBCNGPF^^0^B21375238
"BLD",9513,"KRN",9.8,"NM",53,0)
IBCNGPF1^^0^B16592637
"BLD",9513,"KRN",9.8,"NM",54,0)
IBCNGPF2^^0^B19487325
"BLD",9513,"KRN",9.8,"NM",55,0)
IBCNGPF3^^0^B8501170
"BLD",9513,"KRN",9.8,"NM",56,0)
IBCNERPB^^0^B48231865
"BLD",9513,"KRN",9.8,"NM",57,0)
IBCNERPC^^0^B55318393
"BLD",9513,"KRN",9.8,"NM",58,0)
IBCNERPD^^0^B108873361
"BLD",9513,"KRN",9.8,"NM",60,0)
IBCNVRP1^^0^B26005231
"BLD",9513,"KRN",9.8,"NM",61,0)
IBCNVRP2^^0^B107004778
"BLD",9513,"KRN",9.8,"NM",62,0)
IBCNBLE^^0^B108286905
"BLD",9513,"KRN",9.8,"NM",64,0)
IBCNSP0^^0^B45681848
"BLD",9513,"KRN",9.8,"NM",66,0)
IBCNBOA^^0^B66757822
"BLD",9513,"KRN",9.8,"NM",67,0)
IBCNBOE^^0^B109925669
"BLD",9513,"KRN",9.8,"NM",68,0)
IBCNAU^^0^B50832462
"BLD",9513,"KRN",9.8,"NM",69,0)
IBCNAU1^^0^B17152074
"BLD",9513,"KRN",9.8,"NM",70,0)
IBCNAU2^^0^B24403828
"BLD",9513,"KRN",9.8,"NM",71,0)
IBCNAU3^^0^B12671484
"BLD",9513,"KRN",9.8,"NM",72,0)
IBCNBOF^^0^B32265412
"BLD",9513,"KRN",9.8,"NM",73,0)
IBCOPR^^0^B37055885
"BLD",9513,"KRN",9.8,"NM",74,0)
IBCOPR1^^0^B58373479
"BLD",9513,"KRN",9.8,"NM",75,0)
IBCEMMR^^0^B56465782
"BLD",9513,"KRN",9.8,"NM",76,0)
IBCOMC^^0^B28290447
"BLD",9513,"KRN",9.8,"NM",77,0)
IBCOMC1^^0^B19172785
"BLD",9513,"KRN",9.8,"NM",78,0)
IBCOMC2^^0^B15997269
"BLD",9513,"KRN",9.8,"NM",79,0)
IBCNERP1^^0^B87784206
"BLD",9513,"KRN",9.8,"NM",80,0)
IBCNERPF^^0^B17142142
"BLD",9513,"KRN",9.8,"NM",81,0)
IBCNERPG^^0^B15763271
"BLD",9513,"KRN",9.8,"NM",82,0)
IBCNERPH^^0^B26306975
"BLD",9513,"KRN",9.8,"NM",83,0)
IBCOMD^^0^B38054448
"BLD",9513,"KRN",9.8,"NM",84,0)
IBCOMD1^^0^B27677991
"BLD",9513,"KRN",9.8,"NM",85,0)
IBCOMN^^0^B13731474
"BLD",9513,"KRN",9.8,"NM",86,0)
IBCOMN1^^0^B14298599
"BLD",9513,"KRN",9.8,"NM",87,0)
IBCOMA^^0^B24000522
"BLD",9513,"KRN",9.8,"NM",88,0)
IBCOMA1^^0^B45473488
"BLD",9513,"KRN",9.8,"NM",90,0)
IBCOC^^0^B14081123
"BLD",9513,"KRN",9.8,"NM",91,0)
IBCOC1^^0^B21404907
"BLD",9513,"KRN",9.8,"NM",96,0)
IBCNBLL^^0^B144703884
"BLD",9513,"KRN",9.8,"NM",97,0)
IBCNERP2^^0^B31175764
"BLD",9513,"KRN",9.8,"NM",98,0)
IBCNERP3^^0^B79824613
"BLD",9513,"KRN",9.8,"NM",99,0)
IBCNERP7^^0^B30436149
"BLD",9513,"KRN",9.8,"NM",100,0)
IBCNERP9^^0^B133982311
"BLD",9513,"KRN",9.8,"NM",102,0)
IBCONSC^^0^B17158899
"BLD",9513,"KRN",9.8,"NM",103,0)
IBCONS1^^0^B125225379
"BLD",9513,"KRN",9.8,"NM",104,0)
IBOUNP4^^0^B13529081
"BLD",9513,"KRN",9.8,"NM",105,0)
IBOUNP6^^0^B36369758
"BLD",9513,"KRN",9.8,"NM",106,0)
IBJDI4^^0^B31792499
"BLD",9513,"KRN",9.8,"NM",107,0)
IBJDI41^^0^B150223354
"BLD",9513,"KRN",9.8,"NM",108,0)
IBJDI5^^0^B97543922
"BLD",9513,"KRN",9.8,"NM",110,0)
IBOTR3^^0^B51841072
"BLD",9513,"KRN",9.8,"NM",111,0)
IBCNERP4^^0^B65437129
"BLD",9513,"KRN",9.8,"NM",112,0)
IBCNERP6^^0^B98862424
"BLD",9513,"KRN",9.8,"NM",113,0)
IBOUNP1^^0^B17878634
"BLD",9513,"KRN",9.8,"NM",114,0)
IBOUNP3^^0^B37406205
"BLD",9513,"KRN",9.8,"NM",115,0)
IBCNSP3^^0^B85952229
"BLD",9513,"KRN",9.8,"NM",116,0)
IBCNERPA^^0^B7366399
"BLD",9513,"KRN",9.8,"NM",117,0)
IBOTR1^^0^B22387130
"BLD",9513,"KRN",9.8,"NM",118,0)
IBCOPP^^0^B15985691
"BLD",9513,"KRN",9.8,"NM",120,0)
IBCOPP2^^0^B22994194
"BLD",9513,"KRN",9.8,"NM",121,0)
IBCOPP3^^0^B15474438
"BLD",9513,"KRN",9.8,"NM",122,0)
IBCNBCD^^0^B99061672
"BLD",9513,"KRN",9.8,"NM",123,0)
IBCNBCD1^^0^B94125626
"BLD",9513,"KRN",9.8,"NM",124,0)
IBCNBCD2^^0^B204932472
"BLD",9513,"KRN",9.8,"NM",125,0)
IBCNBCD3^^0^B116960368
"BLD",9513,"KRN",9.8,"NM",126,0)
IBCNBCD4^^0^B43901770
"BLD",9513,"KRN",9.8,"NM",127,0)
IBCNBAR^^0^B51423558
"BLD",9513,"KRN",9.8,"NM",128,0)
IBCNBMI^^0^B96670788
"BLD",9513,"KRN",9.8,"NM",129,0)
IBCN118^^0^B9899730
"BLD",9513,"KRN",9.8,"NM",130,0)
IBCNICB^^0^B139240420
"BLD",9513,"KRN",9.8,"NM",131,0)
IBCNVCC1^^0^B13802423
"BLD",9513,"KRN",9.8,"NM",133,0)
IBCNBAC^^0^B53121470
"BLD",9513,"KRN",9.8,"NM",134,0)
IBY528PA^^0^B92379813
"BLD",9513,"KRN",9.8,"NM",135,0)
IBY528PO^^0^B26150711
"BLD",9513,"KRN",9.8,"NM",136,0)
IBCOPP1^^0^B10507720
"BLD",9513,"KRN",9.8,"NM",137,0)
IBCNBCD5^^0^B137684111
"BLD",9513,"KRN",9.8,"NM",138,0)
IBCNBCD6^^0^B134178322
"BLD",9513,"KRN",9.8,"NM",139,0)
IBCNBCD7^^0^B7325705
"BLD",9513,"KRN",9.8,"NM",140,0)
IBCNBLA1^^0^B104276372
"BLD",9513,"KRN",9.8,"NM",141,0)
IBCNSM^^0^B23601352
"BLD",9513,"KRN",9.8,"NM",142,0)
IBCNSM2^^0^B22268650
"BLD",9513,"KRN",9.8,"NM",143,0)
IBCNSM4^^0^B4086996
"BLD",9513,"KRN",9.8,"NM","B","IBCEMMR",75)

"BLD",9513,"KRN",9.8,"NM","B","IBCN118",129)

"BLD",9513,"KRN",9.8,"NM","B","IBCNAU",68)

"BLD",9513,"KRN",9.8,"NM","B","IBCNAU1",69)

"BLD",9513,"KRN",9.8,"NM","B","IBCNAU2",70)

"BLD",9513,"KRN",9.8,"NM","B","IBCNAU3",71)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBAA",4)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBAC",133)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBAR",127)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBCD",122)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBCD1",123)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBCD2",124)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBCD3",125)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBCD4",126)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBCD5",137)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBCD6",138)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBCD7",139)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBEE",7)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBLA1",140)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBLE",62)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBLL",96)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBMI",128)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBOA",66)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBOE",67)

"BLD",9513,"KRN",9.8,"NM","B","IBCNBOF",72)

"BLD",9513,"KRN",9.8,"NM","B","IBCNEDE1",8)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERP1",79)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERP2",97)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERP3",98)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERP4",111)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERP6",112)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERP7",99)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERP9",100)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPA",116)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPB",56)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPC",57)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPD",58)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPF",80)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPG",81)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPH",82)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPJ",33)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPK",34)

"BLD",9513,"KRN",9.8,"NM","B","IBCNERPL",32)

"BLD",9513,"KRN",9.8,"NM","B","IBCNGPF",52)

"BLD",9513,"KRN",9.8,"NM","B","IBCNGPF1",53)

"BLD",9513,"KRN",9.8,"NM","B","IBCNGPF2",54)

"BLD",9513,"KRN",9.8,"NM","B","IBCNGPF3",55)

"BLD",9513,"KRN",9.8,"NM","B","IBCNICB",130)

"BLD",9513,"KRN",9.8,"NM","B","IBCNSM",141)

"BLD",9513,"KRN",9.8,"NM","B","IBCNSM2",142)

"BLD",9513,"KRN",9.8,"NM","B","IBCNSM4",143)

"BLD",9513,"KRN",9.8,"NM","B","IBCNSP",36)

"BLD",9513,"KRN",9.8,"NM","B","IBCNSP0",64)

"BLD",9513,"KRN",9.8,"NM","B","IBCNSP3",115)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVCC",39)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVCC1",131)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVPU0",47)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVRD0",45)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVRD1",46)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVRP0",48)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVRP1",60)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVRP2",61)

"BLD",9513,"KRN",9.8,"NM","B","IBCNVUT0",49)

"BLD",9513,"KRN",9.8,"NM","B","IBCOC",90)

"BLD",9513,"KRN",9.8,"NM","B","IBCOC1",91)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMA",87)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMA1",88)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMC",76)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMC1",77)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMC2",78)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMD",83)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMD1",84)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMN",85)

"BLD",9513,"KRN",9.8,"NM","B","IBCOMN1",86)

"BLD",9513,"KRN",9.8,"NM","B","IBCONS1",103)

"BLD",9513,"KRN",9.8,"NM","B","IBCONSC",102)

"BLD",9513,"KRN",9.8,"NM","B","IBCOPP",118)

"BLD",9513,"KRN",9.8,"NM","B","IBCOPP1",136)

"BLD",9513,"KRN",9.8,"NM","B","IBCOPP2",120)

"BLD",9513,"KRN",9.8,"NM","B","IBCOPP3",121)

"BLD",9513,"KRN",9.8,"NM","B","IBCOPR",73)

"BLD",9513,"KRN",9.8,"NM","B","IBCOPR1",74)

"BLD",9513,"KRN",9.8,"NM","B","IBJDI4",106)

"BLD",9513,"KRN",9.8,"NM","B","IBJDI41",107)

"BLD",9513,"KRN",9.8,"NM","B","IBJDI5",108)

"BLD",9513,"KRN",9.8,"NM","B","IBJPI",38)

"BLD",9513,"KRN",9.8,"NM","B","IBOTR1",117)

"BLD",9513,"KRN",9.8,"NM","B","IBOTR3",110)

"BLD",9513,"KRN",9.8,"NM","B","IBOUNP1",113)

"BLD",9513,"KRN",9.8,"NM","B","IBOUNP3",114)

"BLD",9513,"KRN",9.8,"NM","B","IBOUNP4",104)

"BLD",9513,"KRN",9.8,"NM","B","IBOUNP6",105)

"BLD",9513,"KRN",9.8,"NM","B","IBY528PA",134)

"BLD",9513,"KRN",9.8,"NM","B","IBY528PO",135)

"BLD",9513,"KRN",19,0)
19
"BLD",9513,"KRN",19,"NM",0)
^9.68A^70^31
"BLD",9513,"KRN",19,"NM",3,0)
IBCN INSURANCE MGMT MENU^^2
"BLD",9513,"KRN",19,"NM",8,0)
IBCNE IIV MENU^^2^
"BLD",9513,"KRN",19,"NM",13,0)
IBCN INS RPTS^^0
"BLD",9513,"KRN",19,"NM",14,0)
IBCN OUTPUT INS BUFF ACTIVITY^^4^
"BLD",9513,"KRN",19,"NM",15,0)
IBCN OUTPUT INS BUFF EMPLOYEE^^4^
"BLD",9513,"KRN",19,"NM",16,0)
IB OUTPUT PRE-REG SOURCE REPT^^4^
"BLD",9513,"KRN",19,"NM",17,0)
IBCEM PATIENTS W/O MEDICARE^^4^
"BLD",9513,"KRN",19,"NM",18,0)
IB INPATIENT VET REPORT^^4^
"BLD",9513,"KRN",19,"NM",19,0)
IB OUTPATIENT VET REPORT^^4^
"BLD",9513,"KRN",19,"NM",20,0)
IB OUTPUT INPTS WITHOUT INS^^4^
"BLD",9513,"KRN",19,"NM",21,0)
IB OUTPUT OPTS WITHOUT INS^^4^
"BLD",9513,"KRN",19,"NM",22,0)
IBJD INTAKE INS^^4^
"BLD",9513,"KRN",19,"NM",23,0)
IBJD INTAKE POL NOT VER^^4^
"BLD",9513,"KRN",19,"NM",24,0)
IB OUTPUT TREND REPORT^^4^
"BLD",9513,"KRN",19,"NM",25,0)
IBCN PT W/WO INSURANCE REPORT^^4^
"BLD",9513,"KRN",19,"NM",26,0)
IBCNE EIV UPDATE REPORT^^4^
"BLD",9513,"KRN",19,"NM",27,0)
IBCNE IIV PAYER LINK REPORT^^4^
"BLD",9513,"KRN",19,"NM",28,0)
IBCNE POTENTIAL NEW INS FOUND^^4^
"BLD",9513,"KRN",19,"NM",29,0)
IBCNE IIV PAYER REPORT^^4^
"BLD",9513,"KRN",19,"NM",30,0)
IBCNE IIV RESPONSE REPORT^^4^
"BLD",9513,"KRN",19,"NM",31,0)
IBCNE IIV STATISTICAL REPORT^^4^
"BLD",9513,"KRN",19,"NM",32,0)
IBCN ID DUP INSURANCE ENTRIES^^4^
"BLD",9513,"KRN",19,"NM",33,0)
IBCN LIST NEW NOT VER^^4^
"BLD",9513,"KRN",19,"NM",34,0)
IBCN LIST INACTIVE INS W/PAT^^4^
"BLD",9513,"KRN",19,"NM",35,0)
IBCN LIST PLANS BY INS CO^^4^
"BLD",9513,"KRN",19,"NM",36,0)
IBCN NO COVERAGE VERIFIED^^4^
"BLD",9513,"KRN",19,"NM",37,0)
IBCN POL W/NO EFF DATE REPORT^^4^
"BLD",9513,"KRN",19,"NM",39,0)
IBCN GRP PLAN FILES RPT^^0
"BLD",9513,"KRN",19,"NM",41,0)
IBCN USER EDIT RPT^^0
"BLD",9513,"KRN",19,"NM",69,0)
IBCNE HL7 RESPONSE REPORT^^0
"BLD",9513,"KRN",19,"NM",70,0)
IBCN INTERFACILITY INS UPDATE^^0
"BLD",9513,"KRN",19,"NM","B","IB INPATIENT VET REPORT",18)

"BLD",9513,"KRN",19,"NM","B","IB OUTPATIENT VET REPORT",19)

"BLD",9513,"KRN",19,"NM","B","IB OUTPUT INPTS WITHOUT INS",20)

"BLD",9513,"KRN",19,"NM","B","IB OUTPUT OPTS WITHOUT INS",21)

"BLD",9513,"KRN",19,"NM","B","IB OUTPUT PRE-REG SOURCE REPT",16)

"BLD",9513,"KRN",19,"NM","B","IB OUTPUT TREND REPORT",24)

"BLD",9513,"KRN",19,"NM","B","IBCEM PATIENTS W/O MEDICARE",17)

"BLD",9513,"KRN",19,"NM","B","IBCN GRP PLAN FILES RPT",39)

"BLD",9513,"KRN",19,"NM","B","IBCN ID DUP INSURANCE ENTRIES",32)

"BLD",9513,"KRN",19,"NM","B","IBCN INS RPTS",13)

"BLD",9513,"KRN",19,"NM","B","IBCN INSURANCE MGMT MENU",3)

"BLD",9513,"KRN",19,"NM","B","IBCN INTERFACILITY INS UPDATE",70)

"BLD",9513,"KRN",19,"NM","B","IBCN LIST INACTIVE INS W/PAT",34)

"BLD",9513,"KRN",19,"NM","B","IBCN LIST NEW NOT VER",33)

"BLD",9513,"KRN",19,"NM","B","IBCN LIST PLANS BY INS CO",35)

"BLD",9513,"KRN",19,"NM","B","IBCN NO COVERAGE VERIFIED",36)

"BLD",9513,"KRN",19,"NM","B","IBCN OUTPUT INS BUFF ACTIVITY",14)

"BLD",9513,"KRN",19,"NM","B","IBCN OUTPUT INS BUFF EMPLOYEE",15)

"BLD",9513,"KRN",19,"NM","B","IBCN POL W/NO EFF DATE REPORT",37)

"BLD",9513,"KRN",19,"NM","B","IBCN PT W/WO INSURANCE REPORT",25)

"BLD",9513,"KRN",19,"NM","B","IBCN USER EDIT RPT",41)

"BLD",9513,"KRN",19,"NM","B","IBCNE EIV UPDATE REPORT",26)

"BLD",9513,"KRN",19,"NM","B","IBCNE HL7 RESPONSE REPORT",69)

"BLD",9513,"KRN",19,"NM","B","IBCNE IIV MENU",8)

"BLD",9513,"KRN",19,"NM","B","IBCNE IIV PAYER LINK REPORT",27)

"BLD",9513,"KRN",19,"NM","B","IBCNE IIV PAYER REPORT",29)

"BLD",9513,"KRN",19,"NM","B","IBCNE IIV RESPONSE REPORT",30)

"BLD",9513,"KRN",19,"NM","B","IBCNE IIV STATISTICAL REPORT",31)

"BLD",9513,"KRN",19,"NM","B","IBCNE POTENTIAL NEW INS FOUND",28)

"BLD",9513,"KRN",19,"NM","B","IBJD INTAKE INS",22)

"BLD",9513,"KRN",19,"NM","B","IBJD INTAKE POL NOT VER",23)

"BLD",9513,"KRN",19.1,0)
19.1
"BLD",9513,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9513,"KRN",101,0)
101
"BLD",9513,"KRN",101,"NM",0)
^9.68A^15^2
"BLD",9513,"KRN",101,"NM",14,0)
IBCNB LIST SCREEN MENU^^2
"BLD",9513,"KRN",101,"NM",15,0)
IBCNB LIST TRICARE/CHAMPVA VIEW^^0^
"BLD",9513,"KRN",101,"NM","B","IBCNB LIST SCREEN MENU",14)

"BLD",9513,"KRN",101,"NM","B","IBCNB LIST TRICARE/CHAMPVA VIEW",15)

"BLD",9513,"KRN",409.61,0)
409.61
"BLD",9513,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",9513,"KRN",409.61,"NM",1,0)
IBCNB INSURANCE BUFFER PROCESS^^0
"BLD",9513,"KRN",409.61,"NM","B","IBCNB INSURANCE BUFFER PROCESS",1)

"BLD",9513,"KRN",771,0)
771
"BLD",9513,"KRN",771,"NM",0)
^9.68A^^0
"BLD",9513,"KRN",779.2,0)
779.2
"BLD",9513,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",9513,"KRN",870,0)
870
"BLD",9513,"KRN",870,"NM",0)
^9.68A^^
"BLD",9513,"KRN",8989.51,0)
8989.51
"BLD",9513,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",9513,"KRN",8989.52,0)
8989.52
"BLD",9513,"KRN",8994,0)
8994
"BLD",9513,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",9513,"KRN",8994,"NM",1,0)
IBCN SSVI ENABLED^^0
"BLD",9513,"KRN",8994,"NM",2,0)
IBCN SSVI SEND^^0
"BLD",9513,"KRN",8994,"NM","B","IBCN SSVI ENABLED",1)

"BLD",9513,"KRN",8994,"NM","B","IBCN SSVI SEND",2)

"BLD",9513,"KRN","B",.4,.4)

"BLD",9513,"KRN","B",.401,.401)

"BLD",9513,"KRN","B",.402,.402)

"BLD",9513,"KRN","B",.403,.403)

"BLD",9513,"KRN","B",.5,.5)

"BLD",9513,"KRN","B",.84,.84)

"BLD",9513,"KRN","B",3.6,3.6)

"BLD",9513,"KRN","B",3.8,3.8)

"BLD",9513,"KRN","B",9.2,9.2)

"BLD",9513,"KRN","B",9.8,9.8)

"BLD",9513,"KRN","B",19,19)

"BLD",9513,"KRN","B",19.1,19.1)

"BLD",9513,"KRN","B",101,101)

"BLD",9513,"KRN","B",409.61,409.61)

"BLD",9513,"KRN","B",771,771)

"BLD",9513,"KRN","B",779.2,779.2)

"BLD",9513,"KRN","B",870,870)

"BLD",9513,"KRN","B",8989.51,8989.51)

"BLD",9513,"KRN","B",8989.52,8989.52)

"BLD",9513,"KRN","B",8994,8994)

"BLD",9513,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",9513,"QUES",0)
^9.62^^
"BLD",9513,"REQB",0)
^9.611^10^8
"BLD",9513,"REQB",3,0)
IB*2.0*516^2
"BLD",9513,"REQB",4,0)
IB*2.0*120^2
"BLD",9513,"REQB",5,0)
IB*2.0*123^2
"BLD",9513,"REQB",6,0)
IB*2.0*249^2
"BLD",9513,"REQB",7,0)
IB*2.0*305^2
"BLD",9513,"REQB",8,0)
IB*2.0*366^2
"BLD",9513,"REQB",9,0)
IB*2.0*506^2
"BLD",9513,"REQB",10,0)
IB*2.0*521^2
"BLD",9513,"REQB","B","IB*2.0*120",4)

"BLD",9513,"REQB","B","IB*2.0*123",5)

"BLD",9513,"REQB","B","IB*2.0*249",6)

"BLD",9513,"REQB","B","IB*2.0*305",7)

"BLD",9513,"REQB","B","IB*2.0*366",8)

"BLD",9513,"REQB","B","IB*2.0*506",9)

"BLD",9513,"REQB","B","IB*2.0*516",3)

"BLD",9513,"REQB","B","IB*2.0*521",10)

"DATA",366.2,1,0)
INSURANCE COMPANY (TYPE)^INSURANCE COMPANY NAME' CONTAINS "" OR 0 OR NOT POINTER X-REF^4^0^0^1
"DATA",366.2,1,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,1,"D",1,0)
Inconsistency results if the name = "" or 0 or non-pointer in x-ref value to file 36, or INACTIVE Insurance,
"DATA",366.2,2,0)
GROUP PLAN^GROUP PLAN INCONSISTENT^0^0^0^1
"DATA",366.2,2,"D",0)
^366.21^2^2^3150326^^^^
"DATA",366.2,2,"D",1,0)
Group plan not defined or inactive or pointing to deleted record
"DATA",366.2,2,"D",2,0)
is not an alphabetic character.
"DATA",366.2,3,0)
COORDINATION OF BENEFITS^COORDINATION OF BENEFITS INCONSISTENT^0^0^0^1
"DATA",366.2,3,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,3,"D",1,0)
Inconsistency results if the 'COORDINATION OF BENEFITS' prompt is unanswered.
"DATA",366.2,4,0)
SUBSCRIBER ID^SUBSCRIBER ID INCONSISTENT^0^0^0^1
"DATA",366.2,4,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,4,"D",1,0)
Inconsistency results if the 'SUBSCRIBER ID' prompt is not answered.
"DATA",366.2,5,0)
DATE LAST VERIFIED^DATA LAST VERIFIED INCONSISTENT^0^0^0^1
"DATA",366.2,5,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,5,"D",1,0)
Inconsistency results if the 'DATA LAST VERIFIED' prompt is unanswered.
"DATA",366.2,6,0)
GROUP NUMBER^'*GROUP NUMBER' IS UNSPECIFIED^0^0^0^1
"DATA",366.2,6,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,6,"D",1,0)
Inconsistency results if the *Group number prompt is unanswered.
"DATA",366.2,7,0)
INSURED'S DOB^'INSURED'S DOB' INCONSISTENT^0^0^0^1
"DATA",366.2,7,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,7,"D",1,0)
Inconsistency results if the 'INSURED'S DOB' prompt is unanswered.
"DATA",366.2,8,0)
INSURED'S SSN^'INSURED'S SSN' INCONSISTENT^0^0^0^1
"DATA",366.2,8,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,8,"D",1,0)
Inconsistency results if the 'INSURED'S SSN' prompt is unanswered.
"DATA",366.2,9,0)
INSURED'S SEX^'INSURED'S SEX' INCONSSISTENT^1^1^0^1
"DATA",366.2,9,"D",0)
^366.21^1^1^3150326^^^
"DATA",366.2,9,"D",1,0)
Inconsistency results if the 'INSURED'S SEX' prompt is not answered.
"DATA",366.2,10,0)
PT RELATIONSHIP-HIPPA^'PT RELATIONSHIP-HIPPA' INCONSISTENT^1^1^0^1
"DATA",366.2,10,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,10,"D",1,0)
Inconsistency occurs if the 'PT RELATIONSHIP-HIPPA' prompt is unanswered.
"DATA",366.2,11,0)
WHOSE INSURANCE^'WHOSE INSURANCE' INCONSISTENT^1^1^0^1
"DATA",366.2,11,"D",0)
^366.21^1^1^3150326^^^
"DATA",366.2,11,"D",1,0)
Inconsistency results if the 'WHOSE INSURANCE' prompt is unanswered.
"DATA",366.2,12,0)
EFFECTIVE DATE OF POLICY^'EFFECTIVE DATE OF POLICY' INCONSISTENT^1^1^0^1
"DATA",366.2,12,"D",0)
^366.21^1^1^3150326^^^
"DATA",366.2,12,"D",1,0)
Inconsistency results if the 'EFFECTIVE DATE OF POLICY' prompt is unanswered.
"DATA",366.2,13,0)
GROUP NAME^'Group Name' UNSPECIFIED^0^0^0^1
"DATA",366.2,13,"D",0)
^366.21^1^1^3150326^^^
"DATA",366.2,13,"D",1,0)
Inconsistency results if the 'GROUP NAME' prompt is unanswered.
"DATA",366.2,14,0)
PT. RELATIONSHIP TO INSURED^'PT. RELATIONSHIP TO  INSURED' INCONSISTENT^1^1^0^1
"DATA",366.2,14,"D",0)
^366.21^2^2^3150326^^^^
"DATA",366.2,14,"D",1,0)
Inconsistency results if the 'PT. RELATIONSHIP TO INSURED' prompt is
"DATA",366.2,14,"D",2,0)
unanswered.
"DATA",366.2,15,0)
NAME OF INSURED^'NAME OF INSURED' INCONSISTENT^4^0^0^1
"DATA",366.2,15,"D",0)
^366.21^1^1^3150326^^^^
"DATA",366.2,15,"D",1,0)
Inconsistency results if the 'NAME OF INSURED' prompt is unanswered. 
"DATA",366.2,16,0)
COMMENT - PATIENT POLICY^COMMENT - PATIENT POLICY^0^^^0
"DATA",366.2,16,"D",0)
^366.21^3^3^3150326^^^^
"DATA",366.2,16,"D",1,0)
This is a place to record a comment about this patient's policy.
"DATA",366.2,16,"D",2,0)
It is specific to this patient and to this policy.  The answer must be
"DATA",366.2,16,"D",3,0)
3 to 250 characters.
"DATA",366.2,17,0)
SEND BILL TO EMPLOYER^SEND BILL TO EMPLOYER^0^^^1
"DATA",366.2,17,"D",0)
^366.21^9^9^3150326^^^
"DATA",366.2,17,"D",1,0)
If the employer of the person who holds this policy requires that
"DATA",366.2,17,"D",2,0)
they pre-processed for the insurance policy then enter 'yes'.  You
"DATA",366.2,17,"D",3,0)
will then be allowed to enter the company name and address that
"DATA",366.2,17,"D",4,0)
these bills should be sent to.  The bills will then automatically use
"DATA",366.2,17,"D",5,0)
this address.
"DATA",366.2,17,"D",6,0)
If the employer does not require this, or unknown, enter 'NO'.  The
"DATA",366.2,17,"D",7,0)
bills will then be sent to the insurance company.
"DATA",366.2,17,"D",8,0)
If the policy is held by other than the patient then this will not be the
"DATA",366.2,17,"D",9,0)
patient's empoyer but the employer of the person who is insured.
"DATA",366.2,18,0)
SUBSCRIBER'S EMPLOYER NAME^SUBSCRIBER'S EMPLOYER NAME^0^^^1
"DATA",366.2,18,"D",0)
^366.21^2^2^3150326^^^^
"DATA",366.2,18,"D",1,0)
This is the name of the employer that will appear on the UB-04 if the
"DATA",366.2,18,"D",2,0)
bills should be sent to the employer for pre-processing.
"DATA",366.2,19,0)
EMPLOYER CLAIMS STREET ADDRESS^EMPOLYER CLAIMS STREET ADDRESS^0^^^1
"DATA",366.2,19,"D",0)
^366.21^3^3^3150326^^^
"DATA",366.2,19,"D",1,0)
This is the street addresss of the employer who should receive claims to be
"DATA",366.2,19,"D",2,0)
pre-processed before they are forwarded to the insurance carrier.
"DATA",366.2,19,"D",3,0)
The answer should be 3 to 30 characters.
"DATA",366.2,20,0)
EMPLOY CLAIM ST ADDRESS LINE 2^EMPLOY CLAIM ST ADDRESS LINE 2^0^^^1
"DATA",366.2,20,"D",0)
^366.21^3^3^3150326^^^
"DATA",366.2,20,"D",1,0)
This is line 2 of the street address for employers who pre-process
"DATA",366.2,20,"D",2,0)
insurance claims before they are forwarded to the insurance carrier 
"DATA",366.2,20,"D",3,0)
for processing.  Answer must be 3-30 characters.
"DATA",366.2,21,0)
EMPLOY CLAIM ST ADDRESS LINE 3^EMPLOY CLAIM ST ADDRESS LINE 3^0^^^1
"DATA",366.2,21,"D",0)
^366.21^3^3^3150326^^^
"DATA",366.2,21,"D",1,0)
This is the line 3 of the street address for employer's who pre-process
"DATA",366.2,21,"D",2,0)
insurance claims before they are forwarded to the insurance carrier
"DATA",366.2,21,"D",3,0)
for processing. Answer must be 3-30 characters.
"DATA",366.2,22,0)
EMPLOYER CLAIMS CITY^EMPLOYER CLAIMS CITY^0^^^1
"DATA",366.2,22,"D",0)
^366.21^4^4^3150326^^^
"DATA",366.2,22,"D",1,0)
If the employer of the person who holds this policy pre-processes
"DATA",366.2,22,"D",2,0)
insurance claims prior to forwarding to the insurance carrier enter
"DATA",366.2,22,"D",3,0)
the city that claim should be sent to.  This will be printed on the
"DATA",366.2,22,"D",4,0)
claim form.  Answer must be 3-20 characters.
"DATA",366.2,23,0)
EMPLOYER CLAIMS STATE^EMPLOYER CLAIMS STATE^0^^^1
"DATA",366.2,23,"D",0)
^366.21^4^4^3150326^^^^
"DATA",366.2,23,"D",1,0)
If the employer of the person who holds this policy pre-processes
"DATA",366.2,23,"D",2,0)
insurance claims prior to forwarding to the insurance carrier enter
"DATA",366.2,23,"D",3,0)
the state that the claim should be sent to.  This will be printed on
"DATA",366.2,23,"D",4,0)
the claim form. Answer must be 3-20 characters.
"DATA",366.2,24,0)
EMPLOYER CLAIMS ZIP CODE^EMPLOYER CLAIMS ZIP CODE^0^^^1
"DATA",366.2,24,"D",0)
^366.21^3^3^3150326^^
"DATA",366.2,24,"D",1,0)
Enter the zip code of the mailing address for this employer.
"DATA",366.2,24,"D",2,0)
Answer wiwth either the 5 digit zip code (format 12345) or with the 9
"DATA",366.2,24,"D",3,0)
digit zip code (in format 12345-6789).
"DATA",366.2,25,0)
EMPLOYER CLAIMS PHONE^EMPLOYER CLAIMS PHONE^0^^^1
"DATA",366.2,25,"D",0)
^366.21^2^2^3150326^^
"DATA",366.2,25,"D",1,0)
Enter the phone number of the employer.  This should be the phone number
"DATA",366.2,25,"D",2,0)
of the person to contact regarding insurance claims.
"DATA",366.2,26,0)
ESGHP^ESGHP^0^^^1
"DATA",366.2,26,"D",0)
^366.21^2^2^3150326^^
"DATA",366.2,26,"D",1,0)
Enter 'Yes' if this policy is part of a plan that is sponsored or
"DATA",366.2,26,"D",2,0)
provided by the insured's current or past employer.
"DATA",366.2,27,0)
INSURANCE EXPIRATION DATE^INSURANCE EXPIRATION DATE^0^^^1
"DATA",366.2,27,"D",0)
^366.21^2^2^3150326^^
"DATA",366.2,27,"D",1,0)
If this insurance policy under which this applicant is covereded expires
"DATA",366.2,27,"D",2,0)
on a specified date enter that date, otherwise, leave this field blank.
"DATA",366.2,28,0)
POLICY NOT BILLABLE^POLICY NOT BILLABLE^0^^^1
"DATA",366.2,28,"D",0)
^366.21^4^4^3150326^^
"DATA",366.2,28,"D",1,0)
This field is used primarily for CHAMPUS policies. If the patient is
"DATA",366.2,28,"D",2,0)
covered under CHAMPUS, but it is known that claims should never be
"DATA",366.2,28,"D",3,0)
submitted to the CHAMPUS Fiscal Intermediary, then entering YES in
"DATA",366.2,28,"D",4,0)
this field will cause pharmacy claims to the FI not to be created.
"DATA",366.2,29,0)
INSURED'S STREET 1^INSURED'S STREET 1^0^^^1
"DATA",366.2,29,"D",0)
^366.21^1^1^3150326^^
"DATA",366.2,29,"D",1,0)
This field contains the first street address of the policyholder.
"DATA",366.2,30,0)
INSURED'S STREET 2^INSURED'S STREET 2^0^^^1
"DATA",366.2,30,"D",0)
^366.21^1^1^3150326^^
"DATA",366.2,30,"D",1,0)
This field contains the second street address of the policyholder.
"DATA",366.2,31,0)
INSURED'S CITY^INSURED'S CITY^0^^^1
"DATA",366.2,31,"D",0)
^366.21^1^1^3150326^^
"DATA",366.2,31,"D",1,0)
This field contains the city of the policyholder.
"DATA",366.2,32,0)
INSURED'S STATE^INSURED'S STATE^0^^^1
"DATA",366.2,32,"D",0)
^366.21^1^1^3150326^^
"DATA",366.2,32,"D",1,0)
This field contains the state of the policyholder.
"DATA",366.2,33,0)
INSURED'S ZIP^INSURED'S ZIP^0^^^1
"DATA",366.2,33,"D",0)
^366.21^1^1^3150326^^
"DATA",366.2,33,"D",1,0)
This field contains the zip code of the policyholder.
"DATA",366.2,34,0)
INSURED'S PHONE^INSURED'S PHONE^0^^^1
"DATA",366.2,34,"D",0)
^366.21^1^1^3150326^^
"DATA",366.2,34,"D",1,0)
This field contains the phone number of the policyholder.
"DATA",366.2,35,0)
PATIENT ID^PATIENT ID^0^^^1
"DATA",366.2,35,"D",0)
^366.21^6^6^3150326^^
"DATA",366.2,35,"D",1,0)
This is the patient's primary ID number for this insurance company.
"DATA",366.2,35,"D",2,0)
Enter this field when the patient and the subscriber are different
"DATA",366.2,35,"D",3,0)
and the patient has been given a unique ID number.  If issued by
"DATA",366.2,35,"D",4,0)
this payer, the number should be present on the patient's insurance
"DATA",366.2,35,"D",5,0)
card.  This data will print in box 8a on the UB-04 for institutional
"DATA",366.2,35,"D",6,0)
claims when the patient and the subscriber are different.
"DATA",366.2,99,0)
CAN'T PROCESS FURTHER^DUE TO MISSING DATA CAN'T CONTINUE PROCESSING INCONSISTENCIES^0^0^0^0
"DATA",366.2,99,"D",0)
^366.21^3^3^3150326^^^^
"DATA",366.2,99,"D",1,0)
Unable to check further discrepancies because one or more of the
"DATA",366.2,99,"D",2,0)
following data elements are not defined:  Veteran, Eligibility Code
"DATA",366.2,99,"D",3,0)
and Period of Service.
"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
2.0^IB
"FIA",2,2)
1
"FIA",2,2.312)
1
"FIA",2,2.312,1.08)

"FIA",2,2.312,1.18)

"FIA",2,2.342)
0
"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^n^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,.01)

"FIA",36,36,.05)

"FIA",36,36,.111)

"FIA",36,36,.112)

"FIA",36,36,1)

"FIA",36,36,3.1)

"FIA",350.9)
IB SITE PARAMETERS
"FIA",350.9,0)
^IBE(350.9,
"FIA",350.9,0,0)
350.9I
"FIA",350.9,0,1)
y^n^p^^^^n^^n
"FIA",350.9,0,10)

"FIA",350.9,0,11)

"FIA",350.9,0,"RLRO")

"FIA",350.9,0,"VR")
2.0^IB
"FIA",350.9,350.9)
1
"FIA",350.9,350.9,100)

"FIA",350.9,350.9,101)

"FIA",350.9,350.9,102)

"FIA",350.9,350.9,103)

"FIA",355.1)
TYPE OF PLAN
"FIA",355.1,0)
^IBE(355.1,
"FIA",355.1,0,0)
355.1I
"FIA",355.1,0,1)
y^n^p^^^^n^^n
"FIA",355.1,0,10)

"FIA",355.1,0,11)

"FIA",355.1,0,"RLRO")

"FIA",355.1,0,"VR")
2.0^IB
"FIA",355.1,355.1)
1
"FIA",355.1,355.1,.01)

"FIA",355.1,355.1,.02)

"FIA",355.3)
GROUP INSURANCE PLAN
"FIA",355.3,0)
^IBA(355.3,
"FIA",355.3,0,0)
355.3IP
"FIA",355.3,0,1)
y^n^p^^^^n^^n
"FIA",355.3,0,10)

"FIA",355.3,0,11)

"FIA",355.3,0,"RLRO")

"FIA",355.3,0,"VR")
2.0^IB
"FIA",355.3,355.3)
1
"FIA",355.3,355.3,.16)

"FIA",355.3,355.3,.17)

"FIA",355.3,355.3,2.01)

"FIA",355.3,355.3,2.02)

"FIA",355.33)
INSURANCE VERIFICATION PROCESSOR
"FIA",355.33,0)
^IBA(355.33,
"FIA",355.33,0,0)
355.33AD
"FIA",355.33,0,1)
y^n^p^^^^n^^n
"FIA",355.33,0,10)

"FIA",355.33,0,11)

"FIA",355.33,0,"RLRO")

"FIA",355.33,0,"VR")
2.0^IB
"FIA",355.33,355.33)
1
"FIA",355.33,355.33,62.09)

"FIA",366)
IB SSVI PIN/HL7 PIVOT
"FIA",366,0)
^IBCN(366,
"FIA",366,0,0)
366D
"FIA",366,0,1)
y^n^f^^^^n
"FIA",366,0,10)

"FIA",366,0,11)

"FIA",366,0,"RLRO")

"FIA",366,0,"VR")
2.0^IB
"FIA",366,366)
0
"FIA",366,366.04)
0
"FIA",366,366.05)
0
"FIA",366.1)
IB INSURANCE INCONSISTENT DATA
"FIA",366.1,0)
^IBCN(366.1,
"FIA",366.1,0,0)
366.1P
"FIA",366.1,0,1)
y^n^f^^^^n
"FIA",366.1,0,10)

"FIA",366.1,0,11)

"FIA",366.1,0,"RLRO")

"FIA",366.1,0,"VR")
2.0^IB
"FIA",366.1,366.1)
0
"FIA",366.1,366.16)
0
"FIA",366.2)
IB INSURANCE CONSISTENCY ELEMENTS
"FIA",366.2,0)
^IBCN(366.2,
"FIA",366.2,0,0)
366.2
"FIA",366.2,0,1)
y^n^f^^n^^y^o^n
"FIA",366.2,0,10)

"FIA",366.2,0,11)

"FIA",366.2,0,"RLRO")

"FIA",366.2,0,"VR")
2.0^IB
"FIA",366.2,366.2)
0
"FIA",366.2,366.21)
0
"INI")
PREINST^IBY528PA
"INIT")
START^IBY528PO
"IX",2,2.342,"BB",0)
2.342^BB^x-ref by LAST EDITED BY and COMMENT DATE/TIME^R^^R^IR^I^2.342^^^^^LS
"IX",2,2.342,"BB",1)
S ^DPT(DA(2),.312,DA(1),13,"BB",$E(X(1),1,30),$E(X(2),1,30),DA)=""
"IX",2,2.342,"BB",2)
K ^DPT(DA(2),.312,DA(1),13,"BB",$E(X(1),1,30),$E(X(2),1,30),DA)
"IX",2,2.342,"BB",2.5)
K ^DPT(DA(2),.312,DA(1),13,"BB")
"IX",2,2.342,"BB",11.1,0)
^.114IA^2^2
"IX",2,2.342,"BB",11.1,1,0)
1^F^2.342^.02^30^1^F
"IX",2,2.342,"BB",11.1,2,0)
2^F^2.342^.01^30^2^F
"IX",355.1,355.1,"B",0)
355.1^B^"B" Regular Cross-Reference of .01 field^R^^F^IR^I^355.1^^^^^LS
"IX",355.1,355.1,"B",.1,0)
^^3^3^3150507^^
"IX",355.1,355.1,"B",.1,1,0)
The "B" cross-reference has been updated to allow for a full 70-character
"IX",355.1,355.1,"B",.1,2,0)
lookup instead of being limited to the first 30 characters. This is done
"IX",355.1,355.1,"B",.1,3,0)
to prevent a potential lookup error by Fileman DBS calls.
"IX",355.1,355.1,"B",1)
S ^IBE(355.1,"B",$E(X,1,70),DA)=""
"IX",355.1,355.1,"B",2)
K ^IBE(355.1,"B",$E(X,1,70),DA)
"IX",355.1,355.1,"B",2.5)
K ^IBE(355.1,"B")
"IX",355.1,355.1,"B",11.1,0)
^.114IA^1^1
"IX",355.1,355.1,"B",11.1,1,0)
1^F^355.1^.01^70^1^F
"IX",366,366,"E",0)
366^E^EVENT TYPE, DATE/TIME,EVENT POINTER^R^^R^IR^I^366^^^^^LS
"IX",366,366,"E",.1,0)
^^4^4^3150130^
"IX",366,366,"E",.1,1,0)
This index uses the Date of Event (.01), Type of Event (.04) and the 
"IX",366,366,"E",.1,2,0)
Event Pointer (.05) fields for lookup and sorting.  Type of Event is the 
"IX",366,366,"E",.1,3,0)
first subscript. Date of Event is the second subscript. Event Pointer is 
"IX",366,366,"E",.1,4,0)
the third subscript.
"IX",366,366,"E",1)
S ^IBCN(366,"E",$E(X(1),1,1),$E(X(2),1,30),$E(X(3),1,30),DA)=""
"IX",366,366,"E",2)
K ^IBCN(366,"E",$E(X(1),1,1),$E(X(2),1,30),$E(X(3),1,30),DA)
"IX",366,366,"E",2.5)
K ^IBCN(366,"E")
"IX",366,366,"E",11.1,0)
^.114IA^3^3
"IX",366,366,"E",11.1,1,0)
1^F^366^.04^1^1^F
"IX",366,366,"E",11.1,1,3)

"IX",366,366,"E",11.1,2,0)
2^F^366^.01^30^2^F
"IX",366,366,"E",11.1,2,3)

"IX",366,366,"E",11.1,3,0)
3^F^366^.05^30^3^F
"IX",366,366,"E",11.1,3,3)

"IX",366,366,"F",0)
366^F^Fields that need to be broadcasted^R^^R^IR^I^366^^^^^LS
"IX",366,366,"F",.1,0)
^^3^3^3150210^^
"IX",366,366,"F",.1,1,0)
This cross reference is used to gather the entries that need to be 
"IX",366,366,"F",.1,2,0)
broadcasted because an update has ocured to a patient's data. The is only 
"IX",366,366,"F",.1,3,0)
set when the REQUIRED TRANSMISSION field has a value of "YES".
"IX",366,366,"F",1)
S ^IBCN(366,"F",$E(X(1),1,1),DA)=""
"IX",366,366,"F",1.4)
I X(2)'=""
"IX",366,366,"F",2)
K ^IBCN(366,"F",$E(X(1),1,1),DA)
"IX",366,366,"F",2.4)
I X(2)=""
"IX",366,366,"F",2.5)
K ^IBCN(366,"F")
"IX",366,366,"F",11.1,0)
^.114IA^2^2
"IX",366,366,"F",11.1,1,0)
1^F^366^.04^1^1^F
"IX",366,366,"F",11.1,1,3)

"IX",366,366,"F",11.1,2,0)
2^F^366^.08^1^^F
"IX",366,366,"F",11.1,2,3)

"KRN",.4,1615,-1)
0^1
"KRN",.4,1615,0)
IB SSVI PIVOT^3141216.1417^@^366^^@^3141216
"KRN",.4,1615,"F",1)
.03;C1;L20~.04;C23;L5~3,.01;C30;L30;"INSURANCE COMPANY"~
"KRN",.4,1615,"F",2)
3,3.1,-355.33,^IBA(355.33,^^S I(2,0)=D2 S I(1,0)=D1 S I(0,0)=D0 S DIP(1)=$S($D(^IBCN(366,D0,3,D1,3,D2,0)):^(0),1:"") S X=$P(DIP(1),U,4),X=X  S D(0)=+X;Z;"3:"~
"KRN",.4,1615,"F",3)
3,3.1,-355.33,90.03;C62;L20;"SUBSCRIBER ID #"~3,3.1,-355.33,60.12;C85;L3;"COB"~3,3.1,.01;C90;L30;"SENDING FACILITY"~3,3.1,2;C122;L8;"DATE RECEIVED"~
"KRN",.4,1615,"H")
IB SSVI PIN/HL7 PIVOT FILE LIST
"KRN",.4,1616,-1)
0^2
"KRN",.4,1616,0)
IB SSVI PIVOT B^3141216.1414^@^366^^@^3141216
"KRN",.4,1616,"F",2)
3,3.1,.01~3,3.1,.01~3,3.1,1;C66;L11;"TRAN DATE"~
"KRN",.4,1616,"H")
IB SSVI PIN/HL7 PIVOT FILE LIST
"KRN",.401,1003,-1)
0^1
"KRN",.401,1003,0)
IB SSVI PIVOT^3141216.141^@^366^^@^3141216
"KRN",.401,1003,2,0)
^.4014^2^2
"KRN",.401,1003,2,1,0)
366.05^.01^PATIENT FACILITY SITE^@^^^^^^4
"KRN",.401,1003,2,1,1,0)
^.40141^2^2
"KRN",.401,1003,2,1,1,1,0)
366^3
"KRN",.401,1003,2,1,1,2,0)
366.04^3
"KRN",.401,1003,2,1,1,"B",366,1)

"KRN",.401,1003,2,1,1,"B",366.04,2)

"KRN",.401,1003,2,1,"ASK")
1
"KRN",.401,1003,2,1,"GET")
S DISX(1)=$P($G(^IBCN(366,D0,3,D1,3,D2,0)),U)
"KRN",.401,1003,2,1,"QCON")
I DISX(1)'=""
"KRN",.401,1003,2,1,"TXT")
PATIENT FACILITY SITE not null
"KRN",.401,1003,2,2,0)
366.05^2^RECEIVING DATE^@^^^^^^1
"KRN",.401,1003,2,2,1,0)
^.40141^2^2
"KRN",.401,1003,2,2,1,1,0)
366^3
"KRN",.401,1003,2,2,1,2,0)
366.04^3
"KRN",.401,1003,2,2,1,"B",366,1)

"KRN",.401,1003,2,2,1,"B",366.04,2)

"KRN",.401,1003,2,2,"ASK")
1
"KRN",.401,1003,2,2,"GET")
S DISX(2)=$P($G(^IBCN(366,D0,3,D1,3,D2,0)),U,3)
"KRN",.401,1003,2,2,"QCON")
I DISX(2)'=""
"KRN",.401,1003,2,2,"TXT")
RECEIVING DATE not null
"KRN",.401,1003,2,"B",366.05,1)

"KRN",.401,1003,2,"B",366.05,2)

"KRN",.401,1004,-1)
0^2
"KRN",.401,1004,0)
IB SSVI PIVOT B^3141216.1412^@^366^^@^3141216
"KRN",.401,1004,2,0)
^.4014^2^2
"KRN",.401,1004,2,1,0)
366.05^.01^PATIENT FACILITY SITE^+^^^^^^4
"KRN",.401,1004,2,1,1,0)
^.40141^2^2
"KRN",.401,1004,2,1,1,1,0)
366^3
"KRN",.401,1004,2,1,1,2,0)
366.04^3
"KRN",.401,1004,2,1,1,"B",366,1)

"KRN",.401,1004,2,1,1,"B",366.04,2)

"KRN",.401,1004,2,1,"ASK")
1
"KRN",.401,1004,2,1,"F")
99.999999^100
"KRN",.401,1004,2,1,"GET")
S DISX(1)=$P($G(^IBCN(366,D0,3,D1,3,D2,0)),U)
"KRN",.401,1004,2,1,"QCON")
I (DISX(1)]]99.999999)&(DISX(1)']]1000)
"KRN",.401,1004,2,1,"T")
1000^1000
"KRN",.401,1004,2,1,"TXT")
PATIENT FACILITY SITE from 100 to 1000
"KRN",.401,1004,2,2,0)
366.05^2^RECEIVING DATE^+^;C1;L11^^^^^1
"KRN",.401,1004,2,2,1,0)
^.40141^2^2
"KRN",.401,1004,2,2,1,1,0)
366^3
"KRN",.401,1004,2,2,1,2,0)
366.04^3
"KRN",.401,1004,2,2,1,"B",366,1)

"KRN",.401,1004,2,2,1,"B",366.04,2)

"KRN",.401,1004,2,2,"ASK")
1
"KRN",.401,1004,2,2,"F")
3110300.999999^3/1/2011^Mar 1,2011
"KRN",.401,1004,2,2,"GET")
S DISX(2)=$P($G(^IBCN(366,D0,3,D1,3,D2,0)),U,3)
"KRN",.401,1004,2,2,"QCON")
I (DISX(2)]]3110300.999999)&(DISX(2)']]3141216.24)
"KRN",.401,1004,2,2,"T")
3141216.24^T@2400^Dec 16,2014@24:00
"KRN",.401,1004,2,2,"TXT")
RECEIVING DATE from Mar 1,2011 to Dec 16,2014@24:00
"KRN",.401,1004,2,"B",366.05,1)

"KRN",.401,1004,2,"B",366.05,2)

"KRN",.402,1667,-1)
0^5
"KRN",.402,1667,0)
IBCNE GENERAL PARAMETER EDIT^3141125.0732^@^350.9^^@^3160303
"KRN",.402,1667,"DIAB",1,1,200,0)
OFFICE PHONE;REQ
"KRN",.402,1667,"DIAB",2,1,200,0)
EMAIL ADDRESS;REQ
"KRN",.402,1667,"DIAB",3,0,350.9,0)
CONTACT PERSON:
"KRN",.402,1667,"DR",1,350.9)
51.04;51.16;^200^VA(200,^^S I(0,0)=D0 S Y(1)=$S($D(^IBE(350.9,D0,51)):^(51),1:"") S X=$P(Y(1),U,16),X=X  S D(0)=+X S X=$S(D(0)>0:D(0),1:"");51.2;100;103;
"KRN",.402,1667,"DR",2,200)
.132R~;.151R~;
"KRN",.402,1747,-1)
0^6
"KRN",.402,1747,0)
IBCN PATIENT INSURANCE^3151006.1339^@^2^^@^3160223
"KRN",.402,1747,"%D",0)
^.4021^4^4^3151005^^^^
"KRN",.402,1747,"%D",1,0)
esg - 6/11/2007 - IB patch 371
"KRN",.402,1747,"%D",2,0)
 
"KRN",.402,1747,"%D",3,0)
New input template to handle the input/edit of fields in the patient 
"KRN",.402,1747,"%D",4,0)
insurance multiple (2.312) in the patient file.
"KRN",.402,1747,"DIAB",1,1,2.312,1)
NAME OF INSURED//^S X=$$PIDEF^IBCNSP1($G(IBREL),7.01,$G(IBDFN));"NAME OF SUBSCRIBER"
"KRN",.402,1747,"DIAB",1,1,2.312,5)
INSURED'S BRANCH//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.02,$G(IBDFN));"SUBSCRIBER'S BRANCH"
"KRN",.402,1747,"DIAB",1,1,2.312,6)
INSURED'S STREET 2//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.07,$G(IBDFN),1);"SUBSCRIBER'S STREET 2"
"KRN",.402,1747,"DIAB",1,1,2.312,7)
INSURED'S ZIP//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.1,$G(IBDFN),1);"SUBSCRIBER'S ZIP"
"KRN",.402,1747,"DIAB",2,1,2.312,0)
INSURANCE TYPE;"INSURANCE COMPANY"
"KRN",.402,1747,"DIAB",2,1,2.312,5)
INSURED'S RANK;"SUBSCRIBER'S RANK"
"KRN",.402,1747,"DIAB",2,1,2.312,6)
INSURED'S CITY//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.08,$G(IBDFN),1);"SUBSCRIBER'S CITY"
"KRN",.402,1747,"DIAB",2,1,2.312,7)
INSURED'S PHONE//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.11,$G(IBDFN),1);"SUBSCRIBER'S PHONE"
"KRN",.402,1747,"DIAB",3,1,2.312,3)
PATIENT ID;"PATIENT PRIMARY ID"
"KRN",.402,1747,"DIAB",3,1,2.312,5)
INSURED'S STREET 1//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.06,$G(IBDFN),1);"SUBSCRIBER'S STREET 1"
"KRN",.402,1747,"DIAB",3,1,2.312,6)
INSURED'S STATE//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.09,$G(IBDFN),1);"SUBSCRIBER'S STATE"
"KRN",.402,1747,"DIAB",4,1,2.312,0)
PT. RELATIONSHIP - HIPAA;"PT. RELATIONSHIP TO SUBSCRIBER"
"KRN",.402,1747,"DIAB",7,1,2.312,4)
INSURED'S DOB//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.01,$G(IBDFN));"SUBSCRIBER'S DOB"
"KRN",.402,1747,"DIAB",8,1,2.312,4)
INSURED'S SEX//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.12,$G(IBDFN));"SUBSCRIBER'S SEX"
"KRN",.402,1747,"DIAB",11,1,2.312,1)
SUBSCRIBER ID;"SUBSCRIBER PRIMARY ID"
"KRN",.402,1747,"DR",1,2)
.3121;
"KRN",.402,1747,"DR",2,2.312)
I '$G(IBREG)!'$$KCHK^XUSRB("IB INSURANCE SUPERVISOR") S Y="@10";.01INSURANCE COMPANY~;@10;4.03PT. RELATIONSHIP TO SUBSCRIBER~;S IBREL=X;I IBREL="" S Y="";I '$G(IBDFN) S Y="";F IBZ="VADM","VAPA" K ^UTILITY(IBZ,$J);
"KRN",.402,1747,"DR",2,2.312,1)
7.01NAME OF SUBSCRIBER~//^S X=$$PIDEF^IBCNSP1($G(IBREL),7.01,$G(IBDFN));8;3;4.01;4.02;.2;1.09//^S X=$$PIDEF^IBCNSP1($G(IBREL),1.09,$G(IBDFN));4.05;4.06;W !;7.02SUBSCRIBER PRIMARY ID~;
"KRN",.402,1747,"DR",2,2.312,2)
I '$$ASK^IBCNSP1("Do you want to enter/update Subscriber Secondary IDs") S Y="@30";S IB1ST("ID EDIT")=1;5.02;I X="" S Y="@30";5.03;I X="" S Y="@30";5.04;I X="" S Y="@30";5.05;I X="" S Y="@30";5.06;I X="" S Y="@30";5.07;@30;
"KRN",.402,1747,"DR",2,2.312,3)
I +$G(IBREL)=18 S Y="@20";W !;5.01PATIENT PRIMARY ID~;I '$$ASK^IBCNSP1("Do you want to enter/update Patient Secondary IDs") S Y="@20";S IB1ST("ID EDIT")=1;5.08;I X="" S Y="@20";5.09;I X="" S Y="@20";5.1;I X="" S Y="@20";5.11;
"KRN",.402,1747,"DR",2,2.312,4)
I X="" S Y="@20";5.12;I X="" S Y="@20";5.13;@20;W !;3.01SUBSCRIBER'S DOB~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.01,$G(IBDFN));3.12SUBSCRIBER'S SEX~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.12,$G(IBDFN));
"KRN",.402,1747,"DR",2,2.312,5)
3.02SUBSCRIBER'S BRANCH~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.02,$G(IBDFN));3.03SUBSCRIBER'S RANK~;3.06SUBSCRIBER'S STREET 1~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.06,$G(IBDFN),1);
"KRN",.402,1747,"DR",2,2.312,6)
3.07SUBSCRIBER'S STREET 2~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.07,$G(IBDFN),1);3.08SUBSCRIBER'S CITY~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.08,$G(IBDFN),1);3.09SUBSCRIBER'S STATE~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.09,$G(IBDFN),1);
"KRN",.402,1747,"DR",2,2.312,7)
3.1SUBSCRIBER'S ZIP~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.1,$G(IBDFN),1);3.11SUBSCRIBER'S PHONE~//^S X=$$PIDEF^IBCNSP1($G(IBREL),3.11,$G(IBDFN),1);
"KRN",.402,1794,-1)
0^2
"KRN",.402,1794,0)
IB SSVI ENABLE/DISABLE^3141103.1225^@^350.9^^@^3141106
"KRN",.402,1794,"DR",1,350.9)
100;
"KRN",.402,1795,-1)
0^12
"KRN",.402,1795,0)
IBCN AB ACCEPT^3160108.1016^^355.4^^^3160126
"KRN",.402,1795,"%D",0)
^.4021^3^3^3150817^^^^
"KRN",.402,1795,"%D",1,0)
New Input Template used to format the Annual Benefits screen for user 
"KRN",.402,1795,"%D",2,0)
editing. Called from routine IBCNB*. This is for the MCCF HAPE 
"KRN",.402,1795,"%D",3,0)
Eligibility Benefits and Claims project.
"KRN",.402,1795,"DIAB",1,0,355.4,1)
5.02;"  Per Admis Deduct        "
"KRN",.402,1795,"DIAB",1,0,355.4,2)
5.12;"  Other Inpt. Charges (%) "
"KRN",.402,1795,"DIAB",1,0,355.4,3)
2.15;"  Max Visits Per Year     "
"KRN",.402,1795,"DIAB",1,0,355.4,5)
5.05;"  MH Lifetime Inpt. Max   "
"KRN",.402,1795,"DIAB",1,0,355.4,6)
2.11;"  Mental Health Opt. (%)  "
"KRN",.402,1795,"DIAB",1,0,355.4,8)
3.06;"  OT Visits/Yr            "
"KRN",.402,1795,"DIAB",1,0,355.4,9)
4.08;"  IV Antibiotics Opt?     "
"KRN",.402,1795,"DIAB",2,0,355.4,1)
5.03;"  Inpt. Lifetime Max      "
"KRN",.402,1795,"DIAB",2,0,355.4,3)
2.13;"  Surgery (%)             "
"KRN",.402,1795,"DIAB",2,0,355.4,5)
5.06;"  MH Annual Inpt. Max     "
"KRN",.402,1795,"DIAB",2,0,355.4,7)
4.01;"  Annual Deductible       "
"KRN",.402,1795,"DIAB",2,0,355.4,8)
3.07;"  PT Visits/Yr            "
"KRN",.402,1795,"DIAB",2,0,355.4,9)
4.09;"  IV Antibiotics Inpt?    "
"KRN",.402,1795,"DIAB",3,0,355.4,0)
.05;"  Max Out of Pocket       "
"KRN",.402,1795,"DIAB",3,0,355.4,1)
5.04;"  Inpt. Annual Max        "
"KRN",.402,1795,"DIAB",3,0,355.4,2)
2.01;"  Annual Deductible       "
"KRN",.402,1795,"DIAB",3,0,355.4,3)
2.1;"  Emergency (%)           "
"KRN",.402,1795,"DIAB",3,0,355.4,4)
2.08;"  Dental Cov.             "
"KRN",.402,1795,"DIAB",3,0,355.4,5)
5.11;"  Mental Health Inpt. (%) "
"KRN",.402,1795,"DIAB",3,0,355.4,6)
3.01;"  Care Level              "
"KRN",.402,1795,"DIAB",3,0,355.4,7)
4.02;"  Inpatient Annual Max.   "
"KRN",.402,1795,"DIAB",3,0,355.4,8)
3.08;"  ST Visits/Yr            "
"KRN",.402,1795,"DIAB",4,0,355.4,0)
.06;"  Ambulance Coverage(%)   "
"KRN",.402,1795,"DIAB",4,0,355.4,1)
5.09;"  Room & Board (%)        "
"KRN",.402,1795,"DIAB",4,0,355.4,2)
2.02;"  Per Visit Deductible    "
"KRN",.402,1795,"DIAB",4,0,355.4,3)
2.12;"  Prescription (%)        "
"KRN",.402,1795,"DIAB",4,0,355.4,6)
3.02;"  Visits Per Year         "
"KRN",.402,1795,"DIAB",4,0,355.4,7)
4.03;"  Inpatient Lifetime Max. "
"KRN",.402,1795,"DIAB",4,0,355.4,8)
3.09;"  Med Cnslg. Visits/Yr    "
"KRN",.402,1795,"DIAB",5,0,355.4,1)
5.07;"  Drug/Alcohol Lifet. Max "
"KRN",.402,1795,"DIAB",5,0,355.4,2)
2.03;"  Lifetime Max            "
"KRN",.402,1795,"DIAB",5,0,355.4,3)
2.17;"  Adult Day Health Care?  "
"KRN",.402,1795,"DIAB",5,0,355.4,5)
2.14;"  MH Opt. Max Days/Year   "
"KRN",.402,1795,"DIAB",5,0,355.4,6)
3.03;"  Max. Days Per Year      "
"KRN",.402,1795,"DIAB",5,0,355.4,7)
4.04;"  Room and Board (%)      "
"KRN",.402,1795,"DIAB",6,0,355.4,0)
5.01;"  Annual Deductible       "
"KRN",.402,1795,"DIAB",6,0,355.4,1)
5.08;"  Drug/Alcohol Annual Max "
"KRN",.402,1795,"DIAB",6,0,355.4,2)
2.04;"  Annual Max              "
"KRN",.402,1795,"DIAB",6,0,355.4,3)
2.07;"  Dental Cov. Type        "
"KRN",.402,1795,"DIAB",6,0,355.4,4)
2.08;"  Dental Cov. ($)         "
"KRN",.402,1795,"DIAB",6,0,355.4,5)
2.05;"  MH Lifetime Opt. Max    "
"KRN",.402,1795,"DIAB",6,0,355.4,6)
3.04;"  Med. Equipment (%)      "
"KRN",.402,1795,"DIAB",6,0,355.4,7)
4.05;"  Other Inpt. Charges (%) "
"KRN",.402,1795,"DIAB",6,0,355.4,8)
4.06;"  IV Infusion Opt?        "
"KRN",.402,1795,"DIAB",7,0,355.4,1)
5.1;"  Nursing Home (%)        "
"KRN",.402,1795,"DIAB",7,0,355.4,2)
2.09;"  Visit (%)               "
"KRN",.402,1795,"DIAB",7,0,355.4,5)
2.06;"  MH Annual Opt. Max      "
"KRN",.402,1795,"DIAB",7,0,355.4,6)
3.05;"  Visit Definition        "
"KRN",.402,1795,"DIAB",7,0,355.4,8)
4.07;"  IV Infusion Inpt?       "
"KRN",.402,1795,"DIAB",9,0,355.4,4)
2.08;"  Dental Cov. (%)         "
"KRN",.402,1795,"DIAB",12,0,355.4,4)
5.14;"  MH Inpt. Max Days/Year  "
"KRN",.402,1795,"DR",1,355.4)
W !,"  Benefit Year            "_": "_$P(IBDATE,U,2);W !,"  Policy Information      "_": "_IBPOL;.05  Max Out of Pocket       ~;.06  Ambulance Coverage(%)   ~;W !,!,"Inpatient:";5.01  Annual Deductible       ~;
"KRN",.402,1795,"DR",1,355.4,1)
5.02  Per Admis Deduct        ~;5.03  Inpt. Lifetime Max      ~;5.04  Inpt. Annual Max        ~;5.09  Room & Board (%)        ~;5.07  Drug/Alcohol Lifet. Max ~;5.08  Drug/Alcohol Annual Max ~;5.1  Nursing Home (%)        ~;
"KRN",.402,1795,"DR",1,355.4,2)
5.12  Other Inpt. Charges (%) ~;W !,!,"Outpatient:";2.01  Annual Deductible       ~;2.02  Per Visit Deductible    ~;2.03  Lifetime Max            ~;2.04  Annual Max              ~;2.09  Visit (%)               ~;
"KRN",.402,1795,"DR",1,355.4,3)
2.15  Max Visits Per Year     ~;2.13  Surgery (%)             ~;2.1  Emergency (%)           ~;2.12  Prescription (%)        ~;2.17  Adult Day Health Care?  ~;2.07  Dental Cov. Type        ~;I X=0 S Y="@10";I X=1 S Y="@20";
"KRN",.402,1795,"DR",1,355.4,4)
I X=2 S Y="@30";@10;2.08  Dental Cov.             ~;S Y="@40";@20;2.08  Dental Cov. ($)         ~;S Y="@40";@30;2.08  Dental Cov. (%)         ~;@40;W !,!,"Mental Health Inpatient:";5.14  MH Inpt. Max Days/Year  ~;
"KRN",.402,1795,"DR",1,355.4,5)
5.05  MH Lifetime Inpt. Max   ~;5.06  MH Annual Inpt. Max     ~;5.11  Mental Health Inpt. (%) ~;W !,!,"Mental Health Outpatient:";2.14  MH Opt. Max Days/Year   ~;2.05  MH Lifetime Opt. Max    ~;2.06  MH Annual Opt. Max      ~;
"KRN",.402,1795,"DR",1,355.4,6)
2.11  Mental Health Opt. (%)  ~;W !,!,"Home Health Care:";3.01  Care Level              ~;3.02  Visits Per Year         ~;3.03  Max. Days Per Year      ~;3.04  Med. Equipment (%)      ~;3.05  Visit Definition        ~;
"KRN",.402,1795,"DR",1,355.4,7)
W !,!,"Hospice:";4.01  Annual Deductible       ~;4.02  Inpatient Annual Max.   ~;4.03  Inpatient Lifetime Max. ~;4.04  Room and Board (%)      ~;4.05  Other Inpt. Charges (%) ~;W !,!,"Rehabilitation:";
"KRN",.402,1795,"DR",1,355.4,8)
3.06  OT Visits/Yr            ~;3.07  PT Visits/Yr            ~;3.08  ST Visits/Yr            ~;3.09  Med Cnslg. Visits/Yr    ~;W !,!,"IV Management:";4.06  IV Infusion Opt?        ~;4.07  IV Infusion Inpt?       ~;
"KRN",.402,1795,"DR",1,355.4,9)
4.08  IV Antibiotics Opt?     ~;4.09  IV Antibiotics Inpt?    ~;
"KRN",.402,1798,-1)
0^8
"KRN",.402,1798,0)
IBCNBC CV OP EDIT^3150520.0409^^355.32^^^3151224
"KRN",.402,1798,"DIAB",1,1,355.321,0)
ALL
"KRN",.402,1798,"DIAB",2,0,355.32,0)
.04;"  Outpatient Coverage "
"KRN",.402,1798,"DIAB",3,0,355.32,0)
.03;"  Outpatient Date Cov "
"KRN",.402,1798,"DIAB",4,0,355.32,0)
2;"Outpatient Comments"
"KRN",.402,1798,"DR",1,355.32)
W !,"OUTPATIENT:";.04  Outpatient Coverage ~;.03  Outpatient Date Cov ~;2Outpatient Comments~;
"KRN",.402,1798,"DR",2,355.321)
.01
"KRN",.402,1799,-1)
0^13
"KRN",.402,1799,0)
IBCNBC CV PH EDIT^3150520.0411^^355.32^^^3151112
"KRN",.402,1799,"DIAB",1,1,355.321,0)
ALL
"KRN",.402,1799,"DIAB",2,0,355.32,0)
.04;"  Pharmacy Coverage   "
"KRN",.402,1799,"DIAB",3,0,355.32,0)
.03;"  Pharmacy Date Cov   "
"KRN",.402,1799,"DIAB",4,0,355.32,0)
2;"Pharmacy Comments"
"KRN",.402,1799,"DR",1,355.32)
W !,"PHARMACY:";.04  Pharmacy Coverage   ~;.03  Pharmacy Date Cov   ~;2Pharmacy Comments~;
"KRN",.402,1799,"DR",2,355.321)
.01
"KRN",.402,1800,-1)
0^9
"KRN",.402,1800,0)
IBCNBC CV DN EDIT^3150520.0419^^355.32^^^3151112
"KRN",.402,1800,"DIAB",1,1,355.321,0)
ALL
"KRN",.402,1800,"DIAB",2,0,355.32,0)
.04;"  Dental Coverage     "
"KRN",.402,1800,"DIAB",3,0,355.32,0)
.03;"  Dental Date Cov     "
"KRN",.402,1800,"DIAB",4,0,355.32,0)
2;"Dental Comments "
"KRN",.402,1800,"DR",1,355.32)
W !,"DENTAL:";.04  Dental Coverage     ~;.03  Dental Date Cov     ~;2Dental Comments ~;
"KRN",.402,1800,"DR",2,355.321)
.01
"KRN",.402,1801,-1)
0^10
"KRN",.402,1801,0)
IBCNBC CV MH EDIT^3150325.0551^^355.32^^^3151112
"KRN",.402,1801,"DIAB",1,1,355.321,0)
ALL
"KRN",.402,1801,"DIAB",2,0,355.32,0)
.04;" Mental Health Coverage"
"KRN",.402,1801,"DIAB",3,0,355.32,0)
.03;" Mental Health Date Cov"
"KRN",.402,1801,"DIAB",4,0,355.32,0)
2;"Mental Health Comments"
"KRN",.402,1801,"DR",1,355.32)
W !,"MENTAL HEALTH:";.04 Mental Health Coverage~;.03 Mental Health Date Cov~;2Mental Health Comments~;
"KRN",.402,1801,"DR",2,355.321)
.01
"KRN",.402,1802,-1)
0^11
"KRN",.402,1802,0)
IBCNBC CV LT EDIT^3150520.1104^^355.32^^^3151112
"KRN",.402,1802,"DIAB",1,1,355.321,0)
ALL
"KRN",.402,1802,"DIAB",2,0,355.32,0)
.04;"  Long Term Coverage "
"KRN",.402,1802,"DIAB",3,0,355.32,0)
.03;"  Long Term Date Cov "
"KRN",.402,1802,"DIAB",4,0,355.32,0)
2;"Long Term Comments"
"KRN",.402,1802,"DR",1,355.32)
W !,"LONG TERM CARE:";.04  Long Term Coverage ~;.03  Long Term Date Cov ~;2Long Term Comments~;
"KRN",.402,1802,"DR",2,355.321)
.01
"KRN",.402,1803,-1)
0^7
"KRN",.402,1803,0)
IBCNBC CV IP EDIT^3150825.1015^^355.32^^^3151224
"KRN",.402,1803,"DIAB",2,0,355.32,0)
.04;"  Inpatient Coverage  "
"KRN",.402,1803,"DIAB",3,0,355.32,0)
.03;"  Inpatient Date Cov  "
"KRN",.402,1803,"DIAB",4,0,355.32,0)
2;"Inpatient Comments"
"KRN",.402,1803,"DR",1,355.32)
W !,"INPATIENT:";.04  Inpatient Coverage  ~;.03  Inpatient Date Cov  ~;2Inpatient Comments~;
"KRN",3.8,315,-1)
0^2
"KRN",3.8,315,0)
IB SSVI^PU^y^^^^
"KRN",3.8,315,2,0)
^3.801^1^1^3151002^^^^
"KRN",3.8,315,2,1,0)
SSVI application mail group for identifying problems.
"KRN",3.8,315,3)

"KRN",3.8,315,5,0)
^3.811P
"KRN",19,2291,-1)
4^19
"KRN",19,2291,0)
IB OUTPATIENT VET REPORT
"KRN",19,2297,-1)
4^18
"KRN",19,2297,0)
IB INPATIENT VET REPORT
"KRN",19,2342,-1)
4^24
"KRN",19,2342,0)
IB OUTPUT TREND REPORT
"KRN",19,2357,-1)
4^20
"KRN",19,2357,0)
IB OUTPUT INPTS WITHOUT INS
"KRN",19,2358,-1)
4^21
"KRN",19,2358,0)
IB OUTPUT OPTS WITHOUT INS
"KRN",19,2436,-1)
2^3
"KRN",19,2436,0)
IBCN INSURANCE MGMT MENU^Patient Insurance Menu^^M^123457057^^^^^^^49^
"KRN",19,2436,10,0)
^19.01IP^44^41
"KRN",19,2436,10,26,0)
9749^EIV^
"KRN",19,2436,10,26,"^")
IBCNE IIV MENU
"KRN",19,2436,10,28,0)
8815^ID^
"KRN",19,2436,10,28,"^")
IBCN ID DUP INSURANCE ENTRIES
"KRN",19,2436,10,29,0)
2457^LC
"KRN",19,2436,10,29,"^")
IBCN LIST INACTIVE INS W/PAT
"KRN",19,2436,10,30,0)
3216^LP
"KRN",19,2436,10,30,"^")
IBCN LIST PLANS BY INS CO
"KRN",19,2436,10,32,0)
8819^NC
"KRN",19,2436,10,32,"^")
IBCN NO COVERAGE VERIFIED
"KRN",19,2436,10,33,0)
8816^NE
"KRN",19,2436,10,33,"^")
IBCN POL W/NO EFF DATE REPORT
"KRN",19,2436,10,34,0)
2460^NV
"KRN",19,2436,10,34,"^")
IBCN LIST NEW NOT VER
"KRN",19,2436,10,37,0)
8818^WO
"KRN",19,2436,10,37,"^")
IBCN PT W/WO INSURANCE REPORT
"KRN",19,2436,10,39,0)
11577^INSR^
"KRN",19,2436,10,39,"^")
IBCN INS RPTS
"KRN",19,2436,10,41,0)
11599^IFIU^
"KRN",19,2436,10,41,"^")
IBCN INTERFACILITY INS UPDATE
"KRN",19,2436,"U")
PATIENT INSURANCE MENU
"KRN",19,2457,-1)
4^34
"KRN",19,2457,0)
IBCN LIST INACTIVE INS W/PAT
"KRN",19,2460,-1)
4^33
"KRN",19,2460,0)
IBCN LIST NEW NOT VER
"KRN",19,3216,-1)
4^35
"KRN",19,3216,0)
IBCN LIST PLANS BY INS CO
"KRN",19,7595,-1)
4^22
"KRN",19,7595,0)
IBJD INTAKE INS
"KRN",19,7596,-1)
4^23
"KRN",19,7596,0)
IBJD INTAKE POL NOT VER
"KRN",19,7644,-1)
4^16
"KRN",19,7644,0)
IB OUTPUT PRE-REG SOURCE REPT
"KRN",19,8549,-1)
4^14
"KRN",19,8549,0)
IBCN OUTPUT INS BUFF ACTIVITY
"KRN",19,8550,-1)
4^15
"KRN",19,8550,0)
IBCN OUTPUT INS BUFF EMPLOYEE
"KRN",19,8815,-1)
4^32
"KRN",19,8815,0)
IBCN ID DUP INSURANCE ENTRIES
"KRN",19,8816,-1)
4^37
"KRN",19,8816,0)
IBCN POL W/NO EFF DATE REPORT
"KRN",19,8818,-1)
4^25
"KRN",19,8818,0)
IBCN PT W/WO INSURANCE REPORT
"KRN",19,8819,-1)
4^36
"KRN",19,8819,0)
IBCN NO COVERAGE VERIFIED
"KRN",19,9740,-1)
4^30
"KRN",19,9740,0)
IBCNE IIV RESPONSE REPORT
"KRN",19,9741,-1)
4^29
"KRN",19,9741,0)
IBCNE IIV PAYER REPORT
"KRN",19,9742,-1)
4^31
"KRN",19,9742,0)
IBCNE IIV STATISTICAL REPORT
"KRN",19,9749,-1)
2^8
"KRN",19,9749,0)
IBCNE IIV MENU^eIV Menu^^M^66481^^^^^^^49
"KRN",19,9749,10,0)
^19.01IP^11^11
"KRN",19,9749,10,4,0)
9741^PR
"KRN",19,9749,10,4,"^")
IBCNE IIV PAYER REPORT
"KRN",19,9749,10,5,0)
9742^SR
"KRN",19,9749,10,5,"^")
IBCNE IIV STATISTICAL REPORT
"KRN",19,9749,10,6,0)
9740^RR
"KRN",19,9749,10,6,"^")
IBCNE IIV RESPONSE REPORT
"KRN",19,9749,10,7,0)
9751^LR
"KRN",19,9749,10,7,"^")
IBCNE IIV PAYER LINK REPORT
"KRN",19,9749,10,8,0)
10226^NI
"KRN",19,9749,10,8,"^")
IBCNE POTENTIAL NEW INS FOUND
"KRN",19,9749,10,9,0)
11183^IU^
"KRN",19,9749,10,9,"^")
IBCNE EIV UPDATE REPORT
"KRN",19,9749,10,11,0)
11598^HL
"KRN",19,9749,10,11,"^")
IBCNE HL7 RESPONSE REPORT
"KRN",19,9749,"U")
EIV MENU
"KRN",19,9751,-1)
4^27
"KRN",19,9751,0)
IBCNE IIV PAYER LINK REPORT
"KRN",19,10174,-1)
4^17
"KRN",19,10174,0)
IBCEM PATIENTS W/O MEDICARE
"KRN",19,10226,-1)
4^28
"KRN",19,10226,0)
IBCNE POTENTIAL NEW INS FOUND
"KRN",19,11183,-1)
4^26
"KRN",19,11183,0)
IBCNE EIV UPDATE REPORT
"KRN",19,11577,-1)
0^13
"KRN",19,11577,0)
IBCN INS RPTS^Insurance Reports^^M^^^^^^^^INTEGRATED BILLING
"KRN",19,11577,1,0)
^19.06^1^1^3150429^^
"KRN",19,11577,1,1,0)
IB insurance reports menu
"KRN",19,11577,10,0)
^19.01IP^51^50
"KRN",19,11577,10,26,0)
8549^ABUF
"KRN",19,11577,10,26,"^")
IBCN OUTPUT INS BUFF ACTIVITY
"KRN",19,11577,10,27,0)
8550^EBUF
"KRN",19,11577,10,27,"^")
IBCN OUTPUT INS BUFF EMPLOYEE
"KRN",19,11577,10,28,0)
7644^SOUR
"KRN",19,11577,10,28,"^")
IB OUTPUT PRE-REG SOURCE REPT
"KRN",19,11577,10,29,0)
10174^WNR
"KRN",19,11577,10,29,"^")
IBCEM PATIENTS W/O MEDICARE
"KRN",19,11577,10,30,0)
2297^INSC
"KRN",19,11577,10,30,"^")
IB INPATIENT VET REPORT
"KRN",19,11577,10,31,0)
2291^ONSC
"KRN",19,11577,10,31,"^")
IB OUTPATIENT VET REPORT
"KRN",19,11577,10,32,0)
2357^UNKI
"KRN",19,11577,10,32,"^")
IB OUTPUT INPTS WITHOUT INS
"KRN",19,11577,10,33,0)
2358^UNKO
"KRN",19,11577,10,33,"^")
IB OUTPUT OPTS WITHOUT INS
"KRN",19,11577,10,34,0)
7595^IN
"KRN",19,11577,10,34,"^")
IBJD INTAKE INS
"KRN",19,11577,10,35,0)
7596^PO
"KRN",19,11577,10,35,"^")
IBJD INTAKE POL NOT VER
"KRN",19,11577,10,36,0)
2342^PT
"KRN",19,11577,10,36,"^")
IB OUTPUT TREND REPORT
"KRN",19,11577,10,37,0)
8818^WO
"KRN",19,11577,10,37,"^")
IBCN PT W/WO INSURANCE REPORT
"KRN",19,11577,10,38,0)
11183^IU
"KRN",19,11577,10,38,"^")
IBCNE EIV UPDATE REPORT
"KRN",19,11577,10,39,0)
9751^LR
"KRN",19,11577,10,39,"^")
IBCNE IIV PAYER LINK REPORT
"KRN",19,11577,10,40,0)
10226^NI
"KRN",19,11577,10,40,"^")
IBCNE POTENTIAL NEW INS FOUND
"KRN",19,11577,10,41,0)
9741^PR
"KRN",19,11577,10,41,"^")
IBCNE IIV PAYER REPORT
"KRN",19,11577,10,42,0)
9740^RR
"KRN",19,11577,10,42,"^")
IBCNE IIV RESPONSE REPORT
"KRN",19,11577,10,43,0)
9742^SR
"KRN",19,11577,10,43,"^")
IBCNE IIV STATISTICAL REPORT
"KRN",19,11577,10,44,0)
8815^ID
"KRN",19,11577,10,44,"^")
IBCN ID DUP INSURANCE ENTRIES
"KRN",19,11577,10,45,0)
2460^NV
"KRN",19,11577,10,45,"^")
IBCN LIST NEW NOT VER
"KRN",19,11577,10,46,0)
2457^LC
"KRN",19,11577,10,46,"^")
IBCN LIST INACTIVE INS W/PAT
"KRN",19,11577,10,47,0)
3216^LP
"KRN",19,11577,10,47,"^")
IBCN LIST PLANS BY INS CO
"KRN",19,11577,10,48,0)
8819^NC
"KRN",19,11577,10,48,"^")
IBCN NO COVERAGE VERIFIED
"KRN",19,11577,10,49,0)
8816^NE
"KRN",19,11577,10,49,"^")
IBCN POL W/NO EFF DATE REPORT
"KRN",19,11577,10,50,0)
11578^GP
"KRN",19,11577,10,50,"^")
IBCN GRP PLAN FILES RPT
"KRN",19,11577,10,51,0)
11581^AU
"KRN",19,11577,10,51,"^")
IBCN USER EDIT RPT
"KRN",19,11577,10.1)
Insurance Reports
"KRN",19,11577,99)
63798,48791
"KRN",19,11577,"U")
INSURANCE REPORTS
"KRN",19,11578,-1)
0^39
"KRN",19,11578,0)
IBCN GRP PLAN FILES RPT^List Group Plans without Annual Benefits^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11578,1,0)
^^4^4^3150121^
"KRN",19,11578,1,1,0)
This report will generate a list of group insurance plans by company 
"KRN",19,11578,1,2,0)
without annual benefits for the year requested.  The definition of 
"KRN",19,11578,1,3,0)
"without" is:  either missing year and/or a year (date) is entered but no 
"KRN",19,11578,1,4,0)
values within the AB have been completed.
"KRN",19,11578,10.1)
Group Plan Files Report
"KRN",19,11578,25)
IBCNGPF
"KRN",19,11578,"U")
LIST GROUP PLANS WITHOUT ANNUA
"KRN",19,11581,-1)
0^41
"KRN",19,11581,0)
IBCN USER EDIT RPT^User Edit Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11581,1,0)
^^3^3^3150428^
"KRN",19,11581,1,1,0)
The eIV User Edit Report lists the addition and edits performed by 
"KRN",19,11581,1,2,0)
specific users on a given date range to the INSURANCE COMPANY and GROUP 
"KRN",19,11581,1,3,0)
INSURANCE PLAN files.
"KRN",19,11581,25)
EN^IBCNAU
"KRN",19,11581,"U")
USER EDIT REPORT
"KRN",19,11598,-1)
0^69
"KRN",19,11598,0)
IBCNE HL7 RESPONSE REPORT^HL7 Response Report^^R^^^^^^^^INTEGRATED BILLING^y
"KRN",19,11598,1,0)
^^2^2^3150919^
"KRN",19,11598,1,1,0)
This report displays the send and receive data for insurnace buffer 
"KRN",19,11598,1,2,0)
entires created by the interface.
"KRN",19,11598,25)
EN^IBCNERPJ
"KRN",19,11598,"U")
HL7 RESPONSE REPORT
"KRN",19,11599,-1)
0^70
"KRN",19,11599,0)
IBCN INTERFACILITY INS UPDATE^Interfacility Ins Update Activity Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11599,25)
EN^IBCNVRP0
"KRN",19,11599,"U")
INTERFACILITY INS UPDATE ACTIV
"KRN",101,2394,-1)
2^14
"KRN",101,2394,0)
IBCNB LIST SCREEN MENU^List Menu^^M^123457056^^^^^^^49
"KRN",101,2394,10,0)
^101.01PA^15^14
"KRN",101,2394,10,14,0)
4577^TC^51^^^TRICARE/CHAMPVA
"KRN",101,2394,10,14,"^")
IBCNB LIST TRICARE/CHAMPVA VIEW
"KRN",101,4577,-1)
0^15
"KRN",101,4577,0)
IBCNB LIST TRICARE/CHAMPVA VIEW^TRICARE/CHAMPVA^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4577,2,0)
^101.02A^1^1
"KRN",101,4577,2,1,0)
TC
"KRN",101,4577,2,"B","TC",1)

"KRN",101,4577,4)
^^^
"KRN",101,4577,20)
K IBCNSORT D EN1^IBCNBLL(7)
"KRN",101,4577,99)
63511,35450
"KRN",409.61,331,-1)
0^1
"KRN",409.61,331,0)
IBCNB INSURANCE BUFFER PROCESS^1^^80^7^19^1^1^Company/Policy^IBCNB PROCESS SCREEN MENU^Insurance Buffer Process^1^^1
"KRN",409.61,331,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,331,"ARRAY")
 ^TMP("IBCNBLP",$J)
"KRN",409.61,331,"FNL")
D EXIT^IBCNBLP
"KRN",409.61,331,"HDR")
D HDR^IBCNBLP
"KRN",409.61,331,"HLP")
D HELP^IBCNBLP
"KRN",409.61,331,"INIT")
D INIT^IBCNBLP
"KRN",8994,3066,-1)
0^1
"KRN",8994,3066,0)
IBCN SSVI ENABLED^RPC^IBCNVRD0^1^P^^^^1
"KRN",8994,3066,1,0)
^8994.01^2^2^3160223^^
"KRN",8994,3066,1,1,0)
This RPC checks to see if the System Sharing Verified Insurance (SSVI) is 
"KRN",8994,3066,1,2,0)
enabled at a patients treating facility.
"KRN",8994,3066,2,0)
^8994.02A^2^2
"KRN",8994,3066,2,1,0)
IBCN^1^30^1
"KRN",8994,3066,2,2,0)
IBICN^1^100
"KRN",8994,3066,2,"B","IBCN",1)

"KRN",8994,3066,2,"B","IBICN",2)

"KRN",8994,3067,-1)
0^2
"KRN",8994,3067,0)
IBCN SSVI SEND^RPC^IBCNVRD1^2^P^^^^1
"KRN",8994,3067,1,0)
^8994.01^2^2^3150919^^
"KRN",8994,3067,1,1,0)
This RPC sends a patient's active insurace once verified to the patient's 
"KRN",8994,3067,1,2,0)
other treating facilities.
"KRN",8994,3067,2,0)
^8994.02A^2^2
"KRN",8994,3067,2,1,0)
GLOB^2^32000^1^2
"KRN",8994,3067,2,1,1,0)
^^1^1^3150919^
"KRN",8994,3067,2,1,1,1,0)
This is the insurance data for the patient.
"KRN",8994,3067,2,2,0)
IBICN^1^100^1^1
"KRN",8994,3067,2,"B","GLOB",1)

"KRN",8994,3067,2,"B","IBICN",2)

"KRN",8994,3067,2,"PARAMSEQ",1,2)

"KRN",8994,3067,2,"PARAMSEQ",2,1)

"MBREQ")
1
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",6,.401)
.401;6;;;EDEOUT^DIFROMSO(.401,DA,"",XPDA);FPRE^DIFROMSI(.401,"",XPDA);EPRE^DIFROMSI(.401,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.401,DA,"",XPDA);DEL^DIFROMSK(.401,"",%)
"ORD",6,.401,0)
SORT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",49,-1)
1^1
"PKG",49,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",49,20,0)
^9.402P^1^1
"PKG",49,20,1,0)
2^^IBAXDR
"PKG",49,20,1,1)

"PKG",49,20,"B",2,1)

"PKG",49,22,0)
^9.49I^1^1
"PKG",49,22,1,0)
2.0^2940321^2960627
"PKG",49,22,1,"PAH",1,0)
528^3160309
"PKG",49,22,1,"PAH",1,1,0)
^^8^8^3160309
"PKG",49,22,1,"PAH",1,1,1,0)
MCCF ENHANCEMENTS PROJECT - EIV
"PKG",49,22,1,"PAH",1,1,2,0)
 
"PKG",49,22,1,"PAH",1,1,3,0)
This patch implements changes to VistA's Integrated Billing (IB), 
"PKG",49,22,1,"PAH",1,1,4,0)
Insurance Company, and Patient Insurance File modules are requested by 
"PKG",49,22,1,"PAH",1,1,5,0)
the Veterans Health Administration (VHA) Chief Business Office (CBO)
"PKG",49,22,1,"PAH",1,1,6,0)
eBusiness Solutions Department to comply with the legislative
"PKG",49,22,1,"PAH",1,1,7,0)
changes mandated by the Health Insurance Portability and Accountability 
"PKG",49,22,1,"PAH",1,1,8,0)
Act of 1996 (HIPAA).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
94
"RTN","IBCEMMR")
0^75^B56465782
"RTN","IBCEMMR",1,0)
IBCEMMR ;ALB/ESG - IB MRA Report of Patients w/o Medicare WNR ;20-NOV-2003
"RTN","IBCEMMR",2,0)
 ;;2.0;INTEGRATED BILLING;**155,366,528**;21-MAR-94;Build 163
"RTN","IBCEMMR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEMMR",4,0)
 ; Find patients with Medicare supplemental insurance or Medigap
"RTN","IBCEMMR",5,0)
 ; insurance (etc.) but who do not have MEDICARE (WNR) on file as
"RTN","IBCEMMR",6,0)
 ; one of their insurances.
"RTN","IBCEMMR",7,0)
 ;
"RTN","IBCEMMR",8,0)
 Q
"RTN","IBCEMMR",9,0)
 ;
"RTN","IBCEMMR",10,0)
EN ; Entry Point
"RTN","IBCEMMR",11,0)
 NEW IBMSORT,IBOUT
"RTN","IBCEMMR",12,0)
 D SORT I 'IBMSORT G EX
"RTN","IBCEMMR",13,0)
 S IBOUT=$$OUT G:IBOUT="" EX
"RTN","IBCEMMR",14,0)
 D DEVICE
"RTN","IBCEMMR",15,0)
EX ; Exit Point
"RTN","IBCEMMR",16,0)
 Q
"RTN","IBCEMMR",17,0)
 ;
"RTN","IBCEMMR",18,0)
SORT ; Ask user how to sort the report
"RTN","IBCEMMR",19,0)
 NEW CH,DIR,X,Y,DIRUT,DIROUT
"RTN","IBCEMMR",20,0)
 W @IOF,!?20,"Patients Without MEDICARE (WNR) Insurance"
"RTN","IBCEMMR",21,0)
 W !!?2,"This option finds patients who do not have active MEDICARE (WNR) insurance,"
"RTN","IBCEMMR",22,0)
 W !?2,"but who do have active insurance with a Plan Type of Medigap, Carve-Out, or"
"RTN","IBCEMMR",23,0)
 W !?2,"Medicare Secondary.  In these cases, MEDICARE (WNR) should be primary."
"RTN","IBCEMMR",24,0)
 W !!?2,"The insurances for all living patients will be analyzed, but"
"RTN","IBCEMMR",25,0)
 W !?2,"you can determine how this information will be sorted."
"RTN","IBCEMMR",26,0)
 S IBMSORT=""
"RTN","IBCEMMR",27,0)
 W !
"RTN","IBCEMMR",28,0)
 S CH="1:Patient Name;2:SSN - Last 4 Digits;3:Insurance Company;"
"RTN","IBCEMMR",29,0)
 S CH=CH_"4:Type of Plan;5:Appointment Date"
"RTN","IBCEMMR",30,0)
 S DIR(0)="SO^"_CH
"RTN","IBCEMMR",31,0)
 S DIR("A")="Please enter the Sort Criteria"
"RTN","IBCEMMR",32,0)
 S DIR("B")="Patient Name"
"RTN","IBCEMMR",33,0)
 D ^DIR K DIR
"RTN","IBCEMMR",34,0)
 I 'Y G SORTX
"RTN","IBCEMMR",35,0)
 S IBMSORT=Y
"RTN","IBCEMMR",36,0)
SORTX ;
"RTN","IBCEMMR",37,0)
 Q
"RTN","IBCEMMR",38,0)
 ;
"RTN","IBCEMMR",39,0)
COMPILE ; Entry point for both background and foreground task execution
"RTN","IBCEMMR",40,0)
 ;
"RTN","IBCEMMR",41,0)
 NEW RTN,DFN,CNT,MS,DPT,PTNM,SSN,APPT,APDTE,A
"RTN","IBCEMMR",42,0)
 NEW INS,GRP,PLN,INSNM,PLNTYP,SORT,X,IBNEXT
"RTN","IBCEMMR",43,0)
 S RTN="IBCEMMR"
"RTN","IBCEMMR",44,0)
 K ^TMP($J,RTN),^("IBCEPT"),^("IBSDNEXT"),^("IBDPT"),^("IBNEXT"),^("IBLAST")
"RTN","IBCEMMR",45,0)
 S DFN=" ",CNT=0
"RTN","IBCEMMR",46,0)
 F  S DFN=$O(^DPT(DFN),-1) Q:'DFN!($G(ZTSTOP))  D
"RTN","IBCEMMR",47,0)
 . S CNT=CNT+1
"RTN","IBCEMMR",48,0)
 . I '$D(ZTQUEUED),CNT#500=0 U IO(0) W "." U IO
"RTN","IBCEMMR",49,0)
 . I $D(ZTQUEUED),CNT#500=0,$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCEMMR",50,0)
 . I $P($G(^DPT(DFN,.35)),U,1) Q           ; date of death
"RTN","IBCEMMR",51,0)
 . I '$$PTINS(DFN,.MS) Q                   ; eligible for report
"RTN","IBCEMMR",52,0)
 . S ^TMP($J,"IBNEXT",DFN)=""
"RTN","IBCEMMR",53,0)
 . S ^TMP($J,"IBLAST",DFN)=""
"RTN","IBCEMMR",54,0)
 . S ^TMP($J,"IBDPT",DFN)=""
"RTN","IBCEMMR",55,0)
 ;
"RTN","IBCEMMR",56,0)
 S X=$$NEXT^IBSDU("^TMP($J,""IBNEXT"",")
"RTN","IBCEMMR",57,0)
 S X=$$LAST^IBSDU("^TMP($J,""IBLAST"",")
"RTN","IBCEMMR",58,0)
 ;
"RTN","IBCEMMR",59,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"IBDPT",DFN)) Q:'DFN!($G(ZTSTOP))  D
"RTN","IBCEMMR",60,0)
 . I '$D(ZTQUEUED),CNT#500=0 U IO(0) W "." U IO
"RTN","IBCEMMR",61,0)
 . I $D(ZTQUEUED),CNT#500=0,$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCEMMR",62,0)
 . I '$$PTINS(DFN,.MS)  ; get MS data
"RTN","IBCEMMR",63,0)
 . S DPT=$G(^DPT(DFN,0))
"RTN","IBCEMMR",64,0)
 . S PTNM=$P(DPT,U,1)
"RTN","IBCEMMR",65,0)
 . I PTNM="" S PTNM="~UNKNOWN"
"RTN","IBCEMMR",66,0)
 . S SSN=$E($P(DPT,U,9),6,99)_" "
"RTN","IBCEMMR",67,0)
 . I SSN="" S SSN="~UNK"
"RTN","IBCEMMR",68,0)
 . S (APPT,IBNEXT)=$G(^TMP($J,"IBNEXT",DFN),"UNKNOWN")
"RTN","IBCEMMR",69,0)
 . I 'APPT S APPT=$G(^TMP($J,"IBLAST",DFN),"UNKNOWN")
"RTN","IBCEMMR",70,0)
 . S APDTE=$S(APPT:$$FMTE^XLFDT($P(APPT,"."),"2Z"),$L(IBNEXT):IBNEXT,$L(APPT):APPT,1:"N/A")
"RTN","IBCEMMR",71,0)
 . S APPT=+APPT
"RTN","IBCEMMR",72,0)
 . S A=0 F  S A=$O(MS(A)) Q:'A  D
"RTN","IBCEMMR",73,0)
 .. S INS=+$P(MS(A),U,1),GRP=+$P(MS(A),U,2)
"RTN","IBCEMMR",74,0)
 .. S PLN=+$P(MS(A),U,3)
"RTN","IBCEMMR",75,0)
 .. S INSNM=$P($G(^DIC(36,INS,0)),U,1)
"RTN","IBCEMMR",76,0)
 .. I INSNM="" S INSNM="~UNKNOWN"
"RTN","IBCEMMR",77,0)
 .. S PLNTYP=$P($G(^IBE(355.1,PLN,0)),U,1)
"RTN","IBCEMMR",78,0)
 .. I PLNTYP="" S PLNTYP="~UNKNOWN"
"RTN","IBCEMMR",79,0)
 .. S SORT=$S(IBMSORT=1:PTNM,IBMSORT=2:SSN,IBMSORT=3:INSNM,IBMSORT=4:PLNTYP,IBMSORT=5:-APPT,1:PTNM)
"RTN","IBCEMMR",80,0)
 .. S ^TMP($J,RTN,SORT,PTNM,DFN,A)=SSN_U_INSNM_U_PLNTYP_U_APDTE
"RTN","IBCEMMR",81,0)
 .. Q
"RTN","IBCEMMR",82,0)
 . Q
"RTN","IBCEMMR",83,0)
 ;
"RTN","IBCEMMR",84,0)
 I '$G(ZTSTOP) D PRINT             ; print the report
"RTN","IBCEMMR",85,0)
 D ^%ZISC                          ; close the device
"RTN","IBCEMMR",86,0)
 K ^TMP($J,RTN),^("IBCEPT"),^("IBSDNEXT"),^("IBDPT"),^("IBNEXT"),^("IBLAST") ;cleanup
"RTN","IBCEMMR",87,0)
 I $D(ZTQUEUED) S ZTREQ="@"        ; purge the task record
"RTN","IBCEMMR",88,0)
COMPX ;
"RTN","IBCEMMR",89,0)
 Q
"RTN","IBCEMMR",90,0)
 ;
"RTN","IBCEMMR",91,0)
PRINT ; print the report to the device specified
"RTN","IBCEMMR",92,0)
 N MAXCNT,CRT,PAGECNT,STOP,SORT,PTNM,DFN,A,DATA,DIR,X,Y,DIRUT,DIROUT,IBX
"RTN","IBCEMMR",93,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCEMMR",94,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCEMMR",95,0)
 S PAGECNT=0,STOP=0
"RTN","IBCEMMR",96,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCEMMR",97,0)
 ;
"RTN","IBCEMMR",98,0)
 ; Check for no data
"RTN","IBCEMMR",99,0)
 I '$D(^TMP($J,RTN)) D HEADER W !!?5,"No Data Found"
"RTN","IBCEMMR",100,0)
 ;
"RTN","IBCEMMR",101,0)
 I IBOUT="E" D HEADER
"RTN","IBCEMMR",102,0)
 ;
"RTN","IBCEMMR",103,0)
 S SORT=""
"RTN","IBCEMMR",104,0)
 F  S SORT=$O(^TMP($J,RTN,SORT)) Q:SORT=""  D  Q:STOP
"RTN","IBCEMMR",105,0)
 . S PTNM=""
"RTN","IBCEMMR",106,0)
 . F  S PTNM=$O(^TMP($J,RTN,SORT,PTNM)) Q:PTNM=""  D  Q:STOP
"RTN","IBCEMMR",107,0)
 .. S DFN=0
"RTN","IBCEMMR",108,0)
 .. F  S DFN=$O(^TMP($J,RTN,SORT,PTNM,DFN)) Q:'DFN  D  Q:STOP
"RTN","IBCEMMR",109,0)
 ... S A=0
"RTN","IBCEMMR",110,0)
 ... F  S A=$O(^TMP($J,RTN,SORT,PTNM,DFN,A)) Q:'A  D  Q:STOP
"RTN","IBCEMMR",111,0)
 .... S DATA=$G(^TMP($J,RTN,SORT,PTNM,DFN,A))
"RTN","IBCEMMR",112,0)
 .... ; Excel output
"RTN","IBCEMMR",113,0)
 .... I IBOUT="E" W !,PTNM_U_DATA Q
"RTN","IBCEMMR",114,0)
 .... ; Report output
"RTN","IBCEMMR",115,0)
 .... I $Y+1>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCEMMR",116,0)
 .... W !,$E(PTNM,1,20),?23,$P(DATA,U,1),?30,$E($P(DATA,U,2),1,20)
"RTN","IBCEMMR",117,0)
 .... W ?53,$E($P(DATA,U,3),1,13),?69,$P(DATA,U,4)
"RTN","IBCEMMR",118,0)
 .... Q
"RTN","IBCEMMR",119,0)
 ... Q
"RTN","IBCEMMR",120,0)
 .. Q
"RTN","IBCEMMR",121,0)
 . Q
"RTN","IBCEMMR",122,0)
 ;
"RTN","IBCEMMR",123,0)
 I STOP G PRINTX
"RTN","IBCEMMR",124,0)
 W !!?30,"*** End of Report ***"
"RTN","IBCEMMR",125,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEMMR",126,0)
PRINTX ;
"RTN","IBCEMMR",127,0)
 Q
"RTN","IBCEMMR",128,0)
 ;
"RTN","IBCEMMR",129,0)
HEADER ; page break and report header information
"RTN","IBCEMMR",130,0)
 NEW LIN,HDR,TAB
"RTN","IBCEMMR",131,0)
 S STOP=0
"RTN","IBCEMMR",132,0)
 ; Excel output
"RTN","IBCEMMR",133,0)
 I IBOUT="E" W "Patient Name^SSN^Insurance Company^Type of Plan^ApptDate" Q
"RTN","IBCEMMR",134,0)
 ; ask screen user if they want to continue
"RTN","IBCEMMR",135,0)
 I CRT,PAGECNT>0,'$D(ZTQUEUED) D  I STOP G HEADERX
"RTN","IBCEMMR",136,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCEMMR",137,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEMMR",138,0)
 . I 'Y S STOP=1 Q
"RTN","IBCEMMR",139,0)
 . Q
"RTN","IBCEMMR",140,0)
 ;
"RTN","IBCEMMR",141,0)
 S PAGECNT=PAGECNT+1
"RTN","IBCEMMR",142,0)
 W @IOF,!,"Patients Without MEDICARE (WNR) Insurance"
"RTN","IBCEMMR",143,0)
 S HDR="Page: "_PAGECNT
"RTN","IBCEMMR",144,0)
 S TAB=80-$L(HDR)-1
"RTN","IBCEMMR",145,0)
 W ?TAB,HDR
"RTN","IBCEMMR",146,0)
 W !,"Sorted by ",$S(IBMSORT=1:"Patient Name",IBMSORT=2:"SSN - Last 4 Digits",IBMSORT=3:"Insurance Company",IBMSORT=4:"Type of Plan",IBMSORT=5:"Appointment Date",1:"Patient Name")
"RTN","IBCEMMR",147,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,"1Z")
"RTN","IBCEMMR",148,0)
 S TAB=80-$L(HDR)-1
"RTN","IBCEMMR",149,0)
 W ?TAB,HDR
"RTN","IBCEMMR",150,0)
 W !,"Patient Name",?24,"SSN",?30,"Insurance Company"
"RTN","IBCEMMR",151,0)
 W ?53,"Type of Plan",?69,"ApptDate"
"RTN","IBCEMMR",152,0)
 W !,$$RJ^XLFSTR("",80,"=")
"RTN","IBCEMMR",153,0)
 ;
"RTN","IBCEMMR",154,0)
 ; check for stop request
"RTN","IBCEMMR",155,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HEADERX
"RTN","IBCEMMR",156,0)
 . S (ZTSTOP,STOP)=1
"RTN","IBCEMMR",157,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","IBCEMMR",158,0)
 . Q
"RTN","IBCEMMR",159,0)
 ;
"RTN","IBCEMMR",160,0)
HEADERX ;
"RTN","IBCEMMR",161,0)
 Q
"RTN","IBCEMMR",162,0)
 ;
"RTN","IBCEMMR",163,0)
PTINS(DFN,MCRSUP) ; Function to determine if a patient should be 
"RTN","IBCEMMR",164,0)
 ; included in this report or not.
"RTN","IBCEMMR",165,0)
 ; Input:  DFN - patient ien
"RTN","IBCEMMR",166,0)
 ; Output:  Function value is either 0 (don't include) or 1 (include)
"RTN","IBCEMMR",167,0)
 ;    MCRSUP array pass by reference
"RTN","IBCEMMR",168,0)
 ;    MCRSUP(seq) = [1] insurance co ien pointer to file 36
"RTN","IBCEMMR",169,0)
 ;                  [2] group pointer to file 355.3
"RTN","IBCEMMR",170,0)
 ;                  [3] type of plan pointer to file 355.1
"RTN","IBCEMMR",171,0)
 ;
"RTN","IBCEMMR",172,0)
 NEW INCLUDE,INS,A,MCRWNR,MCRZ,IBINS,IBGRP,GP,TP,PLABBR
"RTN","IBCEMMR",173,0)
 S INCLUDE=0 KILL MCRSUP
"RTN","IBCEMMR",174,0)
 I '$G(DFN) G PTINSX
"RTN","IBCEMMR",175,0)
 I '$D(^DPT(DFN)) G PTINSX
"RTN","IBCEMMR",176,0)
 D ALLWNR^IBCNS1(DFN,"INS",DT)
"RTN","IBCEMMR",177,0)
 S A=0,(MCRWNR,MCRZ)=0
"RTN","IBCEMMR",178,0)
 F  S A=$O(INS(A)) Q:'A  D  Q:MCRWNR
"RTN","IBCEMMR",179,0)
 . S IBINS=$P($G(INS(A,0)),U,1)
"RTN","IBCEMMR",180,0)
 . S IBGRP=$P($G(INS(A,0)),U,18)
"RTN","IBCEMMR",181,0)
 . I $$MCRWNR^IBEFUNC(IBINS) S MCRWNR=1 Q      ; Medicare WNR on file
"RTN","IBCEMMR",182,0)
 . S GP=$G(INS(A,355.3))                       ; group/plan info
"RTN","IBCEMMR",183,0)
 . S TP=$P(GP,U,9),PLABBR=""                   ; type of plan pointer
"RTN","IBCEMMR",184,0)
 . I TP S PLABBR=$P($G(^IBE(355.1,TP,0)),U,2)  ; plan abbreviation
"RTN","IBCEMMR",185,0)
 . I '$F(".MG.MS.COUT.","."_PLABBR_".") Q      ; check plan
"RTN","IBCEMMR",186,0)
 . S MCRZ=1                                    ; Medicare other on file
"RTN","IBCEMMR",187,0)
 . S MCRSUP(A)=IBINS_U_IBGRP_U_TP
"RTN","IBCEMMR",188,0)
 . Q
"RTN","IBCEMMR",189,0)
 ;
"RTN","IBCEMMR",190,0)
 ; If Medicare Other was found, but no Medicare WNR, then include it
"RTN","IBCEMMR",191,0)
 I MCRZ,'MCRWNR S INCLUDE=1
"RTN","IBCEMMR",192,0)
 ;
"RTN","IBCEMMR",193,0)
PTINSX ;
"RTN","IBCEMMR",194,0)
 I 'INCLUDE K MCRSUP
"RTN","IBCEMMR",195,0)
 Q INCLUDE
"RTN","IBCEMMR",196,0)
 ;
"RTN","IBCEMMR",197,0)
 ;
"RTN","IBCEMMR",198,0)
DEVICE ; This procedure displays a warning message and prompts for the 
"RTN","IBCEMMR",199,0)
 ; device on which to print the report.
"RTN","IBCEMMR",200,0)
 ;
"RTN","IBCEMMR",201,0)
 NEW ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCEMMR",202,0)
 W *7,!!!?14,"*** WARNING ***"
"RTN","IBCEMMR",203,0)
 W !?2,"This report takes a long time to compile!"
"RTN","IBCEMMR",204,0)
 W !!?2,"The active insurance coverage for all living patients is analyzed."
"RTN","IBCEMMR",205,0)
 W !!?2,"It is recommended that you queue this report to the background and"
"RTN","IBCEMMR",206,0)
 W !?2,"run it after hours or on the weekend."
"RTN","IBCEMMR",207,0)
 I IBOUT="R" W !!?2,"This report is 80 characters wide."
"RTN","IBCEMMR",208,0)
 W !
"RTN","IBCEMMR",209,0)
 ;
"RTN","IBCEMMR",210,0)
 S ZTRTN="COMPILE^IBCEMMR"
"RTN","IBCEMMR",211,0)
 S ZTDESC="Patients without MEDICARE (WNR) Insurance"
"RTN","IBCEMMR",212,0)
 S ZTSAVE("IBMSORT")="",ZTSAVE("IBOUT")=""
"RTN","IBCEMMR",213,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","IBCEMMR",214,0)
DEVICEX ;
"RTN","IBCEMMR",215,0)
 Q
"RTN","IBCEMMR",216,0)
 ;
"RTN","IBCEMMR",217,0)
OUT() ;
"RTN","IBCEMMR",218,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCEMMR",219,0)
 W !
"RTN","IBCEMMR",220,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCEMMR",221,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCEMMR",222,0)
 S DIR("B")="Report"
"RTN","IBCEMMR",223,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCEMMR",224,0)
 Q Y
"RTN","IBCN118")
0^129^B9899730
"RTN","IBCN118",1,0)
IBCN118 ;ALB/KML - TRIGGER LOGIC CALLED BY DD XREF 2.312, 1.08 ;06-APR-2015
"RTN","IBCN118",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCN118",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCN118",4,0)
 ;
"RTN","IBCN118",5,0)
TRIGSET ; trigger called from MUMPS xref from DD(2.312, 1.08)
"RTN","IBCN118",6,0)
 ; ensure that the new fields at the new COMMENT - SUBSCRIBER POLICY multiple (2.312, 1.18) get updated when 2.312, 1.08 is edited
"RTN","IBCN118",7,0)
 ;
"RTN","IBCN118",8,0)
 ; Expected variables:
"RTN","IBCN118",9,0)
 ;   DA = system wide array of iens associated with the patient record
"RTN","IBCN118",10,0)
 ;  DUZ = system wide user IEN
"RTN","IBCN118",11,0)
 ;
"RTN","IBCN118",12,0)
 N IBDT,IBDFN,IBPOLDA,IBCDA,IBPOLCOM
"RTN","IBCN118",13,0)
 ;
"RTN","IBCN118",14,0)
 S IBDFN=$G(DA(1)),IBPOLDA=$G(DA),IBPOLCOM=$P($G(^DPT(IBDFN,.312,IBPOLDA,1)),U,8)
"RTN","IBCN118",15,0)
 ;
"RTN","IBCN118",16,0)
 ; -- comments do not exist for the user so add comments
"RTN","IBCN118",17,0)
 I '$O(^DPT(IBDFN,.312,IBPOLDA,13,"C",DUZ,"")) D ADCOM(IBDFN,IBPOLDA,IBPOLCOM) Q
"RTN","IBCN118",18,0)
 ;
"RTN","IBCN118",19,0)
 ; -- get the last policy comment entered and the comment IEN
"RTN","IBCN118",20,0)
 S IBDT=$O(^DPT(IBDFN,.312,IBPOLDA,13,"B",""),-1),IBCDA=$O(^DPT(IBDFN,.312,IBPOLDA,13,"B",IBDT,""),-1)
"RTN","IBCN118",21,0)
 ;
"RTN","IBCN118",22,0)
 ; -- edit comment if comment exist for the user
"RTN","IBCN118",23,0)
 I $P(^DPT(IBDFN,.312,IBPOLDA,13,IBCDA,0),U,2)=DUZ D EDCOM(IBDFN,IBDT,IBCDA)
"RTN","IBCN118",24,0)
 Q
"RTN","IBCN118",25,0)
 ;
"RTN","IBCN118",26,0)
ADCOM(IBDFN,IBPOLDA,IBPOLCOM) ; add new patient policy comment to multiple (2.312, 1.18)
"RTN","IBCN118",27,0)
 ;
"RTN","IBCN118",28,0)
 L +^DPT(IBDFN,.312,IBPOLDA,13):5 I '$T D CMLKD Q
"RTN","IBCN118",29,0)
 ;
"RTN","IBCN118",30,0)
 N FDA,IENS,DIERR
"RTN","IBCN118",31,0)
 ;
"RTN","IBCN118",32,0)
 ; -- populate FDA array
"RTN","IBCN118",33,0)
 S IENS="+1"_","_IBPOLDA_","_IBDFN_","
"RTN","IBCN118",34,0)
 S FDA(2.342,IENS,.01)=$$NOW^XLFDT()
"RTN","IBCN118",35,0)
 S FDA(2.342,IENS,.02)=DUZ
"RTN","IBCN118",36,0)
 S FDA(2.342,IENS,.03)=IBPOLCOM
"RTN","IBCN118",37,0)
 ;
"RTN","IBCN118",38,0)
 ; -- add comments
"RTN","IBCN118",39,0)
 D UPDATE^DIE(,"FDA",,"DIERR") I $D(DIERR) W !,!,"Error...ADCOM-IBCN118...Cannot Add policy comment" D PAUSE^VALM1
"RTN","IBCN118",40,0)
 L -^DPT(IBDFN,.312,IBPOLDA,13)
"RTN","IBCN118",41,0)
 Q
"RTN","IBCN118",42,0)
 ;
"RTN","IBCN118",43,0)
EDCOM(IBDFN,IBDT,IBCDA) ; edit existing comment entry at 2.312,1.18 multiple
"RTN","IBCN118",44,0)
 ; Input:
"RTN","IBCN118",45,0)
 ;   IBDT  = date/time that comment was made
"RTN","IBCN118",46,0)
 ;   CMIEN = comment IEN
"RTN","IBCN118",47,0)
 ;
"RTN","IBCN118",48,0)
 ; -- only make edits to comments if the first 80 characters are different
"RTN","IBCN118",49,0)
 Q:$P($G(^DPT(IBDFN,.312,IBPOLDA,1)),U,8)=$E($P(^DPT(IBDFN,.312,IBPOLDA,13,IBCDA,1),U),1,80)
"RTN","IBCN118",50,0)
 ;
"RTN","IBCN118",51,0)
 N FDA,IENS,DIERR
"RTN","IBCN118",52,0)
 ;
"RTN","IBCN118",53,0)
 L +^DPT(IBDFN,.312,IBPOLDA,13):5 I '$T D CMLKD Q
"RTN","IBCN118",54,0)
 ;
"RTN","IBCN118",55,0)
 ; -- populate FDA array
"RTN","IBCN118",56,0)
 S IENS=IBCDA_","_IBPOLDA_","_IBDFN_","
"RTN","IBCN118",57,0)
 S FDA(2.342,IENS,.01)=$$NOW^XLFDT()
"RTN","IBCN118",58,0)
 S FDA(2.342,IENS,.02)=DUZ
"RTN","IBCN118",59,0)
 S FDA(2.342,IENS,.03)=$P($G(^DPT(IBDFN,.312,IBPOLDA,1)),U,8)
"RTN","IBCN118",60,0)
 ;
"RTN","IBCN118",61,0)
 ; -- update comments
"RTN","IBCN118",62,0)
 D FILE^DIE("","FDA",,"DIERR") I $D(DIERR) W !,!,"Error...EDCOM-IBCN118...Cannot edit policy comments" D PAUSE^VALM1
"RTN","IBCN118",63,0)
 L -^DPT(IBDFN,.312,IBPOLDA,13)
"RTN","IBCN118",64,0)
 Q
"RTN","IBCN118",65,0)
 ;
"RTN","IBCN118",66,0)
TRIGKIL ; remove data at 2.312, 1.18 multiple when 2.312, 1.08 gets removed
"RTN","IBCN118",67,0)
 ;
"RTN","IBCN118",68,0)
 ; -- don't kill data at 1.18 multiple since data exists at 2.313, 1.08
"RTN","IBCN118",69,0)
 Q:$P(^DPT(DA(1),.312,DA,1),U,8)]""
"RTN","IBCN118",70,0)
 ;
"RTN","IBCN118",71,0)
 N FDA,IBDT,CMIEN,IENS,DIERR
"RTN","IBCN118",72,0)
 ;
"RTN","IBCN118",73,0)
 S IBDT=$O(^DPT(DA(1),.312,DA,13,"BB",DUZ,""),-1)
"RTN","IBCN118",74,0)
 ;
"RTN","IBCN118",75,0)
 ; -- user doesn't have comments at the 1.18 multiple or the user has comments but not for the current date so quit
"RTN","IBCN118",76,0)
 Q:IBDT']""  Q:$P(IBDT,".")'=DT
"RTN","IBCN118",77,0)
 ;
"RTN","IBCN118",78,0)
 ; -- populate FDA array
"RTN","IBCN118",79,0)
 S CMIEN=$O(^DPT(DA(1),.312,DA,13,"BB",DUZ,IBDT,""),-1)
"RTN","IBCN118",80,0)
 S IENS=CMIEN_","_DA_","_DA(1)_","
"RTN","IBCN118",81,0)
 S FDA(2.342,IENS,.01)="@"
"RTN","IBCN118",82,0)
 S FDA(2.342,IENS,.02)="@"
"RTN","IBCN118",83,0)
 S FDA(2.342,IENS,.03)="@"
"RTN","IBCN118",84,0)
 ;
"RTN","IBCN118",85,0)
 ; -- update comments
"RTN","IBCN118",86,0)
 D FILE^DIE("","FDA","DIERR") I $D(DIERR) W !,!,"Error...TRIGKIL-IBCN118...Cannot Remove data from (2.312,1.18)" D PAUSE^VALM1
"RTN","IBCN118",87,0)
 Q
"RTN","IBCN118",88,0)
 ;
"RTN","IBCN118",89,0)
CMLKD ; -- write record locked message
"RTN","IBCN118",90,0)
 W !!,"Sorry, another user currently editing this entry."
"RTN","IBCN118",91,0)
 W !,"Try again later."
"RTN","IBCN118",92,0)
 D PAUSE^VALM1
"RTN","IBCN118",93,0)
 Q
"RTN","IBCNAU")
0^68^B50832462
"RTN","IBCNAU",1,0)
IBCNAU ;ALB/KML/AWC - eIV USER EDIT REPORT (DRIVER) ;6-APRIL-2015
"RTN","IBCNAU",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNAU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNAU",4,0)
 ;
"RTN","IBCNAU",5,0)
 Q
"RTN","IBCNAU",6,0)
 ;
"RTN","IBCNAU",7,0)
EN ;
"RTN","IBCNAU",8,0)
 ;
"RTN","IBCNAU",9,0)
 ; Prompt user to select report type, insurance companies, plans
"RTN","IBCNAU",10,0)
 ;
"RTN","IBCNAU",11,0)
 ; Output from user selections:
"RTN","IBCNAU",12,0)
 ;
"RTN","IBCNAU",13,0)
 ; ALLINS=0    -- user selects insurance companies
"RTN","IBCNAU",14,0)
 ; ALLINS=1    -- run report for all insurance companies
"RTN","IBCNAU",15,0)
 ; ALLPLANS=0   -- do not include Group Plans in the report
"RTN","IBCNAU",16,0)
 ; ALLPLANS=1   -- include Group Plan in the report
"RTN","IBCNAU",17,0)
 ; ALLUSERS=0  -- user ID selection (subset of users on the report that made edits)
"RTN","IBCNAU",18,0)
 ; ALLUSERS=1  -- run report that shows edits from all users
"RTN","IBCNAU",19,0)
 N I,ALLINS,ALLPLANS,ALLUSERS,PLANS,QUIT,DATE,EXCEL
"RTN","IBCNAU",20,0)
 S QUIT=0
"RTN","IBCNAU",21,0)
 ;
"RTN","IBCNAU",22,0)
 S ALLINS=$$SELI^IBCNAU1 I ALLINS<0 Q
"RTN","IBCNAU",23,0)
 S ALLPLANS=$$SELP^IBCNAU1(ALLINS,.PLANS) I ALLPLANS<0 Q
"RTN","IBCNAU",24,0)
 D GP(ALLINS,ALLPLANS,PLANS)
"RTN","IBCNAU",25,0)
 S ALLUSERS=$$SELU^IBCNAU1 I ALLUSERS<0 Q
"RTN","IBCNAU",26,0)
 ;
"RTN","IBCNAU",27,0)
 ; obtain plans for selected insurance companies
"RTN","IBCNAU",28,0)
 ;
"RTN","IBCNAU",29,0)
 D START(ALLUSERS,.DATE) I QUIT Q
"RTN","IBCNAU",30,0)
 I '$D(^TMP("IBINC",$J)) W !!,"Nothing selected!" Q
"RTN","IBCNAU",31,0)
 ;
"RTN","IBCNAU",32,0)
DEVICE ; Ask user to select device
"RTN","IBCNAU",33,0)
 ;
"RTN","IBCNAU",34,0)
 S EXCEL=$$GETTYP^IBCNAU1()
"RTN","IBCNAU",35,0)
 Q:EXCEL<0
"RTN","IBCNAU",36,0)
 I 'EXCEL D
"RTN","IBCNAU",37,0)
 . W !!,"*** You will need a 132 column printer for this report. ***",!
"RTN","IBCNAU",38,0)
 E   W !!,"To avoid undesired wrapping, please enter '0;256;999' at the 'DEVICE:' prompt."
"RTN","IBCNAU",39,0)
 N POP,%ZIS,ZTDESC,ZTRTN,ZTSAVE,ZTQUEUED,ZTREQ S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCNAU",40,0)
 I $D(IO("Q")) D  Q
"RTN","IBCNAU",41,0)
 .S ZTRTN="EN^IBCNAU2",ZTDESC="User Edit Report"
"RTN","IBCNAU",42,0)
 .F I="^TMP(""IBINC"",$J,","^TMP(""IBUSER"",$J,","ALLUSERS","ALLINS","PLANS","ALLPLANS","DATE","EXCEL" S ZTSAVE(I)=""
"RTN","IBCNAU",43,0)
 .D ^%ZTLOAD K IO("Q") D HOME^%ZIS
"RTN","IBCNAU",44,0)
 .W !!,$S($D(ZTSK):"This job has been queued as task #"_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBCNAU",45,0)
 .K ZTSK,IO("Q")
"RTN","IBCNAU",46,0)
 ;
"RTN","IBCNAU",47,0)
 ; -- compile and print report
"RTN","IBCNAU",48,0)
 U IO D EN^IBCNAU2(ALLINS,ALLPLANS,PLANS,.DATE)
"RTN","IBCNAU",49,0)
 Q
"RTN","IBCNAU",50,0)
 ;
"RTN","IBCNAU",51,0)
START(ALLUSERS,DATE) ;
"RTN","IBCNAU",52,0)
 I 'ALLUSERS D USERS Q:QUIT
"RTN","IBCNAU",53,0)
 D GETDATE(.DATE) Q:QUIT
"RTN","IBCNAU",54,0)
 Q
"RTN","IBCNAU",55,0)
 ;
"RTN","IBCNAU",56,0)
INSCO(ALLINS) ; build Insurance Company array - ^TMP("IBINC",$J)
"RTN","IBCNAU",57,0)
 N VAUTNI,VAUTSTR,VAUTVB,VAUTNALL,IBCNS,INSNAM,RECIEN,DIC,IBTXT
"RTN","IBCNAU",58,0)
 K ^TMP("IBINC",$J)
"RTN","IBCNAU",59,0)
 ;
"RTN","IBCNAU",60,0)
 ; user wants to see all insurance companies that have received edits
"RTN","IBCNAU",61,0)
 I ALLINS D  Q
"RTN","IBCNAU",62,0)
 . S INSNAM="" F  S INSNAM=$O(^DIC(36,"B",INSNAM)) Q:INSNAM=""  D
"RTN","IBCNAU",63,0)
 . . S RECIEN=0 F  S RECIEN=$O(^DIC(36,"B",INSNAM,RECIEN)) Q:'RECIEN  D
"RTN","IBCNAU",64,0)
 . . . S IBTXT=$E($P($G(^DIC(36,RECIEN,0)),"^"),1,25) I IBTXT]"" S ^TMP("IBINC",$J,IBTXT,RECIEN)=""
"RTN","IBCNAU",65,0)
 ;
"RTN","IBCNAU",66,0)
 ; user wants to see only those insurance companies that are selected.
"RTN","IBCNAU",67,0)
 S DIC="^DIC(36,",VAUTSTR="insurance company",VAUTNI=2,VAUTVB="VAUTI",VAUTNALL=1
"RTN","IBCNAU",68,0)
 K VAUTI
"RTN","IBCNAU",69,0)
 D FIRST^VAUTOMA I Y<0 S QUIT=1 Q
"RTN","IBCNAU",70,0)
 S IBCNS="" F  S IBCNS=$O(VAUTI(IBCNS)) Q:IBCNS=""  D
"RTN","IBCNAU",71,0)
 . S IBTXT=$E(VAUTI(IBCNS),1,25) I IBTXT]""  S ^TMP("IBINC",$J,IBTXT,IBCNS)=""
"RTN","IBCNAU",72,0)
 Q
"RTN","IBCNAU",73,0)
 ;
"RTN","IBCNAU",74,0)
GP(ALLINS,ALLPLANS,PLANS) ; Gather plans for all selected companies.
"RTN","IBCNAU",75,0)
 N A,B,C,IBIC,IBCNS,IBCT,IBOK,IBPN,IBSEL,VAUTI,VAUTNALL,VAUTNI,VAUTSTR,VAUTVB,IBAI,IBAIF,IBAPF,IBAPL,IBQUIT,DIC,IBTXT
"RTN","IBCNAU",76,0)
 S (IBCT,IBQUIT,IBAIF,IBAPF,IBAPL)=0,IBAI=1
"RTN","IBCNAU",77,0)
 K ^TMP("IBINC",$J)
"RTN","IBCNAU",78,0)
 ;
"RTN","IBCNAU",79,0)
 ; -- allow user to select insurance companies and select group plans
"RTN","IBCNAU",80,0)
 I 'ALLINS,'ALLPLANS,PLANS D  G GPQ
"RTN","IBCNAU",81,0)
 . S DIC="^DIC(36,",VAUTSTR="Insurance Company",VAUTNI=2,VAUTVB="VAUTI",VAUTNALL=1
"RTN","IBCNAU",82,0)
 . K VAUTI
"RTN","IBCNAU",83,0)
 . D FIRST^VAUTOMA K DIC,VAUTSTR,VAUTNI,VAUTVB,VAUTNALL Q:Y<0
"RTN","IBCNAU",84,0)
 . S IBCNS="" F  S IBCNS=$O(VAUTI(IBCNS)) Q:IBCNS=""  D
"RTN","IBCNAU",85,0)
 . . S IBTXT=$E(VAUTI(IBCNS),1,25) I IBTXT]"" S ^TMP("IBINC",$J,IBTXT,IBCNS)=""
"RTN","IBCNAU",86,0)
 . ;
"RTN","IBCNAU",87,0)
 . ; -- gather group plans for selected insurance companies
"RTN","IBCNAU",88,0)
 . S IBIC="" F  S IBIC=$O(^TMP("IBINC",$J,IBIC)) Q:IBIC=""!IBQUIT  D
"RTN","IBCNAU",89,0)
 . . S IBCNS="" F  S IBCNS=$O(^TMP("IBINC",$J,IBIC,IBCNS)) Q:IBCNS=""!(IBQUIT)  D
"RTN","IBCNAU",90,0)
 . . . S IBCT=IBCT+1
"RTN","IBCNAU",91,0)
 . . . I IBCT=1 W !,!
"RTN","IBCNAU",92,0)
 . . . E  W !
"RTN","IBCNAU",93,0)
 . . . W "Insurance Company # "_IBCT_": "_IBIC
"RTN","IBCNAU",94,0)
 . . . D OK^IBCNSM3 I 'IBOK K ^TMP("IBINC",$J,IBIC,IBCNS) S ALLINS=0 Q
"RTN","IBCNAU",95,0)
 . . . W !,"   ...building a list of plans..."
"RTN","IBCNAU",96,0)
 . . . ;
"RTN","IBCNAU",97,0)
 . . . K IBSEL,^TMP($J,"IBSEL") D LKP^IBCNSU2(IBCNS,1,1,.IBSEL,0,IBAPF) Q:IBQUIT
"RTN","IBCNAU",98,0)
 . . . I '$O(^TMP($J,"IBSEL",0)) K ^TMP("IBINC",$J,IBIC,IBCNS) S ALLINS=0 Q
"RTN","IBCNAU",99,0)
 . . . ;
"RTN","IBCNAU",100,0)
 . . . ; - set plans into an array
"RTN","IBCNAU",101,0)
 . . . S IBPN=0 F  S IBPN=$O(^TMP($J,"IBSEL",IBPN)) Q:'IBPN   I +$$GET1^DIQ(355.3,IBPN,.11,"I")=IBAPF S ^TMP("IBINC",$J,IBIC,IBCNS,IBPN)=""
"RTN","IBCNAU",102,0)
 ;
"RTN","IBCNAU",103,0)
 ;
"RTN","IBCNAU",104,0)
 ; -- allow user to select insurance companies and no group plans
"RTN","IBCNAU",105,0)
 I 'ALLINS,'ALLPLANS,'PLANS D  G GPQ
"RTN","IBCNAU",106,0)
 . S DIC="^DIC(36,"
"RTN","IBCNAU",107,0)
 . S VAUTSTR="Insurance Company",VAUTNI=2,VAUTVB="VAUTI",VAUTNALL=1
"RTN","IBCNAU",108,0)
 . K VAUTI
"RTN","IBCNAU",109,0)
 . D FIRST^VAUTOMA K DIC,VAUTSTR,VAUTNI,VAUTVB,VAUTNALL Q:Y<0
"RTN","IBCNAU",110,0)
 . S IBCNS="" F  S IBCNS=$O(VAUTI(IBCNS)) Q:IBCNS=""  S IBTXT=$E(VAUTI(IBCNS),1,25) I IBTXT]"" S ^TMP("IBINC",$J,IBTXT,IBCNS)=""
"RTN","IBCNAU",111,0)
 . ;
"RTN","IBCNAU",112,0)
 ;
"RTN","IBCNAU",113,0)
 ; -- allow user to select insurance companies and and add all group plans
"RTN","IBCNAU",114,0)
 I 'ALLINS,ALLPLANS,PLANS D  G GPQ
"RTN","IBCNAU",115,0)
 . S DIC="^DIC(36,"
"RTN","IBCNAU",116,0)
 . S VAUTSTR="Insurance Company",VAUTNI=2,VAUTVB="VAUTI",VAUTNALL=1
"RTN","IBCNAU",117,0)
 . K VAUTI
"RTN","IBCNAU",118,0)
 . D FIRST^VAUTOMA K DIC,VAUTSTR,VAUTNI,VAUTVB,VAUTNALL Q:Y<0
"RTN","IBCNAU",119,0)
 . S IBCNS="" F  S IBCNS=$O(VAUTI(IBCNS)) Q:IBCNS=""  S IBTXT=$E(VAUTI(IBCNS),1,25) I IBTXT]"" S ^TMP("IBINC",$J,IBTXT,IBCNS)="" D
"RTN","IBCNAU",120,0)
 . . S IBPN=0 F  S IBPN=$O(^IBA(355.3,"B",IBCNS,IBPN)) Q:'IBPN  I +$$GET1^DIQ(355.3,IBPN,.11,"I")=IBAPF S ^TMP("IBINC",$J,IBTXT,IBCNS,IBPN)=""
"RTN","IBCNAU",121,0)
 . ;
"RTN","IBCNAU",122,0)
 ;
"RTN","IBCNAU",123,0)
 ; - gather all companies and all group insurance plans
"RTN","IBCNAU",124,0)
 I ALLINS,ALLPLANS,PLANS D  G GPQ
"RTN","IBCNAU",125,0)
 . F A=0:0 S A=$O(^IBA(355.3,"B",A)) Q:A'>0  D
"RTN","IBCNAU",126,0)
 . . F B=0:0 S B=$O(^IBA(355.3,"B",A,B)) Q:B'>0  D
"RTN","IBCNAU",127,0)
 . . . S C=$P($G(^IBA(355.3,B,0)),U) I C']"" Q
"RTN","IBCNAU",128,0)
 . . . I +$$GET1^DIQ(36,C,.05,"I")=IBAIF S IBTXT=$E($$GET1^DIQ(36,C,.01),1,25) I IBTXT]"" S ^TMP("IBINC",$J,IBTXT,C,B)=""
"RTN","IBCNAU",129,0)
 ;
"RTN","IBCNAU",130,0)
 ;
"RTN","IBCNAU",131,0)
 ; - gather all companies - do not report group plans
"RTN","IBCNAU",132,0)
 I ALLINS,'ALLPLANS,'PLANS D
"RTN","IBCNAU",133,0)
 . F A=0:0 S A=$O(^IBA(355.3,"B",A)) Q:A'>0  D
"RTN","IBCNAU",134,0)
 . . F B=0:0 S B=$O(^IBA(355.3,"B",A,B)) Q:B'>0  D
"RTN","IBCNAU",135,0)
 . . . S C=$P($G(^IBA(355.3,B,0)),U) I C']"" Q
"RTN","IBCNAU",136,0)
 . . . I +$$GET1^DIQ(36,C,.05,"I")=IBAIF S IBTXT=$E($$GET1^DIQ(36,C,.01),1,25) I IBTXT]"" S ^TMP("IBINC",$J,IBTXT,C)=""
"RTN","IBCNAU",137,0)
 ;
"RTN","IBCNAU",138,0)
GPQ K VAUTI,^TMP($J,"IBSEL")
"RTN","IBCNAU",139,0)
 Q
"RTN","IBCNAU",140,0)
 ;
"RTN","IBCNAU",141,0)
GPLANS(ALLPLANS) ; build plan array for the insurance companies
"RTN","IBCNAU",142,0)
 ;
"RTN","IBCNAU",143,0)
 ;    Input - ALLPLANS = 1 get all group plans
"RTN","IBCNAU",144,0)
 ;                       0 allow user to select group plans
"RTN","IBCNAU",145,0)
 ;
"RTN","IBCNAU",146,0)
 N IBIC,IBCNS,IBPN,OK,QUIT
"RTN","IBCNAU",147,0)
 S QUIT=0
"RTN","IBCNAU",148,0)
 ;
"RTN","IBCNAU",149,0)
 K ^TMP("IBGPLANS",$J)
"RTN","IBCNAU",150,0)
 ;
"RTN","IBCNAU",151,0)
 S IBIC="" F  S IBIC=$O(^TMP("IBINC",$J,IBIC)) Q:IBIC=""!(QUIT)  D
"RTN","IBCNAU",152,0)
 . S IBCNS="" F  S IBCNS=$O(^TMP("IBINC",$J,IBIC,IBCNS)) Q:IBCNS=""!(QUIT)  D
"RTN","IBCNAU",153,0)
 . . ; if ALLPLANS then gather all group plans associated with each Insurance Company
"RTN","IBCNAU",154,0)
 . . I ALLPLANS S IBPN=0 F  S IBPN=$O(^IBA(355.3,"B",IBCNS,IBPN)) Q:'IBPN!(QUIT)  S ^TMP("IBINC",$J,IBIC,IBCNS,IBPN)=""
"RTN","IBCNAU",155,0)
 . . ;
"RTN","IBCNAU",156,0)
 . . ; if not ALLPLANS, have user select which group plans to report for edits
"RTN","IBCNAU",157,0)
 . . I 'ALLPLANS D
"RTN","IBCNAU",158,0)
 . . . W !!,"Insurance Company: "_IBIC
"RTN","IBCNAU",159,0)
 . . . S OK=$$OK^IBCNAU1(.QUIT) Q:QUIT  I 'OK K ^TMP("IBINC",$J,IBIC,IBCNS) S ALLINS=0 Q
"RTN","IBCNAU",160,0)
 . . . W "   ...building a list of plans..."
"RTN","IBCNAU",161,0)
 . . ; - set plans into an array
"RTN","IBCNAU",162,0)
 . . S IBPN=0 F  S IBPN=$O(^TMP("IBGPLANS",$J,IBPN)) Q:'IBPN  S ^TMP("IBINC",$J,IBIC,IBCNS,IBPN)=""
"RTN","IBCNAU",163,0)
 Q
"RTN","IBCNAU",164,0)
 ;
"RTN","IBCNAU",165,0)
USERS ; see only a selection of users who may have made edits
"RTN","IBCNAU",166,0)
 N USER,ARRAY,X
"RTN","IBCNAU",167,0)
 K ^TMP("IBUSER",$J)
"RTN","IBCNAU",168,0)
 ; $$LOOKUP^XUSER - supported API - IA#2343
"RTN","IBCNAU",169,0)
 ; upon success $$LOOKUP funtion returns string: DUZ^NEW PERSON NAME
"RTN","IBCNAU",170,0)
 F  S USER=$$LOOKUP^XUSER Q:USER<0  S ^TMP("IBUSER",$J,$P(USER,U))=$P(USER,U,2)
"RTN","IBCNAU",171,0)
 ; user purposely quits
"RTN","IBCNAU",172,0)
 I X="^" S QUIT=1 Q
"RTN","IBCNAU",173,0)
 ; user didn't select any users and didn't purposely quit so list edits made by all users
"RTN","IBCNAU",174,0)
 I '$D(^TMP("IBUSER",$J)) S ALLUSERS=1
"RTN","IBCNAU",175,0)
 Q
"RTN","IBCNAU",176,0)
 ;
"RTN","IBCNAU",177,0)
GETDATE(DATE) ; show edits within a date range
"RTN","IBCNAU",178,0)
 ; input - DATE is array holding the start and end date
"RTN","IBCNAU",179,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNAU",180,0)
 S DIR(0)="D^::EX"
"RTN","IBCNAU",181,0)
 S DIR("A")="Start date"
"RTN","IBCNAU",182,0)
 W ! D ^DIR W ! I Y<0!$D(DIRUT) S QUIT=1 Q
"RTN","IBCNAU",183,0)
 S DATE("START")=Y
"RTN","IBCNAU",184,0)
 ; End date
"RTN","IBCNAU",185,0)
GETDATE1 ;
"RTN","IBCNAU",186,0)
 K DIR("A") S DIR("A")="  End date"
"RTN","IBCNAU",187,0)
 D ^DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBCNAU",188,0)
 I Y<DATE("START") W !,"     End Date must not precede the Start Date." G GETDATE1
"RTN","IBCNAU",189,0)
 S DATE("END")=Y
"RTN","IBCNAU",190,0)
 Q
"RTN","IBCNAU1")
0^69^B17152074
"RTN","IBCNAU1",1,0)
IBCNAU1 ;ALB/KML/AWC - eIV USER EDIT REPORT (REPORT FILTER SELECTION) ;6-APRIL-2015
"RTN","IBCNAU1",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNAU1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNAU1",4,0)
 ;
"RTN","IBCNAU1",5,0)
 ;
"RTN","IBCNAU1",6,0)
 Q
"RTN","IBCNAU1",7,0)
 ;
"RTN","IBCNAU1",8,0)
SELI() ; Prompt user to select all or subset of insurance companies 
"RTN","IBCNAU1",9,0)
 ; Count ins. companies with plans
"RTN","IBCNAU1",10,0)
 ;
"RTN","IBCNAU1",11,0)
 N IBV1,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNAU1",12,0)
 W !,!,"Insurance Company Selection:"
"RTN","IBCNAU1",13,0)
 S DIR(0)="SA^1:Report all Insurance Companies;2:Report Insurance Companies that are selected"
"RTN","IBCNAU1",14,0)
 S DIR("A",1)="1. Report User Edits for all "_$P(^DIC(36,0),U,4)_" Insurance Companies"
"RTN","IBCNAU1",15,0)
 S DIR("A",2)="2. Report User Edits for selected Insurance Companies"
"RTN","IBCNAU1",16,0)
 S DIR("A")="     ENTER 1 or 2:  "
"RTN","IBCNAU1",17,0)
 S DIR("?",1)="Enter '1' if edits from all Insurance Companies are to be reported."
"RTN","IBCNAU1",18,0)
 S DIR("?")="Enter '2' if you want to select the Insurance Company(s) to be reported."
"RTN","IBCNAU1",19,0)
 D ^DIR I Y<0!$D(DIRUT) S IBV1=-1 G SELIQ
"RTN","IBCNAU1",20,0)
 S IBV1=(+Y=1)
"RTN","IBCNAU1",21,0)
SELIQ Q IBV1
"RTN","IBCNAU1",22,0)
 ;
"RTN","IBCNAU1",23,0)
SELP(ALLINS,PLANS) ; Prompt user if Group Plans is to be on the report
"RTN","IBCNAU1",24,0)
 ; input/output - PLANS passed by reference. Returned with 1 or 0
"RTN","IBCNAU1",25,0)
 ;   function output returns 1 or 0 in IBV2
"RTN","IBCNAU1",26,0)
 ;
"RTN","IBCNAU1",27,0)
 W !,!,"Group Plan Selection:"
"RTN","IBCNAU1",28,0)
 N IBV2,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNAU1",29,0)
 S DIR(0)="YA"
"RTN","IBCNAU1",30,0)
 S DIR("A")="Do you want to report any edits made to Group Plans (Y/N)? "
"RTN","IBCNAU1",31,0)
 D ^DIR I Y<0!$D(DIRUT) S IBV2=-1 G SELPQ
"RTN","IBCNAU1",32,0)
 ; user does not want to report Group Plan edits
"RTN","IBCNAU1",33,0)
 I 'Y S (PLANS,IBV2)=+Y G SELPQ
"RTN","IBCNAU1",34,0)
 ;
"RTN","IBCNAU1",35,0)
 ; -- if report all insurance companies - quit and report to include group plans or not
"RTN","IBCNAU1",36,0)
 I ALLINS S IBV2=(+Y=1),PLANS=1 Q IBV2
"RTN","IBCNAU1",37,0)
 ;
"RTN","IBCNAU1",38,0)
 ; if group plan edits are to be reported, user needs to choose between all group plans or some group plans
"RTN","IBCNAU1",39,0)
 S DIR(0)="SA^1:Report all Group Insurance Plans;2:Report Group Insurance Plans that are selected"
"RTN","IBCNAU1",40,0)
 S DIR("A",1)="1. Report User Edits for all Group Insurance Plans"
"RTN","IBCNAU1",41,0)
 S DIR("A",2)="2. Report User Edits for selected Group Insurance Plans"
"RTN","IBCNAU1",42,0)
 S DIR("A")="     ENTER 1 or 2:  "
"RTN","IBCNAU1",43,0)
 S DIR("?")="Enter '1' if edits from all Group Gnsurance Plans are to be reported. Enter '2' if edits from selected Group Insurance Plans are to be reported."
"RTN","IBCNAU1",44,0)
 ;
"RTN","IBCNAU1",45,0)
 D ^DIR I Y<0!$D(DIRUT) S IBV2=-1 G SELPQ
"RTN","IBCNAU1",46,0)
 S IBV2=(+Y=1),PLANS=1
"RTN","IBCNAU1",47,0)
SELPQ Q IBV2
"RTN","IBCNAU1",48,0)
 ;
"RTN","IBCNAU1",49,0)
SELU() ; prompt user to select user id
"RTN","IBCNAU1",50,0)
 W !,!,"User Selection:"
"RTN","IBCNAU1",51,0)
 N DIR,IBV3,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNAU1",52,0)
 S DIR(0)="SA^1:All Users;2:Specified Users"
"RTN","IBCNAU1",53,0)
 S DIR("A",1)="1. All User IDs"
"RTN","IBCNAU1",54,0)
 S DIR("A",2)="2. Select One or Multiple User IDs"
"RTN","IBCNAU1",55,0)
 S DIR("A")="     ENTER 1 or 2:  "
"RTN","IBCNAU1",56,0)
 S DIR("?")="Enter '1' if edits from all users are to be report. Enter '2' if edits from selected users are to be reported."
"RTN","IBCNAU1",57,0)
 D ^DIR I Y<0!$D(DIRUT) S IBV3=-1 G SELUQ
"RTN","IBCNAU1",58,0)
 S IBV3=(+Y=1)
"RTN","IBCNAU1",59,0)
SELUQ Q IBV3
"RTN","IBCNAU1",60,0)
 ;
"RTN","IBCNAU1",61,0)
SELDTS() ;
"RTN","IBCNAU1",62,0)
 N DIR,IBV3,DIROUT,DIRUT,DTOUT,DUOUT,X,Y,IBV4
"RTN","IBCNAU1",63,0)
 W !,"Date Selection",!
"RTN","IBCNAU1",64,0)
 S DIR(0)="SA^1:All Dates;2:Date Range"
"RTN","IBCNAU1",65,0)
 S DIR("A",1)="1. All Dates"
"RTN","IBCNAU1",66,0)
 S DIR("A",2)="2. Date Range"
"RTN","IBCNAU1",67,0)
 S DIR("A")="     ENTER 1 or 2:  "
"RTN","IBCNAU1",68,0)
 S DIR("?")="Enter '1' if edits for all dates are to be reported. Enter '2' if edits are to be reported using a specified date range."
"RTN","IBCNAU1",69,0)
 D ^DIR I Y<0!$D(DIRUT) S IBV4=-1 G SELDTQ
"RTN","IBCNAU1",70,0)
 S IBV4=(+Y=1)
"RTN","IBCNAU1",71,0)
SELDTQ Q IBV4
"RTN","IBCNAU1",72,0)
  ;
"RTN","IBCNAU1",73,0)
GETTYP() ; Get display/output type
"RTN","IBCNAU1",74,0)
 ; RETURNS  : Output destination (0=Display; 1=MS Excel)
"RTN","IBCNAU1",75,0)
 ; LOCAL VARIABLES :
"RTN","IBCNAU1",76,0)
 ; DIR,DUOUT - Standard FileMan variables
"RTN","IBCNAU1",77,0)
 ; Y         - User input
"RTN","IBCNAU1",78,0)
 N DIR,DUOUT,DIRUT,Y
"RTN","IBCNAU1",79,0)
 S DIR(0)="Y"
"RTN","IBCNAU1",80,0)
 S DIR("A")="Export to Microsoft Excel (Y/N): "
"RTN","IBCNAU1",81,0)
 S DIR("B")="NO"
"RTN","IBCNAU1",82,0)
 D ^DIR K DIR
"RTN","IBCNAU1",83,0)
 I $D(DUOUT)!$D(DIRUT) S Y=-1
"RTN","IBCNAU1",84,0)
 Q Y
"RTN","IBCNAU1",85,0)
 ;
"RTN","IBCNAU1",86,0)
OK(QUIT) ; -- ask okay
"RTN","IBCNAU1",87,0)
 N DIR,Y,X
"RTN","IBCNAU1",88,0)
 S DIR(0)="Y",DIR("A")="         ...OK",DIR("B")="YES" D ^DIR
"RTN","IBCNAU1",89,0)
 I $D(DUOUT)!$D(DIRUT) S QUIT=1
"RTN","IBCNAU1",90,0)
 Q Y
"RTN","IBCNAU1",91,0)
 ;
"RTN","IBCNAU1",92,0)
LKP(IBCNS,QUIT) ;Build the list of plans.
"RTN","IBCNAU1",93,0)
 N IBP,IB0,X,GNAME,OK
"RTN","IBCNAU1",94,0)
 S IBP=0 F  S IBP=$O(^IBA(355.3,"B",IBCNS,IBP)) Q:'IBP  Q:QUIT  D
"RTN","IBCNAU1",95,0)
 . S IB0=$G(^IBA(355.3,IBP,0)),GNAME=$G(^IBA(355.3,IBP,2),U)
"RTN","IBCNAU1",96,0)
 . I $P(IB0,"^",11) Q  ;      plan is inactive
"RTN","IBCNAU1",97,0)
 . W !!,"Group Plan: "_GNAME
"RTN","IBCNAU1",98,0)
 . S OK=$$OK(.QUIT)
"RTN","IBCNAU1",99,0)
 . Q:QUIT
"RTN","IBCNAU1",100,0)
 . I OK S ^TMP("IBGPLANS",$J,IBP)=""
"RTN","IBCNAU1",101,0)
 Q
"RTN","IBCNAU2")
0^70^B24403828
"RTN","IBCNAU2",1,0)
IBCNAU2 ;ALB/KML/AWC - eIV USER EDIT REPORT (COMPILE) ;6-APRIL-2015
"RTN","IBCNAU2",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNAU2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNAU2",4,0)
 ;
"RTN","IBCNAU2",5,0)
 ; Queued Entry Point for Report.
"RTN","IBCNAU2",6,0)
 ;  Required variable input:  ALLUSERS, ALLINS, PLANS, ALLPLANS, EXCEL
"RTN","IBCNAU2",7,0)
 ;  ^TMP("IBINC",$J) 
"RTN","IBCNAU2",8,0)
 ;  ^TMP("IBUSER",$J) 
"RTN","IBCNAU2",9,0)
 ;  DATE("START") and DATE("END") required array elements if all dates not selected
"RTN","IBCNAU2",10,0)
 ;
"RTN","IBCNAU2",11,0)
 Q
"RTN","IBCNAU2",12,0)
 ;
"RTN","IBCNAU2",13,0)
EN(ALLINS,ALLPLANS,PLANS,DATE) ;
"RTN","IBCNAU2",14,0)
 N LN
"RTN","IBCNAU2",15,0)
 S LN=0
"RTN","IBCNAU2",16,0)
 ; - compile report data
"RTN","IBCNAU2",17,0)
 K ^TMP("IBPR",$J)
"RTN","IBCNAU2",18,0)
 ;
"RTN","IBCNAU2",19,0)
 ; - user wanted all companies,PLANS, and users
"RTN","IBCNAU2",20,0)
 I PLANS D PLANS(ALLUSERS,.LN,.DATE)
"RTN","IBCNAU2",21,0)
 E  D NOPLANS(ALLUSERS,.LN,.DATE)
"RTN","IBCNAU2",22,0)
 ;
"RTN","IBCNAU2",23,0)
PRINT ; - print report
"RTN","IBCNAU2",24,0)
 D EN^IBCNAU3(ALLPLANS,PLANS)
"RTN","IBCNAU2",25,0)
 ;
"RTN","IBCNAU2",26,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCNAU2",27,0)
 D ^%ZISC
"RTN","IBCNAU2",28,0)
 Q
"RTN","IBCNAU2",29,0)
 ;
"RTN","IBCNAU2",30,0)
PLANS(ALLUSERS,LN,DATE) ;
"RTN","IBCNAU2",31,0)
 ; report will include edits to files 36 and 355.3
"RTN","IBCNAU2",32,0)
 N INSNAME,INSIEN,PLIEN,Z
"RTN","IBCNAU2",33,0)
 S INSNAME="" F  S INSNAME=$O(^TMP("IBINC",$J,INSNAME)) Q:INSNAME=""  D
"RTN","IBCNAU2",34,0)
 . S INSIEN=0 F  S INSIEN=$O(^TMP("IBINC",$J,INSNAME,INSIEN)) Q:'INSIEN  D
"RTN","IBCNAU2",35,0)
 . . S PLIEN=0 F  S PLIEN=$O(^TMP("IBINC",$J,INSNAME,INSIEN,PLIEN)) Q:'PLIEN  D
"RTN","IBCNAU2",36,0)
 . . . I ALLUSERS D ALLUSERS(INSNAME,INSIEN,PLIEN,PLANS,.LN,.DATE,.Z) Q
"RTN","IBCNAU2",37,0)
 . . . I 'ALLUSERS D SELUSERS(INSNAME,INSIEN,PLIEN,.DATE,.Z)
"RTN","IBCNAU2",38,0)
 Q
"RTN","IBCNAU2",39,0)
 ;
"RTN","IBCNAU2",40,0)
NOPLANS(ALLUSERS,LN,DATE) ;  only report edits made to INSURANCE COMPANY file (36)
"RTN","IBCNAU2",41,0)
 N INSNAME,INSIEN,PLIEN
"RTN","IBCNAU2",42,0)
 S PLIEN=0
"RTN","IBCNAU2",43,0)
 ;
"RTN","IBCNAU2",44,0)
 S INSNAME="" F  S INSNAME=$O(^TMP("IBINC",$J,INSNAME)) Q:INSNAME=""  D
"RTN","IBCNAU2",45,0)
 . S INSIEN=0 F  S INSIEN=$O(^TMP("IBINC",$J,INSNAME,INSIEN)) Q:'INSIEN  D
"RTN","IBCNAU2",46,0)
 . . I ALLUSERS D ALLUSERS(INSNAME,INSIEN,0,0,.LN,.DATE,.Z)
"RTN","IBCNAU2",47,0)
 . . I 'ALLUSERS D SELUSERS(INSNAME,INSIEN,PLIEN,.DATE,.Z)
"RTN","IBCNAU2",48,0)
 Q
"RTN","IBCNAU2",49,0)
 ;
"RTN","IBCNAU2",50,0)
ALLUSERS(INSNAME,INSIEN,PLIEN,PLANS,LN,DATE,Z) ; procedure to gather edits for All Users within a date range
"RTN","IBCNAU2",51,0)
 ; INSNAME = name of insurance company (36, .01)
"RTN","IBCNAU2",52,0)
 ; INSIEN = ien of INSURANCE COMPANY (36) entry
"RTN","IBCNAU2",53,0)
 ; PLIEN = ien of GROUP iNSURANCE PLAN (355.3) entry
"RTN","IBCNAU2",54,0)
 ;         OR equal to 0 if group plans or not to be reported
"RTN","IBCNAU2",55,0)
 ; DATE = date range for edits (DATE("START") and DATE("END"))
"RTN","IBCNAU2",56,0)
 ; Z = input and output array
"RTN","IBCNAU2",57,0)
 K Z
"RTN","IBCNAU2",58,0)
 N DIAIEN,SUB,DIA0,FIELD ;LN
"RTN","IBCNAU2",59,0)
 S SUB=$S(PLIEN:1,1:0)
"RTN","IBCNAU2",60,0)
 S DIAIEN=0
"RTN","IBCNAU2",61,0)
 S Z("PLAN")=$S(PLIEN:$P($G(^IBA(355.3,PLIEN,2)),U),1:"NO PLANS SELECTED")
"RTN","IBCNAU2",62,0)
 S Z("INSNAME")=INSNAME
"RTN","IBCNAU2",63,0)
 ; INSURANCE COMPANY AUDITS
"RTN","IBCNAU2",64,0)
 F  S DIAIEN=$O(^DIA(36,"B",INSIEN,DIAIEN)) Q:'DIAIEN  D
"RTN","IBCNAU2",65,0)
 . S DIA0=^DIA(36,DIAIEN,0),DATE=$P($P(DIA0,U,2),".")
"RTN","IBCNAU2",66,0)
 . Q:DATE<DATE("START")  Q:DATE>DATE("END")   ; audit record outside date range
"RTN","IBCNAU2",67,0)
 . S FIELD=$S($P(DIA0,U,3)=".01":"INSURANCE COMPANY",1:$P(^DD(36,$P(DIA0,U,3),0),U))
"RTN","IBCNAU2",68,0)
 . S Z("DATE")=$E($P(DIA0,U,2),1,12),Z("FIELD")=FIELD,Z("USER")=$P(DIA0,U,4)
"RTN","IBCNAU2",69,0)
 . S Z("OLDVAL")=$G(^DIA(36,DIAIEN,2)),Z("NEWVAL")=$G(^DIA(36,DIAIEN,3))
"RTN","IBCNAU2",70,0)
 . S Z("PLAN")=$S(PLIEN:$P($G(^IBA(355.3,PLIEN,2)),U),1:"NO PLANS SELECTED")
"RTN","IBCNAU2",71,0)
 . S Z("INSNAME")=INSNAME
"RTN","IBCNAU2",72,0)
 . D ADDLN(SUB,.LN,.Z)
"RTN","IBCNAU2",73,0)
 ;
"RTN","IBCNAU2",74,0)
 ; if GROUP PLAN edits are to be reported then proceed with gathering edits from file 355.3, 355.32, 355.4
"RTN","IBCNAU2",75,0)
 ; GROUP INSURANCE PLAN AUDITS
"RTN","IBCNAU2",76,0)
 I PLANS D
"RTN","IBCNAU2",77,0)
 . F  S DIAIEN=$O(^DIA(355.3,"B",PLIEN,DIAIEN)) Q:'DIAIEN  D
"RTN","IBCNAU2",78,0)
 . . S DIA0=^DIA(355.3,DIAIEN,0),DATE=$P($P(DIA0,U,2),".")
"RTN","IBCNAU2",79,0)
 . . Q:DATE<DATE("START")  Q:DATE>DATE("END")   ; audit record outside date range
"RTN","IBCNAU2",80,0)
 . . S FIELD=$P(^DD(355.3,$P(DIA0,U,3),0),U)
"RTN","IBCNAU2",81,0)
 . . S Z("DATE")=$E($P(DIA0,U,2),1,12),Z("FIELD")=FIELD,Z("USER")=$P(DIA0,U,4)
"RTN","IBCNAU2",82,0)
 . . S Z("OLDVAL")=$G(^DIA(355.3,DIAIEN,2)),Z("NEWVAL")=$G(^DIA(355.3,DIAIEN,3))
"RTN","IBCNAU2",83,0)
 . . D ADDLN(SUB,.LN,.Z)
"RTN","IBCNAU2",84,0)
 Q
"RTN","IBCNAU2",85,0)
 ;
"RTN","IBCNAU2",86,0)
SELUSERS(INSNAME,INSIEN,PLIEN,DATE,Z) ; procedure to gather edits for selected Users for a date range
"RTN","IBCNAU2",87,0)
 K Z
"RTN","IBCNAU2",88,0)
 N DIAIEN,LN,SUB,DIA0,FIELD,USER
"RTN","IBCNAU2",89,0)
 S SUB=$S(PLIEN:1,1:0)
"RTN","IBCNAU2",90,0)
 S (LN,DIAIEN)=0
"RTN","IBCNAU2",91,0)
 S Z("PLAN")=$S(PLIEN:$P($G(^IBA(355.3,PLIEN,2)),U),1:"NO PLANS SELECTED")
"RTN","IBCNAU2",92,0)
 S Z("INSNAME")=INSNAME
"RTN","IBCNAU2",93,0)
 ; INSURANCE COMPANY AUDITS
"RTN","IBCNAU2",94,0)
 F  S DIAIEN=$O(^DIA(36,"B",INSIEN,DIAIEN)) Q:'DIAIEN  D
"RTN","IBCNAU2",95,0)
 . S DIA0=^DIA(36,DIAIEN,0),DATE=$P($P(DIA0,U,2),"."),USER=$P(DIA0,U,4)
"RTN","IBCNAU2",96,0)
 . Q:'$D(^TMP("IBUSER",$J,USER))  ; not a selected user
"RTN","IBCNAU2",97,0)
 . Q:DATE<DATE("START")  Q:DATE>DATE("END")   ; audit record outside date range
"RTN","IBCNAU2",98,0)
 . S FIELD=$S($P(DIA0,U,3)=".01":"INSURANCE COMPANY",1:$P(^DD(36,$P(DIA0,U,3),0),U))
"RTN","IBCNAU2",99,0)
 . S Z("DATE")=DATE,Z("FIELD")=FIELD,Z("USER")=USER
"RTN","IBCNAU2",100,0)
 . S Z("OLDVAL")=$G(^DIA(36,DIAIEN,2)),Z("NEWVAL")=$G(^DIA(36,DIAIEN,3))
"RTN","IBCNAU2",101,0)
 . S Z("PLAN")=$S(PLIEN:$P($G(^IBA(355.3,PLIEN,2)),U),1:"NO PLANS SELECTED")
"RTN","IBCNAU2",102,0)
 . S Z("INSNAME")=INSNAME
"RTN","IBCNAU2",103,0)
 . D ADDLN(SUB,.LN,.Z)
"RTN","IBCNAU2",104,0)
 Q:'PLANS  ; audits from the GROUP INSURANCE PLAN are not to be reported
"RTN","IBCNAU2",105,0)
 ; if GROUP PLAN edits are to be reported then proceed with gathering edits from file 355.3, 355.32, 355.4
"RTN","IBCNAU2",106,0)
 ;
"RTN","IBCNAU2",107,0)
 ; GROUP INSURANCE PLAN AUDITS
"RTN","IBCNAU2",108,0)
 F  S DIAIEN=$O(^DIA(355.3,"B",PLIEN,DIAIEN)) Q:'DIAIEN  D
"RTN","IBCNAU2",109,0)
 . S DIA0=^DIA(355.3,DIAIEN,0),DATE=$P($P(DIA0,U,2),"."),USER=$P(DIA0,U,4)
"RTN","IBCNAU2",110,0)
 . Q:'$D(^TMP("IBUSER",$J,USER))  ; not a selected user
"RTN","IBCNAU2",111,0)
 . Q:DATE<DATE("START")  Q:DATE>DATE("END")   ; audit record outside date range
"RTN","IBCNAU2",112,0)
 . S FIELD=$P(^DD(355.3,$P(DIA0,U,3),0),U)
"RTN","IBCNAU2",113,0)
 . S Z("DATE")=DATE,Z("FIELD")=FIELD,Z("USER")=USER
"RTN","IBCNAU2",114,0)
 . S Z("OLDVAL")=$G(^DIA(355.3,DIAIEN,2)),Z("NEWVAL")=$G(^DIA(355.3,DIAIEN,3))
"RTN","IBCNAU2",115,0)
 . D ADDLN(SUB,.LN,.Z)
"RTN","IBCNAU2",116,0)
 Q
"RTN","IBCNAU2",117,0)
 ;
"RTN","IBCNAU2",118,0)
ADDLN(SUB,LN,Z) ;
"RTN","IBCNAU2",119,0)
 ; SUB = 0 if no group plans to be reported
"RTN","IBCNAU2",120,0)
 ;     = 1 if group plans to be reported
"RTN","IBCNAU2",121,0)
 ; LN = passed by reference.  Line subscript at ^TMP("IBPR",$J,PLANS,LN)
"RTN","IBCNAU2",122,0)
 S LN=LN+1
"RTN","IBCNAU2",123,0)
 S ^TMP("IBPR",$J,SUB,LN)=Z("INSNAME")_U_Z("PLAN")_U_Z("USER")_U_Z("DATE")_U_Z("OLDVAL")_U_Z("NEWVAL")_U_Z("FIELD")
"RTN","IBCNAU2",124,0)
 Q
"RTN","IBCNAU3")
0^71^B12671484
"RTN","IBCNAU3",1,0)
IBCNAU3 ;ALB/KML/AWC - eIV USER EDIT REPORT (PRINT) ;6-APRIL-2015
"RTN","IBCNAU3",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNAU3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNAU3",4,0)
 ;
"RTN","IBCNAU3",5,0)
 ;  Required variable input:  ALLUSERS, ALLINS, PLANS, ALLPLANS, EXCEL
"RTN","IBCNAU3",6,0)
 ;  ^TMP("IBINC",$J) 
"RTN","IBCNAU3",7,0)
 ;  ^TMP("IBUSER",$J) 
"RTN","IBCNAU3",8,0)
 ;  DATE("START") and DATE("END") required array elements if all dates not selected
"RTN","IBCNAU3",9,0)
 Q
"RTN","IBCNAU3",10,0)
 ;
"RTN","IBCNAU3",11,0)
EN(ALLPLANS,PLANS) ;
"RTN","IBCNAU3",12,0)
 ; Print the report.
"RTN","IBCNAU3",13,0)
 ;                  
"RTN","IBCNAU3",14,0)
 I EXCEL D EXCEL(PLANS) Q
"RTN","IBCNAU3",15,0)
 N IBI,IBJ,IBK,IBL,IBM,IB01,IB02,IBQUIT,IBPAG,IBPD,IBHDT
"RTN","IBCNAU3",16,0)
 S (IB02,IBQUIT,IBPAG)=0
"RTN","IBCNAU3",17,0)
 S IBHDT=$$FMTE^XLFDT($$NOW^XLFDT())
"RTN","IBCNAU3",18,0)
 ;
"RTN","IBCNAU3",19,0)
 D HDR(ALLPLANS,PLANS)
"RTN","IBCNAU3",20,0)
 I '$D(^TMP("IBPR",$J)) W !!,"User Edits do not exist per the selected filters." D PAUSE Q
"RTN","IBCNAU3",21,0)
 ;
"RTN","IBCNAU3",22,0)
 F IB01=0,1 F  S IB02=$O(^TMP("IBPR",$J,IB01,IB02)) Q:'IB02  Q:IBQUIT  S IBPD=$G(^TMP("IBPR",$J,IB01,IB02)) D  Q:IBQUIT
"RTN","IBCNAU3",23,0)
 . I $Y>(IOSL-5) D PAUSE Q:IBQUIT  D HDR(ALLPLANS,PLANS)
"RTN","IBCNAU3",24,0)
 . D PLAN
"RTN","IBCNAU3",25,0)
 W !!,"END OF REPORT" D PAUSE
"RTN","IBCNAU3",26,0)
 Q
"RTN","IBCNAU3",27,0)
 ;
"RTN","IBCNAU3",28,0)
 ;
"RTN","IBCNAU3",29,0)
HDR(ALLPLANS,PLANS) ; Print REPORT header
"RTN","IBCNAU3",30,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBCNAU3",31,0)
 S IBPAG=IBPAG+1
"RTN","IBCNAU3",32,0)
 W !,"USER EDIT REPORT"
"RTN","IBCNAU3",33,0)
 W ?IOM-34,IBHDT,?IOM-10,"Page: ",IBPAG
"RTN","IBCNAU3",34,0)
 W !?5,"Insurance Company"
"RTN","IBCNAU3",35,0)
 I PLANS W ?42,"Group Name"
"RTN","IBCNAU3",36,0)
 W !!?5,"User",?25,"Date/Time of Change",?49,"Modified Field",?75,"Previous Value of Data",?100,"Modified Value of Data"
"RTN","IBCNAU3",37,0)
 W !,$TR($J(" ",IOM)," ","_"),!
"RTN","IBCNAU3",38,0)
 Q
"RTN","IBCNAU3",39,0)
 ;
"RTN","IBCNAU3",40,0)
PLAN ; Print plan information.
"RTN","IBCNAU3",41,0)
 N USER,DATE
"RTN","IBCNAU3",42,0)
 S USER=$$GET1^DIQ(200,$P(IBPD,U,3)_",",.01)
"RTN","IBCNAU3",43,0)
 S DATE=$$FMTE^XLFDT($P(IBPD,U,4),2),DATE=$TR(DATE,"@"," ")
"RTN","IBCNAU3",44,0)
 W !?5,$P(IBPD,U),?42,$S('IB01:"",1:$P(IBPD,U,2))
"RTN","IBCNAU3",45,0)
 W !?5,USER,?25,DATE,?49,$P(IBPD,U,7),?75,$S($P(IBPD,U,5)="":"<no previous value>",1:$P(IBPD,U,5)),?100,$P(IBPD,U,6),!!
"RTN","IBCNAU3",46,0)
 Q
"RTN","IBCNAU3",47,0)
 ;
"RTN","IBCNAU3",48,0)
PAUSE ; Pause for screen output.
"RTN","IBCNAU3",49,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBCNAU3",50,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBCNAU3",51,0)
 Q
"RTN","IBCNAU3",52,0)
 ;
"RTN","IBCNAU3",53,0)
EXCEL(PLANS) ; user selected format that can be viewed in MS Excel
"RTN","IBCNAU3",54,0)
 N IBI,IBJ,IBK,IBL,IBM,IB01,IB02,USER,DATE
"RTN","IBCNAU3",55,0)
 S (IB01,IB02)=0
"RTN","IBCNAU3",56,0)
 W !,"USER EDIT REPORT",!
"RTN","IBCNAU3",57,0)
 ;
"RTN","IBCNAU3",58,0)
 I PLANS W !,"Insurance Company^Group Name^User^Date/Time of Change^Modified Field^Previous Value of Data^Modified Value of Data",!
"RTN","IBCNAU3",59,0)
 E  W !,"Insurance Company^User^Date/Time of Change^Modified Field^Previous Value of Data^Modified Value of Data",!
"RTN","IBCNAU3",60,0)
 ;
"RTN","IBCNAU3",61,0)
 F IB01=0,1 F  S IB02=$O(^TMP("IBPR",$J,IB01,IB02)) Q:'IB02  S IBPD=$G(^TMP("IBPR",$J,IB01,IB02)) D
"RTN","IBCNAU3",62,0)
 . S USER=$$GET1^DIQ(200,$P(IBPD,U,3)_",",.01)
"RTN","IBCNAU3",63,0)
 . S DATE=$$FMTE^XLFDT($P(IBPD,U,4),2)
"RTN","IBCNAU3",64,0)
 . I IB01=0 W $P(IBPD,U)_U_USER_U_DATE_U_$P(IBPD,U,7)_U_$S($P(IBPD,U,5)="":"<no previous value>",1:$P(IBPD,U,5))_U_$P(IBPD,U,6)
"RTN","IBCNAU3",65,0)
 . E  W $P(IBPD,U)_U_$P(IBPD,U,2)_U_USER_U_DATE_U_$P(IBPD,U,7)_U_$S($P(IBPD,U,5)="":"<no previous value>",1:$P(IBPD,U,5))_U_$P(IBPD,U,6)
"RTN","IBCNAU3",66,0)
 . W !
"RTN","IBCNAU3",67,0)
 ; -- write to screen
"RTN","IBCNAU3",68,0)
 I $E(IOST,1,2)["C-" W !,"[END OF REPORT]",! S DIR("A")="Press RETURN to continue" D PAUSE
"RTN","IBCNAU3",69,0)
 Q
"RTN","IBCNBAA")
0^4^B170357032
"RTN","IBCNBAA",1,0)
IBCNBAA ;ALB/ARH/AWC - Ins Buffer: process Accept set-up ;1 Jun 97
"RTN","IBCNBAA",2,0)
 ;;2.0;INTEGRATED BILLING;**82,184,246,416,506,528**;21-MAR-94;Build 163
"RTN","IBCNBAA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBAA",4,0)
 ;
"RTN","IBCNBAA",5,0)
 ;
"RTN","IBCNBAA",6,0)
ACCEPT(IBBUFDA,IBINSDA,IBGRPDA,IBPOLDA) ; process a buffer entry for acceptance then save in Insurance files
"RTN","IBCNBAA",7,0)
 ;    1) for Insurance Company, Group/Plan and Policy sets of data:
"RTN","IBCNBAA",8,0)
 ;        a) display the set of buffer data and corresponding existing selected ins data
"RTN","IBCNBAA",9,0)
 ;        b) if ins record exists confirm with user that it is the correct one to use
"RTN","IBCNBAA",10,0)
 ;        c) if ins record exists user selects method of saving to ins record: Merge/Overwrite/Replace/No Change/Individually Accept(skip blanks)
"RTN","IBCNBAA",11,0)
 ;        d) if new record needs to be created get user confirmation
"RTN","IBCNBAA",12,0)
 ;    2) display the actions that will be taken
"RTN","IBCNBAA",13,0)
 ;    3) user confirms that is correct
"RTN","IBCNBAA",14,0)
 ;    4) data moved into insurance files, new records created if needed or edit existing ones
"RTN","IBCNBAA",15,0)
 ;    5) complete some general functions that are executed whenever insurance is entered/edited
"RTN","IBCNBAA",16,0)
 ;    6) allow user to view buffer entry and new/updated insurance records
"RTN","IBCNBAA",17,0)
 ;    7) buffer ins/group/policy data deleted
"RTN","IBCNBAA",18,0)
 ;    8) buffer entry status updated
"RTN","IBCNBAA",19,0)
 ;
"RTN","IBCNBAA",20,0)
 N DFN,IBX,IBELIG,IBHELP,IBNEWINS,IBNEWGRP,IBNEWPOL,IBNEWSUB,IBMVINS,IBMVGRP,IBMVPOL,IBMVSUB,IBACCPT,IBVAL
"RTN","IBCNBAA",21,0)
 N DIR,X,Y,DIRUT,IBDONE,IBQ,IBYR,IBDA,IBEAB,IBXREF,IBO,IBISEL,IBERR,IBOUT,IBASAV,IBCSAV,IBIEN,IBRIEN,IBSIEN,IBFNAM,IBHOLD,IBXHOLD,IBSEL,IBSOURCE,IBIIU
"RTN","IBCNBAA",22,0)
 N DIERR
"RTN","IBCNBAA",23,0)
 S (IBDONE,IBIEN)=0
"RTN","IBCNBAA",24,0)
 K ^TMP($J,"IB BUFFER SELECTED")  ; initialize selection file
"RTN","IBCNBAA",25,0)
 S IBINSDA=+$G(IBINSDA),IBGRPDA=+$G(IBGRPDA),IBPOLDA=+$G(IBPOLDA),(IBNEWINS,IBNEWGRP,IBNEWPOL,IBNEWSUB,IBMVINS,IBMVGRP,IBMVPOL,IBMVSUB,IBOUT,IBASAV,IBCSAV)=0
"RTN","IBCNBAA",26,0)
 S DFN=+$G(^IBA(355.33,+$G(IBBUFDA),60)) I 'DFN G ACCPTQ
"RTN","IBCNBAA",27,0)
 I +IBINSDA,+IBGRPDA,'IBPOLDA S IBPOLDA=$$PTGRP^IBCNBU1(DFN,IBINSDA,IBGRPDA) ; patient already member of plan
"RTN","IBCNBAA",28,0)
 ;
"RTN","IBCNBAA",29,0)
 I $P($G(^IBA(355.33,$G(IBBUFDA),0)),U,4)'="E" G ACCPTQ
"RTN","IBCNBAA",30,0)
 I +IBINSDA,$G(^DIC(36,IBINSDA,0))="" G ACCPTQ
"RTN","IBCNBAA",31,0)
 I +IBGRPDA,+$G(^IBA(355.3,IBGRPDA,0))'=IBINSDA G ACCPTQ
"RTN","IBCNBAA",32,0)
 I +IBGRPDA S IBX=$G(^IBA(355.3,IBGRPDA,0)) I $P(IBX,U,2)=0,+$P(IBX,U,10),$P(IBX,U,10)'=DFN G ACCPTQ
"RTN","IBCNBAA",33,0)
 I +IBPOLDA,+$G(^DPT(DFN,.312,IBPOLDA,0))'=IBINSDA G ACCPTQ
"RTN","IBCNBAA",34,0)
 I +IBPOLDA,$P($G(^DPT(DFN,.312,IBPOLDA,0)),U,18)'=IBGRPDA G ACCPTQ
"RTN","IBCNBAA",35,0)
 ;
"RTN","IBCNBAA",36,0)
ACINS ;
"RTN","IBCNBAA",37,0)
 W @IOF S IBHELP=",INS^IBCNBCD("_IBBUFDA_","_IBINSDA_")"
"RTN","IBCNBAA",38,0)
 D INS^IBCNBCD(IBBUFDA,IBINSDA)
"RTN","IBCNBAA",39,0)
 I +IBINSDA S IBACCPT=$$MATCH("INSURANCE COMPANY") S:'IBACCPT (IBINSDA,IBGRPDA,IBPOLDA)=0 I $D(DIRUT) G ACCPTQ
"RTN","IBCNBAA",40,0)
 I +IBINSDA D  I $D(DIRUT)!(IBMVINS="") G ACCPTQ
"RTN","IBCNBAA",41,0)
 . I '$D(^XUSEC("IB INSURANCE COMPANY EDIT",DUZ)) S IBMVINS=0 Q
"RTN","IBCNBAA",42,0)
 . S IBMVINS=$$MOVE("INSURANCE COMPANY",IBHELP)
"RTN","IBCNBAA",43,0)
 I 'IBINSDA S IBNEWINS=$$NEW("INSURANCE COMPANY"),IBMVINS=3,(IBGRPDA,IBPOLDA)=0 I 'IBNEWINS G ACCPTQ
"RTN","IBCNBAA",44,0)
 ;
"RTN","IBCNBAA",45,0)
 I +IBMVINS=4 D INS^IBCNBAC(IBBUFDA,IBINSDA,1) ; Ind. Accept-Skip Blanks
"RTN","IBCNBAA",46,0)
 ;
"RTN","IBCNBAA",47,0)
ACGRP ;
"RTN","IBCNBAA",48,0)
 W @IOF S IBHELP=",GRP^IBCNBCD("_IBBUFDA_","_IBGRPDA_")"
"RTN","IBCNBAA",49,0)
 I +IBGRPDA W !,?14,"Patient is "_$S(+IBPOLDA:"",1:"NOT ")_"a member of this Insurance Group/Plan",!
"RTN","IBCNBAA",50,0)
 D GRP^IBCNBCD(IBBUFDA,IBGRPDA)
"RTN","IBCNBAA",51,0)
 ;
"RTN","IBCNBAA",52,0)
 I +IBGRPDA S IBACCPT=$$MATCH("GROUP/PLAN") S:'IBACCPT (IBGRPDA,IBPOLDA)=0 I $D(DIRUT) G ACCPTQ
"RTN","IBCNBAA",53,0)
 I +IBGRPDA D  I $D(DIRUT)!(IBMVGRP="") G ACCPTQ
"RTN","IBCNBAA",54,0)
 . I '$D(^XUSEC("IB GROUP PLAN EDIT",DUZ)) S IBMVGRP=0 Q
"RTN","IBCNBAA",55,0)
 . S IBMVGRP=$$MOVE("GROUP/PLAN",IBHELP)
"RTN","IBCNBAA",56,0)
 I 'IBGRPDA S IBNEWGRP=$$NEW("GROUP/PLAN"),IBMVGRP=3,IBPOLDA=0 I 'IBNEWGRP G ACCPTQ
"RTN","IBCNBAA",57,0)
 ;
"RTN","IBCNBAA",58,0)
 I +IBMVGRP=4 D GRP^IBCNBAC(IBBUFDA,IBGRPDA,1) ; Ind. Accept-Skip Blanks
"RTN","IBCNBAA",59,0)
 ;
"RTN","IBCNBAA",60,0)
ACANB ; -- Annual Benefits /awc
"RTN","IBCNBAA",61,0)
 I +IBGRPDA D ANNBEN^IBCNBCD1(IBBUFDA,IBGRPDA,.IBASAV,.IBQ,.IBERR) I IBQ=U!($D(IBERR))!($D(DTOUT)) G ACCPTQ
"RTN","IBCNBAA",62,0)
 ;
"RTN","IBCNBAA",63,0)
ACCOV ; -- Coverage Limitations /awc
"RTN","IBCNBAA",64,0)
 I +IBGRPDA D COVLIM^IBCNBCD2(IBBUFDA,IBGRPDA,.IBCSAV,.IBQ,.IBERR) I IBQ=U!($D(IBERR))!($D(DTOUT)) G ACCPTQ
"RTN","IBCNBAA",65,0)
 ;
"RTN","IBCNBAA",66,0)
ACPOL ;
"RTN","IBCNBAA",67,0)
 W @IOF S IBHELP=",POLICY^IBCNBCD("_IBBUFDA_","_IBPOLDA_")"
"RTN","IBCNBAA",68,0)
 I 'IBPOLDA W !,"This will be a New policy for this group and patient.",!
"RTN","IBCNBAA",69,0)
 D POLICY^IBCNBCD(IBBUFDA,IBPOLDA)
"RTN","IBCNBAA",70,0)
 I +IBPOLDA S IBACCPT=$$MATCH("PATIENT POLICY") S:'IBACCPT IBPOLDA=0 I $D(DIRUT) G ACCPTQ
"RTN","IBCNBAA",71,0)
 I +IBPOLDA S IBMVPOL=$$MOVE("PATIENT POLICY",IBHELP) I $D(DIRUT)!(IBMVPOL="") G ACCPTQ
"RTN","IBCNBAA",72,0)
 I 'IBPOLDA S IBNEWPOL=$$NEW("PATIENT POLICY"),IBMVPOL=3 I 'IBNEWPOL G ACCPTQ
"RTN","IBCNBAA",73,0)
 ;
"RTN","IBCNBAA",74,0)
 I +IBMVPOL=4 D POLICY^IBCNBAC(IBBUFDA,IBPOLDA,1) ; Ind. Accept-Skip Blanks
"RTN","IBCNBAA",75,0)
 ;
"RTN","IBCNBAA",76,0)
ACSUB ; -- Subscriber screens
"RTN","IBCNBAA",77,0)
 W @IOF
"RTN","IBCNBAA",78,0)
 S IBMVSUB="0^NO CHANGE",(IBFNAM,IBVAL,IBHOLD,IBXHOLD)="",IBRIEN=0
"RTN","IBCNBAA",79,0)
 S IBSIEN=$S(+IBPOLDA:IBPOLDA_","_DFN_",",1:0)
"RTN","IBCNBAA",80,0)
 ;
"RTN","IBCNBAA",81,0)
 S IBSEL=+$$SUASK(.IBVAL) I $D(DUOUT)!($D(DTOUT)) G ACCPTQ
"RTN","IBCNBAA",82,0)
 ;
"RTN","IBCNBAA",83,0)
 I IBSEL'=1&(IBSEL'=18) W !,!,"*** Warning - Please Complete Subscriber Update Fields Manually via the Patient Insurance File." D WAIT G ACEB
"RTN","IBCNBAA",84,0)
 E  D  I IBOUT!($D(DTOUT)) G ACCPTQ
"RTN","IBCNBAA",85,0)
 . ;
"RTN","IBCNBAA",86,0)
 . I 'IBPOLDA S IBMVSUB=3 W !,"A NEW Subscriber Insurance policy must be created for this group/patient before Subscriber updates.",! D WAIT Q
"RTN","IBCNBAA",87,0)
 . ;
"RTN","IBCNBAA",88,0)
 . ; -- display subscriber screens
"RTN","IBCNBAA",89,0)
 . D SBDISP^IBCNBCD4(IBBUFDA,DFN,IBPOLDA,IBSEL,IBRIEN,IBSIEN,.IBFNAM,IBVAL,.IBHOLD,.IBXHOLD) I $D(DIERR) S IBOUT=1 Q
"RTN","IBCNBAA",90,0)
 . ;
"RTN","IBCNBAA",91,0)
 . ; -- display M/O/R/N/I screens
"RTN","IBCNBAA",92,0)
 . I +IBPOLDA S IBACCPT=$$SBMATCH("SUBSCRIBER INSURANCE") S:'IBACCPT IBPOLDA=0 I $D(DIRUT) S IBOUT=1 Q
"RTN","IBCNBAA",93,0)
 . I +IBPOLDA S IBMVSUB=$$SBMOVE("SUBSCRIBER INSURANCE") I $D(DIRUT)!(IBMVSUB="") S IBOUT=1 Q
"RTN","IBCNBAA",94,0)
 . ;
"RTN","IBCNBAA",95,0)
 . I +IBMVSUB=4 D SUB^IBCNBAC(1,IBFNAM,.IBHOLD,.IBXHOLD) ; Ind. Accept-Skip Blanks
"RTN","IBCNBAA",96,0)
 ;
"RTN","IBCNBAA",97,0)
ACEB ;
"RTN","IBCNBAA",98,0)
 W @IOF
"RTN","IBCNBAA",99,0)
 D ELIG^IBCNBCD(IBBUFDA,IBPOLDA) S IBELIG=$$REPL() I $D(DIRUT) G ACCPTQ
"RTN","IBCNBAA",100,0)
 ;
"RTN","IBCNBAA",101,0)
CHECK ; display changes that will be made and ask user for confirmation
"RTN","IBCNBAA",102,0)
 W @IOF
"RTN","IBCNBAA",103,0)
 ;
"RTN","IBCNBAA",104,0)
 I +IBINSDA S IBX="The Buffer data will "_$P(IBMVINS,U,2)_" the existing Insurance Company data."
"RTN","IBCNBAA",105,0)
 I +IBINSDA,'IBMVINS S IBX="There will be "_$P(IBMVINS,U,2)_" to the existing Insurance Company data."
"RTN","IBCNBAA",106,0)
 I 'IBINSDA S IBX=$P(^IBA(355.33,IBBUFDA,20),U,1)_" will be added as a NEW Insurance Company."
"RTN","IBCNBAA",107,0)
 W !!,$G(IORVON)_"STEP 1: Insurance Company"_$J("",55)_$G(IORVOFF) W !,IBX
"RTN","IBCNBAA",108,0)
 ;
"RTN","IBCNBAA",109,0)
 I +IBGRPDA S IBX="The Buffer data will "_$P(IBMVGRP,U,2)_" the existing Group/Plan data."
"RTN","IBCNBAA",110,0)
 I +IBGRPDA,'IBMVGRP S IBX="There will be "_$P(IBMVGRP,U,2)_" to the existing Group/Plan data."
"RTN","IBCNBAA",111,0)
 I 'IBGRPDA S IBX="A NEW Group Plan will be added to this Insurance Company."
"RTN","IBCNBAA",112,0)
 W !!,$G(IORVON)_"STEP 2: Group/Plan"_$J("",62)_$G(IORVOFF) W !,IBX
"RTN","IBCNBAA",113,0)
 ;
"RTN","IBCNBAA",114,0)
 ; AWC/ Annual Benefits
"RTN","IBCNBAA",115,0)
 I 'IBPOLDA S IBX="There is no Patient Insurance Policy for this patient and this Group/Plan."
"RTN","IBCNBAA",116,0)
 E  I +IBPOLDA D
"RTN","IBCNBAA",117,0)
 . I IBASAV S IBX="Edited Data was SAVED into the Annual Benefits File." Q
"RTN","IBCNBAA",118,0)
 . S IBX="No Edits made/saved. No data saved into the Annual Benefits File."
"RTN","IBCNBAA",119,0)
 W !!,$G(IORVON)_"STEP 3: Annual Benefits"_$J("",57)_$G(IORVOFF) W !,IBX
"RTN","IBCNBAA",120,0)
 ;
"RTN","IBCNBAA",121,0)
 ; AWC/ Coverage Limitations
"RTN","IBCNBAA",122,0)
 I 'IBPOLDA S IBX="There is no Patient Insurance Policy for this patient and this Group/Plan."
"RTN","IBCNBAA",123,0)
 E  I +IBPOLDA D
"RTN","IBCNBAA",124,0)
 . I IBCSAV S IBX="Edited data was SAVED into the Coverage Limitations File." Q
"RTN","IBCNBAA",125,0)
 . S IBX="No Edits made/saved. No data saved into the Coverage Limitations File."
"RTN","IBCNBAA",126,0)
 W !!,$G(IORVON)_"STEP 4: Coverage Limitation"_$J("",53)_$G(IORVOFF) W !,IBX
"RTN","IBCNBAA",127,0)
 ;
"RTN","IBCNBAA",128,0)
 ; AWC/  Moved Patient Policy to Step 5
"RTN","IBCNBAA",129,0)
 I +IBPOLDA S IBX="The Buffer data will "_$P(IBMVPOL,U,2)_" the existing Policy data."
"RTN","IBCNBAA",130,0)
 I +IBPOLDA,'IBMVPOL S IBX="There will be "_$P(IBMVPOL,U,2)_" to the existing Policy data."
"RTN","IBCNBAA",131,0)
 I 'IBPOLDA S IBX="A NEW Patient Policy will be added for this patient and this Group/Plan."
"RTN","IBCNBAA",132,0)
 W !!,$G(IORVON)_"STEP 5: Patient Policy"_$J("",58)_$G(IORVOFF) W !,IBX
"RTN","IBCNBAA",133,0)
 ;
"RTN","IBCNBAA",134,0)
 ; AWC/ Subscriber
"RTN","IBCNBAA",135,0)
 I +IBPOLDA S IBX="The Patient Registration data will "_$P(IBMVSUB,U,2)_" the existing Patient Insurance data."
"RTN","IBCNBAA",136,0)
 I +IBPOLDA,'IBMVSUB S IBX="There will be "_$P(IBMVSUB,U,2)_" to the existing Patient Insurance data."
"RTN","IBCNBAA",137,0)
 I 'IBPOLDA S IBX="A NEW Patient Insurance Policy will be added for this patient and this Group/Plan."
"RTN","IBCNBAA",138,0)
 W !!,$G(IORVON)_"STEP 6: Subscriber Update"_$J("",55)_$G(IORVOFF) W !,IBX
"RTN","IBCNBAA",139,0)
 I IBSEL'=1&(IBSEL'=18) S IBX="Please Complete Subscriber Update Fields Manually via the Patient Insurance File." W !,IBX
"RTN","IBCNBAA",140,0)
 ;
"RTN","IBCNBAA",141,0)
 ; AWC/ Moved Eligibility/Benefits to Step 7
"RTN","IBCNBAA",142,0)
 S IBX="The Buffer data will"_$S(IBELIG:"",1:" not")_" replace the existing EB data."
"RTN","IBCNBAA",143,0)
 W !!,$G(IORVON)_"STEP 7: Eligibility/Benefits"_$J("",52)_$G(IORVOFF) W !,IBX
"RTN","IBCNBAA",144,0)
 ;
"RTN","IBCNBAA",145,0)
 I +IBINSDA,$P(IBMVINS,U,1)=0,+IBGRPDA,$P(IBMVGRP,U,1)=0,+IBPOLDA,$P(IBMVPOL,U,1)=0,$P(IBMVSUB,U,1)=0,+IBELIG=0 W !!!,"This would result in No Change to the existing Insurance data.  Process aborted." D WAIT G ACCPTQ
"RTN","IBCNBAA",146,0)
 ;
"RTN","IBCNBAA",147,0)
 I '$$OK G ACCPTQ
"RTN","IBCNBAA",148,0)
 ;
"RTN","IBCNBAA",149,0)
PROCESS ; process all changes selected by user, add/edit insurance files based on buffer data, cleanup, ...
"RTN","IBCNBAA",150,0)
 ;
"RTN","IBCNBAA",151,0)
 D ACCEPT^IBCNBAR(IBBUFDA,DFN,IBINSDA,IBGRPDA,.IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBMVSUB,IBNEWINS,IBNEWGRP,IBNEWPOL,IBELIG,IBSEL,IBRIEN,.IBSIEN,IBFNAM,IBVAL,.IBHOLD,.IBXHOLD)
"RTN","IBCNBAA",152,0)
 S IBDONE=1
"RTN","IBCNBAA",153,0)
 ;
"RTN","IBCNBAA",154,0)
 ; IB*2.0*528 - AWC/  The following lines of code is commented-out because it will not be use now. The commented-out code could
"RTN","IBCNBAA",155,0)
 ; be used in a future project when the decision to enable the SSVI Consistency Checker utilities is confirmed.
"RTN","IBCNBAA",156,0)
 ;
"RTN","IBCNBAA",157,0)
 ; -- BAA/ - Call to Patient Insurance Consistency Checker
"RTN","IBCNBAA",158,0)
 ;S IBSOURCE=$P($G(^IBA(355.33,IBBUFDA,0)),U,3)
"RTN","IBCNBAA",159,0)
 ;S IBIIU=$O(^IBE(355.12,"C","INTERFACILITY INS UPDATE",0))
"RTN","IBCNBAA",160,0)
 ;I $P($G(^IBE(350.9,1,100)),U) I IBSOURCE'=IBIIU D EN^IBCNVCC(DFN,IBPOLDA)
"RTN","IBCNBAA",161,0)
 ;
"RTN","IBCNBAA",162,0)
ACCPTQ ;
"RTN","IBCNBAA",163,0)
 Q IBDONE
"RTN","IBCNBAA",164,0)
 ;
"RTN","IBCNBAA",165,0)
LKPYR(IBGRPDA,ABYR) ; Look up year
"RTN","IBCNBAA",166,0)
 N X,Y,DA,DR,DIC
"RTN","IBCNBAA",167,0)
 S DA=IBGRPDA,DIC="^IBA(355.4,",DIC(0)="MZ",X=$P(ABYR,U,2)
"RTN","IBCNBAA",168,0)
 D ^DIC
"RTN","IBCNBAA",169,0)
 Q +Y
"RTN","IBCNBAA",170,0)
 ;
"RTN","IBCNBAA",171,0)
MATCH(IBDESC) ; ask the user if the buffer entry is a match with the selected insurance file entry
"RTN","IBCNBAA",172,0)
 ; returns 1 if there is a match, 0 otherwise
"RTN","IBCNBAA",173,0)
 N DIR,X,Y,IBX S IBX=0
"RTN","IBCNBAA",174,0)
 S DIR("?")="Enter Yes if this existing "_IBDESC_" corresponds to the buffer entry "_IBDESC_".  Enter No to add new "_IBDESC_"."
"RTN","IBCNBAA",175,0)
 S DIR("?",1)="Entering Yes will match this existing "_IBDESC_" with the buffer entry,"
"RTN","IBCNBAA",176,0)
 S DIR("?",2)="no new "_IBDESC_" will be created.  Any existing "_IBDESC_" data"
"RTN","IBCNBAA",177,0)
 S DIR("?",3)="changes based on the Buffer data will be applied to this "_IBDESC_"."
"RTN","IBCNBAA",178,0)
 S DIR("?",4)="Enter No to create a new "_IBDESC_" if the Buffer entry's "
"RTN","IBCNBAA",179,0)
 S DIR("?",5)=IBDESC_" data does not match any existing "_IBDESC_".",DIR("?",6)=""
"RTN","IBCNBAA",180,0)
 ;
"RTN","IBCNBAA",181,0)
 W ! S DIR(0)="YO",DIR("A")="Is this the correct "_IBDESC_" to match with this Buffer entry" D ^DIR I Y=1 S IBX=1
"RTN","IBCNBAA",182,0)
 Q IBX
"RTN","IBCNBAA",183,0)
 ;
"RTN","IBCNBAA",184,0)
SBMATCH(IBDESC) ; ask the user if the Patient Registration entry is a match with the selected insurance file entry
"RTN","IBCNBAA",185,0)
 ; returns 1 if there is a match, 0 otherwise
"RTN","IBCNBAA",186,0)
 N DIR,X,Y,IBX S IBX=0
"RTN","IBCNBAA",187,0)
 S DIR("?")="Enter Yes if this existing "_IBDESC_" corresponds to the Patient Registration entry.  Enter No if not."
"RTN","IBCNBAA",188,0)
 S DIR("?",1)="Entering Yes will match this existing "_IBDESC_" with the Patient Registration entry,"
"RTN","IBCNBAA",189,0)
 S DIR("?",2)="no new "_IBDESC_" will be created.  Any existing "_IBDESC_" data"
"RTN","IBCNBAA",190,0)
 S DIR("?",3)="changes based on the Patient Registration data will be applied to this "_IBDESC_"."
"RTN","IBCNBAA",191,0)
 S DIR("?",4)="Enter No to create a new "_IBDESC_" policy if the Patient Registration entry's "
"RTN","IBCNBAA",192,0)
 S DIR("?",5)=IBDESC_" data does not match any existing "_IBDESC_".",DIR("?",6)=""
"RTN","IBCNBAA",193,0)
 ;
"RTN","IBCNBAA",194,0)
 W ! S DIR(0)="YO",DIR("A")="Is this the correct "_IBDESC_" to match with this Patient Registration entry" D ^DIR I Y=1 S IBX=1
"RTN","IBCNBAA",195,0)
 Q IBX
"RTN","IBCNBAA",196,0)
 ;
"RTN","IBCNBAA",197,0)
MOVE(IBDESC,IBHELP) ; ask the user what method they want to use to transfer buffer data to the insurance files
"RTN","IBCNBAA",198,0)
 ; returns 1^merge, 2^overwrite, 3^replace, 4^individually accept (skip blanks),
"RTN","IBCNBAA",199,0)
 ;  0^no change,
"RTN","IBCNBAA",200,0)
 ;  or "" if none of the methods was chosen
"RTN","IBCNBAA",201,0)
 N DIR,X,Y,IBX S IBX=""
"RTN","IBCNBAA",202,0)
 S DIR("?")="^D HELP^IBCNBUH,WAIT^IBCNBAA"_$G(IBHELP),DIR("??")="^D HELP2^IBCNBUH,WAIT^IBCNBAA"_$G(IBHELP)
"RTN","IBCNBAA",203,0)
 S DIR("A")="Select the method to update the "_IBDESC
"RTN","IBCNBAA",204,0)
 ; DAOU/BHS - 08/28/2002 - Added INDIVIDUALLY ACCEPT methods
"RTN","IBCNBAA",205,0)
 W ! S DIR(0)="SOB^M:MERGE;O:OVERWRITE;R:REPLACE;N:NO CHANGE;I:INDIVIDUALLY ACCEPT (SKIP BLANKS)" D ^DIR
"RTN","IBCNBAA",206,0)
 S IBX=$S(Y="M":1,Y="O":2,Y="R":3,Y="I":4,Y="N":0,1:"") I IBX'="" S IBX=IBX_U_$G(Y(0))_$S(+IBX=1:" with",1:"")
"RTN","IBCNBAA",207,0)
 Q IBX
"RTN","IBCNBAA",208,0)
 ;
"RTN","IBCNBAA",209,0)
SBMOVE(IBDESC) ; ask the user what method they want to use to transfer buffer data to the insurance files
"RTN","IBCNBAA",210,0)
 ; returns 1^merge, 2^overwrite, 3^replace, 4^individually accept (skip blanks),
"RTN","IBCNBAA",211,0)
 ;  0^no change,
"RTN","IBCNBAA",212,0)
 ;  or "" if none of the methods was chosen
"RTN","IBCNBAA",213,0)
 N DIR,X,Y,IBX S IBX=""
"RTN","IBCNBAA",214,0)
 S DIR("?")="^D HELP^IBCNBUH,WAIT^IBCNBAA"_","_"SBDISP^IBCNBCD4(IBBUFDA,DFN,IBPOLDA,IBSEL,IBRIEN,IBSIEN,.IBFNAM,IBVAL,.IBHOLD,.IBXHOLD)"
"RTN","IBCNBAA",215,0)
 S DIR("??")="^D HELP2^IBCNBUH,WAIT^IBCNBAA"_","_"SBDISP^IBCNBCD4(IBBUFDA,DFN,IBPOLDA,IBSEL,IBRIEN,IBSIEN,.IBFNAM,IBVAL,.IBHOLD,.IBXHOLD)"
"RTN","IBCNBAA",216,0)
 S DIR("A")="Select the method to update the "_IBDESC
"RTN","IBCNBAA",217,0)
 ; DAOU/BHS - 08/28/2002 - Added INDIVIDUALLY ACCEPT methods
"RTN","IBCNBAA",218,0)
 W ! S DIR(0)="SOB^M:MERGE;O:OVERWRITE;R:REPLACE;N:NO CHANGE;I:INDIVIDUALLY ACCEPT (SKIP BLANKS)" D ^DIR
"RTN","IBCNBAA",219,0)
 S IBX=$S(Y="M":1,Y="O":2,Y="R":3,Y="I":4,Y="N":0,1:"") I IBX'="" S IBX=IBX_U_$G(Y(0))_$S(+IBX=1:" with",1:"")
"RTN","IBCNBAA",220,0)
 Q IBX
"RTN","IBCNBAA",221,0)
 ;
"RTN","IBCNBAA",222,0)
NEW(IBDESC) ; ask user if they want to add a new entry to the insurance files (36, 355.3, or 2.312)
"RTN","IBCNBAA",223,0)
 ; returns 1 if Yes create a new entry, 0 otherwise
"RTN","IBCNBAA",224,0)
 N DIR,X,Y,IBX S IBX=0
"RTN","IBCNBAA",225,0)
 ;
"RTN","IBCNBAA",226,0)
 ; The following was changed with patch IB*2.0*506
"RTN","IBCNBAA",227,0)
 S DIR("?")="Enter Yes to create a new "_IBDESC_". Enter No to stop this process."
"RTN","IBCNBAA",228,0)
 S DIR("?",1)="Enter Yes to create a new "_IBDESC_" in the Insurance files for"
"RTN","IBCNBAA",229,0)
 S DIR("?",2)="this Buffer entry only if no existing "_IBDESC_" could be found"
"RTN","IBCNBAA",230,0)
 S DIR("?",3)="that matches this buffer entry.",DIR("?",4)=""
"RTN","IBCNBAA",231,0)
 W ! S DIR(0)="YO",DIR("A")="NO "_IBDESC_" Selected, do you need a New "_IBDESC D ^DIR I +Y=1 S IBX=1
"RTN","IBCNBAA",232,0)
 ;
"RTN","IBCNBAA",233,0)
 ;I IBDESC="INSURANCE COMPANY",'$D(^XUSEC("IB INSURANCE COMPANY ADD",DUZ)) W !!,"Sorry, but you do not have the required privileges to add",!,"new Insurance Companies." D WAIT G NEWQ
"RTN","IBCNBAA",234,0)
 I IBX=1 D  G NEWQ
"RTN","IBCNBAA",235,0)
 . I IBDESC="INSURANCE COMPANY" D  Q
"RTN","IBCNBAA",236,0)
 . . I '$D(^XUSEC("IB INSURANCE COMPANY EDIT",DUZ)) W !!,"A Supervisor will need to add the "_IBDESC_" before processing can",!,"continue." S IBX=0 D WAIT Q
"RTN","IBCNBAA",237,0)
 . . W !!,"You must create an "_IBDESC_" first." S IBX=0 D WAIT
"RTN","IBCNBAA",238,0)
 . I IBDESC="GROUP/PLAN" D  Q
"RTN","IBCNBAA",239,0)
 . . I '$D(^XUSEC("IB GROUP PLAN EDIT",DUZ)) W !!,"A Supervisor will need to add the "_IBDESC_" before processing can continue." S IBX=0 D WAIT Q
"RTN","IBCNBAA",240,0)
 . . W !!,"You must create a "_IBDESC_" first." S IBX=0 D WAIT
"RTN","IBCNBAA",241,0)
 ;/IB*2.0*506 End
"RTN","IBCNBAA",242,0)
NEWQ Q IBX
"RTN","IBCNBAA",243,0)
 ;
"RTN","IBCNBAA",244,0)
REPL() ; ask user if they want to replace eligibility/benefits data in pt. insuarance
"RTN","IBCNBAA",245,0)
 N DIR,X,Y,IBX
"RTN","IBCNBAA",246,0)
 S IBX=0
"RTN","IBCNBAA",247,0)
 S DIR(0)="YO",DIR("A")="Replace the Pt's Eligibility/Benefits data",DIR("B")="YES"
"RTN","IBCNBAA",248,0)
 S DIR("?")="Enter Yes to replace existing Eligibility/Benefits data with one from eIV response."
"RTN","IBCNBAA",249,0)
 W ! D ^DIR I +Y=1 S IBX=1
"RTN","IBCNBAA",250,0)
 Q IBX
"RTN","IBCNBAA",251,0)
 ;
"RTN","IBCNBAA",252,0)
OK() ; ask the user if the buffer data should be moved to the insurance files
"RTN","IBCNBAA",253,0)
 ; returns 1 if yes, 0 otherwise
"RTN","IBCNBAA",254,0)
 N DIR,X,Y,IBX S IBX=0 W !!!
"RTN","IBCNBAA",255,0)
 S DIR("?")="Enter Yes to accept/verify the buffer data and move it to the insurance files.  Enter No to stop this process."
"RTN","IBCNBAA",256,0)
 S DIR("?",1)="Entering Yes will cause several things to happen:"
"RTN","IBCNBAA",257,0)
 S DIR("?",2)="  1 - the above changes will be completed and the Insurance files updated with"
"RTN","IBCNBAA",258,0)
 S DIR("?",3)="      the buffer data."
"RTN","IBCNBAA",259,0)
 S DIR("?",4)="  2 - the Insurance entries modified or added will be flagged as verified."
"RTN","IBCNBAA",260,0)
 S DIR("?",5)="  3 - most of the insurance and patient related information in the buffer entry"
"RTN","IBCNBAA",261,0)
 S DIR("?",6)="      will be deleted, leaving only a stub entry for reporting purposes.",DIR("?",7)=""
"RTN","IBCNBAA",262,0)
 S DIR(0)="YO",DIR("A")="Is this Correct, update the existing Insurance files now" D ^DIR I Y=1 S IBX=1
"RTN","IBCNBAA",263,0)
 Q IBX
"RTN","IBCNBAA",264,0)
 ;
"RTN","IBCNBAA",265,0)
WAIT N DIR,DIRUT,DUOUT,DTOUT,X,Y W !! S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR W !!
"RTN","IBCNBAA",266,0)
 Q
"RTN","IBCNBAA",267,0)
 ;
"RTN","IBCNBAA",268,0)
SUASK(IBVAL) ; ask user to select Pt. Relationship to Insured
"RTN","IBCNBAA",269,0)
 N X,Y,DIR,IBF
"RTN","IBCNBAA",270,0)
 W !
"RTN","IBCNBAA",271,0)
 S IBF=$P($G(^DD(2.312,4.03,0)),U,3)
"RTN","IBCNBAA",272,0)
 ;
"RTN","IBCNBAA",273,0)
 S DIR(0)="SAO^"_IBF
"RTN","IBCNBAA",274,0)
 S DIR("A")="Select the Patient Relationship to Subscriber: "
"RTN","IBCNBAA",275,0)
 S DIR("?",1)="  Enter the code which best describes this patient's relationship"
"RTN","IBCNBAA",276,0)
 S DIR("?")="  to the person who holds this insurance policy (or insured)."
"RTN","IBCNBAA",277,0)
 D ^DIR I +Y S IBVAL=Y_U_$P($P(IBF,Y_":",2),";")
"RTN","IBCNBAA",278,0)
 Q +Y
"RTN","IBCNBAA",279,0)
 ;
"RTN","IBCNBAA",280,0)
READ(IBRTYP,IBPROM,IBDFLT,IBHELP,IBSCRN) ; Reader that will returns a response to user input
"RTN","IBCNBAA",281,0)
 ; Input:
"RTN","IBCNBAA",282,0)
 ;   IBRTYP : Read Type and Input modifiers^Input Parameters^Input Transform (Required)
"RTN","IBCNBAA",283,0)
 ;   IBPROM : Prompt text that user will see
"RTN","IBCNBAA",284,0)
 ;   IBDFLT : Default response
"RTN","IBCNBAA",285,0)
 ;   IBHELP : Help text to display
"RTN","IBCNBAA",286,0)
 ;   IBSCRN : Screen for pointer, set-of-code, and list/range reads
"RTN","IBCNBAA",287,0)
 ;
"RTN","IBCNBAA",288,0)
 N DIR,X,Y
"RTN","IBCNBAA",289,0)
 ;
"RTN","IBCNBAA",290,0)
 W !
"RTN","IBCNBAA",291,0)
 ;
"RTN","IBCNBAA",292,0)
 S DIR(0)=IBRTYP
"RTN","IBCNBAA",293,0)
 S:$G(IBPROM)]"" DIR("A")=IBPROM
"RTN","IBCNBAA",294,0)
 S:$G(IBDFLT)]"" DIR("B")=IBDFLT
"RTN","IBCNBAA",295,0)
 S:$G(IBHELP)]"" DIR("?")=IBHELP
"RTN","IBCNBAA",296,0)
 S:$G(IBSCRN)]"" DIR("S")=IBSCRN
"RTN","IBCNBAA",297,0)
 D ^DIR
"RTN","IBCNBAA",298,0)
 ;
"RTN","IBCNBAA",299,0)
 ; -- Return Y value concatonated with the .01 value of the zero node if look-up was successful
"RTN","IBCNBAA",300,0)
 ; -- <or> "@" if user deleted entry
"RTN","IBCNBAA",301,0)
 ; -- <or> -1, <or> "" if look-up not successful
"RTN","IBCNBAA",302,0)
 Q $S((Y'=-1&(Y]"")&($E(Y)'=U))&($L($G(Y),U)'=2):Y_U_$G(Y(0),Y),$G(X)="@":"@",1:Y)
"RTN","IBCNBAC")
0^133^B53121470
"RTN","IBCNBAC",1,0)
IBCNBAC ;ALB/ARH/DAOU/WCW/AWC - Ins Buffer: Individually Accept Insurance Buffer Fields ;28-APR-03
"RTN","IBCNBAC",2,0)
 ;;2.0;INTEGRATED BILLING;**184,497,528**;21-MAR-94;Build 163
"RTN","IBCNBAC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBAC",4,0)
 ;
"RTN","IBCNBAC",5,0)
INS(IBBUFDA,IBINSDA,SKPBLANK) ; display a buffer entry's insurance company fields and an existing insurance company fields for comparison
"RTN","IBCNBAC",6,0)
 N IBEXTDA,IBFLD1,IBFLD2,X I '$G(IBBUFDA) Q
"RTN","IBCNBAC",7,0)
 S SKPBLANK=$G(SKPBLANK)
"RTN","IBCNBAC",8,0)
 ;
"RTN","IBCNBAC",9,0)
 S IBEXTDA=$G(IBINSDA)_","
"RTN","IBCNBAC",10,0)
 ;
"RTN","IBCNBAC",11,0)
 I +$P($G(^DIC(36,+IBEXTDA,0)),U,5) W !,?10,"Selected Insurance Company "_$$GET1^DIQ(36,IBEXTDA,.01)_" is Inactive!",!
"RTN","IBCNBAC",12,0)
 ;
"RTN","IBCNBAC",13,0)
 W @IOF
"RTN","IBCNBAC",14,0)
 W ! D WRTFLD("  Insurance Data:  Buffer Data                     Selected Insurance Company   ",0,80,"BU")
"RTN","IBCNBAC",15,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(36,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBAC",16,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.05),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(36,IBEXTDA,1),1:"") D WRTLN("Reimburse?:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBAC",17,0)
 ;
"RTN","IBCNBAC",18,0)
 D FIELDS("INS","",SKPBLANK)
"RTN","IBCNBAC",19,0)
 ;
"RTN","IBCNBAC",20,0)
 Q
"RTN","IBCNBAC",21,0)
 ;
"RTN","IBCNBAC",22,0)
GRP(IBBUFDA,IBGRPDA,SKPBLANK) ; display a buffer entrys group insurance fields and an existing group/plan's fields for comparison
"RTN","IBCNBAC",23,0)
 N IBEXTDA,IBFLD1,IBFLD2,X I '$G(IBBUFDA) Q
"RTN","IBCNBAC",24,0)
 S SKPBLANK=$G(SKPBLANK)
"RTN","IBCNBAC",25,0)
 ;
"RTN","IBCNBAC",26,0)
 S IBEXTDA=$G(IBGRPDA)_","
"RTN","IBCNBAC",27,0)
 ;
"RTN","IBCNBAC",28,0)
 I +$P($G(^IBA(355.3,+IBEXTDA,0)),U,11) W !,?23,"Selected Group/Plan is Inactive!",!
"RTN","IBCNBAC",29,0)
 ;
"RTN","IBCNBAC",30,0)
 W @IOF
"RTN","IBCNBAC",31,0)
 W ! D WRTFLD(" Group/Plan Data:  Buffer Data                     Selected Group/Plan          ",0,80,"BU")
"RTN","IBCNBAC",32,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(355.3,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBAC",33,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,40.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(355.3,IBEXTDA,.02),1:"") D WRTLN("Is Group Plan?:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBAC",34,0)
 ;
"RTN","IBCNBAC",35,0)
 D FIELDS("GRP","",SKPBLANK)
"RTN","IBCNBAC",36,0)
 ;
"RTN","IBCNBAC",37,0)
 Q
"RTN","IBCNBAC",38,0)
 ;
"RTN","IBCNBAC",39,0)
POLICY(IBBUFDA,IBPOLDA,SKPBLANK) ; display a buffer entry's patient policy fields and an existing patient policy's fields for comparison
"RTN","IBCNBAC",40,0)
 N DFN,IBEXTDA,IBFLD1,IBFLD2,X,Y,DIR,DIRUT I '$G(IBBUFDA) Q
"RTN","IBCNBAC",41,0)
 S SKPBLANK=$G(SKPBLANK)
"RTN","IBCNBAC",42,0)
 S DFN=+$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBAC",43,0)
 ;
"RTN","IBCNBAC",44,0)
 S IBEXTDA=$G(IBPOLDA)_","_DFN_","
"RTN","IBCNBAC",45,0)
 ;
"RTN","IBCNBAC",46,0)
 W @IOF
"RTN","IBCNBAC",47,0)
 W ! D WRTFLD("     Policy Data:  Buffer Data                     Selected Policy              ",0,80,"BU")
"RTN","IBCNBAC",48,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2.312,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBAC",49,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,90.02),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2.312,IBEXTDA,21),1:"") D WRTLN("Group #:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBAC",50,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,60.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2,DFN,.01),1:"") D WRTLN("Patient Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBAC",51,0)
 S IBFLD1=$P($$GET1^DIQ(355.33,IBBUFDA,.1),"@"),IBFLD2=$S(+IBEXTDA:$P($$GET1^DIQ(2.312,IBEXTDA,1.03),"@"),1:"") D WRTLN("Last Verified:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBAC",52,0)
 ;
"RTN","IBCNBAC",53,0)
 D FIELDS("POL","",SKPBLANK)
"RTN","IBCNBAC",54,0)
 ;
"RTN","IBCNBAC",55,0)
 I +$G(^IBA(355.33,IBBUFDA,61))!($$GET1^DIQ(2.312,IBEXTDA,2.1)="YES") D ESGHP(SKPBLANK)
"RTN","IBCNBAC",56,0)
 ;
"RTN","IBCNBAC",57,0)
 Q
"RTN","IBCNBAC",58,0)
 ;
"RTN","IBCNBAC",59,0)
ESGHP(SKPBLANK) ; display employee sponsored group health plan
"RTN","IBCNBAC",60,0)
 S SKPBLANK=$G(SKPBLANK)
"RTN","IBCNBAC",61,0)
 W !!
"RTN","IBCNBAC",62,0)
 ;
"RTN","IBCNBAC",63,0)
 D FIELDS("POL",1,SKPBLANK)
"RTN","IBCNBAC",64,0)
 ;
"RTN","IBCNBAC",65,0)
 Q
"RTN","IBCNBAC",66,0)
 ;
"RTN","IBCNBAC",67,0)
SUB(SKPBLANK,IBFNAM,IBHOLD,IBXHOLD) ; display patient registration
"RTN","IBCNBAC",68,0)
 D SUB^IBCNBCD7(SKPBLANK,IBFNAM,.IBHOLD,.IBXHOLD)
"RTN","IBCNBAC",69,0)
 Q
"RTN","IBCNBAC",70,0)
 ;
"RTN","IBCNBAC",71,0)
FIELDS(SET,ESGHP,SKPBLANK) ; accept each field and set into temp array
"RTN","IBCNBAC",72,0)
 N CHGCHK,IBFLDLST,IBFLDVAL,IBUSER,IBLABEL,EXTFILE,IBEXTFLD
"RTN","IBCNBAC",73,0)
 S ESGHP=$G(ESGHP),SKPBLANK=$G(SKPBLANK)
"RTN","IBCNBAC",74,0)
 ;
"RTN","IBCNBAC",75,0)
 K IBFLDS,IBADDS,IBLBLS
"RTN","IBCNBAC",76,0)
 ;
"RTN","IBCNBAC",77,0)
 S EXTFILE=+$P($T(@(SET_"DR")+1^IBCNBMI),";;",2)
"RTN","IBCNBAC",78,0)
 D FIELDS^IBCNBMI(SET_"FLD")
"RTN","IBCNBAC",79,0)
 ;
"RTN","IBCNBAC",80,0)
 S CHGCHK=0 ; Initialize variable to check for any items to accept
"RTN","IBCNBAC",81,0)
 S IBBUFFLD=0 F  S IBBUFFLD=$O(IBFLDS(IBBUFFLD)) Q:'IBBUFFLD  I '$D(IBADDS(IBBUFFLD)) D  Q:$G(IBUSER)<0
"RTN","IBCNBAC",82,0)
 . I '$$ESGHPFLD(ESGHP,IBBUFFLD) Q
"RTN","IBCNBAC",83,0)
 . ;
"RTN","IBCNBAC",84,0)
 . S IBEXTFLD=IBFLDS(IBBUFFLD),IBLABEL=IBLBLS(IBBUFFLD)_":"
"RTN","IBCNBAC",85,0)
 . S IBFLDVAL=$$DISPLAY(IBBUFFLD,EXTFILE,IBEXTFLD,IBLABEL)
"RTN","IBCNBAC",86,0)
 . I $P(IBFLDVAL,U,1)=$P(IBFLDVAL,U,2) Q
"RTN","IBCNBAC",87,0)
 . I SKPBLANK,$P(IBFLDVAL,U,1)="" Q
"RTN","IBCNBAC",88,0)
 . ;
"RTN","IBCNBAC",89,0)
 . S CHGCHK=1
"RTN","IBCNBAC",90,0)
 . S IBUSER=$$ACCEPT($P(IBFLDVAL,U,1),$P(IBFLDVAL,U,2)) Q:IBUSER<0
"RTN","IBCNBAC",91,0)
 . I +IBUSER S ^TMP($J,"IB BUFFER SELECTED",IBBUFFLD)=""
"RTN","IBCNBAC",92,0)
 ;
"RTN","IBCNBAC",93,0)
 S IBFLDLST="" ; allow selection of address data in a group rather than individually
"RTN","IBCNBAC",94,0)
 S IBBUFFLD=0 F  S IBBUFFLD=$O(IBFLDS(IBBUFFLD)) Q:'IBBUFFLD  I $D(IBADDS(IBBUFFLD)) D
"RTN","IBCNBAC",95,0)
 . I '$$ESGHPFLD(ESGHP,IBBUFFLD) Q
"RTN","IBCNBAC",96,0)
 . ;
"RTN","IBCNBAC",97,0)
 . S IBEXTFLD=IBFLDS(IBBUFFLD),IBLABEL=IBLBLS(IBBUFFLD)_":"
"RTN","IBCNBAC",98,0)
 . S IBFLDVAL=$$DISPLAY(IBBUFFLD,EXTFILE,IBEXTFLD,IBLABEL)
"RTN","IBCNBAC",99,0)
 . I $P(IBFLDVAL,U,1)=$P(IBFLDVAL,U,2) Q
"RTN","IBCNBAC",100,0)
 . I SKPBLANK,$P(IBFLDVAL,U,1)="" Q  ; Do not prompt for blanks, if skipping
"RTN","IBCNBAC",101,0)
 . S CHGCHK=1
"RTN","IBCNBAC",102,0)
 . S IBFLDLST=IBFLDLST_IBBUFFLD_U
"RTN","IBCNBAC",103,0)
 ;
"RTN","IBCNBAC",104,0)
 I IBFLDLST'="" S IBUSER=$$ACCEPTG Q:IBUSER<0  D
"RTN","IBCNBAC",105,0)
 . I +IBUSER F IBUSER=1:1 S IBBUFFLD=$P(IBFLDLST,U,IBUSER) Q:'IBBUFFLD  S ^TMP($J,"IB BUFFER SELECTED",IBBUFFLD)=""
"RTN","IBCNBAC",106,0)
 ;
"RTN","IBCNBAC",107,0)
 ; Display message if there were no changes to accept
"RTN","IBCNBAC",108,0)
 I CHGCHK=0 W !!,"There are no changes to be accepted, based on the method of update chosen."
"RTN","IBCNBAC",109,0)
 I CHGCHK=1 W !!,"End of changes for "_$S(SET="INS":"INSURANCE",SET="GRP":"GROUP",(SET="POL"&'ESGHP):"POLICY",1:"EMPLOYEE SPONSORED GROUP HEALTH PLAN")_" related data."
"RTN","IBCNBAC",110,0)
 K DIR
"RTN","IBCNBAC",111,0)
 D PAUSE^VALM1
"RTN","IBCNBAC",112,0)
 ;
"RTN","IBCNBAC",113,0)
 Q
"RTN","IBCNBAC",114,0)
 ;
"RTN","IBCNBAC",115,0)
ESGHPFLD(ESGHP,IBBUFFLD) ; return true if field should be included, if ESGHP then include all 61.* fields, else exclude those fields
"RTN","IBCNBAC",116,0)
 N IBX,IBY
"RTN","IBCNBAC",117,0)
 S IBX=1,IBY=0,ESGHP=$G(ESGHP)
"RTN","IBCNBAC",118,0)
 I IBBUFFLD>61,IBBUFFLD<61.99 S IBY=1
"RTN","IBCNBAC",119,0)
 I +IBY,'ESGHP S IBX=0
"RTN","IBCNBAC",120,0)
 I 'IBY,ESGHP S IBX=0
"RTN","IBCNBAC",121,0)
 Q IBX
"RTN","IBCNBAC",122,0)
 ;
"RTN","IBCNBAC",123,0)
ACCEPT(BUFDATA,EXTDATA) ; ask user if they want to accept the change, returns true if yes
"RTN","IBCNBAC",124,0)
 N IBX S IBX=0
"RTN","IBCNBAC",125,0)
 I $G(BUFDATA)=$G(EXTDATA) Q IBX
"RTN","IBCNBAC",126,0)
 I BUFDATA="" S DIR("A")="Accept Change, Delete",DIR("?")="The Buffer field is null, accepting the change will result in the Insurance Company data ("_EXTDATA_") being deleted"
"RTN","IBCNBAC",127,0)
 I BUFDATA'="" S DIR("A")="Accept Change, Replace",DIR("?")="Accepting the change will result Buffer data ("_BUFDATA_") replacing the Insurance Company data ("_EXTDATA_")"
"RTN","IBCNBAC",128,0)
 S DIR(0)="Y",DIR("B")="No" D ^DIR I Y=1 S IBX=1
"RTN","IBCNBAC",129,0)
 I $D(DIRUT)!$D(DTOUT) S IBX=-1
"RTN","IBCNBAC",130,0)
 W !
"RTN","IBCNBAC",131,0)
 Q IBX
"RTN","IBCNBAC",132,0)
 ;
"RTN","IBCNBAC",133,0)
 ;
"RTN","IBCNBAC",134,0)
ACCEPTG() ; ask user if they want to accept the entire address change, returns true if yes
"RTN","IBCNBAC",135,0)
 N IBX S IBX=0
"RTN","IBCNBAC",136,0)
 S DIR("A")="Accept Address Change",DIR("?")="Accepting the change will result in the entire Buffer Address replacing the Insurance Company Address"
"RTN","IBCNBAC",137,0)
 S DIR(0)="Y",DIR("B")="No" D ^DIR I Y=1 S IBX=1
"RTN","IBCNBAC",138,0)
 I $D(DIRUT)!$D(DTOUT) S IBX=-1
"RTN","IBCNBAC",139,0)
 W !
"RTN","IBCNBAC",140,0)
 Q IBX
"RTN","IBCNBAC",141,0)
 ;
"RTN","IBCNBAC",142,0)
DISPLAY(BFLD,IFILE,IFLD,LABEL) ; extract, compare, write the two corresponding fields; one from buffer, one from ins files
"RTN","IBCNBAC",143,0)
 N BUFDATA,EXTDATA,IBOVER,IBMERG,IBATTR,IBDATA S EXTDATA=""
"RTN","IBCNBAC",144,0)
 S BUFDATA=$$GET1^DIQ(355.33,IBBUFDA,BFLD)
"RTN","IBCNBAC",145,0)
 I +IBEXTDA S EXTDATA=$$GET1^DIQ(IFILE,IBEXTDA,IFLD)
"RTN","IBCNBAC",146,0)
 S IBDATA=BUFDATA_U_EXTDATA
"RTN","IBCNBAC",147,0)
 ;
"RTN","IBCNBAC",148,0)
 S (IBOVER,IBMERG,IBATTR)=""
"RTN","IBCNBAC",149,0)
 I BUFDATA'=EXTDATA S (IBOVER,IBMERG,IBATTR)="B"
"RTN","IBCNBAC",150,0)
 ; When skipping blanks, display skipped items without bold
"RTN","IBCNBAC",151,0)
 I SKPBLANK,BUFDATA="" S (IBOVER,IBMERG,IBATTR)=""
"RTN","IBCNBAC",152,0)
 ;
"RTN","IBCNBAC",153,0)
 D WRTLN(LABEL,BUFDATA,EXTDATA,IBOVER,IBMERG,IBATTR)
"RTN","IBCNBAC",154,0)
 Q IBDATA
"RTN","IBCNBAC",155,0)
 ;
"RTN","IBCNBAC",156,0)
WRTLN(LABEL,FLD1,FLD2,OVER,MERG,ATTR) ; write a line of formatted data with label and two fields
"RTN","IBCNBAC",157,0)
 S ATTR=$G(ATTR),OVER=ATTR_$G(OVER),MERG=ATTR_$G(MERG)
"RTN","IBCNBAC",158,0)
 S LABEL=$J(LABEL,17)_"  ",FLD1=FLD1_$J("",29-$L(FLD1)),FLD2=FLD2_$J("",29-$L(FLD2))
"RTN","IBCNBAC",159,0)
 W !
"RTN","IBCNBAC",160,0)
 D WRTFLD(LABEL,0,19,ATTR),WRTFLD(FLD1,19,29,MERG)
"RTN","IBCNBAC",161,0)
 D WRTFLD(" | ",48,3,ATTR),WRTFLD(FLD2,51,29,OVER)
"RTN","IBCNBAC",162,0)
 Q
"RTN","IBCNBAC",163,0)
 ;
"RTN","IBCNBAC",164,0)
WRTFLD(STRING,COL,WD,ATTR) ; write an individual field with display attributes
"RTN","IBCNBAC",165,0)
 N ATTRB,ATTRE,DX,DY,X,Y
"RTN","IBCNBAC",166,0)
 S ATTRB="",ATTRB=$S(ATTR["B":$G(IOINHI),1:"")_$S(ATTR["U":$G(IOUON),1:"")
"RTN","IBCNBAC",167,0)
 S ATTRE="",ATTRE=$S(ATTR["B":$G(IOINORM),1:"")_$S(ATTR["U":$G(IOUOFF),1:"")
"RTN","IBCNBAC",168,0)
 ;
"RTN","IBCNBAC",169,0)
 S DX=COL,DY=$Y X IOXY
"RTN","IBCNBAC",170,0)
 W ATTRB,$E(STRING,1,WD),ATTRE
"RTN","IBCNBAC",171,0)
 S DX=(COL+WD),DY=$Y X IOXY
"RTN","IBCNBAC",172,0)
 Q
"RTN","IBCNBAR")
0^127^B51423558
"RTN","IBCNBAR",1,0)
IBCNBAR ;ALB/ARH/AWC - Ins Buffer: process Accept and Reject ;15 Jan 2009
"RTN","IBCNBAR",2,0)
 ;;2.0;INTEGRATED BILLING;**82,240,345,413,416,497,528**;21-MAR-94;Build 163
"RTN","IBCNBAR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBAR",4,0)
 ;
"RTN","IBCNBAR",5,0)
ACCEPT(IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBMVSUB,IBNEWINS,IBNEWGRP,IBNEWPOL,IBELIG,IBSEL,IBRIEN,IBSIEN,IBFNAM,IBVAL,IBHOLD,IBXHOLD) ; move buffer data into Insurance files then cleanup
"RTN","IBCNBAR",6,0)
 ;    1) data moved into insurance files, new records created if needed or edit existing ones
"RTN","IBCNBAR",7,0)
 ;    2) complete some general functions that are executed whenever insurance is entered/edited
"RTN","IBCNBAR",8,0)
 ;    3) allow user to view buffer entry and new/updated insurance records
"RTN","IBCNBAR",9,0)
 ;    4) buffer ins/group/policy data deleted
"RTN","IBCNBAR",10,0)
 ;    5) buffer entry status updated
"RTN","IBCNBAR",11,0)
 ;
"RTN","IBCNBAR",12,0)
 N RESULT,IBSUPRES
"RTN","IBCNBAR",13,0)
 ;Set IBSUPRES to zero to not suppress I/O within Accept 
"RTN","IBCNBAR",14,0)
 S IBSUPRES=0
"RTN","IBCNBAR",15,0)
 ;
"RTN","IBCNBAR",16,0)
PROCESS ; process all changes selected by user, add/edit insurance files based
"RTN","IBCNBAR",17,0)
 ; on buffer data. Entry point for ACCEPAPI^IBCNICB (patch 413)
"RTN","IBCNBAR",18,0)
 ;
"RTN","IBCNBAR",19,0)
 N IVMINSUP,IBNEW,IBCDFN,RIEN S IBCDFN=IBPOLDA S:+IBNEWPOL IBNEW=1 D BEFORE^IBCNSEVT ; insurance event driver
"RTN","IBCNBAR",20,0)
 ;
"RTN","IBCNBAR",21,0)
 N DIR,X,Y,IBX,IBINSH,IBGRPH,IBPOLH,IBSUBH S (IBINSH,IBGRPH,IBPOLH,IBSUBH)="Updated" W:$G(IBSUPRES)'>0 " ...",!
"RTN","IBCNBAR",22,0)
 ;
"RTN","IBCNBAR",23,0)
 S RESULT(0)="-1^Add new INSURANCE COMPANY failed"
"RTN","IBCNBAR",24,0)
 I +IBNEWINS S IBINSDA=+$$NEWINS^IBCNBMN(IBBUFDA) G:'IBINSDA ACCPTQ  S IBINSH="Created",RESULT(1)="IBINSDA^"_IBINSDA
"RTN","IBCNBAR",25,0)
 ;
"RTN","IBCNBAR",26,0)
 S RESULT(0)="-1^Add new GROUP INSURANCE PLAN failed"
"RTN","IBCNBAR",27,0)
 I +IBNEWGRP S IBGRPDA=+$$NEWGRP^IBCNBMN(IBBUFDA,+IBINSDA) G:'IBGRPDA ACCPTQ S IBGRPH="Created",RESULT(2)="IBGRPDA^"_IBGRPDA
"RTN","IBCNBAR",28,0)
 ;
"RTN","IBCNBAR",29,0)
 S RESULT(0)="-1^Add new patient insurance policy failed"
"RTN","IBCNBAR",30,0)
 I +IBNEWPOL S IBPOLDA=+$$NEWPOL^IBCNBMN(IBBUFDA,+IBINSDA,+IBGRPDA) G:'IBPOLDA ACCPTQ S (IBPOLH,IBSUBH)="Created",RESULT(3)="IBPOLDA^"_IBPOLDA
"RTN","IBCNBAR",31,0)
 ;
"RTN","IBCNBAR",32,0)
 ;Only do this check for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",33,0)
 S RESULT(0)="-1^Move TYPE parameter value="_IBMVINS_" is invalid"
"RTN","IBCNBAR",34,0)
 I $G(IBSUPRES)>0,"^1^2^3^"'[("^"_IBMVINS_"^") Q
"RTN","IBCNBAR",35,0)
 ;
"RTN","IBCNBAR",36,0)
 S RESULT(0)="-1^Move buffer data to insurance files failed"
"RTN","IBCNBAR",37,0)
 I +IBINSDA,+IBMVINS D INS^IBCNBMI(IBBUFDA,IBINSDA,+IBMVINS,.RESULT) W:$G(IBSUPRES)'>0 !,"Insurance Company "_IBINSH_"..."
"RTN","IBCNBAR",38,0)
 I +IBINSDA,+IBMVGRP,+IBGRPDA D 
"RTN","IBCNBAR",39,0)
 . D GRP^IBCNBMI(IBBUFDA,IBGRPDA,+IBMVGRP,.RESULT)
"RTN","IBCNBAR",40,0)
 . ; For ICB Interface ensure INDIVIDUAL POLICY PATIENT (.1) field is
"RTN","IBCNBAR",41,0)
 . ; appropriate for IS THIS A GROUP POLICY? (.02) field
"RTN","IBCNBAR",42,0)
 . I $G(IBSUPRES)>0 D
"RTN","IBCNBAR",43,0)
 . . N IBFLDS,IBISGRP,IBPAT
"RTN","IBCNBAR",44,0)
 . . S IBISGRP=$$GET1^DIQ(355.3,IBGRPDA,.02,"I")
"RTN","IBCNBAR",45,0)
 . . S IBPAT=$$GET1^DIQ(355.3,IBGRPDA,.1,"I")
"RTN","IBCNBAR",46,0)
 . . ;Quit if Group Policy and .1 field isn't populated
"RTN","IBCNBAR",47,0)
 . . I IBISGRP>0,IBPAT'>0 Q
"RTN","IBCNBAR",48,0)
 . . ;Quit if Individual Policy and .1 field is populated.
"RTN","IBCNBAR",49,0)
 . . I IBISGRP'>0,IBPAT>0 Q
"RTN","IBCNBAR",50,0)
 . . ;Delete .1 field if Group Policy
"RTN","IBCNBAR",51,0)
 . . I IBISGRP>0 S IBFLDS(355.3,IBGRPDA_",",.1)="@"
"RTN","IBCNBAR",52,0)
 . . I IBISGRP'>0 S IBFLDS(355.3,IBGRPDA_",",.1)=DFN
"RTN","IBCNBAR",53,0)
 . . D FILE^DIE("","IBFLDS","IBERR")
"RTN","IBCNBAR",54,0)
 . W:$G(IBSUPRES)'>0 !,"Group/Plan "_IBGRPH_"..."
"RTN","IBCNBAR",55,0)
 ;
"RTN","IBCNBAR",56,0)
 I +IBINSDA,+IBMVPOL,+IBGRPDA,+IBPOLDA D POLICY^IBCNBMI(IBBUFDA,IBPOLDA,+IBMVPOL,.RESULT) W:$G(IBSUPRES)'>0 !,"Patient Policy "_IBPOLH_"..."
"RTN","IBCNBAR",57,0)
 ;
"RTN","IBCNBAR",58,0)
 S RESULT(0)="-1^Move Patient Registration data into Insurance files failed"
"RTN","IBCNBAR",59,0)
 I +IBINSDA,+$G(IBMVSUB),+IBGRPDA,+IBPOLDA D SUB^IBCNBMI(IBBUFDA,IBPOLDA,IBRIEN,IBSEL,+IBMVSUB,.RESULT,DFN,IBFNAM,IBVAL,.IBHOLD,.IBXHOLD) W:$G(IBSUPRES)'>0 !,"Subscriber Insurance Information "_IBSUBH_"..."
"RTN","IBCNBAR",60,0)
 ;
"RTN","IBCNBAR",61,0)
 I +IBELIG S RIEN=$O(^IBCN(365,"AF",IBBUFDA,""),-1) I RIEN D GRPFILE^IBCNEHL1(DFN,IBPOLDA,RIEN,0),EBFILE^IBCNEHL1(DFN,IBPOLDA,RIEN,0) W:$G(IBSUPRES)'>0 !,"Eligibility/Benfits data Updated..."
"RTN","IBCNBAR",62,0)
 ;
"RTN","IBCNBAR",63,0)
 ;Only do this update for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",64,0)
 I $G(IBSUPRES)>0,+IBMVPOL,+IBGRPDA,+IBPOLDA,'IBNEWPOL D UPDPOL^IBCNICB(.RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA)
"RTN","IBCNBAR",65,0)
 ;
"RTN","IBCNBAR",66,0)
CLEANUP ; general updates and checks done whenever insurance is added/edited and clean up buffer file
"RTN","IBCNBAR",67,0)
 N IBSOURCE S IBSOURCE=$P($G(^IBA(355.33,IBBUFDA,0)),U,3)
"RTN","IBCNBAR",68,0)
 ;
"RTN","IBCNBAR",69,0)
 ;Don't do PAT^IBCNBMI for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",70,0)
 I $G(IBSUPRES)'>0,+IBPOLDA D PAT^IBCNBMI(DFN,IBPOLDA) ; update DOB&SSN of Pat Ins from Pat file
"RTN","IBCNBAR",71,0)
 D POL^IBCNSU41(DFN) ; update Tricare sponsor data
"RTN","IBCNBAR",72,0)
 D COVERED^IBCNSM31(DFN) ; update 'Covered by Insurance' field (2,.3192
"RTN","IBCNBAR",73,0)
 I +IBSOURCE=3 D IVM(1,IBBUFDA,$G(IVMREPTR),$G(IBSUPRES)) ; update/notify IVM
"RTN","IBCNBAR",74,0)
 ;Suppress Write in $$DUPCO^IBCNSOK1 if called from ICB Interface
"RTN","IBCNBAR",75,0)
 I +IBINSDA,+IBPOLDA S IBX=$$DUPCO^IBCNSOK1(DFN,IBINSDA,IBPOLDA,$S($G(IBSUPRES)>0:0,1:1)) ; warning if duplicate policy added for patient
"RTN","IBCNBAR",76,0)
 S RESULT(0)="0"_$S($G(IBX):"^Warning - Duplicate or inconsistent insurance data",1:"")
"RTN","IBCNBAR",77,0)
 ;
"RTN","IBCNBAR",78,0)
 ;Suppress Write in $$DUPPOL^IBCNSOK1 if called from ICB Interface
"RTN","IBCNBAR",79,0)
 I +IBGRPDA S IBX=$$DUPPOL^IBCNSOK1(IBGRPDA,$S($G(IBSUPRES)>0:0,1:1)) ; warning if duplicate plan was added
"RTN","IBCNBAR",80,0)
 S:IBX RESULT(0)=RESULT(0)_"^Warning - Duplicate or inconsistent policy data"
"RTN","IBCNBAR",81,0)
 ;
"RTN","IBCNBAR",82,0)
 ;Suppress Write in $$PTHLD^IBOHCR if called from ICB Interface
"RTN","IBCNBAR",83,0)
 I +IBNEWPOL I +$$PTHLD^IBOHCR(DFN,1,$S($G(IBSUPRES)>0:0,1:1)) D
"RTN","IBCNBAR",84,0)
 . W:$G(IBSUPRES)'>0 !!,"Patient's bills On Hold date updated due to new insurance."
"RTN","IBCNBAR",85,0)
 . S RESULT(0)=RESULT(0)_"^Patient's bills On Hold date updated due to new insurance"
"RTN","IBCNBAR",86,0)
 ;
"RTN","IBCNBAR",87,0)
 I $$HOLD^IBCNBLL(DFN) D
"RTN","IBCNBAR",88,0)
 . W:$G(IBSUPRES)'>0 !!,"There are bills On Hold for this patient."
"RTN","IBCNBAR",89,0)
 . S RESULT(0)=RESULT(0)_"^There are bills On Hold for this patient"
"RTN","IBCNBAR",90,0)
 ;
"RTN","IBCNBAR",91,0)
 ;Suppress DIR call functionality for ICB ACCEPAPI^IBCNICB interface
"RTN","IBCNBAR",92,0)
 D:$G(IBSUPRES)'>0
"RTN","IBCNBAR",93,0)
 . W !! S DIR(0)="FO",DIR("A")="Press 'V' to view the changes or Return to continue" D ^DIR
"RTN","IBCNBAR",94,0)
 . I Y="V"!(Y="v") D
"RTN","IBCNBAR",95,0)
 . . W !!
"RTN","IBCNBAR",96,0)
 . . D INS^IBCNBCD(IBBUFDA,IBINSDA),WAIT^IBCNBUH
"RTN","IBCNBAR",97,0)
 . . D GRP^IBCNBCD(IBBUFDA,IBGRPDA),WAIT^IBCNBUH
"RTN","IBCNBAR",98,0)
 . . D POLICY^IBCNBCD(IBBUFDA,IBPOLDA),WAIT^IBCNBUH
"RTN","IBCNBAR",99,0)
 . . S IBSIEN=$S(+IBPOLDA:IBPOLDA_","_DFN_",",1:0)
"RTN","IBCNBAR",100,0)
 . . I +IBSIEN,+$G(IBSEL) D SBDISP^IBCNBCD4(IBBUFDA,DFN,IBPOLDA,IBSEL,IBRIEN,IBSIEN,IBFNAM,IBVAL,.IBHOLD,.IBXHOLD),WAIT^IBCNBUH
"RTN","IBCNBAR",101,0)
 ;
"RTN","IBCNBAR",102,0)
 ; if source is eIV, update insurance record field in transmission queue (365.1/.13)
"RTN","IBCNBAR",103,0)
 I $P(^IBA(355.33,IBBUFDA,0),U,3)=5 D UPDIREC^IBCNEHL3($O(^IBCN(365,"AF",IBBUFDA,"")),IBPOLDA)
"RTN","IBCNBAR",104,0)
 ; update buffer file entry so only stub remains and status is changed
"RTN","IBCNBAR",105,0)
 D STATUS^IBCNBEE(IBBUFDA,"A",IBNEWINS,IBNEWGRP,IBNEWPOL) ; update buffer entry's status to accepted
"RTN","IBCNBAR",106,0)
 D DELDATA^IBCNBED(IBBUFDA) ; delete buffer's insurance/patient data
"RTN","IBCNBAR",107,0)
 ;
"RTN","IBCNBAR",108,0)
 S IBCDFN=IBPOLDA S:+IBSOURCE=3 IVMINSUP=1 D AFTER^IBCNSEVT,^IBCNSEVT ; insurance event driver
"RTN","IBCNBAR",109,0)
 ;
"RTN","IBCNBAR",110,0)
ACCPTQ Q
"RTN","IBCNBAR",111,0)
 ;
"RTN","IBCNBAR",112,0)
REJECT(IBBUFDA) ; process a buffer entry reject
"RTN","IBCNBAR",113,0)
 ;    1) update/notify IVM
"RTN","IBCNBAR",114,0)
 ;    2) buffer ins/group/policy data deleted
"RTN","IBCNBAR",115,0)
 ;    3) buffer entry status updated
"RTN","IBCNBAR",116,0)
 ;    4) if patient has no other active insurance then release any patient bills On Hold
"RTN","IBCNBAR",117,0)
 ;
"RTN","IBCNBAR",118,0)
 N IBSUPRES,RESULT
"RTN","IBCNBAR",119,0)
 ;Set IBSUPRES to 0 to not suppress I/O within REJECT
"RTN","IBCNBAR",120,0)
 S IBSUPRES=0
"RTN","IBCNBAR",121,0)
 ;
"RTN","IBCNBAR",122,0)
REJPROC ;Entry point for REJECAPI^IBCNICB (Patch 413)
"RTN","IBCNBAR",123,0)
 ;
"RTN","IBCNBAR",124,0)
 N DFN S DFN=+$G(^IBA(355.33,+IBBUFDA,60))
"RTN","IBCNBAR",125,0)
 S RESULT="-1^PATIENT IEN MISSING FROM BUFFER ENTRY" Q:'$G(DFN)
"RTN","IBCNBAR",126,0)
 I +$P($G(^IBA(355.33,+IBBUFDA,0)),U,3)=3 D IVM(0,IBBUFDA,$G(IVMREPTR),$G(IBSUPRES))
"RTN","IBCNBAR",127,0)
 ;
"RTN","IBCNBAR",128,0)
 S RESULT=0
"RTN","IBCNBAR",129,0)
 D STATUS^IBCNBEE(+IBBUFDA,"R",0,0,0),DELDATA^IBCNBED(+IBBUFDA) W:$G(IBSUPRES)'>0 " ... done."
"RTN","IBCNBAR",130,0)
 ;
"RTN","IBCNBAR",131,0)
 I +DFN,'$$INSURED^IBCNS1(DFN),'$$BUFFER^IBCNBU1(DFN) D
"RTN","IBCNBAR",132,0)
 . ;Suppress Write in $$PTHLD^IBOHCR if called from ICB Interface
"RTN","IBCNBAR",133,0)
 . I +$$PTHLD^IBOHCR(DFN,2,$S($G(IBSUPRES)>0:0,1:1)) D
"RTN","IBCNBAR",134,0)
 . . I $G(IBSUPRES)'>0 W !!,"Patient has no other active Insurance.",!,"All patient bills On Hold waiting for Insurance to be released." D WAIT^IBCNBUH
"RTN","IBCNBAR",135,0)
 . . S RESULT=RESULT_"^Patient has no other active Insurance.  All patient bills On Hold waiting for Insurance to be released."
"RTN","IBCNBAR",136,0)
 ;
"RTN","IBCNBAR",137,0)
 Q
"RTN","IBCNBAR",138,0)
 ;
"RTN","IBCNBAR",139,0)
 ;
"RTN","IBCNBAR",140,0)
IVM(AR,IBBUFDA,IVMREPTR,IBSUPRES) ; IVM must be notified whenever a buffer entry
"RTN","IBCNBAR",141,0)
 ; that originated in IVM is accepted or rejected. This lets IVM clean up
"RTN","IBCNBAR",142,0)
 ; its files since IVM also has a buffer type file of insurance uploaded
"RTN","IBCNBAR",143,0)
 ; from the IVM center.
"RTN","IBCNBAR",144,0)
 ; If rejected and Interactive Reads not suppressed, IVM then ask the 
"RTN","IBCNBAR",145,0)
 ; user for a reason it was rejected
"RTN","IBCNBAR",146,0)
 ; input:  AR = 1 if accepted, 0 if rejected
"RTN","IBCNBAR",147,0)
 ;    IBBUFDA = Internal Entry Number to 355.33 file
"RTN","IBCNBAR",148,0)
 ;   IVMREPTR = Internal Entry Number to 301.91 file (Optional)
"RTN","IBCNBAR",149,0)
 ;   IBSUPRES = If equals 1, suppress writes and interactive reads
"RTN","IBCNBAR",150,0)
 ;
"RTN","IBCNBAR",151,0)
 N DFN,IBX,IBY I $P($G(^IBA(355.33,+IBBUFDA,0)),U,3)'=3 Q
"RTN","IBCNBAR",152,0)
 ;
"RTN","IBCNBAR",153,0)
 S DFN=+$G(^IBA(355.33,+IBBUFDA,60))
"RTN","IBCNBAR",154,0)
 S IBX=$P($G(^IBA(355.33,+IBBUFDA,20)),U,1)_U_$P($G(^IBA(355.33,+IBBUFDA,21)),U,1)_U_$P($G(^IBA(355.33,+IBBUFDA,90)),U,2)  ; IB*2.0*497 (vd)
"RTN","IBCNBAR",155,0)
 ;
"RTN","IBCNBAR",156,0)
 S IBY=$$UPDATE^IVMLINS4(DFN,AR,IBX,$G(IVMREPTR),$G(IBSUPRES))
"RTN","IBCNBAR",157,0)
 Q
"RTN","IBCNBCD")
0^122^B99061672
"RTN","IBCNBCD",1,0)
IBCNBCD ;ALB/ARH - Ins Buffer: display/compare buffer and existing ins ;1 Jun 97
"RTN","IBCNBCD",2,0)
 ;;2.0;INTEGRATED BILLING;**82,251,361,371,416,438,452,497,528**;21-MAR-94;Build 163
"RTN","IBCNBCD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBCD",4,0)
 ;
"RTN","IBCNBCD",5,0)
INS(IBBUFDA,IBINSDA) ; display a buffer entry's insurance company fields and
"RTN","IBCNBCD",6,0)
 ; an existing insurance company's fields for comparison
"RTN","IBCNBCD",7,0)
 N IBEXTDA,IBFLD1,IBFLD2,X I '$G(IBBUFDA) Q
"RTN","IBCNBCD",8,0)
 ;
"RTN","IBCNBCD",9,0)
 S IBEXTDA=$G(IBINSDA)_","
"RTN","IBCNBCD",10,0)
 ;
"RTN","IBCNBCD",11,0)
 I +$P($G(^DIC(36,+IBEXTDA,0)),U,5) W !,?10,"Selected Insurance Company "_$$GET1^DIQ(36,IBEXTDA,.01)_" is Inactive!",!
"RTN","IBCNBCD",12,0)
 ;
"RTN","IBCNBCD",13,0)
 W ! D WRTFLD("  Insurance Data:  Buffer Data                     Selected Insurance Company   ",0,80,"BU")
"RTN","IBCNBCD",14,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(36,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",15,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.05),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(36,IBEXTDA,1),1:"") D WRTLN("Reimburse?:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",16,0)
 ;
"RTN","IBCNBCD",17,0)
 D DISPLAY(20.02,36,.131,"Phone Number:")
"RTN","IBCNBCD",18,0)
 D DISPLAY(20.03,36,.132,"Billing Phone:")
"RTN","IBCNBCD",19,0)
 D DISPLAY(20.04,36,.133,"Pre-Cert Phone:")
"RTN","IBCNBCD",20,0)
 D DISPLAY(21.01,36,.111,"Street [Line 1]:")
"RTN","IBCNBCD",21,0)
 D DISPLAY(21.02,36,.112,"Street [Line 2]:")
"RTN","IBCNBCD",22,0)
 D DISPLAY(21.03,36,.113,"Street [Line 3]:")
"RTN","IBCNBCD",23,0)
 D DISPLAY(21.04,36,.114,"City:")
"RTN","IBCNBCD",24,0)
 D DISPLAY(21.05,36,.115,"State:")
"RTN","IBCNBCD",25,0)
 D DISPLAY(21.06,36,.116,"Zip Code:")
"RTN","IBCNBCD",26,0)
 S IBFLD1="(bold=accepted on Merge)",IBFLD2="(bold=replaced on Overwrite)" D WRTLN("",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",27,0)
 Q
"RTN","IBCNBCD",28,0)
 ;
"RTN","IBCNBCD",29,0)
GRP(IBBUFDA,IBGRPDA) ; display a buffer entry's group insurance fields and an existing group/plan's fields for comparison
"RTN","IBCNBCD",30,0)
 N IBEXTDA,IBFLD1,IBFLD2,X I '$G(IBBUFDA) Q
"RTN","IBCNBCD",31,0)
 ;
"RTN","IBCNBCD",32,0)
 S IBEXTDA=$G(IBGRPDA)_","
"RTN","IBCNBCD",33,0)
 ;
"RTN","IBCNBCD",34,0)
 I +$P($G(^IBA(355.3,+IBEXTDA,0)),U,11) W !,?23,"Selected Group/Plan is Inactive!",!
"RTN","IBCNBCD",35,0)
 ;
"RTN","IBCNBCD",36,0)
 W ! D WRTFLD(" Group/Plan Data:  Buffer Data                     Selected Group/Plan          ",0,80,"BU")
"RTN","IBCNBCD",37,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(355.3,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",38,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,40.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(355.3,IBEXTDA,.02),1:"") D WRTLN("Is Group Plan?:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",39,0)
 ;
"RTN","IBCNBCD",40,0)
 D DISPLAY(90.01,355.3,2.01,"Group Name:")
"RTN","IBCNBCD",41,0)
 D DISPLAY(90.02,355.3,2.02,"Group Number:")
"RTN","IBCNBCD",42,0)
 D DISPLAY(40.1,355.3,6.02,"BIN:") ;;Daou/EEN - adding BIN and PCN
"RTN","IBCNBCD",43,0)
 D DISPLAY(40.11,355.3,6.03,"PCN:")
"RTN","IBCNBCD",44,0)
 D DISPLAY(40.04,355.3,.05,"Require UR:")
"RTN","IBCNBCD",45,0)
 D DISPLAY(40.05,355.3,.06,"Require Pre-Cert:")
"RTN","IBCNBCD",46,0)
 D DISPLAY(40.06,355.3,.12,"Require Amb Cert:")
"RTN","IBCNBCD",47,0)
 D DISPLAY(40.07,355.3,.07,"Exclude Pre-Cond:")
"RTN","IBCNBCD",48,0)
 D DISPLAY(40.08,355.3,.08,"Benefits Assign:")
"RTN","IBCNBCD",49,0)
 D DISPLAY(40.09,355.3,.09,"Type of Plan:")
"RTN","IBCNBCD",50,0)
 S IBFLD1="(bold=accepted on merge)",IBFLD2="(bold=replaced on overwrite)" D WRTLN("",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",51,0)
 Q
"RTN","IBCNBCD",52,0)
 ;
"RTN","IBCNBCD",53,0)
POLICY(IBBUFDA,IBPOLDA) ; display a buffer entry's patient policy fields and an existing patient policy's fields for comparison
"RTN","IBCNBCD",54,0)
 N DFN,IBEXTDA,IBFLD1,IBFLD2,X,Y,DIR,DIRUT I '$G(IBBUFDA) Q
"RTN","IBCNBCD",55,0)
 S DFN=+$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBCD",56,0)
 ;
"RTN","IBCNBCD",57,0)
 S IBEXTDA=$G(IBPOLDA)_","_DFN_","
"RTN","IBCNBCD",58,0)
 ;
"RTN","IBCNBCD",59,0)
 W ! D WRTFLD("     Policy Data:  Buffer Data                     Selected Policy              ",0,80,"BU")
"RTN","IBCNBCD",60,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,20.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2.312,IBEXTDA,.01),1:"<none selected>") D WRTLN("Company Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",61,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,90.02),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2.312,IBEXTDA,21),1:"") D WRTLN("Group #:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",62,0)
 S IBFLD1=$$GET1^DIQ(355.33,IBBUFDA,60.01),IBFLD2=$S(+IBEXTDA:$$GET1^DIQ(2,DFN,.01),1:"") D WRTLN("Patient Name:",IBFLD1,IBFLD2,"","","")
"RTN","IBCNBCD",63,0)
 S IBFLD1=$P($$GET1^DIQ(355.33,IBBUFDA,.1),"@"),IBFLD2=$S(+IBEXTDA:$P($$GET1^DIQ(2.312,IBEXTDA,1.03),"@"),1:"") D WRTLN("Last Verified:",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",64,0)
 ;
"RTN","IBCNBCD",65,0)
 D DISPLAY(60.02,2.312,8,"Effective Date:")
"RTN","IBCNBCD",66,0)
 D DISPLAY(60.03,2.312,3,"Expiration Date:")
"RTN","IBCNBCD",67,0)
 D DISPLAY(90.03,2.312,7.02,"Subscriber Id:")
"RTN","IBCNBCD",68,0)
 D DISPLAY(60.05,2.312,6,"Whose Insurance:")
"RTN","IBCNBCD",69,0)
 D DISPLAY(60.06,2.312,16,"Relationship:")
"RTN","IBCNBCD",70,0)
 D DISPLAY(60.15,2.312,4.05,"Rx Relationship:")
"RTN","IBCNBCD",71,0)
 D DISPLAY(60.16,2.312,4.06,"Rx Person Code:")
"RTN","IBCNBCD",72,0)
 D DISPLAY(91.01,2.312,7.01,"Subscriber Name:")
"RTN","IBCNBCD",73,0)
 D DISPLAY(60.08,2.312,3.01,"Subscriber's DOB:")
"RTN","IBCNBCD",74,0)
 D DISPLAY(60.09,2.312,3.05,"Subscriber's SSN:")
"RTN","IBCNBCD",75,0)
 D DISPLAY(60.13,2.312,3.12,"Subscriber's SEX:")
"RTN","IBCNBCD",76,0)
 D DISPLAY(60.1,2.312,4.01,"Primary Provider:")
"RTN","IBCNBCD",77,0)
 D DISPLAY(60.11,2.312,4.02,"Provider Phone:")
"RTN","IBCNBCD",78,0)
 D DISPLAY(60.12,2.312,.2,"Coor of Benefits:")
"RTN","IBCNBCD",79,0)
 D DISPLAY(61.01,2.312,2.1,"Emp Sponsored?:")
"RTN","IBCNBCD",80,0)
 D DISPLAY(62.01,2.312,5.01,"Patient Id:")
"RTN","IBCNBCD",81,0)
 D DISPLAY(62.02,2.312,3.06,"Subscr Str Ln 1:")
"RTN","IBCNBCD",82,0)
 D DISPLAY(62.03,2.312,3.07,"Subscr Str Ln 2:")
"RTN","IBCNBCD",83,0)
 D DISPLAY(62.04,2.312,3.08,"Subscr City:")
"RTN","IBCNBCD",84,0)
 D DISPLAY(62.05,2.312,3.09,"Subscr State:")
"RTN","IBCNBCD",85,0)
 D DISPLAY(62.06,2.312,3.1,"Subscr Zip:")
"RTN","IBCNBCD",86,0)
 D DISPLAY(62.07,2.312,3.13,"Subscr Country:")
"RTN","IBCNBCD",87,0)
 D DISPLAY(62.08,2.312,3.14,"Subscr Subdiv:")
"RTN","IBCNBCD",88,0)
 D DISPLAY(62.09,2.312,3.11,"Subscr Phone:")  ; 528 - baa
"RTN","IBCNBCD",89,0)
 ;
"RTN","IBCNBCD",90,0)
 I +$G(^IBA(355.33,IBBUFDA,61))!($$GET1^DIQ(2.312,IBEXTDA,2.1)="YES") D ESGHP
"RTN","IBCNBCD",91,0)
 ;
"RTN","IBCNBCD",92,0)
 S IBFLD1="(bold=accepted on merge)",IBFLD2="(bold=replaced on overwrite)" D WRTLN("",IBFLD1,IBFLD2,"","","U")
"RTN","IBCNBCD",93,0)
 ;
"RTN","IBCNBCD",94,0)
 Q
"RTN","IBCNBCD",95,0)
 ;
"RTN","IBCNBCD",96,0)
ESGHP ; display employee sponsored group health plan
"RTN","IBCNBCD",97,0)
 W ! S DIR(0)="E",DIR("A")="Enter RETURN to continue" D ^DIR W ! Q:$D(DIRUT)
"RTN","IBCNBCD",98,0)
 ;
"RTN","IBCNBCD",99,0)
 D DISPLAY(61.02,2.312,2.015,"Employer Name:")
"RTN","IBCNBCD",100,0)
 D DISPLAY(61.03,2.312,2.11,"Emp Status:")
"RTN","IBCNBCD",101,0)
 D DISPLAY(61.04,2.312,2.12,"Retirement Date:")
"RTN","IBCNBCD",102,0)
 D DISPLAY(61.05,2.312,2.01,"Send to Employer:")
"RTN","IBCNBCD",103,0)
 D DISPLAY(61.06,2.312,2.02,"Emp Street Ln 1:")
"RTN","IBCNBCD",104,0)
 D DISPLAY(61.07,2.312,2.03,"Emp Street Ln 2:")
"RTN","IBCNBCD",105,0)
 D DISPLAY(61.08,2.312,2.04,"Emp Street Ln 3:")
"RTN","IBCNBCD",106,0)
 D DISPLAY(61.09,2.312,2.05,"Emp City:")
"RTN","IBCNBCD",107,0)
 D DISPLAY(61.1,2.312,2.06,"Emp State:")
"RTN","IBCNBCD",108,0)
 D DISPLAY(61.11,2.312,2.07,"Emp Zip Code:")
"RTN","IBCNBCD",109,0)
 D DISPLAY(61.12,2.312,2.08,"Emp Phone:")
"RTN","IBCNBCD",110,0)
 ;
"RTN","IBCNBCD",111,0)
 Q
"RTN","IBCNBCD",112,0)
 ;
"RTN","IBCNBCD",113,0)
ELIG(IBBUFDA,IBPOLDA) ; display eligibility/benefit data
"RTN","IBCNBCD",114,0)
 N ATTR,BRESTR,BRELEN,BRPSTR,BRPLEN,CMPSTR,CMPLEN,DFN,EBISTR,EBILEN,EX,HCSSTR,HCSLEN,I,I1,IBVEBCOL,LEN,RESPIEN
"RTN","IBCNBCD",115,0)
 N RDATA,IDATA,NODATA,NOIDATA,ENDSEC,NOHSTR,NOHLEN,NOCSTR,NOCLEN,NOBSTR,NOBLEN,GRPSTR,GRPLEN,SECEND
"RTN","IBCNBCD",116,0)
 S GRPSTR="Eligibility/Group Plan Information",GRPLEN=$L(GRPSTR)  ;IB*2*497 
"RTN","IBCNBCD",117,0)
 S EBISTR="Eligibility/Benefit Information",EBILEN=$L(EBISTR)
"RTN","IBCNBCD",118,0)
 S CMPSTR="Composite Medical Procedure Information",CMPLEN=$L(CMPSTR)
"RTN","IBCNBCD",119,0)
 S HCSSTR="Health Care Service Delivery",HCSLEN=$L(HCSSTR)
"RTN","IBCNBCD",120,0)
 S BRESTR="Benefit Related Entity",BRELEN=$L(BRESTR)
"RTN","IBCNBCD",121,0)
 S BRPSTR="Benefit Related Provider Information",BRPLEN=$L(BRPSTR)
"RTN","IBCNBCD",122,0)
 S NOHSTR="   No Health Care Service Delivery data on file for this EB record.",NOHLEN=$L(NOHSTR)
"RTN","IBCNBCD",123,0)
 S NOCSTR="   No Composite Medical Procedure Information data on file for this EB record.",NOCLEN=$L(NOCSTR)
"RTN","IBCNBCD",124,0)
 S NOBSTR="   No Benefit Related Entity data on file for this EB record.",NOBLEN=$L(NOBSTR)
"RTN","IBCNBCD",125,0)
 S NODATA=1,NOIDATA=0,EX=0
"RTN","IBCNBCD",126,0)
 ; get the last response and make sure it contains EB data
"RTN","IBCNBCD",127,0)
 I $G(IBBUFDA) S RESPIEN=$O(^IBCN(365,"AF",IBBUFDA,""),-1) I RESPIEN S:$O(^IBCN(365,RESPIEN,2,""))'="" NODATA=0
"RTN","IBCNBCD",128,0)
 W ! D WRTFLD("        *** Non-editable Patient Eligibility/Benefit data from payer ***        ",0,80,"B")
"RTN","IBCNBCD",129,0)
 I NODATA W ! D WRTFLD("          *** No Patient Eligibility/Benefit data from payer found***           ",0,80,"B") G ELIGX
"RTN","IBCNBCD",130,0)
 W ! D WRTFLD("                   Payer Response                  VISTA Pt.Insurance           ",0,80,"BU")
"RTN","IBCNBCD",131,0)
 K ^TMP("RESP. EB DATA",$J),^TMP("INS. EB DATA",$J)
"RTN","IBCNBCD",132,0)
 S DFN=+$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBCD",133,0)
 S IBVEBCOL=1,IDATA=""
"RTN","IBCNBCD",134,0)
 ; fetch data from both eIV response and pat. insurance
"RTN","IBCNBCD",135,0)
 D INIT^IBCNES(365.02,RESPIEN_",","A",1,"RESP. EB DATA")
"RTN","IBCNBCD",136,0)
 D INIT^IBCNES(2.322,IBPOLDA_","_DFN_",","A",1,"INS. EB DATA")
"RTN","IBCNBCD",137,0)
 ; check if there is any existing pat. insurance data
"RTN","IBCNBCD",138,0)
 I $E(^TMP("INS. EB DATA",$J,"DISP",2,0),1,41)="    No eIV Eligibility/Benefit Data Found" S NOIDATA=1
"RTN","IBCNBCD",139,0)
 ; loop through response data and display it
"RTN","IBCNBCD",140,0)
 S (I,I1)="" F  S I=$O(^TMP("RESP. EB DATA",$J,"DISP",I)) Q:I=""!EX  D
"RTN","IBCNBCD",141,0)
 .I $Y+3>IOSL D PAUSE^VALM1 W @IOF I 'Y S EX=1 Q
"RTN","IBCNBCD",142,0)
 .S RDATA=^TMP("RESP. EB DATA",$J,"DISP",I,0)
"RTN","IBCNBCD",143,0)
 .; if group title, display it and quit
"RTN","IBCNBCD",144,0)
 .I RDATA["                    eIV Eligibility/Benefit Data Group#" W ! D WRTFLD(RDATA,0,80,"B") S IDATA="" Q
"RTN","IBCNBCD",145,0)
 .; if section title, display it and quit
"RTN","IBCNBCD",146,0)
 .I $E(RDATA,1,GRPLEN)=GRPSTR W !! D WRTFLD(RDATA,0,80,"U") S I1=$$FNDNXT(I1,GRPSTR,GRPLEN),SECEND=0 Q   ;IB*2*497
"RTN","IBCNBCD",147,0)
 .I $E(RDATA,1,EBILEN)=EBISTR W !! D WRTFLD(RDATA,0,80,"U") S I1=$$FNDNXT(I1,EBISTR,EBILEN),SECEND=0 Q
"RTN","IBCNBCD",148,0)
 .I $E(RDATA,1,CMPLEN)=CMPSTR W !! D WRTFLD(RDATA,0,80,"U") S I1=$$FNDNXT(I1,CMPSTR,CMPLEN),SECEND=0 Q
"RTN","IBCNBCD",149,0)
 .I $E(RDATA,1,HCSLEN)=HCSSTR W !! D WRTFLD(RDATA,0,80,"U") S I1=$$FNDNXT(I1,HCSSTR,HCSLEN),SECEND=0 Q
"RTN","IBCNBCD",150,0)
 .I $E(RDATA,1,BRELEN)=BRESTR W !! D WRTFLD(RDATA,0,80,"U") S I1=$$FNDNXT(I1,BRESTR,BRELEN),SECEND=0 Q
"RTN","IBCNBCD",151,0)
 .I $E(RDATA,1,BRPLEN)=BRPSTR W !! D WRTFLD(RDATA,0,80,"U") S I1=$$FNDNXT(I1,BRPSTR,BRPLEN),SECEND=0 Q
"RTN","IBCNBCD",152,0)
 .I $E(RDATA,1,NOHLEN)=NOHSTR W ! D WRTFLD(RDATA,0,80,"") Q
"RTN","IBCNBCD",153,0)
 .I $E(RDATA,1,NOCLEN)=NOCSTR W ! D WRTFLD(RDATA,0,80,"") Q
"RTN","IBCNBCD",154,0)
 .I $E(RDATA,1,NOBLEN)=NOBSTR W ! D WRTFLD(RDATA,0,80,"") Q
"RTN","IBCNBCD",155,0)
 .; build line with both eIV and pat. insurance values to compare
"RTN","IBCNBCD",156,0)
 .I 'NOIDATA,I1'="",'SECEND S IDATA=$G(^TMP("INS. EB DATA",$J,"DISP",I1,0)) D
"RTN","IBCNBCD",157,0)
 ..; if we run out of data for this section in pat. insurance
"RTN","IBCNBCD",158,0)
 ..I $E(IDATA,1,EBILEN)=EBISTR!($E(IDATA,1,CMPLEN)=CMPSTR)!($E(IDATA,1,HCSLEN)=HCSSTR) S SECEND=1,IDATA="" Q
"RTN","IBCNBCD",159,0)
 ..I $E(IDATA,1,BRELEN)=BRESTR!($E(IDATA,1,BRPLEN)=BRPSTR)!($E(IDATA,1,NOHLEN)=NOHSTR) S SECEND=1,IDATA="" Q
"RTN","IBCNBCD",160,0)
 ..I $E(IDATA,1,GRPLEN)=GRPSTR S SECEND=1,IDATA="" Q  ;IB*2*497
"RTN","IBCNBCD",161,0)
 ..S I1=I1+1 I '$D(^TMP("INS. EB DATA",$J,"DISP",I1)) S NOIDATA=1
"RTN","IBCNBCD",162,0)
 ..Q
"RTN","IBCNBCD",163,0)
 .W ! D WRTFLD(RDATA,0,47,""),WRTFLD(" | ",48,3,""),WRTFLD(IDATA,51,29,"")
"RTN","IBCNBCD",164,0)
 .Q
"RTN","IBCNBCD",165,0)
ELIGX ;
"RTN","IBCNBCD",166,0)
 I 'EX D PAUSE^VALM1
"RTN","IBCNBCD",167,0)
 K ^TMP("RESP. EB DATA",$J),^TMP("INS. EB DATA",$J)
"RTN","IBCNBCD",168,0)
 Q
"RTN","IBCNBCD",169,0)
 ;
"RTN","IBCNBCD",170,0)
FNDNXT(IDX,STR,LEN) ; find next node in INS. EB DATA after one that starts with string STR (section title)
"RTN","IBCNBCD",171,0)
 ; IDX - current index
"RTN","IBCNBCD",172,0)
 ; STR - string to find
"RTN","IBCNBCD",173,0)
 ; LEN - length of STR
"RTN","IBCNBCD",174,0)
 ; returns index of the node found or "" if nothing is found
"RTN","IBCNBCD",175,0)
 ;
"RTN","IBCNBCD",176,0)
 N I
"RTN","IBCNBCD",177,0)
 S I=IDX F  S I=$O(^TMP("INS. EB DATA",$J,"DISP",I)) Q:I=""  Q:($E(^TMP("INS. EB DATA",$J,"DISP",I,0),1,LEN)=STR)
"RTN","IBCNBCD",178,0)
 I +I S I=I+1 ; if found a match for section title, return the next index
"RTN","IBCNBCD",179,0)
 Q I
"RTN","IBCNBCD",180,0)
 ;
"RTN","IBCNBCD",181,0)
DISPLAY(BFLD,IFILE,IFLD,LABEL) ; extract, compare, write the two corresponding fields; one from buffer, one from ins files
"RTN","IBCNBCD",182,0)
 N BUFDATA,EXTDATA,IBOVER,IBMERG,IBITER,IBITER1,IBITER2 S EXTDATA=""
"RTN","IBCNBCD",183,0)
 S (IBITER1,IBITER2)=0
"RTN","IBCNBCD",184,0)
 S IBITER=1
"RTN","IBCNBCD",185,0)
 S BUFDATA=$$GET1^DIQ(355.33,IBBUFDA,BFLD)
"RTN","IBCNBCD",186,0)
 ;S IBITER1=$L(BUFDATA)/29
"RTN","IBCNBCD",187,0)
 ;I $P(IBITER1,".",2)>0 S IBITER1=$P(IBITER1,".",1)+1
"RTN","IBCNBCD",188,0)
 S IBITER1=$L(BUFDATA)-1\29+1
"RTN","IBCNBCD",189,0)
 I +IBEXTDA D
"RTN","IBCNBCD",190,0)
 . S EXTDATA=$$GET1^DIQ(IFILE,IBEXTDA,IFLD)
"RTN","IBCNBCD",191,0)
 .; S IBITER2=$L(EXTDATA)/29
"RTN","IBCNBCD",192,0)
 .; I $P(IBITER2,".",2)>0 S IBITER2=$P(IBITER2,".",1)+1
"RTN","IBCNBCD",193,0)
 . S IBITER2=$L(EXTDATA)-1\29+1
"RTN","IBCNBCD",194,0)
 . Q
"RTN","IBCNBCD",195,0)
 ;
"RTN","IBCNBCD",196,0)
 S IBITER=$S(IBITER2>IBITER1:IBITER2,IBITER1>IBITER2:IBITER1,IBITER1=IBITER2:IBITER1,1:1)
"RTN","IBCNBCD",197,0)
 S IBOVER=$S(BUFDATA'=""&(BUFDATA'=EXTDATA):"B",1:""),IBMERG=$S(EXTDATA="":"B",1:"")
"RTN","IBCNBCD",198,0)
 ;
"RTN","IBCNBCD",199,0)
 D WRTLN(LABEL,BUFDATA,EXTDATA,IBOVER,IBMERG)
"RTN","IBCNBCD",200,0)
 Q
"RTN","IBCNBCD",201,0)
 ;
"RTN","IBCNBCD",202,0)
WRTLN(LABEL,FLD1,FLD2,OVER,MERG,ATTR) ; write a line of formatted data with label and two fields
"RTN","IBCNBCD",203,0)
 N IBCTR,IBSV,IBEV,IBBUFV,IBSPV
"RTN","IBCNBCD",204,0)
 S IBSV=1,IBEV=29
"RTN","IBCNBCD",205,0)
 S ATTR=$G(ATTR),OVER=ATTR_$G(OVER),MERG=ATTR_$G(MERG)
"RTN","IBCNBCD",206,0)
 ;S LABEL=$J(LABEL,17)_"  ",FLD1=FLD1_$J("",29-$L(FLD1)),FLD2=FLD2_$J("",29-$L(FLD2))
"RTN","IBCNBCD",207,0)
 S LABEL=$J(LABEL,17)_"  "
"RTN","IBCNBCD",208,0)
 W !
"RTN","IBCNBCD",209,0)
 I '$G(IBITER) S IBITER=1
"RTN","IBCNBCD",210,0)
 F IBCTR=1:1:IBITER D
"RTN","IBCNBCD",211,0)
 . S IBBUFV=$E(FLD1,IBSV,IBEV)
"RTN","IBCNBCD",212,0)
 . S IBSPV=$E(FLD2,IBSV,IBEV)
"RTN","IBCNBCD",213,0)
 . I $L(IBBUFV)<29 S IBBUFV=IBBUFV_$J("",29-$L(IBBUFV))
"RTN","IBCNBCD",214,0)
 . I $L(IBSPV)<29 S IBSPV=IBSPV_$J("",29-$L(IBSPV))
"RTN","IBCNBCD",215,0)
 . D:IBCTR=1 WRTFLD(LABEL,0,19,ATTR)
"RTN","IBCNBCD",216,0)
 . D WRTFLD(IBBUFV,19,29,MERG)
"RTN","IBCNBCD",217,0)
 . D WRTFLD(" | ",48,3,ATTR),WRTFLD(IBSPV,51,29,OVER)
"RTN","IBCNBCD",218,0)
 . I IBITER>1,IBCTR'=IBITER W !
"RTN","IBCNBCD",219,0)
 . S IBSV=IBSV+29
"RTN","IBCNBCD",220,0)
 . S IBEV=IBEV+29
"RTN","IBCNBCD",221,0)
 Q
"RTN","IBCNBCD",222,0)
 ;
"RTN","IBCNBCD",223,0)
WRTFLD(STRING,COL,WD,ATTR) ; write an individual field with display attributes
"RTN","IBCNBCD",224,0)
 N ATTRB,ATTRE,DX,DY,X,Y
"RTN","IBCNBCD",225,0)
 S ATTRB="",ATTRB=$S(ATTR["B":$G(IOINHI),1:"")_$S(ATTR["U":$G(IOUON),1:"")
"RTN","IBCNBCD",226,0)
 S ATTRE="",ATTRE=$S(ATTR["B":$G(IOINORM),1:"")_$S(ATTR["U":$G(IOUOFF),1:"")
"RTN","IBCNBCD",227,0)
 ;
"RTN","IBCNBCD",228,0)
 S DX=COL,DY=$Y X IOXY
"RTN","IBCNBCD",229,0)
 W ATTRB,$E(STRING,1,WD),ATTRE
"RTN","IBCNBCD",230,0)
 S DX=(COL+WD),DY=$Y X IOXY
"RTN","IBCNBCD",231,0)
 Q
"RTN","IBCNBCD1")
0^123^B94125626
"RTN","IBCNBCD1",1,0)
IBCNBCD1 ;ALB/AWC - MCCF FY14 Display Annual Benefits from Insurance Buffer entry ;25 Feb 2015
"RTN","IBCNBCD1",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNBCD1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBCD1",4,0)
 ;
"RTN","IBCNBCD1",5,0)
 ;* Note:  The following Input Parameters descriptions are used for routines IBCNBCD1, IBCNBCD2, IBCNBCD3 and IBCNBCD4
"RTN","IBCNBCD1",6,0)
 ;
"RTN","IBCNBCD1",7,0)
 ;Input Parameters:
"RTN","IBCNBCD1",8,0)
 ;  DFN     : Internal number of an entry in the PATIENT File (#2)
"RTN","IBCNBCD1",9,0)
 ;  IBDFN   : Internal number of an entry in the PATIENT File (#2)
"RTN","IBCNBCD1",10,0)
 ;  IBBUFDA : Insurance Verification Processor DA
"RTN","IBCNBCD1",11,0)
 ;  IBGRPDA : Insurance Group Plan DA
"RTN","IBCNBCD1",12,0)
 ;  IBPOLDA : Insurance Group Plan Policy DA
"RTN","IBCNBCD1",13,0)
 ;  IBQ     : Variable used to Quit (1=No, 0=Yes, ^=YES)
"RTN","IBCNBCD1",14,0)
 ;  IBERR   : Variable used if error ocurred (If set then error ocurred)
"RTN","IBCNBCD1",15,0)
 ;  IBLIST  : Global to hold Annual Benefits information (Populate using indirecton)
"RTN","IBCNBCD1",16,0)
 ;  IBHOLD  : Global to hold Annual Benefits information (Populate using indirecton)
"RTN","IBCNBCD1",17,0)
 ;  IBIEN   : Variable to hold Annual Benefit record IEN
"RTN","IBCNBCD1",18,0)
 ;  IBDA    : Variable to hold Annual Benefit record DA
"RTN","IBCNBCD1",19,0)
 ;  IBDATE  : Variable used to hold user selected/entered Date
"RTN","IBCNBCD1",20,0)
 ;  IBSYS   : (*** DO NOT KILL ***) Global to hold VistA System Annual Benefits record for comparison (Populate using indirecton)
"RTN","IBCNBCD1",21,0)
 ;  IBASAV  : Global used to save off data used for comparison
"RTN","IBCNBCD1",22,0)
 ;  IBGSAV  : Global to hold Annual Benefits information for comparison (Populate using indirecton)
"RTN","IBCNBCD1",23,0)
 ;  IBFLDS  : Variable to hold Annual Benefits field numbers
"RTN","IBCNBCD1",24,0)
 ;  IBRTYP  : Read Type and Input modifiers^Input Parameters^Input Transform (Required)
"RTN","IBCNBCD1",25,0)
 ;  IBPROM  : Prompt text that user will see
"RTN","IBCNBCD1",26,0)
 ;  IBDFLT  : Default response
"RTN","IBCNBCD1",27,0)
 ;  IBHELP  : Help text to display
"RTN","IBCNBCD1",28,0)
 ;  IBSCRN  : Screen for pointer, set-of-code, and list/range reads
"RTN","IBCNBCD1",29,0)
 ;  IBCOMM  : Global to hold Coverage Limitations comments (Populated using indirection)
"RTN","IBCNBCD1",30,0)
 ;  IBSIEN  : Patient Insurance Subfile IEN's
"RTN","IBCNBCD1",31,0)
 ;  IBRIEN  : Patient Insurance Subfile IEN's
"RTN","IBCNBCD1",32,0)
 ;  IBFNAM  : File name used in variable pointer
"RTN","IBCNBCD1",33,0)
 ;  IBRESULT: Array to return FM error message if there are errors when filing data
"RTN","IBCNBCD1",34,0)
 ;  IBTYPE  : - 1 = Merge (only buffer data moved to blank fields in ins file, no replace)
"RTN","IBCNBCD1",35,0)
 ;              2 = Overwrite (all buffer data moved to ins file, replace existing data)
"RTN","IBCNBCD1",36,0)
 ;              3 = Replace (all buffer data including null move to ins file)
"RTN","IBCNBCD1",37,0)
 ;              4 = Individually Accept (Skip Blanks) (user accepts individual diffs b/w buffer data and existing file data (excl blanks) to overwrite flds (or addr grp) in existing file)
"RTN","IBCNBCD1",38,0)
 ;  IBTXT   : Text use to display to screen or reports
"RTN","IBCNBCD1",39,0)
 ;  IBDATA  : Indirection variable to hold data in ^TMP( global
"RTN","IBCNBCD1",40,0)
 ;  IBDTL   : Indirection variable to hold dates in ^TMP( global
"RTN","IBCNBCD1",41,0)
 ;  IBDR    : Variable to hold DR value
"RTN","IBCNBCD1",42,0)
 ;  IBCAT   : Standard IENS indicating internal entry numbers
"RTN","IBCNBCD1",43,0)
 ;  IBPL    : Plan Coverage Limitation DA values
"RTN","IBCNBCD1",44,0)
 ;  IBPLAN  : Indirection variable to hold Plan Coverage Limitation data held in the ^TMP( global
"RTN","IBCNBCD1",45,0)
 ;  IBVAL   : Patient's relationship code
"RTN","IBCNBCD1",46,0)
 ;  IBSEL   : 
"RTN","IBCNBCD1",47,0)
 ;  IBEXTDA : ifn of insurance entry to update (#36,355.3,2)
"RTN","IBCNBCD1",48,0)
 ;  RESULT  : Output array to return FM error message if there are errors when filing the buffer data
"RTN","IBCNBCD1",49,0)
 ;  SKPBLANK: Flag - If set to 1, then when skipping blanks, display skipped items without bold
"RTN","IBCNBCD1",50,0)
 ;
"RTN","IBCNBCD1",51,0)
ANNBEN(IBBUFDA,IBGRPDA,IBASAV,IBQ,IBERR) ; Annual Benefits Entry point. - Called from routine ACANB^IBCNBAA
"RTN","IBCNBCD1",52,0)
 N IBDA,IBIEN,IBDTL,IBDATA,IBHOLD,IBDATE,IBLK,IBOUT,IBEDIT,IBPOL
"RTN","IBCNBCD1",53,0)
 S IBPOL=$$GET1^DIQ(355.3,IBGRPDA_",",2.01,,,"IBERR") I $D(IBERR) W !,"Error... ANNBEN-IBCNBCD1  Cannot get Policy field: "_2.01 D PAUSE^VALM1 Q 
"RTN","IBCNBCD1",54,0)
 ;
"RTN","IBCNBCD1",55,0)
 F  S IBQ=$$ASKREV() Q:IBQ'=1!($D(DTOUT))  D  Q:$D(IBERR)
"RTN","IBCNBCD1",56,0)
 . ;
"RTN","IBCNBCD1",57,0)
 . ; -- display list of dates for annual benefits
"RTN","IBCNBCD1",58,0)
 . D ABDTS(IBGRPDA,.IBDTL)
"RTN","IBCNBCD1",59,0)
 . ;
"RTN","IBCNBCD1",60,0)
 . ; -- prompt user to select a annual benefit year
"RTN","IBCNBCD1",61,0)
 . S IBDATE=$$ASKYR() Q:($E(IBDATE)=U)!($D(DTOUT))
"RTN","IBCNBCD1",62,0)
 . ;
"RTN","IBCNBCD1",63,0)
 . S IBIEN=0
"RTN","IBCNBCD1",64,0)
 . ; -- get the annual benefits data for selected date
"RTN","IBCNBCD1",65,0)
 . D ABDATA(IBDATE,.IBIEN,.IBDTL,.IBDATA,.IBERR) Q:$D(IBERR)
"RTN","IBCNBCD1",66,0)
 . ;
"RTN","IBCNBCD1",67,0)
 . ; -- user selected a date from the display list
"RTN","IBCNBCD1",68,0)
 . I +IBIEN D  Q
"RTN","IBCNBCD1",69,0)
 . . ;
"RTN","IBCNBCD1",70,0)
 . . ; -- display the annual benefits for selected year
"RTN","IBCNBCD1",71,0)
 . . S IBOUT=$$ABDISP^IBCNBCD3(IBIEN,.IBDATA,IBPOL) I IBOUT D ABCLN Q
"RTN","IBCNBCD1",72,0)
 . . ;
"RTN","IBCNBCD1",73,0)
 . . ; -- edit annual benefits
"RTN","IBCNBCD1",74,0)
 . . S IBEDIT=$$EDTYR(IBDATE) I IBEDIT D ABEDIT(IBIEN,.IBASAV,.IBDATA,IBDATE,IBPOL,.IBERR),ABCLN
"RTN","IBCNBCD1",75,0)
 . ;
"RTN","IBCNBCD1",76,0)
 . ; -- user entered a new date not found in the display list
"RTN","IBCNBCD1",77,0)
 . I 'IBIEN D ABDCRE(IBGRPDA,.IBIEN,.IBDATE,.IBASAV,.IBHOLD,.IBDATA,.IBERR)
"RTN","IBCNBCD1",78,0)
 ;
"RTN","IBCNBCD1",79,0)
 D ABCLN
"RTN","IBCNBCD1",80,0)
 Q
"RTN","IBCNBCD1",81,0)
 ;
"RTN","IBCNBCD1",82,0)
ABDTS(IBGRPDA,IBDTL) ; Display a list of Annual Benefits Years to select
"RTN","IBCNBCD1",83,0)
 N IBIEN,IBRET,IBDT,IBIDT,IBXDT
"RTN","IBCNBCD1",84,0)
 ;
"RTN","IBCNBCD1",85,0)
 S IBDTL=$NA(^TMP("IBCNBCD1 ABLIST DATES",$J))
"RTN","IBCNBCD1",86,0)
 K @IBDTL
"RTN","IBCNBCD1",87,0)
 ;
"RTN","IBCNBCD1",88,0)
 S IBDT=""
"RTN","IBCNBCD1",89,0)
 F  S IBDT=$O(^IBA(355.4,"APY",IBGRPDA,IBDT)) Q:IBDT']""  D
"RTN","IBCNBCD1",90,0)
 . ;
"RTN","IBCNBCD1",91,0)
 . ; -- annual benefits record IEN
"RTN","IBCNBCD1",92,0)
 . S IBIEN=$O(^IBA(355.4,"APY",IBGRPDA,IBDT,0))
"RTN","IBCNBCD1",93,0)
 . ;
"RTN","IBCNBCD1",94,0)
 . ; -- convert fileman date to external date
"RTN","IBCNBCD1",95,0)
 . S IBIDT=-(IBDT) D DT^DILF("E",IBIDT,.IBRET) S IBXDT=$G(IBRET(0))
"RTN","IBCNBCD1",96,0)
 . ;
"RTN","IBCNBCD1",97,0)
 . ; -- put dates in assending order  -  example: S @IBDTL@(nncyyddmm,IEN)=mmm dd, yyyy
"RTN","IBCNBCD1",98,0)
 . I IBXDT["JAN" S @IBDTL@(11_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",99,0)
 . I IBXDT["FEB" S @IBDTL@(12_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",100,0)
 . I IBXDT["MAR" S @IBDTL@(13_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",101,0)
 . I IBXDT["APR" S @IBDTL@(14_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",102,0)
 . I IBXDT["MAY" S @IBDTL@(15_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",103,0)
 . I IBXDT["JUN" S @IBDTL@(16_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",104,0)
 . I IBXDT["JUL" S @IBDTL@(17_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",105,0)
 . I IBXDT["AUG" S @IBDTL@(18_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",106,0)
 . I IBXDT["SEP" S @IBDTL@(19_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",107,0)
 . I IBXDT["OCT" S @IBDTL@(20_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",108,0)
 . I IBXDT["NOV" S @IBDTL@(21_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD1",109,0)
 . I IBXDT["DEC" S @IBDTL@(22_IBIDT,IBIEN)=IBXDT
"RTN","IBCNBCD1",110,0)
 ;
"RTN","IBCNBCD1",111,0)
 W !!,"Benefit year:",!
"RTN","IBCNBCD1",112,0)
 F IBDT=0:0 S IBDT=$O(@IBDTL@(IBDT)) Q:IBDT'>0  S IBIEN=$O(@IBDTL@(IBDT,0)) W ?2,@IBDTL@(IBDT,IBIEN),!
"RTN","IBCNBCD1",113,0)
 Q
"RTN","IBCNBCD1",114,0)
 ;
"RTN","IBCNBCD1",115,0)
ABDATA(IBDATE,IBIEN,IBDTL,IBDATA,IBERR) ; get the annual benefits data for the user selected date
"RTN","IBCNBCD1",116,0)
 N IBI,IBDT,IBOUT,IBFLDS
"RTN","IBCNBCD1",117,0)
 ;
"RTN","IBCNBCD1",118,0)
 S IBDATA=$NA(^TMP("IBCNBCD1 ABDATA DATA",$J))
"RTN","IBCNBCD1",119,0)
 K @IBDATA
"RTN","IBCNBCD1",120,0)
 ;
"RTN","IBCNBCD1",121,0)
 D ABGFLD(.IBFLDS)
"RTN","IBCNBCD1",122,0)
 ;
"RTN","IBCNBCD1",123,0)
 S IBI="",IBDT=+IBDATE,IBOUT=0
"RTN","IBCNBCD1",124,0)
 F  S IBI=$O(@IBDTL@(IBI)) Q:IBI']""!(IBOUT)!($D(IBERR))  D
"RTN","IBCNBCD1",125,0)
 . ;
"RTN","IBCNBCD1",126,0)
 . ; -- populate the IBDATA temp global with the annual benefits data
"RTN","IBCNBCD1",127,0)
 . I $E(IBI,3,$L(IBI))=IBDT D
"RTN","IBCNBCD1",128,0)
 . . S IBIEN=$O(@IBDTL@(IBI,0))
"RTN","IBCNBCD1",129,0)
 . . D GETS^DIQ(355.4,IBIEN_",",.IBFLDS,"IE",.IBDATA,"IBERR") I $D(IBERR) W !,"***Error...ABDATTA^IBCNBCD1 Cannot retrieve Annual Benefits data fields." D PAUSE^VALM1 Q
"RTN","IBCNBCD1",130,0)
 . . S IBOUT=1
"RTN","IBCNBCD1",131,0)
 Q
"RTN","IBCNBCD1",132,0)
 ;
"RTN","IBCNBCD1",133,0)
ABDCRE(IBGRPDA,IBIEN,IBDATE,IBASAV,IBHOLD,IBDATA,IBERR) ; Display/Edit Annual Benefits for newly created date
"RTN","IBCNBCD1",134,0)
 N X,Y,DA,DIC,DIE,DO,IBDTL,DLAYGO,DIRUT
"RTN","IBCNBCD1",135,0)
 ;
"RTN","IBCNBCD1",136,0)
 ; -- ask user to create new benifit year
"RTN","IBCNBCD1",137,0)
 I '$$CREYR(IBDATE) Q
"RTN","IBCNBCD1",138,0)
 ;
"RTN","IBCNBCD1",139,0)
 S DIC="^IBA(355.4,",DIC(0)="L",DLAYGO=355.4,X=+IBDATE
"RTN","IBCNBCD1",140,0)
 D FILE^DICN I +Y<0 S IBERR=1 W !,!,"***Error... ABDCRE^IBCNBCD1 - Cannot Create New Annual Benefit Record" D PAUSE^VALM1 Q
"RTN","IBCNBCD1",141,0)
 ;
"RTN","IBCNBCD1",142,0)
 ; -- update the stub record
"RTN","IBCNBCD1",143,0)
 S (IBIEN,DA)=+Y,DIE="^IBA(355.4,",DR=".02///"_IBGRPDA
"RTN","IBCNBCD1",144,0)
 ;
"RTN","IBCNBCD1",145,0)
 D ^DIE K DIC,DIE,DA,DR
"RTN","IBCNBCD1",146,0)
 ;
"RTN","IBCNBCD1",147,0)
 ; -- put exitsing data into tmp global
"RTN","IBCNBCD1",148,0)
 S IBDTL=$NA(^TMP("IBCNBCD1 ABLIST DATES",$J))
"RTN","IBCNBCD1",149,0)
 K @IBDTL
"RTN","IBCNBCD1",150,0)
 S @IBDTL@(99_+IBDATE,IBIEN)=$P(IBDATE,U,2)
"RTN","IBCNBCD1",151,0)
 ;
"RTN","IBCNBCD1",152,0)
 ; -- get the annual benefits data
"RTN","IBCNBCD1",153,0)
 D ABDATA(IBDATE,IBIEN,.IBDTL,.IBDATA,.IBERR) Q:$D(IBERR)
"RTN","IBCNBCD1",154,0)
 ;
"RTN","IBCNBCD1",155,0)
 ; -- edit annual benefits for that year
"RTN","IBCNBCD1",156,0)
 D ABEDIT(IBIEN,.IBASAV,.IBDATA,IBDATE,IBPOL,.IBERR)
"RTN","IBCNBCD1",157,0)
 Q
"RTN","IBCNBCD1",158,0)
 ;
"RTN","IBCNBCD1",159,0)
ABEDIT(IBIEN,IBASAV,IBDATA,IBDATE,IBPOL,IBERR) ; -- Edit Patient Annual Benefits
"RTN","IBCNBCD1",160,0)
 N IBDIF,IBOUT,IBSYS,IBGSAV
"RTN","IBCNBCD1",161,0)
 ;
"RTN","IBCNBCD1",162,0)
 I +$G(IBIEN) L +^IBA(355.4,IBIEN):5 I '$T D ABLKD Q
"RTN","IBCNBCD1",163,0)
 ;
"RTN","IBCNBCD1",164,0)
 ; ***** DO NOT KILL IBSYS *****    
"RTN","IBCNBCD1",165,0)
 S IBSYS=$NA(^IBA(355.4,IBIEN)) ; -- **** CAUTION using Vista System Annual Benefits Global ****
"RTN","IBCNBCD1",166,0)
 ; ***** DO NOT KILL IBSYS *****    
"RTN","IBCNBCD1",167,0)
 ;
"RTN","IBCNBCD1",168,0)
 ; -- save Annual Benefits data
"RTN","IBCNBCD1",169,0)
 D ABSAVE(.IBSYS,.IBGSAV)
"RTN","IBCNBCD1",170,0)
 ;
"RTN","IBCNBCD1",171,0)
 ; -- edit annual benefits data  /  quit if user deleted record
"RTN","IBCNBCD1",172,0)
 S IBOUT=$$ABEDT(IBIEN,IBGRPDA,IBDATE,IBPOL,.IBERR) Q:'$D(@IBSYS)!(+$G(IBERR))
"RTN","IBCNBCD1",173,0)
 ;
"RTN","IBCNBCD1",174,0)
 ; -- check for any changes made to annual benefits
"RTN","IBCNBCD1",175,0)
 S IBDIF=$$ABDIF(.IBSYS,.IBGSAV)
"RTN","IBCNBCD1",176,0)
 ;
"RTN","IBCNBCD1",177,0)
 ; -- timed out ocurred and no changes
"RTN","IBCNBCD1",178,0)
 I IBOUT&('IBDIF) D ABOUT(IBIEN) Q
"RTN","IBCNBCD1",179,0)
 ;
"RTN","IBCNBCD1",180,0)
 ; -- timed out with changes to annual benefits
"RTN","IBCNBCD1",181,0)
 I IBOUT&(IBDIF) D ABUNDO(IBIEN,.IBDATA,.IBERR),ABOUT(IBIEN) Q
"RTN","IBCNBCD1",182,0)
 ;
"RTN","IBCNBCD1",183,0)
 ; -- ask user to save the changes or not
"RTN","IBCNBCD1",184,0)
 I IBDIF S IBOUT=+$$ABASK() I 'IBOUT!(IBOUT']"") D ABUNDO(IBIEN,.IBDATA,.IBERR),ABOUT(IBIEN) Q
"RTN","IBCNBCD1",185,0)
 ;
"RTN","IBCNBCD1",186,0)
 S IBASAV=1 D ABOUT(IBIEN)
"RTN","IBCNBCD1",187,0)
 Q
"RTN","IBCNBCD1",188,0)
 ;
"RTN","IBCNBCD1",189,0)
ABEDT(IBIEN,IBGRPDA,IBDATE,IBPOL,IBERR) ; Main call to edit data in Annual Benefits via Input Template
"RTN","IBCNBCD1",190,0)
 N DA,DR,DIE,DTOUT
"RTN","IBCNBCD1",191,0)
 ;
"RTN","IBCNBCD1",192,0)
 W !!,"---------------------- EDIT ANNUAL BENEFITS INFORMATION  ----------------------",!
"RTN","IBCNBCD1",193,0)
 ;
"RTN","IBCNBCD1",194,0)
 ; -- use the input template that is stored in file 355.4 to edit annual benefits fields
"RTN","IBCNBCD1",195,0)
 ; -- the fields are ".05;.06;2.01:2.15;2.17;3.01:3.09;4.01:4.09;5.01:5.08:5.1:5.12;5.14"
"RTN","IBCNBCD1",196,0)
 ; -- the user will not be able to edit the .01 and .02 fields
"RTN","IBCNBCD1",197,0)
 S DA=IBIEN,DR="[IBCN AB ACCEPT]",DIE="^IBA(355.4,"
"RTN","IBCNBCD1",198,0)
 D ^DIE
"RTN","IBCNBCD1",199,0)
 Q $D(DTOUT)
"RTN","IBCNBCD1",200,0)
 ;
"RTN","IBCNBCD1",201,0)
ABUNDO(IBIEN,IBDATA,IBERR) ; - undo any annual benefits edits
"RTN","IBCNBCD1",202,0)
 N IBN,IBFLD,IBFDA
"RTN","IBCNBCD1",203,0)
 S IBFDA=$NA(^TMP("IBCNBCD1 AB FDA",$J))
"RTN","IBCNBCD1",204,0)
 K @IBFDA
"RTN","IBCNBCD1",205,0)
 ;
"RTN","IBCNBCD1",206,0)
 S IBN=IBIEN_","
"RTN","IBCNBCD1",207,0)
 F IBFLD=".01":0 S IBFLD=$O(@IBDATA@(355.4,IBN,IBFLD)) Q:IBFLD'>0  S @IBFDA@(355.4,IBN,IBFLD)=$G(@IBDATA@(355.4,IBN,IBFLD,"I"))
"RTN","IBCNBCD1",208,0)
 ;
"RTN","IBCNBCD1",209,0)
 D FILE^DIE("I",.IBFDA,"IBERR") I $D(IBERR) W !,!,"***Error...ABUNDO^IBCNBCD1 - Cannot undo changes to the Annual Benefits file! ",! D PAUSE^VALM1
"RTN","IBCNBCD1",210,0)
 Q
"RTN","IBCNBCD1",211,0)
 ;
"RTN","IBCNBCD1",212,0)
ABGFLD(IBFLDS) ; Put fields into one string
"RTN","IBCNBCD1",213,0)
 S IBFLDS=".01;.02;.05;.06"
"RTN","IBCNBCD1",214,0)
 S IBFLDS=IBFLDS_";2.01;2.02;2.03;2.04;2.05;2.06;2.07;2.08;2.09;2.1;2.11;2.12;2.13;2.14;2.15;2.17"
"RTN","IBCNBCD1",215,0)
 S IBFLDS=IBFLDS_";3.01;3.02;3.03;3.04;3.05;3.06;3.07;3.08;3.09"
"RTN","IBCNBCD1",216,0)
 S IBFLDS=IBFLDS_";4.01;4.02;4.03;4.04;4.05;4.06;4.07;4.08;4.09"
"RTN","IBCNBCD1",217,0)
 S IBFLDS=IBFLDS_";5.01;5.02;5.03;5.04;5.05;5.06;5.07;5.08;5.09;5.1;5.11;5.12;5.14"
"RTN","IBCNBCD1",218,0)
 Q
"RTN","IBCNBCD1",219,0)
 ;
"RTN","IBCNBCD1",220,0)
ABSAVE(IBSYS,IBGSAV) ; -- save the global before editing
"RTN","IBCNBCD1",221,0)
 S IBGSAV=$NA(^TMP("IBCNBCD1 AB GLOBAL SAVE",$J))
"RTN","IBCNBCD1",222,0)
 K @IBGSAV
"RTN","IBCNBCD1",223,0)
 ;
"RTN","IBCNBCD1",224,0)
 S @IBGSAV@(0)=$G(@IBSYS@(0))
"RTN","IBCNBCD1",225,0)
 S @IBGSAV@(1)=$G(@IBSYS@(1))
"RTN","IBCNBCD1",226,0)
 S @IBGSAV@(2)=$G(@IBSYS@(2))
"RTN","IBCNBCD1",227,0)
 S @IBGSAV@(3)=$G(@IBSYS@(3))
"RTN","IBCNBCD1",228,0)
 S @IBGSAV@(4)=$G(@IBSYS@(4))
"RTN","IBCNBCD1",229,0)
 S @IBGSAV@(5)=$G(@IBSYS@(5))
"RTN","IBCNBCD1",230,0)
 Q
"RTN","IBCNBCD1",231,0)
 ;
"RTN","IBCNBCD1",232,0)
ABDIF(IBSYS,IBGSAV) ; -- check for any edits made to annual benefits
"RTN","IBCNBCD1",233,0)
 I $G(@IBSYS@(0))'=$G(@IBGSAV@(0)) Q 1
"RTN","IBCNBCD1",234,0)
 I $G(@IBSYS@(1))'=$G(@IBGSAV@(1)) Q 1
"RTN","IBCNBCD1",235,0)
 I $G(@IBSYS@(2))'=$G(@IBGSAV@(2)) Q 1
"RTN","IBCNBCD1",236,0)
 I $G(@IBSYS@(3))'=$G(@IBGSAV@(3)) Q 1
"RTN","IBCNBCD1",237,0)
 I $G(@IBSYS@(4))'=$G(@IBGSAV@(4)) Q 1
"RTN","IBCNBCD1",238,0)
 I $G(@IBSYS@(5))'=$G(@IBGSAV@(5)) Q 1
"RTN","IBCNBCD1",239,0)
 Q 0
"RTN","IBCNBCD1",240,0)
 ;
"RTN","IBCNBCD1",241,0)
ABOUT(IBIEN) ; -- Set return variable and unlock global
"RTN","IBCNBCD1",242,0)
 I +$G(IBIEN) L -^IBA(355.4,IBIEN)
"RTN","IBCNBCD1",243,0)
 Q
"RTN","IBCNBCD1",244,0)
 ;
"RTN","IBCNBCD1",245,0)
ABCLN ; Clean up ^TMP globals
"RTN","IBCNBCD1",246,0)
 K ^TMP("IBCNBCD1 HOLD DATA",$J),^TMP("IBCNBCD1 AB GLOBAL SAVE",$J),^TMP("IBCNBCD1 ABLIST DATES",$J),^TMP("IBCNBCD1 ABDATA DATA",$J)
"RTN","IBCNBCD1",247,0)
 Q
"RTN","IBCNBCD1",248,0)
 ;
"RTN","IBCNBCD1",249,0)
ABLKD ; -- write locked message
"RTN","IBCNBCD1",250,0)
 W !!,"Sorry, another user currently editing this entry."
"RTN","IBCNBCD1",251,0)
 W !,"Try again later."
"RTN","IBCNBCD1",252,0)
 D PAUSE^VALM1
"RTN","IBCNBCD1",253,0)
 Q
"RTN","IBCNBCD1",254,0)
 ;
"RTN","IBCNBCD1",255,0)
ABASK() ; Prompt to ask user to Save Changes
"RTN","IBCNBCD1",256,0)
 Q $E($$READ^IBCNBAA("YA^::E","Save Changes to Annual Benefits File Y/N? ","No","Enter Yes or No to Save the Changes to the AB File <or> ^ to Quit"))
"RTN","IBCNBCD1",257,0)
 ;
"RTN","IBCNBCD1",258,0)
ASKREV() ; Prompt to ask user to Review the Annual Benefits
"RTN","IBCNBCD1",259,0)
 Q $E($$READ^IBCNBAA("YA^::E","Do you want to Review the AB Y/N? ","No","Enter Yes or No to Review the Annual Benefits <or> ^ to Quit"))
"RTN","IBCNBCD1",260,0)
 ;
"RTN","IBCNBCD1",261,0)
ABDEDT() ; ask user if they want to Edit the Annual Benefits
"RTN","IBCNBCD1",262,0)
 N IBSCR
"RTN","IBCNBCD1",263,0)
 S IBSCR="FO^1:4^K:($E(X)'=""E""&($E(X)'=""e""))!($L(X)=4&(($E(X,1,4)'=""EDIT"")&($E(X,1,4)'=""edit""))) X"
"RTN","IBCNBCD1",264,0)
 Q $$READ^IBCNBAA(IBSCR,"Enter 'E' to Edit Annual Benefits data or Return to continue","","Enter 'E' to edit Annual Benefits data <or> Return to continue <or> ^ to quit.")
"RTN","IBCNBCD1",265,0)
 ;
"RTN","IBCNBCD1",266,0)
ASKYR() ; Prompt to Enter a New or Existing AB year
"RTN","IBCNBCD1",267,0)
 Q $$READ^IBCNBAA("DA^::EX","Enter Existing Date or Add New Benefit Year:  ","","Enter a New/Existing Benefit Year Date <or> ^ to Quit")
"RTN","IBCNBCD1",268,0)
 ;
"RTN","IBCNBCD1",269,0)
EDTYR(IBDATE) ; Prompt to Edit an Existing AB year
"RTN","IBCNBCD1",270,0)
 Q +$$READ^IBCNBAA("YA^::E","Are you sure you want to edit existing benefit year information for: "_$P(IBDATE,U,2)_" Y/N?: ","","Enter Yes or No to Edit the Benefit Year")
"RTN","IBCNBCD1",271,0)
 ;
"RTN","IBCNBCD1",272,0)
CREYR(IBDATE) ; Prompt to Create a new AB year
"RTN","IBCNBCD1",273,0)
 Q +$$READ^IBCNBAA("YA^::E","Are you sure you want to create a new benefit year for:  "_$P(IBDATE,U,2)_" Y/N? ","","Enter Yes or No to Create a new Benefit Year Date")
"RTN","IBCNBCD2")
0^124^B204932472
"RTN","IBCNBCD2",1,0)
IBCNBCD2 ;ALB/AWC - MCCF FY14 Display Group Plan Coverage Limitations from Insurance Buffer entry ;25 Feb 2015
"RTN","IBCNBCD2",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNBCD2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBCD2",4,0)
 ;
"RTN","IBCNBCD2",5,0)
 ; Input Parameters:
"RTN","IBCNBCD2",6,0)
 ;   See routine IBCNBCD1
"RTN","IBCNBCD2",7,0)
 ;
"RTN","IBCNBCD2",8,0)
COVLIM(IBBUFDA,IBGRPDA,IBCSAV,IBQ,IBERR) ; Coverage Limitations entry point. - Called from routine ACCOV^IBCNBAA
"RTN","IBCNBCD2",9,0)
 N IBGSAV,IBSYS,IBDATE,IBDTL,IBFOUND,IBDATA,IBEDIT,IBOUT,IBPLAN,IBYES,IBTXT,IBN,DTOUT
"RTN","IBCNBCD2",10,0)
 S IBN=0,IBTXT=""
"RTN","IBCNBCD2",11,0)
 ;
"RTN","IBCNBCD2",12,0)
 ; -- **** CAUTION DO NOT KILL ****  
"RTN","IBCNBCD2",13,0)
 N IBSYS S IBSYS=$NA(^IBA(355.32)) ; -- **** VistA System Coverage Limitation Global ****
"RTN","IBCNBCD2",14,0)
 ; -- **** CAUTION DO NOT KILL ****  
"RTN","IBCNBCD2",15,0)
 ;
"RTN","IBCNBCD2",16,0)
 ;
"RTN","IBCNBCD2",17,0)
 F  S IBQ=$$ASKREV() Q:IBQ'=1!($D(DTOUT))  D  Q:$D(IBERR)
"RTN","IBCNBCD2",18,0)
 . ;
"RTN","IBCNBCD2",19,0)
 . ; -- display a list of coverage limitations years for the group policy
"RTN","IBCNBCD2",20,0)
 . D CVDTS(IBGRPDA,.IBDTL)
"RTN","IBCNBCD2",21,0)
 . ;
"RTN","IBCNBCD2",22,0)
 . ; -- prompt user to select coverage limitation year
"RTN","IBCNBCD2",23,0)
 . S IBDATE=$$ASKYR() Q:$E(IBDATE)=U!($D(DTOUT))
"RTN","IBCNBCD2",24,0)
 . ;
"RTN","IBCNBCD2",25,0)
 . ; -- get data for selected coverage limitation year
"RTN","IBCNBCD2",26,0)
 . S IBFOUND=$$CVDATA(IBDATE,.IBDTL,.IBGSAV,.IBSYS,.IBDATA,.IBERR) Q:$D(IBERR)
"RTN","IBCNBCD2",27,0)
 . ;
"RTN","IBCNBCD2",28,0)
 . ; -- user entered a new date not found in the display list
"RTN","IBCNBCD2",29,0)
 . I 'IBFOUND D  Q:'IBYES!('IBFOUND)!($D(IBERR))
"RTN","IBCNBCD2",30,0)
 . . ;
"RTN","IBCNBCD2",31,0)
 . . ; -- ask user to create new benifit year
"RTN","IBCNBCD2",32,0)
 . . S IBYES=$$CREYR(.IBDATE) Q:'IBYES
"RTN","IBCNBCD2",33,0)
 . . ;
"RTN","IBCNBCD2",34,0)
 . . ; -- create a new record entry
"RTN","IBCNBCD2",35,0)
 . . D CVDLC(IBGRPDA,IBDATE,.IBDTL,.IBERR) Q:$D(IBERR)
"RTN","IBCNBCD2",36,0)
 . . ;
"RTN","IBCNBCD2",37,0)
 . . ; -- get data for newly created record
"RTN","IBCNBCD2",38,0)
 . . S IBFOUND=$$CVDATA(IBDATE,.IBDTL,.IBGSAV,.IBSYS,.IBDATA,.IBERR) Q:$D(IBERR)
"RTN","IBCNBCD2",39,0)
 . . S IBN=1
"RTN","IBCNBCD2",40,0)
 . . ;
"RTN","IBCNBCD2",41,0)
 . ;
"RTN","IBCNBCD2",42,0)
 . ; -- get coverage plans and display coverage limitations for selected year
"RTN","IBCNBCD2",43,0)
 . D CVPLAN(.IBPLAN) S IBOUT=$$CVDISP^IBCNBCD3(.IBDATA,.IBPLAN) Q:IBOUT
"RTN","IBCNBCD2",44,0)
 . ;
"RTN","IBCNBCD2",45,0)
 . ; -- edit coverage limitations
"RTN","IBCNBCD2",46,0)
 . S IBTXT=$S(IBN:"the NEW",1:"existing")
"RTN","IBCNBCD2",47,0)
 . S IBEDIT=$$EDTYR(IBDATE,IBTXT) I IBEDIT D CVEDIT(IBGRPDA,.IBGSAV,.IBSYS,IBDATE,.IBCSAV,.IBDATA,.IBERR)
"RTN","IBCNBCD2",48,0)
 . S IBN=0
"RTN","IBCNBCD2",49,0)
 . ;
"RTN","IBCNBCD2",50,0)
 D CVOUT(.IBDATA)
"RTN","IBCNBCD2",51,0)
 Q
"RTN","IBCNBCD2",52,0)
 ;
"RTN","IBCNBCD2",53,0)
CVDTS(IBGRPDA,IBDTL) ; Display a list of Coverage Limitations Years to select
"RTN","IBCNBCD2",54,0)
 N IBI,IBIEN,IBDT,IBXDT,IBIDT,IBRET
"RTN","IBCNBCD2",55,0)
 ;
"RTN","IBCNBCD2",56,0)
 S IBDTL=$NA(^TMP("IBCNBCD2 CVDTS DATES",$J))
"RTN","IBCNBCD2",57,0)
 K @IBDTL
"RTN","IBCNBCD2",58,0)
 ;
"RTN","IBCNBCD2",59,0)
 F IBI=0:0 S IBI=$O(^IBA(355.32,"APCD",IBGRPDA,IBI)) Q:IBI'>0  D
"RTN","IBCNBCD2",60,0)
 . S IBDT="" F  S IBDT=$O(^IBA(355.32,"APCD",IBGRPDA,IBI,IBDT)) Q:IBDT=""  D
"RTN","IBCNBCD2",61,0)
 . . S IBIEN=$O(^IBA(355.32,"APCD",IBGRPDA,IBI,IBDT,0))
"RTN","IBCNBCD2",62,0)
 . . S IBIDT=-(IBDT) D DT^DILF("E",IBIDT,.IBRET) S IBXDT=$G(IBRET(0))
"RTN","IBCNBCD2",63,0)
 . . ;
"RTN","IBCNBCD2",64,0)
 . . ; -- put dates in assending order  -  example: S @IBDTL@(nncyyddmm,IEN)=mmm dd, yyyy
"RTN","IBCNBCD2",65,0)
 . . I IBXDT["JAN" S @IBDTL@(11_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",66,0)
 . . I IBXDT["FEB" S @IBDTL@(12_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",67,0)
 . . I IBXDT["MAR" S @IBDTL@(13_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",68,0)
 . . I IBXDT["APR" S @IBDTL@(14_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",69,0)
 . . I IBXDT["MAY" S @IBDTL@(15_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",70,0)
 . . I IBXDT["JUN" S @IBDTL@(16_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",71,0)
 . . I IBXDT["JUL" S @IBDTL@(17_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",72,0)
 . . I IBXDT["AUG" S @IBDTL@(18_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",73,0)
 . . I IBXDT["SEP" S @IBDTL@(19_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",74,0)
 . . I IBXDT["OCT" S @IBDTL@(20_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",75,0)
 . . I IBXDT["NOV" S @IBDTL@(21_IBIDT,IBIEN)=IBXDT Q
"RTN","IBCNBCD2",76,0)
 . . I IBXDT["DEC" S @IBDTL@(22_IBIDT,IBIEN)=IBXDT
"RTN","IBCNBCD2",77,0)
 ;
"RTN","IBCNBCD2",78,0)
 W !!,"Coverage Date:",!
"RTN","IBCNBCD2",79,0)
 F IBDT=0:0 S IBDT=$O(@IBDTL@(IBDT)) Q:IBDT'>0  S IBIEN=$O(@IBDTL@(IBDT,0)) W ?2,@IBDTL@(IBDT,IBIEN),!
"RTN","IBCNBCD2",80,0)
 Q
"RTN","IBCNBCD2",81,0)
CVDATA(IBDATE,IBDTL,IBGSAV,IBSYS,IBDATA,IBERR) ; Get data for the selected year
"RTN","IBCNBCD2",82,0)
 N IBI,IBJ,IBHOLD,IBFLDS,IBCDA,IBIEN,IBPLN,IBDAT,IBLOCK
"RTN","IBCNBCD2",83,0)
 S IBDATA=$NA(^TMP("IBCNBCD2 CVDATA DATA",$J))
"RTN","IBCNBCD2",84,0)
 S IBGSAV=$NA(^TMP("IBCNBCD2 IB CV GSAV",$J))
"RTN","IBCNBCD2",85,0)
 K @IBDATA,@IBGSAV
"RTN","IBCNBCD2",86,0)
 ; ;
"RTN","IBCNBCD2",87,0)
 S IBDAT=0,IBFLDS=".02;.03;.04"
"RTN","IBCNBCD2",88,0)
 ;
"RTN","IBCNBCD2",89,0)
 F IBI=0:0 S IBI=$O(@IBDTL@(IBI)) Q:IBI'>0  I $E(IBI,3,$L(IBI))=+IBDATE D  Q:$D(IBERR)
"RTN","IBCNBCD2",90,0)
 . F IBIEN=0:0 S IBIEN=$O(@IBDTL@(IBI,IBIEN)) Q:IBIEN'>0  D  Q:$D(IBERR)
"RTN","IBCNBCD2",91,0)
 . . ;
"RTN","IBCNBCD2",92,0)
 . . S IBHOLD=$NA(^TMP("IBCNBCD2 CVDATA HOLD",$J))
"RTN","IBCNBCD2",93,0)
 . . K @IBHOLD
"RTN","IBCNBCD2",94,0)
 . . D GETS^DIQ(355.32,IBIEN_",",.IBFLDS,"IE",.IBHOLD,"IBERR") I $D(IBERR) W !,"***Error...CVDATA^IBCNBCD2 Cannot retrieve Coverage Limitations data fields." D PAUSE^VALM1 Q
"RTN","IBCNBCD2",95,0)
 . . S IBPLN=@IBHOLD@(355.32,IBIEN_",",.02,"E")
"RTN","IBCNBCD2",96,0)
 . . M @IBDATA@(IBPLN)=@IBHOLD@(355.32,IBIEN_",")
"RTN","IBCNBCD2",97,0)
 . . S @IBDATA@(IBPLN)=IBIEN ; -- top level so set it to the IEN
"RTN","IBCNBCD2",98,0)
 . . S IBLOCK=$$CVLOCK(IBIEN,.IBSYS) I 'IBLOCK S IBERR=1 Q  ; -- lock the record
"RTN","IBCNBCD2",99,0)
 . . ;
"RTN","IBCNBCD2",100,0)
 . . ; -- save off the system global data
"RTN","IBCNBCD2",101,0)
 . . S @IBGSAV@(IBIEN,0)=$G(^IBA(355.32,IBIEN,0))
"RTN","IBCNBCD2",102,0)
 . . S @IBGSAV@(IBIEN,1)=$G(^IBA(355.32,IBIEN,1))
"RTN","IBCNBCD2",103,0)
 . . S @IBGSAV@(IBIEN,2,0)=$G(^IBA(355.32,IBIEN,2,0))
"RTN","IBCNBCD2",104,0)
 . . ;
"RTN","IBCNBCD2",105,0)
 . . F IBJ=0:0 S IBJ=$O(^IBA(355.32,IBIEN,2,IBJ)) Q:IBJ'>0  D
"RTN","IBCNBCD2",106,0)
 . . . S @IBDATA@(IBPLN,"COMM",IBJ)=^IBA(355.32,IBIEN,2,IBJ,0)
"RTN","IBCNBCD2",107,0)
 . . . S @IBGSAV@(IBIEN,2,IBJ,0)=$G(^IBA(355.32,IBIEN,2,IBJ,0)) ; -- save off the system global comments data
"RTN","IBCNBCD2",108,0)
 ;
"RTN","IBCNBCD2",109,0)
 I $D(@IBDATA) S IBDAT=1
"RTN","IBCNBCD2",110,0)
 Q IBDAT
"RTN","IBCNBCD2",111,0)
 ;
"RTN","IBCNBCD2",112,0)
CVPLAN(IBPLAN) ; Display/Edit Coverage Limitations for selected date
"RTN","IBCNBCD2",113,0)
 N IBI,IBJ
"RTN","IBCNBCD2",114,0)
 S IBPLAN=$NA(^TMP("IBCNBCD2 CVDSEL PLAN COV",$J))
"RTN","IBCNBCD2",115,0)
 K @IBPLAN
"RTN","IBCNBCD2",116,0)
 ;
"RTN","IBCNBCD2",117,0)
 S IBI="" F  S IBI=$O(^IBE(355.31,"B",IBI)) Q:IBI']""  S IBJ=$O(^IBE(355.31,"B",IBI,0)) S @IBPLAN@(IBI,IBJ)=""
"RTN","IBCNBCD2",118,0)
 Q
"RTN","IBCNBCD2",119,0)
 ;
"RTN","IBCNBCD2",120,0)
CVLOCK(IBIEN,IBSYS) ; Lock the Coverage Limitations records
"RTN","IBCNBCD2",121,0)
 N IBOUT
"RTN","IBCNBCD2",122,0)
 S IBOUT=1
"RTN","IBCNBCD2",123,0)
 L +@IBSYS@(IBIEN):5 I '$T S IBOUT=0 D CVLKD
"RTN","IBCNBCD2",124,0)
 Q IBOUT
"RTN","IBCNBCD2",125,0)
 ;
"RTN","IBCNBCD2",126,0)
CVEDIT(IBGRPDA,IBGSAV,IBSYS,IBDATE,IBCSAV,IBDATA,IBERR) ; Edit Coverage Limitations via Input Template 355.32
"RTN","IBCNBCD2",127,0)
 N IBI,IBIEN,IBDR,IBDIF,IBSAV,IBADD,IBOUT,IBPLC
"RTN","IBCNBCD2",128,0)
 N IBIP,IBOP,IBPH,IBDN,IBMH,IBLT
"RTN","IBCNBCD2",129,0)
 N IBCI,IBCO,IBCP,IBCD,IBCM,IBCL
"RTN","IBCNBCD2",130,0)
 ;
"RTN","IBCNBCD2",131,0)
 ; -- check if data for the coverage categories
"RTN","IBCNBCD2",132,0)
 S (IBOP,IBIP,IBPH,IBLT,IBDN,IBMH)="" ; -- DA's of the IBDATA global holding the record location
"RTN","IBCNBCD2",133,0)
 S (IBCI,IBCO,IBCP,IBCD,IBCM,IBCL)="" ; -- pointers to the PLAN LIMITATION CATEGORY FILE (#355.31)
"RTN","IBCNBCD2",134,0)
 ;
"RTN","IBCNBCD2",135,0)
 ; -- get plan limitation categories ien'S
"RTN","IBCNBCD2",136,0)
 S IBPLC=$NA(^TMP("IBCNBCD2 IB PLAN LIM CATEGORIES",$J))
"RTN","IBCNBCD2",137,0)
 K @IBPLC
"RTN","IBCNBCD2",138,0)
 D LIST^DIC(355.31,,"@;.01E",,,,,"B",,,.IBPLC,"IBERR") I $D(IBERR) W !,"*** Error...CVEDIT^IBCNBCD2 Cannot access Plan Limitations Category File!" D PAUSE^VALM1 Q
"RTN","IBCNBCD2",139,0)
 F IBI=0:0 S IBI=$O(@IBPLC@("ID",IBI)) Q:IBI'>0  D
"RTN","IBCNBCD2",140,0)
 . I @IBPLC@("ID",IBI,.01)="DENTAL" S IBCD=@IBPLC@(2,IBI) Q
"RTN","IBCNBCD2",141,0)
 . I @IBPLC@("ID",IBI,.01)="OUTPATIENT" S IBCO=@IBPLC@(2,IBI) Q
"RTN","IBCNBCD2",142,0)
 . I @IBPLC@("ID",IBI,.01)="PHARMACY" S IBCP=@IBPLC@(2,IBI) Q
"RTN","IBCNBCD2",143,0)
 . I @IBPLC@("ID",IBI,.01)="INPATIENT" S IBCI=@IBPLC@(2,IBI) Q
"RTN","IBCNBCD2",144,0)
 . I @IBPLC@("ID",IBI,.01)="MENTAL HEALTH" S IBCM=@IBPLC@(2,IBI) Q
"RTN","IBCNBCD2",145,0)
 . I @IBPLC@("ID",IBI,.01)="LONG TERM CARE" S IBCL=@IBPLC@(2,IBI)
"RTN","IBCNBCD2",146,0)
 ;
"RTN","IBCNBCD2",147,0)
 ; -- check if our data list contain plan coverage limitations
"RTN","IBCNBCD2",148,0)
 S IBI=""
"RTN","IBCNBCD2",149,0)
 F  S IBI=$O(@IBDATA@(IBI)) Q:IBI']""  D
"RTN","IBCNBCD2",150,0)
 . I IBI="INPATIENT" S IBIP=IBI Q
"RTN","IBCNBCD2",151,0)
 . I IBI="OUTPATIENT" S IBOP=IBI Q
"RTN","IBCNBCD2",152,0)
 . I IBI="PHARMACY" S IBPH=IBI Q
"RTN","IBCNBCD2",153,0)
 . I IBI="DENTAL" S IBDN=IBI Q
"RTN","IBCNBCD2",154,0)
 . I IBI="MENTAL HEALTH" S IBMH=IBI Q
"RTN","IBCNBCD2",155,0)
 . I IBI="LONG TERM CARE" S IBLT=IBI
"RTN","IBCNBCD2",156,0)
 ;
"RTN","IBCNBCD2",157,0)
 ;
"RTN","IBCNBCD2",158,0)
 W !!,"---------------------- EDIT COVERAGE LIMITATIONS INFORMATION  -----------------------",!
"RTN","IBCNBCD2",159,0)
 ;
"RTN","IBCNBCD2",160,0)
 ; -- inpatient
"RTN","IBCNBCD2",161,0)
 I IBIP]"" D  Q:IBOUT!($D(IBERR))!($D(DTOUT))
"RTN","IBCNBCD2",162,0)
 . S IBOUT=0,IBIEN=$G(@IBDATA@(IBIP)),IBDR="[IBCNBC CV IP EDIT]"
"RTN","IBCNBCD2",163,0)
 . D EDTREC(IBIEN,IBDR) I $G(Y(0))="AUDIT" S IBOUT=1 Q
"RTN","IBCNBCD2",164,0)
 . S IBDIF=$$CVDIF(.IBSYS,.IBGSAV,IBIEN),IBSAV=1
"RTN","IBCNBCD2",165,0)
 . I IBDIF S IBSAV=$$CVASK()
"RTN","IBCNBCD2",166,0)
 . I (IBDIF&('IBSAV))!($D(DTOUT)) D CVUNDO(IBIEN,IBIP,.IBSYS,.IBGSAV,.IBDATA,.IBERR) Q
"RTN","IBCNBCD2",167,0)
 . I (IBDIF&(IBSAV))&('$D(DTOUT)) S IBCSAV=1
"RTN","IBCNBCD2",168,0)
 I IBIP']"" S IBADD=$$ASKADD("INPATIENT",IBDATE) Q:IBADD=U  I IBADD Q:'$$ADDCV(IBGRPDA,IBCI,IBDATE,.IBERR)
"RTN","IBCNBCD2",169,0)
 ;
"RTN","IBCNBCD2",170,0)
 ; -- outpatient
"RTN","IBCNBCD2",171,0)
 I IBOP]"" D  Q:IBOUT!($D(IBERR))!($D(DTOUT))
"RTN","IBCNBCD2",172,0)
 . W ! S IBOUT=0,IBIEN=$G(@IBDATA@(IBOP)),IBDR="[IBCNBC CV OP EDIT]"
"RTN","IBCNBCD2",173,0)
 . D EDTREC(IBIEN,IBDR) I $G(Y(0))="AUDIT" S IBOUT=1 Q
"RTN","IBCNBCD2",174,0)
 . S IBDIF=$$CVDIF(.IBSYS,.IBGSAV,IBIEN),IBSAV=1
"RTN","IBCNBCD2",175,0)
 . I IBDIF S IBSAV=$$CVASK()
"RTN","IBCNBCD2",176,0)
 . I (IBDIF&('IBSAV))!($D(DTOUT)) D CVUNDO(IBIEN,IBOP,.IBSYS,.IBGSAV,.IBDATA,.IBERR) Q
"RTN","IBCNBCD2",177,0)
 . I (IBDIF&(IBSAV))&('$D(DTOUT)) S IBCSAV=1
"RTN","IBCNBCD2",178,0)
 I IBOP']"" S IBADD=$$ASKADD("OUTPATIENT",IBDATE) Q:IBADD=U  I IBADD Q:'$$ADDCV(IBGRPDA,IBCO,IBDATE,.IBERR)
"RTN","IBCNBCD2",179,0)
 ;
"RTN","IBCNBCD2",180,0)
 ; -- pharmacy
"RTN","IBCNBCD2",181,0)
 I IBPH]"" D  Q:IBOUT!($D(IBERR))!($D(DTOUT))
"RTN","IBCNBCD2",182,0)
 . W ! S IBOUT=0,IBIEN=$G(@IBDATA@(IBPH)),IBDR="[IBCNBC CV PH EDIT]"
"RTN","IBCNBCD2",183,0)
 . D EDTREC(IBIEN,IBDR) I $G(Y(0))="AUDIT" S IBOUT=1 Q
"RTN","IBCNBCD2",184,0)
 . S IBDIF=$$CVDIF(.IBSYS,.IBGSAV,IBIEN),IBSAV=1
"RTN","IBCNBCD2",185,0)
 . I IBDIF S IBSAV=$$CVASK()
"RTN","IBCNBCD2",186,0)
 . I (IBDIF&('IBSAV))!($D(DTOUT)) D CVUNDO(IBIEN,IBPH,.IBSYS,.IBGSAV,.IBDATA,.IBERR) Q
"RTN","IBCNBCD2",187,0)
 . I (IBDIF&(IBSAV))&('$D(DTOUT)) S IBCSAV=1
"RTN","IBCNBCD2",188,0)
 I IBPH']"" S IBADD=$$ASKADD("PHARMACY",IBDATE) Q:IBADD=U  I IBADD Q:'$$ADDCV(IBGRPDA,IBCP,IBDATE,.IBERR)
"RTN","IBCNBCD2",189,0)
 ;
"RTN","IBCNBCD2",190,0)
 ; -- dental
"RTN","IBCNBCD2",191,0)
 I IBDN]"" D  Q:IBOUT!($D(IBERR))!($D(DTOUT))
"RTN","IBCNBCD2",192,0)
 . W ! S IBOUT=0,IBIEN=$G(@IBDATA@(IBDN)),IBDR="[IBCNBC CV DN EDIT]"
"RTN","IBCNBCD2",193,0)
 . D EDTREC(IBIEN,IBDR) I $G(Y(0))="AUDIT" S IBOUT=1 Q
"RTN","IBCNBCD2",194,0)
 . S IBDIF=$$CVDIF(.IBSYS,.IBGSAV,IBIEN),IBSAV=1
"RTN","IBCNBCD2",195,0)
 . I IBDIF S IBSAV=$$CVASK()
"RTN","IBCNBCD2",196,0)
 . I (IBDIF&('IBSAV))!($D(DTOUT)) D CVUNDO(IBIEN,IBDN,.IBSYS,.IBGSAV,.IBDATA,.IBERR) Q
"RTN","IBCNBCD2",197,0)
 . I (IBDIF&(IBSAV))&('$D(DTOUT)) S IBCSAV=1
"RTN","IBCNBCD2",198,0)
 I IBDN']"" S IBADD=$$ASKADD("DENTAL",IBDATE) Q:IBADD=U  I IBADD Q:'$$ADDCV(IBGRPDA,IBCD,IBDATE,.IBERR)
"RTN","IBCNBCD2",199,0)
 ;
"RTN","IBCNBCD2",200,0)
 ; -- mental health
"RTN","IBCNBCD2",201,0)
 I IBMH]""  D  Q:IBOUT!($D(IBERR))!($D(DTOUT))
"RTN","IBCNBCD2",202,0)
 . W ! S IBOUT=0,IBIEN=$G(@IBDATA@(IBMH)),IBDR="[IBCNBC CV MH EDIT]"
"RTN","IBCNBCD2",203,0)
 . D EDTREC(IBIEN,IBDR) I $G(Y(0))="AUDIT" S IBOUT=1 Q
"RTN","IBCNBCD2",204,0)
 . S IBDIF=$$CVDIF(.IBSYS,.IBGSAV,IBIEN),IBSAV=1
"RTN","IBCNBCD2",205,0)
 . I IBDIF S IBSAV=$$CVASK()
"RTN","IBCNBCD2",206,0)
 . I (IBDIF&('IBSAV))!($D(DTOUT)) D CVUNDO(IBIEN,IBMH,.IBSYS,.IBGSAV,.IBDATA,.IBERR) Q
"RTN","IBCNBCD2",207,0)
 . I (IBDIF&(IBSAV))&('$D(DTOUT)) S IBCSAV=1
"RTN","IBCNBCD2",208,0)
 I IBMH']"" S IBADD=$$ASKADD("MENTAL HEALTH",IBDATE) Q:IBADD=U  I IBADD Q:'$$ADDCV(IBGRPDA,IBCM,IBDATE,.IBERR)
"RTN","IBCNBCD2",209,0)
 ;
"RTN","IBCNBCD2",210,0)
 ; -- long term
"RTN","IBCNBCD2",211,0)
 I IBLT]"" D  Q:IBOUT!($D(IBERR))!($D(DTOUT))
"RTN","IBCNBCD2",212,0)
 . W ! S IBOUT=0,IBIEN=$G(@IBDATA@(IBLT)),IBDR="[IBCNBC CV LT EDIT]"
"RTN","IBCNBCD2",213,0)
 . D EDTREC(IBIEN,IBDR) I $G(Y(0))="AUDIT" S IBOUT=1 Q
"RTN","IBCNBCD2",214,0)
 . S IBDIF=$$CVDIF(.IBSYS,.IBGSAV,IBIEN),IBSAV=1
"RTN","IBCNBCD2",215,0)
 . I IBDIF S IBSAV=$$CVASK()
"RTN","IBCNBCD2",216,0)
 . I (IBDIF&('IBSAV))!($D(DTOUT)) D CVUNDO(IBIEN,IBLT,.IBSYS,.IBGSAV,.IBDATA,.IBERR) Q
"RTN","IBCNBCD2",217,0)
 . I (IBDIF&(IBSAV))&('$D(DTOUT)) S IBCSAV=1
"RTN","IBCNBCD2",218,0)
 I IBLT']"" S IBADD=$$ASKADD("LONG TERM",IBDATE) Q:IBADD=U  I IBADD Q:'$$ADDCV(IBGRPDA,IBCL,IBDATE,.IBERR)
"RTN","IBCNBCD2",219,0)
 Q
"RTN","IBCNBCD2",220,0)
 ;
"RTN","IBCNBCD2",221,0)
CVUNDO(IBIEN,IBPL,IBSYS,IBGSAV,IBDATA,IBERR) ; - undo any coverage limitations edits
"RTN","IBCNBCD2",222,0)
 N X,Y,DA,DIC,DIK,IBI,IBJ,IBFLD,IBIENH,IBFDA
"RTN","IBCNBCD2",223,0)
 ;
"RTN","IBCNBCD2",224,0)
 S IBFDA=$NA(^TMP("IBCNBCD2 CV EDIT FDA",$J))
"RTN","IBCNBCD2",225,0)
 K @IBFDA
"RTN","IBCNBCD2",226,0)
 ;
"RTN","IBCNBCD2",227,0)
 ; -- updo edits except for comments
"RTN","IBCNBCD2",228,0)
 F IBFLD=.01:0 S IBFLD=$O(@IBDATA@(IBPL,IBFLD)) Q:IBFLD'>0  S @IBFDA@(355.32,IBIEN_",",IBFLD)=$G(@IBDATA@(IBPL,IBFLD,"E"))
"RTN","IBCNBCD2",229,0)
 D FILE^DIE("E",.IBFDA,"IBERR") I $D(IBERR) S IBERR=1 W !,!,"*** Error...CVUNDO^IBCNBCD2 Cannot update Fields in the Coverage Limitations file! ",! K @IBFDA D PAUSE^VALM1
"RTN","IBCNBCD2",230,0)
 ;
"RTN","IBCNBCD2",231,0)
 ; -- put back any deleted comments
"RTN","IBCNBCD2",232,0)
 S IBJ=0
"RTN","IBCNBCD2",233,0)
 F IBI=0:0 S IBI=$O(@IBDATA@(IBPL,"COMM",IBI)) Q:IBI'>0  D  Q:$D(IBERR)
"RTN","IBCNBCD2",234,0)
 . ;
"RTN","IBCNBCD2",235,0)
 . ; -- if comment subscript deleted - add the comment
"RTN","IBCNBCD2",236,0)
 . I $G(@IBSYS@(IBIEN,2,IBI,0))']"" D
"RTN","IBCNBCD2",237,0)
 . . S DIC="^IBA(355.32,"_IBIEN_",2,",DIC(0)="L",DA(1)=IBIEN,DA=IBI,X=@IBDATA@(IBPL,"COMM",IBI)
"RTN","IBCNBCD2",238,0)
 . . D FILE^DICN I '+Y S IBERR=1 W !,!,"*** Error...Cannot Add 'deleted' Comments in the Coverage Limitations file! ",! D PAUSE^VALM1
"RTN","IBCNBCD2",239,0)
 . . ;
"RTN","IBCNBCD2",240,0)
 . S IBJ=IBI
"RTN","IBCNBCD2",241,0)
 ;
"RTN","IBCNBCD2",242,0)
 ; -- delete any added comments
"RTN","IBCNBCD2",243,0)
 I +IBJ F IBI=IBJ:0 S IBI=$O(@IBSYS@(IBIEN,2,IBI)) Q:IBI'>0  D
"RTN","IBCNBCD2",244,0)
 . S DA(1)=IBIEN,DIK="^IBA(355.32,"_DA(1)_",2,",DA=IBI
"RTN","IBCNBCD2",245,0)
 . D ^DIK K DA,DIK
"RTN","IBCNBCD2",246,0)
 ;
"RTN","IBCNBCD2",247,0)
 ; -- put modified comments into fda array
"RTN","IBCNBCD2",248,0)
 S IBI=0,IBIENH=$G(@IBDATA@(IBPL))_","
"RTN","IBCNBCD2",249,0)
 F IBFLD=0:0 S IBFLD=$O(@IBDATA@(IBPL,"COMM",IBFLD)) Q:IBFLD'>0  D
"RTN","IBCNBCD2",250,0)
 . S IBIEN=IBFLD_","_IBIENH
"RTN","IBCNBCD2",251,0)
 . S @IBFDA@(355.321,IBIEN,0)=$G(@IBDATA@(IBPL,"COMM",IBFLD))
"RTN","IBCNBCD2",252,0)
 ;
"RTN","IBCNBCD2",253,0)
 ; -- undo any modified comments
"RTN","IBCNBCD2",254,0)
 I $D(@IBFDA)>9 D
"RTN","IBCNBCD2",255,0)
 . D FILE^DIE("E",.IBFDA,"IBERR")
"RTN","IBCNBCD2",256,0)
 . I $D(IBERR) W !,!,"*** Error...CVUNDO^IBCNBCD2 Cannot Put Original Comments in the Coverage Limitations file! ",! D PAUSE^VALM1
"RTN","IBCNBCD2",257,0)
 Q
"RTN","IBCNBCD2",258,0)
 ;
"RTN","IBCNBCD2",259,0)
CVDLC(IBGRPDA,IBDATE,IBDTL,IBERR) ; Create records for the new coverage limitation year
"RTN","IBCNBCD2",260,0)
 N IBI,IBPCC,IBIP,IBOP,IBPH,IBDN,IBMH,IBLT,IBIEN,IBDT,IBFDT
"RTN","IBCNBCD2",261,0)
 ;
"RTN","IBCNBCD2",262,0)
 S IBDTL=$NA(^TMP("IBCNBCD2 CVDTS DATES",$J)),IBPCC=$NA(^TMP("IBCNBCD2 IB COVERAGE CAT",$J))
"RTN","IBCNBCD2",263,0)
 K @IBDTL,@IBPCC
"RTN","IBCNBCD2",264,0)
 ;
"RTN","IBCNBCD2",265,0)
 ; -- get coverage categories
"RTN","IBCNBCD2",266,0)
 D LIST^DIC(355.31,,"@;.01E",,,,,"B","",,.IBPCC,"IBERR") I $D(IBERR) W !,"Error...CVDLC^IBCNBCD2 Cannot access PLAN LIMITATION CATEGORY FILE!" D PAUSE^VALM1 Q
"RTN","IBCNBCD2",267,0)
 S (IBIP,IBOP,IBPH,IBDN,IBMH,IBLT)=0
"RTN","IBCNBCD2",268,0)
 F IBI=0:0 S IBI=$O(@IBPCC@("ID",IBI)) Q:IBI'>0  D
"RTN","IBCNBCD2",269,0)
 . I @IBPCC@("ID",IBI,.01)="INPATIENT" S IBIP=@IBPCC@(2,IBI) Q
"RTN","IBCNBCD2",270,0)
 . I @IBPCC@("ID",IBI,.01)="OUTPATIENT" S IBOP=@IBPCC@(2,IBI) Q
"RTN","IBCNBCD2",271,0)
 . I @IBPCC@("ID",IBI,.01)="PHARMACY" S IBPH=@IBPCC@(2,IBI) Q
"RTN","IBCNBCD2",272,0)
 . I @IBPCC@("ID",IBI,.01)="DENTAL" S IBDN=@IBPCC@(2,IBI) Q
"RTN","IBCNBCD2",273,0)
 . I @IBPCC@("ID",IBI,.01)="MENTAL HEALTH" S IBMH=@IBPCC@(2,IBI) Q
"RTN","IBCNBCD2",274,0)
 . I @IBPCC@("ID",IBI,.01)="LONG TERM CARE" S IBLT=@IBPCC@(2,IBI)
"RTN","IBCNBCD2",275,0)
 ;
"RTN","IBCNBCD2",276,0)
 ; -- add new records to the database
"RTN","IBCNBCD2",277,0)
 I IBIP&(IBOP)&(IBPH)&(IBDN)&(IBMH)&(IBLT) D  Q:$D(IBERR)
"RTN","IBCNBCD2",278,0)
 . ;
"RTN","IBCNBCD2",279,0)
 . ; -- format the date
"RTN","IBCNBCD2",280,0)
 . S IBDT=+IBDATE D DT^DILF("E",IBDT,.IBRET) S IBFDT=$G(IBRET(0))
"RTN","IBCNBCD2",281,0)
 . ;
"RTN","IBCNBCD2",282,0)
 . ; -- load the coverage limitation date array with formatted date
"RTN","IBCNBCD2",283,0)
 . S IBIEN=$$ADDCV(IBGRPDA,IBIP,IBDATE,.IBERR) Q:$D(IBERR)  S @IBDTL@(99_IBDT,IBIEN)=IBFDT
"RTN","IBCNBCD2",284,0)
 . S IBIEN=$$ADDCV(IBGRPDA,IBOP,IBDATE,.IBERR) Q:$D(IBERR)  S @IBDTL@(99_IBDT,IBIEN)=IBFDT
"RTN","IBCNBCD2",285,0)
 . S IBIEN=$$ADDCV(IBGRPDA,IBPH,IBDATE,.IBERR) Q:$D(IBERR)  S @IBDTL@(99_IBDT,IBIEN)=IBFDT
"RTN","IBCNBCD2",286,0)
 . S IBIEN=$$ADDCV(IBGRPDA,IBDN,IBDATE,.IBERR) Q:$D(IBERR)  S @IBDTL@(99_IBDT,IBIEN)=IBFDT
"RTN","IBCNBCD2",287,0)
 . S IBIEN=$$ADDCV(IBGRPDA,IBMH,IBDATE,.IBERR) Q:$D(IBERR)  S @IBDTL@(99_IBDT,IBIEN)=IBFDT
"RTN","IBCNBCD2",288,0)
 . S IBIEN=$$ADDCV(IBGRPDA,IBLT,IBDATE,.IBERR) Q:$D(IBERR)  S @IBDTL@(99_IBDT,IBIEN)=IBFDT
"RTN","IBCNBCD2",289,0)
 Q
"RTN","IBCNBCD2",290,0)
 ;
"RTN","IBCNBCD2",291,0)
ADDCV(IBGRPDA,IBCAT,IBDATE,IBERR) ; Add new coverage limitation record
"RTN","IBCNBCD2",292,0)
 N X,Y,DA,DIC,IBIEN,IBA,IBB,IBC
"RTN","IBCNBCD2",293,0)
 S IBIEN=0,IBC="COVERED"
"RTN","IBCNBCD2",294,0)
 ;
"RTN","IBCNBCD2",295,0)
 ; -- retrieve the plan limitation category
"RTN","IBCNBCD2",296,0)
 S IBA=$$GET1^DIQ(355.31,IBCAT_",",.01,"E") I IBA']"" S IBERR=1 W !,"Error #1...ADDCV-IBCNBCD2 Cannot retrieve PLAN LIMITATION CATEGORY!" D PAUSE^VALM1 Q IBIEN
"RTN","IBCNBCD2",297,0)
 S IBB=$P(IBDATE,U,2)
"RTN","IBCNBCD2",298,0)
 ;
"RTN","IBCNBCD2",299,0)
 ; -- update plan coverage limitation file
"RTN","IBCNBCD2",300,0)
 S DIC="^IBA(355.32,",DIC(0)="L",X=IBGRPDA,DIC("DR")=".02///^S X=IBA;.03///^S X=IBB;.04///^S X=IBC"
"RTN","IBCNBCD2",301,0)
 D FILE^DICN S IBIEN=+Y I IBIEN<0!(IBIEN=0) S IBERR=1 W !,"Error #2...ADDCV-IBCNBCD2 Cannot add New Record to the PLAN COVERAGE LIMITATIONS FILE!" D PAUSE^VALM1
"RTN","IBCNBCD2",302,0)
 Q IBIEN
"RTN","IBCNBCD2",303,0)
 ;
"RTN","IBCNBCD2",304,0)
CVDIF(IBSYS,IBGSAV,IBIEN) ; -- check for any edits made to coverage limitations
"RTN","IBCNBCD2",305,0)
 N IBI,IBDIF
"RTN","IBCNBCD2",306,0)
 S IBDIF=0
"RTN","IBCNBCD2",307,0)
 I $G(@IBSYS@(IBIEN,0))'=$G(@IBGSAV@(IBIEN,0)) S IBDIF=1 Q IBDIF
"RTN","IBCNBCD2",308,0)
 I $G(@IBSYS@(IBIEN,1))'=$G(@IBGSAV@(IBIEN,1)) S IBDIF=1 Q IBDIF
"RTN","IBCNBCD2",309,0)
 I $G(@IBSYS@(IBIEN,2,0))'=$G(@IBGSAV@(IBIEN,2,0)) S IBDIF=1 Q IBDIF
"RTN","IBCNBCD2",310,0)
 I $D(@IBSYS@(IBIEN,2,0)) D
"RTN","IBCNBCD2",311,0)
 . F IBI=0:0 S IBI=$O(@IBSYS@(IBIEN,2,IBI)) Q:IBI'>0!(IBDIF)  I $G(@IBSYS@(IBIEN,2,IBI,0))'=$G(@IBGSAV@(IBIEN,2,IBI,0)) S IBDIF=1 Q
"RTN","IBCNBCD2",312,0)
 Q IBDIF
"RTN","IBCNBCD2",313,0)
 ;
"RTN","IBCNBCD2",314,0)
EDTREC(IBIEN,IBDR) ; Edit Coverage Limitaitons
"RTN","IBCNBCD2",315,0)
 N DA,DR,DIE
"RTN","IBCNBCD2",316,0)
 S DA=IBIEN,DR=IBDR
"RTN","IBCNBCD2",317,0)
 S DIE="^IBA(355.32,",DIE("NO^")="BACKOUTOK"
"RTN","IBCNBCD2",318,0)
 D ^DIE
"RTN","IBCNBCD2",319,0)
 Q
"RTN","IBCNBCD2",320,0)
 ;
"RTN","IBCNBCD2",321,0)
CVOUT(IBDATA) ; -- unlock coverage limitations records
"RTN","IBCNBCD2",322,0)
 N IBI,IBIEN
"RTN","IBCNBCD2",323,0)
 I $D(IBDATA)>9 D
"RTN","IBCNBCD2",324,0)
 . S IBI=""
"RTN","IBCNBCD2",325,0)
 . F  S IBI=$O(@IBDATA@(IBI)) Q:IBI']""  S IBIEN=$G(@IBDATA@(IBI)) L -@IBSYS@(IBIEN)
"RTN","IBCNBCD2",326,0)
 Q
"RTN","IBCNBCD2",327,0)
 ;
"RTN","IBCNBCD2",328,0)
CVLKD ; -- write locked message
"RTN","IBCNBCD2",329,0)
 W !!,"Sorry, another user currently editing this entry."
"RTN","IBCNBCD2",330,0)
 W !,"Try again in a few minutes."
"RTN","IBCNBCD2",331,0)
 D PAUSE^VALM1
"RTN","IBCNBCD2",332,0)
 Q
"RTN","IBCNBCD2",333,0)
 ;
"RTN","IBCNBCD2",334,0)
CVASK() ; Prompt to ask user to Save Changes
"RTN","IBCNBCD2",335,0)
 Q $E($$READ^IBCNBAA("YA^::E","Save Changes to Coverage Limitations File Y/N? ","No","Enter Yes or No to Save the Changes to the CV File <or> ^ to Quit"))
"RTN","IBCNBCD2",336,0)
 ;
"RTN","IBCNBCD2",337,0)
ASKREV() ; Prompt to review Coverage Limitations
"RTN","IBCNBCD2",338,0)
 Q $E($$READ^IBCNBAA("YA^::E","Do you want to Review the CV Y/N? ","No","Enter Yes or No to Review the Coverage Limitations <or> ^ to Quit"))
"RTN","IBCNBCD2",339,0)
 ;
"RTN","IBCNBCD2",340,0)
ASKYR() ; Prompt to Enter a New or Existing AB year
"RTN","IBCNBCD2",341,0)
 Q $$READ^IBCNBAA("DA^::EX","Enter Existing Date or Add New Coverage Date:  ","","Enter a New/Existing Coverage Limitation Date <or> ^ to Quit")
"RTN","IBCNBCD2",342,0)
 ;
"RTN","IBCNBCD2",343,0)
ASKADD(IBTXT,IBDATE) ; Prompt to ask user to add new coverage CATEGORY
"RTN","IBCNBCD2",344,0)
 Q $E($$READ^IBCNBAA("YA^::E","There is no "_IBTXT_" Coverage Category for year "_$P(IBDATE,U,2)_". Do you want to add it now Y/N? ","No","Enter Yes or No to add the record now  <or> ^ to Quit"))
"RTN","IBCNBCD2",345,0)
 ;
"RTN","IBCNBCD2",346,0)
EDTYR(IBDATE,IBTXT) ; Prompt to Edit an existing Coverage Date
"RTN","IBCNBCD2",347,0)
 Q +$$READ^IBCNBAA("YA^::E","Are you sure you want to Edit "_IBTXT_" Coverage Date information: "_$P(IBDATE,U,2)_" Y/N?: ","","Enter Yes or No to Edit the Coverage Date")
"RTN","IBCNBCD2",348,0)
 ;
"RTN","IBCNBCD2",349,0)
CREYR(IBDATE) ; Prompt to Create a new Coverage Date
"RTN","IBCNBCD2",350,0)
 Q +$$READ^IBCNBAA("YA^::E","Are you sure you want to Create a new Coverage Date:  "_$P(IBDATE,U,2)_" Y/N? ","","Enter Yes or No to Create a New Coverage Year Date")
"RTN","IBCNBCD3")
0^125^B116960368
"RTN","IBCNBCD3",1,0)
IBCNBCD3 ;ALB/AWC - MCCF FY14 IB Annual Benefits/Coverage Limitations Display Screens ;25 Feb 2015
"RTN","IBCNBCD3",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNBCD3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBCD3",4,0)
 ;
"RTN","IBCNBCD3",5,0)
 ;Input Parameters:
"RTN","IBCNBCD3",6,0)
 ;  See routine IBCNBCD1
"RTN","IBCNBCD3",7,0)
 ;
"RTN","IBCNBCD3",8,0)
ABDISP(IBIEN,IBDATA,IBPOL) ; Annual Benefits Display screen - Called from ABDSEL^IBCNBCD1 and ABDLC^IBCNBCD1
"RTN","IBCNBCD3",9,0)
 N Y,IBI,IBW,IBEX,IBN
"RTN","IBCNBCD3",10,0)
 ;
"RTN","IBCNBCD3",11,0)
 W @IOF
"RTN","IBCNBCD3",12,0)
 ;
"RTN","IBCNBCD3",13,0)
 ; -- header annual benefits
"RTN","IBCNBCD3",14,0)
 D WRTFLD^IBCNBCD("                           Annual Benefits Data                                 ",0,80,"BU") W !
"RTN","IBCNBCD3",15,0)
 ;
"RTN","IBCNBCD3",16,0)
 S IBN=IBIEN_","
"RTN","IBCNBCD3",17,0)
 S IBEX=0
"RTN","IBCNBCD3",18,0)
 F IBI=1:1:59 Q:IBEX  D
"RTN","IBCNBCD3",19,0)
 . ;
"RTN","IBCNBCD3",20,0)
 . I $Y+5>IOSL D PAUSE^VALM1 W @IOF I 'Y S IBEX=1 Q
"RTN","IBCNBCD3",21,0)
 . ;
"RTN","IBCNBCD3",22,0)
 . I IBI=1 S IBW=$G(@IBDATA@(355.4,IBN,.01,"E")) D WRTFLD^IBCNBCD("  Benefit Year            :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",23,0)
 . I IBI=2 S IBW=$G(IBPOL) D WRTFLD^IBCNBCD("  Policy Information      :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",24,0)
 . I IBI=3 S IBW=$G(@IBDATA@(355.4,IBN,.05,"E")) D WRTFLD^IBCNBCD("  Max Out of Pocket       :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",25,0)
 . I IBI=4 S IBW=$G(@IBDATA@(355.4,IBN,.06,"E")) D WRTFLD^IBCNBCD("  Ambulance Coverage(%)   :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",26,0)
 . ;
"RTN","IBCNBCD3",27,0)
 . ; -- inpatient
"RTN","IBCNBCD3",28,0)
 . I IBI=5 D WRTFLD^IBCNBCD("Inpatient:",0,10,"") W ! Q
"RTN","IBCNBCD3",29,0)
 . I IBI=6 S IBW=$G(@IBDATA@(355.4,IBN,5.01,"E")) D WRTFLD^IBCNBCD("  Annual Deduct           :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",30,0)
 . I IBI=7 S IBW=$G(@IBDATA@(355.4,IBN,5.02,"E")) D WRTFLD^IBCNBCD("  Per Admis Deduct        :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",31,0)
 . I IBI=8 S IBW=$G(@IBDATA@(355.4,IBN,5.03,"E")) D WRTFLD^IBCNBCD("  Inpt. Lifetime Max      :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",32,0)
 . I IBI=9 S IBW=$G(@IBDATA@(355.4,IBN,5.04,"E")) D WRTFLD^IBCNBCD("  Inpt. Annual Max        :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",33,0)
 . I IBI=10 S IBW=$G(@IBDATA@(355.4,IBN,5.09,"E")) D WRTFLD^IBCNBCD("  Room & Board (%)        :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",34,0)
 . I IBI=11 S IBW=$G(@IBDATA@(355.4,IBN,5.07,"E")) D WRTFLD^IBCNBCD("  Drug/Alcohol Lifet. Max :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",35,0)
 . I IBI=12 S IBW=$G(@IBDATA@(355.4,IBN,5.08,"E")) D WRTFLD^IBCNBCD("  Drug/Alcohol Annual Max :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",36,0)
 . I IBI=13 S IBW=$G(@IBDATA@(355.4,IBN,5.1,"E")) D WRTFLD^IBCNBCD("  Nursing Home (%)        :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",37,0)
 . I IBI=14 S IBW=$G(@IBDATA@(355.4,IBN,5.12,"E")) D WRTFLD^IBCNBCD("  Other Inpt. Charges (%) :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",38,0)
 . ;
"RTN","IBCNBCD3",39,0)
 . ; -- outpatient
"RTN","IBCNBCD3",40,0)
 . I IBI=15 D WRTFLD^IBCNBCD("Outpatient:",0,11,"") W ! Q
"RTN","IBCNBCD3",41,0)
 . I IBI=16 S IBW=$G(@IBDATA@(355.4,IBN,2.01,"E")) D WRTFLD^IBCNBCD("  Annual Deductible       :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",42,0)
 . I IBI=17 S IBW=$G(@IBDATA@(355.4,IBN,2.02,"E")) D WRTFLD^IBCNBCD("  Per Visit Deductible    :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",43,0)
 . I IBI=18 S IBW=$G(@IBDATA@(355.4,IBN,2.03,"E")) D WRTFLD^IBCNBCD("  Lifetime Max            :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",44,0)
 . I IBI=19 S IBW=$G(@IBDATA@(355.4,IBN,2.04,"E")) D WRTFLD^IBCNBCD("  Annual Max              :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",45,0)
 . I IBI=20 S IBW=$G(@IBDATA@(355.4,IBN,2.09,"E")) D WRTFLD^IBCNBCD("  Visit (%)               :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",46,0)
 . I IBI=21 S IBW=$G(@IBDATA@(355.4,IBN,2.15,"E")) D WRTFLD^IBCNBCD("  Max Visits Per Year     :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",47,0)
 . I IBI=22 S IBW=$G(@IBDATA@(355.4,IBN,2.13,"E")) D WRTFLD^IBCNBCD("  Surgery (%)             :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",48,0)
 . I IBI=23 S IBW=$G(@IBDATA@(355.4,IBN,2.1,"E")) D WRTFLD^IBCNBCD("  Emergency (%)           :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",49,0)
 . I IBI=24 S IBW=$G(@IBDATA@(355.4,IBN,2.12,"E")) D WRTFLD^IBCNBCD("  Prescription (%)        :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",50,0)
 . I IBI=25 S IBW=$G(@IBDATA@(355.4,IBN,2.17,"E")) D WRTFLD^IBCNBCD("  Adult Day Health Care?  :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",51,0)
 . I IBI=26 S IBW=$G(@IBDATA@(355.4,IBN,2.07,"E")) D WRTFLD^IBCNBCD("  Dental Coverage Type    :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",52,0)
 . I IBI=27 D
"RTN","IBCNBCD3",53,0)
 . . I $G(IBW)="PER VISIT AMOUNT" D  Q
"RTN","IBCNBCD3",54,0)
 . . . S IBW=$G(@IBDATA@(355.4,IBN,2.08,"E")) D WRTFLD^IBCNBCD("  Dental Coverage ($)     :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",55,0)
 . . ;
"RTN","IBCNBCD3",56,0)
 . . I $G(IBW)="PERCENTAGE AMOUNT" D  Q
"RTN","IBCNBCD3",57,0)
 . . . S IBW=$G(@IBDATA@(355.4,IBN,2.08,"E")) D WRTFLD^IBCNBCD("  Dental Coverage (%)     :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",58,0)
 . . ;
"RTN","IBCNBCD3",59,0)
 . . I $G(IBW)="NONE" D
"RTN","IBCNBCD3",60,0)
 . . . S IBW=$G(@IBDATA@(355.4,IBN,2.08,"E")) D WRTFLD^IBCNBCD("  Dental Coverage         :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",61,0)
 . ;
"RTN","IBCNBCD3",62,0)
 . ; -- mental health inpatient
"RTN","IBCNBCD3",63,0)
 . I IBI=28 D WRTFLD^IBCNBCD("Mental Health Inpatient:",0,25,"") W ! Q
"RTN","IBCNBCD3",64,0)
 . I IBI=29 S IBW=$G(@IBDATA@(355.4,IBN,5.14,"E")) D WRTFLD^IBCNBCD("  MH Inpt. Max Days/Year  :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",65,0)
 . I IBI=30 S IBW=$G(@IBDATA@(355.4,IBN,5.05,"E")) D WRTFLD^IBCNBCD("  MH Lifetime Inpt. Max   :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",66,0)
 . I IBI=31 S IBW=$G(@IBDATA@(355.4,IBN,5.06,"E")) D WRTFLD^IBCNBCD("  MH Annl Inpt Max        :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",67,0)
 . I IBI=32 S IBW=$G(@IBDATA@(355.4,IBN,5.11,"E")) D WRTFLD^IBCNBCD("  Mental Health Inpt. (%) :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",68,0)
 . ;
"RTN","IBCNBCD3",69,0)
 . ; -- mental health outpatient
"RTN","IBCNBCD3",70,0)
 . I IBI=33 D WRTFLD^IBCNBCD("Mental Health Outpatient:",0,25,"") W ! Q
"RTN","IBCNBCD3",71,0)
 . I IBI=34 S IBW=$G(@IBDATA@(355.4,IBN,2.14,"E")) D WRTFLD^IBCNBCD("  MH Opt. Max Days/Year   :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",72,0)
 . I IBI=35 S IBW=$G(@IBDATA@(355.4,IBN,2.05,"E")) D WRTFLD^IBCNBCD("  MH Lifetime Opt. Max    :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",73,0)
 . I IBI=36 S IBW=$G(@IBDATA@(355.4,IBN,2.06,"E")) D WRTFLD^IBCNBCD("  MH Annual Opt. Max      :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",74,0)
 . I IBI=37 S IBW=$G(@IBDATA@(355.4,IBN,2.11,"E")) D WRTFLD^IBCNBCD("  Mental Health Opt. (%)  :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",75,0)
 . ;
"RTN","IBCNBCD3",76,0)
 . ; -- home health care
"RTN","IBCNBCD3",77,0)
 . I IBI=38 D WRTFLD^IBCNBCD("Home Health Care:",0,17,"") W ! Q
"RTN","IBCNBCD3",78,0)
 . I IBI=39 S IBW=$G(@IBDATA@(355.4,IBN,3.01,"E")) D WRTFLD^IBCNBCD("  Care Level              :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",79,0)
 . I IBI=40 S IBW=$G(@IBDATA@(355.4,IBN,3.02,"E")) D WRTFLD^IBCNBCD("  Visits Per Year         :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",80,0)
 . I IBI=41 S IBW=$G(@IBDATA@(355.4,IBN,3.03,"E")) D WRTFLD^IBCNBCD("  Max. Days Per Year      :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",81,0)
 . I IBI=42 S IBW=$G(@IBDATA@(355.4,IBN,3.04,"E")) D WRTFLD^IBCNBCD("  Med. Equipment (%)      :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",82,0)
 . I IBI=43 S IBW=$G(@IBDATA@(355.4,IBN,3.05,"E")) D WRTFLD^IBCNBCD("  Visit Definition        :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",83,0)
 . ;
"RTN","IBCNBCD3",84,0)
 . ; -- hospice
"RTN","IBCNBCD3",85,0)
 . I IBI=44 D WRTFLD^IBCNBCD("Hospice:",0,8,"") W ! Q
"RTN","IBCNBCD3",86,0)
 . I IBI=45 S IBW=$G(@IBDATA@(355.4,IBN,4.01,"E")) D WRTFLD^IBCNBCD("  Annual Deductible       :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",87,0)
 . I IBI=46 S IBW=$G(@IBDATA@(355.4,IBN,4.02,"E")) D WRTFLD^IBCNBCD("  Inpatient Annual Max.   :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",88,0)
 . I IBI=47 S IBW=$G(@IBDATA@(355.4,IBN,4.03,"E")) D WRTFLD^IBCNBCD("  Inpatient Lifetime Max. :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",89,0)
 . I IBI=48 S IBW=$G(@IBDATA@(355.4,IBN,4.04,"E")) D WRTFLD^IBCNBCD("  Room and Board (%)      :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",90,0)
 . I IBI=49 S IBW=$G(@IBDATA@(355.4,IBN,4.05,"E")) D WRTFLD^IBCNBCD("  Other Inpt. Charges (%) :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",91,0)
 . ;
"RTN","IBCNBCD3",92,0)
 . ; -- rehabilitation
"RTN","IBCNBCD3",93,0)
 . I IBI=50 D WRTFLD^IBCNBCD("Rehabilitation:",0,15,"") W ! Q
"RTN","IBCNBCD3",94,0)
 . I IBI=51 S IBW=$G(@IBDATA@(355.4,IBN,3.06,"E")) D WRTFLD^IBCNBCD("  Occu. Therapy # Visits  :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",95,0)
 . I IBI=52 S IBW=$G(@IBDATA@(355.4,IBN,3.07,"E")) D WRTFLD^IBCNBCD("  Phys. Therapy # Visits  :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",96,0)
 . I IBI=53 S IBW=$G(@IBDATA@(355.4,IBN,3.08,"E")) D WRTFLD^IBCNBCD("  Spch. Therapy # Visits  :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",97,0)
 . I IBI=54 S IBW=$G(@IBDATA@(355.4,IBN,3.09,"E")) D WRTFLD^IBCNBCD("  Med Cnslg. # Visits     :  "_IBW,0,80,"") W !,! Q
"RTN","IBCNBCD3",98,0)
 . ;
"RTN","IBCNBCD3",99,0)
 . ; -- iv management
"RTN","IBCNBCD3",100,0)
 . I IBI=55 D WRTFLD^IBCNBCD("IV Management:",0,14,"") W ! Q
"RTN","IBCNBCD3",101,0)
 . I IBI=56 S IBW=$G(@IBDATA@(355.4,IBN,4.06,"E")) D WRTFLD^IBCNBCD("  IV Infusion Opt?        :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",102,0)
 . I IBI=57 S IBW=$G(@IBDATA@(355.4,IBN,4.07,"E")) D WRTFLD^IBCNBCD("  IV Infusion Inpt?       :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",103,0)
 . I IBI=58 S IBW=$G(@IBDATA@(355.4,IBN,4.08,"E")) D WRTFLD^IBCNBCD("  IV Antibiotics Opt?     :  "_IBW,0,80,"") W ! Q
"RTN","IBCNBCD3",104,0)
 . I IBI=59 S IBW=$G(@IBDATA@(355.4,IBN,4.09,"E")) D WRTFLD^IBCNBCD("  IV Antibiotics Inpt?    :  "_IBW,0,80,"") W !
"RTN","IBCNBCD3",105,0)
 Q IBEX
"RTN","IBCNBCD3",106,0)
 ;
"RTN","IBCNBCD3",107,0)
CVDISP(IBDATA,IBPLAN) ; Display Insurance Group Coverage Limitations - Called from CVDSEL^IBCNBCD2 and CVDCRE^IBCNBCD2
"RTN","IBCNBCD3",108,0)
 N IBI,IBJ,IBEX,IBSP,IBH,IBOUT,DTOUT
"RTN","IBCNBCD3",109,0)
 S IBH="D WRTFLD^IBCNBCD(""                         Coverage Limitations Data                              "",0,80,""BU"") W !"
"RTN","IBCNBCD3",110,0)
 S IBSP="                         "
"RTN","IBCNBCD3",111,0)
 ;
"RTN","IBCNBCD3",112,0)
 ; -- header
"RTN","IBCNBCD3",113,0)
 W @IOF
"RTN","IBCNBCD3",114,0)
 X IBH
"RTN","IBCNBCD3",115,0)
 ;
"RTN","IBCNBCD3",116,0)
 S IBEX=0
"RTN","IBCNBCD3",117,0)
 F IBI=1:1:60 Q:IBEX  D
"RTN","IBCNBCD3",118,0)
 . ;
"RTN","IBCNBCD3",119,0)
 . I $Y+4>IOSL D PAUSE^VALM1 S:'Y!($D(DTOUT)) IBEX=1 Q:IBEX  W @IOF X IBH
"RTN","IBCNBCD3",120,0)
 . ;
"RTN","IBCNBCD3",121,0)
 . ; -- inpatient
"RTN","IBCNBCD3",122,0)
 . I IBI=1 W ! Q
"RTN","IBCNBCD3",123,0)
 . I IBI=2 D WRTFLD^IBCNBCD("INPATIENT:",0,10,"") Q
"RTN","IBCNBCD3",124,0)
 . I IBI=3 W ! Q
"RTN","IBCNBCD3",125,0)
 . I IBI=4 D WRTFLD^IBCNBCD("  Inpatient Coverage          :  "_$G(@IBDATA@("INPATIENT",.04,"E")),0,80,"") Q
"RTN","IBCNBCD3",126,0)
 . I IBI=5 W ! Q
"RTN","IBCNBCD3",127,0)
 . I IBI=6 D WRTFLD^IBCNBCD("  Inpatient Date of Coverage  :  "_$G(@IBDATA@("INPATIENT",.03,"E")),0,80,"") Q
"RTN","IBCNBCD3",128,0)
 . I IBI=7 S IBJ=$O(@IBDATA@("INPATIENT","COMM",0)),IBJ=$S(+IBJ:IBJ,1:0) W ! Q
"RTN","IBCNBCD3",129,0)
 . I IBI=8 D WRTFLD^IBCNBCD("  Inpatient Limit Comments    :  "_$G(@IBDATA@("INPATIENT","COMM",IBJ)),0,80,"") Q
"RTN","IBCNBCD3",130,0)
 . I IBI=9 W ! Q
"RTN","IBCNBCD3",131,0)
 . I IBI=10,$O(@IBDATA@("INPATIENT","COMM",IBJ)) D  Q
"RTN","IBCNBCD3",132,0)
 . . F IBJ=IBJ:0 S IBJ=$O(@IBDATA@("INPATIENT","COMM",IBJ)) Q:IBJ'>0!(IBEX)  D
"RTN","IBCNBCD3",133,0)
 . . . I $Y+4>IOSL D PAUSE^VALM1 S:'Y!($D(DTOUT)) IBEX=1 Q:IBEX  W @IOF X IBH
"RTN","IBCNBCD3",134,0)
 . . . D WRTFLD^IBCNBCD(IBSP_@IBDATA@("INPATIENT","COMM",IBJ),0,80,"") W !
"RTN","IBCNBCD3",135,0)
 . ;
"RTN","IBCNBCD3",136,0)
 . ; -- outpatient
"RTN","IBCNBCD3",137,0)
 . I IBI=11 W ! Q
"RTN","IBCNBCD3",138,0)
 . I IBI=12 D WRTFLD^IBCNBCD("OUTPATIENT:",0,11,"") Q
"RTN","IBCNBCD3",139,0)
 . I IBI=13 W ! Q
"RTN","IBCNBCD3",140,0)
 . I IBI=14 D WRTFLD^IBCNBCD("  Outpatient Coverage         :  "_$G(@IBDATA@("OUTPATIENT",.04,"E")),0,80,"") Q
"RTN","IBCNBCD3",141,0)
 . I IBI=15 W ! Q
"RTN","IBCNBCD3",142,0)
 . I IBI=16 D WRTFLD^IBCNBCD("  Outpatient Date of Coverage :  "_$G(@IBDATA@("OUTPATIENT",.03,"E")),0,80,"") Q
"RTN","IBCNBCD3",143,0)
 . I IBI=17 S IBJ=$O(@IBDATA@("OUTPATIENT","COMM",0)),IBJ=$S(+IBJ:IBJ,1:0) W ! Q
"RTN","IBCNBCD3",144,0)
 . I IBI=18 D WRTFLD^IBCNBCD("  Outpatient Limit Comments   :  "_$G(@IBDATA@("OUTPATIENT","COMM",IBJ)),0,80,"") Q
"RTN","IBCNBCD3",145,0)
 . I IBI=19 W ! Q
"RTN","IBCNBCD3",146,0)
 . I IBI=20,$O(@IBDATA@("OUTPATIENT","COMM",IBJ)) D  Q
"RTN","IBCNBCD3",147,0)
 . . F IBJ=IBJ:0 S IBJ=$O(@IBDATA@("OUTPATIENT","COMM",IBJ)) Q:IBJ'>0!(IBEX)  D
"RTN","IBCNBCD3",148,0)
 . . . I $Y+4>IOSL D PAUSE^VALM1 S:'Y!($D(DTOUT)) IBEX=1 Q:IBEX  W @IOF X IBH
"RTN","IBCNBCD3",149,0)
 . . . D WRTFLD^IBCNBCD(IBSP_@IBDATA@("OUTPATIENT","COMM",IBJ),0,80,"") W !
"RTN","IBCNBCD3",150,0)
 . ;
"RTN","IBCNBCD3",151,0)
 . ; -- pharmacy
"RTN","IBCNBCD3",152,0)
 . I IBI=21 W ! Q
"RTN","IBCNBCD3",153,0)
 . I IBI=22 D WRTFLD^IBCNBCD("PHARMACY:",0,11,"") Q
"RTN","IBCNBCD3",154,0)
 . I IBI=23 W ! Q
"RTN","IBCNBCD3",155,0)
 . I IBI=24 D WRTFLD^IBCNBCD("  Pharmacy Coverage           :  "_$G(@IBDATA@("PHARMACY",.04,"E")),0,80,"") Q
"RTN","IBCNBCD3",156,0)
 . I IBI=25 W ! Q
"RTN","IBCNBCD3",157,0)
 . I IBI=26 D WRTFLD^IBCNBCD("  Pharmacy Date of Coverage   :  "_$G(@IBDATA@("PHARMACY",.03,"E")),0,80,"") Q
"RTN","IBCNBCD3",158,0)
 . I IBI=27 S IBJ=$O(@IBDATA@("PHARMACY","COMM",0)),IBJ=$S(+IBJ:IBJ,1:0) W ! Q
"RTN","IBCNBCD3",159,0)
 . I IBI=28 D WRTFLD^IBCNBCD("  Pharmacy Limit Comments     :  "_$G(@IBDATA@("PHARMACY","COMM",IBJ)),0,80,"") Q
"RTN","IBCNBCD3",160,0)
 . I IBI=29 W ! Q
"RTN","IBCNBCD3",161,0)
 . I IBI=30,$O(@IBDATA@("PHARMACY","COMM",IBJ)) D  Q
"RTN","IBCNBCD3",162,0)
 . . F IBJ=IBJ:0 S IBJ=$O(@IBDATA@("PHARMACY","COMM",IBJ)) Q:IBJ'>0!(IBEX)  D
"RTN","IBCNBCD3",163,0)
 . . . I $Y+4>IOSL D PAUSE^VALM1 S:'Y!($D(DTOUT)) IBEX=1 Q:IBEX  W @IOF X IBH
"RTN","IBCNBCD3",164,0)
 . . . D WRTFLD^IBCNBCD(IBSP_@IBDATA@("PHARMACY","COMM",IBJ),0,80,"") W !
"RTN","IBCNBCD3",165,0)
 . ;
"RTN","IBCNBCD3",166,0)
 . ; -- dental
"RTN","IBCNBCD3",167,0)
 . I IBI=31 W ! Q
"RTN","IBCNBCD3",168,0)
 . I IBI=32 D WRTFLD^IBCNBCD("DENTAL:",0,7,"") Q
"RTN","IBCNBCD3",169,0)
 . I IBI=33 W ! Q
"RTN","IBCNBCD3",170,0)
 . I IBI=34 D WRTFLD^IBCNBCD("  Dental Coverage             :  "_$G(@IBDATA@("DENTAL",.04,"E")),0,80,"") Q
"RTN","IBCNBCD3",171,0)
 . I IBI=35 W ! Q
"RTN","IBCNBCD3",172,0)
 . I IBI=36 D WRTFLD^IBCNBCD("  Dental Date of Coverage     :  "_$G(@IBDATA@("DENTAL",.03,"E")),0,80,"") Q
"RTN","IBCNBCD3",173,0)
 . I IBI=37 S IBJ=$O(@IBDATA@("DENTAL","COMM",0)),IBJ=$S(+IBJ:IBJ,1:0) W ! Q
"RTN","IBCNBCD3",174,0)
 . I IBI=38 D WRTFLD^IBCNBCD("  Dental Limit Comments       :  "_$G(@IBDATA@("DENTAL","COMM",IBJ)),0,80,"") Q
"RTN","IBCNBCD3",175,0)
 . I IBI=39 W ! Q
"RTN","IBCNBCD3",176,0)
 . I IBI=40,$O(@IBDATA@("DENTAL","COMM",IBJ)) D   Q
"RTN","IBCNBCD3",177,0)
 . . F IBJ=IBJ:0 S IBJ=$O(@IBDATA@("DENTAL","COMM",IBJ)) Q:IBJ'>0!(IBEX)  D
"RTN","IBCNBCD3",178,0)
 . . . I $Y+4>IOSL D PAUSE^VALM1 S:'Y!($D(DTOUT)) IBEX=1 Q:IBEX  W @IOF X IBH
"RTN","IBCNBCD3",179,0)
 . . . D WRTFLD^IBCNBCD(IBSP_@IBDATA@("DENTAL","COMM",IBJ),0,80,"") W !
"RTN","IBCNBCD3",180,0)
 . ;
"RTN","IBCNBCD3",181,0)
 . ; -- mental health
"RTN","IBCNBCD3",182,0)
 . I IBI=41 W ! Q
"RTN","IBCNBCD3",183,0)
 . I IBI=42 D WRTFLD^IBCNBCD("MENTAL HEALTH:",0,14,"") Q
"RTN","IBCNBCD3",184,0)
 . I IBI=43 W ! Q
"RTN","IBCNBCD3",185,0)
 . I IBI=44 D WRTFLD^IBCNBCD("  MH Health Coverage          :  "_$G(@IBDATA@("MENTAL HEALTH",.04,"E")),0,80,"") Q
"RTN","IBCNBCD3",186,0)
 . I IBI=45 W ! Q
"RTN","IBCNBCD3",187,0)
 . I IBI=46 D WRTFLD^IBCNBCD("  MH Health Date of Coverage  :  "_$G(@IBDATA@("MENTAL HEALTH",.03,"E")),0,80,"") Q
"RTN","IBCNBCD3",188,0)
 . I IBI=47 S IBJ=$O(@IBDATA@("MENTAL HEALTH","COMM",0)),IBJ=$S(+IBJ:IBJ,1:0) W ! Q
"RTN","IBCNBCD3",189,0)
 . I IBI=48 D WRTFLD^IBCNBCD("  MH Health Limit Comments    :  "_$G(@IBDATA@("MENTAL HEALTH","COMM",IBJ)),0,80,"") Q
"RTN","IBCNBCD3",190,0)
 . I IBI=49 W ! Q
"RTN","IBCNBCD3",191,0)
 . I IBI=50,$O(@IBDATA@("MENTAL HEALTH","COMM",IBJ)) D  Q
"RTN","IBCNBCD3",192,0)
 . . F IBJ=IBJ:0 S IBJ=$O(@IBDATA@("MENTAL HEALTH","COMM",IBJ)) Q:IBJ'>0!(IBEX)  D
"RTN","IBCNBCD3",193,0)
 . . . I $Y+4>IOSL D PAUSE^VALM1 S:'Y!($D(DTOUT)) IBEX=1 Q:IBEX  W @IOF X IBH
"RTN","IBCNBCD3",194,0)
 . . . D WRTFLD^IBCNBCD(IBSP_@IBDATA@("MENTAL HEALTH","COMM",IBJ),0,80,"") W !
"RTN","IBCNBCD3",195,0)
 . ;
"RTN","IBCNBCD3",196,0)
 . ; -- long term
"RTN","IBCNBCD3",197,0)
 . I IBI=51 W ! Q
"RTN","IBCNBCD3",198,0)
 . I IBI=52 D WRTFLD^IBCNBCD("LONG TERM CARE:",0,15,"") Q
"RTN","IBCNBCD3",199,0)
 . I IBI=53 W ! Q
"RTN","IBCNBCD3",200,0)
 . I IBI=54 D WRTFLD^IBCNBCD("  Long Term Coverage          :  "_$G(@IBDATA@("LONG TERM CARE",.04,"E")),0,80,"") Q
"RTN","IBCNBCD3",201,0)
 . I IBI=55 W ! Q
"RTN","IBCNBCD3",202,0)
 . I IBI=56 D WRTFLD^IBCNBCD("  Long Term Date of Coverage  :  "_$G(@IBDATA@("LONG TERM CARE",.03,"E")),0,80,"") Q
"RTN","IBCNBCD3",203,0)
 . I IBI=57 S IBJ=$O(@IBDATA@("LONG TERM CARE","COMM",0)),IBJ=$S(+IBJ:IBJ,1:0) W ! Q
"RTN","IBCNBCD3",204,0)
 . I IBI=58 D WRTFLD^IBCNBCD("  Long Term Limit Comments    :  "_$G(@IBDATA@("LONG TERM CARE","COMM",IBJ)),0,80,"") Q
"RTN","IBCNBCD3",205,0)
 . I IBI=59 W ! Q
"RTN","IBCNBCD3",206,0)
 . I IBI=60,$O(@IBDATA@("LONG TERM","COMM",IBJ)) D
"RTN","IBCNBCD3",207,0)
 . . F IBJ=1=IBJ:0 S IBJ=$O(@IBDATA@("LONG TERM CARE","COMM",IBJ)) Q:IBJ'>0!(IBEX)  D
"RTN","IBCNBCD3",208,0)
 . . . I $Y+4>IOSL D PAUSE^VALM1 S:'Y!($D(DTOUT)) IBEX=1 Q:IBEX  W @IOF X IBH
"RTN","IBCNBCD3",209,0)
 . . . D WRTFLD^IBCNBCD(IBSP_@IBDATA@("LONG TERM CARE","COMM",IBJ),0,80,"") W !
"RTN","IBCNBCD3",210,0)
 Q IBEX
"RTN","IBCNBCD4")
0^126^B43901770
"RTN","IBCNBCD4",1,0)
IBCNBCD4 ;ALB/AWC - MCCF FY14 Subscriber Display Screens ;25 Feb 2015
"RTN","IBCNBCD4",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNBCD4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBCD4",4,0)
 ;
"RTN","IBCNBCD4",5,0)
 ;Input Parameters:
"RTN","IBCNBCD4",6,0)
 ;  See routine IBCNBCD1
"RTN","IBCNBCD4",7,0)
 ;
"RTN","IBCNBCD4",8,0)
SBDISP(IBBUFDA,IBDFN,IBPOLDA,IBSEL,IBRIEN,IBSIEN,IBFNAM,IBVAL,IBHOLD,IBXHOLD) ; Display Subscriber Registration Data - Called from ACSUB^IBCNBAA
"RTN","IBCNBCD4",9,0)
 N IBI,IBCNT,IBOUT,IBREL,IBIEN,IBV,DIERR,IBRET
"RTN","IBCNBCD4",10,0)
 S IBCNT=1,(IBOUT,IBREL,IBIEN)=0
"RTN","IBCNBCD4",11,0)
 ;
"RTN","IBCNBCD4",12,0)
 S IBHOLD=$NA(^TMP("IBCNBCD4 SBDISP HOLD DATA",$J)),IBXHOLD=$NA(^TMP("IBCNBCD4 SBDISP HOLD EXTERNAL DATA",$J))
"RTN","IBCNBCD4",13,0)
 K @IBHOLD
"RTN","IBCNBCD4",14,0)
 K @IBXHOLD
"RTN","IBCNBCD4",15,0)
 ;
"RTN","IBCNBCD4",16,0)
 N IB1,IB2,IB3,IB4,IB5,IB6,IB7,IB8,IB9,IB10,IB11,IB12,IB13,IB14,IB15,IB16,IB17,IB18,IB19,IB20
"RTN","IBCNBCD4",17,0)
 S IB1="Subscriber Id:"
"RTN","IBCNBCD4",18,0)
 S IB2="Whose Insurance:"
"RTN","IBCNBCD4",19,0)
 S IB3="Relationship:"
"RTN","IBCNBCD4",20,0)
 S IB4="Rx Relationship:"
"RTN","IBCNBCD4",21,0)
 S IB5="Rx Person Code:"
"RTN","IBCNBCD4",22,0)
 S IB6="Subscriber Name:"
"RTN","IBCNBCD4",23,0)
 S IB7="Subscriber's DOB:"
"RTN","IBCNBCD4",24,0)
 S IB8="Subscriber's SSN:"
"RTN","IBCNBCD4",25,0)
 S IB9="Subscriber's SEX:"
"RTN","IBCNBCD4",26,0)
 S IB10="Primary Provider:"
"RTN","IBCNBCD4",27,0)
 S IB11="Provider Phone:"
"RTN","IBCNBCD4",28,0)
 S IB12="Coor of Benefits:"
"RTN","IBCNBCD4",29,0)
 S IB13="Patient Id:"
"RTN","IBCNBCD4",30,0)
 S IB14="Subscr Str Ln 1:"
"RTN","IBCNBCD4",31,0)
 S IB15="Subscr Str Ln 2:"
"RTN","IBCNBCD4",32,0)
 S IB16="Subscr City:"
"RTN","IBCNBCD4",33,0)
 S IB17="Subscr State:"
"RTN","IBCNBCD4",34,0)
 S IB18="Subscr Zip:"
"RTN","IBCNBCD4",35,0)
 S IB19="Subscr Country:"
"RTN","IBCNBCD4",36,0)
 S IB20="Subscr Phone:"
"RTN","IBCNBCD4",37,0)
 ;
"RTN","IBCNBCD4",38,0)
 ;
"RTN","IBCNBCD4",39,0)
 ; -- get corresponding IEN from the PT. RELATIONSHIP - HIPAA(#2.312,4.03) to the IEN for the RELATIONSHIP FILE(#408.11)
"RTN","IBCNBCD4",40,0)
 S IBV=$P($G(IBVAL),U,2) I IBV]"" S IBREL=+$O(^DG(408.11,"B",IBV,0))
"RTN","IBCNBCD4",41,0)
 ;
"RTN","IBCNBCD4",42,0)
 ; -- get the pointer to where the demographic data is located via the PATIENT RELATION FILE(#408.12)
"RTN","IBCNBCD4",43,0)
 I IBV]"",+IBREL F IBI=0:0 S IBI=$O(^DGPR(408.12,"B",IBDFN,IBI)) Q:IBI'>0!(IBOUT)  D  Q:$D(DIERR)
"RTN","IBCNBCD4",44,0)
 . ;
"RTN","IBCNBCD4",45,0)
 . D GETS^DIQ(408.12,IBI_",",".01;.02;.03","I","IBRET","DIERR") I $D(DIERR) W !,"Error...SBVAL-IBCNBCD4 Cannot access Patient Relationship data!" D PAUSE^VALM1 Q
"RTN","IBCNBCD4",46,0)
 . ;
"RTN","IBCNBCD4",47,0)
 . I +$G(IBRET(408.12,IBI_",",.02,"I"))=IBREL D
"RTN","IBCNBCD4",48,0)
 . . ;
"RTN","IBCNBCD4",49,0)
 . . S IBIEN=$P($G(IBRET(408.12,IBI_",",.03,"I")),";"),IBFNAM=$P($P($G(IBRET(408.12,IBI_",",.03,"I")),"("),";",2)
"RTN","IBCNBCD4",50,0)
 . . S IBOUT=1
"RTN","IBCNBCD4",51,0)
 ;
"RTN","IBCNBCD4",52,0)
 ; -- write header
"RTN","IBCNBCD4",53,0)
 W !,! D WRTFLD(" Subscriber Data:  Patient Registration            Patient Insurance Policy   ",0,80,"BU")
"RTN","IBCNBCD4",54,0)
 ;
"RTN","IBCNBCD4",55,0)
 ; -- if relationship demographic data located in patient file(#2)
"RTN","IBCNBCD4",56,0)
 I +IBPOLDA,+IBIEN,IBFNAM="DPT" D  Q
"RTN","IBCNBCD4",57,0)
 . ;
"RTN","IBCNBCD4",58,0)
 . D PDIS^IBCNBCD5(IBBUFDA,IBIEN,IBSIEN,IBSEL,IBV,IB1,IB2,IB3,IB4,IB5,IB6,IB7,IB8,IB9,IB10,IB11,IB12,IB13,IB14,IB15,IB16,IB17,IB18,IB19,IB20,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD4",59,0)
 . ;
"RTN","IBCNBCD4",60,0)
 . D WRTBLD
"RTN","IBCNBCD4",61,0)
 ;
"RTN","IBCNBCD4",62,0)
 ;
"RTN","IBCNBCD4",63,0)
 ; -- if relationship demographic data located in income person file(#408.13)
"RTN","IBCNBCD4",64,0)
 I +IBPOLDA,+IBIEN,IBFNAM="DGPR" D  Q
"RTN","IBCNBCD4",65,0)
 . ;
"RTN","IBCNBCD4",66,0)
 . D IDIS^IBCNBCD5(IBBUFDA,IBIEN,IBSIEN,IBSEL,IBV,IB1,IB2,IB3,IB4,IB5,IB6,IB7,IB8,IB9,IB10,IB11,IB12,IB13,IB14,IB15,IB16,IB17,IB18,IB19,IB20,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD4",67,0)
 . ;
"RTN","IBCNBCD4",68,0)
 . D WRTBLD
"RTN","IBCNBCD4",69,0)
 ;
"RTN","IBCNBCD4",70,0)
 ;
"RTN","IBCNBCD4",71,0)
 ; -- no relationship patient/income person data found
"RTN","IBCNBCD4",72,0)
 I +IBPOLDA,'IBIEN D  Q
"RTN","IBCNBCD4",73,0)
 . ;
"RTN","IBCNBCD4",74,0)
 . D NDIS^IBCNBCD5(IBBUFDA,IBIEN,IBSIEN,IBSEL,IBV,IB1,IB2,IB3,IB4,IB5,IB6,IB7,IB8,IB9,IB10,IB11,IB12,IB13,IB14,IB15,IB16,IB17,IB18,IB19,IB20,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD4",75,0)
 . ;
"RTN","IBCNBCD4",76,0)
 . D WRTBLD
"RTN","IBCNBCD4",77,0)
 Q
"RTN","IBCNBCD4",78,0)
 ;
"RTN","IBCNBCD4",79,0)
BD(IBBUFDA,IBTXT,IBFLD,IBDAT,IBSEL,IBSIEN,IBXFLD,IBXDAT,IBCNT,IBHOLD,IBXHOLD) ; Display Insurance Verification Processor information <and> Insurance Policy information
"RTN","IBCNBCD4",80,0)
 N X,Y,IBOVER,IBMERG,IBITER,IBITER1,IBITER2,IBDIS,IBEM,%DT
"RTN","IBCNBCD4",81,0)
 S (IBITER1,IBITER2)=0,IBITER=1
"RTN","IBCNBCD4",82,0)
 ;
"RTN","IBCNBCD4",83,0)
 ; ******* left side of screen BEGIN *****
"RTN","IBCNBCD4",84,0)
 S @IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",85,0)
 ;
"RTN","IBCNBCD4",86,0)
 ; -- format date of birth
"RTN","IBCNBCD4",87,0)
 I IBFLD=".03" D
"RTN","IBCNBCD4",88,0)
 . S X=IBDAT K Y S %DT="XP",%DT(0)=-DT D ^%DT K %DT(0) S X=Y K:Y<1 X
"RTN","IBCNBCD4",89,0)
 . I $G(X)]"" S IBDAT=$$UP^XLFSTR($$FMTE^XLFDT(X,1)),@IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",90,0)
 ; -- format ssn
"RTN","IBCNBCD4",91,0)
 I IBFLD=".09" D
"RTN","IBCNBCD4",92,0)
 . I $L(IBDAT)=9 S IBDAT=$E(IBDAT,1,3)_"-"_$E(IBDAT,4,5)_"-"_$E(IBDAT,6,9),@IBHOLD@(2,IBFLD)=IBDAT Q
"RTN","IBCNBCD4",93,0)
 . I $L(IBDAT)=11 S IBDAT=$E(IBDAT,10,11)_$E(IBDAT,1,9),@IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",94,0)
 ; -- format phone number
"RTN","IBCNBCD4",95,0)
 I IBFLD=".131" D
"RTN","IBCNBCD4",96,0)
 . I $L(IBDAT)=7 S IBDAT=$E(IBDAT,1,3)_"-"_$E(IBDAT,4,7),@IBHOLD@(2,IBFLD)=IBDAT Q
"RTN","IBCNBCD4",97,0)
 . I $L(IBDAT)=10 S IBDAT="("_$E(IBDAT,1,3)_")"_$E(IBDAT,4,6)_"-"_$E(IBDAT,7,10),@IBHOLD@(2,IBFLD)=IBDAT Q
"RTN","IBCNBCD4",98,0)
 . I $L(IBDAT)=11 S IBDAT=$E(IBDAT)_"-"_"("_$E(IBDAT,1,3)_")"_$E(IBDAT,4,6)_"-"_$E(IBDAT,7,10),@IBHOLD@(2,IBFLD)=IBDAT Q
"RTN","IBCNBCD4",99,0)
 . I $L(IBDAT)=12,IBDAT?3N."-".3N."-".4N S IBDAT="("_$E(IBDAT,1,3)_")"_$E(IBDAT,4,12),@IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",100,0)
 ;
"RTN","IBCNBCD4",101,0)
 ; -- self    whose insurance and relationship
"RTN","IBCNBCD4",102,0)
 I IBSEL=18&(IBFLD="60.05") S IBDAT="VETERAN",@IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",103,0)
 I IBSEL=18&(IBFLD="60.14") S IBDAT="SELF",@IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",104,0)
 ;
"RTN","IBCNBCD4",105,0)
 ; -- spouse  whose insurance and relationship
"RTN","IBCNBCD4",106,0)
 I IBSEL=1&(IBFLD="60.05") S IBDAT="SPOUSE",@IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",107,0)
 I IBSEL=1&(IBFLD="60.14") S IBDAT="SPOUSE",@IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",108,0)
 ;
"RTN","IBCNBCD4",109,0)
 ; -- not spouse or self
"RTN","IBCNBCD4",110,0)
 I IBSEL'=18&(IBSEL'=1)&(IBFLD="60.14") S IBDAT="",@IBHOLD@(2,IBFLD)=IBDAT
"RTN","IBCNBCD4",111,0)
 ;
"RTN","IBCNBCD4",112,0)
 ; -- rx relationship
"RTN","IBCNBCD4",113,0)
 I IBFLD="60.15",IBDAT]"" D  Q:$D(DIERR)
"RTN","IBCNBCD4",114,0)
 . S IBDIS=$S(IBDAT=0:1,IBDAT=1:2,IBDAT=2:3,IBDAT=3:4,IBDAT=4:5,1:IBDAT)
"RTN","IBCNBCD4",115,0)
 . I +IBDIS D
"RTN","IBCNBCD4",116,0)
 . . S IBDAT=IBDAT_" - "_$$GET1^DIQ(9002313.19,IBDIS_",",".02","E",,"DIERR") I $D(DIERR) D IBQ("Error #2...DISBUF-IBCNBCD4 Cannot access Rx Relationship data!") Q
"RTN","IBCNBCD4",117,0)
 S IBITER1=$L(IBDAT)-1\29+1
"RTN","IBCNBCD4",118,0)
 ; ******* left side of screen END *****
"RTN","IBCNBCD4",119,0)
 ;
"RTN","IBCNBCD4",120,0)
 ;
"RTN","IBCNBCD4",121,0)
 ; ******* right side of screen BEGIN *****
"RTN","IBCNBCD4",122,0)
 ; -- rx relationship
"RTN","IBCNBCD4",123,0)
 I IBXFLD="4.05",IBXDAT]"" D  Q:$D(DIERR)
"RTN","IBCNBCD4",124,0)
 . S IBDIS=$S(IBXDAT=0:1,IBXDAT=1:2,IBXDAT=2:3,IBXDAT=3:4,IBXDAT=4:5,1:IBXDAT)
"RTN","IBCNBCD4",125,0)
 . I +IBDIS D
"RTN","IBCNBCD4",126,0)
 . . S IBXDAT=IBXDAT_" - "_$$GET1^DIQ(9002313.19,IBDIS_",",".02","E",,"DIERR") I $D(DIERR) D IBQ("Error #4...DISBUF-IBCNBCD4 Cannot access Rx Relationship data!") Q
"RTN","IBCNBCD4",127,0)
 ; ******* right side of screen END *****
"RTN","IBCNBCD4",128,0)
 ;
"RTN","IBCNBCD4",129,0)
 S @IBXHOLD@(2,IBXFLD)=IBXDAT
"RTN","IBCNBCD4",130,0)
 S IBITER2=$L(IBXDAT)-1\29+1
"RTN","IBCNBCD4",131,0)
 S IBITER=$S(IBITER2>IBITER1:IBITER2,IBITER1>IBITER2:IBITER1,IBITER1=IBITER2:IBITER1,1:1)
"RTN","IBCNBCD4",132,0)
 S IBOVER=$S(IBDAT'=""&(IBDAT'=IBXDAT):"B",1:""),IBMERG=$S(IBXDAT="":"B",1:"")
"RTN","IBCNBCD4",133,0)
 D WRTLN(IBTXT,IBDAT,IBXDAT,IBOVER,IBMERG)
"RTN","IBCNBCD4",134,0)
 Q
"RTN","IBCNBCD4",135,0)
 ;
"RTN","IBCNBCD4",136,0)
WRTLN(IBTXT,FLD1,FLD2,OVER,MERG,ATTR) ; write a line of formatted data with label and two fields
"RTN","IBCNBCD4",137,0)
 N IBCTR,IBSV,IBEV,IBBUFV,IBSPV
"RTN","IBCNBCD4",138,0)
 S IBSV=1,IBEV=29
"RTN","IBCNBCD4",139,0)
 S ATTR=$G(ATTR),OVER=ATTR_$G(OVER),MERG=ATTR_$G(MERG)
"RTN","IBCNBCD4",140,0)
 S IBTXT=$J(IBTXT,17)_"  "
"RTN","IBCNBCD4",141,0)
 W !
"RTN","IBCNBCD4",142,0)
 I '$G(IBITER) S IBITER=1
"RTN","IBCNBCD4",143,0)
 F IBCTR=1:1:IBITER D
"RTN","IBCNBCD4",144,0)
 . S IBBUFV=$E(FLD1,IBSV,IBEV)
"RTN","IBCNBCD4",145,0)
 . S IBSPV=$E(FLD2,IBSV,IBEV)
"RTN","IBCNBCD4",146,0)
 . I $L(IBBUFV)<29 S IBBUFV=IBBUFV_$J("",29-$L(IBBUFV))
"RTN","IBCNBCD4",147,0)
 . I $L(IBSPV)<29 S IBSPV=IBSPV_$J("",29-$L(IBSPV))
"RTN","IBCNBCD4",148,0)
 . D:IBCTR=1 WRTFLD(IBTXT,0,19,ATTR)
"RTN","IBCNBCD4",149,0)
 . D WRTFLD(IBBUFV,19,29,MERG)
"RTN","IBCNBCD4",150,0)
 . D WRTFLD(" | ",48,3,ATTR),WRTFLD(IBSPV,51,29,OVER)
"RTN","IBCNBCD4",151,0)
 . I IBITER>1,IBCTR'=IBITER W !
"RTN","IBCNBCD4",152,0)
 . S IBSV=IBSV+29
"RTN","IBCNBCD4",153,0)
 . S IBEV=IBEV+29
"RTN","IBCNBCD4",154,0)
 Q
"RTN","IBCNBCD4",155,0)
 ;
"RTN","IBCNBCD4",156,0)
WRTFLD(STRING,COL,WD,ATTR) ; write an individual field with display attributes
"RTN","IBCNBCD4",157,0)
 N ATTRB,ATTRE,DX,DY,X,Y
"RTN","IBCNBCD4",158,0)
 S ATTRB="",ATTRB=$S(ATTR["B":$G(IOINHI),1:"")_$S(ATTR["U":$G(IOUON),1:"")
"RTN","IBCNBCD4",159,0)
 S ATTRE="",ATTRE=$S(ATTR["B":$G(IOINORM),1:"")_$S(ATTR["U":$G(IOUOFF),1:"")
"RTN","IBCNBCD4",160,0)
 ;
"RTN","IBCNBCD4",161,0)
 S DX=COL,DY=$Y X IOXY
"RTN","IBCNBCD4",162,0)
 W ATTRB,$E(STRING,1,WD),ATTRE
"RTN","IBCNBCD4",163,0)
 S DX=(COL+WD),DY=$Y X IOXY
"RTN","IBCNBCD4",164,0)
 Q
"RTN","IBCNBCD4",165,0)
 ;
"RTN","IBCNBCD4",166,0)
WRTBLD ; Write footer in bold
"RTN","IBCNBCD4",167,0)
 N IBF1,IBF2
"RTN","IBCNBCD4",168,0)
 S IBF1="(bold=accepted on merge)",IBF2="(bold=replaced on overwrite)"
"RTN","IBCNBCD4",169,0)
 D WRTLN("",IBF1,IBF2,"","","U")
"RTN","IBCNBCD4",170,0)
 Q
"RTN","IBCNBCD4",171,0)
 ;
"RTN","IBCNBCD4",172,0)
IBQ(IBEM) ; write error message
"RTN","IBCNBCD4",173,0)
 ; Input: IBEM - Error message text
"RTN","IBCNBCD4",174,0)
 W !,IBEM
"RTN","IBCNBCD4",175,0)
 D PAUSE^VALM1
"RTN","IBCNBCD4",176,0)
 Q
"RTN","IBCNBCD5")
0^137^B137684111
"RTN","IBCNBCD5",1,0)
IBCNBCD5 ;ALB/AWC - MCCF FY14 Subscriber Display Screens ;25 Feb 2015
"RTN","IBCNBCD5",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNBCD5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBCD5",4,0)
 ;
"RTN","IBCNBCD5",5,0)
 ;Input Parameters:
"RTN","IBCNBCD5",6,0)
 ;  See routine SBDISP^IBCNBCD4
"RTN","IBCNBCD5",7,0)
 ;
"RTN","IBCNBCD5",8,0)
 ; -- called from routine SBDISP^IBCNBCD4
"RTN","IBCNBCD5",9,0)
PDIS(IBBUFDA,IBIEN,IBSIEN,IBSEL,IBV,IB1,IB2,IB3,IB4,IB5,IB6,IB7,IB8,IB9,IB10,IB11,IB12,IB13,IB14,IB15,IB16,IB17,IB18,IB19,IB20,IBHOLD,IBXHOLD) ;
"RTN","IBCNBCD5",10,0)
 N IBFLD,IBFLDS,IBXFLD,IBTXT,IBDAT,IBBDAT,IBPDAT,IBIDAT,IBCNT,IBPRDA,IBXDAT,DIERR
"RTN","IBCNBCD5",11,0)
 S IBCNT=0
"RTN","IBCNBCD5",12,0)
 ;
"RTN","IBCNBCD5",13,0)
 ; -- get buffer record data (#355.33)
"RTN","IBCNBCD5",14,0)
 S IBFLDS="90.03;60.05;60.14;60.15;60.16;91.01;60.1;60.11;60.12;62.01",IBBUFDA=IBBUFDA_","
"RTN","IBCNBCD5",15,0)
 D GETS^DIQ(355.33,IBBUFDA,IBFLDS,,"IBBDAT","DIERR") Q:$D(DIERR)
"RTN","IBCNBCD5",16,0)
 ;
"RTN","IBCNBCD5",17,0)
 ; -- get patient record data (#2)
"RTN","IBCNBCD5",18,0)
 S IBFLDS=".01;.03;.09;.02;.111;.112;.114;.115;.116;.1173;.131",IBPRDA=IBIEN_","
"RTN","IBCNBCD5",19,0)
 D GETS^DIQ(2,IBPRDA,IBFLDS,,"IBPDAT","DIERR") Q:$D(DIERR)
"RTN","IBCNBCD5",20,0)
 ;
"RTN","IBCNBCD5",21,0)
 ; -- get patient insurance data (#2.312)
"RTN","IBCNBCD5",22,0)
 S IBFLDS="7.02;6;4.03;4.05;4.06;7.01;3.01;3.05;3.12;4.01;4.02;.2;5.01;3.06;3.07;3.08;3.09;3.1;3.13;3.11"
"RTN","IBCNBCD5",23,0)
 D GETS^DIQ(2.312,IBSIEN,IBFLDS,,"IBIDAT","DIERR") Q:$D(DIERR)
"RTN","IBCNBCD5",24,0)
 ;
"RTN","IBCNBCD5",25,0)
 S IBTXT=IB1,IBFLD=90.03,IBXFLD=7.02,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",26,0)
 S IBTXT=IB2,IBFLD=60.05,IBXFLD=6,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",27,0)
 S IBTXT=IB3,IBFLD=60.14,IBXFLD=4.03,IBDAT=IBV,IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",28,0)
 S IBTXT=IB4,IBFLD=60.15,IBXFLD=4.05,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",29,0)
 S IBTXT=IB5,IBFLD=60.16,IBXFLD=4.06,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",30,0)
 S IBTXT=IB6,IBFLD=91.01,IBXFLD=7.01,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",31,0)
 S IBTXT=IB7,IBFLD=.03,IBXFLD=3.01,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",32,0)
 S IBTXT=IB8,IBFLD=.09,IBXFLD=3.05,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",33,0)
 S IBTXT=IB9,IBFLD=.02,IBXFLD=3.12,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",34,0)
 S IBTXT=IB10,IBFLD=60.1,IBXFLD=4.01,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",35,0)
 S IBTXT=IB11,IBFLD=60.11,IBXFLD=4.02,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",36,0)
 S IBTXT=IB12,IBFLD=60.12,IBXFLD=.2,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",37,0)
 S IBTXT=IB13,IBFLD=62.01,IBXFLD=5.01,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",38,0)
 S IBTXT=IB14,IBFLD=.111,IBXFLD=3.06,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",39,0)
 S IBTXT=IB15,IBFLD=.112,IBXFLD=3.07,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",40,0)
 S IBTXT=IB16,IBFLD=.114,IBXFLD=3.08,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",41,0)
 S IBTXT=IB17,IBFLD=.115,IBXFLD=3.09,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",42,0)
 S IBTXT=IB18,IBFLD=.116,IBXFLD=3.1,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",43,0)
 S IBTXT=IB19,IBFLD=.1173,IBXFLD=3.13,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",44,0)
 S IBTXT=IB20,IBFLD=.131,IBXFLD=3.11,IBDAT=$G(IBPDAT(2,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",45,0)
 Q
"RTN","IBCNBCD5",46,0)
 ;
"RTN","IBCNBCD5",47,0)
IDIS(IBBUFDA,IBIEN,IBSIEN,IBSEL,IBV,IB1,IB2,IB3,IB4,IB5,IB6,IB7,IB8,IB9,IB10,IB11,IB12,IB13,IB14,IB15,IB16,IB17,IB18,IB19,IB20,IBHOLD,IBXHOLD) ;
"RTN","IBCNBCD5",48,0)
 N IBFLD,IBFLDS,IBXFLD,IBTXT,IBDAT,IBBDAT,IBPDAT,IBIDAT,IBCNT,IBXDAT
"RTN","IBCNBCD5",49,0)
 S IBCNT=0
"RTN","IBCNBCD5",50,0)
 ;
"RTN","IBCNBCD5",51,0)
 ; -- get buffer record data (#355.33)
"RTN","IBCNBCD5",52,0)
 S IBFLDS="90.03;60.05;60.14;60.15;60.16;60.1;60.11;60.12;62.01",IBBUFDA=IBBUFDA_","
"RTN","IBCNBCD5",53,0)
 D GETS^DIQ(355.33,IBBUFDA,IBFLDS,,"IBBDAT","DIERR") Q:$D(DIERR)
"RTN","IBCNBCD5",54,0)
 ;
"RTN","IBCNBCD5",55,0)
 ; -- get income person record data (#408.13
"RTN","IBCNBCD5",56,0)
 S IBFLDS=".01;.02;.03;.09;1.2;1.3;1.5;1.6;1.7;1.8",IBPRDA=IBIEN_","
"RTN","IBCNBCD5",57,0)
 D GETS^DIQ(408.13,IBPRDA,IBFLDS,,"IBPDAT","DIERR") Q:$D(DIERR)
"RTN","IBCNBCD5",58,0)
 ;
"RTN","IBCNBCD5",59,0)
 ; -- get patient insurance data (#2.312)
"RTN","IBCNBCD5",60,0)
 S IBFLDS="7.02;6;4.03;4.05;4.06;7.01;3.01;3.05;3.12;4.01;4.02;.2;5.01;3.06;3.07;3.08;3.09;3.1;3.13;3.11"
"RTN","IBCNBCD5",61,0)
 D GETS^DIQ(2.312,IBSIEN,IBFLDS,,"IBIDAT","DIERR") Q:$D(DIERR)
"RTN","IBCNBCD5",62,0)
 ;
"RTN","IBCNBCD5",63,0)
 S IBTXT=IB1,IBFLD=90.03,IBXFLD=7.02,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",64,0)
 S IBTXT=IB2,IBFLD=60.05,IBXFLD=6,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",65,0)
 S IBTXT=IB3,IBFLD=60.14,IBXFLD=4.03,IBDAT=IBV,IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",66,0)
 S IBTXT=IB4,IBFLD=60.15,IBXFLD=4.05,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",67,0)
 S IBTXT=IB5,IBFLD=60.16,IBXFLD=4.06,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",68,0)
 S IBTXT=IB6,IBFLD=.01,IBXFLD=7.01,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",69,0)
 S IBTXT=IB7,IBFLD=.03,IBXFLD=3.01,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",70,0)
 S IBTXT=IB8,IBFLD=.09,IBXFLD=3.05,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",71,0)
 S IBTXT=IB9,IBFLD=.02,IBXFLD=3.12,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",72,0)
 S IBTXT=IB10,IBFLD=60.1,IBXFLD=4.01,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",73,0)
 S IBTXT=IB11,IBFLD=60.11,IBXFLD=4.02,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",74,0)
 S IBTXT=IB12,IBFLD=60.12,IBXFLD=.2,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",75,0)
 S IBTXT=IB13,IBFLD=62.01,IBXFLD=5.01,IBDAT=$G(IBBDAT(355.33,IBBUFDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",76,0)
 S IBTXT=IB14,IBFLD=1.2,IBXFLD=3.06,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",77,0)
 S IBTXT=IB15,IBFLD=1.3,IBXFLD=3.07,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",78,0)
 S IBTXT=IB16,IBFLD=1.5,IBXFLD=3.08,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",79,0)
 S IBTXT=IB17,IBFLD=1.6,IBXFLD=3.09,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",80,0)
 S IBTXT=IB18,IBFLD=1.7,IBXFLD=3.1,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",81,0)
 S IBTXT=IB19,IBFLD=1.99,IBXFLD=3.13,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",82,0)
 S IBTXT=IB20,IBFLD=1.8,IBXFLD=3.11,IBDAT=$G(IBPDAT(408.13,IBPRDA,IBFLD)),IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",83,0)
 Q
"RTN","IBCNBCD5",84,0)
 ;
"RTN","IBCNBCD5",85,0)
NDIS(IBBUFDA,IBIEN,IBSIEN,IBSEL,IBV,IB1,IB2,IB3,IB4,IB5,IB6,IB7,IB8,IB9,IB10,IB11,IB12,IB13,IB14,IB15,IB16,IB17,IB18,IB19,IB20,IBHOLD,IBXHOLD) ;
"RTN","IBCNBCD5",86,0)
 N IBFLD,IBFLDS,IBXFLD,IBTXT,IBDAT,IBBDAT,IBPDAT,IBIDAT,IBCNT,IBXDAT
"RTN","IBCNBCD5",87,0)
 S IBCNT=0
"RTN","IBCNBCD5",88,0)
 ;
"RTN","IBCNBCD5",89,0)
 ; -- get patient insurance data (#2.312)
"RTN","IBCNBCD5",90,0)
 S IBFLDS="7.02;6;4.03;4.05;4.06;7.01;3.01;3.05;3.12;4.01;4.02;.2;5.01;3.06;3.07;3.08;3.09;3.1;3.13;3.11"
"RTN","IBCNBCD5",91,0)
 D GETS^DIQ(2.312,IBSIEN,IBFLDS,,"IBIDAT","DIERR") Q:$D(DIERR)
"RTN","IBCNBCD5",92,0)
 ;
"RTN","IBCNBCD5",93,0)
 S IBTXT=IB1,IBFLD=90.03,IBXFLD=7.02,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",94,0)
 S IBTXT=IB2,IBFLD=60.05,IBXFLD=6,IBDAT=IBV,IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",95,0)
 S IBTXT=IB3,IBFLD=60.14,IBXFLD=4.03,IBDAT=IBV,IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",96,0)
 S IBTXT=IB4,IBFLD=60.15,IBXFLD=4.05,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",97,0)
 S IBTXT=IB5,IBFLD=60.16,IBXFLD=4.06,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",98,0)
 S IBTXT=IB6,IBFLD=.01,IBXFLD=7.01,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",99,0)
 S IBTXT=IB7,IBFLD=.03,IBXFLD=3.01,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",100,0)
 S IBTXT=IB8,IBFLD=.09,IBXFLD=3.05,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",101,0)
 S IBTXT=IB9,IBFLD=.02,IBXFLD=3.12,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",102,0)
 S IBTXT=IB10,IBFLD=60.1,IBXFLD=4.01,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",103,0)
 S IBTXT=IB11,IBFLD=60.11,IBXFLD=4.02,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",104,0)
 S IBTXT=IB12,IBFLD=60.12,IBXFLD=.2,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",105,0)
 S IBTXT=IB13,IBFLD=62.01,IBXFLD=5.01,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",106,0)
 S IBTXT=IB14,IBFLD=.111,IBXFLD=3.06,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",107,0)
 S IBTXT=IB15,IBFLD=.112,IBXFLD=3.07,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",108,0)
 S IBTXT=IB16,IBFLD=.114,IBXFLD=3.08,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",109,0)
 S IBTXT=IB17,IBFLD=.115,IBXFLD=3.09,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",110,0)
 S IBTXT=IB18,IBFLD=.116,IBXFLD=3.1,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",111,0)
 S IBTXT=IB19,IBFLD=.1173,IBXFLD=3.13,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",112,0)
 S IBTXT=IB20,IBFLD=.131,IBXFLD=3.11,IBDAT="",IBXDAT=$G(IBIDAT(2.312,IBSIEN,IBXFLD)) D BD^IBCNBCD4(IBBUFDA,IBTXT,IBFLD,.IBDAT,IBSEL,IBSIEN,.IBXFLD,.IBXDAT,.IBCNT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD5",113,0)
 Q
"RTN","IBCNBCD6")
0^138^B134178322
"RTN","IBCNBCD6",1,0)
IBCNBCD6 ;ALB/AWC - MCCF FY14 Subscriber Display Screens ;25 Feb 2015
"RTN","IBCNBCD6",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNBCD6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBCD6",4,0)
 ;
"RTN","IBCNBCD6",5,0)
 ;Input Parameters:
"RTN","IBCNBCD6",6,0)
 ;  See routine IBCNBCD1
"RTN","IBCNBCD6",7,0)
 ;
"RTN","IBCNBCD6",8,0)
SUB(IBBUFDA,IBEXTDA,IBRIEN,IBSEL,IBTYPE,IBRESULT,DFN,IBFNAM,IBVAL,IBHOLD,IBXHOLD) ; called from routine SUB^IBCMBMI
"RTN","IBCNBCD6",9,0)
 ; Move patient data(file #2) <or> income person data(408.13) into existing Patient Policy (file 2.312)
"RTN","IBCNBCD6",10,0)
 ;
"RTN","IBCNBCD6",11,0)
 N IBX,IBSET,IBXFILE,BUFARR,EXTARR,IBFLDS,IBLBLS,IBADDS,IBDRB,IBDRX,IBERR,IBCHNG,IBCHNGN,IBBFDA
"RTN","IBCNBCD6",12,0)
 S IBBFDA=IBBUFDA_","
"RTN","IBCNBCD6",13,0)
 S IBEXTDA=$G(IBEXTDA)_","_DFN_","
"RTN","IBCNBCD6",14,0)
 ;
"RTN","IBCNBCD6",15,0)
 I IBSEL=18 D
"RTN","IBCNBCD6",16,0)
 . I IBFNAM="DPT" S IBSET="DPT" D SELF(IBSET,IBBFDA,IBRIEN,IBEXTDA,IBTYPE,.BUFARR,.EXTARR,.IBCHNG,.IBCHNGN,.IBFLDS,.IBLBLS,.IBADDS,.IBRESULT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD6",17,0)
 ;
"RTN","IBCNBCD6",18,0)
 ; -- if user selected "spouse" use income person file(#408.13) to get specific data/fields
"RTN","IBCNBCD6",19,0)
 I IBSEL=1 D
"RTN","IBCNBCD6",20,0)
 . I IBFNAM="DGPR" S IBSET="DGPR" D SPOUSE(IBSET,IBBFDA,IBRIEN,IBEXTDA,IBTYPE,.BUFARR,.EXTARR,.IBCHNG,.IBCHNGN,.IBFLDS,.IBLBLS,.IBADDS,.IBRESULT,.IBHOLD,.IBXHOLD) Q
"RTN","IBCNBCD6",21,0)
 . I IBFNAM']"" S IBSET="N" D NSPOUSE(IBSET,IBBFDA,IBRIEN,IBEXTDA,IBTYPE,.BUFARR,.EXTARR,.IBCHNG,.IBCHNGN,.IBFLDS,.IBLBLS,.IBADDS,.IBRESULT,.IBHOLD,.IBXHOLD)
"RTN","IBCNBCD6",22,0)
 ;
"RTN","IBCNBCD6",23,0)
 ; -- update policy fields with nulls
"RTN","IBCNBCD6",24,0)
 I $D(IBCHNGN)>9 D FILE^DIE("E","IBCHNGN","IBERR") I $D(IBERR) W !,"Error... SUB-IBCNBCD6  Could not file fields with nulls" K DIR D PAUSE^VALM1 Q
"RTN","IBCNBCD6",25,0)
 ; -- update policy fields with data
"RTN","IBCNBCD6",26,0)
 I $D(IBCHNG)>9 D FILE^DIE("E","IBCHNG","IBERR") I $D(IBERR)>0 W !,"Error... SUB-IBCNBCD6  Could not file fields with data" K DIR D PAUSE^VALM1 Q
"RTN","IBCNBCD6",27,0)
 ;
"RTN","IBCNBCD6",28,0)
 ; -- update policy fields with user information
"RTN","IBCNBCD6",29,0)
 D STUFF("POL",IBEXTDA,.IBRESULT)
"RTN","IBCNBCD6",30,0)
 ; -- update policy with verified-by information
"RTN","IBCNBCD6",31,0)
 D POLOTH(IBBFDA,IBEXTDA,.IBRESULT)
"RTN","IBCNBCD6",32,0)
 Q
"RTN","IBCNBCD6",33,0)
 ;
"RTN","IBCNBCD6",34,0)
SELF(IBSET,IBBUFDA,IBRIEN,IBEXTDA,IBTYPE,BUFARR,EXTARR,IBCHNG,IBCHNGN,IBFLDS,IBLBLS,IBADDS,IBRESULT,IBHOLD,IBXHOLD) ; get data for "self" relationship
"RTN","IBCNBCD6",35,0)
 N IBX,IB1,IB2,IBXARY,IBFARY,IBDRB,IBDRX,IBBUFVAL,IBEXTFLD,IBEXTVAL,IBXFILE
"RTN","IBCNBCD6",36,0)
 ;
"RTN","IBCNBCD6",37,0)
 ; -- get corresponding fields to populate data
"RTN","IBCNBCD6",38,0)
 D FIELDS(IBSET_"FLD",.IBFLDS,.IBLBLS,.IBADDS)
"RTN","IBCNBCD6",39,0)
 S IBX=$P($T(@(IBSET_"DR")+1),";;",2),IBXFILE=+$P(IBX,U,1),IBDRB=$P(IBX,U,2),IBDRX=$P(IBX,U,3)
"RTN","IBCNBCD6",40,0)
 ;
"RTN","IBCNBCD6",41,0)
 I +$G(IBTYPE) F IBX=1:1:$L(IBDRB,";") D
"RTN","IBCNBCD6",42,0)
 . ;
"RTN","IBCNBCD6",43,0)
 . S IB1=$P(IBDRB,";",IBX),IB2=$P(IBDRX,";",IBX)
"RTN","IBCNBCD6",44,0)
 . ;
"RTN","IBCNBCD6",45,0)
 . S IBBUFVAL=$G(@IBHOLD@(2,IB1)),IBEXTVAL=$G(@IBXHOLD@(2,IB2))
"RTN","IBCNBCD6",46,0)
 . ;
"RTN","IBCNBCD6",47,0)
 . I IBBUFVAL=IBEXTVAL Q
"RTN","IBCNBCD6",48,0)
 . I IBTYPE=1,IBEXTVAL'="" Q
"RTN","IBCNBCD6",49,0)
 . I IBTYPE=2,IBBUFVAL="" Q
"RTN","IBCNBCD6",50,0)
 . I IBTYPE=4,'$D(^TMP($J,"IB BUFFER SELECTED",IB1)) Q
"RTN","IBCNBCD6",51,0)
 . ;
"RTN","IBCNBCD6",52,0)
 . ;
"RTN","IBCNBCD6",53,0)
 . S IBCHNG(IBXFILE,IBEXTDA,IB2)=IBBUFVAL
"RTN","IBCNBCD6",54,0)
 . ;
"RTN","IBCNBCD6",55,0)
 . ; -- for ACCEPAPI^IBCNICB do not delete the .01 field. This prevents a Data Dictionary Deletion Write message
"RTN","IBCNBCD6",56,0)
 . Q:IB2=".01"!(IB2="4.03")!(IB2="6")!(IB2="7.01")
"RTN","IBCNBCD6",57,0)
 . ;
"RTN","IBCNBCD6",58,0)
 . S IBCHNGN(IBXFILE,IBEXTDA,IB2)=""
"RTN","IBCNBCD6",59,0)
 Q
"RTN","IBCNBCD6",60,0)
 ;
"RTN","IBCNBCD6",61,0)
SPOUSE(IBSET,IBBUFDA,IBRIEN,IBEXTDA,IBTYPE,BUFARR,EXTARR,IBCHNG,IBCHNGN,IBFLDS,IBLBLS,IBADDS,IBRESULT,IBHOLD,IBXHOLD) ; get data for "spouse" relationship
"RTN","IBCNBCD6",62,0)
 N IBX,IBXARY,IBFARY,IBDRB,IBDRX,IBBUFVAL,IBEXTFLD,IBEXTVAL,IBXFILE
"RTN","IBCNBCD6",63,0)
 ;
"RTN","IBCNBCD6",64,0)
 ; -- get corresponding fields to populate data
"RTN","IBCNBCD6",65,0)
 D FIELDS(IBSET_"FLD",.IBFLDS,.IBLBLS,.IBADDS)
"RTN","IBCNBCD6",66,0)
 S IBX=$P($T(@(IBSET_"DR")+1),";;",2),IBXFILE=+$P(IBX,U,1),IBDRB=$P(IBX,U,2),IBDRX=$P(IBX,U,3)
"RTN","IBCNBCD6",67,0)
 ;
"RTN","IBCNBCD6",68,0)
 I +$G(IBTYPE) F IBX=1:1:$L(IBDRB,";") D
"RTN","IBCNBCD6",69,0)
 . ;
"RTN","IBCNBCD6",70,0)
 . S IB1=$P(IBDRB,";",IBX),IB2=$P(IBDRX,";",IBX)
"RTN","IBCNBCD6",71,0)
 . ;
"RTN","IBCNBCD6",72,0)
 . S IBBUFVAL=$G(@IBHOLD@(2,IB1)),IBEXTVAL=$G(@IBXHOLD@(2,IB2))
"RTN","IBCNBCD6",73,0)
 . ;
"RTN","IBCNBCD6",74,0)
 . I IBBUFVAL=IBEXTVAL Q
"RTN","IBCNBCD6",75,0)
 . I IBTYPE=1,IBEXTVAL'="" Q
"RTN","IBCNBCD6",76,0)
 . I IBTYPE=2,IBBUFVAL="" Q
"RTN","IBCNBCD6",77,0)
 . I IBTYPE=4,'$D(^TMP($J,"IB BUFFER SELECTED",IB1)) Q
"RTN","IBCNBCD6",78,0)
 . ;
"RTN","IBCNBCD6",79,0)
 . S IBCHNG(IBXFILE,IBEXTDA,IB2)=IBBUFVAL
"RTN","IBCNBCD6",80,0)
 . ;
"RTN","IBCNBCD6",81,0)
 . ; -- for ACCEPAPI^IBCNICB do not delete the .01 field. This prevents a Data Dictionary Deletion Write message
"RTN","IBCNBCD6",82,0)
 . Q:IB2=".01"!(IB2="4.03")!(IB2="6")!(IB2="7.01")
"RTN","IBCNBCD6",83,0)
 . ;
"RTN","IBCNBCD6",84,0)
 . S IBCHNGN(IBXFILE,IBEXTDA,IB2)=""
"RTN","IBCNBCD6",85,0)
 Q
"RTN","IBCNBCD6",86,0)
 ;
"RTN","IBCNBCD6",87,0)
NSPOUSE(IBSET,IBBFDA,IBRIEN,IBEXTDA,IBTYPE,BUFARR,EXTARR,IBCHNG,IBCHNGN,IBFLDS,IBLBLS,IBADDS,IBRESULT,IBHOLD,IBXHOLD) ; no spuse data
"RTN","IBCNBCD6",88,0)
 N IBX,IBXARY,IBFARY,IBDRB,IBDRX,IBBUFVAL,IBEXTFLD,IBEXTVAL,IBXFILE
"RTN","IBCNBCD6",89,0)
 ;
"RTN","IBCNBCD6",90,0)
 ; -- left side of screen get data from income person(#408.13) fields
"RTN","IBCNBCD6",91,0)
 D FIELDS(IBSET_"FLD",.IBFLDS,.IBLBLS,.IBADDS)
"RTN","IBCNBCD6",92,0)
 S IBX=$P($T(@(IBSET_"DR")+1),";;",2),IBXFILE=+$P(IBX,U,1),IBDRB=$P(IBX,U,2),IBDRX=$P(IBX,U,3)
"RTN","IBCNBCD6",93,0)
 ;
"RTN","IBCNBCD6",94,0)
 I +$G(IBTYPE) F IBX=1:1:$L(IBDRB,";") D
"RTN","IBCNBCD6",95,0)
 . ;
"RTN","IBCNBCD6",96,0)
 . S IB1=$P(IBDRB,";",IBX),IB2=$P(IBDRX,";",IBX)
"RTN","IBCNBCD6",97,0)
 . ;
"RTN","IBCNBCD6",98,0)
 . S IBBUFVAL=$G(@IBHOLD@(2,IB1)),IBEXTVAL=$G(@IBXHOLD@(2,IB2))
"RTN","IBCNBCD6",99,0)
 . ;
"RTN","IBCNBCD6",100,0)
 . I IBBUFVAL=IBEXTVAL Q
"RTN","IBCNBCD6",101,0)
 . I IBTYPE=1,IBEXTVAL'="" Q
"RTN","IBCNBCD6",102,0)
 . I IBTYPE=2,IBBUFVAL="" Q
"RTN","IBCNBCD6",103,0)
 . I IBTYPE=4,'$D(^TMP($J,"IB BUFFER SELECTED",IB1)) Q
"RTN","IBCNBCD6",104,0)
 . ;
"RTN","IBCNBCD6",105,0)
 . S IBCHNG(IBXFILE,IBEXTDA,IB2)=IBBUFVAL
"RTN","IBCNBCD6",106,0)
 . ;
"RTN","IBCNBCD6",107,0)
 . ; -- for ACCEPAPI^IBCNICB do not delete the .01 field. This prevents a Data Dictionary Deletion Write message
"RTN","IBCNBCD6",108,0)
 . Q:IB2=".01"!(IB2="4.03")!(IB2="6")!(IB2="7.01")
"RTN","IBCNBCD6",109,0)
 . ;
"RTN","IBCNBCD6",110,0)
 . S IBCHNGN(IBXFILE,IBEXTDA,IB2)=""
"RTN","IBCNBCD6",111,0)
 Q
"RTN","IBCNBCD6",112,0)
 ;
"RTN","IBCNBCD6",113,0)
STUFF(IBSET,IBEXTDA,IBRESULT) ; update fields in insurance files that 
"RTN","IBCNBCD6",114,0)
 N IBX,IBFLDS,IBLBLS,IBADDS,EXTFILE,IBEXTFLD,IBEXTVAL,IBFDA,IBFDAX,IBERR
"RTN","IBCNBCD6",115,0)
 ;
"RTN","IBCNBCD6",116,0)
 D FIELDS(IBSET_"A",.IBFLDS,.IBLBLS,.IBADDS)
"RTN","IBCNBCD6",117,0)
 S IBX=$P($T(@(IBSET_"DR")+1),";;",2),EXTFILE=+$P(IBX,U,1)
"RTN","IBCNBCD6",118,0)
 ;
"RTN","IBCNBCD6",119,0)
 S IBEXTFLD=0 F  S IBEXTFLD=$O(IBFLDS(IBEXTFLD)) Q:'IBEXTFLD  D
"RTN","IBCNBCD6",120,0)
 . S IBEXTVAL=IBFLDS(IBEXTFLD) I IBEXTVAL="DUZ" S IBEXTVAL="`"_DUZ
"RTN","IBCNBCD6",121,0)
 . S IBFDA(EXTFILE,IBEXTDA,IBEXTFLD)=IBEXTVAL
"RTN","IBCNBCD6",122,0)
 . S IBFDAX(EXTFILE,IBEXTDA,IBEXTFLD)=""
"RTN","IBCNBCD6",123,0)
 ;
"RTN","IBCNBCD6",124,0)
 ; -- update fields with nulls (external values)
"RTN","IBCNBCD6",125,0)
 D FILE^DIE("E","IBFDAX","IBERR") I $D(IBERR)>0 D EHANDLE(IBSET,.IBERR,.IBRESULT)
"RTN","IBCNBCD6",126,0)
 ; -- update fields with data (external values)
"RTN","IBCNBCD6",127,0)
 D FILE^DIE("E","IBFDA","IBERR") I $D(IBERR)>0 D EHANDLE(IBSET,.IBERR,.IBRESULT)
"RTN","IBCNBCD6",128,0)
 Q
"RTN","IBCNBCD6",129,0)
 ;
"RTN","IBCNBCD6",130,0)
POLOTH(IBBUFDA,IBEXTDA,IBRESULT) ; other special cases that can not be transferred using the generic code above, usually because of dependencies
"RTN","IBCNBCD6",131,0)
 N IB0,IBFDA,IBFDAX,IBERR
"RTN","IBCNBCD6",132,0)
 S IB0=$G(^IBA(355.33,+IBBUFDA,0))
"RTN","IBCNBCD6",133,0)
 ;
"RTN","IBCNBCD6",134,0)
 ;  -- if buffer entry was verified before the accept step, then add the correct verifier info to the policy
"RTN","IBCNBCD6",135,0)
 I +$P(IB0,U,10) D
"RTN","IBCNBCD6",136,0)
 . S IBFDA(2.312,IBEXTDA,1.03)=$E($P(IB0,U,10),1,12),IBFDAX(2.312,IBEXTDA,1.03)=""
"RTN","IBCNBCD6",137,0)
 . S IBFDA(2.312,IBEXTDA,1.04)=$P(IB0,U,11),IBFDAX(2.312,IBEXTDA,1.04)=""
"RTN","IBCNBCD6",138,0)
 ;
"RTN","IBCNBCD6",139,0)
 ; -- update fields with nulls (internally)
"RTN","IBCNBCD6",140,0)
 I $D(IBFDAX)>9 D FILE^DIE("","IBFDAX","IBERR") I $D(IBERR)>0 D EHANDLE("POL",.IBERR,.IBRESULT)
"RTN","IBCNBCD6",141,0)
 ; -- update fields data (internally)
"RTN","IBCNBCD6",142,0)
 I $D(IBFDA)>9 D FILE^DIE("","IBFDA","IBERR") I $D(IBERR)>0 D EHANDLE("POL",.IBERR,.IBRESULT)
"RTN","IBCNBCD6",143,0)
 Q
"RTN","IBCNBCD6",144,0)
 ;
"RTN","IBCNBCD6",145,0)
FIELDS(IBSET,IBFLDS,IBLBLS,IBADDS) ; return array of corresponding fields: IBFLDS(Buffer #)=Ins #
"RTN","IBCNBCD6",146,0)
 N IBI,IBLN,IBB,IBE,IBG
"RTN","IBCNBCD6",147,0)
 ;
"RTN","IBCNBCD6",148,0)
 F IBI=1:1 S IBLN=$P($T(@(IBSET)+IBI),";;",2) Q:IBLN=""  I $E(IBLN,1)'=" " D
"RTN","IBCNBCD6",149,0)
 . S IBB=$P(IBLN,U,1),IBE=$P(IBLN,U,2),IBG=$P(IBLN,U,4)
"RTN","IBCNBCD6",150,0)
 . I IBB'="",IBE'="" D
"RTN","IBCNBCD6",151,0)
 . . S IBFLDS(IBB)=IBE
"RTN","IBCNBCD6",152,0)
 . . I IBSET["FLD" S IBLBLS(IBB)=$P(IBLN,U,3) I +IBG S IBADDS(IBB)=IBE
"RTN","IBCNBCD6",153,0)
 Q
"RTN","IBCNBCD6",154,0)
 ;
"RTN","IBCNBCD6",155,0)
EHANDLE(IBSET,FMERR,IBRESULT) ;
"RTN","IBCNBCD6",156,0)
 ;Fileman Error Processing tracking added for ACCEPAPI^IBCNICB API.
"RTN","IBCNBCD6",157,0)
 ; INPUT:
"RTN","IBCNBCD6",158,0)
 ;   IBSET - File where fileman error occurred
"RTN","IBCNBCD6",159,0)
 ;      Value = "INS" --> File 36    --> IBRESULT(1)
"RTN","IBCNBCD6",160,0)
 ;      Value = "GRP" --> File 355.3 --> IBRESULT(2)
"RTN","IBCNBCD6",161,0)
 ;      Value = "POL" --> File 2.312 --> IBRESULT(3)
"RTN","IBCNBCD6",162,0)
 ;   FMERR  - Array that is returned by FM with error messages
"RTN","IBCNBCD6",163,0)
 ; OUTPUT:
"RTN","IBCNBCD6",164,0)
 ;   IBRESULT - Passed array to return FM error message if there are
"RTN","IBCNBCD6",165,0)
 ;            errors when filing the data buffer data
"RTN","IBCNBCD6",166,0)
 ;
"RTN","IBCNBCD6",167,0)
 I $G(IBSET)']""!($D(FMERR)'>0) Q
"RTN","IBCNBCD6",168,0)
 N SUB1,RNUM,ERRNUM,LINENUM
"RTN","IBCNBCD6",169,0)
 ;
"RTN","IBCNBCD6",170,0)
 ; -- numeric 1st subscript of IBRESULT array based on file being updated. File 36 = 1, 355.3 = 2, 2.312 = 3 
"RTN","IBCNBCD6",171,0)
 S SUB1=$S(IBSET="INS":1,IBSET="GRP":2,IBSET="POL":3,1:"") Q:SUB1']""
"RTN","IBCNBCD6",172,0)
 ;
"RTN","IBCNBCD6",173,0)
 S RNUM=$O(IBRESULT(SUB1,"ERR",9999999999),-1),ERRNUM=0
"RTN","IBCNBCD6",174,0)
 F  S ERRNUM=$O(FMERR("DIERR",ERRNUM)) Q:+ERRNUM'>0  D
"RTN","IBCNBCD6",175,0)
 . S LINENUM=0
"RTN","IBCNBCD6",176,0)
 . F  S LINENUM=$O(FMERR("DIERR",ERRNUM,"TEXT",LINENUM)) Q:+LINENUM'>0  D
"RTN","IBCNBCD6",177,0)
 . . S RNUM=RNUM+1
"RTN","IBCNBCD6",178,0)
 . . S IBRESULT(SUB1,"ERR",RNUM)=FMERR("DIERR",ERRNUM,"TEXT",LINENUM)
"RTN","IBCNBCD6",179,0)
 Q
"RTN","IBCNBCD6",180,0)
 ;
"RTN","IBCNBCD6",181,0)
REMOVDEL(FMERR) ;
"RTN","IBCNBCD6",182,0)
 ; Removed field delete errors. SET and STUFF API delete data first and
"RTN","IBCNBCD6",183,0)
 ; then update with new data from Insurance Buffer file. Error Code 712
"RTN","IBCNBCD6",184,0)
 ; "Deletion was attempted but not allowed" errors will be removed from
"RTN","IBCNBCD6",185,0)
 ; the returned FM error array
"RTN","IBCNBCD6",186,0)
 ; 
"RTN","IBCNBCD6",187,0)
 ; INPUT/OUTPUT:
"RTN","IBCNBCD6",188,0)
 ;   FMERR  - Array that is returned by FM with error messages
"RTN","IBCNBCD6",189,0)
 ;
"RTN","IBCNBCD6",190,0)
 Q:$D(FMERR)'>0
"RTN","IBCNBCD6",191,0)
 N ERRNUM
"RTN","IBCNBCD6",192,0)
 S ERRNUM=0
"RTN","IBCNBCD6",193,0)
 F  S ERRNUM=$O(FMERR("DIERR",ERRNUM)) Q:+ERRNUM'>0  D
"RTN","IBCNBCD6",194,0)
 . I FMERR("DIERR",ERRNUM)=712 K FMERR("DIERR",ERRNUM)
"RTN","IBCNBCD6",195,0)
 Q
"RTN","IBCNBCD6",196,0)
 ;
"RTN","IBCNBCD6",197,0)
DPTDR ; -- insurance type subfile(#2.312) ^ insurance verificaiton processor(#355.33) fields ^ insurance type subfile(#2.312) fields
"RTN","IBCNBCD6",198,0)
 ;;2.312^90.03;60.05;60.14;60.15;60.16;91.01;.03;.09;.02;60.1;60.11;60.12;62.01;.111;.112;.114;.115;.116;.1173;.131^7.02;6;4.03;4.05;4.06;7.01;3.01;3.05;3.12;4.01;4.02;.2;5.01;3.06;3.07;3.08;3.09;3.1;3.13;3.11
"RTN","IBCNBCD6",199,0)
 ;
"RTN","IBCNBCD6",200,0)
DPTFLD ; -- insurance verification processor(#355.33) field ^ insurance type subfile(#2.312)
"RTN","IBCNBCD6",201,0)
 ;;90.03^7.02^Subscriber Id^          ; Subscriber Id
"RTN","IBCNBCD6",202,0)
 ;;60.05^6^Whose Insurance^           ; Whose Insurance
"RTN","IBCNBCD6",203,0)
 ;;60.14^4.03^Relationship^             ; Pt. Relationship to Insured
"RTN","IBCNBCD6",204,0)
 ;;60.15^4.05^Rx Relationship^        ; Pharmacy Relationship Code
"RTN","IBCNBCD6",205,0)
 ;;60.16^4.06^Rx Person Code^         ; Pharmacy Person Code
"RTN","IBCNBCD6",206,0)
 ;;91.01^7.01^Subscriber Name^        ; Name of Insured
"RTN","IBCNBCD6",207,0)
 ;;.03^3.01^Subscriber's DOB^         ; Insured's DOB
"RTN","IBCNBCD6",208,0)
 ;;.09^3.05^Subscriber's SSN^         ; Insured's SSN
"RTN","IBCNBCD6",209,0)
 ;;.02^3.12^Subscriber's Sex^         ; Insured's Sex
"RTN","IBCNBCD6",210,0)
 ;;60.1^4.01^Primary Provider^        ; Primary Care Provider
"RTN","IBCNBCD6",211,0)
 ;;60.11^4.02^Provider Phone^         ; Primary Care Provider Phone
"RTN","IBCNBCD6",212,0)
 ;;60.12^.2^Coor of Benefits^         ; Coordination of Benefits
"RTN","IBCNBCD6",213,0)
 ;;62.01^5.01^Patient Id^             ; Patient Id
"RTN","IBCNBCD6",214,0)
 ;;.111^3.06^Subscr Str Ln 1^         ; Subscriber Address Line 1
"RTN","IBCNBCD6",215,0)
 ;;.112^3.07^Subscr Str Ln 2^         ; Subscriber Address Line 2
"RTN","IBCNBCD6",216,0)
 ;;.114^3.08^Subscr City^             ; Subscriber City
"RTN","IBCNBCD6",217,0)
 ;;.115^3.09^Subscr State^            ; Subscriber State
"RTN","IBCNBCD6",218,0)
 ;;.116^3.1^Subscr Zip^               ; Subscriber Zip Code
"RTN","IBCNBCD6",219,0)
 ;;.1173^3.13^Subscr Country^         ; Subscriber Country Code
"RTN","IBCNBCD6",220,0)
 ;;.131^3.11^Subscr Phone^            ; Subscriber Phone Number
"RTN","IBCNBCD6",221,0)
 ;
"RTN","IBCNBCD6",222,0)
DGPRDR ; -- insurance type subfile(#2.312) ^ insurance verificaiton processor(#355.33) fields ^ insurance type subfile(#2.312) fields
"RTN","IBCNBCD6",223,0)
 ;;2.312^90.03;60.05;60.14;60.15;60.16;.01;.03;.09;.02;60.1;60.11;60.12;62.01;1.2;1.3;1.5;1.6;1.7;1.99;1.8^7.02;6;4.03;4.05;4.06;7.01;3.01;3.05;3.12;4.01;4.02;.2;5.01;3.06;3.07;3.08;3.09;3.1;3.13;3.11
"RTN","IBCNBCD6",224,0)
 ;
"RTN","IBCNBCD6",225,0)
DGPRFLD ; -- insurance verification processor(#355.33) field ^ insurance type subfile(#2.312)
"RTN","IBCNBCD6",226,0)
 ;;90.03^7.02^Subscriber Id^          ; Subscriber Id
"RTN","IBCNBCD6",227,0)
 ;;60.05^6^Whose Insurance^           ; Whose Insurance
"RTN","IBCNBCD6",228,0)
 ;;60.14^4.03^Relationship^             ; Pt. Relationship to Insured
"RTN","IBCNBCD6",229,0)
 ;;60.15^4.05^Rx Relationship^        ; Pharmacy Relationship Code
"RTN","IBCNBCD6",230,0)
 ;;60.16^4.06^Rx Person Code^         ; Pharmacy Person Code
"RTN","IBCNBCD6",231,0)
 ;;.01^7.01^Subscriber Name^          ; Name of Insured
"RTN","IBCNBCD6",232,0)
 ;;.03^3.01^Subscriber's DOB^         ; Insured's DOB
"RTN","IBCNBCD6",233,0)
 ;;.09^3.05^Subscriber's SSN^         ; Insured's SSN
"RTN","IBCNBCD6",234,0)
 ;;.02^3.12^Subscriber's Sex^         ; Insured's Sex
"RTN","IBCNBCD6",235,0)
 ;;60.1^4.01^Primary Provider^        ; Primary Care Provider
"RTN","IBCNBCD6",236,0)
 ;;60.11^4.02^Provider Phone^         ; Primary Care Provider Phone
"RTN","IBCNBCD6",237,0)
 ;;60.12^.2^Coor of Benefits^         ; Coordination of Benefits
"RTN","IBCNBCD6",238,0)
 ;;62.01^5.01^Patient Id^             ; Patient Id
"RTN","IBCNBCD6",239,0)
 ;;1.2^3.06^Subscr Str Ln 1^          ; Subscriber Address Line 1
"RTN","IBCNBCD6",240,0)
 ;;1.3^3.07^Subscr Str Ln 2^          ; Subscriber Address Line 2
"RTN","IBCNBCD6",241,0)
 ;;1.5^3.08^Subscr City^              ; Subscriber City
"RTN","IBCNBCD6",242,0)
 ;;1.6^3.09^Subscr State^             ; Subscriber State
"RTN","IBCNBCD6",243,0)
 ;;1.7^3.1^Subscr Zip^                ; Subscriber Zip Code
"RTN","IBCNBCD6",244,0)
 ;;1.99^3.13^Subscr Country^          ; Subscriber Country Code
"RTN","IBCNBCD6",245,0)
 ;;1.8^3.11^Subscr Phone^             ; Subscriber Phone Number
"RTN","IBCNBCD6",246,0)
 ;
"RTN","IBCNBCD6",247,0)
NDR ; -- insurance type subfile(#2.312) ^ insurance verificaiton processor(#355.33) fields ^ insurance type subfile(#2.312) fields
"RTN","IBCNBCD6",248,0)
 ;;2.312^90.03;60.05;60.14;60.15;60.16;.01;.03;.09;.02;60.1;60.11;60.12;62.01;1.2;1.3;1.5;1.6;1.7;1.99;1.8^7.02;6;4.03;4.05;4.06;7.01;3.01;3.05;3.12;4.01;4.02;.2;5.01;3.06;3.07;3.08;3.09;3.1;3.13;3.11
"RTN","IBCNBCD6",249,0)
 ;
"RTN","IBCNBCD6",250,0)
NFLD ; -- insurance verification processor(#355.33) field ^ insurance type subfile(#2.312)
"RTN","IBCNBCD6",251,0)
 ;;90.03^7.02^Subscriber Id^          ; Subscriber Id
"RTN","IBCNBCD6",252,0)
 ;;60.05^6^Whose Insurance^           ; Whose Insurance
"RTN","IBCNBCD6",253,0)
 ;;60.14^4.03^Relationship^             ; Pt. Relationship to Insured
"RTN","IBCNBCD6",254,0)
 ;;60.15^4.05^Rx Relationship^        ; Pharmacy Relationship Code
"RTN","IBCNBCD6",255,0)
 ;;60.16^4.06^Rx Person Code^         ; Pharmacy Person Code
"RTN","IBCNBCD6",256,0)
 ;;.01^7.01^Subscriber Name^          ; Name of Insured
"RTN","IBCNBCD6",257,0)
 ;;.03^3.01^Subscriber's DOB^         ; Insured's DOB
"RTN","IBCNBCD6",258,0)
 ;;.09^3.05^Subscriber's SSN^         ; Insured's SSN
"RTN","IBCNBCD6",259,0)
 ;;.02^3.12^Subscriber's Sex^         ; Insured's Sex
"RTN","IBCNBCD6",260,0)
 ;;60.1^4.01^Primary Provider^        ; Primary Care Provider
"RTN","IBCNBCD6",261,0)
 ;;60.11^4.02^Provider Phone^         ; Primary Care Provider Phone
"RTN","IBCNBCD6",262,0)
 ;;60.12^.2^Coor of Benefits^         ; Coordination of Benefits
"RTN","IBCNBCD6",263,0)
 ;;62.01^5.01^Patient Id^             ; Patient Id
"RTN","IBCNBCD6",264,0)
 ;;1.2^3.06^Subscr Str Ln 1^          ; Subscriber Address Line 1
"RTN","IBCNBCD6",265,0)
 ;;1.3^3.07^Subscr Str Ln 2^          ; Subscriber Address Line 2
"RTN","IBCNBCD6",266,0)
 ;;1.5^3.08^Subscr City^              ; Subscriber City
"RTN","IBCNBCD6",267,0)
 ;;1.6^3.09^Subscr State^             ; Subscriber State
"RTN","IBCNBCD6",268,0)
 ;;1.7^3.1^Subscr Zip^                ; Subscriber Zip Code
"RTN","IBCNBCD6",269,0)
 ;;1.99^3.13^Subscr Country^          ; Subscriber Country Code
"RTN","IBCNBCD6",270,0)
 ;;1.8^3.11^Subscr Phone^             ; Subscriber Phone Number
"RTN","IBCNBCD6",271,0)
 ;
"RTN","IBCNBCD6",272,0)
POLDR ;
"RTN","IBCNBCD6",273,0)
 ;;2.312
"RTN","IBCNBCD6",274,0)
POLA ; auto set fields
"RTN","IBCNBCD6",275,0)
 ;;1.03^NOW^                          ; Date Last Verified (default is person that accepts entry)
"RTN","IBCNBCD6",276,0)
 ;;1.04^DUZ^                          ; Verified By        (default is person that accepts entry)
"RTN","IBCNBCD6",277,0)
 ;;1.05^NOW^                          ; Date Last Edited
"RTN","IBCNBCD6",278,0)
 ;;1.06^DUZ^                          ; Last Edited By
"RTN","IBCNBCD6",279,0)
 ;
"RTN","IBCNBCD7")
0^139^B7325705
"RTN","IBCNBCD7",1,0)
IBCNBCD7 ;ALB/AWC - MCCF FY14 Subscriber Display Screens ;25 Feb 2015
"RTN","IBCNBCD7",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNBCD7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBCD7",4,0)
 ;
"RTN","IBCNBCD7",5,0)
 ;Input Parameters:
"RTN","IBCNBCD7",6,0)
 ;  See routine IBCNBCD1
"RTN","IBCNBCD7",7,0)
 ;
"RTN","IBCNBCD7",8,0)
SUB(SKPBLANK,IBFNAM,IBHOLD,IBXHOLD) ; called from SUB^IBCNBAC
"RTN","IBCNBCD7",9,0)
 S SKPBLANK=$G(SKPBLANK)
"RTN","IBCNBCD7",10,0)
 ;
"RTN","IBCNBCD7",11,0)
 W @IOF
"RTN","IBCNBCD7",12,0)
 W ! D WRTFLD^IBCNBAC(" Subscriber Data:  Patient Registration            Patient Insurance Policy   ",0,80,"BU")
"RTN","IBCNBCD7",13,0)
 ;
"RTN","IBCNBCD7",14,0)
 I $G(IBFNAM)="DPT" S IBSET="DPT" D SBFLDS(IBSET,SKPBLANK,.IBHOLD,.IBXHOLD) Q
"RTN","IBCNBCD7",15,0)
 I $G(IBFNAM)="DGPR" S IBSET="DGPR" D SBFLDS(IBSET,SKPBLANK,.IBHOLD,.IBXHOLD) Q
"RTN","IBCNBCD7",16,0)
 I $G(IBFNAM)="" S IBSET="N" D SBFLDS(IBSET,SKPBLANK,.IBHOLD,.IBXHOLD) Q
"RTN","IBCNBCD7",17,0)
 Q
"RTN","IBCNBCD7",18,0)
 ;
"RTN","IBCNBCD7",19,0)
SBFLDS(IBSET,SKPBLANK,IBHOLD,IBXHOLD) ; accept each field and set into temp array
"RTN","IBCNBCD7",20,0)
 N IBX,IB1,IB2,IBSEL,IBDF,IBDRB,IBDRX,IBBUFVAL,IBEXTVAL,CHGCHK,IBFLDS,IBLBLS,IBADDS,IBLABEL,IBUSER
"RTN","IBCNBCD7",21,0)
 S CHGCHK=0
"RTN","IBCNBCD7",22,0)
 ;
"RTN","IBCNBCD7",23,0)
 S IBSEL=$NA(^TMP($J,"IB BUFFER SELECTED"))
"RTN","IBCNBCD7",24,0)
 K @IBSEL
"RTN","IBCNBCD7",25,0)
 ;
"RTN","IBCNBCD7",26,0)
 ; -- get corresponding fields from routine IBCNBCD6 to populate data
"RTN","IBCNBCD7",27,0)
 D FIELDS^IBCNBCD6(IBSET_"FLD",.IBFLDS,.IBLBLS,.IBADDS)
"RTN","IBCNBCD7",28,0)
 S IBDF=$P($T(@(IBSET_"DR")+1^IBCNBCD6),";;",2),IBDRB=$P(IBDF,U,2),IBDRX=$P(IBDF,U,3)
"RTN","IBCNBCD7",29,0)
 ;
"RTN","IBCNBCD7",30,0)
 ;
"RTN","IBCNBCD7",31,0)
 F IBX=1:1:$L(IBDRB,";") I '$D(IBADDS(IBX)) D  Q:$G(IBUSER)<0
"RTN","IBCNBCD7",32,0)
 . ;
"RTN","IBCNBCD7",33,0)
 . S IB1=$P(IBDRB,";",IBX),IB2=$P(IBDRX,";",IBX)
"RTN","IBCNBCD7",34,0)
 . ;
"RTN","IBCNBCD7",35,0)
 . S IBBUFVAL=$G(@IBHOLD@(2,IB1)),IBEXTVAL=$G(@IBXHOLD@(2,IB2)),IBLABEL=$G(IBLBLS(IB1))_":"
"RTN","IBCNBCD7",36,0)
 . ;
"RTN","IBCNBCD7",37,0)
 . D SBDIS(IBBUFVAL,IBEXTVAL,IBLABEL,SKPBLANK)
"RTN","IBCNBCD7",38,0)
 . ;
"RTN","IBCNBCD7",39,0)
 . I IBBUFVAL=IBEXTVAL Q
"RTN","IBCNBCD7",40,0)
 . I SKPBLANK,IBBUFVAL="" Q
"RTN","IBCNBCD7",41,0)
 . ;
"RTN","IBCNBCD7",42,0)
 . S CHGCHK=1
"RTN","IBCNBCD7",43,0)
 . S IBUSER=$$ACCEPT^IBCNBAC(IBBUFVAL,IBEXTVAL) Q:IBUSER<0
"RTN","IBCNBCD7",44,0)
 . I +IBUSER S @IBSEL@(IB1)=""
"RTN","IBCNBCD7",45,0)
 ;
"RTN","IBCNBCD7",46,0)
 K DIR
"RTN","IBCNBCD7",47,0)
 D DMSG(CHGCHK),PAUSE^VALM1
"RTN","IBCNBCD7",48,0)
 Q
"RTN","IBCNBCD7",49,0)
 ;
"RTN","IBCNBCD7",50,0)
SBDIS(BFLD,IFLD,LABEL,SKPBLANK) ; write the two corresponding fields; one from buffer, one from ins files
"RTN","IBCNBCD7",51,0)
 N IBOVER,IBMERG,IBATTR
"RTN","IBCNBCD7",52,0)
 S (IBOVER,IBMERG,IBATTR)=""
"RTN","IBCNBCD7",53,0)
 ;
"RTN","IBCNBCD7",54,0)
 ; -- turn bold attributes on
"RTN","IBCNBCD7",55,0)
 I BFLD'=IFLD S (IBOVER,IBMERG,IBATTR)="B"
"RTN","IBCNBCD7",56,0)
 ;
"RTN","IBCNBCD7",57,0)
 ; -- skipping blanks, display skipped items without bold
"RTN","IBCNBCD7",58,0)
 I SKPBLANK,BFLD="" S (IBOVER,IBMERG,IBATTR)=""
"RTN","IBCNBCD7",59,0)
 ;
"RTN","IBCNBCD7",60,0)
 ; -- display a line of data to screen
"RTN","IBCNBCD7",61,0)
 D WRTLN^IBCNBAC(LABEL,BFLD,IFLD,IBOVER,IBMERG,IBATTR)
"RTN","IBCNBCD7",62,0)
 Q
"RTN","IBCNBCD7",63,0)
 ;
"RTN","IBCNBCD7",64,0)
DMSG(CHGCHK) ; Display message if there were no changes to accept
"RTN","IBCNBCD7",65,0)
 I CHGCHK=0 W !!,"There are no changes to be accepted, based on the method of update chosen." Q
"RTN","IBCNBCD7",66,0)
 I CHGCHK=1 W !!,"End of changes for SUBSCRIBER related data."
"RTN","IBCNBCD7",67,0)
 Q
"RTN","IBCNBEE")
0^7^B50211933
"RTN","IBCNBEE",1,0)
IBCNBEE ;ALB/ARH - Ins Buffer: add/edit existing entries in buffer ;1 Jun 97
"RTN","IBCNBEE",2,0)
 ;;2.0;INTEGRATED BILLING;**82,184,252,251,356,361,371,377,416,438,452,497,528**;21-MAR-94;Build 163
"RTN","IBCNBEE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBEE",4,0)
 ;
"RTN","IBCNBEE",5,0)
ADD(IBSOURCE) ; add a new buffer file entry (#355.33), sets only status (0) node data
"RTN","IBCNBEE",6,0)
 N IBARR,IBERR,IBIFN,IBX I '$G(IBSOURCE) S IBSOURCE=1
"RTN","IBCNBEE",7,0)
 ;
"RTN","IBCNBEE",8,0)
 S IBARR(355.33,"+1,",.01)="NOW",IBARR(355.33,"+1,",.03)=IBSOURCE
"RTN","IBCNBEE",9,0)
 D UPDATE^DIE("E","IBARR","IBIFN","IBERR")
"RTN","IBCNBEE",10,0)
 S IBX=+$G(IBIFN(1)) I $D(IBERR) S $P(IBX,U,2)=$G(IBERR("DIERR",1,"TEXT",1))
"RTN","IBCNBEE",11,0)
 Q IBX
"RTN","IBCNBEE",12,0)
 ;
"RTN","IBCNBEE",13,0)
STATUS(IBBUFDA,STATUS,NC,NG,NP) ; edit the status node
"RTN","IBCNBEE",14,0)
 ;
"RTN","IBCNBEE",15,0)
 N IBX,IBARR,IBIFN Q:'$G(IBBUFDA)  S IBIFN=IBBUFDA_","
"RTN","IBCNBEE",16,0)
 D CHK^DIE(355.33,.04,"",$G(STATUS),.IBX) Q:IBX="^"
"RTN","IBCNBEE",17,0)
 ;
"RTN","IBCNBEE",18,0)
 S IBARR(355.33,IBIFN,.04)=STATUS I STATUS="R" S (NC,NG,NP)=0
"RTN","IBCNBEE",19,0)
 S IBARR(355.33,IBIFN,.07)=+$G(NC),IBARR(355.33,IBIFN,.08)=+$G(NG),IBARR(355.33,IBIFN,.09)=+$G(NP)
"RTN","IBCNBEE",20,0)
 D FILE^DIE("E","IBARR")
"RTN","IBCNBEE",21,0)
 Q
"RTN","IBCNBEE",22,0)
 ;
"RTN","IBCNBEE",23,0)
INS(IBBUFDA,FLDS) ; edit the insurance company portion of a buffer file entry
"RTN","IBCNBEE",24,0)
 ;
"RTN","IBCNBEE",25,0)
 N DIC,DIE,DA,DR,X,Y,IBCNEXT1
"RTN","IBCNBEE",26,0)
 I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",27,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",28,0)
 ;
"RTN","IBCNBEE",29,0)
 ; ESG - 6/18/02 - SDD 5.1.4 - Usage of Auto Match when editing
"RTN","IBCNBEE",30,0)
 ;     - the insurance company name in the buffer.  Also added an
"RTN","IBCNBEE",31,0)
 ;     - input transform (see below) to clean up the data coming in.
"RTN","IBCNBEE",32,0)
 ;     - fetch the current buffer ins co name
"RTN","IBCNBEE",33,0)
 ;
"RTN","IBCNBEE",34,0)
 I FLDS="MR" S IBCNEXT1=$P($G(^IBA(355.33,IBBUFDA,20)),U,1)
"RTN","IBCNBEE",35,0)
 ;
"RTN","IBCNBEE",36,0)
 S DR=$P($T(@(FLDS_"INS")+1),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",37,0)
 ;
"RTN","IBCNBEE",38,0)
 I FLDS="MR" Q:$$INSNAME(IBBUFDA)<0  S DR=$P($T(@(FLDS_"INS")+1),";;",2,9999),DR=$P(DR,";",2,99999)
"RTN","IBCNBEE",39,0)
 ;
"RTN","IBCNBEE",40,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",41,0)
 Q
"RTN","IBCNBEE",42,0)
 ;
"RTN","IBCNBEE",43,0)
GRP(IBBUFDA,FLDS) ; edit the group/plan portion of the buffer file entry
"RTN","IBCNBEE",44,0)
 ;
"RTN","IBCNBEE",45,0)
 N DIC,DIE,DA,DR,X,Y I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",46,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",47,0)
 ;
"RTN","IBCNBEE",48,0)
 S DR=$P($T(@(FLDS_"GRP")+1),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",49,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",50,0)
 Q
"RTN","IBCNBEE",51,0)
 ;
"RTN","IBCNBEE",52,0)
POLICY(IBBUFDA,FLDS) ; edit the patient policy portion of the buffer file entry
"RTN","IBCNBEE",53,0)
 ;
"RTN","IBCNBEE",54,0)
 N DIC,DIE,DA,DR,X,Y,IBZZ I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",55,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",56,0)
 ;
"RTN","IBCNBEE",57,0)
 S DR=$P($T(@(FLDS_"POL")+1),";;",2,9999)_$P($T(@(FLDS_"POL")+2),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",58,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA
"RTN","IBCNBEE",59,0)
 S DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DA,DR Q:$D(Y)
"RTN","IBCNBEE",60,0)
 ;
"RTN","IBCNBEE",61,0)
 I FLDS="MR" D ESGHP(IBBUFDA)
"RTN","IBCNBEE",62,0)
 Q
"RTN","IBCNBEE",63,0)
 ;
"RTN","IBCNBEE",64,0)
ESGHP(IBBUFDA) ; sponsoring employer information
"RTN","IBCNBEE",65,0)
 N DIR,DIRUT,DUOUT,DTOUT,VAOA,VAERR,VA,DFN,IB60,IBE,IBEMPST,IBREL
"RTN","IBCNBEE",66,0)
 ;
"RTN","IBCNBEE",67,0)
 ; if insured is patient or spouse, ask if insured's current employer is the plan's sponsoring employer, if yes auto stuff it
"RTN","IBCNBEE",68,0)
 I +$G(^IBA(355.33,IBBUFDA,61)) W ! S IB60=$G(^IBA(355.33,IBBUFDA,60)) D  Q:$D(DIRUT)
"RTN","IBCNBEE",69,0)
 . ; sponsoring employer is current employer?
"RTN","IBCNBEE",70,0)
 . S DFN=+IB60,IBREL=$P(IB60,U,6),VAOA("A")=$S(IBREL="01":5,IBREL="02":6,1:"") I 'DFN!(VAOA("A")="") Q
"RTN","IBCNBEE",71,0)
 . D OAD^VADPT I $G(VAOA(9))="" Q
"RTN","IBCNBEE",72,0)
 . S DIR("?")="Enter Yes if this plan is sponsored by the "_$S(IBREL="01":"patient's",1:"spouse's")_" current employer."
"RTN","IBCNBEE",73,0)
 . S DIR("?",1)="Entering Yes will result in the "_$S(IBREL="01":"patient's",1:"spouse's")_" current employer data being",DIR("?",2)="added to the policy as the Sponsoring Employer data.",DIR("?",3)=""
"RTN","IBCNBEE",74,0)
 . S DIR("A")="Current Employer "_VAOA(9)_" Sponsors this Plan",DIR("B")="No",DIR(0)="Y" D ^DIR W ! I Y'=1 Q
"RTN","IBCNBEE",75,0)
 . ;
"RTN","IBCNBEE",76,0)
 . D DELEMP(IBBUFDA) ; delete any data already contained in these fields
"RTN","IBCNBEE",77,0)
 . ;
"RTN","IBCNBEE",78,0)
 . ; if the insured's current employer sponsors the plan then stuff that employer's address into the buffer
"RTN","IBCNBEE",79,0)
 . S IBE=$S(IBREL="01":.311,1:.25),IBEMPST=$P($G(^DPT(DFN,IBE)),U,15)
"RTN","IBCNBEE",80,0)
 . S DR="61.02///"_VAOA(9)_";61.03///"_IBEMPST_";61.06///"_$E(VAOA(1),1,30)_";61.07///"_$E(VAOA(2),1,30)
"RTN","IBCNBEE",81,0)
 . S DR=DR_";61.08///"_$E(VAOA(3),1,30)_";61.09///"_$E(VAOA(4),1,20)_";61.1////"_$P(VAOA(5),U,1)
"RTN","IBCNBEE",82,0)
 . S DR=DR_";61.11////"_$P(VAOA(11),U,1)_";61.12///"_$E(VAOA(8),1,15)
"RTN","IBCNBEE",83,0)
 . S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",84,0)
 ;
"RTN","IBCNBEE",85,0)
 ; if employer sponsored plan, edit buffer entry's sponsoring employer info
"RTN","IBCNBEE",86,0)
 I +$G(^IBA(355.33,IBBUFDA,61)) S DR="61.02:61.12",DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",87,0)
 ;
"RTN","IBCNBEE",88,0)
 ; if not employer sponsored plan, delete any existing sponsoring employer data
"RTN","IBCNBEE",89,0)
 I $D(^IBA(355.33,IBBUFDA,61)),'$G(^IBA(355.33,IBBUFDA,61)) D DELEMP(IBBUFDA)
"RTN","IBCNBEE",90,0)
 Q
"RTN","IBCNBEE",91,0)
 ;
"RTN","IBCNBEE",92,0)
ASKSAVE(NAME) ;asks the user if changes to the Patient Registration File (Subscriber data) should be saved
"RTN","IBCNBEE",93,0)
 ;returns 1 for yes, 0 for no
"RTN","IBCNBEE",94,0)
 K DIR S DIR(0)="Y",DIR("A")="Save changes to the "_NAME_" File",DIR("B")="YES"
"RTN","IBCNBEE",95,0)
 D ^DIR K DIR
"RTN","IBCNBEE",96,0)
 Q $S($D(DIRUT):0,1:Y)
"RTN","IBCNBEE",97,0)
 ;
"RTN","IBCNBEE",98,0)
DELEMP(IBBUFDA) ; delete sponsoring employer data
"RTN","IBCNBEE",99,0)
 N DIC,DIE,DA,DR,X,Y Q:'$D(^IBA(355.33,+$G(IBBUFDA),61))
"RTN","IBCNBEE",100,0)
 S DR="61.02///@;61.03///@;61.04///@;61.05///@;61.06///@;61.07///@;61.08///@;61.09///@;61.10///@;61.11///@;61.12///@"
"RTN","IBCNBEE",101,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",102,0)
 Q
"RTN","IBCNBEE",103,0)
 ;
"RTN","IBCNBEE",104,0)
INSHELP ;
"RTN","IBCNBEE",105,0)
 W !!,"------------------------ INSURANCE COMPANY INFORMATION -------------------------",!
"RTN","IBCNBEE",106,0)
 Q
"RTN","IBCNBEE",107,0)
GRPHELP ;
"RTN","IBCNBEE",108,0)
 W !!,"---------------------------- GROUP/PLAN INFORMATION ----------------------------"
"RTN","IBCNBEE",109,0)
 W !," The following data defines a specific Group or Plan provided by an Insurance "
"RTN","IBCNBEE",110,0)
 W !," Company.  This may be either a group plan with many potential members or an "
"RTN","IBCNBEE",111,0)
 W !," individual plan with a single member.",!
"RTN","IBCNBEE",112,0)
 Q
"RTN","IBCNBEE",113,0)
POLHELP ;
"RTN","IBCNBEE",114,0)
 W !!,"---------------------- POLICY AND SUBSCRIBER INFORMATION -----------------------"
"RTN","IBCNBEE",115,0)
 W !," The following data defines the subscriber specific policy information for a "
"RTN","IBCNBEE",116,0)
 W !," particular Insurance Plan.  The subscriber, the insured, and the policy holder "
"RTN","IBCNBEE",117,0)
 W !," all refer to the person who is a member of the plan and therefore holds the "
"RTN","IBCNBEE",118,0)
 W !," policy.  The patient must be covered under the plan but may not be the policy"
"RTN","IBCNBEE",119,0)
 W !," holder.",!
"RTN","IBCNBEE",120,0)
 Q
"RTN","IBCNBEE",121,0)
 ;
"RTN","IBCNBEE",122,0)
INSNAME(IBBUFDA) ;  Reset insurance company name
"RTN","IBCNBEE",123,0)
 N DR,DIE,DA,Y,X,IBX,IBNEW,IBNAME
"RTN","IBCNBEE",124,0)
 S IBX=-1
"RTN","IBCNBEE",125,0)
 S DR=20.01,DIE="^IBA(355.33,",DA=IBBUFDA
"RTN","IBCNBEE",126,0)
 D ^DIE
"RTN","IBCNBEE",127,0)
 I '$D(Y) S IBNEW=$$CHECK(IBBUFDA)
"RTN","IBCNBEE",128,0)
 I +$G(IBNEW)'<0,$G(IBNEW)'=0,$D(IBNEW) S DR=$P(DR,";",1)_"////"_IBNEW S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR I '$D(Y) S IBX=0
"RTN","IBCNBEE",129,0)
 ; BHS - 10/15/03 - If user entered a caret during $$CHECK still set
"RTN","IBCNBEE",130,0)
 ;                  return value to 0 so the user can edit the other
"RTN","IBCNBEE",131,0)
 ;                  INS fields
"RTN","IBCNBEE",132,0)
 I $G(IBNEW)=0!($G(IBNEW)=-1) S IBX=0
"RTN","IBCNBEE",133,0)
 Q IBX
"RTN","IBCNBEE",134,0)
 ;
"RTN","IBCNBEE",135,0)
CHECK(IBBUFDA) ; Select Insurance Company Name and Automatch
"RTN","IBCNBEE",136,0)
 ; Buffer file (#355.33), field# 20.01.
"RTN","IBCNBEE",137,0)
 ; ESG - 6/18/02 - SDD 5.1.4 - Usage of Auto Match when editing the
"RTN","IBCNBEE",138,0)
 ;       insurance company name.  Also, display the insurance company
"RTN","IBCNBEE",139,0)
 ;       name lookup/lister and the Auto Match lookup/lister.
"RTN","IBCNBEE",140,0)
 ;
"RTN","IBCNBEE",141,0)
 NEW IBNEW,IBNAME,AMLIST
"RTN","IBCNBEE",142,0)
 ;
"RTN","IBCNBEE",143,0)
 S IBNEW=0,IBNAME=$P($G(^IBA(355.33,$G(IBBUFDA),20)),U,1)
"RTN","IBCNBEE",144,0)
 I IBNAME="" G CHECKQ
"RTN","IBCNBEE",145,0)
 ;
"RTN","IBCNBEE",146,0)
 ; Perform an insurance company lookup/lister
"RTN","IBCNBEE",147,0)
 ; BHS - 10/15/03 - Removed quits when user enters a caret to quit the
"RTN","IBCNBEE",148,0)
 ;                  the ins lister or Auto Match lister
"RTN","IBCNBEE",149,0)
 S IBNEW=$$DICINS^IBCNBU1(IBNAME,1,10)
"RTN","IBCNBEE",150,0)
 I IBNEW=0!(IBNEW<0) D
"RTN","IBCNBEE",151,0)
 . I '$$AMLOOK^IBCNEUT1(IBNAME,1,.AMLIST) Q
"RTN","IBCNBEE",152,0)
 . S IBNEW=$$AMSEL^IBCNEUT1(.AMLIST)
"RTN","IBCNBEE",153,0)
 ;
"RTN","IBCNBEE",154,0)
 ; user chose a valid insurance company - possible Auto Match add
"RTN","IBCNBEE",155,0)
 I IBNEW'<0,IBNEW'=0 D AMADD^IBCNEUT6(X,IBCNEXT1)
"RTN","IBCNBEE",156,0)
 ;
"RTN","IBCNBEE",157,0)
CHECKQ Q IBNEW
"RTN","IBCNBEE",158,0)
 ;
"RTN","IBCNBEE",159,0)
MRINS ; Insurance Company fields asked of MCCR users in the Buffer Process options (all buffer ins fields 20.01-21.06)
"RTN","IBCNBEE",160,0)
 ;;20.01;20.05;20.02:20.04;21.01;I X="" S Y="@111";21.02;I X="" S Y="@111";21.03;@111;21.04:21.06
"RTN","IBCNBEE",161,0)
 ;
"RTN","IBCNBEE",162,0)
MRGRP ; Group/Plan fields asked of MCCR users in the Buffer Process options (all buffer grp fields 40.01,90.01,90.02,40.04-40.09)
"RTN","IBCNBEE",163,0)
 ;;40.01;90.01;90.02;40.1;40.11;40.09;40.04:40.08
"RTN","IBCNBEE",164,0)
 ;
"RTN","IBCNBEE",165,0)
MRPOL ; Patient Policy fields asked of MCCR users in the Buffer Process options (all buffer policy fields except ESGHP,60.05,60.06 60.02-61.01
"RTN","IBCNBEE",166,0)
 ;;60.02;60.03;60.14PATIENT RELATIONSHIP TO SUBSCRIBER;S IBZZ=X;I IBZZ'="18" S Y="@111";91.01NAME OF SUBSCRIBER///1;90.03T;60.08SUBSCRIBER'S DOB///@;60.09SUBSCRIBER'S SSN///@;62.01///@;S Y="@112";@111;
"RTN","IBCNBEE",167,0)
 ;;91.01NAME OF SUBSCRIBER;90.03T;60.08SUBSCRIBER'S DOB;60.13SUBSCRIBER'S SEX;62.01T;@112;60.1:60.12;.03;60.15;60.16;61.01;62.02:62.06
"RTN","IBCNBEE",168,0)
 ;
"RTN","IBCNBEE",169,0)
OTINS ; Insurance Company fields asked of non-MCCR users entering buffer data from options outside IB (20.01-20.04,21.01-21.06)
"RTN","IBCNBEE",170,0)
 ;;20.01:20.04;21.01;I X="" S Y="@111";21.02;I X="" S Y="@111";21.03;@111;21.04:21.06
"RTN","IBCNBEE",171,0)
 ;
"RTN","IBCNBEE",172,0)
OTGRP ; Group/Plan fields asked of non-MCCR users entering buffer data from options outside IB (90.01,90.02,40.09) ;;Daou/EEN-adding BIN & PCN (40.1,40.11)
"RTN","IBCNBEE",173,0)
 ;;90.01;90.02;40.1;40.11;40.09
"RTN","IBCNBEE",174,0)
 ;
"RTN","IBCNBEE",175,0)
OTPOL ; Patient Policy fields asked of non-MCCR users entering buffer data from options outside IB (60.02,60.03,90.03,60.05,60.06,91.01,60.08)
"RTN","IBCNBEE",176,0)
 ;;60.02;60.03;60.14PT. RELATIONSHIP TO INSURED;S IBZZ=X;90.03T;I IBZZ'="18" S Y="@111";91.01///1;60.08///@;60.09///@;62.01///@;S Y="@112";@111;91.01;60.08;60.13;62.01T;@112;60.15;60.16;62.02;62.03;62.04;62.05;62.06
"RTN","IBCNBLA1")
0^140^B104276372
"RTN","IBCNBLA1",1,0)
IBCNBLA1 ;ALB/ARH - Ins Buffer: LM action calls (cont) ;1 Jun 97
"RTN","IBCNBLA1",2,0)
 ;;2.0;INTEGRATED BILLING;**82,133,149,184,252,271,416,438,506,528**;21-MAR-94;Build 163
"RTN","IBCNBLA1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBLA1",4,0)
 ;
"RTN","IBCNBLA1",5,0)
ADDBUF ; add a new buffer entry protocol
"RTN","IBCNBLA1",6,0)
 N DIC,DIR,DIRUT,DUOUT,X,Y,IBIN,DFN,IBBUFDA,IBDATA,AMLIST,IBHELP
"RTN","IBCNBLA1",7,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBCNBLA1",8,0)
 ;
"RTN","IBCNBLA1",9,0)
 ; Patient lookup
"RTN","IBCNBLA1",10,0)
 S DIC(0)="AEQM",DIC="^DPT(" D ^DIC Q:Y'>0  S DFN=+Y W !
"RTN","IBCNBLA1",11,0)
 ;
"RTN","IBCNBLA1",12,0)
INS ; Insurance company lookup
"RTN","IBCNBLA1",13,0)
 S DIR("A")="Insurance Company",DIR(0)="FO^1:30"
"RTN","IBCNBLA1",14,0)
 S DIR("?",1)="Please enter the name of the insurance company that provides coverage for this"
"RTN","IBCNBLA1",15,0)
 S DIR("?",2)="patient.  This response is a free text response, however, a partial insurance"
"RTN","IBCNBLA1",16,0)
 S DIR("?")="company name look-up is available here."
"RTN","IBCNBLA1",17,0)
 ; BHS - 10/15/03 - Removed quit condition when user enters a caret
"RTN","IBCNBLA1",18,0)
 ;                  during the insurance lister and only sets IBIN
"RTN","IBCNBLA1",19,0)
 ;                  when a valid selection is made
"RTN","IBCNBLA1",20,0)
 D ^DIR K DIR Q:$D(DIRUT)  S IBIN=Y,Y=$$DICINS^IBCNBU1(Y,1,10) I Y'<0,Y'=0 S IBIN=Y
"RTN","IBCNBLA1",21,0)
 ;
"RTN","IBCNBLA1",22,0)
 ; ESG - 6/17/02 - Usage of Auto Match file when adding a buffer entry
"RTN","IBCNBLA1",23,0)
 ;     - SDD 5.1.3
"RTN","IBCNBLA1",24,0)
 ;
"RTN","IBCNBLA1",25,0)
 ; BHS - 10/15/03 - Added condition to allow Auto Match lookup when user
"RTN","IBCNBLA1",26,0)
 ;                  entered a caret during the insurance lister
"RTN","IBCNBLA1",27,0)
 I Y=0!(Y<0),$$AMLOOK^IBCNEUT1(IBIN,1,.AMLIST) S Y=$$AMSEL^IBCNEUT1(.AMLIST) I Y'<0,Y'=0 S IBIN=Y
"RTN","IBCNBLA1",28,0)
 I '$$INPTTR(355.33,20.01,$$UP^XLFSTR(IBIN)) D  G INS
"RTN","IBCNBLA1",29,0)
 . D FIELD^DID(355.33,20.01,"","HELP-PROMPT","IBHELP")
"RTN","IBCNBLA1",30,0)
 . W !?5,IBHELP("HELP-PROMPT") Q
"RTN","IBCNBLA1",31,0)
 ;
"RTN","IBCNBLA1",32,0)
 S DIR(0)="Y",DIR("A")="Add a new Insurance Buffer entry for this patient and company",DIR("B")="YES" W ! D ^DIR K DIR Q:Y'=1
"RTN","IBCNBLA1",33,0)
 ;
"RTN","IBCNBLA1",34,0)
 S IBDATA(20.01)=$$UP^XLFSTR(IBIN),IBDATA(60.01)=DFN
"RTN","IBCNBLA1",35,0)
 S IBBUFDA=+$$ADDSTF^IBCNBES(1,DFN,.IBDATA) K IBDATA Q:'IBBUFDA
"RTN","IBCNBLA1",36,0)
 ;
"RTN","IBCNBLA1",37,0)
 I '$$LOCK^IBCNBU1(IBBUFDA,1) Q
"RTN","IBCNBLA1",38,0)
 D INSHELP^IBCNBEE,INS^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",39,0)
 D GRPHELP^IBCNBEE,GRP^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",40,0)
 D POLHELP^IBCNBEE,POLICY^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",41,0)
 D BUFF^IBCNEUT2(IBBUFDA,+$$INSERROR^IBCNEUT3("B",IBBUFDA))   ; symbol
"RTN","IBCNBLA1",42,0)
 D UNLOCK^IBCNBU1(IBBUFDA)
"RTN","IBCNBLA1",43,0)
 ;
"RTN","IBCNBLA1",44,0)
 D INIT^IBCNBLL,HDR^IBCNBLL S VALMBCK="R"
"RTN","IBCNBLA1",45,0)
 Q
"RTN","IBCNBLA1",46,0)
 ;
"RTN","IBCNBLA1",47,0)
INSEDIT(IBBUFDA) ; edit the Insurance data of a buffer entry
"RTN","IBCNBLA1",48,0)
 ;
"RTN","IBCNBLA1",49,0)
 Q:'$G(IBBUFDA)  D FULL^VALM1
"RTN","IBCNBLA1",50,0)
 D INSHELP^IBCNBEE,INS^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",51,0)
 ;
"RTN","IBCNBLA1",52,0)
 D CLEAN^VALM10,INIT^IBCNBLE,HDR^IBCNBLE S VALMBCK="R" D UPDLN^IBCNBLL(IBBUFDA,"EDITED")
"RTN","IBCNBLA1",53,0)
 Q
"RTN","IBCNBLA1",54,0)
 ;
"RTN","IBCNBLA1",55,0)
GRPEDIT(IBBUFDA) ; edit the Group/Plan data of a buffer entry
"RTN","IBCNBLA1",56,0)
 ;
"RTN","IBCNBLA1",57,0)
 Q:'$G(IBBUFDA)  D FULL^VALM1
"RTN","IBCNBLA1",58,0)
 D GRPHELP^IBCNBEE,GRP^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",59,0)
 ;
"RTN","IBCNBLA1",60,0)
 D CLEAN^VALM10,INIT^IBCNBLE,HDR^IBCNBLE S VALMBCK="R"
"RTN","IBCNBLA1",61,0)
 Q
"RTN","IBCNBLA1",62,0)
 ;
"RTN","IBCNBLA1",63,0)
POLEDIT(IBBUFDA) ; edit the Subscriber Policy data of a buffer entry
"RTN","IBCNBLA1",64,0)
 ;
"RTN","IBCNBLA1",65,0)
 Q:'$G(IBBUFDA)  D FULL^VALM1
"RTN","IBCNBLA1",66,0)
 D POLHELP^IBCNBEE,POLICY^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",67,0)
 ;
"RTN","IBCNBLA1",68,0)
 D CLEAN^VALM10,INIT^IBCNBLE,HDR^IBCNBLE S VALMBCK="R" D UPDLN^IBCNBLL(IBBUFDA,"EDITED")
"RTN","IBCNBLA1",69,0)
 Q
"RTN","IBCNBLA1",70,0)
 ;
"RTN","IBCNBLA1",71,0)
ALLEDIT(IBBUFDA) ; edit All data of a buffer entry
"RTN","IBCNBLA1",72,0)
 ;
"RTN","IBCNBLA1",73,0)
 Q:'$G(IBBUFDA)  D FULL^VALM1
"RTN","IBCNBLA1",74,0)
 D INSHELP^IBCNBEE,INS^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",75,0)
 D GRPHELP^IBCNBEE,GRP^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",76,0)
 D POLHELP^IBCNBEE,POLICY^IBCNBEE(IBBUFDA)
"RTN","IBCNBLA1",77,0)
 ;
"RTN","IBCNBLA1",78,0)
 D CLEAN^VALM10,INIT^IBCNBLE,HDR^IBCNBLE S VALMBCK="R" D UPDLN^IBCNBLL(IBBUFDA,"EDITED")
"RTN","IBCNBLA1",79,0)
 Q
"RTN","IBCNBLA1",80,0)
 ;
"RTN","IBCNBLA1",81,0)
CMPEDIT(IBBUFDA) ; display a buffer entry and an existing ins entry for comparison, allow edit of buffer data
"RTN","IBCNBLA1",82,0)
 Q:'$G(IBBUFDA)
"RTN","IBCNBLA1",83,0)
 N IBDA,IBPOLDA,IBGRPDA,IBINSDA,DIR,DIRUT,X,Y
"RTN","IBCNBLA1",84,0)
 ;
"RTN","IBCNBLA1",85,0)
 D FULL^VALM1
"RTN","IBCNBLA1",86,0)
 ;
"RTN","IBCNBLA1",87,0)
 S IBDA=$$SEL^IBCNBLA("IBCNBLPX") I 'IBDA G CMPQ
"RTN","IBCNBLA1",88,0)
 I $P(IBDA,U,4)'="",+$G(^IBA(355.33,+IBBUFDA,60))'=$P(IBDA,U,4) W !,"Buffer Patient doesn't match Policy Patient, can't continue." G CMPQ
"RTN","IBCNBLA1",89,0)
 S IBINSDA=+IBDA,IBGRPDA=+$P(IBDA,U,2),IBPOLDA=+$P(IBDA,U,3)
"RTN","IBCNBLA1",90,0)
 ;
"RTN","IBCNBLA1",91,0)
CEINS W @IOF
"RTN","IBCNBLA1",92,0)
 I 'IBINSDA W !,"No Insurance Company Selected for Comparison."
"RTN","IBCNBLA1",93,0)
 W ! D INS^IBCNBCD(IBBUFDA,IBINSDA)
"RTN","IBCNBLA1",94,0)
 S DIR("?")="The Buffer entry's Insurance Company data may be edited or Return advances the display to the Group/Plan data.",DIR("??")="^D HELP^IBCNBUH,WAIT^IBCNBUH,INS^IBCNBCD("_IBBUFDA_","_IBINSDA_")"
"RTN","IBCNBLA1",95,0)
 W ! S DIR(0)="FO",DIR("A")="Enter 'E' to edit buffer data or Return to continue"
"RTN","IBCNBLA1",96,0)
 D ^DIR K DIR I Y'="",$D(DIRUT) G CMPQ
"RTN","IBCNBLA1",97,0)
 I Y'="","EEee"[Y D INSHELP^IBCNBEE,INS^IBCNBEE(IBBUFDA) G CEINS
"RTN","IBCNBLA1",98,0)
 ;
"RTN","IBCNBLA1",99,0)
CEGRP W @IOF
"RTN","IBCNBLA1",100,0)
 I 'IBGRPDA W !,"No Insurance Group/Plan Selected for Comparison."
"RTN","IBCNBLA1",101,0)
 I +IBGRPDA W !,?14,"Patient is "_$S(+IBPOLDA:"",1:"NOT ")_"a member of this Insurance Group/Plan",!
"RTN","IBCNBLA1",102,0)
 W ! D GRP^IBCNBCD(IBBUFDA,IBGRPDA)
"RTN","IBCNBLA1",103,0)
 S DIR("?")="The Buffer entry's Group/Plan data may be edited or Return advances the display to the Patient Policy data.",DIR("??")="^D HELP^IBCNBUH,WAIT^IBCNBUH,GRP^IBCNBCD("_IBBUFDA_","_IBGRPDA_")"
"RTN","IBCNBLA1",104,0)
 W ! S DIR(0)="FO",DIR("A")="Enter 'E' to edit buffer data or Return to continue"
"RTN","IBCNBLA1",105,0)
 D ^DIR K DIR I Y'="",$D(DIRUT) G CMPQ
"RTN","IBCNBLA1",106,0)
 I Y'="","EEee"[Y D GRPHELP^IBCNBEE,GRP^IBCNBEE(IBBUFDA) G CEGRP
"RTN","IBCNBLA1",107,0)
 ;
"RTN","IBCNBLA1",108,0)
CEPOL W @IOF
"RTN","IBCNBLA1",109,0)
 I 'IBPOLDA W !,"No Patient Policy Selected for Comparison."
"RTN","IBCNBLA1",110,0)
 W ! D POLICY^IBCNBCD(IBBUFDA,IBPOLDA)
"RTN","IBCNBLA1",111,0)
 S DIR("?")="The Buffer entry's Patient Policy data may be edited or return to the screen display.",DIR("??")="^D HELP^IBCNBUH,WAIT^IBCNBUH,POLICY^IBCNBCD("_IBBUFDA_","_IBPOLDA_")"
"RTN","IBCNBLA1",112,0)
 W ! S DIR(0)="FO",DIR("A")="Enter 'E' to edit buffer data or Return to continue"
"RTN","IBCNBLA1",113,0)
 D ^DIR K DIR I Y'="",$D(DIRUT) G CMPQ
"RTN","IBCNBLA1",114,0)
 I Y'="","EEee"[Y D POLHELP^IBCNBEE,POLICY^IBCNBEE(IBBUFDA) G CEPOL
"RTN","IBCNBLA1",115,0)
 ;
"RTN","IBCNBLA1",116,0)
CELIG W @IOF
"RTN","IBCNBLA1",117,0)
 W ! D ELIG^IBCNBCD(IBBUFDA,IBPOLDA)
"RTN","IBCNBLA1",118,0)
 ;
"RTN","IBCNBLA1",119,0)
CMPQ D CLEAN^VALM10,INIT^IBCNBLP,HDR^IBCNBLP S VALMBCK="R" D UPDLN^IBCNBLL(IBBUFDA,"EDITED")
"RTN","IBCNBLA1",120,0)
 Q
"RTN","IBCNBLA1",121,0)
 ;
"RTN","IBCNBLA1",122,0)
VERIFY(IBBUFDA) ; verify a buffer entry
"RTN","IBCNBLA1",123,0)
 ;
"RTN","IBCNBLA1",124,0)
 N DIR,DIRUT,X,Y,IBX,IBY Q:'$G(IBBUFDA)
"RTN","IBCNBLA1",125,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBCNBLA1",126,0)
 W ! D DISPBUF^IBCNBU1(IBBUFDA)
"RTN","IBCNBLA1",127,0)
 ;
"RTN","IBCNBLA1",128,0)
 S IBX=$G(^IBA(355.33,IBBUFDA,0)),IBY="" I +$P(IBX,U,10) S IBY="Re-" W !!,"This entry already verified by ",$$EXPAND^IBTRE(355.33,.11,$P(IBX,U,11))," on ",$$FMTE^XLFDT($P(IBX,U,10)),"."
"RTN","IBCNBLA1",129,0)
 ;
"RTN","IBCNBLA1",130,0)
 S DIR("?")="Enter Yes if the coverage and information in this Buffer entry has been verified to be accurate." W !!
"RTN","IBCNBLA1",131,0)
 S DIR(0)="YO",DIR("B")="N",DIR("A")=IBY_"Verify the coverage in this buffer entry"
"RTN","IBCNBLA1",132,0)
 D ^DIR
"RTN","IBCNBLA1",133,0)
 I Y=1 D
"RTN","IBCNBLA1",134,0)
 . ; WCW - 04/11/2003 Clear out IIV Status when manually verified
"RTN","IBCNBLA1",135,0)
 . D CLEAR^IBCNEUT4(IBBUFDA,.IIVERR,1) K IIVERR
"RTN","IBCNBLA1",136,0)
 . K IBX S IBX(.1)="NOW",IBX(.11)=DUZ D EDITSTF^IBCNBES(IBBUFDA,.IBX)
"RTN","IBCNBLA1",137,0)
 . D INIT^IBCNBLE,HDR^IBCNBLE S VALMBCK="R" D UPDLN^IBCNBLL(IBBUFDA,"EDITED") W "  Coverage Verified ..." H 2
"RTN","IBCNBLA1",138,0)
 ;
"RTN","IBCNBLA1",139,0)
 Q
"RTN","IBCNBLA1",140,0)
 ;
"RTN","IBCNBLA1",141,0)
REJECT(IBBUFDA,DIRUT) ; process a reject and then delete a buffer entry
"RTN","IBCNBLA1",142,0)
 ; Output parameter DIRUT is optional and passed in by reference.  This
"RTN","IBCNBLA1",143,0)
 ; variable will be defined if the user enters a leading up-arrow,
"RTN","IBCNBLA1",144,0)
 ; times out, or enters a null response.  This is so the calling routine
"RTN","IBCNBLA1",145,0)
 ; can detect if the user did something other than say Yes or No to
"RTN","IBCNBLA1",146,0)
 ; this question.
"RTN","IBCNBLA1",147,0)
 ;
"RTN","IBCNBLA1",148,0)
 N DIR,X,Y,IBX Q:'$G(IBBUFDA)
"RTN","IBCNBLA1",149,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBCNBLA1",150,0)
 W ! D DISPBUF^IBCNBU1(IBBUFDA)
"RTN","IBCNBLA1",151,0)
 W !!,"This action will delete all insurance and patient specific data from a buffer ",!,"entry without first saving that data to the insurance files, leaving a stub ",!,"entry for reporting purposes.",!
"RTN","IBCNBLA1",152,0)
 ;
"RTN","IBCNBLA1",153,0)
 S IBX=$G(^IBA(355.33,IBBUFDA,0)) I +$P(IBX,U,10) W !!,"This entry has been verified by ",$$EXPAND^IBTRE(355.33,.11,$P(IBX,U,11))," on ",$$FMTE^XLFDT($P(IBX,U,10)),".",!!
"RTN","IBCNBLA1",154,0)
 ;
"RTN","IBCNBLA1",155,0)
 S DIR("?")="Enter Yes to delete this buffer entry without saving any of it's data to the Insurance files."
"RTN","IBCNBLA1",156,0)
 S DIR(0)="YO",DIR("B")="N",DIR("A")="Reject this buffer entry (delete without saving to Insurance files)"
"RTN","IBCNBLA1",157,0)
 D ^DIR
"RTN","IBCNBLA1",158,0)
 I $D(DIRUT) G REJX
"RTN","IBCNBLA1",159,0)
 I Y=1 D REJECT^IBCNBAR(IBBUFDA) S VALMBCK="Q" D UPDLN^IBCNBLL(IBBUFDA,"REJECTED")
"RTN","IBCNBLA1",160,0)
REJX ;
"RTN","IBCNBLA1",161,0)
 Q
"RTN","IBCNBLA1",162,0)
 ;
"RTN","IBCNBLA1",163,0)
ACCEPT(IBBUFDA) ; process a buffer entry for acceptance
"RTN","IBCNBLA1",164,0)
 ;
"RTN","IBCNBLA1",165,0)
 Q:'$G(IBBUFDA)
"RTN","IBCNBLA1",166,0)
 N IBDA,IBINSDA,IBGRPDA,IBPOLDA,IBACCEPT S IBACCEPT=0
"RTN","IBCNBLA1",167,0)
 ;
"RTN","IBCNBLA1",168,0)
 D FULL^VALM1
"RTN","IBCNBLA1",169,0)
 ;
"RTN","IBCNBLA1",170,0)
 S IBDA=$$SEL^IBCNBLA("IBCNBLPX")
"RTN","IBCNBLA1",171,0)
 I $P(IBDA,U,4)'="",+$G(^IBA(355.33,+IBBUFDA,60))'=$P(IBDA,U,4) W !,"Buffer Patient doesn't match Policy Patient, can't continue." G ACCPTQ
"RTN","IBCNBLA1",172,0)
 I +$P(IBDA,U,3),'$P(IBDA,U,2) W !!,"Error: the selected policy has no associated plan.  Can not continue." D WAIT^IBCNBUH G ACCPTQ
"RTN","IBCNBLA1",173,0)
 ;
"RTN","IBCNBLA1",174,0)
 S IBINSDA=+IBDA,IBGRPDA=+$P(IBDA,U,2),IBPOLDA=+$P(IBDA,U,3)
"RTN","IBCNBLA1",175,0)
 S:'IBINSDA (IBGRPDA,IBPOLDA)=0 S:'IBGRPDA IBPOLDA=0
"RTN","IBCNBLA1",176,0)
 ;
"RTN","IBCNBLA1",177,0)
 I 'IBINSDA,'$D(^XUSEC("IB INSURANCE COMPANY ADD",DUZ)) D  G ACCPTQ
"RTN","IBCNBLA1",178,0)
 . W !!,"Sorry, but you do not have the required privileges to add",!,"new Insurance Companies."
"RTN","IBCNBLA1",179,0)
 . D WAIT^IBCNBUH
"RTN","IBCNBLA1",180,0)
 ;
"RTN","IBCNBLA1",181,0)
 S IBACCEPT=$$ACCEPT^IBCNBAA(IBBUFDA,IBINSDA,IBGRPDA,IBPOLDA)
"RTN","IBCNBLA1",182,0)
 ;
"RTN","IBCNBLA1",183,0)
ACCPTQ S VALMBCK="R" I +IBACCEPT S VALMBCK="Q" D UPDLN^IBCNBLL(IBBUFDA,"ACCEPTED")
"RTN","IBCNBLA1",184,0)
 Q
"RTN","IBCNBLA1",185,0)
 ;
"RTN","IBCNBLA1",186,0)
RESP(BUFF) ; List Response Report for Trace # associated with this entry
"RTN","IBCNBLA1",187,0)
 ; BUFF = buffer IEN
"RTN","IBCNBLA1",188,0)
 N NG,IBRSP,IBSTR,IBTRC,STOP,IBCNERTN,POP,IBCNESPC,IBOUT
"RTN","IBCNBLA1",189,0)
 ; Reset to Full Screen Mode
"RTN","IBCNBLA1",190,0)
 D FULL^VALM1
"RTN","IBCNBLA1",191,0)
 S NG=0
"RTN","IBCNBLA1",192,0)
 I $G(BUFF)="" S NG=1
"RTN","IBCNBLA1",193,0)
 I 'NG S IBRSP=$O(^IBCN(365,"AF",BUFF,"")) I IBRSP="" S NG=1
"RTN","IBCNBLA1",194,0)
 I 'NG S IBSTR=$G(^IBCN(365,IBRSP,0)),IBTRC=$P(IBSTR,U,9) I IBTRC="" S NG=1
"RTN","IBCNBLA1",195,0)
 I NG W !!,"This entry does not have an associated eIV response." D PAUSE^VALM1 G RESPX
"RTN","IBCNBLA1",196,0)
 S STOP=0,IBCNERTN="IBCNERP1",IBCNESPC("TRCN")=IBTRC_U_IBRSP
"RTN","IBCNBLA1",197,0)
 S IBOUT=$$OUT^IBCNERP1() G:IBOUT']"" RESPX I IBOUT="E" W !,!,"To avoid undesired wrapping, please enter '0;256;999' at the 'DEVICE:' prompt.",! ; AWC/ IB*2.0*528
"RTN","IBCNBLA1",198,0)
 D R100^IBCNERP1
"RTN","IBCNBLA1",199,0)
RESPX S VALMBCK="R"
"RTN","IBCNBLA1",200,0)
 Q
"RTN","IBCNBLA1",201,0)
INPTTR(FILE,FLD,X) ; Does value X pass input transform for file, field?
"RTN","IBCNBLA1",202,0)
 N XCUTE
"RTN","IBCNBLA1",203,0)
 S XCUTE=$$GET1^DID(FILE,FLD,,"INPUT TRANSFORM")
"RTN","IBCNBLA1",204,0)
 X XCUTE
"RTN","IBCNBLA1",205,0)
 Q $D(X)
"RTN","IBCNBLA1",206,0)
 ;
"RTN","IBCNBLA1",207,0)
ICB(IBBUFDA) ;called by ICB to update eIV status flag (symbol) in the insurance buffer entry
"RTN","IBCNBLA1",208,0)
 ;
"RTN","IBCNBLA1",209,0)
 N SYM,ERR
"RTN","IBCNBLA1",210,0)
 S SYM=$$GET1^DIQ(355.33,IBBUFDA,.12,"I") Q:'SYM
"RTN","IBCNBLA1",211,0)
 I $$SYMBOL^IBCNBLL(IBBUFDA)="*" Q  ;don't update if manually verified
"RTN","IBCNBLA1",212,0)
 ; Determine if Expand Entry is allowed to update the eIV Status
"RTN","IBCNBLA1",213,0)
 I '$P($G(^IBE(365.15,SYM,0)),U,3) Q
"RTN","IBCNBLA1",214,0)
 ; If the current IIV Status allows updates by Expand Entry, then
"RTN","IBCNBLA1",215,0)
 ; invoke the function that tries to find a valid payer
"RTN","IBCNBLA1",216,0)
 S ERR=$$INSERROR^IBCNEUT3("B",IBBUFDA,1)
"RTN","IBCNBLA1",217,0)
 ; If no errors, then remove the eIV Status
"RTN","IBCNBLA1",218,0)
 I 'ERR S ERR=$$SIDERR^IBCNBLE1(IBBUFDA,$P(ERR,U,2))
"RTN","IBCNBLA1",219,0)
 I 'ERR D CLEAR^IBCNEUT4(IBBUFDA)
"RTN","IBCNBLA1",220,0)
 ; If errors found, then update with the new IIV Status
"RTN","IBCNBLA1",221,0)
 I ERR D BUFF^IBCNEUT2(IBBUFDA,$P(ERR,U,1))
"RTN","IBCNBLA1",222,0)
 Q
"RTN","IBCNBLA1",223,0)
 ;
"RTN","IBCNBLA1",224,0)
ESC(IBBUFDA,IBKEYS) ; Escalate to user with ability to edit Insurance/Group data
"RTN","IBCNBLA1",225,0)
 N DIE,DR,DA,DIR,X,Y,IBX,CODE Q:'$G(IBBUFDA)
"RTN","IBCNBLA1",226,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBCNBLA1",227,0)
 W ! D DISPBUF^IBCNBU1(IBBUFDA)
"RTN","IBCNBLA1",228,0)
 I IBKEYS D  G ESCX
"RTN","IBCNBLA1",229,0)
 . W !!,"This action can only be taken by users that do not have either the IB INSURANCE",!,"COMPANY EDIT security key or the IB GROUP PLAN EDIT security key.",!
"RTN","IBCNBLA1",230,0)
 . D PAUSE^VALM1
"RTN","IBCNBLA1",231,0)
 W !!,"This action will escalate the buffer entry to a level with the ability to edit",!,"insurance and/or group data.",!
"RTN","IBCNBLA1",232,0)
 ;
"RTN","IBCNBLA1",233,0)
 S IBX=$G(^IBA(355.33,IBBUFDA,0)) I +$P(IBX,U,10) W !!,"This entry has been verified by ",$$EXPAND^IBTRE(355.33,.11,$P(IBX,U,11))," on ",$$FMTE^XLFDT($P(IBX,U,10)),".",!!
"RTN","IBCNBLA1",234,0)
 ;
"RTN","IBCNBLA1",235,0)
 S DIR("?")="Enter Yes to escalate this buffer entry."
"RTN","IBCNBLA1",236,0)
 S DIR(0)="YO",DIR("B")="N",DIR("A")="Escalate this buffer entry"
"RTN","IBCNBLA1",237,0)
 D ^DIR
"RTN","IBCNBLA1",238,0)
 I $D(DIRUT) G ESCX
"RTN","IBCNBLA1",239,0)
 I Y=1 D
"RTN","IBCNBLA1",240,0)
 . S DIE=355.33,DA=IBBUFDA,CODE="E1"
"RTN","IBCNBLA1",241,0)
 . S DR=".12///^S X=CODE"
"RTN","IBCNBLA1",242,0)
 . D ^DIE
"RTN","IBCNBLA1",243,0)
 . S VALMBCK="Q" D UPDLN^IBCNBLL(IBBUFDA,"EDITED")
"RTN","IBCNBLA1",244,0)
ESCX ;
"RTN","IBCNBLA1",245,0)
 Q
"RTN","IBCNBLE")
0^62^B108286905
"RTN","IBCNBLE",1,0)
IBCNBLE ;ALB/ARH - Ins Buffer: LM buffer entry screen ;1-Jun-97
"RTN","IBCNBLE",2,0)
 ;;2.0;INTEGRATED BILLING;**82,231,184,251,371,416,435,452,497,519,516,528**;21-MAR-94;Build 163
"RTN","IBCNBLE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBLE",4,0)
 ;
"RTN","IBCNBLE",5,0)
EN ; - main entry point for list manager display
"RTN","IBCNBLE",6,0)
 N DFN
"RTN","IBCNBLE",7,0)
 D EN^VALM("IBCNB INSURANCE BUFFER ENTRY")
"RTN","IBCNBLE",8,0)
 Q
"RTN","IBCNBLE",9,0)
 ;
"RTN","IBCNBLE",10,0)
HDR ; - header code for list manager display
"RTN","IBCNBLE",11,0)
 N IBX,IB0,VADM,VA,VAERR S IBX=""
"RTN","IBCNBLE",12,0)
 I +$G(DFN) D DEM^VADPT S IBX=$E(VADM(1),1,28),IBX=IBX_$J("",35-$L(IBX))_$P(VADM(2),U,2)_"    DOB: "_$P(VADM(3),U,2)_"    AGE: "_VADM(4)
"RTN","IBCNBLE",13,0)
 S VALMHDR(1)=IBX
"RTN","IBCNBLE",14,0)
 S IB0=$G(^IBA(355.33,+$G(IBBUFDA),0))
"RTN","IBCNBLE",15,0)
 S IBX=$E($P($G(^VA(200,+$P(IB0,U,2),0)),U,1),1,27)_" ("_$E($$EXPAND^IBTRE(355.33,.03,$P(IB0,U,3)),1,11)_")"
"RTN","IBCNBLE",16,0)
 S IBX="Buffer entry created on "_$$DATE(+IB0)_" by "_IBX,IBX=$J("",40-($L(IBX)\2))_IBX
"RTN","IBCNBLE",17,0)
 S VALMHDR(2)=IBX
"RTN","IBCNBLE",18,0)
 S IBX="" I +$P(IB0,U,10) S IBX="Buffer entry verified on "_$$DATE(+$P(IB0,U,10))_" by "_$E($P($G(^VA(200,+$P(IB0,U,11),0)),U,1),1,27),IBX=$J("",40-($L(IBX)\2))_IBX
"RTN","IBCNBLE",19,0)
 S VALMHDR(3)=IBX
"RTN","IBCNBLE",20,0)
 Q
"RTN","IBCNBLE",21,0)
 ;
"RTN","IBCNBLE",22,0)
INIT ; - initialization of list manager screen, ifn of record to display required IBBUFDA
"RTN","IBCNBLE",23,0)
 K ^TMP("IBCNBLE",$J)
"RTN","IBCNBLE",24,0)
 I '$G(IBBUFDA) S VALMQUIT="" Q
"RTN","IBCNBLE",25,0)
 S DFN=+$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBLE",26,0)
 D BLD
"RTN","IBCNBLE",27,0)
 Q
"RTN","IBCNBLE",28,0)
 ;
"RTN","IBCNBLE",29,0)
HELP ; - help text for list manager screen
"RTN","IBCNBLE",30,0)
 D FULL^VALM1
"RTN","IBCNBLE",31,0)
 W !!,"This screen displays all data in a Buffer File entry."
"RTN","IBCNBLE",32,0)
 W !!,"The actions allow editing of all data and verification of coverage."
"RTN","IBCNBLE",33,0)
 W !!,"It is not necessary to use the Verify Entry action, this action is optional.",!,"If the Verify Entry action is not used, the policy will be automatically flagged",!,"as verified when it is Accepted and stored in the main Insurance files."
"RTN","IBCNBLE",34,0)
 D PAUSE^VALM1 S VALMBCK="R"
"RTN","IBCNBLE",35,0)
 Q
"RTN","IBCNBLE",36,0)
 ;
"RTN","IBCNBLE",37,0)
EXIT ; - exit list manager screen
"RTN","IBCNBLE",38,0)
 K ^TMP("IBCNBLE",$J)
"RTN","IBCNBLE",39,0)
 D CLEAR^VALM1
"RTN","IBCNBLE",40,0)
 Q
"RTN","IBCNBLE",41,0)
 ;
"RTN","IBCNBLE",42,0)
BLD ; display buffer entry
"RTN","IBCNBLE",43,0)
 N DFN,CLIEN,CLDT,IB0,IB20,IB40,IB60,IB61,IB62,IB90,IB91,IBL,IBLINE,ADDR,IBI,IBY,SRVARRAY
"RTN","IBCNBLE",44,0)
 S VALMCNT=0
"RTN","IBCNBLE",45,0)
 S IB0=$G(^IBA(355.33,IBBUFDA,0)),IB20=$G(^IBA(355.33,IBBUFDA,20)),IB40=$G(^IBA(355.33,IBBUFDA,40))
"RTN","IBCNBLE",46,0)
 S IB60=$G(^IBA(355.33,IBBUFDA,60)),IB61=$G(^IBA(355.33,IBBUFDA,61)),IB62=$G(^IBA(355.33,IBBUFDA,62))
"RTN","IBCNBLE",47,0)
 S IB90=$G(^IBA(355.33,IBBUFDA,90)),IB91=$G(^IBA(355.33,IBBUFDA,91))
"RTN","IBCNBLE",48,0)
 ; check if we are coming from appointments view
"RTN","IBCNBLE",49,0)
 I $G(AVIEW) D
"RTN","IBCNBLE",50,0)
 .D SET(" ") S IBY=$J("",26)_"Appointment Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",51,0)
 .S DFN=+IB60
"RTN","IBCNBLE",52,0)
 .S CLIEN="" F  S CLIEN=$O(^TMP($J,"IBCNAPPTS",DFN,CLIEN)) Q:CLIEN=""  D
"RTN","IBCNBLE",53,0)
 ..S CLDT="" F  S CLDT=$O(^TMP($J,"IBCNAPPTS",DFN,CLIEN,CLDT)) Q:CLDT=""  D
"RTN","IBCNBLE",54,0)
 ...S IBL="Clinic: ",IBY=$P($P(^TMP($J,"IBCNAPPTS",DFN,CLIEN,CLDT),U,2),";",2)
"RTN","IBCNBLE",55,0)
 ...S IBLINE=$$SETL(IBLINE,IBY,IBL,10,30)
"RTN","IBCNBLE",56,0)
 ...S IBL="Appt. D/T: ",IBY=$$FMTE^XLFDT(CLDT)
"RTN","IBCNBLE",57,0)
 ...S IBLINE=$$SETL(IBLINE,IBY,IBL,50,22)
"RTN","IBCNBLE",58,0)
 ...D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",59,0)
 ...Q
"RTN","IBCNBLE",60,0)
 ..Q
"RTN","IBCNBLE",61,0)
 .Q
"RTN","IBCNBLE",62,0)
 ;
"RTN","IBCNBLE",63,0)
 I +$P(IB0,U,17) D EN^IBCNBLE2    ; IB*2*435 - Display e-Pharmacy ELIG response data
"RTN","IBCNBLE",64,0)
 ;
"RTN","IBCNBLE",65,0)
 D SET(" ") S IBY=$J("",26)_"Insurance Company Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",66,0)
 S IBL="Name: ",IBY=$P(IB20,U,1) S IBLINE=$$SETL("",IBY,IBL,10,30)
"RTN","IBCNBLE",67,0)
 S IBL="Reimburse?: ",IBY=$$EXPAND^IBTRE(355.33,20.05,$P(IB20,U,5)) S IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBCNBLE",68,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",69,0)
 S IBL="Phone: ",IBY=$P(IB20,U,2) S IBLINE=$$SETL(IBLINE,IBY,IBL,10,20)
"RTN","IBCNBLE",70,0)
 S IBL="Billing Phone: ",IBY=$P(IB20,U,3) S IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBCNBLE",71,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",72,0)
 S IBL="Precert Phone: ",IBY=$P(IB20,U,4) S IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBCNBLE",73,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",74,0)
 S IBL="Remote Query From: ",IBY=$$EXTERNAL^DILFD(355.33,.14,"",$P(IB0,"^",14)) S IBLINE=$$SETL(IBLINE,IBY,IBL,57,20)
"RTN","IBCNBLE",75,0)
 D SET(IBLINE) S IBLINE="" D ADDR(21,1)
"RTN","IBCNBLE",76,0)
 S IBL="Address: ",IBY=ADDR(1) S IBLINE=$$SETL(IBLINE,IBY,IBL,10,69)
"RTN","IBCNBLE",77,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",78,0)
 F IBI=2:1:9 S IBL="",IBY=$G(ADDR(IBI)) Q:IBY=""  S IBLINE=$$SETL(IBLINE,IBY,IBL,10,69) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",79,0)
 D SET(" ") S IBY=$J("",29)_"Group/Plan Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",80,0)
 S IBL="Group Plan?: ",IBY=$$YN($P(IB40,U,1)) S IBLINE=$$SETL("",IBY,IBL,16,3)
"RTN","IBCNBLE",81,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",82,0)
 S IBL="Group Name: ",IBY=$P(IB90,U,1) S IBLINE=$$SETL("",IBY,IBL,16,58) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",83,0)
 I $TR($E(IBY,59,80)," ","")'="" S IBLINE=$$SETL("",$E(IBY,59,80),"",16,22) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",84,0)
 ;
"RTN","IBCNBLE",85,0)
 S IBL="Group Number: ",IBY=$P(IB90,U,2) S IBLINE=$$SETL("",IBY,IBL,16,55)
"RTN","IBCNBLE",86,0)
 ;;Daou/EEN - Adding BIN and PCN
"RTN","IBCNBLE",87,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",88,0)
 S IBL="BIN: ",IBY=$P(IB40,U,10) S IBLINE=$$SETL("",IBY,IBL,16,10)
"RTN","IBCNBLE",89,0)
 S IBL="Require UR: ",IBY=$$YN($P(IB40,U,4)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",90,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",91,0)
 S IBL="PCN: ",IBY=$P(IB40,U,11) S IBLINE=$$SETL("",IBY,IBL,16,20)
"RTN","IBCNBLE",92,0)
 S IBL="Require Amb Cert: ",IBY=$$YN($P(IB40,U,6)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",93,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",94,0)
 S IBL="Require Pre-Cert: ",IBY=$$YN($P(IB40,U,5)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",95,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",96,0)
 ;
"RTN","IBCNBLE",97,0)
 S IBL="Type of Plan: ",IBY=$P($G(^IBE(355.1,+$P(IB40,U,9),0)),U,1) S IBLINE=$$SETL("",IBY,IBL,16,25)
"RTN","IBCNBLE",98,0)
 S IBL="Exclude Pre-Cond: ",IBY=$$YN($P(IB40,U,7)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",99,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",100,0)
 S IBL="Benefits Assignable: ",IBY=$$YN($P(IB40,U,8)) S IBLINE=$$SETL(IBLINE,IBY,IBL,63,3)
"RTN","IBCNBLE",101,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",102,0)
 ;
"RTN","IBCNBLE",103,0)
 D SET(" ") S IBY=$J("",26)_"Policy/Subscriber Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",104,0)
 S IBL="Whose Insurance: ",IBY=$$EXPAND^IBTRE(355.33,60.05,$P(IB60,U,5)) S IBLINE=$$SETL("",IBY,IBL,18,7)
"RTN","IBCNBLE",105,0)
 S IBL="Effective: ",IBY=$$DATE($P(IB60,U,2)) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,8)
"RTN","IBCNBLE",106,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",107,0)
 S IBL="Expiration: ",IBY=$$DATE($P(IB60,U,3)) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,13)
"RTN","IBCNBLE",108,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",109,0)
 S IBL="Subscriber Name: ",IBY=$P(IB91,U,1) S IBLINE=$$SETL("",IBY,IBL,18,56) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",110,0)
 I $TR($E(IBY,57,130)," ","")'="" S IBLINE=$$SETL("",$E(IBY,57,130),"",18,56) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",111,0)
 I $TR($E(IBY,113,130)," ","")'="" S IBLINE=$$SETL("",$E(IBY,113,130),"",18,18) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",112,0)
 S IBL="Subscriber Id: ",IBY=$P(IB90,U,3) S IBLINE=$$SETL("",IBY,IBL,18,56) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",113,0)
 I $TR($E(IBY,57,80)," ","")'="" S IBLINE=$$SETL("",$E(IBY,57,80),"",18,24) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",114,0)
 ;
"RTN","IBCNBLE",115,0)
 S IBL="Relationship: ",IBY=$$EXPAND^IBTRE(355.33,60.06,$P(IB60,U,6)) S IBLINE=$$SETL("",IBY,IBL,18,16)
"RTN","IBCNBLE",116,0)
 S IBL="Primary Provider: ",IBY=$P(IB60,U,10) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,17)
"RTN","IBCNBLE",117,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",118,0)
 S IBL="Provider Phone: ",IBY=$P(IB60,U,11) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,16)
"RTN","IBCNBLE",119,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",120,0)
 I $P(IB60,U,6)'="01"!($P(IB60,U,8)'="") S IBL="Insured's DOB: ",IBY=$$DATE($P(IB60,U,8)) S IBLINE=$$SETL("",IBY,IBL,18,8)
"RTN","IBCNBLE",121,0)
 S IBL="Coord of Benefits: ",IBY=$$EXPAND^IBTRE(355.33,60.12,$P(IB60,U,12)) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,16)
"RTN","IBCNBLE",122,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",123,0)
 ;
"RTN","IBCNBLE",124,0)
 I $P(IB60,U,15)'=""!($P(IB60,U,16)'="") D      ; IB*2*452 - esg - display Pharmacy fields if they exist
"RTN","IBCNBLE",125,0)
 . S IBL="Rx Relationship: ",IBY=""
"RTN","IBCNBLE",126,0)
 . N G S G=+$P(IB60,U,15)
"RTN","IBCNBLE",127,0)
 . I G S IBY=$$GET1^DIQ(9002313.19,G_",",.01)_" - "_$$GET1^DIQ(9002313.19,G_",",.02)
"RTN","IBCNBLE",128,0)
 . S IBLINE=$$SETL("",IBY,IBL,18,20)
"RTN","IBCNBLE",129,0)
 . S IBL="Rx Person Code: ",IBY=$P(IB60,U,16),IBLINE=$$SETL(IBLINE,IBY,IBL,62,10)
"RTN","IBCNBLE",130,0)
 . D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",131,0)
 . Q
"RTN","IBCNBLE",132,0)
 ;
"RTN","IBCNBLE",133,0)
 I $P(IB62,U,1)'="" S IBL="Patient Id: ",IBY=$P(IB62,U,1) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,13)
"RTN","IBCNBLE",134,0)
 I IBLINE'="" D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",135,0)
 ;
"RTN","IBCNBLE",136,0)
 I '$P(IB61,U,1) D SET(" ") S IBL="Employer Sponsored Group Health Plan?: ",IBY=$$YN($P(IB61,U,1)) S IBLINE=$$SETL("",IBY,IBL,40,3) D SET(IBLINE) S IBLINE="" G NXT
"RTN","IBCNBLE",137,0)
 ;
"RTN","IBCNBLE",138,0)
 D ADDR(61,6)
"RTN","IBCNBLE",139,0)
 D SET(" ") S IBY=$J("",24)_"Subscriber's Employer Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",140,0)
 S IBL="Employer Sponsored?: ",IBY=$$YN($P(IB61,U,1)) S IBLINE=$$SETL("",IBY,IBL,22,3)
"RTN","IBCNBLE",141,0)
 S IBL="Employment Status: ",IBY=$$EXPAND^IBTRE(355.33,61.03,$P(IB61,U,3)) S IBLINE=$$SETL(IBLINE,IBY,IBL,64,15)
"RTN","IBCNBLE",142,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",143,0)
 S IBL="Claim to Employer: ",IBY=$$YN($P(IB61,U,5)) S IBLINE=$$SETL("",IBY,IBL,22,3)
"RTN","IBCNBLE",144,0)
 S IBL="Retirement Date: ",IBY=$$DATE($P(IB61,U,4)) S IBLINE=$$SETL(IBLINE,IBY,IBL,64,8)
"RTN","IBCNBLE",145,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",146,0)
 S IBL="Employer Name: ",IBY=$P(IB61,U,2) S IBLINE=$$SETL("",IBY,IBL,16,30)
"RTN","IBCNBLE",147,0)
 S IBL="Employer Phone: ",IBY=$P(IB61,U,12) S IBLINE=$$SETL(IBLINE,IBY,IBL,64,15)
"RTN","IBCNBLE",148,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",149,0)
 S IBL="Address: ",IBY=ADDR(1) S IBLINE=$$SETL(IBLINE,IBY,IBL,16,64)
"RTN","IBCNBLE",150,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",151,0)
 F IBI=2:1:9 S IBL="",IBY=$G(ADDR(IBI)) Q:IBY=""  S IBLINE=$$SETL(IBLINE,IBY,IBL,16,64) D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",152,0)
 ;
"RTN","IBCNBLE",153,0)
NXT ;
"RTN","IBCNBLE",154,0)
 D SET(" ") S IBY=$J("",26)_"Buffer Entry Information" D SET(IBY,"B") S IBLINE=""
"RTN","IBCNBLE",155,0)
 S IBL="Date Entered: ",IBY=$$FMTE^XLFDT($P(IB0,U,1),2) S IBLINE=$$SETL("",IBY,IBL,18,17)
"RTN","IBCNBLE",156,0)
 S IBL="Date Verified: ",IBY=$$FMTE^XLFDT($P(IB0,U,10),2) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,17)
"RTN","IBCNBLE",157,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",158,0)
 S IBL="Entered By: ",IBY=$$EXPAND^IBTRE(355.33,.02,$P(IB0,U,2)) S IBLINE=$$SETL("",IBY,IBL,18,40)
"RTN","IBCNBLE",159,0)
 S IBL="Verified By: ",IBY=$$EXPAND^IBTRE(355.33,.11,$P(IB0,U,11)) S IBLINE=$$SETL(IBLINE,IBY,IBL,62,17)
"RTN","IBCNBLE",160,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",161,0)
 ; service date / service code
"RTN","IBCNBLE",162,0)
 D SERVLN(IBBUFDA,.SRVARRAY) I SRVARRAY F IBI=1:1:SRVARRAY D SET(SRVARRAY(IBI))
"RTN","IBCNBLE",163,0)
 K SRVARRAY
"RTN","IBCNBLE",164,0)
 ;
"RTN","IBCNBLE",165,0)
 S IBLINE=$$TRACE(IBLINE,IBBUFDA)       ; eIIV trace #
"RTN","IBCNBLE",166,0)
 S IBL="eIV Processed Date: ",IBY=$S($P(IB0,U,15)="":"",1:$$FMTE^XLFDT($P(IB0,U,15),"2M"))
"RTN","IBCNBLE",167,0)
 S IBLINE=$$SETL(IBLINE,IBY,IBL,62,17)
"RTN","IBCNBLE",168,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",169,0)
 S IBL="Source: ",IBY=$$EXPAND^IBTRE(355.33,.03,$P(IB0,U,3))
"RTN","IBCNBLE",170,0)
 S IBLINE=$$SETL("",IBY,IBL,18,17)
"RTN","IBCNBLE",171,0)
 D SET(IBLINE) S IBLINE=""
"RTN","IBCNBLE",172,0)
 ;
"RTN","IBCNBLE",173,0)
 ; Call another routine for continuation of list build
"RTN","IBCNBLE",174,0)
 D BLD^IBCNBLE1
"RTN","IBCNBLE",175,0)
 ;
"RTN","IBCNBLE",176,0)
BLDQ Q
"RTN","IBCNBLE",177,0)
 ;
"RTN","IBCNBLE",178,0)
 ;
"RTN","IBCNBLE",179,0)
SETL(LINE,DATA,LABEL,COL,LNG) ;
"RTN","IBCNBLE",180,0)
 S LINE=LINE_$J("",(COL-$L(LABEL)-$L(LINE)))_LABEL_$E(DATA,1,LNG)
"RTN","IBCNBLE",181,0)
 Q LINE
"RTN","IBCNBLE",182,0)
 ;
"RTN","IBCNBLE",183,0)
SET(LINE,SPEC) ;
"RTN","IBCNBLE",184,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCNBLE",185,0)
 S ^TMP("IBCNBLE",$J,VALMCNT,0)=LINE
"RTN","IBCNBLE",186,0)
 I $G(SPEC)="B" D CNTRL^VALM10(VALMCNT,1,80,IOINHI,IOINORM)
"RTN","IBCNBLE",187,0)
 Q
"RTN","IBCNBLE",188,0)
 ;
"RTN","IBCNBLE",189,0)
DATE(X) ;
"RTN","IBCNBLE",190,0)
 N Y S Y="" I X?7N.E S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCNBLE",191,0)
 Q Y
"RTN","IBCNBLE",192,0)
 ;
"RTN","IBCNBLE",193,0)
YN(X) ;
"RTN","IBCNBLE",194,0)
 N Y S X=$G(X),Y=$S(X=1:"Yes",X=0:"No",1:"")
"RTN","IBCNBLE",195,0)
 Q Y
"RTN","IBCNBLE",196,0)
 ;
"RTN","IBCNBLE",197,0)
ADDR(NODE,FLD) ; format address for output
"RTN","IBCNBLE",198,0)
 N IBY,IB0,IBCS,IBST,IBZIP,IBJ,IBZ,IBX K ADDR S ADDR(1)=""
"RTN","IBCNBLE",199,0)
 S IB0=$G(^IBA(355.33,IBBUFDA,NODE))
"RTN","IBCNBLE",200,0)
 S IBCS=$P(IB0,U,FLD+3),IBST=$P($G(^DIC(5,+$P(IB0,U,FLD+4),0)),U,2),IBZIP=$P(IB0,U,FLD+5)
"RTN","IBCNBLE",201,0)
 S IBZIP=$E(IBZIP,1,5)_$S($E(IBZIP,6,9)'="":"-"_$E(IBZIP,6,9),1:"")
"RTN","IBCNBLE",202,0)
 S IBST=IBST_$S(IBST=""!(IBZIP=""):"",1:"  ")_IBZIP
"RTN","IBCNBLE",203,0)
 S IBCS=IBCS_$S(IBCS=""!(IBST=""):"",1:", ")_IBST
"RTN","IBCNBLE",204,0)
 ;
"RTN","IBCNBLE",205,0)
 S IBJ=1 F IBY=$P(IB0,U,FLD),$P(IB0,U,(FLD+1)),$P(IB0,U,(FLD+2)),IBCS I IBY'="" S IBX=$G(ADDR(IBJ)),IBZ=", " D
"RTN","IBCNBLE",206,0)
 . S:IBX="" IBZ="" S:($L(IBX)+2+$L(IBY))>64 IBZ="",IBJ=IBJ+1
"RTN","IBCNBLE",207,0)
 . S ADDR(IBJ)=$G(ADDR(IBJ))_IBZ_IBY
"RTN","IBCNBLE",208,0)
 Q
"RTN","IBCNBLE",209,0)
 ;
"RTN","IBCNBLE",210,0)
TRACE(IBLINE,IBBUFDA) ; Add the eIIV Trace Number to the display
"RTN","IBCNBLE",211,0)
 NEW RESP,TRACENUM,IBL,IBY
"RTN","IBCNBLE",212,0)
 I '$G(IBBUFDA) G TRACEX
"RTN","IBCNBLE",213,0)
 S RESP=$O(^IBCN(365,"AF",IBBUFDA,""),-1)          ; response ien
"RTN","IBCNBLE",214,0)
 S TRACENUM=""
"RTN","IBCNBLE",215,0)
 I RESP S TRACENUM=$P($G(^IBCN(365,RESP,0)),U,9)   ; trace# field
"RTN","IBCNBLE",216,0)
 S IBL="eIV Trace #: ",IBY=TRACENUM               ; field label/data
"RTN","IBCNBLE",217,0)
 S IBLINE=$$SETL("",IBY,IBL,18,17)             ; add it
"RTN","IBCNBLE",218,0)
TRACEX ;
"RTN","IBCNBLE",219,0)
 Q IBLINE
"RTN","IBCNBLE",220,0)
 ;
"RTN","IBCNBLE",221,0)
SERVLN(IBBUFDA,SRVARRAY) ; create a service date/service type line for the display
"RTN","IBCNBLE",222,0)
 N NODE0,RIEN,SRVCODE,SRVDT,SRVSTR,TQIEN
"RTN","IBCNBLE",223,0)
 S SRVSTR=""
"RTN","IBCNBLE",224,0)
 I '$G(IBBUFDA) G SERVLNX
"RTN","IBCNBLE",225,0)
 ;IB*2.0*519 Start: Fix retrieving RIEN and TQIEN so display gets correct values
"RTN","IBCNBLE",226,0)
 S RIEN=+$O(^IBCN(365,"AF",IBBUFDA,""))
"RTN","IBCNBLE",227,0)
 S TQIEN=+$O(^IBCN(365.1,"D",IBBUFDA,""),-1)
"RTN","IBCNBLE",228,0)
 I TQIEN=0 S TQIEN=$P($G(^IBCN(365,RIEN,0)),U,5)
"RTN","IBCNBLE",229,0)
 ;IB*2.0*519 End: Fix retrieving RIEN and TQIEN so display gets correct values
"RTN","IBCNBLE",230,0)
 ;
"RTN","IBCNBLE",231,0)
 S (SRVDT,SRVCODE)="" I TQIEN D
"RTN","IBCNBLE",232,0)
 .S NODE0=$G(^IBCN(365.1,TQIEN,0)),SRVCODE=$P(NODE0,U,20)
"RTN","IBCNBLE",233,0)
 .;S RIEN=+$O(^IBCN(365,"AF",IBBUFDA,""))  ;IB*2.0*519: RIEN already retrieved above
"RTN","IBCNBLE",234,0)
 .I RIEN S SRVDT=$P($G(^IBCN(365,RIEN,1)),U,10) ; try to get service date from file 365
"RTN","IBCNBLE",235,0)
 .I SRVDT="" S SRVDT=$P(NODE0,U,12) ; if unsuccessful, get it from file 365.1
"RTN","IBCNBLE",236,0)
 .Q
"RTN","IBCNBLE",237,0)
 S SRVSTR="** This response is based on service date "_$S(SRVDT:$$FMTE^XLFDT(SRVDT,"5Z"),1:"UNKNOWN")
"RTN","IBCNBLE",238,0)
 S SRVSTR=SRVSTR_" and service type: "_$S(SRVCODE:$P($G(^IBE(365.013,SRVCODE,0)),U,2),1:"UNKNOWN")_" **"
"RTN","IBCNBLE",239,0)
SERVLNX ;
"RTN","IBCNBLE",240,0)
 D FSTRNG^IBJU1(SRVSTR,79,.SRVARRAY)
"RTN","IBCNBLE",241,0)
 Q
"RTN","IBCNBLL")
0^96^B144703884
"RTN","IBCNBLL",1,0)
IBCNBLL ;ALB/ARH - Ins Buffer: LM main screen, list buffer entries ;1 Jun 97
"RTN","IBCNBLL",2,0)
 ;;2.0;INTEGRATED BILLING;**82,149,153,183,184,271,345,416,438,435,506,519,528**;21-MAR-94;Build 163
"RTN","IBCNBLL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBLL",4,0)
 ;
"RTN","IBCNBLL",5,0)
 ; DBIA# 642 for call to $$LST^DGMTU
"RTN","IBCNBLL",6,0)
 ; DBIA# 4433 for call to $$SDAPI^SDAMA301
"RTN","IBCNBLL",7,0)
 ;
"RTN","IBCNBLL",8,0)
EN ; - main entry point for screen
"RTN","IBCNBLL",9,0)
 N VIEW,AVIEW,DFLG,IBKEYS
"RTN","IBCNBLL",10,0)
 S VIEW=6,AVIEW=0 ; default to complete view ;IB*2*506/taz changed
"RTN","IBCNBLL",11,0)
 K ^TMP("IBCNERTQ",$J) ; clear temp. global for eIV real time inquiries
"RTN","IBCNBLL",12,0)
 D EN^VALM("IBCNB INSURANCE BUFFER LIST")
"RTN","IBCNBLL",13,0)
 Q
"RTN","IBCNBLL",14,0)
 ;
"RTN","IBCNBLL",15,0)
EN1(V) ; entry point from view changing actions
"RTN","IBCNBLL",16,0)
 S VIEW=V S AVIEW=$S(VIEW=4:1,1:0)
"RTN","IBCNBLL",17,0)
 D INIT,HDR
"RTN","IBCNBLL",18,0)
 S VALMBCK="R",VALMBG=1
"RTN","IBCNBLL",19,0)
 Q
"RTN","IBCNBLL",20,0)
 ;
"RTN","IBCNBLL",21,0)
HDR ;  header code for list manager display
"RTN","IBCNBLL",22,0)
 S VALMHDR(1)="Sorted by: "_$P(IBCNSORT,U,2)
"RTN","IBCNBLL",23,0)
 I $P(IBCNSORT,U,3)'="" S VALMHDR(1)=VALMHDR(1)_", """_$P(IBCNSORT,U,3)_""" first"
"RTN","IBCNBLL",24,0)
 I VIEW=1 S VALM("TITLE")="Positive Insurance Buffer",VALMSG="*Verified    +Active" ;IB*2*506/taz Only shows Verified and Active records.
"RTN","IBCNBLL",25,0)
 I VIEW=2 S VALM("TITLE")="Negative Insurance Buffer",VALMSG="*Verified    -N/Active"  ;IB*2*506/taz Only shows Verified and N/Active records.
"RTN","IBCNBLL",26,0)
 I VIEW=3 S VALM("TITLE")="Medicare(WNR) Insurance Buffer",VALMSG="*Verified +Act -N/Act ?Await/R #Unclr !Unable/Send"
"RTN","IBCNBLL",27,0)
 I VIEW=4 S VALM("TITLE")="Failure Buffer",VALMSG="!Unable/Send"  ;IB*2*506/taz changed
"RTN","IBCNBLL",28,0)
 I VIEW=5 S VALM("TITLE")="e-Pharmacy Buffer",VALMSG="*Verified"     ; IB*2*435
"RTN","IBCNBLL",29,0)
 I VIEW=6 S VALM("TITLE")="Complete Buffer",VALMSG=""     ; IB*2*506/taz added
"RTN","IBCNBLL",30,0)
 I VIEW=7 S VALM("TITLE")="TRICARE/CHAMPVA",VALMSG=""   ;528/baa added
"RTN","IBCNBLL",31,0)
 Q
"RTN","IBCNBLL",32,0)
 ;
"RTN","IBCNBLL",33,0)
INIT ;  initialization for list manager list
"RTN","IBCNBLL",34,0)
 K ^TMP("IBCNBLL",$J),^TMP("IBCNBLLX",$J),^TMP("IBCNBLLY",$J),^TMP($J,"IBCNBLLS"),^TMP($J,"IBCNAPPTS")
"RTN","IBCNBLL",35,0)
 S:$G(IBCNSORT)="" IBCNSORT=$S(VIEW=1:"10^Positive Response",1:"1^Patient Name")
"RTN","IBCNBLL",36,0)
 S IBKEYS=$$GETKEYS(DUZ) ;IB*2*506/taz user must have either IB INSURANCE EDIT or IB GROUP/PLAN EDIT in order to view entries without defined insurance company entries
"RTN","IBCNBLL",37,0)
 D BLD
"RTN","IBCNBLL",38,0)
 Q
"RTN","IBCNBLL",39,0)
 ;
"RTN","IBCNBLL",40,0)
HELP ;  list manager help
"RTN","IBCNBLL",41,0)
 D FULL^VALM1
"RTN","IBCNBLL",42,0)
 S VALMBCK="R"
"RTN","IBCNBLL",43,0)
 W @IOF
"RTN","IBCNBLL",44,0)
 W !,"Flags displayed on screen if they apply to the Buffer entry:"
"RTN","IBCNBLL",45,0)
 W !,"   i - Patient has other currently effective Insurance"
"RTN","IBCNBLL",46,0)
 W !,"   I - Patient is currently admitted as an Inpatient"
"RTN","IBCNBLL",47,0)
 W !,"   E - Patient has Expired"
"RTN","IBCNBLL",48,0)
 W !,"   Y - Means Test Copay Patient"
"RTN","IBCNBLL",49,0)
 W !,"   H - Patient has Bills On Hold"
"RTN","IBCNBLL",50,0)
 W !,"   * - Buffer entry Verified by User"
"RTN","IBCNBLL",51,0)
 W !
"RTN","IBCNBLL",52,0)
 ;D PAUSE^VALM1 I 'Y Q
"RTN","IBCNBLL",53,0)
 W !,"Sources displayed on the screen if they apply to the Buffer entry:"
"RTN","IBCNBLL",54,0)
 W !,"   I - Interview"
"RTN","IBCNBLL",55,0)
 W !,"   P - Pre-registration"
"RTN","IBCNBLL",56,0)
 W !,"   M - Medicare"
"RTN","IBCNBLL",57,0)
 W !,"   D - Data Match"
"RTN","IBCNBLL",58,0)
 W !,"   E - eIV"
"RTN","IBCNBLL",59,0)
 W !,"   R - ICB"
"RTN","IBCNBLL",60,0)
 W !,"   V - IVM"
"RTN","IBCNBLL",61,0)
 W !,"   H - HMS"
"RTN","IBCNBLL",62,0)
 W !,"   C - Contract Services"
"RTN","IBCNBLL",63,0)
 W !,"   X - e-Pharmacy"           ; IB*2*435
"RTN","IBCNBLL",64,0)
 W !,"   F - Intrafacility Insurance Update" ; IB*2*528
"RTN","IBCNBLL",65,0)
 D PAUSE^VALM1 I 'Y Q
"RTN","IBCNBLL",66,0)
 ;
"RTN","IBCNBLL",67,0)
 I VIEW'=5 D     ; IB*2*435
"RTN","IBCNBLL",68,0)
 . W !,"eIV Electronic Insurance Verification Status"
"RTN","IBCNBLL",69,0)
 . W !!,"The following eIV Status indicators may appear to the left of the patient name:",!
"RTN","IBCNBLL",70,0)
 . Q
"RTN","IBCNBLL",71,0)
 ;
"RTN","IBCNBLL",72,0)
 I VIEW=1 D
"RTN","IBCNBLL",73,0)
 .W !,"      + - eIV payer response indicates this is an active policy."
"RTN","IBCNBLL",74,0)
 .W !,"      $ - Escalated active policy."
"RTN","IBCNBLL",75,0)
 .W !,"      * - Previously an active policy."
"RTN","IBCNBLL",76,0)
 .Q
"RTN","IBCNBLL",77,0)
 I VIEW=2 D
"RTN","IBCNBLL",78,0)
 .W !,"      - - eIV payer response indicates this is NOT an active policy."
"RTN","IBCNBLL",79,0)
 .W !,"      * - Previously an not active policy."
"RTN","IBCNBLL",80,0)
 .Q
"RTN","IBCNBLL",81,0)
 I $F(",3,6,7,",VIEW) D   ;528/baa
"RTN","IBCNBLL",82,0)
 .W !,"      + - eIV payer response indicates this is an active policy."
"RTN","IBCNBLL",83,0)
 .W !,"      ? - Awaiting electronic reply from eIV Payer."
"RTN","IBCNBLL",84,0)
 .W !,"      $ - Escalated Active policy."
"RTN","IBCNBLL",85,0)
 .W !,"      * - Previously either an active or not active policy."
"RTN","IBCNBLL",86,0)
 .W !,"      # - Can not determine from eIV response if coverage is Active."
"RTN","IBCNBLL",87,0)
 .W !,"          Review Response Report. Manual verification required."
"RTN","IBCNBLL",88,0)
 .W !,"      ! - eIV was unable to send an inquiry for this entry."
"RTN","IBCNBLL",89,0)
 .W !,"          Corrections required or payer not Active."
"RTN","IBCNBLL",90,0)
 .W !,"      - - eIV payer response indicates this is NOT an active policy."
"RTN","IBCNBLL",91,0)
 .W !,"<Blank> - Entry added through manual process."
"RTN","IBCNBLL",92,0)
 .Q
"RTN","IBCNBLL",93,0)
 I VIEW=4 D
"RTN","IBCNBLL",94,0)
 .W !,"      ! - eIV was unable to send an inquiry for this entry."
"RTN","IBCNBLL",95,0)
 .W !,"          Corrections required or payer not Active."
"RTN","IBCNBLL",96,0)
 .Q
"RTN","IBCNBLL",97,0)
 ;
"RTN","IBCNBLL",98,0)
 I VIEW=5 D      ; IB*2*435
"RTN","IBCNBLL",99,0)
 . W !,"      e-Pharmacy buffer entries are not applicable for e-IV processing."
"RTN","IBCNBLL",100,0)
 . Q
"RTN","IBCNBLL",101,0)
 ;
"RTN","IBCNBLL",102,0)
 D PAUSE^VALM1 I 'Y Q
"RTN","IBCNBLL",103,0)
 W !,"When an entry is Processed it is either:"
"RTN","IBCNBLL",104,0)
 W !,"   Accepted - the Buffer entry's data is stored in the main Insurance files."
"RTN","IBCNBLL",105,0)
 W !,"            - the modified Insurance entry is flagged as Verified."
"RTN","IBCNBLL",106,0)
 W !
"RTN","IBCNBLL",107,0)
 W !,"   Rejected - the Buffer entry's data is not stored in the main Insurance files."
"RTN","IBCNBLL",108,0)
 W !!
"RTN","IBCNBLL",109,0)
 W !,"Once an entry is processed (either accepted or rejected) most of the data in"
"RTN","IBCNBLL",110,0)
 W !,"the Buffer File entry is deleted leaving only a stub entry for tracking"
"RTN","IBCNBLL",111,0)
 W !,"and reporting purposes."
"RTN","IBCNBLL",112,0)
 W !!
"RTN","IBCNBLL",113,0)
 W !,"The IB INSURANCE SUPERVISOR key is required to either Accept or Reject an entry."
"RTN","IBCNBLL",114,0)
 D PAUSE^VALM1
"RTN","IBCNBLL",115,0)
 Q
"RTN","IBCNBLL",116,0)
 ;
"RTN","IBCNBLL",117,0)
EXIT ;  exit list manager option and clean up
"RTN","IBCNBLL",118,0)
 K ^TMP("IBCNBLL",$J),^TMP("IBCNBLLX",$J),^TMP("IBCNBLLY",$J),^TMP($J,"IBCNBLLS"),^TMP($J,"SDAMA301"),^TMP($J,"IBCNAPPTS")
"RTN","IBCNBLL",119,0)
 K IBCNSORT,IBCNSCRN,DFN,IBINSDA,IBFASTXT,IBBUFDA
"RTN","IBCNBLL",120,0)
 D CLEAR^VALM1
"RTN","IBCNBLL",121,0)
 Q
"RTN","IBCNBLL",122,0)
 ;
"RTN","IBCNBLL",123,0)
BLD ;  build screen display
"RTN","IBCNBLL",124,0)
 N IBCNT,IBCNS1,IBCNS2,IBBUFDA,IBLINE
"RTN","IBCNBLL",125,0)
 ;
"RTN","IBCNBLL",126,0)
 D SORT S IBCNT=0,VALMCNT=0,IBBUFDA=0
"RTN","IBCNBLL",127,0)
 ;
"RTN","IBCNBLL",128,0)
 S IBCNS1="" F  S IBCNS1=$O(^TMP($J,"IBCNBLLS",IBCNS1)) Q:IBCNS1=""  D
"RTN","IBCNBLL",129,0)
 .S IBCNS2="" F  S IBCNS2=$O(^TMP($J,"IBCNBLLS",IBCNS1,IBCNS2)) Q:IBCNS2=""  D
"RTN","IBCNBLL",130,0)
 ..S IBBUFDA=0 F  S IBBUFDA=$O(^TMP($J,"IBCNBLLS",IBCNS1,IBCNS2,IBBUFDA)) Q:'IBBUFDA  D
"RTN","IBCNBLL",131,0)
 ...S DFLG=^TMP($J,"IBCNBLLS",IBCNS1,IBCNS2,IBBUFDA)
"RTN","IBCNBLL",132,0)
 ...S IBCNT=IBCNT+1 I '$D(ZTQUEUED),'(IBCNT#15) W "."
"RTN","IBCNBLL",133,0)
 ...S IBLINE=$$BLDLN(IBBUFDA,IBCNT,DFLG) I IBLINE="" S IBCNT=IBCNT-1 Q  ; IB*2*506/taz If line is null stop processing this entry.
"RTN","IBCNBLL",134,0)
 ...D SET(IBLINE,IBCNT)
"RTN","IBCNBLL",135,0)
 ;
"RTN","IBCNBLL",136,0)
 I VALMCNT=0 D SET("",0),SET("There are no Buffer entries that have not been processed.",0)
"RTN","IBCNBLL",137,0)
 Q
"RTN","IBCNBLL",138,0)
 ;
"RTN","IBCNBLL",139,0)
BLDLN(IBBUFDA,IBCNT,DFLG) ; build line to display on List screen for one Buffer entry
"RTN","IBCNBLL",140,0)
 N DFN,IB0,IB20,IB60,IBLINE,IBY,VAIN,VADM,VA,VAERR,X,Y,IBMTS S IBLINE="",IBBUFDA=+$G(IBBUFDA)
"RTN","IBCNBLL",141,0)
 S IB0=$G(^IBA(355.33,IBBUFDA,0)),IB20=$G(^IBA(355.33,IBBUFDA,20)),IB60=$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBLL",142,0)
 S DFN=+IB60 I +DFN D DEM^VADPT,INP^VADPT
"RTN","IBCNBLL",143,0)
 ;
"RTN","IBCNBLL",144,0)
 I 'IBKEYS,'$$ACTIVE(DFN) G BLDLNQ  ;IB*2*506/taz Only allow active insurance for users not holding IB INSURANCE EDIT or IB GROUP/PLAN EDIT keys
"RTN","IBCNBLL",145,0)
 ;
"RTN","IBCNBLL",146,0)
 S IBY=$G(IBCNT),IBLINE=$$SETSTR^VALM1(IBY,"",1,4)
"RTN","IBCNBLL",147,0)
 ;
"RTN","IBCNBLL",148,0)
 ; ESG - 6/6/02 - SDD 5.1.8
"RTN","IBCNBLL",149,0)
 ; pull the symbol from the symbol function
"RTN","IBCNBLL",150,0)
 ;
"RTN","IBCNBLL",151,0)
 S IBY=$$SYMBOL(IBBUFDA)
"RTN","IBCNBLL",152,0)
 I IBY="*" S IBY=" "  ;528/baa
"RTN","IBCNBLL",153,0)
 S IBY=IBY_$P($G(^DPT(+DFN,0)),U,1),IBLINE=$$SETSTR^VALM1(IBY,IBLINE,5,20)
"RTN","IBCNBLL",154,0)
 S IBLINE=$$SETSTR^VALM1(DFLG,IBLINE,25,1)
"RTN","IBCNBLL",155,0)
 S IBY=$G(VA("BID")),IBLINE=$$SETSTR^VALM1(IBY,IBLINE,27,4)
"RTN","IBCNBLL",156,0)
 S IBY=$P(IB20,U,1),IBLINE=$$SETSTR^VALM1(IBY,IBLINE,32,17)
"RTN","IBCNBLL",157,0)
 S IBY=$P(IB60,U,4),IBLINE=$$SETSTR^VALM1(IBY,IBLINE,50,13)
"RTN","IBCNBLL",158,0)
 S IBY=$$GET1^DIQ(355.12,$P(IB0,U,3),.03),IBLINE=$$SETSTR^VALM1($$SRCCNV(IBY),IBLINE,64,1)
"RTN","IBCNBLL",159,0)
 S IBY=$$DATE(+IB0),IBLINE=$$SETSTR^VALM1(IBY,IBLINE,66,8)
"RTN","IBCNBLL",160,0)
 S IBY="" D  S IBLINE=$$SETSTR^VALM1(IBY,IBLINE,76,5)
"RTN","IBCNBLL",161,0)
 . S IBY=IBY_$S(+$$INSURED^IBCNS1(DFN,DT):"i",1:" ")
"RTN","IBCNBLL",162,0)
 . S IBY=IBY_$S(+$G(VAIN(1)):"I",1:" ")
"RTN","IBCNBLL",163,0)
 . S IBY=IBY_$S(+$G(VADM(6)):"E",1:" ")
"RTN","IBCNBLL",164,0)
 . S IBMTS=$P($$LST^DGMTU(DFN),U,4)
"RTN","IBCNBLL",165,0)
 . S IBY=IBY_$S(IBMTS="C":"Y",IBMTS="G":"Y",1:" ")
"RTN","IBCNBLL",166,0)
 . S IBY=IBY_$S(+$$HOLD(DFN):"H",1:" ")
"RTN","IBCNBLL",167,0)
BLDLNQ ; IB*2*506/taz Tag added
"RTN","IBCNBLL",168,0)
 Q IBLINE
"RTN","IBCNBLL",169,0)
 ;
"RTN","IBCNBLL",170,0)
SET(LINE,CNT) ;  set up list manager screen display array
"RTN","IBCNBLL",171,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCNBLL",172,0)
 S ^TMP("IBCNBLL",$J,VALMCNT,0)=LINE Q:'CNT
"RTN","IBCNBLL",173,0)
 S ^TMP("IBCNBLL",$J,"IDX",VALMCNT,+CNT)=""
"RTN","IBCNBLL",174,0)
 S ^TMP("IBCNBLLX",$J,CNT)=VALMCNT_U_IBBUFDA
"RTN","IBCNBLL",175,0)
 S ^TMP("IBCNBLLY",$J,IBBUFDA)=VALMCNT_U_+CNT
"RTN","IBCNBLL",176,0)
 Q
"RTN","IBCNBLL",177,0)
 ;
"RTN","IBCNBLL",178,0)
SORT ;  set up sort for list screen
"RTN","IBCNBLL",179,0)
 ;  1^Patient Name, 2^Ins Name, 3^Source Of Info, 4^Date Entered, 5^Inpatient (Y/N), 6^Means Test (Y/N), 7^On Hold, 8^Verified, 9^eIV Status, 10^Positive Response
"RTN","IBCNBLL",180,0)
 N APPTNUM,IB0,IB20,IB60,IBCNDT,IBBUFDA,IBCNDFN,IBCNPAT,IBCSORT1,IBCSORT2,IBSDA,DFN,VAIN,VA,VAERR,IBX,IBCNT,INAME,SYM,MWNRFLG,MWNRIEN,X,Y
"RTN","IBCNBLL",181,0)
 S IBCNT=0
"RTN","IBCNBLL",182,0)
 ;
"RTN","IBCNBLL",183,0)
 K ^TMP($J,"IBCNBLLS") I '$G(IBCNSORT) S IBCNSORT="1^Patient Name"
"RTN","IBCNBLL",184,0)
 ; get payer ien for Medicare WNR
"RTN","IBCNBLL",185,0)
 S MWNRIEN=$P($G(^IBE(350.9,1,51)),U,25)
"RTN","IBCNBLL",186,0)
 ;
"RTN","IBCNBLL",187,0)
 S IBCNDT=0 F  S IBCNDT=$O(^IBA(355.33,"AEST","E",IBCNDT)) Q:'IBCNDT  D
"RTN","IBCNBLL",188,0)
 .S IBBUFDA=0 F  S IBBUFDA=$O(^IBA(355.33,"AEST","E",IBCNDT,IBBUFDA)) Q:'IBBUFDA  D
"RTN","IBCNBLL",189,0)
 ..S IBCNT=IBCNT+1 I '$D(ZTQUEUED),'(IBCNT#15) W "."
"RTN","IBCNBLL",190,0)
 ..S IB0=$G(^IBA(355.33,IBBUFDA,0)),IB20=$G(^IBA(355.33,IBBUFDA,20)),IB60=$G(^IBA(355.33,IBBUFDA,60))
"RTN","IBCNBLL",191,0)
 ..S IBCNDFN=+IB60,IBCNPAT="" I +IBCNDFN S IBCNPAT=$P($G(^DPT(IBCNDFN,0)),U,1)
"RTN","IBCNBLL",192,0)
 ..S INAME=$P(IB20,U)
"RTN","IBCNBLL",193,0)
 ..;
"RTN","IBCNBLL",194,0)
 ..I +IBCNSORT=1 S IBCSORT1=IBCNPAT
"RTN","IBCNBLL",195,0)
 ..I +IBCNSORT=2 S IBCSORT1=INAME
"RTN","IBCNBLL",196,0)
 ..I +IBCNSORT=3 S IBCSORT1=$P(IB0,U,3)
"RTN","IBCNBLL",197,0)
 ..I +IBCNSORT=4 S IBCSORT1=$P(+IB0,".",1)
"RTN","IBCNBLL",198,0)
 ..I +IBCNSORT=5 I +IBCNDFN S DFN=+IBCNDFN D INP^VADPT S IBCSORT1=$S($G(VAIN(1)):1,1:2)
"RTN","IBCNBLL",199,0)
 ..I +IBCNSORT=6 I +IBCNDFN S IBX=$P($$LST^DGMTU(IBCNDFN),U,4) S IBCSORT1=$S(IBX="C":1,IBX="G":1,1:2)
"RTN","IBCNBLL",200,0)
 ..I +IBCNSORT=7 I +IBCNDFN S IBX=$$HOLD(IBCNDFN) S IBCSORT1=$S(+IBX:1,1:2)
"RTN","IBCNBLL",201,0)
 ..I +IBCNSORT=8 S IBCSORT1=$S(+$P(IB0,U,10):1,1:2)
"RTN","IBCNBLL",202,0)
 ..; Sort by symbol and then within the symbol, sort by date entered
"RTN","IBCNBLL",203,0)
 ..; Build a numerical subscript with format ##.FM date
"RTN","IBCNBLL",204,0)
 ..S SYM=$$SYMBOL(IBBUFDA)
"RTN","IBCNBLL",205,0)
 ..I +IBCNSORT=9 S IBCSORT1=$G(IBCNSORT(1,SYM))_"."_$P(+IB0,".",1),IBCSORT1=+IBCSORT1
"RTN","IBCNBLL",206,0)
 ..;
"RTN","IBCNBLL",207,0)
 ..I +IBCNSORT=10 S IBCSORT1=$S(SYM="+":0,1:1),IBCSORT2=IBCNPAT
"RTN","IBCNBLL",208,0)
 ..;
"RTN","IBCNBLL",209,0)
 ..S IBCSORT1=$S($G(IBCSORT1)="":"~UNKNOWN",1:IBCSORT1),IBCSORT2=$S(IBCNPAT="":"~UNKNOWN",1:IBCNPAT)
"RTN","IBCNBLL",210,0)
 ..; get future appointments
"RTN","IBCNBLL",211,0)
 ..S IBSDA(1)=DT,IBSDA(3)="R;I;NT",IBSDA(4)=IBCNDFN,IBSDA("FLDS")="1;2"
"RTN","IBCNBLL",212,0)
 ..S DFLG="" ;,APPTNUM=$$SDAPI^SDAMA301(.IBSDA) I APPTNUM>0,SYM="!" S DFLG="d" ; duplicate flag ;IB*2*506 appointment data removed.
"RTN","IBCNBLL",213,0)
 ..S MWNRFLG=0 I MWNRIEN'="",$P($$INSERROR^IBCNEUT3("B",IBBUFDA),U,2)=MWNRIEN S MWNRFLG=1
"RTN","IBCNBLL",214,0)
 ..I $$INCL(VIEW,MWNRFLG,SYM,IB0) S ^TMP($J,"IBCNBLLS",IBCSORT1,IBCSORT2,IBBUFDA)=DFLG
"RTN","IBCNBLL",215,0)
 ..K VAIN,IBCSORT1,IBCSORT2
"RTN","IBCNBLL",216,0)
 ..Q
"RTN","IBCNBLL",217,0)
 .Q
"RTN","IBCNBLL",218,0)
 I IBCNT,'$D(ZTQUEUED) W "|"
"RTN","IBCNBLL",219,0)
 Q
"RTN","IBCNBLL",220,0)
 ;
"RTN","IBCNBLL",221,0)
INCL(VIEW,MCFLAG,SYM,IB0) ;
"RTN","IBCNBLL",222,0)
 N INCL,IENS,IBEBI
"RTN","IBCNBLL",223,0)
 S INCL=0
"RTN","IBCNBLL",224,0)
 I 'IBKEYS,(SYM'="+") G INCLQ ; If users don't have the required keys, they can only see current Positive Entries
"RTN","IBCNBLL",225,0)
 I VIEW=6 S INCL=1 G INCLQ  ;Include Everything  (Complete view)
"RTN","IBCNBLL",226,0)
 I VIEW=7,((INAME["TRICARE")!(INAME["CHAMPVA")) S INCL=1 G INCLQ  ; Tricare/Champva;528/baa
"RTN","IBCNBLL",227,0)
 I VIEW=5,$P(IB0,U,17) S INCL=1 G INCLQ  ;Only e-Pharmacy on e-Pharmacy view (IB*2*435)
"RTN","IBCNBLL",228,0)
 I $P(IB0,U,17) G INCLQ  ;Exclude e-Pharmacy (IB*2*435)
"RTN","IBCNBLL",229,0)
 I VIEW=3,MCFLAG S INCL=1 G INCLQ ;Only Medicare View
"RTN","IBCNBLL",230,0)
 I MCFLAG G INCLQ  ;Exclude Medicare from Positive, Negative and Failure Views
"RTN","IBCNBLL",231,0)
 I VIEW=4,(SYM="!") S INCL=1 G INCLQ  ;Only failures on Failure view
"RTN","IBCNBLL",232,0)
 I VIEW=1,((SYM="+")!(SYM="$")) S INCL=1 G INCLQ  ;Positive View
"RTN","IBCNBLL",233,0)
 I VIEW=2,(SYM="-") S INCL=1 G INCLQ  ;Negative View
"RTN","IBCNBLL",234,0)
 I SYM="*" D  G INCLQ
"RTN","IBCNBLL",235,0)
 . ;find history in Response file for verified entries.
"RTN","IBCNBLL",236,0)
 . I $$GET1^DIQ(355.33,IBBUFDA,.15)="" S:(VIEW=1) INCL=1 Q  ;IIV PROCESSED DATE field is empty entry is positive
"RTN","IBCNBLL",237,0)
 . S IENS="1,"_$O(^IBCN(365,"AF",IBBUFDA,""))_","
"RTN","IBCNBLL",238,0)
 . ;the following line of code is necessary to check for both "eIV Eligibility Determination" and "IIV Eligibility Determination" (IB*2.0*506)
"RTN","IBCNBLL",239,0)
 . I $$GET1^DIQ(365.02,IENS,.06)["IV Eligibility Determination" Q
"RTN","IBCNBLL",240,0)
 . S IBEBI=$$GET1^DIQ(365.02,IENS,.02)  ;Eligibility/Benefits Info
"RTN","IBCNBLL",241,0)
 . I IBEBI=1 S:(VIEW=1) INCL=1 Q
"RTN","IBCNBLL",242,0)
 . I VIEW=2 S INCL=1 Q
"RTN","IBCNBLL",243,0)
INCLQ ;
"RTN","IBCNBLL",244,0)
 Q INCL
"RTN","IBCNBLL",245,0)
 ;
"RTN","IBCNBLL",246,0)
DATE(X) ;
"RTN","IBCNBLL",247,0)
 Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCNBLL",248,0)
HOLD(DFN) ; returns true if patient has bills On Hold
"RTN","IBCNBLL",249,0)
 Q $D(^IB("AH",+$G(DFN)))
"RTN","IBCNBLL",250,0)
 ;
"RTN","IBCNBLL",251,0)
SYMBOL(IBBUFDA) ; Returns the symbol for this buffer entry
"RTN","IBCNBLL",252,0)
 NEW IB0,SYM
"RTN","IBCNBLL",253,0)
 S IB0=$G(^IBA(355.33,IBBUFDA,0)),SYM=""
"RTN","IBCNBLL",254,0)
 I +$P(IB0,U,12) S SYM=$C($P($G(^IBE(365.15,+$P(IB0,U,12),0)),U,2))
"RTN","IBCNBLL",255,0)
 ; If the entry has been manually verified, override the symbol displayed
"RTN","IBCNBLL",256,0)
 I $P(IB0,U,10)'="",'+$P(IB0,U,12) S SYM="*"
"RTN","IBCNBLL",257,0)
 I SYM="" S SYM=" "
"RTN","IBCNBLL",258,0)
 Q SYM
"RTN","IBCNBLL",259,0)
 ;
"RTN","IBCNBLL",260,0)
 ;
"RTN","IBCNBLL",261,0)
UPDLN(IBBUFDA,ACTION) ; *** called by any action that modifies a buffer entry, so list screen can be updated if screen not recompiled
"RTN","IBCNBLL",262,0)
 ; modifies a single line in the display array for a buffer entry that has been modified in some way
"RTN","IBCNBLL",263,0)
 ; ACTION = REJECTED, ACCEPTED, EDITED
"RTN","IBCNBLL",264,0)
 N IBARRN,IBOLD,IBNEW,IBO,IBN S IBO="0123456789",IBN="----------"
"RTN","IBCNBLL",265,0)
 ;
"RTN","IBCNBLL",266,0)
 S IBARRN=$G(^TMP("IBCNBLLY",$J,+$G(IBBUFDA))) Q:'IBARRN
"RTN","IBCNBLL",267,0)
 S IBOLD=$G(^TMP("IBCNBLL",$J,+IBARRN,0)) Q:IBOLD=""
"RTN","IBCNBLL",268,0)
 ;
"RTN","IBCNBLL",269,0)
 ; if action is REJECTED or ACCEPTED then the patient name is replaced by the Action in the display array
"RTN","IBCNBLL",270,0)
 ; and the buffer entry is removed from the list of entries that can be selected
"RTN","IBCNBLL",271,0)
 I (ACTION="REJECTED")!(ACTION="ACCEPTED") D
"RTN","IBCNBLL",272,0)
 . S IBNEW=$TR($E(IBOLD,1,5),IBO,IBN)_ACTION_$J("",7)_$E(IBOLD,21,999)
"RTN","IBCNBLL",273,0)
 . S ^TMP("IBCNBLL",$J,+IBARRN,0)=IBNEW
"RTN","IBCNBLL",274,0)
 ;
"RTN","IBCNBLL",275,0)
 ; if the action is EDITED then the line for the buffer entry is recomplied and the updated line is set into 
"RTN","IBCNBLL",276,0)
 ; the display array
"RTN","IBCNBLL",277,0)
 I ACTION="EDITED" D
"RTN","IBCNBLL",278,0)
 . S IBNEW=$$BLDLN(IBBUFDA,+$P(IBARRN,U,2),$E(IBOLD,25))
"RTN","IBCNBLL",279,0)
 . S ^TMP("IBCNBLL",$J,+IBARRN,0)=IBNEW
"RTN","IBCNBLL",280,0)
 Q
"RTN","IBCNBLL",281,0)
 ;
"RTN","IBCNBLL",282,0)
SRCCNV(SRC) ; convert Source of Info acronym from field 355.12/.03 into 1 char code
"RTN","IBCNBLL",283,0)
 N CODSTR,I,SRCSTR,CODE
"RTN","IBCNBLL",284,0)
 S SRCSTR="INTVW^DMTCH^IVM^PreRg^eIV^HMS^MCR^ICB^CS^eRxEL^IIU"
"RTN","IBCNBLL",285,0)
 S CODSTR="I^D^V^P^E^H^M^R^C^X^F"
"RTN","IBCNBLL",286,0)
 S CODE=""
"RTN","IBCNBLL",287,0)
 I $G(SRC)'="" F I=1:1:11 S:SRC=$P(SRCSTR,U,I) CODE=$P(CODSTR,U,I) Q:CODE'=""
"RTN","IBCNBLL",288,0)
 Q CODE
"RTN","IBCNBLL",289,0)
 ;
"RTN","IBCNBLL",290,0)
GETKEYS(DUZ) ; 
"RTN","IBCNBLL",291,0)
 ;Make sure that user has the INSURANCE EDIT key and/or the GROUP/PLAN EDIT key.  User
"RTN","IBCNBLL",292,0)
 ;must have either key in order to see non_Positive Entries.
"RTN","IBCNBLL",293,0)
 N KEY1,KEY2
"RTN","IBCNBLL",294,0)
 S KEY1=$O(^DIC(19.1,"B","IB INSURANCE COMPANY EDIT","")) I KEY1 S KEY1=$D(^VA(200,DUZ,51,KEY1))
"RTN","IBCNBLL",295,0)
 S KEY2=$O(^DIC(19.1,"B","IB GROUP PLAN EDIT","")) I KEY2 S KEY2=$D(^VA(200,DUZ,51,KEY2))
"RTN","IBCNBLL",296,0)
 Q KEY1!KEY2
"RTN","IBCNBLL",297,0)
 ;
"RTN","IBCNBLL",298,0)
ACTIVE(DFN) ;Check for active insurance
"RTN","IBCNBLL",299,0)
 N IBINSCO
"RTN","IBCNBLL",300,0)
 D ALL^IBCNS1(DFN,"IBINSCO",3,DT,0)  ;IB*2.0*519 allow WNRs and Indemnity plans
"RTN","IBCNBLL",301,0)
 Q +$G(IBINSCO(0))
"RTN","IBCNBMI")
0^128^B96670788
"RTN","IBCNBMI",1,0)
IBCNBMI ;ALB/ARH/AWC - Ins Buffer: move buffer data to insurance files ;09 Mar 2005  11:42 AM
"RTN","IBCNBMI",2,0)
 ;;2.0;INTEGRATED BILLING;**82,184,246,251,299,345,361,371,413,416,438,452,497,528**;21-MAR-94;Build 163
"RTN","IBCNBMI",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBMI",4,0)
 ;
"RTN","IBCNBMI",5,0)
INS(IBBUFDA,IBINSDA,TYPE,RESULT) ;  move buffer insurance company data (file 355.33) to existing Insurance Company (file 36)
"RTN","IBCNBMI",6,0)
 ;
"RTN","IBCNBMI",7,0)
 S IBBUFDA=IBBUFDA_",",IBINSDA=$G(IBINSDA)_","
"RTN","IBCNBMI",8,0)
 D SET("INS",IBBUFDA,IBINSDA,TYPE,.RESULT)
"RTN","IBCNBMI",9,0)
 Q
"RTN","IBCNBMI",10,0)
 ;
"RTN","IBCNBMI",11,0)
GRP(IBBUFDA,IBGRPDA,TYPE,RESULT) ;  move buffer insurance group/plan data (file 355.33) to existing Group/Plan (file 355.3)
"RTN","IBCNBMI",12,0)
 ;
"RTN","IBCNBMI",13,0)
 S IBBUFDA=IBBUFDA_",",IBGRPDA=$G(IBGRPDA)_","
"RTN","IBCNBMI",14,0)
 D SET("GRP",IBBUFDA,IBGRPDA,TYPE,.RESULT)
"RTN","IBCNBMI",15,0)
 D STUFF("GRP",IBGRPDA,.RESULT)
"RTN","IBCNBMI",16,0)
 Q
"RTN","IBCNBMI",17,0)
 ;
"RTN","IBCNBMI",18,0)
POLICY(IBBUFDA,IBPOLDA,TYPE,RESULT) ; called from routine PROCESS^IBCNBAR
"RTN","IBCNBMI",19,0)
 ; move buffer insurance policy data (file 355.33) to existing Patient Policy (file 2.312)
"RTN","IBCNBMI",20,0)
 ;
"RTN","IBCNBMI",21,0)
 N DFN S DFN=+$G(^IBA(355.33,+$G(IBBUFDA),60)) Q:'DFN
"RTN","IBCNBMI",22,0)
 ;
"RTN","IBCNBMI",23,0)
 S IBBUFDA=IBBUFDA_",",IBPOLDA=$G(IBPOLDA)_","_DFN_","
"RTN","IBCNBMI",24,0)
 D SET("POL",IBBUFDA,IBPOLDA,TYPE,.RESULT)
"RTN","IBCNBMI",25,0)
 D STUFF("POL",IBPOLDA,.RESULT)
"RTN","IBCNBMI",26,0)
 D POLOTH(IBBUFDA,IBPOLDA,.RESULT)
"RTN","IBCNBMI",27,0)
 Q
"RTN","IBCNBMI",28,0)
 ;
"RTN","IBCNBMI",29,0)
SUB(IBBUFDA,IBPOLDA,IBRIEN,IBSEL,IBTYPE,IBRESULT,DFN,IBFNAM,IBVAL,IBHOLD,IBXHOLD) ;  move patient data(file #2) <or> income person data(408.13) to existing Patient Policy (file 2.312)
"RTN","IBCNBMI",30,0)
 D SUB^IBCNBCD6(IBBUFDA,IBPOLDA,IBRIEN,IBSEL,IBTYPE,.IBRESULT,DFN,IBFNAM,IBVAL,.IBHOLD,.IBXHOLD)
"RTN","IBCNBMI",31,0)
 Q
"RTN","IBCNBMI",32,0)
 ;
"RTN","IBCNBMI",33,0)
SET(SET,IBBUFDA,IBEXTDA,TYPE,RESULT) ; move buffer data to insurance files
"RTN","IBCNBMI",34,0)
 ; Input:  IBBUFDA - ifn of Buffer File entry to move (#355.33)
"RTN","IBCNBMI",35,0)
 ;         IBEXTDA - ifn of insurance entry to update (#36,355.3,2)
"RTN","IBCNBMI",36,0)
 ;         TYPE    - 1 = Merge     (only buffer data moved to blank fields in ins file, no replace)
"RTN","IBCNBMI",37,0)
 ;                   2 = Overwrite (all buffer data moved to ins file, replace existing data)
"RTN","IBCNBMI",38,0)
 ;                   3 = Replace (all buffer data including null move to ins file)
"RTN","IBCNBMI",39,0)
 ;                   4 = Individually Accept (Skip Blanks) (user accepts
"RTN","IBCNBMI",40,0)
 ;  individual diffs b/w buffer data and existing file data (excl blanks)
"RTN","IBCNBMI",41,0)
 ;  to overwrite flds (or addr grp) in existing file)
"RTN","IBCNBMI",42,0)
 ; Output: RESULT - Passed array to return FM error message if there are
"RTN","IBCNBMI",43,0)
 ;                  errors when filing the buffer data
"RTN","IBCNBMI",44,0)
 ;
"RTN","IBCNBMI",45,0)
 N IBX,IBFLDS,EXTFILE,DRBUF,DREXT,BUFARR,EXTARR,IBBUFFLD,IBEXTFLD,IBBUFVAL,IBEXTVAL,IBCHNG,IBCHNGN,IBERR
"RTN","IBCNBMI",46,0)
 ;
"RTN","IBCNBMI",47,0)
 D FIELDS(SET_"FLD")
"RTN","IBCNBMI",48,0)
 S IBX=$P($T(@(SET_"DR")+1),";;",2),EXTFILE=+$P(IBX,U,1),DRBUF=$P(IBX,U,2),DREXT=$P(IBX,U,3)
"RTN","IBCNBMI",49,0)
 ;
"RTN","IBCNBMI",50,0)
 D GETS^DIQ(355.33,IBBUFDA,DRBUF,"E","BUFARR")
"RTN","IBCNBMI",51,0)
 D GETS^DIQ(EXTFILE,IBEXTDA,DREXT,"E","EXTARR")
"RTN","IBCNBMI",52,0)
 ;
"RTN","IBCNBMI",53,0)
 I +$G(TYPE) S IBBUFFLD=0 F  S IBBUFFLD=$O(BUFARR(355.33,IBBUFDA,IBBUFFLD)) Q:'IBBUFFLD  D
"RTN","IBCNBMI",54,0)
 . ;If not called by ACCEPAPI^IBCNICB API, don't update from these 
"RTN","IBCNBMI",55,0)
 . ;fields:
"RTN","IBCNBMI",56,0)
 . ;   Insurance Company Name - #20.01, Reimburse? - 20.05
"RTN","IBCNBMI",57,0)
 . ;   Is this a Group Policy - #40.01
"RTN","IBCNBMI",58,0)
 . I $G(IBSUPRES)'>0,"^20.01^20.05^40.01^"[("^"_IBBUFFLD_"^") Q
"RTN","IBCNBMI",59,0)
 . ;
"RTN","IBCNBMI",60,0)
 . S IBEXTFLD=$G(IBFLDS(IBBUFFLD)) Q:'IBEXTFLD
"RTN","IBCNBMI",61,0)
 . S IBBUFVAL=BUFARR(355.33,IBBUFDA,IBBUFFLD,"E")
"RTN","IBCNBMI",62,0)
 . S IBEXTVAL=$G(EXTARR(EXTFILE,IBEXTDA,IBEXTFLD,"E"))
"RTN","IBCNBMI",63,0)
 . ;
"RTN","IBCNBMI",64,0)
 . I IBBUFVAL=IBEXTVAL Q
"RTN","IBCNBMI",65,0)
 . I TYPE=1,IBEXTVAL'="" Q
"RTN","IBCNBMI",66,0)
 . I TYPE=2,IBBUFVAL="" Q
"RTN","IBCNBMI",67,0)
 . I TYPE=4,'$D(^TMP($J,"IB BUFFER SELECTED",IBBUFFLD)) Q
"RTN","IBCNBMI",68,0)
 . ;
"RTN","IBCNBMI",69,0)
 . S IBCHNG(EXTFILE,IBEXTDA,IBEXTFLD)=IBBUFVAL
"RTN","IBCNBMI",70,0)
 . ;For ACCEPAPI^IBCNICB do not delete the .01 field. This prevents a
"RTN","IBCNBMI",71,0)
 . ;Data Dictionary Deletion Write message
"RTN","IBCNBMI",72,0)
 . Q:IBEXTFLD=".01"
"RTN","IBCNBMI",73,0)
 . S IBCHNGN(EXTFILE,IBEXTDA,IBEXTFLD)=""
"RTN","IBCNBMI",74,0)
 ;
"RTN","IBCNBMI",75,0)
 I $D(IBCHNGN)>9 D FILE^DIE("E","IBCHNGN","IBERR")
"RTN","IBCNBMI",76,0)
 ;Removed delete errors and move FM errors to RESULT
"RTN","IBCNBMI",77,0)
 D:$D(IBERR)>0 REMOVDEL(.IBERR),EHANDLE(SET,.IBERR,.RESULT)
"RTN","IBCNBMI",78,0)
 K IBERR
"RTN","IBCNBMI",79,0)
 I $D(IBCHNG)>9 D FILE^DIE("E","IBCHNG","IBERR")
"RTN","IBCNBMI",80,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",81,0)
 D:$D(IBERR)>0 EHANDLE(SET,.IBERR,.RESULT)
"RTN","IBCNBMI",82,0)
 Q
"RTN","IBCNBMI",83,0)
 ;
"RTN","IBCNBMI",84,0)
STUFF(SET,IBEXTDA,RESULT) ; update fields in insurance files that 
"RTN","IBCNBMI",85,0)
 ;should be automatically set when an entry is edited
"RTN","IBCNBMI",86,0)
 ; Input:  IBEXTDA - ifn of insurance entry to update (#36,356,2)
"RTN","IBCNBMI",87,0)
 ; Output: RESULT - Passed array to return FM error message if there are
"RTN","IBCNBMI",88,0)
 ;                  errors when filing the data buffer data
"RTN","IBCNBMI",89,0)
 ;
"RTN","IBCNBMI",90,0)
 N IBX,IBFLDS,EXTFILE,IBEXTFLD,IBEXTVAL,IBCHNG,IBCHNGN,IBERR
"RTN","IBCNBMI",91,0)
 ;
"RTN","IBCNBMI",92,0)
 D FIELDS(SET_"A")
"RTN","IBCNBMI",93,0)
 S IBX=$P($T(@(SET_"DR")+1),";;",2),EXTFILE=+$P(IBX,U,1)
"RTN","IBCNBMI",94,0)
 ;
"RTN","IBCNBMI",95,0)
 S IBEXTFLD=0 F  S IBEXTFLD=$O(IBFLDS(IBEXTFLD)) Q:'IBEXTFLD  D
"RTN","IBCNBMI",96,0)
 . S IBEXTVAL=IBFLDS(IBEXTFLD) I IBEXTVAL="DUZ" S IBEXTVAL="`"_DUZ
"RTN","IBCNBMI",97,0)
 . S IBCHNG(EXTFILE,IBEXTDA,IBEXTFLD)=IBEXTVAL
"RTN","IBCNBMI",98,0)
 . S IBCHNGN(EXTFILE,IBEXTDA,IBEXTFLD)=""
"RTN","IBCNBMI",99,0)
 ;
"RTN","IBCNBMI",100,0)
 D FILE^DIE("E","IBCHNGN","IBERR")
"RTN","IBCNBMI",101,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",102,0)
 D:$D(IBERR)>0 EHANDLE(SET,.IBERR,.RESULT)
"RTN","IBCNBMI",103,0)
 K IBERR
"RTN","IBCNBMI",104,0)
 D FILE^DIE("E","IBCHNG","IBERR")
"RTN","IBCNBMI",105,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",106,0)
 D:$D(IBERR)>0 EHANDLE(SET,.IBERR,.RESULT)
"RTN","IBCNBMI",107,0)
 Q
"RTN","IBCNBMI",108,0)
 ;
"RTN","IBCNBMI",109,0)
FIELDS(SET) ; return array of corresponding fields: IBFLDS(Buffer #)=Ins #
"RTN","IBCNBMI",110,0)
 N IBI,IBLN,IBB,IBE,IBG K IBFLDS,IBADDS,IBLBLS
"RTN","IBCNBMI",111,0)
 F IBI=1:1 S IBLN=$P($T(@(SET)+IBI),";;",2) Q:IBLN=""  I $E(IBLN,1)'=" " D
"RTN","IBCNBMI",112,0)
 . S IBB=$P(IBLN,U,1),IBE=$P(IBLN,U,2),IBG=$P(IBLN,U,4)
"RTN","IBCNBMI",113,0)
 . I IBB'="",IBE'="" D
"RTN","IBCNBMI",114,0)
 .. S IBFLDS(IBB)=IBE
"RTN","IBCNBMI",115,0)
 .. I SET["FLD" S IBLBLS(IBB)=$P(IBLN,U,3) I +IBG S IBADDS(IBB)=IBE
"RTN","IBCNBMI",116,0)
 Q
"RTN","IBCNBMI",117,0)
 ;
"RTN","IBCNBMI",118,0)
INSDR ;
"RTN","IBCNBMI",119,0)
 ;;36^20.01:20.05;21.01:21.06^.01;.131;.132;.133;.111:.116;1
"RTN","IBCNBMI",120,0)
INSFLD ; corresponding fields: Buffer File (355.33) & Insurance Company file (36)
"RTN","IBCNBMI",121,0)
 ;;20.01^.01^Insurance Company Name^  ; Name
"RTN","IBCNBMI",122,0)
 ;;20.02^.131^Phone Number^           ; MM Phone Number
"RTN","IBCNBMI",123,0)
 ;;20.03^.132^Billing Phone^          ; Billing Phone Number
"RTN","IBCNBMI",124,0)
 ;;20.04^.133^Pre-Cert Phone^         ; Pre-Certification Phone Number
"RTN","IBCNBMI",125,0)
 ;;20.05^1^Reimburse?^                ; Will Reimburse?
"RTN","IBCNBMI",126,0)
 ;;21.01^.111^Street [Line 1]^1       ; MM Street Address [Line 1]
"RTN","IBCNBMI",127,0)
 ;;21.02^.112^Street [Line 2]^1       ; MM Street Address [Line 2]
"RTN","IBCNBMI",128,0)
 ;;21.03^.113^Street [Line 3]^1       ; MM Street Address [Line 3]
"RTN","IBCNBMI",129,0)
 ;;21.04^.114^City^1                  ; MM City
"RTN","IBCNBMI",130,0)
 ;;21.05^.115^State^1                 ; MM State
"RTN","IBCNBMI",131,0)
 ;;21.06^.116^Zip^1                   ; MM Zip Code
"RTN","IBCNBMI",132,0)
 ;
"RTN","IBCNBMI",133,0)
GRPDR ;
"RTN","IBCNBMI",134,0)
 ;;355.3^40.01;90.01;90.02;40.04:40.09;40.1;40.11;^.02;2.01;2.02;.05:.09;6.02;6.03;.12
"RTN","IBCNBMI",135,0)
GRPFLD ;corresponding fields:  Buffer File (355.33) and Insurance Group Plan file (355.3)
"RTN","IBCNBMI",136,0)
 ;;40.01^.02^Is This a Group Policy?^ ; Is this a Group Policy?
"RTN","IBCNBMI",137,0)
 ;;90.01^2.01^Group Name^              ; Group Name
"RTN","IBCNBMI",138,0)
 ;;90.02^2.02^Group Number^            ; Group Number
"RTN","IBCNBMI",139,0)
 ;;40.1^6.02^BIN^                     ; BIN ;;Daou/EEN
"RTN","IBCNBMI",140,0)
 ;;40.11^6.03^PCN^                    ; PCN ;;Daou/EEN
"RTN","IBCNBMI",141,0)
 ;;40.04^.05^Require UR^              ; Utilization Review Required
"RTN","IBCNBMI",142,0)
 ;;40.05^.06^Require Pre-Cert^        ; Pre-Certification Required
"RTN","IBCNBMI",143,0)
 ;;40.06^.12^Require Amb Cert^        ; Ambulatory Care Certification
"RTN","IBCNBMI",144,0)
 ;;40.07^.07^Exclude Pre-Cond^        ; Exclude Pre-Existing Conditions
"RTN","IBCNBMI",145,0)
 ;;40.08^.08^Benefits Assign^         ; Benefits Assignable
"RTN","IBCNBMI",146,0)
 ;;40.09^.09^Type of Plan^            ; Type of Plan
"RTN","IBCNBMI",147,0)
 ;
"RTN","IBCNBMI",148,0)
GRPA ; auto set fields
"RTN","IBCNBMI",149,0)
 ;;1.05^NOW^                          ; Date Last Edited
"RTN","IBCNBMI",150,0)
 ;;1.06^DUZ^                          ; Last edited By
"RTN","IBCNBMI",151,0)
 ;
"RTN","IBCNBMI",152,0)
POLDR ;
"RTN","IBCNBMI",153,0)
 ;;2.312^60.02;60.03;90.03;60.05;60.06;91.01;60.08:62.09^8;3;7.02;6;16;7.01;3.01;3.05:3.1;3.11;3.13;3.14;4.01;4.02;4.05;4.06;.2;3.12;2.1;2.015;2.11;2.12;2.01:2.08;5.01
"RTN","IBCNBMI",154,0)
POLFLD ; corresponding fields:  Buffer File (355.33) and Insurance Patient Policy file (2.312)
"RTN","IBCNBMI",155,0)
 ;;60.02^8^Effective Date^            ; Effective Date
"RTN","IBCNBMI",156,0)
 ;;60.03^3^Expiration Date^           ; Expiration Date
"RTN","IBCNBMI",157,0)
 ;;90.03^7.02^Subscriber Id^             ; Subscriber Id
"RTN","IBCNBMI",158,0)
 ;;60.05^6^Whose Insurance^           ; Whose Insurance
"RTN","IBCNBMI",159,0)
 ;;60.06^16^Relationship^             ; Pt. Relationship to Insured
"RTN","IBCNBMI",160,0)
 ;;91.01^7.01^Name of Insured^          ; Name of Insured
"RTN","IBCNBMI",161,0)
 ;;60.08^3.01^Insured's DOB^          ; Insured's DOB
"RTN","IBCNBMI",162,0)
 ;;60.09^3.05^Insured's SSN^          ; Insured's SSN
"RTN","IBCNBMI",163,0)
 ;;60.1^4.01^Primary Provider^        ; Primary Care Provider
"RTN","IBCNBMI",164,0)
 ;;60.11^4.02^Provider Phone^         ; Primary Care Provider Phone
"RTN","IBCNBMI",165,0)
 ;;60.12^.2^Coor of Benefits^         ; Coordination of Benefits
"RTN","IBCNBMI",166,0)
 ;;60.13^3.12^Insured's Sex^          ; Insured's Sex
"RTN","IBCNBMI",167,0)
 ;;60.15^4.05^Rx Relationship^        ; Pharmacy Relationship Code  IB*2*452
"RTN","IBCNBMI",168,0)
 ;;60.16^4.06^Rx Person Code^         ; Pharmacy Person Code        IB*2*452
"RTN","IBCNBMI",169,0)
 ;;  
"RTN","IBCNBMI",170,0)
 ;;61.01^2.1^Emp Sponsored^           ; ESGHP?
"RTN","IBCNBMI",171,0)
 ;;61.02^2.015^Employer Name^         ; Subscriber's Employer Name
"RTN","IBCNBMI",172,0)
 ;;61.03^2.11^Emp Status^             ; Employment Status
"RTN","IBCNBMI",173,0)
 ;;61.04^2.12^Retirement Date^        ; Retirement Date
"RTN","IBCNBMI",174,0)
 ;;61.05^2.01^Send to Employer^       ; Send Bill to Employer?
"RTN","IBCNBMI",175,0)
 ;;61.06^2.02^Emp Street Ln 1^1       ; Employer Claims Street Line 1
"RTN","IBCNBMI",176,0)
 ;;61.07^2.03^Emp Street Ln 2^1       ; Employer Claims Street Line 2
"RTN","IBCNBMI",177,0)
 ;;61.08^2.04^Emp Street Ln 3^1       ; Employer Claims Street Line 3
"RTN","IBCNBMI",178,0)
 ;;61.09^2.05^Emp City^1              ; Employer Claims City
"RTN","IBCNBMI",179,0)
 ;;61.1^2.06^Emp State^1              ; Employer Claims State
"RTN","IBCNBMI",180,0)
 ;;61.11^2.07^Emp Zip Code^1          ; Employer Claims Zip Code
"RTN","IBCNBMI",181,0)
 ;;61.12^2.08^Emp Phone^              ; Employer Claims Phone
"RTN","IBCNBMI",182,0)
 ;;62.01^5.01^Patient Id^             ; Patient Id
"RTN","IBCNBMI",183,0)
 ;;62.02^3.06^Subscr Addr Ln 1^       ; Subscriber Address Line 1
"RTN","IBCNBMI",184,0)
 ;;62.03^3.07^Subscr Addr Ln 2^       ; Subscriber Address Line 2
"RTN","IBCNBMI",185,0)
 ;;62.04^3.08^Subscr City^            ; Subscriber City
"RTN","IBCNBMI",186,0)
 ;;62.05^3.09^Subscr State^           ; Subscriber State
"RTN","IBCNBMI",187,0)
 ;;62.06^3.1^Subscr Zip^              ; Subscriber Zip Code
"RTN","IBCNBMI",188,0)
 ;;62.09^3.11^Subscr Phone^           ; Subscriber Phone Number  IB*2.0*528
"RTN","IBCNBMI",189,0)
 ;;62.07^3.13^Subscr Country^         ; Subscriber Country Code
"RTN","IBCNBMI",190,0)
 ;;62.08^3.14^Subscr Cntry Div^       ; Subscriber Country Subdivision Code
"RTN","IBCNBMI",191,0)
 ;
"RTN","IBCNBMI",192,0)
POLA ; auto set fields
"RTN","IBCNBMI",193,0)
 ;;1.03^NOW^                          ; Date Last Verified (default is person that accepts entry)
"RTN","IBCNBMI",194,0)
 ;;1.04^DUZ^                          ; Verified By        (default is person that accepts entry)
"RTN","IBCNBMI",195,0)
 ;;1.05^NOW^                          ; Date Last Edited
"RTN","IBCNBMI",196,0)
 ;;1.06^DUZ^                          ; Last Edited By
"RTN","IBCNBMI",197,0)
 ;
"RTN","IBCNBMI",198,0)
POLOTH(IBBUFDA,IBPOLDA,RESULT) ; other special cases that can not be transferred using the generic code above, usually because of dependencies
"RTN","IBCNBMI",199,0)
 N IBERR,IB0 S IB0=$G(^IBA(355.33,+IBBUFDA,0))
"RTN","IBCNBMI",200,0)
 ;
"RTN","IBCNBMI",201,0)
 ;  --- if buffer entry was verified before the accept step, then add the correct verifier info to the policy
"RTN","IBCNBMI",202,0)
 I +$P(IB0,U,10) D
"RTN","IBCNBMI",203,0)
 . S IBCHNG(2.312,IBPOLDA,1.03)=$E($P(IB0,U,10),1,12),IBCHNGN(2.312,IBPOLDA,1.03)=""
"RTN","IBCNBMI",204,0)
 . S IBCHNG(2.312,IBPOLDA,1.04)=$P(IB0,U,11),IBCHNGN(2.312,IBPOLDA,1.04)=""
"RTN","IBCNBMI",205,0)
 ;
"RTN","IBCNBMI",206,0)
 I $D(IBCHNGN)>9 D FILE^DIE("I","IBCHNGN","IBERR")
"RTN","IBCNBMI",207,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",208,0)
 D:$D(IBERR)>0 EHANDLE("POL",.IBERR,.RESULT)
"RTN","IBCNBMI",209,0)
 K IBERR
"RTN","IBCNBMI",210,0)
 I $D(IBCHNG)>9 D FILE^DIE("I","IBCHNG","IBERR")
"RTN","IBCNBMI",211,0)
 ;Move FM errors to RESULT
"RTN","IBCNBMI",212,0)
 D:$D(IBERR)>0 EHANDLE("POL",.IBERR,.RESULT)
"RTN","IBCNBMI",213,0)
 Q
"RTN","IBCNBMI",214,0)
 ;
"RTN","IBCNBMI",215,0)
PAT(DFN,IBPOLDA) ; Force DOB, SSN & SEX from Patient file (#2) in to Insurance Patient Policy file (2.312)
"RTN","IBCNBMI",216,0)
 N DA,DR,DIE,DOB,SSN,SEX,IENS,WI
"RTN","IBCNBMI",217,0)
 S IENS=IBPOLDA_","_DFN_","
"RTN","IBCNBMI",218,0)
 S WI=$$GET1^DIQ(2.312,IENS,6,"I")
"RTN","IBCNBMI",219,0)
 I WI'="v" Q  ; Only use when Whose Insurance is 'v'
"RTN","IBCNBMI",220,0)
 S DOB=$$GET1^DIQ(2,DFN,.03,"I")
"RTN","IBCNBMI",221,0)
 S SSN=$$GET1^DIQ(2,DFN,.09,"I")
"RTN","IBCNBMI",222,0)
 S SEX=$$GET1^DIQ(2,DFN,.02,"I")
"RTN","IBCNBMI",223,0)
 S DIE="^DPT("_DFN_",.312,",DA(1)=DFN,DA=IBPOLDA
"RTN","IBCNBMI",224,0)
 S DR="3.01///^S X=DOB;3.05///^S X=SSN;3.12///^S X=SEX"
"RTN","IBCNBMI",225,0)
 D ^DIE
"RTN","IBCNBMI",226,0)
 Q
"RTN","IBCNBMI",227,0)
 ;
"RTN","IBCNBMI",228,0)
EHANDLE(SET,FMERR,RESULT) ;
"RTN","IBCNBMI",229,0)
 ;Fileman Error Processing tracking added for ACCEPAPI^IBCNICB API.
"RTN","IBCNBMI",230,0)
 ; INPUT: 
"RTN","IBCNBMI",231,0)
 ;   SET    - File where fileman error occurred
"RTN","IBCNBMI",232,0)
 ;       Value = "INS" --> File 36    --> RESULT(1)
"RTN","IBCNBMI",233,0)
 ;       Value = "GRP" --> File 355.3 --> RESULT(2)
"RTN","IBCNBMI",234,0)
 ;       Value = "POL" --> File 2.312 --> RESULT(3)
"RTN","IBCNBMI",235,0)
 ;   FMERR  - Array that is returned by FM with error messages
"RTN","IBCNBMI",236,0)
 ; OUTPUT:
"RTN","IBCNBMI",237,0)
 ;   RESULT - Passed array to return FM error message if there are
"RTN","IBCNBMI",238,0)
 ;            errors when filing the data buffer data
"RTN","IBCNBMI",239,0)
 ;
"RTN","IBCNBMI",240,0)
 Q:$G(SET)']""!($D(FMERR)'>0)
"RTN","IBCNBMI",241,0)
 N SUB1,RNUM,ERRNUM,LINENUM
"RTN","IBCNBMI",242,0)
 ;Numeric 1st subscript of RESULT array based on file being updated
"RTN","IBCNBMI",243,0)
 ;File 36 = 1, 355.3 = 2, 2.312 = 3 
"RTN","IBCNBMI",244,0)
 S SUB1=$S(SET="INS":1,SET="GRP":2,SET="POL":3,1:"")
"RTN","IBCNBMI",245,0)
 ;Quit if SUB1 doesn't have a value.
"RTN","IBCNBMI",246,0)
 Q:SUB1']""
"RTN","IBCNBMI",247,0)
 S RNUM=$O(RESULT(SUB1,"ERR",9999999999),-1),ERRNUM=0
"RTN","IBCNBMI",248,0)
 F  S ERRNUM=$O(FMERR("DIERR",ERRNUM)) Q:+ERRNUM'>0  D
"RTN","IBCNBMI",249,0)
 . S LINENUM=0
"RTN","IBCNBMI",250,0)
 . F  S LINENUM=$O(FMERR("DIERR",ERRNUM,"TEXT",LINENUM)) Q:+LINENUM'>0  D
"RTN","IBCNBMI",251,0)
 . . S RNUM=RNUM+1
"RTN","IBCNBMI",252,0)
 . . S RESULT(SUB1,"ERR",RNUM)=FMERR("DIERR",ERRNUM,"TEXT",LINENUM)
"RTN","IBCNBMI",253,0)
 Q
"RTN","IBCNBMI",254,0)
 ;
"RTN","IBCNBMI",255,0)
REMOVDEL(FMERR) ;
"RTN","IBCNBMI",256,0)
 ;Removed field delete errors. SET and STUFF API delete data first and
"RTN","IBCNBMI",257,0)
 ;then update with new data from Insurance Buffer file. Error Code 712
"RTN","IBCNBMI",258,0)
 ;"Deletion was attempted but not allowed" errors will be removed from
"RTN","IBCNBMI",259,0)
 ;the returned FM error array 
"RTN","IBCNBMI",260,0)
 ; INPUT/OUTPUT:
"RTN","IBCNBMI",261,0)
 ;   FMERR  - Array that is returned by FM with error messages
"RTN","IBCNBMI",262,0)
 ;
"RTN","IBCNBMI",263,0)
 Q:$D(FMERR)'>0
"RTN","IBCNBMI",264,0)
 N ERRNUM
"RTN","IBCNBMI",265,0)
 S ERRNUM=0
"RTN","IBCNBMI",266,0)
 F  S ERRNUM=$O(FMERR("DIERR",ERRNUM)) Q:+ERRNUM'>0  D
"RTN","IBCNBMI",267,0)
 . I FMERR("DIERR",ERRNUM)=712 K FMERR("DIERR",ERRNUM)
"RTN","IBCNBMI",268,0)
 Q
"RTN","IBCNBOA")
0^66^B66757822
"RTN","IBCNBOA",1,0)
IBCNBOA ;ALB/ARH - Ins Buffer: Activity Report ;1 Jun 97
"RTN","IBCNBOA",2,0)
 ;;2.0;INTEGRATED BILLING;**82,305,528**;21-MAR-94;Build 163
"RTN","IBCNBOA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBOA",4,0)
 ;
"RTN","IBCNBOA",5,0)
EN ;get parameters then run the report
"RTN","IBCNBOA",6,0)
 ;
"RTN","IBCNBOA",7,0)
 K ^TMP($J) D HOME^%ZIS S IBHDR="INSURANCE BUFFER ACTIVITY REPORT" W @IOF,!!,?25,IBHDR
"RTN","IBCNBOA",8,0)
 W !!,"This report contains the counts and time statistics for all activity in the",!,"Insurance Buffer.",!!
"RTN","IBCNBOA",9,0)
 ;
"RTN","IBCNBOA",10,0)
 S IBBEG=$$DATES^IBCNBOE("Beginning") G:'IBBEG EXIT
"RTN","IBCNBOA",11,0)
 S IBEND=$$DATES^IBCNBOE("Ending",IBBEG) G:'IBEND EXIT  W !!
"RTN","IBCNBOA",12,0)
 ;
"RTN","IBCNBOA",13,0)
 S IBMONTH=$$MONTH^IBCNBOE G:IBMONTH="" EXIT  W !!
"RTN","IBCNBOA",14,0)
 ;
"RTN","IBCNBOA",15,0)
 S IBOUT=$$OUT^IBCNBOE G:IBOUT="" EXIT
"RTN","IBCNBOA",16,0)
 ;
"RTN","IBCNBOA",17,0)
DEV ;get the device
"RTN","IBCNBOA",18,0)
 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBCNBOA",19,0)
 I $D(IO("Q")) S ZTRTN="RPT^IBCNBOA",ZTDESC=IBHDR,ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") G EXIT
"RTN","IBCNBOA",20,0)
 U IO
"RTN","IBCNBOA",21,0)
 ;
"RTN","IBCNBOA",22,0)
RPT ; run report
"RTN","IBCNBOA",23,0)
 S IBQUIT=0
"RTN","IBCNBOA",24,0)
 ;
"RTN","IBCNBOA",25,0)
 ;Patch 305- QUIT in line below inserted for transmission to ARC
"RTN","IBCNBOA",26,0)
 D SEARCH(IBBEG,IBEND,IBMONTH) Q:$G(IBARFLAG)  G:IBQUIT EXIT
"RTN","IBCNBOA",27,0)
 D PRINT(IBBEG,IBEND,IBOUT)
"RTN","IBCNBOA",28,0)
 ;
"RTN","IBCNBOA",29,0)
EXIT K ^TMP($J),IBHDR,IBBEG,IBEND,IBMONTH,IBOUT,IBQUIT
"RTN","IBCNBOA",30,0)
 Q:$D(ZTQUEUED)
"RTN","IBCNBOA",31,0)
 D ^%ZISC
"RTN","IBCNBOA",32,0)
 Q
"RTN","IBCNBOA",33,0)
 ;
"RTN","IBCNBOA",34,0)
SEARCH(IBBEG,IBEND,IBMONTH) ; search/sort statistics for activity report
"RTN","IBCNBOA",35,0)
 N IBXST,IBXDT,IBBUFDA,IBB0,IBSTAT,IBTIME,IBS3,IBDATE,IBVER,IBDT2 S IBQUIT=""
"RTN","IBCNBOA",36,0)
 S IBBEG=$G(IBBEG)-.01,IBEND=$S('$G(IBEND):9999999,1:$P(IBEND,".")+.9)
"RTN","IBCNBOA",37,0)
 ;
"RTN","IBCNBOA",38,0)
 S IBXST="" F  S IBXST=$O(^IBA(355.33,"AFST",IBXST)) Q:IBXST=""  D   Q:IBQUIT
"RTN","IBCNBOA",39,0)
 . S IBXDT=+IBBEG F  S IBXDT=$O(^IBA(355.33,"AFST",IBXST,IBXDT)) Q:'IBXDT!(IBXDT>IBEND)  D  S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBCNBOA",40,0)
 .. S IBBUFDA=0 F  S IBBUFDA=$O(^IBA(355.33,"AFST",IBXST,IBXDT,IBBUFDA)) Q:'IBBUFDA  D
"RTN","IBCNBOA",41,0)
 ... ;
"RTN","IBCNBOA",42,0)
 ... S IBB0=$G(^IBA(355.33,IBBUFDA,0)),IBSTAT=$P(IBB0,U,4),IBVER=$P(IBB0,U,10)
"RTN","IBCNBOA",43,0)
 ... ;
"RTN","IBCNBOA",44,0)
 ... ; entered
"RTN","IBCNBOA",45,0)
 ... I IBXST="E" S IBDATE=+IBB0 I +IBDATE,IBDATE>IBBEG,IBDATE<IBEND D
"RTN","IBCNBOA",46,0)
 .... S IBDT2=+$P(IBB0,U,10) I 'IBDT2 S IBDT2=+$P(IBB0,U,5) I 'IBDT2 S IBDT2=$$NOW^XLFDT
"RTN","IBCNBOA",47,0)
 .... S IBTIME=+$$FMDIFF^XLFDT(IBDT2,IBDATE,2),IBSTAT="ENTERED",IBS3=1
"RTN","IBCNBOA",48,0)
 .... I +$G(IBMONTH) D SET(IBSTAT,$E(IBDATE,1,5),IBS3,IBTIME,IBB0)
"RTN","IBCNBOA",49,0)
 .... D SET(IBSTAT,99999,IBS3,IBTIME,IBB0)
"RTN","IBCNBOA",50,0)
 ... ;
"RTN","IBCNBOA",51,0)
 ... ; verified
"RTN","IBCNBOA",52,0)
 ... I IBXST="V" S IBDATE=+$P(IBB0,U,10) I +IBDATE,IBDATE>IBBEG,IBDATE<IBEND D
"RTN","IBCNBOA",53,0)
 .... S IBTIME=+$$FMDIFF^XLFDT(IBDATE,+IBB0,2),IBSTAT="VERIFIED",IBS3=2
"RTN","IBCNBOA",54,0)
 .... I +$G(IBMONTH) D SET(IBSTAT,$E(IBDATE,1,5),IBS3,IBTIME,IBB0)
"RTN","IBCNBOA",55,0)
 .... D SET(IBSTAT,99999,IBS3,IBTIME,IBB0)
"RTN","IBCNBOA",56,0)
 ... ;
"RTN","IBCNBOA",57,0)
 ... ; processed
"RTN","IBCNBOA",58,0)
 ... I IBXST="A"!(IBXST="R") S IBDATE=+$P(IBB0,U,5) I +IBDATE,IBDATE>IBBEG,IBDATE<IBEND D
"RTN","IBCNBOA",59,0)
 .... S IBDT2=+IBVER I 'IBVER S IBDT2=+IBB0
"RTN","IBCNBOA",60,0)
 .... S IBTIME=+$$FMDIFF^XLFDT(IBDATE,+IBDT2,2),IBSTAT="UNKNOWN",IBS3=6
"RTN","IBCNBOA",61,0)
 .... I $P(IBB0,U,4)="A" S IBS3=3,IBSTAT="ACCEPTED" I 'IBVER S IBS3=4,IBSTAT=IBSTAT_" (&V)"
"RTN","IBCNBOA",62,0)
 .... I $P(IBB0,U,4)="R" S IBS3=5,IBSTAT="REJECTED" I +IBVER S IBS3=6,IBSTAT=IBSTAT_" (V)"
"RTN","IBCNBOA",63,0)
 .... I +$G(IBMONTH) D SET(IBSTAT,$E(IBDATE,1,5),IBS3,IBTIME,IBB0)
"RTN","IBCNBOA",64,0)
 .... D SET(IBSTAT,99999,IBS3,IBTIME,IBB0)
"RTN","IBCNBOA",65,0)
 ;
"RTN","IBCNBOA",66,0)
 Q
"RTN","IBCNBOA",67,0)
 ;
"RTN","IBCNBOA",68,0)
SET(STAT,S1,S3,TIME,IBB0) ;
"RTN","IBCNBOA",69,0)
 D TMP("IBCNBOA",S1,1,S3,TIME,STAT)
"RTN","IBCNBOA",70,0)
 I S3<3 D TMP("IBCNBOA",S1,2,1,TIME,"NOT PROCESSED")
"RTN","IBCNBOA",71,0)
 I S3>2 D TMP("IBCNBOA",S1,2,2,TIME,"PROCESSED")
"RTN","IBCNBOA",72,0)
 D TMP("IBCNBOA",S1,2,9,TIME,"TOTAL")
"RTN","IBCNBOA",73,0)
 ;
"RTN","IBCNBOA",74,0)
 Q:$E(STAT)'="A"
"RTN","IBCNBOA",75,0)
 ;
"RTN","IBCNBOA",76,0)
 D TMP1("IBCNBOAC",S1,+$P(IBB0,U,7),+$P(IBB0,U,8),+$P(IBB0,U,9))
"RTN","IBCNBOA",77,0)
 Q
"RTN","IBCNBOA",78,0)
 ;
"RTN","IBCNBOA",79,0)
TMP(XREF,S1,S2,S3,TIME,NAME) ;
"RTN","IBCNBOA",80,0)
 S ^TMP($J,XREF,S1,S2,S3)=NAME
"RTN","IBCNBOA",81,0)
 S ^TMP($J,XREF,S1,S2,S3,"CNT")=$G(^TMP($J,XREF,S1,S2,S3,"CNT"))+1
"RTN","IBCNBOA",82,0)
 S ^TMP($J,XREF,S1,S2,S3,"TM")=$G(^TMP($J,XREF,S1,S2,S3,"TM"))+TIME
"RTN","IBCNBOA",83,0)
 I '$G(^TMP($J,XREF,S1,S2,S3,"HG"))!($G(^TMP($J,XREF,S1,S2,S3,"HG"))<TIME) S ^TMP($J,XREF,S1,S2,S3,"HG")=TIME
"RTN","IBCNBOA",84,0)
 I '$G(^TMP($J,XREF,S1,S2,S3,"LS"))!($G(^TMP($J,XREF,S1,S2,S3,"LS"))>TIME) S ^TMP($J,XREF,S1,S2,S3,"LS")=TIME
"RTN","IBCNBOA",85,0)
 Q
"RTN","IBCNBOA",86,0)
 ;
"RTN","IBCNBOA",87,0)
TMP1(XREF,S1,IC,GC,PC) ;
"RTN","IBCNBOA",88,0)
 I +IC S ^TMP($J,XREF,S1,"I")=$G(^TMP($J,XREF,S1,"I"))+1
"RTN","IBCNBOA",89,0)
 I +GC S ^TMP($J,XREF,S1,"G")=$G(^TMP($J,XREF,S1,"G"))+1
"RTN","IBCNBOA",90,0)
 I +PC S ^TMP($J,XREF,S1,"P")=$G(^TMP($J,XREF,S1,"P"))+1
"RTN","IBCNBOA",91,0)
 S ^TMP($J,XREF,S1,"CNT")=$G(^TMP($J,XREF,S1,"CNT"))+1
"RTN","IBCNBOA",92,0)
 Q
"RTN","IBCNBOA",93,0)
 ;
"RTN","IBCNBOA",94,0)
 ;
"RTN","IBCNBOA",95,0)
 ;
"RTN","IBCNBOA",96,0)
PRINT(IBBEG,IBEND,IBOUT) ;
"RTN","IBCNBOA",97,0)
 N IBXREF,IBLABLE,IBS1,IBS2,IBS3,IBINS,IBGRP,IBPOL,IBCNT,IBIP,IBGP,IBPP,IBRDT,IBPGN,IBRANGE,IBLN,IBI
"RTN","IBCNBOA",98,0)
 ;
"RTN","IBCNBOA",99,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCNBOA",100,0)
 S IBRANGE=$$FMTE^XLFDT(+IBBEG)_" - "_$$FMTE^XLFDT(IBEND)
"RTN","IBCNBOA",101,0)
 S IBRDT=$$FMTE^XLFDT($J($$NOW^XLFDT,0,4),2),IBRDT=$TR(IBRDT,"@"," "),(IBLN,IBPGN)=0
"RTN","IBCNBOA",102,0)
 ;
"RTN","IBCNBOA",103,0)
 ; Excel output
"RTN","IBCNBOA",104,0)
 I IBOUT="E" D PHDL D  S IBI=$$PAUSE Q
"RTN","IBCNBOA",105,0)
 . S IBXREF="IBCNBOA",IBS1="" F  S IBS1=$O(^TMP($J,IBXREF,IBS1)) Q:IBS1=""  D
"RTN","IBCNBOA",106,0)
 .. S IBLABLE=$S(IBS1=99999:"TOTALS",($E(IBBEG,1,5)<IBS1)&($E(IBEND,1,5)>IBS1):$$FMTE^XLFDT(IBS1_"00"),1:"")
"RTN","IBCNBOA",107,0)
 .. I IBLABLE="" S IBLABLE=$$FMTE^XLFDT($S($E(IBBEG,1,5)<IBS1:IBS1_"01",1:IBBEG))_" - "_$$FMTE^XLFDT($S($E(IBEND,1,5)>IBS1:$$SCH^XLFDT("1M(L)",IBS1_11),1:IBEND))
"RTN","IBCNBOA",108,0)
 .. S IBS2=0 F  S IBS2=$O(^TMP($J,IBXREF,IBS1,IBS2)) Q:IBS2=""  D
"RTN","IBCNBOA",109,0)
 ... S IBS3="" F  S IBS3=$O(^TMP($J,IBXREF,IBS1,IBS2,IBS3)) Q:'IBS3  D PRTLN
"RTN","IBCNBOA",110,0)
 .. ;
"RTN","IBCNBOA",111,0)
 .. S IBINS=+$G(^TMP($J,"IBCNBOAC",IBS1,"I")),IBGRP=+$G(^TMP($J,"IBCNBOAC",IBS1,"G"))
"RTN","IBCNBOA",112,0)
 .. S IBPOL=+$G(^TMP($J,"IBCNBOAC",IBS1,"P")),IBCNT=+$G(^TMP($J,"IBCNBOAC",IBS1,"CNT"))
"RTN","IBCNBOA",113,0)
 .. S (IBIP,IBGP,IBPP)=0 I IBCNT'=0 S IBIP=((IBINS/IBCNT)*100)\1,IBGP=((IBGRP/IBCNT)*100)\1,IBPP=((IBPOL/IBCNT)*100)\1
"RTN","IBCNBOA",114,0)
 .. W U_IBINS_U_IBIP_"%"_U_IBGRP_U_IBGP_"%"_U_IBPOL_U_IBPP_"%"
"RTN","IBCNBOA",115,0)
 ;
"RTN","IBCNBOA",116,0)
 D HDR
"RTN","IBCNBOA",117,0)
 ;
"RTN","IBCNBOA",118,0)
 S IBXREF="IBCNBOA",IBS1="" F  S IBS1=$O(^TMP($J,IBXREF,IBS1)) Q:IBS1=""  D:IBLN>(IOSL-17) HDR Q:IBQUIT  D  S IBLN=IBLN+7
"RTN","IBCNBOA",119,0)
 . S IBLABLE=$S(IBS1=99999:"TOTALS",($E(IBBEG,1,5)<IBS1)&($E(IBEND,1,5)>IBS1):$$FMTE^XLFDT(IBS1_"00"),1:"")
"RTN","IBCNBOA",120,0)
 . I IBLABLE="" S IBLABLE=$$FMTE^XLFDT($S($E(IBBEG,1,5)<IBS1:IBS1_"01",1:IBBEG))_" - "_$$FMTE^XLFDT($S($E(IBEND,1,5)>IBS1:$$SCH^XLFDT("1M(L)",IBS1_11),1:IBEND))
"RTN","IBCNBOA",121,0)
 . W !,?(40-($L(IBLABLE)/2)),IBLABLE,!
"RTN","IBCNBOA",122,0)
 . W !,?43,"AVERAGE",?56,"LONGEST",?68,"SHORTEST"
"RTN","IBCNBOA",123,0)
 . W !,"STATUS",?22,"COUNT",?30,"PERCENT",?43,"# DAYS",?56,"# DAYS",?68,"# DAYS"
"RTN","IBCNBOA",124,0)
 . ;
"RTN","IBCNBOA",125,0)
 . S IBS2=0 F  S IBS2=$O(^TMP($J,IBXREF,IBS1,IBS2)) Q:IBS2=""  D  S IBLN=IBLN+1
"RTN","IBCNBOA",126,0)
 .. W !,"-----------------------------------------------------------------------------"
"RTN","IBCNBOA",127,0)
 .. S IBS3="" F  S IBS3=$O(^TMP($J,IBXREF,IBS1,IBS2,IBS3)) Q:'IBS3  D PRTLN  S IBLN=IBLN+1
"RTN","IBCNBOA",128,0)
 . ;
"RTN","IBCNBOA",129,0)
 . S IBINS=+$G(^TMP($J,"IBCNBOAC",IBS1,"I")),IBGRP=+$G(^TMP($J,"IBCNBOAC",IBS1,"G"))
"RTN","IBCNBOA",130,0)
 . S IBPOL=+$G(^TMP($J,"IBCNBOAC",IBS1,"P")),IBCNT=+$G(^TMP($J,"IBCNBOAC",IBS1,"CNT"))
"RTN","IBCNBOA",131,0)
 . S (IBIP,IBGP,IBPP)=0 I IBCNT'=0 S IBIP=((IBINS/IBCNT)*100)\1,IBGP=((IBGRP/IBCNT)*100)\1,IBPP=((IBPOL/IBCNT)*100)\1
"RTN","IBCNBOA",132,0)
 . W !!,?2,IBINS," New Compan",$S(IBINS=1:"y",1:"ies")," (",IBIP,"%), "
"RTN","IBCNBOA",133,0)
 . W IBGRP," New Group/Plan",$S(IBGRP=1:"",1:"s")," (",IBGP,"%), "
"RTN","IBCNBOA",134,0)
 . W IBPOL," New Patient Polic",$S(IBPOL=1:"y",1:"ies")," (",IBPP,"%)",!
"RTN","IBCNBOA",135,0)
 ;
"RTN","IBCNBOA",136,0)
 I 'IBQUIT S IBI=$$PAUSE
"RTN","IBCNBOA",137,0)
 Q
"RTN","IBCNBOA",138,0)
 ;
"RTN","IBCNBOA",139,0)
PRTLN ;
"RTN","IBCNBOA",140,0)
 N IBSTX,IBCNT,IBTM,IBHG,IBLS,IBTCNT
"RTN","IBCNBOA",141,0)
 ;
"RTN","IBCNBOA",142,0)
 S IBSTX=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3))
"RTN","IBCNBOA",143,0)
 S IBCNT=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3,"CNT")) Q:'IBCNT
"RTN","IBCNBOA",144,0)
 S IBTM=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3,"TM"))
"RTN","IBCNBOA",145,0)
 S IBHG=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3,"HG"))
"RTN","IBCNBOA",146,0)
 S IBLS=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3,"LS"))
"RTN","IBCNBOA",147,0)
 S IBTCNT=$G(^TMP($J,IBXREF,IBS1,2,9,"CNT")) Q:'IBTCNT
"RTN","IBCNBOA",148,0)
 ;
"RTN","IBCNBOA",149,0)
 ; Excel output
"RTN","IBCNBOA",150,0)
 I IBOUT="E" W !,IBLABLE_U_IBSTX_U_$FN(IBCNT,",")_U_((IBCNT/IBTCNT)*100)_"%"_U_$$STD((IBTM/IBCNT))_U_$$STD(IBHG)_U_$$STD(IBLS) Q
"RTN","IBCNBOA",151,0)
 ;
"RTN","IBCNBOA",152,0)
 ; Report output
"RTN","IBCNBOA",153,0)
 W !,IBSTX,?20,$J($FN(IBCNT,","),7),?30,$J(((IBCNT/IBTCNT)*100),6,1),"%",?43,$J($$STD((IBTM/IBCNT)),6,1),?56,$J($$STD(IBHG),6,1),?68,$J($$STD(IBLS),6,1)
"RTN","IBCNBOA",154,0)
 Q
"RTN","IBCNBOA",155,0)
 ;
"RTN","IBCNBOA",156,0)
STD(SEC) ; convert seconds to days
"RTN","IBCNBOA",157,0)
 N IBX,IBD,IBS,IBH,DAYS S DAYS="" G:'$G(SEC) STDQ
"RTN","IBCNBOA",158,0)
 S IBD=(SEC/86400),IBD=+$P(IBD,".")
"RTN","IBCNBOA",159,0)
 S IBS=SEC-(IBD*86400)
"RTN","IBCNBOA",160,0)
 S IBH=((IBS/60)/60),IBH=+$J(IBH,0,2)
"RTN","IBCNBOA",161,0)
 S DAYS=IBD+(IBH/24)
"RTN","IBCNBOA",162,0)
STDQ Q DAYS
"RTN","IBCNBOA",163,0)
 ;
"RTN","IBCNBOA",164,0)
HDR ;print the report header
"RTN","IBCNBOA",165,0)
 S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBCNBOA",166,0)
 I IBPGN>0 S IBQUIT=$$PAUSE Q:IBQUIT
"RTN","IBCNBOA",167,0)
 S IBPGN=IBPGN+1,IBLN=4 I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
"RTN","IBCNBOA",168,0)
 W !,"INSURANCE BUFFER ACTIVITY REPORT   ",IBRANGE," "
"RTN","IBCNBOA",169,0)
 W ?(IOM-22),IBRDT,?(IOM-7)," PAGE ",IBPGN,!
"RTN","IBCNBOA",170,0)
 S IBI="",$P(IBI,"-",IOM+1)="" W IBI,!
"RTN","IBCNBOA",171,0)
 Q
"RTN","IBCNBOA",172,0)
 ;
"RTN","IBCNBOA",173,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBCNBOA",174,0)
 N X
"RTN","IBCNBOA",175,0)
 S X="MONTH^STATUS^COUNT^PERCENT^AVERAGE # DAYS^LONGEST # DAYS^SHORTEST # DAYS^New Companies^% New Companies^New Group/Plans^% New Group/Plans^New Patient Policies^% New Patient Policies"
"RTN","IBCNBOA",176,0)
 W X
"RTN","IBCNBOA",177,0)
 K X
"RTN","IBCNBOA",178,0)
 Q
"RTN","IBCNBOA",179,0)
 ;
"RTN","IBCNBOA",180,0)
PAUSE() ;pause at end of screen if being displayed on a terminal
"RTN","IBCNBOA",181,0)
 N IBX,DIR,DIRUT,X,Y S IBX=0
"RTN","IBCNBOA",182,0)
 I $E(IOST,1,2)["C-" W !! S DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBX=1
"RTN","IBCNBOA",183,0)
 Q IBX
"RTN","IBCNBOA",184,0)
 ;
"RTN","IBCNBOA",185,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCNBOA",186,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCNBOA",187,0)
 Q +$G(ZTSTOP)
"RTN","IBCNBOA",188,0)
 ;
"RTN","IBCNBOA",189,0)
IBAR(IBBEG,IBEND) ;Entry point for Vista IB AR data to ARC
"RTN","IBCNBOA",190,0)
 ;patch 305 - called by IBRFN4
"RTN","IBCNBOA",191,0)
 N IBMONTH,IBARFLAG,IBARDATA,IBTM,IBCNT
"RTN","IBCNBOA",192,0)
 S IBMONTH=0,IBARFLAG=1 K ^TMP($J)
"RTN","IBCNBOA",193,0)
 D RPT
"RTN","IBCNBOA",194,0)
 S IBTM=$G(^TMP($J,"IBCNBOA",99999,2,2,"TM"))
"RTN","IBCNBOA",195,0)
 S IBCNT=$G(^TMP($J,"IBCNBOA",99999,2,2,"CNT"))
"RTN","IBCNBOA",196,0)
 I 'IBCNT S IBARDATA=0 G IBARQ
"RTN","IBCNBOA",197,0)
 S IBARDATA=$FN($$STD((IBTM/IBCNT)),"",1)
"RTN","IBCNBOA",198,0)
 K ^TMP($J)
"RTN","IBCNBOA",199,0)
IBARQ Q IBARDATA
"RTN","IBCNBOE")
0^67^B109925669
"RTN","IBCNBOE",1,0)
IBCNBOE ;ALB/ARH - Ins Buffer: Employee Report ;1 Jun 97
"RTN","IBCNBOE",2,0)
 ;;2.0;INTEGRATED BILLING;**82,528**;21-MAR-94;Build 163
"RTN","IBCNBOE",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBOE",4,0)
 ;
"RTN","IBCNBOE",5,0)
EN ;get parameters then run the report
"RTN","IBCNBOE",6,0)
 N IBX S IBX=$$WR Q:'IBX  I IBX=1 G ^IBCNBOF ; WHICH REPORT?  entered or processed
"RTN","IBCNBOE",7,0)
 ;
"RTN","IBCNBOE",8,0)
 ;
"RTN","IBCNBOE",9,0)
 K ^TMP($J) D HOME^%ZIS S IBHDR="INSURANCE BUFFER INSURANCE EMPLOYEE REPORT" W @IOF,!!,?17,IBHDR
"RTN","IBCNBOE",10,0)
 W !!,"This report produces counts and time statistics for Insurance Employees that",!,"have either Verified or Processed (Accept/Reject) an Insurance Buffer entry.",!!
"RTN","IBCNBOE",11,0)
 ;
"RTN","IBCNBOE",12,0)
 S IBEMPL=$$EMPL G:IBEMPL="" EXIT  W !!
"RTN","IBCNBOE",13,0)
 ;
"RTN","IBCNBOE",14,0)
 I +IBEMPL S IBEMPL=$$SELEMPL("Verifies or Processes") G:IBEMPL="" EXIT  W !!
"RTN","IBCNBOE",15,0)
 ;
"RTN","IBCNBOE",16,0)
 S IBBEG=$$DATES("Beginning") G:'IBBEG EXIT
"RTN","IBCNBOE",17,0)
 S IBEND=$$DATES("Ending",IBBEG) G:'IBEND EXIT  W !!
"RTN","IBCNBOE",18,0)
 ;
"RTN","IBCNBOE",19,0)
 S IBMONTH=$$MONTH G:IBMONTH="" EXIT  W !!
"RTN","IBCNBOE",20,0)
 ;
"RTN","IBCNBOE",21,0)
 S IBOUT=$$OUT G:IBOUT="" EXIT
"RTN","IBCNBOE",22,0)
 ;
"RTN","IBCNBOE",23,0)
DEV ;get the device
"RTN","IBCNBOE",24,0)
 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBCNBOE",25,0)
 I $D(IO("Q")) S ZTRTN="RPT^IBCNBOE",ZTDESC=IBHDR,ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") G EXIT
"RTN","IBCNBOE",26,0)
 U IO
"RTN","IBCNBOE",27,0)
 ;
"RTN","IBCNBOE",28,0)
RPT ; run report
"RTN","IBCNBOE",29,0)
 S IBQUIT=0
"RTN","IBCNBOE",30,0)
 ;
"RTN","IBCNBOE",31,0)
 D SEARCH(IBBEG,IBEND,IBMONTH,IBEMPL) G:IBQUIT EXIT
"RTN","IBCNBOE",32,0)
 D PRINT(IBBEG,IBEND,IBEMPL,IBOUT)
"RTN","IBCNBOE",33,0)
 ;
"RTN","IBCNBOE",34,0)
EXIT K ^TMP($J),IBHDR,IBBEG,IBEND,IBMONTH,IBOUT,IBQUIT,IBEMPL
"RTN","IBCNBOE",35,0)
 Q:$D(ZTQUEUED)
"RTN","IBCNBOE",36,0)
 D ^%ZISC
"RTN","IBCNBOE",37,0)
 Q
"RTN","IBCNBOE",38,0)
 ;
"RTN","IBCNBOE",39,0)
SEARCH(IBBEG,IBEND,IBMONTH,IBEMPL) ; search/sort statistics for activity report
"RTN","IBCNBOE",40,0)
 N IBXST,IBXDT,IBBUFDA,IBB0,IBDATE,IBEMP,IBTIME,IBSTAT,IBDT2,IBVER,IBS3 S IBQUIT=""
"RTN","IBCNBOE",41,0)
 S IBBEG=$G(IBBEG)-.01,IBEND=$S('$G(IBEND):9999999,1:$P(IBEND,".")+.9)
"RTN","IBCNBOE",42,0)
 ;
"RTN","IBCNBOE",43,0)
 F IBXST="A","R","V"  D  Q:IBQUIT
"RTN","IBCNBOE",44,0)
 . S IBXDT=IBBEG F  S IBXDT=$O(^IBA(355.33,"AFST",IBXST,IBXDT)) Q:'IBXDT!(IBXDT>IBEND)  D  S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBCNBOE",45,0)
 .. S IBBUFDA=0 F  S IBBUFDA=$O(^IBA(355.33,"AFST",IBXST,IBXDT,IBBUFDA)) Q:'IBBUFDA  D
"RTN","IBCNBOE",46,0)
 ... ;
"RTN","IBCNBOE",47,0)
 ... S IBB0=$G(^IBA(355.33,IBBUFDA,0))
"RTN","IBCNBOE",48,0)
 ... ;
"RTN","IBCNBOE",49,0)
 ... ; verified
"RTN","IBCNBOE",50,0)
 ... I IBXST="V" S IBDATE=+$P(IBB0,U,10) I +IBDATE,IBDATE>IBBEG,IBDATE<IBEND D
"RTN","IBCNBOE",51,0)
 .... S IBEMP=+$P(IBB0,U,11) I +IBEMPL,IBEMPL'=IBEMP Q
"RTN","IBCNBOE",52,0)
 .... S IBTIME=$$FMDIFF^XLFDT(IBDATE,+IBB0,2),IBSTAT="VERIFIED",IBS3=1
"RTN","IBCNBOE",53,0)
 .... D SET(IBSTAT,IBEMP,$E(IBDATE,1,5),IBS3,IBTIME,IBB0,$G(IBMONTH))
"RTN","IBCNBOE",54,0)
 ... ;
"RTN","IBCNBOE",55,0)
 ... ; processed
"RTN","IBCNBOE",56,0)
 ... I IBXST="A"!(IBXST="R") S IBDATE=+$P(IBB0,U,5) I +IBDATE,IBDATE>IBBEG,IBDATE<IBEND D
"RTN","IBCNBOE",57,0)
 .... S IBEMP=+$P(IBB0,U,6) I +IBEMPL,IBEMPL'=IBEMP Q
"RTN","IBCNBOE",58,0)
 .... S IBVER=$P(IBB0,U,10),IBSTAT="UNKNOWN",IBS3=6
"RTN","IBCNBOE",59,0)
 .... S IBDT2=$S(+IBVER:+IBVER,1:+IBB0),IBTIME=$$FMDIFF^XLFDT(IBDATE,+IBDT2,2)
"RTN","IBCNBOE",60,0)
 .... ;
"RTN","IBCNBOE",61,0)
 .... I $P(IBB0,U,4)="A" S IBS3=2,IBSTAT="ACCEPTED" I 'IBVER S IBS3=3,IBSTAT=IBSTAT_" (&V)"
"RTN","IBCNBOE",62,0)
 .... I $P(IBB0,U,4)="R" S IBS3=4,IBSTAT="REJECTED" I +IBVER S IBS3=5,IBSTAT=IBSTAT_" (V)"
"RTN","IBCNBOE",63,0)
 .... D SET(IBSTAT,IBEMP,$E(IBDATE,1,5),IBS3,IBTIME,IBB0,$G(IBMONTH))
"RTN","IBCNBOE",64,0)
 ;
"RTN","IBCNBOE",65,0)
 Q
"RTN","IBCNBOE",66,0)
 ;
"RTN","IBCNBOE",67,0)
SET(STAT,IBEMP,IBDATE,S3,TIME,IBB0,IBMONTH) ;
"RTN","IBCNBOE",68,0)
 I +$G(IBMONTH) D SET1(IBSTAT,IBEMP,$E(IBDATE,1,5),S3,IBTIME,IBB0)
"RTN","IBCNBOE",69,0)
 D SET1(IBSTAT,IBEMP,99999,S3,IBTIME,IBB0)
"RTN","IBCNBOE",70,0)
 D SET1(IBSTAT,"~",99999,S3,IBTIME,IBB0)
"RTN","IBCNBOE",71,0)
 Q
"RTN","IBCNBOE",72,0)
 ;
"RTN","IBCNBOE",73,0)
SET1(STAT,S1,S2,S3,TIME,IBB0) ;
"RTN","IBCNBOE",74,0)
 ;
"RTN","IBCNBOE",75,0)
 D TMP("IBCNBOE",S1,S2,S3,TIME,STAT)
"RTN","IBCNBOE",76,0)
 D TMP("IBCNBOE",S1,S2,9,TIME,"TOTAL")
"RTN","IBCNBOE",77,0)
 ;
"RTN","IBCNBOE",78,0)
 Q:$E(STAT)'="A"
"RTN","IBCNBOE",79,0)
 ;
"RTN","IBCNBOE",80,0)
 D TMP1("IBCNBOEC",S1,S2,+$P(IBB0,U,7),+$P(IBB0,U,8),+$P(IBB0,U,9))
"RTN","IBCNBOE",81,0)
 Q
"RTN","IBCNBOE",82,0)
 ;
"RTN","IBCNBOE",83,0)
TMP(XREF,S1,S2,S3,TIME,NAME) ;
"RTN","IBCNBOE",84,0)
 S ^TMP($J,XREF,S1,S2,S3)=NAME
"RTN","IBCNBOE",85,0)
 S ^TMP($J,XREF,S1,S2,S3,"CNT")=$G(^TMP($J,XREF,S1,S2,S3,"CNT"))+1
"RTN","IBCNBOE",86,0)
 S ^TMP($J,XREF,S1,S2,S3,"TM")=$G(^TMP($J,XREF,S1,S2,S3,"TM"))+TIME
"RTN","IBCNBOE",87,0)
 I '$G(^TMP($J,XREF,S1,S2,S3,"HG"))!($G(^TMP($J,XREF,S1,S2,S3,"HG"))<TIME) S ^TMP($J,XREF,S1,S2,S3,"HG")=TIME
"RTN","IBCNBOE",88,0)
 I '$G(^TMP($J,XREF,S1,S2,S3,"LS"))!($G(^TMP($J,XREF,S1,S2,S3,"LS"))>TIME) S ^TMP($J,XREF,S1,S2,S3,"LS")=TIME
"RTN","IBCNBOE",89,0)
 Q
"RTN","IBCNBOE",90,0)
 ;
"RTN","IBCNBOE",91,0)
TMP1(XREF,S1,S2,IC,GC,PC) ;
"RTN","IBCNBOE",92,0)
 I +IC S ^TMP($J,XREF,S1,S2,"I")=$G(^TMP($J,XREF,S1,S2,"I"))+1
"RTN","IBCNBOE",93,0)
 I +GC S ^TMP($J,XREF,S1,S2,"G")=$G(^TMP($J,XREF,S1,S2,"G"))+1
"RTN","IBCNBOE",94,0)
 I +PC S ^TMP($J,XREF,S1,S2,"P")=$G(^TMP($J,XREF,S1,S2,"P"))+1
"RTN","IBCNBOE",95,0)
 S ^TMP($J,XREF,S1,S2,"CNT")=$G(^TMP($J,XREF,S1,S2,"CNT"))+1
"RTN","IBCNBOE",96,0)
 Q
"RTN","IBCNBOE",97,0)
 ;
"RTN","IBCNBOE",98,0)
 ;
"RTN","IBCNBOE",99,0)
 ;
"RTN","IBCNBOE",100,0)
PRINT(IBBEG,IBEND,IBEMPL,IBOUT) ;
"RTN","IBCNBOE",101,0)
 N IBXREF,IBLABLE,IBEMPN,IBS1,IBS2,IBS3,IBINS,IBGRP,IBPOL,IBCNT,IBIP,IBGP,IBPP,IBRDT,IBPGN,IBRANGE,IBLN,IBI
"RTN","IBCNBOE",102,0)
 ;
"RTN","IBCNBOE",103,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCNBOE",104,0)
 S IBRANGE=$$FMTE^XLFDT(IBBEG)_" - "_$$FMTE^XLFDT(IBEND)
"RTN","IBCNBOE",105,0)
 S IBRDT=$$FMTE^XLFDT($J($$NOW^XLFDT,0,4),2),IBRDT=$TR(IBRDT,"@"," "),(IBLN,IBPGN)=0
"RTN","IBCNBOE",106,0)
 ;
"RTN","IBCNBOE",107,0)
 ; Excel output
"RTN","IBCNBOE",108,0)
 I IBOUT="E" D PHDL D  S IBI=$$PAUSE Q
"RTN","IBCNBOE",109,0)
 . S IBXREF="IBCNBOE",IBS1="" F  S IBS1=$O(^TMP($J,IBXREF,IBS1)) Q:IBS1=""  D
"RTN","IBCNBOE",110,0)
 .. S IBS2=0 F  S IBS2=$O(^TMP($J,IBXREF,IBS1,IBS2)) Q:IBS2=""  D
"RTN","IBCNBOE",111,0)
 ... S IBLABLE=$S(IBS2=99999:"TOTALS",($E(IBBEG,1,5)<IBS2)&($E(IBEND,1,5)>IBS2):$$FMTE^XLFDT(IBS2_"00"),1:"")
"RTN","IBCNBOE",112,0)
 ... I IBLABLE="" S IBLABLE=$$FMTE^XLFDT($S($E(IBBEG,1,5)<IBS2:IBS2_"01",1:IBBEG))_" - "_$$FMTE^XLFDT($S($E(IBEND,1,5)>IBS2:$$SCH^XLFDT("1M(L)",IBS2_11),1:IBEND))
"RTN","IBCNBOE",113,0)
 ... S IBEMPN=$P($G(^VA(200,IBS1,0)),U,1)
"RTN","IBCNBOE",114,0)
 ... S IBS3="" F  S IBS3=$O(^TMP($J,IBXREF,IBS1,IBS2,IBS3)) Q:'IBS3  D PRTLN
"RTN","IBCNBOE",115,0)
 ... ;
"RTN","IBCNBOE",116,0)
 ... S IBINS=+$G(^TMP($J,"IBCNBOEC",IBS1,IBS2,"I")),IBGRP=+$G(^TMP($J,"IBCNBOEC",IBS1,IBS2,"G"))
"RTN","IBCNBOE",117,0)
 ... S IBPOL=+$G(^TMP($J,"IBCNBOEC",IBS1,IBS2,"P")),IBCNT=+$G(^TMP($J,"IBCNBOEC",IBS1,IBS2,"CNT"))
"RTN","IBCNBOE",118,0)
 ... S (IBIP,IBGP,IBPP)=0 I IBCNT'=0 S IBIP=((IBINS/IBCNT)*100)\1,IBGP=((IBGRP/IBCNT)*100)\1,IBPP=((IBPOL/IBCNT)*100)\1
"RTN","IBCNBOE",119,0)
 ... W U_IBINS_U_IBIP_"%"_U_IBGRP_U_IBGP_"%"_U_IBPOL_U_IBPP_"%"
"RTN","IBCNBOE",120,0)
 ;
"RTN","IBCNBOE",121,0)
 D HDR
"RTN","IBCNBOE",122,0)
 ;
"RTN","IBCNBOE",123,0)
 S IBXREF="IBCNBOE",IBS1="" F  S IBS1=$O(^TMP($J,IBXREF,IBS1)) Q:IBS1=""  D  Q:IBQUIT
"RTN","IBCNBOE",124,0)
 . ;
"RTN","IBCNBOE",125,0)
 . S IBS2=0 F  S IBS2=$O(^TMP($J,IBXREF,IBS1,IBS2)) Q:IBS2=""  D:IBLN>(IOSL-15) HDR Q:IBQUIT  D  S IBLN=IBLN+8
"RTN","IBCNBOE",126,0)
 .. S IBLABLE=$S(IBS2=99999:"TOTALS",($E(IBBEG,1,5)<IBS2)&($E(IBEND,1,5)>IBS2):$$FMTE^XLFDT(IBS2_"00"),1:"")
"RTN","IBCNBOE",127,0)
 .. I IBLABLE="" S IBLABLE=$$FMTE^XLFDT($S($E(IBBEG,1,5)<IBS2:IBS2_1,1:IBBEG))_" - "_$$FMTE^XLFDT($S($E(IBEND,1,5)>IBS2:$$SCH^XLFDT("1M(L)",IBS2_11),1:IBEND))
"RTN","IBCNBOE",128,0)
 .. S IBLABLE=$P($G(^VA(200,IBS1,0)),U,1)_"  "_IBLABLE
"RTN","IBCNBOE",129,0)
 .. W !,?(40-($L(IBLABLE)/2)),IBLABLE,!
"RTN","IBCNBOE",130,0)
 .. W !,?43,"AVERAGE",?56,"LONGEST",?68,"SHORTEST"
"RTN","IBCNBOE",131,0)
 .. W !,"STATUS",?22,"COUNT",?30,"PERCENT",?43,"# DAYS",?56,"# DAYS",?68,"# DAYS"
"RTN","IBCNBOE",132,0)
 .. W !,"-----------------------------------------------------------------------------"
"RTN","IBCNBOE",133,0)
 .. ;
"RTN","IBCNBOE",134,0)
 .. S IBS3="" F  S IBS3=$O(^TMP($J,IBXREF,IBS1,IBS2,IBS3)) Q:'IBS3  D PRTLN  S IBLN=IBLN+1
"RTN","IBCNBOE",135,0)
 .. ;
"RTN","IBCNBOE",136,0)
 .. S IBINS=+$G(^TMP($J,"IBCNBOEC",IBS1,IBS2,"I")),IBGRP=+$G(^TMP($J,"IBCNBOEC",IBS1,IBS2,"G"))
"RTN","IBCNBOE",137,0)
 .. S IBPOL=+$G(^TMP($J,"IBCNBOEC",IBS1,IBS2,"P")),IBCNT=+$G(^TMP($J,"IBCNBOEC",IBS1,IBS2,"CNT"))
"RTN","IBCNBOE",138,0)
 .. S (IBIP,IBGP,IBPP)=0 I IBCNT'=0 S IBIP=((IBINS/IBCNT)*100)\1,IBGP=((IBGRP/IBCNT)*100)\1,IBPP=((IBPOL/IBCNT)*100)\1
"RTN","IBCNBOE",139,0)
 .. W !!,?2,IBINS," New Compan",$S(IBINS=1:"y",1:"ies")," (",IBIP,"%), "
"RTN","IBCNBOE",140,0)
 .. W IBGRP," New Group/Plan",$S(IBGRP=1:"",1:"s")," (",IBGP,"%), "
"RTN","IBCNBOE",141,0)
 .. W IBPOL," New Patient Polic",$S(IBPOL=1:"y",1:"ies")," (",IBPP,"%)",!
"RTN","IBCNBOE",142,0)
 ;
"RTN","IBCNBOE",143,0)
 I 'IBQUIT S IBI=$$PAUSE
"RTN","IBCNBOE",144,0)
 Q
"RTN","IBCNBOE",145,0)
 ;
"RTN","IBCNBOE",146,0)
PRTLN ;
"RTN","IBCNBOE",147,0)
 N IBSTX,IBCNT,IBTM,IBHG,IBLS,IBTCNT
"RTN","IBCNBOE",148,0)
 ;
"RTN","IBCNBOE",149,0)
 S IBSTX=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3))
"RTN","IBCNBOE",150,0)
 S IBCNT=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3,"CNT")) Q:'IBCNT
"RTN","IBCNBOE",151,0)
 S IBTM=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3,"TM"))
"RTN","IBCNBOE",152,0)
 S IBHG=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3,"HG"))
"RTN","IBCNBOE",153,0)
 S IBLS=$G(^TMP($J,IBXREF,IBS1,IBS2,IBS3,"LS"))
"RTN","IBCNBOE",154,0)
 S IBTCNT=$G(^TMP($J,IBXREF,IBS1,IBS2,9,"CNT")) Q:'IBTCNT
"RTN","IBCNBOE",155,0)
 ;
"RTN","IBCNBOE",156,0)
 ; Excel output
"RTN","IBCNBOE",157,0)
 I IBOUT="E" W !,IBEMPN_U_IBLABLE_U_IBSTX_U_$FN(IBCNT,",")_U_((IBCNT/IBTCNT)*100)_"%"_U_$$STD((IBTM/IBCNT))_U_$$STD(IBHG)_U_$$STD(IBLS) Q
"RTN","IBCNBOE",158,0)
 ;
"RTN","IBCNBOE",159,0)
 ; Report output
"RTN","IBCNBOE",160,0)
 W !,IBSTX,?20,$J($FN(IBCNT,","),7),?30,$J(((IBCNT/IBTCNT)*100),6,1),"%",?43,$J($$STD((IBTM/IBCNT)),6,1),?56,$J($$STD(IBHG),6,1),?68,$J($$STD(IBLS),6,1)
"RTN","IBCNBOE",161,0)
 Q
"RTN","IBCNBOE",162,0)
 ;
"RTN","IBCNBOE",163,0)
STD(SEC) ; convert seconds to days
"RTN","IBCNBOE",164,0)
 N IBX,IBD,IBS,IBH,DAYS S DAYS="" G:'$G(SEC) STDQ
"RTN","IBCNBOE",165,0)
 S IBD=(SEC/86400),IBD=+$P(IBD,".")
"RTN","IBCNBOE",166,0)
 S IBS=SEC-(IBD*86400)
"RTN","IBCNBOE",167,0)
 S IBH=((IBS/60)/60),IBH=+$J(IBH,0,2)
"RTN","IBCNBOE",168,0)
 S DAYS=IBD+(IBH/24)
"RTN","IBCNBOE",169,0)
STDQ Q DAYS
"RTN","IBCNBOE",170,0)
 ;
"RTN","IBCNBOE",171,0)
HDR ;print the report header
"RTN","IBCNBOE",172,0)
 S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBCNBOE",173,0)
 I IBPGN>0 S IBQUIT=$$PAUSE Q:IBQUIT
"RTN","IBCNBOE",174,0)
 S IBPGN=IBPGN+1,IBLN=5 I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
"RTN","IBCNBOE",175,0)
 W !,"INSURANCE BUFFER EMPLOYEE REPORT   ",IBRANGE," "
"RTN","IBCNBOE",176,0)
 W ?(IOM-22),IBRDT,?(IOM-7)," PAGE ",IBPGN,!
"RTN","IBCNBOE",177,0)
 I +$G(IBEMPL) W !,"EMPLOYEE:  ",$P($G(^VA(200,+IBEMPL,0)),U,1),!
"RTN","IBCNBOE",178,0)
 S IBI="",$P(IBI,"-",IOM+1)="" W IBI,!
"RTN","IBCNBOE",179,0)
 Q
"RTN","IBCNBOE",180,0)
 ;
"RTN","IBCNBOE",181,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBCNBOE",182,0)
 N X
"RTN","IBCNBOE",183,0)
 S X="EMPLOYEE^MONTH^STATUS^COUNT^PERCENT^AVERAGE # DAYS^LONGEST # DAYS^SHORTEST # DAYS^New Companies^% New Companies^New Group/Plans^% New Group/Plans^New Patient Policies^% New Patient Policies"
"RTN","IBCNBOE",184,0)
 W X
"RTN","IBCNBOE",185,0)
 K X
"RTN","IBCNBOE",186,0)
 Q
"RTN","IBCNBOE",187,0)
 ;
"RTN","IBCNBOE",188,0)
PAUSE() ;pause at end of screen if beeing displayed on a terminal
"RTN","IBCNBOE",189,0)
 N IBX,DIR,DIRUT,X,Y S IBX=0
"RTN","IBCNBOE",190,0)
 I $E(IOST,1,2)["C-" W !! S DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBX=1
"RTN","IBCNBOE",191,0)
 Q IBX
"RTN","IBCNBOE",192,0)
 ;
"RTN","IBCNBOE",193,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCNBOE",194,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCNBOE",195,0)
 Q +$G(ZTSTOP)
"RTN","IBCNBOE",196,0)
 ;
"RTN","IBCNBOE",197,0)
WR() ; which report
"RTN","IBCNBOE",198,0)
 N DIR,X,Y,DIRUT,DUOUT,IBX S IBX=""
"RTN","IBCNBOE",199,0)
 S DIR("?")="Enter 'V' for a report based on employees that verify or process (accept/reject) buffer entries."
"RTN","IBCNBOE",200,0)
 S DIR("?",5)="Enter 'E' for a report based on employees that create new buffer entries."
"RTN","IBCNBOE",201,0)
 S DIR("?",1)="This report may be printed for those employees that create Buffer entries,"
"RTN","IBCNBOE",202,0)
 S DIR("?",2)="primarily non-Insurance personnel or for those employees that verify and process",DIR("?",3)="(accept/reject) Buffer entries, primarily Insurance Personnel.",DIR("?",4)=" "
"RTN","IBCNBOE",203,0)
 S DIR("A")="Include which Type of Employee",DIR(0)="SO^1:Entered By;2:Verified/Processed By" D ^DIR
"RTN","IBCNBOE",204,0)
 S IBX=$S(Y>0:+Y,1:"")
"RTN","IBCNBOE",205,0)
 Q IBX
"RTN","IBCNBOE",206,0)
 ;
"RTN","IBCNBOE",207,0)
EMPL() ; print a single or all employees?
"RTN","IBCNBOE",208,0)
 N DIR,X,Y,DIRUT,DUOUT,IBX S IBX=""
"RTN","IBCNBOE",209,0)
 S DIR("?",1)="Report of activity in the Buffer file by Employee and date range."
"RTN","IBCNBOE",210,0)
 S DIR("?",2)="Enter 'S' to include only a single employee in the report."
"RTN","IBCNBOE",211,0)
 S DIR("?")="Enter 'A' to include all employees in the report."
"RTN","IBCNBOE",212,0)
 S DIR("A")="Include Selected or All Employees"
"RTN","IBCNBOE",213,0)
 S DIR("B")="All",DIR(0)="SO^A:All Employees;S:Selected Employee" D ^DIR
"RTN","IBCNBOE",214,0)
 S IBX=$S(Y="S":1,Y="A":0,1:"")
"RTN","IBCNBOE",215,0)
 Q IBX
"RTN","IBCNBOE",216,0)
 ;
"RTN","IBCNBOE",217,0)
SELEMPL(TYPE) ; get the name of an employee
"RTN","IBCNBOE",218,0)
 N DIC,X,Y,DTOUT,DUOUT,IBX S IBX=""
"RTN","IBCNBOE",219,0)
 S DIC("A")="Select an Employee that "_TYPE_" Buffer entries: "
"RTN","IBCNBOE",220,0)
 S DIC="^VA(200,",DIC(0)="AEMQ" D ^DIC S IBX=+Y I $D(DTOUT)!$D(DUOUT)!(Y<1) S IBX=""
"RTN","IBCNBOE",221,0)
 Q IBX
"RTN","IBCNBOE",222,0)
 ;
"RTN","IBCNBOE",223,0)
DATES(LABLE,IBBEG) ;
"RTN","IBCNBOE",224,0)
 N DIR,X,Y,DIRUT,DUOUT,IBX,IBB,IBD S IBX="",IBB=$P($S(+$G(IBBEG):IBBEG,1:+$O(^IBA(355.33,"B",0))),"."),IBD=$S(+$G(IBBEG):DT,1:IBB)
"RTN","IBCNBOE",225,0)
 S DIR("?")="Enter the "_LABLE_" date to include in the report."
"RTN","IBCNBOE",226,0)
 S DIR("?",1)="Enter a date from the date of the first Buffer entry to today."
"RTN","IBCNBOE",227,0)
 S DIR("A")=LABLE_" Date",DIR("B")=$$FMTE^XLFDT(IBD)
"RTN","IBCNBOE",228,0)
 S DIR(0)="DO^"_IBB_":"_DT_":EX" D ^DIR S IBX=Y I $D(DIRUT)!$D(DUOUT) S IBX=""
"RTN","IBCNBOE",229,0)
 Q IBX
"RTN","IBCNBOE",230,0)
 ;
"RTN","IBCNBOE",231,0)
MONTH() ;
"RTN","IBCNBOE",232,0)
 N DIR,X,Y,DIRUT,DUOUT,IBX S IBX=""
"RTN","IBCNBOE",233,0)
 S DIR("?")="Enter No if only totals for the date range should be reported."
"RTN","IBCNBOE",234,0)
 S DIR("?",1)="Enter Yes if the report should be broken down by month."
"RTN","IBCNBOE",235,0)
 S DIR("A")="Report By Month",DIR(0)="Y",DIR("B")="No" D ^DIR
"RTN","IBCNBOE",236,0)
 S IBX=$S(Y=1:Y,Y=0:Y,1:"")
"RTN","IBCNBOE",237,0)
 Q IBX
"RTN","IBCNBOE",238,0)
 ;
"RTN","IBCNBOE",239,0)
OUT() ;
"RTN","IBCNBOE",240,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNBOE",241,0)
 W !
"RTN","IBCNBOE",242,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNBOE",243,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNBOE",244,0)
 S DIR("B")="Report"
"RTN","IBCNBOE",245,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCNBOE",246,0)
 Q Y
"RTN","IBCNBOF")
0^72^B32265412
"RTN","IBCNBOF",1,0)
IBCNBOF ;ALB/ARH - Ins Buffer: Employee Report (Entered);1 Jun 97
"RTN","IBCNBOF",2,0)
 ;;2.0;INTEGRATED BILLING;**82,528**;21-MAR-94;Build 163
"RTN","IBCNBOF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNBOF",4,0)
 ;
"RTN","IBCNBOF",5,0)
EN ;get parameters then run the report
"RTN","IBCNBOF",6,0)
 ;
"RTN","IBCNBOF",7,0)
 K ^TMP($J) D HOME^%ZIS S IBHDR="INSURANCE BUFFER EMPLOYEE REPORT" W @IOF,!!,?25,IBHDR
"RTN","IBCNBOF",8,0)
 W !!,"This report produces a count of the number of entries added to the Buffer",!,"file for a specified date range sorted by employee.  Also included are",!,"sub-totals and percentages based on the current status of those entries."
"RTN","IBCNBOF",9,0)
 ;
"RTN","IBCNBOF",10,0)
 S IBEMPL=+$$EMPL^IBCNBOE G:IBEMPL="" EXIT  W !!
"RTN","IBCNBOF",11,0)
 I +IBEMPL S IBEMPL=$$SELEMPL^IBCNBOE("Enters/Creates") G:IBEMPL="" EXIT  W !!
"RTN","IBCNBOF",12,0)
 ;
"RTN","IBCNBOF",13,0)
 S IBBEG=$$DATES^IBCNBOE("Beginning") G:'IBBEG EXIT
"RTN","IBCNBOF",14,0)
 S IBEND=$$DATES^IBCNBOE("Ending",IBBEG) G:'IBEND EXIT  W !!
"RTN","IBCNBOF",15,0)
 ;
"RTN","IBCNBOF",16,0)
 S IBMONTH=$$MONTH^IBCNBOE G:IBMONTH="" EXIT  W !!
"RTN","IBCNBOF",17,0)
 ;
"RTN","IBCNBOF",18,0)
 S IBOUT=$$OUT^IBCNBOE G:IBOUT="" EXIT
"RTN","IBCNBOF",19,0)
 ;
"RTN","IBCNBOF",20,0)
DEV ;get the device
"RTN","IBCNBOF",21,0)
 I IBOUT="R" W !,"Report requires 132 columns."
"RTN","IBCNBOF",22,0)
 S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
"RTN","IBCNBOF",23,0)
 I $D(IO("Q")) S ZTRTN="RPT^IBCNBOF",ZTDESC=IBHDR,ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") G EXIT
"RTN","IBCNBOF",24,0)
 U IO
"RTN","IBCNBOF",25,0)
 ;
"RTN","IBCNBOF",26,0)
RPT ; run report
"RTN","IBCNBOF",27,0)
 S IBQUIT=0
"RTN","IBCNBOF",28,0)
 ;
"RTN","IBCNBOF",29,0)
 D SEARCH(IBBEG,IBEND,IBMONTH,IBEMPL) G:IBQUIT EXIT
"RTN","IBCNBOF",30,0)
 D PRINT(IBBEG,IBEND,IBMONTH,IBEMPL,IBOUT)
"RTN","IBCNBOF",31,0)
 ;
"RTN","IBCNBOF",32,0)
EXIT K ^TMP($J),IBHDR,IBBEG,IBEND,IBMONTH,IBOUT,IBQUIT,IBEMPL
"RTN","IBCNBOF",33,0)
 Q:$D(ZTQUEUED)
"RTN","IBCNBOF",34,0)
 D ^%ZISC
"RTN","IBCNBOF",35,0)
 Q
"RTN","IBCNBOF",36,0)
 ;
"RTN","IBCNBOF",37,0)
SEARCH(IBBEG,IBEND,IBMONTH,IBEMPL) ; search/sort statistics for employee report
"RTN","IBCNBOF",38,0)
 N IBXDT,IBBUFDA,IBB0,IBXREF,IBS1,IBEMP
"RTN","IBCNBOF",39,0)
 S IBBEG=$G(IBBEG)-.01,IBEND=$S('$G(IBEND):9999999,1:$P(IBEND,".")+.9)
"RTN","IBCNBOF",40,0)
 ;
"RTN","IBCNBOF",41,0)
 S IBXDT=IBBEG F  S IBXDT=$O(^IBA(355.33,"B",IBXDT)) Q:'IBXDT!(IBXDT>IBEND)  D  S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBCNBOF",42,0)
 . S IBBUFDA=0 F  S IBBUFDA=$O(^IBA(355.33,"B",IBXDT,IBBUFDA)) Q:'IBBUFDA  D
"RTN","IBCNBOF",43,0)
 .. ;
"RTN","IBCNBOF",44,0)
 .. S IBB0=$G(^IBA(355.33,IBBUFDA,0)),IBEMP=+$P(IBB0,U,2) I 'IBEMP Q
"RTN","IBCNBOF",45,0)
 .. I +IBEMPL,IBEMPL'=IBEMP Q
"RTN","IBCNBOF",46,0)
 .. ;
"RTN","IBCNBOF",47,0)
 .. I $G(IBMONTH) D SET("IBCNBOF",IBEMP,$E(+IBB0,1,5),$P(IBB0,U,4),+$P(IBB0,U,7),+$P(IBB0,U,8),+$P(IBB0,U,9))
"RTN","IBCNBOF",48,0)
 .. D SET("IBCNBOF",IBEMP,99999,$P(IBB0,U,4),+$P(IBB0,U,7),+$P(IBB0,U,8),+$P(IBB0,U,9))
"RTN","IBCNBOF",49,0)
 .. D SET("IBCNBOF","~",99999,$P(IBB0,U,4),+$P(IBB0,U,7),+$P(IBB0,U,8),+$P(IBB0,U,9))
"RTN","IBCNBOF",50,0)
 ;
"RTN","IBCNBOF",51,0)
 Q
"RTN","IBCNBOF",52,0)
 ;
"RTN","IBCNBOF",53,0)
SET(XREF,S1,S2,STAT,NC,NG,NP) ;
"RTN","IBCNBOF",54,0)
 S ^TMP($J,XREF,S1,S2,"CNT")=$G(^TMP($J,XREF,S1,S2,"CNT"))+1
"RTN","IBCNBOF",55,0)
 I STAT="E" S ^TMP($J,XREF,S1,S2,"EN")=$G(^TMP($J,XREF,S1,S2,"EN"))+1
"RTN","IBCNBOF",56,0)
 I STAT="R" S ^TMP($J,XREF,S1,S2,"RJ")=$G(^TMP($J,XREF,S1,S2,"RJ"))+1
"RTN","IBCNBOF",57,0)
 I STAT="A" S ^TMP($J,XREF,S1,S2,"AC")=$G(^TMP($J,XREF,S1,S2,"AC"))+1
"RTN","IBCNBOF",58,0)
 I +NC S ^TMP($J,XREF,S1,S2,"NC")=$G(^TMP($J,XREF,S1,S2,"NC"))+1
"RTN","IBCNBOF",59,0)
 I +NG S ^TMP($J,XREF,S1,S2,"NG")=$G(^TMP($J,XREF,S1,S2,"NG"))+1
"RTN","IBCNBOF",60,0)
 I +NP S ^TMP($J,XREF,S1,S2,"NP")=$G(^TMP($J,XREF,S1,S2,"NP"))+1
"RTN","IBCNBOF",61,0)
 Q
"RTN","IBCNBOF",62,0)
 ;
"RTN","IBCNBOF",63,0)
 ;
"RTN","IBCNBOF",64,0)
PRINT(IBBEG,IBEND,IBMONTH,IBEMPL,IBOUT) ;
"RTN","IBCNBOF",65,0)
 N IBXREF,IBS1,IBS2,IBRDT,IBPGN,IBRANGE,IBLN,IBI
"RTN","IBCNBOF",66,0)
 ;
"RTN","IBCNBOF",67,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCNBOF",68,0)
 S IBRANGE=$$FMTE^XLFDT(IBBEG)_" - "_$$FMTE^XLFDT(IBEND)
"RTN","IBCNBOF",69,0)
 S IBRDT=$$FMTE^XLFDT($J($$NOW^XLFDT,0,4),2),IBRDT=$TR(IBRDT,"@"," "),(IBLN,IBPGN)=0
"RTN","IBCNBOF",70,0)
 ;
"RTN","IBCNBOF",71,0)
 D HDR:IBOUT="R",PHDL:IBOUT="E"
"RTN","IBCNBOF",72,0)
 ;
"RTN","IBCNBOF",73,0)
 S IBXREF="IBCNBOF",IBS1="" F  S IBS1=$O(^TMP($J,IBXREF,IBS1)) Q:IBS1=""  D  Q:IBQUIT
"RTN","IBCNBOF",74,0)
 . I +$G(IBMONTH),(IBOUT="R") W ! S IBLN=IBLN+1
"RTN","IBCNBOF",75,0)
 . ;
"RTN","IBCNBOF",76,0)
 . S IBS2=0 F  S IBS2=$O(^TMP($J,IBXREF,IBS1,IBS2)) Q:IBS2=""  D:IBLN>(IOSL-3)&(IBOUT="R") HDR Q:IBQUIT  D
"RTN","IBCNBOF",77,0)
 .. D PRTLN  S IBLN=IBLN+1
"RTN","IBCNBOF",78,0)
 ;
"RTN","IBCNBOF",79,0)
 I 'IBQUIT S IBI=$$PAUSE
"RTN","IBCNBOF",80,0)
 Q
"RTN","IBCNBOF",81,0)
 ;
"RTN","IBCNBOF",82,0)
PRTLN ;
"RTN","IBCNBOF",83,0)
 N IBEMP,IBCNT,IBEN,IBAC,IBRJ,IBNC,IBNG,IBNP,DATM
"RTN","IBCNBOF",84,0)
 ;
"RTN","IBCNBOF",85,0)
 S IBEMP=$P($G(^VA(200,+IBS1,0)),U,1) I IBS1="~" S IBEMP="TOTAL"
"RTN","IBCNBOF",86,0)
 S IBCNT=$G(^TMP($J,IBXREF,IBS1,IBS2,"CNT")) Q:'IBCNT
"RTN","IBCNBOF",87,0)
 S IBEN=$G(^TMP($J,IBXREF,IBS1,IBS2,"EN"))
"RTN","IBCNBOF",88,0)
 S IBAC=$G(^TMP($J,IBXREF,IBS1,IBS2,"AC"))
"RTN","IBCNBOF",89,0)
 S IBRJ=$G(^TMP($J,IBXREF,IBS1,IBS2,"RJ"))
"RTN","IBCNBOF",90,0)
 S IBNC=$G(^TMP($J,IBXREF,IBS1,IBS2,"NC"))
"RTN","IBCNBOF",91,0)
 S IBNG=$G(^TMP($J,IBXREF,IBS1,IBS2,"NG"))
"RTN","IBCNBOF",92,0)
 S IBNP=$G(^TMP($J,IBXREF,IBS1,IBS2,"NP"))
"RTN","IBCNBOF",93,0)
 S DATM=$S(IBS2=99999:"TOTAL",1:$$FMTE^XLFDT(IBS2_"00"))
"RTN","IBCNBOF",94,0)
 ;
"RTN","IBCNBOF",95,0)
 ; Excel output
"RTN","IBCNBOF",96,0)
 I IBOUT="E" D  Q
"RTN","IBCNBOF",97,0)
 .W !,IBEMP_U_DATM_U_$FN(IBCNT,",")_U_$FN(IBEN,",")_U_$FN(((IBEN/IBCNT)*100),",",1)_"%"_U_$FN(IBAC,",")_U_$FN(((IBAC/IBCNT)*100),",",1)_"%"
"RTN","IBCNBOF",98,0)
 .W U_$FN(IBRJ,",")_U_$FN(((IBRJ/IBCNT)*100),",",1)_"%"_U_$FN(IBNC,",")_U_$FN(IBNG,",")_U_$FN(IBNP,",")
"RTN","IBCNBOF",99,0)
 ;
"RTN","IBCNBOF",100,0)
 ; Report output
"RTN","IBCNBOF",101,0)
 W !,$E(IBEMP,1,15),?17,DATM,?25,$J($FN(IBCNT,","),7)
"RTN","IBCNBOF",102,0)
 W ?35,$J($FN(IBEN,","),7),?43,$J("("_$FN(((IBEN/IBCNT)*100),",",1)_"%)",8)
"RTN","IBCNBOF",103,0)
 W ?54,$J($FN(IBAC,","),7),?62,$J("("_$FN(((IBAC/IBCNT)*100),",",1)_"%)",8)
"RTN","IBCNBOF",104,0)
 W ?73,$J($FN(IBRJ,","),7),?81,$J("("_$FN(((IBRJ/IBCNT)*100),",",1)_"%)",8)
"RTN","IBCNBOF",105,0)
 W ?92,$J($FN(IBNC,","),7),?102,$J($FN(IBNG,","),7),?112,$J($FN(IBNP,","),7)
"RTN","IBCNBOF",106,0)
 Q
"RTN","IBCNBOF",107,0)
 ;
"RTN","IBCNBOF",108,0)
HDR ;print the report header
"RTN","IBCNBOF",109,0)
 S IBQUIT=$$STOP Q:IBQUIT
"RTN","IBCNBOF",110,0)
 I IBPGN>0 S IBQUIT=$$PAUSE Q:IBQUIT
"RTN","IBCNBOF",111,0)
 S IBPGN=IBPGN+1,IBLN=5 I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
"RTN","IBCNBOF",112,0)
 W !,"INSURANCE BUFFER (ENTERING) EMPLOYEE REPORT   ",IBRANGE," "
"RTN","IBCNBOF",113,0)
 W ?(IOM-22),IBRDT,?(IOM-7)," PAGE ",IBPGN,!,?39,"NOT YET",?93,"NEW",?104,"NEW",?113,"NEW"
"RTN","IBCNBOF",114,0)
 W !,"EMPLOYEE",?17,"MONTH",?27,"TOTAL",?39,"PROCESSED",?58,"ACCEPTED",?77,"REJECTED",?93,"INS CO",?104,"GROUP",?113,"POLICY",!
"RTN","IBCNBOF",115,0)
 S IBI="",$P(IBI,"-",IOM+1)="" W IBI
"RTN","IBCNBOF",116,0)
 Q
"RTN","IBCNBOF",117,0)
 ;
"RTN","IBCNBOF",118,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBCNBOF",119,0)
 N X
"RTN","IBCNBOF",120,0)
 S X="EMPLOYEE^MONTH^TOTAL^NOT YET PROCESSED^% NOT YET PROCESSED^ACCEPTED^% ACCEPTED^REJECTED^% REJECTED^NEW INS CO^NEW GROUP^NEW POLICY"
"RTN","IBCNBOF",121,0)
 W X
"RTN","IBCNBOF",122,0)
 K X
"RTN","IBCNBOF",123,0)
 Q
"RTN","IBCNBOF",124,0)
 ;
"RTN","IBCNBOF",125,0)
PAUSE() ;pause at end of screen if beeing displayed on a terminal
"RTN","IBCNBOF",126,0)
 N IBX,DIR,DIRUT,DUOUT,X,Y S IBX=0
"RTN","IBCNBOF",127,0)
 I $E(IOST,1,2)["C-" W !! S DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBX=1
"RTN","IBCNBOF",128,0)
 Q IBX
"RTN","IBCNBOF",129,0)
 ;
"RTN","IBCNBOF",130,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCNBOF",131,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCNBOF",132,0)
 Q +$G(ZTSTOP)
"RTN","IBCNEDE1")
0^8^B48152754
"RTN","IBCNEDE1",1,0)
IBCNEDE1 ;DAOU/DAC - eIV INSURANCE BUFFER EXTRACT ;04-JUN-2002
"RTN","IBCNEDE1",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,416,438,435,467,497,528**;21-MAR-94;Build 163
"RTN","IBCNEDE1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNEDE1",4,0)
 ;
"RTN","IBCNEDE1",5,0)
 ;**Program Description**
"RTN","IBCNEDE1",6,0)
 ; This routine loops through the insurance buffer and 
"RTN","IBCNEDE1",7,0)
 ; creates eIV transaction queue entries when appropriate.
"RTN","IBCNEDE1",8,0)
 ; Periodically check for stop request for background task
"RTN","IBCNEDE1",9,0)
 ;
"RTN","IBCNEDE1",10,0)
 Q   ; no direct calls allowed
"RTN","IBCNEDE1",11,0)
 ;
"RTN","IBCNEDE1",12,0)
EN ; Loop through designated cross-references for updates
"RTN","IBCNEDE1",13,0)
 ; Insurance Buffer Extract
"RTN","IBCNEDE1",14,0)
 ;
"RTN","IBCNEDE1",15,0)
 N TODAYSDT,FRESHDAY,LOOPDT,IEN,OVRFRESH,FRESHDT
"RTN","IBCNEDE1",16,0)
 N DFN,PDOD,SRVICEDT,VERIFDDT,PAYERSTR,PAYERID,SYMBOL,PAYRNAME
"RTN","IBCNEDE1",17,0)
 N PIEN,PNIEN,TQIEN,TRIEN,TRSRVCDT,TQCRTDT,TRANSNO,DISYS
"RTN","IBCNEDE1",18,0)
 N ORIGINSR,ORGRPSTR,ORGRPNUM,ORGRPNAM,ORGSUBCR
"RTN","IBCNEDE1",19,0)
 N MAXCNT,CNT,ISYMBOLM,DATA1,DATA2,ORIG,SETSTR,ISYMBOL,IBCNETOT
"RTN","IBCNEDE1",20,0)
 N SIDDATA,SID,SIDACT,BSID,FDA,PASSBUF,SIDCNT,SIDARRAY
"RTN","IBCNEDE1",21,0)
 N TQDT,TQIENS,TQOK,STATIEN,PATID,MCAREFLG,INSNAME,PREL,IFSRC
"RTN","IBCNEDE1",22,0)
 ;
"RTN","IBCNEDE1",23,0)
 S SETSTR=$$SETTINGS^IBCNEDE7(1) ; Returns buffer extract settings
"RTN","IBCNEDE1",24,0)
 I 'SETSTR Q                    ; Quit if extract is not active
"RTN","IBCNEDE1",25,0)
 S MAXCNT=$P(SETSTR,U,4)        ; Max # TQ entries that may be created
"RTN","IBCNEDE1",26,0)
 S:MAXCNT="" MAXCNT=9999999999
"RTN","IBCNEDE1",27,0)
 ;
"RTN","IBCNEDE1",28,0)
 S IFSRC=$O(^IBE(355.12,"C","INTERFACILITY INS UPDATE","")) ;10/24/14 *528* baa
"RTN","IBCNEDE1",29,0)
 ;
"RTN","IBCNEDE1",30,0)
 S FRESHDAY=$P($G(^IBE(350.9,1,51)),U,1) ; System freshness days
"RTN","IBCNEDE1",31,0)
 ;
"RTN","IBCNEDE1",32,0)
 S CNT=0       ; Initialize count of TQ entries created
"RTN","IBCNEDE1",33,0)
 S IBCNETOT=0  ; Initialize count for periodic TaskMan check
"RTN","IBCNEDE1",34,0)
 ;
"RTN","IBCNEDE1",35,0)
 S LOOPDT="" ; Date used to loop through the IB global
"RTN","IBCNEDE1",36,0)
 F  S LOOPDT=$O(^IBA(355.33,"AEST","E",LOOPDT)) Q:LOOPDT=""!(CNT=MAXCNT)  D  Q:$G(ZTSTOP)
"RTN","IBCNEDE1",37,0)
 . S IEN=""
"RTN","IBCNEDE1",38,0)
 . F  S IEN=$O(^IBA(355.33,"AEST","E",LOOPDT,IEN)) Q:IEN=""!(CNT=MAXCNT)  D  Q:$G(ZTSTOP)
"RTN","IBCNEDE1",39,0)
 .. ;
"RTN","IBCNEDE1",40,0)
 .. ; IBCN 10/24/14 *528* baa
"RTN","IBCNEDE1",41,0)
 .. ;  prevent when SOURCE OF INFORMATION field = "Inter-facility Insurance update.
"RTN","IBCNEDE1",42,0)
 .. I $P($G(^IBA(355.33,IEN,0)),U,3)=IFSRC Q
"RTN","IBCNEDE1",43,0)
 .. ; IBCN END MOD
"RTN","IBCNEDE1",44,0)
 .. ;
"RTN","IBCNEDE1",45,0)
 .. ; Update count for periodic check
"RTN","IBCNEDE1",46,0)
 .. S IBCNETOT=IBCNETOT+1
"RTN","IBCNEDE1",47,0)
 .. ; Check for request to stop background job, periodically
"RTN","IBCNEDE1",48,0)
 .. I $D(ZTQUEUED),IBCNETOT#100=0,$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCNEDE1",49,0)
 .. ;
"RTN","IBCNEDE1",50,0)
 .. ; Get symbol, if symbol'=" " OR "!" then quit
"RTN","IBCNEDE1",51,0)
 .. S ISYMBOL=$$SYMBOL^IBCNBLL(IEN) ; Insurance buffer symbol
"RTN","IBCNEDE1",52,0)
 .. I (ISYMBOL'=" ")&(ISYMBOL'="!") Q
"RTN","IBCNEDE1",53,0)
 .. ; Don't extract ePharmacy buffer entries - IB*2*435
"RTN","IBCNEDE1",54,0)
 .. I +$P($G(^IBA(355.33,IEN,0)),U,17) Q
"RTN","IBCNEDE1",55,0)
 .. ;
"RTN","IBCNEDE1",56,0)
 .. ; Get the eIV STATUS IEN and quit for response related errors
"RTN","IBCNEDE1",57,0)
 .. S STATIEN=+$P($G(^IBA(355.33,IEN,0)),U,12)
"RTN","IBCNEDE1",58,0)
 .. I ",11,12,15,"[(","_STATIEN_",") Q  ; Prevent update for response errors
"RTN","IBCNEDE1",59,0)
 .. ;
"RTN","IBCNEDE1",60,0)
 .. S OVRFRESH=$P($G(^IBA(355.33,IEN,0)),U,13) ; Freshness OvrRd flag
"RTN","IBCNEDE1",61,0)
 .. S DFN=$P($G(^IBA(355.33,IEN,60)),U,1) ; Patient DFN
"RTN","IBCNEDE1",62,0)
 .. Q:DFN=""
"RTN","IBCNEDE1",63,0)
 .. I $P($G(^DPT(DFN,0)),U,21) Q           ; Exclude if test patient
"RTN","IBCNEDE1",64,0)
 .. ;
"RTN","IBCNEDE1",65,0)
 .. S PDOD=$P($G(^DPT(DFN,.35)),U,1)\1     ; Patient's date of death
"RTN","IBCNEDE1",66,0)
 .. S SRVICEDT=+$P($G(^IBA(355.33,IEN,0)),U,18) S:'SRVICEDT SRVICEDT=DT ; Service Date
"RTN","IBCNEDE1",67,0)
 .. I PDOD,PDOD<SRVICEDT S SRVICEDT=PDOD
"RTN","IBCNEDE1",68,0)
 .. S FRESHDT=$$FMADD^XLFDT(SRVICEDT,-FRESHDAY)
"RTN","IBCNEDE1",69,0)
 .. S PAYERSTR=$$INSERROR^IBCNEUT3("B",IEN)          ; Payer String
"RTN","IBCNEDE1",70,0)
 .. S PAYERID=$P(PAYERSTR,U,3),PIEN=$P(PAYERSTR,U,2) ; Payer ID
"RTN","IBCNEDE1",71,0)
 .. S SYMBOL=+PAYERSTR                               ; Payer Symbol
"RTN","IBCNEDE1",72,0)
 .. I '$$PYRACTV^IBCNEDE7(PIEN) Q          ; Payer is not nationally active
"RTN","IBCNEDE1",73,0)
 .. ;
"RTN","IBCNEDE1",74,0)
 .. ; If payer symbol is returned set symbol in Ins. Buffer and quit
"RTN","IBCNEDE1",75,0)
 .. I SYMBOL D BUFF^IBCNEUT2(IEN,SYMBOL) Q
"RTN","IBCNEDE1",76,0)
 .. ;
"RTN","IBCNEDE1",77,0)
 .. D CLEAR^IBCNEUT4(IEN)                ; remove any existing symbol
"RTN","IBCNEDE1",78,0)
 .. ;
"RTN","IBCNEDE1",79,0)
 .. ; If no payer ID or no payer IEN is returned quit
"RTN","IBCNEDE1",80,0)
 .. I (PAYERID="")!('PIEN) Q
"RTN","IBCNEDE1",81,0)
 .. ;
"RTN","IBCNEDE1",82,0)
 .. ; Update service date and freshness date based on payer's allowed
"RTN","IBCNEDE1",83,0)
 .. ;  date range
"RTN","IBCNEDE1",84,0)
 .. D UPDDTS^IBCNEDE6(PIEN,.SRVICEDT,.FRESHDT)
"RTN","IBCNEDE1",85,0)
 .. ;
"RTN","IBCNEDE1",86,0)
 .. ; Update service dates for inquiries to be transmitted
"RTN","IBCNEDE1",87,0)
 .. D TQUPDSV^IBCNEUT5(DFN,PIEN,SRVICEDT)
"RTN","IBCNEDE1",88,0)
 .. ;
"RTN","IBCNEDE1",89,0)
 .. ; allow only one MEDICARE transmission per patient
"RTN","IBCNEDE1",90,0)
 .. S INSNAME=$P($G(^IBA(355.33,IEN,20)),U)
"RTN","IBCNEDE1",91,0)
 .. I INSNAME["MEDICARE",$G(MCAREFLG(DFN)) Q
"RTN","IBCNEDE1",92,0)
 .. ;
"RTN","IBCNEDE1",93,0)
 .. ; set pat. relationship to "self" if it's blank
"RTN","IBCNEDE1",94,0)
 .. D SETREL(IEN)
"RTN","IBCNEDE1",95,0)
 .. ;
"RTN","IBCNEDE1",96,0)
 .. ; make sure that service type codes are set
"RTN","IBCNEDE1",97,0)
 .. I '+$G(^IBA(355.33,IEN,80)) D SETSTC^IBCNERTQ(IEN)
"RTN","IBCNEDE1",98,0)
 .. ;
"RTN","IBCNEDE1",99,0)
 .. ; If freshness override flag is set, file to TQ and quit
"RTN","IBCNEDE1",100,0)
 .. I OVRFRESH=1 D  Q
"RTN","IBCNEDE1",101,0)
 ... NEW DIE,X,Y,DISYS
"RTN","IBCNEDE1",102,0)
 ... S FDA(355.33,IEN_",",.13)="" D FILE^DIE("","FDA") K FDA
"RTN","IBCNEDE1",103,0)
 ... S:INSNAME["MEDICARE" MCAREFLG(DFN)=1 D TQ
"RTN","IBCNEDE1",104,0)
 .. ; Check the existing TQ entries to confirm that this buffer IEN is
"RTN","IBCNEDE1",105,0)
 .. ; not included
"RTN","IBCNEDE1",106,0)
 .. S (TQDT,TQIENS)="",TQOK=1
"RTN","IBCNEDE1",107,0)
 .. F  S TQDT=$O(^IBCN(365.1,"AD",DFN,PIEN,TQDT)) Q:'TQDT!'TQOK  D
"RTN","IBCNEDE1",108,0)
 ... F  S TQIENS=$O(^IBCN(365.1,"AD",DFN,PIEN,TQDT,TQIENS)) Q:'TQIENS!'TQOK  D
"RTN","IBCNEDE1",109,0)
 ....    I $P($G(^IBCN(365.1,TQIENS,0)),U,5)=IEN S TQOK=0 Q
"RTN","IBCNEDE1",110,0)
 .. I TQOK S:INSNAME["MEDICARE" MCAREFLG(DFN)=1 D TQ
"RTN","IBCNEDE1",111,0)
 Q
"RTN","IBCNEDE1",112,0)
TQ ; Determine how many entries to create in the TQ file and set entries
"RTN","IBCNEDE1",113,0)
 ;
"RTN","IBCNEDE1",114,0)
 K SIDARRAY
"RTN","IBCNEDE1",115,0)
 S BSID=$P($G(^IBA(355.33,IEN,90)),U,3)   ; Subscriber ID from buffer (IB*2.0*497 - vd)
"RTN","IBCNEDE1",116,0)
 S PATID=$P($G(^IBA(355.33,IEN,62)),U)    ; Patient ID from buffer
"RTN","IBCNEDE1",117,0)
 S PREL=$P($G(^IBA(355.33,IEN,60)),U,14)  ; Pat. relationship from buffer
"RTN","IBCNEDE1",118,0)
 S SIDDATA=$$SIDCHK^IBCNEDE5(PIEN,DFN,BSID,.SIDARRAY,FRESHDT) ;determine rules to follow
"RTN","IBCNEDE1",119,0)
 S SIDACT=$P(SIDDATA,U,1)
"RTN","IBCNEDE1",120,0)
 S SIDCNT=$P(SIDDATA,U,2)                 ;Pull cnt of SIDs - shd be 1
"RTN","IBCNEDE1",121,0)
 ;
"RTN","IBCNEDE1",122,0)
 I SIDACT=3 D BUFF^IBCNEUT2(IEN,18) Q   ; update buffer w/ bang & quit - no subscriber id
"RTN","IBCNEDE1",123,0)
 I PREL'=18 D  Q
"RTN","IBCNEDE1",124,0)
 .I PATID="" D BUFF^IBCNEUT2(IEN,23) Q  ; update buffer w/ bang & quit - no patient id
"RTN","IBCNEDE1",125,0)
 .D SET(IEN,OVRFRESH,1,"") ; set TQ entry
"RTN","IBCNEDE1",126,0)
 .Q
"RTN","IBCNEDE1",127,0)
 I CNT+SIDCNT>MAXCNT Q
"RTN","IBCNEDE1",128,0)
 S SID=""
"RTN","IBCNEDE1",129,0)
 F  S SID=$O(SIDARRAY(SID)) Q:SID=""  D:$P(SID,"_")'="" SET(IEN,OVRFRESH,1,$P(SID,"_"))    ; set TQ w/ 'Pass Buffer' flag
"RTN","IBCNEDE1",130,0)
 I SIDACT=4 D SET(IEN,OVRFRESH,1,"")       ; set TQ w/ 'Pass Buffer' flag w/ blank subscriber ID
"RTN","IBCNEDE1",131,0)
 Q
"RTN","IBCNEDE1",132,0)
 ;
"RTN","IBCNEDE1",133,0)
RET ; Record Retrieval - Insurance Buffer
"RTN","IBCNEDE1",134,0)
 ;
"RTN","IBCNEDE1",135,0)
 S ORIGINSR=$P($G(^IBA(355.33,IEN,20)),U,1) ;Original ins. co.
"RTN","IBCNEDE1",136,0)
 S ORGRPSTR=$G(^IBA(355.33,IEN,90)) ; Original group string (IB*2.0*497 - vd)
"RTN","IBCNEDE1",137,0)
 S ORGRPNUM=$P(ORGRPSTR,U,2) ;Original group number (IB*2.0*497 - vd)
"RTN","IBCNEDE1",138,0)
 S ORGRPNAM=$P(ORGRPSTR,U,1) ;Original group name (IB*2.0*497 - vd)
"RTN","IBCNEDE1",139,0)
 S ORGSUBCR=$P(ORGRPSTR,U,3) ; Original subscriber (IB*2.0*497 - vd)
"RTN","IBCNEDE1",140,0)
 ;
"RTN","IBCNEDE1",141,0)
 Q
"RTN","IBCNEDE1",142,0)
 ;
"RTN","IBCNEDE1",143,0)
SET(BUFFIEN,OVRFRESH,PASSBUF,SID1) ; Set data and check if set already
"RTN","IBCNEDE1",144,0)
 D RET
"RTN","IBCNEDE1",145,0)
 ;
"RTN","IBCNEDE1",146,0)
 ; The hard coded '1' in the 3rd piece of DATA1 sets the Transmission
"RTN","IBCNEDE1",147,0)
 ; status of file 365.1 to "Ready to Transmit"
"RTN","IBCNEDE1",148,0)
 S DATA1=DFN_U_PIEN_U_1_U_$G(BUFFIEN)_U_SID1_U_FRESHDT_U_PASSBUF ; SETTQ parameter 1
"RTN","IBCNEDE1",149,0)
 S $P(DATA1,U,8)=PATID     ; IB*2*416
"RTN","IBCNEDE1",150,0)
 ;
"RTN","IBCNEDE1",151,0)
 ;The hardcoded '1' in the 1st piece of DATA2 is the value to tell
"RTN","IBCNEDE1",152,0)
 ; the file 365.1 that it is the buffer extract.
"RTN","IBCNEDE1",153,0)
 S DATA2=1_U_"V"_U_SRVICEDT_U_"" ; SETTQ parameter 2
"RTN","IBCNEDE1",154,0)
 ;
"RTN","IBCNEDE1",155,0)
 S ORIG=ORIGINSR_U_ORGRPNUM_U_ORGRPNAM_U_ORGSUBCR ; SETTQ parameter 3
"RTN","IBCNEDE1",156,0)
 S TQIEN=$$SETTQ^IBCNEDE7(DATA1,DATA2,ORIG,$G(OVRFRESH)) ; File TQ entry
"RTN","IBCNEDE1",157,0)
 I TQIEN'="" S CNT=CNT+1 ; If filed increment count
"RTN","IBCNEDE1",158,0)
 ;
"RTN","IBCNEDE1",159,0)
 Q
"RTN","IBCNEDE1",160,0)
 ;
"RTN","IBCNEDE1",161,0)
SETREL(IEN) ; set pat. relationship to "self"
"RTN","IBCNEDE1",162,0)
 N DA,DIE,DR,X,Y
"RTN","IBCNEDE1",163,0)
 I $P($G(^IBA(355.33,IEN,60)),U,14)="" S DIE="^IBA(355.33,",DA=IEN,DR="60.14///SELF" D ^DIE
"RTN","IBCNEDE1",164,0)
 Q
"RTN","IBCNERP1")
0^79^B87784206
"RTN","IBCNERP1",1,0)
IBCNERP1 ;DAOU/BHS - IBCNE USER IF eIV RESPONSE REPORT ;03-JUN-2002
"RTN","IBCNERP1",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,416,528**;21-MAR-94;Build 163
"RTN","IBCNERP1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERP1",4,0)
 ;
"RTN","IBCNERP1",5,0)
 ; eIV - Insurance Verification Interface
"RTN","IBCNERP1",6,0)
 ;
"RTN","IBCNERP1",7,0)
 ; Input parameters: N/A
"RTN","IBCNERP1",8,0)
 ; Other relevant variables ZTSAVED for queueing:
"RTN","IBCNERP1",9,0)
 ;  IBCNERTN = "IBCNERP1" (current routine name for queueing the 
"RTN","IBCNERP1",10,0)
 ;   COMPILE process)
"RTN","IBCNERP1",11,0)
 ;  IBCNESPC("BEGDT")=start dt for rpt
"RTN","IBCNERP1",12,0)
 ;  IBCNESPC("ENDDT")=end dt for rpt
"RTN","IBCNERP1",13,0)
 ;  IBCNESPC("PYR")=payer ien (365.12) or "" for all payers
"RTN","IBCNERP1",14,0)
 ;  IBCNESPC("SORT")=1 (Payer name) OR 2 (Patient name)
"RTN","IBCNERP1",15,0)
 ;  IBCNESPC("PAT")=patient ien (2) or "" for all patients
"RTN","IBCNERP1",16,0)
 ;  IBCNESPC("TYPE")=A (All Responses) for date range OR M (Most Recent
"RTN","IBCNERP1",17,0)
 ;   Responses) for date range (by unique Payer/Pat pair)
"RTN","IBCNERP1",18,0)
 ;  IBCNESPC("TRCN")=Trace #^IEN, if non-null all other params are null
"RTN","IBCNERP1",19,0)
 ;  IBCNESPC("RFLAG")=Report Flag used to indicate which report is being
"RTN","IBCNERP1",20,0)
 ;   run.  Response Report (0), Inactive Report (1), or Ambiguous 
"RTN","IBCNERP1",21,0)
 ;   Report (2).
"RTN","IBCNERP1",22,0)
 ;  IBCNESPC("DTEXP")=Expiration date used in the inactive policy report
"RTN","IBCNERP1",23,0)
 ;  IBOUT="R" for Report format or "E" for Excel format
"RTN","IBCNERP1",24,0)
 ;
"RTN","IBCNERP1",25,0)
 ; Only call this routine at a tag
"RTN","IBCNERP1",26,0)
 Q
"RTN","IBCNERP1",27,0)
EN(IPRF) ; Main entry pt
"RTN","IBCNERP1",28,0)
 ; Init vars
"RTN","IBCNERP1",29,0)
 N STOP,IBCNERTN,POP,IBCNESPC,IBOUT
"RTN","IBCNERP1",30,0)
 S IBCNESPC("RFLAG")=$G(IPRF)
"RTN","IBCNERP1",31,0)
 ;
"RTN","IBCNERP1",32,0)
 S STOP=0
"RTN","IBCNERP1",33,0)
 S IBCNERTN="IBCNERP1"
"RTN","IBCNERP1",34,0)
 W @IOF
"RTN","IBCNERP1",35,0)
 W !,"eIV ",$S(IPRF=1:"Inactive Policy",IPRF=2:"Ambiguous Policy",1:"Response")," Report",!
"RTN","IBCNERP1",36,0)
 I $G(IPRF) D
"RTN","IBCNERP1",37,0)
 . W !,"Please select a date range to view ",$S(IPRF=1:"inactive",1:"ambiguous")," policy information that the eIV"
"RTN","IBCNERP1",38,0)
 . W !,"process turned up while attempting to discover previously unknown"
"RTN","IBCNERP1",39,0)
 . W !,"insurance policies. (Date range selection is based on the date that"
"RTN","IBCNERP1",40,0)
 . W !,"eIV receives the response from the payer.)"
"RTN","IBCNERP1",41,0)
 ;
"RTN","IBCNERP1",42,0)
 I '$G(IPRF) D
"RTN","IBCNERP1",43,0)
 . W !,"Insurance verification responses are received daily."
"RTN","IBCNERP1",44,0)
 . W !,"Please select a date range in which responses were received to view the"
"RTN","IBCNERP1",45,0)
 . W !,"associated response detail.  Otherwise, select a Trace # to view specific"
"RTN","IBCNERP1",46,0)
 . W !,"response detail."
"RTN","IBCNERP1",47,0)
 ;
"RTN","IBCNERP1",48,0)
 ; Rpt by Date Range or Trace #
"RTN","IBCNERP1",49,0)
R05 I '$G(IPRF) D RTYPE I STOP G:$$STOP EXIT G R05
"RTN","IBCNERP1",50,0)
 ; If rpt by Trace # - no other criteria is necessary
"RTN","IBCNERP1",51,0)
 I $G(IBCNESPC("TRCN")) G R60
"RTN","IBCNERP1",52,0)
 ; Date Range params
"RTN","IBCNERP1",53,0)
R10 D DTRANGE I STOP G:$$STOP EXIT G R05
"RTN","IBCNERP1",54,0)
 ; Payer Selection param
"RTN","IBCNERP1",55,0)
R20 D PYRSEL I STOP G:$$STOP EXIT G R10
"RTN","IBCNERP1",56,0)
 ; Patient Selection param
"RTN","IBCNERP1",57,0)
R30 D PTSEL I STOP G:$$STOP EXIT G R20
"RTN","IBCNERP1",58,0)
 ; Type of data to return param
"RTN","IBCNERP1",59,0)
R40 D TYPE I STOP G:$$STOP EXIT G R30
"RTN","IBCNERP1",60,0)
 ; How far back do you want the expiration date
"RTN","IBCNERP1",61,0)
R45 I $G(IPRF)=1 D DTEXP I STOP G:$$STOP EXIT G R40
"RTN","IBCNERP1",62,0)
 ; Sort by param - Payer or Patient
"RTN","IBCNERP1",63,0)
R50 D SORT I STOP G:$$STOP EXIT G R45
"RTN","IBCNERP1",64,0)
 ; Select the output type
"RTN","IBCNERP1",65,0)
R60 S IBOUT=$$OUT I STOP G:$$STOP EXIT G R50
"RTN","IBCNERP1",66,0)
 I IBOUT="E" W !!,"To avoid undesired wrapping, please enter '0;256;999' at the 'DEVICE:' prompt.",!
"RTN","IBCNERP1",67,0)
 ; Select output device
"RTN","IBCNERP1",68,0)
R100 D DEVICE(IBCNERTN,.IBCNESPC,IBOUT) I STOP Q:+$G(IBFRB)&($G(IBOUT)="E")  G:$$STOP EXIT G:$G(IBCNESPC("TRCN"))'="" R05 G R50
"RTN","IBCNERP1",69,0)
 ;
"RTN","IBCNERP1",70,0)
EXIT ; Exit pt
"RTN","IBCNERP1",71,0)
 Q
"RTN","IBCNERP1",72,0)
 ;
"RTN","IBCNERP1",73,0)
 ;
"RTN","IBCNERP1",74,0)
COMPILE(IBCNERTN,IBCNESPC,IBOUT) ; 
"RTN","IBCNERP1",75,0)
 ; Entry point called from EN^XUTMDEVQ in either direct or queued mode.
"RTN","IBCNERP1",76,0)
 ; Input params:
"RTN","IBCNERP1",77,0)
 ;  IBCNERTN = Routine name for ^TMP($J,...
"RTN","IBCNERP1",78,0)
 ;  IBCNESPC = Array passed by ref of the report params
"RTN","IBCNERP1",79,0)
 ;
"RTN","IBCNERP1",80,0)
 ; Init scratch globals
"RTN","IBCNERP1",81,0)
 K ^TMP($J,IBCNERTN),^TMP($J,IBCNERTN_"X")
"RTN","IBCNERP1",82,0)
 ; Compile
"RTN","IBCNERP1",83,0)
 I IBCNERTN="IBCNERP1" D EN^IBCNERP2(IBCNERTN,.IBCNESPC,IBOUT)
"RTN","IBCNERP1",84,0)
 I IBCNERTN="IBCNERP4" D EN^IBCNERP5(IBCNERTN,.IBCNESPC)
"RTN","IBCNERP1",85,0)
 I IBCNERTN="IBCNERP7" D EN^IBCNERP8(IBCNERTN,.IBCNESPC)
"RTN","IBCNERP1",86,0)
 I IBCNERTN="IBCNERPF" D EN^IBCNERPG(IBCNERTN,.IBCNESPC,IBOUT)
"RTN","IBCNERP1",87,0)
 ; Print
"RTN","IBCNERP1",88,0)
 I '$G(ZTSTOP) D
"RTN","IBCNERP1",89,0)
 . I IBCNERTN="IBCNERP1" D EN3^IBCNERPA(IBCNERTN,.IBCNESPC,IBOUT)
"RTN","IBCNERP1",90,0)
 . I IBCNERTN="IBCNERP4" D EN6^IBCNERPA(IBCNERTN,.IBCNESPC,IBOUT)
"RTN","IBCNERP1",91,0)
 . I IBCNERTN="IBCNERP7" D EN^IBCNERP9(IBCNERTN,.IBCNESPC,IBOUT)
"RTN","IBCNERP1",92,0)
 . I IBCNERTN="IBCNERPF" D EN^IBCNERPH(IBCNERTN,.IBCNESPC,IBOUT)
"RTN","IBCNERP1",93,0)
 ; Close device
"RTN","IBCNERP1",94,0)
 D ^%ZISC
"RTN","IBCNERP1",95,0)
 ; Kill scratch globals
"RTN","IBCNERP1",96,0)
 K ^TMP($J,IBCNERTN),^TMP($J,IBCNERTN_"X")
"RTN","IBCNERP1",97,0)
 ; Purge task record
"RTN","IBCNERP1",98,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCNERP1",99,0)
 ;
"RTN","IBCNERP1",100,0)
COMPILX ; COMPILE exit pt
"RTN","IBCNERP1",101,0)
 Q
"RTN","IBCNERP1",102,0)
 ;
"RTN","IBCNERP1",103,0)
STOP() ; Determine if user wants to exit out of the whole option
"RTN","IBCNERP1",104,0)
 ; Init vars
"RTN","IBCNERP1",105,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERP1",106,0)
 ;
"RTN","IBCNERP1",107,0)
 W !
"RTN","IBCNERP1",108,0)
 S DIR(0)="Y"
"RTN","IBCNERP1",109,0)
 S DIR("A")="Do you want to exit out of this option entirely"
"RTN","IBCNERP1",110,0)
 S DIR("B")="YES"
"RTN","IBCNERP1",111,0)
 S DIR("?",1)="  Enter YES to immediately exit out of this option."
"RTN","IBCNERP1",112,0)
 S DIR("?")="  Enter NO to return to the previous question."
"RTN","IBCNERP1",113,0)
 D ^DIR K DIR
"RTN","IBCNERP1",114,0)
 I $D(DIRUT) S (STOP,Y)=1 G STOPX
"RTN","IBCNERP1",115,0)
 I 'Y S STOP=0
"RTN","IBCNERP1",116,0)
 ;
"RTN","IBCNERP1",117,0)
STOPX ; STOP exit pt
"RTN","IBCNERP1",118,0)
 Q Y
"RTN","IBCNERP1",119,0)
 ;
"RTN","IBCNERP1",120,0)
DTRANGE ; Determine start and end dates for date range param
"RTN","IBCNERP1",121,0)
 ; Init vars
"RTN","IBCNERP1",122,0)
 N X,Y,DIRUT
"RTN","IBCNERP1",123,0)
 ;
"RTN","IBCNERP1",124,0)
 W !
"RTN","IBCNERP1",125,0)
 ;
"RTN","IBCNERP1",126,0)
 S DIR(0)="D^:-NOW:EX"
"RTN","IBCNERP1",127,0)
 S DIR("A")="Start DATE"
"RTN","IBCNERP1",128,0)
 S DIR("?",1)="   Please enter a valid date for which an eIV Response"
"RTN","IBCNERP1",129,0)
 S DIR("?")="   would have been received. Future dates are not allowed."
"RTN","IBCNERP1",130,0)
 D ^DIR K DIR
"RTN","IBCNERP1",131,0)
 I $D(DIRUT) S STOP=1 G DTRANGX
"RTN","IBCNERP1",132,0)
 S IBCNESPC("BEGDT")=Y
"RTN","IBCNERP1",133,0)
 ; End date
"RTN","IBCNERP1",134,0)
DTRANG1 S DIR(0)="DA^"_Y_":-NOW:EX"
"RTN","IBCNERP1",135,0)
 S DIR("A")="  End DATE:  "
"RTN","IBCNERP1",136,0)
 S DIR("?",1)="   Please enter a valid date for which an eIV Response"
"RTN","IBCNERP1",137,0)
 S DIR("?",2)="   would have been received.  This date must not precede"
"RTN","IBCNERP1",138,0)
 S DIR("?")="   the Start Date.  Future dates are not allowed."
"RTN","IBCNERP1",139,0)
 D ^DIR K DIR
"RTN","IBCNERP1",140,0)
 I $D(DIRUT) S STOP=1 G DTRANGX
"RTN","IBCNERP1",141,0)
 S IBCNESPC("ENDDT")=Y
"RTN","IBCNERP1",142,0)
 ;
"RTN","IBCNERP1",143,0)
DTRANGX ; DTRANGE exit pt
"RTN","IBCNERP1",144,0)
 Q
"RTN","IBCNERP1",145,0)
 ;
"RTN","IBCNERP1",146,0)
PYRSEL ; Select one payer or ALL - File #365.12
"RTN","IBCNERP1",147,0)
 ; Init vars
"RTN","IBCNERP1",148,0)
 NEW DIC,DTOUT,DUOUT,X,Y
"RTN","IBCNERP1",149,0)
 ;
"RTN","IBCNERP1",150,0)
 W !
"RTN","IBCNERP1",151,0)
 S DIC(0)="ABEQ"
"RTN","IBCNERP1",152,0)
 S DIC("A")=$$FO^IBCNEUT1("Payer or <Return> for All Payers: ",40,"R")
"RTN","IBCNERP1",153,0)
 ; Do not allow selection of '~NO PAYER' and non-eIV payers
"RTN","IBCNERP1",154,0)
 S DIC("S")="I ($P(^(0),U,1)'=""~NO PAYER""),$$PYRAPP^IBCNEUT5(""IIV"",$G(Y))'="""""
"RTN","IBCNERP1",155,0)
 S DIC="^IBE(365.12,"
"RTN","IBCNERP1",156,0)
 D ^DIC
"RTN","IBCNERP1",157,0)
 I $D(DUOUT)!$D(DTOUT) S STOP=1 G PYRSELX
"RTN","IBCNERP1",158,0)
 ; If nothing was selected (Y=-1), select ALL payers
"RTN","IBCNERP1",159,0)
 S IBCNESPC("PYR")=$S(Y=-1:"",1:$P(Y,U,1))
"RTN","IBCNERP1",160,0)
 ;
"RTN","IBCNERP1",161,0)
PYRSELX ; PYRSEL exit pt
"RTN","IBCNERP1",162,0)
 Q
"RTN","IBCNERP1",163,0)
 ;
"RTN","IBCNERP1",164,0)
PTSEL ; Select one patient or ALL - File #2
"RTN","IBCNERP1",165,0)
 ; Init vars
"RTN","IBCNERP1",166,0)
 NEW DIC,DTOUT,DUOUT,X,Y
"RTN","IBCNERP1",167,0)
 ; Patient lookup
"RTN","IBCNERP1",168,0)
 W !
"RTN","IBCNERP1",169,0)
 S DIC(0)="AEQM"
"RTN","IBCNERP1",170,0)
 S DIC("A")=$$FO^IBCNEUT1("Patient or <Return> for All Patients: ",40,"R")
"RTN","IBCNERP1",171,0)
 S DIC="^DPT("
"RTN","IBCNERP1",172,0)
 D ^DIC
"RTN","IBCNERP1",173,0)
 I $D(DUOUT)!$D(DTOUT) S STOP=1 G PTSELX
"RTN","IBCNERP1",174,0)
 ; If nothing was selected (Y=-1), select ALL patients
"RTN","IBCNERP1",175,0)
 S IBCNESPC("PAT")=$S(Y=-1:"",1:$P(Y,U,1))
"RTN","IBCNERP1",176,0)
 ;
"RTN","IBCNERP1",177,0)
PTSELX ; PTSEL exit pt
"RTN","IBCNERP1",178,0)
 Q
"RTN","IBCNERP1",179,0)
 ;
"RTN","IBCNERP1",180,0)
TYPE ; Prompt to select to display All or Most Recent Responses for
"RTN","IBCNERP1",181,0)
 ; Patient/Payer combos
"RTN","IBCNERP1",182,0)
 ; Init vars
"RTN","IBCNERP1",183,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERP1",184,0)
 ;
"RTN","IBCNERP1",185,0)
 S DIR(0)="S^A:All Responses;M:Most Recent Responses"
"RTN","IBCNERP1",186,0)
 S DIR("A")="Select the type of responses to display"
"RTN","IBCNERP1",187,0)
 S DIR("B")="A"
"RTN","IBCNERP1",188,0)
 S DIR("?",1)="  A - All responses from the payer during the date range will be"
"RTN","IBCNERP1",189,0)
 S DIR("?",2)="      displayed for each unique payer/patient combination."
"RTN","IBCNERP1",190,0)
 S DIR("?",3)="      (Default)"
"RTN","IBCNERP1",191,0)
 S DIR("?",4)="  M - Only the most recently received response from the payer"
"RTN","IBCNERP1",192,0)
 S DIR("?",5)="      during the date range will be displayed for each unique"
"RTN","IBCNERP1",193,0)
 S DIR("?")="      payer/patient combination."
"RTN","IBCNERP1",194,0)
 D ^DIR K DIR
"RTN","IBCNERP1",195,0)
 I $D(DIRUT) S STOP=1 G TYPEX
"RTN","IBCNERP1",196,0)
 S IBCNESPC("TYPE")=Y
"RTN","IBCNERP1",197,0)
 ;
"RTN","IBCNERP1",198,0)
TYPEX ; TYPE exit pt
"RTN","IBCNERP1",199,0)
 Q
"RTN","IBCNERP1",200,0)
 ;
"RTN","IBCNERP1",201,0)
DTEXP ; Prompt for oldest expiration date to pull for.
"RTN","IBCNERP1",202,0)
 ; Init Vars
"RTN","IBCNERP1",203,0)
 N Y,DIRUT,TODAY
"RTN","IBCNERP1",204,0)
 ;
"RTN","IBCNERP1",205,0)
 W !
"RTN","IBCNERP1",206,0)
 ;
"RTN","IBCNERP1",207,0)
 S DIR(0)="D^:-NOW:EX"
"RTN","IBCNERP1",208,0)
 S DIR("A")="Earliest Policy Expiration Date to Select From"
"RTN","IBCNERP1",209,0)
 S DIR("B")="T-365"
"RTN","IBCNERP1",210,0)
 S DIR("?",1)=" Please enter a valid date in the past. Any policy with a reported"
"RTN","IBCNERP1",211,0)
 S DIR("?")=" expiration date prior to this date will not be selected."
"RTN","IBCNERP1",212,0)
 D ^DIR K DIR
"RTN","IBCNERP1",213,0)
 I $D(DIRUT) S STOP=1 G DTEXPX
"RTN","IBCNERP1",214,0)
 S IBCNESPC("DTEXP")=Y
"RTN","IBCNERP1",215,0)
 ;
"RTN","IBCNERP1",216,0)
DTEXPX ; DTEXP Exit
"RTN","IBCNERP1",217,0)
 Q
"RTN","IBCNERP1",218,0)
 ;
"RTN","IBCNERP1",219,0)
SORT ; Prompt to allow users to sort the report by Payer(default) or 
"RTN","IBCNERP1",220,0)
 ;  Patient
"RTN","IBCNERP1",221,0)
 ; Init vars
"RTN","IBCNERP1",222,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERP1",223,0)
 ;
"RTN","IBCNERP1",224,0)
 S DIR(0)="S^1:Payer Name;2:Patient Name"
"RTN","IBCNERP1",225,0)
 S DIR("A")="Select the primary sort field"
"RTN","IBCNERP1",226,0)
 S DIR("B")=1
"RTN","IBCNERP1",227,0)
 S DIR("?",1)="  1 - Payer Name is the primary sort, Patient Name is secondary."
"RTN","IBCNERP1",228,0)
 S DIR("?",2)="      (Default)"
"RTN","IBCNERP1",229,0)
 S DIR("?")="  2 - Patient Name is the primary sort, Payer Name is secondary."
"RTN","IBCNERP1",230,0)
 D ^DIR K DIR
"RTN","IBCNERP1",231,0)
 I $D(DIRUT) S STOP=1 G SORTX
"RTN","IBCNERP1",232,0)
 S IBCNESPC("SORT")=Y
"RTN","IBCNERP1",233,0)
 ;
"RTN","IBCNERP1",234,0)
SORTX ; SORT exit pt
"RTN","IBCNERP1",235,0)
 Q
"RTN","IBCNERP1",236,0)
 ;
"RTN","IBCNERP1",237,0)
RTYPE ; Prompt to allow users to report by date range or Trace #
"RTN","IBCNERP1",238,0)
 ; Init vars
"RTN","IBCNERP1",239,0)
 N D,DIC,DIR,X,Y,DIRUT,DTOUT,DUOUT
"RTN","IBCNERP1",240,0)
 ;
"RTN","IBCNERP1",241,0)
 S DIR(0)="S^1:Report by Date Range;2:Report by Trace #"
"RTN","IBCNERP1",242,0)
 S DIR("A")="Select the type of report to generate"
"RTN","IBCNERP1",243,0)
 S DIR("B")=1
"RTN","IBCNERP1",244,0)
 S DIR("?",1)="  1 - Generate report by date range, payer range, patient range"
"RTN","IBCNERP1",245,0)
 S DIR("?",2)="      and All or Most Recent responses for payer/patient."
"RTN","IBCNERP1",246,0)
 S DIR("?",3)="      (Default)"
"RTN","IBCNERP1",247,0)
 S DIR("?",4)="  2 - Generate report for a specific Trace # which corresponds"
"RTN","IBCNERP1",248,0)
 S DIR("?")="      to an unique response."
"RTN","IBCNERP1",249,0)
 D ^DIR K DIR
"RTN","IBCNERP1",250,0)
 I $D(DIRUT) S STOP=1 G RTYPEX
"RTN","IBCNERP1",251,0)
 I Y=1 S IBCNESPC("TRCN")="" G RTYPEX
"RTN","IBCNERP1",252,0)
 ;
"RTN","IBCNERP1",253,0)
 ; Allow user to select Trace # from x-ref "C"
"RTN","IBCNERP1",254,0)
 W !
"RTN","IBCNERP1",255,0)
 S DIC(0)="AEVZSQ"
"RTN","IBCNERP1",256,0)
 S DIC="^IBCN(365,",D="C",DIC("A")="Enter Trace # for report: "
"RTN","IBCNERP1",257,0)
 S DIC("W")="N IBX S IBX=$P($G(^(0)),U,2,3) W:$P(IBX,U,1) $P($G(^DPT($P(IBX,U,1),0)),U,1) W:$P(IBX,U,2) ""  ""_$P($G(^IBE(365.12,$P(IBX,U,2),0)),U,1)"
"RTN","IBCNERP1",258,0)
 D IX^DIC K DIC
"RTN","IBCNERP1",259,0)
 I $D(DTOUT)!$D(DUOUT) S STOP=1 G RTYPEX
"RTN","IBCNERP1",260,0)
 I 'Y!(Y<0) S STOP=1 G RTYPEX
"RTN","IBCNERP1",261,0)
 S IBCNESPC("TRCN")=$P(Y(0),U,9)_"^"_$P(Y,U,1)
"RTN","IBCNERP1",262,0)
 ;
"RTN","IBCNERP1",263,0)
RTYPEX ; RTYPE exit pt
"RTN","IBCNERP1",264,0)
 Q
"RTN","IBCNERP1",265,0)
 ;
"RTN","IBCNERP1",266,0)
DEVICE(IBCNERTN,IBCNESPC,IBOUT) ; Device Handler and possible TaskManager calls
"RTN","IBCNERP1",267,0)
 ;
"RTN","IBCNERP1",268,0)
 ; Input params:
"RTN","IBCNERP1",269,0)
 ;  IBCNERTN = Routine name for ^TMP($J,...
"RTN","IBCNERP1",270,0)
 ;  IBCNESPC = Array passed by ref of the report params
"RTN","IBCNERP1",271,0)
 ;  IBOUT    = "R" for Report format or "E" for Excel format
"RTN","IBCNERP1",272,0)
 ;
"RTN","IBCNERP1",273,0)
 ; Init vars
"RTN","IBCNERP1",274,0)
 N ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCNERP1",275,0)
 ;
"RTN","IBCNERP1",276,0)
 I IBCNERTN="IBCNERP4"!(IBCNERTN="IBCNERPF"&($G(IBCNESPC("TYPE"))="D")) W:$G(IBOUT)="R" !!!,"*** This report is 132 characters wide ***",!
"RTN","IBCNERP1",277,0)
 S ZTRTN="COMPILE^IBCNERP1("""_IBCNERTN_""",.IBCNESPC,"""_IBOUT_""")"
"RTN","IBCNERP1",278,0)
 S ZTDESC="IBCNE eIV "_$S(IBCNERTN="IBCNERP1":"Response",IBCNERTN="IBCNERPF":"Insurance Update",1:"Payer")_" Report"
"RTN","IBCNERP1",279,0)
 S ZTSAVE("IBCNESPC(")=""
"RTN","IBCNERP1",280,0)
 S ZTSAVE("IBCNERTN")=""
"RTN","IBCNERP1",281,0)
 S ZTSAVE("IBOUT")=""
"RTN","IBCNERP1",282,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","IBCNERP1",283,0)
 I POP S STOP=1
"RTN","IBCNERP1",284,0)
 ;
"RTN","IBCNERP1",285,0)
DEVICEX ; DEVICE exit pt
"RTN","IBCNERP1",286,0)
 Q
"RTN","IBCNERP1",287,0)
 ;
"RTN","IBCNERP1",288,0)
OUT() ; Prompt to allow users to select output format
"RTN","IBCNERP1",289,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERP1",290,0)
 W !
"RTN","IBCNERP1",291,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNERP1",292,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNERP1",293,0)
 S DIR("B")="Report"
"RTN","IBCNERP1",294,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q ""
"RTN","IBCNERP1",295,0)
 Q Y
"RTN","IBCNERP2")
0^97^B31175764
"RTN","IBCNERP2",1,0)
IBCNERP2 ;DAOU/BHS - IBCNE eIV RESPONSE REPORT COMPILE ;03-JUN-2002
"RTN","IBCNERP2",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,416,528**;21-MAR-94;Build 163
"RTN","IBCNERP2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERP2",4,0)
 ;
"RTN","IBCNERP2",5,0)
 ; Input vars from IBCNERP1:
"RTN","IBCNERP2",6,0)
 ;  IBCNERTN="IBCNERP1"
"RTN","IBCNERP2",7,0)
 ;  IBCNESPC("BEGDT")=Start Dt for rpt
"RTN","IBCNERP2",8,0)
 ;  IBCNESPC("ENDDT")=End Dt for rpt
"RTN","IBCNERP2",9,0)
 ;  IBCNESPC("PYR")=Pyr IEN for rpt. If "", then show all.
"RTN","IBCNERP2",10,0)
 ;  IBCNESPC("PAT")=Pt IEN for rpt. If "", then show all.
"RTN","IBCNERP2",11,0)
 ;  IBCNESPC("TYPE")=A (All Responses) for date range OR M (Most Recent
"RTN","IBCNERP2",12,0)
 ;   Responses) for date range (by unique Pyr/Pt pair)
"RTN","IBCNERP2",13,0)
 ;  IBCNESPC("SORT")=1 (Pyr nm) OR 2 (Pt nm)
"RTN","IBCNERP2",14,0)
 ;  IBCNESPC("TRCN")=Trace #^IEN, if non-null, all other params are null
"RTN","IBCNERP2",15,0)
 ;  IBCNESPC("RFLAG")=Report Flag used to indicate which report is being
"RTN","IBCNERP2",16,0)
 ;   run.  Response Report (0), Inactive Report (1), or Ambiguous
"RTN","IBCNERP2",17,0)
 ;   Report (2).
"RTN","IBCNERP2",18,0)
 ;  IBCNESPC("DTEXP")=Expiration date used in the inactive policy report
"RTN","IBCNERP2",19,0)
 ;  IBOUT="R" for Report format or "E" for Excel format
"RTN","IBCNERP2",20,0)
 ;
"RTN","IBCNERP2",21,0)
 ; Output vars used by IBCNERP3:
"RTN","IBCNERP2",22,0)
 ;  Structure of ^TMP based on eIV Response File (#365)
"RTN","IBCNERP2",23,0)
 ;   IBCNERTN="IBCNERP1"
"RTN","IBCNERP2",24,0)
 ;   SORT1=PyrNm (SORT=1) or PtNm(SORT=2)
"RTN","IBCNERP2",25,0)
 ;   SORT2=PtNm (SORT=1) or PyrNm (SORT=2)
"RTN","IBCNERP2",26,0)
 ;  ^TMP($J,IBCNERTN,SORT1,SORT2,CNT,0/1) based on ^IBCN(365,DA,0/1)
"RTN","IBCNERP2",27,0)
 ;   CNT=Seq ct
"RTN","IBCNERP2",28,0)
 ;  ^TMP($J,IBCNERTN,SORT1,SORT2,2,EBCT) based on ^IBCN(365,DA,2,EBCT,0)
"RTN","IBCNERP2",29,0)
 ;   EBCT = Elig/Benefit multiple field IEN (ptr to 365.02)
"RTN","IBCNERP2",30,0)
 ;  ^TMP($J,IBCNERTN,SORT1,SORT2,2,EBCT,NTCT) based on
"RTN","IBCNERP2",31,0)
 ;   ^IBCN(365,DA,2,EB,0,NT,0) Notes for EB seg
"RTN","IBCNERP2",32,0)
 ;   NTCT = Notes Ct may not equal Notes IEN (365.22) if ln must wrap
"RTN","IBCNERP2",33,0)
 ;  ^TMP($J,IBCNERTN,SORT1,SORT2,3,CNCT) based on ^IBCN(365,DA,3,CNCT,0)
"RTN","IBCNERP2",34,0)
 ;   CNCT = Contact Person multiple field IEN (ptr to 365.03)
"RTN","IBCNERP2",35,0)
 ;  ^TMP($J,IBCNERTN,SORT1,SORT2,4,CT) based on ^IBCN(365,DA,4)
"RTN","IBCNERP2",36,0)
 ;    CT=1 if len of text <=70, else ln is split
"RTN","IBCNERP2",37,0)
 ;  ^TMP($J,IBCNERTN,SORT1,SORT2,5,CT) based on # lns of comments reqd
"RTN","IBCNERP2",38,0)
 ;    CT=1 to display future retransmission date
"RTN","IBCNERP2",39,0)
 ;
"RTN","IBCNERP2",40,0)
 ; Must call at EN
"RTN","IBCNERP2",41,0)
 Q
"RTN","IBCNERP2",42,0)
 ;
"RTN","IBCNERP2",43,0)
 ;
"RTN","IBCNERP2",44,0)
EN(IBCNERTN,IBCNESPC,IBOUT) ; Entry
"RTN","IBCNERP2",45,0)
 ; Init
"RTN","IBCNERP2",46,0)
 N IBDT,IBBDT,IBPY,IBPYR,IBPT
"RTN","IBCNERP2",47,0)
 N IBPAT,IBPTR,SORT1,SORT2,RPTDATA,IBTOT
"RTN","IBCNERP2",48,0)
 N PYRIEN,PATIEN,IBTRC,IBTYP,IBCT,IBSRT,IBEXP,FRST,TQN,DONTINC,IPRF
"RTN","IBCNERP2",49,0)
 ;
"RTN","IBCNERP2",50,0)
 I '$D(ZTQUEUED),$G(IOST)["C-",$G(IBOUT)="R" W !!,"Compiling report data ..."
"RTN","IBCNERP2",51,0)
 ;
"RTN","IBCNERP2",52,0)
 ; Temp ct
"RTN","IBCNERP2",53,0)
 S (IBTOT,IBCT)=0
"RTN","IBCNERP2",54,0)
 ;
"RTN","IBCNERP2",55,0)
 ; Kill scratch globals
"RTN","IBCNERP2",56,0)
 K ^TMP($J,IBCNERTN),^TMP($J,IBCNERTN_"X")
"RTN","IBCNERP2",57,0)
 ;
"RTN","IBCNERP2",58,0)
 S IBTRC=$G(IBCNESPC("TRCN"))
"RTN","IBCNERP2",59,0)
 ; Skip for TRACE#
"RTN","IBCNERP2",60,0)
 I IBTRC'="" G TRCN
"RTN","IBCNERP2",61,0)
 ;
"RTN","IBCNERP2",62,0)
 S IBBDT=IBCNESPC("BEGDT")
"RTN","IBCNERP2",63,0)
 S IBPY=$G(IBCNESPC("PYR"))
"RTN","IBCNERP2",64,0)
 S IBPT=$G(IBCNESPC("PAT"))
"RTN","IBCNERP2",65,0)
 S IBTYP=$G(IBCNESPC("TYPE"))
"RTN","IBCNERP2",66,0)
 S IBSRT=$G(IBCNESPC("SORT"))
"RTN","IBCNERP2",67,0)
 S IBEXP=$G(IBCNESPC("DTEXP"))
"RTN","IBCNERP2",68,0)
 S IPRF=$G(IBCNESPC("RFLAG"))
"RTN","IBCNERP2",69,0)
 ;
"RTN","IBCNERP2",70,0)
 ; Loop thru the eIV Response File (#365) by Date/Time Response Rec X-Ref
"RTN","IBCNERP2",71,0)
 ; S IBDT=$O(^IBCN(365,"AD",IBCNESPC("ENDDT")))
"RTN","IBCNERP2",72,0)
 ; Initialize IBDT to end date 
"RTN","IBCNERP2",73,0)
 S IBDT=IBCNESPC("ENDDT")_".999999"
"RTN","IBCNERP2",74,0)
 F  S IBDT=$O(^IBCN(365,"AD",IBDT),-1) Q:IBDT=""!($P(IBDT,".",1)<IBBDT)  D  Q:$G(ZTSTOP)
"RTN","IBCNERP2",75,0)
 . S PYRIEN=$S(IBPY="":0,1:$O(^IBCN(365,"AD",IBDT,IBPY),-1))
"RTN","IBCNERP2",76,0)
 . F  S PYRIEN=$O(^IBCN(365,"AD",IBDT,PYRIEN)) Q:'PYRIEN!((IBPY'="")&(PYRIEN'=IBPY))  D  Q:$G(ZTSTOP)
"RTN","IBCNERP2",77,0)
 .. I $D(ZTQUEUED),$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCNERP2",78,0)
 .. ; Pyr nm from Pyr File (#365.12)
"RTN","IBCNERP2",79,0)
 .. S IBPYR=$P($G(^IBE(365.12,PYRIEN,0)),U)
"RTN","IBCNERP2",80,0)
 .. I IBPYR="" Q
"RTN","IBCNERP2",81,0)
 .. S PATIEN=$S(IBPT="":0,1:$O(^IBCN(365,"AD",IBDT,PYRIEN,IBPT),-1))
"RTN","IBCNERP2",82,0)
 .. F  S PATIEN=$O(^IBCN(365,"AD",IBDT,PYRIEN,PATIEN)) Q:'PATIEN!((IBPT'="")&(PATIEN'=IBPT))  D  Q:$G(ZTSTOP)
"RTN","IBCNERP2",83,0)
 ... ; Pt nm from Pt File (#2)
"RTN","IBCNERP2",84,0)
 ... S IBPAT=$P($G(^DPT(PATIEN,0)),U)
"RTN","IBCNERP2",85,0)
 ... I IBPAT="" Q
"RTN","IBCNERP2",86,0)
 ... S IBPTR=0
"RTN","IBCNERP2",87,0)
 ... F  S IBPTR=$O(^IBCN(365,"AD",IBDT,PYRIEN,PATIEN,IBPTR)) Q:'IBPTR  D  Q:$G(ZTSTOP)
"RTN","IBCNERP2",88,0)
 .... S IBTOT=IBTOT+1
"RTN","IBCNERP2",89,0)
 .... ; Since non-positive identifications are no longer placed in the 
"RTN","IBCNERP2",90,0)
 .... ; insurance buffer, two new reports were added to allow users to
"RTN","IBCNERP2",91,0)
 .... ; view the responses.  One report (IPFR=1) shows only responses
"RTN","IBCNERP2",92,0)
 .... ; of inactive policies.  The other (IPFR=2) shows ambiguous responses.
"RTN","IBCNERP2",93,0)
 .... ; Any response that is not active nor inactive is considered 
"RTN","IBCNERP2",94,0)
 .... ; ambiguous for the purposes of this report.
"RTN","IBCNERP2",95,0)
 .... I IPRF D  Q:DONTINC
"RTN","IBCNERP2",96,0)
 ..... N EBIC,NODE1,PCD
"RTN","IBCNERP2",97,0)
 ..... S DONTINC=1
"RTN","IBCNERP2",98,0)
 ..... S TQN=$P($G(^IBCN(365,IBPTR,0)),U,5) Q:TQN=""  ; TQ ien (#365.1)
"RTN","IBCNERP2",99,0)
 ..... S NODE1=$G(^IBCN(365,IBPTR,1))
"RTN","IBCNERP2",100,0)
 ..... I $P($G(^IBCN(365.1,TQN,0)),U,11)="V" Q     ; If verification quit
"RTN","IBCNERP2",101,0)
 ..... I IPRF=1,($P(NODE1,U,12)="")!($P(NODE1,U,12)<$G(IBEXP)) Q
"RTN","IBCNERP2",102,0)
 ..... S FRST=$O(^IBCN(365,IBPTR,2,0))
"RTN","IBCNERP2",103,0)
 ..... I FRST="" Q
"RTN","IBCNERP2",104,0)
 ..... S PCD=$P($G(^IBCN(365,IBPTR,2,FRST,0)),U,6)
"RTN","IBCNERP2",105,0)
 ..... I PCD]"",PCD'="eIV Eligibility Determination" Q
"RTN","IBCNERP2",106,0)
 ..... S EBIC=$$GET1^DIQ(365.02,FRST_","_IBPTR_",","ELIGIBILITY/BENEFIT INFO:CODE")
"RTN","IBCNERP2",107,0)
 ..... I PCD]"",IPRF=1,EBIC'=6 Q
"RTN","IBCNERP2",108,0)
 ..... I PCD]"",IPRF=2,EBIC=6!(EBIC=1) Q
"RTN","IBCNERP2",109,0)
 ..... I $P(NODE1,U,14)]"" Q  ; Error Condition
"RTN","IBCNERP2",110,0)
 ..... I $P(NODE1,U,15)]"" Q  ; Error Action
"RTN","IBCNERP2",111,0)
 ..... I $P($G(^IBCN(365,IBPTR,4)),U)]"" Q  ; Error Text
"RTN","IBCNERP2",112,0)
 ..... S DONTINC=0
"RTN","IBCNERP2",113,0)
 ....;
"RTN","IBCNERP2",114,0)
 .... I $D(ZTQUEUED),IBTOT#100=0,$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCNERP2",115,0)
 .... ; Sort fields
"RTN","IBCNERP2",116,0)
 .... S SORT1=$S(IBSRT=1:IBPYR,1:IBPAT)
"RTN","IBCNERP2",117,0)
 .... S SORT2=$S(IBSRT=1:IBPAT,1:IBPYR)
"RTN","IBCNERP2",118,0)
 .... ; Only check for Most Recent - Pyr/Pt pair
"RTN","IBCNERP2",119,0)
 .... I IBTYP="M",$D(^TMP($J,IBCNERTN_"X",PYRIEN,PATIEN)) Q
"RTN","IBCNERP2",120,0)
 .... ; Set temp ind.
"RTN","IBCNERP2",121,0)
 .... I IBTYP="M" S ^TMP($J,IBCNERTN_"X",PYRIEN,PATIEN)=""
"RTN","IBCNERP2",122,0)
 .... ; Update ct
"RTN","IBCNERP2",123,0)
 .... S IBCT=IBCT+1
"RTN","IBCNERP2",124,0)
 .... ; Sort data - build RPTDATA array
"RTN","IBCNERP2",125,0)
 .... K RPTDATA
"RTN","IBCNERP2",126,0)
 .... D GETDATA^IBCNERPE(IBPTR,.RPTDATA)
"RTN","IBCNERP2",127,0)
 .... ; Merge data from RPTDATA to ^TMP
"RTN","IBCNERP2",128,0)
 .... M ^TMP($J,IBCNERTN,SORT1,SORT2,IBCT)=RPTDATA
"RTN","IBCNERP2",129,0)
 ;
"RTN","IBCNERP2",130,0)
 ; Purge index of duplicate Pyr/Pt combos
"RTN","IBCNERP2",131,0)
 K ^TMP($J,IBCNERTN_"X")
"RTN","IBCNERP2",132,0)
 ;
"RTN","IBCNERP2",133,0)
 G EXIT
"RTN","IBCNERP2",134,0)
 ;
"RTN","IBCNERP2",135,0)
TRCN ; Trace # proc.
"RTN","IBCNERP2",136,0)
 S IBPTR=$P(IBTRC,U,2)
"RTN","IBCNERP2",137,0)
 I IBPTR="" G EXIT
"RTN","IBCNERP2",138,0)
 ; Sort the data - build RPTDATA array
"RTN","IBCNERP2",139,0)
 KILL RPTDATA
"RTN","IBCNERP2",140,0)
 D GETDATA^IBCNERPE(IBPTR,.RPTDATA)
"RTN","IBCNERP2",141,0)
 ; Default sort - one record
"RTN","IBCNERP2",142,0)
 ; Pyr nm from Pyr File (#365.12)
"RTN","IBCNERP2",143,0)
 S PYRIEN=$P(RPTDATA(0),U,3)
"RTN","IBCNERP2",144,0)
 I PYRIEN="" G EXIT
"RTN","IBCNERP2",145,0)
 S SORT1=$P($G(^IBE(365.12,PYRIEN,0)),U,1)
"RTN","IBCNERP2",146,0)
 I SORT1="" G EXIT
"RTN","IBCNERP2",147,0)
 ; Pt nm from Pt File (#2)
"RTN","IBCNERP2",148,0)
 S PATIEN=$P(RPTDATA(0),U,2)
"RTN","IBCNERP2",149,0)
 I PATIEN="" G EXIT
"RTN","IBCNERP2",150,0)
 S SORT2=$P($G(^DPT(PATIEN,0)),U,1)
"RTN","IBCNERP2",151,0)
 I SORT2="" G EXIT
"RTN","IBCNERP2",152,0)
 ; Merge data- RPTDATA to ^TMP
"RTN","IBCNERP2",153,0)
 M ^TMP($J,IBCNERTN,SORT1,SORT2,1)=RPTDATA
"RTN","IBCNERP2",154,0)
 ;
"RTN","IBCNERP2",155,0)
EXIT ;
"RTN","IBCNERP2",156,0)
 Q
"RTN","IBCNERP2",157,0)
 ;
"RTN","IBCNERP2",158,0)
X12(FILE,CODE,FLD) ; Output based on File # and X12 code
"RTN","IBCNERP2",159,0)
 I $G(FILE)=""!($G(CODE)="") Q ""
"RTN","IBCNERP2",160,0)
 ; Quit w/o label if not defined in File Def.
"RTN","IBCNERP2",161,0)
 Q $$LBL(365.02,$G(FLD))_$P($G(^IBE(FILE,CODE,0)),U,2)  ;
"RTN","IBCNERP2",162,0)
LBL(FILE,FLD) ; Determine label from File Def.
"RTN","IBCNERP2",163,0)
 N IBLBL
"RTN","IBCNERP2",164,0)
 ;
"RTN","IBCNERP2",165,0)
 I $G(FILE)=""!($G(FLD)="") Q ""
"RTN","IBCNERP2",166,0)
 S IBLBL=$$GET1^DID(FILE,FLD,"","TITLE")
"RTN","IBCNERP2",167,0)
 Q $S(IBLBL'="":IBLBL_": ",1:"")
"RTN","IBCNERP2",168,0)
 ;
"RTN","IBCNERP3")
0^98^B79824613
"RTN","IBCNERP3",1,0)
IBCNERP3 ;DAOU/BHS - IBCNE eIV RESPONSE REPORT PRINT ;03-JUN-2002
"RTN","IBCNERP3",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,416,528**;21-MAR-94;Build 163
"RTN","IBCNERP3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERP3",4,0)
 ;
"RTN","IBCNERP3",5,0)
 ; eIV - Insurance Verification
"RTN","IBCNERP3",6,0)
 ;
"RTN","IBCNERP3",7,0)
 ; Called by IBCNERPA
"RTN","IBCNERP3",8,0)
 ; Input from IBCNERP1/2:
"RTN","IBCNERP3",9,0)
 ;  IBCNERTN="IBCNERP1" - Driver rtn
"RTN","IBCNERP3",10,0)
 ;  IBCNESPC("BEGDT")=Start Dt,  IBCNESPC("ENDDT")=End Dt
"RTN","IBCNERP3",11,0)
 ;  IBCNESPC("PYR")=Pyr IEN OR "" for all
"RTN","IBCNERP3",12,0)
 ;  IBCNESPC("PAT")=Pat IEN OR "" for all
"RTN","IBCNERP3",13,0)
 ;  IBCNESPC("TYPE")=A (All Responses) OR M (Most Recent Responses) for
"RTN","IBCNERP3",14,0)
 ;   unique Pyr/Pt pair
"RTN","IBCNERP3",15,0)
 ;  IBCNESPC("SORT")=1 (PyrNm) OR 2 (PatNm)
"RTN","IBCNERP3",16,0)
 ;  IBCNESPC("TRCN")=Trace #^IEN, if non-null, all params null
"RTN","IBCNERP3",17,0)
 ;  IBCNESPC("RFLAG")=Report Flag used to indicate which report is being
"RTN","IBCNERP3",18,0)
 ;   run.  Response Report (0), Inactive Report (1), or Ambiguous
"RTN","IBCNERP3",19,0)
 ;   Report (2).
"RTN","IBCNERP3",20,0)
 ;  IBCNESPC("DTEXP")=Expiration date used in the inactive policy report
"RTN","IBCNERP3",21,0)
 ;  IBOUT="R" for Report format or "E" for Excel format
"RTN","IBCNERP3",22,0)
 ;
"RTN","IBCNERP3",23,0)
 ;  Based on structure of eIV Response File (#365)
"RTN","IBCNERP3",24,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,CT,0) based on ^IBCN(365,DA,0)
"RTN","IBCNERP3",25,0)
 ;    IBCNERTN="IBCNERP1", S1=PyrName(SORT=1) or PatNm(SORT=2),
"RTN","IBCNERP3",26,0)
 ;    S2=PatName(SORT=1) or PyrName(SORT=2), CT=Seq ct
"RTN","IBCNERP3",27,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,CT,1) based on ^IBCN(365,DA,1)
"RTN","IBCNERP3",28,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,2,EBCT) based on ^IBCN(365,DA,2)
"RTN","IBCNERP3",29,0)
 ;    EBCT=E/B IEN (365.02)
"RTN","IBCNERP3",30,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,2,EBCT,NTCT)=based on ^IBCN(365,DA,2,EB,NT)
"RTN","IBCNERP3",31,0)
 ;   NTCT=Notes Ct, may not be Notes IEN, if line wrapped (365.021)
"RTN","IBCNERP3",32,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,2,CNCT) based on ^IBCN(365,DA,3)
"RTN","IBCNERP3",33,0)
 ;   CNCT=Cont Pers IEN (365.03)
"RTN","IBCNERP3",34,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,4,CT)= err txt based on ^IBCN(365,DA,4)
"RTN","IBCNERP3",35,0)
 ;   CT=1/2 if >60 ch long
"RTN","IBCNERP3",36,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,5,CT)= based on # lines of comments reqd
"RTN","IBCNERP3",37,0)
 ;   CT=1 to display future retransmission date
"RTN","IBCNERP3",38,0)
 ; Must call at appropriate tag
"RTN","IBCNERP3",39,0)
 Q
"RTN","IBCNERP3",40,0)
 ;
"RTN","IBCNERP3",41,0)
PRINT(RTN,BDT,EDT,PYR,PAT,TYP,SRT,PGC,PXT,MAX,CRT,TRC,EXP,IPRF,IBRDT,IBOUT) ; Print data
"RTN","IBCNERP3",42,0)
 ; Input: RTN="IBCENRP1", BDT=start dt, EDT=end dt, PYR=pyr ien,
"RTN","IBCNERP3",43,0)
 ;  PAT= pat ien, TYP=A/M, SRT=1/2, PGC=page ct, PXT=exit flg,
"RTN","IBCNERP3",44,0)
 ; MAX=max line ct/pg, CRT=1/0, TRC=trc#, EXP=earliest expiration date,IBRDT=today's date/time formatted 
"RTN","IBCNERP3",45,0)
 N EORMSG,NONEMSG,SORT1,SORT2,CNT,CNFLG,ERFLG,PRT1,PRT2,DISPDATA
"RTN","IBCNERP3",46,0)
 N OPRT1,OPRT2 ; Original values for PRT1 and PRT2, respectively
"RTN","IBCNERP3",47,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCNERP3",48,0)
 S NONEMSG="* * * N O  D A T A  F O U N D * * *"
"RTN","IBCNERP3",49,0)
 S (SORT1,SORT2)=""
"RTN","IBCNERP3",50,0)
 ;
"RTN","IBCNERP3",51,0)
 D PHDL:IBOUT="E" I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERP3",52,0)
 ;
"RTN","IBCNERP3",53,0)
 ; If global does not exist - display No Data message
"RTN","IBCNERP3",54,0)
 I '$D(^TMP($J,RTN)) W !,?(80-$L(NONEMSG)\2),NONEMSG,!!
"RTN","IBCNERP3",55,0)
 ;
"RTN","IBCNERP3",56,0)
 F  S SORT1=$O(^TMP($J,RTN,SORT1)) Q:SORT1=""  D  Q:PXT!$G(ZTSTOP)
"RTN","IBCNERP3",57,0)
 . S (OPRT1,PRT1)=$S(SORT1="~NO PAYER":"* No Payer Identified",1:SORT1)
"RTN","IBCNERP3",58,0)
 . S SORT2="" F  S SORT2=$O(^TMP($J,RTN,SORT1,SORT2)) Q:SORT2=""  D  Q:PXT!$G(ZTSTOP)
"RTN","IBCNERP3",59,0)
 . . S (OPRT2,PRT2)=$S(SORT2="~NO PAYER":"* No Payer Identified",1:SORT2)
"RTN","IBCNERP3",60,0)
 . . S CNT="" F  S CNT=$O(^TMP($J,RTN,SORT1,SORT2,CNT)) Q:CNT=""  D  Q:PXT!$G(ZTSTOP)
"RTN","IBCNERP3",61,0)
 . . . I IBOUT="E" D XLDATA Q
"RTN","IBCNERP3",62,0)
 . . . D SSDB ; add SSN (from ^DPT) and DOB to patient header info
"RTN","IBCNERP3",63,0)
 . . . D HEADER
"RTN","IBCNERP3",64,0)
 . . . I $G(ZTSTOP)!PXT Q
"RTN","IBCNERP3",65,0)
 . . . K DISPDATA  ; Init disp
"RTN","IBCNERP3",66,0)
 . . . D DATA^IBCNERPE(.DISPDATA),LINE(.DISPDATA)  ; build/display data
"RTN","IBCNERP3",67,0)
 ;
"RTN","IBCNERP3",68,0)
 I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERP3",69,0)
 S (CNFLG,ERFLG)=0
"RTN","IBCNERP3",70,0)
 I $Y+1>MAX!('PGC) D HEADER I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERP3",71,0)
 W !,?(80-$L(EORMSG)\2),EORMSG
"RTN","IBCNERP3",72,0)
PRINTX ;
"RTN","IBCNERP3",73,0)
 Q
"RTN","IBCNERP3",74,0)
 ;
"RTN","IBCNERP3",75,0)
XLDATA ; Excel output  ; 528
"RTN","IBCNERP3",76,0)
 N PYRNM,PTNM,DFN,PTSSN,PTDOB,REFQ,REFID,RFIDSC,PROCD,REFID2,PRIDC,MLIST,EMPST,GOVAFL,DTMP,SRVRNK,MDESC,RPTDATA
"RTN","IBCNERP3",77,0)
 M RPTDATA=^TMP($J,RTN,SORT1,SORT2,CNT)
"RTN","IBCNERP3",78,0)
 S PYRNM=$P(RPTDATA(0),U,3),PYRNM=$$GET1^DIQ(365.12,PYRNM,.01)
"RTN","IBCNERP3",79,0)
 S DFN=$P(RPTDATA(0),U,2),PTNM=$$GET1^DIQ(2,DFN,.01)
"RTN","IBCNERP3",80,0)
 S PTSSN=$E($$GETSSN^IBCNEDE5(DFN),6,9),PTDOB=$$GETDOB^IBCNEDEQ(DFN)
"RTN","IBCNERP3",81,0)
 W !,$S(SRT=1:PYRNM,1:PTNM)_U_$S(SRT=1:PTNM,1:PYRNM)_U_PTSSN_U_PTDOB_U_$P(RPTDATA(13),U)_U_$P(RPTDATA(13),U,2)_U_$P(RPTDATA(1),U,2)_U_$P(RPTDATA(1),U,3)_U_$P(RPTDATA(1),U,4)_U_$P(RPTDATA(14),U)_U_$P(RPTDATA(14),U,2)_U_$P(RPTDATA(1),U,8)
"RTN","IBCNERP3",82,0)
 W U_RPTDATA(8)_U_$P(RPTDATA(1),U,18)_U_$P(RPTDATA(1),U,13)_U_$P(RPTDATA(1),U,10)_U_$P(RPTDATA(1),U,16)_U_$P(RPTDATA(1),U,11)_U_$P(RPTDATA(1),U,17)
"RTN","IBCNERP3",83,0)
 W U_$P(RPTDATA(1),U,12)_U_$P(RPTDATA(1),U,19)_U_$P(RPTDATA(0),U,7)_U_$P(RPTDATA(0),U,9)_U_$P(RPTDATA(1),U,20)_U
"RTN","IBCNERP3",84,0)
 D DATA^IBCNERPE(.DISPDATA)   ; Build Elig. Ben. global
"RTN","IBCNERP3",85,0)
 D GTDT
"RTN","IBCNERP3",86,0)
 W $G(REFQ)_U_$G(REFID)_U_$G(RFIDSC)_U_$G(PROCD)_U_$G(REFID2)_U_$G(PRIDC)_U_$G(MLIST)_U_$G(EMPST)_U_$G(GOVAFL)_U_$G(DTMP)_U_$G(SRVRNK)_U_$G(MDESC)
"RTN","IBCNERP3",87,0)
 Q
"RTN","IBCNERP3",88,0)
 ;
"RTN","IBCNERP3",89,0)
GTDT ; Get Eligibility/Group Plan Information
"RTN","IBCNERP3",90,0)
 ;^TMP("EIV RESP. EB DATA",$J,"DISP",1,0) 
"RTN","IBCNERP3",91,0)
 ;S SEL=$$TRIM^XLFSTR($E(Y(0),1,30),"R")
"RTN","IBCNERP3",92,0)
 N LN,OUT,DATA
"RTN","IBCNERP3",93,0)
 S (REFID,REFQ,RFIDSC,PROCD,REFID2,PRIDC,EMPST,MLIST,DTMP,GOVAFL,SRVRNK,MDESC)=""
"RTN","IBCNERP3",94,0)
 S LN=0
"RTN","IBCNERP3",95,0)
 F  S LN=$O(^TMP("EIV RESP. EB DATA",$J,"DISP",LN)) Q:LN=""  D
"RTN","IBCNERP3",96,0)
 . S OUT=$G(^TMP("EIV RESP. EB DATA",$J,"DISP",LN,0))
"RTN","IBCNERP3",97,0)
 . ;
"RTN","IBCNERP3",98,0)
 . I OUT["Reference ID Qualifier:" D
"RTN","IBCNERP3",99,0)
 . . S DATA=$P(OUT,"Reference ID Qualifier:",2)
"RTN","IBCNERP3",100,0)
 . . S REFID=$$TRIM^XLFSTR($P(DATA,"Reference ID:",2),"R")
"RTN","IBCNERP3",101,0)
 . . S REFQ=$$TRIM^XLFSTR($P(DATA,"Reference ID:",1),"R")
"RTN","IBCNERP3",102,0)
 . I OUT["Reference ID description:" D
"RTN","IBCNERP3",103,0)
 . . S DATA=$P(OUT,"Reference ID description:",2)
"RTN","IBCNERP3",104,0)
 . . S RFIDSC=$$TRIM^XLFSTR(DATA,"R")
"RTN","IBCNERP3",105,0)
 . I OUT["Provider Code:" D
"RTN","IBCNERP3",106,0)
 . . S DATA=$P(OUT,"Provider Code:",2)
"RTN","IBCNERP3",107,0)
 . . S PROCD=$$TRIM^XLFSTR(DATA,"R")
"RTN","IBCNERP3",108,0)
 . I OUT["Reference ID:" D
"RTN","IBCNERP3",109,0)
 . . S DATA=$P(OUT,"Reference ID:",2)
"RTN","IBCNERP3",110,0)
 . . S REFID2=$$TRIM^XLFSTR(DATA,"R")
"RTN","IBCNERP3",111,0)
 . I OUT["Primary Diagnosis Code:" D
"RTN","IBCNERP3",112,0)
 . . S DATA=$P(OUT,"Primary Diagnosis Code:",2)
"RTN","IBCNERP3",113,0)
 . . S PRIDC=$$TRIM^XLFSTR(DATA,"R")
"RTN","IBCNERP3",114,0)
 . I OUT["Military Info Status:" D
"RTN","IBCNERP3",115,0)
 . . S DATA=$P(OUT,"Military Info Status:",2)
"RTN","IBCNERP3",116,0)
 . . S EMPST=$$TRIM^XLFSTR($P(DATA,"Employment Status:",2),"R")
"RTN","IBCNERP3",117,0)
 . . S MLIST=$$TRIM^XLFSTR($P(DATA,"Employment Status:",1),"R")
"RTN","IBCNERP3",118,0)
 . I OUT["Government Affiliation:" D
"RTN","IBCNERP3",119,0)
 . . S DATA=$P(OUT,"Government Affiliation:",2)
"RTN","IBCNERP3",120,0)
 . . S DTMP=$$TRIM^XLFSTR($P(DATA,"Date Time Period:",2),"R")
"RTN","IBCNERP3",121,0)
 . . S GOVAFL=$$TRIM^XLFSTR($P(DATA,"Date Time Period:",1),"R")
"RTN","IBCNERP3",122,0)
 . I OUT["Service Rank:" D
"RTN","IBCNERP3",123,0)
 . . S DATA=$P(OUT,"Service Rank:",2)
"RTN","IBCNERP3",124,0)
 . . S SRVRNK=$$TRIM^XLFSTR(DATA,"R")
"RTN","IBCNERP3",125,0)
 . I OUT["Desc:" D
"RTN","IBCNERP3",126,0)
 . . S DATA=$P(OUT,"Desc:",2)
"RTN","IBCNERP3",127,0)
 . . S MDESC=$$TRIM^XLFSTR(DATA,"R")
"RTN","IBCNERP3",128,0)
 Q
"RTN","IBCNERP3",129,0)
 ;
"RTN","IBCNERP3",130,0)
HEADER ; Print hdr info
"RTN","IBCNERP3",131,0)
 N X,Y,DIR,DTOUT,DUOUT,OFFSET,HDR,LIN,HDR
"RTN","IBCNERP3",132,0)
 I CRT,PGC>0,'$D(ZTQUEUED) D  I PXT G HEADERX
"RTN","IBCNERP3",133,0)
 . I MAX<51 F LIN=1:1:(MAX-$Y) W !
"RTN","IBCNERP3",134,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERP3",135,0)
 . I $D(DTOUT)!($D(DUOUT)) S PXT=1 Q
"RTN","IBCNERP3",136,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() S ZTSTOP=1 G HEADERX
"RTN","IBCNERP3",137,0)
 ;
"RTN","IBCNERP3",138,0)
 S PGC=PGC+1
"RTN","IBCNERP3",139,0)
 W @IOF,!,?1,$S($G(IPRF)=1:"eIV Inactive Policy Report",$G(IPRF)=2:"eIV Ambiguous Policy Report",1:"eIV Response Report") I TRC'="" W " by Trace #"
"RTN","IBCNERP3",140,0)
 ;
"RTN","IBCNERP3",141,0)
 S HDR=IBRDT_"  Page: "_PGC,OFFSET=79-$L(HDR)
"RTN","IBCNERP3",142,0)
 W ?OFFSET,HDR
"RTN","IBCNERP3",143,0)
 ;
"RTN","IBCNERP3",144,0)
 I TRC'="" S HDR="Trace #: "_TRC,OFFSET=80-$L(HDR)\2 W !,?OFFSET,HDR
"RTN","IBCNERP3",145,0)
 I TRC="" D
"RTN","IBCNERP3",146,0)
 . W !,?1,"Sorted by: "_$S(SRT=1:"Payer",1:"Patient")_" Name"
"RTN","IBCNERP3",147,0)
 . S HDR="Responses Displayed: "_$S(TYP="M":"Most Recent",1:"All")
"RTN","IBCNERP3",148,0)
 . S OFFSET=79-$L(HDR)
"RTN","IBCNERP3",149,0)
 . W ?OFFSET,HDR
"RTN","IBCNERP3",150,0)
 . I $G(IPRF)=1 W !,?1,"Earliest Policy Expiration Date: ",$$FMTE^XLFDT(EXP,"5Z"),!
"RTN","IBCNERP3",151,0)
 . S HDR=$$FMTE^XLFDT(BDT,"5Z")_" - "_$$FMTE^XLFDT(EDT,"5Z")
"RTN","IBCNERP3",152,0)
 . S OFFSET=80-$L(HDR)\2
"RTN","IBCNERP3",153,0)
 . W !,?OFFSET,HDR
"RTN","IBCNERP3",154,0)
 . ; Disp SORT1 rng
"RTN","IBCNERP3",155,0)
 . S HDR=""
"RTN","IBCNERP3",156,0)
 . I SRT=1,PYR="" S HDR="All Payers"
"RTN","IBCNERP3",157,0)
 . I SRT=2,PAT="" S HDR="All Patients"
"RTN","IBCNERP3",158,0)
 . I HDR="" D
"RTN","IBCNERP3",159,0)
 ..  I SRT=1 S HDR=$P($G(^IBE(365.12,PYR,0)),U,1) Q
"RTN","IBCNERP3",160,0)
 ..  S HDR=$P($G(^DPT(PAT,0)),U,1)
"RTN","IBCNERP3",161,0)
 . S OFFSET=80-$L(HDR)\2
"RTN","IBCNERP3",162,0)
 . W !,?OFFSET,HDR
"RTN","IBCNERP3",163,0)
 . ; Disp SORT2 rng
"RTN","IBCNERP3",164,0)
 . S HDR=""
"RTN","IBCNERP3",165,0)
 . I SRT=1,PAT="" S HDR="All Patients"
"RTN","IBCNERP3",166,0)
 . I SRT=2,PYR="" S HDR="All Payers"
"RTN","IBCNERP3",167,0)
 . I HDR="" D
"RTN","IBCNERP3",168,0)
 .. I SRT=1 S HDR=$P($G(^DPT(PAT,0)),U,1) Q
"RTN","IBCNERP3",169,0)
 .. S HDR=$P($G(^IBE(365.12,PYR,0)),U,1)
"RTN","IBCNERP3",170,0)
 . S OFFSET=80-$L(HDR)\2
"RTN","IBCNERP3",171,0)
 . W !,?OFFSET,HDR
"RTN","IBCNERP3",172,0)
 W !
"RTN","IBCNERP3",173,0)
 ; Build disp
"RTN","IBCNERP3",174,0)
 I SORT1'="",SORT2'="" D
"RTN","IBCNERP3",175,0)
 . W !,?1,$$FO^IBCNEUT1($S(TRC'=""!(SRT=1):"  Payer: ",1:"Patient: "),9)_$E(PRT1,1,69)
"RTN","IBCNERP3",176,0)
 . W !,?1,$$FO^IBCNEUT1($S(TRC'=""!(SRT=1):"Patient: ",1:"  Payer: "),9)_$E(PRT2,1,69)
"RTN","IBCNERP3",177,0)
 . W !
"RTN","IBCNERP3",178,0)
HEADERX ;
"RTN","IBCNERP3",179,0)
 Q
"RTN","IBCNERP3",180,0)
 ;
"RTN","IBCNERP3",181,0)
LINE(DISPDATA) ;  Print data
"RTN","IBCNERP3",182,0)
 N LNCT,LNTOT,NWPG
"RTN","IBCNERP3",183,0)
 S LNTOT=+$O(DISPDATA(""),-1)
"RTN","IBCNERP3",184,0)
 S (CNFLG,ERFLG,NWPG)=0
"RTN","IBCNERP3",185,0)
 F LNCT=1:1:LNTOT D  Q:$G(ZTSTOP)!PXT
"RTN","IBCNERP3",186,0)
 . I $Y+1>MAX!('PGC) D HEADER S NWPG=1 I $G(ZTSTOP)!PXT Q
"RTN","IBCNERP3",187,0)
 . I DISPDATA(LNCT)="Contact Information:"!(DISPDATA(LNCT)="Error Information:"),$Y+3>MAX S (CNFLG,ERFLG)=0 D HEADER S NWPG=1 I $G(ZTSTOP)!PXT Q
"RTN","IBCNERP3",188,0)
 . I CNFLG,DISPDATA(LNCT)="",$G(DISPDATA(LNCT+1))="Error Information:" S CNFLG=0
"RTN","IBCNERP3",189,0)
 . I NWPG,CNFLG W !,?1,"Contact Information: (cont'd)",!
"RTN","IBCNERP3",190,0)
 . I NWPG,ERFLG W !,?1,"Error Information: (cont'd)",!
"RTN","IBCNERP3",191,0)
 . I 'NWPG!(NWPG&(DISPDATA(LNCT)'="")) W !,?1,DISPDATA(LNCT)
"RTN","IBCNERP3",192,0)
 . I NWPG S NWPG=0
"RTN","IBCNERP3",193,0)
 . I DISPDATA(LNCT)["Contact Information:" S ERFLG=0,CNFLG=1
"RTN","IBCNERP3",194,0)
 . I DISPDATA(LNCT)["Error Information:" S CNFLG=0,ERFLG=1
"RTN","IBCNERP3",195,0)
 . Q
"RTN","IBCNERP3",196,0)
 S (CNFLG,ERFLG)=0
"RTN","IBCNERP3",197,0)
LINEX ; 
"RTN","IBCNERP3",198,0)
 Q
"RTN","IBCNERP3",199,0)
 ;
"RTN","IBCNERP3",200,0)
SSDB ; Display last 4 digits of SSN and DOB to facilitate pt. identification
"RTN","IBCNERP3",201,0)
 ; $$SSN^IBCNEDEQ(DFN) returns SSN followed by DOB
"RTN","IBCNERP3",202,0)
 ;
"RTN","IBCNERP3",203,0)
 N DFN
"RTN","IBCNERP3",204,0)
 S DFN=$P($G(^TMP($J,RTN,SORT1,SORT2,CNT,0)),U,2)
"RTN","IBCNERP3",205,0)
 I DFN D
"RTN","IBCNERP3",206,0)
 . I SRT=1!TRC S PRT2=OPRT2_$$SSN^IBCNEDEQ(DFN) Q
"RTN","IBCNERP3",207,0)
 . S PRT1=OPRT1_$$SSN^IBCNEDEQ(DFN)
"RTN","IBCNERP3",208,0)
 Q
"RTN","IBCNERP3",209,0)
 ;
"RTN","IBCNERP3",210,0)
PHDL ; - Print the header line for the Excel spreadsheet  ; 528
"RTN","IBCNERP3",211,0)
 N X
"RTN","IBCNERP3",212,0)
 S PGC=1
"RTN","IBCNERP3",213,0)
 S X=$S(SRT=1:"Payer",1:"Patient")_U_$S(SRT=1:"Patient",1:"Payer")_"^Patient SSN^Patient DOB^Subscriber^Subscriber ID^Subscriber DOB^Subscriber SSN^Subscriber Sex^Group Name^Group ID"
"RTN","IBCNERP3",214,0)
 S X=X_"^Whose Insurance^Pt Relationship to Subscriber^Member ID^COB^Service Date^Date of Death^Effective Date^Certification Date^Expiration Date^Payer Updated Policy"
"RTN","IBCNERP3",215,0)
 S X=X_"^Response Date^Trace #^Policy Number^Reference ID Qualifier^Reference ID^Reference ID Description^Provider Code^Reference ID^Primary Diagnosis Code^Military Info Status"
"RTN","IBCNERP3",216,0)
 W X
"RTN","IBCNERP3",217,0)
 S X="^Employment Status^Government Affiliation^Date Time Period^Service Rank^Desc"
"RTN","IBCNERP3",218,0)
 W X
"RTN","IBCNERP3",219,0)
 Q
"RTN","IBCNERP4")
0^111^B65437129
"RTN","IBCNERP4",1,0)
IBCNERP4 ;DAOU/BHS - IBCNE USER INTERFACE eIV PAYER REPORT ;03-JUN-2002
"RTN","IBCNERP4",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,300,416,528**;21-MAR-94;Build 163
"RTN","IBCNERP4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERP4",4,0)
 ;
"RTN","IBCNERP4",5,0)
 ; eIV - Insurance Verification Interface
"RTN","IBCNERP4",6,0)
 ;
"RTN","IBCNERP4",7,0)
 ; Input parameter: N/A
"RTN","IBCNERP4",8,0)
 ; Other relevant variables:
"RTN","IBCNERP4",9,0)
 ;   IBCNERTN = "IBCNERP4" (current routine name for queueing the 
"RTN","IBCNERP4",10,0)
 ;                          COMPILE process)
"RTN","IBCNERP4",11,0)
 ;   IBCNESPC("BEGDT") = start date for date range
"RTN","IBCNERP4",12,0)
 ;   IBCNESPC("ENDDT") = end date for date range
"RTN","IBCNERP4",13,0)
 ;   IBCNESPC("PYR") = payer ien for report, if = "", then include all
"RTN","IBCNERP4",14,0)
 ;   IBCNESPC("SORT") = 1 - Payer name OR 2 - Total Inqs (PAYER)
"RTN","IBCNERP4",15,0)
 ;   IBCNESPC("DTL") = 1 - YES OR 0 - NO  Include Rejection Detail in
"RTN","IBCNERP4",16,0)
 ;                     report output - rejections broken down by code
"RTN","IBCNERP4",17,0)
 ;
"RTN","IBCNERP4",18,0)
 ; Enter only from EN tag
"RTN","IBCNERP4",19,0)
 ; 
"RTN","IBCNERP4",20,0)
 ; Added tag DATA as split out from program IBCNERP5 for size restrictions
"RTN","IBCNERP4",21,0)
 QUIT
"RTN","IBCNERP4",22,0)
 ;
"RTN","IBCNERP4",23,0)
 ; Entry point
"RTN","IBCNERP4",24,0)
EN ;
"RTN","IBCNERP4",25,0)
 ; Initialize variables
"RTN","IBCNERP4",26,0)
 NEW STOP,IBCNERTN,POP,IBCNESPC,IBOUT
"RTN","IBCNERP4",27,0)
 ;
"RTN","IBCNERP4",28,0)
 S STOP=0
"RTN","IBCNERP4",29,0)
 S IBCNERTN="IBCNERP4"
"RTN","IBCNERP4",30,0)
 W @IOF
"RTN","IBCNERP4",31,0)
 W !,"eIV Payer Report",!
"RTN","IBCNERP4",32,0)
 W !,"Insurance verification inquiries are created daily."
"RTN","IBCNERP4",33,0)
 W !,"Select a date range in which inquiries were created by the eIV extracts."
"RTN","IBCNERP4",34,0)
 ;
"RTN","IBCNERP4",35,0)
 ; Prompts for Payer Report
"RTN","IBCNERP4",36,0)
 ; Date Range parameters
"RTN","IBCNERP4",37,0)
P10 D DTRANGE I STOP G EXIT
"RTN","IBCNERP4",38,0)
 ; Payer Selection parameter
"RTN","IBCNERP4",39,0)
P20 D PYRSEL^IBCNERP1 I STOP G:$$STOP^IBCNERP1 EXIT G P10
"RTN","IBCNERP4",40,0)
 ; Include Rejection Detail in Payer report
"RTN","IBCNERP4",41,0)
P30 D REJDTL I STOP G:$$STOP^IBCNERP1 EXIT G P20
"RTN","IBCNERP4",42,0)
 ; Sort by parameter - Payer or Total Inquiries
"RTN","IBCNERP4",43,0)
P40 D SORT I STOP G:$$STOP^IBCNERP1 EXIT G P30
"RTN","IBCNERP4",44,0)
 ; Select the output type
"RTN","IBCNERP4",45,0)
P60 S IBOUT=$$OUT I STOP G:$$STOP^IBCNERP1 EXIT G P40
"RTN","IBCNERP4",46,0)
 ; Select the output device
"RTN","IBCNERP4",47,0)
P100 D DEVICE^IBCNERP1(IBCNERTN,.IBCNESPC,IBOUT) I STOP G:$$STOP^IBCNERP1 EXIT G P40
"RTN","IBCNERP4",48,0)
 ;
"RTN","IBCNERP4",49,0)
EXIT ; Quit this routine
"RTN","IBCNERP4",50,0)
 QUIT
"RTN","IBCNERP4",51,0)
 ;
"RTN","IBCNERP4",52,0)
 ;
"RTN","IBCNERP4",53,0)
SORT ; Prompt to allow users to sort the report
"RTN","IBCNERP4",54,0)
 ;  by Payer(default) OR Total Inquiries, then Payer
"RTN","IBCNERP4",55,0)
 ; Initialize variables
"RTN","IBCNERP4",56,0)
 NEW DIR,X,Y,DIRUT
"RTN","IBCNERP4",57,0)
 ;
"RTN","IBCNERP4",58,0)
 S DIR(0)="S^1:Payer Name;2:Total Inquiries"
"RTN","IBCNERP4",59,0)
 S DIR("A")=" Select the primary sort field"
"RTN","IBCNERP4",60,0)
 S DIR("B")=1
"RTN","IBCNERP4",61,0)
 S DIR("?",1)="  1 - Payer Name is the only sort. (Default)"
"RTN","IBCNERP4",62,0)
 S DIR("?",2)="  2 - Total Inquiries is the primary sort, Payer Name is"
"RTN","IBCNERP4",63,0)
 S DIR("?")="      the secondary sort."
"RTN","IBCNERP4",64,0)
 D ^DIR K DIR
"RTN","IBCNERP4",65,0)
 I $D(DIRUT) S STOP=1 G SORTX
"RTN","IBCNERP4",66,0)
 S IBCNESPC("SORT")=Y
"RTN","IBCNERP4",67,0)
 ;
"RTN","IBCNERP4",68,0)
SORTX ; SORT exit point
"RTN","IBCNERP4",69,0)
 QUIT
"RTN","IBCNERP4",70,0)
 ;
"RTN","IBCNERP4",71,0)
 ;
"RTN","IBCNERP4",72,0)
REJDTL ; Prompt to allow users to include the Rejection Detail in the report
"RTN","IBCNERP4",73,0)
 ; Initialize variables
"RTN","IBCNERP4",74,0)
 NEW DIR,X,Y,DIRUT
"RTN","IBCNERP4",75,0)
 ;
"RTN","IBCNERP4",76,0)
 S DIR(0)="Y"
"RTN","IBCNERP4",77,0)
 S DIR("A")="      Include Rejection Detail"
"RTN","IBCNERP4",78,0)
 S DIR("B")="NO"
"RTN","IBCNERP4",79,0)
 S DIR("?",1)="  N - No, exclude Rejection Detail totals from report. (Default)"
"RTN","IBCNERP4",80,0)
 S DIR("?")="  Y - Yes, include Rejection Detail totals in report."
"RTN","IBCNERP4",81,0)
 D ^DIR K DIR
"RTN","IBCNERP4",82,0)
 I $D(DIRUT) S STOP=1 G REJDTLX
"RTN","IBCNERP4",83,0)
 S IBCNESPC("DTL")=Y
"RTN","IBCNERP4",84,0)
 ;
"RTN","IBCNERP4",85,0)
REJDTLX ; REJDTL exit point
"RTN","IBCNERP4",86,0)
 QUIT
"RTN","IBCNERP4",87,0)
 ;
"RTN","IBCNERP4",88,0)
 ;
"RTN","IBCNERP4",89,0)
DTRANGE ; Determine the start and end dates for the date range parameter
"RTN","IBCNERP4",90,0)
 ; Initialize variables
"RTN","IBCNERP4",91,0)
 NEW X,Y,DIRUT
"RTN","IBCNERP4",92,0)
 ;
"RTN","IBCNERP4",93,0)
 W !
"RTN","IBCNERP4",94,0)
 ;
"RTN","IBCNERP4",95,0)
 S DIR(0)="D^::EX"
"RTN","IBCNERP4",96,0)
 S DIR("A")="Start DATE"
"RTN","IBCNERP4",97,0)
 S DIR("?",1)="   Please enter a valid date for which an eIV Inquiry"
"RTN","IBCNERP4",98,0)
 S DIR("?")="   would have been created."
"RTN","IBCNERP4",99,0)
 D ^DIR K DIR
"RTN","IBCNERP4",100,0)
 I $D(DIRUT) S STOP=1 G DTRANGX
"RTN","IBCNERP4",101,0)
 S IBCNESPC("BEGDT")=Y
"RTN","IBCNERP4",102,0)
 ; End date
"RTN","IBCNERP4",103,0)
DTRANG1 S DIR(0)="D^::EX"
"RTN","IBCNERP4",104,0)
 S DIR("A")="  End DATE"
"RTN","IBCNERP4",105,0)
 S DIR("?",1)="   Please enter a valid date for which an eIV Inquiry"
"RTN","IBCNERP4",106,0)
 S DIR("?",2)="   would have been created.  This date must not precede"
"RTN","IBCNERP4",107,0)
 S DIR("?")="   the Start Date."
"RTN","IBCNERP4",108,0)
 D ^DIR K DIR
"RTN","IBCNERP4",109,0)
 I $D(DIRUT) S STOP=1 G DTRANGX
"RTN","IBCNERP4",110,0)
 I Y<IBCNESPC("BEGDT") D  G DTRANG1
"RTN","IBCNERP4",111,0)
 . W !,"     End Date must not precede the Start Date."
"RTN","IBCNERP4",112,0)
 . W !,"     Please reenter."
"RTN","IBCNERP4",113,0)
 S IBCNESPC("ENDDT")=Y
"RTN","IBCNERP4",114,0)
 ;
"RTN","IBCNERP4",115,0)
DTRANGX ; DTRANGE exit point
"RTN","IBCNERP4",116,0)
 QUIT
"RTN","IBCNERP4",117,0)
 ;
"RTN","IBCNERP4",118,0)
 ;
"RTN","IBCNERP4",119,0)
 ; called from IBCNERP5
"RTN","IBCNERP4",120,0)
 ; Loop through the eIV Response File (#365) 
"RTN","IBCNERP4",121,0)
 ;  By DATE/TIME RECEIVED & PAYER & PATIENT Cross-Reference ("AE")
"RTN","IBCNERP4",122,0)
 ;  
"RTN","IBCNERP4",123,0)
DATA N RDATA,RDATA1,TQDATA,IBCNEDT,IBCNEPTR,IBCNEPAT,RPYRIEN,RPYNM,PYRIEN,IBPNM,ERRCON
"RTN","IBCNERP4",124,0)
 N IBPIEN,PC,ERR,ERRTXT,PYRNM,APIEN,IBCNEPTD,TQIEN
"RTN","IBCNERP4",125,0)
 S IBCNEDT=$O(^IBCN(365,"AD",IBCNEDT1),-1)
"RTN","IBCNERP4",126,0)
 F  S IBCNEDT=$O(^IBCN(365,"AD",IBCNEDT)) Q:IBCNEDT=""!($P(IBCNEDT,".",1)>IBCNEDT2)  D  Q:$G(ZTSTOP)
"RTN","IBCNERP4",127,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD() S ZTSTOP=1 QUIT
"RTN","IBCNERP4",128,0)
 . S IBCNEPAT=0
"RTN","IBCNERP4",129,0)
 . F  S IBCNEPAT=$O(^IBCN(365,"AD",IBCNEDT,IBCNEPAT)) Q:'IBCNEPAT  D  Q:$G(ZTSTOP)
"RTN","IBCNERP4",130,0)
 .. S IBCNEPTD=0
"RTN","IBCNERP4",131,0)
 .. F  S IBCNEPTD=$O(^IBCN(365,"AD",IBCNEDT,IBCNEPAT,IBCNEPTD)) Q:'IBCNEPTD  D  Q:$G(ZTSTOP)
"RTN","IBCNERP4",132,0)
 ... S IBCNEPTR=0
"RTN","IBCNERP4",133,0)
 ... F  S IBCNEPTR=$O(^IBCN(365,"AD",IBCNEDT,IBCNEPAT,IBCNEPTD,IBCNEPTR)) Q:'IBCNEPTR  D  Q:$G(ZTSTOP)
"RTN","IBCNERP4",134,0)
 .... ; Get data from Resp File
"RTN","IBCNERP4",135,0)
 .... S RDATA=$G(^IBCN(365,IBCNEPTR,0))
"RTN","IBCNERP4",136,0)
 .... I RDATA="" Q
"RTN","IBCNERP4",137,0)
 .... ; ONLY select Transmission status 3
"RTN","IBCNERP4",138,0)
 .... I $P($G(RDATA),U,6)'=3 Q
"RTN","IBCNERP4",139,0)
 .... ; Determine Payer name from Payer File (#365.12)
"RTN","IBCNERP4",140,0)
 .... S RPYRIEN=$P($G(RDATA),U,3)
"RTN","IBCNERP4",141,0)
 .... I 'RPYRIEN Q
"RTN","IBCNERP4",142,0)
 .... ; Check payer filter
"RTN","IBCNERP4",143,0)
 .... I IBCNEPY'="",RPYRIEN'=IBCNEPY Q
"RTN","IBCNERP4",144,0)
 .... S RPYNM=$P($G(^IBE(365.12,RPYRIEN,0)),U)
"RTN","IBCNERP4",145,0)
 .... I RPYNM="" Q
"RTN","IBCNERP4",146,0)
 .... ; link to TQ file
"RTN","IBCNERP4",147,0)
 .... S TQIEN=$P($G(RDATA),U,5)
"RTN","IBCNERP4",148,0)
 .... I TQIEN="" Q
"RTN","IBCNERP4",149,0)
 .... ; Get data from TQ file (365.1)
"RTN","IBCNERP4",150,0)
 .... S TQDATA=$G(^IBCN(365.1,TQIEN,0))
"RTN","IBCNERP4",151,0)
 .... I TQDATA="" Q
"RTN","IBCNERP4",152,0)
 .... ; Get TQ Payer from (365.1) File
"RTN","IBCNERP4",153,0)
 .... S PYRIEN=$P($G(TQDATA),U,3) Q:PYRIEN=""
"RTN","IBCNERP4",154,0)
 .... S PYRNM=$P($G(^IBE(365.12,PYRIEN,0)),U)
"RTN","IBCNERP4",155,0)
 .... ;  Cancelled (7) - Payer deactivated
"RTN","IBCNERP4",156,0)
 .... I $P($G(TQDATA),U,4)=7 Q
"RTN","IBCNERP4",157,0)
 .... ; Determine Deactivation DTM for eIV application
"RTN","IBCNERP4",158,0)
 .... I RPYNM'="~NO PAYER" D
"RTN","IBCNERP4",159,0)
 ..... S APIEN=$$PYRAPP^IBCNEUT5("IIV",RPYRIEN)
"RTN","IBCNERP4",160,0)
 ..... I APIEN,$P($G(^IBE(365.12,RPYRIEN,1,APIEN,0)),U,11) S $P(^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*"),U,11)=$P($G(^IBE(365.12,RPYRIEN,1,APIEN,0)),U,12)
"RTN","IBCNERP4",161,0)
 .... ; Determine Deactivation DTM for eIV application
"RTN","IBCNERP4",162,0)
 .... I PYRNM'="~NO PAYER",PYRIEN'=RPYRIEN D
"RTN","IBCNERP4",163,0)
 ..... S APIEN=$$PYRAPP^IBCNEUT5("IIV",PYRIEN)
"RTN","IBCNERP4",164,0)
 ..... I APIEN,$P($G(^IBE(365.12,PYRIEN,1,APIEN,0)),U,11) S $P(^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*"),U,11)=$P($G(^IBE(365.12,PYRIEN,1,APIEN,0)),U,12)
"RTN","IBCNERP4",165,0)
 .... ; Get error text
"RTN","IBCNERP4",166,0)
 .... S ERRTXT=$G(^IBCN(365,IBCNEPTR,4))
"RTN","IBCNERP4",167,0)
 .... ; Now get the data from Response file for the report
"RTN","IBCNERP4",168,0)
 .... S RDATA1=$G(^IBCN(365,IBCNEPTR,1)),ERRCON=$P($G(RDATA1),U,14)
"RTN","IBCNERP4",169,0)
 .... ; Increment for non-error (GOOD) response and quit
"RTN","IBCNERP4",170,0)
 .... I ERRCON="",ERRTXT="" D  Q
"RTN","IBCNERP4",171,0)
 ..... S $P(^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*"),U,6)=$P($G(^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*")),U,6)+1
"RTN","IBCNERP4",172,0)
 ..... ; if TQ payer was ~NO PAYER then also increment ~NO PAYER good count
"RTN","IBCNERP4",173,0)
 ..... I IBCNEPY="",(RPYRIEN'=PYRIEN),(PYRNM="~NO PAYER") S $P(^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*"),U,6)=$P($G(^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*")),U,6)+1
"RTN","IBCNERP4",174,0)
 .... ; Rejection is defined as having a value in the Error Condition field or Error Text field
"RTN","IBCNERP4",175,0)
 .... ; Increment for error response
"RTN","IBCNERP4",176,0)
 .... S $P(^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*"),U,7)=$P($G(^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*")),U,7)+1
"RTN","IBCNERP4",177,0)
 .... ; if TQ payer was ~NO PAYER then also increment ~NO PAYER error count
"RTN","IBCNERP4",178,0)
 .... I IBCNEPY="",(RPYRIEN'=PYRIEN),(PYRNM="~NO PAYER") S $P(^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*"),U,7)=$P($G(^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*")),U,7)+1
"RTN","IBCNERP4",179,0)
 .... ; Store rejection detail only if user requested it
"RTN","IBCNERP4",180,0)
 .... I 'IBCNEDTL Q
"RTN","IBCNERP4",181,0)
 .... I ERRCON S ^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*",ERRCON)=$G(^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*",ERRCON))+1
"RTN","IBCNERP4",182,0)
 .... I 'ERRCON,ERRTXT'="" S ^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*",0_U_ERRTXT)=$G(^TMP($J,IBCNERTN,RPYNM,RPYRIEN,"*",0_U_ERRTXT))+1
"RTN","IBCNERP4",183,0)
 .... I IBCNEPY="",(RPYRIEN'=PYRIEN),(PYRNM="~NO PAYER") D
"RTN","IBCNERP4",184,0)
 .... . I ERRCON S ^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*",ERRCON)=$G(^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*",ERRCON))+1
"RTN","IBCNERP4",185,0)
 .... . I 'ERRCON,ERRTXT'="" S ^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*",0_U_ERRTXT)=$G(^TMP($J,IBCNERTN,PYRNM,PYRIEN,"*",0_U_ERRTXT))+1
"RTN","IBCNERP4",186,0)
 Q
"RTN","IBCNERP4",187,0)
 ;
"RTN","IBCNERP4",188,0)
OUT() ; Prompt to allow users to select output format
"RTN","IBCNERP4",189,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERP4",190,0)
 W !
"RTN","IBCNERP4",191,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNERP4",192,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNERP4",193,0)
 S DIR("B")="Report"
"RTN","IBCNERP4",194,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q ""
"RTN","IBCNERP4",195,0)
 Q Y
"RTN","IBCNERP6")
0^112^B98862424
"RTN","IBCNERP6",1,0)
IBCNERP6 ;DAOU/BHS - eIV PAYER REPORT PRINT ;05-JUN-2002
"RTN","IBCNERP6",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,416,528**;21-MAR-94;Build 163
"RTN","IBCNERP6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERP6",4,0)
 ;
"RTN","IBCNERP6",5,0)
 ; eIV - Insurance Verification Interface
"RTN","IBCNERP6",6,0)
 ;
"RTN","IBCNERP6",7,0)
 ; Called by IBCNERPA
"RTN","IBCNERP6",8,0)
 ;
"RTN","IBCNERP6",9,0)
 ; Input variables from IBCNERP4 and IBCNERP5:
"RTN","IBCNERP6",10,0)
 ;   IBCNERTN = "IBCNERP4"
"RTN","IBCNERP6",11,0)
 ;   IBCNESPC("BEGDT") = Start Date for dt range
"RTN","IBCNERP6",12,0)
 ;   IBCNESPC("ENDDT") = End Date for dt range
"RTN","IBCNERP6",13,0)
 ;   IBCNESPC("PYR") = Payer IEN for report, if = "", then include all
"RTN","IBCNERP6",14,0)
 ;   IBCNESPC("SORT") = 1 - Payer name OR 2 - Total Inquiries
"RTN","IBCNERP6",15,0)
 ;   IBCNESPC("DTL")= 1 - YES OR 0 - NO - display Rejection detail
"RTN","IBCNERP6",16,0)
 ;   ^TMP($J,IBCNERTN,SORT1,SORT2,SORT3)=InqCreatedCount^InqCancelledCt^
"RTN","IBCNERP6",17,0)
 ;                                       InqQueuedCt^1stTransCount^
"RTN","IBCNERP6",18,0)
 ;                                       RetryCount^Non-ErrorRespCount^
"RTN","IBCNERP6",19,0)
 ;                                       ErrorRespCount^TotRespTime-days^
"RTN","IBCNERP6",20,0)
 ;                                       CommFailRespCount^PendRespCount^
"RTN","IBCNERP6",21,0)
 ;                                       DeactivationDTM
"RTN","IBCNERP6",22,0)
 ;        IBCNERTN = "IBCNERP4"
"RTN","IBCNERP6",23,0)
 ;        SORT1 = PayerName (SORT=1) or -InquiryCount(SORT=2)
"RTN","IBCNERP6",24,0)
 ;        SORT2 = PayerIEN (SORT=1) or PayerName (SORT=2)
"RTN","IBCNERP6",25,0)
 ;        SORT3 = "*" (SORT=1) or PayerIEN (SORT=2)
"RTN","IBCNERP6",26,0)
 ;                                       
"RTN","IBCNERP6",27,0)
 ;   ^TMP($J,IBCNERTN,SORT1,SORT2,SORT3,ERRCD)=InquiryCount
"RTN","IBCNERP6",28,0)
 ;        (see above)
"RTN","IBCNERP6",29,0)
 ;        ERRCD = Error Condition code (ptr to 365.018)
"RTN","IBCNERP6",30,0)
 ;
"RTN","IBCNERP6",31,0)
 ; Must call at appropriate tag
"RTN","IBCNERP6",32,0)
 Q
"RTN","IBCNERP6",33,0)
 ;
"RTN","IBCNERP6",34,0)
 ;
"RTN","IBCNERP6",35,0)
PRINT(RTN,BDT,EDT,PYR,RDTL,SRT,PGC,PXT,MAX,CRT,IBOUT) ; Print data
"RTN","IBCNERP6",36,0)
 ; Input params: RNT = "IBCNERP4" - routine, BDT = starting dt,
"RTN","IBCNERP6",37,0)
 ;  EDT = ending dt, PYR = payer ien,
"RTN","IBCNERP6",38,0)
 ;  RDTL = 0/1, SRT = 0/1, PGC = page ct, PXT = exit flg, MAX = max line
"RTN","IBCNERP6",39,0)
 ;  ct/page, CRT = 0/1
"RTN","IBCNERP6",40,0)
 ;
"RTN","IBCNERP6",41,0)
 ; Init vars
"RTN","IBCNERP6",42,0)
 N EORMSG,NONEMSG,COUNT,TOTDASHS,DISPDATA,SORT1,SORT2,SORT3,CT,PRT1,PRT2,TOTALS
"RTN","IBCNERP6",43,0)
 ;
"RTN","IBCNERP6",44,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCNERP6",45,0)
 S NONEMSG="* * * N O  D A T A  F O U N D * * *"
"RTN","IBCNERP6",46,0)
 S $P(TOTDASHS,"=",89)=""
"RTN","IBCNERP6",47,0)
 S CT=0
"RTN","IBCNERP6",48,0)
 ;
"RTN","IBCNERP6",49,0)
 I '$D(^TMP($J,RTN)) D HEADER W !,?(132-$L(NONEMSG)\2),NONEMSG,!! G PRINT2
"RTN","IBCNERP6",50,0)
 I IBOUT="E" D EXHDR
"RTN","IBCNERP6",51,0)
 S SORT1=""
"RTN","IBCNERP6",52,0)
 F  S SORT1=$O(^TMP($J,RTN,SORT1)) Q:SORT1=""  D  Q:$G(ZTSTOP)!PXT
"RTN","IBCNERP6",53,0)
 .  S PRT1=$S(SORT1="~NO PAYER":"* No Payer Identified",1:SORT1)
"RTN","IBCNERP6",54,0)
 .  S SORT2=""
"RTN","IBCNERP6",55,0)
 .  F  S SORT2=$O(^TMP($J,RTN,SORT1,SORT2)) Q:SORT2=""  D  Q:$G(ZTSTOP)!PXT
"RTN","IBCNERP6",56,0)
 .  .  S PRT2=$S(SORT2="~NO PAYER":"* No Payer Identified",1:SORT2)
"RTN","IBCNERP6",57,0)
 .  .  S SORT3=""
"RTN","IBCNERP6",58,0)
 .  .  F  S SORT3=$O(^TMP($J,RTN,SORT1,SORT2,SORT3)) Q:SORT3=""  D  Q:$G(ZTSTOP)!PXT
"RTN","IBCNERP6",59,0)
 .  .  .  S CT=CT+1
"RTN","IBCNERP6",60,0)
 .  .  .  ; Build lines of data to display
"RTN","IBCNERP6",61,0)
 .  .  .  KILL DISPDATA
"RTN","IBCNERP6",62,0)
 .  .  .  D DATA(.DISPDATA)
"RTN","IBCNERP6",63,0)
 .  .  .  ; Display lines of response
"RTN","IBCNERP6",64,0)
 .  .  .  D LINE(.DISPDATA)
"RTN","IBCNERP6",65,0)
 .  .  .  Q
"RTN","IBCNERP6",66,0)
 .  .  Q
"RTN","IBCNERP6",67,0)
 .  Q
"RTN","IBCNERP6",68,0)
 ;
"RTN","IBCNERP6",69,0)
 ; Display totals line if space is available
"RTN","IBCNERP6",70,0)
 I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERP6",71,0)
 I IBOUT="R" I $Y+1>MAX!('PGC) D HEADER I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERP6",72,0)
 I IBOUT="R" W !,?43,TOTDASHS
"RTN","IBCNERP6",73,0)
 ; Print totals for report
"RTN","IBCNERP6",74,0)
 KILL DISPDATA
"RTN","IBCNERP6",75,0)
 D TOTALS(.DISPDATA)
"RTN","IBCNERP6",76,0)
 ; Display lines of totals
"RTN","IBCNERP6",77,0)
 D LINE(.DISPDATA)
"RTN","IBCNERP6",78,0)
 ;
"RTN","IBCNERP6",79,0)
PRINT2 I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERP6",80,0)
 I IBOUT="R" I $Y+1>MAX!('PGC) D HEADER I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERP6",81,0)
 W !,?(132-$L(EORMSG)\2),EORMSG
"RTN","IBCNERP6",82,0)
 ;
"RTN","IBCNERP6",83,0)
PRINTX ; PRINT exit point
"RTN","IBCNERP6",84,0)
 Q
"RTN","IBCNERP6",85,0)
 ;
"RTN","IBCNERP6",86,0)
HEADER ; Print header info for each page
"RTN","IBCNERP6",87,0)
 ; Assumes vars from PRINT: CRT,PGC,PXT,MAX,SRT,BDT,EDT,PYR,RDTL,MAR
"RTN","IBCNERP6",88,0)
 ; Init vars
"RTN","IBCNERP6",89,0)
 N DIR,X,Y,DTOUT,DUOUT,OFFSET,HDR,DASHES,LIN
"RTN","IBCNERP6",90,0)
 ;
"RTN","IBCNERP6",91,0)
 I CRT,PGC>0,'$D(ZTQUEUED) D  I PXT G HEADERX
"RTN","IBCNERP6",92,0)
 . I MAX<51 F LIN=1:1:(MAX-$Y) W !
"RTN","IBCNERP6",93,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERP6",94,0)
 . I $D(DTOUT)!$D(DUOUT) S PXT=1 Q
"RTN","IBCNERP6",95,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() S (ZTSTOP,PXT)=1 G HEADERX
"RTN","IBCNERP6",96,0)
 S PGC=PGC+1
"RTN","IBCNERP6",97,0)
 W @IOF,!,?1,"eIV Payer Report"
"RTN","IBCNERP6",98,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,1)_"  Page: "_PGC
"RTN","IBCNERP6",99,0)
 S OFFSET=131-$L(HDR)
"RTN","IBCNERP6",100,0)
 W ?OFFSET,HDR
"RTN","IBCNERP6",101,0)
 W !,?1,"Sorted by: "_$S(SRT=1:"Payer",1:"Total Inquiries")
"RTN","IBCNERP6",102,0)
 S HDR="Rejection Detail: "_$S('RDTL:"Not",1:"")_" Included"
"RTN","IBCNERP6",103,0)
 S OFFSET=131-$L(HDR)
"RTN","IBCNERP6",104,0)
 W ?OFFSET,HDR
"RTN","IBCNERP6",105,0)
 S HDR=$$FMTE^XLFDT(BDT,"5Z")_" - "_$$FMTE^XLFDT(EDT,"5Z")
"RTN","IBCNERP6",106,0)
 S OFFSET=132-$L(HDR)\2
"RTN","IBCNERP6",107,0)
 W !,?OFFSET,HDR
"RTN","IBCNERP6",108,0)
 ; Display Payer Range
"RTN","IBCNERP6",109,0)
 S HDR=""
"RTN","IBCNERP6",110,0)
 I PYR="" S HDR="All Payers"
"RTN","IBCNERP6",111,0)
 I HDR="" S HDR=$P($G(^IBE(365.12,PYR,0)),U,1)
"RTN","IBCNERP6",112,0)
 S OFFSET=132-$L(HDR)\2
"RTN","IBCNERP6",113,0)
 W !,?OFFSET,HDR
"RTN","IBCNERP6",114,0)
 W !  ; Skip line
"RTN","IBCNERP6",115,0)
 ; Display column headings
"RTN","IBCNERP6",116,0)
 W !,?70,"***** SENT *****",?88,"*** RECEIVED ***",?106,"AvgResp"
"RTN","IBCNERP6",117,0)
 W !,?1,"Payer [Inactive Date]",?43,"Created",?52," Cancel",?61," Queued",?70,"1st Att",?79,"  Retry",?88,"   Good",?97,"  Error",?106," (Days)",?115,"Timeout",?124,"Pending"
"RTN","IBCNERP6",118,0)
 S $P(DASHES,"=",131)=""
"RTN","IBCNERP6",119,0)
 W !,?1,DASHES
"RTN","IBCNERP6",120,0)
 ;
"RTN","IBCNERP6",121,0)
HEADERX ; HEADER exit pt
"RTN","IBCNERP6",122,0)
 Q
"RTN","IBCNERP6",123,0)
 ;
"RTN","IBCNERP6",124,0)
EXHDR ; format for Excel report  ; 528 - baa
"RTN","IBCNERP6",125,0)
 N HDR,HDR1
"RTN","IBCNERP6",126,0)
 W !,"eIV Payer Report"
"RTN","IBCNERP6",127,0)
 W !,"Sorted by: "_$S(SRT=1:"Payer",1:"Total Inquiries")
"RTN","IBCNERP6",128,0)
 S HDR="Rejection Detail: "_$S('RDTL:"Not",1:"")_" Included"
"RTN","IBCNERP6",129,0)
 W !,HDR
"RTN","IBCNERP6",130,0)
 S HDR=$$FMTE^XLFDT(BDT,"5Z")_" - "_$$FMTE^XLFDT(EDT,"5Z")
"RTN","IBCNERP6",131,0)
 W !,HDR
"RTN","IBCNERP6",132,0)
 S HDR1="Payer [Inactive Date]^Created^Cancel^Queued^SENT 1st Att^Sent Retry^Received Good^Error^AvgResp (Days)^Timeout^Pending"
"RTN","IBCNERP6",133,0)
 W !,HDR1
"RTN","IBCNERP6",134,0)
 Q
"RTN","IBCNERP6",135,0)
 ;
"RTN","IBCNERP6",136,0)
LINE(DISPDATA) ; Print line of data
"RTN","IBCNERP6",137,0)
 ; Assumes vars from PRINT: PGC,PXT,MAX
"RTN","IBCNERP6",138,0)
 ; Init vars
"RTN","IBCNERP6",139,0)
 N CT,II
"RTN","IBCNERP6",140,0)
 ;
"RTN","IBCNERP6",141,0)
 S CT=+$O(DISPDATA(""),-1)
"RTN","IBCNERP6",142,0)
 I IBOUT="R" I $Y+1+CT>MAX D HEADER I $G(ZTSTOP)!PXT G LINEX
"RTN","IBCNERP6",143,0)
 F II=1:1:CT D  Q:$G(ZTSTOP)!PXT
"RTN","IBCNERP6",144,0)
 . I IBOUT="R" I $Y+1>MAX!('PGC) D HEADER I $G(ZTSTOP)!PXT Q
"RTN","IBCNERP6",145,0)
 . I $D(DISPDATA(II)) W !,?1,DISPDATA(II)
"RTN","IBCNERP6",146,0)
 . Q
"RTN","IBCNERP6",147,0)
 ;
"RTN","IBCNERP6",148,0)
LINEX ; LINE exit pt
"RTN","IBCNERP6",149,0)
 Q
"RTN","IBCNERP6",150,0)
 ;
"RTN","IBCNERP6",151,0)
DATA(DISPDATA) ; Gather and format lines of data to be printed
"RTN","IBCNERP6",152,0)
 ; Assumes vars from PRINT: RTN,SRT,SORT1,SORT2,SORT3,RDTL,CT,PRT1,PRT2
"RTN","IBCNERP6",153,0)
 ; Init vars
"RTN","IBCNERP6",154,0)
 N LINECT,INQS,TIME,AVG,APPS,REJS,DASHES2,ERRCD,ERROR,DEACMSG
"RTN","IBCNERP6",155,0)
 N REJDASHS,RPTDATA,FAIL,PEND,RETS,CT2,FIRST,QUED,CANC,PAYER,DEACDT
"RTN","IBCNERP6",156,0)
 ;
"RTN","IBCNERP6",157,0)
 S $P(DASHES2,"-",89)=""
"RTN","IBCNERP6",158,0)
 S $P(REJDASHS,"-",8)=""
"RTN","IBCNERP6",159,0)
 S LINECT=1
"RTN","IBCNERP6",160,0)
 M RPTDATA=^TMP($J,RTN,SORT1,SORT2,SORT3)
"RTN","IBCNERP6",161,0)
 S INQS=+$P(RPTDATA,U,1)
"RTN","IBCNERP6",162,0)
 S CANC=+$P(RPTDATA,U,2)
"RTN","IBCNERP6",163,0)
 S QUED=+$P(RPTDATA,U,3)
"RTN","IBCNERP6",164,0)
 S FIRST=+$P(RPTDATA,U,4)
"RTN","IBCNERP6",165,0)
 S RETS=+$P(RPTDATA,U,5)
"RTN","IBCNERP6",166,0)
 S APPS=+$P(RPTDATA,U,6)
"RTN","IBCNERP6",167,0)
 S REJS=+$P(RPTDATA,U,7)
"RTN","IBCNERP6",168,0)
 S TIME=+$P(RPTDATA,U,8)
"RTN","IBCNERP6",169,0)
 S FAIL=+$P(RPTDATA,U,9)
"RTN","IBCNERP6",170,0)
 S PEND=+$P(RPTDATA,U,10)
"RTN","IBCNERP6",171,0)
 S AVG=$FN($S((APPS+REJS)>0:TIME/(APPS+REJS),1:0),"",2)
"RTN","IBCNERP6",172,0)
 S PAYER=$S(SRT=1:PRT1,1:PRT2)
"RTN","IBCNERP6",173,0)
 I $P(RPTDATA,U,11) D
"RTN","IBCNERP6",174,0)
 . S DEACMSG=" [Inactive"
"RTN","IBCNERP6",175,0)
 . S DEACDT=" "_$$FMTE^XLFDT($P(RPTDATA,U,11)\1,"5Z")
"RTN","IBCNERP6",176,0)
 . I $L(PAYER)+$L(DEACMSG)+$L(DEACDT)<40 S PAYER=PAYER_DEACMSG_DEACDT_"]" Q
"RTN","IBCNERP6",177,0)
 . I $L(PAYER)+$L(DEACMSG)<40 S PAYER=PAYER_DEACMSG_"]" Q
"RTN","IBCNERP6",178,0)
 . S PAYER=$E(PAYER,1,39-$L(DEACMSG))_DEACMSG_"]"
"RTN","IBCNERP6",179,0)
 ; Update Report Totals
"RTN","IBCNERP6",180,0)
 F CT2=1:1:10 S $P(TOTALS,U,CT2)=$P($G(TOTALS),U,CT2)+$P(RPTDATA,U,CT2)
"RTN","IBCNERP6",181,0)
 I IBOUT="E" S DISPDATA(LINECT)=PAYER_U_INQS_U_CANC_U_QUED_U_FIRST_U_RETS_U_APPS_U_REJS_U_AVG_U_FAIL_U_PEND
"RTN","IBCNERP6",182,0)
 I IBOUT="R" D
"RTN","IBCNERP6",183,0)
 .S DISPDATA(LINECT)=$$FO^IBCNEUT1(PAYER,40)_$$FO^IBCNEUT1(INQS,9,"R")_$$FO^IBCNEUT1(CANC,9,"R")_$$FO^IBCNEUT1(QUED,9,"R")_$$FO^IBCNEUT1(FIRST,9,"R")_$$FO^IBCNEUT1(RETS,9,"R")
"RTN","IBCNERP6",184,0)
 .S DISPDATA(LINECT)=DISPDATA(LINECT)_$$FO^IBCNEUT1(APPS,9,"R")_$$FO^IBCNEUT1(REJS,9,"R")_$$FO^IBCNEUT1(AVG,9,"R")_$$FO^IBCNEUT1(FAIL,9,"R")_$$FO^IBCNEUT1(PEND,9,"R")
"RTN","IBCNERP6",185,0)
 S LINECT=LINECT+1
"RTN","IBCNERP6",186,0)
 I 'RDTL!(REJS=0) G DATAX
"RTN","IBCNERP6",187,0)
 ; Include Rejection Detail - if necessary
"RTN","IBCNERP6",188,0)
 I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("",41)_$$FO^IBCNEUT1("Rejection Detail",56)_REJDASHS
"RTN","IBCNERP6",189,0)
 I IBOUT="E" S DISPDATA(LINECT)="Rejection Detail"
"RTN","IBCNERP6",190,0)
 S LINECT=LINECT+1
"RTN","IBCNERP6",191,0)
 S ERRCD=""
"RTN","IBCNERP6",192,0)
 F  S ERRCD=$O(RPTDATA(ERRCD)) Q:ERRCD=""  D
"RTN","IBCNERP6",193,0)
 .  ; Determine Error Condition Description based on ERRCD
"RTN","IBCNERP6",194,0)
 .  ; If just Error Text 4.01 field, then keep it as is
"RTN","IBCNERP6",195,0)
 .  I 'ERRCD D
"RTN","IBCNERP6",196,0)
 ..   S ERROR=$P(ERRCD,U,2,99)
"RTN","IBCNERP6",197,0)
 ..   I IBOUT="E" S DISPDATA(LINECT)=ERROR_U_ERRCD
"RTN","IBCNERP6",198,0)
 ..   I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("",41)_" "_$$FO^IBCNEUT1(ERROR,53)_$$FO^IBCNEUT1(+RPTDATA(ERRCD),9,"R")
"RTN","IBCNERP6",199,0)
 .  ; If IEN, get the code and description
"RTN","IBCNERP6",200,0)
 .  I ERRCD D
"RTN","IBCNERP6",201,0)
 ..   S ERROR=$G(^IBE(365.017,ERRCD,0))
"RTN","IBCNERP6",202,0)
 ..   I IBOUT="E" S DISPDATA(LINECT)=$P(ERROR,U)_$S($P(ERROR,U,2)'="":"-"_$P(ERROR,U,2))_U_+RPTDATA(ERRCD)
"RTN","IBCNERP6",203,0)
 ..   I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("",41)_" "_$$FO^IBCNEUT1($P(ERROR,U)_$S($P(ERROR,U,2)'="":"-"_$P(ERROR,U,2),1:""),53)_$$FO^IBCNEUT1(+RPTDATA(ERRCD),9,"R")
"RTN","IBCNERP6",204,0)
 .  S LINECT=LINECT+1
"RTN","IBCNERP6",205,0)
 .  ; Update Report Totals
"RTN","IBCNERP6",206,0)
 .  S TOTALS(ERRCD)=+$G(TOTALS(ERRCD))+RPTDATA(ERRCD)
"RTN","IBCNERP6",207,0)
 .  Q
"RTN","IBCNERP6",208,0)
 ;
"RTN","IBCNERP6",209,0)
DATAX ; DATA exit pt
"RTN","IBCNERP6",210,0)
 ; Display end of record dashes only if other records follow
"RTN","IBCNERP6",211,0)
 I IBOUT="R" D
"RTN","IBCNERP6",212,0)
 .I $O(^TMP($J,RTN,SORT1,SORT2,SORT3))'=""!($O(^TMP($J,RTN,SORT1,SORT2))'="")!($O(^TMP($J,RTN,SORT1))'="") S DISPDATA(LINECT)=$$FO^IBCNEUT1("",42)_DASHES2,LINECT=LINECT+1
"RTN","IBCNERP6",213,0)
 Q
"RTN","IBCNERP6",214,0)
 ;
"RTN","IBCNERP6",215,0)
TOTALS(DISPDATA) ; Gather and format lines of totals to be printed
"RTN","IBCNERP6",216,0)
 ; Assumes vars from PRINT: RDTL,MAR
"RTN","IBCNERP6",217,0)
 ; Init vars
"RTN","IBCNERP6",218,0)
 N LINECT,INQS,TIME,AVG,APPS,REJS,ERRCD,DASHES,REJDASHS,FAIL,PEND,RETS
"RTN","IBCNERP6",219,0)
 N FIRST,QUED,ERROR,CANC
"RTN","IBCNERP6",220,0)
 ;
"RTN","IBCNERP6",221,0)
 S $P(DASHES,"=",131)=""
"RTN","IBCNERP6",222,0)
 S $P(REJDASHS,"-",8)=""
"RTN","IBCNERP6",223,0)
 S LINECT=1
"RTN","IBCNERP6",224,0)
 S INQS=+$P(TOTALS,U,1)
"RTN","IBCNERP6",225,0)
 S CANC=+$P(TOTALS,U,2)
"RTN","IBCNERP6",226,0)
 S QUED=+$P(TOTALS,U,3)
"RTN","IBCNERP6",227,0)
 S FIRST=+$P(TOTALS,U,4)
"RTN","IBCNERP6",228,0)
 S RETS=+$P(TOTALS,U,5)
"RTN","IBCNERP6",229,0)
 S APPS=+$P(TOTALS,U,6)
"RTN","IBCNERP6",230,0)
 S REJS=+$P(TOTALS,U,7)
"RTN","IBCNERP6",231,0)
 S TIME=+$P(TOTALS,U,8)
"RTN","IBCNERP6",232,0)
 S FAIL=+$P(TOTALS,U,9)
"RTN","IBCNERP6",233,0)
 S PEND=+$P(TOTALS,U,10)
"RTN","IBCNERP6",234,0)
 S AVG=$FN($S((APPS+REJS)>0:TIME/(APPS+REJS),1:0),"",2)
"RTN","IBCNERP6",235,0)
 I IBOUT="E" S DISPDATA(LINECT)="Grand Totals"_U_INQS_U_CANC_U_QUED_U_FIRST_U_RETS_U_APPS_U_AVG_U_FAIL_U_PEND
"RTN","IBCNERP6",236,0)
 I IBOUT="R" D
"RTN","IBCNERP6",237,0)
 .S DISPDATA(LINECT)=$$FO^IBCNEUT1("Grand Totals",40)_$$FO^IBCNEUT1(INQS,9,"R")_$$FO^IBCNEUT1(CANC,9,"R")_$$FO^IBCNEUT1(QUED,9,"R")_$$FO^IBCNEUT1(FIRST,9,"R")_$$FO^IBCNEUT1(RETS,9,"R")
"RTN","IBCNERP6",238,0)
 .S DISPDATA(LINECT)=DISPDATA(LINECT)_$$FO^IBCNEUT1(APPS,9,"R")_$$FO^IBCNEUT1(REJS,9,"R")_$$FO^IBCNEUT1(AVG,9,"R")_$$FO^IBCNEUT1(FAIL,9,"R")_$$FO^IBCNEUT1(PEND,9,"R")
"RTN","IBCNERP6",239,0)
 S LINECT=LINECT+1
"RTN","IBCNERP6",240,0)
 I 'RDTL!(REJS=0) G TOTALSX
"RTN","IBCNERP6",241,0)
 ; Include Rejection Detail - if necessary
"RTN","IBCNERP6",242,0)
 I IBOUT="E" S DISPDATA(LINECT)="Rejection Detail"
"RTN","IBCNERP6",243,0)
 I IBOUT="R" D
"RTN","IBCNERP6",244,0)
 .S DISPDATA(LINECT)=$$FO^IBCNEUT1("",41)_$$FO^IBCNEUT1("Rejection Detail",56)_REJDASHS
"RTN","IBCNERP6",245,0)
 .S LINECT=LINECT+1
"RTN","IBCNERP6",246,0)
 S ERRCD=""
"RTN","IBCNERP6",247,0)
 F  S ERRCD=$O(TOTALS(ERRCD)) Q:ERRCD=""  D
"RTN","IBCNERP6",248,0)
 .  ; If IEN, get the code and description
"RTN","IBCNERP6",249,0)
 .  I ERRCD D
"RTN","IBCNERP6",250,0)
 ..   S ERROR=$G(^IBE(365.017,ERRCD,0))
"RTN","IBCNERP6",251,0)
 ..   I IBOUT="E" S DISPDATA(LINECT)=$P(ERROR,U)_$S($P(ERROR,U,2)'="":"-"_$P(ERROR,U,2),1:"")_U_+TOTALS(ERRCD)
"RTN","IBCNERP6",252,0)
 ..   I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("",41)_" "_$$FO^IBCNEUT1($P(ERROR,U)_$S($P(ERROR,U,2)'="":"-"_$P(ERROR,U,2),1:""),53)_$$FO^IBCNEUT1(+TOTALS(ERRCD),9,"R")
"RTN","IBCNERP6",253,0)
 .  ; If error text display as is
"RTN","IBCNERP6",254,0)
 .  I 'ERRCD D
"RTN","IBCNERP6",255,0)
 ..    S ERROR=$P(ERRCD,U,2,99)
"RTN","IBCNERP6",256,0)
 ..    I IBOUT="E" S DISPDATA(LINECT)=ERROR_U_+TOTALS(ERRCD)
"RTN","IBCNERP6",257,0)
 ..    I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("",41)_" "_$$FO^IBCNEUT1(ERROR,53)_$$FO^IBCNEUT1(+TOTALS(ERRCD),9,"R")
"RTN","IBCNERP6",258,0)
 .  S LINECT=LINECT+1
"RTN","IBCNERP6",259,0)
 .  Q
"RTN","IBCNERP6",260,0)
 ;
"RTN","IBCNERP6",261,0)
TOTALSX ; DATA exit pt
"RTN","IBCNERP6",262,0)
 I IBOUT="R" S DISPDATA(LINECT)=DASHES
"RTN","IBCNERP6",263,0)
 Q
"RTN","IBCNERP6",264,0)
 ;
"RTN","IBCNERP6",265,0)
 ;
"RTN","IBCNERP7")
0^99^B30436149
"RTN","IBCNERP7",1,0)
IBCNERP7 ;DAOU/BHS - eIV STATISTICAL REPORT ;10-JUN-2002
"RTN","IBCNERP7",2,0)
 ;;2.0;INTEGRATED BILLING;**184,416,528**;21-MAR-94;Build 163
"RTN","IBCNERP7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERP7",4,0)
 ;
"RTN","IBCNERP7",5,0)
 ; eIV - Insurance Verification Interface
"RTN","IBCNERP7",6,0)
 ;
"RTN","IBCNERP7",7,0)
 ; Input parameter: N/A
"RTN","IBCNERP7",8,0)
 ; Other relevant variables:
"RTN","IBCNERP7",9,0)
 ;   IBCNERTN = "IBCNERP7" (current routine name for queueing the 
"RTN","IBCNERP7",10,0)
 ;                          COMPILE process)
"RTN","IBCNERP7",11,0)
 ;   IBCNESPC("BEGDTM") = start date/time for date/time range
"RTN","IBCNERP7",12,0)
 ;   IBCNESPC("ENDDTM") = end date/time for date/time range
"RTN","IBCNERP7",13,0)
 ;   IBCNESPC("SECTS") = list of sections to display on the report
"RTN","IBCNERP7",14,0)
 ;                       1 = All (Outgoing, Incoming and General),
"RTN","IBCNERP7",15,0)
 ;                       2 = Outgoing - Inquiry Response data,
"RTN","IBCNERP7",16,0)
 ;                       3 = Incoming - Inquiry Transmission data,
"RTN","IBCNERP7",17,0)
 ;                       4 = General - Ins Buffer data, Outstanding 
"RTN","IBCNERP7",18,0)
 ;                           Inquiries, Communication Failures, Retries
"RTN","IBCNERP7",19,0)
 ;                       may equal a list of values if '1' is not the
"RTN","IBCNERP7",20,0)
 ;                       the only value
"RTN","IBCNERP7",21,0)
 ;   IBCNESPC("MM") = "", not for MailMan message OR
"RTN","IBCNERP7",22,0)
 ;                    MAILGROUP, generate as MailMan message for this
"RTN","IBCNERP7",23,0)
 ;                               MAILGROUP as defined in IB site 
"RTN","IBCNERP7",24,0)
 ;                               parameters
"RTN","IBCNERP7",25,0)
 ;   IBOUT = "E" for Excel or "R" for report format
"RTN","IBCNERP7",26,0)
 ;
"RTN","IBCNERP7",27,0)
 ; Only enter routine from EN or MAILMSG tags
"RTN","IBCNERP7",28,0)
 Q
"RTN","IBCNERP7",29,0)
 ;
"RTN","IBCNERP7",30,0)
 ; Entry pt
"RTN","IBCNERP7",31,0)
EN ;
"RTN","IBCNERP7",32,0)
 ; Init vars 
"RTN","IBCNERP7",33,0)
 N STOP,IBCNERTN,POP,IBCNESPC,IBOUT
"RTN","IBCNERP7",34,0)
 ;
"RTN","IBCNERP7",35,0)
 S STOP=0
"RTN","IBCNERP7",36,0)
 S IBCNERTN="IBCNERP7"
"RTN","IBCNERP7",37,0)
 W @IOF
"RTN","IBCNERP7",38,0)
 W !,"eIV Statistical Report",!
"RTN","IBCNERP7",39,0)
 W !,"Please select the timeframe for which to view the Insurance"
"RTN","IBCNERP7",40,0)
 W !,"Verification statistics and current status."
"RTN","IBCNERP7",41,0)
 ;
"RTN","IBCNERP7",42,0)
 ; Default to MailMan flag to No from the EN tag
"RTN","IBCNERP7",43,0)
 S IBCNESPC("MM")=""
"RTN","IBCNERP7",44,0)
 ;
"RTN","IBCNERP7",45,0)
 ; Prompts for Payer Report
"RTN","IBCNERP7",46,0)
 ; Date Range parameters
"RTN","IBCNERP7",47,0)
S10 D DTMRNG I STOP G EXIT
"RTN","IBCNERP7",48,0)
 ; Sort by parameter - Payer or Total Inquiries (Payer Report)
"RTN","IBCNERP7",49,0)
S20 D SECTS I STOP G:$$STOP^IBCNERP1 EXIT G S10
"RTN","IBCNERP7",50,0)
 ; Select report type  528 - baa
"RTN","IBCNERP7",51,0)
S30 S IBOUT=$$OUT I STOP G:$$STOP^IBCNERP1 EXIT G S20
"RTN","IBCNERP7",52,0)
 ; Select the output device
"RTN","IBCNERP7",53,0)
S50 D DEVICE^IBCNERP1(IBCNERTN,.IBCNESPC,IBOUT) I STOP G:$$STOP^IBCNERP1 EXIT G S20
"RTN","IBCNERP7",54,0)
 ;
"RTN","IBCNERP7",55,0)
EXIT ; Quit this routine
"RTN","IBCNERP7",56,0)
 Q
"RTN","IBCNERP7",57,0)
 ;
"RTN","IBCNERP7",58,0)
 ;
"RTN","IBCNERP7",59,0)
DTMRNG ; Determine the start and end date/times for the report
"RTN","IBCNERP7",60,0)
 ; Init vars
"RTN","IBCNERP7",61,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERP7",62,0)
 ;
"RTN","IBCNERP7",63,0)
 W !
"RTN","IBCNERP7",64,0)
 ;
"RTN","IBCNERP7",65,0)
 S DIR(0)="DO^::ERX"
"RTN","IBCNERP7",66,0)
 S DIR("A")="Start DATE/TIME"
"RTN","IBCNERP7",67,0)
 S DIR("?",1)="    Enter Start DATE/TIME for report range."
"RTN","IBCNERP7",68,0)
 S DIR("?")="    The time element is required."
"RTN","IBCNERP7",69,0)
 D ^DIR K DIR
"RTN","IBCNERP7",70,0)
 I $D(DIRUT) S STOP=1 G DTMRNGX
"RTN","IBCNERP7",71,0)
 S IBCNESPC("BEGDTM")=Y
"RTN","IBCNERP7",72,0)
 ;
"RTN","IBCNERP7",73,0)
DTMRNG1 S DIR(0)="D^::ERX"
"RTN","IBCNERP7",74,0)
 S DIR("A")="  End DATE/TIME"
"RTN","IBCNERP7",75,0)
 S DIR("?",1)="    Enter End DATE/TIME for report range."
"RTN","IBCNERP7",76,0)
 S DIR("?")="    The time element is required."
"RTN","IBCNERP7",77,0)
 D ^DIR K DIR
"RTN","IBCNERP7",78,0)
 I $D(DIRUT) S STOP=1 G DTMRNGX
"RTN","IBCNERP7",79,0)
 I Y<IBCNESPC("BEGDTM") D  G DTMRNG1
"RTN","IBCNERP7",80,0)
 . W !,"    The End Date/Time must not precede the Start Date/Time."
"RTN","IBCNERP7",81,0)
 . W !,"    Please reenter."
"RTN","IBCNERP7",82,0)
 S IBCNESPC("ENDDTM")=Y
"RTN","IBCNERP7",83,0)
 ;
"RTN","IBCNERP7",84,0)
DTMRNGX ; DTMRNG exit pt
"RTN","IBCNERP7",85,0)
 Q
"RTN","IBCNERP7",86,0)
 ;
"RTN","IBCNERP7",87,0)
 ;
"RTN","IBCNERP7",88,0)
SECTS ; Prompt to allow users to include the available sections in the report
"RTN","IBCNERP7",89,0)
 ; Init vars
"RTN","IBCNERP7",90,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERP7",91,0)
 ;
"RTN","IBCNERP7",92,0)
 W !
"RTN","IBCNERP7",93,0)
 S DIR(0)="L^1:4"
"RTN","IBCNERP7",94,0)
 S DIR("A",1)="Choose all sections to be reviewed"
"RTN","IBCNERP7",95,0)
 S DIR("A",2)="1  -  All            = All three report sections (Default)"
"RTN","IBCNERP7",96,0)
 S DIR("A",3)="2  -  Outgoing Data  = Inquiry Transmission statistics"
"RTN","IBCNERP7",97,0)
 S DIR("A",4)="3  -  Incoming Data  = Inquiry Response statistics"
"RTN","IBCNERP7",98,0)
 S DIR("A",5)="4  -  Current Status = Pending Responses, Queued Inquiries, etc."
"RTN","IBCNERP7",99,0)
 S DIR("A")="Select one or more sections: "
"RTN","IBCNERP7",100,0)
 S DIR("B")=1
"RTN","IBCNERP7",101,0)
 S DIR("?",1)="  Please select one or more sections of the report to view."
"RTN","IBCNERP7",102,0)
 S DIR("?",2)="  To select multiple sections enter a comma separated list"
"RTN","IBCNERP7",103,0)
 S DIR("?",3)="  (ex. 2,4)."
"RTN","IBCNERP7",104,0)
 S DIR("?",4)="  1  -  Include all three sections in the report.  (Default)"
"RTN","IBCNERP7",105,0)
 S DIR("?",5)="  2  -  Include statistics on inquiries transmitted during the"
"RTN","IBCNERP7",106,0)
 S DIR("?",6)="        timeframe by extract type."
"RTN","IBCNERP7",107,0)
 S DIR("?",7)="  3  -  Include statistics on responses received during the"
"RTN","IBCNERP7",108,0)
 S DIR("?",8)="        timeframe by extract type."
"RTN","IBCNERP7",109,0)
 S DIR("?",9)="  4  -  Include statistics on the current state of the system."
"RTN","IBCNERP7",110,0)
 S DIR("?",10)="        This section is independent of the timeframe for the"
"RTN","IBCNERP7",111,0)
 S DIR("?",11)="        report and includes responses pending, queued inquiries,"
"RTN","IBCNERP7",112,0)
 S DIR("?",12)="        deferred inquiries, payer statistics and insurance"
"RTN","IBCNERP7",113,0)
 S DIR("?")="        buffer statistics."
"RTN","IBCNERP7",114,0)
 D ^DIR K DIR
"RTN","IBCNERP7",115,0)
 I $D(DIRUT) S STOP=1 G SECTSX
"RTN","IBCNERP7",116,0)
 ; Default to all if 1 is included OR if 2,3 and 4 are included in any
"RTN","IBCNERP7",117,0)
 ; order
"RTN","IBCNERP7",118,0)
 S Y=","_Y
"RTN","IBCNERP7",119,0)
 I Y[(",1,") S IBCNESPC("SECTS")=1 G SECTSX
"RTN","IBCNERP7",120,0)
 I Y[(",2,"),Y[(",3,"),Y[(",4,") S IBCNESPC("SECTS")=1 G SECTSX
"RTN","IBCNERP7",121,0)
 S IBCNESPC("SECTS")=Y
"RTN","IBCNERP7",122,0)
 ;
"RTN","IBCNERP7",123,0)
SECTSX ; SECTS exit pt
"RTN","IBCNERP7",124,0)
 Q
"RTN","IBCNERP7",125,0)
 ;
"RTN","IBCNERP7",126,0)
 ;
"RTN","IBCNERP7",127,0)
MAILMSG ; Tag to be called by TaskMan to generate report with default values
"RTN","IBCNERP7",128,0)
 ; and send as MailMan message
"RTN","IBCNERP7",129,0)
 ; Init vars
"RTN","IBCNERP7",130,0)
 N IBCNERTN,IBCNESPC,EDT,BDT,TM,IBOUT
"RTN","IBCNERP7",131,0)
 ;
"RTN","IBCNERP7",132,0)
 ; -- set the mail message to display in a report format
"RTN","IBCNERP7",133,0)
 S IBOUT="R"
"RTN","IBCNERP7",134,0)
 ;
"RTN","IBCNERP7",135,0)
 ; Default report parameters
"RTN","IBCNERP7",136,0)
 ; Start Date/Time - End Date/Time range
"RTN","IBCNERP7",137,0)
 ;  Determine start time based on IB site parameter
"RTN","IBCNERP7",138,0)
 S TM=$$GET1^DIQ(350.9,"1,",51.03,"E")
"RTN","IBCNERP7",139,0)
 I TM=""!(+TM=0) S TM="2400"
"RTN","IBCNERP7",140,0)
 S EDT=$$DT^XLFDT
"RTN","IBCNERP7",141,0)
 S BDT=$$FMADD^XLFDT(EDT,-1)
"RTN","IBCNERP7",142,0)
 S IBCNESPC("BEGDTM")=+(BDT_"."_TM)
"RTN","IBCNERP7",143,0)
 S IBCNESPC("ENDDTM")=+(EDT_"."_TM)
"RTN","IBCNERP7",144,0)
 ; Display all sections
"RTN","IBCNERP7",145,0)
 S IBCNESPC("SECTS")=1
"RTN","IBCNERP7",146,0)
 ; Set MailMan flag to IB site parameter MAILGROUP
"RTN","IBCNERP7",147,0)
 S IBCNESPC("MM")=$$MGRP^IBCNEUT5
"RTN","IBCNERP7",148,0)
 ; If there is no MailGroup to send message - do not continue
"RTN","IBCNERP7",149,0)
 I IBCNESPC("MM")="" QUIT
"RTN","IBCNERP7",150,0)
 ; If the send MailMan message parameter is turned off, stop the process
"RTN","IBCNERP7",151,0)
 I '$P($G(^IBE(350.9,1,51)),U,2) QUIT
"RTN","IBCNERP7",152,0)
 ;
"RTN","IBCNERP7",153,0)
 ; Set routine parameter
"RTN","IBCNERP7",154,0)
 S IBCNERTN="IBCNERP7"
"RTN","IBCNERP7",155,0)
 ;
"RTN","IBCNERP7",156,0)
 ; Initialize scratch global
"RTN","IBCNERP7",157,0)
 KILL ^TMP($J,IBCNERTN)
"RTN","IBCNERP7",158,0)
 ; Compile the report data
"RTN","IBCNERP7",159,0)
 D EN^IBCNERP8(IBCNERTN,.IBCNESPC)
"RTN","IBCNERP7",160,0)
 ; Print the report - to MailMan
"RTN","IBCNERP7",161,0)
 I '$G(ZTSTOP) D EN^IBCNERP9(IBCNERTN,.IBCNESPC,IBOUT)
"RTN","IBCNERP7",162,0)
 ;
"RTN","IBCNERP7",163,0)
 ; Kill scratch global
"RTN","IBCNERP7",164,0)
 KILL ^TMP($J,IBCNERTN)
"RTN","IBCNERP7",165,0)
 ;
"RTN","IBCNERP7",166,0)
 ; Purge the task record
"RTN","IBCNERP7",167,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCNERP7",168,0)
 ;
"RTN","IBCNERP7",169,0)
 ; MAILMSG exit pt
"RTN","IBCNERP7",170,0)
 Q
"RTN","IBCNERP7",171,0)
 ;  528 - baa : Add option to ouput data in excel format
"RTN","IBCNERP7",172,0)
OUT() ; Prompt to allow users to select output format
"RTN","IBCNERP7",173,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERP7",174,0)
 W !
"RTN","IBCNERP7",175,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNERP7",176,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNERP7",177,0)
 S DIR("B")="Report"
"RTN","IBCNERP7",178,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q ""
"RTN","IBCNERP7",179,0)
 Q Y
"RTN","IBCNERP7",180,0)
 ;
"RTN","IBCNERP9")
0^100^B133982311
"RTN","IBCNERP9",1,0)
IBCNERP9 ;DAOU/BHS - eIV STATISTICAL REPORT PRINT ;12-JUN-2002
"RTN","IBCNERP9",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,416,506,528**;21-MAR-94;Build 163
"RTN","IBCNERP9",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERP9",4,0)
 ;
"RTN","IBCNERP9",5,0)
 ; eIV - Insurance Verification Interface
"RTN","IBCNERP9",6,0)
 ;
"RTN","IBCNERP9",7,0)
 ; Input variables from IBCNERP7:
"RTN","IBCNERP9",8,0)
 ;  IBCNERTN = "IBCNERP7"
"RTN","IBCNERP9",9,0)
 ; **IBCNESPC array ONLY passed by reference
"RTN","IBCNERP9",10,0)
 ;  IBCNESPC("BEGDTM") = Start Date/Time for date/time report range
"RTN","IBCNERP9",11,0)
 ;  IBCNESPC("ENDDTM") = End Date/Time for date/time report range
"RTN","IBCNERP9",12,0)
 ;  IBCNESPC("SECTS") = 1 - All, includes all sections OR
"RTN","IBCNERP9",13,0)
 ;   list of one or more of the following:
"RTN","IBCNERP9",14,0)
 ;   2 - Outgoing Data, Inquiry Transmission data,
"RTN","IBCNERP9",15,0)
 ;   3 - Incoming Data, Inquiry Response data,
"RTN","IBCNERP9",16,0)
 ;   4 - General Data, Insurance Buffer data,
"RTN","IBCNERP9",17,0)
 ;   Communication Failures, Outstanding Inquiries
"RTN","IBCNERP9",18,0)
 ;   IBCNESPC("MM") = "", do not generate MailMan message OR
"RTN","IBCNERP9",19,0)
 ;                    MAILGROUP, mailgroup to send MailMan message to
"RTN","IBCNERP9",20,0)
 ;                               based on IB site parameter
"RTN","IBCNERP9",21,0)
 ;   Assumes report data exists in ^TMP($J,IBCNERTN,...)
"RTN","IBCNERP9",22,0)
 ;   Based on IBCNESPC("SECTS") parameter the following scratch globals
"RTN","IBCNERP9",23,0)
 ;   will be built
"RTN","IBCNERP9",24,0)
 ;   1 OR contains 2 --> 
"RTN","IBCNERP9",25,0)
 ;    ^TMP($J,RTN,"OUT")=TotInq^InsBufExtSubtotal^PreRegExtSubtotal^...
"RTN","IBCNERP9",26,0)
 ;                       NonVerifInsExtSubtotal^NoActInsExtSubtotal
"RTN","IBCNERP9",27,0)
 ;   1 OR contains 3 --> 
"RTN","IBCNERP9",28,0)
 ;    ^TMP($J,RTN,"IN")=TotResp^InsBufExtSubtotal^PreRegExtSubtotal^...
"RTN","IBCNERP9",29,0)
 ;                       NonVerifInsExtSubtotal^NoActInsExtSubtotal
"RTN","IBCNERP9",30,0)
 ;   1 OR contains 4 --> 
"RTN","IBCNERP9",31,0)
 ;    ^TMP($J,RTN,"CUR")=TotOutstandingInq^TotInqRetries^...
"RTN","IBCNERP9",32,0)
 ;                       TotInqCommFailure^TotInsBufVerified^...
"RTN","IBCNERP9",33,0)
 ;                       ManVerifedSubtotal^eIVProcessedSubtotal...
"RTN","IBCNERP9",34,0)
 ;                       TotInsBufUnverified^! InsBufSubtotal^...
"RTN","IBCNERP9",35,0)
 ;                       ? InsBufSubtotal^- InsBufSubtotal^...
"RTN","IBCNERP9",36,0)
 ;                       Other InsBufSubtotal^TQReadyToTransmit^...
"RTN","IBCNERP9",37,0)
 ;                       TQHold^TQRetry
"RTN","IBCNERP9",38,0)
 ;    and ^TMP($J,RTN","PYR",PAYER NAME,IEN of file 365.12)=""
"RTN","IBCNERP9",39,0)
 ;    IBOUT = "E" for Excel or "R" for report format        
"RTN","IBCNERP9",40,0)
 ; Must call at EN
"RTN","IBCNERP9",41,0)
 Q
"RTN","IBCNERP9",42,0)
 ;
"RTN","IBCNERP9",43,0)
EN(IBCNERTN,IBCNESPC,IBOUT) ; Entry pt
"RTN","IBCNERP9",44,0)
 ;
"RTN","IBCNERP9",45,0)
 ; Init vars
"RTN","IBCNERP9",46,0)
 N CRT,MAXCNT,IBPXT,IBPGC,IBBDT,IBEDT,IBSCT,IBMM,RETRY,OUTINQ,ATTEMPT
"RTN","IBCNERP9",47,0)
 N X,Y,DIR,DTOUT,DUOUT,LIN
"RTN","IBCNERP9",48,0)
 ;
"RTN","IBCNERP9",49,0)
 S IBBDT=$G(IBCNESPC("BEGDTM")),IBEDT=$G(IBCNESPC("ENDDTM"))
"RTN","IBCNERP9",50,0)
 S IBSCT=$G(IBCNESPC("SECTS")),IBMM=$G(IBCNESPC("MM"))
"RTN","IBCNERP9",51,0)
 ;
"RTN","IBCNERP9",52,0)
 S (IBPXT,IBPGC,CRT,MAXCNT)=0
"RTN","IBCNERP9",53,0)
 ;
"RTN","IBCNERP9",54,0)
 ; Determine IO parameters if output device is NOT MailMan message
"RTN","IBCNERP9",55,0)
 I IBMM="" D
"RTN","IBCNERP9",56,0)
 . I IOST["C-" S MAXCNT=IOSL-3,CRT=1 Q
"RTN","IBCNERP9",57,0)
 . S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNERP9",58,0)
 ;
"RTN","IBCNERP9",59,0)
 D PRINT(IBCNERTN,IBBDT,IBEDT,IBSCT,IBMM,.IBPGC,.IBPXT,MAXCNT,CRT,IBOUT)
"RTN","IBCNERP9",60,0)
 I $G(ZTSTOP)!IBPXT G EXIT
"RTN","IBCNERP9",61,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D  G EXIT
"RTN","IBCNERP9",62,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNERP9",63,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERP9",64,0)
 ;
"RTN","IBCNERP9",65,0)
EXIT ; Exit pt
"RTN","IBCNERP9",66,0)
 Q
"RTN","IBCNERP9",67,0)
 ;
"RTN","IBCNERP9",68,0)
 ;
"RTN","IBCNERP9",69,0)
PRINT(RTN,BDT,EDT,SCT,MM,PGC,PXT,MAX,CRT,IBOUT) ; Print data
"RTN","IBCNERP9",70,0)
 ; Init vars
"RTN","IBCNERP9",71,0)
 N EORMSG,NONEMSG,LINECT,DISPDATA,HDRDATA,OFFSET,TMP,DTMRNG,SITE
"RTN","IBCNERP9",72,0)
 ;
"RTN","IBCNERP9",73,0)
 S LINECT=0
"RTN","IBCNERP9",74,0)
 ;
"RTN","IBCNERP9",75,0)
 ; Build End-Of-Report Message for display
"RTN","IBCNERP9",76,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCNERP9",77,0)
 S OFFSET=80-$L(EORMSG)\2
"RTN","IBCNERP9",78,0)
 S EORMSG=$$FO^IBCNEUT1(EORMSG,OFFSET+$L(EORMSG),"R")
"RTN","IBCNERP9",79,0)
 ; Build No-Data-Found Message for display
"RTN","IBCNERP9",80,0)
 S NONEMSG="* * * N O  D A T A  F O U N D * * *"
"RTN","IBCNERP9",81,0)
 S OFFSET=80-$L(NONEMSG)\2
"RTN","IBCNERP9",82,0)
 S NONEMSG=$$FO^IBCNEUT1(NONEMSG,OFFSET+$L(NONEMSG),"R")
"RTN","IBCNERP9",83,0)
 ; Build Site for display
"RTN","IBCNERP9",84,0)
 S SITE=$P($$SITE^VASITE,U,2)
"RTN","IBCNERP9",85,0)
 ; Build Date/Time Range for display
"RTN","IBCNERP9",86,0)
 ;  Build Date/Time display for Starting date/time
"RTN","IBCNERP9",87,0)
 S TMP=$$FMTE^XLFDT(BDT,"5Z")
"RTN","IBCNERP9",88,0)
 S DTMRNG=$P(TMP,"@")_" "_$P(TMP,"@",2)
"RTN","IBCNERP9",89,0)
 ;  Calculate Date/Time display for Ending date/time
"RTN","IBCNERP9",90,0)
 S TMP=$$FMTE^XLFDT(EDT,"5Z")
"RTN","IBCNERP9",91,0)
 S DTMRNG=DTMRNG_" - "_$P(TMP,"@")_" "_$P(TMP,"@",2)
"RTN","IBCNERP9",92,0)
 ;
"RTN","IBCNERP9",93,0)
 ; Print header to DISPDATA for MailMan message ONLY
"RTN","IBCNERP9",94,0)
 I IBOUT="R" D HEADER^IBCNERP0(.HDRDATA,.PGC,.PXT,MAX,CRT,SITE,DTMRNG,MM)
"RTN","IBCNERP9",95,0)
 I MM'="" M DISPDATA=HDRDATA S LINECT=+$O(DISPDATA(""),-1)
"RTN","IBCNERP9",96,0)
 I MM="" KILL HDRDATA
"RTN","IBCNERP9",97,0)
 ;
"RTN","IBCNERP9",98,0)
 ; If global does not exist - display No Data message
"RTN","IBCNERP9",99,0)
 I '$D(^TMP($J,RTN)) S LINECT=LINECT+1,DISPDATA(LINECT)=NONEMSG G PRINT2
"RTN","IBCNERP9",100,0)
 ;
"RTN","IBCNERP9",101,0)
 ; Display Outgoing Data - if selected
"RTN","IBCNERP9",102,0)
 I SCT=1!(SCT[2) D  I PXT!$G(ZTSTOP) G PRINTX
"RTN","IBCNERP9",103,0)
 . ; Build lines of data to display
"RTN","IBCNERP9",104,0)
 . D DATA(.DISPDATA,.LINECT,RTN,"OUT",MM,IBOUT)
"RTN","IBCNERP9",105,0)
 ;
"RTN","IBCNERP9",106,0)
 ; Display Incoming Data - if selected
"RTN","IBCNERP9",107,0)
 I SCT=1!(SCT[3) D  I PXT!$G(ZTSTOP) G PRINTX
"RTN","IBCNERP9",108,0)
 . ; Build lines of data to display
"RTN","IBCNERP9",109,0)
 . D DATA(.DISPDATA,.LINECT,RTN,"IN",MM,IBOUT)
"RTN","IBCNERP9",110,0)
 ;
"RTN","IBCNERP9",111,0)
 ; Display General Data - if selected
"RTN","IBCNERP9",112,0)
 I SCT=1!(SCT[4) D  I PXT!$G(ZTSTOP) G PRINTX
"RTN","IBCNERP9",113,0)
 . ; Build lines of data to display
"RTN","IBCNERP9",114,0)
 . D DATA(.DISPDATA,.LINECT,RTN,"CUR",MM,IBOUT)
"RTN","IBCNERP9",115,0)
 . D DATA(.DISPDATA,.LINECT,RTN,"PYR",MM,IBOUT)
"RTN","IBCNERP9",116,0)
 . D DATA(.DISPDATA,.LINECT,RTN,"FLG",MM,IBOUT)
"RTN","IBCNERP9",117,0)
 ;
"RTN","IBCNERP9",118,0)
PRINT2 S LINECT=LINECT+1
"RTN","IBCNERP9",119,0)
 S DISPDATA(LINECT)=EORMSG
"RTN","IBCNERP9",120,0)
 ;
"RTN","IBCNERP9",121,0)
 I MM="" D LINE(.DISPDATA,.PGC,.PXT,MAX,CRT,SITE,DTMRNG,MM)
"RTN","IBCNERP9",122,0)
 ; Generate MailMan message, if flag is set
"RTN","IBCNERP9",123,0)
 I MM'="" D MSG^IBCNEUT5(MM,"** eIV Statistical Rpt **","DISPDATA(")
"RTN","IBCNERP9",124,0)
 ;
"RTN","IBCNERP9",125,0)
PRINTX ; PRINT exit pt
"RTN","IBCNERP9",126,0)
 Q
"RTN","IBCNERP9",127,0)
 ;
"RTN","IBCNERP9",128,0)
LINE(DISPDATA,PGC,PXT,MAX,CRT,SITE,DTMRNG,MM) ; Print line of data
"RTN","IBCNERP9",129,0)
 ; Init vars
"RTN","IBCNERP9",130,0)
 N CT,II,ARRAY,NWPG
"RTN","IBCNERP9",131,0)
 ;
"RTN","IBCNERP9",132,0)
 S NWPG=0
"RTN","IBCNERP9",133,0)
 S CT=+$O(DISPDATA(""),-1)
"RTN","IBCNERP9",134,0)
 I $Y+1+CT>MAX,PGC>1 D HEADER^IBCNERP0(.ARRAY,.PGC,.PXT,MAX,CRT,SITE,DTMRNG,MM) S NWPG=1 I PXT!$G(ZTSTOP) G LINEX
"RTN","IBCNERP9",135,0)
 F II=1:1:CT D  Q:PXT!$G(ZTSTOP)
"RTN","IBCNERP9",136,0)
 . I $Y+1>MAX!('PGC) D HEADER^IBCNERP0(.ARRAY,.PGC,.PXT,MAX,CRT,SITE,DTMRNG,MM) S NWPG=1 I PXT!$G(ZTSTOP) Q
"RTN","IBCNERP9",137,0)
 . I 'NWPG!(NWPG&($D(DISPDATA(II)))) I $G(DISPDATA(II))'="" W !,?1,DISPDATA(II)
"RTN","IBCNERP9",138,0)
 . I NWPG S NWPG=0
"RTN","IBCNERP9",139,0)
 ;
"RTN","IBCNERP9",140,0)
LINEX ; LINE exit pt
"RTN","IBCNERP9",141,0)
 Q
"RTN","IBCNERP9",142,0)
 ;
"RTN","IBCNERP9",143,0)
DATA(DISPDATA,LINECT,RTN,TYPE,MM,IBOUT) ; Format lines of data to be printed
"RTN","IBCNERP9",144,0)
 ; Init vars
"RTN","IBCNERP9",145,0)
 ; 528 - baa : added code to output to Excel 
"RTN","IBCNERP9",146,0)
 N DASHES,PEND,RPTDATA,CT,DEFINQ,INSCOS,PAYERS,QUEINQ,TXT
"RTN","IBCNERP9",147,0)
 ;
"RTN","IBCNERP9",148,0)
 S $P(DASHES,"=",15)=""
"RTN","IBCNERP9",149,0)
 I LINECT>0,MM="" S LINECT=LINECT+1,DISPDATA(LINECT)=""
"RTN","IBCNERP9",150,0)
 S LINECT=LINECT+1
"RTN","IBCNERP9",151,0)
 I IBOUT="R" S DISPDATA(LINECT)=$S(TYPE="OUT":"Outgoing Data",TYPE="IN":"Incoming Data",1:"Current Status")
"RTN","IBCNERP9",152,0)
 I IBOUT="E" S DISPDATA(LINECT)=$S(TYPE="OUT":"OUTGOING DATA",TYPE="IN":"INCOMING DATA",1:"CURRENT STATUS")
"RTN","IBCNERP9",153,0)
 S LINECT=LINECT+1
"RTN","IBCNERP9",154,0)
 I IBOUT="R" S DISPDATA(LINECT)=DASHES
"RTN","IBCNERP9",155,0)
 ; Copy report data to local variable
"RTN","IBCNERP9",156,0)
 S RPTDATA=$G(^TMP($J,RTN,TYPE))      ; does not work for "PYR"
"RTN","IBCNERP9",157,0)
 ; Outgoing and Incoming Totals
"RTN","IBCNERP9",158,0)
 I TYPE="OUT"!(TYPE="IN") D  G DATAX
"RTN","IBCNERP9",159,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",160,0)
 . I IBOUT="E" S DISPDATA(LINECT)=$S(TYPE="OUT":"Inquiries Sent",1:"Responses Received")_U_+$P(RPTDATA,U,1)
"RTN","IBCNERP9",161,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1($S(TYPE="OUT":"Inquiries Sent:",1:"Responses Received:"),36)_$$FO^IBCNEUT1(+$P(RPTDATA,U,1),9,"R")
"RTN","IBCNERP9",162,0)
 . F CT=1:1:3 D
"RTN","IBCNERP9",163,0)
 . . S TYPE="  "_$S(CT=1:"Insurance Buffer",CT=2:"Appointment",1:"Non-verified Insurance")
"RTN","IBCNERP9",164,0)
 . . S LINECT=LINECT+1
"RTN","IBCNERP9",165,0)
 . . I IBOUT="E" S DISPDATA(LINECT)=TYPE_U_+$P(RPTDATA,U,CT+1)
"RTN","IBCNERP9",166,0)
 . . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1(TYPE,46)_$$FO^IBCNEUT1(+$P(RPTDATA,U,CT+1),9,"R")
"RTN","IBCNERP9",167,0)
 ;
"RTN","IBCNERP9",168,0)
 ; General Data
"RTN","IBCNERP9",169,0)
 I TYPE="CUR" D  G DATAX
"RTN","IBCNERP9",170,0)
 . ; Responses Pending
"RTN","IBCNERP9",171,0)
 . S PEND=+$P(RPTDATA,U,1)
"RTN","IBCNERP9",172,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",173,0)
 . I IBOUT="E" S DISPDATA(LINECT)="Responses Pending"_U_PEND
"RTN","IBCNERP9",174,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("Responses Pending:",36)_$$FO^IBCNEUT1(PEND,9,"R")
"RTN","IBCNERP9",175,0)
 . ; Queued Inqs
"RTN","IBCNERP9",176,0)
 . S QUEINQ=+$P(RPTDATA,U,2)
"RTN","IBCNERP9",177,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",178,0)
 . I IBOUT="E" S DISPDATA(LINECT)="Queued Inquiries"_U_QUEINQ
"RTN","IBCNERP9",179,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("Queued Inquiries:",36)_$$FO^IBCNEUT1(QUEINQ,9,"R")
"RTN","IBCNERP9",180,0)
 . ; Deferred Inqs
"RTN","IBCNERP9",181,0)
 . S DEFINQ=+$P(RPTDATA,U,3)
"RTN","IBCNERP9",182,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",183,0)
 . I IBOUT="E" S DISPDATA(LINECT)="Deferred Inquiries:"_U_DEFINQ
"RTN","IBCNERP9",184,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("Deferred Inquiries:",36)_$$FO^IBCNEUT1(DEFINQ,9,"R")
"RTN","IBCNERP9",185,0)
 . ; Ins Cos w/o Nat ID
"RTN","IBCNERP9",186,0)
 . S INSCOS=+$P(RPTDATA,U,4)
"RTN","IBCNERP9",187,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",188,0)
 . I IBOUT="E" S DISPDATA(LINECT)="Insurance Companies w/o National ID"_U_INSCOS
"RTN","IBCNERP9",189,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("Insurance Companies w/o National ID:",36)_$$FO^IBCNEUT1(INSCOS,9,"R")
"RTN","IBCNERP9",190,0)
 . ; Payers disabled locally
"RTN","IBCNERP9",191,0)
 . S PAYERS=+$P(RPTDATA,U,5)
"RTN","IBCNERP9",192,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",193,0)
 . I IBOUT="E" S DISPDATA(LINECT)="eIV Payers Disabled Locally"_U_PAYERS
"RTN","IBCNERP9",194,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("eIV Payers Disabled Locally:",36)_$$FO^IBCNEUT1(PAYERS,9,"R")
"RTN","IBCNERP9",195,0)
 . I IBOUT="R" S LINECT=LINECT+1
"RTN","IBCNERP9",196,0)
 . I IBOUT="R" S DISPDATA(LINECT)=""
"RTN","IBCNERP9",197,0)
 . ; Insurance Buffer statistics
"RTN","IBCNERP9",198,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",199,0)
 . I IBOUT="E" S DISPDATA(LINECT)="Insurance Buffer Entries: "_U_($P(RPTDATA,U,6)+$P(RPTDATA,U,9))
"RTN","IBCNERP9",200,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("Insurance Buffer Entries: ",36)_$$FO^IBCNEUT1(($P(RPTDATA,U,6)+$P(RPTDATA,U,9)),9,"R")
"RTN","IBCNERP9",201,0)
 . ; *,+,#,! or -  symbol entries - User action required
"RTN","IBCNERP9",202,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",203,0)
 . I IBOUT="E" S DISPDATA(LINECT)="User Action Required"_U_+$P(RPTDATA,U,6)
"RTN","IBCNERP9",204,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("  User Action Required: ",46)_$$FO^IBCNEUT1(+$P(RPTDATA,U,6),9,"R")
"RTN","IBCNERP9",205,0)
 . I IBOUT="R" F CT=7,8,15,13,10,11 D
"RTN","IBCNERP9",206,0)
 . . S LINECT=LINECT+1
"RTN","IBCNERP9",207,0)
 . . ; Added # to report
"RTN","IBCNERP9",208,0)
 . . S TYPE="    # of "
"RTN","IBCNERP9",209,0)
 . . I CT=7 S TXT="* entries (User Verified policy)"
"RTN","IBCNERP9",210,0)
 . . I CT=8 S TXT="+ entries (Payer indicated Active policy)"
"RTN","IBCNERP9",211,0)
 . . I CT=10 S TXT="# entries (Policy status undetermined)"
"RTN","IBCNERP9",212,0)
 . . I CT=11 S TXT="! entries (eIV needs user assistance for entry)"
"RTN","IBCNERP9",213,0)
 . . I CT=13 S TXT="- entries (Payer indicated Inactive policy)"
"RTN","IBCNERP9",214,0)
 . . I CT=15 S TXT="$ entries (Escalated, Active policy)"
"RTN","IBCNERP9",215,0)
 . . S TYPE=TYPE_TXT
"RTN","IBCNERP9",216,0)
 . . S DISPDATA(LINECT)=$$FO^IBCNEUT1(TYPE,56)_$$FO^IBCNEUT1(+$P(RPTDATA,U,CT),9,"R")
"RTN","IBCNERP9",217,0)
 . ;
"RTN","IBCNERP9",218,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",219,0)
 . I IBOUT="E" S DISPDATA(LINECT)="Entries Awaiting Processing"_U_+$P(RPTDATA,U,9)
"RTN","IBCNERP9",220,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("  Entries Awaiting Processing: ",46)_$$FO^IBCNEUT1(+$P(RPTDATA,U,9),9,"R")
"RTN","IBCNERP9",221,0)
 . ; Subtotal of ? entries (eIV is waiting for a response)
"RTN","IBCNERP9",222,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",223,0)
 . I IBOUT="E" S DISPDATA(LINECT)="# of ? entries (eIV is waiting for a response)"_U_+$P(RPTDATA,U,12)
"RTN","IBCNERP9",224,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("    # of ? entries (eIV is waiting for a response)",56)_$$FO^IBCNEUT1(+$P(RPTDATA,U,12),9,"R")
"RTN","IBCNERP9",225,0)
 . ; Subtotal of blank entries (yet to be processed or accepted)
"RTN","IBCNERP9",226,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",227,0)
 . I IBOUT="E" S DISPDATA(LINECT)="# of blank entries (yet to be processed or accepted)"_U_+$P(RPTDATA,U,14)
"RTN","IBCNERP9",228,0)
 . I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1("    # of blank entries (yet to be processed or accepted)",56)_$$FO^IBCNEUT1(+$P(RPTDATA,U,14),9,"R")
"RTN","IBCNERP9",229,0)
 ;
"RTN","IBCNERP9",230,0)
 ; New Payers added to File 365.12
"RTN","IBCNERP9",231,0)
 I TYPE="PYR" D  G DATAX
"RTN","IBCNERP9",232,0)
 . ; Payers added to file 365.12
"RTN","IBCNERP9",233,0)
 . D DATAX
"RTN","IBCNERP9",234,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",235,0)
 . S DISPDATA(LINECT)="New eIV Payers received during report date range:"
"RTN","IBCNERP9",236,0)
 . S LINECT=LINECT+1
"RTN","IBCNERP9",237,0)
 . I '$D(^TMP($J,RTN,TYPE)) S DISPDATA(LINECT)="    No new Payers added" Q
"RTN","IBCNERP9",238,0)
 . S DISPDATA(LINECT)="  Please link the associated active insurance companies to these payers at your"
"RTN","IBCNERP9",239,0)
 . S LINECT=LINECT+1,DISPDATA(LINECT)="  earliest convenience.  Locally activate the payers after you link insurance"
"RTN","IBCNERP9",240,0)
 . S LINECT=LINECT+1,DISPDATA(LINECT)="  companies to them.  For further details regarding this process, please refer"
"RTN","IBCNERP9",241,0)
 . S LINECT=LINECT+1,DISPDATA(LINECT)="  to the Integrated Billing eIV Interface User Guide."
"RTN","IBCNERP9",242,0)
 . N PYR,PIEN
"RTN","IBCNERP9",243,0)
 . S PYR="",PIEN="" F  S PYR=$O(^TMP($J,RTN,TYPE,PYR)) Q:PYR=""  D
"RTN","IBCNERP9",244,0)
 . . F  S PIEN=$O(^TMP($J,RTN,TYPE,PYR,PIEN)) Q:'PIEN  D
"RTN","IBCNERP9",245,0)
 . . . S LINECT=LINECT+1
"RTN","IBCNERP9",246,0)
 . . . I IBOUT="E" S DISPDATA(LINECT)=PYR Q
"RTN","IBCNERP9",247,0)
 . . . I IBOUT="R" S DISPDATA(LINECT)="    "_PYR
"RTN","IBCNERP9",248,0)
 ;
"RTN","IBCNERP9",249,0)
 ; Active/Trusted flag logs
"RTN","IBCNERP9",250,0)
 I TYPE="FLG" D  G DATAX
"RTN","IBCNERP9",251,0)
 .N DATA,PNAME,Z,FLG
"RTN","IBCNERP9",252,0)
 .F FLG="A","T" D
"RTN","IBCNERP9",253,0)
 ..S LINECT=LINECT+1,DISPDATA(LINECT)="",LINECT=LINECT+1
"RTN","IBCNERP9",254,0)
 ..I FLG="A" D
"RTN","IBCNERP9",255,0)
 ...S DISPDATA(LINECT)="National Payers - ACTIVE flag changes at FSC"
"RTN","IBCNERP9",256,0)
 ...I IBOUT="R" S LINECT=LINECT+1
"RTN","IBCNERP9",257,0)
 ...I IBOUT="R" S DISPDATA(LINECT)="============================================"
"RTN","IBCNERP9",258,0)
 ...Q
"RTN","IBCNERP9",259,0)
 ..I FLG="T" D
"RTN","IBCNERP9",260,0)
 ...S DISPDATA(LINECT)="Nationally Active Payers - TRUSTED flag changes at FSC"
"RTN","IBCNERP9",261,0)
 ...I IBOUT="R" S LINECT=LINECT+1
"RTN","IBCNERP9",262,0)
 ...I IBOUT="R" S DISPDATA(LINECT)="======================================================"
"RTN","IBCNERP9",263,0)
 ...Q
"RTN","IBCNERP9",264,0)
 ..I '$D(^TMP($J,RTN,"CUR","FLAGS",FLG)) S LINECT=LINECT+1,DISPDATA(LINECT)=" No information available" Q
"RTN","IBCNERP9",265,0)
 ..S PNAME="" F  S PNAME=$O(^TMP($J,RTN,"CUR","FLAGS",FLG,PNAME)) Q:PNAME=""  D
"RTN","IBCNERP9",266,0)
 ...S Z="" F  S Z=$O(^TMP($J,RTN,"CUR","FLAGS",FLG,PNAME,Z)) Q:Z=""  D
"RTN","IBCNERP9",267,0)
 ....S DATA=$G(^TMP($J,RTN,"CUR","FLAGS",FLG,PNAME,Z))
"RTN","IBCNERP9",268,0)
 ....S LINECT=LINECT+1
"RTN","IBCNERP9",269,0)
 ....I IBOUT="E" S DISPDATA(LINECT)=PNAME_U_$P(DATA,U)_U_$P(DATA,U,2)
"RTN","IBCNERP9",270,0)
 ....I IBOUT="R" S DISPDATA(LINECT)=$$FO^IBCNEUT1(" "_PNAME,47)_$$FO^IBCNEUT1($P(DATA,U),19)_" Set: "_$P(DATA,U,2)
"RTN","IBCNERP9",271,0)
 ....Q
"RTN","IBCNERP9",272,0)
 ...Q
"RTN","IBCNERP9",273,0)
 ..Q
"RTN","IBCNERP9",274,0)
 .Q
"RTN","IBCNERP9",275,0)
DATAX ; DATA exit pt
"RTN","IBCNERP9",276,0)
 S LINECT=LINECT+1
"RTN","IBCNERP9",277,0)
 S DISPDATA(LINECT)=""
"RTN","IBCNERP9",278,0)
 Q
"RTN","IBCNERP9",279,0)
 ;
"RTN","IBCNERPA")
0^116^B7366399
"RTN","IBCNERPA",1,0)
IBCNERPA ;DAOU/BHS - IBCNE eIV RESPONSE REPORT (cont'd) ;03-JUN-2002
"RTN","IBCNERPA",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,345,416,528**;21-MAR-94;Build 163
"RTN","IBCNERPA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPA",4,0)
 ;
"RTN","IBCNERPA",5,0)
 ; eIV - Insurance Verification Interface
"RTN","IBCNERPA",6,0)
 ;
"RTN","IBCNERPA",7,0)
 ; Input from IBCNERP1/2:
"RTN","IBCNERPA",8,0)
 ;  IBCNERTN="IBCNERP1" - Driver rtn
"RTN","IBCNERPA",9,0)
 ;  IBCNESPC("BEGDT")=Start Dt,  IBCNESPC("ENDDT")=End Dt
"RTN","IBCNERPA",10,0)
 ;  IBCNESPC("PYR")=Pyr IEN OR "" for all
"RTN","IBCNERPA",11,0)
 ;  IBCNESPC("PAT")=Pat IEN OR "" for all
"RTN","IBCNERPA",12,0)
 ;  IBCNESPC("TYPE")=A (All Responses) OR M (Most Recent Responses) for
"RTN","IBCNERPA",13,0)
 ;   unique Pyr/Pt pair
"RTN","IBCNERPA",14,0)
 ;  IBCNESPC("SORT")=1 (PyrNm) OR 2 (PatNm)
"RTN","IBCNERPA",15,0)
 ;  IBCNESPC("TRCN")=Trace #^IEN, if non-null, all params null
"RTN","IBCNERPA",16,0)
 ;  IBCNESPC("RFLAG")=Report Flag used to indicate which report is being
"RTN","IBCNERPA",17,0)
 ;   run.  Response Report (O), Inactive Report (1), or Ambiguous
"RTN","IBCNERPA",18,0)
 ;   Report (2).
"RTN","IBCNERPA",19,0)
 ;  IBCNESPC("DTEXP")=Expiration date used in the inactive policy report
"RTN","IBCNERPA",20,0)
 ;  IBOUT="R" for Report format or "E" for Excel format
"RTN","IBCNERPA",21,0)
 ;
"RTN","IBCNERPA",22,0)
 ;  Based on structure of eIV Response File (#365)
"RTN","IBCNERPA",23,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,CT,0) based on ^IBCN(365,DA,0)
"RTN","IBCNERPA",24,0)
 ;    IBCNERTN="IBCNERP1", S1=PyrName(SORT=1) or PatNm(SORT=2),
"RTN","IBCNERPA",25,0)
 ;    S2=PatName(SORT=1) or PyrName(SORT=2), CT=Seq ct
"RTN","IBCNERPA",26,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,CT,1) based on ^IBCN(365,DA,1)
"RTN","IBCNERPA",27,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,2,EBCT) based on ^IBCN(365,DA,2)
"RTN","IBCNERPA",28,0)
 ;    EBCT=E/B IEN (365.02)
"RTN","IBCNERPA",29,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,2,EBCT,NTCT)=based on ^IBCN(365,DA,2,EB,NT)
"RTN","IBCNERPA",30,0)
 ;   NTCT=Notes Ct, may not be Notes IEN, if line wrapped (365.021)
"RTN","IBCNERPA",31,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,2,CNCT) based on ^IBCN(365,DA,3)
"RTN","IBCNERPA",32,0)
 ;   CNCT=Cont Pers IEN (365.03)
"RTN","IBCNERPA",33,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,4,CT)= err txt based on ^IBCN(365,DA,4)
"RTN","IBCNERPA",34,0)
 ;   CT=1/2 if >60 ch long
"RTN","IBCNERPA",35,0)
 ; Must call at one of the entry points, EN3 or EN6
"RTN","IBCNERPA",36,0)
 Q
"RTN","IBCNERPA",37,0)
 ;
"RTN","IBCNERPA",38,0)
EN3(IBCNERTN,IBCNESPC,IBOUT) ; Entry pt.  Calls IBCNERP3
"RTN","IBCNERPA",39,0)
 N IBBDT,IBEDT,IBPY,IBPT,IBTYP,IBSRT,CRT,MAXCNT,IBPXT
"RTN","IBCNERPA",40,0)
 N IBPGC,X,Y,DIR,DTOUT,DUOUT,LIN,IBTRC,IPRF,IBRDT
"RTN","IBCNERPA",41,0)
 S IBBDT=$G(IBCNESPC("BEGDT")),IBEDT=$G(IBCNESPC("ENDDT"))
"RTN","IBCNERPA",42,0)
 S IBPY=$G(IBCNESPC("PYR")),IBPT=$G(IBCNESPC("PAT"))
"RTN","IBCNERPA",43,0)
 S IBTYP=$G(IBCNESPC("TYPE")),IBSRT=$G(IBCNESPC("SORT"))
"RTN","IBCNERPA",44,0)
 S IBTRC=$P($G(IBCNESPC("TRCN")),U,1),(IBPXT,IBPGC)=0
"RTN","IBCNERPA",45,0)
 S IBEXP=$G(IBCNESPC("DTEXP"))
"RTN","IBCNERPA",46,0)
 S IPRF=$G(IBCNESPC("RFLAG"))
"RTN","IBCNERPA",47,0)
 S IBRDT=$$FMTE^XLFDT($$NOW^XLFDT,1)
"RTN","IBCNERPA",48,0)
 ; Determine IO params
"RTN","IBCNERPA",49,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCNERPA",50,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCNERPA",51,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNERPA",52,0)
 D PRINT^IBCNERP3(IBCNERTN,IBBDT,IBEDT,IBPY,IBPT,IBTYP,IBSRT,.IBPGC,.IBPXT,MAXCNT,CRT,IBTRC,IBEXP,IPRF,IBRDT,IBOUT)
"RTN","IBCNERPA",53,0)
 I $G(ZTSTOP)!IBPXT G EXIT3
"RTN","IBCNERPA",54,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D
"RTN","IBCNERPA",55,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNERPA",56,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERPA",57,0)
EXIT3 ; Exit pt
"RTN","IBCNERPA",58,0)
 Q
"RTN","IBCNERPA",59,0)
 ;
"RTN","IBCNERPA",60,0)
 ;
"RTN","IBCNERPA",61,0)
EN6(IBCNERTN,IBCNESPC,IBOUT) ; Entry pt.  Calls IBCNERP6
"RTN","IBCNERPA",62,0)
 ;
"RTN","IBCNERPA",63,0)
 ; Init vars
"RTN","IBCNERPA",64,0)
 N CRT,MAXCNT,IBPXT,IBPGC,IBBDT,IBEDT,IBPY,IBSRT,IBDTL
"RTN","IBCNERPA",65,0)
 N X,Y,DIR,DTOUT,DUOUT,LIN,TOTALS
"RTN","IBCNERPA",66,0)
 ;
"RTN","IBCNERPA",67,0)
 S IBBDT=$G(IBCNESPC("BEGDT"))
"RTN","IBCNERPA",68,0)
 S IBEDT=$G(IBCNESPC("ENDDT"))
"RTN","IBCNERPA",69,0)
 S IBPY=$G(IBCNESPC("PYR"))
"RTN","IBCNERPA",70,0)
 S IBDTL=$G(IBCNESPC("DTL"))
"RTN","IBCNERPA",71,0)
 S IBSRT=$G(IBCNESPC("SORT"))
"RTN","IBCNERPA",72,0)
 S (IBPXT,IBPGC)=0
"RTN","IBCNERPA",73,0)
 ;
"RTN","IBCNERPA",74,0)
 ; Determine IO parameters
"RTN","IBCNERPA",75,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCNERPA",76,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNERPA",77,0)
 ;
"RTN","IBCNERPA",78,0)
 D PRINT^IBCNERP6(IBCNERTN,IBBDT,IBEDT,IBPY,IBDTL,IBSRT,.IBPGC,.IBPXT,MAXCNT,CRT,IBOUT)
"RTN","IBCNERPA",79,0)
 I $G(ZTSTOP)!IBPXT G EXIT6
"RTN","IBCNERPA",80,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D
"RTN","IBCNERPA",81,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNERPA",82,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERPA",83,0)
 ;
"RTN","IBCNERPA",84,0)
EXIT6 ; Exit pt
"RTN","IBCNERPA",85,0)
 Q
"RTN","IBCNERPA",86,0)
 ;
"RTN","IBCNERPB")
0^56^B48231865
"RTN","IBCNERPB",1,0)
IBCNERPB ;DAOU/RO -  eIV PAYER LINK REPORT ;AUG-2003
"RTN","IBCNERPB",2,0)
 ;;2.0;INTEGRATED BILLING;**184,252,271,416,528**;21-MAR-94;Build 163
"RTN","IBCNERPB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPB",4,0)
 ;
"RTN","IBCNERPB",5,0)
 ; eIV - Insurance Verification Interface
"RTN","IBCNERPB",6,0)
 ;
"RTN","IBCNERPB",7,0)
 ; Input parameters: N/A
"RTN","IBCNERPB",8,0)
 ; Other relevant variables ZTSAVED for queueing:
"RTN","IBCNERPB",9,0)
 ;  IBCNERTN = "IBCNERPB" (current routine name for queueing the
"RTN","IBCNERPB",10,0)
 ;   COMPILE process)
"RTN","IBCNERPB",11,0)
 ; ********
"RTN","IBCNERPB",12,0)
 ;  IBCNESPC("REP")=1 for Payer List report, 2 for Company List
"RTN","IBCNERPB",13,0)
 ;  IBCNESPC("PTYPE")=Payer type (1-no active ins linked, 2-at least 1 ins linked, 3-All Payers)
"RTN","IBCNERPB",14,0)
 ;  IBCNESPC("PSORT")=Primary Sort for Payer report
"RTN","IBCNERPB",15,0)
 ;  IBCNESPC("PPYR")=single Payer name or '' for all
"RTN","IBCNERPB",16,0)
 ;  IBCNESPC("PDET")=Ins detail on payer report (1-include list of ins,2-do not list)
"RTN","IBCNERPB",17,0)
 ;
"RTN","IBCNERPB",18,0)
 ;  IBCNESPC("ITYPE")=Ins Company type (1-no payer link, 2-linked to payer, 3-All ins companies)
"RTN","IBCNERPB",19,0)
 ;  IBCNESPC("ISORT")=Primary Sort for Payer Insurance report
"RTN","IBCNERPB",20,0)
 ;  IBCNESPC("IMAT")=Partial matching Ins carriers
"RTN","IBCNERPB",21,0)
 ; Only call this routine at a tag
"RTN","IBCNERPB",22,0)
 Q
"RTN","IBCNERPB",23,0)
 ;
"RTN","IBCNERPB",24,0)
EN ; Main entry pt
"RTN","IBCNERPB",25,0)
 ; Init vars
"RTN","IBCNERPB",26,0)
 N STOP,IBCNERTN,POP,IBCNESPC,IBOUT
"RTN","IBCNERPB",27,0)
 ;
"RTN","IBCNERPB",28,0)
 S STOP=0
"RTN","IBCNERPB",29,0)
 S IBCNERTN="IBCNERPB"
"RTN","IBCNERPB",30,0)
 W @IOF
"RTN","IBCNERPB",31,0)
 W !,"eIV Payer Link Report",!
"RTN","IBCNERPB",32,0)
 W !,"In order for an Insurance Company to be eligible for electronic insurance"
"RTN","IBCNERPB",33,0)
 W !,"eligibility communications via the eIV software, the Insurance Company"
"RTN","IBCNERPB",34,0)
 W !,"needs to be linked to an appropriate payer from the National EDI Payer list."
"RTN","IBCNERPB",35,0)
 W !,"The National EDI Payer list contains the names of the payers that are"
"RTN","IBCNERPB",36,0)
 W !,"currently participating with the eIV process."
"RTN","IBCNERPB",37,0)
 W !!,"This report option provides information to assist with finding unlinked"
"RTN","IBCNERPB",38,0)
 W !,"insurance companies or payers, which can subsequently be linked through the"
"RTN","IBCNERPB",39,0)
 W !,"INSURANCE COMPANY EDIT option."
"RTN","IBCNERPB",40,0)
 ;
"RTN","IBCNERPB",41,0)
 ; Report type
"RTN","IBCNERPB",42,0)
R05 D RTYPE I STOP G:$$STOP EXIT G R05
"RTN","IBCNERPB",43,0)
 S IBCNESPC("PPYR")=""
"RTN","IBCNERPB",44,0)
 ; If rpt by ins company, go to questions
"RTN","IBCNERPB",45,0)
 I $G(IBCNESPC("REP"))=2 G R120
"RTN","IBCNERPB",46,0)
 ; Payer type params
"RTN","IBCNERPB",47,0)
R20 D PAYER I STOP G:$$STOP EXIT G R05
"RTN","IBCNERPB",48,0)
 I IBCNESPC("PPYR")'="" S IBCNESPC("PTYPE")=3 G R30
"RTN","IBCNERPB",49,0)
 ; Payer details
"RTN","IBCNERPB",50,0)
R25 D PTYPE I STOP G:$$STOP EXIT G R20
"RTN","IBCNERPB",51,0)
 S IBCNESPC("PDET")=2 I IBCNESPC("PTYPE")=1 G R40
"RTN","IBCNERPB",52,0)
 ; insurance company details
"RTN","IBCNERPB",53,0)
R30 D PDET I STOP G:$$STOP EXIT G R25
"RTN","IBCNERPB",54,0)
 I IBCNESPC("PPYR")'="" S IBCNESPC("ISORT")=1 G R100
"RTN","IBCNERPB",55,0)
 ; Type of data to return param
"RTN","IBCNERPB",56,0)
R40 D PSORT I STOP G:$$STOP EXIT G R20
"RTN","IBCNERPB",57,0)
 G R100
"RTN","IBCNERPB",58,0)
 ; Payer type params
"RTN","IBCNERPB",59,0)
R120 D ITYPE^IBCNERPC I STOP G:$$STOP EXIT G R05
"RTN","IBCNERPB",60,0)
 ; Partial Ins Name to include
"RTN","IBCNERPB",61,0)
R130 D IMAT^IBCNERPC I STOP G:$$STOP EXIT G R120
"RTN","IBCNERPB",62,0)
 I IBCNESPC("ITYPE")=1 S IBCNESPC("ISORT")=1 G R100
"RTN","IBCNERPB",63,0)
 ; Type of data to return param
"RTN","IBCNERPB",64,0)
R140 D ISORT^IBCNERPC I STOP G:$$STOP EXIT G R130
"RTN","IBCNERPB",65,0)
 ; Select output device
"RTN","IBCNERPB",66,0)
R100 ; Issue output width warning if not queued
"RTN","IBCNERPB",67,0)
 S IBOUT=$$OUT^IBCNERPC I STOP G:$$STOP EXIT G R05
"RTN","IBCNERPB",68,0)
 I IBCNERTN="IBCNERPB",'$D(ZTQUEUED),IBOUT="R" W !!!,"*** This report is 132 characters wide ***",!
"RTN","IBCNERPB",69,0)
 D DEVICE(IBCNERTN,.IBCNESPC) I STOP G:$$STOP EXIT G R05
"RTN","IBCNERPB",70,0)
 G EXIT
"RTN","IBCNERPB",71,0)
 ;
"RTN","IBCNERPB",72,0)
EXIT ; Exit pt
"RTN","IBCNERPB",73,0)
 Q
"RTN","IBCNERPB",74,0)
 ;
"RTN","IBCNERPB",75,0)
 ;
"RTN","IBCNERPB",76,0)
COMPILE(IBCNERTN,IBCNESPC) ;
"RTN","IBCNERPB",77,0)
 ; Entry point called from EN^XUTMDEVQ in either direct or queued mode.
"RTN","IBCNERPB",78,0)
 ; Input params:
"RTN","IBCNERPB",79,0)
 ;  IBCNERTN = Routine name for ^TMP($J,...
"RTN","IBCNERPB",80,0)
 ;  IBCNESPC = Array passed by ref of the report params
"RTN","IBCNERPB",81,0)
 ;
"RTN","IBCNERPB",82,0)
 ; Init scratch globals
"RTN","IBCNERPB",83,0)
 K ^TMP($J,IBCNERTN)
"RTN","IBCNERPB",84,0)
 ; Compile
"RTN","IBCNERPB",85,0)
 I IBCNERTN="IBCNERPB" D EN^IBCNERPC(IBCNERTN,.IBCNESPC)
"RTN","IBCNERPB",86,0)
 ; Print
"RTN","IBCNERPB",87,0)
 I '$G(ZTSTOP) D
"RTN","IBCNERPB",88,0)
 . I IBCNERTN="IBCNERPB" D EN3^IBCNERPD(IBCNERTN,.IBCNESPC)
"RTN","IBCNERPB",89,0)
 ; Close device
"RTN","IBCNERPB",90,0)
 D ^%ZISC
"RTN","IBCNERPB",91,0)
 ; Kill scratch globals
"RTN","IBCNERPB",92,0)
 K ^TMP($J,IBCNERTN)
"RTN","IBCNERPB",93,0)
 ; Purge task record
"RTN","IBCNERPB",94,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCNERPB",95,0)
 ;
"RTN","IBCNERPB",96,0)
COMPILX ; COMPILE exit pt
"RTN","IBCNERPB",97,0)
 Q
"RTN","IBCNERPB",98,0)
 ;
"RTN","IBCNERPB",99,0)
STOP() ; Determine if user wants to exit out of the whole option
"RTN","IBCNERPB",100,0)
 ; Init vars
"RTN","IBCNERPB",101,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERPB",102,0)
 ;
"RTN","IBCNERPB",103,0)
 W !
"RTN","IBCNERPB",104,0)
 S DIR(0)="Y"
"RTN","IBCNERPB",105,0)
 S DIR("A")="Do you want to exit out of this option entirely"
"RTN","IBCNERPB",106,0)
 S DIR("B")="YES"
"RTN","IBCNERPB",107,0)
 S DIR("?",1)="  Enter YES to immediately exit out of this option."
"RTN","IBCNERPB",108,0)
 S DIR("?")="  Enter NO to return to the previous question."
"RTN","IBCNERPB",109,0)
 D ^DIR K DIR
"RTN","IBCNERPB",110,0)
 I $D(DIRUT) S (STOP,Y)=1 G STOPX
"RTN","IBCNERPB",111,0)
 I 'Y S STOP=0
"RTN","IBCNERPB",112,0)
 ;
"RTN","IBCNERPB",113,0)
STOPX ; STOP exit pt
"RTN","IBCNERPB",114,0)
 Q Y
"RTN","IBCNERPB",115,0)
 ;
"RTN","IBCNERPB",116,0)
RTYPE ; Prompt to allow users to select main report option
"RTN","IBCNERPB",117,0)
 ; Init vars
"RTN","IBCNERPB",118,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERPB",119,0)
 ;
"RTN","IBCNERPB",120,0)
 S DIR(0)="S^1:Payer List;2:Insurance Company List"
"RTN","IBCNERPB",121,0)
 S DIR("A")="Select a report option"
"RTN","IBCNERPB",122,0)
 S DIR("B")=1
"RTN","IBCNERPB",123,0)
 S DIR("?",1)="  1 - Payer List:   This option lists the payers in the National"
"RTN","IBCNERPB",124,0)
 S DIR("?",2)="                    Payer list, and optionally provides information about"
"RTN","IBCNERPB",125,0)
 S DIR("?",3)="                    the insurance companies that are linked to that payer"
"RTN","IBCNERPB",126,0)
 S DIR("?",4)="  2 - Insurance"
"RTN","IBCNERPB",127,0)
 S DIR("?",5)="      Company List: This option lists insurance companies and"
"RTN","IBCNERPB",128,0)
 S DIR("?")="                    optionally displays linked payer information"
"RTN","IBCNERPB",129,0)
 D ^DIR K DIR
"RTN","IBCNERPB",130,0)
 I $D(DIRUT) S STOP=1 G RTYPEX
"RTN","IBCNERPB",131,0)
 S IBCNESPC("REP")=Y
"RTN","IBCNERPB",132,0)
 ;
"RTN","IBCNERPB",133,0)
RTYPEX ; RTYPE exit pt
"RTN","IBCNERPB",134,0)
 Q
"RTN","IBCNERPB",135,0)
 ;
"RTN","IBCNERPB",136,0)
PTYPE ; Prompt to select Payer Type to include
"RTN","IBCNERPB",137,0)
 ; Init vars
"RTN","IBCNERPB",138,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERPB",139,0)
 ;
"RTN","IBCNERPB",140,0)
 S DIR(0)="S^1:Unlinked Payers;2:Linked Payers;3:ALL Payers"
"RTN","IBCNERPB",141,0)
 S DIR("A")="Select the type of payers to display"
"RTN","IBCNERPB",142,0)
 S DIR("B")="3"
"RTN","IBCNERPB",143,0)
 S DIR("?",1)="  1 - Only payers with no active insurance companies linked"
"RTN","IBCNERPB",144,0)
 S DIR("?",2)="  2 - Only payers with at least one insurance company linked"
"RTN","IBCNERPB",145,0)
 S DIR("?")="  3 - ALL Payers"
"RTN","IBCNERPB",146,0)
 D ^DIR K DIR
"RTN","IBCNERPB",147,0)
 I $D(DIRUT) S STOP=1 G PTYPEX
"RTN","IBCNERPB",148,0)
 S IBCNESPC("PTYPE")=Y
"RTN","IBCNERPB",149,0)
 ;
"RTN","IBCNERPB",150,0)
PTYPEX ; TYPE exit pt
"RTN","IBCNERPB",151,0)
 Q
"RTN","IBCNERPB",152,0)
PAYER ; Select Payer - File #365.12
"RTN","IBCNERPB",153,0)
 ; Init vars
"RTN","IBCNERPB",154,0)
 NEW DIC,DTOUT,DUOUT,X,Y
"RTN","IBCNERPB",155,0)
 ;
"RTN","IBCNERPB",156,0)
 W !!!
"RTN","IBCNERPB",157,0)
 S DIC(0)="ABEQ"
"RTN","IBCNERPB",158,0)
 S DIC("A")=$$FO^IBCNEUT1("Select a Payer (RETURN for ALL Payers): ",40,"L")
"RTN","IBCNERPB",159,0)
 ; Do not allow '~NO PAYER' or non-eIV payers
"RTN","IBCNERPB",160,0)
 S DIC("S")="I ($P(^(0),U,1)'=""~NO PAYER""),$$PYRAPP^IBCNEUT5(""IIV"",$G(Y))'="""""
"RTN","IBCNERPB",161,0)
 S DIC="^IBE(365.12,"
"RTN","IBCNERPB",162,0)
 D ^DIC
"RTN","IBCNERPB",163,0)
 I $D(DUOUT)!$D(DTOUT) S Y="" S STOP=1 G PAYERX
"RTN","IBCNERPB",164,0)
 I Y=-1 S Y=""
"RTN","IBCNERPB",165,0)
 S IBCNESPC("PPYR")=Y
"RTN","IBCNERPB",166,0)
PAYERX ; Prompt for ending Payer value
"RTN","IBCNERPB",167,0)
 Q
"RTN","IBCNERPB",168,0)
PDET ; Prompt to select to display Insurance Company details to include
"RTN","IBCNERPB",169,0)
 ; Init vars
"RTN","IBCNERPB",170,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERPB",171,0)
 ;
"RTN","IBCNERPB",172,0)
 S DIR(0)="S^1:List linked insurance company detail;2:Do not list linked insurance company detail"
"RTN","IBCNERPB",173,0)
 S DIR("A")="Select insurance company detail option"
"RTN","IBCNERPB",174,0)
 S DIR("B")="1"
"RTN","IBCNERPB",175,0)
 S DIR("?",1)="  1 - Include a list of insurance companies linked to the payers"
"RTN","IBCNERPB",176,0)
 S DIR("?")="  2 - Do not list linked insurance companies, total number only"
"RTN","IBCNERPB",177,0)
 D ^DIR K DIR
"RTN","IBCNERPB",178,0)
 I $D(DIRUT) S STOP=1 G PDETEX
"RTN","IBCNERPB",179,0)
 S IBCNESPC("PDET")=Y
"RTN","IBCNERPB",180,0)
 ;
"RTN","IBCNERPB",181,0)
PDETEX ; TYPE exit pt
"RTN","IBCNERPB",182,0)
 Q
"RTN","IBCNERPB",183,0)
 ;
"RTN","IBCNERPB",184,0)
PSORT ; Prompt to allow users to select primary sort
"RTN","IBCNERPB",185,0)
 ; Init vars
"RTN","IBCNERPB",186,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERPB",187,0)
 ;
"RTN","IBCNERPB",188,0)
 S DIR(0)="S^1:Payer Name;2:VA National Payer ID;3:Nationally Enabled Status;4:Locally Enabled Status;5:# of Linked Insurance Companies"
"RTN","IBCNERPB",189,0)
 S DIR("A")="Select the primary sort field"
"RTN","IBCNERPB",190,0)
 S DIR("B")=1
"RTN","IBCNERPB",191,0)
 S DIR("?")="  Select a data field by which this report should be primarily sorted."
"RTN","IBCNERPB",192,0)
 D ^DIR K DIR
"RTN","IBCNERPB",193,0)
 I $D(DIRUT) S STOP=1 G PSORTX
"RTN","IBCNERPB",194,0)
 S IBCNESPC("PSORT")=Y
"RTN","IBCNERPB",195,0)
 ;
"RTN","IBCNERPB",196,0)
PSORTX ; SORT exit pt
"RTN","IBCNERPB",197,0)
 Q
"RTN","IBCNERPB",198,0)
 ;
"RTN","IBCNERPB",199,0)
DEVICE(IBCNERTN,IBCNESPC) ; Device Handler and possible TaskManager calls
"RTN","IBCNERPB",200,0)
 ;
"RTN","IBCNERPB",201,0)
 ; Input params:
"RTN","IBCNERPB",202,0)
 ;  IBCNERTN = Routine name for ^TMP($J,...
"RTN","IBCNERPB",203,0)
 ;  IBCNESPC = Array passed by ref of the report params
"RTN","IBCNERPB",204,0)
 ;  IBOUT    = "R" for Report format or "E" for Excel format
"RTN","IBCNERPB",205,0)
 ;
"RTN","IBCNERPB",206,0)
 ; Init vars
"RTN","IBCNERPB",207,0)
 N ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCNERPB",208,0)
 ;
"RTN","IBCNERPB",209,0)
 S ZTRTN="COMPILE^IBCNERPB("""_IBCNERTN_""",.IBCNESPC)"
"RTN","IBCNERPB",210,0)
 S ZTDESC="IBCNE eIV Payer Link Report"
"RTN","IBCNERPB",211,0)
 S ZTSAVE("IBCNESPC(")=""
"RTN","IBCNERPB",212,0)
 S ZTSAVE("IBCNERTN")=""
"RTN","IBCNERPB",213,0)
 S ZTSAVE("IBOUT")=""
"RTN","IBCNERPB",214,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","IBCNERPB",215,0)
 I POP S STOP=1
"RTN","IBCNERPB",216,0)
 ;
"RTN","IBCNERPB",217,0)
DEVICEX ; DEVICE exit pt
"RTN","IBCNERPB",218,0)
 Q
"RTN","IBCNERPC")
0^57^B55318393
"RTN","IBCNERPC",1,0)
IBCNERPC ;DAOU/RO - eIV PAYER LINK REPORT COMPILE ;AUG-2003
"RTN","IBCNERPC",2,0)
 ;;2.0;INTEGRATED BILLING;**184,252,271,416,528**;21-MAR-94;Build 163
"RTN","IBCNERPC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPC",4,0)
 ;
"RTN","IBCNERPC",5,0)
 ; eIV - Insurance Verification
"RTN","IBCNERPC",6,0)
 ;
"RTN","IBCNERPC",7,0)
 ; Input vars from IBCNERPB:
"RTN","IBCNERPC",8,0)
 ;  IBCNESPC("REP")=1 for Payer List report, 2 for Company List
"RTN","IBCNERPC",9,0)
 ;  IBCNESPC("PTYPE")=Payer type (1-no active ins linked, 2-at least 1 ins linked, 3-All Payers)
"RTN","IBCNERPC",10,0)
 ;  IBCNESPC("PSORT")=Primary Sort for Payer report
"RTN","IBCNERPC",11,0)
 ;  IBCNESPC("PDET")=Ins detail on payer report (1-include list of ins,2-do not list)
"RTN","IBCNERPC",12,0)
 ;
"RTN","IBCNERPC",13,0)
 ;  IBCNESPC("ITYPE")=Ins Company type (1-no payer link, 2-linked to payer, 3-All ins companies)
"RTN","IBCNERPC",14,0)
 ;  IBCNESPC("ISORT")=Primary Sort for Payer Insurance report
"RTN","IBCNERPC",15,0)
 ;  IBCNESPC("IMAT")=Partial matching Ins carriers
"RTN","IBCNERPC",16,0)
 ;  IBOUT ="R" for Report format or "E" for Excel format
"RTN","IBCNERPC",17,0)
 ;
"RTN","IBCNERPC",18,0)
 ; Output vars used by IBCNERPC:
"RTN","IBCNERPC",19,0)
 ;  
"RTN","IBCNERPC",20,0)
 ;   IBCNERTN="IBCNERPB"
"RTN","IBCNERPC",21,0)
 ;   SORT1=depends on sorting option chosen
"RTN","IBCNERPC",22,0)
 ;   SORT2=Payer Name (Report by Payer) or Ins Company Name (if report is Insurance)
"RTN","IBCNERPC",23,0)
 ;  ^TMP($J,IBCNERTN,SORT1,SORT2,CNT) 
"RTN","IBCNERPC",24,0)
 ;   CNT=Seq ct
"RTN","IBCNERPC",25,0)
 ;  ^TMP($J,IBCNERTN,SORT1,SORT2,CNT,1) 
"RTN","IBCNERPC",26,0)
 ;
"RTN","IBCNERPC",27,0)
 ; Must call at EN
"RTN","IBCNERPC",28,0)
 Q
"RTN","IBCNERPC",29,0)
 ;
"RTN","IBCNERPC",30,0)
EN(IBCNERTN,IBCNESPC) ; Entry
"RTN","IBCNERPC",31,0)
 ; Init
"RTN","IBCNERPC",32,0)
 N IBTYP,IBCT,IBCTX,IBI
"RTN","IBCNERPC",33,0)
 ;
"RTN","IBCNERPC",34,0)
 N IBDET,IBSRT,IBPY,IBVAID,IBPROF,IBINST,IBNAACT,IBLOACT,IBINS,IBINST,IBGRP
"RTN","IBCNERPC",35,0)
 N IBINSN,IBAPP,IBPYR,SORT1,SORT2,IBSRT,IBMAT,IBPPYR,IBREP,IBFLAGS,IBTRUST
"RTN","IBCNERPC",36,0)
 ;
"RTN","IBCNERPC",37,0)
 I '$D(ZTQUEUED),$G(IOST)["C-",IBOUT="R" W !!,"Compiling report data ..."
"RTN","IBCNERPC",38,0)
 ;
"RTN","IBCNERPC",39,0)
 ; Temp ct
"RTN","IBCNERPC",40,0)
 S IBCT=0
"RTN","IBCNERPC",41,0)
 ;
"RTN","IBCNERPC",42,0)
 ; Kill scratch globals
"RTN","IBCNERPC",43,0)
 K ^TMP($J,IBCNERTN)
"RTN","IBCNERPC",44,0)
 ;
"RTN","IBCNERPC",45,0)
 ;
"RTN","IBCNERPC",46,0)
 S IBREP=$G(IBCNESPC("REP"))
"RTN","IBCNERPC",47,0)
 S IBDET=$G(IBCNESPC("PDET"))
"RTN","IBCNERPC",48,0)
 S IBTYP=$G(IBCNESPC("PTYPE"))
"RTN","IBCNERPC",49,0)
 S IBSRT=$G(IBCNESPC("PSORT"))
"RTN","IBCNERPC",50,0)
 S IBPPYR=$G(IBCNESPC("PPYR"))
"RTN","IBCNERPC",51,0)
 ;
"RTN","IBCNERPC",52,0)
 ; Ins Report
"RTN","IBCNERPC",53,0)
 I IBREP=2 G INS
"RTN","IBCNERPC",54,0)
 ;
"RTN","IBCNERPC",55,0)
 ; Loop thru the eIV payer File (#365.12)
"RTN","IBCNERPC",56,0)
 S IBPY=0,SORT1=""
"RTN","IBCNERPC",57,0)
 F  S IBPY=$O(^IBE(365.12,IBPY)) Q:'IBPY  D  Q:$G(ZTSTOP)
"RTN","IBCNERPC",58,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCNERPC",59,0)
 . ; Payer name from Payer File (#365.12)
"RTN","IBCNERPC",60,0)
 . S IBPYR=$P($G(^IBE(365.12,IBPY,0)),U) I IBSRT=1 S SORT1=IBPYR
"RTN","IBCNERPC",61,0)
 . S SORT2=IBPYR
"RTN","IBCNERPC",62,0)
 . I IBPYR=""!(IBPYR="~NO PAYER")!($$PYRAPP^IBCNEUT5("IIV",IBPY)="") Q
"RTN","IBCNERPC",63,0)
 . I IBPPYR'="",IBPY'=$P(IBPPYR,U) Q
"RTN","IBCNERPC",64,0)
 . ; get VA national ID
"RTN","IBCNERPC",65,0)
 . S IBVAID=$P($G(^IBE(365.12,IBPY,0)),U,2) I IBSRT=2 S SORT1=IBVAID
"RTN","IBCNERPC",66,0)
 . ; get the EDI numbers (professional and institutional)
"RTN","IBCNERPC",67,0)
 . S IBPROF=$P($G(^IBE(365.12,IBPY,0)),U,5)
"RTN","IBCNERPC",68,0)
 . S IBINST=$P($G(^IBE(365.12,IBPY,0)),U,6)
"RTN","IBCNERPC",69,0)
 . S IBAPP=$$PYRAPP^IBCNEUT5("IIV",IBPY),(IBNAACT,IBLOACT)=0,IBTRUST=""
"RTN","IBCNERPC",70,0)
 . S:IBAPP'="" IBNAACT=$P($G(^IBE(365.12,IBPY,1,IBAPP,0)),U,2)
"RTN","IBCNERPC",71,0)
 . S:IBAPP'="" IBLOACT=$P($G(^IBE(365.12,IBPY,1,IBAPP,0)),U,3)
"RTN","IBCNERPC",72,0)
 . I IBAPP'="" D GETFLAGS^IBCNERP8(IBPY,IBAPP,$G(^IBE(365.12,IBPY,0)),"","",.IBFLAGS) S IBTRUST=$S($P($G(IBFLAGS("FLAGS","T",IBPYR,1)),U,2)="ON":"YES",1:"NO")
"RTN","IBCNERPC",73,0)
 . ; if no sort value, use 0
"RTN","IBCNERPC",74,0)
 . I IBSRT=3 S SORT1=IBNAACT I SORT1="" S SORT1=0
"RTN","IBCNERPC",75,0)
 . I IBSRT=4 S SORT1=IBLOACT I SORT1="" S SORT1=0
"RTN","IBCNERPC",76,0)
 . I SORT1="" S SORT1=" "
"RTN","IBCNERPC",77,0)
 . ; if sorting by count and detail, need to figure count first else sort will not work
"RTN","IBCNERPC",78,0)
 . I IBSRT=5,IBTYP>1,IBDET=1 D  S SORT1=-IBCTX
"RTN","IBCNERPC",79,0)
 . . S IBCTX=0,IBINS="" F  S IBINS=$O(^DIC(36,"AC",IBPY,IBINS)) Q:IBINS=""  D
"RTN","IBCNERPC",80,0)
 . . . S IBINSN=$G(^DIC(36,IBINS,0)),IBINSN=$P(IBINSN,U) Q:IBINSN=""  S IBCTX=IBCTX+1
"RTN","IBCNERPC",81,0)
 . ; search for insurance carriers for this payer
"RTN","IBCNERPC",82,0)
 . S IBCT=0,IBINS="" F  S IBINS=$O(^DIC(36,"AC",IBPY,IBINS)) Q:IBINS=""  D
"RTN","IBCNERPC",83,0)
 . . S IBINSN=$G(^DIC(36,IBINS,0)),IBINSN=$P(IBINSN,U) Q:IBINSN=""
"RTN","IBCNERPC",84,0)
 . . S IBCT=IBCT+1 I IBTYP=1 Q
"RTN","IBCNERPC",85,0)
 . . ; save off address and EDI#'s for Insurance carrier
"RTN","IBCNERPC",86,0)
 . . I IBDET=1 S ^TMP($J,IBCNERTN,SORT1,SORT2,IBPY,IBINSN,IBINS)=$P($G(^DIC(36,IBINS,.11)),U,1,6)_U_$P($G(^DIC(36,IBINS,3)),U,2)_U_$P($G(^DIC(36,IBINS,3)),U,4)
"RTN","IBCNERPC",87,0)
 . I IBTYP=1,IBCT>0 Q
"RTN","IBCNERPC",88,0)
 . I IBTYP=2,IBCT=0 Q
"RTN","IBCNERPC",89,0)
 . ; use reverse sort for count
"RTN","IBCNERPC",90,0)
 . I IBSRT=5 S SORT1=-IBCT
"RTN","IBCNERPC",91,0)
 . S ^TMP($J,IBCNERTN,SORT1,SORT2,IBPY)=IBVAID_U_IBPROF_U_IBINST_U_IBNAACT_U_IBLOACT_U_IBCT_U_IBTRUST
"RTN","IBCNERPC",92,0)
 G EXIT
"RTN","IBCNERPC",93,0)
 ;
"RTN","IBCNERPC",94,0)
INS ;
"RTN","IBCNERPC",95,0)
 S IBTYP=$G(IBCNESPC("ITYPE"))
"RTN","IBCNERPC",96,0)
 S IBSRT=$G(IBCNESPC("ISORT"))
"RTN","IBCNERPC",97,0)
 S IBMAT=$G(IBCNESPC("IMAT"))
"RTN","IBCNERPC",98,0)
 ; Loop thru the Insurance company file
"RTN","IBCNERPC",99,0)
 S IBINS=0
"RTN","IBCNERPC",100,0)
 F  S IBINS=$O(^DIC(36,IBINS)) Q:'IBINS  D  Q:$G(ZTSTOP)
"RTN","IBCNERPC",101,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCNERPC",102,0)
 . S (SORT1,IBPYR,IBNAACT,IBLOACT,IBPROF,IBINST,IBVAID,IBTRUST)=""
"RTN","IBCNERPC",103,0)
 . S IBINSN=$P($G(^DIC(36,IBINS,0)),U) I IBSRT=1 S SORT1=IBINSN
"RTN","IBCNERPC",104,0)
 . S SORT2=IBINSN
"RTN","IBCNERPC",105,0)
 . I IBINSN="" Q
"RTN","IBCNERPC",106,0)
 . I IBMAT'="",'$F($$UP^XLFSTR(IBINSN),$$UP^XLFSTR(IBMAT)) Q
"RTN","IBCNERPC",107,0)
 . ; get active group count
"RTN","IBCNERPC",108,0)
 . S (IBI,IBGRP)=0 F  S IBI=$O(^IBA(355.3,"B",IBINS,IBI)) Q:'IBI  I '$$GET1^DIQ(355.3,IBI,.11,"I") S IBGRP=IBGRP+1
"RTN","IBCNERPC",109,0)
 . ; get payer
"RTN","IBCNERPC",110,0)
 . S IBPY=$P($G(^DIC(36,IBINS,3)),U,10)
"RTN","IBCNERPC",111,0)
 . I IBTYP=1,IBPY'="" Q
"RTN","IBCNERPC",112,0)
 . I IBTYP=2,IBPY="" Q
"RTN","IBCNERPC",113,0)
 . I IBPY'="" D
"RTN","IBCNERPC",114,0)
 . . ; Payer name from Payer File (#365.12)
"RTN","IBCNERPC",115,0)
 . . S IBPYR=$P($G(^IBE(365.12,IBPY,0)),U) I IBSRT=2 S SORT1=IBPYR
"RTN","IBCNERPC",116,0)
 . . ; get VA national ID
"RTN","IBCNERPC",117,0)
 . . S IBVAID=$P($G(^IBE(365.12,IBPY,0)),U,2) I IBSRT=3 S SORT1=IBVAID
"RTN","IBCNERPC",118,0)
 . . S IBPROF=$P($G(^IBE(365.12,IBPY,0)),U,5)
"RTN","IBCNERPC",119,0)
 . . S IBINST=$P($G(^IBE(365.12,IBPY,0)),U,6)
"RTN","IBCNERPC",120,0)
 . . S IBAPP=$$PYRAPP^IBCNEUT5("IIV",IBPY),(IBNAACT,IBLOACT)=0
"RTN","IBCNERPC",121,0)
 . . S:IBAPP'="" IBNAACT=$P($G(^IBE(365.12,IBPY,1,IBAPP,0)),U,2)
"RTN","IBCNERPC",122,0)
 . . S:IBAPP'="" IBLOACT=$P($G(^IBE(365.12,IBPY,1,IBAPP,0)),U,3)
"RTN","IBCNERPC",123,0)
 . . I IBAPP'="" D GETFLAGS^IBCNERP8(IBPY,IBAPP,^IBE(365.12,IBPY,0),"","",.IBFLAGS) S IBTRUST=$S($P($G(IBFLAGS("FLAGS","T",IBPYR,1)),U,2)="ON":"YES",1:"NO")
"RTN","IBCNERPC",124,0)
 . . I IBSRT=4 S SORT1=IBNAACT I SORT1="" S SORT1=0
"RTN","IBCNERPC",125,0)
 . . I IBSRT=5 S SORT1=IBLOACT I SORT1="" S SORT1=0
"RTN","IBCNERPC",126,0)
 . I SORT1="" S SORT1=" "
"RTN","IBCNERPC",127,0)
 . S ^TMP($J,IBCNERTN,SORT1,SORT2,IBINS)=IBPYR_U_IBVAID_U_IBPROF_U_IBINST_U_IBNAACT_U_IBLOACT_U_IBCT_U_IBGRP_U_IBTRUST_U_$G(^DIC(36,IBINS,.11))_U_"~"_$G(^DIC(36,IBINS,3))
"RTN","IBCNERPC",128,0)
 ;
"RTN","IBCNERPC",129,0)
EXIT ;
"RTN","IBCNERPC",130,0)
 Q
"RTN","IBCNERPC",131,0)
 ; Lines moved from IBCNERPB
"RTN","IBCNERPC",132,0)
ITYPE ; Prompt to select Insurance Company type to include
"RTN","IBCNERPC",133,0)
 ; Init vars
"RTN","IBCNERPC",134,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERPC",135,0)
 ;
"RTN","IBCNERPC",136,0)
 S DIR(0)="S^1:Unlinked insurance companies;2:Linked insurance companies;3:All insurance companies"
"RTN","IBCNERPC",137,0)
 S DIR("A")="Select type of insurance companies to display"
"RTN","IBCNERPC",138,0)
 S DIR("B")="3"
"RTN","IBCNERPC",139,0)
 S DIR("?",1)="  1 - Only insurance companies that are not currently linked to a payer"
"RTN","IBCNERPC",140,0)
 S DIR("?",2)="  2 - Only insurance companies that are currently linked to a payer"
"RTN","IBCNERPC",141,0)
 S DIR("?")="  3 - ALL insurance companies"
"RTN","IBCNERPC",142,0)
 D ^DIR K DIR
"RTN","IBCNERPC",143,0)
 I $D(DIRUT) S STOP=1 G ITYPEX
"RTN","IBCNERPC",144,0)
 S IBCNESPC("ITYPE")=Y
"RTN","IBCNERPC",145,0)
 ;
"RTN","IBCNERPC",146,0)
ITYPEX ; TYPE exit pt
"RTN","IBCNERPC",147,0)
 Q
"RTN","IBCNERPC",148,0)
ISORT ; Prompt to allow users to select primary sort
"RTN","IBCNERPC",149,0)
 ; Init vars
"RTN","IBCNERPC",150,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERPC",151,0)
 ;
"RTN","IBCNERPC",152,0)
 S DIR(0)="S^1:Insurance Company Name;2:Payer Name;3:VA National Payer ID;4:Nationally Enabled Status;5:Locally Enabled Status"
"RTN","IBCNERPC",153,0)
 S DIR("A")="Select the primary sort field"
"RTN","IBCNERPC",154,0)
 S DIR("B")=1
"RTN","IBCNERPC",155,0)
 S DIR("?")="  Select the data field by which this report should be primarily sorted."
"RTN","IBCNERPC",156,0)
 D ^DIR K DIR
"RTN","IBCNERPC",157,0)
 I $D(DIRUT) S STOP=1 G ISORTX
"RTN","IBCNERPC",158,0)
 S IBCNESPC("ISORT")=Y
"RTN","IBCNERPC",159,0)
 ;
"RTN","IBCNERPC",160,0)
ISORTX ; SORT exit pt
"RTN","IBCNERPC",161,0)
 Q
"RTN","IBCNERPC",162,0)
IMAT ; Prompt to allow users to select partial Ins carrier to include
"RTN","IBCNERPC",163,0)
 N DIR,X,Y,DIRUT
"RTN","IBCNERPC",164,0)
 ;
"RTN","IBCNERPC",165,0)
 W !
"RTN","IBCNERPC",166,0)
 S DIR(0)="FO"
"RTN","IBCNERPC",167,0)
 S DIR("A")="Enter an insurance company search keyword (RETURN for ALL)"
"RTN","IBCNERPC",168,0)
 S DIR("B")=""
"RTN","IBCNERPC",169,0)
 S DIR("?",1)="     Enter a value to match insurance company names with."
"RTN","IBCNERPC",170,0)
 S DIR("?",2)="     Simply hit RETURN to select ALL or enter a keyword"
"RTN","IBCNERPC",171,0)
 S DIR("?",3)="     (ex. 'CIGNA' would return CIGNA, CIGNA HICN, NATIONAL CIGNA,"
"RTN","IBCNERPC",172,0)
 S DIR("?")="     REGION 1 CIGNA and any others with the term 'CIGNA' in it)"
"RTN","IBCNERPC",173,0)
 D ^DIR K DIR
"RTN","IBCNERPC",174,0)
 I $D(DUOUT)!$D(DTOUT) S Y="" S STOP=1 G IMATX
"RTN","IBCNERPC",175,0)
 S IBCNESPC("IMAT")=Y
"RTN","IBCNERPC",176,0)
 ;                                                                       
"RTN","IBCNERPC",177,0)
IMATX Q
"RTN","IBCNERPC",178,0)
 ;
"RTN","IBCNERPC",179,0)
OUT() ; Prompt to allow users to select output format
"RTN","IBCNERPC",180,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPC",181,0)
 W !
"RTN","IBCNERPC",182,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNERPC",183,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNERPC",184,0)
 S DIR("B")="Report"
"RTN","IBCNERPC",185,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q ""
"RTN","IBCNERPC",186,0)
 Q Y
"RTN","IBCNERPD")
0^58^B108873361
"RTN","IBCNERPD",1,0)
IBCNERPD ;DAOU/RO - eIV PAYER LINK REPORT PRINT;AUG-2003
"RTN","IBCNERPD",2,0)
 ;;2.0;INTEGRATED BILLING;**184,252,416,521,528**;21-MAR-94;Build 163
"RTN","IBCNERPD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPD",4,0)
 ;
"RTN","IBCNERPD",5,0)
 ; eIV - Insurance Verification
"RTN","IBCNERPD",6,0)
 ;
"RTN","IBCNERPD",7,0)
 ; Called by IBCNERPB
"RTN","IBCNERPD",8,0)
 ; Input from IBCNERPB/C:
"RTN","IBCNERPD",9,0)
 ;  
"RTN","IBCNERPD",10,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,CT,0)
"RTN","IBCNERPD",11,0)
 ;    IBCNERTN="IBCNERPB", 
"RTN","IBCNERPD",12,0)
 ;    CT=Seq ct
"RTN","IBCNERPD",13,0)
 ;  ^TMP($J,IBCNERTN,S1,S2,CT,1) 
"RTN","IBCNERPD",14,0)
 ;  IBOUT
"RTN","IBCNERPD",15,0)
 ;
"RTN","IBCNERPD",16,0)
EN3(IBCNERTN,IBCNESPC) ; Entry pt.  
"RTN","IBCNERPD",17,0)
 N IBTYP,IBSRT,CRT,MAXCNT,IBPXT
"RTN","IBCNERPD",18,0)
 N IBPGC,X,Y,DIR,DTOUT,DUOUT,LIN,IBTRC,IBMAT,IBREP,IBDET,IBPPYR,ZZ
"RTN","IBCNERPD",19,0)
 S IBREP=$G(IBCNESPC("REP"))
"RTN","IBCNERPD",20,0)
 S IBDET=$G(IBCNESPC("PDET"))
"RTN","IBCNERPD",21,0)
 S IBTYP=$G(IBCNESPC("PTYPE"))
"RTN","IBCNERPD",22,0)
 S IBSRT=$G(IBCNESPC("PSORT"))
"RTN","IBCNERPD",23,0)
 S IBPPYR=$G(IBCNESPC("PPYR"))
"RTN","IBCNERPD",24,0)
 ; Ins Report
"RTN","IBCNERPD",25,0)
 I IBREP=2 D
"RTN","IBCNERPD",26,0)
 . S IBTYP=$G(IBCNESPC("ITYPE"))
"RTN","IBCNERPD",27,0)
 . S IBSRT=$G(IBCNESPC("ISORT"))
"RTN","IBCNERPD",28,0)
 . S IBMAT=$G(IBCNESPC("IMAT"))
"RTN","IBCNERPD",29,0)
 S (IBPXT,IBPGC)=0
"RTN","IBCNERPD",30,0)
 ; Determine IO params
"RTN","IBCNERPD",31,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCNERPD",32,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCNERPD",33,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNERPD",34,0)
 D PRINT(IBCNERTN,IBREP,IBDET,IBTYP,IBSRT,.IBPGC,.IBPXT,MAXCNT,CRT,IBOUT)
"RTN","IBCNERPD",35,0)
 I $G(ZTSTOP)!IBPXT G EXIT3
"RTN","IBCNERPD",36,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D
"RTN","IBCNERPD",37,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNERPD",38,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERPD",39,0)
EXIT3 ; Exit pt
"RTN","IBCNERPD",40,0)
 Q
"RTN","IBCNERPD",41,0)
 ;
"RTN","IBCNERPD",42,0)
PRINT(RTN,REP,DET,TYP,SRT,PGC,PXT,MAX,CRT,IBOUT) ; Print data
"RTN","IBCNERPD",43,0)
 ; Input: RTN="IBCENRPB", PGC=page ct,
"RTN","IBCNERPD",44,0)
 ;   PXT=exit flg, MAX=max line ct/pg,
"RTN","IBCNERPD",45,0)
 ;  CRT=1/0, IBOUT="R"/"E"
"RTN","IBCNERPD",46,0)
 N EORMSG,NONEMSG,SORT1,SORT2,CNT,DASH
"RTN","IBCNERPD",47,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCNERPD",48,0)
 S NONEMSG="* * * N O  D A T A  F O U N D * * *"
"RTN","IBCNERPD",49,0)
 S (SORT1,SORT2)="",$P(DASH,"-",133)=""
"RTN","IBCNERPD",50,0)
 ;
"RTN","IBCNERPD",51,0)
 ;Excel header
"RTN","IBCNERPD",52,0)
 I IBOUT="E" D PHDL
"RTN","IBCNERPD",53,0)
 ;
"RTN","IBCNERPD",54,0)
 I '$D(^TMP($J,RTN)) D HEADER:(IBOUT="R") W !,?(80-$L(NONEMSG)\2),NONEMSG,!!
"RTN","IBCNERPD",55,0)
 F  S SORT1=$O(^TMP($J,RTN,SORT1)) Q:SORT1=""  D  Q:PXT!$G(ZTSTOP)
"RTN","IBCNERPD",56,0)
 . S SORT2="" F  S SORT2=$O(^TMP($J,RTN,SORT1,SORT2)) Q:SORT2=""  D  Q:PXT!$G(ZTSTOP)
"RTN","IBCNERPD",57,0)
 . . S CNT="" F  S CNT=$O(^TMP($J,RTN,SORT1,SORT2,CNT)) Q:CNT=""  D  Q:PXT!$G(ZTSTOP)
"RTN","IBCNERPD",58,0)
 . . . K DISPDATA  ; Init disp
"RTN","IBCNERPD",59,0)
 . . . D DATA(.DISPDATA),LINE(.DISPDATA)  ; build/display data
"RTN","IBCNERPD",60,0)
 ;
"RTN","IBCNERPD",61,0)
 I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERPD",62,0)
 I IBOUT="R" D
"RTN","IBCNERPD",63,0)
 . I $Y+1>MAX!('PGC) D HEADER I $G(ZTSTOP)!PXT G PRINTX
"RTN","IBCNERPD",64,0)
 W !,?(80-$L(EORMSG)\2),EORMSG
"RTN","IBCNERPD",65,0)
PRINTX ;
"RTN","IBCNERPD",66,0)
 Q
"RTN","IBCNERPD",67,0)
 ;
"RTN","IBCNERPD",68,0)
HEADER ; Print hdr info
"RTN","IBCNERPD",69,0)
 N X,Y,DIR,DTOUT,DUOUT,OFFSET,HDR,LIN,HDR
"RTN","IBCNERPD",70,0)
 I CRT,PGC>0,'$D(ZTQUEUED) D  I PXT G HEADERX
"RTN","IBCNERPD",71,0)
 . I MAX<51 F LIN=1:1:(MAX-$Y) W !
"RTN","IBCNERPD",72,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERPD",73,0)
 . I $D(DTOUT)!($D(DUOUT)) S PXT=1 Q
"RTN","IBCNERPD",74,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() S ZTSTOP=1 G HEADERX
"RTN","IBCNERPD",75,0)
 S PGC=PGC+1
"RTN","IBCNERPD",76,0)
 W @IOF,!,?1,"eIV Payer Link Report"
"RTN","IBCNERPD",77,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,1)_"  Page: "_PGC,OFFSET=131-$L(HDR)
"RTN","IBCNERPD",78,0)
 W ?OFFSET,HDR
"RTN","IBCNERPD",79,0)
 W !,?1,"Report Option: "_$S(REP=1:"Payer List",1:"Insurance Company List")
"RTN","IBCNERPD",80,0)
 I REP=1 D
"RTN","IBCNERPD",81,0)
 . S HDR=$S(TYP=1:"Unlinked Payers Only",TYP=2:"Linked Payers Only",1:"All Payers")
"RTN","IBCNERPD",82,0)
 . I TYP=3 S HDR=HDR_", "_$S(DET=1:"With Ins. Co. Detail",1:"Without Ins. Co. Detail")
"RTN","IBCNERPD",83,0)
 I REP=2 D
"RTN","IBCNERPD",84,0)
 . S HDR=$S(TYP=1:"Unlinked Insurance Companies Only",TYP=2:"Linked Insurance Companies Only",1:"All Insurance Companies")
"RTN","IBCNERPD",85,0)
 S OFFSET=79-$L(HDR)
"RTN","IBCNERPD",86,0)
 W ?OFFSET,HDR
"RTN","IBCNERPD",87,0)
 ; IB*2.0*521 add validated HPID to report
"RTN","IBCNERPD",88,0)
 I REP=2 W !,"'*' indicates the Insurance Company HPID/OEID failed validation checks"
"RTN","IBCNERPD",89,0)
 I REP=1,DET=1 W !,"'*' indicates the Linked Insurance Company HPID/OEID failed validation checks"
"RTN","IBCNERPD",90,0)
 W !
"RTN","IBCNERPD",91,0)
 I REP=1 D
"RTN","IBCNERPD",92,0)
 . I IBPPYR'="" W ?1,"For Single Payer: ",$P(IBPPYR,"^",2)
"RTN","IBCNERPD",93,0)
 . ; IB*2.0*528 add Trusted flag to report
"RTN","IBCNERPD",94,0)
 . ;W !?39,"National",?54,"# Linked",?64,"Nationally",?77,"Locally",?87,"Prof.",?104,"Inst." W:DET=1 ?121,"HPID/"
"RTN","IBCNERPD",95,0)
 . ;W !,"Payer Name:",?39,"Payer ID",?54,"Ins. Co.",?65,"Active?",?77,"Active?",?87,"EDI#",?104,"EDI#" W:DET=1 ?121,"OEID"
"RTN","IBCNERPD",96,0)
 . W !?31,"National",?46,"# Linked",?56,"Nationally",?69,"Locally",?78,"FSC",?87,"Prof.",?104,"Inst." W:DET=1 ?121,"HPID/"
"RTN","IBCNERPD",97,0)
 . W !,"Payer Name:",?31,"Payer ID",?46,"Ins. Co.",?57,"Active?",?69,"Active?",?78,"Trusted?",?87,"EDI#",?104,"EDI#" W:DET=1 ?121,"OEID"
"RTN","IBCNERPD",98,0)
 I REP=2 D
"RTN","IBCNERPD",99,0)
 . I IBMAT'="" W ?1,"Only Insurance Companies that match: ",IBMAT
"RTN","IBCNERPD",100,0)
 . ; IB*2.0*528 add Trusted flag and Number of Active Groups to report
"RTN","IBCNERPD",101,0)
 . ;W !?56,"Nat.",?71,"Loc.",?83,"Prof.",?104,"Inst.",?121,"HPID/"
"RTN","IBCNERPD",102,0)
 . ;W !,"Insurance Company:",?56,"Act?",?71,"Act?",?83,"EDI#",?104,"EDI#",?121,"OEID"
"RTN","IBCNERPD",103,0)
 . W !?32,"# Active",?56,"Nat.",?66,"Loc.",?73,"FSC",?83,"Prof.",?104,"Inst.",?121,"HPID/"
"RTN","IBCNERPD",104,0)
 . W !,"Insurance Company:",?33,"Groups",?56,"Act?",?66,"Act?",?73,"Trusted?",?83,"EDI#",?104,"EDI#",?121,"OEID"
"RTN","IBCNERPD",105,0)
 . I TYP'=1 W !,"   Payer:",?44,"VA ID"
"RTN","IBCNERPD",106,0)
 W !,DASH
"RTN","IBCNERPD",107,0)
HEADERX ;
"RTN","IBCNERPD",108,0)
 Q
"RTN","IBCNERPD",109,0)
 ;
"RTN","IBCNERPD",110,0)
LINE(DISPDATA) ;  Print data
"RTN","IBCNERPD",111,0)
 N LNCT,LNTOT,NWPG
"RTN","IBCNERPD",112,0)
 S LNTOT=+$O(DISPDATA(""),-1)
"RTN","IBCNERPD",113,0)
 S NWPG=0
"RTN","IBCNERPD",114,0)
 F LNCT=1:1:LNTOT D  Q:$G(ZTSTOP)!PXT
"RTN","IBCNERPD",115,0)
 . I IBOUT="R" D
"RTN","IBCNERPD",116,0)
 . . I $Y+1>MAX!('PGC) D HEADER S NWPG=1 I $G(ZTSTOP)!PXT Q
"RTN","IBCNERPD",117,0)
 . W ! W:IBOUT="R" ?1 W DISPDATA(LNCT) Q
"RTN","IBCNERPD",118,0)
 . I 'NWPG!(NWPG&(DISPDATA(LNCT)'="")) W !,?1,DISPDATA(LNCT)
"RTN","IBCNERPD",119,0)
 . I NWPG S NWPG=0
"RTN","IBCNERPD",120,0)
 . Q
"RTN","IBCNERPD",121,0)
LINEX Q
"RTN","IBCNERPD",122,0)
 ;
"RTN","IBCNERPD",123,0)
DATA(DISPDATA) ;  Build disp lines
"RTN","IBCNERPD",124,0)
 N LCT,CT,CT2,RPTDATA,WW,XX,YY,ZZ,IBHPD
"RTN","IBCNERPD",125,0)
 ; Merge into local array
"RTN","IBCNERPD",126,0)
 M RPTDATA=^TMP($J,RTN,SORT1,SORT2,CNT)
"RTN","IBCNERPD",127,0)
 ; Build
"RTN","IBCNERPD",128,0)
 ;
"RTN","IBCNERPD",129,0)
 ; PAYER REPORT
"RTN","IBCNERPD",130,0)
 I REP=1 D
"RTN","IBCNERPD",131,0)
 . ; Excel format
"RTN","IBCNERPD",132,0)
 . I IBOUT="E" D  Q
"RTN","IBCNERPD",133,0)
 . . S LCT=0,DISPDATA(1)=SORT2_U_$P(RPTDATA,U)_U_$P(RPTDATA,U,6)_U_$S($P(RPTDATA,U,4)=1:"YES",1:"NO")_U_$S($P(RPTDATA,U,4)=1:"YES",1:"NO")_U_$P(RPTDATA,U,7)_U_$P(RPTDATA,U,2)_U_$P(RPTDATA,U,3)
"RTN","IBCNERPD",134,0)
 . . I DET=1 S WW=DISPDATA(1) D DET
"RTN","IBCNERPD",135,0)
 . ;
"RTN","IBCNERPD",136,0)
 . ; 1st line is payer
"RTN","IBCNERPD",137,0)
 . ; IB*2.0*528 add Trusted flag to report
"RTN","IBCNERPD",138,0)
 . ;S LCT=1,DISPDATA(1)=$$FO^IBCNEUT1(SORT2,35,"L")_"   "_$$FO^IBCNEUT1($P(RPTDATA,U,1),10,"L")_"     "_$$FO^IBCNEUT1($P(RPTDATA,U,6),5,"R")_"        "_$$FO^IBCNEUT1($S($P(RPTDATA,U,4)=1:"YES",1:"NO"),12,"L")
"RTN","IBCNERPD",139,0)
 . ;S DISPDATA(1)=DISPDATA(1)_$$FO^IBCNEUT1($S($P(RPTDATA,U,5)=1:"YES",1:"NO"),8,"L")_$$FO^IBCNEUT1($P(RPTDATA,U,2),16,"L")_" "_$$FO^IBCNEUT1($P(RPTDATA,U,3),16,"L")
"RTN","IBCNERPD",140,0)
 . S LCT=1,DISPDATA(1)=$$FO^IBCNEUT1(SORT2,27,"L")_"   "_$$FO^IBCNEUT1($P(RPTDATA,U,1),10,"L")_"     "_$$FO^IBCNEUT1($P(RPTDATA,U,6),5,"R")_"        "_$$FO^IBCNEUT1($S($P(RPTDATA,U,4)=1:"YES",1:"NO"),12,"L")
"RTN","IBCNERPD",141,0)
 . S DISPDATA(1)=DISPDATA(1)_$$FO^IBCNEUT1($S($P(RPTDATA,U,5)=1:"YES",1:"NO"),9,"L")_$$FO^IBCNEUT1($P(RPTDATA,U,7),7,"L")_$$FO^IBCNEUT1($P(RPTDATA,U,2),16,"L")_" "_$$FO^IBCNEUT1($P(RPTDATA,U,3),16,"L")
"RTN","IBCNERPD",142,0)
 . ; See if detail is required
"RTN","IBCNERPD",143,0)
 . I DET=1 D
"RTN","IBCNERPD",144,0)
 . . I $O(RPTDATA(""))'="" S LCT=LCT+1,DISPDATA(LCT)="   Linked Insurance Companies:"
"RTN","IBCNERPD",145,0)
 . . S (XX,YY,ZZ)="" F  S XX=$O(RPTDATA(XX)) Q:XX=""  F  S YY=$O(RPTDATA(XX,YY)) Q:YY=""  D
"RTN","IBCNERPD",146,0)
 . . . S ZZ=RPTDATA(XX,YY)
"RTN","IBCNERPD",147,0)
 . . . S LCT=LCT+1,DISPDATA(LCT)="   "_$$FO^IBCNEUT1(XX,35,"L")_"  "_$$FO^IBCNEUT1($P(ZZ,U,1),20,"L")_" "_$E($P(ZZ,U,4),1,15)
"RTN","IBCNERPD",148,0)
 . . . ; don't display ','s if no address/state on file
"RTN","IBCNERPD",149,0)
 . . . I $P(ZZ,U,5)'="" S DISPDATA(LCT)=DISPDATA(LCT)_", "_$P($G(^DIC(5,$P(ZZ,U,5)+0,0)),U,2)
"RTN","IBCNERPD",150,0)
 . . . ; IB*2.0*521 add validated HPID to report
"RTN","IBCNERPD",151,0)
 . . . S IBHPD=$$HPD^IBCNHUT1(YY,1)
"RTN","IBCNERPD",152,0)
 . . . ;S DISPDATA(LCT)=DISPDATA(LCT)_$$FO^IBCNEUT1(" ",93-$L(DISPDATA(LCT)),"L")
"RTN","IBCNERPD",153,0)
 . . . S DISPDATA(LCT)=DISPDATA(LCT)_$$FO^IBCNEUT1(" ",86-$L(DISPDATA(LCT)),"L")
"RTN","IBCNERPD",154,0)
 . . . ; display EDI#'s
"RTN","IBCNERPD",155,0)
 . . . ;S DISPDATA(LCT)=DISPDATA(LCT)_$$FO^IBCNEUT1($P(ZZ,U,7),16,"L")_"     "_$$FO^IBCNEUT1($P(ZZ,U,8),16,"L")
"RTN","IBCNERPD",156,0)
 . . . S DISPDATA(LCT)=DISPDATA(LCT)_$$FO^IBCNEUT1($P(ZZ,U,7),16,"L")_" "_$$FO^IBCNEUT1($P(ZZ,U,8),16,"L")_" "_IBHPD
"RTN","IBCNERPD",157,0)
 ;
"RTN","IBCNERPD",158,0)
 ; Insurance Company Report
"RTN","IBCNERPD",159,0)
 I REP=2 D
"RTN","IBCNERPD",160,0)
 . ; Excel format
"RTN","IBCNERPD",161,0)
 . I IBOUT="E" D  Q
"RTN","IBCNERPD",162,0)
 . . ;S LCT=1,DISPDATA(1)=SORT2_U_$P(RPTDATA,U,1)_U_$P(RPTDATA,U,6)_U_$S($P(RPTDATA,U,4)=1:"YES",1:"NO")_U_$S($P(RPTDATA,U,4)=1:"YES",1:"NO")_U_$P(RPTDATA,U,7)_U_$P(RPTDATA,U,2)_U_$P(RPTDATA,U,3)
"RTN","IBCNERPD",163,0)
 . . S LCT=1,DISPDATA(1)=SORT2_U_$P(RPTDATA,U,10)_U_$P(RPTDATA,U,13)
"RTN","IBCNERPD",164,0)
 . . I $P(RPTDATA,U,14)'="" S DISPDATA(1)=DISPDATA(1)_", "_$P($G(^DIC(5,$P(RPTDATA,U,14)+0,0)),U,2)_" "_$P(RPTDATA,U,15)
"RTN","IBCNERPD",165,0)
 . . S IBHPD=$$HPD^IBCNHUT1(CNT,1),ZZ=$P(RPTDATA,"~",2)
"RTN","IBCNERPD",166,0)
 . . S DISPDATA(1)=DISPDATA(1)_U_$P(RPTDATA,U,8)_U_$P(ZZ,U,2)_U_$P(ZZ,U,4)_U_IBHPD_U
"RTN","IBCNERPD",167,0)
 . . I $P(RPTDATA,U)="" S:TYP'=1 DISPDATA(1)=DISPDATA(1)_"** NOT CURRENTLY LINKED **" Q
"RTN","IBCNERPD",168,0)
 . . S DISPDATA(1)=DISPDATA(1)_$P(RPTDATA,U,1,2)_U_$S($P(RPTDATA,U,5)=1:"YES",1:"NO")_U_$S($P(RPTDATA,U,6)=1:"YES",1:"NO")_U_$P(RPTDATA,U,9)_U_$P(RPTDATA,U,3,4)
"RTN","IBCNERPD",169,0)
 . ;
"RTN","IBCNERPD",170,0)
 . ; Ins carrier
"RTN","IBCNERPD",171,0)
 . ; IB*2.0*528 add number of active groups to report
"RTN","IBCNERPD",172,0)
 . S DISPDATA(1)=$$FO^IBCNEUT1(SORT2,30,"L")_"  "_$$FO^IBCNEUT1($P(RPTDATA,U,8),5,"R")_$$FO^IBCNEUT1(" ",45,"L")
"RTN","IBCNERPD",173,0)
 . ; Ins address
"RTN","IBCNERPD",174,0)
 . S IBHPD=$$HPD^IBCNHUT1(CNT,1)
"RTN","IBCNERPD",175,0)
 . S ZZ=$P(RPTDATA,"~",2),DISPDATA(1)=DISPDATA(1)_$$FO^IBCNEUT1($P(ZZ,U,2),16,"L")_"     "_$$FO^IBCNEUT1($P(ZZ,U,4),16,"L")_" "_IBHPD
"RTN","IBCNERPD",176,0)
 . S DISPDATA(2)="        "_$P(RPTDATA,U,10)_"  "_$P(RPTDATA,U,13)
"RTN","IBCNERPD",177,0)
 . ; Add state/zip if defined
"RTN","IBCNERPD",178,0)
 . I $P(RPTDATA,U,14)'="" S DISPDATA(2)=DISPDATA(2)_", "_$P($G(^DIC(5,$P(RPTDATA,U,14)+0,0)),U,2)_" "_$$FO^IBCNEUT1($P(RPTDATA,U,15),5,"L")
"RTN","IBCNERPD",179,0)
 . ; if no payer is linked AND displaying payers
"RTN","IBCNERPD",180,0)
 . I $P(RPTDATA,U)="",TYP'=1 S DISPDATA(3)="   ** NOT CURRENTLY LINKED **",LCT=4,DISPDATA(4)="  " Q
"RTN","IBCNERPD",181,0)
 . ; if no payer and not displaying then quit
"RTN","IBCNERPD",182,0)
 . I $P(RPTDATA,U)="" S LCT=3,DISPDATA(3)="  " Q
"RTN","IBCNERPD",183,0)
 . ; Display Payer Info Line
"RTN","IBCNERPD",184,0)
 . S DISPDATA(3)="  "_$$FO^IBCNEUT1($P(RPTDATA,U,1),35,"L")_"      "_$$FO^IBCNEUT1($P(RPTDATA,U,2),12,"L")_$$FO^IBCNEUT1($S($P(RPTDATA,U,5)=1:"YES",1:"NO"),10,"L")
"RTN","IBCNERPD",185,0)
 . ; IB*2.0*528 add Trusted flag to report
"RTN","IBCNERPD",186,0)
 . ;S DISPDATA(3)=DISPDATA(3)_$$FO^IBCNEUT1($S($P(RPTDATA,U,6)=1:"YES",1:"NO"),12,"L")_$$FO^IBCNEUT1($P(RPTDATA,U,4),16,"L")_"     "_$$FO^IBCNEUT1($P(RPTDATA,U,4),16,"L")
"RTN","IBCNERPD",187,0)
 . S DISPDATA(3)=DISPDATA(3)_$$FO^IBCNEUT1($S($P(RPTDATA,U,6)=1:"YES",1:"NO"),7,"L")_$$FO^IBCNEUT1($P(RPTDATA,U,9),10,"L")_$$FO^IBCNEUT1($P(RPTDATA,U,3),16,"L")_"     "_$$FO^IBCNEUT1($P(RPTDATA,U,4),16,"L")
"RTN","IBCNERPD",188,0)
 . S LCT=4,DISPDATA(4)=" "
"RTN","IBCNERPD",189,0)
 S LCT=LCT+1
"RTN","IBCNERPD",190,0)
 Q
"RTN","IBCNERPD",191,0)
 ;
"RTN","IBCNERPD",192,0)
DET ; - Print insurance company detail in Excel Payer report
"RTN","IBCNERPD",193,0)
 S (XX,YY,ZZ)="" F  S XX=$O(RPTDATA(XX)) Q:XX=""  F  S YY=$O(RPTDATA(XX,YY)) Q:YY=""  D
"RTN","IBCNERPD",194,0)
 . S ZZ=RPTDATA(XX,YY)
"RTN","IBCNERPD",195,0)
 . S LCT=LCT+1,DISPDATA(LCT)=WW_U_XX_U_$P(ZZ,U,1)_U_$P(ZZ,U,4)
"RTN","IBCNERPD",196,0)
 . I $P(ZZ,U,5)'="" S DISPDATA(LCT)=DISPDATA(LCT)_", "_$P($G(^DIC(5,$P(ZZ,U,5)+0,0)),U,2)
"RTN","IBCNERPD",197,0)
 . S IBHPD=$$HPD^IBCNHUT1(YY,1)
"RTN","IBCNERPD",198,0)
 . S DISPDATA(LCT)=DISPDATA(LCT)_U_$P(ZZ,U,7)_U_$P(ZZ,U,8)_U_IBHPD
"RTN","IBCNERPD",199,0)
 Q
"RTN","IBCNERPD",200,0)
 ;
"RTN","IBCNERPD",201,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBCNERPD",202,0)
 N X
"RTN","IBCNERPD",203,0)
 I REP=1 D
"RTN","IBCNERPD",204,0)
 .S X="Payer Name^National Payer ID^# Linked Ins. Co.^Nationally Active?^Locally Active?^FSC Trusted?^Professional EDI#^Institutional EDI#"
"RTN","IBCNERPD",205,0)
 .I DET=1 S X=X_"^Linked Insurance Company Name^Street Address^City, ST^Professional EDI#^Institutional EDI#^HPID/OEID"
"RTN","IBCNERPD",206,0)
 I REP=2 D
"RTN","IBCNERPD",207,0)
 .S X="Insurance Company Name^Street Address^City, ST Zip^# Active Groups^Professional EDI#^Institutional EDI#^HPID/OEID^"
"RTN","IBCNERPD",208,0)
 .S X=X_"Linked Payer^VA ID^Nationally Active?^Locally Active?^FSC Trusted?^Professional EDI#^Institutional EDI#"
"RTN","IBCNERPD",209,0)
 W X
"RTN","IBCNERPD",210,0)
 Q
"RTN","IBCNERPF")
0^80^B17142142
"RTN","IBCNERPF",1,0)
IBCNERPF ;BP/YMG - IBCNE USER INTERFACE EIV INSURANCE UPDATE REPORT ;16-SEP-2009
"RTN","IBCNERPF",2,0)
 ;;2.0;INTEGRATED BILLING;**416,528**;21-MAR-94;Build 163
"RTN","IBCNERPF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPF",4,0)
 ;
"RTN","IBCNERPF",5,0)
 ; Variables:
"RTN","IBCNERPF",6,0)
 ;   IBCNERTN = "IBCNERPF" (current routine name for queueing the 
"RTN","IBCNERPF",7,0)
 ;                          COMPILE process)
"RTN","IBCNERPF",8,0)
 ;   IBCNESPC("BEGDT") = start date for date range
"RTN","IBCNERPF",9,0)
 ;   IBCNESPC("ENDDT") = end date for date range
"RTN","IBCNERPF",10,0)
 ;   IBCNESPC("PYR",ien) = payer iens for report, if IBCNESPC("PYR")="A", then include all
"RTN","IBCNERPF",11,0)
 ;   IBCNESPC("PAT",ien) = patient iens for report, if IBCNESPC("PAT")="A", then include all
"RTN","IBCNERPF",12,0)
 ;   IBCNESPC("SORT") = sort by: 1 - Payer name, 2 - Patient Name, 3 - Clerk Name
"RTN","IBCNERPF",13,0)
 ;   IBCNESPC("TYPE") = report type: "S" - summary, "D" - detailed
"RTN","IBCNERPF",14,0)
 ;   IBOUT = "R" for Report format or "E" for Excel format
"RTN","IBCNERPF",15,0)
 ;
"RTN","IBCNERPF",16,0)
 Q
"RTN","IBCNERPF",17,0)
EN ; entry point
"RTN","IBCNERPF",18,0)
 N STOP,IBCNERTN,IBCNESPC,IBOUT
"RTN","IBCNERPF",19,0)
 ;
"RTN","IBCNERPF",20,0)
 S STOP=0,IBCNERTN="IBCNERPF"
"RTN","IBCNERPF",21,0)
 W @IOF
"RTN","IBCNERPF",22,0)
 W !,"eIV Insurance Update Report",!
"RTN","IBCNERPF",23,0)
 ; Prompts for Insurance Update Report
"RTN","IBCNERPF",24,0)
 ; Report Type - Summary or Detailed
"RTN","IBCNERPF",25,0)
P10 D TYPE I STOP G EXIT
"RTN","IBCNERPF",26,0)
 ; Payer Selection parameter
"RTN","IBCNERPF",27,0)
P20 D PAYER I STOP G:$$STOP^IBCNERP1 EXIT G P10
"RTN","IBCNERPF",28,0)
 ; Date Range parameters
"RTN","IBCNERPF",29,0)
P30 D DTRANGE I STOP G:$$STOP^IBCNERP1 EXIT G P20
"RTN","IBCNERPF",30,0)
 ; Patient Selection parameter
"RTN","IBCNERPF",31,0)
P40 D PATIENT I STOP G:$$STOP^IBCNERP1 EXIT G P30
"RTN","IBCNERPF",32,0)
 ; Sort by parameter - Payer Name, Patient Name, or Clerk Name
"RTN","IBCNERPF",33,0)
P50 D SORT I STOP G:$$STOP^IBCNERP1 EXIT G P40
"RTN","IBCNERPF",34,0)
 ; Select the output type
"RTN","IBCNERPF",35,0)
P60 S IBOUT=$$OUT^IBCNERP1 I STOP G:$$STOP^IBCNERP1 EXIT G P50
"RTN","IBCNERPF",36,0)
 ; Select the output device
"RTN","IBCNERPF",37,0)
P100 D DEVICE^IBCNERP1(IBCNERTN,.IBCNESPC,IBOUT) I STOP G:$$STOP^IBCNERP1 EXIT G P50
"RTN","IBCNERPF",38,0)
 ;
"RTN","IBCNERPF",39,0)
EXIT ;
"RTN","IBCNERPF",40,0)
 Q
"RTN","IBCNERPF",41,0)
 ;
"RTN","IBCNERPF",42,0)
PAYER ;
"RTN","IBCNERPF",43,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPF",44,0)
 W !
"RTN","IBCNERPF",45,0)
 S DIR("A")="Run for (A)ll Payers or (S)elected Payers: "
"RTN","IBCNERPF",46,0)
 S DIR("A",1)="PAYER SELECTION:"
"RTN","IBCNERPF",47,0)
 S DIR(0)="SA^A:All;S:Selected",DIR("B")="A"
"RTN","IBCNERPF",48,0)
 D ^DIR
"RTN","IBCNERPF",49,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPF",50,0)
 I Y="A" S IBCNESPC("PYR")="A" Q  ; "All Payers" selected
"RTN","IBCNERPF",51,0)
 S DIC(0)="ABEQ"
"RTN","IBCNERPF",52,0)
 S DIC("A")="Select Insurance Company: "
"RTN","IBCNERPF",53,0)
 ; Do not allow selection of '~NO PAYER' and non-eIV payers
"RTN","IBCNERPF",54,0)
 S DIC("S")="I ($P(^(0),U,1)'=""~NO PAYER""),$$PYRAPP^IBCNEUT5(""IIV"",$G(Y))'="""""
"RTN","IBCNERPF",55,0)
 S DIC="^IBE(365.12,"
"RTN","IBCNERPF",56,0)
PAYER1 ;
"RTN","IBCNERPF",57,0)
 D ^DIC
"RTN","IBCNERPF",58,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=-1) S STOP=1 K IBCNESPC("PYR") Q
"RTN","IBCNERPF",59,0)
 S IBCNESPC("PYR",$P(Y,U,1))=""
"RTN","IBCNERPF",60,0)
 I $$ANOTHER G PAYER1
"RTN","IBCNERPF",61,0)
 Q
"RTN","IBCNERPF",62,0)
 ;
"RTN","IBCNERPF",63,0)
DTRANGE ;
"RTN","IBCNERPF",64,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPF",65,0)
 W !
"RTN","IBCNERPF",66,0)
 S DIR(0)="D^::EX",DIR("B")="Today"
"RTN","IBCNERPF",67,0)
 S DIR("A")="Earliest Date Received"
"RTN","IBCNERPF",68,0)
 S DIR("A",1)="RESPONSE RECEIVED DATE RANGE SELECTION:"
"RTN","IBCNERPF",69,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPF",70,0)
 S IBCNESPC("BEGDT")=Y
"RTN","IBCNERPF",71,0)
 ; End date
"RTN","IBCNERPF",72,0)
DTRANGE1 ;
"RTN","IBCNERPF",73,0)
 K DIR("A") S DIR("A")="  Latest Date Received"
"RTN","IBCNERPF",74,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPF",75,0)
 I Y<IBCNESPC("BEGDT") W !,"     Latest Date must not precede the Earliest Date." G DTRANGE1
"RTN","IBCNERPF",76,0)
 S IBCNESPC("ENDDT")=Y
"RTN","IBCNERPF",77,0)
 Q
"RTN","IBCNERPF",78,0)
 ;
"RTN","IBCNERPF",79,0)
PATIENT ;
"RTN","IBCNERPF",80,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPF",81,0)
 ; summary report is always run for all patients
"RTN","IBCNERPF",82,0)
 I $G(IBCNESPC("TYPE"))="S" S IBCNESPC("PAT")="A" Q
"RTN","IBCNERPF",83,0)
 W !
"RTN","IBCNERPF",84,0)
 S DIR("A")="Run for (A)ll Patients or (S)elected Patients: "
"RTN","IBCNERPF",85,0)
 S DIR("A",1)="PATIENT SELECTION:"
"RTN","IBCNERPF",86,0)
 S DIR(0)="SA^A:All;S:Selected",DIR("B")="A"
"RTN","IBCNERPF",87,0)
 D ^DIR
"RTN","IBCNERPF",88,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPF",89,0)
 I Y="A" S IBCNESPC("PAT")="A" Q  ; "All Patients" selected
"RTN","IBCNERPF",90,0)
 S DIC(0)="ABEQ"
"RTN","IBCNERPF",91,0)
 S DIC("A")="Select Patient: "
"RTN","IBCNERPF",92,0)
 S DIC="^DPT("
"RTN","IBCNERPF",93,0)
PATIENT1 ;
"RTN","IBCNERPF",94,0)
 D ^DIC
"RTN","IBCNERPF",95,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=-1) S STOP=1 K IBCNESPC("PAT") Q
"RTN","IBCNERPF",96,0)
 S IBCNESPC("PAT",$P(Y,U,1))=""
"RTN","IBCNERPF",97,0)
 I $$ANOTHER G PATIENT1
"RTN","IBCNERPF",98,0)
 Q
"RTN","IBCNERPF",99,0)
 ;
"RTN","IBCNERPF",100,0)
ANOTHER() ; "Select Another" prompt
"RTN","IBCNERPF",101,0)
 ; returns 1, if response was "YES", returns 0 otherwise
"RTN","IBCNERPF",102,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPF",103,0)
 S DIR("A")="Select Another?" S DIR(0)="Y",DIR("B")="NO"
"RTN","IBCNERPF",104,0)
 D ^DIR I $D(DIRUT) S STOP=1
"RTN","IBCNERPF",105,0)
 Q Y
"RTN","IBCNERPF",106,0)
 ;
"RTN","IBCNERPF",107,0)
SORT ;
"RTN","IBCNERPF",108,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPF",109,0)
 ; summary report is sorted by Payer Name, if run for selected payers,
"RTN","IBCNERPF",110,0)
 ; or by Clerk Name, if run for all payers
"RTN","IBCNERPF",111,0)
 I $G(IBCNESPC("TYPE"))="S" S IBCNESPC("SORT")=$S($G(IBCNESPC("PYR"))="A":1,1:3) Q
"RTN","IBCNERPF",112,0)
 W !
"RTN","IBCNERPF",113,0)
 S DIR(0)="SA^1:Payer Name;2:Patient Name;3:Clerk Name"
"RTN","IBCNERPF",114,0)
 S DIR("A")="Sort By: "
"RTN","IBCNERPF",115,0)
 S DIR("A",1)="SORT CRITERIA:"
"RTN","IBCNERPF",116,0)
 S DIR("B")="Payer Name"
"RTN","IBCNERPF",117,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPF",118,0)
 S IBCNESPC("SORT")=Y
"RTN","IBCNERPF",119,0)
 Q
"RTN","IBCNERPF",120,0)
 ;
"RTN","IBCNERPF",121,0)
TYPE ;
"RTN","IBCNERPF",122,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPF",123,0)
 W !
"RTN","IBCNERPF",124,0)
 S DIR(0)="SA^S:Summary;D:Detailed"
"RTN","IBCNERPF",125,0)
 S DIR("A")="Run a (S)ummary or (D)etailed Report: "
"RTN","IBCNERPF",126,0)
 S DIR("B")="Summary"
"RTN","IBCNERPF",127,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPF",128,0)
 S IBCNESPC("TYPE")=Y
"RTN","IBCNERPF",129,0)
 Q
"RTN","IBCNERPG")
0^81^B15763271
"RTN","IBCNERPG",1,0)
IBCNERPG ;BP/YMG - IBCNE EIV INSURANCE UPDATE REPORT COMPILE;16-SEP-2009
"RTN","IBCNERPG",2,0)
 ;;2.0;INTEGRATED BILLING;**416,528**;21-MAR-94;Build 163
"RTN","IBCNERPG",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPG",4,0)
 ;
"RTN","IBCNERPG",5,0)
 ; variables from IBCNERPF:
"RTN","IBCNERPG",6,0)
 ;   IBCNERTN = "IBCNERPF"
"RTN","IBCNERPG",7,0)
 ;   IBCNESPC("BEGDT") = start date for date range
"RTN","IBCNERPG",8,0)
 ;   IBCNESPC("ENDDT") = end date for date range
"RTN","IBCNERPG",9,0)
 ;   IBCNESPC("PYR",ien) = payer iens for report, if IBCNESPC("PYR")="A", then include all
"RTN","IBCNERPG",10,0)
 ;   IBCNESPC("PAT",ien) = patient iens for report, if IBCNESPC("PAT")="A", then include all
"RTN","IBCNERPG",11,0)
 ;   IBCNESPC("SORT") = sort by: 1 - Payer name, 2 - Patient Name, 3 - Clerk Name
"RTN","IBCNERPG",12,0)
 ;   IBCNESPC("TYPE") = report type: "S" - summary, "D" - detailed
"RTN","IBCNERPG",13,0)
 ;   IBOUT = "R" for Report format or "E" for Excel format
"RTN","IBCNERPG",14,0)
 ;
"RTN","IBCNERPG",15,0)
 ; Output variables passed to IBCNERPH:
"RTN","IBCNERPG",16,0)
 ;   Summary report:
"RTN","IBCNERPG",17,0)
 ;     ^TMP($J,IBCNERTN,SORT1,SORT2)=Count
"RTN","IBCNERPG",18,0)
 ;     SORT1 - Payer Name or *, SORT2 - Clerk Name or 0 if not processed
"RTN","IBCNERPG",19,0)
 ;
"RTN","IBCNERPG",20,0)
 ;   Detailed report:
"RTN","IBCNERPG",21,0)
 ;     ^TMP($J,IBCNERTN,SORT1)=Count 
"RTN","IBCNERPG",22,0)
 ;     ^TMP($J,IBCNERTN,SORT1,SORT2)=Pat. Name ^ SSN ^ Date received ^ Payer Name ^ Ck AB ^ Clerk Name ^ Date Verified ^ Days old
"RTN","IBCNERPG",23,0)
 ;     SORT1 - Payer Name, Patient Name, or Clerk Name, SORT2 - Date received
"RTN","IBCNERPG",24,0)
 ;
"RTN","IBCNERPG",25,0)
 Q
"RTN","IBCNERPG",26,0)
 ;
"RTN","IBCNERPG",27,0)
EN(IBCNERTN,IBCNESPC,IBOUT) ; Entry point
"RTN","IBCNERPG",28,0)
 N ALLPYR,ALLPAT,DATE,BDATE,EDATE,RPDATA,RTYPE,SORT
"RTN","IBCNERPG",29,0)
 S ALLPYR=$S($G(IBCNESPC("PYR"))="A":1,1:0)
"RTN","IBCNERPG",30,0)
 S ALLPAT=$S($G(IBCNESPC("PAT"))="A":1,1:0)
"RTN","IBCNERPG",31,0)
 S BDATE=$G(IBCNESPC("BEGDT"))
"RTN","IBCNERPG",32,0)
 S EDATE=$G(IBCNESPC("ENDDT"))
"RTN","IBCNERPG",33,0)
 I EDATE'="",$P(EDATE,".",2)="" S EDATE=$$FMADD^XLFDT(EDATE,0,23,59,59)
"RTN","IBCNERPG",34,0)
 S RTYPE=$G(IBCNESPC("TYPE"))
"RTN","IBCNERPG",35,0)
 S SORT=$G(IBCNESPC("SORT"))
"RTN","IBCNERPG",36,0)
 I '$D(ZTQUEUED),$G(IOST)["C-",IBOUT="R" W !!,"Compiling report data ..."
"RTN","IBCNERPG",37,0)
 ; Kill scratch global
"RTN","IBCNERPG",38,0)
 K ^TMP($J,IBCNERTN)
"RTN","IBCNERPG",39,0)
 S DATE=$O(^IBCN(365,"AD",BDATE),-1)
"RTN","IBCNERPG",40,0)
 F  S DATE=$O(^IBCN(365,"AD",DATE)) Q:'DATE!(DATE>EDATE)  D PAYERS(DATE,ALLPYR,ALLPAT) Q:$G(ZTSTOP)
"RTN","IBCNERPG",41,0)
 M ^TMP($J,IBCNERTN)=RPDATA
"RTN","IBCNERPG",42,0)
 Q
"RTN","IBCNERPG",43,0)
 ;
"RTN","IBCNERPG",44,0)
PAYERS(DATE,ALLPYR,ALLPAT) ; loop through payers
"RTN","IBCNERPG",45,0)
 N PYR
"RTN","IBCNERPG",46,0)
 S PYR=""
"RTN","IBCNERPG",47,0)
 I 'ALLPYR F  S PYR=$O(IBCNESPC("PYR",PYR)) Q:'PYR  D:$O(^IBCN(365,"AD",DATE,PYR,"")) PATIENTS(DATE,PYR,ALLPAT) Q:$G(ZTSTOP)
"RTN","IBCNERPG",48,0)
 I ALLPYR F  S PYR=$O(^IBCN(365,"AD",DATE,PYR)) Q:'PYR  D PATIENTS(DATE,PYR,ALLPAT) Q:$G(ZTSTOP)
"RTN","IBCNERPG",49,0)
 Q
"RTN","IBCNERPG",50,0)
 ;
"RTN","IBCNERPG",51,0)
PATIENTS(DATE,PYR,ALLPAT) ; loop through patients
"RTN","IBCNERPG",52,0)
 N PAT
"RTN","IBCNERPG",53,0)
 S PAT=""
"RTN","IBCNERPG",54,0)
 I 'ALLPAT F  S PAT=$O(IBCNESPC("PAT",PAT)) Q:'PAT  D:$O(^IBCN(365,"AD",DATE,PYR,PAT,"")) GETDATA(DATE,PYR,PAT) Q:$G(ZTSTOP)
"RTN","IBCNERPG",55,0)
 I ALLPAT F  S PAT=$O(^IBCN(365,"AD",DATE,PYR,PAT)) Q:'PAT  D GETDATA(DATE,PYR,PAT) Q:$G(ZTSTOP)
"RTN","IBCNERPG",56,0)
 Q
"RTN","IBCNERPG",57,0)
 ;
"RTN","IBCNERPG",58,0)
GETDATA(DATE,PYR,PAT) ; loop through responses and compile report
"RTN","IBCNERPG",59,0)
 N ABDATE,ABIEN,AUTOUPD,CHKAB,CLNAME,GIEN,IENS2,IENS312,INS,NOW,PATNAME,PYRNAME,RIEN,SORT1,SORT2,SSN,TOTMES,TQ,VDATE
"RTN","IBCNERPG",60,0)
 ;
"RTN","IBCNERPG",61,0)
 S NOW=$$NOW^XLFDT
"RTN","IBCNERPG",62,0)
 S (TOTMES,INS)=0
"RTN","IBCNERPG",63,0)
 S RIEN="" F  S RIEN=$O(^IBCN(365,"AD",DATE,PYR,PAT,RIEN)) Q:'RIEN  D  Q:$G(ZTSTOP)
"RTN","IBCNERPG",64,0)
 .S TOTMES=TOTMES+1 I $D(ZTQUEUED),TOTMES#100=0,$$S^%ZTLOAD() S ZTSTOP=1 Q
"RTN","IBCNERPG",65,0)
 .S TQ=+$P(^IBCN(365,RIEN,0),U,5) I TQ S INS=+$P(^IBCN(365.1,TQ,0),U,13)
"RTN","IBCNERPG",66,0)
 .I 'INS Q
"RTN","IBCNERPG",67,0)
 .S IENS2=PAT_",",IENS312=INS_","_IENS2
"RTN","IBCNERPG",68,0)
 .S VDATE=$$GET1^DIQ(2.312,IENS312,1.03,"I") I VDATE=""!(VDATE<BDATE)!(VDATE>EDATE) Q
"RTN","IBCNERPG",69,0)
 .S PYRNAME=$P(^IBE(365.12,PYR,0),U),PATNAME=$$GET1^DIQ(2,IENS2,.01,"E")
"RTN","IBCNERPG",70,0)
 .S AUTOUPD=+$$GET1^DIQ(2.312,IENS312,4.04,"I")
"RTN","IBCNERPG",71,0)
 .I AUTOUPD S CLNAME="AUTOUPDATE,IB-eIV"
"RTN","IBCNERPG",72,0)
 .I 'AUTOUPD S CLNAME=$$GET1^DIQ(2.312,IENS312,1.04,"E") I CLNAME="" S CLNAME="UNKNOWN"
"RTN","IBCNERPG",73,0)
 .I RTYPE="S" S SORT1=$S(ALLPYR:"*",1:PYRNAME),SORT2=CLNAME,RPDATA(SORT1,SORT2)=$G(RPDATA(SORT1,SORT2))+1 Q
"RTN","IBCNERPG",74,0)
 .S SSN=$$GET1^DIQ(2,IENS2,.09,"E")
"RTN","IBCNERPG",75,0)
 .S CHKAB="Y"
"RTN","IBCNERPG",76,0)
 .S GIEN=$$GET1^DIQ(2.312,IENS312,.18,"I"),ABIEN="",ABDATE=""
"RTN","IBCNERPG",77,0)
 .I +GIEN,$D(^IBA(355.4,"APY",GIEN)) S ABIEN=$O(^IBA(355.4,"APY",GIEN,$O(^IBA(355.4,"APY",GIEN,"")),""))
"RTN","IBCNERPG",78,0)
 .S:+ABIEN ABDATE=$P($G(^IBA(355.4,ABIEN,1)),U,3)
"RTN","IBCNERPG",79,0)
 .S:+ABDATE CHKAB=$S($$FMDIFF^XLFDT(NOW,ABDATE)>365:"Y",1:"N")
"RTN","IBCNERPG",80,0)
 .S SORT1=$S(SORT=1:PYRNAME,SORT=2:PATNAME,1:CLNAME),SORT2=DATE
"RTN","IBCNERPG",81,0)
 .S RPDATA(SORT1)=$G(RPDATA(SORT1))+1
"RTN","IBCNERPG",82,0)
 .S RPDATA(SORT1,SORT2)=PATNAME_U_SSN_U_DATE_U_PYRNAME_U_CHKAB_U_CLNAME_U_VDATE_U_$$FMDIFF^XLFDT(NOW,DATE)
"RTN","IBCNERPG",83,0)
 .Q
"RTN","IBCNERPG",84,0)
 Q
"RTN","IBCNERPH")
0^82^B26306975
"RTN","IBCNERPH",1,0)
IBCNERPH ;BP/YMG - IBCNE EIV INSURANCE UPDATE REPORT PRINT;16-SEP-2009
"RTN","IBCNERPH",2,0)
 ;;2.0;INTEGRATED BILLING;**416,528**;21-MAR-94;Build 163
"RTN","IBCNERPH",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPH",4,0)
 ;
"RTN","IBCNERPH",5,0)
 ; variables from IBCNERPF and IBCNERPG:
"RTN","IBCNERPH",6,0)
 ;   IBCNERTN = "IBCNERPF"
"RTN","IBCNERPH",7,0)
 ;   IBCNESPC("BEGDT") = start date for date range
"RTN","IBCNERPH",8,0)
 ;   IBCNESPC("ENDDT") = end date for date range
"RTN","IBCNERPH",9,0)
 ;   IBCNESPC("PYR",ien) = payer iens for report, if IBCNESPC("PYR")="A", then include all
"RTN","IBCNERPH",10,0)
 ;   IBCNESPC("PAT",ien) = patient iens for report, if IBCNESPC("PAT")="A", then include all
"RTN","IBCNERPH",11,0)
 ;   IBCNESPC("SORT") = sort by: 1 - Payer name, 2 - Patient Name, 3 - Clerk Name
"RTN","IBCNERPH",12,0)
 ;   IBCNESPC("TYPE") = report type: "S" - summary, "D" - detailed
"RTN","IBCNERPH",13,0)
 ;   IBOUT = "R" for Report format or "E" for Excel format
"RTN","IBCNERPH",14,0)
 ;
"RTN","IBCNERPH",15,0)
 ;   Summary report:
"RTN","IBCNERPH",16,0)
 ;     ^TMP($J,IBCNERTN,SORT1,SORT2)=Count
"RTN","IBCNERPH",17,0)
 ;     SORT1 - Payer Name or *, SORT2 - Clerk Name or 0 if not processed
"RTN","IBCNERPH",18,0)
 ;
"RTN","IBCNERPH",19,0)
 ;   Detailed report:
"RTN","IBCNERPH",20,0)
 ;     ^TMP($J,IBCNERTN,SORT1)=Count 
"RTN","IBCNERPH",21,0)
 ;     ^TMP($J,IBCNERTN,SORT1,SORT2)=Pat. Name ^ SSN ^ Date received ^ Payer Name ^ Ck AB ^ Clerk Name ^ Date Verified ^ Days old
"RTN","IBCNERPH",22,0)
 ;     SORT1 - Payer Name, Patient Name, or Clerk Name, SORT2 - Date received
"RTN","IBCNERPH",23,0)
 ;
"RTN","IBCNERPH",24,0)
 Q
"RTN","IBCNERPH",25,0)
 ;
"RTN","IBCNERPH",26,0)
EN(IBCNERTN,IBCNESPC,IBOUT) ; Entry point
"RTN","IBCNERPH",27,0)
 N CLNAME,CRT,DDATA,DLINE,EORMSG,IBPGC,IBPXT,MAXCNT,NONEMSG,NPROC,SSN,SSNLEN,SRT1,SRT2,TSTAMP,TYPE,VDATE,WIDTH,X,Y
"RTN","IBCNERPH",28,0)
 S (IBPGC,IBPXT)=0
"RTN","IBCNERPH",29,0)
 S NONEMSG="* * * N O  D A T A  F O U N D * * *"
"RTN","IBCNERPH",30,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCNERPH",31,0)
 S NPROC="Not Processed"
"RTN","IBCNERPH",32,0)
 S TSTAMP=$$FMTE^XLFDT($$NOW^XLFDT,1) ; time of report
"RTN","IBCNERPH",33,0)
 S TYPE=$G(IBCNESPC("TYPE")) ; report type
"RTN","IBCNERPH",34,0)
 S WIDTH=$S(TYPE="S":79,1:131)
"RTN","IBCNERPH",35,0)
 ; Determine IO parameters
"RTN","IBCNERPH",36,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCNERPH",37,0)
 S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNERPH",38,0)
 S:IOST["C-" MAXCNT=IOSL-3,CRT=1
"RTN","IBCNERPH",39,0)
 ; print data
"RTN","IBCNERPH",40,0)
 S SRT1=""
"RTN","IBCNERPH",41,0)
 D HEADER:IBOUT="R",PHDL:IBOUT="E" I $G(ZTSTOP)!IBPXT Q
"RTN","IBCNERPH",42,0)
 ; If global does not exist - display No Data message
"RTN","IBCNERPH",43,0)
 I '$D(^TMP($J,IBCNERTN)) D LINE($$FO^IBCNEUT1(NONEMSG,$$CENTER(NONEMSG),"R"),IBOUT) G EXIT
"RTN","IBCNERPH",44,0)
 I TYPE="S" D  Q:$G(ZTSTOP)!IBPXT
"RTN","IBCNERPH",45,0)
 .; summary report
"RTN","IBCNERPH",46,0)
 .F  S SRT1=$O(^TMP($J,IBCNERTN,SRT1)) Q:SRT1=""!$G(ZTSTOP)!IBPXT  D
"RTN","IBCNERPH",47,0)
 ..I SRT1'="*",IBOUT="R" D LINE(SRT1,IBOUT)
"RTN","IBCNERPH",48,0)
 ..S SRT2="" F  S SRT2=$O(^TMP($J,IBCNERTN,SRT1,SRT2)) Q:SRT2=""!$G(ZTSTOP)!IBPXT  D
"RTN","IBCNERPH",49,0)
 ...I IBOUT="E" D LINE($S(SRT1="*":"ALL",1:SRT1)_U_$S(SRT2=0:NPROC,1:SRT2)_U_^TMP($J,IBCNERTN,SRT1,SRT2),IBOUT) Q
"RTN","IBCNERPH",50,0)
 ...D LINE($$FO^IBCNEUT1("  "_$S(SRT2=0:NPROC,1:SRT2),40)_"Count = "_^TMP($J,IBCNERTN,SRT1,SRT2),IBOUT)
"RTN","IBCNERPH",51,0)
 ...Q
"RTN","IBCNERPH",52,0)
 ..Q
"RTN","IBCNERPH",53,0)
 .Q
"RTN","IBCNERPH",54,0)
 I TYPE="D" D  Q:$G(ZTSTOP)!IBPXT
"RTN","IBCNERPH",55,0)
 .; detailed report
"RTN","IBCNERPH",56,0)
 .F  S SRT1=$O(^TMP($J,IBCNERTN,SRT1)) Q:SRT1=""!$G(ZTSTOP)!IBPXT  D
"RTN","IBCNERPH",57,0)
 ..I IBOUT="R" D LINE($$FO^IBCNEUT1($S(SRT1=0:NPROC,1:SRT1),85)_"Count = "_^TMP($J,IBCNERTN,SRT1),IBOUT)
"RTN","IBCNERPH",58,0)
 ..S SRT2="" F  S SRT2=$O(^TMP($J,IBCNERTN,SRT1,SRT2)) Q:SRT2=""!$G(ZTSTOP)!IBPXT  D
"RTN","IBCNERPH",59,0)
 ...S DDATA=$G(^TMP($J,IBCNERTN,SRT1,SRT2)),DLINE="",SSN=$P(DDATA,U,2)
"RTN","IBCNERPH",60,0)
 ...I IBOUT="E" D XLDATA Q
"RTN","IBCNERPH",61,0)
 ...S $E(DLINE,3,22)=$P(DDATA,U)
"RTN","IBCNERPH",62,0)
 ...S SSNLEN=$L(SSN),$E(DLINE,23,28)=$E(SSN,SSNLEN-3,SSNLEN)
"RTN","IBCNERPH",63,0)
 ...S $E(DLINE,29,41)=$$FMTE^XLFDT($P(DDATA,U,3)\1,"5Z")
"RTN","IBCNERPH",64,0)
 ...S $E(DLINE,42,69)=$P(DDATA,U,4),$E(DLINE,72,77)=$P(DDATA,U,5)
"RTN","IBCNERPH",65,0)
 ...S CLNAME=$P(DDATA,U,6) S:CLNAME=0 CLNAME=NPROC S $E(DLINE,78,94)=CLNAME
"RTN","IBCNERPH",66,0)
 ...S VDATE=$$FMTE^XLFDT($P(DDATA,U,7)\1,"5Z") S:'VDATE VDATE="  N/A" S $E(DLINE,115,127)=VDATE
"RTN","IBCNERPH",67,0)
 ...S $E(DLINE,127,131)=$P(DDATA,U,8)
"RTN","IBCNERPH",68,0)
 ...D LINE(DLINE,IBOUT)
"RTN","IBCNERPH",69,0)
 ...Q
"RTN","IBCNERPH",70,0)
 ..Q
"RTN","IBCNERPH",71,0)
 .Q
"RTN","IBCNERPH",72,0)
 ;
"RTN","IBCNERPH",73,0)
EXIT ;
"RTN","IBCNERPH",74,0)
 D LINE($$FO^IBCNEUT1(EORMSG,$$CENTER(EORMSG),"R"),IBOUT)
"RTN","IBCNERPH",75,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D EOL
"RTN","IBCNERPH",76,0)
 Q
"RTN","IBCNERPH",77,0)
 ;
"RTN","IBCNERPH",78,0)
XLDATA ; Excel detailed output
"RTN","IBCNERPH",79,0)
 W !,$P(DDATA,U)_U_$E(SSN,$L(SSN)-3,$L(SSN))_U_$$FMTE^XLFDT($P(DDATA,U,3)\1,"5Z")_U_$P(DDATA,U,4,5)
"RTN","IBCNERPH",80,0)
 W U_$S($P(DDATA,U,6)=0:NPROC,1:$P(DDATA,U,6))
"RTN","IBCNERPH",81,0)
 S VDATE=$$FMTE^XLFDT($P(DDATA,U,7)\1,"5Z") W U_$S('VDATE:" N/A",1:VDATE)_U_$P(DDATA,U,8)_U_^TMP($J,IBCNERTN,SRT1)
"RTN","IBCNERPH",82,0)
 Q
"RTN","IBCNERPH",83,0)
 ;
"RTN","IBCNERPH",84,0)
EOL ; display "end of page" message and set exit flag
"RTN","IBCNERPH",85,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LIN
"RTN","IBCNERPH",86,0)
 I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNERPH",87,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERPH",88,0)
 I $D(DTOUT)!$D(DUOUT) S IBPXT=1
"RTN","IBCNERPH",89,0)
 Q
"RTN","IBCNERPH",90,0)
 ;
"RTN","IBCNERPH",91,0)
HEADER ; print header for each page
"RTN","IBCNERPH",92,0)
 N DASHES,HDR,OFFSET,SRT
"RTN","IBCNERPH",93,0)
 ;
"RTN","IBCNERPH",94,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D EOL I IBPXT Q
"RTN","IBCNERPH",95,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() S (ZTSTOP,IBPXT)=1 Q
"RTN","IBCNERPH",96,0)
 S IBPGC=IBPGC+1
"RTN","IBCNERPH",97,0)
 W @IOF,!,?1,"Pt. Insurance Update Report"
"RTN","IBCNERPH",98,0)
 S HDR=TSTAMP_"  Page: "_IBPGC,OFFSET=WIDTH-$L(HDR)
"RTN","IBCNERPH",99,0)
 W ?OFFSET,HDR
"RTN","IBCNERPH",100,0)
 S SRT=$G(IBCNESPC("SORT"))
"RTN","IBCNERPH",101,0)
 I TYPE="S" W !,?1,"Sorted by: Clerk Name"
"RTN","IBCNERPH",102,0)
 I TYPE="D" W !,?1,"Sorted by: "_$S(SRT=1:"Payer Name",SRT=2:"Patient Name",1:"Clerk Name")
"RTN","IBCNERPH",103,0)
 S HDR=$$FMTE^XLFDT($G(IBCNESPC("BEGDT")),"5Z")_" - "_$$FMTE^XLFDT($G(IBCNESPC("ENDDT")),"5Z")
"RTN","IBCNERPH",104,0)
 S OFFSET=WIDTH-$L(HDR)
"RTN","IBCNERPH",105,0)
 W ?OFFSET,HDR
"RTN","IBCNERPH",106,0)
 W !,?1,$S(TYPE="D":"Detailed",1:"Summary")_" Report: "
"RTN","IBCNERPH",107,0)
 W $S($G(IBCNESPC("PAT"))="A":"All",1:"Selected")_" Patients; "
"RTN","IBCNERPH",108,0)
 W $S($G(IBCNESPC("PYR"))="A":"All",1:"Selected")_" Payers"
"RTN","IBCNERPH",109,0)
 I TYPE="D" W !!,?3,"Patient Name",?23,"SSN",?29,"Dt Rec'd",?42,"Payer",?70,"Ck AB",?78,"Clerk/Auto",?115,"Verified",?127,"Days"
"RTN","IBCNERPH",110,0)
 S $P(DASHES,"-",WIDTH)="" W !,?1,DASHES
"RTN","IBCNERPH",111,0)
 Q
"RTN","IBCNERPH",112,0)
 ;
"RTN","IBCNERPH",113,0)
LINE(LINE,IBOUT) ; Print line of data
"RTN","IBCNERPH",114,0)
 I $Y+1>MAXCNT,IBOUT="R" D HEADER I $G(ZTSTOP)!IBPXT Q
"RTN","IBCNERPH",115,0)
 W ! W:IBOUT="R" ?1 W LINE
"RTN","IBCNERPH",116,0)
 Q
"RTN","IBCNERPH",117,0)
 ;
"RTN","IBCNERPH",118,0)
CENTER(LINE) ; return length of a centered line
"RTN","IBCNERPH",119,0)
 ; LINE - line to center
"RTN","IBCNERPH",120,0)
 N LENGTH,OFFSET
"RTN","IBCNERPH",121,0)
 S LENGTH=$L(LINE),OFFSET=IOM-$L(LINE)\2
"RTN","IBCNERPH",122,0)
 Q OFFSET+LENGTH
"RTN","IBCNERPH",123,0)
 ;
"RTN","IBCNERPH",124,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBCNERPH",125,0)
 N X
"RTN","IBCNERPH",126,0)
 S IBPGC=1
"RTN","IBCNERPH",127,0)
 I TYPE="S" S X="Payer Name^Clerk Name^Count"
"RTN","IBCNERPH",128,0)
 I TYPE="D" S X="Patient Name^SSN^Date Received^Payer^Ck AB^Clerk/Auto^Verified^Days^Count"
"RTN","IBCNERPH",129,0)
 W X
"RTN","IBCNERPH",130,0)
 Q
"RTN","IBCNERPJ")
0^33^B18323199
"RTN","IBCNERPJ",1,0)
IBCNERPJ ;IB/BAA/AWC - IBCNE EIV HL7 RESPONSE REPORT;25 Feb 2015
"RTN","IBCNERPJ",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNERPJ",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPJ",4,0)
 ;
"RTN","IBCNERPJ",5,0)
 ; Variables:
"RTN","IBCNERPJ",6,0)
 ;   IBCNERTN = "IBCNERPF" (current routine name for queueing the 
"RTN","IBCNERPJ",7,0)
 ;                          COMPILE process)
"RTN","IBCNERPJ",8,0)
 ;   INCNESPJ("BEGDT") = start date for date range
"RTN","IBCNERPJ",9,0)
 ;   INCNESPJ("ENDDT") = end date for date range
"RTN","IBCNERPJ",10,0)
 ;   INCNESPJ("PYR",ien) = payer iens for report, if INCNESPJ("PYR")="A", then include all
"RTN","IBCNERPJ",11,0)
 ;   IBCNESPJ("PAT",ien) = patient iens for report, if IBCNESPJ("PAT")="A", then include all
"RTN","IBCNERPJ",12,0)
 ;   INCNESPJ("TYPE") = report type: "R" - Report, "E" - Excel
"RTN","IBCNERPJ",13,0)
 ;
"RTN","IBCNERPJ",14,0)
 Q
"RTN","IBCNERPJ",15,0)
EN ; entry point
"RTN","IBCNERPJ",16,0)
 N STOP,IBCNERTN,INCNESPJ,I,IBCNESPJ
"RTN","IBCNERPJ",17,0)
 ;
"RTN","IBCNERPJ",18,0)
 S STOP=0,IBCNERTN="IBCNERPJ"
"RTN","IBCNERPJ",19,0)
 K ^TMP($J,IBCNERTN)
"RTN","IBCNERPJ",20,0)
 W @IOF
"RTN","IBCNERPJ",21,0)
 W !,"eIV HL7 Response Report",!
"RTN","IBCNERPJ",22,0)
 ; Prompts for HL7 Response Report
"RTN","IBCNERPJ",23,0)
 ; Report Type - Report or Excel
"RTN","IBCNERPJ",24,0)
P10 D TYPE I STOP G EXIT
"RTN","IBCNERPJ",25,0)
 ; Payer Selection parameter
"RTN","IBCNERPJ",26,0)
P20 D PAYER I STOP G:$$STOP^IBCNERP1 EXIT G P10
"RTN","IBCNERPJ",27,0)
 ; Date Range parameters
"RTN","IBCNERPJ",28,0)
P30 D DTRANGE I STOP G:$$STOP^IBCNERP1 EXIT G P20
"RTN","IBCNERPJ",29,0)
 ; Patient Selection parameter
"RTN","IBCNERPJ",30,0)
P40 D PATIENT I STOP G:$$STOP^IBCNERP1 EXIT G P30
"RTN","IBCNERPJ",31,0)
 ; Select the output device
"RTN","IBCNERPJ",32,0)
P100 D DEVICE
"RTN","IBCNERPJ",33,0)
 ;
"RTN","IBCNERPJ",34,0)
EXIT ;
"RTN","IBCNERPJ",35,0)
 Q
"RTN","IBCNERPJ",36,0)
 ;
"RTN","IBCNERPJ",37,0)
PAYER ;
"RTN","IBCNERPJ",38,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPJ",39,0)
 W !
"RTN","IBCNERPJ",40,0)
 S DIR("A")="Run for (A)ll Payers or (S)elected Payers: "
"RTN","IBCNERPJ",41,0)
 S DIR("A",1)="PAYER SELECTION:"
"RTN","IBCNERPJ",42,0)
 S DIR(0)="SA^A:All;S:Selected",DIR("B")="A"
"RTN","IBCNERPJ",43,0)
 D ^DIR
"RTN","IBCNERPJ",44,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPJ",45,0)
 I Y="A" S INCNESPJ("PYR")="A" Q  ; "All Payers" selected
"RTN","IBCNERPJ",46,0)
 S DIC(0)="ABEQ"
"RTN","IBCNERPJ",47,0)
 S DIC("A")="Select Payer(s): "
"RTN","IBCNERPJ",48,0)
 ; Do not allow selection of '~NO PAYER' and non-eIV payers
"RTN","IBCNERPJ",49,0)
 S DIC("S")="I ($P(^(0),U,1)'=""~NO PAYER""),$$PYRAPP^IBCNEUT5(""IIV"",$G(Y))'="""""
"RTN","IBCNERPJ",50,0)
 S DIC="^IBE(365.12,"
"RTN","IBCNERPJ",51,0)
PAYER1 ;
"RTN","IBCNERPJ",52,0)
 D ^DIC
"RTN","IBCNERPJ",53,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=-1) S STOP=1 K INCNESPJ("PYR") Q
"RTN","IBCNERPJ",54,0)
 S INCNESPJ("PYR",$P(Y,U,1))=""
"RTN","IBCNERPJ",55,0)
 I $$ANOTHER G PAYER1
"RTN","IBCNERPJ",56,0)
 Q
"RTN","IBCNERPJ",57,0)
 ;
"RTN","IBCNERPJ",58,0)
PATIENT ;
"RTN","IBCNERPJ",59,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPJ",60,0)
 ; summary report is always run for all patients
"RTN","IBCNERPJ",61,0)
 W !
"RTN","IBCNERPJ",62,0)
 S DIR("A")="Run for (A)ll Patients or (S)elected Patients: "
"RTN","IBCNERPJ",63,0)
 S DIR("A",1)="PATIENT SELECTION:"
"RTN","IBCNERPJ",64,0)
 S DIR(0)="SA^A:All;S:Selected",DIR("B")="A"
"RTN","IBCNERPJ",65,0)
 D ^DIR
"RTN","IBCNERPJ",66,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPJ",67,0)
 I Y="A" S INCNESPJ("PAT")="A" Q  ; "All Patients" selected
"RTN","IBCNERPJ",68,0)
 S DIC(0)="ABEQ"
"RTN","IBCNERPJ",69,0)
 S DIC("A")="Select Patient: "
"RTN","IBCNERPJ",70,0)
 S DIC="^DPT("
"RTN","IBCNERPJ",71,0)
PATIENT1 ;
"RTN","IBCNERPJ",72,0)
 D ^DIC
"RTN","IBCNERPJ",73,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=-1) S STOP=1 K IBCNESPC("PAT") Q
"RTN","IBCNERPJ",74,0)
 S INCNESPJ("PAT",$P(Y,U,1))=""
"RTN","IBCNERPJ",75,0)
 I $$ANOTHER G PATIENT1
"RTN","IBCNERPJ",76,0)
 Q
"RTN","IBCNERPJ",77,0)
 ;
"RTN","IBCNERPJ",78,0)
DTRANGE ;
"RTN","IBCNERPJ",79,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPJ",80,0)
 W !
"RTN","IBCNERPJ",81,0)
 S DIR(0)="D^::EX",DIR("B")="Today"
"RTN","IBCNERPJ",82,0)
 S DIR("A")="Earliest Date Received"
"RTN","IBCNERPJ",83,0)
 S DIR("A",1)="RESPONSE RECEIVED DATE RANGE SELECTION:"
"RTN","IBCNERPJ",84,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPJ",85,0)
 S INCNESPJ("BEGDT")=Y
"RTN","IBCNERPJ",86,0)
 ; End date
"RTN","IBCNERPJ",87,0)
DTRANGE1 ;
"RTN","IBCNERPJ",88,0)
 K DIR("A") S DIR("A")="  Latest Date Received"
"RTN","IBCNERPJ",89,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPJ",90,0)
 I Y<INCNESPJ("BEGDT") W !,"     Latest Date must not precede the Earliest Date." G DTRANGE1
"RTN","IBCNERPJ",91,0)
 S INCNESPJ("ENDDT")=Y
"RTN","IBCNERPJ",92,0)
 Q
"RTN","IBCNERPJ",93,0)
 ;
"RTN","IBCNERPJ",94,0)
ANOTHER() ; "Select Another" prompt
"RTN","IBCNERPJ",95,0)
 ; returns 1, if response was "YES", returns 0 otherwise
"RTN","IBCNERPJ",96,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPJ",97,0)
 S DIR("A")="Select Another?" S DIR(0)="Y",DIR("B")="NO"
"RTN","IBCNERPJ",98,0)
 D ^DIR I $D(DIRUT) S STOP=1
"RTN","IBCNERPJ",99,0)
 Q Y
"RTN","IBCNERPJ",100,0)
 ;
"RTN","IBCNERPJ",101,0)
TYPE ;
"RTN","IBCNERPJ",102,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNERPJ",103,0)
 W !
"RTN","IBCNERPJ",104,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNERPJ",105,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNERPJ",106,0)
 S DIR("B")="Excel"
"RTN","IBCNERPJ",107,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNERPJ",108,0)
 S INCNESPJ("TYPE")=Y
"RTN","IBCNERPJ",109,0)
 Q
"RTN","IBCNERPJ",110,0)
 ;
"RTN","IBCNERPJ",111,0)
DEVICE ; Ask user to select device
"RTN","IBCNERPJ",112,0)
 N %ZIS,ZTRTN,ZTDESC,ZTSAVE,ZTSK,ZTQUEUED,ZTREQ,POP
"RTN","IBCNERPJ",113,0)
 ;
"RTN","IBCNERPJ",114,0)
 W !!,"*** You will need a 132 column printer for this report. ***",!
"RTN","IBCNERPJ",115,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBCNERPJ",116,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBCNERPJ",117,0)
 .S ZTRTN="EN^IBCNGPF3",ZTDESC="IB - Interfacility Ins Update Activity Report"
"RTN","IBCNERPJ",118,0)
 .F I="^TMP($J,""PR"",","IBABY","IBOUT" S ZTSAVE(I)=""
"RTN","IBCNERPJ",119,0)
 .D ^%ZTLOAD K IO("Q") D HOME^%ZIS
"RTN","IBCNERPJ",120,0)
 .W !!,$S($D(ZTSK):"This job has been queued as task #"_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBCNERPJ",121,0)
 .K ZTSK,IO("Q")
"RTN","IBCNERPJ",122,0)
 ;
"RTN","IBCNERPJ",123,0)
 ; Compile and print report
"RTN","IBCNERPJ",124,0)
 ;
"RTN","IBCNERPJ",125,0)
 U IO D EN^IBCNERPK(IBCNERTN,.INCNESPJ)
"RTN","IBCNERPJ",126,0)
 ;
"RTN","IBCNERPJ",127,0)
 D ^%ZISC
"RTN","IBCNERPJ",128,0)
 ; 
"RTN","IBCNERPJ",129,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCNERPJ",130,0)
 ;
"RTN","IBCNERPJ",131,0)
ENQ K STOP,INCNESPJ,^TMP($J,IBCNERTN),IBCNERTN
"RTN","IBCNERPJ",132,0)
 Q
"RTN","IBCNERPK")
0^34^B9770810
"RTN","IBCNERPK",1,0)
IBCNERPK ;IB/BAA/AWC - IBCN HL7 RESPONSE REPORT COMPILE;25 Feb 2015
"RTN","IBCNERPK",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNERPK",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPK",4,0)
 ;
"RTN","IBCNERPK",5,0)
 ; variables from IBCNERPL:
"RTN","IBCNERPK",6,0)
 ;   IBCNERTN = "IBCNERPF" (current routine name for queueing the 
"RTN","IBCNERPK",7,0)
 ;                          COMPILE process)
"RTN","IBCNERPK",8,0)
 ;   INCNESPJ("BEGDT") = start date for date range
"RTN","IBCNERPK",9,0)
 ;   INCNESPJ("ENDDT") = end date for date range
"RTN","IBCNERPK",10,0)
 ;   INCNESPJ("PYR",ien) = payer iens for report, if INCNESPJ("PYR")="A", then include all
"RTN","IBCNERPK",11,0)
 ;   INCNESPJ("TYPE") = report type: "R" - Report, "E" - Excel
"RTN","IBCNERPK",12,0)
 ;
"RTN","IBCNERPK",13,0)
 ; Output :
"RTN","IBCNERPK",14,0)
 ;
"RTN","IBCNERPK",15,0)
 ;   Detailed report:
"RTN","IBCNERPK",16,0)
 ;     ^TMP($J,IBCNERTN,Payer Name)=Count 
"RTN","IBCNERPK",17,0)
 ;     ^TMP($J,IBCNERTN,Payer Name,Patient Name,N)=Payer Name ^ Patient Name ^ Date sent  
"RTN","IBCNERPK",18,0)
 ;                      ^ Date Received ^ Trace number ^ Buffer Number
"RTN","IBCNERPK",19,0)
 ;
"RTN","IBCNERPK",20,0)
 Q
"RTN","IBCNERPK",21,0)
 ;
"RTN","IBCNERPK",22,0)
EN(IBCNERTN,INCNESPJ) ; Entry point
"RTN","IBCNERPK",23,0)
 N ALLPYR,ALLPAT,DATE,BDATE,EDATE,RPDATA,RTYPE,SORT,BUSER,CRBUF,TRACE
"RTN","IBCNERPK",24,0)
 S BUSER=$$FIND1^DIC(200,"","X","INTERFACE,IB EIV")
"RTN","IBCNERPK",25,0)
 S ALLPYR=$S($G(INCNESPJ("PYR"))="A":1,1:0)
"RTN","IBCNERPK",26,0)
 S ALLPAT=$S($G(INCNESPJ("PAT"))="A":1,1:0)
"RTN","IBCNERPK",27,0)
 S BDATE=$G(INCNESPJ("BEGDT"))
"RTN","IBCNERPK",28,0)
 S EDATE=$G(INCNESPJ("ENDDT"))
"RTN","IBCNERPK",29,0)
 I EDATE'="",$P(EDATE,".",2)="" S EDATE=$$FMADD^XLFDT(EDATE,0,23,59,59)
"RTN","IBCNERPK",30,0)
 S RTYPE=$G(INCNESPJ("TYPE"))
"RTN","IBCNERPK",31,0)
 I '$D(ZTQUEUED),$G(IOST)["C-" W !!,"Compiling report data ..."
"RTN","IBCNERPK",32,0)
 ; Kill scratch global
"RTN","IBCNERPK",33,0)
 S DATE=$O(^IBCN(365,"AD",BDATE),-1)
"RTN","IBCNERPK",34,0)
 F  S DATE=$O(^IBCN(365,"AD",DATE)) Q:'DATE!(DATE>EDATE)  D PAYERS(DATE,ALLPYR)
"RTN","IBCNERPK",35,0)
 D EN^IBCNERPL(IBCNERTN,.INCNESPJ)
"RTN","IBCNERPK",36,0)
 Q
"RTN","IBCNERPK",37,0)
 ;
"RTN","IBCNERPK",38,0)
PAYERS(DATE,ALLPYR) ; loop through payers
"RTN","IBCNERPK",39,0)
 N PYR
"RTN","IBCNERPK",40,0)
 S PYR=0
"RTN","IBCNERPK",41,0)
 I 'ALLPYR F  S PYR=$O(INCNESPJ("PYR",PYR)) Q:'PYR  D:$O(^IBCN(365,"AD",DATE,PYR,"")) PATIENTS(DATE,PYR,ALLPAT)
"RTN","IBCNERPK",42,0)
 I ALLPYR F  S PYR=$O(^IBCN(365,"AD",DATE,PYR)) Q:'PYR  D PATIENTS(DATE,PYR,ALLPAT)
"RTN","IBCNERPK",43,0)
 Q
"RTN","IBCNERPK",44,0)
 ;
"RTN","IBCNERPK",45,0)
PATIENTS(DATE,PYR,ALLPAT) ; loop through patients
"RTN","IBCNERPK",46,0)
 N PAT
"RTN","IBCNERPK",47,0)
 S PAT=0
"RTN","IBCNERPK",48,0)
 I 'ALLPAT F  S PAT=$O(INCNESPJ("PAT",PAT)) Q:'PAT  D:$O(^IBCN(365,"AD",DATE,PYR,PAT,"")) GETDATA(DATE,PYR,PAT)
"RTN","IBCNERPK",49,0)
 I ALLPAT F  S PAT=$O(^IBCN(365,"AD",DATE,PYR,PAT)) Q:'PAT  D GETDATA(DATE,PYR,PAT)
"RTN","IBCNERPK",50,0)
 Q
"RTN","IBCNERPK",51,0)
 ;
"RTN","IBCNERPK",52,0)
GETDATA(DATE,PYR,PAT) ; loop through responses and compile report
"RTN","IBCNERPK",53,0)
 N RDATE,SDATE,IENS2,INS,NOW,PATNAME,PYRNAME,RIEN,BUFFER,SSN,TOTMES,TQ,VDATE,CNT
"RTN","IBCNERPK",54,0)
 ;
"RTN","IBCNERPK",55,0)
 S NOW=$$NOW^XLFDT
"RTN","IBCNERPK",56,0)
 S RIEN="",CNT=0
"RTN","IBCNERPK",57,0)
 F  S RIEN=$O(^IBCN(365,"AD",DATE,PYR,PAT,RIEN)) Q:'RIEN  D
"RTN","IBCNERPK",58,0)
 .S BUFFER=$P(^IBCN(365,RIEN,0),U,4)
"RTN","IBCNERPK",59,0)
 .I BUFFER="" Q
"RTN","IBCNERPK",60,0)
 .S CRBUF=$P($G(^IBA(355.33,BUFFER,0)),U,2)
"RTN","IBCNERPK",61,0)
 .;I CRBUF'=BUSER Q
"RTN","IBCNERPK",62,0)
 .S IENS2=PAT_","
"RTN","IBCNERPK",63,0)
 .S RDATE=$P(^IBCN(365,RIEN,0),U,7) I RDATE=""!(RDATE<BDATE)!(RDATE>EDATE) Q
"RTN","IBCNERPK",64,0)
 .S SDATE=$P(^IBCN(365,RIEN,0),U,8),TRACE=$P(^IBCN(365,RIEN,0),U,9)
"RTN","IBCNERPK",65,0)
 .S PYRNAME=$P(^IBE(365.12,PYR,0),U),PATNAME=$$GET1^DIQ(2,IENS2,.01,"E")
"RTN","IBCNERPK",66,0)
 .S SSN=$$GET1^DIQ(2,IENS2,.09,"I"),SSN=$E(SSN,6,9)
"RTN","IBCNERPK",67,0)
 .S CNT=CNT+1
"RTN","IBCNERPK",68,0)
 .S ^TMP($J,IBCNERTN,PYRNAME)=$G(^TMP($J,IBCNERTN,PYRNAME))+1
"RTN","IBCNERPK",69,0)
 .S ^TMP($J,IBCNERTN)=$G(^TMP($J,IBCNERTN))+1
"RTN","IBCNERPK",70,0)
 .S ^TMP($J,IBCNERTN,PYRNAME,PATNAME,CNT)=PYRNAME_U_PATNAME_U_SSN_U_SDATE_U_RDATE_U_TRACE_U_BUFFER
"RTN","IBCNERPK",71,0)
 .Q
"RTN","IBCNERPK",72,0)
 Q
"RTN","IBCNERPL")
0^32^B21072359
"RTN","IBCNERPL",1,0)
IBCNERPL ;IB/BAA/AWC - IBCN HL7 RESPONSE REPORT PRINT;25 Feb 2015
"RTN","IBCNERPL",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNERPL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNERPL",4,0)
 ;
"RTN","IBCNERPL",5,0)
 ; variables from IBCNERPJ and IBCNERPK:
"RTN","IBCNERPL",6,0)
 ;   IBCNERTN = "IBCNERPF"
"RTN","IBCNERPL",7,0)
 ;   INCNESPJ("BEGDT") = start date for date range
"RTN","IBCNERPL",8,0)
 ;   INCNESPJ("ENDDT") = end date for date range
"RTN","IBCNERPL",9,0)
 ;   INCNESPJ("PYR",ien) = payer iens for report, if INCNESPJ("PYR")="A", then include all
"RTN","IBCNERPL",10,0)
 ;   IBCNESPJ("PAT",ien) = patient iens for report, if IBCNESPJ("PAT")="A", then include all
"RTN","IBCNERPL",11,0)
 ;   INCNESPJ("TYPE") = report type: "R" - Report, "E" - Excel
"RTN","IBCNERPL",12,0)
 ;
"RTN","IBCNERPL",13,0)
 ; Output :
"RTN","IBCNERPL",14,0)
 ;
"RTN","IBCNERPL",15,0)
 ;   Detailed report:
"RTN","IBCNERPL",16,0)
 ;     ^TMP($J,IBCNERTN,Payer Name)=Count 
"RTN","IBCNERPL",17,0)
 ;     ^TMP($J,IBCNERTN,Payer Name,N)=Payer Name ^ Patient Name ^ Date sent  
"RTN","IBCNERPL",18,0)
 ;                      ^ Date Received ^ Trace number ^ Buffer Number
"RTN","IBCNERPL",19,0)
 ;
"RTN","IBCNERPL",20,0)
 Q
"RTN","IBCNERPL",21,0)
 ;
"RTN","IBCNERPL",22,0)
EN(IBCNERTN,INCNESPJ) ; Entry point
"RTN","IBCNERPL",23,0)
 N CRT,DDATA,DLINE,EORMSG,IBPGC,IBPXT,MAXCNT,NONEMSG,NPROC,SSN,SSNLEN,SRT1,SRT2,TSTAMP
"RTN","IBCNERPL",24,0)
 N TYPE,VDATE,WIDTH,X,Y,SENT,RECVD,STATION,DEFSTAT,DASHES,HD1,HD2,HD3
"RTN","IBCNERPL",25,0)
 N DEFINST,HDR1,LOUT,N,SITE,VISN
"RTN","IBCNERPL",26,0)
 S DEFINST=$P($G(^XTV(8989.3,1,"XUS")),U,17)
"RTN","IBCNERPL",27,0)
 S STATION=$P($G(^DIC(4,DEFINST,99)),U)
"RTN","IBCNERPL",28,0)
 I STATION="" S STATION=DEFINST
"RTN","IBCNERPL",29,0)
 S VISN=$$VISN^IBATUTL(STATION)
"RTN","IBCNERPL",30,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,U,2)_" : "_$P(SITE,U,3)
"RTN","IBCNERPL",31,0)
 S (IBPGC,IBPXT)=0
"RTN","IBCNERPL",32,0)
 S NONEMSG="* * * N O  D A T A  F O U N D * * *"
"RTN","IBCNERPL",33,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCNERPL",34,0)
 S NPROC="Not Processed"
"RTN","IBCNERPL",35,0)
 S TSTAMP=$$FMTE^XLFDT($$NOW^XLFDT,1) ; time of report
"RTN","IBCNERPL",36,0)
 S TYPE=$G(INCNESPJ("TYPE")) ; report type
"RTN","IBCNERPL",37,0)
 S WIDTH=$S(TYPE="E":200,1:132)
"RTN","IBCNERPL",38,0)
 S $P(DASHES,"-",WIDTH)=""
"RTN","IBCNERPL",39,0)
 S HDR1=$$FMTE^XLFDT($G(INCNESPJ("BEGDT")),"5Z")_" - "_$$FMTE^XLFDT($G(INCNESPJ("ENDDT")),"5Z")
"RTN","IBCNERPL",40,0)
 ; Determine IO parameters
"RTN","IBCNERPL",41,0)
 S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNERPL",42,0)
 S:IOST["C-" MAXCNT=IOSL-3,CRT=1
"RTN","IBCNERPL",43,0)
 ; print data
"RTN","IBCNERPL",44,0)
 S SRT1=""
"RTN","IBCNERPL",45,0)
 D HEADER I $G(ZTSTOP)!IBPXT Q
"RTN","IBCNERPL",46,0)
 ; If global does not exist - display No Data message
"RTN","IBCNERPL",47,0)
 I '$D(^TMP($J,IBCNERTN)) D LINE($$FO^IBCNEUT1(NONEMSG,$$CENTER(NONEMSG),"R")) G EXIT
"RTN","IBCNERPL",48,0)
 I TYPE="E" D  Q:$G(ZTSTOP)!IBPXT
"RTN","IBCNERPL",49,0)
 .; excel format
"RTN","IBCNERPL",50,0)
 .F  S SRT1=$O(^TMP($J,IBCNERTN,SRT1)) Q:SRT1=""!$G(ZTSTOP)!IBPXT  D
"RTN","IBCNERPL",51,0)
 ..D LINE("PYRNAME : "_SRT1)
"RTN","IBCNERPL",52,0)
 ..S SRT2="" F  S SRT2=$O(^TMP($J,IBCNERTN,SRT1,SRT2)) Q:SRT2=""!$G(ZTSTOP)!IBPXT  D
"RTN","IBCNERPL",53,0)
 ...S N=0 F  S N=$O(^TMP($J,IBCNERTN,SRT1,SRT2,N)) Q:N=""  D
"RTN","IBCNERPL",54,0)
 ....S LOUT=^TMP($J,IBCNERTN,SRT1,SRT2,N)
"RTN","IBCNERPL",55,0)
 ....S SENT=$$FMTE^XLFDT($P(LOUT,U,4),1),$P(LOUT,U,4)=SENT
"RTN","IBCNERPL",56,0)
 ....S RECVD=$$FMTE^XLFDT($P(LOUT,U,5),1),$P(LOUT,U,5)=RECVD
"RTN","IBCNERPL",57,0)
 ....D LINE(LOUT)
"RTN","IBCNERPL",58,0)
 ...Q
"RTN","IBCNERPL",59,0)
 ..Q
"RTN","IBCNERPL",60,0)
 .Q
"RTN","IBCNERPL",61,0)
 I TYPE="R" D  Q:$G(ZTSTOP)!IBPXT
"RTN","IBCNERPL",62,0)
 .; report format
"RTN","IBCNERPL",63,0)
 .F  S SRT1=$O(^TMP($J,IBCNERTN,SRT1)) Q:SRT1=""!$G(ZTSTOP)!IBPXT  D
"RTN","IBCNERPL",64,0)
 ..D LINE($$FO^IBCNEUT1($S(SRT1=0:NPROC,1:SRT1),85)_"Count = "_^TMP($J,IBCNERTN,SRT1))
"RTN","IBCNERPL",65,0)
 ..S SRT2="" F  S SRT2=$O(^TMP($J,IBCNERTN,SRT1,SRT2)) Q:SRT2=""!$G(ZTSTOP)!IBPXT  D 
"RTN","IBCNERPL",66,0)
 ...S N=0 F  S N=$O(^TMP($J,IBCNERTN,SRT1,SRT2,N)) Q:N=""  D PRINT
"RTN","IBCNERPL",67,0)
 Q
"RTN","IBCNERPL",68,0)
 ;
"RTN","IBCNERPL",69,0)
PRINT ; Get Print Info
"RTN","IBCNERPL",70,0)
 ; ?3,"Payer Name",?27,"Patient Name",?50,"SSN",?56,"Dt Sent",?76,"Dt Rec'd",?96,"Trace #",?115,"Buffer #"
"RTN","IBCNERPL",71,0)
 S DDATA=$G(^TMP($J,IBCNERTN,SRT1,SRT2,N)),DLINE=""
"RTN","IBCNERPL",72,0)
 S $E(DLINE,3,24)=$P(DDATA,U)  ;PAYER
"RTN","IBCNERPL",73,0)
 S $E(DLINE,27,47)=$P(DDATA,U,2)  ;PATIENT
"RTN","IBCNERPL",74,0)
 S $E(DLINE,50,53)=$P(DDATA,U,3)  ;SSN
"RTN","IBCNERPL",75,0)
 S $E(DLINE,56,73)=$$FMTE^XLFDT($P(DDATA,U,4),2)  ;SENT
"RTN","IBCNERPL",76,0)
 S $E(DLINE,76,93)=$$FMTE^XLFDT($P(DDATA,U,5),2)  ;RECEEIVED
"RTN","IBCNERPL",77,0)
 S $E(DLINE,96,112)=$P(DDATA,U,6)  ;TRACE #
"RTN","IBCNERPL",78,0)
 S $E(DLINE,115,132)=$P(DDATA,U,7)  ;BUFFER #
"RTN","IBCNERPL",79,0)
 D LINE(DLINE)
"RTN","IBCNERPL",80,0)
 Q
"RTN","IBCNERPL",81,0)
 ;
"RTN","IBCNERPL",82,0)
EXIT ;
"RTN","IBCNERPL",83,0)
 D LINE($$FO^IBCNEUT1(EORMSG,$$CENTER(EORMSG),"R"))
"RTN","IBCNERPL",84,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D EOL
"RTN","IBCNERPL",85,0)
 Q
"RTN","IBCNERPL",86,0)
 ;
"RTN","IBCNERPL",87,0)
EOL ; display "end of page" message and set exit flag
"RTN","IBCNERPL",88,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LIN
"RTN","IBCNERPL",89,0)
 I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNERPL",90,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNERPL",91,0)
 I $D(DTOUT)!$D(DUOUT) S IBPXT=1
"RTN","IBCNERPL",92,0)
 Q
"RTN","IBCNERPL",93,0)
 ;
"RTN","IBCNERPL",94,0)
HEADER ; print header for each page
"RTN","IBCNERPL",95,0)
 N HDR,OFFSET,SRT
"RTN","IBCNERPL",96,0)
 ;
"RTN","IBCNERPL",97,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D EOL I IBPXT Q
"RTN","IBCNERPL",98,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() S (ZTSTOP,IBPXT)=1 Q
"RTN","IBCNERPL",99,0)
 S IBPGC=IBPGC+1
"RTN","IBCNERPL",100,0)
 W @IOF,!,?1,"HL7 Response Report"
"RTN","IBCNERPL",101,0)
 S HDR=TSTAMP_"  Page: "_IBPGC,OFFSET=(WIDTH-$L(HDR))
"RTN","IBCNERPL",102,0)
 W ?OFFSET,HDR
"RTN","IBCNERPL",103,0)
 W !,?1,HDR1,!,! ;AWC/  IB*2.0*528  Put in a tab and the new lines to correct a Defect
"RTN","IBCNERPL",104,0)
 W ?1,$S($G(INCNESPJ("PYR"))="A":"All",1:"Selected")_" Payers" ;AWC/  IB*2.0*528  Put in a tab to line up the report to correct a Defect
"RTN","IBCNERPL",105,0)
 I TYPE="R" W !,?3,"Payer Name",?27,"Patient Name",?50,"SSN",?56,"Dt Sent",?76,"Dt Rec'd",?96,"Trace #",?115,"Buffer #"
"RTN","IBCNERPL",106,0)
 I TYPE="E" W !,"Payer Name"_U_"Patient Name"_U_"SSN"_U_"Dt Sent"_U_"Dt Rec'd"_U_"Trace #"_U_"Buffer #"
"RTN","IBCNERPL",107,0)
 W !,?1,DASHES
"RTN","IBCNERPL",108,0)
 Q
"RTN","IBCNERPL",109,0)
 ;
"RTN","IBCNERPL",110,0)
LINE(LINE) ; Print line of data
"RTN","IBCNERPL",111,0)
 I $Y+1>MAXCNT D HEADER I $G(ZTSTOP)!IBPXT Q
"RTN","IBCNERPL",112,0)
 W !,?1,LINE
"RTN","IBCNERPL",113,0)
 Q
"RTN","IBCNERPL",114,0)
 ;
"RTN","IBCNERPL",115,0)
CENTER(LINE) ; return length of a centered line
"RTN","IBCNERPL",116,0)
 ; LINE - line to center
"RTN","IBCNERPL",117,0)
 N LENGTH,OFFSET
"RTN","IBCNERPL",118,0)
 S LENGTH=$L(LINE),OFFSET=IOM-$L(LINE)\2
"RTN","IBCNERPL",119,0)
 Q OFFSET+LENGTH
"RTN","IBCNGPF")
0^52^B21375238
"RTN","IBCNGPF",1,0)
IBCNGPF ;ALB/CJS - LIST GRP. PLANS W/O ANNUAL BENEFITS (DRIVER) ;21-JAN-15
"RTN","IBCNGPF",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNGPF",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNGPF",4,0)
 ;
"RTN","IBCNGPF",5,0)
EN ; Describe report
"RTN","IBCNGPF",6,0)
 N I,IBABY,IBAI,IBAIF,IBAPF,IBAPL,IBOUT,IBQUIT
"RTN","IBCNGPF",7,0)
 W !!?5,"This report will generate a list of group insurance plans by company"
"RTN","IBCNGPF",8,0)
 W !?5,"without annual benefits for the year requested.  The definition of"
"RTN","IBCNGPF",9,0)
 W !?5,"""without"" is: either missing year and/or a year (date) is entered"
"RTN","IBCNGPF",10,0)
 W !?5,"but no values within the AB have been completed.",!!
"RTN","IBCNGPF",11,0)
 ; 
"RTN","IBCNGPF",12,0)
 ; Prompt user to select benefit year, insurance companies, plans
"RTN","IBCNGPF",13,0)
 ;
"RTN","IBCNGPF",14,0)
 ; Output from user selections:
"RTN","IBCNGPF",15,0)
 ;
"RTN","IBCNGPF",16,0)
 ; IBABY     -- annual benefit year
"RTN","IBCNGPF",17,0)
 ; IBAI=0    -- user selects insurance companies
"RTN","IBCNGPF",18,0)
 ; IBAI=1    -- run report for all insurance companies with plans
"RTN","IBCNGPF",19,0)
 ; IBAIF=0   -- select active ins. co's.
"RTN","IBCNGPF",20,0)
 ; IBAIF=1   -- select inactive ins. co's.
"RTN","IBCNGPF",21,0)
 ; IBAPL=0   -- whether some or all ins. co's., user selects plans (may be
"RTN","IBCNGPF",22,0)
 ;              all for certain companies, some for other companies)
"RTN","IBCNGPF",23,0)
 ; IBAPL=1   -- whether some or all ins. co's., run report for all plans
"RTN","IBCNGPF",24,0)
 ;              associated with those co's.
"RTN","IBCNGPF",25,0)
 ; IBAPF=0   -- select active plans
"RTN","IBCNGPF",26,0)
 ; IBAPF=1   -- select inactive plans
"RTN","IBCNGPF",27,0)
 ; IBOUT="R" -- report format
"RTN","IBCNGPF",28,0)
 ; IBOUT="E" -- Excel format
"RTN","IBCNGPF",29,0)
 ;
"RTN","IBCNGPF",30,0)
 S IBABY=$$SELY^IBCNGPF1 I 'IBABY G ENQ
"RTN","IBCNGPF",31,0)
 S IBAI=$$SELI^IBCNGPF1 I IBAI<0 G ENQ
"RTN","IBCNGPF",32,0)
 S IBAIF=$$SELIF^IBCNGPF1 I IBAIF<0 G ENQ
"RTN","IBCNGPF",33,0)
 S IBAPL=$$SELP^IBCNGPF1 I IBAPL<0 G ENQ
"RTN","IBCNGPF",34,0)
 S IBAPF=$$SELPF^IBCNGPF1 I IBAIF<0 G ENQ
"RTN","IBCNGPF",35,0)
 ;
"RTN","IBCNGPF",36,0)
 ; obtain plans for selected insurance companies
"RTN","IBCNGPF",37,0)
 ;
"RTN","IBCNGPF",38,0)
 I IBAI,IBAPL G COLLECT
"RTN","IBCNGPF",39,0)
 D START I IBQUIT G ENQ
"RTN","IBCNGPF",40,0)
 ;
"RTN","IBCNGPF",41,0)
COLLECT ;Gather data
"RTN","IBCNGPF",42,0)
 S IBOUT=$$OUT^IBCNGPF1 G:IBOUT="" ENQ   ; Excel or Report format
"RTN","IBCNGPF",43,0)
 ;
"RTN","IBCNGPF",44,0)
 S IBQUIT=0
"RTN","IBCNGPF",45,0)
 D EN^IBCNGPF2
"RTN","IBCNGPF",46,0)
 I '$D(^TMP($J,"IBGP")) W !!,"No results were found." D PAUSE^IBCNGPF3 G ENQ
"RTN","IBCNGPF",47,0)
 ;
"RTN","IBCNGPF",48,0)
 W !!,"There "_$S(^TMP($J,"IBGP")=1:"is ",1:"are ")_^TMP($J,"IBGP")_" insurance compan"_$S(^TMP($J,"IBGP")=1:"y",1:"ies")_" associated with group plans without annual",!,"benefits.",!
"RTN","IBCNGPF",49,0)
 D PAUSE^IBCNGPF3 G ENQ:IBQUIT
"RTN","IBCNGPF",50,0)
 ;
"RTN","IBCNGPF",51,0)
DEVICE ; Ask user to select device
"RTN","IBCNGPF",52,0)
 N %ZIS,POP,ZTRTN,ZTDESC,ZTSAVE
"RTN","IBCNGPF",53,0)
 ;
"RTN","IBCNGPF",54,0)
 I IBOUT="R" W !!,"*** You will need a 132 column printer for this report. ***",!
"RTN","IBCNGPF",55,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBCNGPF",56,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBCNGPF",57,0)
 .S ZTRTN="EN^IBCNGPF3",ZTDESC="IB - LIST OF PLANS BY INSURANCE COMPANY WITHOUT ANNUAL BENEFITS"
"RTN","IBCNGPF",58,0)
 .F I="^TMP($J,""IBGP"",","IBABY","IBOUT" S ZTSAVE(I)=""
"RTN","IBCNGPF",59,0)
 .D ^%ZTLOAD K IO("Q") D HOME^%ZIS
"RTN","IBCNGPF",60,0)
 .W !!,$S($D(ZTSK):"This job has been queued as task #"_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBCNGPF",61,0)
 .K ZTSK,IO("Q")
"RTN","IBCNGPF",62,0)
 ;
"RTN","IBCNGPF",63,0)
 ; Compile and print report
"RTN","IBCNGPF",64,0)
 ;
"RTN","IBCNGPF",65,0)
 U IO D EN^IBCNGPF3
"RTN","IBCNGPF",66,0)
 ;
"RTN","IBCNGPF",67,0)
ENQ K DIRUT,DIROUT,DUOUT,DTOUT,I,IBABY,IBAI,IBAIF,IBAPF,IBAPL,IBOUT,IBQUIT,X,Y,^TMP("IBINC",$J)
"RTN","IBCNGPF",68,0)
 Q
"RTN","IBCNGPF",69,0)
 ;
"RTN","IBCNGPF",70,0)
 ;
"RTN","IBCNGPF",71,0)
START ; Gather plans for all selected companies.
"RTN","IBCNGPF",72,0)
 N A,IBIC,IBCNS,IBCT,IBOK,IBPN,IBSEL,VAUTI,VAUTNALL,VAUTNI,VAUTSTR,VAUTVB
"RTN","IBCNGPF",73,0)
 S (IBCT,IBQUIT)=0 K ^TMP("IBINC",$J)
"RTN","IBCNGPF",74,0)
 ;
"RTN","IBCNGPF",75,0)
 ; - allow user selection of companies if required
"RTN","IBCNGPF",76,0)
 I 'IBAI D  I Y<0 S IBQUIT=1 G STARTQ
"RTN","IBCNGPF",77,0)
 .S DIC="^DIC(36,",DIC("S")="I $D(^IBA(355.3,""B"",Y)),(+$$GET1^DIQ(36,Y,.05,""I"")=IBAIF)"
"RTN","IBCNGPF",78,0)
 .S VAUTSTR="insurance company",VAUTNI=2,VAUTVB="VAUTI",VAUTNALL=1
"RTN","IBCNGPF",79,0)
 .D FIRST^VAUTOMA K DIC,VAUTSTR,VAUTNI,VAUTVB,VAUTNALL Q:Y<0
"RTN","IBCNGPF",80,0)
 .S IBCNS="" F  S IBCNS=$O(VAUTI(IBCNS)) Q:IBCNS=""  S ^TMP("IBINC",$J,$E(VAUTI(IBCNS),1,25),IBCNS)="" I IBAPL D
"RTN","IBCNGPF",81,0)
 ..S IBPN=0 F  S IBPN=$O(^IBA(355.3,"B",IBCNS,IBPN)) Q:'IBPN  I +$$GET1^DIQ(355.3,IBPN,.11,"I")=IBAPF S ^TMP("IBINC",$J,$E(VAUTI(IBCNS),1,25),IBCNS,IBPN)=""
"RTN","IBCNGPF",82,0)
 ;
"RTN","IBCNGPF",83,0)
 I IBAPL G STARTQ
"RTN","IBCNGPF",84,0)
 ;
"RTN","IBCNGPF",85,0)
 ; - gather all companies if required
"RTN","IBCNGPF",86,0)
 I IBAI S A=0 F  S A=$O(^IBA(355.3,"B",A)) Q:'A  I +$$GET1^DIQ(36,A,.05,"I")=IBAIF S ^TMP("IBINC",$J,$E($$GET1^DIQ(36,A,.01),1,25),A)=""
"RTN","IBCNGPF",87,0)
 ;
"RTN","IBCNGPF",88,0)
 ; - gather plans for selected companies
"RTN","IBCNGPF",89,0)
 S IBIC="" F  S IBIC=$O(^TMP("IBINC",$J,IBIC)) Q:IBIC=""!IBQUIT  D
"RTN","IBCNGPF",90,0)
 .S IBCNS="" F  S IBCNS=$O(^TMP("IBINC",$J,IBIC,IBCNS)) Q:IBCNS=""!(IBQUIT)  D
"RTN","IBCNGPF",91,0)
 ..S IBCT=IBCT+1 W !!,"Insurance Company # "_IBCT_": "_IBIC
"RTN","IBCNGPF",92,0)
 ..D OK^IBCNSM3 Q:IBQUIT  I 'IBOK K ^TMP("IBINC",$J,IBIC,IBCNS) S IBAI=0 Q
"RTN","IBCNGPF",93,0)
 ..W "   ...building a list of plans..."
"RTN","IBCNGPF",94,0)
 ..K IBSEL,^TMP($J,"IBSEL") D LKP^IBCNSU2(IBCNS,1,1,.IBSEL,0,IBAPF) Q:IBQUIT
"RTN","IBCNGPF",95,0)
 ..I '$O(^TMP($J,"IBSEL",0)) K ^TMP("IBINC",$J,IBIC,IBCNS) S IBAI=0 Q
"RTN","IBCNGPF",96,0)
 ..;
"RTN","IBCNGPF",97,0)
 ..; - set plans into an array
"RTN","IBCNGPF",98,0)
 ..S IBPN=0 F  S IBPN=$O(^TMP($J,"IBSEL",IBPN)) Q:'IBPN  I +$$GET1^DIQ(355.3,IBPN,.11,"I")=IBAPF S ^TMP("IBINC",$J,IBIC,IBCNS,IBPN)=""
"RTN","IBCNGPF",99,0)
 ;
"RTN","IBCNGPF",100,0)
STARTQ K A,IBCNS,IBIC,IBCT,IBOK,IBPN,IBSEL,VAUTI,^TMP($J,"IBSEL")
"RTN","IBCNGPF",101,0)
 Q
"RTN","IBCNGPF1")
0^53^B16592637
"RTN","IBCNGPF1",1,0)
IBCNGPF1 ;ALB/CJS - LIST GRP. PLANS W/O ANNUAL BENEFITS (DRIVER 1) ;21-JAN-15 
"RTN","IBCNGPF1",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNGPF1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNGPF1",4,0)
 ;
"RTN","IBCNGPF1",5,0)
SELY() ; Prompt user to select annual benefit year
"RTN","IBCNGPF1",6,0)
 ;
"RTN","IBCNGPF1",7,0)
 ; IBY -- annual benefit year
"RTN","IBCNGPF1",8,0)
 ;
"RTN","IBCNGPF1",9,0)
 N DIR,X,Y,DIRUT,DUOUT,IBD,IBY
"RTN","IBCNGPF1",10,0)
 S IBY=""
"RTN","IBCNGPF1",11,0)
 S IBD=+$O(^IBA(355.4,"B",""),-1),IBD=$E($$FMTE^XLFDT(IBD,"7D"),1,4)
"RTN","IBCNGPF1",12,0)
 S DIR("?")="Enter the year for which you would like to list Group Plans without Annual Benefits"
"RTN","IBCNGPF1",13,0)
 S DIR("A")="Select the Annual Benefit Year",DIR("B")=IBD
"RTN","IBCNGPF1",14,0)
 S DIR(0)="DO^::EM" D ^DIR S IBY=$E(Y,1,3)_"1232" I $D(DIRUT)!$D(DUOUT) S IBY=""
"RTN","IBCNGPF1",15,0)
 ;
"RTN","IBCNGPF1",16,0)
SELYQ Q IBY
"RTN","IBCNGPF1",17,0)
 ;
"RTN","IBCNGPF1",18,0)
SELI() ; Prompt user to select all or subset of insurance companies 
"RTN","IBCNGPF1",19,0)
 ; Count ins. companies with plans
"RTN","IBCNGPF1",20,0)
 ;
"RTN","IBCNGPF1",21,0)
 ; IBV2=0 -- user selects insurance companies
"RTN","IBCNGPF1",22,0)
 ; IBV2=1 -- run report for all insurance companies with plans
"RTN","IBCNGPF1",23,0)
 ;
"RTN","IBCNGPF1",24,0)
 N A,B,IBV2
"RTN","IBCNGPF1",25,0)
 S (A,B)=0 F  S A=$O(^IBA(355.3,"B",A)) Q:'A  S B=B+1
"RTN","IBCNGPF1",26,0)
 S DIR(0)="SA^1:1. List All "_B_" Ins. Companies;2:2. List Only Ins. Companies That You Select"
"RTN","IBCNGPF1",27,0)
 W !!,"     There are "_B_" insurance companies associated with plans.",!
"RTN","IBCNGPF1",28,0)
 S DIR("A",1)="1. List All "_B_" Ins. Companies"
"RTN","IBCNGPF1",29,0)
 S DIR("A",2)="2. List Only Ins. Companies That You Select"
"RTN","IBCNGPF1",30,0)
 S DIR("A")="     SELECT 1 or 2:  "
"RTN","IBCNGPF1",31,0)
 S DIR("?",1)="Enter a code from the list:  1 or 2.  Only insurance"
"RTN","IBCNGPF1",32,0)
 S DIR("?")="companies with one or more plans can be selected."
"RTN","IBCNGPF1",33,0)
 D ^DIR K DIR I Y<0!$D(DIRUT) S IBV2=-1 G SELIQ
"RTN","IBCNGPF1",34,0)
 S IBV2=(+Y=1) K Y
"RTN","IBCNGPF1",35,0)
SELIQ Q IBV2
"RTN","IBCNGPF1",36,0)
 ;
"RTN","IBCNGPF1",37,0)
SELIF() ; Prompt user to select active or inactive insurance companies
"RTN","IBCNGPF1",38,0)
 ;
"RTN","IBCNGPF1",39,0)
 ; IBIF=0 -- user selects active insurance companies
"RTN","IBCNGPF1",40,0)
 ; IBIF=1 -- user selects inactive insurance companies
"RTN","IBCNGPF1",41,0)
 ;
"RTN","IBCNGPF1",42,0)
 N IBIF
"RTN","IBCNGPF1",43,0)
 S DIR(0)="SA^1:1. Active;2:2. Inactive"
"RTN","IBCNGPF1",44,0)
 W !!,"     Select a Filter for Insurance Company:",!
"RTN","IBCNGPF1",45,0)
 S DIR("A",1)="1. Active"
"RTN","IBCNGPF1",46,0)
 S DIR("A",2)="2. Inactive"
"RTN","IBCNGPF1",47,0)
 S DIR("A")="     SELECT 1 or 2:  "
"RTN","IBCNGPF1",48,0)
 S DIR("?",1)="Enter a code from the list:  1 to include active insurance companies"
"RTN","IBCNGPF1",49,0)
 S DIR("?")="or 2 to include inactive insurance companies."
"RTN","IBCNGPF1",50,0)
 D ^DIR K DIR I Y<0!$D(DIRUT) S IBIF=-1 G SELIFQ
"RTN","IBCNGPF1",51,0)
 S IBIF=(+Y=2) K Y
"RTN","IBCNGPF1",52,0)
SELIFQ Q IBIF
"RTN","IBCNGPF1",53,0)
 ;
"RTN","IBCNGPF1",54,0)
SELP() ; Prompt user to select all or subset of plans
"RTN","IBCNGPF1",55,0)
 ;
"RTN","IBCNGPF1",56,0)
 ; IBV3=0 -- whether some or all ins. co's., user selects plans (may be
"RTN","IBCNGPF1",57,0)
 ;           all for certain companies, some for other companies
"RTN","IBCNGPF1",58,0)
 ; IBV3=1 -- whether some or all ins. co's., run report for all plans
"RTN","IBCNGPF1",59,0)
 ;           associated with those co's.
"RTN","IBCNGPF1",60,0)
 ;
"RTN","IBCNGPF1",61,0)
 N IBV3
"RTN","IBCNGPF1",62,0)
 S DIR(0)="YO",DIR("A")="There are "_$P(^IBA(355.3,0),"^",4)_" plans.  List all plans for each company",DIR("B")="Yes"
"RTN","IBCNGPF1",63,0)
 S DIR("?",1)="If you say yes, the report will list all of the plans for each company."
"RTN","IBCNGPF1",64,0)
 S DIR("?",2)="If you selected 2. List Insurance Plans by Company With Subscriber"
"RTN","IBCNGPF1",65,0)
 S DIR("?",3)="Information and 1. List All "_$P(^IBA(355.3,0),"^",4)_" Ins. Companies,"
"RTN","IBCNGPF1",66,0)
 S DIR("?",4)="this will result in the most complete report possible.  However, it"
"RTN","IBCNGPF1",67,0)
 S DIR("?",5)="may take awhile to run.  If you say no, you must make plan selections"
"RTN","IBCNGPF1",68,0)
 S DIR("?")="for each individual company (anywhere from one plan to all)."
"RTN","IBCNGPF1",69,0)
 W ! D ^DIR W ! K DIR I Y<0!$D(DIRUT) S IBV3=-1 G SELPQ
"RTN","IBCNGPF1",70,0)
 S IBV3=+Y K Y
"RTN","IBCNGPF1",71,0)
SELPQ Q IBV3
"RTN","IBCNGPF1",72,0)
 ;
"RTN","IBCNGPF1",73,0)
SELPF() ; Prompt user to select active or inactive group plans
"RTN","IBCNGPF1",74,0)
 ;
"RTN","IBCNGPF1",75,0)
 ; IBPF=0 -- user selects active insurance companies
"RTN","IBCNGPF1",76,0)
 ; IBPF=1 -- user selects inactive insurance companies
"RTN","IBCNGPF1",77,0)
 ;
"RTN","IBCNGPF1",78,0)
 N IBPF
"RTN","IBCNGPF1",79,0)
 S DIR(0)="SA^1:1. Active;2:2. Inactive"
"RTN","IBCNGPF1",80,0)
 W !!,"     Select a Filter for Group:",!
"RTN","IBCNGPF1",81,0)
 S DIR("A",1)="1. Active"
"RTN","IBCNGPF1",82,0)
 S DIR("A",2)="2. Inactive"
"RTN","IBCNGPF1",83,0)
 S DIR("A")="     SELECT 1 or 2:  "
"RTN","IBCNGPF1",84,0)
 S DIR("?",1)="Enter a code from the list:  1 to include active group plans"
"RTN","IBCNGPF1",85,0)
 S DIR("?")="or 2 to include inactive group plans."
"RTN","IBCNGPF1",86,0)
 D ^DIR K DIR I Y<0!$D(DIRUT) S IBPF=-1 G SELPFQ
"RTN","IBCNGPF1",87,0)
 S IBPF=(+Y=2) K Y
"RTN","IBCNGPF1",88,0)
 ;
"RTN","IBCNGPF1",89,0)
SELPFQ Q IBPF
"RTN","IBCNGPF1",90,0)
 ;
"RTN","IBCNGPF1",91,0)
OUT() ;
"RTN","IBCNGPF1",92,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNGPF1",93,0)
 W !
"RTN","IBCNGPF1",94,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNGPF1",95,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNGPF1",96,0)
 S DIR("B")="Report"
"RTN","IBCNGPF1",97,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCNGPF1",98,0)
 Q Y
"RTN","IBCNGPF2")
0^54^B19487325
"RTN","IBCNGPF2",1,0)
IBCNGPF2 ;ALB/CJS - LIST GRP. PLANS W/O ANNUAL BENEFITS (COMPILE) ;21-JAN-15
"RTN","IBCNGPF2",2,0)
V ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNGPF2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNGPF2",4,0)
 ;
"RTN","IBCNGPF2",5,0)
EN ; Queued Entry Point for Report.
"RTN","IBCNGPF2",6,0)
 ;  Required variable input:  IBAI, IBAPL, IBABY, IBAIF, IBAPF, IBOUT
"RTN","IBCNGPF2",7,0)
 ;  ^TMP("IBINC",$J) required if not all companies and plans selected
"RTN","IBCNGPF2",8,0)
 ;
"RTN","IBCNGPF2",9,0)
 N IBABN,IBCN,IBCNS,IBEND,IBFOUND,IBI,IBIC1,IBIP1,IBSEL,IBXREF,IBGPN,IBQ3,IBQ4
"RTN","IBCNGPF2",10,0)
 ;
"RTN","IBCNGPF2",11,0)
 ; - compile report data
"RTN","IBCNGPF2",12,0)
 S IBI=0,IBEND=-$E($G(IBABY),1,3)_"0101"
"RTN","IBCNGPF2",13,0)
 ;
"RTN","IBCNGPF2",14,0)
 K ^TMP($J,"IBGP"),^TMP($J,"IBGPL")
"RTN","IBCNGPF2",15,0)
 ;
"RTN","IBCNGPF2",16,0)
 ; - user wanted all companies and plans
"RTN","IBCNGPF2",17,0)
 I +$G(IBAI),+$G(IBAPL) D  G PRINT
"RTN","IBCNGPF2",18,0)
 . S IBIP1=0 F  S IBFOUND=0,IBIP1=$O(^IBA(355.3,IBIP1)) Q:'IBIP1  S IBIC1=$$GET1^DIQ(355.3,IBIP1,.01,"I") I +IBIC1 D  I 'IBFOUND S IBGPN=$E($$GET1^DIQ(355.3,IBIP1,.01),1,25) I IBGPN]"" S ^TMP($J,"IBGPL",IBGPN,IBIC1,IBIP1)=""
"RTN","IBCNGPF2",19,0)
 . . ; - check against active/inactive selection
"RTN","IBCNGPF2",20,0)
 . . I +$$GET1^DIQ(355.3,IBIP1,.11,"I")'=$G(IBAPF) S IBFOUND=1 Q
"RTN","IBCNGPF2",21,0)
 . . I +$$GET1^DIQ(36,IBIC1,.05,"I")'=$G(IBAIF) S IBFOUND=1 Q
"RTN","IBCNGPF2",22,0)
 . . ; - traverse Annual Benefits APY cross-reference:
"RTN","IBCNGPF2",23,0)
 . . ;    ^IBA(355.4,"APY",Group Insurance Plan IEN,-AB date,AB IEN)
"RTN","IBCNGPF2",24,0)
 . . S IBXREF="^IBA(355.4,""APY"","_IBIP1_")" F  S IBXREF=$Q(@IBXREF) Q:(IBXREF="")!($QS(IBXREF,2)'="APY")!($QS(IBXREF,3)'=IBIP1)!($QS(IBXREF,4)>IBEND)  I $QS(IBXREF,4)>-IBABY D  Q:IBFOUND
"RTN","IBCNGPF2",25,0)
 . . . S IBABN=$QS(IBXREF,5) I $D(^IBA(355.4,IBABN)) D ABCHK Q
"RTN","IBCNGPF2",26,0)
 ;
"RTN","IBCNGPF2",27,0)
 ; - user selected companies or plans
"RTN","IBCNGPF2",28,0)
 ;    ^TMP("IBINC",$J,Ins. Co. Name,Ins. Co. IEN,Group Plan IEN)
"RTN","IBCNGPF2",29,0)
 S IBSEL=$NA(^TMP("IBINC",$J)) F  S IBFOUND=0,IBSEL=$Q(@IBSEL) Q:(IBSEL="")!($QS(IBSEL,2)'=$J)  S IBIP1=$QS(IBSEL,5)  I +IBIP1 D  I 'IBFOUND S IBQ3=$QS(IBSEL,3),IBQ4=$QS(IBSEL,4) I IBQ3]""&(IBQ4]"") S ^TMP($J,"IBGPL",IBQ3,IBQ4,IBIP1)=""
"RTN","IBCNGPF2",30,0)
 . ; - traverse Annual Benefits APY cross-reference:
"RTN","IBCNGPF2",31,0)
 . ;    ^IBA(355.4,"APY",Group Insurance Plan IEN,-AB date,AB IEN)
"RTN","IBCNGPF2",32,0)
 . S IBXREF="^IBA(355.4,""APY"","_IBIP1_")" F  S IBXREF=$Q(@IBXREF) Q:(IBXREF="")!($QS(IBXREF,2)'="APY")!($QS(IBXREF,3)'=IBIP1)!($QS(IBXREF,4)>IBEND)  I $QS(IBXREF,4)>-IBABY D  Q:IBFOUND
"RTN","IBCNGPF2",33,0)
 . . S IBABN=$QS(IBXREF,5) I $D(^IBA(355.4,IBABN)) D ABCHK Q
"RTN","IBCNGPF2",34,0)
 ;
"RTN","IBCNGPF2",35,0)
PRINT ; - print report
"RTN","IBCNGPF2",36,0)
 D GATH
"RTN","IBCNGPF2",37,0)
 K ^TMP("IBINC",$J)
"RTN","IBCNGPF2",38,0)
 K IBABN,IBCNS,IBEND,IBFOUND,IBI,IBIC1,IBIP1
"RTN","IBCNGPF2",39,0)
 Q
"RTN","IBCNGPF2",40,0)
 ;
"RTN","IBCNGPF2",41,0)
 ;
"RTN","IBCNGPF2",42,0)
ABCHK ; Check for existing AB values
"RTN","IBCNGPF2",43,0)
 N FLD
"RTN","IBCNGPF2",44,0)
 F FLD=.05,.06 I $$GET1^DIQ(355.4,IBABN,FLD)]"" S IBFOUND=1 Q
"RTN","IBCNGPF2",45,0)
 Q:IBFOUND
"RTN","IBCNGPF2",46,0)
 F FLD=2:1:6 I $TR($G(^IBA(355.4,IBABN,FLD)),"^","")]"" S IBFOUND=1 Q
"RTN","IBCNGPF2",47,0)
 Q
"RTN","IBCNGPF2",48,0)
 ;
"RTN","IBCNGPF2",49,0)
 ;
"RTN","IBCNGPF2",50,0)
GATH ; Gather all data for a company.
"RTN","IBCNGPF2",51,0)
 S IBCN="" F  S IBCN=$O(^TMP($J,"IBGPL",IBCN)) Q:IBCN=""  D
"RTN","IBCNGPF2",52,0)
 .S IBCNS="" F  S IBCNS=$O(^TMP($J,"IBGPL",IBCN,IBCNS)) Q:'IBCNS  D
"RTN","IBCNGPF2",53,0)
 ..S IBI=IBI+1 D PLAN ; gather plan info
"RTN","IBCNGPF2",54,0)
 ..; - set final company info
"RTN","IBCNGPF2",55,0)
 ..S ^TMP($J,"IBGP",IBI)=$$COMPINF(IBCNS),^TMP($J,"IBGP")=$G(^TMP($J,"IBGP"))+1
"RTN","IBCNGPF2",56,0)
 ;
"RTN","IBCNGPF2",57,0)
 K ^TMP($J,"IBGPL")
"RTN","IBCNGPF2",58,0)
 Q
"RTN","IBCNGPF2",59,0)
 ;
"RTN","IBCNGPF2",60,0)
 ;
"RTN","IBCNGPF2",61,0)
COMPINF(IBCNS) ; Return formatted Insurance Company information
"RTN","IBCNGPF2",62,0)
 ;  Input:  IBCNS  --  Pointer to the insurance company in file #36
"RTN","IBCNGPF2",63,0)
 ; Output:  company name ^ addr ^ city/st/zip ^ phone ^ precert ^ reimburse? ^ type of coverage
"RTN","IBCNGPF2",64,0)
 ;
"RTN","IBCNGPF2",65,0)
 N ACT,ADDR,CSTZ,CTYPE,NAME,PHONE,PRECERT,REIMB,ST,Z
"RTN","IBCNGPF2",66,0)
 S NAME=$$GET1^DIQ(36,IBCNS,.01)
"RTN","IBCNGPF2",67,0)
 S ADDR=$$GET1^DIQ(36,IBCNS,.111) I ADDR="" S ADDR="<Street Addr. 1 Missing>"
"RTN","IBCNGPF2",68,0)
 S Z=$$GET1^DIQ(36,IBCNS,.116)
"RTN","IBCNGPF2",69,0)
 S ST=$$GET1^DIQ(36,IBCNS,.115,"I") D
"RTN","IBCNGPF2",70,0)
 . I ST']"" S ST="<STATE MISSING>" Q
"RTN","IBCNGPF2",71,0)
 . S ST=$$GET1^DIQ(5,ST,1) I ST']"" S ST="<STATE MISSING>"
"RTN","IBCNGPF2",72,0)
 S CSTZ=$$GET1^DIQ(36,IBCNS,.114)_", "_ST_"  "_$E(Z,1,5)_$S($E(Z,6,9)]"":"-"_$E(Z,6,9),1:"")
"RTN","IBCNGPF2",73,0)
 S PHONE=$$GET1^DIQ(36,IBCNS,.131)
"RTN","IBCNGPF2",74,0)
 S PRECERT=$$GET1^DIQ(36,IBCNS,.133)
"RTN","IBCNGPF2",75,0)
 S REIMB=$$GET1^DIQ(36,IBCNS,1)
"RTN","IBCNGPF2",76,0)
 S CTYPE=$$GET1^DIQ(36,IBCNS,.13)
"RTN","IBCNGPF2",77,0)
 Q NAME_U_ADDR_U_CSTZ_U_PHONE_U_PRECERT_U_REIMB_U_CTYPE
"RTN","IBCNGPF2",78,0)
 ;
"RTN","IBCNGPF2",79,0)
 ;
"RTN","IBCNGPF2",80,0)
PLAN ; Gather Insurance Plan information
"RTN","IBCNGPF2",81,0)
 ;  Input: ^TMP($J,"IBGPL",Ins. Co. Name,Ins. Co. IEN,Plan IEN) -- Selected plans with no Annual Benefits
"RTN","IBCNGPF2",82,0)
 ;         IBCNS -- Pointer to the insurance company in file #36
"RTN","IBCNGPF2",83,0)
 ;         initialized counters
"RTN","IBCNGPF2",84,0)
 ; 
"RTN","IBCNGPF2",85,0)
 N IBPTR
"RTN","IBCNGPF2",86,0)
 I $G(IBCN)]"",$G(IBCNS)]"" S IBPTR=0 F  S IBPTR=$O(^TMP($J,"IBGPL",IBCN,IBCNS,IBPTR)) Q:'IBPTR  D
"RTN","IBCNGPF2",87,0)
 . I +$G(IBI) S ^TMP($J,"IBGP",IBI,IBPTR)=$$PLANINF(IBPTR)
"RTN","IBCNGPF2",88,0)
 Q
"RTN","IBCNGPF2",89,0)
 ;
"RTN","IBCNGPF2",90,0)
PLANINF(PLAN) ; Return formatted Insurance Plan information.
"RTN","IBCNGPF2",91,0)
 ;  Input:  PLAN  --  Pointer to the plan in file #355.3
"RTN","IBCNGPF2",92,0)
 ; Output:  plan name ^ number ^ act/inact ^ last edited by ^ plan type
"RTN","IBCNGPF2",93,0)
 ;
"RTN","IBCNGPF2",94,0)
 N ACT,NAME,NUM,TY,USER
"RTN","IBCNGPF2",95,0)
 S NAME=$$GET1^DIQ(355.3,PLAN,2.01) S:NAME="" NAME="<NO GROUP NAME>"
"RTN","IBCNGPF2",96,0)
 S NUM=$$GET1^DIQ(355.3,PLAN,2.02) S:NUM="" NUM="<NO GROUP NUMBER>"
"RTN","IBCNGPF2",97,0)
 S ACT=$S($$GET1^DIQ(355.3,PLAN,.11,"I"):"IN",1:"")_"ACTIVE"
"RTN","IBCNGPF2",98,0)
 S USER=$$GET1^DIQ(355.3,PLAN,1.06)
"RTN","IBCNGPF2",99,0)
 S TY=$$GET1^DIQ(355.3,PLAN,.09)
"RTN","IBCNGPF2",100,0)
 Q NAME_U_NUM_U_ACT_U_USER_U_TY
"RTN","IBCNGPF3")
0^55^B8501170
"RTN","IBCNGPF3",1,0)
IBCNGPF3 ;ALB/CJS - LIST GRP. PLANS W/O ANNUAL BENEFITS (PRINT) ;21-JAN-15
"RTN","IBCNGPF3",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNGPF3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNGPF3",4,0)
 ;
"RTN","IBCNGPF3",5,0)
 ; Print the report.
"RTN","IBCNGPF3",6,0)
 ;  Required Input:  Global print array ^TMP($J,"IBGP"
"RTN","IBCNGPF3",7,0)
 ;                   local variables IBABY, IBOUT
"RTN","IBCNGPF3",8,0)
 ; 
"RTN","IBCNGPF3",9,0)
EN N IBC,IBHDT,IBI,IBP,IBPAG,IBPD,IBQUIT,%,ZTQUEUED,ZTREQ
"RTN","IBCNGPF3",10,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCNGPF3",11,0)
 S (IBI,IBQUIT,IBPAG)=0
"RTN","IBCNGPF3",12,0)
 D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12))
"RTN","IBCNGPF3",13,0)
 S IBABY=$E($$FMTE^XLFDT(IBABY,"7D"),1,4)
"RTN","IBCNGPF3",14,0)
 ;
"RTN","IBCNGPF3",15,0)
 ;Excel header
"RTN","IBCNGPF3",16,0)
 I IBOUT="E" D PHDL
"RTN","IBCNGPF3",17,0)
 ;
"RTN","IBCNGPF3",18,0)
 ; ^TMP($J,"IBGP",Counter)=ins. co. name^addr^city, st  zip^phone^precert phone^reimburse?^type of coverage
"RTN","IBCNGPF3",19,0)
 ;  ^TMP($J,"IBGP",Counter,Plan IEN)=group name^group number^act/inact^last edited by^plan type
"RTN","IBCNGPF3",20,0)
 F  S IBI=$O(^TMP($J,"IBGP",IBI)) Q:'IBI  S IBC=$G(^(IBI)) D:IBOUT="R" COMP D  Q:IBQUIT
"RTN","IBCNGPF3",21,0)
 .S IBP=0 F  S IBP=$O(^TMP($J,"IBGP",IBI,IBP)) Q:'IBP  S IBPD=$G(^(IBP)) D  Q:IBQUIT
"RTN","IBCNGPF3",22,0)
 ..I IBOUT="E" W !,IBC_U_IBPD Q
"RTN","IBCNGPF3",23,0)
 ..I $Y>(IOSL-8) D PAUSE Q:IBQUIT  D COMP
"RTN","IBCNGPF3",24,0)
 ..D PLAN
"RTN","IBCNGPF3",25,0)
 ;
"RTN","IBCNGPF3",26,0)
 I 'IBQUIT D PAUSE
"RTN","IBCNGPF3",27,0)
 ;
"RTN","IBCNGPF3",28,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCNGPF3",29,0)
 D ^%ZISC
"RTN","IBCNGPF3",30,0)
 K IBC,IBHDT,IBI,IBP,IBPAG,IBPD,IBQUIT,^TMP($J,"IBGP")
"RTN","IBCNGPF3",31,0)
 Q
"RTN","IBCNGPF3",32,0)
 ;
"RTN","IBCNGPF3",33,0)
 ;
"RTN","IBCNGPF3",34,0)
COMP ; Print Company header
"RTN","IBCNGPF3",35,0)
 I IBPAG D PAUSE
"RTN","IBCNGPF3",36,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBCNGPF3",37,0)
 S IBPAG=IBPAG+1
"RTN","IBCNGPF3",38,0)
 W !,"LIST OF GROUP PLANS BY INSURANCE COMPANY WITHOUT ANNUAL BENEFITS"
"RTN","IBCNGPF3",39,0)
 W ?IOM-34,IBHDT,?IOM-10,"Page: ",IBPAG
"RTN","IBCNGPF3",40,0)
 W !,"Benefit Year Selected: ",IBABY
"RTN","IBCNGPF3",41,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCNGPF3",42,0)
 ;
"RTN","IBCNGPF3",43,0)
 ; - sub-header
"RTN","IBCNGPF3",44,0)
 W !,"INSURANCE COMPANY NAME: ",$P(IBC,"^"),?61,"PHONE: ",$P(IBC,"^",4)
"RTN","IBCNGPF3",45,0)
 W !?24,$P(IBC,"^",2),?61,"PRECERT PHONE: ",$P(IBC,"^",5)
"RTN","IBCNGPF3",46,0)
 W !?24,$P(IBC,"^",3)
"RTN","IBCNGPF3",47,0)
 W !!,"REIMBURSE",?20,"TYPE OF COVERAGE",?40,"GROUP NAME",?62,"GROUP NUMBER",?81,"ACTIVE/INACTIVE",?98,"LAST PERSON TO EDIT",?119,"TYPE OF PLAN"
"RTN","IBCNGPF3",48,0)
 Q
"RTN","IBCNGPF3",49,0)
 ;
"RTN","IBCNGPF3",50,0)
PLAN ; Print plan information.
"RTN","IBCNGPF3",51,0)
 W !!,$E($P(IBC,U,6),1,18),?20,$E($P(IBC,U,7),1,18),?40,$P(IBPD,U),?62,$P(IBPD,U,2),?81,$P(IBPD,U,3),?98,$E($P(IBPD,U,4),1,19),?119,$E($P(IBPD,U,5),1,13)
"RTN","IBCNGPF3",52,0)
 Q
"RTN","IBCNGPF3",53,0)
 ;
"RTN","IBCNGPF3",54,0)
PAUSE ; Pause for screen output.
"RTN","IBCNGPF3",55,0)
 N IBJJ,DIR
"RTN","IBCNGPF3",56,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBCNGPF3",57,0)
 ;F IBJJ=$Y:1:(IOSL-8) W !   ; IB*2.0*528 - CJS - Fix scrolling problem
"RTN","IBCNGPF3",58,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT,IBJJ
"RTN","IBCNGPF3",59,0)
 Q
"RTN","IBCNGPF3",60,0)
 ;
"RTN","IBCNGPF3",61,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBCNGPF3",62,0)
 N X
"RTN","IBCNGPF3",63,0)
 S X="Insurance Company Name^Street Address^City, ST  Zip^Phone^Precertification Phone^Reimburse?^Type of Coverage^"
"RTN","IBCNGPF3",64,0)
 S X=X_"Group Name^Group Number^Active/Inactive^Last Person to Edit^Type of Plan"
"RTN","IBCNGPF3",65,0)
 W X
"RTN","IBCNGPF3",66,0)
 K X
"RTN","IBCNGPF3",67,0)
 Q
"RTN","IBCNICB")
0^130^B139240420
"RTN","IBCNICB",1,0)
IBCNICB ;ALB/SBW - Update utilities for the ICB interface ;1 SEP 2009
"RTN","IBCNICB",2,0)
 ;;2.0;INTEGRATED BILLING;**413,416,528**;21-MAR-94;Build 163
"RTN","IBCNICB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNICB",4,0)
 ;
"RTN","IBCNICB",5,0)
ACCEPAPI(RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA,IBMVINS,IBMVGRP,IBMVPOL,IBNEWINS,IBNEWGRP,IBNEWPOL,IVMREPTR,IBELIG) ;
"RTN","IBCNICB",6,0)
 ;Provides API to be called by the Insurance Capture Buffer (ICB) 
"RTN","IBCNICB",7,0)
 ;application to move buffer data in Insurance Files then cleanup
"RTN","IBCNICB",8,0)
 ;
"RTN","IBCNICB",9,0)
 ;The call to PROCESS^IBCNBAR and embedded Sub calls are updated to 
"RTN","IBCNICB",10,0)
 ;provide data in the RESULT parameter and suppress user I/O when 
"RTN","IBCNICB",11,0)
 ;function is called by ICB.
"RTN","IBCNICB",12,0)
 ;Input
"RTN","IBCNICB",13,0)
 ;  IBBUFDA  - INSURANCE BUFFER (#355.33) file internal entry number
"RTN","IBCNICB",14,0)
 ;             (IEN) (Required)
"RTN","IBCNICB",15,0)
 ;  DFN      - PATIENT (#2) file IEN (Required)
"RTN","IBCNICB",16,0)
 ;  IBINSDA  - INSURANCE COMPANY (#36) File IEN if not adding new entry
"RTN","IBCNICB",17,0)
 ;             (Optional)
"RTN","IBCNICB",18,0)
 ;  IBGRPDA  - GROUP INSURANCE PLAN (#355.3) File IEN if not adding new
"RTN","IBCNICB",19,0)
 ;             entry (Optional)
"RTN","IBCNICB",20,0)
 ;  IBPOLDA  - INSURANCE TYPE (#2.312) sub-file of PATIENT (#2) IEN if
"RTN","IBCNICB",21,0)
 ;             not adding new entry (Optional)
"RTN","IBCNICB",22,0)
 ;  IBMVINS  - Type for INSURANCE (Required)
"RTN","IBCNICB",23,0)
 ;     1=Merge, 2=Overwrite, 3=Replace, 4=Unsupported
"RTN","IBCNICB",24,0)
 ;  IBMVGRP  - Type for GROUP (Optional)
"RTN","IBCNICB",25,0)
 ;     1=Merge, 2=Overwrite, 3=Replace, 4=Unsupported
"RTN","IBCNICB",26,0)
 ;  IBMVPOL  - Type for POLICY (Optional)
"RTN","IBCNICB",27,0)
 ;     1=Merge, 2=Overwrite, 3=Replace, 4=Unsupported
"RTN","IBCNICB",28,0)
 ;  IBNEWINS - Add new INSURANCE COMPANY flag (non-zero means add)
"RTN","IBCNICB",29,0)
 ;  IBNEWGRP - Add new GROUP INSURANCE PLAN flag (non-zero means add)
"RTN","IBCNICB",30,0)
 ;  IBNEWPOL - Add new patient insurance policy (non-zero means add)
"RTN","IBCNICB",31,0)
 ;  IVMREPTR - IVM REASONS FOR NOT UPLOADING (#301.91) IEN (Optional)
"RTN","IBCNICB",32,0)
 ;
"RTN","IBCNICB",33,0)
 ;OUTPUT
"RTN","IBCNICB",34,0)
 ;  RESULT   - Returned Parameter Array with IENS of new entries and/or 
"RTN","IBCNICB",35,0)
 ;             errors/warning.
"RTN","IBCNICB",36,0)
 ;     RESULT(0) = -1^error message
"RTN","IBCNICB",37,0)
 ;     RESULT(0) =   0           -Move worked
"RTN","IBCNICB",38,0)
 ;     RESULT(0) =   0 ^ warning message ^ warning message ^ 
"RTN","IBCNICB",39,0)
 ;                   warning message ^ warning message
"RTN","IBCNICB",40,0)
 ;             - Move worked but there may be zero to 4 warning messages
"RTN","IBCNICB",41,0)
 ;     RESULT(1) = "IBINSDA^" IEN of new Insurance Company (#36) File
"RTN","IBCNICB",42,0)
 ;     RESULT(1,"ERR",#) - Array with any FM errors when data updated
"RTN","IBCNICB",43,0)
 ;                         from file 355.33 to 36.
"RTN","IBCNICB",44,0)
 ;     RESULT(2) = "IBGRPDA^" IEN of new GROUP INSURANCE PLAN (#355.3)
"RTN","IBCNICB",45,0)
 ;                            File
"RTN","IBCNICB",46,0)
 ;     RESULT(2,"ERR",#) - Array with any FM errors when data updated
"RTN","IBCNICB",47,0)
 ;                         from file 355.33 to 355.3.
"RTN","IBCNICB",48,0)
 ;     RESULT(3) = "IBPOLDA^" IEN of new INSURANCE TYPE (#2.312) sub-file
"RTN","IBCNICB",49,0)
 ;                  of PATIENT (#2) IEN
"RTN","IBCNICB",50,0)
 ;     RESULT(3,"ERR",#) - Array with any FM errors when data updated
"RTN","IBCNICB",51,0)
 ;                         from file 355.33 to 2.312.
"RTN","IBCNICB",52,0)
 ;     RESULT(4) Contains the results of the call to UPDPOL^IBCNICB which
"RTN","IBCNICB",53,0)
 ;               is used to update a new group into an existing patient
"RTN","IBCNICB",54,0)
 ;               policy entry when applicable.
"RTN","IBCNICB",55,0)
 ;     RESULT(4) =-1^error message      
"RTN","IBCNICB",56,0)
 ;     RESULT(4) =0 ^ message that process was successful or not required
"RTN","IBCNICB",57,0)
 ;
"RTN","IBCNICB",58,0)
 N IBSUPRES,IBUFSTAT,IBX
"RTN","IBCNICB",59,0)
 I '$D(IBELIG) S IBELIG=0
"RTN","IBCNICB",60,0)
 ;Set IBSUPRES to suppress screen I/O within ACCEPT
"RTN","IBCNICB",61,0)
 S IBSUPRES=1,IBUFSTAT=$P($G(^IBA(355.33,$G(IBBUFDA),0)),U,4)
"RTN","IBCNICB",62,0)
 ;
"RTN","IBCNICB",63,0)
 S RESULT(0)="-1^INSURANCE BUFFER (#355.33) IEN required" Q:'$G(IBBUFDA)
"RTN","IBCNICB",64,0)
 S RESULT(0)="-1^INSURANCE BUFFER ENTRY PREVIOUSLY PROCESSED"
"RTN","IBCNICB",65,0)
 Q:"~A~R~"[("~"_IBUFSTAT_"~")
"RTN","IBCNICB",66,0)
 S RESULT(0)="-1^INSURANCE BUFFER ENTRY STATUS SHOULD BE ENTERED"
"RTN","IBCNICB",67,0)
 Q:IBUFSTAT'="E"
"RTN","IBCNICB",68,0)
 S RESULT(0)="-1^PATIENT (#2) IEN required" Q:'$G(DFN)
"RTN","IBCNICB",69,0)
 S IBINSDA=$G(IBINSDA),IBGRPDA=$G(IBGRPDA),IBPOLDA=$G(IBPOLDA)
"RTN","IBCNICB",70,0)
 S IBMVINS=$G(IBMVINS,2),IBMVGRP=$G(IBMVGRP,2),IBMVPOL=$G(IBMVPOL,2)
"RTN","IBCNICB",71,0)
 S IBNEWINS=$G(IBNEWINS),IBNEWGRP=$G(IBNEWGRP),IBNEWPOL=$G(IBNEWPOL)
"RTN","IBCNICB",72,0)
 ;
"RTN","IBCNICB",73,0)
 S RESULT(0)="-1^Passed INSURANCE COMPANY (#36) entry doesn't exist"
"RTN","IBCNICB",74,0)
 I +IBINSDA,$G(^DIC(36,IBINSDA,0))="" Q
"RTN","IBCNICB",75,0)
 S RESULT(0)="-1^Passed GROUP INSURANCE PLAN (#355.3) entry doesn't exist"
"RTN","IBCNICB",76,0)
 I +IBGRPDA,$G(^IBA(355.3,IBGRPDA,0))="" Q
"RTN","IBCNICB",77,0)
 S RESULT(0)="-1^Passed Patient INSURANCE TYPE (#2.312) entry doesn't exist"
"RTN","IBCNICB",78,0)
 I +IBPOLDA,$G(^DPT(DFN,.312,IBPOLDA,0))="" Q
"RTN","IBCNICB",79,0)
 S RESULT(0)="-1^Passed GROUP INSURANCE PLAN (#355.3) entry points to different INSURANCE COMPANY (#36) entry"
"RTN","IBCNICB",80,0)
 I +IBGRPDA,+IBINSDA,+$G(^IBA(355.3,IBGRPDA,0))'=IBINSDA Q
"RTN","IBCNICB",81,0)
 S RESULT(0)="-1^Individual Policy Patient required to be Patient DFN when Group Insurance Plan is not Group Policy"
"RTN","IBCNICB",82,0)
 I +IBGRPDA S IBX=$G(^IBA(355.3,IBGRPDA,0)) I $P(IBX,U,2)=0,+$P(IBX,U,10),$P(IBX,U,10)'=DFN Q
"RTN","IBCNICB",83,0)
 ;
"RTN","IBCNICB",84,0)
 ;If existing GROUP INSURANCE PLAN (#355.3) entry is being changed from 
"RTN","IBCNICB",85,0)
 ;a group plan to individual plan with other subscribers, send error 
"RTN","IBCNICB",86,0)
 ;message and abort update
"RTN","IBCNICB",87,0)
 S RESULT(0)="-1^Can't change GROUP INSURANCE PLAN from Group Plan to Individual Plan when there are subscribers"
"RTN","IBCNICB",88,0)
 I +IBGRPDA,$P(IBX,U,2)=1,$P($G(^IBA(355.33,+$G(IBBUFDA),40)),U,1)'=1,$$SUBS^IBCNSJ(IBINSDA,IBGRPDA)>1 Q
"RTN","IBCNICB",89,0)
 ;
"RTN","IBCNICB",90,0)
 D PROCESS^IBCNBAR
"RTN","IBCNICB",91,0)
 Q
"RTN","IBCNICB",92,0)
 ;
"RTN","IBCNICB",93,0)
REJECAPI(RESULT,IBBUFDA,IVMREPTR) ;
"RTN","IBCNICB",94,0)
 ;Provides API to be called by the Insurance Capture Buffer (ICB) 
"RTN","IBCNICB",95,0)
 ;application to reject buffer entry.
"RTN","IBCNICB",96,0)
 ;The REJPROC^IBCNBAR call and embedded Sub calls are updated to 
"RTN","IBCNICB",97,0)
 ;provide data in the RESULT parameter and suppress I/O when function 
"RTN","IBCNICB",98,0)
 ;is called by ICB.
"RTN","IBCNICB",99,0)
 ;Input:
"RTN","IBCNICB",100,0)
 ;   IBBUFDA  - INSURANCE BUFFER (#355.33) file internal entry number
"RTN","IBCNICB",101,0)
 ;              (required)
"RTN","IBCNICB",102,0)
 ;   IVMREPTR - IVM REASONS FOR NOT UPLOADING (#301.91) File internal
"RTN","IBCNICB",103,0)
 ;              internal entry number (Optional)
"RTN","IBCNICB",104,0)
 ;Output:
"RTN","IBCNICB",105,0)
 ;   RESULT   - Returned parameter variable with errors messages if
"RTN","IBCNICB",106,0)
 ;              problems with the reject processing. Format:
"RTN","IBCNICB",107,0)
 ;     REJECT = -1 ^ error message
"RTN","IBCNICB",108,0)
 ;     REJECT =  0                     - Reject worked
"RTN","IBCNICB",109,0)
 ;     REJECT =  0 ^ warning message   - Reject process worked but there
"RTN","IBCNICB",110,0)
 ;                                       is a warning message
"RTN","IBCNICB",111,0)
 ;
"RTN","IBCNICB",112,0)
 N IBSUPRES
"RTN","IBCNICB",113,0)
 ;Set IBSUPRES to suppress screen I/O within REJECT
"RTN","IBCNICB",114,0)
 S IBSUPRES=1
"RTN","IBCNICB",115,0)
 S RESULT="-1^INSURANCE BUFFER IEN required" Q:'$G(IBBUFDA)
"RTN","IBCNICB",116,0)
 S RESULT="-1^INSURANCE BUFFER ENTRY PREVIOUSLY PROCESSED"
"RTN","IBCNICB",117,0)
 Q:"~A~R~"[("~"_$$GET1^DIQ(355.33,IBBUFDA,.04,"I")_"~")
"RTN","IBCNICB",118,0)
 D REJPROC^IBCNBAR
"RTN","IBCNICB",119,0)
 Q
"RTN","IBCNICB",120,0)
 ;
"RTN","IBCNICB",121,0)
UPDTICB(RESULT,DFN,IBPOLDA,IBGRPDA,IBPOLCOM,IBPOLBIL,IBPLAN,IBELEC,IBGPCOM,IBFTF,IBFTFVAL) ;
"RTN","IBCNICB",122,0)
 ;Updates additional fields for ICB Interface
"RTN","IBCNICB",123,0)
 ;
"RTN","IBCNICB",124,0)
 ;Input:
"RTN","IBCNICB",125,0)
 ;  DFN      - PATIENT (#2) file IEN (Required)
"RTN","IBCNICB",126,0)
 ;  IBGRPDA  - GROUP INSURANCE PLAN (#355.3) File IEN (Optional)
"RTN","IBCNICB",127,0)
 ;  IBPOLDA  - INSURANCE TYPE (#2.312) sub-file of PATIENT (#2) IEN 
"RTN","IBCNICB",128,0)
 ;             (Optional)
"RTN","IBCNICB",129,0)
 ;  IBPOLCOM - Data to be filed into the COMMENT - SUBSCRIBER POLICY 
"RTN","IBCNICB",130,0)
 ;              MULTIPLE (2.312, 1.18) optional
"RTN","IBCNICB",131,0)
 ;  IBPOLBIL - Data to be filed into the POLICY NOT BILLABLE  (#3.04)
"RTN","IBCNICB",132,0)
 ;             field of the 2.312 sub-file. (Optional)
"RTN","IBCNICB",133,0)
 ;             Corresponds to the Internal codes in 3.04 field of 
"RTN","IBCNICB",134,0)
 ;             2.312 sub-file: '0' FOR NO; '1' FOR YES;
"RTN","IBCNICB",135,0)
 ;  IBPLAN   - Data to be filed in PLAN FILING TIME FRAME (#.13) field 
"RTN","IBCNICB",136,0)
 ;             of 355.3 file (Optional)
"RTN","IBCNICB",137,0)
 ;  IBELEC   - Data to be file in ELECTRONIC PLAN TYPE  (#.15) field 
"RTN","IBCNICB",138,0)
 ;             of 355.3 file (Optional)
"RTN","IBCNICB",139,0)
 ;             Corresponds to the Internal Codes in .15 field of 355.3 
"RTN","IBCNICB",140,0)
 ;             file
"RTN","IBCNICB",141,0)
 ;  IBGPCOM  - Group Plan Comment array that contains the word
"RTN","IBCNICB",142,0)
 ;             processing data to be filed the COMMENTS (#11) word-
"RTN","IBCNICB",143,0)
 ;             processing field of  355.3 file. (Optional)
"RTN","IBCNICB",144,0)
 ;              Example:  IBGPCOM(1)="This is line 1"
"RTN","IBCNICB",145,0)
 ;                        IBGPCOM(2)="This is line 2"
"RTN","IBCNICB",146,0)
 ;  IBFTF    - Data to be filed in the PLAN STANDARD FTF (#.16) field of
"RTN","IBCNICB",147,0)
 ;             355.3 file (Optional)
"RTN","IBCNICB",148,0)
 ;             Corresponds to the Internal Entry Number of the entry in 
"RTN","IBCNICB",149,0)
 ;             the INSURANCE FILING TIME FRAME (#355.13) File.
"RTN","IBCNICB",150,0)
 ;  IBFTFVAL - Data to be filed in the PLAN STANDARD FTF VALUE (#.17)
"RTN","IBCNICB",151,0)
 ;             field of 355.3 file (Optional - Calling application 
"RTN","IBCNICB",152,0)
 ;             responsible to pass value if required for Plan Standard
"RTN","IBCNICB",153,0)
 ;             FTF) 
"RTN","IBCNICB",154,0)
 ;
"RTN","IBCNICB",155,0)
 ;Output:
"RTN","IBCNICB",156,0)
 ;  RESULT - Returned Parameter Array with results of call
"RTN","IBCNICB",157,0)
 ;   RESULT = 0 ^ No data to update
"RTN","IBCNICB",158,0)
 ;   RESULT(1) = -1^ error with Insurance Type (#2.312) file update
"RTN","IBCNICB",159,0)
 ;   RESULT(1) = 0                   - Insurance Type update worked
"RTN","IBCNICB",160,0)
 ;   RESULT(2) = -1^ error with GROUP INSURANCE PLAN (#355.3) file update
"RTN","IBCNICB",161,0)
 ;   RESULT(2) = 0                   - Group Insurance Plan update worked
"RTN","IBCNICB",162,0)
 ;
"RTN","IBCNICB",163,0)
 ;Update Patient Policy Comment (#1.08) and/or 
"RTN","IBCNICB",164,0)
 ;Policy Not Billable (#3.04) fields in 2.312 subfile
"RTN","IBCNICB",165,0)
 I $G(IBPOLCOM)]""!($G(IBPOLBIL)]"") D
"RTN","IBCNICB",166,0)
 . N IBIENS,IBFDA
"RTN","IBCNICB",167,0)
 . I $G(DFN)']"" S RESULT(1)="-1^PATIENT (#2) DFN not passed" Q
"RTN","IBCNICB",168,0)
 . I $G(IBPOLDA)'>0 S RESULT(1)="-1^INSURANCE TYPE (#2.312) sub-file IEN not defined" Q
"RTN","IBCNICB",169,0)
 . I +IBPOLDA,$G(^DPT(DFN,.312,IBPOLDA,0))="" S RESULT(0)="-1^Passed Patient INSURANCE TYPE (#2.312) entry doesn't exist" Q
"RTN","IBCNICB",170,0)
 . L +^DPT(DFN,.312,IBPOLDA):5 I '$T S RESULT(1)="-1^INSURANCE TYPE (#2.312) sub-file entry locked, data not updated" Q
"RTN","IBCNICB",171,0)
 . S IBIENS=+IBPOLDA_","_+DFN_","
"RTN","IBCNICB",172,0)
 . I $G(IBPOLBIL)]"",$$EXTERNAL^DILFD(2.312,3.04,"",IBPOLBIL)']"" S RESULT(1)="-1^POLICY NOT BILLABLE ("_IBPOLBIL_") not a valid value",IBPOLBIL=""
"RTN","IBCNICB",173,0)
 . S:$G(IBPOLBIL)]"" IBFDA(2.312,IBIENS,3.04)=IBPOLBIL
"RTN","IBCNICB",174,0)
 . I $D(IBFDA)>0 D FILE^DIE(,"IBFDA") S:$D(RESULT(1))'>0 RESULT(1)=0
"RTN","IBCNICB",175,0)
 . D PPCOMM(DFN,IBPOLDA,IBPOLCOM,.RESULT)
"RTN","IBCNICB",176,0)
 . L -^DPT(DFN,.312,IBPOLDA)
"RTN","IBCNICB",177,0)
 ;
"RTN","IBCNICB",178,0)
 ;Update Plan Filing Time Frame (#.13), Electronic Plan Type (#.15)
"RTN","IBCNICB",179,0)
 ;Plan Standard FTF (#.16), Plan Standard FTF Value (#.17), and/or
"RTN","IBCNICB",180,0)
 ;Group Plan Comments (#11) fields in 355.3 file
"RTN","IBCNICB",181,0)
 I $G(IBPLAN)]""!($G(IBELEC)]"")!($D(IBGPCOM)>0)!($G(IBFTF)]"")!($G(IBFTFVAL)]"") D
"RTN","IBCNICB",182,0)
 . N IBIENS,IBFDA
"RTN","IBCNICB",183,0)
 . I $G(IBGRPDA)'>0 S RESULT(2)="-1^GROUP INSURANCE PLAN (#355.3) file IEN not defined" Q
"RTN","IBCNICB",184,0)
 . I +IBGRPDA,$G(^IBA(355.3,IBGRPDA,0))="" S RESULT(2)="-1^Passed GROUP INSURANCE PLAN (#355.3) entry doesn't exist" Q
"RTN","IBCNICB",185,0)
 . L +^IBA(355.3,IBGRPDA):5 I '$T S RESULT(2)="-1^GROUP INSURANCE PLAN (#355.3) file entry locked, data not updated" Q
"RTN","IBCNICB",186,0)
 . S IBIENS=+IBGRPDA_","
"RTN","IBCNICB",187,0)
 . ; Consistency Checks for Plan Standard FTF and FTF VALUE fields
"RTN","IBCNICB",188,0)
 . I $G(IBELEC)]"",$$EXTERNAL^DILFD(355.3,.15,"",IBELEC)']"" S RESULT(2)="-1^ELECTRONIC PLAN TYPE ("_IBELEC_") not a valid value",IBELEC=""
"RTN","IBCNICB",189,0)
 . I $G(IBFTFVAL)]"",$G(IBFTF)']"" S RESULT(2)="-1^PLAN STANDARD FTF should be passed with PLAN STANDARD FTF VALUE",IBFTFVAL=""
"RTN","IBCNICB",190,0)
 . I $G(IBFTF)]"",$$EXTERNAL^DILFD(355.3,.16,"",IBFTF)']"" S RESULT(2)="-1^PLAN STANDARD FTF ("_IBFTF_") not a valid value",IBFTF=""
"RTN","IBCNICB",191,0)
 . I $G(IBFTF)]"",$$GET1^DIQ(355.13,+IBFTF_",",.02,"I")=1,$G(IBFTFVAL)'>0 S RESULT(2)="-1^Valid PLAN STANDARD FTF VALUE not passed for "_$$GET1^DIQ(355.13,+IBFTF,.01,"E"),IBFTF="",IBFTFVAL=""
"RTN","IBCNICB",192,0)
 . ;
"RTN","IBCNICB",193,0)
 . S:$G(IBPLAN)]"" IBFDA(355.3,IBIENS,.13)=IBPLAN
"RTN","IBCNICB",194,0)
 . S:$G(IBELEC)]"" IBFDA(355.3,IBIENS,.15)=IBELEC
"RTN","IBCNICB",195,0)
 . S:$G(IBFTF)]"" IBFDA(355.3,IBIENS,.16)=IBFTF
"RTN","IBCNICB",196,0)
 . S:$G(IBFTFVAL)]"" IBFDA(355.3,IBIENS,.17)=IBFTFVAL
"RTN","IBCNICB",197,0)
 . I $D(IBFDA)>0 D FILE^DIE(,"IBFDA") S:$D(RESULT(2))'>0 RESULT(2)=0
"RTN","IBCNICB",198,0)
 . ;
"RTN","IBCNICB",199,0)
 . ;Update Group Plan Comments (#11) word processing field in 355.3 file
"RTN","IBCNICB",200,0)
 . I $O(IBGPCOM(""))>0 D WP^DIE(355.3,+IBGRPDA_",",11,,"IBGPCOM") S:$D(RESULT(2))'>0 RESULT(2)=0
"RTN","IBCNICB",201,0)
 . L -^IBA(355.3,IBGRPDA)
"RTN","IBCNICB",202,0)
 I $D(RESULT(1))'>0&($D(RESULT(2))'>0) S RESULT="0^No data to update"
"RTN","IBCNICB",203,0)
 Q
"RTN","IBCNICB",204,0)
 ;
"RTN","IBCNICB",205,0)
PPCOMM(DFN,IBPOLDA,IBPOLCOM,RESULT) ; ib*2*528   record patient policy comments
"RTN","IBCNICB",206,0)
 ; Input:
"RTN","IBCNICB",207,0)
 ;   DFN      = patient IEN
"RTN","IBCNICB",208,0)
 ;   IBPOLDA  = ien of selected INSURANCE POLICY at ^DPT("_DFN_",.312,
"RTN","IBCNICB",209,0)
 ;   IBPOLCOM = patient policy COMMENT data
"RTN","IBCNICB",210,0)
 ;
"RTN","IBCNICB",211,0)
 ; Output:
"RTN","IBCNICB",212,0)
 ;   RESULT   = Returned Parameter Array with results of call
"RTN","IBCNICB",213,0)
 ;
"RTN","IBCNICB",214,0)
 N IBDT,IBVCOM
"RTN","IBCNICB",215,0)
 S IBVCOM=""
"RTN","IBCNICB",216,0)
 ;
"RTN","IBCNICB",217,0)
 ; -- get the last comment made for the policy within VistA
"RTN","IBCNICB",218,0)
 S IBDT=$O(^DPT(DFN,.312,IBPOLDA,13,"B",""),-1)
"RTN","IBCNICB",219,0)
 I IBDT]"" S IBCDA=$O(^DPT(DFN,.312,IBPOLDA,13,"B",IBDT,""),-1) S IBVCOM=$G(^DPT(DFN,.312,IBPOLDA,13,IBCDA,1))
"RTN","IBCNICB",220,0)
 ;
"RTN","IBCNICB",221,0)
 ; -- no VistA comments for patient policy so go add the new ICB comment
"RTN","IBCNICB",222,0)
 I IBVCOM="",IBPOLCOM]"" D ADCOM(DFN,IBPOLDA,IBPOLCOM,.RESULT) Q
"RTN","IBCNICB",223,0)
 ;
"RTN","IBCNICB",224,0)
 ; -- the last comment within VistA is the same comment as the new ICB comment
"RTN","IBCNICB",225,0)
 I IBVCOM=IBPOLCOM Q
"RTN","IBCNICB",226,0)
 ;
"RTN","IBCNICB",227,0)
 ; -- VistA comment is different from ICB comment so add the ICB comment
"RTN","IBCNICB",228,0)
 D ADCOM(DFN,IBPOLDA,IBPOLCOM,.RESULT)
"RTN","IBCNICB",229,0)
 Q
"RTN","IBCNICB",230,0)
 ;
"RTN","IBCNICB",231,0)
ADCOM(DFN,IBPOLDA,IBPOLCOM,RESULT) ; add new entry to the COMMENT - SUBSCRIBER POLICY multiple
"RTN","IBCNICB",232,0)
 ; Input:
"RTN","IBCNICB",233,0)
 ;   DFN      = patient IEN
"RTN","IBCNICB",234,0)
 ;   IBPOLDA  = ien of INSURANCE POLICY at ^DPT("_DFN_",.312,
"RTN","IBCNICB",235,0)
 ;   IBPOLCOM = patient policy COMMENT data
"RTN","IBCNICB",236,0)
 ;   DUZ      = user IEN - system wide variable   
"RTN","IBCNICB",237,0)
 ;
"RTN","IBCNICB",238,0)
 ; Output:
"RTN","IBCNICB",239,0)
 ;   RESULT   = Returned Parameter Array with results of call
"RTN","IBCNICB",240,0)
 ;
"RTN","IBCNICB",241,0)
 ; -- lock the COMMENT - SUBSCRIBER POLICY multiple so that previous comments can't be edited
"RTN","IBCNICB",242,0)
 L +^DPT(DFN,.312,IBPOLDA,13):5 I '$T S RESULT(1)="-1^INSURANCE TYPE (#2.312,1.18) sub-file entry locked, data not updated" Q
"RTN","IBCNICB",243,0)
 ;
"RTN","IBCNICB",244,0)
 N FDA,IENS,DIERR
"RTN","IBCNICB",245,0)
 ;
"RTN","IBCNICB",246,0)
 ; -- populate the FDA array with data
"RTN","IBCNICB",247,0)
 S IENS="+1,"_IBPOLDA_","_DFN_","
"RTN","IBCNICB",248,0)
 S FDA(2.342,IENS,.01)=$$NOW^XLFDT()
"RTN","IBCNICB",249,0)
 S FDA(2.342,IENS,.02)=DUZ
"RTN","IBCNICB",250,0)
 S FDA(2.342,IENS,.03)=IBPOLCOM
"RTN","IBCNICB",251,0)
 ;
"RTN","IBCNICB",252,0)
 ; -- update comment
"RTN","IBCNICB",253,0)
 D UPDATE^DIE(,"FDA",,"DIERR")
"RTN","IBCNICB",254,0)
 ;
"RTN","IBCNICB",255,0)
 ; -- check for error
"RTN","IBCNICB",256,0)
 I $D(DIERR) S RESULT(1)="-1^INSURANCE TYPE (#2.312,1.18) error adding comment to INSURANCE TYPE (#2.312,1.18)"
"RTN","IBCNICB",257,0)
 E  S RESULT(1)=0
"RTN","IBCNICB",258,0)
 ;
"RTN","IBCNICB",259,0)
 ; -- unlock comment multiple
"RTN","IBCNICB",260,0)
 L -^DPT(DFN,.312,IBPOLDA,13)
"RTN","IBCNICB",261,0)
 Q
"RTN","IBCNICB",262,0)
 ;
"RTN","IBCNICB",263,0)
EDCOM(IBPOLDA,IBPOLCOM,IBDT) ; edit the existing entry at 2.312,1.18 multiple
"RTN","IBCNICB",264,0)
 ; input - IBPOLDA = ien of INSURANCE POLICY at ^DPT("_DFN_",.312,
"RTN","IBCNICB",265,0)
 ;         IBDT = date/time that comment was made
"RTN","IBCNICB",266,0)
 N DA,DIE,DR,IBNM
"RTN","IBCNICB",267,0)
 ; retrieve the latest comment made by the user
"RTN","IBCNICB",268,0)
 S DA=$O(^DPT(DFN,.312,IBPOLDA,13,"BB",DUZ,IBDT,""),-1)
"RTN","IBCNICB",269,0)
 S DIE="^DPT("_DFN_",.312,"_IBPOLDA_",13,"
"RTN","IBCNICB",270,0)
 S DA(2)=DFN,DA(1)=IBPOLDA
"RTN","IBCNICB",271,0)
 ;  retrieve the latest comment made by the user
"RTN","IBCNICB",272,0)
 S IBNM=$$GET1^DIQ(200,DUZ_",",.01,"E")
"RTN","IBCNICB",273,0)
 I $G(^DPT(DFN,.312,IBPOLDA,13,DA,1))]"" S DR=".01///"_$$NOW^XLFDT()_";.02///"_IBNM_";.03///"_IBPOLCOM
"RTN","IBCNICB",274,0)
 E  S DR=".01///@;.02///@"
"RTN","IBCNICB",275,0)
 D ^DIE
"RTN","IBCNICB",276,0)
 Q
"RTN","IBCNICB",277,0)
UPDPOL(RESULT,IBBUFDA,DFN,IBINSDA,IBGRPDA,IBPOLDA) ;update a new group into 
"RTN","IBCNICB",278,0)
 ;an existing patient policy entry for ICB interface
"RTN","IBCNICB",279,0)
 ;Input
"RTN","IBCNICB",280,0)
 ;  IBBUFDA  - INSURANCE BUFFER (#355.33) file internal entry number
"RTN","IBCNICB",281,0)
 ;             (IEN) (Required)
"RTN","IBCNICB",282,0)
 ;  DFN      - PATIENT (#2) file IEN (Required)
"RTN","IBCNICB",283,0)
 ;  IBINSDA  - INSURANCE COMPANY (#36) File IEN if not adding new entry
"RTN","IBCNICB",284,0)
 ;             (Optional)
"RTN","IBCNICB",285,0)
 ;  IBGRPDA  - GROUP INSURANCE PLAN (#355.3) File IEN if not adding new
"RTN","IBCNICB",286,0)
 ;             entry (Required)
"RTN","IBCNICB",287,0)
 ;  IBPOLDA  - INSURANCE TYPE (#2.312) sub-file of PATIENT (#2) IEN if
"RTN","IBCNICB",288,0)
 ;             not adding new entry (Required)
"RTN","IBCNICB",289,0)
 ;Output:
"RTN","IBCNICB",290,0)
 ;  RESULT(4) - Returned Parameter Array with results of call
"RTN","IBCNICB",291,0)
 ;     RESULT(4) =-1^error message
"RTN","IBCNICB",292,0)
 ;     RESULT(4) =0 ^ message that process was successful or not require
"RTN","IBCNICB",293,0)
 ;
"RTN","IBCNICB",294,0)
 N IBPAT
"RTN","IBCNICB",295,0)
 I $G(IBBUFDA)'>0 S RESULT(4)="-1^INSURANCE BUFFER (#355.33) IEN required" Q
"RTN","IBCNICB",296,0)
 I $G(DFN)'>0 S RESULT(4)="-1^PATIENT (#2) IEN required" Q
"RTN","IBCNICB",297,0)
 I $G(IBPOLDA)'>0 S RESULT(4)="-1^INSURANCE TYPE (#2.312) SUB-FILE IEN required" Q
"RTN","IBCNICB",298,0)
 I $G(^DPT(DFN,.312,IBPOLDA,0))'>0 S RESULT(4)="-1^PATIENT INSURANCE TYPE(#2.312) entry doesn't exist" Q
"RTN","IBCNICB",299,0)
 I $G(IBGRPDA)'>0 S RESULT(4)="-1^GROUP INSURANCE PLAN (#355.3) IEN required" Q
"RTN","IBCNICB",300,0)
 ;
"RTN","IBCNICB",301,0)
 ; NO changes required
"RTN","IBCNICB",302,0)
 S IBPAT=$G(^DPT(DFN,.312,IBPOLDA,0))
"RTN","IBCNICB",303,0)
 I $G(IBINSDA)>0,$P(IBPAT,U,1)=IBINSDA,$P(IBPAT,U,18)=IBGRPDA S RESULT(4)="0^NO CHANGE REQUIRE" Q
"RTN","IBCNICB",304,0)
 I $G(IBINSDA)'>0,$P(IBPAT,U,18)=IBGRPDA S RESULT(4)="0^NO CHANGE REQUIRE" Q
"RTN","IBCNICB",305,0)
 ;
"RTN","IBCNICB",306,0)
 ;Additional error checks
"RTN","IBCNICB",307,0)
 I $G(^IBA(355.3,IBGRPDA,0))="" S RESULT(4)="-1^GROUP INSURANCE PLAN (#355.3) entry doesn't exist" Q
"RTN","IBCNICB",308,0)
 I $G(IBINSDA)>0,$G(^DIC(36,IBINSDA,0))="" S RESULT(4)="-1^INSURANCE COMPANY (#36) entry doesn't exist" Q
"RTN","IBCNICB",309,0)
 I $G(IBINSDA)>0,$P($G(^IBA(355.3,IBGRPDA,0)),U,1)'=IBINSDA S RESULT(4)="-1^GROUP INSURANCE PLAN (#355.3) entry points to different INSURANCE COMPANY (#36) entry" Q
"RTN","IBCNICB",310,0)
 I $G(IBINSDA)'>0,$P($G(^IBA(355.3,IBGRPDA,0)),U,1)'=$P(IBPAT,U,1) S RESULT(4)="-1^GROUP INSURANCE PLAN (#355.3) entry points to different INSURANCE COMPANY (#36) entry" Q
"RTN","IBCNICB",311,0)
 ;
"RTN","IBCNICB",312,0)
 D CLEANUP
"RTN","IBCNICB",313,0)
 ;
"RTN","IBCNICB",314,0)
 L +^DPT(DFN,.312,IBPOLDA):5 I '$T S RESULT(4)="-1^INSURANCE TYPE (#2.312) SUB-FILE ENTRY LOCKED, DATA NOT UPDATED" Q
"RTN","IBCNICB",315,0)
 ;
"RTN","IBCNICB",316,0)
 N IBXIFN,IBFIELDS,IBERR
"RTN","IBCNICB",317,0)
 S IBXIFN=IBPOLDA_","_DFN_","
"RTN","IBCNICB",318,0)
 I $G(IBINSDA) S IBFIELDS(2.312,IBXIFN,.01)=IBINSDA
"RTN","IBCNICB",319,0)
 S IBFIELDS(2.312,IBXIFN,.18)=IBGRPDA ;policy's group/plan always update 
"RTN","IBCNICB",320,0)
 Q:'$D(IBFIELDS)
"RTN","IBCNICB",321,0)
 ;Source
"RTN","IBCNICB",322,0)
 S IBFIELDS(2.312,IBXIFN,1.09)=$P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,3)
"RTN","IBCNICB",323,0)
 ;Source Date
"RTN","IBCNICB",324,0)
 S IBFIELDS(2.312,IBXIFN,1.1)=+$G(^IBA(355.33,+$G(IBBUFDA),0))
"RTN","IBCNICB",325,0)
 D FILE^DIE("","IBFIELDS","IBERR")
"RTN","IBCNICB",326,0)
 I $D(IBERR)>0 S RESULT(4)="-1^Fileman DIE error"
"RTN","IBCNICB",327,0)
 I $D(IBERR)'>0 S RESULT(4)="0^Data successfully updated"
"RTN","IBCNICB",328,0)
 L -^DPT(DFN,.312,IBPOLDA)
"RTN","IBCNICB",329,0)
 Q
"RTN","IBCNICB",330,0)
 ;
"RTN","IBCNICB",331,0)
CLEANUP ;This logic will delete obsolete Individual Plans, Repoint Insurance 
"RTN","IBCNICB",332,0)
 ;Reviews if Insurance Company changes, and Remove any Old Benefits Used.
"RTN","IBCNICB",333,0)
 N IBPAT,IBOLDINS,IBOLDGRP,IBIP,IBT,IBTNODE0,IBTNODE1,IBFIELDS,IBARR
"RTN","IBCNICB",334,0)
 S IBPAT=$G(^DPT(DFN,.312,IBPOLDA,0))
"RTN","IBCNICB",335,0)
 S IBOLDINS=$P(IBPAT,U,1),IBOLDGRP=$P(IBPAT,U,18)
"RTN","IBCNICB",336,0)
 S IBIP=$P($G(^IBA(355.3,+$P(IBPAT,U,18),0)),U,2)
"RTN","IBCNICB",337,0)
 ;If Old Group Insurance Plan is an Individual Plan with only one
"RTN","IBCNICB",338,0)
 ;subscriber for the same Patient Insurance Policy Entry, delete it
"RTN","IBCNICB",339,0)
 I IBIP=0,$$SUBS^IBCNSJ(IBOLDINS,IBOLDGRP,,"IBARR")'>1,($D(IBARR(DFN,IBPOLDA))>0) D DEL^IBCNSJ(IBOLDGRP)
"RTN","IBCNICB",340,0)
 ;If changing to a new Insurance Company
"RTN","IBCNICB",341,0)
 I $G(IBINSDA)>0,IBOLDINS'=IBINSDA D  Q
"RTN","IBCNICB",342,0)
 . ; - repoint all Insurance Reviews to new company
"RTN","IBCNICB",343,0)
 . I $$IR^IBCNSJ21(DFN,IBPOLDA) D
"RTN","IBCNICB",344,0)
 . S IBT=0
"RTN","IBCNICB",345,0)
 . F  S IBT=$O(^IBT(356.2,"D",DFN,IBT)) Q:'IBT  D
"RTN","IBCNICB",346,0)
 . . S IBTNODE0=$G(^IBT(356.2,IBT,0)),IBTNODE1=$G(^IBT(356.2,IBT,1))
"RTN","IBCNICB",347,0)
 . . I $P(IBTNODE1,U,5)=IBPOLDA,$P(IBTNODE0,U,8)'=IBINSDA D
"RTN","IBCNICB",348,0)
 . . . S IBFIELDS(356.2,IBT_",",.08)=IBINSDA
"RTN","IBCNICB",349,0)
 . . . D FILE^DIE("","IBFIELDS")
"RTN","IBCNICB",350,0)
 ;Delete Benefits Used (#355.5) corresponding to old Patient Group Plan
"RTN","IBCNICB",351,0)
 D DELBU
"RTN","IBCNICB",352,0)
 Q
"RTN","IBCNICB",353,0)
 ;
"RTN","IBCNICB",354,0)
DELBU ;Delete Benefits Used
"RTN","IBCNICB",355,0)
 N IBCDFN,IBPLAN,IBBU
"RTN","IBCNICB",356,0)
 S IBCDFN=IBPOLDA,IBPLAN=IBOLDGRP
"RTN","IBCNICB",357,0)
 ;Get Benefits Used
"RTN","IBCNICB",358,0)
 D BU^IBCNSJ21
"RTN","IBCNICB",359,0)
 ;If there are Benefits Used, then delete them
"RTN","IBCNICB",360,0)
 I $O(IBBU(0)) D
"RTN","IBCNICB",361,0)
 . N IBDAT
"RTN","IBCNICB",362,0)
 . S IBDAT=""
"RTN","IBCNICB",363,0)
 . F  S IBDAT=$O(IBBU(IBDAT)) Q:IBDAT=""  D DBU^IBCNSJ(IBBU(IBDAT))
"RTN","IBCNICB",364,0)
 Q
"RTN","IBCNSM")
0^141^B23601352
"RTN","IBCNSM",1,0)
IBCNSM ;ALB/AAS - INSURANCE MANAGEMENT, LIST MANAGER INIT ROUTINE ;21-OCT-92
"RTN","IBCNSM",2,0)
 ;;2.0;INTEGRATED BILLING;**28,46,56,52,82,103,199,276,435,528**;21-MAR-94;Build 163
"RTN","IBCNSM",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSM",4,0)
 ;
"RTN","IBCNSM",5,0)
 ;also used for IA #4694
"RTN","IBCNSM",6,0)
 ;
"RTN","IBCNSM",7,0)
% ; -- main entry point
"RTN","IBCNSM",8,0)
EN ;
"RTN","IBCNSM",9,0)
 D DT^DICRW
"RTN","IBCNSM",10,0)
 K XQORS,VALMEVL
"RTN","IBCNSM",11,0)
 D EN^VALM("IBCNS INSURANCE MANAGEMENT")
"RTN","IBCNSM",12,0)
ENQ K DFN
"RTN","IBCNSM",13,0)
 Q
"RTN","IBCNSM",14,0)
 ;
"RTN","IBCNSM",15,0)
 ;
"RTN","IBCNSM",16,0)
INIT ; -- set up inital variables
"RTN","IBCNSM",17,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBCNSM",18,0)
 K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
"RTN","IBCNSM",19,0)
 ;K I,X,SDBEG,SDEND,SDB,XQORNOD,SDFN,SDCLN,DA,DR,DIE,DNM,DQ
"RTN","IBCNSM",20,0)
 S DIR(0)="350.9,4.02",DIR("A")="Select Patient Name or Insurance Co."
"RTN","IBCNSM",21,0)
 D ^DIR K DIR I $D(DIRUT) S VALMQUIT="" G INITQ
"RTN","IBCNSM",22,0)
 S IBY=Y
"RTN","IBCNSM",23,0)
 I IBY["DPT(" S IBTYP="P",DFN=+IBY D BLD
"RTN","IBCNSM",24,0)
 I IBY["DIC(" S IBTYP="I",IBCNS=+IBY D EN^VALM("IBCNS INSURANCE COMPANY") S VALMQUIT=""
"RTN","IBCNSM",25,0)
 ;
"RTN","IBCNSM",26,0)
INITQ Q
"RTN","IBCNSM",27,0)
 ;
"RTN","IBCNSM",28,0)
 ;
"RTN","IBCNSM",29,0)
PAT ; -- select patient you are working with
"RTN","IBCNSM",30,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCNSM",31,0)
 S DIC(0)="AEQMN",DIC="^DPT(" D ^DIC I +Y<1 S VALMQUIT="" Q
"RTN","IBCNSM",32,0)
 S DFN=+Y
"RTN","IBCNSM",33,0)
 Q
"RTN","IBCNSM",34,0)
 ;
"RTN","IBCNSM",35,0)
 ;
"RTN","IBCNSM",36,0)
BLD ; -- build list of bills
"RTN","IBCNSM",37,0)
 K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
"RTN","IBCNSM",38,0)
 N I,J,K,IBHOLD,IBGRP,IBINS,IBCNT,IBCDFND,IBCDFND1,IBCPOLD,IBPL
"RTN","IBCNSM",39,0)
 S (IBN,IBCNT,VALMCNT)=0,IBFILE=2
"RTN","IBCNSM",40,0)
 ;
"RTN","IBCNSM",41,0)
 ; -- find all ins. co data
"RTN","IBCNSM",42,0)
 K IBINS S IBINS=0
"RTN","IBCNSM",43,0)
 D POL^IBCNSU41(DFN)
"RTN","IBCNSM",44,0)
 I '$G(IBNCPIVD) D ALL^IBCNS1(DFN,"IBINS")                ; all insurances
"RTN","IBCNSM",45,0)
 I $G(IBNCPIVD) D ALL^IBCNS1(DFN,"IBINS",1,IBNCPIVD)      ; IB*2*435 - Rx policies active as of this date
"RTN","IBCNSM",46,0)
 ;
"RTN","IBCNSM",47,0)
 I $G(IBINS(0)) S K=0 F  S K=$O(IBINS(K)) Q:'K  D
"RTN","IBCNSM",48,0)
 .; -- add to list
"RTN","IBCNSM",49,0)
 .W "."
"RTN","IBCNSM",50,0)
 .S IBCDFND=$G(IBINS(K,0))
"RTN","IBCNSM",51,0)
 .S IBCDFND1=$G(IBINS(K,1))
"RTN","IBCNSM",52,0)
 .S IBPL=+$P(IBCDFND,U,18)
"RTN","IBCNSM",53,0)
 .S IBCPOLD=$G(^IBA(355.3,IBPL,0))
"RTN","IBCNSM",54,0)
 .;
"RTN","IBCNSM",55,0)
 .; IB*2*435 - esg - 9/27/10 - active Rx policies only if this variable is set
"RTN","IBCNSM",56,0)
 .I $G(IBNCPIVD),'$$PLCOV^IBCNSU3(IBPL,IBNCPIVD,3) Q
"RTN","IBCNSM",57,0)
 .;
"RTN","IBCNSM",58,0)
 .S IBCNT=IBCNT+1
"RTN","IBCNSM",59,0)
 .S X=""
"RTN","IBCNSM",60,0)
 .S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
"RTN","IBCNSM",61,0)
 .I $D(^DIC(36,+IBCDFND,0)) S X=$$SETFLD^VALM1($P(^(0),"^"),X,"NAME")
"RTN","IBCNSM",62,0)
 .S X=$$SETFLD^VALM1($E($P(IBCDFND,"^",2),1,14),X,"POLICY")
"RTN","IBCNSM",63,0)
 .S IBHOLD=$P(IBCDFND,"^",6),X=$$SETFLD^VALM1($S(IBHOLD="v":"SELF",IBHOLD="s":"SPOUSE",IBHOLD="o":"OTHER",1:"UNKNOWN"),X,"HOLDER")
"RTN","IBCNSM",64,0)
 .S X=$$SETFLD^VALM1($E($$GRP^IBCNS($P(IBCDFND,"^",18)),1,10),X,"GROUP")
"RTN","IBCNSM",65,0)
 .S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBCDFND,"^",8)),X,"EFFDT")
"RTN","IBCNSM",66,0)
 .S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBCDFND,"^",4)),X,"EXPIRE")
"RTN","IBCNSM",67,0)
 .S X=$$SETFLD^VALM1($E($P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),U),1,8),X,"TYPE")
"RTN","IBCNSM",68,0)
 .S X=$$SETFLD^VALM1($P($G(^IBE(355.1,+$P($G(^IBA(355.3,+$P(IBCDFND,"^",18),0)),"^",9),0)),"^"),X,"TYPEPOL")
"RTN","IBCNSM",69,0)
 .S X=$$SETFLD^VALM1($E($P($G(^VA(200,+$P(IBCDFND1,"^",4),0)),U),1,15),X,"VERIFIED BY")
"RTN","IBCNSM",70,0)
 .S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBCDFND1,"^",3)),X,"VERIFIED ON")
"RTN","IBCNSM",71,0)
 .S X=$$SETFLD^VALM1($$YN($P(IBCPOLD,"^",6)),X,"PRECERT")
"RTN","IBCNSM",72,0)
 .S X=$$SETFLD^VALM1($$YN($P(IBCPOLD,"^",5)),X,"UR")
"RTN","IBCNSM",73,0)
 .S X=$$SETFLD^VALM1($$YN($P(IBCDFND,"^",20)),X,"COB")
"RTN","IBCNSM",74,0)
 .K IBHOLD,IBGRP
"RTN","IBCNSM",75,0)
 .D SET(X)
"RTN","IBCNSM",76,0)
 .Q
"RTN","IBCNSM",77,0)
 ;
"RTN","IBCNSM",78,0)
 I '$D(^TMP("IBNSM",$J)) D
"RTN","IBCNSM",79,0)
 .S VALMCNT=2,IBCNT=2,^TMP("IBNSM",$J,1,0)=" "
"RTN","IBCNSM",80,0)
 .S ^TMP("IBNSM",$J,2,0)="    No Insurance Policies on file for this patient."
"RTN","IBCNSM",81,0)
 .I $G(IBNCPIVD) S ^TMP("IBNSM",$J,2,0)="    No Active Rx Policies found as of Effective Date "_$$FMTE^XLFDT(IBNCPIVD,"2Z")_"."
"RTN","IBCNSM",82,0)
 .Q
"RTN","IBCNSM",83,0)
 ;
"RTN","IBCNSM",84,0)
 S X=$G(^IBA(354,DFN,60)) I X D
"RTN","IBCNSM",85,0)
 .S IBCNT=IBCNT+1
"RTN","IBCNSM",86,0)
 .S ^TMP("IBNSM",$J,IBCNT,0)="       Verification of No Coverage "_$$FMTE^XLFDT(X)
"RTN","IBCNSM",87,0)
 .Q
"RTN","IBCNSM",88,0)
 ;
"RTN","IBCNSM",89,0)
BLDQ ;
"RTN","IBCNSM",90,0)
 Q
"RTN","IBCNSM",91,0)
 ;
"RTN","IBCNSM",92,0)
SET(X) ; -- set arrays
"RTN","IBCNSM",93,0)
 S VALMCNT=VALMCNT+1,^TMP("IBNSM",$J,VALMCNT,0)=X
"RTN","IBCNSM",94,0)
 S ^TMP("IBNSM",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBCNSM",95,0)
 S ^TMP("IBNSMDX",$J,IBCNT)=VALMCNT_"^"_IBFILE_"^"_DFN_"^"_K_"^"_IBCDFND
"RTN","IBCNSM",96,0)
 Q
"RTN","IBCNSM",97,0)
 ;
"RTN","IBCNSM",98,0)
HDR ; -- screen header for initial screen
"RTN","IBCNSM",99,0)
 D PID^VADPT
"RTN","IBCNSM",100,0)
 ; -- AWC/ ib*2.0*528 add the patient dob to display screen
"RTN","IBCNSM",101,0)
 S VALMHDR(1)="Insurance Management for Patient: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")_" "_$$FMTE^XLFDT($P($G(^DPT(DFN,0)),"^",3),5)
"RTN","IBCNSM",102,0)
 S VALMHDR(2)=" "
"RTN","IBCNSM",103,0)
 I +$$BUFFER^IBCNBU1(DFN) S VALMHDR(2)="*** Patient has Insurance Buffer Records"
"RTN","IBCNSM",104,0)
 Q
"RTN","IBCNSM",105,0)
 ;
"RTN","IBCNSM",106,0)
FNL ; -- exit and clean up
"RTN","IBCNSM",107,0)
 K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
"RTN","IBCNSM",108,0)
 K IBFASTXT
"RTN","IBCNSM",109,0)
 D CLEAN^VALM10
"RTN","IBCNSM",110,0)
 Q
"RTN","IBCNSM",111,0)
 ;
"RTN","IBCNSM",112,0)
YN(X,Y) ; -- convert 1 or 0 to yes/no/unknown
"RTN","IBCNSM",113,0)
 Q $S($G(X)="":$S($G(Y):"",1:"UNK"),X=0:"NO",X=1:"YES",1:"")
"RTN","IBCNSM",114,0)
 ;
"RTN","IBCNSM",115,0)
CP ; -- change patient
"RTN","IBCNSM",116,0)
 N VALMQUIT
"RTN","IBCNSM",117,0)
 D FULL^VALM1
"RTN","IBCNSM",118,0)
 S IBDFN=DFN D PAT
"RTN","IBCNSM",119,0)
 I $D(VALMQUIT) S DFN=IBDFN
"RTN","IBCNSM",120,0)
 D HDR,BLD
"RTN","IBCNSM",121,0)
 S VALMBCK="R"
"RTN","IBCNSM",122,0)
CPQ K IBDFN
"RTN","IBCNSM",123,0)
 Q
"RTN","IBCNSM",124,0)
 ;
"RTN","IBCNSM",125,0)
PCI S VALMBCK="R" Q
"RTN","IBCNSM",126,0)
 ;
"RTN","IBCNSM",127,0)
FASTEXIT ;just sets a flag signaling system should be exited
"RTN","IBCNSM",128,0)
 S VALMBCK="Q"
"RTN","IBCNSM",129,0)
 D FULL^VALM1
"RTN","IBCNSM",130,0)
 K DIR S DIR(0)="Y",DIR("A")="Exit option entirely",DIR("B")="NO" D ^DIR
"RTN","IBCNSM",131,0)
 I $D(DIRUT)!(Y) S IBFASTXT=1
"RTN","IBCNSM",132,0)
 K DIR
"RTN","IBCNSM",133,0)
 Q
"RTN","IBCNSM2")
0^142^B22268650
"RTN","IBCNSM2",1,0)
IBCNSM2 ;ALB/AAS - INSURANCE MANAGEMENT - EDIT ROUTINE ;22-OCT-92
"RTN","IBCNSM2",2,0)
 ;;2.0;INTEGRATED BILLING;**28,103,139,516,528**;21-MAR-94;Build 163
"RTN","IBCNSM2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSM2",4,0)
 ;
"RTN","IBCNSM2",5,0)
% S U="^"
"RTN","IBCNSM2",6,0)
 ;
"RTN","IBCNSM2",7,0)
BU ; -- Enter Edit benefits already used
"RTN","IBCNSM2",8,0)
 D FULL^VALM1
"RTN","IBCNSM2",9,0)
 N I,J,IBXX,VALMY,IBCNS,IBCPOL,IBCDFN
"RTN","IBCNSM2",10,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSM2",11,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSM2",12,0)
 .S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSM2",13,0)
 .Q:IBPPOL=""
"RTN","IBCNSM2",14,0)
 .S IBCNS=+$P(IBPPOL,"^",5),IBCPOL=+$P(IBPPOL,"^",22),IBCDFN=+$P(IBPPOL,"^",4)
"RTN","IBCNSM2",15,0)
 .D EN^VALM("IBCNS BENEFITS USED BY DATE")
"RTN","IBCNSM2",16,0)
 .Q
"RTN","IBCNSM2",17,0)
 S VALMBCK="R" Q
"RTN","IBCNSM2",18,0)
 ;
"RTN","IBCNSM2",19,0)
EP ; -- Enter Edit Patient Insurance Policy Information
"RTN","IBCNSM2",20,0)
 ;
"RTN","IBCNSM2",21,0)
 S VALMBCK="R" Q
"RTN","IBCNSM2",22,0)
 ;
"RTN","IBCNSM2",23,0)
EI ;  -- Enter Edit Insurance Company Information
"RTN","IBCNSM2",24,0)
 ; -- if coming from benefit screen
"RTN","IBCNSM2",25,0)
 ;    ibcns=insurance co number
"RTN","IBCNSM2",26,0)
 D FULL^VALM1
"RTN","IBCNSM2",27,0)
 I $G(IBCNS)>0 D EN^VALM("IBCNS INSURANCE COMPANY") G EIQ
"RTN","IBCNSM2",28,0)
 ;
"RTN","IBCNSM2",29,0)
 ; -- if coming from list of policies, allow selection
"RTN","IBCNSM2",30,0)
 N I,J,IBXX,IBCNS,VALMY
"RTN","IBCNSM2",31,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSM2",32,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSM2",33,0)
 .S I=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSM2",34,0)
 .S IBCNS=$P(I,"^",5)
"RTN","IBCNSM2",35,0)
 .D EN^VALM("IBCNS INSURANCE COMPANY")
"RTN","IBCNSM2",36,0)
EIQ S VALMBCK="R" Q
"RTN","IBCNSM2",37,0)
 ;
"RTN","IBCNSM2",38,0)
VC ; -- Verify Insurance Coverage
"RTN","IBCNSM2",39,0)
 D FULL^VALM1
"RTN","IBCNSM2",40,0)
 N I,J,IBXX,VALMY,CON
"RTN","IBCNSM2",41,0)
 ;
"RTN","IBCNSM2",42,0)
 ; -- If no effective policies ask to verify no coverage
"RTN","IBCNSM2",43,0)
 I '$$EPOL(DFN) D VCN G EXIT
"RTN","IBCNSM2",44,0)
 ;
"RTN","IBCNSM2",45,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSM2",46,0)
 I $D(^IBCN(366.1,DFN,0)) D DELINC^IBCNVCC1(DFN)  ;IB*2.0*512 - SSVI changes - baa
"RTN","IBCNSM2",47,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSM2",48,0)
 .S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSM2",49,0)
 .Q:IBPPOL=""
"RTN","IBCNSM2",50,0)
 .D VFY
"RTN","IBCNSM2",51,0)
 ;
"RTN","IBCNSM2",52,0)
EXIT ; -- Kill variables, refresh screen
"RTN","IBCNSM2",53,0)
 ;
"RTN","IBCNSM2",54,0)
 D BLD^IBCNSM
"RTN","IBCNSM2",55,0)
 K I,J,IBXX,DA,DR,IBDUZZ
"RTN","IBCNSM2",56,0)
 S VALMBCK="R" Q
"RTN","IBCNSM2",57,0)
 ;
"RTN","IBCNSM2",58,0)
VFY ; -- Display most recent verification
"RTN","IBCNSM2",59,0)
 ;
"RTN","IBCNSM2",60,0)
 N DA,DR,IBDUZ,IB0,IBWNR
"RTN","IBCNSM2",61,0)
 D FULL^VALM1
"RTN","IBCNSM2",62,0)
 S IBCH=$P(IBPPOL,U,1)
"RTN","IBCNSM2",63,0)
 S IBWNR=$$GETWNR^IBCNSMM1()
"RTN","IBCNSM2",64,0)
 ;
"RTN","IBCNSM2",65,0)
 ;  -- If Medicare WNR and Name of Insured is different from Pt. Name
"RTN","IBCNSM2",66,0)
 ;     display Warning message.
"RTN","IBCNSM2",67,0)
 ;S IB0=$G(^DPT(DFN,.312,$P(IBPPOL,U,4),0))  ; 516 - baa
"RTN","IBCNSM2",68,0)
 S IB0=$$ZND^IBCNS1(DFN,$P(IBPPOL,U,4))  ; 516 - baa
"RTN","IBCNSM2",69,0)
 I +IBWNR=+IB0 D
"RTN","IBCNSM2",70,0)
 .I $P(IB0,U,17)="" Q
"RTN","IBCNSM2",71,0)
 .I $P(IB0,U,17)=$P($G(^DPT(DFN,0)),U,1) Q
"RTN","IBCNSM2",72,0)
 .W !!,"WARNING: Patient Name: '"_$P($G(^DPT(DFN,0)),U,1)_"'  DOES NOT MATCH"
"RTN","IBCNSM2",73,0)
 .W !,"      Name of Insured: '"_$P(IB0,U,17)_"' for this "_$P(IBWNR,U,2)_" policy."
"RTN","IBCNSM2",74,0)
 ;
"RTN","IBCNSM2",75,0)
 S IBDUZ=$P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,4)
"RTN","IBCNSM2",76,0)
 I 'IBDUZ D REVASK Q
"RTN","IBCNSM2",77,0)
 W !!," "_IBCH_" LAST VERIFIED BY "_$P($G(^VA(200,+IBDUZ,0)),U)_" ON "_$$DAT1^IBOUTL($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3))_". . ."
"RTN","IBCNSM2",78,0)
 I $P($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3),".")=DT W !,"COVERAGE VERIFIED TODAY, "_$$DAT1^IBOUTL(DT) H 3
"RTN","IBCNSM2",79,0)
 E  D REVASK
"RTN","IBCNSM2",80,0)
 Q
"RTN","IBCNSM2",81,0)
 ;
"RTN","IBCNSM2",82,0)
REVASK ; -- Determine whether user wishes to re-verify
"RTN","IBCNSM2",83,0)
 ;
"RTN","IBCNSM2",84,0)
 N Y
"RTN","IBCNSM2",85,0)
 W:'IBDUZ !
"RTN","IBCNSM2",86,0)
 S DIR("B")="No",DIR(0)="YO",DIR("A")=$S('IBDUZ:" "_IBCH_" NEVER PREVIOUSLY VERIFIED.  DO YOU WISH TO VERIFY COVERAGE",1:"ARE YOU RE-VERIFYING COVERAGE TODAY")
"RTN","IBCNSM2",87,0)
 D ^DIR K DIR Q:$D(DIRUT)
"RTN","IBCNSM2",88,0)
 I Y D REVFY
"RTN","IBCNSM2",89,0)
 Q
"RTN","IBCNSM2",90,0)
 ;
"RTN","IBCNSM2",91,0)
REVFY ; -- Re-verify
"RTN","IBCNSM2",92,0)
 ;
"RTN","IBCNSM2",93,0)
 S DA(1)=DFN,DA=$P(IBPPOL,U,4),DIE="^DPT(DFN,.312,",DR="1.03////"_DT_";1.04////"_DUZ D ^DIE K DIE
"RTN","IBCNSM2",94,0)
 S IBDUZ=$P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,4)
"RTN","IBCNSM2",95,0)
 ; CODE COMMENTED OUT ; WILL BE redone in another project.  Do not remove
"RTN","IBCNSM2",96,0)
 ; baa - IB*2.0*528 SSVI - do consistency checker if turned on
"RTN","IBCNSM2",97,0)
 ;I $P($G(^IBE(350.9,1,100)),U) D EN^IBCNVCC(DFN,DA)
"RTN","IBCNSM2",98,0)
 ;I $D(^IBCN(366.1,DFN,1,"B",DA)) D  Q
"RTN","IBCNSM2",99,0)
 ;.W !," "_IBCH_" N0T verified because Inconsistencies were found."
"RTN","IBCNSM2",100,0)
 ;.D PAUSE^VALM1
"RTN","IBCNSM2",101,0)
 W !," "_IBCH_" VERIFIED BY "_$P($G(^VA(200,+DUZ,0)),U)_" ON "_$$DAT1^IBOUTL($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3))
"RTN","IBCNSM2",102,0)
 D PAUSE^VALM1
"RTN","IBCNSM2",103,0)
 Q
"RTN","IBCNSM2",104,0)
 ;
"RTN","IBCNSM2",105,0)
VCN ; -- Ask to verifiy patient has no coverage
"RTN","IBCNSM2",106,0)
 ;
"RTN","IBCNSM2",107,0)
 N DA,DLAYGO,DIE,DIR,DR,DIRUT,DUOUT,DIOUT,DTOUT,IBADD,IBEXERR,IBWHER,X,Y
"RTN","IBCNSM2",108,0)
 W !!,?5,"Patient has no effective insurance coverage on file."
"RTN","IBCNSM2",109,0)
 S DIR("B")="No",DIR(0)="Y"
"RTN","IBCNSM2",110,0)
 S DIR("A")=$S(+$G(^IBA(354,DFN,60)):"Re-v",1:"V")_"erify that patient has No Insurance Coverage "
"RTN","IBCNSM2",111,0)
 S DIR("?")="Enter 'Yes' to enter a Verification of No Coverage Date"
"RTN","IBCNSM2",112,0)
 D ^DIR
"RTN","IBCNSM2",113,0)
 I Y D
"RTN","IBCNSM2",114,0)
 .I '$D(^IBA(354,DFN)) D ADDP^IBAUTL6 I '$G(IBADD) W "   <Try again Later>" Q
"RTN","IBCNSM2",115,0)
 .S DA=DFN,DIE="^IBA(354,",DR=60 D ^DIE I $D(Y)=0 N IBX S IBX=$P($G(^DPT(DFN,.31)),"^",11) D
"RTN","IBCNSM2",116,0)
 ..I X]""&(IBX'="N") S IBX="N",$P(^DPT(DFN,.31),"^",11)="N" D MSG
"RTN","IBCNSM2",117,0)
 ..I X']""&(IBX'="U") S IBX="U",$P(^DPT(DFN,.31),"^",11)="U" D MSG
"RTN","IBCNSM2",118,0)
 ..Q
"RTN","IBCNSM2",119,0)
 Q
"RTN","IBCNSM2",120,0)
 ;
"RTN","IBCNSM2",121,0)
EPOL(DFN) ; Does the patient have any effective policies?
"RTN","IBCNSM2",122,0)
 ;  Input:  DFN  --  Pointer to the patient in file #2
"RTN","IBCNSM2",123,0)
 ; Output:    0  --  The patient has no effective policies
"RTN","IBCNSM2",124,0)
 ;            1  --  The patient has at least one effective policy
"RTN","IBCNSM2",125,0)
 ;
"RTN","IBCNSM2",126,0)
 N J,X,Y S Y=0
"RTN","IBCNSM2",127,0)
 S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  S X=$G(^(J,0)) D  Q:Y
"RTN","IBCNSM2",128,0)
 .I '$P(X,"^",4) S Y=1 Q
"RTN","IBCNSM2",129,0)
 .I $P(X,"^",4)>DT S Y=1
"RTN","IBCNSM2",130,0)
 Q Y
"RTN","IBCNSM2",131,0)
 ;
"RTN","IBCNSM2",132,0)
MSG ;If there is a change in the status of the covered by health insurance 
"RTN","IBCNSM2",133,0)
 ;field #11 in the Patient file #2, The user is notified of the change.
"RTN","IBCNSM2",134,0)
 I '$D(ZTQUEUED) S VALMSG="COVERED BY HEALTH INSURANCE changed to '"_IBX_$S(IBX="U":"NKNOWN'",1:"O'")
"RTN","IBCNSM2",135,0)
 Q
"RTN","IBCNSM4")
0^143^B4086996
"RTN","IBCNSM4",1,0)
IBCNSM4 ;ALB/AAS - INSURANCE MANAGEMENT, LIST MANAGER INIT ROUTINE ;21-OCT-92
"RTN","IBCNSM4",2,0)
 ;;2.0;INTEGRATED BILLING;**56,82,199,276,528**;21-MAR-94;Build 163
"RTN","IBCNSM4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSM4",4,0)
 ;
"RTN","IBCNSM4",5,0)
 ;also used for IA #4694
"RTN","IBCNSM4",6,0)
 ;
"RTN","IBCNSM4",7,0)
% ; -- main entry point
"RTN","IBCNSM4",8,0)
EN ;
"RTN","IBCNSM4",9,0)
 D DT^DICRW
"RTN","IBCNSM4",10,0)
 K XQORS,VALMEVL,DFN,IBFASTXT
"RTN","IBCNSM4",11,0)
 I '$G(IBVIEW) D EN^VALM("IBCNS PATIENT INSURANCE")
"RTN","IBCNSM4",12,0)
 I $G(IBVIEW) D EN^VALM("IBCNS VIEW PAT INS")
"RTN","IBCNSM4",13,0)
ENQ K DFN,IBFASTXT,IBEXP1,IBEXP2,IBCDFN,IBFILE,IBI,IBLCNT,IBN,IBCGN,IBCNT,IBDA,IBDIF,IBPPOL,IBDUZ,IBCPOL,IBCDFND1,IBCDFN,IBCNS,IBYE
"RTN","IBCNSM4",14,0)
 Q
"RTN","IBCNSM4",15,0)
 ;
"RTN","IBCNSM4",16,0)
 ;
"RTN","IBCNSM4",17,0)
INIT ; -- set up inital variables
"RTN","IBCNSM4",18,0)
 S U="^",VALMCNT=0,VALMBG=1
"RTN","IBCNSM4",19,0)
 K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
"RTN","IBCNSM4",20,0)
 D:'$D(DFN) PAT G:$D(VALMQUIT) INITQ
"RTN","IBCNSM4",21,0)
 D BLD^IBCNSM
"RTN","IBCNSM4",22,0)
 ;
"RTN","IBCNSM4",23,0)
INITQ Q
"RTN","IBCNSM4",24,0)
 ;
"RTN","IBCNSM4",25,0)
 ;
"RTN","IBCNSM4",26,0)
PAT ; -- select patient you are working with
"RTN","IBCNSM4",27,0)
 N DIC,DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCNSM4",28,0)
 S DIC(0)="AEQMN",DIC="^DPT(" D ^DIC I +Y<1 S VALMQUIT="" Q
"RTN","IBCNSM4",29,0)
 S DFN=+Y
"RTN","IBCNSM4",30,0)
 Q
"RTN","IBCNSM4",31,0)
 ;
"RTN","IBCNSM4",32,0)
HDR ; -- screen header for initial screen
"RTN","IBCNSM4",33,0)
 D PID^VADPT
"RTN","IBCNSM4",34,0)
 S VALMHDR(1)="Insurance Management for Patient: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")_" "_$$FMTE^XLFDT($P($G(^DPT(DFN,0)),"^",3),5)  ; *528 - baa
"RTN","IBCNSM4",35,0)
 S VALMHDR(2)=" "
"RTN","IBCNSM4",36,0)
 I +$$BUFFER^IBCNBU1(DFN) S VALMHDR(2)="*** Patient has Insurance Buffer Records"
"RTN","IBCNSM4",37,0)
 Q
"RTN","IBCNSM4",38,0)
 ;
"RTN","IBCNSM4",39,0)
FNL ; -- exit and clean up
"RTN","IBCNSM4",40,0)
 K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
"RTN","IBCNSM4",41,0)
 ;  for patch 56
"RTN","IBCNSM4",42,0)
 ;K IBFASTXT
"RTN","IBCNSM4",43,0)
 D CLEAN^VALM10
"RTN","IBCNSM4",44,0)
 Q
"RTN","IBCNSP")
0^36^B79133086
"RTN","IBCNSP",1,0)
IBCNSP ;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY ;05-MAR-1993
"RTN","IBCNSP",2,0)
 ;;2.0;INTEGRATED BILLING;**6,28,43,52,85,251,363,371,416,497,516,528**;21-MAR-94;Build 163
"RTN","IBCNSP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSP",4,0)
% ;
"RTN","IBCNSP",5,0)
EN ; -- main entry point for IBCNS EXPANDED POLICY
"RTN","IBCNSP",6,0)
 N IB1ST
"RTN","IBCNSP",7,0)
 K VALMQUIT,IBPPOL,IBTOP
"RTN","IBCNSP",8,0)
 S IBTOP="IBCNSP"
"RTN","IBCNSP",9,0)
 D EN^VALM("IBCNS EXPANDED POLICY")
"RTN","IBCNSP",10,0)
 Q
"RTN","IBCNSP",11,0)
 ;
"RTN","IBCNSP",12,0)
HDR ; -- header code
"RTN","IBCNSP",13,0)
 ; 528 - baa ; Add DOB to hdr
"RTN","IBCNSP",14,0)
 N W,X,Y,Z,IBNAME,IBDOB
"RTN","IBCNSP",15,0)
 S IBNAME=^DPT(DFN,0),IBDOB=$P(IBNAME,U,3),IBNAME=$E($P(IBNAME,U),1,20)  ; direct global read on file 2 supported by IA 10035
"RTN","IBCNSP",16,0)
 S VALMHDR(1)="Expanded Policy Information for: "_IBNAME_"  "_$P($$PT^IBEFUNC(DFN),U,2)_"  "_$$FMTE^XLFDT(IBDOB,5)
"RTN","IBCNSP",17,0)
 S Z=$G(^DPT(DFN,.312,+$P(IBPPOL,U,4),0))
"RTN","IBCNSP",18,0)
 S W=$P($G(^IBA(355.3,+$P(Z,U,18),0)),U,11)
"RTN","IBCNSP",19,0)
 S Y=$E($P($G(^DIC(36,+Z,0)),U),1,20)_" Insurance Company"
"RTN","IBCNSP",20,0)
 S X="** Plan Currently "_$S(W:"Ina",1:"A")_"ctive **"
"RTN","IBCNSP",21,0)
 S VALMHDR(2)=$$SETSTR^VALM1(X,Y,48,29)
"RTN","IBCNSP",22,0)
 Q
"RTN","IBCNSP",23,0)
 ;
"RTN","IBCNSP",24,0)
INIT ; -- init variables and list array
"RTN","IBCNSP",25,0)
 ; input - IBPPOL
"RTN","IBCNSP",26,0)
 K VALMQUIT
"RTN","IBCNSP",27,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCNSP",28,0)
 I '$D(IBPPOL) D PPOL Q:$D(VALMQUIT)
"RTN","IBCNSP",29,0)
 N POLIEN
"RTN","IBCNSP",30,0)
 D BLD,HDR
"RTN","IBCNSP",31,0)
 Q
"RTN","IBCNSP",32,0)
 ;
"RTN","IBCNSP",33,0)
BLD ; -- list builder
"RTN","IBCNSP",34,0)
 K ^TMP("IBCNSVP",$J),^TMP("IBCNSVPDX",$J)
"RTN","IBCNSP",35,0)
 K ^TMP("IB PT POL COMMENTS",$J)
"RTN","IBCNSP",36,0)
 D KILL^VALM10()
"RTN","IBCNSP",37,0)
 N IBCDFND,IBCDFND1,IBCDFND2,IBCDFND4,IBCDFND5,IBCDFND7
"RTN","IBCNSP",38,0)
 N DATE,B2
"RTN","IBCNSP",39,0)
 S POLIEN=$P(IBPPOL,U,4)
"RTN","IBCNSP",40,0)
 S IBCDFND=$G(^DPT(DFN,.312,POLIEN,0)),IBCDFND1=$G(^(1)),IBCDFND2=$G(^(2)),IBCDFND4=$G(^(4)),IBCDFND5=$G(^(5)),IBCDFND7=$G(^(7))
"RTN","IBCNSP",41,0)
 S IBCDFND=$$ZND^IBCNS1(DFN,POLIEN)
"RTN","IBCNSP",42,0)
 S IBCPOL=+$P(IBCDFND,U,18),IBCNS=+IBCDFND,IBCDFN=POLIEN
"RTN","IBCNSP",43,0)
 ; ib*2*528  - retrieve comments - patient policy data from new multiple at 13 subscript
"RTN","IBCNSP",44,0)
 S DATE="" F  S DATE=$O(^DPT(DFN,.312,POLIEN,13,"B",DATE)) Q:DATE=""  S B2=0 F  S B2=$O(^DPT(DFN,.312,POLIEN,13,"B",DATE,B2)) Q:'B2  D
"RTN","IBCNSP",45,0)
 . S ^TMP("IB PT POL COMMENTS",$J,DFN,.312,POLIEN,13,B2,0)=$G(^DPT(DFN,.312,POLIEN,13,B2,0))  ; date and user ID (when and who)
"RTN","IBCNSP",46,0)
 . S ^TMP("IB PT POL COMMENTS",$J,DFN,.312,POLIEN,13,B2,1)=$G(^DPT(DFN,.312,POLIEN,13,B2,1))  ;comments
"RTN","IBCNSP",47,0)
 ; 
"RTN","IBCNSP",48,0)
 ; retrieve group insurance plan data 
"RTN","IBCNSP",49,0)
 S IBCPOLD=$G(^IBA(355.3,+$P(IBCDFND,U,18),0)),IBCPOLD1=$G(^(1))
"RTN","IBCNSP",50,0)
 S IBCPOLD2=$G(^IBA(355.3,+$G(IBCPOL),6)) ;; Daou/EEN adding BIN and PCN
"RTN","IBCNSP",51,0)
 S IBCPOLDL=$G(^IBA(355.3,+$G(IBCPOL),2))  ;IB*2*497  new group name and group number locations
"RTN","IBCNSP",52,0)
 ;
"RTN","IBCNSP",53,0)
 D INS^IBCNSP0                      ; insurance company
"RTN","IBCNSP",54,0)
 D POLICY^IBCNSP0                   ; plan information
"RTN","IBCNSP",55,0)
 D UR                               ; utilization review info
"RTN","IBCNSP",56,0)
 D EFFECT                           ; effective dates & source of info
"RTN","IBCNSP",57,0)
 D SUBSC^IBCNSP01                   ; subscriber info
"RTN","IBCNSP",58,0)
 D EMP                              ; subscriber's employer info
"RTN","IBCNSP",59,0)
 D PRV^IBCNSP01                     ; subscriber's provider contact info ;IB*2*497
"RTN","IBCNSP",60,0)
 D SPON^IBCNSP0                     ; insured person's info
"RTN","IBCNSP",61,0)
 D ID^IBCNSP01                      ; ins co ID numbers (IB*2*371)
"RTN","IBCNSP",62,0)
 D PLIM                             ; plan coverage limitations
"RTN","IBCNSP",63,0)
 D VER^IBCNSP01                     ; user/verifier/editor info
"RTN","IBCNSP",64,0)
 D CONTACT^IBCNSP0                  ; last insurance contact
"RTN","IBCNSP",65,0)
 D COMMENT                          ; comments - policy & plan
"RTN","IBCNSP",66,0)
 D RIDER^IBCNSP01                   ; policy rider info
"RTN","IBCNSP",67,0)
 ;
"RTN","IBCNSP",68,0)
 S VALMCNT=+$O(^TMP("IBCNSVP",$J,""),-1)
"RTN","IBCNSP",69,0)
 Q
"RTN","IBCNSP",70,0)
 ;
"RTN","IBCNSP",71,0)
COMMENT ; -- Comment region
"RTN","IBCNSP",72,0)
 N START,OFFSET,IBL,IBI,IBPCOMM
"RTN","IBCNSP",73,0)
 N DATE,USER,X,LN,QUIT
"RTN","IBCNSP",74,0)
 S (START,IBL)=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSP",75,0)
 S IB1ST("COMMENT")=START
"RTN","IBCNSP",76,0)
 ;
"RTN","IBCNSP",77,0)
 ; -- this tmp global is used to parse the comments and wrap the comments
"RTN","IBCNSP",78,0)
 S IBPCOMM=$NA(^TMP("IB COMMENTS PARSER",$J))
"RTN","IBCNSP",79,0)
 K @IBPCOMM
"RTN","IBCNSP",80,0)
 ;
"RTN","IBCNSP",81,0)
 D SET(START,OFFSET," Comment -- Patient Policy ",IORVON,IORVOFF)
"RTN","IBCNSP",82,0)
 ; ib*2*528 - include user id and date
"RTN","IBCNSP",83,0)
 I '$D(^TMP("IB PT POL COMMENTS",$J)) D 
"RTN","IBCNSP",84,0)
 . S IBL=IBL+1
"RTN","IBCNSP",85,0)
 . D SET(IBL,OFFSET,$S($P(IBCDFND1,U,8)="":"None",1:$P(IBCDFND1,U,8)))
"RTN","IBCNSP",86,0)
 E  D
"RTN","IBCNSP",87,0)
 . S LN=""
"RTN","IBCNSP",88,0)
 . F  S LN=$O(^TMP("IB PT POL COMMENTS",$J,DFN,.312,POLIEN,13,LN),-1) Q:LN=""  D
"RTN","IBCNSP",89,0)
 . . S DATE=^TMP("IB PT POL COMMENTS",$J,DFN,.312,POLIEN,13,LN,0),USER=$P(DATE,U,2),DATE=$P(DATE,U)
"RTN","IBCNSP",90,0)
 . . S IBL=IBL+1
"RTN","IBCNSP",91,0)
 . . D SET(IBL,OFFSET,$$FMTE^XLFDT(DATE,2)_"  "_$S(USER:$P(^VA(200,USER,0),U),1:"UNKNOWN USER"))
"RTN","IBCNSP",92,0)
 . . K PCOMM K @IBPCOMM
"RTN","IBCNSP",93,0)
 . . D GCOMM(.PCOMM,.IBPCOMM,LN)
"RTN","IBCNSP",94,0)
 . . S (QUIT,X)=0 F  S X=$O(@IBPCOMM@(X)) Q:'X  Q:QUIT  D
"RTN","IBCNSP",95,0)
 . . . I @IBPCOMM@(X)="" S QUIT=1 Q
"RTN","IBCNSP",96,0)
 . . . S IBL=IBL+1
"RTN","IBCNSP",97,0)
 . . . D SET(IBL,OFFSET,@IBPCOMM@(X))
"RTN","IBCNSP",98,0)
 . . S IBL=IBL+1
"RTN","IBCNSP",99,0)
 . . D SET(IBL,OFFSET," ")
"RTN","IBCNSP",100,0)
 S IBL=IBL+1
"RTN","IBCNSP",101,0)
 D SET(IBL,OFFSET," ")
"RTN","IBCNSP",102,0)
 S IBL=IBL+1
"RTN","IBCNSP",103,0)
 D SET(IBL,OFFSET," Comment -- Group Plan ",IORVON,IORVOFF)
"RTN","IBCNSP",104,0)
 S IBI=0 F  S IBI=$O(^IBA(355.3,+IBCPOL,11,IBI)) Q:IBI<1  D
"RTN","IBCNSP",105,0)
 . S IBL=IBL+1
"RTN","IBCNSP",106,0)
 . D SET(IBL,OFFSET,"  "_$E($G(^IBA(355.3,+IBCPOL,11,IBI,0)),1,80))
"RTN","IBCNSP",107,0)
 . Q
"RTN","IBCNSP",108,0)
 S IBL=IBL+1 D SET(IBL,OFFSET," ")
"RTN","IBCNSP",109,0)
 S IBL=IBL+1 D SET(IBL,OFFSET," ")
"RTN","IBCNSP",110,0)
 Q
"RTN","IBCNSP",111,0)
 ;
"RTN","IBCNSP",112,0)
EFFECT ; -- Effective date region
"RTN","IBCNSP",113,0)
 N START,OFFSET
"RTN","IBCNSP",114,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)-6  ;ib*2*497 lines need to be displayed alongside UR region
"RTN","IBCNSP",115,0)
 S OFFSET=45
"RTN","IBCNSP",116,0)
 D SET(START,OFFSET-4," Effective Dates & Source ",IORVON,IORVOFF)
"RTN","IBCNSP",117,0)
 D SET(START+1,OFFSET," Effective Date: "_$$DAT1^IBOUTL($P(IBCDFND,U,8)))
"RTN","IBCNSP",118,0)
 D SET(START+2,OFFSET,"Expiration Date: "_$$DAT1^IBOUTL($P(IBCDFND,U,4)))
"RTN","IBCNSP",119,0)
 D SET(START+3,OFFSET," Source of Info: "_$$EXPAND^IBTRE(2.312,1.09,$P($G(IBCDFND1),U,9)))
"RTN","IBCNSP",120,0)
 D SET(START+4,OFFSET-4,"Policy Not Billable: "_$S($P($G(^DPT(DFN,.312,IBCDFN,3)),"^",4):"YES",1:"NO"))
"RTN","IBCNSP",121,0)
 Q
"RTN","IBCNSP",122,0)
 ;
"RTN","IBCNSP",123,0)
UR ; -- UR of insurance region
"RTN","IBCNSP",124,0)
 N START,OFFSET
"RTN","IBCNSP",125,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2  ;IB*2*497
"RTN","IBCNSP",126,0)
 D SET(START,OFFSET," Utilization Review Info ",IORVON,IORVOFF)
"RTN","IBCNSP",127,0)
 D SET(START+1,OFFSET,"         Require UR: "_$$EXPAND^IBTRE(355.3,.05,$P(IBCPOLD,U,5)))
"RTN","IBCNSP",128,0)
 D SET(START+2,OFFSET,"   Require Amb Cert: "_$$EXPAND^IBTRE(355.3,.12,$P(IBCPOLD,U,12)))
"RTN","IBCNSP",129,0)
 D SET(START+3,OFFSET,"   Require Pre-Cert: "_$$EXPAND^IBTRE(355.3,.06,$P(IBCPOLD,U,6)))
"RTN","IBCNSP",130,0)
 D SET(START+4,OFFSET,"   Exclude Pre-Cond: "_$$EXPAND^IBTRE(355.3,.07,$P(IBCPOLD,U,7)))
"RTN","IBCNSP",131,0)
 D SET(START+5,OFFSET,"Benefits Assignable: "_$$EXPAND^IBTRE(355.3,.08,$P(IBCPOLD,U,8)))
"RTN","IBCNSP",132,0)
 D SET(START+6,2," ")
"RTN","IBCNSP",133,0)
 Q
"RTN","IBCNSP",134,0)
EMP ; -- Insurance Employer Region   
"RTN","IBCNSP",135,0)
 N OFFSET,START,IBADD,COL2
"RTN","IBCNSP",136,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSP",137,0)
 D SET(START,OFFSET," Subscriber's Employer Information ",IORVON,IORVOFF)
"RTN","IBCNSP",138,0)
 D SET(START+1,OFFSET,$$RJ^XLFSTR(" Employment Status: ",20)_$$EXPAND^IBTRE(2.312,2.11,$P(IBCDFND2,U,11)))
"RTN","IBCNSP",139,0)
 S COL2=START+1
"RTN","IBCNSP",140,0)
 D SET(START+2,OFFSET,$$RJ^XLFSTR("Employer: ",20)_$P(IBCDFND2,U,9))
"RTN","IBCNSP",141,0)
 D SET(START+3,OFFSET,$$RJ^XLFSTR("Street: ",20)_$P(IBCDFND2,U,2)) S IBADD=1
"RTN","IBCNSP",142,0)
 I $P(IBCDFND2,U,3)'="" D SET(START+4,OFFSET,$$RJ^XLFSTR("Street 2: ",20)_$P(IBCDFND2,U,3)) S IBADD=2
"RTN","IBCNSP",143,0)
 I $P(IBCDFND2,U,4)'="" D SET(START+5,OFFSET,$$RJ^XLFSTR("Street 3: ",20)_$P(IBCDFND2,U,4)) S IBADD=3
"RTN","IBCNSP",144,0)
 D SET(START+3+IBADD,OFFSET,$$RJ^XLFSTR("City/State: ",20)_$E($P(IBCDFND2,U,5),1,15)_$S($P(IBCDFND2,U,5)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCDFND2,U,6),0)),U,2)_" "_$E($P(IBCDFND2,U,7),1,5))
"RTN","IBCNSP",145,0)
 D SET(START+4+IBADD,OFFSET,$$RJ^XLFSTR("Phone: ",20)_$P(IBCDFND2,U,8))
"RTN","IBCNSP",146,0)
 D SET(START+5+IBADD,OFFSET," ")
"RTN","IBCNSP",147,0)
 ;
"RTN","IBCNSP",148,0)
 S START=COL2,OFFSET=40
"RTN","IBCNSP",149,0)
 D SET(START,OFFSET,"Emp Sponsored Plan: "_$S(+$P(IBCDFND2,U,10):"Yes",1:"No"))
"RTN","IBCNSP",150,0)
 D SET(START+1,OFFSET,"Claims to Employer: "_$S(+IBCDFND2:"Yes, Send to Employer",1:"No, Send to Insurance Company"))
"RTN","IBCNSP",151,0)
 D SET(START+2,OFFSET,"   Retirement Date: "_$$DAT1^IBOUTL($P(IBCDFND2,U,12)))
"RTN","IBCNSP",152,0)
 ;
"RTN","IBCNSP",153,0)
EMPQ Q
"RTN","IBCNSP",154,0)
 ;
"RTN","IBCNSP",155,0)
PLIM ; plan coverage limitations/plan limitation category display
"RTN","IBCNSP",156,0)
 N START,END S START=$O(^TMP("IBCNSVP",$J,""),-1)+1
"RTN","IBCNSP",157,0)
 S IB1ST("PLIM")=START
"RTN","IBCNSP",158,0)
 D LIMBLD^IBCNSC41(START,2)
"RTN","IBCNSP",159,0)
 S END=$O(^TMP("IBCNSVP",$J,""),-1)  ; last line constructed
"RTN","IBCNSP",160,0)
 D SET(END+1,2," ")    ; 2 blank lines to end this section
"RTN","IBCNSP",161,0)
 D SET(END+2,2," ")
"RTN","IBCNSP",162,0)
PLIMX ;
"RTN","IBCNSP",163,0)
 Q
"RTN","IBCNSP",164,0)
 ; 
"RTN","IBCNSP",165,0)
HELP ; -- help code
"RTN","IBCNSP",166,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNSP",167,0)
 Q
"RTN","IBCNSP",168,0)
 ;
"RTN","IBCNSP",169,0)
EXIT ; -- exit code
"RTN","IBCNSP",170,0)
 K IBPPOL,VALMQUIT,IBCNS,IBCDFN,IBCPOL,IBCPOLD,IBCPOLD1,IBCPOLD2,IBCPOLDL,IBCDFND,IBCDFND1,IBCDFND2,IBVPCLBG,IBVPCLEN
"RTN","IBCNSP",171,0)
 D CLEAN^VALM10,CLEAR^VALM1
"RTN","IBCNSP",172,0)
 Q
"RTN","IBCNSP",173,0)
 ;
"RTN","IBCNSP",174,0)
EXPND ; -- expand code
"RTN","IBCNSP",175,0)
 Q
"RTN","IBCNSP",176,0)
 ;
"RTN","IBCNSP",177,0)
PPOL ; -- select patient, select policy
"RTN","IBCNSP",178,0)
 I '$D(DFN) D  G:$D(VALMQUIT) PPOLQ
"RTN","IBCNSP",179,0)
 .S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC
"RTN","IBCNSP",180,0)
 .S DFN=+Y
"RTN","IBCNSP",181,0)
 I $G(DFN)<1 S VALMQUIT="" G PPOLQ
"RTN","IBCNSP",182,0)
 ;
"RTN","IBCNSP",183,0)
 I '$O(^DPT(DFN,.312,0)) W !!,"Patient doesn't have Insurance" K DFN G PPOL
"RTN","IBCNSP",184,0)
 ;
"RTN","IBCNSP",185,0)
 S DIC="^DPT("_DFN_",.312,",DIC(0)="AEQMN",DIC("A")="Select Patient Policy: "
"RTN","IBCNSP",186,0)
 D ^DIC I +Y<1 S VALMQUIT=""
"RTN","IBCNSP",187,0)
 G:$D(VALMQUIT) PPOLQ
"RTN","IBCNSP",188,0)
 S IBPPOL="^2^"_DFN_U_+Y_U_$G(^DPT(DFN,.312,+Y,0))
"RTN","IBCNSP",189,0)
PPOLQ K DIC Q
"RTN","IBCNSP",190,0)
 ;
"RTN","IBCNSP",191,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSP",192,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSP",193,0)
 Q
"RTN","IBCNSP",194,0)
 ;
"RTN","IBCNSP",195,0)
SET(LINE,COL,TEXT,ON,OFF) ; -- set display info in array
"RTN","IBCNSP",196,0)
 I '$D(@VALMAR@(LINE,0)) D BLANK(.LINE) S VALMCNT=$G(VALMCNT)+1
"RTN","IBCNSP",197,0)
 D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
"RTN","IBCNSP",198,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBCNSP",199,0)
 W:'(LINE#5) "."
"RTN","IBCNSP",200,0)
 Q
"RTN","IBCNSP",201,0)
 ;
"RTN","IBCNSP",202,0)
GCOMM(PCOMM,IBPCOMM,LN) ; data retrived from the new patient policy - comment multiple
"RTN","IBCNSP",203,0)
 ; input  - PCOMM passed by reference
"RTN","IBCNSP",204,0)
 ;          IBPCOMM passed by reference
"RTN","IBCNSP",205,0)
 ;          LN = subscript reference at which the comments were stored in TMP 
"RTN","IBCNSP",206,0)
 ;
"RTN","IBCNSP",207,0)
 ; output - PCOMM array - holds comments from 1.18, .03
"RTN","IBCNSP",208,0)
 ;          IBPCOMM array - holds comments from the PCOMM array for word wrapping
"RTN","IBCNSP",209,0)
 ;
"RTN","IBCNSP",210,0)
 N FR,TO,I,J,IBOUT
"RTN","IBCNSP",211,0)
 S FR=1,TO=78,IBOUT=0
"RTN","IBCNSP",212,0)
 ;
"RTN","IBCNSP",213,0)
 ; -- get the comments and put them in an array
"RTN","IBCNSP",214,0)
 F I=1:1:4 D
"RTN","IBCNSP",215,0)
 . I I=4 S TO=245
"RTN","IBCNSP",216,0)
 . S PCOMM(I)=$E(^TMP("IB PT POL COMMENTS",$J,DFN,.312,POLIEN,13,LN,1),FR,TO)
"RTN","IBCNSP",217,0)
 . S FR=TO+1
"RTN","IBCNSP",218,0)
 . S TO=FR+78
"RTN","IBCNSP",219,0)
 . ;
"RTN","IBCNSP",220,0)
 ;
"RTN","IBCNSP",221,0)
 ; -- quit if comment line is one long comment with no spaces
"RTN","IBCNSP",222,0)
 I $D(PCOMM) D  Q:IBOUT
"RTN","IBCNSP",223,0)
 . I $O(PCOMM(1)) D  Q:IBOUT
"RTN","IBCNSP",224,0)
 . . S I=0 F  S I=$O(PCOMM(I)) Q:IBOUT!(I']"")  I $L(PCOMM(I))=78&(PCOMM(I)'[" ")  D
"RTN","IBCNSP",225,0)
 . . . F J=1:1:$O(PCOMM(99),-1) S @IBPCOMM@(J)=PCOMM(J)
"RTN","IBCNSP",226,0)
 . . . S IBOUT=1
"RTN","IBCNSP",227,0)
 ;
"RTN","IBCNSP",228,0)
 ; -- put the array into one string
"RTN","IBCNSP",229,0)
 S I=0 F  S I=$O(PCOMM(I)) Q:I'>0  D
"RTN","IBCNSP",230,0)
 . I I=1 S @IBPCOMM@(1)=PCOMM(1) Q
"RTN","IBCNSP",231,0)
 . S @IBPCOMM@(1)=@IBPCOMM@(1)_PCOMM(I)
"RTN","IBCNSP",232,0)
 ;
"RTN","IBCNSP",233,0)
 ; -- go parse the string
"RTN","IBCNSP",234,0)
 D TXT(.IBPCOMM) ; parse array
"RTN","IBCNSP",235,0)
 Q
"RTN","IBCNSP",236,0)
 ;
"RTN","IBCNSP",237,0)
TXT(TXT) ; Parse text for wrapping
"RTN","IBCNSP",238,0)
 ;  Input Parameter
"RTN","IBCNSP",239,0)
 ;    TXT = The array name
"RTN","IBCNSP",240,0)
 ;
"RTN","IBCNSP",241,0)
 ;  Output:
"RTN","IBCNSP",242,0)
 ;    TXT - array with wrapped text
"RTN","IBCNSP",243,0)
 ;
"RTN","IBCNSP",244,0)
 N X,CT,DIWF,DIWL,DIWR,DIW,DIWI,DIWT,DIWTC,DIWX,DN
"RTN","IBCNSP",245,0)
 ;
"RTN","IBCNSP",246,0)
 I '$D(@(TXT)) Q
"RTN","IBCNSP",247,0)
 ;
"RTN","IBCNSP",248,0)
 K ^UTILITY($J,"W")
"RTN","IBCNSP",249,0)
 ;
"RTN","IBCNSP",250,0)
 ;  -- define length of text string; left is 1 and right is 78
"RTN","IBCNSP",251,0)
 S DIWF="",DIWL=1,DIWR=78
"RTN","IBCNSP",252,0)
 ;
"RTN","IBCNSP",253,0)
 ;  -- format text into scratch file
"RTN","IBCNSP",254,0)
 S CT=0
"RTN","IBCNSP",255,0)
 F  S CT=$O(@(TXT)@(CT)) Q:'CT  D
"RTN","IBCNSP",256,0)
 . S X=@TXT@(CT) D ^DIWP
"RTN","IBCNSP",257,0)
 ;
"RTN","IBCNSP",258,0)
 K @(TXT)
"RTN","IBCNSP",259,0)
 ;
"RTN","IBCNSP",260,0)
 ;  -- reset formatted text back to array
"RTN","IBCNSP",261,0)
 S CT=0
"RTN","IBCNSP",262,0)
 F  S CT=$O(^UTILITY($J,"W",1,CT)) Q:'CT  D
"RTN","IBCNSP",263,0)
 . S @(TXT)@(CT)=^UTILITY($J,"W",1,CT,0)
"RTN","IBCNSP",264,0)
 ;
"RTN","IBCNSP",265,0)
 K ^UTILITY($J,"W")
"RTN","IBCNSP",266,0)
 Q
"RTN","IBCNSP0")
0^64^B45681848
"RTN","IBCNSP0",1,0)
IBCNSP0 ;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY ;05-MAR-1993
"RTN","IBCNSP0",2,0)
 ;;2.0;INTEGRATED BILLING;**28,43,52,85,93,103,137,229,251,363,371,399,438,458,497,516,528**;21-MAR-94;Build 163
"RTN","IBCNSP0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSP0",4,0)
 ;
"RTN","IBCNSP0",5,0)
 ;
"RTN","IBCNSP0",6,0)
CONTACT ; -- Insurance Contact Information
"RTN","IBCNSP0",7,0)
 N OFFSET,START
"RTN","IBCNSP0",8,0)
 ;
"RTN","IBCNSP0",9,0)
 ; The start of this section is designed to start on the same line
"RTN","IBCNSP0",10,0)
 ; as the User Information section (see VER^IBCNSP01).
"RTN","IBCNSP0",11,0)
 ;
"RTN","IBCNSP0",12,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)-8
"RTN","IBCNSP0",13,0)
 S IB1ST("CONTACT")=START
"RTN","IBCNSP0",14,0)
 S OFFSET=42
"RTN","IBCNSP0",15,0)
 N IBTRC,IBTRCD,IBTCOD,IBCREFN
"RTN","IBCNSP0",16,0)
 S IBTCOD=$O(^IBE(356.11,"ACODE",85,0))
"RTN","IBCNSP0",17,0)
 ;
"RTN","IBCNSP0",18,0)
 S IBTRC=0,IBTRCD="",IBCREFN=""
"RTN","IBCNSP0",19,0)
 F  S IBTRC=$O(^IBT(356.2,"D",DFN,IBTRC)) Q:'IBTRC  D
"RTN","IBCNSP0",20,0)
 .Q:$P($G(^IBT(356.2,+IBTRC,1)),"^",5)'=IBCDFN  ; must be same policy
"RTN","IBCNSP0",21,0)
 .Q:$P($G(^IBT(356.2,+IBTRC,0)),"^",4)'=IBTCOD  ; must be ins. ver. type
"RTN","IBCNSP0",22,0)
 .S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBCREFN=$P($G(^IBT(356.2,+IBTRC,2)),U,1)
"RTN","IBCNSP0",23,0)
 ;
"RTN","IBCNSP0",24,0)
 D SET(START,OFFSET," Insurance Contact (last) ",IORVON,IORVOFF)
"RTN","IBCNSP0",25,0)
 D SET(START+1,OFFSET," Person Contacted: "_$$EXPAND^IBTRE(356.2,.06,$P(IBTRCD,"^",6)))
"RTN","IBCNSP0",26,0)
 D SET(START+2,OFFSET,"Method of Contact: "_$$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)))
"RTN","IBCNSP0",27,0)
 D SET(START+3,OFFSET,"  Contact's Phone: "_$$EXPAND^IBTRE(356.2,.07,$P(IBTRCD,"^",7)))
"RTN","IBCNSP0",28,0)
 D SET(START+4,OFFSET,"    Call Ref. No.: "_$E(IBCREFN,1,19)_$S($L(IBCREFN)>19:"*",1:""))
"RTN","IBCNSP0",29,0)
 D SET(START+5,OFFSET,"     Contact Date: "_$$EXPAND^IBTRE(356.2,.01,$P(IBTRCD,"^")))
"RTN","IBCNSP0",30,0)
 ; no blank lines here because the User Information section is on the
"RTN","IBCNSP0",31,0)
 ; left and it is bigger than this section
"RTN","IBCNSP0",32,0)
 Q
"RTN","IBCNSP0",33,0)
 ;
"RTN","IBCNSP0",34,0)
POLICY ; -- Policy Region
"RTN","IBCNSP0",35,0)
 ; -- if pointer to policy file exists get data from policy file
"RTN","IBCNSP0",36,0)
 ; MRD;IB*2.0*516 - Increased length of Group Name and Type of Plan.
"RTN","IBCNSP0",37,0)
 N OFFSET,START,IBP,IBX,IBPLNID,IBPLNNM,IBPLNNA,IBPLNLA,IBTOP
"RTN","IBCNSP0",38,0)
 S (IBPLNID,IBPLNNM,IBPLNNA,IBPLNLA)=""
"RTN","IBCNSP0",39,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSP0",40,0)
 D GPLAN(+IBCPOLD2)
"RTN","IBCNSP0",41,0)
 D SET(START,OFFSET," Plan Information ",IORVON,IORVOFF)
"RTN","IBCNSP0",42,0)
 D SET(START+1,OFFSET,"   Is Group Plan: "_$S($P(IBCPOLD,"^",2)=1:"YES",1:"NO"))
"RTN","IBCNSP0",43,0)
 D SET(START+2,OFFSET,"      Group Name: "_$E($P(IBCPOLDL,"^"),1,60))
"RTN","IBCNSP0",44,0)
 S IBX=3
"RTN","IBCNSP0",45,0)
 I $TR($E($P(IBCPOLDL,"^"),61,80)," ","")'="" D SET(START+IBX,OFFSET,$$REPEAT^XLFSTR(" ",18)_$E($P(IBCPOLDL,"^"),61,80)) S IBX=IBX+1
"RTN","IBCNSP0",46,0)
 D SET(START+IBX,OFFSET,"    Group Number: "_$P(IBCPOLDL,"^",2)) S IBX=IBX+1
"RTN","IBCNSP0",47,0)
 D SET(START+IBX,OFFSET,"             BIN: "_$P(IBCPOLD2,"^",2)) S IBX=IBX+1
"RTN","IBCNSP0",48,0)
 D SET(START+IBX,OFFSET,"             PCN: "_$P(IBCPOLD2,"^",3)) S IBX=IBX+1
"RTN","IBCNSP0",49,0)
 ;
"RTN","IBCNSP0",50,0)
 ; -- use the abbreviations for the following type of plans
"RTN","IBCNSP0",51,0)
 S IBTOP=$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^") I IBTOP]"" D
"RTN","IBCNSP0",52,0)
 . I IBTOP="HIGH DEDUCTIBLE HEALTH PLAN" S IBTOP=$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^",2) Q
"RTN","IBCNSP0",53,0)
 . I IBTOP="HIGH DEDUCTIBLE HEALTH PLAN W/HEALTH REIMBURSEMENT ARRANGEMENT" S IBTOP=$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^",2) Q
"RTN","IBCNSP0",54,0)
 . I IBTOP="HIGH DEDUCTIBLE HEALTH PLAN W/HEALTH SAVINGS ACCOUNT" S IBTOP=$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^",2) Q
"RTN","IBCNSP0",55,0)
 . I IBTOP="HEALTH MAINTENANCE ORGANIZATION W/OUT OF NETWORK BENEFITS" S IBTOP=$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^",2) Q
"RTN","IBCNSP0",56,0)
 . I IBTOP="EXCLUSIVE PROVIDER ORGANIZATION" S IBTOP=$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^",2) Q
"RTN","IBCNSP0",57,0)
 . I IBTOP="MEDICARE ADVANTAGE" S IBTOP=$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^",2) Q
"RTN","IBCNSP0",58,0)
 . I IBTOP="VISION" S IBTOP=$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^",2)
"RTN","IBCNSP0",59,0)
 D SET(START+IBX,OFFSET,"    Type of Plan: "_$E(IBTOP,1,61)) S IBX=IBX+1
"RTN","IBCNSP0",60,0)
 ;
"RTN","IBCNSP0",61,0)
 I $P(IBCPOLD,U,14)]"" D SET(START+IBX,OFFSET,"   Plan Category: "_$$EXPAND^IBTRE(355.3,.14,$P(IBCPOLD,"^",14))) S IBX=IBX+1
"RTN","IBCNSP0",62,0)
 I $P(IBCPOLD,U,15)]"" D SET(START+IBX,OFFSET," Electronic Type: "_$$EXPAND^IBTRE(355.3,.15,$P(IBCPOLD,"^",15))) S IBX=IBX+1
"RTN","IBCNSP0",63,0)
 D SET(START+IBX,OFFSET,"  Plan Filing TF: "_$P(IBCPOLD,"^",13)_$S($P(IBCPOLD,U,16):" ("_$$FTFN^IBCNSU31(IBCPOL)_")",1:"")) S IBX=IBX+1
"RTN","IBCNSP0",64,0)
 ;
"RTN","IBCNSP0",65,0)
 D SET(START+IBX,OFFSET,"      ePharmacy Plan ID: "_IBPLNID) S IBX=IBX+1
"RTN","IBCNSP0",66,0)
 D SET(START+IBX,OFFSET,"    ePharmacy Plan Name: "_IBPLNNM) S IBX=IBX+1
"RTN","IBCNSP0",67,0)
 D SET(START+IBX,OFFSET,"  ePharmacy Natl Status: "_IBPLNNA) S IBX=IBX+1
"RTN","IBCNSP0",68,0)
 D SET(START+IBX,OFFSET," ePharmacy Local Status: "_IBPLNLA) S IBX=IBX+1
"RTN","IBCNSP0",69,0)
 D SET(START+IBX,OFFSET," ")
"RTN","IBCNSP0",70,0)
 ;
"RTN","IBCNSP0",71,0)
 ; -- in case pointer is missing
"RTN","IBCNSP0",72,0)
 I '$G(^IBA(355.3,+$P(IBCDFND,"^",18),0)) D
"RTN","IBCNSP0",73,0)
 .D SET(START+1,OFFSET,"Insurance Number: "_$P(IBCDFND,"^",2))
"RTN","IBCNSP0",74,0)
 .D SET(START+2,OFFSET,"      Group Name: "_$P(IBCDFND,"^",15))
"RTN","IBCNSP0",75,0)
 .D SET(START+3,OFFSET,"    Group Number: "_$P(IBCDFND,"^",3))
"RTN","IBCNSP0",76,0)
 .Q
"RTN","IBCNSP0",77,0)
 Q
"RTN","IBCNSP0",78,0)
 ;
"RTN","IBCNSP0",79,0)
INS ; -- Insurance Co. Region  ;IB*2*497 offset changed to display starting at offset 2
"RTN","IBCNSP0",80,0)
 N OFFSET,START,IBADD,IBCDFNDA,IBCDFNDB
"RTN","IBCNSP0",81,0)
 S START=1,OFFSET=2
"RTN","IBCNSP0",82,0)
 D SET(START,OFFSET," Insurance Company ",IORVON,IORVOFF)
"RTN","IBCNSP0",83,0)
 D SET(START+1,OFFSET,"   Company: "_$P($G(^DIC(36,+IBCDFND,0)),"^"))
"RTN","IBCNSP0",84,0)
 S IBCDFNDA=$G(^DIC(36,+IBCDFND,.11)),IBCDFNDB=$G(^(.13))
"RTN","IBCNSP0",85,0)
 G:IBCDFNDA="" INSQ
"RTN","IBCNSP0",86,0)
 D SET(START+2,OFFSET,"    Street: "_$P(IBCDFNDA,"^")) S IBADD=1
"RTN","IBCNSP0",87,0)
 I $P(IBCDFNDA,"^",2)'="" D SET(START+3,OFFSET,"  Street 2: "_$P(IBCDFNDA,"^",2)) S IBADD=2
"RTN","IBCNSP0",88,0)
 I $P(IBCDFNDA,"^",3)'="" D SET(START+4,OFFSET,"  Street 3: "_$P(IBCDFNDA,"^",3)) S IBADD=3
"RTN","IBCNSP0",89,0)
 D SET(START+2+IBADD,OFFSET,"City/State: "_$E($P(IBCDFNDA,"^",4),1,15)_$S($P(IBCDFNDA,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCDFNDA,"^",5),0)),"^",2)_" "_$E($P(IBCDFNDA,"^",6),1,5))
"RTN","IBCNSP0",90,0)
 D SET(START+3+IBADD,OFFSET,"Billing Ph: "_$P(IBCDFNDB,"^",2))
"RTN","IBCNSP0",91,0)
 D SET(START+4+IBADD,OFFSET,"Precert Ph: "_$$PHONE^IBCNSC01(IBCDFNDB))
"RTN","IBCNSP0",92,0)
 D SET(START+5+IBADD,OFFSET," ")
"RTN","IBCNSP0",93,0)
 ;
"RTN","IBCNSP0",94,0)
INSQ Q
"RTN","IBCNSP0",95,0)
 ;
"RTN","IBCNSP0",96,0)
SPON ; -- Sponsor (Insured Person) Region  ;IB*2*497  rearrange lines and move all lines into a single column
"RTN","IBCNSP0",97,0)
 N IBC3,IBZIP,START,OFFSET,IBA,DA,DR,DIC,DIQ,Y
"RTN","IBCNSP0",98,0)
 S IBC3=$G(^DPT(DFN,.312,IBCDFN,3))
"RTN","IBCNSP0",99,0)
 S DA=+$P(IBC3,"^",2),DR=.01,DIQ(0)="E",DIC="^DIC(23,",DIQ="IBA" D EN^DIQ1
"RTN","IBCNSP0",100,0)
 S START=$O(^TMP("IBCNSVP",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSP0",101,0)
 D SET(START,OFFSET," Subscriber's Information (use Subscriber Update Action) ",IORVON,IORVOFF)
"RTN","IBCNSP0",102,0)
 D SET(START+1,OFFSET,$$RJ^XLFSTR("Subscriber's DOB: ",18)_$$DAT3^IBOUTL($P(IBC3,"^")))
"RTN","IBCNSP0",103,0)
 S Y=$P(IBC3,"^",10) D ZIPOUT^VAFADDR S IBZIP=Y
"RTN","IBCNSP0",104,0)
 D SET(START+2,OFFSET,$$RJ^XLFSTR("Str 1: ",18)_$P(IBC3,"^",6))
"RTN","IBCNSP0",105,0)
 D SET(START+3,OFFSET,$$RJ^XLFSTR("Str 2: ",18)_$P(IBC3,"^",7))
"RTN","IBCNSP0",106,0)
 D SET(START+4,OFFSET,$$RJ^XLFSTR("City: ",18)_$P(IBC3,"^",8))
"RTN","IBCNSP0",107,0)
 D SET(START+5,OFFSET,$$RJ^XLFSTR("St/Zip: ",18)_$P($G(^DIC(5,+$P(IBC3,"^",9),0)),"^",2)_"  "_IBZIP)
"RTN","IBCNSP0",108,0)
 D SET(START+6,OFFSET,$$RJ^XLFSTR("SubDiv: ",18)_$P(IBC3,"^",14))
"RTN","IBCNSP0",109,0)
 D SET(START+7,OFFSET,$$RJ^XLFSTR("Country: ",18)_$P(IBC3,"^",13))
"RTN","IBCNSP0",110,0)
 D SET(START+8,OFFSET,$$RJ^XLFSTR("Phone: ",18)_$P(IBC3,"^",11))
"RTN","IBCNSP0",111,0)
 D SET(START+9,OFFSET,$$RJ^XLFSTR("Subscriber's Sex: ",18)_$$EXTERNAL^DILFD(2.312,3.12,,$P(IBC3,U,12)))
"RTN","IBCNSP0",112,0)
 D SET(START+10,OFFSET,$$RJ^XLFSTR("Subscr's Branch: ",18)_$G(IBA(23,DA,.01,"E")))
"RTN","IBCNSP0",113,0)
 D SET(START+11,OFFSET,$$RJ^XLFSTR("Subscr's Rank: ",18)_$P(IBC3,"^",3))
"RTN","IBCNSP0",114,0)
 ; blank lines at end of section
"RTN","IBCNSP0",115,0)
 D SET(START+12,2," ")
"RTN","IBCNSP0",116,0)
 D SET(START+13,2," ")
"RTN","IBCNSP0",117,0)
 Q
"RTN","IBCNSP0",118,0)
 ;
"RTN","IBCNSP0",119,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSP0",120,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSP0",121,0)
 Q
"RTN","IBCNSP0",122,0)
 ;
"RTN","IBCNSP0",123,0)
SET(LINE,COL,TEXT,ON,OFF) ; -- set display info in array
"RTN","IBCNSP0",124,0)
 D:'$D(@VALMAR@(LINE,0)) BLANK(.LINE)
"RTN","IBCNSP0",125,0)
 D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
"RTN","IBCNSP0",126,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBCNSP0",127,0)
 W:'(LINE#5) "."
"RTN","IBCNSP0",128,0)
 Q
"RTN","IBCNSP0",129,0)
 ;
"RTN","IBCNSP0",130,0)
GPLAN(IBPLDA) ; get data from PLAN file (#366.03) related to the
"RTN","IBCNSP0",131,0)
 ; GROUP INSURANCE PLAN file (#355.3) and the INSURANCE COMPANY file (#36)
"RTN","IBCNSP0",132,0)
 ; that is associated with the PATIENT
"RTN","IBCNSP0",133,0)
 ; input - IBPLDA - ien of the PLAN file (#366.03)
"RTN","IBCNSP0",134,0)
 N IBPLN0,IBAIEN,IBAPIEN,IBAP0
"RTN","IBCNSP0",135,0)
 S IBPLN0=$G(^IBCNR(366.03,IBPLDA,0)) ;; Q:'$P(IBPLN0,"^",3) ;quit if payer not defined 
"RTN","IBCNSP0",136,0)
 S IBPLNID=$P(IBPLN0,"^"),IBPLNNM=$P(IBPLN0,"^",2)
"RTN","IBCNSP0",137,0)
 S IBAIEN=$O(^IBCNR(366.13,"B","E-PHARM","")) Q:'IBAIEN
"RTN","IBCNSP0",138,0)
 S IBAPIEN=$O(^IBCNR(366.03,IBPLDA,3,"B",IBAIEN,"")) Q:'IBAPIEN
"RTN","IBCNSP0",139,0)
 S IBAP0=$G(^IBCNR(366.03,IBPLDA,3,IBAPIEN,0))
"RTN","IBCNSP0",140,0)
 S IBPLNNA=$S($P(IBAP0,"^",2)=0:"NOT ACTIVE",1:"ACTIVE")
"RTN","IBCNSP0",141,0)
 S IBPLNLA=$S($P(IBAP0,"^",3)=0:"NOT ACTIVE",1:"ACTIVE")
"RTN","IBCNSP0",142,0)
 Q
"RTN","IBCNSP3")
0^115^B85952229
"RTN","IBCNSP3",1,0)
IBCNSP3 ;ALB/AAS - INSURANCE MANAGEMENT EDIT ;06-JUL-93
"RTN","IBCNSP3",2,0)
 ;;2.0;INTEGRATED BILLING;**28,52,85,251,371,497,528**;21-MAR-94;Build 163
"RTN","IBCNSP3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNSP3",4,0)
 ;
"RTN","IBCNSP3",5,0)
 ; AWC/20160104 - Modified tags AC,PPCOM,ADCOM and EDCOM to:
"RTN","IBCNSP3",6,0)
 ;  1. Accept the maximum of 245 characters in the patient policy comment field.
"RTN","IBCNSP3",7,0)
 ;  2. Put timeout code into to exit to previous menu upon a timeout.
"RTN","IBCNSP3",8,0)
 ;  3. Put in code to display an error if occurred and to exit to previous menu upon an error.
"RTN","IBCNSP3",9,0)
 ;  4. Added code to Not update user/date time if user just displayed comments.
"RTN","IBCNSP3",10,0)
 ;
"RTN","IBCNSP3",11,0)
 ;  Input:
"RTN","IBCNSP3",12,0)
 ;    IBDT   = date/time that comment was made
"RTN","IBCNSP3",13,0)
 ;    IBOUT  = return variable  0-don't exit menu,  1-exit menu
"RTN","IBCNSP3",14,0)
 ;    PLIEN  = ien of selected INSURANCE POLICY at ^DPT("_DFN_",.312,
"RTN","IBCNSP3",15,0)
 ;    IBPPOL = ien of INSURANCE policy record at 2.312 multiple
"RTN","IBCNSP3",16,0)
 ;    IBCDFN = ien of PATIENT record (file 2)
"RTN","IBCNSP3",17,0)
 ;
"RTN","IBCNSP3",18,0)
 ;  System wide variables:
"RTN","IBCNSP3",19,0)
 ;    DFN    = Internal number of an entry in the PATIENT File (#2)
"RTN","IBCNSP3",20,0)
 ;    DUZ    = Assumed to be the User Number; a positive number uniquely identifying the current user.
"RTN","IBCNSP3",21,0)
 ;
"RTN","IBCNSP3",22,0)
% G ^IBCNSM4
"RTN","IBCNSP3",23,0)
 ;
"RTN","IBCNSP3",24,0)
SAVEPT(DFN,DA) ; -- Save the global before editing
"RTN","IBCNSP3",25,0)
 K ^TMP($J,"IBCNSPT")
"RTN","IBCNSP3",26,0)
 S ^TMP($J,"IBCNSPT",2.312,DFN,+DA,0)=$G(^DPT(DFN,.312,+DA,0))
"RTN","IBCNSP3",27,0)
 S ^TMP($J,"IBCNSPT",2.312,DFN,+DA,1)=$G(^DPT(DFN,.312,+DA,1))
"RTN","IBCNSP3",28,0)
 S ^TMP($J,"IBCNSPT",2.312,DFN,+DA,2)=$G(^DPT(DFN,.312,+DA,2))
"RTN","IBCNSP3",29,0)
 S ^TMP($J,"IBCNSPT",2.312,DFN,+DA,3)=$G(^DPT(DFN,.312,+DA,3))
"RTN","IBCNSP3",30,0)
 S ^TMP($J,"IBCNSPT",2.312,DFN,+DA,4)=$G(^DPT(DFN,.312,+DA,4))
"RTN","IBCNSP3",31,0)
 S ^TMP($J,"IBCNSPT",2.312,DFN,+DA,5)=$G(^DPT(DFN,.312,+DA,5))
"RTN","IBCNSP3",32,0)
 S ^TMP($J,"IBCNSPT",2.312,DFN,+DA,7)=$G(^DPT(DFN,.312,+DA,7))    ; IB*2.0*497 (vd)
"RTN","IBCNSP3",33,0)
 Q
"RTN","IBCNSP3",34,0)
 ;
"RTN","IBCNSP3",35,0)
COMPPT(DFN,DA) ; -- Compare before editing with globals
"RTN","IBCNSP3",36,0)
 S IBDIF=0
"RTN","IBCNSP3",37,0)
 I $G(^DPT(DFN,.312,+DA,0))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,+DA,0)) S IBDIF=1 G COMPPTQ
"RTN","IBCNSP3",38,0)
 I $G(^DPT(DFN,.312,+DA,1))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,+DA,1)) S IBDIF=1 G COMPPTQ
"RTN","IBCNSP3",39,0)
 I $G(^DPT(DFN,.312,+DA,2))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,+DA,2)) S IBDIF=1 G COMPPTQ
"RTN","IBCNSP3",40,0)
 I $G(^DPT(DFN,.312,+DA,3))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,+DA,3)) S IBDIF=1 G COMPPTQ
"RTN","IBCNSP3",41,0)
 I $G(^DPT(DFN,.312,+DA,4))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,+DA,4)) S IBDIF=1 G COMPPTQ
"RTN","IBCNSP3",42,0)
 I $G(^DPT(DFN,.312,+DA,5))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,+DA,5)) S IBDIF=1 G COMPPTQ
"RTN","IBCNSP3",43,0)
 I $G(^DPT(DFN,.312,+DA,7))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,+DA,7)) S IBDIF=1 G COMPPTQ    ; IB*2.0*497 (vd)
"RTN","IBCNSP3",44,0)
 ;
"RTN","IBCNSP3",45,0)
COMPPTQ I IBDIF D:'$D(IBCOVP) COVERED^IBCNSM31(DFN,$P($G(^DPT(DFN,.31)),"^",11))
"RTN","IBCNSP3",46,0)
 Q
"RTN","IBCNSP3",47,0)
 ;
"RTN","IBCNSP3",48,0)
UPDATPT(DFN,DA) ; -- enter date and user if editing has taken place
"RTN","IBCNSP3",49,0)
 N DR,DIE,DIC
"RTN","IBCNSP3",50,0)
 S DIE="^DPT("_DFN_",.312,",DA(1)=DFN
"RTN","IBCNSP3",51,0)
 S DR="1.05///NOW;1.06////"_DUZ
"RTN","IBCNSP3",52,0)
 D ^DIE
"RTN","IBCNSP3",53,0)
 Q
"RTN","IBCNSP3",54,0)
 ;
"RTN","IBCNSP3",55,0)
EM ; -- Employer for claims update
"RTN","IBCNSP3",56,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP3",57,0)
 N IBDIF,DA,DR,DIC,DIE
"RTN","IBCNSP3",58,0)
 D SAVEPT(DFN,IBCDFN)
"RTN","IBCNSP3",59,0)
 D VARS
"RTN","IBCNSP3",60,0)
 L +^DPT(DFN,.312,+$P($G(IBPPOL),"^",4)):5 I '$T D LOCKED^IBTRCD1 G EMQ
"RTN","IBCNSP3",61,0)
 ;
"RTN","IBCNSP3",62,0)
 ;S DR="2.01;S:'$P($G(^DPT(DFN,.312,+$G(DA),2)),U) Y=""@999"";W !!,""*** If ROI applies, make sure current consent is signed! ***"",!;2.015;2.02;2.03;2.04;2.05;2.06;2.07;2.08;2.09;@999"
"RTN","IBCNSP3",63,0)
 ;
"RTN","IBCNSP3",64,0)
 S DR="2.1" D ^DIE K DIE,DR
"RTN","IBCNSP3",65,0)
 ;
"RTN","IBCNSP3",66,0)
 I +$P($G(^DPT(DFN,.312,+$G(DA),2)),U,10),$P($G(^DPT(DFN,.312,+$G(DA),2)),U,9)="" D EMPSET(DFN,$G(DA)) ; curr emp
"RTN","IBCNSP3",67,0)
 ;
"RTN","IBCNSP3",68,0)
 I +$P($G(^DPT(DFN,.312,+$G(DA),2)),U,10) D VARS S DR="2.015;2.11;2.12;2.01;W:+X !!,""*** If ROI applies, make sure current consent is signed! ***"",!!;2.02;2.03;2.04;2.05;2.06;2.07;2.08;@999" D ^DIE K DIE,DR
"RTN","IBCNSP3",69,0)
 ;
"RTN","IBCNSP3",70,0)
 ;I '$P($G(^DPT(DFN,.312,+$G(DA),2)),U) D VARS S DR="2.015///@;2.02///@;2.03///@;2.04///@;2.05///@;2.06///@;2.07///@;2.08///@" D ^DIE
"RTN","IBCNSP3",71,0)
 ;
"RTN","IBCNSP3",72,0)
 I '$P($G(^DPT(DFN,.312,+$G(DA),2)),U,10) D VARS S DR="2.01///@;2.015///@;2.02///@;2.03///@;2.04///@;2.05///@;2.06///@;2.07///@;2.08///@;2.11///@;2.12///@" D ^DIE
"RTN","IBCNSP3",73,0)
 ;
"RTN","IBCNSP3",74,0)
 D COMPPT(DFN,IBCDFN)
"RTN","IBCNSP3",75,0)
 I IBDIF D UPDATPT(DFN,IBCDFN),BLD^IBCNSP
"RTN","IBCNSP3",76,0)
 L -^DPT(DFN,.312,+$P($G(IBPPOL),"^",4))
"RTN","IBCNSP3",77,0)
EMQ S VALMBCK="R" Q
"RTN","IBCNSP3",78,0)
 ;
"RTN","IBCNSP3",79,0)
AC ; -- Add Comment
"RTN","IBCNSP3",80,0)
 D FULL^VALM1 W !!
"RTN","IBCNSP3",81,0)
 N IBDIF,DA,DR,DIE,DIC,X,Y,IBOUT,IBDEL
"RTN","IBCNSP3",82,0)
 S (IBOUT,IBDEL)=0
"RTN","IBCNSP3",83,0)
 ;
"RTN","IBCNSP3",84,0)
 D SAVEPT(DFN,IBCDFN),VARS
"RTN","IBCNSP3",85,0)
 L +^DPT(DFN,.312,+$P($G(IBPPOL),U,4)):5 I '$T D LOCKED^IBTRCD1 G ACQ
"RTN","IBCNSP3",86,0)
 ;
"RTN","IBCNSP3",87,0)
 ; -- get the patient policy comments
"RTN","IBCNSP3",88,0)
 D PPCOMM(+$P($G(IBPPOL),U,4),.IBOUT,.IBDEL) I IBOUT&('IBDEL) L -^DPT(DFN,.312,+$P($G(IBPPOL),U,4)) G ACQ  ; IB*2*528
"RTN","IBCNSP3",89,0)
 I 'IBDEL D COMPPT(DFN,IBCDFN) I IBDIF D UPDATPT(DFN,IBCDFN)
"RTN","IBCNSP3",90,0)
 L -^DPT(DFN,.312,+$P($G(IBPPOL),"^",4))
"RTN","IBCNSP3",91,0)
 ;
"RTN","IBCNSP3",92,0)
 W !!,"You may now enter comments about this Group Plan that pertains to all Patients"
"RTN","IBCNSP3",93,0)
 L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G ACQ
"RTN","IBCNSP3",94,0)
 ;
"RTN","IBCNSP3",95,0)
 S DIE="^IBA(355.3,",DA=IBCPOL,DR="11"
"RTN","IBCNSP3",96,0)
 D ^DIE
"RTN","IBCNSP3",97,0)
 ;
"RTN","IBCNSP3",98,0)
 D BLD^IBCNSP
"RTN","IBCNSP3",99,0)
 L -^IBA(355.3,+IBCPOL)
"RTN","IBCNSP3",100,0)
ACQ S VALMBCK="R" Q
"RTN","IBCNSP3",101,0)
 ;
"RTN","IBCNSP3",102,0)
PPCOMM(PLIEN,IBOUT,IBDEL) ; ib*2*528   record patient policy comments
"RTN","IBCNSP3",103,0)
 N IBDT,CMIEN
"RTN","IBCNSP3",104,0)
 ;comments do not exist for the user so add
"RTN","IBCNSP3",105,0)
 I '$O(^DPT(DFN,.312,PLIEN,13,"C",DUZ,"")) D ADCOM(PLIEN,.IBOUT) Q
"RTN","IBCNSP3",106,0)
 ; comments exist for the user, need to determine if for same day.  
"RTN","IBCNSP3",107,0)
 S IBDT=$O(^DPT(DFN,.312,PLIEN,13,"B",""),-1),CMIEN=$O(^DPT(DFN,.312,PLIEN,13,"B",IBDT,""),-1)
"RTN","IBCNSP3",108,0)
 ; comments exist for the user and they exist for the TODAY'S date so edit
"RTN","IBCNSP3",109,0)
 I $P(^DPT(DFN,.312,PLIEN,13,CMIEN,0),U,2)=DUZ,$P($P($G(^DPT(DFN,.312,PLIEN,13,CMIEN,0)),U),".")=DT D EDCOM(PLIEN,IBDT,.IBOUT,.IBDEL) Q
"RTN","IBCNSP3",110,0)
 ; user does not have comments for the current date so just add it
"RTN","IBCNSP3",111,0)
 D ADCOM(PLIEN,.IBOUT)
"RTN","IBCNSP3",112,0)
 Q
"RTN","IBCNSP3",113,0)
 ;
"RTN","IBCNSP3",114,0)
ADCOM(PLIEN,IBOUT) ; add new entry to the COMMENT - SUBSCRIBER POLICY multiple
"RTN","IBCNSP3",115,0)
 ; -- lock the "comment - subscriber policy" multiple so that previous comments can't be edited
"RTN","IBCNSP3",116,0)
 L +^DPT(DFN,.312,PLIEN,13):5 I '$T D LOCKED^IBTRCD1 S IBOUT=1 Q
"RTN","IBCNSP3",117,0)
 ;
"RTN","IBCNSP3",118,0)
 N Y,IBCOM,FDA,IENS,DUOUT,DTOUT,DIERR
"RTN","IBCNSP3",119,0)
 ;
"RTN","IBCNSP3",120,0)
 W !
"RTN","IBCNSP3",121,0)
 ;
"RTN","IBCNSP3",122,0)
 ; -- prompt user to enter comments
"RTN","IBCNSP3",123,0)
 S DIR("A")="Patient Policy Comment: ",DIR(0)="FAO^3:245"
"RTN","IBCNSP3",124,0)
 S DIR("?")="This response must have at least 3 characters and no more than 245 characters and must not contain an embedded '^' "
"RTN","IBCNSP3",125,0)
 D ^DIR I $D(DTOUT) S IBOUT=1 G ADQ
"RTN","IBCNSP3",126,0)
 S IBCOM=Y
"RTN","IBCNSP3",127,0)
 ;
"RTN","IBCNSP3",128,0)
 ; -- update the comment(s) in database
"RTN","IBCNSP3",129,0)
 I IBCOM]""&(IBCOM'[U) D
"RTN","IBCNSP3",130,0)
 . ;
"RTN","IBCNSP3",131,0)
 . ; -- populate the fda array with data
"RTN","IBCNSP3",132,0)
 . S IENS="+1,"_PLIEN_","_DFN_","
"RTN","IBCNSP3",133,0)
 . S FDA(2.342,IENS,.01)=$$NOW^XLFDT()
"RTN","IBCNSP3",134,0)
 . S FDA(2.342,IENS,.02)=DUZ
"RTN","IBCNSP3",135,0)
 . S FDA(2.342,IENS,.03)=IBCOM
"RTN","IBCNSP3",136,0)
 . ;
"RTN","IBCNSP3",137,0)
 . ; -- update the database using the fda array
"RTN","IBCNSP3",138,0)
 . D UPDATE^DIE(,"FDA") I $D(DIERR) D COMERR("Error occurred in ADCOM-IBCNSP3. Could NOT Update Subscriber Policy Comments...",.IBOUT)
"RTN","IBCNSP3",139,0)
 ;
"RTN","IBCNSP3",140,0)
 ; -- unlock the "comment - subscriber policy" multiple
"RTN","IBCNSP3",141,0)
ADQ L -^DPT(DFN,.312,PLIEN,13)
"RTN","IBCNSP3",142,0)
 Q
"RTN","IBCNSP3",143,0)
 ;
"RTN","IBCNSP3",144,0)
EDCOM(PLIEN,IBDT,IBOUT,IBDEL) ; edit the existing entry at 2.312,1.18 multiple
"RTN","IBCNSP3",145,0)
 N DA,DR,DIE,IBNM,DIRUT,DUOUT,DTOUT,IBTXT1,IBTXT2,DIERR
"RTN","IBCNSP3",146,0)
 ;
"RTN","IBCNSP3",147,0)
 ; -- set up system variables for editing comments
"RTN","IBCNSP3",148,0)
 S DA=$O(^DPT(DFN,.312,PLIEN,13,"BB",DUZ,IBDT,""),-1)
"RTN","IBCNSP3",149,0)
 S DIE="^DPT("_DFN_",.312,"_PLIEN_",13,"
"RTN","IBCNSP3",150,0)
 S DA(2)=DFN,DA(1)=PLIEN
"RTN","IBCNSP3",151,0)
 S DR=".03"
"RTN","IBCNSP3",152,0)
 ;
"RTN","IBCNSP3",153,0)
 ; -- retrieve the comments before editing
"RTN","IBCNSP3",154,0)
 S IBTXT1=$$GET1^DIQ(2.342,DA_","_PLIEN_","_DFN_",",.03,"E")
"RTN","IBCNSP3",155,0)
 I $D(DIERR) D COMERR("Error occurred in EDCOM-IBCNSP3. Could NOT Retrieve Subscriber Policy Comments...",.IBOUT) Q
"RTN","IBCNSP3",156,0)
 ;
"RTN","IBCNSP3",157,0)
 ; -- edit the latest comment made by the user
"RTN","IBCNSP3",158,0)
 D ^DIE I $D(DIRUT)!$D(DUOUT)!($D(DTOUT)) S IBOUT=1 Q
"RTN","IBCNSP3",159,0)
 ;
"RTN","IBCNSP3",160,0)
 ; -- determine if comments were deleted
"RTN","IBCNSP3",161,0)
 I $G(^DPT(DFN,.312,PLIEN,13,DA,1))']"" S DR=".01///@;.02///@" D ^DIE S IBDEL=1 Q
"RTN","IBCNSP3",162,0)
 ;
"RTN","IBCNSP3",163,0)
 ; -- retrieve the comments after editing.  Quit if no edits made to the comments
"RTN","IBCNSP3",164,0)
 S IBTXT2=$$GET1^DIQ(2.342,DA_","_PLIEN_","_DFN_",",.03,"E")
"RTN","IBCNSP3",165,0)
 I $D(DIERR) D COMERR("Error occurred in EDCOM-IBCNSP3. Could NOT Retrieve Subscriber Policy Comments after editing it...",.IBOUT) Q
"RTN","IBCNSP3",166,0)
 I IBTXT1=IBTXT2 Q
"RTN","IBCNSP3",167,0)
 ;
"RTN","IBCNSP3",168,0)
 ; -- get user name to update comment field
"RTN","IBCNSP3",169,0)
 S IBNM=$$GET1^DIQ(200,DUZ_",",.01,"E")
"RTN","IBCNSP3",170,0)
 I $D(DIERR) D COMERR("Error occurred in EDCOM-IBCNSP3. Could NOT Retrieve User Name to update comment field...",.IBOUT) Q
"RTN","IBCNSP3",171,0)
 ;
"RTN","IBCNSP3",172,0)
 ; -- determine if comments were removed; update date/time and user fields accordingly
"RTN","IBCNSP3",173,0)
 I $G(^DPT(DFN,.312,PLIEN,13,DA,1))]"" S DR=".01///"_$$NOW^XLFDT()_";.02///"_IBNM
"RTN","IBCNSP3",174,0)
 E  S DR=".01///@;.02///@"
"RTN","IBCNSP3",175,0)
 D ^DIE
"RTN","IBCNSP3",176,0)
 Q
"RTN","IBCNSP3",177,0)
 ;
"RTN","IBCNSP3",178,0)
COMERR(IBTXT,IBOUT) ; display error messages
"RTN","IBCNSP3",179,0)
 W !!,(IBTXT),!!
"RTN","IBCNSP3",180,0)
 S IBOUT=1
"RTN","IBCNSP3",181,0)
 D PAUSE^VALM1
"RTN","IBCNSP3",182,0)
 Q
"RTN","IBCNSP3",183,0)
 ;
"RTN","IBCNSP3",184,0)
BLS(X,Y) ; -- blank a section of lines
"RTN","IBCNSP3",185,0)
 N I
"RTN","IBCNSP3",186,0)
 F I=X:1:Y D BLANK^IBCNSP(.I)
"RTN","IBCNSP3",187,0)
 Q
"RTN","IBCNSP3",188,0)
 ;
"RTN","IBCNSP3",189,0)
VARS ; -- set vars for call to die for .312 node
"RTN","IBCNSP3",190,0)
 S DA(1)=DFN,DA=$P(IBPPOL,"^",4)
"RTN","IBCNSP3",191,0)
 S DIE="^DPT("_DA(1)_",.312,"
"RTN","IBCNSP3",192,0)
 Q
"RTN","IBCNSP3",193,0)
 ;
"RTN","IBCNSP3",194,0)
SAVE(IBCPOL) ; -- Save the global before editing
"RTN","IBCNSP3",195,0)
 K ^TMP($J,"IBCNSP")
"RTN","IBCNSP3",196,0)
 S ^TMP($J,"IBCNSP",355.3,+IBCPOL,0)=$G(^IBA(355.3,+IBCPOL,0))
"RTN","IBCNSP3",197,0)
 S ^TMP($J,"IBCNSP",355.3,+IBCPOL,1)=$G(^IBA(355.3,+IBCPOL,1))
"RTN","IBCNSP3",198,0)
 S ^TMP($J,"IBCNSP",355.3,+IBCPOL,2)=$G(^IBA(355.3,+IBCPOL,2))   ; IB*2.0*497 (vd)
"RTN","IBCNSP3",199,0)
 ;;Daou/EEN - adding BIN and PCN
"RTN","IBCNSP3",200,0)
 S ^TMP($J,"IBCNSP",355.3,+IBCPOL,6)=$G(^IBA(355.3,+IBCPOL,6))
"RTN","IBCNSP3",201,0)
 Q
"RTN","IBCNSP3",202,0)
 ;
"RTN","IBCNSP3",203,0)
COMP(IBCPOL) ; -- Compare before editing with globals
"RTN","IBCNSP3",204,0)
 S IBDIF=0
"RTN","IBCNSP3",205,0)
 I $G(^IBA(355.3,+IBCPOL,0))'=$G(^TMP($J,"IBCNSP",355.3,+IBCPOL,0)) S IBDIF=1 Q
"RTN","IBCNSP3",206,0)
 I $G(^IBA(355.3,+IBCPOL,1))'=$G(^TMP($J,"IBCNSP",355.3,+IBCPOL,1)) S IBDIF=1 Q
"RTN","IBCNSP3",207,0)
 I $G(^IBA(355.3,+IBCPOL,2))'=$G(^TMP($J,"IBCNSP",355.3,+IBCPOL,2)) S IBDIF=1 Q    ; IB*2.0*497 (vd)
"RTN","IBCNSP3",208,0)
 ;;Daou/EEN - adding BIN and PCN
"RTN","IBCNSP3",209,0)
 I $G(^IBA(355.3,+IBCPOL,6))'=$G(^TMP($J,"IBCNSP",355.3,+IBCPOL,6)) S IBDIF=1 Q
"RTN","IBCNSP3",210,0)
 Q
"RTN","IBCNSP3",211,0)
 ;
"RTN","IBCNSP3",212,0)
UPDATE(IBCPOL) ; -- Update last edited by
"RTN","IBCNSP3",213,0)
 N DA,DIC,DIE,DR,IBNM
"RTN","IBCNSP3",214,0)
 S DIE="^IBA(355.3,",DA=IBCPOL,DR="1.05///NOW;1.06////"_DUZ
"RTN","IBCNSP3",215,0)
 D ^DIE
"RTN","IBCNSP3",216,0)
 Q
"RTN","IBCNSP3",217,0)
 ;
"RTN","IBCNSP3",218,0)
RIDERS ; -- add/edit personal riders
"RTN","IBCNSP3",219,0)
 ;
"RTN","IBCNSP3",220,0)
 D FULL^VALM1
"RTN","IBCNSP3",221,0)
 N IBDIF,DA,DR,DIE,DIC,X,Y,IBCDFN,IBPRD,IBPRY
"RTN","IBCNSP3",222,0)
 S IBCDFN=$P(IBPPOL,"^",4)
"RTN","IBCNSP3",223,0)
 W ! D DISPR W !
"RTN","IBCNSP3",224,0)
 ;
"RTN","IBCNSP3",225,0)
R1 S DIC="^IBA(355.7,",DIC(0)="AEQML",DLAYGO=355.7
"RTN","IBCNSP3",226,0)
 S DIC("DR")=".02////"_DFN_";.03////"_IBCDFN
"RTN","IBCNSP3",227,0)
 S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,3)=IBCDFN"
"RTN","IBCNSP3",228,0)
 I $D(IBPRD) S DIC("B")=IBPRD
"RTN","IBCNSP3",229,0)
 D ^DIC K DIC,IBPRD
"RTN","IBCNSP3",230,0)
 I +Y<1 G RIDERQ
"RTN","IBCNSP3",231,0)
 S IBPRY=+Y
"RTN","IBCNSP3",232,0)
 L +^IBA(355.7,IBPRY):5 I '$T D LOCKED^IBTRCD1 G RIDERQ
"RTN","IBCNSP3",233,0)
 S DIE="^IBA(355.7,",DA=+Y,DR=".01",DIDEL=355.7
"RTN","IBCNSP3",234,0)
 D ^DIE K DA,DR,DIE,DIC,DIDEL,DLAYGO
"RTN","IBCNSP3",235,0)
 L -^IBA(355.7,IBPRY)
"RTN","IBCNSP3",236,0)
 W ! G R1
"RTN","IBCNSP3",237,0)
RIDERQ S VALMBCK="R"
"RTN","IBCNSP3",238,0)
 Q
"RTN","IBCNSP3",239,0)
 ;
"RTN","IBCNSP3",240,0)
RD ; -- Add riders/ for multiple policies
"RTN","IBCNSP3",241,0)
 D FULL^VALM1
"RTN","IBCNSP3",242,0)
 N I,J,IBXX,VALMY
"RTN","IBCNSP3",243,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCNSP3",244,0)
 I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
"RTN","IBCNSP3",245,0)
 .S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
"RTN","IBCNSP3",246,0)
 .Q:IBPPOL=""
"RTN","IBCNSP3",247,0)
 .D RIDERS
"RTN","IBCNSP3",248,0)
 .Q
"RTN","IBCNSP3",249,0)
 D BLD^IBCNSM
"RTN","IBCNSP3",250,0)
 S VALMBCK="R"
"RTN","IBCNSP3",251,0)
 Q
"RTN","IBCNSP3",252,0)
 ;
"RTN","IBCNSP3",253,0)
DISPR ; -- Display riders
"RTN","IBCNSP3",254,0)
 N IBPR,I,J
"RTN","IBCNSP3",255,0)
 S I=0
"RTN","IBCNSP3",256,0)
 I '$G(IBCDFN)!('$G(DFN)) G DISPRQ
"RTN","IBCNSP3",257,0)
 W !,"Current Personal Riders: "
"RTN","IBCNSP3",258,0)
 F  S I=$O(^IBA(355.7,"APP",DFN,IBCDFN,I)) Q:'I  S J=$O(^(I,0)),IBPR=$G(^IBA(355.7,+J,0)) D
"RTN","IBCNSP3",259,0)
 .S IBPRD=$$EXPAND^IBTRE(355.7,.01,+IBPR)
"RTN","IBCNSP3",260,0)
 .W !?5,IBPRD
"RTN","IBCNSP3",261,0)
 I '$D(IBPRD) W !?5,"None Indicated"
"RTN","IBCNSP3",262,0)
DISPRQ Q
"RTN","IBCNSP3",263,0)
 ;
"RTN","IBCNSP3",264,0)
EMPSET(DFN,IBCPOL) ; insert patient or spouses current employer as ESGHP address if that employer sponsors this plan
"RTN","IBCNSP3",265,0)
 N IBWHOS,VAOA,DIR,IBE,IBEMPST,DR,X,Y
"RTN","IBCNSP3",266,0)
 I +$G(DFN) S IBWHOS=$P($G(^DPT(DFN,.312,+$G(IBCPOL),0)),U,6) S VAOA("A")=$S(IBWHOS="v":5,IBWHOS="s":6,1:"")
"RTN","IBCNSP3",267,0)
 I $G(VAOA("A"))'="" D OAD^VADPT I $G(VAOA(9))'="" D
"RTN","IBCNSP3",268,0)
 . ;
"RTN","IBCNSP3",269,0)
 . S DIR("A")="Current Employer "_VAOA(9)_" Sponsors this Plan",DIR("B")="No",DIR(0)="Y" W ! D ^DIR W ! Q:'Y  W "...."
"RTN","IBCNSP3",270,0)
 . D VARS S IBE=$S(IBWHOS="v":.311,1:.25),IBEMPST=$P($G(^DPT(DFN,IBE)),U,15)
"RTN","IBCNSP3",271,0)
 . ;
"RTN","IBCNSP3",272,0)
 . S DR="2.015///"_VAOA(9)_";2.02///"_VAOA(1)_";2.03///"_VAOA(2)_";2.04///"_VAOA(3)_";2.05///"_VAOA(4) D ^DIE
"RTN","IBCNSP3",273,0)
 . S DR="2.06////"_$P(VAOA(5),U,1)_";2.07////"_$P(VAOA(11),U,1)_";2.08///"_$E(VAOA(8),1,15)_";2.11////"_IBEMPST D ^DIE
"RTN","IBCNSP3",274,0)
 Q
"RTN","IBCNSP3",275,0)
 ;
"RTN","IBCNVCC")
0^39^B19887877
"RTN","IBCNVCC",1,0)
IBCNVCC ;ALB/BAA - Module for PATIENT INSURANCE CONSISTENCY CHECKER LOGIC ;25 Feb 2015
"RTN","IBCNVCC",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVCC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVCC",4,0)
 ;
"RTN","IBCNVCC",5,0)
 ; IB SSVI
"RTN","IBCNVCC",6,0)
 ;        INPUT
"RTN","IBCNVCC",7,0)
 ;            DFN = PATIENT DFN
"RTN","IBCNVCC",8,0)
 ;         INSPTR = INSURANCE TYPE MULTIPLE IEN
"RTN","IBCNVCC",9,0)
 ;
"RTN","IBCNVCC",10,0)
 ;linetags in routines correspond to IEN of file 366.2
"RTN","IBCNVCC",11,0)
 ;
"RTN","IBCNVCC",12,0)
 ;variables:  DGVT = 1 if VETERAN? = YES, 0 if NO
"RTN","IBCNVCC",13,0)
 ;            DGSC = 1 if SC? = YES, 0 if NO
"RTN","IBCNVCC",14,0)
 ;            DGCD = 0 node of file EC file (#8)
"RTN","IBCNVCC",15,0)
 ;           DGCHK = #s to check (separated by ,s)
"RTN","IBCNVCC",16,0)
 ;           DGLST = next # to check
"RTN","IBCNVCC",17,0)
 ;            DGER = inconsistencies found (separated by ,s)
"RTN","IBCNVCC",18,0)
 ;           DGNCK = 1 if missing key IB SUPERVISOR  data...can't process further
"RTN","IBCNVCC",19,0)
 ;
"RTN","IBCNVCC",20,0)
EN(DFN,INSPTR) ; need patient and insurance pointer
"RTN","IBCNVCC",21,0)
 N ANYMSE,CONARR,CONCHK,CONERR,CONSPEC,LOC,I5,I6,DGER,DGCHK,DGP,EXIT,DGLDT,DGLST
"RTN","IBCNVCC",22,0)
 N MSECHK,MSESET,MSERR,MSDATERR,RANGE,RANSET,DUOUT,I,I1
"RTN","IBCNVCC",23,0)
 N DGEND1,INSURCO,PLAN,PRH,PRI,DGCT,INSMUL,DGD,X
"RTN","IBCNVCC",24,0)
 ;
"RTN","IBCNVCC",25,0)
 S INSMUL=0
"RTN","IBCNVCC",26,0)
EN4  ; Make sure DFN and INSPTR not null
"RTN","IBCNVCC",27,0)
 I DFN=""!(INSPTR="") Q
"RTN","IBCNVCC",28,0)
 F I=0,1,2,3,4,5,7 S DGP(I)=$G(^DPT(DFN,.312,INSPTR,I))
"RTN","IBCNVCC",29,0)
 S INSURCO=$P(DGP(0),"^",1) I INSURCO'="" S INSURCO=$P($G(^DIC(36,INSURCO,0)),"^",1) ;W !,"Press return to continue." R X:DTIME W !!,"INSURANCE COMPANY - ",INSURCO
"RTN","IBCNVCC",30,0)
 S DGEND1=16  ; END LAST RULE OF INCONSISTENCY CHECKS (LAST RULE +1)
"RTN","IBCNVCC",31,0)
 S DGCHK="," F I=0:0 S I=$O(^IBCN(366.2,I)) Q:'I!(I=DGEND1)  I $D(^IBCN(366.2,I,0)),$S(I=1:1,I=2:1,'$P(^IBCN(366.2,I,0),"^",5):1,1:0),I'=DGEND1 S DGCHK=DGCHK_I_","
"RTN","IBCNVCC",32,0)
 S (DGCT,DGER)=""
"RTN","IBCNVCC",33,0)
 S DGLST=+$P(DGCHK,",",2) G @DGLST
"RTN","IBCNVCC",34,0)
1 ;INSURANCE TYPE (INSURANCE COMPANY NAME)
"RTN","IBCNVCC",35,0)
 ;CHECK INACTIVE INSURANCE FIRST OR NULLED POINTER
"RTN","IBCNVCC",36,0)
 S X=""
"RTN","IBCNVCC",37,0)
 S DGD=$P(DGP(0),"^",1) I (DGD="") S X=1 D COMB,NEXT I +DGLST'=2 G @DGLST
"RTN","IBCNVCC",38,0)
 I $P($G(^DIC(36,DGD,0)),"^",5) S X=1 D COMB,NEXT I +DGLST'=2 G @DGLST
"RTN","IBCNVCC",39,0)
 ;CHECK IF VALID POINTER ( IF DELETED, ETC, USUALLY IF NO OUTSTANDING BILLS)
"RTN","IBCNVCC",40,0)
 S I=0 S I=$P($G(^DIC(36,DGD,0)),"^",1) S I1=0 I I'="" S I1=$O(^DIC(36,"B",I,I1))
"RTN","IBCNVCC",41,0)
 I 'I1 S X=1 D COMB
"RTN","IBCNVCC",42,0)
 D NEXT I +DGLST'=2 G @DGLST
"RTN","IBCNVCC",43,0)
2 ;GROUP PLAN
"RTN","IBCNVCC",44,0)
 S PLAN="",X=""
"RTN","IBCNVCC",45,0)
 S I1=0 ; INCONSISTENT
"RTN","IBCNVCC",46,0)
 S I1=$P(DGP(0),"^",18)
"RTN","IBCNVCC",47,0)
 I I1'="" S PLAN=I1 S I1=$P($G(^IBA(355.3,I1,0)),"^",11) D
"RTN","IBCNVCC",48,0)
 .I I1=1 D
"RTN","IBCNVCC",49,0)
 ..S I1=0  ; INACTIVE GROUP PLAN
"RTN","IBCNVCC",50,0)
 .E  D
"RTN","IBCNVCC",51,0)
 ..I (I1=0)!(I1="") S I1=1 ; ACTIVE OR NOT SPECIFIED
"RTN","IBCNVCC",52,0)
 ;
"RTN","IBCNVCC",53,0)
 I (I1="")!('I1) S PLAN="" S X=2 D COMB
"RTN","IBCNVCC",54,0)
 D NEXT I +DGLST'=3 G @DGLST
"RTN","IBCNVCC",55,0)
3 ; COORDINATION OF BENEFITS
"RTN","IBCNVCC",56,0)
 ; CHECK SET OF CODES
"RTN","IBCNVCC",57,0)
 I '(($P(DGP(0),"^",20)=1)!($P(DGP(0),"^",20)=2)!($P(DGP(0),"^",20)=3)) S X=3 D COMB
"RTN","IBCNVCC",58,0)
 D NEXT I +DGLST'=4 G @DGLST
"RTN","IBCNVCC",59,0)
4 ;SUBCRIBER ID
"RTN","IBCNVCC",60,0)
 S X=""
"RTN","IBCNVCC",61,0)
 I $P(DGP(7),U,2)="" S X=4 D COMB
"RTN","IBCNVCC",62,0)
 D NEXT I +DGLST'=5 G @DGLST
"RTN","IBCNVCC",63,0)
 ;
"RTN","IBCNVCC",64,0)
5 ;DATE LAST VERIFIED
"RTN","IBCNVCC",65,0)
 S X=""
"RTN","IBCNVCC",66,0)
 D NEXT I +DGLST'=6 G @DGLST
"RTN","IBCNVCC",67,0)
 ;
"RTN","IBCNVCC",68,0)
6 ;*GROUP NUMBER(REALLY FOR COMPUTED NEW GROUP NUMBER, BUT CHECK IN PLAN'S GROUP NUMBER)
"RTN","IBCNVCC",69,0)
 S PLAN=$G(PLAN),X=""
"RTN","IBCNVCC",70,0)
 I PLAN="" S PLAN=$P(DGP(0),"^",18)
"RTN","IBCNVCC",71,0)
 I PLAN="" S X=6 D COMB,NEXT G @DGLST
"RTN","IBCNVCC",72,0)
 I $P($G(^IBA(355.3,PLAN,0)),"^",4)="" S X=6 D COMB
"RTN","IBCNVCC",73,0)
 D NEXT I +DGLST'=7 G @DGLST
"RTN","IBCNVCC",74,0)
 ;
"RTN","IBCNVCC",75,0)
7 ;INSURED'S DOB
"RTN","IBCNVCC",76,0)
 S X=""
"RTN","IBCNVCC",77,0)
 I $P(DGP(3),U,1)="" S X=7 D COMB
"RTN","IBCNVCC",78,0)
 D NEXT I +DGLST'=8 G @DGLST
"RTN","IBCNVCC",79,0)
 ;
"RTN","IBCNVCC",80,0)
8 ;INSURED'S SSN
"RTN","IBCNVCC",81,0)
 S X=""
"RTN","IBCNVCC",82,0)
 I ($P(DGP(3),U,5)=""),($P(DGP(7),U,2)="") S X=8 D COMB
"RTN","IBCNVCC",83,0)
 D NEXT I +DGLST'=9 G @DGLST
"RTN","IBCNVCC",84,0)
 ;
"RTN","IBCNVCC",85,0)
 ;
"RTN","IBCNVCC",86,0)
9 ;INSURED'S SEX
"RTN","IBCNVCC",87,0)
 S X=""
"RTN","IBCNVCC",88,0)
 I ($P(DGP(3),U,12)="") S X=9 D COMB ; ($P(DGP(3),U,12)'="M")&($P(DGP(3),U,12)'="F") S X=9 D COMB
"RTN","IBCNVCC",89,0)
 D NEXT I +DGLST'=10 G @DGLST
"RTN","IBCNVCC",90,0)
 ;
"RTN","IBCNVCC",91,0)
10 ;PT. RELATIONSHIP-HIPAA
"RTN","IBCNVCC",92,0)
 S X=""
"RTN","IBCNVCC",93,0)
 ;
"RTN","IBCNVCC",94,0)
 S PRH=$P(DGP(4),U,3) I (PRH'="01")&(PRH'=18)&(PRH'=19)&(PRH'=20)&(PRH'=29)&(PRH'=32)&(PRH'=33)&(PRH'=39)&(PRH'=41)&(PRH'=53)&(PRH'="G8") S X=10 D COMB
"RTN","IBCNVCC",95,0)
 ;
"RTN","IBCNVCC",96,0)
 D NEXT I +DGLST'=11 G @DGLST
"RTN","IBCNVCC",97,0)
 ;
"RTN","IBCNVCC",98,0)
11 ;WHOSE INSURANCE
"RTN","IBCNVCC",99,0)
 S X=""
"RTN","IBCNVCC",100,0)
 I ($P(DGP(0),U,6)'="v")&($P(DGP(0),U,6)'="s")&($P(DGP(0),U,6)'="o") S X=11 D COMB
"RTN","IBCNVCC",101,0)
 ;
"RTN","IBCNVCC",102,0)
 D NEXT I +DGLST'=12 G @DGLDT
"RTN","IBCNVCC",103,0)
 ;
"RTN","IBCNVCC",104,0)
12 ;EFFECTIVE DATE OF POLICY
"RTN","IBCNVCC",105,0)
 S X=""
"RTN","IBCNVCC",106,0)
 I $P(DGP(0),U,8)="" S X=12 D COMB
"RTN","IBCNVCC",107,0)
 ;
"RTN","IBCNVCC",108,0)
 D NEXT I +DGLST'=13 G @DGLST
"RTN","IBCNVCC",109,0)
 ;
"RTN","IBCNVCC",110,0)
13 ; *GROUP NAME ((REALLY FOR COMPUTED NEW GROUP NAME, BUT CHECK IN PLAN'S GROUP NAME)
"RTN","IBCNVCC",111,0)
 S X=""
"RTN","IBCNVCC",112,0)
 I PLAN="" S X=13 D COMB,NEXT G @DGLST
"RTN","IBCNVCC",113,0)
 I $P($G(^IBA(355.3,PLAN,0)),"^",3)="" S X=13 D COMB
"RTN","IBCNVCC",114,0)
 D NEXT I +DGLST'=14 G @DGLST
"RTN","IBCNVCC",115,0)
 ;
"RTN","IBCNVCC",116,0)
14 ;PT. RELATIONSHIP TO INSURED
"RTN","IBCNVCC",117,0)
 S X=""
"RTN","IBCNVCC",118,0)
 S PRI=$P(DGP(0),U,16) I (PRI'="01")&(PRI'="02")&(PRI'="03")&(PRI'="08")&(PRI'="09")&(PRI'="11")&(PRI'="15")&(PRI'="18")&(PRI'="32")&(PRI'="33")&(PRI'="34")&(PRI'="35")&(PRI'="36") S X=14 D COMB
"RTN","IBCNVCC",119,0)
 D NEXT I +DGLST'=15 G @DGLST
"RTN","IBCNVCC",120,0)
 ;
"RTN","IBCNVCC",121,0)
15 ;NAME OF INSURED
"RTN","IBCNVCC",122,0)
 S X=""
"RTN","IBCNVCC",123,0)
 I $P(DGP(0),U,17)="" S X=15 D COMB
"RTN","IBCNVCC",124,0)
 ;
"RTN","IBCNVCC",125,0)
16 ;
"RTN","IBCNVCC",126,0)
 S X=""
"RTN","IBCNVCC",127,0)
99 ; synonymous with END
"RTN","IBCNVCC",128,0)
 ;
"RTN","IBCNVCC",129,0)
END ; end of routine...find next check to execute (or goto end)
"RTN","IBCNVCC",130,0)
 D ^IBCNVCC1
"RTN","IBCNVCC",131,0)
 Q
"RTN","IBCNVCC",132,0)
 ;
"RTN","IBCNVCC",133,0)
COMB ;record inconsistency
"RTN","IBCNVCC",134,0)
 S DGCT=DGCT+1,DGER=DGER_X_",",DGLST=X Q
"RTN","IBCNVCC",135,0)
 Q
"RTN","IBCNVCC",136,0)
 ;
"RTN","IBCNVCC",137,0)
NEXT ; find the next consistency check to check (goto end if can't process further)
"RTN","IBCNVCC",138,0)
 S I=$F(DGCHK,(","_DGLST_",")),DGLST=+$E(DGCHK,I,999) I +DGLST,DGLST<18 Q
"RTN","IBCNVCC",139,0)
 Q
"RTN","IBCNVCC",140,0)
 ;
"RTN","IBCNVCC",141,0)
COMB1 S DGCT=DGCT+1,DGER=DGER_X_",",DGLST=X Q
"RTN","IBCNVCC",142,0)
 ;
"RTN","IBCNVCC",143,0)
NEXT1 S I=$F(DGCHK,(","_+DGLST_",")),DGLST=+$E(DGCHK,I,999) S:'DGLST DGLST="END"
"RTN","IBCNVCC",144,0)
 Q
"RTN","IBCNVCC1")
0^131^B13802423
"RTN","IBCNVCC1",1,0)
IBCNVCC1 ;ALB/BAA - CONSISTENCY OF PATIENT INSURANCE DATA ;25 Feb 2015
"RTN","IBCNVCC1",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVCC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVCC1",4,0)
 ;
"RTN","IBCNVCC1",5,0)
 ; If no inconsistencies put patient into SSVI Pivot file
"RTN","IBCNVCC1",6,0)
 ; 
"RTN","IBCNVCC1",7,0)
EN ;Process insurance if not any inconsistencies found
"RTN","IBCNVCC1",8,0)
 N INSPT,VARPTR,PIVOTNUM,PIVOTPTR,INSPTT,IBT1,STNCNT,STATIONF,FACILCNT,IBT2,INSTITUT,CODEF,DSTAT,DIEN
"RTN","IBCNVCC1",9,0)
 N NOWDATE,STATION,DEFINST,INS,ORIGINSP,DGRPVV,DGNCK,DGLST,DGLDT
"RTN","IBCNVCC1",10,0)
 ;
"RTN","IBCNVCC1",11,0)
EN1 S DGEDCN=+$G(DGEDCN),DGRPOUT=+$G(DGRPOUT),DGCON=1
"RTN","IBCNVCC1",12,0)
 I $G(DGCT) D PROCON(DFN,INSPTR) Q  ; process inconsistencies and quit.
"RTN","IBCNVCC1",13,0)
 ; SET SOURCE OF INFORMATION TO "INTERFACILITY INS UPDATE" HERE AS POSSIBLE TRANSFER TO ICB FOR OTHER FACILITY TREATING SITES 
"RTN","IBCNVCC1",14,0)
 ; AS WELL AS SOURCE OF INFORMATION DATE
"RTN","IBCNVCC1",15,0)
 S IBSOURCE=$O(^IBE(355.12,"C","INTERFACILITY INS UPDATE",0))
"RTN","IBCNVCC1",16,0)
 ;
"RTN","IBCNVCC1",17,0)
 ;GET PATIENT NAME
"RTN","IBCNVCC1",18,0)
 N IBC,IBZ,IBS,IBFT,Y,PATNM,%
"RTN","IBCNVCC1",19,0)
 S PATNM=$$GET1^DIQ(2,DFN_",",.01)
"RTN","IBCNVCC1",20,0)
 K IBT1
"RTN","IBCNVCC1",21,0)
 ;
"RTN","IBCNVCC1",22,0)
 ; FLAG PER TREATING FACILITY IN MULTIPLE IN INSURANCE TYPE MULTIPLE FOR TREATING FACILITIES SENT  IN PIN/HL7 PIVOT FILE
"RTN","IBCNVCC1",23,0)
 D TFL^IBARXMU(DFN,.IBT1) ;ARRAY IN FORMAT IBT1(1)=500^2960101^ptr to ADT/HL7 Event Reason file (if exists)
"RTN","IBCNVCC1",24,0)
 ;    Where the first piece is the IEN of the institution, the second
"RTN","IBCNVCC1",25,0)
 ;    piece is the current date on record for that institution and the
"RTN","IBCNVCC1",26,0)
 ;    third piece is the event reason (if it exists).
"RTN","IBCNVCC1",27,0)
 ;    ALSO SCREENS OUT OTHER SITES BESIDES TYPES ="^VAMC^M&ROC^RO-OC^"
"RTN","IBCNVCC1",28,0)
 ;
"RTN","IBCNVCC1",29,0)
 S STNCNT=0
"RTN","IBCNVCC1",30,0)
 S STATIONF=0
"RTN","IBCNVCC1",31,0)
 S FACILCNT=0
"RTN","IBCNVCC1",32,0)
 K IBT2
"RTN","IBCNVCC1",33,0)
 S SITE=$$SITE^VASITE
"RTN","IBCNVCC1",34,0)
 S DEFINST=$$GET1^DIQ(8989.3,1_",",217,"I")  ; DEFAULT INSTITUTION
"RTN","IBCNVCC1",35,0)
 S STATION=$$GET1^DIQ(4,DEFINST_",",99,"I")
"RTN","IBCNVCC1",36,0)
 F  S STNCNT=$O(IBT1(STNCNT)) Q:(STNCNT="")  D
"RTN","IBCNVCC1",37,0)
 .I STATION=+IBT1(STNCNT) Q  ;DO NOT COUNT OWN SITE
"RTN","IBCNVCC1",38,0)
 .S FACILCNT=FACILCNT+1
"RTN","IBCNVCC1",39,0)
 .S STATIONF=1
"RTN","IBCNVCC1",40,0)
 .S DIEN=0
"RTN","IBCNVCC1",41,0)
 .S DSTAT=$P($G(IBT1(STNCNT)),U)
"RTN","IBCNVCC1",42,0)
 .S DIEN=$O(^DIC(4,"D",DSTAT,DIEN))
"RTN","IBCNVCC1",43,0)
 .;S INSTITUT=$P($G(^DIC(4,DIEN,0)),U)
"RTN","IBCNVCC1",44,0)
 .S INSTITUT=$$GET1^DIQ(4,DIEN_",",.01,"I")
"RTN","IBCNVCC1",45,0)
 .;S CODEF=$P($G(^DIC(4,DIEN,3)),U)
"RTN","IBCNVCC1",46,0)
 .S CODEF=$$GET1^DIQ(4,DIEN_",",13)
"RTN","IBCNVCC1",47,0)
 .I CODEF'="" D
"RTN","IBCNVCC1",48,0)
 ..;S CODEF=$P($G(^DIC(4.1,CODEF,0)),U)
"RTN","IBCNVCC1",49,0)
 ..S CODEF=$$GET1^DIQ(4.1,CODEF_",",.01)
"RTN","IBCNVCC1",50,0)
 .S IBT2(STNCNT)=INSTITUT_U_CODEF
"RTN","IBCNVCC1",51,0)
 I STATIONF=1 D
"RTN","IBCNVCC1",52,0)
 .D FULL^VALM1
"RTN","IBCNVCC1",53,0)
 .K EXITPR
"RTN","IBCNVCC1",54,0)
 .S VARPTR=DFN_";DPT("
"RTN","IBCNVCC1",55,0)
 .;
"RTN","IBCNVCC1",56,0)
 .S PIVOTPTR=0
"RTN","IBCNVCC1",57,0)
 .S PIVOTPTR=$$FNDPVT^IBCNVPU0(DFN)
"RTN","IBCNVCC1",58,0)
 .D NOW^%DTC S NOWDATE=%
"RTN","IBCNVCC1",59,0)
 .;IBCN SSVI PIN/HL7 PIVOT TABLE file
"RTN","IBCNVCC1",60,0)
 .I 'PIVOTPTR S PIVOTNUM=+$$PIVNW^IBCNVPU0(DFN,.NOWDATE,5,VARPTR) Q:PIVOTNUM=-1
"RTN","IBCNVCC1",61,0)
 .I PIVOTPTR S PIVOTNUM=$$GET1^DIQ(366,PIVOTPTR_",",.02)
"RTN","IBCNVCC1",62,0)
 .;
"RTN","IBCNVCC1",63,0)
 .; Mark entry as requires transmission
"RTN","IBCNVCC1",64,0)
 .D XMITFLAG^IBCNVPU0(PIVOTPTR,PIVOTNUM)
"RTN","IBCNVCC1",65,0)
 Q
"RTN","IBCNVCC1",66,0)
 ;
"RTN","IBCNVCC1",67,0)
 ;
"RTN","IBCNVCC1",68,0)
DELINC(DFN) ; Delete patient from inconsistant data file
"RTN","IBCNVCC1",69,0)
 I '$D(^IBCN(366.1,DFN,0)) Q
"RTN","IBCNVCC1",70,0)
1 ; Delete entries in consistancy file
"RTN","IBCNVCC1",71,0)
 N DGEND1,DA,DIK
"RTN","IBCNVCC1",72,0)
 S DGEND1=16,DIK="^IBCN(366.1,",DA=DFN
"RTN","IBCNVCC1",73,0)
 L +^IBCN(366.1,0):5 G DELEX:'$T
"RTN","IBCNVCC1",74,0)
 D ^DIK
"RTN","IBCNVCC1",75,0)
DELEX L -^IBCN(366.1,0)
"RTN","IBCNVCC1",76,0)
 Q
"RTN","IBCNVCC1",77,0)
 ;
"RTN","IBCNVCC1",78,0)
PROCON(DFN,INSPTR) ; Process inconsistencies found 
"RTN","IBCNVCC1",79,0)
 I '$D(^IBCN(366.1,DFN)) D SETCON(DFN)
"RTN","IBCNVCC1",80,0)
 D CONUPDT(DFN,INSPTR)
"RTN","IBCNVCC1",81,0)
 Q
"RTN","IBCNVCC1",82,0)
 ;
"RTN","IBCNVCC1",83,0)
SETCON(DFN) ; creat entry for patient if doesn't already exist.
"RTN","IBCNVCC1",84,0)
 N I,X,DA,DIC,DIE,DR,DINUM,DLAYGO
"RTN","IBCNVCC1",85,0)
 ;
"RTN","IBCNVCC1",86,0)
 ; - lock the INCONSISTENCY file for editing
"RTN","IBCNVCC1",87,0)
 L +^IBCN(366.1,0):5 I '$T Q "-1^Error - Unable to lock Inconsistant Data file"
"RTN","IBCNVCC1",88,0)
 ;
"RTN","IBCNVCC1",89,0)
 ; - set up variables to create a new entry into the PIVOT file
"RTN","IBCNVCC1",90,0)
 S X=DFN,DINUM=DFN,DLAYGO=366.1,DIC="^IBCN(366.1,",DIC(0)="L"
"RTN","IBCNVCC1",91,0)
 ;
"RTN","IBCNVCC1",92,0)
 ; - create a new file entry into the PIVOT file
"RTN","IBCNVCC1",93,0)
 D FILE^DICN K DIC,DINUM,DLAYGO I +Y<1 D UNLK Q "-1^Error - Unable to create new Inconsistant Data file entry"
"RTN","IBCNVCC1",94,0)
 ;
"RTN","IBCNVCC1",95,0)
 Q
"RTN","IBCNVCC1",96,0)
 ;
"RTN","IBCNVCC1",97,0)
CONUPDT(DFN,INSPTR)  ; Update consistencies for each insurance
"RTN","IBCNVCC1",98,0)
 N NOW,RECDDAT,FILE
"RTN","IBCNVCC1",99,0)
 K FDA,FDAIEN,OROUT
"RTN","IBCNVCC1",100,0)
 D NOW^%DTC S RECDDAT=%
"RTN","IBCNVCC1",101,0)
 S FDAIEN(1)=DFN
"RTN","IBCNVCC1",102,0)
 S FILE=366.16
"RTN","IBCNVCC1",103,0)
 S FDA(FILE,"?+1,"_FDAIEN(1)_",",.01)=INSPTR
"RTN","IBCNVCC1",104,0)
 S FDA(FILE,"?+1,"_FDAIEN(1)_",",1)=DGER
"RTN","IBCNVCC1",105,0)
 S FDA(FILE,"?+1,"_FDAIEN(1)_",",2)=RECDDAT
"RTN","IBCNVCC1",106,0)
 D UPDATE^DIE("","FDA","OROUT")
"RTN","IBCNVCC1",107,0)
 K FDA,OROUT,FDA
"RTN","IBCNVCC1",108,0)
 Q
"RTN","IBCNVCC1",109,0)
 ;
"RTN","IBCNVCC1",110,0)
UNLK ; Unlock the PIVOT file
"RTN","IBCNVCC1",111,0)
 L -^IBCN(366.1,0)
"RTN","IBCNVCC1",112,0)
 Q
"RTN","IBCNVPU0")
0^47^B30762326
"RTN","IBCNVPU0",1,0)
IBCNVPU0 ;ALB/BAA - SSVI PIN/HL7 PIVOT FILE UTILITY FUNCTIONS FOR SSVI ;25-FEB-15
"RTN","IBCNVPU0",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVPU0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVPU0",4,0)
 ;
"RTN","IBCNVPU0",5,0)
PIVNW(DFN,EVDT,EVTY,PTR) ;
"RTN","IBCNVPU0",6,0)
 ;function will return 0 node of pivot file and pivot file entry number
"RTN","IBCNVPU0",7,0)
 ;if no entry in pivot file, create one and return #:0 node
"RTN","IBCNVPU0",8,0)
 ;
"RTN","IBCNVPU0",9,0)
 Q:$G(DFN)=""!($G(EVDT)="")!($G(EVTY)="")!($G(PTR)="") "-1^Error - Missing Parameters for PIVNW function"
"RTN","IBCNVPU0",10,0)
 Q:$G(^DPT(DFN,0))']"" "-1^Error - Patient DFN non-existent"
"RTN","IBCNVPU0",11,0)
 ; 
"RTN","IBCNVPU0",12,0)
 N I,X,DA,DIC,DIE,DR,DINUM,DLAYGO,IBPIVOT,IBPTNM,IENS,IBIEN,IBIENS
"RTN","IBCNVPU0",13,0)
 ;
"RTN","IBCNVPU0",14,0)
 ; - get next IB PIVOT Number
"RTN","IBCNVPU0",15,0)
 S IBPIVOT=$$GETPIV() Q:+IBPIVOT=-1 "-1^Error - Cannot get the next PIVOT Number"
"RTN","IBCNVPU0",16,0)
 ;
"RTN","IBCNVPU0",17,0)
 ; - lock the PIVOT file for editing
"RTN","IBCNVPU0",18,0)
 L +^IBCN(366,0):5 I '$T Q "-1^Error - Unable to lock Pivot file"
"RTN","IBCNVPU0",19,0)
 ;
"RTN","IBCNVPU0",20,0)
 ; - get the Patient Name
"RTN","IBCNVPU0",21,0)
 S IBPTNM=$$GET1^DIQ(2,DFN,.01,"I") I IBPTNM']"" D UNLK Q "-1^Error - Cannot get Patient Name"
"RTN","IBCNVPU0",22,0)
 ;
"RTN","IBCNVPU0",23,0)
 ; - get next internal entry number of PIVOT file
"RTN","IBCNVPU0",24,0)
 ;S IBIEN=$P(^IBCN(366,0),"^",3)+1 I $G(^IBCN(366,IBIEN,0))]"" D UNLK Q "-1^Error - Next IEN value exist already"
"RTN","IBCNVPU0",25,0)
 S IBIEN=$$ADD(IBPIVOT),IBIENS=IBIEN_","
"RTN","IBCNVPU0",26,0)
 ;
"RTN","IBCNVPU0",27,0)
 ; - set up variables to create a new entry into the PIVOT file
"RTN","IBCNVPU0",28,0)
 S IBARR(366,IBIENS,.03)=DFN,IBARR(366,IBIENS,.04)=EVTY
"RTN","IBCNVPU0",29,0)
 S IBARR(366,IBIENS,.05)=PTR,IBARR(366,IBIENS,.09)=$G(DUZ)
"RTN","IBCNVPU0",30,0)
 ;
"RTN","IBCNVPU0",31,0)
 D FILE^DIE("I","IBARR")
"RTN","IBCNVPU0",32,0)
 ;
"RTN","IBCNVPU0",33,0)
 ; - unlock the PIVOT file
"RTN","IBCNVPU0",34,0)
 D UNLK
"RTN","IBCNVPU0",35,0)
 Q IBPIVOT
"RTN","IBCNVPU0",36,0)
 ;
"RTN","IBCNVPU0",37,0)
UNLK ; Unlock the PIVOT file
"RTN","IBCNVPU0",38,0)
 L -^IBCN(366,0)
"RTN","IBCNVPU0",39,0)
 Q
"RTN","IBCNVPU0",40,0)
 ;
"RTN","IBCNVPU0",41,0)
PIVX(PIVOT,DFN,EVDT) ;
"RTN","IBCNVPU0",42,0)
 ;given pivot #, check for existence and compare the data in file to
"RTN","IBCNVPU0",43,0)
 ;parameters, return pivot number
"RTN","IBCNVPU0",44,0)
 I $G(PIVOT)="" Q "-1^Missing Parameters for PIVX function"
"RTN","IBCNVPU0",45,0)
 I '$D(^IBCN(366,"D",PIVOT)) Q "-1^No entry in Pivot file"
"RTN","IBCNVPU0",46,0)
 N ENT,ERR S ENT=$O(^IBCN(366,"D",PIVOT,""))
"RTN","IBCNVPU0",47,0)
 I ENT="" Q "-1^BAD 'D' CROSS REFERENCE"
"RTN","IBCNVPU0",48,0)
 S NODE=$G(^IBCN(366,ENT,0))
"RTN","IBCNVPU0",49,0)
 I $D(DFN) I $P(NODE,"^",3)'=DFN S ERR="-1^PATIENTS DON'T MATCH"
"RTN","IBCNVPU0",50,0)
 I $D(EVDT) I $P(NODE,"^")'=EVDT S ERR="-1^DATE/TIME DOESN'T MATCH"
"RTN","IBCNVPU0",51,0)
 I $P(NODE,"^",7)'="" S ERR="-1^No entry in Pivot file"
"RTN","IBCNVPU0",52,0)
 I $D(ERR) Q ERR
"RTN","IBCNVPU0",53,0)
 Q PIVOT
"RTN","IBCNVPU0",54,0)
 ;
"RTN","IBCNVPU0",55,0)
PIVCHK(DFN,EVDT,EVTY,PTR) ;
"RTN","IBCNVPU0",56,0)
 ;check for existence of pivot file entry.
"RTN","IBCNVPU0",57,0)
 ;If exist, return pivot number:0 node.  If not exist, return 0
"RTN","IBCNVPU0",58,0)
 I $G(DFN)=""!($G(EVDT)="")!($G(EVTY)="")!($G(PTR)="") Q "-1^Missing parameter for PIVCHK function"
"RTN","IBCNVPU0",59,0)
 I $G(^DPT(DFN,0))="" Q "-1^PATIENT WITH PASSED DFN DOES NOT EXIST"
"RTN","IBCNVPU0",60,0)
 ;
"RTN","IBCNVPU0",61,0)
 I '$D(^IBCN(366,"E",EVTY,EVDT,PTR)) Q "-1^No Entry in Pivot File"
"RTN","IBCNVPU0",62,0)
 I $O(^IBCN(366,"E",EVTY,EVDT,PTR,""))="" Q "-1^Bad E Cross Reference"
"RTN","IBCNVPU0",63,0)
 N DA,EVENT,NODE
"RTN","IBCNVPU0",64,0)
 S (DA,NODE,EVENT)=0
"RTN","IBCNVPU0",65,0)
 F  S DA=$O(^IBCN(366,"E",EVTY,EVDT,PTR,DA)) Q:'DA  DO  Q:EVENT
"RTN","IBCNVPU0",66,0)
 . S NODE=$G(^IBCN(366,DA,0))
"RTN","IBCNVPU0",67,0)
 . I $P(NODE,"^",7)=1 Q
"RTN","IBCNVPU0",68,0)
 . S EVENT=$P(NODE,"^",2)
"RTN","IBCNVPU0",69,0)
 ;
"RTN","IBCNVPU0",70,0)
 I 'EVENT Q "-1^NO Entry in Pivot File"
"RTN","IBCNVPU0",71,0)
 I $P(NODE,"^",3)'=DFN Q "-1^DFN DOES NOT MATCH PIVOT DFN"
"RTN","IBCNVPU0",72,0)
 Q EVENT
"RTN","IBCNVPU0",73,0)
 ;
"RTN","IBCNVPU0",74,0)
SETTRAN(PIVOT) ;
"RTN","IBCNVPU0",75,0)
 ;sets TRANSMITTED field in pivot file
"RTN","IBCNVPU0",76,0)
 I '$D(PIVOT) Q "-1^Missing Parameter for SETTRAN function"
"RTN","IBCNVPU0",77,0)
 N ERR,ENT,DIE,DR,DA,X,Y,CROSS
"RTN","IBCNVPU0",78,0)
 S ENT=$O(^IBCN(366,"D",PIVOT,""))
"RTN","IBCNVPU0",79,0)
 I +ENT<1 S ERR="-1^NO D CROSS REFERENCE"
"RTN","IBCNVPU0",80,0)
 I +ENT>0 D
"RTN","IBCNVPU0",81,0)
 .;S $P(^IBCN(366,ENT,0),"^",6)=1,CROSS=0,DA=ENT
"RTN","IBCNVPU0",82,0)
 .; - set up variables to stuff data into the new entry in the Inconsistant Data file
"RTN","IBCNVPU0",83,0)
 .S DIE="^IBCN(366,",X=ENT,DR=".06///"_1
"RTN","IBCNVPU0",84,0)
 .;
"RTN","IBCNVPU0",85,0)
 .; - stuff the data into their specific fields
"RTN","IBCNVPU0",86,0)
 .D ^DIE
"RTN","IBCNVPU0",87,0)
 I $D(ERR) Q ERR
"RTN","IBCNVPU0",88,0)
 Q 0
"RTN","IBCNVPU0",89,0)
 ;
"RTN","IBCNVPU0",90,0)
CLNTRAN(PIVOT) ;
"RTN","IBCNVPU0",91,0)
 ;resets TRANSMITTED field in pivot file
"RTN","IBCNVPU0",92,0)
 I '$D(PIVOT) Q "-1^Missing Parameter for CLNTRAN function"
"RTN","IBCNVPU0",93,0)
 N ERR,ENTRY,DA,CROSS
"RTN","IBCNVPU0",94,0)
 S ENTRY=$O(^IBCN(366,"D",PIVOT,"")),DA=ENTRY
"RTN","IBCNVPU0",95,0)
 I +ENTRY<0 S ERR="-1^NO D CROSS REFERENCE"
"RTN","IBCNVPU0",96,0)
 I +ENTRY>0 D
"RTN","IBCNVPU0",97,0)
 .;S $P(^IBCN(366,ENTRY,0),"^",6)=""
"RTN","IBCNVPU0",98,0)
 .; - set up variables to stuff data into the new entry in the Inconsistant Data file
"RTN","IBCNVPU0",99,0)
 .S DIE="^IBCN(366,",X=ENT,DR=".06///@"
"RTN","IBCNVPU0",100,0)
 .;
"RTN","IBCNVPU0",101,0)
 .; - stuff the data into their specific fields
"RTN","IBCNVPU0",102,0)
 .D ^DIE
"RTN","IBCNVPU0",103,0)
 I $D(ERR) Q ERR
"RTN","IBCNVPU0",104,0)
 Q 0
"RTN","IBCNVPU0",105,0)
 ;
"RTN","IBCNVPU0",106,0)
GETPIV() ;
"RTN","IBCNVPU0",107,0)
 ;gets next available pivot number.  Get entry from IB SITE PARAMETER file
"RTN","IBCNVPU0",108,0)
 ;quit returning new pivot number
"RTN","IBCNVPU0",109,0)
 N ERR,VAR1,NEXT,FOUND,%
"RTN","IBCNVPU0",110,0)
 S VAR1=$O(^IBE(350.9,0)) I 'VAR1 Q "-1^Unable to Find Parameter One"
"RTN","IBCNVPU0",111,0)
 F  Q:$D(FOUND)!($D(ERR))  D
"RTN","IBCNVPU0",112,0)
 .L +^IBE(350.9,VAR1,"HL7"):5 I '$T S ERR="-1^Unable to get next pivot number" Q
"RTN","IBCNVPU0",113,0)
 .S NEXT=+$G(^IBE(350.9,VAR1,"HL7"))+1
"RTN","IBCNVPU0",114,0)
 .I '$D(^IBCN(366,NEXT)) S FOUND=""
"RTN","IBCNVPU0",115,0)
 I $D(ERR) Q ERR
"RTN","IBCNVPU0",116,0)
 S $P(^IBE(350.9,VAR1,"HL7"),"^")=NEXT
"RTN","IBCNVPU0",117,0)
 ;CHECK IF ENTRY WITH REQUESTED EVDT ALREADY EXIST. IF SO GET NEXT TIME
"RTN","IBCNVPU0",118,0)
 I $D(^IBCN(366,"E",EVTY,EVDT,PTR)) D
"RTN","IBCNVPU0",119,0)
 .H 1 ; GET UNIQUE NEW EVDT
"RTN","IBCNVPU0",120,0)
 .D NOW^%DTC S EVDT=%
"RTN","IBCNVPU0",121,0)
 L -^IBE(350.9,VAR1,"HL7")
"RTN","IBCNVPU0",122,0)
 Q NEXT
"RTN","IBCNVPU0",123,0)
 ;
"RTN","IBCNVPU0",124,0)
XMITFLAG(PIVOTPTR,PIVOTNUM,TURNOFF) ;Turn transmission flag for entry
"RTN","IBCNVPU0",125,0)
 ; in IB SSVI PIN/HL7 PIVOT file on/off
"RTN","IBCNVPU0",126,0)
 ;
"RTN","IBCNVPU0",127,0)
 ;Input  : PIVOTPTR - Pointer to entry in IB SSVI PIN/HL7 PIVOT file (#366)
"RTN","IBCNVPU0",128,0)
 ;                  - Use this parameter if the entry number is known
"RTN","IBCNVPU0",129,0)
 ;                  - Not required if using PIVOTNUM parameter
"RTN","IBCNVPU0",130,0)
 ;                  - Use of this parameter takes precedence over use
"RTN","IBCNVPU0",131,0)
 ;                    the PIVOTNUM parameter
"RTN","IBCNVPU0",132,0)
 ;         PIVOTNUM - PIVOT NUMBER value (field #.02) for entry
"RTN","IBCNVPU0",133,0)
 ;                    in IB SSVI PIN/HL7 PIVOT file (366)
"RTN","IBCNVPU0",134,0)
 ;                  - Use this parameter if the pivot number is known
"RTN","IBCNVPU0",135,0)
 ;                  - Not required if using PIVOTPTR parameter
"RTN","IBCNVPU0",136,0)
 ;         TURNOFF - Denotes if REQUIRES TRANSMISSION field (#.08) should
"RTN","IBCNVPU0",137,0)
 ;                   be turned on (set to 'YES') or off (set to 'NO')
"RTN","IBCNVPU0",138,0)
 ;                 1 = Turns transmission off
"RTN","IBCNVPU0",139,0)
 ;                 0 = Turns transmission on (default)
"RTN","IBCNVPU0",140,0)
 ;Output : None
"RTN","IBCNVPU0",141,0)
 ;
"RTN","IBCNVPU0",142,0)
 ;Check input
"RTN","IBCNVPU0",143,0)
 S PIVOTPTR=+$G(PIVOTPTR)
"RTN","IBCNVPU0",144,0)
 S PIVOTNUM=+$G(PIVOTNUM)
"RTN","IBCNVPU0",145,0)
 Q:(('PIVOTPTR)&('PIVOTNUM))
"RTN","IBCNVPU0",146,0)
 S TURNOFF=+$G(TURNOFF)
"RTN","IBCNVPU0",147,0)
 ;Declare variables
"RTN","IBCNVPU0",148,0)
 N VALUE,NODE,XREFNUM,DA,STATUS
"RTN","IBCNVPU0",149,0)
 ;Passed pointer - validate
"RTN","IBCNVPU0",150,0)
 I (PIVOTPTR) Q:('$D(^IBCN(366,PIVOTPTR,0)))
"RTN","IBCNVPU0",151,0)
 ;Passed pivot number - convert to pointer
"RTN","IBCNVPU0",152,0)
 I ('PIVOTPTR) S PIVOTPTR=+$O(^IBCN(366,"D",PIVOTNUM,0)) Q:('PIVOTPTR)
"RTN","IBCNVPU0",153,0)
 ;Set FileMan variables
"RTN","IBCNVPU0",154,0)
 S DA=PIVOTPTR
"RTN","IBCNVPU0",155,0)
 S STATUS='TURNOFF
"RTN","IBCNVPU0",156,0)
 ;S $P(^IBCN(366,DA,0),"^",8)=STATUS
"RTN","IBCNVPU0",157,0)
 S DIE="^IBCN(366,",X=DA,DR=".08///"_STATUS D ^DIE K DR,DIE
"RTN","IBCNVPU0",158,0)
 Q
"RTN","IBCNVPU0",159,0)
 ;
"RTN","IBCNVPU0",160,0)
FNDPVT(DFN) ; find a pivot entry for current day and patient.
"RTN","IBCNVPU0",161,0)
 N PIVOT,CURDAT,FND,PDAT,SNDFLG
"RTN","IBCNVPU0",162,0)
 S FND=0,PIVOT=0
"RTN","IBCNVPU0",163,0)
 F  S PIVOT=$O(^IBCN(366,"C",DFN,PIVOT)) Q:PIVOT=""  D  Q:FND
"RTN","IBCNVPU0",164,0)
 .S CURDAT=DT
"RTN","IBCNVPU0",165,0)
 .F  S CURDAT=$O(^IBCN(366,"B",CURDAT)) Q:CURDAT=""  D  Q:FND
"RTN","IBCNVPU0",166,0)
 ..I CURDAT>DT,$D(^IBCN(366,"B",CURDAT,PIVOT)) D
"RTN","IBCNVPU0",167,0)
 ...S SNDFLG=$$GET1^DIQ(366,PIVOT,.08,"I") I SNDFLG S FND=PIVOT
"RTN","IBCNVPU0",168,0)
 Q FND
"RTN","IBCNVPU0",169,0)
 ;
"RTN","IBCNVPU0",170,0)
ADD(PIVOT) ; add a new PIVOT file entry (#366), sets only (0) node data
"RTN","IBCNVPU0",171,0)
 N IBARR,IBERR,IBIFN,IBX
"RTN","IBCNVPU0",172,0)
 Q:PIVOT=""
"RTN","IBCNVPU0",173,0)
 ;
"RTN","IBCNVPU0",174,0)
 S IBARR(366,"+1,",.01)="NOW",IBARR(366,"+1,",.02)=PIVOT
"RTN","IBCNVPU0",175,0)
 D UPDATE^DIE("E","IBARR","IBIFN","IBERR")
"RTN","IBCNVPU0",176,0)
 S IBX=+$G(IBIFN(1)) I $D(IBERR) S $P(IBX,U,2)=$G(IBERR("DIERR",1,"TEXT",1))
"RTN","IBCNVPU0",177,0)
 Q IBX
"RTN","IBCNVRD0")
0^45^B157582204
"RTN","IBCNVRD0",1,0)
IBCNVRD0 ;ALB/BAA - SYSTEM SHARED VERIFIED INSURANCE  ;25-FEB-15
"RTN","IBCNVRD0",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVRD0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVRD0",4,0)
 ;;DAILY TRANSMISSION OF ENTRIES IN IB SSVI PIN/HL7
"RTN","IBCNVRD0",5,0)
 ;;
"RTN","IBCNVRD0",6,0)
EN ; process entries in SSVI Pivot file
"RTN","IBCNVRD0",7,0)
 N NTEARRY,NTITEM,STST,NTITEM1,NTEARRY1,HCOMMENT,HVISIT,HVISITT,HFLAG,HKEEPV,HVISITO,DATEM14,NOW
"RTN","IBCNVRD0",8,0)
 N PAT,PREOPHF,PREOPHFD,PREOPHFK
"RTN","IBCNVRD0",9,0)
 N DELAYST,NTITEMD,DELARRY
"RTN","IBCNVRD0",10,0)
 N NSURGCNT,SITE,SITPTR,TOP,TOPNM,EXPRD
"RTN","IBCNVRD0",11,0)
 N NTITEMC,IBP,INGRP,INSURNM,ITEM,ITEMC,LOCATION,PAYER,PAYERNM,PCN
"RTN","IBCNVRD0",12,0)
 N DFN,PAT,INSNAME,GROUPLAN,NAME,SSN,GENDER,RACE,BN,BUFF  ; INSNAME IS INSURED  NAME
"RTN","IBCNVRD0",13,0)
 N COORDBEN,SUBSCRID,DATELVER,GROUPNUM,INSURDOB,INSURSSN,INSGENDR,GROUPLNM,GROUPPCM
"RTN","IBCNVRD0",14,0)
 N PTRELHIP,WHOSEINS,EFFCTDPO,GROUPNAM,PTRELINS,NAMEINS,COMPATPO,SENDBEMP,SUBEMPNM  ; NAMEINS IS NAME OF INSURANCE
"RTN","IBCNVRD0",15,0)
 N SEMPLCLA,SEMPLCL2,SEMPLCL3,SEMPLCLC,SEMPLCLS,SEMPLCLZ,SEMPLCLP,ESHGP,INSEXPDT  ; INSEXPDT IS INSURANCE EXPIRATION DATE
"RTN","IBCNVRD0",16,0)
 N POLNBILL,INSSTAD,INSSTAD2,INSCITY,INSSTATE,INSZIP,INSPHONE,PATIENTI,FRESHAY,FRESHDT
"RTN","IBCNVRD0",17,0)
 N INSNAMEP,STATIONS  ; STATIONS AS ORIGINATING SENDING FACILITY SITE'S STATION NUMBER
"RTN","IBCNVRD0",18,0)
 ;
"RTN","IBCNVRD0",19,0)
 N LASTINDT,NOWDATE,%
"RTN","IBCNVRD0",20,0)
 ;
"RTN","IBCNVRD0",21,0)
 ; clean up ^TMP before use.
"RTN","IBCNVRD0",22,0)
 K ^TMP($J,"IBSSVI") K ^TMP($J,"IBSSVI-TREATING FACILITY SITE")
"RTN","IBCNVRD0",23,0)
 K ^TMP($J,"IBSSVI-PATIENT") K ^TMP($J,"IBSSVI-ACKNOWLEDGE")
"RTN","IBCNVRD0",24,0)
 S LASTINDT=$P($G(^IBE(350.9,1,100)),"^",2) ; IN IB SITE PARAMETERS FILE FOR FIRST TIME AND LAST DATE/TIME TRANSMIT TASK RAN
"RTN","IBCNVRD0",25,0)
 I LASTINDT="" S LASTINDT=DT-5
"RTN","IBCNVRD0",26,0)
 S IBP="|"
"RTN","IBCNVRD0",27,0)
 D NOW^%DTC S NOWDATE=%
"RTN","IBCNVRD0",28,0)
 ;
"RTN","IBCNVRD0",29,0)
 D CYCLE
"RTN","IBCNVRD0",30,0)
 ;
"RTN","IBCNVRD0",31,0)
 D PROCINS
"RTN","IBCNVRD0",32,0)
 ;
"RTN","IBCNVRD0",33,0)
 D NOW^%DTC S NOWDATE=%
"RTN","IBCNVRD0",34,0)
 S $P(^IBE(350.9,1,100),"^",2)=NOWDATE ; IN IB SITE PARAMETERS FILE FOR FIRST TIME AND LAST DATE/TIME TRANSMIT TASK RAN
"RTN","IBCNVRD0",35,0)
END D ^%ZISC
"RTN","IBCNVRD0",36,0)
 ; Clean up ^TMP when finished
"RTN","IBCNVRD0",37,0)
 K ^TMP($J,"IBSSVI") K ^TMP($J,"IBSSVI-TREATING FACILITY SITE")
"RTN","IBCNVRD0",38,0)
 K ^TMP($J,"IBSSVI-PATIENT")
"RTN","IBCNVRD0",39,0)
 D EXIT
"RTN","IBCNVRD0",40,0)
 Q
"RTN","IBCNVRD0",41,0)
 ;
"RTN","IBCNVRD0",42,0)
PROCINS ;
"RTN","IBCNVRD0",43,0)
 N LEN,STST,SURGCNT,NCANCNOD,INSPTR1,STATION,TRANSDAT,IENL,UPDATEDT,HL7MSGPT,ORGSENDT,INSPTR2
"RTN","IBCNVRD0",44,0)
 N COUNT,INSPTR,DFN,STNCNT,CNTHL7 ; CNTHL7 AS PIVOT PTR
"RTN","IBCNVRD0",45,0)
 N DEFINST,STATION,DSTATION,ICNTSTA,GLOB,RPCVER,HNDLS,CNT
"RTN","IBCNVRD0",46,0)
 S RPCVER=1
"RTN","IBCNVRD0",47,0)
 S DFN=0  ; AS DFN
"RTN","IBCNVRD0",48,0)
 F  S DFN=$O(^TMP($J,"IBSSVI-PATIENT",DFN)) Q:(DFN="")  D
"RTN","IBCNVRD0",49,0)
 .K GLOB
"RTN","IBCNVRD0",50,0)
 .S CNTHL7=$G(^TMP($J,"IBSSVI-PATIENT",DFN))
"RTN","IBCNVRD0",51,0)
 .D SETUP(DFN)
"RTN","IBCNVRD0",52,0)
 .S SUB=0
"RTN","IBCNVRD0",53,0)
 .F  S SUB=$O(GLOB(SUB)) Q:SUB=""  D INSMUL^IBCNVUT0(CNTHL7,SUB)
"RTN","IBCNVRD0",54,0)
 .S STNCNT=0
"RTN","IBCNVRD0",55,0)
 .F  S STNCNT=$O(^TMP($J,"IBSSVI-TREATING FACILITY SITE",DFN,STNCNT)) Q:(STNCNT="")!(STNCNT="COUNT")  D
"RTN","IBCNVRD0",56,0)
 ..S STATION=$G(^TMP($J,"IBSSVI-TREATING FACILITY SITE",DFN,STNCNT))
"RTN","IBCNVRD0",57,0)
 ..D SETSTS(STATION)
"RTN","IBCNVRD0",58,0)
 ..D SNDINFO
"RTN","IBCNVRD0",59,0)
 .S STATION=0,LOCATION=2
"RTN","IBCNVRD0",60,0)
 .F  S STATION=$O(^TMP($J,"IBSSVI","NOT DONE",DFN,STATION)) Q:STATION=""  D
"RTN","IBCNVRD0",61,0)
 ..S HNDL=0
"RTN","IBCNVRD0",62,0)
 ..F  S HNDL=$O(^TMP($J,"IBSSVI","NOT DONE",DFN,STATION,HNDL)) Q:HNDL=""  D
"RTN","IBCNVRD0",63,0)
 ...I '$D(^XTMP(HNDL)) K ^TMP($J,"IBSSVI","NOT DONE",DFN,STATION,HNDL) Q
"RTN","IBCNVRD0",64,0)
 ...D DONE(DFN,STATION,HNDL) ; do I have return data.
"RTN","IBCNVRD0",65,0)
 .Q
"RTN","IBCNVRD0",66,0)
 ;
"RTN","IBCNVRD0",67,0)
 I '$D(^TMP($J,"IBSSVI","NOT DONE")) Q  ; Every thing has already completed
"RTN","IBCNVRD0",68,0)
 ;
"RTN","IBCNVRD0",69,0)
 ;Need to go through the NOT DONE list and see if any have completed.
"RTN","IBCNVRD0",70,0)
 D COMPLETE
"RTN","IBCNVRD0",71,0)
 Q
"RTN","IBCNVRD0",72,0)
 ;
"RTN","IBCNVRD0",73,0)
SETSTS(STATION) ;SET STATION NUMBER IN GLOB(PTR,5)
"RTN","IBCNVRD0",74,0)
 N PTR
"RTN","IBCNVRD0",75,0)
 S PTR=0
"RTN","IBCNVRD0",76,0)
 F  S PTR=$O(GLOB(PTR)) Q:PTR=""  S $P(GLOB(PTR,5),"|",5)=STATION
"RTN","IBCNVRD0",77,0)
 Q
"RTN","IBCNVRD0",78,0)
 ;
"RTN","IBCNVRD0",79,0)
SNDINFO ; do all the sending processing
"RTN","IBCNVRD0",80,0)
 ;LOGIC NEEDED WITHIN EACH INSURANCE MULTIPLE IN THE PIVOT TABLE, SET TREATING FACILITY SITE (STATION) MULTIPLE ENTRY
"RTN","IBCNVRD0",81,0)
 N INSPTR,CNTHL7,ENBLD,CHK,SND,SSVI
"RTN","IBCNVRD0",82,0)
 S CNTHL7=$G(^TMP($J,"IBSSVI-PATIENT",DFN)),LOCATION=1  ; PIV0T TABLE RECORD NUMBER, NOT THE PIVOT TABLE #
"RTN","IBCNVRD0",83,0)
 S IBICN=$$ICN^IBARXMU(DFN)
"RTN","IBCNVRD0",84,0)
 D SEND(.SND,STATION,IBICN,"IBCN SSVI ENABLED")
"RTN","IBCNVRD0",85,0)
 S HNDL=SND(0)
"RTN","IBCNVRD0",86,0)
 F IBWAIT=1:1:10 H 1 D CHECK(.CHK,HNDL) I $G(CHK(0))["Done" Q
"RTN","IBCNVRD0",87,0)
 D RETURN(.ENBLD,HNDL)
"RTN","IBCNVRD0",88,0)
 I ENBLD(0)'="ENABLED" D  Q
"RTN","IBCNVRD0",89,0)
 .D CLEAR(.CLR,HNDL)  ;do not process if SSVI is not enabled at site.
"RTN","IBCNVRD0",90,0)
 D CLEAR(.CLR,HNDL)
"RTN","IBCNVRD0",91,0)
 S INSPTR=0
"RTN","IBCNVRD0",92,0)
 F  S INSPTR=$O(GLOB(INSPTR)) Q:INSPTR=""  D
"RTN","IBCNVRD0",93,0)
 .D TREATSIT^IBCNVUT0(CNTHL7,INSPTR,STATION)
"RTN","IBCNVRD0",94,0)
 ;
"RTN","IBCNVRD0",95,0)
 D SNDINS(.SND,STATION,IBICN,.GLOB,"IBCN SSVI SEND")
"RTN","IBCNVRD0",96,0)
 S HNDL=SND(0)
"RTN","IBCNVRD0",97,0)
 D DONE(DFN,STATION,HNDL)
"RTN","IBCNVRD0",98,0)
 Q
"RTN","IBCNVRD0",99,0)
 ;
"RTN","IBCNVRD0",100,0)
COMPLETE ; NEED TO CLOSE OUT ALL THE ENTRIES.
"RTN","IBCNVRD0",101,0)
 N DONE
"RTN","IBCNVRD0",102,0)
 S DONE=0,LOCATION=3
"RTN","IBCNVRD0",103,0)
 F I=1:1 Q:DONE  D
"RTN","IBCNVRD0",104,0)
 .I '$D(^TMP($J,"IBSSVI","NOT DONE")) S DONE=1 Q
"RTN","IBCNVRD0",105,0)
 .S DFN=0
"RTN","IBCNVRD0",106,0)
 .F  S DFN=$O(^TMP($J,"IBSSVI","NOT DONE",DFN)) Q:DFN=""  D
"RTN","IBCNVRD0",107,0)
 ..S STATION=0
"RTN","IBCNVRD0",108,0)
 ..F  S STATION=$O(^TMP($J,"IBSSVI","NOT DONE",DFN,STATION)) Q:STATION=""  D
"RTN","IBCNVRD0",109,0)
 ...S HNDL=0
"RTN","IBCNVRD0",110,0)
 ...F  S HNDL=$O(^TMP($J,"IBSSVI","NOT DONE",DFN,STATION,HNDL)) Q:HNDL=""  D
"RTN","IBCNVRD0",111,0)
 ....I '$D(^XTMP(HNDL)) K ^TMP($J,"IBSSVI","NOT DONE",DFN,STATION,HNDL) Q
"RTN","IBCNVRD0",112,0)
 ....D DONE(DFN,STATION,HNDL)
"RTN","IBCNVRD0",113,0)
 Q
"RTN","IBCNVRD0",114,0)
 ;
"RTN","IBCNVRD0",115,0)
FINISH(DFN,STATION,HNDL) ;
"RTN","IBCNVRD0",116,0)
 N CNTHL7,TRANSDAT,INSPTR
"RTN","IBCNVRD0",117,0)
 S CNTHL7=$G(^TMP($J,"IBSSVI-PATIENT",DFN))  ; PIV0T TABLE RECORD NUMBER, NOT THE PIVOT TABLE #
"RTN","IBCNVRD0",118,0)
 D NOW^%DTC S TRANSDAT=%
"RTN","IBCNVRD0",119,0)
 S SSVI=""
"RTN","IBCNVRD0",120,0)
 D RETURN(.SSVI,HNDL)
"RTN","IBCNVRD0",121,0)
 S INSPTR=1
"RTN","IBCNVRD0",122,0)
 F  S INSPTR=$O(SSVI(INSPTR)) Q:INSPTR=""  D
"RTN","IBCNVRD0",123,0)
 .S PTR=$P(SSVI(INSPTR),IBP,3)
"RTN","IBCNVRD0",124,0)
 .S BUFF=$P(SSVI(INSPTR),IBP,7)
"RTN","IBCNVRD0",125,0)
 .S ERROR=$P(SSVI(INSPTR),IBP,8)
"RTN","IBCNVRD0",126,0)
 .D TREATTRD^IBCNVUT0(CNTHL7,PTR,STATION,TRANSDAT,BUFF,ERROR)  ;TREATRD(PIVTPTR,INSPTR1,SENDSITE,RECDDAT,RIEN)  ;
"RTN","IBCNVRD0",127,0)
 D FINAL^IBCNVUT0(CNTHL7)
"RTN","IBCNVRD0",128,0)
 Q
"RTN","IBCNVRD0",129,0)
 ;
"RTN","IBCNVRD0",130,0)
DONE(DFN,STATION,HNDL) ;
"RTN","IBCNVRD0",131,0)
 ;S GLOB(SUB,5)=DFN_"|"_CNTHL7_"|"_INSPTR_"|"_INSPTR1_"|"_STATION_"|"_DSTATION_"|"_RIEN_"|"_ERROR
"RTN","IBCNVRD0",132,0)
 N SUB,IBWAIT,RIEN,PTR,DATA
"RTN","IBCNVRD0",133,0)
 I 
"RTN","IBCNVRD0",134,0)
 F IBWAIT=1:1:120 H 1 D CHECK(.CHK,HNDL) I $G(CHK(0))["Done" D  Q
"RTN","IBCNVRD0",135,0)
 .S SSVI=""
"RTN","IBCNVRD0",136,0)
 .D RETURN(.SSVI,HNDL)
"RTN","IBCNVRD0",137,0)
 .I SSVI(1)'="COMPLETED" D
"RTN","IBCNVRD0",138,0)
 ..S SUB=1
"RTN","IBCNVRD0",139,0)
 ..F  S SUB=$O(SSVI(SUB)) Q:SUB=""  D
"RTN","IBCNVRD0",140,0)
 ...S DATA=SSVI(SUB)
"RTN","IBCNVRD0",141,0)
 ...S CNTHL7=$P(DATA,IBP,2)
"RTN","IBCNVRD0",142,0)
 ...S PTR=$P(DATA,IBP,3)
"RTN","IBCNVRD0",143,0)
 ...S ERROR=$P(DATA,IBP,8)
"RTN","IBCNVRD0",144,0)
 ...D ERROR^IBCNVUT0(CNTHL7,PTR,STATION,ERROR)
"RTN","IBCNVRD0",145,0)
 .K ^TMP($J,"IBSSVI","NOT DONE",DFN,STATION,HNDL)
"RTN","IBCNVRD0",146,0)
 .D FINISH(DFN,STATION,HNDL)
"RTN","IBCNVRD0",147,0)
 .Q
"RTN","IBCNVRD0",148,0)
 ;
"RTN","IBCNVRD0",149,0)
 I $G(SSVI(1))'="COMPLETED" S ^TMP($J,"IBSSVI","NOT DONE",DFN,STATION,HNDL)=""
"RTN","IBCNVRD0",150,0)
 ;
"RTN","IBCNVRD0",151,0)
 Q
"RTN","IBCNVRD0",152,0)
 ;
"RTN","IBCNVRD0",153,0)
CHECK(CHK,HNDL) ; called to check the return status of an RPC
"RTN","IBCNVRD0",154,0)
 D RPCCHK^XWB2HL7(.CHK,HNDL)
"RTN","IBCNVRD0",155,0)
 Q
"RTN","IBCNVRD0",156,0)
 ; Get the data that is returned
"RTN","IBCNVRD0",157,0)
RETURN(RTN,HNDL) ; called to get the return data and clear the broker
"RTN","IBCNVRD0",158,0)
 S RTN(0)=""
"RTN","IBCNVRD0",159,0)
 D RTNDATA^XWBDRPC(.RTN,HNDL)
"RTN","IBCNVRD0",160,0)
 Q
"RTN","IBCNVRD0",161,0)
 ; Clear the XTMP global
"RTN","IBCNVRD0",162,0)
CLEAR(CLR,HNDL) ;
"RTN","IBCNVRD0",163,0)
 D CLEAR^XWBDRPC(.CLR,HNDL)
"RTN","IBCNVRD0",164,0)
 Q
"RTN","IBCNVRD0",165,0)
 ; Check if SSVI turned on
"RTN","IBCNVRD0",166,0)
SEND(SND,STATION,IBICN,IBRPC) ; called to send off query
"RTN","IBCNVRD0",167,0)
 D EN1^XWB2HL7(.SND,STATION,IBRPC,RPCVER,IBICN)
"RTN","IBCNVRD0",168,0)
 Q
"RTN","IBCNVRD0",169,0)
 ;
"RTN","IBCNVRD0",170,0)
RPC(ENBLD,IBICN) ; This determines if SSVI is enabled.
"RTN","IBCNVRD0",171,0)
 N DATA
"RTN","IBCNVRD0",172,0)
 S DATA=""
"RTN","IBCNVRD0",173,0)
 S ENBLD="NOT ENABLED"
"RTN","IBCNVRD0",174,0)
 S DATA=+$P($G(^IBE(350.9,1,100)),"^",1)
"RTN","IBCNVRD0",175,0)
 I DATA=1 S ENBLD="ENABLED"
"RTN","IBCNVRD0",176,0)
 Q
"RTN","IBCNVRD0",177,0)
 ; Send Insurance to treating facility
"RTN","IBCNVRD0",178,0)
SNDINS(SND,STATION,IBICN,GLOB,IBRPC)  ; SEND INSURANCE TO SITE
"RTN","IBCNVRD0",179,0)
 D EN1^XWB2HL7(.SND,STATION,IBRPC,RPCVER,IBICN,.GLOB)
"RTN","IBCNVRD0",180,0)
 Q
"RTN","IBCNVRD0",181,0)
 ;
"RTN","IBCNVRD0",182,0)
EXIT ;
"RTN","IBCNVRD0",183,0)
 K DAT,DFN,DOB,ERROR,FULLD,GENDER,GLOB,HL,HLERR,HLMTN,HLNDAP,MON
"RTN","IBCNVRD0",184,0)
 K MYOPTNS,MYRESLT,NAME,OPR,PDATE,PEND,PROC,RACE,SRFIND,SSVI
"RTN","IBCNVRD0",185,0)
 K SSN,TIME,TIMES,UNIT,VA,VADM,WARD,X,XMDUZ,XMSUB,XMTEXT,XMY,Y
"RTN","IBCNVRD0",186,0)
 Q
"RTN","IBCNVRD0",187,0)
 ;
"RTN","IBCNVRD0",188,0)
CYCLE ;test if SSVI PIN/HL7 PIVOT TABLES HAVE TRANSMIISION REQUEST FLAG SET FOR A PATIENT. CONSOLIDATE REQUESTS INTO 1 REQUEST PER PATIENT
"RTN","IBCNVRD0",189,0)
 ;LATER CLEAR REQUEST FLAGS AND SET TRANSMITTED COMPLETED FLAGS IN IB SSVI PIN/HL7 PIVOT FILE
"RTN","IBCNVRD0",190,0)
 N CNT,CNTHL7,CNT2,FOUND
"RTN","IBCNVRD0",191,0)
 ;W !,LASTINDT
"RTN","IBCNVRD0",192,0)
 S CNT=LASTINDT ; TEST 3100524    ;SRSDATE
"RTN","IBCNVRD0",193,0)
 F  S CNT=$O(^IBCN(366,"B",CNT)) Q:(CNT>(NOWDATE+.99))!(CNT="")  D
"RTN","IBCNVRD0",194,0)
 .;W !,"HERE"
"RTN","IBCNVRD0",195,0)
 .S CNTHL7=0
"RTN","IBCNVRD0",196,0)
 .;W !,CNT
"RTN","IBCNVRD0",197,0)
 .F  S CNTHL7=$O(^IBCN(366,"B",CNT,CNTHL7)) Q:CNTHL7=""  D
"RTN","IBCNVRD0",198,0)
 ..S FOUND=0
"RTN","IBCNVRD0",199,0)
 ..;W !,FOUND
"RTN","IBCNVRD0",200,0)
 ..S PAT=$P($G(^IBCN(366,CNTHL7,0)),"^",3)
"RTN","IBCNVRD0",201,0)
 ..;CHECK PREVIOUSLY DETECTED TRANSMISSION REQUEST BITS HERE. IF NOT JUST Q
"RTN","IBCNVRD0",202,0)
 ..I $P($G(^IBCN(366,CNTHL7,0)),U,8)'=1 Q
"RTN","IBCNVRD0",203,0)
 ..S CNT2=0
"RTN","IBCNVRD0",204,0)
 ..F  S CNT2=$O(^TMP($J,"IBSSVI-PATIENT",CNT2)) Q:(CNT2="")!(FOUND)  D
"RTN","IBCNVRD0",205,0)
 ...I CNT2=PAT D 
"RTN","IBCNVRD0",206,0)
 ....S FOUND=1
"RTN","IBCNVRD0",207,0)
 ....;CLEAR REQUIRE TRANSMIISION FLAG, AND SET REDUNDANT(DELETE)FLAG TO NOT COUNT 
"RTN","IBCNVRD0",208,0)
 ....;FOR THE TRANSMISSION REPORT, AND ALSO REDUCE OVERHEAD WITHOUT REPEATED 
"RTN","IBCNVRD0",209,0)
 ....;SAME TRANSMISSIONS ON PAT
"RTN","IBCNVRD0",210,0)
 ....S $P(^IBCN(366,CNTHL7,0),U,8)=0 ; "NO"
"RTN","IBCNVRD0",211,0)
 ....;S $P(^IBCN(366,CNTHL7,0),"^",7)=1  ; DELETED  (AND NOT COUNT IN REPORTS).
"RTN","IBCNVRD0",212,0)
 ....;REPORTS ON RECEIVE SIDE ALSO COUNT THE SOURCE OF INFO FIELD="INTERFACILITY TRANSFER"
"RTN","IBCNVRD0",213,0)
 ....; IN INSURANCE BUFFER AS RECEIVED DATA
"RTN","IBCNVRD0",214,0)
 ..I FOUND=0 S ^TMP($J,"IBSSVI-PATIENT",PAT)=CNTHL7 S DFN=PAT D UTL ; MEANS WHEN REQUEST TRANSMIT 
"RTN","IBCNVRD0",215,0)
 ..D DELINC^IBCNVCC1(DFN)
"RTN","IBCNVRD0",216,0)
 ..;SET SEEN HERE THERE WAS CHECK PREVIOULSY BEFORE SETTING PIN/HL7 PIVOT FILETO 
"RTN","IBCNVRD0",217,0)
 ..;INSURANCES ALREADY SET IN MULTIPLE IN IB SSVI PIN/HL7 PIVOT TABLE. 
"RTN","IBCNVRD0",218,0)
 ..;WITHIN EACH OF THESE MULTIPLES THE TREATING SITES NEED TO BE ENTERED
"RTN","IBCNVRD0",219,0)
 ..;TO SEE IF ANY TREATING FACILITY SITES FOR THAT PATIENT. 
"RTN","IBCNVRD0",220,0)
 ..;SET DATE OF TRANSMISSION UPON SENDING TO EACH FACILITY SITE  
"RTN","IBCNVRD0",221,0)
 ..;CLEAR TOTAL TRANSMISSION REQUEST FLAG FOR PATIENT, AND SET NEED TO TRANSMIT FLAG.
"RTN","IBCNVRD0",222,0)
 Q
"RTN","IBCNVRD0",223,0)
 ;
"RTN","IBCNVRD0",224,0)
UTL ;
"RTN","IBCNVRD0",225,0)
 N DGP,I,INSPTR,ICNTSTA
"RTN","IBCNVRD0",226,0)
 N IBT1,STNCNT,DGHL7END,INSPTR1,STATION,DEFINST,FSHDT,INCON
"RTN","IBCNVRD0",227,0)
 S DGHL7END=36 ; WILL BE 36
"RTN","IBCNVRD0",228,0)
 ;PATIENT COMMON DATA BELOW. DFN DEFINED FROM CALL TO CYCLE ABOVE
"RTN","IBCNVRD0",229,0)
 D DEM^VADPT
"RTN","IBCNVRD0",230,0)
 S NAME=VADM(1),SSN=VA("PID")  ; INTO PID SEGMENT
"RTN","IBCNVRD0",231,0)
 ; USE CALL TO TFL^IBARXMU(DFN,IBT) ; returns treating facility list (pass IBT by reference)
"RTN","IBCNVRD0",232,0)
 ; supported references ia #2990 and #10112, value returned is count
"RTN","IBCNVRD0",233,0)
 ; needed to N Y because VAFCTFU1 will kill it
"RTN","IBCNVRD0",234,0)
 N IBC,IBZ,IBS,IBFT,Y
"RTN","IBCNVRD0",235,0)
 ; CALL API HERE FOR TREATING FACILITY LIST IN ^TMP($J,"IBSSVI-TREATING FACILITY SITE") ARRAY FOR PATIENT DFN
"RTN","IBCNVRD0",236,0)
 K IBT1
"RTN","IBCNVRD0",237,0)
 ;
"RTN","IBCNVRD0",238,0)
 ; FLAG PER TREATING FACILITY IN MULTIPLE IN INSURANCE TYPE MULTIPLE FOR TREATING FACILITIES SENT  IN PIN/HL7 PIVOT FILE
"RTN","IBCNVRD0",239,0)
 D TFL^IBARXMU(DFN,.IBT1) ;ARRAY IN FORMAT IBT1(1)=500^2960101^ptr to ADT/HL7 Event Reason file (if exists)
"RTN","IBCNVRD0",240,0)
 ;    Where the first piece is the IEN of the institution, the second
"RTN","IBCNVRD0",241,0)
 ;    piece is the current date on record for that institution and the
"RTN","IBCNVRD0",242,0)
 ;    third piece is the event reason (if it exists).
"RTN","IBCNVRD0",243,0)
 ;    ALSO SCREENS OUT OTHER SITES BESIDES TYPES ="^VAMC^M&ROC^RO-OC^"
"RTN","IBCNVRD0",244,0)
 ;
"RTN","IBCNVRD0",245,0)
 S STNCNT=0
"RTN","IBCNVRD0",246,0)
 S ^TMP($J,"IBSSVI-TREATING FACILITY SITE",DFN,"COUNT")=0
"RTN","IBCNVRD0",247,0)
 S SITE=$$SITE^VASITE
"RTN","IBCNVRD0",248,0)
 S DEFINST=$$GET1^DIQ(8989.3,1_",",217,"I")  ; DEFAULT INSTITUTION
"RTN","IBCNVRD0",249,0)
 S DSTATION=$$GET1^DIQ(4,DEFINST_",",99,"I")
"RTN","IBCNVRD0",250,0)
 I DSTATION="" S DSTATION=$P(SITE,U,3)
"RTN","IBCNVRD0",251,0)
 S SITPTR=$P(SITE,U,1)
"RTN","IBCNVRD0",252,0)
 S ICNTSTA=0
"RTN","IBCNVRD0",253,0)
 F  S STNCNT=$O(IBT1(STNCNT)) Q:(STNCNT="")  D
"RTN","IBCNVRD0",254,0)
 .;DO NOT COUNT OWN SITE
"RTN","IBCNVRD0",255,0)
 .I DSTATION'=+IBT1(STNCNT) S ICNTSTA=ICNTSTA+1 S ^TMP($J,"IBSSVI-TREATING FACILITY SITE",DFN,ICNTSTA)=+IBT1(STNCNT)  ; FIRST PIECE NUMERIC STATION NUMBER AS IEN OF DEFAULT INTSITUTION OF KERNEL SYSTEM PARAMETER FILE
"RTN","IBCNVRD0",256,0)
 .S ^TMP($J,"IBSSVI-TREATING FACILITY SITE",DFN,"COUNT")=^TMP($J,"IBSSVI-TREATING FACILITY SITE",DFN,"COUNT")+1
"RTN","IBCNVRD0",257,0)
 .;ANY TREATING FACILITIES AS RECEIVING FACILITIES FOR REROUTING IN MSH SEGMENT JUST PRIOR TO CALL TO GENERATE^HLMA
"RTN","IBCNVRD0",258,0)
 ;DO THIS FOR ALL INSURANCE TYPE MULTIPLES
"RTN","IBCNVRD0",259,0)
 S INSURNM=0
"RTN","IBCNVRD0",260,0)
 F  S INSURNM=$O(^DPT(DFN,.312,"B",INSURNM)) Q:INSURNM=""  D
"RTN","IBCNVRD0",261,0)
 .S INSPTR=0
"RTN","IBCNVRD0",262,0)
 .F  S INSPTR=$O(^DPT(DFN,.312,"B",INSURNM,INSPTR)) Q:INSPTR=""  D
"RTN","IBCNVRD0",263,0)
 ..S INSPTR1=$P($G(^DPT(DFN,.312,INSPTR,0)),"^",1)
"RTN","IBCNVRD0",264,0)
 ..S EXPRD=$$EXPRD(DFN,INSPTR)
"RTN","IBCNVRD0",265,0)
 ..I EXPRD Q
"RTN","IBCNVRD0",266,0)
 ..S INCON=$$INCON(DFN,INSPTR)
"RTN","IBCNVRD0",267,0)
 ..I INCON Q
"RTN","IBCNVRD0",268,0)
 ..S FSHDT=$$FRSHDT(DFN,INSPTR)
"RTN","IBCNVRD0",269,0)
 ..I FSHDT Q
"RTN","IBCNVRD0",270,0)
 ..S INSNAMEP=INSPTR1
"RTN","IBCNVRD0",271,0)
 ..S NAMEINS=$P($G(^DIC(36,INSPTR1,0)),"^",1)
"RTN","IBCNVRD0",272,0)
 ..;
"RTN","IBCNVRD0",273,0)
 ..; CHECK IF "USE FOR HL7" IN EACH RECORD (I) IN 366.2 REPRESENTING A FIELD IN INSURANCE MULTIPLE OF PATIENT
"RTN","IBCNVRD0",274,0)
 ..F I=0:0 S I=$O(^IBCN(366.2,I)) Q:'I!(I=DGHL7END)  I $D(^IBCN(366.2,I,0)),$S($P(^IBCN(366.2,I,0),"^",6):1,1:0) D SASK^IBCNVUT0(I,INSPTR,DFN)
"RTN","IBCNVRD0",275,0)
 ..S ^TMP($J,"IBSSVI",DFN,INSPTR,1)=NAME_"|"_NAMEINS_"|"_GROUPLAN_"|"_COORDBEN_"|"_SUBSCRID_"|"_SSN_"|"_DATELVER_"|"_GROUPNUM_"|"_INSURDOB_"|"_INSURSSN_"|"_INSGENDR_"|"_INSNAMEP
"RTN","IBCNVRD0",276,0)
 ..S ^TMP($J,"IBSSVI",DFN,INSPTR,2)=PTRELHIP_"|"_WHOSEINS_"|"_EFFCTDPO_"|"_GROUPNAM_"|"_PTRELINS_"|"_INSNAME_"|"_"|"_SENDBEMP_"|"_SUBEMPNM_"|"_SEMPLCLA_"|"_SEMPLCL2
"RTN","IBCNVRD0",277,0)
 ..S ^TMP($J,"IBSSVI",DFN,INSPTR,3)=SEMPLCL3_"|"_SEMPLCLC_"|"_SEMPLCLS_"|"_SEMPLCLZ_"|"_SEMPLCLP_"|"_ESHGP_"|"_INSEXPDT_"|"_POLNBILL_"|"_INSSTAD_"|"_INSSTAD2_"|"_INSCITY_"|"_INSSTATE_"|"_INSZIP_"|"_INSPHONE_"|"_PATIENTI
"RTN","IBCNVRD0",278,0)
 ..D GETINFO  ;get new needed info.
"RTN","IBCNVRD0",279,0)
 ..S ^TMP($J,"IBSSVI",DFN,INSPTR,4)=PAYER_"|"_PAYERNM_"|"_BN_"|"_PCN_"|"_TOPNM_"|"_DOB_"|"_GENDER_"|"_RACE_"|"_POLNBILL_"|"_GROUPLNM
"RTN","IBCNVRD0",280,0)
 ..S ^TMP($J,"IBSSVI",DFN,INSPTR,5)=DFN_"|"_CNTHL7_"|"_INSPTR_"|"_INSPTR1_"||"_DSTATION
"RTN","IBCNVRD0",281,0)
 ..S GROUPPCM=""
"RTN","IBCNVRD0",282,0)
 ..S ITEMC=0
"RTN","IBCNVRD0",283,0)
 ..I GROUPLAN'="" D
"RTN","IBCNVRD0",284,0)
 ...S ITEM=0
"RTN","IBCNVRD0",285,0)
 ...F  S ITEM=$O(^IBA(355.3,GROUPLAN,11,ITEM)) Q:ITEM=""  D
"RTN","IBCNVRD0",286,0)
 ....S GROUPPCM=$G(^IBA(355.3,GROUPLAN,11,ITEM,0))
"RTN","IBCNVRD0",287,0)
 ....S ^TMP($J,"IBSSVI",DFN,INSPTR,6,ITEMC)=GROUPPCM
"RTN","IBCNVRD0",288,0)
 Q
"RTN","IBCNVRD0",289,0)
 ;
"RTN","IBCNVRD0",290,0)
GETINFO ; Get the new fields that do not already exist.
"RTN","IBCNVRD0",291,0)
 I GROUPLAN'="" D
"RTN","IBCNVRD0",292,0)
 .S GROUPLNM=""
"RTN","IBCNVRD0",293,0)
 .;S GROUPLNM=$P($G(^IBA(355.3,GROUPLAN,0)),"^",1)
"RTN","IBCNVRD0",294,0)
 .S GROUPLNM=$$GET1^DIQ(355.3,GROUPLAN_",",.01,"I")
"RTN","IBCNVRD0",295,0)
 .;I GROUPLNM'="" S GROUPLNM=$P($G(^DIC(36,GROUPLNM,0)),U)
"RTN","IBCNVRD0",296,0)
 .I GROUPLNM'="" S GROUPLNM=$$GET1^DIQ(36,GROUPLNM_",",.01)
"RTN","IBCNVRD0",297,0)
 S DOB=$$GET1^DIQ(2,DFN_",",.03,"I")
"RTN","IBCNVRD0",298,0)
 S GENDER=$$GET1^DIQ(2,DFN_",",.02,"I")
"RTN","IBCNVRD0",299,0)
 S RACE=$$GET1^DIQ(2,DFN_",",.06,"I") I RACE>0 S RACE=$P($G(^DIC(10,RACE,0)),"^",2)
"RTN","IBCNVRD0",300,0)
 S POLNBILL=$$GET1^DIQ(2.312,INSPTR_",",3.04,"I")
"RTN","IBCNVRD0",301,0)
 S PAYER=$$GET1^DIQ(36,INSPTR1_",",3.1,"I")
"RTN","IBCNVRD0",302,0)
 S PAYERNM=$$GET1^DIQ(365.12,PAYER_",",.01,"I")
"RTN","IBCNVRD0",303,0)
 S INGRP=$O(^IBA(355.3,"B",INSPTR1_",",0))
"RTN","IBCNVRD0",304,0)
 S BN=$$GET1^DIQ(355.3,INGRP_",",6.02,"I")
"RTN","IBCNVRD0",305,0)
 S PCN=$$GET1^DIQ(355.3,INGRP_",",6.03,"I")
"RTN","IBCNVRD0",306,0)
 S TOP=$$GET1^DIQ(355.3,INGRP_",",.09,"I")
"RTN","IBCNVRD0",307,0)
 S TOPNM=$$GET1^DIQ(355.1,TOP_",",.01,"I")
"RTN","IBCNVRD0",308,0)
 Q
"RTN","IBCNVRD0",309,0)
 ;
"RTN","IBCNVRD0",310,0)
SETUP(DFN) ;
"RTN","IBCNVRD0",311,0)
 N I,J,PTR
"RTN","IBCNVRD0",312,0)
 S PTR=0,J=-1
"RTN","IBCNVRD0",313,0)
 F  S PTR=$O(^TMP($J,"IBSSVI",DFN,PTR)) Q:PTR=""  D 
"RTN","IBCNVRD0",314,0)
 .F I=1:1:5 S GLOB(PTR,I)=^TMP($J,"IBSSVI",DFN,PTR,I)
"RTN","IBCNVRD0",315,0)
 .F  S J=$O(^TMP($J,"IBSSVI",DFN,PTR,6,J)) Q:J=""  S GLOB(PTR,6+J)=^TMP($J,"IBSSVI",DFN,PTR,6,J)
"RTN","IBCNVRD0",316,0)
 Q
"RTN","IBCNVRD0",317,0)
 ;
"RTN","IBCNVRD0",318,0)
INCON(DFN,INSPTR) ; SEE IF HAS INCONSISTANCIES
"RTN","IBCNVRD0",319,0)
 N PTR,ISPTR,NO
"RTN","IBCNVRD0",320,0)
 S (PTR,NO)=0
"RTN","IBCNVRD0",321,0)
 F  S PTR=$O(^IBCN(366.1,DFN,PTR)) Q:PTR=""  D
"RTN","IBCNVRD0",322,0)
 .S ISPTR=0
"RTN","IBCNVRD0",323,0)
 .F  S ISPTR=$O(^IBCN(366.1,DFN,PTR,"B",ISPTR)) Q:ISPTR=""  D
"RTN","IBCNVRD0",324,0)
 ..I ISPTR=INSPTR S NO=1
"RTN","IBCNVRD0",325,0)
 Q NO
"RTN","IBCNVRD0",326,0)
 ;
"RTN","IBCNVRD0",327,0)
FRSHDT(DFN,INSPTR) ;
"RTN","IBCNVRD0",328,0)
 N NO,FRESHDAY,FRESHDT,DR,IENS
"RTN","IBCNVRD0",329,0)
 S NO=0,DR=1.03
"RTN","IBCNVRD0",330,0)
 S IENS=DFN_","  ;",.312,"
"RTN","IBCNVRD0",331,0)
 S IENS=INSPTR_","_IENS
"RTN","IBCNVRD0",332,0)
 S DATELVER=$$GET1^DIQ(2.312,IENS,DR,"I") ;Date last verifyed 
"RTN","IBCNVRD0",333,0)
 ;
"RTN","IBCNVRD0",334,0)
 S FRESHDAY=$P($G(^IBE(350.9,1,51)),U,1) ; System freshness days
"RTN","IBCNVRD0",335,0)
 S FRESHDT=$$FMADD^XLFDT(DT,-FRESHDAY)
"RTN","IBCNVRD0",336,0)
 I DATELVER<FRESHDT S NO=1
"RTN","IBCNVRD0",337,0)
 Q NO
"RTN","IBCNVRD0",338,0)
 ;
"RTN","IBCNVRD0",339,0)
EXPRD(DFN,INSPTR) ;Is expiration date null or in future?
"RTN","IBCNVRD0",340,0)
 N EXDAT,NO
"RTN","IBCNVRD0",341,0)
 S NO=0
"RTN","IBCNVRD0",342,0)
 S EXDAT=$P(^DPT(DFN,.312,INSPTR,0),U,4)
"RTN","IBCNVRD0",343,0)
 I EXDAT'="" D
"RTN","IBCNVRD0",344,0)
 .I EXDAT>DT Q
"RTN","IBCNVRD0",345,0)
 .S NO=1
"RTN","IBCNVRD0",346,0)
 Q NO
"RTN","IBCNVRD1")
0^46^B219042298
"RTN","IBCNVRD1",1,0)
IBCNVRD1 ;ALB/BAA - SYSTEM SHARED VERIFIED INSURANCE -RECEIVING SITE PROCESSING ;25-FEB-15
"RTN","IBCNVRD1",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVRD1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVRD1",4,0)
 ;;
"RTN","IBCNVRD1",5,0)
 ;
"RTN","IBCNVRD1",6,0)
 ;
"RTN","IBCNVRD1",7,0)
RPC(SSVI,IBICN,GLOB) ; Receive transmitted data form another site, process and store in 
"RTN","IBCNVRD1",8,0)
 ; Insurance Verification Processor
"RTN","IBCNVRD1",9,0)
 ;
"RTN","IBCNVRD1",10,0)
 S SSVI=""
"RTN","IBCNVRD1",11,0)
 N NOW,PAT,PREOPHF,PREOPHFD,PREOPHFK,FRESHDAY,PDOD,FRESHDT,SRVICEDT,ERROR,BUFF,CNTHL71
"RTN","IBCNVRD1",12,0)
 N DFN,PAT,NAMEINS,GROUPLAN,NAME,SSN,GENDER,RACE,INSNAME  ; INSNAME IS INSURED  NAME
"RTN","IBCNVRD1",13,0)
 N NAME,SUBSCRID,PATNAM,PTDOB,MBRID,DATELVER,IDUZ,ADUZ,OSTATION,IBERROR,LCKERR
"RTN","IBCNVRD1",14,0)
 N GNAM,GNAME,GNUM,GNUMB,GROUPLNM,INSNAMEP,STATION,DSTATION,OSTATION  ; STATIONS AS ORIGINATING SENDING FACILITY SITE'S STATION NUMBER
"RTN","IBCNVRD1",15,0)
 ;
"RTN","IBCNVRD1",16,0)
 N LASTINDT,NOWDATE,LCKERR,INSPTR,AUTO,SUB,DATA,GDATA,GIEN,GROUPNAM,GROUPNUM
"RTN","IBCNVRD1",17,0)
 N GRPLNPTR,IBD,IBP,IBSOURCE,INSPTR1,INSPTR2,ISGROUP,MGRP,NAMINS,NEWGRPLN
"RTN","IBCNVRD1",18,0)
 N PIVOTNUM,PREL,PTNAM,RECDDAT,RIEN,RSUPDT,TSTAMP,VARPTR,IENG,REIN,AUDUZ,PSSN,STATE,SUBSCRNM,COB,%
"RTN","IBCNVRD1",19,0)
 ;
"RTN","IBCNVRD1",20,0)
 S IDUZ=$$FIND1^DIC(200,"","X","POSTMASTER")
"RTN","IBCNVRD1",21,0)
 S ADUZ="AUTOUPDATE,IBEIV"
"RTN","IBCNVRD1",22,0)
 S LCKERR=0
"RTN","IBCNVRD1",23,0)
 S DFN=$$DFN^IBARXMU(IBICN) I 'DFN S IBD(0)="-1^ICN Not found" Q
"RTN","IBCNVRD1",24,0)
 S PTNAM=$$GET1^DIQ(2,DFN_",",.01),PTDOB=$$GET1^DIQ(2,DFN_",",.03)
"RTN","IBCNVRD1",25,0)
 ;
"RTN","IBCNVRD1",26,0)
 ;S GLOB(SUB,1))=NAME_"|"_NAMEINS_"|"_GROUPLAN_"|"_COORDBEN_"|"_SUBSCRID_"|"_SSN_"|"_DATELVER_"|"_
"RTN","IBCNVRD1",27,0)
 ;           GROUPNUM_"|"_INSURDOB_"|"_INSURSSN_"|"_INSGENDR_"|"_INSNAMEP
"RTN","IBCNVRD1",28,0)
 ;
"RTN","IBCNVRD1",29,0)
 ;S GLOB(SUB,2)=PTRELHIP_"|"_WHOSEINS_"|"_EFFCTDPO_"|"_GROUPNAM_"|"_PTRELINS_"|"_INSNAME_"|"_
"RTN","IBCNVRD1",30,0)
 ;          "|"_SENDBEMP_"|"_SUBEMPNM_"|"_SEMPLCLA_"|"_SEMPLCL2
"RTN","IBCNVRD1",31,0)
 ;
"RTN","IBCNVRD1",32,0)
 ;S GLOB(SUB,3)=SEMPLCL3_"|"_SEMPLCLC_"|"_SEMPLCLS_"|"_SEMPLCLZ_"|"_SEMPLCLP_"|"_ESHGP_"|"_
"RTN","IBCNVRD1",33,0)
 ;          INSEXPDT_"|"_POLNBILL_"|"_INSSTAD_"|"_INSSTAD2_"|"_INSCITY_"|"_INSSTATE_"|"_
"RTN","IBCNVRD1",34,0)
 ;          INSZIP_"|"_INSPHONE_"|"_PATIENTI
"RTN","IBCNVRD1",35,0)
 ;
"RTN","IBCNVRD1",36,0)
 ;S GLOB(SUB,4))=PAYER_"|"_PAYERNM_"|"_BN_"|"_PCN_"|"_TOPNM_"|"_DOB_"|"_GENDER_"|"_RACE_"|"_
"RTN","IBCNVRD1",37,0)
 ;           POLNBILL_"|"_GROUPLNM
"RTN","IBCNVRD1",38,0)
 ;
"RTN","IBCNVRD1",39,0)
 ;S GLOB(SUB,5)=DFN_"|"_CNTHL7_"|"_INSPTR_"|"_INSPTR1_"|"_STATION_"|"_DSTATION_"|"_RIEN_"|"_ERROR
"RTN","IBCNVRD1",40,0)
 ;
"RTN","IBCNVRD1",41,0)
 ;I GROUPLAN'="" D
"RTN","IBCNVRD1",42,0)
 ;.S ITEM=0
"RTN","IBCNVRD1",43,0)
 ;.F  S ITEM=$O(^IBA(355.3,GROUPLAN,11,ITEM)) Q:ITEM=""  D
"RTN","IBCNVRD1",44,0)
 ;..S GROUPPCM=$G(^IBA(355.3,GROUPLAN,11,ITEM,0))
"RTN","IBCNVRD1",45,0)
 ;..S GLOB(SUB,7...N)=GROUPPCM N
"RTN","IBCNVRD1",46,0)
 ; 
"RTN","IBCNVRD1",47,0)
 S SSVI(0)="STARTED"
"RTN","IBCNVRD1",48,0)
 S SUB=0
"RTN","IBCNVRD1",49,0)
 F  S SUB=$O(GLOB(SUB)) Q:SUB=""  D PROCESS(SUB)
"RTN","IBCNVRD1",50,0)
 ;
"RTN","IBCNVRD1",51,0)
 D DONE
"RTN","IBCNVRD1",52,0)
 Q
"RTN","IBCNVRD1",53,0)
 ;
"RTN","IBCNVRD1",54,0)
PROCESS(SUB) ; process insurance entries
"RTN","IBCNVRD1",55,0)
 S IBSOURCE=$O(^IBE(355.12,"C","INTERFACILITY INS UPDATE",0))
"RTN","IBCNVRD1",56,0)
 S AUTO="",ERROR=""
"RTN","IBCNVRD1",57,0)
 S SSVI(SUB)=GLOB(SUB,5)
"RTN","IBCNVRD1",58,0)
 S IBP="|"
"RTN","IBCNVRD1",59,0)
 S OSTATION=$P(GLOB(SUB,5),IBP,5)
"RTN","IBCNVRD1",60,0)
 ;
"RTN","IBCNVRD1",61,0)
 S NAME=$P(GLOB(SUB,1),IBP,1)
"RTN","IBCNVRD1",62,0)
 S MBRID=$P(GLOB(SUB,1),IBP,6)
"RTN","IBCNVRD1",63,0)
 S SUBSCRID=$P(GLOB(SUB,1),IBP,5)
"RTN","IBCNVRD1",64,0)
 S SUBSCRNM=$P(GLOB(SUB,1),IBP,12)
"RTN","IBCNVRD1",65,0)
 S DATELVER=$P(GLOB(SUB,1),IBP,7)
"RTN","IBCNVRD1",66,0)
 S NAMINS=$P(GLOB(SUB,1),IBP,2)
"RTN","IBCNVRD1",67,0)
 S GNAME=$P(GLOB(SUB,2),IBP,4)
"RTN","IBCNVRD1",68,0)
 S GNUMB=$P(GLOB(SUB,1),IBP,8)
"RTN","IBCNVRD1",69,0)
 S GROUPLNM=$P(GLOB(SUB,1),IBP,3)
"RTN","IBCNVRD1",70,0)
 S INSNAME=$P(GLOB(SUB,2),IBP,6)
"RTN","IBCNVRD1",71,0)
 S DOB=$P(GLOB(SUB,4),IBP,6)
"RTN","IBCNVRD1",72,0)
 S SSN=$P(GLOB(SUB,1),IBP,6)
"RTN","IBCNVRD1",73,0)
 ;VALIDATE INSURANCE COMPANY NAME WITH ASSOCIATED PAYER ID AND PAYER NAME
"RTN","IBCNVRD1",74,0)
 S PAYRID=$P(GLOB(SUB,4),IBP,1)
"RTN","IBCNVRD1",75,0)
 S PYRNM=$P(GLOB(SUB,4),IBP,2)
"RTN","IBCNVRD1",76,0)
 S COB=$P(GLOB(SUB,1),IBP,4)
"RTN","IBCNVRD1",77,0)
 ;
"RTN","IBCNVRD1",78,0)
 S VALIDINS=$$PAYER(NAMINS,PAYRID,PYRNM)
"RTN","IBCNVRD1",79,0)
 S IENI=$P(VALIDINS,"^",2),VALIDINS=+VALIDINS
"RTN","IBCNVRD1",80,0)
 ;
"RTN","IBCNVRD1",81,0)
 S AUTO=$$AUTOUPD(PAYRID)
"RTN","IBCNVRD1",82,0)
 I +AUTO=1 D  Q
"RTN","IBCNVRD1",83,0)
 .D:$P(AUTO,U,3)'="" UPDTPI($P(AUTO,U,2),$P(AUTO,U,3),$P(AUTO,U,6))
"RTN","IBCNVRD1",84,0)
 .D:$P(AUTO,U,4)'="" UPDTPI($P(AUTO,U,2),$P(AUTO,U,4),$P(AUTO,U,6))
"RTN","IBCNVRD1",85,0)
 .D STUB
"RTN","IBCNVRD1",86,0)
 .S $P(GLOB(SUB,5),"|",7)=$G(RIEN) S RIEN=""
"RTN","IBCNVRD1",87,0)
 .S $P(GLOB(SUB,5),"|",8)=$G(ERROR)
"RTN","IBCNVRD1",88,0)
 .S SSVI(SUB)=GLOB(SUB,5)
"RTN","IBCNVRD1",89,0)
 .Q
"RTN","IBCNVRD1",90,0)
 ;
"RTN","IBCNVRD1",91,0)
 I +AUTO=0!(LCKERR=1) D BUFFER
"RTN","IBCNVRD1",92,0)
 ;
"RTN","IBCNVRD1",93,0)
 S $P(GLOB(SUB,5),"|",7)=$G(RIEN)
"RTN","IBCNVRD1",94,0)
 S $P(GLOB(SUB,5),"|",8)=$G(ERROR)
"RTN","IBCNVRD1",95,0)
 S SSVI(SUB)=GLOB(SUB,5)
"RTN","IBCNVRD1",96,0)
 Q
"RTN","IBCNVRD1",97,0)
 ;
"RTN","IBCNVRD1",98,0)
 ;
"RTN","IBCNVRD1",99,0)
BUFFER ; File into buffer
"RTN","IBCNVRD1",100,0)
 ;
"RTN","IBCNVRD1",101,0)
 S IBP="|",IBERROR=""
"RTN","IBCNVRD1",102,0)
 ;S ADUZ=$$FIND1^DIC(200,"","X","AUTOUPDATE,IBEIV")
"RTN","IBCNVRD1",103,0)
 ;S IDUZ=$$FIND1^DIC(200,"","X","POSTMASTER")
"RTN","IBCNVRD1",104,0)
 ; BE SURE DEFINED RIEN (INSURANCE BUFFER ENTRY)
"RTN","IBCNVRD1",105,0)
 ;
"RTN","IBCNVRD1",106,0)
 S RIEN=""
"RTN","IBCNVRD1",107,0)
 S RIEN=+$$ADD^IBCNBEE(IBSOURCE)
"RTN","IBCNVRD1",108,0)
 I 'RIEN D  Q
"RTN","IBCNVRD1",109,0)
 .S IBERROR="COULD NOT CREATE A NEW BUFFER ENTRY"
"RTN","IBCNVRD1",110,0)
 .S $P(GLOB(SUB,5),"|",8)=IBERROR
"RTN","IBCNVRD1",111,0)
 ;
"RTN","IBCNVRD1",112,0)
 D NOW^%DTC S TSTAMP=%
"RTN","IBCNVRD1",113,0)
 ;
"RTN","IBCNVRD1",114,0)
 S RSUPDT(355.33,RIEN_",",.1)=$P(GLOB(SUB,1),IBP,7)     ; DATE VERIFIED
"RTN","IBCNVRD1",115,0)
 S RSUPDT(355.33,RIEN_",",90.03)=$S($G(SUBSCRID)'="":SUBSCRID,1:MBRID)
"RTN","IBCNVRD1",116,0)
 S RSUPDT(355.33,RIEN_",",62.01)=MBRID  ;PATIENT (MEMBER) ID
"RTN","IBCNVRD1",117,0)
 S RSUPDT(355.33,RIEN_",",90.02)=GNUMB  ;GROUP NUM
"RTN","IBCNVRD1",118,0)
 S RSUPDT(355.33,RIEN_",",90.01)=GNAME  ;GROUP NAME
"RTN","IBCNVRD1",119,0)
 S RSUPDT(355.33,RIEN_",",60.01)=DFN  ; PATIENT
"RTN","IBCNVRD1",120,0)
 S RSUPDT(355.33,RIEN_",",60.02)=$P(GLOB(SUB,2),IBP,3)  ; EFFECTIVE DATE
"RTN","IBCNVRD1",121,0)
 S RSUPDT(355.33,RIEN_",",60.03)=$P(GLOB(SUB,3),IBP,7)  ; EXPIRATION DATE
"RTN","IBCNVRD1",122,0)
 S RSUPDT(355.33,RIEN_",",60.05)=$P(GLOB(SUB,2),IBP,2)   ;WHOSEINS
"RTN","IBCNVRD1",123,0)
 S RSUPDT(355.33,RIEN_",",60.06)=$P(GLOB(SUB,2),IBP,5)   ;PTRELINS
"RTN","IBCNVRD1",124,0)
 S RSUPDT(355.33,RIEN_",",60.12)=COB  ;COORDINATION OF BENEFITS
"RTN","IBCNVRD1",125,0)
 S RSUPDT(355.33,RIEN_",",60.14)=$P(GLOB(SUB,2),IBP,1)   ;PTRELHIP
"RTN","IBCNVRD1",126,0)
 S RSUPDT(355.33,RIEN_",",20.01)=NAMINS   ; INSURANCE COMPANY NAME, VALIDATED WITH PAYRID AND PYRNM
"RTN","IBCNVRD1",127,0)
 S GRPLNPTR=$O(^DIC(36,"B",GROUPLNM,0))    ;GROUP PLAN NAME
"RTN","IBCNVRD1",128,0)
 ;I VALIDINS=0 
"RTN","IBCNVRD1",129,0)
 S RSUPDT(355.33,RIEN_",",.07)='VALIDINS  ; New Insurance Company ?
"RTN","IBCNVRD1",130,0)
 S ISGROUP=0
"RTN","IBCNVRD1",131,0)
 I GROUPLNM'="" S ISGROUP=1
"RTN","IBCNVRD1",132,0)
 S RSUPDT(355.33,RIEN_",",40.01)=ISGROUP   ; 1 FOR "YES" INSTEAD OF .08 AS NEW GROUP/PLAN
"RTN","IBCNVRD1",133,0)
 S RSUPDT(355.33,RIEN_",",40.1)=$P(GLOB(SUB,4),IBP,3)   ;B/N
"RTN","IBCNVRD1",134,0)
 S RSUPDT(355.33,RIEN_",",40.11)=$P(GLOB(SUB,4),IBP,5)  ;PCN
"RTN","IBCNVRD1",135,0)
 S RSUPDT(355.33,RIEN_",",40.09)=$P(GLOB(SUB,4),IBP,5)  ;type of plan
"RTN","IBCNVRD1",136,0)
 ;CHECK IF NEW GROUP PLAN
"RTN","IBCNVRD1",137,0)
 ;FIRST CHECK IF NOT NEW INSURANCE
"RTN","IBCNVRD1",138,0)
 S NEWGRPLN=1
"RTN","IBCNVRD1",139,0)
 I VALIDINS=1 D
"RTN","IBCNVRD1",140,0)
 .;GO THROUGH "B" CROSS REFERENCE IN GROUP PLAN FILE WITH INSURANCE COMPANY NAME
"RTN","IBCNVRD1",141,0)
 .S IENG=0
"RTN","IBCNVRD1",142,0)
 .I IENI="" Q
"RTN","IBCNVRD1",143,0)
 .F  S IENG=$O(^IBA(355.3,"B",IENI,IENG)) Q:(IENG="")!(NEWGRPLN=0)  D
"RTN","IBCNVRD1",144,0)
 ..;CHECK AGAINST GROUP NAME AND GROUP NUMBER
"RTN","IBCNVRD1",145,0)
 ..S GROUPNUM=$P($G(^IBA(355.3,IENG,0)),U,4)
"RTN","IBCNVRD1",146,0)
 ..S GROUPNAM=$P($G(^IBA(355.3,IENG,0)),U,3)
"RTN","IBCNVRD1",147,0)
 ..I (GROUPNUM=GNUMB)&(GROUPNAM=GNAME) S NEWGRPLN=0
"RTN","IBCNVRD1",148,0)
 S RSUPDT(355.33,RIEN_",",.08)=NEWGRPLN  ; NEW GROUP PLAN
"RTN","IBCNVRD1",149,0)
 S RSUPDT(355.33,RIEN_",",61.02)=$P(GLOB(SUB,2),IBP,9)  ; EMPLOYER NAME
"RTN","IBCNVRD1",150,0)
 S RSUPDT(355.33,RIEN_",",61.05)=$P(GLOB(SUB,2),IBP,8)  ; SEND BILL TO EMPLOYER
"RTN","IBCNVRD1",151,0)
 S RSUPDT(355.33,RIEN_",",61.06)=$P(GLOB(SUB,2),IBP,10)  ; EMPLOYER ADR1
"RTN","IBCNVRD1",152,0)
 S RSUPDT(355.33,RIEN_",",61.07)=$P(GLOB(SUB,2),IBP,11)  ; EMPLOYER ADR2
"RTN","IBCNVRD1",153,0)
 S RSUPDT(355.33,RIEN_",",61.08)=$P(GLOB(SUB,3),IBP,1)  ; EMPLOYER ADR3
"RTN","IBCNVRD1",154,0)
 S RSUPDT(355.33,RIEN_",",61.09)=$P(GLOB(SUB,3),IBP,2)  ; EMPLOYER CITY
"RTN","IBCNVRD1",155,0)
 S RSUPDT(355.33,RIEN_",",61.1)=$P(GLOB(SUB,3),IBP,3)   ; EMPLOYER STATE
"RTN","IBCNVRD1",156,0)
 S RSUPDT(355.33,RIEN_",",61.11)=$P(GLOB(SUB,3),IBP,4)  ; EMPLOYER ZIPCODE
"RTN","IBCNVRD1",157,0)
 S RSUPDT(355.33,RIEN_",",61.12)=$P(GLOB(SUB,3),IBP,5)  ; EMPLOYER PHONE
"RTN","IBCNVRD1",158,0)
 S RSUPDT(355.33,RIEN_",",61.01)=$P(GLOB(SUB,3),IBP,6)  ;EMPLOYER SPONSORED HEALTH GROUP PLAN
"RTN","IBCNVRD1",159,0)
 ;
"RTN","IBCNVRD1",160,0)
 S RSUPDT(355.33,RIEN_",",60.08)=$P(GLOB(SUB,1),IBP,9)   ;insured dob
"RTN","IBCNVRD1",161,0)
 S PSSN=$P(GLOB(SUB,1),IBP,10)  ;insured ssn
"RTN","IBCNVRD1",162,0)
 S PSSN=$TR(PSSN,"-","")
"RTN","IBCNVRD1",163,0)
 S RSUPDT(355.33,RIEN_",",60.09)=PSSN  ;insured ssn
"RTN","IBCNVRD1",164,0)
 S RSUPDT(355.33,RIEN_",",60.13)=$P(GLOB(SUB,1),IBP,11)  ;insured gender
"RTN","IBCNVRD1",165,0)
 S RSUPDT(355.33,RIEN_",",91.01)=$P(GLOB(SUB,2),IBP,6)   ;insured name
"RTN","IBCNVRD1",166,0)
 S RSUPDT(355.33,RIEN_",",62.02)=$P(GLOB(SUB,3),IBP,9)   ;subscriber add 1
"RTN","IBCNVRD1",167,0)
 S RSUPDT(355.33,RIEN_",",62.03)=$P(GLOB(SUB,3),IBP,10)  ;subscriber add 2
"RTN","IBCNVRD1",168,0)
 S RSUPDT(355.33,RIEN_",",62.04)=$P(GLOB(SUB,3),IBP,11)  ;subscriber city
"RTN","IBCNVRD1",169,0)
 S STATE=$P(GLOB(SUB,3),IBP,12)
"RTN","IBCNVRD1",170,0)
 I STATE'="" S STATE=$O(^DIC(5,"B",STATE,0))  ;subscriber state
"RTN","IBCNVRD1",171,0)
 S RSUPDT(355.33,RIEN_",",62.05)=STATE  ;subscriber state
"RTN","IBCNVRD1",172,0)
 S RSUPDT(355.33,RIEN_",",62.06)=$P(GLOB(SUB,3),IBP,13)  ;subscriber zip
"RTN","IBCNVRD1",173,0)
 S RSUPDT(355.33,RIEN_",",62.09)=$P(GLOB(SUB,3),IBP,14)  ;subscriber phone
"RTN","IBCNVRD1",174,0)
 S RSUPDT(355.33,RIEN_",",.01)=TSTAMP  ; DATE ENTERED
"RTN","IBCNVRD1",175,0)
 S RSUPDT(355.33,RIEN_",",.02)=IDUZ  ; ENTERED BY
"RTN","IBCNVRD1",176,0)
 S RSUPDT(355.33,RIEN_",",.03)=IBSOURCE  ; SOURCE OF INFORMATION
"RTN","IBCNVRD1",177,0)
 S RSUPDT(355.33,RIEN_",",.04)="E"  ; STATUS
"RTN","IBCNVRD1",178,0)
 S RSUPDT(355.33,RIEN_",",.05)=TSTAMP  ; DATE PROCESSED
"RTN","IBCNVRD1",179,0)
 S RSUPDT(355.33,RIEN_",",.06)=IDUZ  ; PROCESSED BY
"RTN","IBCNVRD1",180,0)
 S RSUPDT(355.33,RIEN_",",.1)=TSTAMP  ; DATE VERIFIED
"RTN","IBCNVRD1",181,0)
 S RSUPDT(355.33,RIEN_",",.11)=IDUZ  ; VERIFIED BY
"RTN","IBCNVRD1",182,0)
 S RSUPDT(355.33,RIEN_",",.12)=1  ; eIV STATUS
"RTN","IBCNVRD1",183,0)
 S RSUPDT(355.33,RIEN_",",.14)=OSTATION  ; REMOTE LOCATION
"RTN","IBCNVRD1",184,0)
 ;
"RTN","IBCNVRD1",185,0)
 D FILE^DIE("I","RSUPDT","ERROR")
"RTN","IBCNVRD1",186,0)
 ;
"RTN","IBCNVRD1",187,0)
 I $G(ERROR)'="" S $P(GLOB(SUB,5),"|",8)=ERROR
"RTN","IBCNVRD1",188,0)
 ;
"RTN","IBCNVRD1",189,0)
 Q
"RTN","IBCNVRD1",190,0)
 ;
"RTN","IBCNVRD1",191,0)
PAYER(INSNAME,PAYRID,PYRNM) ;
"RTN","IBCNVRD1",192,0)
 N IEN,IENI,VALIDINS,PAYER,PAYERID,PAYERNM
"RTN","IBCNVRD1",193,0)
 S IEN=0
"RTN","IBCNVRD1",194,0)
 S VALIDINS=0
"RTN","IBCNVRD1",195,0)
 S IENI=""
"RTN","IBCNVRD1",196,0)
 S PAYERID=""
"RTN","IBCNVRD1",197,0)
 S PAYERNM=""
"RTN","IBCNVRD1",198,0)
 S IEN=0
"RTN","IBCNVRD1",199,0)
 F  S IEN=$O(^DIC(36,"B",INSNAME,IEN)) Q:(IEN="")!(VALIDINS=1)  D
"RTN","IBCNVRD1",200,0)
 .S PAYERID=$P($G(^DIC(36,IEN,3)),U,10)
"RTN","IBCNVRD1",201,0)
 .I PAYERID'="" S PAYERNM=$P($G(^IBE(365.12,PAYERID,0)),U)
"RTN","IBCNVRD1",202,0)
 .I (PAYERID=PAYRID)&(PAYERNM=PYRNM) S VALIDINS=1
"RTN","IBCNVRD1",203,0)
 .S IENI=IEN
"RTN","IBCNVRD1",204,0)
 Q VALIDINS_"^"_IENI
"RTN","IBCNVRD1",205,0)
 ; 
"RTN","IBCNVRD1",206,0)
AUTOUPD(PIEN) ;
"RTN","IBCNVRD1",207,0)
 ; Returns "1^file 2 ien^file 2.312 ien^2nd file 2.312 ien^Medicare flag^subscriber flag", if entry
"RTN","IBCNVRD1",208,0)
 ; is eligible for auto-update, returns 0 otherwise. 
"RTN","IBCNVRD1",209,0)
 ;
"RTN","IBCNVRD1",210,0)
 ; Medicare flag: 1 for Medicare, 0 otherwise
"RTN","IBCNVRD1",211,0)
 ; Subscriber flag: 1 if patient is the subscriber, 0 otherwise
"RTN","IBCNVRD1",212,0)
 ;
"RTN","IBCNVRD1",213,0)
 ; For non-Medicare response: 1st file 2.312 ien is set, 2nd file 2.312 ien is empty, pieces 5-7 are empty
"RTN","IBCNVRD1",214,0)
 ; For Medicare response: 1st file 2.312 ien contains ien for Medicare Part A, 2nd file 2.312 ien contains ien for Medicare Part B,
"RTN","IBCNVRD1",215,0)
 ;                        either one may be empty, but at least one of them is set if entry is eligible.
"RTN","IBCNVRD1",216,0)
 ;
"RTN","IBCNVRD1",217,0)
 N GNUM1,GOK,IDATA0,IDATA3,ISSUB,MWNRA,MWNRB,MWNRIEN,MWNRTYP,IEN36
"RTN","IBCNVRD1",218,0)
 N ONEPOL,RDATA0,RES,TQIEN,IDATA7,IDATA1   ; IB*2.0*497
"RTN","IBCNVRD1",219,0)
 S RES=0
"RTN","IBCNVRD1",220,0)
 I PIEN<1 Q RES
"RTN","IBCNVRD1",221,0)
 S MWNRIEN=$P($G(^IBE(350.9,1,51)),U,25),MWNRTYP=0,(MWNRA,MWNRB)=""
"RTN","IBCNVRD1",222,0)
 I PIEN=MWNRIEN S MWNRTYP=1
"RTN","IBCNVRD1",223,0)
 S ONEPOL=$$ONEPOL^IBCNEHLU(PIEN,DFN)
"RTN","IBCNVRD1",224,0)
 ; try to find a matching pat. insurance
"RTN","IBCNVRD1",225,0)
 S IEN36="" F  S IEN36=$O(^DIC(36,"AC",PIEN,IEN36)) Q:IEN36=""!(RES>0)  D
"RTN","IBCNVRD1",226,0)
 .S IEN312="" F  S IEN312=$O(^DPT(DFN,.312,"B",IEN36,IEN312)) Q:IEN312=""!(RES>0&('+MWNRTYP))  D
"RTN","IBCNVRD1",227,0)
 ..S IDATA0=$G(^DPT(DFN,.312,IEN312,0))
"RTN","IBCNVRD1",228,0)
 ..S IDATA3=$G(^DPT(DFN,.312,IEN312,3))
"RTN","IBCNVRD1",229,0)
 ..S IDATA7=$G(^DPT(DFN,.312,IEN312,7))   ; IB*2.0*497 (vd)
"RTN","IBCNVRD1",230,0)
 ..S ISSUB=$$PATISSUB^IBCNEHLU(IDATA0)
"RTN","IBCNVRD1",231,0)
 ..; Patient is the subscriber
"RTN","IBCNVRD1",232,0)
 ..I ISSUB,'$$CHK1 Q
"RTN","IBCNVRD1",233,0)
 ..; Patient is the dependent
"RTN","IBCNVRD1",234,0)
 ..I 'ISSUB,'$$CHK2(MWNRTYP) Q
"RTN","IBCNVRD1",235,0)
 ..; check group number
"RTN","IBCNVRD1",236,0)
 ..S GIEN=+$P(IDATA0,U,18),GOK=1  ;IB*2*497  group number needs to be retrieved from new field
"RTN","IBCNVRD1",237,0)
 ..; check non-Medicare group number
"RTN","IBCNVRD1",238,0)
 ..I '+MWNRTYP D  Q:'GOK  ; Group number doesn't match
"RTN","IBCNVRD1",239,0)
 ...I 'ONEPOL D
"RTN","IBCNVRD1",240,0)
 ....I GIEN'>0 S GOK=0 Q
"RTN","IBCNVRD1",241,0)
 ....S GNUM1=$P($G(^IBA(355.3,GIEN,2)),U,2)    ; IB*2.0*497 (vd)
"RTN","IBCNVRD1",242,0)
 ....I GNUMB=""!(GNUM1="")!(GNUMB'=GNUM1) S GOK=0
"RTN","IBCNVRD1",243,0)
 ....Q
"RTN","IBCNVRD1",244,0)
 ...I ONEPOL D
"RTN","IBCNVRD1",245,0)
 ....I GNUMB'="",GIEN'="" S GNUM1=$P($G(^IBA(355.3,GIEN,2)),U,2) I GNUM1'="",GNUMB'=GNUM1 S GOK=0  ; IB*2.0*497 (vd)
"RTN","IBCNVRD1",246,0)
 ....Q
"RTN","IBCNVRD1",247,0)
 ...Q
"RTN","IBCNVRD1",248,0)
 ..; check for Medicare part A/B
"RTN","IBCNVRD1",249,0)
 ..I +MWNRTYP D  Q:'GOK  ; Group number doesn't match
"RTN","IBCNVRD1",250,0)
 ...I GIEN'>0 S GOK=0 Q
"RTN","IBCNVRD1",251,0)
 ...S GDATA=$G(^IBA(355.3,GIEN,0))
"RTN","IBCNVRD1",252,0)
 ...I $P(GDATA,U,14)="A" S MWNRA=IEN312 Q
"RTN","IBCNVRD1",253,0)
 ...I $P(GDATA,U,14)="B" S MWNRB=IEN312 Q
"RTN","IBCNVRD1",254,0)
 ...S GOK=0
"RTN","IBCNVRD1",255,0)
 ...Q
"RTN","IBCNVRD1",256,0)
 ..S FRESHDAY=$P($G(^IBE(350.9,1,51)),U,1) ; System freshness days
"RTN","IBCNVRD1",257,0)
 ..S FRESHDT=$$FMADD^XLFDT(DT,-FRESHDAY)
"RTN","IBCNVRD1",258,0)
 ..S RES=1_U_DFN_U_$S(+MWNRTYP:MWNRA_U_MWNRB_U_1,1:IEN312_U_U_0)
"RTN","IBCNVRD1",259,0)
 ..S $P(RES,U,6)=ISSUB,ERROR=""
"RTN","IBCNVRD1",260,0)
 ..I DATELVER<FRESHDT S $P(RES,U,1)=2,ERROR="Date Verified less than Freshdate" Q
"RTN","IBCNVRD1",261,0)
 ..Q
"RTN","IBCNVRD1",262,0)
 .Q
"RTN","IBCNVRD1",263,0)
 Q RES
"RTN","IBCNVRD1",264,0)
 ;
"RTN","IBCNVRD1",265,0)
CHK1() ; check auto-update criteria for patient who is the subscriber
"RTN","IBCNVRD1",266,0)
 ; called from tag AUTOUPD, uses variables defined there
"RTN","IBCNVRD1",267,0)
 ;
"RTN","IBCNVRD1",268,0)
 ; returns 1 if given policy satisfies auto-update criteria, returns 0 otherwise
"RTN","IBCNVRD1",269,0)
 N RES
"RTN","IBCNVRD1",270,0)
 S RES=0
"RTN","IBCNVRD1",271,0)
 I SUBSCRID'=$P(IDATA7,U,2) G CHK1X  ; Subscriber ID doesn't match   ; IB*2.0*497 compare subscriber ID data at their new locations
"RTN","IBCNVRD1",272,0)
 I DOB'=$P(IDATA3,U) G CHK1X  ; DOB doesn't match
"RTN","IBCNVRD1",273,0)
 I '$$NAMECMP^IBCNEHLU(INSNAME,$P(IDATA7,U)) G CHK1X  ; Insured's name doesn't match  ; IB*2.0*497 compare name of insured data at their new locations
"RTN","IBCNVRD1",274,0)
 S RES=1
"RTN","IBCNVRD1",275,0)
CHK1X ;
"RTN","IBCNVRD1",276,0)
 Q RES
"RTN","IBCNVRD1",277,0)
 ;
"RTN","IBCNVRD1",278,0)
CHK2(MWNRTYP) ; check auto-update criteria for patient who is not the subscriber
"RTN","IBCNVRD1",279,0)
 ; called from tag AUTOUPD, uses variables defined there
"RTN","IBCNVRD1",280,0)
 ;
"RTN","IBCNVRD1",281,0)
 ; returns 1 if policy satisfies auto-update criteria, returns 0 otherwise
"RTN","IBCNVRD1",282,0)
 N DOB,ID,IDATA5,IENS,NAME,PDOB,PNAME,RES
"RTN","IBCNVRD1",283,0)
 S RES=0
"RTN","IBCNVRD1",284,0)
 S IDATA5=$G(^DPT(DFN,.312,IEN312,5))
"RTN","IBCNVRD1",285,0)
 S IENS=DFN_","
"RTN","IBCNVRD1",286,0)
 S ID=SUBSCRID    ; IB*2.0*497 Subscriber ID needs to be retrieved from its new location
"RTN","IBCNVRD1",287,0)
 I ID'=$P(IDATA7,U,2),ID'=$P(IDATA5,U) G CHK2X  ; both Subscriber ID and Patient ID don't match ; IB*2.0*497 compare subscriber ID at new locations
"RTN","IBCNVRD1",288,0)
 S DOB=$P(GLOB(SUB,4),IBP,6),PDOB=$$GET1^DIQ(2,IENS,.03,"I")
"RTN","IBCNVRD1",289,0)
 I DOB'=$P(IDATA3,U),DOB'=PDOB G CHK2X  ; both Subscriber and Patient DOB don't match
"RTN","IBCNVRD1",290,0)
 S NAME=$P(GLOB(SUB,1),IBP,1),PNAME=$$GET1^DIQ(2,IENS,.01)   ; IB*2.0*497 get name of insured at its new location
"RTN","IBCNVRD1",291,0)
 I '+MWNRTYP,'$$NAMECMP^IBCNEHLU(NAME,$P(IDATA7,U)),'$$NAMECMP^IBCNEHLU(NAME,PNAME) G CHK2X  ; non-Medicare, both Subscriber and Patient name don't match ; IB*2*497
"RTN","IBCNVRD1",292,0)
 I +MWNRTYP,'$$NAMECMP^IBCNEHLU(NAME,PNAME) G CHK2X  ; Medicare, Patient name doesn't match
"RTN","IBCNVRD1",293,0)
 S RES=1
"RTN","IBCNVRD1",294,0)
CHK2X ;
"RTN","IBCNVRD1",295,0)
 Q RES
"RTN","IBCNVRD1",296,0)
 ;
"RTN","IBCNVRD1",297,0)
UPDTPI(DFN,IEN312,ISSUB) ; Update the patient insurance.
"RTN","IBCNVRD1",298,0)
 S TSTAMP=$$NOW^XLFDT(),IENS=IEN312_","_DFN_","
"RTN","IBCNVRD1",299,0)
 I ISSUB S DATA(2.312,IENS,7.01)=$P(GLOB(SUB,2),IBP,6) ; name  
"RTN","IBCNVRD1",300,0)
 S DATA(2.312,IENS,3.01)=DOB ; dob
"RTN","IBCNVRD1",301,0)
 S DATA(2.312,IENS,3.05)=$TR(SSN,"-","") ; ssn
"RTN","IBCNVRD1",302,0)
 S DATA(2.312,IENS,6)=$P(GLOB(SUB,2),IBP,2) ; whose insurance
"RTN","IBCNVRD1",303,0)
 S PREL=$P(GLOB(SUB,2),IBP,1)
"RTN","IBCNVRD1",304,0)
 I PREL S DATA(2.312,IENS,4.03)=PREL
"RTN","IBCNVRD1",305,0)
 S DATA(2.312,IENS,16)=$P(GLOB(SUB,2),IBP,5)
"RTN","IBCNVRD1",306,0)
 S DATA(2.312,IENS,1.03)=TSTAMP ; date last verified
"RTN","IBCNVRD1",307,0)
 S DATA(2.312,IENS,1.04)=ADUZ ; last verified by AUTOUPDATE,IBEIV
"RTN","IBCNVRD1",308,0)
 S DATA(2.312,IENS,1.05)=TSTAMP ; date last edited
"RTN","IBCNVRD1",309,0)
 S DATA(2.312,IENS,1.06)=ADUZ ; last edited by
"RTN","IBCNVRD1",310,0)
 S DATA(2.312,IENS,1.09)=IBSOURCE ; source of info = eIV
"RTN","IBCNVRD1",311,0)
 S DATA(2.312,IENS,1.1)=TSTAMP
"RTN","IBCNVRD1",312,0)
 S DATA(2.312,IENS,7.02)=SUBSCRID
"RTN","IBCNVRD1",313,0)
 S DATA(2.312,IENS,.2)=COB
"RTN","IBCNVRD1",314,0)
 S DATA(2.312,IENS,8)=$P(GLOB(SUB,2),IBP,3) ; efective date
"RTN","IBCNVRD1",315,0)
 ;subscriber address
"RTN","IBCNVRD1",316,0)
 S DATA(2.312,IENS,3.06)=$P(GLOB(SUB,3),IBP,9) ; street line 1
"RTN","IBCNVRD1",317,0)
 S DATA(2.312,IENS,3.07)=$P(GLOB(SUB,3),IBP,10) ; street line 2
"RTN","IBCNVRD1",318,0)
 S DATA(2.312,IENS,3.08)=$P(GLOB(SUB,3),IBP,11) ; city
"RTN","IBCNVRD1",319,0)
 S STATE=$P(GLOB(SUB,3),IBP,12)
"RTN","IBCNVRD1",320,0)
 S STATE=$O(^DIC(5,"B",STATE,0))
"RTN","IBCNVRD1",321,0)
 S DATA(2.312,IENS,3.09)=STATE ; state
"RTN","IBCNVRD1",322,0)
 S DATA(2.312,IENS,3.1)=$P(GLOB(SUB,3),IBP,13) ; zip
"RTN","IBCNVRD1",323,0)
 S DATA(2.312,IENS,3.11)=$P(GLOB(SUB,3),IBP,14) ; insured's phone
"RTN","IBCNVRD1",324,0)
 S DATA(2.312,IENS,4.04)="YES"  ;EIV AUTO-UPDATE
"RTN","IBCNVRD1",325,0)
 ;
"RTN","IBCNVRD1",326,0)
 L +^DPT(DFN,.312,IEN312):15 I '$T D LCKERR("FILE") S LCKERR=1 Q
"RTN","IBCNVRD1",327,0)
 D FILE^DIE("ET","DATA","ERROR")
"RTN","IBCNVRD1",328,0)
 L -^DPT(DFN,.312,IEN312)
"RTN","IBCNVRD1",329,0)
 Q
"RTN","IBCNVRD1",330,0)
 ;
"RTN","IBCNVRD1",331,0)
LCKERR(ERR) ; send locking error message
"RTN","IBCNVRD1",332,0)
 S IEN=$O(^XMB(3.8,"B","IB SSVI",IEN))
"RTN","IBCNVRD1",333,0)
 N MSG,XMY
"RTN","IBCNVRD1",334,0)
 S MSG(1)="WARNING: Unable to Auto-file Response Message from SSVI"
"RTN","IBCNVRD1",335,0)
 S MSG(2)="---------------------------------------------------------"
"RTN","IBCNVRD1",336,0)
 S MSG(3)="Failed to lock patient insurance entry:"
"RTN","IBCNVRD1",337,0)
 S MSG(4)="  Patient name - "_$$GET1^DIQ(2,DFN_",",.01)
"RTN","IBCNVRD1",338,0)
 S MSG(5)="  Insurance - "_$$GET1^DIQ(2.312,IENS,.01)
"RTN","IBCNVRD1",339,0)
 S MSG(6)="  IENS - "_$S($G(IENS)="":"Unknown",1:IENS)
"RTN","IBCNVRD1",340,0)
 S MSG(7)=" "
"RTN","IBCNVRD1",341,0)
 S MSG(8)="The response will be filed into Insurance Buffer instead."
"RTN","IBCNVRD1",342,0)
 S MSG(9)=" "
"RTN","IBCNVRD1",343,0)
 I ERR="COULD NOT CREATE A NEW BUFFER ENTRY" D
"RTN","IBCNVRD1",344,0)
 .S MSG(1)="ERROR: Unable to File Buffer Entry"
"RTN","IBCNVRD1",345,0)
 .S MSG(3)="Failed to create a new Buffer Entry"
"RTN","IBCNVRD1",346,0)
 .S MSG(8)="The entry could not be filed in the buffer."
"RTN","IBCNVRD1",347,0)
 D MSG^IBCNEUT5(MGRP,MSG(1),"MSG(",,.XMY)
"RTN","IBCNVRD1",348,0)
 S $P(GLOB(SUB,5),"|",8)="ERROR: Unable to File Buffer Entry"
"RTN","IBCNVRD1",349,0)
 Q
"RTN","IBCNVRD1",350,0)
 ;
"RTN","IBCNVRD1",351,0)
DONE ; Create pivot entry and file data
"RTN","IBCNVRD1",352,0)
 ;S GLOB(SUB,5)=DFN_"|"_CNTHL7_"|"_INSPTR_"|"_INSPTR1_"|"_STATION_"|"_DSTATION_"|"_RIEN_"|"_ERROR
"RTN","IBCNVRD1",353,0)
 I DFN="" Q
"RTN","IBCNVRD1",354,0)
 S VARPTR=DFN_";DPT("
"RTN","IBCNVRD1",355,0)
 ;
"RTN","IBCNVRD1",356,0)
 D NOW^%DTC S NOWDATE=%
"RTN","IBCNVRD1",357,0)
 S PIVOTNUM=+$$PIVNW^IBCNVPU0(DFN,.NOWDATE,5,VARPTR)
"RTN","IBCNVRD1",358,0)
 ;DETERMINE IB SSVI PIN/HL7 FILE RECORD NUMBER
"RTN","IBCNVRD1",359,0)
 S CNTHL71=0 S CNTHL71=$O(^IBCN(366,"D",PIVOTNUM,CNTHL71))
"RTN","IBCNVRD1",360,0)
 I CNTHL71="" Q
"RTN","IBCNVRD1",361,0)
 ;
"RTN","IBCNVRD1",362,0)
 S SUB=0
"RTN","IBCNVRD1",363,0)
 F  S SUB=$O(GLOB(SUB)) Q:SUB=""  D PIVOT(SUB)
"RTN","IBCNVRD1",364,0)
 ;
"RTN","IBCNVRD1",365,0)
 ;SET COMPLETED/RECEIVED FLAG FOR PIVOT TABLE ENTRY. TO BE USED FOR REPORTING PURPOSES
"RTN","IBCNVRD1",366,0)
 ;
"RTN","IBCNVRD1",367,0)
 D FINAL^IBCNVUT0(CNTHL71)
"RTN","IBCNVRD1",368,0)
 S SSVI(0)="COMPLETED"
"RTN","IBCNVRD1",369,0)
 Q
"RTN","IBCNVRD1",370,0)
 ;
"RTN","IBCNVRD1",371,0)
PIVOT(SUB) ; Setup pivot file
"RTN","IBCNVRD1",372,0)
 ;S GLOB(SUB,5)=DFN_"|"_CNTHL7_"|"_INSPTR_"|"_INSPTR1_"|"_STATION_"|"_DSTATION_"|"_RIEN_"|"_ERROR
"RTN","IBCNVRD1",373,0)
 S INSPTR=$P(GLOB(SUB,5),"|",3)
"RTN","IBCNVRD1",374,0)
 S INSPTR1=$P(GLOB(SUB,5),"|",4)   ;INSURANCE CO PTR TO FILE 36
"RTN","IBCNVRD1",375,0)
 S STATION=$P(GLOB(SUB,5),"|",5)   ;THIS RECEIVING STATION
"RTN","IBCNVRD1",376,0)
 S DSTATION=$P(GLOB(SUB,5),"|",6)  ;SENDING STATION
"RTN","IBCNVRD1",377,0)
 S BUFF=$P(GLOB(SUB,5),"|",7)      ;BUFFER ENTRY
"RTN","IBCNVRD1",378,0)
 S ERROR=$P(GLOB(SUB,5),"|",8)     ;ERROR
"RTN","IBCNVRD1",379,0)
 ;
"RTN","IBCNVRD1",380,0)
 ;STORE RECEIVE FLAG/DATE IN IBCN PIN/HL7 PIVOT TABLE ENTRY
"RTN","IBCNVRD1",381,0)
 ;
"RTN","IBCNVRD1",382,0)
 ;CREATE ONE FIRST ( DO NOT SET REQUIRE TRANSMISSION BITS)
"RTN","IBCNVRD1",383,0)
 ;
"RTN","IBCNVRD1",384,0)
 ;NEXT MAKE INSURANCE MULTIPLE
"RTN","IBCNVRD1",385,0)
 ;FIND INSPTR2 RECORD # PTR TO FILE 36
"RTN","IBCNVRD1",386,0)
 S INSPTR2=SUB ;INSURANCE .312 PTR
"RTN","IBCNVRD1",387,0)
 ;
"RTN","IBCNVRD1",388,0)
 D INSMUL^IBCNVUT0(CNTHL71,INSPTR2)
"RTN","IBCNVRD1",389,0)
 ;
"RTN","IBCNVRD1",390,0)
 ;NEXT WRITE INSURANCE/SENDING STATION MULTIPLE ENTRY
"RTN","IBCNVRD1",391,0)
 D TREATSIT^IBCNVUT0(CNTHL71,INSPTR2,DSTATION)
"RTN","IBCNVRD1",392,0)
 ;
"RTN","IBCNVRD1",393,0)
 ;NEXT SET RECEIVED FLAG AND "RECEIVE DATE" INTO EXISTING STATION 
"RTN","IBCNVRD1",394,0)
 D NOW^%DTC S RECDDAT=%
"RTN","IBCNVRD1",395,0)
 D TREATRED^IBCNVUT0(CNTHL71,INSPTR2,DSTATION,RECDDAT,BUFF,ERROR)  ;SET RECEIVED DATE
"RTN","IBCNVRD1",396,0)
 Q
"RTN","IBCNVRD1",397,0)
 ;
"RTN","IBCNVRD1",398,0)
STUB ; CREATE STUB FOR AUTO UPDATED ENTRIES.
"RTN","IBCNVRD1",399,0)
 S IBP="|"
"RTN","IBCNVRD1",400,0)
 S AUDUZ=$$FIND1^DIC(200,"","X","AUTOUPDATE,IBEIV")
"RTN","IBCNVRD1",401,0)
 ;S IDUZ=$$FIND1^DIC(200,"","X","POSTMASTER")
"RTN","IBCNVRD1",402,0)
 ; BE SURE DEFINED RIEN (INSURANCE BUFFER ENTRY)
"RTN","IBCNVRD1",403,0)
 ;
"RTN","IBCNVRD1",404,0)
 S RIEN=""
"RTN","IBCNVRD1",405,0)
 S RIEN=+$$ADD^IBCNBEE(IBSOURCE)
"RTN","IBCNVRD1",406,0)
 I 'RIEN D  Q
"RTN","IBCNVRD1",407,0)
 .S IBERROR="COULD NOT CREATE A NEW BUFFER ENTRY"
"RTN","IBCNVRD1",408,0)
 .S $P(GLOB(SUB,5),"|",8)=IBERROR
"RTN","IBCNVRD1",409,0)
 D NOW^%DTC S TSTAMP=%
"RTN","IBCNVRD1",410,0)
 ;
"RTN","IBCNVRD1",411,0)
 S RSUPDT(355.33,RIEN_",",.01)=TSTAMP  ; DATE ENTERED
"RTN","IBCNVRD1",412,0)
 S RSUPDT(355.33,RIEN_",",.02)=IDUZ  ; ENTERED BY
"RTN","IBCNVRD1",413,0)
 S RSUPDT(355.33,RIEN_",",.03)=IBSOURCE  ; SOURCE OF INFORMATION
"RTN","IBCNVRD1",414,0)
 S RSUPDT(355.33,RIEN_",",.04)="A"  ; STATUS
"RTN","IBCNVRD1",415,0)
 S RSUPDT(355.33,RIEN_",",.05)=TSTAMP  ; DATE PROCESSED
"RTN","IBCNVRD1",416,0)
 S RSUPDT(355.33,RIEN_",",.06)=AUDUZ  ; PROCESSED BY
"RTN","IBCNVRD1",417,0)
 S RSUPDT(355.33,RIEN_",",.1)=TSTAMP  ; DATE VERIFIED
"RTN","IBCNVRD1",418,0)
 S RSUPDT(355.33,RIEN_",",.11)=AUDUZ  ; VERIFIED BY
"RTN","IBCNVRD1",419,0)
 S RSUPDT(355.33,RIEN_",",.12)="*"  ; eIV STATUS
"RTN","IBCNVRD1",420,0)
 S RSUPDT(355.33,RIEN_",",.14)=OSTATION  ; REMOTE LOCATION
"RTN","IBCNVRD1",421,0)
 ;
"RTN","IBCNVRD1",422,0)
 D FILE^DIE("I","RSUPDT","ERROR")
"RTN","IBCNVRD1",423,0)
 I $G(ERROR)'="" S $P(GLOB(SUB,5),"|",8)=ERROR
"RTN","IBCNVRD1",424,0)
 ;
"RTN","IBCNVRD1",425,0)
 Q 
"RTN","IBCNVRP0")
0^48^B26970383
"RTN","IBCNVRP0",1,0)
IBCNVRP0 ;ALB/BAA - Interfacility Ins Update Activity Report;25-FEB-15
"RTN","IBCNVRP0",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVRP0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVRP0",4,0)
 ;
"RTN","IBCNVRP0",5,0)
 ; Variables:
"RTN","IBCNVRP0",6,0)
 ;   IBCNERTN = "IBCNERPF" (current routine name for queueing the 
"RTN","IBCNVRP0",7,0)
 ;                          COMPILE process)
"RTN","IBCNVRP0",8,0)
 ;   INCNESPJ("BEGDT") = start date for date range
"RTN","IBCNVRP0",9,0)
 ;   INCNESPJ("ENDDT") = end date for date range
"RTN","IBCNVRP0",10,0)
 ;   INCNESPJ("SORT") = "D" - Date or "F" Facility
"RTN","IBCNVRP0",11,0)
 ;   INCNESPJ("SR") = "S" - Sending or "R" - Receiving OR "B" - Both
"RTN","IBCNVRP0",12,0)
 ;   INCNESPJ("SD") = "S" - Summary or "D" - Detail
"RTN","IBCNVRP0",13,0)
 ;   INCNESPJ("FAC",ien) = Facilities for report, if INCNESPJ("FAC")="A", then include all
"RTN","IBCNVRP0",14,0)
 ;   INCNESPJ("TYPE") = report type: "R" - Report, "E" - Excel
"RTN","IBCNVRP0",15,0)
 ;
"RTN","IBCNVRP0",16,0)
 Q
"RTN","IBCNVRP0",17,0)
 ;
"RTN","IBCNVRP0",18,0)
EN ; entry point
"RTN","IBCNVRP0",19,0)
 N STOP,IBCNERTN,INCNESPJ,I,IBRPT,IBRPT1,ZTDESC,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,POP,%ZIS
"RTN","IBCNVRP0",20,0)
 ;
"RTN","IBCNVRP0",21,0)
 S STOP=0,IBCNERTN="IBCNVRP0"
"RTN","IBCNVRP0",22,0)
 K ^TMP($J,IBCNERTN)
"RTN","IBCNVRP0",23,0)
 W @IOF
"RTN","IBCNVRP0",24,0)
 W !,"Interfacility Ins Update Activity Report",!
"RTN","IBCNVRP0",25,0)
 ; Prompts for Interfacility Ins Update Activity Report
"RTN","IBCNVRP0",26,0)
 ; Summary or Detailed
"RTN","IBCNVRP0",27,0)
P20 D DS1 I STOP G EXIT
"RTN","IBCNVRP0",28,0)
 ; Sending or Receiving
"RTN","IBCNVRP0",29,0)
P30 D DS2  I STOP G:$$STOP^IBCNERP1 EXIT G P20
"RTN","IBCNVRP0",30,0)
 ; Date Range parameters
"RTN","IBCNVRP0",31,0)
P40 D DTRANGE I STOP G:$$STOP^IBCNERP1 EXIT G P30
"RTN","IBCNVRP0",32,0)
 ; Facility Selection parameter
"RTN","IBCNVRP0",33,0)
P50 I INCNESPJ("SR")="R" D FACILITY I STOP G:$$STOP^IBCNERP1 EXIT G P40
"RTN","IBCNVRP0",34,0)
 I INCNESPJ("SR")="S" S INCNESPJ("FAC")="A"
"RTN","IBCNVRP0",35,0)
 I INCNESPJ("SR")="B" S INCNESPJ("FAC")="A"
"RTN","IBCNVRP0",36,0)
 ; Select sort by date or treating facility
"RTN","IBCNVRP0",37,0)
P60 D SORT I STOP G:$$STOP^IBCNERP1 EXIT G P50
"RTN","IBCNVRP0",38,0)
 ; Report Type - Report or Excel
"RTN","IBCNVRP0",39,0)
P10 D TYPE I STOP G:$$STOP^IBCNERP1 EXIT G P60
"RTN","IBCNVRP0",40,0)
 ; Select the output device
"RTN","IBCNVRP0",41,0)
P100 D DEVICE
"RTN","IBCNVRP0",42,0)
 ;
"RTN","IBCNVRP0",43,0)
EXIT ; exit routine
"RTN","IBCNVRP0",44,0)
 Q
"RTN","IBCNVRP0",45,0)
 ;
"RTN","IBCNVRP0",46,0)
DS1 ; Run a (S)ummary or (D)etail Report?
"RTN","IBCNVRP0",47,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNVRP0",48,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNVRP0",49,0)
 W !
"RTN","IBCNVRP0",50,0)
 S DIR(0)="SA^S:SUMMARY;D:DETAILED;"
"RTN","IBCNVRP0",51,0)
 S DIR("B")="S"
"RTN","IBCNVRP0",52,0)
 S DIR("A")="Run a (S)ummary or (D)etailed Report: Summary// "
"RTN","IBCNVRP0",53,0)
 S DIR("?")="Please enter 'S' for 'Summary' or 'D' for a Detailed Report."
"RTN","IBCNVRP0",54,0)
 D ^DIR
"RTN","IBCNVRP0",55,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=-1) S STOP=1 Q
"RTN","IBCNVRP0",56,0)
 S INCNESPJ("SD")=Y,IBRPT=Y
"RTN","IBCNVRP0",57,0)
 Q
"RTN","IBCNVRP0",58,0)
HDS ; Help for Summary/Detail prompt.
"RTN","IBCNVRP0",59,0)
 W !,"Please enter 'S' for 'Summary' or 'D' for a Detailed Report."
"RTN","IBCNVRP0",60,0)
 Q
"RTN","IBCNVRP0",61,0)
 ;
"RTN","IBCNVRP0",62,0)
DS2 ; Run a Report by (R)eceiving View or (S)ending View?
"RTN","IBCNVRP0",63,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNVRP0",64,0)
 W !
"RTN","IBCNVRP0",65,0)
 S DIR(0)="SA^R:RECEIVING VIEW;S:SENDING VIEW"
"RTN","IBCNVRP0",66,0)
 S DIR("B")="R"
"RTN","IBCNVRP0",67,0)
 S DIR("A")="Report by (R)eceiving View or (S)ending View// "
"RTN","IBCNVRP0",68,0)
 S DIR("?")="^D HDS2^IBCNVRP0"
"RTN","IBCNVRP0",69,0)
 D ^DIR
"RTN","IBCNVRP0",70,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=-1) S STOP=1 Q
"RTN","IBCNVRP0",71,0)
 S INCNESPJ("SR")=Y,IBRPT1=Y
"RTN","IBCNVRP0",72,0)
 Q
"RTN","IBCNVRP0",73,0)
HDS2 ; Help for Report by (R)eceiving View or (S)ending View prompt.
"RTN","IBCNVRP0",74,0)
 W !,"Please enter 'R' for 'Receiving View' or 'S' for 'Sending View'."
"RTN","IBCNVRP0",75,0)
 Q
"RTN","IBCNVRP0",76,0)
 ;
"RTN","IBCNVRP0",77,0)
FACILITY ;
"RTN","IBCNVRP0",78,0)
 N DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNVRP0",79,0)
 ; summary report is always run for all patients
"RTN","IBCNVRP0",80,0)
 W !
"RTN","IBCNVRP0",81,0)
 S DIR("A")="Run for (A)ll Treating Facilities or (S)elected Facilities: "
"RTN","IBCNVRP0",82,0)
 S DIR("A",1)="FACILITY SELECTION:"
"RTN","IBCNVRP0",83,0)
 S DIR(0)="SA^A:All;S:Selected",DIR("B")="A"
"RTN","IBCNVRP0",84,0)
 D ^DIR
"RTN","IBCNVRP0",85,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","IBCNVRP0",86,0)
 I Y="A" S INCNESPJ("FAC")="A" Q  ; "All Patients" selected
"RTN","IBCNVRP0",87,0)
 S DIC(0)="ABEQ"
"RTN","IBCNVRP0",88,0)
 S DIC("A")="Select Treating Facility: "
"RTN","IBCNVRP0",89,0)
 S DIC="^DIC(4,"
"RTN","IBCNVRP0",90,0)
FAC1 ;
"RTN","IBCNVRP0",91,0)
 D ^DIC
"RTN","IBCNVRP0",92,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=-1) S STOP=1 Q
"RTN","IBCNVRP0",93,0)
 S INCNESPJ("FAC",$P(Y,U,1))=""
"RTN","IBCNVRP0",94,0)
 I $$ANOTHER G FAC1
"RTN","IBCNVRP0",95,0)
 Q
"RTN","IBCNVRP0",96,0)
 ;
"RTN","IBCNVRP0",97,0)
DTRANGE ;
"RTN","IBCNVRP0",98,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNVRP0",99,0)
 W !
"RTN","IBCNVRP0",100,0)
 S DIR(0)="D^::EX",DIR("B")="Today"
"RTN","IBCNVRP0",101,0)
 S DIR("A",1)="Earliest Date "_$S(IBRPT1="S":"Sent",1:"Received")
"RTN","IBCNVRP0",102,0)
 S DIR("A")=$S(IBRPT1="R":"RECEIVING ",1:"SENDING ")_"DATE RANGE SELECTION:"
"RTN","IBCNVRP0",103,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNVRP0",104,0)
 S INCNESPJ("BEGDT")=Y
"RTN","IBCNVRP0",105,0)
 ; End date
"RTN","IBCNVRP0",106,0)
DTRANGE1 ;
"RTN","IBCNVRP0",107,0)
 K DIR("A") S DIR("A")="  Latest Date "_$S(IBRPT1="S":"Sent",1:"Received")
"RTN","IBCNVRP0",108,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNVRP0",109,0)
 I Y<INCNESPJ("BEGDT") W !,"     Latest Date must not precede the Earliest Date." G DTRANGE1
"RTN","IBCNVRP0",110,0)
 S INCNESPJ("ENDDT")=Y
"RTN","IBCNVRP0",111,0)
 Q
"RTN","IBCNVRP0",112,0)
 ;
"RTN","IBCNVRP0",113,0)
ANOTHER() ; "Select Another" prompt
"RTN","IBCNVRP0",114,0)
 ; returns 1, if response was "YES", returns 0 otherwise
"RTN","IBCNVRP0",115,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNVRP0",116,0)
 S DIR("A")="Select Another?" S DIR(0)="Y",DIR("B")="NO"
"RTN","IBCNVRP0",117,0)
 D ^DIR I $D(DIRUT) S STOP=1
"RTN","IBCNVRP0",118,0)
 Q Y
"RTN","IBCNVRP0",119,0)
 ;
"RTN","IBCNVRP0",120,0)
TYPE ;
"RTN","IBCNVRP0",121,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNVRP0",122,0)
 W !
"RTN","IBCNVRP0",123,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNVRP0",124,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNVRP0",125,0)
 S DIR("B")="Excel"
"RTN","IBCNVRP0",126,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNVRP0",127,0)
 S INCNESPJ("TYPE")=Y
"RTN","IBCNVRP0",128,0)
 Q
"RTN","IBCNVRP0",129,0)
 ;
"RTN","IBCNVRP0",130,0)
SORT ;
"RTN","IBCNVRP0",131,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNVRP0",132,0)
 W !
"RTN","IBCNVRP0",133,0)
 S DIR(0)="SA^D:Date;F:Facility"
"RTN","IBCNVRP0",134,0)
 S DIR("A")="Sort by (D)ate or (F)acility: "
"RTN","IBCNVRP0",135,0)
 S DIR("B")="Date"
"RTN","IBCNVRP0",136,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","IBCNVRP0",137,0)
 S INCNESPJ("SORT")=Y
"RTN","IBCNVRP0",138,0)
 Q
"RTN","IBCNVRP0",139,0)
 ;
"RTN","IBCNVRP0",140,0)
DEVICE ; Ask user to select device
"RTN","IBCNVRP0",141,0)
 ;
"RTN","IBCNVRP0",142,0)
 I INCNESPJ("SD")="D" W !!,"*** You will need a 132 column printer for this report. ***",!
"RTN","IBCNVRP0",143,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBCNVRP0",144,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBCNVRP0",145,0)
 .S ZTRTN="EN^IBCNGPF3",ZTDESC="IB - Interfacility Ins Update Activity Report"
"RTN","IBCNVRP0",146,0)
 .F I="^TMP($J,""PR"",","IBABY","IBOUT" S ZTSAVE(I)=""
"RTN","IBCNVRP0",147,0)
 .D ^%ZTLOAD K IO("Q") D HOME^%ZIS
"RTN","IBCNVRP0",148,0)
 .W !!,$S($D(ZTSK):"This job has been queued as task #"_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBCNVRP0",149,0)
 .K ZTSK,IO("Q")
"RTN","IBCNVRP0",150,0)
 ;
"RTN","IBCNVRP0",151,0)
 ; Compile and print report
"RTN","IBCNVRP0",152,0)
 ;
"RTN","IBCNVRP0",153,0)
 U IO D EN^IBCNVRP1(IBCNERTN,.INCNESPJ)
"RTN","IBCNVRP0",154,0)
 ;
"RTN","IBCNVRP0",155,0)
 D ^%ZISC
"RTN","IBCNVRP0",156,0)
 ; 
"RTN","IBCNVRP0",157,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCNVRP0",158,0)
 ;
"RTN","IBCNVRP0",159,0)
ENQ K STOP,INCNESPJ,^TMP($J,IBCNERTN),IBCNERTN
"RTN","IBCNVRP0",160,0)
 Q
"RTN","IBCNVRP1")
0^60^B26005231
"RTN","IBCNVRP1",1,0)
IBCNVRP1 ;ALB/BAA - Interfacility Ins Update Activity Report COMPILE;25-FEB-15
"RTN","IBCNVRP1",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVRP1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVRP1",4,0)
 ;
"RTN","IBCNVRP1",5,0)
 ; Variables:
"RTN","IBCNVRP1",6,0)
 ;   IBCNERTN = "IBCNERPF" (current routine name for queueing the 
"RTN","IBCNVRP1",7,0)
 ;                          COMPILE process)
"RTN","IBCNVRP1",8,0)
 ;   INCNESPJ("BEGDT") = start date for date range
"RTN","IBCNVRP1",9,0)
 ;   INCNESPJ("ENDDT") = end date for date range
"RTN","IBCNVRP1",10,0)
 ;   INCNESPJ("SORT") = "D" - Date or "F" Facility
"RTN","IBCNVRP1",11,0)
 ;   INCNESPJ("SR") = "S" - Sending or "R" - Receiving
"RTN","IBCNVRP1",12,0)
 ;   INCNESPJ("SD") = "S" - Summary or "D" - Detail
"RTN","IBCNVRP1",13,0)
 ;   INCNESPJ("FAC",ien) = Facilities for report, if INCNESPJ("FAC")="A", then include all
"RTN","IBCNVRP1",14,0)
 ;   INCNESPJ("TYPE") = report type: "R" - Report, "E" - Excel
"RTN","IBCNVRP1",15,0)
 ;
"RTN","IBCNVRP1",16,0)
 Q
"RTN","IBCNVRP1",17,0)
 ;
"RTN","IBCNVRP1",18,0)
EN(IBCNERTN,INCNESPJ) ; Entry point
"RTN","IBCNVRP1",19,0)
 N ALLFAC,ALLPYR,ALLPAT,COB,COMPLTE,BDATE,BUSER,DATE,DELETE,EDATE,FACILNAM,GETVDAT
"RTN","IBCNVRP1",20,0)
 N IBBDT,IBEDT,IBIEN,IBRPT,IBRPT1,IEN,INSNAME,INSNAMER,INSPTR,INSTIEN,NODE0,OUTDT
"RTN","IBCNVRP1",21,0)
 N PAT,PNAM,RECEVDAT,REQTRANS,RPDATA,RTYPE,SORT,SITE,SSN,STATION,SUBSCRB,TREAT,TREATPTR
"RTN","IBCNVRP1",22,0)
 N TREATR,TYPE,Z,ZTQUEUED,INAME
"RTN","IBCNVRP1",23,0)
 ;
"RTN","IBCNVRP1",24,0)
 S ALLFAC=$S($G(INCNESPJ("FAC"))="A":1,1:0)
"RTN","IBCNVRP1",25,0)
 S IBBDT=$G(INCNESPJ("BEGDT"))
"RTN","IBCNVRP1",26,0)
 S IBEDT=$G(INCNESPJ("ENDDT"))
"RTN","IBCNVRP1",27,0)
 I IBEDT'="",$P(IBEDT,".",2)="" S IBEDT=$$FMADD^XLFDT(IBEDT,0,23,59,59)
"RTN","IBCNVRP1",28,0)
 S TYPE=$G(INCNESPJ("TYPE"))
"RTN","IBCNVRP1",29,0)
 S IBRPT1=$G(INCNESPJ("SR"))
"RTN","IBCNVRP1",30,0)
 S IBRPT=$G(INCNESPJ("SD"))
"RTN","IBCNVRP1",31,0)
 ;
"RTN","IBCNVRP1",32,0)
 S SITE=$$SITE^VASITE
"RTN","IBCNVRP1",33,0)
 S STATION=$P(SITE,U,3)
"RTN","IBCNVRP1",34,0)
 ;
"RTN","IBCNVRP1",35,0)
 ; COMPILE
"RTN","IBCNVRP1",36,0)
 I '$D(ZTQUEUED),$G(IOST)["C-" W !!,"Compiling report data ..."
"RTN","IBCNVRP1",37,0)
 S DATE=IBBDT-.001
"RTN","IBCNVRP1",38,0)
 F  S DATE=$O(^IBCN(366,"B",DATE)) Q:(DATE>IBEDT)!('DATE)  D NEXT
"RTN","IBCNVRP1",39,0)
 D EN^IBCNVRP2(IBCNERTN,.INCNESPJ)
"RTN","IBCNVRP1",40,0)
 Q
"RTN","IBCNVRP1",41,0)
 ;
"RTN","IBCNVRP1",42,0)
NEXT ;get record
"RTN","IBCNVRP1",43,0)
 S IEN=0
"RTN","IBCNVRP1",44,0)
 F  S IEN=$O(^IBCN(366,"B",DATE,IEN)) Q:IEN=""  D GETDATA
"RTN","IBCNVRP1",45,0)
 Q
"RTN","IBCNVRP1",46,0)
 ;
"RTN","IBCNVRP1",47,0)
GETDATA ; Gather data
"RTN","IBCNVRP1",48,0)
 S NODE0=$G(^IBCN(366,IEN,0))
"RTN","IBCNVRP1",49,0)
 ; CHECK COMPLETED STATUS AND NO DELETE
"RTN","IBCNVRP1",50,0)
 S COMPLTE=$P(NODE0,U,6) ; COMPLETED FLAG
"RTN","IBCNVRP1",51,0)
 S DELETE=$P(NODE0,U,7)  ; DELETE FLAG
"RTN","IBCNVRP1",52,0)
 S REQTRANS=$P(NODE0,U,8) ;REQUEST TRANSMIT FLAG(ONLY GOOD FOR BY RECEIVING FACILITY, OTHER WISE ASSUMED NOT SET FOR USE IN REPORT)
"RTN","IBCNVRP1",53,0)
 I ('COMPLTE)!(DELETE)!(REQTRANS) Q
"RTN","IBCNVRP1",54,0)
 S PAT=$P(NODE0,U,3)
"RTN","IBCNVRP1",55,0)
 S SSN=$P(^DPT(PAT,0),U,9),SSN=$S($E(SSN)="P":"P"_$E(SSN,7,10),1:$E(SSN,6,9))
"RTN","IBCNVRP1",56,0)
 S PNAM=$P(^DPT(PAT,0),U,1)
"RTN","IBCNVRP1",57,0)
 S INSNAME=0
"RTN","IBCNVRP1",58,0)
 F  S INSNAME=$O(^IBCN(366,IEN,3,"B",INSNAME)) Q:INSNAME=""  D INSDATA
"RTN","IBCNVRP1",59,0)
 Q
"RTN","IBCNVRP1",60,0)
 ;
"RTN","IBCNVRP1",61,0)
INSDATA ; GET INSURANCE DATA
"RTN","IBCNVRP1",62,0)
 S INSPTR=0 S INSPTR=$O(^IBCN(366,IEN,3,"B",INSNAME,INSPTR))
"RTN","IBCNVRP1",63,0)
 I INSPTR'="" D
"RTN","IBCNVRP1",64,0)
 .;INSURANCE NAME ALREADY, BUT GET AGAIN
"RTN","IBCNVRP1",65,0)
 .S INSNAMER=$P($G(^IBCN(366,IEN,3,INSPTR,0)),U)
"RTN","IBCNVRP1",66,0)
 .;W !,"HERE"
"RTN","IBCNVRP1",67,0)
 .;AFTER GETTING TEATING SITE MULTIPLE, FIRST CHECK IF WE WANT IT BY LOOKING AT RECEIVING DATE OR TRANSMISSION DATE
"RTN","IBCNVRP1",68,0)
 .;FIRST GET TREATING SITE SUB MULTIPLE
"RTN","IBCNVRP1",69,0)
 .S TREAT=0
"RTN","IBCNVRP1",70,0)
 .F  S TREAT=$O(^IBCN(366,IEN,3,INSPTR,3,"B",TREAT)) Q:TREAT=""  D
"RTN","IBCNVRP1",71,0)
 ..S TREATPTR=0 S TREATPTR=$O(^IBCN(366,IEN,3,INSPTR,3,"B",TREAT,TREATPTR))
"RTN","IBCNVRP1",72,0)
 ..I TREATPTR'="" D DETAIL
"RTN","IBCNVRP1",73,0)
 Q
"RTN","IBCNVRP1",74,0)
 ;
"RTN","IBCNVRP1",75,0)
DETAIL ;
"RTN","IBCNVRP1",76,0)
 N TNODE,INODE
"RTN","IBCNVRP1",77,0)
 S TNODE=$G(^IBCN(366,IEN,3,INSPTR,3,TREATPTR,0))
"RTN","IBCNVRP1",78,0)
 S TREATR=$P(TNODE,U)
"RTN","IBCNVRP1",79,0)
 S GETVDAT=$P(TNODE,U,2)
"RTN","IBCNVRP1",80,0)
 S RECEVDAT=$P(TNODE,U,3)
"RTN","IBCNVRP1",81,0)
 S IBIEN=INSNAME_","_PAT
"RTN","IBCNVRP1",82,0)
 S INAME=$$GET1^DIQ(2.312,IBIEN,.01)
"RTN","IBCNVRP1",83,0)
 S SUBSCRB=$$GET1^DIQ(2.312,IBIEN,7.02) ; SUBSCRIBER ID
"RTN","IBCNVRP1",84,0)
 S COB=$$GET1^DIQ(2.312,IBIEN,.2)  ;COORDINATION OF BENEFITS ; P, S, OR T
"RTN","IBCNVRP1",85,0)
 I (COB=1)!($E(COB,1)="P") S COB="P"
"RTN","IBCNVRP1",86,0)
 I (COB=2)!($E(COB,1)="S") S COB="S"
"RTN","IBCNVRP1",87,0)
 I (COB=3)!($E(COB,1)="T") S COB="T"
"RTN","IBCNVRP1",88,0)
 ; NOW GET FACILITY STATION NAME. USE D CROSS-REF IN FILE 4
"RTN","IBCNVRP1",89,0)
 S INSTIEN=0
"RTN","IBCNVRP1",90,0)
 S INSTIEN=$O(^DIC(4,"D",TREATR,INSTIEN))
"RTN","IBCNVRP1",91,0)
 I INSTIEN'="" D
"RTN","IBCNVRP1",92,0)
 .S FACILNAM=$P($G(^DIC(4,INSTIEN,0)),U)
"RTN","IBCNVRP1",93,0)
 .I GETVDAT'="" D
"RTN","IBCNVRP1",94,0)
 ..S Z=GETVDAT\1
"RTN","IBCNVRP1",95,0)
 ..S OUTDT=$E(Z,4,5)_"/"_$E(Z,6,7)_"/"_$E(Z,2,3)
"RTN","IBCNVRP1",96,0)
 ..D SAVE("S",OUTDT,GETVDAT)
"RTN","IBCNVRP1",97,0)
 .I RECEVDAT'="" D
"RTN","IBCNVRP1",98,0)
 ..S Z=RECEVDAT\1
"RTN","IBCNVRP1",99,0)
 ..S OUTDT=$E(Z,4,5)_"/"_$E(Z,6,7)_"/"_$E(Z,2,3)
"RTN","IBCNVRP1",100,0)
 ..D SAVE("R",OUTDT,RECEVDAT)
"RTN","IBCNVRP1",101,0)
 Q
"RTN","IBCNVRP1",102,0)
 ;
"RTN","IBCNVRP1",103,0)
SAVE(SR,ODAT,SDAT) ; Save data
"RTN","IBCNVRP1",104,0)
 I ALLFAC D SET(SR) Q
"RTN","IBCNVRP1",105,0)
 I 'ALLFAC,$D(INCNESPJ("FAC",TREATR)) D SET(SR)
"RTN","IBCNVRP1",106,0)
 Q
"RTN","IBCNVRP1",107,0)
 ;
"RTN","IBCNVRP1",108,0)
SET(SR) ; set ^TMP file with saved data
"RTN","IBCNVRP1",109,0)
 S ^TMP($J,IBCNERTN,"IBCN_SUM","D",SR,SDAT,FACILNAM_"^"_TREATR)=$G(^TMP($J,IBCNERTN,"IBCN_SUM","D",SR,SDAT,FACILNAM_"^"_TREATR))+1
"RTN","IBCNVRP1",110,0)
 S ^TMP($J,IBCNERTN,"IBCN_SUM","F",SR,FACILNAM_"^"_TREATR,SDAT)=$G(^TMP($J,IBCNERTN,"IBCN_SUM","F",SR,FACILNAM_"^"_TREATR,SDAT))+1
"RTN","IBCNVRP1",111,0)
 S ^TMP($J,IBCNERTN,"IBCN_SUM_SUBTOT","D",SR,SDAT)=$G(^TMP($J,IBCNERTN,"IBCN_SUM_SUBTOT","D",SR,SDAT))+1
"RTN","IBCNVRP1",112,0)
 S ^TMP($J,IBCNERTN,"IBCN_SUM_SUBTOT","F",SR,FACILNAM_"^"_TREATR)=$G(^TMP($J,IBCNERTN,"IBCN_SUM_SUBTOT","F",SR,FACILNAM_"^"_TREATR))+1
"RTN","IBCNVRP1",113,0)
 S ^TMP($J,IBCNERTN,"IBCN_SUM_TOTAL","D",SR)=$G(^TMP($J,IBCNERTN,"IBCN_SUM_TOTAL","D",SR))+1
"RTN","IBCNVRP1",114,0)
 S ^TMP($J,IBCNERTN,"IBCN_SUM_TOTAL","F",SR)=$G(^TMP($J,IBCNERTN,"IBCN_SUM_TOTAL","F",SR))+1
"RTN","IBCNVRP1",115,0)
 S ^TMP($J,IBCNERTN,"D",SR,SDAT,FACILNAM_"^"_TREATR,PNAM,INSPTR)=PNAM_U_SSN_U_INAME_U_SUBSCRB_U_COB_U_FACILNAM_U_OUTDT
"RTN","IBCNVRP1",116,0)
 S ^TMP($J,IBCNERTN,"F",SR,FACILNAM_"^"_TREATR,SDAT,PNAM,INSPTR)=PNAM_U_SSN_U_INAME_U_SUBSCRB_U_COB_U_FACILNAM_U_OUTDT
"RTN","IBCNVRP1",117,0)
 Q
"RTN","IBCNVRP2")
0^61^B107004778
"RTN","IBCNVRP2",1,0)
IBCNVRP2 ;ALB/BAA - Interfacility Ins Update Activity Report PRINT;25-FEB-15
"RTN","IBCNVRP2",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVRP2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVRP2",4,0)
 ;
"RTN","IBCNVRP2",5,0)
 ; Variables:
"RTN","IBCNVRP2",6,0)
 ;   IBCNERTN = "IBCNERPF" (current routine name for queueing the 
"RTN","IBCNVRP2",7,0)
 ;                          COMPILE process)
"RTN","IBCNVRP2",8,0)
 ;   INCNESPJ("BEGDT") = start date for date range
"RTN","IBCNVRP2",9,0)
 ;   INCNESPJ("ENDDT") = end date for date range
"RTN","IBCNVRP2",10,0)
 ;   INCNESPJ("SORT") = "D" - Date or "F" Facility
"RTN","IBCNVRP2",11,0)
 ;   INCNESPJ("SR") = "S" - Sending or "R" - Receiving
"RTN","IBCNVRP2",12,0)
 ;   INCNESPJ("SD") = "S" - Summary or "D" - Detail
"RTN","IBCNVRP2",13,0)
 ;   INCNESPJ("FAC",ien) = Facilities for report, if INCNESPJ("FAC")="A", then include all
"RTN","IBCNVRP2",14,0)
 ;   INCNESPJ("TYPE") = report type: "R" - Report, "E" - Excel
"RTN","IBCNVRP2",15,0)
 ;
"RTN","IBCNVRP2",16,0)
 Q
"RTN","IBCNVRP2",17,0)
 ;
"RTN","IBCNVRP2",18,0)
EN(IBCNERTN,INCNESPJ) ; Entry point
"RTN","IBCNVRP2",19,0)
 N CRT,DDATA,DLINE,EORMSG,IBPGC,IBPXT,MAXCNT,NONEMSG,SSN,SSNLEN,TSTAMP,FAC,HDR1,HDR2
"RTN","IBCNVRP2",20,0)
 N TYPE,VDATE,WIDTH,X,Y,SENT,RECVD,STATION,DEFSTAT,DASHES,HD1,HD2,HD3,IBSR,IBSD,IBSRT
"RTN","IBCNVRP2",21,0)
 N SDAT,SITE,VISN,ZTQUEUED,ZTSTOP,IBLEN
"RTN","IBCNVRP2",22,0)
 S SITE=$$SITE^VASITE
"RTN","IBCNVRP2",23,0)
 S STATION=$P(SITE,U,3)
"RTN","IBCNVRP2",24,0)
 S SITE=$P(SITE,U,2)_" : "_$P(SITE,U,3)
"RTN","IBCNVRP2",25,0)
 S VISN=$$VISN^IBATUTL(STATION)
"RTN","IBCNVRP2",26,0)
 S IBSR=INCNESPJ("SR")
"RTN","IBCNVRP2",27,0)
 S IBSD=INCNESPJ("SD")
"RTN","IBCNVRP2",28,0)
 S IBSRT=INCNESPJ("SORT")
"RTN","IBCNVRP2",29,0)
 S TYPE=$G(INCNESPJ("TYPE")) ; report type
"RTN","IBCNVRP2",30,0)
 S (IBPGC,IBPXT)=0
"RTN","IBCNVRP2",31,0)
 S NONEMSG="* * * N O  D A T A  F O U N D * * *"
"RTN","IBCNVRP2",32,0)
 S EORMSG="*** END OF REPORT ***"
"RTN","IBCNVRP2",33,0)
 S TSTAMP=$$FMTE^XLFDT($$NOW^XLFDT,1) ; time of report
"RTN","IBCNVRP2",34,0)
 S WIDTH=IOM
"RTN","IBCNVRP2",35,0)
 S $P(DASHES,"-",WIDTH)=""
"RTN","IBCNVRP2",36,0)
 S HDR1=$$FMTE^XLFDT($G(INCNESPJ("BEGDT")),"5Z")_" - "_$$FMTE^XLFDT($G(INCNESPJ("ENDDT")),"5Z")
"RTN","IBCNVRP2",37,0)
 S HDR2=$S(IBSR="S":"Sending Site",IBSR="R":"Receiving Sites",1:"")
"RTN","IBCNVRP2",38,0)
 ; Determine IO parameters
"RTN","IBCNVRP2",39,0)
 S MAXCNT=IOSL-6,CRT=0
"RTN","IBCNVRP2",40,0)
 S:IOST["C-" MAXCNT=IOSL-3,CRT=1
"RTN","IBCNVRP2",41,0)
 ; print data
"RTN","IBCNVRP2",42,0)
 S SDAT=""
"RTN","IBCNVRP2",43,0)
 I IBSR'="B",TYPE="R" D HEADER(IBSR) I $G(ZTSTOP)!IBPXT Q
"RTN","IBCNVRP2",44,0)
 I IBSR'="B",TYPE="E" D EHDR(IBSR)
"RTN","IBCNVRP2",45,0)
 ; If global does not exist - display No Data message
"RTN","IBCNVRP2",46,0)
 I '$D(^TMP($J,IBCNERTN)) S IBLEN=((WIDTH\2)+$L(NONEMSG))-($L(NONEMSG)\2) D LINE($$FO^IBCNEUT1(NONEMSG,IBLEN,"R")) G EXIT
"RTN","IBCNVRP2",47,0)
 ; Choose Type,Summary/Detail,Date/Facility
"RTN","IBCNVRP2",48,0)
 I TYPE="E" D EXCEL Q:$G(ZTSTOP)!IBPXT
"RTN","IBCNVRP2",49,0)
 ;
"RTN","IBCNVRP2",50,0)
 I TYPE="R" D REPORT Q:$G(ZTSTOP)!IBPXT
"RTN","IBCNVRP2",51,0)
 ;
"RTN","IBCNVRP2",52,0)
EXIT ;
"RTN","IBCNVRP2",53,0)
 I TYPE="R" S IBLEN=((WIDTH\2)+$L(EORMSG))-($L(EORMSG)\2) D LINE($$FO^IBCNEUT1(EORMSG,IBLEN,"R"))
"RTN","IBCNVRP2",54,0)
 I TYPE="E" W !,EORMSG S IBPGC=1
"RTN","IBCNVRP2",55,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D EOL
"RTN","IBCNVRP2",56,0)
 Q
"RTN","IBCNVRP2",57,0)
 ;
"RTN","IBCNVRP2",58,0)
EOL ; display "end of page" message and set exit flag
"RTN","IBCNVRP2",59,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,LIN
"RTN","IBCNVRP2",60,0)
 I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCNVRP2",61,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBCNVRP2",62,0)
 I $D(DTOUT)!$D(DUOUT) S IBPXT=1
"RTN","IBCNVRP2",63,0)
 Q
"RTN","IBCNVRP2",64,0)
 ;
"RTN","IBCNVRP2",65,0)
EXCEL ;
"RTN","IBCNVRP2",66,0)
 ; excel format
"RTN","IBCNVRP2",67,0)
 I IBSD="D" D
"RTN","IBCNVRP2",68,0)
 .I IBSRT="D" D
"RTN","IBCNVRP2",69,0)
 ..I IBSR="B" D EHDR("S"),EXCDD("S"),EHDR("R"),EXCDD("R") Q
"RTN","IBCNVRP2",70,0)
 ..D EXCDD(IBSR)
"RTN","IBCNVRP2",71,0)
 .I IBSRT="F" D
"RTN","IBCNVRP2",72,0)
 ..I IBSR="B" D EHDR("S"),EXCDD("S"),EHDR("R"),EXCDD("R") Q
"RTN","IBCNVRP2",73,0)
 ..D EXCDF(IBSR)
"RTN","IBCNVRP2",74,0)
 I IBSD="S" D
"RTN","IBCNVRP2",75,0)
 .I IBSRT="D" D
"RTN","IBCNVRP2",76,0)
 ..I IBSR="B" D EHDR("S"),EXCSD("S"),EHDR("R"),EXCSD("R") Q
"RTN","IBCNVRP2",77,0)
 ..D EXCSD(IBSR)
"RTN","IBCNVRP2",78,0)
 .I IBSRT="F" D
"RTN","IBCNVRP2",79,0)
 ..I IBSR="B" D EHDR("S"),EXCSF("S"),EHDR("R"),EXCSF("R") Q
"RTN","IBCNVRP2",80,0)
 ..D EXCSF(IBSR)
"RTN","IBCNVRP2",81,0)
 Q
"RTN","IBCNVRP2",82,0)
 ;
"RTN","IBCNVRP2",83,0)
REPORT ;
"RTN","IBCNVRP2",84,0)
 ; report format
"RTN","IBCNVRP2",85,0)
 I IBSD="D" D
"RTN","IBCNVRP2",86,0)
 .I IBSRT="D" D
"RTN","IBCNVRP2",87,0)
 ..I IBSR="B" D HEADER("S"),REPDD("S"),HEADER("R"),REPDD("R") Q
"RTN","IBCNVRP2",88,0)
 ..D REPDD(IBSR)
"RTN","IBCNVRP2",89,0)
 .I IBSRT="F" D
"RTN","IBCNVRP2",90,0)
 ..I IBSR="B" D HEADER("S"),REPDF("S"),HEADER("R"),REPDF("R") Q
"RTN","IBCNVRP2",91,0)
 ..D REPDF(IBSR)
"RTN","IBCNVRP2",92,0)
 I IBSD="S" D
"RTN","IBCNVRP2",93,0)
 .I IBSRT="D" D
"RTN","IBCNVRP2",94,0)
 ..I IBSR="B" D HEADER("S"),REPSD("S"),HEADER("R"),REPSD("R") Q
"RTN","IBCNVRP2",95,0)
 ..D REPSD(IBSR)
"RTN","IBCNVRP2",96,0)
 .I IBSRT="F" D
"RTN","IBCNVRP2",97,0)
 ..I IBSR="B" D HEADER("S"),REPSF("S"),HEADER("R"),REPSF("R") Q
"RTN","IBCNVRP2",98,0)
 ..D REPSF(IBSR)
"RTN","IBCNVRP2",99,0)
 Q
"RTN","IBCNVRP2",100,0)
 ;
"RTN","IBCNVRP2",101,0)
HEADER(SR) ; print header for each page
"RTN","IBCNVRP2",102,0)
 N HDR,OFFSET,SRT
"RTN","IBCNVRP2",103,0)
 I CRT,IBPGC>0,'$D(ZTQUEUED) D EOL I IBPXT Q
"RTN","IBCNVRP2",104,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() S (ZTSTOP,IBPXT)=1 Q
"RTN","IBCNVRP2",105,0)
 S IBPGC=IBPGC+1
"RTN","IBCNVRP2",106,0)
 W @IOF,!,?1,"Interfacility Ins Update Activity Report"
"RTN","IBCNVRP2",107,0)
 S HDR=TSTAMP_"  Page: "_IBPGC,OFFSET=WIDTH-$L(HDR)
"RTN","IBCNVRP2",108,0)
 W ?OFFSET,HDR
"RTN","IBCNVRP2",109,0)
 S OFFSET=$$CENTER(HDR1)
"RTN","IBCNVRP2",110,0)
 W !,?OFFSET,HDR1
"RTN","IBCNVRP2",111,0)
 S OFFSET=$$CENTER(HDR2)
"RTN","IBCNVRP2",112,0)
 W !,?OFFSET,HDR2
"RTN","IBCNVRP2",113,0)
 I IBSD="D" D
"RTN","IBCNVRP2",114,0)
 .W !!,?23,"PAT",?30,"Insurance",?57,"Subscriber",?80,"COB",?85,$S(SR="S":"Sending",1:"Receiving"),?117,"Date"
"RTN","IBCNVRP2",115,0)
 .W !,?1,"Patient",?23,"ID #",?30,"Company",?57,"ID #",?80,"COB",?85,"Facility",?117,$S(SR="S":"Sent",1:"Received")
"RTN","IBCNVRP2",116,0)
 W !,?1,DASHES
"RTN","IBCNVRP2",117,0)
 Q
"RTN","IBCNVRP2",118,0)
 ;
"RTN","IBCNVRP2",119,0)
EHDR(SR) ;HEADER FOR EXCEL
"RTN","IBCNVRP2",120,0)
 W !,"Interfacility Ins Update Activity Report"
"RTN","IBCNVRP2",121,0)
 W !,HDR1
"RTN","IBCNVRP2",122,0)
 W !,HDR2
"RTN","IBCNVRP2",123,0)
 I IBSD="D" D
"RTN","IBCNVRP2",124,0)
 .S LINE="Patient"_U_"ID #"_U_"Insurance Company"_U_"Subscriber ID #"_U_"COB"
"RTN","IBCNVRP2",125,0)
 .S LINE=LINE_U_$S(SR="S":"Sending",1:"Receiving")_" Facility"_U_"Date "_$S(SR="S":"Sent",1:"Received")
"RTN","IBCNVRP2",126,0)
 I IBSD="S",IBSRT="F" D
"RTN","IBCNVRP2",127,0)
 .S LINE="Facility"_U_"Site #"_U_"Date "_$S(SR="S":"Sent",1:"Received")_U_"Count"
"RTN","IBCNVRP2",128,0)
 I IBSD="S",IBSRT="D" D
"RTN","IBCNVRP2",129,0)
 .S LINE="Date "_$S(SR="S":"Sent",1:"Received")_U_"Facility"_U_"Site #"_U_"Count"
"RTN","IBCNVRP2",130,0)
  W !,LINE
"RTN","IBCNVRP2",131,0)
 Q
"RTN","IBCNVRP2",132,0)
 ;
"RTN","IBCNVRP2",133,0)
REPSD(SR) ;Summary report by Date
"RTN","IBCNVRP2",134,0)
 N DATE3,FACILTRT,TREATR,FACILNAM,Z,IBBDT,IBEDT
"RTN","IBCNVRP2",135,0)
 S DATE3=0
"RTN","IBCNVRP2",136,0)
 F  S DATE3=$O(^TMP($J,IBCNERTN,"IBCN_SUM","D",SR,DATE3)) Q:DATE3=""  D
"RTN","IBCNVRP2",137,0)
 .S Z=DATE3
"RTN","IBCNVRP2",138,0)
 .S OUTDT=$E(Z,4,5)_"/"_$E(Z,6,7)_"/"_$E(Z,2,3)
"RTN","IBCNVRP2",139,0)
 .I SR="R" D
"RTN","IBCNVRP2",140,0)
 ..W !!,?1,"DATE RECEIVED:  ",?21,OUTDT
"RTN","IBCNVRP2",141,0)
 .I SR="S" D
"RTN","IBCNVRP2",142,0)
 ..W !!,?1,"TRANSMITTED DATE:  ",?21,OUTDT
"RTN","IBCNVRP2",143,0)
 .S FACILTRT=0
"RTN","IBCNVRP2",144,0)
 .F  S FACILTRT=$O(^TMP($J,IBCNERTN,"IBCN_SUM","D",SR,DATE3,FACILTRT)) Q:FACILTRT=""  D
"RTN","IBCNVRP2",145,0)
 ..S FACILNAM=$P(FACILTRT,U)
"RTN","IBCNVRP2",146,0)
 ..S TREATR=$P(FACILTRT,U,2)
"RTN","IBCNVRP2",147,0)
 ..W !,?6,FACILNAM,?33,TREATR,?52,$G(^TMP($J,IBCNERTN,"IBCN_SUM","D",SR,DATE3,FACILTRT))
"RTN","IBCNVRP2",148,0)
 .W !,?50,"-----"
"RTN","IBCNVRP2",149,0)
 .W !,?52,$G(^TMP($J,IBCNERTN,"IBCN_SUM_SUBTOT","D",SR,DATE3))
"RTN","IBCNVRP2",150,0)
 S Z=INCNESPJ("BEGDT")
"RTN","IBCNVRP2",151,0)
 S IBBDT=$E(Z,4,5)_"/"_$E(Z,6,7)_"/"_$E(Z,2,3)
"RTN","IBCNVRP2",152,0)
 S Z=INCNESPJ("ENDDT")
"RTN","IBCNVRP2",153,0)
 S IBEDT=$E(Z,4,5)_"/"_$E(Z,6,7)_"/"_$E(Z,2,3)
"RTN","IBCNVRP2",154,0)
 W !!,?1,"Total for Date Range ("_IBBDT_" to "_IBEDT_"):",?52,$G(^TMP($J,IBCNERTN,"IBCN_SUM_TOTAL","D",SR))
"RTN","IBCNVRP2",155,0)
 Q
"RTN","IBCNVRP2",156,0)
 ;
"RTN","IBCNVRP2",157,0)
REPSF(SR) ;Summary report by sending facility
"RTN","IBCNVRP2",158,0)
 N FACILTRT,FIRSTFAC,LASTFAC,DATE3,FACILNAM,TREATR
"RTN","IBCNVRP2",159,0)
 S FACILTRT=0
"RTN","IBCNVRP2",160,0)
 S FIRSTFAC=0
"RTN","IBCNVRP2",161,0)
 S LASTFAC=0
"RTN","IBCNVRP2",162,0)
 F  S FACILTRT=$O(^TMP($J,IBCNERTN,"IBCN_SUM","F",SR,FACILTRT)) Q:FACILTRT=""  D
"RTN","IBCNVRP2",163,0)
 .S FACILNAM=$P(FACILTRT,U)
"RTN","IBCNVRP2",164,0)
 .I FIRSTFAC=0 S FIRSTFAC=FACILNAM
"RTN","IBCNVRP2",165,0)
 .S LASTFAC=FACILNAM
"RTN","IBCNVRP2",166,0)
 .S TREATR=$P(FACILTRT,U,2)
"RTN","IBCNVRP2",167,0)
 .W !,?1,"STATION: ",FACILNAM,?33,TREATR
"RTN","IBCNVRP2",168,0)
 .S DATE3=0
"RTN","IBCNVRP2",169,0)
 .F  S DATE3=$O(^TMP($J,IBCNERTN,"IBCN_SUM","F",SR,FACILTRT,DATE3)) Q:DATE3=""  D
"RTN","IBCNVRP2",170,0)
 ..S Z=DATE3
"RTN","IBCNVRP2",171,0)
 ..S OUTDT=$E(Z,4,5)_"/"_$E(Z,6,7)_"/"_$E(Z,2,3)
"RTN","IBCNVRP2",172,0)
 ..W !,?6,OUTDT,?52,$G(^TMP($J,IBCNERTN,"IBCN_SUM","F",SR,FACILTRT,DATE3))
"RTN","IBCNVRP2",173,0)
 .W !,?50,"-----"
"RTN","IBCNVRP2",174,0)
 .W !,?52,$G(^TMP($J,IBCNERTN,"IBCN_SUM_SUBTOT","F",SR,FACILTRT))
"RTN","IBCNVRP2",175,0)
 W !!,?1,"Total for Facility Range ("_FIRSTFAC_" to "_LASTFAC_"):",?52,$G(^TMP($J,IBCNERTN,"IBCN_SUM_TOTAL","F",SR))
"RTN","IBCNVRP2",176,0)
 Q
"RTN","IBCNVRP2",177,0)
 ;
"RTN","IBCNVRP2",178,0)
REPDD(SR) ; Detail report by Date
"RTN","IBCNVRP2",179,0)
 N DATE3,FACILTRT,PAT,DATA,INSPTR
"RTN","IBCNVRP2",180,0)
 S DATE3=0
"RTN","IBCNVRP2",181,0)
 F  S DATE3=$O(^TMP($J,IBCNERTN,"D",SR,DATE3)) Q:DATE3=""  D
"RTN","IBCNVRP2",182,0)
 .S FACILTRT=0
"RTN","IBCNVRP2",183,0)
 .F  S FACILTRT=$O(^TMP($J,IBCNERTN,"D",SR,DATE3,FACILTRT)) Q:FACILTRT=""  D
"RTN","IBCNVRP2",184,0)
 ..S PAT=0
"RTN","IBCNVRP2",185,0)
 ..F  S PAT=$O(^TMP($J,IBCNERTN,"D",SR,DATE3,FACILTRT,PAT)) Q:PAT=""  D
"RTN","IBCNVRP2",186,0)
 ...S INSPTR=0
"RTN","IBCNVRP2",187,0)
 ...F  S INSPTR=$O(^TMP($J,IBCNERTN,"D",SR,DATE3,FACILTRT,PAT,INSPTR)) Q:INSPTR=""  D
"RTN","IBCNVRP2",188,0)
 ....S DATA=$G(^TMP($J,IBCNERTN,"D",SR,DATE3,FACILTRT,PAT,INSPTR))
"RTN","IBCNVRP2",189,0)
 ....D PRINT(DATA)
"RTN","IBCNVRP2",190,0)
 Q
"RTN","IBCNVRP2",191,0)
 ;
"RTN","IBCNVRP2",192,0)
REPDF(SR) ; Detail report by receiving facility
"RTN","IBCNVRP2",193,0)
 N DATE,FACILTRT,PAT,DATA,INSPTR
"RTN","IBCNVRP2",194,0)
 S FACILTRT=0
"RTN","IBCNVRP2",195,0)
 F  S FACILTRT=$O(^TMP($J,IBCNERTN,"F",SR,FACILTRT)) Q:FACILTRT=""  D
"RTN","IBCNVRP2",196,0)
 .S DATE3=0
"RTN","IBCNVRP2",197,0)
 .S FAC=$P(FACILTRT,U)
"RTN","IBCNVRP2",198,0)
 .F  S DATE3=$O(^TMP($J,IBCNERTN,"F",SR,FACILTRT,DATE3)) Q:DATE3=""  D
"RTN","IBCNVRP2",199,0)
 ..S PAT=0
"RTN","IBCNVRP2",200,0)
 ..F  S PAT=$O(^TMP($J,IBCNERTN,"F",SR,FACILTRT,DATE3,PAT)) Q:PAT=""  D
"RTN","IBCNVRP2",201,0)
 ...S INSPTR=0
"RTN","IBCNVRP2",202,0)
 ...F  S INSPTR=$O(^TMP($J,IBCNERTN,"F",SR,FACILTRT,DATE3,PAT,INSPTR)) Q:INSPTR=""  D
"RTN","IBCNVRP2",203,0)
 ....S DATA=$G(^TMP($J,IBCNERTN,"F",SR,FACILTRT,DATE3,PAT,INSPTR))
"RTN","IBCNVRP2",204,0)
 ....D PRINT(DATA)
"RTN","IBCNVRP2",205,0)
 Q
"RTN","IBCNVRP2",206,0)
 ;
"RTN","IBCNVRP2",207,0)
EXCSF(SR) ; Excel summary report by receiving facility
"RTN","IBCNVRP2",208,0)
 N FACILTRT,DATE2,SUM,OUTDT,LINE,SUB,TOT,Z
"RTN","IBCNVRP2",209,0)
 S FACILTRT=0
"RTN","IBCNVRP2",210,0)
 F  S FACILTRT=$O(^TMP($J,IBCNERTN,"IBCN_SUM","F",SR,FACILTRT)) Q:FACILTRT=""  D
"RTN","IBCNVRP2",211,0)
 .S LINE=""
"RTN","IBCNVRP2",212,0)
 .S DATE3=0
"RTN","IBCNVRP2",213,0)
 .F  S DATE3=$O(^TMP($J,IBCNERTN,"IBCN_SUM","F",SR,FACILTRT,DATE3)) Q:DATE3=""  D
"RTN","IBCNVRP2",214,0)
 ..S SUM=$G(^TMP($J,IBCNERTN,"IBCN_SUM","F",SR,FACILTRT,DATE3))
"RTN","IBCNVRP2",215,0)
 ..S Z=DATE3
"RTN","IBCNVRP2",216,0)
 ..S OUTDT=$E(Z,4,5)_"/"_$E(Z,6,7)_"/"_$E(Z,2,3)
"RTN","IBCNVRP2",217,0)
 ..S LINE=FACILTRT_U_OUTDT_U_SUM
"RTN","IBCNVRP2",218,0)
 ..W !,LINE
"RTN","IBCNVRP2",219,0)
 .S LINE="",OUTDT="SUB TOTAL",FAC="^"
"RTN","IBCNVRP2",220,0)
 .S SUB=$G(^TMP($J,IBCNERTN,"IBCN_SUM_SUBTOT","F",SR,FACILTRT))
"RTN","IBCNVRP2",221,0)
 .S LINE=FAC_U_OUTDT_U_SUB
"RTN","IBCNVRP2",222,0)
 .W !,LINE
"RTN","IBCNVRP2",223,0)
 S TOT=$G(^TMP($J,IBCNERTN,"IBCN_SUM_TOTAL","F",SR))
"RTN","IBCNVRP2",224,0)
 S LINE="",OUTDT="TOTAL",FAC="^"
"RTN","IBCNVRP2",225,0)
 S LINE=FAC_U_OUTDT_U_TOT
"RTN","IBCNVRP2",226,0)
 W !,LINE
"RTN","IBCNVRP2",227,0)
 Q
"RTN","IBCNVRP2",228,0)
 ;
"RTN","IBCNVRP2",229,0)
EXCSD(SR) ; Excel summary report by Date
"RTN","IBCNVRP2",230,0)
 N DATE3,FACILTRT,SUM,Z,OUTDT,LINE,SUB,TOT,FACILITY,TREATR
"RTN","IBCNVRP2",231,0)
 S DATE3=0
"RTN","IBCNVRP2",232,0)
 F  S DATE3=$O(^TMP($J,IBCNERTN,"IBCN_SUM","D",SR,DATE3)) Q:DATE3=""  D
"RTN","IBCNVRP2",233,0)
 .S Z=DATE3
"RTN","IBCNVRP2",234,0)
 .S OUTDT=$E(Z,4,5)_"/"_$E(Z,6,7)_"/"_$E(Z,2,3)
"RTN","IBCNVRP2",235,0)
 .W !,"Transmission Date: ",OUTDT
"RTN","IBCNVRP2",236,0)
 .S LINE=""
"RTN","IBCNVRP2",237,0)
 .S FACILTRT=0
"RTN","IBCNVRP2",238,0)
 .F  S FACILTRT=$O(^TMP($J,IBCNERTN,"IBCN_SUM","D",SR,DATE3,FACILTRT)) Q:FACILTRT=""  D
"RTN","IBCNVRP2",239,0)
 ..S SUM=$G(^TMP($J,IBCNERTN,"IBCN_SUM","D",SR,DATE3,FACILTRT))
"RTN","IBCNVRP2",240,0)
 ..S LINE=OUTDT_U_FACILTRT_U_SUM
"RTN","IBCNVRP2",241,0)
 ..W !,LINE
"RTN","IBCNVRP2",242,0)
 .S LINE="",FAC="^SUBTOTAL",OUTDT=""
"RTN","IBCNVRP2",243,0)
 .S SUB=$G(^TMP($J,IBCNERTN,"IBCN_SUM_SUBTOT","D",SR,DATE3))
"RTN","IBCNVRP2",244,0)
 .S LINE=OUTDT_U_FAC_U_SUB
"RTN","IBCNVRP2",245,0)
 .W !,LINE
"RTN","IBCNVRP2",246,0)
 S TOT=$G(^TMP($J,IBCNERTN,"IBCN_SUM_TOTAL","D",SR))
"RTN","IBCNVRP2",247,0)
 S LINE="",OUTDT="",FAC="^TOTAL"
"RTN","IBCNVRP2",248,0)
 S LINE=FAC_U_OUTDT_U_TOT
"RTN","IBCNVRP2",249,0)
 W !,LINE
"RTN","IBCNVRP2",250,0)
 Q
"RTN","IBCNVRP2",251,0)
 ;
"RTN","IBCNVRP2",252,0)
EXCDD(SR) ;Excel detail report by Date
"RTN","IBCNVRP2",253,0)
 N DATE,FACILTRT,PAT,DATA,LINE
"RTN","IBCNVRP2",254,0)
 S DATE3=0
"RTN","IBCNVRP2",255,0)
 F  S DATE3=$O(^TMP($J,IBCNERTN,"D",SR,DATE3)) Q:DATE3=""  D
"RTN","IBCNVRP2",256,0)
 .S LINE=""
"RTN","IBCNVRP2",257,0)
 .S FACILTRT=0
"RTN","IBCNVRP2",258,0)
 .F  S FACILTRT=$O(^TMP($J,IBCNERTN,"D",SR,DATE3,FACILTRT)) Q:FACILTRT=""  D
"RTN","IBCNVRP2",259,0)
 ..S PAT=0
"RTN","IBCNVRP2",260,0)
 ..F  S PAT=$O(^TMP($J,IBCNERTN,"D",SR,DATE3,FACILTRT,PAT)) Q:PAT=""  D
"RTN","IBCNVRP2",261,0)
 ...S INSPTR=0
"RTN","IBCNVRP2",262,0)
 ...F  S INSPTR=$O(^TMP($J,IBCNERTN,"D",SR,DATE3,FACILTRT,PAT,INSPTR)) Q:INSPTR=""  D
"RTN","IBCNVRP2",263,0)
 ....S LINE=$G(^TMP($J,IBCNERTN,"D",SR,DATE3,FACILTRT,PAT,INSPTR))
"RTN","IBCNVRP2",264,0)
 ....W !,LINE
"RTN","IBCNVRP2",265,0)
 Q
"RTN","IBCNVRP2",266,0)
 ;
"RTN","IBCNVRP2",267,0)
EXCDF(SR) ;;Excel detail report by receiving facility
"RTN","IBCNVRP2",268,0)
 N DATE,FACILTRT,PAT,DATA,LINE,INSPTR
"RTN","IBCNVRP2",269,0)
 S FACILTRT=0
"RTN","IBCNVRP2",270,0)
 F  S FACILTRT=$O(^TMP($J,IBCNERTN,"F",SR,FACILTRT)) Q:FACILTRT=""  D
"RTN","IBCNVRP2",271,0)
 .S LINE=""
"RTN","IBCNVRP2",272,0)
 .S DATE3=0
"RTN","IBCNVRP2",273,0)
 .F  S DATE3=$O(^TMP($J,IBCNERTN,"F",SR,FACILTRT,DATE3)) Q:DATE3=""  D
"RTN","IBCNVRP2",274,0)
 ..S PAT=0
"RTN","IBCNVRP2",275,0)
 ..F  S PAT=$O(^TMP($J,IBCNERTN,"F",SR,FACILTRT,DATE3,PAT)) Q:PAT=""  D
"RTN","IBCNVRP2",276,0)
 ...S INSPTR=0
"RTN","IBCNVRP2",277,0)
 ...F  S INSPTR=$O(^TMP($J,IBCNERTN,"F",SR,FACILTRT,DATE3,PAT,INSPTR)) Q:INSPTR=""  D
"RTN","IBCNVRP2",278,0)
 ....S LINE=$G(^TMP($J,IBCNERTN,"F",SR,FACILTRT,DATE3,PAT,INSPTR))
"RTN","IBCNVRP2",279,0)
 ....W !,LINE
"RTN","IBCNVRP2",280,0)
 Q
"RTN","IBCNVRP2",281,0)
 ;
"RTN","IBCNVRP2",282,0)
PRINT(DATA) ; Get Print Info
"RTN","IBCNVRP2",283,0)
 ; PNAM_U_SSN_U_INSNAMER_U_SUBSCRB_U_COB_U_FACILNAM_U_OUTDT
"RTN","IBCNVRP2",284,0)
 N DLINE
"RTN","IBCNVRP2",285,0)
 S DLINE=""
"RTN","IBCNVRP2",286,0)
 S $E(DLINE,1,20)=$E($P(DATA,U),1,20)  ;PATIENT
"RTN","IBCNVRP2",287,0)
 S $E(DLINE,23,27)=$E($P(DATA,U,2),1,5)  ;SSN
"RTN","IBCNVRP2",288,0)
 S $E(DLINE,30,54)=$E($P(DATA,U,3),1,25)  ;INSURANCE
"RTN","IBCNVRP2",289,0)
 S $E(DLINE,57,76)=$E($P(DATA,U,4),1,20)  ;SUBSCRB
"RTN","IBCNVRP2",290,0)
 S $E(DLINE,80,81)=" "_$P(DATA,U,5)  ;COB
"RTN","IBCNVRP2",291,0)
 S $E(DLINE,85,114)=$E($P(DATA,U,6),1,30)  ;FACILNAM
"RTN","IBCNVRP2",292,0)
 S $E(DLINE,117,124)=$E($P(DATA,U,7),1,8)  ;DATE
"RTN","IBCNVRP2",293,0)
 D LINE(DLINE)
"RTN","IBCNVRP2",294,0)
 Q
"RTN","IBCNVRP2",295,0)
 ;
"RTN","IBCNVRP2",296,0)
LINE(LINE) ; Print line of data
"RTN","IBCNVRP2",297,0)
 I $Y+1>MAXCNT D HEADER(IBSR) I $G(ZTSTOP)!IBPXT Q
"RTN","IBCNVRP2",298,0)
 W !,?1,LINE
"RTN","IBCNVRP2",299,0)
 Q
"RTN","IBCNVRP2",300,0)
 ;
"RTN","IBCNVRP2",301,0)
CENTER(LINE) ; return length of a centered line
"RTN","IBCNVRP2",302,0)
 ; LINE - line to center
"RTN","IBCNVRP2",303,0)
 N LENGTH,OFFSET
"RTN","IBCNVRP2",304,0)
 S LENGTH=$L(LINE),OFFSET=IOM-$L(LINE)\2
"RTN","IBCNVRP2",305,0)
 Q OFFSET
"RTN","IBCNVUT0")
0^49^B99101857
"RTN","IBCNVUT0",1,0)
IBCNVUT0 ;ALB/BAA - SSVI MISC. UTILITIES ;25-FEB-15
"RTN","IBCNVUT0",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCNVUT0",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNVUT0",4,0)
 ;;
"RTN","IBCNVUT0",5,0)
 ;
"RTN","IBCNVUT0",6,0)
 ; Can't be called from the top
"RTN","IBCNVUT0",7,0)
 Q
"RTN","IBCNVUT0",8,0)
 ;
"RTN","IBCNVUT0",9,0)
SASK(I,INSPTR,DFN) ;
"RTN","IBCNVUT0",10,0)
 N J,FLAG,IENS,ARRAY,ERRORA,DR
"RTN","IBCNVUT0",11,0)
 S J=I Q:'$T(@J)  S DR=$P($T(@J),";;",2,999) S DR=$P(DR,";",1)
"RTN","IBCNVUT0",12,0)
 ;.;DO DIQ HERE (EXTERNAL VALUE)
"RTN","IBCNVUT0",13,0)
 ;.; THEN ANY REFINEMENTS BELOW AND SAVE INTO VARIABLE NAMES
"RTN","IBCNVUT0",14,0)
 I I=1 D  Q  ; PTR TO INSURANCE NAME
"RTN","IBCNVUT0",15,0)
 .; DO A DIQ WITH DR. ALREADY DEFINED AS INSNAME- PLACE INTO IN1-4
"RTN","IBCNVUT0",16,0)
 I I=2 D  Q  ;GROUP PLAN
"RTN","IBCNVUT0",17,0)
 .;; DO A DIQ WITH DR. PLACE INTO IN1-2 
"RTN","IBCNVUT0",18,0)
 .;S DA(1)=DFN  ;S DIE="^DPT("_DA(1)_",.312,",(DA,Y)=INSPTR D ^DIE:$D(DR)
"RTN","IBCNVUT0",19,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",20,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",21,0)
 .;S IENS=INSPTR_","
"RTN","IBCNVUT0",22,0)
 .K ERRARRAY
"RTN","IBCNVUT0",23,0)
 .K ARRAY
"RTN","IBCNVUT0",24,0)
 .S GROUPLAN=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,GROUPLAN ; ,  INTERNAL VALUE ,USE FOR CHECK IS GROUP POLICY. PLACE INTO IN1-8,9 GROUP NUMBER, GROUP NAME, HL7 SEG,"ARRAY","ERRORA") W !,GROUPLAN
"RTN","IBCNVUT0",25,0)
 .;S GROUPLAN=$G(ARRAY(355.3,IENS,.01))
"RTN","IBCNVUT0",26,0)
 I I=3 D  Q  ; COORDINATION OF BENEFITS
"RTN","IBCNVUT0",27,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",28,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",29,0)
 .S COORDBEN=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,COORDBEN ; PLACE INTO IN1-22 HL7 SEG ,"ARRAY","ERRORA") W !,COORDBIN
"RTN","IBCNVUT0",30,0)
 I I=4 D  Q  ; SUBSCRIBER ID
"RTN","IBCNVUT0",31,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",32,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",33,0)
 .S SUBSCRID=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SUBSCRID ;  PLACE INTO GT1-2-1 OR IN1-2-1 HL7 SEG
"RTN","IBCNVUT0",34,0)
 I I=5 D  Q  ; DATE LAST VERIFIED
"RTN","IBCNVUT0",35,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",36,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",37,0)
 .S DATELVER=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,DATELVER ; PLACE INTO IN1-29, 29-1 HL7 SEG 
"RTN","IBCNVUT0",38,0)
 I I=6 D  Q  ; GROUP NUMBER
"RTN","IBCNVUT0",39,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",40,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",41,0)
 .S GROUPNUM=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,GROUPNUM ;  PLACE INTO IN1-8 HL7 SEG
"RTN","IBCNVUT0",42,0)
 I I=7 D  ; INSURED DOB
"RTN","IBCNVUT0",43,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",44,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",45,0)
 .S INSURDOB=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,INSURDOB ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",46,0)
 I I=8 D  Q  ; INSURED SSN
"RTN","IBCNVUT0",47,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",48,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",49,0)
 .S INSURSSN=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,INSURSSN ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",50,0)
 I I=9 D  Q  ; INSURED GENDER/SEX
"RTN","IBCNVUT0",51,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",52,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",53,0)
 .S INSGENDR=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,INSGENDR ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",54,0)
 I I=10 D  Q  ; PT RELATIONSHIP-HIPAA
"RTN","IBCNVUT0",55,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",56,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",57,0)
 .S PTRELHIP=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,PTRELHIP ;  PLACE INTO IN1-17,17-1 HL7 SEG
"RTN","IBCNVUT0",58,0)
 I I=11 D  Q  ; WHOSE INSURANCE
"RTN","IBCNVUT0",59,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",60,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",61,0)
 .S WHOSEINS=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,WHOSEINS ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",62,0)
 I I=12 D  Q  ; EFFECTIVE DATE OF POLICY
"RTN","IBCNVUT0",63,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",64,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",65,0)
 .S EFFCTDPO=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,EFFCTDPO ;  PLACE INTO IN1-12 HL7 SEG  
"RTN","IBCNVUT0",66,0)
 I I=13 D  Q  ; GROUP NAME
"RTN","IBCNVUT0",67,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",68,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",69,0)
 .S GROUPNAM=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,GROUPNAM ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",70,0)
 I I=14 D  Q  ; PT RELATIONSHIP TO INSURED
"RTN","IBCNVUT0",71,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",72,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",73,0)
 .S PTRELINS=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,PTRELINS ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",74,0)
 I I=15 D  Q  ; NAME OF INSURED
"RTN","IBCNVUT0",75,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",76,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",77,0)
 .S INSNAME=$$GET1^DIQ(2.312,IENS,DR,"")  ;W !,INSNAME ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",78,0)
 I I=16 D  Q  ; COMMENT -PATIENT POLICY
"RTN","IBCNVUT0",79,0)
 .;S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",80,0)
 .;S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",81,0)
 .S COMPATPO=""  ;$$GET1^DIQ(2.312,IENS,DR,"") ;W !,COMPATPO ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",82,0)
 I I=17 D  Q  ; SEND BILL TO EMPLOYER
"RTN","IBCNVUT0",83,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",84,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",85,0)
 .S SENDBEMP=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,SENDBEMP ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",86,0)
 I I=18 D  Q  ; SUBSCRIBER EMPLOYER NAME
"RTN","IBCNVUT0",87,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",88,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",89,0)
 .S SUBEMPNM=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SUBEMPNM ;  PLACE INTO ZIN HL7 SEG 
"RTN","IBCNVUT0",90,0)
 I I=19 D  Q  ; EMPLOYER'S CLAIM ADDRESS
"RTN","IBCNVUT0",91,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",92,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",93,0)
 .S SEMPLCLA=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SEMPLCLA ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",94,0)
 I I=20 D  Q  ; EMPLOYER'S CLAIM ADDRESS 2
"RTN","IBCNVUT0",95,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",96,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",97,0)
 .S SEMPLCL2=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SEMPLCL2 ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",98,0)
 I I=21 D  Q  ; EMPLOYER'S CLAIM ADDRESS 3
"RTN","IBCNVUT0",99,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",100,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",101,0)
 .S SEMPLCL3=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SEMPLCL3 ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",102,0)
 I I=22 D  Q  ; EMPLOYER'S CLAIM CITY
"RTN","IBCNVUT0",103,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",104,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",105,0)
 .S SEMPLCLC=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SEMPLCLC ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",106,0)
 I I=23 D  Q  ; EMPLOYER'S CLAIM STATE
"RTN","IBCNVUT0",107,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",108,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",109,0)
 .S SEMPLCLS=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SEMPLCLS ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",110,0)
 I I=24 D  Q  ; EMPLOYER'S CLAIM ZIP CODE
"RTN","IBCNVUT0",111,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",112,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",113,0)
 .S SEMPLCLZ=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SEMPLCLZ ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",114,0)
 I I=25 D  Q  ; EMPLOYER'S CLAIM PHONE #
"RTN","IBCNVUT0",115,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",116,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",117,0)
 .S SEMPLCLP=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,SEMPLCLP ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",118,0)
 I I=26 D  Q  ; ESHGP
"RTN","IBCNVUT0",119,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",120,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",121,0)
 .S ESHGP=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,ESHGP ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",122,0)
 I I=27 D  Q  ; INSURANCE EXPIRATION DATE
"RTN","IBCNVUT0",123,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",124,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",125,0)
 .S INSEXPDT=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,INSEXPDT ;  PLACE INTO IN1 ? HL7 SEG SIMILARLY AS FOR INSURANCE EFFECTIVE DATE
"RTN","IBCNVUT0",126,0)
 I I=28 D  Q  ; POLICY NOT BILLABLE
"RTN","IBCNVUT0",127,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",128,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",129,0)
 .S POLNBILL=$$GET1^DIQ(2.312,IENS,DR,"I") ;W !,POLNBILL ;  PLACE INTO ZIN HL7 SEG
"RTN","IBCNVUT0",130,0)
 I I=29 D  Q  ; INSURED STREET ADDRESS
"RTN","IBCNVUT0",131,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",132,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",133,0)
 .S INSSTAD=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,INSSTAD ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",134,0)
 I I=30 D  Q  ; INSURED STREET ADDRESS 2
"RTN","IBCNVUT0",135,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",136,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",137,0)
 .S INSSTAD2=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,INSSTAD2 ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",138,0)
 I I=31 D  Q  ; INSURED CITY
"RTN","IBCNVUT0",139,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",140,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",141,0)
 .S INSCITY=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,INSCITY ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",142,0)
 I I=32 D  ; INSURED STATE
"RTN","IBCNVUT0",143,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",144,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",145,0)
 .S INSSTATE=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,INSSTATE ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",146,0)
 I I=33 D  Q  ; INSURED ZIP
"RTN","IBCNVUT0",147,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",148,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",149,0)
 .S INSZIP=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,INSZIP ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",150,0)
 I I=34 D  Q  ;INSURED PHONE
"RTN","IBCNVUT0",151,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",152,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",153,0)
 .S INSPHONE=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,INSPHONE ;  PLACE INTO GT1 HL7 SEG
"RTN","IBCNVUT0",154,0)
 I I=35 D  Q  ; PATIENT ID
"RTN","IBCNVUT0",155,0)
 .S IENS=DFN_","  ;",.312,"
"RTN","IBCNVUT0",156,0)
 .S IENS=INSPTR_","_IENS
"RTN","IBCNVUT0",157,0)
 .S PATIENTI=$$GET1^DIQ(2.312,IENS,DR,"") ;W !,PATIENTI ;  PLACE INTO IN1-2-1 HL7 SEG
"RTN","IBCNVUT0",158,0)
 Q
"RTN","IBCNVUT0",159,0)
 ;
"RTN","IBCNVUT0",160,0)
TREATSIT(PIVTPTR,INSPTR1,TREATSIT) ;
"RTN","IBCNVUT0",161,0)
 ;INPUT
"RTN","IBCNVUT0",162,0)
 ;      PIVTPTR  AS IB SSVI PIN/HL7 RECORD #
"RTN","IBCNVUT0",163,0)
 ;      INSPTR1 AS INSURANCE NAME FILE 36  
"RTN","IBCNVUT0",164,0)
 ;      TREATSIT AS TREATING SITE STATION NUMBER
"RTN","IBCNVUT0",165,0)
 ;      SAVE IN PIVOT TABLE INSURANCE MULTIPLE, TREATING SITE MULTIPLE 
"RTN","IBCNVUT0",166,0)
 N INSPTR ; PTR INSIDE THE MULTIPLE
"RTN","IBCNVUT0",167,0)
 K FDA,FDAIEN,OROUT
"RTN","IBCNVUT0",168,0)
 S FDAIEN(1)=PIVTPTR  ;$G(^TMP($J,"IBSSVI-PATIENT",DFN)) ; PIVOT TABLE INTERNAL RECORD #
"RTN","IBCNVUT0",169,0)
 S FILE=366.05
"RTN","IBCNVUT0",170,0)
 S INSPTR=0
"RTN","IBCNVUT0",171,0)
 S INSPTR=$O(^IBCN(366,PIVTPTR,3,"B",INSPTR1,INSPTR))
"RTN","IBCNVUT0",172,0)
 ;I INSPTR="" W "INSPTR=NULL" Q
"RTN","IBCNVUT0",173,0)
 S FDAIEN(2)=INSPTR
"RTN","IBCNVUT0",174,0)
 S FDA(47,FILE,"?+3,"_FDAIEN(2)_","_FDAIEN(1)_",",.01)=TREATSIT   ; TREATING FACILITY SITE
"RTN","IBCNVUT0",175,0)
 D UPDATE^DIE("","FDA(47)","FDAIEN","OROUT(47)")
"RTN","IBCNVUT0",176,0)
 ;I $D(OROUT(47,"DIERR")) W !,"INSURANCE PTR. MULT, TREATING SITE MULTIPLE ERROR= ",TREATSIT," ",OROUT(47,"DIERR",1,"TEXT",1) Q
"RTN","IBCNVUT0",177,0)
 K FDA(47),OROUT(47)
"RTN","IBCNVUT0",178,0)
 Q
"RTN","IBCNVUT0",179,0)
 ;
"RTN","IBCNVUT0",180,0)
TREATTRD(PIVTPTR,INSPTR1,TREATSIT,TRANSDAT,RIEN,ERROR) ;
"RTN","IBCNVUT0",181,0)
 ;
"RTN","IBCNVUT0",182,0)
 ;INPUT
"RTN","IBCNVUT0",183,0)
 ;      PIVTPTR  AS IB SSVI PIN/HL7 RECORD #
"RTN","IBCNVUT0",184,0)
 ;      INSPTR1 AS INSURANCE NAME FILE 36  
"RTN","IBCNVUT0",185,0)
 ;      TREATSIT AS TREATING SITE STATION NUMBER
"RTN","IBCNVUT0",186,0)
 ;      TRANSDAT AS HL7 TRANSMISSION/COMPLETION DATE UPON RECEIPT OF ACKNOWLEDGEMENT FROM THIS TREATING SITE WITH THIS INSURANCE INSPTR1
"RTN","IBCNVUT0",187,0)
 ;      SAVE IN PIVOT TABLE INSURANCE MULTIPLE, TREATING SITE MULTIPLE INTO TRANSMISSION DATE FIELD
"RTN","IBCNVUT0",188,0)
 K FDA,FDAIEN,OROUT
"RTN","IBCNVUT0",189,0)
 N INSPTR ; PTR INSIDE THE MULTIPLE
"RTN","IBCNVUT0",190,0)
 S FDAIEN(1)=PIVTPTR  ;$G(^TMP($J,"IBSSVI-PATIENT",DFN)) ; PIVOT TABLE INTERNAL RECORD #
"RTN","IBCNVUT0",191,0)
 S FILE=366.05
"RTN","IBCNVUT0",192,0)
 S INSPTR=0
"RTN","IBCNVUT0",193,0)
 S INSPTR=$O(^IBCN(366,PIVTPTR,3,"B",INSPTR1,INSPTR))
"RTN","IBCNVUT0",194,0)
 ;I INSPTR="" W !,"INSPTR=NULL" Q
"RTN","IBCNVUT0",195,0)
 S FDAIEN(2)=INSPTR
"RTN","IBCNVUT0",196,0)
 S FDA(47,FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",.01)=TREATSIT   ; TREATING FACILITY SITE
"RTN","IBCNVUT0",197,0)
 S FDA(47,FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",1)=TRANSDAT   ; TREATING FACILITY SITE DATE OF RECEIVE ACKNOWLEDGE OF "TRANSMISSION"
"RTN","IBCNVUT0",198,0)
 S FDA(47,FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",3)=RIEN   ; NEWLY CREATED INSURANCE BUFFER RECORD
"RTN","IBCNVUT0",199,0)
 S FDA(FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",4)=ERROR   ; ERROR
"RTN","IBCNVUT0",200,0)
 D UPDATE^DIE("","FDA(47)","FDAIEN","OROUT(47)")
"RTN","IBCNVUT0",201,0)
 K FDA,OROUT
"RTN","IBCNVUT0",202,0)
 Q
"RTN","IBCNVUT0",203,0)
 ;
"RTN","IBCNVUT0",204,0)
INSMUL(PIVTPTR,INSPTR1) ;
"RTN","IBCNVUT0",205,0)
 ;INPUT
"RTN","IBCNVUT0",206,0)
 ;      PIVTPTR  AS IB SSVI PIN/HL7 RECORD #
"RTN","IBCNVUT0",207,0)
 ;      INSPTR1 AS INSURANCE NAME (FILE 36)   
"RTN","IBCNVUT0",208,0)
 ;      SAVE IN PIVOT TABLE INSURANCE MULTIPLE
"RTN","IBCNVUT0",209,0)
 K FDA,FDAIEN,OROUT
"RTN","IBCNVUT0",210,0)
 S FDAIEN(1)=PIVTPTR  ;$G(^TMP($J,"IBSSVI-PATIENT",DFN)) ; PIVOT TABLE INTERNAL RECORD #
"RTN","IBCNVUT0",211,0)
 S FILE=366.04
"RTN","IBCNVUT0",212,0)
 S FDA(44,FILE,"?+2,"_FDAIEN(1)_",",.01)=INSPTR1
"RTN","IBCNVUT0",213,0)
 D UPDATE^DIE("","FDA(44)","FDAIEN","OROUT(44)")
"RTN","IBCNVUT0",214,0)
 ;W !,"PIVTPTR=",PIVTPTR
"RTN","IBCNVUT0",215,0)
 I $D(OROUT(44,"DIERR")) W !,"INSURANCE PTR ERROR= ",INSPTR1," ",OROUT(44,"DIERR",1,"TEXT",1) Q
"RTN","IBCNVUT0",216,0)
 K FDA(44),OROUT(44)
"RTN","IBCNVUT0",217,0)
 Q
"RTN","IBCNVUT0",218,0)
 ;
"RTN","IBCNVUT0",219,0)
 ;
"RTN","IBCNVUT0",220,0)
FINAL(CNTHL7) ;
"RTN","IBCNVUT0",221,0)
 ;S CNTHL7=$G(^TMP($J,"IBSSVI-PATIENT",DFN))  ; PIV0T TABLE RECORD NUMBER, NOT THE PIVOT TABLE #, FOR DFN
"RTN","IBCNVUT0",222,0)
 N DIE,DA,DR
"RTN","IBCNVUT0",223,0)
 S DIE="^IBCN(366," ; global root of file
"RTN","IBCNVUT0",224,0)
 S DA=CNTHL7 ; entry number in file
"RTN","IBCNVUT0",225,0)
 S DR=".06///^S X=1;.08///^S X=0"  ; SET COMPLETED FLAG  AND CLEAR ANY "REQUIRES TRANSMISSION" FLAG
"RTN","IBCNVUT0",226,0)
 D ^DIE
"RTN","IBCNVUT0",227,0)
 Q
"RTN","IBCNVUT0",228,0)
 ;
"RTN","IBCNVUT0",229,0)
TREATRED(PIVTPTR,INSPTR1,SENDSITE,RECDDAT,RIEN,ERROR)  ;
"RTN","IBCNVUT0",230,0)
 ;
"RTN","IBCNVUT0",231,0)
 ;INPUT
"RTN","IBCNVUT0",232,0)
 ;      PIVTPTR  AS IB SSVI PIN/HL7 RECORD #
"RTN","IBCNVUT0",233,0)
 ;      INSPTR1 AS INSURANCE FILE 36 POINTER
"RTN","IBCNVUT0",234,0)
 ;      SENDSITE AS ORIGINATING SENDING SITE STATION NUMBER
"RTN","IBCNVUT0",235,0)
 ;      RECDDAT AS HL7 RECEIVED DATE UPON RECEIPT OF PIN DATA 
"RTN","IBCNVUT0",236,0)
 ;      FROM SENDING STATION TO THIS TREATING SITE STATION THIS INSURANCE INSPTR1
"RTN","IBCNVUT0",237,0)
 ;      RIEN AS NEWLY CREATED INSURANCE BUFFER RECORD
"RTN","IBCNVUT0",238,0)
 ;
"RTN","IBCNVUT0",239,0)
 ;      SAVE IN PIVOT TABLE INSURANCE MULTIPLE, ORIGINATING SENDING SITE 
"RTN","IBCNVUT0",240,0)
 ;      MULTIPLE INTO RECEIVED DATE FIELD
"RTN","IBCNVUT0",241,0)
 ;
"RTN","IBCNVUT0",242,0)
 K FDA,FDAIEN,OROUT
"RTN","IBCNVUT0",243,0)
 N INSPTR,FILE ; PTR INSIDE THE MULTIPLE
"RTN","IBCNVUT0",244,0)
 S FDAIEN(1)=PIVTPTR  ;$G(^TMP($J,"IBSSVI-PATIENT",DFN)) ; PIVOT TABLE INTERNAL RECORD #
"RTN","IBCNVUT0",245,0)
 S FILE=366.05
"RTN","IBCNVUT0",246,0)
 S INSPTR=0
"RTN","IBCNVUT0",247,0)
 S INSPTR=$O(^IBCN(366,PIVTPTR,3,"B",INSPTR1,INSPTR))
"RTN","IBCNVUT0",248,0)
 ;I INSPTR="" W "INSPTR=NULL" Q
"RTN","IBCNVUT0",249,0)
 S FDAIEN(2)=INSPTR
"RTN","IBCNVUT0",250,0)
 S FDA(47,FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",.01)=SENDSITE   ; ORIGINATING SENDING FACILITY SITE
"RTN","IBCNVUT0",251,0)
 S FDA(47,FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",2)=RECDDAT   ; RECEIVED DATE AT TREATING FACILITY SITE
"RTN","IBCNVUT0",252,0)
 S FDA(47,FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",3)=RIEN   ; NEWLY CREATED INSURANCE BUFFER RECORD
"RTN","IBCNVUT0",253,0)
 S FDA(47,FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",4)=ERROR   ; ERROR
"RTN","IBCNVUT0",254,0)
 D UPDATE^DIE("","FDA(47)","FDAIEN","OROUT(47)")
"RTN","IBCNVUT0",255,0)
 ;I $D(OROUT(47,"DIERR")) W !,"INSURANCE PTR.MULT, SENDING SITE MULTIPLE ERROR= ",SENDSITE," ",OROUT(47,"DIERR",1,"TEXT",1) Q
"RTN","IBCNVUT0",256,0)
 K FDA(47),OROUT(47)
"RTN","IBCNVUT0",257,0)
 Q
"RTN","IBCNVUT0",258,0)
 ;
"RTN","IBCNVUT0",259,0)
ERROR(PIVTPTR,INSPTR1,TREATSIT,ERROR) ;
"RTN","IBCNVUT0",260,0)
 ;
"RTN","IBCNVUT0",261,0)
 ;INPUT
"RTN","IBCNVUT0",262,0)
 ;      PIVTPTR  AS IB SSVI PIN/HL7 RECORD #
"RTN","IBCNVUT0",263,0)
 ;      INSPTR1 AS INSURANCE NAME FILE 36  
"RTN","IBCNVUT0",264,0)
 ;      TREATSIT AS TREATING SITE STATION NUMBER
"RTN","IBCNVUT0",265,0)
 ;      TRANSDAT AS HL7 TRANSMISSION/COMPLETION DATE UPON RECEIPT OF ACKNOWLEDGEMENT FROM THIS TREATING SITE WITH THIS INSURANCE INSPTR1
"RTN","IBCNVUT0",266,0)
 ;      SAVE IN PIVOT TABLE INSURANCE MULTIPLE, TREATING SITE MULTIPLE INTO TRANSMISSION DATE FIELD
"RTN","IBCNVUT0",267,0)
 K FDA,FDAIEN,OROUT,FILE
"RTN","IBCNVUT0",268,0)
 N INSPTR ; PTR INSIDE THE MULTIPLE
"RTN","IBCNVUT0",269,0)
 S FDAIEN(1)=PIVTPTR  ;$G(^TMP($J,"IBSSVI-PATIENT",DFN)) ; PIVOT TABLE INTERNAL RECORD #
"RTN","IBCNVUT0",270,0)
 S FILE=366.05
"RTN","IBCNVUT0",271,0)
 S INSPTR=0
"RTN","IBCNVUT0",272,0)
 S INSPTR=$O(^IBCN(366,PIVTPTR,3,"B",INSPTR1,INSPTR))
"RTN","IBCNVUT0",273,0)
 ;I INSPTR="" W !,"INSPTR=NULL" Q
"RTN","IBCNVUT0",274,0)
 S FDAIEN(2)=INSPTR
"RTN","IBCNVUT0",275,0)
 S FDA(47,FILE,"?3,"_FDAIEN(2)_","_FDAIEN(1)_",",4)=ERROR   ; ERROR FROM SEND OR RECEIVE
"RTN","IBCNVUT0",276,0)
 D UPDATE^DIE("","FDA(47)","FDAIEN","OROUT(47)")
"RTN","IBCNVUT0",277,0)
 K FDA(47),OROUT(47)
"RTN","IBCNVUT0",278,0)
 Q
"RTN","IBCNVUT0",279,0)
 ;
"RTN","IBCNVUT0",280,0)
ERRN(ARRAY) ;  Get the next FileMan error number from the array
"RTN","IBCNVUT0",281,0)
 ;  Input
"RTN","IBCNVUT0",282,0)
 ;    ARRAY = the array name, include "DIERR"
"RTN","IBCNVUT0",283,0)
 ;  Output
"RTN","IBCNVUT0",284,0)
 ;    IBEY = the next error number
"RTN","IBCNVUT0",285,0)
 ;
"RTN","IBCNVUT0",286,0)
 ;  Example call
"RTN","IBCNVUT0",287,0)
 ;    S IERN=$$ERRN^IBCVUT0("ERROR(""DIERR"")")
"RTN","IBCNVUT0",288,0)
 ;
"RTN","IBCNVUT0",289,0)
 NEW IBEY
"RTN","IBCNVUT0",290,0)
 ;
"RTN","IBCNVUT0",291,0)
 I '$D(@(ARRAY)) S @(ARRAY)=1 Q 1
"RTN","IBCNVUT0",292,0)
 ;
"RTN","IBCNVUT0",293,0)
 S IBEY=$P(@(ARRAY),U,1)
"RTN","IBCNVUT0",294,0)
 S IBEY=IBEY+1,$P(@(ARRAY),U,1)=IBEY
"RTN","IBCNVUT0",295,0)
 Q IBEY
"RTN","IBCNVUT0",296,0)
 ;
"RTN","IBCNVUT0",297,0)
 ;INSURANCE TYPE MULTIPLE SUBFILE IN PATIENT FILE  ; <-----1-15 ARE RED FIELDS <---16 AND ABOVE ARE GREEN FIELDS
"RTN","IBCNVUT0",298,0)
1 ;;.01;
"RTN","IBCNVUT0",299,0)
2 ;;.18;
"RTN","IBCNVUT0",300,0)
3 ;;.2;
"RTN","IBCNVUT0",301,0)
4 ;;7.02;
"RTN","IBCNVUT0",302,0)
5 ;;1.03;
"RTN","IBCNVUT0",303,0)
6 ;;21;
"RTN","IBCNVUT0",304,0)
7 ;;3.01;
"RTN","IBCNVUT0",305,0)
8 ;;3.05;
"RTN","IBCNVUT0",306,0)
9 ;;3.12;
"RTN","IBCNVUT0",307,0)
10 ;;4.03;
"RTN","IBCNVUT0",308,0)
11 ;;6;
"RTN","IBCNVUT0",309,0)
12 ;;8;
"RTN","IBCNVUT0",310,0)
13 ;;20;
"RTN","IBCNVUT0",311,0)
14 ;;16;
"RTN","IBCNVUT0",312,0)
15 ;;7.01;
"RTN","IBCNVUT0",313,0)
16 ;;1.18;
"RTN","IBCNVUT0",314,0)
17 ;;2.01;
"RTN","IBCNVUT0",315,0)
18 ;;2.015;
"RTN","IBCNVUT0",316,0)
19 ;;2.02;
"RTN","IBCNVUT0",317,0)
20 ;;2.03;
"RTN","IBCNVUT0",318,0)
21 ;;2.04;
"RTN","IBCNVUT0",319,0)
22 ;;2.05;
"RTN","IBCNVUT0",320,0)
23 ;;2.06;
"RTN","IBCNVUT0",321,0)
24 ;;2.07;
"RTN","IBCNVUT0",322,0)
25 ;;2.08;
"RTN","IBCNVUT0",323,0)
26 ;;2.1;
"RTN","IBCNVUT0",324,0)
27 ;;3;
"RTN","IBCNVUT0",325,0)
28 ;;3.04;
"RTN","IBCNVUT0",326,0)
29 ;;3.06;
"RTN","IBCNVUT0",327,0)
30 ;;3.07;
"RTN","IBCNVUT0",328,0)
31 ;;3.08;
"RTN","IBCNVUT0",329,0)
32 ;;3.09;
"RTN","IBCNVUT0",330,0)
33 ;;3.1;
"RTN","IBCNVUT0",331,0)
34 ;;3.11;
"RTN","IBCNVUT0",332,0)
35 ;;5.01;
"RTN","IBCNVUT0",333,0)
 ;
"RTN","IBCOC")
0^90^B14081123
"RTN","IBCOC",1,0)
IBCOC ;ALB/AAS - INACTIVE INS. COMPANIES WITH PATIENTS ;04-NOV-93
"RTN","IBCOC",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCOC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOC",4,0)
 ;
"RTN","IBCOC",5,0)
% ;
"RTN","IBCOC",6,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,ZTQUEUED,ZTREQ
"RTN","IBCOC",7,0)
 ; -- fileman print in inactive ins. companies
"RTN","IBCOC",8,0)
 W !!,"Print List of Inactive Insurance Companies still listed as Insuring Patients"
"RTN","IBCOC",9,0)
 ;
"RTN","IBCOC",10,0)
 ; Report or Excel format
"RTN","IBCOC",11,0)
 S IBOUT=$$OUT G:IBOUT="" END
"RTN","IBCOC",12,0)
 I IBOUT="E" G EXCEL
"RTN","IBCOC",13,0)
 ;
"RTN","IBCOC",14,0)
 W !!,"You will need a 132 column printer for this report!",!!
"RTN","IBCOC",15,0)
 S DIC="^DIC(36,",FLDS="[IB INACTIVE INS CO]",BY="[IB INACTIVE INS CO]",FR="?,?",TO="?,?"
"RTN","IBCOC",16,0)
 S DIS(0)="I $D(^DPT(""AB"",D0))"
"RTN","IBCOC",17,0)
 D EN1^DIP,ASK^IBCOMC2
"RTN","IBCOC",18,0)
 W !
"RTN","IBCOC",19,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCOC",20,0)
 D ^%ZISC
"RTN","IBCOC",21,0)
END K D,I,J,X,Y,IBCNT,IBOUT,DIC,FLDS,BY,TO,FR,DIS
"RTN","IBCOC",22,0)
 Q
"RTN","IBCOC",23,0)
 ;
"RTN","IBCOC",24,0)
CNT(D0) ; -- count number of entries
"RTN","IBCOC",25,0)
 N X,Y S X=0
"RTN","IBCOC",26,0)
 G:'$G(D0) CNTQ
"RTN","IBCOC",27,0)
 S Y=0 F  S Y=$O(^DPT("AB",D0,Y)) Q:'Y  S X=X+1
"RTN","IBCOC",28,0)
CNTQ Q X
"RTN","IBCOC",29,0)
 ;
"RTN","IBCOC",30,0)
OUT() ;
"RTN","IBCOC",31,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOC",32,0)
 W !
"RTN","IBCOC",33,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCOC",34,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCOC",35,0)
 S DIR("B")="Report"
"RTN","IBCOC",36,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCOC",37,0)
 Q Y
"RTN","IBCOC",38,0)
 ;
"RTN","IBCOC",39,0)
EXCEL ;
"RTN","IBCOC",40,0)
 ; Ask for Date Entered range
"RTN","IBCOC",41,0)
 N IBRF,IBRL,IBQUIT
"RTN","IBCOC",42,0)
 S IBQUIT=0
"RTN","IBCOC",43,0)
 ;
"RTN","IBCOC",44,0)
 D NR G:IBQUIT XLQUIT
"RTN","IBCOC",45,0)
 ;
"RTN","IBCOC",46,0)
 W !! D QUE
"RTN","IBCOC",47,0)
 ;
"RTN","IBCOC",48,0)
XLQUIT ;
"RTN","IBCOC",49,0)
 K IBRF,IBRL,IBOUT,IBQUIT
"RTN","IBCOC",50,0)
 Q
"RTN","IBCOC",51,0)
 ;
"RTN","IBCOC",52,0)
NR ; Ask Name Range
"RTN","IBCOC",53,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOC",54,0)
NRR S DIR(0)="FO",DIR("B")="FIRST",DIR("A")="      START WITH NAME"
"RTN","IBCOC",55,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOC",56,0)
 S:Y="FIRST" Y="A" S IBRF=Y
"RTN","IBCOC",57,0)
 S DIR(0)="FO",DIR("B")="LAST",DIR("A")="      GO TO NAME"
"RTN","IBCOC",58,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOC",59,0)
 S:Y="LAST" Y="zzzzzz" S IBRL=Y
"RTN","IBCOC",60,0)
 I $G(IBRL)']$G(IBRF) W !!,?5,"* The Go to Insurance Name must follow after the Start with Name. *",! G NRR
"RTN","IBCOC",61,0)
 Q
"RTN","IBCOC",62,0)
 ;
"RTN","IBCOC",63,0)
QUE ; Ask Device for Excel Output
"RTN","IBCOC",64,0)
 S %ZIS="QM" D ^%ZIS G:POP QUEQ
"RTN","IBCOC",65,0)
 I $D(IO("Q")) K IO("Q") D  G QUEQ
"RTN","IBCOC",66,0)
 .S ZTRTN="COMPXL^IBCOC",ZTSAVE("IBRF")="",ZTSAVE("IBRL")=""
"RTN","IBCOC",67,0)
 .S ZTDESC="IB - List Inactive Ins. Co. Covering Patients"
"RTN","IBCOC",68,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCOC",69,0)
 ;
"RTN","IBCOC",70,0)
 U IO
"RTN","IBCOC",71,0)
 D COMPXL
"RTN","IBCOC",72,0)
 ;
"RTN","IBCOC",73,0)
QUEQ ; Exit clean-up
"RTN","IBCOC",74,0)
 W ! D ^%ZISC K IBOUT,IBRF,IBRL,VA,VAERR,VADM,VAPA,^TMP("IBCOC",$J)
"RTN","IBCOC",75,0)
 Q
"RTN","IBCOC",76,0)
 ;
"RTN","IBCOC",77,0)
COMPXL ; Compile Excel data
"RTN","IBCOC",78,0)
 ; Input variables:
"RTN","IBCOC",79,0)
 ; IBRF  - Required.  Name Range Start value
"RTN","IBCOC",80,0)
 ; IBRL  - Required.  Name Range Go To value
"RTN","IBCOC",81,0)
 ;
"RTN","IBCOC",82,0)
 N IBINS,IBINSNM,IBSTR,IBCTY,IBST,IBNUM
"RTN","IBCOC",83,0)
 K ^TMP("IBCOC",$J)
"RTN","IBCOC",84,0)
 ;
"RTN","IBCOC",85,0)
 S IBINSNM=""
"RTN","IBCOC",86,0)
 F  S IBINSNM=$O(^DIC(36,"B",IBINSNM)) Q:IBINSNM']""  D
"RTN","IBCOC",87,0)
 . ;
"RTN","IBCOC",88,0)
 . ; -- Ins. name out of range
"RTN","IBCOC",89,0)
 . I IBINSNM]IBRL!(IBRF]IBINSNM) Q
"RTN","IBCOC",90,0)
 . ;
"RTN","IBCOC",91,0)
 . S IBINS=$O(^DIC(36,"B",IBINSNM,0)) I '+IBINS Q
"RTN","IBCOC",92,0)
 . ;
"RTN","IBCOC",93,0)
 . ; -- Ins. not inactive
"RTN","IBCOC",94,0)
 . I '$$GET1^DIQ(36,IBINS,.05,"I") Q
"RTN","IBCOC",95,0)
 . ;
"RTN","IBCOC",96,0)
 . ;  Get data fields
"RTN","IBCOC",97,0)
 . S IBSTR=$$GET1^DIQ(36,IBINS,.111)
"RTN","IBCOC",98,0)
 . S IBCTY=$$GET1^DIQ(36,IBINS,.114)
"RTN","IBCOC",99,0)
 . S IBST=$$GET1^DIQ(36,IBINS,.115,"I"),IBST=$$GET1^DIQ(5,IBST,1)
"RTN","IBCOC",100,0)
 . S IBNUM=$$CNT(IBINS)
"RTN","IBCOC",101,0)
 . ;
"RTN","IBCOC",102,0)
 . ;  Set global array
"RTN","IBCOC",103,0)
 . S ^TMP("IBCOC",$J,IBINSNM)=IBINSNM_U_IBSTR_U_IBCTY_U_IBST_U_IBNUM
"RTN","IBCOC",104,0)
 ; 
"RTN","IBCOC",105,0)
 ;
"RTN","IBCOC",106,0)
 W "INSURANCE COMPANY^STREET^CITY^STATE^NUMBER PATIENTS"
"RTN","IBCOC",107,0)
 I '$D(^TMP("IBCOC",$J)) W !!,"** NO RECORDS FOUND **" D ASK^IBCOMC2 Q
"RTN","IBCOC",108,0)
 D WRT,ASK^IBCOMC2
"RTN","IBCOC",109,0)
 ;
"RTN","IBCOC",110,0)
 Q
"RTN","IBCOC",111,0)
 ;
"RTN","IBCOC",112,0)
WRT ; Print Excel data
"RTN","IBCOC",113,0)
 N IBINSNM
"RTN","IBCOC",114,0)
 S (IBINSNM)=""
"RTN","IBCOC",115,0)
 F  S IBINSNM=$O(^TMP("IBCOC",$J,IBINSNM)) Q:IBINSNM=""  W !,^TMP("IBCOC",$J,IBINSNM)
"RTN","IBCOC",116,0)
 Q
"RTN","IBCOC1")
0^91^B21404907
"RTN","IBCOC1",1,0)
IBCOC1 ;ALB/NLR - NEW, NOT VERIFIED INS. ENTRIES ;24-NOV-93
"RTN","IBCOC1",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBCOC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOC1",4,0)
 ;
"RTN","IBCOC1",5,0)
% ;
"RTN","IBCOC1",6,0)
 N POP,ZTQUEUED,ZTREQ
"RTN","IBCOC1",7,0)
 ; -- fileman print of new, not verified insurance entries
"RTN","IBCOC1",8,0)
 ;
"RTN","IBCOC1",9,0)
 W !!,"Print List of New, Not Verified Insurance Entries"
"RTN","IBCOC1",10,0)
 ;
"RTN","IBCOC1",11,0)
 ; Report or Excel format
"RTN","IBCOC1",12,0)
 S IBOUT=$$OUT G:IBOUT="" END
"RTN","IBCOC1",13,0)
 I IBOUT="E" G EXCEL
"RTN","IBCOC1",14,0)
 ;
"RTN","IBCOC1",15,0)
 W !!,"You will need a 132 column printer for this report!",!!
"RTN","IBCOC1",16,0)
 ;
"RTN","IBCOC1",17,0)
 S DIC="^DPT(",FLDS="[IBNOTVER]",BY="[IBNOTVER1]"
"RTN","IBCOC1",18,0)
 D ASK G:$G(IBQ)=1 END
"RTN","IBCOC1",19,0)
 S DHD="REPORT OF NEW, NOT VERIFIED INSURANCE ENTRIES FROM: "_FR(1)_" TO: "_TO(1)
"RTN","IBCOC1",20,0)
 D EN1^DIP,ASK^IBCOMC2
"RTN","IBCOC1",21,0)
 ;
"RTN","IBCOC1",22,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCOC1",23,0)
 D ^%ZISC
"RTN","IBCOC1",24,0)
END K DIC,FLDS,BY,FR,TO,IBOUT,IBQ,DHD
"RTN","IBCOC1",25,0)
 Q
"RTN","IBCOC1",26,0)
ASK ;
"RTN","IBCOC1",27,0)
 N IBBDT,IBEDT
"RTN","IBCOC1",28,0)
 D DATE^IBOUTL
"RTN","IBCOC1",29,0)
 I (IBBDT<1)!(IBEDT<1) S IBQ=1
"RTN","IBCOC1",30,0)
 S FR=",,"_IBBDT_",?",TO=",,"_IBEDT_",?"
"RTN","IBCOC1",31,0)
 S FR(1)=$$DAT1^IBOUTL(IBBDT),TO(1)=$$DAT1^IBOUTL(IBEDT)
"RTN","IBCOC1",32,0)
 Q
"RTN","IBCOC1",33,0)
 ;
"RTN","IBCOC1",34,0)
OUT() ;
"RTN","IBCOC1",35,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOC1",36,0)
 W !
"RTN","IBCOC1",37,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCOC1",38,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCOC1",39,0)
 S DIR("B")="Report"
"RTN","IBCOC1",40,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCOC1",41,0)
 Q Y
"RTN","IBCOC1",42,0)
 ;
"RTN","IBCOC1",43,0)
EXCEL ;
"RTN","IBCOC1",44,0)
 ; Ask for Date Entered range
"RTN","IBCOC1",45,0)
 N IBBDT,IBEDT,IBRF,IBRL,IBQUIT
"RTN","IBCOC1",46,0)
 S IBQUIT=0
"RTN","IBCOC1",47,0)
 D DATE^IBOUTL
"RTN","IBCOC1",48,0)
 I (IBBDT<1)!(IBEDT<1) G XLQUIT
"RTN","IBCOC1",49,0)
 ;
"RTN","IBCOC1",50,0)
 D NR G:IBQUIT XLQUIT
"RTN","IBCOC1",51,0)
 ;
"RTN","IBCOC1",52,0)
 W !! D QUE
"RTN","IBCOC1",53,0)
 ;
"RTN","IBCOC1",54,0)
XLQUIT ;
"RTN","IBCOC1",55,0)
 K IBBDT,IBEDT,IBRF,IBRL,IBOUT,IBQUIT
"RTN","IBCOC1",56,0)
 Q
"RTN","IBCOC1",57,0)
 ;
"RTN","IBCOC1",58,0)
NR ; Ask Name Range
"RTN","IBCOC1",59,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOC1",60,0)
NRR S DIR(0)="FO",DIR("B")="FIRST",DIR("A")="      START WITH NAME"
"RTN","IBCOC1",61,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOC1",62,0)
 S:Y="FIRST" Y="A" S IBRF=Y
"RTN","IBCOC1",63,0)
 S DIR(0)="FO",DIR("B")="LAST",DIR("A")="      GO TO NAME"
"RTN","IBCOC1",64,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOC1",65,0)
 S:Y="LAST" Y="zzzzzz" S IBRL=Y
"RTN","IBCOC1",66,0)
 I $G(IBRL)']$G(IBRF) W !!,?5,"* The Go to Patient Name must follow after the Start with Name. *",! G NRR
"RTN","IBCOC1",67,0)
 Q
"RTN","IBCOC1",68,0)
 ;
"RTN","IBCOC1",69,0)
QUE ; Ask Device for Excel Output
"RTN","IBCOC1",70,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCOC1",71,0)
 S %ZIS="QM" D ^%ZIS G:POP QUEQ
"RTN","IBCOC1",72,0)
 I $D(IO("Q")) K IO("Q") D  G QUEQ
"RTN","IBCOC1",73,0)
 .S ZTRTN="COMPXL^IBCOC1",ZTSAVE("IBRF")="",ZTSAVE("IBRL")=""
"RTN","IBCOC1",74,0)
 .S ZTSAVE("IBBDT")="",ZTSAVE("IBEDT")=""
"RTN","IBCOC1",75,0)
 .S ZTDESC="IB - List New not Verified Policies"
"RTN","IBCOC1",76,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCOC1",77,0)
 ;
"RTN","IBCOC1",78,0)
 U IO
"RTN","IBCOC1",79,0)
 D COMPXL
"RTN","IBCOC1",80,0)
 ;
"RTN","IBCOC1",81,0)
QUEQ ; Exit clean-up
"RTN","IBCOC1",82,0)
 W ! D ^%ZISC K IBBDT,IBEDT,IBOUT,IBRF,IBRL,VA,VAERR,VADM,VAPA,^TMP("IBCOC1",$J)
"RTN","IBCOC1",83,0)
 Q
"RTN","IBCOC1",84,0)
 ;
"RTN","IBCOC1",85,0)
COMPXL ; Compile Excel data
"RTN","IBCOC1",86,0)
 ; Input variables:
"RTN","IBCOC1",87,0)
 ; IBRF  - Required.  Name Range Start value
"RTN","IBCOC1",88,0)
 ; IBRL  - Required.  Name Range Go To value
"RTN","IBCOC1",89,0)
 ; IBBDT - Required.  Begining Entered Date Range
"RTN","IBCOC1",90,0)
 ; IBEDT - Required.  Ending Entered Date Range
"RTN","IBCOC1",91,0)
 ;
"RTN","IBCOC1",92,0)
 N IBC,IBCDA,IBCDA0,IBCDA1,IBSSN,IBINS,IBSUBID,IBENDT,IBENUSR,DFN,VA,VADM,VAERR,VAPA
"RTN","IBCOC1",93,0)
 K ^TMP("IBCOC1",$J)
"RTN","IBCOC1",94,0)
 S IBC=0 F  S IBC=$O(^DPT("AB",IBC)) Q:'IBC  D
"RTN","IBCOC1",95,0)
 .S DFN=0 F  S DFN=$O(^DPT("AB",IBC,DFN)) Q:'DFN  D
"RTN","IBCOC1",96,0)
 ..K VA,VADM,VAERR,VAPA
"RTN","IBCOC1",97,0)
 ..D DEM^VADPT,ADD^VADPT
"RTN","IBCOC1",98,0)
 ..;
"RTN","IBCOC1",99,0)
 ..;  I Pt. name out of range quit
"RTN","IBCOC1",100,0)
 ..S VADM(1)=$P($G(VADM(1)),U,1) I VADM(1)="" Q
"RTN","IBCOC1",101,0)
 ..I VADM(1)]IBRL Q
"RTN","IBCOC1",102,0)
 ..I IBRF]VADM(1) Q
"RTN","IBCOC1",103,0)
 ..;
"RTN","IBCOC1",104,0)
 ..S IBCDA=0 F  S IBCDA=$O(^DPT("AB",IBC,DFN,IBCDA)) Q:'IBCDA  D
"RTN","IBCOC1",105,0)
 ...S IBCDA0=$$ZND^IBCNS1(DFN,IBCDA)  ;516 - baa
"RTN","IBCOC1",106,0)
 ...;
"RTN","IBCOC1",107,0)
 ...;  I Verification Date populated quit
"RTN","IBCOC1",108,0)
 ...S IBCDA1=$G(^DPT(DFN,.312,IBCDA,1))
"RTN","IBCOC1",109,0)
 ...I $P(IBCDA1,U,3) Q
"RTN","IBCOC1",110,0)
 ...;
"RTN","IBCOC1",111,0)
 ...;  I Entered Date out of range quit
"RTN","IBCOC1",112,0)
 ...I +$P(IBCDA1,U)>IBEDT Q
"RTN","IBCOC1",113,0)
 ...I +$P(IBCDA1,U)<IBBDT Q
"RTN","IBCOC1",114,0)
 ...;
"RTN","IBCOC1",115,0)
 ...;  Get data fields
"RTN","IBCOC1",116,0)
 ...S IBSSN=$$GET1^DIQ(2,DFN,.09)
"RTN","IBCOC1",117,0)
 ...S IBINS=$$GET1^DIQ(2.312,IBCDA_","_DFN_",",.01)
"RTN","IBCOC1",118,0)
 ...S IBSUBID=$$GET1^DIQ(2.312,IBCDA_","_DFN_",",7.02)
"RTN","IBCOC1",119,0)
 ...S IBENUSR=$$GET1^DIQ(2.312,IBCDA_","_DFN_",",1.02)
"RTN","IBCOC1",120,0)
 ...S IBENDT=$$FMTE^XLFDT($P(IBCDA1,U),1)
"RTN","IBCOC1",121,0)
 ...;
"RTN","IBCOC1",122,0)
 ...;  Set global array
"RTN","IBCOC1",123,0)
 ...S ^TMP("IBCOC1",$J,VADM(1),IBCDA)=VADM(1)_U_IBSSN_U_IBINS_U_IBSUBID_U_IBENUSR_U_IBENDT
"RTN","IBCOC1",124,0)
 ;
"RTN","IBCOC1",125,0)
 W "PATIENT^PATIENT ID^INSURANCE CO^SUBSCRIBER ID^WHO ENTERED^DATE ENTERED"
"RTN","IBCOC1",126,0)
 I '$D(^TMP("IBCOC1",$J)) W !!,"** NO RECORDS FOUND **" D ASK^IBCOMC2 Q
"RTN","IBCOC1",127,0)
 D WRT,ASK^IBCOMC2
"RTN","IBCOC1",128,0)
 ;
"RTN","IBCOC1",129,0)
 Q
"RTN","IBCOC1",130,0)
 ;
"RTN","IBCOC1",131,0)
WRT ; Print Excel data
"RTN","IBCOC1",132,0)
 N IBPAT,IBINSTYP
"RTN","IBCOC1",133,0)
 S (IBPAT,IBINSTYP)=""
"RTN","IBCOC1",134,0)
 F  S IBPAT=$O(^TMP("IBCOC1",$J,IBPAT)) Q:IBPAT=""  D
"RTN","IBCOC1",135,0)
 .F  S IBINSTYP=$O(^TMP("IBCOC1",$J,IBPAT,IBINSTYP)) Q:'IBINSTYP  W !,^TMP("IBCOC1",$J,IBPAT,IBINSTYP)
"RTN","IBCOC1",136,0)
 Q
"RTN","IBCOMA")
0^87^B24000522
"RTN","IBCOMA",1,0)
IBCOMA ;ALB/CMS - IDENTIFY ACTIVE POLICIES W/NO EFFECTIVE DATE;08-03-98
"RTN","IBCOMA",2,0)
 ;;2.0;INTEGRATED BILLING;**103,528**;21-MAR-94;Build 163
"RTN","IBCOMA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMA",4,0)
 Q
"RTN","IBCOMA",5,0)
EN ;Entry point from option
"RTN","IBCOMA",6,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCOMA",7,0)
 N IBAIB,IBBDT,IBEDT,IBRF,IBRL,IBOUT,IBQUIT,IBSIN,IBSTR,X,Y
"RTN","IBCOMA",8,0)
 S (IBAIB,IBBDT,IBEDT,IBRF,IBRL,IBSIN,IBSTR)=""
"RTN","IBCOMA",9,0)
 W !!,?10,"Identify Active Policies with NO Effective Date",!
"RTN","IBCOMA",10,0)
 S DIR("A",1)="Sort report by"
"RTN","IBCOMA",11,0)
 S DIR("A",2)="  1  - Patient Name Range"
"RTN","IBCOMA",12,0)
 S DIR("A",3)="  2  - Terminal Digit Range"
"RTN","IBCOMA",13,0)
 S DIR("A",4)="  "
"RTN","IBCOMA",14,0)
 S DIR(0)="SAXB^1:Patient Name;2:Terminal Digit"
"RTN","IBCOMA",15,0)
 S DIR("A")="  Select Number: ",DIR("B")="1",DIR("??")="^D ENH^IBCOMA" D ^DIR
"RTN","IBCOMA",16,0)
 I +Y'>0 S IBQUIT=1 G EXIT
"RTN","IBCOMA",17,0)
 S IBAIB=+Y
"RTN","IBCOMA",18,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBCOMA",19,0)
 W !! D @$S(IBAIB=1:"NR",1:"TR")
"RTN","IBCOMA",20,0)
 I $G(IBQUIT)=1 G EXIT
"RTN","IBCOMA",21,0)
 ;
"RTN","IBCOMA",22,0)
VER W !!
"RTN","IBCOMA",23,0)
 S DIR("A",1)="    Within "_$S(IBAIB=1:"Patient Name",1:"Terminal Digit")_" Include:"
"RTN","IBCOMA",24,0)
 S DIR("A",2)="      1  - Verified Policies"
"RTN","IBCOMA",25,0)
 S DIR("A",3)="      2  - Non-Verified Policies"
"RTN","IBCOMA",26,0)
 S DIR("A",4)="      3  - Both"
"RTN","IBCOMA",27,0)
 S DIR("A",5)="  "
"RTN","IBCOMA",28,0)
 S DIR(0)="SAXB^1:Verified Policies;2:Non-Verified Policies;3:Both"
"RTN","IBCOMA",29,0)
 S DIR("A")="      Select Number: ",DIR("B")="1",DIR("??")="^D ICH^IBCOMA" D ^DIR
"RTN","IBCOMA",30,0)
 I +Y'>0 S IBQUIT=1 G EXIT
"RTN","IBCOMA",31,0)
 S IBSIN=+Y
"RTN","IBCOMA",32,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBCOMA",33,0)
 I IBSIN'=2 D VR I IBBDT=""!(IBEDT="") W "     <Date Range not entered>" G VER
"RTN","IBCOMA",34,0)
 I $G(IBQUIT)=1 G EXIT
"RTN","IBCOMA",35,0)
 ;
"RTN","IBCOMA",36,0)
 S IBOUT=$$OUT G:IBOUT="" EXIT
"RTN","IBCOMA",37,0)
 ;
"RTN","IBCOMA",38,0)
 W !! D QUE
"RTN","IBCOMA",39,0)
 ;
"RTN","IBCOMA",40,0)
EXIT Q
"RTN","IBCOMA",41,0)
 ;
"RTN","IBCOMA",42,0)
NR ; Ask Name Range
"RTN","IBCOMA",43,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMA",44,0)
NRR S DIR(0)="FO",DIR("B")="FIRST",DIR("A")="  START WITH PATIENT NAME"
"RTN","IBCOMA",45,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMA",46,0)
 S:Y="FIRST" Y="A" S IBRF=Y
"RTN","IBCOMA",47,0)
 S DIR(0)="FO",DIR("B")="LAST",DIR("A")="  GO TO PATIENT NAME"
"RTN","IBCOMA",48,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMA",49,0)
 S:Y="LAST" Y="zzzzzz" S IBRL=Y
"RTN","IBCOMA",50,0)
 I $G(IBRL)']$G(IBRF) W !!,?5,"* The Go to Patient Name must follow after the Start with Name. *",! G NRR
"RTN","IBCOMA",51,0)
 Q
"RTN","IBCOMA",52,0)
 ;
"RTN","IBCOMA",53,0)
TR ; Ask Terminal Digit Range
"RTN","IBCOMA",54,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBCOMA",55,0)
 S DIR(0)="FO^1:9^K:X'?1.9N X"
"RTN","IBCOMA",56,0)
 S DIR("?")="Enter up to 9 digits of the Terminal Digit to include in Report"
"RTN","IBCOMA",57,0)
 S DIR("B")="0000",DIR("A")="  Start with Terminal Digit"
"RTN","IBCOMA",58,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMA",59,0)
 S IBRF=$E((Y_"000000000"),1,9)
"RTN","IBCOMA",60,0)
 S DIR("B")="9999",DIR("A")="  GO to Terminal Digit"
"RTN","IBCOMA",61,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMA",62,0)
 S IBRL=$E((Y_"999999999"),1,9)
"RTN","IBCOMA",63,0)
 I IBRF>IBRL W !!,?5,"* The Go to Terminal Digit must follow after the Start with Digit. *",! G TR
"RTN","IBCOMA",64,0)
 Q
"RTN","IBCOMA",65,0)
 ;
"RTN","IBCOMA",66,0)
VR ; Ask Verification Date Range
"RTN","IBCOMA",67,0)
 N %DT,X,Y
"RTN","IBCOMA",68,0)
 W !!,"      Please enter Policy Verification Dates:"
"RTN","IBCOMA",69,0)
 ;
"RTN","IBCOMA",70,0)
VRBDT ; - get begin date
"RTN","IBCOMA",71,0)
 S (IBBDT,IBEDT)=""
"RTN","IBCOMA",72,0)
 S %DT="AEX",%DT("A")="        Start with DATE: " D ^%DT K %DT G VRQ:Y<0 S IBBDT=Y
"RTN","IBCOMA",73,0)
 ;
"RTN","IBCOMA",74,0)
VREDT ; - get ending date
"RTN","IBCOMA",75,0)
 S %DT="EX" R !,"        Go to DATE: ",X:DTIME S:X=" " X=IBBDT G VRQ:(X="")!(X["^") D ^%DT G VREDT:Y<0 S IBEDT=Y I Y<IBBDT W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G VRBDT
"RTN","IBCOMA",76,0)
 ;
"RTN","IBCOMA",77,0)
VRQ Q
"RTN","IBCOMA",78,0)
 ;
"RTN","IBCOMA",79,0)
ENH ; Sort help Text
"RTN","IBCOMA",80,0)
 W !!,?5,"Enter 1 to search by a Patient Name Range. (i.e. ADAMS to ADAMSZ)"
"RTN","IBCOMA",81,0)
 W !!,?5,"Enter 2 to search by Terminal Digit.  The output will be sorted"
"RTN","IBCOMA",82,0)
 W !?5,"by the 8th and 9th digits and then the 6th and 7th digits"
"RTN","IBCOMA",83,0)
 W !?5,"of the Patient's SSN.",!
"RTN","IBCOMA",84,0)
 Q
"RTN","IBCOMA",85,0)
 ;
"RTN","IBCOMA",86,0)
ICH ; Search criteria help Text
"RTN","IBCOMA",87,0)
 W !!,?5,"Enter 1 to list active policies by Verification Date Range"
"RTN","IBCOMA",88,0)
 W !,?15,"(i.e. Sort Date By: 10-1-96  Go to Date: 01-1-97)"
"RTN","IBCOMA",89,0)
 W !,?5,"Enter 2 to list active policies with no Verification Date."
"RTN","IBCOMA",90,0)
 W !,?5,"Enter 3 to include active policies with or without a Verification Date."
"RTN","IBCOMA",91,0)
 Q
"RTN","IBCOMA",92,0)
QUE ; Ask Device
"RTN","IBCOMA",93,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCOMA",94,0)
 W !,?10,"You may want to queue this report!",!
"RTN","IBCOMA",95,0)
 S %ZIS="QM" D ^%ZIS G:POP QUEQ
"RTN","IBCOMA",96,0)
 I $D(IO("Q")) K IO("Q") D  G QUEQ
"RTN","IBCOMA",97,0)
 .S ZTRTN="BEG^IBCOMA1",ZTSAVE("IBRF")="",ZTSAVE("IBRL")="",ZTSAVE("IBOUT")=""
"RTN","IBCOMA",98,0)
 .S ZTSAVE("IBAIB")="",ZTSAVE("IBBDT")="",ZTSAVE("IBEDT")="",ZTSAVE("IBSIN")=""
"RTN","IBCOMA",99,0)
 .S ZTDESC="IB - Identify Active Policies w/no Effective Date"
"RTN","IBCOMA",100,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCOMA",101,0)
 ;
"RTN","IBCOMA",102,0)
 U IO
"RTN","IBCOMA",103,0)
 I $E(IOST,1,2)["C-" W !!,?15,"... One Moment Please ..."
"RTN","IBCOMA",104,0)
 D BEG^IBCOMA1
"RTN","IBCOMA",105,0)
 ;
"RTN","IBCOMA",106,0)
QUEQ ; EXIT CLEAN-UP
"RTN","IBCOMA",107,0)
 W ! D ^%ZISC K IBAIB,IBOUT,IBRF,IBRL,IBSIN,IBSTR,^TMP("IBCOMA",$J)
"RTN","IBCOMA",108,0)
 Q
"RTN","IBCOMA",109,0)
 ;
"RTN","IBCOMA",110,0)
OUT() ;
"RTN","IBCOMA",111,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMA",112,0)
 W !
"RTN","IBCOMA",113,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCOMA",114,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCOMA",115,0)
 S DIR("B")="Report"
"RTN","IBCOMA",116,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCOMA",117,0)
 Q Y
"RTN","IBCOMA1")
0^88^B45473488
"RTN","IBCOMA1",1,0)
IBCOMA1 ;ALB/CMS - IDENTIFY ACTIVE POLICIES W/NO EFFECTIVE DATE (CON'T) ;08-03-98
"RTN","IBCOMA1",2,0)
 ;;2.0;INTEGRATED BILLING;**103,516,528**;21-MAR-94;Build 163
"RTN","IBCOMA1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMA1",4,0)
 Q
"RTN","IBCOMA1",5,0)
BEG ; Entry to run Active Policies w/no Effective Date Report
"RTN","IBCOMA1",6,0)
 ; Input variables:
"RTN","IBCOMA1",7,0)
 ; IBAIB - Required.    How to sort
"RTN","IBCOMA1",8,0)
 ;         1= Patient Name Range      2= Terminal Digit Range
"RTN","IBCOMA1",9,0)
 ;
"RTN","IBCOMA1",10,0)
 ; IBSIN - Required.   Include Active Policies with
"RTN","IBCOMA1",11,0)
 ;         1= Verification Date  2= No Verification Date 3= Both
"RTN","IBCOMA1",12,0)
 ;
"RTN","IBCOMA1",13,0)
 ; IBRF  - Required.  Name or Terminal Digit Range Start value
"RTN","IBCOMA1",14,0)
 ; IBRL  - Required.  Name or Terminal Digit Range Go to value
"RTN","IBCOMA1",15,0)
 ; IBBDT - Optional.  Begining Verification Date Range
"RTN","IBCOMA1",16,0)
 ; IBEDT - Optional.  Ending Verification Date Range
"RTN","IBCOMA1",17,0)
 ; IBOUT - Required.  Output format
"RTN","IBCOMA1",18,0)
 ;         "R"= report format        "E"= Excel format
"RTN","IBCOMA1",19,0)
 ;
"RTN","IBCOMA1",20,0)
 N DFN,IBC,IBC0,IBCDA,IBCDA0,IBCDA1,IBC11,IBC13,IBGP,IBI,IBPAGE,IBTMP
"RTN","IBCOMA1",21,0)
 N IBQUIT,IBTD,IBX,VA,VADM,VAERR,X,Y
"RTN","IBCOMA1",22,0)
 ;
"RTN","IBCOMA1",23,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCOMA1",24,0)
 K ^TMP("IBCOMA",$J) S IBPAGE=0,IBQUIT=0
"RTN","IBCOMA1",25,0)
 S IBC=0 F  S IBC=$O(^DPT("AB",IBC)) Q:'IBC  D
"RTN","IBCOMA1",26,0)
 .S IBC0=$G(^DIC(36,IBC,0))
"RTN","IBCOMA1",27,0)
 .;
"RTN","IBCOMA1",28,0)
 .;   If company inactive quit
"RTN","IBCOMA1",29,0)
 .I $P(IBC0,U)="" Q
"RTN","IBCOMA1",30,0)
 .I $P(IBC0,U,5)=1 Q
"RTN","IBCOMA1",31,0)
 .S DFN=0 F  S DFN=$O(^DPT("AB",IBC,DFN)) Q:'DFN  D
"RTN","IBCOMA1",32,0)
 ..K VA,VADM,VAERR,VAPA
"RTN","IBCOMA1",33,0)
 ..D DEM^VADPT,ADD^VADPT
"RTN","IBCOMA1",34,0)
 ..;
"RTN","IBCOMA1",35,0)
 ..;  I Pt. deceased quit I $G(VADM(6))>0 Q
"RTN","IBCOMA1",36,0)
 ..;  I Pt. name out of range quit
"RTN","IBCOMA1",37,0)
 ..S VADM(1)=$P($G(VADM(1)),U,1) I VADM(1)="" Q
"RTN","IBCOMA1",38,0)
 ..I IBAIB=1,VADM(1)]IBRL Q
"RTN","IBCOMA1",39,0)
 ..I IBAIB=1,IBRF]VADM(1) Q
"RTN","IBCOMA1",40,0)
 ..;
"RTN","IBCOMA1",41,0)
 ..;  I Terminal Digit out of range quit
"RTN","IBCOMA1",42,0)
 ..I IBAIB=2 S IBTD=$$TERMDG^IBCONS2(DFN) S:IBTD="" IBTD="000000000" I (+IBTD>IBRL)!(IBRF>+IBTD) Q
"RTN","IBCOMA1",43,0)
 ..;
"RTN","IBCOMA1",44,0)
 ..; Fix subscript error if terminal digit is null
"RTN","IBCOMA1",45,0)
 ..I IBAIB=2,IBTD="" S IBTD=" "
"RTN","IBCOMA1",46,0)
 ..;
"RTN","IBCOMA1",47,0)
 ..S IBCDA=0 F  S IBCDA=$O(^DPT("AB",IBC,DFN,IBCDA)) Q:'IBCDA  D
"RTN","IBCOMA1",48,0)
 ...;IB*2.0*516/TAZ - Retrieve data from HIPAA compliant fields.
"RTN","IBCOMA1",49,0)
 ...;S IBCDA0=$G(^DPT(DFN,.312,IBCDA,0))  ;516 - baa
"RTN","IBCOMA1",50,0)
 ...S IBCDA0=$$ZND^IBCNS1(DFN,IBCDA)  ;516 - baa
"RTN","IBCOMA1",51,0)
 ...;
"RTN","IBCOMA1",52,0)
 ...;  I Effective Date populated quit
"RTN","IBCOMA1",53,0)
 ...I $P(IBCDA0,U,8) Q
"RTN","IBCOMA1",54,0)
 ...;
"RTN","IBCOMA1",55,0)
 ...;  I Expiration Date entered and expired quit
"RTN","IBCOMA1",56,0)
 ...I $P(IBCDA0,U,4),$P(IBCDA0,U,4)'>DT Q
"RTN","IBCOMA1",57,0)
 ...;
"RTN","IBCOMA1",58,0)
 ...;  Sorting by verification date or no date check
"RTN","IBCOMA1",59,0)
 ...S IBCDA1=$G(^DPT(DFN,.312,IBCDA,1))
"RTN","IBCOMA1",60,0)
 ...I IBSIN=1,'$P(IBCDA1,U,3) Q
"RTN","IBCOMA1",61,0)
 ...S $P(IBCDA1,U,3)=$P($P(IBCDA1,U,3),".",1)
"RTN","IBCOMA1",62,0)
 ...I IBSIN=1,+$P(IBCDA1,U,3)>IBEDT Q
"RTN","IBCOMA1",63,0)
 ...I IBSIN=1,+$P(IBCDA1,U,3)<IBBDT Q
"RTN","IBCOMA1",64,0)
 ...I IBSIN=2,$P(IBCDA1,U,3) Q
"RTN","IBCOMA1",65,0)
 ...I IBSIN=3 I +$P(IBCDA1,U,3)>0 I +$P(IBCDA1,U,3)<IBBDT!(+$P(IBCDA1,U,3)>IBEDT) Q
"RTN","IBCOMA1",66,0)
 ...S IBC11=$G(^DIC(36,IBC,.11))
"RTN","IBCOMA1",67,0)
 ...S IBC13=$G(^DIC(36,IBC,.13))
"RTN","IBCOMA1",68,0)
 ...;
"RTN","IBCOMA1",69,0)
 ...;   set data line for global
"RTN","IBCOMA1",70,0)
 ...;S IBTMP(1)=PT NAME^SSN^AGE^HOME PHONE^DATE OF DEATH
"RTN","IBCOMA1",71,0)
 ...;S IBTMP(2)=INSURANCE NAME^REIMBURSE?^PHONE^ADD LINE 1
"RTN","IBCOMA1",72,0)
 ...;S IBTMP(3)=GROUP PLAN^SUBSCRIBER ID^WHOSE INS.^VERIFICATION DATE
"RTN","IBCOMA1",73,0)
 ...;
"RTN","IBCOMA1",74,0)
 ...;IB*2.0*516/TAZ - Use HIPAA complaint field
"RTN","IBCOMA1",75,0)
 ...;S IBGP=$P($G(^IBA(355.3,+$P(IBCDA0,U,18),0)),U,3)
"RTN","IBCOMA1",76,0)
 ...S IBGP=$$GET1^DIQ(355.3,+$P(IBCDA0,U,18)_",",2.01)
"RTN","IBCOMA1",77,0)
 ...S IBTMP(1)=VADM(1)_U_$P(VADM(2),U,2)_U_+VADM(4)_U_$P(VAPA(8),U,1)_U_$$FMTE^XLFDT($P(VADM(6),U,1),"5ZD")
"RTN","IBCOMA1",78,0)
 ...S IBTMP(2)=$P(IBC0,U,1)_U_$P(IBC0,U,2)_U_$P(IBC13,U,1)_U_$P(IBC11,U,1)
"RTN","IBCOMA1",79,0)
 ...S IBTMP(3)=$S(IBGP]"":"Plan: "_IBGP,1:"(No Plan Name)")_U_$P(IBCDA0,U,2)_U_$P(IBCDA0,U,6)_U_$$FMTE^XLFDT($P(IBCDA1,U,3),"5ZD")
"RTN","IBCOMA1",80,0)
 ...;
"RTN","IBCOMA1",81,0)
 ...;   set variable IBI for Verified=1 or Non verified=2 
"RTN","IBCOMA1",82,0)
 ...S IBI=$S(+$P(IBCDA1,U,3):1,1:2)
"RTN","IBCOMA1",83,0)
 ...;
"RTN","IBCOMA1",84,0)
 ...;   Set Global array
"RTN","IBCOMA1",85,0)
 ...S ^TMP("IBCOMA",$J,IBI,$S(IBAIB=2:+IBTD,1:VADM(1)),DFN)=IBTMP(1)
"RTN","IBCOMA1",86,0)
 ...S ^TMP("IBCOMA",$J,IBI,$S(IBAIB=2:+IBTD,1:VADM(1)),DFN,IBC)=IBTMP(2)
"RTN","IBCOMA1",87,0)
 ...S ^TMP("IBCOMA",$J,IBI,$S(IBAIB=2:+IBTD,1:VADM(1)),DFN,IBC,IBCDA)=IBTMP(3)
"RTN","IBCOMA1",88,0)
 ...;
"RTN","IBCOMA1",89,0)
 ;
"RTN","IBCOMA1",90,0)
 I '$D(^TMP("IBCOMA",$J)) D HD W !!,"** NO RECORDS FOUND **" D ASK^IBCOMC2 G QUEQ
"RTN","IBCOMA1",91,0)
 D HD:IBOUT="E",WRT
"RTN","IBCOMA1",92,0)
 ;
"RTN","IBCOMA1",93,0)
QUEQ ; Exit clean-UP
"RTN","IBCOMA1",94,0)
 W ! D ^%ZISC K IBTMP,IBAIB,IBOUT,IBRF,IBRL,IBSIN,IBSTR,VA,VAERR,VADM,VAPA,^TMP("IBCOMA",$J)
"RTN","IBCOMA1",95,0)
 Q
"RTN","IBCOMA1",96,0)
 ;
"RTN","IBCOMA1",97,0)
HD ;Write Heading
"RTN","IBCOMA1",98,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCOMA1",99,0)
 I IBOUT="E" W:($E(IOST,1,2)["C-") ! W "Verified?^Patient Name^SSN^Age^Phone^Date of Death^Insurance Name^Reimb VA?^Phone^Plan^Sub ID^Whose^Verification Date" Q
"RTN","IBCOMA1",100,0)
 W @IOF,"Active Policies with no Effective Date Report    ",$$FMTE^XLFDT($$NOW^XLFDT,"Z")," Page: ",IBPAGE
"RTN","IBCOMA1",101,0)
 W !,?5,"Sorted by: "_$S(IBAIB=1:"Patient Name",1:"Terminal Digit")_"  Range: "_$S(IBRF="A":"FIRST",1:IBRF)_" to "_$S(IBRL="zzzzzz":"LAST",1:IBRL)
"RTN","IBCOMA1",102,0)
 W !,?5,"  Include: "_$S(IBSIN=1:"Verification Date Range: "_$$FMTE^XLFDT(IBBDT,"Z")_" to "_$$FMTE^XLFDT(IBEDT,"Z"),IBSIN=2:"No Verification Date Entered",1:"with or without Verification Date")
"RTN","IBCOMA1",103,0)
 W !!,"Patient Name",?32,"SSN",?44,"Age",?50,"Phone",?66,"Date of Death"
"RTN","IBCOMA1",104,0)
 W ! F IBX=1:1:79 W "="
"RTN","IBCOMA1",105,0)
 Q
"RTN","IBCOMA1",106,0)
 ;
"RTN","IBCOMA1",107,0)
WRT ;Write data lines
"RTN","IBCOMA1",108,0)
 N IBA,IBCDA,IBDA,IBDFN,IBINS,IBNA,IBPOL,IBPT,X,Y S IBQUIT=0
"RTN","IBCOMA1",109,0)
 S IBA=0 F  S IBA=$O(^TMP("IBCOMA",$J,IBA)) Q:('IBA)!(IBQUIT=1)  D
"RTN","IBCOMA1",110,0)
 . I IBPAGE,(IBOUT="R") D ASK^IBCOMC2 I IBQUIT=1 Q
"RTN","IBCOMA1",111,0)
 . I IBOUT="R" D HD W !,$S(IBA=1:"Verified",1:"Non-Verified")
"RTN","IBCOMA1",112,0)
 . S IBNA="" F  S IBNA=$O(^TMP("IBCOMA",$J,IBA,IBNA)) Q:(IBNA="")!(IBQUIT=1)  D
"RTN","IBCOMA1",113,0)
 . . S IBDFN=0 F  S IBDFN=$O(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN)) Q:('IBDFN)!(IBQUIT=1)  D
"RTN","IBCOMA1",114,0)
 . . . S IBPT=$G(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN))
"RTN","IBCOMA1",115,0)
 . . . ;
"RTN","IBCOMA1",116,0)
 . . . I ($Y+7)>IOSL,(IBOUT="R") D  I IBQUIT=1 Q
"RTN","IBCOMA1",117,0)
 . . . . D ASK^IBCOMC2 I IBQUIT=1 Q
"RTN","IBCOMA1",118,0)
 . . . . D HD
"RTN","IBCOMA1",119,0)
 . . . . Q
"RTN","IBCOMA1",120,0)
 . . . ;
"RTN","IBCOMA1",121,0)
 . . . ; Excel Output
"RTN","IBCOMA1",122,0)
 . . . I IBOUT="E" W !,$S(IBA=1:"Verified",1:"Non-Verified")_U_IBPT
"RTN","IBCOMA1",123,0)
 . . . ; Report Output
"RTN","IBCOMA1",124,0)
 . . . I IBOUT="R" W !!,$E($P(IBPT,U,1),1,30),?32,$E($P(IBPT,U,2),1,12),?44,$J($P(IBPT,U,3),3),?50,$E($P(IBPT,U,4),1,20),?70,$P(IBPT,U,5)
"RTN","IBCOMA1",125,0)
 . . . ;
"RTN","IBCOMA1",126,0)
 . . . S IBDA=0 F  S IBDA=$O(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN,IBDA)) Q:('IBDA)!(IBQUIT=1)  D
"RTN","IBCOMA1",127,0)
 . . . . S IBINS=$G(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN,IBDA))
"RTN","IBCOMA1",128,0)
 . . . . ; Excel Output
"RTN","IBCOMA1",129,0)
 . . . . I IBOUT="E" W U_$P(IBINS,U,1,3)
"RTN","IBCOMA1",130,0)
 . . . . ; Report Output
"RTN","IBCOMA1",131,0)
 . . . . I IBOUT="R" W !?3,$E($P(IBINS,U,1),1,30),?35,"Reimb VA? ",$P(IBINS,U,2),?50,$E($P(IBINS,U,3),1,20) ; ?70,$E($P(IBINS,U,4),1,10)
"RTN","IBCOMA1",132,0)
 . . . . ;
"RTN","IBCOMA1",133,0)
 . . . . S IBCDA=0 F  S IBCDA=$O(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN,IBDA,IBCDA)) Q:('IBCDA)!(IBQUIT=1)   D
"RTN","IBCOMA1",134,0)
 . . . . . S IBPOL=$G(^TMP("IBCOMA",$J,IBA,IBNA,IBDFN,IBDA,IBCDA))
"RTN","IBCOMA1",135,0)
 . . . . . ; MRD;IB*2.0*516 - Print Sub ID on its own line.
"RTN","IBCOMA1",136,0)
 . . . . . ;W !?5,$E($P(IBPOL,U,1),1,20),?26,"Sub ID: ",$E($P(IBPOL,U,2),1,20),?55,"Whose: ",$P(IBPOL,U,3)
"RTN","IBCOMA1",137,0)
 . . . . . ; Excel Output
"RTN","IBCOMA1",138,0)
 . . . . . I IBOUT="E" W U_$S($P(IBPOL,U,1)["Plan: ":$P($P(IBPOL,U,1),"Plan: ",2,99),1:$P(IBPOL,U,1))_U_$P(IBPOL,U,2,4) Q
"RTN","IBCOMA1",139,0)
 . . . . . ; Report Output
"RTN","IBCOMA1",140,0)
 . . . . . W !?3,$E($P(IBPOL,U,1),1,49),?55,"Whose: ",$P(IBPOL,U,3)
"RTN","IBCOMA1",141,0)
 . . . . . I IBA=1 W ?64,"Verif:",$P(IBPOL,U,4)
"RTN","IBCOMA1",142,0)
 . . . . . W !?3,"Sub ID: ",$E($P(IBPOL,U,2),1,66)
"RTN","IBCOMA1",143,0)
 . . . . . Q
"RTN","IBCOMA1",144,0)
 . . . . Q
"RTN","IBCOMA1",145,0)
 . . . Q
"RTN","IBCOMA1",146,0)
 . . Q
"RTN","IBCOMA1",147,0)
 . Q
"RTN","IBCOMA1",148,0)
 I 'IBQUIT D ASK^IBCOMC2
"RTN","IBCOMA1",149,0)
 Q
"RTN","IBCOMC")
0^76^B28290447
"RTN","IBCOMC",1,0)
IBCOMC ;ALB/CMS - IDENTIFY PT BY AGE WITH OR WITHOUT INSURANCE;10-09-98
"RTN","IBCOMC",2,0)
 ;;2.0;INTEGRATED BILLING;**103,528**;21-MAR-94;Build 163
"RTN","IBCOMC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMC",4,0)
 Q
"RTN","IBCOMC",5,0)
EN ;Entry point from option
"RTN","IBCOMC",6,0)
 N DA,DIC,DIE,DIR,DIROUT,DIRUT,DTOUT,DR,DUOUT,X,Y
"RTN","IBCOMC",7,0)
 N IBAIB,IBBDT,IBEDT,IBRF,IBRL,IBSIN,IBSINF,IBSINL,IBAGEF,IBAGEL,IBOUT,IBQUIT
"RTN","IBCOMC",8,0)
 S (IBAIB,IBBDT,IBEDT,IBRF,IBRL,IBSIN,IBSINF,IBSINL,IBAGEF,IBAGEL,IBQUIT)=""
"RTN","IBCOMC",9,0)
 ;
"RTN","IBCOMC",10,0)
 W !!,"This report will identify patients who were treated within a specified"
"RTN","IBCOMC",11,0)
 W !,"date range who do or do not have insurance coverage."
"RTN","IBCOMC",12,0)
 ;
"RTN","IBCOMC",13,0)
INS ; -- sort by Insurance Company or no Insurance
"RTN","IBCOMC",14,0)
 W !!,"Sort by Insurance Company or No Insurance"
"RTN","IBCOMC",15,0)
 S DIR("A",1)="1  - Insurance Company Range"
"RTN","IBCOMC",16,0)
 S DIR("A",2)="2  - Selected Insurance Companies"
"RTN","IBCOMC",17,0)
 S DIR("A",3)="3  - Patients with No Insurance"
"RTN","IBCOMC",18,0)
 S DIR("A",4)="  "
"RTN","IBCOMC",19,0)
 S DIR(0)="SAXB^1:Insurance Range;2:Specific Companies;3:No Insurance"
"RTN","IBCOMC",20,0)
 S DIR("A")=" Select Number: ",DIR("B")="1",DIR("??")="^D INSH^IBCOMC2" D ^DIR
"RTN","IBCOMC",21,0)
 I +Y'>0 S IBQUIT=1 G EXIT
"RTN","IBCOMC",22,0)
 S IBSIN=+Y
"RTN","IBCOMC",23,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBCOMC",24,0)
 I IBSIN=1 D INSR
"RTN","IBCOMC",25,0)
 I IBSIN=2 D INSS
"RTN","IBCOMC",26,0)
 I $G(IBQUIT)=1 G EXIT
"RTN","IBCOMC",27,0)
 ;
"RTN","IBCOMC",28,0)
VISIT ; -- sort by Treated Date Range
"RTN","IBCOMC",29,0)
 W !!,"Sort by Date Last Treated Range."
"RTN","IBCOMC",30,0)
 D DATE^IBOUTL
"RTN","IBCOMC",31,0)
 I IBBDT="" W *7,"    <Date Last Treated Range not entered>" G EXIT
"RTN","IBCOMC",32,0)
 I IBBDT,IBEDT="" S IBEDT=DT_".2400"
"RTN","IBCOMC",33,0)
 ;
"RTN","IBCOMC",34,0)
 W !! S DIR("A",1)="Sort report by"
"RTN","IBCOMC",35,0)
 S DIR("A",2)="1  - Patient Name Range"
"RTN","IBCOMC",36,0)
 S DIR("A",3)="2  - Terminal Digit Range"
"RTN","IBCOMC",37,0)
 S DIR("A",4)="  "
"RTN","IBCOMC",38,0)
 S DIR(0)="SAXB^1:Patient Name;2:Terminal Digit"
"RTN","IBCOMC",39,0)
 S DIR("A")=" Select Number: ",DIR("B")="1",DIR("??")="^D ENH^IBCOMC2" D ^DIR
"RTN","IBCOMC",40,0)
 I +Y'>0 S IBQUIT=1 G EXIT
"RTN","IBCOMC",41,0)
 S IBAIB=+Y
"RTN","IBCOMC",42,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBCOMC",43,0)
 W !! D @$S(IBAIB=1:"NR",1:"TR")
"RTN","IBCOMC",44,0)
 I $G(IBQUIT)=1 G EXIT
"RTN","IBCOMC",45,0)
 ;
"RTN","IBCOMC",46,0)
AGE ; -- sort by AGE optional
"RTN","IBCOMC",47,0)
 W !!,"Sort by Patient Age Range.  (Optional)"
"RTN","IBCOMC",48,0)
 S DIR("A")="Start AGE: ",DIR(0)="NAO^1:250",DIR("??")="^D AGEH^IBCOMC2" D ^DIR
"RTN","IBCOMC",49,0)
 I X["^" S IBQUIT=1 G EXIT
"RTN","IBCOMC",50,0)
 I +Y'>0 G AGEQ
"RTN","IBCOMC",51,0)
 S IBAGEF=+Y,DIR(0)="NO^"_+IBAGEF_":250",DIR("B")="250",DIR("A")="To AGE" D ^DIR
"RTN","IBCOMC",52,0)
 I X["^" S IBQUIT=1 G EXIT
"RTN","IBCOMC",53,0)
 S IBAGEL=+Y
"RTN","IBCOMC",54,0)
AGEQ K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBCOMC",55,0)
 ;
"RTN","IBCOMC",56,0)
 S IBOUT=$$OUT G:IBOUT="" EXIT
"RTN","IBCOMC",57,0)
 ;
"RTN","IBCOMC",58,0)
 W !! D QUE
"RTN","IBCOMC",59,0)
 ;
"RTN","IBCOMC",60,0)
EXIT Q
"RTN","IBCOMC",61,0)
 ;
"RTN","IBCOMC",62,0)
NR ; Ask Name Range
"RTN","IBCOMC",63,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMC",64,0)
NRR S DIR(0)="FO",DIR("B")="FIRST",DIR("A")="START WITH PATIENT NAME"
"RTN","IBCOMC",65,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMC",66,0)
 S:Y="FIRST" Y="A" S IBRF=Y
"RTN","IBCOMC",67,0)
 S DIR(0)="FO",DIR("B")="LAST",DIR("A")="GO TO PATIENT NAME"
"RTN","IBCOMC",68,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMC",69,0)
 S:Y="LAST" Y="zzzzzz" S IBRL=Y
"RTN","IBCOMC",70,0)
 I $G(IBRL)']$G(IBRF) W !!,?5,"* The Go to Patient Name must follow after the Start with Name. *",! G NRR
"RTN","IBCOMC",71,0)
 Q
"RTN","IBCOMC",72,0)
 ;
"RTN","IBCOMC",73,0)
TR ; Ask Terminal Digit Range
"RTN","IBCOMC",74,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBCOMC",75,0)
 S DIR(0)="FO^1:9^K:X'?1.9N X"
"RTN","IBCOMC",76,0)
 S DIR("?")="Enter up to 9 digits of the Terminal Digit to include in Report"
"RTN","IBCOMC",77,0)
 S DIR("B")="0000",DIR("A")="Start with Terminal Digit"
"RTN","IBCOMC",78,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMC",79,0)
 S IBRF=$E((Y_"000000000"),1,9)
"RTN","IBCOMC",80,0)
 S DIR("B")="9999",DIR("A")="GO to Terminal Digit"
"RTN","IBCOMC",81,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMC",82,0)
 S IBRL=$E((Y_"999999999"),1,9)
"RTN","IBCOMC",83,0)
 I IBRF>IBRL W !!,?5,"* The Go to Terminal Digit must follow after the Start with Digit. *",! G TR
"RTN","IBCOMC",84,0)
 Q
"RTN","IBCOMC",85,0)
 ;
"RTN","IBCOMC",86,0)
INSR ; -- sort by Insurance Company Range
"RTN","IBCOMC",87,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMC",88,0)
INSR1 S DIR(0)="FO",DIR("B")="FIRST",DIR("A")="START WITH INSURANCE COMPANY"
"RTN","IBCOMC",89,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMC",90,0)
 S:Y="FIRST" Y="A" S IBSINF=Y
"RTN","IBCOMC",91,0)
 S DIR(0)="FO",DIR("B")="LAST",DIR("A")="GO TO INSURANCE COMPANY"
"RTN","IBCOMC",92,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMC",93,0)
 S:Y="LAST" Y="zzzzzz" S IBSINL=Y
"RTN","IBCOMC",94,0)
 I $G(IBSINL)']$G(IBSINF) W !!,?5,"* The Go to Insurance Company must follow after the Start with Company Name. *",! G INSR1
"RTN","IBCOMC",95,0)
 Q
"RTN","IBCOMC",96,0)
 ;
"RTN","IBCOMC",97,0)
INSS ; -- select up to six Insurance Companies
"RTN","IBCOMC",98,0)
 N DIC,DA,IBX,X,Y S IBX=1
"RTN","IBCOMC",99,0)
 S DIC(0)="AEQMZ",DIC="^DIC(36,",DIC("S")="I $$ANYGP^IBCNSJ(+Y,0,1),'$P($G(^DIC(36,+Y,0)),U,5)"
"RTN","IBCOMC",100,0)
 S DIC("A")="Select INSURANCE COMPANY: " D ^DIC
"RTN","IBCOMC",101,0)
 I Y<0 W "  <No Insurance Companies selected>" S IBQUIT=1 G INSSQ
"RTN","IBCOMC",102,0)
 S IBSIN(IBX)=+Y_U_Y(0),DIC("A")="Select Another INSURANCE COMPANY: "
"RTN","IBCOMC",103,0)
 F IBX=IBX+1:1:6 D  Q:(Y<0)
"RTN","IBCOMC",104,0)
 .D ^DIC Q:Y<0
"RTN","IBCOMC",105,0)
 .S IBSIN(IBX)=+Y_U_Y(0)
"RTN","IBCOMC",106,0)
INSSQ Q
"RTN","IBCOMC",107,0)
 ;
"RTN","IBCOMC",108,0)
QUE ; Ask Device
"RTN","IBCOMC",109,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCOMC",110,0)
 W !,?10,"You may want to queue this report!",!
"RTN","IBCOMC",111,0)
 S %ZIS="QM" D ^%ZIS G:POP QUEQ
"RTN","IBCOMC",112,0)
 I $D(IO("Q")) K IO("Q") D  G QUEQ
"RTN","IBCOMC",113,0)
 .S ZTRTN="BEG^IBCOMC1"
"RTN","IBCOMC",114,0)
 .F IBX="IBAIB","IBBDT","IBEDT","IBRF","IBRL","IBSIN","IBSIN(","IBSINF","IBSINL","IBAGEF","IBAGEL","IBOUT","IBQUIT" S ZTSAVE(IBX)=""
"RTN","IBCOMC",115,0)
 .S ZTDESC="IB - Identify Patients with/without Insurance"
"RTN","IBCOMC",116,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCOMC",117,0)
 ;
"RTN","IBCOMC",118,0)
 U IO
"RTN","IBCOMC",119,0)
 I $E(IOST,1,2)["C-" W !!,?15,"... One Moment Please ..."
"RTN","IBCOMC",120,0)
 D BEG^IBCOMC1
"RTN","IBCOMC",121,0)
 ;
"RTN","IBCOMC",122,0)
QUEQ ; Exit clean-UP
"RTN","IBCOMC",123,0)
 W ! D ^%ZISC K IBTMP,IBAIB,IBOUT,IBRF,IBRL,IBSIN,IBSTR,VA,VAERR,VADM,VAPA,^TMP("IBCOMC",$J)
"RTN","IBCOMC",124,0)
 Q
"RTN","IBCOMC",125,0)
 ;
"RTN","IBCOMC",126,0)
OUT() ;
"RTN","IBCOMC",127,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMC",128,0)
 W !
"RTN","IBCOMC",129,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCOMC",130,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCOMC",131,0)
 S DIR("B")="Report"
"RTN","IBCOMC",132,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCOMC",133,0)
 Q Y
"RTN","IBCOMC1")
0^77^B19172785
"RTN","IBCOMC1",1,0)
IBCOMC1 ;ALB/CMS - IDENTIFY PT BY AGE WITH OR WITHOUT INSURANCE (CON'T);10-09-98
"RTN","IBCOMC1",2,0)
 ;;2.0;INTEGRATED BILLING;**103,183,528**;21-MAR-94;Build 163
"RTN","IBCOMC1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMC1",4,0)
 Q
"RTN","IBCOMC1",5,0)
 ;
"RTN","IBCOMC1",6,0)
BEG ; Entry to run Identify Patients with/without Insurance Report
"RTN","IBCOMC1",7,0)
 ; Input variables must exist:
"RTN","IBCOMC1",8,0)
 ; IBAIB  - Required.    How to sort
"RTN","IBCOMC1",9,0)
 ;          1= Patient Name Range      2= Terminal Digit Range
"RTN","IBCOMC1",10,0)
 ; IBRF   - Required.  Name or Terminal Digit Range Start value
"RTN","IBCOMC1",11,0)
 ; IBRL   - Required.  Name or Terminal Digit Range Go to value
"RTN","IBCOMC1",12,0)
 ; IBAGEF - Optional.  Age start value or null
"RTN","IBCOMC1",13,0)
 ; IBAGEL - Optional.  Age end value or null
"RTN","IBCOMC1",14,0)
 ; IBBDT  - Required.  Last Treated Start Date
"RTN","IBCOMC1",15,0)
 ; IBEDT  - Required.  Last Treated End Date
"RTN","IBCOMC1",16,0)
 ;
"RTN","IBCOMC1",17,0)
 ; IBSIN  - Required.   Include Insurance Company search
"RTN","IBCOMC1",18,0)
 ;          1=Insurance Co. Range  2=Selected Ins. Co.  3=No Ins. Co.
"RTN","IBCOMC1",19,0)
 ;          If IBSIN=2 then the $O(IBSIN(1-6))=selected companies
"RTN","IBCOMC1",20,0)
 ; IBSINF - Optional.   Ins. Co. start Range or null
"RTN","IBCOMC1",21,0)
 ; IBSINL - Optional.   Ins. Co. end Range or null
"RTN","IBCOMC1",22,0)
 ; IBOUT  - Required.  Output format
"RTN","IBCOMC1",23,0)
 ;          "R"= report format         "E"= Excel format
"RTN","IBCOMC1",24,0)
 ;
"RTN","IBCOMC1",25,0)
 N DFN,IBC,IBC0,IBDLT,IBGP,IBI,IBINS,IBINSV,IBPAGE,IBQUIT
"RTN","IBCOMC1",26,0)
 N IBTMP,IBTD,IBX,IBXX,SDCNT,VA,VADM,VAERR,VAPA,X,Y
"RTN","IBCOMC1",27,0)
 ;
"RTN","IBCOMC1",28,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCOMC1",29,0)
 K ^TMP("IBCOMC",$J) S IBPAGE=0,IBQUIT=0,IBINSV=""
"RTN","IBCOMC1",30,0)
 ;
"RTN","IBCOMC1",31,0)
 ;  Date Last Treated entered get DFN's
"RTN","IBCOMC1",32,0)
 D DLT
"RTN","IBCOMC1",33,0)
 ;
"RTN","IBCOMC1",34,0)
 S DFN=0 F  S DFN=$O(^TMP("IBCOMC",$J,"DLT",DFN)) Q:'DFN  D
"RTN","IBCOMC1",35,0)
 .;
"RTN","IBCOMC1",36,0)
 .K IBINS S (IBTD,IBINSV,IBINS)=""
"RTN","IBCOMC1",37,0)
 .;  I Terminal Digit out of range quit
"RTN","IBCOMC1",38,0)
 .I IBAIB=2 S IBTD=$$TERMDG^IBCONS2(DFN) I (+IBTD>IBRL)!(IBRF>+IBTD) Q
"RTN","IBCOMC1",39,0)
 .;
"RTN","IBCOMC1",40,0)
 .; Fix subscript error if terminal digit is null
"RTN","IBCOMC1",41,0)
 .I IBAIB=2,IBTD="" S IBTD=" "
"RTN","IBCOMC1",42,0)
 .;
"RTN","IBCOMC1",43,0)
 .K VA,VADM,VAERR,VAPA
"RTN","IBCOMC1",44,0)
 .D DEM^VADPT,ADD^VADPT
"RTN","IBCOMC1",45,0)
 .;
"RTN","IBCOMC1",46,0)
 .;  I Pt. name out of range quit
"RTN","IBCOMC1",47,0)
 .S VADM(1)=$P($G(VADM(1)),U,1) I VADM(1)="" Q
"RTN","IBCOMC1",48,0)
 .I IBAIB=1,VADM(1)]IBRL Q
"RTN","IBCOMC1",49,0)
 .I IBAIB=1,IBRF]VADM(1) Q
"RTN","IBCOMC1",50,0)
 .;
"RTN","IBCOMC1",51,0)
 .;  I Age out of range quit
"RTN","IBCOMC1",52,0)
 .I IBAGEF I (+VADM(4)<IBAGEF)!(+VADM(4)>IBAGEL) Q
"RTN","IBCOMC1",53,0)
 .;
"RTN","IBCOMC1",54,0)
 .;  Check Insurance
"RTN","IBCOMC1",55,0)
 .S IBINSV=$G(^IBA(354,+DFN,60)) I IBSIN'=3,+IBINSV Q
"RTN","IBCOMC1",56,0)
 .I IBSIN=3,IBINSV D SET Q
"RTN","IBCOMC1",57,0)
 .;
"RTN","IBCOMC1",58,0)
 .D ALL^IBCNS1(DFN,"IBINS",3)
"RTN","IBCOMC1",59,0)
 .I IBSIN=3,$G(IBINS(0)) Q
"RTN","IBCOMC1",60,0)
 .I IBSIN=3,'$G(IBINS(0)) D SET Q
"RTN","IBCOMC1",61,0)
 .;
"RTN","IBCOMC1",62,0)
 .S IBX=0 F  S IBX=$O(IBINS(IBX)) Q:'IBX  D
"RTN","IBCOMC1",63,0)
 ..S IBC=IBINS(IBX,0)
"RTN","IBCOMC1",64,0)
 ..S IBC0=$G(^DIC(36,+IBC,0))
"RTN","IBCOMC1",65,0)
 ..I IBSIN=1,$P(IBC0,U,1)]IBSINF,IBSINL]$P(IBC0,U,1) D SET Q
"RTN","IBCOMC1",66,0)
 ..I IBSIN=2 F IBXX=1:1:6 I $G(IBSIN(IBXX)),+IBC=+IBSIN(IBXX) D SET
"RTN","IBCOMC1",67,0)
 .;
"RTN","IBCOMC1",68,0)
 I '$O(^TMP("IBCOMC",$J,0)) D HD^IBCOMC2 W !!,"** NO RECORDS FOUND **" D ASK^IBCOMC2 G QUEQ
"RTN","IBCOMC1",69,0)
 D HD^IBCOMC2,WRT^IBCOMC2
"RTN","IBCOMC1",70,0)
 ;
"RTN","IBCOMC1",71,0)
QUEQ ; Exit clean-UP
"RTN","IBCOMC1",72,0)
 W ! D ^%ZISC K IBTMP,IBAIB,IBRF,IBRL,IBSIN,IBAGEF,IBAGEL,IBBDT,IBEDT,IBOUT,IBSINF,IBSINL,VA,VAERR,VADM,VAPA,^TMP("IBCOMC",$J)
"RTN","IBCOMC1",73,0)
 Q
"RTN","IBCOMC1",74,0)
 ;
"RTN","IBCOMC1",75,0)
SET ;   set data line for global
"RTN","IBCOMC1",76,0)
 ;S IBTMP(1)=PT NAME^SSN^AGE^DOB^CAT^DATE LAST VISIT
"RTN","IBCOMC1",77,0)
 ;S IBTMP(2)=INSURANCE NAME^REIMBURSE?^GROUP NAME
"RTN","IBCOMC1",78,0)
 ;           or Date Verified No Insurance on File and Patient Home Phone
"RTN","IBCOMC1",79,0)
 ;
"RTN","IBCOMC1",80,0)
 N IBTD,IBCAT
"RTN","IBCOMC1",81,0)
 S IBTD(+$G(^TMP("IBCOMC",$J,"DLT",DFN,"INP")))="Inp "
"RTN","IBCOMC1",82,0)
 S IBTD(+$G(^TMP("IBCOMC",$J,"DLT",DFN,"OUT")))="Out "
"RTN","IBCOMC1",83,0)
 S IBTD=$O(IBTD(""),-1) S IBTD=IBTD_U_IBTD(IBTD)
"RTN","IBCOMC1",84,0)
 S IBCAT=$P($$LST^DGMTU(DFN),U,4) S IBCAT=$S(IBCAT="C":"Yes",IBCAT="G":"GMT",1:"No")
"RTN","IBCOMC1",85,0)
 S IBTMP(1)=$S(+VADM(6):"*",1:"")_VADM(1)_U_"("_$E(VADM(1),1,1)_$P($P(VADM(2),U,2),"-",3)_")"_U_+VADM(4)_U_$P(VADM(3),U,2)_U_IBCAT_U_$P(IBTD,U,2)_$$FMTE^XLFDT(+IBTD,"5ZD")
"RTN","IBCOMC1",86,0)
 I IBSIN=3 S IBTMP(2)=$S(+IBINSV:"No Coverage Verified: "_$$FMTE^XLFDT(+IBINSV,"5ZD"),1:"No Insurance on File.")_"  Patient's Home Phone: "_$P(VAPA(8),U,1)
"RTN","IBCOMC1",87,0)
 I IBSIN'=3 S IBTMP(2)=$P(IBC0,U,1)_U_$P(IBC0,U,2)_U_$S($P($G(IBINS(IBX,355.3)),U,3)]"":$P(IBINS(IBX,355.3),U,3),1:"(No Plan Name)")
"RTN","IBCOMC1",88,0)
 ;
"RTN","IBCOMC1",89,0)
 ;   Set Global array
"RTN","IBCOMC1",90,0)
 S ^TMP("IBCOMC",$J,1,$S(IBAIB=2:IBTD,1:VADM(1)),DFN)=IBTMP(1)
"RTN","IBCOMC1",91,0)
 I IBSIN=3 S IBC=999999999
"RTN","IBCOMC1",92,0)
 S ^TMP("IBCOMC",$J,1,$S(IBAIB=2:IBTD,1:VADM(1)),DFN,+IBC)=IBTMP(2)
"RTN","IBCOMC1",93,0)
SETQ Q
"RTN","IBCOMC1",94,0)
 ;
"RTN","IBCOMC1",95,0)
DLT ;  Get DFN's for Date Last Treated Range
"RTN","IBCOMC1",96,0)
 N IBCBK,IBDA,IBFIL,IBQUERY,IBVAL,IBX,X,Y K ^TMP("IBCOMC",$J,"DLT")
"RTN","IBCOMC1",97,0)
 I (IBBDT="")!(IBEDT="") G DLTQ
"RTN","IBCOMC1",98,0)
 S IBFIL="",IBCBK="I '$P(Y0,U,6),$P(Y0,U,12)=2,$P(Y0,U,7) S ^TMP(""IBCOMC"",$J,""DLT"",Y,""INP"")=+Y0"
"RTN","IBCOMC1",99,0)
 S IBVAL("BDT")=IBBDT,IBVAL("EDT")=IBEDT
"RTN","IBCOMC1",100,0)
 ;
"RTN","IBCOMC1",101,0)
 ;   get DFNs for date last seen outpatient
"RTN","IBCOMC1",102,0)
 D SCAN^IBSDU("DATE/TIME",.IBVAL,IBFIL,IBCBK,1,0,"BACKWARD")
"RTN","IBCOMC1",103,0)
 ;
"RTN","IBCOMC1",104,0)
 ;   get DFNs for date last seen discharge date
"RTN","IBCOMC1",105,0)
 S IBX=IBBDT F  S IBX=$O(^DGPM("ATT3",IBX)) Q:('IBX)!(IBX>IBEDT)  D
"RTN","IBCOMC1",106,0)
 .S IBDA=0 F  S IBDA=$O(^DGPM("ATT3",IBX,IBDA)) Q:'IBDA  D
"RTN","IBCOMC1",107,0)
 ..S ^TMP("IBCOMC",$J,"DLT",+$P($G(^DGPM(IBDA,0)),U,3),"OUT")=IBX
"RTN","IBCOMC1",108,0)
DLTQ Q
"RTN","IBCOMC2")
0^78^B15997269
"RTN","IBCOMC2",1,0)
IBCOMC2 ;ALB/CMS - IDENTIFY PT BY AGE WITH OR WITHOUT INSURANCE (CON'T) ;10-09-98
"RTN","IBCOMC2",2,0)
 ;;2.0;INTEGRATED BILLING;**103,153,516,528**;21-MAR-94;Build 163
"RTN","IBCOMC2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMC2",4,0)
 Q
"RTN","IBCOMC2",5,0)
ENH ; Sort help Text
"RTN","IBCOMC2",6,0)
 W !!,?5,"Enter 1 to search by a Patient Name Range. (i.e. ADAMS to ADAMSZ)"
"RTN","IBCOMC2",7,0)
 W !,?5,"Enter 2 to search by Terminal Digit.  The output will be sorted"
"RTN","IBCOMC2",8,0)
 W !,?5,"by the 8th and 9th digits and then the 6th and 7th digits of the"
"RTN","IBCOMC2",9,0)
 W !,?5,"Patient's SSN.",!
"RTN","IBCOMC2",10,0)
 Q
"RTN","IBCOMC2",11,0)
 ;
"RTN","IBCOMC2",12,0)
INSH ; Search criteria help Text
"RTN","IBCOMC2",13,0)
 W !!,?5,"Enter 1 to List patients covered by policies in Insurance Co. Name Range"
"RTN","IBCOMC2",14,0)
 W !,?15,"(i.e. Sort By: MEDICARE  To: MEDICAREZZZ)"
"RTN","IBCOMC2",15,0)
 W !,?5,"Enter 2 to List patients covered by policies of the selected Insurance Co."
"RTN","IBCOMC2",16,0)
 W !,?15,"(User may enter up to six Companies.)"
"RTN","IBCOMC2",17,0)
 W !,?5,"Enter 3 to list patients with NO Coverage on file."
"RTN","IBCOMC2",18,0)
 Q
"RTN","IBCOMC2",19,0)
 ;
"RTN","IBCOMC2",20,0)
AGEH ; Sort AGE help text
"RTN","IBCOMC2",21,0)
 W !!,?5,"Enter an Age Range to sort by (1-250). Or press return at the Start Age"
"RTN","IBCOMC2",22,0)
 W !,?5,"prompt to not include Age range in search criteria."
"RTN","IBCOMC2",23,0)
 Q
"RTN","IBCOMC2",24,0)
 ;
"RTN","IBCOMC2",25,0)
HD ;Write Heading
"RTN","IBCOMC2",26,0)
 N IBX S IBPAGE=IBPAGE+1
"RTN","IBCOMC2",27,0)
 I IBOUT="E" W:($E(IOST,1,2)["C-") ! W "Patient Name^SSN^Age^DOB^Means Test?^Inp/Out^Last Visit^Insurance Name^Reimb VA?^Plan Name" Q
"RTN","IBCOMC2",28,0)
 W @IOF,!,"Patients "_$S(IBSIN=3:"Without",1:"With")_" Insurance Report",?50,$$FMTE^XLFDT($$NOW^XLFDT,"Z"),?70," Page ",IBPAGE
"RTN","IBCOMC2",29,0)
 I IBPAGE=1 D
"RTN","IBCOMC2",30,0)
 .W !,?5,"Sorted by: "_$S(IBAIB=1:"Patient Name",1:"Terminal Digit")_" Range: "_$S(IBRF="A":"FIRST",1:IBRF)_" to "_$S(IBRL="zzzzzz":"LAST",1:IBRL)
"RTN","IBCOMC2",31,0)
 .W !,?5,"Date Last Treated Range: "_$$FMTE^XLFDT(IBBDT,"Z")_" to "_$$FMTE^XLFDT(IBEDT,"Z")
"RTN","IBCOMC2",32,0)
 .I IBSIN=1 W !,?5,"Insurance Company Range: "_$S(IBSINF="A":"FIRST",1:IBSINF)_" to "_$S(IBSINL="zzzzzz":"LAST",1:IBSINL)
"RTN","IBCOMC2",33,0)
 .I IBSIN=3 W !,?5,"Patients with no Insurance on File"
"RTN","IBCOMC2",34,0)
 .I IBAGEF W !,?5,"Age Range: "_IBAGEF_" to "_IBAGEL
"RTN","IBCOMC2",35,0)
 .W !,?5,"*  -  Patient Deceased"
"RTN","IBCOMC2",36,0)
 .I IBSIN=2 W !,?5,"Active Policies with selected Insurance Companies:" F IBX=1:1:6 Q:'$D(IBSIN(IBX))  W !,?10,$P(IBSIN(IBX),U,2)
"RTN","IBCOMC2",37,0)
 W !!?58,"Means",!,"Patient Name   (SSN)",?39,"Age",?44,"DOB",?58,"Test?",?70,"Last Visit"
"RTN","IBCOMC2",38,0)
 W ! F IBX=1:1:80 W "="
"RTN","IBCOMC2",39,0)
 Q
"RTN","IBCOMC2",40,0)
 ;
"RTN","IBCOMC2",41,0)
WRT ;Write data lines
"RTN","IBCOMC2",42,0)
 N IBCDA,IBDA,IBDFN,IBINS,IBNA,IBPOL,IBPT,X,Y S IBQUIT=0
"RTN","IBCOMC2",43,0)
 S IBNA="" F  S IBNA=$O(^TMP("IBCOMC",$J,1,IBNA)) Q:(IBNA="")!(IBQUIT=1)  D
"RTN","IBCOMC2",44,0)
 .S IBDFN=0 F  S IBDFN=$O(^TMP("IBCOMC",$J,1,IBNA,IBDFN)) Q:('IBDFN)!(IBQUIT=1)  D
"RTN","IBCOMC2",45,0)
 ..S IBPT=$G(^TMP("IBCOMC",$J,1,IBNA,IBDFN))
"RTN","IBCOMC2",46,0)
 ..;
"RTN","IBCOMC2",47,0)
 ..I ($Y+5)>IOSL,(IBOUT="R") D  I IBQUIT=1 Q
"RTN","IBCOMC2",48,0)
 ...D ASK I IBQUIT=1 Q
"RTN","IBCOMC2",49,0)
 ...D HD
"RTN","IBCOMC2",50,0)
 ..;
"RTN","IBCOMC2",51,0)
 ..; Excel Output
"RTN","IBCOMC2",52,0)
 ..I IBOUT="E" W !,$P(IBPT,U,1)_U_$TR($TR($P(IBPT,U,2),"(",""),")","")_U_$P(IBPT,U,3,5)_U_$P($P(IBPT,U,6)," ")_U_$P($P(IBPT,U,6)," ",2)
"RTN","IBCOMC2",53,0)
 ..; Report Output
"RTN","IBCOMC2",54,0)
 ..I IBOUT="R" W !!,$E($P(IBPT,U,1),1,30)_"   "_$P(IBPT,U,2),?39,$P(IBPT,U,3),?44,$P(IBPT,U,4),?58,$P(IBPT,U,5),?65,$P(IBPT,U,6)
"RTN","IBCOMC2",55,0)
 ..;
"RTN","IBCOMC2",56,0)
 ..S IBDA=0 F  S IBDA=$O(^TMP("IBCOMC",$J,1,IBNA,IBDFN,IBDA)) Q:('IBDA)!(IBQUIT=1)  D
"RTN","IBCOMC2",57,0)
 ...S IBINS=$G(^TMP("IBCOMC",$J,1,IBNA,IBDFN,IBDA))
"RTN","IBCOMC2",58,0)
 ...I IBSIN=3 W:IBOUT="R" ! W:IBOUT="E" U W IBINS Q
"RTN","IBCOMC2",59,0)
 ...; Excel Output
"RTN","IBCOMC2",60,0)
 ...I IBOUT="E" W U_$P(IBINS,U,1,3)
"RTN","IBCOMC2",61,0)
 ...; Report Output
"RTN","IBCOMC2",62,0)
 ...I IBOUT="R" W !?3,$E($P(IBINS,U,1),1,30),?35,"Reimb VA? ",$P(IBINS,U,2),!?4,"Plan Name: ",$E($P(IBINS,U,3),1,65)
"RTN","IBCOMC2",63,0)
 ...;
"RTN","IBCOMC2",64,0)
 I 'IBQUIT D ASK
"RTN","IBCOMC2",65,0)
 Q
"RTN","IBCOMC2",66,0)
 ;
"RTN","IBCOMC2",67,0)
ASK ; Ask to Continue with display
"RTN","IBCOMC2",68,0)
 ; also called from IBCNSUR1 and IBCOMA1
"RTN","IBCOMC2",69,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCOMC2",70,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMC2",71,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCOMC2",72,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1
"RTN","IBCOMC2",73,0)
 Q
"RTN","IBCOMD")
0^83^B38054448
"RTN","IBCOMD",1,0)
IBCOMD ;ALB/CMS - GENERATE INSURANCE COMPANY LISTINGS;03-AUG-98
"RTN","IBCOMD",2,0)
 ;;2.0;INTEGRATED BILLING;**103,528**;21-MAR-94;Build 163
"RTN","IBCOMD",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMD",4,0)
 Q
"RTN","IBCOMD",5,0)
EN ; Entry point from option
"RTN","IBCOMD",6,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCOMD",7,0)
 N IBAIB,IBOUT,IBQUIT,IBCASE,IBFLD,IBQ,IBF,IBTY,X,Y
"RTN","IBCOMD",8,0)
 W !!,?10,"Generate Insurance Company Listings",!
"RTN","IBCOMD",9,0)
 S DIR("A",1)="Sort report by"
"RTN","IBCOMD",10,0)
 S DIR("A",2)="1  - Active Insurance Companies"
"RTN","IBCOMD",11,0)
 S DIR("A",3)="2  - Inactive Insurance Companies"
"RTN","IBCOMD",12,0)
 S DIR("A",4)="3  - Both"
"RTN","IBCOMD",13,0)
 S DIR("A",5)="  "
"RTN","IBCOMD",14,0)
 S DIR(0)="SAXB^1:Active;2:Inactive;3:Both"
"RTN","IBCOMD",15,0)
 S DIR("A")=" Select Number: ",DIR("B")="1",DIR("??")="^D ENH^IBCOMD"
"RTN","IBCOMD",16,0)
 D ^DIR K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBCOMD",17,0)
 I +Y'>0 G EXIT
"RTN","IBCOMD",18,0)
 S IBAIB=+Y
"RTN","IBCOMD",19,0)
 ;
"RTN","IBCOMD",20,0)
 W !!,"You may search for specific companies to be included in this report by"
"RTN","IBCOMD",21,0)
 W !,"'screening' companies based on the company name, street, city, or state."
"RTN","IBCOMD",22,0)
 W !,"You may select any combination of these fields and specify a 'range' of"
"RTN","IBCOMD",23,0)
 W !,"values that the field must fall between, or a specific value that the"
"RTN","IBCOMD",24,0)
 W !,"field must 'contain.'",!
"RTN","IBCOMD",25,0)
 ;
"RTN","IBCOMD",26,0)
 K IBFLD S IBFLD(1)="NAME",IBFLD(2)="STREET",IBFLD(3)="CITY",IBFLD(4)="STATE"
"RTN","IBCOMD",27,0)
 K IBCASE S IBQ=0 F  D  Q:IBQ  W !
"RTN","IBCOMD",28,0)
 .;
"RTN","IBCOMD",29,0)
 .; - ask for the field
"RTN","IBCOMD",30,0)
 .S DIR("A",1)="    Select a"_$S($D(IBCASE):"nother",1:"")_" field to screen Insurance Companies"
"RTN","IBCOMD",31,0)
 .S DIR("A",2)="  "
"RTN","IBCOMD",32,0)
 .S DIR("A",3)="      1  -  NAME"
"RTN","IBCOMD",33,0)
 .S DIR("A",4)="      2  -  STREET"
"RTN","IBCOMD",34,0)
 .S DIR("A",5)="      3  -  CITY"
"RTN","IBCOMD",35,0)
 .S DIR("A",6)="      4  -  STATE"
"RTN","IBCOMD",36,0)
 .S DIR("A",7)="  "
"RTN","IBCOMD",37,0)
 .S DIR(0)="SAOXB^1:NAME;2:STREET;3:CITY;4:STATE"
"RTN","IBCOMD",38,0)
 .S DIR("A")="         Select a field by Number: ",DIR("??")="^D FLD^IBCOMD"
"RTN","IBCOMD",39,0)
 .D ^DIR K DIR,DIROUT,DTOUT,DUOUT,DIRUT I +Y'>0 S IBQ=1 Q
"RTN","IBCOMD",40,0)
 .S IBF=+Y
"RTN","IBCOMD",41,0)
 .;
"RTN","IBCOMD",42,0)
 .; - if state was chosen, select a state and quit
"RTN","IBCOMD",43,0)
 .I IBF=4 D  Q
"RTN","IBCOMD",44,0)
 ..S DIC="^DIC(5,",DIC(0)="QEAMZ",DIC("A")="Select STATE: "
"RTN","IBCOMD",45,0)
 ..I $P($G(IBCASE(4)),"^",2) S DIC("B")=$P($G(^DIC(5,$P($G(IBCASE(4)),"^",2),0)),"^")
"RTN","IBCOMD",46,0)
 ..D ^DIC K DIC I Y'>0 K IBCASE(4) Q
"RTN","IBCOMD",47,0)
 ..S IBCASE(4)="^"_+Y
"RTN","IBCOMD",48,0)
 .;
"RTN","IBCOMD",49,0)
 .; - ask user to select values by 'range' or 'contains'
"RTN","IBCOMD",50,0)
 .S DIR("A")="Allow a (R)ange of values or a value that (C)ontains a specific string: "
"RTN","IBCOMD",51,0)
 .S DIR(0)="SAXB^R:RANGE;C:CONTAINS",DIR("??")="^D RAN^IBCOMD"
"RTN","IBCOMD",52,0)
 .I $P($G(IBCASE(IBF)),"^")'="" S DIC("B")=$P($G(IBCASE(IBF)),"^")
"RTN","IBCOMD",53,0)
 .D ^DIR K DIR,DIROUT,DTOUT,DUOUT,DIRUT I Y'="R",Y'="C" K IBCASE(IBF) Q
"RTN","IBCOMD",54,0)
 .S IBTY=Y
"RTN","IBCOMD",55,0)
 .;
"RTN","IBCOMD",56,0)
 .; - ask user to select value that 'contains'
"RTN","IBCOMD",57,0)
 .I IBTY="C" D  Q
"RTN","IBCOMD",58,0)
 ..S DIR(0)="FAO",DIR("A")=IBFLD(IBF)_" contains the value: "
"RTN","IBCOMD",59,0)
 ..I $P($G(IBCASE(IBF)),"^",2)'="" S DIC("B")=$P($G(IBCASE(IBF)),"^",2)
"RTN","IBCOMD",60,0)
 ..S DIR("??")="^D CON^IBCOMD" D ^DIR K DIR
"RTN","IBCOMD",61,0)
 ..I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) K IBCASE(IBF),DIROUT,DTOUT,DUOUT,DIRUT Q
"RTN","IBCOMD",62,0)
 ..I Y="" W !!,?5,"Note: Companies will be selected where ",IBFLD(IBF)," is null."
"RTN","IBCOMD",63,0)
 ..S IBCASE(IBF)=IBTY_"^"_Y
"RTN","IBCOMD",64,0)
 .;
"RTN","IBCOMD",65,0)
 .; - ask user to select a range of values
"RTN","IBCOMD",66,0)
 .D SELR
"RTN","IBCOMD",67,0)
 ;
"RTN","IBCOMD",68,0)
 ;
"RTN","IBCOMD",69,0)
 I '$D(IBCASE) W !!,"Please note that no screening fields were selected!",!
"RTN","IBCOMD",70,0)
 E  D  W !
"RTN","IBCOMD",71,0)
 .N I,H
"RTN","IBCOMD",72,0)
 .W !!,"The following conditions were selected:"
"RTN","IBCOMD",73,0)
 .S (H,I)=0 F  S I=$O(IBCASE(I)) Q:'I  D
"RTN","IBCOMD",74,0)
 ..W ! I H W ?3,"and"
"RTN","IBCOMD",75,0)
 ..S H=1 W ?8,IBFLD(I)
"RTN","IBCOMD",76,0)
 ..W ?18,$S(I=4:"Equals ",$P(IBCASE(I),"^")="C":"Contains ",1:"Between ")
"RTN","IBCOMD",77,0)
 ..W $S(I=4:$P($G(^DIC(5,+$P(IBCASE(I),"^",2),0)),"^"),$P(IBCASE(I),"^",2)="":"'FIRST'",1:$P(IBCASE(I),"^",2))
"RTN","IBCOMD",78,0)
 ..I $P(IBCASE(I),"^")="R" W " and ",$S($P(IBCASE(I),"^",3)="zzzzzz":"'LAST'",1:$P(IBCASE(I),"^",3))
"RTN","IBCOMD",79,0)
 ;
"RTN","IBCOMD",80,0)
 S IBOUT=$$OUT G:IBOUT="" EXIT
"RTN","IBCOMD",81,0)
 ;
"RTN","IBCOMD",82,0)
 D QUE
"RTN","IBCOMD",83,0)
 ;
"RTN","IBCOMD",84,0)
EXIT Q
"RTN","IBCOMD",85,0)
 ;
"RTN","IBCOMD",86,0)
 ;
"RTN","IBCOMD",87,0)
 ;
"RTN","IBCOMD",88,0)
SELR ; Select a range of values
"RTN","IBCOMD",89,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y,IBRF,IBRL
"RTN","IBCOMD",90,0)
SELRR S DIR(0)="FO",DIR("A")="START WITH '"_IBFLD(IBF)_"' VALUE"
"RTN","IBCOMD",91,0)
 S DIR("B")=$S($P($G(IBCASE(IBF)),"^",2)'="":$P($G(IBCASE(IBF)),"^",2),1:"FIRST")
"RTN","IBCOMD",92,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) K IBCASE(IBF) Q
"RTN","IBCOMD",93,0)
 S:Y="FIRST" Y="" S IBRF=Y
"RTN","IBCOMD",94,0)
 ;
"RTN","IBCOMD",95,0)
 S DIR(0)="FO",DIR("A")="GO TO '"_IBFLD(IBF)_"' VALUE"
"RTN","IBCOMD",96,0)
 S DIR("B")=$S($P($G(IBCASE(IBF)),"^",3)'="":$P($G(IBCASE(IBF)),"^",3),1:"LAST")
"RTN","IBCOMD",97,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) K IBCASE(IBF) Q
"RTN","IBCOMD",98,0)
 S:Y="LAST" Y="zzzzzz" S IBRL=Y
"RTN","IBCOMD",99,0)
 ;
"RTN","IBCOMD",100,0)
 ; - the 'go to' value must follow the 'start with' value
"RTN","IBCOMD",101,0)
 I $G(IBRL)']$G(IBRF) W !!,?5,"* The 'Go To' value must follow after the 'Start With' value. *",! G SELRR
"RTN","IBCOMD",102,0)
 S IBCASE(IBF)="R^"_IBRF_"^"_IBRL
"RTN","IBCOMD",103,0)
 Q
"RTN","IBCOMD",104,0)
 ;
"RTN","IBCOMD",105,0)
 ;
"RTN","IBCOMD",106,0)
ENH ; Active, Inactive or Both help Text
"RTN","IBCOMD",107,0)
 W !!,?5,"Enter 1 to search Active Insurance Companies"
"RTN","IBCOMD",108,0)
 W !,?5,"Enter 2 to search Inactive Insurance Companies"
"RTN","IBCOMD",109,0)
 W !,?5,"Enter 3 to include Active and Inactive Insurance Companies in Report",!
"RTN","IBCOMD",110,0)
 Q
"RTN","IBCOMD",111,0)
 ;
"RTN","IBCOMD",112,0)
FLD ;Field selection help text
"RTN","IBCOMD",113,0)
 W !!,?5,"Enter 1 to screen insurance company by Name"
"RTN","IBCOMD",114,0)
 W !,?5,"Enter 2 to screen insurance company by Street"
"RTN","IBCOMD",115,0)
 W !,?5,"Enter 3 to screen insurance company by City"
"RTN","IBCOMD",116,0)
 W !,?5,"Enter 4 to screen insurance company by State"
"RTN","IBCOMD",117,0)
 Q
"RTN","IBCOMD",118,0)
 ;
"RTN","IBCOMD",119,0)
RAN ; Help for the Range/Contains prompt.
"RTN","IBCOMD",120,0)
 W !!,?5,"Enter 'R' to enter a 'Start From' and 'Go To' range, or 'C' to enter"
"RTN","IBCOMD",121,0)
 W !,?5,"a specific string that the field value must contain.  Enter '^' to"
"RTN","IBCOMD",122,0)
 W !,?5,"eliminate this screen field and select another field."
"RTN","IBCOMD",123,0)
 Q
"RTN","IBCOMD",124,0)
 ;
"RTN","IBCOMD",125,0)
CON ; Help for the 'Contains' prompt.
"RTN","IBCOMD",126,0)
 W !!,?5,"Enter a string that the field value should contain.  Enter a <CR> to"
"RTN","IBCOMD",127,0)
 W !,?5,"find entries where the field value is null.  Enter '^' to eliminate"
"RTN","IBCOMD",128,0)
 W !,?5,"this screen field and select another field."
"RTN","IBCOMD",129,0)
 Q
"RTN","IBCOMD",130,0)
 ;
"RTN","IBCOMD",131,0)
 ;
"RTN","IBCOMD",132,0)
QUE ; Ask Device
"RTN","IBCOMD",133,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCOMD",134,0)
 S %ZIS="QM" D ^%ZIS G:POP QUEQ
"RTN","IBCOMD",135,0)
 I $D(IO("Q")) K IO("Q") D  G QUEQ
"RTN","IBCOMD",136,0)
 .S ZTRTN="BEG^IBCOMD1"
"RTN","IBCOMD",137,0)
 .S ZTSAVE("IBAIB")="",ZTSAVE("IBFLD(")="",ZTSAVE("IBOUT")=""
"RTN","IBCOMD",138,0)
 .I $D(IBCASE) S ZTSAVE("IBCASE(")=""
"RTN","IBCOMD",139,0)
 .S ZTDESC="IB - Identify Dup Insurance Companies"
"RTN","IBCOMD",140,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCOMD",141,0)
 ;
"RTN","IBCOMD",142,0)
 U IO
"RTN","IBCOMD",143,0)
 I $E(IOST,1,2)["C-" W !!,?15,"... One Moment Please ..."
"RTN","IBCOMD",144,0)
 D BEG^IBCOMD1
"RTN","IBCOMD",145,0)
QUEQ Q
"RTN","IBCOMD",146,0)
 ;
"RTN","IBCOMD",147,0)
OUT() ;
"RTN","IBCOMD",148,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMD",149,0)
 W !
"RTN","IBCOMD",150,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCOMD",151,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCOMD",152,0)
 S DIR("B")="Report"
"RTN","IBCOMD",153,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCOMD",154,0)
 Q Y
"RTN","IBCOMD1")
0^84^B27677991
"RTN","IBCOMD1",1,0)
IBCOMD1 ;ALB/CMS - GENERATE INSURANCE COMPANY LISTINGS ;03-AUG-98
"RTN","IBCOMD1",2,0)
 ;;2.0;INTEGRATED BILLING;**103,528**;21-MAR-94;Build 163
"RTN","IBCOMD1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMD1",4,0)
 Q
"RTN","IBCOMD1",5,0)
 ;
"RTN","IBCOMD1",6,0)
BEG ; Queued entry point.
"RTN","IBCOMD1",7,0)
 ;  Input variables:
"RTN","IBCOMD1",8,0)
 ;
"RTN","IBCOMD1",9,0)
 ;  IBCASE(n) = x ^ y ^ z  (Optional), where
"RTN","IBCOMD1",10,0)
 ;     n = 1-4  (1:Name, 2:Street, 3:City, 4:State)
"RTN","IBCOMD1",11,0)
 ;     x = C (Contains), or R (RANGE)
"RTN","IBCOMD1",12,0)
 ;     y = Pointer to the STATE (#5) file, if n=4
"RTN","IBCOMD1",13,0)
 ;         The 'Contains' value, if x = C
"RTN","IBCOMD1",14,0)
 ;         The 'Start From' value, if x = R
"RTN","IBCOMD1",15,0)
 ;     z = The 'Go To' value, if x = R
"RTN","IBCOMD1",16,0)
 ;
"RTN","IBCOMD1",17,0)
 ;  IBFLD(n) = x  (Required), where
"RTN","IBCOMD1",18,0)
 ;     n = 1-4  (1:Name, 2:Street, 3:City, 4:State)
"RTN","IBCOMD1",19,0)
 ;     x = NAME (n=1), STREET (n=2), CITY (n=3), STATE (n=4)
"RTN","IBCOMD1",20,0)
 ;
"RTN","IBCOMD1",21,0)
 ;  IBAIB - Required.   Include Active Insurance
"RTN","IBCOMD1",22,0)
 ;          1= Active Ins.   2= Inactive Ins. 3= Both
"RTN","IBCOMD1",23,0)
 ;  IBOUT - Required.   Output format
"RTN","IBCOMD1",24,0)
 ;          "R"= report format         "E"= Excel format
"RTN","IBCOMD1",25,0)
 ;
"RTN","IBCOMD1",26,0)
 N IBDA,IBDA0,IBDA11,IBDA13,IBI,IBPAGE,IBTMP,IBX,X,Y,IBJ,IBNOT
"RTN","IBCOMD1",27,0)
 ;
"RTN","IBCOMD1",28,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCOMD1",29,0)
 K ^TMP("IBCOMD",$J) S IBPAGE=0
"RTN","IBCOMD1",30,0)
 ;
"RTN","IBCOMD1",31,0)
 ; - must look at all entries in file #36
"RTN","IBCOMD1",32,0)
 S IBDA=0 F  S IBDA=$O(^DIC(36,IBDA)) Q:'IBDA  S IBDA0=$G(^(IBDA,0)) D
"RTN","IBCOMD1",33,0)
 .;
"RTN","IBCOMD1",34,0)
 .; - screen out active/inactive companies
"RTN","IBCOMD1",35,0)
 .I IBAIB=1,$P(IBDA0,U,5) Q
"RTN","IBCOMD1",36,0)
 .I IBAIB=2,'$P(IBDA0,U,5) Q
"RTN","IBCOMD1",37,0)
 .;
"RTN","IBCOMD1",38,0)
 .S IBDA11=$G(^DIC(36,IBDA,.11)),IBDA13=$G(^(.13))
"RTN","IBCOMD1",39,0)
 .;
"RTN","IBCOMD1",40,0)
 .; - screen out entries based on user-selected field screens
"RTN","IBCOMD1",41,0)
 .S (IBJ,IBNOT)=0 F  S IBJ=$O(IBCASE(IBJ)) Q:'IBJ  D  Q:IBNOT
"RTN","IBCOMD1",42,0)
 ..N IBD,VAL S IBD=IBCASE(IBJ)
"RTN","IBCOMD1",43,0)
 ..;
"RTN","IBCOMD1",44,0)
 ..; - check state first
"RTN","IBCOMD1",45,0)
 ..I IBJ=4 S:$P(IBDA11,"^",5)'=$P(IBD,"^",2) IBNOT=1 Q
"RTN","IBCOMD1",46,0)
 ..;
"RTN","IBCOMD1",47,0)
 ..; - find the field value to be evaluated
"RTN","IBCOMD1",48,0)
 ..S VAL=$S(IBJ=1:$P(IBDA0,"^"),1:$P(IBDA11,"^",$S(IBJ=2:1,1:4)))
"RTN","IBCOMD1",49,0)
 ..;
"RTN","IBCOMD1",50,0)
 ..; - check 'contains' values
"RTN","IBCOMD1",51,0)
 ..I $P(IBD,"^")="C" S:VAL'[$P(IBD,"^",2) IBNOT=1 Q
"RTN","IBCOMD1",52,0)
 ..;
"RTN","IBCOMD1",53,0)
 ..; - check 'range' values
"RTN","IBCOMD1",54,0)
 ..I VAL="" S IBNOT=1 Q  ; VAL must have a value in a range
"RTN","IBCOMD1",55,0)
 ..I $P(IBD,"^",2)]VAL S IBNOT=1 Q  ; VAL doesn't follow Start value
"RTN","IBCOMD1",56,0)
 ..I VAL]$P(IBD,"^",3) S IBNOT=1 ;    VAL follows the Go To value
"RTN","IBCOMD1",57,0)
 .;
"RTN","IBCOMD1",58,0)
 .Q:IBNOT  ; entry does not meet criteria
"RTN","IBCOMD1",59,0)
 .;
"RTN","IBCOMD1",60,0)
 .;
"RTN","IBCOMD1",61,0)
 .; - set entry in global
"RTN","IBCOMD1",62,0)
 .S IBTMP=$P(IBDA0,U,1)_U
"RTN","IBCOMD1",63,0)
 .S IBX=$P(IBDA0,U,2) S $P(IBTMP,U,2)=$S(IBX]"":$E($$EXPAND^IBTRE(36,1,IBX),1,20),1:"")_U
"RTN","IBCOMD1",64,0)
 .F IBX=1:1:6 S IBTMP=IBTMP_$P(IBDA11,U,IBX)_U
"RTN","IBCOMD1",65,0)
 .S IBX=$P(IBTMP,U,7) S $P(IBTMP,U,7)=$S(IBX]"":$$STATE^IBCF2(IBX),1:"")_U
"RTN","IBCOMD1",66,0)
 .S $P(IBTMP,U,9)=$P(IBDA13,U,1)
"RTN","IBCOMD1",67,0)
 .S ^TMP("IBCOMD",$J,+$P(IBDA0,U,5),$S($P(IBDA0,U,1)]"":$P(IBDA0,U,1),1:"ZZZZ"),+IBDA)=IBTMP
"RTN","IBCOMD1",68,0)
 ;
"RTN","IBCOMD1",69,0)
 I '$D(^TMP("IBCOMD",$J)) D HD W !!,"** NO RECORDS FOUND **" D ASK G QUEQ
"RTN","IBCOMD1",70,0)
 D HD:IBOUT="E",WRT
"RTN","IBCOMD1",71,0)
 ;
"RTN","IBCOMD1",72,0)
 ; Exit clean-UP
"RTN","IBCOMD1",73,0)
QUEQ K IBAIB,IBCASE,IBFLD,IBOUT,IBQUIT,^TMP("IBCOMD",$J)
"RTN","IBCOMD1",74,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCOMD1",75,0)
 W ! D ^%ZISC
"RTN","IBCOMD1",76,0)
 Q
"RTN","IBCOMD1",77,0)
 ;
"RTN","IBCOMD1",78,0)
 ;
"RTN","IBCOMD1",79,0)
HD ; Write Heading
"RTN","IBCOMD1",80,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCOMD1",81,0)
 I IBOUT="E" W:($E(IOST,1,2)["C-") ! W "Active/Inactive^Insurance Name^Reimburse?^Street Address 1^Street Address 2^Street Address 3^City^State^ZIP^Phone Number" Q
"RTN","IBCOMD1",82,0)
 W @IOF,"Generate Insurance Company Listings",?50,$$FMTE^XLFDT($$NOW^XLFDT,"Z"),?70," Page ",IBPAGE
"RTN","IBCOMD1",83,0)
 W !,"List of ",$S(IBAIB=1:"Active",IBAIB=2:"Inactive",1:"All")," Insurance Companies"
"RTN","IBCOMD1",84,0)
 ;
"RTN","IBCOMD1",85,0)
 ; - display definition of screens
"RTN","IBCOMD1",86,0)
 I $D(IBCASE) W ", where" D
"RTN","IBCOMD1",87,0)
 .N I,H
"RTN","IBCOMD1",88,0)
 .S (H,I)=0 F  S I=$O(IBCASE(I)) Q:'I  D
"RTN","IBCOMD1",89,0)
 ..W ! I H W ?3,"and"
"RTN","IBCOMD1",90,0)
 ..S H=1 W ?8,IBFLD(I)," "
"RTN","IBCOMD1",91,0)
 ..W $S(I=4:"Equals ",$P(IBCASE(I),"^")="C":"Contains ",1:"Between ")
"RTN","IBCOMD1",92,0)
 ..W $S(I=4:$P($G(^DIC(5,+$P(IBCASE(I),"^",2),0)),"^"),$P(IBCASE(I),"^",2)="":"'FIRST'",1:$P(IBCASE(I),"^",2))
"RTN","IBCOMD1",93,0)
 ..I $P(IBCASE(I),"^")="R" W " and ",$S($P(IBCASE(I),"^",3)="zzzzzz":"'LAST'",1:$P(IBCASE(I),"^",3))
"RTN","IBCOMD1",94,0)
 ;
"RTN","IBCOMD1",95,0)
 W !,"Insurance Name/Address",?33,"Reimburse?",?56,"Phone Number"
"RTN","IBCOMD1",96,0)
 W ! F IBX=1:1:79 W "="
"RTN","IBCOMD1",97,0)
 Q
"RTN","IBCOMD1",98,0)
 ;
"RTN","IBCOMD1",99,0)
WRT ; Write data lines
"RTN","IBCOMD1",100,0)
 N IBA,IBNA,IBOFF,IBACT,X,Y S IBQUIT=0
"RTN","IBCOMD1",101,0)
 S IBA="" F  S IBA=$O(^TMP("IBCOMD",$J,IBA)) Q:(IBA="")!(IBQUIT=1)  D
"RTN","IBCOMD1",102,0)
 .I IBPAGE,(IBOUT="R") D ASK I IBQUIT=1 Q
"RTN","IBCOMD1",103,0)
 .; Excel Output
"RTN","IBCOMD1",104,0)
 .I IBOUT="E" S IBACT=$S(IBA=1:"Inactive",1:"Active")
"RTN","IBCOMD1",105,0)
 .; Report Output
"RTN","IBCOMD1",106,0)
 .I IBOUT="R" D HD W !,$S(IBA=1:"Inactive Companies",1:"Active Companies"),!
"RTN","IBCOMD1",107,0)
 .S IBNA="" F  S IBNA=$O(^TMP("IBCOMD",$J,IBA,IBNA)) Q:(IBNA="")!(IBQUIT=1)  D
"RTN","IBCOMD1",108,0)
 ..S IBDA="" F  S IBDA=$O(^TMP("IBCOMD",$J,IBA,IBNA,IBDA)) Q:('IBDA)!(IBQUIT=1)  D
"RTN","IBCOMD1",109,0)
 ...S IBTMP=^TMP("IBCOMD",$J,IBA,IBNA,IBDA)
"RTN","IBCOMD1",110,0)
 ...S IBOFF=$S($P(IBTMP,U,4)]""!($P(IBTMP,U,5)]""):7,1:6)
"RTN","IBCOMD1",111,0)
 ...I ($Y+IBOFF)>IOSL,(IBOUT="R") D  I IBQUIT=1 Q
"RTN","IBCOMD1",112,0)
 ....D ASK I IBQUIT=1 Q
"RTN","IBCOMD1",113,0)
 ....D HD
"RTN","IBCOMD1",114,0)
 ...S IBTMP=^TMP("IBCOMD",$J,IBA,IBNA,IBDA)
"RTN","IBCOMD1",115,0)
 ...; Excel Output
"RTN","IBCOMD1",116,0)
 ...I IBOUT="E" W !,IBACT_U_IBTMP Q
"RTN","IBCOMD1",117,0)
 ...; Report Output
"RTN","IBCOMD1",118,0)
 ...W !!,$P(IBTMP,U,1),?33,$P(IBTMP,U,2),?56,$P(IBTMP,U,9)
"RTN","IBCOMD1",119,0)
 ...I $P(IBTMP,U,3)]"" W !,$P(IBTMP,U,3)
"RTN","IBCOMD1",120,0)
 ...I $P(IBTMP,U,4)]""!($P(IBTMP,U,5)]"") W !,$P(IBTMP,U,4) W:$P(IBTMP,U,4)]""&($P(IBTMP,U,5)]"") ", " W $P(IBTMP,U,5)
"RTN","IBCOMD1",121,0)
 ...W !,$P(IBTMP,U,6) W:$P(IBTMP,U,6)]""&($P(IBTMP,U,7)]"") ", " W $P(IBTMP,U,7),"  ",$P(IBTMP,U,8)
"RTN","IBCOMD1",122,0)
 I 'IBQUIT D ASK
"RTN","IBCOMD1",123,0)
 Q
"RTN","IBCOMD1",124,0)
 ;
"RTN","IBCOMD1",125,0)
ASK ; Ask to Continue with display
"RTN","IBCOMD1",126,0)
 ; Returns IBQUIT=1 if user Timed out or entered ^
"RTN","IBCOMD1",127,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCOMD1",128,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,IBI,X,Y
"RTN","IBCOMD1",129,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCOMD1",130,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1
"RTN","IBCOMD1",131,0)
 Q
"RTN","IBCOMN")
0^85^B13731474
"RTN","IBCOMN",1,0)
IBCOMN ;ALB/CMS - PATIENTS NO COVERAGE VERIFIED REPORT;10-09-98
"RTN","IBCOMN",2,0)
 ;;2.0;INTEGRATED BILLING;**103,528**;21-MAR-94;Build 163
"RTN","IBCOMN",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMN",4,0)
 Q
"RTN","IBCOMN",5,0)
EN ;Entry point from option
"RTN","IBCOMN",6,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","IBCOMN",7,0)
 N IBAIB,IBBDT,IBEDT,IBRF,IBRL,IBOUT,IBQUIT,X,Y
"RTN","IBCOMN",8,0)
 S (IBAIB,IBBDT,IBEDT,IBRF,IBRL)=""
"RTN","IBCOMN",9,0)
 ;
"RTN","IBCOMN",10,0)
VR ; Ask Verification Date Range
"RTN","IBCOMN",11,0)
 W !!,?2,"Patients with No Insurance Coverage Verification"
"RTN","IBCOMN",12,0)
 W !!,"Enter Verification Date Range"
"RTN","IBCOMN",13,0)
 D DATE^IBOUTL
"RTN","IBCOMN",14,0)
 I IBBDT=""!(IBEDT="") W "     <Date Range not entered>" G EXIT
"RTN","IBCOMN",15,0)
 ;
"RTN","IBCOMN",16,0)
 W ! S DIR("A",1)="Sort report by"
"RTN","IBCOMN",17,0)
 S DIR("A",2)="1  - Patient Name Range"
"RTN","IBCOMN",18,0)
 S DIR("A",3)="2  - Terminal Digit Range"
"RTN","IBCOMN",19,0)
 S DIR("A",4)="  "
"RTN","IBCOMN",20,0)
 S DIR(0)="SAXB^1:Patient Name;2:Terminal Digit"
"RTN","IBCOMN",21,0)
 S DIR("A")=" Select Number: ",DIR("B")="1",DIR("??")="^D ENH^IBCOMN" D ^DIR
"RTN","IBCOMN",22,0)
 I +Y'>0 S IBQUIT=1 G EXIT
"RTN","IBCOMN",23,0)
 S IBAIB=+Y
"RTN","IBCOMN",24,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBCOMN",25,0)
 W !! D @$S(IBAIB=1:"NR",1:"TR")
"RTN","IBCOMN",26,0)
 I $G(IBQUIT)=1 G EXIT
"RTN","IBCOMN",27,0)
 ;
"RTN","IBCOMN",28,0)
 S IBOUT=$$OUT G:IBOUT="" EXIT
"RTN","IBCOMN",29,0)
 ;
"RTN","IBCOMN",30,0)
 W !! D QUE
"RTN","IBCOMN",31,0)
 ;
"RTN","IBCOMN",32,0)
EXIT Q
"RTN","IBCOMN",33,0)
 ;
"RTN","IBCOMN",34,0)
NR ; Ask Name Range
"RTN","IBCOMN",35,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMN",36,0)
NRR S DIR(0)="FO",DIR("B")="FIRST",DIR("A")="START WITH PATIENT NAME"
"RTN","IBCOMN",37,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMN",38,0)
 S:Y="FIRST" Y="A" S IBRF=Y
"RTN","IBCOMN",39,0)
 S DIR(0)="FO",DIR("B")="LAST",DIR("A")="GO TO PATIENT NAME"
"RTN","IBCOMN",40,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMN",41,0)
 S:Y="LAST" Y="zzzzzz" S IBRL=Y
"RTN","IBCOMN",42,0)
 I $G(IBRL)']$G(IBRF) W !!,?5,"* The Go to Patient Name must follow after the Start with Name. *",! G NRR
"RTN","IBCOMN",43,0)
 Q
"RTN","IBCOMN",44,0)
 ;
"RTN","IBCOMN",45,0)
TR ; Ask Terminal Digit Range
"RTN","IBCOMN",46,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y
"RTN","IBCOMN",47,0)
 S DIR(0)="FO^1:9^K:X'?1.9N X"
"RTN","IBCOMN",48,0)
 S DIR("?")="Enter up to 9 digits of the Terminal Digit to include in Report"
"RTN","IBCOMN",49,0)
 S DIR("B")="0000",DIR("A")="Start with Terminal Digit"
"RTN","IBCOMN",50,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMN",51,0)
 S IBRF=$E((Y_"000000000"),1,9)
"RTN","IBCOMN",52,0)
 S DIR("B")="9999",DIR("A")="GO to Terminal Digit"
"RTN","IBCOMN",53,0)
 D ^DIR I ($D(DTOUT))!($D(DUOUT)) S IBQUIT=1 Q
"RTN","IBCOMN",54,0)
 S IBRL=$E((Y_"999999999"),1,9)
"RTN","IBCOMN",55,0)
 I IBRF>IBRL W !!,?5,"* The Go to Terminal Digit must follow after the Start with Digit. *",! G TR
"RTN","IBCOMN",56,0)
 Q
"RTN","IBCOMN",57,0)
 ;
"RTN","IBCOMN",58,0)
ENH ; Sort help Text
"RTN","IBCOMN",59,0)
 W !!,?5,"Enter 1 to search by a Patient Name Range. (i.e. ADAMS to ADAMSZ)"
"RTN","IBCOMN",60,0)
 W !!,?5,"Enter 2 to search by Terminal Digit.  The output will be sorted"
"RTN","IBCOMN",61,0)
 W !,"by the 8th and 9th digits and then the 6th and 7th digits of the"
"RTN","IBCOMN",62,0)
 W !,"Patient's SSN.",!
"RTN","IBCOMN",63,0)
 Q
"RTN","IBCOMN",64,0)
 ;
"RTN","IBCOMN",65,0)
QUE ; Ask Device
"RTN","IBCOMN",66,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","IBCOMN",67,0)
 W !,?10,"You may want to queue this report!",!
"RTN","IBCOMN",68,0)
 S %ZIS="QM" D ^%ZIS G:POP QUEQ
"RTN","IBCOMN",69,0)
 I $D(IO("Q")) K IO("Q") D  G QUEQ
"RTN","IBCOMN",70,0)
 .S ZTRTN="BEG^IBCOMN1",ZTSAVE("IBRF")="",ZTSAVE("IBRL")=""
"RTN","IBCOMN",71,0)
 .S ZTSAVE("IBAIB")="",ZTSAVE("IBBDT")="",ZTSAVE("IBEDT")="",ZTSAVE("IBOUT")=""
"RTN","IBCOMN",72,0)
 .S ZTDESC="IB - Patients w/no Coverage Verification"
"RTN","IBCOMN",73,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCOMN",74,0)
 ;
"RTN","IBCOMN",75,0)
 U IO
"RTN","IBCOMN",76,0)
 I $E(IOST,1,2)["C-" W !!,?15,"... One Moment Please ..."
"RTN","IBCOMN",77,0)
 D BEG^IBCOMN1
"RTN","IBCOMN",78,0)
 ;
"RTN","IBCOMN",79,0)
QUEQ ; Exit clean-UP
"RTN","IBCOMN",80,0)
 W ! D ^%ZISC K IBTMP,IBAIB,IBOUT,IBRF,IBRL,VA,VAERR,VADM,VAPA,^TMP("IBCOMN",$J)
"RTN","IBCOMN",81,0)
 Q
"RTN","IBCOMN",82,0)
 ;
"RTN","IBCOMN",83,0)
OUT() ;
"RTN","IBCOMN",84,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMN",85,0)
 W !
"RTN","IBCOMN",86,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCOMN",87,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCOMN",88,0)
 S DIR("B")="Report"
"RTN","IBCOMN",89,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCOMN",90,0)
 Q Y
"RTN","IBCOMN1")
0^86^B14298599
"RTN","IBCOMN1",1,0)
IBCOMN1 ;ALB/CMS - PATIENTS NO COVERAGE VERIFIED REPORT (CON'T);10-09-98
"RTN","IBCOMN1",2,0)
 ;;2.0;INTEGRATED BILLING;**103,528**;21-MAR-94;Build 163
"RTN","IBCOMN1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOMN1",4,0)
 Q
"RTN","IBCOMN1",5,0)
 ;
"RTN","IBCOMN1",6,0)
BEG ; Entry to run Patients w/no Coverage Verification Report
"RTN","IBCOMN1",7,0)
 ; Input variables:
"RTN","IBCOMN1",8,0)
 ; IBAIB - Required.    How to sort
"RTN","IBCOMN1",9,0)
 ;         1= Patient Name Range      2= Terminal Digit Range
"RTN","IBCOMN1",10,0)
 ;
"RTN","IBCOMN1",11,0)
 ; IBRF  - Required.  Name or Terminal Digit Range Start value
"RTN","IBCOMN1",12,0)
 ; IBRL  - Required.  Name or Terminal Digit Range Go to value
"RTN","IBCOMN1",13,0)
 ; IBBDT - Required.  Begining Verification Date Range
"RTN","IBCOMN1",14,0)
 ; IBEDT - Required.  Ending Verification Date Range
"RTN","IBCOMN1",15,0)
 ; IBOUT - Required.  Output format
"RTN","IBCOMN1",16,0)
 ;         "R"= report format        "E"= Excel format
"RTN","IBCOMN1",17,0)
 ;
"RTN","IBCOMN1",18,0)
 N DFN,IBDT,IBGP,IBI,IBQUIT,IBPAGE,IBTMP,IBTD,IBX,VA,VADM,VAERR,X,Y
"RTN","IBCOMN1",19,0)
 ;
"RTN","IBCOMN1",20,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCOMN1",21,0)
 K ^TMP("IBCOMN",$J) S IBPAGE=0,IBQUIT=0
"RTN","IBCOMN1",22,0)
 S IBDT=IBBDT F  S IBDT=$O(^IBA(354,"AVDT",IBDT)) Q:('IBDT)!(IBDT>IBEDT)  D
"RTN","IBCOMN1",23,0)
 .S DFN=0 F  S DFN=$O(^IBA(354,"AVDT",IBDT,DFN)) Q:'DFN  D
"RTN","IBCOMN1",24,0)
 ..K VA,VADM,VAERR,VAPA
"RTN","IBCOMN1",25,0)
 ..D DEM^VADPT,ADD^VADPT
"RTN","IBCOMN1",26,0)
 ..;
"RTN","IBCOMN1",27,0)
 ..;  I Pt. name out of range quit
"RTN","IBCOMN1",28,0)
 ..S VADM(1)=$P($G(VADM(1)),U,1) I VADM(1)="" Q
"RTN","IBCOMN1",29,0)
 ..I IBAIB=1,VADM(1)]IBRL Q
"RTN","IBCOMN1",30,0)
 ..I IBAIB=1,IBRF]VADM(1) Q
"RTN","IBCOMN1",31,0)
 ..;
"RTN","IBCOMN1",32,0)
 ..;  I Terminal Digit out of range quit
"RTN","IBCOMN1",33,0)
 ..I IBAIB=2 S IBTD=$$TERMDG^IBCONS2(DFN) I (+IBTD>IBRL)!(IBRF>+IBTD) Q
"RTN","IBCOMN1",34,0)
 ..;
"RTN","IBCOMN1",35,0)
 ..; Fix subscript error if terminal digit is null
"RTN","IBCOMN1",36,0)
 ..I IBAIB=2,IBTD="" S IBTD=" "
"RTN","IBCOMN1",37,0)
 ..;
"RTN","IBCOMN1",38,0)
 ..;   set data line, set global * if deceased
"RTN","IBCOMN1",39,0)
 ..;S IBTMP=PT NAME^SSN^AGE^DOB^HOME PHONE^VERIFICATION NO COV
"RTN","IBCOMN1",40,0)
 ..S IBTMP=$S($G(VADM(6)):"*",1:"")_VADM(1)_U_$P($P(VADM(2),U,2),"-",3)_U_+VADM(4)_U_$$FMTE^XLFDT(VADM(3),"5ZD")_U_$P(VAPA(8),U,1)_U_$$FMTE^XLFDT(IBDT,"5ZD")
"RTN","IBCOMN1",41,0)
 ..S ^TMP("IBCOMN",$J,$S(IBAIB=2:IBTD,1:VADM(1)),DFN)=IBTMP
"RTN","IBCOMN1",42,0)
 ..;
"RTN","IBCOMN1",43,0)
 ;
"RTN","IBCOMN1",44,0)
 I '$D(^TMP("IBCOMN",$J)) D HD W !!,"** NO RECORDS FOUND **" D ASK G QUEQ
"RTN","IBCOMN1",45,0)
 D HD,WRT
"RTN","IBCOMN1",46,0)
 ;
"RTN","IBCOMN1",47,0)
QUEQ ; Exit clean-UP
"RTN","IBCOMN1",48,0)
 W ! D ^%ZISC K IBTMP,IBAIB,IBOUT,IBRF,IBRL,VA,VAERR,VADM,VAPA,^TMP("IBCOMN",$J)
"RTN","IBCOMN1",49,0)
 Q
"RTN","IBCOMN1",50,0)
 ;
"RTN","IBCOMN1",51,0)
HD ;Write Heading
"RTN","IBCOMN1",52,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCOMN1",53,0)
 I IBOUT="E" W:($E(IOST,1,2)["C-") ! W "Patient Name^SSN^Age^DOB^Phone^Verified" Q
"RTN","IBCOMN1",54,0)
 W @IOF,!,"Patients w/No Coverage Verification Date Report",?50,$$FMTE^XLFDT($$NOW^XLFDT,"Z"),?70," Page ",IBPAGE
"RTN","IBCOMN1",55,0)
 W !,?5,"Verification Date Range: "_$$FMTE^XLFDT(IBBDT,"Z")_" to "_$$FMTE^XLFDT(IBEDT,"Z")
"RTN","IBCOMN1",56,0)
 W !,?5,"  Sorted by: "_$S(IBAIB=1:"Patient Name",1:"Terminal Digit")_"  Range: "_$S(IBRF="A":"FIRST",1:IBRF)_" to "_$S(IBRL="zzzzzz":"LAST",1:IBRL)
"RTN","IBCOMN1",57,0)
 W !,?20,"(*  - Patient Deceased)"
"RTN","IBCOMN1",58,0)
 W !,"Patient Name",?31,"SSN",?38,"Age",?43,"DOB",?55,"Phone",?70,"Verified"
"RTN","IBCOMN1",59,0)
 W ! F IBX=1:1:79 W "="
"RTN","IBCOMN1",60,0)
 Q
"RTN","IBCOMN1",61,0)
 ;
"RTN","IBCOMN1",62,0)
WRT ;Write data lines
"RTN","IBCOMN1",63,0)
 N IBA,IBDFN,IBPT,X,Y S IBQUIT=0
"RTN","IBCOMN1",64,0)
 S IBA="" F  S IBA=$O(^TMP("IBCOMN",$J,IBA)) Q:(IBA="")!(IBQUIT=1)  D
"RTN","IBCOMN1",65,0)
 .S IBDFN=0 F  S IBDFN=$O(^TMP("IBCOMN",$J,IBA,IBDFN)) Q:('IBDFN)!(IBQUIT=1)  D
"RTN","IBCOMN1",66,0)
 ..S IBPT=$G(^TMP("IBCOMN",$J,IBA,IBDFN))
"RTN","IBCOMN1",67,0)
 ..;
"RTN","IBCOMN1",68,0)
 ..I ($Y+5)>IOSL,(IBOUT="R") D  I IBQUIT=1 Q
"RTN","IBCOMN1",69,0)
 ...D ASK I IBQUIT=1 Q
"RTN","IBCOMN1",70,0)
 ...D HD
"RTN","IBCOMN1",71,0)
 ..;
"RTN","IBCOMN1",72,0)
 ..; Excel Output
"RTN","IBCOMN1",73,0)
 ..I IBOUT="E" W !,$P(IBPT,U,1)_U_$E($P(IBPT,U,1),1,1)_$P(IBPT,U,2)_U_$P(IBPT,U,3,6) Q
"RTN","IBCOMN1",74,0)
 ..; Report Output
"RTN","IBCOMN1",75,0)
 ..W !,$E($P(IBPT,U,1),1,30),?31,$E($P(IBPT,U,1),1,1),$P(IBPT,U,2),?38,$J($P(IBPT,U,3),3),?43,$P(IBPT,U,4),?55,$E($P(IBPT,U,5),1,15),?70,$P(IBPT,U,6)
"RTN","IBCOMN1",76,0)
 ..;
"RTN","IBCOMN1",77,0)
 I 'IBQUIT D ASK
"RTN","IBCOMN1",78,0)
 Q
"RTN","IBCOMN1",79,0)
 ;
"RTN","IBCOMN1",80,0)
ASK ; Ask to Continue with display
"RTN","IBCOMN1",81,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","IBCOMN1",82,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOMN1",83,0)
 S DIR(0)="E" D ^DIR
"RTN","IBCOMN1",84,0)
 I ($D(DIRUT))!($D(DUOUT)) S IBQUIT=1
"RTN","IBCOMN1",85,0)
 Q
"RTN","IBCONS1")
0^103^B125225379
"RTN","IBCONS1",1,0)
IBCONS1 ;ALB/AAS - NSC PATIENTS W/ INS BACKGROUND PRINTS ;7 JUN 90
"RTN","IBCONS1",2,0)
 ;;2.0;INTEGRATED BILLING;**66,80,137,516,528**;21-MAR-94;Build 163
"RTN","IBCONS1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCONS1",4,0)
 ;
"RTN","IBCONS1",5,0)
 ;MAP TO DGCRONS1
"RTN","IBCONS1",6,0)
 ;
"RTN","IBCONS1",7,0)
EN ; Inpatient Discharge entry to que background once weekly
"RTN","IBCONS1",8,0)
 S IBINPT=2,IBSUB="AMV3" G QUEUE
"RTN","IBCONS1",9,0)
 ;
"RTN","IBCONS1",10,0)
EN1 ; Inpatient Admission entry to que background once weekly
"RTN","IBCONS1",11,0)
 S IBINPT=1,IBSUB="AMV1" G QUEUE
"RTN","IBCONS1",12,0)
 ;
"RTN","IBCONS1",13,0)
EN2 ; Outpatient entry to que background once weekly
"RTN","IBCONS1",14,0)
 S IBINPT=0,IBSUB=""
"RTN","IBCONS1",15,0)
 ;
"RTN","IBCONS1",16,0)
QUEUE ; Set up the background job to run for the previous week
"RTN","IBCONS1",17,0)
 ;   o  For All Divisions
"RTN","IBCONS1",18,0)
 ;   o  For Insured veterans with unbilled episodes of care
"RTN","IBCONS1",19,0)
 ;   o  With the output sorted by Terminal Digit
"RTN","IBCONS1",20,0)
 ;
"RTN","IBCONS1",21,0)
 K ^TMP($J)
"RTN","IBCONS1",22,0)
 S X="T",%DT="" D ^%DT S IBEND=+Y
"RTN","IBCONS1",23,0)
 S X="T-7",%DT="" D ^%DT S IBBEG=+Y K %DT
"RTN","IBCONS1",24,0)
 S (VAUTD,IBSELUBL,IBSELTRM,IBSELRNB)=1
"RTN","IBCONS1",25,0)
 U IO G BEGIN^IBCONSC
"RTN","IBCONS1",26,0)
 ;
"RTN","IBCONS1",27,0)
 ;
"RTN","IBCONS1",28,0)
LOOP25 ; Print all NSC w/Insurance reports.
"RTN","IBCONS1",29,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCONS1",30,0)
 S IBQUIT=0,IBFL=1,IBHDRDV="",IBSUM=0,IBPTINFO="" I +$G(IBSELCDV),IBOUT="R" D HDRDV^IBCONSC
"RTN","IBCONS1",31,0)
 I IBOUT="E" D PHDL
"RTN","IBCONS1",32,0)
 S IBDV="" F  S IBDV=$O(^TMP($J,IBDV)) Q:IBDV=""  I IBDV'="TOTAL" D LOOP3 Q:IBQUIT
"RTN","IBCONS1",33,0)
 ;
"RTN","IBCONS1",34,0)
 G:IBQUIT Q S IBSUM=1,IBPAGE=0 D:IBOUT="R" HEAD Q:IBQUIT
"RTN","IBCONS1",35,0)
 S IBDV="" F  S IBDV=$O(^TMP($J,"TOTAL",IBDV)) Q:IBDV=""  D PRNSUM
"RTN","IBCONS1",36,0)
 D PAUSE
"RTN","IBCONS1",37,0)
 ;
"RTN","IBCONS1",38,0)
Q K %,%DT,B,I,J,K,L,M,X,X1,X2,Y,DFN,IBCNT,IBIFN,IBBILL,IBDATE,IBFLAG,IBI,IBDT,IBPAGE,IBL,IBHD,IBBEG1,IBHDRDV,IBSUM
"RTN","IBCONS1",39,0)
 K IBBEG,IBEND,IBOUT,IBINPT,IBFLAG,IBNAME,IBAPPT,IBDC,IBDAT,IBDFN,POP,IBNEWPT,IBPTINFO,^TMP($J)
"RTN","IBCONS1",40,0)
 Q
"RTN","IBCONS1",41,0)
 ;
"RTN","IBCONS1",42,0)
 ;
"RTN","IBCONS1",43,0)
LOOP3 ; Loop through billed, unbilled, or both types of episodes of care.
"RTN","IBCONS1",44,0)
 I +$G(IBSELUBL) S IBBILL=1,IBNAME="",IBPAGE=0 K IBFLAG D:IBOUT="R" HEAD Q:IBQUIT  D LOOP31 Q:IBQUIT
"RTN","IBCONS1",45,0)
 I +$G(IBSELBNA)!+$G(IBSELBIL) S IBBILL=2,IBNAME="",IBPAGE=0 K IBFLAG D:IBOUT="R" HEAD Q:IBQUIT  D LOOP31 Q:IBQUIT
"RTN","IBCONS1",46,0)
 Q
"RTN","IBCONS1",47,0)
 ;
"RTN","IBCONS1",48,0)
LOOP31 ; Loop through each name or terminal digit (and associated DFN).
"RTN","IBCONS1",49,0)
 F  S IBNAME=$O(^TMP($J,IBDV,IBBILL,IBNAME)) D  Q:IBNAME=""!(IBQUIT)
"RTN","IBCONS1",50,0)
 . I IBNAME="",'$D(IBFLAG) W !!,"No matches found.",!
"RTN","IBCONS1",51,0)
 . Q:IBNAME=""
"RTN","IBCONS1",52,0)
 . S DFN=0 F  S DFN=$O(^TMP($J,IBDV,IBBILL,IBNAME,DFN)) Q:'DFN  S IBNEWPT=1 D LOOP4 Q:IBQUIT
"RTN","IBCONS1",53,0)
 Q
"RTN","IBCONS1",54,0)
 ;
"RTN","IBCONS1",55,0)
LOOP4 ; Loop through each episode of care for a patient.
"RTN","IBCONS1",56,0)
 S IBDAT="" F I=0:0 S IBDAT=$O(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT)) Q:IBDAT=""!(IBQUIT)  D PRINT I $Y>$S($D(IOSL):(IOSL-6),1:6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",57,0)
 Q
"RTN","IBCONS1",58,0)
 ;
"RTN","IBCONS1",59,0)
PRINT ; Print each detail line.
"RTN","IBCONS1",60,0)
 I '$G(IBSELRNB),$D(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2)) Q  ; exclude episodes with reason not billable
"RTN","IBCONS1",61,0)
 I +$G(IBSELRNB)=2,'$D(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2)) Q  ; exclude episode w/o RNB ** PATCH 66
"RTN","IBCONS1",62,0)
 I IBBILL=2,'$G(IBSELBNA),+$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT))=1 Q  ; non-auth episodes  ** PATCH 66
"RTN","IBCONS1",63,0)
 I IBBILL=2,'$G(IBSELBIL),+$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT))=2 Q  ; auth episodes  ** PATCH 66
"RTN","IBCONS1",64,0)
 ;
"RTN","IBCONS1",65,0)
 D SUMTOT S IBFLAG=1 D PID^VADPT6
"RTN","IBCONS1",66,0)
 I IBOUT="E" S IBPTINFO=$P($G(^DG(40.8,+IBDV,0)),"^")_U_VA("BID")_U_$P(^DPT(DFN,0),"^")_U_VA("PID")_U_$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",6)
"RTN","IBCONS1",67,0)
 ;
"RTN","IBCONS1",68,0)
 I +$G(IBNEWPT) W:IBOUT="R" ! D PTPRNT S IBNEWPT=0
"RTN","IBCONS1",69,0)
 W:IBOUT="R" !,VA("BID"),?6,$E($P(^DPT(DFN,0),"^"),1,20),?28,VA("PID"),?42,$E($P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",6),1,16) K VA,VAERR
"RTN","IBCONS1",70,0)
 S Y=IBDAT X ^DD("DD") W:IBOUT="R" ?60 W:IBOUT="E" U W Y
"RTN","IBCONS1",71,0)
 ;
"RTN","IBCONS1",72,0)
 ; -- print insurance, use ibcns1 calls
"RTN","IBCONS1",73,0)
 S X=$$INSP(DFN,IBDAT) W:IBOUT="R" ?82 W:IBOUT="E" U W X
"RTN","IBCONS1",74,0)
 ;
"RTN","IBCONS1",75,0)
 ; -- print reason not billable
"RTN","IBCONS1",76,0)
 I $G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2))]"" W:IBOUT="R" ?115,$E(^(2),1,16) W:IBOUT="E" U_^(2)
"RTN","IBCONS1",77,0)
 ;
"RTN","IBCONS1",78,0)
 I IBOUT="E",'IBINPT W U
"RTN","IBCONS1",79,0)
 S X=$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,1))
"RTN","IBCONS1",80,0)
 I X]"" W:IBOUT="R" !?10 W $P(X,"^") I $P(X,"^",2)]"" W " with " F IBDC=2:1 Q:$P(X,"^",IBDC)=""  W $P(X,"^",IBDC),", "
"RTN","IBCONS1",81,0)
 S X=^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT) Q:'$L(X)  F K=2:1 S IBIFN=$P(X,"^",K) Q:IBIFN=""  D PRINT1
"RTN","IBCONS1",82,0)
 Q
"RTN","IBCONS1",83,0)
 ;
"RTN","IBCONS1",84,0)
PRINT1 ; If an episode of care has been billed, display billing information.
"RTN","IBCONS1",85,0)
 D GVAR^IBCBB
"RTN","IBCONS1",86,0)
 I IBOUT="E" D
"RTN","IBCONS1",87,0)
 . I K>2 D XLCOLS(4,"")
"RTN","IBCONS1",88,0)
 . W U_$P(^DGCR(399,IBIFN,0),"^")_U_$P($G(^DGCR(399.3,+IBAT,0)),"^",4),"-",$S(IBCL<3:"INPT",IBCL>2:"OUTP",1:"")
"RTN","IBCONS1",89,0)
 . W U_$S(IBST=1:"Entered",IBST=2:"Request MRA",IBST=3:"Authorized",IBST=4:"Prnt/Trans",IBST=7:"Cancelled",IBST=0:"Closed",1:"")
"RTN","IBCONS1",90,0)
 . W U_$E(IBFDT,4,5)_"/"_$E(IBFDT,6,7)_"/"_$E(IBFDT,2,3)_U_$E(IBTDT,4,5)_"/"_$E(IBTDT,6,7)_"/"_$E(IBTDT,2,3)
"RTN","IBCONS1",91,0)
 . W U_$S($P(IBND0,U,21)="S":"s",$P(IBND0,U,21)="T":"t",1:"")_U
"RTN","IBCONS1",92,0)
 I IBOUT="R" D
"RTN","IBCONS1",93,0)
 . W !?10,$P(^DGCR(399,IBIFN,0),"^"),?20,$P($G(^DGCR(399.3,+IBAT,0)),"^",4),"-",$S(IBCL<3:"INPT",IBCL>2:"OUTP",1:"")
"RTN","IBCONS1",94,0)
 . W ?37,$S(IBST=1:"Entered",IBST=2:"Request MRA",IBST=3:"Authorized",IBST=4:"Prnt/Trans",IBST=7:"Cancelled",IBST=0:"Closed",1:"")
"RTN","IBCONS1",95,0)
 . W ?50,"From: ",$E(IBFDT,4,5)_"/"_$E(IBFDT,6,7)_"/"_$E(IBFDT,2,3)
"RTN","IBCONS1",96,0)
 . W ?68,"To: ",$E(IBTDT,4,5)_"/"_$E(IBTDT,6,7)_"/"_$E(IBTDT,2,3)
"RTN","IBCONS1",97,0)
 . W ?88,$S($P(IBND0,U,21)="S":"s",$P(IBND0,U,21)="T":"t",1:"")
"RTN","IBCONS1",98,0)
 . W ?91,"Debtor: "
"RTN","IBCONS1",99,0)
 I IBWHO="i",$D(^DIC(36,+IBNDMP,0)) W $P(^(0),"^")
"RTN","IBCONS1",100,0)
 I IBWHO="o",$D(^DIC(4,+$P(IBNDM,"^",11),0)) W $P(^(0),"^")
"RTN","IBCONS1",101,0)
 I IBWHO="p" W $P(^DPT(DFN,0),"^")
"RTN","IBCONS1",102,0)
 D END^IBCBB1 Q
"RTN","IBCONS1",103,0)
 ;
"RTN","IBCONS1",104,0)
HEAD ; Print header; don't pause on first pass through.
"RTN","IBCONS1",105,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,IBQUIT)=1 Q
"RTN","IBCONS1",106,0)
 D:'IBFL PAUSE Q:IBQUIT  S IBFL=0 N IBI
"RTN","IBCONS1",107,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCONS1",108,0)
 ; -- ibformfd = skip only intial form feed, need ffs for each div.
"RTN","IBCONS1",109,0)
 I $E(IOST,1,2)["C-"!(IBPAGE>1)!($G(IBFORMFD)) W @IOF
"RTN","IBCONS1",110,0)
 S IBFORMFD=1
"RTN","IBCONS1",111,0)
 S IBI=$S(IBBILL=2:"PREVIOUSLY ",1:"UN")_"BILLED PATIENTS"
"RTN","IBCONS1",112,0)
 I '$G(IBSELCDV) S IBI=IBI_" for Division "_$P($G(^DG(40.8,+IBDV,0)),"^")
"RTN","IBCONS1",113,0)
 I +$G(IBSELCDV) S IBI=IBI_IBHDRDV
"RTN","IBCONS1",114,0)
 I +$G(IBSUM) S IBI="Summary"
"RTN","IBCONS1",115,0)
 W IBHD,!,IBI W:$L(IBI)>78 ! W ?80,"Printed: ",IBDATE,?118,"Page: ",IBPAGE
"RTN","IBCONS1",116,0)
 I +$G(IBSUM) W !,?40,"Unbilled",?53,"Unbilled w/RNB",?70,"Billed/Not Auth",?88,"Billed/Auth",?103,"# Visits",?117,"# Patients",!,IBL Q
"RTN","IBCONS1",117,0)
 W !,"PT ID PATIENT",?28,"SSN",?42,"ELIGIBILITY",?60,"DATE OF ",$S(IBINPT=2:"DISCHARGE",1:"CARE"),?82,"INSURANCE COMPANIES"
"RTN","IBCONS1",118,0)
 W:+$G(IBSELRNB) ?115,"NOT BILLABLE"
"RTN","IBCONS1",119,0)
 W !,IBL
"RTN","IBCONS1",120,0)
 Q
"RTN","IBCONS1",121,0)
 ;
"RTN","IBCONS1",122,0)
INSP(DFN,IBDAT) ; -- print ins. company on report logic
"RTN","IBCONS1",123,0)
 N X,IBDD,IBDDINS,IBCNT
"RTN","IBCONS1",124,0)
 S IBCNT=0,IBDDINS=""
"RTN","IBCONS1",125,0)
 I '$G(DFN)!('$G(IBDAT)) G INSPQ
"RTN","IBCONS1",126,0)
 S IBDD="" D ALL^IBCNS1(DFN,"IBDD",4,IBDAT)
"RTN","IBCONS1",127,0)
 S X=0 F  S X=$O(IBDD(X)) Q:'X!(IBCNT>2)  D
"RTN","IBCONS1",128,0)
 .S IBCNT=IBCNT+1
"RTN","IBCONS1",129,0)
 .I IBCNT>1 S IBDDINS=IBDDINS_","
"RTN","IBCONS1",130,0)
 .S IBDDINS=IBDDINS_$E($P($G(^DIC(36,+$G(IBDD(X,0)),0)),"^"),1,10)
"RTN","IBCONS1",131,0)
 S IBDDINS=$E(IBDDINS,1,30)
"RTN","IBCONS1",132,0)
 I $G(IBDD(0))>3 S IBDDINS=IBDDINS_"*"
"RTN","IBCONS1",133,0)
INSPQ Q IBDDINS
"RTN","IBCONS1",134,0)
 ;
"RTN","IBCONS1",135,0)
PAUSE Q:$E(IOST,1,2)'="C-"
"RTN","IBCONS1",136,0)
 F J=$Y:1:(IOSL-5) W !
"RTN","IBCONS1",137,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBCONS1",138,0)
 Q
"RTN","IBCONS1",139,0)
PRNSUM ; print 1 line of the summary
"RTN","IBCONS1",140,0)
 N IBSUM S IBSUM=$G(^TMP($J,"TOTAL",IBDV)) Q:IBSUM=""
"RTN","IBCONS1",141,0)
 W:IBOUT="R" !
"RTN","IBCONS1",142,0)
 I IBOUT="E" D XLCOLS(5,"")
"RTN","IBCONS1",143,0)
 W $S(IBDV="TOTAL":IBDV,1:$P($G(^DG(40.8,+IBDV,0)),U,1))
"RTN","IBCONS1",144,0)
 I IBOUT="E" W U_$P(IBSUM,U,2,5)_U_$P(IBSUM,U,1)_U_$P(IBSUM,U,6) Q
"RTN","IBCONS1",145,0)
 W ?40,$P(IBSUM,U,2),?58,$P(IBSUM,U,3),?75,$P(IBSUM,U,4),?91,$P(IBSUM,U,5),?105,$P(IBSUM,U,1),?120,$P(IBSUM,U,6)
"RTN","IBCONS1",146,0)
 Q
"RTN","IBCONS1",147,0)
DATE(X) ;
"RTN","IBCONS1",148,0)
 N Y S Y="" I +$G(X) S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCONS1",149,0)
 Q Y
"RTN","IBCONS1",150,0)
 ;
"RTN","IBCONS1",151,0)
SUMTOT ; total cnt of visits ^ cnt unbilled ^ cnt unbilled w/RNB ^ cnt billed/not auth ^ cnt billed/auth ^ cnt of pats
"RTN","IBCONS1",152,0)
 N IBSUM,IBTOT,IBBILLED,IBRMARK
"RTN","IBCONS1",153,0)
 S IBBILLED=$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT)),IBRMARK=$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2))
"RTN","IBCONS1",154,0)
 S IBSUM=$G(^TMP($J,"TOTAL",+IBDV)),IBTOT=$G(^TMP($J,"TOTAL","TOTAL"))
"RTN","IBCONS1",155,0)
 S $P(IBSUM,U,1)=+$P(IBSUM,U,1)+1,$P(IBTOT,U,1)=+$P(IBTOT,U,1)+1
"RTN","IBCONS1",156,0)
 I 'IBBILLED,IBRMARK="" S $P(IBSUM,U,2)=$P(IBSUM,U,2)+1,$P(IBTOT,U,2)=$P(IBTOT,U,2)+1
"RTN","IBCONS1",157,0)
 I 'IBBILLED,IBRMARK'="" S $P(IBSUM,U,3)=$P(IBSUM,U,3)+1,$P(IBTOT,U,3)=$P(IBTOT,U,3)+1
"RTN","IBCONS1",158,0)
 I +IBBILLED=1 S $P(IBSUM,U,4)=$P(IBSUM,U,4)+1,$P(IBTOT,U,4)=$P(IBTOT,U,4)+1
"RTN","IBCONS1",159,0)
 I +IBBILLED=2 S $P(IBSUM,U,5)=$P(IBSUM,U,5)+1,$P(IBTOT,U,5)=$P(IBTOT,U,5)+1
"RTN","IBCONS1",160,0)
 I '$D(^TMP($J,"TOTAL",+IBDV,DFN)) S $P(IBSUM,U,6)=$P(IBSUM,U,6)+1
"RTN","IBCONS1",161,0)
 I '$D(^TMP($J,"TOTAL","TOTAL",DFN)) S $P(IBTOT,U,6)=$P(IBTOT,U,6)+1
"RTN","IBCONS1",162,0)
 I +IBDV S ^TMP($J,"TOTAL",+IBDV)=IBSUM,^TMP($J,"TOTAL",+IBDV,DFN)=""
"RTN","IBCONS1",163,0)
 S ^TMP($J,"TOTAL","TOTAL")=IBTOT,^TMP($J,"TOTAL","TOTAL",DFN)=""
"RTN","IBCONS1",164,0)
 Q
"RTN","IBCONS1",165,0)
 ;
"RTN","IBCONS1",166,0)
PTPRNT ; print patient specific data is requested:  Rate Disabilities and expanded insurance Info
"RTN","IBCONS1",167,0)
 ;
"RTN","IBCONS1",168,0)
 N IBLN1,IBI,IBX,IBY,IBD,IBLN2,IBLN3,IBY1,IBJ,IBY3,IBRIDE,IBPLAN,IBCVG,IBGC1,IBCR1,IBCOMFL
"RTN","IBCONS1",169,0)
 S IBLN1=$P($G(^DPT(+DFN,0)),U,1) I $Y>(IOSL-6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",170,0)
 ;
"RTN","IBCONS1",171,0)
 I '$G(IBPRTRDS),IBOUT="E" W !,IBPTINFO
"RTN","IBCONS1",172,0)
 I +$G(IBPRTRDS) S IBLN2="Rated Disabilities:" D  Q:+$G(IBQUIT)  K IBX,IBY
"RTN","IBCONS1",173,0)
 . I '$O(^DPT(DFN,.372,0)) W:IBOUT="R" !,IBLN1,?33,IBLN2,"  None" W:IBOUT="E" !,IBPTINFO_"^None" S (IBLN1,IBLN2)="" Q
"RTN","IBCONS1",174,0)
 . S IBI=0 F  S IBI=$O(^DPT(DFN,.372,IBI)) Q:'IBI  D  I $Y>(IOSL-6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",175,0)
 .. S IBX=$G(^DPT(DFN,.372,IBI,0)),IBY=$G(^DIC(31,+IBX,0))
"RTN","IBCONS1",176,0)
 .. S IBD=$S($P(IBY,U,4)="":$P(IBY,U,1),1:$P(IBY,U,4))_" ("_$P(IBX,U,2)_"%-"_$S(+$P(IBX,U,3):"SC",1:"NSC")_")"
"RTN","IBCONS1",177,0)
 .. W:IBOUT="R" !,IBLN1,?33,IBLN2,?57,IBD W:IBOUT="E" !,IBPTINFO_U_IBD S (IBLN1,IBLN2)=""
"RTN","IBCONS1",178,0)
 ;
"RTN","IBCONS1",179,0)
 I '$G(IBPRTIEX),'$G(IBPRTIPC),'$G(IBPRTIGC),'$G(IBPRTICR),IBOUT="R" Q
"RTN","IBCONS1",180,0)
 ;
"RTN","IBCONS1",181,0)
 I IBOUT="R" W:IBLN1'="" !,IBLN1
"RTN","IBCONS1",182,0)
 D ALL^IBCNS1(DFN,"IBX",4,IBBEG),ALL^IBCNS1(DFN,"IBX",4,IBEND)
"RTN","IBCONS1",183,0)
 ;
"RTN","IBCONS1",184,0)
 I IBOUT="E",'$O(IBX(0)) D XLCOLS(0,"")
"RTN","IBCONS1",185,0)
 S IBI=0 F  S IBI=$O(IBX(IBI)) Q:'IBI  D  Q:+$G(IBQUIT)  I $Y>(IOSL-6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",186,0)
 . S IBY=IBX(IBI,0),IBY1=IBX(IBI,1)
"RTN","IBCONS1",187,0)
 . S IBLN1=$P($G(^DIC(36,+IBY,0)),U,1),IBPLAN=+$P(IBY,U,18) S:IBOUT="R" IBLN1=$E(IBLN1,1,25)
"RTN","IBCONS1",188,0)
 . ;
"RTN","IBCONS1",189,0)
 . ;IB*2.0*516/DRF - Retrieve HIPAA compliant Group #
"RTN","IBCONS1",190,0)
 . ;I +$G(IBPRTIEX) W !,?5,IBLN1,?33,"Group #: ",$P($G(^IBA(355.3,+IBPLAN,0)),U,4),?65,"Effective: ",$$DATE(+$P(IBY,U,8))," - ",$$DATE(+$P(IBY,U,4)),?100,"Last Ver: ",$$DATE($P(IBY1,U,3)) S IBLN1=""
"RTN","IBCONS1",191,0)
 . I +$G(IBPRTIEX) D
"RTN","IBCONS1",192,0)
 .. I IBOUT="E" W U_IBLN1_U_$P(IBY,U,3)_U_$$DATE(+$P(IBY,U,8))_U_$$DATE(+$P(IBY,U,4))_U_$$DATE($P(IBY1,U,3)) Q
"RTN","IBCONS1",193,0)
 .. W !,?5,IBLN1,?33,"Group #: ",$P(IBY,U,3)
"RTN","IBCONS1",194,0)
 .. W !,?33,"Effective: ",$$DATE(+$P(IBY,U,8))," - ",$$DATE(+$P(IBY,U,4)),?68,"Last Ver: ",$$DATE($P(IBY1,U,3)) S IBLN1=""
"RTN","IBCONS1",195,0)
 . ;
"RTN","IBCONS1",196,0)
 . I +$G(IBPRTIPC) S IBLN2="Policy Comment: " D  I $Y>(IOSL-6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",197,0)
 .. I IBOUT="E" W U_$P(IBY1,U,8) Q
"RTN","IBCONS1",198,0)
 .. I $P(IBY1,U,8)'="" W !,?5,IBLN1,?33,IBLN2,?51,$P(IBY1,U,8) S (IBLN1,IBLN2)=""
"RTN","IBCONS1",199,0)
 . ;
"RTN","IBCONS1",200,0)
 . I +$G(IBPRTIGC) S IBLN2="Group Comments: " D  I IBOUT="E",+$G(IBGC1) W U
"RTN","IBCONS1",201,0)
 .. S IBJ=0,IBGC1=1 F  S IBJ=$O(^IBA(355.3,+IBPLAN,11,IBJ)) Q:'IBJ  D  I $Y>(IOSL-6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",202,0)
 ... S IBY3=$G(^IBA(355.3,+IBPLAN,11,IBJ,0)) D
"RTN","IBCONS1",203,0)
 .... I IBOUT="E" D:'IBGC1 XLCOLS(1,IBLN1) W U_IBY3 S IBGC1=0 Q
"RTN","IBCONS1",204,0)
 .... W !,?5,IBLN1,?33,IBLN2,?51,IBY3 S (IBLN1,IBLN2)=""
"RTN","IBCONS1",205,0)
 . ;
"RTN","IBCONS1",206,0)
 . I +$G(IBPRTICR) S IBLN2="Coverage Limits:" D  I IBOUT="E",+$G(IBCR1) W "^^"
"RTN","IBCONS1",207,0)
 .. S IBCVG=0,IBCR1=1 F  S IBCVG=$O(^IBA(355.32,"B",IBPLAN,IBCVG)) Q:'IBCVG  D  I $Y>(IOSL-6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",208,0)
 ... S IBY3=$G(^IBA(355.32,IBCVG,0)) Q:IBY3=""
"RTN","IBCONS1",209,0)
 ... S IBLN3=$P($G(^IBE(355.31,+$P(IBY3,U,2),0)),U,1) I IBOUT="R" S IBLN3=$E(IBLN3,1,20)
"RTN","IBCONS1",210,0)
 ... S IBLN3=IBLN3_" "_$$DDSET(355.32,.04,+$P(IBY3,U,4))_"  "_$$DATE(+$P(IBY3,U,3))
"RTN","IBCONS1",211,0)
 ... S (IBJ,IBCOMFL)=0 F  S IBJ=$O(^IBA(355.32,IBCVG,2,IBJ)) Q:'IBJ  D  I $Y>(IOSL-6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",212,0)
 .... I IBOUT="E" D:'IBCR1 XLCOLS(2,IBLN1) W U_IBLN3_U_$G(^IBA(355.32,IBCVG,2,IBJ,0)) S IBCR1=0,IBCOMFL=1 Q
"RTN","IBCONS1",213,0)
 .... W !,?5,IBLN1,?33,IBLN2,?51,IBLN3,?104,$G(^IBA(355.32,IBCVG,2,IBJ,0)) S (IBLN1,IBLN2,IBLN3)=""
"RTN","IBCONS1",214,0)
 ... I IBLN3'="",IBOUT="R" W !,?5,IBLN1,?33,IBLN2,?51,IBLN3 S (IBLN1,IBLN2,IBLN3)=""
"RTN","IBCONS1",215,0)
 ... I 'IBCOMFL,IBOUT="E" D:'IBCR1 XLCOLS(2,IBLN1) W U_IBLN3_U S IBCR1=0
"RTN","IBCONS1",216,0)
 . ;
"RTN","IBCONS1",217,0)
 . I +$G(IBPRTICR) S IBLN2="Riders: " D  I IBOUT="E",+$G(IBCR1) W U
"RTN","IBCONS1",218,0)
 .. S IBRIDE=0,IBCR1=1 F  S IBRIDE=$O(^IBA(355.7,"APP",DFN,IBI,IBRIDE)) Q:'IBRIDE  D  I $Y>(IOSL-6),IBOUT="R" W ! D HEAD Q:IBQUIT
"RTN","IBCONS1",219,0)
 ... I IBOUT="E" D:'IBCR1 XLCOLS(3,IBLN1) W U_$P($G(^IBE(355.6,+IBRIDE,0)),U,1) S IBCR1=0 Q
"RTN","IBCONS1",220,0)
 ... W !,?5,IBLN1,?33,IBLN2,?51,$P($G(^IBE(355.6,+IBRIDE,0)),U,1) S (IBLN1,IBLN2)=""
"RTN","IBCONS1",221,0)
 ;
"RTN","IBCONS1",222,0)
 I IBOUT="R" W !
"RTN","IBCONS1",223,0)
 Q
"RTN","IBCONS1",224,0)
 ;
"RTN","IBCONS1",225,0)
DDSET(FILE,FLD,X) ; returns external value for a set
"RTN","IBCONS1",226,0)
 N Y,Z,T S Z="",Y=$G(^DD(+$G(FILE),+$G(FLD),0)) S T=$G(X)_":",Z=$P($P(Y,T,2),";",1)
"RTN","IBCONS1",227,0)
 Q Z
"RTN","IBCONS1",228,0)
 ;
"RTN","IBCONS1",229,0)
PHDL ; Print header for Excel format
"RTN","IBCONS1",230,0)
 W "DIV^PT ID^PATIENT^SSN^ELIGIBILITY"
"RTN","IBCONS1",231,0)
 I +$G(IBPRTRDS) W "^Rated Disabilities"
"RTN","IBCONS1",232,0)
 I +$G(IBPRTIEX) W "^Insurance^Group #^Effective Begin Date^Effective End Date^Last Ver"
"RTN","IBCONS1",233,0)
 I +$G(IBPRTIPC) W "^Policy Comment"
"RTN","IBCONS1",234,0)
 I +$G(IBPRTIGC) W "^Group Comments"
"RTN","IBCONS1",235,0)
 I +$G(IBPRTICR) W "^Coverage Limits^Limitation Comments^Riders"
"RTN","IBCONS1",236,0)
 ;
"RTN","IBCONS1",237,0)
 W "^DATE OF "_$S(IBINPT=2:"DISCHARGE",1:"CARE")_"^INSURANCE COMPANIES"
"RTN","IBCONS1",238,0)
 I +$G(IBSELRNB) W "^NOT BILLABLE"
"RTN","IBCONS1",239,0)
 I 'IBINPT W "^Encounter Add/Edits"
"RTN","IBCONS1",240,0)
 ;
"RTN","IBCONS1",241,0)
 W "^BILL NUMBER^LOCATION OF CARE^STATUS^From^To^Current Bill Payer Sequence^Debtor"
"RTN","IBCONS1",242,0)
 W "^DIV TOTALS^Unbilled^Unbilled w/RNB^Billed/Not Auth^Billed/Auth^# Visits^# Patients"
"RTN","IBCONS1",243,0)
 Q
"RTN","IBCONS1",244,0)
 ;
"RTN","IBCONS1",245,0)
XLCOLS(PLACE,INS) ; Print spacers for Excel columns
"RTN","IBCONS1",246,0)
 I +PLACE W !,IBPTINFO
"RTN","IBCONS1",247,0)
 I +$G(IBPRTRDS),+PLACE W U
"RTN","IBCONS1",248,0)
 I +$G(IBPRTIEX) W U_INS_"^^^^"
"RTN","IBCONS1",249,0)
 I +$G(IBPRTIPC) W U Q:PLACE=1
"RTN","IBCONS1",250,0)
 I +$G(IBPRTIGC) W U Q:PLACE=2
"RTN","IBCONS1",251,0)
 I +$G(IBPRTICR) W "^^" Q:PLACE=3
"RTN","IBCONS1",252,0)
 I +$G(IBPRTICR) W U
"RTN","IBCONS1",253,0)
 Q:'PLACE
"RTN","IBCONS1",254,0)
 ;
"RTN","IBCONS1",255,0)
 W "^^"
"RTN","IBCONS1",256,0)
 I +$G(IBSELRNB) W U
"RTN","IBCONS1",257,0)
 I 'IBINPT W U Q:PLACE=4
"RTN","IBCONS1",258,0)
 W "^^^^^^^^"
"RTN","IBCONS1",259,0)
 Q
"RTN","IBCONSC")
0^102^B17158899
"RTN","IBCONSC",1,0)
IBCONSC ;ALB/MJB,SGD,AAS,RLW - NSC W/INSURANCE OUTPUT ;06 JUN 88 13:51
"RTN","IBCONSC",2,0)
 ;;2.0;INTEGRATED BILLING;**66,120,528**;21-MAR-94;Build 163
"RTN","IBCONSC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCONSC",4,0)
 ;
"RTN","IBCONSC",5,0)
 ;
"RTN","IBCONSC",6,0)
INP ; Entry point for Inpatient Admission report
"RTN","IBCONSC",7,0)
 S IBINPT=1,IBSUB="AMV1" G EN1
"RTN","IBCONSC",8,0)
 ;
"RTN","IBCONSC",9,0)
INPDIS ; Entry point for Inpatient Discharge report
"RTN","IBCONSC",10,0)
 S IBINPT=2,IBSUB="AMV3" G EN1
"RTN","IBCONSC",11,0)
 ;
"RTN","IBCONSC",12,0)
EN ; Entry point for Outpatient report
"RTN","IBCONSC",13,0)
 S IBINPT=0,IBSUB=""
"RTN","IBCONSC",14,0)
EN1 ;
"RTN","IBCONSC",15,0)
 ;***
"RTN","IBCONSC",16,0)
 I '$D(DT) D DT^DICRW
"RTN","IBCONSC",17,0)
 K ^TMP($J)
"RTN","IBCONSC",18,0)
 ;
"RTN","IBCONSC",19,0)
 D ^IBCONS4 I +$G(IBQUIT) G Q
"RTN","IBCONSC",20,0)
 ;
"RTN","IBCONSC",21,0)
 S IBOUT=$$OUT G:IBOUT="" Q
"RTN","IBCONSC",22,0)
 ;
"RTN","IBCONSC",23,0)
DEV ; -- ask device
"RTN","IBCONSC",24,0)
 I IBOUT="R" W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBCONSC",25,0)
 W !,"*** This output should be queued ***"
"RTN","IBCONSC",26,0)
 ;
"RTN","IBCONSC",27,0)
 I +$G(IBINPT)=0,+$P($G(^IBE(350.9,1,6)),U,23) W !,"*** If queued, Outpatient Visits in Claims Tracking will be updated first ***"
"RTN","IBCONSC",28,0)
 ;
"RTN","IBCONSC",29,0)
 S %ZIS="QM" D ^%ZIS G:POP Q
"RTN","IBCONSC",30,0)
 I $D(IO("Q")) K IO("Q") D  G Q
"RTN","IBCONSC",31,0)
 .S ZTRTN="BEGIN^IBCONSC",ZTSAVE("IB*")="",ZTSAVE("VAUTD")="",ZTSAVE("VAUTD(")=""
"RTN","IBCONSC",32,0)
 .S ZTDESC="IB - Patients with Insurance and "_$S('IBINPT:"Outpatient ",IBINPT=1:"Admissions",1:"Discharges")
"RTN","IBCONSC",33,0)
 .D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCONSC",34,0)
 ;
"RTN","IBCONSC",35,0)
 U IO
"RTN","IBCONSC",36,0)
 ;***
"RTN","IBCONSC",37,0)
BEGIN ; Background job main entry point.  Set up the report header.
"RTN","IBCONSC",38,0)
 ;***
"RTN","IBCONSC",39,0)
 ;
"RTN","IBCONSC",40,0)
 I $D(ZTQUEUED),+$G(IBINPT)=0,+$P($G(^IBE(350.9,1,6)),U,23) D UPCT ; update CT if parameter on, opt, queued
"RTN","IBCONSC",41,0)
 ;
"RTN","IBCONSC",42,0)
 S B="",IBL="",$P(IBL,"=",IOM)="",Y=IBBEG X ^DD("DD")
"RTN","IBCONSC",43,0)
 S IBHD="*Veterans with Reimbursable Insurance and "_$S('IBINPT:"OUTPATIENT Appointments",1:"INPATIENT "_$S(IBINPT=2:"Discharges",1:"Admissions"))_" for the "
"RTN","IBCONSC",44,0)
 S IBHD=IBHD_$S(IBBEG'=IBEND:"period covering ",1:"")_Y
"RTN","IBCONSC",45,0)
 I IBBEG<IBEND S Y=IBEND X ^DD("DD") S IBHD=IBHD_" through "_Y
"RTN","IBCONSC",46,0)
 K %DT S X="N",%DT="T" D ^%DT X ^DD("DD") S IBDATE=Y K %DT
"RTN","IBCONSC",47,0)
 S IBTRKR=$G(^IBE(350.9,1,6)),IBQUIT=0
"RTN","IBCONSC",48,0)
 ;
"RTN","IBCONSC",49,0)
 ; Compile data for the report
"RTN","IBCONSC",50,0)
 D @($S(IBINPT:"LOOP1",1:"LOOP2")_"^IBCONS2")
"RTN","IBCONSC",51,0)
 G:IBQUIT Q
"RTN","IBCONSC",52,0)
 ;
"RTN","IBCONSC",53,0)
 ; Print the report
"RTN","IBCONSC",54,0)
 S X=132 X ^%ZOSF("RM") D LOOP25^IBCONS1
"RTN","IBCONSC",55,0)
 ;
"RTN","IBCONSC",56,0)
Q ; Clean up variables and close the output device.
"RTN","IBCONSC",57,0)
 W !
"RTN","IBCONSC",58,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCONSC",59,0)
 D ^%ZISC
"RTN","IBCONSC",60,0)
 K %,%DT,B,I,I1,II,J,K,L,M,N,X,X1,X2,Y,C,DFN,IBAT,IBCL,IBCNT,IBIFN,IBBILL,IBSELUBL,IBSELBNA,IBSELBIL,IBFORMFD
"RTN","IBCONSC",61,0)
 K IBFLAG,IBI,IBDT,IBPAGE,IBL,IBHD,IBBEG1,IBBEG,IBEND,IBOUT,IBSTOP,IBFDT,IBND0,IBNDM,IBNDMP,IBST,IBTDT,IBWHO
"RTN","IBCONSC",62,0)
 K IBTRKR,IBOE,IBSELRNB,IBADMVT,IBETYP,IBRMARK,IBQUIT,IBSELCDV,IBSELRNG,IBSELSR1,IBSELSR2,IBAUTH,IBPRTICR,IBPRTIEX
"RTN","IBCONSC",63,0)
 K IBINPT,IBPGM,IBVAR,IBFLAG,IBNAME,IBAPPT,IBDC,IBDAT,IBDFN,IBSELTRM,IBQUIT,IBPRTRDS,IBPRTIPC,IBPRTIGC
"RTN","IBCONSC",64,0)
 K POP,^TMP($J),IBDV,IBSUB,VAUTD,IBINDT,IBINS,IBDATE,IBFL,PTF,IBSC,IBMOV
"RTN","IBCONSC",65,0)
 Q
"RTN","IBCONSC",66,0)
 ;
"RTN","IBCONSC",67,0)
 ;
"RTN","IBCONSC",68,0)
HDRDV N IBI,C Q:'$G(IBSELCDV)
"RTN","IBCONSC",69,0)
 I VAUTD=1 S IBHDRDV=": All Divisions Combined" Q
"RTN","IBCONSC",70,0)
 S IBHDRDV=" - Divisions Combined: ",C=""
"RTN","IBCONSC",71,0)
 S IBI="" F  S IBI=$O(VAUTD(IBI)) Q:'IBI  S IBHDRDV=IBHDRDV_C_" "_VAUTD(IBI),C=","
"RTN","IBCONSC",72,0)
 Q
"RTN","IBCONSC",73,0)
 ;
"RTN","IBCONSC",74,0)
UPCT ; Update Claims Tracking
"RTN","IBCONSC",75,0)
 ; run the Claims Tracking opt tracker routine for same date range of report
"RTN","IBCONSC",76,0)
 ; newed variables trying to keep the two jobs, report and CT update, from effecting each other except for date range
"RTN","IBCONSC",77,0)
 ; Input:  IBBEG, IBEND
"RTN","IBCONSC",78,0)
 ; Output: bulletin indicating how many entries checked and how many added
"RTN","IBCONSC",79,0)
 ;
"RTN","IBCONSC",80,0)
 N IBOE,IBOESTAT,IBOETYP,IBTSBDT,IBTSEDT,SDCNT,XMSUB,IBT,IBENCL,IBMESS,IBRMARK,IBANY,VAEL,VA,IBOEDATA,IBVSIT,DFN,X,Y,IBQUIT
"RTN","IBCONSC",81,0)
 N VAUTD,IBINPT,IBSUB,IBSELUBL,IBSELBNA,IBSELBIL,IBSELRNB,IBSELCDV,IBSELTRM,IBSELRNG,IBPRTRDS,IBPRTIEX,IBPRTICR,IBPRTIPC,IBPRTIGC
"RTN","IBCONSC",82,0)
 ;
"RTN","IBCONSC",83,0)
 S IBTSBDT=IBBEG,IBTSEDT=IBEND
"RTN","IBCONSC",84,0)
 ;
"RTN","IBCONSC",85,0)
 N IBBEG,IBEND,IBTALK
"RTN","IBCONSC",86,0)
 ;
"RTN","IBCONSC",87,0)
 S IBTALK=1 D EN1^IBTRKR4
"RTN","IBCONSC",88,0)
 Q
"RTN","IBCONSC",89,0)
 ;
"RTN","IBCONSC",90,0)
OUT() ;
"RTN","IBCONSC",91,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCONSC",92,0)
 W !
"RTN","IBCONSC",93,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCONSC",94,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCONSC",95,0)
 S DIR("B")="Report"
"RTN","IBCONSC",96,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCONSC",97,0)
 Q Y
"RTN","IBCOPP")
0^118^B15985691
"RTN","IBCOPP",1,0)
IBCOPP ;ALB/NLR - LIST INS. PLANS BY CO. (DRIVER) ;08-SEP-94
"RTN","IBCOPP",2,0)
 ;;2.0;INTEGRATED BILLING;**28,62,528**;21-MAR-94;Build 163
"RTN","IBCOPP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOPP",4,0)
 ;
"RTN","IBCOPP",5,0)
EN ; Describe report 
"RTN","IBCOPP",6,0)
 W !!?5,"This report will generate a list of insurance plans by company."
"RTN","IBCOPP",7,0)
 W !?5,"It will help you identify duplicates and verify patient coverage."
"RTN","IBCOPP",8,0)
 W !?5,"You must select one, many (up to 20) or all of the insurance companies;"
"RTN","IBCOPP",9,0)
 W !?5,"anywhere from one to all of the plans under each company; and whether to"
"RTN","IBCOPP",10,0)
 W !?5,"include the patient policies (subscribers) under each plan.  The number of"
"RTN","IBCOPP",11,0)
 W !?5,"plans you select is independent for each company you are including, but"
"RTN","IBCOPP",12,0)
 W !?5,"subscriber selection is the same (all or none) for all companies and"
"RTN","IBCOPP",13,0)
 W !?5,"plans within a report.  Regardless of how you run the report, the"
"RTN","IBCOPP",14,0)
 W !?5,"number of subscribers per plan will be included.",!!
"RTN","IBCOPP",15,0)
 ;
"RTN","IBCOPP",16,0)
 ; Prompt user to select report type, insurance companies, plans
"RTN","IBCOPP",17,0)
 ;
"RTN","IBCOPP",18,0)
 ; Output from user selections:
"RTN","IBCOPP",19,0)
 ;
"RTN","IBCOPP",20,0)
 ; IBAPA=0 -- list insurance plans by company
"RTN","IBCOPP",21,0)
 ; IBAPA=1 -- list Insurance plans by company with subscriber information
"RTN","IBCOPP",22,0)
 ; IBAI=0  -- user selects insurance companies
"RTN","IBCOPP",23,0)
 ; IBAI=1  -- run report for all insurance companies with plans
"RTN","IBCOPP",24,0)
 ; IBAPL=0 -- whether some or all ins. co's., user selects plans (may be
"RTN","IBCOPP",25,0)
 ;            all for certain companies, some for other companies)
"RTN","IBCOPP",26,0)
 ; IBAPL=1 -- whether some or all ins. co's., run report for all plans
"RTN","IBCOPP",27,0)
 ;            associated with those co's.
"RTN","IBCOPP",28,0)
 ; IBAO=E --  Output report in Excel format  ;528
"RTN","IBCOPP",29,0)
 ; IBAO=R --  Output report in Report format
"RTN","IBCOPP",30,0)
 ;
"RTN","IBCOPP",31,0)
 N %ZIS,A,I,POP,ZTDEXC,ZTRTN,ZTSAVE,ZTDESC,IBAO
"RTN","IBCOPP",32,0)
 S IBAPA=$$SELR^IBCOPP1 I IBAPA<0 G ENQ
"RTN","IBCOPP",33,0)
 S IBAI=$$SELI^IBCOPP1 I IBAI<0 G ENQ
"RTN","IBCOPP",34,0)
 S IBAPL=$$SELP^IBCOPP1 I IBAPL<0 G ENQ
"RTN","IBCOPP",35,0)
 S IBQUIT=0
"RTN","IBCOPP",36,0)
 ;
"RTN","IBCOPP",37,0)
 ; obtain plans for selected insurance companies
"RTN","IBCOPP",38,0)
 ;
"RTN","IBCOPP",39,0)
 I IBAI,IBAPL G EXCEL
"RTN","IBCOPP",40,0)
 ;
"RTN","IBCOPP",41,0)
 D START I IBQUIT G ENQ
"RTN","IBCOPP",42,0)
 ;
"RTN","IBCOPP",43,0)
EXCEL ; CHECK TYPE OF OUTPUT  ;528 baa
"RTN","IBCOPP",44,0)
 ;
"RTN","IBCOPP",45,0)
 S IBAO=$$OUT^IBCOPP1 I IBAO<0 G ENQ
"RTN","IBCOPP",46,0)
 ;
"RTN","IBCOPP",47,0)
DEVICE ; Ask user to select device
"RTN","IBCOPP",48,0)
 ;
"RTN","IBCOPP",49,0)
 I IBAO'="E" W !!,"   *** You will need a 132 column printer for this report. ***",!
"RTN","IBCOPP",50,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBCOPP",51,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBCOPP",52,0)
 .S ZTRTN="^IBCOPP2",ZTDESC="IB - LIST OF PLANS BY INSURANCE COMPANY"
"RTN","IBCOPP",53,0)
 .F I="^TMP(""IBINC"",$J,","IBAPA","IBAI","IBAPL","IBAO" S ZTSAVE(I)=""
"RTN","IBCOPP",54,0)
 .D ^%ZTLOAD K IO("Q") D HOME^%ZIS
"RTN","IBCOPP",55,0)
 .W !!,$S($D(ZTSK):"This job has been queued as task #"_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBCOPP",56,0)
 .K ZTSK,IO("Q")
"RTN","IBCOPP",57,0)
 ;
"RTN","IBCOPP",58,0)
 ; Compile and print report
"RTN","IBCOPP",59,0)
 ;
"RTN","IBCOPP",60,0)
 U IO D ^IBCOPP2
"RTN","IBCOPP",61,0)
 ;
"RTN","IBCOPP",62,0)
ENQ K DIRUT,DIROUT,DUOUT,DTOUT,IBAPA,IBAI,IBAPL,IBQUIT,X,Y,^TMP("IBINC",$J)
"RTN","IBCOPP",63,0)
 Q
"RTN","IBCOPP",64,0)
 ;
"RTN","IBCOPP",65,0)
 ;
"RTN","IBCOPP",66,0)
START ; Gather plans for all selected companies.
"RTN","IBCOPP",67,0)
 S (IBCT,IBQUIT)=0 K ^TMP("IBINC",$J)
"RTN","IBCOPP",68,0)
 ;
"RTN","IBCOPP",69,0)
 ; - allow user selection of companies if required
"RTN","IBCOPP",70,0)
 I 'IBAI D  I Y<0 S IBQUIT=1 G STARTQ
"RTN","IBCOPP",71,0)
 .S DIC="^DIC(36,",DIC("S")="I $D(^IBA(355.3,""B"",Y))"
"RTN","IBCOPP",72,0)
 .S VAUTSTR="insurance company",VAUTNI=2,VAUTVB="VAUTI",VAUTNALL=1
"RTN","IBCOPP",73,0)
 .D FIRST^VAUTOMA K DIC,VAUTSTR,VAUTNI,VAUTVB,VAUTNALL Q:Y<0
"RTN","IBCOPP",74,0)
 .S IBCNS="" F  S IBCNS=$O(VAUTI(IBCNS)) Q:IBCNS=""  S ^TMP("IBINC",$J,$E(VAUTI(IBCNS),1,25),IBCNS)=""
"RTN","IBCOPP",75,0)
 I IBAPL G STARTQ
"RTN","IBCOPP",76,0)
 ;
"RTN","IBCOPP",77,0)
 ; - gather all companies if required
"RTN","IBCOPP",78,0)
 I IBAI S A=0 F  S A=$O(^IBA(355.3,"B",A)) Q:'A  I $G(^DIC(36,A,0))]"" S ^TMP("IBINC",$J,$E($P($G(^DIC(36,A,0)),"^"),1,25),A)=""
"RTN","IBCOPP",79,0)
 ;
"RTN","IBCOPP",80,0)
 ; - gather plans for selected companies
"RTN","IBCOPP",81,0)
 S IBIC="" F  S IBIC=$O(^TMP("IBINC",$J,IBIC)) Q:IBIC=""!IBQUIT  D
"RTN","IBCOPP",82,0)
 .S IBCNS="" F  S IBCNS=$O(^TMP("IBINC",$J,IBIC,IBCNS)) Q:IBCNS=""!(IBQUIT)  D
"RTN","IBCOPP",83,0)
 ..S IBCT=IBCT+1 W !!,"Insurance Company # "_IBCT_": "_IBIC
"RTN","IBCOPP",84,0)
 ..D OK^IBCNSM3 Q:IBQUIT  I 'IBOK K ^TMP("IBINC",$J,IBIC,IBCNS) S IBAI=0 Q
"RTN","IBCOPP",85,0)
 ..W "   ...building a list of plans..."
"RTN","IBCOPP",86,0)
 ..K IBSEL,^TMP($J,"IBSEL") D LKP^IBCNSU2(IBCNS,1,1,.IBSEL,0,1) Q:IBQUIT
"RTN","IBCOPP",87,0)
 ..I '$O(^TMP($J,"IBSEL",0)) K ^TMP("IBINC",$J,IBIC,IBCNS) S IBAI=0 Q
"RTN","IBCOPP",88,0)
 ..;
"RTN","IBCOPP",89,0)
 ..; - set plans into an array
"RTN","IBCOPP",90,0)
 ..S IBPN=0 F  S IBPN=$O(^TMP($J,"IBSEL",IBPN)) Q:'IBPN  S ^TMP("IBINC",$J,IBIC,IBCNS,IBPN)=""
"RTN","IBCOPP",91,0)
 ;
"RTN","IBCOPP",92,0)
STARTQ K IBCNS,IBIC,IBJJ,IBCT,IBLCT,IBOK,IBPN,IBSEL,VAUTI,VAUTP,IBAO,^TMP($J,"IBSEL")
"RTN","IBCOPP",93,0)
 Q
"RTN","IBCOPP1")
0^136^B10507720
"RTN","IBCOPP1",1,0)
IBCOPP1 ;ALB/NLR - LIST INS. PLANS BY CO. (DRIVER 1) ;15-SEP-94 
"RTN","IBCOPP1",2,0)
 ;;2.0;INTEGRATED BILLING;**28,528**;21-MAR-94;Build 163
"RTN","IBCOPP1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOPP1",4,0)
 ;
"RTN","IBCOPP1",5,0)
SELR() ; Prompt user to select report type
"RTN","IBCOPP1",6,0)
 ;
"RTN","IBCOPP1",7,0)
 ; IBV1=0 -- list insurance plans by company
"RTN","IBCOPP1",8,0)
 ; IBV1=1 -- list insurance plans by company with subscriber information
"RTN","IBCOPP1",9,0)
 ;
"RTN","IBCOPP1",10,0)
 N IBV1,STOP
"RTN","IBCOPP1",11,0)
 S DIR(0)="SA^1:1. List Insurance Plans by Company;2:2. List Insurance Plans by Company With Subscriber Information"
"RTN","IBCOPP1",12,0)
 S DIR("A")="     SELECT REPORT (1 OR 2): "
"RTN","IBCOPP1",13,0)
 S DIR("A",1)="1. List Insurance Plans by Company"
"RTN","IBCOPP1",14,0)
 S DIR("A",2)="2. List Insurance Plans by Company With Subscriber Information"
"RTN","IBCOPP1",15,0)
 D ^DIR K DIR I Y<0!$D(DIRUT) S IBV1=-1 G SELRQ
"RTN","IBCOPP1",16,0)
 S IBV1=(+Y=2) K Y
"RTN","IBCOPP1",17,0)
SELRQ Q IBV1
"RTN","IBCOPP1",18,0)
 ;
"RTN","IBCOPP1",19,0)
SELI() ; Prompt user to select all or subset of insurance companies 
"RTN","IBCOPP1",20,0)
 ; Count ins. companies with plans
"RTN","IBCOPP1",21,0)
 ;
"RTN","IBCOPP1",22,0)
 ; IBV2=0 -- user selects insurance companies
"RTN","IBCOPP1",23,0)
 ; IBV2=1 -- run report for all insurance companies with plans
"RTN","IBCOPP1",24,0)
 ;
"RTN","IBCOPP1",25,0)
 N A,B,IBV2
"RTN","IBCOPP1",26,0)
 S (A,B)=0 F  S A=$O(^IBA(355.3,"B",A)) Q:'A  S B=B+1
"RTN","IBCOPP1",27,0)
 S DIR(0)="SA^1:1. List All "_B_" Ins. Companies;2:2. List Only Ins. Companies That You Select"
"RTN","IBCOPP1",28,0)
 W !!,"     There are "_B_" insurance companies associated with plans.",!
"RTN","IBCOPP1",29,0)
 S DIR("A",1)="1. List All "_B_" Ins. Companies"
"RTN","IBCOPP1",30,0)
 S DIR("A",2)="2. List Only Ins. Companies That You Select"
"RTN","IBCOPP1",31,0)
 S DIR("A")="     SELECT 1 or 2:  "
"RTN","IBCOPP1",32,0)
 S DIR("?",1)="Enter a code from the list:  1 or 2.  Only insurance"
"RTN","IBCOPP1",33,0)
 S DIR("?")="companies with one or more plans can be selected."
"RTN","IBCOPP1",34,0)
 D ^DIR K DIR I Y<0!$D(DIRUT) S IBV2=-1 G SELIQ
"RTN","IBCOPP1",35,0)
 S IBV2=(+Y=1) K Y
"RTN","IBCOPP1",36,0)
SELIQ Q IBV2
"RTN","IBCOPP1",37,0)
 ;
"RTN","IBCOPP1",38,0)
SELP() ; Prompt user to select all or subset of plans
"RTN","IBCOPP1",39,0)
 ;
"RTN","IBCOPP1",40,0)
 ; IBV3=0 -- whether some or all ins. co's., user selects plans (may be
"RTN","IBCOPP1",41,0)
 ;           all for certain companies, some for other companies
"RTN","IBCOPP1",42,0)
 ; IBV3=1 -- whether some or all ins. co's., run report for all plans
"RTN","IBCOPP1",43,0)
 ;           associated with those co's.
"RTN","IBCOPP1",44,0)
 ;
"RTN","IBCOPP1",45,0)
 N IBV3
"RTN","IBCOPP1",46,0)
 S DIR(0)="YO",DIR("A")="There are "_$P(^IBA(355.3,0),"^",4)_" plans.  List all plans for each company",DIR("B")="No"
"RTN","IBCOPP1",47,0)
 S DIR("?",1)="If you say yes, the report will list all of the plans for each company."
"RTN","IBCOPP1",48,0)
 S DIR("?",2)="If you selected 2. List Insurance Plans by Company With Subscriber"
"RTN","IBCOPP1",49,0)
 S DIR("?",3)="Information and 1. List All "_$P(^IBA(355.3,0),"^",4)_" Ins. Companies,"
"RTN","IBCOPP1",50,0)
 S DIR("?",4)="this will result in the most complete report possible.  However, it"
"RTN","IBCOPP1",51,0)
 S DIR("?",5)="may take awhile to run.  If you say no, you must make plan selections"
"RTN","IBCOPP1",52,0)
 S DIR("?")="for each individual company (anywhere from one plan to all)."
"RTN","IBCOPP1",53,0)
 W ! D ^DIR W ! K DIR I Y<0!$D(DIRUT) S IBV3=-1 G SELPQ
"RTN","IBCOPP1",54,0)
 S IBV3=+Y K Y
"RTN","IBCOPP1",55,0)
SELPQ Q IBV3
"RTN","IBCOPP1",56,0)
 ;
"RTN","IBCOPP1",57,0)
OUT() ; Prompt to allow users to select output format
"RTN","IBCOPP1",58,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOPP1",59,0)
 W !
"RTN","IBCOPP1",60,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCOPP1",61,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCOPP1",62,0)
 S DIR("B")="Report"
"RTN","IBCOPP1",63,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q ""
"RTN","IBCOPP1",64,0)
 Q Y
"RTN","IBCOPP2")
0^120^B22994194
"RTN","IBCOPP2",1,0)
IBCOPP2 ;ALB/NLR - LIST INS. PLANS BY CO. (COMPILE) ;06-SEP-94
"RTN","IBCOPP2",2,0)
V ;;2.0;INTEGRATED BILLING;**28,62,93,516,528**;21-MAR-94;Build 163
"RTN","IBCOPP2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOPP2",4,0)
 ;
"RTN","IBCOPP2",5,0)
EN ; Queued Entry Point for Report.
"RTN","IBCOPP2",6,0)
 ;  Required variable input:  IBAI, IBAPL, IBAPA
"RTN","IBCOPP2",7,0)
 ;  ^TMP("IBINC",$J) required if all companies and plans not selected
"RTN","IBCOPP2",8,0)
 ;
"RTN","IBCOPP2",9,0)
 ; - compile report data
"RTN","IBCOPP2",10,0)
 S IBI=0 K ^TMP($J,"IBPR"),^TMP($J,"IBPL")
"RTN","IBCOPP2",11,0)
 ;
"RTN","IBCOPP2",12,0)
 ; - user wanted all companies and plans
"RTN","IBCOPP2",13,0)
 I IBAI,IBAPL D  G PRINT
"RTN","IBCOPP2",14,0)
 .S IBIC1="" F  S IBIC1=$O(^DIC(36,"B",IBIC1)) Q:IBIC1=""  D
"RTN","IBCOPP2",15,0)
 ..S IBCNS=0 F  S IBCNS=$O(^DIC(36,"B",IBIC1,IBCNS)) Q:'IBCNS  I $D(^IBA(355.3,"B",IBCNS)) S IBIC=IBIC1 D GATH
"RTN","IBCOPP2",16,0)
 ;
"RTN","IBCOPP2",17,0)
 ; - user selected companies or plans
"RTN","IBCOPP2",18,0)
 S IBIC="" F  S IBIC=$O(^TMP("IBINC",$J,IBIC)) Q:IBIC=""  D
"RTN","IBCOPP2",19,0)
 .S IBCNS=0 F  S IBCNS=$O(^TMP("IBINC",$J,IBIC,IBCNS)) Q:'IBCNS  D GATH
"RTN","IBCOPP2",20,0)
 ;
"RTN","IBCOPP2",21,0)
PRINT ; - print report
"RTN","IBCOPP2",22,0)
 D ^IBCOPP3
"RTN","IBCOPP2",23,0)
 K ^TMP($J,"IBPR"),^TMP("IBINC",$J)
"RTN","IBCOPP2",24,0)
 ;
"RTN","IBCOPP2",25,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCOPP2",26,0)
 D ^%ZISC
"RTN","IBCOPP2",27,0)
 K IBI,IBIC,IBIC1,IBCNS,IBCPT,IBCPS,IBCST,IBCSS
"RTN","IBCOPP2",28,0)
 Q
"RTN","IBCOPP2",29,0)
 ;
"RTN","IBCOPP2",30,0)
 ;
"RTN","IBCOPP2",31,0)
GATH ; Gather all data for a company.
"RTN","IBCOPP2",32,0)
 S IBI=IBI+1,(IBCPT,IBCPS,IBCST,IBCSS)=0 ; initialize counters
"RTN","IBCOPP2",33,0)
 D COMP ; gather company info
"RTN","IBCOPP2",34,0)
 D PLAN ; gather plan info
"RTN","IBCOPP2",35,0)
 ;
"RTN","IBCOPP2",36,0)
 ; - set final company info
"RTN","IBCOPP2",37,0)
 S ^TMP($J,"IBPR",IBI)=$$COMPINF(IBCNS)_"^"_IBCPT_"^"_IBCST_"^"_IBCPS_"^"_IBCSS
"RTN","IBCOPP2",38,0)
 K ^TMP($J,"IBPL")
"RTN","IBCOPP2",39,0)
 Q
"RTN","IBCOPP2",40,0)
 ;
"RTN","IBCOPP2",41,0)
 ;
"RTN","IBCOPP2",42,0)
COMP ; Gather Company counts and subscription information, if necessary
"RTN","IBCOPP2",43,0)
 ;  Input:  IBCNS -- Pointer to the insurance company in file #36
"RTN","IBCOPP2",44,0)
 ;         initialized counters, plus the 'Plan' array (^TMP("IBINC",$J))
"RTN","IBCOPP2",45,0)
 ;  
"RTN","IBCOPP2",46,0)
 S DFN=0 F  S DFN=$O(^DPT("AB",IBCNS,DFN)) Q:'DFN  D
"RTN","IBCOPP2",47,0)
 .S IBCDFN=0 F  S IBCDFN=$O(^DPT("AB",IBCNS,DFN,IBCDFN)) Q:'IBCDFN  D
"RTN","IBCOPP2",48,0)
 ..;
"RTN","IBCOPP2",49,0)
 ..; - set company subscriber count; plan subscriber counts if necessary
"RTN","IBCOPP2",50,0)
 ..; MRD;IB*2.0*516 - Use $$ZND^IBCNS1 to pull .312 zero node.
"RTN","IBCOPP2",51,0)
 ..;S IBIND=$G(^DPT(DFN,.312,+IBCDFN,0)) Q:+IBIND'=IBCNS
"RTN","IBCOPP2",52,0)
 ..S IBIND=$$ZND^IBCNS1(DFN,+IBCDFN) Q:+IBIND'=IBCNS
"RTN","IBCOPP2",53,0)
 ..S IBPTR=+$P(IBIND,"^",18) Q:'+IBPTR
"RTN","IBCOPP2",54,0)
 ..S IBCST=IBCST+1
"RTN","IBCOPP2",55,0)
 ..I 'IBAPL,'$D(^TMP("IBINC",$J,IBIC,IBCNS,IBPTR)) Q  ; not a selected plan
"RTN","IBCOPP2",56,0)
 ..S IBCSS=IBCSS+1,^TMP($J,"IBPL",IBPTR)=$G(^TMP($J,"IBPL",IBPTR))+1
"RTN","IBCOPP2",57,0)
 ..Q:'IBAPA  ; policy information not selected
"RTN","IBCOPP2",58,0)
 ..;
"RTN","IBCOPP2",59,0)
 ..; - gather demographic/policy information
"RTN","IBCOPP2",60,0)
 ..S X=$$PT^IBEFUNC(DFN)
"RTN","IBCOPP2",61,0)
 ..S IBNAM=$E($S($P(X,"^")]"":$P(X,"^"),1:"<Pt. "_DFN_" Name Missing>")_$J("",25),1,25)_" ("_$E(X)_$P(X,"^",3)_")"
"RTN","IBCOPP2",62,0)
 ..S IBDOB=$$DAT3^IBOUTL($P($G(^DPT(DFN,0)),"^",3))
"RTN","IBCOPP2",63,0)
 ..I IBAO="E" S IBNAM=$S($P(X,"^")]"":$P(X,"^"),1:"<Pt. "_DFN_" Name Missing>")_" ("_$E(X)_$P(X,"^",3)_")"
"RTN","IBCOPP2",64,0)
 ..S IBWI=$P(IBIND,"^",6),IBWI=$S(IBWI="v":"VET",IBWI="s":"SPO",IBWI="o":"OTH",1:"<UNK>")
"RTN","IBCOPP2",65,0)
 ..S VAOA("A")=$S(IBWI="SPO":6,1:5) D OAD^VADPT
"RTN","IBCOPP2",66,0)
 ..;
"RTN","IBCOPP2",67,0)
 ..; - build detail line
"RTN","IBCOPP2",68,0)
 ..S IBX=IBNAM_U_IBDOB_U_$E(VAOA(9),1,18)_U_$S($P(IBIND,"^",2)]"":$E($P(IBIND,"^",2),1,17),1:"<NO SUBS ID>")
"RTN","IBCOPP2",69,0)
 ..S IBX=IBX_U_IBWI_U_$$DAT1^IBOUTL($P(IBIND,"^",8))_U_$$DAT1^IBOUTL($P(IBIND,"^",4))
"RTN","IBCOPP2",70,0)
 ..S X=0,Y="" F  S Y=$O(^IBA(355.5,"APPY",DFN,IBPTR,Y)) Q:Y=""  I $O(^(Y,0))=IBCDFN S X=1 Q
"RTN","IBCOPP2",71,0)
 ..S ^TMP($J,"IBPR",IBI,IBPTR,IBNAM_"@@"_DFN_"@@"_IBCDFN)=IBX_"^"_X
"RTN","IBCOPP2",72,0)
 ;
"RTN","IBCOPP2",73,0)
 K DFN,IBCDFN,IBIND,IBPTR,IBNAM,IBDOB,IBWI,IBX,X,VAOA,VA,VAERR,Y
"RTN","IBCOPP2",74,0)
 Q
"RTN","IBCOPP2",75,0)
 ;
"RTN","IBCOPP2",76,0)
PLAN ; Gather Insurance Plan information, if necessary
"RTN","IBCOPP2",77,0)
 ;  Input:  IBCNS -- Pointer to the insurance company in file #36
"RTN","IBCOPP2",78,0)
 ;         initialized counters, plus the 'Plan' array (^TMP("IBINC",$J))
"RTN","IBCOPP2",79,0)
 ; 
"RTN","IBCOPP2",80,0)
 S IBPTR=0 F  S IBPTR=$O(^IBA(355.3,"B",IBCNS,IBPTR)) Q:'IBPTR  D
"RTN","IBCOPP2",81,0)
 .S IBCPT=IBCPT+1
"RTN","IBCOPP2",82,0)
 .I 'IBAPL,'$D(^TMP("IBINC",$J,IBIC,IBCNS,IBPTR)) Q  ; not a selected plan
"RTN","IBCOPP2",83,0)
 .S IBCPS=IBCPS+1
"RTN","IBCOPP2",84,0)
 .S ^TMP($J,"IBPR",IBI,IBPTR)=$$PLANINF(IBPTR)_"^"_+$G(^TMP($J,"IBPL",IBPTR))
"RTN","IBCOPP2",85,0)
 K IBPTR
"RTN","IBCOPP2",86,0)
 Q
"RTN","IBCOPP2",87,0)
 ;
"RTN","IBCOPP2",88,0)
PLANINF(PLAN) ; Return formatted Insurance Plan information.
"RTN","IBCOPP2",89,0)
 ;  Input:  PLAN  --  Pointer to the plan in file #355.3
"RTN","IBCOPP2",90,0)
 ; Output:  plan number ^ name ^ grp/ind ^ act/inact
"RTN","IBCOPP2",91,0)
 ;
"RTN","IBCOPP2",92,0)
 N ACT,NAME,NUM,TY,X,OUT
"RTN","IBCOPP2",93,0)
 S X=$G(^IBA(355.3,PLAN,0))
"RTN","IBCOPP2",94,0)
 S TY=$S($P(X,"^",2):"GRP",1:"IND")
"RTN","IBCOPP2",95,0)
 ;S NAME=$P(X,"^",3) S:NAME="" NAME="<NO GROUP NAME>"
"RTN","IBCOPP2",96,0)
 ;S NUM=$P(X,"^",4) S:NUM="" NUM="<NO GROUP NUMBER>"
"RTN","IBCOPP2",97,0)
 ;Get new HIPAA fields - IB*2*516
"RTN","IBCOPP2",98,0)
 S NAME=$$GET1^DIQ(355.3,PLAN,2.01) S:NAME="" NAME="<NO GROUP NAME>"
"RTN","IBCOPP2",99,0)
 S NUM=$$GET1^DIQ(355.3,PLAN,2.02) S:NUM="" NUM="<NO GROUP NUMBER>"
"RTN","IBCOPP2",100,0)
 S ACT=$S($P(X,"^",11):"IN",1:"")_"ACTIVE"
"RTN","IBCOPP2",101,0)
 Q NUM_"^"_NAME_"^"_TY_"^"_ACT_"^"_$S($D(^IBA(355.4,"APY",PLAN))>0:"YES",1:"NO")_"^"_$S($D(^IBA(355.5,"B",PLAN))>0:"YES",1:"NO")
"RTN","IBCOPP2",102,0)
 ;
"RTN","IBCOPP2",103,0)
COMPINF(IBCNS) ; Return formatted Insurance Company information
"RTN","IBCOPP2",104,0)
 ;  Input:  IBCNS  --  Pointer to the insurance company in file #36
"RTN","IBCOPP2",105,0)
 ; Output:  company name ^ addr ^ city/st/zip ^ phone ^ precert ^ act?
"RTN","IBCOPP2",106,0)
 ;
"RTN","IBCOPP2",107,0)
 N ST,X,X0,X11,X13,Z
"RTN","IBCOPP2",108,0)
 S X0=$G(^DIC(36,IBCNS,0)),X11=$G(^(.11)),X13=$G(^(.13)),Z=$P(X11,"^",6)
"RTN","IBCOPP2",109,0)
 S ST=$S($P(X11,"^",5):$P($G(^DIC(5,$P(X11,"^",5),0)),"^",2),1:"<STATE MISSING>")
"RTN","IBCOPP2",110,0)
 S X="Ins. Co.: "_$E($P(X0,"^"),1,25)
"RTN","IBCOPP2",111,0)
 I IBAO="E" S X=$P(X0,"^")
"RTN","IBCOPP2",112,0)
 S X=X_U_$S($P(X11,"^")'="":$P(X11,"^"),1:"<Street Addr. 1 Missing>")
"RTN","IBCOPP2",113,0)
 S X=X_U_$P(X11,"^",4)_", "_ST_"  "_$E(Z,1,5)_$S($E(Z,6,9)]"":"-"_$E(Z,6,9),1:"")
"RTN","IBCOPP2",114,0)
 I IBAO="R" D
"RTN","IBCOPP2",115,0)
 .S X=X_U_"Phone: "_$P(X13,"^")_U_"Precert Phone: "_$P(X13,"^",3)
"RTN","IBCOPP2",116,0)
 .S X=X_U_$S($P(X0,"^",5):"IN",1:"")_"ACTIVE COMPANY"
"RTN","IBCOPP2",117,0)
 I IBAO="E" D
"RTN","IBCOPP2",118,0)
 .S X=X_U_$P(X13,"^")_U_$P(X13,"^",3)
"RTN","IBCOPP2",119,0)
 .S X=X_U_$S($P(X0,"^",5):"NO",1:"YES")
"RTN","IBCOPP2",120,0)
 Q X
"RTN","IBCOPP3")
0^121^B15474438
"RTN","IBCOPP3",1,0)
IBCOPP3 ;ALB/NLR - LIST INS. PLANS BY CO. (PRINT) ;04-OCT-94
"RTN","IBCOPP3",2,0)
 ;;2.0;INTEGRATED BILLING;**28,516,528**;21-MAR-94;Build 163
"RTN","IBCOPP3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOPP3",4,0)
 ;
"RTN","IBCOPP3",5,0)
 ; Print the report.
"RTN","IBCOPP3",6,0)
 ;  Required Input:  Global print array ^TMP($J,"IBPR"
"RTN","IBCOPP3",7,0)
 ;                   local variable IBAPA
"RTN","IBCOPP3",8,0)
 ;
"RTN","IBCOPP3",9,0)
 N %
"RTN","IBCOPP3",10,0)
 I IBAO="E" D EXCEL Q
"RTN","IBCOPP3",11,0)
 S (IBI,IBQUIT,IBPAG)=0
"RTN","IBCOPP3",12,0)
 D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12))
"RTN","IBCOPP3",13,0)
 F  S IBI=$O(^TMP($J,"IBPR",IBI)) Q:'IBI  S IBC=$G(^(IBI)) D COMP D  Q:IBQUIT
"RTN","IBCOPP3",14,0)
 .S IBP=0 F  S IBP=$O(^TMP($J,"IBPR",IBI,IBP)) Q:'IBP  S IBPD=$G(^(IBP)) D  Q:IBQUIT
"RTN","IBCOPP3",15,0)
 ..I $Y>(IOSL-$S(IBAPA:9,1:5)) D PAUSE Q:IBQUIT  D COMP
"RTN","IBCOPP3",16,0)
 ..D PLAN
"RTN","IBCOPP3",17,0)
 ..I IBAPA S IBS="" F  S IBS=$O(^TMP($J,"IBPR",IBI,IBP,IBS)) Q:IBS=""  S IBSD=$G(^(IBS)) D SUBS Q:IBQUIT
"RTN","IBCOPP3",18,0)
 .Q:IBQUIT
"RTN","IBCOPP3",19,0)
 .;
"RTN","IBCOPP3",20,0)
 .; - print company totals
"RTN","IBCOPP3",21,0)
 .I $Y>(IOSL-4) D PAUSE Q:IBQUIT  D COMP,PLAN
"RTN","IBCOPP3",22,0)
 .W !!?90,"Number of Plans Selected = ",$P(IBC,"^",9),!?76,"Total Subscribers Under Selected Plans = ",$P(IBC,"^",10)
"RTN","IBCOPP3",23,0)
 .D PAUSE
"RTN","IBCOPP3",24,0)
 ;
"RTN","IBCOPP3",25,0)
 K IBJJ,IBI,IBQUIT,IBPAG,IBHDT,IBC,IBP,IBPD,IBS,IBSD
"RTN","IBCOPP3",26,0)
 Q
"RTN","IBCOPP3",27,0)
 ;
"RTN","IBCOPP3",28,0)
 ;
"RTN","IBCOPP3",29,0)
COMP ; Print Company header
"RTN","IBCOPP3",30,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBCOPP3",31,0)
 S IBPAG=IBPAG+1
"RTN","IBCOPP3",32,0)
 W !,"LIST OF PLANS BY INSURANCE COMPANY"
"RTN","IBCOPP3",33,0)
 W:IBAPA " WITH SUBSCRIBER INFORMATION"
"RTN","IBCOPP3",34,0)
 W ?IOM-34,IBHDT,?IOM-10,"Page: ",IBPAG
"RTN","IBCOPP3",35,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCOPP3",36,0)
 ;
"RTN","IBCOPP3",37,0)
 ; - sub-header
"RTN","IBCOPP3",38,0)
 ; MRD;IB*2.0*516 - Adjusted columns to allow more space for Employer
"RTN","IBCOPP3",39,0)
 ; and Subscriber ID.
"RTN","IBCOPP3",40,0)
 W !?1,$P(IBC,"^"),?45,$P(IBC,"^",4),?105,$P(IBC,"^",6)
"RTN","IBCOPP3",41,0)
 W !?11,$P(IBC,"^",2),?45,$P(IBC,"^",5),?105,"PLAN TOTAL= ",$P(IBC,"^",7)
"RTN","IBCOPP3",42,0)
 W !?11,$P(IBC,"^",3),?99,"SUBSCRIBER TOTAL= ",$P(IBC,"^",8)
"RTN","IBCOPP3",43,0)
 W:IBAPA !!?99,"WHOSE",?127,"BEN.",!?3,"SUBSCRIBER NAME/ID",?38,"DOB",?50,"EMPLOYER",?76,"SUBSCR ID",?99,"INS",?107,"EFF DATE",?117,"EXP DATE",?127,"USED?"
"RTN","IBCOPP3",44,0)
 W:'IBAPA !!?5,"GROUP NUMBER",?32,"GROUP NAME",?62,"GROUP OR IND",?77,"ACTIVE/INACTIVE",?96,"SUBSCRIBERS",?110,"ANN. BEN?  BEN. USED?"
"RTN","IBCOPP3",45,0)
 Q
"RTN","IBCOPP3",46,0)
 ;
"RTN","IBCOPP3",47,0)
PLAN ; Print plan information.
"RTN","IBCOPP3",48,0)
 ; MRD;IB*2.0*516 - Adjusted columns and added $E to Group # and Name.
"RTN","IBCOPP3",49,0)
 I IBAPA D
"RTN","IBCOPP3",50,0)
 .W !!?3,"GROUP #: ",$E($P(IBPD,U),1,62),?76,"ANNUAL BENEFITS ON FILE: ",$P(IBPD,U,5)
"RTN","IBCOPP3",51,0)
 .W !?5,"GROUP NAME: ",$E($P(IBPD,U,2),1,59),?78,"BENEFITS USED ON FILE: ",$P(IBPD,U,6)
"RTN","IBCOPP3",52,0)
 .W !?7,"GROUP OR IND: ",$P(IBPD,U,3),!?9,"ACTIVE?: ",$P(IBPD,U,4),!?11,"NO. SUBSCRIBERS: ",$P(IBPD,U,7)
"RTN","IBCOPP3",53,0)
 I 'IBAPA W !!?5,$P(IBPD,U),?32,$P(IBPD,U,2),?62,$P(IBPD,U,3),?77,$P(IBPD,U,4),?100,$P(IBPD,U,7),?113,$P(IBPD,U,5),?124,$P(IBPD,U,6)
"RTN","IBCOPP3",54,0)
 Q
"RTN","IBCOPP3",55,0)
 ;
"RTN","IBCOPP3",56,0)
SUBS ; Print subscriber information.
"RTN","IBCOPP3",57,0)
 ; MRD;IB*2.0*516 - Shifted some fields to allow Employer and
"RTN","IBCOPP3",58,0)
 ; Subscriber ID to display more characters.
"RTN","IBCOPP3",59,0)
 I $Y>(IOSL-4) D PAUSE Q:IBQUIT  D COMP,PLAN
"RTN","IBCOPP3",60,0)
 ;W !?3,$P(IBSD,"^"),?40,$P(IBSD,"^",2),?54,$P(IBSD,"^",3),?76,$P(IBSD,"^",4),?95,$P(IBSD,"^",5)
"RTN","IBCOPP3",61,0)
 ;W ?105,$P(IBSD,"^",6),?117,$P(IBSD,"^",7),?128,$S($P(IBSD,"^",8):"YES",1:"NO")
"RTN","IBCOPP3",62,0)
 W !?3,$P(IBSD,"^"),?38,$P(IBSD,"^",2),?50,$E($P(IBSD,"^",3),1,20),?76,$E($P(IBSD,"^",4),1,25),?99,$P(IBSD,"^",5)
"RTN","IBCOPP3",63,0)
 W ?107,$P(IBSD,"^",6),?117,$P(IBSD,"^",7),?128,$S($P(IBSD,"^",8):"YES",1:"NO")
"RTN","IBCOPP3",64,0)
 Q
"RTN","IBCOPP3",65,0)
 ;
"RTN","IBCOPP3",66,0)
PAUSE ; Pause for screen output.
"RTN","IBCOPP3",67,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBCOPP3",68,0)
 ;F IBJJ=$Y:1:(IOSL-7) W !   ; IB*2.0*528 - CJS - Fix scrolling problem
"RTN","IBCOPP3",69,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBCOPP3",70,0)
 Q
"RTN","IBCOPP3",71,0)
 ;
"RTN","IBCOPP3",72,0)
EXCEL ; Output in excell format
"RTN","IBCOPP3",73,0)
 N HDR
"RTN","IBCOPP3",74,0)
 S IBQUIT=0
"RTN","IBCOPP3",75,0)
 S HDR="INS.CO.^ADDRESS^CITY,STATE ZIP^PHONE^PRECERT PHONE^ACTIVE^PLAN TOTAL^SUBS TOTAL^PLANS SELECTED^TOT SUBS"
"RTN","IBCOPP3",76,0)
 S HDR=HDR_"^GROUP NUMBER^GROUP NAME^GRP?^ACTIVE^AN. BEN^BEN USED^NO. SUBS"
"RTN","IBCOPP3",77,0)
 I IBAPA S HDR=HDR_"^SUBSCRIBER NAME/ID^DOB^EMPLOYER^SUBSCR ID^WHOSE INS^EFF DATE^EXP DATE^BEN USED?"
"RTN","IBCOPP3",78,0)
 W !,HDR
"RTN","IBCOPP3",79,0)
 S IBI=0
"RTN","IBCOPP3",80,0)
 F  S IBI=$O(^TMP($J,"IBPR",IBI)) Q:'IBI  S IBC=$G(^(IBI)) D  Q:IBQUIT
"RTN","IBCOPP3",81,0)
 .S IBP=0 F  S IBP=$O(^TMP($J,"IBPR",IBI,IBP)) Q:'IBP  S IBPD=$G(^(IBP)) D
"RTN","IBCOPP3",82,0)
 ..I 'IBAPA W !,IBC_U_IBPD
"RTN","IBCOPP3",83,0)
 ..I IBAPA S IBS="" F  S IBS=$O(^TMP($J,"IBPR",IBI,IBP,IBS)) Q:IBS=""  S IBSD=$G(^(IBS)) D
"RTN","IBCOPP3",84,0)
 ...W !,IBC_U_IBPD_U_IBSD
"RTN","IBCOPP3",85,0)
 Q
"RTN","IBCOPP3",86,0)
 ;
"RTN","IBCOPR")
0^73^B37055885
"RTN","IBCOPR",1,0)
IBCOPR ;WISC/RFJ,BOISE/WRL - print dollar amts for pre-registration ;05 May 97  8:30 AM [7/22/03 11:59am]
"RTN","IBCOPR",2,0)
 ;;2.0;INTEGRATED BILLING;**75,345,528**;21-MAR-94;Build 163
"RTN","IBCOPR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOPR",4,0)
 ;
"RTN","IBCOPR",5,0)
 W !!,"This report will sort through insurance policies in the patient file"
"RTN","IBCOPR",6,0)
 W !,"and print patients, bills, and payments with an insurance policy source"
"RTN","IBCOPR",7,0)
 W !,"of information equal to the user selected criteria."
"RTN","IBCOPR",8,0)
 ;
"RTN","IBCOPR",9,0)
 N DATEEND,DATESTRT,IBCNFSUM,IBCNESOI,IBCNOUT
"RTN","IBCOPR",10,0)
 ;
"RTN","IBCOPR",11,0)
 ;  select date range
"RTN","IBCOPR",12,0)
 W ! D DATESEL I '$G(DATEEND) Q
"RTN","IBCOPR",13,0)
 ;
"RTN","IBCOPR",14,0)
 ;  select Source of Information (SOI)
"RTN","IBCOPR",15,0)
 W ! D SOISEL I '$D(IBCNESOI) Q
"RTN","IBCOPR",16,0)
 ;
"RTN","IBCOPR",17,0)
 S IBCNFSUM=$$SUMMARY I 'IBCNFSUM Q
"RTN","IBCOPR",18,0)
 ;
"RTN","IBCOPR",19,0)
 S IBCNOUT=$$OUT
"RTN","IBCOPR",20,0)
 ;
"RTN","IBCOPR",21,0)
 W !!,"Since this report has to loop through all patients and check all insurance"
"RTN","IBCOPR",22,0)
 W !,"policies, it is recommended this report be queued."
"RTN","IBCOPR",23,0)
 ;
"RTN","IBCOPR",24,0)
 ;  select device
"RTN","IBCOPR",25,0)
 W ! S %ZIS="Q" D ^%ZIS Q:POP
"RTN","IBCOPR",26,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK Q
"RTN","IBCOPR",27,0)
 .   S ZTDESC="Source of Information Report",ZTRTN="DQ^IBCOPR"
"RTN","IBCOPR",28,0)
 .   S ZTSAVE("DATE*")="",ZTSAVE("IBCN*")="",ZTSAVE("ZTREQ")="@"
"RTN","IBCOPR",29,0)
 ;
"RTN","IBCOPR",30,0)
 I IBCNOUT="R" W !!,"<*> please wait <*>"
"RTN","IBCOPR",31,0)
 ;
"RTN","IBCOPR",32,0)
DQ ;  report (queue) starts here
"RTN","IBCOPR",33,0)
 N AMOUNT,BILLNUM,CANCEL,CLASS,COUNTNEW,DA,DATA,DATE,DFN,INSCO,PAYMTAMT,PAYMTCNT,TOTALAMT,TOTALCNT,TRANDA,VA,Y,SOI
"RTN","IBCOPR",34,0)
 K ^TMP($J,"IBCOPR")
"RTN","IBCOPR",35,0)
 S COUNTNEW=0
"RTN","IBCOPR",36,0)
 ;
"RTN","IBCOPR",37,0)
 ;  build list of patients using source
"RTN","IBCOPR",38,0)
 S INSCO=0 F  S INSCO=$O(^DPT("AB",INSCO)) Q:'INSCO  D
"RTN","IBCOPR",39,0)
 .   S DFN=0 F  S DFN=$O(^DPT("AB",INSCO,DFN)) Q:'DFN  D
"RTN","IBCOPR",40,0)
 .   .   S DA=0 F  S DA=$O(^DPT("AB",INSCO,DFN,DA)) Q:'DA  D
"RTN","IBCOPR",41,0)
 .   .   .   S DATA=$G(^DPT(DFN,.312,DA,1))
"RTN","IBCOPR",42,0)
 .   .   .   S DATE=$P($P(DATA,"^",10),".")
"RTN","IBCOPR",43,0)
 .   .   .   S SOI=$P(DATA,"^",9)
"RTN","IBCOPR",44,0)
 .   .   .   ;
"RTN","IBCOPR",45,0)
 .   .   .   ; Check for existence of SOI
"RTN","IBCOPR",46,0)
 .   .   .   I $G(SOI)="" Q
"RTN","IBCOPR",47,0)
 .   .   .   ;
"RTN","IBCOPR",48,0)
 .   .   .   ;  check source of information
"RTN","IBCOPR",49,0)
 .   .   .   I $G(IBCNESOI)'=1,$G(IBCNESOI(SOI))="" Q
"RTN","IBCOPR",50,0)
 .   .   .   ;
"RTN","IBCOPR",51,0)
 .   .   .   ;  build list of all patients
"RTN","IBCOPR",52,0)
 .   .   .   D PID^VADPT
"RTN","IBCOPR",53,0)
 .   .   .   S Y=$P(DATE,".") D DD^%DT
"RTN","IBCOPR",54,0)
 .   .   .   S ^TMP($J,"IBCOPR","ALL",DFN,INSCO)=$P($G(^DPT(DFN,0)),"^")_"^"_$G(VA("BID"))_"^"_Y_"^"_SOI
"RTN","IBCOPR",55,0)
 .   .   .   ;
"RTN","IBCOPR",56,0)
 .   .   .   ;  check date of source of information
"RTN","IBCOPR",57,0)
 .   .   .   I DATE<DATESTRT!(DATE>DATEEND) Q
"RTN","IBCOPR",58,0)
 .   .   .   ;
"RTN","IBCOPR",59,0)
 .   .   .   ;  build list of patients match during select date range
"RTN","IBCOPR",60,0)
 .   .   .   S COUNTNEW(SOI)=$G(COUNTNEW(SOI))+1
"RTN","IBCOPR",61,0)
 .   .   .   S COUNTNEW=COUNTNEW+1
"RTN","IBCOPR",62,0)
 .   .   .   S ^TMP($J,"IBCOPR","NEW",SOI,DFN,INSCO)=""
"RTN","IBCOPR",63,0)
 ;
"RTN","IBCOPR",64,0)
 ;  get charges and payments
"RTN","IBCOPR",65,0)
 S DFN=0 F  S DFN=$O(^TMP($J,"IBCOPR","ALL",DFN)) Q:'DFN  D
"RTN","IBCOPR",66,0)
 .   S INSCO=0 F  S INSCO=$O(^TMP($J,"IBCOPR","ALL",DFN,INSCO)) Q:'INSCO  D
"RTN","IBCOPR",67,0)
 .   .   S SOI=$P(^TMP($J,"IBCOPR","ALL",DFN,INSCO),"^",4)
"RTN","IBCOPR",68,0)
 .   .   S DA=0 F  S DA=$O(^DGCR(399,"AE",DFN,INSCO,DA)) Q:'DA  D
"RTN","IBCOPR",69,0)
 .   .   .   ;  date first printed, bill classification
"RTN","IBCOPR",70,0)
 .   .   .   S DATE=$P($P($G(^DGCR(399,DA,"S")),"^",12),".")
"RTN","IBCOPR",71,0)
 .   .   .   S CLASS=$P($G(^DGCR(399,DA,0)),"^",5)
"RTN","IBCOPR",72,0)
 .   .   .   ;
"RTN","IBCOPR",73,0)
 .   .   .   ;  check for 1 or 2 inpatient, 3 or 4 outpatient
"RTN","IBCOPR",74,0)
 .   .   .   S CLASS=$S(CLASS<3:1,1:3)
"RTN","IBCOPR",75,0)
 .   .   .   ;
"RTN","IBCOPR",76,0)
 .   .   .   ;  bill canceled
"RTN","IBCOPR",77,0)
 .   .   .   S CANCEL="" I $P($G(^DGCR(399,DA,"S")),"^",16)=1 S CANCEL="*"
"RTN","IBCOPR",78,0)
 .   .   .   S BILLNUM=$P($G(^DGCR(399,DA,0)),"^")
"RTN","IBCOPR",79,0)
 .   .   .   S AMOUNT=+$$ORI^PRCAFN(DA) I AMOUNT'>0 Q
"RTN","IBCOPR",80,0)
 .   .   .   ;
"RTN","IBCOPR",81,0)
 .   .   .   I DATE'<DATESTRT,DATE'>DATEEND D
"RTN","IBCOPR",82,0)
 .   .   .   .   S ^TMP($J,"IBCOPR","BILL",SOI,CLASS,DATE,DA)=DFN_"^"_INSCO_"^"_CANCEL_"^"_BILLNUM_"^"_AMOUNT
"RTN","IBCOPR",83,0)
 .   .   .   .   I CANCEL="" S TOTALCNT(SOI,CLASS)=$G(TOTALCNT(SOI,CLASS))+1,TOTALAMT(SOI,CLASS)=$G(TOTALAMT(SOI,CLASS))+AMOUNT
"RTN","IBCOPR",84,0)
 .   .   .   ;
"RTN","IBCOPR",85,0)
 .   .   .   ;  get payments
"RTN","IBCOPR",86,0)
 .   .   .   S TRANDA=0 F  S TRANDA=$O(^PRCA(433,"C",DA,TRANDA)) Q:'TRANDA  D
"RTN","IBCOPR",87,0)
 .   .   .   .   S DATA=$G(^PRCA(433,TRANDA,1))
"RTN","IBCOPR",88,0)
 .   .   .   .   ;  transaction type 2 and 34 are payments
"RTN","IBCOPR",89,0)
 .   .   .   .   I $P(DATA,"^",2)'=2,$P(DATA,"^",2)'=34 Q
"RTN","IBCOPR",90,0)
 .   .   .   .   S DATE=$P($P(DATA,"^",9),".")
"RTN","IBCOPR",91,0)
 .   .   .   .   I DATE<DATESTRT!(DATE>DATEEND) Q
"RTN","IBCOPR",92,0)
 .   .   .   .   I '$P($G(^PRCA(433,TRANDA,0)),"^",4) Q
"RTN","IBCOPR",93,0)
 .   .   .   .   S AMOUNT=$P($G(^PRCA(433,TRANDA,3)),"^")
"RTN","IBCOPR",94,0)
 .   .   .   .   S ^TMP($J,"IBCOPR","TRAN",SOI,CLASS,DATE,DA)=DFN_"^"_INSCO_"^"_CANCEL_"^"_TRANDA_"^"_$P(DATA,"^",2)_"^"_AMOUNT
"RTN","IBCOPR",95,0)
 .   .   .   .   I CANCEL="" S PAYMTCNT(SOI,CLASS)=$G(PAYMTCNT(SOI,CLASS))+1,PAYMTAMT(SOI,CLASS)=$G(PAYMTAMT(SOI,CLASS))+AMOUNT
"RTN","IBCOPR",96,0)
 ;
"RTN","IBCOPR",97,0)
 S SOI=0
"RTN","IBCOPR",98,0)
 F  S SOI=$O(TOTALCNT(SOI)) Q:SOI=""  I $G(COUNTNEW(SOI))="" S COUNTNEW(SOI)=0
"RTN","IBCOPR",99,0)
 F  S SOI=$O(PAYMTCNT(SOI)) Q:SOI=""  I $G(COUNTNEW(SOI))="" S COUNTNEW(SOI)=0
"RTN","IBCOPR",100,0)
 D PRINT^IBCOPR1
"RTN","IBCOPR",101,0)
 ;
"RTN","IBCOPR",102,0)
 D ^%ZISC
"RTN","IBCOPR",103,0)
 K ^TMP($J,"IBCOPR")
"RTN","IBCOPR",104,0)
 Q
"RTN","IBCOPR",105,0)
 ;
"RTN","IBCOPR",106,0)
 ;
"RTN","IBCOPR",107,0)
DATESEL ;  select starting and ending dates in days
"RTN","IBCOPR",108,0)
 ;  returns datestrt and dateend
"RTN","IBCOPR",109,0)
 N %,%DT,%H,%I,DEFAULT,X,Y
"RTN","IBCOPR",110,0)
 K DATEEND,DATESTRT
"RTN","IBCOPR",111,0)
START S Y=$E(DT,1,5)_"01" D DD^%DT S DEFAULT=Y
"RTN","IBCOPR",112,0)
 S %DT("A")="Start with Date: ",%DT("B")=DEFAULT,%DT="AEP",%DT(0)=-DT D ^%DT I Y<0 Q
"RTN","IBCOPR",113,0)
 I $E(Y,6,7)="00" S Y=$E(Y,1,5)_"01"
"RTN","IBCOPR",114,0)
 S DATESTRT=Y
"RTN","IBCOPR",115,0)
 S Y=DT D DD^%DT S DEFAULT=Y
"RTN","IBCOPR",116,0)
 S %DT("A")="  End with Date: ",%DT("B")=DEFAULT,%DT="AEP",%DT(0)=-DT D ^%DT I Y<0 Q
"RTN","IBCOPR",117,0)
 I $E(Y,6,7)="00" S Y=$E(Y,1,5)_"01"
"RTN","IBCOPR",118,0)
 I Y<DATESTRT W !,"END DATE MUST BE GREATER THAN OR EQUAL TO THE START DATE.",! G START
"RTN","IBCOPR",119,0)
 S DATEEND=Y,Y=DATESTRT D DD^%DT
"RTN","IBCOPR",120,0)
 W !?5,"***  Selected date range from ",Y," to " S Y=DATEEND D DD^%DT W Y,"  ***"
"RTN","IBCOPR",121,0)
 Q
"RTN","IBCOPR",122,0)
 ;
"RTN","IBCOPR",123,0)
 ;;
"RTN","IBCOPR",124,0)
SOISEL ; Select one SOI (source of information) or ALL - File #355.12
"RTN","IBCOPR",125,0)
 NEW DIC,DTOUT,DUOUT,X,Y,CT,Q
"RTN","IBCOPR",126,0)
 K IBCNESOI S CT=0 W !?5,"Enter Sources of Information to include one at a time."
"RTN","IBCOPR",127,0)
SOISEL1 S DIC(0)="AMEQ"
"RTN","IBCOPR",128,0)
 S Q="Include Source of Information"
"RTN","IBCOPR",129,0)
 I CT=0 S Q=Q_" (<RETURN> for ALL)"
"RTN","IBCOPR",130,0)
 E  S Q="Also "_Q
"RTN","IBCOPR",131,0)
 S DIC("A")=$$FO^IBCNEUT1(Q_": ",50,"R")
"RTN","IBCOPR",132,0)
 S DIC="^IBE(355.12,"
"RTN","IBCOPR",133,0)
 D ^DIC
"RTN","IBCOPR",134,0)
 I $D(DUOUT)!$D(DTOUT) G SOISELX
"RTN","IBCOPR",135,0)
 ; If nothing was selected (Y=-1), select ALL sources
"RTN","IBCOPR",136,0)
 I Y=-1 G SOISELX:CT=1 S IBCNESOI=1 G SOISELX
"RTN","IBCOPR",137,0)
 S IBCNESOI($P(Y,"^",1))=$P(Y,"^",2),CT=1 G SOISEL1
"RTN","IBCOPR",138,0)
 ;
"RTN","IBCOPR",139,0)
SOISELX ; SOISEL exit pt
"RTN","IBCOPR",140,0)
 Q
"RTN","IBCOPR",141,0)
 ;
"RTN","IBCOPR",142,0)
SUMMARY() ;  ask to print detailed or summary report
"RTN","IBCOPR",143,0)
 N DIR,DIRUT,X,Y
"RTN","IBCOPR",144,0)
 S DIR(0)="SOA^D:detailed;S:summary;",DIR("B")="summary"
"RTN","IBCOPR",145,0)
 S DIR("A")="Type of report to print: "
"RTN","IBCOPR",146,0)
 W ! D ^DIR
"RTN","IBCOPR",147,0)
 I $D(DIRUT) Q 0
"RTN","IBCOPR",148,0)
 Q $S(Y="S":1,Y="D":2,1:0)
"RTN","IBCOPR",149,0)
 ;
"RTN","IBCOPR",150,0)
OUT() ; select Excel or Report format
"RTN","IBCOPR",151,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCOPR",152,0)
 W !
"RTN","IBCOPR",153,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCOPR",154,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCOPR",155,0)
 S DIR("B")="Report"
"RTN","IBCOPR",156,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCOPR",157,0)
 Q Y
"RTN","IBCOPR1")
0^74^B58373479
"RTN","IBCOPR1",1,0)
IBCOPR1 ;WISC/RFJ,BOISE/WRL - print dollar amts for pre-registration ;05 May 97  8:34 AM
"RTN","IBCOPR1",2,0)
 ;;2.0;INTEGRATED BILLING;**75,345,528**;21-MAR-94;Build 163
"RTN","IBCOPR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCOPR1",4,0)
 Q
"RTN","IBCOPR1",5,0)
 ;
"RTN","IBCOPR1",6,0)
 ;
"RTN","IBCOPR1",7,0)
PRINT ;  print report
"RTN","IBCOPR1",8,0)
 N %,%H,%I,DATA,DATEDIS1,DATEDIS2,DFN,IBCNFLAG,IBCNLINE,INSCO,NOW,PAGE,SCREEN,X,Y,SOI
"RTN","IBCOPR1",9,0)
 ;
"RTN","IBCOPR1",10,0)
 I "^R^E^"'[(U_$G(IBCNOUT)_U) S IBCNOUT="R"
"RTN","IBCOPR1",11,0)
 S Y=$P(DATESTRT,".") D DD^%DT S DATEDIS1=Y
"RTN","IBCOPR1",12,0)
 S Y=$P(DATEEND,".") D DD^%DT S DATEDIS2=Y
"RTN","IBCOPR1",13,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","IBCOPR1",14,0)
 S PAGE=1,IBCNLINE="",$P(IBCNLINE,"-",81)=""
"RTN","IBCOPR1",15,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","IBCOPR1",16,0)
 U IO
"RTN","IBCOPR1",17,0)
 S SOI=0
"RTN","IBCOPR1",18,0)
P1 S SOI=$O(COUNTNEW(SOI)) I SOI="" D:'$G(IBCNFLAG) PAUSE Q
"RTN","IBCOPR1",19,0)
 I SCREEN,PAGE>1,IBCNOUT="R" D PAUSE Q:$G(IBCNFLAG)
"RTN","IBCOPR1",20,0)
 D H
"RTN","IBCOPR1",21,0)
 ;
"RTN","IBCOPR1",22,0)
 ;  show list of new patients for source
"RTN","IBCOPR1",23,0)
 I IBCNFSUM=2 D H1 S DFN=0 F  S DFN=$O(^TMP($J,"IBCOPR","NEW",SOI,DFN)) Q:'DFN!($G(IBCNFLAG))  D
"RTN","IBCOPR1",24,0)
 .   S INSCO=0 F  S INSCO=$O(^TMP($J,"IBCOPR","NEW",SOI,DFN,INSCO)) Q:'INSCO!($G(IBCNFLAG))  D
"RTN","IBCOPR1",25,0)
 .   .   S DATA=^TMP($J,"IBCOPR","ALL",DFN,INSCO)
"RTN","IBCOPR1",26,0)
 .   .   I IBCNOUT="E" W !,$P($G(^IBE(355.12,SOI,0)),"^",2)_U_$P(DATA,"^")_U_$P(DATA,"^",2)_U_$P($G(^DIC(36,INSCO,0)),"^")_U_$P(DATA,"^",3) Q
"RTN","IBCOPR1",27,0)
 .   .   W !,$E($P(DATA,"^"),1,25),?27,$P(DATA,"^",2),?34,$E($P($G(^DIC(36,INSCO,0)),"^"),1,30),?68,$P(DATA,"^",3)
"RTN","IBCOPR1",28,0)
 .   .   I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H,H1
"RTN","IBCOPR1",29,0)
 ;
"RTN","IBCOPR1",30,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",31,0)
 I $Y>(IOSL-6),IBCNOUT="R" D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H
"RTN","IBCOPR1",32,0)
 ;
"RTN","IBCOPR1",33,0)
 I IBCNOUT="E" W U_COUNTNEW(SOI) W:IBCNFSUM=2 !!
"RTN","IBCOPR1",34,0)
 I IBCNOUT="R" W !,"    TOTAL NEW POLICIES IDENTIFIED WITH ",$P($G(^IBE(355.12,SOI,0)),"^",2),": ",COUNTNEW(SOI),!
"RTN","IBCOPR1",35,0)
 ;
"RTN","IBCOPR1",36,0)
 ;  *** INPATIENT ***
"RTN","IBCOPR1",37,0)
 ;  show list of new inpatient bills
"RTN","IBCOPR1",38,0)
 I $G(IBCNFSUM)=2 D BILL(1)
"RTN","IBCOPR1",39,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",40,0)
 I $Y>(IOSL-6),IBCNOUT="R" D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H
"RTN","IBCOPR1",41,0)
 ;
"RTN","IBCOPR1",42,0)
 I IBCNOUT="E" W U,$G(TOTALCNT(SOI,1))+0,U_$FN(+$G(TOTALAMT(SOI,1)),",",2) W:IBCNFSUM=2 !!
"RTN","IBCOPR1",43,0)
 I IBCNOUT="R" W !,"    TOTAL INPATIENT BILLS COUNT: ",$G(TOTALCNT(SOI,1))+0,?44,"AMOUNT: ",$J($FN(+$G(TOTALAMT(SOI,1)),",",2),12),!
"RTN","IBCOPR1",44,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",45,0)
 I $Y>(IOSL-6),IBCNOUT="R" D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H
"RTN","IBCOPR1",46,0)
 ;
"RTN","IBCOPR1",47,0)
 ;  show list of inpatient transactions
"RTN","IBCOPR1",48,0)
 I $G(IBCNFSUM)=2 D TRAN(1)
"RTN","IBCOPR1",49,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",50,0)
 I $Y>(IOSL-6),IBCNOUT="R" D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H
"RTN","IBCOPR1",51,0)
 ;
"RTN","IBCOPR1",52,0)
 I IBCNOUT="E" W U,$G(PAYMTCNT(SOI,1))+0,U_$FN(+$G(PAYMTAMT(SOI,1)),",",2) W:IBCNFSUM=2 !!
"RTN","IBCOPR1",53,0)
 I IBCNOUT="R" W !,"    TOTAL INPATIENT PAYMENT COUNT: ",$G(PAYMTCNT(SOI,1))+0,?44,"AMOUNT: ",$J($FN(+$G(PAYMTAMT(SOI,1)),",",2),12),!
"RTN","IBCOPR1",54,0)
 ;
"RTN","IBCOPR1",55,0)
 ;  *** OUTPATIENT ***
"RTN","IBCOPR1",56,0)
 ;  show list of new outpatient bills
"RTN","IBCOPR1",57,0)
 I $G(IBCNFSUM)=2 D BILL(3)
"RTN","IBCOPR1",58,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",59,0)
 I $Y>(IOSL-6),IBCNOUT="R" D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H
"RTN","IBCOPR1",60,0)
 ;
"RTN","IBCOPR1",61,0)
 I IBCNOUT="E" W U,$G(TOTALCNT(SOI,3))+0,U_$FN(+$G(TOTALAMT(SOI,3)),",",2) W:IBCNFSUM=2 !!
"RTN","IBCOPR1",62,0)
 I IBCNOUT="R" W !,"    TOTAL OUTPATIENT BILLS COUNT: ",$G(TOTALCNT(SOI,3))+0,?44,"AMOUNT: ",$J($FN(+$G(TOTALAMT(SOI,3)),",",2),12),!
"RTN","IBCOPR1",63,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",64,0)
 I $Y>(IOSL-6),IBCNOUT="R" D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H
"RTN","IBCOPR1",65,0)
 ;
"RTN","IBCOPR1",66,0)
 ;  show list of outpatient transactions
"RTN","IBCOPR1",67,0)
 I $G(IBCNFSUM)=2 D TRAN(3)
"RTN","IBCOPR1",68,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",69,0)
 I $Y>(IOSL-6),IBCNOUT="R" D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H
"RTN","IBCOPR1",70,0)
 ;
"RTN","IBCOPR1",71,0)
 I IBCNOUT="E" W U,$G(PAYMTCNT(SOI,3))+0,U_$FN(+$G(PAYMTAMT(SOI,3)),",",2),! W:IBCNFSUM=2 !!!
"RTN","IBCOPR1",72,0)
 I IBCNOUT="R" W !,"    TOTAL OUTPATIENT PAYMENT COUNT: ",$G(PAYMTCNT(SOI,3))+0,?44,"AMOUNT: ",$J($FN(+$G(PAYMTAMT(SOI,3)),",",2),12),!
"RTN","IBCOPR1",73,0)
 G P1
"RTN","IBCOPR1",74,0)
 ;
"RTN","IBCOPR1",75,0)
 ;
"RTN","IBCOPR1",76,0)
 ;
"RTN","IBCOPR1",77,0)
BILL(CLASS) ;  print bills where class=1 inpatient, class=3 outpatient
"RTN","IBCOPR1",78,0)
 N CANCEL,DA,DATE,DATA,DATA1,Y
"RTN","IBCOPR1",79,0)
 D H2
"RTN","IBCOPR1",80,0)
 I IBCNOUT="E",'$G(TOTALCNT(SOI,CLASS)) W !,$P($G(^IBE(355.12,SOI,0)),"^",2)_U_U_U_U_U Q
"RTN","IBCOPR1",81,0)
 ;
"RTN","IBCOPR1",82,0)
 S DATE=0 F  S DATE=$O(^TMP($J,"IBCOPR","BILL",SOI,CLASS,DATE)) Q:'DATE!($G(IBCNFLAG))  D
"RTN","IBCOPR1",83,0)
 .   S DA=0 F  S DA=$O(^TMP($J,"IBCOPR","BILL",SOI,CLASS,DATE,DA)) Q:'DA!($G(IBCNFLAG))  D
"RTN","IBCOPR1",84,0)
 .   .   ;  data1 = dfn ^ insco ^ cancel ^ bill number ^ amount
"RTN","IBCOPR1",85,0)
 .   .   S DATA1=$G(^TMP($J,"IBCOPR","BILL",SOI,CLASS,DATE,DA))
"RTN","IBCOPR1",86,0)
 .   .   S DATA=$G(^TMP($J,"IBCOPR","ALL",+$P(DATA1,"^"),$P(DATA1,"^",2)))
"RTN","IBCOPR1",87,0)
 .   .   S Y=DATE D DD^%DT
"RTN","IBCOPR1",88,0)
 .   .   I IBCNOUT="E" W !,$P($G(^IBE(355.12,SOI,0)),"^",2)_U_$P(DATA,"^")_U_$P(DATA,"^",2)_U_$P(DATA1,"^",3)_U_$P(DATA1,"^",4)_U_$FN(+$P(DATA1,"^",5),",",2)_U_Y Q
"RTN","IBCOPR1",89,0)
 .   .   W !,$E($P(DATA,"^"),1,25),?27,$P(DATA,"^",2),?33,$P(DATA1,"^",3),?34,$P(DATA1,"^",4),?54,$J($FN(+$P(DATA1,"^",5),",",2),10),?68,Y
"RTN","IBCOPR1",90,0)
 .   .   I $P(DATA1,"^",3)'="" S CANCEL=1
"RTN","IBCOPR1",91,0)
 .   .   I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H,H2
"RTN","IBCOPR1",92,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",93,0)
 I $G(CANCEL),IBCNOUT="R" W !,"    * Next to bill indicates bill is canceled and not used in totals"
"RTN","IBCOPR1",94,0)
 Q
"RTN","IBCOPR1",95,0)
 ;
"RTN","IBCOPR1",96,0)
 ;
"RTN","IBCOPR1",97,0)
TRAN(CLASS) ;  print transaction where class=1 inpatient, class=3 outpatient
"RTN","IBCOPR1",98,0)
 N CANCEL,DA,DATE,DATA,DATA1,TYPE,Y
"RTN","IBCOPR1",99,0)
 D H3
"RTN","IBCOPR1",100,0)
 I IBCNOUT="E",'$G(PAYMTCNT(SOI,CLASS)) W !,$P($G(^IBE(355.12,SOI,0)),"^",2)_U_U_U_U_U_U Q
"RTN","IBCOPR1",101,0)
 ;
"RTN","IBCOPR1",102,0)
 S DATE=0 F  S DATE=$O(^TMP($J,"IBCOPR","TRAN",SOI,CLASS,DATE)) Q:'DATE!($G(IBCNFLAG))  D
"RTN","IBCOPR1",103,0)
 .   S DA=0 F  S DA=$O(^TMP($J,"IBCOPR","TRAN",SOI,CLASS,DATE,DA)) Q:'DA!($G(IBCNFLAG))  D
"RTN","IBCOPR1",104,0)
 .   .   ;  data1 = dfn ^ insco ^ cancel ^ trans # ^ type ^ amount 
"RTN","IBCOPR1",105,0)
 .   .   S DATA1=$G(^TMP($J,"IBCOPR","TRAN",SOI,CLASS,DATE,DA))
"RTN","IBCOPR1",106,0)
 .   .   S DATA=$G(^TMP($J,"IBCOPR","ALL",+$P(DATA1,"^"),$P(DATA1,"^",2)))
"RTN","IBCOPR1",107,0)
 .   .   S Y=DATE D DD^%DT
"RTN","IBCOPR1",108,0)
 .   .   S TYPE=$P(DATA1,"^",5),TYPE=$S(TYPE=34:"FULL",1:"PART")
"RTN","IBCOPR1",109,0)
 .   .   I IBCNOUT="E" W !,$P($G(^IBE(355.12,SOI,0)),"^",2)_U_$P(DATA,"^")_U_$P(DATA,"^",2)_U_$P(DATA1,"^",3)_U_$P(DATA1,"^",4)_U_TYPE_U_$FN(+$P(DATA1,"^",6),",",2)_U_Y Q
"RTN","IBCOPR1",110,0)
 .   .   W !,$E($P(DATA,"^"),1,25),?27,$P(DATA,"^",2),?33,$P(DATA1,"^",3),?34,$P(DATA1,"^",4),?46,TYPE,?54,$J($FN(+$P(DATA1,"^",6),",",2),10),?68,Y
"RTN","IBCOPR1",111,0)
 .   .   I $P(DATA1,"^",3)'="" S CANCEL=1
"RTN","IBCOPR1",112,0)
 .   .   I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(IBCNFLAG)  D H,H3
"RTN","IBCOPR1",113,0)
 I $G(IBCNFLAG) Q
"RTN","IBCOPR1",114,0)
 I $G(CANCEL),IBCNOUT="R" W !,"    * Next to payment indicates payment is canceled and not used in totals"
"RTN","IBCOPR1",115,0)
 Q
"RTN","IBCOPR1",116,0)
 ;
"RTN","IBCOPR1",117,0)
 ;
"RTN","IBCOPR1",118,0)
PAUSE ;  pause at end of page
"RTN","IBCOPR1",119,0)
 N X U IO(0) W !,"Press RETURN to continue, '^' to exit:" R X:DTIME
"RTN","IBCOPR1",120,0)
 S:'$T X="^" S:X["^" IBCNFLAG=1 U IO
"RTN","IBCOPR1",121,0)
 Q
"RTN","IBCOPR1",122,0)
 ;
"RTN","IBCOPR1",123,0)
 ;
"RTN","IBCOPR1",124,0)
H ;  header
"RTN","IBCOPR1",125,0)
 ; Excel output
"RTN","IBCOPR1",126,0)
 I IBCNOUT="E" D  Q
"RTN","IBCOPR1",127,0)
 .W "SOURCE OF INFORMATION"
"RTN","IBCOPR1",128,0)
 .I IBCNFSUM=1 D
"RTN","IBCOPR1",129,0)
 ..W "^TOTAL NEW POLICIES WITH THIS SOURCE^TOTAL INPATIENT BILLS^AMOUNT^TOTAL INPATIENT PAYMENTS^AMOUNT"
"RTN","IBCOPR1",130,0)
 ..W "^TOTAL OUTPATIENT BILLS^AMOUNT^TOTAL OUTPATIENT PAYMENTS^AMOUNT",!,$P($G(^IBE(355.12,SOI,0)),"^",2)
"RTN","IBCOPR1",131,0)
 ; Report output
"RTN","IBCOPR1",132,0)
 S %=NOW_"  PAGE "_PAGE,PAGE=PAGE+1 I PAGE'=2!(SCREEN) W @IOF
"RTN","IBCOPR1",133,0)
 W $C(13),"SOURCE OF INFORMATION REPORT",?(80-$L(%)),%
"RTN","IBCOPR1",134,0)
 W !,"  FOR THE DATE RANGE: ",DATEDIS1,"  TO  ",DATEDIS2,?65,$J("TYPE: "_$S(IBCNFSUM=1:"SUMMARY",1:"DETAILED"),15)
"RTN","IBCOPR1",135,0)
 W !,"  SOURCE OF INFORMATION: ",$P($G(^IBE(355.12,SOI,0)),"^",2)
"RTN","IBCOPR1",136,0)
 W !,IBCNLINE
"RTN","IBCOPR1",137,0)
 Q
"RTN","IBCOPR1",138,0)
 ;
"RTN","IBCOPR1",139,0)
 ;
"RTN","IBCOPR1",140,0)
H1 ;  header for patient list
"RTN","IBCOPR1",141,0)
 ; Excel output
"RTN","IBCOPR1",142,0)
 I IBCNOUT="E" W "^Patient Name^SSN^Insurance Company^Source Date^TOTAL NEW POLICIES WITH THIS SOURCE" Q
"RTN","IBCOPR1",143,0)
 ; Report output
"RTN","IBCOPR1",144,0)
 W !,"Patient Name",?27,"SSN",?34,"Insurance Company",?68,"Source Date"
"RTN","IBCOPR1",145,0)
 W !,$TR(IBCNLINE,"-",".")
"RTN","IBCOPR1",146,0)
 Q
"RTN","IBCOPR1",147,0)
 ;
"RTN","IBCOPR1",148,0)
 ;
"RTN","IBCOPR1",149,0)
H2 ;  header for bill list
"RTN","IBCOPR1",150,0)
 ; Excel output
"RTN","IBCOPR1",151,0)
 I IBCNOUT="E" W "SOURCE OF INFORMATION^Patient Name^SSN^",$S(CLASS=1:"Inpatient",1:"Outpatient")," Bill Number^Amount^Bill Date^TOTAL ",$S(CLASS=1:"INPATIENT",1:"OUTPATIENT")," BILLS^AMOUNT" Q
"RTN","IBCOPR1",152,0)
 ; Report output
"RTN","IBCOPR1",153,0)
 W !,$E($TR(IBCNLINE,"-","."),1,27)," ",$S(CLASS=1:" Inpatient",1:"Outpatient")," Bills Entered ",$E($TR(IBCNLINE,"-","."),1,27)
"RTN","IBCOPR1",154,0)
 W !,"Patient Name",?27,"SSN",?34,"Bill Number",?54,$J("Amount",10),?68,"Bill Date"
"RTN","IBCOPR1",155,0)
 W !,$TR(IBCNLINE,"-",".")
"RTN","IBCOPR1",156,0)
 Q
"RTN","IBCOPR1",157,0)
 ;
"RTN","IBCOPR1",158,0)
 ;
"RTN","IBCOPR1",159,0)
H3 ;  header for transaction list
"RTN","IBCOPR1",160,0)
 ; Excel output
"RTN","IBCOPR1",161,0)
 I IBCNOUT="E" W "SOURCE OF INFORMATION^Patient Name^SSN^",$S(CLASS=1:"Inpatient",1:"Outpatient")," Tran Number^Type^Amount^Bill Date^TOTAL ",$S(CLASS=1:"INPATIENT",1:"OUTPATIENT")," PAYMENTS^AMOUNT" Q
"RTN","IBCOPR1",162,0)
 ; Report output
"RTN","IBCOPR1",163,0)
 W !,$E($TR(IBCNLINE,"-","."),1,24)," ",$S(CLASS=1:" Inpatient",1:"Outpatient")," Payments Collected ",$E($TR(IBCNLINE,"-","."),1,25)
"RTN","IBCOPR1",164,0)
 W !,"Patient Name",?27,"SSN",?34,"Tran Number",?46,"Type",?54,$J("Amount",10),?68,"Bill Date"
"RTN","IBCOPR1",165,0)
 W !,$TR(IBCNLINE,"-",".")
"RTN","IBCOPR1",166,0)
 Q
"RTN","IBJDI4")
0^106^B31792499
"RTN","IBJDI4",1,0)
IBJDI4 ;ALB/CPM - PATIENTS WITH UNIDENTIFIED INSURANCE ;17-DEC-96
"RTN","IBJDI4",2,0)
 ;;2.0;INTEGRATED BILLING;**69,98,100,118,528**;21-MAR-94;Build 163
"RTN","IBJDI4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDI4",4,0)
 ;
"RTN","IBJDI4",5,0)
EN ; - Option entry point.
"RTN","IBJDI4",6,0)
 ;
"RTN","IBJDI4",7,0)
 W !!,"This report provides the number of patients who have been treated,"
"RTN","IBJDI4",8,0)
 W !,"but not identified as having or not having insurance.",!
"RTN","IBJDI4",9,0)
 ;
"RTN","IBJDI4",10,0)
DATE D DATE^IBOUTL I IBBDT=""!(IBEDT="") G ENQ
"RTN","IBJDI4",11,0)
 ;
"RTN","IBJDI4",12,0)
 ; - Sort by division?
"RTN","IBJDI4",13,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("?")="^D HLP1^IBJDI4"
"RTN","IBJDI4",14,0)
 S DIR("A")="Do you wish to sort this report by division" W !
"RTN","IBJDI4",15,0)
 D ^DIR S IBSORT=+Y I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) G ENQ
"RTN","IBJDI4",16,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT
"RTN","IBJDI4",17,0)
 ;
"RTN","IBJDI4",18,0)
 I IBSORT D PSDR^IBODIV G:Y<0 ENQ ; Select division(s).
"RTN","IBJDI4",19,0)
 ;
"RTN","IBJDI4",20,0)
 ; - Select a detailed or summary report.
"RTN","IBJDI4",21,0)
 D DS^IBJD G:IBRPT["^" ENQ S IBSEL=0
"RTN","IBJDI4",22,0)
 I IBRPT="S" W !!,"This report only requires an 80 column printer." G FMT
"RTN","IBJDI4",23,0)
 ;
"RTN","IBJDI4",24,0)
SEL W !!,"Print 1-MAIN REPORT or 2-LINE ITEM REPORTS: 1// "
"RTN","IBJDI4",25,0)
 R X:DTIME G:'$T!(X["^") ENQ S:X="" X=1 I "1^2"'[X D HLP2 G SEL
"RTN","IBJDI4",26,0)
 W "  ",$S(X=2:"LINE ITEM REPORTS",1:"MAIN REPORT") I X=1 G RMK
"RTN","IBJDI4",27,0)
 ;
"RTN","IBJDI4",28,0)
RPTS ; - Select line item report(s).
"RTN","IBJDI4",29,0)
 W ! S DIR(0)="LO^1:9^K:+$P(X,""-"",2)>9 X"
"RTN","IBJDI4",30,0)
 F X=1:1:9 S DIR("A",X)=X_" - Print "_$$TITLE(X)
"RTN","IBJDI4",31,0)
 S DIR("A",10)="",DIR("A")="Select",DIR("B")=1 D ^DIR K DIR I Y["^" G ENQ
"RTN","IBJDI4",32,0)
 W ! S IBSEL=Y,DIR(0)="YO",DIR("A",1)="You have selected"
"RTN","IBJDI4",33,0)
 I X="1-9" S DIR("A",1)=DIR("A",1)_" ALL the above reports."
"RTN","IBJDI4",34,0)
 E  F X=1:1 S X1=$P(IBSEL,",",X) Q:'X1  S DIR("A",X+1)=" "_$$TITLE(X1)
"RTN","IBJDI4",35,0)
 S DIR("A")="Are you sure",DIR("B")="NO" D ^DIR K DIR I Y["^" G ENQ
"RTN","IBJDI4",36,0)
 I 'Y G RPTS
"RTN","IBJDI4",37,0)
 ;
"RTN","IBJDI4",38,0)
RMK ; - Select print/not print remarks.
"RTN","IBJDI4",39,0)
 W ! S DIR(0)="YO"
"RTN","IBJDI4",40,0)
 S DIR("A")="Do you want the patient's remarks to print on the report"
"RTN","IBJDI4",41,0)
 S DIR("B")="NO" D ^DIR K DIR S IBRMK=Y I IBRMK["^" G ENQ
"RTN","IBJDI4",42,0)
 ;
"RTN","IBJDI4",43,0)
FMT ; - Select output format.
"RTN","IBJDI4",44,0)
 K IBOUT
"RTN","IBJDI4",45,0)
 S IBOUT=$$OUT I $G(STOP) G ENQ
"RTN","IBJDI4",46,0)
 ;
"RTN","IBJDI4",47,0)
 I IBOUT="R",IBRPT="D" W !!,"You will need a 132 column printer for this report."
"RTN","IBJDI4",48,0)
 ;
"RTN","IBJDI4",49,0)
DEV ; - Select a device.
"RTN","IBJDI4",50,0)
 W !!,"Note: This report may take a while to run."
"RTN","IBJDI4",51,0)
 W !?6,"You should queue this report to run after normal business hours.",!
"RTN","IBJDI4",52,0)
 ;
"RTN","IBJDI4",53,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDI4",54,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDI4",55,0)
 .S ZTRTN="DQ^IBJDI4",ZTDESC="IB - PATIENTS WITH UNIDENTIFIED INSURANCE"
"RTN","IBJDI4",56,0)
 .F I="IB*","IBOUT","VAUTD","VAUTD(" S ZTSAVE(I)=""
"RTN","IBJDI4",57,0)
 .D ^%ZTLOAD
"RTN","IBJDI4",58,0)
 .W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBJDI4",59,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDI4",60,0)
 ;
"RTN","IBJDI4",61,0)
 U IO
"RTN","IBJDI4",62,0)
 ;
"RTN","IBJDI4",63,0)
DQ ; - Tasked entry point.
"RTN","IBJDI4",64,0)
 ;
"RTN","IBJDI4",65,0)
 I $G(IBXTRACT) D E^IBJDE(4,1) ; Change extract status.
"RTN","IBJDI4",66,0)
 ;
"RTN","IBJDI4",67,0)
 N IBQUERY K IB,^TMP("IBJDI41",$J),^TMP("IBJDI42",$J)
"RTN","IBJDI4",68,0)
 S IBC="BILL^DEC^HMO^IND^MEDC^MEDG^NO^NULL^TOT^UNK^YES",IBQ=0
"RTN","IBJDI4",69,0)
 I IBSORT D  G PROC
"RTN","IBJDI4",70,0)
 .S I=0 F  S I=$S(VAUTD:$O(^DG(40.8,I)),1:$O(VAUTD(I))) Q:'I  D
"RTN","IBJDI4",71,0)
 ..S J=$P($G(^DG(40.8,I,0)),U) F K=1:1:11 S IB(J,$P(IBC,U,K))=0
"RTN","IBJDI4",72,0)
 S IBDIV="ALL" F I=1:1:11 S IB("ALL",$P(IBC,U,I))=0
"RTN","IBJDI4",73,0)
 ;
"RTN","IBJDI4",74,0)
PROC D EN^IBJDI41 ; Process and print report(s).
"RTN","IBJDI4",75,0)
 ;
"RTN","IBJDI4",76,0)
ENQ K ^TMP("IBJDI41",$J),^TMP("IBJDI42",$J)
"RTN","IBJDI4",77,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDI4",78,0)
 ;
"RTN","IBJDI4",79,0)
 D ^%ZISC
"RTN","IBJDI4",80,0)
ENQ1 K IB,IBQ,IBBDT,IBEDT,IBRMK,IBRPT,IBD,IBDN,IBPH,IBPAG,IBRUN,IBX,IBX1,IBX2
"RTN","IBJDI4",81,0)
 K IBC,IBELIG,IBPER,IBPM,IBPMD,IBDOD,IBFL,IBFL1,IBIPC,IBINSC,IBPAT,IBSEL
"RTN","IBJDI4",82,0)
 K IBDIV,IBSEL1,IBSORT,VAUTD,DFN,POP,I,J,K,X,X1,X2,Y,ZTDESC,ZTRTN,ZTSAVE
"RTN","IBJDI4",83,0)
 K DIR,DIROUT,DTOUT,DUOUT,DIRUT,%,%ZIS,IBOUT,IBXTRACT,STOP
"RTN","IBJDI4",84,0)
 Q
"RTN","IBJDI4",85,0)
 ;
"RTN","IBJDI4",86,0)
HLP1 ; - 'Sort by division' prompt.
"RTN","IBJDI4",87,0)
 W !!,"Select: '<CR>' to print the trend report without regard to"
"RTN","IBJDI4",88,0)
 W !?15,"division"
"RTN","IBJDI4",89,0)
 W !?11,"'Y' to select those divisions for which a separate"
"RTN","IBJDI4",90,0)
 W !?15,"trend report should be created",!?11,"'^' to quit"
"RTN","IBJDI4",91,0)
 Q
"RTN","IBJDI4",92,0)
 ;
"RTN","IBJDI4",93,0)
HLP2 ; - 'Print 1-MAIN REPORT'... prompt.
"RTN","IBJDI4",94,0)
 W !!,"Select: '1' to print the Patients w/Unidentified Insurance Report"
"RTN","IBJDI4",95,0)
 W !?8,"'2' to print up to nine specific reports based on the line items"
"RTN","IBJDI4",96,0)
 W !?12,"of the summary report",!?8,"'^' to quit"
"RTN","IBJDI4",97,0)
 Q
"RTN","IBJDI4",98,0)
 ;
"RTN","IBJDI4",99,0)
TITLE(X) ; - Print report title.
"RTN","IBJDI4",100,0)
 Q $P($T(TITLE1+X),";;",2)
"RTN","IBJDI4",101,0)
 ;
"RTN","IBJDI4",102,0)
TITLE1 ;;Patients with Unidentified Insurance
"RTN","IBJDI4",103,0)
 ;;Patients Covered by Insurance
"RTN","IBJDI4",104,0)
 ;;Patients Covered by Billable Insurance
"RTN","IBJDI4",105,0)
 ;;Patients Covered by an HMO
"RTN","IBJDI4",106,0)
 ;;Patients Covered by Medicare
"RTN","IBJDI4",107,0)
 ;;Patients Covered by Medigap
"RTN","IBJDI4",108,0)
 ;;Patients Covered by an Indemnity Policy
"RTN","IBJDI4",109,0)
 ;;Patients Not Covered by Insurance
"RTN","IBJDI4",110,0)
 ;;Patients with Unknown Insurance
"RTN","IBJDI4",111,0)
 ;;Patients with Insurance Question Unanswered
"RTN","IBJDI4",112,0)
 ;
"RTN","IBJDI4",113,0)
TYPE(INS) ; - Find type of insurance.
"RTN","IBJDI4",114,0)
 ;  Input: INS=Patient's insurance info in file #2 (.3121)
"RTN","IBJDI4",115,0)
 ; Output:   Y=1-HMO, 2-Medicare, 3-Medigap, 4-Indemnity, or
"RTN","IBJDI4",116,0)
 ;             0-None of the above
"RTN","IBJDI4",117,0)
 ;
"RTN","IBJDI4",118,0)
 N TYP
"RTN","IBJDI4",119,0)
 S Y=0,TYP=+$P($G(^IBA(355.3,+$P(INS,U,18),0)),U,9) I 'TYP G TYP1
"RTN","IBJDI4",120,0)
 I $D(^IBE(355.1,"B","HEALTH MAINTENANCE ORGANIZ",TYP)) S Y=1
"RTN","IBJDI4",121,0)
 I $D(^IBE(355.1,"B","POINT OF SERVICE",TYP)) S Y=1
"RTN","IBJDI4",122,0)
 I $D(^IBE(355.1,"B","PREPAID GROUP PRACTICE PLAN",TYP)) S Y=1
"RTN","IBJDI4",123,0)
 I $D(^IBE(355.1,"B","MEDICARE (M)",TYP)) S Y=2
"RTN","IBJDI4",124,0)
 I $D(^IBE(355.1,"B","MEDICARE/MEDICAID (MEDI-CAL)",TYP)) S Y=2
"RTN","IBJDI4",125,0)
 I $D(^IBE(355.1,"B","MEDIGAP (SUPPLEMENTAL)",TYP)) S Y=3
"RTN","IBJDI4",126,0)
 I $D(^IBE(355.1,"B","INCOME PROTECTION (INDEMNITY)",TYP)) S Y=4
"RTN","IBJDI4",127,0)
 ;
"RTN","IBJDI4",128,0)
TYP1 G:Y TYPQ S TYP=+$P($G(^DIC(36,+INS,0)),U,13) I 'TYP G TYPQ
"RTN","IBJDI4",129,0)
 I $D(^IBE(355.2,"B","HEALTH MAINTENANCE ORG.",TYP)) S Y=1
"RTN","IBJDI4",130,0)
 I $D(^IBE(355.2,"B","MEDICARE",TYP)) S Y=2
"RTN","IBJDI4",131,0)
 I $D(^IBE(355.2,"B","MEDIGAP",TYP)) S Y=3
"RTN","IBJDI4",132,0)
 I $D(^IBE(355.2,"B","INDEMNITY",TYP)) S Y=4
"RTN","IBJDI4",133,0)
 ;
"RTN","IBJDI4",134,0)
TYPQ Q Y
"RTN","IBJDI4",135,0)
 ;
"RTN","IBJDI4",136,0)
OUT() ; Prompt to allow users to select output format
"RTN","IBJDI4",137,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBJDI4",138,0)
 W !
"RTN","IBJDI4",139,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBJDI4",140,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBJDI4",141,0)
 S DIR("B")="Report"
"RTN","IBJDI4",142,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q ""
"RTN","IBJDI4",143,0)
 Q Y
"RTN","IBJDI41")
0^107^B150223354
"RTN","IBJDI41",1,0)
IBJDI41 ;ALB/CPM - PATIENTS WITH UNIDENTIFIED INSURANCE (CONT'D) ;17-DEC-96
"RTN","IBJDI41",2,0)
 ;;2.0;INTEGRATED BILLING;**98,100,118,528**;21-MAR-94;Build 163
"RTN","IBJDI41",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDI41",4,0)
 ;
"RTN","IBJDI41",5,0)
EN ; - Entry point from IBJDI4.
"RTN","IBJDI41",6,0)
 ;
"RTN","IBJDI41",7,0)
 ; - Find inpatients treated within the user-specified date range.
"RTN","IBJDI41",8,0)
 S IBD=IBBDT-.01 F  S IBD=$O(^DGPM("ATT3",IBD)) Q:'IBD!(IBD\1>IBEDT)  D  Q:IBQ
"RTN","IBJDI41",9,0)
 .S IBPM=0 F  S IBPM=$O(^DGPM("ATT3",IBD,IBPM)) Q:'IBPM  D  Q:IBQ
"RTN","IBJDI41",10,0)
 ..I IBPM#100=0 S IBQ=$$STOP^IBOUTL("Patients with Unidentified Insurance Report") Q:IBQ
"RTN","IBJDI41",11,0)
 ..S IBPMD=$G(^DGPM(IBPM,0)) I 'IBPMD Q
"RTN","IBJDI41",12,0)
 ..I IBSORT S IBDIV=$$DIV^IBJDI21(1,+$P(IBPMD,U,6)) Q:'$D(IB(IBDIV))
"RTN","IBJDI41",13,0)
 ..S DFN=+$P(IBPMD,U,3) Q:'DFN
"RTN","IBJDI41",14,0)
 ..;
"RTN","IBJDI41",15,0)
 ..; - Process patient.
"RTN","IBJDI41",16,0)
 ..I '$D(^TMP("IBJDI41",$J,DFN)) D PROC(DFN,IBD\1,"*")
"RTN","IBJDI41",17,0)
 ;
"RTN","IBJDI41",18,0)
 I IBQ G ENQ
"RTN","IBJDI41",19,0)
 ;
"RTN","IBJDI41",20,0)
 ; - Find outpatients treated within the user-specified date range.
"RTN","IBJDI41",21,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBJDI41",22,0)
 D OUTPT^IBJDI21("",IBBDT,IBEDT,"S:IBQ SDSTOP=1 I 'IBQ,$$ENCHK^IBJDI5(Y0) D ENC^IBJDI41(Y0)","Patients with Unidentified Insurance Report",.IBQ,"IBJDI41",.IBQUERY)
"RTN","IBJDI41",23,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBJDI41",24,0)
 ;
"RTN","IBJDI41",25,0)
 I IBQ G ENQ
"RTN","IBJDI41",26,0)
 ;
"RTN","IBJDI41",27,0)
 I IBRPT'="D" G PRT
"RTN","IBJDI41",28,0)
 ;
"RTN","IBJDI41",29,0)
 ; - Find data required for the report.
"RTN","IBJDI41",30,0)
 S DFN=0 F  S DFN=$O(^TMP("IBJDI41",$J,DFN)) Q:'DFN  S IBX=^(DFN) D  Q:IBQ
"RTN","IBJDI41",31,0)
 .I IBSEL=0,$P(IBX,U,4)'="*" Q
"RTN","IBJDI41",32,0)
 .I DFN#100=0 S IBQ=$$STOP^IBOUTL("Patients with Unidentified Insurance Report") Q:IBQ
"RTN","IBJDI41",33,0)
 .;
"RTN","IBJDI41",34,0)
 .; - Set patient eligibilities for report.
"RTN","IBJDI41",35,0)
 .D ELIG^VADPT S IBELIG=+$G(VAEL(1))_";"
"RTN","IBJDI41",36,0)
 .I +IBELIG>0 S X=0 F  S X=$O(VAEL(1,X)) Q:'X  S IBELIG=IBELIG_X_";"
"RTN","IBJDI41",37,0)
 .;
"RTN","IBJDI41",38,0)
 .; - Set up detailed information to appear on the report.
"RTN","IBJDI41",39,0)
 .S IBDN=$G(^DPT(DFN,0)),IBPAT=$P(IBDN,U)_$P(IBX,U,2)
"RTN","IBJDI41",40,0)
 .S IBPH=$P($G(^DPT(DFN,.13)),U,1,2),IBSEL1=$P(IBX,U,3)
"RTN","IBJDI41",41,0)
 .S IBDOD=$S(+$G(^DPT(DFN,.35)):$$DAT1^IBOUTL(+$G(^(.35))\1),1:"")
"RTN","IBJDI41",42,0)
 .F X=1:1 S X1=$P(IBSEL1,",",X) Q:X1=""  D
"RTN","IBJDI41",43,0)
 ..S ^TMP("IBJDI42",$J,$P(IBX,U),X1,IBPAT_"@@"_DFN)=$P(IBDN,U,9)_U_$P(IBPH,U)_U_$P(IBPH,U,2)_U_$S(+IBELIG>0:IBELIG,1:"")_U_$P(IBX,U,4)_U_IBDOD_U_$S(IBRMK:$P(IBDN,U,10),1:"")
"RTN","IBJDI41",44,0)
 .;
"RTN","IBJDI41",45,0)
 .K VA,VAEL,VAERR
"RTN","IBJDI41",46,0)
 ;
"RTN","IBJDI41",47,0)
 I IBQ G ENQ
"RTN","IBJDI41",48,0)
 ;
"RTN","IBJDI41",49,0)
PRT ; - Print the reports.
"RTN","IBJDI41",50,0)
 ;
"RTN","IBJDI41",51,0)
 ; - Extract summary data.
"RTN","IBJDI41",52,0)
 I $G(IBXTRACT) D  G ENQ
"RTN","IBJDI41",53,0)
 .F X="BILL","DEC","HMO","IND","MEDC","MEDG","NO","NULL","TOT","UNK","YES" S IB(X)=$G(IB("ALL",X))
"RTN","IBJDI41",54,0)
 .D E^IBJDE(4,0)
"RTN","IBJDI41",55,0)
 ;
"RTN","IBJDI41",56,0)
 S IBQ=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDI41",57,0)
 S IBDIV="" F  S IBDIV=$O(IB(IBDIV)) Q:IBDIV=""  D  Q:IBQ
"RTN","IBJDI41",58,0)
 .I IBRPT="D" D DET
"RTN","IBJDI41",59,0)
 .I IBOUT="E" D EXCSUM,PAUSE Q
"RTN","IBJDI41",60,0)
 .I 'IBQ D SUM,PAUSE
"RTN","IBJDI41",61,0)
 ;
"RTN","IBJDI41",62,0)
ENQ Q
"RTN","IBJDI41",63,0)
 ;
"RTN","IBJDI41",64,0)
ENC(IBOED) ; - Encounter extract for all patients loop.
"RTN","IBJDI41",65,0)
 ; Input: IBOED = Outpatient encounter in file #409.68
"RTN","IBJDI41",66,0)
 ; Pre-set variables IB array, IBSORT also required.
"RTN","IBJDI41",67,0)
 ;
"RTN","IBJDI41",68,0)
 I IBSORT S IBDIV=$$DIV^IBJDI21(0,+$P(IBOED,U,11)) Q:'$D(IB(IBDIV))
"RTN","IBJDI41",69,0)
 D PROC(+$P(IBOED,U,2),+IBOED\1,"") ; Process patient.
"RTN","IBJDI41",70,0)
 Q
"RTN","IBJDI41",71,0)
 ;
"RTN","IBJDI41",72,0)
PROC(DFN,IBINDT,IBIPC) ; - Process each specific patient.
"RTN","IBJDI41",73,0)
 ; Input:    DFN = Pointer to the patient in file #2
"RTN","IBJDI41",74,0)
 ;        IBINDT = Encounter or discharge date
"RTN","IBJDI41",75,0)
 ;         IBIPC = Inpatient treatment marker
"RTN","IBJDI41",76,0)
 ;                 ("*"=Had inpat. treatment, null=No inpat. treatment)
"RTN","IBJDI41",77,0)
 ;
"RTN","IBJDI41",78,0)
 ; Pre-set variables IB array, IBDIV, IBRPT, IBSEL also required.
"RTN","IBJDI41",79,0)
 ;
"RTN","IBJDI41",80,0)
 I $$TESTP^IBJDI1(DFN) Q  ;      Test patient.
"RTN","IBJDI41",81,0)
 D ELIG^VADPT I 'VAEL(4) G PRCQ ; Patient is not a vet.
"RTN","IBJDI41",82,0)
 ;
"RTN","IBJDI41",83,0)
 ; - Find 'Covered by Insurance' indicator and set flags.
"RTN","IBJDI41",84,0)
 S IBINSC="",IBSEL1=$S(IBSEL=0:"0,",1:""),IBX=$P($G(^DPT(DFN,.31)),U,11)
"RTN","IBJDI41",85,0)
 I IBX="Y"!(IBX="N") D
"RTN","IBJDI41",86,0)
 .I IBX="Y" D
"RTN","IBJDI41",87,0)
 ..S IB(IBDIV,"YES")=IB(IBDIV,"YES")+1 S:IBSEL[1 IBSEL1=IBSEL1_"1,"
"RTN","IBJDI41",88,0)
 .E  S IB(IBDIV,"NO")=IB(IBDIV,"NO")+1 S:IBSEL[7 IBSEL1=IBSEL1_"7,"
"RTN","IBJDI41",89,0)
 .;
"RTN","IBJDI41",90,0)
 .S (IBOUTP,IBWNR)=1 D ^IBCNS Q:'IBINS  F X=0:1:4 S IBFL(X)=0
"RTN","IBJDI41",91,0)
 .S X=0 F  S X=$O(IBDD(X)) Q:'X  D
"RTN","IBJDI41",92,0)
 ..I IBRPT="D",IBSEL'=0 S IBINSC=IBINSC_X_";"
"RTN","IBJDI41",93,0)
 ..I $P($G(^DIC(36,X,0)),U,2)'="N",'IBFL(0) D
"RTN","IBJDI41",94,0)
 ...S IB(IBDIV,"BILL")=IB(IBDIV,"BILL")+1,IBFL(0)=1
"RTN","IBJDI41",95,0)
 ...I IBSEL[2 S IBSEL1=IBSEL1_"2,"
"RTN","IBJDI41",96,0)
 ..S IBTYP=$$TYPE^IBJDI4(IBDD(X))
"RTN","IBJDI41",97,0)
 ..I IBTYP=1,'IBFL(1) D
"RTN","IBJDI41",98,0)
 ...S IB(IBDIV,"HMO")=IB(IBDIV,"HMO")+1,IBFL(1)=1
"RTN","IBJDI41",99,0)
 ...I IBSEL[3 S IBSEL1=IBSEL1_"3,"
"RTN","IBJDI41",100,0)
 ..I IBTYP=2,'IBFL(2) D
"RTN","IBJDI41",101,0)
 ...S IB(IBDIV,"MEDC")=IB(IBDIV,"MEDC")+1,IBFL(2)=1
"RTN","IBJDI41",102,0)
 ...I IBSEL[4 S IBSEL1=IBSEL1_"4,"
"RTN","IBJDI41",103,0)
 ..I IBTYP=3,'IBFL(3) D
"RTN","IBJDI41",104,0)
 ...S IB(IBDIV,"MEDG")=IB(IBDIV,"MEDG")+1,IBFL(3)=1
"RTN","IBJDI41",105,0)
 ...I IBSEL[5 S IBSEL1=IBSEL1_"5,"
"RTN","IBJDI41",106,0)
 ..I IBTYP=4,'IBFL(4) D
"RTN","IBJDI41",107,0)
 ...S IB(IBDIV,"IND")=IB(IBDIV,"IND")+1,IBFL(4)=1
"RTN","IBJDI41",108,0)
 ...I IBSEL[6 S IBSEL1=IBSEL1_"6,"
"RTN","IBJDI41",109,0)
 I IBX="U" D
"RTN","IBJDI41",110,0)
 .S IB(IBDIV,"UNK")=IB(IBDIV,"UNK")+1 S:IBSEL[8 IBSEL1=IBSEL1_"8,"
"RTN","IBJDI41",111,0)
 I IBX="" D
"RTN","IBJDI41",112,0)
 .S IB(IBDIV,"NULL")=IB(IBDIV,"NULL")+1 S:IBSEL[9 IBSEL1=IBSEL1_"9,"
"RTN","IBJDI41",113,0)
 I IBRPT="D",IBSEL=0,(IBX="U"!(IBX="")) S IBINSC="*"
"RTN","IBJDI41",114,0)
 ;
"RTN","IBJDI41",115,0)
 ; - Set patient index and 'total patients' accumulator.
"RTN","IBJDI41",116,0)
 S ^TMP("IBJDI41",$J,DFN)=IBDIV_U_$S(IBRPT="D":IBIPC_U_IBSEL1_U_IBINSC,1:"")
"RTN","IBJDI41",117,0)
 S IB(IBDIV,"TOT")=IB(IBDIV,"TOT")+1
"RTN","IBJDI41",118,0)
 I +$G(^DPT(DFN,.35)) S IB(IBDIV,"DEC")=IB(IBDIV,"DEC")+1 ; Deceased.
"RTN","IBJDI41",119,0)
 ;
"RTN","IBJDI41",120,0)
PRCQ K IBDD,IBFL,IBINS,IBINSC,IBOUTP,IBTYP,IBWNR,IBX,VA,VAERR,VAEL,X
"RTN","IBJDI41",121,0)
 Q
"RTN","IBJDI41",122,0)
 ;
"RTN","IBJDI41",123,0)
DIV(X) ; - Return division name.
"RTN","IBJDI41",124,0)
 S Y=$P($G(^DG(40.8,X,0)),U) I Y="" S Y=0
"RTN","IBJDI41",125,0)
 Q Y
"RTN","IBJDI41",126,0)
 ;
"RTN","IBJDI41",127,0)
DET ; - Print the detailed report.
"RTN","IBJDI41",128,0)
 I IBSEL=0,'$D(^TMP("IBJDI42",$J,IBDIV,0)) S IBX=0 D HDET W !!,"There were no ",$$TITLE^IBJDI4(0)," during this period." G DETQ
"RTN","IBJDI41",129,0)
 I IBSEL'=0 F X=1:1 S IBX=$P(IBSEL,",",X) Q:IBX=""  D
"RTN","IBJDI41",130,0)
 .I '$D(^TMP("IBJDI42",$J,IBDIV,IBX)) S IBPAG=0 D HDET W !!,"There were no ",$$TITLE^IBJDI4(IBX)," during this period."
"RTN","IBJDI41",131,0)
 ;
"RTN","IBJDI41",132,0)
 I IBOUT="E" D EXCHDR
"RTN","IBJDI41",133,0)
 S IBX="" F  S IBX=$O(^TMP("IBJDI42",$J,IBDIV,IBX)) Q:IBX=""  D  Q:IBQ
"RTN","IBJDI41",134,0)
 .I IBOUT="R" S IBPAG=0 D HDET Q:IBQ
"RTN","IBJDI41",135,0)
 .S IBX1="" F  S IBX1=$O(^TMP("IBJDI42",$J,IBDIV,IBX,IBX1)) Q:IBX1=""  S IBX2=^(IBX1) D  Q:IBQ
"RTN","IBJDI41",136,0)
 ..I IBOUT="E" D EXCOUT Q
"RTN","IBJDI41",137,0)
 ..I $Y>(IOSL-3) D PAUSE Q:IBQ  D HDET Q:IBQ
"RTN","IBJDI41",138,0)
 ..W $P(IBX1,"@@"),?27,$$SSN($P(IBX2,U)),?41,$E($P(IBX2,U,2),1,15),?58,$P(IBX2,U,3)
"RTN","IBJDI41",139,0)
 ..S IBELIG=$P(IBX2,U,4) W ?80,$$ELIG(+IBELIG)
"RTN","IBJDI41",140,0)
 ..S IBINSC=$P(IBX2,U,5) W ?102,$$INSC(+IBINSC),?124,$P(IBX2,U,6),!
"RTN","IBJDI41",141,0)
 ..I IBRMK,$P(IBX2,U,7)]"" W ?2,"Remarks: ",$P(IBX2,U,7)
"RTN","IBJDI41",142,0)
 ..I '$P(IBELIG,";",2),'$P(IBINSC,";",2),$P(IBX2,U,7)]"" W ! Q
"RTN","IBJDI41",143,0)
 ..F X=2:1 Q:'$P(IBELIG,";",X)&('$P(IBINSC,";",X))  D
"RTN","IBJDI41",144,0)
 ...W ?80,$$ELIG($P(IBELIG,";",X)),?102,$$INSC($P(IBINSC,";",X)),!
"RTN","IBJDI41",145,0)
 ;
"RTN","IBJDI41",146,0)
DETQ I 'IBQ D PAUSE
"RTN","IBJDI41",147,0)
 Q
"RTN","IBJDI41",148,0)
 ;
"RTN","IBJDI41",149,0)
EXCOUT ; OUTPUT EXCEL FORMAT
"RTN","IBJDI41",150,0)
 W !,$P(IBX1,"@@")_U_$$SSN($P(IBX2,U))_U_$E($P(IBX2,U,2),1,15)_U_$P(IBX2,U,3)_U
"RTN","IBJDI41",151,0)
 S IBELIG=$P(IBX2,U,4) W $$ELIG(+IBELIG)_U
"RTN","IBJDI41",152,0)
 S IBINSC=$P(IBX2,U,5) W $$INSC(+IBINSC)_U_$P(IBX2,U,6)_U
"RTN","IBJDI41",153,0)
 I IBRMK,$P(IBX2,U,7)]"" W $P(IBX2,U,7)_U
"RTN","IBJDI41",154,0)
 F X=2:1 Q:'$P(IBELIG,";",X)&('$P(IBINSC,";",X))  D
"RTN","IBJDI41",155,0)
 .W $$ELIG($P(IBELIG,";",X))_U_$$INSC($P(IBINSC,";",X))
"RTN","IBJDI41",156,0)
 Q
"RTN","IBJDI41",157,0)
 ;
"RTN","IBJDI41",158,0)
HDET ; - Write the detail report header.
"RTN","IBJDI41",159,0)
 W @IOF,*13 S IBPAG=$G(IBPAG)+1
"RTN","IBJDI41",160,0)
 W !,$$TITLE^IBJDI4(IBX),$S(IBDIV'="ALL":" for "_IBDIV,1:""),?80,"Run Date: ",IBRUN,?123,"Page: ",IBPAG
"RTN","IBJDI41",161,0)
 W !,"Patients treated in the period "_$$DAT1^IBOUTL(IBBDT)_" to "_$$DAT1^IBOUTL(IBEDT),"   NOTE: *=Had inpatient care, +=Billable insurance"
"RTN","IBJDI41",162,0)
 W !!?45,"Home",?62,"Work",?124,"Date of"
"RTN","IBJDI41",163,0)
 W !,"Patient",?27,"SSN",?41,"Phone Number",?58,"Phone Number",?80,"Eligibility",?102,"Insurance",?125,"Death"
"RTN","IBJDI41",164,0)
 W !,$$DASH(132),!!
"RTN","IBJDI41",165,0)
 S IBQ=$$STOP^IBOUTL("Patients with Unidentified Insurance Report")
"RTN","IBJDI41",166,0)
 Q
"RTN","IBJDI41",167,0)
 ;
"RTN","IBJDI41",168,0)
EXCHDR ; Write the excel header.
"RTN","IBJDI41",169,0)
 W !,$$TITLE^IBJDI4(IBX),$S(IBDIV'="ALL":" for "_IBDIV,1:"")
"RTN","IBJDI41",170,0)
 W !,"Run Date: ",IBRUN
"RTN","IBJDI41",171,0)
 W !,"Patients treated in the period "_$$DAT1^IBOUTL(IBBDT)_" to "_$$DAT1^IBOUTL(IBEDT),"   NOTE: *=Had inpatient care, +=Billable insurance"
"RTN","IBJDI41",172,0)
 W !,"Patient"_U_"SSN"_U_"Home Phone Number"_U_"Work Phone Number"_U_"Eligibility"_U_"Insurance"_U_"Date of Death"
"RTN","IBJDI41",173,0)
 Q
"RTN","IBJDI41",174,0)
 ;
"RTN","IBJDI41",175,0)
SUM ; - Print the summary report.
"RTN","IBJDI41",176,0)
 W @IOF,*13 S IBPAG=$G(IBPAG)+1
"RTN","IBJDI41",177,0)
 W !!?26,"PATIENT INSURANCE STATISTICS",!
"RTN","IBJDI41",178,0)
 I IBDIV'="ALL" W ?(61-$L(IBDIV))\2,"SUMMARY REPORT for ",IBDIV
"RTN","IBJDI41",179,0)
 E  W ?33,"SUMMARY REPORT"
"RTN","IBJDI41",180,0)
 W !!?19,"Patients treated from ",$$DAT1^IBOUTL(IBBDT)," - ",$$DAT1^IBOUTL(IBEDT)
"RTN","IBJDI41",181,0)
 W !!?24,"Run Date: ",IBRUN,!?20,$$DASH(40),!!
"RTN","IBJDI41",182,0)
 ;
"RTN","IBJDI41",183,0)
 S IBPER(1)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"YES")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",184,0)
 S IBPER(2)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"BILL")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",185,0)
 S IBPER(3)=$J($S('IB(IBDIV,"YES"):0,1:IB(IBDIV,"BILL")/IB(IBDIV,"YES")*100),0,2)
"RTN","IBJDI41",186,0)
 S IBPER(4)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"HMO")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",187,0)
 S IBPER(5)=$J($S('IB(IBDIV,"YES"):0,1:IB(IBDIV,"HMO")/IB(IBDIV,"YES")*100),0,2)
"RTN","IBJDI41",188,0)
 S IBPER(6)=$J($S('IB(IBDIV,"BILL"):0,1:IB(IBDIV,"HMO")/IB(IBDIV,"BILL")*100),0,2)
"RTN","IBJDI41",189,0)
 S IBPER(7)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"MEDC")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",190,0)
 S IBPER(8)=$J($S('IB(IBDIV,"YES"):0,1:IB(IBDIV,"MEDC")/IB(IBDIV,"YES")*100),0,2)
"RTN","IBJDI41",191,0)
 S IBPER(9)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"MEDG")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",192,0)
 S IBPER(10)=$J($S('IB(IBDIV,"YES"):0,1:IB(IBDIV,"MEDG")/IB(IBDIV,"YES")*100),0,2)
"RTN","IBJDI41",193,0)
 S IBPER(11)=$J($S('IB(IBDIV,"BILL"):0,1:IB(IBDIV,"MEDG")/IB(IBDIV,"BILL")*100),0,2)
"RTN","IBJDI41",194,0)
 S IBPER(12)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"IND")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",195,0)
 S IBPER(13)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"NO")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",196,0)
 S IBPER(14)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"UNK")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",197,0)
 S IBPER(15)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"NULL")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",198,0)
 S IBPER(16)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"DEC")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",199,0)
 W ?22,"Number of Patients Treated:",?50,$J(IB(IBDIV,"TOT"),5)
"RTN","IBJDI41",200,0)
 W !?9,"Number of Patients Covered by Insurance:",?50,$J(IB(IBDIV,"YES"),5)," (",IBPER(1),"%)"
"RTN","IBJDI41",201,0)
 W !?3,"No. of Patients Covered by Billable Insurance:",?50,$J(IB(IBDIV,"BILL"),5)," (",IBPER(2),"%-",IBPER(3),"%)*"
"RTN","IBJDI41",202,0)
 W !?12,"Number of Patients Covered by an HMO:",?50,$J(IB(IBDIV,"HMO"),5)," (",IBPER(4),"%-",IBPER(5),"%-",IBPER(6),"%)**"
"RTN","IBJDI41",203,0)
 W !?10,"Number of Patients Covered by Medicare:",?50,$J(IB(IBDIV,"MEDC"),5)," (",IBPER(7),"%-",IBPER(8),"%)*"
"RTN","IBJDI41",204,0)
 W !?11,"Number of Patients Covered by Medigap:",?50,$J(IB(IBDIV,"MEDG"),5)," (",IBPER(9),"%-",IBPER(10),"%-",IBPER(11),"%)**"
"RTN","IBJDI41",205,0)
 W !?2,"No. of Patients Covered by an Indemnity Policy:",?50,$J(IB(IBDIV,"IND"),5)," (",IBPER(12),"%)"
"RTN","IBJDI41",206,0)
 W !?5,"Number of Patients Not Covered by Insurance:",?50,$J(IB(IBDIV,"NO"),5)," (",IBPER(13),"%)"
"RTN","IBJDI41",207,0)
 W !?7,"Number of Patients with Unknown Insurance:",?50,$J(IB(IBDIV,"UNK"),5)," (",IBPER(14),"%)"
"RTN","IBJDI41",208,0)
 W !," No. of Patients w/Insurance Question Unanswered:",?50,$J(IB(IBDIV,"NULL"),5)," (",IBPER(15),"%)"
"RTN","IBJDI41",209,0)
 W !?21,"Number of Deceased Patients:",?50,$J(IB(IBDIV,"DEC"),5)," (",IBPER(16),"%)"
"RTN","IBJDI41",210,0)
 W !!," *(% from patients treated-% from patients with insurance)"
"RTN","IBJDI41",211,0)
 W !,"**(% from patients treated-% from patients w/ins-% from patients w/billable ins)"
"RTN","IBJDI41",212,0)
 Q
"RTN","IBJDI41",213,0)
 ;
"RTN","IBJDI41",214,0)
EXCSUM ; - Print the summary report in excel format.
"RTN","IBJDI41",215,0)
 W @IOF,*13 S IBPAG=$G(IBPAG)+1
"RTN","IBJDI41",216,0)
 W !!,"PATIENT INSURANCE STATISTICS",!
"RTN","IBJDI41",217,0)
 I IBDIV'="ALL" W ?(61-$L(IBDIV))\2,"SUMMARY REPORT for ",IBDIV
"RTN","IBJDI41",218,0)
 E  W ?33,"SUMMARY REPORT"
"RTN","IBJDI41",219,0)
 W !!,"Patients treated from ",$$DAT1^IBOUTL(IBBDT)," - ",$$DAT1^IBOUTL(IBEDT)
"RTN","IBJDI41",220,0)
 W !!,"Run Date: ",IBRUN,!?20,$$DASH(40),!!
"RTN","IBJDI41",221,0)
 ;
"RTN","IBJDI41",222,0)
 S IBPER(1)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"YES")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",223,0)
 S IBPER(2)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"BILL")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",224,0)
 S IBPER(3)=$J($S('IB(IBDIV,"YES"):0,1:IB(IBDIV,"BILL")/IB(IBDIV,"YES")*100),0,2)
"RTN","IBJDI41",225,0)
 S IBPER(4)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"HMO")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",226,0)
 S IBPER(5)=$J($S('IB(IBDIV,"YES"):0,1:IB(IBDIV,"HMO")/IB(IBDIV,"YES")*100),0,2)
"RTN","IBJDI41",227,0)
 S IBPER(6)=$J($S('IB(IBDIV,"BILL"):0,1:IB(IBDIV,"HMO")/IB(IBDIV,"BILL")*100),0,2)
"RTN","IBJDI41",228,0)
 S IBPER(7)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"MEDC")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",229,0)
 S IBPER(8)=$J($S('IB(IBDIV,"YES"):0,1:IB(IBDIV,"MEDC")/IB(IBDIV,"YES")*100),0,2)
"RTN","IBJDI41",230,0)
 S IBPER(9)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"MEDG")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",231,0)
 S IBPER(10)=$J($S('IB(IBDIV,"YES"):0,1:IB(IBDIV,"MEDG")/IB(IBDIV,"YES")*100),0,2)
"RTN","IBJDI41",232,0)
 S IBPER(11)=$J($S('IB(IBDIV,"BILL"):0,1:IB(IBDIV,"MEDG")/IB(IBDIV,"BILL")*100),0,2)
"RTN","IBJDI41",233,0)
 S IBPER(12)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"IND")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",234,0)
 S IBPER(13)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"NO")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",235,0)
 S IBPER(14)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"UNK")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",236,0)
 S IBPER(15)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"NULL")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",237,0)
 S IBPER(16)=$J($S('IB(IBDIV,"TOT"):0,1:IB(IBDIV,"DEC")/IB(IBDIV,"TOT")*100),0,2)
"RTN","IBJDI41",238,0)
 W "Number of Patients Treated:"_U_$J(IB(IBDIV,"TOT"),5)
"RTN","IBJDI41",239,0)
 W !,"Number of Patients Covered by Insurance:"_U_$J(IB(IBDIV,"YES"),5)," (",IBPER(1),"%)"
"RTN","IBJDI41",240,0)
 W !,"No. of Patients Covered by Billable Insurance:"_U_$J(IB(IBDIV,"BILL"),5)," (",IBPER(2),"%-",IBPER(3),"%)*"
"RTN","IBJDI41",241,0)
 W !,"Number of Patients Covered by an HMO:"_U_$J(IB(IBDIV,"HMO"),5)," (",IBPER(4),"%-",IBPER(5),"%-",IBPER(6),"%)**"
"RTN","IBJDI41",242,0)
 W !,"Number of Patients Covered by Medicare:"_U_$J(IB(IBDIV,"MEDC"),5)," (",IBPER(7),"%-",IBPER(8),"%)*"
"RTN","IBJDI41",243,0)
 W !,"Number of Patients Covered by Medigap:"_U_$J(IB(IBDIV,"MEDG"),5)," (",IBPER(9),"%-",IBPER(10),"%-",IBPER(11),"%)**"
"RTN","IBJDI41",244,0)
 W !,"No. of Patients Covered by an Indemnity Policy:"_U_$J(IB(IBDIV,"IND"),5)," (",IBPER(12),"%)"
"RTN","IBJDI41",245,0)
 W !,"Number of Patients Not Covered by Insurance:"_U_$J(IB(IBDIV,"NO"),5)," (",IBPER(13),"%)"
"RTN","IBJDI41",246,0)
 W !,"Number of Patients with Unknown Insurance:"_U_$J(IB(IBDIV,"UNK"),5)," (",IBPER(14),"%)"
"RTN","IBJDI41",247,0)
 W !,"No. of Patients w/Insurance Question Unanswered:"_U_$J(IB(IBDIV,"NULL"),5)," (",IBPER(15),"%)"
"RTN","IBJDI41",248,0)
 W !,"Number of Deceased Patients:"_U_$J(IB(IBDIV,"DEC"),5)," (",IBPER(16),"%)"
"RTN","IBJDI41",249,0)
 W !!," *(% from patients treated-% from patients with insurance)"
"RTN","IBJDI41",250,0)
 W !,"**(% from patients treated-% from patients w/ins-% from patients w/billable ins)"
"RTN","IBJDI41",251,0)
 Q
"RTN","IBJDI41",252,0)
 ;
"RTN","IBJDI41",253,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDI41",254,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDI41",255,0)
 ;
"RTN","IBJDI41",256,0)
ELIG(X) ; - Return eligibility code name.
"RTN","IBJDI41",257,0)
 Q $E($P($G(^DIC(8,+X,0)),U),1,20)
"RTN","IBJDI41",258,0)
 ;
"RTN","IBJDI41",259,0)
INSC(X) ; - Return insurance company.
"RTN","IBJDI41",260,0)
 S X=$G(^DIC(36,+X,0))
"RTN","IBJDI41",261,0)
 Q $E($P(X,U),1,20)_$S($P(X,U,2)["Y"!($P(X,U,2)["*"):"+",1:"")
"RTN","IBJDI41",262,0)
 ;
"RTN","IBJDI41",263,0)
PAUSE ; - Page break.
"RTN","IBJDI41",264,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDI41",265,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDI41",266,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDI41",267,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBJDI41",268,0)
 Q
"RTN","IBJDI41",269,0)
 ;
"RTN","IBJDI41",270,0)
SSN(X) ; - Format the SSN.
"RTN","IBJDI41",271,0)
 Q $S(X]"":$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),1:"")
"RTN","IBJDI5")
0^108^B97543922
"RTN","IBJDI5",1,0)
IBJDI5 ;ALB/CPM - INSURANCE POLICIES NOT VERIFIED ;18-DEC-96
"RTN","IBJDI5",2,0)
 ;;2.0;INTEGRATED BILLING;**69,98,100,118,123,528**;21-MAR-94;Build 163
"RTN","IBJDI5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJDI5",4,0)
 ;
"RTN","IBJDI5",5,0)
EN ; - Option entry point.
"RTN","IBJDI5",6,0)
 ;
"RTN","IBJDI5",7,0)
 W !!,"This report provides a number of the insurance policies which were"
"RTN","IBJDI5",8,0)
 W !,"entered into the system within a given timeframe, but were never verified.",!
"RTN","IBJDI5",9,0)
 ;
"RTN","IBJDI5",10,0)
DATE D DATE^IBOUTL I IBBDT=""!(IBEDT="") G ENQ
"RTN","IBJDI5",11,0)
 ;
"RTN","IBJDI5",12,0)
 ; - Select a detailed or summary report.
"RTN","IBJDI5",13,0)
 D DS^IBJD I IBRPT["^" G ENQ
"RTN","IBJDI5",14,0)
 ;
"RTN","IBJDI5",15,0)
 ; - Select print/not print verified policies/totals.
"RTN","IBJDI5",16,0)
 S DIR(0)="YO"
"RTN","IBJDI5",17,0)
 S DIR("A",1)="Do you want to print a "_$S(IBRPT="D":"separate report for",1:"total number of")_" policies that were verified"
"RTN","IBJDI5",18,0)
 S DIR("A")="  over a year ago"
"RTN","IBJDI5",19,0)
 S DIR("B")="NO" D ^DIR K DIR S IBVER=Y I IBVER["^" G ENQ
"RTN","IBJDI5",20,0)
 ;
"RTN","IBJDI5",21,0)
 ; pick excel or report format
"RTN","IBJDI5",22,0)
 N IBOUT
"RTN","IBJDI5",23,0)
 S IBOUT=$$OUT
"RTN","IBJDI5",24,0)
 ;
"RTN","IBJDI5",25,0)
 ;
"RTN","IBJDI5",26,0)
 I IBRPT="D" W !!,"You will need a 132 column printer for this report!"
"RTN","IBJDI5",27,0)
 E  W !!,"This report only requires an 80 column printer."
"RTN","IBJDI5",28,0)
 ;
"RTN","IBJDI5",29,0)
 W !!,"Note: This report may take a while to run."
"RTN","IBJDI5",30,0)
 W !?6,"You should queue this report to run after normal business hours.",!
"RTN","IBJDI5",31,0)
 ;
"RTN","IBJDI5",32,0)
 ; - Select a device.
"RTN","IBJDI5",33,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBJDI5",34,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBJDI5",35,0)
 .S ZTRTN="DQ^IBJDI5",ZTDESC="IB - INSURANCE POLICIES NOT VERIFIED"
"RTN","IBJDI5",36,0)
 .F I="IBBDT","IBEDT","IBRPT","IBVER","IBOUT" S ZTSAVE(I)=""
"RTN","IBJDI5",37,0)
 .D ^%ZTLOAD
"RTN","IBJDI5",38,0)
 .W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBJDI5",39,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBJDI5",40,0)
 ;
"RTN","IBJDI5",41,0)
 U IO
"RTN","IBJDI5",42,0)
 ;
"RTN","IBJDI5",43,0)
DQ ; - Tasked entry point.
"RTN","IBJDI5",44,0)
 ;
"RTN","IBJDI5",45,0)
 I $G(IBXTRACT) D E^IBJDE(5,1) ; Change extract status.
"RTN","IBJDI5",46,0)
 ;
"RTN","IBJDI5",47,0)
 N IBQUERY
"RTN","IBJDI5",48,0)
 K IB,^TMP("IBJDI51",$J),^TMP("IBJDI52",$J)
"RTN","IBJDI5",49,0)
 S (IB("NOT"),IB("TOT"),IB("VER"),IBQ)=0 S:IBVER IB("VERO")=0
"RTN","IBJDI5",50,0)
 ;
"RTN","IBJDI5",51,0)
 ; - Find inpatients treated within the user-specified date range.
"RTN","IBJDI5",52,0)
 S IBD=IBBDT-.01 F  S IBD=$O(^DGPM("ATT3",IBD)) Q:'IBD!(IBD\1>IBEDT)  D  Q:IBQ
"RTN","IBJDI5",53,0)
 .S IBPM=0 F  S IBPM=$O(^DGPM("ATT3",IBD,IBPM)) Q:'IBPM  D  Q:IBQ
"RTN","IBJDI5",54,0)
 ..I IBPM#100=0 S IBQ=$$STOP^IBOUTL("Insurance Policies Not Verified") Q:IBQ
"RTN","IBJDI5",55,0)
 ..S IBPMD=$G(^DGPM(IBPM,0)) Q:'IBPMD
"RTN","IBJDI5",56,0)
 ..S DFN=+$P(IBPMD,U,3) Q:'DFN
"RTN","IBJDI5",57,0)
 ..;
"RTN","IBJDI5",58,0)
 ..; - Process patient.
"RTN","IBJDI5",59,0)
 ..I '$D(^TMP("IBJDI51",$J,DFN)) D PROC(DFN,"*",IBD)
"RTN","IBJDI5",60,0)
 ;
"RTN","IBJDI5",61,0)
 I IBQ G ENQ
"RTN","IBJDI5",62,0)
 ;
"RTN","IBJDI5",63,0)
 ; - Find outpatients treated within the user-specified date range.
"RTN","IBJDI5",64,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBJDI5",65,0)
 D OUTPT^IBJDI21("",IBBDT,IBEDT,"S:IBQ SDSTOP=1 I 'IBQ,$$ENCHK^IBJDI5(Y0) D ENC^IBJDI5(Y0)","Insurance Policies Not Verified",.IBQ,"IBJDI51",.IBQUERY)
"RTN","IBJDI5",66,0)
 D CLOSE^IBSDU(.IBQUERY)
"RTN","IBJDI5",67,0)
 ;
"RTN","IBJDI5",68,0)
 I IBQ G ENQ
"RTN","IBJDI5",69,0)
 ;
"RTN","IBJDI5",70,0)
 ; - Find data required for the report.
"RTN","IBJDI5",71,0)
 S IBC=0 F  S IBC=$O(^TMP("IBJDI51",$J,IBC)) Q:'IBC  D  Q:IBQ
"RTN","IBJDI5",72,0)
 .I IBC#100=0 S IBQ=$$STOP^IBOUTL("Insurance Policies Not Verified") Q:IBQ
"RTN","IBJDI5",73,0)
 .;
"RTN","IBJDI5",74,0)
 .; - Get the patient's active insurance policies.
"RTN","IBJDI5",75,0)
 .K IBINS S IBC1=$G(^TMP("IBJDI51",$J,IBC))
"RTN","IBJDI5",76,0)
 .D ALL^IBCNS1(IBC,"IBINS",1,+IBC1) Q:'$D(IBINS)
"RTN","IBJDI5",77,0)
 .S IBC2=0 F  S IBC2=$O(IBINS(IBC2)) Q:'IBC2  D
"RTN","IBJDI5",78,0)
 ..;
"RTN","IBJDI5",79,0)
 ..; - Make sure the insurance company reimburses VA.
"RTN","IBJDI5",80,0)
 ..S IBC3=$G(^DIC(36,+$G(IBINS(IBC2,0)),0))
"RTN","IBJDI5",81,0)
 ..Q:$P(IBC3,U)=""  Q:$P(IBC3,U,2)="N"
"RTN","IBJDI5",82,0)
 ..;
"RTN","IBJDI5",83,0)
 ..S IBCDFND=$G(IBINS(IBC2,1))
"RTN","IBJDI5",84,0)
 ..;
"RTN","IBJDI5",85,0)
 ..S IB("TOT")=IB("TOT")+1 ; Count all.
"RTN","IBJDI5",86,0)
 ..;
"RTN","IBJDI5",87,0)
 ..; - Check if policy is verified, verified over a year, or neither.
"RTN","IBJDI5",88,0)
 ..S IBVFLG=0
"RTN","IBJDI5",89,0)
 ..I $P(IBCDFND,U,3) D  Q:'IBVFLG
"RTN","IBJDI5",90,0)
 ...S IB("VER")=IB("VER")+1 Q:'IBVER
"RTN","IBJDI5",91,0)
 ...S X1=DT,X2=$P(IBCDFND,U,3) D ^%DTC
"RTN","IBJDI5",92,0)
 ...I X>365 S IB("VERO")=IB("VERO")+1,IBVFLG=1
"RTN","IBJDI5",93,0)
 ..E  S IB("NOT")=IB("NOT")+1
"RTN","IBJDI5",94,0)
 ..;
"RTN","IBJDI5",95,0)
 ..; - Build line for detailed report.
"RTN","IBJDI5",96,0)
 ..I IBRPT="D" D
"RTN","IBJDI5",97,0)
 ...S IBDOD=$S(+$G(^DPT(IBC,.35)):$$DAT2^IBOUTL(+$G(^(.35))\1),1:"")
"RTN","IBJDI5",98,0)
 ...S X=$G(^DPT(IBC,0)),IBEBY=$P(IBCDFND,U,2)
"RTN","IBJDI5",99,0)
 ...S IBVDTE=$S(IBVFLG:$P(IBCDFND,U,3),1:"")
"RTN","IBJDI5",100,0)
 ...S IBVBY=$S(IBVFLG:$P(IBCDFND,U,4),1:"")
"RTN","IBJDI5",101,0)
 ...S ^TMP("IBJDI52",$J,IBVFLG,$P(X,U)_$P(IBC1,U,2)_"@@"_$P(X,U,9)_"@@"_IBDOD_"@@"_IBC,IBC2)=$P(IBC3,U)_U_IBEBY_U_$S(+IBCDFND>0:+IBCDFND\1,1:"")_U_IBVBY_U_$S(+IBVDTE>0:IBVDTE\1,1:"")
"RTN","IBJDI5",102,0)
 ;
"RTN","IBJDI5",103,0)
 I IBQ G ENQ
"RTN","IBJDI5",104,0)
 ;
"RTN","IBJDI5",105,0)
 I $G(IBXTRACT) D E^IBJDE(5,0) G ENQ ; Extract summary data.
"RTN","IBJDI5",106,0)
 ;
"RTN","IBJDI5",107,0)
 ; - Print the reports.
"RTN","IBJDI5",108,0)
 S (IBPAG,IBQ)=0 D NOW^%DTC S IBRUN=$$DAT2^IBOUTL(%)
"RTN","IBJDI5",109,0)
 I IBRPT="D" D DET
"RTN","IBJDI5",110,0)
 I 'IBQ D:IBOUT="R" SUM
"RTN","IBJDI5",111,0)
 I IBOUT="E" D EXCSUM
"RTN","IBJDI5",112,0)
 ;
"RTN","IBJDI5",113,0)
 I 'IBQ D PAUSE
"RTN","IBJDI5",114,0)
 ;
"RTN","IBJDI5",115,0)
ENQ K ^TMP("IBJDI51",$J),^TMP("IBJDI52",$J)
"RTN","IBJDI5",116,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDI5",117,0)
 ;
"RTN","IBJDI5",118,0)
 D ^%ZISC
"RTN","IBJDI5",119,0)
ENQ1 K IB,IBQ,IBBDT,IBEDT,IBRPT,IBD,IBDN,IBPH,IBPM,IBINS,IBPMD,IBPAG,IBRUN,%
"RTN","IBJDI5",120,0)
 K IBEBY,IBVBY,IBVDTE,IBDOD,IBPER,IBC,IBC1,IBC2,IBC3,IBCDFN,IBVER,IBVFLG
"RTN","IBJDI5",121,0)
 K IBCDFND,IBX,IBX1,IBX2,IBX3,DFN,POP,X,X1,X2,Y,ZTDESC,ZTRTN,ZTSAVE,%ZIS,IBXTRACT,STOP
"RTN","IBJDI5",122,0)
 Q
"RTN","IBJDI5",123,0)
 ;
"RTN","IBJDI5",124,0)
ENC(IBOED) ; - Encounter extract for outpatient loop.
"RTN","IBJDI5",125,0)
 ; Input: IBOED = Outpatient encounter in file #409.68
"RTN","IBJDI5",126,0)
 ;
"RTN","IBJDI5",127,0)
 D PROC(+$P(IBOED,U,2),"",+IBOED) ; Process patient.
"RTN","IBJDI5",128,0)
 Q
"RTN","IBJDI5",129,0)
 ;
"RTN","IBJDI5",130,0)
PROC(DFN,IBIPC,IBDTE) ; - Process each specific patient.
"RTN","IBJDI5",131,0)
 ;  Input:   DFN = Pointer to the patient in file #2
"RTN","IBJDI5",132,0)
 ;         IBIPC = Inpatient treatment marker
"RTN","IBJDI5",133,0)
 ;                 ("*"=Had inpat. treatment, null=No inpat. treatment)
"RTN","IBJDI5",134,0)
 ;         IBDTE = Patient's checkout or discharge date
"RTN","IBJDI5",135,0)
 ;
"RTN","IBJDI5",136,0)
 I $$TESTP^IBJDI1(DFN) Q  ;       Test patient.
"RTN","IBJDI5",137,0)
 D ELIG^VADPT I 'VAEL(4) G PRCQ ; Patient is not a vet.
"RTN","IBJDI5",138,0)
 ;
"RTN","IBJDI5",139,0)
 ; - Set patient index.
"RTN","IBJDI5",140,0)
 S ^TMP("IBJDI51",$J,DFN)=IBDTE\1_U_IBIPC
"RTN","IBJDI5",141,0)
 ;
"RTN","IBJDI5",142,0)
PRCQ K VA,VAERR,VAEL
"RTN","IBJDI5",143,0)
 Q
"RTN","IBJDI5",144,0)
 ;
"RTN","IBJDI5",145,0)
ENCHK(IBOED) ; - Check outpatient's encounter record.
"RTN","IBJDI5",146,0)
 ;  Input: IBOED = Outpatient encounter in file #409.68
"RTN","IBJDI5",147,0)
 ; Output:     1 = OK for processing
"RTN","IBJDI5",148,0)
 ;             0 = Not OK for processing
"RTN","IBJDI5",149,0)
 ;
"RTN","IBJDI5",150,0)
 N X,X1 S Y=0 I '$G(IBOED) G ENCKQ
"RTN","IBJDI5",151,0)
 ;
"RTN","IBJDI5",152,0)
 ; - Check if encounter was a registration/cancellation without exam.  
"RTN","IBJDI5",153,0)
 S X=+$P(IBOED,U,2)
"RTN","IBJDI5",154,0)
 S X1=+$P($G(^DPT(X,"DIS",+$O(^DPT("ADIS",+IBOED,X,0)),0)),U,7)
"RTN","IBJDI5",155,0)
 I $D(^DIC(37,"B","CANCEL WITHOUT EXAM",X1)) G ENCKQ
"RTN","IBJDI5",156,0)
 I $D(^DIC(37,"B","NO CARE OR TREATMENT REQUIRED",X1)) G ENCKQ
"RTN","IBJDI5",157,0)
 ;
"RTN","IBJDI5",158,0)
 I "^1^4^7^"[("^"_+$P(IBOED,U,10)_"^") G ENCKQ ; C&P/collat/emply visit.
"RTN","IBJDI5",159,0)
 I $P(IBOED,U,12)'=2 G ENCKQ ;                   Not checked out.
"RTN","IBJDI5",160,0)
 ;
"RTN","IBJDI5",161,0)
 S Y=1
"RTN","IBJDI5",162,0)
ENCKQ Q Y
"RTN","IBJDI5",163,0)
 ;
"RTN","IBJDI5",164,0)
DET ; - Print the detailed report.
"RTN","IBJDI5",165,0)
 I '$D(^TMP("IBJDI52",$J,0)) S IBX=0 D HDET W !,"All policies within the selected date range have been verified." D PAUSE
"RTN","IBJDI5",166,0)
 I IBOUT="E" S IBX=0 D EXCHDR
"RTN","IBJDI5",167,0)
 S IBX="" F  S IBX=$O(^TMP("IBJDI52",$J,IBX)) Q:IBX=""  D  Q:IBQ
"RTN","IBJDI5",168,0)
 .I IBOUT="R" D HDET Q:IBQ
"RTN","IBJDI5",169,0)
 .S IBX1="" F  S IBX1=$O(^TMP("IBJDI52",$J,IBX,IBX1)) Q:IBX1=""  D  Q:IBQ
"RTN","IBJDI5",170,0)
 ..I IBOUT="R" I $Y>(IOSL-4) D PAUSE Q:IBQ  D HDET Q:IBQ
"RTN","IBJDI5",171,0)
 ..I IBOUT="R" W $P(IBX1,"@@"),?33,$$SSN($P(IBX1,"@@",2)),?47,$P(IBX1,"@@",3)
"RTN","IBJDI5",172,0)
 ..S IBX2=0 F  S IBX2=$O(^TMP("IBJDI52",$J,IBX,IBX1,IBX2)) Q:'IBX2  S IBX3=^(IBX2) D
"RTN","IBJDI5",173,0)
 ...I IBOUT="R" I $Y>(IOSL-4) D PAUSE Q:IBQ  D HDET Q:IBQ
"RTN","IBJDI5",174,0)
 ...I IBOUT="R" D
"RTN","IBJDI5",175,0)
 ....W ?62,$P(IBX3,U),?94,$E($P($G(^VA(200,+$P(IBX3,U,2),0)),U),1,24)
"RTN","IBJDI5",176,0)
 ....W ?120,$$DAT2^IBOUTL($P(IBX3,U,3)),!
"RTN","IBJDI5",177,0)
 ....I IBX W ?94,$E($P($G(^VA(200,+$P(IBX3,U,4),0)),U),1,24),?120,$$DAT2^IBOUTL($P(IBX3,U,5)),!
"RTN","IBJDI5",178,0)
 ...I IBOUT="E" D
"RTN","IBJDI5",179,0)
 ....W $P(IBX1,"@@")_U_$$SSN($P(IBX1,"@@",2))_U_$P(IBX1,"@@",3)
"RTN","IBJDI5",180,0)
 ....W U_$P(IBX3,U)_U_$E($P($G(^VA(200,+$P(IBX3,U,2),0)),U),1,24)_U_$$DAT2^IBOUTL($P(IBX3,U,3)),!
"RTN","IBJDI5",181,0)
 ....I IBX W "^^^^"_$E($P($G(^VA(200,+$P(IBX3,U,4),0)),U),1,24)_U_$$DAT2^IBOUTL($P(IBX3,U,5)),!
"RTN","IBJDI5",182,0)
 .;
"RTN","IBJDI5",183,0)
 .I 'IBQ,IBOUT="R" D PAUSE
"RTN","IBJDI5",184,0)
 ;
"RTN","IBJDI5",185,0)
 I IBOUT="R",'$D(^TMP("IBJDI52",$J,1)),IBVER S IBX=1 D HDET W !,"All policies within the selected date range have been verified less than a year ago." D PAUSE
"RTN","IBJDI5",186,0)
 Q
"RTN","IBJDI5",187,0)
 ;
"RTN","IBJDI5",188,0)
HDET ; - Write the detail report header.
"RTN","IBJDI5",189,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDI5",190,0)
 S IBPAG=IBPAG+1
"RTN","IBJDI5",191,0)
 W !,"Insurance Policies ",$S(IBX:"Verified Over a Year Ago",1:"Not Verified"),?80,"Run Date: ",IBRUN,?123,"Page: ",IBPAG
"RTN","IBJDI5",192,0)
 W !,"For Patients treated for the period "_$$DAT1^IBOUTL(IBBDT)_" to "_$$DAT1^IBOUTL(IBEDT)_"  ('*' = Had inpatient care)"
"RTN","IBJDI5",193,0)
 I IBX W !?94,"Policy Entered By         Date Entered"
"RTN","IBJDI5",194,0)
 W !,"Patient",?33,"SSN",?47,"Date of Death"
"RTN","IBJDI5",195,0)
 W ?62,"Insurance Company",?94,"Policy ",$S(IBX:"Verified",1:"Entered")," By",?120,"Date ",$S(IBX:"Verif'd",1:"Entered")
"RTN","IBJDI5",196,0)
 W !,$$DASH(132),!!
"RTN","IBJDI5",197,0)
 S IBQ=$$STOP^IBOUTL("Insurance Policies Not Verified")
"RTN","IBJDI5",198,0)
 Q
"RTN","IBJDI5",199,0)
 ;
"RTN","IBJDI5",200,0)
EXCHDR ; Excel format
"RTN","IBJDI5",201,0)
 W !,"Insurance Policies ",$S(IBX:"Verified Over a Year Ago",1:"Not Verified")
"RTN","IBJDI5",202,0)
 w !,"Run Date: ",IBRUN
"RTN","IBJDI5",203,0)
 W !,"For Patients treated for the period "_$$DAT1^IBOUTL(IBBDT)_" to "_$$DAT1^IBOUTL(IBEDT)_"  ('*' = Had inpatient care)"
"RTN","IBJDI5",204,0)
 W !,"Patient"_U_"SSN"_U_"Date of Death"_U_"Insurance Company"_U_"Policy ",$S(IBX:"Verified",1:"Entered")," By"_U_"Date ",$S(IBX:"Verif'd",1:"Entered"),!
"RTN","IBJDI5",205,0)
 Q
"RTN","IBJDI5",206,0)
 ;
"RTN","IBJDI5",207,0)
SUM ; - Print the summary report.
"RTN","IBJDI5",208,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
"RTN","IBJDI5",209,0)
 S IBPAG=IBPAG+1
"RTN","IBJDI5",210,0)
 W !!?$S(IBVER:14,1:24),"INSURANCE POLICIES NOT VERIFIED",$S(IBVER:"/VERIFIED OVER 1 YEAR",1:"")
"RTN","IBJDI5",211,0)
 W !?32,"SUMMARY REPORT",!!?17,"For Patients treated from ",$$DAT1^IBOUTL(IBBDT)," - ",$$DAT1^IBOUTL(IBEDT)
"RTN","IBJDI5",212,0)
 W !!?24,"Run Date: ",IBRUN,!?24,$$DASH(31),!!
"RTN","IBJDI5",213,0)
 ;
"RTN","IBJDI5",214,0)
 S IBPER=$S('IB("TOT"):0,1:$J(IB("VER")/IB("TOT")*100,0,2))
"RTN","IBJDI5",215,0)
 W ?24,"Number of Patients Treated:",?53,$J(IB("TOT"),5)
"RTN","IBJDI5",216,0)
 W !?23,"Number of Policies Verified:",?53,$J(IB("VER"),5),?62,"(",IBPER,"%)"
"RTN","IBJDI5",217,0)
 I IBVER W !?7,"Number of Policies Verified Over a Year Ago:",?53,$J(IB("VERO"),5),?62,"(",$S('IB("VERO"):0,1:$J(IB("VERO")/IB("TOT")*100,0,2)),"%)"
"RTN","IBJDI5",218,0)
 W !?19,"Number of Policies Not Verified:",?53,$J(IB("NOT"),5),?62,"(",$S('IB("TOT"):0,1:$J(100-IBPER,0,2)),"%)"
"RTN","IBJDI5",219,0)
 Q
"RTN","IBJDI5",220,0)
 ;
"RTN","IBJDI5",221,0)
EXCSUM ;excell format
"RTN","IBJDI5",222,0)
 W !!,"INSURANCE POLICIES NOT VERIFIED",$S(IBVER:"/VERIFIED OVER 1 YEAR",1:"")
"RTN","IBJDI5",223,0)
 W !,"SUMMARY REPORT"
"RTN","IBJDI5",224,0)
 W !,"For Patients treated from ",$$DAT1^IBOUTL(IBBDT)," - ",$$DAT1^IBOUTL(IBEDT)
"RTN","IBJDI5",225,0)
 W !,"Run Date: ",IBRUN
"RTN","IBJDI5",226,0)
 ;
"RTN","IBJDI5",227,0)
 S IBPER=$S('IB("TOT"):0,1:IB("VER")/IB("TOT")*100)
"RTN","IBJDI5",228,0)
 W !,"Number of Patients Treated:"_U_IB("TOT")
"RTN","IBJDI5",229,0)
 W !,"Number of Policies Verified:"_U_IB("VER")_U_"(",IBPER,"%)"
"RTN","IBJDI5",230,0)
 I IBVER W !,"Number of Policies Verified Over a Year Ago:"_U_IB("VERO")_U_"(",$S('IB("VERO"):0,1:IB("VERO")/IB("TOT")*100),"%)"
"RTN","IBJDI5",231,0)
 W !,"Number of Policies Not Verified:"_U_IB("NOT")_U_"("_$S('IB("TOT"):0,1:(100-IBPER))_"%)"
"RTN","IBJDI5",232,0)
 Q
"RTN","IBJDI5",233,0)
 ;
"RTN","IBJDI5",234,0)
DASH(X) ; - Return a dashed line.
"RTN","IBJDI5",235,0)
 Q $TR($J("",X)," ","=")
"RTN","IBJDI5",236,0)
 ;
"RTN","IBJDI5",237,0)
PAUSE ; - Page break.
"RTN","IBJDI5",238,0)
 I $E(IOST,1,2)'="C-" Q
"RTN","IBJDI5",239,0)
 N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
"RTN","IBJDI5",240,0)
 F IBX=$Y:1:(IOSL-3) W !
"RTN","IBJDI5",241,0)
 S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
"RTN","IBJDI5",242,0)
 Q
"RTN","IBJDI5",243,0)
 ;
"RTN","IBJDI5",244,0)
SSN(X) ; - Format the SSN.
"RTN","IBJDI5",245,0)
 Q $S(X]"":$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),1:"")
"RTN","IBJDI5",246,0)
  ;
"RTN","IBJDI5",247,0)
OUT() ; Prompt to allow users to select output format
"RTN","IBJDI5",248,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBJDI5",249,0)
 W !
"RTN","IBJDI5",250,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBJDI5",251,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBJDI5",252,0)
 S DIR("B")="Report"
"RTN","IBJDI5",253,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q ""
"RTN","IBJDI5",254,0)
 Q Y
"RTN","IBJPI")
0^38^B21646408
"RTN","IBJPI",1,0)
IBJPI ;DAOU/BHS - IBJP eIV SITE PARAMETERS SCREEN ;14-JUN-2002
"RTN","IBJPI",2,0)
 ;;2.0;INTEGRATED BILLING;**184,271,316,416,438,479,506,528**;21-MAR-94;Build 163
"RTN","IBJPI",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBJPI",4,0)
 ;
"RTN","IBJPI",5,0)
 ; eIV - Electronic Insurance Verification Interface parameters
"RTN","IBJPI",6,0)
 ;
"RTN","IBJPI",7,0)
EN ; main entry pt for IBJP IIV SITE PARAMS
"RTN","IBJPI",8,0)
 N POP,X,CTRLCOL,VALMHDR,VALMCNT,%DT,IBHL7,IBSSIV
"RTN","IBJPI",9,0)
 D EN^VALM("IBJP IIV SITE PARAMETERS")
"RTN","IBJPI",10,0)
 Q
"RTN","IBJPI",11,0)
 ;
"RTN","IBJPI",12,0)
HDR ; header 
"RTN","IBJPI",13,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPI",14,0)
 Q
"RTN","IBJPI",15,0)
 ;
"RTN","IBJPI",16,0)
INIT ; init vars & list array
"RTN","IBJPI",17,0)
 K ^TMP($J,"IBJPI")
"RTN","IBJPI",18,0)
 ; Kills data and video control arrays with active list
"RTN","IBJPI",19,0)
 D CLEAN^VALM10
"RTN","IBJPI",20,0)
 D BLD
"RTN","IBJPI",21,0)
 Q
"RTN","IBJPI",22,0)
 ;
"RTN","IBJPI",23,0)
HELP ; help
"RTN","IBJPI",24,0)
 D FULL^VALM1
"RTN","IBJPI",25,0)
 W @IOF
"RTN","IBJPI",26,0)
 W !,"This screen displays all of the eIV Site Parameters used to manage the"
"RTN","IBJPI",27,0)
 W !,"eIV application used for electronic Insurance Verification."
"RTN","IBJPI",28,0)
 W !!,"The General Parameters section concerns overall parameters for"
"RTN","IBJPI",29,0)
 W !,"monitoring the interface and controlling eIV communication between"
"RTN","IBJPI",30,0)
 W !,"VistA and the EC located in Austin."
"RTN","IBJPI",31,0)
 W !!,"The Batch Extracts section concerns extract-specific parameters"
"RTN","IBJPI",32,0)
 W !,"including active/inactive status and selection criteria."
"RTN","IBJPI",33,0)
 W !!,"The Service Type Codes section concerns specifying up to nine"
"RTN","IBJPI",34,0)
 W !,"Site Selected Service Type Codes which will be sent with"
"RTN","IBJPI",35,0)
 W !,"insurance inquiries."
"RTN","IBJPI",36,0)
 D PAUSE^VALM1
"RTN","IBJPI",37,0)
 W @IOF
"RTN","IBJPI",38,0)
 S VALMBCK="R"
"RTN","IBJPI",39,0)
 Q
"RTN","IBJPI",40,0)
 ;
"RTN","IBJPI",41,0)
EXIT ; exit
"RTN","IBJPI",42,0)
 K ^TMP($J,"IBJPI")
"RTN","IBJPI",43,0)
 D CLEAN^VALM10
"RTN","IBJPI",44,0)
 Q
"RTN","IBJPI",45,0)
 ;
"RTN","IBJPI",46,0)
BLD ; build screen array
"RTN","IBJPI",47,0)
 N IBLN,IBCOL,IBWID,IBIIV,IBIIVB,IBIEN,CT,IBEX1,IBEX2,IBEX,IEN
"RTN","IBJPI",48,0)
 N IBST,IBDATA,DISYS,X,STATUS,AIEN,ADATA
"RTN","IBJPI",49,0)
 ;
"RTN","IBJPI",50,0)
 S (IBLN,VALMCNT)=0,IBCOL=3,IBIIV=$G(^IBE(350.9,1,51))
"RTN","IBJPI",51,0)
 S IBSSIV=$G(^IBE(350.9,1,100)),IBHL7=$G(^IBE(350.9,1,"HL7"))   ; IB*2*528/baa
"RTN","IBJPI",52,0)
 ; -- Gen Params
"RTN","IBJPI",53,0)
 S IBWID=49
"RTN","IBJPI",54,0)
 S IBLN=$$SETN("General Parameters",IBLN,IBCOL,1,)
"RTN","IBJPI",55,0)
 S IBLN=$$SET("Days between electronic re-verification checks:  ",$P(IBIIV,U,1),IBLN,IBWID)
"RTN","IBJPI",56,0)
 S IBLN=$$SET("Send daily statistical report via MailMan:  ",$S($P(IBIIV,U,2):"YES",$P(IBIIV,U,2)=0:"NO",1:""),IBLN,IBWID)
"RTN","IBJPI",57,0)
 I $P(IBIIV,U,2) S IBLN=$$SET("Time of day for daily statistical report:  ",$P(IBIIV,U,3),IBLN,IBWID)
"RTN","IBJPI",58,0)
 S IBLN=$$SET("Mail Group for eIV messages:  ",$$MGRP^IBCNEUT5,IBLN,IBWID)
"RTN","IBJPI",59,0)
 ;
"RTN","IBJPI",60,0)
 S IBLN=$$SET("Contact Person:  ",$S($P(IBIIV,U,16)'="":$$GET1^DIQ(200,$P(IBIIV,U,16)_",",.01,"E"),1:""),IBLN,IBWID)
"RTN","IBJPI",61,0)
 S IBLN=$$SET("Send MailMan message if communication problem:  ",$S($P(IBIIV,U,20):"YES",$P(IBIIV,U,20)=0:"NO",1:""),IBLN,IBWID)
"RTN","IBJPI",62,0)
 S IBLN=$$SET("SSVI Enabled:  ",$S(IBSSIV:"YES",+IBSSIV=0:"NO",1:""),IBLN,IBWID)   ; IB*2*528/baa
"RTN","IBJPI",63,0)
 S IBLN=$$SET("Number of days to retain SSVI data:  ",$P(IBHL7,U,2),IBLN,IBWID)    ; IB*2*528/baa
"RTN","IBJPI",64,0)
 ;
"RTN","IBJPI",65,0)
 ; Skip lines in between sections
"RTN","IBJPI",66,0)
 S IBLN=$$SET("","",IBLN,0)
"RTN","IBJPI",67,0)
 ;
"RTN","IBJPI",68,0)
 ; -- Batch Extracts
"RTN","IBJPI",69,0)
 S IBWID=43
"RTN","IBJPI",70,0)
 S IBLN=$$SETN("Batch Extracts",IBLN,IBCOL,1,)
"RTN","IBJPI",71,0)
 S IBLN=$$SET("Extract               Selection  Maximum # to","",IBLN,IBWID)
"RTN","IBJPI",72,0)
 S IBLN=$$SETN(" Name          On/Off  Criteria   Extract/Day",IBLN,IBCOL+1,,1)
"RTN","IBJPI",73,0)
 ;S IBLN=$$SETN(" Extract Name      On/Off      Selection Criteria",IBLN,IBCOL+1,,1)
"RTN","IBJPI",74,0)
 ; Loop thru extracts
"RTN","IBJPI",75,0)
 S IEN=0 F  S IEN=$O(^IBE(350.9,1,51.17,IEN)) Q:'IEN  D
"RTN","IBJPI",76,0)
 . S IBIIVB=$G(^IBE(350.9,1,51.17,IEN,0))
"RTN","IBJPI",77,0)
 . S IBEX=+$P(IBIIVB,U,1)  ; Type
"RTN","IBJPI",78,0)
 . I '$F(".1.2.","."_IBEX_".") Q
"RTN","IBJPI",79,0)
 . S IBST=$$FO^IBCNEUT1($S($P(IBIIVB,U,1)'="":$$GET1^DIQ(350.9002,IEN_",1,",.01,"E"),1:""),14)
"RTN","IBJPI",80,0)
 . S IBST=IBST_$$FO^IBCNEUT1($S(+$P(IBIIVB,U,2):"ON",1:"OFF"),8)
"RTN","IBJPI",81,0)
 . S IBEX1=$S(+$P(IBIIVB,U,3)'=0:+$P(IBIIVB,U,3),1:$P(IBIIVB,U,3))
"RTN","IBJPI",82,0)
 . S IBEX2=$S(+$P(IBIIVB,U,4)'=0:+$P(IBIIVB,U,4),1:$P(IBIIVB,U,4))
"RTN","IBJPI",83,0)
 . S IBST=IBST_$$FO^IBCNEUT1($S(IBEX=1:"n/a",IBEX=2:IBEX1,IBEX=3:IBEX1_"/"_IBEX2,1:"ERROR"),11)
"RTN","IBJPI",84,0)
 . S IBST=IBST_$$FO^IBCNEUT1($S(+$P(IBIIVB,U,5):+$P(IBIIVB,U,5),1:$P(IBIIVB,U,5)),14)
"RTN","IBJPI",85,0)
 . S IBLN=$$SET(IBST,"",IBLN,IBWID)
"RTN","IBJPI",86,0)
 . Q
"RTN","IBJPI",87,0)
 ;S IBLN=$$SET("","",IBLN,0)
"RTN","IBJPI",88,0)
 S VALMCNT=IBLN
"RTN","IBJPI",89,0)
 Q
"RTN","IBJPI",90,0)
 ;
"RTN","IBJPI",91,0)
SET(TTL,DATA,LN,WID) ;
"RTN","IBJPI",92,0)
 ; TTL = caption for field
"RTN","IBJPI",93,0)
 ; DATA = field value
"RTN","IBJPI",94,0)
 ; LN = current line #
"RTN","IBJPI",95,0)
 ; WID = right justify width
"RTN","IBJPI",96,0)
 N IBY
"RTN","IBJPI",97,0)
 ; update line ct
"RTN","IBJPI",98,0)
 S LN=LN+1
"RTN","IBJPI",99,0)
 ; offset line by 3 spaces
"RTN","IBJPI",100,0)
 S IBY="   "_$J(TTL,WID)_DATA D SET1(IBY,LN,0,$L(IBY))
"RTN","IBJPI",101,0)
 Q LN
"RTN","IBJPI",102,0)
 ;
"RTN","IBJPI",103,0)
SETN(TTL,LN,COL,RV,UN) ;
"RTN","IBJPI",104,0)
 ; TTL = caption for field
"RTN","IBJPI",105,0)
 ; LN = current line #
"RTN","IBJPI",106,0)
 ; COL = column at which to start video attribute
"RTN","IBJPI",107,0)
 ; RV = 0/1 flag for reverse video
"RTN","IBJPI",108,0)
 ; UN = 0/1 flag for underline
"RTN","IBJPI",109,0)
 N IBY
"RTN","IBJPI",110,0)
 ; update line ct
"RTN","IBJPI",111,0)
 S LN=LN+1
"RTN","IBJPI",112,0)
 ; offset line by 2 spaces
"RTN","IBJPI",113,0)
 S IBY="  "_TTL D SET1(IBY,LN,COL,$L(TTL),$G(RV),$G(UN))
"RTN","IBJPI",114,0)
 Q LN
"RTN","IBJPI",115,0)
 ;
"RTN","IBJPI",116,0)
SET1(STR,LN,COL,WD,RV,UN) ; Set up ^TMP array with screen data
"RTN","IBJPI",117,0)
 ; STR = line text
"RTN","IBJPI",118,0)
 ; LN = current line #
"RTN","IBJPI",119,0)
 ; COL = column at which to start video attribute
"RTN","IBJPI",120,0)
 ; WD = width of video attribute
"RTN","IBJPI",121,0)
 ; RV = 0/1 flag for reverse video
"RTN","IBJPI",122,0)
 ; UN = 0/1 flag for underline
"RTN","IBJPI",123,0)
 D SET^VALM10(LN,STR)
"RTN","IBJPI",124,0)
 I $G(RV)'="" D CNTRL^VALM10(LN,COL,WD,IORVON,IORVOFF)
"RTN","IBJPI",125,0)
 I $G(UN)'="" D CNTRL^VALM10(LN,COL,WD-1,IOUON,IOUOFF)
"RTN","IBJPI",126,0)
 Q
"RTN","IBJPI",127,0)
 ;
"RTN","IBOTR1")
0^117^B22387130
"RTN","IBOTR1",1,0)
IBOTR1 ;ALB/CPM - INSURANCE PAYMENT TREND REPORT - USER INTERFACE ;5-JUN-91
"RTN","IBOTR1",2,0)
 ;;2.0;INTEGRATED BILLING;**21,42,72,100,118,128,528**;21-MAR-94;Build 163
"RTN","IBOTR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOTR1",4,0)
 ;
"RTN","IBOTR1",5,0)
 ;MAP TO DGCROTR1
"RTN","IBOTR1",6,0)
 ;
"RTN","IBOTR1",7,0)
OUTPT W !!,"Select (I)NPATIENT, (O)UTPATIENT, or (B)OTH bill records: BOTH// "
"RTN","IBOTR1",8,0)
 R X:DTIME G:'$T!(X["^") END S:X="" X="B" S X=$E(X)
"RTN","IBOTR1",9,0)
 I "BIObio"'[X S IBOFF=1 D HELP^IBOTR11 G OUTPT
"RTN","IBOTR1",10,0)
 W "  ",$S("Ii"[X:"INPATIENT","Oo"[X:"OUTPATIENT",1:"BOTH")
"RTN","IBOTR1",11,0)
 S (IBBRT,IBBRTY)=$S("Ii"[X:"I","Oo"[X:"O",1:"A") I "Bb"'[X G ARST
"RTN","IBOTR1",12,0)
 ;
"RTN","IBOTR1",13,0)
REPTY W !,"Print (C)OMBINED or (S)EPARATE reports: COMBINED// "
"RTN","IBOTR1",14,0)
 R X:DTIME G:'$T!(X["^") END S:X="" X="C" S X=$E(X)
"RTN","IBOTR1",15,0)
 I "CScs"'[X S IBOFF=7 D HELP^IBOTR11 G REPTY
"RTN","IBOTR1",16,0)
 W "  ",$S("Cc"[X:"COMBINED",1:"SEPARATE")
"RTN","IBOTR1",17,0)
 S IBBRN=$S("Cc"[X:"C",1:"S")
"RTN","IBOTR1",18,0)
 ;
"RTN","IBOTR1",19,0)
ARST W !,"Select (O)PEN, (C)LOSED, or (B)OTH types of bills: BOTH// "
"RTN","IBOTR1",20,0)
 R X:DTIME G:'$T!(X["^") END S:X="" X="B" S X=$E(X)
"RTN","IBOTR1",21,0)
 I "BCObco"'[X S IBOFF=14 D HELP^IBOTR11 G ARST
"RTN","IBOTR1",22,0)
 W "  ",$S("Oo"[X:"OPEN","Cc"[X:"CLOSED",1:"BOTH")
"RTN","IBOTR1",23,0)
 S IBARST=$S("Oo"[X:"O","Cc"[X:"C",1:"A")
"RTN","IBOTR1",24,0)
 ;
"RTN","IBOTR1",25,0)
CANC I $G(IBAF)=16 G QDATE ; Skip if CANCEL BILL? field was selected.
"RTN","IBOTR1",26,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","IBOTR1",27,0)
 S DIR("A")="Do you want to include cancelled bills"
"RTN","IBOTR1",28,0)
 S DIR("?")="^S IBOFF=20 D HELP^IBOTR11"
"RTN","IBOTR1",29,0)
 D ^DIR K DIR S IBCANC=+Y I $D(DIRUT)!$D(DTOUT)!$D(DUOUT) G END
"RTN","IBOTR1",30,0)
 ;
"RTN","IBOTR1",31,0)
QDATE S DIR(0)="SA^1:DATE BILL PRINTED;2:TREATMENT DATE"
"RTN","IBOTR1",32,0)
 S DIR("A")="Print report by 1-DATE BILL PRINTED or 2-TREATMENT DATE: "
"RTN","IBOTR1",33,0)
 S DIR("B")="1",DIR("T")=20,DIR("?")="^S IBOFF=25 D HELP^IBOTR11"
"RTN","IBOTR1",34,0)
 W ! D ^DIR K DIR G:Y=""!(X="^") END S IBDF=Y,IBDFN=Y(0)
"RTN","IBOTR1",35,0)
BEGDT S %DT="AEPX",%DT("A")="   Start with "_IBDFN_": "
"RTN","IBOTR1",36,0)
 D ^%DT K %DT G:Y<0 END S IBBDT=Y
"RTN","IBOTR1",37,0)
 S %DT="AEPX",%DT("A")="        Go to "_IBDFN_": "
"RTN","IBOTR1",38,0)
 D ^%DT K %DT G:Y<0 END S IBEDT=Y
"RTN","IBOTR1",39,0)
 I Y<IBBDT W *7,!!?3,"The END DATE must follow the BEGIN DATE.",! G BEGDT
"RTN","IBOTR1",40,0)
 ;
"RTN","IBOTR1",41,0)
PRINT W !!,"Print (M)AIN REPORT, (S)UMMARY, or (G)RAND TOTALS: M// "
"RTN","IBOTR1",42,0)
 R X:DTIME G:'$T!(X["^") END S:X="" X="M" S X=$E(X)
"RTN","IBOTR1",43,0)
 I "GMSgms"'[X S IBOFF=30 D HELP^IBOTR11 G PRINT
"RTN","IBOTR1",44,0)
 W "  ",$S("Mm"[X:"MAIN REPORT","Ss"[X:"SUMMARY",1:"GRAND TOTALS")
"RTN","IBOTR1",45,0)
 S IBPRNT=$S("Mm"[X:"M","Ss"[X:"S",1:"G")
"RTN","IBOTR1",46,0)
 ;
"RTN","IBOTR1",47,0)
INS W !,"Run ",$S("MS"[IBPRNT:"report",1:"totals")
"RTN","IBOTR1",48,0)
 W " for (S)PECIFIC insurance companies or a (R)ANGE: RANGE// "
"RTN","IBOTR1",49,0)
 R X:DTIME G:'$T!(X["^") END S:X="" X="R" S X=$E(X)
"RTN","IBOTR1",50,0)
 I "RSrs"'[X S IBOFF=38 D HELP^IBOTR11 G INS
"RTN","IBOTR1",51,0)
 W "  ",$S("Ss"[X:"SPECIFIC",1:"RANGE") G:"Rr"[X INSO1 K IBICPT
"RTN","IBOTR1",52,0)
INSO S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","IBOTR1",53,0)
 S DIC("A")="   Select "_$S($G(IBICPT):"another ",1:"")_"INSURANCE CO.: "
"RTN","IBOTR1",54,0)
 D ^DIC K DIC I Y'>0 G END:'$G(IBICPT),INSO3
"RTN","IBOTR1",55,0)
 I $D(IBICPT(+Y)) D  G INSO
"RTN","IBOTR1",56,0)
 .W !!?3,"Already selected. Choose another insurance company.",!,*7
"RTN","IBOTR1",57,0)
 S IBICPT(+Y)="",IBICPT=$G(IBICPT)+1 G INSO
"RTN","IBOTR1",58,0)
INSO1 W !?3,"Start with INSURANCE COMPANY: FIRST// " R X:DTIME
"RTN","IBOTR1",59,0)
 G:'$T!(X["^") END I $E(X)="?" S IBOFF=43 D HELP^IBOTR11 G INSO1
"RTN","IBOTR1",60,0)
 S IBICF=X
"RTN","IBOTR1",61,0)
INSO2 W !?8,"Go to INSURANCE COMPANY: LAST// " R X:DTIME
"RTN","IBOTR1",62,0)
 G:'$T!(X["^") END I $E(X)="?" S IBOFF=49 D HELP^IBOTR11 G INSO2
"RTN","IBOTR1",63,0)
 I X="" S IBICL="zzzzz" S:IBICF="" IBIC="ALL" G INSO3
"RTN","IBOTR1",64,0)
 I X="@",IBICF="@" S IBICL="@",IBIC="NULL" G INSO3
"RTN","IBOTR1",65,0)
 I IBICF'="@",IBICF]X D  G INSO2
"RTN","IBOTR1",66,0)
 .W *7,!!?3,"The LAST value must follow the FIRST.",!
"RTN","IBOTR1",67,0)
 S IBICL=X
"RTN","IBOTR1",68,0)
INSO3 I IBPRNT="G" S IBSORT="I" S:$G(IBICPT)!($G(IBIC)'="ALL") IBG=1 G EXRC
"RTN","IBOTR1",69,0)
 I $G(IBICPT)=1 S IBSORT="I" G EXRC
"RTN","IBOTR1",70,0)
 W !,"Sort by AMOUNT (O)WED, AMOUNT (P)AID, or (I)NSURANCE CO.: I// "
"RTN","IBOTR1",71,0)
 R X:DTIME G:'$T!(X["^") END S:X="" X="I" S X=$E(X)
"RTN","IBOTR1",72,0)
 I "IOPiop"'[X S IBOFF=56 D HELP^IBOTR11 G INSO3
"RTN","IBOTR1",73,0)
 W "  ",$S("Oo"[X:"AMOUNT OWED","Pp"[X:"AMOUNT PAID",1:"INSURANCE CO.")
"RTN","IBOTR1",74,0)
 S IBSORT=$S("Oo"[X:"O","Pp"[X:"P",1:"I")
"RTN","IBOTR1",75,0)
 ;
"RTN","IBOTR1",76,0)
EXRC S DIR(0)="Y",DIR("B")="NO"
"RTN","IBOTR1",77,0)
 S DIR("A")="Do you want to include receivables referred to Reg. Counsel"
"RTN","IBOTR1",78,0)
 S DIR("?")="^S IBOFF=66 D HELP^IBOTR11"
"RTN","IBOTR1",79,0)
 W ! D ^DIR K DIR S IBINRC=+Y I $D(DIRUT)!$D(DTOUT)!$D(DUOUT) G END
"RTN","IBOTR1",80,0)
 ;
"RTN","IBOTR1",81,0)
 ;Select report type
"RTN","IBOTR1",82,0)
 K IBOUT
"RTN","IBOTR1",83,0)
 S IBOUT=$$OUT
"RTN","IBOTR1",84,0)
 ;
"RTN","IBOTR1",85,0)
DEV I IBOUT="R" W !!,"You will need a 132 column printer for this report!"
"RTN","IBOTR1",86,0)
 N %ZIS,ZTRTN,ZTDESC,ZTSAVE,ZTSK
"RTN","IBOTR1",87,0)
 S %ZIS="QM" D ^%ZIS G:POP END
"RTN","IBOTR1",88,0)
 I $D(IO("Q")) D  G END
"RTN","IBOTR1",89,0)
 .S ZTRTN="^IBOTR2",ZTDESC="INSURANCE PAYMENT TREND REPORT"
"RTN","IBOTR1",90,0)
 .F X="IB*","IBOUT","VAUTD","VAUTD(" S ZTSAVE(X)=""
"RTN","IBOTR1",91,0)
 .D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued. The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBOTR1",92,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBOTR1",93,0)
 U IO
"RTN","IBOTR1",94,0)
 ;***
"RTN","IBOTR1",95,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBOTR1" D T1^%ZOSV ;stop rt clock
"RTN","IBOTR1",96,0)
 D ^IBOTR2 ; Compile and print report.
"RTN","IBOTR1",97,0)
 ;
"RTN","IBOTR1",98,0)
END K DIRUT,DTOUT,DUOUT,DIROUT
"RTN","IBOTR1",99,0)
 Q
"RTN","IBOTR1",100,0)
 ;
"RTN","IBOTR1",101,0)
OUT() ; Prompt to allow users to select output format
"RTN","IBOTR1",102,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBOTR1",103,0)
 W !
"RTN","IBOTR1",104,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBOTR1",105,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBOTR1",106,0)
 S DIR("B")="Report"
"RTN","IBOTR1",107,0)
 D ^DIR I $D(DIRUT) S STOP=1 Q ""
"RTN","IBOTR1",108,0)
 Q Y
"RTN","IBOTR3")
0^110^B51841072
"RTN","IBOTR3",1,0)
IBOTR3 ;ALB/CPM - INSURANCE PAYMENT TREND REPORT - OUTPUT ;5-JUN-91
"RTN","IBOTR3",2,0)
 ;;2.0;INTEGRATED BILLING;**42,80,100,118,128,133,447,516,528**;21-MAR-94;Build 163
"RTN","IBOTR3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOTR3",4,0)
 ;
"RTN","IBOTR3",5,0)
 ;MAP TO DGCROTR3
"RTN","IBOTR3",6,0)
 ;
"RTN","IBOTR3",7,0)
EN(IBDIV) ; - Entry point from IBOTR2.
"RTN","IBOTR3",8,0)
 ;
"RTN","IBOTR3",9,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBOTR3",10,0)
 ; - Extract zero totals if no data available.
"RTN","IBOTR3",11,0)
 I $G(IBXTRACT),'$D(^TMP($J,"IBOTR",IBDIV)) D  G END
"RTN","IBOTR3",12,0)
 .S IBUNPD=0 F X=1:1:8 S IBTT(X)=0
"RTN","IBOTR3",13,0)
 .D E^IBJDE(8,0)
"RTN","IBOTR3",14,0)
 ;
"RTN","IBOTR3",15,0)
 I $G(IBXTRACT) G IBX ; Calculate grand totals for extract.
"RTN","IBOTR3",16,0)
 ;
"RTN","IBOTR3",17,0)
 S IBPAG=0,IBLINE="",$P(IBLINE,"-",IOM)="-",Y=DT D D^DIQ S IBTDT=Y
"RTN","IBOTR3",18,0)
 I $D(IBAF) D ADDFLD^IBOTR4
"RTN","IBOTR3",19,0)
 I '$D(^TMP($J,"IBOTR",IBDIV)) D  S IBCALC=3 D PAUSE G END
"RTN","IBOTR3",20,0)
 .S IBX=$S("Bb"'[IBBRT:IBBRT,IBBRN="C":"A",1:"I")
"RTN","IBOTR3",21,0)
 .D HDR W !!,"  NO INFORMATION MATCHES SELECTION CRITERIA."
"RTN","IBOTR3",22,0)
 ;
"RTN","IBOTR3",23,0)
IBX      S IBX="" F  S IBX=$O(^TMP($J,"IBOTR",IBDIV,IBX)) Q:IBX=""  D  Q:IBQUIT
"RTN","IBOTR3",24,0)
 .I IBPRNT'="G"!('$G(IBG)) S IBTT="0^0^0^0^0^0^0^0^0^0"
"RTN","IBOTR3",25,0)
 .I IBOUT="E" D EXCHDR
"RTN","IBOTR3",26,0)
 .I IBOUT="R" D:'$G(IBXTRACT) HDR Q:IBQUIT
"RTN","IBOTR3",27,0)
 .D INS
"RTN","IBOTR3",28,0)
 ;
"RTN","IBOTR3",29,0)
END      K IBINS,IBPAG,IBLINE,IBTDT,IBX,IBTT,IBTI,IBCALC,IBBN,IBD,IBDS,IBAFT
"RTN","IBOTR3",30,0)
 K IBAMT,IBG,IBI,IBPERC,IBUNPD,X,X1,X2,IBGRP,IBOUT,STOP
"RTN","IBOTR3",31,0)
 Q
"RTN","IBOTR3",32,0)
 ;
"RTN","IBOTR3",33,0)
INS      ; - Loop through each insurance company or amount.
"RTN","IBOTR3",34,0)
 I IBSORT="I" D
"RTN","IBOTR3",35,0)
 .S IBINS="" F  S IBINS=$O(^TMP($J,"IBOTR",IBDIV,IBX,IBINS)) Q:IBINS=""  D BILLNO Q:IBQUIT
"RTN","IBOTR3",36,0)
 I IBSORT'="I" D
"RTN","IBOTR3",37,0)
 .S IBAMT="" F  S IBAMT=$O(^TMP($J,"IBOTRS",IBDIV,IBX,IBAMT)) Q:IBAMT=""  S IBINS="" F  S IBINS=$O(^TMP($J,"IBOTRS",IBDIV,IBX,IBAMT,IBINS)) Q:IBINS=""!(IBQUIT)  D BILLNO Q:IBQUIT
"RTN","IBOTR3",38,0)
 ;
"RTN","IBOTR3",39,0)
 ; - Extract grand totals data.
"RTN","IBOTR3",40,0)
 I $G(IBXTRACT),'IBQUIT D  Q
"RTN","IBOTR3",41,0)
 .S IBUNPD=$J($P(IBTT,U,2)-$P(IBTT,U,5),0,2)
"RTN","IBOTR3",42,0)
 .F X=1:1:8 S IBTT(X)=$S(19'[X:$J($P(IBTT,U,X),0,2),1:$P(IBTT,U,X))
"RTN","IBOTR3",43,0)
 .D E^IBJDE(8,0)
"RTN","IBOTR3",44,0)
 ;
"RTN","IBOTR3",45,0)
 I 'IBQUIT,'$G(IBG),IBOUT="R" D GTOT^IBOTR4 ; Write grand totals for report.
"RTN","IBOTR3",46,0)
 Q
"RTN","IBOTR3",47,0)
 ;
"RTN","IBOTR3",48,0)
BILLNO   ; - Loop through all bills for an insurance company.
"RTN","IBOTR3",49,0)
 I $G(IBXTRACT) G LOOP
"RTN","IBOTR3",50,0)
 I IBOUT="E" S INSC=$P(IBINS,"@@") G LOOP
"RTN","IBOTR3",51,0)
 I $Y>(IOSL-15) S IBCALC=15 D PAUSE Q:IBQUIT  D HDR Q:IBQUIT
"RTN","IBOTR3",52,0)
 I IBPRNT'="G" S IBDS=0,IBTI="0^0^0^0" D INSADD
"RTN","IBOTR3",53,0)
 E  I $G(IBG) S IBTT="0^0^0^0^0^0^0^0^0^0" D INSADD
"RTN","IBOTR3",54,0)
LOOP     ; add group# for p447 
"RTN","IBOTR3",55,0)
 ;S IBBN="" F  S IBBN=$O(^TMP($J,"IBOTR",IBDIV,IBX,IBINS,IBBN)) Q:IBBN=""  S IBD=^(IBBN) D DETAIL Q:IBQUIT
"RTN","IBOTR3",56,0)
 S IBGRP="" F  S IBGRP=$O(^TMP($J,"IBOTR",IBDIV,IBX,IBINS,IBGRP)) Q:IBGRP=""!(IBQUIT)  D
"RTN","IBOTR3",57,0)
 . I IBOUT="E",IBGRP'="" S IBGRP=$S(IBGRP'=0:$$GET1^DIQ(355.3,IBGRP_",",2.02),1:"None Defined")
"RTN","IBOTR3",58,0)
 . ; IB*2.0*516/TAZ Print the actual group number instead of internal group number.
"RTN","IBOTR3",59,0)
 .;I IBPRNT="M" W !!,"Group #"_$S(IBGRP'=0:IBGRP,1:":  None Defined")
"RTN","IBOTR3",60,0)
 . I IBOUT="R" I IBPRNT="M" W !!,"Group #: "_$S(IBGRP'=0:$$GET1^DIQ(355.3,IBGRP_",",2.02),1:"None Defined")
"RTN","IBOTR3",61,0)
 . ;
"RTN","IBOTR3",62,0)
 .S IBBN="" F  S IBBN=$O(^TMP($J,"IBOTR",IBDIV,IBX,IBINS,IBGRP,IBBN)) Q:IBBN=""  S IBD=^(IBBN) D DETAIL Q:IBQUIT
"RTN","IBOTR3",63,0)
 I IBOUT="E" Q
"RTN","IBOTR3",64,0)
 I 'IBQUIT,IBOUT="R" D
"RTN","IBOTR3",65,0)
 .I IBPRNT'="G" D SUBTOT^IBOTR4 ; Write insurance co. sub-totals.
"RTN","IBOTR3",66,0)
 .E  D:$G(IBG) GTOT^IBOTR4 ;      Write insurance co. grand totals.
"RTN","IBOTR3",67,0)
 Q
"RTN","IBOTR3",68,0)
 ;
"RTN","IBOTR3",69,0)
DETAIL   ; - Write out detail lines.
"RTN","IBOTR3",70,0)
 N IBPEN S IBPEN=$S($P(IBBN,"@@",2)["*":0,1:$P(IBD,U,6)-$P(IBD,U,7))
"RTN","IBOTR3",71,0)
 I IBOUT="E" D EXOUT Q
"RTN","IBOTR3",72,0)
 G:IBPRNT="S" SUBTOT G:IBPRNT="G" GNDTOT
"RTN","IBOTR3",73,0)
 I $Y>(IOSL-7) S IBCALC=7 D PAUSE Q:IBQUIT  D HDR Q:IBQUIT  D INSADD
"RTN","IBOTR3",74,0)
 ;W !,$P(IBBN,"@@",2),?10,$P(IBBN,"@@"),?34,$$DATE($P(IBD,U,2))
"RTN","IBOTR3",75,0)
 W !,$P(IBBN,"@@",2),?13,$P(IBBN,"@@"),?35,$$DATE($P(IBD,U,2))
"RTN","IBOTR3",76,0)
 W ?44,$$DATE($P(IBD,U,3)),?54,$$DATE($P(IBD,U,4))
"RTN","IBOTR3",77,0)
 W ?64,$S($P(IBD,U,5):$$DATE($P(IBD,U,5)),1:$P(IBD,U,5))
"RTN","IBOTR3",78,0)
 S X1=$S($P(IBD,U,5):$P(IBD,U,5),1:DT),X2=$P(IBD,U,4) D ^%DTC S IBDS=IBDS+X
"RTN","IBOTR3",79,0)
 W ?74,$J(X,4),?79,$J($P(IBD,U,6),11,2),?91,$J($P(IBD,U,7),10,2)
"RTN","IBOTR3",80,0)
 W ?102,$J($P(IBD,U,6)-$P(IBD,U,7),11,2),?114,$J(IBPEN,11,2)
"RTN","IBOTR3",81,0)
 W ?126,$J($S(+$P(IBD,U,6)=0:0,1:$P(IBD,U,7)/$P(IBD,U,6)*100),6,2)
"RTN","IBOTR3",82,0)
 ;
"RTN","IBOTR3",83,0)
SUBTOT   ; - Update sub-totals.
"RTN","IBOTR3",84,0)
 S $P(IBTI,U)=$P(IBTI,U)+1,$P(IBTI,U,2)=$P(IBTI,U,2)+$P(IBD,U,6)
"RTN","IBOTR3",85,0)
 S $P(IBTI,U,3)=$P(IBTI,U,3)+$P(IBD,U,7),$P(IBTI,U,4)=$P(IBTI,U,4)+IBPEN
"RTN","IBOTR3",86,0)
 ;
"RTN","IBOTR3",87,0)
GNDTOT   ; - Update grand totals.
"RTN","IBOTR3",88,0)
 S $P(IBTT,U)=$P(IBTT,U)+1,$P(IBTT,U,2)=$P(IBTT,U,2)+$P(IBD,U,6)
"RTN","IBOTR3",89,0)
 I +$P($P(IBBN,"@@"),"(",2)<65 S $P(IBTT,U,3)=$P(IBTT,U,3)+$P(IBD,U,6),$P(IBTT,U,6)=$P(IBTT,U,6)+$P(IBD,U,7)
"RTN","IBOTR3",90,0)
 E  S $P(IBTT,U,4)=$P(IBTT,U,4)+$P(IBD,U,6),$P(IBTT,U,7)=$P(IBTT,U,7)+$P(IBD,U,7)
"RTN","IBOTR3",91,0)
 S $P(IBTT,U,5)=$P(IBTT,U,5)+$P(IBD,U,7),$P(IBTT,U,8)=$P(IBTT,U,8)+IBPEN
"RTN","IBOTR3",92,0)
 I $G(IBCANC),$P(IBD,U,8) S $P(IBTT,U,9)=$P(IBTT,U,9)+1,$P(IBTT,U,10)=$P(IBTT,U,10)+$P(IBD,U,6)
"RTN","IBOTR3",93,0)
 Q
"RTN","IBOTR3",94,0)
 ;
"RTN","IBOTR3",95,0)
HDR      ; - Print the report header.
"RTN","IBOTR3",96,0)
 S IBPAG=IBPAG+1 W @IOF,IBRTN," PAYMENT TREND REPORT - "
"RTN","IBOTR3",97,0)
 W $S(IBX="I":"INPATIENT",IBX="O":"OUTPATIENT",1:"COMBINED INPATIENT AND OUTPATIENT")," BILLING"
"RTN","IBOTR3",98,0)
 W ?109,IBTDT,"   PAGE ",$J(IBPAG,3),!
"RTN","IBOTR3",99,0)
 I IBDIV W "For: ",$P($G(^DG(40.8,IBDIV,0)),U)," - "
"RTN","IBOTR3",100,0)
 W IBDFN,": ",$$DATE(IBBDT)," - ",$$DATE(IBEDT)
"RTN","IBOTR3",101,0)
 I IBPRNT="M" W ?82,"Note: '*' after the Bill No. denotes a CLOSED bill"
"RTN","IBOTR3",102,0)
 W:$D(IBAF) !,IBAFT G:IBPRNT="G" HDL
"RTN","IBOTR3",103,0)
 ;W !!,"BILL",?10,"PATIENT",?55,"DATE",?64,"DATE BILL",?75,"#"
"RTN","IBOTR3",104,0)
 W !!,"BILL",?13,"PATIENT",?55,"DATE",?64,"DATE BILL",?75,"#"
"RTN","IBOTR3",105,0)
 W ?83,"AMOUNT",?93,"AMOUNT",?106,"AMOUNT",?117,"AMOUNT",?127,"PERC"
"RTN","IBOTR3",106,0)
 ;W !,"NUMBER",?10,"NAME (AGE)",?34,"BILL FROM  -  TO",?54,"PRINTED"
"RTN","IBOTR3",107,0)
 W !,"NUMBER",?13,"NAME (AGE)",?35,"BILL FROM  -  TO",?54,"PRINTED"
"RTN","IBOTR3",108,0)
 W ?65,"CLOSED",?74,"DAYS",?83,"BILLED",?92,"COLLECTED",?106,"UNPAID"
"RTN","IBOTR3",109,0)
 W ?117,"PENDING",?127,"COLL"
"RTN","IBOTR3",110,0)
HDL      W !,IBLINE
"RTN","IBOTR3",111,0)
 I IBPRNT="M" W !?56,"M A I N  R E P O R T"
"RTN","IBOTR3",112,0)
 I IBPRNT="G" W !?55,"G R A N D  T O T A L S",!
"RTN","IBOTR3",113,0)
 I IBPRNT="S" W !?49,"S U M M A R Y  S T A T I S T I C S"
"RTN","IBOTR3",114,0)
 I "OP"[IBSORT W !?30,"S O R T E D  B Y  A M O U N T  ",$S(IBSORT="O":"O W E",1:"P A I")," D - H I G H E S T  T O  L O W E S T"
"RTN","IBOTR3",115,0)
 S IBQUIT=$$STOP^IBOUTL("Trend Report")
"RTN","IBOTR3",116,0)
 Q
"RTN","IBOTR3",117,0)
 ;
"RTN","IBOTR3",118,0)
EXCHDR   ;
"RTN","IBOTR3",119,0)
 W !,"PAYMENT TREND REPORT"
"RTN","IBOTR3",120,0)
 W !,$S(IBX="I":"INPATIENT",IBX="O":"OUTPATIENT",1:"COMBINED INPATIENT AND OUTPATIENT")," BILLING"
"RTN","IBOTR3",121,0)
 I IBDIV W !,"For: ",$P($G(^DG(40.8,IBDIV,0)),U)
"RTN","IBOTR3",122,0)
 W !,IBDFN,": ",$$DATE(IBBDT)," - ",$$DATE(IBEDT)
"RTN","IBOTR3",123,0)
 I IBPRNT="M" W !,"Note: '*' after the Bill No. denotes a CLOSED bill"
"RTN","IBOTR3",124,0)
 I IBPRNT="M" W !,"M A I N  R E P O R T"
"RTN","IBOTR3",125,0)
 I IBPRNT="G" W !,"G R A N D  T O T A L S",!
"RTN","IBOTR3",126,0)
 I IBPRNT="S" W !,"S U M M A R Y  S T A T I S T I C S"
"RTN","IBOTR3",127,0)
 I "OP"[IBSORT W !,"S O R T E D  B Y  A M O U N T  ",$S(IBSORT="O":"O W E",1:"P A I")," D - H I G H E S T  T O  L O W E S T"
"RTN","IBOTR3",128,0)
 W:$D(IBAF) !,IBAFT G:IBPRNT="G" EXHDL
"RTN","IBOTR3",129,0)
 W !,"INSURANCE NAME^GROUP #^BILL NUMBER^PATIENT NAME (AGE)^BILL FROM^DATE BILL TO^DATE PRINTED^DATE BILL CLOSED^# DAYS^AMOUNT BILLED^AMOUNT COLLECTED^AMOUNT UNPAID^AMOUNT PENDING^PERC COLL"
"RTN","IBOTR3",130,0)
EXHDL    ;
"RTN","IBOTR3",131,0)
 Q
"RTN","IBOTR3",132,0)
 ;
"RTN","IBOTR3",133,0)
EXOUT    ; Print excell format
"RTN","IBOTR3",134,0)
 W !,INSC_U_$P(IBBN,"@@",2)_U_$P(IBBN,"@@")_U_$$DATE($P(IBD,U,2))_U_$$DATE($P(IBD,U,3))_U_$$DATE($P(IBD,U,4))
"RTN","IBOTR3",135,0)
 W U_$S($P(IBD,U,5):$$DATE($P(IBD,U,5)),1:$P(IBD,U,5))
"RTN","IBOTR3",136,0)
 S X1=$S($P(IBD,U,5):$P(IBD,U,5),1:DT),X2=$P(IBD,U,4) D ^%DTC S IBDS=IBDS+X
"RTN","IBOTR3",137,0)
 W U_$J(X,4)_U_$J($P(IBD,U,6),11,2)_U_$J($P(IBD,U,7),10,2)
"RTN","IBOTR3",138,0)
 W U_$J($P(IBD,U,6)-$P(IBD,U,7),11,2)_U_$J(IBPEN,11,2)
"RTN","IBOTR3",139,0)
 W U_$J($S(+$P(IBD,U,6)=0:0,1:$P(IBD,U,7)/$P(IBD,U,6)*100),6,2)
"RTN","IBOTR3",140,0)
 Q
"RTN","IBOTR3",141,0)
 ;
"RTN","IBOTR3",142,0)
DATE(IBX) S:IBX]"" IBX=$E(IBX,4,5)_"/"_$E(IBX,6,7)_"/"_$E(IBX,2,3) Q IBX
"RTN","IBOTR3",143,0)
 ;
"RTN","IBOTR3",144,0)
PAUSE    I $E(IOST,1,2)'="C-" Q
"RTN","IBOTR3",145,0)
 I IOSL<60 F IBI=$Y:1:(IOSL-IBCALC) W !
"RTN","IBOTR3",146,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBOTR3",147,0)
 I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBOTR3",148,0)
 Q
"RTN","IBOTR3",149,0)
 ;
"RTN","IBOTR3",150,0)
INSADD   ; - Display Insurance Company name and address.
"RTN","IBOTR3",151,0)
 ; Input: IBINS
"RTN","IBOTR3",152,0)
 N D,PH,IEN
"RTN","IBOTR3",153,0)
 W !!?16,"INSURANCE CARRIER: ",$P(IBINS,"@@")
"RTN","IBOTR3",154,0)
 S IEN=$P(IBINS,"@@",2) G:'IEN INSADQ
"RTN","IBOTR3",155,0)
 S D=$G(^DIC(36,IEN,.11)),PH=$P($G(^(.13)),U) G:D="" INSADQ
"RTN","IBOTR3",156,0)
 W:$P(D,U)]"" !?35,$P(D,U)
"RTN","IBOTR3",157,0)
 W:$P(D,U,2)]"" !?35,$P(D,U,2)
"RTN","IBOTR3",158,0)
 W:$P(D,U,3)]"" !?35,$P(D,U,3)
"RTN","IBOTR3",159,0)
 W:$P(D,U)]""!($P(D,U,2)]"")!($P(D,U,3)]"") !?35
"RTN","IBOTR3",160,0)
 W $P(D,U,4) W:$P(D,U,4)]""&($P(D,U,5)]"") ", "
"RTN","IBOTR3",161,0)
 W $P($G(^DIC(5,+$P(D,U,5),0)),U)
"RTN","IBOTR3",162,0)
 W:$P(D,U,6)]""&($P(D,U,4)]""!($P(D,U,5)]"")) "   "
"RTN","IBOTR3",163,0)
 W $P(D,U,6) W:PH]"" $J("",8),"Phone: ",PH
"RTN","IBOTR3",164,0)
INSADQ   W ! Q
"RTN","IBOUNP1")
0^113^B17878634
"RTN","IBOUNP1",1,0)
IBOUNP1 ;ALB/CJM - OUTPATIENT INSURANCE REPORT ;JAN 25,1992
"RTN","IBOUNP1",2,0)
 ;;2.0;INTEGRATED BILLING;**249,528**;21-MAR-94;Build 163
"RTN","IBOUNP1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOUNP1",4,0)
 ;
"RTN","IBOUNP1",5,0)
 ; VAUTD =1 if all divisions selected
"RTN","IBOUNP1",6,0)
 ; VAUTD() - list of selected divisions
"RTN","IBOUNP1",7,0)
 ; VAUTC =1 if all clinics selected in selected divisions
"RTN","IBOUNP1",8,0)
 ; VAUTC() - list of selected clinics, indexed by record number
"RTN","IBOUNP1",9,0)
 ; IBOEND - end of the date range for the report
"RTN","IBOUNP1",10,0)
 ; IBOBEG - start of the date range for report
"RTN","IBOUNP1",11,0)
 ; IBOQUIT - flag to exit
"RTN","IBOUNP1",12,0)
 ; IBOUK =1 if vets whose insurance is unknown should be included
"RTN","IBOUNP1",13,0)
 ; IBOUI =1 if vets that are no insured should be included
"RTN","IBOUNP1",14,0)
 ; IBOEXP = 1 if vets whose insurance is expiring should be included
"RTN","IBOUNP1",15,0)
 ; IBOUT = "E" if output should be in Excel format, = "R" otherwise
"RTN","IBOUNP1",16,0)
MAIN ;
"RTN","IBOUNP1",17,0)
 ;***
"RTN","IBOUNP1",18,0)
 ;
"RTN","IBOUNP1",19,0)
 N IBOQUIT,IBOUI,IBOEXP,IBOUK,IBOUT,IBOPICK
"RTN","IBOUNP1",20,0)
 S IBOQUIT=0 K ^TMP($J,"SDAMA301"),^TMP("IBOUNP",$J)
"RTN","IBOUNP1",21,0)
 D CLINIC,CATGRY:'IBOQUIT,DRANGE:'IBOQUIT
"RTN","IBOUNP1",22,0)
 ;
"RTN","IBOUNP1",23,0)
 S IBOUT=$$OUT G:IBOUT="" EXIT
"RTN","IBOUNP1",24,0)
 ;
"RTN","IBOUNP1",25,0)
 D:'IBOQUIT DEVICE
"RTN","IBOUNP1",26,0)
 G:IBOQUIT EXIT
"RTN","IBOUNP1",27,0)
QUEUED ; entry point if queued
"RTN","IBOUNP1",28,0)
 ;
"RTN","IBOUNP1",29,0)
 ;
"RTN","IBOUNP1",30,0)
 D LCLINIC
"RTN","IBOUNP1",31,0)
 ;
"RTN","IBOUNP1",32,0)
 ; look up info from scheduling
"RTN","IBOUNP1",33,0)
 S IBARRAY(1)=IBOBEG_";"_IBOEND_".99"
"RTN","IBOUNP1",34,0)
 S:$D(VAUTC)>9 IBARRAY(2)="VAUTC("
"RTN","IBOUNP1",35,0)
 S IBARRAY(3)="R"
"RTN","IBOUNP1",36,0)
 S IBARRAY("FLDS")="2;4"
"RTN","IBOUNP1",37,0)
 S IBARRAY("SORT")="P"
"RTN","IBOUNP1",38,0)
 S IBCOUNT=$$SDAPI^SDAMA301(.IBARRAY)
"RTN","IBOUNP1",39,0)
 I IBCOUNT<0 U IO W !!,"Scheduling Information not Available",! S IBOQUIT=1 F  S IBCOUNT=$O(^TMP($J,"SDAMA301",IBCOUNT)) Q:'IBCOUNT  W !?10,IBCOUNT,?20,$G(^TMP($J,"SDAMA301",IBCOUNT))
"RTN","IBOUNP1",40,0)
 ;
"RTN","IBOUNP1",41,0)
 D:'IBOQUIT LOOPPT^IBOUNP2,REPORT^IBOUNP3
"RTN","IBOUNP1",42,0)
EXIT ; 
"RTN","IBOUNP1",43,0)
 K ^TMP($J,"SDAMA301"),^TMP("IBOUNP",$J)
"RTN","IBOUNP1",44,0)
 ;
"RTN","IBOUNP1",45,0)
 ;
"RTN","IBOUNP1",46,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOUNP1",47,0)
 D ^%ZISC
"RTN","IBOUNP1",48,0)
 K IBOQUIT,IBOBEG,IBOEND,IBOUK,IBOUI,IBOEXP,VAUTC,VAUTD,IBARRAY,IBCOUNT,IBOUT
"RTN","IBOUNP1",49,0)
 K Y,POP,X1,X2,X,VAEL,VAERR,IBSDDAT,IBODIV,IBOCLN,DIRUT,VADM,VAOA,VAPD
"RTN","IBOUNP1",50,0)
 Q
"RTN","IBOUNP1",51,0)
 ;
"RTN","IBOUNP1",52,0)
DRANGE ; select a date range for report
"RTN","IBOUNP1",53,0)
 S DIR(0)="D^::EX",DIR("A")="Start with DATE" D ^DIR I $D(DIRUT) S IBOQUIT=1 K DIR Q
"RTN","IBOUNP1",54,0)
 S IBOBEG=Y,DIR("A")="Go to DATE" F  D ^DIR S:$D(DIRUT) IBOQUIT=1 Q:(Y>IBOBEG)!(Y=IBOBEG)!IBOQUIT  W !,*7,"ENDING DATE must follow or be the same as the STARTING DATE"
"RTN","IBOUNP1",55,0)
 S IBOEND=Y K DIR
"RTN","IBOUNP1",56,0)
 Q
"RTN","IBOUNP1",57,0)
 ;
"RTN","IBOUNP1",58,0)
DEVICE ;
"RTN","IBOUNP1",59,0)
 I $D(ZTQUEUED) Q
"RTN","IBOUNP1",60,0)
 I IBOUT="R" W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBOUNP1",61,0)
 W !,"*** This output should be queued ***"
"RTN","IBOUNP1",62,0)
 S %ZIS="MQ" D ^%ZIS I POP S IBOQUIT=1 Q
"RTN","IBOUNP1",63,0)
 I $D(IO("Q")) S ZTRTN="QUEUED^IBOUNP1",ZTIO=ION,ZTSAVE("VA*")="",ZTSAVE("IBO*")="",ZTDESC="OUTPATIENT INSURANCE REPORT" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S IBOQUIT=1 Q
"RTN","IBOUNP1",64,0)
 U IO
"RTN","IBOUNP1",65,0)
 Q
"RTN","IBOUNP1",66,0)
 ;
"RTN","IBOUNP1",67,0)
CLINIC ; gets list of selected clinics,or sets VAUTC=1 if all selected
"RTN","IBOUNP1",68,0)
 ; IA#664
"RTN","IBOUNP1",69,0)
 N VAUTNI S VAUTNI=2,IBOQUIT=1
"RTN","IBOUNP1",70,0)
 D DIVISION^VAUTOMA Q:Y<0  S VAUTNI=2 D CLINIC^VAUTOMA Q:Y<0
"RTN","IBOUNP1",71,0)
 S IBOQUIT=0
"RTN","IBOUNP1",72,0)
 Q
"RTN","IBOUNP1",73,0)
 ;
"RTN","IBOUNP1",74,0)
LCLINIC ; lists clinics if not ALL included and ALL divisions
"RTN","IBOUNP1",75,0)
 N IBCLN,NODE
"RTN","IBOUNP1",76,0)
 I VAUTD'=1&(VAUTC=1) S VAUTC=0,IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
"RTN","IBOUNP1",77,0)
 .S NODE=$G(^SC(IBCLN,0))
"RTN","IBOUNP1",78,0)
 .;make sure it's the one of selected divisions division
"RTN","IBOUNP1",79,0)
 .Q:'$D(VAUTD(+$P(NODE,"^",15)))
"RTN","IBOUNP1",80,0)
 .;check that location is a clinic
"RTN","IBOUNP1",81,0)
 .Q:$P(NODE,"^",3)'="C"
"RTN","IBOUNP1",82,0)
 .S VAUTC(IBCLN)=""
"RTN","IBOUNP1",83,0)
 Q
"RTN","IBOUNP1",84,0)
 ;
"RTN","IBOUNP1",85,0)
CATGRY ; allows user to select categories to include in report
"RTN","IBOUNP1",86,0)
 S DIR(0)="Y",DIR("A")="Include veterans whose insurance is unknown"
"RTN","IBOUNP1",87,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
"RTN","IBOUNP1",88,0)
 S IBOUK=Y
"RTN","IBOUNP1",89,0)
 S DIR(0)="Y",DIR("A")="Include veterans whose insurance is expiring"
"RTN","IBOUNP1",90,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
"RTN","IBOUNP1",91,0)
 S IBOEXP=Y
"RTN","IBOUNP1",92,0)
 S DIR(0)="Y",DIR("A")="Include veterans who have no insurance"
"RTN","IBOUNP1",93,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
"RTN","IBOUNP1",94,0)
 S IBOUI=Y
"RTN","IBOUNP1",95,0)
 Q
"RTN","IBOUNP1",96,0)
 ;
"RTN","IBOUNP1",97,0)
OUT() ;
"RTN","IBOUNP1",98,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBOUNP1",99,0)
 W !
"RTN","IBOUNP1",100,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBOUNP1",101,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBOUNP1",102,0)
 S DIR("B")="Report"
"RTN","IBOUNP1",103,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBOUNP1",104,0)
 Q Y
"RTN","IBOUNP3")
0^114^B37406205
"RTN","IBOUNP3",1,0)
IBOUNP3 ;ALB/CJM - OUTPATIENT INSURANCE REPORT ;JAN 25,1991
"RTN","IBOUNP3",2,0)
 ;;2.0;INTEGRATED BILLING;**249,528**;21-MAR-94;Build 163
"RTN","IBOUNP3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOUNP3",4,0)
 ;
"RTN","IBOUNP3",5,0)
REPORT ;
"RTN","IBOUNP3",6,0)
 N QUIT,IBODIV,CLNC,TIME,DFN,CTG,HDR,HDR2,HDR1,PAGE,NOW,LINE,B,E,NAME,CRT,BOT,DIVTOT,CLNTOT,TOTAL,FIRST,PATINF
"RTN","IBOUNP3",7,0)
 S CRT=0,BOT=6,QUIT=0 I $E(IOST,1,2)="C-" S CRT=1,BOT=2
"RTN","IBOUNP3",8,0)
 S FIRST=1
"RTN","IBOUNP3",9,0)
 D NOW^%DTC S Y=X X ^DD("DD") S NOW=Y
"RTN","IBOUNP3",10,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBOUNP3",11,0)
 W:CRT @IOF
"RTN","IBOUNP3",12,0)
 ;
"RTN","IBOUNP3",13,0)
 S HDR="OUTPATIENT VISITS FOR VETERANS",LINE="",$P(LINE,"-",126)=""
"RTN","IBOUNP3",14,0)
 I IBOUT="E" S (HDR1,HDR2)="" D PHDL G CAT
"RTN","IBOUNP3",15,0)
 S Y=IBOBEG X ^DD("DD") S B=Y
"RTN","IBOUNP3",16,0)
 S Y=IBOEND X ^DD("DD") S E=Y
"RTN","IBOUNP3",17,0)
 S HDR2="FOR APPOINTMENTS " S:E'=B HDR2=HDR2_"FROM "_B_" TO "_E
"RTN","IBOUNP3",18,0)
 S:E=B HDR2=HDR2_"ON "_B
"RTN","IBOUNP3",19,0)
CAT I IBOUI S CTG="NO",HDR1=HDR_" WITH NO INSURANCE" D LOOP G:QUIT Q
"RTN","IBOUNP3",20,0)
 I IBOEXP S CTG="EXPIRED",HDR1=HDR_" WHOSE INSURANCE IS EXPIRED OR WILL EXPIRE WITHIN 30 DAYS" D LOOP G:QUIT Q
"RTN","IBOUNP3",21,0)
 I IBOUK S CTG="UNKNOWN",HDR1=HDR_" WHOSE INSURANCE IS UNKNOWN" D LOOP
"RTN","IBOUNP3",22,0)
 W:IBOUT="E" !
"RTN","IBOUNP3",23,0)
 I CRT,'QUIT D PAUSE
"RTN","IBOUNP3",24,0)
Q D KVAR^VADPT K VA
"RTN","IBOUNP3",25,0)
 Q
"RTN","IBOUNP3",26,0)
LOOP ;
"RTN","IBOUNP3",27,0)
 S IBODIV="",PAGE=1,(CLNTOT,DIVTOT,TOTAL)=0
"RTN","IBOUNP3",28,0)
 I IBOUT="E" W !!,HDR1
"RTN","IBOUNP3",29,0)
 F  D:DIVTOT DIVTOT S:DIVTOT TOTAL=TOTAL+DIVTOT,DIVTOT=0 S IBODIV=$O(^TMP("IBOUNP",$J,CTG,IBODIV)) Q:IBODIV=""!QUIT  S CLNC="" D
"RTN","IBOUNP3",30,0)
 .I IBOUT="R" D HEADER Q:QUIT
"RTN","IBOUNP3",31,0)
 .I IBOUT="R" W !!?6,"Division:  ",?31,IBODIV,!
"RTN","IBOUNP3",32,0)
 .I IBOUT="E" W !!,"Division:^",IBODIV,!
"RTN","IBOUNP3",33,0)
 .F  S CLNC=$O(^TMP("IBOUNP",$J,CTG,IBODIV,CLNC)) S DIVTOT=DIVTOT+CLNTOT,CLNTOT=0 Q:CLNC=""!QUIT  D:$Y>(IOSL-BOT-4)&(IBOUT="R") HEADER Q:QUIT  W:IBOUT="R" !!,?6,"Clinic: ",?31,CLNC,! W:IBOUT="E" !!,"Clinic:^",CLNC,! S NAME="" D
"RTN","IBOUNP3",34,0)
 ..F  S NAME=$O(^TMP("IBOUNP",$J,CTG,IBODIV,CLNC,NAME)) Q:QUIT  D:NAME=""&(CLNTOT>0) CLNTOT Q:NAME=""  D
"RTN","IBOUNP3",35,0)
 ... F DFN=0:0 S DFN=$O(^TMP("IBOUNP",$J,CTG,IBODIV,CLNC,NAME,DFN)) Q:DFN'>0  S TIME=^TMP("IBOUNP",$J,CTG,IBODIV,CLNC,NAME,DFN) D ITEM Q:QUIT
"RTN","IBOUNP3",36,0)
 D:'QUIT TOTAL
"RTN","IBOUNP3",37,0)
 Q
"RTN","IBOUNP3",38,0)
CLNTOT ; prints subtotal for clinic
"RTN","IBOUNP3",39,0)
 I IBOUT="E" W !,"________________________",!,"Clinic Subtotal  : ",CLNTOT Q
"RTN","IBOUNP3",40,0)
 I $Y+BOT>(IOSL-1) D HEADER
"RTN","IBOUNP3",41,0)
 W !?3,"________________________"
"RTN","IBOUNP3",42,0)
 W !,?3,"Clinic Subtotal  : ",CLNTOT
"RTN","IBOUNP3",43,0)
 Q
"RTN","IBOUNP3",44,0)
DIVTOT ; prints subtotal for division
"RTN","IBOUNP3",45,0)
 I IBOUT="E" W !,"________________________",!,"Division Subtotal: ",DIVTOT Q
"RTN","IBOUNP3",46,0)
 I $Y+BOT>(IOSL-1) D HEADER
"RTN","IBOUNP3",47,0)
 W !?3,"________________________"
"RTN","IBOUNP3",48,0)
 W !,?3,"Division Subtotal: ",DIVTOT
"RTN","IBOUNP3",49,0)
 Q
"RTN","IBOUNP3",50,0)
TOTAL ; prints total for all clinics
"RTN","IBOUNP3",51,0)
 I IBOUT="E" W !,"________________________",!,"Total            : ",TOTAL Q
"RTN","IBOUNP3",52,0)
 I ($Y+BOT>(IOSL-1))!($Y'>1) D HEADER Q:QUIT
"RTN","IBOUNP3",53,0)
 W !?3,"________________________"
"RTN","IBOUNP3",54,0)
 W !?3,"Total            : ",TOTAL
"RTN","IBOUNP3",55,0)
 ;F  Q:($Y>(IOSL-2))  W !     ; Eliminate scrolling problem - CJS, IB*2.0*528
"RTN","IBOUNP3",56,0)
 Q
"RTN","IBOUNP3",57,0)
ITEM ; prints patient data for a single appt
"RTN","IBOUNP3",58,0)
 N CNT,TM,E1,E2,PID,MS,ES,SC,AGE,INS,I,VAPA S (E1,E2,PID,MS,ES,SC,AGE)="",CNT=2,CLNTOT=CLNTOT+1
"RTN","IBOUNP3",59,0)
DATA S Y=TIME X ^DD("DD") S TM=$P(Y,"@",1)_"@"_$E($P(Y,"@",2),1,5)
"RTN","IBOUNP3",60,0)
 D DEM^VADPT I 'VAERR S MS=$P(VADM(10),"^",2),PID=VA("PID"),AGE=VADM(4)
"RTN","IBOUNP3",61,0)
 D OPD^VADPT I 'VAERR S ES=$P(VAPD(7),"^",2)
"RTN","IBOUNP3",62,0)
 D ELIG^VADPT I 'VAERR,+VAEL(3) S SC=$P(VAEL(3),"^",2)
"RTN","IBOUNP3",63,0)
CKSPACE ; tries to keep vet's data on same page
"RTN","IBOUNP3",64,0)
 S VAPA("P")="" D ADD^VADPT I 'VAERR D
"RTN","IBOUNP3",65,0)
 . F I=2,3,4 S:VAPA(I)]"" CNT=CNT+1
"RTN","IBOUNP3",66,0)
 S VAOA("A")=5 D OAD^VADPT I 'VAERR S E1=VAOA(9) I E1]"" D
"RTN","IBOUNP3",67,0)
 . S CNT=CNT+1
"RTN","IBOUNP3",68,0)
 . F I=1,2,3,4,5,6,8 S E1(I)=VAOA(I)
"RTN","IBOUNP3",69,0)
 . F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
"RTN","IBOUNP3",70,0)
 S VAOA("A")=6 D OAD^VADPT I 'VAERR S E2=VAOA(9) I E2]"" D
"RTN","IBOUNP3",71,0)
 . S CNT=CNT+1
"RTN","IBOUNP3",72,0)
 . F I=1,2,3,4,5,6,8 S E2(I)=VAOA(I)
"RTN","IBOUNP3",73,0)
 . F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
"RTN","IBOUNP3",74,0)
 S CNT=$P($G(^DPT(DFN,.312,0)),"^",4)+CNT G:IBOUT="E" XLPRINT
"RTN","IBOUNP3",75,0)
 I CNT>(IOSL-($Y+BOT)) D HEADER Q:QUIT
"RTN","IBOUNP3",76,0)
PRINT W !?3,$E(NAME,1,25),?31,PID,?51,TM,?74,AGE,?81,SC,?87,$E(MS,1,15),?104,$E(ES,1,20)
"RTN","IBOUNP3",77,0)
 W !?31,"Address:",?51,VAPA(1),?87,"Tele: ",?104,VAPA(8) W:VAPA(2)]"" !?51,VAPA(2) W:VAPA(3)]"" !?51,VAPA(3) W:VAPA(4)]"" !?51,VAPA(4)_","_$P($G(^DIC(5,+VAPA(5),0)),"^",2)_" "_VAPA(6)
"RTN","IBOUNP3",78,0)
 I E1]"" W !?31,"Employer:",?51,E1,?87,"Tele: ",?104,E1(8) W:E1(1)]"" !?51,E1(1) W:E1(2)]"" !?51,E1(2) W:E1(3)]"" !?51,E1(3) W:E1(4)]"" !?51,E1(4)_","_$P($G(^DIC(5,+E1(5),0)),"^",2)_" "_E1(6)
"RTN","IBOUNP3",79,0)
 I E2]"" W !?31,"Sps's Emplr:",?51,E2,?87,"Tele: ",?104,E2(8) W:E2(1)]"" !?51,E2(1) W:E2(2)]"" !?51,E2(2) W:E2(3)]"" !?51,E2(3) W:E2(4)]"" !?51,E2(4)_","_$P($G(^DIC(5,+E2(5),0)),"^",2)_" "_E2(6)
"RTN","IBOUNP3",80,0)
INS ; writes insurance data
"RTN","IBOUNP3",81,0)
 N I,J S J=1 F I=0:0 S I=$O(^DPT(DFN,.312,I)) Q:I'>0  S INS=$G(^(I,0)) D:$Y>(IOSL-BOT) HEADER Q:QUIT  W ! W:J ?31,"Insurance:" W ?51,$P($G(^DIC(36,$P(INS,"^",1),0)),"^",1),?87 W:J "Expiration:" S Y=$P(INS,"^",4),J=0 I Y>0 X ^DD("DD") W ?104,Y
"RTN","IBOUNP3",82,0)
 Q
"RTN","IBOUNP3",83,0)
XLPRINT ; Excel data output
"RTN","IBOUNP3",84,0)
 W !,$E(NAME,1,25),"^",PID,"^",TM,"^",AGE,"^",SC,"^",$E(MS,1,15),"^",$E(ES,1,20)
"RTN","IBOUNP3",85,0)
 W !,"^Address:^",VAPA(1),"^^^Tele:^",VAPA(8) W:VAPA(2)]"" !,"^^",VAPA(2) W:VAPA(3)]"" !,"^^",VAPA(3) W:VAPA(4)]"" !,"^^",VAPA(4)_","_$P($G(^DIC(5,+VAPA(5),0)),"^",2)_" "_VAPA(6)
"RTN","IBOUNP3",86,0)
 I E1]"" W !,"^Employer:^",E1,"^^^Tele:^",E1(8) W:E1(1)]"" !,"^^",E1(1) W:E1(2)]"" !,"^^",E1(2) W:E1(3)]"" !,"^^",E1(3) W:E1(4)]"" !,"^^",E1(4)_","_$P($G(^DIC(5,+E1(5),0)),"^",2)_" "_E1(6)
"RTN","IBOUNP3",87,0)
 I E2]"" W !,"^Sps's Emplr:^",E2,"^^^Tele:^",E2(8) W:E2(1)]"" !,"^^",E2(1) W:E2(2)]"" !,"^^",E2(2) W:E2(3)]"" !,"^^",E2(3) W:E2(4)]"" !,"^^",E2(4)_","_$P($G(^DIC(5,+E2(5),0)),"^",2)_" "_E2(6)
"RTN","IBOUNP3",88,0)
XLINS ; writes insurance data in Excel format
"RTN","IBOUNP3",89,0)
 N I,J S J=1 F I=0:0 S I=$O(^DPT(DFN,.312,I)) Q:I'>0  S INS=$G(^(I,0)) W ! W:J "^Insurance:^" W:'J "^^" W $P($G(^DIC(36,$P(INS,"^",1),0)),"^",1),"^^^" W:J "Expiration:" S Y=$P(INS,"^",4),J=0 I Y>0 X ^DD("DD") W "^",Y
"RTN","IBOUNP3",90,0)
 Q
"RTN","IBOUNP3",91,0)
 ;
"RTN","IBOUNP3",92,0)
HEADER ; writes the report header
"RTN","IBOUNP3",93,0)
 I CRT,$Y>1,'FIRST D  Q:QUIT
"RTN","IBOUNP3",94,0)
 .; F  Q:$Y>(IOSL-1)  W !     ; Eliminate scrolling problem - CJS, IB*2.0*528
"RTN","IBOUNP3",95,0)
 .D PAUSE
"RTN","IBOUNP3",96,0)
 I 'FIRST W @IOF
"RTN","IBOUNP3",97,0)
 I FIRST S FIRST=0
"RTN","IBOUNP3",98,0)
 W !,HDR1,?104,NOW,"  PAGE ",PAGE,!,HDR2,!!
"RTN","IBOUNP3",99,0)
 W ?3,"PATIENT NAME",?32,"PT ID",?51,"APPT DATE/TIME",?74,"AGE",?81,"%SC",?87,"MARITAL STATUS",?104,"EMPLOYMENT STATUS",!
"RTN","IBOUNP3",100,0)
 W LINE
"RTN","IBOUNP3",101,0)
 S PAGE=PAGE+1
"RTN","IBOUNP3",102,0)
 Q
"RTN","IBOUNP3",103,0)
PAUSE ;
"RTN","IBOUNP3",104,0)
 N T W:($Y<IOSL) ! R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S QUIT=1 Q
"RTN","IBOUNP3",105,0)
 Q
"RTN","IBOUNP3",106,0)
 ;
"RTN","IBOUNP3",107,0)
PHDL ; Print header for Excel format
"RTN","IBOUNP3",108,0)
 W "PATIENT NAME^PT ID^APPT DATE/TIME^AGE^%SC^MARITAL STATUS^EMPLOYMENT STATUS"
"RTN","IBOUNP3",109,0)
 Q
"RTN","IBOUNP4")
0^104^B13529081
"RTN","IBOUNP4",1,0)
IBOUNP4 ;ALB/CJM - INPATIENT INSURANCE REPORT ;JAN 25,1992
"RTN","IBOUNP4",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBOUNP4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOUNP4",4,0)
 ; VAUTD =1 if all divisions selected
"RTN","IBOUNP4",5,0)
 ; VAUTD() - list of selected divisions
"RTN","IBOUNP4",6,0)
 ; IBOEND - end of the date range for the report
"RTN","IBOUNP4",7,0)
 ; IBOBEG - start of the date range for report
"RTN","IBOUNP4",8,0)
 ; IBOUK =1 if vets whose insurance is unknown should be included
"RTN","IBOUNP4",9,0)
 ; IBOUI =1 if vets that are no insured should be included
"RTN","IBOUNP4",10,0)
 ; IBOEXP = 1 if vets whose insurance is expiring should be included
"RTN","IBOUNP4",11,0)
 ; IBOBYWRD = 1 if report should be sorted by ward, = 0 otherwise
"RTN","IBOUNP4",12,0)
 ; IBOUT = "E" if output should be in Excel format, = "R" otherwise
"RTN","IBOUNP4",13,0)
MAIN ;
"RTN","IBOUNP4",14,0)
 N QUIT S QUIT=0,IBOBYWRD=0 K ^TMP($J)
"RTN","IBOUNP4",15,0)
 D DIVISION,PICK:'QUIT,CATGRY:'QUIT,SORTBY:'QUIT
"RTN","IBOUNP4",16,0)
 ;
"RTN","IBOUNP4",17,0)
 S IBOUT=$$OUT G:IBOUT="" EXIT
"RTN","IBOUNP4",18,0)
 ;
"RTN","IBOUNP4",19,0)
 D:'$G(QUIT) DEVICE
"RTN","IBOUNP4",20,0)
 G:QUIT EXIT
"RTN","IBOUNP4",21,0)
QUEUED ; entry point if queued
"RTN","IBOUNP4",22,0)
 D LOOP^IBOUNP5,REPORT^IBOUNP6
"RTN","IBOUNP4",23,0)
EXIT ;
"RTN","IBOUNP4",24,0)
 K ^TMP($J)
"RTN","IBOUNP4",25,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOUNP4",26,0)
 D ^%ZISC
"RTN","IBOUNP4",27,0)
 K IBOBEG,IBOEND,IBOUK,IBOUI,IBOEXP,VAUTD,IBOPICK,IBOBYWRD,IBOUT
"RTN","IBOUNP4",28,0)
 Q
"RTN","IBOUNP4",29,0)
DRANGE ; select a date range for report
"RTN","IBOUNP4",30,0)
 S DIR(0)="D^::EX",DIR("A")="Start with DATE" D ^DIR I $D(DIRUT) S QUIT=1 K DIR Q
"RTN","IBOUNP4",31,0)
 S IBOBEG=Y,DIR("A")="Go to DATE" F  D ^DIR S:$D(DIRUT) QUIT=1 Q:(Y>IBOBEG)!(Y=IBOBEG)!QUIT  W !,*7,"ENDING DATE must follow or be the same as the STARTING DATE"
"RTN","IBOUNP4",32,0)
 S IBOEND=Y K DIR Q
"RTN","IBOUNP4",33,0)
DEVICE ;
"RTN","IBOUNP4",34,0)
 I $D(ZTQUEUED) Q
"RTN","IBOUNP4",35,0)
 I IBOUT="R" W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBOUNP4",36,0)
 W !,"*** This output should be queued ***"
"RTN","IBOUNP4",37,0)
 S %ZIS="MQ" D ^%ZIS I POP S QUIT=1 Q
"RTN","IBOUNP4",38,0)
 I $D(IO("Q")) S ZTRTN="QUEUED^IBOUNP4",ZTIO=ION,ZTSAVE("VA*")="",ZTSAVE("IBO*")="",ZTDESC="INPATIENT INSURANCE REPORT" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S QUIT=1 Q
"RTN","IBOUNP4",39,0)
 U IO
"RTN","IBOUNP4",40,0)
 Q
"RTN","IBOUNP4",41,0)
CATGRY ; allows user to select categories to include in report
"RTN","IBOUNP4",42,0)
 S DIR(0)="Y",DIR("A")="Include veterans whose insurance is unknown"
"RTN","IBOUNP4",43,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBOUNP4",44,0)
 S IBOUK=Y
"RTN","IBOUNP4",45,0)
 S DIR(0)="Y",DIR("A")="Include veterans whose insurance is expiring"
"RTN","IBOUNP4",46,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBOUNP4",47,0)
 S IBOEXP=Y
"RTN","IBOUNP4",48,0)
 S DIR(0)="Y",DIR("A")="Include veterans who have no insurance"
"RTN","IBOUNP4",49,0)
 S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBOUNP4",50,0)
 S IBOUI=Y
"RTN","IBOUNP4",51,0)
 Q
"RTN","IBOUNP4",52,0)
DIVISION ; gets list of selected divisions,or sets VAUTC=1 if all select
"RTN","IBOUNP4",53,0)
 N VAUTNI S VAUTNI=2,QUIT=1
"RTN","IBOUNP4",54,0)
 D DIVISION^VAUTOMA Q:Y<0
"RTN","IBOUNP4",55,0)
 S QUIT=0
"RTN","IBOUNP4",56,0)
 Q
"RTN","IBOUNP4",57,0)
PICK ; gets user's choice of all current inpatients or all admitted in range
"RTN","IBOUNP4",58,0)
 S DIR(0)="S^D:(D)ATE RANGE;C:(C)URRENT DATE;"
"RTN","IBOUNP4",59,0)
 S DIR("?",1)="C for CURRENT DATE- Report will display only those patients that are "
"RTN","IBOUNP4",60,0)
 S DIR("?",2)="inpatients in hospital today."
"RTN","IBOUNP4",61,0)
 S DIR("?",3)=""
"RTN","IBOUNP4",62,0)
 S DIR("?",4)="D for DATE RANGE - to display all patients that were admitted "
"RTN","IBOUNP4",63,0)
 S DIR("?")="to the hospital during that period."
"RTN","IBOUNP4",64,0)
 S DIR("A")="Display report for"
"RTN","IBOUNP4",65,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBOUNP4",66,0)
 S IBOPICK=Y D:IBOPICK="D" DRANGE
"RTN","IBOUNP4",67,0)
 Q
"RTN","IBOUNP4",68,0)
SORTBY ;sets IBOBYWRD=1 if user wants the output sorted by ward
"RTN","IBOUNP4",69,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want the report sorted by WARD, as well as by division and patient"
"RTN","IBOUNP4",70,0)
 D ^DIR I $D(DIRUT) S QUIT=1 Q
"RTN","IBOUNP4",71,0)
 S IBOBYWRD=Y
"RTN","IBOUNP4",72,0)
 Q
"RTN","IBOUNP4",73,0)
 ;
"RTN","IBOUNP4",74,0)
OUT() ;
"RTN","IBOUNP4",75,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBOUNP4",76,0)
 W !
"RTN","IBOUNP4",77,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBOUNP4",78,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBOUNP4",79,0)
 S DIR("B")="Report"
"RTN","IBOUNP4",80,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBOUNP4",81,0)
 Q Y
"RTN","IBOUNP6")
0^105^B36369758
"RTN","IBOUNP6",1,0)
IBOUNP6 ;ALB/CJM - INPATIENT INSURANCE REPORT ;JAN 25,1991
"RTN","IBOUNP6",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBOUNP6",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBOUNP6",4,0)
REPORT ;
"RTN","IBOUNP6",5,0)
 N QUIT,DIV,TIME,DFN,CTG,HDR,HDR2,HDR1,PAGE,NOW,LINE1,LINE2,B,E,NAME,CRT,BOT,SUBTOT,TOTAL,FIRST,WRDN,WARD,PATINF
"RTN","IBOUNP6",6,0)
 S CRT=0,BOT=6,QUIT=0 I $E(IOST,1,2)="C-" S CRT=1,BOT=2
"RTN","IBOUNP6",7,0)
 S FIRST=1
"RTN","IBOUNP6",8,0)
 D NOW^%DTC S Y=X X ^DD("DD") S NOW=Y
"RTN","IBOUNP6",9,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBOUNP6",10,0)
 W:CRT @IOF
"RTN","IBOUNP6",11,0)
 ;
"RTN","IBOUNP6",12,0)
 S HDR="VETERANS"
"RTN","IBOUNP6",13,0)
 I IBOUT="E" S (HDR1,HDR2,LINE1,LINE2)="" D PHDL G CAT
"RTN","IBOUNP6",14,0)
 S LINE1="",$P(LINE1,"-",126)=""
"RTN","IBOUNP6",15,0)
 S LINE2="",$P(LINE2,"=",126)=""
"RTN","IBOUNP6",16,0)
 I IBOPICK="D" S Y=IBOBEG X ^DD("DD") S B=Y,Y=IBOEND X ^DD("DD") S E=Y,HDR2="THAT WERE ADMITTED " S:E'=B HDR2=HDR2_"BETWEEN "_B_" AND "_E S:E=B HDR2=HDR2_"ON "_B
"RTN","IBOUNP6",17,0)
 I IBOPICK="C" S HDR2="THAT ARE CURRENTLY ADMITTED"
"RTN","IBOUNP6",18,0)
 I CRT W @IOF
"RTN","IBOUNP6",19,0)
CAT I IBOUI S CTG="NO",HDR1=HDR_" WITH NO INSURANCE " D LOOP G:QUIT Q
"RTN","IBOUNP6",20,0)
 I IBOEXP S CTG="EXPIRED",HDR1=HDR_" WHOSE INSURANCE IS EXPIRED OR WILL EXPIRE WITHIN 30 DAYS " D LOOP G:QUIT Q
"RTN","IBOUNP6",21,0)
 I IBOUK S CTG="UNKNOWN",HDR1=HDR_" WHOSE INSURANCE IS UNKNOWN " D LOOP
"RTN","IBOUNP6",22,0)
 W:IBOUT="E" !
"RTN","IBOUNP6",23,0)
 I CRT,'QUIT D PAUSE
"RTN","IBOUNP6",24,0)
Q D KVAR^VADPT K VA
"RTN","IBOUNP6",25,0)
 Q
"RTN","IBOUNP6",26,0)
LOOP ;
"RTN","IBOUNP6",27,0)
 N NODE
"RTN","IBOUNP6",28,0)
 S PAGE=1,(SUBTOT,TOTAL)=0 I IBOUT="R" D HEADER Q:QUIT
"RTN","IBOUNP6",29,0)
 I IBOUT="E" W !!,HDR1
"RTN","IBOUNP6",30,0)
 S DIV="" F   S DIV=$O(^TMP($J,CTG,DIV)) S TOTAL=TOTAL+SUBTOT,SUBTOT=0 Q:DIV=""!QUIT   D:$Y>(IOSL-(BOT+4))&(IBOUT="R") HEADER Q:QUIT  W:IBOUT="R" !!,?6,"Division: ",?31,DIV W:IBOUT="E" !!,"Division:^",DIV W !,LINE2,! D
"RTN","IBOUNP6",31,0)
 .S WRDN="" F  S WRDN=$O(^TMP($J,CTG,DIV,WRDN)) Q:QUIT  D:WRDN=""&(SUBTOT>0) SUBTOT Q:WRDN=""  D  Q:QUIT
"RTN","IBOUNP6",32,0)
 ..I WRDN'="ALL WARDS" D  Q:QUIT
"RTN","IBOUNP6",33,0)
 ...I ($Y>(IOSL-(BOT+8))),(IBOUT="R") D HEADER Q:QUIT
"RTN","IBOUNP6",34,0)
 ...I IBOUT="R" W !,?6,"Ward: ",?31,WRDN,!
"RTN","IBOUNP6",35,0)
 ...I IBOUT="E" W !,"Ward:^",WRDN,!
"RTN","IBOUNP6",36,0)
 ..S NAME="" F  S NAME=$O(^TMP($J,CTG,DIV,WRDN,NAME)) Q:NAME=""  D
"RTN","IBOUNP6",37,0)
 ...F DFN=0:0 S DFN=$O(^TMP($J,CTG,DIV,WRDN,NAME,DFN)) Q:QUIT!(DFN'>0)  S NODE=^TMP($J,CTG,DIV,WRDN,NAME,DFN),TIME=$P(NODE,"^"),WARD=$P(NODE,"^",2) D ITEM
"RTN","IBOUNP6",38,0)
 ..I WRDN'="ALL WARDS" W !,LINE1
"RTN","IBOUNP6",39,0)
 D:'QUIT TOTAL
"RTN","IBOUNP6",40,0)
 Q
"RTN","IBOUNP6",41,0)
SUBTOT ; prints subtotal for division
"RTN","IBOUNP6",42,0)
 I IBOUT="E" W !,"_________________",!,"Subtotal: ",SUBTOT Q
"RTN","IBOUNP6",43,0)
 I $Y+BOT>(IOSL-3) D HEADER
"RTN","IBOUNP6",44,0)
 W !?3,"_________________"
"RTN","IBOUNP6",45,0)
 W !,?3,"Subtotal: ",SUBTOT
"RTN","IBOUNP6",46,0)
 Q
"RTN","IBOUNP6",47,0)
TOTAL ; prints total for all divisions
"RTN","IBOUNP6",48,0)
 I IBOUT="E" W !,"_________________",!,"Total: ",TOTAL Q
"RTN","IBOUNP6",49,0)
 I $Y+BOT>(IOSL-3) D HEADER Q:QUIT
"RTN","IBOUNP6",50,0)
 W !?3,"_________________"
"RTN","IBOUNP6",51,0)
 W !?3,"Total: ",TOTAL
"RTN","IBOUNP6",52,0)
 ;F  Q:($Y>(IOSL-2))  W !     ; Eliminate scrolling problem - CJS, IB*2.0*528
"RTN","IBOUNP6",53,0)
 Q
"RTN","IBOUNP6",54,0)
ITEM ; prints patient data for a single appt
"RTN","IBOUNP6",55,0)
 N CNT,TM,E1,E2,PID,MS,ES,SC,AGE,INS,I,VAPA S (E1,E2,PID,MS,ES,SC,AGE)="",CNT=2,SUBTOT=SUBTOT+1
"RTN","IBOUNP6",56,0)
DATA S Y=TIME X ^DD("DD") S TM=$P(Y,"@",1)_"@"_$E($P(Y,"@",2),1,5)
"RTN","IBOUNP6",57,0)
 D DEM^VADPT I 'VAERR S MS=$P(VADM(10),"^",2),PID=VA("PID"),AGE=VADM(4)
"RTN","IBOUNP6",58,0)
 D OPD^VADPT I 'VAERR S ES=$P(VAPD(7),"^",2)
"RTN","IBOUNP6",59,0)
 D ELIG^VADPT I 'VAERR,+VAEL(3) S SC=$P(VAEL(3),"^",2)
"RTN","IBOUNP6",60,0)
CKSPACE ; tries to keep vet's data on same page
"RTN","IBOUNP6",61,0)
 S VAPA("P")="" D ADD^VADPT I 'VAERR D
"RTN","IBOUNP6",62,0)
 . F I=2,3,4 S:VAPA(I)]"" CNT=CNT+1
"RTN","IBOUNP6",63,0)
 S VAOA("A")=5 D OAD^VADPT I 'VAERR S E1=VAOA(9) I E1]"" D
"RTN","IBOUNP6",64,0)
 . S CNT=CNT+1
"RTN","IBOUNP6",65,0)
 . F I=1,2,3,4,5,6,8 S E1(I)=VAOA(I)
"RTN","IBOUNP6",66,0)
 . F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
"RTN","IBOUNP6",67,0)
 S VAOA("A")=6 D OAD^VADPT I 'VAERR S E2=VAOA(9) I E2]"" D
"RTN","IBOUNP6",68,0)
 . S CNT=CNT+1
"RTN","IBOUNP6",69,0)
 . F I=1,2,3,4,5,6,8 S E2(I)=VAOA(I)
"RTN","IBOUNP6",70,0)
 . F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
"RTN","IBOUNP6",71,0)
 S CNT=$P($G(^DPT(DFN,.312,0)),"^",4)+CNT G:IBOUT="E" XLPRINT
"RTN","IBOUNP6",72,0)
 I CNT>(IOSL-($Y+BOT)) D HEADER Q:QUIT
"RTN","IBOUNP6",73,0)
PRINT W !?3,$E(NAME,1,25),?31,PID,?51,TM,?74,AGE,?81,SC,?87,$E(MS,1,15),?104,$E(ES,1,20)
"RTN","IBOUNP6",74,0)
 W !?5,WARD,?34,"Address:",?51,VAPA(1),?87,"Tele: ",?104,VAPA(8) W:VAPA(2)]"" !?51,VAPA(2) W:VAPA(3)]"" !?51,VAPA(3) W:VAPA(4)]"" !?51,VAPA(4)_","_$P($G(^DIC(5,+VAPA(5),0)),"^",2)_" "_VAPA(6)
"RTN","IBOUNP6",75,0)
 I E1]"" W !?34,"Employer:",?51,E1,?87,"Tele: ",?104,E1(8) W:E1(1)]"" !?51,E1(1) W:E1(2)]"" !?51,E1(2) W:E1(3)]"" !?51,E1(3) W:E1(4)]"" !?51,E1(4)_","_$P($G(^DIC(5,+E1(5),0)),"^",2)_" "_E1(6)
"RTN","IBOUNP6",76,0)
 I E2]"" W !?34,"Sps's Emplr:",?51,E2,?87,"Tele: ",?104,E2(8) W:E2(1)]"" !?51,E2(1) W:E2(2)]"" !?51,E2(2) W:E2(3)]"" !?51,E2(3) W:E2(4)]"" !?51,E2(4)_","_$P($G(^DIC(5,+E2(5),0)),"^",2)_" "_E2(6)
"RTN","IBOUNP6",77,0)
INS ; writes insurance data
"RTN","IBOUNP6",78,0)
 N I,J S J=1 F I=0:0 S I=$O(^DPT(DFN,.312,I)) Q:I'>0  S INS=$G(^(I,0)) D:$Y>(IOSL-BOT) HEADER Q:QUIT  W ! W:J ?34,"Insurance:" W ?51,$P($G(^DIC(36,$P(INS,"^",1),0)),"^",1),?87 W:J "Expiration:" S Y=$P(INS,"^",4),J=0 I Y>0 X ^DD("DD") W ?104,Y
"RTN","IBOUNP6",79,0)
 W !
"RTN","IBOUNP6",80,0)
 Q
"RTN","IBOUNP6",81,0)
XLPRINT ; Excel data output
"RTN","IBOUNP6",82,0)
 W !,$E(NAME,1,25),"^",PID,"^",TM,"^",AGE,"^",SC,"^",$E(MS,1,15),"^",$E(ES,1,20)
"RTN","IBOUNP6",83,0)
 W !,WARD,"^Address:^",VAPA(1),"^^^Tele:^",VAPA(8) W:VAPA(2)]"" !,"^^",VAPA(2) W:VAPA(3)]"" !,"^^",VAPA(3) W:VAPA(4)]"" !,"^^",VAPA(4)_","_$P($G(^DIC(5,+VAPA(5),0)),"^",2)_" "_VAPA(6)
"RTN","IBOUNP6",84,0)
 I E1]"" W !,"^Employer:^",E1,"^^^Tele:^",E1(8) W:E1(1)]"" !,"^^",E1(1) W:E1(2)]"" !,"^^",E1(2) W:E1(3)]"" !,"^^",E1(3) W:E1(4)]"" !,"^^",E1(4)_","_$P($G(^DIC(5,+E1(5),0)),"^",2)_" "_E1(6)
"RTN","IBOUNP6",85,0)
 I E2]"" W !,"^Sps's Emplr:^",E2,"^^^Tele:^",E2(8) W:E2(1)]"" !,"^^",E2(1) W:E2(2)]"" !,"^^",E2(2) W:E2(3)]"" !,"^^",E2(3) W:E2(4)]"" !,"^^",E2(4)_","_$P($G(^DIC(5,+E2(5),0)),"^",2)_" "_E2(6)
"RTN","IBOUNP6",86,0)
XLINS ; writes insurance data in Excel format
"RTN","IBOUNP6",87,0)
 N I,J S J=1 F I=0:0 S I=$O(^DPT(DFN,.312,I)) Q:I'>0  S INS=$G(^(I,0)) W ! W:J "^Insurance:^" W:'J "^^" W $P($G(^DIC(36,$P(INS,"^",1),0)),"^",1),"^^^" W:J "Expiration:" S Y=$P(INS,"^",4),J=0 I Y>0 X ^DD("DD") W "^",Y
"RTN","IBOUNP6",88,0)
 W !
"RTN","IBOUNP6",89,0)
 Q
"RTN","IBOUNP6",90,0)
 ;
"RTN","IBOUNP6",91,0)
HEADER ; writes the report header
"RTN","IBOUNP6",92,0)
 I CRT,$Y>1,'FIRST D  Q:QUIT
"RTN","IBOUNP6",93,0)
 .; F  Q:$Y>(IOSL-1)  W !     ; Eliminate scrolling problem - CJS, IB*2.0*528
"RTN","IBOUNP6",94,0)
 .D PAUSE
"RTN","IBOUNP6",95,0)
 I 'FIRST W @IOF
"RTN","IBOUNP6",96,0)
 I FIRST S FIRST=0
"RTN","IBOUNP6",97,0)
 W ?104,NOW,"  PAGE ",PAGE,!?1,HDR1,HDR2,!!
"RTN","IBOUNP6",98,0)
 W ?3,"PATIENT/WARD",?32,"PT ID",?51,"ADMISSION DATE",?74,"AGE",?81,"%SC",?87,"MARITAL STATUS",?104,"EMPLOYMENT STATUS",!
"RTN","IBOUNP6",99,0)
 W LINE1
"RTN","IBOUNP6",100,0)
 S PAGE=PAGE+1
"RTN","IBOUNP6",101,0)
 Q
"RTN","IBOUNP6",102,0)
PAUSE ;
"RTN","IBOUNP6",103,0)
 N T W:($Y<IOSL) ! R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S QUIT=1 Q
"RTN","IBOUNP6",104,0)
 Q
"RTN","IBOUNP6",105,0)
 ;
"RTN","IBOUNP6",106,0)
PHDL ; Print header for Excel format
"RTN","IBOUNP6",107,0)
 W "PATIENT/WARD^PT ID^ADMISSION DATE^AGE^%SC^MARITAL STATUS^EMPLOYMENT STATUS"
"RTN","IBOUNP6",108,0)
 Q
"RTN","IBY528PA")
0^134^B92379813
"RTN","IBY528PA",1,0)
IBY528PA ;ALB/SS - Pre and post install routine for patch 528 ;12-OCT-15
"RTN","IBY528PA",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBY528PA",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY528PA",4,0)
 ;
"RTN","IBY528PA",5,0)
 Q
"RTN","IBY528PA",6,0)
 ;====== preinstall code
"RTN","IBY528PA",7,0)
PREINST ; 
"RTN","IBY528PA",8,0)
 N IBLSTIEN,IBRET,IBASK
"RTN","IBY528PA",9,0)
 ;
"RTN","IBY528PA",10,0)
 S IBASK=0
"RTN","IBY528PA",11,0)
 ;Check the file #355.1 --------
"RTN","IBY528PA",12,0)
 D BMES^XPDUTL("** Checking entries in the file #355.1 **")
"RTN","IBY528PA",13,0)
 S IBLSTIEN=$O(^IBE(355.1,99999999),-1)
"RTN","IBY528PA",14,0)
 ; if file contains unauthorized changes  ( the last IEN is not equal to 77 )
"RTN","IBY528PA",15,0)
 ; AND this patch was NOT installed previously
"RTN","IBY528PA",16,0)
 ; then warn the user and give the options to abort installation and fix the issue
"RTN","IBY528PA",17,0)
 I IBLSTIEN'=77,$$PATCH^XPDUTL("IB*2.0*528")=0 D MESS1 S IBASK=1
"RTN","IBY528PA",18,0)
 ; if entries are introduced by this patch were added manually previously in wrong IEN number range 
"RTN","IBY528PA",19,0)
 S IBRET=$$CHCKEXWR() I +IBRET=1 D MESS2($P(IBRET,U,2)) S IBASK=1
"RTN","IBY528PA",20,0)
 I IBASK=0 D MES^XPDUTL("..OK")
"RTN","IBY528PA",21,0)
 ;
"RTN","IBY528PA",22,0)
 ;Check the file #355.12 --------
"RTN","IBY528PA",23,0)
 D BMES^XPDUTL("** Checking entries in the file #355.12 **")
"RTN","IBY528PA",24,0)
 S IBLSTIEN=$O(^IBE(355.12,99999999),-1)
"RTN","IBY528PA",25,0)
 ; if file contains unauthorized changes  ( the last IEN is not equal to 11 )
"RTN","IBY528PA",26,0)
 ; AND this patch was NOT installed previously
"RTN","IBY528PA",27,0)
 ; then warn the user and give the options to abort installation and fix the issue
"RTN","IBY528PA",28,0)
 I IBLSTIEN'=11,$$PATCH^XPDUTL("IB*2.0*528")=0 D:IBLSTIEN>11 MESS4 D:IBLSTIEN<11 MESS5 S IBASK=1
"RTN","IBY528PA",29,0)
 I IBASK=0 D MES^XPDUTL("..OK")
"RTN","IBY528PA",30,0)
 ;
"RTN","IBY528PA",31,0)
 ; if any issues were detected the ask the user 
"RTN","IBY528PA",32,0)
 I IBASK=1 D MESS3 I $$YESNO("Do you want to abort installation now","YES")'=0 W !,"Aborting installation!" S XPDABORT=1 Q
"RTN","IBY528PA",33,0)
 Q
"RTN","IBY528PA",34,0)
 ;
"RTN","IBY528PA",35,0)
 ;====== post-install code 
"RTN","IBY528PA",36,0)
ADSRCINF ; to add new source of information to to #355.12
"RTN","IBY528PA",37,0)
 D BMES^XPDUTL("** Adding a new entry to the file #355.12 **")
"RTN","IBY528PA",38,0)
 ; if the patch was installed previously - skip adding new entries
"RTN","IBY528PA",39,0)
 I $$PATCH^XPDUTL("IB*2.0*528") D MES^XPDUTL("Skipping adding new entries to the file #355.12 since the patch was installed previously.") Q
"RTN","IBY528PA",40,0)
 ; get the last IEN in the file
"RTN","IBY528PA",41,0)
 S IBNEWIEN=$O(^IBE(355.12,99999999),-1)
"RTN","IBY528PA",42,0)
 ; if less than 11 (Baltimore) then set the last IEN to what majority of sites have (11)
"RTN","IBY528PA",43,0)
 I IBNEWIEN<11 S IBNEWIEN=11
"RTN","IBY528PA",44,0)
 ; if 11 or greater than 11 (Hines) then add new entries after the last entry
"RTN","IBY528PA",45,0)
 S IBNEWIEN=IBNEWIEN+1
"RTN","IBY528PA",46,0)
 ;
"RTN","IBY528PA",47,0)
 D ADD35512(IBNEWIEN)
"RTN","IBY528PA",48,0)
 Q
"RTN","IBY528PA",49,0)
 ;
"RTN","IBY528PA",50,0)
ADTYPPLN ; to add type of plans to #355.1
"RTN","IBY528PA",51,0)
 D BMES^XPDUTL("** Adding new entries to the file #355.1 **")
"RTN","IBY528PA",52,0)
 ; if the patch was installed previously - skip adding new entries
"RTN","IBY528PA",53,0)
 I $$PATCH^XPDUTL("IB*2.0*528") D MES^XPDUTL("Skipping adding new entries to the file #355.1 since the patch was installed previously.") Q
"RTN","IBY528PA",54,0)
 ; get the last IEN in the file
"RTN","IBY528PA",55,0)
 S IBNEWIEN=$O(^IBE(355.1,99999999),-1)
"RTN","IBY528PA",56,0)
 ; if less than 77 (Durham ) then set the last IEN to what majority of sites have (77)
"RTN","IBY528PA",57,0)
 I IBNEWIEN<77 S IBNEWIEN=77
"RTN","IBY528PA",58,0)
 ; if 77 or greater than 77 (Hines) then add new entries after the last entry
"RTN","IBY528PA",59,0)
 S IBNEWIEN=IBNEWIEN+1
"RTN","IBY528PA",60,0)
 ;
"RTN","IBY528PA",61,0)
 ; add top level entries
"RTN","IBY528PA",62,0)
 D ADD3551(IBNEWIEN)
"RTN","IBY528PA",63,0)
 ; add descriptions to new entries
"RTN","IBY528PA",64,0)
 D MES^XPDUTL("** Adding descriptions to the file #355.1 **")
"RTN","IBY528PA",65,0)
 D ADD35511()
"RTN","IBY528PA",66,0)
 Q
"RTN","IBY528PA",67,0)
 ;
"RTN","IBY528PA",68,0)
 ;check if new entries are alraedy in #355.1 and they are below IEN=77
"RTN","IBY528PA",69,0)
CHCKEXWR() ;
"RTN","IBY528PA",70,0)
 N IBZ,IBSTR,IBRET,IBFLD,IBWRNG,IBIEN,IBRET
"RTN","IBY528PA",71,0)
 S IBWRNG=0
"RTN","IBY528PA",72,0)
 S IBRET="IEN="
"RTN","IBY528PA",73,0)
 F IBZ=1:1 S IBSTR=$P($T(DAT3551+IBZ),";;",2,10) Q:IBSTR=""  D
"RTN","IBY528PA",74,0)
 . S IBFLD(.01)=$P(IBSTR,U,1)
"RTN","IBY528PA",75,0)
 . S IBIEN=$O(^IBE(355.1,"B",IBFLD(.01),"")) I IBIEN>0,IBIEN<78 S IBWRNG=1,IBRET=IBRET_IBIEN_","
"RTN","IBY528PA",76,0)
 Q IBWRNG_U_IBRET
"RTN","IBY528PA",77,0)
 ;
"RTN","IBY528PA",78,0)
 ;Add new types of plan to #355.1
"RTN","IBY528PA",79,0)
 ;IBSTRIEN to use for the first new entry
"RTN","IBY528PA",80,0)
ADD3551(IBSTRIEN) ;
"RTN","IBY528PA",81,0)
 N IBZ,IBSTR,IBRET,IBFLD,IBNEWIEN
"RTN","IBY528PA",82,0)
 N IB1STDON S IB1STDON=0
"RTN","IBY528PA",83,0)
 ;
"RTN","IBY528PA",84,0)
 ; -- get the set of codes for the type of plans
"RTN","IBY528PA",85,0)
 ; -- put the plan types into array, set it to it's code value
"RTN","IBY528PA",86,0)
 ; -- example:  IBC("DENTAL")=2
"RTN","IBY528PA",87,0)
 N I,IBA,IBB,IBC
"RTN","IBY528PA",88,0)
 S IBA=$P(^DD(355.1,.03,0),U,3),IBB=$L(IBA,";")
"RTN","IBY528PA",89,0)
 F I=1:1:IBB-1 S IBC($P($P(IBA,";",I),":",2))=$P($P(IBA,";",I),":")
"RTN","IBY528PA",90,0)
 ;
"RTN","IBY528PA",91,0)
 ;
"RTN","IBY528PA",92,0)
 F IBZ=1:1 S IBSTR=$P($T(DAT3551+IBZ),";;",2,10) Q:IBSTR=""  D
"RTN","IBY528PA",93,0)
 . S IBFLD(.01)=$P(IBSTR,U,1)
"RTN","IBY528PA",94,0)
 . I $O(^IBE(355.1,"B",IBFLD(.01),"")) D MES^XPDUTL(" Entry "_IBFLD(.01)_" already exists - skipping.") Q
"RTN","IBY528PA",95,0)
 . S IBNEWIEN=$S(IB1STDON=0:IBSTRIEN,1:"") ;for the first new entry use IBSTRIEN, for others - let the system decide
"RTN","IBY528PA",96,0)
 . S IBFLD(.02)=$P(IBSTR,U,2)
"RTN","IBY528PA",97,0)
 . S IBFLD(.03)=IBC($P(IBSTR,U,3)) ; set of codes for plan type
"RTN","IBY528PA",98,0)
 . S IBRET=$$INSREC(355.1,"",.IBFLD,IBNEWIEN,,,,1)
"RTN","IBY528PA",99,0)
 . I IBRET<0 D MES^XPDUTL(" Error: the entry "_IBFLD(.01)_" hasn't been added.") Q
"RTN","IBY528PA",100,0)
 . D MES^XPDUTL(" "_IBFLD(.01)_" added.")
"RTN","IBY528PA",101,0)
 . S IB1STDON=1
"RTN","IBY528PA",102,0)
 Q
"RTN","IBY528PA",103,0)
 ;
"RTN","IBY528PA",104,0)
 ;Add descriptions
"RTN","IBY528PA",105,0)
ADD35511() ;
"RTN","IBY528PA",106,0)
 N IBZ,IBSTR,IB01,IB10IEN,IBARR,IBTOPIEN,IBFLD,IBSKIPST
"RTN","IBY528PA",107,0)
 S IBSKIPST=0
"RTN","IBY528PA",108,0)
 F IBZ=1:1 S IBSTR=$P($T(DAT35511+IBZ),";;",2,10) Q:IBSTR=""  D
"RTN","IBY528PA",109,0)
 . I $P(IBSTR,U,1)="START" D  Q
"RTN","IBY528PA",110,0)
 . . S IBSKIPST=0
"RTN","IBY528PA",111,0)
 . . K IBARR
"RTN","IBY528PA",112,0)
 . . S IB01=$P(IBSTR,U,2)
"RTN","IBY528PA",113,0)
 . . S IBTOPIEN=$O(^IBE(355.1,"B",IB01,"")) I +IBTOPIEN=0 S IBSKIPST=1 D MES^XPDUTL("Entry "_IB01_" doesn't exist - skipping adding description.") Q
"RTN","IBY528PA",114,0)
 . . I $O(^IBE(355.1,IBTOPIEN,10,0)) S IBSKIPST=1 D MES^XPDUTL("Description for "_IB01_" already exists - skipping.")
"RTN","IBY528PA",115,0)
 . I IBSKIPST=1 Q  ;skip the whole section if the top level entry doesn't exist or description is already there
"RTN","IBY528PA",116,0)
 . I $P(IBSTR,U,1)="END" D  Q
"RTN","IBY528PA",117,0)
 . . K IBERR
"RTN","IBY528PA",118,0)
 . . D WP^DIE(355.1,IBTOPIEN_",",10,"KA","IBARR","IBERR")
"RTN","IBY528PA",119,0)
 . . I $D(IBERR("DIERR")) D MES^XPDUTL("Error: the description for "_IB01_" hasn't been created.")
"RTN","IBY528PA",120,0)
 . . D MES^XPDUTL(" Description for "_IB01_" added.")
"RTN","IBY528PA",121,0)
 . S IBARR(+$P(IBSTR,U,1),0)=$P(IBSTR,U,2)
"RTN","IBY528PA",122,0)
 ;
"RTN","IBY528PA",123,0)
 Q
"RTN","IBY528PA",124,0)
 ;
"RTN","IBY528PA",125,0)
 ;Add new entires to #355.12
"RTN","IBY528PA",126,0)
 ;IBSTRIEN to use for the first new entry
"RTN","IBY528PA",127,0)
ADD35512(IBSTRIEN) ;
"RTN","IBY528PA",128,0)
 N IBZ,IBSTR,IBRET,IBFLD,IBNEWIEN
"RTN","IBY528PA",129,0)
 N IB1STDON S IB1STDON=0
"RTN","IBY528PA",130,0)
 F IBZ=1:1 S IBSTR=$P($T(DAT35512+IBZ),";;",2,10) Q:IBSTR=""  D
"RTN","IBY528PA",131,0)
 . S IBFLD(.01)=$P(IBSTR,U,1)
"RTN","IBY528PA",132,0)
 . S IBFLD(.02)=$P(IBSTR,U,2)
"RTN","IBY528PA",133,0)
 . I $O(^IBE(355.12,"C",IBFLD(.02),"")) D MES^XPDUTL(" Entry "_IBFLD(.02)_" already exists - skipping.") Q
"RTN","IBY528PA",134,0)
 . S IBNEWIEN=$S(IB1STDON=0:IBSTRIEN,1:"") ;for the first new entry use IBSTRIEN, for others - let the system decide
"RTN","IBY528PA",135,0)
 . S IBFLD(.03)=$P(IBSTR,U,3)
"RTN","IBY528PA",136,0)
 . S IBRET=$$INSREC(355.12,"",.IBFLD,IBNEWIEN,,,,1)
"RTN","IBY528PA",137,0)
 . I IBRET<0 D MES^XPDUTL(" Error: the entry "_IBFLD(.01)_" hasn't been added.") Q
"RTN","IBY528PA",138,0)
 . D MES^XPDUTL(" "_IBFLD(.01)_" "_IBFLD(.02)_" added.")
"RTN","IBY528PA",139,0)
 . S IB1STDON=1
"RTN","IBY528PA",140,0)
 Q
"RTN","IBY528PA",141,0)
 ;
"RTN","IBY528PA",142,0)
 ;
"RTN","IBY528PA",143,0)
MESS1 ;
"RTN","IBY528PA",144,0)
 D BMES^XPDUTL("Local entries and/or missing standard entries were detected in the file #355.1")
"RTN","IBY528PA",145,0)
 D MES^XPDUTL("Local modifications are not allowed for this file. If you continue installation")
"RTN","IBY528PA",146,0)
 D MES^XPDUTL("then new entries that this patch is introducing will be added after the last")
"RTN","IBY528PA",147,0)
 D MES^XPDUTL("existing entry in the file #355.1 but not lower that IEN=78.")
"RTN","IBY528PA",148,0)
 Q
"RTN","IBY528PA",149,0)
 ;
"RTN","IBY528PA",150,0)
MESS2(IBIENLST) ;
"RTN","IBY528PA",151,0)
 D BMES^XPDUTL("At least one of new entries that this patch is introducing was detected within")
"RTN","IBY528PA",152,0)
 D MES^XPDUTL("the incorrect internal entry numbers range in the file #355.1. (below IEN=78):")
"RTN","IBY528PA",153,0)
 D MES^XPDUTL(" "_IBIENLST)
"RTN","IBY528PA",154,0)
 Q
"RTN","IBY528PA",155,0)
 ;
"RTN","IBY528PA",156,0)
MESS3 ;
"RTN","IBY528PA",157,0)
 D BMES^XPDUTL("You might want to consider to resolve the issue first and install this patch")
"RTN","IBY528PA",158,0)
 D MES^XPDUTL("after that.")
"RTN","IBY528PA",159,0)
 Q
"RTN","IBY528PA",160,0)
 ;
"RTN","IBY528PA",161,0)
MESS4 ;
"RTN","IBY528PA",162,0)
 D BMES^XPDUTL("Local entries were detected in the file #355.12")
"RTN","IBY528PA",163,0)
 D MES^XPDUTL("Local modifications are not allowed for this file. If you continue installation")
"RTN","IBY528PA",164,0)
 D MES^XPDUTL("then new entry that this patch is introducing will be added after the last")
"RTN","IBY528PA",165,0)
 D MES^XPDUTL("existing entry in the file #355.12 and IEN for the new source of information")
"RTN","IBY528PA",166,0)
 D MES^XPDUTL("will be different than the standard IEN=12 that will be used by all VA sites.")
"RTN","IBY528PA",167,0)
 Q
"RTN","IBY528PA",168,0)
MESS5 ;
"RTN","IBY528PA",169,0)
 D BMES^XPDUTL("One or more standard entries are missing in the file #355.12 .")
"RTN","IBY528PA",170,0)
 D MES^XPDUTL("Local modifications are not allowed for this file. If you continue installation")
"RTN","IBY528PA",171,0)
 D MES^XPDUTL("then new entries that this patch is introducing will be added at the posistion")
"RTN","IBY528PA",172,0)
 D MES^XPDUTL("IEN=12, which will be used by all VA sites.")
"RTN","IBY528PA",173,0)
 Q
"RTN","IBY528PA",174,0)
 ; Ask
"RTN","IBY528PA",175,0)
 ; Input:  ;  IBQSTR - question  ;  IBDFL - default answer
"RTN","IBY528PA",176,0)
 ; Output:  ; 1 YES ; 0 NO ; -1 if cancelled
"RTN","IBY528PA",177,0)
YESNO(IBQSTR,IBDFL) ; Default - YES
"RTN","IBY528PA",178,0)
 N DIR,Y,DUOUT
"RTN","IBY528PA",179,0)
 S DIR(0)="Y"
"RTN","IBY528PA",180,0)
 S DIR("A")=IBQSTR
"RTN","IBY528PA",181,0)
 S:$L($G(IBDFL)) DIR("B")=IBDFL
"RTN","IBY528PA",182,0)
 D ^DIR
"RTN","IBY528PA",183,0)
 Q $S($G(DUOUT)!$G(DUOUT)!(Y="^"):-1,1:Y)
"RTN","IBY528PA",184,0)
 ;
"RTN","IBY528PA",185,0)
 ;/**
"RTN","IBY528PA",186,0)
 ;Creates a new entry (or node for multiple with .01 field)
"RTN","IBY528PA",187,0)
 ;IBFILE - file/subfile number
"RTN","IBY528PA",188,0)
 ;IBEIEN - ien of the parent file entry in which the new subfile entry will be inserted
"RTN","IBY528PA",189,0)
 ;IBZFDA - array with values for the fields
"RTN","IBY528PA",190,0)
 ; format for IBZFDA:
"RTN","IBY528PA",191,0)
 ; IBZFDA(.01)=value for #.01 field
"RTN","IBY528PA",192,0)
 ; IBZFDA(3)=value for #3 field
"RTN","IBY528PA",193,0)
 ;IBRECNO -(optional) specify IEN if you want specific value
"RTN","IBY528PA",194,0)
 ; Note: "" then the system will assign the entry number itself.
"RTN","IBY528PA",195,0)
 ;IBFLGS - FLAGS parameter for UPDATE^DIE
"RTN","IBY528PA",196,0)
 ;IBLCKGL - fully specified global reference to lock
"RTN","IBY528PA",197,0)
 ;IBLCKTM - time out for LOCK, if LOCKTIME=0 then the function will not lock the file 
"RTN","IBY528PA",198,0)
 ;IBNEWRE - optional, flag = if 1 then allow to create a new top level record 
"RTN","IBY528PA",199,0)
 ;  
"RTN","IBY528PA",200,0)
 ;output :
"RTN","IBY528PA",201,0)
 ; positive number - record # created
"RTN","IBY528PA",202,0)
 ; <=0 - failure
"RTN","IBY528PA",203,0)
 ;
"RTN","IBY528PA",204,0)
 ;example:
"RTN","IBY528PA",205,0)
 ; S ZZ(.01)="ZZSS TEST",ZZ(.06)=1,ZZ(.09)=0 W $$INSREC^IBDUTIL1(357.6,"",.ZZ,"")
"RTN","IBY528PA",206,0)
INSREC(IBFILE,IBEIEN,IBZFDA,IBRECNO,IBFLGS,IBLCKGL,IBLCKTM,IBNEWRE) ;*/
"RTN","IBY528PA",207,0)
 I ('$G(IBFILE)) Q "0^Invalid parameter"
"RTN","IBY528PA",208,0)
 I +$G(IBNEWRE)=0 I $G(IBRECNO)>0,'$G(IBEIEN) Q "0^Invalid parameter"
"RTN","IBY528PA",209,0)
 N IBDSSI,IBIENS,IBDERR,IBDFDA
"RTN","IBY528PA",210,0)
 N IBDLOCK S IBDLOCK=0
"RTN","IBY528PA",211,0)
 I '$G(IBRECNO) N IBRECNO S IBRECNO=$G(IBRECNO)
"RTN","IBY528PA",212,0)
 I IBEIEN'="" S IBIENS="+1,"_IBEIEN_"," I $L(IBRECNO)>0 S IBDSSI(1)=+IBRECNO
"RTN","IBY528PA",213,0)
 I IBEIEN="" S IBIENS="+1," I $L(IBRECNO)>0 S IBDSSI(1)=+IBRECNO
"RTN","IBY528PA",214,0)
 M IBDFDA(IBFILE,IBIENS)=IBZFDA
"RTN","IBY528PA",215,0)
 I $L($G(IBLCKGL)) L +@IBLCKGL:(+$G(IBLCKTM)) S IBDLOCK=$T I 'IBDLOCK Q -2  ;lock failure
"RTN","IBY528PA",216,0)
 D UPDATE^DIE($G(IBFLGS),"IBDFDA","IBDSSI","IBDERR")
"RTN","IBY528PA",217,0)
 I IBDLOCK L -@IBLCKGL
"RTN","IBY528PA",218,0)
 I $D(IBDERR) Q -1
"RTN","IBY528PA",219,0)
 Q +$G(IBDSSI(1))
"RTN","IBY528PA",220,0)
 ;
"RTN","IBY528PA",221,0)
 ;
"RTN","IBY528PA",222,0)
 ; (#.01) NAME^,(#.02) ABBREVIATION^ (#.03) MAJOR CATEGORY
"RTN","IBY528PA",223,0)
DAT3551 ;entries to add to #355.1 (top level)
"RTN","IBY528PA",224,0)
 ;;HIGH DEDUCTIBLE HEALTH PLAN^HDHP^MAJOR MEDICAL
"RTN","IBY528PA",225,0)
 ;;HIGH DEDUCTIBLE HEALTH PLAN W/HEALTH SAVINGS ACCOUNT^HDHP w/HSA^MAJOR MEDICAL
"RTN","IBY528PA",226,0)
 ;;HIGH DEDUCTIBLE HEALTH PLAN W/HEALTH REIMBURSEMENT ARRANGEMENT^HDHP w/HRA^MAJOR MEDICAL
"RTN","IBY528PA",227,0)
 ;;HEALTH MAINTENANCE ORGANIZATION W/OUT OF NETWORK BENEFITS^HMO w/OON^MAJOR MEDICAL
"RTN","IBY528PA",228,0)
 ;;EXCLUSIVE PROVIDER ORGANIZATION^EPO^MAJOR MEDICAL
"RTN","IBY528PA",229,0)
 ;;MEDICARE ADVANTAGE^MR ADV^MEDICARE
"RTN","IBY528PA",230,0)
 ;;VISION^VIS^ALL OTHER
"RTN","IBY528PA",231,0)
 ;;
"RTN","IBY528PA",232,0)
 ;
"RTN","IBY528PA",233,0)
 ;(#10) DESCRIPTION to add to #355.1
"RTN","IBY528PA",234,0)
DAT35511 ;
"RTN","IBY528PA",235,0)
 ;;START^HIGH DEDUCTIBLE HEALTH PLAN
"RTN","IBY528PA",236,0)
 ;;1^HIGH DEDUCTIBLE HEALTH PLAN
"RTN","IBY528PA",237,0)
 ;;END
"RTN","IBY528PA",238,0)
 ;;START^HIGH DEDUCTIBLE HEALTH PLAN W/HEALTH SAVINGS ACCOUNT
"RTN","IBY528PA",239,0)
 ;;1^HIGH DEDUCTIBLE HEALTH PLAN W/HEALTH SAVINGS ACCOUNT
"RTN","IBY528PA",240,0)
 ;;END
"RTN","IBY528PA",241,0)
 ;;START^HIGH DEDUCTIBLE HEALTH PLAN W/HEALTH REIMBURSEMENT ARRANGEMENT
"RTN","IBY528PA",242,0)
 ;;1^HIGH DEDUCTIBLE HEALTH PLAN W/HEALTH REIMBURSEMENT ARRANGEMENT
"RTN","IBY528PA",243,0)
 ;;END
"RTN","IBY528PA",244,0)
 ;;START^HEALTH MAINTENANCE ORGANIZATION W/OUT OF NETWORK BENEFITS
"RTN","IBY528PA",245,0)
 ;;1^HEALTH MAINTENANCE ORGANIZATION W/OUT OF NETWORK BENEFITS
"RTN","IBY528PA",246,0)
 ;;END
"RTN","IBY528PA",247,0)
 ;;START^EXCLUSIVE PROVIDER ORGANIZATION
"RTN","IBY528PA",248,0)
 ;;1^EXCLUSIVE PROVIDER ORGANIZATION
"RTN","IBY528PA",249,0)
 ;;END
"RTN","IBY528PA",250,0)
 ;;START^MEDICARE ADVANTAGE
"RTN","IBY528PA",251,0)
 ;;1^MEDICARE ADVANTAGE
"RTN","IBY528PA",252,0)
 ;;END
"RTN","IBY528PA",253,0)
 ;;START^VISION
"RTN","IBY528PA",254,0)
 ;;1^VISION
"RTN","IBY528PA",255,0)
 ;;END
"RTN","IBY528PA",256,0)
 ;;
"RTN","IBY528PA",257,0)
 ;
"RTN","IBY528PA",258,0)
 ; (#.01) CODE^(#.02) DESCRIPTION ^(#.03) IB BUFFER ACRONYM
"RTN","IBY528PA",259,0)
DAT35512 ;entries to add to #355.12 (top level)
"RTN","IBY528PA",260,0)
 ;;12^INTERFACILITY INS UPDATE^IIU
"RTN","IBY528PA",261,0)
 ;;
"RTN","IBY528PA",262,0)
 ;
"RTN","IBY528PA",263,0)
 ;
"RTN","IBY528PA",264,0)
 ;IBY528PA
"RTN","IBY528PO")
0^135^B26150711
"RTN","IBY528PO",1,0)
IBY528PO ;ALB/CJS - Post install routine for patch 528 ;5-APR-15
"RTN","IBY528PO",2,0)
 ;;2.0;INTEGRATED BILLING;**528**;21-MAR-94;Build 163
"RTN","IBY528PO",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBY528PO",4,0)
 ;
"RTN","IBY528PO",5,0)
 Q
"RTN","IBY528PO",6,0)
 ; This post-install routine will rename a security key; assign
"RTN","IBY528PO",7,0)
 ; it to three additional menu options and an action protocol;
"RTN","IBY528PO",8,0)
 ; and remove another security key from the three menu options.
"RTN","IBY528PO",9,0)
 ; 
"RTN","IBY528PO",10,0)
 ; The name of the IBCNE IIV AUTO MATCH key will be changed to
"RTN","IBY528PO",11,0)
 ; IBCNE EIV MAINTENANCE.
"RTN","IBY528PO",12,0)
 ; 
"RTN","IBY528PO",13,0)
 ; The newly named IBCNE EIV MAINTENANCE key will be used to lock
"RTN","IBY528PO",14,0)
 ; the following menu options in place of the current IB INSURANCE
"RTN","IBY528PO",15,0)
 ; SUPERVISOR lock:
"RTN","IBY528PO",16,0)
 ;      IBCNE PAYER MAINTENANCE MENU
"RTN","IBY528PO",17,0)
 ;      IBCNE PAYER EDIT
"RTN","IBY528PO",18,0)
 ;      IBCNE PAYER LINK
"RTN","IBY528PO",19,0)
 ; 
"RTN","IBY528PO",20,0)
 ; It will also be used to lock the Payer action (PA) action on
"RTN","IBY528PO",21,0)
 ; the IBCN INSURANCE CO EDIT screen.
"RTN","IBY528PO",22,0)
 ;
"RTN","IBY528PO",23,0)
 ; Then this routine will also add a new user.
"RTN","IBY528PO",24,0)
 ; 
"RTN","IBY528PO",25,0)
START ; CALL SECTIONS
"RTN","IBY528PO",26,0)
 D MES^XPDUTL("  Starting post-install for IB*2.0*528")
"RTN","IBY528PO",27,0)
 N IBY,Y
"RTN","IBY528PO",28,0)
 F IBY="KEYS","ADDUSR","COMMENTS","TYPE","SRCINF" D
"RTN","IBY528PO",29,0)
 . S Y=$$NEWCP^XPDUTL(IBY,IBY_"^IBY528PO")
"RTN","IBY528PO",30,0)
 . D:'Y BMES^XPDUTL("ERROR Creating "_IBY_" Checkpoint.")
"RTN","IBY528PO",31,0)
 ; Completion message
"RTN","IBY528PO",32,0)
 D MES^XPDUTL("  Finished post-install for IB*2.0*528")
"RTN","IBY528PO",33,0)
 Q
"RTN","IBY528PO",34,0)
 ;
"RTN","IBY528PO",35,0)
KEYS ; Rename IBCNE IIV AUTO MATCH security key to IBCNE EIV MAINTENANCE
"RTN","IBY528PO",36,0)
 N IBFLAG,IBOPT,DA,DIC,DIE,DR,X
"RTN","IBY528PO",37,0)
 D MES^XPDUTL("Renaming and re-indexing security key...")
"RTN","IBY528PO",38,0)
 ; Check whether the key has already been renamed
"RTN","IBY528PO",39,0)
 I $O(^DIC(19.1,"B","IBCNE IIV AUTO MATCH",0))'>0,+$O(^DIC(19.1,"B","IBCNE EIV MAINTENANCE",0)) D MES^XPDUTL("Key IBCNE IIV AUTO MATCH already renamed.") Q
"RTN","IBY528PO",40,0)
 ;
"RTN","IBY528PO",41,0)
 S IBFLAG=$$RENAME^XPDKEY("IBCNE IIV AUTO MATCH","IBCNE EIV MAINTENANCE")
"RTN","IBY528PO",42,0)
 I 'IBFLAG D MES^XPDUTL("Key IBCNE IIV AUTO MATCH not renamed!"),MES^XPDUTL("Aborting security key updates.") Q
"RTN","IBY528PO",43,0)
 ;
"RTN","IBY528PO",44,0)
 ; Lock options IBCNE PAYER MAINTENANCE MENU, IBCNE PAYER EDIT, and IBCNE PAYER LINK with newly named key
"RTN","IBY528PO",45,0)
 D MES^XPDUTL("Assigning key to options...")
"RTN","IBY528PO",46,0)
 F IBOPT="MAINTENANCE MENU","EDIT","LINK" D
"RTN","IBY528PO",47,0)
 .S DA=$$FIND1^DIC(19,"","X","IBCNE PAYER "_IBOPT,"B")
"RTN","IBY528PO",48,0)
 .I 'DA D MES^XPDUTL("Option IBCNE PAYER "_IBOPT_" not found in system.") Q
"RTN","IBY528PO",49,0)
 .S DIE=19,DR="3///IBCNE EIV MAINTENANCE"
"RTN","IBY528PO",50,0)
 .L +^DIC(19,DA):0 I $T D ^DIE L -^DIC(19,DA) Q
"RTN","IBY528PO",51,0)
 .D MES^XPDUTL("Option IBCNE PAYER "_IBOPT_" is locked by another user.")
"RTN","IBY528PO",52,0)
 ;
"RTN","IBY528PO",53,0)
 ; Lock protocol IBCNSC INS CO PAYER with newly named key
"RTN","IBY528PO",54,0)
 D MES^XPDUTL("Assigning key to protocol...")
"RTN","IBY528PO",55,0)
 S DA=$$FIND1^DIC(101,"","X","IBCNSC INS CO PAYER","B") D
"RTN","IBY528PO",56,0)
 .I 'DA D MES^XPDUTL("Protocol IBCNSC INS CO PAYER not found in system.") Q
"RTN","IBY528PO",57,0)
 .S DIE=101,DR="3///IBCNE EIV MAINTENANCE"
"RTN","IBY528PO",58,0)
 .L +^ORD(101,DA):0 I $T D ^DIE L -^ORD(101,DA) Q
"RTN","IBY528PO",59,0)
 .D MES^XPDUTL("Protocol IBCNSC INS CO PAYER is locked by another user.")
"RTN","IBY528PO",60,0)
 ;
"RTN","IBY528PO",61,0)
 Q
"RTN","IBY528PO",62,0)
 ;
"RTN","IBY528PO",63,0)
ADDUSR ; Add the user to the New Person file (#200)
"RTN","IBY528PO",64,0)
 N DIC,X,Y,DO,DD,DLAYGO,IBNAME,IBIEN,IBERR,IBARR
"RTN","IBY528PO",65,0)
 ;
"RTN","IBY528PO",66,0)
 S IBNAME="AUTOUPDATE,IBEIV"
"RTN","IBY528PO",67,0)
 S IBIEN=$$FIND1^DIC(200,"","MX",IBNAME,"","","IBERR") I $D(IBERR) D BMES^XPDUTL("Error in ADDUSR-IBY528PO - Cannot add "_IBNAME_" to New Person file #200") Q
"RTN","IBY528PO",68,0)
 I +IBIEN D BMES^XPDUTL("User "_IBNAME_" already exists in the NEW PERSON file - not added") Q
"RTN","IBY528PO",69,0)
 ;
"RTN","IBY528PO",70,0)
 D BMES^XPDUTL("Adding new user, "_IBNAME_", to the NEW PERSON file")
"RTN","IBY528PO",71,0)
 S DIC(0)="LMX"
"RTN","IBY528PO",72,0)
 S IBARR(200,"+1,",.01)=IBNAME,IBARR(200,"+1,",1)="MRA"
"RTN","IBY528PO",73,0)
 D UPDATE^DIE("E","IBARR","IBIEN","IBERR")
"RTN","IBY528PO",74,0)
 ;
"RTN","IBY528PO",75,0)
 I '+$G(IBIEN(1))!($D(IBERR)) D  Q
"RTN","IBY528PO",76,0)
 . D BMES^XPDUTL("A problem was encountered trying to add user, "_IBNAME)
"RTN","IBY528PO",77,0)
 . D BMES^XPDUTL("The entry must be added manually to the NEW PERSON file")
"RTN","IBY528PO",78,0)
 ;
"RTN","IBY528PO",79,0)
 D BMES^XPDUTL("User, "_IBNAME_", was successfully added to the NEW PERSON file")
"RTN","IBY528PO",80,0)
 Q
"RTN","IBY528PO",81,0)
 ;
"RTN","IBY528PO",82,0)
COMMENTS ; copy historical comments (2.312, 1.08) into new field 2.312, 1.18 (COMMENT - SUBSCRIBER POLICY multiple)
"RTN","IBY528PO",83,0)
 ;  and then update historical comment record with "postmaster" (2.312, 1.18, .02) and 
"RTN","IBY528PO",84,0)
 ; date/time that historical comment copied into 2.312, 1.18 multiple
"RTN","IBY528PO",85,0)
 D BMES^XPDUTL("Copy of data existing at COMMENT - PATIENT POLICY field 2.312, 1.08 field  "),BMES^XPDUTL("to new COMMENT - SUBSCRIBER POLICY multiple (2.312, 1.18)")
"RTN","IBY528PO",86,0)
 N PTIEN,IPIEN,IENS,DATETIME,IBNUM,IBO,IBCOM,IBXCOM,I
"RTN","IBY528PO",87,0)
 K ERROR,FDA
"RTN","IBY528PO",88,0)
 S (PTIEN,IPIEN)=0
"RTN","IBY528PO",89,0)
 S DATETIME=$$NOW^XLFDT()
"RTN","IBY528PO",90,0)
 ; patient record can have 1 to many insurance policy records
"RTN","IBY528PO",91,0)
 ; comments associated with the patient's specific insurance policy are at 2.312, 1.18 multiple
"RTN","IBY528PO",92,0)
 S PTIEN=0 F  S PTIEN=$O(^DPT(PTIEN)) Q:'PTIEN  S IPIEN=0 F  S IPIEN=$O(^DPT(PTIEN,.312,IPIEN)) Q:'IPIEN  D
"RTN","IBY528PO",93,0)
 . Q:$P($G(^DPT(PTIEN,.312,IPIEN,1)),U,8)']""  ; don't bother calling the FILER if there's nothing to populate from the old field
"RTN","IBY528PO",94,0)
 . ;
"RTN","IBY528PO",95,0)
 . ; -- quit if comment archived already
"RTN","IBY528PO",96,0)
 . S IBCOM=$P(^DPT(PTIEN,.312,IPIEN,1),U,8),IBO=0
"RTN","IBY528PO",97,0)
 . F I=0:0 S I=$O(^DPT(PTIEN,.312,IPIEN,13,I)) Q:I'>0!(IBO)  D
"RTN","IBY528PO",98,0)
 . . S IBXCOM=$G(^DPT(PTIEN,.312,IPIEN,13,I,1))
"RTN","IBY528PO",99,0)
 . . I IBCOM=IBXCOM S IBO=1
"RTN","IBY528PO",100,0)
 . Q:IBO
"RTN","IBY528PO",101,0)
 . ;
"RTN","IBY528PO",102,0)
 . S IENS="+1"_","_IPIEN_","_PTIEN_","
"RTN","IBY528PO",103,0)
 . S FDA(2.342,IENS,.01)=DATETIME
"RTN","IBY528PO",104,0)
 . S FDA(2.342,IENS,.02)=.5
"RTN","IBY528PO",105,0)
 . S FDA(2.342,IENS,.03)=$P(^DPT(PTIEN,.312,IPIEN,1),U,8)
"RTN","IBY528PO",106,0)
 . D UPDATE^DIE(,"FDA",,"ERROR")
"RTN","IBY528PO",107,0)
 . I $D(ERROR) D
"RTN","IBY528PO",108,0)
 . . S IBNUM=+$G(ERROR("DIERR"))
"RTN","IBY528PO",109,0)
 . . D BMES^XPDUTL("File: "_$G(ERROR("DIERR",IBNUM,"PARAM","FILE")))
"RTN","IBY528PO",110,0)
 . . D BMES^XPDUTL("IENS: "_$G(ERROR("DIERR",IBNUM,"PARAM","IENS")))
"RTN","IBY528PO",111,0)
 . . D BMES^XPDUTL("Field: "_$G(ERROR("DIERR",IBNUM,"PARAM","FIELD")))
"RTN","IBY528PO",112,0)
 . . K ERROR
"RTN","IBY528PO",113,0)
 Q
"RTN","IBY528PO",114,0)
 ;
"RTN","IBY528PO",115,0)
TYPE ; add type of plan entries to #355.1
"RTN","IBY528PO",116,0)
 D ADTYPPLN^IBY528PA
"RTN","IBY528PO",117,0)
 Q
"RTN","IBY528PO",118,0)
 ;
"RTN","IBY528PO",119,0)
SRCINF ; add new source of information entry to #355.12
"RTN","IBY528PO",120,0)
 D ADSRCINF^IBY528PA
"RTN","IBY528PO",121,0)
 Q
"RTN","IBY528PO",122,0)
 ;IBY528PO
"UP",2,2.312,-1)
2^.312
"UP",2,2.312,0)
2.312
"UP",2,2.342,-2)
2^.312
"UP",2,2.342,-1)
2.312^13
"UP",2,2.342,0)
2.342
"VER")
8.0^22.0
"^DD",2,2.312,1.08,0)
*COMMENT - PATIENT POLICY^FX^^1;8^K:$L(X)>80!($L(X)<3) X
"^DD",2,2.312,1.08,1,0)
^.1
"^DD",2,2.312,1.08,1,1,0)
2^AP^MUMPS
"^DD",2,2.312,1.08,1,1,1)
D TRIGSET^IBCN118
"^DD",2,2.312,1.08,1,1,2)
D TRIGKIL^IBCN118
"^DD",2,2.312,1.08,1,1,"%D",0)
^.101^4^4^3160302^^^^
"^DD",2,2.312,1.08,1,1,"%D",1,0)
Triggers the edit of an existing entry or adds a new entry.  If existing 
"^DD",2,2.312,1.08,1,1,"%D",2,0)
entry exists at 2.312,1.18 for the same user and same date AND if the 
"^DD",2,2.312,1.08,1,1,"%D",3,0)
first 80 characters of the comment at 2.312,1.18,.03 differ from the 
"^DD",2,2.312,1.08,1,1,"%D",4,0)
comment at 2.312,1.08 then trigger the update at 2.312,1.18.
"^DD",2,2.312,1.08,1,1,"DT")
3150616
"^DD",2,2.312,1.08,3)
Answer must be 3-80 characters in length.  This is a short comment about this patients policy.
"^DD",2,2.312,1.08,5,1,0)
2.342^.03^1
"^DD",2,2.312,1.08,21,0)
^.001^3^3^3151105^^^
"^DD",2,2.312,1.08,21,1,0)
This is a place to record a short comment about this patients policy.
"^DD",2,2.312,1.08,21,2,0)
It is specific to this patient and to this policy.  The answer must be
"^DD",2,2.312,1.08,21,3,0)
3 to 80 characters.
"^DD",2,2.312,1.08,"DT")
3150616
"^DD",2,2.312,1.18,0)
COMMENT - SUBSCRIBER POLICY^2.342DA^^13;0
"^DD",2,2.312,1.18,21,0)
^^4^4^3150611^
"^DD",2,2.312,1.18,21,1,0)
This sub-file (#2.342 COMMENT - SUBSCRIBER POLICY) will contain the
"^DD",2,2.312,1.18,21,2,0)
Subscriber's Policy Comments, the Date and Time the Subscriber's Policy
"^DD",2,2.312,1.18,21,3,0)
Comments was entered, and the User's ID that entered the Subscriber's
"^DD",2,2.312,1.18,21,4,0)
Policy comments.
"^DD",2,2.342,0)
COMMENT - SUBSCRIBER POLICY SUB-FIELD^^.03^3
"^DD",2,2.342,0,"DT")
3150629
"^DD",2,2.342,0,"IX","B",2.342,.01)

"^DD",2,2.342,0,"IX","C",2.342,.02)

"^DD",2,2.342,0,"NM","COMMENT - SUBSCRIBER POLICY")

"^DD",2,2.342,0,"UP")
2.312
"^DD",2,2.342,.01,0)
COMMENT DATE/TIME^D^^0;1^S %DT="ETXR" D ^%DT S X=Y K:X<1 X
"^DD",2,2.342,.01,1,0)
^.1
"^DD",2,2.342,.01,1,1,0)
2.342^B
"^DD",2,2.342,.01,1,1,1)
S ^DPT(DA(2),.312,DA(1),13,"B",$E(X,1,30),DA)=""
"^DD",2,2.342,.01,1,1,2)
K ^DPT(DA(2),.312,DA(1),13,"B",$E(X,1,30),DA)
"^DD",2,2.342,.01,3)
(No range limit on date)
"^DD",2,2.342,.01,21,0)
^^1^1^3150611^
"^DD",2,2.342,.01,21,1,0)
The date/time that the user entered the subscriber's policy comment.
"^DD",2,2.342,.01,"DT")
3150629
"^DD",2,2.342,.02,0)
LAST EDITED BY^P200'^VA(200,^0;2^Q
"^DD",2,2.342,.02,1,0)
^.1
"^DD",2,2.342,.02,1,1,0)
2.342^C
"^DD",2,2.342,.02,1,1,1)
S ^DPT(DA(2),.312,DA(1),13,"C",$E(X,1,30),DA)=""
"^DD",2,2.342,.02,1,1,2)
K ^DPT(DA(2),.312,DA(1),13,"C",$E(X,1,30),DA)
"^DD",2,2.342,.02,1,1,"DT")
3150618
"^DD",2,2.342,.02,3)
Enter the usr who entered the subscriber's policy comment.
"^DD",2,2.342,.02,21,0)
^^2^2^3150611^
"^DD",2,2.342,.02,21,1,0)
This is the local user ID of the person that entered the Subscriber's
"^DD",2,2.342,.02,21,2,0)
Policy comment.  
"^DD",2,2.342,.02,"DT")
3150618
"^DD",2,2.342,.03,0)
COMMENT^FX^^1;1^K:$L(X)>245!($L(X)<3) X
"^DD",2,2.342,.03,1,0)
^.1
"^DD",2,2.342,.03,1,1,0)
^^TRIGGER^2.312^1.08
"^DD",2,2.342,.03,1,1,1)
X ^DD(2.342,.03,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.312,D1,1)):^(1),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=$E($P(^DPT(DA(2),.312,DA(1),13,DA,1),U),1,80) X ^DD(2.342,.03,1,1,1.4)
"^DD",2,2.342,.03,1,1,1.3)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA S Y(0)=X S X=($P($G(^DPT(DA(2),.312,DA(1),1)),U,8)'=$E($P(^DPT(DA(2),.312,DA(1),13,DA,1),U),1,80))
"^DD",2,2.342,.03,1,1,1.4)
S DIH=$G(^DPT(DIV(0),.312,DIV(1),1)),DIV=X S $P(^(1),U,8)=DIV,DIH=2.312,DIG=1.08 D ^DICR
"^DD",2,2.342,.03,1,1,2)
K DIV S DIV=X,D0=DA(2),DIV(0)=D0,D1=DA(1),DIV(1)=D1,D2=DA S Y(0)=X S X=($P(^DPT(DA(2),.312,DA(1),13,DA,1),U)="") I X S X=DIV S Y(1)=$S($D(^DPT(D0,.312,D1,1)):^(1),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(2.342,.03,1,1,2.4)
"^DD",2,2.342,.03,1,1,2.4)
S DIH=$G(^DPT(DIV(0),.312,DIV(1),1)),DIV=X S $P(^(1),U,8)=DIV,DIH=2.312,DIG=1.08 D ^DICR
"^DD",2,2.342,.03,1,1,"%D",0)
^.101^3^3^3160302^^^^
"^DD",2,2.342,.03,1,1,"%D",1,0)
Triggers field 2.312,1.08 if its value differs from first 80 chars of the 
"^DD",2,2.342,.03,1,1,"%D",2,0)
value in 2.342,.03.  Deletes field 2.312,1.08 if field 2.342,.03 is 
"^DD",2,2.342,.03,1,1,"%D",3,0)
deleted.
"^DD",2,2.342,.03,1,1,"CREATE CONDITION")
S X=($P($G(^DPT(DA(2),.312,DA(1),1)),U,8)'=$E($P(^DPT(DA(2),.312,DA(1),13,DA,1),U),1,80))
"^DD",2,2.342,.03,1,1,"CREATE VALUE")
S X=$E($P(^DPT(DA(2),.312,DA(1),13,DA,1),U),1,80)
"^DD",2,2.342,.03,1,1,"DELETE CONDITION")
S X=($P(^DPT(DA(2),.312,DA(1),13,DA,1),U)="")
"^DD",2,2.342,.03,1,1,"DELETE VALUE")
@
"^DD",2,2.342,.03,1,1,"DIC")

"^DD",2,2.342,.03,1,1,"FIELD")
*COMMENT - PATIENT POLICY
"^DD",2,2.342,.03,3)
Answer must be 3-245 characters in length.
"^DD",2,2.342,.03,21,0)
^^2^2^3151229^
"^DD",2,2.342,.03,21,1,0)
This field contains a specific comment about this Subscriber's Policy. The
"^DD",2,2.342,.03,21,2,0)
comment must be between 3 and 245 characters in length.
"^DD",2,2.342,.03,"DT")
3151229
"^DD",36,36,.01,0)
NAME^RFXa^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",36,36,.01,.1)
INSURANCE COMPANY FILE
"^DD",36,36,.01,1,0)
^.1
"^DD",36,36,.01,1,1,0)
36^B
"^DD",36,36,.01,1,1,1)
S ^DIC(36,"B",$E(X,1,30),DA)=""
"^DD",36,36,.01,1,1,2)
K ^DIC(36,"B",$E(X,1,30),DA)
"^DD",36,36,.01,1,2,0)
^^TRIGGER^36^4.04
"^DD",36,36,.01,1,2,1)
X ^DD(36,.01,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="22" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,4)=DIV,DIH=36,DIG=4.04 D ^DICR
"^DD",36,36,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($G(^IBE(355.97,+$P(Y(1),U,4),0)),U)=""
"^DD",36,36,.01,1,2,2)
Q
"^DD",36,36,.01,1,2,"CREATE CONDITION")
#4.04=""
"^DD",36,36,.01,1,2,"CREATE VALUE")
"22"
"^DD",36,36,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,2,"DT")
3060905
"^DD",36,36,.01,1,2,"FIELD")
#4.04
"^DD",36,36,.01,1,3,0)
^^TRIGGER^36^4.05
"^DD",36,36,.01,1,3,1)
X ^DD(36,.01,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,5)=DIV,DIH=36,DIG=4.05 D ^DICR
"^DD",36,36,.01,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.05,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,5)_":",2),$C(59))=""
"^DD",36,36,.01,1,3,2)
Q
"^DD",36,36,.01,1,3,"CREATE CONDITION")
REF PROV SEC ID REQ ON CLAIMS=""
"^DD",36,36,.01,1,3,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,3,"DT")
3060308
"^DD",36,36,.01,1,3,"FIELD")
REF PROV SEC ID REQ ON CLAIMS
"^DD",36,36,.01,1,4,0)
^^TRIGGER^36^4.06
"^DD",36,36,.01,1,4,1)
X ^DD(36,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,6)=DIV,DIH=36,DIG=4.06 D ^DICR
"^DD",36,36,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.06,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,6)_":",2),$C(59))=""
"^DD",36,36,.01,1,4,2)
Q
"^DD",36,36,.01,1,4,"CREATE CONDITION")
#4.06=""
"^DD",36,36,.01,1,4,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,4,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,4,"DT")
3060504
"^DD",36,36,.01,1,4,"FIELD")
ATT/REND ID BILL SEC ID PROF
"^DD",36,36,.01,1,5,0)
^^TRIGGER^36^4.07
"^DD",36,36,.01,1,5,1)
X ^DD(36,.01,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X="1" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,7)=DIV,DIH=36,DIG=4.07 D ^DICR
"^DD",36,36,.01,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.07,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,7)_":",2),$C(59))=""
"^DD",36,36,.01,1,5,2)
Q
"^DD",36,36,.01,1,5,"CREATE CONDITION")
SEND LAB OR FAC IDS FOR VAMC=""
"^DD",36,36,.01,1,5,"CREATE VALUE")
"1"
"^DD",36,36,.01,1,5,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,5,"DT")
3060308
"^DD",36,36,.01,1,5,"FIELD")
SEND LAB OR FAC IDS FOR VAMC
"^DD",36,36,.01,1,6,0)
^^TRIGGER^36^4.08
"^DD",36,36,.01,1,6,1)
X ^DD(36,.01,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,8)=DIV,DIH=36,DIG=4.08 D ^DICR
"^DD",36,36,.01,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.08,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,8)_":",2),$C(59))=""
"^DD",36,36,.01,1,6,2)
Q
"^DD",36,36,.01,1,6,"CREATE CONDITION")
#4.08=""
"^DD",36,36,.01,1,6,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,6,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,6,"DT")
3060504
"^DD",36,36,.01,1,6,"FIELD")
ATT/REND ID BILL SEC ID INST
"^DD",36,36,.01,3)
Answer must be 3-30 characters in length.
"^DD",36,36,.01,21,0)
^^5^5^2941201^^^^
"^DD",36,36,.01,21,1,0)
Enter the name of the insurance carrier which at least one patient seen
"^DD",36,36,.01,21,2,0)
at your facility has.  This information must be updated using the 'Insurance
"^DD",36,36,.01,21,3,0)
Company Entry/Edit' option, NOT using VA FileMan.  Editing of this data
"^DD",36,36,.01,21,4,0)
through a filemanager option could cause negative impacts on the MAS and
"^DD",36,36,.01,21,5,0)
IB software modules in addition to other DHCP modules.
"^DD",36,36,.01,"AUDIT")
y
"^DD",36,36,.01,"DEL",1,0)
I 1 W !!,"You must use the 'Delete Company' action to delete a company... "
"^DD",36,36,.01,"DT")
3150408
"^DD",36,36,.05,0)
INACTIVE^SXa^0:NO;1:YES;^0;5^Q
"^DD",36,36,.05,3)
Enter 'Yes" if this company is inactive and should no longer be allowed for selection.
"^DD",36,36,.05,21,0)
^^2^2^2911222^
"^DD",36,36,.05,21,1,0)
If this insurance company is no longer active in your area, enter INACTIVE
"^DD",36,36,.05,21,2,0)
here.  This will disallow users from selecting this insurance company entry.
"^DD",36,36,.05,"AUDIT")
y
"^DD",36,36,.05,"DEL",1,0)
I $D(DGINS)
"^DD",36,36,.05,"DT")
3150408
"^DD",36,36,.111,0)
STREET ADDRESS [LINE 1]^RFXa^^.11;1^K:$L(X)>35!($L(X)<3) X
"^DD",36,36,.111,1,0)
^.1
"^DD",36,36,.111,1,1,0)
^^TRIGGER^36^.112
"^DD",36,36,.111,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.111,1,1,1.4)
"^DD",36,36,.111,1,1,1.4)
S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,2)=DIV,DIH=36,DIG=.112 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",36,36,.111,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.111,1,1,2.4)
"^DD",36,36,.111,1,1,2.4)
S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,2)=DIV,DIH=36,DIG=.112 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",36,36,.111,1,1,"%D",0)
^^2^2^3000124^
"^DD",36,36,.111,1,1,"%D",1,0)
When changing or deleting STREET ADDRESS [LINE 1] delete STREET
"^DD",36,36,.111,1,1,"%D",2,0)
ADDRESS [LINE 2].
"^DD",36,36,.111,1,1,"CREATE VALUE")
@
"^DD",36,36,.111,1,1,"DELETE VALUE")
@
"^DD",36,36,.111,1,1,"DT")
3000124
"^DD",36,36,.111,1,1,"FIELD")
STREET ADDRESS [LINE 2]
"^DD",36,36,.111,1,2,0)
^^TRIGGER^36^.113
"^DD",36,36,.111,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.111,1,2,1.4)
"^DD",36,36,.111,1,2,1.4)
S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,3)=DIV,DIH=36,DIG=.113 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",36,36,.111,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.111,1,2,2.4)
"^DD",36,36,.111,1,2,2.4)
S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,3)=DIV,DIH=36,DIG=.113 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",36,36,.111,1,2,"%D",0)
^^2^2^3000124^
"^DD",36,36,.111,1,2,"%D",1,0)
When changing or deleting STREET ADDRESS [LINE 1] delete STREET
"^DD",36,36,.111,1,2,"%D",2,0)
ADDRESS [LINE 3].
"^DD",36,36,.111,1,2,"CREATE VALUE")
@
"^DD",36,36,.111,1,2,"DELETE VALUE")
@
"^DD",36,36,.111,1,2,"DT")
3000124
"^DD",36,36,.111,1,2,"FIELD")
STREET ADDRESS [LINE 3]
"^DD",36,36,.111,3)
Enter the first line of this company's street address with 3-35 characters.
"^DD",36,36,.111,21,0)
^^2^2^3070619^
"^DD",36,36,.111,21,1,0)
Enter the first line of this company's street address with 3-35 
"^DD",36,36,.111,21,2,0)
characters.
"^DD",36,36,.111,"AUDIT")
y
"^DD",36,36,.111,"DEL",1,0)
I $D(DGINS)
"^DD",36,36,.111,"DT")
3150401
"^DD",36,36,.112,0)
STREET ADDRESS [LINE 2]^FXa^^.11;2^K:$L(X)>30!($L(X)<3)!$$DUPADDRL^IBCNSU(X,+$G(DA),.111) X
"^DD",36,36,.112,1,0)
^.1
"^DD",36,36,.112,1,1,0)
^^TRIGGER^36^.113
"^DD",36,36,.112,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.112,1,1,1.4)
"^DD",36,36,.112,1,1,1.4)
S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,3)=DIV,DIH=36,DIG=.113 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",36,36,.112,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.112,1,1,2.4)
"^DD",36,36,.112,1,1,2.4)
S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,3)=DIV,DIH=36,DIG=.113 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",36,36,.112,1,1,"%D",0)
^^2^2^3000124^
"^DD",36,36,.112,1,1,"%D",1,0)
When changing or deleting STREET ADDRESS [LINE 2] delete STREET
"^DD",36,36,.112,1,1,"%D",2,0)
ADDRESS [LINE 3].
"^DD",36,36,.112,1,1,"CREATE VALUE")
@
"^DD",36,36,.112,1,1,"DELETE VALUE")
@
"^DD",36,36,.112,1,1,"DT")
3000124
"^DD",36,36,.112,1,1,"FIELD")
STREET ADDRESS [LINE 3]
"^DD",36,36,.112,3)
If the Street Address is longer than one line, enter a second line between 3-30 characters.  It can not be the same as Line 1.
"^DD",36,36,.112,5,1,0)
36^.111^1
"^DD",36,36,.112,21,0)
^^2^2^3070619^
"^DD",36,36,.112,21,1,0)
If the Street Address is longer than one line, enter a second line 
"^DD",36,36,.112,21,2,0)
between 3-30 characters.  It can not be the same as Line 1.
"^DD",36,36,.112,"AUDIT")
y
"^DD",36,36,.112,"DT")
3150401
"^DD",36,36,1,0)
REIMBURSE?^RSa^Y:WILL REIMBURSE;*:WILL REIMBURSE IF TREATED UNDER VAR 6046(C) OR VAR 6060.2(A);**:DEPENDS ON POLICY, CHECK WITH COMPANY;N:WILL NOT REIMBURSE;^0;2^Q
"^DD",36,36,1,3)
Enter the proper reimbursement code.
"^DD",36,36,1,21,0)
^^3^3^2930927^^
"^DD",36,36,1,21,1,0)
Choose from the available list of choices the appropriate code denoting
"^DD",36,36,1,21,2,0)
whether or not and under which circumstances this insurance carrier will
"^DD",36,36,1,21,3,0)
reimburse the Dept of Veterans Affairs for care received.
"^DD",36,36,1,"AUDIT")
y
"^DD",36,36,1,"DEL",1,0)
I $D(DGINS)
"^DD",36,36,1,"DT")
3150408
"^DD",36,36,3.1,0)
PAYER^*P365.12'a^IBE(365.12,^3;10^S DIC("S")="I $P($G(^(0)),U,1)'=""~NO PAYER"",$$ACTAPP^IBCNEUT5(Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",36,36,3.1,1,0)
^.1
"^DD",36,36,3.1,1,1,0)
36^AC
"^DD",36,36,3.1,1,1,1)
S ^DIC(36,"AC",$E(X,1,30),DA)=""
"^DD",36,36,3.1,1,1,2)
K ^DIC(36,"AC",$E(X,1,30),DA)
"^DD",36,36,3.1,1,1,"%D",0)
^^2^2^3020605^
"^DD",36,36,3.1,1,1,"%D",1,0)
This cross-reference is used to find insurance companies pointing
"^DD",36,36,3.1,1,1,"%D",2,0)
to a specific payer.
"^DD",36,36,3.1,1,1,"DT")
3020605
"^DD",36,36,3.1,3)
Please choose an entry in the Payer File.
"^DD",36,36,3.1,12)
Only valid payers may be selected.
"^DD",36,36,3.1,12.1)
S DIC("S")="I $P($G(^(0)),U,1)'=""~NO PAYER"",$$ACTAPP^IBCNEUT5(Y)"
"^DD",36,36,3.1,21,0)
^.001^4^4^3020924^^
"^DD",36,36,3.1,21,1,0)
This field points to an entry in the Payer File (#365.12).  This
"^DD",36,36,3.1,21,2,0)
field is not required, but it allows the insurance company entry
"^DD",36,36,3.1,21,3,0)
to be able to conduct business electronically by linking the
"^DD",36,36,3.1,21,4,0)
insurance company with a payer for various electronic applications.
"^DD",36,36,3.1,"AUDIT")
y
"^DD",36,36,3.1,"DT")
3150401
"^DD",350.9,350.9,100,0)
IB SSVI DISABLE/ENABLE^S^0:DISABLED;1:ENABLED;^100;1^Q
"^DD",350.9,350.9,100,3)
Enter 0 to disable the interface or 1 to enable the interface.
"^DD",350.9,350.9,100,21,0)
^^3^3^3141215^
"^DD",350.9,350.9,100,21,1,0)
Disabling/Enabling of the HL7 Consistency Checking sending of data to 
"^DD",350.9,350.9,100,21,2,0)
Inter-Facility Sites which are Patient's treating Facility receiving 
"^DD",350.9,350.9,100,21,3,0)
sites.
"^DD",350.9,350.9,100,"DT")
3141215
"^DD",350.9,350.9,101,0)
IB SSVI LAST INS DATE XFER^DX^^100;2^S %DT="ESTR" D ^%DT S X=Y K:Y<1 X
"^DD",350.9,350.9,101,3)
Enter the current date and time.
"^DD",350.9,350.9,101,21,0)
^^4^4^3141218^^
"^DD",350.9,350.9,101,21,1,0)
Last date and time (timestamp) the background task ran so that from that
"^DD",350.9,350.9,101,21,2,0)
time forward the transmit field set in IB PIN/HL7 PIVO File are perused
"^DD",350.9,350.9,101,21,3,0)
for sending SSVI Consistency Checked insurance data to a Patient's
"^DD",350.9,350.9,101,21,4,0)
treating facility sites.
"^DD",350.9,350.9,101,"DT")
3141218
"^DD",350.9,350.9,102,0)
IB CURRENT PIVOT ENTRY^NJ9,0^^HL7;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",350.9,350.9,102,3)
Type a number between 1 and 999999999, 0 decimal digits.
"^DD",350.9,350.9,102,21,0)
^^1^1^3141210^^
"^DD",350.9,350.9,102,21,1,0)
This is the current PIVOT entry.
"^DD",350.9,350.9,102,"DT")
3141218
"^DD",350.9,350.9,103,0)
IB PIVOT FILE DAYS TO RETAIN^NJ3,0^^HL7;2^K:+X'=X!(X>360)!(X<1)!(X?.E1"."1.N) X
"^DD",350.9,350.9,103,3)
Type a number between 1 and 360, 0 decimal digits.
"^DD",350.9,350.9,103,21,0)
^^1^1^3141215^
"^DD",350.9,350.9,103,21,1,0)
Number of days to keep the pivot entry information. This can be 1 to 360.
"^DD",350.9,350.9,103,"DT")
3141215
"^DD",355.1,355.1,.01,0)
NAME^RF^^0;1^K:$L(X)>70!($L(X)<3)!'(X'?1P.E) X
"^DD",355.1,355.1,.01,1,0)
^.1^^0
"^DD",355.1,355.1,.01,3)
Enter the standard abbreviation.  Answer must be 2-70 characters in length.
"^DD",355.1,355.1,.01,21,0)
^.001^10^10^3090504^^^^
"^DD",355.1,355.1,.01,21,1,0)
There are a number of different types of policies, some have very
"^DD",355.1,355.1,.01,21,2,0)
specific types of coverage while others cover a much broader
"^DD",355.1,355.1,.01,21,3,0)
range of care.  This is the name of the type of policy.  Select
"^DD",355.1,355.1,.01,21,4,0)
the name that best describes the type of policy.  This is a list of 
"^DD",355.1,355.1,.01,21,5,0)
standard types of policies.
"^DD",355.1,355.1,.01,21,6,0)
 
"^DD",355.1,355.1,.01,21,7,0)
The type of policy may be dependent on the type of coverage provided
"^DD",355.1,355.1,.01,21,8,0)
by the insurance company and may affect the type of benefits that are
"^DD",355.1,355.1,.01,21,9,0)
available for the policy.  This will be used in determining if the
"^DD",355.1,355.1,.01,21,10,0)
reimbursement from the insurance company is appropriate for this policy.
"^DD",355.1,355.1,.01,"DT")
3150506
"^DD",355.1,355.1,.02,0)
ABBREVIATION^F^^0;2^K:$L(X)>12!($L(X)<2) X
"^DD",355.1,355.1,.02,1,0)
^.1
"^DD",355.1,355.1,.02,1,1,0)
355.1^D
"^DD",355.1,355.1,.02,1,1,1)
S ^IBE(355.1,"D",$E(X,1,30),DA)=""
"^DD",355.1,355.1,.02,1,1,2)
K ^IBE(355.1,"D",$E(X,1,30),DA)
"^DD",355.1,355.1,.02,1,1,"%D",0)
^^2^2^3150507^
"^DD",355.1,355.1,.02,1,1,"%D",1,0)
This cross-reference allows the Type of Plan to be found by the 
"^DD",355.1,355.1,.02,1,1,"%D",2,0)
abbreviation.
"^DD",355.1,355.1,.02,1,1,"DT")
2930603
"^DD",355.1,355.1,.02,3)
Enter the standard abbreviation. Answer must be 2-12 characters in length.
"^DD",355.1,355.1,.02,21,0)
^^3^3^2930603^
"^DD",355.1,355.1,.02,21,1,0)
Enter the standard abbreviation for this type of policy.  The abbreviation
"^DD",355.1,355.1,.02,21,2,0)
will be used on standard displays of policy information where space is
"^DD",355.1,355.1,.02,21,3,0)
limited.
"^DD",355.1,355.1,.02,"DT")
3150507
"^DD",355.3,355.3,.16,0)
PLAN STANDARD FTF^P355.13'a^IBE(355.13,^0;16^Q
"^DD",355.3,355.3,.16,1,0)
^.1
"^DD",355.3,355.3,.16,1,1,0)
^^TRIGGER^355.3^.17
"^DD",355.3,355.3,.16,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.3,DIV(0),0)),DIV=X S $P(^(0),U,17)=DIV,DIH=355.3,DIG=.17 D ^DICR
"^DD",355.3,355.3,.16,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.3,DIV(0),0)),DIV=X S $P(^(0),U,17)=DIV,DIH=355.3,DIG=.17 D ^DICR
"^DD",355.3,355.3,.16,1,1,"%D",0)
^.101^2^2^3090311^^
"^DD",355.3,355.3,.16,1,1,"%D",1,0)
When changing or deleting Standard Filing Time Frame delete the
"^DD",355.3,355.3,.16,1,1,"%D",2,0)
corresponding Value.
"^DD",355.3,355.3,.16,1,1,"CREATE VALUE")
@
"^DD",355.3,355.3,.16,1,1,"DELETE VALUE")
@
"^DD",355.3,355.3,.16,1,1,"DT")
3090311
"^DD",355.3,355.3,.16,1,1,"FIELD")
PLAN STANDARD FTF VALUE
"^DD",355.3,355.3,.16,3)
Enter the maximum standard filing time frame for this plan.
"^DD",355.3,355.3,.16,21,0)
^^2^2^3090309^
"^DD",355.3,355.3,.16,21,1,0)
This is the standard filing time frame for the insurance plan.  It may be 
"^DD",355.3,355.3,.16,21,2,0)
automatically applied to dates of service.
"^DD",355.3,355.3,.16,"AUDIT")
y
"^DD",355.3,355.3,.16,"DT")
3150402
"^DD",355.3,355.3,.17,0)
PLAN STANDARD FTF VALUE^NJ8,1a^^0;17^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."2N.N) X
"^DD",355.3,355.3,.17,3)
Type a Number between 0 and 999999, 1 Decimal Digit
"^DD",355.3,355.3,.17,5,1,0)
355.3^.16^1
"^DD",355.3,355.3,.17,21,0)
^.001^2^2^3090313^^^^
"^DD",355.3,355.3,.17,21,1,0)
Enter the value corresponding to the Standard Filing Time Frame. 
"^DD",355.3,355.3,.17,21,2,0)
For example, for the time frame of Days, enter the number of days.
"^DD",355.3,355.3,.17,"AUDIT")
y
"^DD",355.3,355.3,.17,"DT")
3150402
"^DD",355.3,355.3,2.01,0)
GROUP NAME^FXa^^2;1^K:$L(X)>80!($L(X)<2)!'$$LENCHK^IBCNEUT1(X,20,0) X
"^DD",355.3,355.3,2.01,1,0)
^.1
"^DD",355.3,355.3,2.01,1,1,0)
^^TRIGGER^355.3^.03
"^DD",355.3,355.3,2.01,1,1,1)
X ^DD(355.3,2.01,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$E($P(^IBA(355.3,DA,2),U),1,20) X ^DD(355.3,2.01,1,1,1.4)
"^DD",355.3,355.3,2.01,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=($P(^IBA(355.3,DA,0),U,3)'=$E($P(^IBA(355.3,DA,2),U),1,20))
"^DD",355.3,355.3,2.01,1,1,1.4)
S DIH=$G(^IBA(355.3,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=355.3,DIG=.03 D ^DICR
"^DD",355.3,355.3,2.01,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=($P(^IBA(355.3,DA,2),U)="") I X S X=DIV S Y(1)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(355.3,2.01,1,1,2.4)
"^DD",355.3,355.3,2.01,1,1,2.4)
S DIH=$G(^IBA(355.3,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=355.3,DIG=.03 D ^DICR
"^DD",355.3,355.3,2.01,1,1,"%D",0)
^.101^1^1^3131029^^
"^DD",355.3,355.3,2.01,1,1,"%D",1,0)
Triggers field .03 if its value differs from first 20 chars of the value in this field. Deletes field .03 if field 2.01 is deleted.
"^DD",355.3,355.3,2.01,1,1,"CREATE CONDITION")
S X=($P(^IBA(355.3,DA,0),U,3)'=$E($P(^IBA(355.3,DA,2),U),1,20))
"^DD",355.3,355.3,2.01,1,1,"CREATE VALUE")
S X=$E($P(^IBA(355.3,DA,2),U),1,20)
"^DD",355.3,355.3,2.01,1,1,"DELETE CONDITION")
S X=($P(^IBA(355.3,DA,2),U)="")
"^DD",355.3,355.3,2.01,1,1,"DELETE VALUE")
@
"^DD",355.3,355.3,2.01,1,1,"DT")
3131020
"^DD",355.3,355.3,2.01,1,1,"FIELD")
*GROUP NAME
"^DD",355.3,355.3,2.01,3)
Answer must be 2-20 characters in length.
"^DD",355.3,355.3,2.01,5,1,0)
355.3^.03^4
"^DD",355.3,355.3,2.01,21,0)
^^5^5^3130421^
"^DD",355.3,355.3,2.01,21,1,0)
If this is a group policy, enter the name of the group that this policy 
"^DD",355.3,355.3,2.01,21,2,0)
is associated with. This is the name that the insurance company uses to 
"^DD",355.3,355.3,2.01,21,3,0)
identify the plan. This will appear on the health claims forms in the 
"^DD",355.3,355.3,2.01,21,4,0)
appropriate blocks. It will also be used to help identify this policy so 
"^DD",355.3,355.3,2.01,21,5,0)
that other patients with the same plan can be associated with it.
"^DD",355.3,355.3,2.01,23,0)
^^2^2^3130605^
"^DD",355.3,355.3,2.01,23,1,0)
Replaces field .03. Length of this field is temporarily limited to 20 
"^DD",355.3,355.3,2.01,23,2,0)
characters.
"^DD",355.3,355.3,2.01,"AUDIT")
y
"^DD",355.3,355.3,2.01,"DT")
3150402
"^DD",355.3,355.3,2.02,0)
GROUP NUMBER^FXa^^2;2^K:$L(X)>55!($L(X)<2)!'$$LENCHK^IBCNEUT1(X,17,0) X
"^DD",355.3,355.3,2.02,1,0)
^.1
"^DD",355.3,355.3,2.02,1,1,0)
^^TRIGGER^355.3^.04
"^DD",355.3,355.3,2.02,1,1,1)
X ^DD(355.3,2.02,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=$E($P(^IBA(355.3,DA,2),U,2),1,17) X ^DD(355.3,2.02,1,1,1.4)
"^DD",355.3,355.3,2.02,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=($P(^IBA(355.3,DA,0),U,4)'=$E($P(^IBA(355.3,DA,2),U,2),1,17))
"^DD",355.3,355.3,2.02,1,1,1.4)
S DIH=$G(^IBA(355.3,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=355.3,DIG=.04 D ^DICR
"^DD",355.3,355.3,2.02,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=($P(^IBA(355.3,DA,2),U,2)="") I X S X=DIV S Y(1)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(355.3,2.02,1,1,2.4)
"^DD",355.3,355.3,2.02,1,1,2.4)
S DIH=$G(^IBA(355.3,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=355.3,DIG=.04 D ^DICR
"^DD",355.3,355.3,2.02,1,1,"%D",0)
^.101^1^1^3131029^^
"^DD",355.3,355.3,2.02,1,1,"%D",1,0)
Triggers field .04 if its value differs from first 17 chars of the value in this field. Deletes field .04 if field 2.02 is deleted.
"^DD",355.3,355.3,2.02,1,1,"CREATE CONDITION")
S X=($P(^IBA(355.3,DA,0),U,4)'=$E($P(^IBA(355.3,DA,2),U,2),1,17))
"^DD",355.3,355.3,2.02,1,1,"CREATE VALUE")
S X=$E($P(^IBA(355.3,DA,2),U,2),1,17)
"^DD",355.3,355.3,2.02,1,1,"DELETE CONDITION")
S X=($P(^IBA(355.3,DA,2),U,2)="")
"^DD",355.3,355.3,2.02,1,1,"DELETE VALUE")
@
"^DD",355.3,355.3,2.02,1,1,"DT")
3131020
"^DD",355.3,355.3,2.02,1,1,"FIELD")
*GROUP NUMBER
"^DD",355.3,355.3,2.02,3)
Answer must be 2-17 characters in length.
"^DD",355.3,355.3,2.02,5,1,0)
355.3^.04^5
"^DD",355.3,355.3,2.02,21,0)
^^3^3^3130421^
"^DD",355.3,355.3,2.02,21,1,0)
If this is a group policy enter the number which identifies this policy, 
"^DD",355.3,355.3,2.02,21,2,0)
i.e. group number/code that the insurance company uses to identify this 
"^DD",355.3,355.3,2.02,21,3,0)
plan.
"^DD",355.3,355.3,2.02,23,0)
^^2^2^3130605^
"^DD",355.3,355.3,2.02,23,1,0)
Replaces field .04. Length of this field is temporarily limited to 17 
"^DD",355.3,355.3,2.02,23,2,0)
characters.
"^DD",355.3,355.3,2.02,"AUDIT")
y
"^DD",355.3,355.3,2.02,"DT")
3150402
"^DD",355.33,355.33,62.09,0)
SUBSCRIBER PHONE^F^^62;9^K:$L(X)>20!($L(X)<7) X
"^DD",355.33,355.33,62.09,3)
Enter the subscriber's phone number. The entry must be 7-20 characters in length.
"^DD",355.33,355.33,62.09,21,0)
^^1^1^3150209^
"^DD",355.33,355.33,62.09,21,1,0)
This field contains the phone number of the policyholder.
"^DD",355.33,355.33,62.09,"DT")
3150402
"^DD",366,366,0)
FIELD^^.03^11
"^DD",366,366,0,"DDA")
N
"^DD",366,366,0,"DT")
3150413
"^DD",366,366,0,"IX","B",366,.01)

"^DD",366,366,0,"IX","C",366,.03)

"^DD",366,366,0,"IX","D",366,.02)

"^DD",366,366,0,"NM","IB SSVI PIN/HL7 PIVOT")

"^DD",366,366,.01,0)
DATE/TIME OF EVENT^RDX^^0;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",366,366,.01,1,0)
^.1^^-1
"^DD",366,366,.01,1,1,0)
366^B
"^DD",366,366,.01,1,1,1)
S ^IBCN(366,"B",$E(X,1,30),DA)=""
"^DD",366,366,.01,1,1,2)
K ^IBCN(366,"B",$E(X,1,30),DA)
"^DD",366,366,.01,3)
Enter the current Date/Time.
"^DD",366,366,.01,21,0)
^.001^1^1^3150128^^^
"^DD",366,366,.01,21,1,0)
This will contain the date time (Timestamp) of the event.
"^DD",366,366,.01,"DT")
3150402
"^DD",366,366,.02,0)
PIVOT NUMBER^RNJ9,0^^0;2^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",366,366,.02,1,0)
^.1
"^DD",366,366,.02,1,1,0)
366^D
"^DD",366,366,.02,1,1,1)
S ^IBCN(366,"D",$E(X,1,30),DA)=""
"^DD",366,366,.02,1,1,2)
K ^IBCN(366,"D",$E(X,1,30),DA)
"^DD",366,366,.02,1,1,"%D",0)
^^2^2^3150402^
"^DD",366,366,.02,1,1,"%D",1,0)
This cross reference is a standard cross reference to be used by FM and 
"^DD",366,366,.02,1,1,"%D",2,0)
programmers to identify the Pivot Number this entry is related to.
"^DD",366,366,.02,1,1,"DT")
3141216
"^DD",366,366,.02,3)
Type a number between 1 and 999999999, 0 decimal digits. It must be Unique.
"^DD",366,366,.02,21,0)
^^1^1^3141216^
"^DD",366,366,.02,21,1,0)
This will contain a unique pivot number that is created by the system.
"^DD",366,366,.02,"DT")
3141216
"^DD",366,366,.03,0)
PATIENT^P2'^DPT(^0;3^Q
"^DD",366,366,.03,1,0)
^.1
"^DD",366,366,.03,1,1,0)
366^C
"^DD",366,366,.03,1,1,1)
S ^IBCN(366,"C",$E(X,1,30),DA)=""
"^DD",366,366,.03,1,1,2)
K ^IBCN(366,"C",$E(X,1,30),DA)
"^DD",366,366,.03,1,1,"%D",0)
^.101^2^2^3150408^^
"^DD",366,366,.03,1,1,"%D",1,0)
This cross reference is a standard cross reference to be used by FM and
"^DD",366,366,.03,1,1,"%D",2,0)
programmers to identify the patient this entry is related to.
"^DD",366,366,.03,1,1,"DT")
3150408
"^DD",366,366,.03,3)
Enter the Patient this event belongs to.
"^DD",366,366,.03,21,0)
^^1^1^3150408^
"^DD",366,366,.03,21,1,0)
This is the pointer to the patient file (#2) to which this event belongs.
"^DD",366,366,.03,"DT")
3150408
"^DD",366,366,.04,0)
TYPE OF EVENT^S^1:INPATIENT EVENTS;2:OUTPATIENT EVENTS;3:REGISTRATIONS EVENTS;4:UPDATES TO DATA;5:TREATING FACILITY UPDATES;6:COTS UPDATE EVENTS;^0;4^Q
"^DD",366,366,.04,1,0)
^.1^^0
"^DD",366,366,.04,3)
Enter the number that corresponds to the type of this event.
"^DD",366,366,.04,21,0)
^^1^1^3141216^
"^DD",366,366,.04,21,1,0)
This indicates the type of event that has occurred.
"^DD",366,366,.04,"DT")
3150210
"^DD",366,366,.05,0)
EVENT POINTER^P2'^DPT(^0;5^Q
"^DD",366,366,.05,3)
Enter a Patient's Name
"^DD",366,366,.05,21,0)
^^3^3^3150402^
"^DD",366,366,.05,21,1,0)
This field is a pointer to the patient file.  Currently it is not defined 
"^DD",366,366,.05,21,2,0)
as a variable pointer, but may be modified in the future to allow entries 
"^DD",366,366,.05,21,3,0)
from other sources to be used.
"^DD",366,366,.05,"DT")
3150413
"^DD",366,366,.06,0)
COMPLETED^S^1:COMPLETED;^0;6^Q
"^DD",366,366,.06,1,0)
^.1^^0
"^DD",366,366,.06,3)
Enter '1' if completed.
"^DD",366,366,.06,21,0)
^^2^2^3150402^
"^DD",366,366,.06,21,1,0)
Completed can mean "TRANSMITTED" on originating site or "RECEIVED" on 
"^DD",366,366,.06,21,2,0)
receiving facility treatment site.
"^DD",366,366,.06,"DT")
3150402
"^DD",366,366,.07,0)
DELETED^S^1:DELETED;^0;7^Q
"^DD",366,366,.07,3)
Enter '1' for deletion.
"^DD",366,366,.07,21,0)
^^3^3^3150402^
"^DD",366,366,.07,21,1,0)
This field is used to mark the given entry for the event as being 
"^DD",366,366,.07,21,2,0)
deleted. It indicates that the ADT event was deleted, but an ancillary 
"^DD",366,366,.07,21,3,0)
system may still hold the PIVOT number.
"^DD",366,366,.07,"DT")
3150402
"^DD",366,366,.08,0)
REQUIRES TRANSMISSION^S^0:NO;1:YES;^0;8^Q
"^DD",366,366,.08,1,0)
^.1^^0
"^DD",366,366,.08,3)
Enter '0' to not transmit or '1' to transmit data to other treating facilities.
"^DD",366,366,.08,21,0)
^^1^1^3141216^
"^DD",366,366,.08,21,1,0)
This field denotes whether or not the entry requires transmission.
"^DD",366,366,.08,"DT")
3150210
"^DD",366,366,.09,0)
USER^P200'^VA(200,^0;9^Q
"^DD",366,366,.09,3)
Enter User who created this entry.
"^DD",366,366,.09,21,0)
^^1^1^3141216^
"^DD",366,366,.09,21,1,0)
This is the person who created this event.
"^DD",366,366,.09,"DT")
3141216
"^DD",366,366,2.1,0)
FIELD(S) EDITED^F^^2;1^K:$L(X)>200!($L(X)<1) X
"^DD",366,366,2.1,3)
Answer must be 1-200 characters in length.
"^DD",366,366,2.1,21,0)
^^2^2^3141216^
"^DD",366,366,2.1,21,1,0)
This field will be used to store the fields edited, delimited by ';' for 
"^DD",366,366,2.1,21,2,0)
the event.
"^DD",366,366,2.1,"DT")
3141216
"^DD",366,366,3,0)
INSURANCE^366.04A^^3;0
"^DD",366,366,3,21,0)
^^2^2^3150129^
"^DD",366,366,3,21,1,0)
Patient file insurance type subfile to send to a patient's treating 
"^DD",366,366,3,21,2,0)
facility sites.
"^DD",366,366.04,0)
INSURANCE SUB-FIELD^^3.1^2
"^DD",366,366.04,0,"DT")
3150402
"^DD",366,366.04,0,"IX","B",366.04,.01)

"^DD",366,366.04,0,"NM","INSURANCE")

"^DD",366,366.04,0,"UP")
366
"^DD",366,366.04,.01,0)
INSURANCE^F^^0;1^K:$L(X)>45!($L(X)<3) X
"^DD",366,366.04,.01,1,0)
^.1
"^DD",366,366.04,.01,1,1,0)
366.04^B
"^DD",366,366.04,.01,1,1,1)
S ^IBCN(366,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",366,366.04,.01,1,1,2)
K ^IBCN(366,DA(1),3,"B",$E(X,1,30),DA)
"^DD",366,366.04,.01,3)
Answer must be 3-45 characters in length.
"^DD",366,366.04,.01,21,0)
^^2^2^3141216^
"^DD",366,366.04,.01,21,1,0)
This is Patient Insurance that is to be sent to the patient's treating 
"^DD",366,366.04,.01,21,2,0)
facility sites.
"^DD",366,366.04,.01,"DT")
3141216
"^DD",366,366.04,3.1,0)
PATIENT FACILITY SITE^366.05A^^3;0
"^DD",366,366.04,3.1,21,0)
^^1^1^3150408^
"^DD",366,366.04,3.1,21,1,0)
This is the patient treating facility sites.
"^DD",366,366.05,0)
PATIENT FACILITY SITE SUB-FIELD^^4^5
"^DD",366,366.05,0,"DT")
3150402
"^DD",366,366.05,0,"IX","B",366.05,.01)

"^DD",366,366.05,0,"NM","PATIENT FACILITY SITE")

"^DD",366,366.05,0,"UP")
366.04
"^DD",366,366.05,.01,0)
PATIENT FACILITY SITE^F^^0;1^K:$L(X)>10!($L(X)<3) X
"^DD",366,366.05,.01,1,0)
^.1
"^DD",366,366.05,.01,1,1,0)
366.05^B
"^DD",366,366.05,.01,1,1,1)
S ^IBCN(366,DA(2),3,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",366,366.05,.01,1,1,2)
K ^IBCN(366,DA(2),3,DA(1),3,"B",$E(X,1,30),DA)
"^DD",366,366.05,.01,3)
Answer must be 3-10 characters in length.
"^DD",366,366.05,.01,21,0)
^^2^2^3150129^^^
"^DD",366,366.05,.01,21,1,0)
This is the Patient's treating Facility Site the Insurance information 
"^DD",366,366.05,.01,21,2,0)
was sent to.
"^DD",366,366.05,.01,"DT")
3150129
"^DD",366,366.05,1,0)
TRANSMISSION DATE^DX^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",366,366.05,1,3)
Enter the Current Date/Time.
"^DD",366,366.05,1,21,0)
^^2^2^3150408^
"^DD",366,366.05,1,21,1,0)
This the date and time the insurance was transmitted to the patient's 
"^DD",366,366.05,1,21,2,0)
other treating facility.
"^DD",366,366.05,1,"DT")
3150408
"^DD",366,366.05,2,0)
RECEIVING DATE^DX^^0;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",366,366.05,2,3)
Enter the current Date/Time.
"^DD",366,366.05,2,21,0)
^^1^1^3141216^^
"^DD",366,366.05,2,21,1,0)
The facility treating site SSVI insurance received date.
"^DD",366,366.05,2,"DT")
3150402
"^DD",366,366.05,3,0)
INSURANCE BUFFER^P355.33'^IBA(355.33,^0;4^Q
"^DD",366,366.05,3,3)
Enter the insurance buffer number.
"^DD",366,366.05,3,21,0)
^^1^1^3141216^
"^DD",366,366.05,3,21,1,0)
Insurance buffer number the received SSVI insurance data was inserted in.
"^DD",366,366.05,3,"DT")
3141216
"^DD",366,366.05,4,0)
ERROR MSG^F^^1;1^K:$L(X)>200!($L(X)<1) X
"^DD",366,366.05,4,3)
Enter 1-200 characters to describe error.
"^DD",366,366.05,4,21,0)
^^1^1^3150313^
"^DD",366,366.05,4,21,1,0)
This is the error from the RPC call.
"^DD",366,366.05,4,"DT")
3150313
"^DD",366.1,366.1,0)
FIELD^^1^3
"^DD",366.1,366.1,0,"DDA")
N
"^DD",366.1,366.1,0,"DT")
3150812
"^DD",366.1,366.1,0,"IX","B",366.1,.01)

"^DD",366.1,366.1,0,"NM","IB INSURANCE INCONSISTENT DATA")

"^DD",366.1,366.1,.01,0)
NAME^P2'X^DPT(^0;1^Q
"^DD",366.1,366.1,.01,1,0)
^.1
"^DD",366.1,366.1,.01,1,1,0)
366.1^B
"^DD",366.1,366.1,.01,1,1,1)
S ^IBCN(366.1,"B",$E(X,1,30),DA)=""
"^DD",366.1,366.1,.01,1,1,2)
K ^IBCN(366.1,"B",$E(X,1,30),DA)
"^DD",366.1,366.1,.01,3)
Enter the name of the Patient.
"^DD",366.1,366.1,.01,21,0)
^^2^2^3141217^
"^DD",366.1,366.1,.01,21,1,0)
This field contains the name of the patient for which the inconsistencies 
"^DD",366.1,366.1,.01,21,2,0)
exist.  This is a DINUM pointer to the PATIENT file.
"^DD",366.1,366.1,.01,"DT")
3150408
"^DD",366.1,366.1,1,0)
INSURANCE^366.16A^^1;0
"^DD",366.1,366.1,1,21,0)
^^1^1^3150814^
"^DD",366.1,366.1,1,21,1,0)
Patient insurances with inconsistencies.
"^DD",366.1,366.16,0)
INSURANCE SUB-FIELD^^2^3
"^DD",366.1,366.16,0,"DT")
3150812
"^DD",366.1,366.16,0,"IX","B",366.16,.01)

"^DD",366.1,366.16,0,"NM","INSURANCE")

"^DD",366.1,366.16,0,"UP")
366.1
"^DD",366.1,366.16,.01,0)
INSURANCE^F^^0;1^K:$L(X)>45!($L(X)<3) X
"^DD",366.1,366.16,.01,1,0)
^.1
"^DD",366.1,366.16,.01,1,1,0)
366.16^B
"^DD",366.1,366.16,.01,1,1,1)
S ^IBCN(366.1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",366.1,366.16,.01,1,1,2)
K ^IBCN(366.1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",366.1,366.16,.01,3)
Enter the Patient insurance. Answer must be 3-45 characters in length.
"^DD",366.1,366.16,.01,21,0)
^^1^1^3150823^
"^DD",366.1,366.16,.01,21,1,0)
This is the patient insurance which has inconsistencies.
"^DD",366.1,366.16,.01,"DT")
3150823
"^DD",366.1,366.16,1,0)
INCONSISTENCIES^F^^0;2^K:$L(X)>80!($L(X)<1) X
"^DD",366.1,366.16,1,3)
Enter list of inconsistencies. Answer must be 1 to 80 characters.
"^DD",366.1,366.16,1,21,0)
^^1^1^3150814^
"^DD",366.1,366.16,1,21,1,0)
This is a list of inconsistencies found.
"^DD",366.1,366.16,1,"DT")
3150814
"^DD",366.1,366.16,2,0)
DATE ADDED^D^^0;3^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",366.1,366.16,2,3)
Enter the current Date and time,  time is optional.
"^DD",366.1,366.16,2,21,0)
^^1^1^3150824^
"^DD",366.1,366.16,2,21,1,0)
Date and time, time is optional,  the entry was added to the file.
"^DD",366.1,366.16,2,"DT")
3150824
"^DD",366.2,366.2,0)
FIELD^^50^8
"^DD",366.2,366.2,0,"DDA")
N
"^DD",366.2,366.2,0,"DT")
3141024
"^DD",366.2,366.2,0,"IX","B",366.2,.01)

"^DD",366.2,366.2,0,"NM","IB INSURANCE CONSISTENCY ELEMENTS")

"^DD",366.2,366.2,.001,0)
NUMBER^NJ3,0^^ ^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1.N) X
"^DD",366.2,366.2,.001,3)
Type a number between 1 and 999, 0 decimal digits.
"^DD",366.2,366.2,.001,21,0)
^^5^5^3141024^
"^DD",366.2,366.2,.001,21,1,0)
This field contains the internal entry number of the inconsistency. This 
"^DD",366.2,366.2,.001,21,2,0)
number is used by the consistency checker routines to determine what 
"^DD",366.2,366.2,.001,21,3,0)
action needs to be taken. Entries in this file must not be added nor 
"^DD",366.2,366.2,.001,21,4,0)
altered in any way as this would cause the consistency checker 
"^DD",366.2,366.2,.001,21,5,0)
functionality to act incorrectly.
"^DD",366.2,366.2,.001,"DT")
3141024
"^DD",366.2,366.2,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",366.2,366.2,.01,1,0)
^.1
"^DD",366.2,366.2,.01,1,1,0)
366.2^B
"^DD",366.2,366.2,.01,1,1,1)
S ^IBCN(366.2,"B",$E(X,1,30),DA)=""
"^DD",366.2,366.2,.01,1,1,2)
K ^IBCN(366.2,"B",$E(X,1,30),DA)
"^DD",366.2,366.2,.01,3)
Answer must be 3-30 characters in length.
"^DD",366.2,366.2,.01,21,0)
^^4^4^3141216^
"^DD",366.2,366.2,.01,21,1,0)
This field contains the name of the inconsistency that will be reported 
"^DD",366.2,366.2,.01,21,2,0)
when utilizing various insurance and consistency checker options.  This 
"^DD",366.2,366.2,.01,21,3,0)
name will appear on the screen and in a mail message should the 
"^DD",366.2,366.2,.01,21,4,0)
inconsistency not be reported.
"^DD",366.2,366.2,.01,"DT")
3141216
"^DD",366.2,366.2,2,0)
TEXT^F^^0;2^K:$L(X)>70!($L(X)<2) X
"^DD",366.2,366.2,2,3)
Answer must be 2-70 characters in length.
"^DD",366.2,366.2,2,21,0)
^^2^2^3141024^
"^DD",366.2,366.2,2,21,1,0)
Enter the text for this inconsistency.  This text will display on the 
"^DD",366.2,366.2,2,21,2,0)
inconsistent data reports. It describes how the inconsistency occurs.
"^DD",366.2,366.2,2,"DT")
3141024
"^DD",366.2,366.2,3,0)
KEY REQUIRED^S^0:NO KEY REQUIRED;1:ELIGIBILITY VERIFIED;2:MONEY VERIFIED;3:SERVICE VERIFIED;4:KEY ALWAYS REQUIRED;5:IB SUPERVISOR KEY REQUIRED;^0;3^Q
"^DD",366.2,366.2,3,3)
Enter the number that corresponds to the KEY REQUIRED.
"^DD",366.2,366.2,3,21,0)
^^1^1^3141217^
"^DD",366.2,366.2,3,21,1,0)
This is the type of key required to be able to edit the field.
"^DD",366.2,366.2,3,"DT")
3150129
"^DD",366.2,366.2,4,0)
SET INSURANCE DR STRING^S^1:YES;0:NO;^0;4^Q
"^DD",366.2,366.2,4,3)
Enter '1' if related to INSURANCE or '0' if not related.
"^DD",366.2,366.2,4,21,0)
^^10^10^3141218^
"^DD",366.2,366.2,4,21,1,0)
If the data required to clean up this inconsistency requires editing of 
"^DD",366.2,366.2,4,21,2,0)
data that is related to INSURANCE, this field should be answered yes. For 
"^DD",366.2,366.2,4,21,3,0)
example, if the inconsistency is 'INSURANCE TYPE' this field would be yes 
"^DD",366.2,366.2,4,21,4,0)
because this prompt is required in order to select a patient's INSURANCE. 
"^DD",366.2,366.2,4,21,5,0)
If this field is answered yes, all INSURANCE-related questions will also 
"^DD",366.2,366.2,4,21,6,0)
be asked.
"^DD",366.2,366.2,4,21,7,0)
 
"^DD",366.2,366.2,4,21,8,0)
Data in this field must not be altered in any way or it could cause 
"^DD",366.2,366.2,4,21,9,0)
inaccurate patient data to be entered on your system. This data is 
"^DD",366.2,366.2,4,21,10,0)
distributed and maintained by the IB package.
"^DD",366.2,366.2,4,"DT")
3141218
"^DD",366.2,366.2,5,0)
CHECK/DON'T CHECK^S^0:CHECK;1:DON'T CHECK;^0;5^Q
"^DD",366.2,366.2,5,3)
Enter '0' if you want to check this locally or '1' if not.
"^DD",366.2,366.2,5,21,0)
^^11^11^3150129^
"^DD",366.2,366.2,5,21,1,0)
Answer '0' if you want to check this inconsistency locally or '1' if you 
"^DD",366.2,366.2,5,21,2,0)
wish to ignore it whenever found.
"^DD",366.2,366.2,5,21,3,0)
 
"^DD",366.2,366.2,5,21,4,0)
Most checks provide the ability for them to be turned off locally,
"^DD",366.2,366.2,5,21,5,0)
however, there are some consistency checks ('INSURANCE TYPE', for example)
"^DD",366.2,366.2,5,21,6,0)
which will always be turned on regardless of how this prompt is answered.
"^DD",366.2,366.2,5,21,7,0)
 
"^DD",366.2,366.2,5,21,8,0)
This field can be edited at the site level.
"^DD",366.2,366.2,5,21,9,0)
 
"^DD",366.2,366.2,5,21,10,0)
The consistency checks that will always be on are 'INSURANCE PROMPT 
"^DD",366.2,366.2,5,21,11,0)
UNANSWERED'.
"^DD",366.2,366.2,5,"DT")
3150129
"^DD",366.2,366.2,6,0)
USE FOR HL7 CHECK^S^0:NO;1:YES;^0;6^Q
"^DD",366.2,366.2,6,3)
Enter '1' if used for HL7 check or '0' if not.
"^DD",366.2,366.2,6,21,0)
^^1^1^3141216^
"^DD",366.2,366.2,6,21,1,0)
This indicates if the element is to be used for HL7 check.
"^DD",366.2,366.2,6,"DT")
3141216
"^DD",366.2,366.2,50,0)
DESCRIPTION^366.21^^D;0
"^DD",366.2,366.21,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",366.2,366.21,0,"DT")
3141024
"^DD",366.2,366.21,0,"NM","DESCRIPTION")

"^DD",366.2,366.21,0,"UP")
366.2
"^DD",366.2,366.21,.01,0)
DESCRIPTION^Wx^^0;1
"^DD",366.2,366.21,.01,21,0)
^^3^3^3141024^
"^DD",366.2,366.21,.01,21,1,0)
This field contains a full description of how the inconsistency is 
"^DD",366.2,366.21,.01,21,2,0)
created.  This data is provided and maintained by the IB package and 
"^DD",366.2,366.21,.01,21,3,0)
should not be altered at the site level.
"^DD",366.2,366.21,.01,"DT")
3141024
"^DIC",366,366,0)
IB SSVI PIN/HL7 PIVOT^366
"^DIC",366,366,0,"GL")
^IBCN(366,
"^DIC",366,366,"%",0)
^1.005^^
"^DIC",366,366,"%D",0)
^1.001^2^2^3150121^^^^
"^DIC",366,366,"%D",1,0)
This file is used to keep track of sending the patient's insurance 
"^DIC",366,366,"%D",2,0)
information to any treating facilities the patient has on file.
"^DIC",366,"B","IB SSVI PIN/HL7 PIVOT",366)

"^DIC",366.1,366.1,0)
IB INSURANCE INCONSISTENT DATA^366.1
"^DIC",366.1,366.1,0,"GL")
^IBCN(366.1,
"^DIC",366.1,366.1,"%",0)
^1.005^^
"^DIC",366.1,366.1,"%D",0)
^^2^2^3141217^
"^DIC",366.1,366.1,"%D",1,0)
This file holds the inconsistencies found when running the Consistency
"^DIC",366.1,366.1,"%D",2,0)
Checker on the Patients' Insurances.
"^DIC",366.1,"B","IB INSURANCE INCONSISTENT DATA",366.1)

"^DIC",366.2,366.2,0)
IB INSURANCE CONSISTENCY ELEMENTS^366.2
"^DIC",366.2,366.2,0,"GL")
^IBCN(366.2,
"^DIC",366.2,366.2,"%",0)
^1.005^^
"^DIC",366.2,366.2,"%D",0)
^^3^3^3141217^
"^DIC",366.2,366.2,"%D",1,0)
This file contains the data elements that must be verified before 
"^DIC",366.2,366.2,"%D",2,0)
sending the insurance information to the patient's other treating
"^DIC",366.2,366.2,"%D",3,0)
facilities.
"^DIC",366.2,"B","IB INSURANCE CONSISTENCY ELEMENTS",366.2)

**INSTALL NAME**
IB*2.0*525
"BLD",9525,0)
IB*2.0*525^INTEGRATED BILLING^0^3160309^y
"BLD",9525,1,0)
^^5^5^3150209^^^^
"BLD",9525,1,1,0)
This patch implements changes to VistA's Integrated Billing (IB) module 
"BLD",9525,1,2,0)
as requested by the Veterans Health Administration (VHA) Chief Business 
"BLD",9525,1,3,0)
Office (CBO) eBusiness Solutions Department to comply with the 
"BLD",9525,1,4,0)
legislative changes mandated by the Health Insurance Portability and 
"BLD",9525,1,5,0)
Accountability Act of 1996 (HIPAA).
"BLD",9525,4,0)
^9.64PA^399^1
"BLD",9525,4,399,0)
399
"BLD",9525,4,399,2,0)
^9.641^399^1
"BLD",9525,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",9525,4,399,2,399,1,0)
^9.6411^479^9
"BLD",9525,4,399,2,399,1,471,0)
PRIMARY INSURANCE HPID
"BLD",9525,4,399,2,399,1,472,0)
SECONDARY INSURANCE HPID
"BLD",9525,4,399,2,399,1,473,0)
TERTIARY INSURANCE HPID
"BLD",9525,4,399,2,399,1,474,0)
PRIMARY HPID EDIT DATE/TIME
"BLD",9525,4,399,2,399,1,475,0)
PRIMARY HPID CHANGES MADE BY
"BLD",9525,4,399,2,399,1,476,0)
SECONDARY HPID EDIT DATE/TIME
"BLD",9525,4,399,2,399,1,477,0)
SECONDARY HPID CHANGES MADE BY
"BLD",9525,4,399,2,399,1,478,0)
TERTIARY HPID EDIT DATE/TIME
"BLD",9525,4,399,2,399,1,479,0)
TERTIARY HPID CHANGES MADE BY
"BLD",9525,4,399,222)
y^n^p^^^^n^^n
"BLD",9525,4,399,224)

"BLD",9525,4,"APDD",399,399)

"BLD",9525,4,"APDD",399,399,471)

"BLD",9525,4,"APDD",399,399,472)

"BLD",9525,4,"APDD",399,399,473)

"BLD",9525,4,"APDD",399,399,474)

"BLD",9525,4,"APDD",399,399,475)

"BLD",9525,4,"APDD",399,399,476)

"BLD",9525,4,"APDD",399,399,477)

"BLD",9525,4,"APDD",399,399,478)

"BLD",9525,4,"APDD",399,399,479)

"BLD",9525,4,"B",399,399)

"BLD",9525,6.3)
105
"BLD",9525,"ABPKG")
n
"BLD",9525,"KRN",0)
^9.67PA^779.2^20
"BLD",9525,"KRN",.4,0)
.4
"BLD",9525,"KRN",.401,0)
.401
"BLD",9525,"KRN",.402,0)
.402
"BLD",9525,"KRN",.403,0)
.403
"BLD",9525,"KRN",.5,0)
.5
"BLD",9525,"KRN",.84,0)
.84
"BLD",9525,"KRN",3.6,0)
3.6
"BLD",9525,"KRN",3.8,0)
3.8
"BLD",9525,"KRN",9.2,0)
9.2
"BLD",9525,"KRN",9.8,0)
9.8
"BLD",9525,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9525,"KRN",9.8,"NM",1,0)
IBCNHPR^^0^B7519738
"BLD",9525,"KRN",9.8,"NM",2,0)
IBCNHPR1^^0^B6873066
"BLD",9525,"KRN",9.8,"NM",3,0)
IBCNHPR2^^0^B6925867
"BLD",9525,"KRN",9.8,"NM","B","IBCNHPR",1)

"BLD",9525,"KRN",9.8,"NM","B","IBCNHPR1",2)

"BLD",9525,"KRN",9.8,"NM","B","IBCNHPR2",3)

"BLD",9525,"KRN",19,0)
19
"BLD",9525,"KRN",19,"NM",0)
^9.68A^6^3
"BLD",9525,"KRN",19,"NM",4,0)
IBCN HPID CLAIM RPT^^0
"BLD",9525,"KRN",19,"NM",5,0)
IBCN INSURANCE MGMT MENU^^2
"BLD",9525,"KRN",19,"NM",6,0)
IB OUTPUT PATIENT REPORT MENU^^2
"BLD",9525,"KRN",19,"NM","B","IB OUTPUT PATIENT REPORT MENU",6)

"BLD",9525,"KRN",19,"NM","B","IBCN HPID CLAIM RPT",4)

"BLD",9525,"KRN",19,"NM","B","IBCN INSURANCE MGMT MENU",5)

"BLD",9525,"KRN",19.1,0)
19.1
"BLD",9525,"KRN",101,0)
101
"BLD",9525,"KRN",409.61,0)
409.61
"BLD",9525,"KRN",771,0)
771
"BLD",9525,"KRN",779.2,0)
779.2
"BLD",9525,"KRN",870,0)
870
"BLD",9525,"KRN",8989.51,0)
8989.51
"BLD",9525,"KRN",8989.52,0)
8989.52
"BLD",9525,"KRN",8994,0)
8994
"BLD",9525,"KRN","B",.4,.4)

"BLD",9525,"KRN","B",.401,.401)

"BLD",9525,"KRN","B",.402,.402)

"BLD",9525,"KRN","B",.403,.403)

"BLD",9525,"KRN","B",.5,.5)

"BLD",9525,"KRN","B",.84,.84)

"BLD",9525,"KRN","B",3.6,3.6)

"BLD",9525,"KRN","B",3.8,3.8)

"BLD",9525,"KRN","B",9.2,9.2)

"BLD",9525,"KRN","B",9.8,9.8)

"BLD",9525,"KRN","B",19,19)

"BLD",9525,"KRN","B",19.1,19.1)

"BLD",9525,"KRN","B",101,101)

"BLD",9525,"KRN","B",409.61,409.61)

"BLD",9525,"KRN","B",771,771)

"BLD",9525,"KRN","B",779.2,779.2)

"BLD",9525,"KRN","B",870,870)

"BLD",9525,"KRN","B",8989.51,8989.51)

"BLD",9525,"KRN","B",8989.52,8989.52)

"BLD",9525,"KRN","B",8994,8994)

"BLD",9525,"QUES",0)
^9.62^^
"BLD",9525,"REQB",0)
^9.611^1^1
"BLD",9525,"REQB",1,0)
IB*2.0*516^1
"BLD",9525,"REQB","B","IB*2.0*516",1)

"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,471)

"FIA",399,399,472)

"FIA",399,399,473)

"FIA",399,399,474)

"FIA",399,399,475)

"FIA",399,399,476)

"FIA",399,399,477)

"FIA",399,399,478)

"FIA",399,399,479)

"KRN",19,2323,-1)
2^6
"KRN",19,2323,0)
IB OUTPUT PATIENT REPORT MENU^Patient Billing Reports Menu^^M^66481^^^^^^^49
"KRN",19,2323,10,0)
^19.01IP^33^33
"KRN",19,2323,10,33,0)
11576^HPID
"KRN",19,2323,10,33,"^")
IBCN HPID CLAIM RPT
"KRN",19,2323,"U")
PATIENT BILLING REPORTS MENU
"KRN",19,2436,-1)
2^5
"KRN",19,2436,0)
IBCN INSURANCE MGMT MENU^Patient Insurance Menu^^M^123457057^^^^^^^49^
"KRN",19,2436,10,0)
^19.01IP^44^41
"KRN",19,2436,10,38,0)
11576^HPID^
"KRN",19,2436,10,38,"^")
IBCN HPID CLAIM RPT
"KRN",19,2436,"U")
PATIENT INSURANCE MENU
"KRN",19,11576,-1)
0^4
"KRN",19,11576,0)
IBCN HPID CLAIM RPT^Manually Added HPIDs to Billing Claim Report^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,11576,1,0)
^^1^1^3150209^
"KRN",19,11576,1,1,0)
Manually Added HPIDs to Billing Claim Report
"KRN",19,11576,25)
IBCNHPR
"KRN",19,11576,"U")
MANUALLY ADDED HPIDS TO BILLIN
"MBREQ")
1
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",49,-1)
1^1
"PKG",49,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",49,20,0)
^9.402P^1^1
"PKG",49,20,1,0)
2^^IBAXDR
"PKG",49,20,1,1)

"PKG",49,20,"B",2,1)

"PKG",49,22,0)
^9.49I^1^1
"PKG",49,22,1,0)
2.0^2940321^2960627
"PKG",49,22,1,"PAH",1,0)
525^3160309^123457057
"PKG",49,22,1,"PAH",1,1,0)
^^5^5^3160309
"PKG",49,22,1,"PAH",1,1,1,0)
This patch implements changes to VistA's Integrated Billing (IB) module 
"PKG",49,22,1,"PAH",1,1,2,0)
as requested by the Veterans Health Administration (VHA) Chief Business 
"PKG",49,22,1,"PAH",1,1,3,0)
Office (CBO) eBusiness Solutions Department to comply with the 
"PKG",49,22,1,"PAH",1,1,4,0)
legislative changes mandated by the Health Insurance Portability and 
"PKG",49,22,1,"PAH",1,1,5,0)
Accountability Act of 1996 (HIPAA).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IBCNHPR")
0^1^B7519738
"RTN","IBCNHPR",1,0)
IBCNHPR ;ALB/CJS - HPID ADDED TO BILLING CLAIM REPORT (DRIVER) ;15-DEC-14
"RTN","IBCNHPR",2,0)
 ;;2.0;INTEGRATED BILLING;**525**;21-MAR-94;Build 105
"RTN","IBCNHPR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNHPR",4,0)
 ;
"RTN","IBCNHPR",5,0)
EN ; Describe report 
"RTN","IBCNHPR",6,0)
 N I,IBBEG,IBEND,IBOUT
"RTN","IBCNHPR",7,0)
 W !!?5,"This report will generate a list of HPID numbers that have been added",!?5,"directly to claims."
"RTN","IBCNHPR",8,0)
 W !!?5,"Please select the date range within which the HPIDs were entered."
"RTN","IBCNHPR",9,0)
 ;
"RTN","IBCNHPR",10,0)
 ; Prompt user to select date range
"RTN","IBCNHPR",11,0)
 ;
"RTN","IBCNHPR",12,0)
 ; Output from user selections:
"RTN","IBCNHPR",13,0)
 ;
"RTN","IBCNHPR",14,0)
 ; IBBEG -- beginning date of report
"RTN","IBCNHPR",15,0)
 ; IBEND -- ending date of report
"RTN","IBCNHPR",16,0)
 ; IBOUT -- (E)xcel or (R)eport output
"RTN","IBCNHPR",17,0)
 ;
"RTN","IBCNHPR",18,0)
 S IBBEG=$$DATES("Beginning") G:'IBBEG ENQ
"RTN","IBCNHPR",19,0)
 S IBEND=$$DATES("Ending",IBBEG) G:'IBEND ENQ
"RTN","IBCNHPR",20,0)
 S IBOUT=$$OUT() G:IBOUT="" ENQ  W !!
"RTN","IBCNHPR",21,0)
 ;
"RTN","IBCNHPR",22,0)
DEVICE ; Ask user to select device
"RTN","IBCNHPR",23,0)
 N %ZIS,POP,ZTDESC,ZTRTN,ZTSAVE,ZTQUEUED,ZTREQ
"RTN","IBCNHPR",24,0)
 ;
"RTN","IBCNHPR",25,0)
 W:$G(IBOUT)="R" !!,"*** You will need a 132 column printer for this report. ***",!
"RTN","IBCNHPR",26,0)
 S %ZIS="QM" D ^%ZIS G:POP ENQ
"RTN","IBCNHPR",27,0)
 I $D(IO("Q")) D  G ENQ
"RTN","IBCNHPR",28,0)
 .S ZTRTN="EN^IBCNHPR1",ZTDESC="IB - HPID ADDED TO BILLING CLAIM REPORT"
"RTN","IBCNHPR",29,0)
 .F I="^TMP(""IBHPID"",$J,","IBBEG","IBEND","IBOUT" S ZTSAVE(I)=""
"RTN","IBCNHPR",30,0)
 .D ^%ZTLOAD K IO("Q") D HOME^%ZIS
"RTN","IBCNHPR",31,0)
 .W !!,$S($D(ZTSK):"This job has been queued as task #"_ZTSK_".",1:"Unable to queue this job.")
"RTN","IBCNHPR",32,0)
 .K ZTSK,IO("Q")
"RTN","IBCNHPR",33,0)
 ;
"RTN","IBCNHPR",34,0)
 ; Compile and print report
"RTN","IBCNHPR",35,0)
 ;
"RTN","IBCNHPR",36,0)
 U IO D EN^IBCNHPR1
"RTN","IBCNHPR",37,0)
 ;
"RTN","IBCNHPR",38,0)
ENQ K DIRUT,DIROUT,DUOUT,DTOUT,I,IBBEG,IBEND,IBOUT
"RTN","IBCNHPR",39,0)
 Q
"RTN","IBCNHPR",40,0)
 ;
"RTN","IBCNHPR",41,0)
DATES(LABEL,IBBEG) ;
"RTN","IBCNHPR",42,0)
 N DIR,X,Y,DIRUT,DUOUT,I,IBARR,IBX,IBB,IBD
"RTN","IBCNHPR",43,0)
 S IBX=""
"RTN","IBCNHPR",44,0)
 I '+$G(IBBEG) D
"RTN","IBCNHPR",45,0)
 .F I="E","F","G" S IBARR(+$O(^DGCR(399,I,0)))=""
"RTN","IBCNHPR",46,0)
 .S IBB=+$O(IBARR(0))
"RTN","IBCNHPR",47,0)
 S IBB=$P($S(+$G(IBBEG):IBBEG,+$G(IBB):IBB,1:+$O(^DGCR(399,"APD",0))),"."),IBD=$S(+$G(IBBEG):DT,1:IBB)
"RTN","IBCNHPR",48,0)
 S DIR("?")="Enter the "_LABEL_" date to include in the report."
"RTN","IBCNHPR",49,0)
 S DIR("?",1)="Enter a date from the date of the first Bill/Claim HPID entry to today."
"RTN","IBCNHPR",50,0)
 S DIR("A")=LABEL_" Date",DIR("B")=$$FMTE^XLFDT(IBD)
"RTN","IBCNHPR",51,0)
 S DIR(0)="DO^"_IBB_":"_DT_":EX" D ^DIR S IBX=Y I $D(DIRUT)!$D(DUOUT) S IBX=""
"RTN","IBCNHPR",52,0)
 Q IBX
"RTN","IBCNHPR",53,0)
 ;
"RTN","IBCNHPR",54,0)
OUT() ;
"RTN","IBCNHPR",55,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBCNHPR",56,0)
 W !
"RTN","IBCNHPR",57,0)
 S DIR(0)="SA^E:Excel;R:Report"
"RTN","IBCNHPR",58,0)
 S DIR("A")="(E)xcel Format or (R)eport Format: "
"RTN","IBCNHPR",59,0)
 S DIR("B")="Report"
"RTN","IBCNHPR",60,0)
 D ^DIR I $D(DIRUT) Q ""
"RTN","IBCNHPR",61,0)
 Q Y
"RTN","IBCNHPR1")
0^2^B6873066
"RTN","IBCNHPR1",1,0)
IBCNHPR1 ;ALB/CJS - HPID ADDED TO BILLING CLAIM REPORT (COMPILE) ;12-DEC-14
"RTN","IBCNHPR1",2,0)
V ;;2.0;INTEGRATED BILLING;**525**;21-MAR-94;Build 105
"RTN","IBCNHPR1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNHPR1",4,0)
 ;
"RTN","IBCNHPR1",5,0)
EN ; Queued Entry Point for Report.
"RTN","IBCNHPR1",6,0)
 ;  Required variable input:  IBBEG, IBEND, IBOUT
"RTN","IBCNHPR1",7,0)
 ;
"RTN","IBCNHPR1",8,0)
 N IBCLAIM,IBCNS,IBDATE,IBIND,IBSTA
"RTN","IBCNHPR1",9,0)
 ;
"RTN","IBCNHPR1",10,0)
 ; - compile report data
"RTN","IBCNHPR1",11,0)
 K ^TMP($J,"IBHP")
"RTN","IBCNHPR1",12,0)
 S IBBEG=$G(IBBEG)-.01,IBEND=$S('$G(IBEND):9999999,1:$P(IBEND,".")+.9)
"RTN","IBCNHPR1",13,0)
 S U="^",IBSTA=$P($$SITE^VASITE(),U,3)
"RTN","IBCNHPR1",14,0)
 ;
"RTN","IBCNHPR1",15,0)
 ; - Loop through all HPID EDIT DATE/TIME fields within date range
"RTN","IBCNHPR1",16,0)
 F IBIND="E","F","G" D
"RTN","IBCNHPR1",17,0)
 .S IBDATE=+IBBEG F  S IBDATE=$O(^DGCR(399,IBIND,IBDATE)) Q:'IBDATE!(IBDATE>IBEND)  D
"RTN","IBCNHPR1",18,0)
 ..S IBCLAIM=0 F  S IBCLAIM=$O(^DGCR(399,IBIND,IBDATE,IBCLAIM)) Q:'IBCLAIM  I $D(^DGCR(399,IBCLAIM)),($$GET1^DIQ(399,IBCLAIM,.13)="AUTHORIZED") D GATH
"RTN","IBCNHPR1",19,0)
 ;
"RTN","IBCNHPR1",20,0)
PRINT ; - print report
"RTN","IBCNHPR1",21,0)
 D EN^IBCNHPR2(IBOUT)
"RTN","IBCNHPR1",22,0)
 K ^TMP($J,"IBHP")
"RTN","IBCNHPR1",23,0)
 ;
"RTN","IBCNHPR1",24,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCNHPR1",25,0)
 D ^%ZISC
"RTN","IBCNHPR1",26,0)
 K IBCLAIM,IBCNS,IBDATE,IBIND,IBSTA
"RTN","IBCNHPR1",27,0)
 Q
"RTN","IBCNHPR1",28,0)
 ;
"RTN","IBCNHPR1",29,0)
 ;
"RTN","IBCNHPR1",30,0)
GATH ; Gather all relevant data for a claim.
"RTN","IBCNHPR1",31,0)
 ;
"RTN","IBCNHPR1",32,0)
 ; Get Insurance Company ID
"RTN","IBCNHPR1",33,0)
 S IBCNS=$$GET1^DIQ(399,IBCLAIM,$S(IBIND="E":101,IBIND="F":102,IBIND="G":103,1:""),"I")
"RTN","IBCNHPR1",34,0)
 ;
"RTN","IBCNHPR1",35,0)
 ; - set final bill/claim info
"RTN","IBCNHPR1",36,0)
 S ^TMP($J,"IBHP",IBDATE,IBCLAIM,IBIND)=$$CLAIMINF(IBCLAIM)_U_$$COMPINF(IBCNS)
"RTN","IBCNHPR1",37,0)
 Q
"RTN","IBCNHPR1",38,0)
 ;
"RTN","IBCNHPR1",39,0)
 ;
"RTN","IBCNHPR1",40,0)
CLAIMINF(IBCLAIM) ; Return formatted Insurance Plan information.
"RTN","IBCNHPR1",41,0)
 ;  Input:  IBCLAIM  --  Pointer to the claim in file #399
"RTN","IBCNHPR1",42,0)
 ; Output:  patient name ^ last 4 SSN ^ insurance company name ^ HPID ^ station number-claim number ^ user name ^ date HPID added
"RTN","IBCNHPR1",43,0)
 ;
"RTN","IBCNHPR1",44,0)
 N IBNAME,IBPAT,IBSSN,IBINSNM,IBHPID,IBCLNM,IBUSER,IBHPDT
"RTN","IBCNHPR1",45,0)
 ;
"RTN","IBCNHPR1",46,0)
 S IBNAME=$$GET1^DIQ(399,IBCLAIM,.02)
"RTN","IBCNHPR1",47,0)
 S IBPAT=$$GET1^DIQ(399,IBCLAIM,.02,"I")
"RTN","IBCNHPR1",48,0)
 S IBSSN=$E($$GET1^DIQ(2,IBPAT,.09),6,9)
"RTN","IBCNHPR1",49,0)
 S IBINSNM=$$GET1^DIQ(399,IBCLAIM,$S(IBIND="E":101,IBIND="F":102,IBIND="G":103,1:""))
"RTN","IBCNHPR1",50,0)
 S IBHPID=$$GET1^DIQ(399,IBCLAIM,$S(IBIND="E":471,IBIND="F":472,IBIND="G":473,1:""))
"RTN","IBCNHPR1",51,0)
 S IBCLNM=$$GET1^DIQ(399,IBCLAIM,.01)
"RTN","IBCNHPR1",52,0)
 S IBUSER=$$GET1^DIQ(399,IBCLAIM,$S(IBIND="E":475,IBIND="F":477,IBIND="G":479,1:""))
"RTN","IBCNHPR1",53,0)
 S IBHPDT=$$GET1^DIQ(399,IBCLAIM,$S(IBIND="E":474,IBIND="F":476,IBIND="G":478,1:""),"I")
"RTN","IBCNHPR1",54,0)
 S IBHPDT=$$FMTE^XLFDT(IBHPDT,"5DZ")
"RTN","IBCNHPR1",55,0)
 Q IBNAME_U_IBSSN_U_IBINSNM_U_IBHPID_U_IBSTA_"-"_IBCLNM_U_IBUSER_U_IBHPDT
"RTN","IBCNHPR1",56,0)
 ;
"RTN","IBCNHPR1",57,0)
COMPINF(IBCNS) ; Return formatted Insurance Company information
"RTN","IBCNHPR1",58,0)
 ;  Input:  IBCNS  --  Pointer to the insurance company in file #36
"RTN","IBCNHPR1",59,0)
 ; Output:  professional ID ^ institutional ID
"RTN","IBCNHPR1",60,0)
 ;
"RTN","IBCNHPR1",61,0)
 N IBPID,IBIID
"RTN","IBCNHPR1",62,0)
 ;
"RTN","IBCNHPR1",63,0)
 S IBPID=$$GET1^DIQ(36,IBCNS,3.02)
"RTN","IBCNHPR1",64,0)
 S IBIID=$$GET1^DIQ(36,IBCNS,3.04)
"RTN","IBCNHPR1",65,0)
 Q IBPID_U_IBIID
"RTN","IBCNHPR2")
0^3^B6925867
"RTN","IBCNHPR2",1,0)
IBCNHPR2 ;ALB/CJS - HPID ADDED TO BILLING CLAIM REPORT (PRINT) ;15-DEC-14
"RTN","IBCNHPR2",2,0)
 ;;2.0;INTEGRATED BILLING;**525**;21-MAR-94;Build 105
"RTN","IBCNHPR2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCNHPR2",4,0)
 ;
"RTN","IBCNHPR2",5,0)
 ; Print the report.
"RTN","IBCNHPR2",6,0)
 ;
"RTN","IBCNHPR2",7,0)
 ; Input Parameter:  IBOUT = "R" for Report format or "E" for Excel format (defaults to "R")
"RTN","IBCNHPR2",8,0)
 ;  Required Input:
"RTN","IBCNHPR2",9,0)
 ;                   Global print array ^TMP($J,"IBHP",HPID edit date,Bill/Claim IEN,HPID edit index)=
"RTN","IBCNHPR2",10,0)
 ; patient name^last 4 SSN^insurance company name^HPID^station number-claim number^user name^date HPID added^professional ID^institutional ID
"RTN","IBCNHPR2",11,0)
 ; 
"RTN","IBCNHPR2",12,0)
EN(IBOUT) N %,IBHDT,IBI,IBJ,IBK,IBLN,IBPAG,IBQUIT
"RTN","IBCNHPR2",13,0)
 ;
"RTN","IBCNHPR2",14,0)
 I '$D(^TMP($J,"IBHP")) W !,"*** No claim-level HPIDs added within date range ***" D PAUSE G END
"RTN","IBCNHPR2",15,0)
 ;
"RTN","IBCNHPR2",16,0)
 I "^R^E^"'[(U_$G(IBOUT)_U) S IBOUT="R"
"RTN","IBCNHPR2",17,0)
 S (IBI,IBJ,IBK,IBQUIT,IBPAG)=0
"RTN","IBCNHPR2",18,0)
 S IBLN=""
"RTN","IBCNHPR2",19,0)
 D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12))
"RTN","IBCNHPR2",20,0)
 ;
"RTN","IBCNHPR2",21,0)
 ;Excel header
"RTN","IBCNHPR2",22,0)
 I IBOUT="E" D PHDL
"RTN","IBCNHPR2",23,0)
 ;
"RTN","IBCNHPR2",24,0)
 ;Report header
"RTN","IBCNHPR2",25,0)
 I IBOUT="R" D HDR
"RTN","IBCNHPR2",26,0)
 ;
"RTN","IBCNHPR2",27,0)
 ;Data output
"RTN","IBCNHPR2",28,0)
 F  S IBI=$O(^TMP($J,"IBHP",IBI)) Q:'IBI  D  Q:IBQUIT
"RTN","IBCNHPR2",29,0)
 .S IBJ=0 F  S IBJ=$O(^TMP($J,"IBHP",IBI,IBJ)) Q:'IBJ  D  Q:IBQUIT
"RTN","IBCNHPR2",30,0)
 ..S IBK=0 F  S IBK=$O(^TMP($J,"IBHP",IBI,IBJ,IBK)) Q:IBK=""  S IBLN=$G(^(IBK)) D  Q:IBQUIT
"RTN","IBCNHPR2",31,0)
 ...I IBOUT="E" W !,IBLN Q
"RTN","IBCNHPR2",32,0)
 ...I $Y>(IOSL-4) D PAUSE Q:IBQUIT  D HDR
"RTN","IBCNHPR2",33,0)
 ...D LINE
"RTN","IBCNHPR2",34,0)
 ;
"RTN","IBCNHPR2",35,0)
 I 'IBQUIT D PAUSE
"RTN","IBCNHPR2",36,0)
 ;
"RTN","IBCNHPR2",37,0)
END K IBI,IBJ,IBK,IBLN,IBQUIT,IBPAG,IBHDT
"RTN","IBCNHPR2",38,0)
 Q
"RTN","IBCNHPR2",39,0)
 ;
"RTN","IBCNHPR2",40,0)
 ;
"RTN","IBCNHPR2",41,0)
HDR ; Print header
"RTN","IBCNHPR2",42,0)
 I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
"RTN","IBCNHPR2",43,0)
 S IBPAG=IBPAG+1
"RTN","IBCNHPR2",44,0)
 W !,"MANUALLY ADDED HPIDs TO BILLING CLAIM REPORT"
"RTN","IBCNHPR2",45,0)
 W ?IOM-34,IBHDT,?IOM-10,"Page: ",IBPAG
"RTN","IBCNHPR2",46,0)
 ;
"RTN","IBCNHPR2",47,0)
 ; - sub-header
"RTN","IBCNHPR2",48,0)
 W !!,"PT NAME",?21,"SSN",?27,"PAYER",?47,"HPID",?59,"CLAIM #",?72,"USER NAME",?93,"DATE HPID ADDED"
"RTN","IBCNHPR2",49,0)
 W ?110,"PROF ID",?121,"INST ID"
"RTN","IBCNHPR2",50,0)
 W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCNHPR2",51,0)
 Q
"RTN","IBCNHPR2",52,0)
 ;
"RTN","IBCNHPR2",53,0)
LINE ; Print claim information.
"RTN","IBCNHPR2",54,0)
 W !,$E($P(IBLN,U),1,18),?21,$P(IBLN,U,2),?27,$E($P(IBLN,U,3),1,18),?47,$P(IBLN,U,4),?59,$E($P(IBLN,U,5),1,11)
"RTN","IBCNHPR2",55,0)
 W ?72,$E($P(IBLN,U,6),1,18),?94,$E($P(IBLN,U,7),1,10),?110,$E($P(IBLN,U,8),1,10),?121,$E($P(IBLN,U,9),1,10)
"RTN","IBCNHPR2",56,0)
 Q
"RTN","IBCNHPR2",57,0)
 ;
"RTN","IBCNHPR2",58,0)
PAUSE ; Pause for screen output.
"RTN","IBCNHPR2",59,0)
 N IBJJ,DIR,DIRUT,DTOUT,DUOUT
"RTN","IBCNHPR2",60,0)
 Q:$E(IOST,1,2)'["C-"
"RTN","IBCNHPR2",61,0)
 ;F IBJJ=$Y:1:(IOSL-7) W !   ; IB*2.0*525 - CJS - Fix scrolling problem
"RTN","IBCNHPR2",62,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBCNHPR2",63,0)
 Q
"RTN","IBCNHPR2",64,0)
 ;
"RTN","IBCNHPR2",65,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBCNHPR2",66,0)
 N X
"RTN","IBCNHPR2",67,0)
 S X="Patient Name^SSN^Payer^HPID^Claim Number^User Name^Date HPID Added^"
"RTN","IBCNHPR2",68,0)
 S X=X_"Professional ID^Institutional ID"
"RTN","IBCNHPR2",69,0)
 W !,X
"RTN","IBCNHPR2",70,0)
 Q
"VER")
8.0^22.0
"^DD",399,399,471,0)
PRIMARY INSURANCE HPID^NJ10,0X^^M1;13^K:+X'=X!(X>9999999999)!(X<1000000000)!(X?.E1"."1N.N)!$$HOD^IBCNHUT1(X) X
"^DD",399,399,471,1,0)
^.1
"^DD",399,399,471,1,1,0)
^^TRIGGER^399^474
"^DD",399,399,471,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(399,471,1,1,1.4)
"^DD",399,399,471,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"MP")),DIV=X S $P(^("MP"),U,3)=DIV,DIH=399,DIG=474 D ^DICR
"^DD",399,399,471,1,1,2)
Q
"^DD",399,399,471,1,1,"%D",0)
^.101^2^2^3141125^^^
"^DD",399,399,471,1,1,"%D",1,0)
When the PRIMARY INSURANCE HPID field is changed, update the PRIMARY
"^DD",399,399,471,1,1,"%D",2,0)
HPID EDIT DATE/TIME Field (#474) with the current date and time.
"^DD",399,399,471,1,1,"CREATE VALUE")
NOW
"^DD",399,399,471,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,471,1,1,"FIELD")
PRIMARY HPID EDIT
"^DD",399,399,471,1,2,0)
^^TRIGGER^399^475
"^DD",399,399,471,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"") X ^DD(399,471,1,2,1.4)
"^DD",399,399,471,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"MP")),DIV=X S $P(^("MP"),U,4)=DIV,DIH=399,DIG=475 D ^DICR
"^DD",399,399,471,1,2,2)
Q
"^DD",399,399,471,1,2,"%D",0)
^^2^2^3141125^
"^DD",399,399,471,1,2,"%D",1,0)
When the PRIMARY INSURANCE HPID field is changed, update the PRIMARY HPID 
"^DD",399,399,471,1,2,"%D",2,0)
CHANGES MADE BY Field (#475) with the ID of the user making the change.
"^DD",399,399,471,1,2,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",399,399,471,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,471,1,2,"DT")
3141125
"^DD",399,399,471,1,2,"FIELD")
PRIMARY HPID CH
"^DD",399,399,471,3)
Enter a valid HPID.  Must be 10 digits, all numeric, no decimal.
"^DD",399,399,471,21,0)
^.001^1^1^3141118^^^^
"^DD",399,399,471,21,1,0)
This field is the HPID to be sent for the primary insurer on this claim.
"^DD",399,399,471,23,0)
^.001^1^1^3141118^^^
"^DD",399,399,471,23,1,0)
This field is the HPID to be sent for the primary insurer on this claim.
"^DD",399,399,471,"DT")
3140630
"^DD",399,399,472,0)
SECONDARY INSURANCE HPID^NJ10,0X^^M1;14^K:+X'=X!(X>9999999999)!(X<1000000000)!(X?.E1"."1N.N)!$$HOD^IBCNHUT1(X) X
"^DD",399,399,472,1,0)
^.1
"^DD",399,399,472,1,1,0)
^^TRIGGER^399^476
"^DD",399,399,472,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(399,472,1,1,1.4)
"^DD",399,399,472,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"MP")),DIV=X S $P(^("MP"),U,5)=DIV,DIH=399,DIG=476 D ^DICR
"^DD",399,399,472,1,1,2)
Q
"^DD",399,399,472,1,1,"%D",0)
^^2^2^3141125^
"^DD",399,399,472,1,1,"%D",1,0)
When the SECONDARY INSURANCE HPID field is changed, update the SECONDARY
"^DD",399,399,472,1,1,"%D",2,0)
HPID EDIT DATE/TIME Field (#476) with the current date and time.
"^DD",399,399,472,1,1,"CREATE VALUE")
NOW
"^DD",399,399,472,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,472,1,1,"FIELD")
SECONDARY HPID ED
"^DD",399,399,472,1,2,0)
^^TRIGGER^399^477
"^DD",399,399,472,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"") X ^DD(399,472,1,2,1.4)
"^DD",399,399,472,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"MP")),DIV=X S $P(^("MP"),U,6)=DIV,DIH=399,DIG=477 D ^DICR
"^DD",399,399,472,1,2,2)
Q
"^DD",399,399,472,1,2,"%D",0)
^^3^3^3141125^
"^DD",399,399,472,1,2,"%D",1,0)
When the SECONDARY INSURANCE HPID field is changed, update the SECONDARY 
"^DD",399,399,472,1,2,"%D",2,0)
HPID CHANGES MADE BY Field (#477) with the ID of the user making the 
"^DD",399,399,472,1,2,"%D",3,0)
change.
"^DD",399,399,472,1,2,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",399,399,472,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,472,1,2,"DT")
3141125
"^DD",399,399,472,1,2,"FIELD")
SECONDARY HPID C
"^DD",399,399,472,3)
Enter a valid HPID. Must be 10 digits, all numeric, no decimal.
"^DD",399,399,472,21,0)
^^1^1^3140630^
"^DD",399,399,472,21,1,0)
This field is the HPID to be sent for the secondary insurer on this claim.
"^DD",399,399,472,23,0)
^^1^1^3140630^
"^DD",399,399,472,23,1,0)
This field is the HPID to be sent for the secondary insurer on this claim.
"^DD",399,399,472,"DT")
3140630
"^DD",399,399,473,0)
TERTIARY INSURANCE HPID^NJ10,0X^^M1;15^K:+X'=X!(X>9999999999)!(X<1000000000)!(X?.E1"."1N.N)!$$HOD^IBCNHUT1(X) X
"^DD",399,399,473,1,0)
^.1
"^DD",399,399,473,1,1,0)
^^TRIGGER^399^478
"^DD",399,399,473,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV N %I,%H,% D NOW^%DTC S X=% X ^DD(399,473,1,1,1.4)
"^DD",399,399,473,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"MP")),DIV=X S $P(^("MP"),U,7)=DIV,DIH=399,DIG=478 D ^DICR
"^DD",399,399,473,1,1,2)
Q
"^DD",399,399,473,1,1,"%D",0)
^^2^2^3141125^
"^DD",399,399,473,1,1,"%D",1,0)
When the TERTIARY INSURANCE HPID field is changed, update the TERTIARY
"^DD",399,399,473,1,1,"%D",2,0)
HPID EDIT DATE/TIME Field (#478) with the current date and time.
"^DD",399,399,473,1,1,"CREATE VALUE")
NOW
"^DD",399,399,473,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,473,1,1,"FIELD")
TERTIARY HPID ED
"^DD",399,399,473,1,2,0)
^^TRIGGER^399^479
"^DD",399,399,473,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"MP")):^("MP"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"") X ^DD(399,473,1,2,1.4)
"^DD",399,399,473,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"MP")),DIV=X S $P(^("MP"),U,8)=DIV,DIH=399,DIG=479 D ^DICR
"^DD",399,399,473,1,2,2)
Q
"^DD",399,399,473,1,2,"%D",0)
^^3^3^3141125^
"^DD",399,399,473,1,2,"%D",1,0)
When the TERTIARY INSURANCE HPID field is changed, update the TERTIARY 
"^DD",399,399,473,1,2,"%D",2,0)
HPID CHANGES MADE BY Field (#479) with the ID of the user making the 
"^DD",399,399,473,1,2,"%D",3,0)
change.
"^DD",399,399,473,1,2,"CREATE VALUE")
S X=$S(($D(DUZ)#2):DUZ,1:"")
"^DD",399,399,473,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,473,1,2,"DT")
3141125
"^DD",399,399,473,1,2,"FIELD")
TERTIARY HPID C
"^DD",399,399,473,3)
Enter a valid HPID. Must be 10 digits, all numeric, no decimal.
"^DD",399,399,473,21,0)
^.001^1^1^3140630^^
"^DD",399,399,473,21,1,0)
This field is the HPID to be sent for the tertiary insurer on this claim.
"^DD",399,399,473,23,0)
^^1^1^3140630^
"^DD",399,399,473,23,1,0)
This field is the HPID to be sent for the tertiary insurer on this claim.
"^DD",399,399,473,"DT")
3140630
"^DD",399,399,474,0)
PRIMARY HPID EDIT DATE/TIME^D^^MP;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,474,1,0)
^.1
"^DD",399,399,474,1,1,0)
399^E
"^DD",399,399,474,1,1,1)
S ^DGCR(399,"E",$E(X,1,30),DA)=""
"^DD",399,399,474,1,1,2)
K ^DGCR(399,"E",$E(X,1,30),DA)
"^DD",399,399,474,1,1,"%D",0)
^^2^2^3141215^
"^DD",399,399,474,1,1,"%D",1,0)
This index will be used to look up the claim by the date the PRIMARY 
"^DD",399,399,474,1,1,"%D",2,0)
INSURANCE HPID Field (#471) was last edited.
"^DD",399,399,474,1,1,"DT")
3141125
"^DD",399,399,474,3)
Enter the date/time the PRIMARY INSURANCE HPID Field (#471) was updated.
"^DD",399,399,474,5,1,0)
399^471^1
"^DD",399,399,474,9)
^
"^DD",399,399,474,21,0)
^.001^2^2^3141215^^^
"^DD",399,399,474,21,1,0)
This is the date/time the PRIMARY INSURANCE HPID Field (#471) was 
"^DD",399,399,474,21,2,0)
updated.  It is triggered by Field #471.
"^DD",399,399,474,"DT")
3141215
"^DD",399,399,475,0)
PRIMARY HPID CHANGES MADE BY^P200'^VA(200,^MP;4^Q
"^DD",399,399,475,3)
Enter the user who last edited the PRIMARY INSURANCE HPID (Field #471).
"^DD",399,399,475,5,1,0)
399^471^2
"^DD",399,399,475,9)
^
"^DD",399,399,475,21,0)
^.001^2^2^3141215^^
"^DD",399,399,475,21,1,0)
This is the user who last edited the PRIMARY INSURANCE HPID Field 
"^DD",399,399,475,21,2,0)
(#471).  It is triggered by Field #471.
"^DD",399,399,475,"DT")
3150115
"^DD",399,399,476,0)
SECONDARY HPID EDIT DATE/TIME^D^^MP;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,476,1,0)
^.1
"^DD",399,399,476,1,1,0)
399^F
"^DD",399,399,476,1,1,1)
S ^DGCR(399,"F",$E(X,1,30),DA)=""
"^DD",399,399,476,1,1,2)
K ^DGCR(399,"F",$E(X,1,30),DA)
"^DD",399,399,476,1,1,"%D",0)
^^2^2^3141215^
"^DD",399,399,476,1,1,"%D",1,0)
This index will be used to look up the claim by the date the SECONDARY 
"^DD",399,399,476,1,1,"%D",2,0)
INSURANCE HPID Field (#472) was last edited.
"^DD",399,399,476,1,1,"DT")
3141125
"^DD",399,399,476,3)
Enter the date/time the SECONDARY INSURANCE HPID Field (#472) was updated.
"^DD",399,399,476,5,1,0)
399^472^1
"^DD",399,399,476,9)
^
"^DD",399,399,476,21,0)
^.001^2^2^3141215^^
"^DD",399,399,476,21,1,0)
This is the date/time the SECONDARY INSURANCE HPID Field (#472) was
"^DD",399,399,476,21,2,0)
updated.  It is triggered by Field #472.
"^DD",399,399,476,"DT")
3141215
"^DD",399,399,477,0)
SECONDARY HPID CHANGES MADE BY^P200'^VA(200,^MP;6^Q
"^DD",399,399,477,3)
Enter the user who last edited the SECONDARY INSURANCE HPID Field (#472).
"^DD",399,399,477,5,1,0)
399^472^2
"^DD",399,399,477,21,0)
^.001^2^2^3141215^^^
"^DD",399,399,477,21,1,0)
This is the user who last edited the SECONDARY INSURANCE HPID Field
"^DD",399,399,477,21,2,0)
(#472).  It is triggered by Field #472.
"^DD",399,399,477,"DT")
3141125
"^DD",399,399,478,0)
TERTIARY HPID EDIT DATE/TIME^D^^MP;7^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,478,1,0)
^.1
"^DD",399,399,478,1,1,0)
399^G
"^DD",399,399,478,1,1,1)
S ^DGCR(399,"G",$E(X,1,30),DA)=""
"^DD",399,399,478,1,1,2)
K ^DGCR(399,"G",$E(X,1,30),DA)
"^DD",399,399,478,1,1,"%D",0)
^^2^2^3141215^
"^DD",399,399,478,1,1,"%D",1,0)
This index will be used to look up the claim by the date the TERTIARY 
"^DD",399,399,478,1,1,"%D",2,0)
INSURANCE HPID Field (#473) was last edited.
"^DD",399,399,478,1,1,"DT")
3141125
"^DD",399,399,478,3)
Enter the date/time the TERTIARY INSURANCE HPID Field (#473) was updated.
"^DD",399,399,478,5,1,0)
399^473^1
"^DD",399,399,478,9)
^
"^DD",399,399,478,21,0)
^.001^2^2^3141215^^^^
"^DD",399,399,478,21,1,0)
This is the date/time the TERTIARY INSURANCE HPID Field (#473) was
"^DD",399,399,478,21,2,0)
updated.  It is triggered by Field #473.
"^DD",399,399,478,"DT")
3141215
"^DD",399,399,479,0)
TERTIARY HPID CHANGES MADE BY^P200'^VA(200,^MP;8^Q
"^DD",399,399,479,3)
Enter the user who last edited the TERTIARY INSURANCE HPID Field (#473).
"^DD",399,399,479,5,1,0)
399^473^2
"^DD",399,399,479,9)
^
"^DD",399,399,479,21,0)
^.001^2^2^3141215^^
"^DD",399,399,479,21,1,0)
This is the user who last edited the TERTIARY INSURANCE HPID Field
"^DD",399,399,479,21,2,0)
(#473).  It is triggered by Field #473.
"^DD",399,399,479,"DT")
3150115
**END**
**END**
