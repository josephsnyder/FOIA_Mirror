KIDS Distribution saved on Aug 12, 2004@15:09:13
CTD MS Host File - EC*2*63, PX*1*149, SD*5.3*351, DG*5.3*606 & IB*2*266
**KIDS**:CTD MS 1.0^EC*2.0*63^PX*1.0*149^SD*5.3*351^DG*5.3*606^IB*2.0*266^

**INSTALL NAME**
CTD MS 1.0
"BLD",4107,0)
CTD MS 1.0^^1^3040812^y
"BLD",4107,10,0)
^9.63^5^5
"BLD",4107,10,1,0)
EC*2.0*63^1
"BLD",4107,10,2,0)
PX*1.0*149^1
"BLD",4107,10,3,0)
SD*5.3*351^1
"BLD",4107,10,4,0)
DG*5.3*606^1
"BLD",4107,10,5,0)
IB*2.0*266^1
"BLD",4107,10,"B","DG*5.3*606",4)

"BLD",4107,10,"B","EC*2.0*63",1)

"BLD",4107,10,"B","IB*2.0*266",5)

"BLD",4107,10,"B","PX*1.0*149",2)

"BLD",4107,10,"B","SD*5.3*351",3)

"BLD",4107,"KRN",0)
^9.67PA^8989.52^19
"BLD",4107,"KRN",.4,0)
.4
"BLD",4107,"KRN",.401,0)
.401
"BLD",4107,"KRN",.402,0)
.402
"BLD",4107,"KRN",.403,0)
.403
"BLD",4107,"KRN",.5,0)
.5
"BLD",4107,"KRN",.84,0)
.84
"BLD",4107,"KRN",3.6,0)
3.6
"BLD",4107,"KRN",3.8,0)
3.8
"BLD",4107,"KRN",9.2,0)
9.2
"BLD",4107,"KRN",9.8,0)
9.8
"BLD",4107,"KRN",19,0)
19
"BLD",4107,"KRN",19.1,0)
19.1
"BLD",4107,"KRN",101,0)
101
"BLD",4107,"KRN",409.61,0)
409.61
"BLD",4107,"KRN",771,0)
771
"BLD",4107,"KRN",870,0)
870
"BLD",4107,"KRN",8989.51,0)
8989.51
"BLD",4107,"KRN",8989.52,0)
8989.52
"BLD",4107,"KRN",8994,0)
8994
"BLD",4107,"KRN","B",.4,.4)

"BLD",4107,"KRN","B",.401,.401)

"BLD",4107,"KRN","B",.402,.402)

"BLD",4107,"KRN","B",.403,.403)

"BLD",4107,"KRN","B",.5,.5)

"BLD",4107,"KRN","B",.84,.84)

"BLD",4107,"KRN","B",3.6,3.6)

"BLD",4107,"KRN","B",3.8,3.8)

"BLD",4107,"KRN","B",9.2,9.2)

"BLD",4107,"KRN","B",9.8,9.8)

"BLD",4107,"KRN","B",19,19)

"BLD",4107,"KRN","B",19.1,19.1)

"BLD",4107,"KRN","B",101,101)

"BLD",4107,"KRN","B",409.61,409.61)

"BLD",4107,"KRN","B",771,771)

"BLD",4107,"KRN","B",870,870)

"BLD",4107,"KRN","B",8989.51,8989.51)

"BLD",4107,"KRN","B",8989.52,8989.52)

"BLD",4107,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
EC*2.0*63
"BLD",4112,0)
EC*2.0*63^EVENT CAPTURE^0^3040812^y
"BLD",4112,1,0)
^^2^2^3030603^
"BLD",4112,1,1,0)
Please see the National Patch Module for details of the enhancements included 
"BLD",4112,1,2,0)
in this patch.
"BLD",4112,4,0)
^9.64PA^721^1
"BLD",4112,4,721,0)
721
"BLD",4112,4,721,2,0)
^9.641^721.038^2
"BLD",4112,4,721,2,721,0)
EVENT CAPTURE PATIENT  (File-top level)
"BLD",4112,4,721,2,721,1,0)
^9.6411^20^1
"BLD",4112,4,721,2,721,1,20,0)
PRIMARY ICD-9 CODE
"BLD",4112,4,721,2,721.038,0)
SECONDARY ICD-9 CODE  (sub-file)
"BLD",4112,4,721,2,721.038,1,0)
^9.6411^.01^1
"BLD",4112,4,721,2,721.038,1,.01,0)
SECONDARY ICD-9 CODE
"BLD",4112,4,721,222)
y^y^p^^^^n
"BLD",4112,4,"APDD",721,721)

"BLD",4112,4,"APDD",721,721,20)

"BLD",4112,4,"APDD",721,721.038)

"BLD",4112,4,"APDD",721,721.038,.01)

"BLD",4112,4,"B",721,721)

"BLD",4112,"ABPKG")
n
"BLD",4112,"KRN",0)
^9.67PA^8989.52^20
"BLD",4112,"KRN",.4,0)
.4
"BLD",4112,"KRN",.401,0)
.401
"BLD",4112,"KRN",.402,0)
.402
"BLD",4112,"KRN",.402,"NM",0)
^9.68A^^0
"BLD",4112,"KRN",.403,0)
.403
"BLD",4112,"KRN",.5,0)
.5
"BLD",4112,"KRN",.84,0)
.84
"BLD",4112,"KRN",3.6,0)
3.6
"BLD",4112,"KRN",3.8,0)
3.8
"BLD",4112,"KRN",9.2,0)
9.2
"BLD",4112,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",4112,"KRN",9.8,0)
9.8
"BLD",4112,"KRN",9.8,"NM",0)
^9.68A^18^10
"BLD",4112,"KRN",9.8,"NM",9,0)
ECRPRSN^^0^B81491244
"BLD",4112,"KRN",9.8,"NM",10,0)
ECRDSSU^^0^B48824119
"BLD",4112,"KRN",9.8,"NM",11,0)
ECPRSUM1^^0^B26479784
"BLD",4112,"KRN",9.8,"NM",12,0)
ECPROV3^^0^B33084201
"BLD",4112,"KRN",9.8,"NM",13,0)
ECHECK1^^0^B9903536
"BLD",4112,"KRN",9.8,"NM",14,0)
ECMUTL^^0^B65515180
"BLD",4112,"KRN",9.8,"NM",15,0)
ECUTL^^0^B22344248
"BLD",4112,"KRN",9.8,"NM",16,0)
ECUTL2^^0^B30517576
"BLD",4112,"KRN",9.8,"NM",17,0)
ECEDU^^0^B13649367
"BLD",4112,"KRN",9.8,"NM",18,0)
ECSCR^^0^B7355090
"BLD",4112,"KRN",9.8,"NM","B","ECEDU",17)

"BLD",4112,"KRN",9.8,"NM","B","ECHECK1",13)

"BLD",4112,"KRN",9.8,"NM","B","ECMUTL",14)

"BLD",4112,"KRN",9.8,"NM","B","ECPROV3",12)

"BLD",4112,"KRN",9.8,"NM","B","ECPRSUM1",11)

"BLD",4112,"KRN",9.8,"NM","B","ECRDSSU",10)

"BLD",4112,"KRN",9.8,"NM","B","ECRPRSN",9)

"BLD",4112,"KRN",9.8,"NM","B","ECSCR",18)

"BLD",4112,"KRN",9.8,"NM","B","ECUTL",15)

"BLD",4112,"KRN",9.8,"NM","B","ECUTL2",16)

"BLD",4112,"KRN",19,0)
19
"BLD",4112,"KRN",19,"NM",0)
^9.68A^^0
"BLD",4112,"KRN",19.1,0)
19.1
"BLD",4112,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",4112,"KRN",101,0)
101
"BLD",4112,"KRN",409.61,0)
409.61
"BLD",4112,"KRN",771,0)
771
"BLD",4112,"KRN",869.2,0)
869.2
"BLD",4112,"KRN",870,0)
870
"BLD",4112,"KRN",8989.51,0)
8989.51
"BLD",4112,"KRN",8989.52,0)
8989.52
"BLD",4112,"KRN",8994,0)
8994
"BLD",4112,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",4112,"KRN","B",.4,.4)

"BLD",4112,"KRN","B",.401,.401)

"BLD",4112,"KRN","B",.402,.402)

"BLD",4112,"KRN","B",.403,.403)

"BLD",4112,"KRN","B",.5,.5)

"BLD",4112,"KRN","B",.84,.84)

"BLD",4112,"KRN","B",3.6,3.6)

"BLD",4112,"KRN","B",3.8,3.8)

"BLD",4112,"KRN","B",9.2,9.2)

"BLD",4112,"KRN","B",9.8,9.8)

"BLD",4112,"KRN","B",19,19)

"BLD",4112,"KRN","B",19.1,19.1)

"BLD",4112,"KRN","B",101,101)

"BLD",4112,"KRN","B",409.61,409.61)

"BLD",4112,"KRN","B",771,771)

"BLD",4112,"KRN","B",869.2,869.2)

"BLD",4112,"KRN","B",870,870)

"BLD",4112,"KRN","B",8989.51,8989.51)

"BLD",4112,"KRN","B",8989.52,8989.52)

"BLD",4112,"KRN","B",8994,8994)

"BLD",4112,"QUES",0)
^9.62^^
"BLD",4112,"REQB",0)
^9.611^6^5
"BLD",4112,"REQB",2,0)
EC*2.0*56^2
"BLD",4112,"REQB",3,0)
EC*2.0*62^2
"BLD",4112,"REQB",4,0)
EC*2.0*55^2
"BLD",4112,"REQB",5,0)
ICPT*6.0*19^2
"BLD",4112,"REQB",6,0)
ICD*18.0*12^2
"BLD",4112,"REQB","B","EC*2.0*55",4)

"BLD",4112,"REQB","B","EC*2.0*56",2)

"BLD",4112,"REQB","B","EC*2.0*62",3)

"BLD",4112,"REQB","B","ICD*18.0*12",6)

"BLD",4112,"REQB","B","ICPT*6.0*19",5)

"FIA",721)
EVENT CAPTURE PATIENT
"FIA",721,0)
^ECH(
"FIA",721,0,0)
721
"FIA",721,0,1)
y^y^p^^^^n
"FIA",721,0,10)

"FIA",721,0,11)

"FIA",721,0,"RLRO")

"FIA",721,0,"VR")
2.0^EC
"FIA",721,721)
1
"FIA",721,721,20)

"FIA",721,721,38)

"FIA",721,721.038)
1
"FIA",721,721.038,.01)

"MBREQ")
1
"PKG",499,-1)
1^1
"PKG",499,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",499,20,0)
^9.402P^^
"PKG",499,22,0)
^9.49I^1^1
"PKG",499,22,1,0)
2.0^2960508^2970410^11715
"PKG",499,22,1,"PAH",1,0)
63^3040812^100996
"PKG",499,22,1,"PAH",1,1,0)
^^2^2^3040812
"PKG",499,22,1,"PAH",1,1,1,0)
Please see the National Patch Module for details of the enhancements included 
"PKG",499,22,1,"PAH",1,1,2,0)
in this patch.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","ECEDU")
0^17^B13649367
"RTN","ECEDU",1,0)
ECEDU ;BIR/MAM,JPW-Enter Event Capture Data (cont'd) ;6 Mar 96
"RTN","ECEDU",2,0)
 ;;2.0; EVENT CAPTURE ;**10,18,23,47,63**;8 May 96
"RTN","ECEDU",3,0)
HDR ;hdr for filing
"RTN","ECEDU",4,0)
 W @IOF,!,"ENTERING A NEW PROCEDURE FOR "_ECPAT_" ...",!!,"LOCATION: "_ECLN,!,"SERVICE: "_ECSN,!,"SECTION: "_ECMN,!,"CATEGORY: "_ECCN,!!,"PROCEDURE: "
"RTN","ECEDU",5,0)
 W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECEDU",6,0)
 I SYN]"",SYN'["NOT DEFINED" W " ["_SYN_"]"
"RTN","ECEDU",7,0)
 W "  (#"_NATN_")"
"RTN","ECEDU",8,0)
 Q
"RTN","ECEDU",9,0)
MSGC ;msg cat
"RTN","ECEDU",10,0)
 W !!,"Please enter the number that corresponds to the "_$S(EC1:"procedure",1:"category")_" from which",!,"you would like to select a procedure.  If you would like to continue",!,"with the list, press <RET>.  Enter ^ to quit."
"RTN","ECEDU",11,0)
 S CNT=CNT-5
"RTN","ECEDU",12,0)
 Q
"RTN","ECEDU",13,0)
HDR1 ; heading
"RTN","ECEDU",14,0)
 W @IOF,!,"Patient: "_ECPAT,?40,"Procedure Date: "_ECDATE,!!,"Location: "_ECLN,?40,"Service: "_ECSN,!,"Section: "_ECMN,?40,"DSS Unit: "_ECDN W:$D(ECCN) !,"Category: "_ECCN
"RTN","ECEDU",15,0)
 Q
"RTN","ECEDU",16,0)
MSG W !!,"No procedures entered.  No Action Taken.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECEDU",17,0)
 Q
"RTN","ECEDU",18,0)
SETE ;set edit
"RTN","ECEDU",19,0)
 N ECPXD
"RTN","ECEDU",20,0)
 S DA=+EC(EC),EC(0)=^ECH(DA,0),ECC=+$P(EC(0),"^",8),ECCN=$S('ECC:"None",$P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECEDU",21,0)
 S (ECP,ECPROF)=$P(EC(0),"^",9)
"RTN","ECEDU",22,0)
 S ECPSY=+$O(^ECJ("AP",+ECL,+ECD,ECC,+ECP,""))
"RTN","ECEDU",23,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECEDU",24,0)
 S ECFILE=$S(ECPROF["EC":725,ECPROF["ICPT":81,1:"UNKNOWN")
"RTN","ECEDU",25,0)
 I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECEDU",26,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEDU",27,0)
 S (ECPTCD,ECPXD)="" I ECCPT'="" D
"RTN","ECEDU",28,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(EC(0),U,3)) I +ECPXD>0 S ECPTCD=$P(ECPXD,U,2)
"RTN","ECEDU",29,0)
 I ECFILE=81 S ECPN=$S($P(ECPXD,U,3)]"":$P(ECPXD,U,3),1:"UNKNOWN")
"RTN","ECEDU",30,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECEDU",31,0)
HDRE ; hdr for editing
"RTN","ECEDU",32,0)
 W @IOF,!,"EDITING A PROCEDURE FOR "_ECPAT_" ...",!!,"LOCATION: "_ECLN,!,"SERVICE: "_ECSN,!,"SECTION: "_ECMN,!,"CATEGORY: "_ECCN,!,"PROCEDURE: "_$S(ECCPT="":"",1:ECPTCD_" ")_ECPN_$S(ECPSYN="":"",1:"  ["_ECPSYN_"]")
"RTN","ECEDU",33,0)
 Q
"RTN","ECEDU",34,0)
DXEDT ;ALB/JAM - Edit Primary and multiple secondary dx codes
"RTN","ECEDU",35,0)
 N PXUPD,IEN,ECPDX,ECDXS,ECDT
"RTN","ECEDU",36,0)
 S EC4=$P($G(^ECH(ECFN,0)),"^",19),(ECDX,ECDXN)="",ECDT=ECNEWDT
"RTN","ECEDU",37,0)
 S ECPDX=$$PDXCK^ECUTL2(ECDFN,ECNEWDT,ECL,EC4),IEN="" K ECDXIEN(ECFN)
"RTN","ECEDU",38,0)
 ;update primary diagnoses code
"RTN","ECEDU",39,0)
 S DA=ECFN,DR="20//"_ECDX1 D ^DIE
"RTN","ECEDU",40,0)
 I $D(DTOUT)!($D(Y)'=0) K DIE S ECOUT=1 Q
"RTN","ECEDU",41,0)
 ;check for any changes to primary dx
"RTN","ECEDU",42,0)
 S ECDX1=X,IEN=""
"RTN","ECEDU",43,0)
 F  S IEN=$O(ECDXIEN(IEN)) Q:IEN=""  I $P(ECDXIEN(IEN),U,2)'=ECDX1 D  Q
"RTN","ECEDU",44,0)
 .W !?5,"WARNING: More than 1 Primary diagnoses exist for this encounter. All"
"RTN","ECEDU",45,0)
 .W !?14,"Procedures will be updated to have same primary & secondary dx"
"RTN","ECEDU",46,0)
 ; update secondary diagnosis codes
"RTN","ECEDU",47,0)
 D SDX^ECUTL2 S DXS=""
"RTN","ECEDU",48,0)
 K ECDXX M ECDXX=ECDXS K ECDXS
"RTN","ECEDU",49,0)
 ;Update all procedures for the encounter with same primary dx
"RTN","ECEDU",50,0)
 S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECNEWDT,ECL,EC4,ECDX1,.ECDXX)
"RTN","ECEDU",51,0)
 K PXUPD,ECDXX S DA=ECFN
"RTN","ECEDU",52,0)
 Q
"RTN","ECEDU",53,0)
 F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  S DXSIEN=$P(ECDXS(DXS),U) D:DXSIEN>0
"RTN","ECEDU",54,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""DX"""_","
"RTN","ECEDU",55,0)
 . S DIC("P")=$P(^DD(721,38,0),U,2),X=DXSIEN D FILE^DICN
"RTN","ECEDU",56,0)
 K DXSIEN,DXS,ECDXX,DIC M ECDXX=ECDXS K ECDXS
"RTN","ECHECK1")
0^13^B9903536
"RTN","ECHECK1",1,0)
ECHECK1 ;BIR/MAM,JPW-Categories and Procedures Check ;7 May 96
"RTN","ECHECK1",2,0)
 ;;2.0; EVENT CAPTURE ;**4,33,47,55,63**;8 May 96
"RTN","ECHECK1",3,0)
CATS ; check number of categories
"RTN","ECHECK1",4,0)
 K ECBUD,EC1,EC23 S CNT=0,ECAT=""
"RTN","ECHECK1",5,0)
 F  S ECAT=$O(^ECJ("AP",ECL,ECD,ECAT)) Q:ECAT=""  D
"RTN","ECHECK1",6,0)
 .S EC2="" F  S EC2=$O(^ECJ("AP",ECL,ECD,ECAT,EC2)) Q:EC2=""  D
"RTN","ECHECK1",7,0)
 ..S EC23=+$O(^ECJ("AP",ECL,ECD,ECAT,EC2,0))
"RTN","ECHECK1",8,0)
 ..I $G(ECCSTA)="",$P($G(^ECJ(+EC23,0)),"^",2) Q
"RTN","ECHECK1",9,0)
 ..S ECBUD(ECAT)=+ECAT_"^"_$S($P($G(^EC(726,+ECAT,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECHECK1",10,0)
 S ECAT=0 F  S ECAT=$O(ECBUD(ECAT)) Q:'ECAT  S CNT=CNT+1,ECC(CNT)=ECBUD(ECAT)
"RTN","ECHECK1",11,0)
 I '$D(ECC) S ECC(CNT)="0^No Categories"
"RTN","ECHECK1",12,0)
 K EC2,EC23,ECBUD
"RTN","ECHECK1",13,0)
 Q
"RTN","ECHECK1",14,0)
PROS ; check number of procedures
"RTN","ECHECK1",15,0)
 K ^TMP("ECPRO",$J) S CNT=0,ECPROS=""
"RTN","ECHECK1",16,0)
 I ECC F  S ECPROS=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS)) Q:ECPROS=""  D SET
"RTN","ECHECK1",17,0)
 I 'ECC S ECC="" F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  F  S ECPROS=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS)) Q:ECPROS=""  D SET
"RTN","ECHECK1",18,0)
ALL ;set info for all proc
"RTN","ECHECK1",19,0)
 S CNT=0 F CNT=0:0 S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT  D
"RTN","ECHECK1",20,0)
 .S ECPROF=$P(^TMP("ECPRO",$J,CNT),"^"),ECPIEN=$P(^(CNT),"^",2),ECPROPP=+ECPROF,ECPROF=$S(ECPROF["EC":725,ECPROF["ICPT":81,1:"UNKNOWN"),OK=0
"RTN","ECHECK1",21,0)
 .I ECPROF=725 S NODE1=$G(^EC(725,ECPROPP,0)),ECPRONAM=$S($P($G(NODE1),"^")]"":$P(NODE1,"^"),1:"UNKNOWN"),NATN=$P(NODE1,"^",2),OK=1
"RTN","ECHECK1",22,0)
 .I ECPROF=81 S NODE1=$$CPT^ICPTCOD(ECPROPP,$G(ECDT)),ECPRONAM=$S($P($G(NODE1),"^",3)]"":$P(NODE1,"^",3),1:"UNKNOWN"),NATN=$S($P(NODE1,"^",2)]"":$P(NODE1,"^",2),1:"NOT DEFINED"),OK=1
"RTN","ECHECK1",23,0)
 .S:'OK ECPRONAM="UNKNOWN"
"RTN","ECHECK1",24,0)
 .S NODE1=$G(^ECJ(ECPIEN,0)),ECTEMP=$P(NODE1,"^",2)
"RTN","ECHECK1",25,0)
 .;The ECACTIV variable allows users to select inactivate
"RTN","ECHECK1",26,0)
 .;procedures from the Inactivate Event Code Screen option.
"RTN","ECHECK1",27,0)
 .I '$G(ECACTIV)  I ECTEMP,ECTEMP'>DT K ECPIEN,ECPROF,ECPROPP,ECPRONAM,ECTEMP,NODE1,NOD2,SYN,NATN,VOL Q
"RTN","ECHECK1",28,0)
 .S NODE2=$G(^ECJ(ECPIEN,"PRO")),SYN=$S($P(NODE2,"^",2)]"":$P(NODE2,"^",2),1:"NOT DEFINED"),VOL=$P(NODE2,"^",3)
"RTN","ECHECK1",29,0)
 .S ^TMP("ECPRO",$J,CNT)=^TMP("ECPRO",$J,CNT)_"^"_SYN_"^"_ECPRONAM_"^"_NATN_"^"_VOL_"^"_ECPROF_"^"_ECPROPP_"^"_ECTEMP
"RTN","ECHECK1",30,0)
 .S ^TMP("ECPRO",$J,"B",ECPRONAM,CNT)="",^TMP("ECPRO",$J,"SYN",SYN,CNT)="",^TMP("ECPRO",$J,"N",NATN,CNT)=""
"RTN","ECHECK1",31,0)
 K ECPIEN,ECPROF,ECPROPP,ECPRONAM,ECTEMP,NODE1,NODE2,SYN,NATN,VOL
"RTN","ECHECK1",32,0)
 Q
"RTN","ECHECK1",33,0)
SET ;set proc in ^tmp
"RTN","ECHECK1",34,0)
 S ECPIEN=$O(^ECJ("AP",ECL,ECD,ECC,ECPROS,0))
"RTN","ECHECK1",35,0)
 ;The ECACTIV variable allows users to select inactive.
"RTN","ECHECK1",36,0)
 ;procedures from the Inactivate Event Code Screen option.
"RTN","ECHECK1",37,0)
 I '$G(ECACTIV)  I $P($G(^ECJ(ECPIEN,0)),"^",2),$P($G(^ECJ(ECPIEN,0)),"^",2)'>DT Q
"RTN","ECHECK1",38,0)
 ;remove inactive procedures
"RTN","ECHECK1",39,0)
 S NODE1=$S(ECPROS[";ICPT(":+ECPROS,1:$P($G(^EC(725,+ECPROS,0)),U,5))
"RTN","ECHECK1",40,0)
 ; ATG-1003-32110 : By VMP
"RTN","ECHECK1",41,0)
 I NODE1'="" S NODE1=$$CPT^ICPTCOD(NODE1,$G(ECDT)) Q:+NODE1<0  I '$P(NODE1,U,7),'$G(ECACTIV) Q
"RTN","ECHECK1",42,0)
 S CNT=CNT+1
"RTN","ECHECK1",43,0)
 S ^TMP("ECPRO",$J,CNT)=ECPROS_"^"_ECPIEN
"RTN","ECHECK1",44,0)
 Q
"RTN","ECMUTL")
0^14^B65515180
"RTN","ECMUTL",1,0)
ECMUTL ;ALB/ESD - Utilities for Multiple Dates/Mult Procs ;20 AUG 1997 13:56
"RTN","ECMUTL",2,0)
 ;;2.0; EVENT CAPTURE ;**5,10,18,33,47,63**;8 May 96
"RTN","ECMUTL",3,0)
 ;
"RTN","ECMUTL",4,0)
ASKLOC() ; Get Location
"RTN","ECMUTL",5,0)
 ;   Input:      None
"RTN","ECMUTL",6,0)
 ;
"RTN","ECMUTL",7,0)
 ;  Output:      ECL = Location (Division file pointer) ien
"RTN","ECMUTL",8,0)
 ;              ECLN = Location name
"RTN","ECMUTL",9,0)
 ;
"RTN","ECMUTL",10,0)
 D ^ECL
"RTN","ECMUTL",11,0)
 K ECOUT,LOC
"RTN","ECMUTL",12,0)
 Q $S($D(ECL):1,1:0)
"RTN","ECMUTL",13,0)
 ;
"RTN","ECMUTL",14,0)
 ;
"RTN","ECMUTL",15,0)
ASKPRDT(DSSU,ONE) ; Get Procedure Start Date/Time
"RTN","ECMUTL",16,0)
 ;   Input:      ECD = DSS Unit ien
"RTN","ECMUTL",17,0)
 ;               ONE = Ask procedure start date/time once
"RTN","ECMUTL",18,0)
 ;
"RTN","ECMUTL",19,0)
 ;  Output:   ^TMP("ECPRDT",$J) = procedure date/time array
"RTN","ECMUTL",20,0)
 ;
"RTN","ECMUTL",21,0)
 N DTOUT,DUOUT,ECCNT,ECDUP,ECERR
"RTN","ECMUTL",22,0)
 S (ECCNT,ECDUP,ECERR)=0
"RTN","ECMUTL",23,0)
 I '$G(DSSU) G ASKPRDTQ
"RTN","ECMUTL",24,0)
 I $P($G(^ECD(DSSU,0)),"^",12)="N" S DIR("B")="NOW"
"RTN","ECMUTL",25,0)
AGAIN N DIRUT,Y
"RTN","ECMUTL",26,0)
 S DIR("A")="Select "_$S(+ECDUP:"Another Procedure Date and Time",1:"Procedure Date and Time")
"RTN","ECMUTL",27,0)
 S DIR("?")="Enter both date AND time procedure was performed. Future dates are not allowed."
"RTN","ECMUTL",28,0)
 S DIR(0)="DO^:NOW:EXR"
"RTN","ECMUTL",29,0)
 D ^DIR K DIR
"RTN","ECMUTL",30,0)
 I $D(DTOUT)!($D(DUOUT)) S ECERR=1
"RTN","ECMUTL",31,0)
 I +Y S ECDUP=1,^TMP("ECPRDT",$J,Y)="" G @($S('$G(ONE):"AGAIN",1:"ASKPRDTQ"))
"RTN","ECMUTL",32,0)
 ;
"RTN","ECMUTL",33,0)
ASKPRDTQ Q $S(ECERR:0,(+$G(ONE)&(+Y)):1,('$G(ONE))&($D(^TMP("ECPRDT",$J))):1,1:0)
"RTN","ECMUTL",34,0)
 ;
"RTN","ECMUTL",35,0)
 ;
"RTN","ECMUTL",36,0)
ASKCAT(ECL,ECD) ; Get category
"RTN","ECMUTL",37,0)
 ;   Input:      ECL = Location ien
"RTN","ECMUTL",38,0)
 ;               ECD = DSS Unit ien
"RTN","ECMUTL",39,0)
 ;
"RTN","ECMUTL",40,0)
 ;  Output:   ECATEG = Category ien (may be 0 if no categories)
"RTN","ECMUTL",41,0)
 ;
"RTN","ECMUTL",42,0)
 N CATS,DIRUT,ECATEG,ECMAX,X
"RTN","ECMUTL",43,0)
 S ECATEG=0_"^No Categories",(ECMAX,X)=0
"RTN","ECMUTL",44,0)
 I '$G(ECL)!('$G(ECD)) G ASKCATQ
"RTN","ECMUTL",45,0)
 D CATS^ECHECK1
"RTN","ECMUTL",46,0)
 I $O(ECC(0))']"" G ASKCATQ
"RTN","ECMUTL",47,0)
 W !!,"Categories within "_$P($G(^ECD(+ECD,0)),"^")_":",!
"RTN","ECMUTL",48,0)
 F  S X=$O(ECC(X)) Q:'X  W !?5,X_". ",$P(ECC(X),"^",2) S ECMAX=X
"RTN","ECMUTL",49,0)
 W ! S DIR(0)="NA^1:"_ECMAX,DIR("A")="Select Number: "
"RTN","ECMUTL",50,0)
 D ^DIR K DIR
"RTN","ECMUTL",51,0)
 I 'Y!($D(DIRUT)) K ECATEG G ASKCATQ
"RTN","ECMUTL",52,0)
 I +Y S ECATEG=$G(ECC(Y))
"RTN","ECMUTL",53,0)
ASKCATQ K CNT,ECAT,ECC
"RTN","ECMUTL",54,0)
 Q $G(ECATEG)
"RTN","ECMUTL",55,0)
 ;
"RTN","ECMUTL",56,0)
 ;
"RTN","ECMUTL",57,0)
ASKPRO(ECL,ECD,ECC,NUM) ; Ask procedures
"RTN","ECMUTL",58,0)
 ;   Input:      ECL = Location ien
"RTN","ECMUTL",59,0)
 ;               ECD = DSS Unit ien
"RTN","ECMUTL",60,0)
 ;               ECC = Category ien
"RTN","ECMUTL",61,0)
 ;               NUM = Only ask procedure once
"RTN","ECMUTL",62,0)
 ;
"RTN","ECMUTL",63,0)
 ;  Output:  ^TMP("ECPROC",$J) = procedure array
"RTN","ECMUTL",64,0)
 ;
"RTN","ECMUTL",65,0)
 N CNT,ECERR,ECOUNT,ECOUT,ECPCNT,ECP,ECPNM,ECPREV,ECREAS,ECVOLU,ECEXIT
"RTN","ECMUTL",66,0)
 N ECX,ECMOD,ECMODS,ECCPT,ECDT
"RTN","ECMUTL",67,0)
 I '$D(ECL)!('$D(ECD)) G ASKPROQ
"RTN","ECMUTL",68,0)
 S ECC=+$G(ECC)
"RTN","ECMUTL",69,0)
 S ECOUNT=0
"RTN","ECMUTL",70,0)
 S ECDT=$O(^TMP("ECPRDT",$J,0))
"RTN","ECMUTL",71,0)
 D PROS^ECHECK1
"RTN","ECMUTL",72,0)
 I '$O(^TMP("ECPRO",$J,0)) D  G ASKPROQ
"RTN","ECMUTL",73,0)
 . W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECMUTL",74,0)
 . W "for the DSS Unit ",$P(ECDSSU,"^",2),".",!
"RTN","ECMUTL",75,0)
 . S DIR(0)="E" D ^DIR K DIR,Y
"RTN","ECMUTL",76,0)
 ;
"RTN","ECMUTL",77,0)
SEL ;
"RTN","ECMUTL",78,0)
 K ECPNAME,ECMOD
"RTN","ECMUTL",79,0)
 S (ECPNM,ECPREV,ECREAS,ECX)="",(CNT,ECPCNT,ECP,ECVOLU,ECEXIT)=0
"RTN","ECMUTL",80,0)
 S DIR("?")="^D LISTPR^ECMUTL"
"RTN","ECMUTL",81,0)
 W ! S ECX=$$GETPRO^ECDSUTIL
"RTN","ECMUTL",82,0)
 I +$G(ECX)=-1,('ECOUNT) D MSG^ECBEN2U,KILLV^ECDSUTIL G ASKPROQ
"RTN","ECMUTL",83,0)
 I +$G(ECX)=-1,ECOUNT G ASKPROQ
"RTN","ECMUTL",84,0)
 I +$G(ECX)=1 S ECPREV=$P(ECX,"^",2) D SRCHTM^ECDSUTIL(ECX)
"RTN","ECMUTL",85,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECMUTL",86,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G SEL
"RTN","ECMUTL",87,0)
 . D @($S(ECPCNT=-1:"ERRMSG^ECDSUTIL",ECPCNT=-2:"ERRMSG2^ECDSUTIL"))
"RTN","ECMUTL",88,0)
 . D KILLV^ECDSUTIL
"RTN","ECMUTL",89,0)
 I ECPCNT>0 D  D CONTINU G:$G(ECERR) ASKPROQ
"RTN","ECMUTL",90,0)
 . S CNT=ECPCNT
"RTN","ECMUTL",91,0)
 . I ECPREV="L" W $P($G(^TMP("ECPRO",$J,+$G(^TMP("ECLKUP",$J,"LAST")))),"^",4)
"RTN","ECMUTL",92,0)
 . I ECPREV="X"!(ECPREV="N") W "   "_$P($G(^TMP("ECPRO",$J,+CNT)),"^",4)
"RTN","ECMUTL",93,0)
 I 'ECPCNT,$D(ECPNAME) D  G:CNT=-1!($G(ECERR)) ASKPROQ
"RTN","ECMUTL",94,0)
 . S CNT=$$PRLST^ECDSUTIL
"RTN","ECMUTL",95,0)
 . I CNT=-1 D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECMUTL",96,0)
 . I CNT>0 D
"RTN","ECMUTL",97,0)
 .. W "   "_$S(ECPREV="S":$P($G(^TMP("ECPRO",$J,+CNT)),"^",3),1:$P($G(^TMP("ECPRO",$J,+CNT)),"^",4))
"RTN","ECMUTL",98,0)
 .. D CONTINU
"RTN","ECMUTL",99,0)
 ;
"RTN","ECMUTL",100,0)
 I CNT>0,($G(ECP)'=""),(ECVOLU>0) D
"RTN","ECMUTL",101,0)
 . S ECOUNT=$S(+$G(NUM)=-99:1,+$G(NUM)>0:NUM,1:(ECOUNT+1))
"RTN","ECMUTL",102,0)
 . S ^TMP("ECPROC",$J,(ECOUNT))=ECP_"^"_ECPNM_"^"_+ECREAS_"^"_$S(+ECREAS:$P($G(^ECR($P($G(^ECL(+ECREAS,0)),"^"),0)),"^"),1:"Reason Not Defined")_"^"_ECVOLU
"RTN","ECMUTL",103,0)
 . S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECMUTL",104,0)
 . I ECCPT'="",$O(ECMOD(ECCPT,""))'="" D
"RTN","ECMUTL",105,0)
 . . M ^TMP("ECPROC",$J,ECOUNT,"MOD")=ECMOD(ECCPT)
"RTN","ECMUTL",106,0)
 I '$G(NUM) G SEL
"RTN","ECMUTL",107,0)
ASKPROQ K ^TMP("ECPRO",$J),^TMP("ECLKUP",$J),JJ,OK
"RTN","ECMUTL",108,0)
 D KILLV^ECDSUTIL
"RTN","ECMUTL",109,0)
 Q
"RTN","ECMUTL",110,0)
 ;
"RTN","ECMUTL",111,0)
CONTINU ;
"RTN","ECMUTL",112,0)
 D SETP
"RTN","ECMUTL",113,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECMUTL",114,0)
 I ECCPT'="" D  I $G(ECERR) G CONTINUQ
"RTN","ECMUTL",115,0)
 . S ECMODS=$G(ECMODS)
"RTN","ECMUTL",116,0)
 . S ECMODF=$$ASKMOD^ECUTL(ECCPT,ECMODS,ECDT,.ECMOD,.ECERR)
"RTN","ECMUTL",117,0)
 . K ECMODF,ECMODS
"RTN","ECMUTL",118,0)
 S ECREAS=$$ASKREAS(ECL,ECD,ECC,ECP,.ECERR)
"RTN","ECMUTL",119,0)
 G:$G(ECERR) CONTINUQ
"RTN","ECMUTL",120,0)
 S ECVOLU=$$ASKVOL(ECL,ECD,ECC,ECP,.ECERR)
"RTN","ECMUTL",121,0)
CONTINUQ Q
"RTN","ECMUTL",122,0)
 ;
"RTN","ECMUTL",123,0)
SETP ;
"RTN","ECMUTL",124,0)
 S ^TMP("ECLKUP",$J,"LAST")=CNT
"RTN","ECMUTL",125,0)
 S ECP=$P($G(^TMP("ECPRO",$J,CNT)),"^"),ECPNM=$P($G(^TMP("ECPRO",$J,CNT)),"^",4)
"RTN","ECMUTL",126,0)
 Q
"RTN","ECMUTL",127,0)
 ;
"RTN","ECMUTL",128,0)
LISTPR ;- List available procedures
"RTN","ECMUTL",129,0)
 ;   Input:        None
"RTN","ECMUTL",130,0)
 ;
"RTN","ECMUTL",131,0)
 ;  Output:        None (display on screen)
"RTN","ECMUTL",132,0)
 ;
"RTN","ECMUTL",133,0)
 N DIR,DIRUT,ECI,Y
"RTN","ECMUTL",134,0)
 S ECI=0
"RTN","ECMUTL",135,0)
 D PROCHDR
"RTN","ECMUTL",136,0)
 F   S ECI=$O(^TMP("ECPRO",$J,ECI)) Q:'ECI!(ECEXIT)  D
"RTN","ECMUTL",137,0)
 . I ($Y+5>IOSL) S DIR(0)="E" D ^DIR S:'Y!$D(DIRUT) ECEXIT=1 I +Y D PROCHDR
"RTN","ECMUTL",138,0)
 . Q:ECEXIT
"RTN","ECMUTL",139,0)
 . W !,ECI_".",?5,$E($P(^TMP("ECPRO",$J,ECI),"^",4),1,30),?38,$E($P(^(ECI),"^",3),1,30),?72,$P(^(ECI),"^",5)
"RTN","ECMUTL",140,0)
 Q:ECEXIT
"RTN","ECMUTL",141,0)
 W !!?5,"Select by number, CPT or national code, procedure name, or synonym.",!?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECMUTL",142,0)
 W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECMUTL",143,0)
LISTPRQ Q
"RTN","ECMUTL",144,0)
 ;
"RTN","ECMUTL",145,0)
PROCHDR ;- Procedure display header
"RTN","ECMUTL",146,0)
 ;
"RTN","ECMUTL",147,0)
 W @IOF
"RTN","ECMUTL",148,0)
 W !,"Available Procedures within "_$P(ECDSSU,"^",2)_": ",!
"RTN","ECMUTL",149,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECMUTL",150,0)
 Q
"RTN","ECMUTL",151,0)
 ;
"RTN","ECMUTL",152,0)
 ;
"RTN","ECMUTL",153,0)
ASKREAS(ECL,ECD,ECC,ECP,ECOUT) ;-Ask procedure reason
"RTN","ECMUTL",154,0)
 ;   Input:      ECL = Location ien
"RTN","ECMUTL",155,0)
 ;               ECD = DSS Unit ien
"RTN","ECMUTL",156,0)
 ;               ECC = Category ien
"RTN","ECMUTL",157,0)
 ;               ECP = Procedure ien
"RTN","ECMUTL",158,0)
 ;
"RTN","ECMUTL",159,0)
 ;  Output:  ECPRPTR = Link file ien (from file #720.5)
"RTN","ECMUTL",160,0)
 ;             ECOUT = 0 if successful
"RTN","ECMUTL",161,0)
 ;                     1 if uparrowed or timed out
"RTN","ECMUTL",162,0)
 ;                     (passed by reference)
"RTN","ECMUTL",163,0)
 ;
"RTN","ECMUTL",164,0)
 N DTOUT,DUOUT,ECPRPTR,ECSCR
"RTN","ECMUTL",165,0)
 S (ECOUT,ECPRPTR,ECSCR)=0
"RTN","ECMUTL",166,0)
 S ECC=+$G(ECC)
"RTN","ECMUTL",167,0)
 I '$D(ECL)!('$D(ECD))!('$D(ECP)) G ASKREASQ
"RTN","ECMUTL",168,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECMUTL",169,0)
 I ECSCR>0,(+$P($G(^ECJ(ECSCR,"PRO")),"^",5)),(+$O(^ECL("AD",ECSCR,0))) D
"RTN","ECMUTL",170,0)
 . S DIC="^ECL(",DIC(0)="QEAM"
"RTN","ECMUTL",171,0)
 . S DIC("A")="Procedure Reason: ",DIC("S")="I $P(^(0),U,2)=ECSCR"
"RTN","ECMUTL",172,0)
 . D ^DIC K DIC
"RTN","ECMUTL",173,0)
 . I +Y>0 S ECPRPTR=+Y
"RTN","ECMUTL",174,0)
 . I $D(DTOUT)!($D(DUOUT)) S ECOUT=1
"RTN","ECMUTL",175,0)
ASKREASQ Q +ECPRPTR
"RTN","ECMUTL",176,0)
 ;
"RTN","ECMUTL",177,0)
 ;
"RTN","ECMUTL",178,0)
ASKVOL(ECL,ECD,ECC,ECP,ECOUT) ;- Ask procedure volume
"RTN","ECMUTL",179,0)
 ;   Input:    ECL = Location ien
"RTN","ECMUTL",180,0)
 ;             ECD = DSS Unit ien
"RTN","ECMUTL",181,0)
 ;             ECC = Category ien
"RTN","ECMUTL",182,0)
 ;             ECP = Procedure ien
"RTN","ECMUTL",183,0)
 ;
"RTN","ECMUTL",184,0)
 ;  Output:  ECVOL = volume
"RTN","ECMUTL",185,0)
 ;           ECOUT = 0 if successful
"RTN","ECMUTL",186,0)
 ;                   1 if uparrowed or timed out
"RTN","ECMUTL",187,0)
 ;                   (passed by reference)
"RTN","ECMUTL",188,0)
 ;
"RTN","ECMUTL",189,0)
 N DIR,DIRUT,DTOUT,DUOUT,ECSCR,ECVOL
"RTN","ECMUTL",190,0)
 S (ECOUT,ECSCR,ECVOL)=0
"RTN","ECMUTL",191,0)
 S ECC=+$G(ECC)
"RTN","ECMUTL",192,0)
 I '$D(ECL)!('$D(ECD))!('$D(ECP)) G ASKVOLQ
"RTN","ECMUTL",193,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECMUTL",194,0)
 S DIR(0)="N^^K:(X<1)!(X>99) X",DIR("A")="Volume"
"RTN","ECMUTL",195,0)
 S DIR("?")="Type a Number between 1 and 99, 0 Decimal Digits"
"RTN","ECMUTL",196,0)
 S DIR("B")=$S($P($G(^ECJ(ECSCR,"PRO")),"^",3):$P($G(^ECJ(ECSCR,"PRO")),"^",3),1:1)
"RTN","ECMUTL",197,0)
 D ^DIR
"RTN","ECMUTL",198,0)
 I +Y S ECVOL=Y
"RTN","ECMUTL",199,0)
 I $D(DIRUT) S ECOUT=1
"RTN","ECMUTL",200,0)
ASKVOLQ Q +ECVOL
"RTN","ECMUTL",201,0)
 ;
"RTN","ECMUTL",202,0)
 ;
"RTN","ECMUTL",203,0)
PROV(ECDT,ECPROVS) ;get providers - new providers function
"RTN","ECMUTL",204,0)
 ;- This is the same function as PROV^ECPRVUTL
"RTN","ECMUTL",205,0)
 ;- Select provider(s) with active person class
"RTN","ECMUTL",206,0)
 ;- No updating of file #721 record is done here
"RTN","ECMUTL",207,0)
 ;
"RTN","ECMUTL",208,0)
 ;   input
"RTN","ECMUTL",209,0)
 ;   ECDT    = date/time of procedure (required)
"RTN","ECMUTL",210,0)
 ;   ECPROVS = local array, passed by reference (required)
"RTN","ECMUTL",211,0)
 ;    
"RTN","ECMUTL",212,0)
 ;   output
"RTN","ECMUTL",213,0)
 ;   ECU(1)  = provider #1 (mandatory) ien^provider #1 name^person class
"RTN","ECMUTL",214,0)
 ;   ECU(2)  = provider #2 (optional) ien^provider #2 name^person class
"RTN","ECMUTL",215,0)
 ;   ECU(3)  = provider #3 (optional) ien^provider #3 name^person class
"RTN","ECMUTL",216,0)
 ;
"RTN","ECMUTL",217,0)
 ;   returns
"RTN","ECMUTL",218,0)
 ;       0 ==> prov selection successful; at least prov #1 selected
"RTN","ECMUTL",219,0)
 ;       1 ==> selection unsuccessful or user timed-out
"RTN","ECMUTL",220,0)
 ;       2 ==> selection unsuccessful or user entered "^"
"RTN","ECMUTL",221,0)
 ;
"RTN","ECMUTL",222,0)
 N ECU,ECU2,ECU3,ECDA
"RTN","ECMUTL",223,0)
 D GET^ECPRVUTL("",ECDT,.ECU,.ECU2,.ECU3,.ECOUT)
"RTN","ECMUTL",224,0)
 S ECPROVS(1)=ECU,ECPROVS(2)=ECU2,ECPROVS(3)=ECU3
"RTN","ECMUTL",225,0)
 Q ECOUT
"RTN","ECMUTL",226,0)
 ;
"RTN","ECMUTL",227,0)
ONEUNIT(ECDSSU) ;- Create ECDSSU containing DSS Unit
"RTN","ECMUTL",228,0)
 ;  Checks for validity and access to Unit
"RTN","ECMUTL",229,0)
 ;
"RTN","ECMUTL",230,0)
 ;   input
"RTN","ECMUTL",231,0)
 ;   ECDSSU = passed by reference
"RTN","ECMUTL",232,0)
 ;
"RTN","ECMUTL",233,0)
 ;   output
"RTN","ECMUTL",234,0)
 ;   ECDDSU = ien in file #724^name of DSS unit  OR
"RTN","ECMUTL",235,0)
 ;            undefined
"RTN","ECMUTL",236,0)
 ;
"RTN","ECMUTL",237,0)
 ;   returns ECOUT = 0  if unit selection sucessful  OR
"RTN","ECMUTL",238,0)
 ;                   1  if user times out; selection unsuccessful
"RTN","ECMUTL",239,0)
 ;                   2  if user up-arrows out; selection unsuccessful
"RTN","ECMUTL",240,0)
 ;   Note: if selection is unsuccessful, variable ECDSSU will be undefined.
"RTN","ECMUTL",241,0)
 ;
"RTN","ECMUTL",242,0)
 N Y,DIRUT,DUOUT,ECKEY,ECOUT
"RTN","ECMUTL",243,0)
 S ECKEY=$S($D(^XUSEC("ECALLU",DUZ)):1,1:0)
"RTN","ECMUTL",244,0)
 F  S ECOUT=0 D  Q:$G(ECOUT)  Q:$G(ECDSSU)
"RTN","ECMUTL",245,0)
 .K DUOUT,DTOUT,DIRUT,Y
"RTN","ECMUTL",246,0)
 .W !
"RTN","ECMUTL",247,0)
 .S DIC=724,DIC("A")="Select DSS Unit: ",DIC(0)="QEAMZ"
"RTN","ECMUTL",248,0)
 .S DIC("S")="I ECKEY!($D(^VA(200,DUZ,""EC"",+Y)))"
"RTN","ECMUTL",249,0)
 .D ^DIC K DIC
"RTN","ECMUTL",250,0)
 .S:$D(DTOUT) ECOUT=1 S:$D(DUOUT) ECOUT=2
"RTN","ECMUTL",251,0)
 .Q:$G(ECOUT)
"RTN","ECMUTL",252,0)
 .I +Y>0 D  Q
"RTN","ECMUTL",253,0)
 .. I $$VALID(+Y) S ECDSSU=Y
"RTN","ECMUTL",254,0)
 .. I '$$VALID(+Y) D
"RTN","ECMUTL",255,0)
 ...S Y=-1
"RTN","ECMUTL",256,0)
 ...W !!,?5,"This DSS Unit is either inactive or cannot be used"
"RTN","ECMUTL",257,0)
 ...W !,?5,"in Event Capture.  Please select a different DSS Unit.",!
"RTN","ECMUTL",258,0)
 .I +Y<0 D  Q
"RTN","ECMUTL",259,0)
 ..W !!,?5,"A response is required...try again."
"RTN","ECMUTL",260,0)
 ..W !,?5,"You must enter an ""^"" to exit."
"RTN","ECMUTL",261,0)
 .K DIR,DUOUT,DTOUT,DIRUT
"RTN","ECMUTL",262,0)
 .W ! S DIR(0)="YA",DIR("A")="Is this correct? ",DIR("B")="YES"
"RTN","ECMUTL",263,0)
 .S DIR("?")="Answer YES to accept the unit, NO to start over."
"RTN","ECMUTL",264,0)
 .D ^DIR K DIR
"RTN","ECMUTL",265,0)
 .I $D(DIRUT) S:$D(DTOUT) ECOUT=1 S:$D(DUOUT) ECOUT=2 K ECDSSU Q
"RTN","ECMUTL",266,0)
 .I '$G(Y) K ECDSSU
"RTN","ECMUTL",267,0)
 Q ECOUT
"RTN","ECMUTL",268,0)
 ;
"RTN","ECMUTL",269,0)
VALID(IEN) ;- Check DSS Unit for use by Event Capture
"RTN","ECMUTL",270,0)
 ;
"RTN","ECMUTL",271,0)
 N NODE,NO,YES,VAL
"RTN","ECMUTL",272,0)
 S NODE=$G(^ECD(IEN,0))
"RTN","ECMUTL",273,0)
 ;piece 6 is 'inactive'; piece 8 is 'use with EC'
"RTN","ECMUTL",274,0)
 S NO=$P(NODE,"^",6),YES=$P(NODE,"^",8)
"RTN","ECMUTL",275,0)
 ;start out with 'valid'
"RTN","ECMUTL",276,0)
 S VAL=1 D
"RTN","ECMUTL",277,0)
 .;if 'inactive', then 'not valid'
"RTN","ECMUTL",278,0)
 .I NO S VAL=0 Q
"RTN","ECMUTL",279,0)
 .;if not 'use with EC', then 'not valid'
"RTN","ECMUTL",280,0)
 .I 'YES S VAL=0
"RTN","ECMUTL",281,0)
 Q VAL
"RTN","ECPROV3")
0^12^B33084201
"RTN","ECPROV3",1,0)
ECPROV3 ;BIR/MAM,JPW-Event Capture Provider Summary (cont'd) ;7 May 96
"RTN","ECPROV3",2,0)
 ;;2.0; EVENT CAPTURE ;**5,8,18,29,47,56,63**;8 May 96
"RTN","ECPROV3",3,0)
 ; This routine is used when printing the report for
"RTN","ECPROV3",4,0)
 ; all ACCESSIBLE DSS Units
"RTN","ECPROV3",5,0)
 ;JAM/3/7/03, This routine now combines ECPROV3, ECPROV4 and ECPROV5
"RTN","ECPROV3",6,0)
 ;
"RTN","ECPROV3",7,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPROV3",8,0)
 I ECL D  D LOC,PRINT Q
"RTN","ECPROV3",9,0)
 .I ECPRV=1 D UNIT Q
"RTN","ECPROV3",10,0)
 .I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11) Q
"RTN","ECPROV3",11,0)
 S ECL=0 D
"RTN","ECPROV3",12,0)
 .F I=0:0 S ECL=$O(^ECH("ADT",ECL)) Q:'ECL  D
"RTN","ECPROV3",13,0)
 ..S ECLN=$P(^DIC(4,ECL,0),"^") I ECPRV D UNIT
"RTN","ECPROV3",14,0)
 ..I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11)
"RTN","ECPROV3",15,0)
 ..D LOC
"RTN","ECPROV3",16,0)
PRINT ;Changes below were made by VMP to correct NOIS ATG-1003-32545
"RTN","ECPROV3",17,0)
 S (ECLN,ECPN)=0,ECCN=""
"RTN","ECPROV3",18,0)
 F I=0:0 S ECLN=$O(^TMP($J,ECLN)) Q:ECLN=""!(ECOUT)!(ECLN["^")  D
"RTN","ECPROV3",19,0)
 .I 'ECPRV D CATS Q
"RTN","ECPROV3",20,0)
 . S ECDN="" D NOUNIT F I=0:0 S ECDN=$O(^TMP($J,ECLN,ECDN)) Q:ECDN=""!(ECOUT)  D CATS
"RTN","ECPROV3",21,0)
 K ECPNAM
"RTN","ECPROV3",22,0)
 Q
"RTN","ECPROV3",23,0)
CATS ; continue looping
"RTN","ECPROV3",24,0)
 I $O(^TMP($J,ECLN,ECDN,""))']"" D PAGE W !!!,?12,"NO PROCEDURES" S ECPG=1 Q
"RTN","ECPROV3",25,0)
 D PAGE Q:ECOUT  S ECPG=1,ECUN=0 F I=0:0 S ECUN=$O(^TMP($J,ECLN,ECDN,ECUN)) Q:ECUN=""!(ECOUT)  S ECINZ="^"_$O(^(ECUN,0)) D:$Y+7>IOSL PAGE Q:ECOUT  D PRO
"RTN","ECPROV3",26,0)
 Q
"RTN","ECPROV3",27,0)
PRO I $Y+10>IOSL D PAGE I ECOUT Q
"RTN","ECPROV3",28,0)
 W !!,ECUN S ECCN=0 F I=0:0 S ECCN=$O(^TMP($J,ECINZ,ECCN)) D:ECCN="" TOTP Q:ECCN=""!(ECOUT)  D MORE
"RTN","ECPROV3",29,0)
 Q
"RTN","ECPROV3",30,0)
MORE ;
"RTN","ECPROV3",31,0)
 ;ALB/ESD - Loop through to get procedure reason and print
"RTN","ECPROV3",32,0)
 W !,?3,ECCN S ECPN=0,(ECPRSN,ECPI)=""
"RTN","ECPROV3",33,0)
 F  S ECPN=$O(^TMP($J,ECINZ,ECCN,ECPN)) Q:ECPN=""!(ECOUT)  S ECUSER=1 D:$Y+7>IOSL PAGE Q:ECOUT  K ECUSER F  S ECPRSN=$O(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)) Q:ECPRSN=""!(ECOUT)  DO
"RTN","ECPROV3",34,0)
 .S ECCPT=$S($P(ECPN,"~",3)="I":$P(ECPN,"~",2),1:$P($G(^EC(725,$P(ECPN,"~",2),0)),"^",5))
"RTN","ECPROV3",35,0)
 .I ECCPT'="" D
"RTN","ECPROV3",36,0)
 ..;Changes made by VMP to correct NOIS ATG-1003-32545
"RTN","ECPROV3",37,0)
 ..;use end date/date range to get CPT description; CTD project.
"RTN","ECPROV3",38,0)
 ..S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPI,"^",2)
"RTN","ECPROV3",39,0)
 .S ECPNAM=$S($P(ECPN,"~",3)="E":$P($G(^EC(725,+$P(ECPN,"~",2),0)),"^"),$P(ECPN,"~",3)="I":$P(ECPI,"^",3),1:"UNKNOWN")
"RTN","ECPROV3",40,0)
 .S ECPSY=$P(ECPN,"~",4),ECPSYN=""
"RTN","ECPROV3",41,0)
 .I ECPSY'="" S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPROV3",42,0)
 .W !,?6,ECCPT," ",$E(ECPNAM,1,40) W:ECPSYN'="" " [",$E(ECPSYN,1,25),"]"
"RTN","ECPROV3",43,0)
 .W:$D(ECRY) ?70,ECPRSN
"RTN","ECPROV3",44,0)
 .W ?105,$J(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN),6)
"RTN","ECPROV3",45,0)
 .;print CPT procedure modifiers
"RTN","ECPROV3",46,0)
 .S IEN=""
"RTN","ECPROV3",47,0)
 .F  S IEN=$O(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPROV3",48,0)
 ..;used end date to get description,CTD project
"RTN","ECPROV3",49,0)
 ..S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPROV3",50,0)
 ..S MOD=$P(MODI,"^",2) I MOD="" K MODI Q
"RTN","ECPROV3",51,0)
 ..S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPROV3",52,0)
 ..S MODAMT=^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)
"RTN","ECPROV3",53,0)
 ..W !?10,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPROV3",54,0)
 ..I ($Y+3)>IOSL D PAGE
"RTN","ECPROV3",55,0)
 .K MODESC,MOD,IEN,MODAMT,MODI
"RTN","ECPROV3",56,0)
 Q
"RTN","ECPROV3",57,0)
LOC S (ECDFN,ECOUT,^TMP($J,ECLN))=0
"RTN","ECPROV3",58,0)
 F I=0:0 S ECDFN=$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  D
"RTN","ECPROV3",59,0)
 .I ECPRV D GECD Q
"RTN","ECPROV3",60,0)
 .D GMM
"RTN","ECPROV3",61,0)
 Q
"RTN","ECPROV3",62,0)
GECD S ECD=0 F I=0:0 S ECD=$O(^ECH("ADT",ECL,ECDFN,ECD)) Q:'ECD  D GMM
"RTN","ECPROV3",63,0)
 Q
"RTN","ECPROV3",64,0)
GMM S MM=ECSD F I=0:0 S MM=$O(^ECH("ADT",ECL,ECDFN,ECD,MM)) Q:'MM!(MM>ECED)  D LOC1
"RTN","ECPROV3",65,0)
 Q
"RTN","ECPROV3",66,0)
LOC1 S ECFN=0 F I=0:0 S ECFN=$O(^ECH("ADT",ECL,ECDFN,ECD,MM,ECFN)) Q:'ECFN  D UTL
"RTN","ECPROV3",67,0)
 Q
"RTN","ECPROV3",68,0)
UTL ; set ^TMP($J,"ECPROV"
"RTN","ECPROV3",69,0)
 Q:'$D(^ECH(+ECFN,0))!(+$G(ECD)'=$P($G(^ECH(+ECFN,0)),"^",7))
"RTN","ECPROV3",70,0)
 S ECEC=^ECH(+ECFN,0),ECV=+$P(ECEC,"^",10),ECC=+$P(ECEC,"^",8)
"RTN","ECPROV3",71,0)
 S ECP=$P(ECEC,"^",9),ECU=+$P(ECEC,"^",11)
"RTN","ECPROV3",72,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPROV3",73,0)
 Q:ECP']""
"RTN","ECPROV3",74,0)
 S ECD=+$P(ECEC,"^",7)
"RTN","ECPROV3",75,0)
 I ECPRV=1 Q:'$D(ECDU(ECD))  S ECDN=ECDU(ECD)
"RTN","ECPROV3",76,0)
 I ECPRV=2 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",77,0)
 S ECUN=$S($P($G(^VA(200,ECU,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",78,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,"")),ECPN=""
"RTN","ECPROV3",79,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPROV3",80,0)
 I ECFILE=81 S ECPN=$P($$CPT^ICPTCOD(+ECP,$P(ECED,".")),"^",3)
"RTN","ECPROV3",81,0)
 I ECFILE=725 S ECPN=$P($G(^EC(725,+ECP,0)),"^")
"RTN","ECPROV3",82,0)
 I ECFILE="UNKNOWN"!(ECPN="") S ECPN="UNKNOWN"
"RTN","ECPROV3",83,0)
 ;Changes made by VMP to correct NOIS SDC-1003-60397
"RTN","ECPROV3",84,0)
 S ECPN=$E(ECPN,1,5)_"~"_$P(ECP,";")_"~"_$E($P(ECP,";",2))_"~"_ECPSY
"RTN","ECPROV3",85,0)
 ;Get Procedure CPT modifiers
"RTN","ECPROV3",86,0)
 S ECMODF=0 K ECMOD
"RTN","ECPROV3",87,0)
 I $O(^ECH(+ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(+ECFN,"I",.ECMOD)
"RTN","ECPROV3",88,0)
 ;
"RTN","ECPROV3",89,0)
 ;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPROV3",90,0)
 N ECLNK
"RTN","ECPROV3",91,0)
 S ECPRSN=""
"RTN","ECPROV3",92,0)
 S ECLNK=+$P(ECEC,"^",23)
"RTN","ECPROV3",93,0)
 I +ECLNK>0 DO
"RTN","ECPROV3",94,0)
 .S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPROV3",95,0)
 .S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",96,0)
 .S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPROV3",97,0)
 S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",98,0)
 I '$D(ECRY) S ECPRSN="REASON NOT DEFINED" ;group proc reason-not print
"RTN","ECPROV3",99,0)
 I '$D(^TMP($J,ECLN,ECDN,ECUN)) S ECINC=ECINC+1,ECINZ="^"_ECINC,^(ECUN)=0,^(ECUN,ECINC)=0
"RTN","ECPROV3",100,0)
 S ECINZ="^"_$O(^TMP($J,ECLN,ECDN,ECUN,0))
"RTN","ECPROV3",101,0)
 I '$D(^TMP($J,ECINZ,ECCN)) S ^TMP($J,ECINZ,ECCN)=0
"RTN","ECPROV3",102,0)
 ;
"RTN","ECPROV3",103,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",104,0)
 I '$D(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)) S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)=0
"RTN","ECPROV3",105,0)
 S ^TMP($J,ECLN)=^TMP($J,ECLN)+ECV
"RTN","ECPROV3",106,0)
 S ^TMP($J,ECLN,ECDN,ECUN)=^TMP($J,ECLN,ECDN,ECUN)+ECV
"RTN","ECPROV3",107,0)
 S ^TMP($J,ECINZ,ECCN)=^TMP($J,ECINZ,ECCN)+ECV
"RTN","ECPROV3",108,0)
 ;
"RTN","ECPROV3",109,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",110,0)
 S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)=^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)+ECV
"RTN","ECPROV3",111,0)
 ;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPROV3",112,0)
 S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPROV3",113,0)
 . S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD)=$G(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD))+ECV
"RTN","ECPROV3",114,0)
 Q
"RTN","ECPROV3",115,0)
PAGE ; end of page
"RTN","ECPROV3",116,0)
 I $D(ECPG),$E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPROV3",117,0)
HDR ; print heading
"RTN","ECPROV3",118,0)
 W:$Y @IOF W !!,?49,"EVENT CAPTURE PROVIDER SUMMARY",!,?49,"FROM "_$P(ECDATE,"^")_"  TO "_$P(ECDATE,"^",2),!,?49,"Run Date : ",ECRDT
"RTN","ECPROV3",119,0)
 W !!?3,"Category",!,?6,"CPT Code",?20,"Description"
"RTN","ECPROV3",120,0)
 W:$D(ECRY) ?70,"Procedure Reason"
"RTN","ECPROV3",121,0)
 W ?105,"Volume",!,?10,"CPT Modifier (volume)",!
"RTN","ECPROV3",122,0)
 F LINE=1:1:132 W "-"
"RTN","ECPROV3",123,0)
 W !!,"Location: "_ECLN,! W:ECDN]"" "DSS Unit: "_ECDN
"RTN","ECPROV3",124,0)
 I ECPRV,$D(ECUSER) W !!,ECUN,!,ECCN
"RTN","ECPROV3",125,0)
 Q
"RTN","ECPROV3",126,0)
TOTP Q:ECOUT  W !,?105,"------",!,"Total Procedures for "_ECUN,?105,$J(^TMP($J,ECLN,ECDN,ECUN),6)
"RTN","ECPROV3",127,0)
 Q
"RTN","ECPROV3",128,0)
UNIT ; set units
"RTN","ECPROV3",129,0)
 S CNT=0 F I=0:0 S CNT=$O(UNIT(CNT)) Q:'CNT  S ECDU(+UNIT(CNT))=$P(UNIT(CNT),"^",2)
"RTN","ECPROV3",130,0)
 Q
"RTN","ECPROV3",131,0)
 ;
"RTN","ECPROV3",132,0)
NOUNIT ;Nothing there
"RTN","ECPROV3",133,0)
 I $O(^TMP($J,ECLN,ECDN))']"" D PAGE W !!!,?12,"NO PROCEDURES",! S ECPG=1
"RTN","ECPROV3",134,0)
 Q
"RTN","ECPRSUM1")
0^11^B26479784
"RTN","ECPRSUM1",1,0)
ECPRSUM1 ;BIR/DMA,RHK,JPW-Provider Summary (1, 2, and 3) ;27 Mar 96
"RTN","ECPRSUM1",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,33,47,62,63**;8 May 96
"RTN","ECPRSUM1",3,0)
 S DIC=200,DIC(0)="AQEMZ",DIC("A")="Select Provider: "
"RTN","ECPRSUM1",4,0)
 D ^DIC K DIC G END:Y<0 S ECU=+Y,ECUN=$P(Y,"^",2)
"RTN","ECPRSUM1",5,0)
 D REASON^ECRUTL ;* Prompt to include Procedure Reasons
"RTN","ECPRSUM1",6,0)
BDATE K %DT S %DT="AEX",%DT("A")="Starting with Date: "
"RTN","ECPRSUM1",7,0)
 D ^%DT G:Y<0 END S ECSD=Y
"RTN","ECPRSUM1",8,0)
EDATE K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT G:Y<0 END
"RTN","ECPRSUM1",9,0)
 I Y<ECSD D  G EDATE
"RTN","ECPRSUM1",10,0)
 .W !!,"The ending date cannot be earlier than the starting date.  "
"RTN","ECPRSUM1",11,0)
 .W "Please re-enter",!,"the ending date.",!
"RTN","ECPRSUM1",12,0)
 S ECED=Y,ECDATE=ECSD_"^"_ECED
"RTN","ECPRSUM1",13,0)
DEV ;dev call
"RTN","ECPRSUM1",14,0)
 W !!,"This report is formatted for 132 column output.",!!
"RTN","ECPRSUM1",15,0)
 S %ZIS="Q",%ZIS("A")="Select Device: " D ^%ZIS G END:POP
"RTN","ECPRSUM1",16,0)
 I $D(IO("Q")) K ZTSAVE S (ZTSAVE("ECRY"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECU"),ZTSAVE("ECUN"))="",ZTDESC="Event Capture Provider Summary",ZTRTN="EN^ECPRSUM1" D ^%ZTLOAD,HOME^%ZIS K ZTSK G END
"RTN","ECPRSUM1",17,0)
 ;
"RTN","ECPRSUM1",18,0)
EN ;QUEUED ENTRY POINT
"RTN","ECPRSUM1",19,0)
 N ECPG,ECGT,EC,ECCAT,ECPXD,MODI
"RTN","ECPRSUM1",20,0)
 U IO S (ECOUT,ECPG,ECGT(1),ECGT(2),ECGT(3))=0
"RTN","ECPRSUM1",21,0)
 K ^TMP($J) S ECOUT=0,ECSD=ECSD-.1,ECED=ECED+.3
"RTN","ECPRSUM1",22,0)
 F ECD=ECSD:0 S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  F DA=0:0 S DA=$O(^ECH("AC",ECD,DA)) Q:'DA  S EC=$G(^ECH(DA,0)),A(1)=$P(EC,"^",11)=ECU,A(2)=$P(EC,"^",15)=ECU,A(3)=$P(EC,"^",17)=ECU I A(1)!A(2)!A(3) D
"RTN","ECPRSUM1",23,0)
 .S ECPAT=+$P(EC,"^",2),PA=$G(^DPT(ECPAT,0))
"RTN","ECPRSUM1",24,0)
 .S SS=$P(PA,"^",9)
"RTN","ECPRSUM1",25,0)
 .S PA=$S($P(PA,"^")]"":$P(PA,"^"),1:"UNKNOWN")
"RTN","ECPRSUM1",26,0)
 .S ECP=$P(EC,"^",9)
"RTN","ECPRSUM1",27,0)
 .Q:ECP']""
"RTN","ECPRSUM1",28,0)
 .S ECLOC=+$P(EC,U,4)
"RTN","ECPRSUM1",29,0)
 .S ECUNIT=+$P(EC,U,7)
"RTN","ECPRSUM1",30,0)
 .S ECCAT=+$P(EC,U,8)
"RTN","ECPRSUM1",31,0)
 .S ECPSY=+$O(^ECJ("AP",ECLOC,ECUNIT,ECCAT,ECP,""))
"RTN","ECPRSUM1",32,0)
 .S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPRSUM1",33,0)
 .S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPRSUM1",34,0)
 .I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECPRSUM1",35,0)
 .S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPRSUM1",36,0)
 .I ECCPT'="" D
"RTN","ECPRSUM1",37,0)
 ..S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPXD,"^",2)_" "
"RTN","ECPRSUM1",38,0)
 .I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPRSUM1",39,0)
 .I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPRSUM1",40,0)
 .S ECPTDS=ECPN_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPRSUM1",41,0)
 .;Get Procedure CPT modifiers
"RTN","ECPRSUM1",42,0)
 .S ECMODF=0 I $O(^ECH(DA,"MOD",0))'="" D
"RTN","ECPRSUM1",43,0)
 ..K ECMOD S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",44,0)
 .;
"RTN","ECPRSUM1",45,0)
 .;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPRSUM1",46,0)
 .S ECPRSN=""
"RTN","ECPRSUM1",47,0)
 .S ECLNK=+$P(EC,"^",23)
"RTN","ECPRSUM1",48,0)
 .I +ECLNK>0 DO
"RTN","ECPRSUM1",49,0)
 ..S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPRSUM1",50,0)
 ..S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",51,0)
 ..S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPRSUM1",52,0)
 .S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",53,0)
 .I '$D(ECRY) S ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",54,0)
 .;
"RTN","ECPRSUM1",55,0)
 .;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPRSUM1",56,0)
 .S PRO=ECCPT_ECPN I PRO]"" S V=+$P(EC,"^",10) D
"RTN","ECPRSUM1",57,0)
 ..F J=1,2,3 I A(J) S ^(J)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,J))+V D
"RTN","ECPRSUM1",58,0)
 ...I $G(^TMP($J,PRO))="" S ^TMP($J,PRO)=ECPTDS
"RTN","ECPRSUM1",59,0)
 ..;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPRSUM1",60,0)
 ..S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPRSUM1",61,0)
 ...S ^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD))+V
"RTN","ECPRSUM1",62,0)
 K ECLNK,MOD,ECPTDS
"RTN","ECPRSUM1",63,0)
 ;
"RTN","ECPRSUM1",64,0)
PRINT ;print report
"RTN","ECPRSUM1",65,0)
 S ECSD=$P(ECDATE,"^"),ECED=$P(ECDATE,"^",2)
"RTN","ECPRSUM1",66,0)
 D HDR I '$D(^TMP($J)) W !!,?12,"No Event Capture Provider Summary for "_ECUN_" to report for the date range selected.",!! D PAGE G END
"RTN","ECPRSUM1",67,0)
 S (A(1),A(2),A(3))=0
"RTN","ECPRSUM1",68,0)
 S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",69,0)
 F  S PR=$O(^TMP($J,PR)),PA="" Q:PR=""  D  Q:ECOUT
"RTN","ECPRSUM1",70,0)
 .W !,^TMP($J,PR)
"RTN","ECPRSUM1",71,0)
 .F  S ECREAS=$O(^TMP($J,PR,ECREAS)) Q:ECREAS=""  D  Q:ECOUT
"RTN","ECPRSUM1",72,0)
 ..F  S PA=$O(^TMP($J,PR,ECREAS,PA)) D:PA="" TOT Q:PA=""  D  Q:ECOUT
"RTN","ECPRSUM1",73,0)
 ...S A=$G(^TMP($J,PR,ECREAS,PA,0))
"RTN","ECPRSUM1",74,0)
 ...W ! W:$D(ECRY) ?5,ECREAS
"RTN","ECPRSUM1",75,0)
 ...W ?37,$P(PA,"^"),?69,$P(PA,"^",2)
"RTN","ECPRSUM1",76,0)
 ...F J=1,2,3 S A=$G(^TMP($J,PR,ECREAS,PA,J)),A(J)=A(J)+A W ?10*J+70,$J(A,5,0) I J=3 I $Y+5>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",77,0)
 ...;print CPT procedure modifiers
"RTN","ECPRSUM1",78,0)
 ...Q:ECOUT  S IEN=""
"RTN","ECPRSUM1",79,0)
 ...F  S IEN=$O(^TMP($J,PR,ECREAS,PA,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPRSUM1",80,0)
 ....S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPRSUM1",81,0)
 ....S MOD=$P(MODI,U,2) I MOD="" Q
"RTN","ECPRSUM1",82,0)
 ....S MODESC=$P(MODI,U,3)  I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPRSUM1",83,0)
 ....S MODAMT=^TMP($J,PR,ECREAS,PA,"MOD",IEN)
"RTN","ECPRSUM1",84,0)
 ....W !?5,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPRSUM1",85,0)
 ....I ($Y+4)>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",86,0)
 ...K MODESC,MOD,MODAMT
"RTN","ECPRSUM1",87,0)
 W !!,?81,"*************************",!,?35,"GRAND TOTAL - PROCEDURES"
"RTN","ECPRSUM1",88,0)
 F J=1,2,3 W ?10*J+70,$J(ECGT(J),5,0)
"RTN","ECPRSUM1",89,0)
 D:'ECOUT PAGE G END
"RTN","ECPRSUM1",90,0)
 ;
"RTN","ECPRSUM1",91,0)
PAGE ; end of page
"RTN","ECPRSUM1",92,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECPRSUM1",93,0)
 Q
"RTN","ECPRSUM1",94,0)
HDR ;
"RTN","ECPRSUM1",95,0)
 W:$Y @IOF S ECPG=ECPG+1
"RTN","ECPRSUM1",96,0)
 W !!?33,"EVENT CAPTURE PROVIDER SUMMARY FOR ",ECUN,?118,"Page: ",ECPG,!,?33,"FOR THE DATE RANGE ",$$FMTE^XLFDT(ECSD)," TO ",$$FMTE^XLFDT(ECED),!!,"PROCEDURE",?85,"TOTALS AS PROVIDER #",!
"RTN","ECPRSUM1",97,0)
 W:$D(ECRY) "PROCEDURE REASON" W ?40,"PATIENT",?71,"SSN",?84,1,?94,2,?104,3
"RTN","ECPRSUM1",98,0)
 W !,?5,"CPT MODIFIER (Volume of modifiers use)",!
"RTN","ECPRSUM1",99,0)
 F RK=1:1:IOM W "-"
"RTN","ECPRSUM1",100,0)
 W !
"RTN","ECPRSUM1",101,0)
 Q
"RTN","ECPRSUM1",102,0)
 ;
"RTN","ECPRSUM1",103,0)
TOT W !,?81,"-------------------------",!,?35,"TOTAL PROCEDURES"
"RTN","ECPRSUM1",104,0)
 F J=1,2,3 W ?10*J+70,$J(A(J),5,0) S ECGT(J)=ECGT(J)+A(J)
"RTN","ECPRSUM1",105,0)
 W ! S (A(1),A(2),A(3))=0
"RTN","ECPRSUM1",106,0)
 Q
"RTN","ECPRSUM1",107,0)
 ;
"RTN","ECPRSUM1",108,0)
 ;
"RTN","ECPRSUM1",109,0)
END D ^ECKILL K ^TMP($J),ZTSK W @IOF
"RTN","ECPRSUM1",110,0)
 K ^TMP($J) Q:$D(ECGUI)
"RTN","ECPRSUM1",111,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECPRSUM1",112,0)
 D ^%ZISC
"RTN","ECPRSUM1",113,0)
 Q
"RTN","ECRDSSU")
0^10^B48824119
"RTN","ECRDSSU",1,0)
ECRDSSU ;ALB/ESD - DSS Unit Workload Summary Report ; 5 Aug 97
"RTN","ECRDSSU",2,0)
 ;;2.0; EVENT CAPTURE ;**5,8,10,14,18,47,63**;8 May 96
"RTN","ECRDSSU",3,0)
 ;
"RTN","ECRDSSU",4,0)
EN ;- Get location(s), DSS Unit(s), start & end dates, device
"RTN","ECRDSSU",5,0)
 ;
"RTN","ECRDSSU",6,0)
 N ECLOC,ECDSSU,ECSTDT,ECENDDT
"RTN","ECRDSSU",7,0)
 I '$$ASKLOC^ECRUTL G ENQ
"RTN","ECRDSSU",8,0)
 I '$$ASKDSS^ECRUTL G ENQ
"RTN","ECRDSSU",9,0)
 I '$$STDT^ECRUTL G ENQ
"RTN","ECRDSSU",10,0)
 I '$$ENDDT^ECRUTL(ECSTDT) G ENQ
"RTN","ECRDSSU",11,0)
 I $$ASKDEV D STRPT^ECRDSSU
"RTN","ECRDSSU",12,0)
ENQ Q
"RTN","ECRDSSU",13,0)
 ;
"RTN","ECRDSSU",14,0)
 ;
"RTN","ECRDSSU",15,0)
STRPT ;- Main entry point
"RTN","ECRDSSU",16,0)
 ;
"RTN","ECRDSSU",17,0)
 N ECCRT,ECDSSNM,ECDSSTOT,ECLOCNM,ECQUIT,ECPAGE
"RTN","ECRDSSU",18,0)
 S (ECDSSTOT,ECPAGE,ECQUIT)=0,(ECDSSNM,ECLOCNM)=""
"RTN","ECRDSSU",19,0)
 ; Determine if device is CRT
"RTN","ECRDSSU",20,0)
 S ECCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","ECRDSSU",21,0)
 U IO
"RTN","ECRDSSU",22,0)
 D GETREC
"RTN","ECRDSSU",23,0)
 D LOOP
"RTN","ECRDSSU",24,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",25,0)
 D PRTCAT
"RTN","ECRDSSU",26,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",27,0)
 D DSSCHG
"RTN","ECRDSSU",28,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",29,0)
 I $D(ECGUI) G STRPTQ
"RTN","ECRDSSU",30,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECRDSSU",31,0)
 D ^%ZISC
"RTN","ECRDSSU",32,0)
STRPTQ K ^TMP("ECRPT")
"RTN","ECRDSSU",33,0)
 Q
"RTN","ECRDSSU",34,0)
 ;
"RTN","ECRDSSU",35,0)
 ;
"RTN","ECRDSSU",36,0)
GETREC ;- Loop thru "ADT" x-ref of EC Patient file (#721)
"RTN","ECRDSSU",37,0)
 ;
"RTN","ECRDSSU",38,0)
 N ECD,ECDFN,ECIEN,ECL,ECNT,I,J,ECREC,ECST
"RTN","ECRDSSU",39,0)
 S ECNT=0
"RTN","ECRDSSU",40,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  S ECL=+$P(ECLOC(I),U) D
"RTN","ECRDSSU",41,0)
 . S ECDFN=0
"RTN","ECRDSSU",42,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  F J=0:0 S J=$O(ECDSSU(J)) Q:'J  S ECD=+$P(ECDSSU(J),U) D
"RTN","ECRDSSU",43,0)
 .. S ECIEN=0
"RTN","ECRDSSU",44,0)
 .. S ECST=ECSTDT
"RTN","ECRDSSU",45,0)
 .. F  S ECST=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST)) Q:'ECST!(ECST>ECENDDT)  F  S ECIEN=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSU",46,0)
 ... S ECREC=$G(^ECH(ECIEN,0))
"RTN","ECRDSSU",47,0)
 ... I ECD=+$P(ECREC,"^",7) D CRETMP
"RTN","ECRDSSU",48,0)
 Q
"RTN","ECRDSSU",49,0)
 ;
"RTN","ECRDSSU",50,0)
 ;
"RTN","ECRDSSU",51,0)
CRETMP ;- Create ^TMP("ECRPT" array w/format:
"RTN","ECRDSSU",52,0)
 ;    ^TMP("ECRPT",$J,location,DSS Unit,category,count)=procedure^volume^
"RTN","ECRDSSU",53,0)
 ;                                                         CPT modifiers
"RTN","ECRDSSU",54,0)
 ;
"RTN","ECRDSSU",55,0)
 N ECTC,ECTP,ECMOD,ECMODS,ECMODF,SEQ
"RTN","ECRDSSU",56,0)
 S ECTC=$S(+$P(ECREC,"^",8)=0:-1,1:+$P(ECREC,"^",8)),ECTP=$P($G(ECREC),"^",9)
"RTN","ECRDSSU",57,0)
 S ECNT=ECNT+1,ECTP=$P(ECTP,";")_";"_$E($P(ECTP,";",2),1)
"RTN","ECRDSSU",58,0)
 ;ALB/JAM - Get Procedure CPT modifiers
"RTN","ECRDSSU",59,0)
 S ECMODS="" I $O(^ECH(ECIEN,"MOD",0))'="" D
"RTN","ECRDSSU",60,0)
 . K ECMOD S ECMODF=$$MOD^ECUTL(ECIEN,"I",.ECMOD) I 'ECMODF Q
"RTN","ECRDSSU",61,0)
 . S SEQ="" F  S SEQ=$O(ECMOD(SEQ)) Q:SEQ=""  D
"RTN","ECRDSSU",62,0)
 . . S ECMODS=ECMODS_$S(ECMODS="":"",1:";")_SEQ
"RTN","ECRDSSU",63,0)
 S ^TMP("ECRPT",$J,+$P(ECREC,"^",4),+$P(ECREC,"^",7),ECTC,ECNT)=ECTP_"^"_+$P(ECREC,"^",10)_"^"_ECMODS
"RTN","ECRDSSU",64,0)
 Q
"RTN","ECRDSSU",65,0)
 ;
"RTN","ECRDSSU",66,0)
LOOP ;- Loop through data
"RTN","ECRDSSU",67,0)
 ;
"RTN","ECRDSSU",68,0)
 N ECCAT,ECNT,ECOCAT,ECDSS,ECLOCAT,ECPR,ECVOL,ECMOD
"RTN","ECRDSSU",69,0)
 S (ECNT,ECDSS,ECLOCAT)=0,(ECCAT,ECOCAT)=""
"RTN","ECRDSSU",70,0)
 I '$D(^TMP("ECRPT",$J)) G LOOPQ
"RTN","ECRDSSU",71,0)
 F  S ECLOCAT=$O(^TMP("ECRPT",$J,ECLOCAT)) Q:'ECLOCAT  D
"RTN","ECRDSSU",72,0)
 . F  S ECDSS=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS)) Q:'ECDSS  D
"RTN","ECRDSSU",73,0)
 .. Q:ECQUIT
"RTN","ECRDSSU",74,0)
 .. D PRTCAT Q:ECQUIT
"RTN","ECRDSSU",75,0)
 .. D DSSCHG Q:ECQUIT
"RTN","ECRDSSU",76,0)
 .. S ECOCAT=0
"RTN","ECRDSSU",77,0)
 .. D HDR
"RTN","ECRDSSU",78,0)
 .. D LOCNAM,DSSUNAM
"RTN","ECRDSSU",79,0)
 .. W !!,"Location: ",$G(ECLOCNM),!,"DSS Unit: ",$G(ECDSSNM)
"RTN","ECRDSSU",80,0)
 .. F  S ECCAT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT)) Q:ECCAT=""  D
"RTN","ECRDSSU",81,0)
 ... D CATCHG
"RTN","ECRDSSU",82,0)
 ... Q:ECQUIT
"RTN","ECRDSSU",83,0)
 ... F  S ECNT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)) Q:'ECNT  D
"RTN","ECRDSSU",84,0)
 .... S (ECPR,ECVOL)=0
"RTN","ECRDSSU",85,0)
 .... S ECPR=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^")
"RTN","ECRDSSU",86,0)
 .... S ECVOL=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",2)
"RTN","ECRDSSU",87,0)
 .... S ECMOD=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",3)
"RTN","ECRDSSU",88,0)
 .... I '$D(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)) S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=ECVOL D:ECMOD'="" SETMOD Q
"RTN","ECRDSSU",89,0)
 .... S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)+ECVOL D:ECMOD'="" SETMOD
"RTN","ECRDSSU",90,0)
LOOPQ Q
"RTN","ECRDSSU",91,0)
SETMOD ;ALB/JAM - Set CPT modifiers in ECTMP array
"RTN","ECRDSSU",92,0)
 N MOD,I
"RTN","ECRDSSU",93,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D
"RTN","ECRDSSU",94,0)
 . S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD)=$G(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD))+ECVOL
"RTN","ECRDSSU",95,0)
 Q
"RTN","ECRDSSU",96,0)
 ;
"RTN","ECRDSSU",97,0)
CATCHG ;- Category change
"RTN","ECRDSSU",98,0)
 ;
"RTN","ECRDSSU",99,0)
 I ECCAT=""&(ECOCAT="") G CATCHGQ
"RTN","ECRDSSU",100,0)
 I ECOCAT="" S ECOCAT=ECCAT G CATCHGQ
"RTN","ECRDSSU",101,0)
 I $G(ECOCAT)'=$G(ECCAT) D
"RTN","ECRDSSU",102,0)
 . D PRTCAT
"RTN","ECRDSSU",103,0)
 . S ECOCAT=ECCAT
"RTN","ECRDSSU",104,0)
CATCHGQ Q
"RTN","ECRDSSU",105,0)
 ;
"RTN","ECRDSSU",106,0)
PRTCAT ;- Print category
"RTN","ECRDSSU",107,0)
 ;
"RTN","ECRDSSU",108,0)
 Q:'$D(ECTMP)
"RTN","ECRDSSU",109,0)
 N ECC,ECCATOT,ECDSS,ECFLG,ECLOC,ECPR,ECPRN,ECSYI,ECSYN,ECCNAM,ECPNAM
"RTN","ECRDSSU",110,0)
 N ECCPT,ECPI
"RTN","ECRDSSU",111,0)
 S (ECCATOT,ECDSS,ECFLG,ECLOC)=0,(ECC,ECCNAM,ECPR)=""
"RTN","ECRDSSU",112,0)
 F  S ECLOC=$O(ECTMP(ECLOC)) Q:'ECLOC  F  S ECDSS=$O(ECTMP(ECLOC,ECDSS)) Q:'ECDSS  F  S ECC=$O(ECTMP(ECLOC,ECDSS,ECC)) Q:ECC=""  F  S ECPR=$O(ECTMP(ECLOC,ECDSS,ECC,ECPR)) Q:ECPR=""  D  I ECQUIT Q
"RTN","ECRDSSU",113,0)
 . S ECCNAM=$S($P($G(^EC(726,$S(ECC<1:0,1:+ECC),0)),"^")'="":$P($G(^EC(726,$S(ECC<1:0,1:+ECC),0)),"^"),1:"None")
"RTN","ECRDSSU",114,0)
 . S ECPRN=$S($P(ECPR,";",2)="E":ECPR_"C(725,",1:ECPR_"CPT(")
"RTN","ECRDSSU",115,0)
 . S ECSYI=+$O(^ECJ("AP",ECLOC,ECDSS,$S(ECC<1:0,1:+ECC),ECPRN,0)),ECSYN=$P($G(^ECJ(ECSYI,"PRO")),"^",2)
"RTN","ECRDSSU",116,0)
 . S ECPI=""
"RTN","ECRDSSU",117,0)
 . S ECCPT=$S($P(ECPR,";",2)="I":+ECPR,1:$P($G(^EC(725,+ECPR,0)),"^",5))
"RTN","ECRDSSU",118,0)
 . I ECCPT'="" S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECENDDT,".")),ECCPT=$P(ECPI,"^",2)
"RTN","ECRDSSU",119,0)
 . S ECPNAM=$S($P(ECPR,";",2)="E":$P($G(^EC(725,+$P(ECPR,";"),0)),"^"),$P(ECPR,";",2)="I":$P(ECPI,"^",3),1:"")
"RTN","ECRDSSU",120,0)
 . Q:ECQUIT
"RTN","ECRDSSU",121,0)
 . I $Y>(IOSL-8) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",122,0)
 . W:'ECFLG !!?3,"Category:",!?6,ECCNAM S ECFLG=1
"RTN","ECRDSSU",123,0)
 . W !?8,ECCPT,?14,$E(ECPNAM,1,30),?46,$S(ECSYN]"":$E(ECSYN,1,21),1:""),?69,$J($P($G(ECTMP(ECLOC,ECDSS,ECC,ECPR)),"^"),6)
"RTN","ECRDSSU",124,0)
 . S ECCATOT=ECCATOT+$P($G(ECTMP(ECLOC,ECDSS,ECC,ECPR)),"^")
"RTN","ECRDSSU",125,0)
 . I $O(ECTMP(ECLOC,ECDSS,ECC,ECPR,""))'="" D PRTMOD I ECQUIT Q
"RTN","ECRDSSU",126,0)
 G:ECQUIT PRTCATQ
"RTN","ECRDSSU",127,0)
 I $Y>(IOSL-8) D PAUSE G:ECQUIT PRTCATQ D HDR
"RTN","ECRDSSU",128,0)
 W !?69,"------"
"RTN","ECRDSSU",129,0)
 W !?6,"Total Procedures for ",ECCNAM,?69,$J(ECCATOT,6),!
"RTN","ECRDSSU",130,0)
 S ECDSSTOT=ECDSSTOT+ECCATOT
"RTN","ECRDSSU",131,0)
PRTCATQ K ECTMP
"RTN","ECRDSSU",132,0)
 Q
"RTN","ECRDSSU",133,0)
 ;
"RTN","ECRDSSU",134,0)
PRTMOD ;ALB/JAM - Print CPT modifiers
"RTN","ECRDSSU",135,0)
 N MOD,IEN,MODESC,MODI S IEN=""
"RTN","ECRDSSU",136,0)
 F  S IEN=$O(ECTMP(ECLOC,ECDSS,ECC,ECPR,IEN)) Q:IEN=""  D
"RTN","ECRDSSU",137,0)
 . I $Y>(IOSL-5) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",138,0)
 . S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECENDDT,"."))
"RTN","ECRDSSU",139,0)
 . S MOD=$P(MODI,"^",2) I MOD="" Q
"RTN","ECRDSSU",140,0)
 . S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="Unknown"
"RTN","ECRDSSU",141,0)
 . W !?12,"- ",MOD," ",$E(MODESC,1,40)," ("
"RTN","ECRDSSU",142,0)
 . W ECTMP(ECLOC,ECDSS,ECC,ECPR,IEN),")"
"RTN","ECRDSSU",143,0)
 Q
"RTN","ECRDSSU",144,0)
 ;
"RTN","ECRDSSU",145,0)
DSSCHG ;- DSS Unit change
"RTN","ECRDSSU",146,0)
 ;
"RTN","ECRDSSU",147,0)
 Q:'$G(ECDSSTOT)
"RTN","ECRDSSU",148,0)
 I ECDSSTOT>0 D
"RTN","ECRDSSU",149,0)
 . I $Y>(IOSL-8) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",150,0)
 . W !!?69,"======"
"RTN","ECRDSSU",151,0)
 . W !?6,"Total Procedures for ",$G(ECDSSNM),?69,$J(ECDSSTOT,6)
"RTN","ECRDSSU",152,0)
 . S ECDSSTOT=0,(ECLOCNM,ECDSSNM)=""
"RTN","ECRDSSU",153,0)
 . D PAUSE
"RTN","ECRDSSU",154,0)
 Q
"RTN","ECRDSSU",155,0)
 ;
"RTN","ECRDSSU",156,0)
HDR ;- Report header
"RTN","ECRDSSU",157,0)
 ;
"RTN","ECRDSSU",158,0)
 I ECCRT!(ECPAGE) W @IOF
"RTN","ECRDSSU",159,0)
 S ECPAGE=ECPAGE+1
"RTN","ECRDSSU",160,0)
 W !,?((IOM-32)\2),"DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRDSSU",161,0)
 W !,?((IOM-40)\2),"Date Range: "_$$FMTE^XLFDT($P((ECSTDT+.0001),"."))_" to "_$$FMTE^XLFDT($P(ECENDDT,"."))
"RTN","ECRDSSU",162,0)
 W !!,"Run Date: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ECRDSSU",163,0)
 W ?65,"    Page: ",ECPAGE
"RTN","ECRDSSU",164,0)
 W !!?8,"CPT Code",?18,"Description",?46,"Synonym",?69,"Volume"
"RTN","ECRDSSU",165,0)
 W !?12,"CPT Modifier (volume of modifiers use)"
"RTN","ECRDSSU",166,0)
 W !,$TR($J("",79)," ","-")
"RTN","ECRDSSU",167,0)
 Q
"RTN","ECRDSSU",168,0)
 ;
"RTN","ECRDSSU",169,0)
 ;
"RTN","ECRDSSU",170,0)
LOCNAM ;- Get location name
"RTN","ECRDSSU",171,0)
 ;
"RTN","ECRDSSU",172,0)
 N I
"RTN","ECRDSSU",173,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  I $P($G(ECLOC(I)),"^")=ECLOCAT S ECLOCNM=$P(ECLOC(I),"^",2)
"RTN","ECRDSSU",174,0)
 Q
"RTN","ECRDSSU",175,0)
 ;
"RTN","ECRDSSU",176,0)
 ;
"RTN","ECRDSSU",177,0)
DSSUNAM ;- Get DSS Unit name
"RTN","ECRDSSU",178,0)
 ;
"RTN","ECRDSSU",179,0)
 N I
"RTN","ECRDSSU",180,0)
 F I=0:0 S I=$O(ECDSSU(I)) Q:'I  I $P($G(ECDSSU(I)),"^")=ECDSS S ECDSSNM=$P(ECDSSU(I),"^",2)
"RTN","ECRDSSU",181,0)
 Q
"RTN","ECRDSSU",182,0)
 ;
"RTN","ECRDSSU",183,0)
 ;
"RTN","ECRDSSU",184,0)
PAUSE ;- Pause for screen output
"RTN","ECRDSSU",185,0)
 Q:'ECCRT
"RTN","ECRDSSU",186,0)
 N DIR,DIRUT,DUOUT
"RTN","ECRDSSU",187,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-4)
"RTN","ECRDSSU",188,0)
 W ! S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S ECQUIT=1
"RTN","ECRDSSU",189,0)
 Q
"RTN","ECRDSSU",190,0)
 ;
"RTN","ECRDSSU",191,0)
 ;
"RTN","ECRDSSU",192,0)
ASKDEV() ;- Ask device for printing or queueing report
"RTN","ECRDSSU",193,0)
 ;  Input:     None
"RTN","ECRDSSU",194,0)
 ;
"RTN","ECRDSSU",195,0)
 ; Output:     1 if report is printed
"RTN","ECRDSSU",196,0)
 ;             0 if report is queued (or exited out)
"RTN","ECRDSSU",197,0)
 ;
"RTN","ECRDSSU",198,0)
 N ECX,ZTDESC,ZTRTN,ZTSAVE
"RTN","ECRDSSU",199,0)
 S ECX=1
"RTN","ECRDSSU",200,0)
 K %ZIS S %ZIS="QMP"
"RTN","ECRDSSU",201,0)
 D ^%ZIS
"RTN","ECRDSSU",202,0)
 S:POP ECX=0
"RTN","ECRDSSU",203,0)
 I ECX&($D(IO("Q"))) D
"RTN","ECRDSSU",204,0)
 . S ZTRTN="STRPT^ECRDSSU",ZTDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRDSSU",205,0)
 . S (ZTSAVE("ECLOC("),ZTSAVE("ECDSSU("),ZTSAVE("ECSTDT"),ZTSAVE("ECENDDT"))=""
"RTN","ECRDSSU",206,0)
 . D ^%ZTLOAD
"RTN","ECRDSSU",207,0)
 . D HOME^%ZIS
"RTN","ECRDSSU",208,0)
 . S ECX=0
"RTN","ECRDSSU",209,0)
 Q ECX
"RTN","ECRPRSN")
0^9^B81491244
"RTN","ECRPRSN",1,0)
ECRPRSN ;ALB/JAP - Procedure Reasons Report;18 Aug 97
"RTN","ECRPRSN",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,47,63**;8 May 96
"RTN","ECRPRSN",3,0)
EN ;entry point from menu option
"RTN","ECRPRSN",4,0)
 N JJ
"RTN","ECRPRSN",5,0)
 W ! S JJ=$$ASKLOC^ECRUTL I 'JJ G EXIT
"RTN","ECRPRSN",6,0)
 W ! S JJ=$$ASKDSS^ECRUTL I 'JJ G EXIT
"RTN","ECRPRSN",7,0)
 W ! S JJ=$$ASKREAS() I 'JJ G EXIT
"RTN","ECRPRSN",8,0)
 W !
"RTN","ECRPRSN",9,0)
 D RANGE
"RTN","ECRPRSN",10,0)
 I '$G(ECLOOP)!'$G(ECSD)!'$G(ECED) G EXIT
"RTN","ECRPRSN",11,0)
 W ! D DEVICE I POP G EXIT
"RTN","ECRPRSN",12,0)
 I $G(ZTSK) G EXIT
"RTN","ECRPRSN",13,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECRPRSN",14,0)
 D START,HOME^%ZIS
"RTN","ECRPRSN",15,0)
 G EXIT
"RTN","ECRPRSN",16,0)
 Q
"RTN","ECRPRSN",17,0)
START ;queued entry point or continuation
"RTN","ECRPRSN",18,0)
 D PROCESS
"RTN","ECRPRSN",19,0)
 U IO D PRINT Q:$D(ECGUI)
"RTN","ECRPRSN",20,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECRPRSN",21,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECRPRSN",22,0)
 Q
"RTN","ECRPRSN",23,0)
ASKREAS()        ; Ask reasons
"RTN","ECRPRSN",24,0)
 ;   output: ECREAS array; contains set of reason iens
"RTN","ECRPRSN",25,0)
 N DIRUT,DUOUT,DTOUT,Y,DIR,A,P,R,S,JJ,KK,NLOC,NUNIT,LINK,ECREAS,E
"RTN","ECRPRSN",26,0)
 ;setup array of associated reason iens for the locations/units included
"RTN","ECRPRSN",27,0)
 W !!,"Just a moment please..."
"RTN","ECRPRSN",28,0)
 W !,?5,"...finding Procedure Reasons related to the"
"RTN","ECRPRSN",29,0)
 W !,?5,"   Location(s) and DSS Unit(s) you selected...",!
"RTN","ECRPRSN",30,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",31,0)
 .S NLOC=$P(ECLOC(JJ),"^",1)
"RTN","ECRPRSN",32,0)
 .S KK="" F  S KK=$O(ECDSSU(KK)) Q:KK=""  S NUNIT=$P(ECDSSU(KK),"^",1),A(NLOC_"-"_NUNIT)=""
"RTN","ECRPRSN",33,0)
 S P=""
"RTN","ECRPRSN",34,0)
 F  S P=$O(^ECJ("B",P)) Q:P=""  I $D(A($P(P,"-",1,2))) S I=$O(^ECJ("B",P,"")),S(I)=""
"RTN","ECRPRSN",35,0)
 K A S P="" F  S P=$O(^ECL("AD",P)) Q:P=""  I $D(S(P)) S R="" D
"RTN","ECRPRSN",36,0)
 .F  S R=$O(^ECL("AD",P,R)) Q:R=""  D
"RTN","ECRPRSN",37,0)
 ..S LINK=$O(^ECL("AD",P,R,"")),ECLINK(LINK)=R
"RTN","ECRPRSN",38,0)
 ..S ECREAS(R)=$P($G(^ECR(R,0)),"^",1)
"RTN","ECRPRSN",39,0)
 ..I ECREAS(R)="" K ECREAS(R),ECLINK(LINK)
"RTN","ECRPRSN",40,0)
 K S
"RTN","ECRPRSN",41,0)
 ;ask the user to include all reasons or selected reasons
"RTN","ECRPRSN",42,0)
 ;already have all reasons in ecreas array
"RTN","ECRPRSN",43,0)
 S ASK=1
"RTN","ECRPRSN",44,0)
 S DIR(0)="YA",DIR("A")="Do you want to print this report for all Procedure Reasons? "
"RTN","ECRPRSN",45,0)
 S DIR("B")="YES" W ! D ^DIR K DIR I Y=0,'$G(DIRUT) D SPECR
"RTN","ECRPRSN",46,0)
 I $G(DIRUT)!(Y=0) S ASK=0 K ECREAS
"RTN","ECRPRSN",47,0)
 ;display user selections
"RTN","ECRPRSN",48,0)
 I $D(ECREAS)>1 D
"RTN","ECRPRSN",49,0)
 .W @IOF S E=0 W !,"Selected Procedure Reasons --",!
"RTN","ECRPRSN",50,0)
 .S R="" F  S R=$O(ECREAS(R)) Q:R=""  D  I E Q
"RTN","ECRPRSN",51,0)
 ..I $Y+3>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y E=1 Q:'Y  D
"RTN","ECRPRSN",52,0)
 ...W @IOF,!,"Selected Procedure Reasons (cont.) --",!
"RTN","ECRPRSN",53,0)
 ..W !,?5,ECREAS(R)
"RTN","ECRPRSN",54,0)
 .Q:E  S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPRSN",55,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",56,0)
 Q ASK
"RTN","ECRPRSN",57,0)
SPECR ;specific reasons
"RTN","ECRPRSN",58,0)
 N R,DUOUT,DTOUT
"RTN","ECRPRSN",59,0)
 K DIRUT,Y
"RTN","ECRPRSN",60,0)
 S DIR(0)="YA",DIR("A")="Do you want to include only specific Procedure Reasons in this report? ",DIR("B")="YES"
"RTN","ECRPRSN",61,0)
 S DIR("?")="Enter YES to select specific Procedure Reasons or NO to quit."
"RTN","ECRPRSN",62,0)
 W ! D ^DIR K DIR Q:$G(DIRUT)!(Y=0)
"RTN","ECRPRSN",63,0)
 ;select subset of possible reasons
"RTN","ECRPRSN",64,0)
 K DIRUT,DTOUT,DUOUT,Y
"RTN","ECRPRSN",65,0)
 F  D  Q:$G(DIRUT)!(Y=-1)
"RTN","ECRPRSN",66,0)
 .S DIC=720.4,DIC("A")="Select a Procedure Reason to include: ",DIC(0)="QAEM"
"RTN","ECRPRSN",67,0)
 .S DIC("S")="I $D(ECREAS(+Y))"
"RTN","ECRPRSN",68,0)
 .W ! D ^DIC Q:$G(DUOUT)!$G(DTOUT)!(Y=-1)
"RTN","ECRPRSN",69,0)
 .S R(+Y)=""
"RTN","ECRPRSN",70,0)
 S:$G(DTOUT)!($G(DUOUT)) DIRUT=1
"RTN","ECRPRSN",71,0)
 Q:$G(DIRUT)
"RTN","ECRPRSN",72,0)
 ;delete reasons from ecreas array which were not selected
"RTN","ECRPRSN",73,0)
 I $D(R)<10 S Y=0 Q
"RTN","ECRPRSN",74,0)
 S R="" F  S R=$O(ECREAS(R)) Q:R=""  I '$D(R(R)) K ECREAS(R)
"RTN","ECRPRSN",75,0)
 ;delete links from eclink array for reasons not selected
"RTN","ECRPRSN",76,0)
 S LINK="" F  S LINK=$O(ECLINK(LINK)) Q:LINK=""  S R=ECLINK(LINK) I '$D(ECREAS(R)) K ECLINK(LINK)
"RTN","ECRPRSN",77,0)
 S Y=1
"RTN","ECRPRSN",78,0)
 Q
"RTN","ECRPRSN",79,0)
RANGE ;get any date range
"RTN","ECRPRSN",80,0)
 N ECSTDT,ECENDDT
"RTN","ECRPRSN",81,0)
 W !!!,?5,"Enter a Begin Date and End Date for the Event Capture "
"RTN","ECRPRSN",82,0)
 W !,?5,"Procedure Reason Report.",!
"RTN","ECRPRSN",83,0)
 S (ECSD,ECED)=0
"RTN","ECRPRSN",84,0)
 F  D  Q:ECSD>0  Q:'$G(ECLOOP)
"RTN","ECRPRSN",85,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECRPRSN",86,0)
 .S ECSD=ECSTDT
"RTN","ECRPRSN",87,0)
 Q:'$G(ECLOOP)!'$G(ECSD)
"RTN","ECRPRSN",88,0)
 F  D  Q:ECED>0  Q:'$G(ECLOOP)
"RTN","ECRPRSN",89,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECRPRSN",90,0)
 .S ECED=ECENDDT
"RTN","ECRPRSN",91,0)
 .I ECED>(DT+1) D
"RTN","ECRPRSN",92,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECRPRSN",93,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECRPRSN",94,0)
 ..S ECED=0
"RTN","ECRPRSN",95,0)
 Q 
"RTN","ECRPRSN",96,0)
 ;
"RTN","ECRPRSN",97,0)
DEVICE ;select output device
"RTN","ECRPRSN",98,0)
 W ! K IOP,ZTSK S %ZIS="QM" D ^%ZIS
"RTN","ECRPRSN",99,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPRSN",100,0)
 I $D(IO("Q")) D
"RTN","ECRPRSN",101,0)
 .S ZTRTN="START^ECRPRSN",ZTDESC="EC Procedure Reason Report"
"RTN","ECRPRSN",102,0)
 .S ZTSAVE("ECSD")="",ZTSAVE("ECED")="",ZTSAVE("ECLOC(")="",ZTSAVE("ECDSSU(")="",ZTSAVE("ECLINK(")=""
"RTN","ECRPRSN",103,0)
 .D ^%ZTLOAD D HOME^%ZIS
"RTN","ECRPRSN",104,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPRSN",105,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECRPRSN",106,0)
 Q
"RTN","ECRPRSN",107,0)
 ;
"RTN","ECRPRSN",108,0)
PROCESS ;get data to print
"RTN","ECRPRSN",109,0)
 N EC,ECD,ECDA,ECPA,ECR,ECRL,ECRN,ECPATN,ECSS,ECSSN,ECP,ECPN,ECLOCA
"RTN","ECRPRSN",110,0)
 N ECUNIT,ECCAT,ECFILE,ECPSY,ECPSYN,ECPRV,ECPRVN,ECDFN,ECCPT,ECDESC
"RTN","ECRPRSN",111,0)
 N NLOC,NUNIT,JJ,ECMOD,ECMD,ECMODF
"RTN","ECRPRSN",112,0)
 K ^TMP("ECREAS",$J)
"RTN","ECRPRSN",113,0)
 ;if ecreas array doesn't exist, quit
"RTN","ECRPRSN",114,0)
 I $D(ECLINK)<10 Q
"RTN","ECRPRSN",115,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECRPRSN",116,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",117,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECRPRSN",118,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",119,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECRPRSN",120,0)
 S ECD=ECSD F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECRPRSN",121,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0))  I $P(EC,"^",23)'="" D
"RTN","ECRPRSN",122,0)
 ..S ECDFN=$P(EC,"^")
"RTN","ECRPRSN",123,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECRPRSN",124,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECRPRSN",125,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECRPRSN",126,0)
 ..S ECRL=$P(EC,"^",23) Q:'$D(ECLINK(ECRL))  S ECR=ECLINK(ECRL),ECRN=$P($G(^ECR(ECR,0)),"^") Q:ECRN']""
"RTN","ECRPRSN",127,0)
 ..S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECRPRSN",128,0)
 ..S ECCAT=+$P(EC,U,8),ECPSY=+$O(^ECJ("AP",ECLOCA,ECUNIT,ECCAT,ECP,""))
"RTN","ECRPRSN",129,0)
 ..S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),ECPI=""
"RTN","ECRPRSN",130,0)
 ..S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECRPRSN",131,0)
 ..S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5))
"RTN","ECRPRSN",132,0)
 ..I ECCPT'="" D
"RTN","ECRPRSN",133,0)
 ...S ECPI=$$CPT^ICPTCOD(+ECP,$P(ECED,".")),ECCPT=$P(ECPI,"^",2) I ECCPT'="" S ECCPT=ECCPT_" "
"RTN","ECRPRSN",134,0)
 ..I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECRPRSN",135,0)
 ..I ECFILE=81 S ECPN=$S($P(ECPI,"^",3)]"":$P(ECPI,"^",3),1:"UNKNOWN")
"RTN","ECRPRSN",136,0)
 ..I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECRPRSN",137,0)
 ..Q:ECPN=""
"RTN","ECRPRSN",138,0)
 ..S ECDESC=ECCPT_$E(ECPN,1,30)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECRPRSN",139,0)
 ..S (ECPA,ECPATN,ECSS)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECRPRSN",140,0)
 ..S ECPATN=$E($P(ECPA,"^",1),1,24),ECSS=$P(ECPA,"^",9)
"RTN","ECRPRSN",141,0)
 ..S:+ECSS ECSSN=$E(ECSS,6,9) S:ECSS="" ECSSN="UNKNOWN"
"RTN","ECRPRSN",142,0)
 ..S:ECPATN="" ECPATN="UNKNOWN" S ECPATN=ECPATN_"^"_ECSSN
"RTN","ECRPRSN",143,0)
 ..S (ECPRV,ECPRVN)="",ECPRV=$P(EC,"^",11) I +ECPRV S ECPRVN=$P($G(^VA(200,ECPRV,0)),"^",1) S:ECPRVN="" ECPRVN="UNKNOWN"
"RTN","ECRPRSN",144,0)
 ..S ECMD="" I $O(^ECH(ECDA,"MOD",0))'="" D  ;ALB/JAM - Get CPT modifiers
"RTN","ECRPRSN",145,0)
 ...K ECMOD S ECMODF=$$MOD^ECUTL(ECDA,"I",.ECMOD),SEQ="" I 'ECMODF Q
"RTN","ECRPRSN",146,0)
 ...F  S SEQ=$O(ECMOD(SEQ)) Q:SEQ=""  S ECMD=ECMD_$S(ECMD="":"",1:";")_SEQ
"RTN","ECRPRSN",147,0)
 ..I ECMD="" S ECMD="NOMOD"
"RTN","ECRPRSN",148,0)
 ..S ^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECRN,$E(ECPN,1,15))=ECDESC
"RTN","ECRPRSN",149,0)
 ..S ^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECRN,$E(ECPN,1,15),ECMD,ECDFN,ECD)=ECPRVN_"^"_ECPATN
"RTN","ECRPRSN",150,0)
 ..;where ecloca, ecunit,ecdfn are iens, ecdt is internal format
"RTN","ECRPRSN",151,0)
 Q
"RTN","ECRPRSN",152,0)
PRINT ;output report
"RTN","ECRPRSN",153,0)
 N ECLOCA,ECUNIT,ECREASN,ECDT,ECED2,ECSD2,ECPATN,ECPN,ECPRVN,SEQ,X,Y,SSN
"RTN","ECRPRSN",154,0)
 N PAGE,QFLAG,DASH,PRNTDT,JJ,SS,ALOC,AUNIT,DATE,LOC,UNIT,PTNAME,PROVN,ECDESC
"RTN","ECRPRSN",155,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",80)=""
"RTN","ECRPRSN",156,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD2=Y S Y=$P(ECED,".",1) D DD^%DT S ECED2=Y
"RTN","ECRPRSN",157,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECRPRSN",158,0)
 ;if no data exists then print the header and quit
"RTN","ECRPRSN",159,0)
 I '$D(^TMP("ECREAS",$J)) D  Q
"RTN","ECRPRSN",160,0)
 .S (LOC,UNIT)="" D HEAD
"RTN","ECRPRSN",161,0)
 .W !!,?6,"No data for the date range specified.",!!
"RTN","ECRPRSN",162,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPRSN",163,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",164,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECRPRSN",165,0)
 ;if there's data in ^TMP then need to present the data alphabetically;
"RTN","ECRPRSN",166,0)
 ;put locations and units in alpha ordered array
"RTN","ECRPRSN",167,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",168,0)
 .S ALOC($P(ECLOC(JJ),"^",2))=$P(ECLOC(JJ),"^",1)
"RTN","ECRPRSN",169,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",170,0)
 .S AUNIT($P(ECDSSU(JJ),"^",2))=$P(ECDSSU(JJ),"^",1)
"RTN","ECRPRSN",171,0)
 ;process the ^TMP global data in alpha order for location and unit
"RTN","ECRPRSN",172,0)
 S LOC="" F  S LOC=$O(ALOC(LOC)) Q:LOC=""  S ECLOCA=ALOC(LOC) D  Q:QFLAG
"RTN","ECRPRSN",173,0)
 .S UNIT="" F  S UNIT=$O(AUNIT(UNIT)) Q:UNIT=""  S ECUNIT=AUNIT(UNIT) D  Q:QFLAG
"RTN","ECRPRSN",174,0)
 ..;always start a location at top of page
"RTN","ECRPRSN",175,0)
 ..I $D(^TMP("ECREAS",$J,ECLOCA,ECUNIT)) D HEAD D LOOP
"RTN","ECRPRSN",176,0)
 ;all done
"RTN","ECRPRSN",177,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECRPRSN",178,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",179,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECRPRSN",180,0)
 Q
"RTN","ECRPRSN",181,0)
LOOP ;print the section of the ^tmp global for a specific location/unit
"RTN","ECRPRSN",182,0)
 S ECREASN=""
"RTN","ECRPRSN",183,0)
 F  S ECREASN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN)) Q:ECREASN=""  Q:QFLAG  D
"RTN","ECRPRSN",184,0)
 .D:($Y+3>IOSL) HEAD Q:QFLAG  W !!,"Reason: ",ECREASN,! S ECPN=""
"RTN","ECRPRSN",185,0)
 .F  S ECPN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN)) Q:ECPN=""  Q:QFLAG  D
"RTN","ECRPRSN",186,0)
 ..S ECDESC=$G(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN)),ECMOD=""
"RTN","ECRPRSN",187,0)
 ..F  S ECMOD=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD)) Q:ECMOD=""  D  Q:QFLAG
"RTN","ECRPRSN",188,0)
 ...W !,?3,"Procedure: ",ECDESC D:ECMOD'="NOMOD" MODPRT Q:QFLAG  D LOOP1
"RTN","ECRPRSN",189,0)
 Q
"RTN","ECRPRSN",190,0)
LOOP1 S ECPATN="" F  S ECPATN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD,ECPATN)) Q:ECPATN=""  Q:QFLAG  D
"RTN","ECRPRSN",191,0)
 .S ECDT="" F  S ECDT=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD,ECPATN,ECDT)) Q:ECDT=""  Q:QFLAG  D
"RTN","ECRPRSN",192,0)
 ..S ECPRVN=^(ECDT),PTNAME=$P(ECPRVN,"^",2),PTNAME=$E(PTNAME,1,22)
"RTN","ECRPRSN",193,0)
 ..S SSN=$P(ECPRVN,"^",3),ECPRVN=$P(ECPRVN,"^")
"RTN","ECRPRSN",194,0)
 ..S Y=ECDT D DD^%DT S DATE=$E(Y,1,18),PROVN=$E(ECPRVN,1,22)
"RTN","ECRPRSN",195,0)
 ..D:($Y+3>IOSL) HEAD Q:QFLAG  W !,?6,PTNAME,?30,SSN,?37,DATE,?57,PROVN
"RTN","ECRPRSN",196,0)
 W !
"RTN","ECRPRSN",197,0)
 Q
"RTN","ECRPRSN",198,0)
MODPRT ;ALB/JAM - print CPT procedure modifiers
"RTN","ECRPRSN",199,0)
 N MOD,I,MODESC,IEN,MODI
"RTN","ECRPRSN",200,0)
 W !?4,"Modifier: "
"RTN","ECRPRSN",201,0)
 F I=1:1 S IEN=$P(ECMOD,";",I) Q:IEN=""  D  I QFLAG Q
"RTN","ECRPRSN",202,0)
 . S MODI=$$MOD^ICPTMOD(IEN,"E",$P(ECED,".")),MOD=$P(MODI,"^",2) I MOD="" Q
"RTN","ECRPRSN",203,0)
 . S MODESC=$P(MODI,"^",3) I MODESC="UNKNOWN" Q
"RTN","ECRPRSN",204,0)
 . W:I>1 ! W ?18,"- ",MOD," ",MODESC I ($Y+3)>IOSL D HEAD
"RTN","ECRPRSN",205,0)
 Q
"RTN","ECRPRSN",206,0)
HEAD ;header
"RTN","ECRPRSN",207,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",208,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECRPRSN",209,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECRPRSN",210,0)
 S PAGE=PAGE+1
"RTN","ECRPRSN",211,0)
 W !,?12,"Event Capture Procedure Reason Report"
"RTN","ECRPRSN",212,0)
 W !,?12,"for the Date Range ",$$FMTE^XLFDT(ECSD2)," to ",$$FMTE^XLFDT(ECED2),!
"RTN","ECRPRSN",213,0)
 W !,?3,"DSS Unit: ",UNIT,?55,"Page: ",PAGE
"RTN","ECRPRSN",214,0)
 W !,?3,"Location: ",LOC,?52,"Printed: "_PRNTDT,!
"RTN","ECRPRSN",215,0)
 W !?6,"Patient",?30,"SSN",?37,"Date/Time",?57,"Provider"
"RTN","ECRPRSN",216,0)
 W !,DASH
"RTN","ECRPRSN",217,0)
 Q
"RTN","ECRPRSN",218,0)
EXIT ;common exit point
"RTN","ECRPRSN",219,0)
 D ^ECKILL D:'$D(ECGUI) ^%ZISC
"RTN","ECRPRSN",220,0)
 K ^TMP("ECREAS",$J) K JJ,X,Y,ZTSK,IO("Q"),DIR,DIRUT,DTOUT,DUOUT,ECSD
"RTN","ECRPRSN",221,0)
 K ECED,ECLOOP,ECLOC,ECDSSU,ECLINK,ASK,DIC
"RTN","ECRPRSN",222,0)
 Q
"RTN","ECSCR")
0^18^B7355090
"RTN","ECSCR",1,0)
ECSCR ;BIR/MAM,TTH,JPW-Retrieve Event Capture Location ;1 May 96
"RTN","ECSCR",2,0)
 ;;2.0; EVENT CAPTURE ;**1,63**;8 May 96
"RTN","ECSCR",3,0)
 S (ECOUT,X,CNT)=0 F I=0:0 S X=$O(^DIC(4,"LOC",X)) Q:X=""  S CNT=CNT+1,LOC(CNT)=X S Y=$O(^DIC(4,"LOC",X,0)),LOC(CNT)=LOC(CNT)_"^"_Y
"RTN","ECSCR",4,0)
 ;If the LOC array contains only one location, set the LOC1 array.
"RTN","ECSCR",5,0)
 I '$D(LOC(2)) S ECL=$P(LOC(1),"^",2),ECLOC=1,LOC1(1)=LOC(1) Q
"RTN","ECSCR",6,0)
 I $D(LOC(2)),$D(ECN),$D(ECY) W @IOF,!!,"Choose Event Capture Location for this event code screen.",! K ECY,ECN D LOC G END
"RTN","ECSCR",7,0)
 I $D(LOC(2)) D LL I '$D(ECL) Q
"RTN","ECSCR",8,0)
END ;Exit routine
"RTN","ECSCR",9,0)
 Q
"RTN","ECSCR",10,0)
LL ; select location
"RTN","ECSCR",11,0)
 S ECLOC=0,ECWORD="create^selectable^select a"
"RTN","ECSCR",12,0)
 W !!,"Do you want to "_$P(ECWORD,"^")_" this Event Code Screen for ALL locations ? YES//  " R X:DTIME Q:'$T!(X="^")  S:X="" X="Y" S X=$E(X) I "Yy"[X S ECL="ALL" Q
"RTN","ECSCR",13,0)
 S ECLOC=1 ;Specific location.
"RTN","ECSCR",14,0)
 I "YyNn"'[X W !!,"Enter <RET> if this procedure will be "_$P(ECWORD,"^",2)_" from all locations,",!,"or ""NO"" to "_$P(ECWORD,"^",3)_" location.",!! G LL
"RTN","ECSCR",15,0)
 W @IOF,!,"Event Capture Locations:  ",!
"RTN","ECSCR",16,0)
LOC S CNT=0 F I=0:0 S CNT=$O(LOC(CNT)) Q:'CNT  W !,CNT_". "_$P(LOC(CNT),"^")
"RTN","ECSCR",17,0)
ASK W !!,"Select Location: " R X:DTIME Q:'$T!("^"[X)  I '$D(LOC(X)) W !!,"Enter the number corresponding to the location you want to select.",! G ASK
"RTN","ECSCR",18,0)
 I X="" Q
"RTN","ECSCR",19,0)
 I $D(LOC1(X)) W !,"This location has already been selected." G ASK
"RTN","ECSCR",20,0)
 W "  "_$P(LOC(X),"^") S NUM=X,LOC1(NUM)=LOC(X) S ECL="ALL"
"RTN","ECSCR",21,0)
 G ASK
"RTN","ECSCR",22,0)
 Q
"RTN","ECSCR",23,0)
ASK2 ;Display selection to the user.
"RTN","ECSCR",24,0)
 W !,"Event Code Screen Information:"
"RTN","ECSCR",25,0)
 W !,"----------------------------",!
"RTN","ECSCR",26,0)
 W !,"DSS Unit : "_ECDN,!,"Category : "_ECCN,!,"Procedure: "_$$NAM^ECSCR
"RTN","ECSCR",27,0)
 K Y,DIRUT
"RTN","ECSCR",28,0)
 W ! S DIR(0)="Y",DIR("B")="YES",DIR("A")="Is this information correct"
"RTN","ECSCR",29,0)
 D ^DIR Q:$D(DIRUT)  S ECANS=+Y
"RTN","ECSCR",30,0)
 Q
"RTN","ECSCR",31,0)
NAM()   ;Display procedure name.
"RTN","ECSCR",32,0)
 I ECP'?1.N.";".E Q "UNKNOWN"
"RTN","ECSCR",33,0)
 N ECPF,ECPC
"RTN","ECSCR",34,0)
 S ECPF="^"_$P(ECP,";",2)
"RTN","ECSCR",35,0)
 S ECPC=$S($E($P(ECP,";",2),1)="E":1,1:3)
"RTN","ECSCR",36,0)
 S ECPN=$S(ECPC="E":$P(@(ECPF_+ECP_",0)"),U,ECPC),1:$P($$CPT^ICPTCOD(+ECP),U,ECPC))
"RTN","ECSCR",37,0)
 Q ECPN
"RTN","ECUTL")
0^15^B22344248
"RTN","ECUTL",1,0)
ECUTL ;ALB/GTS/JAM - Event Capture Utilities ;18 May 98
"RTN","ECUTL",2,0)
 ;;2.0; EVENT CAPTURE ;**10,18,47,63**;8 May 96
"RTN","ECUTL",3,0)
 ;
"RTN","ECUTL",4,0)
FNDVST(ECVST,ECRECNUM) ; Search EC Patient records for associated Visits
"RTN","ECUTL",5,0)
 ;
"RTN","ECUTL",6,0)
 ;   Input: ECVST    - Visit file IEN to search for
"RTN","ECUTL",7,0)
 ;          ECRECNUM - Event Capture record number to skip processing
"RTN","ECUTL",8,0)
 ;
"RTN","ECUTL",9,0)
 ;  Output: ECERR  1 - One of the records to resend lacks a zero node
"RTN","ECUTL",10,0)
 ;                 0 - All of the records to resend have zero nodes
"RTN","ECUTL",11,0)
 ;
"RTN","ECUTL",12,0)
 N ECIEN,ECERR,ECVAR
"RTN","ECUTL",13,0)
 I '$D(ECRECNUM) S ECRECNUM=0
"RTN","ECUTL",14,0)
 S (ECVAR,ECERR)=0
"RTN","ECUTL",15,0)
 S:+ECVST'>0 ECERR=1
"RTN","ECUTL",16,0)
 I ECERR=0 DO
"RTN","ECUTL",17,0)
 .S ECIEN=""
"RTN","ECUTL",18,0)
 .F  S ECIEN=$O(^ECH("C",ECVST,ECIEN)) Q:+ECIEN=0  DO
"RTN","ECUTL",19,0)
 ..S:ECRECNUM'=ECIEN ECVAR=$$RSEND(ECIEN)
"RTN","ECUTL",20,0)
 ..S:ECVAR>0 ECERR=1
"RTN","ECUTL",21,0)
FNDVSTQ Q ECERR
"RTN","ECUTL",22,0)
 ;
"RTN","ECUTL",23,0)
RSEND(ECIEN) ; Prepare EC Patient record for resending to PCE
"RTN","ECUTL",24,0)
 ;
"RTN","ECUTL",25,0)
 ;   Input:  ECIEN - IEN for record to resend to PCE
"RTN","ECUTL",26,0)
 ;
"RTN","ECUTL",27,0)
 ;  Output:  0 if successful   - EC Patient record will be resent to PCE
"RTN","ECUTL",28,0)
 ;           1 if Unsuccessful - EC Patient record lacks zero node
"RTN","ECUTL",29,0)
 ;
"RTN","ECUTL",30,0)
 N ECERR,DA,DIE,DR,ECPROCDT
"RTN","ECUTL",31,0)
 S ECERR=0
"RTN","ECUTL",32,0)
 I '$D(^ECH(ECIEN,0)) S ECERR=1
"RTN","ECUTL",33,0)
 I ECERR=0 DO
"RTN","ECUTL",34,0)
 .S ECPROCDT=$P(^ECH(ECIEN,0),"^",3)
"RTN","ECUTL",35,0)
 .S DA=ECIEN,DIE=721,DR="25///@;28///@;31///^S X=ECPROCDT;32///@"
"RTN","ECUTL",36,0)
 .D ^DIE
"RTN","ECUTL",37,0)
RSENDQ Q ECERR
"RTN","ECUTL",38,0)
MODSCN() ;Screen CPT Procedure Modifier
"RTN","ECUTL",39,0)
 N ECPT,ECCPT,ECPDT
"RTN","ECUTL",40,0)
 S ECCPT="" I $G(ECP)'="" D
"RTN","ECUTL",41,0)
 . S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECUTL",42,0)
 S ECPDT=$S($D(^ECH(DA,0)):$P(^ECH(DA,0),U,3),$D(ECDT):ECDT,1:"")
"RTN","ECUTL",43,0)
 S ECPT=$S($D(^ECH(DA,"P")):$P(^ECH(DA,"P"),U),ECCPT'="":ECCPT,1:"")
"RTN","ECUTL",44,0)
 I ECPT'="",+$$MODP^ICPTMOD(ECPT,+Y,"I",ECPDT)>0
"RTN","ECUTL",45,0)
 Q
"RTN","ECUTL",46,0)
ASKMOD(PROC,MOD,PRDT,ECMOD,ECERR) ; Ask CPT modifiers for CPT procedure
"RTN","ECUTL",47,0)
 ; Input           PROC  = CPT Procedure
"RTN","ECUTL",48,0)
 ;                 MOD   = Default modifier
"RTN","ECUTL",49,0)
 ;                 PRDT  = Date/Time of procedure. Checks modifier status
"RTN","ECUTL",50,0)
 ;
"RTN","ECUTL",51,0)
 ;Output           ECMOD(  array with modifiers
"RTN","ECUTL",52,0)
 ;                 ECERR = Error flag 1 - error or 0 - no error.
"RTN","ECUTL",53,0)
 ;
"RTN","ECUTL",54,0)
 N DTOUT,DUOUT,DIROUT,SUB,I,DEF,DIR,DIC,DSC,IEN,DATA,MODAR
"RTN","ECUTL",55,0)
 S ECERR=$G(ECERR,0),DEF=""
"RTN","ECUTL",56,0)
 I PROC="" S ECERR=1 G ASKMODQ
"RTN","ECUTL",57,0)
 I '$D(PRDT) S PRDT=""
"RTN","ECUTL",58,0)
 S DIC="^ICPT(",DIC(0)="N",X=PROC
"RTN","ECUTL",59,0)
 S DIC("S")="I $P($$CPT^ICPTCOD(+Y,PRDT),""^"",7)"
"RTN","ECUTL",60,0)
 D ^DIC I +Y=-1 S ECERR=1 G ASKMODQ
"RTN","ECUTL",61,0)
 ;If no modifiers present for CPT code quit
"RTN","ECUTL",62,0)
 S DATA=$$CODM^ICPTCOD(PROC,"MODAR","",PRDT)
"RTN","ECUTL",63,0)
 G:$O(MODAR(""))="" ASKMODQ K MODAR
"RTN","ECUTL",64,0)
 ;Set modifiers in ECMOD array if a valid pair (CPT code/modifier)
"RTN","ECUTL",65,0)
 S SUB="" F I=1:1 S SUB=$P(MOD,",",I) Q:SUB=""  D
"RTN","ECUTL",66,0)
 . S DATA=$$MODP^ICPTMOD(PROC,SUB,"E",PRDT)
"RTN","ECUTL",67,0)
 . I +DATA'>0 W !?2,"Modifier: ",SUB," Invalid - ",$P(DATA,U,2) Q
"RTN","ECUTL",68,0)
 . S DSC=$P(DATA,U,2),IEN=$P(DATA,U),ECMOD(PROC,SUB)=DSC_U_IEN,DEF=SUB
"RTN","ECUTL",69,0)
 ;List modifiers entered
"RTN","ECUTL",70,0)
 S SUB="" F I=1:1 S SUB=$O(ECMOD(PROC,SUB)) Q:SUB=""  D
"RTN","ECUTL",71,0)
 . W !?2,"Modifier: ",SUB," ",$P(ECMOD(PROC,SUB),U)
"RTN","ECUTL",72,0)
 I DEF'="" S DIR("B")=DEF
"RTN","ECUTL",73,0)
AGAIN N Y,X,DEFX,ECY
"RTN","ECUTL",74,0)
 S DIR("A")="Modifier",DIR("?")="^D MODHLP^ECUTL"
"RTN","ECUTL",75,0)
 S DIR(0)="FO^^I $$VALMOD^ECUTL(PROC,X,PRDT)",DEFX=""
"RTN","ECUTL",76,0)
 D ^DIR K DIR G:X="" ASKMODQ
"RTN","ECUTL",77,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIROUT)) K ECMOD(PROC) S ECERR=1 G ASKMODQ
"RTN","ECUTL",78,0)
 D  G AGAIN
"RTN","ECUTL",79,0)
 . I X="@" K:DEF'="" ECMOD(PROC,DEF) W "  ...deleted" Q
"RTN","ECUTL",80,0)
 . I '$D(ECY) Q
"RTN","ECUTL",81,0)
 . I DEF'=DEFX,DEFX'="",$D(ECMOD(PROC,DEFX)) S (DEF,DIR("B"))=DEFX Q
"RTN","ECUTL",82,0)
 . K DIR("B") S ECMOD(PROC,$P(ECY,U,2))=$P(ECY(0),U,2)_U_$P(ECY,U),DEF=""
"RTN","ECUTL",83,0)
 ;
"RTN","ECUTL",84,0)
ASKMODQ Q $S(ECERR:0,1:1)
"RTN","ECUTL",85,0)
 ;
"RTN","ECUTL",86,0)
VALMOD(PROC,X,PRDT) ;Validate modifiers
"RTN","ECUTL",87,0)
 N DIC,DTOUT,DUOUT,DIROUT,DUOUT
"RTN","ECUTL",88,0)
 S DIC="^DIC(81.3,",DIC(0)="MEQZ"
"RTN","ECUTL",89,0)
 S DIC("W")="W ""   "" W ""   "",$P($$MOD^ICPTMOD(+Y,""I"",$G(PRDT)),U,3)"
"RTN","ECUTL",90,0)
 S DIC("S")="I +$$MODP^ICPTMOD(PROC,Y,""I"",PRDT)>0"
"RTN","ECUTL",91,0)
 D ^DIC I Y<0 K X Q 1
"RTN","ECUTL",92,0)
 M ECY=Y S DEFX=$P(Y,U,2)
"RTN","ECUTL",93,0)
 Q 1
"RTN","ECUTL",94,0)
MODHLP ;Help for CPT modifiers
"RTN","ECUTL",95,0)
 N DIC,MOD,D
"RTN","ECUTL",96,0)
 Q:'$D(PROC)  I $D(ECMOD(PROC)) D
"RTN","ECUTL",97,0)
 . W !?2,"Answer with CPT MODIFIER",!?1,"Choose from:"
"RTN","ECUTL",98,0)
 . S MOD="" F  S MOD=$O(ECMOD(PROC,MOD)) Q:MOD=""  W !,?4,MOD
"RTN","ECUTL",99,0)
 W !?6,"You may enter a new CPT MODIFIER, if you wish"
"RTN","ECUTL",100,0)
 W !?6,"Enter a modifier that is valid for the CPT procedure code."
"RTN","ECUTL",101,0)
 S DIC="^DIC(81.3,",DIC("W")="W ""   "" W ""   "",$P($$MOD^ICPTMOD(+Y,""I"",$G(PRDT)),U,3)",D="B"
"RTN","ECUTL",102,0)
 S DIC(0)="QEZ",DIC("S")="I +$$MODP^ICPTMOD(PROC,Y,""I"",$G(PRDT))>0"
"RTN","ECUTL",103,0)
 D DQ^DICQ
"RTN","ECUTL",104,0)
 Q
"RTN","ECUTL",105,0)
MOD(ECIEN,MFT,OUTARR) ;Returns modifiers associated with an EC Patient IEN
"RTN","ECUTL",106,0)
 ;  Input: ECIEN  - IEN entry in file 721/^ECH(
"RTN","ECUTL",107,0)
 ;         MFT    - format to provide modifier
"RTN","ECUTL",108,0)
 ;                  "I" - ien format
"RTN","ECUTL",109,0)
 ;                  "E" - .01 format (default)
"RTN","ECUTL",110,0)
 ;
"RTN","ECUTL",111,0)
 ; Output: OUTARR - output array subscripted by modifer ien or .01 value 
"RTN","ECUTL",112,0)
 ;                  ien^modifier^modifier description
"RTN","ECUTL",113,0)
 ;         returns 1 if successful or 0 if unsuccessful
"RTN","ECUTL",114,0)
 ;      
"RTN","ECUTL",115,0)
 I $G(ECIEN)="" Q 0  ;IEN not define.
"RTN","ECUTL",116,0)
 I '$D(^ECH(ECIEN)) Q 0  ;IEN does not exist in file 721/^ECH(
"RTN","ECUTL",117,0)
 I $O(^ECH(ECIEN,"MOD",0))="" Q 0  ;No modifiers on file for entry
"RTN","ECUTL",118,0)
 N MOD,IEN,ECMERR,MODARY,MODESC,SUB,SEQ,ECDT
"RTN","ECUTL",119,0)
 S MFT=$S($G(MFT)="":"E",1:MFT) I "E^I"'[$E(MFT) S MFT="E"
"RTN","ECUTL",120,0)
 S ECDT=$P($G(^ECH(ECIEN,0)),U,3)
"RTN","ECUTL",121,0)
 D GETS^DIQ(721,ECIEN,"36*","IE","MODARY","ECMERR")
"RTN","ECUTL",122,0)
 I $D(ECMERR) Q 0  ;Error looking up entry
"RTN","ECUTL",123,0)
 S SEQ="" F  S SEQ=$O(MODARY(721.036,SEQ)) Q:SEQ=""  D
"RTN","ECUTL",124,0)
 . S SUB=$G(MODARY(721.036,SEQ,.01,MFT)) I SUB="" Q
"RTN","ECUTL",125,0)
 . S IEN=$G(MODARY(721.036,SEQ,.01,"I")) I IEN="" Q
"RTN","ECUTL",126,0)
 . S MOD=$G(MODARY(721.036,SEQ,.01,"E")) I MOD="" S MOD="Unknown"
"RTN","ECUTL",127,0)
 . S MODESC=$P($$MOD^ICPTMOD(MOD,"E",ECDT),U,3)
"RTN","ECUTL",128,0)
 . I MODESC="" S MODESC="Unknown"
"RTN","ECUTL",129,0)
 . S OUTARR(SUB)=IEN_U_MOD_U_MODESC
"RTN","ECUTL",130,0)
 Q $S($D(OUTARR):1,1:0)
"RTN","ECUTL2")
0^16^B30517576
"RTN","ECUTL2",1,0)
ECUTL2 ;ALB/JAM - Event Capture Diagnosis Code Selection ;11 Jan 2000
"RTN","ECUTL2",2,0)
 ;;2.0; EVENT CAPTURE ;**23,33,47,63**;8 May 96
"RTN","ECUTL2",3,0)
DIAG ;ask dx question (primary and multiple secondary) 
"RTN","ECUTL2",4,0)
 ;check for primary dx and display message
"RTN","ECUTL2",5,0)
 D PDXMSG
"RTN","ECUTL2",6,0)
 ;ask for primary dx
"RTN","ECUTL2",7,0)
 D PDX I ECOUT Q
"RTN","ECUTL2",8,0)
 ;ask for secondary dx
"RTN","ECUTL2",9,0)
 D SDX I ECOUT Q
"RTN","ECUTL2",10,0)
 I $D(DTOUT)!$D(DUOUT)!('Y)!(Y<0) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without a diagnosis.",!!
"RTN","ECUTL2",11,0)
 Q
"RTN","ECUTL2",12,0)
PDXMSG ; Check for existence of primary diagnoses and display message
"RTN","ECUTL2",13,0)
 N TXT,ECPDX
"RTN","ECUTL2",14,0)
 S (ECDX,ECDXN,ECDXO)="" K ECDXS
"RTN","ECUTL2",15,0)
 ;Check if primay dx exist in file #721
"RTN","ECUTL2",16,0)
 S ECPDX=$$PDXCK(ECDFN,ECDT,ECL,EC4)
"RTN","ECUTL2",17,0)
 I +ECPDX W ! D 
"RTN","ECUTL2",18,0)
 . W !?5,"WARNING: Primary Diagnoses already on File for this encounter."
"RTN","ECUTL2",19,0)
 . W !?5,"If changed, all procedures will be updated. ("_ECDXN_")"
"RTN","ECUTL2",20,0)
 . S ECDXO=ECDX
"RTN","ECUTL2",21,0)
 I $P(ECPDX,U,2) D
"RTN","ECUTL2",22,0)
 . S TXT="WARNING: Primary diagnoses already sent to PCE. If changed,"
"RTN","ECUTL2",23,0)
 . S TXT=TXT_" all procedures"
"RTN","ECUTL2",24,0)
 . W !!?5,TXT
"RTN","ECUTL2",25,0)
 . S TXT="associated with this encounter will be updated and resent "
"RTN","ECUTL2",26,0)
 . S TXT=TXT_"to PCE."
"RTN","ECUTL2",27,0)
 . W !?5,TXT
"RTN","ECUTL2",28,0)
 Q
"RTN","ECUTL2",29,0)
PDXCK(ECDFN,ECDTX,ECLX,EC4X) ;Get primary dx frm file #721 for pat encounter
"RTN","ECUTL2",30,0)
 ;   Input:   ECDFN     = Patient ien
"RTN","ECUTL2",31,0)
 ;            ECDTX     = Date/time of procedure
"RTN","ECUTL2",32,0)
 ;            ECLX      = Location ien
"RTN","ECUTL2",33,0)
 ;            EC4X      = Clinic ien
"RTN","ECUTL2",34,0)
 ;
"RTN","ECUTL2",35,0)
 ;   Output:  PDXF^PCEF = primary dx flag (1/0)^dx sent to PCE flag (1/0)
"RTN","ECUTL2",36,0)
 ;            ECDX      = Primary diagnoses ien
"RTN","ECUTL2",37,0)
 ;            ECDXN     = Primary diagnoses code
"RTN","ECUTL2",38,0)
 ;            ECDXIEN   = Array of encounter IENs w primary dx
"RTN","ECUTL2",39,0)
 ;
"RTN","ECUTL2",40,0)
 N PDXF,PCEF,DA,DXIEN,DXS,DXN
"RTN","ECUTL2",41,0)
 S (PDXF,PCEF)=0,DA="" K ECDXIEN
"RTN","ECUTL2",42,0)
 I $G(ECDFN)=""!($G(ECDTX)="")!($G(ECLX)="")!($G(EC4X)="") Q PDXF_U_PCEF
"RTN","ECUTL2",43,0)
 I $O(^ECH("APAT",ECDFN,ECDTX,""))="" Q PDXF_U_PCEF
"RTN","ECUTL2",44,0)
 F  S DA=$O(^ECH("APAT",ECDFN,ECDTX,DA)) Q:DA=""  D
"RTN","ECUTL2",45,0)
 . I EC4X'=$P($G(^ECH(DA,0)),U,19) Q
"RTN","ECUTL2",46,0)
 . S ECDX=$P($G(^ECH(DA,"P")),U,2) I ECDX="" Q
"RTN","ECUTL2",47,0)
 . S ECDXN=$P($$ICDDX^ICDCODE(ECDX,ECDTX),U,2)
"RTN","ECUTL2",48,0)
 . S ECDXIEN(DA)=ECDXN_U_ECDX,PDXF=1
"RTN","ECUTL2",49,0)
 . I $D(^ECH(DA,"SEND")),^("SEND")="" S PCEF=1
"RTN","ECUTL2",50,0)
 . I $D(^ECH(DA,"DX")) D
"RTN","ECUTL2",51,0)
 . . S DXS=0 F  S DXS=$O(^ECH(DA,"DX",DXS)) Q:'DXS  D
"RTN","ECUTL2",52,0)
 ...S DXIEN=$P($G(^ECH(DA,"DX",DXS,0)),U)
"RTN","ECUTL2",53,0)
 ...S DXN=$P($$ICDDX^ICDCODE(DXIEN,ECDTX),U,2) S:DXN'="" ECDXS(DXN)=DXIEN
"RTN","ECUTL2",54,0)
 Q PDXF_U_PCEF
"RTN","ECUTL2",55,0)
PDX ;Ask primary diagnoses code
"RTN","ECUTL2",56,0)
 ;   Variables:   ECDX    = Primary diagnoses ien
"RTN","ECUTL2",57,0)
 ;                ECDXN   = Primary diagnoses code, default if define
"RTN","ECUTL2",58,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECUTL2",59,0)
 ;   
"RTN","ECUTL2",60,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","ECUTL2",61,0)
 S ECDX=$G(ECDX),ECDXN=$G(ECDXN)
"RTN","ECUTL2",62,0)
 S DIR(0)="721,20",DIR("A")="Primary ICD-9 Code" S:ECDXN DIR("B")=ECDXN
"RTN","ECUTL2",63,0)
 D ^DIR
"RTN","ECUTL2",64,0)
 I Y S ECDX=+Y,ECDXN=Y(0,0) Q
"RTN","ECUTL2",65,0)
 I $D(DTOUT)!$D(DUOUT) S ECOUT=1 Q
"RTN","ECUTL2",66,0)
 I 'Y!(Y<0) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without a diagnosis.",!!  ;;;may be able to remove this
"RTN","ECUTL2",67,0)
 Q
"RTN","ECUTL2",68,0)
SDX ;Ask secondary diagnoses code
"RTN","ECUTL2",69,0)
 ;   Variables:   ECDX    = Primary diagnoses ien, default if define
"RTN","ECUTL2",70,0)
 ;                ECDXN   = Primary diagnoses code
"RTN","ECUTL2",71,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECUTL2",72,0)
 ;                ECDXS   = Array with secondary diagnosis code
"RTN","ECUTL2",73,0)
 ;                          subscript=dx code and set equal to dx ien
"RTN","ECUTL2",74,0)
 ;
"RTN","ECUTL2",75,0)
 N Y,X,DEF,DEFX,ECY,DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,ICDVDT
"RTN","ECUTL2",76,0)
 S DEF=$O(ECDXS(""),-1),ECOUT=$G(ECOUT) S:DEF'="" DIR("B")=DEF
"RTN","ECUTL2",77,0)
RPT S DIR("A")="Secondary ICD-9 Code",DIR("?")="^D DXSHLP^ECUTL2",DEFX=""
"RTN","ECUTL2",78,0)
 S DIR(0)="FO^^I $$VALSDX^ECUTL2(X)",ICDVDT=$G(ECDT)
"RTN","ECUTL2",79,0)
 D ^DIR K DIR I X="" Q
"RTN","ECUTL2",80,0)
 I $D(DTOUT)!($D(DUOUT))!($D(DIROUT)) K ECDXS S ECOUT=1 Q
"RTN","ECUTL2",81,0)
 D  G RPT
"RTN","ECUTL2",82,0)
 . I X="@" K:DEF'="" ECDXS(DEF) W "    "_DEF_"...deleted" Q
"RTN","ECUTL2",83,0)
 . I '$D(ECY) Q
"RTN","ECUTL2",84,0)
 . I +ECY=ECDX W "    ...same as primary dx - deleted" Q
"RTN","ECUTL2",85,0)
 . I DEF'=DEFX,DEFX'="",$D(ECDXS(DEFX)) S (DEF,DIR("B"))=DEFX Q
"RTN","ECUTL2",86,0)
 . K DIR("B") S ECDXS($P(ECY,U,2))=$P(ECY,U),DEF=""
"RTN","ECUTL2",87,0)
 Q
"RTN","ECUTL2",88,0)
VALSDX(X) ;Validate modifiers
"RTN","ECUTL2",89,0)
 N DIC,DTOUT,DUOUT,DIROUT,DIROUT
"RTN","ECUTL2",90,0)
 S DIC="^ICD9(",DIC(0)="MEQZ",DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)"
"RTN","ECUTL2",91,0)
 D ^DIC I Y<0 K X Q 1
"RTN","ECUTL2",92,0)
 K ECY M ECY=Y S DEFX=$P(Y,U,2)
"RTN","ECUTL2",93,0)
 Q 1
"RTN","ECUTL2",94,0)
DXSHLP ;Help for Diagnoses Code
"RTN","ECUTL2",95,0)
 N DIC,DXS,D
"RTN","ECUTL2",96,0)
 I $D(ECDXS) D
"RTN","ECUTL2",97,0)
 . W !?1,"Answer with ICD-9 Diagnoses Code",!?1,"Choose from:"
"RTN","ECUTL2",98,0)
 . S DXS="" F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  W !,?4,DXS
"RTN","ECUTL2",99,0)
 W !?6,"You may enter a new ICD-9 Diagnoses Code, if you wish."
"RTN","ECUTL2",100,0)
 W !?6,"Enter the secondary ICD-9 code for this procedure."
"RTN","ECUTL2",101,0)
 S DIC="^ICD9(",D="B",DIC(0)="MQEZ",DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)"
"RTN","ECUTL2",102,0)
 D DQ^DICQ
"RTN","ECUTL2",103,0)
 Q
"RTN","ECUTL2",104,0)
PXUPD(ECDFN,ECDT,ECL,EC4,ECDXP,ECDXX,ECXIEN) ; Update all associated
"RTN","ECUTL2",105,0)
 ; procedures for an EC Patient encounter with the same primary and 
"RTN","ECUTL2",106,0)
 ; secondary dx codes
"RTN","ECUTL2",107,0)
 ;
"RTN","ECUTL2",108,0)
 ;   Input:   ECDFN     = Patient ien
"RTN","ECUTL2",109,0)
 ;            ECDT      = Date/time of procedure
"RTN","ECUTL2",110,0)
 ;            ECL       = Location ien
"RTN","ECUTL2",111,0)
 ;            EC4       = Clinic ien
"RTN","ECUTL2",112,0)
 ;            ECDXP     = Primary diagnoses code
"RTN","ECUTL2",113,0)
 ;            ECDXX     = Array of secondary diagnoses codes
"RTN","ECUTL2",114,0)
 ;            ECXIEN    = 721 ien, if define dont process
"RTN","ECUTL2",115,0)
 ;
"RTN","ECUTL2",116,0)
 ;  Output: ECERR  0 - Process completed
"RTN","ECUTL2",117,0)
 ;
"RTN","ECUTL2",118,0)
 N ECIEN,ECERR,DIE,DR,DA,DTOUT,DIROUT,ECDXIEN,ECPDX,ECDX,ECDXN,DIC,X
"RTN","ECUTL2",119,0)
 N ECVST,ECVAR1,VALQUIET,DXN,DXSIEN,DIK,ECDXS
"RTN","ECUTL2",120,0)
 S ECERR=0
"RTN","ECUTL2",121,0)
 I $D(ECDXP)="" Q ECERR
"RTN","ECUTL2",122,0)
 S ECPDX=$$PDXCK(ECDFN,ECDT,ECL,EC4)
"RTN","ECUTL2",123,0)
 I '$D(ECDXIEN) Q ECERR
"RTN","ECUTL2",124,0)
 S ECIEN="",DIE="^ECH("
"RTN","ECUTL2",125,0)
 F  S ECIEN=$O(ECDXIEN(ECIEN)) Q:ECIEN=""  D
"RTN","ECUTL2",126,0)
 . I $G(ECXIEN)'="",ECXIEN=ECIEN Q
"RTN","ECUTL2",127,0)
 . S ECNODE=$G(^ECH(ECIEN,"P")) I ECNODE="" Q
"RTN","ECUTL2",128,0)
 . I ECDXP'=$P(ECNODE,U,2) D
"RTN","ECUTL2",129,0)
 . . S DA=ECIEN,DR="20////"_ECDXP D ^DIE
"RTN","ECUTL2",130,0)
 . . S $P(^ECH(ECIEN,"PCE"),"~",11)=ECDXP
"RTN","ECUTL2",131,0)
 . ;delete all secondary diagnosis codes
"RTN","ECUTL2",132,0)
 . S DA(1)=ECIEN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECUTL2",133,0)
 . F  S DA=$O(^ECH(ECIEN,"DX",DA)) Q:'DA  D ^DIK
"RTN","ECUTL2",134,0)
 . I $D(^ECH(ECIEN,"DX")) K ^ECH(ECIEN,"DX")
"RTN","ECUTL2",135,0)
 . ;update secondary diagnosis codes on procedure
"RTN","ECUTL2",136,0)
 . S DXN="" F  S DXN=$O(ECDXX(DXN)) Q:DXN=""  D
"RTN","ECUTL2",137,0)
 . . S DXSIEN=$P(ECDXX(DXN),U) I DXSIEN<0 Q
"RTN","ECUTL2",138,0)
 . . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECUTL2",139,0)
 . . S X=DXSIEN,DIC="^ECH("_DA(1)_","_"""DX"""_"," D FILE^DICN
"RTN","ECUTL2",140,0)
 . ;delete visit and resend to PCE
"RTN","ECUTL2",141,0)
 . S ECVST=+$P($G(^ECH(ECIEN,0)),"^",21) I 'ECVST Q
"RTN","ECUTL2",142,0)
 . ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECUTL2",143,0)
 . S ECVAR1=$$FNDVST^ECUTL(ECVST)
"RTN","ECUTL2",144,0)
 . ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECUTL2",145,0)
 . S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST)
"RTN","ECUTL2",146,0)
 Q ECERR
"UP",721,721.038,-1)
721^DX
"UP",721,721.038,0)
721.038
"VER")
8.0^22.0
"^DD",721,721,20,0)
PRIMARY ICD-9 CODE^R*P80'X^ICD9(^P;2^N ICDVDT S ICDVDT=$G(ECDT),DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",721,721,20,.1)
Primary ICD-9 Code (Diagnosis)
"^DD",721,721,20,3)
Enter the Primary ICD-9 code for this encounter.
"^DD",721,721,20,12)
Allows selection of active codes only.
"^DD",721,721,20,12.1)
S DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)"
"^DD",721,721,20,21,0)
^.001^1^1^3040415^^^^
"^DD",721,721,20,21,1,0)
The Primary ICD-9 (diagnosis) for this encounter.
"^DD",721,721,20,23,0)
^.001^1^1^3040415^^^^
"^DD",721,721,20,23,1,0)
Primary ICD-9 CODE is derived from the ICD DIAGNOSIS file (#80).
"^DD",721,721,20,"DT")
3040420
"^DD",721,721,38,0)
SECONDARY ICD-9 CODE^721.038PA^^DX;0
"^DD",721,721,38,12)
Selects only active ICD-9 codes.
"^DD",721,721,38,12.1)
S DIC("S")="I '$P(^(0),""^"",9)"
"^DD",721,721,38,21,0)
^^1^1^3000403^^^^
"^DD",721,721,38,21,1,0)
The secondary ICD-9 diagnoses code for the procedure performed.
"^DD",721,721,38,23,0)
^^1^1^3000403^^
"^DD",721,721,38,23,1,0)
This field originates from the ICD-9 file #80.
"^DD",721,721.038,0)
SECONDARY ICD-9 CODE SUB-FIELD^^.01^1
"^DD",721,721.038,0,"NM","SECONDARY ICD-9 CODE")

"^DD",721,721.038,.01,0)
SECONDARY ICD-9 CODE^M*P80'X^ICD9(^0;1^N ICDVDT S ICDVDT=$G(ECDT),DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",721,721.038,.01,1,0)
^.1
"^DD",721,721.038,.01,1,1,0)
721.038^B
"^DD",721,721.038,.01,1,1,1)
S ^ECH(DA(1),"DX","B",$E(X,1,30),DA)=""
"^DD",721,721.038,.01,1,1,2)
K ^ECH(DA(1),"DX","B",$E(X,1,30),DA)
"^DD",721,721.038,.01,3)
Enter the secondary ICD-9 code for this procedure.
"^DD",721,721.038,.01,12)
Allows selection of active codes only.
"^DD",721,721.038,.01,12.1)
S DIC("S")="I $P($$ICDDX^ICDCODE(+Y,$G(ECDT)),""^"",10)"
"^DD",721,721.038,.01,21,0)
^^1^1^3000403^^
"^DD",721,721.038,.01,21,1,0)
The secondary ICD-9 diagnoses code for the procedure performed.
"^DD",721,721.038,.01,23,0)
^^1^1^3000403^^
"^DD",721,721.038,.01,23,1,0)
This field originates from the ICD-9 file #80.
"^DD",721,721.038,.01,"DT")
3040420
**INSTALL NAME**
PX*1.0*149
"BLD",4105,0)
PX*1.0*149^PCE PATIENT CARE ENCOUNTER^0^3040812^y
"BLD",4105,4,0)
^9.64PA^9000010.18^1
"BLD",4105,4,9000010.18,0)
9000010.18
"BLD",4105,4,9000010.18,2,0)
^9.641^9000010.18^1
"BLD",4105,4,9000010.18,2,9000010.18,0)
V CPT  (File-top level)
"BLD",4105,4,9000010.18,2,9000010.18,1,0)
^9.6411^.01^1
"BLD",4105,4,9000010.18,2,9000010.18,1,.01,0)
CPT
"BLD",4105,4,9000010.18,222)
y^y^p^^^^n^^n
"BLD",4105,4,9000010.18,224)

"BLD",4105,4,"APDD",9000010.18,9000010.18)

"BLD",4105,4,"APDD",9000010.18,9000010.18,.01)

"BLD",4105,4,"B",9000010.18,9000010.18)

"BLD",4105,"ABPKG")
n
"BLD",4105,"KRN",0)
^9.67PA^8989.52^19
"BLD",4105,"KRN",.4,0)
.4
"BLD",4105,"KRN",.401,0)
.401
"BLD",4105,"KRN",.402,0)
.402
"BLD",4105,"KRN",.403,0)
.403
"BLD",4105,"KRN",.5,0)
.5
"BLD",4105,"KRN",.84,0)
.84
"BLD",4105,"KRN",3.6,0)
3.6
"BLD",4105,"KRN",3.8,0)
3.8
"BLD",4105,"KRN",9.2,0)
9.2
"BLD",4105,"KRN",9.8,0)
9.8
"BLD",4105,"KRN",9.8,"NM",0)
^9.68A^12^12
"BLD",4105,"KRN",9.8,"NM",1,0)
PXBPPOV^^0^B22349563
"BLD",4105,"KRN",9.8,"NM",2,0)
PXBGCPT^^0^B5304523
"BLD",4105,"KRN",9.8,"NM",3,0)
PXBPCPT^^0^B42867759
"BLD",4105,"KRN",9.8,"NM",4,0)
PXBSTOR^^0^B35265912
"BLD",4105,"KRN",9.8,"NM",5,0)
PXAICPT^^0^B18329486
"BLD",4105,"KRN",9.8,"NM",6,0)
PXUTL1^^0^B10780309
"BLD",4105,"KRN",9.8,"NM",7,0)
AUPNSICD^^0^B769952
"BLD",4105,"KRN",9.8,"NM",8,0)
PXBGCPT2^^0^B35781906
"BLD",4105,"KRN",9.8,"NM",9,0)
PXBGPOV^^0^B7160921
"BLD",4105,"KRN",9.8,"NM",10,0)
PXBGPOV2^^0^B32289021
"BLD",4105,"KRN",9.8,"NM",11,0)
PXCEPOV1^^0^B23657237
"BLD",4105,"KRN",9.8,"NM",12,0)
PXBPMOD^^0^B5869951
"BLD",4105,"KRN",9.8,"NM","B","AUPNSICD",7)

"BLD",4105,"KRN",9.8,"NM","B","PXAICPT",5)

"BLD",4105,"KRN",9.8,"NM","B","PXBGCPT",2)

"BLD",4105,"KRN",9.8,"NM","B","PXBGCPT2",8)

"BLD",4105,"KRN",9.8,"NM","B","PXBGPOV",9)

"BLD",4105,"KRN",9.8,"NM","B","PXBGPOV2",10)

"BLD",4105,"KRN",9.8,"NM","B","PXBPCPT",3)

"BLD",4105,"KRN",9.8,"NM","B","PXBPMOD",12)

"BLD",4105,"KRN",9.8,"NM","B","PXBPPOV",1)

"BLD",4105,"KRN",9.8,"NM","B","PXBSTOR",4)

"BLD",4105,"KRN",9.8,"NM","B","PXCEPOV1",11)

"BLD",4105,"KRN",9.8,"NM","B","PXUTL1",6)

"BLD",4105,"KRN",19,0)
19
"BLD",4105,"KRN",19.1,0)
19.1
"BLD",4105,"KRN",101,0)
101
"BLD",4105,"KRN",409.61,0)
409.61
"BLD",4105,"KRN",771,0)
771
"BLD",4105,"KRN",870,0)
870
"BLD",4105,"KRN",8989.51,0)
8989.51
"BLD",4105,"KRN",8989.52,0)
8989.52
"BLD",4105,"KRN",8994,0)
8994
"BLD",4105,"KRN","B",.4,.4)

"BLD",4105,"KRN","B",.401,.401)

"BLD",4105,"KRN","B",.402,.402)

"BLD",4105,"KRN","B",.403,.403)

"BLD",4105,"KRN","B",.5,.5)

"BLD",4105,"KRN","B",.84,.84)

"BLD",4105,"KRN","B",3.6,3.6)

"BLD",4105,"KRN","B",3.8,3.8)

"BLD",4105,"KRN","B",9.2,9.2)

"BLD",4105,"KRN","B",9.8,9.8)

"BLD",4105,"KRN","B",19,19)

"BLD",4105,"KRN","B",19.1,19.1)

"BLD",4105,"KRN","B",101,101)

"BLD",4105,"KRN","B",409.61,409.61)

"BLD",4105,"KRN","B",771,771)

"BLD",4105,"KRN","B",870,870)

"BLD",4105,"KRN","B",8989.51,8989.51)

"BLD",4105,"KRN","B",8989.52,8989.52)

"BLD",4105,"KRN","B",8994,8994)

"BLD",4105,"QUES",0)
^9.62^^
"BLD",4105,"REQB",0)
^9.611^5^4
"BLD",4105,"REQB",2,0)
ICD*18.0*12^2
"BLD",4105,"REQB",3,0)
ICPT*6.0*19^2
"BLD",4105,"REQB",4,0)
PX*1.0*136^2
"BLD",4105,"REQB",5,0)
PX*1.0*134^2
"BLD",4105,"REQB","B","ICD*18.0*12",2)

"BLD",4105,"REQB","B","ICPT*6.0*19",3)

"BLD",4105,"REQB","B","PX*1.0*134",5)

"BLD",4105,"REQB","B","PX*1.0*136",4)

"FIA",9000010.18)
V CPT
"FIA",9000010.18,0)
^AUPNVCPT(
"FIA",9000010.18,0,0)
9000010.18IP
"FIA",9000010.18,0,1)
y^y^p^^^^n^^n
"FIA",9000010.18,0,10)

"FIA",9000010.18,0,11)

"FIA",9000010.18,0,"RLRO")

"FIA",9000010.18,0,"VR")
1.0^PX
"FIA",9000010.18,9000010.18)
1
"FIA",9000010.18,9000010.18,.01)

"MBREQ")
1
"PKG",507,-1)
1^1
"PKG",507,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter
"PKG",507,20,0)
^9.402P^^
"PKG",507,22,0)
^9.49I^1^1
"PKG",507,22,1,0)
1.0^2960812^2960912^10958
"PKG",507,22,1,"PAH",1,0)
149^3040812^100996
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
12
"RTN","AUPNSICD")
0^7^B769952
"RTN","AUPNSICD",1,0)
AUPNSICD ;OHPRD/LAB - Screen Purpose of Visit/ICD9 codes ; 5/1/03 11:52am
"RTN","AUPNSICD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**121,149**;Aug 12, 1996
"RTN","AUPNSICD",3,0)
 ;;93.2;IHS PATIENT DICTIONARIES.;;JUL 01, 1993
"RTN","AUPNSICD",4,0)
 ;
"RTN","AUPNSICD",5,0)
 N ICDSTR,ICDVDT
"RTN","AUPNSICD",6,0)
 ;S ICDSTR=$$ICDDX^ICDCODE(Y,$P(^AUPNVSIT(PXCEVIEN,0),"^",2))
"RTN","AUPNSICD",7,0)
 S ICDSTR=$$ICDDX^ICDCODE(Y,+^AUPNVSIT(PXCEVIEN,0)),ICDVDT=+^AUPNVSIT(PXCEVIEN,0)
"RTN","AUPNSICD",8,0)
 G:$G(DUZ("AG"))="V" VAIN
"RTN","AUPNSICD",9,0)
 ;
"RTN","AUPNSICD",10,0)
 ;I 1 Q:$G(DUZ("AG"))'="I"
"RTN","AUPNSICD",11,0)
EIN ; SCREEN OUT E CODES AND INACTIVE CODES
"RTN","AUPNSICD",12,0)
 ;I $E(^ICD9(Y,0),U,1)'="E",$P(^(0),U,9)=""
"RTN","AUPNSICD",13,0)
 ;I $P(^ICD9(Y,0),U,1)'="E",$P(^(0),U,9)=""
"RTN","AUPNSICD",14,0)
 I $P(ICDSTR,U,2)'="E",$P(ICDSTR,U,10)=1
"RTN","AUPNSICD",15,0)
 G:'$T XIT
"RTN","AUPNSICD",16,0)
SEX ; IF 'USE WITH SEX' FIELD HAS A VALUE CHECK THAT VALUE AGAINST AUPNSEX
"RTN","AUPNSICD",17,0)
 G:'$D(AUPNSEX) AGE
"RTN","AUPNSICD",18,0)
 I $P(^ICD9(Y,0),U,10)=""!($P(^ICD9(Y,0),U,10)=AUPNSEX)
"RTN","AUPNSICD",19,0)
 G:'$T XIT
"RTN","AUPNSICD",20,0)
AGE ; IF THERE IS AGE CRITERIA DATA AVAILABLE CHECK TO SEE THAT IT FITS THE CRITERIA
"RTN","AUPNSICD",21,0)
 ;G:'$D(AUPNDAYS) XIT
"RTN","AUPNSICD",22,0)
 ;G:'$D(^ICD9(Y,9999999)) XIT
"RTN","AUPNSICD",23,0)
 ;I $P(^(9999999),U,1)=""!($P(^(9999999),U,1)<AUPNDAYS)
"RTN","AUPNSICD",24,0)
 ;G:'$T XIT
"RTN","AUPNSICD",25,0)
 ;I $P(^(9999999),U,2)=""!($P(^(9999999),U,2)>AUPNDAYS)
"RTN","AUPNSICD",26,0)
XIT ;
"RTN","AUPNSICD",27,0)
 Q
"RTN","AUPNSICD",28,0)
 ;
"RTN","AUPNSICD",29,0)
VAIN ;SCREEN OUT INACTIVE CODES
"RTN","AUPNSICD",30,0)
 ; E codes are ok in the VA
"RTN","AUPNSICD",31,0)
 ;I $P(^ICD9(Y,0),U,9)'=1
"RTN","AUPNSICD",32,0)
 I $P(ICDSTR,U,10)=1
"RTN","AUPNSICD",33,0)
 Q
"RTN","AUPNSICD",34,0)
 ;
"RTN","PXAICPT")
0^5^B18329486
"RTN","PXAICPT",1,0)
PXAICPT ;ISL/JVS,ISA/KWP,ESW - SET THE PROCEDURE(CPT) NODES ; 4/18/03 12:17pm
"RTN","PXAICPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**19,73,108,112,149**;Aug 12, 1996
"RTN","PXAICPT",3,0)
 ;
"RTN","PXAICPT",4,0)
 ;
"RTN","PXAICPT",5,0)
 Q
"RTN","PXAICPT",6,0)
CPT ;--CREAT PROVIDERS
"RTN","PXAICPT",7,0)
 ;
"RTN","PXAICPT",8,0)
 ;
"RTN","PXAICPT",9,0)
SET ;--SET AND NEW VARIABLES
"RTN","PXAICPT",10,0)
 N AFTER0,AFTER1,AFTER12,AFTER801,AFTER802,AFTER811,AFTER812
"RTN","PXAICPT",11,0)
 N BEFOR0,BEFOR1,BEFOR12,BEFOR801,BEFOR802,BEFOR811,BEFOR812
"RTN","PXAICPT",12,0)
 N PXAA,PXAB,SUB,PIECE,PXAAX,IENB,STOP
"RTN","PXAICPT",13,0)
 ;New Modifier Variables
"RTN","PXAICPT",14,0)
 D SET^PXAIMOD
"RTN","PXAICPT",15,0)
 K PXAERR
"RTN","PXAICPT",16,0)
 S PXAERR(8)=PXAK
"RTN","PXAICPT",17,0)
 S PXAERR(7)="PROCEDURE"
"RTN","PXAICPT",18,0)
 ;
"RTN","PXAICPT",19,0)
 S SUB="" F  S SUB=$O(@PXADATA@("PROCEDURE",PXAK,SUB)) Q:SUB=""  D
"RTN","PXAICPT",20,0)
 .S PXAA(SUB)=$G(@PXADATA@("PROCEDURE",PXAK,SUB))
"RTN","PXAICPT",21,0)
 ;Setup PXAA array for Modifiers
"RTN","PXAICPT",22,0)
 S SUB=""
"RTN","PXAICPT",23,0)
 F  S SUB=$O(@PXADATA@("PROCEDURE",PXAK,"MODIFIERS",SUB)) Q:SUB=""  D
"RTN","PXAICPT",24,0)
 .S PXAA("MODIFIERS",SUB)=""
"RTN","PXAICPT",25,0)
 ;
"RTN","PXAICPT",26,0)
VAL ;--VALIDATE ENOUGH DATA
"RTN","PXAICPT",27,0)
 D VAL^PXAICPTV Q:$G(STOP)
"RTN","PXAICPT",28,0)
 ;
"RTN","PXAICPT",29,0)
 ;
"RTN","PXAICPT",30,0)
SETVARA ;--SET VISIT VARIABLES
"RTN","PXAICPT",31,0)
 S $P(AFTER0,"^",1)=$G(PXAA("PROCEDURE"))
"RTN","PXAICPT",32,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,"^",1)="@"
"RTN","PXAICPT",33,0)
 S $P(AFTER0,"^",2)=$G(PATIENT)
"RTN","PXAICPT",34,0)
 S $P(AFTER0,"^",3)=$G(PXAVISIT)
"RTN","PXAICPT",35,0)
 S $P(AFTER0,"^",4)=$G(PXAA("NARRATIVE")) D
"RTN","PXAICPT",36,0)
 .I $G(PXAA("NARRATIVE"))']""!($L($G(PXAA("NARRATIVE")))>245) D
"RTN","PXAICPT",37,0)
 ..S $P(AFTER0,"^",4)=$P($$CPT^ICPTCOD($G(PXAA("PROCEDURE")),$G(IDATE)),"^",3) ;-- TEXT OF NARRATIVE
"RTN","PXAICPT",38,0)
 .I $G(PXAA("NARRATIVE"))]"" S $P(AFTER0,"^",4)=+$$PROVNARR^PXAPI($G(PXAA("NARRATIVE")),9000010.18)
"RTN","PXAICPT",39,0)
 I $P(AFTER0,"^",4)<0 D VAL04^PXAICPTV,ERR^PXAI Q:$D(STOP)
"RTN","PXAICPT",40,0)
 S $P(AFTER0,"^",5)=$G(PXAA("DIAGNOSIS"))
"RTN","PXAICPT",41,0)
 I $G(PXAA("QTY"))="" S PXAA("QTY")=1
"RTN","PXAICPT",42,0)
 S $P(AFTER0,"^",16)=$G(PXAA("QTY")) I $G(PXAA("QTY"))<1 S PXAA("DELETE")=1
"RTN","PXAICPT",43,0)
 ;Set Modifier nodes in AFTER1
"RTN","PXAICPT",44,0)
 D SETVARA^PXAIMOD
"RTN","PXAICPT",45,0)
 ;
"RTN","PXAICPT",46,0)
 S $P(AFTER12,"^",1)=$G(PXAA("EVENT D/T"))
"RTN","PXAICPT",47,0)
 S $P(AFTER12,"^",4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAICPT",48,0)
 ;PX*1*108 - do not try to file a provider from a "DELETED" cpt
"RTN","PXAICPT",49,0)
 I $G(PXAA("ENC PROVIDER"))]"",'$G(PXAA("DELETE")) D
"RTN","PXAICPT",50,0)
 .S ^TMP("PXAIADDPRV",$J,$G(PXAA("ENC PROVIDER")))=""
"RTN","PXAICPT",51,0)
 ;
"RTN","PXAICPT",52,0)
 S $P(AFTER802,"^",1)=$G(PXAA("CATEGORY"))
"RTN","PXAICPT",53,0)
 I $G(PXAA("CATEGORY"))]"" S $P(AFTER802,"^",1)=+$$PROVNARR^PXAPI($G(PXAA("CATEGORY")),9000010.18)
"RTN","PXAICPT",54,0)
 I $P(AFTER802,"^",1)<0 D VAL45^PXAICPTV,ERR^PXAI Q:$D(STOP)
"RTN","PXAICPT",55,0)
 S $P(AFTER811,"^",1)=$G(PXAA("COMMENT"))
"RTN","PXAICPT",56,0)
 ;
"RTN","PXAICPT",57,0)
 ;
"RTN","PXAICPT",58,0)
 ;
"RTN","PXAICPT",59,0)
 ;--PACKAGE AND SOURCE
"RTN","PXAICPT",60,0)
 ;
"RTN","PXAICPT",61,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAICPT",62,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAICPT",63,0)
 ;
"RTN","PXAICPT",64,0)
SETPXKA ;--SET PXK ARRAY AFTER
"RTN","PXAICPT",65,0)
 S ^TMP("PXK",$J,"CPT",PXAK,0,"AFTER")=AFTER0
"RTN","PXAICPT",66,0)
 ;Set ^TMP("PXK",$J,"CPT",PXAK,1,ien,"AFTER")=MODIEN
"RTN","PXAICPT",67,0)
 D SETPXKA^PXAIMOD
"RTN","PXAICPT",68,0)
 S ^TMP("PXK",$J,"CPT",PXAK,12,"AFTER")=AFTER12
"RTN","PXAICPT",69,0)
 S ^TMP("PXK",$J,"CPT",PXAK,802,"AFTER")=AFTER802
"RTN","PXAICPT",70,0)
 S ^TMP("PXK",$J,"CPT",PXAK,811,"AFTER")=AFTER811
"RTN","PXAICPT",71,0)
 S ^TMP("PXK",$J,"CPT",PXAK,812,"AFTER")=AFTER812
"RTN","PXAICPT",72,0)
 ;
"RTN","PXAICPT",73,0)
SETVARB ;--SET VARIABLES BEFORE
"RTN","PXAICPT",74,0)
 D
"RTN","PXAICPT",75,0)
 .N PXBKY,PXBSAM,PXBSKY,PXBCNT,PXI,PRV,ITEM
"RTN","PXAICPT",76,0)
 .D CPT^PXBGCPT(PXAVISIT)
"RTN","PXAICPT",77,0)
 .S PXAAX("PROCEDURE")=$P($G(^ICPT($G(PXAA("PROCEDURE")),0)),"^",1)
"RTN","PXAICPT",78,0)
 .I $G(PXAA("DELETE"))=1 S PXAAX("PROCEDURE")=$P($G(^ICPT($G(PXAA("PROCEDURE")),0)),"^",1)
"RTN","PXAICPT",79,0)
 .S ITEM=""
"RTN","PXAICPT",80,0)
 .I PXBCNT>0,$G(PXAAX("PROCEDURE"))]"" S ITEM=$O(PXBKY(PXAAX("PROCEDURE"),0))
"RTN","PXAICPT",81,0)
 .I ITEM]"" D
"RTN","PXAICPT",82,0)
 ..;--LOOK UP USING CPT AND PROVIDER
"RTN","PXAICPT",83,0)
 ..S PXI="" F  S PXI=$O(PXBKY(PXAAX("PROCEDURE"),PXI)) Q:PXI=""  D
"RTN","PXAICPT",84,0)
 ...I $D(^IBE(357.69,PXAAX("PROCEDURE"))) D  Q  ;DBIA #: 1906
"RTN","PXAICPT",85,0)
 ....S (^TMP("PXK",$J,"CPT",PXAK,"IEN"),IENB)=$O(PXBSKY(PXI,0))
"RTN","PXAICPT",86,0)
 ...I $G(PXAA("ENC PROVIDER")) D  Q
"RTN","PXAICPT",87,0)
 ....S PRV=$P(^VA(200,$G(PXAA("ENC PROVIDER")),0),"^",1)
"RTN","PXAICPT",88,0)
 ....I $P($G(PXBKY(PXAAX("PROCEDURE"),PXI)),"^",3)=PRV D
"RTN","PXAICPT",89,0)
 .....S (^TMP("PXK",$J,"CPT",PXAK,"IEN"),IENB)=$O(PXBSKY(PXI,0))
"RTN","PXAICPT",90,0)
 I $G(IENB) D
"RTN","PXAICPT",91,0)
 .F PIECE=0,12,802,811,812 S ^TMP("PXK",$J,"CPT",PXAK,PIECE,"BEFORE")=$G(^AUPNVCPT(IENB,PIECE))
"RTN","PXAICPT",92,0)
 .;Set ^TMP("PXK",$J,"CPT",PXAK,1,ien,"BEFORE")=MODIEN
"RTN","PXAICPT",93,0)
 .D SETVARB^PXAIMOD
"RTN","PXAICPT",94,0)
 E  D
"RTN","PXAICPT",95,0)
 .S (BEFOR0,BEFOR12,BEFOR802,BEFOR811,BEFOR812)=""
"RTN","PXAICPT",96,0)
 .;
"RTN","PXAICPT",97,0)
SETPXKB .;--SET PXK ARRAY BEFORE
"RTN","PXAICPT",98,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,0,"BEFORE")=BEFOR0
"RTN","PXAICPT",99,0)
 .;Set ^TMP("PXK",$J,"CPT",PXAK,1,ien,"BEFORE")=MODIEN
"RTN","PXAICPT",100,0)
 .D SETPXKB^PXAIMOD
"RTN","PXAICPT",101,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,12,"BEFORE")=BEFOR12
"RTN","PXAICPT",102,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,802,"BEFORE")=BEFOR802
"RTN","PXAICPT",103,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,811,"BEFORE")=BEFOR811
"RTN","PXAICPT",104,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,812,"BEFORE")=BEFOR812
"RTN","PXAICPT",105,0)
 .S ^TMP("PXK",$J,"CPT",PXAK,"IEN")=""
"RTN","PXAICPT",106,0)
 ;
"RTN","PXAICPT",107,0)
MISC ;--MISCELLANEOUS NODE
"RTN","PXAICPT",108,0)
 ;
"RTN","PXAICPT",109,0)
 Q
"RTN","PXBGCPT")
0^2^B5304523
"RTN","PXBGCPT",1,0)
PXBGCPT ;ISL/JVS - GATHER CPT ;7/16/96  11:41
"RTN","PXBGCPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,149**;Aug 12, 1996
"RTN","PXBGCPT",3,0)
 ;
"RTN","PXBGCPT",4,0)
CPT(VISIT) ;--Gather the entries in the V CPT file
"RTN","PXBGCPT",5,0)
 ;
"RTN","PXBGCPT",6,0)
 N IEN,QUANTITY,PROVIDER,NARR,CPT,GROUP,PXBC
"RTN","PXBGCPT",7,0)
 N DIC,DR,DA,DIQ
"RTN","PXBGCPT",8,0)
 N PXSFIL,PXSIEN,PXMOD
"RTN","PXBGCPT",9,0)
 ;
"RTN","PXBGCPT",10,0)
 K ^TMP("PXBU",$J),VAUGHN,CPT,PXBKY,PXBSAM,PXBSKY,PXBPRV
"RTN","PXBGCPT",11,0)
 I $D(^AUPNVCPT("AD",VISIT)) D
"RTN","PXBGCPT",12,0)
 .S IEN=0
"RTN","PXBGCPT",13,0)
 .F  S IEN=$O(^AUPNVCPT("AD",VISIT,IEN)) Q:IEN'>0  D
"RTN","PXBGCPT",14,0)
 ..S ^TMP("PXBU",$J,"CPT",IEN)=""
"RTN","PXBGCPT",15,0)
 ;
"RTN","PXBGCPT",16,0)
A ;--Set array with CPT codes and associated modifiers
"RTN","PXBGCPT",17,0)
 ;
"RTN","PXBGCPT",18,0)
 I $D(^TMP("PXBU",$J,"CPT")) D
"RTN","PXBGCPT",19,0)
 .S IEN=0
"RTN","PXBGCPT",20,0)
 .F  S IEN=$O(^TMP("PXBU",$J,"CPT",IEN)) Q:IEN'>0  D
"RTN","PXBGCPT",21,0)
 ..N VAUGHN
"RTN","PXBGCPT",22,0)
 ..D GETS^DIQ(9000010.18,IEN,".01;.16;1204;.04;1*","E","VAUGHN")
"RTN","PXBGCPT",23,0)
 ..S CPT=$G(VAUGHN(9000010.18,IEN_",",".01","E"))
"RTN","PXBGCPT",24,0)
 ..S QUANTITY=$G(VAUGHN(9000010.18,IEN_",",".16","E"))
"RTN","PXBGCPT",25,0)
 ..S PROVIDER=$G(VAUGHN(9000010.18,IEN_",","1204","E"))
"RTN","PXBGCPT",26,0)
 ..S NARR=$E($G(VAUGHN(9000010.18,IEN_",",".04","E")),1,29)
"RTN","PXBGCPT",27,0)
 ..I NARR="" S NARR=$P($$CPT^ICPTCOD(CPT,$G(IDATE)),"^",3)
"RTN","PXBGCPT",28,0)
 ..D CASE^PXBUTL
"RTN","PXBGCPT",29,0)
 ..S GROUP=CPT_"^"_QUANTITY_"^"_PROVIDER_"^"_NARR
"RTN","PXBGCPT",30,0)
 ..S CPT(CPT,IEN)=GROUP
"RTN","PXBGCPT",31,0)
 ..S PXSFIL=9000010.181
"RTN","PXBGCPT",32,0)
 ..S PXSIEN=""
"RTN","PXBGCPT",33,0)
 ..F  S PXSIEN=$O(VAUGHN(PXSFIL,PXSIEN)) Q:PXSIEN=""  D
"RTN","PXBGCPT",34,0)
 ...S PXMOD=VAUGHN(PXSFIL,PXSIEN,.01,"E")
"RTN","PXBGCPT",35,0)
 ...S CPT(CPT,IEN,"MOD",+PXSIEN)=PXMOD
"RTN","PXBGCPT",36,0)
 ;
"RTN","PXBGCPT",37,0)
B ;--Add line numbers
"RTN","PXBGCPT",38,0)
 ;
"RTN","PXBGCPT",39,0)
 I $D(CPT) D
"RTN","PXBGCPT",40,0)
 .S PXBC=0,CPT=""
"RTN","PXBGCPT",41,0)
 .F  S CPT=$O(CPT(CPT)) Q:CPT=""  D
"RTN","PXBGCPT",42,0)
 ..S IEN=0
"RTN","PXBGCPT",43,0)
 ..F  S IEN=$O(CPT(CPT,IEN)) Q:IEN=""  S PXBC=PXBC+1 D
"RTN","PXBGCPT",44,0)
 ...S PXBKY(CPT,PXBC)=$G(CPT(CPT,IEN))
"RTN","PXBGCPT",45,0)
 ...S PXBSAM(PXBC)=$G(CPT(CPT,IEN))
"RTN","PXBGCPT",46,0)
 ...S PXBSKY(PXBC,IEN)=""
"RTN","PXBGCPT",47,0)
 ...S PXSIEN=0
"RTN","PXBGCPT",48,0)
 ...F  S PXSIEN=$O(CPT(CPT,IEN,"MOD",PXSIEN)) Q:PXSIEN=""  D
"RTN","PXBGCPT",49,0)
 ....S PXBKY(CPT,PXBC,"MOD",PXSIEN)=CPT(CPT,IEN,"MOD",PXSIEN)
"RTN","PXBGCPT",50,0)
 ....S PXBSAM(PXBC,"MOD",PXSIEN)=CPT(CPT,IEN,"MOD",PXSIEN)
"RTN","PXBGCPT",51,0)
 ...I $P($G(CPT(CPT,IEN)),"^",3)]"" D
"RTN","PXBGCPT",52,0)
 ....S PXBPRV($P($G(CPT(CPT,IEN)),"^",3),$P($G(CPT(CPT,IEN)),"^",1),IEN,PXBC)=QUANTITY
"RTN","PXBGCPT",53,0)
EXIT ;--KILL
"RTN","PXBGCPT",54,0)
 K ^TMP("PXBU",$J),VAUGHN
"RTN","PXBGCPT",55,0)
 S PXBCNT=+$G(PXBC)
"RTN","PXBGCPT",56,0)
 Q
"RTN","PXBGCPT",57,0)
 ;
"RTN","PXBGCPT2")
0^8^B35781906
"RTN","PXBGCPT2",1,0)
PXBGCPT2 ;ISL/JVS,ESW - DOUBLE ?? GATHERING OF CPT CODES ; 10/31/02 12:05pm
"RTN","PXBGCPT2",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,19,108,149**;Aug 12, 1996
"RTN","PXBGCPT2",3,0)
 ;
"RTN","PXBGCPT2",4,0)
 ;
"RTN","PXBGCPT2",5,0)
 ;
"RTN","PXBGCPT2",6,0)
 W !,"NOT" Q
"RTN","PXBGCPT2",7,0)
 ;
"RTN","PXBGCPT2",8,0)
DOUBLE(FROM) ;--Entry
"RTN","PXBGCPT2",9,0)
 ;
"RTN","PXBGCPT2",10,0)
 N FILE,FIELD,TITLE,HEADING,SUB,CODE,NAME,START,SCREEN,BACK,NUM
"RTN","PXBGCPT2",11,0)
 N SCREEN,TEMP,FIRST
"RTN","PXBGCPT2",12,0)
 S BACK="",NUM=0,SCREEN=""
"RTN","PXBGCPT2",13,0)
 D LOC
"RTN","PXBGCPT2",14,0)
 I $D(DIC("S")) S SCREEN=DIC("S")
"RTN","PXBGCPT2",15,0)
 ;
"RTN","PXBGCPT2",16,0)
START ;
"RTN","PXBGCPT2",17,0)
 ;
"RTN","PXBGCPT2",18,0)
 S TITLE="- - A L L  P R O C E D U R E (CPT CODES) - -"
"RTN","PXBGCPT2",19,0)
 ;
"RTN","PXBGCPT2",20,0)
 D SETUP
"RTN","PXBGCPT2",21,0)
 D LIST^DIC(FILE,"",FIELD,BACK,10,.START,"","",SCREEN,"","^TMP(""PXBTANA"",$J)","^TMP(""PXBTANA"",$J)")
"RTN","PXBGCPT2",22,0)
 ;
"RTN","PXBGCPT2",23,0)
 D LOC,HEAD,SUB
"RTN","PXBGCPT2",24,0)
 ;
"RTN","PXBGCPT2",25,0)
PROMPT ;--PROMPT
"RTN","PXBGCPT2",26,0)
 D WIN17^PXBCC(PXBCNT),LOC^PXBCC(15,1)
"RTN","PXBGCPT2",27,0)
 W !!,"Enter '^' to quit,  '-' for previous page."
"RTN","PXBGCPT2",28,0)
 S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to continue: "
"RTN","PXBGCPT2",29,0)
 S DIR("?")="Enter ITEM 'No' to select , '^' to quit,  '-' for previous page."
"RTN","PXBGCPT2",30,0)
 S DIR(0)="N,A,O^0:10:0^I X'?.1""-"".1""^"".2N!(+X>10) K X"
"RTN","PXBGCPT2",31,0)
 D ^DIR
"RTN","PXBGCPT2",32,0)
 I X="-" S BACK="B" D BACK G START
"RTN","PXBGCPT2",33,0)
 I X="" S BACK="" D FORWARD G START
"RTN","PXBGCPT2",34,0)
 I $G(DIRUT) K DIRUT S VAL="^C" G EXIT
"RTN","PXBGCPT2",35,0)
FINISH ;--FINISH
"RTN","PXBGCPT2",36,0)
 ;
"RTN","PXBGCPT2",37,0)
 S VAL=$G(^TMP("PXBTANA",$J,"DILIST",2,X))_U_$G(^TMP("PXBTANA",$J,"DILIST","ID",X,FIRST))_"--"_$G(^TMP("PXBTANA",$J,"DILIST","ID",X,SECOND))
"RTN","PXBGCPT2",38,0)
EXIT ;--EXIT
"RTN","PXBGCPT2",39,0)
 K DIR,^TMP("PXBTANA",$J),^TMP("PXBTOTAL",$J)
"RTN","PXBGCPT2",40,0)
 Q VAL
"RTN","PXBGCPT2",41,0)
 ;
"RTN","PXBGCPT2",42,0)
DOUBLE1(FROM) ;--Entry
"RTN","PXBGCPT2",43,0)
 ;
"RTN","PXBGCPT2",44,0)
NEW ;
"RTN","PXBGCPT2",45,0)
 N FILE,FIELD,TITLE,HEADING,SUB,CODE,NAME,START,SCREEN,CNT,OK,INDEX,CYCLE
"RTN","PXBGCPT2",46,0)
 N TOTAL,FIRST,SUB2
"RTN","PXBGCPT2",47,0)
 ;---SETUP
"RTN","PXBGCPT2",48,0)
 S BACK="",INDEX=""
"RTN","PXBGCPT2",49,0)
 S START=DATA,SUB=0,SUB2=0
"RTN","PXBGCPT2",50,0)
 ;
"RTN","PXBGCPT2",51,0)
START1 ;--RECYCLE
"RTN","PXBGCPT2",52,0)
 S TITLE="- - S E L E C T E D  P R O C E D U R E S (CPT CODES) - -"
"RTN","PXBGCPT2",53,0)
 S FILE=81
"RTN","PXBGCPT2",54,0)
 S FIELD=".01;2"
"RTN","PXBGCPT2",55,0)
 N TMP,LL,TT
"RTN","PXBGCPT2",56,0)
 S LL=$L(DATA),TT="0000"
"RTN","PXBGCPT2",57,0)
 I DATA?1.4N!(DATA?1A.3N) D
"RTN","PXBGCPT2",58,0)
 .S START=$O(^ICPT("B",DATA_$E(TT,1,5-LL)),-1)
"RTN","PXBGCPT2",59,0)
 I DATA?5N!(DATA?1A4N)!(DATA?4N1A) D
"RTN","PXBGCPT2",60,0)
 .S START=$O(^ICPT("B",START),-1)
"RTN","PXBGCPT2",61,0)
XXX W IOCUOFF,IOCUF,IOCUF
"RTN","PXBGCPT2",62,0)
 N TMP
"RTN","PXBGCPT2",63,0)
 S SUBT=START,TOTAL=0 F  S SUBT=$O(^ICPT("B",SUBT)) Q:SUBT'[DATA  D
"RTN","PXBGCPT2",64,0)
 .I '$$CPTSCREN^PXBUTL($O(^ICPT("B",SUBT,0)),IDATE) Q
"RTN","PXBGCPT2",65,0)
 .S TOTAL=TOTAL+1 S PXBMOD=TOTAL#100 D WAIT^PXBUTL
"RTN","PXBGCPT2",66,0)
 .S ^TMP("PXBTOTAL",$J,"DILIST","ID",TOTAL,.01)=SUBT
"RTN","PXBGCPT2",67,0)
 .S ^TMP("PXBTOTAL",$J,"DILIST","ID",TOTAL,2)=$P($$CPT^ICPTCOD($O(^ICPT("B",SUBT,0)),IDATE),U,3)
"RTN","PXBGCPT2",68,0)
 .S TMP(SUBT)=""
"RTN","PXBGCPT2",69,0)
 I DATA?1.4N!(DATA?.3N1A) D
"RTN","PXBGCPT2",70,0)
 .S START=$O(^ICPT("B",$E(TT,1,5-LL)_DATA),-1)
"RTN","PXBGCPT2",71,0)
 .S SUBT=START F  S SUBT=$O(^ICPT("B",SUBT)) Q:SUBT'[DATA  D
"RTN","PXBGCPT2",72,0)
 ..Q:$D(TMP(SUBT))
"RTN","PXBGCPT2",73,0)
 ..I '$$CPTSCREN^PXBUTL($O(^ICPT("B",SUBT,0)),IDATE) Q
"RTN","PXBGCPT2",74,0)
 ..S TOTAL=TOTAL+1 S PXBMOD=TOTAL#100 D WAIT^PXBUTL
"RTN","PXBGCPT2",75,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",TOTAL,.01)=SUBT
"RTN","PXBGCPT2",76,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",TOTAL,2)=$P($$CPT^ICPTCOD($O(^ICPT("B",SUBT,0)),IDATE),U,3)
"RTN","PXBGCPT2",77,0)
 W IOCUON
"RTN","PXBGCPT2",78,0)
 ;
"RTN","PXBGCPT2",79,0)
 ;
"RTN","PXBGCPT2",80,0)
 ;
"RTN","PXBGCPT2",81,0)
 I DATA?2.A W IOCUOFF,IOCUF,IOCUF S SUBT=$O(^ICPT("C",DATA),-1) F  S SUBT=$O(^ICPT("C",SUBT)) Q:SUBT'[DATA  D
"RTN","PXBGCPT2",82,0)
 .N IEN,CODE
"RTN","PXBGCPT2",83,0)
 .S IEN="" F  S IEN=$O(^ICPT("C",SUBT,IEN)) Q:IEN=""  D
"RTN","PXBGCPT2",84,0)
 ..S CODE=$P(^ICPT(IEN,0),U) I '$$CPTSCREN^PXBUTL(CODE,IDATE) Q
"RTN","PXBGCPT2",85,0)
 ..S TOTAL=TOTAL+1 S PXBMOD=TOTAL#100 D WAIT^PXBUTL
"RTN","PXBGCPT2",86,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",TOTAL,.01)=$P(^ICPT(IEN,0),U)
"RTN","PXBGCPT2",87,0)
 ..S ^TMP("PXBTOTAL",$J,"DILIST","ID",TOTAL,2)=SUBT_", "_$P($$CPT^ICPTCOD(IEN,IDATE),U,3)
"RTN","PXBGCPT2",88,0)
 W IOCUON
"RTN","PXBGCPT2",89,0)
 K SUBT
"RTN","PXBGCPT2",90,0)
 ;
"RTN","PXBGCPT2",91,0)
 ;
"RTN","PXBGCPT2",92,0)
 ;
"RTN","PXBGCPT2",93,0)
 ;--NO MATCH
"RTN","PXBGCPT2",94,0)
 I TOTAL=0 D
"RTN","PXBGCPT2",95,0)
 .I DATA?1A W ! D HELP^PXBUTL0("CPT4")
"RTN","PXBGCPT2",96,0)
 .I DATA'?1A W ! D HELP^PXBUTL0("CPTM")
"RTN","PXBGCPT2",97,0)
 .S ERROR=1,CYCL=1
"RTN","PXBGCPT2",98,0)
 I TOTAL=0 Q TOTAL
"RTN","PXBGCPT2",99,0)
 ;
"RTN","PXBGCPT2",100,0)
 ;--LIST
"RTN","PXBGCPT2",101,0)
 S HEADING="W !,""ITEM"",?6,""CODE"",?15,""DESCRIPTION   "",IOINHI,TOTAL,"" MATCHES"",IOINLOW"
"RTN","PXBGCPT2",102,0)
LIST ;-DISPLAY LIST TO THE SCREEN
"RTN","PXBGCPT2",103,0)
 I TOTAL=1 S X=1 G VAL
"RTN","PXBGCPT2",104,0)
 D LOC W !
"RTN","PXBGCPT2",105,0)
 X HEADING
"RTN","PXBGCPT2",106,0)
 S SUB=SUB-1
"RTN","PXBGCPT2",107,0)
 S NUM=0 F  S SUB=$O(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB)) S NUM=NUM+1 Q:NUM=11  Q:SUB'>0  S SUB2=SUB2+1 D
"RTN","PXBGCPT2",108,0)
 .S CODE=$G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,.01))
"RTN","PXBGCPT2",109,0)
 .S NAME=$E($G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,2)),1,64)
"RTN","PXBGCPT2",110,0)
 .W !,SUB,?6,CODE,?15,NAME
"RTN","PXBGCPT2",111,0)
 ;
"RTN","PXBGCPT2",112,0)
 ;--one
"RTN","PXBGCPT2",113,0)
 I TOTAL=1 G PRMPT2
"RTN","PXBGCPT2",114,0)
 ;
"RTN","PXBGCPT2",115,0)
PRMPT ;--PROMPT
"RTN","PXBGCPT2",116,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGCPT2",117,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGCPT2",118,0)
 W !
"RTN","PXBGCPT2",119,0)
 I SUB>0 W !,"Enter '^' to quit"
"RTN","PXBGCPT2",120,0)
 E  I TOTAL>10 W !,"               END OF LIST"
"RTN","PXBGCPT2",121,0)
 I SUB>0 S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to continue: "
"RTN","PXBGCPT2",122,0)
 E  S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to exit: "
"RTN","PXBGCPT2",123,0)
 S DIR("?")="Enter ITEM 'No' to select , '^' to quit"
"RTN","PXBGCPT2",124,0)
 S DIR(0)="N,A,O^0:"_SUB2_":0^I X'?.1""^"".N K X"
"RTN","PXBGCPT2",125,0)
 D ^DIR
"RTN","PXBGCPT2",126,0)
 I X="",SUB>0 G LIST
"RTN","PXBGCPT2",127,0)
 I X="",SUB'>0 S X="^"
"RTN","PXBGCPT2",128,0)
VAL ;--VAL equal value
"RTN","PXBGCPT2",129,0)
 S VAL=$G(^TMP("PXBTOTAL",$J,"DILIST",2,X))_U_$G(^TMP("PXBTOTAL",$J,"DILIST","ID",X,.01))_"--"_$G(^TMP("PXBTOTAL",$J,"DILIST","ID",X,2))
"RTN","PXBGCPT2",130,0)
EXITNEW ;--EXIT
"RTN","PXBGCPT2",131,0)
 K DIR,DIRUT,^TMP("PXBTANA",$J),^TMP("PXBTOTAL",$J)
"RTN","PXBGCPT2",132,0)
 K TANA,TOTAL
"RTN","PXBGCPT2",133,0)
 Q VAL
"RTN","PXBGCPT2",134,0)
 Q
"RTN","PXBGCPT2",135,0)
 ;
"RTN","PXBGCPT2",136,0)
 ;--SUBROUTINES
"RTN","PXBGCPT2",137,0)
BACK ;
"RTN","PXBGCPT2",138,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,1))
"RTN","PXBGCPT2",139,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,1))
"RTN","PXBGCPT2",140,0)
 Q
"RTN","PXBGCPT2",141,0)
FORWARD ;
"RTN","PXBGCPT2",142,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,10))
"RTN","PXBGCPT2",143,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,10))
"RTN","PXBGCPT2",144,0)
 Q
"RTN","PXBGCPT2",145,0)
LOC ;--LOCATE CURSOR
"RTN","PXBGCPT2",146,0)
 D LOC^PXBCC(3,1) ;--LOCATE THE CURSOR
"RTN","PXBGCPT2",147,0)
 W IOEDEOP ;--CLEAR THE PAGE
"RTN","PXBGCPT2",148,0)
 Q
"RTN","PXBGCPT2",149,0)
HEAD ;--HEAD
"RTN","PXBGCPT2",150,0)
 W !,IOCUU,IOBON,"HELP SCREEN",IOSGR0,?(IOM-$L(TITLE))\2,IOINHI,TITLE,IOINLOW,IOELEOL
"RTN","PXBGCPT2",151,0)
 Q
"RTN","PXBGCPT2",152,0)
SUB ;--LIST
"RTN","PXBGCPT2",153,0)
 I $P(^TMP("PXBTANA",$J,"DILIST",0),U)=0 W !!,"     E N D  O F  L I S T" Q
"RTN","PXBGCPT2",154,0)
 X HEADING
"RTN","PXBGCPT2",155,0)
 S SUB=0,CNT=0 F  S SUB=$O(^TMP("PXBTANA",$J,"DILIST","ID",SUB)) Q:SUB'>0  S CNT=CNT+1 D
"RTN","PXBGCPT2",156,0)
 .S CODE=$G(^TMP("PXBTANA",$J,"DILIST","ID",SUB,FIRST))
"RTN","PXBGCPT2",157,0)
 .S NAME=$G(^TMP("PXBTANA",$J,"DILIST","ID",SUB,SECOND))
"RTN","PXBGCPT2",158,0)
 .W !,SUB,?6,CODE,?15,NAME
"RTN","PXBGCPT2",159,0)
 Q
"RTN","PXBGCPT2",160,0)
SETUP ;--SET
"RTN","PXBGCPT2",161,0)
 S FILE=81,FIRST=.01,SECOND=2
"RTN","PXBGCPT2",162,0)
 S FIELD=FIRST_";"_SECOND
"RTN","PXBGCPT2",163,0)
 S HEADING="W !,""ITEM"",?6,""CODE"",?15,""DESCRIPTION"""
"RTN","PXBGCPT2",164,0)
 Q
"RTN","PXBGCPT2",165,0)
PRMPT2 ;--Yes and No prompt
"RTN","PXBGCPT2",166,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGCPT2",167,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGCPT2",168,0)
 S DIR("A")="Is this the correct entry "
"RTN","PXBGCPT2",169,0)
 S DIR("B")="YES"
"RTN","PXBGCPT2",170,0)
 S DIR(0)="Y"
"RTN","PXBGCPT2",171,0)
 D ^DIR
"RTN","PXBGCPT2",172,0)
 I Y=0 S X="^"
"RTN","PXBGCPT2",173,0)
 I Y=1 S X=1
"RTN","PXBGCPT2",174,0)
 G VAL
"RTN","PXBGCPT2",175,0)
 ;
"RTN","PXBGPOV")
0^9^B7160921
"RTN","PXBGPOV",1,0)
PXBGPOV ;ISL/JVS,ESW - GATHER POV (DIAGNOSIS) ; 12/2/02 6:22pm
"RTN","PXBGPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,112,149**;Aug 12, 1996
"RTN","PXBGPOV",3,0)
 ;
"RTN","PXBGPOV",4,0)
POV(VISIT) ;--Gather the entries in the V POV file
"RTN","PXBGPOV",5,0)
 ;
"RTN","PXBGPOV",6,0)
 N IEN,QUANTITY,PROVIDER,SNARR,POV,GROUP,PXBC,POVI
"RTN","PXBGPOV",7,0)
 N DIC,DR,DA,DIQ,PRIM,PROBLEM,PXBPLA,PXBPL,PKG,SOURC
"RTN","PXBGPOV",8,0)
 ;
"RTN","PXBGPOV",9,0)
 K ^TMP("PXBU",$J),POV,PXBKY,PXBSAM,PXBSKY,PXDIGNS,NOPLLIST
"RTN","PXBGPOV",10,0)
 K ^UTILITY("DIQ1",$J)
"RTN","PXBGPOV",11,0)
 S FPRI="",PROBLEM=""
"RTN","PXBGPOV",12,0)
 I $D(^AUPNVPOV("AD",VISIT)) D
"RTN","PXBGPOV",13,0)
 .S IEN=0 F  S IEN=$O(^AUPNVPOV("AD",VISIT,IEN)) Q:IEN'>0  D
"RTN","PXBGPOV",14,0)
 ..S ^TMP("PXBU",$J,"POV",IEN)=""
"RTN","PXBGPOV",15,0)
 ;
"RTN","PXBGPOV",16,0)
A ;--Set array with DIAGNOSIS codes
"RTN","PXBGPOV",17,0)
 ;
"RTN","PXBGPOV",18,0)
 D PL^PXBGPL(PATIENT)
"RTN","PXBGPOV",19,0)
 I $D(^TMP("PXBU",$J,"POV")) D
"RTN","PXBGPOV",20,0)
 .S IEN=0 F  S IEN=$O(^TMP("PXBU",$J,"POV",IEN)) Q:IEN'>0  D
"RTN","PXBGPOV",21,0)
 ..S DIC=9000010.07,DR=".01;1204;.04;.12;81202;81203",DA=IEN,DIQ(0)="IE" D EN^DIQ1
"RTN","PXBGPOV",22,0)
 ..S PROVIDER=$G(^UTILITY("DIQ1",$J,9000010.07,DA,"1204","E"))
"RTN","PXBGPOV",23,0)
 ..S LNARR=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".04","E"))
"RTN","PXBGPOV",24,0)
 ..S POV=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".01","E"))
"RTN","PXBGPOV",25,0)
 ..S PROBLEM="" S:$D(^TMP("PXBKYPL",$J,POV)) PROBLEM="YES"
"RTN","PXBGPOV",26,0)
 ..S POVI=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".01","I"))
"RTN","PXBGPOV",27,0)
 ..S PRIM=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".12","E"))
"RTN","PXBGPOV",28,0)
 ..S PKG=$G(^UTILITY("DIQ1",$J,9000010.07,DA,"81202","I"))
"RTN","PXBGPOV",29,0)
 ..I PKG']"" S PKG="NONE"
"RTN","PXBGPOV",30,0)
 ..S SOURC=$G(^UTILITY("DIQ1",$J,9000010.07,DA,"81203","I"))
"RTN","PXBGPOV",31,0)
 ..I SOURC']"" S SOURC="NONE"
"RTN","PXBGPOV",32,0)
 ..S SNARR=$P($$ICDDX^ICDCODE(POVI,$G(IDATE)),"^",4)
"RTN","PXBGPOV",33,0)
 ..I $L(LNARR)'>30 S LNARR=$$DXNARR^PXUTL1(POVI,$G(IDATE))
"RTN","PXBGPOV",34,0)
 ..S FPRI=FPRI_$E(PRIM,1,3) ;--Creating flag for Promary prompt
"RTN","PXBGPOV",35,0)
 ..S GROUP=POV_"^"_PROVIDER_"^"_SNARR_"^"_PRIM_"^"_PROBLEM
"RTN","PXBGPOV",36,0)
 ..;        1        2            3        4          5
"RTN","PXBGPOV",37,0)
 ..I PRIM["PRI" S PXDIGNS("PRIMARY")=POV
"RTN","PXBGPOV",38,0)
 ..S ^TMP("PXBPOV",$J,POV,IEN)=GROUP
"RTN","PXBGPOV",39,0)
 ..S ^TMP("PXBGPOVMATCH",$J,POVI,IEN)=""
"RTN","PXBGPOV",40,0)
 ..I $P(GROUP,"^",5)'["YES" S NOPLLIST=1
"RTN","PXBGPOV",41,0)
 ;
"RTN","PXBGPOV",42,0)
B ;--Add line numbers
"RTN","PXBGPOV",43,0)
 ;
"RTN","PXBGPOV",44,0)
 I $D(^TMP("PXBPOV",$J)) D
"RTN","PXBGPOV",45,0)
 .S PXBC=0,POV="" F  S POV=$O(^TMP("PXBPOV",$J,POV)) Q:POV=""  Q:PXBC>40  D
"RTN","PXBGPOV",46,0)
 ..S IEN=0 F  S IEN=$O(^TMP("PXBPOV",$J,POV,IEN)) Q:IEN=""  S PXBC=PXBC+1 D
"RTN","PXBGPOV",47,0)
 ...S PXBKY(POV,PXBC)=$G(^TMP("PXBPOV",$J,POV,IEN)),PXBSAM(PXBC)=$G(^TMP("PXBPOV",$J,POV,IEN))
"RTN","PXBGPOV",48,0)
 ...S PXBSKY(PXBC,IEN)=""
"RTN","PXBGPOV",49,0)
 ...S PXBSAM(PXBC,"LNARR")=LNARR
"RTN","PXBGPOV",50,0)
FINISG ;--finish up some variables
"RTN","PXBGPOV",51,0)
 ;--FPRI=0 NO PRIMARY
"RTN","PXBGPOV",52,0)
 S:FPRI'["PRI" FPRI=0 S:FPRI["PRI" FPRI=1
"RTN","PXBGPOV",53,0)
EXIT ;--KILL
"RTN","PXBGPOV",54,0)
 K ^TMP("PXBU",$J),^TMP("PXBKYPL",$J),^TMP("PXBSAMPL",$J),PXBSKYPL
"RTN","PXBGPOV",55,0)
 K ^TMP("PXBPOV",$J)
"RTN","PXBGPOV",56,0)
 K ^UTILITY("DIQ1",$J)
"RTN","PXBGPOV",57,0)
 S PXBCNT=+$G(PXBC)
"RTN","PXBGPOV",58,0)
 Q
"RTN","PXBGPOV",59,0)
 ;
"RTN","PXBGPOV2")
0^10^B32289021
"RTN","PXBGPOV2",1,0)
PXBGPOV2 ;ISL/JVS - DOUBLE ?? GATHERING OF DIAGNOSES ;11/5/96  14:19
"RTN","PXBGPOV2",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,5,11,136,149**;Aug 12, 1996
"RTN","PXBGPOV2",3,0)
 ;
"RTN","PXBGPOV2",4,0)
 W !,"THIS IS NOT AN ENTRY POINT" Q
"RTN","PXBGPOV2",5,0)
DOUBLE(FROM) ;--Entry point
"RTN","PXBGPOV2",6,0)
 ;  WHAT   = The same WHAT as sent in from the API
"RTN","PXBGPOV2",7,0)
 ;  FROM   = Exactly which prompt is asking for the list
"RTN","PXBGPOV2",8,0)
 ;  SCREEN = Same as the DIC("S") screen used by file man
"RTN","PXBGPOV2",9,0)
 ;  START  = The starting point as to what to look up
"RTN","PXBGPOV2",10,0)
 ;
"RTN","PXBGPOV2",11,0)
 N FILE,FIELD,TITLE,HEADING,SUB,CODE,NAME,START,SCREEN,BACK,NUM
"RTN","PXBGPOV2",12,0)
 N SCREEN,TEMP,NRD,FIRST,SUB2
"RTN","PXBGPOV2",13,0)
 S BACK="",NUM=0,SCREEN=""
"RTN","PXBGPOV2",14,0)
 D LOC
"RTN","PXBGPOV2",15,0)
 I $D(DIC("S")) S SCREEN=DIC("S")
"RTN","PXBGPOV2",16,0)
 ;
"RTN","PXBGPOV2",17,0)
 S START="001.0 "
"RTN","PXBGPOV2",18,0)
START ;--RECYCLE POINT
"RTN","PXBGPOV2",19,0)
 S TITLE="ALL DIAGNOSES (ICD9 CODES)"
"RTN","PXBGPOV2",20,0)
 D SETUP
"RTN","PXBGPOV2",21,0)
 D LIST^DIC(FILE,"",FIELD,BACK,10,.START,"","BA",SCREEN,"","^TMP(""PXBTANA"",$J)","^TMP(""PXBTANA"",$J)")
"RTN","PXBGPOV2",22,0)
 D LOC,HEAD,SUB
"RTN","PXBGPOV2",23,0)
 ;
"RTN","PXBGPOV2",24,0)
PROMPT ;---WRITE PROMPT HERE
"RTN","PXBGPOV2",25,0)
 D WIN17^PXBCC(PXBCNT),LOC^PXBCC(15,1)
"RTN","PXBGPOV2",26,0)
 W !!,"Enter '^' to quit,  '-' for previous page."
"RTN","PXBGPOV2",27,0)
 S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to continue: "
"RTN","PXBGPOV2",28,0)
 S DIR("?")="Enter ITEM 'No' to select , '^' to quit,  '-' for previous page."
"RTN","PXBGPOV2",29,0)
 S DIR(0)="N,A,O^0:10:0^I X'?.1""-"".1""^"".2N!(+X>10) K X"
"RTN","PXBGPOV2",30,0)
 D ^DIR
"RTN","PXBGPOV2",31,0)
 I X="-" S BACK="B" D BACK G START
"RTN","PXBGPOV2",32,0)
 I X="" S BACK="" D FORWARD G START
"RTN","PXBGPOV2",33,0)
 I $G(DIRUT) K DIRUT S VAL="^P" G EXIT
"RTN","PXBGPOV2",34,0)
 ;
"RTN","PXBGPOV2",35,0)
FINISH ;--FINISH SETTING A VARIBLE TO SELECTED ITEM
"RTN","PXBGPOV2",36,0)
 S VAL=$G(^TMP("PXBTANA",$J,"DILIST",2,X))_"^"_$G(^TMP("PXBTANA",$J,"DILIST","ID",X,FIRST))_"--"_$G(^TMP("PXBTANA",$J,"DILIST","ID",X,SECOND))
"RTN","PXBGPOV2",37,0)
EXIT ;--EXIT
"RTN","PXBGPOV2",38,0)
 K DIR,^TMP("PXBTANA",$J),^TMP("PXBTOTAL",$J)
"RTN","PXBGPOV2",39,0)
 Q VAL
"RTN","PXBGPOV2",40,0)
 ;
"RTN","PXBGPOV2",41,0)
DOUBLE1(FROM) ;--Entry point
"RTN","PXBGPOV2",42,0)
NEW ;
"RTN","PXBGPOV2",43,0)
 N FILE,FIELD,TITLE,HEADING,SUB,CODE,NAME,START,SCREEN,CNT,OK,INDEX,CYCLE
"RTN","PXBGPOV2",44,0)
 N TOTAL,HLP,FIRST,SUB2
"RTN","PXBGPOV2",45,0)
 S BACK="",INDEX="BA"
"RTN","PXBGPOV2",46,0)
 S START=DATA,SUB=0,SUB2=0
"RTN","PXBGPOV2",47,0)
 ;
"RTN","PXBGPOV2",48,0)
START1 ;--RECYCLE POINT
"RTN","PXBGPOV2",49,0)
 W !
"RTN","PXBGPOV2",50,0)
 S TITLE="- - S E L E C T E D  D I A G N O S E S (ICD9 CODES) - -"
"RTN","PXBGPOV2",51,0)
 S FILE=80
"RTN","PXBGPOV2",52,0)
 S FIELD=".01"
"RTN","PXBGPOV2",53,0)
 I DATA?1N S START=DATA*100 S START=$O(^ICD9("BA",START_" ",-1)) S INDEX="BA"
"RTN","PXBGPOV2",54,0)
 I DATA?2N S START=DATA*10 S START=$O(^ICD9("BA",START_" ",-1)) S INDEX="BA"
"RTN","PXBGPOV2",55,0)
 I DATA?3.NP S (START)=DATA-(.99) S START=$O(^ICD9("BA",START_" ",-1)) S INDEX="BA"
"RTN","PXBGPOV2",56,0)
 I DATA?1A.NP S START=$O(^ICD9("BA",START_" ",-1)) S INDEX="BA"
"RTN","PXBGPOV2",57,0)
 I DATA?2AP S HLP=1
"RTN","PXBGPOV2",58,0)
 I DATA?3.AP S START=$O(^ICD9("D",DATA),-1),INDEX="D"
"RTN","PXBGPOV2",59,0)
 I DATA?1A!(DATA?1.2N) D WAIT^DICD
"RTN","PXBGPOV2",60,0)
 ;
"RTN","PXBGPOV2",61,0)
 D LIST^DIC(FILE,"",FIELD,BACK,"",.START,DATA,INDEX,DIC("S"),"","^TMP(""PXBTOTAL"",$J)","^TMP(""PXBTOTAL"",$J)")
"RTN","PXBGPOV2",62,0)
 ;
"RTN","PXBGPOV2",63,0)
FILTER ;--FILTER OUT DUPLICATES
"RTN","PXBGPOV2",64,0)
 N I,DXINF S I=0 F  S I=$O(^TMP("PXBTOTAL",$J,"DILIST","ID",I)) Q:I=""  D
"RTN","PXBGPOV2",65,0)
 .S DXINF=$$DXNARR^PXUTL1(^TMP("PXBTOTAL",$J,"DILIST","ID",I,.01),$G(IDATE))
"RTN","PXBGPOV2",66,0)
 .I DXINF'="" S ^TMP("PXBOTAL",$J,$G(^TMP("PXBTOTAL",$J,"DILIST","ID",I,.01)),$E(DXINF,1,60)_" ",$G(^TMP("PXBTOTAL",$J,"DILIST",2,I))_" ")=""
"RTN","PXBGPOV2",67,0)
 K ^TMP("PXBTOTAL",$J)
"RTN","PXBGPOV2",68,0)
 N I,J,K,C S (I,J,K,C)="" F  S I=$O(^TMP("PXBOTAL",$J,I)) Q:I=""  D
"RTN","PXBGPOV2",69,0)
 .S C=C+1
"RTN","PXBGPOV2",70,0)
 .S J=$O(^TMP("PXBOTAL",$J,I,0))
"RTN","PXBGPOV2",71,0)
 .S K=$O(^TMP("PXBOTAL",$J,I,J,0))
"RTN","PXBGPOV2",72,0)
 .S ^TMP("PXBTOTAL",$J,"DILIST","ID",C,.01)=I
"RTN","PXBGPOV2",73,0)
 .S ^TMP("PXBTOTAL",$J,"DILIST","ID",C,10)=J
"RTN","PXBGPOV2",74,0)
 .S ^TMP("PXBTOTAL",$J,"DILIST",2,C)=K
"RTN","PXBGPOV2",75,0)
 S ^TMP("PXBTOTAL",$J,"DILIST",0)=C
"RTN","PXBGPOV2",76,0)
 K ^TMP("PXBOTAL",$J)
"RTN","PXBGPOV2",77,0)
 ;
"RTN","PXBGPOV2",78,0)
 S TOTAL=$P($G(^TMP("PXBTOTAL",$J,"DILIST",0)),"^",1)
"RTN","PXBGPOV2",79,0)
 ;
"RTN","PXBGPOV2",80,0)
 ;--DISPLAY IF NO MATCH FOUND
"RTN","PXBGPOV2",81,0)
 I TOTAL<1 D
"RTN","PXBGPOV2",82,0)
 .W IOEDEOP
"RTN","PXBGPOV2",83,0)
 .I '$G(HLP) W ! D HELP^PXBUTL0("CPTM")
"RTN","PXBGPOV2",84,0)
 .I $G(HLP) S RESULTS="USE AT LEAST THE 3 CHARACETERS" W !,IOCUU,?(IOM-$L(RESULTS))\2,RESULTS
"RTN","PXBGPOV2",85,0)
 .S ERROR=1,CYCL=1
"RTN","PXBGPOV2",86,0)
 I TOTAL<1 Q TOTAL
"RTN","PXBGPOV2",87,0)
 ;
"RTN","PXBGPOV2",88,0)
 ;----DISPLAY LIST TO THE SCREEN
"RTN","PXBGPOV2",89,0)
 S HEADING="W !,""ITEM"",?6,""CODE"",?15,""DESCRIPTION    "",IOINHI,TOTAL,"" MATCHES"",IOINLOW"
"RTN","PXBGPOV2",90,0)
LIST ;-DISPLAY LIST TO THE SCREEN
"RTN","PXBGPOV2",91,0)
 I TOTAL=1 S X=1 G VAL
"RTN","PXBGPOV2",92,0)
 D LOC W !
"RTN","PXBGPOV2",93,0)
 X HEADING
"RTN","PXBGPOV2",94,0)
 S SUB=SUB-1
"RTN","PXBGPOV2",95,0)
 S NUM=0 F  S SUB=$O(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB)) S NUM=NUM+1 Q:NUM=11  Q:SUB'>0  S SUB2=SUB2+1 D
"RTN","PXBGPOV2",96,0)
 .S CODE=$G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,.01))
"RTN","PXBGPOV2",97,0)
 .S NAME=$E($G(^TMP("PXBTOTAL",$J,"DILIST","ID",SUB,10)),1,64)
"RTN","PXBGPOV2",98,0)
 .W !,SUB,?6,CODE,?15,NAME
"RTN","PXBGPOV2",99,0)
 ;
"RTN","PXBGPOV2",100,0)
 ;----If There is only one selection go to proper prompting
"RTN","PXBGPOV2",101,0)
 I TOTAL=1 G PRMPT2
"RTN","PXBGPOV2",102,0)
 ;
"RTN","PXBGPOV2",103,0)
PRMPT ;---WRITE PROMPT HERE
"RTN","PXBGPOV2",104,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGPOV2",105,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGPOV2",106,0)
 W !
"RTN","PXBGPOV2",107,0)
 I SUB>0 W !,"Enter '^' to quit"
"RTN","PXBGPOV2",108,0)
 E  I TOTAL>10 W !,"               END OF LIST"
"RTN","PXBGPOV2",109,0)
 I SUB>0 S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to continue: "
"RTN","PXBGPOV2",110,0)
 E  S DIR("A")="Select a single 'ITEM NUMBER' or 'RETURN' to exit: "
"RTN","PXBGPOV2",111,0)
 S DIR("?")="Enter ITEM 'No' to select , '^' to quit"
"RTN","PXBGPOV2",112,0)
 S DIR(0)="N,A,O^0:"_SUB2_":0^I X'?.1""^"".N K X"
"RTN","PXBGPOV2",113,0)
 D ^DIR
"RTN","PXBGPOV2",114,0)
 I X="",SUB>0 G LIST
"RTN","PXBGPOV2",115,0)
 I X="",SUB'>0 S X="^"
"RTN","PXBGPOV2",116,0)
VAL ;-----Set the VAL equal to the value
"RTN","PXBGPOV2",117,0)
 S VAL=$G(^TMP("PXBTOTAL",$J,"DILIST",2,X))_"^"_$G(^TMP("PXBTOTAL",$J,"DILIST","ID",X,.01))
"RTN","PXBGPOV2",118,0)
EXITNEW ;--EXIT
"RTN","PXBGPOV2",119,0)
 K DIR,^TMP("PXBTANA",$J),^TMP("PXBTOTAL",$J)
"RTN","PXBGPOV2",120,0)
 K TANA,TOTAL
"RTN","PXBGPOV2",121,0)
 Q VAL
"RTN","PXBGPOV2",122,0)
 Q
"RTN","PXBGPOV2",123,0)
 ;
"RTN","PXBGPOV2",124,0)
 ;---SUBROUTINES
"RTN","PXBGPOV2",125,0)
BACK ;
"RTN","PXBGPOV2",126,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,1))
"RTN","PXBGPOV2",127,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,1))
"RTN","PXBGPOV2",128,0)
 Q
"RTN","PXBGPOV2",129,0)
FORWARD ;
"RTN","PXBGPOV2",130,0)
 S START=$G(^TMP("PXBTANA",$J,"DILIST",1,10))
"RTN","PXBGPOV2",131,0)
 S START("IEN")=$G(^TMP("PXBTANA",$J,"DILIST",2,10))
"RTN","PXBGPOV2",132,0)
 Q
"RTN","PXBGPOV2",133,0)
LOC ;--LOCATE CURSOR
"RTN","PXBGPOV2",134,0)
 D LOC^PXBCC(3,1) ;--LOCATE THE CURSOR
"RTN","PXBGPOV2",135,0)
 W IOEDEOP ;--CLEAR THE PAGE
"RTN","PXBGPOV2",136,0)
 Q
"RTN","PXBGPOV2",137,0)
HEAD ;--HEAD
"RTN","PXBGPOV2",138,0)
 W !,IOCUU,IOBON,"HELP SCREEN",IOSGR0,?(IOM-$L(TITLE))\2,IOINHI,TITLE,IOINLOW,IOELEOL
"RTN","PXBGPOV2",139,0)
 Q
"RTN","PXBGPOV2",140,0)
SUB ;--DISPLAY LIST TO THE SCREEN
"RTN","PXBGPOV2",141,0)
 I $P(^TMP("PXBTANA",$J,"DILIST",0),"^",1)=0 W !!,"     E N D  O F  L I S T" Q
"RTN","PXBGPOV2",142,0)
 X HEADING
"RTN","PXBGPOV2",143,0)
 S SUB=0,CNT=0 F  S SUB=$O(^TMP("PXBTANA",$J,"DILIST","ID",SUB)) Q:SUB'>0  S CNT=CNT+1 D
"RTN","PXBGPOV2",144,0)
 .S CODE=$G(^TMP("PXBTANA",$J,"DILIST","ID",SUB,FIRST))
"RTN","PXBGPOV2",145,0)
 .S NAME=$E($G(^TMP("PXBTANA",$J,"DILIST","ID",SUB,SECOND)),1,64)
"RTN","PXBGPOV2",146,0)
 .W !,SUB,?6,CODE,?15,NAME
"RTN","PXBGPOV2",147,0)
 Q
"RTN","PXBGPOV2",148,0)
SETUP ;-SETP VARIABLES
"RTN","PXBGPOV2",149,0)
 S FILE=80,FIRST=.01,SECOND=10
"RTN","PXBGPOV2",150,0)
 S FIELD=FIRST_";"_SECOND
"RTN","PXBGPOV2",151,0)
 S HEADING="W !,""ITEM"",?6,""CODE"",?15,""DESCRIPTION"""
"RTN","PXBGPOV2",152,0)
 Q
"RTN","PXBGPOV2",153,0)
PRMPT2 ;-----Yes and No prompt if onlyi choice
"RTN","PXBGPOV2",154,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBGPOV2",155,0)
 D LOC^PXBCC(15,1)
"RTN","PXBGPOV2",156,0)
 S DIR("A")="Is this the correct entry "
"RTN","PXBGPOV2",157,0)
 S DIR("B")="YES"
"RTN","PXBGPOV2",158,0)
 S DIR(0)="Y"
"RTN","PXBGPOV2",159,0)
 D ^DIR
"RTN","PXBGPOV2",160,0)
 I Y=0 S X="^"
"RTN","PXBGPOV2",161,0)
 I Y=1 S X=1
"RTN","PXBGPOV2",162,0)
 G VAL
"RTN","PXBPCPT")
0^3^B42867759
"RTN","PXBPCPT",1,0)
PXBPCPT ;ISL/JVS,ESW - PROMPT CPT ; 8/25/03 1:13pm
"RTN","PXBPCPT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,73,89,112,121,132,149**;Aug 12, 1996
"RTN","PXBPCPT",3,0)
 ;
"RTN","PXBPCPT",4,0)
 ;
"RTN","PXBPCPT",5,0)
 ;
"RTN","PXBPCPT",6,0)
CPT ;--CPT CODE
"RTN","PXBPCPT",7,0)
 ;SELINE=LINE NUMBER OF SELECTED ITEM
"RTN","PXBPCPT",8,0)
 N TIMED,PXBUT,EDATA,DIC,LINE,XFLAG,SELINE
"RTN","PXBPCPT",9,0)
 N I,X,Y,Q,DOUBLEQQ,NF,BAD,OK,CPT,PXEDIT
"RTN","PXBPCPT",10,0)
 I '$D(^DISV(DUZ,"PXBCPT-1")) S ^DISV(DUZ,"PXBCPT-1")=" "
"RTN","PXBPCPT",11,0)
 I '$D(IOSC) D TERM^PXBCC
"RTN","PXBPCPT",12,0)
 S DOUBLEQQ=0,PXEDIT=""
"RTN","PXBPCPT",13,0)
 S TIMED="I '$T!(DATA[""^"")!(DATA="""")"
"RTN","PXBPCPT",14,0)
 S DIC("S")="I $$CPTSCREN^PXBUTL(Y,IDATE)"
"RTN","PXBPCPT",15,0)
C ;--SECOND ENTRY POINT
"RTN","PXBPCPT",16,0)
 W IOSC
"RTN","PXBPCPT",17,0)
 ;---DYNAMIC  HEADER-----------------
"RTN","PXBPCPT",18,0)
 I '$D(CYCL) D
"RTN","PXBPCPT",19,0)
 .I PXBCNT=0,DOUBLEQQ=0 D LOC^PXBCC(2,10) W IOUON,"...There are "_$G(PXBCNT)_" PROCEDURES associated with this encounter.",IOUOFF,IOELEOL
"RTN","PXBPCPT",20,0)
 .I PXBCNT=1,DOUBLEQQ=0 D LOC^PXBCC(2,10) W IOUON,"...There is "_$G(PXBCNT)_" PROCEDURE associated with this encounter.",IOUOFF,IOELEOL
"RTN","PXBPCPT",21,0)
 .I PXBCNT>1,DOUBLEQQ=0 D LOC^PXBCC(2,10) W IOUON,"...There are "_$G(PXBCNT)_" PROCEDURES associated with this encounter.",IOUOFF,IOELEOL
"RTN","PXBPCPT",22,0)
 ;
"RTN","PXBPCPT",23,0)
 D LOC^PXBCC(15,0)
"RTN","PXBPCPT",24,0)
 ;I PXBCNT>30 
"RTN","PXBPCPT",25,0)
 ;W IOCUU,IOELEOL,
"RTN","PXBPCPT",26,0)
 W:PXTLNS>10 !,"Enter '+' for next page, '-' for last page." ;,IORC
"RTN","PXBPCPT",27,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBPCPT",28,0)
 I '$D(^TMP("PXK",$J,"CPT")) W !,"Enter PROCEDURE (CPT CODE): "
"RTN","PXBPCPT",29,0)
 I $D(^TMP("PXK",$J,"CPT")) W !,"Enter ",IOINHI,"NEXT",IOINLOW," PROCEDURE (CPT CODE): "
"RTN","PXBPCPT",30,0)
 W IOELEOL R DATA:DTIME S EDATA=DATA
"RTN","PXBPCPT",31,0)
C1 ;----Third entry point
"RTN","PXBPCPT",32,0)
 X TIMED I  S PXBUT=1 S:DATA="^^" PXBEXIT=0 S:DATA="^^^" PXBRRR="" G CPTX
"RTN","PXBPCPT",33,0)
 I DATA?1.N1"E".NAP S DATA=" "_DATA
"RTN","PXBPCPT",34,0)
 I $L(DATA)>200 S (DATA,EDATA)=$E(DATA,1,199)
"RTN","PXBPCPT",35,0)
 I DATA?24.N S (DATA,EDATA)=$E(DATA,1,24)
"RTN","PXBPCPT",36,0)
 D CASE^PXBUTL
"RTN","PXBPCPT",37,0)
 ;----SPACE BAR---
"RTN","PXBPCPT",38,0)
 I DATA=" ",$D(^DISV(DUZ,"PXBCPT-1")) S DATA=^DISV(DUZ,"PXBCPT-1") W DATA
"RTN","PXBPCPT",39,0)
 ;---------------
"RTN","PXBPCPT",40,0)
 I DATA["^P" G CPTX
"RTN","PXBPCPT",41,0)
 I DATA["^C" G CPTX
"RTN","PXBPCPT",42,0)
 ;
"RTN","PXBPCPT",43,0)
 I ((DATA="+")!(DATA="-")) D DISCPT4^PXBDCPT(DATA) G C
"RTN","PXBPCPT",44,0)
 ;
"RTN","PXBPCPT",45,0)
M ;--------If Multiple entries have been entered
"RTN","PXBPCPT",46,0)
 D ADDM^PXBPCPT1
"RTN","PXBPCPT",47,0)
 I $G(NF) G C1
"RTN","PXBPCPT",48,0)
 ;
"RTN","PXBPCPT",49,0)
DEL ;--------If Multiple deleting
"RTN","PXBPCPT",50,0)
 D DELM^PXBPCPT1
"RTN","PXBPCPT",51,0)
 I DATA["^C" G CPTX
"RTN","PXBPCPT",52,0)
 I $G(NF) G C1
"RTN","PXBPCPT",53,0)
 ;
"RTN","PXBPCPT",54,0)
 D MOD
"RTN","PXBPCPT",55,0)
 ;
"RTN","PXBPCPT",56,0)
LI ;--------If picked a line number display 
"RTN","PXBPCPT",57,0)
 ;
"RTN","PXBPCPT",58,0)
 I (DATA>0)&(DATA<(PXBCNT+1))&($L(DATA)'>$L(PXBCNT)) D
"RTN","PXBPCPT",59,0)
 .S XFLAG=1
"RTN","PXBPCPT",60,0)
 .D DISCPT4^PXBDCPT(PXBSAM(DATA,"LINE"))
"RTN","PXBPCPT",61,0)
 .D REVCPT^PXBCC(DATA,1)
"RTN","PXBPCPT",62,0)
 .S SELINE=DATA
"RTN","PXBPCPT",63,0)
 .F I=1:1:$L(DATA) W IOCUB,IOECH
"RTN","PXBPCPT",64,0)
 .S CPTQUA=$P($G(PXBSAM(DATA)),"^",2)
"RTN","PXBPCPT",65,0)
 .S DATA=$P($G(PXBSAM(DATA)),"^",1)
"RTN","PXBPCPT",66,0)
 .;I $G(Q)'>1 W DATA
"RTN","PXBPCPT",67,0)
 I $D(XFLAG),XFLAG=1 S Y=DATA G FIN
"RTN","PXBPCPT",68,0)
 ;
"RTN","PXBPCPT",69,0)
 ;
"RTN","PXBPCPT",70,0)
 ;--------If CPT is already in the file
"RTN","PXBPCPT",71,0)
 I $D(PXBKY(DATA)) D  I +PXEDIT<0 S DATA="^C" G C1
"RTN","PXBPCPT",72,0)
 .D DISCPT4^PXBDCPT(PXBSAM($O(PXBKY(DATA,0)),"LINE"))
"RTN","PXBPCPT",73,0)
 .K Q
"RTN","PXBPCPT",74,0)
 .D TIMES^PXBUTL(DATA)
"RTN","PXBPCPT",75,0)
 .S PXEDIT=$$MULTI(DATA) Q:+PXEDIT<0
"RTN","PXBPCPT",76,0)
 .I Q=1 D
"RTN","PXBPCPT",77,0)
 ..S LINE=$O(PXBKY(DATA,0))
"RTN","PXBPCPT",78,0)
 ..S XFLAG=1
"RTN","PXBPCPT",79,0)
 ..Q:PXEDIT="A"
"RTN","PXBPCPT",80,0)
 ..D REVCPT^PXBCC(LINE,1)
"RTN","PXBPCPT",81,0)
 ..S CPTQUA=$P($G(PXBSAM(LINE)),"^",2)
"RTN","PXBPCPT",82,0)
 ..S SELINE=$O(Q(0))
"RTN","PXBPCPT",83,0)
 .I Q>1,PXEDIT="E" D
"RTN","PXBPCPT",84,0)
 ..N PXPG
"RTN","PXBPCPT",85,0)
 ..S NLINE=0
"RTN","PXBPCPT",86,0)
 ..S PXPG=+$G(^TMP("PXBDCPT",$J,"START"))+10
"RTN","PXBPCPT",87,0)
 ..F  S NLINE=$O(Q(NLINE)) Q:NLINE=""  Q:PXBSAM(NLINE,"LINE")>PXPG  D
"RTN","PXBPCPT",88,0)
 ...D REVCPT^PXBCC(NLINE,1)
"RTN","PXBPCPT",89,0)
 I '$G(Q) K SELINE
"RTN","PXBPCPT",90,0)
 I PXEDIT="E",$D(Q),Q>1 D  G:DATA="^C" C1 G LI
"RTN","PXBPCPT",91,0)
 .D WHICH^PXBPWCH S:DATA["^" DATA="^C"
"RTN","PXBPCPT",92,0)
 I $D(XFLAG),XFLAG=1 S Y=DATA G FIN
"RTN","PXBPCPT",93,0)
 ;
"RTN","PXBPCPT",94,0)
 ;--------Need to do a DIC lookup on data
"RTN","PXBPCPT",95,0)
 I DATA'="??" D  G:DATA="^C" C I DATA="?" G C
"RTN","PXBPCPT",96,0)
 .D:DATA="?" EN1^PXBHLP0("PXB","CPT",1,"",1)
"RTN","PXBPCPT",97,0)
 I DATA="??" D  G:UDATA="^C" C1 G FIN
"RTN","PXBPCPT",98,0)
 .S DOUBLEQQ=1
"RTN","PXBPCPT",99,0)
 .D EN1^PXBHLP0("PXB","CPT","",1,2)
"RTN","PXBPCPT",100,0)
 .I $L(DATA,"^")>1 D
"RTN","PXBPCPT",101,0)
 ..S DATA=+$P(DATA,"^",2)_$S($P(DATA,U,3)]"":"-"_$P(DATA,U,3),1:"")
"RTN","PXBPCPT",102,0)
 ..D MOD
"RTN","PXBPCPT",103,0)
 ..S Y=DATA
"RTN","PXBPCPT",104,0)
 .S:$G(UDATA)="" UDATA="^C"
"RTN","PXBPCPT",105,0)
 .S:UDATA="^C" (DATA,EDATA,Y)=UDATA
"RTN","PXBPCPT",106,0)
 ;
"RTN","PXBPCPT",107,0)
 ;--If a "?" is NOT entered during lookup
"RTN","PXBPCPT",108,0)
 S FROM="CPT",(VAL,Y)=$P($P($$DOUBLE1^PXBGCPT2(FROM),"^",2),"--",1)
"RTN","PXBPCPT",109,0)
 S (X,DATA,EDATA)=VAL,DIC=81,DIC(0)="MZ",DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)" D ^DIC
"RTN","PXBPCPT",110,0)
 I Y<1 S DATA="^C" G C1
"RTN","PXBPCPT",111,0)
 ;
"RTN","PXBPCPT",112,0)
 ;--If Y is good and already in file...
"RTN","PXBPCPT",113,0)
 I $D(Y),$D(PXBKY(Y)) W IORC,IOCUU,IOEDEOP,! D
"RTN","PXBPCPT",114,0)
 .D DISCPT4^PXBDCPT($O(PXBKY($P(Y,"^",2),0)))
"RTN","PXBPCPT",115,0)
 .S LINE=$O(PXBKY($P(Y,"^",2),0)) D REVCPT^PXBCC(LINE,1)
"RTN","PXBPCPT",116,0)
 .S CPTQUA=$P($G(PXBSAM(LINE)),"^",2)
"RTN","PXBPCPT",117,0)
 ;
"RTN","PXBPCPT",118,0)
 ;
"RTN","PXBPCPT",119,0)
FIN ;--FINISH CPT
"RTN","PXBPCPT",120,0)
 I $G(SELINE) S $P(REQE,"^",1)=$P($G(PXBSAM(SELINE)),"^",3)
"RTN","PXBPCPT",121,0)
 I $P(REQE,"^",1)="" S $P(REQE,"^",1)="...No Provider Selected..."
"RTN","PXBPCPT",122,0)
 I $L(Y,"^")'>1 S X=Y,DIC=81,DIC(0)="ZM",DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)" D ^DIC
"RTN","PXBPCPT",123,0)
 I Y<0 D HELP^PXBUTL0("CPTM") G C
"RTN","PXBPCPT",124,0)
 S OK=$$CPTOK^PXBUTL(+Y,IDATE) D  G:+OK=0 C
"RTN","PXBPCPT",125,0)
 .I +OK=0 W IOCUF,IOCUF,IORVON,"INACTIVE!--",IORVOFF D HELP1^PXBUTL1("CPTI") ;--HELP
"RTN","PXBPCPT",126,0)
 S CPT=Y(0)
"RTN","PXBPCPT",127,0)
 N PXINF S PXINF=$$CPT^ICPTCOD(+Y,IDATE),$P(CPT,"^",2)=$P(PXINF,"^",3)
"RTN","PXBPCPT",128,0)
 S ^DISV(DUZ,"PXBCPT-1")=$P(CPT,"^",1)
"RTN","PXBPCPT",129,0)
 I $D(PXBNCPT) S PXBNCPTF=1
"RTN","PXBPCPT",130,0)
 I $D(PXBKY(Y(0,0))),$G(SELINE) D
"RTN","PXBPCPT",131,0)
 .S $P(REQI,"^",8)=$O(PXBSKY(SELINE,0))
"RTN","PXBPCPT",132,0)
 .S PREDOC=$P(PXBSAM(SELINE),"^",3)
"RTN","PXBPCPT",133,0)
 .I $D(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1))) D
"RTN","PXBPCPT",134,0)
 ..Q:$P(REQI,"^",8)]""
"RTN","PXBPCPT",135,0)
 ..S $P(REQI,"^",8)=$O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),0))
"RTN","PXBPCPT",136,0)
 .I $D(PXBPRV($P(REQE,"^",1))) D
"RTN","PXBPCPT",137,0)
 ..S CPTQUA=$P(PXBSAM($O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),$O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),0)),0))),"^",2)
"RTN","PXBPCPT",138,0)
 I $D(PXBKY(Y(0,0))),'$G(SELINE) D
"RTN","PXBPCPT",139,0)
 .;S $P(REQI,"^",8)=$O(PXBSKY($O(PXBKY(Y(0,0),0)),0))
"RTN","PXBPCPT",140,0)
 .S PREDOC=$P(PXBSAM($O(PXBKY(Y(0,0),0))),"^",3)
"RTN","PXBPCPT",141,0)
 .I $D(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1))) D
"RTN","PXBPCPT",142,0)
 ..S $P(REQI,"^",8)=$O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),0))
"RTN","PXBPCPT",143,0)
 .I $D(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1))) D
"RTN","PXBPCPT",144,0)
 ..S CPTQUA=$P(PXBSAM($O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),$O(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1),0)),0))),"^",2)
"RTN","PXBPCPT",145,0)
 S $P(REQI,"^",3)=+Y
"RTN","PXBPCPT",146,0)
 S $P(REQE,"^",3)=$P(CPT,"^",1)_"-- "_$P(CPT,"^",2)
"RTN","PXBPCPT",147,0)
 S PXBNCPT($P(CPT,"^",1))=$P(REQI,"^",8)
"RTN","PXBPCPT",148,0)
 S:$P(REQI,"^",8)]"" PXBNCPT($P(CPT,"^",1),$P(REQI,"^",8))=""
"RTN","PXBPCPT",149,0)
 ;
"RTN","PXBPCPT",150,0)
CPTX ;--CPT Exit and cleanup
"RTN","PXBPCPT",151,0)
 I $P(REQE,"^",1)="" S $P(REQE,"^",1)="...No Provider Selected..."
"RTN","PXBPCPT",152,0)
 I $G(WHAT)="INTV",DATA="^" S PXBEXIT="^^"
"RTN","PXBPCPT",153,0)
 I $D(PXBRRR) S DATA="^"
"RTN","PXBPCPT",154,0)
 I $D(PREDOC) D
"RTN","PXBPCPT",155,0)
 .I PREDOC]""&($P(REQE,"^",1)'[PREDOC) W !,IOINHI,"--WARNING!",IOINLOW," Currently stored Provider of service:-",IOINHI,PREDOC,IOINLOW D
"RTN","PXBPCPT",156,0)
 ..I '$D(PXBPRV($P(REQE,"^",1),$P(CPT,"^",1))) S $P(REQI,"^",8)=""
"RTN","PXBPCPT",157,0)
 K PXBDPRV,PREDOC
"RTN","PXBPCPT",158,0)
 W IOEDEOP
"RTN","PXBPCPT",159,0)
 Q
"RTN","PXBPCPT",160,0)
MOD ;---Separate CPT modifiers from CPT codes in entry string, if entered
"RTN","PXBPCPT",161,0)
 I DATA?1.N1"-".NE D
"RTN","PXBPCPT",162,0)
 .S PXMODSTR=$P(DATA,"-",2)
"RTN","PXBPCPT",163,0)
 .S (DATA,EDATA)=$P(DATA,"-",1)
"RTN","PXBPCPT",164,0)
 Q
"RTN","PXBPCPT",165,0)
 ;
"RTN","PXBPCPT",166,0)
MULTI(CPTCD) ;--Prompt user to Edit existing CPT code or Add as new entry
"RTN","PXBPCPT",167,0)
 ;
"RTN","PXBPCPT",168,0)
 N DIR,DA,X,Y
"RTN","PXBPCPT",169,0)
 S DIR(0)="SB^E:EDIT;A:ADD"
"RTN","PXBPCPT",170,0)
 S DIR("A")="Do you wish to (E)dit or (A)dd"
"RTN","PXBPCPT",171,0)
 ;PX*2.0*132
"RTN","PXBPCPT",172,0)
 I (($E(CPTCD)?1N)&($D(^IBE(357.69,+CPTCD))))!(($E(CPTCD)?1A)&($D(^IBE(357.69,CPTCD)))) D
"RTN","PXBPCPT",173,0)
 .S DIR(0)="SB^E:EDIT",DIR("A")="You may only (E)dit this code, no duplicate E&M codes allowed."
"RTN","PXBPCPT",174,0)
 S DIR("A",1)="CPT "_CPTCD_" already on file for this Encounter"
"RTN","PXBPCPT",175,0)
 D ^DIR
"RTN","PXBPCPT",176,0)
 I Y']""!(Y="^") Q -1
"RTN","PXBPCPT",177,0)
 Q Y
"RTN","PXBPMOD")
0^12^B5869951
"RTN","PXBPMOD",1,0)
PXBPMOD ;ISA/EW,ESW - PROMPT MOD ; 10/31/02 12:12pm
"RTN","PXBPMOD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,88,89,108,121,149**Aug 12, 1996
"RTN","PXBPMOD",3,0)
 ;
"RTN","PXBPMOD",4,0)
 ;
"RTN","PXBPMOD",5,0)
 ;
"RTN","PXBPMOD",6,0)
 Q
"RTN","PXBPMOD",7,0)
 ;
"RTN","PXBPMOD",8,0)
MOD(PXVST,PXPAT,PXCPT,PXMODSTR,PXCPTIEN,PXVSTDAT,PXCNT,PXARR) ;
"RTN","PXBPMOD",9,0)
 ;CPT Modifier prompt
"RTN","PXBPMOD",10,0)
 ; Input:
"RTN","PXBPMOD",11,0)
 ;   PXVST    - Visit IEN.
"RTN","PXBPMOD",12,0)
 ;   PXPAT    - Patient IEN
"RTN","PXBPMOD",13,0)
 ;   PXCPT    - CPT code or IEN of its entry in CPT file (#81)
"RTN","PXBPMOD",14,0)
 ;   PXMODSTR - User entered string of modifier codes in external
"RTN","PXBPMOD",15,0)
 ;              format
"RTN","PXBPMOD",16,0)
 ;   PXCPTIEN - IEN of CPT code entry in V CPT file (#9000010.18)
"RTN","PXBPMOD",17,0)
 ;   PXVSTDAT - Visit date
"RTN","PXBPMOD",18,0)
 ;   PXCNT    - Number of active modifiers defined for CPT code
"RTN","PXBPMOD",19,0)
 ; Output:
"RTN","PXBPMOD",20,0)
 ;   PXARR    - Array containing modifiers.
"RTN","PXBPMOD",21,0)
 ;
"RTN","PXBPMOD",22,0)
 ;
"RTN","PXBPMOD",23,0)
 N DTOUT,DUOUT,DIROUT,DA,DIC,DR,PXGLB,Y,ICPTVDT
"RTN","PXBPMOD",24,0)
 S PXGLB="^AUPNVCPT",ICPTVDT=PXVSTDAT
"RTN","PXBPMOD",25,0)
 I $$VALCPT(PXCPT)<1 Q
"RTN","PXBPMOD",26,0)
 I +$$CPTOK^PXBUTL(PXCPT,PXVSTDAT)=0 Q
"RTN","PXBPMOD",27,0)
 I $G(PXCPTIEN)]"" S DA=PXCPTIEN
"RTN","PXBPMOD",28,0)
 I $G(PXCPTIEN)']"" D
"RTN","PXBPMOD",29,0)
 .D FILECPT
"RTN","PXBPMOD",30,0)
 .S (PXARR,PXNEWIEN)=DA
"RTN","PXBPMOD",31,0)
 ;Only prompt if there are active modifiers for the CPT code
"RTN","PXBPMOD",32,0)
 D:PXCNT>0 CPTMOD
"RTN","PXBPMOD",33,0)
 I $D(DTOUT)!$D(Y) D  Q
"RTN","PXBPMOD",34,0)
 .S (EDATA,DATA)="^C"
"RTN","PXBPMOD",35,0)
 .;Remove incomplete V CPT entry
"RTN","PXBPMOD",36,0)
 .I $G(PXNEWIEN)]"" D REMOVE^PXCEVFIL(PXNEWIEN)
"RTN","PXBPMOD",37,0)
 D BLDARRY
"RTN","PXBPMOD",38,0)
 Q
"RTN","PXBPMOD",39,0)
 ;
"RTN","PXBPMOD",40,0)
FILECPT ;Create a new entry in V CPT file and get IEN
"RTN","PXBPMOD",41,0)
 N X,Y,DD,DO,DR
"RTN","PXBPMOD",42,0)
 S DIC=PXGLB_"("
"RTN","PXBPMOD",43,0)
 S DIC(0)=""
"RTN","PXBPMOD",44,0)
 S X=PXCPT
"RTN","PXBPMOD",45,0)
 D FILE^DICN
"RTN","PXBPMOD",46,0)
 ;
"RTN","PXBPMOD",47,0)
 S DA=+Y
"RTN","PXBPMOD",48,0)
 S DIE=PXGLB_"("
"RTN","PXBPMOD",49,0)
 S DR=".02////^S X=PXPAT;.03////^S X=PXVST;"
"RTN","PXBPMOD",50,0)
 L +@(PXGLB_"(DA)"):10
"RTN","PXBPMOD",51,0)
 D ^DIE
"RTN","PXBPMOD",52,0)
 L -@(PXGLB_"(DA)")
"RTN","PXBPMOD",53,0)
 Q
"RTN","PXBPMOD",54,0)
 ;
"RTN","PXBPMOD",55,0)
CPTMOD ;Prompt for CPT Modifiers
"RTN","PXBPMOD",56,0)
 N PXMOD,PXERR,PXI
"RTN","PXBPMOD",57,0)
 S DR=1
"RTN","PXBPMOD",58,0)
 S DIE=PXGLB_"("
"RTN","PXBPMOD",59,0)
 S DIC(0)="AELMQ"
"RTN","PXBPMOD",60,0)
 L +@(PXGLB_"(DA)")
"RTN","PXBPMOD",61,0)
 ;--File modifiers entered before prompting user
"RTN","PXBPMOD",62,0)
 I $G(PXMODSTR)]"" D
"RTN","PXBPMOD",63,0)
 .I $L(PXMODSTR,",")=1 S DR="1//"_PXMODSTR Q
"RTN","PXBPMOD",64,0)
 .S PXMOD=""
"RTN","PXBPMOD",65,0)
 .F PXI=1:1 S PXMOD=$P(PXMODSTR,",",PXI) Q:PXMOD=""  D
"RTN","PXBPMOD",66,0)
 ..S PXERR=""
"RTN","PXBPMOD",67,0)
 ..D VAL^DIE(9000010.181,DA,.01,"",PXMOD,.PXERR)
"RTN","PXBPMOD",68,0)
 ..Q:PXERR="^"
"RTN","PXBPMOD",69,0)
 ..S DR="1///^S X=PXMOD"
"RTN","PXBPMOD",70,0)
 ..D ^DIE
"RTN","PXBPMOD",71,0)
 .S DR=1
"RTN","PXBPMOD",72,0)
 D ^DIE
"RTN","PXBPMOD",73,0)
 L -@(PXGLB_"(DA)")
"RTN","PXBPMOD",74,0)
 Q
"RTN","PXBPMOD",75,0)
 ;
"RTN","PXBPMOD",76,0)
BLDARRY ;Copy new modifiers into local array
"RTN","PXBPMOD",77,0)
 N PXFIL,PXSUBFIL,PXSUB,PXARR2
"RTN","PXBPMOD",78,0)
 S PXFIL=9000010.18,PXSUBFIL=9000010.181
"RTN","PXBPMOD",79,0)
 D GETS^DIQ(PXFIL,DA,"1*","I","PXARR2")
"RTN","PXBPMOD",80,0)
 S PXSUB=""
"RTN","PXBPMOD",81,0)
 F  S PXSUB=$O(PXARR2(PXSUBFIL,PXSUB)) Q:PXSUB=""  D
"RTN","PXBPMOD",82,0)
 .S PXARR(1,+PXSUB)=PXARR2(PXSUBFIL,PXSUB,.01,"I")
"RTN","PXBPMOD",83,0)
 Q
"RTN","PXBPMOD",84,0)
 ;
"RTN","PXBPMOD",85,0)
VALCPT(X) ;Determine if CPT code is valid
"RTN","PXBPMOD",86,0)
 ;internal or external value of CPT is evaluated
"RTN","PXBPMOD",87,0)
 N DIC,Y
"RTN","PXBPMOD",88,0)
 S DIC=81
"RTN","PXBPMOD",89,0)
 S DIC(0)="BN"
"RTN","PXBPMOD",90,0)
 S DIC("S")="I $P($$CPT^ICPTCOD(Y,IDATE),U,7)"
"RTN","PXBPMOD",91,0)
 D ^DIC
"RTN","PXBPMOD",92,0)
 Q Y
"RTN","PXBPPOV")
0^1^B22349563
"RTN","PXBPPOV",1,0)
PXBPPOV ;ISL/JVS - PROMPT POV ; 5/1/01 2:58pm
"RTN","PXBPPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,28,92,121,149**;Aug 12, 1996
"RTN","PXBPPOV",3,0)
 ;
"RTN","PXBPPOV",4,0)
 ; VARIABLE LIST
"RTN","PXBPPOV",5,0)
 ; SELINE= Line number of selected item
"RTN","PXBPPOV",6,0)
 ;
"RTN","PXBPPOV",7,0)
POV ;--DIAGNOSIS
"RTN","PXBPPOV",8,0)
 I $D(PXBNPOVL) D LOC^PXBCC(2,0) W IOUON,"Previous Entry:   ",$G(PXBNPOVL(1)) F I=1:1:10 W " "
"RTN","PXBPPOV",9,0)
 W IOUOFF
"RTN","PXBPPOV",10,0)
 N TIMED,EDATA,DIC,LINE,XFLAG,SELINE,PXBEDIS,FPL
"RTN","PXBPPOV",11,0)
 I '$D(^DISV(DUZ,"PXBPOV-3")) S ^DISV(DUZ,"PXBPOV-3")="   "
"RTN","PXBPPOV",12,0)
 I '$D(IOSC) D TERM^PXBCC
"RTN","PXBPPOV",13,0)
 S DOUBLEQQ=0
"RTN","PXBPPOV",14,0)
 S TIMED="I '$T!(DATA=""^"")"
"RTN","PXBPPOV",15,0)
 ; S DIC("S")="I $P($G(^ICD9(Y,0)),""^"",9)'=1!($P(^(0),""^"",11)'=""""&(IDATE<($P(^(0),""^"",11))))"
"RTN","PXBPPOV",16,0)
 S DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)"
"RTN","PXBPPOV",17,0)
P ;--Second Entry point
"RTN","PXBPPOV",18,0)
 W IOSC K FPL
"RTN","PXBPPOV",19,0)
 ;---DYNAMIC HEADER---
"RTN","PXBPPOV",20,0)
 I '$D(CYCL) D
"RTN","PXBPPOV",21,0)
 .I PXBCNT=0,DOUBLEQQ=0 D LOC^PXBCC(1,10) W "...There are "_$G(PXBCNT)_" ICD CODES associated with this encounter."
"RTN","PXBPPOV",22,0)
 .I PXBCNT=1,DOUBLEQQ=0 D LOC^PXBCC(1,10) W "...There is "_$G(PXBCNT)_" ICD CODE associated with this encounter."
"RTN","PXBPPOV",23,0)
 .I PXBCNT>1,DOUBLEQQ=0 D LOC^PXBCC(1,10) W "...There are "_$G(PXBCNT)_" ICD CODES associated with this encounter."
"RTN","PXBPPOV",24,0)
 ;
"RTN","PXBPPOV",25,0)
 D LOC^PXBCC(15,0)
"RTN","PXBPPOV",26,0)
 I PXBCNT>10&('$G(DOUBLEQQ)) W !,"Enter '+' for next page, '-' for previous page."
"RTN","PXBPPOV",27,0)
 I '$D(^TMP("PXK",$J,"POV")) W !,"Enter Diagnosis : "_$G(PXBDPOV) W:$D(PXBDPOV) " //" W IOELEOL
"RTN","PXBPPOV",28,0)
 I $D(^TMP("PXK",$J,"POV")) W !,"Enter ",IOINHI,"NEXT",IOINLOW," Diagnosis : "_$G(PXBDPOV) W:$D(PXBDPOV) " //" W IOELEOL
"RTN","PXBPPOV",29,0)
 R DATA:DTIME S EDATA=DATA
"RTN","PXBPPOV",30,0)
P1 ;--Third entry point
"RTN","PXBPPOV",31,0)
 X TIMED I  S PXBUT=1,LEAVE=1,DATA="^" G POVX
"RTN","PXBPPOV",32,0)
 I DATA?1.N1"E".NAP S DATA=" "_DATA
"RTN","PXBPPOV",33,0)
 I DATA?24.N S (DATA,EDATA)=$E(DATA,1,24)
"RTN","PXBPPOV",34,0)
 I $L(DATA)>200 S (DATA,EDATA)=$E(DATA,1,199)
"RTN","PXBPPOV",35,0)
 D CASE^PXBUTL
"RTN","PXBPPOV",36,0)
 ;----SPACE BAR---
"RTN","PXBPPOV",37,0)
 I DATA=" ",$D(^DISV(DUZ,"PXBPOV-3")) S DATA=^DISV(DUZ,"PXBPOV-3") W DATA
"RTN","PXBPPOV",38,0)
 ;-----------------
"RTN","PXBPPOV",39,0)
 I DATA="^^" S PXBEXIT=0 G POVX
"RTN","PXBPPOV",40,0)
 ;---I Prompt can jump to others put symbols in here
"RTN","PXBPPOV",41,0)
 I DATA["^P" G POVX
"RTN","PXBPPOV",42,0)
 ;------PXBDPOV=DEFAULT POV---
"RTN","PXBPPOV",43,0)
 I DATA="",$D(PXBDPOV) S DATA=$P($G(PXBDPOV),"--",1)
"RTN","PXBPPOV",44,0)
 I DATA="",'$D(PXBDPOV) S PXBUT=1,PXBSPL="",LEAVE=1 G POVX
"RTN","PXBPPOV",45,0)
 ;
"RTN","PXBPPOV",46,0)
 I PXBCNT>10&((DATA="+")!(DATA="-")) D DPOV4^PXBDPOV(DATA) G P
"RTN","PXBPPOV",47,0)
 ;
"RTN","PXBPPOV",48,0)
M ;--------IF Multiple entries have been entered
"RTN","PXBPPOV",49,0)
 D ADDM^PXBPPOV1
"RTN","PXBPPOV",50,0)
 I $G(NF) G P1
"RTN","PXBPPOV",51,0)
 ;
"RTN","PXBPPOV",52,0)
 ;--------IF Multiple deleting of entries
"RTN","PXBPPOV",53,0)
 D DELM^PXBPPOV1
"RTN","PXBPPOV",54,0)
 I $G(NF) G P1
"RTN","PXBPPOV",55,0)
 ;
"RTN","PXBPPOV",56,0)
LI ;--------If picked a line number
"RTN","PXBPPOV",57,0)
 I (DATA>0)&(DATA<(PXBCNT+1))&($L(DATA)'>$L(PXBCNT)) S XFLAG=1 D REVPOV^PXBCC(DATA) S SELINE=DATA D
"RTN","PXBPPOV",58,0)
 .F I=1:1:$L(DATA) W IOCUB,IOECH
"RTN","PXBPPOV",59,0)
 .S PRISEC=$P($G(PXBSAM(DATA)),"^",4) S:PRISEC["PRI" FPRI=0
"RTN","PXBPPOV",60,0)
 .S DATA=$P($G(PXBSAM(DATA)),"^",1)
"RTN","PXBPPOV",61,0)
 I $D(XFLAG),XFLAG=1 S (Y,EDATA)=DATA G PFIN
"RTN","PXBPPOV",62,0)
LI1 ;
"RTN","PXBPPOV",63,0)
 ;--------If POV is already in the file
"RTN","PXBPPOV",64,0)
 I '$G(DOUBLEQQ),$D(PXBKY(DATA)) D
"RTN","PXBPPOV",65,0)
 .I PXBCNT>10 D DPOV4^PXBDPOV($O(PXBKY(DATA,0)))
"RTN","PXBPPOV",66,0)
 .K Q D TIMES^PXBUTL(DATA)
"RTN","PXBPPOV",67,0)
 .I Q=1 S LINE=$O(PXBKY(DATA,0)) S XFLAG=1 D REVPOV^PXBCC(LINE) S PRISEC=$P($G(PXBSAM(LINE)),"^",2) S:PRISEC["PRI" FPRI=0
"RTN","PXBPPOV",68,0)
 .I Q>1 S NLINE=0 F  S NLINE=$O(Q(NLINE)) Q:NLINE=""  D REVPOV^PXBCC(NLINE)
"RTN","PXBPPOV",69,0)
 I $D(Q),Q>1 D WHICH^PXBPWCH G LI
"RTN","PXBPPOV",70,0)
 I $D(XFLAG),XFLAG=1 S Y=DATA G PFIN
"RTN","PXBPPOV",71,0)
 ;
"RTN","PXBPPOV",72,0)
 ;--------Need to do a DIC lookup on data
"RTN","PXBPPOV",73,0)
 I DATA'="??" D:DATA="?" EN1^PXBHLP0("PXB","POV",1,"",1) G:DATA="^P" P1 I DATA="?" G P
"RTN","PXBPPOV",74,0)
 I DATA="??" S DOUBLEQQ=1 D EN1^PXBHLP0("PXB","POV","",1,2) S:$L(DATA,"^")>1 (Y,DATA,EDATA)=$P($P(DATA,"^",2),"--",1) G:Y>1 PFIN G:Y?1A1.NP PFIN I DATA<1 S DATA="^P" G P1
"RTN","PXBPPOV",75,0)
 ;
"RTN","PXBPPOV",76,0)
 ;--If a "?" is NOT entered during lookup
"RTN","PXBPPOV",77,0)
 S (VAL,Y)=$$DOUBLE1^PXBGPOV2(WHAT) I Y<1 S DATA="^P" G P1
"RTN","PXBPPOV",78,0)
 ;<-*92*-<  S (X,DATA,EDATA)=$P(VAL,"^",2),DIC=80,DIC(0)="MZ" D ^DIC
"RTN","PXBPPOV",79,0)
 S (DATA,EDATA)=$P(VAL,"^",2),X="`"_+$P(Y,"^",1) K Y S DIC=80,DIC(0)="MZ",DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)" D ^DIC  ;** PX*1.0*92    05/01/2001  make ^DIC selection "exact."
"RTN","PXBPPOV",80,0)
 ;
"RTN","PXBPPOV",81,0)
 ;--If Y is good and already in file...
"RTN","PXBPPOV",82,0)
 I '$G(DOUBLEQQ),$D(Y),$D(PXBKY($P(Y,"^",2))) D
"RTN","PXBPPOV",83,0)
 .S LINE=$O(PXBKY($P(Y,"^",2),0)) ;---D REVPOV^PXBCC(LINE)
"RTN","PXBPPOV",84,0)
 .S PRISEC=$P($G(PXBSAM(LINE)),"^",4) S:PRISEC["PRI" FPRI=0
"RTN","PXBPPOV",85,0)
 S POV=Y(0)
"RTN","PXBPPOV",86,0)
 ;
"RTN","PXBPPOV",87,0)
PFIN ;--Finish the DIAGNOSIS
"RTN","PXBPPOV",88,0)
 I $L(Y,"^")'>1 S X=Y,DIC=80,DIC(0)="IZM",DIC("S")="I $P($$ICDDX^ICDCODE(Y,IDATE),U,10)" D ^DIC
"RTN","PXBPPOV",89,0)
 I +Y<0 D HELP1^PXBUTL1("POV") G P
"RTN","PXBPPOV",90,0)
 S POV=Y(0)
"RTN","PXBPPOV",91,0)
 ;get the correct diagnosis descriptor
"RTN","PXBPPOV",92,0)
 N DXINF S DXINF=$$ICDDX^ICDCODE(+Y,IDATE),$P(POV,"^",3)=$P(DXINF,"^",4)
"RTN","PXBPPOV",93,0)
 S PXBNPOV($P(POV,"^",1))=""
"RTN","PXBPPOV",94,0)
 S PXBNPOVL(1)=$P(POV,"^",1) S ^DISV(DUZ,"PXBPOV-3")=DATA
"RTN","PXBPPOV",95,0)
 I $D(PXBKY($P(Y(0),"^"))),$G(SELINE) S $P(REQI,"^",9)=$O(PXBSKY(SELINE,0))
"RTN","PXBPPOV",96,0)
 I $D(PXBKY($P(Y(0),"^"))),'$G(SELINE) S $P(REQI,"^",9)=$O(PXBSKY($O(PXBKY($P(Y(0),"^"),0)),0))
"RTN","PXBPPOV",97,0)
 I +Y>0 S PXBEDIS=$P(DXINF,"^",4)
"RTN","PXBPPOV",98,0)
 S $P(REQI,"^",5)=+Y,$P(REQI,"^",6)="S"
"RTN","PXBPPOV",99,0)
 S $P(REQE,"^",5)=$P(POV,"^",1)_" --"_$G(PXBEDIS),$P(REQE,"^",6)="SECONDARY"
"RTN","PXBPPOV",100,0)
POVX ;--EXIT AND CLEAN UP
"RTN","PXBPPOV",101,0)
 I $G(WHAT)="INTV",DATA="^" S PXBEXIT="^^"
"RTN","PXBPPOV",102,0)
 I '$D(REQE) S REQE=""
"RTN","PXBPPOV",103,0)
 I $P(REQE,"^",5)="" S $P(REQE,"^",5)="...No Diagnosis Selected..."
"RTN","PXBPPOV",104,0)
 Q
"RTN","PXBSTOR")
0^4^B35265912
"RTN","PXBSTOR",1,0)
PXBSTOR ;ISL/JVS - PASSING THE DATA TO THE V FILES ;7/24/96  10:29
"RTN","PXBSTOR",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,88,149**;Aug 12, 1996
"RTN","PXBSTOR",3,0)
 ;
"RTN","PXBSTOR",4,0)
 ;
"RTN","PXBSTOR",5,0)
 ;  VARIABLE LIST
"RTN","PXBSTOR",6,0)
 ;  PEICE   1        2     3     4      5     6       7       8       9
"RTN","PXBSTOR",7,0)
 ;  REQ*=PROVDER^PRIMARY^CPT^QUANTITY^POV^PRIMARY^PRV IEN^CPT IEN^POV IEN
"RTN","PXBSTOR",8,0)
 ;  PEICE   10       11
"RTN","PXBSTOR",9,0)
 ;  REQ  STOPCODE^STOPCODE IEN
"RTN","PXBSTOR",10,0)
 ;  REQ(1,MODIFIER)*=""
"RTN","PXBSTOR",11,0)
 ;  REQ("IEN")=V CPT file IEN
"RTN","PXBSTOR",12,0)
 ;  REQI=Internal Values
"RTN","PXBSTOR",13,0)
 ;  REQE=External Values
"RTN","PXBSTOR",14,0)
 ;  PXBVST=Visit Ien
"RTN","PXBSTOR",15,0)
 ;  PRVIEN=Provider IEN in V Provider file
"RTN","PXBSTOR",16,0)
 ;  CPTIEN=CPT IEN in the V CPT file
"RTN","PXBSTOR",17,0)
 ;  POVIEN=POV INE in the V POV file
"RTN","PXBSTOR",18,0)
 ;  patient is defined form the visit
"RTN","PXBSTOR",19,0)
 ;
"RTN","PXBSTOR",20,0)
EN0(PXBVST,PATIENT,REQI,REQ) ;--Main Entry point
"RTN","PXBSTOR",21,0)
EN1 ;
"RTN","PXBSTOR",22,0)
 Q:'$D(REQI)
"RTN","PXBSTOR",23,0)
 K ^TMP("PXK",$J) ;--MUST BE MOVED TO AFTER THE EVENT
"RTN","PXBSTOR",24,0)
 N PRVIEN,CPTIEN,POVIEN,PRVBEF,CPTBEF,POVBEF,PPRNARR,CPRNARR
"RTN","PXBSTOR",25,0)
 N POVBEF12,PRVAFT,PRVAFT12,PRVBEF12
"RTN","PXBSTOR",26,0)
 N CPTAFT,CPTAFT1,CPTBEF1,CPTAFT12,CPTBEF12
"RTN","PXBSTOR",27,0)
 N POVAFT12,POVAFT,POVI
"RTN","PXBSTOR",28,0)
 N PRVBF812,CPTBF812,POVBF812,PRVAF812,CPTAF812,POVAF812
"RTN","PXBSTOR",29,0)
 N SEQ
"RTN","PXBSTOR",30,0)
IEN ;--SET IENS OF EACH FILE
"RTN","PXBSTOR",31,0)
 S PRVIEN=$P(REQI,"^",7) I PRVIEN]"" D
"RTN","PXBSTOR",32,0)
 .S PRVBEF=$G(^AUPNVPRV($P(REQI,"^",7),0))
"RTN","PXBSTOR",33,0)
 .S PRVBEF12=$G(^AUPNVPRV($P(REQI,"^",7),12))
"RTN","PXBSTOR",34,0)
 .S PRVBF812=$G(^AUPNVPRV($P(REQI,"^",7),812))
"RTN","PXBSTOR",35,0)
 E  S (PRVBEF,PRVBEF12,PRVBF812)=""
"RTN","PXBSTOR",36,0)
 S CPTIEN=$P(REQI,"^",8)
"RTN","PXBSTOR",37,0)
 I CPTIEN]"" D
"RTN","PXBSTOR",38,0)
 .S CPTBEF=$G(^AUPNVCPT($P(REQI,"^",8),0))
"RTN","PXBSTOR",39,0)
 .;Build array for cpt modifiers
"RTN","PXBSTOR",40,0)
 .N SUBIEN
"RTN","PXBSTOR",41,0)
 .S SUBIEN=0
"RTN","PXBSTOR",42,0)
 .F  S SUBIEN=$O(^AUPNVCPT($P(REQI,"^",8),1,SUBIEN)) Q:'SUBIEN  D
"RTN","PXBSTOR",43,0)
 ..S CPTBEF1(SUBIEN)=$G(^AUPNVCPT($P(REQI,"^",8),1,SUBIEN,0))
"RTN","PXBSTOR",44,0)
 .S CPTBEF12=$G(^AUPNVCPT($P(REQI,"^",8),12))
"RTN","PXBSTOR",45,0)
 .S CPTBF812=$G(^AUPNVCPT($P(REQI,"^",8),812))
"RTN","PXBSTOR",46,0)
 E  S (CPTBEF,CPTBEF12,CPTBF812)=""
"RTN","PXBSTOR",47,0)
 S POVIEN=$P(REQI,"^",9) I POVIEN]"" D
"RTN","PXBSTOR",48,0)
 .S POVBEF=$G(^AUPNVPOV($P(REQI,"^",9),0))
"RTN","PXBSTOR",49,0)
 .S POVBEF12=$G(^AUPNVPOV($P(REQI,"^",9),12))
"RTN","PXBSTOR",50,0)
 .S POVBF812=$G(^AUPNVPOV($P(REQI,"^",9),812))
"RTN","PXBSTOR",51,0)
 E  S (POVBEF,POVBEF12,POVBF812)=""
"RTN","PXBSTOR",52,0)
 ;
"RTN","PXBSTOR",53,0)
SET ;--SET TEMP GLOBALS
"RTN","PXBSTOR",54,0)
 D MISC
"RTN","PXBSTOR",55,0)
 I '$D(^TMP("PXBSTOR",$J,"SEQ")) S SEQ=1
"RTN","PXBSTOR",56,0)
 I $D(^TMP("PXBSTOR",$J,"SEQ")) S SEQ=^TMP("PXBSTOR",$J,"SEQ")
"RTN","PXBSTOR",57,0)
 D:$P(REQI,"^",1) PRV S SEQ=SEQ+1
"RTN","PXBSTOR",58,0)
 D:$P(REQI,"^",3) CPT S SEQ=SEQ+1
"RTN","PXBSTOR",59,0)
 D:$P(REQI,"^",5) POV S SEQ=SEQ+1
"RTN","PXBSTOR",60,0)
 S ^TMP("PXBSTOR",$J,"SEQ")=SEQ+1
"RTN","PXBSTOR",61,0)
 Q
"RTN","PXBSTOR",62,0)
MISC ;--SET MISCELLANEOUS TEMP NODES
"RTN","PXBSTOR",63,0)
 ;--*** CONDITION THE SOURCE
"RTN","PXBSTOR",64,0)
 I '$G(SOURCE) S ^TMP("PXK",$J,"SOR")=$O(^PX(839.7,"B","SD/PCE-INTERFACE-PROMPTS",0))
"RTN","PXBSTOR",65,0)
 ;-------------
"RTN","PXBSTOR",66,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=PXBVST
"RTN","PXBSTOR",67,0)
 S ^TMP("PXK",$J,"VST",1,0,"AFTER")=$G(^AUPNVSIT(PXBVST,0))
"RTN","PXBSTOR",68,0)
 S ^TMP("PXK",$J,"VST",1,0,"BEFORE")=$G(^AUPNVSIT(PXBVST,0))
"RTN","PXBSTOR",69,0)
 Q
"RTN","PXBSTOR",70,0)
 ;
"RTN","PXBSTOR",71,0)
PRV ;--PROVIDER PIECE 1 AND 2
"RTN","PXBSTOR",72,0)
 S PRVAFT=PRVBEF,PRVAFT12=PRVBEF12,PRVAF812=PRVBF812
"RTN","PXBSTOR",73,0)
 I $D(DELM),$P(DELM,"^",1)=1 S (PRVAFT,PRVAFT12)="" G PRV1
"RTN","PXBSTOR",74,0)
 S $P(PRVAFT,"^",1)=$P(REQI,"^",1) ;--PROVIDER IEN
"RTN","PXBSTOR",75,0)
 S $P(PRVAFT,"^",4)=$P(REQI,"^",2) ;--PRIMARY/SECONDARY
"RTN","PXBSTOR",76,0)
 S $P(PRVAFT,"^",2)=PATIENT ;--PATIENT
"RTN","PXBSTOR",77,0)
 S $P(PRVAFT,"^",3)=PXBVST ;--VISIT POINTER
"RTN","PXBSTOR",78,0)
 I PRVBF812']"" D
"RTN","PXBSTOR",79,0)
 .;-***POPULATE VERIFIED FIELD IN FUTURE
"RTN","PXBSTOR",80,0)
 .S $P(PRVAF812,"^",2)=$G(PXBPKG)
"RTN","PXBSTOR",81,0)
 .S $P(PRVAF812,"^",3)=$G(PXBSOURC)
"RTN","PXBSTOR",82,0)
PRV1 S ^TMP("PXK",$J,"PRV",SEQ,0,"AFTER")=PRVAFT
"RTN","PXBSTOR",83,0)
 S ^TMP("PXK",$J,"PRV",SEQ,0,"BEFORE")=PRVBEF
"RTN","PXBSTOR",84,0)
 S ^TMP("PXK",$J,"PRV",SEQ,12,"AFTER")=PRVAFT12
"RTN","PXBSTOR",85,0)
 S ^TMP("PXK",$J,"PRV",SEQ,12,"BEFORE")=PRVBEF12
"RTN","PXBSTOR",86,0)
 S ^TMP("PXK",$J,"PRV",SEQ,812,"AFTER")=PRVAF812
"RTN","PXBSTOR",87,0)
 S ^TMP("PXK",$J,"PRV",SEQ,812,"BEFORE")=PRVBF812
"RTN","PXBSTOR",88,0)
 S ^TMP("PXK",$J,"PRV",SEQ,"IEN")=PRVIEN
"RTN","PXBSTOR",89,0)
 Q
"RTN","PXBSTOR",90,0)
 ;
"RTN","PXBSTOR",91,0)
CPT ;--CPT PROCDEURE PIECE 3 AND 4 AND
"RTN","PXBSTOR",92,0)
 N PXMODIEN
"RTN","PXBSTOR",93,0)
 S CPTAFT=CPTBEF,CPTAFT12=CPTBEF12,CPTAF812=CPTBF812
"RTN","PXBSTOR",94,0)
 I $D(DELM),$P(DELM,"^",2)=1 S (CPTAFT,CPTAFT12)="" G CPT1
"RTN","PXBSTOR",95,0)
 S $P(CPTAFT,"^",1)=$P(REQI,"^",3) ;--PROCEDURE IEN 
"RTN","PXBSTOR",96,0)
 S $P(CPTAFT,"^",2)=PATIENT ;--PATIENT
"RTN","PXBSTOR",97,0)
 S $P(CPTAFT,"^",3)=PXBVST ;--VISIT POINTER
"RTN","PXBSTOR",98,0)
 S $P(CPTAFT12,"^",4)=$P(REQI,"^",1) ;--PROVIDER POINTER
"RTN","PXBSTOR",99,0)
 S CPRNARR=$P($$CPT^ICPTCOD($P(REQI,"^",3),$G(IDATE)),"^",3) ;--TEXT PROV NAR
"RTN","PXBSTOR",100,0)
 S $P(CPTAFT,"^",4)=+$$PROVNARR^PXAPI($G(CPRNARR),9000010.18) ;--PROV NAR
"RTN","PXBSTOR",101,0)
 S $P(CPTAFT,"^",16)=$P(REQI,"^",4) ;--QUANTITY
"RTN","PXBSTOR",102,0)
 I $P(REQI,"^",4)=0 S (CPTAFT,CPTAFT12)=""
"RTN","PXBSTOR",103,0)
 I $P(REQI,"^",4)="@" S (CPTAFT,CPTAFT12)=""
"RTN","PXBSTOR",104,0)
 ;--------------------
"RTN","PXBSTOR",105,0)
 ;I $G(CPTIEN),$D(^AUPNVCPT(CPTIEN,12)),$P(REQI,"^",1)'=$P(^AUPNVCPT(CPTIEN,12),"^",4),'$D(DELM) S (CPTIEN,CPTBEF,CPTBEF12)=""
"RTN","PXBSTOR",106,0)
 ;---------------
"RTN","PXBSTOR",107,0)
 I CPTBF812']"" D
"RTN","PXBSTOR",108,0)
 .;-***POPULATE VERIFIED FIELD IN FUTURE
"RTN","PXBSTOR",109,0)
 .S $P(CPTAF812,"^",2)=$G(PXBPKG)
"RTN","PXBSTOR",110,0)
 .S $P(CPTAF812,"^",3)=$G(PXBSOURC)
"RTN","PXBSTOR",111,0)
 S PXMODIEN=""
"RTN","PXBSTOR",112,0)
 F  S PXMODIEN=$O(REQ(1,PXMODIEN)) Q:PXMODIEN=""  D
"RTN","PXBSTOR",113,0)
 .S CPTAFT1(PXMODIEN)=REQ(1,PXMODIEN)
"RTN","PXBSTOR",114,0)
CPT1 ;
"RTN","PXBSTOR",115,0)
 S ^TMP("PXK",$J,"CPT",SEQ,0,"AFTER")=CPTAFT
"RTN","PXBSTOR",116,0)
 S ^TMP("PXK",$J,"CPT",SEQ,0,"BEFORE")=CPTBEF
"RTN","PXBSTOR",117,0)
 S ^TMP("PXK",$J,"CPT",SEQ,12,"AFTER")=CPTAFT12
"RTN","PXBSTOR",118,0)
 S ^TMP("PXK",$J,"CPT",SEQ,12,"BEFORE")=CPTBEF12
"RTN","PXBSTOR",119,0)
 S ^TMP("PXK",$J,"CPT",SEQ,812,"AFTER")=CPTAF812
"RTN","PXBSTOR",120,0)
 S ^TMP("PXK",$J,"CPT",SEQ,812,"BEFORE")=CPTBF812
"RTN","PXBSTOR",121,0)
 S ^TMP("PXK",$J,"CPT",SEQ,"IEN")=CPTIEN
"RTN","PXBSTOR",122,0)
 ;Set modifiers into ^TMP
"RTN","PXBSTOR",123,0)
 S PXMODIEN=""
"RTN","PXBSTOR",124,0)
 F  S PXMODIEN=$O(CPTAFT1(PXMODIEN)) Q:PXMODIEN=""  D
"RTN","PXBSTOR",125,0)
 .S ^TMP("PXK",$J,"CPT",SEQ,1,PXMODIEN,"AFTER")=CPTAFT1(PXMODIEN)
"RTN","PXBSTOR",126,0)
 S PXMODIEN=""
"RTN","PXBSTOR",127,0)
 F  S PXMODIEN=$O(CPTBEF1(PXMODIEN)) Q:PXMODIEN=""  D
"RTN","PXBSTOR",128,0)
 .S ^TMP("PXK",$J,"CPT",SEQ,1,PXMODIEN,"BEFORE")=CPTBEF1(PXMODIEN)
"RTN","PXBSTOR",129,0)
 ;Set ^TMP file with V CPT IEN
"RTN","PXBSTOR",130,0)
 I $G(REQ)]"" D
"RTN","PXBSTOR",131,0)
 . S ^TMP("PXK",$J,"CPT",SEQ,"IEN")=REQ
"RTN","PXBSTOR",132,0)
 Q
"RTN","PXBSTOR",133,0)
 ;
"RTN","PXBSTOR",134,0)
POV ;--POV PIECE 5 AND 6 AND
"RTN","PXBSTOR",135,0)
 S POVAFT=POVBEF,POVAFT12=POVBEF12,POVAF812=PRVBF812
"RTN","PXBSTOR",136,0)
 I $D(DELM),$P(DELM,"^",3)=1 S (POVAFT,POVAFT12)="" G POV1
"RTN","PXBSTOR",137,0)
 S $P(POVAFT,"^",1)=$P(REQI,"^",5) ;--POV IEN 
"RTN","PXBSTOR",138,0)
 S $P(POVAFT,"^",12)=$P(REQI,"^",6) ;--PRI/SECONDARY
"RTN","PXBSTOR",139,0)
 S $P(POVAFT,"^",2)=PATIENT ;--PATIENT
"RTN","PXBSTOR",140,0)
 S $P(POVAFT,"^",3)=PXBVST ;--VISIT POINTER
"RTN","PXBSTOR",141,0)
 S PPRNARR=$$DXNARR^PXUTL1($P(REQI,"^",5),$G(IDATE)) ;--TEXT PROV NARR
"RTN","PXBSTOR",142,0)
 S $P(POVAFT,"^",4)=+$$PROVNARR^PXAPI($G(PPRNARR),9000010.07) ;--POI PROV NARR
"RTN","PXBSTOR",143,0)
 I $P($G(REQI),"^",7) S $P(POVAFT12,"^",4)=$P(^AUPNVPRV($P(REQI,"^",7),0),"^",1) ;--PROVIDER
"RTN","PXBSTOR",144,0)
 I $G(PXBRES) S $P(POVAFT,"^",16)=PXBRES ;-PROBLEM LIST ENTRY
"RTN","PXBSTOR",145,0)
 I POVBF812']"" D
"RTN","PXBSTOR",146,0)
 .;-**POPULATE VERIFIED FIELD IN FUTURE
"RTN","PXBSTOR",147,0)
 .S $P(POVAF812,"^",2)=$G(PXBPKG)
"RTN","PXBSTOR",148,0)
 .S $P(POVAF812,"^",3)=$G(PXBSOURC)
"RTN","PXBSTOR",149,0)
POV1 S ^TMP("PXK",$J,"POV",SEQ,0,"AFTER")=POVAFT
"RTN","PXBSTOR",150,0)
 S ^TMP("PXK",$J,"POV",SEQ,0,"BEFORE")=POVBEF
"RTN","PXBSTOR",151,0)
 S ^TMP("PXK",$J,"POV",SEQ,12,"AFTER")=POVAFT12
"RTN","PXBSTOR",152,0)
 S ^TMP("PXK",$J,"POV",SEQ,12,"BEFORE")=POVBEF12
"RTN","PXBSTOR",153,0)
 S ^TMP("PXK",$J,"POV",SEQ,812,"AFTER")=POVAF812
"RTN","PXBSTOR",154,0)
 S ^TMP("PXK",$J,"POV",SEQ,812,"BEFORE")=POVBF812
"RTN","PXBSTOR",155,0)
 S ^TMP("PXK",$J,"POV",SEQ,"IEN")=POVIEN
"RTN","PXBSTOR",156,0)
 Q
"RTN","PXCEPOV1")
0^11^B23657237
"RTN","PXCEPOV1",1,0)
PXCEPOV1 ;ISL/dee - Used to edit and display V POV ;6/20/96
"RTN","PXCEPOV1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**134,149**;Aug 12, 1996
"RTN","PXCEPOV1",3,0)
 ;; ;
"RTN","PXCEPOV1",4,0)
 Q
"RTN","PXCEPOV1",5,0)
 ;
"RTN","PXCEPOV1",6,0)
 ;********************************
"RTN","PXCEPOV1",7,0)
 ;Special cases for display.
"RTN","PXCEPOV1",8,0)
 ;
"RTN","PXCEPOV1",9,0)
DNARRAT(PNAR) ;Provider Narrative for ICD-9
"RTN","PXCEPOV1",10,0)
 N PXCEPNAR,SNARR
"RTN","PXCEPOV1",11,0)
 S PXCEPNAR=$P(^AUTNPOV(PNAR,0),"^")
"RTN","PXCEPOV1",12,0)
 I $G(VIEW)="B",$D(ENTRY)>0 D
"RTN","PXCEPOV1",13,0)
 . N DIC,DR,DA,DIQ,PXCEDIQ1
"RTN","PXCEPOV1",14,0)
 . ;S DIC=80
"RTN","PXCEPOV1",15,0)
 . ;S DR="3"
"RTN","PXCEPOV1",16,0)
 . S DA=$P(ENTRY(0),"^",1)
"RTN","PXCEPOV1",17,0)
 . ;S DIQ="PXCEDIQ1("
"RTN","PXCEPOV1",18,0)
 . ;S DIQ(0)="E"
"RTN","PXCEPOV1",19,0)
 . ;D EN^DIQ1
"RTN","PXCEPOV1",20,0)
 . S SNARR=$P($$ICDDX^ICDCODE(DA,$G(IDATE)),"^",4)
"RTN","PXCEPOV1",21,0)
 . ;S:$G(PXCEDIQ1(80,DA,3,"E"))=PXCEPNAR PXCEPNAR=""
"RTN","PXCEPOV1",22,0)
 . S:SNARR=PXCEPNAR PXCEPNAR=""
"RTN","PXCEPOV1",23,0)
 Q PXCEPNAR
"RTN","PXCEPOV1",24,0)
 ;
"RTN","PXCEPOV1",25,0)
DPRIMSEC(PRIMSEC) ;
"RTN","PXCEPOV1",26,0)
 I $G(VIEW)="B" Q $S(PRIMSEC="P":"PRIMARY",1:"")
"RTN","PXCEPOV1",27,0)
 Q $S(PRIMSEC="P":"PRIMARY",PRIMSEC="S":"SECONDARY",1:"")
"RTN","PXCEPOV1",28,0)
 ;
"RTN","PXCEPOV1",29,0)
 ;********************************
"RTN","PXCEPOV1",30,0)
 ;Special cases for edit.
"RTN","PXCEPOV1",31,0)
 ;
"RTN","PXCEPOV1",32,0)
ENARRAT(REQUIRED,ASK,DEFAULT,FILE,FIELD1,FIELD2) ;Provider Narrative  --  Used by ALL V-Files with Prov. Nar.
"RTN","PXCEPOV1",33,0)
 ; REQUIRED  0 for not required
"RTN","PXCEPOV1",34,0)
 ;           1 for required
"RTN","PXCEPOV1",35,0)
 ; ASK       0 for do not ask
"RTN","PXCEPOV1",36,0)
 ;           1 for ask
"RTN","PXCEPOV1",37,0)
 ;           2 for ask only if there is already a value
"RTN","PXCEPOV1",38,0)
 ; DEFAULT   0 for do not default
"RTN","PXCEPOV1",39,0)
 ;           1 for do default
"RTN","PXCEPOV1",40,0)
 ;           changed to 1 if REQUIRED is 1
"RTN","PXCEPOV1",41,0)
 ;
"RTN","PXCEPOV1",42,0)
 N PXKLAYGO,ASKING
"RTN","PXCEPOV1",43,0)
 S PXKLAYGO=""
"RTN","PXCEPOV1",44,0)
 S ASKING=ASK#2
"RTN","PXCEPOV1",45,0)
 S:REQUIRED DEFAULT=1
"RTN","PXCEPOV1",46,0)
 I PXCEKEYS["C" S ASKING=1
"RTN","PXCEPOV1",47,0)
ENARRAT1 ;
"RTN","PXCEPOV1",48,0)
 K DIR,DA,X,Y,C
"RTN","PXCEPOV1",49,0)
 S (X,Y)=""
"RTN","PXCEPOV1",50,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" D
"RTN","PXCEPOV1",51,0)
 . N DIERR,PXCEDILF,PXCEEXT,PXCEINT
"RTN","PXCEPOV1",52,0)
 . S PXCEINT=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEPOV1",53,0)
 . S PXCEEXT=$$EXTERNAL^DILFD(PXCEFILE,$P(PXCETEXT,"~",3),"",PXCEINT,"PXCEDILF")
"RTN","PXCEPOV1",54,0)
 . S (DIR("B"),X,Y)=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCEPOV1",55,0)
 S DIR(0)="FAO^1:245"
"RTN","PXCEPOV1",56,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEPOV1",57,0)
 I $P(PXCETEXT,"~",8)]"" S DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEPOV1",58,0)
 E  D
"RTN","PXCEPOV1",59,0)
 . S DIR("?",1)="This response must have at least 2 characters and no more than 245"
"RTN","PXCEPOV1",60,0)
 . S DIR("?",2)="characters and must not contain embedded uparrow."
"RTN","PXCEPOV1",61,0)
 . I REQUIRED S DIR("?")="This field is required."
"RTN","PXCEPOV1",62,0)
 . E  S DIR("?")="This field is optional."
"RTN","PXCEPOV1",63,0)
 I ASK=2,(Y]"") S ASKING=1
"RTN","PXCEPOV1",64,0)
 I ASKING D ^DIR
"RTN","PXCEPOV1",65,0)
 K DIR,DA
"RTN","PXCEPOV1",66,0)
 I X="@" S Y="@"
"RTN","PXCEPOV1",67,0)
 E  I $D(DTOUT)!$D(DUOUT) S PXCEEND=1 S:REQUIRED PXCEQUIT=1 Q
"RTN","PXCEPOV1",68,0)
 N PXCEX,PXCEY
"RTN","PXCEPOV1",69,0)
 I $E(Y,1)="=" S PXCEX=$E(PXCEIN01_" "_$E($P(Y,"^"),2,245),1,245)
"RTN","PXCEPOV1",70,0)
 E  S PXCEX=Y
"RTN","PXCEPOV1",71,0)
 I DEFAULT,PXCEX="" S PXCEX=$$EXTTEXT^PXUTL1($P(PXCEAFTR(0),"^",1),REQUIRED,$G(FILE),$G(FIELD1),$G(FIELD2))
"RTN","PXCEPOV1",72,0)
 I ASKING D
"RTN","PXCEPOV1",73,0)
 . W !,PXCEX
"RTN","PXCEPOV1",74,0)
 I $L(PXCEX)=1,PXCEX'="@" W !,"Must be 2 to 245 characters." G ENARRAT1
"RTN","PXCEPOV1",75,0)
 I PXCEX="@"!(PXCEX=""),REQUIRED W !,"This field is required.",$C(7) G ENARRAT1
"RTN","PXCEPOV1",76,0)
 ;
"RTN","PXCEPOV1",77,0)
 I PXCEX="@"!(PXCEX="") S PXCEY=PXCEX
"RTN","PXCEPOV1",78,0)
 E  S PXCEY=$$PROVNARR^PXAPI(PXCEX,PXCEFILE) I ASKING,+PXCEY'>0 W "??",$C(7) G ENARRAT1
"RTN","PXCEPOV1",79,0)
 E  I +PXCEY'>0 S PXCEY=""
"RTN","PXCEPOV1",80,0)
 S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(PXCEY,"^")
"RTN","PXCEPOV1",81,0)
 Q
"RTN","PXCEPOV1",82,0)
 ;
"RTN","PXCEPOV1",83,0)
EINJURY ;Date/Time of Injury
"RTN","PXCEPOV1",84,0)
 ;I not an injury code Q
"RTN","PXCEPOV1",85,0)
 N DIC,DR,DA,DIQ,PXCEDIQ1
"RTN","PXCEPOV1",86,0)
 S DIC=80
"RTN","PXCEPOV1",87,0)
 S DR=".01"
"RTN","PXCEPOV1",88,0)
 S DA=$P(PXCEAFTR(0),"^",1)
"RTN","PXCEPOV1",89,0)
 S DIQ="PXCEDIQ1("
"RTN","PXCEPOV1",90,0)
 S DIQ(0)="E"
"RTN","PXCEPOV1",91,0)
 D EN^DIQ1
"RTN","PXCEPOV1",92,0)
 I PXCEDIQ1(80,DA,.01,"E")'<800,PXCEDIQ1(80,DA,.01,"E")'>999.999 D E1201^PXCEPOV1(-1,-1,0)
"RTN","PXCEPOV1",93,0)
 Q
"RTN","PXCEPOV1",94,0)
 ;
"RTN","PXCEPOV1",95,0)
 ;********************************
"RTN","PXCEPOV1",96,0)
 ;Special cases for edit for Event Date and Time field number 1201
"RTN","PXCEPOV1",97,0)
 ; and other date and times.
"RTN","PXCEPOV1",98,0)
 ;
"RTN","PXCEPOV1",99,0)
E1201(REQTIME,BEFORE,AFTER,DEFAULT) ;
"RTN","PXCEPOV1",100,0)
 ;REQTIME is 1 if time is required,
"RTN","PXCEPOV1",101,0)
 ;           0 if time is optional
"RTN","PXCEPOV1",102,0)
 ;          -1 if the date can be imprecise
"RTN","PXCEPOV1",103,0)
 ;BEFORE  is the number of days before the visit that the date can
"RTN","PXCEPOV1",104,0)
 ;        not be before or -1 for any amount before.
"RTN","PXCEPOV1",105,0)
 ;AFTER   is the number of days after the visit that the date can
"RTN","PXCEPOV1",106,0)
 ;        not be after or -1 for any amount.  In any case the date
"RTN","PXCEPOV1",107,0)
 ;        can not be later than today.
"RTN","PXCEPOV1",108,0)
 ;DEFAULT is the default date/time is there is not one in the file.
"RTN","PXCEPOV1",109,0)
 ;        If it is -1 then NOW will be used as the default.
"RTN","PXCEPOV1",110,0)
 ;        If it is 0 then TODAY will be used as the default.
"RTN","PXCEPOV1",111,0)
 N X1,X2,X,%Y,%H,%I,%
"RTN","PXCEPOV1",112,0)
 N PXCEVST S PXCEVST=$P(+^TMP("PXK",$J,"VST",1,0,"BEFORE"),".")
"RTN","PXCEPOV1",113,0)
 N PXCEBEF,PXCEAFT S (PXCEBEF,PXCEAFT)=""
"RTN","PXCEPOV1",114,0)
 I $D(AFTER)#2,AFTER'<0 D
"RTN","PXCEPOV1",115,0)
 . I AFTER=0 S PXCEAFT=PXCEVST+.9
"RTN","PXCEPOV1",116,0)
 . E  D
"RTN","PXCEPOV1",117,0)
 .. S X1=DT
"RTN","PXCEPOV1",118,0)
 .. S X2=$P(+^TMP("PXK",$J,"VST",1,0,"BEFORE"),".")
"RTN","PXCEPOV1",119,0)
 .. D ^%DTC
"RTN","PXCEPOV1",120,0)
 .. I X'>AFTER S PXCEAFT=DT+.9
"RTN","PXCEPOV1",121,0)
 .. E  D
"RTN","PXCEPOV1",122,0)
 ... S X1=$P(+^TMP("PXK",$J,"VST",1,0,"BEFORE"),".")
"RTN","PXCEPOV1",123,0)
 ... S X2=AFTER
"RTN","PXCEPOV1",124,0)
 ... D C^%DTC
"RTN","PXCEPOV1",125,0)
 ... S PXCEAFT=X+.9
"RTN","PXCEPOV1",126,0)
 I $D(BEFORE)#2,BEFORE'<0 D
"RTN","PXCEPOV1",127,0)
 . I BEFORE=0 S PXCEBEF=PXCEVST
"RTN","PXCEPOV1",128,0)
 . E  D
"RTN","PXCEPOV1",129,0)
 .. S X1=$P(+^TMP("PXK",$J,"VST",1,0,"BEFORE"),".")
"RTN","PXCEPOV1",130,0)
 .. S X2=-BEFORE
"RTN","PXCEPOV1",131,0)
 .. D C^%DTC
"RTN","PXCEPOV1",132,0)
 .. S PXCEBEF=X
"RTN","PXCEPOV1",133,0)
 S DIR(0)="DO^"_PXCEBEF_":"_PXCEAFT_":ESP"
"RTN","PXCEPOV1",134,0)
 I $G(REQTIME)=1 S DIR(0)=DIR(0)_"RX"
"RTN","PXCEPOV1",135,0)
 E  I $G(REQTIME)=-1 S DIR(0)=DIR(0)_"T"
"RTN","PXCEPOV1",136,0)
 E  S DIR(0)=DIR(0)_"TX"
"RTN","PXCEPOV1",137,0)
 I $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))'="" S DIR("B")=$P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))
"RTN","PXCEPOV1",138,0)
 E  I ($D(DEFAULT)#2) D
"RTN","PXCEPOV1",139,0)
 . I DEFAULT>0 S DIR("B")=DEFAULT
"RTN","PXCEPOV1",140,0)
 . E  I DEFAULT=0 S DIR("B")=DT
"RTN","PXCEPOV1",141,0)
 . E  I DEFAULT=-1 D NOW^%DTC S DIR("B")=%
"RTN","PXCEPOV1",142,0)
 I $D(DIR("B"))#2 S Y=DIR("B") D DD^%DT S DIR("B")=Y
"RTN","PXCEPOV1",143,0)
 S DIR("A")=$P(PXCETEXT,"~",4)
"RTN","PXCEPOV1",144,0)
 S:$P(PXCETEXT,"~",8)]"" DIR("?")=$P(PXCETEXT,"~",8)
"RTN","PXCEPOV1",145,0)
 D ^DIR
"RTN","PXCEPOV1",146,0)
 K DIR,DA
"RTN","PXCEPOV1",147,0)
 I X="@" S Y="@"
"RTN","PXCEPOV1",148,0)
 E  I $D(DTOUT)!$D(DUOUT) S PXCEEND=1 Q
"RTN","PXCEPOV1",149,0)
 S $P(PXCEAFTR($P(PXCETEXT,"~",1)),"^",$P(PXCETEXT,"~",2))=$P(Y,"^")
"RTN","PXCEPOV1",150,0)
 Q
"RTN","PXCEPOV1",151,0)
 ;
"RTN","PXUTL1")
0^6^B10780309
"RTN","PXUTL1",1,0)
PXUTL1 ;ISL/dee - Utility routines used by PCE ;4/3/97
"RTN","PXUTL1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**25,134,149**;Aug 12, 1996
"RTN","PXUTL1",3,0)
 ;; ;
"RTN","PXUTL1",4,0)
 Q
"RTN","PXUTL1",5,0)
 ;
"RTN","PXUTL1",6,0)
EXTTEXT(IEN,REQUIRED,FILE,FIELD1,FIELD2) ;Returns the external form.
"RTN","PXUTL1",7,0)
 ;Parameters:
"RTN","PXUTL1",8,0)
 ;  IEN       the ien in the file that the text is wanted for.
"RTN","PXUTL1",9,0)
 ;  REQUIRED  if this is not zero and no text is found
"RTN","PXUTL1",10,0)
 ;              then "UNKNOWN" is returned.
"RTN","PXUTL1",11,0)
 ;  FILE      the file number
"RTN","PXUTL1",12,0)
 ;  FIELD1    the field number that the text is in
"RTN","PXUTL1",13,0)
 ;  FIELD2    if the parameter is passed and there is no text
"RTN","PXUTL1",14,0)
 ;              in field1 then the text in this field will be
"RTN","PXUTL1",15,0)
 ;              returned if there is some.
"RTN","PXUTL1",16,0)
 ;
"RTN","PXUTL1",17,0)
 N DIC,DR,DA,DIQ,PXUTDIQ1,PXTEXT,Y,X
"RTN","PXUTL1",18,0)
 I $G(FILE)>0,$G(FIELD1)>0 D
"RTN","PXUTL1",19,0)
 . S DIC=FILE
"RTN","PXUTL1",20,0)
 . S DR=FIELD1
"RTN","PXUTL1",21,0)
 . S:$G(FIELD2)>0 DR=DR_";"_FIELD2
"RTN","PXUTL1",22,0)
 . S DA=IEN
"RTN","PXUTL1",23,0)
 . S DIQ="PXUTDIQ1("
"RTN","PXUTL1",24,0)
 . S DIQ(0)="E"
"RTN","PXUTL1",25,0)
 . D EN^DIQ1
"RTN","PXUTL1",26,0)
 . I $G(PXUTDIQ1(FILE,DA,FIELD1,"E"))]"" S PXTEXT=PXUTDIQ1(FILE,DA,FIELD1,"E")
"RTN","PXUTL1",27,0)
 . E  I $G(FIELD2)>0,$G(PXUTDIQ1(FILE,DA,FIELD2,"E"))]"" S PXTEXT=PXUTDIQ1(FILE,DA,FIELD2,"E")
"RTN","PXUTL1",28,0)
 . E  I REQUIRED S PXTEXT="UNKNOWN"
"RTN","PXUTL1",29,0)
 E  I REQUIRED S PXTEXT="UNKNOWN"
"RTN","PXUTL1",30,0)
 Q PXTEXT
"RTN","PXUTL1",31,0)
 ;
"RTN","PXUTL1",32,0)
PRIMVPRV(PXUTVST) ;Returns the primary provider if there is one
"RTN","PXUTL1",33,0)
 ;                 for the passed visit otherwise returns 0.
"RTN","PXUTL1",34,0)
 N PXCATEMP
"RTN","PXUTL1",35,0)
 S PXCATEMP=$$PRIMSEC(PXUTVST,"^AUPNVPRV",0,4)
"RTN","PXUTL1",36,0)
 Q $S(PXCATEMP>0:$P(^AUPNVPRV(PXCATEMP,0),"^"),1:0)
"RTN","PXUTL1",37,0)
 ;
"RTN","PXUTL1",38,0)
PRIMVPOV(PXUTVST) ;Returns the primary diagnosis if there is one
"RTN","PXUTL1",39,0)
 ;         for the passed visit otherwise returns 0.
"RTN","PXUTL1",40,0)
 N PXCATEMP
"RTN","PXUTL1",41,0)
 S PXCATEMP=$$PRIMSEC(PXUTVST,"^AUPNVPOV",0,12)
"RTN","PXUTL1",42,0)
 Q $S(PXCATEMP>0:$P(^AUPNVPOV(PXCATEMP,0),"^"),1:0)
"RTN","PXUTL1",43,0)
 ;
"RTN","PXUTL1",44,0)
PRIMSEC(PXUTVST,PXUTAUPN,PXUTNODE,PXUPIECE) ;Returns ien of the primary one
"RTN","PXUTL1",45,0)
 ;         if there is one for the passed visit otherwise returns 0.
"RTN","PXUTL1",46,0)
 ; Parameters:
"RTN","PXUTL1",47,0)
 ;   PXUTVST   Pointer to the visit
"RTN","PXUTL1",48,0)
 ;   PXUTAUPN  V-File global e.g. "^AUPNVPRV"
"RTN","PXUTL1",49,0)
 ;   PXUTNODE  The node that the Primary/Secondary field is on
"RTN","PXUTL1",50,0)
 ;   PXUPIECE  The piece of the Primary/Secondary field
"RTN","PXUTL1",51,0)
 ;
"RTN","PXUTL1",52,0)
 N PXUTPRIM
"RTN","PXUTL1",53,0)
 S PXUTPRIM=0
"RTN","PXUTL1",54,0)
 F  S PXUTPRIM=$O(@(PXUTAUPN_"(""AD"",PXUTVST,PXUTPRIM)")) Q:PXUTPRIM'>0  I "P"=$P(@(PXUTAUPN_"(PXUTPRIM,PXUTNODE)"),"^",PXUPIECE) Q
"RTN","PXUTL1",55,0)
 Q +PXUTPRIM
"RTN","PXUTL1",56,0)
 ;
"RTN","PXUTL1",57,0)
DISPOSIT(PXUTLDFN,PXUTLDT,PXUTVIEN) ;Checks to see if a visit is a dispoition
"RTN","PXUTL1",58,0)
 I PXUTVIEN=+$P($G(^SCE(+$P($G(^DPT(+PXUTLDFN,"DIS",9999999-PXUTLDT,0)),"^",18),0)),"^",5) Q +$P($G(^DPT(+PXUTLDFN,"DIS",9999999-PXUTLDT,0)),"^",18)
"RTN","PXUTL1",59,0)
 Q 0
"RTN","PXUTL1",60,0)
 ;
"RTN","PXUTL1",61,0)
APPOINT(PXUTLDFN,PXUTLDT,HLOC) ;Returns 1 if the patient has and appointment
"RTN","PXUTL1",62,0)
 ;at PXUTLDT for clinic HLOC.
"RTN","PXUTL1",63,0)
 Q HLOC=+$G(^DPT(+PXUTLDFN,"S",+PXUTLDT,0))
"RTN","PXUTL1",64,0)
 ;
"RTN","PXUTL1",65,0)
VST2APPT(VISIT) ;Is this visit related to an appointment
"RTN","PXUTL1",66,0)
 ;Returns
"RTN","PXUTL1",67,0)
 ; 1 if the visit is being pointed to by an appointment
"RTN","PXUTL1",68,0)
 ; 0 if the visit is NOT being pointed to by an appointment
"RTN","PXUTL1",69,0)
 ;-1 if the visit is invalued
"RTN","PXUTL1",70,0)
 ;
"RTN","PXUTL1",71,0)
 N VISIT0
"RTN","PXUTL1",72,0)
 S VISIT0=$G(^AUPNVSIT($G(VISIT),0))
"RTN","PXUTL1",73,0)
 Q:VISIT0="" -1
"RTN","PXUTL1",74,0)
 Q $$VSTAPPT($P(VISIT0,"^",5),$P(VISIT0,"^",1),$P(VISIT0,"^",22),VISIT)
"RTN","PXUTL1",75,0)
 ;
"RTN","PXUTL1",76,0)
VSTAPPT(PXUTLPAT,PXUTLDT,PXUTLLOC,PXUTLVST) ;Returns 1 if the visit is being pointed to by an
"RTN","PXUTL1",77,0)
 ;                appointment otherwise 0.
"RTN","PXUTL1",78,0)
 I PXUTLLOC]"",PXUTLLOC=+$G(^DPT(+PXUTLPAT,"S",+PXUTLDT,0)),PXUTLVST=+$P($G(^SCE(+$P($G(^DPT(PXUTLPAT,"S",PXUTLDT,0)),"^",20),0)),"^",5) Q 1
"RTN","PXUTL1",79,0)
 Q 0
"RTN","PXUTL1",80,0)
 ;
"RTN","PXUTL1",81,0)
APPT2VST(PXUTLPAT,PXUTLDT,HLOC) ;Returns ien of visit that the related
"RTN","PXUTL1",82,0)
 ;appointment points to at PXUTLDT for clinic HLOC otherwise 0.
"RTN","PXUTL1",83,0)
 I HLOC=+$G(^DPT(+PXUTLPAT,"S",+PXUTLDT,0)) Q +$P($G(^SCE(+$P($G(^DPT(PXUTLPAT,"S",PXUTLDT,0)),"^",20),0)),"^",5)
"RTN","PXUTL1",84,0)
 Q 0
"RTN","PXUTL1",85,0)
 ;
"RTN","PXUTL1",86,0)
DXNARR(PXDXCDE,PXUTLDT) ;Returns the versioned text of file #80, field #10
"RTN","PXUTL1",87,0)
 N PXLDX,PXNO,PXCOD
"RTN","PXUTL1",88,0)
 I $G(PXDXCDE)="" Q ""
"RTN","PXUTL1",89,0)
 S PXCOD=$P($$ICDDX^ICDCODE(PXDXCDE),"^",2) S:$G(PXUTLDT)="" PXUTLDT=DT
"RTN","PXUTL1",90,0)
 S PXNO=$$ICDD^ICDCODE(PXCOD,"PXLDX",PXUTLDT)
"RTN","PXUTL1",91,0)
 Q $S(PXNO>0:PXLDX(1),1:"")
"RTN","PXUTL1",92,0)
 ;
"VER")
8.0^22.0
"^DD",9000010.18,9000010.18,.01,0)
CPT^R*P81'X^ICPT(^0;1^S DIC("S")="I $P($$CPT^ICPTCOD(+Y),""^"",7)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",9000010.18,9000010.18,.01,1,0)
^.1^^-1
"^DD",9000010.18,9000010.18,.01,1,1,0)
9000010.18^B
"^DD",9000010.18,9000010.18,.01,1,1,1)
S ^AUPNVCPT("B",$E(X,1,30),DA)=""
"^DD",9000010.18,9000010.18,.01,1,1,2)
K ^AUPNVCPT("B",$E(X,1,30),DA)
"^DD",9000010.18,9000010.18,.01,1,3,0)
9000010.18^AATOO^MUMPS
"^DD",9000010.18,9000010.18,.01,1,3,1)
I $P(^AUPNVCPT(DA,0),U,2)]"",$P(^(0),U,3)]"" S ^AUPNVCPT("AA",$P(^AUPNVCPT(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVCPT(DA,0),U,3),0),".",1)),DA)=""
"^DD",9000010.18,9000010.18,.01,1,3,2)
I $P(^AUPNVCPT(DA,0),U,2)]"",$P(^(0),U,3)]"" K ^AUPNVCPT("AA",$P(^AUPNVCPT(DA,0),U,2),X,(9999999-$P(+^AUPNVSIT($P(^AUPNVCPT(DA,0),U,3),0),".",1)),DA)
"^DD",9000010.18,9000010.18,.01,1,3,"%D",0)
^^4^4^2950901^
"^DD",9000010.18,9000010.18,.01,1,3,"%D",1,0)
This cross reference is used for searches in sequence by Patient, CPT
"^DD",9000010.18,9000010.18,.01,1,3,"%D",2,0)
internal entry number, inverted visit date, and internal entry number.
"^DD",9000010.18,9000010.18,.01,1,3,"%D",3,0)
 
"^DD",9000010.18,9000010.18,.01,1,3,"%D",4,0)
 "AA",PATIENT,CPT,VISIT,DA
"^DD",9000010.18,9000010.18,.01,3)
Enter a CPT code or the name of the procedure done to the patient.
"^DD",9000010.18,9000010.18,.01,12)
Only active CPTs
"^DD",9000010.18,9000010.18,.01,12.1)
S DIC("S")="I $P($$CPT^ICPTCOD(+Y),""^"",7)"
"^DD",9000010.18,9000010.18,.01,21,0)
^.001^8^8^3030402^^^
"^DD",9000010.18,9000010.18,.01,21,1,0)
This is the entry in the CPT file that most closely represents the
"^DD",9000010.18,9000010.18,.01,21,2,0)
clinical procedure done to the patient during the encounter.  The
"^DD",9000010.18,9000010.18,.01,21,3,0)
preferred text for the procedure performed may be specified in the
"^DD",9000010.18,9000010.18,.01,21,4,0)
Provider Narrative field.  
"^DD",9000010.18,9000010.18,.01,21,5,0)
  
"^DD",9000010.18,9000010.18,.01,21,6,0)
This field is used for Administrative and Clinical purposes.  If a
"^DD",9000010.18,9000010.18,.01,21,7,0)
procedure performed is to be billable, the CPT code must be specified
"^DD",9000010.18,9000010.18,.01,21,8,0)
here.
"^DD",9000010.18,9000010.18,.01,"AUDIT")
n
"^DD",9000010.18,9000010.18,.01,"DT")
3040527
**INSTALL NAME**
SD*5.3*351
"BLD",4104,0)
SD*5.3*351^SCHEDULING^0^3040812^y
"BLD",4104,4,0)
^9.64PA^^
"BLD",4104,"KRN",0)
^9.67PA^8989.52^19
"BLD",4104,"KRN",.4,0)
.4
"BLD",4104,"KRN",.401,0)
.401
"BLD",4104,"KRN",.402,0)
.402
"BLD",4104,"KRN",.403,0)
.403
"BLD",4104,"KRN",.5,0)
.5
"BLD",4104,"KRN",.84,0)
.84
"BLD",4104,"KRN",3.6,0)
3.6
"BLD",4104,"KRN",3.8,0)
3.8
"BLD",4104,"KRN",9.2,0)
9.2
"BLD",4104,"KRN",9.8,0)
9.8
"BLD",4104,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",4104,"KRN",9.8,"NM",1,0)
SCRPW24^^0^B79231987
"BLD",4104,"KRN",9.8,"NM",2,0)
SCRPW241^^0^B12887246
"BLD",4104,"KRN",9.8,"NM",3,0)
SCRPW46^^0^B82053568
"BLD",4104,"KRN",9.8,"NM",4,0)
SCRPW45^^0^B54097496
"BLD",4104,"KRN",9.8,"NM",5,0)
SDCO0^^0^B28062389
"BLD",4104,"KRN",9.8,"NM",6,0)
SDCO41^^0^B2735484
"BLD",4104,"KRN",9.8,"NM","B","SCRPW24",1)

"BLD",4104,"KRN",9.8,"NM","B","SCRPW241",2)

"BLD",4104,"KRN",9.8,"NM","B","SCRPW45",4)

"BLD",4104,"KRN",9.8,"NM","B","SCRPW46",3)

"BLD",4104,"KRN",9.8,"NM","B","SDCO0",5)

"BLD",4104,"KRN",9.8,"NM","B","SDCO41",6)

"BLD",4104,"KRN",19,0)
19
"BLD",4104,"KRN",19.1,0)
19.1
"BLD",4104,"KRN",101,0)
101
"BLD",4104,"KRN",409.61,0)
409.61
"BLD",4104,"KRN",771,0)
771
"BLD",4104,"KRN",870,0)
870
"BLD",4104,"KRN",8989.51,0)
8989.51
"BLD",4104,"KRN",8989.52,0)
8989.52
"BLD",4104,"KRN",8994,0)
8994
"BLD",4104,"KRN","B",.4,.4)

"BLD",4104,"KRN","B",.401,.401)

"BLD",4104,"KRN","B",.402,.402)

"BLD",4104,"KRN","B",.403,.403)

"BLD",4104,"KRN","B",.5,.5)

"BLD",4104,"KRN","B",.84,.84)

"BLD",4104,"KRN","B",3.6,3.6)

"BLD",4104,"KRN","B",3.8,3.8)

"BLD",4104,"KRN","B",9.2,9.2)

"BLD",4104,"KRN","B",9.8,9.8)

"BLD",4104,"KRN","B",19,19)

"BLD",4104,"KRN","B",19.1,19.1)

"BLD",4104,"KRN","B",101,101)

"BLD",4104,"KRN","B",409.61,409.61)

"BLD",4104,"KRN","B",771,771)

"BLD",4104,"KRN","B",870,870)

"BLD",4104,"KRN","B",8989.51,8989.51)

"BLD",4104,"KRN","B",8989.52,8989.52)

"BLD",4104,"KRN","B",8994,8994)

"BLD",4104,"QUES",0)
^9.62^^
"BLD",4104,"REQB",0)
^9.611^4^4
"BLD",4104,"REQB",1,0)
SD*5.3*324^2
"BLD",4104,"REQB",2,0)
SD*5.3*329^2
"BLD",4104,"REQB",3,0)
ICD*18.0*12^2
"BLD",4104,"REQB",4,0)
ICPT*6.0*19^2
"BLD",4104,"REQB","B","ICD*18.0*12",3)

"BLD",4104,"REQB","B","ICPT*6.0*19",4)

"BLD",4104,"REQB","B","SD*5.3*324",1)

"BLD",4104,"REQB","B","SD*5.3*329",2)

"MBREQ")
1
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813^2930824
"PKG",16,22,1,"PAH",1,0)
351^3040812^100996
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","SCRPW24")
0^1^B79231987
"RTN","SCRPW24",1,0)
SCRPW24 ;RENO/KEITH - ACRP Ad Hoc Report (cont.) ;06/19/99
"RTN","SCRPW24",2,0)
 ;;5.3;Scheduling;**144,163,180,254,243,295,329,351**;AUG 13, 1993
"RTN","SCRPW24",3,0)
 ;06/19/99 ACS - Added CPT modifier API calls
"RTN","SCRPW24",4,0)
 ;
"RTN","SCRPW24",5,0)
 ;11/26/03 RLC - 329 fixes primary/secondary dx problem with report
"RTN","SCRPW24",6,0)
 ;
"RTN","SCRPW24",7,0)
APAC(SDX) ;Get all procedure codes
"RTN","SCRPW24",8,0)
 ;K SDX N SDY,SDI D GETCPT^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U),SDX=SDX_U_$P($G(^ICPT(+SDX,0)),U)_U_$P(SDY(SDI),U,16) I $L($P(SDX,U,2)) D APOTR S SDX(SDI)=SDX
"RTN","SCRPW24",9,0)
 D APAC^SCRPW241(.SDX)
"RTN","SCRPW24",10,0)
 D NX Q
"RTN","SCRPW24",11,0)
 ;
"RTN","SCRPW24",12,0)
APOTR ;Transform procedure external value
"RTN","SCRPW24",13,0)
 ;S $P(SDX,U,2)=$P(SDX,U,2)_" "_$P(^ICPT(+SDX,0),U,2) Q
"RTN","SCRPW24",14,0)
 D APOTR^SCRPW241(.SDX)
"RTN","SCRPW24",15,0)
 Q
"RTN","SCRPW24",16,0)
 ;
"RTN","SCRPW24",17,0)
APAP(SDX) ;Get ambulatory procedures (no E&M codes)
"RTN","SCRPW24",18,0)
 ;K SDX N SDY,SDI D GETCPT^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I '$D(^IBE(357.69,"B",SDX)) S SDX=SDX_U_$P($G(^ICPT(+SDX,0)),U) I $L($P(SDX,U,2)) D APOTR S SDX(SDI)=SDX
"RTN","SCRPW24",19,0)
 D APAP^SCRPW241(.SDX)
"RTN","SCRPW24",20,0)
 D NX Q
"RTN","SCRPW24",21,0)
 ;
"RTN","SCRPW24",22,0)
APEM(SDX) ;Get evaluation and management codes
"RTN","SCRPW24",23,0)
 ;K SDX N SDY,SDI D GETCPT^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I $D(^IBE(357.69,"B",SDX)) S SDX=SDX_U_$P($G(^ICPT(+SDX,0)),U) I $L($P(SDX,U,2)) D APOTR S SDX(SDI)=SDX
"RTN","SCRPW24",24,0)
 D APEM^SCRPW241(.SDX)
"RTN","SCRPW24",25,0)
 D NX Q
"RTN","SCRPW24",26,0)
 ;
"RTN","SCRPW24",27,0)
CLCG(SDX) ;Get clinic group
"RTN","SCRPW24",28,0)
 K SDX S SDX=$P(SDOE0,U,4) I SDX S SDX=$P($G(^SC(SDX,0)),U,31) I SDX,$D(^SD(409.67,SDX)) S SDX=SDX_U_$P(^SD(409.67,SDX,0),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",29,0)
 D NX Q
"RTN","SCRPW24",30,0)
 ;
"RTN","SCRPW24",31,0)
CLCN(SDX) ;Get clinic name
"RTN","SCRPW24",32,0)
 K SDX S SDX=$P(SDOE0,U,4) I SDX S SDX=SDX_U_$P($G(^SC(SDX,0)),U) I $L($P(SDX,U,2)) S SDX(1)=SDX
"RTN","SCRPW24",33,0)
 D NX Q
"RTN","SCRPW24",34,0)
 ;
"RTN","SCRPW24",35,0)
CLCS(SDX) ;Get clinic service
"RTN","SCRPW24",36,0)
 K SDX S SDX=$P(SDOE0,U,4) I SDX S SDX=$P($G(^SC(SDX,0)),U,8) D FST(.SDX,44,9) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",37,0)
 D NX Q
"RTN","SCRPW24",38,0)
 ;
"RTN","SCRPW24",39,0)
DXAD(SDX) ;Get all diagnoses
"RTN","SCRPW24",40,0)
 K SDX N SDY,SDI D GETDX^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I SDX S SDX=SDX_U_$P($$ICDDX^ICDCODE(+SDX,+SDOE0),U,2) I $L($P(SDX,U,2)) D DXOTR S SDX(SDI)=SDX
"RTN","SCRPW24",41,0)
 D NX Q
"RTN","SCRPW24",42,0)
 ;
"RTN","SCRPW24",43,0)
DXOTR ;Transform diagnosis external value
"RTN","SCRPW24",44,0)
 N ENCDT
"RTN","SCRPW24",45,0)
 S ENCDT=+$G(SDOE0)
"RTN","SCRPW24",46,0)
 I 'ENCDT D
"RTN","SCRPW24",47,0)
 .I '$G(SDOE) S ENCDT=$$NOW^XLFDT() Q
"RTN","SCRPW24",48,0)
 .N SDY
"RTN","SCRPW24",49,0)
 .D GETGEN^SDOE(SDOE,"SDY")
"RTN","SCRPW24",50,0)
 .S ENCDT=+$G(SDY(0))
"RTN","SCRPW24",51,0)
 .K SDY
"RTN","SCRPW24",52,0)
 S SDX=SDX_" "_$P($$ICDDX^ICDCODE(+SDX,ENCDT),U,4) Q
"RTN","SCRPW24",53,0)
 ;
"RTN","SCRPW24",54,0)
DXGS(SDX,SDZ) ;Get GAF score
"RTN","SCRPW24",55,0)
 K SDX N SDI,SDY S SDY=$S(SDZ="H":$P($P(SDOE0,U),"."),1:DT)_.9999,SDY=9999999-SDY,SDY=$O(^YSD(627.8,"AX5",$P(SDOE0,U,2),SDY))
"RTN","SCRPW24",56,0)
 I SDY S SDI=$O(^YSD(627.8,"AX5",$P(SDOE0,U,2),SDY,""),-1) I SDI S SDX=+$P($G(^YSD(627.8,SDI,60)),U,3) I SDX S SDX(1)=SDX_U_SDX
"RTN","SCRPW24",57,0)
 D NX Q
"RTN","SCRPW24",58,0)
 ;
"RTN","SCRPW24",59,0)
DXGSQ(SDI) ;Set up GAF help text
"RTN","SCRPW24",60,0)
 S SDIRQ("?",1)="Specify a value representing the Global Assessment of Functioning (GAF) score."
"RTN","SCRPW24",61,0)
 I SDI="H" S SDIRQ("?")="Status as of the encounter date/time is used to determine 'historical' values."
"RTN","SCRPW24",62,0)
 I SDI="C" S SDIRQ("?")="Status as of the report run date is used to determine 'current' values."
"RTN","SCRPW24",63,0)
 Q
"RTN","SCRPW24",64,0)
 ;
"RTN","SCRPW24",65,0)
DXPD(SDX) ;Get primary diagnosis
"RTN","SCRPW24",66,0)
 ;K SDX N SDY,SDI D GETDX^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I SDX,$P(SDY(SDI),U,12)="P" S SDX=SDX_U_$P($$ICDDX^ICDCODE(+SDX),U,2) I $L($P(SDX,U,3)) D DXOTR S SDX(SDI)=SDX Q
"RTN","SCRPW24",67,0)
 ;SD*5.3*329 fixes problem of report not working for primary dx
"RTN","SCRPW24",68,0)
 K SDX N SDY,SDI D GETDX^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I SDX,$P(SDY(SDI),U,12)="P" S SDX=SDX_U_$P($$ICDDX^ICDCODE(+SDX,+SDOE0),U,2) I $L($P(SDX,U,2)) D DXOTR S SDX(SDI)=SDX
"RTN","SCRPW24",69,0)
 D NX Q
"RTN","SCRPW24",70,0)
 ;
"RTN","SCRPW24",71,0)
DXSD(SDX) ;Get secondary diagnoses
"RTN","SCRPW24",72,0)
 ;K SDX N SDY,SDI D GETDX^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I SDX,$P(SDY(SDI),U,12)'="P" S SDX=SDX_U_$P($$ICDDX^ICDCODE(+SDX),U,2) I $L($P(SDX,U,3)) D DXOTR S SDX(SDI)=SDX
"RTN","SCRPW24",73,0)
 ;SD*5.3*329 fixes problem of report not working for secondary dx
"RTN","SCRPW24",74,0)
 K SDX N SDY,SDI D GETDX^SDOE(SDOE,"SDY") S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  S SDX=$P(SDY(SDI),U) I SDX,$P(SDY(SDI),U,12)'="P" S SDX=SDX_U_$P($$ICDDX^ICDCODE(+SDX,+SDOE0),U,2) I $L($P(SDX,U,2)) D DXOTR S SDX(SDI)=SDX
"RTN","SCRPW24",75,0)
 D NX Q
"RTN","SCRPW24",76,0)
 ;
"RTN","SCRPW24",77,0)
ENED(SDX,SDZ) ;Get enrollment date
"RTN","SCRPW24",78,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S (SDX,Y)=$P(SDY,U) X ^DD("DD") S SDX(1)=SDX_U_Y
"RTN","SCRPW24",79,0)
 D NX Q
"RTN","SCRPW24",80,0)
 ;
"RTN","SCRPW24",81,0)
ENEF(SDX,SDZ) ;Get enrollment effective date
"RTN","SCRPW24",82,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S (SDX,Y)=$P(SDY,U,8) X ^DD("DD") S SDX(1)=SDX_U_Y
"RTN","SCRPW24",83,0)
 D NX Q
"RTN","SCRPW24",84,0)
 ;
"RTN","SCRPW24",85,0)
ENEP(SDX,SDZ) ;Get enrollment priority
"RTN","SCRPW24",86,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S SDX=$P(SDY,U,7) D FST(.SDX,27.11,.07) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",87,0)
 D NX Q
"RTN","SCRPW24",88,0)
 ;
"RTN","SCRPW24",89,0)
ENES(SDX,SDZ) ;Get enrollment status
"RTN","SCRPW24",90,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S SDX=$P(SDY,U,4),SDX=SDX_U_$$EXTERNAL^DILFD(27.11,.04,"F",SDX) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",91,0)
 D NX Q
"RTN","SCRPW24",92,0)
 ;
"RTN","SCRPW24",93,0)
ENFR(SDX,SDZ) ;Get enrollment facility received
"RTN","SCRPW24",94,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S SDX=$P(SDY,U,6) I SDX S SDX=SDX_U_$P($G(^DIC(4,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",95,0)
 D NX Q
"RTN","SCRPW24",96,0)
 ;
"RTN","SCRPW24",97,0)
ENSE(SDX,SDZ) ;Get enrollment source of enrollment
"RTN","SCRPW24",98,0)
 K SDX N SDY S SDY=$$ENROL($S(SDZ="H":+SDOE0,1:DT)) I SDY S SDX=$P(SDY,U,3) D FST(.SDX,27.11,.03) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",99,0)
 D NX Q
"RTN","SCRPW24",100,0)
 ;
"RTN","SCRPW24",101,0)
ENQ(SDZ) ;Set up help text for enrollment
"RTN","SCRPW24",102,0)
 I SDZ="H" S SDIRQ("?")="Enrollment status as of the encounter date/time is used for 'historical' values."
"RTN","SCRPW24",103,0)
 I SDZ="C" S SDIRQ("?")="Enrollment status as of the report run date is used for 'current' values."
"RTN","SCRPW24",104,0)
 Q
"RTN","SCRPW24",105,0)
 ;
"RTN","SCRPW24",106,0)
OEAT(SDX) ;Get encounter appointment type
"RTN","SCRPW24",107,0)
 K SDX S SDX=$P(SDOE0,U,10) I SDX S SDX=SDX_U_$P($G(^SD(409.1,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",108,0)
 D NX Q
"RTN","SCRPW24",109,0)
 ;
"RTN","SCRPW24",110,0)
OEDV(SDX) ;Get encounter division
"RTN","SCRPW24",111,0)
 K SDX S SDX=$P(SDOE0,U,11) I SDX S SDX=SDX_U_$P($G(^DG(40.8,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",112,0)
 D NX Q
"RTN","SCRPW24",113,0)
 ;
"RTN","SCRPW24",114,0)
OEEE(SDX) ;Get encounter eligibility
"RTN","SCRPW24",115,0)
 K SDX S SDX=$P(SDOE0,U,13) I SDX S SDX=SDX_U_$P($G(^DIC(8,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",116,0)
 D NX Q
"RTN","SCRPW24",117,0)
 ;
"RTN","SCRPW24",118,0)
OEOP(SDX) ;Get encounter originating process type
"RTN","SCRPW24",119,0)
 K SDX S SDX=$P(SDOE0,U,8) D FST(.SDX,409.68,.08) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",120,0)
 D NX Q
"RTN","SCRPW24",121,0)
 ;
"RTN","SCRPW24",122,0)
OEPA(SDX) ;Get encounter patient
"RTN","SCRPW24",123,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D DEM^VADPT I $L(VADM(1)) S SDX(1)=DFN_U_VADM(1)
"RTN","SCRPW24",124,0)
 D NX Q
"RTN","SCRPW24",125,0)
 ;
"RTN","SCRPW24",126,0)
OEES(SDX) ;Get encounter status
"RTN","SCRPW24",127,0)
 K SDX S SDX=$P(SDOE0,U,12) I SDX S SDX=SDX_U_$P($G(^SD(409.63,SDX,0)),U) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",128,0)
 D NX Q
"RTN","SCRPW24",129,0)
 ;
"RTN","SCRPW24",130,0)
OETS(SDX) ;Get transmission status
"RTN","SCRPW24",131,0)
 K SDX S SDX(1)=$$STX^SCRPW8(SDOE,SDOE0) Q
"RTN","SCRPW24",132,0)
 ;
"RTN","SCRPW24",133,0)
TSQ(DIR) ;Set up DIR array for transmission status question
"RTN","SCRPW24",134,0)
 K DIR S DIR("A")="Select transmission status",DIR("?")="This value represents the transmission status of the encounter record."
"RTN","SCRPW24",135,0)
 S DIR(0)="SO^0:Not checked-out;1:No transmission record;2:Not required, not transmitted;3:Rejected for transmission;4:Awaiting transmission;5:Transmitted, no acknowledgment;6:Transmitted, rejected;7:Transmitted, error;8:Transmitted, accepted"
"RTN","SCRPW24",136,0)
 Q
"RTN","SCRPW24",137,0)
 ;
"RTN","SCRPW24",138,0)
CLQ(DIR,SDZ) ;Set up DIR array for classification questions
"RTN","SCRPW24",139,0)
 K DIR S SDZ=$S(SDZ="A":"Agent Orange exposure",SDZ="I":"ionizing radiation exposure",SDZ="S":"service connected condition",1:"environmental contaminants exposure")
"RTN","SCRPW24",140,0)
 S DIR(0)="SO^1:YES;0:NO",DIR("A")="Treatment related to "_SDZ,DIR("?")="Indicates if treatment was related to "_SDZ Q
"RTN","SCRPW24",141,0)
 ;
"RTN","SCRPW24",142,0)
OECL(SDX,SDZ) ;Get classification values
"RTN","SCRPW24",143,0)
 K SDX N SDY S SDZ=$S(SDZ="A":1,SDZ="I":2,SDZ="S":3,SDZ="E":4,1:"") I SDZ D CLASK^SDCO2(SDOE,.SDY) S SDX=$P($G(SDY(SDZ)),U,2) I $L(SDX) S SDX(1)=$S(SDX=1:"1^YES",1:"0^NO")
"RTN","SCRPW24",144,0)
 D NX Q
"RTN","SCRPW24",145,0)
 ;
"RTN","SCRPW24",146,0)
OEOU(SDX) ;Get option used to create
"RTN","SCRPW24",147,0)
 K SDX S SDX=+$P(SDOE0,U,5),SDX=+$P($G(^AUPNVSIT(SDX,0)),U,24)
"RTN","SCRPW24",148,0)
 N SDY D GETS^DIQ(19,SDX,.01,"","SDY")
"RTN","SCRPW24",149,0)
 S SDX=SDX_U_SDY(19,SDX_",",.01) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",150,0)
 D NX Q
"RTN","SCRPW24",151,0)
 ;
"RTN","SCRPW24",152,0)
SUQ(DIR) ;Set up DIR() array for Scheduled/unscheduled question
"RTN","SCRPW24",153,0)
 K DIR S DIR("A")="Select outpatient activity type",DIR("?",1)="Only pre-scheduled appointments will be reflected as SCHEDULED.  All other",DIR("?",2)="types of activity (add/edits, registrations, walkins or unscheduled activity)"
"RTN","SCRPW24",154,0)
 S DIR("?")="will be reflected as UNSCHEDULED.",DIR(0)="SO^S:SCHEDULED;U:UNSCHEDULED" Q
"RTN","SCRPW24",155,0)
 ;
"RTN","SCRPW24",156,0)
OESU(SDX) ;Get scheduled/unscheduled status
"RTN","SCRPW24",157,0)
 N SDAP0 K SDX S SDX(1)=""
"RTN","SCRPW24",158,0)
 I $P(SDOE0,U,8)=1 D  Q:$L(SDX(1))
"RTN","SCRPW24",159,0)
 .S SDAP0=$G(^DPT(+$P(SDOE0,U,2),"S",+SDOE0,0))
"RTN","SCRPW24",160,0)
 .Q:$P(SDAP0,U,20)'=SDOE  Q:$P(SDAP0,U,7)=4
"RTN","SCRPW24",161,0)
 .S SDX(1)="S^SCHEDULED" Q
"RTN","SCRPW24",162,0)
 S SDX(1)="U^UNSCHEDULED" Q
"RTN","SCRPW24",163,0)
 ;
"RTN","SCRPW24",164,0)
PCPR(SDX,SDZ) ;Get primary care provider
"RTN","SCRPW24",165,0)
 ;Required input: SDZ="C" for current, "H" for historical
"RTN","SCRPW24",166,0)
 K SDX S SDX=$S(SDZ="C":$$OUTPTPR^SDUTL3(+$P(SDOE0,U,2)),1:$$OUTPTPR^SDUTL3(+$P(SDOE0,U,2),+$P(SDOE0,U))) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",167,0)
 D NX Q
"RTN","SCRPW24",168,0)
 ;
"RTN","SCRPW24",169,0)
PCTM(SDX,SDZ) ;Get priamry care team
"RTN","SCRPW24",170,0)
 ;Required input: SDZ="C" for current, "H" for historical
"RTN","SCRPW24",171,0)
 K SDX S SDX=$S(SDZ="C":$$OUTPTTM^SDUTL3(+$P(SDOE0,U,2)),1:$$OUTPTTM^SDUTL3(+$P(SDOE0,U,2),+$P(SDOE0,U))) S:$L($P(SDX,U,2)) SDX(1)=SDX
"RTN","SCRPW24",172,0)
 D NX Q
"RTN","SCRPW24",173,0)
 ;
"RTN","SCRPW24",174,0)
PDPA(SDX) ;Get patient age
"RTN","SCRPW24",175,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D DEM^VADPT I VADM(4)=+VADM(4) S SDX(1)=VADM(4)_U_VADM(4)
"RTN","SCRPW24",176,0)
 D NX Q
"RTN","SCRPW24",177,0)
 ;
"RTN","SCRPW24",178,0)
PDPS(SDX) ;Get patient sex
"RTN","SCRPW24",179,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D DEM^VADPT I $L($P(VADM(5),U,2)) S SDX(1)=VADM(5)
"RTN","SCRPW24",180,0)
 D NX Q
"RTN","SCRPW24",181,0)
 ;
"RTN","SCRPW24",182,0)
PDSC(SDX) ;Get patient state/county
"RTN","SCRPW24",183,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D ADD^VADPT I $L($P(VAPA(7),U,2)) S SDX(1)=$P(VAPA(5),U)_";"_$P(VAPA(7),U)_U_$P(VAPA(5),U,2)_" / "_$P(VAPA(7),U,2)
"RTN","SCRPW24",184,0)
 D NX Q
"RTN","SCRPW24",185,0)
 ;
"RTN","SCRPW24",186,0)
PDZC(SDX) ;Get patient zip code
"RTN","SCRPW24",187,0)
 K SDX S DFN=$P(SDOE0,U,2) I DFN D ADD^VADPT I $L(VAPA(6)) S SDX(1)=VAPA(6)_U_VAPA(6)
"RTN","SCRPW24",188,0)
 D NX Q
"RTN","SCRPW24",189,0)
 ;
"RTN","SCRPW24",190,0)
ENROL(SDATE)  ;Get enrollment record (most recent to encounter date)
"RTN","SCRPW24",191,0)
 N SDY,SDI,X1,X2,X,%Y S:SDATE#1=0 SDATE=SDATE+.9999 S SDI=0 F  S SDI=$O(^DGEN(27.11,"C",+$P(SDOE0,U,2),SDI)) Q:'SDI  S SDY=$G(^DGEN(27.11,SDI,0)),SDY(+SDY)=SDY
"RTN","SCRPW24",192,0)
 S SDI=$O(SDY(SDATE),-1) Q:'SDI ""  S X1=$P($P(SDOE0,U),"."),X2=SDI D ^%DTC Q SDY(SDI)
"RTN","SCRPW24",193,0)
 ;
"RTN","SCRPW24",194,0)
NX S:$D(SDX)<10 SDX(1)="~~~NONE~~~^~~~NONE~~~" Q
"RTN","SCRPW24",195,0)
 ;
"RTN","SCRPW24",196,0)
FST(SDX,SDFI,SDFE) ;Field set transform
"RTN","SCRPW24",197,0)
 Q:'$L(SDX)  N SDY,SDI D FIELD^DID(SDFI,SDFE,"","POINTER","SDY") S SDY=SDY("POINTER") F SDI=1:1:$L(SDY,";") I SDX=$P($P(SDY,";",SDI),":") S SDX=SDX_U_$P($P(SDY,";",SDI),":",2) Q
"RTN","SCRPW24",198,0)
 Q
"RTN","SCRPW241")
0^2^B12887246
"RTN","SCRPW241",1,0)
SCRPW241 ;BPCIOFO/ACS - ACRP Ad Hoc Report (cont.) ;06/30/99
"RTN","SCRPW241",2,0)
 ;;5.3;Scheduling;**180,254,351**;AUG 13, 1993
"RTN","SCRPW241",3,0)
 ;
"RTN","SCRPW241",4,0)
 ;----------------------------------------------------------------
"RTN","SCRPW241",5,0)
 ; This routine was created due to the max number of bytes
"RTN","SCRPW241",6,0)
 ; being reached in SCRPW24
"RTN","SCRPW241",7,0)
 ;
"RTN","SCRPW241",8,0)
 ; This routine is called by SCRPW24, and it contains CPT API calls
"RTN","SCRPW241",9,0)
 ;
"RTN","SCRPW241",10,0)
 ;----------------------------------------------------------------
"RTN","SCRPW241",11,0)
 ;
"RTN","SCRPW241",12,0)
APAC(SDX) ;Get all procedure codes
"RTN","SCRPW241",13,0)
 ; INPUT - .SDX  array reference
"RTN","SCRPW241",14,0)
 ; OUTPUT-  SDX  array with CPT pointer, CPT code, quantity
"RTN","SCRPW241",15,0)
 ;
"RTN","SCRPW241",16,0)
 K SDX
"RTN","SCRPW241",17,0)
 N SDY,SDI,CPTINFO,CPTCODE
"RTN","SCRPW241",18,0)
 ; array SDY will contain the CPT information
"RTN","SCRPW241",19,0)
 D GETCPT^SDOE(SDOE,"SDY")
"RTN","SCRPW241",20,0)
 ; Spin through CPT array and get CPT code and quantity
"RTN","SCRPW241",21,0)
 S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  D
"RTN","SCRPW241",22,0)
 . I $D(SDY(SDI,0)) S SDX=$P(SDY(SDI,0),U)
"RTN","SCRPW241",23,0)
 . E  Q
"RTN","SCRPW241",24,0)
 . S CPTINFO=$$CPT^ICPTCOD(+SDX,+SDOE0,1)
"RTN","SCRPW241",25,0)
 . Q:CPTINFO'>0
"RTN","SCRPW241",26,0)
 . S CPTCODE=$P(CPTINFO,U,2)
"RTN","SCRPW241",27,0)
 . S SDX=SDX_U_CPTCODE_U_$P(SDY(SDI,0),U,16)
"RTN","SCRPW241",28,0)
 . I $L($P(SDX,U,2)) D APOTR(.SDX) S SDX(SDI)=SDX
"RTN","SCRPW241",29,0)
 . Q
"RTN","SCRPW241",30,0)
 Q
"RTN","SCRPW241",31,0)
 ;
"RTN","SCRPW241",32,0)
APOTR(SDX) ;Transform procedure external value
"RTN","SCRPW241",33,0)
 ; INPUT - .SDX  CPT pointer
"RTN","SCRPW241",34,0)
 ; OUTPUT-  SDX  text string containing CPT code, CPT text
"RTN","SCRPW241",35,0)
 ;
"RTN","SCRPW241",36,0)
 N CPTINFO,CPTTEXT,ENCDT
"RTN","SCRPW241",37,0)
 S ENCDT=+$G(SDOE0)
"RTN","SCRPW241",38,0)
 I 'ENCDT D
"RTN","SCRPW241",39,0)
 .I '$G(SDOE) S ENCDT=$$NOW^XLFDT() Q
"RTN","SCRPW241",40,0)
 .D GETGEN^SDOE(SDOE,"SDY")
"RTN","SCRPW241",41,0)
 .S ENCDT=+$G(SDY(0))
"RTN","SCRPW241",42,0)
 .K SDY
"RTN","SCRPW241",43,0)
 S CPTINFO=$$CPT^ICPTCOD(+SDX,ENCDT,1)
"RTN","SCRPW241",44,0)
 Q:CPTINFO'>0
"RTN","SCRPW241",45,0)
 S CPTTEXT=$P(CPTINFO,U,3)
"RTN","SCRPW241",46,0)
 S $P(SDX,U,2)=$P(SDX,U,2)_" "_CPTTEXT
"RTN","SCRPW241",47,0)
 Q
"RTN","SCRPW241",48,0)
 ;
"RTN","SCRPW241",49,0)
APAP(SDX) ;Get ambulatory procedures (no E&M codes)
"RTN","SCRPW241",50,0)
 ; INPUT - .SDX  array reference
"RTN","SCRPW241",51,0)
 ; OUTPUT-  SDX  array containing CPT pointer, CPT code, CPT text
"RTN","SCRPW241",52,0)
 ;
"RTN","SCRPW241",53,0)
 K SDX
"RTN","SCRPW241",54,0)
 N SDY,SDI,CPTINFO,CPTCODE
"RTN","SCRPW241",55,0)
 D GETCPT^SDOE(SDOE,"SDY")
"RTN","SCRPW241",56,0)
 ; Spin through CPT array and get CPT code
"RTN","SCRPW241",57,0)
 S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  D
"RTN","SCRPW241",58,0)
 . I $D(SDY(SDI,0)) S SDX=$P(SDY(SDI,0),U)
"RTN","SCRPW241",59,0)
 . E  Q
"RTN","SCRPW241",60,0)
 . I '$D(^IBE(357.69,"B",SDX)) D
"RTN","SCRPW241",61,0)
 .. S CPTINFO=$$CPT^ICPTCOD(+SDX,+SDOE0,1)
"RTN","SCRPW241",62,0)
 .. Q:CPTINFO'>0
"RTN","SCRPW241",63,0)
 .. S CPTCODE=$P(CPTINFO,U,2)
"RTN","SCRPW241",64,0)
 .. S SDX=SDX_U_CPTCODE
"RTN","SCRPW241",65,0)
 .. I $L($P(SDX,U,2)) D APOTR(.SDX) S SDX(SDI)=SDX
"RTN","SCRPW241",66,0)
 .. Q
"RTN","SCRPW241",67,0)
 . Q
"RTN","SCRPW241",68,0)
 Q
"RTN","SCRPW241",69,0)
 ;
"RTN","SCRPW241",70,0)
APEM(SDX) ;Get evaluation and management codes
"RTN","SCRPW241",71,0)
 ; INPUT - .SDX  array reference
"RTN","SCRPW241",72,0)
 ; OUTPUT-  SDX  array containing CPT pointer, CPT code, CPT text
"RTN","SCRPW241",73,0)
 ;
"RTN","SCRPW241",74,0)
 K SDX
"RTN","SCRPW241",75,0)
 N SDY,SDI,CPTINFO,CPTCODE
"RTN","SCRPW241",76,0)
 D GETCPT^SDOE(SDOE,"SDY")
"RTN","SCRPW241",77,0)
 ; Spin through CPT array and get CPT code
"RTN","SCRPW241",78,0)
 S SDI=0 F  S SDI=$O(SDY(SDI)) Q:'SDI  D
"RTN","SCRPW241",79,0)
 . I $D(SDY(SDI,0)) S SDX=$P(SDY(SDI,0),U)
"RTN","SCRPW241",80,0)
 . E  Q
"RTN","SCRPW241",81,0)
 . I $D(^IBE(357.69,"B",SDX)) D
"RTN","SCRPW241",82,0)
 .. S CPTINFO=$$CPT^ICPTCOD(+SDX,+SDOE0,1)
"RTN","SCRPW241",83,0)
 .. Q:CPTINFO'>0
"RTN","SCRPW241",84,0)
 .. S CPTCODE=$P(CPTINFO,U,2)
"RTN","SCRPW241",85,0)
 .. S SDX=SDX_U_CPTCODE
"RTN","SCRPW241",86,0)
 .. I $L($P(SDX,U,2)) D APOTR(.SDX) S SDX(SDI)=SDX
"RTN","SCRPW241",87,0)
 .. Q
"RTN","SCRPW241",88,0)
 . Q
"RTN","SCRPW241",89,0)
 Q
"RTN","SCRPW241",90,0)
 ;
"RTN","SCRPW241",91,0)
PDPE(SDX)       ;Get patient's ethnicities
"RTN","SCRPW241",92,0)
 K SDX
"RTN","SCRPW241",93,0)
 N DFN,VADM,NUM,CNT,ABB,TXT
"RTN","SCRPW241",94,0)
 S DFN=$P(SDOE0,U,2)
"RTN","SCRPW241",95,0)
 I DFN D DEM^VADPT I VADM(11) S CNT=1,NUM=0 F  S NUM=+$O(VADM(11,NUM)) Q:'NUM  D
"RTN","SCRPW241",96,0)
 .I VADM(11,NUM) D
"RTN","SCRPW241",97,0)
 ..S TXT=$$PTR2TEXT^DGUTL4(+VADM(11,NUM),2) S:TXT="" TXT="?"
"RTN","SCRPW241",98,0)
 ..S ABB=$$PTR2CODE^DGUTL4(+$G(VADM(11,NUM,1)),3,1) S:ABB="" ABB="?"
"RTN","SCRPW241",99,0)
 ..S SDX(CNT)=+VADM(11,NUM)_"^"_TXT_" ("_ABB_")",CNT=CNT+1
"RTN","SCRPW241",100,0)
 S:$D(SDX)<10 SDX(1)="~~~NONE~~~^~~~UNANSWERED~~~"
"RTN","SCRPW241",101,0)
 Q
"RTN","SCRPW241",102,0)
 ;
"RTN","SCRPW241",103,0)
PDPR(SDX)       ;Get patient's race
"RTN","SCRPW241",104,0)
 K SDX
"RTN","SCRPW241",105,0)
 N DFN,VADM,NUM,CNT,ABB,TXT
"RTN","SCRPW241",106,0)
 S DFN=$P(SDOE0,U,2)
"RTN","SCRPW241",107,0)
 I DFN D DEM^VADPT I VADM(12) S CNT=1,NUM=0 F  S NUM=+$O(VADM(12,NUM)) Q:'NUM  D
"RTN","SCRPW241",108,0)
 .I VADM(12,NUM) D
"RTN","SCRPW241",109,0)
 ..S TXT=$$PTR2TEXT^DGUTL4(+VADM(12,NUM),1) S:TXT="" TXT="?"
"RTN","SCRPW241",110,0)
 ..S ABB=$$PTR2CODE^DGUTL4(+$G(VADM(12,NUM,1)),3,1) S:ABB="" ABB="?"
"RTN","SCRPW241",111,0)
 ..S SDX(CNT)=+VADM(12,NUM)_"^"_TXT_" ("_ABB_")",CNT=CNT+1
"RTN","SCRPW241",112,0)
 S:$D(SDX)<10 SDX(1)="~~~NONE~~~^~~~UNANSWERED~~~"
"RTN","SCRPW241",113,0)
 Q
"RTN","SCRPW45")
0^4^B54097496
"RTN","SCRPW45",1,0)
SCRPW45 ;RENO/KEITH - Outpatient Diagnosis/Procedure Search ; 15 Jul 98  02:38PM
"RTN","SCRPW45",2,0)
 ;;5.3;Scheduling;**144,351**;AUG 13, 1993
"RTN","SCRPW45",3,0)
 N SD,SDDIV,SDPAR,SDCRI,DIR,%DT
"RTN","SCRPW45",4,0)
 D TITL^SCRPW50("Outpatient Diagnosis/Procedure Search ")
"RTN","SCRPW45",5,0)
 G:'$$DIVA^SCRPW17(.SDDIV) EXIT
"RTN","SCRPW45",6,0)
 D SUBT^SCRPW50("**** Date Range Selection ****")
"RTN","SCRPW45",7,0)
 W ! S %DT="AEPX",%DT(0)=2961001,%DT("A")="Beginning date: " D ^%DT G:Y<1 EXIT S SD("BDT")=Y X ^DD("DD") S SD("PBDT")=Y
"RTN","SCRPW45",8,0)
EDT S %DT("A")="   Ending date: " W ! D ^%DT G:Y<1 EXIT
"RTN","SCRPW45",9,0)
 I Y<SD("BDT") W !!,$C(7),"End date cannot be before begin date!",! G EDT
"RTN","SCRPW45",10,0)
 S SD("EDT")=Y_.999999 X ^DD("DD") S SD("PEDT")=Y,(SDOUT,SDNUL)=0 F SDI=1:1:26 D PAR Q:SDOUT!SDNUL
"RTN","SCRPW45",11,0)
 G:SDOUT!'$D(SDPAR) EXIT S SDNUL=0 F  D CRI Q:SDOUT!SDNUL
"RTN","SCRPW45",12,0)
 G:SDOUT!'$D(SDCRI) EXIT
"RTN","SCRPW45",13,0)
 D SUBT^SCRPW50("**** Report Detail Format Selection ****")
"RTN","SCRPW45",14,0)
 K DIR S DIR(0)="S^P:PATIENT;V:VISIT;E:ENCOUNTER",DIR("A")="Specify the level of detail desired",DIR("B")="PATIENT",DIR("?")="This determines what type of detail list will be printed."
"RTN","SCRPW45",15,0)
 W ! D ^DIR G:$D(DUOUT)!$D(DTOUT) EXIT S SDFMT=Y_U_Y(0),SDD=$S(Y="E":1,1:2)
"RTN","SCRPW45",16,0)
 K DIR S DIR(0)="Y",DIR("A")="Include additional print fields in the report",DIR("B")="NO" W ! D ^DIR G:$D(DUOUT)!$D(DTOUT) EXIT
"RTN","SCRPW45",17,0)
 I Y D BLD^SCRPW21 S (SDOUT,SDNUL)=0,T="~" F  Q:SDOUT!SDNUL  D APF
"RTN","SCRPW45",18,0)
 G:SDOUT EXIT D PDIS^SCRPW46 G:SDOUT EXIT
"RTN","SCRPW45",19,0)
QUE N ZTSAVE F SDI="SDFMT","SDAPF(","SD(","SDDIV(","SDDIV","SDPAR(","SDCRI(" S ZTSAVE(SDI)=""
"RTN","SCRPW45",20,0)
 W ! D EN^XUTMDEVQ("START^SCRPW46","Outpatient Diagnosis/Procedure Search",.ZTSAVE)
"RTN","SCRPW45",21,0)
EXIT G EXIT^SCRPW47
"RTN","SCRPW45",22,0)
 ;
"RTN","SCRPW45",23,0)
PAR ;Select report search criteria
"RTN","SCRPW45",24,0)
 S SDVAR=$C(SDI+64)
"RTN","SCRPW45",25,0)
 D SUBT^SCRPW50("**** Report Search Criteria Selection (Element '"_SDVAR_"') ****")
"RTN","SCRPW45",26,0)
 K DIR S DIR(0)="SO^DL:DIAGNOSIS LIST;DR:DIAGNOSIS RANGE;PL:PROCEDURE LIST;PR:PROCEDURE RANGE",DIR("A")="Specify criteria type for search element '"_SDVAR_"'"
"RTN","SCRPW45",27,0)
 S DIR("?")="Select the type of data to search for with element '"_SDVAR_"'." W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW45",28,0)
 I X="" S SDNUL=1 Q
"RTN","SCRPW45",29,0)
 S SDSEL=Y,SDSEL(0)=Y(0) N DIC S DIC(0)="AEMQZ",DIC=$S(SDSEL["D":"^ICD9(",1:"^ICPT(") D:SDSEL["L" LIST D:SDSEL["R" RANGE S SDNUL=0
"RTN","SCRPW45",30,0)
 G:'$D(SDPAR(SDVAR)) PAR S SDPAR(SDVAR)=SDSEL_U_SDSEL(0),SD("LIST",$E(SDSEL),$E(SDSEL,2))=""
"RTN","SCRPW45",31,0)
 Q
"RTN","SCRPW45",32,0)
 ;
"RTN","SCRPW45",33,0)
LIST W ! F  D  Q:SDNUL!SDOUT
"RTN","SCRPW45",34,0)
 .D ^DIC I $D(DUOUT)!$D(DTOUT) S SDOUT=1 Q
"RTN","SCRPW45",35,0)
 .I X="" S SDNUL=1 Q
"RTN","SCRPW45",36,0)
 .I Y>0 D
"RTN","SCRPW45",37,0)
 ..S Y(0)=$S(SDSEL["D":$P($$ICDDX^ICDCODE(+Y),"^",2,99),1:$P($$CPT^ICPTCOD(+Y,,1),"^",2,99))
"RTN","SCRPW45",38,0)
 ..S SDPAR(SDVAR,$P(Y,U))=$P(Y(0),U)_" "_$P(Y(0),U,$S(SDSEL["D":3,1:2))
"RTN","SCRPW45",39,0)
 Q
"RTN","SCRPW45",40,0)
 ;
"RTN","SCRPW45",41,0)
RANGE W ! S DIC("A")="From "_$S(SDSEL["D":"ICD DIAGNOSIS: ",1:"CPT CODE: ")
"RTN","SCRPW45",42,0)
 D ^DIC I $D(DUOUT)!$D(DTOUT) S SDOUT=1 Q
"RTN","SCRPW45",43,0)
 I X="" S SDNUL=1 Q
"RTN","SCRPW45",44,0)
 Q:Y<1
"RTN","SCRPW45",45,0)
 S Y(0)=$S(SDSEL["D":$P($$ICDDX^ICDCODE(+Y),"^",2,99),1:$P($$CPT^ICPTCOD(+Y,,1),"^",2,99))
"RTN","SCRPW45",46,0)
 S S1=$P(Y(0),U)_" "_$P(Y(0),U,$S(SDSEL["D":3,1:2)),SDPAR(SDVAR,S1)=$P(Y,U),DIC("A")="To "_$P(DIC("A")," ",2,99)
"RTN","SCRPW45",47,0)
R2 W ! D ^DIC I $D(DUOUT)!$D(DTOUT) S SDOUT=1 Q
"RTN","SCRPW45",48,0)
 I X=""!(Y<1) S SDNUL=1 K SDPAR(SDVAR) Q
"RTN","SCRPW45",49,0)
 S Y(0)=$S(SDSEL["D":$P($$ICDDX^ICDCODE(+Y),"^",2,99),1:$P($$CPT^ICPTCOD(+Y,,1),"^",2,99))
"RTN","SCRPW45",50,0)
 S S2=$P(Y(0),U)_" "_$P(Y(0),U,$S(SDSEL["D":3,1:2))
"RTN","SCRPW45",51,0)
 I S1]S2 W !!,$C(7),"Ending value must collate after beginning value!",! G R2
"RTN","SCRPW45",52,0)
 S SDPAR(SDVAR,S2)=$P(Y,U) Q
"RTN","SCRPW45",53,0)
 ;
"RTN","SCRPW45",54,0)
CRI ;Prompt for element combination criteria
"RTN","SCRPW45",55,0)
 D SUBT^SCRPW50("**** Search Element Combination Criteria ****")
"RTN","SCRPW45",56,0)
 W !!,"  Specify letter combinations that represent how the search elements selected",!,"  above will be applied in evaluating patient activity (eg. ""ABC"" or ""ABC'D""):"
"RTN","SCRPW45",57,0)
 F SDII=1:1 D CRI1 Q:SDOUT!SDNUL
"RTN","SCRPW45",58,0)
 Q
"RTN","SCRPW45",59,0)
 ;
"RTN","SCRPW45",60,0)
CRI1 K DIR S DIR(0)="F"_$S(SDII=1:"",1:"O")_"^1:40",DIR("A")=$S(SDII=1:"IF",1:"OR")
"RTN","SCRPW45",61,0)
 S DIR("?",1)="Enter a string that represents the method which represents how the selected",DIR("?",2)="search criteria items will be applied during evaluation (eg. ""AB"" indicates"
"RTN","SCRPW45",62,0)
 S DIR("?",3)="that element 'A' and 'B' must be true for data to be returned.  The apostrophy",DIR("?",4)="""'"" may be used to negate (or exclude) a sort item.  For example, ""A'B"""
"RTN","SCRPW45",63,0)
 S DIR("?")="will return data where element 'A' is true and element 'B' is not true."
"RTN","SCRPW45",64,0)
 W ! D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW45",65,0)
 I X="" S SDNUL=1 Q
"RTN","SCRPW45",66,0)
 F  S SDC=$E(Y,$L(Y)) Q:SDC'="'"  S Y=$E(Y,1,($L(Y)-1))
"RTN","SCRPW45",67,0)
 I '$L(Y)!$TR($TR(Y,"'",""),"&","")="" W $C(7),"No criteria selected!" G CRI1
"RTN","SCRPW45",68,0)
 I Y["'&" W $C(7),"  ??  The value ""'&"" is incorrect syntax!" G CRI1
"RTN","SCRPW45",69,0)
 I Y["''" W $C(7),"  ??  Character ""'"" appears redundantly!" G CRI1
"RTN","SCRPW45",70,0)
 I Y["&&" W $C(7),"  ??  Character ""&"" appears redundantly!" G CRI1
"RTN","SCRPW45",71,0)
 S SDBAD=0,SDSTR="",SDRESP=Y,SDR=$TR(Y,"&","") F SDIII=1:1:$L(SDR) S SDC=$E(SDR,SDIII) D  Q:SDBAD
"RTN","SCRPW45",72,0)
 .I "&'"'[SDC,$L(SDR,SDC)>2 W $C(7),"  ??  Element '"_SDC_"' appears redundantly!" S SDBAD=1 Q
"RTN","SCRPW45",73,0)
 .I SDC'="'",'$D(SDPAR(SDC)) W $C(7),"  ??  Character '"_SDC_"' is not recognized!" S SDBAD=1 Q
"RTN","SCRPW45",74,0)
 .S SDSTR=SDSTR_SDC_$S(SDC'="'":"&",1:"")
"RTN","SCRPW45",75,0)
 .Q
"RTN","SCRPW45",76,0)
 G:SDBAD CRI1
"RTN","SCRPW45",77,0)
 S SDSTR=$E(SDSTR,1,($L(SDSTR)-1)) D STR(SDSTR,.SDTX) M SDCRI(SDSTR)=SDTX W "  ",$S(SDII=1:"If ",1:"Or "),SDTX(1) S SDIII=1 F  S SDIII=$O(SDTX(SDIII)) Q:'SDIII  W !?4,SDTX(SDIII)
"RTN","SCRPW45",78,0)
 Q
"RTN","SCRPW45",79,0)
 ;
"RTN","SCRPW45",80,0)
STR(SDSTR,SDTX) ;Convert combine logic into output text string
"RTN","SCRPW45",81,0)
 ;Required input: SDSTR=combine logic string
"RTN","SCRPW45",82,0)
 ;Required input: SDTX=array (pass by reference) to return text
"RTN","SCRPW45",83,0)
 N SDI,SDEXE,SDX
"RTN","SCRPW45",84,0)
 F SDI=1:1:$L(SDSTR) S SDX(SDI)=$$STR1($E(SDSTR,SDI))
"RTN","SCRPW45",85,0)
 S SDOXE(2)="S SDLTH=75",SDLTH=71-$L(SDSTR) D WRAP(.SDX,.SDTX,,.SDOXE,SDLTH,"")
"RTN","SCRPW45",86,0)
 Q
"RTN","SCRPW45",87,0)
 ;
"RTN","SCRPW45",88,0)
STR1(SDX) ;Convert to text (cont.)
"RTN","SCRPW45",89,0)
 ;Required input: SDX=character to transform
"RTN","SCRPW45",90,0)
 Q:SDX="&" "and "  Q:SDX="'" "not "
"RTN","SCRPW45",91,0)
 Q $P(SDPAR(SDX),U,2)_" '"_SDX_"' "
"RTN","SCRPW45",92,0)
 ;
"RTN","SCRPW45",93,0)
APF ;Select additional print fields
"RTN","SCRPW45",94,0)
 D SUBT^SCRPW50("Select additional print fields for patient detail:  (optional)")
"RTN","SCRPW45",95,0)
 K DIR S DIR("A")="Specify additional print field",DIR("?")="These fields will be included in the patient detail list output."
"RTN","SCRPW45",96,0)
 S S1=$$DIR^SCRPW23(.DIR,1,"","","O",SDD) Q:SDOUT!SDNUL
"RTN","SCRPW45",97,0)
 K DIR S DIR("A")="Select "_$P(S1,U,2)_" category",S2=$$DIR^SCRPW23(.DIR,2,"",$P(S1,U),"O",SDD,1) Q:SDOUT  I SDNUL S SDNUL=0 Q
"RTN","SCRPW45",98,0)
 S SDSEL=$P(S1,U)_$P(S2,U) G:$D(SDAPF("PFX",SDSEL)) PFD
"RTN","SCRPW45",99,0)
 S SDS1=$P(^TMP("SCRPW",$J,"ACT",SDSEL),T,11),SDS2=$O(SDAPF(SDS1,""),-1)+1,SDAPF(SDS1,SDS2)=SDSEL_U_$P(S1,U,2)_U_$P(S2,U,2),SDAPF("PFX",SDSEL,SDS1,SDS2)=""
"RTN","SCRPW45",100,0)
 Q
"RTN","SCRPW45",101,0)
 ;
"RTN","SCRPW45",102,0)
PFD N DIR S DIR(0)="Y",DIR("A")="This item is already selected as a print field, do you want to delete it",DIR("B")="NO" D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","SCRPW45",103,0)
 I Y S S1=$O(SDAPF("PFX",SDSEL,"")),S2=$O(SDAPF("PFX",SDSEL,S1,"")) K SDAPF("SDX",SDSEL),SDAPF("PF",S1,S2) W !,"deleted..."
"RTN","SCRPW45",104,0)
 Q
"RTN","SCRPW45",105,0)
 ;
"RTN","SCRPW45",106,0)
WRAP(SDITX,SDOTX,SDIXE,SDOXE,SDLTH,SDUJC) ;Text wrapper
"RTN","SCRPW45",107,0)
 ;Required input: SDITX=array (passed by reference) of text to be reformatted
"RTN","SCRPW45",108,0)
 ;Required input: SDOTX=array (passed by reference) to return reformatted text
"RTN","SCRPW45",109,0)
 ;Optional input: SDIXE=array (passed by reference) where SDIXE(n) is code to be executed prior to processing node SDITX(n)
"RTN","SCRPW45",110,0)
 ;Optional input: SDOXE=array (passed by reference) where SDOXE(n) is code to be executed prior to creating node SDOTX(n)
"RTN","SCRPW45",111,0)
 ;Optional input: SDLTH=line length, if not defined, SDLTH=IOM
"RTN","SCRPW45",112,0)
 ;Optional input: SDUJC=value (0-5 characters) to be inserted when values are joined, if undefined AQKUJC=" "
"RTN","SCRPW45",113,0)
 ;Output: Reformats values found in SDITX() array into wraparound text in SDOTX() of SDLTH length (10-255) characters
"RTN","SCRPW45",114,0)
 ;
"RTN","SCRPW45",115,0)
 N SDUI,SDUII,X,X1,X2,X3,X4,Y,Y1,Y2,SDLAST,SDUIII,SDUIV,SDTXB
"RTN","SCRPW45",116,0)
 Q:$D(SDITX)'>1  S:'$D(SDUJC) SDUJC=" " S:$G(SDLTH)<10!($G(SDLTH)>255) SDLTH=IOM K SDOTX S SDUJC=$E(SDUJC,1,5),SDUI="",SDUII=1,SDOTX(1)="",SDLAST=$O(SDITX(""),-1) D POX
"RTN","SCRPW45",117,0)
 F  S SDUI=$O(SDITX(SDUI)) Q:SDUI']""  I $L(SDITX(SDUI)) D PIX S X=SDITX(SDUI)_$S(SDUI'=SDLAST:SDUJC,1:"") D MOVE
"RTN","SCRPW45",118,0)
 Q
"RTN","SCRPW45",119,0)
 ;
"RTN","SCRPW45",120,0)
PIX I $D(SDIXE(SDUI)) X SDIXE(SDUI)
"RTN","SCRPW45",121,0)
 Q
"RTN","SCRPW45",122,0)
 ;
"RTN","SCRPW45",123,0)
POX I $D(SDOXE(SDUII)) X SDOXE(SDUII)
"RTN","SCRPW45",124,0)
 Q
"RTN","SCRPW45",125,0)
MOVE S X1=$L(X) Q:'X1  S X2=$L(X," "),Y=SDOTX(SDUII),Y1=$L(Y),Y2=SDLTH-Y1 I 'Y2 D INCR G MOVE
"RTN","SCRPW45",126,0)
 I X1'>Y2 S SDOTX(SDUII)=SDOTX(SDUII)_X Q
"RTN","SCRPW45",127,0)
MOVE1 I X'[" ",X1'>SDLTH D:Y1 INCR S SDOTX(SDUII)=X Q
"RTN","SCRPW45",128,0)
MOVE2 I X'[" ",X1>SDLTH D:Y1 INCR S SDOTX(SDUII)=$E(X,1,SDLTH),X=$E(X,(SDLTH+1),999) G MOVE
"RTN","SCRPW45",129,0)
 S X3=$L($P(X," ")) I X3=Y2 S SDOTX(SDUII)=SDOTX(SDUII)_$P(X," "),X=$P(X," ",2,999) G MOVE
"RTN","SCRPW45",130,0)
 I X3>Y2,X3'>SDLTH D INCR G MOVE
"RTN","SCRPW45",131,0)
 I X3>SDLTH D:Y1 INCR S SDOTX(SDUII)=$E(X,1,SDLTH),X=$E(X,(SDLTH+1),999) G MOVE
"RTN","SCRPW45",132,0)
MOVE3 K SDTXB F SDUIII=1:1:X2 S X4=999-$L($P(X," ",1,SDUIII)),SDTXB(X4,SDUIII)=""
"RTN","SCRPW45",133,0)
 S SDUIII=$O(SDTXB(998-Y2)),SDUIV=$O(SDTXB(SDUIII,0)),SDOTX(SDUII)=SDOTX(SDUII)_$E(X,1,($L($P(X," ",1,SDUIV))+1)),X=$P(X," ",(SDUIV+1),999) G MOVE
"RTN","SCRPW45",134,0)
 Q
"RTN","SCRPW45",135,0)
 ;
"RTN","SCRPW45",136,0)
INCR S SDUII=SDUII+1,SDOTX(SDUII)="" D POX Q
"RTN","SCRPW46")
0^3^B82053568
"RTN","SCRPW46",1,0)
SCRPW46 ;RENO/KEITH/MLR - Outpatient Diagnosis/Procedure Search (cont.) ; 9/27/00 10:29am
"RTN","SCRPW46",2,0)
 ;;5.3;Scheduling;**144,180,199,295,324,351**;AUG 13, 1993
"RTN","SCRPW46",3,0)
 ;  *199* 
"RTN","SCRPW46",4,0)
 ;  - Creation of Division subscript in ^TMP after DFN to capture,
"RTN","SCRPW46",5,0)
 ;    display, & count multi-divisional patients in Summary Section.
"RTN","SCRPW46",6,0)
 ;  - Filtering out on Sub-header those Division names not having
"RTN","SCRPW46",7,0)
 ;    patients meeting search criteria.
"RTN","SCRPW46",8,0)
 ;
"RTN","SCRPW46",9,0)
PDIS ;Parameter display
"RTN","SCRPW46",10,0)
 D SUBT^SCRPW50("**** Report Parameters Selected ****")
"RTN","SCRPW46",11,0)
 W ! D PD1^SCRPW47(0) S SDOUT=0
"RTN","SCRPW46",12,0)
 ;
"RTN","SCRPW46",13,0)
PDIS1 K DIR
"RTN","SCRPW46",14,0)
 S DIR(0)="S^C:CONTINUE;R:RE-DISPLAY PARAMETERS;P:PRINT PARAMETERS;Q:QUIT"
"RTN","SCRPW46",15,0)
 S DIR("A")="Select report action"
"RTN","SCRPW46",16,0)
 S DIR("B")="CONTINUE"
"RTN","SCRPW46",17,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW46",18,0)
 Q:Y="C"  G:Y="R" PDIS I Y="Q" S SDOUT=1 Q
"RTN","SCRPW46",19,0)
 N ZTSAVE
"RTN","SCRPW46",20,0)
 F SDI="SDDIV","SDDIV(","SD(","SDPAR(","SDCRI(","SDFMT","SDAPF(" S ZTSAVE(SDI)=""
"RTN","SCRPW46",21,0)
 W ! D EN^XUTMDEVQ("PPRT^SCRPW46","Print Report Parameters",.ZTSAVE)
"RTN","SCRPW46",22,0)
 G PDIS1
"RTN","SCRPW46",23,0)
 ;
"RTN","SCRPW46",24,0)
PPRT ;Print report parameters
"RTN","SCRPW46",25,0)
 D:$E(IOST)="C" DISP0^SCRPW23
"RTN","SCRPW46",26,0)
 S SDTIT(1)="<*>  OUTPATIENT DIAGNOSTIC/PROCEDURE CODE SEARCH  <*>"
"RTN","SCRPW46",27,0)
 S SDTIT(2)="Report Search Parameters" D HINI,HDR
"RTN","SCRPW46",28,0)
 D:'SDOUT PD1^SCRPW47(0) I $E(IOST)="P",$D(ZTQUEUED) G EXIT^SCRPW47
"RTN","SCRPW46",29,0)
 Q  ;PPRT
"RTN","SCRPW46",30,0)
 ;
"RTN","SCRPW46",31,0)
STOP ;Check for stop task request
"RTN","SCRPW46",32,0)
 S:$D(ZTQUEUED) (SDOUT,ZTSTOP)=$S($$S^%ZTLOAD:1,1:0) Q
"RTN","SCRPW46",33,0)
 ;
"RTN","SCRPW46",34,0)
HINI ;Initialize header variables
"RTN","SCRPW46",35,0)
 S SDLINE="",$P(SDLINE,"-",(IOM+1))=""
"RTN","SCRPW46",36,0)
 D NOW^%DTC S Y=% X ^DD("DD") S SDPNOW=$P(Y,":",1,2),SDPAGE=1,SDFF=0 Q
"RTN","SCRPW46",37,0)
 ;
"RTN","SCRPW46",38,0)
HDR ;Print report header
"RTN","SCRPW46",39,0)
 I $E(IOST)="C",SDFF N DIR S DIR(0)="E" W ! D ^DIR S SDOUT=Y'=1 Q:SDOUT
"RTN","SCRPW46",40,0)
 D STOP Q:SDOUT
"RTN","SCRPW46",41,0)
 I SDFF!('SDFF&($E(IOST)="C")) W $$XY^SCRPW50(IOF,1,0)
"RTN","SCRPW46",42,0)
 I $X W $$XY^SCRPW50("",0,0)
"RTN","SCRPW46",43,0)
 N SDI W SDLINE S SDI=0
"RTN","SCRPW46",44,0)
 F  S SDI=$O(SDTIT(SDI)) Q:'SDI  W !?(IOM-$L(SDTIT(SDI))\2),SDTIT(SDI)
"RTN","SCRPW46",45,0)
 W !,SDLINE,!,"For date range: ",SD("PBDT")," to ",SD("PEDT")
"RTN","SCRPW46",46,0)
 W !,"Date printed: ",SDPNOW,?(IOM-6-$L(SDPAGE)),"Page: ",SDPAGE
"RTN","SCRPW46",47,0)
 W !,SDLINE S SDPAGE=SDPAGE+1,SDFF=1
"RTN","SCRPW46",48,0)
 Q  ;HDR
"RTN","SCRPW46",49,0)
 ;
"RTN","SCRPW46",50,0)
DHDR(SDIV,SDI,SDTIT) ;Set up division subheaders
"RTN","SCRPW46",51,0)
 ;Required input: SDIV=division ifn or '0' for summary
"RTN","SCRPW46",52,0)
 ;Required input: SDI=array number to start with
"RTN","SCRPW46",53,0)
 ;Required input: SDTIT=array to store subheaders in (pass by reference)
"RTN","SCRPW46",54,0)
 D  ;
"RTN","SCRPW46",55,0)
 . I 'SDIV S SDTIT(SDI)="Summary for "_$P(SDDIV,U,2) Q
"RTN","SCRPW46",56,0)
 . I SDDIV,($P(SDDIV,U,2)="ALL DIVISIONS") S SDTIT(SDI)="For division: "_SDIVN_" "_SDIVL(SDIVN) Q  ; SD*5.3*324
"RTN","SCRPW46",57,0)
 . S SDTIT(SDI)="For facility: "_SDIVN Q
"RTN","SCRPW46",58,0)
 ;S SDTIT(SDI)=$S('SDIV:"Summary for "_$P(SDDIV,U,2),SDDIV!($P(SDDIV,U,2)="ALL DIVISIONS"):"For division: "_SDIVN_" "_SDIVL(SDIVN),1:"For facility: "_SDIVN)
"RTN","SCRPW46",59,0)
 ;
"RTN","SCRPW46",60,0)
 I 'SDIV,$P(SDDIV,U,2)="SELECTED DIVISIONS" N SDIVN S SDIVN="" D  Q
"RTN","SCRPW46",61,0)
 .F  S SDIVN=$O(SDDIV(SDIVN)) Q:SDIVN=""  S SDI=SDI+1,SDTIT(SDI)="Division: "_SDDIV(SDIVN)
"RTN","SCRPW46",62,0)
 .Q
"RTN","SCRPW46",63,0)
 ;
"RTN","SCRPW46",64,0)
 I 'SDIV,$P(SDDIV,U,2)="ALL DIVISIONS" D
"RTN","SCRPW46",65,0)
 .N SDIV S SDIV=0 F  S SDIV=$O(^TMP("SCRPW",$J,SDIV)) Q:'SDIV  D
"RTN","SCRPW46",66,0)
 .. Q:'$D(^TMP("SCRPW",$J,SDIV,2))
"RTN","SCRPW46",67,0)
 .. S SDI=SDI+1
"RTN","SCRPW46",68,0)
 .. S SDTIT(SDI)="Division: "_$P($G(^DG(40.8,SDIV,0)),U)_"  "_SDIV
"RTN","SCRPW46",69,0)
 .Q
"RTN","SCRPW46",70,0)
 Q
"RTN","SCRPW46",71,0)
 ;
"RTN","SCRPW46",72,0)
START ;Print report
"RTN","SCRPW46",73,0)
 K ^TMP("SCRPW",$J) S (SDOUT,SDSTOP)=0,SDMD="",SDMD=$O(SDDIV(SDMD)),SDMD=$O(SDDIV(SDMD)) S:$P(SDDIV,U,2)="ALL DIVISIONS" SDMD=1
"RTN","SCRPW46",74,0)
 ;Iterate through list of patient encounters
"RTN","SCRPW46",75,0)
 S DFN=0 F  S DFN=$O(^SCE("ADFN",DFN)) Q:'DFN  K SDPDIV S SDSTOP=SDSTOP+1 D:SDSTOP#100=0 STOP Q:SDOUT  D
"RTN","SCRPW46",76,0)
 .S SDT=SD("BDT") F  S SDT=$O(^SCE("ADFN",DFN,SDT)) Q:'SDT!SDOUT!(SDT>SD("EDT"))  D
"RTN","SCRPW46",77,0)
 ..S SDOE=0 F  S SDOE=$O(^SCE("ADFN",DFN,SDT,SDOE)) Q:'SDOE!SDOUT  D
"RTN","SCRPW46",78,0)
 ...S SDOE0=$$GETOE^SDOE(SDOE) S SDIV=$P(SDOE0,"^",11) Q:'SDIV!$P(SDOE0,"^",6)!'$$DIV()  S SDPDIV(SDIV)=""
"RTN","SCRPW46",79,0)
 ...;Build initial patient diagnosis/procedure lists
"RTN","SCRPW46",80,0)
 ...I $D(SD("LIST","D")) K SDLIST D GETDX^SDOE(SDOE,"SDLIST") S SDI=0 F  S SDI=$O(SDLIST(SDI)) Q:'SDI  D
"RTN","SCRPW46",81,0)
 ....S SDDX=$P(SDLIST(SDI),"^") S:SDDX ^TMP("SCRPW",$J,0,0,DFN,SDIV,"DX",SDDX)=""
"RTN","SCRPW46",82,0)
 ....Q
"RTN","SCRPW46",83,0)
 ...I $D(SD("LIST","P")) K SDLIST D GETCPT^SDOE(SDOE,"SDLIST") S SDI=0 F  S SDI=$O(SDLIST(SDI)) Q:'SDI  D
"RTN","SCRPW46",84,0)
 ....S SDCPT=$P(SDLIST(SDI),"^") S:SDCPT ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDCPT)=""
"RTN","SCRPW46",85,0)
 ....;Loop through modifiers and add to CPT array
"RTN","SCRPW46",86,0)
 .... N SDMODN,SDMOD  ; SDMODN=modifier node, SDMOD=mod pointer
"RTN","SCRPW46",87,0)
 .... S SDMODN=0
"RTN","SCRPW46",88,0)
 .... F  S SDMODN=+$O(SDLIST(SDI,1,SDMODN)) Q:'SDMODN  D
"RTN","SCRPW46",89,0)
 ..... S SDMOD=$P(SDLIST(SDI,1,SDMODN,0),"^",1)
"RTN","SCRPW46",90,0)
 ..... S:SDMOD ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDCPT,SDMOD)=""
"RTN","SCRPW46",91,0)
 ..... Q
"RTN","SCRPW46",92,0)
 .... Q
"RTN","SCRPW46",93,0)
 ...S:$P(SDFMT,"^")="E" ^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT",SDT,SDOE)=SDOE0
"RTN","SCRPW46",94,0)
 ...S:$P(SDFMT,"^")="V" ^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT",$P(SDT,"."))=""
"RTN","SCRPW46",95,0)
 ...S:$P(SDFMT,"^")="P" ^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT")=""
"RTN","SCRPW46",96,0)
 ...Q
"RTN","SCRPW46",97,0)
 ..Q
"RTN","SCRPW46",98,0)
 .I '$D(^TMP("SCRPW",$J,0,0,DFN)) D  Q
"RTN","SCRPW46",99,0)
 ..N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  K ^TMP("SCRPW",$J,SDIV,1,DFN)
"RTN","SCRPW46",100,0)
 ..Q
"RTN","SCRPW46",101,0)
 .;Build text lists for Diagnosis ranges if necessary
"RTN","SCRPW46",102,0)
 .I $D(SD("LIST","D","R")) D
"RTN","SCRPW46",103,0)
 .. N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:'SDIV  D
"RTN","SCRPW46",104,0)
 ... S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"DX",SDI)) Q:'SDI  D
"RTN","SCRPW46",105,0)
 ....S SDX=$$ICDDX^ICDCODE(SDI,+SDOE0),SDX=$P(SDX,"^",2)_" "_$P(SDX,"^",4)
"RTN","SCRPW46",106,0)
 .... S:$L(SDX)>1 ^TMP("SCRPW",$J,0,0,DFN,SDIV,"DXR",SDX)=SDI
"RTN","SCRPW46",107,0)
 .;Building text list for Procedure ranges
"RTN","SCRPW46",108,0)
 .I $D(SD("LIST","P","R")) S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDI)) Q:'SDI  D
"RTN","SCRPW46",109,0)
 ..; SDI=CPT pointer, SDI2=mod ptr, SDX=CPT+desc, SDX2=mod+desc
"RTN","SCRPW46",110,0)
 ..; get CPT and description and build array entry
"RTN","SCRPW46",111,0)
 .. N CPTINFO,CPTCODE,CPTTEXT
"RTN","SCRPW46",112,0)
 .. S CPTINFO=$$CPT^ICPTCOD(SDI,+SDOE0,1)
"RTN","SCRPW46",113,0)
 .. Q:CPTINFO'>0
"RTN","SCRPW46",114,0)
 .. S CPTCODE=$P(CPTINFO,"^",2)
"RTN","SCRPW46",115,0)
 .. S CPTTEXT=$P(CPTINFO,"^",3)
"RTN","SCRPW46",116,0)
 .. S SDX=CPTCODE_" "_CPTTEXT
"RTN","SCRPW46",117,0)
 .. S:$L(SDX)>1 ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPTR",SDX)=SDI
"RTN","SCRPW46",118,0)
 ..;
"RTN","SCRPW46",119,0)
 ..; loop through mods in CPT array and call API to get mod code/desc
"RTN","SCRPW46",120,0)
 .. S SDI2="" F  S SDI2=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDI,SDI2)) Q:'SDI2  D
"RTN","SCRPW46",121,0)
 ... N MODINFO,MODCODE,MODTEXT
"RTN","SCRPW46",122,0)
 ... S MODINFO=$$MOD^ICPTMOD(SDI2,"I",+SDOE0,1)
"RTN","SCRPW46",123,0)
 ... Q:MODINFO'>0
"RTN","SCRPW46",124,0)
 ... S MODCODE=$P(MODINFO,"^",2)
"RTN","SCRPW46",125,0)
 ... S MODTEXT=$P(MODINFO,"^",3)
"RTN","SCRPW46",126,0)
 ... S SDX2=MODCODE_" "_MODTEXT
"RTN","SCRPW46",127,0)
 ... ; add mod code/desc to array
"RTN","SCRPW46",128,0)
 ... S:$L(SDX2)>1 ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPTR",SDX,SDX2)=SDI2
"RTN","SCRPW46",129,0)
 ... Q
"RTN","SCRPW46",130,0)
 ..Q
"RTN","SCRPW46",131,0)
 .;Iterate through criteria combine logic
"RTN","SCRPW46",132,0)
 .;Loop through secondary Division (SDIV) for multiple division episodes
"RTN","SCRPW46",133,0)
 . N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  D
"RTN","SCRPW46",134,0)
 .. S SDCRI="" F  S SDCRI=$O(SDCRI(SDCRI)) Q:SDCRI=""  D
"RTN","SCRPW46",135,0)
 ... S SDCL=$TR($TR(SDCRI,"'",""),"&","") F SDI=1:1:$L(SDCL) S SDC=$E(SDCL,SDI) D:'$D(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC))
"RTN","SCRPW46",136,0)
 ....;Build list of true items for each criteria element
"RTN","SCRPW46",137,0)
 .... S SDZ=$P(SDPAR(SDC),"^")
"RTN","SCRPW46",138,0)
 .... I SDZ="DL" S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"DX",SDI)) Q:'SDI  D
"RTN","SCRPW46",139,0)
 ..... S:$D(SDPAR(SDC,SDI)) ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC,SDI)=""
"RTN","SCRPW46",140,0)
 ..... Q
"RTN","SCRPW46",141,0)
 .... I SDZ="DR" S SDR1="",SDR1=$O(SDPAR(SDC,SDR1)),SDR2=$O(SDPAR(SDC,SDR1)),SDI="" D
"RTN","SCRPW46",142,0)
 ..... F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"DXR",SDI)) Q:SDI=""  D
"RTN","SCRPW46",143,0)
 ...... I SDR1']SDI,SDI']SDR2 S ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC,SDI)=""  Q
"RTN","SCRPW46",144,0)
 ..... Q
"RTN","SCRPW46",145,0)
 .... I SDZ="PL" S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDI)) Q:'SDI  D
"RTN","SCRPW46",146,0)
 ..... I $D(SDPAR(SDC,SDI)) M ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC,SDI)=^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPT",SDI)
"RTN","SCRPW46",147,0)
 ..... Q
"RTN","SCRPW46",148,0)
 .... I SDZ="PR" S SDR1="",SDR1=$O(SDPAR(SDC,SDR1)),SDR2=$O(SDPAR(SDC,SDR1)),SDI="" D
"RTN","SCRPW46",149,0)
 ..... F  S SDI=$O(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPTR",SDI)) Q:SDI=""  D
"RTN","SCRPW46",150,0)
 ...... I SDR1']SDI,SDI']SDR2 M ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC,SDI)=^TMP("SCRPW",$J,0,0,DFN,SDIV,"CPTR",SDI)
"RTN","SCRPW46",151,0)
 ......Q
"RTN","SCRPW46",152,0)
 .....Q
"RTN","SCRPW46",153,0)
 ....S ^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC)=($D(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC))>0)_U_SDZ
"RTN","SCRPW46",154,0)
 .... Q
"RTN","SCRPW46",155,0)
 ...;Apply criteria combine logic
"RTN","SCRPW46",156,0)
 ...N A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z
"RTN","SCRPW46",157,0)
 ...F SDI=1:1:$L(SDCL) S SDC=$E(SDCL,SDI),@SDC=$P(^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC),"^")
"RTN","SCRPW46",158,0)
 ...;If combine logic is "true", move items to final list
"RTN","SCRPW46",159,0)
 ...I @SDCRI F SDI=1:1:$L(SDCL) S SDC=$E(SDCL,SDI),SDX=^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC) D
"RTN","SCRPW46",160,0)
 ....I SDX M ^TMP("SCRPW",$J,0,1,DFN,SDIV,$P(SDX,"^",2))=^TMP("SCRPW",$J,0,0,DFN,SDIV,"CRI",SDC)
"RTN","SCRPW46",161,0)
 ....Q
"RTN","SCRPW46",162,0)
 ...Q
"RTN","SCRPW46",163,0)
 .I '$D(^TMP("SCRPW",$J,0,1,DFN)) D  Q
"RTN","SCRPW46",164,0)
 ..S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  K ^TMP("SCRPW",$J,SDIV,1,DFN)
"RTN","SCRPW46",165,0)
 ..Q
"RTN","SCRPW46",166,0)
 .;Move item ifn lists to text lists
"RTN","SCRPW46",167,0)
 .N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  D
"RTN","SCRPW46",168,0)
 .. S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,1,DFN,SDIV,"DL",SDI)) Q:'SDI  D
"RTN","SCRPW46",169,0)
 ... S SDX=$$ICDDX^ICDCODE(SDI,+SDOE0),SDX=$P(SDX,"^",2)_" "_$P(SDX,"^",4) S:$L(SDX)>1 ^TMP("SCRPW",$J,0,1,DFN,SDIV,"DR",SDX)=$G(SDT)
"RTN","SCRPW46",170,0)
        ... Q
"RTN","SCRPW46",171,0)
 .N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  D
"RTN","SCRPW46",172,0)
 .. S SDI=0 F  S SDI=$O(^TMP("SCRPW",$J,0,1,DFN,SDIV,"PL",SDI)) Q:'SDI  D
"RTN","SCRPW46",173,0)
 ... N CPTINFO,CPTCODE,CPTTEXT
"RTN","SCRPW46",174,0)
 ... S CPTINFO=$$CPT^ICPTCOD(SDI,+SDOE0,1)
"RTN","SCRPW46",175,0)
 ... Q:CPTINFO'>0
"RTN","SCRPW46",176,0)
 ... S CPTCODE=$P(CPTINFO,"^",2)
"RTN","SCRPW46",177,0)
 ... S CPTTEXT=$P(CPTINFO,"^",3)
"RTN","SCRPW46",178,0)
 ... S SDX=CPTCODE_" "_CPTTEXT
"RTN","SCRPW46",179,0)
 ... S:$L(SDX)>1 ^TMP("SCRPW",$J,0,1,DFN,SDIV,"PR",SDX)=""
"RTN","SCRPW46",180,0)
 ... ;
"RTN","SCRPW46",181,0)
 ... ;loop through mods in CPT array and call API to get mod code/desc
"RTN","SCRPW46",182,0)
 ... S SDI2=""
"RTN","SCRPW46",183,0)
 ... F  S SDI2=$O(^TMP("SCRPW",$J,0,1,DFN,SDIV,"PL",SDI,SDI2)) Q:'SDI2  D
"RTN","SCRPW46",184,0)
 .... N MODINFO,MODCODE,MODTEXT
"RTN","SCRPW46",185,0)
 .... S MODINFO=$$MOD^ICPTMOD(SDI2,"I",+SDOE0,1)
"RTN","SCRPW46",186,0)
 .... Q:MODINFO'>0
"RTN","SCRPW46",187,0)
 .... S MODCODE=$P(MODINFO,"^",2)
"RTN","SCRPW46",188,0)
 .... S MODTEXT=$P(MODINFO,"^",3)
"RTN","SCRPW46",189,0)
 .... S SDX2=MODCODE_" "_MODTEXT
"RTN","SCRPW46",190,0)
 .... ; add mod code/desc to array
"RTN","SCRPW46",191,0)
 .... S:$L(SDX2)>1 ^TMP("SCRPW",$J,0,1,DFN,SDIV,"PR",SDX,SDX2)=""
"RTN","SCRPW46",192,0)
 .... Q 
"RTN","SCRPW46",193,0)
 ...Q
"RTN","SCRPW46",194,0)
 . ; delete procedure list array
"RTN","SCRPW46",195,0)
 . N SDIV S SDIV="" F  S SDIV=$O(SDPDIV(SDIV)) Q:SDIV=""  D
"RTN","SCRPW46",196,0)
 ..;Merge activity list
"RTN","SCRPW46",197,0)
 .. M ^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT")=^TMP("SCRPW",$J,SDIV,0,DFN,SDIV,"ACT")
"RTN","SCRPW46",198,0)
 ..;Kill scratch list, merge to summary global if multidivisional
"RTN","SCRPW46",199,0)
 ..I SDMD,SDFMT'="P" M ^TMP("SCRPW",$J,0,1,DFN,SDIV,"ACT")=^TMP("SCRPW",$J,SDIV,1,DFN,SDIV,"ACT")
"RTN","SCRPW46",200,0)
 ..;Delete scratch levels and arrays after merge
"RTN","SCRPW46",201,0)
 .. K ^TMP("SCRPW",$J,0,1,DFN,"DL")
"RTN","SCRPW46",202,0)
 .. K ^TMP("SCRPW",$J,0,1,DFN,"PL")
"RTN","SCRPW46",203,0)
 ..Q
"RTN","SCRPW46",204,0)
 .Q
"RTN","SCRPW46",205,0)
 ;Delete 0,0 scratch level prior to printing
"RTN","SCRPW46",206,0)
 K ^TMP("SCRPW",$J,0,0)
"RTN","SCRPW46",207,0)
 G:SDOUT EXIT^SCRPW47 G ^SCRPW47
"RTN","SCRPW46",208,0)
 ;
"RTN","SCRPW46",209,0)
DIV() ;Check division
"RTN","SCRPW46",210,0)
 Q:'SDDIV 1  Q $D(SDDIV(+SDIV))
"RTN","SDCO0")
0^5^B28062389
"RTN","SDCO0",1,0)
SDCO0 ;ALB/RMO - Build List Area - Check Out; 11 FEB 1993 10:00 am ; 10/27/99 12:56pm
"RTN","SDCO0",2,0)
 ;;5.3;Scheduling;**20,44,132,180,351**;Aug 13, 1993
"RTN","SDCO0",3,0)
 ;
"RTN","SDCO0",4,0)
EN(SDARY,SDOE,SDSTART,SDTOT) ;Entry point Called by Ck Out & Apt Mgr Exp Dis
"RTN","SDCO0",5,0)
 S SDTOT=0
"RTN","SDCO0",6,0)
 D CL(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",7,0)
 D PR(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",8,0)
 D DX(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",9,0)
 I $P($G(^SCE(+SDOE,0)),"^",8)'=2 D SC(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",10,0)
 Q
"RTN","SDCO0",11,0)
 ;
"RTN","SDCO0",12,0)
CL(SDARY,SDOE,SDSTART,SDTOT) ;Build classification (Pg: 1  Row: SDSTART-SDSTART+7  Col: 1-80)
"RTN","SDCO0",13,0)
 N SDCLOEY,SDCNI,SDCNT,SDCTI,SDCTIS,SDCTS,SDEND,SDLINE,SDNA,SDVAL,X
"RTN","SDCO0",14,0)
 S SDLINE=SDSTART,SDEND=SDSTART+7
"RTN","SDCO0",15,0)
 D SET(SDARY,SDLINE," CLASSIFICATION ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",16,0)
 D CLASK^SDCO2(SDOE,.SDCLOEY)
"RTN","SDCO0",17,0)
 D SET(SDARY,SDLINE,"["_$S($D(SDCLOEY):"Required",1:"Not Required")_"]",24,"","","","","",.SDTOT)
"RTN","SDCO0",18,0)
 S SDCNT=0,SDCTIS=$$SEQ^SDCO21
"RTN","SDCO0",19,0)
 F SDCTS=1:1 S SDCTI=+$P(SDCTIS,",",SDCTS) Q:'SDCTI  D
"RTN","SDCO0",20,0)
 .S SDCNT=SDCNT+1,SDLINE=SDLINE+1
"RTN","SDCO0",21,0)
 .S:$D(SDCLOEY(SDCTI)) SDVAL=$$VAL^SDCODD(SDCTI,$P(SDCLOEY(SDCTI),"^",2)),SDNA=+$P(SDCLOEY(SDCTI),"^",3)
"RTN","SDCO0",22,0)
 .S X=$S('$D(SDCLOEY(SDCTI)):"Not Applicable",$$COMDT^SDCOU(SDOE)&(SDVAL=""):"Not Applicable",SDVAL="":"Unanswered",1:SDVAL)
"RTN","SDCO0",23,0)
 .D SET(SDARY,SDLINE,SDCNT_"  "_$J($P($G(^SD(409.41,SDCTI,0)),"^",6)_": ",32)_X,2,"","","CL",SDCNT,+$G(SDCLOEY(SDCTI))_"^"_SDCTI,.SDTOT)
"RTN","SDCO0",24,0)
 F SDLINE=SDLINE+1:1:SDEND D SET(SDARY,SDLINE,"",1,"","","","","",.SDTOT)
"RTN","SDCO0",25,0)
 Q
"RTN","SDCO0",26,0)
 ;
"RTN","SDCO0",27,0)
PR(SDARY,SDOE,SDSTART,SDTOT) ;Build Provider (Pg: 1  Row: SDSTART+8-END  Col: 1-40)
"RTN","SDCO0",28,0)
 N SDCNT,SDLINE,SDPR,SDVPRV
"RTN","SDCO0",29,0)
 S SDLINE=SDSTART+8
"RTN","SDCO0",30,0)
 D SET(SDARY,SDLINE," PROVIDER ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",31,0)
 D SET(SDARY,SDLINE,"["_$S($$PRASK^SDCO3(SDOE)=1:"Required",1:"Not Required")_"]",18,"","","","","",.SDTOT)
"RTN","SDCO0",32,0)
 ;
"RTN","SDCO0",33,0)
 ; -- get provider data
"RTN","SDCO0",34,0)
 D GETPRV^SDOE(SDOE,"SDPR")
"RTN","SDCO0",35,0)
 S (SDCNT,SDVPRV)=0
"RTN","SDCO0",36,0)
 F  S SDVPRV=$O(SDPR(SDVPRV)) Q:'SDVPRV  D
"RTN","SDCO0",37,0)
 . S SDCNT=SDCNT+1
"RTN","SDCO0",38,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",39,0)
 . D SET(SDARY,SDLINE,SDCNT_"  "_$$PR^SDCO31(+SDPR(SDVPRV)),2,"","","PR",SDCNT,SDVPRV_"^"_+SDPR(SDVPRV),.SDTOT)
"RTN","SDCO0",40,0)
 Q
"RTN","SDCO0",41,0)
 ;
"RTN","SDCO0",42,0)
DX(SDARY,SDOE,SDSTART,SDTOT) ;Build Diagnosis (Pg: 1  Row: SDSTART+8-END  Col: 42-80)
"RTN","SDCO0",43,0)
 N SDCNT,SDDXS,SDDXD,SDVPOV,SDLINE,ICDVDT
"RTN","SDCO0",44,0)
 S SDLINE=SDSTART+8
"RTN","SDCO0",45,0)
 D SET(SDARY,SDLINE," DIAGNOSIS ",45,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",46,0)
 D SET(SDARY,SDLINE,"["_$S($$DXASK^SDCO4(SDOE)=1:"Required",1:"Not Required")_"]",59,"","","","","",.SDTOT)
"RTN","SDCO0",47,0)
 ;
"RTN","SDCO0",48,0)
 ; -- get dxs data
"RTN","SDCO0",49,0)
 D GETDX^SDOE(SDOE,"SDDXS")
"RTN","SDCO0",50,0)
 S (SDCNT,SDVPOV)=0
"RTN","SDCO0",51,0)
 F  S SDVPOV=$O(SDDXS(SDVPOV)) Q:'SDVPOV  D
"RTN","SDCO0",52,0)
 . S SDCNT=SDCNT+1
"RTN","SDCO0",53,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",54,0)
 . S ICDVDT=$S($P(SDDXS(SDVPOV),"^",3)'="":$$GET1^DIQ(9000010,$P(SDDXS(SDVPOV),"^",3),.01,"I"),1:"")
"RTN","SDCO0",55,0)
 . S SDDXD=$$DX^SDCO41(+SDDXS(SDVPOV),ICDVDT)
"RTN","SDCO0",56,0)
 . D SET(SDARY,SDLINE,SDCNT_"  "_$P(SDDXD,"^"),42,"","","","","",.SDTOT)
"RTN","SDCO0",57,0)
 . D SET(SDARY,SDLINE,$P(SDDXD,"^",2),55,"","","DX",SDCNT,SDVPOV_"^"_+SDDXS(SDVPOV),.SDTOT)
"RTN","SDCO0",58,0)
 Q
"RTN","SDCO0",59,0)
 ;
"RTN","SDCO0",60,0)
SC(SDARY,SDOEP,SDSTART,SDTOT) ;Build Stop Codes (Pg: 2  Row: SDTOT+1  Col: 1-80)
"RTN","SDCO0",61,0)
 N SDLINE,SDONE
"RTN","SDCO0",62,0)
 F SDLINE=SDTOT+1:1:SDSTART+VALM("LINES")+1 D SET(SDARY,SDLINE,"",1,"","","","","",.SDTOT)
"RTN","SDCO0",63,0)
 D SET(SDARY,SDLINE," STOP CODES ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",64,0)
 D SET(SDARY,SDLINE,"[Stop Codes Not Required / Procedures Required]",28,"","","","","",.SDTOT)
"RTN","SDCO0",65,0)
 D AE(SDARY,SDOEP,.SDLINE,.SDTOT,.SDONE)
"RTN","SDCO0",66,0)
 S SDOE=0
"RTN","SDCO0",67,0)
 F  S SDOE=$O(^SCE("APAR",SDOEP,SDOE)) Q:'SDOE  D AE(SDARY,SDOE,.SDLINE,.SDTOT,.SDONE)
"RTN","SDCO0",68,0)
 Q
"RTN","SDCO0",69,0)
 ;
"RTN","SDCO0",70,0)
AE(SDARY,SDOE,SDLINE,SDTOT,SDONE) ; -- add/edits
"RTN","SDCO0",71,0)
 N SDOE0,SDT,DFN,SDVIEN,CPTS,SDCNT,SDVCPT0,SDVCPT,SDSCD0,X
"RTN","SDCO0",72,0)
 S SDOE0=$G(^SCE(+SDOE,0))
"RTN","SDCO0",73,0)
 S SDT=+SDOE0
"RTN","SDCO0",74,0)
 S DFN=+$P(SDOE0,"^",2)
"RTN","SDCO0",75,0)
 S SDSC=+$P(SDOE0,U,3)
"RTN","SDCO0",76,0)
 S SDCL=+$P(SDOE0,U,4)
"RTN","SDCO0",77,0)
 S SDVIEN=+$P(SDOE0,U,5)
"RTN","SDCO0",78,0)
 ;
"RTN","SDCO0",79,0)
 ; -- quit if visit already processed
"RTN","SDCO0",80,0)
 G:$D(SDONE(SDVIEN)) AEQ
"RTN","SDCO0",81,0)
 ;
"RTN","SDCO0",82,0)
 S SDSCD0=$G(^DIC(40.7,SDSC,0))
"RTN","SDCO0",83,0)
 S SDLINE=SDLINE+1
"RTN","SDCO0",84,0)
 D SET(SDARY,SDLINE,$P(SDSCD0,"^",2)_"  "_$E($P(SDSCD0,"^"),1,30),5,"","","","","",.SDTOT)
"RTN","SDCO0",85,0)
 ;
"RTN","SDCO0",86,0)
 ; -- get cpts and loop
"RTN","SDCO0",87,0)
 D GETCPT^SDOE(SDOE,"CPTS")
"RTN","SDCO0",88,0)
 S (SDCNT,SDVCPT)=0
"RTN","SDCO0",89,0)
 N MODINFO,MODPTR,MODTEXT,PTR,MODCODE,CPTINFO,ICPTVDT
"RTN","SDCO0",90,0)
 F  S SDVCPT=+$O(CPTS(SDVCPT)) Q:'SDVCPT  D
"RTN","SDCO0",91,0)
 .; S SDVCPT0=$G(CPTS(SDVCPT))
"RTN","SDCO0",92,0)
 .; S SDCNT=SDCNT+1
"RTN","SDCO0",93,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",94,0)
 . D SET(SDARY,SDLINE,"Procedure(s):",12,"","","","","",.SDTOT)
"RTN","SDCO0",95,0)
 .;
"RTN","SDCO0",96,0)
 .; IF $D(^ICPT(+SDVCPT0,0)) S X=^(0) D
"RTN","SDCO0",97,0)
 .; N CPTINFO
"RTN","SDCO0",98,0)
 . S ICPTVDT=$S($P(CPTS(SDVCPT),"^",3)'="":$$GET1^DIQ(9000010,$P(CPTS(SDVCPT),"^",3),.01,"I"),1:"")
"RTN","SDCO0",99,0)
 . S CPTINFO=$$CPT^ICPTCOD(+$G(CPTS(SDVCPT)),ICPTVDT,1)
"RTN","SDCO0",100,0)
 . S:CPTINFO>0 X=$P(CPTINFO,"^",2,99),X=$P(X,"^")_" x "_$P($G(CPTS(SDVCPT)),"^",16)_"  "_$P(X,"^",2)
"RTN","SDCO0",101,0)
 . S:CPTINFO'>0 X="Procedure not defined"
"RTN","SDCO0",102,0)
 . ;
"RTN","SDCO0",103,0)
 . D SET(SDARY,SDLINE,$E(X,1,40),27,"","","","","",.SDTOT)
"RTN","SDCO0",104,0)
 . ;
"RTN","SDCO0",105,0)
 . ;Retrieve Procedure (CPT) Codes and associated Modifiers
"RTN","SDCO0",106,0)
 . S PTR=0
"RTN","SDCO0",107,0)
 . F  S PTR=+$O(CPTS(SDVCPT,1,PTR)) Q:'PTR  D
"RTN","SDCO0",108,0)
 . . S MODPTR=$G(CPTS(SDVCPT,1,PTR,0))
"RTN","SDCO0",109,0)
 . . Q:'MODPTR
"RTN","SDCO0",110,0)
 . . S MODINFO=$$MOD^ICPTMOD(MODPTR,"I",ICPTVDT,1)
"RTN","SDCO0",111,0)
 . . Q:MODINFO'>0
"RTN","SDCO0",112,0)
 . . S MODCODE="-"_$P(MODINFO,"^",2)
"RTN","SDCO0",113,0)
 . . S MODTEXT=$P(MODINFO,"^",3)
"RTN","SDCO0",114,0)
 . . S SDLINE=SDLINE+1
"RTN","SDCO0",115,0)
 . . D SET(SDARY,SDLINE,MODCODE,29,"","","","","",.SDTOT)
"RTN","SDCO0",116,0)
 . . D SET(SDARY,SDLINE,MODTEXT,38,"","","","","",.SDTOT)
"RTN","SDCO0",117,0)
 . . Q
"RTN","SDCO0",118,0)
 ;
"RTN","SDCO0",119,0)
 ; -- set indicator that visit was processed
"RTN","SDCO0",120,0)
 S SDONE(SDVIEN)=""
"RTN","SDCO0",121,0)
AEQ Q
"RTN","SDCO0",122,0)
 ;
"RTN","SDCO0",123,0)
SET(SDARY,LINE,TEXT,COL,ON,OFF,SDSUB,SDCNT,SDATA,SDTOT) ; -- set display array
"RTN","SDCO0",124,0)
 N X
"RTN","SDCO0",125,0)
 S:LINE>SDTOT SDTOT=LINE
"RTN","SDCO0",126,0)
 S X=$S($D(^TMP(SDARY,$J,LINE,0)):^(0),1:"")
"RTN","SDCO0",127,0)
 S ^TMP(SDARY,$J,LINE,0)=$$SETSTR^VALM1(TEXT,X,COL,$L(TEXT))
"RTN","SDCO0",128,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(LINE,COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","SDCO0",129,0)
 S:$G(SDSUB)]"" ^TMP("SDCOIDX",$J,SDSUB,SDCNT,SDLINE)=SDATA,^TMP("SDCOIDX",$J,SDSUB,0)=SDCNT
"RTN","SDCO0",130,0)
 Q
"RTN","SDCO41")
0^6^B2735484
"RTN","SDCO41",1,0)
SDCO41 ;ALB/RMO - Diagnosis Cont. - Check Out;19 MAR 1993 9:15 am
"RTN","SDCO41",2,0)
 ;;5.3;Scheduling;**15,351**;Aug 13, 1993
"RTN","SDCO41",3,0)
 ;
"RTN","SDCO41",4,0)
DXHLP(SDCL) ;Diagnosis Help for Clinic
"RTN","SDCO41",5,0)
 ; Input  -- SDCL     Hospital Location file IEN
"RTN","SDCO41",6,0)
 ; Output -- Help
"RTN","SDCO41",7,0)
 N C,DIRUT,I,SDDXD,SDDXDF,SDICDI
"RTN","SDCO41",8,0)
 I '$O(^SC(SDCL,"DX",0)) G DXHLPQ
"RTN","SDCO41",9,0)
 W !!,"The following diagnoses are associated with ",$$LOWER^VALM1($P($G(^SC(SDCL,0)),"^")),":"
"RTN","SDCO41",10,0)
 W !!,"Default Diagnosis: " S SDDXDF=$$DXDEF(SDCL) W $S(SDDXDF:$P(SDDXDF,"^")_"  "_$P(SDDXDF,"^",2),1:"[None]")
"RTN","SDCO41",11,0)
 W !!,"Other diagnoses: "
"RTN","SDCO41",12,0)
 S (C,I)=0 F  S I=$O(^SC(SDCL,"DX",I)) Q:'I!($D(DIRUT))  I $D(^(I,0)) S SDICDI=+^(0) I '$D(^SC("ADDX",SDCL,I)) D
"RTN","SDCO41",13,0)
 .S C=C+1,SDDXD=$$DX(SDICDI)
"RTN","SDCO41",14,0)
 .W:C=1 !
"RTN","SDCO41",15,0)
 .D PAUSE^VALM1:'(C#20) Q:$D(DIRUT)  W:(C#2) ! W:'(C#2) ?40
"RTN","SDCO41",16,0)
 .W $P(SDDXD,"^"),?($X+(8-$L($P(SDDXD,"^")))),$P(SDDXD,"^",2)
"RTN","SDCO41",17,0)
 W:'C "None"
"RTN","SDCO41",18,0)
DXHLPQ Q
"RTN","SDCO41",19,0)
 ;
"RTN","SDCO41",20,0)
DXDEF(SDCL) ;Diagnosis Default for Clinic
"RTN","SDCO41",21,0)
 ; Input  -- SDCL     Hospital Location file IEN
"RTN","SDCO41",22,0)
 ; Output -- Default
"RTN","SDCO41",23,0)
 N Y
"RTN","SDCO41",24,0)
 I $D(^SC("ADDX",SDCL)),$D(^SC(SDCL,"DX",+$O(^(SDCL,0)),0)) S Y=$$DX(+^(0))
"RTN","SDCO41",25,0)
 Q $G(Y)
"RTN","SDCO41",26,0)
 ;
"RTN","SDCO41",27,0)
DX(SDICDI,SDDXDT) ;Diagnosis Display Data
"RTN","SDCO41",28,0)
 ; Input  -- SDICDI   IDC Diagnosis IEN
"RTN","SDCO41",29,0)
 ;        -- SDDXDT   Date to screen against
"RTN","SDCO41",30,0)
 ; Output -- Diagnosis Display Data - Code Number^Diagnosis
"RTN","SDCO41",31,0)
 N Y,SDXINF
"RTN","SDCO41",32,0)
 S SDXINF=$$ICDDX^ICDCODE(SDICDI,$G(SDDXDT,$G(ICDVDT)))
"RTN","SDCO41",33,0)
 S Y=$S(+SDXINF>0:$P(SDXINF,"^",2)_"^"_$P(SDXINF,"^",4),1:"^Unknown")
"RTN","SDCO41",34,0)
 Q $G(Y)
"VER")
8.0^22.0
**INSTALL NAME**
DG*5.3*606
"BLD",4106,0)
DG*5.3*606^REGISTRATION^0^3040812^y
"BLD",4106,4,0)
^9.64PA^^
"BLD",4106,"ABPKG")
n
"BLD",4106,"KRN",0)
^9.67PA^8989.52^19
"BLD",4106,"KRN",.4,0)
.4
"BLD",4106,"KRN",.401,0)
.401
"BLD",4106,"KRN",.402,0)
.402
"BLD",4106,"KRN",.403,0)
.403
"BLD",4106,"KRN",.5,0)
.5
"BLD",4106,"KRN",.84,0)
.84
"BLD",4106,"KRN",3.6,0)
3.6
"BLD",4106,"KRN",3.8,0)
3.8
"BLD",4106,"KRN",9.2,0)
9.2
"BLD",4106,"KRN",9.8,0)
9.8
"BLD",4106,"KRN",9.8,"NM",0)
^9.68A^15^15
"BLD",4106,"KRN",9.8,"NM",1,0)
VAFHLDG1^^0^B30958025
"BLD",4106,"KRN",9.8,"NM",2,0)
VAFHCDG^^0^B10344466
"BLD",4106,"KRN",9.8,"NM",3,0)
VAFHLPR1^^0^B17081141
"BLD",4106,"KRN",9.8,"NM",4,0)
DGPTDRG^^0^B25668958
"BLD",4106,"KRN",9.8,"NM",5,0)
DGPTFM2^^0^B73696104
"BLD",4106,"KRN",9.8,"NM",6,0)
DGPTLMU6^^0^B8349405
"BLD",4106,"KRN",9.8,"NM",7,0)
DG1010S1^^0^B31997516
"BLD",4106,"KRN",9.8,"NM",8,0)
DG3PR2^^0^B16051647
"BLD",4106,"KRN",9.8,"NM",9,0)
DGPTFMO^^0^B26073214
"BLD",4106,"KRN",9.8,"NM",10,0)
DGPTICD^^0^B8396264
"BLD",4106,"KRN",9.8,"NM",11,0)
DGPTLMU5^^0^B11114229
"BLD",4106,"KRN",9.8,"NM",12,0)
DGPTODI3^^0^B21618176
"BLD",4106,"KRN",9.8,"NM",13,0)
DGPTTRIM^^0^B3137495
"BLD",4106,"KRN",9.8,"NM",14,0)
DGPTFM^^0^B41877218
"BLD",4106,"KRN",9.8,"NM",15,0)
DGPTFM5^^0^B12890159
"BLD",4106,"KRN",9.8,"NM","B","DG1010S1",7)

"BLD",4106,"KRN",9.8,"NM","B","DG3PR2",8)

"BLD",4106,"KRN",9.8,"NM","B","DGPTDRG",4)

"BLD",4106,"KRN",9.8,"NM","B","DGPTFM",14)

"BLD",4106,"KRN",9.8,"NM","B","DGPTFM2",5)

"BLD",4106,"KRN",9.8,"NM","B","DGPTFM5",15)

"BLD",4106,"KRN",9.8,"NM","B","DGPTFMO",9)

"BLD",4106,"KRN",9.8,"NM","B","DGPTICD",10)

"BLD",4106,"KRN",9.8,"NM","B","DGPTLMU5",11)

"BLD",4106,"KRN",9.8,"NM","B","DGPTLMU6",6)

"BLD",4106,"KRN",9.8,"NM","B","DGPTODI3",12)

"BLD",4106,"KRN",9.8,"NM","B","DGPTTRIM",13)

"BLD",4106,"KRN",9.8,"NM","B","VAFHCDG",2)

"BLD",4106,"KRN",9.8,"NM","B","VAFHLDG1",1)

"BLD",4106,"KRN",9.8,"NM","B","VAFHLPR1",3)

"BLD",4106,"KRN",19,0)
19
"BLD",4106,"KRN",19.1,0)
19.1
"BLD",4106,"KRN",101,0)
101
"BLD",4106,"KRN",409.61,0)
409.61
"BLD",4106,"KRN",771,0)
771
"BLD",4106,"KRN",870,0)
870
"BLD",4106,"KRN",8989.51,0)
8989.51
"BLD",4106,"KRN",8989.52,0)
8989.52
"BLD",4106,"KRN",8994,0)
8994
"BLD",4106,"KRN","B",.4,.4)

"BLD",4106,"KRN","B",.401,.401)

"BLD",4106,"KRN","B",.402,.402)

"BLD",4106,"KRN","B",.403,.403)

"BLD",4106,"KRN","B",.5,.5)

"BLD",4106,"KRN","B",.84,.84)

"BLD",4106,"KRN","B",3.6,3.6)

"BLD",4106,"KRN","B",3.8,3.8)

"BLD",4106,"KRN","B",9.2,9.2)

"BLD",4106,"KRN","B",9.8,9.8)

"BLD",4106,"KRN","B",19,19)

"BLD",4106,"KRN","B",19.1,19.1)

"BLD",4106,"KRN","B",101,101)

"BLD",4106,"KRN","B",409.61,409.61)

"BLD",4106,"KRN","B",771,771)

"BLD",4106,"KRN","B",870,870)

"BLD",4106,"KRN","B",8989.51,8989.51)

"BLD",4106,"KRN","B",8989.52,8989.52)

"BLD",4106,"KRN","B",8994,8994)

"BLD",4106,"QUES",0)
^9.62^^
"BLD",4106,"REQB",0)
^9.611^8^7
"BLD",4106,"REQB",1,0)
DG*5.3*511^2
"BLD",4106,"REQB",3,0)
DG*5.3*594^2
"BLD",4106,"REQB",4,0)
DG*5.3*599^2
"BLD",4106,"REQB",5,0)
ICD*18.0*12^2
"BLD",4106,"REQB",6,0)
ICPT*6.0*19^2
"BLD",4106,"REQB",7,0)
DG*5.3*158^2
"BLD",4106,"REQB",8,0)
DG*5.3*243^2
"BLD",4106,"REQB","B","DG*5.3*158",7)

"BLD",4106,"REQB","B","DG*5.3*243",8)

"BLD",4106,"REQB","B","DG*5.3*511",1)

"BLD",4106,"REQB","B","DG*5.3*594",3)

"BLD",4106,"REQB","B","DG*5.3*599",4)

"BLD",4106,"REQB","B","ICD*18.0*12",5)

"BLD",4106,"REQB","B","ICPT*6.0*19",6)

"MBREQ")
1
"PKG",114,-1)
1^1
"PKG",114,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",114,20,0)
^9.402P^^
"PKG",114,22,0)
^9.49I^1^1
"PKG",114,22,1,0)
5.3^2930813^2930821
"PKG",114,22,1,"PAH",1,0)
606^3040812^100996
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","DG1010S1")
0^7^B31997516
"RTN","DG1010S1",1,0)
DG1010S1 ;ALB/MRL - SUPPLEMENTAL DATA SHEET FOR 10-10 ; 19 JUN 86
"RTN","DG1010S1",2,0)
 ;;5.3;Registration;**606**;Aug 13, 1993
"RTN","DG1010S1",3,0)
 ;;MAS VERSION 5.1;
"RTN","DG1010S1",4,0)
 ;
"RTN","DG1010S1",5,0)
 ;INPUT: DFN  = IEN OF PATIENT FILE
"RTN","DG1010S1",6,0)
 ;       DFN1 = INVERSE DISPOSTION TIME
"RTN","DG1010S1",7,0)
EN ;
"RTN","DG1010S1",8,0)
 S DGLDOUBL="",$P(DGLDOUBL,"=",132)=""
"RTN","DG1010S1",9,0)
 S DGLSUP="",$P(DGLSUP,"- ",62)="",$P(DGLSUP,"- ",43)=" |"
"RTN","DG1010S1",10,0)
 S DGLSUP1="",$P(DGLSUP1,"-",123)="",$P(DGLSUP1,"-",86)="|"
"RTN","DG1010S1",11,0)
 F I="INE","DIS",0,.15,.24,.361 S DGP(I)=$G(^DPT(DFN,I))
"RTN","DG1010S1",12,0)
 S DGD=$G(^DPT(DFN,"DIS",DFN1,0)),Y=$P(DGD,U,1) X ^DD("DD") S DGAP=Y,DGCLK=$S($D(^VA(200,+$P(DGD,U,5),0)):$S($P(^(0),U,2)]"":$P(^(0),U,2)_"/"_$P(DGD,U,5),1:"unk/"_$P(DGD,U,5)),1:"unspecified"),DGNAM=$P(DGP(0),U,1)
"RTN","DG1010S1",13,0)
 S DGSS=$P(DGP(0),U,9),DGSS=$E(DGSS,1,3)_"-"_$E(DGSS,4,5)_"-"_$E(DGSS,6,10)
"RTN","DG1010S1",14,0)
 S DGLDOUBL=$E(DGLDOUBL,1,127)
"RTN","DG1010S1",15,0)
 I $$FIRST^DGUTL G Q^DG1010S2
"RTN","DG1010S1",16,0)
 W !?5,DGLDOUBL,!?5
"RTN","DG1010S1",17,0)
 S X=$$SITE^VASITE W $S((+X=-1):"FACILITY NOT IDENTIFIED",1:$P(X,U,2)_" ("_$P(X,U,3)_")")
"RTN","DG1010S1",18,0)
 W ?105,"SUPPLEMENTAL DATA SHEET",!?5,DGLDOUBL,!?5,"1.  Applicant's Name:  ",DGNAM,?90,"| 2.  SSN:  ",DGSS,!?5,DGLSUP1,!?5,"3.  Other Name(s):  "
"RTN","DG1010S1",19,0)
 S I1="" F I=0:0 S I=$O(^DPT(DFN,.01,I)) Q:I'>0  S I1=1,DGD=$P(^(I,0),U,1),DGD(1)=$P(^(0),U,2),DGD=DGD_$S($L(DGD(1)):" ("_$E(DGD(1),1,3)_"-"_$E(DGD(1),4,5)_"-"_$E(DGD(1),6,10)_")",1:"")_"; " W:(128-$X)<$L(DGD) !?9 W DGD
"RTN","DG1010S1",20,0)
 W:'I1 "NO ALIAS' ON FILE" K DGD,I,I1 S DGD=$S($L($P(DGP(0),U,10)):$P(DGP(0),U,10),1:"NO REMARKS CURRENTLY ENTERED FOR THIS APPLICANT") W !?5,DGLSUP1,!?5,"4.  Remarks:  ",DGD,!?5,DGLSUP1
"RTN","DG1010S1",21,0)
 S DGD=DGP(.24) W !?5,"5.  Fathers Name:  ",$S($L($P(DGD,U,1)):$P(DGD,U,1),1:"NOT SPECIFIED"),?90,"|"
"RTN","DG1010S1",22,0)
 W !?9,"Mothers Name:  ",$S($L($P(DGD,U,2)):$P(DGD,U,2),1:"NOT SPECIFIED"),?90,"|",!?9,"Mothers Maiden Name:  ",$S($L($P(DGD,U,3)):$P(DGD,U,3),1:"NOT SPECIFIED"),?90,"|",!?5,DGLSUP1
"RTN","DG1010S1",23,0)
 W !?5,"6a. Enrollment Clinic(s):  " S I1="" F I=0:0 S I=$O(^DPT(DFN,"DE",I)) Q:I'>0  I $P(^(I,0),U,2)'="I" S I1=I1+1,DGD=$S($D(^SC(+^(0),0)):$P(^(0),U,1)_", ",1:"") W:(128-$X)<$L(DGD) !?9 W DGD
"RTN","DG1010S1",24,0)
 W:'I1 "NOT ACTIVELY ENROLLED IN ANY CLINICS AT THIS TIME" K DGD,I,I1 W !?5,DGLSUP,!?5,"6b. Future Appointments:  " S I1="",I2=DT_".9999"
"RTN","DG1010S1",25,0)
 F J=0:0 S I2=$O(^DPT(DFN,"S",I2)) Q:I2=""  I $S($P(^(I2,0),U,2)']"":1,$P(^(0),U,2)="I":1,1:0) S DGD(1)=+$P(^(0),U,1),Y=I2 X ^DD("DD") S DGD=$S($D(^SC(+DGD(1),0)):$P(^(0),U,1),1:"UNKNOWN")_" ("_Y_"), ",I1=1 W:(128-$X)<$L(DGD) !?9 W DGD
"RTN","DG1010S1",26,0)
 W:'I1 "NO PENDING APPOINTMENTS ON FILE" W !?5,DGLSUP1,!?5,"7a. Last Admission:  "
"RTN","DG1010S1",27,0)
 S DGAD=$S('$D(^DPT(DFN,.1)):0,'$L(^DPT(DFN,.1)):0,1:1),DGD=$O(^DGPM("ATID1",DFN,+$S(DGAD:$O(^DGPM("ATID1",DFN,0)),1:0))) I DGD'>0 W "NO PREVIOUS ADMISSIONS TO THIS FACILITY ON FILE" G EL
"RTN","DG1010S1",28,0)
 S DGD=$O(^DGPM("ATID1",DFN,DGD,0)) I $S('$D(^DGPM(+DGD,0)):1,'$D(^DGPT(+$P(^(0),"^",16),0)):1,1:0) W "LAST ADMISSION PTF DATA NO LONGER STORED" G EL
"RTN","DG1010S1",29,0)
 S DGD=+$P(^DGPM(+DGD,0),"^",16),Y=+^(0),DGDAT=Y
"RTN","DG1010S1",30,0)
 X ^DD("DD") W Y S Y=$P($S($D(^DGPT(DGD,70)):^(70),1:0),U,1) X ^DD("DD") W:Y]"" "   (DISCHARGED '"_Y_"')" W !?5,DGLSUP,!?5,"7b. Discharge Diagnosis(es):  " S I1=$S($D(^DGPT(DGD,"M",1,0)):^(0),1:0)
"RTN","DG1010S1",31,0)
 S I3="" F I=5:1:15 I I'=10 S I2=$P(I1,U,I) Q:'I2  S I3=1,I2=$$ICDDX^ICDCODE(I2,DGDAT),I2=$S(+I2>0:"("_$P(I2,U,2)_")-"_$P(I2,U,4)_"; ",1:"") W:(128-$X)<$L(I2) !?9 W I2
"RTN","DG1010S1",32,0)
 W:'I3 "NO DIAGNOSES ON FILE FOR THIS ADMISSION PERIOD YET",!?5,DGLSUP S DGD(1)=$S($D(^DGPT(DGD,70)):^(70),1:0),X="UNSPECIFIED",I2=$$ICDDX^ICDCODE(+$P(DGD(1),U,11),DGDAT),X=$S('DGD(1):X,+I2>0:"("_$P(I2,U,2)_")-"_$P(I2,U,4),1:X)
"RTN","DG1010S1",33,0)
 W !?5,"7c. Admit Diagnosis:  ",X,!?5,DGLSUP,!?5,"7d. Diagnosis Responsible for Greatest Length of Stay:  " S X="UNSPECIFIED",I2=$$ICDDX^ICDCODE(+$P(DGD(1),U,10),DGDAT),X=$S('DGD(1):X,+I2>0:"("_$P(I2,U,2)_")-"_$P(I2,U,4),1:X) W X
"RTN","DG1010S1",34,0)
EL W !?5,DGLSUP1 S DGD=DGP(.361),DGD(1)=$P(DGD,U,5),DGD(2)=$P(DGD,U,6),Y=$P(DGD,U,2),DGD=$P(DGD,U,1),DGD(1)=$S($L(DGD(1)):DGD(1),'$L(DGD):"NOT APPLICABLE",1:"NOT VERIFIED")
"RTN","DG1010S1",35,0)
 S DGD(2)=$S(+DGD(2):$S($D(^VA(200,+DGD(2),0)):$P(^(0),U,1),1:"UNKNOWN"),'$L(DGD):"NOT APPLICABLE",1:"NOT SPECIFIED") X:+Y ^DD("DD") S Y=$S($L(Y):Y,'$L(DGD):"NOT APPLICABLE",1:"NOT SPECIFIED")
"RTN","DG1010S1",36,0)
 W !?5,"8.  Eligibility Status:  ",$S(DGD="P":"PENDING VERIFICATION",DGD="R":"PENDING RE-VERIFICATION",DGD="V":"VERIFIED",1:"UNKNOWN OR NONE"),?90,"| Status Date:  ",Y,!?9,"Verification Method:  ",DGD(1),?90,"| By:  ",DGD(2)
"RTN","DG1010S1",37,0)
 S Y=$P(DGP(.15),U,2),DGD=DGP("INE") X:+Y ^DD("DD") S DGEL=$S('$L(Y)!(Y=0):1,1:0),Y=$S('DGEL:Y,1:"ELIGIBLE APPLICANT -- NOT APPLICABLE") W !?9,"Ineligible Date:  ",Y I DGEL F I=1:1:4 S DGD(I)="NOT APPLICABLE"
"RTN","DG1010S1",38,0)
 G:DGEL C S DGD(1)=$P(DGD,U,1),DGD(1)=$S(DGD(1)=1:"VAMC",DGD(1)=2:"REGIONAL OFFICE",DGD(2)=3:"RPC",1:"UNKNOWN"),DGD(2)=$S($L($P(DGD,U,3)):$P(DGD,U,3),1:"CITY UNKNOWN"),DGD(3)=$S($D(^DIC(5,+$P(DGD,U,4),0)):$P(^(0),U,1),1:"STATE UNKNOWN")
"RTN","DG1010S1",39,0)
 S DGD(4)=$S($P(DGD,U,6)]"":$P(DGD,U,6),1:"VARO DECISION UNKNOWN")
"RTN","DG1010S1",40,0)
C W ?90,"| TWX Source:  ",DGD(1),!?9,"TWX City:  ",DGD(2),?90,"| TWX State:  ",$E(DGD(3),1,26),!?9,"VARO Decision:  ",DGD(4),!?5,DGLSUP1
"RTN","DG1010S1",41,0)
 K DGAD,DGD,DGEL,I,I1,I2,Y,DGDAT G ^DG1010S2
"RTN","DG3PR2")
0^8^B16051647
"RTN","DG3PR2",1,0)
DG3PR2 ;ALB/MIR - CONTINUATION OF THE THIRD PARTY REIMBURSEMENT ; NOV 21 90@8
"RTN","DG3PR2",2,0)
 ;;5.3;Registration;**26,606**;Aug 13, 1993
"RTN","DG3PR2",3,0)
 S DGINS=0 W !!,"INSURANCE TYPE",?24,"INSURANCE #",?45,"GROUP #",?63,"EXPIRES   HOLDER",!,"--------- ----",?24,"--------- -",?45,"----- -",?63,"-------   ------"
"RTN","DG3PR2",4,0)
 D ALL^IBCNS1(DFN,"DGIBINS") F I=0:0 S I=$O(DGIBINS(I)) Q:'I  S J=DGIBINS(I,0) S X=$G(^DIC(36,+J,0)) W !,$S($P(X,"^",2)="N":"*",1:""),$E($P(X,"^",1),1,22),?24,$P(J,"^",2),?45,$P(J,"^",3) S DGINS=$S($P(X,"^",2)="N":1,1:0) D INS2
"RTN","DG3PR2",5,0)
 I DGINS W !?22,"* - Insurer may not reimburse!"
"RTN","DG3PR2",6,0)
 K DGINS,DGIBINS
"RTN","DG3PR2",7,0)
 S Y=+DGAD X ^DD("DD") W !!,"Admitted: ",Y,?40,"Discharged: " S Y=+DGDC I Y X ^DD("DD") W Y
"RTN","DG3PR2",8,0)
 I $P(DGAD,"^",18)=9 W !,"Transferred in From ",$S($D(^DIC(4,+$P(DGAD,"^",5),0)):$P(^(0),"^",1),1:"")
"RTN","DG3PR2",9,0)
 S DGPTF=$P(DGAD,"^",16) I 'DGPTF!('$D(^DGPT(+DGPTF,0))) W !,"No PTF Record Exists" Q
"RTN","DG3PR2",10,0)
 I '$D(^DGP(45.84,DGPTF)) W !,"PTF Record not closed",!
"RTN","DG3PR2",11,0)
 K ^UTILITY("DG") F I=0:0 S I=$O(^DGPT(DGPTF,"M",I)) Q:'I  S J=^(I,0) S:$P(J,"^",2) ^UTILITY("DG",$J,"M",+$P(J,"^",10))=J
"RTN","DG3PR2",12,0)
 F I=0:0 S I=$O(^DGPT(DGPTF,"S",I)) Q:'I  D HEAD:$Y>(IOSL-5) Q:'DGFL  S J=^DGPT(DGPTF,"S",I,0),^UTILITY("DG",$J,"S",+J)=J
"RTN","DG3PR2",13,0)
 Q:'DGFL  I $O(^UTILITY("DG",$J,"M",0)) W !!,"DATE",?22,"LOS BEDSECTION",?39,"LOS",?45,"DIAGNOSES",!,"----",?22,"---------------",?39,"----  ---------"
"RTN","DG3PR2",14,0)
 N DGDAT,DXD
"RTN","DG3PR2",15,0)
 S DGDAT=$P(^DGPT(DGPTF,0),"^",2)
"RTN","DG3PR2",16,0)
 S DGPR=DGAD F I=0:0 S I=$O(^UTILITY("DG",$J,"M",I)) Q:'I  S J=^(I) D HEAD:$Y>(IOSL-5) Q:'DGFL  S (DGDAT,Y)=I X ^DD("DD") D LOL W !,Y,?22,$E($S($D(^DIC(42.4,+$P(J,"^",2),0)):$P(^(0),"^",1),1:""),1,16),?39,$J(DGLOL,4) D DIAG S DGPR=I
"RTN","DG3PR2",17,0)
 ;Q:'DGFL  S DGPMIFN=DGCA D ^DGPMLOS W !?39,"----  ----------",!?26,"TOTAL LOS:",?39,$J(+$P(X,"^",5),4),?45,$S($D(^ICD9(+$S($D(^DGPT(DGPTF,70)):$P(^(70),"^",10),1:""),0)):"DXLS: "_$P(^(0),"^",1)_" ("_$P(^(0),"^",3)_")",1:"")
"RTN","DG3PR2",18,0)
 Q:'DGFL  S DGPMIFN=DGCA
"RTN","DG3PR2",19,0)
 D ^DGPMLOS W !?39,"----  ----------",!?26,"TOTAL LOS:",?39,$J(+$P(X,"^",5),4) S DXD=+$S($D(^DGPT(DGPTF,70)):$P(^(70),"^",10),1:0),DXD=$S(+DXD:$$ICDDX^ICDCODE(DXD,DXDAT),1:"") W ?45,$S(+DXD>0:"DXLS: "_$P(DXD,"^",2)_" ("_$P(DXD,"^",4)_")",1:"")
"RTN","DG3PR2",20,0)
 Q:'$O(^UTILITY("DG",$J,"S",0))  D HEAD:$Y>(IOSL-10) Q:'DGFL  W !!,"SURGERY DATE",?22,"SPECIALTY",?45,"OP CODES",!,"------------",?22,"----------",?44,"--------"
"RTN","DG3PR2",21,0)
 F I=0:0 S I=$O(^UTILITY("DG",$J,"S",I)) Q:'I  S J=^(I),(DGDAT,Y)=I X ^DD("DD") W !,Y,?22,$E($S($D(^DIC(45.3,+$P(J,"^",3),0)):$P(^(0),"^",2),1:""),1,16) D OP
"RTN","DG3PR2",22,0)
 Q
"RTN","DG3PR2",23,0)
DIAG S M=0 F K=5:1:15 I K'=10 S L=$P(J,"^",K) I L S DXD=$$ICDDX^ICDCODE(+L,$G(DGDAT)) W:M ! W ?45,$S(+DXD>0:$P(DXD,"^",2)_" ("_$P(DXD,"^",4)_")",1:"") S M=1
"RTN","DG3PR2",24,0)
 Q
"RTN","DG3PR2",25,0)
OP S M=0 F K=8:1:12 S L=$P(J,"^",K) I L S DXD=$$ICDOP^ICDCODE(+L,$G(DGDAT)) W:M ! W ?45,$S(+DXD>0:$P(DXD,"^",2)_" ("_$P(DXD,"^",5)_")",1:"") S M=1
"RTN","DG3PR2",26,0)
 Q
"RTN","DG3PR2",27,0)
LOL S X1=I,X2=DGPR D DTC S DGLOL=X
"RTN","DG3PR2",28,0)
 F K=DGPR+.0000005:0 S K=$O(^DGPM("APCA",DFN,DGCA,K)) Q:'K!(K>I)  S C=$O(^(+K,0)) I $D(^DGPM(+C,0)),"^2^3^13^43^44^45^"[("^"_$P(^(0),"^",18)_"^") S X1=$O(^DGPM("APCA",DFN,DGCA,K)),X1=$S('X1:I,X1>I:I,1:X1),X2=K D DTC S DGLOL=DGLOL-X
"RTN","DG3PR2",29,0)
 Q
"RTN","DG3PR2",30,0)
HEAD N I,J,K,L,M,Y I $E(IOST,1)="C" S DIR(0)="E" D ^DIR S DGFL=Y I 'DGFL Q
"RTN","DG3PR2",31,0)
 W @IOF,!,"THIRD PARTY REIMBURSEMENT",?49,"PRINTED:  ",DGNOW
"RTN","DG3PR2",32,0)
 W !,"("_$P(^DPT(DFN,0),"^",1)_")",!
"RTN","DG3PR2",33,0)
 Q
"RTN","DG3PR2",34,0)
INS2 ;insurance data continued
"RTN","DG3PR2",35,0)
 I $P(X,"^",2)="N" S DGINS=1
"RTN","DG3PR2",36,0)
 S X=$P(J,"^",4) W:X]"" ?63,$E(X,4,5),"/",$E(X,6,7),"/",$E(X,2,3) S X=$P(J,"^",6) W ?73,$S(X="v":"VETERAN",X="s":"SPOUSE",X="o":"OTHER",1:"UNKNOWN")
"RTN","DG3PR2",37,0)
 Q
"RTN","DG3PR2",38,0)
DTC N I,J,K,L,M,Y D ^%DTC Q
"RTN","DGPTDRG")
0^4^B25668958
"RTN","DGPTDRG",1,0)
DGPTDRG ;ALB/ABS - DRG Information Report User Prompts ; 3/12/02 4:44pm
"RTN","DGPTDRG",2,0)
 ;;5.3;Registration;**60,441,510,559,599,606**;Aug 13, 1993
"RTN","DGPTDRG",3,0)
 ;;ADL;Update for CSV Project;;Mar 28, 2003
"RTN","DGPTDRG",4,0)
 S U="^" D Q,DT^DICRW
"RTN","DGPTDRG",5,0)
PAT D EFFDATE G Q:$D(DUOUT),Q:$D(DTOUT)
"RTN","DGPTDRG",6,0)
 W !!,"Choose Patient from PATIENT file" S %=1 D YN^DICN G Q:%=-1
"RTN","DGPTDRG",7,0)
 I %Y["?"!('%) W !?3,"Enter <RET> for YES if you want DRGs for a patient from your PATIENT File",!?3,"Answer 'N' for NO if you want DRGs for a hypothetical patient" G PAT
"RTN","DGPTDRG",8,0)
 S DGPTHOW=% I %=2 S NAME="" G AGE
"RTN","DGPTDRG",9,0)
 N DOB S DIC="^DPT(",DIC(0)="AEQMZ" W ! D ^DIC G Q:Y'>0 S DFN=+Y,NAME=$P(Y(0),"^"),(DOB,AGE)=$P(Y(0),U,3),SEX=$P(Y(0),U,2),X1=DT,X2=AGE D ^%DTC S AGE=X\365.25 W "  AGE:",AGE
"RTN","DGPTDRG",10,0)
 ;I AGE<0!(AGE>124) W !,"Unacceptable AGE",!,"Grouper accepts age values from 0-124 years.",!,"Verify patient's age in PATIENT File before continuing." G Q
"RTN","DGPTDRG",11,0)
 S DGEXP=$S($D(^DPT(DFN,.35))#2:1,1:0) I DGEXP,'$P(^(.35),"^") S DGEXP=0
"RTN","DGPTDRG",12,0)
 G EXP:DGEXP,TRS
"RTN","DGPTDRG",13,0)
AGE R !!,"Patient's AGE: ",AGE:DTIME G Q:AGE["^"!('$T) S:AGE<0!(AGE="")!(AGE>124)!(AGE'?.N) AGE="?" I AGE["?" W !,"Enter a number for patient's age in years (0-124)" G AGE
"RTN","DGPTDRG",14,0)
SEX R !!,"Patient's SEX: MALE// ",X:DTIME G Q:X["^"!('$T) S Z="^MALE^FEMALE" I X="" S X="M" W X
"RTN","DGPTDRG",15,0)
 D IN^DGHELP I %=-1 W !?3,"Enter <RET> for MALE if hypothetical patient is male",!?3,"Enter 'F' for Female" G SEX
"RTN","DGPTDRG",16,0)
 S SEX=$E(X)
"RTN","DGPTDRG",17,0)
EXP W !!,"Did patient die during this episode" S %=2 D YN^DICN G Q:%=-1 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient did not die during the hospital",!?15,"stay for which this DRG is to be calculated",!?3,"Enter 'Y' for YES" G EXP
"RTN","DGPTDRG",18,0)
 S DGEXP=$S(%=1:1,1:0) I DGEXP S (DGTRS,DGDMS)=0 G DX
"RTN","DGPTDRG",19,0)
TRS W !!,"Transfer to an acute care facility" S %=2 D YN^DICN G Q:%=-1 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient not transfered to an acute care facility",!?3,"Enter 'Y' for YES if patient was transfered to acute care facility" G TRS
"RTN","DGPTDRG",20,0)
 S DGTRS=$S(%=1:1,1:0)
"RTN","DGPTDRG",21,0)
DMS W !!,"Discharged against medical advice" S %=2 D YN^DICN G Q:%=-1 I %Y["?"!('%) W !?3,"Enter <RET> for NO if patient did not leave against medical advice",!?3,"Enter 'Y' for YES if patient did leave against medical advice",!,*7 G DMS
"RTN","DGPTDRG",22,0)
 S DGDMS=$S(%=1:1,1:0)
"RTN","DGPTDRG",23,0)
DX N DXINF,ICDVDT S ICDVDT=DGDAT
"RTN","DGPTDRG",24,0)
 S (DGDX,DGSURG)="",DIC="^ICD9(",DIC(0)="AEQMZ",DIC("A")="Enter DXLS: ",DIC("S")="I '$P($$ICDDX^ICDCODE(+Y,DGDAT),U,5),($$ISVALID^ICDGTDRG(+Y,DGDAT,9))"
"RTN","DGPTDRG",25,0)
 W ! D ^DIC G Q:X["^"!(Y'>0) S DGPTTMP=$$ICDDX^ICDCODE(+Y,DGDAT) S:$P(DGPTTMP,U,10) DGDX=+Y,DXINF=$$ICDDX^ICDCODE(+Y,DGDAT),DGDX(1)=$P(DXINF,"^",2)_"^"_$P(DXINF,"^",4) I '$$ISVALID^ICDGTDRG(+Y,DGDAT,9) D INAC G DX
"RTN","DGPTDRG",26,0)
 S DIC("A")="Enter SECONDARY diagnosis: " S DIC("S")="I $$ISVALID^ICDGTDRG(+Y,DGDAT,9)" W !
"RTN","DGPTDRG",27,0)
 F DGI=2:1:5 D ^DIC Q:X["^"!(X="")  I +Y>0 S DGPTTMP=$$ICDDX^ICDCODE(+Y,DGDAT) S:DGPTTMP>0&($P(DGPTTMP,U,10)) DGDX=DGDX_"^"_+Y,DXINF=$$ICDDX^ICDCODE(+Y,DGDAT),DGDX(DGI)=$P(DXINF,"^",2)_"^"_$P(DXINF,"^",4) I '$P(DGPTTMP,U,10) D INAC S DGI=DGI-1
"RTN","DGPTDRG",28,0)
 G Q:X["^" S DIC("S")="I $$ISVALID^ICDGTDRG(+Y,DGDAT,0)",DIC="^ICD0(",DIC("A")="Enter Operation/Procedure: " W !
"RTN","DGPTDRG",29,0)
 F DGI=1:1:4 D ^DIC Q:X["^"!(X="")  I +Y>0 S DGSURG=+Y_"^"_DGSURG,DXINF=$$ICDOP^ICDCODE(+Y,DGDAT),DGSURG(DGI)=$P(DXINF,U,2)_U_$P(DXINF,U,5)
"RTN","DGPTDRG",30,0)
 ; added next line for DG*5.3*441
"RTN","DGPTDRG",31,0)
 S DGSURG=U_DGSURG
"RTN","DGPTDRG",32,0)
 G Q:X["^" I $D(DGPTODR) S DGVAR="AGE^NAME^SEX^DGDMS^DGEXP^DGTRS^DGDX#^DGSURG#^DGDAT",DGPGM="^DGPTODR" W ! D ZIS^DGUTQ G:POP Q U IO D ^DGPTODR,CLOSE^DGUTQ,Q S DGPTODR=1 G PAT
"RTN","DGPTDRG",33,0)
 S DGDRGPRT=1 D ^DGPTICD,Q G PAT  ;return DRG code even if inactive
"RTN","DGPTDRG",34,0)
Q K DFN,DGI,DGPGM,AGE,NAME,DGDMS,DGDX,DGEXP,DGPTHOW,DGSURG,DGTRS,DGVAR,DGDRGPRT,DRG,DIC,SEX,POP,X,Y,Z,X1,X2,%,%Y Q
"RTN","DGPTDRG",35,0)
 ;
"RTN","DGPTDRG",36,0)
EFFDATE ;prompts for effective date for DRG grouper?
"RTN","DGPTDRG",37,0)
 K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Effective Date"
"RTN","DGPTDRG",38,0)
 S DIR("?")="The effective to be used when calculating the DRG code for the patient."
"RTN","DGPTDRG",39,0)
 D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
"RTN","DGPTDRG",40,0)
 S DGDAT=Y
"RTN","DGPTDRG",41,0)
 Q
"RTN","DGPTDRG",42,0)
INAC ;
"RTN","DGPTDRG",43,0)
 W !,*7,">>> You have selected an INACTIVE diagnosis code."
"RTN","DGPTDRG",44,0)
 W !,"    This code is not used by the grouper and may cause"
"RTN","DGPTDRG",45,0)
 W !,"    the case to be grouped into DRG 470 - UNGROUPABLE.",!
"RTN","DGPTDRG",46,0)
 W !,"    Therefore, this diagnosis code will NOT be passed"
"RTN","DGPTDRG",47,0)
 W !,"    to the grouper. Please enter another code."
"RTN","DGPTFM")
0^14^B41877218
"RTN","DGPTFM",1,0)
DGPTFM ;ALB/MTC - PTF OP-PRO-DIAG ; 4/1/04 10:57am
"RTN","DGPTFM",2,0)
 ;;5.3;Registration;**510,517,590,594,606**;Aug 13, 1993
"RTN","DGPTFM",3,0)
 K M,S,M1,M2,M3,S1,S2,PS2,SDCLY,^TMP("PTF",$J)
"RTN","DGPTFM",4,0)
GET S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S (M3(I1),M(I1))=^(I,0) I $D(^DGPT(PTF,"M",I,"P")) S $P(M(I1),U,20)=^("P")
"RTN","DGPTFM",5,0)
 K MT D ORDER^DGPTF K MT D GETVAR^DGPTFM6,CL^SDCO21(DFN,$P(^DGPT(PTF,0),U,2),"",.SDCLY),MOB^DGPTFM2
"RTN","DGPTFM",6,0)
 S DGPC=I1-1 D WR K M1,M2,^UTILITY($J) S ST=1,M2=0
"RTN","DGPTFM",7,0)
DIAG K DGZSER,DGZPRO,DGZSUR S DGZDIAG=1 F J=ST:2:PM S NL=1,L5=0,L6=J D WD2 S L5=1,L6=J+1 D:$D(M(L6)) WD2 D WD G PRO1:$Y>16 D WD3^DGPTFM8 G PRO1:$Y>16 W !
"RTN","DGPTFM",8,0)
 S ST=1 G SER
"RTN","DGPTFM",9,0)
WD F J1=1:1:11 I J1'=6 S L=$P(M(J),U,J1+4),L1=0,L3=1 D:+L WD1 S L1=1,L=$S($D(M(J+1)):$P(M(J+1),U,J1+4),1:"") D:+L WD1
"RTN","DGPTFM",10,0)
 Q
"RTN","DGPTFM",11,0)
WD1 S N=$$ICDDX^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(N:$P(N,U,2,99),1:""),M2=M2+1,L4=$P(L2,"^",1),L4=L4_$E("   ",1,3-$L($P(L4,".",2)))
"RTN","DGPTFM",12,0)
 W:L3 ! S:L3 L3=0 W ?L1*40,$J(M2,3)," ",$J(L4,7)," ",$E($P(L2,U,3),1,25) K ^UTILITY($J,"M2",M2) S ^UTILITY($J,"M2",M2)=+M(J+L1)_U_J1 Q
"RTN","DGPTFM",13,0)
WD2 N Z3
"RTN","DGPTFM",14,0)
 X:NL "W ! S NL=0" W ?L5*40,"Move #",+L6 S Z=M(L6),Z3=M3(L6) W:+Z=1 " D/C" S Y=$P(Z,U,10)\1 D D^DGPTUTL W " ",Y," ",$S($D(^DIC(42.4,+$P(Z,U,2),0)):$E($P(^(0),U,1),1,10),1:"")
"RTN","DGPTFM",15,0)
 W " <",$S($P(Z3,U,18)=1:"",1:"N"),"SC"_$S($P(Z3,U,26)="Y":",AO",1:"")_$S($P(Z3,U,27)="Y":",IR",1:"")_$S($P(Z3,U,28)="Y":",EC",1:"")_">"
"RTN","DGPTFM",16,0)
 Q
"RTN","DGPTFM",17,0)
NDG D WR S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  S M(I1)=^(I,0)
"RTN","DGPTFM",18,0)
 S PM=I1-1 D ORDER^DGPTF K MT G DIAG:$D(ST) G GET S ST=1
"RTN","DGPTFM",19,0)
SER K DGZDIAG,DGZPRO,DGZSUR S DGZSER=1 G PRO1:$Y>19 K S1,S2 S S2=0 G SERV:ST G PRO
"RTN","DGPTFM",20,0)
SERV F J=ST:2:SU S NL=1,L5=0,L6=J D SD2 S L5=1,L6=J+1 D:$D(S(L6)) SD2 D SD G PRO1:$Y>11 D SD3^DGPTFM8 G PRO1:$Y>11 W !
"RTN","DGPTFM",21,0)
 G PRC^DGPTFM0
"RTN","DGPTFM",22,0)
SD F J1=1:1:5 S L=$P(S(J),U,J1+7),L1=0,L3=1 D:+L SD1 S L1=1,L=$S($D(S(J+1)):$P(S(J+1),U,J1+7),1:"") D:+L SD1
"RTN","DGPTFM",23,0)
 Q
"RTN","DGPTFM",24,0)
SD1 S N=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(N:$P(N,U,2,99),1:""),S2=S2+1,L4=$P(L2,"^",1),L4=L4_$E("   ",1,3-$L($P(L4,".",2)))
"RTN","DGPTFM",25,0)
 W:L3 ! S:L3 L3=0 W ?L1*40,$J(S2,3)," ",$J(L4,7)," ",$E($P(L2,U,4),1,25) K S2(S2) S S2(S2)=J+L1_U_J1 Q
"RTN","DGPTFM",26,0)
SD2 S Y=+S(L6) D D^DGPTUTL W:NL ! S:NL NL=0 W ?L5*40,L6,"-Surgery date: ",Y
"RTN","DGPTFM",27,0)
 Q
"RTN","DGPTFM",28,0)
NSR K S,S1,S2 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S S(I1)=^(I,0),S(I1,1)=I
"RTN","DGPTFM",29,0)
 S S2=0,SU=I1-1 D WR G SERV
"RTN","DGPTFM",30,0)
 ;
"RTN","DGPTFM",31,0)
WR W @IOF,HEAD,?70 S Z="<MAS>" D Z Q
"RTN","DGPTFM",32,0)
PRO K DGZSER,DGZDIAG,DGZSUR S DGZPRO=1 G PRO1:$Y>14 K P1,P2 S ST=1,P2=0 G NPR:'$D(PROC)
"RTN","DGPTFM",33,0)
PROC D:$Y>14 WR W:PROC]"" !!,"Procedures: ",!
"RTN","DGPTFM",34,0)
 F J1=1:1:5 S L=$P(PROC,"^",J1) I L'="" S P2=P2+1,N=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(N:$P(N,U,2,99),1:""),L4=$P(L2,U,1),L4=L4_$E("   ",1,3-$L($P(L4,".",2))) D
"RTN","DGPTFM",35,0)
 .W:$X>5 ?40 W $J(P2,3)," ",$J(L4,7)," ",$E($P(L2,"^",4),1,25) K P2(P2) S P2(P2)=J1 W:$X>45 !
"RTN","DGPTFM",36,0)
 K DGZSER,DGZPRO,DGZDIAG,DGZSUR
"RTN","DGPTFM",37,0)
ENC G PRO1:$Y>7,PRO1:'$P(DGZPRF,U,3)
"RTN","DGPTFM",38,0)
PF S PS2=0,J=+DGZPRF,Y=+DGZPRF(J),DGSTRT=$S(+$P(DGZPRF,U,4):$P(DGZPRF,U,4),1:4),DGLST=0
"RTN","DGPTFM",39,0)
 D CL^SDCO21(DFN,+DGZPRF(J),"",.SDCLY),ICDINFO^DGAPI(DFN,PTF),XREF^DGPTFM2 ; load SCI info and DGN's for this service date
"RTN","DGPTFM",40,0)
 D D^DGPTUTL W !,J,"-CPT Capture Date/Time: ",Y W:($P(DGZPRF,U,2)-1!($G(PGBRK))) " (cont.)"
"RTN","DGPTFM",41,0)
 I $P(DGZPRF(J),U,2) W !,?5,"Referring or Ordering Provider: " S L=$P(DGZPRF(J),U,2) D PRV
"RTN","DGPTFM",42,0)
 W !,?5,"Rendering Provider: " S L=$P(DGZPRF(J),U,3) D PRV
"RTN","DGPTFM",43,0)
 I $P(DGZPRF(J),U,5) W !,?5,"Rendering Location: ",$P($G(^SC($P(DGZPRF(J),U,5),0)),U)
"RTN","DGPTFM",44,0)
 S (L1,PGBRK)=0
"RTN","DGPTFM",45,0)
 F K=$P(DGZPRF,U,2):1 Q:'$D(DGZPRF(J,K))  I '$G(DGZPRF(J,K,9)) S PS2=PS2+1 W !,?2,PS2," " D CPT^DGPTFM2 D  Q:$Y+$G(DGZPRF(J,K+1,1))>16!($G(PGBRK))
"RTN","DGPTFM",46,0)
 . W !,?4 S $P(DS,"-",27)="" W DS," Related Diagnosis ",DS
"RTN","DGPTFM",47,0)
 . F L1=DGSTRT:1:11 S DGLOC=$S(L1<8:L1,1:L1+7),CD=$P(DGZPRF(J,K),U,DGLOC) I CD D  I $Y+$G(CKSCI)>16 S PGBRK=1 Q
"RTN","DGPTFM",48,0)
 . . S N=$$ICDDX^ICDCODE(CD,$$GETDATE^ICDGTDRG(PTF)),N=$S(N:$P(N,U,2,99),1:"")
"RTN","DGPTFM",49,0)
 . . S CD=$P(N,U) W !,?8,CD,"   ",$P(N,U,3)
"RTN","DGPTFM",50,0)
 . . D CKSCI($P(DGZPRF(J,K),U,DGLOC))
"RTN","DGPTFM",51,0)
 . S PS2(PS2)=J_U_K,CD=1,DGLOC=0,DGSTRT=4
"RTN","DGPTFM",52,0)
 I L1'=11,$S(L1<8:$P($G(DGZPRF(J,K)),U,L1+1,7),1:"")_$P($G(DGZPRF(J,K)),U,$S(L1<8:15,1:L1+8),18)?."^" S L1=11
"RTN","DGPTFM",53,0)
 I L1=11 S $P(DGZPRF,U,1,2)=$S($D(DGZPRF(J,K+1)):J_U_(K+1),1:J+1_U_1),$P(DGZPRF,U,4)="",PGBRK=0
"RTN","DGPTFM",54,0)
 E  S $P(DGZPRF,U,1,2)=J_U_K,$P(DGZPRF,U,4)=L1+1
"RTN","DGPTFM",55,0)
 ;I '$D(DGZPRF(J,K+1)) S $P(DGZPRF,U,1,2)=$S($P($G(DGZPRF(J,K)),U,NXTDGN)'="":J,1:J+1)_U_1,$P(DGZPRF,U,4)=DGLST
"RTN","DGPTFM",56,0)
 ;I $D(DGZPRF(J,K+1)) S $P(DGZPRF,U,1,2)=J_U_(K+1)
"RTN","DGPTFM",57,0)
 K I,K,L,L1,CD,N G PRO1
"RTN","DGPTFM",58,0)
 ;
"RTN","DGPTFM",59,0)
CKSCI(IEN)      ;print SCI for each Diagnosis code
"RTN","DGPTFM",60,0)
 N DGINFO Q:'$D(XREF(IEN))
"RTN","DGPTFM",61,0)
 S DGINFO=$G(^DGICD9(46.1,(XREF(IEN)),0)),CKSCI=0
"RTN","DGPTFM",62,0)
 I 'DGINFO Q
"RTN","DGPTFM",63,0)
 F I=3,7,1,2,4:1:6 I $D(SDCLY(I)) S L=$S(I=3:8,I<4:8+I,1:7+I) D
"RTN","DGPTFM",64,0)
 .W ?45 S M=1,CKSCI=CKSCI+1
"RTN","DGPTFM",65,0)
 .W $P("Treated for AO Condition^Treated for IR Condition^Treated for SC Condition^Exposed to Envir Contaminants^Treatment for MST^Treatment for Head/Neck CA^Related to Combat",U,I)
"RTN","DGPTFM",66,0)
 .I I'=7 W ":",$S($P(DGINFO,U,($S(I<3:I+2,I=3:2,1:I+1))):"YES",1:"NO"),!
"RTN","DGPTFM",67,0)
 .I I=7 W ":",$S($P(DGINFO,U,8)="Y":"YES",1:"NO"),!
"RTN","DGPTFM",68,0)
 Q  ;CKSCI
"RTN","DGPTFM",69,0)
 ;
"RTN","DGPTFM",70,0)
NPR S ST=1,PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:"") D WR G PRO
"RTN","DGPTFM",71,0)
 ;
"RTN","DGPTFM",72,0)
NPS D WR G PF
"RTN","DGPTFM",73,0)
 ;
"RTN","DGPTFM",74,0)
DONE G EN1^DGPTF4
"RTN","DGPTFM",75,0)
PRO1 ;SET MENU TYPE AND DISPLAY MENU
"RTN","DGPTFM",76,0)
 N ICDVDT,ICPTVDT
"RTN","DGPTFM",77,0)
 S (ICDVDT,ICPTVDT)=$S($D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM",78,0)
 S DGNUM=$S($D(DGZDIAG)!($D(DGZPRO))!($D(DGZSER))!($D(DGZSUR)!(+DGZPRF-1'=$P(DGZPRF,U,3))):"MAS",1:"701") G MAS^DGPTFJC:DGST F X=$Y:1:(IOSL-8) W !
"RTN","DGPTFM",79,0)
 W !! S Z="Patient Movements:" W Z S Z=" "_$S(DGPTFE:"M=Add PM  X=Delete PM",1:"M=Edit Treat Spec/PM ")_"  A=Add Code  D=Delete Code  V=Edit Mov" W Z
"RTN","DGPTFM",80,0)
 W ! S Z="Surgical Episodes:" W Z S Z=" S=Add SE  Z=Delete SE  O=Add Code  C=Delete Code  J=Edit SE" W Z
"RTN","DGPTFM",81,0)
 W ! S Z="Procedure Records:" W Z S Z=" T=Add PR  R=Delete PR  P=Add Code  Q=Delete Code  E=Edit PR" W Z
"RTN","DGPTFM",82,0)
 W ! S Z="CPT Records:" W Z S Z=" I=Add CR  Y=Delete CR  N=Add CPT  G=Delete CPT F=Edit CR" W Z K Z
"RTN","DGPTFM",83,0)
 W !,"                   ^=Abort   <RET> to Continue:<",DGNUM,">// " R ANS:DTIME K DGNUM
"RTN","DGPTFM",84,0)
A S Z="^C Delete Code^A Add Code^O Add Code^P Add NOP^S Add SE^D Delete Code^M Add PM^X Delete PM^Z Delete SE^J Edit SE^Q Delete NOP^V Edit Move^"
"RTN","DGPTFM",85,0)
 S Z=Z_"T Add PR^R Delete PR^E Edit PR^I Add CR^Y Delete CR^N Add CPT^G Delete CPT^F Edit CR"
"RTN","DGPTFM",86,0)
 I 'DGPTFE S $P(Z,U,8,9)="M Edit treat Spec/PM"
"RTN","DGPTFM",87,0)
 S X=ANS G Q^DGPTF:ANS="^" G ^DGPTFJ:ANS?1"^".E S (A,X)=ANS,X=$E(X,1) D IN^DGHELP
"RTN","DGPTFM",88,0)
 I ANS="" S (ST,ST1)=J+2 D:$D(DGZSUR) WR G @($S($D(DGZDIAG):"NDG",$D(DGZSER):"NSR",$D(DGZPRO):"NPR",$D(DGZSUR):"EN^DGPTFM0",+DGZPRF-1'=$P(DGZPRF,U,3):"NPS",1:"DONE"))
"RTN","DGPTFM",89,0)
 G HELP^DGPTFM1A:%=-1 S Z=$L(A)-1 G @(X_$S(X="X":"",1:"^DGPTFM1"))
"RTN","DGPTFM",90,0)
PRV I $D(^VA(200,L,0)) W $P(^(0),U) Q
"RTN","DGPTFM",91,0)
 W L Q
"RTN","DGPTFM",92,0)
X ;
"RTN","DGPTFM",93,0)
 I 'Z S:PM=1 RC=1 G X1:PM=1 W !!,"Delete Patient move <1",$S(PM<3:"",1:"-"_(PM-1)),">: " R RC:DTIME G ^DGPTFM:RC["^"!(RC="")
"RTN","DGPTFM",94,0)
 E  S RC=$E(A,2,99) W !
"RTN","DGPTFM",95,0)
 I +RC'=RC!('$D(M(RC))) W !!,"Enter the record # to delete from the PTF file, 1",$S(PM<3:"",1:"-"_(PM-1)) S Z=0 G X
"RTN","DGPTFM",96,0)
X1 I +M(RC)=1 W !,*7,"Cannot delete discharge movement",! H 3 G ^DGPTFM
"RTN","DGPTFM",97,0)
 S DIE="^DGPT("_PTF_",""M"",",DP=45.02,DR=".01///@",DA(1)=PTF,DA=+M(RC) D ^DIE K DR W "  ",RC,"-DELETED***" H 2 G ^DGPTFM
"RTN","DGPTFM",98,0)
Z W @DGVI,Z,@DGVO Q
"RTN","DGPTFM",99,0)
EN D WR G EN^DGPTFM0
"RTN","DGPTFM2")
0^5^B73696104
"RTN","DGPTFM2",1,0)
DGPTFM2 ;DWS - MASTER PROFESSIONAL SERVICE ENTER/EDIT ; 3/19/04 3:27pm
"RTN","DGPTFM2",2,0)
 ;;5.3;Registration;**517,590,606**; Aug 13, 1993
"RTN","DGPTFM2",3,0)
ADD ;ADD CPT RECORD
"RTN","DGPTFM2",4,0)
 N DGZP S DGZP=0 S:'$D(^DGPT(PTF,"C",0)) ^(0)="^45.06D^^"
"RTN","DGPTFM2",5,0)
 S DIC="^DGPT("_PTF_",""C"",",DIC(0)="AELQMZ",DA(1)=PTF,DLAYGO=45
"RTN","DGPTFM2",6,0)
 D ^DIC K DIC,DLAYGO G ^DGPTFM:Y'>0,^DGPTFM:'$D(^DGPT(PTF,"C",+Y))
"RTN","DGPTFM2",7,0)
 S DGPSM=+Y D MOB I $P(DGZPRF,U,3) F I=1:1:$P(DGZPRF,U,3) S:DGZPRF(I,0)=DGPSM DGZP=I
"RTN","DGPTFM2",8,0)
 K I G:'DGZP ^DGPTFM S X="1,2"
"RTN","DGPTFM2",9,0)
ED G HELP:X<1!(X>2) K DA S DGJUMP=X,DGPRD=+DGZPRF(DGZP)
"RTN","DGPTFM2",10,0)
 I X[1 D  I FLAG D MOB,REQ^DGPTFM3 H 2 K DGPSM G ^DGPTFM
"RTN","DGPTFM2",11,0)
 .S DA(1)=PTF,DIE="^DGPT("_PTF_",""C"",",(DA,REC)=DGZPRF(DGZP,0)
"RTN","DGPTFM2",12,0)
 .S DR=".01;.02;.03;.05" D PTFDIE S FLAG=$D(Y)>9!$D(DTOUT)!'$D(DA)
"RTN","DGPTFM2",13,0)
 .Q:'$D(DA)
"RTN","DGPTFM2",14,0)
 .S DGPRD=+^DGPT(PTF,"C",DGZPRF(DGZP,0),0) Q:+DGZPRF(DGZP)=DGPRD
"RTN","DGPTFM2",15,0)
 .S DGI=0 F  S DGI=$O(^DGCPT(46,"C",PTF,DGI)) Q:DGI'>0  D
"RTN","DGPTFM2",16,0)
 ..Q:+^DGCPT(46,DGI,1)'=+DGZPRF(DGZP)  Q:$D(^(9))
"RTN","DGPTFM2",17,0)
 ..S DR=".14////"_DGPRD,(DA,REC)=DGI,DIE="^DGCPT(46," D FMDIE
"RTN","DGPTFM2",18,0)
 .S $P(DGZPRF(DGZP),U)=DGPRD
"RTN","DGPTFM2",19,0)
 I DGJUMP[2 S DGI=0 D CL^SDCO21(DFN,DGPRD,"",.SDCLY) D
"RTN","DGPTFM2",20,0)
 .F  S DGI=$O(^DGCPT(46,"C",PTF,DGI)) Q:DGI'>0  I +^DGCPT(46,DGI,1)=+DGZPRF(DGZP),'$G(^(9)) S (DA,REC)=DGI,DR=".01;",DIE="^DGCPT(46," D GETINFO
"RTN","DGPTFM2",21,0)
 .F  S DA=PTF,DIC="^DGCPT(46,",DIC(0)="AELMQZ",DLAYGO=46,DIC("S")="D EN6^DGPTFJC I 'DGER" D ^DIC Q:Y'>0  D SED
"RTN","DGPTFM2",22,0)
 K DR,DIE,DIC,DA,DGI,DGJUMP,DGPRD,DLAYGO,XREF D REQ^DGPTFM3,MOB H:RFL 2 K RFL
"RTN","DGPTFM2",23,0)
 G ^DGPTFM:'$D(DGZPRF(DGZP,0)),^DGPTFM:'$D(^DGPT(PTF,"C",DGZPRF(DGZP,0)))
"RTN","DGPTFM2",24,0)
SET D MOB:'$D(DGZPRF) S:'$D(DGZP) DGZP=1 I $G(DGZPRF(DGZP,0))="" K DGZPRF(DGZP) G NEXP
"RTN","DGPTFM2",25,0)
WRT G ^DGPTFM:'$D(^DGPT(PTF,"C",DGZPRF(DGZP,0),0)) S J=DGZP W @IOF,HEAD,?68
"RTN","DGPTFM2",26,0)
 N DGNUM S Z="<801-"_DGZP_">" W @DGVI,Z,@DGVO,!! S Y=+DGZPRF(J),Z=1 D D^DGPTUTL,Z^DGPTFM5 W ?5,"CPT Record Date/Time: ",Y
"RTN","DGPTFM2",27,0)
 I $P(DGZPRF(J),U,2) W !,?5,"Referring or Ordering Provider: " S L=$P(DGZPRF(J),U,2) D PRV
"RTN","DGPTFM2",28,0)
 W !,?5,"Rendering Provider: " S L=$P(DGZPRF(J),U,3) D PRV
"RTN","DGPTFM2",29,0)
 I $P(DGZPRF(J),U,5) W !,?5,"Rendering Location: ",$P($G(^SC($P(DGZPRF(J),U,5),0)),U)
"RTN","DGPTFM2",30,0)
 W !! S Z=2 D Z^DGPTFM5 W "  Procedures:   "
"RTN","DGPTFM2",31,0)
 F K=$P(DGZPRF,U,2):1 Q:'$D(DGZPRF(J,K))  I '$D(DGZPRF(J,K,9)) W ?5 D CPT W ! Q:$Y>16
"RTN","DGPTFM2",32,0)
 F I=1:1:(IOSL-$Y-5) W !
"RTN","DGPTFM2",33,0)
 K I,J,K,L,Z S DGNUM=$S($D(DGZPRF(DGZP+1)):801_"-"_(DGZP+1),1:"MAS") G 801^DGPTFJC:DGST
"RTN","DGPTFM2",34,0)
 S DIR("A")="Enter <RET> to continue, 1-2 to edit, 'I' to add a CPT Segment"_$C(10,13)_"'^N' for screen N, or '^' to abort:"
"RTN","DGPTFM2",35,0)
 S DIR(0)="F^OU",DIR("B")=DGNUM D ^DIR
"RTN","DGPTFM2",36,0)
 K DIR G:$D(DIRUT) Q^DGPTF:X="^"
"RTN","DGPTFM2",37,0)
 I X?1"^".E S DGPTSCRN=801 G ^DGPTFJ
"RTN","DGPTFM2",38,0)
 I X="MAS" S DGZP=1 G ^DGPTFM
"RTN","DGPTFM2",39,0)
 G ADD:X="I"!(X="i"),HELP:X["?"
"RTN","DGPTFM2",40,0)
 I X=DGNUM G NEXP
"RTN","DGPTFM2",41,0)
 I X[1!(X[2) G ED
"RTN","DGPTFM2",42,0)
 G HELP
"RTN","DGPTFM2",43,0)
NEXP S DGZP=DGZP+1 I '$D(DGZPRF(DGZP)) K DGPSM W:DGZP=2 !,"NO PROF. SERVICES TO EDIT." H 2 S DGZP=1 G ^DGPTFM
"RTN","DGPTFM2",44,0)
 G SET
"RTN","DGPTFM2",45,0)
HELP W !,"Enter '^' to stop display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen as <N>)",!,"<RET> to continue on to next screen or 1-2 to edit:"
"RTN","DGPTFM2",46,0)
 W !?10,"1-Professional service information",!,?10,"2-Procedure codes",!,"You may also enter any combination of the above, separated by commas (ex:1,2)",!
"RTN","DGPTFM2",47,0)
 R !!,"Enter <RET>: ",X:DTIME G WRT
"RTN","DGPTFM2",48,0)
DEL ;DELETE A CPT RECORD
"RTN","DGPTFM2",49,0)
 I '$P(DGZPRF,U,3) G NOPROC
"RTN","DGPTFM2",50,0)
ASK S DIR("A")="Select CPT record to Delete <1 - "_$P(DGZPRF,U,3)_">",DIR(0)="NO^^K:X<1!(X>"_$P(DGZPRF,U,3)_") X"
"RTN","DGPTFM2",51,0)
 D ^DIR K DIR G ^DGPTFM:$D(DIRUT),^DGPTFM:'Y,^DGPTFM:'$D(^DGPT(PTF,"C",DGZPRF(Y,0),0)) S DGPROC=Y,Y=+^(0) D D^DGPTUTL
"RTN","DGPTFM2",52,0)
 S DIR("A")="Are you sure you want to delete the entire CR for "_Y
"RTN","DGPTFM2",53,0)
 S DIR(0)="Y",DIR("B")="No" D ^DIR K DIR G ^DGPTFM:'Y S DGI=0 D NOW^%DTC
"RTN","DGPTFM2",54,0)
 F  S DGI=$O(^DGCPT(46,"C",PTF,DGI)) Q:DGI'>0  D:+^DGCPT(46,DGI,1)=+DGZPRF(DGPROC)&'$G(^(9))
"RTN","DGPTFM2",55,0)
 .S (DA,REC)=DGI,DIE="^DGCPT(46,",DR="1////^S X=%" D FMDIE
"RTN","DGPTFM2",56,0)
 W !!,"CPT Records....Deleted" H 2
"RTN","DGPTFM2",57,0)
 K DIK,DA,DGI,DGPROC,DGPSM,DGPNUM,Y D MOB G ^DGPTFM
"RTN","DGPTFM2",58,0)
NOPROC  W !!,*7,"No procedures to delete",! H 3 G ^DGPTFM
"RTN","DGPTFM2",59,0)
N ;ADD CPT CODES TO CPT RECORD
"RTN","DGPTFM2",60,0)
 I '$P(DGZPRF,U,3) W !!,"There are no CPT records that can be added to.",*7 H 2 G ^DGPTFM
"RTN","DGPTFM2",61,0)
P1 S DIR("A")="Add to CPT record ",DIR(0)="N^1:"_$P(DGZPRF,U,3) D ^DIR K DIR G ^DGPTFM:'Y
"RTN","DGPTFM2",62,0)
 S DGZP=Y,DGI=0,DGPRD=+DGZPRF(DGZP) D CL^SDCO21(DFN,DGPRD,"",.SDCLY)
"RTN","DGPTFM2",63,0)
 S DA=PTF,DIC="^DGCPT(46,",DIC(0)="AELQMZ",DLAYGO=46,DIC("S")="D EN6^DGPTFJC I 'DGER"
"RTN","DGPTFM2",64,0)
 D ^DIC K DIC,DLAYGO D:Y>0 SED,MOB,REQ^DGPTFM3 K DGPRD,Y G ^DGPTFM
"RTN","DGPTFM2",65,0)
DC ;DELETE A CPT PROCEDURE
"RTN","DGPTFM2",66,0)
 I '$D(PS2) W !!,"Must display CPT procedures before choosing delete.",*7 H 2 G ^DGPTFM
"RTN","DGPTFM2",67,0)
QQ S DIR("A")="Select CPT code to Delete <1 - "_PS2_">",DIR(0)="NO^^K:X<1!(X>"_PS2_") X" D ^DIR K DIR G ^DGPTFM:$D(DIRUT),^DGPTFM:'Y
"RTN","DGPTFM2",68,0)
 S A1=Y,CPT=+DGZPRF(+PS2(A1),$P(PS2(A1),U,2))
"RTN","DGPTFM2",69,0)
 S DIR("A")="Are you sure you want to delete CPT code '"
"RTN","DGPTFM2",70,0)
 I $D(^ICPT(CPT)) S N=$$CPT^ICPTCOD(CPT,$$GETDATE^ICDGTDRG(PTF)),N=$S(N>0:$P(N,U,2,99),1:""),DIR("A")=DIR("A")_$P(N,U)_" "_$P(N,U,2)_"'"
"RTN","DGPTFM2",71,0)
 E  S DIR("A")=DIR("A")_CPT_"  UNKNOWN"
"RTN","DGPTFM2",72,0)
 S DIR(0)="Y",DIR("B")="No" D ^DIR K DIR G ^DGPTFM:'Y
"RTN","DGPTFM2",73,0)
QEL D NOW^%DTC S (DA,REC)=DGZPRF(+PS2(A1),$P(PS2(A1),U,2),0),DR="1////^S X=%"
"RTN","DGPTFM2",74,0)
 S DIE="^DGCPT(46," D FMDIE K A1,DR W !!,"CPT Code....Deleted" W:$X>70 ! D MOB H 2 G ^DGPTFM
"RTN","DGPTFM2",75,0)
F D MOB G SET
"RTN","DGPTFM2",76,0)
MOB S I=0,N=0 K DGZPRF F M=1:1:6 S:$D(SDCLY(M)) N=N+1
"RTN","DGPTFM2",77,0)
 F I2=1:1 S I=$O(^DGPT(PTF,"C",I)) Q:I'>0  S DGZPRF(I2)=^(I,0),DGZPRF(I2,0)=I,(K,K1)=0,F=1 D
"RTN","DGPTFM2",78,0)
 .F  S K=$O(^DGCPT(46,"C",PTF,K)),L=N+1\2+3 Q:K'>0  I +DGZPRF(I2)=+$G(^DGCPT(46,K,1)),'$G(^DGCPT(46,K,9)) D
"RTN","DGPTFM2",79,0)
 ..S K1=K1+1,DGZPRF(I2,K1)=^(0),DGZPRF(I2,K1,0)=K,F=0
"RTN","DGPTFM2",80,0)
 ..F M=2,3,5,6,7,15,16,17,18 S:$P(DGZPRF(I2,K1),U,M) L=L+1
"RTN","DGPTFM2",81,0)
 ..S DGZPRF(I2,K1,1)=L
"RTN","DGPTFM2",82,0)
 .I F,$G(DGPSM)'=DGZPRF(I2,0) K DGZPRF(I2) S I2=I2-1
"RTN","DGPTFM2",83,0)
 S DGZPRF="1^1^"_(I2-1) K F,I,K,K1,N Q
"RTN","DGPTFM2",84,0)
PRV I $D(^VA(200,L,0)) W $P(^(0),U) Q
"RTN","DGPTFM2",85,0)
 W L Q
"RTN","DGPTFM2",86,0)
CPT ;DISPLAY CPT CODES AND MODIFIERS
"RTN","DGPTFM2",87,0)
 S CPT=+DGZPRF(J,K),N=$$CPT^ICPTCOD(CPT,$$GETDATE^ICDGTDRG(PTF)),N=$S(N>0:$P(N,U,2,99),1:"")
"RTN","DGPTFM2",88,0)
 W $P(N,U),"  ",$P(N,U,2)
"RTN","DGPTFM2",89,0)
 F I=1,2 S MOD=$P(DGZPRF(J,K),U,I+1) D MOD:MOD
"RTN","DGPTFM2",90,0)
 W !,?7,"Quantity: ",$P(DGZPRF(J,K),U,14) K I,MOD,N Q
"RTN","DGPTFM2",91,0)
MOD S N=$$MOD^ICPTMOD(MOD,"I",$$GETDATE^ICDGTDRG(PTF)) W !,?7,"CPT Modifier ",I,":",$P(N,U,2)," ",$P(N,U,3)
"RTN","DGPTFM2",92,0)
 Q
"RTN","DGPTFM2",93,0)
PDT I Y<1 K X W !,"Please enter the date and time.",*7 Q
"RTN","DGPTFM2",94,0)
 I $S($D(^DGPT(PTF,0)):Y<$P(^(0),U,2),1:0)!$S($D(^DGPT(PTF,70)):Y>^(70)&^(70),1:0) W !,"The date/time must be between the Admission Date/Time and Discharge Date/Time",*7 K X
"RTN","DGPTFM2",95,0)
 Q
"RTN","DGPTFM2",96,0)
SDR ;SET DR ARRAY CPT MODIFIERS 1 AND 2
"RTN","DGPTFM2",97,0)
 S DR=DR_"S:'$$CODM^ICPTCOD($P(^DGCPT(46,D0,0),U),,,+DGZPRF(DGZP)) Y=""@10"";"
"RTN","DGPTFM2",98,0)
 S DR=DR_".02;S:$P(^DGCPT(46,D0,0),U,2,3)?.""^"" Y=""@10"";.03;@10;.2//1;"
"RTN","DGPTFM2",99,0)
 Q  ;Exit SDR
"RTN","DGPTFM2",100,0)
SDR2(DGN)       ;Set up DR variable to prompt for DGN Codes
"RTN","DGPTFM2",101,0)
 S DR=DGN/100_";"
"RTN","DGPTFM2",102,0)
 Q  ;Exit SDR2
"RTN","DGPTFM2",103,0)
CHKDGNS(D0,DGNPC)       ;Check to see if there are any more DGN's to edit in a Professional service instance
"RTN","DGPTFM2",104,0)
 S MORE=1 ; Default - more DGN's to process
"RTN","DGPTFM2",105,0)
 I DGNPC=4 S:$P(^DGCPT(46,D0,0),U,4,7)?."^" MORE=0
"RTN","DGPTFM2",106,0)
 I DGNPC=5 S:$P(^DGCPT(46,D0,0),U,5,7)?."^" MORE=0
"RTN","DGPTFM2",107,0)
 I DGNPC=6 S:$P(^DGCPT(46,D0,0),U,6,7)?."^" MORE=0
"RTN","DGPTFM2",108,0)
 I DGNPC=7 S:$P(^DGCPT(46,D0,0),U,7)_$P(^DGCPT(46,D0,0),U,15,18)?."^" MORE=0
"RTN","DGPTFM2",109,0)
 I DGNPC=21 S:$P(^DGCPT(46,D0,0),U,15,18)?."^" MORE=0
"RTN","DGPTFM2",110,0)
 I DGNPC=22 S:$P(^DGCPT(46,D0,0),U,16,18)?."^" MORE=0
"RTN","DGPTFM2",111,0)
 I DGNPC=23 S:$P(^DGCPT(46,D0,0),U,17,18)?."^" MORE=0
"RTN","DGPTFM2",112,0)
 I DGNPC=24 S:$P(^DGCPT(46,D0,0),U,18)?."^" MORE=0
"RTN","DGPTFM2",113,0)
 Q MORE  ;exit w/flag
"RTN","DGPTFM2",114,0)
SCI(IEN)    Q:'$D(SDCLY)  ;Pass the ien of the DGN code being processed
"RTN","DGPTFM2",115,0)
 N NODE,I,SCINUM
"RTN","DGPTFM2",116,0)
 F I=2,8,3:1:7 D  ;Go thru the SCI's
"RTN","DGPTFM2",117,0)
 . S SCINUM=$S(I=2:I+1,((I=3)!(I=4)):I-2,1:I-1)
"RTN","DGPTFM2",118,0)
 . I $G(SDCLY(SCINUM,IEN))=1 Q  ;If the SCI has already been asked for the DGN (ien) don't ask again
"RTN","DGPTFM2",119,0)
 . S:I=6 DR=DR_"@30;"
"RTN","DGPTFM2",120,0)
 . I $D(SDCLY(SCINUM)) S DR=DR_(I/100)_";",(DA,D)=$G(XREF(IEN)),SDCLY(SCINUM,IEN)=1 D:I=2&$O(SDCLY(1))!$D(SDCLY(1))!$D(SDCLY(2))  ;add prompt for SCI Y/N
"RTN","DGPTFM2",121,0)
 . . I I<6 S DR=DR_"S:$P(^DGICD9(46.1,DA,0),U,2) Y=""@30"";"
"RTN","DGPTFM2",122,0)
 K I
"RTN","DGPTFM2",123,0)
 Q  ;SCI
"RTN","DGPTFM2",124,0)
SED S DR=".14////"_DGPRD_";.16////"_PTF_";",(DA,REC)=+Y,DIE="^DGCPT(46," D GETINFO Q
"RTN","DGPTFM2",125,0)
FMDIE ;Prompt user for questions and file answers (using DIE)
"RTN","DGPTFM2",126,0)
 L +^DGCPT(46,REC):2 I  D ^DIE L -^DGCPT(46,REC) Q
"RTN","DGPTFM2",127,0)
ERR W !,"CPT Record is being edited by another user" K DIE,REC S ERRFLG=1 H 2 Q
"RTN","DGPTFM2",128,0)
PTFDIE L +^DGPT(45,REC):2 I  D ^DIE L -^DGPT(45,REC) K DIE,REC Q
"RTN","DGPTFM2",129,0)
 K DIE,REC G ERR
"RTN","DGPTFM2",130,0)
ICDDIE L +^DGICD9(46.1,REC):2 I  D ^DIE L -^DGICD9(46.1,REC) Q
"RTN","DGPTFM2",131,0)
 K DIE,REC G ERR
"RTN","DGPTFM2",132,0)
GETINFO ;GET PROCEDURE CODE INFORMATION
"RTN","DGPTFM2",133,0)
 N NOKILL,EXITFLAG,DGNIEN
"RTN","DGPTFM2",134,0)
 S NOKILL=1,EXITFLG=0,ERRFLG=0
"RTN","DGPTFM2",135,0)
 D ICDINFO^DGAPI(DFN,PTF)  ;gather all DGN codes for the patient
"RTN","DGPTFM2",136,0)
 D XREF
"RTN","DGPTFM2",137,0)
 D SDR,FMDIE  ;prompt for CPT Code and modifiers
"RTN","DGPTFM2",138,0)
 I $G(ERRFLG)=1 Q  ;cannot lock REC in DGCPT - exit
"RTN","DGPTFM2",139,0)
 S DR="" F PIECE=4:1:7,21:1:24 S:PIECE=24 NOKILL=0 D  Q:EXITFLG  ;Go thru all existing DGN's in DGCPT file
"RTN","DGPTFM2",140,0)
 . D SDR2(PIECE),FMDIE I ('$$CHKDGNS(DA,PIECE))!($D(Y)>9)!($D(DTOUT)) S EXITFLG=1 Q  ;Promt w/existing DGN cd if it exists
"RTN","DGPTFM2",141,0)
 . S DR="",SAVDA=DA,SAVDIE=DIE,DGNIEN=$P(^DGCPT(46,DA,0),U,$S(PIECE<20:PIECE,1:PIECE-6)) Q:DGNIEN=""
"RTN","DGPTFM2",142,0)
 . I '$D(XREF(DGNIEN)) D  ;the IEN to be added has not yet been defined in DGICD9, it must be added before proceeding
"RTN","DGPTFM2",143,0)
 . . K DO S DIC="^DGICD9(46.1,",DIC(0)="LMZ",DLAYGO=46,X=DGNIEN D FILE^DICN I Y<0 S ERRFLG=1
"RTN","DGPTFM2",144,0)
 . . I 'ERRFLG S XREF(DGNIEN)=+Y ; setup info to build "B" xref in DGICD9 for new entry
"RTN","DGPTFM2",145,0)
 . I ERRFLG S EXITFLG=1 Q  ;could not add new DGN ien to DGICD9 - exit loop with error
"RTN","DGPTFM2",146,0)
 . D SCI(DGNIEN):0 S UPDTD=0,(DA,REC)=XREF(DGNIEN) ;determine if any SCI prompts should be done for this DGN
"RTN","DGPTFM2",147,0)
 . K ^TMP("PTF",$J)  ;Clean up TMP file to pass info to be filed in 46.1
"RTN","DGPTFM2",148,0)
 . S DIE="^DGICD9(46.1,",DR="[DG801]"  ;SCI flags to be stored in file 46.1
"RTN","DGPTFM2",149,0)
 . I DR'="" D ICDDIE S DR="",UPDTD=1  ;prompt for SCI y/n and file in 46.1
"RTN","DGPTFM2",150,0)
 . I 'UPDTD D
"RTN","DGPTFM2",151,0)
 . . S ^TMP("PTF",$J,46.1,1)="^"_DGNIEN
"RTN","DGPTFM2",152,0)
 . . S X=$$DATA2PTF^DGAPI(DFN,PTF,DGPRD) ;If there were no SCI's prompts, stuff DGN into file 46.1
"RTN","DGPTFM2",153,0)
 . S DIE=SAVDIE,DA=SAVDA
"RTN","DGPTFM2",154,0)
 K DIR,REC
"RTN","DGPTFM2",155,0)
 Q  ;GETINFO
"RTN","DGPTFM2",156,0)
XREF ;create xref for ^TMP global containing DGICD9 info to have access via DGN IEN in local array XREF
"RTN","DGPTFM2",157,0)
 N SEQ,NODE,INFO,IEN
"RTN","DGPTFM2",158,0)
 K XREF
"RTN","DGPTFM2",159,0)
 S SEQ=0
"RTN","DGPTFM2",160,0)
 F  S SEQ=$O(^TMP("PTF",$J,46.1,SEQ)) Q:'SEQ  S INFO=^(SEQ),NODE=+INFO,IEN=$P(INFO,U,2),XREF(IEN)=NODE
"RTN","DGPTFM2",161,0)
 Q  ;XREF
"RTN","DGPTFM5")
0^15^B12890159
"RTN","DGPTFM5",1,0)
DGPTFM5 ;ALB/MTK/ADL - PTF ENTRY/EDIT-3 ; 11 MAR 91  15:15
"RTN","DGPTFM5",2,0)
 ;;5.3;Registration;**510,606**;Aug 13, 1993
"RTN","DGPTFM5",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM5",4,0)
 ;
"RTN","DGPTFM5",5,0)
 S DGZS0=DGZS0+1
"RTN","DGPTFM5",6,0)
EN D MOB:'$D(S) S S(DGZS0,1)=$S($D(S(DGZS0,1)):S(DGZS0,1),1:"") G NEXM:S(DGZS0,1)="" S (S1,S(DGZS0))=$S($D(^DGPT(PTF,"S",S(DGZS0,1),0)):^DGPT(PTF,"S",S(DGZS0,1),0),1:"")
"RTN","DGPTFM5",7,0)
WR W @IOF,HEAD,?72 S Z="<401-"_DGZS0_">" D Z^DGPTFM
"RTN","DGPTFM5",8,0)
 S L=+S(DGZS0),Y=L D D^DGPTUTL W !! S Z=1 D Z W "Date of Surg: " S Z=Y,Z1=28 D Z1 W "Chief Surg: " S L=";"_$P(^DD(45.01,4,0),U,3),L1=";"_$P(S1,U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",9,0)
 W !,"    Anesth Tech: " S L=";"_$P(^DD(45.01,6,0),U,3),L1=";"_$P(S1,U,6)_":" W $P($P(L,L1,2),";",1),?45,"First Asst: " S L=";"_$P(^DD(45.01,5,0),U,3),L1=";"_$P(S1,U,5)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",10,0)
 W !,"  Source of pay: " S L=";"_$P(^DD(45.01,7,0),U,3),L1=";"_$P(S1,U,7)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFM5",11,0)
 W ?46,"Surg spec: ",$E($S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:""),1,23)
"RTN","DGPTFM5",12,0)
 W !! S Z=2 D Z W "    Surg/pro: " F I=1:1:5 S L=$P(S1,U,I+7) I L'="" S DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)) D
"RTN","DGPTFM5",13,0)
 . W $S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,5)_" ("_$P(DGPTTMP,U,2)_")",1:"**********-"_L),!?17
"RTN","DGPTFM5",14,0)
 ;-- kidney transplant source
"RTN","DGPTFM5",15,0)
 S DG300=$S($D(^DGPT(PTF,"S",S(DGZS0,1),300)):^(300),1:"") D:DG300]"" PRN3^DGPTFM8 K DG300
"RTN","DGPTFM5",16,0)
 W !!
"RTN","DGPTFM5",17,0)
JUMP F I=$Y:1:19 W !
"RTN","DGPTFM5",18,0)
X S DGNUM=$S($D(S(DGZS0+1)):401_"-"_(DGZS0+1),1:"MAS") G 401^DGPTFJC:DGST
"RTN","DGPTFM5",19,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'S' to add a Surgical segment, '^N' for screen N, or '^' to abort:<",DGNUM,">// " R X:DTIME K DGNUM G Q:X="^",NEXM:X="",^DGPTFJ:X?1"^".E,ADD:X="S"!(X="s")
"RTN","DGPTFM5",20,0)
X1 G PR:X<1!(X>2) S DR="[DG401]",DGJUMP=X,DGSUR=+S(DGZS0,1)
"RTN","DGPTFM5",21,0)
 N ICDVDT,ICPTVDT
"RTN","DGPTFM5",22,0)
 S (ICDVDT,ICPTVDT)=$S($D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM5",23,0)
 K DA S DIE="^DGPT(",(DGPTF,DA)=PTF D ^DIE K DA,DR,DA
"RTN","DGPTFM5",24,0)
 D CHK401^DGPTSCAN K DGPTF,DGSUR D MOB G EN
"RTN","DGPTFM5",25,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen '<N>'",!,"<RET> to continue on to the next screen or 1-2 to edit:"
"RTN","DGPTFM5",26,0)
 W !?10,"1-Surgical information",!?10,"2-Surgical/Procedure Codes"
"RTN","DGPTFM5",27,0)
 W !,"You may also enter any combination of the above, separated by commas(ex:1,3,5)",!
"RTN","DGPTFM5",28,0)
 R !!,"Enter <RET>: ",X:DTIME G WR
"RTN","DGPTFM5",29,0)
 Q
"RTN","DGPTFM5",30,0)
NEXM S DGZS0=DGZS0+1 G ^DGPTFM:'$D(S(DGZS0)) G EN
"RTN","DGPTFM5",31,0)
ADD K SUR S DGZS0=0 S:'$D(^DGPT(PTF,"S",0)) ^(0)="^45.01DA^^"
"RTN","DGPTFM5",32,0)
 S DIC="^DGPT("_PTF_",""S"",",DIC(0)="QEALM",DA(1)=PTF D ^DIC G ^DGPTFM:+Y'>0!('$D(^DGPT(PTF,"S",+Y)))
"RTN","DGPTFM5",33,0)
 D MOB I SU F I=1:1:SU S:S(I,1)=+Y DGZS0=I
"RTN","DGPTFM5",34,0)
 G ^DGPTFM:'DGZS0 S SUR(DGZS0)=+Y,X="1,2" G X1
"RTN","DGPTFM5",35,0)
MOB K S,S1,S2 S I=0,S2=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:'I  S S(I1)=^(I,0),S(I1,1)=I I S(I1)']"" K S(I1) S I1=I1-1
"RTN","DGPTFM5",36,0)
 S SU=I1-1 Q
"RTN","DGPTFM5",37,0)
Q G Q^DGPTF
"RTN","DGPTFM5",38,0)
 Q
"RTN","DGPTFM5",39,0)
1 ;;.01;2;3;4;5;6;7
"RTN","DGPTFM5",40,0)
2 ;;8;9;10;11;12
"RTN","DGPTFM5",41,0)
 Q
"RTN","DGPTFM5",42,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTFM5",43,0)
 E  W "   "
"RTN","DGPTFM5",44,0)
 Q
"RTN","DGPTFM5",45,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTFM5",46,0)
 W Z
"RTN","DGPTFMO")
0^9^B26073214
"RTN","DGPTFMO",1,0)
DGPTFMO ;ALB/JDS/ADL - DGPTF PRINT TEMPLATE ; 4/13/04 12:11pm
"RTN","DGPTFMO",2,0)
 ;;5.3;Registration;**195,397,510,590,594,606**;Aug 13, 1993
"RTN","DGPTFMO",3,0)
 ;;ADL;Updated for CSV Project;;Mar 4, 2003
"RTN","DGPTFMO",4,0)
 ;FOR PTF REPORT CALLED FROM TEMPLATE DGPTF
"RTN","DGPTFMO",5,0)
EN K A,B,AD,ADA,DGDD,DGFC,HEAD,DGPTFE,DGST,DGN,T
"RTN","DGPTFMO",6,0)
 F I=0:0 S I=$O(^DGPT(D0,"M",I)) Q:I'>0  I $D(^(I,0)) S J=+$P(^(0),U,10) S:'J J=999999999 S:$D(T(J)) J=J+.01*I S T(J)=I
"RTN","DGPTFMO",7,0)
 F I=0:0 S I=$O(T(I)) Q:I'>0  S DGM=$S($D(^DGPT(D0,"M",T(I),0)):^(0),1:"") I DGM]"" D WRITE
"RTN","DGPTFMO",8,0)
 K T F I=0:0 S I=$O(^DGPT(D0,"S",I)) Q:I'>0  D SUR
"RTN","DGPTFMO",9,0)
 S DGOP1=$S($D(^DGPT(D0,"401P")):^("401P"),1:"") I DGOP1]"" D HEAD:$Y>(IOSL-10) G Q:'DN D PROC
"RTN","DGPTFMO",10,0)
 I $D(^DGPT(D0,"P")) D HEAD:$Y>(IOSL-10) G Q:'DN F I=0:0 S I=$O(^DGPT(D0,"P",I)) Q:I'>0  S DG601=^DGPT(D0,"P",I,0),Y=+DG601 D D^DGPTUTL W !!," Procedure Date: ",Y D 601
"RTN","DGPTFMO",11,0)
 S DGPT=$G(^DGPT(D0,70)) I DGPT]"" G Q:'DN D DXLS
"RTN","DGPTFMO",12,0)
 K %,DGL,DGM,DGPT,DGOP,DGOP1,DGF,DGP,DXLS,DGICD,L1,S1,T,J,K,DGPR,DGN,AGE,B,DA,DAM,DFN,DGST,DOB,DP,DRG,EXP,NO,P,PTF,DGPTFE,SD1,SEX,TAC,TRS,DGDS,DGTD,DGPROC,DG601,DGPTDAT
"RTN","DGPTFMO",13,0)
 W ! ;F I=$Y:1:IOSL-1 W !
"RTN","DGPTFMO",14,0)
 Q
"RTN","DGPTFMO",15,0)
WRITE D HEAD:$Y>(IOSL-12) G Q:'DN S Y=$P(DGM,U,10),DGL=+$P(DGM,U,2),DGL=$S($D(^DIC(42.4,DGL,0)):^(0),1:""),DGL=$P(DGL,U,1) D D^DGPTUTL
"RTN","DGPTFMO",16,0)
 W !!,"Movement Date: ",Y,?40,"Losing Specialty: ",DGL,!,"Leave Days: ",$P(DGM,U,3),?40,"Pass Days: ",$P(DGM,U,4)
"RTN","DGPTFMO",17,0)
 W !,"Treated for SC condition: ",$S($P(DGM,U,18)=1:"Yes",1:"No")
"RTN","DGPTFMO",18,0)
 W:$P(DGM,U,31)'="" !,"Potentially Related to Combat: ",$S($P(DGM,U,31)="Y":"Yes",1:"No")
"RTN","DGPTFMO",19,0)
 W:$P(DGM,U,26)'="" !,"Treated for AO condition: ",$S($P(DGM,U,26)="Y":"Yes",1:"No")
"RTN","DGPTFMO",20,0)
 W:$P(DGM,U,27)'="" !,"Treated for IR condition: ",$S($P(DGM,U,27)="Y":"Yes",1:"No")
"RTN","DGPTFMO",21,0)
 W:$P(DGM,U,28)'="" !,"Treated for EC condition: ",$S($P(DGM,U,28)="Y":"Yes",1:"No")
"RTN","DGPTFMO",22,0)
 W:$P(DGM,U,29)'="" !,"Treated for MST condition: ",$S($P(DGM,U,29)="Y":"Yes",$P(DGM,U,29)="N":"No",1:"Declined to answer") ; added 6/17/98 for MST enhancement
"RTN","DGPTFMO",23,0)
 W:$P(DGM,U,30)'="" !,"Treated for HEAD/NECK CA condition: ",$S($P(DGM,U,30)="Y":"Yes",1:"No")
"RTN","DGPTFMO",24,0)
 W:T(I)=1 !,"Discharge "
"RTN","DGPTFMO",25,0)
 S DGF="" F J=5:1:15 I J#10 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGM,U,J),$$GETDATE^ICDGTDRG(D0)),DGICD=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGICD]"" D 
"RTN","DGPTFMO",26,0)
 . W:DGF="" !!?13,"DX: " W $P(DGICD,U,3)_" ("_$P(DGICD,U)_")",!?17 S DGF=1
"RTN","DGPTFMO",27,0)
 ;-- display expanded codes 
"RTN","DGPTFMO",28,0)
 S DG300=$S($D(^DGPT(D0,"M",T(I),300)):^(300),1:"") I DG300]"" D HEAD:$Y>(IOSL-6) D PRN2^DGPTFM8 W !
"RTN","DGPTFMO",29,0)
 K DG300
"RTN","DGPTFMO",30,0)
 ;Display TRANSFER DRG with description
"RTN","DGPTFMO",31,0)
 Q:'$D(^DGPT(D0,"M",T(I),"P"))  S DGTD=+^("P") Q:'$D(^ICD(DGTD,0))  W !?3,"TRANSFER DRG: ",DGTD," - "
"RTN","DGPTFMO",32,0)
 N DXD,DGDX
"RTN","DGPTFMO",33,0)
 S DXD=$$DRGD^ICDGTDRG(DGTD,"DGDX",,$$GETDATE^ICDGTDRG(D0)),DGDS=0
"RTN","DGPTFMO",34,0)
 F  S DGDS=$O(DGDX(DGDS)) Q:'+DGDS  Q:DGDX(DGDS)=" "  W !,DGDX(DGDS)
"RTN","DGPTFMO",35,0)
 Q
"RTN","DGPTFMO",36,0)
HEAD I $E(IOST,1)="C" W *7 R X:DTIME I X=U S DN=0 Q
"RTN","DGPTFMO",37,0)
 S DC=DC+1 W @IOF,! X:$D(^UTILITY($J,2)) ^(2) W ! F K=1:1:IOM W "_"
"RTN","DGPTFMO",38,0)
 W !,"("_$P(^DPT(+^DGPT(D0,0),0),U,1)_")",!
"RTN","DGPTFMO",39,0)
 Q
"RTN","DGPTFMO",40,0)
SUR D HEAD:$Y>(IOSL-7) G Q:'DN S S1=^DGPT(D0,"S",I,0),Y=+S1 D D^DGPTUTL W !!,"   Date of Surg: ",Y,?45,"Chief Surg: " S L=";"_$P(^DD(45.01,4,0),U,3),L1=";"_$P(S1,U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",41,0)
 W !,"    Anesth Tech: " S L=";"_$P(^DD(45.01,6,0),U,3),L1=";"_$P(S1,U,6)_":" W $P($P(L,L1,2),";",1),?45,"First Asst: " S L=";"_$P(^DD(45.01,5,0),U,3),L1=";"_$P(S1,U,5)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",42,0)
 W !,"  Source of pay: " S L=";"_$P(^DD(45.01,7,0),U,3),L1=";"_$P(S1,U,7)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",43,0)
 W ?46,"Surg spec: ",$S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:"")
"RTN","DGPTFMO",44,0)
 W !!,?7,"Surg/pro: " F K=1:1:5 S L=$P(S1,U,K+7) I L'="" S DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(D0)) W $S(+DGPTTMP>0:$P(DGPTTMP,U,5)_" ("_$P(DGPTTMP,U,2)_")",1:"**********-"_L),!?17
"RTN","DGPTFMO",45,0)
 ;-- display expanded codes
"RTN","DGPTFMO",46,0)
 S DG300=$S($D(^DGPT(D0,"S",I,300)):^(300),1:"") I DG300]"" D PRN3^DGPTFM8
"RTN","DGPTFMO",47,0)
 K DG300
"RTN","DGPTFMO",48,0)
 Q
"RTN","DGPTFMO",49,0)
PROC S DGF="" F I=1:1:5 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGOP1,U,I),$$GETDATE^ICDGTDRG(D0)),DGOP=$S(DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGOP D 
"RTN","DGPTFMO",50,0)
 . W:'DGF !!?6,"Procedure: " W $P(DGOP,U,4)_" ("_$P(DGOP,U)_")",!?17 S DGF=1
"RTN","DGPTFMO",51,0)
 Q
"RTN","DGPTFMO",52,0)
601 ;print the procedures/dates from the 601 procedure multiple (eff. 10/1/87)
"RTN","DGPTFMO",53,0)
 F J=5:1:9 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DG601,U,J),$$GETDATE^ICDGTDRG(D0)),DGPROC=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGPROC W !?17,$P(DGPROC,U,4)_" ("_$P(DGPROC,U)_")"
"RTN","DGPTFMO",54,0)
 Q
"RTN","DGPTFMO",55,0)
DXLS D HEAD:$Y>(IOSL-16) S DGPTDAT=$$GETDATE^ICDGTDRG(D0)
"RTN","DGPTFMO",56,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGPT,U,10),DGPTDAT),DXLS=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DXLS]"" W !!?11,"DXLS: ",$P(DXLS,U,3)_" ("_$P(DXLS,U)_")"
"RTN","DGPTFMO",57,0)
 I 'DXLS S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGPT,U,11),DGPTDAT),DGP=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGP]"" W !!," Principal Diag: ",$P(DGP,U,3)_" ("_$P(DGP,U)_")"
"RTN","DGPTFMO",58,0)
 S K=DGPT F I=16:1:24 D DSP
"RTN","DGPTFMO",59,0)
 S K=$G(^DGPT(D0,71)) F I=1:1:4 D DSP
"RTN","DGPTFMO",60,0)
 ;-- display expanded code information
"RTN","DGPTFMO",61,0)
 S DG300=$S($D(^DGPT(D0,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTFMO",62,0)
 D EN2^DGPTF4 Q
"RTN","DGPTFMO",63,0)
Q Q
"RTN","DGPTFMO",64,0)
Q1 K ^UTILITY(U,$J),DG1 Q
"RTN","DGPTFMO",65,0)
DT I Y W $P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC",U,$E(Y,4,5))," " W:Y#100 $J(Y#100\1,2),"," W Y\10000+1700 W:Y#1 "  ",$E(Y_0,9,10),":",$E(Y_"000",11,12)
"RTN","DGPTFMO",66,0)
 Q
"RTN","DGPTFMO",67,0)
DSP S J=$$ICDDX^ICDCODE(+$P(K,U,I),DGPTDAT) I J&$P(J,U,10) D
"RTN","DGPTFMO",68,0)
 .I I#2 W ?40,$P(J,U,4)_"("_$P(J,U,2)_")" Q
"RTN","DGPTFMO",69,0)
 .W !,$P(J,U,4)_"("_$P(J,U,2)_")"
"RTN","DGPTFMO",70,0)
 Q
"RTN","DGPTICD")
0^10^B8396264
"RTN","DGPTICD",1,0)
DGPTICD ;ALB/MTC - PTF DRG Grouper Utility ; 2/19/02 3:08pm
"RTN","DGPTICD",2,0)
 ;;5.3;Registration;**375,441,510,559,599,606**;Aug 13, 1993
"RTN","DGPTICD",3,0)
 ;variables to pass in:
"RTN","DGPTICD",4,0)
 ;  DGDX <- format: DX CODE1^DX CODE2^DX CODE3^...                      (REQUIRED)
"RTN","DGPTICD",5,0)
 ;  DGSURG <- format: SURGERY CODE1^SURGERY CODE2^SURGERY CODE3^...       (OPTIONAL)
"RTN","DGPTICD",6,0)
 ;  DGPROC <- format: PROCEDURE CODE1^PROCEDURE CODE2^PROCEDURE CODE3^... (OPTIONAL)
"RTN","DGPTICD",7,0)
 ;  DGTRS  <- 1 if patient transferred to acute care facility             (REQUIRED)
"RTN","DGPTICD",8,0)
 ;  DGEXP  <- 1 if patient died during this episode                       (REQUIRED)
"RTN","DGPTICD",9,0)
 ;  DGDMS  <- 1 if patient was discharged with an Irregular discharge (discharged against medical advice) (REQUIRED)
"RTN","DGPTICD",10,0)
 ;  AGE,SEX     (REQUIRED)
"RTN","DGPTICD",11,0)
 ;values of variables listed above are left unchanged by this routine
"RTN","DGPTICD",12,0)
 ;variable passed back: DRG(0) <- zero node of DRG in DRG file
"RTN","DGPTICD",13,0)
 ;                    : DRG <- IFN of DRG in DRG file
"RTN","DGPTICD",14,0)
 ;  DGDAT  <- Effective date to be used in calculating DRG
"RTN","DGPTICD",15,0)
 ;
"RTN","DGPTICD",16,0)
 ;-- check for required variables
"RTN","DGPTICD",17,0)
 Q:'$D(DGDX)!'$D(DGTRS)!'$D(DGEXP)!'$D(DGDMS)
"RTN","DGPTICD",18,0)
 N DGI
"RTN","DGPTICD",19,0)
 ;-- build ICDDX array
"RTN","DGPTICD",20,0)
 K ICDDX
"RTN","DGPTICD",21,0)
 S DGI=0 F  S DGI=DGI+1 Q:$P(DGDX,U,DGI)=""  D
"RTN","DGPTICD",22,0)
 . S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGDX,U,DGI),+$G(DGDAT))
"RTN","DGPTICD",23,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S ICDDX(DGI)=$P(DGDX,U,DGI)
"RTN","DGPTICD",24,0)
 G Q:'$D(ICDDX)
"RTN","DGPTICD",25,0)
 ;
"RTN","DGPTICD",26,0)
 ;-- build ICDPRC array
"RTN","DGPTICD",27,0)
 ;K ICDPRC
"RTN","DGPTICD",28,0)
 ;I $D(DGPROC) S DGSURG=$S('$D(DGSURG):DGPROC,1:DGSURG_DGPROC)
"RTN","DGPTICD",29,0)
 ;I $D(DGSURG) S DGI=0 F  S DGI=DGI+1 Q:$P(DGSURG,U,DGI)=""  D
"RTN","DGPTICD",30,0)
 ;. I $D(^ICD0($P(DGSURG,U,DGI),0)) S ICDPRC(DGI)=$P(DGSURG,U,DGI)
"RTN","DGPTICD",31,0)
 ;-- build ICDPRC array eliminating dupes as we go
"RTN","DGPTICD",32,0)
 K ICDPRC
"RTN","DGPTICD",33,0)
 N I,J,X,Y,FLG,SUB S SUB=0
"RTN","DGPTICD",34,0)
 I $D(DGPROC) F I=2:1 S X=$P(DGPROC,U,I) Q:X=""  D
"RTN","DGPTICD",35,0)
 . S DGPTTMP=$$ICDOP^ICDCODE(X,+$G(DGDAT))
"RTN","DGPTICD",36,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S SUB=SUB+1,ICDPRC(SUB)=X
"RTN","DGPTICD",37,0)
 I $D(DGSURG) F I=2:1 S X=$P(DGSURG,U,I) Q:X=""  D
"RTN","DGPTICD",38,0)
 . S FLG=0,J=0 F  S J=$O(ICDPRC(J)) Q:'J  I X=$G(ICDPRC(J)) S FLG=1 Q
"RTN","DGPTICD",39,0)
 . I FLG Q
"RTN","DGPTICD",40,0)
 . S DGPTTMP=$$ICDOP^ICDCODE(X,+$G(DGDAT))
"RTN","DGPTICD",41,0)
 . I +DGPTTMP>0,($P(DGPTTMP,U,10)) S SUB=SUB+1,ICDPRC(SUB)=X
"RTN","DGPTICD",42,0)
 ;
"RTN","DGPTICD",43,0)
 ;-- set other required variables
"RTN","DGPTICD",44,0)
 S ICDTRS=DGTRS,ICDEXP=DGEXP,ICDDMS=DGDMS
"RTN","DGPTICD",45,0)
 S ICDDATE=$S($D(DGDAT):DGDAT,1:DT),DGDAT=ICDDATE  ;Ensure that DGDAT is defined prior to executing PRT
"RTN","DGPTICD",46,0)
 ;
"RTN","DGPTICD",47,0)
 ;-- calculate DRG
"RTN","DGPTICD",48,0)
 D ^ICDDRG S DRG=ICDDRG I '$D(DGDRGPRT) G Q
"RTN","DGPTICD",49,0)
 ;
"RTN","DGPTICD",50,0)
PRT ;print DRG and national HCFA values
"RTN","DGPTICD",51,0)
 I DRG=468!(DRG=469)!(DRG=470) W *7
"RTN","DGPTICD",52,0)
 S Y=ICDDATE D DD^%DT ; Y=external representation of effective date
"RTN","DGPTICD",53,0)
 W !!?9,"Effective Date:","  ",Y
"RTN","DGPTICD",54,0)
 S DRG(0)=$$DRG^ICDGTDRG(DRG,DGDAT) W !!,"Diagnosis Related Group: ",$J(DRG,6),?36,"Average Length of Stay(ALOS): ",$J($P(DRG(0),"^",8),6)
"RTN","DGPTICD",55,0)
 W !?17,"Weight: ",$J($P(DRG(0),"^",2),6)  ;,?40,"Local Breakeven: ",$J($P(DRG(0),"^",12),6)
"RTN","DGPTICD",56,0)
 W !?12," Low Day(s): ",$J($P(DRG(0),"^",3),6)  ;,?39,"Local Low Day(s): ",$J($P(DRG(0),"^",9),6)
"RTN","DGPTICD",57,0)
 W !?13," High Days: ",$J($P(DRG(0),"^",4),6)  ;,?40,"Local High Days: ",$J($P(DRG(0),"^",10),6)
"RTN","DGPTICD",58,0)
 N DXD,DGDX
"RTN","DGPTICD",59,0)
 S DXD=$$DRGD^ICDGTDRG(DRG,"DGDX",,DGDAT),DGI=0
"RTN","DGPTICD",60,0)
 W !!,"DRG: ",DRG,"-" F  S DGI=$O(DGDX(DGI)) Q:'+DGI  Q:DGDX(DGI)=" "  W ?10,DGDX(DGI),!
"RTN","DGPTICD",61,0)
Q K ICDDMS,ICDDRG,ICDDX,ICDEXP,ICDMDC,ICDPRC,ICDRTC,ICDTRS,ICDDATE Q
"RTN","DGPTLMU5")
0^11^B11114229
"RTN","DGPTLMU5",1,0)
DGPTLMU5 ;ALB/MTC - PTF A/P LIST MANAGER UTILITY CONT. ; 10-9-92
"RTN","DGPTLMU5",2,0)
 ;;5.3;Registration;**606**;Aug 13, 1993
"RTN","DGPTLMU5",3,0)
 ;
"RTN","DGPTLMU5",4,0)
DI401 ;-- this function will load the 401 information
"RTN","DGPTLMU5",5,0)
 N X,X1,Y,I,J,DGDAT,DXD
"RTN","DGPTLMU5",6,0)
 S I=0 F  S I=$O(^DGPT(DGPTF,"S",I)) Q:'I  D
"RTN","DGPTLMU5",7,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)="",DGDAT=$P(X,U)
"RTN","DGPTLMU5",8,0)
 . S X1="",X=$G(^DGPT(DGPTF,"S",I,0)) Q:X']""
"RTN","DGPTLMU5",9,0)
 . S Y="Surgery/Procedure Date :"_$S($P(X,U):$$FTIME^VALM1($P(X,U)),1:"")
"RTN","DGPTLMU5",10,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU5",11,0)
 . S Y="Surg Specialty :"_$S($P(X,U,3):$P($G(^DIC(45.3,$P(X,U,3),0)),U,2),1:"")
"RTN","DGPTLMU5",12,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU5",13,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1
"RTN","DGPTLMU5",14,0)
 . S Y="Cat of Chief Surg :"_$S($P(X,U,4):$P($P($P(^DD(45.01,4,0),U,3),";",$P(X,U,4)),":",2),$P(X,U,4)="V":"VA TEAM",$P(X,U,4)="M":"MIXED VA&NON VA",$P(X,U,4)="N":"NON VA",1:"")
"RTN","DGPTLMU5",15,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU5",16,0)
 . S Y="Cat of Frst Assist :"_$S($P(X,U,5):$P($P($P(^DD(45.01,5,0),U,3),";",$P(X,U,5)),":",2),1:"")
"RTN","DGPTLMU5",17,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU5",18,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1
"RTN","DGPTLMU5",19,0)
 . S Y="Prin Anest Tech :"_$S($P(X,U,6):$P($P($P(^DD(45.01,6,0),U,3),";",$P(X,U,6)),":",2),1:"NONE")
"RTN","DGPTLMU5",20,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU5",21,0)
 . S Y="Source of Pay :"_$S($P(X,U,7):$P($P($P(^DD(45.01,7,0),U,3),";",$P(X,U,7)),":",2),1:"")
"RTN","DGPTLMU5",22,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU5",23,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1
"RTN","DGPTLMU5",24,0)
 .;
"RTN","DGPTLMU5",25,0)
 .;-- check for ICD codes
"RTN","DGPTLMU5",26,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)="OPERATION CODES :"
"RTN","DGPTLMU5",27,0)
 . F J=8:1:12 I $P(X,U,J) D
"RTN","DGPTLMU5",28,0)
 .. S DXD=$$ICDOP^ICDCODE($P(X,U,J),DGDAT),Y=$P(DXD,U,2)_" - "_$P(DXD,U,5)
"RTN","DGPTLMU5",29,0)
 .. S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=" "_Y
"RTN","DGPTLMU5",30,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)="PROCEDURE CODES :",X3=$G(^DGPT(DGPTF,"401P"))
"RTN","DGPTLMU5",31,0)
 . I X3]"" F J=1:1:5 I $P(X3,U,J) D
"RTN","DGPTLMU5",32,0)
 .. S DXD=$$ICDOP^ICDCODE($P(X3,U,J),DGDAT),Y=$P(DXD,U,2)_" - "_$P(DXD,U,5)
"RTN","DGPTLMU5",33,0)
 .. S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=" "_Y
"RTN","DGPTLMU5",34,0)
 .;
"RTN","DGPTLMU5",35,0)
 .;-- check for 300 node information
"RTN","DGPTLMU5",36,0)
 . S X2=$G(^DGPT(DGPTF,"S",I,300)) I X2]"" D
"RTN","DGPTLMU5",37,0)
 .. I +$P(X2,U) S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)="Kidney Source :"_$S($P(X2,U,2)=1:"Live Donor",1:"Cadaver")
"RTN","DGPTLMU5",38,0)
 Q
"RTN","DGPTLMU5",39,0)
 ;
"RTN","DGPTLMU5",40,0)
DI601 ;-- this function will load the 601 information
"RTN","DGPTLMU5",41,0)
 N X,X1,Y,I,J,DGDAT,DXD
"RTN","DGPTLMU5",42,0)
 S I=0 F  S I=$O(^DGPT(DGPTF,"P",I)) Q:'I  D
"RTN","DGPTLMU5",43,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)="",DGDAT=$P(X,U)
"RTN","DGPTLMU5",44,0)
 . S X1="",X=$G(^DGPT(DGPTF,"P",I,0)) Q:X']""
"RTN","DGPTLMU5",45,0)
 . S Y="Procedure Date :"_$S($P(X,U):$$FTIME^VALM1($P(X,U)),1:"")
"RTN","DGPTLMU5",46,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU5",47,0)
 . S Y="Specialty :"_$P($G(^DIC(42.4,+$P(X,U,2),0)),U,1)
"RTN","DGPTLMU5",48,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU5",49,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1
"RTN","DGPTLMU5",50,0)
 . S Y="Dialysis Type :"_$P($G(^DG(45.4,+$P(X,U,3),0)),U,1)
"RTN","DGPTLMU5",51,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU5",52,0)
 . S Y="Num of Dialysis Treat :"_$P(X,U,4)
"RTN","DGPTLMU5",53,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU5",54,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1
"RTN","DGPTLMU5",55,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)="PROCEDURE CODES :"
"RTN","DGPTLMU5",56,0)
 . F J=5:1:9 I $P(X,U,J) D
"RTN","DGPTLMU5",57,0)
 .. S DXD=$$ICDOP^ICDCODE($P(X,U,J),DGDAT),Y=$P(DXD,U,2)_" - "_$P(DXD,U,5)
"RTN","DGPTLMU5",58,0)
 .. S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=" "_Y
"RTN","DGPTLMU5",59,0)
 Q
"RTN","DGPTLMU5",60,0)
 ;
"RTN","DGPTLMU6")
0^6^B8349405
"RTN","DGPTLMU6",1,0)
DGPTLMU6 ;ALB/MTC - PTF A/P LIST MANAGER UTILITY CONT. ; 9-24-92
"RTN","DGPTLMU6",2,0)
 ;;5.3;Registration;**606**;Aug 13, 1993
"RTN","DGPTLMU6",3,0)
 ;
"RTN","DGPTLMU6",4,0)
DI501 ;-- this function will load the 501 information into the display array
"RTN","DGPTLMU6",5,0)
 N X,Y,I,J
"RTN","DGPTLMU6",6,0)
 S I=0 F  S I=$O(^DGPT(DGPTF,"M",I)) Q:'I  D
"RTN","DGPTLMU6",7,0)
 . S X1="",X=$G(^DGPT(DGPTF,"M",I,0)) Q:X']""
"RTN","DGPTLMU6",8,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=""
"RTN","DGPTLMU6",9,0)
 . S Y="Movement Dt :"_$S($P(X,U,10):$$FTIME^VALM1($P(X,U,10)),1:"")
"RTN","DGPTLMU6",10,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU6",11,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU6",12,0)
 . S Y="Treated for SC condit :"_$S($P(X,U,18)=1:"YES",1:"NO")
"RTN","DGPTLMU6",13,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU6",14,0)
 . S Y="Treated for AO condit :"_$S($P(X,U,26)=1:"YES",1:"NO")
"RTN","DGPTLMU6",15,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU6",16,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU6",17,0)
 . S Y="Treated for IR condit :"_$S($P(X,U,27)=1:"YES",1:"NO")
"RTN","DGPTLMU6",18,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU6",19,0)
 . S Y="Treated for EC condit :"_$S($P(X,U,28)=1:"YES",1:"NO")
"RTN","DGPTLMU6",20,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU6",21,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU6",22,0)
 . S Y="Leave Days :"_$S($P(X,U,3):$P(X,U,3),1:"")
"RTN","DGPTLMU6",23,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU6",24,0)
 . S Y="Pass Days :"_$S($P(X,U,4):$P(X,U,4),1:"")
"RTN","DGPTLMU6",25,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU6",26,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU6",27,0)
 . S Y="Losing Specialty :"_$S($P(X,U,2):$P(^DIC(42.4,$P(X,U,2),0),U),1:"")
"RTN","DGPTLMU6",28,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,75)
"RTN","DGPTLMU6",29,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU6",30,0)
 .;
"RTN","DGPTLMU6",31,0)
 .;-- check for ICD codes
"RTN","DGPTLMU6",32,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)="ICD CODES :"
"RTN","DGPTLMU6",33,0)
 . F J=5:1:9,11:1:15 I $P(X,U,J) D
"RTN","DGPTLMU6",34,0)
 .. S Y=$$ICDDX^ICDCODE($P(X,U,J),$P(X,U,10)),Y=$P(Y,U,2)_" - "_$P(Y,U,4)
"RTN","DGPTLMU6",35,0)
 .. S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=" "_Y
"RTN","DGPTLMU6",36,0)
 .;
"RTN","DGPTLMU6",37,0)
 .;-- check for 300 node information
"RTN","DGPTLMU6",38,0)
 .;
"RTN","DGPTLMU6",39,0)
 . S X2=$G(^DGPT(DGPTF,"M",I,300)) I X2]"" D DI300^DGPTLMU4(X2)
"RTN","DGPTLMU6",40,0)
 Q
"RTN","DGPTLMU6",41,0)
 ;
"RTN","DGPTLMU6",42,0)
DI535 ;-- this function will load the 535 information
"RTN","DGPTLMU6",43,0)
 N Y,X,X1,DG535
"RTN","DGPTLMU6",44,0)
 S DG535=0 F  S DG535=$O(^DGPT(DGPTF,535,DG535)) Q:'DG535  D
"RTN","DGPTLMU6",45,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=""
"RTN","DGPTLMU6",46,0)
 . S X=$G(^DGPT(DGPTF,535,DG535,0)),X1=""
"RTN","DGPTLMU6",47,0)
 . S Y="Ward Movement Date :"_$S($P(X,U,10):$$FTIME^VALM1($P(X,U,10)),1:"")
"RTN","DGPTLMU6",48,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU6",49,0)
 . S Y="Losing Ward Specialty :"_$P(^DIC(42.4,$P(X,U,2),0),U,1)
"RTN","DGPTLMU6",50,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU6",51,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU6",52,0)
 . S Y="Leave Days : "_$P(X,U,3)
"RTN","DGPTLMU6",53,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU6",54,0)
 . S Y="Pass Days :"_$P(X,U,4)
"RTN","DGPTLMU6",55,0)
 . S X1=$$SETSTR^VALM1(Y,X1,45,30)
"RTN","DGPTLMU6",56,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU6",57,0)
 . S Y="Losing Ward : "_$P(^DIC(42,$P(X,U,6),0),U)
"RTN","DGPTLMU6",58,0)
 . S X1=$$SETSTR^VALM1(Y,X1,1,40)
"RTN","DGPTLMU6",59,0)
 . S ^TMP("ARCPTFDI",$J,$$NUM^DGPTLMU4(.NUMREC),0)=X1,X1=""
"RTN","DGPTLMU6",60,0)
 Q
"RTN","DGPTLMU6",61,0)
 ;
"RTN","DGPTODI3")
0^12^B21618176
"RTN","DGPTODI3",1,0)
DGPTODI3 ;ALB/MTC - DRG INDEX(CONT),PRINT FROM ^UTILITY GLOBAL ; 8/29/01 11:08am
"RTN","DGPTODI3",2,0)
 ;;5.3;Registration;**51,158,164,375,606**;Aug 13, 1993
"RTN","DGPTODI3",3,0)
 S (DGPAG,DGAT,DGBT,DGAAL,DGTP,DG1DAY,DGTDRG,DGTP(1),DGUNIQ,SSN(1))=0,$P(DGLN,"=",132)="",$P(DGLN2,"-",132)=""
"RTN","DGPTODI3",4,0)
 F DRG=0:0 D:DRG>0 TOT S DRG=$O(^UTILITY($J,"DGDRGI",DRG)) Q:DRG'>0  D HDR S J1=0 F J=0:0 S J1=$O(^UTILITY($J,"DGDRGI",DRG,J1)) Q:J1']""  S:DGP DGPT=J1 S:'DGP DGTD=J1 D L2
"RTN","DGPTODI3",5,0)
 W @IOF,!?61,"Summary Page",!!!,"Total combined hits for Medical Center of all DRGs: ",DGTP(1),!,"The following list gives the total hits by DRG:"
"RTN","DGPTODI3",6,0)
 S DRG="" F J=0:0 Q:DRG<0  W ! F %=1:1:8 S DRG=$O(DRG(DRG)) S:DRG'>0 DRG=-1 Q:DRG'>0  W "    DRG ",$J(DRG,3),":",$J(DRG(DRG),4)
"RTN","DGPTODI3",7,0)
 D:$D(^UTILITY($J,"DGDRGI","DGNOCODE")) NC K DGAT,DGBT,DGAAL,DG1DAY,DGTDRG,DGUNIQ,DGLN,DGLN2,DGPT,DGAL,DGTD,DGDT,DGHI,DGLO,DGPAG,DGNC,DGTP,I,J,J1,K,L Q
"RTN","DGPTODI3",8,0)
L2 F K=0:0 S K=$O(^UTILITY($J,"DGDRGI",DRG,J1,K)) Q:K'>0  F L=0:0 S L=$O(^UTILITY($J,"DGDRGI",DRG,J1,K,L)) Q:L']""  S DGDT=L,X=^(L) D LN
"RTN","DGPTODI3",9,0)
 Q
"RTN","DGPTODI3",10,0)
LN I $Y>$S('$D(IOSL):60,1:(IOSL-6)) D HDR
"RTN","DGPTODI3",11,0)
 S DGTP=DGTP+1,DGTDRG=DGTDRG+1 W !! W:DGP DGPT I 'DGP S DFN=$P(X,"^",2) W $P(^DPT(DFN,0),"^",1)
"RTN","DGPTODI3",12,0)
 S SSN(2)=$P(X,"^") W ?33,SSN(2),?44 S:SSN(2)'=SSN(1) DGUNIQ=DGUNIQ+1,SSN(1)=SSN(2) S Y=$P(X,"^",6) D DT W:DGD=0 ?55,"----------" I DGD S Y=$P(X,"^",7) I Y W ?55 D DT
"RTN","DGPTODI3",13,0)
 W ?66 W:DGDT=1!(DGDT=$P(X,"^",7)) "----------" I DGDT>1&(DGDT'=$P(X,"^",7)) S Y=DGDT D DT
"RTN","DGPTODI3",14,0)
 W ?76 S DGLOS=$P(X,"^",3),DGBE=$P(X,"^",9) W $J(DGLOS,4),?83,$J(DGBE,5) I DGLOS>0 W ?91 D FLG
"RTN","DGPTODI3",15,0)
 W ?99 S DGSTAT=$P(X,"^",8) W $S(DGSTAT=0:"O",DGSTAT=1:"C",DGSTAT=2:"R",1:"T")
"RTN","DGPTODI3",16,0)
 S DGPRO=$P(X,"^",4),DGBS=$P(X,"^",5) W ?103 W:DGPRO'>0 "not specified/" I DGPRO>0 W $S($D(^VA(200,DGPRO,0)):$E($P(^VA(200,DGPRO,0),"^",1),1,29),1:"not specified"),"/"
"RTN","DGPTODI3",17,0)
 I DGBS>0 W !,?103,$E($P(^DIC(42.4,DGBS,0),"^",1),1,29)
"RTN","DGPTODI3",18,0)
 Q
"RTN","DGPTODI3",19,0)
FLG I DGLOS=1 S DG1DAY=DG1DAY+1 W "   *" Q
"RTN","DGPTODI3",20,0)
 S %="" S:DGBE]""&(DGLOS>DGBE) DGBT=DGBT+1,%="B" S:DGHI]""&(DGLOS>DGHI) DGAT=DGAT+1,%=%_"H" S:DGAL]""&(DGLOS>DGAL) DGAAL=DGAAL+1,%=%_"A" W:%]"" $J(%,4) Q
"RTN","DGPTODI3",21,0)
TOT W !,DGLN,!?3,"Total: ",DGTP,!,?3,"Total Unique Patients: ",DGUNIQ S %=$S('$D(IOSL):56,1:(IOSL-10)) F I=$Y:1:% W !
"RTN","DGPTODI3",22,0)
 W !!,"FLAGS:  H - Total Above High Trim: ",DGAT,"   * - Total 1 Day LOS: ",DG1DAY,"   A - Total Above ALOS: ",DGAAL
"RTN","DGPTODI3",23,0)
 S DRG(DRG)=DGTP,DGTP(1)=DGTP(1)+DGTP,(DGTP,DGBT,DGAT,DG1DAY,DGAAL,DGUNIQ,SSN(1))=0 W !!?64,"-",DGPAG,"-" Q
"RTN","DGPTODI3",24,0)
DT W $TR($$FMTE^XLFDT(Y,"5DF")," ","0") S Y="" Q
"RTN","DGPTODI3",25,0)
HDR W @IOF,!,"DRG INDEX FOR DRG ",DRG,?30,"Weight: " S %=$S($D(^ICD(DRG,"FY",DGFY2K,0)):(^(0)),1:"") W $P(%,"^",2),?46,"Low Trim: " S DGLO=$P(%,"^",3),DGHI=$P(%,"^",4),DGAL=$P(%,"^",9) W DGLO,?60,"High Trim: ",DGHI,?76,"Avg LOS: ",DGAL
"RTN","DGPTODI3",26,0)
 W ?105,"PRINTED: " S Y=DT X ^DD("DD") W Y,!?3,"For ",$S(DGD:"Discharge Dates from: ",1:"Active Admissions") I DGD S Y=DGSD+.1 X ^DD("DD") W $P(Y,"@")," to " S Y=DGED X ^DD("DD") W $P(Y,"@") I DGB W " including TRANSFER DRGs"
"RTN","DGPTODI3",27,0)
 ;W !!,?5,"Description:" F %=0:0 S %=$O(^ICD(DRG,1,%)) Q:%'>0  W ?18,^ICD(DRG,1,%,0),!
"RTN","DGPTODI3",28,0)
 N DXD,DGDX S DXD=$$DRGD^ICDGTDRG(DRG,"DGDX",,DT)
"RTN","DGPTODI3",29,0)
 W !!,?5,"Description:" F %=0:0 S %=$O(DGDX(%)) Q:'+%  Q:DGDX(%)=" "  W ?18,DGDX(%),!
"RTN","DGPTODI3",30,0)
 W !!,?44,"ADMISSION",?55,"DISCHARGE",?66,"TRANSFER",?97,"PTF",?103,"TRANSFERRING PROVIDER/"
"RTN","DGPTODI3",31,0)
 W !,"PATIENT NAME",?33,"SSN",?44,"DATE",?55,"DATE",?66,"DATE",?77,"LOS",?91,"FLGS",?97,"STAT",?103,"LOSING SPECIALTY"
"RTN","DGPTODI3",32,0)
 W !,DGLN S DGPAG=DGPAG+1 S:'$D(^UTILITY($J,"DGTC",DRG)) ^UTILITY($J,"DGTC",DRG,DGPAG)="" Q
"RTN","DGPTODI3",33,0)
PNC W !,DGNC,?9,$P(^DPT(DFN,0),"^"),?45,$P(^(0),"^",9),?63 S Y=DGDT D DT Q
"RTN","DGPTODI3",34,0)
HD2 W:DGPAG>0 !,?64,"-",DGPAG,"-",@IOF S DGPAG=DGPAG+1 W !,"PTF #",?9,"PATIENT NAME",?45,"SSN",?60,"ADMISSION DATE",!,DGLN Q
"RTN","DGPTODI3",35,0)
NC S (DGPAG,DGTP)=0
"RTN","DGPTODI3",36,0)
 W @IOF,"A ",$S(DGB:"transfer ",1:""),"DRG can not be computed for 1 or more movement(s) associated with the following PTF records because ",$S(DGB:"transfer ",1:""),"ICD code(s) "
"RTN","DGPTODI3",37,0)
 W:DGB ! W "are missing:"
"RTN","DGPTODI3",38,0)
 D HD2
"RTN","DGPTODI3",39,0)
 F DGNC=0:0 S DGNC=$O(^UTILITY($J,"DGDRGI","DGNOCODE",DGNC)) Q:DGNC'>0  S DGTP=DGTP+1,DFN=+^UTILITY($J,"DGDRGI","DGNOCODE",DGNC),DGDT=$P(^(DGNC),"^",2) D PNC D:$Y>$S('$D(IOSL):58,1:(IOSL-8)) HD2
"RTN","DGPTODI3",40,0)
 S:DGPAG=0 DGPAG=1 W !,DGLN,!,"Total PTF Records: ",DGTP S %=$S('$D(IOSL):60,1:IOSL-6) F I=$Y:1:% W !
"RTN","DGPTODI3",41,0)
 W !?64,"-",DGPAG,"-",! Q
"RTN","DGPTTRIM")
0^13^B3137495
"RTN","DGPTTRIM",1,0)
DGPTTRIM ;ALB/JDS - SET UP DRG INFO ; 26 AUG 84  14:16
"RTN","DGPTTRIM",2,0)
 ;;5.3;Registration;**158,606**;Aug 13, 1993
"RTN","DGPTTRIM",3,0)
 ;
"RTN","DGPTTRIM",4,0)
 W !!,"SET UP DRG VALUES FOR FISCAL YEARS",!!
"RTN","DGPTTRIM",5,0)
FY R !,"Fiscal year to set up data for: ",DGFY:DTIME G Q:DGFY=""!(DGFY["^") I DGFY'?2N W !!,"Enter the fiscal year as 'NN' (ex: '84' for fiscal year 1984).",*7,*7,! G FY
"RTN","DGPTTRIM",6,0)
 S DGFY2K=$$DGY2K^DGPTOD0(DGFY)
"RTN","DGPTTRIM",7,0)
ASK ;W !! S DIC="^ICD(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S DGDRG=^ICD(+Y,0)
"RTN","DGPTTRIM",8,0)
 W !! S DIC="^ICD(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S DGDRG=$$DRG^ICDGTDRG(+Y)
"RTN","DGPTTRIM",9,0)
 W !!,"**National DRG Values - not editable**",!?5,$J("WWU: ",16),$P(DGDRG,U,2),!?5,$J("Low Trim Days: ",16),$P(DGDRG,U,3),!?5,$J("High Trim Days: ",16),$P(DGDRG,U,4),!?5,$J("ALOS: ",16),$P(DGDRG,U,8),!!
"RTN","DGPTTRIM",10,0)
 S DA=+Y,DR="20///"_DGFY,DR(2,80.22)="6;7",DIE=DIC D ^DIE S:'$D(Y) ^ICD("AFY",DGFY2K)="" G ASK
"RTN","DGPTTRIM",11,0)
Q K DA,DGDRG,DGFY,DIC,DIE,DR,Y Q
"RTN","VAFHCDG")
0^2^B10344466
"RTN","VAFHCDG",1,0)
VAFHCDG ;ALB/CM OUTPATIENT DG1 SEGMENT GENERATOR ;3/30/95
"RTN","VAFHCDG",2,0)
 ;;5.3;Registration;**91,151,606**;Jun 06, 1996
"RTN","VAFHCDG",3,0)
 ;
"RTN","VAFHCDG",4,0)
 ;This routine generates the Outpatient DG1 segment
"RTN","VAFHCDG",5,0)
 ;for the Philly project
"RTN","VAFHCDG",6,0)
 ;
"RTN","VAFHCDG",7,0)
ODG1(DFN,EVENT,EVDT,VPTR,PSTR,PNUM) ;
"RTN","VAFHCDG",8,0)
 ;
"RTN","VAFHCDG",9,0)
 ;DFN - Patient File
"RTN","VAFHCDG",10,0)
 ;EVENT - event number from pivot file
"RTN","VAFHCDG",11,0)
 ;EVDT - event date/time FileMan
"RTN","VAFHCDG",12,0)
 ;VPTR - variable pointer
"RTN","VAFHCDG",13,0)
 ;PSTSR - string of fields
"RTN","VAFHCDG",14,0)
 ;(if null - required fields, if "A" - supported
"RTN","VAFHCDG",15,0)
 ;fields, or string of fields seperated by commas")
"RTN","VAFHCDG",16,0)
 ;PNUM - ID # (optional)
"RTN","VAFHCDG",17,0)
 ;
"RTN","VAFHCDG",18,0)
 I '$D(DFN)!('$D(EVENT))!('$D(EVDT))!('$D(VPTR)) Q "-1^Missing parameters, unable to generate DG1 segment"
"RTN","VAFHCDG",19,0)
 I $D(EVENT) I EVENT'="" S NODE=$$PIVX^VAFHPIVT(EVENT,DFN,EVDT)
"RTN","VAFHCDG",20,0)
 I $D(EVENT) I EVENT="" K EVENT
"RTN","VAFHCDG",21,0)
 I '$D(EVENT) S NODE=$$PIVNW^VAFHPIVT(DFN,EVDT,2,VPTR),EVENT=$P(NODE,":")
"RTN","VAFHCDG",22,0)
 I EVENT<1 Q "-1^Bad event number, unable to generate DG1 segment"
"RTN","VAFHCDG",23,0)
 S NODE=$P(NODE,":",2)
"RTN","VAFHCDG",24,0)
 ;
"RTN","VAFHCDG",25,0)
EN1 ;
"RTN","VAFHCDG",26,0)
 N HLD,DG1,TD,CODMET,CODE,LOOP,ICD
"RTN","VAFHCDG",27,0)
 S (CODE,ICD,DG1,ICD,TD,CODMET)=""
"RTN","VAFHCDG",28,0)
 S QUOT=""""""
"RTN","VAFHCDG",29,0)
 I '$D(PNUM) S PNUM=1
"RTN","VAFHCDG",30,0)
 I '$D(PSTR) S PSTR=",2,6,"
"RTN","VAFHCDG",31,0)
 ;I PSTR="A" S PSTR=$$GETF^VAFHUTL("DG1")
"RTN","VAFHCDG",32,0)
 I PSTR="A" S PSTR=",2,3,4,5,6,"
"RTN","VAFHCDG",33,0)
 I PSTR="" S PSTR=",2,6,"
"RTN","VAFHCDG",34,0)
 I +PSTR=-1 Q "-1^Unable to get fields, can't generate DG1 segment"
"RTN","VAFHCDG",35,0)
 ;S LOOP=0
"RTN","VAFHCDG",36,0)
 ;F  S LOOP=LOOP+1,HLD=$P(PSTR,",",LOOP) Q:HLD=""  D
"RTN","VAFHCDG",37,0)
 ;.I HLD=2 S CODMET="I9-ICD9"
"RTN","VAFHCDG",38,0)
 ;.I HLD=3 S CODE=$$COD(NODE) I CODE="" S CODE=QUOT
"RTN","VAFHCDG",39,0)
 ;.I HLD=4 D
"RTN","VAFHCDG",40,0)
 ;..I '$D(CODE) S CODE=$$COD(NODE)
"RTN","VAFHCDG",41,0)
 ;..I +CODE>0 S ICD=$$DES(CODE) I ICD="" S ICD=QUOT
"RTN","VAFHCDG",42,0)
 ;..I +CODE=0 S ICD=QUOT
"RTN","VAFHCDG",43,0)
 ;.I HLD=5 S TD=$$HLDATE^HLFNC(EVDT) I TD="" S TD=QUOT
"RTN","VAFHCDG",44,0)
 ;
"RTN","VAFHCDG",45,0)
 I PSTR[",2," S CODMET="I9-ICD9"
"RTN","VAFHCDG",46,0)
 I PSTR[",3," S CODE=$$COD(NODE) I CODE="" S CODE=QUOT
"RTN","VAFHCDG",47,0)
 I PSTR[",4," DO
"RTN","VAFHCDG",48,0)
 . I '$D(CODE) S CODE=$$COD(NODE)
"RTN","VAFHCDG",49,0)
 . I +CODE>0 S ICD=$$DES(CODE) I ICD="" S ICD=QUOT
"RTN","VAFHCDG",50,0)
 . I +CODE=0 S ICD=QUOT
"RTN","VAFHCDG",51,0)
 I PSTR[",5," S TD=$$HLDATE^HLFNC(EVDT) I TD="" S TD=QUOT
"RTN","VAFHCDG",52,0)
 ;
"RTN","VAFHCDG",53,0)
 S DG1=HLFS_CODE_HLFS_ICD_HLFS_TD
"RTN","VAFHCDG",54,0)
 I DG1?1"^"."^" Q "-1^Unable to populate fields "_PSTR_" - can't generate DG1 segment"
"RTN","VAFHCDG",55,0)
 S DG1="DG1"_HLFS_PNUM_HLFS_CODMET_DG1
"RTN","VAFHCDG",56,0)
 K NODE,QUOT
"RTN","VAFHCDG",57,0)
 Q DG1
"RTN","VAFHCDG",58,0)
 ;
"RTN","VAFHCDG",59,0)
COD(ZNODE) ;
"RTN","VAFHCDG",60,0)
 N OPTR,CDX,PTR,FILE
"RTN","VAFHCDG",61,0)
 ;
"RTN","VAFHCDG",62,0)
 S OPTR=$P(ZNODE,"^",5),PTR=+OPTR,FILE=$P(OPTR,";",2)
"RTN","VAFHCDG",63,0)
 I PTR=""!(FILE'="SCE(") Q QUOT
"RTN","VAFHCDG",64,0)
 ;
"RTN","VAFHCDG",65,0)
 ;try get primary dx first
"RTN","VAFHCDG",66,0)
 S CDX=$$GETPDX(PTR) I CDX DO  Q CDX
"RTN","VAFHCDG",67,0)
 . S CDX=+$P($G(^ICD9(CDX,0)),"^")
"RTN","VAFHCDG",68,0)
 . I 'CDX S CDX=QUOT
"RTN","VAFHCDG",69,0)
 ;
"RTN","VAFHCDG",70,0)
 Q QUOT
"RTN","VAFHCDG",71,0)
 ;
"RTN","VAFHCDG",72,0)
DES(CDX) ;
"RTN","VAFHCDG",73,0)
 ;Get description/name of diagnosis from diagnostic code
"RTN","VAFHCDG",74,0)
 ;
"RTN","VAFHCDG",75,0)
 I CDX="" Q QUOT
"RTN","VAFHCDG",76,0)
 I CDX'?.N1".".N S CDX=CDX_"."
"RTN","VAFHCDG",77,0)
 I '$D(^ICD9("AB",CDX)) D
"RTN","VAFHCDG",78,0)
 .I $D(^ICD9("AB",CDX_" ")) S CDX=CDX_" " Q
"RTN","VAFHCDG",79,0)
 .I $D(^ICD9("AB",CDX_"0")) S CDX=CDX_"0" Q
"RTN","VAFHCDG",80,0)
 .I $D(^ICD9("AB",CDX_"0 ")) S CDX=CDX_"0 " Q
"RTN","VAFHCDG",81,0)
 .I $D(^ICD9("AB",CDX_"00")) S CDX=CDX_"00" Q
"RTN","VAFHCDG",82,0)
 .I $D(^ICD9("AB",CDX_"00 ")) S CDX=CDX_"00 " Q
"RTN","VAFHCDG",83,0)
 I '$D(^ICD9("AB",CDX)) Q QUOT
"RTN","VAFHCDG",84,0)
 S CDX=$O(^ICD9("AB",CDX,""))
"RTN","VAFHCDG",85,0)
 I CDX="" Q QUOT
"RTN","VAFHCDG",86,0)
 I '$D(^ICD9(CDX,0)) Q QUOT
"RTN","VAFHCDG",87,0)
 S CDX=$$ICDDX^ICDCODE(CDX,$G(EVDT))
"RTN","VAFHCDG",88,0)
 S CDX=$S(+CDX<1:QUOT,1:$P(CDX,"^",4))
"RTN","VAFHCDG",89,0)
 Q CDX
"RTN","VAFHCDG",90,0)
 ;
"RTN","VAFHCDG",91,0)
GETPDX(PTR) ;returns first primary diagnois or 0
"RTN","VAFHCDG",92,0)
 N VAENC0,VADX
"RTN","VAFHCDG",93,0)
 S VAENC0=$$SCE^DGSDU(PTR)
"RTN","VAFHCDG",94,0)
 I PTR,+VAENC0,$$DATE^SCDXUTL(+VAENC0)
"RTN","VAFHCDG",95,0)
 E  Q 0
"RTN","VAFHCDG",96,0)
 S CDX=0
"RTN","VAFHCDG",97,0)
 D GETDX^SDOE(PTR,"VADX")
"RTN","VAFHCDG",98,0)
 S VADX=0
"RTN","VAFHCDG",99,0)
 F  S VADX=$O(VADX(VADX)) Q:'VADX  DO  Q:CDX["^P"
"RTN","VAFHCDG",100,0)
 . I $P(VADX(VADX),"^",12)="P" S CDX=+VADX(VADX)_"^P"
"RTN","VAFHCDG",101,0)
 Q +CDX
"RTN","VAFHLDG1")
0^1^B30958025
"RTN","VAFHLDG1",1,0)
VAFHLDG1 ;ALB/CM/ESD HL7 DG1 SEGMENT BUILDING ;05/01/95
"RTN","VAFHLDG1",2,0)
 ;;5.3;Registration;**94,151,190,511,606**;Aug 13, 1993
"RTN","VAFHLDG1",3,0)
 ;Routine currently being changed by GRR/EDS
"RTN","VAFHLDG1",4,0)
 ;IN entry is being added
"RTN","VAFHLDG1",5,0)
 ;
"RTN","VAFHLDG1",6,0)
 ;This routine will build an HL7 DG1 segment for an inpatient or
"RTN","VAFHLDG1",7,0)
 ;outpatient event depending on the entry point used.
"RTN","VAFHLDG1",8,0)
 ;Use IN for inpatient
"RTN","VAFHLDG1",9,0)
 ;Use OUT for outpatient
"RTN","VAFHLDG1",10,0)
 ;
"RTN","VAFHLDG1",11,0)
IN(DFN,VAFHMIEN,VAFSTR,VAOUT,VAFHMDT) ;
"RTN","VAFHLDG1",12,0)
 ;Input parameters
"RTN","VAFHLDG1",13,0)
 ;DFN - Patient's Internal Entry Number
"RTN","VAFHLDG1",14,0)
 ;VAFHMIEN - Internal Entry Number of Movement
"RTN","VAFHLDG1",15,0)
 ;VAFSTR - Sequence numbers of segment to include
"RTN","VAFHLDG1",16,0)
 ;VAOUT - Variable name where output segments should be saved
"RTN","VAFHLDG1",17,0)
 ;
"RTN","VAFHLDG1",18,0)
 K @VAOUT ;Insure output array is empty
"RTN","VAFHLDG1",19,0)
 Q:VAFHMIEN=""
"RTN","VAFHLDG1",20,0)
 N VAFHLREC,VAFHAIEN,VAFHICD
"RTN","VAFHLDG1",21,0)
 S $P(VAFHLREC,HL("FS"))="DG1" ;Set the segment identifier
"RTN","VAFHLDG1",22,0)
 S VAFHMDT=$$GET1^DIQ(405,VAFHMIEN,".01","I") ;Movement Date/Time
"RTN","VAFHLDG1",23,0)
 S VAFHTT=$$GET1^DIQ(405,VAFHMIEN,".02","I") ;Get the movement transaction type (admit, transfer, disharge)
"RTN","VAFHLDG1",24,0)
 I VAFHTT=1 S VAFHAIEN=VAFHMIEN ;If 'admit' movement capture ien
"RTN","VAFHLDG1",25,0)
 I VAFHTT'=1 S VAFHAIEN=$$GET1^DIQ(405,VAFHMIEN,".14","I") ;If not 'admit' movement, get ien of admission movement
"RTN","VAFHLDG1",26,0)
 Q:VAFHAIEN=""  ;Quit if no admission movement
"RTN","VAFHLDG1",27,0)
 S VAFHADT=$$GET1^DIQ(405,VAFHAIEN,".01","I") ;Get Admission date/time
"RTN","VAFHLDG1",28,0)
 S VAFHPTF=$O(^DGPT("AAD",DFN,VAFHADT,"")) Q:VAFHPTF=""  ;Get pointer to ptf record and quit if none exists
"RTN","VAFHLDG1",29,0)
 S VACNT=0 ;Initialize counter
"RTN","VAFHLDG1",30,0)
 ;I VAFHTT'=3 D  ;If not a 'discharge' type, get Movement ICD codes and descriptions
"RTN","VAFHLDG1",31,0)
 ;.S DGLMR=$P($G(^DGPT(VAFHPTF,"M",0)),"^",3) ;Get Last movement ien
"RTN","VAFHLDG1",32,0)
 ;.Q:DGLMR=""  ;Quit if no movement entry
"RTN","VAFHLDG1",33,0)
 ;.S DIQ="DGAM",DIQ(0)="I",DIC=45,DR=50,DA=VAFHPTF,DR(45.02)="5:15",DA(45.02)=DGLMR D EN^DIQ1 ;Retrieve the movement ICD fields
"RTN","VAFHLDG1",34,0)
 ;.I $D(DGAM(45.02,DGLMR)) D  ;If ICD data exists
"RTN","VAFHLDG1",35,0)
 ;..F VAFLD=5,6,7,8,9,11,12,13,14,15 I $G(DGAM(45.02,DGLMR,VAFLD,"I"))]"" S VACNT=VACNT+1,VAFHICD(VACNT)=DGAM(45.02,DGLMR,VAFLD,"I") ;Check each ICD field for data and store in array if data exists
"RTN","VAFHLDG1",36,0)
 ;I VAFHTT=3 D  ;If movement 'discharge' type, get ICD codes and descriptions from discharge data
"RTN","VAFHLDG1",37,0)
 F VAFLD=79,79.16,79.17,79.18,79.19,79.201,79.21,79.22,79.23,79.24 S VAFHICD=$$GET1^DIQ(45,VAFHPTF,VAFLD,"I") I VAFHICD]"" S VACNT=VACNT+1,VAFHICD(VACNT)=VAFHICD ;Check each ICD field for data and store in array if data exists
"RTN","VAFHLDG1",38,0)
 I $O(VAFHICD(0))="" Q  ;Quit if no data in ICD array
"RTN","VAFHLDG1",39,0)
 S VACNT=0 F  S VACNT=$O(VAFHICD(VACNT)) Q:VACNT=""  D  ;If array contains ICD data
"RTN","VAFHLDG1",40,0)
 .S $P(VAFHLREC,HL("FS"))="DG1" ;Set segment type to DG1
"RTN","VAFHLDG1",41,0)
 .S $P(VAFHLREC,HL("FS"),2)=VACNT ;Set Segment Set ID to next sequential number
"RTN","VAFHLDG1",42,0)
 .I VAFSTR[",2," S $P(VAFHLREC,HL("FS"),3)="I9" ;Set 'Diagnosis Coding Method' to reflect ICD9
"RTN","VAFHLDG1",43,0)
 .I VAFSTR[",3," S $P(VAFHLREC,HL("FS"),4)=$$GET1^DIQ(80,VAFHICD(VACNT),".01","I")_$E(HL("ECH"))_$P($$ICDDX^ICDCODE(VAFHICD(VACNT),VAFHMDT),"^",4) ;Icd Code and Description
"RTN","VAFHLDG1",44,0)
 .I VAFSTR[",5," S $P(VAFHLREC,HL("FS"),6)=$$HLDATE^HLFNC(VAFHMDT) ;Diagnosis Date/Time set to Movement Date/Time
"RTN","VAFHLDG1",45,0)
 .S @VAOUT@(VACNT,0)=VAFHLREC ;Set next node of ICD output array to the newly created segment
"RTN","VAFHLDG1",46,0)
 Q
"RTN","VAFHLDG1",47,0)
 ;
"RTN","VAFHLDG1",48,0)
 ;
"RTN","VAFHLDG1",49,0)
OUT(DFN,EVT,EVDTS,VPTR,STRP,NUMP) ;
"RTN","VAFHLDG1",50,0)
 ;DFN - Patient File
"RTN","VAFHLDG1",51,0)
 ;EVT - event number from pivot file
"RTN","VAFHLDG1",52,0)
 ;EVDTS - event date/time FileMan
"RTN","VAFHLDG1",53,0)
 ;VPTR - variable pointer
"RTN","VAFHLDG1",54,0)
 ;STRP - string of fields
"RTN","VAFHLDG1",55,0)
 ;(if null - required fields, if "A" - supported
"RTN","VAFHLDG1",56,0)
 ;fields, or string of fields seperated by commas")
"RTN","VAFHLDG1",57,0)
 ;NUMP - ID # (optional)
"RTN","VAFHLDG1",58,0)
 ;
"RTN","VAFHLDG1",59,0)
 N ERR
"RTN","VAFHLDG1",60,0)
 I '$D(NUMP) S NUMP=1
"RTN","VAFHLDG1",61,0)
 S ERR=$$ODG1^VAFHCDG($G(DFN),$G(EVT),$G(EVDTS),$G(VPTR),$G(STRP),NUMP)
"RTN","VAFHLDG1",62,0)
 Q ERR
"RTN","VAFHLDG1",63,0)
 ;
"RTN","VAFHLDG1",64,0)
 ;
"RTN","VAFHLDG1",65,0)
EN(VAFENC,VAFSTR,VAFHLQ,VAFHLFS,VAFARRY) ; Entry point for Ambulatory Care Database Project
"RTN","VAFHLDG1",66,0)
 ; - Entry point to return the HL7 DG1 segment
"RTN","VAFHLDG1",67,0)
 ;
"RTN","VAFHLDG1",68,0)
 ;   This function will create VA-specific DG1 segment(s) for a 
"RTN","VAFHLDG1",69,0)
 ;   given outpatient encounter.  The DG1 segment is designed to transfer
"RTN","VAFHLDG1",70,0)
 ;   generic information about an outpatient diagnosis or diagnoses.
"RTN","VAFHLDG1",71,0)
 ;
"RTN","VAFHLDG1",72,0)
 ;  Input:   VAFENC - IEN of the Outpatient Encounter (#409.68) file
"RTN","VAFHLDG1",73,0)
 ;           VAFSTR - String of fields requested separated by commas
"RTN","VAFHLDG1",74,0)
 ;           VAFHLQ - Optional HL7 null variable. If not there, use 
"RTN","VAFHLDG1",75,0)
 ;                    default HL7 variable
"RTN","VAFHLDG1",76,0)
 ;          VAFHLFS - Optional HL7 field separator. If not there, use 
"RTN","VAFHLDG1",77,0)
 ;                    default HL7 variable
"RTN","VAFHLDG1",78,0)
 ;          VAFARRY - Optional user-supplied array name to hold the HL7 DG1 segments
"RTN","VAFHLDG1",79,0)
 ;
"RTN","VAFHLDG1",80,0)
 ; Output:  Array of HL7 DG1 segments
"RTN","VAFHLDG1",81,0)
 ;
"RTN","VAFHLDG1",82,0)
 ;
"RTN","VAFHLDG1",83,0)
 N I,VAFDICDE,VAFIDX,VAFNODE,VAFDNODE,VAFY,VAXY,X,ICDVDT
"RTN","VAFHLDG1",84,0)
 S VAFARRY=$G(VAFARRY),ICDVDT=$$SCE^DGSDU(VAFENC,1,0)
"RTN","VAFHLDG1",85,0)
 ;
"RTN","VAFHLDG1",86,0)
 ; - If VAFARRY not defined, use ^TMP("VAFHL",$J,"DIAGNOSIS")
"RTN","VAFHLDG1",87,0)
 S:(VAFARRY="") VAFARRY="^TMP(""VAFHL"",$J,""DIAGNOSIS"")"
"RTN","VAFHLDG1",88,0)
 ;
"RTN","VAFHLDG1",89,0)
 ; - If VAFHLQ or VAFHLFS aren't passed in, use default HL7 variables
"RTN","VAFHLDG1",90,0)
 S VAFHLQ=$S($D(VAFHLQ):VAFHLQ,1:$G(HLQ)),VAFHLFS=$S($D(VAFHLFS):VAFHLFS,1:$G(HLFS))
"RTN","VAFHLDG1",91,0)
 I '$G(VAFENC)!($G(VAFSTR)']"") S @VAFARRY@(1,0)="DG1"_VAFHLFS_1 G ENQ
"RTN","VAFHLDG1",92,0)
 S VAFIDX=0,VAFSTR=","_VAFSTR_","
"RTN","VAFHLDG1",93,0)
 ;
"RTN","VAFHLDG1",94,0)
 ; - Get all outpatient diagnoses for encounter
"RTN","VAFHLDG1",95,0)
 D GETDX^SDOE(VAFENC,"VAXY")
"RTN","VAFHLDG1",96,0)
 ;
"RTN","VAFHLDG1",97,0)
 ; - Set diagnosis array to 0 if no outpatient diagnosis for encounter
"RTN","VAFHLDG1",98,0)
 I '$G(VAXY) S VAXY(1)=0
"RTN","VAFHLDG1",99,0)
 ;
"RTN","VAFHLDG1",100,0)
ALL ; -- All outpatient diagnoses for encounter
"RTN","VAFHLDG1",101,0)
 ;
"RTN","VAFHLDG1",102,0)
 ; -- only send dx once per encounter / build ok array
"RTN","VAFHLDG1",103,0)
 N VAOK
"RTN","VAFHLDG1",104,0)
 F I=0:0 S I=$O(VAXY(I)) Q:'I  D
"RTN","VAFHLDG1",105,0)
 . S VAFNODE=VAXY(I)
"RTN","VAFHLDG1",106,0)
 . ;
"RTN","VAFHLDG1",107,0)
 . ; -- if this is first entry for dx then 'ok' it
"RTN","VAFHLDG1",108,0)
 . IF '$D(VAOK(+VAFNODE)) S VAOK(+VAFNODE)=I Q
"RTN","VAFHLDG1",109,0)
 . ;
"RTN","VAFHLDG1",110,0)
 . ; -- if primary then 'ok' it (if two are primary we 'ok' last)
"RTN","VAFHLDG1",111,0)
 . IF $P(VAFNODE,U,12)="P" S VAOK(+VAFNODE)=I
"RTN","VAFHLDG1",112,0)
 ;
"RTN","VAFHLDG1",113,0)
 ;
"RTN","VAFHLDG1",114,0)
 F I=0:0 S I=$O(VAXY(I)) Q:'I  D
"RTN","VAFHLDG1",115,0)
 .;
"RTN","VAFHLDG1",116,0)
 .S VAFNODE=VAXY(I)
"RTN","VAFHLDG1",117,0)
 .;
"RTN","VAFHLDG1",118,0)
 .; - build array of HL7 (DG1) segments but only use ok'ed entry for dx
"RTN","VAFHLDG1",119,0)
 .IF $G(VAOK(+VAFNODE))=I D BUILD
"RTN","VAFHLDG1",120,0)
 ;
"RTN","VAFHLDG1",121,0)
ENQ Q
"RTN","VAFHLDG1",122,0)
 ;
"RTN","VAFHLDG1",123,0)
 ;
"RTN","VAFHLDG1",124,0)
BUILD ; - Build array of HL7 (DG1) segments
"RTN","VAFHLDG1",125,0)
 S $P(VAFY,VAFHLFS,16)="",VAFIDX=VAFIDX+1
"RTN","VAFHLDG1",126,0)
 S VAFDICDE="I9" ; Diagnosis Coding Method = I9 (ICD-9)
"RTN","VAFHLDG1",127,0)
 ;
"RTN","VAFHLDG1",128,0)
 ; - Sequential number (required field)
"RTN","VAFHLDG1",129,0)
 S $P(VAFY,VAFHLFS,1)=VAFIDX
"RTN","VAFHLDG1",130,0)
 ;
"RTN","VAFHLDG1",131,0)
 I VAFSTR[",2," S $P(VAFY,VAFHLFS,2)=$S($G(VAFDICDE)]"":VAFDICDE,1:VAFHLQ) ; Diagnosis Coding Method = ICD-9
"RTN","VAFHLDG1",132,0)
 ;I (VAFSTR[",3,")!(VAFSTR[",4,") S VAFDNODE=$G(^ICD9(+$G(VAFNODE),0)) ; Get node from ICD Diagnosis file
"RTN","VAFHLDG1",133,0)
 I (VAFSTR[",3,")!(VAFSTR[",4,") S VAFDNODE=$$ICDDX^ICDCODE(+VAFNODE,$G(ICDVDT)) ; Get node from ICD Diagnosis file
"RTN","VAFHLDG1",134,0)
 I VAFSTR[",3," S X=$P($G(VAFDNODE),"^",2),$P(VAFY,VAFHLFS,3)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Code
"RTN","VAFHLDG1",135,0)
 I VAFSTR[",4," S X=$P($G(VAFDNODE),"^",4),$P(VAFY,VAFHLFS,4)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Description
"RTN","VAFHLDG1",136,0)
 I VAFSTR[",5," S X=$$HLDATE^HLFNC($$SCE^DGSDU(VAFENC,1,0)),$P(VAFY,VAFHLFS,5)=$S(X]"":X,1:VAFHLQ) ; Diagnosis Date/Time (Encounter Date/Time)
"RTN","VAFHLDG1",137,0)
 ;
"RTN","VAFHLDG1",138,0)
 ; - Contains 1 if primary diagnosis, blank otherwise
"RTN","VAFHLDG1",139,0)
 I VAFSTR[",15," S X=$P($G(VAFNODE),"^",12),$P(VAFY,VAFHLFS,15)=$S(X="P":1,1:VAFHLQ) ; Diagnosis Ranking Number
"RTN","VAFHLDG1",140,0)
 ;
"RTN","VAFHLDG1",141,0)
 ; - Set all outpatient diagnoses into array
"RTN","VAFHLDG1",142,0)
 S @VAFARRY@(VAFIDX,0)="DG1"_VAFHLFS_$G(VAFY)
"RTN","VAFHLDG1",143,0)
 Q
"RTN","VAFHLPR1")
0^3^B17081141
"RTN","VAFHLPR1",1,0)
VAFHLPR1 ;ALB/ESD - Create generic HL7 PR1 Segment ;4/4/00
"RTN","VAFHLPR1",2,0)
 ;;5.3;Registration;**94,123,160,215,243,606**;Aug 13, 1993
"RTN","VAFHLPR1",3,0)
 ;06/22/99 ACS - Added CPT modifier API calls and added CPT modifier to the
"RTN","VAFHLPR1",4,0)
 ;PR1 segment (sequence 16)
"RTN","VAFHLPR1",5,0)
 ;
"RTN","VAFHLPR1",6,0)
 ;  This function will create VA-specific PR1 segment(s) for a 
"RTN","VAFHLPR1",7,0)
 ;  given outpatient encounter. The PR1 segment is designed to transfer
"RTN","VAFHLPR1",8,0)
 ;  information relative to various types of procedures performed during
"RTN","VAFHLPR1",9,0)
 ;  a patient visit.
"RTN","VAFHLPR1",10,0)
 ;
"RTN","VAFHLPR1",11,0)
EN(VAFENC,VAFSTR,VAFHLQ,VAFHLFS,VAFHLECH,VAFARRY) ; Entry point for Ambulatory Care Database Project
"RTN","VAFHLPR1",12,0)
 ; - Entry point to return the HL7 PR1 segment
"RTN","VAFHLPR1",13,0)
 ;
"RTN","VAFHLPR1",14,0)
 ;  Input:   VAFENC - IEN of the Outpatient Encounter (#409.68) file
"RTN","VAFHLPR1",15,0)
 ;           VAFSTR - String of fields requested separated by commas
"RTN","VAFHLPR1",16,0)
 ;           VAFHLQ - Optional HL7 null variable. If not there, use 
"RTN","VAFHLPR1",17,0)
 ;                    default HL7 variable
"RTN","VAFHLPR1",18,0)
 ;          VAFHLFS - Optional HL7 field separator. If not there, use 
"RTN","VAFHLPR1",19,0)
 ;                    default HL7 variable
"RTN","VAFHLPR1",20,0)
 ;         VAFHLECH - HL7 variable containing encoding characters
"RTN","VAFHLPR1",21,0)
 ;          VAFARRY - Optional user-supplied array name which will hold PR1 segments
"RTN","VAFHLPR1",22,0)
 ;
"RTN","VAFHLPR1",23,0)
 ; Output: Array of HL7 PR1 segments
"RTN","VAFHLPR1",24,0)
 ;
"RTN","VAFHLPR1",25,0)
 ;
"RTN","VAFHLPR1",26,0)
 N I,J,VAFCPT,VAFIDX,VAFPR,VAFPROC,VAFPRTYP,VAFY,X,PTRVCPT,PROCCNT,PROCLOOP,ICPTVDT
"RTN","VAFHLPR1",27,0)
 S (J,VAFIDX)=0
"RTN","VAFHLPR1",28,0)
 S VAFARRY=$G(VAFARRY),ICPTVDT=$$SCE^DGSDU(VAFENC,1,0)
"RTN","VAFHLPR1",29,0)
 ;
"RTN","VAFHLPR1",30,0)
 ; - Variable ICPTVDT gets correct CPT/Modifier descriptor for event date
"RTN","VAFHLPR1",31,0)
 ;
"RTN","VAFHLPR1",32,0)
 ; - If VAFARRY not defined, use ^TMP("VAFHL",$J,"PROCEDURE")
"RTN","VAFHLPR1",33,0)
 S:(VAFARRY="") VAFARRY="^TMP(""VAFHL"",$J,""PROCEDURE"")"
"RTN","VAFHLPR1",34,0)
 ;
"RTN","VAFHLPR1",35,0)
 ; - If VAFHLQ or VAFHLFS aren't passed in, use default HL7 variables
"RTN","VAFHLPR1",36,0)
 S VAFHLQ=$S($D(VAFHLQ):VAFHLQ,1:$G(HLQ)),VAFHLFS=$S($D(VAFHLFS):VAFHLFS,1:$G(HLFS))
"RTN","VAFHLPR1",37,0)
 I '$G(VAFENC)!($G(VAFSTR)']"") S @VAFARRY@(1,J)="PR1"_VAFHLFS_1 G ENQ
"RTN","VAFHLPR1",38,0)
 S VAFSTR=","_VAFSTR_","
"RTN","VAFHLPR1",39,0)
 ;
"RTN","VAFHLPR1",40,0)
 ; - Get procedures for encounter
"RTN","VAFHLPR1",41,0)
 D GETCPT^SDOE(VAFENC,"VAFPROC")
"RTN","VAFHLPR1",42,0)
 ;
"RTN","VAFHLPR1",43,0)
 ; - Set procedure array to 0 if no procedures to loop thru once
"RTN","VAFHLPR1",44,0)
 I '$G(VAFPROC) S VAFPROC(1)=0
"RTN","VAFHLPR1",45,0)
 ;
"RTN","VAFHLPR1",46,0)
ALL ; - All procedures for encounter
"RTN","VAFHLPR1",47,0)
 S PTRVCPT=0
"RTN","VAFHLPR1",48,0)
 F  S PTRVCPT=+$O(VAFPROC(PTRVCPT)) Q:('PTRVCPT)  D
"RTN","VAFHLPR1",49,0)
 .;S VAFPR=$G(^ICPT(+$G(VAFPROC(PTRVCPT)),0))
"RTN","VAFHLPR1",50,0)
 .N CPTINFO
"RTN","VAFHLPR1",51,0)
 .S CPTINFO=$$CPT^ICPTCOD(+$G(VAFPROC(PTRVCPT)),,1)
"RTN","VAFHLPR1",52,0)
 .Q:CPTINFO'>0
"RTN","VAFHLPR1",53,0)
 .S VAFPR=$P(CPTINFO,"^",2,99)
"RTN","VAFHLPR1",54,0)
 .S:($P(VAFPR,"^",1)="") $P(VAFPR,"^",1)=VAFHLQ
"RTN","VAFHLPR1",55,0)
 .S:($P(VAFPR,"^",2)="") $P(VAFPR,"^",2)=VAFHLQ
"RTN","VAFHLPR1",56,0)
 .;
"RTN","VAFHLPR1",57,0)
 .; - Build array of HL7 (PR1) segments
"RTN","VAFHLPR1",58,0)
 .;   Repeated procedures get individual segment
"RTN","VAFHLPR1",59,0)
 .S PROCCNT=+$P($G(VAFPROC(PTRVCPT)),"^",16)
"RTN","VAFHLPR1",60,0)
 .S:('PROCCNT) PROCCNT=1
"RTN","VAFHLPR1",61,0)
 .F PROCLOOP=1:1:PROCCNT D BUILD
"RTN","VAFHLPR1",62,0)
 ;
"RTN","VAFHLPR1",63,0)
ENQ Q
"RTN","VAFHLPR1",64,0)
 ;
"RTN","VAFHLPR1",65,0)
 ;
"RTN","VAFHLPR1",66,0)
BUILD ; - Build array of HL7 (PR1) segments
"RTN","VAFHLPR1",67,0)
 S J=0,VAFIDX=VAFIDX+1,VAFY=""
"RTN","VAFHLPR1",68,0)
 S VAFCPT="C4" ; Procedure Coding Method = C4 (CPT-4)
"RTN","VAFHLPR1",69,0)
 ;
"RTN","VAFHLPR1",70,0)
 ; - Build HL7 (PR1) segment fields
"RTN","VAFHLPR1",71,0)
 ;
"RTN","VAFHLPR1",72,0)
 ; - Sequential number (required field)
"RTN","VAFHLPR1",73,0)
 S $P(VAFY,VAFHLFS,1)=VAFIDX
"RTN","VAFHLPR1",74,0)
 ;
"RTN","VAFHLPR1",75,0)
 I VAFSTR[",2," S $P(VAFY,VAFHLFS,2)=$S($G(VAFCPT)]"":VAFCPT,1:VAFHLQ) ; Procedure Coding Method = CPT-4
"RTN","VAFHLPR1",76,0)
 I (VAFSTR[",3,") D
"RTN","VAFHLPR1",77,0)
 .;Procedure Code
"RTN","VAFHLPR1",78,0)
 .S X=$P(VAFPR,"^",1)
"RTN","VAFHLPR1",79,0)
 .;Procedure Description
"RTN","VAFHLPR1",80,0)
 .S $P(X,$E(VAFHLECH,1),2)=$P(VAFPR,"^",2)
"RTN","VAFHLPR1",81,0)
 .;Procedure Coding Method
"RTN","VAFHLPR1",82,0)
 .S $P(X,$E(VAFHLECH,1),3)=VAFCPT
"RTN","VAFHLPR1",83,0)
 .;Add to segment
"RTN","VAFHLPR1",84,0)
 .S $P(VAFY,VAFHLFS,3)=X
"RTN","VAFHLPR1",85,0)
 I VAFSTR[",4," S $P(VAFY,VAFHLFS,4)=$P(VAFPR,"^",2) ; Procedure Description
"RTN","VAFHLPR1",86,0)
 ;
"RTN","VAFHLPR1",87,0)
 ;  *** Add CPT modifiers to sequence 16 ***
"RTN","VAFHLPR1",88,0)
 ;  VAFY    = PR1 segment
"RTN","VAFHLPR1",89,0)
 ;  MAXLEN  = maximum length of the segment
"RTN","VAFHLPR1",90,0)
 ;  WRAPCNT = continuation segment count (currently 0)
"RTN","VAFHLPR1",91,0)
 ;  FSFLAG  = field separator flag: 1="^", 0="|"
"RTN","VAFHLPR1",92,0)
 ;  MODIND  = indicates if a modifier has been added to the segment
"RTN","VAFHLPR1",93,0)
 ;
"RTN","VAFHLPR1",94,0)
 N MAXLEN,WRAPCNT,FSFLAG,MODIND
"RTN","VAFHLPR1",95,0)
 S MAXLEN=245,WRAPCNT=0,FSFLAG=1,MODIND=0
"RTN","VAFHLPR1",96,0)
 ;
"RTN","VAFHLPR1",97,0)
 ;- set up VAFY to have 15 sequences, then concatenate "PR1"
"RTN","VAFHLPR1",98,0)
 ;  onto front of segment for a total of 16 sequences
"RTN","VAFHLPR1",99,0)
 S $P(VAFY,VAFHLFS,15)=""
"RTN","VAFHLPR1",100,0)
 S VAFY="PR1"_VAFHLFS_VAFY
"RTN","VAFHLPR1",101,0)
 ;
"RTN","VAFHLPR1",102,0)
 ;check if modifiers are requested
"RTN","VAFHLPR1",103,0)
 I VAFSTR'[",16," G NOMODS
"RTN","VAFHLPR1",104,0)
 ;
"RTN","VAFHLPR1",105,0)
 ;- spin through CPT array VAFPROC and retrieve modifiers
"RTN","VAFHLPR1",106,0)
 ;- set MODIND flag to 1 if modifiers found
"RTN","VAFHLPR1",107,0)
 N PTR,MODPTR,MODINFO,MODCODE,MODTEXT,MODMETH,MODSEQ,SEGLEN
"RTN","VAFHLPR1",108,0)
 S PTR=0
"RTN","VAFHLPR1",109,0)
 F  S PTR=+$O(VAFPROC(PTRVCPT,1,PTR)) Q:'PTR  D
"RTN","VAFHLPR1",110,0)
 . S MODPTR=$G(VAFPROC(PTRVCPT,1,PTR,0))
"RTN","VAFHLPR1",111,0)
 . Q:'MODPTR
"RTN","VAFHLPR1",112,0)
 . S MODIND=1
"RTN","VAFHLPR1",113,0)
 . ;
"RTN","VAFHLPR1",114,0)
 . ;- get modifier and coding method
"RTN","VAFHLPR1",115,0)
 . S MODINFO=$$MOD^ICPTMOD(MODPTR,"I",,1)
"RTN","VAFHLPR1",116,0)
 . Q:MODINFO'>0
"RTN","VAFHLPR1",117,0)
 . S MODCODE=$P(MODINFO,"^",2)
"RTN","VAFHLPR1",118,0)
 . S MODTEXT=""
"RTN","VAFHLPR1",119,0)
 . S MODMETH=$P(MODINFO,"^",5)
"RTN","VAFHLPR1",120,0)
 . ;
"RTN","VAFHLPR1",121,0)
 . ;- get correct field separator and build sequence
"RTN","VAFHLPR1",122,0)
 . S MODSEQ=$S(FSFLAG:VAFHLFS,1:$E(VAFHLECH,2))_MODCODE
"RTN","VAFHLPR1",123,0)
 . S MODSEQ=MODSEQ_$E(VAFHLECH,1)_MODTEXT
"RTN","VAFHLPR1",124,0)
 . S MODSEQ=MODSEQ_$E(VAFHLECH,1)_MODMETH
"RTN","VAFHLPR1",125,0)
 . S FSFLAG=0
"RTN","VAFHLPR1",126,0)
 . ;
"RTN","VAFHLPR1",127,0)
 . ;- check length of VAFY segment
"RTN","VAFHLPR1",128,0)
 . S SEGLEN=$L(VAFY)+$L(MODSEQ)
"RTN","VAFHLPR1",129,0)
 . I SEGLEN>MAXLEN G DONE
"RTN","VAFHLPR1",130,0)
 . S VAFY=VAFY_MODSEQ
"RTN","VAFHLPR1",131,0)
 . Q
"RTN","VAFHLPR1",132,0)
 ;
"RTN","VAFHLPR1",133,0)
 ;- --Done spinning through the modifiers--
"RTN","VAFHLPR1",134,0)
 ;- if modifiers were added to the segment, write out the
"RTN","VAFHLPR1",135,0)
 ;  last modifier
"RTN","VAFHLPR1",136,0)
DONE S:MODIND @VAFARRY@(VAFIDX,WRAPCNT)=VAFY
"RTN","VAFHLPR1",137,0)
 ;
"RTN","VAFHLPR1",138,0)
 ;- if no modifiers were added to the segment, write segment with
"RTN","VAFHLPR1",139,0)
 ;  field separator as an empty place holder
"RTN","VAFHLPR1",140,0)
NOMODS S:'MODIND @VAFARRY@(VAFIDX,WRAPCNT)=VAFY_VAFHLFS
"RTN","VAFHLPR1",141,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
IB*2.0*266
"BLD",4108,0)
IB*2.0*266^INTEGRATED BILLING^0^3040812^y
"BLD",4108,1,0)
^^1^1^3040426^
"BLD",4108,1,1,0)
CODE TEXT DESCRIPTORS
"BLD",4108,4,0)
^9.64PA^362.3^2
"BLD",4108,4,362.3,0)
362.3
"BLD",4108,4,362.3,2,0)
^9.641^362.3^1
"BLD",4108,4,362.3,2,362.3,0)
IB BILL/CLAIMS DIAGNOSIS  (File-top level)
"BLD",4108,4,362.3,2,362.3,1,0)
^9.6411^.01^1
"BLD",4108,4,362.3,2,362.3,1,.01,0)
DIAGNOSIS
"BLD",4108,4,362.3,222)
y^n^p^^^^n^^n
"BLD",4108,4,362.3,224)

"BLD",4108,4,399,0)
399
"BLD",4108,4,399,2,0)
^9.641^399.30416^4
"BLD",4108,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",4108,4,399,2,399,1,0)
^9.6411^215^1
"BLD",4108,4,399,2,399,1,215,0)
ADMITTING DIAGNOSIS
"BLD",4108,4,399,2,399.0304,0)
PROCEDURES  (sub-file)
"BLD",4108,4,399,2,399.0304,1,0)
^9.6411^.01^1
"BLD",4108,4,399,2,399.0304,1,.01,0)
PROCEDURES
"BLD",4108,4,399,2,399.042,0)
REVENUE CODE  (sub-file)
"BLD",4108,4,399,2,399.042,1,0)
^9.6411^.06^1
"BLD",4108,4,399,2,399.042,1,.06,0)
PROCEDURE
"BLD",4108,4,399,2,399.30416,0)
CPT MODIFIER SEQUENCE  (sub-file)
"BLD",4108,4,399,2,399.30416,1,0)
^9.6411^.02^1
"BLD",4108,4,399,2,399.30416,1,.02,0)
CPT MODIFIER
"BLD",4108,4,399,222)
y^n^p^^^^n^^n
"BLD",4108,4,399,224)

"BLD",4108,4,"APDD",362.3,362.3)

"BLD",4108,4,"APDD",362.3,362.3,.01)

"BLD",4108,4,"APDD",399,399)

"BLD",4108,4,"APDD",399,399,215)

"BLD",4108,4,"APDD",399,399.0304)

"BLD",4108,4,"APDD",399,399.0304,.01)

"BLD",4108,4,"APDD",399,399.042)

"BLD",4108,4,"APDD",399,399.042,.06)

"BLD",4108,4,"APDD",399,399.30416)

"BLD",4108,4,"APDD",399,399.30416,.02)

"BLD",4108,4,"B",362.3,362.3)

"BLD",4108,4,"B",399,399)

"BLD",4108,"INIT")
EN^IB20P266
"BLD",4108,"KRN",0)
^9.67PA^8989.52^19
"BLD",4108,"KRN",.4,0)
.4
"BLD",4108,"KRN",.401,0)
.401
"BLD",4108,"KRN",.402,0)
.402
"BLD",4108,"KRN",.403,0)
.403
"BLD",4108,"KRN",.5,0)
.5
"BLD",4108,"KRN",.84,0)
.84
"BLD",4108,"KRN",3.6,0)
3.6
"BLD",4108,"KRN",3.8,0)
3.8
"BLD",4108,"KRN",9.2,0)
9.2
"BLD",4108,"KRN",9.8,0)
9.8
"BLD",4108,"KRN",9.8,"NM",0)
^9.68A^19^19
"BLD",4108,"KRN",9.8,"NM",1,0)
IBACSV^^0^B17068380
"BLD",4108,"KRN",9.8,"NM",2,0)
IBATO1^^0^B49762278
"BLD",4108,"KRN",9.8,"NM",3,0)
IBCSC4E^^0^B39280455
"BLD",4108,"KRN",9.8,"NM",4,0)
IBTOBI4^^0^B21606191
"BLD",4108,"KRN",9.8,"NM",5,0)
IBTRV2^^0^B22166861
"BLD",4108,"KRN",9.8,"NM",6,0)
IBTRVD^^0^B7583123
"BLD",4108,"KRN",9.8,"NM",7,0)
IB20P266^^0^B2188003
"BLD",4108,"KRN",9.8,"NM",8,0)
IBTRE3^^0^B26529518
"BLD",4108,"KRN",9.8,"NM",9,0)
IBTRE4^^0^B28379338
"BLD",4108,"KRN",9.8,"NM",10,0)
IBCSC4C^^0^B21582640
"BLD",4108,"KRN",9.8,"NM",11,0)
IBCCPT^^0^B58764602
"BLD",4108,"KRN",9.8,"NM",12,0)
IBCSC5^^0^B18367121
"BLD",4108,"KRN",9.8,"NM",13,0)
IBCU1^^0^B24731900
"BLD",4108,"KRN",9.8,"NM",14,0)
IBCSCH1^^0^B21600403
"BLD",4108,"KRN",9.8,"NM",15,0)
IBEFUNC2^^0^B7649280
"BLD",4108,"KRN",9.8,"NM",16,0)
IBATLM2A^^0^B33655817
"BLD",4108,"KRN",9.8,"NM",17,0)
IBATUTL^^0^B29255099
"BLD",4108,"KRN",9.8,"NM",18,0)
IBCSCP^^0^B10607644
"BLD",4108,"KRN",9.8,"NM",19,0)
IBATLM2B^^0^B5154840
"BLD",4108,"KRN",9.8,"NM","B","IB20P266",7)

"BLD",4108,"KRN",9.8,"NM","B","IBACSV",1)

"BLD",4108,"KRN",9.8,"NM","B","IBATLM2A",16)

"BLD",4108,"KRN",9.8,"NM","B","IBATLM2B",19)

"BLD",4108,"KRN",9.8,"NM","B","IBATO1",2)

"BLD",4108,"KRN",9.8,"NM","B","IBATUTL",17)

"BLD",4108,"KRN",9.8,"NM","B","IBCCPT",11)

"BLD",4108,"KRN",9.8,"NM","B","IBCSC4C",10)

"BLD",4108,"KRN",9.8,"NM","B","IBCSC4E",3)

"BLD",4108,"KRN",9.8,"NM","B","IBCSC5",12)

"BLD",4108,"KRN",9.8,"NM","B","IBCSCH1",14)

"BLD",4108,"KRN",9.8,"NM","B","IBCSCP",18)

"BLD",4108,"KRN",9.8,"NM","B","IBCU1",13)

"BLD",4108,"KRN",9.8,"NM","B","IBEFUNC2",15)

"BLD",4108,"KRN",9.8,"NM","B","IBTOBI4",4)

"BLD",4108,"KRN",9.8,"NM","B","IBTRE3",8)

"BLD",4108,"KRN",9.8,"NM","B","IBTRE4",9)

"BLD",4108,"KRN",9.8,"NM","B","IBTRV2",5)

"BLD",4108,"KRN",9.8,"NM","B","IBTRVD",6)

"BLD",4108,"KRN",19,0)
19
"BLD",4108,"KRN",19.1,0)
19.1
"BLD",4108,"KRN",101,0)
101
"BLD",4108,"KRN",409.61,0)
409.61
"BLD",4108,"KRN",771,0)
771
"BLD",4108,"KRN",870,0)
870
"BLD",4108,"KRN",8989.51,0)
8989.51
"BLD",4108,"KRN",8989.52,0)
8989.52
"BLD",4108,"KRN",8994,0)
8994
"BLD",4108,"KRN","B",.4,.4)

"BLD",4108,"KRN","B",.401,.401)

"BLD",4108,"KRN","B",.402,.402)

"BLD",4108,"KRN","B",.403,.403)

"BLD",4108,"KRN","B",.5,.5)

"BLD",4108,"KRN","B",.84,.84)

"BLD",4108,"KRN","B",3.6,3.6)

"BLD",4108,"KRN","B",3.8,3.8)

"BLD",4108,"KRN","B",9.2,9.2)

"BLD",4108,"KRN","B",9.8,9.8)

"BLD",4108,"KRN","B",19,19)

"BLD",4108,"KRN","B",19.1,19.1)

"BLD",4108,"KRN","B",101,101)

"BLD",4108,"KRN","B",409.61,409.61)

"BLD",4108,"KRN","B",771,771)

"BLD",4108,"KRN","B",870,870)

"BLD",4108,"KRN","B",8989.51,8989.51)

"BLD",4108,"KRN","B",8989.52,8989.52)

"BLD",4108,"KRN","B",8994,8994)

"BLD",4108,"QUES",0)
^9.62^^
"BLD",4108,"REQB",0)
^9.611^5^5
"BLD",4108,"REQB",1,0)
IB*2.0*210^2
"BLD",4108,"REQB",2,0)
IB*2.0*115^2
"BLD",4108,"REQB",3,0)
IB*2.0*245^2
"BLD",4108,"REQB",4,0)
ICD*18.0*12^2
"BLD",4108,"REQB",5,0)
ICPT*6.0*19^2
"BLD",4108,"REQB","B","IB*2.0*115",2)

"BLD",4108,"REQB","B","IB*2.0*210",1)

"BLD",4108,"REQB","B","IB*2.0*245",3)

"BLD",4108,"REQB","B","ICD*18.0*12",4)

"BLD",4108,"REQB","B","ICPT*6.0*19",5)

"FIA",362.3)
IB BILL/CLAIMS DIAGNOSIS
"FIA",362.3,0)
^IBA(362.3,
"FIA",362.3,0,0)
362.3IP
"FIA",362.3,0,1)
y^n^p^^^^n^^n
"FIA",362.3,0,10)

"FIA",362.3,0,11)

"FIA",362.3,0,"RLRO")

"FIA",362.3,0,"VR")
2.0^IB
"FIA",362.3,362.3)
1
"FIA",362.3,362.3,.01)

"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,215)

"FIA",399,399,304)

"FIA",399,399.0304)
1
"FIA",399,399.0304,.01)

"FIA",399,399.042)
1
"FIA",399,399.042,.06)

"FIA",399,399.30416)
1
"FIA",399,399.30416,.02)

"INIT")
EN^IB20P266
"MBREQ")
1
"PKG",192,-1)
1^1
"PKG",192,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",192,20,0)
^9.402P^1^1
"PKG",192,20,1,0)
2^^IBAXDR
"PKG",192,20,1,1)

"PKG",192,20,"B",2,1)

"PKG",192,22,0)
^9.49I^1^1
"PKG",192,22,1,0)
2.0^2940321^2940414
"PKG",192,22,1,"PAH",1,0)
266^3040812^100996
"PKG",192,22,1,"PAH",1,1,0)
^^1^1^3040812
"PKG",192,22,1,"PAH",1,1,1,0)
CODE TEXT DESCRIPTORS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
19
"RTN","IB20P266")
0^7^B2188003
"RTN","IB20P266",1,0)
IB20P266 ;WOIFO/AAT - Code Set Versioning Post Install Procedure ;19-FEB-03
"RTN","IB20P266",2,0)
 ;;2.0;INTEGRATED BILLING;**266**;21-MAR-94
"RTN","IB20P266",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P266",4,0)
 Q
"RTN","IB20P266",5,0)
 ;
"RTN","IB20P266",6,0)
 ;
"RTN","IB20P266",7,0)
EN ;Recompile Input Templates
"RTN","IB20P266",8,0)
 N IBC,DMAX,IBMAX,IBN
"RTN","IB20P266",9,0)
 ;
"RTN","IB20P266",10,0)
 S IBMAX=$$ROUSIZE^DILF
"RTN","IB20P266",11,0)
 D MES^XPDUTL("Recompiling affected input templates ...")
"RTN","IB20P266",12,0)
 F IBC=1:1 S IBN=$P($T(TMPL+IBC),";;",2) Q:IBN=""  D COMP(IBN,IBMAX)
"RTN","IB20P266",13,0)
 D MES^XPDUTL("Completed compiling input templates.")
"RTN","IB20P266",14,0)
 Q
"RTN","IB20P266",15,0)
 ;
"RTN","IB20P266",16,0)
COMP(TNAME,DMAX) ; Compile the Input Template
"RTN","IB20P266",17,0)
 N IBIEN,IBRTN,X,Y
"RTN","IB20P266",18,0)
 ;find the ien of the input template
"RTN","IB20P266",19,0)
 S IBIEN=$O(^DIE("B",TNAME,0)) Q:'IBIEN
"RTN","IB20P266",20,0)
 ;
"RTN","IB20P266",21,0)
 ;quit if input template not compiled
"RTN","IB20P266",22,0)
 S IBRTN=$P($G(^DIE(IBIEN,"ROUOLD")),U) Q:IBRTN=""
"RTN","IB20P266",23,0)
 ;
"RTN","IB20P266",24,0)
 D MES^XPDUTL("Compiling "_TNAME_" , compiled routine is "_IBRTN_" ...")
"RTN","IB20P266",25,0)
 S X=IBRTN,Y=IBIEN
"RTN","IB20P266",26,0)
 D EN^DIEZ
"RTN","IB20P266",27,0)
 D MES^XPDUTL("done")
"RTN","IB20P266",28,0)
 D MES^XPDUTL("")
"RTN","IB20P266",29,0)
 Q
"RTN","IB20P266",30,0)
 ;
"RTN","IB20P266",31,0)
TMPL ;
"RTN","IB20P266",32,0)
 ;;IB SCREEN4
"RTN","IB20P266",33,0)
 ;;IB SCREEN5
"RTN","IB20P266",34,0)
 ;;IB SCREEN6
"RTN","IB20P266",35,0)
 ;;IB SCREEN7
"RTN","IB20P266",36,0)
 ;;IB SCREEN8
"RTN","IB20P266",37,0)
 ;;IB SCREEN82
"RTN","IB20P266",38,0)
 ;;IB SCREEB8H
"RTN","IB20P266",39,0)
 ;;IB REVCODE EDIT
"RTN","IB20P266",40,0)
 ;;IBAT OUT PRICING EDIT
"RTN","IB20P266",41,0)
 ;;IBT ACTION INFO
"RTN","IB20P266",42,0)
 ;;IBT QUICK EDIT
"RTN","IB20P266",43,0)
 ;;
"RTN","IBACSV")
0^1^B17068380
"RTN","IBACSV",1,0)
IBACSV ;WOIFO/AAT-CODE SET VERSIONING IB UTILITIES ;19-FEB-03
"RTN","IBACSV",2,0)
 ;;2.0;INTEGRATED BILLING;**210,266**;21-MAR-94
"RTN","IBACSV",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBACSV",4,0)
 ;
"RTN","IBACSV",5,0)
 Q
"RTN","IBACSV",6,0)
 ;
"RTN","IBACSV",7,0)
 ;*** DD calls ***
"RTN","IBACSV",8,0)
 ; Called from Data Dictionary of 399, subfile 399.30416, field .02
"RTN","IBACSV",9,0)
B30416 ;
"RTN","IBACSV",10,0)
 S ICPTVDT=$$BDATE($G(DA(2)),$G(DA(1))) ; Date of service
"RTN","IBACSV",11,0)
 S DIC("S")="I $$MODP^ICPTMOD(+$G(^DGCR(399,DA(2),""CP"",DA(1),0)),+Y,""I"",ICPTVDT)>0"
"RTN","IBACSV",12,0)
 S DIC("W")="D EN^DDIOL(""   ""_$P($$MOD^ICPTMOD(+Y,""I"",ICPTVDT),U,3),,""?0"")"
"RTN","IBACSV",13,0)
 Q
"RTN","IBACSV",14,0)
 ;
"RTN","IBACSV",15,0)
 ;*** API calls ***
"RTN","IBACSV",16,0)
 ;
"RTN","IBACSV",17,0)
 ;Returns data of the CPT code, NULL if error
"RTN","IBACSV",18,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",19,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",20,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",21,0)
CPT(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",22,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",23,0)
 S IBERROR=""
"RTN","IBACSV",24,0)
 S IBINF=$$CPT^ICPTCOD(IBC,IBDT,1) ;Local codes supported
"RTN","IBACSV",25,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",26,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",27,0)
 ;
"RTN","IBACSV",28,0)
 ;Returns data of the ICD Operational code, NULL if error
"RTN","IBACSV",29,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",30,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",31,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",32,0)
ICD0(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",33,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",34,0)
 S IBERROR=""
"RTN","IBACSV",35,0)
 S IBINF=$$ICDOP^ICDCODE(IBC,IBDT,,1) ;Local codes supported
"RTN","IBACSV",36,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",37,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",38,0)
 ;
"RTN","IBACSV",39,0)
 ;Returns data of the ICD Diagnosis code, NULL if error
"RTN","IBACSV",40,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",41,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",42,0)
 ;DO NOT USE THIS CALL TO DETERMINE ACTIVE/INACTIVE STATUS OF THE CODE
"RTN","IBACSV",43,0)
ICD9(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",44,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",45,0)
 S IBERROR=""
"RTN","IBACSV",46,0)
 S IBINF=$$ICDDX^ICDCODE(IBC,IBDT,,1) ; Local codes supported
"RTN","IBACSV",47,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",48,0)
 Q $P(IBINF,U,2,999) ;Remove the first piece (IEN)
"RTN","IBACSV",49,0)
 ;
"RTN","IBACSV",50,0)
 ;Returns data of the DRG code, NULL if error
"RTN","IBACSV",51,0)
 ;Input: IBC-code, IBDT-date (default is today)
"RTN","IBACSV",52,0)
 ;Output: (by reference) - IBERROR - error string if error happened
"RTN","IBACSV",53,0)
DRG(IBC,IBDT,IBERROR) N IBINF
"RTN","IBACSV",54,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",55,0)
 S IBERROR=""
"RTN","IBACSV",56,0)
 S IBINF=$$DRG^ICDGTDRG(IBC,IBDT)
"RTN","IBACSV",57,0)
 I IBINF<0 S IBERROR=$P(IBINF,U,2),IBINF=""
"RTN","IBACSV",58,0)
 Q IBINF ;Format of the DRG API is different - the first piece doesn't need to be removed.
"RTN","IBACSV",59,0)
 ;
"RTN","IBACSV",60,0)
 ;
"RTN","IBACSV",61,0)
 ; ==== Determine Active Status for CPT,ICD0,ICD9 and DRG codes ====
"RTN","IBACSV",62,0)
 ;Used by DD for screening CPT codes
"RTN","IBACSV",63,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",64,0)
CPTACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",65,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",66,0)
 S IBRES=0
"RTN","IBACSV",67,0)
 S IBINF=$$CPT^ICPTCOD(IEN,IBDT)
"RTN","IBACSV",68,0)
 I IBINF'<0,$P(IBINF,U,7) S IBRES=1
"RTN","IBACSV",69,0)
 Q IBRES
"RTN","IBACSV",70,0)
 ;
"RTN","IBACSV",71,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",72,0)
ICD0ACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",73,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",74,0)
 S IBRES=0
"RTN","IBACSV",75,0)
 S IBINF=$$ICDOP^ICDCODE(IEN,IBDT)
"RTN","IBACSV",76,0)
 I IBINF'<0,$P(IBINF,U,10) S IBRES=1
"RTN","IBACSV",77,0)
 Q IBRES
"RTN","IBACSV",78,0)
 ;
"RTN","IBACSV",79,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",80,0)
ICD9ACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",81,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",82,0)
 S IBRES=0
"RTN","IBACSV",83,0)
 S IBINF=$$ICDDX^ICDCODE(IEN,IBDT)
"RTN","IBACSV",84,0)
 I IBINF'<0,$P(IBINF,U,10) S IBRES=1
"RTN","IBACSV",85,0)
 Q IBRES
"RTN","IBACSV",86,0)
 ;
"RTN","IBACSV",87,0)
 ;Is the given code active for the date? (default-today)
"RTN","IBACSV",88,0)
DRGACT(IEN,IBDT) N IBINF,IBRES
"RTN","IBACSV",89,0)
 I '$G(IBDT) S IBDT=DT
"RTN","IBACSV",90,0)
 S IBRES=0
"RTN","IBACSV",91,0)
 S IBINF=$$DRG^ICDGTDRG(IEN,IBDT)
"RTN","IBACSV",92,0)
 I IBINF'<0,$P(IBINF,U,14) S IBRES=1
"RTN","IBACSV",93,0)
 Q IBRES
"RTN","IBACSV",94,0)
 ;
"RTN","IBACSV",95,0)
 ; ==== Determine Record Number (IEN) for CPT, ICD0, ICD9 and DRG codes ====
"RTN","IBACSV",96,0)
 ; Note: the Date of Service doesn't matter here!
"RTN","IBACSV",97,0)
 ;Input: IBC-name
"RTN","IBACSV",98,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",99,0)
CPTIEN(IBC) N IBINF,IBRES
"RTN","IBACSV",100,0)
 S IBRES=""
"RTN","IBACSV",101,0)
 S IBINF=$$CPT^ICPTCOD(IBC)
"RTN","IBACSV",102,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",103,0)
 Q IBRES
"RTN","IBACSV",104,0)
 ;
"RTN","IBACSV",105,0)
 ;Input: IBC-name
"RTN","IBACSV",106,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",107,0)
ICD0IEN(IBC) N IBINF,IBRES
"RTN","IBACSV",108,0)
 S IBRES=""
"RTN","IBACSV",109,0)
 S IBINF=$$ICDOP^ICDCODE(IBC)
"RTN","IBACSV",110,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",111,0)
 Q IBRES
"RTN","IBACSV",112,0)
 ;
"RTN","IBACSV",113,0)
 ;Input: IBC-name
"RTN","IBACSV",114,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",115,0)
ICD9IEN(IBC) N IBINF,IBRES
"RTN","IBACSV",116,0)
 S IBRES=""
"RTN","IBACSV",117,0)
 S IBINF=$$ICDDX^ICDCODE(IBC)
"RTN","IBACSV",118,0)
 I IBINF>0 S IBRES=$P(IBINF,U)
"RTN","IBACSV",119,0)
 Q IBRES
"RTN","IBACSV",120,0)
 ;
"RTN","IBACSV",121,0)
 ;Input: IBC-name
"RTN","IBACSV",122,0)
 ;Returns: IEN of the code (or NULL if not valid)
"RTN","IBACSV",123,0)
DRGIEN(IBC) N IBINF,IBRES
"RTN","IBACSV",124,0)
 S IBRES=""
"RTN","IBACSV",125,0)
 S IBINF=$$DRG^ICDGTDRG(IBC)
"RTN","IBACSV",126,0)
 I IBINF'<0 S IBRES=$P(IBINF,U,17)
"RTN","IBACSV",127,0)
 Q IBRES
"RTN","IBACSV",128,0)
 ;
"RTN","IBACSV",129,0)
 ; ==== Bill's Date of Service (for diagnosis codes, revenue codes) ====
"RTN","IBACSV",130,0)
 ; Th EVENT DATE of the bill is used as a date of service for CSV
"RTN","IBACSV",131,0)
BDATE(IBIFN,PROC) ;
"RTN","IBACSV",132,0)
 ; PROC (Optional) - IEN of PROCEDURES sub-file.
"RTN","IBACSV",133,0)
 ; if PROC is defined, the function will try to return the date of procedure first.
"RTN","IBACSV",134,0)
 N IBDAT
"RTN","IBACSV",135,0)
 S IBDAT=""
"RTN","IBACSV",136,0)
 I '$G(IBIFN) Q ""
"RTN","IBACSV",137,0)
 ; The following line of code is for entering new procedures.
"RTN","IBACSV",138,0)
 ; If PROC is defined, but NULL - that means adding new procedure to 399.
"RTN","IBACSV",139,0)
 ; Therefore we try to use DGPROCDT variable prior to the bill's Event Date
"RTN","IBACSV",140,0)
 I $D(PROC),'PROC,$G(DGPROCDT)>0 S IBDAT=DGPROCDT
"RTN","IBACSV",141,0)
 I $G(PROC) S IBDAT=$P($P($G(^DGCR(399,+IBIFN,"CP",+PROC,0)),U,2),".")
"RTN","IBACSV",142,0)
 I 'IBDAT S IBDAT=$P($P($G(^DGCR(399,+IBIFN,0)),U,3),".")
"RTN","IBACSV",143,0)
 Q $S(IBDAT>0:IBDAT,1:"")
"RTN","IBACSV",144,0)
 ;
"RTN","IBACSV",145,0)
 ; === PTF Date of Service ===
"RTN","IBACSV",146,0)
PTFDATE(IBPTF) ;
"RTN","IBACSV",147,0)
 I '$G(IBPTF) Q ""
"RTN","IBACSV",148,0)
 Q $$GETDATE^ICDGTDRG(+$G(IBPTF))
"RTN","IBACSV",149,0)
 ;
"RTN","IBACSV",150,0)
 ; === Date of service, associated with the Tracking Number ===
"RTN","IBACSV",151,0)
TRNDATE(IBTRN) ; The EPISODE DATE is used to determine the date of service
"RTN","IBACSV",152,0)
 ; for the given Tracking Number
"RTN","IBACSV",153,0)
 I '$G(IBTRN) Q ""
"RTN","IBACSV",154,0)
 Q $P($P($G(^IBT(356,+IBTRN,0)),U,6),".")
"RTN","IBACSV",155,0)
 ;
"RTN","IBACSV",156,0)
 ; === DRG Text Descriptor (1st line only) ===
"RTN","IBACSV",157,0)
DRGTD(IEN,IBDT) ;
"RTN","IBACSV",158,0)
 N IBARR,IBRES
"RTN","IBACSV",159,0)
 S IBDT=$P($G(IBDT),".")
"RTN","IBACSV",160,0)
 I $T(DRGD^ICDGTDRG)="" Q $G(^ICD(+IEN,1,1,0))
"RTN","IBACSV",161,0)
 S IBRES=$$DRGD^ICDGTDRG(IEN,"IBARR",,IBDT)
"RTN","IBACSV",162,0)
 Q $G(IBARR(1))
"RTN","IBACSV",163,0)
 ;
"RTN","IBATLM2A")
0^16^B33655817
"RTN","IBATLM2A",1,0)
IBATLM2A ;LL/ELZ - TRANSFER PRICING PT TRANSACTION DETAIL ; 15-SEP-1998
"RTN","IBATLM2A",2,0)
 ;;2.0;INTEGRATED BILLING;**115,210,266**;21-MAR-94
"RTN","IBATLM2A",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBATLM2A",4,0)
 ;
"RTN","IBATLM2A",5,0)
 N IBX,IBY K ^TMP("IBATEE",$J)
"RTN","IBATLM2A",6,0)
 F IBX=0,4,5,6 S IBDATA(IBX)=$G(^IBAT(351.61,IBIEN,IBX))
"RTN","IBATLM2A",7,0)
 ;
"RTN","IBATLM2A",8,0)
 S IBY=""
"RTN","IBATLM2A",9,0)
 D SET("*** General Information ***",.IBY,26,27)
"RTN","IBATLM2A",10,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",11,0)
 D CNTRL^VALM10(VALMCNT,26,27,IOINHI,IOINORM)
"RTN","IBATLM2A",12,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",13,0)
 ;
"RTN","IBATLM2A",14,0)
 D SET("Transaction Date:",.IBY,1,17)
"RTN","IBATLM2A",15,0)
 D SET($$DATE($P(IBDATA(0),"^",3)),.IBY,19,19)
"RTN","IBATLM2A",16,0)
 D SET("Event Date:",.IBY,48,11)
"RTN","IBATLM2A",17,0)
 D SET($$DATE($P(IBDATA(0),"^",4)),.IBY,60,20)
"RTN","IBATLM2A",18,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",19,0)
 ;
"RTN","IBATLM2A",20,0)
 D SET("Status:",.IBY,11,7)
"RTN","IBATLM2A",21,0)
 D SET($$EX^IBATUTL(351.61,.05,$P(IBDATA(0),"^",5)),.IBY,19,19)
"RTN","IBATLM2A",22,0)
 D SET("Priced Date:",.IBY,47,12)
"RTN","IBATLM2A",23,0)
 D SET($$DATE($P(IBDATA(0),"^",13)),.IBY,60,20)
"RTN","IBATLM2A",24,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",25,0)
 ;
"RTN","IBATLM2A",26,0)
 D SET("From Date:",.IBY,8,10)
"RTN","IBATLM2A",27,0)
 D SET($$DATE($P(IBDATA(0),"^",9)),.IBY,19,19)
"RTN","IBATLM2A",28,0)
 D SET("To Date:",.IBY,51,8)
"RTN","IBATLM2A",29,0)
 D SET($$DATE($P(IBDATA(0),"^",10)),.IBY,60,20)
"RTN","IBATLM2A",30,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",31,0)
 ;
"RTN","IBATLM2A",32,0)
 D SET("Facility:",.IBY,9,9)
"RTN","IBATLM2A",33,0)
 D SET($$EX^IBATUTL(351.61,.11,$P(IBDATA(0),"^",11)),.IBY,19,19)
"RTN","IBATLM2A",34,0)
 D SETVALM(.VALMCNT,.IBY),SETVALM(.VALMCNT,""),SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",35,0)
 ;
"RTN","IBATLM2A",36,0)
 D SET("*** Workload/Pricing Detail ***",.IBY,24,31)
"RTN","IBATLM2A",37,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",38,0)
 D CNTRL^VALM10(VALMCNT,24,31,IOINHI,IOINORM)
"RTN","IBATLM2A",39,0)
 ;
"RTN","IBATLM2A",40,0)
 D @$S($P(IBDATA(0),"^",12)["DGPM(":"INPT",$P(IBDATA(0),"^",12)["SCE(":"OUT",$P(IBDATA(0),"^",12)["RMPR(":"RMPR",1:"RX")
"RTN","IBATLM2A",41,0)
 ;
"RTN","IBATLM2A",42,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",43,0)
 D SET("*** Totals ***",.IBY,33,14)
"RTN","IBATLM2A",44,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",45,0)
 D CNTRL^VALM10(VALMCNT,26,28,IOINHI,IOINORM)
"RTN","IBATLM2A",46,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",47,0)
 ;
"RTN","IBATLM2A",48,0)
 D SET("Bill Amount:",.IBY,6,18)
"RTN","IBATLM2A",49,0)
 D SET($FN($P(IBDATA(6),"^",2),"",2),.IBY,25,54)
"RTN","IBATLM2A",50,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",51,0)
 ;
"RTN","IBATLM2A",52,0)
 D SET("Patient Copay:",.IBY,6,14)
"RTN","IBATLM2A",53,0)
 S $P(IBDATA(6),"^",3)=$$COPAY^IBATUTL(DFN,$P(IBDATA(0),"^",12),$P(IBDATA(0),"^",9),$P(IBDATA(0),"^",10))
"RTN","IBATLM2A",54,0)
 D SET($FN($P(IBDATA(6),"^",3),"",2),.IBY,26,54)
"RTN","IBATLM2A",55,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",56,0)
 ;
"RTN","IBATLM2A",57,0)
 Q
"RTN","IBATLM2A",58,0)
INPT ; -- detail display for inpatient
"RTN","IBATLM2A",59,0)
 N IBDRG,VAIP
"RTN","IBATLM2A",60,0)
 ;
"RTN","IBATLM2A",61,0)
 S IBDRG=$G(^IBAT(351.61,IBIEN,1))
"RTN","IBATLM2A",62,0)
 ;
"RTN","IBATLM2A",63,0)
 S VAIP("E")=+$P(IBDATA(0),"^",12) D IN5^VADPT
"RTN","IBATLM2A",64,0)
 ;
"RTN","IBATLM2A",65,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",66,0)
 D SET("Admission Date:",.IBY,3,15)
"RTN","IBATLM2A",67,0)
 D SET($P(VAIP(13,1),"^",2),.IBY,19,19)
"RTN","IBATLM2A",68,0)
 D SET("Discharge Date:",.IBY,44,15)
"RTN","IBATLM2A",69,0)
 D SET($P(VAIP(17,1),"^",2),.IBY,60,20)
"RTN","IBATLM2A",70,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",71,0)
 ;
"RTN","IBATLM2A",72,0)
 D SET("Ward Location:",.IBY,4,14)
"RTN","IBATLM2A",73,0)
 D SET($P(VAIP(5),"^",2),.IBY,19,19)
"RTN","IBATLM2A",74,0)
 D SET("Treating Specialty:",.IBY,40,19)
"RTN","IBATLM2A",75,0)
 D SET($P(VAIP(8),"^",2),.IBY,60,20)
"RTN","IBATLM2A",76,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",77,0)
 ;
"RTN","IBATLM2A",78,0)
 D SET("DRG:",.IBY,14,4)
"RTN","IBATLM2A",79,0)
 D SET($$EX^IBATUTL(351.61,1.01,$P(IBDRG,"^")),.IBY,19,19)
"RTN","IBATLM2A",80,0)
 D SET("DRG Charge:",.IBY,48,11)
"RTN","IBATLM2A",81,0)
 D SET($FN($P(IBDRG,"^",2),"",2),.IBY,60,20)
"RTN","IBATLM2A",82,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",83,0)
 ;
"RTN","IBATLM2A",84,0)
 D SET("Inpatient LOS:",.IBY,4,14)
"RTN","IBATLM2A",85,0)
 D SET(+$P(IBDRG,"^",3),.IBY,19,19)
"RTN","IBATLM2A",86,0)
 D SET("High Trim Days:",.IBY,44,15)
"RTN","IBATLM2A",87,0)
 D SET(+$P(IBDRG,"^",4),.IBY,60,20)
"RTN","IBATLM2A",88,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",89,0)
 ;
"RTN","IBATLM2A",90,0)
 D SET("Outlier Days:",.IBY,5,13)
"RTN","IBATLM2A",91,0)
 D SET(+$P(IBDRG,"^",5),.IBY,19,19)
"RTN","IBATLM2A",92,0)
 D SET("Outlier Rate:",.IBY,46,13)
"RTN","IBATLM2A",93,0)
 D SET($FN($P(IBDRG,"^",6),"",2),.IBY,60,20)
"RTN","IBATLM2A",94,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",95,0)
 Q
"RTN","IBATLM2A",96,0)
OUT ; -- detail display for outpatient
"RTN","IBATLM2A",97,0)
 N IBX,IBDXLIST,IBSCE,IBPROV,IBDATE
"RTN","IBATLM2A",98,0)
 ;
"RTN","IBATLM2A",99,0)
 D GETGEN^SDOE($P($P(IBDATA(0),"^",12),";"),"IBSCE")
"RTN","IBATLM2A",100,0)
 D GETPRV^SDOE($P($P(IBDATA(0),"^",12),";"),"IBPROV")
"RTN","IBATLM2A",101,0)
 ;
"RTN","IBATLM2A",102,0)
 D GETDX^SDOE($P($P(IBDATA(0),"^",12),";"),"IBDXLIST")
"RTN","IBATLM2A",103,0)
 S IBDATE=$P($G(IBDATA(0)),U,4) ; Event date
"RTN","IBATLM2A",104,0)
 D DX(.IBDXLIST,IBDATE)
"RTN","IBATLM2A",105,0)
 ;
"RTN","IBATLM2A",106,0)
 D SET("Procedure Information:",.IBY,1,22)
"RTN","IBATLM2A",107,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",108,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",109,0)
 ;
"RTN","IBATLM2A",110,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBIEN,3,IBX)) Q:IBX<1  D
"RTN","IBATLM2A",111,0)
 . S IBX(0)=$G(^IBAT(351.61,IBIEN,3,IBX,0))
"RTN","IBATLM2A",112,0)
 . S IBX(1)=$$PROC^IBATUTL($P(IBX(0),U),IBDATE)
"RTN","IBATLM2A",113,0)
 . ;
"RTN","IBATLM2A",114,0)
 . D SET(+IBX(1),.IBY,5,6)
"RTN","IBATLM2A",115,0)
 . D SET("-",.IBY,13,1)
"RTN","IBATLM2A",116,0)
 . D SET($P(IBX(1),"^",2),.IBY,15,40)
"RTN","IBATLM2A",117,0)
 . D SET(+$P(IBX(0),"^",2),.IBY,57,3)
"RTN","IBATLM2A",118,0)
 . D SET("x",.IBY,62,1)
"RTN","IBATLM2A",119,0)
 . D SET($FN($P(IBX(0),"^",3),"",2),.IBY,64,15)
"RTN","IBATLM2A",120,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",121,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",122,0)
 ;
"RTN","IBATLM2A",123,0)
 D SET("Visit Information:",.IBY,1,18)
"RTN","IBATLM2A",124,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",125,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",126,0)
 ;
"RTN","IBATLM2A",127,0)
 D SET("Location:",.IBY,8,14)
"RTN","IBATLM2A",128,0)
 D SET($P(^SC(+$P(IBSCE(0),"^",4),0),"^"),.IBY,19,46) ; dbia 10040
"RTN","IBATLM2A",129,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",130,0)
 ;
"RTN","IBATLM2A",131,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",132,0)
 D SET("Provider(s):",.IBY,5,17)
"RTN","IBATLM2A",133,0)
 S IBX=0 F  S IBX=$O(IBPROV(IBX)) Q:IBX<.5  D
"RTN","IBATLM2A",134,0)
 . D SET($$GET1^DIQ(200,+IBPROV(IBX),.01),.IBY,19,49) ; dbia 10060
"RTN","IBATLM2A",135,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",136,0)
 ;
"RTN","IBATLM2A",137,0)
 Q
"RTN","IBATLM2A",138,0)
RX ; -- detail display for rx
"RTN","IBATLM2A",139,0)
 D SET("Drug:",.IBY,5,5)
"RTN","IBATLM2A",140,0)
 D SET($$GET1^DIQ(50,+IBDATA(4),.01),.IBY,12,40) ; dbia 10043
"RTN","IBATLM2A",141,0)
 D SET(+$P(IBDATA(4),"^",2),.IBY,55,3)
"RTN","IBATLM2A",142,0)
 D SET("x",.IBY,60,1)
"RTN","IBATLM2A",143,0)
 D SET($FN($P(IBDATA(4),"^",3),"",3),.IBY,62,15)
"RTN","IBATLM2A",144,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",145,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",146,0)
 Q
"RTN","IBATLM2A",147,0)
RMPR ; -- detail display for prosthetic
"RTN","IBATLM2A",148,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",149,0)
 D SET("Prosthetic Item:",.IBY,5,16)
"RTN","IBATLM2A",150,0)
 D SET($$GET1^DIQ(661,$P(IBDATA(4),"^",4),.01),.IBY,12,40) ; dbia 374
"RTN","IBATLM2A",151,0)
 D SET($FN($P(IBDATA(4),"^",5),",",2),.IBY,55,15)
"RTN","IBATLM2A",152,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",153,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",154,0)
 Q
"RTN","IBATLM2A",155,0)
DX(IBDX,IBDATE) ; -- diagnosis info
"RTN","IBATLM2A",156,0)
 N IBX
"RTN","IBATLM2A",157,0)
 ;
"RTN","IBATLM2A",158,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",159,0)
 D SET("Diagnosis Information:",.IBY,1,22)
"RTN","IBATLM2A",160,0)
 D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",161,0)
 D CNTRL^VALM10(VALMCNT,1,22,IOINHI,IOINORM)
"RTN","IBATLM2A",162,0)
 ;
"RTN","IBATLM2A",163,0)
 S IBX=0 F  S IBX=$O(IBDX(IBX)) Q:IBX<1  D
"RTN","IBATLM2A",164,0)
 . S IBX(0)=$$ICD9^IBACSV(+IBDX(IBX),$G(IBDATE))
"RTN","IBATLM2A",165,0)
 . ;
"RTN","IBATLM2A",166,0)
 . D SET($P(IBX(0),"^"),.IBY,5,7)
"RTN","IBATLM2A",167,0)
 . D SET("-",.IBY,14,1)
"RTN","IBATLM2A",168,0)
 . D SET($P(IBX(0),"^",3),.IBY,16,30)
"RTN","IBATLM2A",169,0)
 . D SETVALM(.VALMCNT,.IBY)
"RTN","IBATLM2A",170,0)
 D SETVALM(.VALMCNT,"")
"RTN","IBATLM2A",171,0)
 Q
"RTN","IBATLM2A",172,0)
SET(TEXT,STRING,COL,LENGTH) ; -- set up string with valm1
"RTN","IBATLM2A",173,0)
 S STRING=$$SETSTR^VALM1($$LOWER^VALM1(TEXT),STRING,COL,LENGTH)
"RTN","IBATLM2A",174,0)
 Q
"RTN","IBATLM2A",175,0)
SETVALM(LINE,TEXT) ; -- sets line for display
"RTN","IBATLM2A",176,0)
 S LINE=LINE+1
"RTN","IBATLM2A",177,0)
 S ^TMP("IBATEE",$J,LINE,0)=TEXT
"RTN","IBATLM2A",178,0)
 S TEXT=""
"RTN","IBATLM2A",179,0)
 Q
"RTN","IBATLM2A",180,0)
DATE(X) ; -- returns date for display
"RTN","IBATLM2A",181,0)
 Q $$FMTE^XLFDT(X,"5D")
"RTN","IBATLM2B")
0^19^B5154840
"RTN","IBATLM2B",1,0)
IBATLM2B ;LL/ELZ - TRANSFER PRICING PT TRANSACTION DETAIL ; 15-SEP-1998
"RTN","IBATLM2B",2,0)
 ;;2.0;INTEGRATED BILLING;**115,266**;21-MAR-94
"RTN","IBATLM2B",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBATLM2B",4,0)
 ;
"RTN","IBATLM2B",5,0)
FE ; -- editing of facility
"RTN","IBATLM2B",6,0)
 N DA,DIE,DR,DTOUT
"RTN","IBATLM2B",7,0)
 D LMOPT^IBATUTL
"RTN","IBATLM2B",8,0)
 S DA=IBIEN,DIE="^IBAT(351.61,",DR=".11"
"RTN","IBATLM2B",9,0)
 I $P(^IBAT(351.61,DA,0),U,5)="X" W !!,"Transaction cancelled!" D H Q
"RTN","IBATLM2B",10,0)
 L +^IBAT(351.61,IBIEN):0
"RTN","IBATLM2B",11,0)
 I $T D ^DIE L -^IBAT(351.61,IBIEN) D INIT^IBATLM2 Q
"RTN","IBATLM2B",12,0)
 W !?5,"Another user is editing this entry."
"RTN","IBATLM2B",13,0)
 D H,INIT^IBATLM2
"RTN","IBATLM2B",14,0)
 Q
"RTN","IBATLM2B",15,0)
H ; call hang call
"RTN","IBATLM2B",16,0)
 D H^IBATLM1B
"RTN","IBATLM2B",17,0)
 Q
"RTN","IBATLM2B",18,0)
PI ; -- editing of pricing information
"RTN","IBATLM2B",19,0)
 N DA,DIE,DR,DTOUT,ICDVDT,ICPTVDT
"RTN","IBATLM2B",20,0)
 D LMOPT^IBATUTL
"RTN","IBATLM2B",21,0)
 L +^IBAT(351.61,IBIEN):0
"RTN","IBATLM2B",22,0)
 I '$T W !?5,"Another user is editing this entry." D H Q
"RTN","IBATLM2B",23,0)
 S (ICDVDT,ICPTVDT)=$P(IBDATA(0),U,4) ; Code Text Versioning
"RTN","IBATLM2B",24,0)
 S DR=$S($P(IBDATA(0),U,12)["DGPM":"1.01;D DRGDSP^IBATLM2B(X);1.02:1.06",$P(IBDATA(0),"^",12)["SCE":"[IBAT OUT PRICING EDIT]",$P(IBDATA(0),"^",12)["RMPR":"4.05",1:"4.02;4.03")
"RTN","IBATLM2B",25,0)
 S DIE="^IBAT(351.61,",DA=IBIEN
"RTN","IBATLM2B",26,0)
 I $P(^IBAT(351.61,DA,0),U,5)="X" W !!,"Transaction cancelled!" D H Q
"RTN","IBATLM2B",27,0)
 D ^DIE,TOTAL^IBATCM(IBIEN)
"RTN","IBATLM2B",28,0)
 L -^IBAT(351.61,IBIEN)
"RTN","IBATLM2B",29,0)
 D INIT^IBATLM2
"RTN","IBATLM2B",30,0)
 Q
"RTN","IBATLM2B",31,0)
DRGDSP(DRG) ; called from editing pricing info to display DRG pricing
"RTN","IBATLM2B",32,0)
 N IB0,X,Y,IBCHRG Q:'DRG
"RTN","IBATLM2B",33,0)
 S IB0=^IBAT(351.61,DA,0)
"RTN","IBATLM2B",34,0)
 S IBCHRG=$$INPT^IBATCM(DRG,$P(IB0,"^",4),$P(IB0,"^",11))
"RTN","IBATLM2B",35,0)
 S X=$P(IBCHRG,"^",2) D COMMA^%DTC
"RTN","IBATLM2B",36,0)
 W !!,?8,"Default Price $",X,! Q:'$P(IBCHRG,"^",3)
"RTN","IBATLM2B",37,0)
 S X=$P(IBCHRG,"^",3) D COMMA^%DTC
"RTN","IBATLM2B",38,0)
 W ?5,"Negotiated Price $",X,!
"RTN","IBATLM2B",39,0)
 Q
"RTN","IBATLM2B",40,0)
CPTDSP(CPT) ; called from editing pricing info to display CPT pricing
"RTN","IBATLM2B",41,0)
 N IB0,X,Y,IBCHRG Q:'CPT
"RTN","IBATLM2B",42,0)
 S IB0=^IBAT(351.61,DA(1),0)
"RTN","IBATLM2B",43,0)
 S IBCHRG=$$OPT^IBATCM(CPT,$P(IB0,"^",4),$P(IB0,"^",11))
"RTN","IBATLM2B",44,0)
 S X=$P(IBCHRG,"^",2) D COMMA^%DTC
"RTN","IBATLM2B",45,0)
 W !!,?8,"Default Price $",X,! Q:'$P(IBCHRG,"^",3)
"RTN","IBATLM2B",46,0)
 S X=$P(IBCHRG,"^",3) D COMMA^%DTC
"RTN","IBATLM2B",47,0)
 W ?5,"Negotiated Price $",X,!
"RTN","IBATLM2B",48,0)
 Q
"RTN","IBATO1")
0^2^B49762278
"RTN","IBATO1",1,0)
IBATO1 ;LL/ELZ - TRANSFER PRICING REPORTS CONT. ; 18-DEC-98
"RTN","IBATO1",2,0)
 ;;2.0;INTEGRATED BILLING;**115,266**;21-MAR-94
"RTN","IBATO1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBATO1",4,0)
 ;
"RTN","IBATO1",5,0)
PAGE() ; performs page reads and returns 1 if quiting is needed
"RTN","IBATO1",6,0)
 N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBATO1",7,0)
 S DIR(0)="E" D ^DIR
"RTN","IBATO1",8,0)
 Q $D(DIRUT)
"RTN","IBATO1",9,0)
NUM(X,X2,X3) ; calls to format numbers
"RTN","IBATO1",10,0)
 D COMMA^%DTC
"RTN","IBATO1",11,0)
 Q $E(X,1,$L(X)-1)
"RTN","IBATO1",12,0)
UNIT(IBA,IBD,IBO) ; sets IBD subscripted with units for IBA
"RTN","IBATO1",13,0)
 N IBX,IBB S IBB="UNIT"
"RTN","IBATO1",14,0)
 I $P(IBA(0),"^",12)["DGPM" D  Q
"RTN","IBATO1",15,0)
 . S IBD(1,IBO,IBB)=$$EX^IBATUTL(351.61,1.01,+IBA(1))
"RTN","IBATO1",16,0)
 I $P(IBA(0),"^",12)["PSRX(" D  Q
"RTN","IBATO1",17,0)
 . S IBD(1,IBO,IBB)=$$EX^IBATUTL(52,.01,+$P(IBA(0),"^",12))
"RTN","IBATO1",18,0)
 I $P(IBA(0),"^",12)["RMPR" D  Q
"RTN","IBATO1",19,0)
 . S IBD(1,IBO,IBB)="PROSTHETIC"
"RTN","IBATO1",20,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBA,3,IBX)) Q:IBX<1  D
"RTN","IBATO1",21,0)
 . S IBX(0)=^IBAT(351.61,IBIEN,3,IBX,0)
"RTN","IBATO1",22,0)
 . S IBD(IBX,IBO,IBB)="CPT"_$P($$PROC^IBATUTL(+IBX(0)),U)
"RTN","IBATO1",23,0)
 Q
"RTN","IBATO1",24,0)
TYPE(IBA,IBO) ; sets IBO with descriptive trans type for IBA
"RTN","IBATO1",25,0)
 N IBB,IBC,IBD
"RTN","IBATO1",26,0)
 S:'$D(IBA(0)) IBA(0)=^IBAT(351.61,IBA,0)
"RTN","IBATO1",27,0)
 S IBB=$P(IBA(0),"^",12)
"RTN","IBATO1",28,0)
 I IBB["DGPM(" S IBO="INPATIENT" Q
"RTN","IBATO1",29,0)
 I IBB["PSRX(" S IBO="PHARMACY" Q
"RTN","IBATO1",30,0)
 I IBB["RMPR(660," S IBO="PROSTHETICS" Q
"RTN","IBATO1",31,0)
 D GETGEN^SDOE(+$P(IBA(0),"^",12),"IBC")
"RTN","IBATO1",32,0)
 D:$P($G(IBC(0)),"^",3) PARSE^SDOE(.IBC,"EXTERNAL","IBD")
"RTN","IBATO1",33,0)
 S IBO=$S($G(IBD(.03))="":"OUTPATINET",1:$E("OUT "_IBD(.03),1,10))
"RTN","IBATO1",34,0)
 Q
"RTN","IBATO1",35,0)
DES(IBA,IBD,IBO) ; sets IBD subscripted with description for IBA
"RTN","IBATO1",36,0)
 N IBX,IBB,IBDATE S IBB="UNIT DESCRIPTION"
"RTN","IBATO1",37,0)
 I $P(IBA(0),"^",12)["DGPM" D  Q
"RTN","IBATO1",38,0)
 . S IBD(1,IBO,IBB)=$E($$DRGTD^IBACSV(+IBA(1),$P(IBA(0),U,4)),1,18)
"RTN","IBATO1",39,0)
 I $P(IBA(0),"^",12)["PSRX(" D  Q
"RTN","IBATO1",40,0)
 . S IBD(1,IBO,IBB)=$E($$EX^IBATUTL(351.61,4.01,+IBA(4)),1,18)
"RTN","IBATO1",41,0)
 I $P(IBA(0),"^",12)["RMPR(660," D  Q
"RTN","IBATO1",42,0)
 . S IBD(1,IBO,IBB)=$E($$EX^IBATUTL(351.61,4.04,$P(IBA(4),"^",4)),1,18)
"RTN","IBATO1",43,0)
 S IBDATE=$P($G(^IBAT(351.61,IBIEN,0)),U,4) ; Event Date
"RTN","IBATO1",44,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBA,3,IBX)) Q:IBX<1  D
"RTN","IBATO1",45,0)
 . S IBX(0)=^IBAT(351.61,IBIEN,3,IBX,0)
"RTN","IBATO1",46,0)
 . S IBD(IBX,IBO,IBB)=$E($P($$PROC^IBATUTL(+IBX(0),IBDATE),U,2),1,18)
"RTN","IBATO1",47,0)
 Q
"RTN","IBATO1",48,0)
PRICE(IBA,IBD,IBO) ; sets IBD subscripted with price for IBA
"RTN","IBATO1",49,0)
 N IBX,IBB S IBB="UNIT PRICE"
"RTN","IBATO1",50,0)
 I $P(IBA(0),"^",12)["DGPM" D  Q
"RTN","IBATO1",51,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(1),"^",2),2,9)
"RTN","IBATO1",52,0)
 I $P(IBA(0),"^",12)["PSRX(" D  Q
"RTN","IBATO1",53,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(4),"^",3),3,10)
"RTN","IBATO1",54,0)
 I $P(IBA(0),"^",12)["RMPR(660," D  Q
"RTN","IBATO1",55,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(4),"^",5),3,10)
"RTN","IBATO1",56,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBA,3,IBX)) Q:IBX<1  D
"RTN","IBATO1",57,0)
 . S IBX(0)=^IBAT(351.61,IBIEN,3,IBX,0)
"RTN","IBATO1",58,0)
 . S IBD(IBX,IBO,IBB)=$$NUM($P(IBX(0),"^",3),2,9)
"RTN","IBATO1",59,0)
 Q
"RTN","IBATO1",60,0)
QTY(IBA,IBD,IBO) ; sets IBD subscripted with quantity for IBA
"RTN","IBATO1",61,0)
 N IBX,IBB S IBB="QTY"
"RTN","IBATO1",62,0)
 I $P(IBA(0),"^",12)["DGPM" D  Q
"RTN","IBATO1",63,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(1),"^",5),0,3)
"RTN","IBATO1",64,0)
 I $P(IBA(0),"^",12)["PSRX(" D  Q
"RTN","IBATO1",65,0)
 . S IBD(1,IBO,IBB)=$$NUM($P(IBA(4),"^",2),0,3)
"RTN","IBATO1",66,0)
 I $P(IBA(0),"^",12)["RMPR(660," D  Q
"RTN","IBATO1",67,0)
 . S IBD(1,IBO,IBB)=$$NUM(1,0,3)
"RTN","IBATO1",68,0)
 S IBX=0 F  S IBX=$O(^IBAT(351.61,IBA,3,IBX)) Q:IBX<1  D
"RTN","IBATO1",69,0)
 . S IBX(0)=^IBAT(351.61,IBIEN,3,IBX,0)
"RTN","IBATO1",70,0)
 . S IBD(IBX,IBO,IBB)=$$NUM($P(IBX(0),"^",2),0,3)
"RTN","IBATO1",71,0)
 Q
"RTN","IBATO1",72,0)
COPAY(IBA) ; compute copay for iba and return
"RTN","IBATO1",73,0)
 N IBC,IBT,IBCOPAY
"RTN","IBATO1",74,0)
 S IBCOPAY=$$COPAY^IBATUTL($P(IBA(0),"^",2),$P(IBA(0),"^",12),$P($P(IBA(0),"^",9),"."),$P($P(IBA(0),"^",10),"."))
"RTN","IBATO1",75,0)
 I IBCOPAY,$P(IBA(0),"^",12)["SCE(" S (IBC,IBT)=0 F  S IBT=$O(^IBAT(351.61,"AH",$P(IBA(0),"^",2),$P(IBA(0),"^",4),IBT)) Q:IBT<1  I $P(^IBAT(351.61,IBT,0),"^",12)["SCE(" S IBC=IBC+1
"RTN","IBATO1",76,0)
 I  S IBCOPAY=IBCOPAY/IBC
"RTN","IBATO1",77,0)
 Q $$NUM(IBCOPAY,2,7)
"RTN","IBATO1",78,0)
 ;
"RTN","IBATO1",79,0)
VAR(IBA) ; set up required variables
"RTN","IBATO1",80,0)
 N IBX
"RTN","IBATO1",81,0)
 F IBX=0,1,4 S IBA(IBX)=$G(^IBAT(351.61,IBA,IBX))
"RTN","IBATO1",82,0)
 Q
"RTN","IBATO1",83,0)
PRT(IBIEN) ; main entry for report printing
"RTN","IBATO1",84,0)
 ;
"RTN","IBATO1",85,0)
 N DFN,IBXDATA,IBC,IBF,IBF1,IBF2,IBO,VA,VAERR,IBM
"RTN","IBATO1",86,0)
 ;
"RTN","IBATO1",87,0)
 D VAR(.IBIEN)
"RTN","IBATO1",88,0)
 S DFN=$P(IBIEN(0),"^",2)
"RTN","IBATO1",89,0)
 I IBPAGE=0!($Y+5>IOSL)!(IBLAST'=$P(IBIEN(0),"^",11)) S IBLAST=$P(IBIEN(0),"^",11) D PRTH Q:IBQUIT
"RTN","IBATO1",90,0)
 W ! S IBC=0
"RTN","IBATO1",91,0)
 ;
"RTN","IBATO1",92,0)
 ; print single valued data first
"RTN","IBATO1",93,0)
 S IBF=0 F  S IBF=$O(IBFIELD(IBF)) Q:IBF<1  D
"RTN","IBATO1",94,0)
 . D PRTG(.IBFIELD,.IBF,.IBF1,.IBC)
"RTN","IBATO1",95,0)
 . X ^IBAT(351.62,IBF1,1)
"RTN","IBATO1",96,0)
 . W IBXDATA,?IBC
"RTN","IBATO1",97,0)
 ;
"RTN","IBATO1",98,0)
 ; compute multiple valued data
"RTN","IBATO1",99,0)
 S IBM=IBC
"RTN","IBATO1",100,0)
 S IBF=0 F  S IBF=$O(IBMUL(IBF)) Q:IBF<1  D
"RTN","IBATO1",101,0)
 . S IBF1=0,IBF1=$O(IBMUL(IBF,IBF1))
"RTN","IBATO1",102,0)
 . X ^IBAT(351.62,IBF1,1)
"RTN","IBATO1",103,0)
 ;
"RTN","IBATO1",104,0)
 ; print multiple valued data
"RTN","IBATO1",105,0)
 S IBF=0 F  S IBF=$O(IBXDATA(IBF)) Q:IBF=""  W:IBC'=IBM ! W ?IBM S IBC=IBM D
"RTN","IBATO1",106,0)
 . S IBO=0 F  S IBO=$O(IBXDATA(IBF,IBO)) Q:IBO<1  S IBF1=0 F  S IBF1=$O(IBXDATA(IBF,IBO,IBF1)) Q:IBF1=""  D
"RTN","IBATO1",107,0)
 .. S IBF2=0,IBF2=$O(^IBAT(351.62,"B",IBF1,IBF2))
"RTN","IBATO1",108,0)
 .. S IBF2=^IBAT(351.62,IBF2,0)
"RTN","IBATO1",109,0)
 .. S IBC=IBC+$P(IBF2,"^",2)+1
"RTN","IBATO1",110,0)
 .. I IBC>IOM W !?5 S IBC=$P(IBF2,"^",2)+6
"RTN","IBATO1",111,0)
 .. W IBXDATA(IBF,IBO,IBF1),?IBC
"RTN","IBATO1",112,0)
 ;
"RTN","IBATO1",113,0)
 ; clean up
"RTN","IBATO1",114,0)
 X ^IBAT(351.62,999,1)
"RTN","IBATO1",115,0)
 ;
"RTN","IBATO1",116,0)
 Q
"RTN","IBATO1",117,0)
EXPRT(IBIEN) ; main entry for excel printing
"RTN","IBATO1",118,0)
 ;
"RTN","IBATO1",119,0)
 N DFN,IBXDATA,IBF,IBF1,IBF2,IBO,VA,VAERR
"RTN","IBATO1",120,0)
 ;
"RTN","IBATO1",121,0)
 D VAR(.IBIEN)
"RTN","IBATO1",122,0)
 S DFN=$P(IBIEN(0),"^",2)
"RTN","IBATO1",123,0)
 ;
"RTN","IBATO1",124,0)
 ; do single if no multiple
"RTN","IBATO1",125,0)
 I '$D(IBMUL) D EXSING() W ! X ^IBAT(351.62,999,1) Q
"RTN","IBATO1",126,0)
 ;
"RTN","IBATO1",127,0)
 ; compute multiple valued data
"RTN","IBATO1",128,0)
 S IBF=0 F  S IBF=$O(IBMUL(IBF)) Q:IBF<1  D
"RTN","IBATO1",129,0)
 . S IBF1=0,IBF1=$O(IBMUL(IBF,IBF1))
"RTN","IBATO1",130,0)
 . X ^IBAT(351.62,IBF1,1)
"RTN","IBATO1",131,0)
 ;
"RTN","IBATO1",132,0)
 ; print multiple valued data
"RTN","IBATO1",133,0)
 S IBF=0 F  S IBF=$O(IBXDATA(IBF)) Q:IBF=""  D EXSING(IBF) D
"RTN","IBATO1",134,0)
 . S IBO=0 F  S IBO=$O(IBXDATA(IBF,IBO)) Q:IBO<1  S IBF1=0 F  S IBF1=$O(IBXDATA(IBF,IBO,IBF1)) Q:IBF1=""  D
"RTN","IBATO1",135,0)
 .. S IBF2=0,IBF2=$O(^IBAT(351.62,"B",IBF1,IBF2))
"RTN","IBATO1",136,0)
 .. S IBF2=^IBAT(351.62,IBF2,0)
"RTN","IBATO1",137,0)
 .. W $$STRIP(IBXDATA(IBF,IBO,IBF1),IBF2),"|"
"RTN","IBATO1",138,0)
 . W !
"RTN","IBATO1",139,0)
 ;
"RTN","IBATO1",140,0)
 ; clean up
"RTN","IBATO1",141,0)
 X ^IBAT(351.62,999,1)
"RTN","IBATO1",142,0)
 ;
"RTN","IBATO1",143,0)
 Q
"RTN","IBATO1",144,0)
STRIP(A,B) ; strips off junk from numbers
"RTN","IBATO1",145,0)
 Q $S($P(B,"^",5):+$TR(A,", "),1:A)
"RTN","IBATO1",146,0)
 ;
"RTN","IBATO1",147,0)
EXSING(IBF) ; print single valued data first
"RTN","IBATO1",148,0)
 S IBF=0 F  S IBF=$O(IBFIELD(IBF)) Q:IBF<1  D
"RTN","IBATO1",149,0)
 . D PRTG(.IBFIELD,.IBF,.IBF1,.IBC)
"RTN","IBATO1",150,0)
 . X ^IBAT(351.62,IBF1,1)
"RTN","IBATO1",151,0)
 . W $$STRIP(IBXDATA,IBF1(0)),"|"
"RTN","IBATO1",152,0)
 Q
"RTN","IBATO1",153,0)
 ;
"RTN","IBATO1",154,0)
PRTH ; header
"RTN","IBATO1",155,0)
 S IBC=0
"RTN","IBATO1",156,0)
 D HEAD^IBATO($P(IBIEN(0),"^",11)) Q:IBQUIT
"RTN","IBATO1",157,0)
 W !
"RTN","IBATO1",158,0)
 S IBF=0 F  S IBF=$O(IBFIELD(IBF)) Q:IBF<1  D
"RTN","IBATO1",159,0)
 . D PRTG(.IBFIELD,.IBF,.IBF1,.IBC)
"RTN","IBATO1",160,0)
 . W $P(IBF1(0),"^"),?IBC
"RTN","IBATO1",161,0)
 ;
"RTN","IBATO1",162,0)
 ; multiple part of header
"RTN","IBATO1",163,0)
 S IBF=0 F  S IBF=$O(IBMUL(IBF)) Q:IBF<1  D
"RTN","IBATO1",164,0)
 . D PRTG(.IBMUL,.IBF,.IBF1,.IBC)
"RTN","IBATO1",165,0)
 . W $P(IBF1(0),"^"),?IBC
"RTN","IBATO1",166,0)
 ;
"RTN","IBATO1",167,0)
 W ! F IBC=1:1:IOM W "-"
"RTN","IBATO1",168,0)
 Q
"RTN","IBATO1",169,0)
PRTG(X,Y,Z,C) ; general printing stuff
"RTN","IBATO1",170,0)
 S Z=0,Z=$O(X(Y,Z))
"RTN","IBATO1",171,0)
 S Z(0)=X(Y,Z)
"RTN","IBATO1",172,0)
 I $D(C) S C=C+$P(Z(0),"^",2)+1 I C>IOM W !?5 S C=$P(Z(0),"^",2)+6
"RTN","IBATO1",173,0)
 Q
"RTN","IBATO1",174,0)
SEL(B) ; selection of which fields B = default
"RTN","IBATO1",175,0)
 ; sets up variables IBFIELD and IBMUL
"RTN","IBATO1",176,0)
 ; returns max length of output
"RTN","IBATO1",177,0)
 ;
"RTN","IBATO1",178,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,DIR,W,X,Y,Z,IBR,IBM
"RTN","IBATO1",179,0)
 S (IBR,IBM)=0
"RTN","IBATO1",180,0)
 ;
"RTN","IBATO1",181,0)
AGAIN S DIR(0)="LAO^1:98",DIR("A")="Which fields: "_$S($D(B):B_"//",1:"")
"RTN","IBATO1",182,0)
 S DIR("?")="Select what fields you want printed. Ranges must start with a valid number."
"RTN","IBATO1",183,0)
 D ^DIR Q:$D(DTOUT)!($D(DUOUT))!($D(DIROUT)) 0
"RTN","IBATO1",184,0)
 ;
"RTN","IBATO1",185,0)
 ; if default selected set Y
"RTN","IBATO1",186,0)
 S:Y="" Y=$G(B)
"RTN","IBATO1",187,0)
 ;
"RTN","IBATO1",188,0)
 ; validate input
"RTN","IBATO1",189,0)
 I '$D(^IBAT(351.62,"AC",+Y)) W *7,"??" G AGAIN
"RTN","IBATO1",190,0)
 F X=1:1 Q:$P(Y,",",X)=""  S:'$D(^IBAT(351.62,"AC",$P(Y,",",X))) Y=$P(Y,",",1,X-1)_","_$P(Y,",",X+1,98),X=X-1
"RTN","IBATO1",191,0)
 ;
"RTN","IBATO1",192,0)
 ; setup variables for output
"RTN","IBATO1",193,0)
 F X=1:1 Q:'$P(Y,",",X)  S W=+$P($Q(^IBAT(351.62,"AC",$P(Y,",",X))),",",4),Z=^IBAT(351.62,W,0),IBR=$S($P(Z,"^",3):"IBMUL",1:"IBFIELD"),@(IBR_"("_X_","_W_")")=Z,@IBR=$G(@IBR)+$P(Z,"^",2)+1
"RTN","IBATO1",194,0)
 ;
"RTN","IBATO1",195,0)
 Q $G(IBFIELD)+$G(IBMUL)
"RTN","IBATO1",196,0)
 ;
"RTN","IBATO1",197,0)
DISP ; displays fields for selection
"RTN","IBATO1",198,0)
 ;
"RTN","IBATO1",199,0)
 N IBX,IBL,IBI
"RTN","IBATO1",200,0)
 ;
"RTN","IBATO1",201,0)
 ; set up lines
"RTN","IBATO1",202,0)
 S (IBX,IBL)=0 F  S IBX=$O(^IBAT(351.62,"AC",IBX)),IBL=IBL+1 Q:IBX<1  S:IBX=40 IBL=1 S IBI=+$P($Q(^IBAT(351.62,"AC",IBX)),",",4),IBL(IBL,$S(IBX<40:0,1:40))=^IBAT(351.62,IBI,0)
"RTN","IBATO1",203,0)
 ;
"RTN","IBATO1",204,0)
 ; display lines
"RTN","IBATO1",205,0)
 W @IOF,!,"Select the fields you would like printed on this report, in the order you",!,"want them printed.  Fields with an asterisk (*) are fields that are multiples.",!
"RTN","IBATO1",206,0)
 S IBX="" F  S IBX=$O(IBL(IBX)) Q:IBX=""  W ! S IBI="" F  S IBI=$O(IBL(IBX,IBI)) Q:IBI=""  W ?IBI,$P(IBL(IBX,IBI),"^",4),?IBI+4,$S($P(IBL(IBX,IBI),"^",3):"*",1:""),$P(IBL(IBX,IBI),"^")
"RTN","IBATO1",207,0)
 ;
"RTN","IBATO1",208,0)
 W !
"RTN","IBATO1",209,0)
 ;
"RTN","IBATO1",210,0)
 Q
"RTN","IBATUTL")
0^17^B29255099
"RTN","IBATUTL",1,0)
IBATUTL ;LL/ELZ - TRANSFER PRICING UTILITES ; 3-SEP-1998
"RTN","IBATUTL",2,0)
 ;;2.0;INTEGRATED BILLING;**115,266**;21-MAR-94
"RTN","IBATUTL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBATUTL",4,0)
 ;
"RTN","IBATUTL",5,0)
SL() ; -- called to select a patient or enrolled facility
"RTN","IBATUTL",6,0)
 N X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIR
"RTN","IBATUTL",7,0)
 S DIR(0)="350.9,10.01",DIR("A")="Select Patient or Enrolled Facility"
"RTN","IBATUTL",8,0)
 D ^DIR
"RTN","IBATUTL",9,0)
 Q Y
"RTN","IBATUTL",10,0)
SLPT() ; -- called to select a patient, returns 0 or patient dfn
"RTN","IBATUTL",11,0)
 N X,Y,DIC,DTOUT,DUOUT
"RTN","IBATUTL",12,0)
 S DIC="^IBAT(351.6,",DIC(0)="AEMQ" D ^DIC
"RTN","IBATUTL",13,0)
 Q $S(+Y>0:+Y,1:0)
"RTN","IBATUTL",14,0)
 ;
"RTN","IBATUTL",15,0)
SLDR(Q) ; -- called to select a date range
"RTN","IBATUTL",16,0)
 ; defaults are from=T-365, to=TODAY
"RTN","IBATUTL",17,0)
 ; output IBBDT, IBEDT, quit returns 0 if not valid
"RTN","IBATUTL",18,0)
 ;
"RTN","IBATUTL",19,0)
 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y,IBDT
"RTN","IBATUTL",20,0)
 S DIR(0)="DA^:NOW:EX",DIR("A")="Select FROM DATE: "
"RTN","IBATUTL",21,0)
 S:$D(Q) DIR("?")=Q
"RTN","IBATUTL",22,0)
 D ^DIR G:'Y SLDRQ S IBDT=+Y
"RTN","IBATUTL",23,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="              TO: "
"RTN","IBATUTL",24,0)
 D ^DIR
"RTN","IBATUTL",25,0)
 S:Y IBEDT=+Y+.999999,IBBDT=IBDT G SLDRQ
"RTN","IBATUTL",26,0)
SLDR1Y() ; -- called to select a date range w/1y past default
"RTN","IBATUTL",27,0)
 ; defaults are from=T-365, to=TODAY
"RTN","IBATUTL",28,0)
 ; output IBBDT, IBEDT, quit returns 0 if not valid
"RTN","IBATUTL",29,0)
 ;
"RTN","IBATUTL",30,0)
 N DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y,IBDT
"RTN","IBATUTL",31,0)
 S DIR(0)="DA^:NOW:EX",DIR("A")="Select FROM DATE: "
"RTN","IBATUTL",32,0)
 S DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(DT,-365)) D ^DIR
"RTN","IBATUTL",33,0)
 G:'Y SLDRQ S IBDT=+Y
"RTN","IBATUTL",34,0)
 S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="              to: "
"RTN","IBATUTL",35,0)
 S DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(IBDT,365)) D ^DIR
"RTN","IBATUTL",36,0)
 G:'Y SLDRQ S IBEDT=+Y+.999999,IBBDT=IBDT
"RTN","IBATUTL",37,0)
SLDRQ Q $D(DIRUT)!($D(DUOUT))
"RTN","IBATUTL",38,0)
 ;
"RTN","IBATUTL",39,0)
PTTRAN(IBFILE,IBARRAY,IBXREF) ; builds a list of patient transactions by date
"RTN","IBATUTL",40,0)
 ; assumes DFN, IBBDT, IBEDT
"RTN","IBATUTL",41,0)
 ; input IBARRAY - where to store info
"RTN","IBATUTL",42,0)
 ;       IBXREF  - which date x-ref to use
"RTN","IBATUTL",43,0)
 ; output 0,6 node of file IBFILE in array specified
"RTN","IBATUTL",44,0)
 ;
"RTN","IBATUTL",45,0)
 N IBIEN,IBDT,IBNODE
"RTN","IBATUTL",46,0)
 K @IBARRAY
"RTN","IBATUTL",47,0)
 S IBDT=IBBDT-.999999
"RTN","IBATUTL",48,0)
 F  S IBDT=$O(^IBAT(IBFILE,IBXREF,DFN,IBDT)) Q:IBDT<1!(IBDT>IBEDT)  D
"RTN","IBATUTL",49,0)
 . S IBIEN=0
"RTN","IBATUTL",50,0)
 . F  S IBIEN=$O(^IBAT(IBFILE,IBXREF,DFN,IBDT,IBIEN)) Q:IBIEN<1  D
"RTN","IBATUTL",51,0)
 .. F IBNODE=0,6 S @IBARRAY@(IBDT,IBIEN,IBNODE)=$G(^IBAT(IBFILE,IBIEN,IBNODE))
"RTN","IBATUTL",52,0)
 Q
"RTN","IBATUTL",53,0)
LMOPT ; -- called to do standard listmanager option calling
"RTN","IBATUTL",54,0)
 D FULL^VALM1
"RTN","IBATUTL",55,0)
 S VALMBCK="R"
"RTN","IBATUTL",56,0)
 Q
"RTN","IBATUTL",57,0)
 ;
"RTN","IBATUTL",58,0)
SETVALM(LINE,TEXT,IEN,ON,OFF) ; -- sets up listmanager lines
"RTN","IBATUTL",59,0)
 S LINE=LINE+1
"RTN","IBATUTL",60,0)
 D SET^VALM10(LINE,TEXT,LINE)
"RTN","IBATUTL",61,0)
 S:$G(IEN) @VALMAR@("INDEX",LINE,IEN)=""
"RTN","IBATUTL",62,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(LINE,1,$L(TEXT),$G(ON),$G(OFF))
"RTN","IBATUTL",63,0)
 W:'(LINE#5) "."
"RTN","IBATUTL",64,0)
 Q LINE
"RTN","IBATUTL",65,0)
 ;
"RTN","IBATUTL",66,0)
VISN(STATION) ; -- looks up ien & name of VISN from ien of station
"RTN","IBATUTL",67,0)
 N IBAT
"RTN","IBATUTL",68,0)
 D PARENT^XUAF4("IBAT","`"_STATION,"VISN")
"RTN","IBATUTL",69,0)
 S IBAT=0,IBAT=$O(IBAT("P",IBAT))
"RTN","IBATUTL",70,0)
 Q $S(IBAT:IBAT_"^"_$P(IBAT("P",IBAT),"^"),1:"")
"RTN","IBATUTL",71,0)
 ;
"RTN","IBATUTL",72,0)
ONEFAC() ; returns one facility only, no visns allowed
"RTN","IBATUTL",73,0)
 N DIC,DTOUT,DUOUT,X,Y
"RTN","IBATUTL",74,0)
 S DIC="^DIC(4,",DIC(0)="AEMNQ"
"RTN","IBATUTL",75,0)
 S DIC("S")="I $$SCR^IBATUTL(Y),$$INST^IBATUTL(Y)'[""VISN"""
"RTN","IBATUTL",76,0)
 D ^DIC
"RTN","IBATUTL",77,0)
 Q Y
"RTN","IBATUTL",78,0)
FAC() ; -- facility/visn or all selection
"RTN","IBATUTL",79,0)
 N DIC,X,Y,DTOUT,DUOUT K IBFAC
"RTN","IBATUTL",80,0)
 S DIC="^DIC(4,",DIC(0)="EQMNZ"
"RTN","IBATUTL",81,0)
 S DIC("S")="I $$SCR^IBATUTL(Y)"
"RTN","IBATUTL",82,0)
REDO W !,"Select FACILITY/VISN: ALL// " R X:DTIME Q:(X["^")!'$T 1
"RTN","IBATUTL",83,0)
 I X="?" W !,"Select a Facility (Name or Number), VISN (VISN XX), or press RETURN for ALL" G REDO
"RTN","IBATUTL",84,0)
 I X=""!($$UP^XLFSTR(X)="ALL") Q 0
"RTN","IBATUTL",85,0)
 D ^DIC G:Y<1 REDO D SET(Y)
"RTN","IBATUTL",86,0)
 S DIC("A")="Select another FACILITY/VISN: ",DIC(0)="AEQMNZ"
"RTN","IBATUTL",87,0)
 F  D ^DIC Q:X=""!(Y<1)  D SET(Y)
"RTN","IBATUTL",88,0)
 Q 0
"RTN","IBATUTL",89,0)
SET(Y) I Y'["VISN" N IBVISN D PARENT^XUAF4("IBVISN","`"_+Y,"VISN") D
"RTN","IBATUTL",90,0)
 . S IBVISN=0,IBVISN=$O(IBVISN("P",IBVISN))
"RTN","IBATUTL",91,0)
 . S IBFAC(IBVISN,"C",+Y)=$$INST(+Y)
"RTN","IBATUTL",92,0)
 E  S IBFAC(+Y)="" D CHILDREN^XUAF4("IBFAC(+Y)","`"_+Y,"VISN")
"RTN","IBATUTL",93,0)
 Q
"RTN","IBATUTL",94,0)
SCR(X) ; screens invalid institution file entries
"RTN","IBATUTL",95,0)
 N IBVISN
"RTN","IBATUTL",96,0)
 ;Q:$P(X,".",2) 0
"RTN","IBATUTL",97,0)
 D PARENT^XUAF4("IBVISN","`"_X,"VISN")
"RTN","IBATUTL",98,0)
 S IBVISN=0,IBVISN=$O(IBVISN("P",IBVISN)) I IBVISN Q 1
"RTN","IBATUTL",99,0)
 D CHILDREN^XUAF4("IBVISN","`"_X,"VISN")
"RTN","IBATUTL",100,0)
 S IBVISN=0,IBVISN=$O(IBVISN("C",IBVISN)) I IBVISN Q 1
"RTN","IBATUTL",101,0)
 Q 0
"RTN","IBATUTL",102,0)
PPF(DFN) ; returns patient's enrolled/preferred facility
"RTN","IBATUTL",103,0)
 N IBPPF
"RTN","IBATUTL",104,0)
 ; first find current enrolment
"RTN","IBATUTL",105,0)
 S IBPPF=+$$PREF^DGENPTA(DFN) ; dbia #2919
"RTN","IBATUTL",106,0)
 ; now if they are already tp update if necessary
"RTN","IBATUTL",107,0)
 I $D(^IBAT(351.6,DFN)),$P(^(DFN,0),"^",3)'=IBPPF D UPPPF^IBATFILE(DFN,IBPPF)
"RTN","IBATUTL",108,0)
 ; now if they have an over ride facility use that
"RTN","IBATUTL",109,0)
 Q $S($P($G(^IBAT(351.6,DFN,0)),"^",10):$P(^(0),"^",10),IBPPF=$$SITE:0,1:IBPPF)
"RTN","IBATUTL",110,0)
TPP(DFN) ; returns dfn and files patient if a valid tp patient
"RTN","IBATUTL",111,0)
 N IBSITE,IBPPF
"RTN","IBATUTL",112,0)
 S IBSITE=$$SITE
"RTN","IBATUTL",113,0)
 S IBPPF=$$PPF(DFN)
"RTN","IBATUTL",114,0)
 I IBPPF,IBSITE'=IBPPF  S DFN=+$$PAT^IBATFILE(DFN,IBPPF)
"RTN","IBATUTL",115,0)
 I DFN,$P($G(^IBAT(351.6,DFN,0)),"^",4) Q DFN
"RTN","IBATUTL",116,0)
 Q 0
"RTN","IBATUTL",117,0)
SITE() ; returns ien of current va site (this way I have only one outside call
"RTN","IBATUTL",118,0)
 Q +$$SITE^VASITE
"RTN","IBATUTL",119,0)
 ;
"RTN","IBATUTL",120,0)
INST(DA) ; returns institution file info
"RTN","IBATUTL",121,0)
 ; This will return the station name ^ station number ^ station type
"RTN","IBATUTL",122,0)
 ; DA - The pointer value into file 4.
"RTN","IBATUTL",123,0)
 I '$D(^DIC(4,DA,0)) Q 0
"RTN","IBATUTL",124,0)
 Q $$NNT^XUAF4(DA)
"RTN","IBATUTL",125,0)
IPT(X) ; returns institution file pointer from name
"RTN","IBATUTL",126,0)
 Q $$LKUP^XUAF4(X)
"RTN","IBATUTL",127,0)
PROC(X,IBDATE) ; -- returns CPT and descriptive name for cpts
"RTN","IBATUTL",128,0)
 S X=$$CPT^ICPTCOD(X,$G(IBDATE))
"RTN","IBATUTL",129,0)
 Q $P(X,"^",2,3)
"RTN","IBATUTL",130,0)
COPAY(DFN,IBFROM,IBBDT,IBEDT) ; -- returns copay amount if any
"RTN","IBATUTL",131,0)
 ; dfn=patient's dfn, from=what event the bill is from
"RTN","IBATUTL",132,0)
 ; ibbdt & ibedt are date ranges (n/a for rx)
"RTN","IBATUTL",133,0)
 N IBAMT,Y,Y1,IBDA,IBX S IBAMT=0
"RTN","IBATUTL",134,0)
 I IBFROM["PSRX(" D  Q IBAMT
"RTN","IBATUTL",135,0)
 . I $P(IBFROM,";",3)=0 D  Q  ; initial fill
"RTN","IBATUTL",136,0)
 .. S IBFROM=$P($G(^PSRX(+IBFROM,"IB")),"^",2) I 'IBFROM Q  ;dbia #2920
"RTN","IBATUTL",137,0)
 .. S IBAMT=$P($G(^IB(IBFROM,0)),"^",7)
"RTN","IBATUTL",138,0)
 . ; refills
"RTN","IBATUTL",139,0)
 . S IBFROM=+$G(^PSRX(+IBFROM,1,$P(IBFROM,";",3),"IB")) I 'IBFROM Q  ;dbia #2920
"RTN","IBATUTL",140,0)
 . S IBAMT=$P($G(^IB(IBFROM,0)),"^",7)
"RTN","IBATUTL",141,0)
 ; now on to scheduling and admissions
"RTN","IBATUTL",142,0)
 S Y="" F  S Y=$O(^IB("AFDT",DFN,Y)) Q:'Y  I -Y'>IBEDT S Y1=0 F  S Y1=$O(^IB("AFDT",DFN,Y,Y1)) Q:'Y1  D
"RTN","IBATUTL",143,0)
 . S IBDA=0 F  S IBDA=$O(^IB("AF",Y1,IBDA)) Q:'IBDA  D
"RTN","IBATUTL",144,0)
 .. Q:'$D(^IB(IBDA,0))  S IBX=^(0)
"RTN","IBATUTL",145,0)
 .. Q:$P(IBX,"^",8)["ADMISSION"
"RTN","IBATUTL",146,0)
 .. ;
"RTN","IBATUTL",147,0)
 .. ; quit if not correct type (inpatient vs outpatient)
"RTN","IBATUTL",148,0)
 .. Q:$S(IBFROM["SCE("&($P($P(IBX,"^",4),":")'=409.68):1,IBFROM["DGPM("&($P($P(IBX,"^",4),":")=409.68):1,1:0)
"RTN","IBATUTL",149,0)
 .. ;
"RTN","IBATUTL",150,0)
 .. I $P(IBX,"^",15)<IBBDT!($P(IBX,"^",14)>IBEDT) Q
"RTN","IBATUTL",151,0)
 .. S IBAMT=IBAMT+$P(IBX,"^",7)
"RTN","IBATUTL",152,0)
 Q IBAMT
"RTN","IBATUTL",153,0)
FINDT(X) ; -- looks up transactions for source in X
"RTN","IBATUTL",154,0)
 ; returns ien of 351.61 if not cancelled
"RTN","IBATUTL",155,0)
 Q:$G(X)="" 0
"RTN","IBATUTL",156,0)
 N Y,Z S (Y,Z)=0
"RTN","IBATUTL",157,0)
 F  S Y=$O(^IBAT(351.61,"AD",X,Y)) Q:Y<1!(Z)  D
"RTN","IBATUTL",158,0)
 . I $G(^IBAT(351.61,Y,0)),$P(^(0),"^",5)'="X" S Z=Y
"RTN","IBATUTL",159,0)
 Q Z
"RTN","IBATUTL",160,0)
 ;
"RTN","IBATUTL",161,0)
EX(FILE,FIELD,VALUE) ; -- return external value
"RTN","IBATUTL",162,0)
 N Y,C S Y=$G(VALUE)
"RTN","IBATUTL",163,0)
 I +$G(FILE),+$G(FIELD),Y'="" S C=$P(^DD(FILE,FIELD,0),"^",2) D Y^DIQ
"RTN","IBATUTL",164,0)
 Q Y
"RTN","IBATUTL",165,0)
 ;
"RTN","IBCCPT")
0^11^B58764602
"RTN","IBCCPT",1,0)
IBCCPT ;ALB/LDB/AAS - MCCR OUTPATIENT VISITS LISTING CONT. ; 29 MAY 90
"RTN","IBCCPT",2,0)
 ;;2.0;INTEGRATED BILLING;**55,62,52,91,106,125,51,148,174,182,245,266**;21-MAR-94
"RTN","IBCCPT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCPT",4,0)
 ;
"RTN","IBCCPT",5,0)
 ;MAP TO DGCRCPT
"RTN","IBCCPT",6,0)
 ;
"RTN","IBCCPT",7,0)
EN1(IBQUERY,IBHLP) ;
"RTN","IBCCPT",8,0)
 K DIR
"RTN","IBCCPT",9,0)
EN D:$D(DIR) HLP W @IOF S DGU=0 K DGCPT,^UTILITY($J) D VST(.IBQUERY)
"RTN","IBCCPT",10,0)
 D CHDR,WRNO
"RTN","IBCCPT",11,0)
 N ICPTVDT S ICPTVDT=$$BDATE^IBACSV($G(IBIFN)) ; Code Text Version
"RTN","IBCCPT",12,0)
 S (DGCNT,DGCNT1)=0 F  S DGCNT=$O(^UTILITY($J,"CPT-CNT",DGCNT)) Q:'DGCNT  S DGNOD=^(DGCNT),DGCPT=+DGNOD,DGDAT=$P(DGNOD,"^",2),DGBIL=$P(DGNOD,"^",3),DGASC=$P(DGNOD,"^",4),DGDIV=$P(DGNOD,"^",5),DGCNT1=DGCNT1+1 D CPRT I DGU="^" S DGCNT=DGCNT-1 Q
"RTN","IBCCPT",13,0)
 I DGU'="^" F Y=$Y:1:IOSL-6 W !
"RTN","IBCCPT",14,0)
OK1 K Y Q:'$D(^UTILITY($J,"CPT-CNT"))!($D(DIR))!($G(IBHLP))
"RTN","IBCCPT",15,0)
OK S DIR(0)="LAO^1:"_DGCNT1_"^K:X[""."" X",DIR("?")="^N DIR D EN1^IBCCPT(.IBQUERY,1)",DIR("A")="SELECT CPT CODE(S) TO INCLUDE IN THIS BILL: "
"RTN","IBCCPT",16,0)
 D ^DIR K DIR I 'Y D Q1^IBCOPV1 Q
"RTN","IBCCPT",17,0)
 S IBFT=+$P(^DGCR(399,IBIFN,0),"^",19)
"RTN","IBCCPT",18,0)
OK2 W !,"YOU HAVE SELECTED CPT CODE(S) NUMBERED-",$E(Y,1,$L(Y)-1),!,"IS THIS CORRECT" S %=1 D YN^DICN I %=-1 S IBOUT=1 D Q^IBCOPV1 Q
"RTN","IBCCPT",19,0)
 I +Y,'% W !,"Respond 'Y'es to include these codes in the bill.",!,"Respond 'N'o to reselect." G OK2
"RTN","IBCCPT",20,0)
 I +Y,%=2 G OK
"RTN","IBCCPT",21,0)
 ;
"RTN","IBCCPT",22,0)
FILE S DGCPT1=Y,(DGCNT,DGCNT2)=0
"RTN","IBCCPT",23,0)
 S DIE="^DGCR(399,",DA=IBIFN,DR=".09///5" D ^DIE K DR,DA,DIE
"RTN","IBCCPT",24,0)
 F I9=1:1 S I1=$P(DGCPT1,",",I9) Q:'I1  I $D(^UTILITY($J,"CPT-CNT",I1)) S DGNOD=^(I1) D FILE1
"RTN","IBCCPT",25,0)
 D Q1^IBCOPV1 Q
"RTN","IBCCPT",26,0)
 ;
"RTN","IBCCPT",27,0)
FILE1 ;  file procedures, if BASC, only for 1 visit date
"RTN","IBCCPT",28,0)
 K DGNOADD S (X,DINUM)=$P(DGNOD,"^",2) D VFILE1^IBCOPV1 K DINUM,X
"RTN","IBCCPT",29,0)
 N IBCPTNM S IBCPTNM=$$CPT^ICPTCOD(+DGNOD,+$P(DGNOD,U,2))
"RTN","IBCCPT",30,0)
 I $D(DGNOADD) W !?10,"Can't add Amb. Surg. ",$P(IBCPTNM,U,2)," without visit date!" Q  ;don't add cpt for date that can't go on bill
"RTN","IBCCPT",31,0)
 I IBFT'=2,+$P(DGNOD,"^",4),$$TOMANY($P(DGNOD,"^",2)) W !?10,"Can't add Billable Amb. Surg. ",$P(IBCPTNM,U,2)," when more than one visit date!",*7 Q
"RTN","IBCCPT",32,0)
 D DSPPRC(IBCPTNM,DGNOD)
"RTN","IBCCPT",33,0)
 ;
"RTN","IBCCPT",34,0)
 S:'$D(^DGCR(399,IBIFN,"CP",0)) DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCPT",35,0)
 S DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP"",",DIC(0)="L",X=+DGNOD_";ICPT(" K DD,DO D FILE^DICN S (DA,IBPROCP)=+Y K DO,DD,DLAYGO,DIC("P")
"RTN","IBCCPT",36,0)
 ;
"RTN","IBCCPT",37,0)
 S DR="1///"_$P(DGNOD,"^",2)
"RTN","IBCCPT",38,0)
 I +$P(DGNOD,"^",8) S DR=DR_";18///`"_+$P(DGNOD,"^",8)
"RTN","IBCCPT",39,0)
 I +$P(DGNOD,"^",9) S DR=DR_";6///`"_+$P(DGNOD,"^",9)
"RTN","IBCCPT",40,0)
 I +$P(DGNOD,"^",5) S DR=DR_";5////"_+$P(DGNOD,"^",5)
"RTN","IBCCPT",41,0)
 I +$P(DGNOD,"^",11) S DR=DR_";20////"_+$P(DGNOD,"^",11)
"RTN","IBCCPT",42,0)
 S DIE=DIC D ^DIE
"RTN","IBCCPT",43,0)
 D:$P(DGNOD,U,10)'="" ADDMOD(IBIFN,IBPROCP,$P(DGNOD,U,10))
"RTN","IBCCPT",44,0)
 ;
"RTN","IBCCPT",45,0)
 S DR="16"
"RTN","IBCCPT",46,0)
 I '$P(DGNOD,"^",8) S DR=DR_";18"
"RTN","IBCCPT",47,0)
 I '$P(DGNOD,"^",9) S DR=DR_";6"
"RTN","IBCCPT",48,0)
 I '$P(DGNOD,"^",5) S DR=DR_";5"
"RTN","IBCCPT",49,0)
 S:IBFT=2 DR=DR_";8;9;17//NO"
"RTN","IBCCPT",50,0)
 S DIE=DIC D ^DIE
"RTN","IBCCPT",51,0)
 ;
"RTN","IBCCPT",52,0)
 S DR=$$SPCUNIT^IBCU7(IBIFN,IBPROCP) I DR'="" D ^DIE ; miles/minutes/hours
"RTN","IBCCPT",53,0)
 ;
"RTN","IBCCPT",54,0)
 ; DSS QuadraMed Interface: CPT Sequence and Diagnosis Linkage for Single CPT
"RTN","IBCCPT",55,0)
 I $$QMED^IBCU1("DX^VEJDIBE1",IBIFN) D DX^VEJDIBE1(IBIFN,IBPROCP)
"RTN","IBCCPT",56,0)
 ;
"RTN","IBCCPT",57,0)
 Q:$D(Y)
"RTN","IBCCPT",58,0)
 D DX^IBCU72(IBIFN,IBPROCP):IBFT=2
"RTN","IBCCPT",59,0)
 I IBFT=2 S X=$$ADDTNL^IBCU7(IBIFN,.DA)
"RTN","IBCCPT",60,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCCPT",61,0)
 K DIE,DIC,DR,DA,IBPROCP
"RTN","IBCCPT",62,0)
 Q
"RTN","IBCCPT",63,0)
 ;
"RTN","IBCCPT",64,0)
CPRT D:$Y+6>IOSL SCR Q:DGU="^"
"RTN","IBCCPT",65,0)
 N IBCPTNM,IBNBM,IBMODS,J,IBZ,IBDATE
"RTN","IBCCPT",66,0)
 S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCCPT",67,0)
 S IBNBM="",IBCPTNM=$$CPT^ICPTCOD(DGCPT,IBDATE) Q:IBCPTNM'>0
"RTN","IBCCPT",68,0)
 W !,DGCNT,")",?5,$P(IBCPTNM,U,2),?13,$E($P(IBCPTNM,U,3),1,24),?39,$E($P($G(^SC(+$P(DGNOD,U,9),0)),U,1),1,15),?56,$$FMTE^XLFDT(DGDAT,2)
"RTN","IBCCPT",69,0)
 I +DGBIL,+$P($G(DGNOD),U,6) S IBNBM="  *ON BILL/"_$E($P(DGNOD,U,7),1,4)_"*"
"RTN","IBCCPT",70,0)
 I IBNBM="",DGBIL S IBNBM="  *ON THIS BILL*"
"RTN","IBCCPT",71,0)
 I IBNBM="",+$P($G(DGNOD),U,6) S IBNBM="  "_$E($P(DGNOD,U,7),1,12)
"RTN","IBCCPT",72,0)
 W ?64,IBNBM
"RTN","IBCCPT",73,0)
 ;
"RTN","IBCCPT",74,0)
 S IBMODS=$P($G(DGNOD),U,10) F J=1:1 S IBZ=$P(IBMODS,",",J) Q:IBZ=""  S IBZ=$$MOD^ICPTMOD(IBZ,"I",IBDATE) W !,?13,$P(IBZ,U,2),?18,$P(IBZ,U,3)
"RTN","IBCCPT",75,0)
 Q
"RTN","IBCCPT",76,0)
CHDR W @IOF,!,?15,"<<CURRENT PROCEDURAL TERMINOLOGY CODES>>",!!,?10,"LISTING FROM VISIT DATES WITH ASSOCIATED CPT CODES",!,?22,"IN OUTPT ENCOUNTERS FILE",!
"RTN","IBCCPT",77,0)
 K ^TMP("IBVIS",$J)
"RTN","IBCCPT",78,0)
 S L="",$P(L,"=",80)="" W !,L,!,"NO.",?5,"CODE",?13,"SHORT NAME",?39,"CLINIC",?56,"DATE",!,L,! K L
"RTN","IBCCPT",79,0)
 Q
"RTN","IBCCPT",80,0)
ADDMOD(IBIFN,IBY,IBMOD) ; Add modifier(s) from PCE procedure to CPT code mult
"RTN","IBCCPT",81,0)
 N DIE,DR,DIC,DA,DO,DD,IBS,IBM
"RTN","IBCCPT",82,0)
 F IBS=1:1:$L(IBMOD,",") S DA(2)=IBIFN,DA(1)=IBY,X=$O(^DGCR(399,DA(2),"CP",DA(1),"MOD","B",""),-1)+1 S IBM=$P(IBMOD,",",IBS) I IBM'="" D
"RTN","IBCCPT",83,0)
 . S:'$D(^DGCR(399,DA(2),"CP",DA(1),"MOD")) DIC("P")=$$GETSPEC^IBEFUNC(399.0304,16)
"RTN","IBCCPT",84,0)
 . S DIC(0)="L",DIC="^DGCR(399,"_IBIFN_",""CP"","_IBY_",""MOD"",",DLAYGO=399.30416,DIC("DR")=".02////"_IBM
"RTN","IBCCPT",85,0)
 . D FILE^DICN K DIC,DO,DD
"RTN","IBCCPT",86,0)
 Q
"RTN","IBCCPT",87,0)
 ;
"RTN","IBCCPT",88,0)
DSPPRC(CPTNM,NOD) ; display summary of procedure being added
"RTN","IBCCPT",89,0)
 N IBI,IBL,IBMODS,IBMOD,IBPRVTYP,IBPRV,IBDATE
"RTN","IBCCPT",90,0)
 I $G(CPTNM)=""!($G(NOD)="") Q
"RTN","IBCCPT",91,0)
 S IBMODS=$P(NOD,U,10),IBPRVTYP="",IBPRV=""
"RTN","IBCCPT",92,0)
 I +$P(NOD,U,8) S IBPRV=$P($G(^VA(200,+$P(NOD,U,8),0)),U,1),IBPRVTYP=$P($$PRVTYP^IBCRU6(+$P(NOD,U,8)),U,3) S IBL=$S(($L(IBPRVTYP)+$L(IBPRV))>32:"",1:" - ")
"RTN","IBCCPT",93,0)
 ;
"RTN","IBCCPT",94,0)
 W !!?4,"Adding CPT Procedure: ",$P(CPTNM,U,2),?34,$P(CPTNM,U,3)
"RTN","IBCCPT",95,0)
 S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCCPT",96,0)
 I IBMODS'="" F IBI=1:1 S IBMOD=$P(IBMODS,",",IBI) Q:'IBMOD  S IBMOD=$$MOD^ICPTMOD(IBMOD,"I",IBDATE) W !,?34,$P(IBMOD,U,2)," - ",$E($P(IBMOD,U,3),1,40)
"RTN","IBCCPT",97,0)
 W !,?34,"Visit: ",$$FMTE^XLFDT(+$P(NOD,U,2),2),", ",$E($P($G(^SC(+$P(NOD,U,9),0)),U,1),1,29)
"RTN","IBCCPT",98,0)
 I IBPRV'="" W !,?34,"Provider: ",$E(IBPRV,1,35) I IBPRVTYP'="" W:IBL="" !,?44 W IBL,IBPRVTYP
"RTN","IBCCPT",99,0)
 W !
"RTN","IBCCPT",100,0)
 Q
"RTN","IBCCPT",101,0)
 ;
"RTN","IBCCPT",102,0)
VST(IBQUERY) ;Procedures for outpatient visits ... If IBQUERY is defined
"RTN","IBCCPT",103,0)
 ;  on entry, the QUERY OBJECT defined by this value will be used for
"RTN","IBCCPT",104,0)
 ;  loop to extract procedures for visits, otherwise, a new QUERY will be opened
"RTN","IBCCPT",105,0)
 ;  If passed by reference, IBQUERY will be ret'd as the new QUERY ref #
"RTN","IBCCPT",106,0)
 S DGCNT=0 I $O(^DGCR(399,IBIFN,"OP",0)) F V=0:0 S V=$O(^DGCR(399,IBIFN,"OP",V)) Q:'V  S (IBOPV1,IBOPV2)=V D PROC(.IBQUERY)
"RTN","IBCCPT",107,0)
 I $O(^DGCR(399,IBIFN,"OP",0)) K ^TMP("IBVIS",$J) G VSTQ
"RTN","IBCCPT",108,0)
 S IBOPV1=$P(^DGCR(399,IBIFN,"U"),"^"),IBOPV2=$P(^("U"),"^",2)
"RTN","IBCCPT",109,0)
 D PROC(.IBQUERY) K ^TMP("IBVIS",$J)
"RTN","IBCCPT",110,0)
VSTQ Q
"RTN","IBCCPT",111,0)
 ;
"RTN","IBCCPT",112,0)
WRNO W:'$O(^UTILITY($J,"CPT-CNT",0)) !,"NO CPT CODES ON FILE FOR THE ",$S($O(^DGCR(399,IBIFN,"OP",0)):"VISIT DATES ON THIS BILL",1:"PERIOD THAT THIS STATEMENT COVERS")
"RTN","IBCCPT",113,0)
 Q
"RTN","IBCCPT",114,0)
SCR Q:DGU="^"  I $E(IOST,1,2)["C-",$Y+6>IOSL F Y=$Y:1:IOSL-5 W !
"RTN","IBCCPT",115,0)
 I  R !,"Press return to continue or ""^"" to exit display ",DGU:DTIME D:DGU'="^" CHDR
"RTN","IBCCPT",116,0)
 Q
"RTN","IBCCPT",117,0)
HLP W !!,"Enter a number between 1 and ",DGCNT1," or a range of numbers separated with commas",!,"or dashes, e.g., 1,3,5 or 2-4,8"
"RTN","IBCCPT",118,0)
 W !,"The number(s) must appear as a selectable number in the sequential list." R H:5 K H Q
"RTN","IBCCPT",119,0)
CPT S DA(1)=IBIFN,IBCCPTZ=$P(^DGCR(399,DA(1),0),U,9),IBCCPTX=$S($D(^DGCR(399,DA(1),"C"))&IBCCPTZ:1,1:0)
"RTN","IBCCPT",120,0)
 K DIK,DGTE,I1 Q
"RTN","IBCCPT",121,0)
 ;
"RTN","IBCCPT",122,0)
PROC(IBQUERY) ;  -find outpatient procedures, flag if billable
"RTN","IBCCPT",123,0)
 ;  -  ^utility($j,cpt-cnt,count)=code^date^on bill^is BASC^divis^nb^nb mess^provider^clinic^mod,mod^Opt Enc Ptr
"RTN","IBCCPT",124,0)
 N IBVAL,IBCBK,IBFILTER
"RTN","IBCCPT",125,0)
 S IBVAL("DFN")=DFN,IBVAL("BDT")=IBOPV1,IBVAL("EDT")=(IBOPV2+.99)
"RTN","IBCCPT",126,0)
 ; Must be a billable appt type and outpt enctr status of CHECKED OUT
"RTN","IBCCPT",127,0)
 S IBFILTER=""
"RTN","IBCCPT",128,0)
 S IBCBK="I '$P(Y0,U,6),$P(Y0,U,7),$$DSP^IBEFUNC($P(Y0,U,10),+Y0),'$D(^TMP(""IBVIS"",$J,+$P(Y0,U,5))) S ^TMP(""IBVIS"",$J,+$P(Y0,U,5))="""" D EXTPROC^IBCCPT(IBIFN,Y,Y0,.DGCNT)"
"RTN","IBCCPT",129,0)
 D SCAN^IBSDU("PATIENT/DATE",.IBVAL,IBFILTER,IBCBK,0,.IBQUERY) K ^TMP("DIERR",$J)
"RTN","IBCCPT",130,0)
 ;
"RTN","IBCCPT",131,0)
 Q
"RTN","IBCCPT",132,0)
EXTPROC(IBIFN,IBOE,IBOE0,IBCNT) ; Extract procedures for an encounter
"RTN","IBCCPT",133,0)
 ; IBIFN = the ien of the bill
"RTN","IBCCPT",134,0)
 ; IBOE0 = 0-node of the outpatient encounter file entry IBOE
"RTN","IBCCPT",135,0)
 ; IBCNT  extracted entry counter
"RTN","IBCCPT",136,0)
 N I2,I7,IBCPT,IBCPTS,IBDIV,IBOED,IBZERR,Z,IBCPTDAT,IBCPTPRV,IBCLINIC,IBZ,IBONBILL,IBMODS
"RTN","IBCCPT",137,0)
 D GETCPT^SDOE(IBOE,"IBCPTS","IBZERR")
"RTN","IBCCPT",138,0)
 Q:'$O(IBCPTS(0))  ;No procedures for this encounter
"RTN","IBCCPT",139,0)
 I '$$BDSRC^IBEFUNC3($P($G(IBOE0),U,5)) Q  ; non-billable visit data source
"RTN","IBCCPT",140,0)
 S IBOED=$$NBOE^IBCU81(IBOE,IBOE0)
"RTN","IBCCPT",141,0)
 S I7=IBOE0\1,IBDIV=$P(IBOE0,U,11)
"RTN","IBCCPT",142,0)
 S IBCLINIC="" I +$P(IBOE0,U,4),+$$CLNSCRN^IBCU(I7,+$P(IBOE0,U,4)) S IBCLINIC=+$P(IBOE0,U,4)
"RTN","IBCCPT",143,0)
 S I2=0 F  S I2=$O(IBCPTS(I2)) Q:'I2  D
"RTN","IBCCPT",144,0)
 . S IBCPT=$P(IBCPTS(I2),U)
"RTN","IBCCPT",145,0)
 . S IBCPTPRV=$P($G(IBCPTS(I2,12)),U,4)
"RTN","IBCCPT",146,0)
 . S IBONBILL=0 S IBZ=0 F  S IBZ=$O(^DGCR(399,IBIFN,"CP","B",IBCPT_";ICPT(",IBZ)) Q:'IBZ  I $P($G(^DGCR(399,IBIFN,"CP",IBZ,0)),U,2)=I7 S IBONBILL=1
"RTN","IBCCPT",147,0)
 . S IBMODS="",IBZ=0 F  S IBZ=$O(IBCPTS(I2,1,IBZ)) Q:'IBZ  S IBMODS=IBMODS_$S(IBMODS="":"",1:",")_+$G(IBCPTS(I2,1,IBZ,0))
"RTN","IBCCPT",148,0)
 . S IBCPTDAT=IBCPT_U_I7_U_IBONBILL_U_0_U_IBDIV_U_$P(IBOED,U,1)_U_$P(IBOED,U,2)_U_IBCPTPRV_U_IBCLINIC_U_IBMODS_U_IBOE
"RTN","IBCCPT",149,0)
 . F Z=1:1:$P(IBCPTS(I2),U,16) S IBCNT=IBCNT+1,^UTILITY($J,"CPT-CNT",IBCNT)=IBCPTDAT
"RTN","IBCCPT",150,0)
 I $O(IBCPTS(0)),'$D(^UTILITY($J,"CPT",+IBOE0,0)) S ^(0)="Y"
"RTN","IBCCPT",151,0)
 Q
"RTN","IBCCPT",152,0)
 ;
"RTN","IBCCPT",153,0)
TOMANY(DATE) ;  - returns 1 if more than 1 visit date on bill (for basc)
"RTN","IBCCPT",154,0)
 G TOMANYQ:'$D(DATE)
"RTN","IBCCPT",155,0)
 S DGVCNT=+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4)
"RTN","IBCCPT",156,0)
 I DGVCNT>1!(DGVCNT=1&('$D(^DGCR(399,IBIFN,"OP",DATE)))) K DGVCNT Q 1
"RTN","IBCCPT",157,0)
TOMANYQ Q 0
"RTN","IBCSC4C")
0^10^B21582640
"RTN","IBCSC4C",1,0)
IBCSC4C ;ALB/MJB - MCCR PTF SCREEN (CONT.) ;24 FEB 9:43
"RTN","IBCSC4C",2,0)
 ;;2.0;INTEGRATED BILLING;**210,266**;21-MAR-94
"RTN","IBCSC4C",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4C",4,0)
 ;
"RTN","IBCSC4C",5,0)
 ;MAP TO DGCRSC4C
"RTN","IBCSC4C",6,0)
 ;
"RTN","IBCSC4C",7,0)
SETP S:IBP'>2 IB9=0 D S
"RTN","IBCSC4C",8,0)
 F F=1:1:3 Q:IB9=3  I $D(IBWO(F)),IBWO(F)]"",$P(IBWO(F),U,1)'=IBNC S IB9=IB9+1,IB7(IB9)=IBWO(F)_U_$S($P(IBWO(F),U,2)']"":$P(IBWO(0),U,2),1:"")
"RTN","IBCSC4C",9,0)
 I '$D(IB7(3)) F F=1:1:3 Q:IB9=3  I $D(IBWE(F)),IBWE(F)]"",$P(IBWE(F),U,1)'=IBNC S IB9=IB9+1,IB7(IB9)=IBWE(F)_U_$S($P(IBWE(F),U,2)']"":$P(IBWE(0),U,2),1:"")
"RTN","IBCSC4C",10,0)
 Q:"^^"[$P(IB("C"),U,4,6)!($P(IB("C"),U,4)]"")!($P(IB("C"),U,5)]"")!($P(IB("C"),U,6)]"")
"RTN","IBCSC4C",11,0)
 F F=1:1:3 I $D(IB7(F)),$P(^DGCR(399,IBIFN,"C"),U,(F+3))']"" S $P(^DGCR(399,IBIFN,"C"),U,(F+3))=$P(IB7(F),U,1),$P(^("C"),U,(F+10))=$P(IB7(F),U,2)
"RTN","IBCSC4C",12,0)
 S:$P(^DGCR(399,IBIFN,0),U,9)="" $P(^DGCR(399,IBIFN,0),U,9)=9
"RTN","IBCSC4C",13,0)
 Q
"RTN","IBCSC4C",14,0)
SETD S:IBDIA'>2 IB8=0 D S
"RTN","IBCSC4C",15,0)
 F F=1:1:5 Q:IB8=5  I $D(IBWO(F)),IBWO(F)]"",$P(IBWO(F),U,1)'=IBNC S IB8=IB8+1,IB6(IB8)=$P(IBWO(F),U,1)
"RTN","IBCSC4C",16,0)
 I '$D(IB6(5)) F F=1:1:5 Q:IB8=5  I $D(IBWE(F)),IBWE(F)]"",$P(IBWE(F),U,1)'=IBNC S IB8=IB8+1,IB6(IB8)=$P(IBWE(F),U,1)
"RTN","IBCSC4C",17,0)
 Q:"^^^^"[$P(IB("C"),U,14,18)!($P(IB("C"),U,14)]"")!($P(IB("C"),U,15)]"")!($P(IB("C"),U,16)]"")!($P(IB("C"),U,17)]"")!($P(IB("C"),U,18)]"")
"RTN","IBCSC4C",18,0)
 F F=1:1:5 I $D(IB6(F)) S $P(^DGCR(399,IBIFN,"C"),U,(F+13))=IB6(F)
"RTN","IBCSC4C",19,0)
 Q
"RTN","IBCSC4C",20,0)
SELP D S F I=1:1 W ! Q:$Y+10>IOSL
"RTN","IBCSC4C",21,0)
 N IBZ,IBQ
"RTN","IBCSC4C",22,0)
 S IBQ=0 ; Quit flag
"RTN","IBCSC4C",23,0)
 F I=1:1:3 W !,"ICD PROCEDURE CODE (",I,"): " D  Q:IBQ
"RTN","IBCSC4C",24,0)
 . S IBPX=$P(IB("C"),U,(I+3))
"RTN","IBCSC4C",25,0)
 . I IBPX S IBZ=$$ICD0^IBACSV(+IBPX) W $S(IBZ'="":$J($P(IBZ,U),6),1:IBUC)_"// "
"RTN","IBCSC4C",26,0)
 . R X:DTIME I '$T!(X["^") S IBQ=1 Q
"RTN","IBCSC4C",27,0)
 . D CHP
"RTN","IBCSC4C",28,0)
 . I $D(IB3) D PD
"RTN","IBCSC4C",29,0)
 . D S
"RTN","IBCSC4C",30,0)
 Q
"RTN","IBCSC4C",31,0)
 ;
"RTN","IBCSC4C",32,0)
PD S %DT("A")="      PROCEDURE DATE ("_I_"): ",%DT="AEX" D ^%DT I Y>0 S $P(^DGCR(399,IBIFN,"C"),U,(I+10))=+Y,IB("C")=^DGCR(399,IBIFN,"C") K IB3
"RTN","IBCSC4C",33,0)
 Q
"RTN","IBCSC4C",34,0)
 ; Select Diagnosis codes
"RTN","IBCSC4C",35,0)
SELD D S F I=1:1 W ! Q:$Y+10>IOSL
"RTN","IBCSC4C",36,0)
 N IBZ,IBQ
"RTN","IBCSC4C",37,0)
 S IBQ=0
"RTN","IBCSC4C",38,0)
 F I=1:1:5 W !,"DIAGNOSIS CODE (",I,"): " D  Q:IBQ
"RTN","IBCSC4C",39,0)
 . S IBPY=$P(IB("C"),U,(I+13))
"RTN","IBCSC4C",40,0)
 . I IBPY S IBZ=$$ICD9^IBACSV(+IBPY) W $S(IBZ'="":$J($P(IBZ,U),6),1:IBUC)_"// "
"RTN","IBCSC4C",41,0)
 . R X:DTIME I '$T!(X["^")!((X="")&(IBPY="")) S IBQ=1 Q
"RTN","IBCSC4C",42,0)
 . D CHD,S
"RTN","IBCSC4C",43,0)
 Q
"RTN","IBCSC4C",44,0)
CHP N IBDATE,ICDVDT
"RTN","IBCSC4C",45,0)
 I X="?" D 3^IBCSCH1 S I=I-1 Q
"RTN","IBCSC4C",46,0)
 I X="",$P(IB("C"),U,(I+3))]"" Q
"RTN","IBCSC4C",47,0)
 I X["@" W "   ...Deleted" S IB7(I)="",$P(^DGCR(399,IBIFN,"C"),U,(I+3))="",$P(^("C"),U,(I+10))="",$P(IB("C"),U,(I+10))="",IBPX=1 Q
"RTN","IBCSC4C",48,0)
 I X="" S $P(^DGCR(399,IBIFN,"C"),U,(I+3))="",$P(^("C"),U,(I+10))="" Q
"RTN","IBCSC4C",49,0)
 I X?1A1N D P^IBCSC4A S IB5=$S($D(^UTILITY($J,"IB",M,S)):^(S),1:"") S:IB5]"" $P(^DGCR(399,IBIFN,"C"),U,(I+3))=$P(IB5,U,1) D:IB5]"" DT Q:IB5]""  W *7,"  ??" S I=I-1 Q
"RTN","IBCSC4C",50,0)
 I $P(^IBE(350.9,1,1),U,15)'=1 D PAR Q
"RTN","IBCSC4C",51,0)
 S:X["?" X="??"
"RTN","IBCSC4C",52,0)
 S IBI=I
"RTN","IBCSC4C",53,0)
 S IBDATE=$P(^DGCR(399,IBIFN,"C"),U,I+10)
"RTN","IBCSC4C",54,0)
 I 'IBDATE S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSC4C",55,0)
 S ICDVDT=IBDATE ; for DD identifier (date of service)
"RTN","IBCSC4C",56,0)
 S DIC("S")="N IBZ S IBZ=$G(^(0)) I $$SEXSCR^IBCSC4C(IBZ,$G(DFN)),$$ICD0ACT^IBACSV(+Y,IBDATE)"
"RTN","IBCSC4C",57,0)
 S DIC="^ICD0(" D DIC I Y'>0 S I=IBI-1 Q
"RTN","IBCSC4C",58,0)
 S X=+Y,$P(^DGCR(399,IBIFN,"C"),U,(I+3))=X D PD
"RTN","IBCSC4C",59,0)
 Q
"RTN","IBCSC4C",60,0)
 ;
"RTN","IBCSC4C",61,0)
CHD N IBDATE,ICDVDT
"RTN","IBCSC4C",62,0)
 I X="?" D 3^IBCSCH1 S I=I-1 Q
"RTN","IBCSC4C",63,0)
 I X="",$P(IB("C"),U,(I+13))]"" Q
"RTN","IBCSC4C",64,0)
 I X["@" W "   ...Deleted" S IB6(I)="",$P(^DGCR(399,IBIFN,"C"),U,(I+13))="",$P(IB("C"),U,(I+13))="",IBPY=1 Q
"RTN","IBCSC4C",65,0)
 I X="" S $P(^DGCR(399,IBIFN,"C"),U,(I+13))="" Q
"RTN","IBCSC4C",66,0)
 I X?1A1N D D^IBCSC4A S IB4=$S($D(^UTILITY($J,"IBDX",M,S)):^(S),1:"") S:IB4]"" $P(^DGCR(399,IBIFN,"C"),U,(I+13))=$P(IB4,U,1),IB3=1 Q:IB4]""  W *7,"  ??" S I=I-1 Q
"RTN","IBCSC4C",67,0)
 I $P(^IBE(350.9,1,1),U,15)'=1 D PAR Q
"RTN","IBCSC4C",68,0)
 S:X["?" X="??"
"RTN","IBCSC4C",69,0)
 S IBI=I
"RTN","IBCSC4C",70,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; The date of service
"RTN","IBCSC4C",71,0)
 S ICDVDT=IBDATE ; For the DD identifier
"RTN","IBCSC4C",72,0)
 S DIC("S")="N IBZ S IBZ=$G(^(0)) I $$SEXSCR^IBCSC4C(IBZ,$G(DFN)),$$ICD9ACT^IBACSV(+Y,IBDATE)"
"RTN","IBCSC4C",73,0)
 S DIC="^ICD9(" D DIC I Y'>0 S I=IBI-1 Q
"RTN","IBCSC4C",74,0)
 S X=+Y,$P(^DGCR(399,IBIFN,"C"),U,(I+13))=X
"RTN","IBCSC4C",75,0)
 Q
"RTN","IBCSC4C",76,0)
 ;
"RTN","IBCSC4C",77,0)
 ; Check the sex of procedure and the patients
"RTN","IBCSC4C",78,0)
SEXSCR(IBZ,DFN) ;
"RTN","IBCSC4C",79,0)
 N IBCODSEX,IBPTSEX
"RTN","IBCSC4C",80,0)
 S IBCODSEX=$P(IBZ,U,10) ; Sex of the ICD0/ICD9 code, if any
"RTN","IBCSC4C",81,0)
 I IBCODSEX'="M",IBCODSEX'="F" Q 1  ; No assigned sex for the code
"RTN","IBCSC4C",82,0)
 I '$G(DFN) Q 1
"RTN","IBCSC4C",83,0)
 S IBPTSEX=$E($P($G(^DPT(+DFN,0)),U,2)) ; Patient's sex
"RTN","IBCSC4C",84,0)
 I IBPTSEX'="M",IBPTSEX'="F" S IBPTSEX="M" ; Male is default for veterans
"RTN","IBCSC4C",85,0)
 Q IBPTSEX=IBCODSEX
"RTN","IBCSC4C",86,0)
 ;
"RTN","IBCSC4C",87,0)
DT S $P(^DGCR(399,IBIFN,"C"),U,(I+10))=$S($P(IB5,U,2)]"":$P(IB5,U,2),1:$P(^UTILITY($J,"IB",M,1),U,2))
"RTN","IBCSC4C",88,0)
 Q
"RTN","IBCSC4C",89,0)
PAR W:X'["?" "  ??" W !?7,"You may only choose codes found in PTF record!" D 3^IBCSCH1 S I=I-1
"RTN","IBCSC4C",90,0)
 Q
"RTN","IBCSC4C",91,0)
DIC S DIC(0)="EMQ" D ^DIC
"RTN","IBCSC4C",92,0)
 Q
"RTN","IBCSC4C",93,0)
S S:'$D(^DGCR(399,IBIFN,"C")) ^DGCR(399,IBIFN,"C")="" S IB("C")=^DGCR(399,IBIFN,"C")
"RTN","IBCSC4C",94,0)
 Q
"RTN","IBCSC4E")
0^3^B39280455
"RTN","IBCSC4E",1,0)
IBCSC4E ;ALB/ARH - ADD/ENTER PTF/OE DIAGNOSIS ;3/2/94
"RTN","IBCSC4E",2,0)
 ;;2.0;INTEGRATED BILLING;**8,106,121,124,210,266**;21-MAR-94
"RTN","IBCSC4E",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC4E",4,0)
 ;
"RTN","IBCSC4E",5,0)
DXINPT(IBIFN) ; display and ask user to select PTF diagnosis
"RTN","IBCSC4E",6,0)
 N IBLIST,IBPTFDX
"RTN","IBCSC4E",7,0)
 D PTFDSP(IBIFN),PTFASK I $D(IBLIST) D PTFADD(IBIFN,IBLIST)
"RTN","IBCSC4E",8,0)
 K ^TMP($J,"IBDX")
"RTN","IBCSC4E",9,0)
 Q
"RTN","IBCSC4E",10,0)
 ;
"RTN","IBCSC4E",11,0)
PTFASK ;
"RTN","IBCSC4E",12,0)
 D PTF Q:$G(IBPTFDX)'>0  N X,Y,DIR,DIRUT K IBLIST W !
"RTN","IBCSC4E",13,0)
PTFASK1 S DIR("A")="SELECT DIAGNOSIS FROM THE PTF RECORD TO INCLUDE ON THE BILL"
"RTN","IBCSC4E",14,0)
 S DIR("?",1)="Enter the alphanumeric preceding the diagnosis you want added to the bill.",DIR("?",2)=""
"RTN","IBCSC4E",15,0)
 S DIR("?",3)="To enter more than one separate them by a comma or within a movement use a"
"RTN","IBCSC4E",16,0)
 S DIR("?",4)="range separated by a dash.  * indicates the diagnosis is already on the bill."
"RTN","IBCSC4E",17,0)
 S DIR("?")="The print order for each diagnosis will be determined by the order in this list."
"RTN","IBCSC4E",18,0)
 S DIR(0)="FO^^D ITPTF^IBCSC4E" D ^DIR K DIR Q:$D(DIRUT)!(Y="")
"RTN","IBCSC4E",19,0)
 ;
"RTN","IBCSC4E",20,0)
 S X=Y D ITPTF S IBLIST=X,DIR("A",1)="YOU HAVE SELECTED "_X_" TO BE ADDED TO THE BILL",DIR("A")="IS THIS CORRECT",DIR("B")="YES"
"RTN","IBCSC4E",21,0)
 S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST Q
"RTN","IBCSC4E",22,0)
 I 'Y K IBLIST G PTFASK1
"RTN","IBCSC4E",23,0)
 Q
"RTN","IBCSC4E",24,0)
 ;
"RTN","IBCSC4E",25,0)
PTF ;
"RTN","IBCSC4E",26,0)
 Q:'$D(^TMP($J,"IBDX","S"))  N IBX,IBY,IBZ,IBORD,IBNUM K IBPTFDX S IBORD="",IBPTFDX=0
"RTN","IBCSC4E",27,0)
 S IBX="" F  S IBX=$O(^TMP($J,"IBDX","S",IBX)) Q:IBX=""  D
"RTN","IBCSC4E",28,0)
 . S IBZ=+$G(^TMP($J,"IBDX","S",IBX)) Q:'IBZ
"RTN","IBCSC4E",29,0)
 . S IBORD=$E(IBX) Q:IBORD'?1A  S IBNUM=+$E(IBX,2,999) Q:IBNUM'>0
"RTN","IBCSC4E",30,0)
 . I IBNUM>$G(IBPTFDX(IBORD)) S IBPTFDX(IBORD)=IBNUM
"RTN","IBCSC4E",31,0)
 . I '$D(^IBA(362.3,"AIFN"_+$G(IBIFN),+IBZ)) S IBPTFDX=IBPTFDX+1
"RTN","IBCSC4E",32,0)
 Q
"RTN","IBCSC4E",33,0)
 ;
"RTN","IBCSC4E",34,0)
ITPTF ;
"RTN","IBCSC4E",35,0)
 N IBI,IB1,IB2,IB3,IBJ,IBX,IBY,IBZ,IBA
"RTN","IBCSC4E",36,0)
 S IBA="",IBX=X
"RTN","IBCSC4E",37,0)
 F IBI=1:1 S IBY=$P(IBX,",",IBI) Q:IBY=""  D  Q:'$D(X)  S X=IBA
"RTN","IBCSC4E",38,0)
 . I IBY["-" S IBZ=$P(IBY,"-",1),IB2=$P(IBY,"-",2) D  Q:'$D(X)
"RTN","IBCSC4E",39,0)
 .. I $E(IBZ,1)'=$E(IB2,1) K X Q
"RTN","IBCSC4E",40,0)
 .. S IBY="",IB1=$E(IBZ,2,999),IB2=$E(IB2,2,999),IBZ=$E(IBZ,1) I +IB2'>+IB1 K X Q
"RTN","IBCSC4E",41,0)
 .. F IBJ=IB1:1:IB2 S IBY=IBY_IBZ_IBJ_"-" I IBJ>$G(IBPTFDX(IBZ)) Q
"RTN","IBCSC4E",42,0)
 . F IBJ=1:1 S IB1=$P(IBY,"-",IBJ) Q:IB1=""  S IB2=$E(IB1,1),IB3=$E(IB1,2,99) D  Q:'$D(X)
"RTN","IBCSC4E",43,0)
 .. I IB1'?1U1.3N K X Q
"RTN","IBCSC4E",44,0)
 .. I IB2=""!'IB3 K X Q
"RTN","IBCSC4E",45,0)
 .. I '$D(IBPTFDX(IB2)) K X Q
"RTN","IBCSC4E",46,0)
 .. I IB3>+$G(IBPTFDX(IB2)) K X Q
"RTN","IBCSC4E",47,0)
 .. S IBA=IBA_IB2_IB3_","
"RTN","IBCSC4E",48,0)
 Q
"RTN","IBCSC4E",49,0)
 ;
"RTN","IBCSC4E",50,0)
PTFADD(IBIFN,LIST) ;
"RTN","IBCSC4E",51,0)
 Q:'$D(^TMP($J,"IBDX","S"))!($G(LIST)="")!('$G(IBIFN))  N IBX,IBY,IBI,IBCD,IBDX
"RTN","IBCSC4E",52,0)
 F IBI=1:1 S IBCD=$P(LIST,",",IBI) Q:IBCD=""  D
"RTN","IBCSC4E",53,0)
 . S IBDX=+$G(^TMP($J,"IBDX","S",IBCD)) Q:'IBDX
"RTN","IBCSC4E",54,0)
 . I ($$ICD9^IBACSV(+IBDX)'=""),'$D(^IBA(362.3,"AIFN"_IBIFN,+IBDX)) I $$ADD^IBCSC4D(+IBDX,IBIFN) W "."
"RTN","IBCSC4E",55,0)
 Q
"RTN","IBCSC4E",56,0)
 ;
"RTN","IBCSC4E",57,0)
PTFDSP(IBIFN) ; display PTF diagnosis within date range of the bill
"RTN","IBCSC4E",58,0)
 ; Output:  ^TMP($J,"IBDX") as defined by PTFDXDT^IBCSC4F   and
"RTN","IBCSC4E",59,0)
 ;          ^TMP($J,"IBDX","S",x) = DIAGNOSIS w/x=selection identifer for a dx
"RTN","IBCSC4E",60,0)
 N IB0,IBPTF,IBTF,IBU,IBFDT,IBTDT,IBDSCH,IBW,IBC,IBA,IBN,IBCNT,IBMCNT,IBMDT,IBMV,IBDT,IBLN,IBLABEL,IBDXCNT,IBI
"RTN","IBCSC4E",61,0)
 N IBDX,IBID,IBON,IBY,IBMDRG,X,IBDATE
"RTN","IBCSC4E",62,0)
 ;
"RTN","IBCSC4E",63,0)
 K ^TMP($J,"IBDX") S IBW=41
"RTN","IBCSC4E",64,0)
 ;
"RTN","IBCSC4E",65,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; The Event Date of the bill
"RTN","IBCSC4E",66,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBPTF=$P(IB0,U,8),IBTF=$P(IB0,U,6) Q:'$G(IBPTF)
"RTN","IBCSC4E",67,0)
 S IBU=$G(^DGCR(399,+IBIFN,"U")),IBFDT=+IBU,IBTDT=$P(IBU,U,2) Q:$P(IB0,U,5)>2
"RTN","IBCSC4E",68,0)
 ;
"RTN","IBCSC4E",69,0)
 D PTFDXDT^IBCSC4F(IBPTF,IBFDT,IBTDT,IBTF) S IBDSCH=$P(+$P($G(^TMP($J,"IBDX","M")),U,3),".")
"RTN","IBCSC4E",70,0)
 ;
"RTN","IBCSC4E",71,0)
 F IBN="M","D" S (IBCNT,IBMCNT,IBMDT)="" F  S IBMDT=$O(^TMP($J,"IBDX",IBN,IBMDT)) Q:'IBMDT  S IBMCNT=IBMCNT+1 D
"RTN","IBCSC4E",72,0)
 . S IBMV=$G(^TMP($J,"IBDX",IBN,IBMDT)),IBDT=+IBMV,IBMDRG=$P(IBMV,U,4)
"RTN","IBCSC4E",73,0)
 . I IBN="M" S IBC=0,IBLABEL="Move",IBA=$C(64+IBMCNT) I 'IBDT S IBDT="D/C"
"RTN","IBCSC4E",74,0)
 . I IBN="D" S IBC=41,IBLABEL="Discharge",IBA="X" I 'IBDT S IBDT="NOT DISCHARGED"
"RTN","IBCSC4E",75,0)
 . ;
"RTN","IBCSC4E",76,0)
 . S IBLN=IBLABEL_": "_$S(+IBDT:$P($$FMTE^XLFDT(+IBDT,2),"@",1),1:IBDT)
"RTN","IBCSC4E",77,0)
 . S IBLN=IBLN_" "_$E($P($G(^DIC(42.4,+$P(IBMV,U,2),0)),U,1),1,12)
"RTN","IBCSC4E",78,0)
 . S IBLN=IBLN_" "_$J("",(29-$L(IBLN)))_$S(+$P(IBMV,U,3):"<SC>",1:"<NSC>")
"RTN","IBCSC4E",79,0)
 . ;
"RTN","IBCSC4E",80,0)
 . S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW)
"RTN","IBCSC4E",81,0)
 . S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",82,0)
 . ;
"RTN","IBCSC4E",83,0)
 . I '$O(^TMP($J,"IBDX",IBN,IBMDT,"")) S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_"  No DX Codes Entered For "_IBLABEL
"RTN","IBCSC4E",84,0)
 . ;
"RTN","IBCSC4E",85,0)
 . S (IBDXCNT,IBI)="" F  S IBI=$O(^TMP($J,"IBDX",IBN,IBMDT,IBI)) Q:'IBI  D
"RTN","IBCSC4E",86,0)
 .. S IBDX=^TMP($J,"IBDX",IBN,IBMDT,IBI),IBY=$$ICD9^IBACSV(+IBDX,IBDATE)
"RTN","IBCSC4E",87,0)
 .. S IBDXCNT=IBDXCNT+1,IBID=IBA_IBDXCNT,IBON=$S($O(^IBA(362.3,"AIFN"_IBIFN,+IBDX,"")):"*",1:" ")
"RTN","IBCSC4E",88,0)
 .. ;
"RTN","IBCSC4E",89,0)
 .. S IBLN=" "_IBON_IBID_" - "_$P(IBY,U,1)_$J("",(7-$L($P(IBY,U,1))))_$E($P(IBY,U,3),1,23)
"RTN","IBCSC4E",90,0)
 .. S IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",91,0)
 .. S ^TMP($J,"IBDX","S",IBID)=IBDX
"RTN","IBCSC4E",92,0)
 . ;
"RTN","IBCSC4E",93,0)
 . I 'IBMDRG,IBN="M" S IBLN="   *** No DRG for Charges ***",IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",94,0)
 . I IBMDRG S IBLN=$P($$DRG^IBACSV(+IBMDRG,IBDATE),U,1)_" - "_$E($$DRGTD^IBACSV(+IBMDRG,IBDATE),1,30),IBCNT=IBCNT+1,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBC)_IBLN
"RTN","IBCSC4E",95,0)
 ;
"RTN","IBCSC4E",96,0)
 I IBDSCH,IBTDT<IBDSCH S IBCNT=2,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBW)_"Discharge: "_$$FMTE^XLFDT(+$P(IBDSCH,"."),2)_" Not In Bill Range"
"RTN","IBCSC4E",97,0)
 I 'IBDSCH,IBTDT<DT S IBCNT=2,X(IBCNT)=$G(X(IBCNT))_$J("",IBW),X(IBCNT)=$E(X(IBCNT),1,IBW)_"Discharge:  NOT DISCHARGED"
"RTN","IBCSC4E",98,0)
 ;
"RTN","IBCSC4E",99,0)
 W @IOF,"=============================== Diagnosis Screen ==============================="
"RTN","IBCSC4E",100,0)
 S IBI="" F  S IBI=$O(X(IBI)) Q:'IBI  W !,$E(X(IBI),1,80)
"RTN","IBCSC4E",101,0)
 Q
"RTN","IBCSC4E",102,0)
 ;
"RTN","IBCSC4E",103,0)
DELALL(IBIFN) ; ask/delete all diagnosis on a bill, including all CPT associated Diagnosis
"RTN","IBCSC4E",104,0)
 Q:'$O(^IBA(362.3,"AIFN"_+$G(IBIFN),0))
"RTN","IBCSC4E",105,0)
 ;
"RTN","IBCSC4E",106,0)
 N DIR,DIRUT,DUOUT,DTOUT,X,Y,DIK W !
"RTN","IBCSC4E",107,0)
 S DIR("?")="Enter Yes to delete all Diagnosis currently defined for a bill, including any CPT Associated Diagnosis.",DIR("??")="^D DISP1^IBCSC4D("_IBIFN_")"
"RTN","IBCSC4E",108,0)
 S DIR("A")="DELETE ALL DIAGNOSIS ON BILL, INCLUDING CPT ASSOCIATED DIAGNOSIS"
"RTN","IBCSC4E",109,0)
 S DIR(0)="YO",DIR("B")="NO" D ^DIR K DIR Q:Y'=1
"RTN","IBCSC4E",110,0)
 ;
"RTN","IBCSC4E",111,0)
 N IBPROC,IBPROCD,IBXRF,IBDX,IBDXI,DIE,DIC,DA,DR
"RTN","IBCSC4E",112,0)
 S IBPROC=0 F  S IBPROC=$O(^DGCR(399,IBIFN,"CP",IBPROC)) Q:'IBPROC  D
"RTN","IBCSC4E",113,0)
 . S IBPROCD=$G(^DGCR(399,IBIFN,"CP",IBPROC,0)) I "^^^"[$P(IBPROCD,U,11,14) Q
"RTN","IBCSC4E",114,0)
 . S DIE="^DGCR(399,"_IBIFN_",""CP"",",DA=IBPROC,DA(1)=IBIFN,DR="10///@;11///@;12///@;13///@" D ^DIE K DA,DIE,DR
"RTN","IBCSC4E",115,0)
 ;
"RTN","IBCSC4E",116,0)
 S IBXRF="AIFN"_+IBIFN
"RTN","IBCSC4E",117,0)
 S IBDX=0 F  S IBDX=$O(^IBA(362.3,IBXRF,IBDX)) Q:'IBDX  D
"RTN","IBCSC4E",118,0)
 . S IBDXI=0 F  S IBDXI=$O(^IBA(362.3,IBXRF,IBDX,IBDXI)) Q:'IBDXI  D
"RTN","IBCSC4E",119,0)
 .. S DIK="^IBA(362.3,",DA=IBDXI D ^DIK K DIK,DA
"RTN","IBCSC4E",120,0)
 W " .... deleted"
"RTN","IBCSC4E",121,0)
 Q
"RTN","IBCSC5")
0^12^B18367121
"RTN","IBCSC5",1,0)
IBCSC5 ;ALB/MJB - MCCR SCREEN 5 (OPT. EOC) ;27 MAY 88 10:15
"RTN","IBCSC5",2,0)
 ;;2.0;INTEGRATED BILLING;**52,125,51,210,266**;21-MAR-94
"RTN","IBCSC5",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC5",4,0)
 ;
"RTN","IBCSC5",5,0)
 ;MAP TO DGCRSC5
"RTN","IBCSC5",6,0)
 ;
"RTN","IBCSC5",7,0)
EN I $$INPAT^IBCEF(IBIFN) G ^IBCSC4
"RTN","IBCSC5",8,0)
 I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7 I $$BILLCPT^IBCRU4(IBIFN) S DGRVRCAL=1
"RTN","IBCSC5",9,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC5",10,0)
 L ^DGCR(399,IBIFN):1
"RTN","IBCSC5",11,0)
 D ^IBCSCU S IBSR=5,IBSR1="",IBV1="10000000"_$S($$FT^IBCEF(IBIFN)'=2:0,1:1) F I="U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"") S:IBV IBV1="111111111"
"RTN","IBCSC5",12,0)
 D H^IBCSCU
"RTN","IBCSC5",13,0)
 S IBPTF=$P(IB(0),U,8),IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
"RTN","IBCSC5",14,0)
 D EN4^IBCVA1
"RTN","IBCSC5",15,0)
 S Z=1,IBW=1 X IBWW W " Event Date : " S Y=$P(IB(0),U,3) D DT^DIQ
"RTN","IBCSC5",16,0)
 ;S Z=2,IBW=1 X IBWW W " Prin. Diag.: ",$S('$D(^DGCR(399,IBIFN,"C")):IBU,$P(^DGCR(399,IBIFN,"C"),U,10)'="":$P(^DGCR(399,IBIFN,"C"),U,10),1:IBU)
"RTN","IBCSC5",17,0)
 N IBPOARR,IBDATE
"RTN","IBCSC5",18,0)
 D SET^IBCSC4D(IBIFN,"",.IBPOARR)
"RTN","IBCSC5",19,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Event date
"RTN","IBCSC5",20,0)
 S Z=2,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX^IBCSC4(0,IBDATE) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),$P(IB(0),U,19)=2:IBU,1:IBUN)
"RTN","IBCSC5",21,0)
 F I=1:1:4 S Y=$$DX^IBCSC4(+Y,IBDATE) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
"RTN","IBCSC5",22,0)
 I +Y S Y=$$DX^IBCSC4(+Y,IBDATE) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
"RTN","IBCSC5",23,0)
 ;S Z=2,IBW=1 X IBWW W " Prin. Diag.: ",$S($D(^ICD9(+$P(IB("C"),U,14),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),$P(IB(0),U,19)=2:IBU,1:IBUN)
"RTN","IBCSC5",24,0)
 ;F I=15:1:18 I $P(IB("C"),U,I)]"" W !?4,"Other Diag.: ",$S($D(^ICD9($P(IB("C"),U,I),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),1:IBU)
"RTN","IBCSC5",25,0)
OP S Z=3,IBW=1 X IBWW W " OP Visits  : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?17 W Y_", "
"RTN","IBCSC5",26,0)
 S:$D(^DGCR(399,"OP")) DGOPV=1 I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
"RTN","IBCSC5",27,0)
 S Z=4,IBW=1 X IBWW W " Cod. Method: ",$S($P(IB(0),U,9)="":IBUN,$P(IB(0),U,9)=9:"ICD-9-CM",$P(IB(0),U,9)=4:"CPT-4",1:"HCPCS")
"RTN","IBCSC5",28,0)
 D WRT:$D(IBPROC)
"RTN","IBCSC5",29,0)
 ;I $D(IBCPT),$P(IB(0),U,9)=4 F I=1:1:3 I $D(IBCPT(I)) W !?4,"CPT Code   : ",$P(^ICPT(IBCPT(I),0),U,2)," - ",$P(^(0),U),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+10) D DT^DIQ
"RTN","IBCSC5",30,0)
 ;I $D(IBICD),$P(IB(0),U,9)=9 F I=4:1:6 I $D(IBICD(I)) W !?4,"ICD Code   : ",$E($P(^ICD0(IBICD(I),0),U,4),1,20)," - ",$P(^(0),"^"),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+7) D DT^DIQ G:'$D(IBICD(I+1)) OCC
"RTN","IBCSC5",31,0)
 ;I $D(IBHC),$P(IB(0),U,9)=5 F I=7:1:9 I $D(IBHC(I)) W !?4,"HCFA Code  : ",$P(^ICPT(IBHC(I),0),U,2)," - ",IBHCN(I),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+4) D DT^DIQ G:'$D(IBHC(I+1)) OCC
"RTN","IBCSC5",32,0)
 S Z=5,IBW=1 X IBWW W " Rx. Refills: " S Y=$$RX I 'Y W IBUN
"RTN","IBCSC5",33,0)
OCC G OCC^IBCSC4
"RTN","IBCSC5",34,0)
 W !?4,"Opt. Code  : ",IBUN
"RTN","IBCSC5",35,0)
 G OCC^IBCSC4
"RTN","IBCSC5",36,0)
 Q
"RTN","IBCSC5",37,0)
MORE W !?4,*7,"***There are more procedures associated with this bill.***" S I=0
"RTN","IBCSC5",38,0)
 Q
"RTN","IBCSC5",39,0)
WRT ;  -write out procedures codes on screen
"RTN","IBCSC5",40,0)
 N IBDATE
"RTN","IBCSC5",41,0)
 S J=0 F I=1:1 S J=$O(IBPROC(J)) Q:'J  D  I I>6 D MORE Q
"RTN","IBCSC5",42,0)
 .S IBDATE=$P(IBPROC(J),U,2) I 'IBDATE S IBDATE=$$BDATE^IBACSV($G(IBIFN))
"RTN","IBCSC5",43,0)
 .S X=$$PRCD^IBCEF1($P(IBPROC(J),U),1,IBDATE)
"RTN","IBCSC5",44,0)
 .I IBPROC(J)["ICD" W !?4,"ICD Code   : ",$E($P(X,U,3),1,28)_" - "_$P(X,U,2)
"RTN","IBCSC5",45,0)
 .I IBPROC(J)["CPT" W !?4,"CPT Code   : " D
"RTN","IBCSC5",46,0)
 .. N Z
"RTN","IBCSC5",47,0)
 .. S Z=$P(X,"^",3)_" "_$P(X,"^",2)_$S($P(IBPROC(J),U,15):"-"_$$MODLST^IBEFUNC2($P(IBPROC(J),U,15)),1:"")
"RTN","IBCSC5",48,0)
 .. I $L(Z)>40 S Z=" "_$P(X,"^",2)_$S($P(IBPROC(J),U,15):"-"_$$MODLST^IBEFUNC2($P(IBPROC(J),U,15)),1:""),Z=$E($P(X,U,3),1,40-$L(Z))_Z
"RTN","IBCSC5",49,0)
 .. W Z
"RTN","IBCSC5",50,0)
 .I $P(IB(0),U,19)=2 S Y=+$P(IBPROC(J),U,11) S:+Y Y=+$G(^IBA(362.3,+Y,0)) W ?58,$P($$ICD9^IBACSV(Y,IBDATE),U) S Y=$P(IBPROC(J),U,2) D D^DIQ W ?67,Y Q
"RTN","IBCSC5",51,0)
 .S Y=$P(IBPROC(J),"^",2) D D^DIQ W ?67,Y
"RTN","IBCSC5",52,0)
 Q
"RTN","IBCSC5",53,0)
 ;
"RTN","IBCSC5",54,0)
MOD(IBM,PUNC) ; Returns modifier list from comma delimited ien's in string IBM
"RTN","IBCSC5",55,0)
 ; PUNC = Punctuation to use as first character of output
"RTN","IBCSC5",56,0)
 N IBMOD,Q
"RTN","IBCSC5",57,0)
 S IBMOD=""
"RTN","IBCSC5",58,0)
 F Q=1:1:$L(IBM,",") I $P(IBM,",",Q)'="" S IBMOD=IBMOD_$S(IBMOD'="":",",1:"")_$P($$MOD^ICPTMOD($P(IBM,",",Q),"I"),U,2)
"RTN","IBCSC5",59,0)
 I IBMOD'="" S IBMOD=$G(PUNC)_IBMOD
"RTN","IBCSC5",60,0)
 Q IBMOD
"RTN","IBCSC5",61,0)
 ;
"RTN","IBCSC5",62,0)
PD() ;prints prosthetic device in external form, returns 0 if there are none
"RTN","IBCSC5",63,0)
 N IBX,IBY,IBZ,IBN,X S X=0 S IBX=0 F  S IBX=$O(^IBA(362.5,"AIFN"_IBIFN,IBX)) Q:'IBX  D  Q:X>5
"RTN","IBCSC5",64,0)
 . S IBY=0 F  S IBY=$O(^IBA(362.5,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.5,IBY,0)) I IBZ'="" D  Q:X>5
"RTN","IBCSC5",65,0)
 .. S X=X+1 I X>5 W !,?17,"*** There are more Pros. Items associated with this bill.***" Q
"RTN","IBCSC5",66,0)
 .. ;S IBN=$G(^RMPR(661,+$P(IBZ,U,3),0)) W:X'=1 ! W ?17,$E($$PIN^IBCSC5B(+IBN),1,35)," - ",$P(IBN,U,1),?65,$$FMTE^XLFDT(+IBZ)
"RTN","IBCSC5",67,0)
 .. S IBN=$$PIN^IBCSC5B(+$P(IBZ,U,3)) W:X'=1 ! W ?17,$E($P(IBN,U,2),1,35)," - ",$P(IBN,U,1),?65,$$FMTE^XLFDT(+IBZ)
"RTN","IBCSC5",68,0)
 Q X
"RTN","IBCSC5",69,0)
 ;
"RTN","IBCSC5",70,0)
RX() ;prints RX REFILLS in external form, returns 0 if there are none
"RTN","IBCSC5",71,0)
 N IBX,IBY,IBZ,IBN,X S X=0 S IBX="" F  S IBX=$O(^IBA(362.4,"AIFN"_IBIFN,IBX)) Q:IBX=""  D  Q:X>5
"RTN","IBCSC5",72,0)
 . S IBY=0 F  S IBY=$O(^IBA(362.4,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.4,IBY,0)) I IBZ'="" D  Q:X>5
"RTN","IBCSC5",73,0)
 .. S X=X+1 I X>5 W !,?17,"*** There are more Rx. Refills associated with this bill.***" Q
"RTN","IBCSC5",74,0)
 .. S IBN=$G(^PSDRUG(+$P(IBZ,U,4),0)) W:X'=1 ! W ?17,$P(IBN,U,1),?65,$$FMTE^XLFDT(+$P(IBZ,U,3))
"RTN","IBCSC5",75,0)
 Q X
"RTN","IBCSC5",76,0)
 ;
"RTN","IBCSC5",77,0)
 ;IBCSC5
"RTN","IBCSCH1")
0^14^B21600403
"RTN","IBCSCH1",1,0)
IBCSCH1 ;ALB/MRL - BILLING HELPS (CONTINUED) ; 01 JUN 88 12:00
"RTN","IBCSCH1",2,0)
 ;;2.0;INTEGRATED BILLING;**106,125,51,245,266**;21-MAR-94
"RTN","IBCSCH1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSCH1",4,0)
 ;
"RTN","IBCSCH1",5,0)
 ;MAP TO DGCRSCH1
"RTN","IBCSCH1",6,0)
 ;
"RTN","IBCSCH1",7,0)
1 W !!,"DO YOU WISH TO ADD/EDIT INSURANCE COMPANY DATA FOR THIS PATIENT" S %=2 D YN^DICN S IBADI=$S(%=1!(%=-1):%,1:0)
"RTN","IBCSCH1",8,0)
 I '% W !!?4,"YES - And I'll prompt you so that you may add insurance data to the PATIENT",!?9,"file for this patient.",!?4,"NO  - To bypass this editing of the PATIENT file." G 1
"RTN","IBCSCH1",9,0)
 Q
"RTN","IBCSCH1",10,0)
 ;
"RTN","IBCSCH1",11,0)
2 W !!,"If you updated insurance information for any policy which is already specified",!,"as either a PRIMARY, SECONDARY or TERIARY for this billing episode, you will"
"RTN","IBCSCH1",12,0)
 W !,"need to press the <RETURN> key through the following prompts in order to insure",!,"that these new values are properly stored.  If you fail to do so, i.e.,"
"RTN","IBCSCH1",13,0)
 W !,"enter an up-arrow, the new values will not be stored as part of this billing",!,"record." Q
"RTN","IBCSCH1",14,0)
3 I '$D(IBIFN),$D(DA) S IBIFN=DA
"RTN","IBCSCH1",15,0)
 W !,"If a procedure is linked as a prescription to a rev code, it cannot be deleted",!
"RTN","IBCSCH1",16,0)
 W:$P(^DGCR(399,IBIFN,0),"^",5)<3 !!?4," - Enter the alphanumeric designation of your choice from",!?7,"the display (e.g. 'A1') to input one of the codes shown",!?7,"above into this billing record."
"RTN","IBCSCH1",17,0)
 I $P(^IBE(350.9,1,1),U,15)'=1 G 4
"RTN","IBCSCH1",18,0)
 S DGCODMET=$P(^DGCR(399,IBIFN,0),"^",9),DGCODMET=$S(DGCODMET=9:"ICD",DGCODMET="":"",1:"CPT")
"RTN","IBCSCH1",19,0)
 W !!?4," - Enter the name or code number of an ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODE",!?7,"not displayed above to input a ",$S($D(IBPY):"DIAGNOSIS",1:"PROCEDURE")," code"
"RTN","IBCSCH1",20,0)
 I $P(^DGCR(399,IBIFN,0),"^",5)>2 W "." G 4
"RTN","IBCSCH1",21,0)
 W " not found",!?7,"in the PTF record into this billing record, or '??' for ",!?7,"a list of all ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODES."
"RTN","IBCSCH1",22,0)
4 W !!?4," - Enter <RETURN> to accept the default ",$S($D(IBPY):"DIAGNOSIS ",1:"PROCEDURE "),"code, or",!?7,"'^' to abort.",!!
"RTN","IBCSCH1",23,0)
 K DGCODMET
"RTN","IBCSCH1",24,0)
 Q
"RTN","IBCSCH1",25,0)
 ;
"RTN","IBCSCH1",26,0)
DISPPRC(IBIFN) ; display procedures
"RTN","IBCSCH1",27,0)
 N IBHDR,IBHDR1,IBD,IBN,IBI,IBX,IBQ,IBLN,IBPR,IBPRD,IBDT,IBDV,IBCL,IBPV,IBLC,PRCARR,IBMOD,IBSUS,IBDATE
"RTN","IBCSCH1",28,0)
 S IBQ=0
"RTN","IBCSCH1",29,0)
 ;
"RTN","IBCSCH1",30,0)
 I '$O(^DGCR(399,+$G(IBIFN),"CP",0)) W !!?5,"No Codes Entered!",! D PAUSE^VALM1 Q
"RTN","IBCSCH1",31,0)
 ;
"RTN","IBCSCH1",32,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN)
"RTN","IBCSCH1",33,0)
 S IBHDR="W @IOF,!,""Procedures Assigned to this Bill"",!,""Code"",?10,""Procedure"",?35,""PO"",?38,""Date"",?48,""Div"",?55,""Clinic"",?68,""Provider"" X IBHDR1"
"RTN","IBCSCH1",34,0)
 S IBHDR1="W !,""--------------------------------------------------------------------------------"" S IBLC=2"
"RTN","IBCSCH1",35,0)
 ;
"RTN","IBCSCH1",36,0)
 X IBHDR D PRCDT^IBCU71(+IBIFN,.PRCARR)
"RTN","IBCSCH1",37,0)
 S IBD="" F  S IBD=$O(PRCARR(IBD)) Q:IBD=""  D  Q:IBQ
"RTN","IBCSCH1",38,0)
 . S IBN="" F  S IBN=$O(PRCARR(IBD,IBN)) Q:IBN=""  D  Q:IBQ
"RTN","IBCSCH1",39,0)
 .. S IBI=0 F  S IBI=$O(PRCARR(IBD,IBN,IBI)) Q:'IBI  D  I IBLC>19 S IBQ=$$PAUSE(IBLC) Q:IBQ  X IBHDR
"RTN","IBCSCH1",40,0)
 ... S IBLN=$G(PRCARR(IBD,IBN,IBI)),(IBPR,IBPRD,IBDT,IBDV,IBCL,IBPV,IBSUS)="",IBLC=IBLC+1
"RTN","IBCSCH1",41,0)
 ... S IBX=$$PRCNM($P(IBLN,U,1),IBD),IBPR=$P(IBX,U,1),IBPRD=$P(IBX,U,2)
"RTN","IBCSCH1",42,0)
 ... S IBDT=$P(IBLN,U,2),IBDT=$E(IBDT,4,5)_"/"_$E(IBDT,6,7)_"/"_$E(IBDT,2,3)
"RTN","IBCSCH1",43,0)
 ... I +$P(IBLN,U,6) S IBDV=$P($G(^DG(40.8,+$P(IBLN,U,6),0)),U,2)
"RTN","IBCSCH1",44,0)
 ... I +$P(IBLN,U,7) S IBCL=$P($G(^SC(+$P(IBLN,U,7),0)),U,1)
"RTN","IBCSCH1",45,0)
 ... I +$P(IBLN,U,18) S IBPV=$P($G(^VA(200,+$P(IBLN,U,18),0)),U,1)
"RTN","IBCSCH1",46,0)
 ... I +$P(IBLN,U,16) S IBSUS=$P(IBLN,U,16)_"mn"
"RTN","IBCSCH1",47,0)
 ... I +$P(IBLN,U,21) S IBSUS=$P(IBLN,U,21)_"ml"
"RTN","IBCSCH1",48,0)
 ... I +$P(IBLN,U,22) S IBSUS=$P(IBLN,U,22)_"hr"
"RTN","IBCSCH1",49,0)
 ... ;
"RTN","IBCSCH1",50,0)
 ... W !,$E(IBPR,1,6),?7,$E(IBPRD,1,20),?29,IBSUS,?35,$P(IBLN,U,4),?38,IBDT,?48,IBDV,?55,$E(IBCL,1,11),?68,$E(IBPV,1,12)
"RTN","IBCSCH1",51,0)
 ... S IBX=$$MODLST^IBEFUNC2($$GETMOD^IBEFUNC(IBIFN,IBI),1,.IBX,IBD)
"RTN","IBCSCH1",52,0)
 ... I IBX'="" F IBMOD=1:1:$L(IBX,",") W !,?10,$P(IBX,",",IBMOD),?15,$P($G(IBX(1)),",",IBMOD) S IBLC=IBLC+1
"RTN","IBCSCH1",53,0)
 I 'IBI,'IBQ S IBQ=$$PAUSE(IBLC)
"RTN","IBCSCH1",54,0)
 Q
"RTN","IBCSCH1",55,0)
 ;
"RTN","IBCSCH1",56,0)
PRCNM(PRC,EFDT) ; return procedure name, input first piece of CP node -
"RTN","IBCSCH1",57,0)
 ;                                        (in variable pointer format)
"RTN","IBCSCH1",58,0)
 ; output: code ^ name
"RTN","IBCSCH1",59,0)
 N IBNM
"RTN","IBCSCH1",60,0)
 S IBNM=$$PRCD^IBCEF1($G(PRC),1,$G(EFDT))
"RTN","IBCSCH1",61,0)
 I $TR(IBNM,U)="" D
"RTN","IBCSCH1",62,0)
 . S IBNM="NO ENTRY FOUND^"
"RTN","IBCSCH1",63,0)
 E  D
"RTN","IBCSCH1",64,0)
 . S IBNM=$P(IBNM,U,2,3)
"RTN","IBCSCH1",65,0)
 Q IBNM
"RTN","IBCSCH1",66,0)
 ;
"RTN","IBCSCH1",67,0)
PAUSE(CNT) ;
"RTN","IBCSCH1",68,0)
 N IBI F IBI=CNT:1:20 W !
"RTN","IBCSCH1",69,0)
 N DIR,DUOUT,DTOUT,DIRUT,IBX,X,Y S IBX=0,DIR(0)="E" D ^DIR K DIR I $D(DIRUT) S IBX=1
"RTN","IBCSCH1",70,0)
 Q IBX
"RTN","IBCSCP")
0^18^B10607644
"RTN","IBCSCP",1,0)
IBCSCP ;ALB/MRL - BILLING SCREEN PROCESSOR ;01 JUN 88 12:00
"RTN","IBCSCP",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,161,266**;21-MAR-94
"RTN","IBCSCP",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSCP",4,0)
 ;
"RTN","IBCSCP",5,0)
 ;MAP TO DGCRSCP
"RTN","IBCSCP",6,0)
 ;
"RTN","IBCSCP",7,0)
 D Q1 W !
"RTN","IBCSCP",8,0)
 S IBCSCPP=$S($L(IBV1)>1:"1-"_$L(IBV1),1:1)
"RTN","IBCSCP",9,0)
 F I=$Y:1:20 W !
"RTN","IBCSCP",10,0)
 S IBPOPOUT=0
"RTN","IBCSCP",11,0)
 S (ICDVDT,ICPTVDT)=$$BDATE^IBACSV(IBIFN) ;ICD/CPT version date
"RTN","IBCSCP",12,0)
 W "<RET> to ",$S(+IBSR<9:"CONTINUE",1:"QUIT") W:$S(+IBSR=9&(IBV1'["0"):0,1:'IBV) ", ",IBCSCPP," to EDIT," W " '^N' for screen N, or '^' to QUIT: " R IBSCNN:DTIME S IBCITOUT='$T G Q:'$T I IBSCNN="" S X1=2 G NOMO
"RTN","IBCSCP",13,0)
 G AN:IBSCNN?1"^"1N.N
"RTN","IBCSCP",14,0)
 I IBSCNN?1"^".E S IBPOPOUT=1 G Q
"RTN","IBCSCP",15,0)
 I IBSCNN'?1N.E D ^IBCSCH S X=IBSR,X1=2 G NOMO2
"RTN","IBCSCP",16,0)
 I IBSCNN?1N1"-"1N S IBDR20=IBSCNN,IBSCNN="" F I=+IBDR20:1:$P(IBDR20,"-",2) S IBSCNN=IBSCNN_I_","
"RTN","IBCSCP",17,0)
 S IBDR20="" F J=1:1 S I=$P(IBSCNN,",",J) Q:I=""!($L(I)>3)  I I<10 S:I'["-"&(IBDR20'[I_",") IBDR20=IBDR20_I_"," I I["-" S I1=$P(I,"-",1),I2=$P(I,"-",2) F I3=I1:1:I2 S IBDR20=IBDR20_I3_"," I I3>10 Q
"RTN","IBCSCP",18,0)
 S DGDR1="" F J=1:1 S I=$P(IBDR20,",",J) Q:I=""  I '$E(IBV1,I) S DGDR1=DGDR1_(I+(IBSR*10))_","
"RTN","IBCSCP",19,0)
 I DGDR1']"" D ^IBCSCH S X=IBSR,X1=2 G NOMO2
"RTN","IBCSCP",20,0)
 S IBDR20=DGDR1 D ^IBCSCE S X=IBSR,X1=2 G NOMO2
"RTN","IBCSCP",21,0)
Q K IBSR,IBVV,VADM,IBVI,IBVO,ICDVDT,ICPTVDT
"RTN","IBCSCP",22,0)
 ;
"RTN","IBCSCP",23,0)
 ; If Ingenix ClaimsManager found some errors and the user is trying
"RTN","IBCSCP",24,0)
 ; to exit from these screens, then capture the user's comments.
"RTN","IBCSCP",25,0)
 ; Exit by time-out or by "^" pop out.
"RTN","IBCSCP",26,0)
 ; Here, it's important to preserve the value of $T since it is
"RTN","IBCSCP",27,0)
 ; being looked at by IBCB.
"RTN","IBCSCP",28,0)
 ;
"RTN","IBCSCP",29,0)
 S IBCIT("SAVE THE VALUE OF $T")=$T       ; save $T
"RTN","IBCSCP",30,0)
 I $$CM^IBCIUT1(IBIFN),$P($G(^IBA(351.9,IBIFN,0)),U,2)=4,($G(IBPOPOUT)!$G(IBCITOUT)) D COMMENT^IBCIUT7(IBIFN,1)
"RTN","IBCSCP",31,0)
 I IBCIT("SAVE THE VALUE OF $T")          ; restore $T
"RTN","IBCSCP",32,0)
 ;
"RTN","IBCSCP",33,0)
Q1 K %DT,C,DGA,DGA1,DGA2,DGAD,DGCC,IBSCNN,IBCSCPP,IBDR20,DGDR1,DGST,DGAAC,DGRCD,IBCPTX,IBCITOUT,IBCIT
"RTN","IBCSCP",34,0)
 K IBA,IBCPT,IBREVC,IBYN,IBZZ,IBABRT,IB,IBDD,IBIDS,IBIR,IBIRN,IBISEX,IBIUTL,IBU,IBUN,IBW,IBWW,DGPT,IBICD,IBHC,IBCC,IBDI,IBDIN,IBDPT,IBUCH
"RTN","IBCSCP",35,0)
 K DIC,DIWF,DIWL,I,I1,I2,I3,J,X,X1,X2,X3,Y,Z,Z1,Z2
"RTN","IBCSCP",36,0)
 Q
"RTN","IBCSCP",37,0)
NOMO S I=IBSR,J=1 I +IBSR=9 S X=IBSR G NOMO2
"RTN","IBCSCP",38,0)
NOMO1 S I=I+1,J=+$E(IBVV,I),X=I S:J&(+X=9) IBSR=X G NOMO2:+X=9 I J G NOMO1
"RTN","IBCSCP",39,0)
NOMO2 I +IBSR=9&(IBSCNN="") S X1=3,IBSR1=""
"RTN","IBCSCP",40,0)
 S:+IBSR=8&(IBSCNN="") IBSR1="" S X=$P($T(@(IBSR1_X)),";;",X1) G @X
"RTN","IBCSCP",41,0)
 Q
"RTN","IBCSCP",42,0)
 ;
"RTN","IBCSCP",43,0)
AN S X=+$E(IBSCNN,2,99),X1=$P($T(@X),";;",2) I X1]"",'$E(IBVV,X) S IBSR1="",X1=2 G NOMO2
"RTN","IBCSCP",44,0)
 S Z="INVALID SCREEN NUMBER...VALID SCREENS ARE " F I=1:1:9 I '$E(IBVV,I) S Z=Z_I_$S(I<9:",",1:".")
"RTN","IBCSCP",45,0)
 W !,*7 D W H 1 S X=IBSR,X1=2 G NOMO2
"RTN","IBCSCP",46,0)
W ;I IOST="C-QUME",$L(IBVI)'=2 W Z
"RTN","IBCSCP",47,0)
 W IBVI,Z,IBVO
"RTN","IBCSCP",48,0)
 Q
"RTN","IBCSCP",49,0)
1 ;;^IBCSC1;;^IBCSC2
"RTN","IBCSCP",50,0)
2 ;;^IBCSC2;;^IBCSC3
"RTN","IBCSCP",51,0)
3 ;;^IBCSC3;;^IBCSC4
"RTN","IBCSCP",52,0)
4 ;;^IBCSC4;;^IBCSC5
"RTN","IBCSCP",53,0)
5 ;;^IBCSC5;;^IBCSC6
"RTN","IBCSCP",54,0)
6 ;;^IBCSC6;;^IBCSC7
"RTN","IBCSCP",55,0)
7 ;;^IBCSC7;;^IBCSC8
"RTN","IBCSCP",56,0)
8 ;;^IBCSC8;;^IBCSC9
"RTN","IBCSCP",57,0)
9 ;;^IBCSC9;;Q^IBCSCP
"RTN","IBCSCP",58,0)
28 ;;^IBCSC82;;^IBCSC9
"RTN","IBCSCP",59,0)
H8 ;;^IBCSC8H;;^IBCSC9
"RTN","IBCSCP",60,0)
PAR ;;^IBCPAR;;^IBCPAR
"RTN","IBCSCP",61,0)
 ;IBCSCP
"RTN","IBCU1")
0^13^B24731900
"RTN","IBCU1",1,0)
IBCU1 ;ALB/MRL - BILLING UTILITY ROUTINE (CONTINUED) ;01 JUN 88 12:00
"RTN","IBCU1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,106,138,51,182,210,266**;21-MAR-94
"RTN","IBCU1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU1",4,0)
 ;
"RTN","IBCU1",5,0)
 ;MAP TO DGCRU1
"RTN","IBCU1",6,0)
 ;
"RTN","IBCU1",7,0)
 ;procedure doesn't appear to be used (6/4/93), if it is used, what for??
"RTN","IBCU1",8,0)
 ;where would multiple provider numbers comde from?  ARH
"RTN","IBCU1",9,0)
 ;BCH    ;Blue Cross/Shield Help
"RTN","IBCU1",10,0)
 W ! S IB01=$P($G(^IBE(350.9,1,1)),"^",6)
"RTN","IBCU1",11,0)
 I IB01]"" W "CHOOSE FROM",!!?4,"1 - ",$P(IB01,"^",6) F IB00=2,3 I $P(IB01,"^",$S(IB00=2:14,1:15))]"" W !?4,IB00," - ",$P(IB01,"^",$S(IB00=2:14,1:15))
"RTN","IBCU1",12,0)
 W:IB01']"" "NO BLUE CROSS/SHIELD PROVIDER NUMBERS IDENTIFIED TO SELECT FROM!" W ! W:IB01]"" !,"OR " W "ENTER BLUE CROSS/SHIELD PROVIDER # (BETWEEN 3-13 CHARACTERS)",! K IB00,IB01 Q
"RTN","IBCU1",13,0)
 ;
"RTN","IBCU1",14,0)
RCD ;Revenue Code Display
"RTN","IBCU1",15,0)
 Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCU1",16,0)
 W @IOF,!,"Revenue Code Listing",?34,"Units",?45,"Charge" W:$$FT^IBCEF(IBIFN)=3 ?56,"Non-Cov"
"RTN","IBCU1",17,0)
 S DGIFN=0 F IBI=0:0 S DGIFN=$O(^DGCR(399,IBIFN,"RC",DGIFN)) Q:'DGIFN  I $D(^DGCR(399,IBIFN,"RC",DGIFN,0)) S Z=^(0) D DISRC
"RTN","IBCU1",18,0)
 W !
"RTN","IBCU1",19,0)
 I $D(DIC(0)) S DIC(0)=DIC(0)_"N"
"RTN","IBCU1",20,0)
 Q
"RTN","IBCU1",21,0)
DISRC N Z0 W !?1,DGIFN,?4,$P(^DGCR(399.2,+Z,0),"^"),"-",$E($P(^DGCR(399.2,+Z,0),"^",2),1,19)
"RTN","IBCU1",22,0)
 I +$P(Z,U,6) W ?28,$P($$CPT^ICPTCOD(+$P(Z,U,6)),U,2)
"RTN","IBCU1",23,0)
 W ?36,$P(Z,"^",3),?40 S X=$P(Z,"^",2),X2="2$" D COMMA^%DTC W X
"RTN","IBCU1",24,0)
 I $$FT^IBCEF(IBIFN)=3,$P(Z,U,9)'="" S X=$P(Z,U,9),X2="2$" D COMMA^%DTC W ?51,X
"RTN","IBCU1",25,0)
 I $D(^DGCR(399.1,+$P(Z,"^",5),0)) W ?64,$E($P(^(0),"^"),1,15)
"RTN","IBCU1",26,0)
 I $S($P(Z,U,15):1,1:$P(Z,U,10)=3) D
"RTN","IBCU1",27,0)
 . W !,?5,"(Rx: ",$S($P(Z,U,11):$P($G(^IBA(362.4,$P(Z,U,11),0)),U),1:"Link Missing"),"  Procedure "_$S($P(Z,U,15):"#"_$P(Z,U,15)_" "_$$CPTNM^IBCRBH1(IBIFN,4,$P(Z,U,15)),1:"Link Missing"),")"
"RTN","IBCU1",28,0)
 Q
"RTN","IBCU1",29,0)
 ;
"RTN","IBCU1",30,0)
RVCPRC(IBIFN,IBD0) ; returns 1 if CHAMPVA rate type + 2 if HCFA 1500, 0 otherwise
"RTN","IBCU1",31,0)
 ; IBD0 - zero node of bill if available, not required
"RTN","IBCU1",32,0)
 N X S X=0
"RTN","IBCU1",33,0)
 I $G(IBD0)="" S IBD0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU1",34,0)
 I $P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,1)="CHAMPVA" S X=X+1
"RTN","IBCU1",35,0)
 I $P(IBD0,U,19)=2 S X=X+2
"RTN","IBCU1",36,0)
 Q X
"RTN","IBCU1",37,0)
 ;
"RTN","IBCU1",38,0)
ORDNXT(IFN) ;CALLED BY TRIGGER ON (362.3,.02) THAT SETS DX PRINT ORDER (362.3,.03),
"RTN","IBCU1",39,0)
 ;returns the highest print order used on the bill plus 3, returns 3 if no existing print order
"RTN","IBCU1",40,0)
 ;used for the default print order so that dx's can be printed in order of entry without any input by the user,
"RTN","IBCU1",41,0)
 ;3 is added to allow spaces for additions, changes, moves
"RTN","IBCU1",42,0)
 N X,Y S X="" I $D(^DGCR(399,+$G(IFN),0)) S X=3,Y=0 F  S Y=$O(^IBA(362.3,"AO",+IFN,Y)) Q:'Y  S X=Y+3
"RTN","IBCU1",43,0)
 Q X
"RTN","IBCU1",44,0)
 ;
"RTN","IBCU1",45,0)
ORDDUP(ORD,DIFN) ;returns true if print order ORD is already defined for a bill (not same entry)
"RTN","IBCU1",46,0)
 N IBX,IBY S IBY=0
"RTN","IBCU1",47,0)
 I +$G(ORD) S IBX=$G(^IBA(362.3,+$G(DIFN),0)) I +IBX,+$P(IBX,U,3)'=ORD,$D(^IBA(362.3,"AO",+$P(IBX,U,2),+ORD)) S IBY=1
"RTN","IBCU1",48,0)
 Q IBY
"RTN","IBCU1",49,0)
 ;
"RTN","IBCU1",50,0)
DXDUP(DX,DIFN,IFN) ;returns true if DX is already defined for a bill (not same entry)
"RTN","IBCU1",51,0)
 ;either DIFN or IFN can be passed, both are not needed, DIFN is needed during edit so can reenter the same dx
"RTN","IBCU1",52,0)
 N IBX,IBY S IBY=0 I +$G(DX),'$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",53,0)
 I +$G(DX),$D(^IBA(362.3,"AIFN"_+IFN,+DX)),$O(^IBA(362.3,"AIFN"_+IFN,+DX,0))'=+$G(DIFN) S IBY=1
"RTN","IBCU1",54,0)
 Q IBY
"RTN","IBCU1",55,0)
 ;
"RTN","IBCU1",56,0)
DXBSTAT(DIFN,IFN) ;returns a diagnosis' bill status (either DIFN or IFN can be passed, both are not needed)
"RTN","IBCU1",57,0)
 N IBX,IBY I '$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",58,0)
 S IBY=+$P($G(^DGCR(399,+IFN,0)),U,13)
"RTN","IBCU1",59,0)
 Q IBY
"RTN","IBCU1",60,0)
 ;
"RTN","IBCU1",61,0)
RXSTAT(DRUG,PIFN,FILLDT) ; returns status/definition of rx
"RTN","IBCU1",62,0)
 ; returns: ORIGINAL ^ RELEASED/RETURNED TO STOCK ^ DRUG DEA
"RTN","IBCU1",63,0)
 N IBX,IBY,IBZ,IBLN S IBLN="",DRUG=+$G(DRUG),PIFN=+$G(PIFN),FILLDT=+$G(FILLDT)
"RTN","IBCU1",64,0)
 ;
"RTN","IBCU1",65,0)
 S IBX=$G(^PSRX(PIFN,2)),IBZ="" I IBX'="",$P(IBX,U,2)=$G(FILLDT) D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",66,0)
 . S IBLN="ORG"
"RTN","IBCU1",67,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",68,0)
 . I '$P(IBX,U,13) S IBZ="NR"
"RTN","IBCU1",69,0)
 . I +$P(IBX,U,15) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",70,0)
 ;
"RTN","IBCU1",71,0)
 I IBLN="" S IBX=$O(^PSRX(PIFN,1,"B",FILLDT,0)),IBX=$G(^PSRX(PIFN,1,+IBX,0)),IBZ="" I IBX'="" D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",72,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",73,0)
 . I '$P(IBX,U,18) S IBZ="NR"
"RTN","IBCU1",74,0)
 . I +$P(IBX,U,16) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",75,0)
 ;
"RTN","IBCU1",76,0)
 S IBX=$G(^PSDRUG(DRUG,0)) I IBX'="" S IBY=$P(IBX,U,3),IBZ="" D  I IBZ'="" S $P(IBLN,U,3)=IBZ
"RTN","IBCU1",77,0)
 . I IBY["9" S IBZ="OTC"
"RTN","IBCU1",78,0)
 . I IBY["I" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"INV"
"RTN","IBCU1",79,0)
 . I IBY["S" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"SUP"
"RTN","IBCU1",80,0)
 Q IBLN
"RTN","IBCU1",81,0)
 ;
"RTN","IBCU1",82,0)
PRVLIC(NPIFN,IBDT,ARR,STIFN) ; returns the Provider License data from the New Person file active on a date
"RTN","IBCU1",83,0)
 ; Input:   NPIFN = pointer to file 200,              IBDT = date to check (if none passed then all returned)
"RTN","IBCU1",84,0)
 ;          ARR = array pass by reference (optional), STIFN = state to return as value of function (optional)
"RTN","IBCU1",85,0)
 ; Output:  ARR(X) = license state (ifn) ^ license ^ expiration date (200,541)
"RTN","IBCU1",86,0)
 ;          return value = license data of state requested or if no state passed in then count found
"RTN","IBCU1",87,0)
 N IBX,IBY,IBLN,IBCNT S IBX=0,IBCNT=0 K ARR
"RTN","IBCU1",88,0)
 I +$G(NPIFN) S IBY=0 F  S IBY=$O(^VA(200,NPIFN,"PS1",IBY)) Q:'IBY  D
"RTN","IBCU1",89,0)
 . S IBLN=$G(^VA(200,NPIFN,"PS1",IBY,0))
"RTN","IBCU1",90,0)
 . I +$G(IBDT),+$P(IBLN,U,3),$P(IBLN,U,3)<IBDT Q
"RTN","IBCU1",91,0)
 . I +$G(STIFN),+STIFN=+IBLN S IBX=IBLN
"RTN","IBCU1",92,0)
 . S IBCNT=IBCNT+1,ARR(IBCNT)=IBLN
"RTN","IBCU1",93,0)
 S ARR=IBCNT I '$G(STIFN) S IBX=IBCNT
"RTN","IBCU1",94,0)
 Q IBX
"RTN","IBCU1",95,0)
 ;
"RTN","IBCU1",96,0)
DELPR(IB,IBX) ; Deletes the corresponding RX proc when the RX pointer is
"RTN","IBCU1",97,0)
 ; deleted
"RTN","IBCU1",98,0)
 ; IB = the ien of the bill in file 399
"RTN","IBCU1",99,0)
 ; IBX = the ien of the entry in the procedure multiple to be deleted
"RTN","IBCU1",100,0)
 ;
"RTN","IBCU1",101,0)
 N DA,DIK,X,Y
"RTN","IBCU1",102,0)
 S DA(1)=IB,DA=IBX
"RTN","IBCU1",103,0)
 I $D(^DGCR(399,DA(1),"CP",DA,0)) S DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK
"RTN","IBCU1",104,0)
 Q
"RTN","IBCU1",105,0)
 ;
"RTN","IBCU1",106,0)
MODHLP(DA) ; Executable modifier help 399.042  .14
"RTN","IBCU1",107,0)
 ; DA = iens of the current entry DA(1) = file 399 ien
"RTN","IBCU1",108,0)
 ;                                DA    = file 399.042 ien
"RTN","IBCU1",109,0)
 N Z,IBZ,DIC,IBDATE
"RTN","IBCU1",110,0)
 S IBDATE=$$BDATE^IBACSV(+$G(DA(1))) ; The date of service
"RTN","IBCU1",111,0)
 I $P($G(^DGCR(399,+$G(DA(1)),"RC",+$G(DA),0)),U,14)'="" S Z=$P(^(0),U,14) D
"RTN","IBCU1",112,0)
 . N Q
"RTN","IBCU1",113,0)
 . S Q=1
"RTN","IBCU1",114,0)
 . S IBZ(1)="Current modifier"_$S($P(Z,";",2)'="":"s are:",1:"is:")
"RTN","IBCU1",115,0)
 . I $P(Z,";")'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";")_"  "_$P($$MOD^ICPTMOD($P(Z,";"),"E",IBDATE),U,3)
"RTN","IBCU1",116,0)
 . I $P(Z,";",2)'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";",2)_"  "_$P($$MOD^ICPTMOD($P(Z,";",2),"E",IBDATE),U,3)
"RTN","IBCU1",117,0)
 . S Q=Q+1,IBZ(Q)=" "
"RTN","IBCU1",118,0)
 . D EN^DDIOL(.IBZ)
"RTN","IBCU1",119,0)
 ;
"RTN","IBCU1",120,0)
 S DIC="^DIC(81.3,",DIC(0)="E"
"RTN","IBCU1",121,0)
 S DIC("S")="I $$MODP^ICPTMOD($P($G(^DGCR(399,DA(1),""RC"",DA,0)),U,6),Y,""I"",IBDATE)>0"
"RTN","IBCU1",122,0)
 S DIC("W")="W ?14,$P($$MOD^ICPTMOD(Y,""I"",IBDATE),U,3)"
"RTN","IBCU1",123,0)
 D ^DIC
"RTN","IBCU1",124,0)
 Q
"RTN","IBCU1",125,0)
 ;
"RTN","IBCU1",126,0)
QMED(IBRTN,IBIFN) ; DSS QuadraMed Interface: DSS/QuadraMed Available
"RTN","IBCU1",127,0)
 ; return 1 if QuadraMed Interface is On and available for the type of bill
"RTN","IBCU1",128,0)
 ; - routine must exist on the system (interface is 'On')
"RTN","IBCU1",129,0)
 ; Input: IBRTN = tag^routine, if it exists then Interface is 'On'
"RTN","IBCU1",130,0)
 ;        IBIFN = Bill IFN, bill to check if appropriate for sending to QuadraMed
"RTN","IBCU1",131,0)
 ;
"RTN","IBCU1",132,0)
 N IBON S IBON=0
"RTN","IBCU1",133,0)
 I +$G(IBIFN),$G(IBRTN)'="",$T(@IBRTN)'="" S IBON=1
"RTN","IBCU1",134,0)
 Q IBON
"RTN","IBEFUNC2")
0^15^B7649280
"RTN","IBEFUNC2",1,0)
IBEFUNC2 ;ALB/ARH - CPT BILLING EXTRINSIC FUNCTIONS II ;11/27/91
"RTN","IBEFUNC2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,266**;21-MAR-94
"RTN","IBEFUNC2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBEFUNC2",4,0)
 ;
"RTN","IBEFUNC2",5,0)
MODLST(MODS,DESC,IBMOD,IBDATE) ; Function returns string of actual modifiers translated
"RTN","IBEFUNC2",6,0)
 ; from the comma delimited string of modifier iens in MODS
"RTN","IBEFUNC2",7,0)
 ; DESC = 1 if description of modifier should be returned in IBMOD(1)
"RTN","IBEFUNC2",8,0)
 ;        Must pass IBMOD by reference for this to work
"RTN","IBEFUNC2",9,0)
 ; IBMOD = the ',' delimited list of modifiers,
"RTN","IBEFUNC2",10,0)
 ;         IBMOD(1) = the ',' delimited modifier descriptions, if
"RTN","IBEFUNC2",11,0)
 ;         DESC = 1 and IBMOD is passed by reference
"RTN","IBEFUNC2",12,0)
 ; IBDATE = Date of Service (opt) for the versioned text description
"RTN","IBEFUNC2",13,0)
 ; 
"RTN","IBEFUNC2",14,0)
 N Z,Z0,IBP
"RTN","IBEFUNC2",15,0)
 S IBMOD="",IBMOD(1)=""
"RTN","IBEFUNC2",16,0)
 F Z=1:1:$L(MODS,",") S IBP=$P(MODS,",",Z) I IBP D
"RTN","IBEFUNC2",17,0)
 . S Z0=$$MOD^ICPTMOD(IBP,"I",$G(IBDATE)) Q:Z0<0
"RTN","IBEFUNC2",18,0)
 . I $G(DESC) S IBMOD(1)=IBMOD(1)_$S(IBMOD="":"",1:",")_$P(Z0,U,3)
"RTN","IBEFUNC2",19,0)
 . S IBMOD=IBMOD_$S(IBMOD="":"",1:",")_$P(Z0,U,2)
"RTN","IBEFUNC2",20,0)
 Q IBMOD
"RTN","IBEFUNC2",21,0)
 ;
"RTN","IBEFUNC2",22,0)
CPTSTAT(CPT,DATE) ;determine the overall status for a CPT for given date,  assumes today if no date given
"RTN","IBEFUNC2",23,0)
 ;if DATE is not today, assumes that if active in either 409.71 or 350.4 then also active in 81 for that DATE
"RTN","IBEFUNC2",24,0)
 ;(ICPT is not a date sensitive file, so will only check (81) if want todays status), returns:
"RTN","IBEFUNC2",25,0)
 ; 1  - if DATE=DT and CPT currently only active in ICPT file (81) (not active in 409.71 or 350.4)
"RTN","IBEFUNC2",26,0)
 ; 2A - if CPT is Nationally Active only in SD(409.71) and not BASC for DATE
"RTN","IBEFUNC2",27,0)
 ; 2B - if CPT is Locally Active only in SD(409.71) and not BASC for DATE
"RTN","IBEFUNC2",28,0)
 ; 2C - if CPT is Nationally and Locally Active in SD(409.71) and not BASC for DATE
"RTN","IBEFUNC2",29,0)
 ; 3  - if CPT is Billing Active (BASC) in IBE(350.4) and not active in (409.71) for DATE
"RTN","IBEFUNC2",30,0)
 ; 4A - if CPT is Nationally Active in SD(409.71) and Billing Active in IBE(350.4) for DATE
"RTN","IBEFUNC2",31,0)
 ; 4B - if CPT is Locally Active only in SD(409.71) and Billing Active in IBE(350.4) for DATE
"RTN","IBEFUNC2",32,0)
 ; 4C - if CPT is Nationally and Locally Active in SD(409.71) and Billing Active in IBE(350.4) for DATE
"RTN","IBEFUNC2",33,0)
 ; 0  - otherwise
"RTN","IBEFUNC2",34,0)
 N X,X1,Y,POST
"RTN","IBEFUNC2",35,0)
 S:'$D(CPT) CPT=0 S:'$D(DATE) DATE=DT S:'DATE DATE=DT
"RTN","IBEFUNC2",36,0)
 S Y=0,POST="" G:$$CPT^ICPTCOD(+CPT)<1 CEND
"RTN","IBEFUNC2",37,0)
 I $E(DATE,1,7)=DT G:'$P($$CPT^ICPTCOD(+CPT),"^",7) CEND S Y=1
"RTN","IBEFUNC2",38,0)
 S X=CPT,X1=DATE D STATUS^SDAMBAE4 I X'["INACTIVE"&(X'="") D
"RTN","IBEFUNC2",39,0)
 . S Y=2,POST="A" I X["LOCAL" S POST="B" I X["NATIONAL" S POST="C"
"RTN","IBEFUNC2",40,0)
 I $$CPTBSTAT^IBEFUNC1(CPT,DATE) S Y=3 I POST'="" S Y=Y+1
"RTN","IBEFUNC2",41,0)
CEND Q Y_POST
"RTN","IBEFUNC2",42,0)
 ;
"RTN","IBEFUNC2",43,0)
TDG(SSN) ;reformat SSN into terminal digit order
"RTN","IBEFUNC2",44,0)
 ; returns either 0 or ssn in terminal digit order
"RTN","IBEFUNC2",45,0)
 N X,Y,I S Y="" F I=1:1 S X=$E(SSN,I) Q:X=""  I X?1N S Y=Y_X
"RTN","IBEFUNC2",46,0)
 S Y=$S(Y'?9N:0,1:$E(Y,8,9)_$E(Y,6,7)_$E(Y,4,5)_$E(Y,1,3))
"RTN","IBEFUNC2",47,0)
ENDP Q Y
"RTN","IBEFUNC2",48,0)
 ;
"RTN","IBEFUNC2",49,0)
FFMT ;
"RTN","IBEFUNC2",50,0)
 S IBLNGX=$$FORMAT($S('$D(IBGRPX):"",1:IBGRPX),$S('$D(IBCPX):"",1:IBCPX)) Q
"RTN","IBEFUNC2",51,0)
 ;
"RTN","IBEFUNC2",52,0)
FORMAT(GRP,CP) ;calculate spacing format for clinic CPT list
"RTN","IBEFUNC2",53,0)
 ;input GRP - the ifn of the GROUP to be calculated or ""
"RTN","IBEFUNC2",54,0)
 ; or   CP  - the ifn of the entry in 350.71 to return format or ""
"RTN","IBEFUNC2",55,0)
 ;returns - "" if GRP not defined in ^IBE(350.7, or GRP of CP not found
"RTN","IBEFUNC2",56,0)
 ;        - margin width & intercolumn width ^ header width (same for both groups and catigories)
"RTN","IBEFUNC2",57,0)
 ;          ^ procedure name width 
"RTN","IBEFUNC2",58,0)
 ;if # of columns not defined for group, assumes 2
"RTN","IBEFUNC2",59,0)
 ;if display charge not defined for group, assumes negative
"RTN","IBEFUNC2",60,0)
 ;assumes that charge and code widths are not variable
"RTN","IBEFUNC2",61,0)
 N X,DCHG,CD,IC,PN,H,COL,M,CHK
"RTN","IBEFUNC2",62,0)
 S:'$D(GRP) GRP="" S:'$D(CP) CP="" I 'GRP&'CP S X="" G ENDFMT
"RTN","IBEFUNC2",63,0)
 S DCHG=10,CD=7,CHK=7,IC=3,M=132
"RTN","IBEFUNC2",64,0)
 S:'+GRP GRP=$G(^IBE(350.71,+CP,0)),GRP=$S($P(GRP,"^",4):$P(GRP,"^",4),1:$P($G(^IBE(350.71,+$P(GRP,"^",5),0)),"^",4))
"RTN","IBEFUNC2",65,0)
 S X=$G(^IBE(350.7,+GRP,0)),COL=$P(X,"^",3) S:COL="" COL=2
"RTN","IBEFUNC2",66,0)
 I X'="" S DCHG=$S($P(X,"^",2):DCHG,1:0),DCHG=DCHG*COL,CD=CD*COL,CHK=CHK*COL
"RTN","IBEFUNC2",67,0)
 I X'="" S H=(M-(2*COL*IC)),PN=(H-DCHG-CD-CHK)\COL,H=H\COL
"RTN","IBEFUNC2",68,0)
ENDFMT Q $S(X="":X,1:IC_"^"_H_"^"_PN)
"RTN","IBEFUNC2",69,0)
 ;
"RTN","IBEFUNC2",70,0)
FPO ;
"RTN","IBEFUNC2",71,0)
 S X=$$PO(DA,X) Q
"RTN","IBEFUNC2",72,0)
 ;
"RTN","IBEFUNC2",73,0)
PO(DA,X) ;check that the print order entered has not already been used for the group/sub-header
"RTN","IBEFUNC2",74,0)
 ;used to ensure unique print orders within groups and sub-headers
"RTN","IBEFUNC2",75,0)
 ; input:  DA - the IFN of the entry being added/edited may be a subheader or procedure
"RTN","IBEFUNC2",76,0)
 ;         X  - the print order to check
"RTN","IBEFUNC2",77,0)
 ;returns: "" - if bad input or print order already defined
"RTN","IBEFUNC2",78,0)
 ;         X  - input value of X if not previously defined for group/sub-header
"RTN","IBEFUNC2",79,0)
 I '$D(DA)!('$D(^IBE(350.71,+DA,0)))!('$D(X))!('X) S X="" G ENDPO
"RTN","IBEFUNC2",80,0)
 N Y S Y=^IBE(350.71,+DA,0)
"RTN","IBEFUNC2",81,0)
 I $P(Y,"^",3)="S",$D(^IBE(350.71,"AG",+$P(Y,"^",4),X)) S X=""
"RTN","IBEFUNC2",82,0)
 I $P(Y,"^",3)="P",$D(^IBE(350.71,"AS",+$P(Y,"^",5),X)) S X=""
"RTN","IBEFUNC2",83,0)
ENDPO Q X
"RTN","IBTOBI4")
0^4^B21606191
"RTN","IBTOBI4",1,0)
IBTOBI4 ;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ;27-OCT-93
"RTN","IBTOBI4",2,0)
 ;;2.0;INTEGRATED BILLING;**91,125,51,210,266**;21-MAR-94
"RTN","IBTOBI4",3,0)
 ;
"RTN","IBTOBI4",4,0)
CLIN ; -- output clinical information
"RTN","IBTOBI4",5,0)
 N IBOE,DGPM
"RTN","IBTOBI4",6,0)
 Q:$D(IBCTHDR)
"RTN","IBTOBI4",7,0)
 ;
"RTN","IBTOBI4",8,0)
 I $P(IBETYP,"^",3)=1 S DGPM=$P(^IBT(356,+IBTRN,0),"^",5) I 'DGPM Q
"RTN","IBTOBI4",9,0)
 I $P(IBETYP,"^",3)=2 S IBOE=$P(^IBT(356,+IBTRN,0),"^",4)
"RTN","IBTOBI4",10,0)
 F IBTAG="DIAG","PROC","PROV" D @IBTAG Q:IBQUIT
"RTN","IBTOBI4",11,0)
 Q
"RTN","IBTOBI4",12,0)
 ;
"RTN","IBTOBI4",13,0)
DIAG ; -- print diagnosis information
"RTN","IBTOBI4",14,0)
 I '$G(DGPM),('$G(IBOE)) Q
"RTN","IBTOBI4",15,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",16,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",17,0)
DIAG1 W !,"  Diagnosis Information "
"RTN","IBTOBI4",18,0)
 N IBXY,SDDXY,ICDVDT
"RTN","IBTOBI4",19,0)
 I $G(DGPM) D SET^IBTRE3(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE3(.IBXY)
"RTN","IBTOBI4",20,0)
 I $G(IBOE) D SET^SDCO4(IBOE) W:'$D(SDDXY) !?6,"Nothing on File" I $D(SDDXY) S ICDVDT=$$TRNDATE^IBACSV(+IBTRN) D LIST^SDCO4(.SDDXY)
"RTN","IBTOBI4",21,0)
 ; 
"RTN","IBTOBI4",22,0)
 D:$G(DGPM) DRG
"RTN","IBTOBI4",23,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",24,0)
 Q
"RTN","IBTOBI4",25,0)
 ;
"RTN","IBTOBI4",26,0)
PROC ; -- print procedure information
"RTN","IBTOBI4",27,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",28,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",29,0)
PROC1 W !,"  Procedure Information "
"RTN","IBTOBI4",30,0)
 ;
"RTN","IBTOBI4",31,0)
 N IBXY,IBCNT,IBVAL,IBCBK S IBCNT=0
"RTN","IBTOBI4",32,0)
 I $G(DGPM) D SET^IBTRE4(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE4(.IBXY)
"RTN","IBTOBI4",33,0)
 I '$G(DGPM) D  W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST(.IBXY)
"RTN","IBTOBI4",34,0)
 .S IBDT=$P($P(IBTRND,"^",6),".")
"RTN","IBTOBI4",35,0)
 .;
"RTN","IBTOBI4",36,0)
 .S IBVAL("DFN")=DFN,IBVAL("BDT")=IBDT-.000001,IBVAL("EDT")=IBDT\1_".99"
"RTN","IBTOBI4",37,0)
 .; Only want to extract procedures from parent encounters to avoid dups
"RTN","IBTOBI4",38,0)
 .S IBCBK="I '$P(Y0,U,6) D GETPROC^IBTOBI4(Y,Y0,.IBCNT,.IBXY)"
"RTN","IBTOBI4",39,0)
 .D SCAN^IBSDU("PATIENT/DATE",.IBVAL,"",IBCBK) K ^TMP("DIERR",$J)
"RTN","IBTOBI4",40,0)
 ;
"RTN","IBTOBI4",41,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",42,0)
 Q
"RTN","IBTOBI4",43,0)
 ;
"RTN","IBTOBI4",44,0)
GETPROC(IBOE,IBOE0,IBCNT,IBXY) ; output:  IBXY(cnt) = CPT IFN ^ DT/TM ^ Mod,Mod ^ Encounter Provider (#1204)
"RTN","IBTOBI4",45,0)
 N I2,IBCPT,IBCPTS,IBZERR,IBM,IBMODS
"RTN","IBTOBI4",46,0)
 D GETCPT^SDOE(IBOE,"IBCPTS","IBZERR")
"RTN","IBTOBI4",47,0)
 Q:'$O(IBCPTS(0))  ;No procedures for this encounter
"RTN","IBTOBI4",48,0)
 S I2=0
"RTN","IBTOBI4",49,0)
 F  S I2=$O(IBCPTS(I2)) Q:'I2  F Z=1:1:$P(IBCPTS(I2),U,16) D
"RTN","IBTOBI4",50,0)
 . S IBMODS="",IBM=0
"RTN","IBTOBI4",51,0)
 . F  S IBM=$O(IBCPTS(I2,1,IBM)) Q:'IBM  S IBMODS=$S(IBMODS="":"",1:",")_$G(IBCPTS(I2,1,IBM,0))
"RTN","IBTOBI4",52,0)
 . S IBCNT=IBCNT+1,IBXY(IBCNT)=$P(IBCPTS(I2),U)_U_+IBOE0_U_IBMODS_U_$P($G(IBCPTS(I2,12)),U,4)
"RTN","IBTOBI4",53,0)
 Q
"RTN","IBTOBI4",54,0)
 ;
"RTN","IBTOBI4",55,0)
PROV ; -- print provider information
"RTN","IBTOBI4",56,0)
 I '$G(DGPM),('$G(IBOE)) Q
"RTN","IBTOBI4",57,0)
 Q:$P(IBETYP,"^",3)>2
"RTN","IBTOBI4",58,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",59,0)
PROV1 W !,"  Provider Information "
"RTN","IBTOBI4",60,0)
 N IBXY,SDPRY
"RTN","IBTOBI4",61,0)
 I $G(DGPM) D SET^IBTRE5(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE5(.IBXY)
"RTN","IBTOBI4",62,0)
 I $G(IBOE) D SET^SDCO3(IBOE) W:'$D(SDPRY) !?6,"Nothing on File" D:$D(SDPRY) LIST^SDCO3(.SDPRY)
"RTN","IBTOBI4",63,0)
 W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
"RTN","IBTOBI4",64,0)
 Q
"RTN","IBTOBI4",65,0)
 ;
"RTN","IBTOBI4",66,0)
LIST(IBXY) ; -- list procedures array
"RTN","IBTOBI4",67,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTOBI4",68,0)
 ; Output -- List Diagnosis Array
"RTN","IBTOBI4",69,0)
 N I,IBXD,IBMODS,J,IBM,IBDATE
"RTN","IBTOBI4",70,0)
 W !
"RTN","IBTOBI4",71,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTOBI4",72,0)
 . S IBDATE=$P(IBXY(I),U,2)
"RTN","IBTOBI4",73,0)
 . S IBXD=$$PRCD^IBCEF1(+IBXY(I)_";ICPT(",1,IBDATE)
"RTN","IBTOBI4",74,0)
 . W !?2,I,"  ",$P(IBXD,U,2),?15,$E($P(IBXD,U,3),1,40),?60,$$DAT1^IBOUTL(IBDATE,"2P")
"RTN","IBTOBI4",75,0)
 . S IBMODS=$$MODLST^IBEFUNC2($P(IBXY(I),U,3),1,.IBMODS,IBDATE)
"RTN","IBTOBI4",76,0)
 . I IBMODS'="" F J=1:1:$L(IBMODS,",") W !,?15,$P(IBMODS,",",J),?20,$P($G(IBMODS(1)),",",J)
"RTN","IBTOBI4",77,0)
 Q
"RTN","IBTOBI4",78,0)
 ;
"RTN","IBTOBI4",79,0)
DRG ; -- print drgs.
"RTN","IBTOBI4",80,0)
 I '$G(DGPM) Q
"RTN","IBTOBI4",81,0)
 Q:$P(IBETYP,"^",3)>1
"RTN","IBTOBI4",82,0)
 I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
"RTN","IBTOBI4",83,0)
DRG1 W !!,"  Associated Interim DRG Information "
"RTN","IBTOBI4",84,0)
 N IBX,IBDTE,IBDRG
"RTN","IBTOBI4",85,0)
 I $G(DGPM) D
"RTN","IBTOBI4",86,0)
 .I '$O(^IBT(356.93,"AMVD",DGPM,0)) W !?6,"Nothing on File" Q
"RTN","IBTOBI4",87,0)
 .S IBDTE=0 F  S IBDTE=$O(^IBT(356.93,"AMVD",DGPM,IBDTE)) Q:'IBDTE  S IBDRG=0 F  S IBDRG=$O(^IBT(356.93,"AMVD",DGPM,IBDTE,IBDRG)) Q:'IBDRG  D
"RTN","IBTOBI4",88,0)
 ..S IBX=$G(^IBT(356.93,IBDRG,0)) Q:IBX=""
"RTN","IBTOBI4",89,0)
 ..W !?5,$$DAT1^IBOUTL($P(IBX,"^",3)),?16,+IBX," - ",$$DRGTD^IBACSV(+IBX,$P(IBX,"^",3))
"RTN","IBTOBI4",90,0)
 ..W !?21," Estimate ALOS: "_$J($P(IBX,"^",4),4,1)
"RTN","IBTOBI4",91,0)
 ..W ?45," Days Remaining: "_$J($P(IBX,"^",5),2)
"RTN","IBTOBI4",92,0)
 Q
"RTN","IBTOBI4",93,0)
 ;
"RTN","IBTOBI4",94,0)
4 ; -- Visit region for prosthetics
"RTN","IBTOBI4",95,0)
 N IBDA,IBRMPR S IBDA=$P(IBTRND,"^",9) D PRODATA^IBTUTL1(IBDA)
"RTN","IBTOBI4",96,0)
 S IBD(2,1)="          Item: "_$G(IBRMPR(660,+IBDA,4,"E"))
"RTN","IBTOBI4",97,0)
 S IBD(3,1)="   Description: "_$G(IBRMPR(660,+IBDA,24,"E"))
"RTN","IBTOBI4",98,0)
 S IBD(4,1)="      Quantity: "_$J($G(IBRMPR(660,+IBDA,5,"E")),4)
"RTN","IBTOBI4",99,0)
 S IBD(5,1)="    Total Cost: $"_$G(IBRMPR(660,+IBDA,14,"E"))
"RTN","IBTOBI4",100,0)
 S IBD(6,1)="   Transaction: "_$G(IBRMPR(660,+IBDA,2,"E"))
"RTN","IBTOBI4",101,0)
 S IBD(7,1)="        Vendor: "_$G(IBRMPR(660,+IBDA,7,"E"))
"RTN","IBTOBI4",102,0)
 S IBD(8,1)="        Source: "_$G(IBRMPR(660,+IBDA,12,"E"))
"RTN","IBTOBI4",103,0)
 S IBD(9,1)=" Delivery Date: "_$G(IBRMPR(660,+IBDA,10,"E"))
"RTN","IBTOBI4",104,0)
 S IBD(10,1)="       Remarks: "_$G(IBRMPR(660,+IBDA,16,"E"))
"RTN","IBTOBI4",105,0)
 S IBD(11,1)=" Return Status: "_$G(IBRMPR(660,+IBDA,17,"E"))
"RTN","IBTOBI4",106,0)
 Q
"RTN","IBTRE3")
0^8^B26529518
"RTN","IBTRE3",1,0)
IBTRE3 ;ALB/AAS - CLAIMS TRACKING EDIT DIAGNOSIS ;1-SEP-93
"RTN","IBTRE3",2,0)
 ;;2.0;INTEGRATED BILLING;**10,60,210,266**;21-MAR-94
"RTN","IBTRE3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRE3",4,0)
 ;
"RTN","IBTRE3",5,0)
% G ^IBTRE
"RTN","IBTRE3",6,0)
 ;
"RTN","IBTRE3",7,0)
EN(IBTRN) ; -- entry point for protocols
"RTN","IBTRE3",8,0)
 ;    must do own rebuild actions
"RTN","IBTRE3",9,0)
 ; -- Input - point to 356
"RTN","IBTRE3",10,0)
 ;
"RTN","IBTRE3",11,0)
 N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM
"RTN","IBTRE3",12,0)
 D FULL^VALM1
"RTN","IBTRE3",13,0)
 S VALMBCK=""
"RTN","IBTRE3",14,0)
 S IBTRND=$G(^IBT(356,+IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
"RTN","IBTRE3",15,0)
 ;
"RTN","IBTRE3",16,0)
 S IBETYP=$$TRTP^IBTRE1(IBTRN)
"RTN","IBTRE3",17,0)
 I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
"RTN","IBTRE3",18,0)
 ;
"RTN","IBTRE3",19,0)
 ; -- outpatient diagnosis
"RTN","IBTRE3",20,0)
 I IBETYP=2 D  G ENQ
"RTN","IBTRE3",21,0)
 .I $P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,2)
"RTN","IBTRE3",22,0)
 .I '$P(IBTRND,"^",4) W !!,"Can not add diagnosis to outpatient visits prior to Check-out.",! D PAUSE^VALM1
"RTN","IBTRE3",23,0)
 .S VALMBCK="R"
"RTN","IBTRE3",24,0)
 ;
"RTN","IBTRE3",25,0)
 ; -- Inpatient diagnosis
"RTN","IBTRE3",26,0)
 I IBETYP=1 D
"RTN","IBTRE3",27,0)
 .Q:'IBDGPM
"RTN","IBTRE3",28,0)
 .;
"RTN","IBTRE3",29,0)
 .; -- ask admitting diagnosis if not already there
"RTN","IBTRE3",30,0)
 .I '$O(^IBT(356.9,"ADG",+IBDGPM,0)) D ADIAG(IBTRN,IBETYP)
"RTN","IBTRE3",31,0)
 .I $G(IBSEL)="^" Q
"RTN","IBTRE3",32,0)
 .;
"RTN","IBTRE3",33,0)
 .; -- edit other diagnosis
"RTN","IBTRE3",34,0)
 .D DIAG(IBTRN,IBETYP)
"RTN","IBTRE3",35,0)
 .S VALMBCK="R"
"RTN","IBTRE3",36,0)
 ;
"RTN","IBTRE3",37,0)
ENQ ;
"RTN","IBTRE3",38,0)
 Q
"RTN","IBTRE3",39,0)
ADIAG(IBTRN,IBETYP) ; -- add admitting diagnosis
"RTN","IBTRE3",40,0)
 ;
"RTN","IBTRE3",41,0)
 N IBADG,DA,DR,DIC,DIE,DD,DO,IOINHI,IOINORM,IBDATE
"RTN","IBTRE3",42,0)
 S IBADG=""
"RTN","IBTRE3",43,0)
 ;
"RTN","IBTRE3",44,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN) ; Service date for CSV
"RTN","IBTRE3",45,0)
 ;
"RTN","IBTRE3",46,0)
 ;S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",47,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter an admitting diagnosis for an admission",! D PAUSE^VALM1 G ADGQ
"RTN","IBTRE3",48,0)
 ;
"RTN","IBTRE3",49,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE3",50,0)
 S IBADG=$O(^IBT(356.9,"ADG",IBDGPM,0)) I IBADG S IBDA=$O(^IBT(356.9,"ADG",IBDGPM,IBADG,0))
"RTN","IBTRE3",51,0)
 W !!,"--- ",IOINHI,"Admitting Diagnosis",IOINORM," --- "
"RTN","IBTRE3",52,0)
 I 'IBADG W "Unspecified"
"RTN","IBTRE3",53,0)
 E  D
"RTN","IBTRE3",54,0)
 . N IBDX
"RTN","IBTRE3",55,0)
 . S IBDX=$$ICD9^IBACSV(+IBADG,IBDATE)
"RTN","IBTRE3",56,0)
 . W $P(IBDX,U)_" -"_$P(IBDX,U,3)
"RTN","IBTRE3",57,0)
 I +IBADG D EDT(IBDA,".01;") W !
"RTN","IBTRE3",58,0)
 I '$O(^IBT(356.9,"ADG",+IBDGPM,0)) D ADD(IBTRN,3)
"RTN","IBTRE3",59,0)
 ;
"RTN","IBTRE3",60,0)
 W !
"RTN","IBTRE3",61,0)
ADGQ Q
"RTN","IBTRE3",62,0)
 ;
"RTN","IBTRE3",63,0)
DIAG(IBTRN,IBETYP) ; -- add/edit diagnosis
"RTN","IBTRE3",64,0)
 Q:'IBTRN
"RTN","IBTRE3",65,0)
 I $G(IBETYP)'=1 Q
"RTN","IBTRE3",66,0)
 N DA,DR,DIC,DIE
"RTN","IBTRE3",67,0)
 S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",68,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter a diagnosis for an admission",! D PAUSE^VALM1 G ADGQ
"RTN","IBTRE3",69,0)
 ;
"RTN","IBTRE3",70,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE3",71,0)
 W !!,"--- ",IOINHI,"Diagnosis",IOINORM," --- "
"RTN","IBTRE3",72,0)
 S IBSEL="Add"
"RTN","IBTRE3",73,0)
 D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK^IBTRE4(IBCNT,"A")
"RTN","IBTRE3",74,0)
 I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G DIAGQ
"RTN","IBTRE3",75,0)
 I IBSEL="Add" D ADD(IBTRN)
"RTN","IBTRE3",76,0)
 D:IBSEL EDT(+$G(IBXY(+IBSEL)),".01;.03;.04")
"RTN","IBTRE3",77,0)
DIAGQ Q
"RTN","IBTRE3",78,0)
 ;
"RTN","IBTRE3",79,0)
ADD(IBTRN,TYPE) ; -- Add a new diagnosis
"RTN","IBTRE3",80,0)
 ;
"RTN","IBTRE3",81,0)
 N DTOUT,DUOUT,X,Y,DIC,IBDATE,ICDVDT
"RTN","IBTRE3",82,0)
 S IBCNT=0
"RTN","IBTRE3",83,0)
 ;Service date (for CSV)
"RTN","IBTRE3",84,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN) S:'IBDATE IBDATE=DT
"RTN","IBTRE3",85,0)
 S ICDVDT=IBDATE ; for DD ID (versioned text)
"RTN","IBTRE3",86,0)
 ;
"RTN","IBTRE3",87,0)
 I '$G(TYPE) S TYPE=""
"RTN","IBTRE3",88,0)
NXT S DIC("A")=$S(TYPE=3:"Admitting Diagnosis: ",IBCNT<1:"Select Diagnosis: ",1:"Next Diagnosis: ")
"RTN","IBTRE3",89,0)
 ;All DX codes are visible - no screen ;S DIC("S")="I '$P(^(0),U,9)"
"RTN","IBTRE3",90,0)
 S DIC="^ICD9(",DIC(0)="AEMQ",X=""
"RTN","IBTRE3",91,0)
 W:$G(IBCNT) ! D ^DIC K DIC G ADDQ:Y<0
"RTN","IBTRE3",92,0)
 I Y,'$$ICD9ACT^IBACSV(+Y,IBDATE) W !!,*7,$P(Y,U,2)," is not active for the service date ("_$$DAT3^IBOUTL(IBDATE),").",! G NXT
"RTN","IBTRE3",93,0)
 I $D(^IBT(356.9,"ADGPM",$$DGPM(IBTRN),+Y)) W !!,*7,$P(Y,"^",2)," is already a diagnosis.",! G NXT
"RTN","IBTRE3",94,0)
 S IBCNT=IBCNT+1
"RTN","IBTRE3",95,0)
 S IBADG=$$NEW(+Y,IBTRN,TYPE)
"RTN","IBTRE3",96,0)
 I IBADG,TYPE'=3 D EDT(IBADG) G NXT
"RTN","IBTRE3",97,0)
ADDQ I $D(DTOUT)!($D(DUOUT)) S IBSEL="^"
"RTN","IBTRE3",98,0)
 Q
"RTN","IBTRE3",99,0)
 ;
"RTN","IBTRE3",100,0)
DGPM(IBTRN) ; -- return admission pointer
"RTN","IBTRE3",101,0)
 Q $P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE3",102,0)
 ;
"RTN","IBTRE3",103,0)
 ;
"RTN","IBTRE3",104,0)
NEW(ICDI,IBTRN,TYPE) ; -- file new entry
"RTN","IBTRE3",105,0)
 ;
"RTN","IBTRE3",106,0)
 N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
"RTN","IBTRE3",107,0)
 S X=ICDI,(DIC,DIK)="^IBT(356.9,",DIC(0)="L",DLAYGO=356.9
"RTN","IBTRE3",108,0)
 D FILE^DICN S IBADG=+Y
"RTN","IBTRE3",109,0)
 I IBADG>0 L +^IBT(356.9,IBADG) S $P(^IBT(356.9,IBADG,0),"^",2,4)=$$DGPM(IBTRN)_"^"_$P($P(^IBT(356,IBTRN,0),"^",6),".")_"^"_$G(TYPE),DA=IBADG D IX1^DIK L -^IBT(356.9,IBADG)
"RTN","IBTRE3",110,0)
NEWQ Q IBADG
"RTN","IBTRE3",111,0)
 ;
"RTN","IBTRE3",112,0)
EDT(IBADG,IBDR) ; -- edit entry
"RTN","IBTRE3",113,0)
 ;
"RTN","IBTRE3",114,0)
 N DR,DIE,DA,DIDEL
"RTN","IBTRE3",115,0)
 S DR=$G(IBDR),DIDEL=356.9 I DR="" S DR=".03;.04"
"RTN","IBTRE3",116,0)
 S DA=IBADG,DIE="^IBT(356.9,"
"RTN","IBTRE3",117,0)
 Q:'$G(^IBT(356.9,DA,0))
"RTN","IBTRE3",118,0)
 L +^IBT(356.9,+IBADG):5 I '$T D LOCKED^IBTRCD1 G EDTQ
"RTN","IBTRE3",119,0)
 D ^DIE
"RTN","IBTRE3",120,0)
 L -^IBT(356.9,+IBADG)
"RTN","IBTRE3",121,0)
EDTQ Q
"RTN","IBTRE3",122,0)
 ;
"RTN","IBTRE3",123,0)
SET(IBTRN) ; -- set array
"RTN","IBTRE3",124,0)
 N IBDGPM,IBICD,IBDA
"RTN","IBTRE3",125,0)
 S IBDGPM=$$DGPM(IBTRN)
"RTN","IBTRE3",126,0)
 S (IBICD,IBCNT)=0
"RTN","IBTRE3",127,0)
 F  S IBICD=$O(^IBT(356.9,"ADGPM",IBDGPM,IBICD)) Q:'IBICD  S IBDA=0 F  S IBDA=$O(^IBT(356.9,"ADGPM",IBDGPM,IBICD,IBDA)) Q:'IBDA  D
"RTN","IBTRE3",128,0)
 .Q:'$D(^IBT(356.9,+IBDA,0))
"RTN","IBTRE3",129,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRE3",130,0)
 .S IBXY(IBCNT)=IBDA_"^"_IBICD
"RTN","IBTRE3",131,0)
SETQ Q
"RTN","IBTRE3",132,0)
 ;
"RTN","IBTRE3",133,0)
LIST(IBXY) ;List Diagnosis Array
"RTN","IBTRE3",134,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTRE3",135,0)
 ; Output -- List Diagnosis Array
"RTN","IBTRE3",136,0)
 N I,IBXD,IBDATE
"RTN","IBTRE3",137,0)
 W !
"RTN","IBTRE3",138,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTRE3",139,0)
 . S IBTNOD=$G(^IBT(356.9,+IBXY(I),0))
"RTN","IBTRE3",140,0)
 . S IBDATE=$P($P(IBTNOD,U,3),".")
"RTN","IBTRE3",141,0)
 . S IBXD=$$ICD9^IBACSV(+$P(IBXY(I),U,2),IBDATE)
"RTN","IBTRE3",142,0)
 . W !?2,I,"  ",$P(IBXD,U),?15,$E($P(IBXD,U,3),1,30),?48,$$DAT1^IBOUTL(IBDATE),?60,$$EXPAND^IBTRE(356.9,.04,$P(IBTNOD,U,4))
"RTN","IBTRE3",143,0)
 Q
"RTN","IBTRE4")
0^9^B28379338
"RTN","IBTRE4",1,0)
IBTRE4 ;ALB/AAS - CLAIMS TRACKING EDIT PROCEDURE ;1-SEP-93
"RTN","IBTRE4",2,0)
 ;;2.0;INTEGRATED BILLING;**10,210,266**;21-MAR-94
"RTN","IBTRE4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRE4",4,0)
 ;
"RTN","IBTRE4",5,0)
% G ^IBTRE
"RTN","IBTRE4",6,0)
 ;
"RTN","IBTRE4",7,0)
EN(IBTRN) ; -- entry point for protocols
"RTN","IBTRE4",8,0)
 ;    must do own rebuild actions
"RTN","IBTRE4",9,0)
 ; -- Input - point to 356
"RTN","IBTRE4",10,0)
 ;
"RTN","IBTRE4",11,0)
 N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM
"RTN","IBTRE4",12,0)
 D FULL^VALM1
"RTN","IBTRE4",13,0)
 S VALMBCK=""
"RTN","IBTRE4",14,0)
 S IBTRND=$G(^IBT(356,IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
"RTN","IBTRE4",15,0)
 ;
"RTN","IBTRE4",16,0)
 S IBETYP=$$TRTP^IBTRE1(IBTRN)
"RTN","IBTRE4",17,0)
 I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
"RTN","IBTRE4",18,0)
 ;
"RTN","IBTRE4",19,0)
 ; -- outpatient procedure
"RTN","IBTRE4",20,0)
 I IBETYP=2 D  G ENQ
"RTN","IBTRE4",21,0)
 .W !!,*7,"You must use the add/edit action on Check-out to add procedures to Outpatient Encounters.",!
"RTN","IBTRE4",22,0)
 .S VALMBCK="R"
"RTN","IBTRE4",23,0)
 ;
"RTN","IBTRE4",24,0)
 ; -- Inpatient procedure
"RTN","IBTRE4",25,0)
 Q:'IBDGPM
"RTN","IBTRE4",26,0)
 I IBETYP=1 D PROC(IBTRN,IBETYP) S VALMBCK="R"
"RTN","IBTRE4",27,0)
 ;
"RTN","IBTRE4",28,0)
ENQ ;
"RTN","IBTRE4",29,0)
 Q
"RTN","IBTRE4",30,0)
 ;
"RTN","IBTRE4",31,0)
PROC(IBTRN,IBETYP) ; -- add/edit procedure
"RTN","IBTRE4",32,0)
 Q:'IBTRN
"RTN","IBTRE4",33,0)
 I $G(IBETYP)'=1 Q
"RTN","IBTRE4",34,0)
 N DA,DR,DIC,DIE
"RTN","IBTRE4",35,0)
 ;S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
"RTN","IBTRE4",36,0)
 I IBETYP'=1!('IBDGPM) W !!,"You can only enter a procedure for an admission",! D PAUSE^VALM1 G PROCQ
"RTN","IBTRE4",37,0)
 ;
"RTN","IBTRE4",38,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","IBTRE4",39,0)
 W !!,"--- ",IOINHI,"Procedure",IOINORM," --- "
"RTN","IBTRE4",40,0)
 S IBSEL="Add"
"RTN","IBTRE4",41,0)
 D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK(IBCNT,"A")
"RTN","IBTRE4",42,0)
 I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G PROCQ
"RTN","IBTRE4",43,0)
 I IBSEL="Add" D ADD(IBTRN)
"RTN","IBTRE4",44,0)
 I IBSEL D EDT(+$G(IBXY(+IBSEL)),".01;.03;"),CHECK(+$G(IBXY(+IBSEL)))
"RTN","IBTRE4",45,0)
PROCQ Q
"RTN","IBTRE4",46,0)
 ;
"RTN","IBTRE4",47,0)
CHECK(IBADG) ; Check active status of the ICD0 code (Code Set Versioning)
"RTN","IBTRE4",48,0)
 N IBZ,DIR,X,Y
"RTN","IBTRE4",49,0)
 S IBZ=$G(^IBT(356.91,+$G(IBADG),0)) Q:'IBZ
"RTN","IBTRE4",50,0)
 Q:$$ICD0ACT^IBACSV(+IBZ,$P(IBZ,U,3))
"RTN","IBTRE4",51,0)
 W !!,*7,"Warning! The Procedure Code ",$P($$ICD0^IBACSV(+IBZ),U)," is inactive on this date!"
"RTN","IBTRE4",52,0)
 S DIR(0)="EA",DIR("A")="Press <Enter> to continue" D ^DIR
"RTN","IBTRE4",53,0)
 Q
"RTN","IBTRE4",54,0)
 ;
"RTN","IBTRE4",55,0)
ADD(IBTRN,TYPE) ; -- Add a new procedure
"RTN","IBTRE4",56,0)
 ;
"RTN","IBTRE4",57,0)
 N DTOUT,DUTOU,X,Y,DIC,DIR,IBDATE,IBP,IBPN,IBPDT,IBADT,ICDVDT
"RTN","IBTRE4",58,0)
 ;Service date (for CSV)
"RTN","IBTRE4",59,0)
 S IBDATE=$$TRNDATE^IBACSV(IBTRN)
"RTN","IBTRE4",60,0)
 S IBADT=$G(^DGPM(+$$DGPM^IBTRE3(IBTRN),0)) ;Admission Date
"RTN","IBTRE4",61,0)
 S IBCNT=0
"RTN","IBTRE4",62,0)
 I '$G(TYPE) S TYPE=""
"RTN","IBTRE4",63,0)
NXT ; The Procedure Date has to be asked first for the Code Set Versioning requirements
"RTN","IBTRE4",64,0)
 ; Input Procedure Date
"RTN","IBTRE4",65,0)
 S DIR(0)="D",DIR("A")=$S(IBCNT<1:"Procedure Date",1:"Next Procedure Date")
"RTN","IBTRE4",66,0)
 S DIR("B")=$$DAT3^IBOUTL(IBDATE)
"RTN","IBTRE4",67,0)
 W:$G(IBCNT) !
"RTN","IBTRE4",68,0)
 S IBPDT=IBDATE D ^DIR K DIR G ADDQ:Y'?7N S IBPDT=+Y W "  ",$$DAT2^IBOUTL(IBPDT)
"RTN","IBTRE4",69,0)
 ; The same checking as in the Data Dictionary, file #356.91, field #.03 (PROCEDURE DATE):
"RTN","IBTRE4",70,0)
 I IBADT,(IBPDT+.9)<IBADT W !!,*7,"The Procedure Date cannot be earlier than Admission (",$$DAT3^IBOUTL(IBADT),")",! G NXT
"RTN","IBTRE4",71,0)
 ; Input Procedure (ICD0)
"RTN","IBTRE4",72,0)
 S DIC("A")="Select Procedure: "
"RTN","IBTRE4",73,0)
 S DIC("S")="I $$ICD0ACT^IBACSV(+Y,IBPDT)"
"RTN","IBTRE4",74,0)
 S ICDVDT=IBPDT ; for DD ID (versioned text)
"RTN","IBTRE4",75,0)
 S DIC="^ICD0(",DIC(0)="AEMQ",X=""
"RTN","IBTRE4",76,0)
 D ^DIC K DIC G ADDQ:Y'>0
"RTN","IBTRE4",77,0)
 S IBP=+Y,IBPN=$P(Y,U,2) ; Procedure IEN and name
"RTN","IBTRE4",78,0)
 ;I '$$ICD0ACT^IBACSV(IBP,IBPDT) W !!,*7,IBPN," is not active for the procedure date ("_$$DAT3^IBOUTL(IBPDT),").",! G NXT
"RTN","IBTRE4",79,0)
 I $D(^IBT(356.91,"ADGPM",$$DGPM^IBTRE3(IBTRN),IBP)) W !!,*7,IBPN," is already a procedure.",!
"RTN","IBTRE4",80,0)
 S IBCNT=IBCNT+1
"RTN","IBTRE4",81,0)
 S IBADG=$$NEW(IBP,IBTRN,TYPE,IBPDT)
"RTN","IBTRE4",82,0)
 I IBADG>0,TYPE'=3 G NXT ;D EDT(IBADG) G NXT
"RTN","IBTRE4",83,0)
ADDQ Q
"RTN","IBTRE4",84,0)
 ;
"RTN","IBTRE4",85,0)
NEW(ICDI,IBTRN,TYPE,IBPDT) ; -- file new entry
"RTN","IBTRE4",86,0)
 ;
"RTN","IBTRE4",87,0)
 N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
"RTN","IBTRE4",88,0)
 S X=ICDI,(DIC,DIK)="^IBT(356.91,",DIC(0)="L",DLAYGO=356.91
"RTN","IBTRE4",89,0)
 D FILE^DICN S IBADG=+Y I Y'>0 G NEWQ
"RTN","IBTRE4",90,0)
 I '$G(IBPDT) S IBPDT=$P($P(^IBT(356,IBTRN,0),"^",6),".")
"RTN","IBTRE4",91,0)
 L +^IBT(356.91,IBADG) S $P(^IBT(356.91,IBADG,0),"^",2,3)=$$DGPM^IBTRE3(IBTRN)_"^"_IBPDT,DA=IBADG D IX1^DIK L -^IBT(356.91,IBADG)
"RTN","IBTRE4",92,0)
NEWQ Q IBADG
"RTN","IBTRE4",93,0)
 ;
"RTN","IBTRE4",94,0)
EDT(IBADG,IBDR) ; -- edit entry
"RTN","IBTRE4",95,0)
 ;
"RTN","IBTRE4",96,0)
 N DR,DIE,DA,DIDEL
"RTN","IBTRE4",97,0)
 S DR=$G(IBDR),DIDEL=356.91 I DR="" S DR=".03;"
"RTN","IBTRE4",98,0)
 S DA=IBADG,DIE="^IBT(356.91,"
"RTN","IBTRE4",99,0)
 Q:'$G(^IBT(356.91,DA,0))
"RTN","IBTRE4",100,0)
 L +^IBT(356.91,IBADG):5 I '$T D LOCKED^IBTRCD1 G EDTQ
"RTN","IBTRE4",101,0)
 D ^DIE
"RTN","IBTRE4",102,0)
 L -^IBT(356.91,IBADG)
"RTN","IBTRE4",103,0)
EDTQ Q
"RTN","IBTRE4",104,0)
 ;
"RTN","IBTRE4",105,0)
SET(IBTRN) ; -- set array
"RTN","IBTRE4",106,0)
 N IBDGPM,IBICD
"RTN","IBTRE4",107,0)
 S IBDGPM=$$DGPM^IBTRE3(IBTRN)
"RTN","IBTRE4",108,0)
 S (IBICD,IBDA,IBCNT)=0
"RTN","IBTRE4",109,0)
 F  S IBICD=$O(^IBT(356.91,"ADGPM",IBDGPM,IBICD)) Q:'IBICD  S IBDA=0 F  S IBDA=$O(^IBT(356.91,"ADGPM",IBDGPM,IBICD,IBDA)) Q:'IBDA  D
"RTN","IBTRE4",110,0)
 .Q:'$D(^IBT(356.91,+IBDA,0))
"RTN","IBTRE4",111,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRE4",112,0)
 .S IBXY(IBCNT)=IBDA_"^"_IBICD
"RTN","IBTRE4",113,0)
SETQ Q
"RTN","IBTRE4",114,0)
 ;
"RTN","IBTRE4",115,0)
LIST(IBXY) ;List Diagnosis Array
"RTN","IBTRE4",116,0)
 ; Input  -- IBXY     Diagnosis Array Subscripted by a Number
"RTN","IBTRE4",117,0)
 ; Output -- List Diagnosis Array
"RTN","IBTRE4",118,0)
 N I,IBXD,IBDATE
"RTN","IBTRE4",119,0)
 W !
"RTN","IBTRE4",120,0)
 S I=0 F  S I=$O(IBXY(I)) Q:'I  D
"RTN","IBTRE4",121,0)
 . S IBTNOD=$G(^IBT(356.91,+IBXY(I),0))
"RTN","IBTRE4",122,0)
 . S IBDATE=$P($P(IBTNOD,U,3),".") ; Procedure date
"RTN","IBTRE4",123,0)
 . S IBXD=$$ICD0^IBACSV(+$P(IBXY(I),U,2),IBDATE)
"RTN","IBTRE4",124,0)
 . W !?2,I,"  ",$P(IBXD,U),?15,$E($P(IBXD,U,4),1,43),?60,$$DAT1^IBOUTL(IBDATE)
"RTN","IBTRE4",125,0)
 Q
"RTN","IBTRE4",126,0)
 ;
"RTN","IBTRE4",127,0)
ASK(IBCNT,IBPAR,IBSELDF) ;Ask user to select from list
"RTN","IBTRE4",128,0)
 ; Input  -- SDCNT    Number of Entities
"RTN","IBTRE4",129,0)
 ;           SDPAR    Selection Parameters (A=Add)
"RTN","IBTRE4",130,0)
 ;           SDSELDF  Selection Default  [Optional]
"RTN","IBTRE4",131,0)
 ; Output -- Selection
"RTN","IBTRE4",132,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IBTRE4",133,0)
REASK S DIR("?")="Enter "_$S($G(IBSELDF)]"":"<RETURN> for '"_IBSELDF_"', ",1:"")_$S(IBCNT=1:"1",1:"1-"_IBCNT)_" to Edit"_$S(IBPAR["A":", or 'A' to Add",1:"")
"RTN","IBTRE4",134,0)
 S DIR("A")="Enter "_$S(IBCNT=1:"1",1:"1-"_IBCNT)_" to Edit"_$S(IBPAR["A":", or 'A' to Add",1:"")_": "_$S($G(IBSELDF)]"":IBSELDF_"// ",1:"")
"RTN","IBTRE4",135,0)
 S DIR(0)="FAO^1:30"
"RTN","IBTRE4",136,0)
 D ^DIR I $D(DTOUT)!($D(DUOUT)) S Y="^" G ASKQ
"RTN","IBTRE4",137,0)
 S Y=$$UPPER^VALM1(Y)
"RTN","IBTRE4",138,0)
 I Y?.N,Y,Y'>IBCNT G ASKQ
"RTN","IBTRE4",139,0)
 I IBPAR["A",$E(Y)="A" S Y="Add" G ASKQ
"RTN","IBTRE4",140,0)
 I Y="" S Y=$S($G(IBSELDF)]"":IBSELDF,1:"Return") G ASKQ
"RTN","IBTRE4",141,0)
 W !!?5,DIR("?"),".",! G REASK
"RTN","IBTRE4",142,0)
ASKQ Q $G(Y)
"RTN","IBTRV2")
0^5^B22166861
"RTN","IBTRV2",1,0)
IBTRV2 ;ALB/AAS - CLAIMS TRACKING -  REVIEW ACTIONS ;19-JUL-93
"RTN","IBTRV2",2,0)
 ;;2.0;INTEGRATED BILLING ;**60,210,266**;21-MAR-94
"RTN","IBTRV2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRV2",4,0)
 ;
"RTN","IBTRV2",5,0)
% G EN^IBTRV
"RTN","IBTRV2",6,0)
 ;
"RTN","IBTRV2",7,0)
DA(IBTRN) ; -- Add Diagnosis
"RTN","IBTRV2",8,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",9,0)
 ;
"RTN","IBTRV2",10,0)
 N IBETYP
"RTN","IBTRV2",11,0)
 D FULL^VALM1
"RTN","IBTRV2",12,0)
 I IBETYP=2 D
"RTN","IBTRV2",13,0)
 .I $P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,2)
"RTN","IBTRV2",14,0)
 .I '$P(IBTRND,"^",4) W !!,"Can not add diagnosis to outpatient visits prior to Check-out.",! D PAUSE^VALM1
"RTN","IBTRV2",15,0)
 I IBETYP=1 D EN^IBTRE3(IBTRN)
"RTN","IBTRV2",16,0)
 I '$G(BLD) D DRG,BLD^IBTRV
"RTN","IBTRV2",17,0)
 S VALMBCK="R"
"RTN","IBTRV2",18,0)
 Q
"RTN","IBTRV2",19,0)
 ;
"RTN","IBTRV2",20,0)
PROC(IBTRN,IBETYP,BLD) ; -- Add Procedures
"RTN","IBTRV2",21,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",22,0)
 ;
"RTN","IBTRV2",23,0)
 I '$G(BLD) D FULL^VALM1
"RTN","IBTRV2",24,0)
 I IBETYP=2 W !!,"Outpatient Procedures should be entered using Add/Edit action in",!,"Appointment Management.",! D PAUSE^VALM1
"RTN","IBTRV2",25,0)
 I IBETYP=1 D EN^IBTRE4(IBTRN)
"RTN","IBTRV2",26,0)
 I '$G(BLD) D BLD^IBTRV
"RTN","IBTRV2",27,0)
 S VALMBCK="R"
"RTN","IBTRV2",28,0)
 Q
"RTN","IBTRV2",29,0)
PROV(IBTRN,IBETYP,BLD) ; -- Add Procedures
"RTN","IBTRV2",30,0)
 ; -- bld = non-zero means not from main tracking  entry.
"RTN","IBTRV2",31,0)
 ;
"RTN","IBTRV2",32,0)
 I '$G(BLD) D FULL^VALM1
"RTN","IBTRV2",33,0)
 I IBETYP=1 D EN^IBTRE5(IBTRN)
"RTN","IBTRV2",34,0)
 I IBETYP=2,$P(IBTRND,"^",4) D ASK^IBTUTL4(IBTRN,1)
"RTN","IBTRV2",35,0)
 I IBETYP=3 W !!,"Provider information for Prescriptions comes from the pharmacy package silly.",! D PAUSE^VALM1
"RTN","IBTRV2",36,0)
 I IBETYP=4 W !!,"Provider information for Prosthetics comes from the prothetics package silly.",! D PAUSE^VALM1
"RTN","IBTRV2",37,0)
 I '$G(BLD) D BLD^IBTRV
"RTN","IBTRV2",38,0)
 S VALMBCK="R"
"RTN","IBTRV2",39,0)
 Q
"RTN","IBTRV2",40,0)
 ;
"RTN","IBTRV2",41,0)
DRG(IBTRN) ; -- entry point to compute drg
"RTN","IBTRV2",42,0)
 ;    generally called from ad or pr above caller does own rebuild
"RTN","IBTRV2",43,0)
 N DIR,DA,DR,DIC,DIE,IBALOS,IBDRG,IBTRVD,DGPMCA,DX
"RTN","IBTRV2",44,0)
 S DGPMCA=$P(^IBT(356,IBTRN,0),"^",5) Q:'DGPMCA
"RTN","IBTRV2",45,0)
 ;
"RTN","IBTRV2",46,0)
 ; -- can't compute drg if no primary(dxls) diagnosis
"RTN","IBTRV2",47,0)
 S DX=$O(^IBT(356.9,"ATP",DGPMCA,1,0)) Q:'DX
"RTN","IBTRV2",48,0)
 D DISPDRG(DGPMCA)
"RTN","IBTRV2",49,0)
 ;
"RTN","IBTRV2",50,0)
 S DIR("?")="Answer 'Yes' to compute and store a new interim drg, answer 'No' to quit."
"RTN","IBTRV2",51,0)
 S DIR("A")="Ready to compute New Interim DRG",DIR("B")="NO",DIR(0)="Y" D ^DIR K DIR
"RTN","IBTRV2",52,0)
 I Y=1 D
"RTN","IBTRV2",53,0)
 .S IBDRG=$$COMDRG(IBTRN) Q:+IBDRG<1
"RTN","IBTRV2",54,0)
 .W !!,"DRG computes to: ",IBDRG,"  -  ",$$DRGTD^IBACSV(IBDRG,$$TRNDATE^IBACSV(IBTRN))
"RTN","IBTRV2",55,0)
 .;
"RTN","IBTRV2",56,0)
 .S IBDA=$O(^IBT(356.93,"AMVD",DGPMCA,DT,0))
"RTN","IBTRV2",57,0)
 .I +IBDA<1 D
"RTN","IBTRV2",58,0)
 ..K DD,DO
"RTN","IBTRV2",59,0)
 ..S X=IBDRG
"RTN","IBTRV2",60,0)
 ..S DIC="^IBT(356.93,",DIC(0)="L",DLAYGO=356.93
"RTN","IBTRV2",61,0)
 ..S DIC("DR")=".02////"_DGPMCA_";.03////"_DT
"RTN","IBTRV2",62,0)
 ..D FILE^DICN K DIC S IBDA=+Y
"RTN","IBTRV2",63,0)
 .I +IBDA<1 Q
"RTN","IBTRV2",64,0)
 .;
"RTN","IBTRV2",65,0)
 .L +^IBT(356.93,IBDA):5 I '$T D LOCKED^IBTRCD1 Q
"RTN","IBTRV2",66,0)
 .S DIE="^IBT(356.93,",DA=IBDA
"RTN","IBTRV2",67,0)
 .S DR=".01////^S X=IBDRG;.01;S IBALOS=$$ALOS^IBTRV2(IBDRG,DT);.04//^S X=IBALOS;.05//^S X=$$DAYREM^IBTRV2(DGPMCA,IBALOS)"
"RTN","IBTRV2",68,0)
 .D ^DIE W !
"RTN","IBTRV2",69,0)
 .L -^IBT(356.93,+IBDA)
"RTN","IBTRV2",70,0)
 Q
"RTN","IBTRV2",71,0)
 ;
"RTN","IBTRV2",72,0)
DAYREM(DGPM,LOS) ; -- Compute days remaining
"RTN","IBTRV2",73,0)
 N IBX,DIFF S IBX=LOS
"RTN","IBTRV2",74,0)
 S DIFF=$$FMDIFF^XLFDT(DT,+$G(^DGPM(DGPM,0))) S:DIFF<0 DIFF=-DIFF
"RTN","IBTRV2",75,0)
 S IBX=LOS-DIFF
"RTN","IBTRV2",76,0)
 I IBX<0 S IBX=0
"RTN","IBTRV2",77,0)
 Q IBX\1
"RTN","IBTRV2",78,0)
 ;
"RTN","IBTRV2",79,0)
ALOS(X,Y) ; -- compute alos for drg for year
"RTN","IBTRV2",80,0)
 ;    input x = pointer to drg file
"RTN","IBTRV2",81,0)
 ;          y = date
"RTN","IBTRV2",82,0)
 N IBDT,J
"RTN","IBTRV2",83,0)
 S IBDT=0 F  S IBDT=$O(^IBE(356.5,"ADR",X,IBDT)) Q:'IBDT!(IBDT>Y)  D
"RTN","IBTRV2",84,0)
 .S J=$O(^IBE(356.5,"ADR",X,IBDT,0))
"RTN","IBTRV2",85,0)
 Q $P($G(^IBE(356.5,+$G(J),0)),"^",3)
"RTN","IBTRV2",86,0)
 ;
"RTN","IBTRV2",87,0)
COMDRG(IBTRN) ; -- compute drg from tracking file
"RTN","IBTRV2",88,0)
 ;*********************************************************
"RTN","IBTRV2",89,0)
 ; -- needed variable
"RTN","IBTRV2",90,0)
 ;    SEX     = m or f
"RTN","IBTRV2",91,0)
 ;    AGE     = whole number 0-120
"RTN","IBTRV2",92,0)
 ;    ICDEXP  = patient died during this episode
"RTN","IBTRV2",93,0)
 ;    ICDTRS  = patient transfered to acute care facility
"RTN","IBTRV2",94,0)
 ;    ICDDMS  = patient had irregular discharge
"RTN","IBTRV2",95,0)
 ;    ICDDX(  = diagnosis codes
"RTN","IBTRV2",96,0)
 ;    ICDPRC( = procedure codes
"RTN","IBTRV2",97,0)
 ;*********************************************************
"RTN","IBTRV2",98,0)
 N SEX,ICDEXP,ICDTRS,ICDDMS,ICDDX,ICDPRC,DX,PR,I,J,IBCNT,ICDMDC,ICDDRG,ICDDATE
"RTN","IBTRV2",99,0)
 S ICDDRG="",(ICDEXP,ICDTRS,ICDDMS,IBCNT)=0,DFN=$P(^IBT(356,IBTRN,0),"^",2)
"RTN","IBTRV2",100,0)
 ;
"RTN","IBTRV2",101,0)
 S SEX=$P($G(^DPT(DFN,0)),U,2)
"RTN","IBTRV2",102,0)
 S AGE=$$FMDIFF^XLFDT(DT,$P($G(^DPT(DFN,0)),U,3))\365.25
"RTN","IBTRV2",103,0)
 S DGPMA=$P(^IBT(356,IBTRN,0),"^",5) G:'DGPMA COMDRGQ
"RTN","IBTRV2",104,0)
 ;
"RTN","IBTRV2",105,0)
 S IBCNT=1,DX=0
"RTN","IBTRV2",106,0)
 S ICDDX(1)=+$G(^IBT(356.9,+$O(^IBT(356.9,"ATP",DGPMA,+$O(^IBT(356.9,"ATP",DGPMA,0)),0)),0))
"RTN","IBTRV2",107,0)
 F  S DX=$O(^IBT(356.9,"C",DGPMA,DX)) Q:'DX  S X=$G(^IBT(356.9,DX,0)) I $P(X,"^",4)=2 S IBCNT=IBCNT+1,ICDDX(IBCNT)=+X
"RTN","IBTRV2",108,0)
 ;
"RTN","IBTRV2",109,0)
 S IBCNT=0,J=""
"RTN","IBTRV2",110,0)
 F  S J=$O(^IBT(356.91,"APP",DGPMA,J)) Q:'J  S PR="" F  S PR=$O(^IBT(356.91,"APP",DGPMA,J,PR)) Q:'PR  S IBCNT=IBCNT+1,ICDPRC(IBCNT)=+$G(^IBT(356.91,PR,0))
"RTN","IBTRV2",111,0)
 ;
"RTN","IBTRV2",112,0)
 I $D(ICDDX(1)) S ICDDATE=$$TRNDATE^IBACSV(IBTRN) D ^ICDDRG
"RTN","IBTRV2",113,0)
COMDRGQ Q ICDDRG
"RTN","IBTRV2",114,0)
 ;
"RTN","IBTRV2",115,0)
DISPDRG(DGPMCA) ; -- Display drg's
"RTN","IBTRV2",116,0)
 N I,J,IBDRG
"RTN","IBTRV2",117,0)
 W !!,"Current Interim DRGs on File:"
"RTN","IBTRV2",118,0)
 S I=0,IBCNT=0 F  S I=$O(^IBT(356.93,"AMVD",DGPMCA,I)) Q:'I  S J=0 F  S J=$O(^IBT(356.93,"AMVD",DGPMCA,I,J)) Q:'J  D
"RTN","IBTRV2",119,0)
 .S IBDRG=$G(^IBT(356.93,J,0))
"RTN","IBTRV2",120,0)
 .W !?5,$$DAT1^IBOUTL($P(IBDRG,"^",3)),?16,+IBDRG," - ",$$DRGTD^IBACSV(+IBDRG,$P(IBDRG,"^",3))
"RTN","IBTRV2",121,0)
 .S IBCNT=IBCNT+1
"RTN","IBTRV2",122,0)
 I IBCNT<1 W !?5,"None on file."
"RTN","IBTRV2",123,0)
 W !
"RTN","IBTRV2",124,0)
 Q
"RTN","IBTRVD")
0^6^B7583123
"RTN","IBTRVD",1,0)
IBTRVD ;ALB/AAS - CLAIMS TRACKING - EXPANDED REVIEW SCREEN;02-JUL-1993
"RTN","IBTRVD",2,0)
 ;;2.0;INTEGRATED BILLING;**266**;21-MAR-94
"RTN","IBTRVD",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBTRVD",4,0)
% ;
"RTN","IBTRVD",5,0)
EN ; -- main entry point for IBT EXPAND/EDIT REVIEW from menus
"RTN","IBTRVD",6,0)
 K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD
"RTN","IBTRVD",7,0)
 I '$D(IBTRV) G ^IBTRV
"RTN","IBTRVD",8,0)
 D EN^VALM("IBT EXPAND/EDIT REVIEW")
"RTN","IBTRVD",9,0)
 Q
"RTN","IBTRVD",10,0)
 ;
"RTN","IBTRVD",11,0)
HDR ; -- header code
"RTN","IBTRVD",12,0)
 D PID^VADPT
"RTN","IBTRVD",13,0)
 S VALMHDR(1)="Expanded Review for: "_$$PT^IBTUTL1(DFN)_"   ROI:"_$$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31))
"RTN","IBTRVD",14,0)
 S VALMHDR(2)="                for: "_$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^")_" on "_$$DAT1^IBOUTL(+IBTRVD)
"RTN","IBTRVD",15,0)
 Q
"RTN","IBTRVD",16,0)
 ;
"RTN","IBTRVD",17,0)
INIT ; -- init variables and list array
"RTN","IBTRVD",18,0)
 N IBTRND,IBTRVD,IBTRVD1,IBTRTP,VAIN,VAINDT
"RTN","IBTRVD",19,0)
 K VALMQUIT
"RTN","IBTRVD",20,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBTRVD",21,0)
 D BLD,HDR
"RTN","IBTRVD",22,0)
 Q
"RTN","IBTRVD",23,0)
 ;
"RTN","IBTRVD",24,0)
BLD ; -- build dispaly
"RTN","IBTRVD",25,0)
 K ^TMP("IBTRVD",$J),^TMP("IBTRVDDX",$J)
"RTN","IBTRVD",26,0)
 S IBTRND=$G(^IBT(356,IBTRN,0))
"RTN","IBTRVD",27,0)
 S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
"RTN","IBTRVD",28,0)
 S IBTRVD1=$G(^IBT(356.1,+IBTRV,1))
"RTN","IBTRVD",29,0)
 S IBTRTP=$$TRTP^IBTRV(IBTRV)
"RTN","IBTRVD",30,0)
 F I=1:1:28 D BLANK^IBTRED(.I)
"RTN","IBTRVD",31,0)
 D KILL^VALM10()
"RTN","IBTRVD",32,0)
 S VALMCNT=28
"RTN","IBTRVD",33,0)
 D ^IBTRVD0,COMMENT,CLIN
"RTN","IBTRVD",34,0)
 Q
"RTN","IBTRVD",35,0)
 ;
"RTN","IBTRVD",36,0)
 ;
"RTN","IBTRVD",37,0)
CLIN ; -- Clinical info plus DRG/los information
"RTN","IBTRVD",38,0)
 N OFFSET,START,DGPM,IBDT,IBDR
"RTN","IBTRVD",39,0)
 S START=17,OFFSET=45
"RTN","IBTRVD",40,0)
 ;D SET^IBCNSP(START,OFFSET," Clinical Information ",IORVON,IORVOFF)
"RTN","IBTRVD",41,0)
 D CLIN1^IBTRED0
"RTN","IBTRVD",42,0)
 Q:$$TRTP^IBTRE1(IBTRN)>1
"RTN","IBTRVD",43,0)
 S DGPM=+$P(^IBT(356,IBTRN,0),"^",5)
"RTN","IBTRVD",44,0)
 S IBDT=0 F  S IBDT=$O(^IBT(356.93,"AMVD",+DGPM,IBDT)) Q:'IBDT  S IBDR=$O(^IBT(356.93,"AMVD",+DGPM,IBDT,0))
"RTN","IBTRVD",45,0)
 S IBDR=$G(^IBT(356.93,+$G(IBDR),0))
"RTN","IBTRVD",46,0)
 D SET^IBCNSP(START+6,OFFSET,"   Interim DRG: "_$S(+IBDR:+IBDR_" - "_$$DRGTD^IBACSV(+IBDR,$P(IBDR,"^",3))_" on "_$$DAT1^IBOUTL($P(IBDR,"^",3)),1:""))
"RTN","IBTRVD",47,0)
 D SET^IBCNSP(START+7,OFFSET," Estimate ALOS: "_$S(+IBDR:$J($P(IBDR,"^",4),6,1),1:""))
"RTN","IBTRVD",48,0)
 D SET^IBCNSP(START+8,OFFSET,"Days Remaining: "_$S(+IBDR:$J($P(IBDR,"^",5),6),1:""))
"RTN","IBTRVD",49,0)
 Q
"RTN","IBTRVD",50,0)
 ;
"RTN","IBTRVD",51,0)
COMMENT ; -- Display Comment
"RTN","IBTRVD",52,0)
 N OFFSET,START,I,IBLCNT
"RTN","IBTRVD",53,0)
 S START=27,OFFSET=2
"RTN","IBTRVD",54,0)
 D SET^IBCNSP(START,OFFSET," Review Comments ",IORVON,IORVOFF)
"RTN","IBTRVD",55,0)
 S (IBLCNT,IBI)=0 F  S IBI=$O(^IBT(356.1,IBTRV,11,IBI)) Q:IBI<1  D
"RTN","IBTRVD",56,0)
 .S IBLCNT=IBLCNT+1
"RTN","IBTRVD",57,0)
 .D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^IBT(356.1,IBTRV,11,IBI,0)),1,80))
"RTN","IBTRVD",58,0)
 Q
"RTN","IBTRVD",59,0)
 ;
"RTN","IBTRVD",60,0)
HELP ; -- help code
"RTN","IBTRVD",61,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBTRVD",62,0)
 Q
"RTN","IBTRVD",63,0)
 ;
"RTN","IBTRVD",64,0)
EXIT ; -- exit code
"RTN","IBTRVD",65,0)
 K VALMQUIT,IBTRV
"RTN","IBTRVD",66,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","IBTRVD",67,0)
 Q
"UP",399,399.0304,-1)
399^CP
"UP",399,399.0304,0)
399.0304
"UP",399,399.042,-1)
399^RC
"UP",399,399.042,0)
399.042
"UP",399,399.30416,-2)
399^CP
"UP",399,399.30416,-1)
399.0304^MOD
"UP",399,399.30416,0)
399.30416
"VER")
8.0^22.0
"^DD",362.3,362.3,.01,0)
DIAGNOSIS^R*P80'^ICD9(^0;1^S ICDVDT=$$BDATE^IBACSV(+$P($G(^IBA(362.3,+$G(DA),0)),U,2)),DIC("S")="I $$ICD9ACT^IBACSV(+Y,ICDVDT),'$$DXDUP^IBCU1(+Y,$G(DA)),$$DXBSTAT^IBCU1($G(DA))<3" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",362.3,362.3,.01,1,0)
^.1^^-1
"^DD",362.3,362.3,.01,1,1,0)
362.3^B
"^DD",362.3,362.3,.01,1,1,1)
S ^IBA(362.3,"B",$E(X,1,30),DA)=""
"^DD",362.3,362.3,.01,1,1,2)
K ^IBA(362.3,"B",$E(X,1,30),DA)
"^DD",362.3,362.3,.01,1,2,0)
362.3^AIFN^MUMPS
"^DD",362.3,362.3,.01,1,2,1)
S:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AIFN"_+$P(^(0),U,2),+X,DA)=""
"^DD",362.3,362.3,.01,1,2,2)
K:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AIFN"_+$P(^(0),U,2),+X,DA)
"^DD",362.3,362.3,.01,1,2,"%D",0)
^^2^2^2940214^^^^
"^DD",362.3,362.3,.01,1,2,"%D",1,0)
Special x-ref set up specifically to provide a regular x-ref of a bill and
"^DD",362.3,362.3,.01,1,2,"%D",2,0)
all it's diagnoses for easy look-up.
"^DD",362.3,362.3,.01,1,2,"DT")
2931117
"^DD",362.3,362.3,.01,3)
Enter a diagnosis for this bill.  Duplicates are not allowed.
"^DD",362.3,362.3,.01,4)
D HELP^IBCSC4D
"^DD",362.3,362.3,.01,12)
Only active diagnosis, no duplicates for a bill, and bill must not be authorized or cancelled.
"^DD",362.3,362.3,.01,12.1)
S ICDVDT=$$BDATE^IBACSV(+$P($G(^IBA(362.3,+$G(DA),0)),U,2)),DIC("S")="I $$ICD9ACT^IBACSV(+Y,ICDVDT),'$$DXDUP^IBCU1(+Y,$G(DA)),$$DXBSTAT^IBCU1($G(DA))<3"
"^DD",362.3,362.3,.01,21,0)
^^1^1^2960530^^^^
"^DD",362.3,362.3,.01,21,1,0)
Enter an active diagnosis for this bill.
"^DD",362.3,362.3,.01,23,0)
^^1^1^2960530^^^^
"^DD",362.3,362.3,.01,23,1,0)
All diagnosis for a bill are stored here, beginning with IB v2.0.
"^DD",362.3,362.3,.01,"DT")
3040514
"^DD",399,399,215,0)
ADMITTING DIAGNOSIS^*P80'^ICD9(^U2;1^S ICDVDT=$$BDATE^IBACSV(+$G(DA)),DIC("S")="I $$ICD9ACT^IBACSV(+Y,ICDVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$ICD9^IBACSV(+Y,ICDVDT),U,3),,""?0"")" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399,215,3)
Enter the code for the admitting diagnosis.
"^DD",399,399,215,5,1,0)
362.3^.03^2
"^DD",399,399,215,12)
Only codes active for the date of service may be selected.
"^DD",399,399,215,12.1)
S ICDVDT=$$BDATE^IBACSV(+$G(DA)),DIC("S")="I $$ICD9ACT^IBACSV(+Y,ICDVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$ICD9^IBACSV(+Y,ICDVDT),U,3),,""?0"")"
"^DD",399,399,215,21,0)
^^4^4^2931220^^^^
"^DD",399,399,215,21,1,0)
The ICD-9 diagnosis code provided at the time of admission as stated
"^DD",399,399,215,21,2,0)
by the physician.
"^DD",399,399,215,21,3,0)
 
"^DD",399,399,215,21,4,0)
The admitting diagnosis code will be printed in Form Locator 76 on the UB-92.
"^DD",399,399,215,"DT")
3040708
"^DD",399,399,304,0)
PROCEDURES^399.0304IVA^^CP;0
"^DD",399,399,304,21,0)
^^1^1^2940214^^^^
"^DD",399,399,304,21,1,0)
These are ICD or CPT procedures that are associated with this bill.
"^DD",399,399,304,23,0)
^^1^1^2940120^^^^
"^DD",399,399,304,23,1,0)
 
"^DD",399,399,304,"DT")
2911101
"^DD",399,399.0304,0)
PROCEDURES SUB-FIELD^^50.08^31
"^DD",399,399.0304,0,"NM","PROCEDURES")

"^DD",399,399.0304,.01,0)
PROCEDURES^MV^^0;1^
"^DD",399,399.0304,.01,1,0)
^.1
"^DD",399,399.0304,.01,1,1,0)
399.0304^B
"^DD",399,399.0304,.01,1,1,1)
S ^DGCR(399,DA(1),"CP","B",$E(X,1,30),DA)=""
"^DD",399,399.0304,.01,1,1,2)
K ^DGCR(399,DA(1),"CP","B",$E(X,1,30),DA)
"^DD",399,399.0304,.01,1,1,3)
Required Index for Variable Pointer
"^DD",399,399.0304,.01,1,2,0)
399^ASD^MUMPS
"^DD",399,399.0304,.01,1,2,1)
I $P(X,";",2)="ICPT(",$D(^DGCR(399,DA(1),"CP",DA,0)),$P(^(0),"^",2) S ^DGCR(399,"ASD",-$P(^(0),"^",2),+X,DA(1),DA)=""
"^DD",399,399.0304,.01,1,2,2)
I $P(X,";",2)="ICPT(",$D(^DGCR(399,DA(1),"CP",DA,0)),$P(^(0),"^",2) K ^DGCR(399,"ASD",-$P(^(0),"^",2),+X,DA(1),DA)
"^DD",399,399.0304,.01,1,2,3)
DO NOT DELETE
"^DD",399,399.0304,.01,1,2,"%D",0)
^^1^1^2930513^^^
"^DD",399,399.0304,.01,1,2,"%D",1,0)
Index procedure date and all CPT procedures.
"^DD",399,399.0304,.01,1,2,"DT")
2920311
"^DD",399,399.0304,.01,1,3,0)
^^TRIGGER^399.0304^20
"^DD",399,399.0304,.01,1,3,1)
Q
"^DD",399,399.0304,.01,1,3,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X="" X ^DD(399.0304,.01,1,3,2.4)
"^DD",399,399.0304,.01,1,3,2.4)
S DIH=$G(^DGCR(399,DIV(0),"CP",DIV(1),0)),DIV=X S $P(^(0),U,20)=DIV,DIH=399.0304,DIG=20 D ^DICR
"^DD",399,399.0304,.01,1,3,3)
Do Not Delete
"^DD",399,399.0304,.01,1,3,"%D",0)
^.101^1^1^3010510^^
"^DD",399,399.0304,.01,1,3,"%D",1,0)
Delete the Outpatient Encounter link if the Procedure is modified.
"^DD",399,399.0304,.01,1,3,"CREATE VALUE")
NO EFFECT
"^DD",399,399.0304,.01,1,3,"DELETE VALUE")
@
"^DD",399,399.0304,.01,1,3,"DT")
3010510
"^DD",399,399.0304,.01,1,3,"FIELD")
OUTPATIENT ENCOUNTER
"^DD",399,399.0304,.01,3)
Procedure coding must match the PROCEDURE CODING METHOD entry for this bill.
"^DD",399,399.0304,.01,4)
D 3^IBCSCH1
"^DD",399,399.0304,.01,7.5)
D ^IBCU7
"^DD",399,399.0304,.01,21,0)
^^2^2^2930513^^^^
"^DD",399,399.0304,.01,21,1,0)
These are ICD, CPT, or HCFA procedure codes associated with the episode
"^DD",399,399.0304,.01,21,2,0)
of care on this bill.
"^DD",399,399.0304,.01,23,0)
^^1^1^2930513^^^
"^DD",399,399.0304,.01,23,1,0)
 
"^DD",399,399.0304,.01,"DEL",1,0)
N IBZ S IBZ=$$RXLINK^IBCSC5C(DA(1),DA) I IBZ D EN^DDIOL("  Can't delete this procedure while linked to RX revenue code #"_IBZ)
"^DD",399,399.0304,.01,"DT")
3040708
"^DD",399,399.0304,.01,"V",0)
^.12P^2^2
"^DD",399,399.0304,.01,"V",1,0)
81^CPT^1^CPT^y^n
"^DD",399,399.0304,.01,"V",1,1)
S ICPTVDT=$$BDATE^IBACSV($G(DA(1)),$G(DA)),DIC("S")="I $$CPTACT^IBACSV(+Y,ICPTVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$CPT^IBACSV(+Y,ICPTVDT),U,2),,""?0"")"
"^DD",399,399.0304,.01,"V",1,2)
Only codes active for the date of service may be selected.
"^DD",399,399.0304,.01,"V",2,0)
80.1^ICD operation/procedure^2^ICD^y^n
"^DD",399,399.0304,.01,"V",2,1)
S ICDVDT=$$BDATE^IBACSV($G(DA(1)),$G(DA)),DIC("S")="I $$ICD0ACT^IBACSV(+Y,ICDVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$ICD0^IBACSV(+Y,ICDVDT),U,4),,""?0"")"
"^DD",399,399.0304,.01,"V",2,2)
Only codes active for the date of service may be selected.
"^DD",399,399.042,.06,0)
PROCEDURE^*P81'^ICPT(^0;6^S ICPTVDT=$$BDATE^IBACSV($G(DA(1))),DIC("S")="I $$CPTACT^IBACSV(+Y,ICPTVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$CPT^IBACSV(+Y,ICPTVDT),U,2),,""?0"")" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399.042,.06,1,0)
^.1^^-1
"^DD",399,399.042,.06,1,1,0)
399^ASC1^MUMPS
"^DD",399,399.042,.06,1,1,1)
I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC1",$E(X,1,30),DA(1),DA)=""
"^DD",399,399.042,.06,1,1,2)
K ^DGCR(399,"ASC1",$E(X,1,30),DA(1),DA)
"^DD",399,399.042,.06,1,1,"%D",0)
^^1^1^2940310^^^^
"^DD",399,399.042,.06,1,1,"%D",1,0)
All Billable Ambulatory Surgery Codes (BASC) that have been billed.
"^DD",399,399.042,.06,1,1,"DT")
2930903
"^DD",399,399.042,.06,1,2,0)
399^ASC2^MUMPS
"^DD",399,399.042,.06,1,2,1)
I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC2",DA(1),$E(X,1,30),DA)=""
"^DD",399,399.042,.06,1,2,2)
K ^DGCR(399,"ASC2",DA(1),$E(X,1,30),DA)
"^DD",399,399.042,.06,1,2,"%D",0)
^^1^1^2940310^^^^
"^DD",399,399.042,.06,1,2,"%D",1,0)
All bills with charges for Billable Ambulatory Surgery Codes (BASC).
"^DD",399,399.042,.06,1,2,"DT")
2930903
"^DD",399,399.042,.06,12)
Only codes active for the date of service may be selected.
"^DD",399,399.042,.06,12.1)
S ICPTVDT=$$BDATE^IBACSV($G(DA(1))),DIC("S")="I $$CPTACT^IBACSV(+Y,ICPTVDT)",DIC("W")="D EN^DDIOL(""   ""_$P($$CPT^IBACSV(+Y,ICPTVDT),U,2),,""?0"")"
"^DD",399,399.042,.06,21,0)
3^^9^9^2930707^^
"^DD",399,399.042,.06,21,1,0)
This field may be used to associate the revenue code with a procedure.
"^DD",399,399.042,.06,21,2,0)
This will be needed primarily to accomodate the HCFA 1500 which allows
"^DD",399,399.042,.06,21,3,0)
charges by procedure not revenue code.  The charge associated with the
"^DD",399,399.042,.06,21,4,0)
revenue code will be printed on the HCFA 1500 claim form in the same line
"^DD",399,399.042,.06,21,5,0)
item as the procedure.
"^DD",399,399.042,.06,21,6,0)
 
"^DD",399,399.042,.06,21,7,0)
This field is also used for revenue codes that are for Billable Ambulatory
"^DD",399,399.042,.06,21,8,0)
Surgeries (BASC).  It identifies the CPT code of the surgery which is
"^DD",399,399.042,.06,21,9,0)
being billed for.
"^DD",399,399.042,.06,"DT")
3040708
"^DD",399,399.30416,.02,0)
CPT MODIFIER^R*P81.3'^DIC(81.3,^0;2^D B30416^IBACSV D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",399,399.30416,.02,1,0)
^.1
"^DD",399,399.30416,.02,1,1,0)
399.30416^C
"^DD",399,399.30416,.02,1,1,1)
S ^DGCR(399,DA(2),"CP",DA(1),"MOD","C",$E(X,1,30),DA)=""
"^DD",399,399.30416,.02,1,1,2)
K ^DGCR(399,DA(2),"CP",DA(1),"MOD","C",$E(X,1,30),DA)
"^DD",399,399.30416,.02,1,1,"DT")
3010205
"^DD",399,399.30416,.02,3)
ENTER A VALID CPT MODIFIER FOR THE PROCEDURE
"^DD",399,399.30416,.02,12)
Only acceptable modifiers for the CPT Code may be selected!
"^DD",399,399.30416,.02,12.1)
D B30416^IBACSV
"^DD",399,399.30416,.02,"DT")
3040429
**END**
**END**
