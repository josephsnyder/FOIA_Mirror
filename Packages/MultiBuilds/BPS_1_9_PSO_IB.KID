KIDS Distribution saved on Nov 01, 2010@10:04:25
BPS PSO IB BUNDLE 5.0
**KIDS**:BPS PSO IB BUNDLE 5.0^BPS*1.0*9^PSO*7.0*358^IB*2.0*434^

**INSTALL NAME**
BPS PSO IB BUNDLE 5.0
"BLD",8066,0)
BPS PSO IB BUNDLE 5.0^^1^3101101^n
"BLD",8066,6.3)
13
"BLD",8066,10,0)
^9.63^3^3
"BLD",8066,10,1,0)
BPS*1.0*9^1
"BLD",8066,10,2,0)
PSO*7.0*358^1
"BLD",8066,10,3,0)
IB*2.0*434^1
"BLD",8066,10,"B","BPS*1.0*9",1)

"BLD",8066,10,"B","IB*2.0*434",3)

"BLD",8066,10,"B","PSO*7.0*358",2)

"BLD",8066,"KRN",0)
^9.67PA^779.2^20
"BLD",8066,"KRN",.4,0)
.4
"BLD",8066,"KRN",.401,0)
.401
"BLD",8066,"KRN",.402,0)
.402
"BLD",8066,"KRN",.403,0)
.403
"BLD",8066,"KRN",.5,0)
.5
"BLD",8066,"KRN",.84,0)
.84
"BLD",8066,"KRN",3.6,0)
3.6
"BLD",8066,"KRN",3.8,0)
3.8
"BLD",8066,"KRN",9.2,0)
9.2
"BLD",8066,"KRN",9.8,0)
9.8
"BLD",8066,"KRN",19,0)
19
"BLD",8066,"KRN",19.1,0)
19.1
"BLD",8066,"KRN",101,0)
101
"BLD",8066,"KRN",409.61,0)
409.61
"BLD",8066,"KRN",771,0)
771
"BLD",8066,"KRN",779.2,0)
779.2
"BLD",8066,"KRN",870,0)
870
"BLD",8066,"KRN",8989.51,0)
8989.51
"BLD",8066,"KRN",8989.52,0)
8989.52
"BLD",8066,"KRN",8994,0)
8994
"BLD",8066,"KRN","B",.4,.4)

"BLD",8066,"KRN","B",.401,.401)

"BLD",8066,"KRN","B",.402,.402)

"BLD",8066,"KRN","B",.403,.403)

"BLD",8066,"KRN","B",.5,.5)

"BLD",8066,"KRN","B",.84,.84)

"BLD",8066,"KRN","B",3.6,3.6)

"BLD",8066,"KRN","B",3.8,3.8)

"BLD",8066,"KRN","B",9.2,9.2)

"BLD",8066,"KRN","B",9.8,9.8)

"BLD",8066,"KRN","B",19,19)

"BLD",8066,"KRN","B",19.1,19.1)

"BLD",8066,"KRN","B",101,101)

"BLD",8066,"KRN","B",409.61,409.61)

"BLD",8066,"KRN","B",771,771)

"BLD",8066,"KRN","B",779.2,779.2)

"BLD",8066,"KRN","B",870,870)

"BLD",8066,"KRN","B",8989.51,8989.51)

"BLD",8066,"KRN","B",8989.52,8989.52)

"BLD",8066,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
BPS*1.0*9
"BLD",8060,0)
BPS*1.0*9^E CLAIMS MGMT ENGINE^0^3101101^y
"BLD",8060,4,0)
^9.64PA^9002313.57^1
"BLD",8060,4,9002313.57,0)
9002313.57
"BLD",8060,4,9002313.57,2,0)
^9.641^9002313.57^1
"BLD",8060,4,9002313.57,2,9002313.57,0)
BPS LOG OF TRANSACTIONS  (File-top level)
"BLD",8060,4,9002313.57,2,9002313.57,1,0)
^9.6411^10308^1
"BLD",8060,4,9002313.57,2,9002313.57,1,10308,0)
OTHER COVERAGE CODE CALCULATED
"BLD",8060,4,9002313.57,222)
y^y^p^^^^n^^n
"BLD",8060,4,9002313.57,224)

"BLD",8060,4,"APDD",9002313.57,9002313.57)

"BLD",8060,4,"APDD",9002313.57,9002313.57,10308)

"BLD",8060,4,"B",9002313.57,9002313.57)

"BLD",8060,6.3)
18
"BLD",8060,"ABPKG")
n
"BLD",8060,"INID")
n^y^n
"BLD",8060,"INIT")
EN^BPS10P9
"BLD",8060,"KRN",0)
^9.67PA^779.2^20
"BLD",8060,"KRN",.4,0)
.4
"BLD",8060,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8060,"KRN",.401,0)
.401
"BLD",8060,"KRN",.402,0)
.402
"BLD",8060,"KRN",.403,0)
.403
"BLD",8060,"KRN",.5,0)
.5
"BLD",8060,"KRN",.84,0)
.84
"BLD",8060,"KRN",3.6,0)
3.6
"BLD",8060,"KRN",3.8,0)
3.8
"BLD",8060,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",8060,"KRN",3.8,"NM",1,0)
BPS TRICARE^^0
"BLD",8060,"KRN",3.8,"NM","B","BPS TRICARE",1)

"BLD",8060,"KRN",9.2,0)
9.2
"BLD",8060,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",8060,"KRN",9.8,0)
9.8
"BLD",8060,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",8060,"KRN",9.8,"NM",1,0)
BPS10P9^^0^B2638132
"BLD",8060,"KRN",9.8,"NM",2,0)
BPSNCPD1^^0^B45314557
"BLD",8060,"KRN",9.8,"NM",3,0)
BPSRPT9A^^0^B82830891
"BLD",8060,"KRN",9.8,"NM",4,0)
BPSPRRX^^0^B106329171
"BLD",8060,"KRN",9.8,"NM",5,0)
BPSPRRX1^^0^B13134938
"BLD",8060,"KRN",9.8,"NM",6,0)
BPSPRRX4^^0^B20637795
"BLD",8060,"KRN",9.8,"NM",7,0)
BPSBUTL^^0^B54583850
"BLD",8060,"KRN",9.8,"NM",8,0)
BPSSCRU3^^0^B31012225
"BLD",8060,"KRN",9.8,"NM","B","BPS10P9",1)

"BLD",8060,"KRN",9.8,"NM","B","BPSBUTL",7)

"BLD",8060,"KRN",9.8,"NM","B","BPSNCPD1",2)

"BLD",8060,"KRN",9.8,"NM","B","BPSPRRX",4)

"BLD",8060,"KRN",9.8,"NM","B","BPSPRRX1",5)

"BLD",8060,"KRN",9.8,"NM","B","BPSPRRX4",6)

"BLD",8060,"KRN",9.8,"NM","B","BPSRPT9A",3)

"BLD",8060,"KRN",9.8,"NM","B","BPSSCRU3",8)

"BLD",8060,"KRN",19,0)
19
"BLD",8060,"KRN",19,"NM",0)
^9.68A^^
"BLD",8060,"KRN",19.1,0)
19.1
"BLD",8060,"KRN",101,0)
101
"BLD",8060,"KRN",409.61,0)
409.61
"BLD",8060,"KRN",771,0)
771
"BLD",8060,"KRN",779.2,0)
779.2
"BLD",8060,"KRN",870,0)
870
"BLD",8060,"KRN",8989.51,0)
8989.51
"BLD",8060,"KRN",8989.52,0)
8989.52
"BLD",8060,"KRN",8994,0)
8994
"BLD",8060,"KRN","B",.4,.4)

"BLD",8060,"KRN","B",.401,.401)

"BLD",8060,"KRN","B",.402,.402)

"BLD",8060,"KRN","B",.403,.403)

"BLD",8060,"KRN","B",.5,.5)

"BLD",8060,"KRN","B",.84,.84)

"BLD",8060,"KRN","B",3.6,3.6)

"BLD",8060,"KRN","B",3.8,3.8)

"BLD",8060,"KRN","B",9.2,9.2)

"BLD",8060,"KRN","B",9.8,9.8)

"BLD",8060,"KRN","B",19,19)

"BLD",8060,"KRN","B",19.1,19.1)

"BLD",8060,"KRN","B",101,101)

"BLD",8060,"KRN","B",409.61,409.61)

"BLD",8060,"KRN","B",771,771)

"BLD",8060,"KRN","B",779.2,779.2)

"BLD",8060,"KRN","B",870,870)

"BLD",8060,"KRN","B",8989.51,8989.51)

"BLD",8060,"KRN","B",8989.52,8989.52)

"BLD",8060,"KRN","B",8994,8994)

"BLD",8060,"QDEF")
^^^^^^^^^^
"BLD",8060,"QUES",0)
^9.62^^
"BLD",8060,"REQB",0)
^9.611^1^1
"BLD",8060,"REQB",1,0)
BPS*1.0*8^2
"BLD",8060,"REQB","B","BPS*1.0*8",1)

"FIA",9002313.57)
BPS LOG OF TRANSACTIONS
"FIA",9002313.57,0)
^BPSTL(
"FIA",9002313.57,0,0)
9002313.57
"FIA",9002313.57,0,1)
y^y^p^^^^n^^n
"FIA",9002313.57,0,10)

"FIA",9002313.57,0,11)

"FIA",9002313.57,0,"RLRO")

"FIA",9002313.57,0,"VR")
1.0^BPS
"FIA",9002313.57,9002313.57)
1
"FIA",9002313.57,9002313.57,10308)

"INIT")
EN^BPS10P9
"KRN",3.8,6221,-1)
0^1
"KRN",3.8,6221,0)
BPS TRICARE^PU^^^^^
"KRN",3.8,6221,2,0)
^3.801^1^1^3100825^^^
"KRN",3.8,6221,2,1,0)
TO RECEIVE TRICARE RX NOT PROCESSED FOR SITE.
"KRN",3.8,6221,3)

"MBREQ")
1
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"PKG",570,-1)
1^1
"PKG",570,0)
E CLAIMS MGMT ENGINE^BPS^ELECTRONIC CLAIMS MGT
"PKG",570,20,0)
^9.402P^^
"PKG",570,22,0)
^9.49I^1^1
"PKG",570,22,1,0)
1.0^3041008^3041108^66481
"PKG",570,22,1,"PAH",1,0)
9^3101101^101020
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","BPS10P9")
0^1^B2638132
"RTN","BPS10P9",1,0)
BPS10P9 ;ALB/CNF - TRICARE ENHANCEMENT POST INSTALL UPDATES BPS*1*9 ;9/9/10
"RTN","BPS10P9",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**9**;JUN 2004;Build 18
"RTN","BPS10P9",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","BPS10P9",4,0)
 ;
"RTN","BPS10P9",5,0)
 Q                ;No entry from top
"RTN","BPS10P9",6,0)
 ;
"RTN","BPS10P9",7,0)
EN ;Entry
"RTN","BPS10P9",8,0)
 ;
"RTN","BPS10P9",9,0)
 D BMES^XPDUTL("Begin Post Installation Processing for patch BPS*1*9")
"RTN","BPS10P9",10,0)
 ;
"RTN","BPS10P9",11,0)
 ;Add TRICARE Reject Code eT to BPS NCPDP REJECT CODE dictionary, #9002313.93
"RTN","BPS10P9",12,0)
 D ET
"RTN","BPS10P9",13,0)
 ;
"RTN","BPS10P9",14,0)
 D BMES^XPDUTL("End Post Installation Processing for patch BPS*1*9")
"RTN","BPS10P9",15,0)
 ;
"RTN","BPS10P9",16,0)
 Q
"RTN","BPS10P9",17,0)
 ;
"RTN","BPS10P9",18,0)
ET ;Add TRICARE Reject Code eT to BPS NCPDP REJECT CODE dictionary, #9002313.93
"RTN","BPS10P9",19,0)
 ;
"RTN","BPS10P9",20,0)
 N X,Y,DIC,DIE,DR,DA,D0
"RTN","BPS10P9",21,0)
 ;
"RTN","BPS10P9",22,0)
 D BMES^XPDUTL("Add TRICARE Reject Code eT to BPS NCPDP REJECT CODE dictionary")
"RTN","BPS10P9",23,0)
 ;
"RTN","BPS10P9",24,0)
 ;Quit if the code eT already exist
"RTN","BPS10P9",25,0)
 S X=$O(^BPSF(9002313.93,"B","eT",0))
"RTN","BPS10P9",26,0)
 I X D BMES^XPDUTL("Entry already exists") Q
"RTN","BPS10P9",27,0)
 ;
"RTN","BPS10P9",28,0)
 ;Add the entry
"RTN","BPS10P9",29,0)
 S DIC="^BPSF(9002313.93,",X="eT"
"RTN","BPS10P9",30,0)
 S DIC("DR")=".02///TRICARE-DRUG NON BILLABLE",DIC(0)="F"
"RTN","BPS10P9",31,0)
 D FILE^DICN
"RTN","BPS10P9",32,0)
 ;
"RTN","BPS10P9",33,0)
 I Y D BMES^XPDUTL("Entry eT successfully added") Q
"RTN","BPS10P9",34,0)
 ;
"RTN","BPS10P9",35,0)
 D BMES^XPDUTL("Error when adding TRICARE Reject Code. Please log a Remedy ticket!")
"RTN","BPS10P9",36,0)
 ;
"RTN","BPS10P9",37,0)
 Q
"RTN","BPSBUTL")
0^7^B54583850
"RTN","BPSBUTL",1,0)
BPSBUTL ;BHAM ISC/MFR/VA/DLF - IB Communication Utilities ;06/01/2004
"RTN","BPSBUTL",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,2,5,7,8,9**;JUN 2004;Build 18
"RTN","BPSBUTL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","BPSBUTL",4,0)
 ;Reference to STORESP^IBNCPDP supported by DBIA 4299
"RTN","BPSBUTL",5,0)
 Q
"RTN","BPSBUTL",6,0)
 ;
"RTN","BPSBUTL",7,0)
 ;CLAIM - pointer to #9002313.02
"RTN","BPSBUTL",8,0)
 ;TRNDX - ptr to #9002313.59
"RTN","BPSBUTL",9,0)
 ;REASON -  text name of the close reason
"RTN","BPSBUTL",10,0)
 ;PAPER - 1=drop to paper
"RTN","BPSBUTL",11,0)
 ;RELCOP - 1 (Yes) or 0 (No) release copay or not?
"RTN","BPSBUTL",12,0)
 ;COMMENT - comment
"RTN","BPSBUTL",13,0)
 ;ERROR - array by reference for error details
"RTN","BPSBUTL",14,0)
 ;
"RTN","BPSBUTL",15,0)
CLOSE(CLAIM,TRNDX,REASON,PAPER,RELCOP,COMMENT,ERROR) ; Send IB an update on the CLAIM status for a Closed Claim
"RTN","BPSBUTL",16,0)
 N DFN,BPSARRY,BILLNUM,CLAIMNFO,FILLNUM,RXIEN,TRANINFO
"RTN","BPSBUTL",17,0)
 ;
"RTN","BPSBUTL",18,0)
 ; - Data gathering
"RTN","BPSBUTL",19,0)
 D GETS^DIQ("9002313.59",TRNDX,"1.11;9","I","TRANINFO")
"RTN","BPSBUTL",20,0)
 S RXIEN=TRANINFO(9002313.59,TRNDX_",",1.11,"I")
"RTN","BPSBUTL",21,0)
 I $$RXAPI1^BPSUTIL1(RXIEN,.01)="" S ERROR="Prescription not found." Q
"RTN","BPSBUTL",22,0)
 S BPSARRY("FILL NUMBER")=TRANINFO(9002313.59,TRNDX_",",9,"I")
"RTN","BPSBUTL",23,0)
 D GETS^DIQ("9002313.02",CLAIM,"400*;401;402;403;426","","CLAIMNFO")
"RTN","BPSBUTL",24,0)
 S BPSARRY("FILL DATE")=$$EXT2FM^BPSOSU1(CLAIMNFO("9002313.0201","1,"_CLAIM_",","401"))
"RTN","BPSBUTL",25,0)
 S FILLNUM=+BPSARRY("FILL NUMBER")
"RTN","BPSBUTL",26,0)
 S DFN=$$RXAPI1^BPSUTIL1(RXIEN,2,"I")
"RTN","BPSBUTL",27,0)
 S BPSARRY("FILLED BY")=$$RXAPI1^BPSUTIL1(RXIEN,16,"I")
"RTN","BPSBUTL",28,0)
 S BPSARRY("PRESCRIPTION")=RXIEN
"RTN","BPSBUTL",29,0)
 S BPSARRY("BILLED")=$$DFF2EXT^BPSECFM($P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","426"),"DQ",2))
"RTN","BPSBUTL",30,0)
 S BPSARRY("CLAIMID")=$P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","402"),"D2",2)
"RTN","BPSBUTL",31,0)
 S BPSARRY("PLAN")=$P(^BPST(TRNDX,10,1,0),"^")
"RTN","BPSBUTL",32,0)
 S BPSARRY("STATUS")="CLOSED"
"RTN","BPSBUTL",33,0)
 S BPSARRY("PAID")=0
"RTN","BPSBUTL",34,0)
 S BPSARRY("RELEASE DATE")=$S(FILLNUM=0:$$RXAPI1^BPSUTIL1(RXIEN,31,"I"),1:$$RXSUBF1^BPSUTIL1(RXIEN,52,52.1,FILLNUM,17,"I"))
"RTN","BPSBUTL",35,0)
 S BPSARRY("USER")=DUZ
"RTN","BPSBUTL",36,0)
 S BPSARRY("EPHARM")=$$GET1^DIQ(9002313.59,TRNDX,1.07,"I")
"RTN","BPSBUTL",37,0)
 S BPSARRY("RXCOB")=$$COB59^BPSUTIL2(TRNDX)
"RTN","BPSBUTL",38,0)
 I REASON'="" D
"RTN","BPSBUTL",39,0)
 . S BPSARRY("CLOSE REASON")=$O(^IBE(356.8,"B",REASON,0))
"RTN","BPSBUTL",40,0)
 . S BPSARRY("DROP TO PAPER")=+$G(PAPER)
"RTN","BPSBUTL",41,0)
 . S BPSARRY("RELEASE COPAY")=+$G(RELCOP)
"RTN","BPSBUTL",42,0)
 I $G(COMMENT)]"" S BPSARRY("CLOSE COMMENT")=COMMENT
"RTN","BPSBUTL",43,0)
 ;
"RTN","BPSBUTL",44,0)
 ; If dropped to Paper, increment the counter in BPS Statistics
"RTN","BPSBUTL",45,0)
 I BPSARRY("DROP TO PAPER")=1 D INCSTAT^BPSOSUD("R",8)
"RTN","BPSBUTL",46,0)
 ;
"RTN","BPSBUTL",47,0)
 ; Call IB
"RTN","BPSBUTL",48,0)
 S BILLNUM=$$STORESP^IBNCPDP(DFN,.BPSARRY)
"RTN","BPSBUTL",49,0)
 Q
"RTN","BPSBUTL",50,0)
 ; Send IB an update on the CLAIM status for a restocked or deleted prescription
"RTN","BPSBUTL",51,0)
CLOSE2(RXIEN,BFILL,BWHERE) ;
"RTN","BPSBUTL",52,0)
 N IEN59,BPSARRY,DFN,BILLNUM,FILL,REASON
"RTN","BPSBUTL",53,0)
 N CLAIMNFO
"RTN","BPSBUTL",54,0)
 N DIE,DA,DR
"RTN","BPSBUTL",55,0)
 ;
"RTN","BPSBUTL",56,0)
 ; Check parameters
"RTN","BPSBUTL",57,0)
 I '$G(RXIEN) S ERROR="No prescription parameter" Q
"RTN","BPSBUTL",58,0)
 ;
"RTN","BPSBUTL",59,0)
 I $$RXAPI1^BPSUTIL1(RXIEN,.01)="" S ERROR="Prescription not found." Q
"RTN","BPSBUTL",60,0)
 I ",DDED,DE,RS,"'[(","_BWHERE_",") S ERROR="Invalid BWHERE parameter" Q
"RTN","BPSBUTL",61,0)
 ;
"RTN","BPSBUTL",62,0)
 ; Calculate the transaction IEN and see that it exists
"RTN","BPSBUTL",63,0)
 S FILL=".0000"_+BFILL
"RTN","BPSBUTL",64,0)
 S IEN59=RXIEN_"."_$E(FILL,$L(FILL)-3,$L(FILL))_"1"
"RTN","BPSBUTL",65,0)
 I '$D(^BPST(IEN59,0)) Q
"RTN","BPSBUTL",66,0)
 ;
"RTN","BPSBUTL",67,0)
 ; Get claim data
"RTN","BPSBUTL",68,0)
 S CLAIM=$P(^BPST(IEN59,0),"^",4)
"RTN","BPSBUTL",69,0)
 D GETS^DIQ("9002313.02",CLAIM,"400*;401;402;426","","CLAIMNFO")
"RTN","BPSBUTL",70,0)
 S BPSARRY("FILL NUMBER")=+BFILL
"RTN","BPSBUTL",71,0)
 S BPSARRY("FILL DATE")=$$EXT2FM^BPSOSU1(CLAIMNFO("9002313.0201","1,"_CLAIM_",","401"))
"RTN","BPSBUTL",72,0)
 ;
"RTN","BPSBUTL",73,0)
 ; Get prescription data
"RTN","BPSBUTL",74,0)
 S FILLNUM=BPSARRY("FILL NUMBER")
"RTN","BPSBUTL",75,0)
 S DFN=$$RXAPI1^BPSUTIL1(RXIEN,2,"I")
"RTN","BPSBUTL",76,0)
 S BPSARRY("FILLED BY")=$$RXAPI1^BPSUTIL1(RXIEN,16,"I")
"RTN","BPSBUTL",77,0)
 S BPSARRY("PRESCRIPTION")=RXIEN
"RTN","BPSBUTL",78,0)
 S BPSARRY("BILLED")=$$DFF2EXT^BPSECFM($P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","426"),"DQ",2))
"RTN","BPSBUTL",79,0)
 S BPSARRY("CLAIMID")=$P(CLAIMNFO("9002313.0201","1,"_CLAIM_",","402"),"D2",2)
"RTN","BPSBUTL",80,0)
 S BPSARRY("PLAN")=$P(^BPST(IEN59,10,1,0),"^")
"RTN","BPSBUTL",81,0)
 S BPSARRY("STATUS")="CLOSED"
"RTN","BPSBUTL",82,0)
 S BPSARRY("PAID")=0
"RTN","BPSBUTL",83,0)
 S BPSARRY("RELEASE DATE")=$S(FILLNUM=0:$$RXAPI1^BPSUTIL1(RXIEN,31,"I"),1:$$RXSUBF1^BPSUTIL1(RXIEN,52,52.1,FILLNUM,17,"I"))
"RTN","BPSBUTL",84,0)
 S BPSARRY("USER")=.5
"RTN","BPSBUTL",85,0)
 S BPSARRY("EPHARM")=$$GET1^DIQ(9002313.59,IEN59,1.07,"I")
"RTN","BPSBUTL",86,0)
 S BPSARRY("RXCOB")=$$COB59^BPSUTIL2(IEN59)
"RTN","BPSBUTL",87,0)
 ;
"RTN","BPSBUTL",88,0)
 ; Determine the reversal reason based on the BWHERE value
"RTN","BPSBUTL",89,0)
 I BWHERE="RS" S REASON="PRESCRIPTION NOT RELEASED"
"RTN","BPSBUTL",90,0)
 I BWHERE="DE"!(BWHERE="DDED") S REASON="PRESCRIPTION DELETED"
"RTN","BPSBUTL",91,0)
 I REASON]"" S BPSARRY("CLOSE REASON")=$O(^IBE(356.8,"B",REASON,0))
"RTN","BPSBUTL",92,0)
 ;
"RTN","BPSBUTL",93,0)
 ;if a refill was deleted while RX is still active (not deleted) then send DELETION OF REFILL comment for CT record
"RTN","BPSBUTL",94,0)
 I BWHERE="DE",$$RXSTATUS^BPSSCRU2(RXIEN)'=13 S BPSARRY("CLOSE COMMENT")="DELETION OF REFILL ONLY - ORIGINAL RX MAY REMAIN ACTIVE"
"RTN","BPSBUTL",95,0)
 ;
"RTN","BPSBUTL",96,0)
 ;
"RTN","BPSBUTL",97,0)
 ; Update IB
"RTN","BPSBUTL",98,0)
 S BILLNUM=$$STORESP^IBNCPDP(DFN,.BPSARRY)
"RTN","BPSBUTL",99,0)
 ;
"RTN","BPSBUTL",100,0)
 ; Update the claim file that the claim is closed and the reason why.
"RTN","BPSBUTL",101,0)
 S DIE="^BPSC(",DA=CLAIM
"RTN","BPSBUTL",102,0)
 S DR="901///1;902///"_$$NOW^XLFDT()_";903////.5;904///"_BPSARRY("CLOSE REASON")
"RTN","BPSBUTL",103,0)
 D ^DIE
"RTN","BPSBUTL",104,0)
 Q
"RTN","BPSBUTL",105,0)
 ;
"RTN","BPSBUTL",106,0)
 ; Function to return Transaction, claim, and response IENs
"RTN","BPSBUTL",107,0)
 ; Parameters:
"RTN","BPSBUTL",108,0)
 ;    RXI: Prescription IEN
"RTN","BPSBUTL",109,0)
 ;    RXR: Fill Number
"RTN","BPSBUTL",110,0)
 ; Returns:
"RTN","BPSBUTL",111,0)
 ;    IEN59^Claim IEN^Response IEN^Reversal Claim IEN^Reversal Response IEN
"RTN","BPSBUTL",112,0)
CLAIM(RXI,RXR) ;
"RTN","BPSBUTL",113,0)
 N IEN59,CLAIMIEN,RESPIEN,REVCLAIM,REVRESP
"RTN","BPSBUTL",114,0)
 I '$G(RXI) Q
"RTN","BPSBUTL",115,0)
 S IEN59=$$IEN59^BPSOSRX(RXI,RXR)
"RTN","BPSBUTL",116,0)
 I '$D(^BPST(IEN59,0)) Q ""
"RTN","BPSBUTL",117,0)
 S CLAIMIEN=$P(^BPST(IEN59,0),"^",4),RESPIEN=$P(^BPST(IEN59,0),"^",5)
"RTN","BPSBUTL",118,0)
 S REVCLAIM=$P($G(^BPST(IEN59,4)),"^",1),REVRESP=$P($G(^BPST(IEN59,4)),"^",2)
"RTN","BPSBUTL",119,0)
 Q IEN59_U_CLAIMIEN_U_RESPIEN_U_REVCLAIM_U_REVRESP
"RTN","BPSBUTL",120,0)
 ;
"RTN","BPSBUTL",121,0)
 ; NABP - Return the value in the Service Provider ID (201-B1) field
"RTN","BPSBUTL",122,0)
 ;   of the claim.  Note that as of the NPI release (BPS*1*2), this
"RTN","BPSBUTL",123,0)
 ;   API may return NPI instead of NABP/NCPDP
"RTN","BPSBUTL",124,0)
NABP(RXP,BFILL) ;
"RTN","BPSBUTL",125,0)
 I '$G(RXP) Q ""
"RTN","BPSBUTL",126,0)
 I $G(BFILL)="" S BFILL=0
"RTN","BPSBUTL",127,0)
 N BPSTIEN,BPSCIEN,DFILL,NABP
"RTN","BPSBUTL",128,0)
 S DFILL=$E($TR($J("",4-$L(BFILL))," ","0")_BFILL,1,4)
"RTN","BPSBUTL",129,0)
 S BPSTIEN=RXP_"."_DFILL_"1"
"RTN","BPSBUTL",130,0)
 I 'BPSTIEN Q ""
"RTN","BPSBUTL",131,0)
 S BPSCIEN=$P($G(^BPST(BPSTIEN,0)),U,4)
"RTN","BPSBUTL",132,0)
 I 'BPSCIEN Q ""
"RTN","BPSBUTL",133,0)
 S NABP=$P($G(^BPSC(BPSCIEN,200)),U)
"RTN","BPSBUTL",134,0)
 Q NABP
"RTN","BPSBUTL",135,0)
 ;
"RTN","BPSBUTL",136,0)
 ; DIVNCPDP - For a specific outpatient site, return the NPI & NCPDP.
"RTN","BPSBUTL",137,0)
 ; Note that the procedure name is misleading but when originally
"RTN","BPSBUTL",138,0)
 ;   coded, this procedure only returned NCPDP.
"RTN","BPSBUTL",139,0)
 ;
"RTN","BPSBUTL",140,0)
 ; Input
"RTN","BPSBUTL",141,0)
 ;   BPSDIV - Outpatient Site (#59)
"RTN","BPSBUTL",142,0)
 ; Output
"RTN","BPSBUTL",143,0)
 ;   "" - No BPSDIV passed in
"RTN","BPSBUTL",144,0)
 ;   NCPDP and NPI separated by a caret
"RTN","BPSBUTL",145,0)
DIVNCPDP(BPSDIV) ;
"RTN","BPSBUTL",146,0)
 N BPSPHARM,NPI,NCPDP
"RTN","BPSBUTL",147,0)
 I '$G(BPSDIV) Q "^"
"RTN","BPSBUTL",148,0)
 ;
"RTN","BPSBUTL",149,0)
 ; Get the NCPDP
"RTN","BPSBUTL",150,0)
 S NCPDP=""
"RTN","BPSBUTL",151,0)
 S BPSPHARM=$$GETPHARM^BPSUTIL(BPSDIV)
"RTN","BPSBUTL",152,0)
 I BPSPHARM S NCPDP=$$GET1^DIQ(9002313.56,BPSPHARM_",",.02)
"RTN","BPSBUTL",153,0)
 ;
"RTN","BPSBUTL",154,0)
 ; Get the NPI and validate it
"RTN","BPSBUTL",155,0)
 S NPI=+$$NPI^BPSNPI("Pharmacy_ID",BPSDIV)
"RTN","BPSBUTL",156,0)
 I NPI=-1 S NPI=""
"RTN","BPSBUTL",157,0)
 ;
"RTN","BPSBUTL",158,0)
 Q NCPDP_"^"_NPI
"RTN","BPSBUTL",159,0)
 ;
"RTN","BPSBUTL",160,0)
 ;ADDCOMM - Add a comment to a ECME claim
"RTN","BPSBUTL",161,0)
 ;Input:
"RTN","BPSBUTL",162,0)
 ; BPRX - ien in file #52 
"RTN","BPSBUTL",163,0)
 ; BPREF - refill number (0,1,2,...)
"RTN","BPSBUTL",164,0)
 ; BPRCMNT - comment text 
"RTN","BPSBUTL",165,0)
 ;Output:
"RTN","BPSBUTL",166,0)
 ;  1 - okay
"RTN","BPSBUTL",167,0)
 ; -1 - failed
"RTN","BPSBUTL",168,0)
ADDCOMM(BPRX,BPREF,BPRCMNT) ;
"RTN","BPSBUTL",169,0)
 N BP59,BPNOW,BPLCK,BPREC,BPDA,BPERR
"RTN","BPSBUTL",170,0)
 N %,%H,%I,X
"RTN","BPSBUTL",171,0)
 I $L(BPRX)<1 Q -1
"RTN","BPSBUTL",172,0)
 I $G(BPRCMNT)="" Q -1
"RTN","BPSBUTL",173,0)
 S BP59=BPRX_$S($L(+BPREF)=1:".000",1:".00")_+BPREF_"1" ;borrowed from CLOSE2 above
"RTN","BPSBUTL",174,0)
 I '$D(^BPST(BP59)) Q -1
"RTN","BPSBUTL",175,0)
 D NOW^%DTC
"RTN","BPSBUTL",176,0)
 S BPNOW=%
"RTN","BPSBUTL",177,0)
 L +^BPST(9002313.59111,+BP59):10
"RTN","BPSBUTL",178,0)
 S BPLCK=$T
"RTN","BPSBUTL",179,0)
 I 'BPLCK Q -1  ;quit
"RTN","BPSBUTL",180,0)
 D INSITEM^BPSCMT01(9002313.59111,+BP59,BPNOW)
"RTN","BPSBUTL",181,0)
 S BPREC=$O(^BPST(BP59,11,"B",BPNOW,99999999),-1)
"RTN","BPSBUTL",182,0)
 I BPREC>0 D
"RTN","BPSBUTL",183,0)
 . S BPDA(9002313.59111,BPREC_","_BP59_",",.02)=+$G(DUZ)
"RTN","BPSBUTL",184,0)
 . S BPDA(9002313.59111,BPREC_","_BP59_",",.03)=$E($G(BPRCMNT),1,63)
"RTN","BPSBUTL",185,0)
 . D FILE^DIE("","BPDA","BPERR")
"RTN","BPSBUTL",186,0)
 I BPLCK L -^BPST(9002313.59111,+BP59)
"RTN","BPSBUTL",187,0)
 I BPREC>0,'$D(BPERR) Q 1
"RTN","BPSBUTL",188,0)
 Q -1
"RTN","BPSBUTL",189,0)
 ;
"RTN","BPSBUTL",190,0)
 ;REOPEN - Reopen closed claim
"RTN","BPSBUTL",191,0)
 ;Input:
"RTN","BPSBUTL",192,0)
 ; BP59 - ien in BPS TRANSACTION file
"RTN","BPSBUTL",193,0)
 ; BP02 - ien in BPS CLAIMS file
"RTN","BPSBUTL",194,0)
 ; BPREOPDT - reopen date/time 
"RTN","BPSBUTL",195,0)
 ; BPDUZ - user DUZ (#200 ien)
"RTN","BPSBUTL",196,0)
 ; BPCOMM - reopen comment text
"RTN","BPSBUTL",197,0)
 ;Output:
"RTN","BPSBUTL",198,0)
 ; 0^message_error - error
"RTN","BPSBUTL",199,0)
 ; 1 - success
"RTN","BPSBUTL",200,0)
REOPEN(BP59,BP02,BPREOPDT,BPDUZ,BPCOMM) ;
"RTN","BPSBUTL",201,0)
 N RECIENS,BPDA,ERRARR,BPREFNO,BPRXIEN,BPFILLDT,BPCLMID,BPZ,BPSARRY,BPDFN,BPRETVAL,BPZ1
"RTN","BPSBUTL",202,0)
 S BPDFN=$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSBUTL",203,0)
 S BPREFNO=$P($G(^BPST(BP59,1)),U)
"RTN","BPSBUTL",204,0)
 I BPREFNO="" Q "0^Null Fill Number"
"RTN","BPSBUTL",205,0)
 S BPRXIEN=$P($G(^BPST(BP59,1)),U,11)
"RTN","BPSBUTL",206,0)
 I BPRXIEN="" Q "0^Null RX ien Number"
"RTN","BPSBUTL",207,0)
 ;in VA there is only one med/claim but in some cases it can different than "1"
"RTN","BPSBUTL",208,0)
 ;so take the latest one
"RTN","BPSBUTL",209,0)
 S BPZ=$O(^BPSC(BP02,400,9999999),-1)
"RTN","BPSBUTL",210,0)
 I BPRXIEN="" Q "0^Database Error"
"RTN","BPSBUTL",211,0)
 S BPFILLDT=$$YMD2FM^BPSSCRU6(+$P($G(^BPSC(BP02,400,+BPZ,400)),U))
"RTN","BPSBUTL",212,0)
 S BPCLMID=$$CONVCLID^BPSSCRU6($P($G(^BPSC(BP02,400,+BPZ,400)),U,2))
"RTN","BPSBUTL",213,0)
 ;============
"RTN","BPSBUTL",214,0)
 ;Now update ECME database
"RTN","BPSBUTL",215,0)
 S BPRETVAL=$$UPDREOP^BPSREOP1(BP02,0,BPREOPDT,BPDUZ,BPCOMM)
"RTN","BPSBUTL",216,0)
 I +BPRETVAL=0 D  Q BPRETVAL
"RTN","BPSBUTL",217,0)
 . ;try to reverse it in case it was done partially
"RTN","BPSBUTL",218,0)
 . I $$UPDREOP^BPSREOP1(BP02,1,"@",+BPDUZ,"@")
"RTN","BPSBUTL",219,0)
 ;============
"RTN","BPSBUTL",220,0)
 ;Now call IB API for "REOPEN" event
"RTN","BPSBUTL",221,0)
 S BPSARRY("STATUS")="REOPEN"
"RTN","BPSBUTL",222,0)
 S BPSARRY("FILL DATE")=BPFILLDT
"RTN","BPSBUTL",223,0)
 S BPSARRY("FILL NUMBER")=BPREFNO
"RTN","BPSBUTL",224,0)
 S BPSARRY("PRESCRIPTION")=BPRXIEN
"RTN","BPSBUTL",225,0)
 S BPSARRY("CLAIMID")=BPCLMID
"RTN","BPSBUTL",226,0)
 S BPSARRY("DRUG")=$$DRUGIEN^BPSSCRU6(BPRXIEN,BPDFN)
"RTN","BPSBUTL",227,0)
 S BPSARRY("PLAN")=$P($G(^BPST(BP59,10,1,0)),"^")
"RTN","BPSBUTL",228,0)
 S BPSARRY("USER")=BPDUZ
"RTN","BPSBUTL",229,0)
 S BPSARRY("REOPEN COMMENT")=BPCOMM
"RTN","BPSBUTL",230,0)
 S BPSARRY("EPHARM")=$$GET1^DIQ(9002313.59,BP59,1.07,"I")
"RTN","BPSBUTL",231,0)
 S BPSARRY("RXCOB")=$$COB59^BPSUTIL2(BP59)
"RTN","BPSBUTL",232,0)
 S BPRETVAL=$$STORESP^IBNCPDP(BPDFN,.BPSARRY)
"RTN","BPSBUTL",233,0)
 ;if successful
"RTN","BPSBUTL",234,0)
 I +BPRETVAL>0 Q "1^ReOpening Claim: "_$P($G(^BPSC(BP02,0)),U)_" ... OK"
"RTN","BPSBUTL",235,0)
 ;===========
"RTN","BPSBUTL",236,0)
 ;if it was unsuccessful
"RTN","BPSBUTL",237,0)
 ;reverse ECME database (keep the user who made the attempt)
"RTN","BPSBUTL",238,0)
 I $$UPDREOP^BPSREOP1(BP02,1,"@",+BPDUZ,"@")
"RTN","BPSBUTL",239,0)
 ;return IB error message
"RTN","BPSBUTL",240,0)
 Q BPRETVAL
"RTN","BPSNCPD1")
0^2^B45314557
"RTN","BPSNCPD1",1,0)
BPSNCPD1 ;BHAM ISC/LJE - Pharmacy API part 2 ;06/16/2004
"RTN","BPSNCPD1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,3,5,6,7,8,9**;JUN 2004;Build 18
"RTN","BPSNCPD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","BPSNCPD1",4,0)
 ;
"RTN","BPSNCPD1",5,0)
 ; Procedure STARRAY - Retrieve information for API call to IB and store in BPSARRY
"RTN","BPSNCPD1",6,0)
 ; Incoming Parameters
"RTN","BPSNCPD1",7,0)
 ;    BRXIEN - Prescription IEN
"RTN","BPSNCPD1",8,0)
 ;    BFILL  - Fill Number
"RTN","BPSNCPD1",9,0)
 ;    BWHERE - RX action
"RTN","BPSNCPD1",10,0)
 ;    BPSARRY  - Array that is built (passed by reference)
"RTN","BPSNCPD1",11,0)
 ;    BPSITE - OUTPATIENT SITE file #59 ien
"RTN","BPSNCPD1",12,0)
 ; background parameters:
"RTN","BPSNCPD1",13,0)
 ; DFN - patient's IEN
"RTN","BPSNCPD1",14,0)
 ; BILLNDC - NDC
"RTN","BPSNCPD1",15,0)
 ; BFILLDAT - fill date
"RTN","BPSNCPD1",16,0)
STARRAY(BRXIEN,BFILL,BWHERE,BPSARRY,BPSITE) ;
"RTN","BPSNCPD1",17,0)
 N DRUGIEN,BPARR,BPSARR,QTY
"RTN","BPSNCPD1",18,0)
 D RXAPI^BPSUTIL1(BRXIEN,"6;7;8;17;31","BPARR","I")
"RTN","BPSNCPD1",19,0)
 I BFILL>0 D RXSUBF^BPSUTIL1(BRXIEN,52,52.1,BFILL,"1;1.1;1.2;17","BPARR","I")
"RTN","BPSNCPD1",20,0)
 S BPSARRY("DFN")=DFN
"RTN","BPSNCPD1",21,0)
 S BPSARRY("DAYS SUPPLY")=$S(BFILL=0:$G(BPARR(52,BRXIEN,8,"I")),1:$G(BPARR(52.1,BFILL,1.1,"I")))
"RTN","BPSNCPD1",22,0)
 S BPSARRY("IEN")=BRXIEN
"RTN","BPSNCPD1",23,0)
 S BPSARRY("FILL NUMBER")=BFILL
"RTN","BPSNCPD1",24,0)
 S BPSARRY("NDC")=BILLNDC
"RTN","BPSNCPD1",25,0)
 S (BPSARRY("DRUG"),DRUGIEN)=BPARR(52,BRXIEN,6,"I")
"RTN","BPSNCPD1",26,0)
 S BPSARRY("DEA")=$$DRUGDIE^BPSUTIL1(DRUGIEN,3)
"RTN","BPSNCPD1",27,0)
 S BPSARRY("COST")=$S(BFILL=0:$G(BPARR(52,BRXIEN,17,"I")),1:$G(BPARR(52.1,BFILL,1.2,"I")))
"RTN","BPSNCPD1",28,0)
 S QTY=$S(BFILL=0:$G(BPARR(52,BRXIEN,7,"I")),1:$G(BPARR(52.1,BFILL,1,"I")))
"RTN","BPSNCPD1",29,0)
 S BPSARRY("QTY")=QTY     ; esg - 4/28/10 - use the Rx QTY at this point (*8)
"RTN","BPSNCPD1",30,0)
 S BPSARRY("FILL DATE")=BFILLDAT
"RTN","BPSNCPD1",31,0)
 S BPSARRY("RELEASE DATE")=$P($S(BFILL=0:$G(BPARR(52,BRXIEN,31,"I")),1:$G(BPARR(52.1,BFILL,17,"I"))),".")
"RTN","BPSNCPD1",32,0)
 S BPSARRY("SC/EI OVR")=0
"RTN","BPSNCPD1",33,0)
 ;determine BPS PHARMACY
"RTN","BPSNCPD1",34,0)
 I $G(BPSITE)>0 S BPSARRY("EPHARM")=$$GETPHARM^BPSUTIL(BPSITE)
"RTN","BPSNCPD1",35,0)
 ;
"RTN","BPSNCPD1",36,0)
 ; Add user so that it is stored correctly in the IB Event Log
"RTN","BPSNCPD1",37,0)
 ;  Note: Auto-Reversals (AREV) and CMOP/OPAI (CR*/PC/RL) use postmaster (.5)
"RTN","BPSNCPD1",38,0)
 I ",AREV,CRLB,CRLX,CRLR,PC,RL,"[(","_BWHERE_",") S BPSARRY("USER")=.5
"RTN","BPSNCPD1",39,0)
 E  S BPSARRY("USER")=DUZ
"RTN","BPSNCPD1",40,0)
 Q
"RTN","BPSNCPD1",41,0)
 ;
"RTN","BPSNCPD1",42,0)
 ; Called by BPSNCPDP to display progress of claim
"RTN","BPSNCPD1",43,0)
 ; BRXIEN = Prescription IEN
"RTN","BPSNCPD1",44,0)
 ; BFILL = Fill Number
"RTN","BPSNCPD1",45,0)
 ; REBILL = rebill flag
"RTN","BPSNCPD1",46,0)
 ; REVONLY = reversal only flag
"RTN","BPSNCPD1",47,0)
 ; BPSTART = date/time
"RTN","BPSNCPD1",48,0)
 ; BWHERE  = RX Action (see BPSNCPDP comments above for details)
"RTN","BPSNCPD1",49,0)
 ; BPREQIEN = the BPS REQUESTS (#9002313.77) IEN
"RTN","BPSNCPD1",50,0)
STATUS(BRXIEN,BFILL,REBILL,REVONLY,BPSTART,BWHERE,BPREQIEN,BPSCOB) ;
"RTN","BPSNCPD1",51,0)
 ; Initialization
"RTN","BPSNCPD1",52,0)
 N TRANSIEN,CERTUSER,BPSTO,END,IBSEQ,BPQ,BP77OLD,BP77,BPQQ
"RTN","BPSNCPD1",53,0)
 N CLMSTAT,OCLMSTAT,RESFL,BPACTTYP
"RTN","BPSNCPD1",54,0)
 S BPACTTYP=$$ACTTYPE^BPSOSRX5(BWHERE)
"RTN","BPSNCPD1",55,0)
 S (CLMSTAT,OCLMSTAT)=0
"RTN","BPSNCPD1",56,0)
 ;
"RTN","BPSNCPD1",57,0)
 ; Set CERTUSER to true if this user is the certifier
"RTN","BPSNCPD1",58,0)
 S CERTUSER=^BPS(9002313.99,1,"CERTIFIER")=DUZ
"RTN","BPSNCPD1",59,0)
 ;
"RTN","BPSNCPD1",60,0)
 ; Build Transaction IEN
"RTN","BPSNCPD1",61,0)
 S TRANSIEN=BRXIEN_"."_$E($TR($J("",4-$L(BFILL))," ","0")_BFILL,1,4)_1
"RTN","BPSNCPD1",62,0)
 ;
"RTN","BPSNCPD1",63,0)
 ; Write Rebill and Status Messages
"RTN","BPSNCPD1",64,0)
 ;
"RTN","BPSNCPD1",65,0)
 W !!,"Claim Status: "
"RTN","BPSNCPD1",66,0)
 I REBILL,BPACTTYP="UC" W !,"Reversing and Rebilling a previously submitted claim..." ;,!,"Reversing..."
"RTN","BPSNCPD1",67,0)
 I REBILL,BPACTTYP="U" W !,"Reversing..."
"RTN","BPSNCPD1",68,0)
 ;
"RTN","BPSNCPD1",69,0)
 ; Get the ECME Timeout and set the display timeout
"RTN","BPSNCPD1",70,0)
 S BPSTO=$$GET1^DIQ(9002313.99,"1,",3.01),END=$S(CERTUSER:50,$G(BPSTO)]"":BPSTO,1:5)
"RTN","BPSNCPD1",71,0)
 ;
"RTN","BPSNCPD1",72,0)
 ; For remaining time, loop through and display status
"RTN","BPSNCPD1",73,0)
 S (BPQ,RESFL,BP77OLD)=0
"RTN","BPSNCPD1",74,0)
 F IBSEQ=1:1:END D  Q:BPQ=1
"RTN","BPSNCPD1",75,0)
 . H 1
"RTN","BPSNCPD1",76,0)
 . ;
"RTN","BPSNCPD1",77,0)
 . ; Get status of resubmit, last update, and claim status
"RTN","BPSNCPD1",78,0)
 . S CLMSTAT=$$STATUS^BPSOSRX(BRXIEN,BFILL,1,$G(BPREQIEN),BPSCOB)
"RTN","BPSNCPD1",79,0)
 . ;
"RTN","BPSNCPD1",80,0)
 . ; Format status message
"RTN","BPSNCPD1",81,0)
 . S CLMSTAT=$P(CLMSTAT,"^",1)_$S($P(CLMSTAT,"^",1)["IN PROGRESS":"-"_$P(CLMSTAT,"^",3),1:"")
"RTN","BPSNCPD1",82,0)
 . ;
"RTN","BPSNCPD1",83,0)
 . ;If the status has changed, display the new message
"RTN","BPSNCPD1",84,0)
 . I OCLMSTAT'=CLMSTAT W !,CLMSTAT S OCLMSTAT=CLMSTAT I CLMSTAT="E REJECTED",$G(BPSELIG)'="V" D
"RTN","BPSNCPD1",85,0)
 .. N BPSRTEXT,BPSRESP,BPSPOS,X
"RTN","BPSNCPD1",86,0)
 .. S BPSRESP=$P($G(^BPST(IEN59,0)),"^",5) Q:'BPSRESP
"RTN","BPSNCPD1",87,0)
 .. S BPSPOS=+$O(^BPSR(BPSRESP,1000,":"),-1) Q:'BPSPOS
"RTN","BPSNCPD1",88,0)
 .. D REJTEXT^BPSOS03(BPSRESP,BPSPOS,.BPSRTEXT)
"RTN","BPSNCPD1",89,0)
 .. S X=0 F  S X=$O(BPSRTEXT(X)) Q:'X  W !?4,$P(BPSRTEXT(X),":")," - ",$P(BPSRTEXT(X),":",2)
"RTN","BPSNCPD1",90,0)
 . ;
"RTN","BPSNCPD1",91,0)
 . ; If the status is not IN PROGRESS, then we are done
"RTN","BPSNCPD1",92,0)
 . I CLMSTAT'["IN PROGRESS",'$D(^BPS(9002313.77,"D",BRXIEN,BFILL,BPSCOB)) S BPQ=1
"RTN","BPSNCPD1",93,0)
 W !
"RTN","BPSNCPD1",94,0)
 Q
"RTN","BPSNCPD1",95,0)
 ;
"RTN","BPSNCPD1",96,0)
 ; Bulletin to the OPECC
"RTN","BPSNCPD1",97,0)
 ; BPST=Tricare flag 1 is Tricare Related
"RTN","BPSNCPD1",98,0)
BULL(RXI,RXR,SITE,DFN,PATNAME,BPST,BPSERTXT,BPSRESP) ;
"RTN","BPSNCPD1",99,0)
 N BTXT,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","BPSNCPD1",100,0)
 N SSN,X,SITENM
"RTN","BPSNCPD1",101,0)
 I $G(SITE) D
"RTN","BPSNCPD1",102,0)
 . K ^TMP($J,"BPSARR")
"RTN","BPSNCPD1",103,0)
 . D PSS^PSO59(SITE,,"BPSARR")
"RTN","BPSNCPD1",104,0)
 . S SITENM=$G(^TMP($J,"BPSARR",SITE,.01))
"RTN","BPSNCPD1",105,0)
 I $G(DFN) D
"RTN","BPSNCPD1",106,0)
 . S X=$P($G(^DPT(DFN,0)),U,9)
"RTN","BPSNCPD1",107,0)
 . S SSN=$E(X,$L(X)-3,$L(X))
"RTN","BPSNCPD1",108,0)
 ;
"RTN","BPSNCPD1",109,0)
 ; Need to do in the background
"RTN","BPSNCPD1",110,0)
 ;   Mailman calls CMOP which calls EN^BPSNCPDP.
"RTN","BPSNCPD1",111,0)
 ;   If BPSNCPDP* (same process) then calls mailman, it gets confused.
"RTN","BPSNCPD1",112,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC
"RTN","BPSNCPD1",113,0)
 N %,%H,%I,X
"RTN","BPSNCPD1",114,0)
 D NOW^%DTC
"RTN","BPSNCPD1",115,0)
 S ZTIO="",ZTDTH=%,ZTDESC="IN PROGRESS BULLETIN"
"RTN","BPSNCPD1",116,0)
 S (ZTSAVE("RXR"),ZTSAVE("RXI"),ZTSAVE("BPSERTXT"))="",ZTSAVE("BPSRESP")=""
"RTN","BPSNCPD1",117,0)
 S (ZTSAVE("SITENM"),ZTSAVE("PATNAME"),ZTSAVE("SSN"),ZTSAVE("BPST"))=""
"RTN","BPSNCPD1",118,0)
 S ZTRTN="BULL1^BPSNCPD1"
"RTN","BPSNCPD1",119,0)
 D ^%ZTLOAD
"RTN","BPSNCPD1",120,0)
 Q
"RTN","BPSNCPD1",121,0)
 ;
"RTN","BPSNCPD1",122,0)
 ;
"RTN","BPSNCPD1",123,0)
BULL1 ;
"RTN","BPSNCPD1",124,0)
 N BPSRX,BPSL,XMDUZ,XMY,BPSX,XMZ,XMSUB
"RTN","BPSNCPD1",125,0)
 S BPSL=0,BPSRX=$$RXAPI1^BPSUTIL1(RXI,.01,"E")
"RTN","BPSNCPD1",126,0)
 S XMSUB=$S($G(BPST):"TRICARE ",1:"")_"RX not processed for site "_$G(SITENM)
"RTN","BPSNCPD1",127,0)
 I $G(BPST) D
"RTN","BPSNCPD1",128,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="Prescription "_BPSRX_" for fill number "_(+RXR)_" could not be filled because of a"
"RTN","BPSNCPD1",129,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="delay in processing the third party claim. The Rx was placed on suspense"
"RTN","BPSNCPD1",130,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="because TRICARE Rx's may not be filled unless they have a payable third"
"RTN","BPSNCPD1",131,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="party claim."
"RTN","BPSNCPD1",132,0)
 . S BPSL=BPSL+1,BPSX(BPSL)=" "
"RTN","BPSNCPD1",133,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="Please monitor the progress of the claim.  If the claim is eventually"
"RTN","BPSNCPD1",134,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="returned as payable, the Rx label will be printed when Print from Suspense"
"RTN","BPSNCPD1",135,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="occurs or it may be Pulled Early from Suspense.  If a reject occurs, the"
"RTN","BPSNCPD1",136,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="Rx will be placed in the REFILL TOO SOON/DUR REJECTS (Third Party) section"
"RTN","BPSNCPD1",137,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="of the medication profile and placed on the Pharmacy Reject Worklist."
"RTN","BPSNCPD1",138,0)
 ;
"RTN","BPSNCPD1",139,0)
 ;
"RTN","BPSNCPD1",140,0)
 I $G(BPSERTXT)'="" S BPSL=BPSL+1,BPSX(BPSL)=BPSERTXT
"RTN","BPSNCPD1",141,0)
 S BPSL=BPSL+1,BPSX(BPSL)=" "
"RTN","BPSNCPD1",142,0)
 I $G(BPSRESP)'=4 D
"RTN","BPSNCPD1",143,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="For more information on this prescription's activity, please view the ECME"
"RTN","BPSNCPD1",144,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="log within the View Prescription (VP) option on the Further Research (FR)"
"RTN","BPSNCPD1",145,0)
 . S BPSL=BPSL+1,BPSX(BPSL)="menu of the ECME user screen."
"RTN","BPSNCPD1",146,0)
 . S BPSL=BPSL+1,BPSX(BPSL)=" "
"RTN","BPSNCPD1",147,0)
 S BPSL=BPSL+1,BPSX(BPSL)=$S($G(BPST):"TRICARE ",1:"")_"Patient Name: "_$G(PATNAME)_" ("_$G(SSN)_")"
"RTN","BPSNCPD1",148,0)
 S BPSL=BPSL+1,BPSX(BPSL)="Prescription: "_BPSRX_"  Fill: "_(+RXR)
"RTN","BPSNCPD1",149,0)
 S BPSL=BPSL+1,BPSX(BPSL)="Drug Name:  "_$$RXAPI1^BPSUTIL1(RXI,6,"E")
"RTN","BPSNCPD1",150,0)
 ;
"RTN","BPSNCPD1",151,0)
 S XMDUZ="BPS PACKAGE",XMTEXT="BPSX("
"RTN","BPSNCPD1",152,0)
 ;
"RTN","BPSNCPD1",153,0)
 ;****add by bld on 7/25/2010 for tricare enhancement 10 ****
"RTN","BPSNCPD1",154,0)
 I $G(BPST) S XMY("G.BPS TRICARE")=""
"RTN","BPSNCPD1",155,0)
 E  S XMY("G.BPS OPECC")=""
"RTN","BPSNCPD1",156,0)
 ;*******************************
"RTN","BPSNCPD1",157,0)
 ;
"RTN","BPSNCPD1",158,0)
 I $G(DUZ)'<1 S XMY(DUZ)=""
"RTN","BPSNCPD1",159,0)
 D ^XMD
"RTN","BPSNCPD1",160,0)
 I $G(BPST) D PRIORITY^XMXEDIT(XMZ)
"RTN","BPSNCPD1",161,0)
 Q 
"RTN","BPSPRRX")
0^4^B106329171
"RTN","BPSPRRX",1,0)
BPSPRRX ;ALB/SS - ePharmacy secondary billing ;12-DEC-08
"RTN","BPSPRRX",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**8,9**;JUN 2004;Build 18
"RTN","BPSPRRX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","BPSPRRX",4,0)
 ;
"RTN","BPSPRRX",5,0)
 ;Entry point for the menu option [BPS COB PROCESS SECONDARY AND TRICARE CLAIMS]
"RTN","BPSPRRX",6,0)
 ;
"RTN","BPSPRRX",7,0)
EN1 ;
"RTN","BPSPRRX",8,0)
 N BPSRXN,BPS399,BPSZ,BPSQLOOP,BPPAYSEQ,BPSRET,BPS52,BPSRF,BPSDOS,BPSDFN
"RTN","BPSPRRX",9,0)
 N BPQLOOP2,BPSELIG,BPSPCLS,BP59,BPSEQ,BPSINS
"RTN","BPSPRRX",10,0)
 S BPSQLOOP=0
"RTN","BPSPRRX",11,0)
 S BPSRET=""
"RTN","BPSPRRX",12,0)
 F  D  Q:BPSQLOOP=1
"RTN","BPSPRRX",13,0)
 . ; Prompt for RX#
"RTN","BPSPRRX",14,0)
 . S BPSZ=$$PROMPTRX()
"RTN","BPSPRRX",15,0)
 . I +BPSZ=0 Q
"RTN","BPSPRRX",16,0)
 . I +BPSZ<0 S BPSQLOOP=1 Q
"RTN","BPSPRRX",17,0)
 . S BPSDFN=$P(BPSZ,U,4),BPSRXN=$P(BPSZ,U,3),BPS52=$P(BPSZ,U,2)
"RTN","BPSPRRX",18,0)
 . ;select refill
"RTN","BPSPRRX",19,0)
 . S BPSZ=$$RXREFIL^BPSPRRX6(BPS52,BPSDFN,BPSRXN)
"RTN","BPSPRRX",20,0)
 . I +BPSZ=-1 S BPSQLOOP=1 Q
"RTN","BPSPRRX",21,0)
 . S BPSRF=+BPSZ
"RTN","BPSPRRX",22,0)
 . S BPSDOS=+$P(BPSZ,U,2)
"RTN","BPSPRRX",23,0)
 . ;
"RTN","BPSPRRX",24,0)
 . ;Verify that the patient has valid ePharmacy coverage for the DOS
"RTN","BPSPRRX",25,0)
 . I '$$INSUR^IBBAPI(BPSDFN,BPSDOS,"E",.BPSINS,"1,7,8") D  S BPSQLOOP=1 Q
"RTN","BPSPRRX",26,0)
 . . W !!,"Unable to find an ECME billable insurance policy within the"
"RTN","BPSPRRX",27,0)
 . . W !,"date of service for this RX/Fill. The patient insurance policy"
"RTN","BPSPRRX",28,0)
 . . W !,"must have a valid ePharmacy Group Plan associated with it."
"RTN","BPSPRRX",29,0)
 . . W !!,"You must correct this in order to continue.",!
"RTN","BPSPRRX",30,0)
 . . Q
"RTN","BPSPRRX",31,0)
 . ;
"RTN","BPSPRRX",32,0)
 . S BPQLOOP2=0
"RTN","BPSPRRX",33,0)
 . ;select payer sequence
"RTN","BPSPRRX",34,0)
 . F  D  Q:BPQLOOP2=1
"RTN","BPSPRRX",35,0)
 . . S BPPAYSEQ=$$SELCOB^BPSPRRX5("SELECT PAYER SEQUENCE","Select payer sequence for billing:")
"RTN","BPSPRRX",36,0)
 . . I +BPPAYSEQ=-1 S BPQLOOP2=1,BPSQLOOP=1 Q
"RTN","BPSPRRX",37,0)
 . . I +BPPAYSEQ'=1,(+BPPAYSEQ'=2) Q
"RTN","BPSPRRX",38,0)
 . . ;
"RTN","BPSPRRX",39,0)
 . . W !
"RTN","BPSPRRX",40,0)
 . . ;Make sure claim isn't closed
"RTN","BPSPRRX",41,0)
 . . S BP59=$$IEN59^BPSOSRX(BPS52,BPSRF,BPPAYSEQ)
"RTN","BPSPRRX",42,0)
 . . I $$CLOSED02^BPSSCR03($P($G(^BPST(BP59,0)),U,4)) D  Q
"RTN","BPSPRRX",43,0)
 . . . S BPSEQ=$S(BPPAYSEQ=1:"primary",1:"secondary")
"RTN","BPSPRRX",44,0)
 . . . W !!,"A ",BPSEQ," claim exists that is closed and cannot be Resubmitted.",!,"Please reopen the closed ",BPSEQ," claim to resubmit."
"RTN","BPSPRRX",45,0)
 . . . S BPQLOOP2=1 Q
"RTN","BPSPRRX",46,0)
 . . ;
"RTN","BPSPRRX",47,0)
 . . ;create primary claim for entered RX/refill
"RTN","BPSPRRX",48,0)
 . . I BPPAYSEQ=1 S BPSRET=$$PRI4RXRF(BPS52,BPSRF,BPSDOS,BPSDFN) D DISPLMES(BPSRET,1) S:(+BPSRET'<0)!(+BPSRET=-100) BPQLOOP2=1,BPSQLOOP=1 Q
"RTN","BPSPRRX",49,0)
 . . ;
"RTN","BPSPRRX",50,0)
 . . ;create secondary claim for entered RX/refill
"RTN","BPSPRRX",51,0)
 . . ;cannot bill non-released RX
"RTN","BPSPRRX",52,0)
 . . I BPPAYSEQ=2 I $$RELDATE^BPSBCKJ(BPS52,BPSRF)']"" D DISPLMES("-108^RX/refill not released") S BPQLOOP2=1 S:+BPSRET=-100 BPSQLOOP=1 Q
"RTN","BPSPRRX",53,0)
 . . I BPPAYSEQ=2 D  Q:BPQLOOP2=1
"RTN","BPSPRRX",54,0)
 . . . ;If this is a secondary, make sure Primary is either Payable or Closed.
"RTN","BPSPRRX",55,0)
 . . . ;Get Primary claim status 
"RTN","BPSPRRX",56,0)
 . . . S BPSPCLS=$$FINDECLM^BPSPRRX5(BPS52,BPSRF,1)
"RTN","BPSPRRX",57,0)
 . . . I $P(BPSPCLS,U)>1 D  Q:BPQLOOP2=1
"RTN","BPSPRRX",58,0)
 . . . . Q:$$CLOSED02^BPSSCR03($P($G(^BPST($P(BPSPCLS,U,2),0)),U,4))
"RTN","BPSPRRX",59,0)
 . . . . W !,"The secondary claim cannot be Submitted unless the primary is either payable",!,"or closed. Please resubmit or close the primary claim first."
"RTN","BPSPRRX",60,0)
 . . . . S BPQLOOP2=1 Q
"RTN","BPSPRRX",61,0)
 . . . S BPSRET=$$SEC4RXRF(BPS52,BPSRF,BPSDOS,$G(BPSDFN)) D DISPLMES(BPSRET,2) S:(+BPSRET'<0)!(+BPSRET=-100) BPQLOOP2=1,BPSQLOOP=1 Q
"RTN","BPSPRRX",62,0)
 ;
"RTN","BPSPRRX",63,0)
 Q
"RTN","BPSPRRX",64,0)
 ;
"RTN","BPSPRRX",65,0)
 ;create primary claim for entered RX/refill
"RTN","BPSPRRX",66,0)
PRI4RXRF(BPS52,BPSRF,BPSDOS,BPSDFN) ;
"RTN","BPSPRRX",67,0)
 N BPSECLM,BPNEWCLM,BPSARR,BPSQ,BPRESUBM
"RTN","BPSPRRX",68,0)
 ;check if there is a primary e-claim
"RTN","BPSPRRX",69,0)
 S BPSECLM=$$FINDECLM^BPSPRRX5(BPS52,BPSRF,1)
"RTN","BPSPRRX",70,0)
 I +BPSECLM=3 Q "-102^Claim in progress"
"RTN","BPSPRRX",71,0)
 I +BPSECLM=1 Q "-109^Existing PAYABLE e-claim. Please reverse it before resubmitting."
"RTN","BPSPRRX",72,0)
 S BPNEWCLM=0
"RTN","BPSPRRX",73,0)
 I +BPSECLM=2 D  I BPNEWCLM=0 Q "-100^Action cancelled"
"RTN","BPSPRRX",74,0)
 . D DISPECLM^BPSPRRX5(+$P(BPSECLM,U,2))
"RTN","BPSPRRX",75,0)
 . W !!,"There is an existing rejected/reversed e-claim for the RX/refill."
"RTN","BPSPRRX",76,0)
 . S BPNEWCLM=$$YESNO^BPSSCRRS("Do you want to submit a new primary claim(Y/N)","N")
"RTN","BPSPRRX",77,0)
 ;
"RTN","BPSPRRX",78,0)
 ; if not found or if existing rejected/reversed claim then continue , otherwise - quit
"RTN","BPSPRRX",79,0)
 ;
"RTN","BPSPRRX",80,0)
 S BPSQ=0
"RTN","BPSPRRX",81,0)
 ;check for primary bill
"RTN","BPSPRRX",82,0)
 S BPSZ=$$RXBILL^IBNCPUT3(BPS52,BPSRF,"P",BPSDOS,.BPSARR)
"RTN","BPSPRRX",83,0)
 I +BPSZ>0,+$P(BPSZ,U,2)>0 Q "-107^Existing active primary bill #"_$P($G(BPSARR(+$P(BPSZ,U,2))),U,1)
"RTN","BPSPRRX",84,0)
 I +BPSZ>0,+$P(BPSZ,U,2)=0 D  I +BPSQ'=0 Q BPSQ
"RTN","BPSPRRX",85,0)
 . N BPS399,BPSCNT
"RTN","BPSPRRX",86,0)
 . S (BPSCNT,BPS399)=0
"RTN","BPSPRRX",87,0)
 . F  S BPS399=$O(BPSARR(BPS399)) Q:+BPS399=0  D
"RTN","BPSPRRX",88,0)
 . . N BPPSEQ,BPSRET
"RTN","BPSPRRX",89,0)
 . . S BPSCNT=BPSCNT+1
"RTN","BPSPRRX",90,0)
 . . S BPSRET=$P(BPSARR(BPS399),U,5)
"RTN","BPSPRRX",91,0)
 . . S BPPSEQ=$S(BPSRET="S":"Secondary",BPSRET="T":"Tertiary",BPSRET="P":"Primary",1:"Unknown")
"RTN","BPSPRRX",92,0)
 . . W:BPSCNT=1 !!,"Non-active primary bill(s) found:"
"RTN","BPSPRRX",93,0)
 . . D DISPBILL^BPSPRRX2(BPPSEQ,$P(BPSARR(BPS399),U,4),$P(BPSARR(BPS399),U,1),$P(BPSARR(BPS399),U,2),BPS52,BPSRF,$P(BPSARR(BPS399),U,3),(BPSCNT=1))
"RTN","BPSPRRX",94,0)
 . W !
"RTN","BPSPRRX",95,0)
 . I $$YESNO^BPSSCRRS("DO YOU WISH TO CREATE A NEW PRIMARY BILL ?(Y/N)","N")=0 S BPSQ="-100^Action cancelled"
"RTN","BPSPRRX",96,0)
 Q $$PRIMARY^BPSPRRX4(BPS52,BPSRF,BPSDFN,BPSDOS,BPSECLM,BPNEWCLM)
"RTN","BPSPRRX",97,0)
 ;
"RTN","BPSPRRX",98,0)
 ;create secondary claim for entered RX/refill
"RTN","BPSPRRX",99,0)
SEC4RXRF(BPS52,BPSRF,BPSDOS,BPSDFN) ;
"RTN","BPSPRRX",100,0)
 N BPSARR,BPSRET,BPS399
"RTN","BPSPRRX",101,0)
 ;
"RTN","BPSPRRX",102,0)
 ; try to find the primary bill
"RTN","BPSPRRX",103,0)
 S BPSRET=$$RXBILL^IBNCPUT3(BPS52,BPSRF,"P",BPSDOS,.BPSARR)
"RTN","BPSPRRX",104,0)
 ;
"RTN","BPSPRRX",105,0)
 ; if no primary bills found at all
"RTN","BPSPRRX",106,0)
 I +BPSRET=0 Q $$SECNOPRM^BPSPRRX5(BPS52,BPSRF,BPSDOS,$G(BPSDFN),"1,2")
"RTN","BPSPRRX",107,0)
 ;
"RTN","BPSPRRX",108,0)
 S BPS399=+$P(BPSRET,U,2)  ; active claim
"RTN","BPSPRRX",109,0)
 I BPS399'>0 S BPS399=+$O(BPSARR(999999999),-1)   ; most recent claim
"RTN","BPSPRRX",110,0)
 ;
"RTN","BPSPRRX",111,0)
 K BPSARR
"RTN","BPSPRRX",112,0)
 ; check if there any 2ndary bill
"RTN","BPSPRRX",113,0)
 S BPSRET=$$RXBILL^IBNCPUT3(BPS52,BPSRF,"S",BPSDOS,.BPSARR)
"RTN","BPSPRRX",114,0)
 I +BPSRET>0,+$P(BPSRET,U,2)>0 Q "-107^Existing active secondary bill #"_$P($G(BPSARR(+$P(BPSRET,U,2))),U,1)
"RTN","BPSPRRX",115,0)
 Q $$SECONDRY(BPS399,"1,2")
"RTN","BPSPRRX",116,0)
 ;
"RTN","BPSPRRX",117,0)
 ;Display messages
"RTN","BPSPRRX",118,0)
 ; -100^Action cancelled
"RTN","BPSPRRX",119,0)
 ; -101^Existing e-claim
"RTN","BPSPRRX",120,0)
 ; -102^Claim in progress
"RTN","BPSPRRX",121,0)
 ; -103^Invalid or wrong bill#
"RTN","BPSPRRX",122,0)
 ; -104^Existing rejected/reversed e-claim
"RTN","BPSPRRX",123,0)
 ; -105^The same group plan selected
"RTN","BPSPRRX",124,0)
 ; -107^Existing active bill
"RTN","BPSPRRX",125,0)
 ; -108^RX not released
"RTN","BPSPRRX",126,0)
 ; -109^Existing PAYABLE e-claim. Please reverse it before resubmitting.
"RTN","BPSPRRX",127,0)
 ; -110^No valid group insurance plans
"RTN","BPSPRRX",128,0)
DISPLMES(BPSZ,BPSPSEQ) ;
"RTN","BPSPRRX",129,0)
 I BPSZ'<0 Q
"RTN","BPSPRRX",130,0)
 I +BPSZ=-100 W !!,$P(BPSZ,U,2),! Q
"RTN","BPSPRRX",131,0)
 I +$G(BPSPSEQ)=0 W !!,"Cannot submit e-claim:",!," ",$P(BPSZ,U,2),!
"RTN","BPSPRRX",132,0)
 I $G(BPSPSEQ)=2 D
"RTN","BPSPRRX",133,0)
 . I +BPSZ=-105 W !,"Select another plan - the plan selected has been used for primary billing",!! Q
"RTN","BPSPRRX",134,0)
 . W !,"Cannot submit secondary claim:",!," ",$P(BPSZ,U,2),!
"RTN","BPSPRRX",135,0)
 I $G(BPSPSEQ)=1 D
"RTN","BPSPRRX",136,0)
 . W !,"Cannot submit primary claim:",!," ",$P(BPSZ,U,2),!
"RTN","BPSPRRX",137,0)
 Q
"RTN","BPSPRRX",138,0)
 ;
"RTN","BPSPRRX",139,0)
 ;Submit a secondary claim if there is a primary bill
"RTN","BPSPRRX",140,0)
 ;BPS399 - primary bill (ien of file #399)
"RTN","BPSPRRX",141,0)
 ;BPDISPPR - display bill information for
"RTN","BPSPRRX",142,0)
 ; "1" - primary 
"RTN","BPSPRRX",143,0)
 ; "2" - secondary
"RTN","BPSPRRX",144,0)
 ; "1,2" - both
"RTN","BPSPRRX",145,0)
 ;
"RTN","BPSPRRX",146,0)
 ;Submission result (return value of EN^BPSNCPDP)
"RTN","BPSPRRX",147,0)
 ;Or one of the negative error codes:
"RTN","BPSPRRX",148,0)
 ; -100^Action cancelled
"RTN","BPSPRRX",149,0)
 ; -101^Existing e-claim
"RTN","BPSPRRX",150,0)
 ; -102^Claim in progress
"RTN","BPSPRRX",151,0)
 ; -103^Invalid or wrong bill#
"RTN","BPSPRRX",152,0)
 ; -104^Existing rejected/reversed e-claim
"RTN","BPSPRRX",153,0)
 ; -105^The same group plan selected
"RTN","BPSPRRX",154,0)
 ; -106^The primary insurer needs to be billed first.
"RTN","BPSPRRX",155,0)
 ; -107^Existing active bill
"RTN","BPSPRRX",156,0)
SECONDRY(BPS399,BPDISPPR) ;
"RTN","BPSPRRX",157,0)
 N BPSBINFO,BPSRXCOB,BPSRX,BPSRF,BPSINIEN,BPPAYSEQ,BPSECLM,BP2NDBIL,BPSDFN,BPSRET,BPSDOS,BPRATTYP,BPSQ,BPY
"RTN","BPSPRRX",158,0)
 N BPSPLNSL,BPSECOND,BPRET,BPENGINE,BPSWHERE,BPSPLAN,BPSPL59,BPRTTP59,BPSARR,BPYDEF
"RTN","BPSPRRX",159,0)
 N BPRESUBM S BPRESUBM=0 ;default = original submission
"RTN","BPSPRRX",160,0)
 ;get primary bill data
"RTN","BPSPRRX",161,0)
 S BPSRET=$$BILINF^IBNCPUT3(BPS399,.BPSBINFO)
"RTN","BPSPRRX",162,0)
 I +BPSRET=-1 Q "-103"_U_$P(BPSRET,U,2)
"RTN","BPSPRRX",163,0)
 ;
"RTN","BPSPRRX",164,0)
 S BPSRX=BPSBINFO("PRESCRIPTION")
"RTN","BPSPRRX",165,0)
 S BPSRF=BPSBINFO("FILL NUMBER")
"RTN","BPSPRRX",166,0)
 S BPSDOS=$G(BPSBINFO("DOS"))
"RTN","BPSPRRX",167,0)
 ;
"RTN","BPSPRRX",168,0)
 S BPSDFN=+$P(BPSRET,U,2)
"RTN","BPSPRRX",169,0)
 S BPPAYSEQ=$S($P(BPSRET,U)="S":"Secondary",$P(BPSRET,U)="T":"Tertiary",$P(BPSRET,U)="P":"Primary",1:"Unknown")
"RTN","BPSPRRX",170,0)
 S BPSRXCOB=$S($P(BPSRET,U)="S":2,$P(BPSRET,U)="T":3,1:1)
"RTN","BPSPRRX",171,0)
 S BPSINIEN=BPSBINFO("INS IEN")
"RTN","BPSPRRX",172,0)
 ;display primary bill data
"RTN","BPSPRRX",173,0)
 I $G(BPDISPPR)[1 D
"RTN","BPSPRRX",174,0)
 . W !,"Primary bill:"
"RTN","BPSPRRX",175,0)
 . D DISPBILL^BPSPRRX2(BPPAYSEQ,BPSBINFO("INS NAME"),BPSBINFO("BILL #"),BPSBINFO("AR STATUS"),BPSRX,BPSRF,"",1)
"RTN","BPSPRRX",176,0)
 . W !
"RTN","BPSPRRX",177,0)
 ;check if there is the secondary e-claim
"RTN","BPSPRRX",178,0)
 S BPSECLM=$$FINDECLM^BPSPRRX5(BPSRX,BPSRF,2)
"RTN","BPSPRRX",179,0)
 I +BPSECLM=3 Q "-102^Claim in progress"
"RTN","BPSPRRX",180,0)
 I +BPSECLM=1 Q "-109^Existing PAYABLE e-claim. Please reverse it before resubmitting."
"RTN","BPSPRRX",181,0)
 S BPSQ=0
"RTN","BPSPRRX",182,0)
 I +BPSECLM=2 D  Q:BPSQ=1 "-100^Action cancelled"
"RTN","BPSPRRX",183,0)
 . D DISPECLM^BPSPRRX5(+$P(BPSECLM,U,2))
"RTN","BPSPRRX",184,0)
 . W !!,"There is an existing rejected/reversed secondary e-claim(s) for the RX/refill."
"RTN","BPSPRRX",185,0)
 . I $$YESNO^BPSSCRRS("Do you want to submit a new secondary claim(Y/N)","N")=1 S BPRESUBM=1
"RTN","BPSPRRX",186,0)
 . I BPRESUBM'=1 S BPSQ=1
"RTN","BPSPRRX",187,0)
 ; if not found or if existing rejected/reversed claim then continue , otherwise - quit
"RTN","BPSPRRX",188,0)
 ;I +BPSECLM'=0 Q "-101^Existing e-claim"
"RTN","BPSPRRX",189,0)
 ;prepopulate COB fields if this is a resubmit
"RTN","BPSPRRX",190,0)
 I BPRESUBM=1 I $$RES2NDCL^BPSPRRX6($$IEN59^BPSOSRX(BPSRX,BPSRF,2),.BPSPL59,.BPSECOND,.BPRTTP59)
"RTN","BPSPRRX",191,0)
 ;
"RTN","BPSPRRX",192,0)
 D  Q:+$P(BP2NDBIL,U,2)>0 "-107^Existing active secondary bill"
"RTN","BPSPRRX",193,0)
 . N BPSARR,BPS399,BPSCNT
"RTN","BPSPRRX",194,0)
 . ;check for the existing secondary bill
"RTN","BPSPRRX",195,0)
 . S BP2NDBIL=$$RXBILL^IBNCPUT3(BPSRX,BPSRF,"S",BPSDOS,.BPSARR)
"RTN","BPSPRRX",196,0)
 . I +BP2NDBIL=0 Q  ;not found
"RTN","BPSPRRX",197,0)
 . S BPS399=0
"RTN","BPSPRRX",198,0)
 . S BPSCNT=0
"RTN","BPSPRRX",199,0)
 . F  S BPS399=$O(BPSARR(BPS399)) Q:+BPS399=0  D
"RTN","BPSPRRX",200,0)
 . . N BPPSEQ
"RTN","BPSPRRX",201,0)
 . . S BPSCNT=BPSCNT+1
"RTN","BPSPRRX",202,0)
 . . I $G(BPDISPPR)[2 D
"RTN","BPSPRRX",203,0)
 . . . W:BPSCNT=1 !!,"Secondary bill(s) found:"
"RTN","BPSPRRX",204,0)
 . . . S BPSRET=$P(BPSARR(BPS399),U,5)
"RTN","BPSPRRX",205,0)
 . . . S BPPSEQ=$S($P(BPSRET,U)="S":"Secondary",$P(BPSRET,U)="T":"Tertiary",$P(BPSRET,U)="P":"Primary",1:"Unknown")
"RTN","BPSPRRX",206,0)
 . . . D DISPBILL^BPSPRRX2(BPPSEQ,$P(BPSARR(BPS399),U,4),$P(BPSARR(BPS399),U,1),$P(BPSARR(BPS399),U,2),BPSRX,BPSRF,$P(BPSARR(BPS399),U,3),(BPSCNT=1))
"RTN","BPSPRRX",207,0)
 . W !
"RTN","BPSPRRX",208,0)
 ;
"RTN","BPSPRRX",209,0)
 ; check for ePharmacy secondary ins policy
"RTN","BPSPRRX",210,0)
 S BPYDEF="N"
"RTN","BPSPRRX",211,0)
 I '$$SECINSCK(BPSDFN,BPSDOS) D
"RTN","BPSPRRX",212,0)
 . S BPYDEF="Y"
"RTN","BPSPRRX",213,0)
 . W !!,"Unable to find a secondary insurance policy which is e-Pharmacy billable."
"RTN","BPSPRRX",214,0)
 . W !,"You must correct this in order to continue.",!
"RTN","BPSPRRX",215,0)
 . Q
"RTN","BPSPRRX",216,0)
 ;
"RTN","BPSPRRX",217,0)
 ;ask the user if he wants to jump to the BCN PATIENT INSURANCE option
"RTN","BPSPRRX",218,0)
 S BPY=$$YESNO^BPSSCRRS("DO YOU WISH TO ADD/EDIT INSURANCE COMPANY DATA FOR THIS PATIENT?(Y/N)",BPYDEF)
"RTN","BPSPRRX",219,0)
 I BPY=1 D EN1^IBNCPDPI(BPSDFN)
"RTN","BPSPRRX",220,0)
 I BPY=-1 Q "-100^Action cancelled"
"RTN","BPSPRRX",221,0)
 ;
"RTN","BPSPRRX",222,0)
 I '$$SECINSCK(BPSDFN,BPSDOS) Q "-115^No Secondary e-Pharmacy Insurance Policy."
"RTN","BPSPRRX",223,0)
 ;
"RTN","BPSPRRX",224,0)
 S BPSECOND("PRIMARY BILL")=BPS399
"RTN","BPSPRRX",225,0)
 ;
"RTN","BPSPRRX",226,0)
 S BPRET=$$PRIMDATA^BPSPRRX4($$IEN59^BPSOSRX(BPSRX,BPSRF,1),.BPSECOND,1,BPRESUBM)
"RTN","BPSPRRX",227,0)
 I BPRET=0 D GETFR52^BPSPRRX4(BPSRX,BPSRF,.BPSECOND)
"RTN","BPSPRRX",228,0)
 ;
"RTN","BPSPRRX",229,0)
 I $$PROMPTS^BPSPRRX3(.BPSECOND)=-1 Q "-100^Action cancelled"
"RTN","BPSPRRX",230,0)
 I $$YESNO^BPSSCRRS("SUBMIT CLAIM TO "_$G(BPSECOND("INS NAME"))_" ?(Y/N)","Y")=0 Q "-100^Action cancelled"
"RTN","BPSPRRX",231,0)
 I BPRESUBM=0 S BPSWHERE=$S(BPSRF>0:"RF",1:"OF")
"RTN","BPSPRRX",232,0)
 ;set the flag that indicates that we should use new COB data to resubmit the secondary claim , 
"RTN","BPSPRRX",233,0)
 ;i.e. in BPSNCPDP the engine shouldn't use the COB data in BPS TRANSACTION for resubmit
"RTN","BPSPRRX",234,0)
 I BPRESUBM=1 S BPSECOND("NEW COB DATA")=1,BPSWHERE="ERES"
"RTN","BPSPRRX",235,0)
 S BPENGINE=$$SUBMCLM^BPSPRRX2(BPSECOND("PRESCRIPTION"),BPSECOND("FILL NUMBER"),BPSECOND("FILL DATE"),BPSWHERE,BPSECOND("BILLNDC"),2,BPSECOND("PLAN"),.BPSECOND,BPSECOND("RTYPE"))
"RTN","BPSPRRX",236,0)
 I +BPENGINE=4 W !!,$P(BPENGINE,U,2),!
"RTN","BPSPRRX",237,0)
 Q BPENGINE
"RTN","BPSPRRX",238,0)
 ;
"RTN","BPSPRRX",239,0)
 ; Prompts for RX# and gets confirmation
"RTN","BPSPRRX",240,0)
 ;returns:
"RTN","BPSPRRX",241,0)
 ; 1^RXIEN^RX#^DFN - Successful
"RTN","BPSPRRX",242,0)
 ; 0 - Timeout or Quit by user
"RTN","BPSPRRX",243,0)
 ; -1 = User entered "^"
"RTN","BPSPRRX",244,0)
PROMPTRX() ;
"RTN","BPSPRRX",245,0)
 N BPRET,BPSRX,BPSDFN,BPSPTNM,BPSRXN,BPSRXST,BPSDRUG,BPSDIC,BPSRXD,X,Y,DIQ,DR,DA,DIC
"RTN","BPSPRRX",246,0)
 S BPRET=0,(BPSDIC,DIC)=52,X=""
"RTN","BPSPRRX",247,0)
 S BPSDIC(0)="AENQ"
"RTN","BPSPRRX",248,0)
 W ! D DIC^PSODI(52,.BPSDIC,X) ;DBIA 4858
"RTN","BPSPRRX",249,0)
 I (Y=-1)!$D(DUOUT)!$D(DTOUT) Q +Y
"RTN","BPSPRRX",250,0)
 S (DA,BPSRX)=+Y,BPSRXN=$P(Y,U,2),DIQ="BPSRXD",DIQ(0)="IE",DR=".01;2;6;100"
"RTN","BPSPRRX",251,0)
 D DIQ^PSODI(52,DIC,DR,DA,.DIQ) ;DBIA 4858
"RTN","BPSPRRX",252,0)
 S BPSDFN=BPSRXD(52,DA,2,"I")
"RTN","BPSPRRX",253,0)
 S BPSPTNM=BPSRXD(52,DA,2,"E")
"RTN","BPSPRRX",254,0)
 S BPSDRUG=BPSRXD(52,DA,6,"E")
"RTN","BPSPRRX",255,0)
 S BPSRXST=BPSRXD(52,DA,100,"E")
"RTN","BPSPRRX",256,0)
 W !!,?1,"Patient",?25,"RX#",?37,"Drug Name",?63,"RX Status"
"RTN","BPSPRRX",257,0)
 W !,?1,$E(BPSPTNM,1,23),?25,$E(BPSRXN,1,11),?37,$E(BPSDRUG,1,25),?63,$E(BPSRXST,1,16),!
"RTN","BPSPRRX",258,0)
 Q $$YESNO^BPSSCRRS("DO YOU WANT TO CONTINUE?(Y/N)","Y")_U_BPSRX_U_BPSRXN_U_BPSDFN
"RTN","BPSPRRX",259,0)
 ;
"RTN","BPSPRRX",260,0)
SECINSCK(DFN,DOS) ; secondary insurance check
"RTN","BPSPRRX",261,0)
 ; check to see if patient has at least one ePharmacy secondary insurance policy
"RTN","BPSPRRX",262,0)
 ; function value = 1 if there is one, 0 otherwise
"RTN","BPSPRRX",263,0)
 ;
"RTN","BPSPRRX",264,0)
 N OK,BPSRET,BPSINS,BPX
"RTN","BPSPRRX",265,0)
 S OK=0
"RTN","BPSPRRX",266,0)
 I '$G(DFN)!'$G(DOS) G SECINX
"RTN","BPSPRRX",267,0)
 S BPSRET=$$INSUR^IBBAPI(DFN,DOS,"E",.BPSINS,"1,7,8")
"RTN","BPSPRRX",268,0)
 I '$D(BPSINS) G SECINX
"RTN","BPSPRRX",269,0)
 S BPX=0 F  S BPX=$O(BPSINS("IBBAPI","INSUR",BPX)) Q:'BPX  D  Q:OK
"RTN","BPSPRRX",270,0)
 . I $P($G(BPSINS("IBBAPI","INSUR",BPX,7)),U,1)=2 S OK=1 Q
"RTN","BPSPRRX",271,0)
 . Q
"RTN","BPSPRRX",272,0)
SECINX ;
"RTN","BPSPRRX",273,0)
 Q OK
"RTN","BPSPRRX",274,0)
 ;
"RTN","BPSPRRX1")
0^5^B13134938
"RTN","BPSPRRX1",1,0)
BPSPRRX1 ;ALB/SS - ePharmacy secondary billing ;16-DEC-08
"RTN","BPSPRRX1",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**8,9**;JUN 2004;Build 18
"RTN","BPSPRRX1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","BPSPRRX1",4,0)
 ;
"RTN","BPSPRRX1",5,0)
 ;
"RTN","BPSPRRX1",6,0)
 ;display available plans and prompt the user to select the plan
"RTN","BPSPRRX1",7,0)
 ;input:
"RTN","BPSPRRX1",8,0)
 ; BPSDFN - patient's DFN
"RTN","BPSPRRX1",9,0)
 ; BPSDOS - date of service
"RTN","BPSPRRX1",10,0)
 ; BPRETAR - array to return details for the selected plan (by reference)
"RTN","BPSPRRX1",11,0)
 ; BPSPRMT - prompt
"RTN","BPSPRRX1",12,0)
 ; BPDEFPLN (optional) - default plan
"RTN","BPSPRRX1",13,0)
 ;return: 0 if not selected
"RTN","BPSPRRX1",14,0)
 ; "-110^No valid group insurance plans" if no plans 
"RTN","BPSPRRX1",15,0)
 ;return: the GROUP INSURANCE PLAN ien (#355.3)
"RTN","BPSPRRX1",16,0)
 ; and selected plan's details in BPRETAR
"RTN","BPSPRRX1",17,0)
SELECTPL(BPSDFN,BPSDOS,BPRETAR,BPSPRMT,BPDEFPLN) ;
"RTN","BPSPRRX1",18,0)
 N BPSRET,BPSARR
"RTN","BPSPRRX1",19,0)
 S BPSRET=$$SELPLAN(BPSDFN,BPSDOS,"E",.BPSARR,"1,7,8,10,11,14,12,18",1,$S($L($G(BPSPRMT)):BPSPRMT,1:"SECONDARY INSURANCE POLICY"),"",$G(BPDEFPLN))
"RTN","BPSPRRX1",20,0)
 Q:+BPSRET=-1 0
"RTN","BPSPRRX1",21,0)
 Q:+BPSRET=-110 BPSRET
"RTN","BPSPRRX1",22,0)
 Q:+BPSRET=0 0
"RTN","BPSPRRX1",23,0)
 M BPRETAR=BPSARR("IBBAPI","INSUR",+$P(BPSRET,U,3))
"RTN","BPSPRRX1",24,0)
 Q +$P(BPRETAR(8),U,1)
"RTN","BPSPRRX1",25,0)
 ;
"RTN","BPSPRRX1",26,0)
 ;select insurance from the list of the insurances which was built for the current user setting
"RTN","BPSPRRX1",27,0)
 ;for the User Screen.
"RTN","BPSPRRX1",28,0)
 ;input : 
"RTN","BPSPRRX1",29,0)
 ; BPSDFN - patient's DFN
"RTN","BPSPRRX1",30,0)
 ; BPSDOS - date of service
"RTN","BPSPRRX1",31,0)
 ; BPSTAT - IBSTAT flag in INSUR^IBBAPI
"RTN","BPSPRRX1",32,0)
 ; BPSARR - array to return results (by reference)
"RTN","BPSPRRX1",33,0)
 ; BPSFLDS - IBFLDS in INSUR^IBBAPI (list of fields to return, "*" for all)
"RTN","BPSPRRX1",34,0)
 ; BPSDISPL - display insurances before prompting for selection
"RTN","BPSPRRX1",35,0)
 ; BPSMESS - message to display before prompt
"RTN","BPSPRRX1",36,0)
 ; BPDEFPLN (optional) - default plan
"RTN","BPSPRRX1",37,0)
 ;output : 1^name of the insurance or null
"RTN","BPSPRRX1",38,0)
 ;0^ - if "^" or was not selected
"RTN","BPSPRRX1",39,0)
SELPLAN(BPSDFN,BPSDOS,BPSTAT,BPSARR,BPSFLDS,BPSDISPL,BPSPRMPT,BPSMESS,BPDEFPLN) ;
"RTN","BPSPRRX1",40,0)
 N BPSRET,BPSDFLT,BPSVAL
"RTN","BPSPRRX1",41,0)
 N DIR,Y,X
"RTN","BPSPRRX1",42,0)
 N BPX,BPCNT,BPTEL,BPCNT2
"RTN","BPSPRRX1",43,0)
 S BPSDFLT=""
"RTN","BPSPRRX1",44,0)
 S BPSRET=$$INSUR^IBBAPI(BPSDFN,BPSDOS,BPSTAT,.BPSARR,BPSFLDS)
"RTN","BPSPRRX1",45,0)
 Q:'BPSRET "-110^No valid group insurance plans"
"RTN","BPSPRRX1",46,0)
 W !,?4,"Insurance",?18,"COB",?23,"Subscriber ID",?37,"Group",?48,"Holder",?57,"Effective",?68,"Expires"
"RTN","BPSPRRX1",47,0)
 W !,?4,"=============",?18,"====",?23,"=============",?37,"==========",?48,"========",?57,"==========",?68,"=========="
"RTN","BPSPRRX1",48,0)
 S BPX=0
"RTN","BPSPRRX1",49,0)
 I $G(BPSDISPL) F  S BPX=$O(BPSARR("IBBAPI","INSUR",BPX)) Q:BPX=""  D
"RTN","BPSPRRX1",50,0)
 . W !,?1,BPX
"RTN","BPSPRRX1",51,0)
 . W ?4,$E($P($G(BPSARR("IBBAPI","INSUR",BPX,1)),U,2),1,13)
"RTN","BPSPRRX1",52,0)
 . W ?18,$E($P($G(BPSARR("IBBAPI","INSUR",BPX,7)),U,2),1,3)
"RTN","BPSPRRX1",53,0)
 . W ?23,$E($P($G(BPSARR("IBBAPI","INSUR",BPX,14)),U,1),1,13)
"RTN","BPSPRRX1",54,0)
 . W ?37,$E($P($G(BPSARR("IBBAPI","INSUR",BPX,8)),U,2),1,10)
"RTN","BPSPRRX1",55,0)
 . W ?48,$E($P($G(BPSARR("IBBAPI","INSUR",BPX,12)),U,2),1,9)
"RTN","BPSPRRX1",56,0)
 . W:+$G(BPSARR("IBBAPI","INSUR",BPX,10)) ?57,$$FMTE^XLFDT(+$G(BPSARR("IBBAPI","INSUR",BPX,10)),"5Z")
"RTN","BPSPRRX1",57,0)
 . W:+$G(BPSARR("IBBAPI","INSUR",BPX,11)) ?68,$$FMTE^XLFDT(+$G(BPSARR("IBBAPI","INSUR",BPX,11)),"5Z")
"RTN","BPSPRRX1",58,0)
 W !!
"RTN","BPSPRRX1",59,0)
 S BPX=0,BPCNT=0
"RTN","BPSPRRX1",60,0)
 S DIR("A")=BPSPRMPT
"RTN","BPSPRRX1",61,0)
 I $L($G(BPSMESS))>0 D
"RTN","BPSPRRX1",62,0)
 . S DIR("A","?")=BPSMESS
"RTN","BPSPRRX1",63,0)
 . S DIR("A",1)=""
"RTN","BPSPRRX1",64,0)
 . S DIR("A",2)=BPSMESS
"RTN","BPSPRRX1",65,0)
 . S DIR("A",3)=""
"RTN","BPSPRRX1",66,0)
 K ^TMP($J,"BPSPRRX1","LOOKUP")
"RTN","BPSPRRX1",67,0)
 F  S BPX=$O(BPSARR("IBBAPI","INSUR",BPX)) Q:BPX=""  D
"RTN","BPSPRRX1",68,0)
 . S BPCNT=BPCNT+1
"RTN","BPSPRRX1",69,0)
 . S BPSVAL=$E($P($G(BPSARR("IBBAPI","INSUR",BPX,1)),U,2)_" ("_$P($G(BPSARR("IBBAPI","INSUR",BPX,7)),U,2)_") - "_$P($G(BPSARR("IBBAPI","INSUR",BPX,8)),U,2),1,60)
"RTN","BPSPRRX1",70,0)
 . S ^TMP($J,"BPSPRRX1","LOOKUP",BPCNT,0)=BPSVAL_U_BPX
"RTN","BPSPRRX1",71,0)
 . S ^TMP($J,"BPSPRRX1","LOOKUP","B",BPX,BPCNT)=""
"RTN","BPSPRRX1",72,0)
 . I $G(BPDEFPLN)>0 I +BPSARR("IBBAPI","INSUR",BPX,8)=BPDEFPLN S BPSDFLT=BPX
"RTN","BPSPRRX1",73,0)
 I BPCNT=0 Q "0^"
"RTN","BPSPRRX1",74,0)
 S ^TMP($J,"BPSPRRX1","LOOKUP",0)=U_U_BPCNT_U_BPCNT
"RTN","BPSPRRX1",75,0)
 ;set DIR variables
"RTN","BPSPRRX1",76,0)
 S DIR(0)="P^TMP($J,""BPSPRRX1"",""LOOKUP"",:AEQMZ"
"RTN","BPSPRRX1",77,0)
 I BPSDFLT'="" S DIR("B")=BPSDFLT ;$E(BPSDFLT,1,14)
"RTN","BPSPRRX1",78,0)
 D ^DIR
"RTN","BPSPRRX1",79,0)
 S BPX=$P($G(^TMP($J,"BPSPRRX1","LOOKUP",+Y,0)),U,2)
"RTN","BPSPRRX1",80,0)
 K ^TMP($J,"BPSPRRX1","LOOKUP")
"RTN","BPSPRRX1",81,0)
 I X="^" Q "-1^"
"RTN","BPSPRRX1",82,0)
 I $TR($P(Y,U,2)," ")="" Q "0^"
"RTN","BPSPRRX1",83,0)
 Q Y_U_BPX
"RTN","BPSPRRX1",84,0)
 ;
"RTN","BPSPRRX4")
0^6^B20637795
"RTN","BPSPRRX4",1,0)
BPSPRRX4 ;ALB/SS - ePharmacy secondary billing ;16-DEC-08
"RTN","BPSPRRX4",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**8,9**;JUN 2004;Build 18
"RTN","BPSPRRX4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","BPSPRRX4",4,0)
 ;
"RTN","BPSPRRX4",5,0)
 ;Gather necessary data from primary e-claim 
"RTN","BPSPRRX4",6,0)
 ;BPSIEN59-ien of the PRIMARY transaction in the file BPS TRANSACTION #9002313.59
"RTN","BPSPRRX4",7,0)
 ;BPSDAT-to return data, by reference)
"RTN","BPSPRRX4",8,0)
 ;BPCOBIND - payer sequence
"RTN","BPSPRRX4",9,0)
 ;BPSRESUB - 
"RTN","BPSPRRX4",10,0)
 ; 0 - original (1st) submission via the option "Process Secondary/Tricare Rx to ECME"
"RTN","BPSPRRX4",11,0)
 ; 1 - resubmit via this option
"RTN","BPSPRRX4",12,0)
 ;ret value:
"RTN","BPSPRRX4",13,0)
 ; 1 - success
"RTN","BPSPRRX4",14,0)
 ; 0 - the primary claim was not found OR not enough data in the primary claim
"RTN","BPSPRRX4",15,0)
 ; -1 - the primary claim doesn't have payable status
"RTN","BPSPRRX4",16,0)
PRIMDATA(BPSIEN59,BPSDAT,BPCOBIND,BPSRESUB) ;
"RTN","BPSPRRX4",17,0)
 N BPSRESP,BPSSTAT,BPSPRDT,BPSCLM,Y
"RTN","BPSPRRX4",18,0)
 ;populate certain nodes if it is an original (1st) submission
"RTN","BPSPRRX4",19,0)
 I BPSRESUB=0 D
"RTN","BPSPRRX4",20,0)
 . S BPSDAT("FILL NUMBER")=$P($G(^BPST(BPSIEN59,1)),U,1) ;#9
"RTN","BPSPRRX4",21,0)
 . S BPSDAT("PRESCRIPTION")=$P($G(^BPST(BPSIEN59,1)),U,11) ;#11
"RTN","BPSPRRX4",22,0)
 I $G(BPSDAT("FILL NUMBER"))=""!($G(BPSDAT("PRESCRIPTION"))="") Q 0
"RTN","BPSPRRX4",23,0)
 I BPSRESUB=0 D
"RTN","BPSPRRX4",24,0)
 . S BPSDAT("FILL DATE")=$P($G(^BPST(BPSIEN59,12)),U,2) ;#1202
"RTN","BPSPRRX4",25,0)
 . S BPSDAT("RX ACTION")=$P($G(^BPST(BPSIEN59,12)),U,1) ;#1201
"RTN","BPSPRRX4",26,0)
 . S BPSDAT("BILLNDC")=$P($G(^BPST(BPSIEN59,1)),U,2) ;#10 $$GETNDC^PSONDCUT(BPSDAT("PRESCRIPTION"),BPSDAT("FILL DATE"))
"RTN","BPSPRRX4",27,0)
 ; check if data is there
"RTN","BPSPRRX4",28,0)
 I $G(BPSDAT("FILL DATE"))=""!($G(BPSDAT("RX ACTION"))="")!($G(BPSDAT("BILLNDC"))="") Q 0
"RTN","BPSPRRX4",29,0)
 ;
"RTN","BPSPRRX4",30,0)
 S BPSCLM=$P($G(^BPST(BPSIEN59,0)),U,4) ;#3 CLAIM
"RTN","BPSPRRX4",31,0)
 I BPSCLM S BPSDAT("BIN NUMBER")=$P($G(^BPSC(BPSCLM,100)),U)
"RTN","BPSPRRX4",32,0)
 ;
"RTN","BPSPRRX4",33,0)
 S BPSRESP=$P($G(^BPST(BPSIEN59,0)),U,5) ;#4 RESPONSE
"RTN","BPSPRRX4",34,0)
 I BPSRESP S Y=($P($G(^BPSR(BPSRESP,0)),U,2))\1 X ^DD("DD") S BPSDAT("OTHER PAYER DATE")=Y
"RTN","BPSPRRX4",35,0)
 ;
"RTN","BPSPRRX4",36,0)
 S BPSSTAT=$P($$STATUS^BPSOSRX(+BPSDAT("PRESCRIPTION"),+BPSDAT("FILL NUMBER"),,,BPCOBIND),U)
"RTN","BPSPRRX4",37,0)
 I '$$PAYABLE^BPSOSRX5(BPSSTAT) Q -1
"RTN","BPSPRRX4",38,0)
 I BPSRESUB=0,BPSRESP S BPSDAT("PRIOR PAYMENT")=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,500)),U,9))
"RTN","BPSPRRX4",39,0)
 Q 1
"RTN","BPSPRRX4",40,0)
 ;
"RTN","BPSPRRX4",41,0)
GETFR52(BPSRX,BPSFILL,BPSDAT) ;
"RTN","BPSPRRX4",42,0)
 S BPSDAT("PRESCRIPTION")=BPSRX
"RTN","BPSPRRX4",43,0)
 S BPSDAT("FILL NUMBER")=BPSFILL
"RTN","BPSPRRX4",44,0)
 S BPSDAT("FILL DATE")=$$DOSDATE^BPSSCRRS(BPSRX,BPSFILL)
"RTN","BPSPRRX4",45,0)
 S BPSDAT("BILLNDC")=$$GETNDC^PSONDCUT(BPSRX,BPSFILL)
"RTN","BPSPRRX4",46,0)
 Q
"RTN","BPSPRRX4",47,0)
 ;
"RTN","BPSPRRX4",48,0)
 ;primary claim processing
"RTN","BPSPRRX4",49,0)
 ;BPSRX - ien #52
"RTN","BPSPRRX4",50,0)
 ;BPSRF - refill #
"RTN","BPSPRRX4",51,0)
 ;BPSDFN - ien #2
"RTN","BPSPRRX4",52,0)
 ;BPSDOS - date of service
"RTN","BPSPRRX4",53,0)
 ;BPSECLM - result of $$FINDECLM^BPSPRRX5
"RTN","BPSPRRX4",54,0)
 ;BPRESUB - 1 = the user is resubmitting a new PRIMARY claim
"RTN","BPSPRRX4",55,0)
PRIMARY(BPSRX,BPSRF,BPSDFN,BPSDOS,BPSECLM,BPRESUB) ;
"RTN","BPSPRRX4",56,0)
 N BPRATTYP,BPSPLNSL,BPSPLAN,BPSDAT,BPSQ,BPSWHERE,BPY,BP59,BPSPL59,BPSRT59,BPYDEF
"RTN","BPSPRRX4",57,0)
 S (BP59,BPSPL59,BPSRT59)=""
"RTN","BPSPRRX4",58,0)
 I BPRESUB=1 D
"RTN","BPSPRRX4",59,0)
 . S BP59=$$IEN59^BPSOSRX(BPSRX,BPSRF,1)
"RTN","BPSPRRX4",60,0)
 . ;get an old plan for resubmits
"RTN","BPSPRRX4",61,0)
 . S BPSPL59=+$P($G(^BPST(BP59,10,1,0)),U,1)
"RTN","BPSPRRX4",62,0)
 . S BPSRT59=+$P($G(^BPST(BP59,10,1,0)),U,8)
"RTN","BPSPRRX4",63,0)
 F  S BPRATTYP=$$RATETYPE^BPSPRRX2(BPSRT59) Q:BPRATTYP'=""
"RTN","BPSPRRX4",64,0)
 I BPRATTYP=-1 Q "-100^Action cancelled"
"RTN","BPSPRRX4",65,0)
 ;
"RTN","BPSPRRX4",66,0)
 ;check for ePharmacy primary ins policy
"RTN","BPSPRRX4",67,0)
 S BPYDEF="N"
"RTN","BPSPRRX4",68,0)
 I '$$PRIINSCK(BPSDFN,BPSDOS) D
"RTN","BPSPRRX4",69,0)
 . S BPYDEF="Y"
"RTN","BPSPRRX4",70,0)
 . W !!,"Unable to find a primary insurance policy which is e-Pharmacy billable."
"RTN","BPSPRRX4",71,0)
 . W !,"You must correct this in order to continue.",!
"RTN","BPSPRRX4",72,0)
 . Q
"RTN","BPSPRRX4",73,0)
 ;
"RTN","BPSPRRX4",74,0)
 ;ask the user if he wants to jump to the BCN PATIENT INSURANCE option
"RTN","BPSPRRX4",75,0)
 S BPY=$$YESNO^BPSSCRRS("DO YOU WISH TO ADD/EDIT INSURANCE COMPANY DATA FOR THIS PATIENT?(Y/N)","N")
"RTN","BPSPRRX4",76,0)
 I BPY=1 D EN1^IBNCPDPI(BPSDFN)
"RTN","BPSPRRX4",77,0)
 I BPY=-1 Q "-100^Action cancelled"
"RTN","BPSPRRX4",78,0)
 ;
"RTN","BPSPRRX4",79,0)
 I '$$PRIINSCK(BPSDFN,BPSDOS) Q "-110^No valid group insurance plans"
"RTN","BPSPRRX4",80,0)
 ;
"RTN","BPSPRRX4",81,0)
 ;display available e-billable plans and select the primary plan
"RTN","BPSPRRX4",82,0)
 S BPSQ=0
"RTN","BPSPRRX4",83,0)
 F  D  Q:BPSQ'=0
"RTN","BPSPRRX4",84,0)
 . S BPSPLAN=$$SELECTPL^BPSPRRX1(BPSDFN,BPSDOS,.BPSPLNSL,"PRIMARY INSURANCE POLICY",BPSPL59)
"RTN","BPSPRRX4",85,0)
 . I +BPSPLAN=0 S BPSQ=-100 Q
"RTN","BPSPRRX4",86,0)
 . ;if existing rejected/reversed claim
"RTN","BPSPRRX4",87,0)
 . I +BPSECLM=2,BPRESUB=0 I BPSPLAN=$$GETPL59^BPSPRRX5(+$P(BPSECLM,U,2)) W !,"Already submitted to this plan through ECME. Resubmit if necessary.",!! Q
"RTN","BPSPRRX4",88,0)
 . S BPSQ=1
"RTN","BPSPRRX4",89,0)
 Q:BPSQ=-100 "-100^Action cancelled"
"RTN","BPSPRRX4",90,0)
 Q:BPSQ=-105 "-105^The same group plan selected"
"RTN","BPSPRRX4",91,0)
 I $$YESNO^BPSSCRRS("SUBMIT CLAIM TO "_$P(BPSPLNSL(1),U,2)_" ?(Y/N)","Y")=0 Q "-100^Action cancelled"
"RTN","BPSPRRX4",92,0)
 S BPSWHERE=$S(BPSRF>0:"RF",1:"OF")
"RTN","BPSPRRX4",93,0)
 I BPRESUB=1 S BPSWHERE="ERES"
"RTN","BPSPRRX4",94,0)
 Q $$SUBMCLM^BPSPRRX2(BPSRX,BPSRF,BPSDOS,BPSWHERE,$$GETNDC^PSONDCUT(BPSRX,BPSRF),1,BPSPLAN,.BPSDAT,BPRATTYP)
"RTN","BPSPRRX4",95,0)
 ;
"RTN","BPSPRRX4",96,0)
PRIINSCK(DFN,DOS) ; primary insurance check
"RTN","BPSPRRX4",97,0)
 ; check to see if patient has primary ePharmacy insurance policy
"RTN","BPSPRRX4",98,0)
 ; function value = 1 if there is one, 0 otherwise
"RTN","BPSPRRX4",99,0)
 ;
"RTN","BPSPRRX4",100,0)
 N OK,BPSRET,BPSINS,BPX
"RTN","BPSPRRX4",101,0)
 S OK=0
"RTN","BPSPRRX4",102,0)
 I '$G(DFN)!'$G(DOS) G PRIINX
"RTN","BPSPRRX4",103,0)
 S BPSRET=$$INSUR^IBBAPI(DFN,DOS,"E",.BPSINS,"1,7,8")
"RTN","BPSPRRX4",104,0)
 I '$D(BPSINS) G PRIINX
"RTN","BPSPRRX4",105,0)
 S BPX=0 F  S BPX=$O(BPSINS("IBBAPI","INSUR",BPX)) Q:'BPX  D  Q:OK
"RTN","BPSPRRX4",106,0)
 . I $P($G(BPSINS("IBBAPI","INSUR",BPX,7)),U,1)=1 S OK=1 Q
"RTN","BPSPRRX4",107,0)
 . Q
"RTN","BPSPRRX4",108,0)
PRIINX ;
"RTN","BPSPRRX4",109,0)
 Q OK
"RTN","BPSPRRX4",110,0)
 ;
"RTN","BPSRPT9A")
0^3^B82830891
"RTN","BPSRPT9A",1,0)
BPSRPT9A ;BHAM ISC/BNT - ECME REPORTS UTILITIES ;19-SEPT-08
"RTN","BPSRPT9A",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**8,9**;01-JUN-04;Build 18
"RTN","BPSRPT9A",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","BPSRPT9A",4,0)
 ;
"RTN","BPSRPT9A",5,0)
 ; Use of COLLECT^IBOSRX supported by IA 5361
"RTN","BPSRPT9A",6,0)
 ; Use of $$INSUR^IBBAPI supported by IA 4419
"RTN","BPSRPT9A",7,0)
 ; Use of $$RNB^IBNCPDPI supported by IA 4729
"RTN","BPSRPT9A",8,0)
 ;
"RTN","BPSRPT9A",9,0)
 Q
"RTN","BPSRPT9A",10,0)
 ;
"RTN","BPSRPT9A",11,0)
 ; Collect the Potential Secondary Rx Claims Report data
"RTN","BPSRPT9A",12,0)
GETSEC(BPDT,BPARR) ;
"RTN","BPSRPT9A",13,0)
 N CNT,IBARR S CNT=0
"RTN","BPSRPT9A",14,0)
 N BPSX,BPSY
"RTN","BPSRPT9A",15,0)
 N BPS56 S BPS56=0
"RTN","BPSRPT9A",16,0)
 I '$D(ZTQUEUED),$E(IOST,1,2)="C-" W !!,"Collecting Potential Secondary data ..."
"RTN","BPSRPT9A",17,0)
 K ^TMP("BPSRPT9A",$J)
"RTN","BPSRPT9A",18,0)
 D COLLECT^IBOSRX($P(BPDT,U),$P(BPDT,U,2))   ; get IB claim data (DBIA 5361)
"RTN","BPSRPT9A",19,0)
 D GATHER($P(BPDT,U,1),$P(BPDT,U,2))         ; get ECME claim data - esg 7/6/10
"RTN","BPSRPT9A",20,0)
 I '$D(^TMP("BPSRPT9A",$J)) Q
"RTN","BPSRPT9A",21,0)
 F  S CNT=$O(^TMP("BPSRPT9A",$J,CNT)) Q:CNT=""  D
"RTN","BPSRPT9A",22,0)
 . N DATA,RXI,RXN,RXF,DOS,BILL,DFN,PATNAME,BPDIV,INSC,X,COB,PINS,BP59S,BP59P,IBIFN,TOTCHG,BAL,BPSRESP,BPSPAID
"RTN","BPSRPT9A",23,0)
 . S DATA=$G(^TMP("BPSRPT9A",$J,CNT))
"RTN","BPSRPT9A",24,0)
 . S RXI=$P(DATA,U,1),RXN=$P(DATA,U,2),RXF=$P(DATA,U,3),BILL=$P(DATA,U,4),DFN=$P(DATA,U,5),DOS=$P(DATA,U,6),PINS=$P(DATA,U,7)
"RTN","BPSRPT9A",25,0)
 . S IBIFN=$P(DATA,U,8),TOTCHG=$P(DATA,U,9)
"RTN","BPSRPT9A",26,0)
 . Q:(RXI="")!(RXN="")!(RXF="")!(BILL="")!(DFN="")!(DOS="")!(PINS="")
"RTN","BPSRPT9A",27,0)
 . S PATNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","BPSRPT9A",28,0)
 . ;
"RTN","BPSRPT9A",29,0)
 . ; Drop the claim off this report if the Secondary claim is closed in ECME
"RTN","BPSRPT9A",30,0)
 . ; esg - 7/6/10
"RTN","BPSRPT9A",31,0)
 . S BP59S=+$$IEN59^BPSOSRX(RXI,RXF,2)  ; possible ien to file 9002313.59 for the secondary claim
"RTN","BPSRPT9A",32,0)
 . I $$CLOSED02^BPSSCR03(+$P($G(^BPST(BP59S,0)),U,4)) Q
"RTN","BPSRPT9A",33,0)
 . ;
"RTN","BPSRPT9A",34,0)
 . ; Drop the claim off this report if the Secondary claim is Payable
"RTN","BPSRPT9A",35,0)
 . ; bnt - 7/14/10
"RTN","BPSRPT9A",36,0)
 . S BP59P=+$$IEN59^BPSOSRX(RXI,RXF,1)  ; possible ien to file 9002313.59 for the primary claim
"RTN","BPSRPT9A",37,0)
 . I $$PAYBLSEC^BPSUTIL2(BP59P) Q
"RTN","BPSRPT9A",38,0)
 . ;
"RTN","BPSRPT9A",39,0)
 . ; Drop the claim off this report if the primary payer paid the full amount
"RTN","BPSRPT9A",40,0)
 . ; esg - 8/3/10
"RTN","BPSRPT9A",41,0)
 . I IBIFN,TOTCHG D  I BAL'>0 Q    ; check balance due on entries with payable primary claims
"RTN","BPSRPT9A",42,0)
 .. S BPSRESP=+$P($G(^BPST(BP59P,0)),U,5)  ; response file ien
"RTN","BPSRPT9A",43,0)
 .. S BPSPAID=0
"RTN","BPSRPT9A",44,0)
 .. I BPSRESP S BPSPAID=$$DFF2EXT^BPSECFM($P($G(^BPSR(BPSRESP,1000,1,500)),U,9))   ; paid amt
"RTN","BPSRPT9A",45,0)
 .. S BAL=TOTCHG-BPSPAID    ; balance due:  total charges - primary payer paid amt
"RTN","BPSRPT9A",46,0)
 .. Q
"RTN","BPSRPT9A",47,0)
 . ;
"RTN","BPSRPT9A",48,0)
 . S BPDIV=$$GETDIV^BPSOSQC(RXI,RXF) Q:'BPDIV  ;Outpatient Site #59 ien
"RTN","BPSRPT9A",49,0)
 . S BPS56=+$O(^BPS(9002313.56,"C",BPDIV,0)) Q:'BPS56  ;BPS PHARMACIES #9002313.56 ien
"RTN","BPSRPT9A",50,0)
 . ;filter divisions
"RTN","BPSRPT9A",51,0)
 . I BPPHARM=1,'$D(BPPHARM(BPS56)) Q
"RTN","BPSRPT9A",52,0)
 . S BPDIV(BPDIV)=$$DIVNAME^BPSSCRDS(BPS56)
"RTN","BPSRPT9A",53,0)
 . ;
"RTN","BPSRPT9A",54,0)
 . S PSRT=$S($P($P(BPSORT,U,1),":")="N":PATNAME,$P($P(BPSORT,U,1),":")="P":PINS,$P($P(BPSORT,U,1),":")="S":$S('BPCRON:-DOS,1:DOS),1:BPDIV(BPDIV))
"RTN","BPSRPT9A",55,0)
 . S SSRT=$S($P($P(BPSORT,U,2),":")="N":PATNAME,$P($P(BPSORT,U,2),":")="P":PINS,$P($P(BPSORT,U,2),":")="S":$S('BPCRON:-DOS,1:DOS),$P($P(BPSORT,U,2),":")="D":BPDIV(BPDIV),1:0)
"RTN","BPSRPT9A",56,0)
 . S TSRT=$S($P($P(BPSORT,U,3),":")="N":PATNAME,$P($P(BPSORT,U,3),":")="P":PINS,$P($P(BPSORT,U,3),":")="S":$S('BPCRON:-DOS,1:DOS),$P($P(BPSORT,U,3),":")="D":BPDIV(BPDIV),1:0)
"RTN","BPSRPT9A",57,0)
 . Q:((SSRT="")!(PSRT="")!(TSRT=""))
"RTN","BPSRPT9A",58,0)
 . S BPARR(PSRT,SSRT,TSRT,CNT)=BPDIV(BPDIV)_U_BILL_U_RXN_U_RXF_U_$$FMTE^XLFDT(DOS,"2D")_U_PATNAME_U_"p"_U_PINS_U_$$SSN4^BPSRPT6(DFN)
"RTN","BPSRPT9A",59,0)
 . S (X,INSC)=0
"RTN","BPSRPT9A",60,0)
 . F  S X=$O(^TMP("BPSRPT9A",$J,CNT,X)) Q:X=""  D
"RTN","BPSRPT9A",61,0)
 . . S BPSX=$G(^TMP("BPSRPT9A",$J,CNT,X,7))
"RTN","BPSRPT9A",62,0)
 . . S COB=$S($P(BPSX,U)=1:"p",$P(BPSX,U)=2:"s",$P(BPSX,U)=3:"t",1:"-")
"RTN","BPSRPT9A",63,0)
 . . S BPSY=$P($G(^TMP("BPSRPT9A",$J,CNT,X,1)),U,2)
"RTN","BPSRPT9A",64,0)
 . . Q:BPSY[PINS
"RTN","BPSRPT9A",65,0)
 . . S BPARR(PSRT,SSRT,TSRT,CNT,X)=COB_U_BPSY
"RTN","BPSRPT9A",66,0)
 K ^TMP("BPSRPT9A",$J)
"RTN","BPSRPT9A",67,0)
 Q
"RTN","BPSRPT9A",68,0)
 ;
"RTN","BPSRPT9A",69,0)
 ; Collect the Potential Tricare Rx Claims Report data
"RTN","BPSRPT9A",70,0)
 ; Build array with report data
"RTN","BPSRPT9A",71,0)
 ; BPARR(n)=DIVISION NAME^RX#^FILL^FILL DATE^PATIENT NAME
"RTN","BPSRPT9A",72,0)
 ; BPARR(n,"INS",1)=PRIMARY INS NAME^PRIMARY INS ADDRESS
"RTN","BPSRPT9A",73,0)
 ; BPARR(n,"INS",2)=SECONDARY INS NAME^SECONDARY INS ADDRESS
"RTN","BPSRPT9A",74,0)
 ; BPARR(n,"ELIG")=ELIG 1^ELIG 2^...
"RTN","BPSRPT9A",75,0)
GETTRI(BPDT,BPARR) ;
"RTN","BPSRPT9A",76,0)
 N RXI,RXN,RXF,RXFDT,LIST,RXLIST,BPQUIT,CNT,BPSFLDN
"RTN","BPSRPT9A",77,0)
 S REF=$NA(^TMP($J,"BPSRPT9","AD"))
"RTN","BPSRPT9A",78,0)
 S BPSFLDN=".01;2;6"
"RTN","BPSRPT9A",79,0)
 K @REF
"RTN","BPSRPT9A",80,0)
 S (RXFDT,BPDRUG,CNT)=0,LIST="BPSRPT9"
"RTN","BPSRPT9A",81,0)
 I '$D(ZTQUEUED),$E(IOST,1,2)="C-" W !!,"Collecting TRICARE data ..."
"RTN","BPSRPT9A",82,0)
 D REF^PSO52EX($P(BPDT,U),$P(BPDT,U,2),LIST)
"RTN","BPSRPT9A",83,0)
 I '$D(@REF) Q
"RTN","BPSRPT9A",84,0)
 F  S RXFDT=$O(@REF@(RXFDT)) Q:RXFDT=""  D
"RTN","BPSRPT9A",85,0)
 . S RXI=0 F  S RXI=$O(@REF@(RXFDT,RXI)) Q:RXI=""  D
"RTN","BPSRPT9A",86,0)
 . . S RXF=-1 F  S RXF=$O(@REF@(RXFDT,RXI,RXF)) Q:RXF=""  D
"RTN","BPSRPT9A",87,0)
 . . . N BPELIG,VAEL,BPDRUG,BPDEA,BPIE,DFN,ARR,BPDIV,PSRT,SSRT,TSRT,BPS56
"RTN","BPSRPT9A",88,0)
 . . . S (BPQUIT,BPDIV,BPS56)=0
"RTN","BPSRPT9A",89,0)
 . . . ; Check Pharmacy Division against selected Divisions
"RTN","BPSRPT9A",90,0)
 . . . S BPDIV=$$GETDIV^BPSOSQC(RXI,RXF) Q:'BPDIV  ;Outpatient Site #59 ien
"RTN","BPSRPT9A",91,0)
 . . . S BPS56=+$O(^BPS(9002313.56,"C",BPDIV,0)) Q:'BPS56  ;BPS PHARMACIES #9002313.56 ien
"RTN","BPSRPT9A",92,0)
 . . . ;filter divisions
"RTN","BPSRPT9A",93,0)
 . . . I BPPHARM=1,'$D(BPPHARM(BPS56)) Q
"RTN","BPSRPT9A",94,0)
 . . . D RXAPI^BPSUTIL1(RXI,BPSFLDN,"ARR","IE")
"RTN","BPSRPT9A",95,0)
 . . . S DFN=ARR(52,RXI,2,"I") Q:'DFN
"RTN","BPSRPT9A",96,0)
 . . . D ELIG^VADPT
"RTN","BPSRPT9A",97,0)
 . . . ; Check for TRICARE or SHARING AGREEMENT
"RTN","BPSRPT9A",98,0)
 . . . S BPELIG=$P(VAEL(1),U,2)
"RTN","BPSRPT9A",99,0)
 . . . S BPQUIT=$S(BPELIG="TRICARE":0,BPELIG="SHARING AGREEMENT":0,1:1)
"RTN","BPSRPT9A",100,0)
 . . . S BPELIG(1)=$E(BPELIG,1,4)
"RTN","BPSRPT9A",101,0)
 . . . S X=-1 F  S X=$O(VAEL(1,X)) Q:X=""  D
"RTN","BPSRPT9A",102,0)
 . . . . S BPELIG=$P(VAEL(1,X),U,2)
"RTN","BPSRPT9A",103,0)
 . . . . S BPQUIT=$S(BPELIG="TRICARE":0,BPELIG="SHARING AGREEMENT":0,1:1)
"RTN","BPSRPT9A",104,0)
 . . . . S BPELIG(1)=BPELIG(1)_U_$E(BPELIG,1,4)
"RTN","BPSRPT9A",105,0)
 . . . Q:$S(BPELIG(1)["TRIC":0,BPELIG(1)["SHAR":0,1:1)
"RTN","BPSRPT9A",106,0)
 . . . S BPDRUG=ARR(52,RXI,6,"I") Q:'BPDRUG
"RTN","BPSRPT9A",107,0)
 . . . K ^TMP($J,"BPDRUG") D DATA^PSS50(BPDRUG,,,,,"BPDRUG")
"RTN","BPSRPT9A",108,0)
 . . . S BPDEA=^TMP($J,"BPDRUG",BPDRUG,3)
"RTN","BPSRPT9A",109,0)
 . . . ; Exclude drugs that are exempt from billing
"RTN","BPSRPT9A",110,0)
 . . . I (BPDEA["I")!(BPDEA["S")!(BPDEA["N")&(BPDEA'["E") Q
"RTN","BPSRPT9A",111,0)
 . . . ;
"RTN","BPSRPT9A",112,0)
 . . . ; exclude Rx if it is non-billable - esg 8/4/10
"RTN","BPSRPT9A",113,0)
 . . . I +$$RNB^IBNCPDPI(RXI,RXF) Q
"RTN","BPSRPT9A",114,0)
 . . . ;
"RTN","BPSRPT9A",115,0)
 . . . ; exclude Rx if it is not released - esg 8/5/10
"RTN","BPSRPT9A",116,0)
 . . . I '$$RELDATE^BPSBCKJ(RXI,RXF) Q
"RTN","BPSRPT9A",117,0)
 . . . ;
"RTN","BPSRPT9A",118,0)
 . . . ; exclude Rx if Inpatient and non-billable at time of Release
"RTN","BPSRPT9A",119,0)
 . . . I $$INP(RXI,RXF) Q
"RTN","BPSRPT9A",120,0)
 . . . ;
"RTN","BPSRPT9A",121,0)
 . . . ; Make sure not already ECME billed
"RTN","BPSRPT9A",122,0)
 . . . Q:$$STATUS^BPSOSRX(RXI,RXF)'=""
"RTN","BPSRPT9A",123,0)
 . . . ; Check for TRICARE type insurance group
"RTN","BPSRPT9A",124,0)
 . . . N BPIBA,X,BPOK,BPINS,I
"RTN","BPSRPT9A",125,0)
 . . . I '$$INSUR^IBBAPI(DFN,RXFDT,"P",.BPIBA,"*") Q
"RTN","BPSRPT9A",126,0)
 . . . S (X,BPOK)=0 F I=1:1 S X=$O(BPIBA("IBBAPI","INSUR",X)) Q:X=""  D
"RTN","BPSRPT9A",127,0)
 . . . . I $P(BPIBA("IBBAPI","INSUR",X,21),U,2)="TRICARE" S BPOK=1
"RTN","BPSRPT9A",128,0)
 . . . . N BPCOB S BPCOB=$P(BPIBA("IBBAPI","INSUR",X,7),U) S:BPCOB="" BPCOB=1
"RTN","BPSRPT9A",129,0)
 . . . . S BPINS(DFN,BPCOB)=$P(BPIBA("IBBAPI","INSUR",X,1),U,2)_U_BPIBA("IBBAPI","INSUR",X,2)
"RTN","BPSRPT9A",130,0)
 . . . Q:'BPOK
"RTN","BPSRPT9A",131,0)
 . . . ; Build the return array since all filters have passed
"RTN","BPSRPT9A",132,0)
 . . . S CNT=CNT+1,BPDIV(BPDIV)=$$DIVNAME^BPSSCRDS(BPS56)
"RTN","BPSRPT9A",133,0)
 . . . S PSRT=$S($P($P(BPSORT,U),":")="N":$E(ARR(52,RXI,2,"E"),1,20),$P($P(BPSORT,U),":")="P":$P($G(BPINS(DFN,+$O(BPINS(DFN,0)))),U),$P($P(BPSORT,U),":")="S":$S('BPCRON:-RXFDT,1:RXFDT),1:BPDIV(BPDIV))
"RTN","BPSRPT9A",134,0)
 . . . S SSRT=$S($P($P(BPSORT,U,2),":")="N":$E(ARR(52,RXI,2,"E"),1,20),$P($P(BPSORT,U,2),":")="P":$P($G(BPINS(DFN,+$O(BPINS(DFN,0)))),U),$P($P(BPSORT,U,2),":")="S":$S('BPCRON:-RXFDT,1:RXFDT),$P($P(BPSORT,U,2),":")="D":BPDIV(BPDIV),1:0)
"RTN","BPSRPT9A",135,0)
 . . . S TSRT=$S($P($P(BPSORT,U,3),":")="N":$E(ARR(52,RXI,2,"E"),1,20),$P($P(BPSORT,U,3),":")="P":$P($G(BPINS(DFN,+$O(BPINS(DFN,0)))),U),$P($P(BPSORT,U,3),":")="S":$S('BPCRON:-RXFDT,1:RXFDT),$P($P(BPSORT,U,3),":")="D":BPDIV(BPDIV),1:0)
"RTN","BPSRPT9A",136,0)
 . . . Q:((SSRT="")!(PSRT="")!(TSRT=""))
"RTN","BPSRPT9A",137,0)
 . . . S BPARR(PSRT,SSRT,TSRT,CNT)=BPDIV(BPDIV)_U_ARR(52,RXI,.01,"E")_U_RXF_U_$$FMTE^XLFDT(RXFDT,"2D")_U_$E(ARR(52,RXI,2,"E"),1,20)_U_$$SSN4^BPSRPT6(DFN)
"RTN","BPSRPT9A",138,0)
 . . . I $D(BPINS(DFN,1)) S BPARR(PSRT,SSRT,TSRT,CNT,"INS",1)=BPINS(DFN,1)
"RTN","BPSRPT9A",139,0)
 . . . I $D(BPINS(DFN,2)) S BPARR(PSRT,SSRT,TSRT,CNT,"INS",2)=BPINS(DFN,2)
"RTN","BPSRPT9A",140,0)
 . . . S BPARR(PSRT,SSRT,TSRT,CNT,"ELIG")=BPELIG(1)
"RTN","BPSRPT9A",141,0)
 K @REF,REF
"RTN","BPSRPT9A",142,0)
 I $D(BPARR) S BPARR(0)=CNT
"RTN","BPSRPT9A",143,0)
 Q
"RTN","BPSRPT9A",144,0)
 ;
"RTN","BPSRPT9A",145,0)
GATHER(SDT,EDT) ; Gather cases where we have closed ECME primary claims and available secondary insurance
"RTN","BPSRPT9A",146,0)
 ; Input: SDT - FileMan start date
"RTN","BPSRPT9A",147,0)
 ;        EDT - FileMan end date
"RTN","BPSRPT9A",148,0)
 ;
"RTN","BPSRPT9A",149,0)
 N SDTYMD,EDTYMD,BPDOS,BP02,BP59,BPST0,BPST1,DFN,BPDTFD,RXIEN,RXFIL,IBINS,IBRET,BPRX,BPSPINS,CNT
"RTN","BPSRPT9A",150,0)
 S SDTYMD=$$FM2YMD^BPSSCR04(SDT) I 'SDTYMD S SDTYMD=0          ; start date in YMD format
"RTN","BPSRPT9A",151,0)
 S EDTYMD=$$FM2YMD^BPSSCR04(EDT) I 'EDTYMD S EDTYMD=99999999   ; end date in YMD format
"RTN","BPSRPT9A",152,0)
 S BPDOS=$O(^BPSC("AF",SDTYMD),-1) F  S BPDOS=$O(^BPSC("AF",BPDOS)) Q:'BPDOS!(BPDOS>EDTYMD)  D
"RTN","BPSRPT9A",153,0)
 . S BP02=0 F  S BP02=$O(^BPSC("AF",BPDOS,BP02)) Q:'BP02  D
"RTN","BPSRPT9A",154,0)
 .. S BP59=+$O(^BPST("AE",BP02,0)) Q:'BP59
"RTN","BPSRPT9A",155,0)
 .. S BPST0=$G(^BPST(BP59,0))
"RTN","BPSRPT9A",156,0)
 .. S BPST1=$G(^BPST(BP59,1))
"RTN","BPSRPT9A",157,0)
 .. I $P(BPST0,U,14)'=1 Q               ; looking for primary claims
"RTN","BPSRPT9A",158,0)
 .. I '$$CLOSED02^BPSSCR03(BP02) Q      ; looking for closed claims
"RTN","BPSRPT9A",159,0)
 .. S DFN=+$P(BPST0,U,6)
"RTN","BPSRPT9A",160,0)
 .. S BPDTFD=$$YMD2FM^BPSSCR04(BPDOS)   ; FM date of service
"RTN","BPSRPT9A",161,0)
 .. ;
"RTN","BPSRPT9A",162,0)
 .. ; make sure the Rx is released
"RTN","BPSRPT9A",163,0)
 .. S RXIEN=+$P(BPST1,U,11)
"RTN","BPSRPT9A",164,0)
 .. S RXFIL=+$P(BPST1,U,1)
"RTN","BPSRPT9A",165,0)
 .. I '$$RELDATE^BPSBCKJ(RXIEN,RXFIL) Q
"RTN","BPSRPT9A",166,0)
 .. ;
"RTN","BPSRPT9A",167,0)
 .. ; check insurances for this patient on this date
"RTN","BPSRPT9A",168,0)
 .. K IBINS
"RTN","BPSRPT9A",169,0)
 .. S IBRET=$$INSUR^IBBAPI(DFN,BPDTFD,"P",.IBINS,"1,2,7")
"RTN","BPSRPT9A",170,0)
 .. I '$D(IBINS("IBBAPI","INSUR",2)) Q   ; do not have at least 2 Rx policies so get out
"RTN","BPSRPT9A",171,0)
 .. ;
"RTN","BPSRPT9A",172,0)
 .. ; save this entry in the scratch global
"RTN","BPSRPT9A",173,0)
 .. S BPRX=$$RXAPI1^BPSUTIL1(RXIEN,.01,"I")    ; ext Rx#
"RTN","BPSRPT9A",174,0)
 .. S BPSPINS=$$INSNAME^BPSSCRU6(BP59)         ; ins co name
"RTN","BPSRPT9A",175,0)
 .. S CNT=$O(^TMP("BPSRPT9A",$J,""),-1)+1
"RTN","BPSRPT9A",176,0)
 .. S ^TMP("BPSRPT9A",$J,CNT)=RXIEN_U_BPRX_U_RXFIL_U_"(P) Rej"_U_DFN_U_BPDTFD_U_BPSPINS_U_0_U_0
"RTN","BPSRPT9A",177,0)
 .. M ^TMP("BPSRPT9A",$J,CNT)=IBINS("IBBAPI","INSUR")
"RTN","BPSRPT9A",178,0)
 .. Q
"RTN","BPSRPT9A",179,0)
 . Q
"RTN","BPSRPT9A",180,0)
GATHERX ;
"RTN","BPSRPT9A",181,0)
 Q
"RTN","BPSRPT9A",182,0)
 ;
"RTN","BPSRPT9A",183,0)
INP(BPRXN,BPRFL) ; Is this an inpatient, NON-BILLABLE Rx as of the Release Date?
"RTN","BPSRPT9A",184,0)
 N INP,VAHOW,VAROOT,BPRXIN,VAIP,BPRXREL,BPMW
"RTN","BPSRPT9A",185,0)
 S INP=0
"RTN","BPSRPT9A",186,0)
 ;
"RTN","BPSRPT9A",187,0)
 S VAROOT="BPRXIN"
"RTN","BPSRPT9A",188,0)
 S BPRXREL=$$RELDATE^BPSBCKJ(BPRXN,BPRFL)\1     ; release date
"RTN","BPSRPT9A",189,0)
 I 'BPRXREL S BPRXREL=DT
"RTN","BPSRPT9A",190,0)
 S VAIP("D")=BPRXREL         ; if pt was an inpatient at any time during this day
"RTN","BPSRPT9A",191,0)
 D IN5^VADPT                 ; DBIA 10061 - inpatient episode API
"RTN","BPSRPT9A",192,0)
 I '$G(BPRXIN(1)) G INPX     ; not an inpatient on this day
"RTN","BPSRPT9A",193,0)
 ;
"RTN","BPSRPT9A",194,0)
 ; check Rx release date = discharge date. This is billable so get out (esg 9/13/10)
"RTN","BPSRPT9A",195,0)
 I BPRXREL=(+$G(BPRXIN(17,1))\1) G INPX
"RTN","BPSRPT9A",196,0)
 ;
"RTN","BPSRPT9A",197,0)
 ; if Rx/fill is MAIL, then this is billable so get out (esg 9/13/10)
"RTN","BPSRPT9A",198,0)
 I BPRFL S BPMW=$$REFAPI1^BPSUTIL1(BPRXN,BPRFL,2,"I")   ; 52.1,2 MAIL/WINDOW field
"RTN","BPSRPT9A",199,0)
 I 'BPRFL S BPMW=$$RXAPI1^BPSUTIL1(BPRXN,11,"I")        ; 52,11 MAIL/WINDOW field
"RTN","BPSRPT9A",200,0)
 I BPMW="M" G INPX
"RTN","BPSRPT9A",201,0)
 ;
"RTN","BPSRPT9A",202,0)
 ; inpatient and non-billable
"RTN","BPSRPT9A",203,0)
 S INP=1
"RTN","BPSRPT9A",204,0)
INPX ;
"RTN","BPSRPT9A",205,0)
 Q INP
"RTN","BPSRPT9A",206,0)
 ;
"RTN","BPSSCRU3")
0^8^B31012225
"RTN","BPSSCRU3",1,0)
BPSSCRU3 ;BHAM ISC/SS - ECME SCREEN UTILITIES ;05-APR-05
"RTN","BPSSCRU3",2,0)
 ;;1.0;E CLAIMS MGMT ENGINE;**1,5,7,8,9**;JUN 2004;Build 18
"RTN","BPSSCRU3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","BPSSCRU3",4,0)
 ;USER SCREEN
"RTN","BPSSCRU3",5,0)
 Q
"RTN","BPSSCRU3",6,0)
 ;get comment from BPS TRANSACTION file
"RTN","BPSSCRU3",7,0)
 ;BP59 - ien in that file
"RTN","BPSSCRU3",8,0)
COMMENT(BP59) ;
"RTN","BPSSCRU3",9,0)
 N BPCMNT,BPX,BPTXT
"RTN","BPSSCRU3",10,0)
 S BPCMNT=$O(^BPST(BP59,11,999999),-1)
"RTN","BPSSCRU3",11,0)
 I BPCMNT="" Q ""
"RTN","BPSSCRU3",12,0)
 S BPX=$G(^BPST(BP59,11,BPCMNT,0))
"RTN","BPSSCRU3",13,0)
 S BPTXT=$P(BPX,U,3) I $L(BPTXT)>60 S BPTXT=$E(BPTXT,1,58)_"..."
"RTN","BPSSCRU3",14,0)
 Q $$DATTIM($P(BPX,U,1)\1)_" - "_BPTXT_U_$$USERNAM^BPSCMT01($P(BPX,U,2))
"RTN","BPSSCRU3",15,0)
 ;
"RTN","BPSSCRU3",16,0)
DATTIM(X) ;Convert FM date to displayable (mm/dd/yy HH:MM) format.
"RTN","BPSSCRU3",17,0)
 I +X=0 W ""
"RTN","BPSSCRU3",18,0)
 N DATE,YR,BPT,BPM,BPH,BPAP
"RTN","BPSSCRU3",19,0)
 I $G(X) S YR=$E(X,2,3)
"RTN","BPSSCRU3",20,0)
 I $G(X) S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_YR,1:"")
"RTN","BPSSCRU3",21,0)
 S BPT=$P(X,".",2) S:$L(BPT)<4 BPT=BPT_$E("0000",1,4-$L(BPT))
"RTN","BPSSCRU3",22,0)
 S BPH=$E(BPT,1,2),BPM=$E(BPT,3,4)
"RTN","BPSSCRU3",23,0)
 S BPAP="a" I BPH>12 S BPH=BPH-12,BPAP="p" S:$L(BPH)<2 BPH="0"_BPH
"RTN","BPSSCRU3",24,0)
 I BPT S:'BPH BPH=12 S DATE=DATE_" "_BPH_":"_BPM_BPAP
"RTN","BPSSCRU3",25,0)
 Q $G(DATE)
"RTN","BPSSCRU3",26,0)
 ;/**
"RTN","BPSSCRU3",27,0)
 ;a wrapper for $$STATUS^BPSOSRX to get the status by BPS TRANSACTION pointer
"RTN","BPSSCRU3",28,0)
 ;input BP59 - ptr to 9002313.59
"RTN","BPSSCRU3",29,0)
 ;output - pieces 1,2 and 3 of the $$STATUS^BPSOSRX output
"RTN","BPSSCRU3",30,0)
 ; example: "E REVERSAL ACCEPTED^3071206.152829^Reversal Accepted"
"RTN","BPSSCRU3",31,0)
CLAIMST(BP59) ;*/
"RTN","BPSSCRU3",32,0)
 N BPX,BPSTATUS,BPREF,BPSCHED
"RTN","BPSSCRU3",33,0)
 N BPCOB S BPCOB=$$COB59^BPSUTIL2(BP59)
"RTN","BPSSCRU3",34,0)
 S BPSCHED=0
"RTN","BPSSCRU3",35,0)
 S BPX=$$RXREF^BPSSCRU2(BP59)
"RTN","BPSSCRU3",36,0)
 S BPREF=$P(BPX,U,2)
"RTN","BPSSCRU3",37,0)
 S BPSTATUS=$$STATUS^BPSOSRX(+BPX,BPREF,,,BPCOB)
"RTN","BPSSCRU3",38,0)
 ;if the request completed (99%) and there is another active (scheduled, activated, 
"RTN","BPSSCRU3",39,0)
 ;in process,completed but not inactivated yet) request then return IN PROGRESS
"RTN","BPSSCRU3",40,0)
 I $P(BPSTATUS,U,4)=99,$$ACTREQS^BPSOSRX6(+BPX,BPREF,BPCOB) S BPSCHED=1
"RTN","BPSSCRU3",41,0)
 I BPSCHED I ($P(BPSTATUS,U)="E PAYABLE")!($P(BPSTATUS,U)="E REVERSAL ACCEPTED") Q "IN PROGRESS"_U_$P(BPSTATUS,U,2)
"RTN","BPSSCRU3",42,0)
 Q $P(BPSTATUS,U,1,3)
"RTN","BPSSCRU3",43,0)
 ;
"RTN","BPSSCRU3",44,0)
 ;/**
"RTN","BPSSCRU3",45,0)
 ;pointers for RESPONSE file (#9002313.03) by pointer in TRANSACTION file #9002313.59
"RTN","BPSSCRU3",46,0)
 ;B59 - ptr to #9002313.59
"RTN","BPSSCRU3",47,0)
 ;BPRESP - ptr to #9002313.03
"RTN","BPSSCRU3",48,0)
 ;BPPOS - position inside #9002313.03 (i.e. the number 
"RTN","BPSSCRU3",49,0)
 ;of the claim in the transmission - currently we always have only 1
"RTN","BPSSCRU3",50,0)
GRESPPOS(BP59,BPRESP,BPPOS) ;*/
"RTN","BPSSCRU3",51,0)
 I $G(^BPST(BP59,4)) D  ; reversal kind of message
"RTN","BPSSCRU3",52,0)
 . S BPRESP=+$P(^BPST(BP59,4),U,2)
"RTN","BPSSCRU3",53,0)
 . S BPPOS=1
"RTN","BPSSCRU3",54,0)
 E  D
"RTN","BPSSCRU3",55,0)
 . S BPRESP=+$P($G(^BPST(BP59,0)),U,5)
"RTN","BPSSCRU3",56,0)
 . S BPPOS=+$P($G(^BPST(BP59,0)),U,9)
"RTN","BPSSCRU3",57,0)
 Q:+BPRESP=0 0
"RTN","BPSSCRU3",58,0)
 Q:+BPPOS=0 0
"RTN","BPSSCRU3",59,0)
 Q 1
"RTN","BPSSCRU3",60,0)
 ;
"RTN","BPSSCRU3",61,0)
 ;/**
"RTN","BPSSCRU3",62,0)
 ;reject message from RESPONSE file
"RTN","BPSSCRU3",63,0)
 ;BP59 - ptr to 9002313.59
"RTN","BPSSCRU3",64,0)
 ;BPTOP - top level index (for exmpl "504" for ^BPSR(D0,504)= (#504) Message [1F]
"RTN","BPSSCRU3",65,0)
 ;BPDEEP - lower level (for exmpl BPTOP=1000 and BPDEEP=525 for  
"RTN","BPSSCRU3",66,0)
 ;  ^BPSR(D0,1000,D1,525)= (#525) DUR Response Data [1F]
"RTN","BPSSCRU3",67,0)
 ;
"RTN","BPSSCRU3",68,0)
GETMESS(BPTOP,BPDEEP,BP59) ;
"RTN","BPSSCRU3",69,0)
 N BP59DAT,BPRESP,BPPOS
"RTN","BPSSCRU3",70,0)
 N BP1
"RTN","BPSSCRU3",71,0)
 ;S (BPRESP,BPPOS)=0
"RTN","BPSSCRU3",72,0)
 ;get response and position in the BPS RESPONSE file
"RTN","BPSSCRU3",73,0)
 I $$GRESPPOS(BP59,.BPRESP,.BPPOS)=0 Q ""
"RTN","BPSSCRU3",74,0)
 ; -------- transmission specific message ----------
"RTN","BPSSCRU3",75,0)
 I BPTOP=504 Q $P($G(^BPSR(BPRESP,504)),U)
"RTN","BPSSCRU3",76,0)
 ;
"RTN","BPSSCRU3",77,0)
 ; -------claim specific message-----------
"RTN","BPSSCRU3",78,0)
 ;assuming there is only one claim/response per transmission
"RTN","BPSSCRU3",79,0)
 S BP1=$O(^BPSR(BPRESP,BPTOP,0))
"RTN","BPSSCRU3",80,0)
 I BP1=0 Q ""
"RTN","BPSSCRU3",81,0)
 ;---525: DUR
"RTN","BPSSCRU3",82,0)
 ;---526: Additional Message Information
"RTN","BPSSCRU3",83,0)
 ;---504: Message for the claim
"RTN","BPSSCRU3",84,0)
 I (BPDEEP=525)!(BPDEEP=526)!(BPDEEP=504) Q $P($G(^BPSR(BPRESP,1000,BPPOS,BPDEEP)),U)
"RTN","BPSSCRU3",85,0)
 Q ""
"RTN","BPSSCRU3",86,0)
 ;
"RTN","BPSSCRU3",87,0)
 ;reject message from RESPONSE file
"RTN","BPSSCRU3",88,0)
 ;BP59 - ptr to 9002313.59
"RTN","BPSSCRU3",89,0)
 ;BPARR1 - array to return messages (by ref)
"RTN","BPSSCRU3",90,0)
 ;BPN1 - index for the array (by ref - will 
"RTN","BPSSCRU3",91,0)
 ;  be incremented if more than one node added)
"RTN","BPSSCRU3",92,0)
 ;BPMLEN - max length for each string
"RTN","BPSSCRU3",93,0)
 ;PBPREF - for prefix string
"RTN","BPSSCRU3",94,0)
 ;. D GETMESS^BPSSCRU3(1000,504,BP59,.BPARR,.BPN,50)
"RTN","BPSSCRU3",95,0)
 ;compare GETRJCOD from BPSSCRu2
"RTN","BPSSCRU3",96,0)
GETRJCOD(BP59,BPARR1,BPN1,BPMLEN,PBPREF) ;
"RTN","BPSSCRU3",97,0)
 N BP59DAT S BP59DAT=$G(^BPST(BP59,0))
"RTN","BPSSCRU3",98,0)
 N BPRESP,BPPOS
"RTN","BPSSCRU3",99,0)
 N BPRJCOD
"RTN","BPSSCRU3",100,0)
 N BPRJTXT
"RTN","BPSSCRU3",101,0)
 N BPSTR
"RTN","BPSSCRU3",102,0)
 N BPRJ
"RTN","BPSSCRU3",103,0)
 ;pointers for RESPONSE file (#9002313.03) by pointer in TRANSACTION file #9002313.59
"RTN","BPSSCRU3",104,0)
 ;get response and position 
"RTN","BPSSCRU3",105,0)
 I $$GRESPPOS(BP59,.BPRESP,.BPPOS)=0 Q
"RTN","BPSSCRU3",106,0)
 S BPRJ=0
"RTN","BPSSCRU3",107,0)
 S BPSTR=""
"RTN","BPSSCRU3",108,0)
 F  S BPRJ=$O(^BPSR(BPRESP,1000,BPPOS,511,BPRJ)) Q:+BPRJ=0  D
"RTN","BPSSCRU3",109,0)
 . S BPRJCOD=$P($G(^BPSR(BPRESP,1000,BPPOS,511,BPRJ,0)),U)
"RTN","BPSSCRU3",110,0)
 . Q:$L(BPRJCOD)=0
"RTN","BPSSCRU3",111,0)
 . S BPRJTXT=$$GETRJNAM(BPRJCOD)
"RTN","BPSSCRU3",112,0)
 . S BPN1=BPN1+1,BPARR1(BPN1)=PBPREF_BPRJTXT
"RTN","BPSSCRU3",113,0)
 Q BPN1
"RTN","BPSSCRU3",114,0)
 ;/**
"RTN","BPSSCRU3",115,0)
 ;Input:
"RTN","BPSSCRU3",116,0)
 ; BP59 - pointer to file #9002313.59
"RTN","BPSSCRU3",117,0)
 ;Output:
"RTN","BPSSCRU3",118,0)
 ; BPRCODES - array for reject codes by reference
"RTN","BPSSCRU3",119,0)
REJCODES(BP59,BPRCODES) ;get reject codes
"RTN","BPSSCRU3",120,0)
 N BPRESP,BPPOS,BPA,BPR
"RTN","BPSSCRU3",121,0)
 ;pointers for RESPONSE file (#9002313.03) by pointer in TRANSACTION file #9002313.59
"RTN","BPSSCRU3",122,0)
 ;get response and position
"RTN","BPSSCRU3",123,0)
 I $$GRESPPOS(BP59,.BPRESP,.BPPOS)=0 Q
"RTN","BPSSCRU3",124,0)
 ;
"RTN","BPSSCRU3",125,0)
 S BPA=0
"RTN","BPSSCRU3",126,0)
 F  S BPA=$O(^BPSR(BPRESP,1000,BPPOS,511,BPA)) Q:'BPA  D
"RTN","BPSSCRU3",127,0)
 . S BPR=$P(^BPSR(BPRESP,1000,BPPOS,511,BPA,0),U)
"RTN","BPSSCRU3",128,0)
 . I BPR'="" S BPRCODES(BPR)=""
"RTN","BPSSCRU3",129,0)
 Q
"RTN","BPSSCRU3",130,0)
 ;/**
"RTN","BPSSCRU3",131,0)
 ;BPRJCODE - code
"RTN","BPSSCRU3",132,0)
GETRJNAM(BPRJCODE) ;*/
"RTN","BPSSCRU3",133,0)
 N BPRJIEN
"RTN","BPSSCRU3",134,0)
 S BPRJIEN=$O(^BPSF(9002313.93,"B",BPRJCODE,0))
"RTN","BPSSCRU3",135,0)
 Q:+BPRJIEN=0 ""
"RTN","BPSSCRU3",136,0)
 Q BPRJCODE_":"_$P($G(^BPSF(9002313.93,BPRJIEN,0)),U,2)
"RTN","BPSSCRU3",137,0)
 ;/**
"RTN","BPSSCRU3",138,0)
 ;BP59 - ptr to 9002313.59
"RTN","BPSSCRU3",139,0)
 ;was the claim ever autoreversed ?
"RTN","BPSSCRU3",140,0)
AUTOREV(BP59) ;*/
"RTN","BPSSCRU3",141,0)
 N BP02
"RTN","BPSSCRU3",142,0)
 S BP02=+$P($G(^BPST(BP59,0)),U,4)
"RTN","BPSSCRU3",143,0)
 Q +$P($G(^BPSC(BP02,0)),U,7)
"RTN","BPSSCRU3",144,0)
 ;
"RTN","BPSSCRU3",145,0)
 ;/**
"RTN","BPSSCRU3",146,0)
 ;BP59 - ptr to 9002313.59
"RTN","BPSSCRU3",147,0)
 ;returns :
"RTN","BPSSCRU3",148,0)
 ;0 Waiting to start
"RTN","BPSSCRU3",149,0)
 ;10 Gathering claim info
"RTN","BPSSCRU3",150,0)
 ;19 Special Grouping
"RTN","BPSSCRU3",151,0)
 ;30 Waiting for packet build
"RTN","BPSSCRU3",152,0)
 ;31 Wait for retry (insurer asleep)
"RTN","BPSSCRU3",153,0)
 ;40 Packet being built
"RTN","BPSSCRU3",154,0)
 ;50 Waiting for transmit
"RTN","BPSSCRU3",155,0)
 ;51 Wait for retry (comms error)
"RTN","BPSSCRU3",156,0)
 ;60 Transmitting
"RTN","BPSSCRU3",157,0)
 ;70 Receiving Response
"RTN","BPSSCRU3",158,0)
 ;80 Waiting to process response
"RTN","BPSSCRU3",159,0)
 ;90 Processing response
"RTN","BPSSCRU3",160,0)
 ;99 Done
"RTN","BPSSCRU3",161,0)
 ;
"RTN","BPSSCRU3",162,0)
PRCNTG(BP59) ;*/
"RTN","BPSSCRU3",163,0)
 Q +$P($G(^BPST(BP59,0)),U,2)
"RTN","BPSSCRU3",164,0)
 ;
"RTN","BPSSCRU3",165,0)
 ;
"RTN","BPSSCRU3",166,0)
LINE(BPN,BPCH) ;
"RTN","BPSSCRU3",167,0)
 N BP1
"RTN","BPSSCRU3",168,0)
 S $P(BP1,BPCH,BPN+1)=""
"RTN","BPSSCRU3",169,0)
 Q BP1
"RTN","BPSSCRU3",170,0)
 ;
"RTN","BPSSCRU3",171,0)
DTTIME(X) ;Convert FM date to displayable (mm/dd/yy HH:MM) format.
"RTN","BPSSCRU3",172,0)
 I +X=0 W ""
"RTN","BPSSCRU3",173,0)
 N DATE,YR,BPT,BPM,BPH,BPAP,BPS
"RTN","BPSSCRU3",174,0)
 I $G(X) S YR=$E(X,1,3)+1700
"RTN","BPSSCRU3",175,0)
 I $G(X) S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_YR,1:"")
"RTN","BPSSCRU3",176,0)
 S BPT=$P(X,".",2)
"RTN","BPSSCRU3",177,0)
 I BPT S:$L(BPT)<6 BPT=BPT_$E("000000",1,6-$L(BPT))
"RTN","BPSSCRU3",178,0)
 S BPH=$E(BPT,1,2),BPM=$E(BPT,3,4),BPS=$E(BPT,5,6)
"RTN","BPSSCRU3",179,0)
 I BPT S DATE=DATE_"@"_BPH_":"_BPM_":"_BPS
"RTN","BPSSCRU3",180,0)
 Q $G(DATE)
"RTN","BPSSCRU3",181,0)
 ;
"RTN","BPSSCRU3",182,0)
 ;call IB API to get insurance data, then select proper insurance by its name
"RTN","BPSSCRU3",183,0)
 ;get its phone number
"RTN","BPSSCRU3",184,0)
 ;input: 
"RTN","BPSSCRU3",185,0)
 ; DFN - patient IEN in #2
"RTN","BPSSCRU3",186,0)
 ; BPDOS - date of service
"RTN","BPSSCRU3",187,0)
 ; BPINSNM - insurance name
"RTN","BPSSCRU3",188,0)
 ;output: insurance ien^insurance name^phone
"RTN","BPSSCRU3",189,0)
GETPHONE(BPDFN,BPDOS,BPINSNM) ;
"RTN","BPSSCRU3",190,0)
 N BPX,BPZZ,BP1,BPPHONE
"RTN","BPSSCRU3",191,0)
 S BPPHONE=""
"RTN","BPSSCRU3",192,0)
 I $$INSUR^IBBAPI(BPDFN,BPDOS,,.BPZZ,"1,6")'=1 Q ""
"RTN","BPSSCRU3",193,0)
 S BP1="" F  S BP1=$O(BPZZ("IBBAPI","INSUR",BP1)) Q:+BP1=0  D
"RTN","BPSSCRU3",194,0)
 . I BPINSNM=$P($G(BPZZ("IBBAPI","INSUR",BP1,1)),U,2) S BPPHONE=$G(BPZZ("IBBAPI","INSUR",BP1,6)) Q
"RTN","BPSSCRU3",195,0)
 Q BPPHONE
"RTN","BPSSCRU3",196,0)
 ;
"RTN","BPSSCRU3",197,0)
 ;try to get insurance name and phone from #9002313.59, #9002313.57 and from INSUR^IBBAPI 
"RTN","BPSSCRU3",198,0)
 ;input: BP59 - ien in #9002313.59
"RTN","BPSSCRU3",199,0)
 ;return insurance_name^phone#
"RTN","BPSSCRU3",200,0)
NAMEPHON(BP59) ;
"RTN","BPSSCRU3",201,0)
 N BPHONE,BPINSNM,BPINSID,BP57,BPINSN
"RTN","BPSSCRU3",202,0)
 S BPHONE=$P($G(^BPST(BP59,10,+$G(^BPST(BP59,9)),3)),U,2)
"RTN","BPSSCRU3",203,0)
 S BPINSNM=$P($G(^BPST(BP59,10,+$G(^BPST(BP59,9)),0)),U,7)
"RTN","BPSSCRU3",204,0)
 S BP57=0
"RTN","BPSSCRU3",205,0)
 F  Q:(BPHONE'="")&(BPINSNM'="")  S BP57=$O(^BPSTL("B",BP59,BP57)) Q:+BP57=0  D
"RTN","BPSSCRU3",206,0)
 . S BPINSN=+$G(^BPSTL(BP57,9))
"RTN","BPSSCRU3",207,0)
 . S:BPHONE="" BPHONE=$P($G(^BPSTL(BP57,10,BPINSN,3)),U,2)
"RTN","BPSSCRU3",208,0)
 . S:BPINSNM="" BPINSNM=$P($G(^BPSTL(BP57,10,BPINSN,0)),U,7)
"RTN","BPSSCRU3",209,0)
 ;
"RTN","BPSSCRU3",210,0)
 I (BPINSNM'="")&(BPHONE="") D
"RTN","BPSSCRU3",211,0)
 . S BPDOS=+$P($G(^BPST(BP59,12)),U,2)\1
"RTN","BPSSCRU3",212,0)
 . I BPDOS=0 S BPDOS=+$P($G(^BPST(BP59,0)),U,8)\1
"RTN","BPSSCRU3",213,0)
 . S BPDFN=+$P($G(^BPST(BP59,0)),U,6)
"RTN","BPSSCRU3",214,0)
 . S BPHONE=$$GETPHONE(BPDFN,BPDOS,BPINSNM)
"RTN","BPSSCRU3",215,0)
 Q BPINSNM_U_BPHONE
"RTN","BPSSCRU3",216,0)
 ;
"VER")
8.0^22.0
"^DD",9002313.57,9002313.57,10308,0)
OTHER COVERAGE CODE CALCULATED^CJ1^^ ; ^S X=$$FIELD^BPSOS57(308)
"^DD",9002313.57,9002313.57,10308,9)
^
"^DD",9002313.57,9002313.57,10308,9.01)

"^DD",9002313.57,9002313.57,10308,9.1)
S X=$$FIELD^BPSOS57(308)
"^DD",9002313.57,9002313.57,10308,21,0)
^^6^6^3101013^
"^DD",9002313.57,9002313.57,10308,21,1,0)
Code indicating whether or not the patient has other insurance coverage. 
"^DD",9002313.57,9002313.57,10308,21,2,0)
It returns OTHER COVERAGE CODE (#308) field of the MEDICATIONS 
"^DD",9002313.57,9002313.57,10308,21,3,0)
(#9002313.0201) sub-file of the BPS CLAIMS (#900213.02) file.
"^DD",9002313.57,9002313.57,10308,21,4,0)
 
"^DD",9002313.57,9002313.57,10308,21,5,0)
If the patient has no other insurance coverage an empty string is
"^DD",9002313.57,9002313.57,10308,21,6,0)
returned.
"^DD",9002313.57,9002313.57,10308,"DT")
3101013
**INSTALL NAME**
PSO*7.0*358
"BLD",8058,0)
PSO*7.0*358^OUTPATIENT PHARMACY^0^3101101^y
"BLD",8058,4,0)
^9.64PA^52^2
"BLD",8058,4,52,0)
52
"BLD",8058,4,52,2,0)
^9.641^52.25^1
"BLD",8058,4,52,2,52.25,0)
REJECT INFO  (sub-file)
"BLD",8058,4,52,2,52.25,1,0)
^9.6411^27^1
"BLD",8058,4,52,2,52.25,1,27,0)
COORDINATION OF BENEFITS
"BLD",8058,4,52,222)
y^y^p^^^^n^^n
"BLD",8058,4,52,224)

"BLD",8058,4,52.87,0)
52.87
"BLD",8058,4,52.87,222)
y^y^f^^^^n
"BLD",8058,4,"APDD",52,52.25)

"BLD",8058,4,"APDD",52,52.25,27)

"BLD",8058,4,"B",52,52)

"BLD",8058,4,"B",52.87,52.87)

"BLD",8058,6.3)
35
"BLD",8058,"ABPKG")
n
"BLD",8058,"KRN",0)
^9.67PA^779.2^20
"BLD",8058,"KRN",.4,0)
.4
"BLD",8058,"KRN",.4,"NM",0)
^9.68A^^
"BLD",8058,"KRN",.401,0)
.401
"BLD",8058,"KRN",.402,0)
.402
"BLD",8058,"KRN",.402,"NM",0)
^9.68A^^
"BLD",8058,"KRN",.403,0)
.403
"BLD",8058,"KRN",.5,0)
.5
"BLD",8058,"KRN",.84,0)
.84
"BLD",8058,"KRN",3.6,0)
3.6
"BLD",8058,"KRN",3.8,0)
3.8
"BLD",8058,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",8058,"KRN",9.2,0)
9.2
"BLD",8058,"KRN",9.8,0)
9.8
"BLD",8058,"KRN",9.8,"NM",0)
^9.68A^27^27
"BLD",8058,"KRN",9.8,"NM",1,0)
PSOCAN4^^0^B43086462
"BLD",8058,"KRN",9.8,"NM",2,0)
PSOREJP1^^0^B82556492
"BLD",8058,"KRN",9.8,"NM",3,0)
PSOREJP3^^0^B79304493
"BLD",8058,"KRN",9.8,"NM",4,0)
PSOREJU3^^0^B68089605
"BLD",8058,"KRN",9.8,"NM",5,0)
PSOREJU4^^0^B31223921
"BLD",8058,"KRN",9.8,"NM",6,0)
PSOREJP2^^0^B86681161
"BLD",8058,"KRN",9.8,"NM",7,0)
PSON52^^0^B64423774
"BLD",8058,"KRN",9.8,"NM",8,0)
PSOBPSU1^^0^B53851823
"BLD",8058,"KRN",9.8,"NM",9,0)
PSOTRI^^0^B15159690
"BLD",8058,"KRN",9.8,"NM",10,0)
PSOBORP0^^0^B11739758
"BLD",8058,"KRN",9.8,"NM",11,0)
PSOBORP1^^0^B107834737
"BLD",8058,"KRN",9.8,"NM",12,0)
PSOBORP2^^0^B20686173
"BLD",8058,"KRN",9.8,"NM",13,0)
PSOBORP3^^0^B186304557
"BLD",8058,"KRN",9.8,"NM",14,0)
PSOBPSU2^^0^B48423091
"BLD",8058,"KRN",9.8,"NM",15,0)
PSOREJUT^^0^B48633596
"BLD",8058,"KRN",9.8,"NM",16,0)
PSOREJU2^^0^B49455422
"BLD",8058,"KRN",9.8,"NM",17,0)
PSOHLD^^0^B50785311
"BLD",8058,"KRN",9.8,"NM",18,0)
PSOORED2^^0^B73436344
"BLD",8058,"KRN",9.8,"NM",19,0)
PSOORED7^^0^B23964642
"BLD",8058,"KRN",9.8,"NM",20,0)
PSOR52^^0^B34697297
"BLD",8058,"KRN",9.8,"NM",21,0)
PSOREJU1^^0^B72644745
"BLD",8058,"KRN",9.8,"NM",22,0)
PSORN52^^0^B47667744
"BLD",8058,"KRN",9.8,"NM",23,0)
PSOSUPOE^^0^B65674762
"BLD",8058,"KRN",9.8,"NM",24,0)
PSOSUPRX^^0^B46405696
"BLD",8058,"KRN",9.8,"NM",25,0)
PSOVER1^^0^B57808886
"BLD",8058,"KRN",9.8,"NM",26,0)
PSOBPSUT^^0^B54958775
"BLD",8058,"KRN",9.8,"NM",27,0)
PSORXL1^^0^B49207569
"BLD",8058,"KRN",9.8,"NM","B","PSOBORP0",10)

"BLD",8058,"KRN",9.8,"NM","B","PSOBORP1",11)

"BLD",8058,"KRN",9.8,"NM","B","PSOBORP2",12)

"BLD",8058,"KRN",9.8,"NM","B","PSOBORP3",13)

"BLD",8058,"KRN",9.8,"NM","B","PSOBPSU1",8)

"BLD",8058,"KRN",9.8,"NM","B","PSOBPSU2",14)

"BLD",8058,"KRN",9.8,"NM","B","PSOBPSUT",26)

"BLD",8058,"KRN",9.8,"NM","B","PSOCAN4",1)

"BLD",8058,"KRN",9.8,"NM","B","PSOHLD",17)

"BLD",8058,"KRN",9.8,"NM","B","PSON52",7)

"BLD",8058,"KRN",9.8,"NM","B","PSOORED2",18)

"BLD",8058,"KRN",9.8,"NM","B","PSOORED7",19)

"BLD",8058,"KRN",9.8,"NM","B","PSOR52",20)

"BLD",8058,"KRN",9.8,"NM","B","PSOREJP1",2)

"BLD",8058,"KRN",9.8,"NM","B","PSOREJP2",6)

"BLD",8058,"KRN",9.8,"NM","B","PSOREJP3",3)

"BLD",8058,"KRN",9.8,"NM","B","PSOREJU1",21)

"BLD",8058,"KRN",9.8,"NM","B","PSOREJU2",16)

"BLD",8058,"KRN",9.8,"NM","B","PSOREJU3",4)

"BLD",8058,"KRN",9.8,"NM","B","PSOREJU4",5)

"BLD",8058,"KRN",9.8,"NM","B","PSOREJUT",15)

"BLD",8058,"KRN",9.8,"NM","B","PSORN52",22)

"BLD",8058,"KRN",9.8,"NM","B","PSORXL1",27)

"BLD",8058,"KRN",9.8,"NM","B","PSOSUPOE",23)

"BLD",8058,"KRN",9.8,"NM","B","PSOSUPRX",24)

"BLD",8058,"KRN",9.8,"NM","B","PSOTRI",9)

"BLD",8058,"KRN",9.8,"NM","B","PSOVER1",25)

"BLD",8058,"KRN",19,0)
19
"BLD",8058,"KRN",19,"NM",0)
^9.68A^10^9
"BLD",8058,"KRN",19,"NM",2,0)
PSO EPHARMACY MENU^^0
"BLD",8058,"KRN",19,"NM",3,0)
PSO TRICARE OVERRIDE REPORT^^0
"BLD",8058,"KRN",19,"NM",4,0)
PSO IGNORED REJECTS REPORT^^4^
"BLD",8058,"KRN",19,"NM",5,0)
PSO PMP^^4^
"BLD",8058,"KRN",19,"NM",6,0)
PSO NDC VALIDATE^^4^
"BLD",8058,"KRN",19,"NM",7,0)
PSO PMP SITE PREFERENCES^^4^
"BLD",8058,"KRN",19,"NM",8,0)
PSO ePHARM SITE PARAMETERS^^4^
"BLD",8058,"KRN",19,"NM",9,0)
PSO REJECTS VIEW/PROCESS^^4^
"BLD",8058,"KRN",19,"NM",10,0)
PSO REJECTS WORKLIST^^4^
"BLD",8058,"KRN",19,"NM","B","PSO EPHARMACY MENU",2)

"BLD",8058,"KRN",19,"NM","B","PSO IGNORED REJECTS REPORT",4)

"BLD",8058,"KRN",19,"NM","B","PSO NDC VALIDATE",6)

"BLD",8058,"KRN",19,"NM","B","PSO PMP",5)

"BLD",8058,"KRN",19,"NM","B","PSO PMP SITE PREFERENCES",7)

"BLD",8058,"KRN",19,"NM","B","PSO REJECTS VIEW/PROCESS",9)

"BLD",8058,"KRN",19,"NM","B","PSO REJECTS WORKLIST",10)

"BLD",8058,"KRN",19,"NM","B","PSO TRICARE OVERRIDE REPORT",3)

"BLD",8058,"KRN",19,"NM","B","PSO ePHARM SITE PARAMETERS",8)

"BLD",8058,"KRN",19.1,0)
19.1
"BLD",8058,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",8058,"KRN",19.1,"NM",1,0)
PSO TRICARE^^0
"BLD",8058,"KRN",19.1,"NM",2,0)
PSO TRICARE MGR^^0
"BLD",8058,"KRN",19.1,"NM","B","PSO TRICARE",1)

"BLD",8058,"KRN",19.1,"NM","B","PSO TRICARE MGR",2)

"BLD",8058,"KRN",101,0)
101
"BLD",8058,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",8058,"KRN",101,"NM",1,0)
PSO REJECT TRICARE MENU^^2
"BLD",8058,"KRN",101,"NM",2,0)
PSO REJECT DISPLAY IGNORE^^4^
"BLD",8058,"KRN",101,"NM","B","PSO REJECT DISPLAY IGNORE",2)

"BLD",8058,"KRN",101,"NM","B","PSO REJECT TRICARE MENU",1)

"BLD",8058,"KRN",409.61,0)
409.61
"BLD",8058,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",8058,"KRN",771,0)
771
"BLD",8058,"KRN",779.2,0)
779.2
"BLD",8058,"KRN",870,0)
870
"BLD",8058,"KRN",8989.51,0)
8989.51
"BLD",8058,"KRN",8989.52,0)
8989.52
"BLD",8058,"KRN",8994,0)
8994
"BLD",8058,"KRN","B",.4,.4)

"BLD",8058,"KRN","B",.401,.401)

"BLD",8058,"KRN","B",.402,.402)

"BLD",8058,"KRN","B",.403,.403)

"BLD",8058,"KRN","B",.5,.5)

"BLD",8058,"KRN","B",.84,.84)

"BLD",8058,"KRN","B",3.6,3.6)

"BLD",8058,"KRN","B",3.8,3.8)

"BLD",8058,"KRN","B",9.2,9.2)

"BLD",8058,"KRN","B",9.8,9.8)

"BLD",8058,"KRN","B",19,19)

"BLD",8058,"KRN","B",19.1,19.1)

"BLD",8058,"KRN","B",101,101)

"BLD",8058,"KRN","B",409.61,409.61)

"BLD",8058,"KRN","B",771,771)

"BLD",8058,"KRN","B",779.2,779.2)

"BLD",8058,"KRN","B",870,870)

"BLD",8058,"KRN","B",8989.51,8989.51)

"BLD",8058,"KRN","B",8989.52,8989.52)

"BLD",8058,"KRN","B",8994,8994)

"BLD",8058,"QDEF")
^^^^^^^^^^
"BLD",8058,"QUES",0)
^9.62^^
"BLD",8058,"REQB",0)
^9.611^5^5
"BLD",8058,"REQB",1,0)
PSO*7.0*225^2
"BLD",8058,"REQB",2,0)
PSO*7.0*290^2
"BLD",8058,"REQB",3,0)
PSO*7.0*276^2
"BLD",8058,"REQB",4,0)
PSO*7.0*298^2
"BLD",8058,"REQB",5,0)
PSO*7.0*324^2
"BLD",8058,"REQB","B","PSO*7.0*225",1)

"BLD",8058,"REQB","B","PSO*7.0*276",3)

"BLD",8058,"REQB","B","PSO*7.0*290",2)

"BLD",8058,"REQB","B","PSO*7.0*298",4)

"BLD",8058,"REQB","B","PSO*7.0*324",5)

"FIA",52)
PRESCRIPTION
"FIA",52,0)
^PSRX(
"FIA",52,0,0)
52I
"FIA",52,0,1)
y^y^p^^^^n^^n
"FIA",52,0,10)

"FIA",52,0,11)

"FIA",52,0,"RLRO")

"FIA",52,0,"VR")
7.0^PSO
"FIA",52,52)
1
"FIA",52,52.25)
1
"FIA",52,52.25,27)

"FIA",52.87)
PSO TRICARE AUDIT LOG
"FIA",52.87,0)
^PS(52.87,
"FIA",52.87,0,0)
52.87
"FIA",52.87,0,1)
y^y^f^^^^n
"FIA",52.87,0,10)

"FIA",52.87,0,11)

"FIA",52.87,0,"RLRO")

"FIA",52.87,0,"VR")
7.0^PSO
"FIA",52.87,52.87)
0
"FIA",52.87,52.8713)
0
"KRN",19,12877,-1)
4^10
"KRN",19,12877,0)
PSO REJECTS WORKLIST
"KRN",19,12878,-1)
0^2
"KRN",19,12878,0)
PSO EPHARMACY MENU^ePharmacy Menu^^M^^^^^^^^OUTPATIENT PHARMACY
"KRN",19,12878,10,0)
^19.01IP^9^9
"KRN",19,12878,10,1,0)
12877^WL^70
"KRN",19,12878,10,1,"^")
PSO REJECTS WORKLIST
"KRN",19,12878,10,2,0)
12879^VP^60
"KRN",19,12878,10,2,"^")
PSO REJECTS VIEW/PROCESS
"KRN",19,12878,10,3,0)
13054^MP^20
"KRN",19,12878,10,3,"^")
PSO PMP
"KRN",19,12878,10,4,0)
13055^PF^40
"KRN",19,12878,10,4,"^")
PSO PMP SITE PREFERENCES
"KRN",19,12878,10,5,0)
13056^IR^10
"KRN",19,12878,10,5,"^")
PSO IGNORED REJECTS REPORT
"KRN",19,12878,10,7,0)
13259^SP^50
"KRN",19,12878,10,7,"^")
PSO ePHARM SITE PARAMETERS
"KRN",19,12878,10,8,0)
13261^NV^30
"KRN",19,12878,10,8,"^")
PSO NDC VALIDATE
"KRN",19,12878,10,9,0)
13326^TC^80
"KRN",19,12878,10,9,"^")
PSO TRICARE OVERRIDE REPORT
"KRN",19,12878,99)
61984,60297
"KRN",19,12878,"U")
EPHARMACY MENU
"KRN",19,12879,-1)
4^9
"KRN",19,12879,0)
PSO REJECTS VIEW/PROCESS
"KRN",19,13054,-1)
4^5
"KRN",19,13054,0)
PSO PMP
"KRN",19,13055,-1)
4^7
"KRN",19,13055,0)
PSO PMP SITE PREFERENCES
"KRN",19,13056,-1)
4^4
"KRN",19,13056,0)
PSO IGNORED REJECTS REPORT
"KRN",19,13259,-1)
4^8
"KRN",19,13259,0)
PSO ePHARM SITE PARAMETERS
"KRN",19,13261,-1)
4^6
"KRN",19,13261,0)
PSO NDC VALIDATE
"KRN",19,13326,-1)
0^3
"KRN",19,13326,0)
PSO TRICARE OVERRIDE REPORT^TRICARE Bypass/Override Report^^R^^PSO TRICARE MGR^^^^^^OUTPATIENT PHARMACY
"KRN",19,13326,1,0)
^19.06^1^1^3100823^^^^
"KRN",19,13326,1,1,0)
This option will allow a user to create a TRICARE Bypass/Override reprot.
"KRN",19,13326,25)
EN^PSOBORP0(1)
"KRN",19,13326,99)
61915,74360
"KRN",19,13326,"U")
TRICARE BYPASS/OVERRIDE REPORT
"KRN",19.1,549,-1)
0^1
"KRN",19.1,549,0)
PSO TRICARE^TRICARE OVERRIDE FUNCTION.^^^
"KRN",19.1,549,1,0)
^19.11^4^4^3100818^^^
"KRN",19.1,549,1,1,0)
THIS SECURITY KEY WILL HAVE TO BE ASSIGNED TO ALL PHARMACISTS ALLOWED TO 
"KRN",19.1,549,1,2,0)
INITIATE THE OVERRIDE FUNCTIONALITY WHEN CHOOSING THE FIL (FILL RX) 
"KRN",19.1,549,1,3,0)
ACTION FOR A TRICARE ELIGIBLE PRESCRIPTION SHOWING ON THE PHARMACY THIRD 
"KRN",19.1,549,1,4,0)
PARTY PAYER REJECTS - WORKLIST.
"KRN",19.1,549,5,0)
^19.15P
"KRN",19.1,550,-1)
0^2
"KRN",19.1,550,0)
PSO TRICARE MGR^PSO TRICARE MGR^
"KRN",19.1,550,1,0)
^19.11^2^2^3100818^^^^
"KRN",19.1,550,1,1,0)
THE KEY LOCKS THE TRICARE BYPASS/OVERRIDE REPORT ON THE ePHARM
"KRN",19.1,550,1,2,0)
ACY MENU [PSO EPHARMACY MENU].
"KRN",101,4035,-1)
4^2
"KRN",101,4035,0)
PSO REJECT DISPLAY IGNORE
"KRN",101,4261,-1)
2^1
"KRN",101,4261,0)
PSO REJECT TRICARE MENU^PSO REJECT DISPLAY TRICARE^^M^101020^^^^^^^
"KRN",101,4261,10,0)
^101.01PA^8^8
"KRN",101,4261,10,8,0)
4035^IGN^9^
"KRN",101,4261,10,8,"^")
PSO REJECT DISPLAY IGNORE
"MBREQ")
1
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",206,-1)
1^1
"PKG",206,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",206,20,0)
^9.402P^^
"PKG",206,22,0)
^9.49I^1^1
"PKG",206,22,1,0)
7.0^3021122^3021202^66481
"PKG",206,22,1,"PAH",1,0)
358^3101101^101020
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
27
"RTN","PSOBORP0")
0^10^B11739758
"RTN","PSOBORP0",1,0)
PSOBORP0 ;ALBANY/BLD - TRICARE BYPASS/OVERRIDE AUDIT REPORT ;7/1/2010
"RTN","PSOBORP0",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**358**;DEC 1997;Build 35
"RTN","PSOBORP0",3,0)
 ;
"RTN","PSOBORP0",4,0)
 ;***********copied from routine BPSRPT0************
"RTN","PSOBORP0",5,0)
 ;
"RTN","PSOBORP0",6,0)
 Q
"RTN","PSOBORP0",7,0)
 ;
"RTN","PSOBORP0",8,0)
 ; Front End for ECME Reports
"RTN","PSOBORP0",9,0)
 ;
"RTN","PSOBORP0",10,0)
 ;
"RTN","PSOBORP0",11,0)
 ;
"RTN","PSOBORP0",12,0)
 ; Passed variables - The following local variables are passed around the PSSRPT* routines
"RTN","PSOBORP0",13,0)
 ;                    and are not passed as parameters but are assumed to be defined:
"RTN","PSOBORP0",14,0)
 ;                    PSACREJ,PSAUTREV,PSBEGDT,PSBLINE,PSCCRSN,PSDRGCL,PSDRUG,PSENDDT,PSEXCEL,
"RTN","PSOBORP0",15,0)
 ;                    PSINSINF,PSGRPLN,PSMWC,PSNOW,PSPAGE,PSPHARM,PSQ,PSQSTDRG,
"RTN","PSOBORP0",16,0)
 ;                    PSRLNRL,PSRTBCK,PSSDATA,PSSUMDET,PSRTYPE
"RTN","PSOBORP0",17,0)
 ;
"RTN","PSOBORP0",18,0)
EN(PSORTYPE) ;
"RTN","PSOBORP0",19,0)
 N %,ACTDT,AMT,BPQ,CODE,IO,PSOACREJ,PSOAUTREV,PSOBEGDT,PSOCCRSN,PSODRGCL,PSODRUG,PSOENDDT,PSOEXCEL,PSONOW
"RTN","PSOBORP0",20,0)
 N PSOPHARM,PSOINSINF,PSOMWC,PSOQ,PSOUT,PSOPROV,PSOQSTDRG,PSOREJCD,PSORLNRL,PSORPTNAM,PSORTBCK
"RTN","PSOBORP0",21,0)
 N PSOSEL,PSOSCR,PSOSMDET,PSOSEL,PSOTOTAL,POS,PSOINS,PSOARR,PSOELIG,PSOOPCL,PSOPHMST,PSORPTNM,STAT,X,Y
"RTN","PSOBORP0",22,0)
 ;
"RTN","PSOBORP0",23,0)
 K PSOSEL
"RTN","PSOBORP0",24,0)
 ;
"RTN","PSOBORP0",25,0)
 S PSORPTNM="TRICARE BYPASS/OVERRIDE REPORT"
"RTN","PSOBORP0",26,0)
 ;
"RTN","PSOBORP0",27,0)
 ;Verify that a valid report has been requested
"RTN","PSOBORP0",28,0)
 I PSORTYPE'=1 W "<Invalid Menu Definition - Report Undefined>" H 3 Q
"RTN","PSOBORP0",29,0)
 ;
"RTN","PSOBORP0",30,0)
 ;Get current Date/Time
"RTN","PSOBORP0",31,0)
 S PSONOW=$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","PSOBORP0",32,0)
 ;
"RTN","PSOBORP0",33,0)
 ;Prompt for ECME Pharmacy Division(s) (No Default)
"RTN","PSOBORP0",34,0)
 ;Sets up PSOPHARM variable and array, PSOPHARM =0 ALL or PSOPHARM=1,PSOPHARM(ptr) for list
"RTN","PSOBORP0",35,0)
 S X=$$SELPHARM^PSOBORP1(.PSOSEL) I X="^" Q
"RTN","PSOBORP0",36,0)
 ;
"RTN","PSOBORP0",37,0)
 ;Prompt to Display Summary or Detail Format (Default to Detail)
"RTN","PSOBORP0",38,0)
 ;Returns 1 for Summary, 0 for Detail
"RTN","PSOBORP0",39,0)
 S PSOSMDET=$$SELSMDET^PSOBORP1(2) I PSOSMDET="^" Q
"RTN","PSOBORP0",40,0)
 S PSOSEL("SUM_DETAIL")=PSOSMDET
"RTN","PSOBORP0",41,0)
 ;
"RTN","PSOBORP0",42,0)
 ;
"RTN","PSOBORP0",43,0)
 ;Prompt to select Date Range
"RTN","PSOBORP0",44,0)
 ;Returns (Start Date^End Date)
"RTN","PSOBORP0",45,0)
 S PSOBEGDT=$$SELDATE^PSOBORP1("TRANSACTION") D  I PSOBEGDT="^" Q
"RTN","PSOBORP0",46,0)
 .I PSOBEGDT="^" Q
"RTN","PSOBORP0",47,0)
 .S PSOENDDT=$P(PSOBEGDT,U,2)
"RTN","PSOBORP0",48,0)
 .S PSOBEGDT=$P(PSOBEGDT,U)
"RTN","PSOBORP0",49,0)
 S PSOSEL("BEGIN DATE")=PSOBEGDT
"RTN","PSOBORP0",50,0)
 S PSOSEL("END DATE")=PSOENDDT
"RTN","PSOBORP0",51,0)
 ;
"RTN","PSOBORP0",52,0)
 ;
"RTN","PSOBORP0",53,0)
 ;Prompt to Include (S)pecific TC Code or (A)LL (Default to ALL)
"RTN","PSOBORP0",54,0)
 S PSOREJCD=$$SELTCCD^PSOBORP1(.PSOSEL)
"RTN","PSOBORP0",55,0)
 I PSOREJCD="^" Q
"RTN","PSOBORP0",56,0)
 ;
"RTN","PSOBORP0",57,0)
 ;Prompt to select One of the following: Specific Pharmacist or ALL Pharmacist
"RTN","PSOBORP0",58,0)
 S PSOPHMST=$$SELPHMST^PSOBORP1(.PSOSEL)
"RTN","PSOBORP0",59,0)
 I PSOPHMST="^" Q
"RTN","PSOBORP0",60,0)
 ;
"RTN","PSOBORP0",61,0)
 ;prompt to select one of the following: Specific Provider or ALL Providers
"RTN","PSOBORP0",62,0)
 ;
"RTN","PSOBORP0",63,0)
 S PSOPROV=$$SELPROV^PSOBORP1(.PSOSEL)
"RTN","PSOBORP0",64,0)
 I PSOPROV="^" Q
"RTN","PSOBORP0",65,0)
 ;
"RTN","PSOBORP0",66,0)
 ;
"RTN","PSOBORP0",67,0)
 ;Prompt to Include Group/Subtotal Report by (R) Pharmacy or (P)rovider/Prescriber Name
"RTN","PSOBORP0",68,0)
 ;Returns ()
"RTN","PSOBORP0",69,0)
 S PSOTOTAL=$$PSOTOTAL^PSOBORP1()
"RTN","PSOBORP0",70,0)
 I PSOTOTAL="^" Q
"RTN","PSOBORP0",71,0)
 S PSOSEL("TOTALS BY")=PSOTOTAL
"RTN","PSOBORP0",72,0)
 ;
"RTN","PSOBORP0",73,0)
 ;Prompt for Excel Capture (Detail Only)
"RTN","PSOBORP0",74,0)
 S PSOEXCEL=0 I PSOSEL("SUM_DETAIL")="D" D  I PSOEXCEL="^" Q
"RTN","PSOBORP0",75,0)
 .S PSOEXCEL=$$SELEXCEL^PSOBORP1() I PSOEXCEL="^" Q
"RTN","PSOBORP0",76,0)
 .S PSOSEL("EXCEL")=PSOEXCEL
"RTN","PSOBORP0",77,0)
 ;
"RTN","PSOBORP0",78,0)
 ;Prompt for the Device
"RTN","PSOBORP0",79,0)
 I 'PSOEXCEL D
"RTN","PSOBORP0",80,0)
 .W !!,"WARNING - THIS REPORT REQUIRES THAT A DEVICE WITH 132 COLUMN WIDTH BE USED."
"RTN","PSOBORP0",81,0)
 .W !,"IT WILL NOT DISPLAY CORRECTLY USING 80 COLUMN WIDTH DEVICES",!
"RTN","PSOBORP0",82,0)
 S PSOQ=0 D DEVICE(PSORPTNM) Q:PSOQ
"RTN","PSOBORP0",83,0)
 ;
"RTN","PSOBORP0",84,0)
 ;Compile and Run the Report
"RTN","PSOBORP0",85,0)
 D RUN(.PSOSEL)
"RTN","PSOBORP0",86,0)
 I '$G(PSOUT) D PAUSE^PSOBORP1
"RTN","PSOBORP0",87,0)
 ;
"RTN","PSOBORP0",88,0)
 ;
"RTN","PSOBORP0",89,0)
 ;Compile and Run the Report
"RTN","PSOBORP0",90,0)
 ;
"RTN","PSOBORP0",91,0)
RUN(PSOEXCEL,PSORPTNAM,PSOSMDET) ;
"RTN","PSOBORP0",92,0)
 N PSOPAGE,PSOTMP
"RTN","PSOBORP0",93,0)
 ;
"RTN","PSOBORP0",94,0)
 D RUNRPT^PSOBORP2(.PSOSEL)
"RTN","PSOBORP0",95,0)
 ;
"RTN","PSOBORP0",96,0)
 ;
"RTN","PSOBORP0",97,0)
 Q
"RTN","PSOBORP0",98,0)
 ;
"RTN","PSOBORP0",99,0)
 ;Prompt For the Device
"RTN","PSOBORP0",100,0)
 ;
"RTN","PSOBORP0",101,0)
 ; Returns Device variables and PSOSCR
"RTN","PSOBORP0",102,0)
 ;
"RTN","PSOBORP0",103,0)
DEVICE(PSORPTNAM) N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","PSOBORP0",104,0)
 S %ZIS="QM"
"RTN","PSOBORP0",105,0)
 D ^%ZIS
"RTN","PSOBORP0",106,0)
 I POP S PSOQ=1
"RTN","PSOBORP0",107,0)
 ;
"RTN","PSOBORP0",108,0)
 ;Check for exit
"RTN","PSOBORP0",109,0)
 I $G(PSOQ) G XDEV
"RTN","PSOBORP0",110,0)
 ;
"RTN","PSOBORP0",111,0)
 S PSOSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","PSOBORP0",112,0)
 I $D(IO("Q")) D  S PSOQ=1
"RTN","PSOBORP0",113,0)
 . S ZTRTN="RUN^PSOBORP0(PSOEXCEL,PSORPTNAM,PSOSMDET)"
"RTN","PSOBORP0",114,0)
 . S ZTIO=ION
"RTN","PSOBORP0",115,0)
 . S ZTSAVE("*")=""
"RTN","PSOBORP0",116,0)
 . S ZTDESC="PSO REPORT: "_PSORPTNM
"RTN","PSOBORP0",117,0)
 . D ^%ZTLOAD
"RTN","PSOBORP0",118,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","PSOBORP0",119,0)
 . D HOME^%ZIS
"RTN","PSOBORP0",120,0)
 U IO
"RTN","PSOBORP0",121,0)
XDEV Q
"RTN","PSOBORP1")
0^11^B107834737
"RTN","PSOBORP1",1,0)
PSOBORP1 ;ALBANY/BLD - TRICARE BYPASS/OVERRIDE AUDIT REPORT (CONT) ;7/1/2010
"RTN","PSOBORP1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**358**;DEC 1997;Build 35
"RTN","PSOBORP1",3,0)
 ;
"RTN","PSOBORP1",4,0)
 ;***********copied from routine BPSRPT3 AND BPSRPT4************
"RTN","PSOBORP1",5,0)
 ;
"RTN","PSOBORP1",6,0)
 Q
"RTN","PSOBORP1",7,0)
 ;
"RTN","PSOBORP1",8,0)
 ;
"RTN","PSOBORP1",9,0)
 ;                    
"RTN","PSOBORP1",10,0)
SELPHARM(PSOSEL) N DIC,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PSOBORP1",11,0)
 ;
"RTN","PSOBORP1",12,0)
 ; Select the ECME Pharmacy or Pharmacies
"RTN","PSOBORP1",13,0)
 ; 
"RTN","PSOBORP1",14,0)
 ; Input Variable -> none
"RTN","PSOBORP1",15,0)
 ; Return Value ->   "" = Valid Entry or Entries Selected
"RTN","PSOBORP1",16,0)
 ;                                        ^ = Exit
"RTN","PSOBORP1",17,0)
 ;                                       
"RTN","PSOBORP1",18,0)
 ; Output Variable -> PSOPHARM = 1 One or More Pharmacies Selected
"RTN","PSOBORP1",19,0)
 ;                          = 0 User Entered 'ALL'
"RTN","PSOBORP1",20,0)
 ;                            
"RTN","PSOBORP1",21,0)
 ; If PSOPHARM = 1 then the PSOPHARM array will be defined where:
"RTN","PSOBORP1",22,0)
 ;    PSOPHARM(ptr) = ptr ^ BPS PHARMACY NAME and
"RTN","PSOBORP1",23,0)
 ;    ptr = Internal Pointer to BPS PHARMACIES file (#9002313.56)
"RTN","PSOBORP1",24,0)
 ;
"RTN","PSOBORP1",25,0)
 ;Reset PSOPHARM array
"RTN","PSOBORP1",26,0)
 K PSOPHARM
"RTN","PSOBORP1",27,0)
 ;
"RTN","PSOBORP1",28,0)
 ;First see if they want to enter individual divisions or ALL
"RTN","PSOBORP1",29,0)
 S DIR(0)="S^D:DIVISION;A:ALL"
"RTN","PSOBORP1",30,0)
 S DIR("A")="Select Certain Pharmacy (D)ivisions or (A)LL"
"RTN","PSOBORP1",31,0)
 S DIR("L",1)="Select one of the following:"
"RTN","PSOBORP1",32,0)
 S DIR("L",2)=""
"RTN","PSOBORP1",33,0)
 S DIR("L",3)="     D         DIVISION"
"RTN","PSOBORP1",34,0)
 S DIR("L",4)="     A         ALL"
"RTN","PSOBORP1",35,0)
 D ^DIR K DIR
"RTN","PSOBORP1",36,0)
 ;
"RTN","PSOBORP1",37,0)
 ;Check for "^" or timeout, otherwise define PSOPHARM
"RTN","PSOBORP1",38,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","PSOBORP1",39,0)
 E  S (PSOSEL("DIVISION"),PSOPHARM)=Y
"RTN","PSOBORP1",40,0)
 ;If division selected, ask prompt
"RTN","PSOBORP1",41,0)
 I $G(PSOPHARM)="D" F  D  Q:Y="^"!(Y="") 
"RTN","PSOBORP1",42,0)
 .;
"RTN","PSOBORP1",43,0)
 .;Prompt for entry
"RTN","PSOBORP1",44,0)
 .K X S DIC(0)="QEAM",DIC=59,DIC("A")="Select ECME Pharmacy Division(s): "
"RTN","PSOBORP1",45,0)
 .W ! D ^DIC
"RTN","PSOBORP1",46,0)
 .;
"RTN","PSOBORP1",47,0)
 .;Check for "^" or timeout 
"RTN","PSOBORP1",48,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1) K PSOPHARM S Y="^" Q
"RTN","PSOBORP1",49,0)
 .;
"RTN","PSOBORP1",50,0)
 .;Check for blank entry, quit if no previous selections
"RTN","PSOBORP1",51,0)
 .I $G(X)="" S Y=$S($D(PSOPHARM)>9:"",1:"^") K:Y="^" PSOPHARM Q
"RTN","PSOBORP1",52,0)
 .;
"RTN","PSOBORP1",53,0)
 .;Handle Deletes
"RTN","PSOBORP1",54,0)
 .I $D(PSOPHARM(+Y)) D  Q:Y="^"  I 1
"RTN","PSOBORP1",55,0)
 ..N P
"RTN","PSOBORP1",56,0)
 ..S P=Y  ;Save Original Value
"RTN","PSOBORP1",57,0)
 ..S DIR(0)="S^Y:YES;N:NO",DIR("A")="Delete "_$P(P,U,2)_" from your list?"
"RTN","PSOBORP1",58,0)
 ..S DIR("B")="NO" D ^DIR
"RTN","PSOBORP1",59,0)
 ..I ($G(DUOUT)=1)!($G(DTOUT)=1) K PSOPHARM S Y="^" Q
"RTN","PSOBORP1",60,0)
 ..I Y="Y" K PSOPHARM(+P),PSOPHARM("B",$P(P,U,2),+P)
"RTN","PSOBORP1",61,0)
 ..S Y=P  ;Restore Original Value
"RTN","PSOBORP1",62,0)
 ..K P
"RTN","PSOBORP1",63,0)
 .E  D
"RTN","PSOBORP1",64,0)
 ..;Define new entries in PSOPHARM array
"RTN","PSOBORP1",65,0)
 ..S PSOPHARM(+Y)=Y
"RTN","PSOBORP1",66,0)
 ..S PSOPHARM("B",$P(Y,U,2),+Y)=""
"RTN","PSOBORP1",67,0)
 .;
"RTN","PSOBORP1",68,0)
 .;Display a list of selected divisions
"RTN","PSOBORP1",69,0)
 .I $D(PSOPHARM)>9 D
"RTN","PSOBORP1",70,0)
 ..N X
"RTN","PSOBORP1",71,0)
 ..W !,?2,"Selected:"
"RTN","PSOBORP1",72,0)
 ..S X="" F  S X=$O(PSOPHARM("B",X)) Q:X=""  W !,?10,X
"RTN","PSOBORP1",73,0)
 ..K X
"RTN","PSOBORP1",74,0)
 .Q
"RTN","PSOBORP1",75,0)
 ;
"RTN","PSOBORP1",76,0)
 K PSOPHARM("B")
"RTN","PSOBORP1",77,0)
 M PSOSEL("DIVISION")=PSOPHARM
"RTN","PSOBORP1",78,0)
 Q Y
"RTN","PSOBORP1",79,0)
 ;
"RTN","PSOBORP1",80,0)
 ;
"RTN","PSOBORP1",81,0)
 ;
"RTN","PSOBORP1",82,0)
SELSMDET(DFLT) ;
"RTN","PSOBORP1",83,0)
 ;
"RTN","PSOBORP1",84,0)
 ; Display (S)ummary or (D)etail Format
"RTN","PSOBORP1",85,0)
 ; 
"RTN","PSOBORP1",86,0)
 ; Input Variable -> DFLT = 1 Summary
"RTN","PSOBORP1",87,0)
 ;                          2 Detail
"RTN","PSOBORP1",88,0)
 ;                          
"RTN","PSOBORP1",89,0)
 ; Return Value ->   1 = Summary
"RTN","PSOBORP1",90,0)
 ;                   0 = Detail
"RTN","PSOBORP1",91,0)
 ;                   ^ = Exit
"RTN","PSOBORP1",92,0)
 ;
"RTN","PSOBORP1",93,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PSOBORP1",94,0)
 ;
"RTN","PSOBORP1",95,0)
 S DFLT=$S($G(DFLT)=1:"Summary",$G(DFLT)=0:"Detail",1:"Detail")
"RTN","PSOBORP1",96,0)
 S DIR(0)="S^S:Summary;D:Detail",DIR("A")="Display (S)ummary or (D)etail Format",DIR("B")=DFLT
"RTN","PSOBORP1",97,0)
 D ^DIR
"RTN","PSOBORP1",98,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","PSOBORP1",99,0)
 Q Y
"RTN","PSOBORP1",100,0)
 ;
"RTN","PSOBORP1",101,0)
 ;                 
"RTN","PSOBORP1",102,0)
SELDATE(TYPE) ;select begin date
"RTN","PSOBORP1",103,0)
 ; Enter Date Range
"RTN","PSOBORP1",104,0)
 ;
"RTN","PSOBORP1",105,0)
 ; Input Variable -> TYPE = TRANSACTION
"RTN","PSOBORP1",106,0)
 ;                          
"RTN","PSOBORP1",107,0)
 ;
"RTN","PSOBORP1",108,0)
 ; Return Value -> P1^P2
"RTN","PSOBORP1",109,0)
 ; 
"RTN","PSOBORP1",110,0)
 ;           where P1 = From Date
"RTN","PSOBORP1",111,0)
 ;                    = ^ Exit
"RTN","PSOBORP1",112,0)
 ;                 P2 = To Date
"RTN","PSOBORP1",113,0)
 ;                    = blank for Exit
"RTN","PSOBORP1",114,0)
 N PSOSIBDT,DIR,DIRUT,DTOUT,DUOUT,VAL,X,Y
"RTN","PSOBORP1",115,0)
 ;
"RTN","PSOBORP1",116,0)
SELDATE1 ;
"RTN","PSOBORP1",117,0)
 N VAL
"RTN","PSOBORP1",118,0)
 S VAL="",DIR(0)="DA^:DT:EX",DIR("A")="START WITH "_TYPE_" DATE: ",DIR("B")="T-1"
"RTN","PSOBORP1",119,0)
 W ! D ^DIR
"RTN","PSOBORP1",120,0)
 ;
"RTN","PSOBORP1",121,0)
 ;Check for "^", timeout, or blank entry
"RTN","PSOBORP1",122,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S VAL="^"
"RTN","PSOBORP1",123,0)
 ;
"RTN","PSOBORP1",124,0)
 I VAL="" D
"RTN","PSOBORP1",125,0)
 .S $P(VAL,U)=Y
"RTN","PSOBORP1",126,0)
 .S DIR(0)="DA^"_VAL_":DT:EX",DIR("A")="  GO TO "_TYPE_" DATE: ",DIR("B")="T"
"RTN","PSOBORP1",127,0)
 .D ^DIR
"RTN","PSOBORP1",128,0)
 .;
"RTN","PSOBORP1",129,0)
 .;Check for "^", timeout, or blank entry
"RTN","PSOBORP1",130,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1)!($G(X)="") S VAL="^" Q
"RTN","PSOBORP1",131,0)
 .;
"RTN","PSOBORP1",132,0)
 .;Define Entry
"RTN","PSOBORP1",133,0)
 .S $P(VAL,U,2)=Y
"RTN","PSOBORP1",134,0)
 ;
"RTN","PSOBORP1",135,0)
 Q VAL
"RTN","PSOBORP1",136,0)
 ;
"RTN","PSOBORP1",137,0)
SELTCCD(PSOSEL) ;
"RTN","PSOBORP1",138,0)
 ;
"RTN","PSOBORP1",139,0)
 ; Select to Include (S)pecific Reject Code or (A)ll
"RTN","PSOBORP1",140,0)
 ;
"RTN","PSOBORP1",141,0)
 ;
"RTN","PSOBORP1",142,0)
 ;Prompt to Include TRICARE (I)patient, TRICARE (N)on-Billable, TRICARE (R)eject, or A)ll: (no default)
"RTN","PSOBORP1",143,0)
 ;
"RTN","PSOBORP1",144,0)
 N DIC,DIR,DIRUT,DUOUT,EXIT,REJ,X,Y,I
"RTN","PSOBORP1",145,0)
 S EXIT=0
"RTN","PSOBORP1",146,0)
 F I=1:1:2 D  Q:Y="A"!(EXIT)
"RTN","PSOBORP1",147,0)
 .S DIR(0)="SO^I:TRICARE INPATIENT;N:TRICARE NON-BILLABLE PRODUCT;R:TRICARE REJECT OVERRIDE;A:ALL"
"RTN","PSOBORP1",148,0)
 .S DIR("A")="Select one of the following: **Can select multiples - limit of 2**  "
"RTN","PSOBORP1",149,0)
 .D ^DIR
"RTN","PSOBORP1",150,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1) S EXIT=1,Y="^" Q
"RTN","PSOBORP1",151,0)
 .I Y="A" K PSOSEL("REJECT CODES") D  Q
"RTN","PSOBORP1",152,0)
 ..S PSOSEL("REJECT CODES")="A"
"RTN","PSOBORP1",153,0)
 ..S PSOSEL("REJECT CODES","I")="TRICARE INPATIENT"
"RTN","PSOBORP1",154,0)
 ..S PSOSEL("REJECT CODES","N")="TRICARE NON-BILLABLE PRODUCT"
"RTN","PSOBORP1",155,0)
 ..S PSOSEL("REJECT CODES","R")="TRICARE REJECT OVERRIDE"
"RTN","PSOBORP1",156,0)
 ..S EXIT=1
"RTN","PSOBORP1",157,0)
 .I Y="",$D(PSOSEL("REJECT CODES")) S EXIT=1 Q
"RTN","PSOBORP1",158,0)
 .I Y="",'$D(PSOSEL("REJECT CODES")) S EXIT=0,I=0 Q
"RTN","PSOBORP1",159,0)
 .;
"RTN","PSOBORP1",160,0)
 .I Y'="" S PSOSEL("REJECT CODES",Y)=$S(Y="I":"TRICARE INPATIENT",Y="N":"TRICARE NON-BILLABLE PRODUCT",Y="R":"TRICARE REJECT OVERRIDE",1:"ALL")
"RTN","PSOBORP1",161,0)
 ;
"RTN","PSOBORP1",162,0)
 Q Y
"RTN","PSOBORP1",163,0)
 ;
"RTN","PSOBORP1",164,0)
SELPHMST(PSOSEL) ;
"RTN","PSOBORP1",165,0)
 ;
"RTN","PSOBORP1",166,0)
 ; Select to include (S)pecific Pharmacist or (A)ll pharmacist
"RTN","PSOBORP1",167,0)
 ;
"RTN","PSOBORP1",168,0)
 N DIR,DIRUT,DTOUT,DUOUT,VAL,X,Y
"RTN","PSOBORP1",169,0)
 K PSOPHARM,DIR
"RTN","PSOBORP1",170,0)
 ;
"RTN","PSOBORP1",171,0)
 ;First see if they want to enter individual divisions or ALL
"RTN","PSOBORP1",172,0)
 S DIR(0)="S^S:SPECIFIC PHARMACIST(S);A:ALL PHARMACIST"
"RTN","PSOBORP1",173,0)
 S DIR("A")="Select Specific Pharmacist(s) or All Pharmacists"
"RTN","PSOBORP1",174,0)
 S DIR("B")="ALL"
"RTN","PSOBORP1",175,0)
 S DIR("L",1)="Select one of the following:"
"RTN","PSOBORP1",176,0)
 S DIR("L",2)=""
"RTN","PSOBORP1",177,0)
 S DIR("L",3)="     S         Specific Pharmacist(s)"
"RTN","PSOBORP1",178,0)
 S DIR("L",4)="     A         All Pharmacists"
"RTN","PSOBORP1",179,0)
 D ^DIR K DIR
"RTN","PSOBORP1",180,0)
 ;
"RTN","PSOBORP1",181,0)
 ;Check for "^" or timeout, otherwise define PSOPHARM 
"RTN","PSOBORP1",182,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","PSOBORP1",183,0)
 E  S (PSOSEL("PHARMACIST"),PSOPHARM)=Y
"RTN","PSOBORP1",184,0)
 ;
"RTN","PSOBORP1",185,0)
 ;If pharmacist selected, ask prompt
"RTN","PSOBORP1",186,0)
 I $G(PSOPHARM)="S" F  D  Q:Y="^"!(Y="") 
"RTN","PSOBORP1",187,0)
 .;
"RTN","PSOBORP1",188,0)
 .;Prompt for entry
"RTN","PSOBORP1",189,0)
 .K X S DIC(0)="QEAM",DIC=200,DIC("A")="Select Pharmacist: "
"RTN","PSOBORP1",190,0)
 .S DIC("S")="I $D(^XUSEC(""PSORPH"",Y))"
"RTN","PSOBORP1",191,0)
 .W ! D ^DIC
"RTN","PSOBORP1",192,0)
 .;
"RTN","PSOBORP1",193,0)
 .;Check for "^" or timeout 
"RTN","PSOBORP1",194,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1) K PSOPHARM S Y="^" Q
"RTN","PSOBORP1",195,0)
 .;
"RTN","PSOBORP1",196,0)
 .;Check for blank entry, quit if no previous selections
"RTN","PSOBORP1",197,0)
 .I $G(X)="" S Y=$S($D(PSOPHARM)>9:"",1:"^") K:Y="^" PSOPHARM Q
"RTN","PSOBORP1",198,0)
 .;
"RTN","PSOBORP1",199,0)
 .;Handle Deletes
"RTN","PSOBORP1",200,0)
 .I $D(PSOPHARM(+Y)) D  Q:Y="^"  I 1
"RTN","PSOBORP1",201,0)
 ..N P
"RTN","PSOBORP1",202,0)
 ..S P=Y  ;Save Original Value
"RTN","PSOBORP1",203,0)
 ..S DIR(0)="S^Y:YES;N:NO",DIR("A")="Delete "_$P(P,U,2)_" from your list?"
"RTN","PSOBORP1",204,0)
 ..S DIR("B")="NO" D ^DIR
"RTN","PSOBORP1",205,0)
 ..I ($G(DUOUT)=1)!($G(DTOUT)=1) K PSOPHARM S Y="^" Q
"RTN","PSOBORP1",206,0)
 ..I Y="Y" K PSOPHARM(+P),PSOPHARM("B",$P(P,U,2),+P)
"RTN","PSOBORP1",207,0)
 ..S Y=P  ;Restore Original Value
"RTN","PSOBORP1",208,0)
 ..K P
"RTN","PSOBORP1",209,0)
 .E  D
"RTN","PSOBORP1",210,0)
 ..;Define new entries in PSOPHARM array
"RTN","PSOBORP1",211,0)
 ..S PSOPHARM(+Y)=Y
"RTN","PSOBORP1",212,0)
 ..S PSOPHARM("B",$P(Y,U,2),+Y)=""
"RTN","PSOBORP1",213,0)
 .;
"RTN","PSOBORP1",214,0)
 .;Display a list of selected providers
"RTN","PSOBORP1",215,0)
 .I $D(PSOPHARM)>9 D
"RTN","PSOBORP1",216,0)
 ..N X
"RTN","PSOBORP1",217,0)
 ..W !,?2,"Selected:"
"RTN","PSOBORP1",218,0)
 ..S X="" F  S X=$O(PSOPHARM("B",X)) Q:X=""  W !,?10,X
"RTN","PSOBORP1",219,0)
 ..K X
"RTN","PSOBORP1",220,0)
 .Q
"RTN","PSOBORP1",221,0)
 ;
"RTN","PSOBORP1",222,0)
 K PSOPHARM("B")
"RTN","PSOBORP1",223,0)
 M PSOSEL("PHARMACIST")=PSOPHARM
"RTN","PSOBORP1",224,0)
 Q Y
"RTN","PSOBORP1",225,0)
 ;
"RTN","PSOBORP1",226,0)
SELPROV(PSOSEL) ;
"RTN","PSOBORP1",227,0)
 ;
"RTN","PSOBORP1",228,0)
 ;select to include (S)pecific Provider or (A)ll Providers
"RTN","PSOBORP1",229,0)
 ;
"RTN","PSOBORP1",230,0)
 N DIR,DIRUT,DTOUT,DUOUT,VAL,X,Y
"RTN","PSOBORP1",231,0)
 K PSOPROV
"RTN","PSOBORP1",232,0)
 ;
"RTN","PSOBORP1",233,0)
 ;First see if they want to enter individual divisions or ALL
"RTN","PSOBORP1",234,0)
 S DIR(0)="S^S:SPECIFIC PROVIDER(S);A:ALL PROVIDERS"
"RTN","PSOBORP1",235,0)
 S DIR("A")="Select Specific Provider(s) or include ALL Providers"
"RTN","PSOBORP1",236,0)
 S DIR("B")="ALL"
"RTN","PSOBORP1",237,0)
 S DIR("L",1)="Select one of the following:"
"RTN","PSOBORP1",238,0)
 S DIR("L",2)=""
"RTN","PSOBORP1",239,0)
 S DIR("L",3)="     S         Specific Provider(s)"
"RTN","PSOBORP1",240,0)
 S DIR("L",4)="     A         ALL Providers"
"RTN","PSOBORP1",241,0)
 D ^DIR K DIR
"RTN","PSOBORP1",242,0)
 ;
"RTN","PSOBORP1",243,0)
 ;Check for "^" or timeout, otherwise define PSOPROV 
"RTN","PSOBORP1",244,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^"
"RTN","PSOBORP1",245,0)
 E  S (PSOSEL("PROVIDER"),PSOPROV)=Y
"RTN","PSOBORP1",246,0)
 ;
"RTN","PSOBORP1",247,0)
 ;If provider selected, ask prompt
"RTN","PSOBORP1",248,0)
 I $G(PSOPROV)="S" F  D  Q:Y="^"!(Y="") 
"RTN","PSOBORP1",249,0)
 .;
"RTN","PSOBORP1",250,0)
 .;Prompt for entry
"RTN","PSOBORP1",251,0)
 .K X S DIC(0)="QEAM",DIC=200,DIC("A")="Select Provider: "
"RTN","PSOBORP1",252,0)
 .S DIC("S")="I +$G(^VA(200,Y,""PS""))"
"RTN","PSOBORP1",253,0)
 .W ! D ^DIC
"RTN","PSOBORP1",254,0)
 .;
"RTN","PSOBORP1",255,0)
 .;Check for "^" or timeout 
"RTN","PSOBORP1",256,0)
 .I ($G(DUOUT)=1)!($G(DTOUT)=1) K PSOPROV S Y="^" Q
"RTN","PSOBORP1",257,0)
 .;
"RTN","PSOBORP1",258,0)
 .;Check for blank entry, quit if no previous selections
"RTN","PSOBORP1",259,0)
 .I $G(X)="" S Y=$S($D(PSOPROV)>9:"",1:"^") K:Y="^" PSOPROV Q
"RTN","PSOBORP1",260,0)
 .;
"RTN","PSOBORP1",261,0)
 .;Handle Deletes
"RTN","PSOBORP1",262,0)
 .I $D(PSOPROV(+Y)) D  Q:Y="^"  I 1
"RTN","PSOBORP1",263,0)
 ..N P
"RTN","PSOBORP1",264,0)
 ..S P=Y  ;Save Original Value
"RTN","PSOBORP1",265,0)
 ..S DIR(0)="S^Y:YES;N:NO",DIR("A")="Delete "_$P(P,U,2)_" from your list?"
"RTN","PSOBORP1",266,0)
 ..S DIR("B")="NO" D ^DIR
"RTN","PSOBORP1",267,0)
 ..I ($G(DUOUT)=1)!($G(DTOUT)=1) K PSOPROV S Y="^" Q
"RTN","PSOBORP1",268,0)
 ..I Y="Y" K PSOPROV(+P),PSOPROV("B",$P(P,U,2),+P)
"RTN","PSOBORP1",269,0)
 ..S Y=P  ;Restore Original Value
"RTN","PSOBORP1",270,0)
 ..K P
"RTN","PSOBORP1",271,0)
 .E  D
"RTN","PSOBORP1",272,0)
 ..;Define new entries in PSOPROV array
"RTN","PSOBORP1",273,0)
 ..S PSOPROV(+Y)=Y
"RTN","PSOBORP1",274,0)
 ..S PSOPROV("B",$P(Y,U,2),+Y)=""
"RTN","PSOBORP1",275,0)
 .;
"RTN","PSOBORP1",276,0)
 .;Display a list of selected providers
"RTN","PSOBORP1",277,0)
 .I $D(PSOPROV)>9 D
"RTN","PSOBORP1",278,0)
 ..N X
"RTN","PSOBORP1",279,0)
 ..W !,?2,"Selected:"
"RTN","PSOBORP1",280,0)
 ..S X="" F  S X=$O(PSOPROV("B",X)) Q:X=""  W !,?10,X
"RTN","PSOBORP1",281,0)
 ..K X
"RTN","PSOBORP1",282,0)
 .Q
"RTN","PSOBORP1",283,0)
 ;
"RTN","PSOBORP1",284,0)
 K PSOPROV("B")
"RTN","PSOBORP1",285,0)
 M PSOSEL("PROVIDER")=PSOPROV
"RTN","PSOBORP1",286,0)
 Q Y
"RTN","PSOBORP1",287,0)
 ;
"RTN","PSOBORP1",288,0)
PSOTOTAL(PSOSEL) ;
"RTN","PSOBORP1",289,0)
 ;
"RTN","PSOBORP1",290,0)
 ;Prompt to Include Group/Subtotal Report by (R) Pharmacy or (P)rovider/Provider
"RTN","PSOBORP1",291,0)
 ;ADDED BY BLD
"RTN","PSOBORP1",292,0)
 ;Returns ()
"RTN","PSOBORP1",293,0)
 ;
"RTN","PSOBORP1",294,0)
 N Y,DUOUT,DTOUT,IBQUIT,DIROUT,DIR
"RTN","PSOBORP1",295,0)
 N PSONPI
"RTN","PSOBORP1",296,0)
 S DIR(0)="S^R:Pharmacist;P:Provider/Prescriber Name"
"RTN","PSOBORP1",297,0)
 S DIR("A")="Group/Subtotal Report by (R)Pharmacist or (P)Provider"
"RTN","PSOBORP1",298,0)
 ;S DIR("B")="PHARMACIST"
"RTN","PSOBORP1",299,0)
 D ^DIR
"RTN","PSOBORP1",300,0)
 I ($G(DUOUT)=1)!($G(DTOUT)=1) S Y="^" Q Y
"RTN","PSOBORP1",301,0)
 S PSONPI=Y
"RTN","PSOBORP1",302,0)
 ;
"RTN","PSOBORP1",303,0)
 Q Y
"RTN","PSOBORP1",304,0)
 ;
"RTN","PSOBORP1",305,0)
 ;
"RTN","PSOBORP1",306,0)
 ;Print Header 2 Line 1
"RTN","PSOBORP1",307,0)
 ;
"RTN","PSOBORP1",308,0)
 ; Input variable: PSORTYPE -> Report Type (1-7)
"RTN","PSOBORP1",309,0)
 ;
"RTN","PSOBORP1",310,0)
 ;
"RTN","PSOBORP1",311,0)
SELEXCEL() ; - Returns whether to capture data for Excel report.
"RTN","PSOBORP1",312,0)
 ; Output: EXCEL = 1 - YES (capture data) / 0 - NO (DO NOT capture data)
"RTN","PSOBORP1",313,0)
 ;
"RTN","PSOBORP1",314,0)
 Q:PSOSEL("SUM_DETAIL")="S"
"RTN","PSOBORP1",315,0)
 N EXCEL,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","PSOBORP1",316,0)
 ;
"RTN","PSOBORP1",317,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("T")=DTIME W !
"RTN","PSOBORP1",318,0)
 S DIR("A")="Do you want to capture report data for an Excel document"
"RTN","PSOBORP1",319,0)
 S DIR("?")="^D HEXC"
"RTN","PSOBORP1",320,0)
 D ^DIR K DIR I $D(DIRUT)!$D(DTOUT)!$D(DUOUT)!$D(DIROUT) Q "^"
"RTN","PSOBORP1",321,0)
 K DIROUT,DTOUT,DUOUT,DIRUT
"RTN","PSOBORP1",322,0)
 S EXCEL=0 I Y S EXCEL=1
"RTN","PSOBORP1",323,0)
 ;
"RTN","PSOBORP1",324,0)
 ;Display Excel display message
"RTN","PSOBORP1",325,0)
 I EXCEL=1 D EXMSG
"RTN","PSOBORP1",326,0)
 ;
"RTN","PSOBORP1",327,0)
 Q EXCEL
"RTN","PSOBORP1",328,0)
 ;
"RTN","PSOBORP1",329,0)
HEXC ; - 'Do you want to capture data...' prompt
"RTN","PSOBORP1",330,0)
 W !!,"      Enter:  'Y'    -  To capture detail report data to transfer"
"RTN","PSOBORP1",331,0)
 W !,"                        to an Excel document"
"RTN","PSOBORP1",332,0)
 W !,"              '<CR>' -  To skip this option"
"RTN","PSOBORP1",333,0)
 W !,"              '^'    -  To quit this option"
"RTN","PSOBORP1",334,0)
 Q
"RTN","PSOBORP1",335,0)
 ;
"RTN","PSOBORP1",336,0)
 ;Display the message about capturing to an Excel file format
"RTN","PSOBORP1",337,0)
 ; 
"RTN","PSOBORP1",338,0)
EXMSG ;
"RTN","PSOBORP1",339,0)
 W !!?5,"Before continuing, please set up your terminal to capture the"
"RTN","PSOBORP1",340,0)
 W !?5,"detail report data. On some terminals, this can  be  done  by"
"RTN","PSOBORP1",341,0)
 W !?5,"clicking  on the 'Tools' menu above, then click  on  'Capture"
"RTN","PSOBORP1",342,0)
 W !?5,"Incoming  Data' to save to  Desktop. This  report  may take a"
"RTN","PSOBORP1",343,0)
 W !?5,"while to run."
"RTN","PSOBORP1",344,0)
 W !!?5,"Note: To avoid  undesired  wrapping of the data  saved to the"
"RTN","PSOBORP1",345,0)
 W !?5,"      file, please enter '0;256;999' at the 'DEVICE:' prompt.",!
"RTN","PSOBORP1",346,0)
 Q
"RTN","PSOBORP1",347,0)
 ;
"RTN","PSOBORP1",348,0)
 ;
"RTN","PSOBORP1",349,0)
 ;Screen Pause
"RTN","PSOBORP1",350,0)
 ;
"RTN","PSOBORP1",351,0)
PAUSE ;
"RTN","PSOBORP1",352,0)
 S PSOUT=""
"RTN","PSOBORP1",353,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to continue, '^' to exit" D ^DIR K DIR I 'Y S PSOUT=1
"RTN","PSOBORP1",354,0)
 Q
"RTN","PSOBORP2")
0^12^B20686173
"RTN","PSOBORP2",1,0)
PSOBORP2 ;ALBANY/BLD - TRICARE BYPASS/OVERRIDE AUDIT REPORT ;7/1/2010
"RTN","PSOBORP2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**358**;DEC 1997;Build 35
"RTN","PSOBORP2",3,0)
 ;
"RTN","PSOBORP2",4,0)
 ;
"RTN","PSOBORP2",5,0)
 Q
"RTN","PSOBORP2",6,0)
 ;
"RTN","PSOBORP2",7,0)
EN(RX,RFL,RESP) ;
"RTN","PSOBORP2",8,0)
 ;entry point to insert an entry in to the Tricare Audit Report
"RTN","PSOBORP2",9,0)
 ;       Passed In:
"RTN","PSOBORP2",10,0)
 ;       RX =   Prescription file (52) IEN
"RTN","PSOBORP2",11,0)
 ;       RFL =  Prescription refill number
"RTN","PSOBORP2",12,0)
 ;       RESP = response back from ECME billing. (from ECMESN^PSOBPSU1)
"RTN","PSOBORP2",13,0)
 ;
"RTN","PSOBORP2",14,0)
 ;
"RTN","PSOBORP2",15,0)
 N REFILNBR,TRITXT
"RTN","PSOBORP2",16,0)
 S TRITXT=$P(RESP,"^",2)
"RTN","PSOBORP2",17,0)
 D AUDIT^PSOTRI(RX,RFL,,TRITXT,"I")
"RTN","PSOBORP2",18,0)
 ;
"RTN","PSOBORP2",19,0)
 Q
"RTN","PSOBORP2",20,0)
 ;
"RTN","PSOBORP2",21,0)
RUNRPT(PSOSEL) ;
"RTN","PSOBORP2",22,0)
 ;
"RTN","PSOBORP2",23,0)
 ;THE INFORMATION FOR THE TRICARE BYPASS / OVERRIDE REPORT WILL BE GATHERED BY LOOPING THROUGH 
"RTN","PSOBORP2",24,0)
 ;FILE 52.87 (PSO TRICARE AUDIT LOG FILE) TO RETRIEVE THE INFORMATION BASED UPON THE FILTERING 
"RTN","PSOBORP2",25,0)
 ;REQUIREMENTS IN ROUTINE PSOBORP0.
"RTN","PSOBORP2",26,0)
 ;
"RTN","PSOBORP2",27,0)
 ;  SEE TRICARE BYPASS / OVERRIDE REPORT SDD FOR MOCK UP OF REPORT
"RTN","PSOBORP2",28,0)
 ;
"RTN","PSOBORP2",29,0)
 D EN^PSOBORP3(.PSOSEL)
"RTN","PSOBORP2",30,0)
 ;
"RTN","PSOBORP2",31,0)
 ;
"RTN","PSOBORP2",32,0)
PROCESS(PSOSEL,PSOAUD) ;this will process file 52.87, the Tricare Audit File
"RTN","PSOBORP2",33,0)
 ;
"RTN","PSOBORP2",34,0)
 N ACTDT,BEGDT,ENDDT,DIVISION,I,PHAMCST,PROVIDER,PSOFILL,PSOD0,PSOARRAY,PSORX,REJCODE,TCTYPE,REJIEN,TCTYPE
"RTN","PSOBORP2",35,0)
 S BEGDT=PSOSEL("BEGIN DATE"),ENDDT=PSOSEL("END DATE")
"RTN","PSOBORP2",36,0)
 S ACTDT=BEGDT,PSOD0=0
"RTN","PSOBORP2",37,0)
 D PSOARRAY(.PSOARRAY)
"RTN","PSOBORP2",38,0)
 F  S ACTDT=$O(^PS(52.87,"E",ACTDT)) Q:ACTDT=""!(ACTDT\1>ENDDT)  D
"RTN","PSOBORP2",39,0)
 .F  S PSOD0=$O(^PS(52.87,"E",ACTDT,PSOD0)) Q:PSOD0=""  D
"RTN","PSOBORP2",40,0)
 ..;
"RTN","PSOBORP2",41,0)
 ..;quit if duplicate prescription
"RTN","PSOBORP2",42,0)
 ..S PSORX=$P(^PS(52.87,PSOD0,0),"^",2)
"RTN","PSOBORP2",43,0)
 ..S PSOFILL=$P(^PS(52.87,PSOD0,0),"^",3)
"RTN","PSOBORP2",44,0)
 ..I PSOD0'=PSOARRAY(PSORX,PSOFILL) Q
"RTN","PSOBORP2",45,0)
 ..;
"RTN","PSOBORP2",46,0)
 ..;quit if division not selected or not all
"RTN","PSOBORP2",47,0)
 ..S DIVISION=$P(^PS(52.87,PSOD0,0),"^",5)
"RTN","PSOBORP2",48,0)
 ..I PSOSEL("DIVISION")'="A" Q:'$D(PSOSEL("DIVISION",DIVISION))
"RTN","PSOBORP2",49,0)
 ..S DIVISION=$P(^PS(59,DIVISION,0),"^",1)
"RTN","PSOBORP2",50,0)
 ..;
"RTN","PSOBORP2",51,0)
 ..;quit if audit type not selected or not all
"RTN","PSOBORP2",52,0)
 ..S TCTYPE=$P(^PS(52.87,PSOD0,1),"^",2)
"RTN","PSOBORP2",53,0)
 ..Q:'$D(PSOSEL("REJECT CODES",TCTYPE))
"RTN","PSOBORP2",54,0)
 ..S TCTYPE=$S(TCTYPE="I":"TRICARE INPATIENT",TCTYPE="N":"TRICARE NON-BILLABLE PRODUCT",TCTYPE="R":"TRICARE REJECT OVERRIDE",1:"ALL")
"RTN","PSOBORP2",55,0)
 ..;
"RTN","PSOBORP2",56,0)
 ..;quit if specific pharmacist not selected or not all
"RTN","PSOBORP2",57,0)
 ..S PHAMCST=$P(^PS(52.87,PSOD0,1),"^",4)
"RTN","PSOBORP2",58,0)
 ..I PHAMCST'="",PSOSEL("PHARMACIST")'="A" Q:'$D(PSOSEL("PHARMACIST",PHAMCST))
"RTN","PSOBORP2",59,0)
 ..S PHAMCST=$P(^VA(200,PHAMCST,0),"^",1)
"RTN","PSOBORP2",60,0)
 ..;
"RTN","PSOBORP2",61,0)
 ..;quit if specific provider not selected or not all
"RTN","PSOBORP2",62,0)
 ..S PROVIDER=$P(^PS(52.87,PSOD0,0),"^",6)
"RTN","PSOBORP2",63,0)
 ..I PSOSEL("PROVIDER")'="A" Q:'$D(PSOSEL("PROVIDER",PROVIDER))
"RTN","PSOBORP2",64,0)
 ..S PROVIDER=$P(^VA(200,PROVIDER,0),"^",1)
"RTN","PSOBORP2",65,0)
 ..;
"RTN","PSOBORP2",66,0)
 ..;summary report
"RTN","PSOBORP2",67,0)
 ..I PSOSEL("SUM_DETAIL")="D"!(PSOSEL("SUM_DETAIL")="S") D
"RTN","PSOBORP2",68,0)
 ...;totals by provider
"RTN","PSOBORP2",69,0)
 ...I PSOSEL("TOTALS BY")="P" D  Q
"RTN","PSOBORP2",70,0)
 ....S PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)=^PS(52.87,PSOD0,0)
"RTN","PSOBORP2",71,0)
 ....S PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,1)=^PS(52.87,PSOD0,1)
"RTN","PSOBORP2",72,0)
 ....S PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,2)=^PS(52.87,PSOD0,2)
"RTN","PSOBORP2",73,0)
 ...;
"RTN","PSOBORP2",74,0)
 ...;totals by pharmacist and Division
"RTN","PSOBORP2",75,0)
 ...I PSOSEL("TOTALS BY")="R" D  Q
"RTN","PSOBORP2",76,0)
 ....S PSOAUD(DIVISION,TCTYPE,PHAMCST,ACTDT,0)=^PS(52.87,PSOD0,0)
"RTN","PSOBORP2",77,0)
 ....S PSOAUD(DIVISION,TCTYPE,PHAMCST,ACTDT,1)=^PS(52.87,PSOD0,1)
"RTN","PSOBORP2",78,0)
 ....S PSOAUD(DIVISION,TCTYPE,PHAMCST,ACTDT,2)=^PS(52.87,PSOD0,2)
"RTN","PSOBORP2",79,0)
 ..;
"RTN","PSOBORP2",80,0)
 ..S REJIEN=0,REJCODE=""
"RTN","PSOBORP2",81,0)
 ..F  S REJIEN=$O(^PS(52.87,PSOD0,3,REJIEN)) Q:'REJIEN  D
"RTN","PSOBORP2",82,0)
 ...I PSOSEL("TOTALS BY")="P" S PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,3,REJIEN)=^PS(52.87,PSOD0,3,REJIEN,0)
"RTN","PSOBORP2",83,0)
 ...I PSOSEL("TOTALS BY")="R" S PSOAUD(DIVISION,TCTYPE,PHAMCST,ACTDT,3,REJIEN)=^PS(52.87,PSOD0,3,REJIEN,0)
"RTN","PSOBORP2",84,0)
 ;
"RTN","PSOBORP2",85,0)
 Q
"RTN","PSOBORP2",86,0)
 ;
"RTN","PSOBORP2",87,0)
END ;
"RTN","PSOBORP2",88,0)
 I 'PSOEXCEL W !!!!,"REPORT HAS FINISHED"
"RTN","PSOBORP2",89,0)
 K DIVRXTOT,DIVTOT,GRDRXTOT,GROUPCNT,GRDTOT,PAGE,PROV,PSODIV,PSOCNT,PSORPTNM,PSORTYPE,PSOTOTAL,TC,TCT
"RTN","PSOBORP2",90,0)
 Q
"RTN","PSOBORP2",91,0)
 ;
"RTN","PSOBORP2",92,0)
GETPARAM(PSOFLDNO,PSODUZ) ;
"RTN","PSOBORP2",93,0)
 Q $$GET^XPAR(PSODUZ_";VA(200,","PSOS USRSCR",PSOFLDNO,"I")
"RTN","PSOBORP2",94,0)
 ;
"RTN","PSOBORP2",95,0)
 ;
"RTN","PSOBORP2",96,0)
UP(PSVAR) ;converts to upper case
"RTN","PSOBORP2",97,0)
 Q $TR(PSVAR,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","PSOBORP2",98,0)
 ;
"RTN","PSOBORP2",99,0)
 ;
"RTN","PSOBORP2",100,0)
 ;will build an of array of RX's to eliminate duplicates.
"RTN","PSOBORP2",101,0)
PSOARRAY(PSOARRAY) ;
"RTN","PSOBORP2",102,0)
 N ACTDT,BEGDT,ENDDT,DIVISION,I,PHAMCST,PROVIDER,PSOD0,PSOFILL,REJCODE,TCTYPE,REJIEN,TCTYPE
"RTN","PSOBORP2",103,0)
 S BEGDT=PSOSEL("BEGIN DATE"),ENDDT=PSOSEL("END DATE")
"RTN","PSOBORP2",104,0)
 S ACTDT=BEGDT,PSOD0=0
"RTN","PSOBORP2",105,0)
 F  S ACTDT=$O(^PS(52.87,"E",ACTDT)) Q:ACTDT=""!(ACTDT\1>ENDDT)  D
"RTN","PSOBORP2",106,0)
 .F  S PSOD0=$O(^PS(52.87,"E",ACTDT,PSOD0)) Q:PSOD0=""  D
"RTN","PSOBORP2",107,0)
 ..S PSOFILL=$P(^PS(52.87,PSOD0,0),"^",3)
"RTN","PSOBORP2",108,0)
 ..S PSOARRAY($P(^PS(52.87,PSOD0,0),"^",2),PSOFILL)=PSOD0
"RTN","PSOBORP2",109,0)
 Q
"RTN","PSOBORP3")
0^13^B186304557
"RTN","PSOBORP3",1,0)
PSOBORP3 ;ALBANY/BLD - TRICARE BYPASS/OVERRIDE AUDIT REPORT ;7/1/2010
"RTN","PSOBORP3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**358**;DEC 1997;Build 35
"RTN","PSOBORP3",3,0)
 ;
"RTN","PSOBORP3",4,0)
 ;Uses API 
"RTN","PSOBORP3",5,0)
 ;this routine will process the Tricare Bypass / Override Report based on the filtering criteria in routine PSOBORP0
"RTN","PSOBORP3",6,0)
 ;
"RTN","PSOBORP3",7,0)
 ;
"RTN","PSOBORP3",8,0)
EN(PSOSEL) ;
"RTN","PSOBORP3",9,0)
 ;
"RTN","PSOBORP3",10,0)
 ;THE INFORMATION FOR THE TRICARE BYPASS / OVERRIDE REPORT WILL BE GATHERED BY LOOPING THROUGH 
"RTN","PSOBORP3",11,0)
 ;FILE 52.87 (PSO TRICARE AUDIT LOG FILE) TO RETRIEVE THE INFORMATION BASED UPON THE FILTERING 
"RTN","PSOBORP3",12,0)
 ;REQUIREMENTS IN ROUTINE PSOBORP0.
"RTN","PSOBORP3",13,0)
 ;
"RTN","PSOBORP3",14,0)
 ;  SEE TRICARE BYPASS / OVERRIDE REPORT SDD FOR MOCK UP OF REPORT
"RTN","PSOBORP3",15,0)
 ;
"RTN","PSOBORP3",16,0)
 ;
"RTN","PSOBORP3",17,0)
 N ACTDT,AMT,BEGDT,DASH,DETSUM,ENDDT,EQUAL,HDR1,HDR2,HDR3,HDR4,HDR5,HDR6,MEAN,PAGE,PAGENBR,RXCNT
"RTN","PSOBORP3",18,0)
 N PSONOW,RJHDR,SPACE,STAR,PSOAUD,SUBTOTAL,SUBTOT,PROVTOT,PRORXTOT
"RTN","PSOBORP3",19,0)
 D INIT
"RTN","PSOBORP3",20,0)
 D PROCESS^PSOBORP2(.PSOSEL,.PSOAUD)                           ;process file 52.87 (Tricare Audit File)
"RTN","PSOBORP3",21,0)
 W:'PSOEXCEL @IOF D HDR
"RTN","PSOBORP3",22,0)
 I PSOSEL("SUM_DETAIL")="S" D SUMMARY(.PSOSEL,.PSOAUD)
"RTN","PSOBORP3",23,0)
 I PSOSEL("SUM_DETAIL")="D" D DETAIL(.PSOSEL,.PSOAUD)
"RTN","PSOBORP3",24,0)
 ;
"RTN","PSOBORP3",25,0)
 D END^PSOBORP2
"RTN","PSOBORP3",26,0)
 Q
"RTN","PSOBORP3",27,0)
 ;
"RTN","PSOBORP3",28,0)
DETAIL(PSOSEL,PSOAUD) ;for detail report
"RTN","PSOBORP3",29,0)
 ;
"RTN","PSOBORP3",30,0)
 N PAGELOC,AMT,PROV
"RTN","PSOBORP3",31,0)
 N GRDTOTAL,DIVISION,DIVTOT,DIVRXTOT,RXCNT,GRDRXTOT,ACTDT,TCTOTAL,TCTYPE,PROVIDER,PROVTOT,PROVRXT,SUBTOT,SUBTOTAL
"RTN","PSOBORP3",32,0)
 ;
"RTN","PSOBORP3",33,0)
 I PSOEXCEL D EDETAIL(.PSOSEL,.PSOAUD) Q        ;if Excel format chosen
"RTN","PSOBORP3",34,0)
 S PAGENBR=1
"RTN","PSOBORP3",35,0)
 D DETHDR
"RTN","PSOBORP3",36,0)
 ;
"RTN","PSOBORP3",37,0)
 S (GRDTOTAL,DIVISION,DIVTOT,DIVRXTOT,RXCNT,GRDRXTOT,ACTDT,TCTOTAL,TCTYPE,PROVIDER,PROVTOT,PROVRXT,PRORXTOT,PROVTOT,SUBTOTAL)=""
"RTN","PSOBORP3",38,0)
 ;
"RTN","PSOBORP3",39,0)
 I PSOSEL("TOTALS BY")="P"!(PSOSEL("TOTALS BY")="R") D  Q
"RTN","PSOBORP3",40,0)
 .F  S DIVISION=$O(PSOAUD(DIVISION)) Q:DIVISION=""!($G(PSOUT))  D
"RTN","PSOBORP3",41,0)
 ..S (PROVTOT,PRORXTOT,DIVTOT,DIVRXTOT)=""
"RTN","PSOBORP3",42,0)
 ..I ($Y+8)>IOSL D DETHDR Q:$G(PSOUT)
"RTN","PSOBORP3",43,0)
 ..W !!,$E(DASH,1,110)
"RTN","PSOBORP3",44,0)
 ..W !,"DIVISION: ",DIVISION
"RTN","PSOBORP3",45,0)
 ..F  S TCTYPE=$O(PSOAUD(DIVISION,TCTYPE)) Q:TCTYPE=""!($G(PSOUT))  D
"RTN","PSOBORP3",46,0)
 ...S TCT=TCTYPE,(TCRXTOT,TCTOTAL)="" D TCHDR(TCT)
"RTN","PSOBORP3",47,0)
 ...F  S PROVIDER=$O(PSOAUD(DIVISION,TCTYPE,PROVIDER)) Q:PROVIDER=""!($G(PSOUT))  D
"RTN","PSOBORP3",48,0)
 ....S (PROVTOT,PRORXTOT)=""
"RTN","PSOBORP3",49,0)
 ....F  S ACTDT=$O(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT))  Q:ACTDT=""!($G(PSOUT))  D
"RTN","PSOBORP3",50,0)
 .....S PROV=PROVIDER
"RTN","PSOBORP3",51,0)
 .....S AMT=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",9)
"RTN","PSOBORP3",52,0)
 .....S PROVTOT=$FN(PROVTOT+AMT,"T",2)
"RTN","PSOBORP3",53,0)
 .....S PRORXTOT=PRORXTOT+1
"RTN","PSOBORP3",54,0)
 .....S TCTOTAL=$FN(TCTOTAL+AMT,"T",2)
"RTN","PSOBORP3",55,0)
 .....S TCRXTOT=TCRXTOT+1
"RTN","PSOBORP3",56,0)
 .....S DIVTOT=$FN(DIVTOT+AMT,"T",2)
"RTN","PSOBORP3",57,0)
 .....S DIVRXTOT=DIVRXTOT+1
"RTN","PSOBORP3",58,0)
 .....S GRDTOTAL=$FN(GRDTOTAL+AMT,"T",2)
"RTN","PSOBORP3",59,0)
 .....S GRDRXTOT=GRDRXTOT+1
"RTN","PSOBORP3",60,0)
 .....Q:$G(PSOUT)  D:($Y+8)>IOSL DETHDR Q:$G(PSOUT)  D TCDSUMP(TCT,PROV,ACTDT)             ;detail print
"RTN","PSOBORP3",61,0)
 ....Q:$G(PSOUT)  D:($Y+8)>IOSL DETHDR Q:$G(PSOUT)  D PROVTOT(TCT,PROV,PROVTOT,PRORXTOT)
"RTN","PSOBORP3",62,0)
 ...Q:$G(PSOUT)  D:($Y+8)>IOSL DETHDR Q:$G(PSOUT)  D TCTOT(TCTOTAL,TCRXTOT,TCT)
"RTN","PSOBORP3",63,0)
 ..Q:$G(PSOUT)  D:($Y+8)>IOSL DETHDR Q:$G(PSOUT)  D DIVTOTP(DIVTOT,DIVRXTOT)
"RTN","PSOBORP3",64,0)
 .Q:$G(PSOUT)  D:($Y+8)>IOSL DETHDR Q:$G(PSOUT)  D GRDTOTP(GRDTOTAL,GRDRXTOT)
"RTN","PSOBORP3",65,0)
 ;
"RTN","PSOBORP3",66,0)
 Q
"RTN","PSOBORP3",67,0)
 ;
"RTN","PSOBORP3",68,0)
EDETAIL(PSOSEL,PSOAUD) ;for detail report
"RTN","PSOBORP3",69,0)
 ;
"RTN","PSOBORP3",70,0)
 N PAGELOC,AMT
"RTN","PSOBORP3",71,0)
 N GRDTOTAL,DIVISION,DIVTOT,DIVRXTOT,RXCNT,GRDRXTOT,ACTDT,TCTOTAL,TCTYPE,PROVIDER,PROVTOT,PROVRXT,SUBTOT,SUBTOTAL,PROV
"RTN","PSOBORP3",72,0)
 ;
"RTN","PSOBORP3",73,0)
 S PAGENBR=1
"RTN","PSOBORP3",74,0)
 D DETHDR
"RTN","PSOBORP3",75,0)
 ;
"RTN","PSOBORP3",76,0)
 S (GRDTOTAL,DIVISION,DIVTOT,DIVRXTOT,RXCNT,GRDRXTOT,ACTDT,TCTOTAL,TCTYPE,PROVIDER,PROVTOT,PROVRXT,SUBTOT,SUBTOTAL)=""
"RTN","PSOBORP3",77,0)
 ;
"RTN","PSOBORP3",78,0)
 I PSOSEL("TOTALS BY")="P"!(PSOSEL("TOTALS BY")="R") D  Q
"RTN","PSOBORP3",79,0)
 .F  S DIVISION=$O(PSOAUD(DIVISION)) Q:DIVISION=""!($G(PSOUT))  D
"RTN","PSOBORP3",80,0)
 ..F  S TCTYPE=$O(PSOAUD(DIVISION,TCTYPE)) Q:TCTYPE=""!($G(PSOUT))  D
"RTN","PSOBORP3",81,0)
 ...S TCT=TCTYPE
"RTN","PSOBORP3",82,0)
 ...F  S PROVIDER=$O(PSOAUD(DIVISION,TCTYPE,PROVIDER)) Q:PROVIDER=""!($G(PSOUT))  D
"RTN","PSOBORP3",83,0)
 ....F  S ACTDT=$O(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT))  Q:ACTDT=""!($G(PSOUT))  D
"RTN","PSOBORP3",84,0)
 .....S PROV=PROVIDER
"RTN","PSOBORP3",85,0)
 .....S AMT=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",9)
"RTN","PSOBORP3",86,0)
 .....Q:$G(PSOUT)  D TCDSUMP(TCTYPE,PROV,ACTDT)             ;detail print
"RTN","PSOBORP3",87,0)
 ....Q:$G(PSOUT)
"RTN","PSOBORP3",88,0)
 ...Q:$G(PSOUT)
"RTN","PSOBORP3",89,0)
 ..Q:$G(PSOUT)
"RTN","PSOBORP3",90,0)
 .Q:$G(PSOUT)
"RTN","PSOBORP3",91,0)
 ;
"RTN","PSOBORP3",92,0)
 Q
"RTN","PSOBORP3",93,0)
 ;
"RTN","PSOBORP3",94,0)
SUMMARY(PSOSEL,PSOAUD) ;for summary report
"RTN","PSOBORP3",95,0)
 ;
"RTN","PSOBORP3",96,0)
 N AMT,ACTDT,ACTDATE,DIVISION,PROVIDER,PHAMCST,PAGELOC,PROVIDER,TCTOTAL,TCTYPE,RXTOTAL,RXCNT,GRDTOTAL,SUBTOT,MEAN
"RTN","PSOBORP3",97,0)
 ;
"RTN","PSOBORP3",98,0)
 S PAGENBR=1
"RTN","PSOBORP3",99,0)
 D SUMHDR
"RTN","PSOBORP3",100,0)
 S (GRDTOTAL,DIVISION,DIVTOT,DIVRXTOT,RXCNT,GRDRXTOT,ACTDT,TCTOTAL,TCRXTOT,TCTYPE,PROVIDER,PROVTOT,PRORXTOT,SUBTOTAL)=""
"RTN","PSOBORP3",101,0)
 ;
"RTN","PSOBORP3",102,0)
 ;subtotals by provider
"RTN","PSOBORP3",103,0)
 I PSOSEL("TOTALS BY")="P"!(PSOSEL("TOTALS BY")="R") D
"RTN","PSOBORP3",104,0)
 .F  S DIVISION=$O(PSOAUD(DIVISION)) Q:DIVISION=""!($G(PSOUT))  D
"RTN","PSOBORP3",105,0)
 ..S (PROVTOT,PRORXTOT,RXCNT,DIVTOT,DIVRXTOT)=""
"RTN","PSOBORP3",106,0)
 ..I ($Y+8)>IOSL D SUMHDR Q:$G(PSOUT)
"RTN","PSOBORP3",107,0)
 ..W !!,$E(DASH,1,110)
"RTN","PSOBORP3",108,0)
 ..W !,"DIVISION: ",DIVISION
"RTN","PSOBORP3",109,0)
 ..F  S TCTYPE=$O(PSOAUD(DIVISION,TCTYPE)) Q:TCTYPE=""!($G(PSOUT))  D
"RTN","PSOBORP3",110,0)
 ...S TCT=TCTYPE,(TCRXTOT,TCTOTAL)="" D TCHDR(TCT)
"RTN","PSOBORP3",111,0)
 ...F  S PROVIDER=$O(PSOAUD(DIVISION,TCTYPE,PROVIDER)) Q:PROVIDER=""!($G(PSOUT))  D
"RTN","PSOBORP3",112,0)
 ....S (PROVTOT,PRORXTOT)=0
"RTN","PSOBORP3",113,0)
 ....F  S ACTDT=$O(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT))  Q:ACTDT=""!($G(PSOUT))  D
"RTN","PSOBORP3",114,0)
 .....S PROV=PROVIDER
"RTN","PSOBORP3",115,0)
 .....S AMT=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",9)
"RTN","PSOBORP3",116,0)
 .....S PROVTOT=$FN(PROVTOT+AMT,"T",2)
"RTN","PSOBORP3",117,0)
 .....S PRORXTOT=PRORXTOT+1
"RTN","PSOBORP3",118,0)
 .....S TCTOTAL=$FN(TCTOTAL+AMT,"T",2)
"RTN","PSOBORP3",119,0)
 .....S TCRXTOT=TCRXTOT+1
"RTN","PSOBORP3",120,0)
 .....S DIVTOT=$FN(DIVTOT+AMT,"T",2)
"RTN","PSOBORP3",121,0)
 .....S DIVRXTOT=DIVRXTOT+1
"RTN","PSOBORP3",122,0)
 .....S GRDTOTAL=$FN(GRDTOTAL+AMT,"T",2)
"RTN","PSOBORP3",123,0)
 .....S GRDRXTOT=GRDRXTOT+1
"RTN","PSOBORP3",124,0)
 ....Q:$G(PSOUT)  D:($Y+8)>IOSL SUMHDR Q:$G(PSOUT)  D TCSSUMP(PROVTOT,PRORXTOT,TCT,PROV)             ;summary print
"RTN","PSOBORP3",125,0)
 ...Q:$G(PSOUT)  D:($Y+8)>IOSL SUMHDR Q:$G(PSOUT)  D TCTOT(TCTOTAL,TCRXTOT,TCT)
"RTN","PSOBORP3",126,0)
 ..Q:$G(PSOUT)  D:($Y+8)>IOSL SUMHDR Q:$G(PSOUT)  D DIVTOTP(DIVTOT,DIVRXTOT)
"RTN","PSOBORP3",127,0)
 .Q:$G(PSOUT)  D:($Y+8)>IOSL SUMHDR Q:$G(PSOUT)  D GRDTOTP(GRDTOTAL,GRDRXTOT)
"RTN","PSOBORP3",128,0)
 ;
"RTN","PSOBORP3",129,0)
 Q
"RTN","PSOBORP3",130,0)
 ;
"RTN","PSOBORP3",131,0)
SUMHDR ;
"RTN","PSOBORP3",132,0)
 ;this will print the header and page breaks for summary report.
"RTN","PSOBORP3",133,0)
 ;
"RTN","PSOBORP3",134,0)
 ;
"RTN","PSOBORP3",135,0)
 I PAGENBR>1 D PAUSE^PSOBORP1 Q:$G(PSOUT)  W @IOF
"RTN","PSOBORP3",136,0)
 S PAGELOC=132-($L(PAGE)+$L(PAGENBR))
"RTN","PSOBORP3",137,0)
 W !,HDR1,?PAGELOC,PAGE,PAGENBR S PAGENBR=PAGENBR+1
"RTN","PSOBORP3",138,0)
 W !,HDR2,!,HDR3,!,HDR4 W !,$E(EQUAL,1,110)
"RTN","PSOBORP3",139,0)
 ;
"RTN","PSOBORP3",140,0)
 Q
"RTN","PSOBORP3",141,0)
 ;
"RTN","PSOBORP3",142,0)
DETHDR ;
"RTN","PSOBORP3",143,0)
 ;this will print the header and page breaks for the detail report
"RTN","PSOBORP3",144,0)
 ;
"RTN","PSOBORP3",145,0)
 I PAGENBR>1,PSOEXCEL Q                                       ;if Excel spreadsheet format
"RTN","PSOBORP3",146,0)
 ;
"RTN","PSOBORP3",147,0)
 I PAGENBR>1 D PAUSE^PSOBORP1 Q:$G(PSOUT)  W @IOF
"RTN","PSOBORP3",148,0)
 S PAGELOC=132-($L(PAGE)+$L(PAGENBR))
"RTN","PSOBORP3",149,0)
 I 'PSOEXCEL D
"RTN","PSOBORP3",150,0)
 .W !,HDR1,?PAGELOC,PAGE,PAGENBR S PAGENBR=PAGENBR+1
"RTN","PSOBORP3",151,0)
 .W !,HDR2,!,HDR3,!,HDR4,!,$E(EQUAL,1,110),!,HDR5,!,HDR6,!,$E(EQUAL,1,110)
"RTN","PSOBORP3",152,0)
 ;
"RTN","PSOBORP3",153,0)
 I PSOEXCEL D
"RTN","PSOBORP3",154,0)
 .W !,"BENEFICIARY NAME"_"^"_"ID"_"^"_"RX#"_"^"_"REF/ECME#"_"^"_"RX DATE"_"^"_"FILL LOC"_"^"_"STATUS"_"^"_"ACTION DATE"_"^"_"USER NAME"_"^"_"$BILLED"
"RTN","PSOBORP3",155,0)
 .W "^"_"QTY"_"^"_"NDC#"_"^"_"DRUG"_"^"_"REJECT CODE(S)"_"^"_"REJECT CODE"_"^"_"REJECT EXPLANATION"_"^"_"TRICARE JUSTIFICATION"
"RTN","PSOBORP3",156,0)
 ;
"RTN","PSOBORP3",157,0)
 Q
"RTN","PSOBORP3",158,0)
 ;
"RTN","PSOBORP3",159,0)
PROVTOT(TCT,PROVIDER,PROVTOT,PROVRXT) ;prints totals by provider
"RTN","PSOBORP3",160,0)
 ;
"RTN","PSOBORP3",161,0)
 Q:PSOEXCEL                           ;if Excel spreadsheet format
"RTN","PSOBORP3",162,0)
 ; 
"RTN","PSOBORP3",163,0)
 Q:TCTYPE="TRICARE INPATIENT"
"RTN","PSOBORP3",164,0)
 W !!,?10,PROV
"RTN","PSOBORP3",165,0)
 W !,?10,"SUBTOTALS",?51,PROVTOT
"RTN","PSOBORP3",166,0)
 W !,?10,"RX COUNT",?51,PROVRXT
"RTN","PSOBORP3",167,0)
 W !,?10,"MEAN",?51,$FN(PROVTOT/PROVRXT,"T",2),!
"RTN","PSOBORP3",168,0)
 S (PROVRXT,PROVTOT)=""
"RTN","PSOBORP3",169,0)
 ;
"RTN","PSOBORP3",170,0)
 Q
"RTN","PSOBORP3",171,0)
 ;
"RTN","PSOBORP3",172,0)
 ;
"RTN","PSOBORP3",173,0)
TCTOT(TCTOTAL,TCRXTOT,TCTYPE) ;
"RTN","PSOBORP3",174,0)
 ;print tctypes totals
"RTN","PSOBORP3",175,0)
 ;
"RTN","PSOBORP3",176,0)
 Q:PSOEXCEL                           ;if Excel spreadsheet format
"RTN","PSOBORP3",177,0)
 ;
"RTN","PSOBORP3",178,0)
 W !!,?5,TCTYPE
"RTN","PSOBORP3",179,0)
 W !,?5,"SUBTOTALS",?51,TCTOTAL
"RTN","PSOBORP3",180,0)
 W !,?5,"RX COUNT",?51,TCRXTOT
"RTN","PSOBORP3",181,0)
 W !,?5,"MEAN",?51,$FN(TCTOTAL/TCRXTOT,"T",2)
"RTN","PSOBORP3",182,0)
 ;
"RTN","PSOBORP3",183,0)
 ;
"RTN","PSOBORP3",184,0)
 Q
"RTN","PSOBORP3",185,0)
 ;
"RTN","PSOBORP3",186,0)
DIVTOTP(DIVTOT,DIVRXTOT) ;
"RTN","PSOBORP3",187,0)
 ;print the totals for a division
"RTN","PSOBORP3",188,0)
 ;
"RTN","PSOBORP3",189,0)
 Q:PSOEXCEL                           ;if Excel spreadsheet format
"RTN","PSOBORP3",190,0)
 ;
"RTN","PSOBORP3",191,0)
 W !!,"DIVISION ",DIVISION,?51,$E(DASH,1,13)
"RTN","PSOBORP3",192,0)
 W !,"SUBTOTALS",?51,DIVTOT
"RTN","PSOBORP3",193,0)
 W !,"RX COUNT",?51,DIVRXTOT
"RTN","PSOBORP3",194,0)
 W !,"MEAN",?51,$FN(DIVTOT/DIVRXTOT,"T",2)
"RTN","PSOBORP3",195,0)
 ;
"RTN","PSOBORP3",196,0)
 Q
"RTN","PSOBORP3",197,0)
 ;
"RTN","PSOBORP3",198,0)
GRDTOTP(GRDTOTAL,GRDRXTOT) ;
"RTN","PSOBORP3",199,0)
 ;
"RTN","PSOBORP3",200,0)
 Q:PSOEXCEL                           ;if Excel spreadsheet format
"RTN","PSOBORP3",201,0)
 ;
"RTN","PSOBORP3",202,0)
 N I
"RTN","PSOBORP3",203,0)
 ;
"RTN","PSOBORP3",204,0)
 I '$D(PSOAUD) W !!,?26,"NO INFORMATION FOUND..." Q
"RTN","PSOBORP3",205,0)
 F I=1:1:2 W !,?51,$E(DASH,1,13)
"RTN","PSOBORP3",206,0)
 W !!!,"GRAND TOTALS",?51,GRDTOTAL
"RTN","PSOBORP3",207,0)
 W !,"RX COUNT",?51,GRDRXTOT
"RTN","PSOBORP3",208,0)
 W !,"MEAN",?51,$FN(GRDTOTAL/GRDRXTOT,"T",2)
"RTN","PSOBORP3",209,0)
 W !,?51,$E(DASH,1,13)
"RTN","PSOBORP3",210,0)
 ;
"RTN","PSOBORP3",211,0)
 Q
"RTN","PSOBORP3",212,0)
 ;
"RTN","PSOBORP3",213,0)
 ;
"RTN","PSOBORP3",214,0)
TCDSUMP(TCTYPE,PROVIDER,ACTDT) ;print the summary
"RTN","PSOBORP3",215,0)
 ;
"RTN","PSOBORP3",216,0)
 N AMTBILL,DFN,NAME,ID,REFILL,RXNBR,RX,ECMENBR,RXDATE,RXINFO,RXQTY,NDCNBR,RXDRUG,VADM,USER,TRIJUST
"RTN","PSOBORP3",217,0)
 S RJHDR=$E(STAR,1,30)_$E(SPACE,1,3)_TCTYPE_$E(SPACE,1,3)_$E(STAR,1,(57-$L(TCTYPE)))
"RTN","PSOBORP3",218,0)
 S DFN=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",4)
"RTN","PSOBORP3",219,0)
 D DEM^VADPT
"RTN","PSOBORP3",220,0)
 S NAME=VADM(1)
"RTN","PSOBORP3",221,0)
 S ID=$P(VADM(2),"^",1),ID=$E(ID,$L(ID)-3,999)
"RTN","PSOBORP3",222,0)
 S RXNBR=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",2)
"RTN","PSOBORP3",223,0)
 S RX=$$GET1^DIQ(52,RXNBR,.01)
"RTN","PSOBORP3",224,0)
 S REFILL=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",3)
"RTN","PSOBORP3",225,0)
 S ECMENBR=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",10) I ECMENBR="" S ECMENBR="N/A"
"RTN","PSOBORP3",226,0)
 S ECMENBR=REFILL_"/"_ECMENBR
"RTN","PSOBORP3",227,0)
 S RXDATE=$$DATTIM($P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,1)),"^",6))
"RTN","PSOBORP3",228,0)
 S RXINFO=$$RXINFO(RXNBR)
"RTN","PSOBORP3",229,0)
 S USER=$P(^VA(200,$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,1)),"^",4),0),"^",1)
"RTN","PSOBORP3",230,0)
 S AMTBILL=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",9)
"RTN","PSOBORP3",231,0)
 S RXQTY=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",11)
"RTN","PSOBORP3",232,0)
 S NDCNBR=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",7)
"RTN","PSOBORP3",233,0)
 S RXDRUG=$P($G(^PSDRUG($P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,0)),"^",8),0)),"^",1)
"RTN","PSOBORP3",234,0)
 S TRIJUST=$P($G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,2)),"^",1)
"RTN","PSOBORP3",235,0)
 ;
"RTN","PSOBORP3",236,0)
 ;for standard output
"RTN","PSOBORP3",237,0)
 I 'PSOEXCEL D
"RTN","PSOBORP3",238,0)
 .W !!,$E(NAME,1,30)_"/"_ID,?36,RX,?54,ECMENBR,?72,RXDATE,?90,RXINFO
"RTN","PSOBORP3",239,0)
 .W !,?4,$$DATTIM($P(ACTDT,".",1)),?22,$E(USER,1,20),?58,$FN(AMTBILL,"T",2),?72,RXQTY,?84,NDCNBR,?103,$E(RXDRUG,1,25)
"RTN","PSOBORP3",240,0)
 .I $D(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,3)) D NCPDPRC(.PSOAUD)
"RTN","PSOBORP3",241,0)
 .;
"RTN","PSOBORP3",242,0)
 .;tricare justification
"RTN","PSOBORP3",243,0)
 .I $E(IOST,1,2)="C-" D
"RTN","PSOBORP3",244,0)
 ..I $L(TRIJUST)>125 W !,?4,$E(TRIJUST,1,125)_"..."
"RTN","PSOBORP3",245,0)
 ..I $L(TRIJUST)<125 W !,?4,TRIJUST
"RTN","PSOBORP3",246,0)
 ;
"RTN","PSOBORP3",247,0)
 ;if Excell format is selected
"RTN","PSOBORP3",248,0)
 I PSOEXCEL D
"RTN","PSOBORP3",249,0)
 .N REJIEN,FILE,FIELD,NCPDIEN,RJCDS,REJEXP
"RTN","PSOBORP3",250,0)
 .S REJIEN=0,FILE=9002313.93,FIELD=.02,RJCDS="",REJEXP=""
"RTN","PSOBORP3",251,0)
 .I $D(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,3)) F  S REJIEN=$O(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,3,REJIEN)) Q:'REJIEN  D
"RTN","PSOBORP3",252,0)
 ..S NCPDIEN=$G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,3,REJIEN))
"RTN","PSOBORP3",253,0)
 ..S RJCDS=$S($G(RJCDS)="":NCPDIEN,1:RJCDS_","_NCPDIEN)
"RTN","PSOBORP3",254,0)
 .I RJCDS'="",$P(RJCDS,":",1)'="eT" S REJEXP=$$GET1^DIQ(FILE,+$P(RJCDS,",",1),FIELD)
"RTN","PSOBORP3",255,0)
 .I RJCDS'="",$P(RJCDS,":",1)="eT" S REJEXP="TRICARE-DRUG NON BILLABLE"
"RTN","PSOBORP3",256,0)
 .W !,$E(NAME,1,30)_"^"_ID_"^"_RX_"^"_ECMENBR_"^"_RXDATE_"^"_RXINFO_"^"_$$DATTIM($P(ACTDT,".",1))_"^"_$E(USER,1,20)_"^"_$FN(AMTBILL,"T",2)_"^"_RXQTY_"^"_NDCNBR_"^"_$E(RXDRUG,1,25)_"^"_RJCDS_"^"_$P(RJCDS,",",1)_"^"_REJEXP_"^"_TRIJUST
"RTN","PSOBORP3",257,0)
 ;
"RTN","PSOBORP3",258,0)
 Q
"RTN","PSOBORP3",259,0)
 ;
"RTN","PSOBORP3",260,0)
NCPDPRC(PSOAUD) ;
"RTN","PSOBORP3",261,0)
 ;writes the NCPD reject code
"RTN","PSOBORP3",262,0)
 ;
"RTN","PSOBORP3",263,0)
 N REJIEN,FILE,FIELD,NCPDIEN,REJTXT
"RTN","PSOBORP3",264,0)
 S REJIEN=0,FILE=9002313.93,FIELD=.02
"RTN","PSOBORP3",265,0)
 F  S REJIEN=$O(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,3,REJIEN)) Q:'REJIEN  D
"RTN","PSOBORP3",266,0)
 .S NCPDIEN=$G(PSOAUD(DIVISION,TCTYPE,PROVIDER,ACTDT,3,REJIEN))
"RTN","PSOBORP3",267,0)
 .I NCPDIEN'="eT" S REJTXT=$$GET1^DIQ(FILE,+NCPDIEN,FIELD)
"RTN","PSOBORP3",268,0)
 .I NCPDIEN="eT" S REJTXT="TRICARE-DRUG NON BILLABLE"
"RTN","PSOBORP3",269,0)
 .I 'PSOEXCEL W !,?4,NCPDIEN_":"_REJTXT
"RTN","PSOBORP3",270,0)
 .I PSOEXCEL W !,NCPDIEN_":"_REJTXT
"RTN","PSOBORP3",271,0)
 ;
"RTN","PSOBORP3",272,0)
 Q
"RTN","PSOBORP3",273,0)
 ;
"RTN","PSOBORP3",274,0)
RXINFO(RXNBR) ;
"RTN","PSOBORP3",275,0)
 ;this will return the data needed for the RX INFO on the Audit Report.
"RTN","PSOBORP3",276,0)
 ;
"RTN","PSOBORP3",277,0)
 ;
"RTN","PSOBORP3",278,0)
 N RFL,CMOP,RXSTATUS,FILLOC,BILLTYPE,RELDATE,RELSTATUS
"RTN","PSOBORP3",279,0)
 S RFL=$$LSTRFL^PSOBPSU1(RXNBR)
"RTN","PSOBORP3",280,0)
 S BILLTYPE="**"
"RTN","PSOBORP3",281,0)
 S FILLOC=$$MWC^PSOBPSU2(RXNBR,RFL)
"RTN","PSOBORP3",282,0)
 S RXSTATUS=$$GET1^DIQ(52,RXNBR,100,"I")
"RTN","PSOBORP3",283,0)
 S RXSTATUS=$$RXSTANAM(RXSTATUS)
"RTN","PSOBORP3",284,0)
 S RELDATE=$$RXRLDT^PSOBPSUT(RXNBR,RFL)
"RTN","PSOBORP3",285,0)
 S RELSTATUS=$S(RELDATE'="":"RL",1:"NR")
"RTN","PSOBORP3",286,0)
 I 'PSOEXCEL Q FILLOC_" "_BILLTYPE_" "_RXSTATUS_"/"_RELSTATUS
"RTN","PSOBORP3",287,0)
 I PSOEXCEL Q FILLOC_"^"_RXSTATUS_"/"_RELSTATUS
"RTN","PSOBORP3",288,0)
 ;
"RTN","PSOBORP3",289,0)
RXSTANAM(BPRXSTAT) ;*/
"RTN","PSOBORP3",290,0)
 Q:BPRXSTAT=0 "ACT"  ; ACTIVE; 
"RTN","PSOBORP3",291,0)
 Q:BPRXSTAT=1 "NVER"  ; NON-VERIFIED; 
"RTN","PSOBORP3",292,0)
 Q:BPRXSTAT=3 "HLD"  ; HOLD; 
"RTN","PSOBORP3",293,0)
 Q:BPRXSTAT=5 "SUS"  ; SUSPENDED; 
"RTN","PSOBORP3",294,0)
 Q:BPRXSTAT=11 "EXP"  ; EXPIRED; 
"RTN","PSOBORP3",295,0)
 Q:BPRXSTAT=12 "DIS"  ; DISCONTINUED; 
"RTN","PSOBORP3",296,0)
 Q:BPRXSTAT=13 "DEL"  ; DELETED; 
"RTN","PSOBORP3",297,0)
 Q:BPRXSTAT=14 "DIS"  ; DISCONTINUED BY PROVIDER; 
"RTN","PSOBORP3",298,0)
 Q:BPRXSTAT=15 "DIS"  ; DISCONTINUED (EDIT); 
"RTN","PSOBORP3",299,0)
 Q:BPRXSTAT=16 "HLD"  ; PROVIDER HOLD; 
"RTN","PSOBORP3",300,0)
 Q:BPRXSTAT=-1 "???"
"RTN","PSOBORP3",301,0)
 Q ""
"RTN","PSOBORP3",302,0)
 ;
"RTN","PSOBORP3",303,0)
 ;
"RTN","PSOBORP3",304,0)
TCSSUMP(SUBTOT,RXCNT,TCTYPE,PROVIDER,PHARMCST) ;print the summary
"RTN","PSOBORP3",305,0)
 ;
"RTN","PSOBORP3",306,0)
 I TCTYPE="TRICARE INPATIENT" Q
"RTN","PSOBORP3",307,0)
 S RJHDR=$E(STAR,1,30)_$E(SPACE,1,3)_TCTYPE_$E(SPACE,1,3)_$E(STAR,1,(57-$L(TCTYPE)))
"RTN","PSOBORP3",308,0)
 ;
"RTN","PSOBORP3",309,0)
 ;subtotals by provider
"RTN","PSOBORP3",310,0)
 W !!,?7,$S(PSOSEL("TOTALS BY")="P":"PROVIDER: ",1:"PHARMACIST: "),PROVIDER,?44,$E(DASH,1,13)
"RTN","PSOBORP3",311,0)
 W !,?7,"SUB-TOTALS",?51,SUBTOT
"RTN","PSOBORP3",312,0)
 W !,?7,"RX COUNT",?51,RXCNT
"RTN","PSOBORP3",313,0)
 W !,?7,"MEAN",?51,$FN(SUBTOT/RXCNT,"T",2),!
"RTN","PSOBORP3",314,0)
 ;
"RTN","PSOBORP3",315,0)
 Q
"RTN","PSOBORP3",316,0)
 ;
"RTN","PSOBORP3",317,0)
TCHDR(TCTYPE) ;print report header
"RTN","PSOBORP3",318,0)
 ;
"RTN","PSOBORP3",319,0)
 S (SUBTOT,RXCNT)=""
"RTN","PSOBORP3",320,0)
 I 'PSOEXCEL D  Q
"RTN","PSOBORP3",321,0)
 .S RJHDR=$E(STAR,1,30)_$E(SPACE,1,3)_TCTYPE_$E(SPACE,1,3)_$E(STAR,1,(57-$L(TCTYPE)))
"RTN","PSOBORP3",322,0)
 .W !!,RJHDR
"RTN","PSOBORP3",323,0)
 ;
"RTN","PSOBORP3",324,0)
 ;
"RTN","PSOBORP3",325,0)
 Q
"RTN","PSOBORP3",326,0)
 ;
"RTN","PSOBORP3",327,0)
HDR ;
"RTN","PSOBORP3",328,0)
 ;
"RTN","PSOBORP3",329,0)
 ;
"RTN","PSOBORP3",330,0)
 S HDR1="TRICARE BYPASS/OVERRIDE AUDIT REPORT -    "_DETSUM_" Print Date: "_PSONOW
"RTN","PSOBORP3",331,0)
 S HDR2="DIVISION(S): "_$$DIVISION()
"RTN","PSOBORP3",332,0)
 S HDR3="TC TYPES: "_$$HDR4(.PSOSEL)
"RTN","PSOBORP3",333,0)
 S HDR4="ALL PRESCRIPTIONS BY AUDIT DATE: From "_BEGDT_" through "_ENDDT
"RTN","PSOBORP3",334,0)
 I PSOSEL("SUM_DETAIL")="D" D
"RTN","PSOBORP3",335,0)
 .S HDR5="BENEFICIARY NAME/ID"_$E(SPACE,1,17)_"RX#"_$E(SPACE,1,15)_"REF/ECME#"_$E(SPACE,1,9)_"RX DATE"_$E(SPACE,1,11)_"RX INFO"
"RTN","PSOBORP3",336,0)
 .S HDR6=$E(SPACE,1,4)_"ACTION DATE"_$E(SPACE,1,8)_"USER NAME"_$E(SPACE,1,26)_"$BILLED "_$E(SPACE,1,6)_"QTY"_$E(SPACE,1,9)_"NDC#"_$E(SPACE,1,15)_"DRUG"
"RTN","PSOBORP3",337,0)
 ;
"RTN","PSOBORP3",338,0)
 ;
"RTN","PSOBORP3",339,0)
 Q
"RTN","PSOBORP3",340,0)
 ;
"RTN","PSOBORP3",341,0)
HDR4(PSOSEL) ;
"RTN","PSOBORP3",342,0)
 ;
"RTN","PSOBORP3",343,0)
 N TCTYPE,RCODE
"RTN","PSOBORP3",344,0)
 S (RCODE,TCTYPE)=""
"RTN","PSOBORP3",345,0)
 F  S TCTYPE=$O(PSOSEL("REJECT CODES",TCTYPE)) Q:TCTYPE=""  D
"RTN","PSOBORP3",346,0)
 .I $G(RCODE)="" S RCODE=PSOSEL("REJECT CODES",TCTYPE)
"RTN","PSOBORP3",347,0)
 .E  S RCODE=RCODE_", "_PSOSEL("REJECT CODES",TCTYPE)
"RTN","PSOBORP3",348,0)
 ;
"RTN","PSOBORP3",349,0)
 Q RCODE
"RTN","PSOBORP3",350,0)
 ;
"RTN","PSOBORP3",351,0)
 ;
"RTN","PSOBORP3",352,0)
DIVISION() ;list of divisions for header
"RTN","PSOBORP3",353,0)
 ;
"RTN","PSOBORP3",354,0)
 N DIV,DIVISION
"RTN","PSOBORP3",355,0)
 S (DIVISION,DIV)=""
"RTN","PSOBORP3",356,0)
 I PSOSEL("DIVISION")="A" Q "ALL"
"RTN","PSOBORP3",357,0)
 F  S DIV=$O(PSOSEL("DIVISION",DIV)) Q:DIV=""  D
"RTN","PSOBORP3",358,0)
 .I DIVISION="" S DIVISION=$P(PSOSEL("DIVISION",DIV),"^",2) Q
"RTN","PSOBORP3",359,0)
 .S DIVISION=DIVISION_$P(PSOSEL("DIVISION",DIV),"^",2)
"RTN","PSOBORP3",360,0)
 Q DIVISION
"RTN","PSOBORP3",361,0)
 ;
"RTN","PSOBORP3",362,0)
 ;
"RTN","PSOBORP3",363,0)
REJECTS() ;list the reject types for the header
"RTN","PSOBORP3",364,0)
 ;
"RTN","PSOBORP3",365,0)
 N REJ,REJECTS
"RTN","PSOBORP3",366,0)
 S (REJECTS,REJ)=""
"RTN","PSOBORP3",367,0)
 F  S REJ=$O(PSOSEL("REJECT CODES",REJ)) Q:REJ=""  D
"RTN","PSOBORP3",368,0)
 .I REJECTS="" S REJECTS=$S(REJ="I":"TRICARE INPATIENT",REJ="N":"TRICARE NON-BILLABLE PRODUCT",REJ="R":"TRICARE REJECT OVERRIDE",1:"ALL")
"RTN","PSOBORP3",369,0)
 .E  S REJECTS=REJECTS_"  "_$S(REJ="I":"TRICARE INPATIENT",REJ="N":"TRICARE NON-BILLABLE PRODUCT",REJ="R":"TRICARE REJECT OVERRIDE",1:"ALL")
"RTN","PSOBORP3",370,0)
 ;
"RTN","PSOBORP3",371,0)
 Q REJECTS
"RTN","PSOBORP3",372,0)
 ;
"RTN","PSOBORP3",373,0)
 ;
"RTN","PSOBORP3",374,0)
INIT ;
"RTN","PSOBORP3",375,0)
 ;
"RTN","PSOBORP3",376,0)
 N %,Y
"RTN","PSOBORP3",377,0)
 D NOW^%DTC S Y=% D DD^%DT S PSONOW=Y
"RTN","PSOBORP3",378,0)
 S $P(SPACE," ",150)=""
"RTN","PSOBORP3",379,0)
 S $P(DASH,"-",150)=""
"RTN","PSOBORP3",380,0)
 S $P(EQUAL,"=",150)=""
"RTN","PSOBORP3",381,0)
 S $P(STAR,"*",150)=""
"RTN","PSOBORP3",382,0)
 S PAGE="PAGE: "
"RTN","PSOBORP3",383,0)
 S DETSUM=$S(PSOSEL("SUM_DETAIL")="S":"SUMMARY",1:"DETAIL")
"RTN","PSOBORP3",384,0)
 S BEGDT=$$DATTIM(PSOSEL("BEGIN DATE"))
"RTN","PSOBORP3",385,0)
 S ENDDT=$$DATTIM(PSOSEL("END DATE"))
"RTN","PSOBORP3",386,0)
 S PSOEXCEL=$G(PSOSEL("EXCEL"))
"RTN","PSOBORP3",387,0)
 K SUBTOTAL,MEAN,SUBTOT,DIVISION,PROVIDER,TCTYPE,TCTYPE,RXCNT
"RTN","PSOBORP3",388,0)
 ;
"RTN","PSOBORP3",389,0)
 Q
"RTN","PSOBORP3",390,0)
 ;
"RTN","PSOBORP3",391,0)
 ;Convert FM date or date.time to displayable (mm/dd/yy HH:MM) format
"RTN","PSOBORP3",392,0)
 ;
"RTN","PSOBORP3",393,0)
DATTIM(X) ;
"RTN","PSOBORP3",394,0)
 N DATE,BPT,BPM,BPH,BPAP
"RTN","PSOBORP3",395,0)
 S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:"")
"RTN","PSOBORP3",396,0)
 S BPT=$P(X,".",2) S:$L(BPT)<4 BPT=BPT_$E("0000",1,4-$L(BPT))
"RTN","PSOBORP3",397,0)
 S BPH=$E(BPT,1,2),BPM=$E(BPT,3,4)
"RTN","PSOBORP3",398,0)
 S BPAP="AM" I BPH>12 S BPH=BPH-12,BPAP="PM" S:$L(BPH)<2 BPH="0"_BPH
"RTN","PSOBORP3",399,0)
 I BPT S:'BPH BPH=12 S DATE=DATE_" "_BPH_":"_BPM_BPAP
"RTN","PSOBORP3",400,0)
 Q $G(DATE)
"RTN","PSOBORP3",401,0)
 ;
"RTN","PSOBPSU1")
0^8^B53851823
"RTN","PSOBPSU1",1,0)
PSOBPSU1 ;BIRM/MFR - BPS (ECME) Utilities 1 ;10/15/04
"RTN","PSOBPSU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,260,281,287,303,289,290,358**;DEC 1997;Build 35
"RTN","PSOBPSU1",3,0)
 ;Reference to $$EN^BPSNCPDP supported by IA 4415 & 4304
"RTN","PSOBPSU1",4,0)
 ;References to $$NDCFMT^PSSNDCUT,$$GETNDC^PSSNDCUT supported by IA 4707
"RTN","PSOBPSU1",5,0)
 ;References to $$ECMEON^BPSUTIL,$$CMOPON^BPSUTIL supported by IA 4410
"RTN","PSOBPSU1",6,0)
 ;References to $$STORESP^IBNCPDP supported by IA 4299
"RTN","PSOBPSU1",7,0)
 ;
"RTN","PSOBPSU1",8,0)
ECMESND(RX,RFL,DATE,FROM,NDC,CMOP,RVTX,OVRC,CNDC,RESP,IGSW,ALTX,CLA,PA,RXCOB) ; - Sends Rx Release 
"RTN","PSOBPSU1",9,0)
 ;information to ECME/IB and updates NDC in the files 50 & 52; DBIA4304
"RTN","PSOBPSU1",10,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",11,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",12,0)
 ;       (r) DATE - Date of Service
"RTN","PSOBPSU1",13,0)
 ;       (r) FROM - Function within OP (See BWHERE param. in EN^BPSNCPDP api)
"RTN","PSOBPSU1",14,0)
 ;       (o) NDC  - NDC Number (If not passed, will be retrieved from DRUG file)
"RTN","PSOBPSU1",15,0)
 ;       (o) CMOP - CMOP Rx (1-YES/0-NO) (Default: 0)
"RTN","PSOBPSU1",16,0)
 ;       (o) RVTX - REVERSE text (e.g., RX EDIT, RX RELEASE-NDC CHANGE, etc)
"RTN","PSOBPSU1",17,0)
 ;       (o) OVRC - Set of 3 NCPDP override codes separated by "^": 
"RTN","PSOBPSU1",18,0)
 ;                  Piece 1: NCPDP Professional Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",19,0)
 ;                  Piece 2: NCPDP Reason for Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",20,0)
 ;                  Piece 3: NCPDP Result of Service Code for overriding DUR REJECTS
"RTN","PSOBPSU1",21,0)
 ;       (o) CNDC - Changed NDC? 1 - Yes / 0 - No (Default: NO)
"RTN","PSOBPSU1",22,0)
 ;       (o) IGSW - Ignore Switches (Master and CMOP)? 1 - Yes / 0 - No (Default: NO)
"RTN","PSOBPSU1",23,0)
 ;       (o) ALTX - Alternative Text to be placed in the Rx ECME Activity Log
"RTN","PSOBPSU1",24,0)
 ;       (o) CLA  - NCPDP Clarification Code for overriding DUR/RTS REJECTS
"RTN","PSOBPSU1",25,0)
 ;       (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOBPSU1",26,0)
 ;       (o) RXCOB- Payer Sequence
"RTN","PSOBPSU1",27,0)
 ;Output:    RESP - Response from $$EN^BPSNCPDP api
"RTN","PSOBPSU1",28,0)
 ;
"RTN","PSOBPSU1",29,0)
 N ACT,NDCACT,DA,PSOELIG,ACT1
"RTN","PSOBPSU1",30,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",31,0)
 ; - ECME is not turned ON for the Rx's Division
"RTN","PSOBPSU1",32,0)
 I '$G(IGSW),'$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) S RESP="-1^ECME SWITCH OFF" Q
"RTN","PSOBPSU1",33,0)
 ; - ECME CMOP is not turned ON for the Rx's Division
"RTN","PSOBPSU1",34,0)
 I '$G(IGSW),$G(CMOP),'$$CMOPON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) S RESP="-1^CMOP SWITCH OFF" Q
"RTN","PSOBPSU1",35,0)
 ; - Saving the NDC to be displayed on the ECME Act Log
"RTN","PSOBPSU1",36,0)
 I $G(CNDC) D
"RTN","PSOBPSU1",37,0)
 . I $G(NDC)'="" S NDCACT=NDC Q
"RTN","PSOBPSU1",38,0)
 . S NDCACT=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSU1",39,0)
 I $$NDCFMT^PSSNDCUT($G(NDC))="" D
"RTN","PSOBPSU1",40,0)
 . S NDC=$$GETNDC^PSSNDCUT($$GET1^DIQ(52,RX,6,"I"),$$RXSITE^PSOBPSUT(RX,RFL),+$G(CMOP))
"RTN","PSOBPSU1",41,0)
 . I $G(NDC)'="" D SAVNDC^PSONDCUT(RX,RFL,NDC,+$G(CMOP),1)
"RTN","PSOBPSU1",42,0)
 S PPDU="",PPDU=$$GPPDU^PSONDCUT(RX,RFL,NDC,,1,FROM) K PPDU
"RTN","PSOBPSU1",43,0)
 ; - Creating ECME Act Log in file 52
"RTN","PSOBPSU1",44,0)
 S ACT="" I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" S ACT="Rev/Resubmit"
"RTN","PSOBPSU1",45,0)
 S ACT=ACT_" ECME:"
"RTN","PSOBPSU1",46,0)
 ; - Marked any 'unresolved' REJECTS as 'resolved' (Reason: 1 - Claim re-submitted)
"RTN","PSOBPSU1",47,0)
 N CLSCOM,COD1,COD2,COD3
"RTN","PSOBPSU1",48,0)
 S COD2=$P($G(OVRC),"^"),COD1=$P($G(OVRC),"^",2),COD3=$P($G(OVRC),"^",3)
"RTN","PSOBPSU1",49,0)
 I $G(COD3)'="" S CLSCOM="DUR Override Codes "_COD1_"/"_COD2_"/"_COD3_" submitted."
"RTN","PSOBPSU1",50,0)
 I $G(CLA)'="" S CLSCOM="Clarification Code "_$P(CLA,"^",2)_" submitted."
"RTN","PSOBPSU1",51,0)
 I $G(PA)'="" S CLSCOM="Prior Authorization Code ("_$P(PA,"^")_"/"_$P(PA,"^",2)_") submitted."
"RTN","PSOBPSU1",52,0)
 D CLSALL^PSOREJUT(RX,RFL,DUZ,1,$G(CLSCOM),$G(COD1),$G(COD2),$G(COD3),$S($G(CLA):$P(CLA,"^",2),1:""),$G(PA))
"RTN","PSOBPSU1",53,0)
 ; - Call to ECME (NEWing STAT because ECME was overwriting it - Important variable for CMOP release PSXVND)
"RTN","PSOBPSU1",54,0)
 N STAT
"RTN","PSOBPSU1",55,0)
 I $G(RVTX)="",FROM="ED" S RVTX="RX EDITED"
"RTN","PSOBPSU1",56,0)
 I $G(CLA) S CLA=$P(CLA,"^")
"RTN","PSOBPSU1",57,0)
 S RESP=$$EN^BPSNCPDP(RX,RFL,$$DOS(RX,RFL,.DATE),FROM,NDC,$G(RVTX),$G(OVRC),,$G(CLA),$G(PA),$G(RXCOB))
"RTN","PSOBPSU1",58,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,NDC,+$G(CMOP),1,FROM)
"RTN","PSOBPSU1",59,0)
 ;
"RTN","PSOBPSU1",60,0)
 ; - Reseting the Re-transmission flag
"RTN","PSOBPSU1",61,0)
 D RETRXF^PSOREJU2(RX,RFL,0)
"RTN","PSOBPSU1",62,0)
 ; Storing eligibility flag
"RTN","PSOBPSU1",63,0)
 S PSOELIG=$P(RESP,"^",3) D:PSOELIG'="" ELIG^PSOBPSU2(RX,RFL,PSOELIG)
"RTN","PSOBPSU1",64,0)
 ;
"RTN","PSOBPSU1",65,0)
 ;7/8/2010; bld ; added for tricare bypass/override audit file
"RTN","PSOBPSU1",66,0)
 I $P(RESP,"^",2)="TRICARE INPATIENT/DISCHARGE" D
"RTN","PSOBPSU1",67,0)
 .D EN^PSOBORP2(RX,RFL,RESP)
"RTN","PSOBPSU1",68,0)
 ;
"RTN","PSOBPSU1",69,0)
 ;
"RTN","PSOBPSU1",70,0)
 ; - Logging ECME Act Log to file 52
"RTN","PSOBPSU1",71,0)
 I $G(ALTX)="" D
"RTN","PSOBPSU1",72,0)
 . N X,ROUTE S (ROUTE,X)=""
"RTN","PSOBPSU1",73,0)
 . S ROUTE=$S(FROM="RF":$$GET1^DIQ(52.1,RFL_","_RX_",",2),FROM="OF":$$GET1^DIQ(52,RX_",",11),1:"")
"RTN","PSOBPSU1",74,0)
 . S:FROM="OF" X=ROUTE_" FILL(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",75,0)
 . S:FROM="RF" X=ROUTE_" REFILL(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",76,0)
 . S:FROM="RN" X="RX RENEWED(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",77,0)
 . S:FROM="PL" X="PRINTED FROM SUSPENSE(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",78,0)
 . S:FROM="PE"!(FROM="PP") X="PULLED FROM SUSPENSE(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",79,0)
 . S:FROM="PC" X="CMOP TRANSMISSION(NDC:"_$$GETNDC^PSONDCUT(RX,RFL)_")"
"RTN","PSOBPSU1",80,0)
 . S:FROM="RRL" X="RELEASED RX PREVIOUSLY REVERSED"
"RTN","PSOBPSU1",81,0)
 . S:FROM="ED" X="RX EDITED"
"RTN","PSOBPSU1",82,0)
 . S:$G(RVTX)'="" X=RVTX
"RTN","PSOBPSU1",83,0)
 . S:$G(OVRC)'="" X="DUR OVERRIDE CODES("_$G(COD1)_"/"_$G(COD2)_"/"_$G(COD3)_")"
"RTN","PSOBPSU1",84,0)
 . S:$G(CNDC) X=X_"(NDC:"_NDCACT_")" S ACT=ACT_X
"RTN","PSOBPSU1",85,0)
 . S ACT=ACT_$$STS(RX,RFL,RESP)
"RTN","PSOBPSU1",86,0)
 I $G(ALTX)'="" S ACT=ACT_ALTX_$$STS(RX,RFL,RESP)
"RTN","PSOBPSU1",87,0)
 I +RESP=2 S ACT="Not ECME Billable: "_$P(RESP,"^",2)
"RTN","PSOBPSU1",88,0)
 I +RESP=6 S ACT=$P(RESP,"^",2)
"RTN","PSOBPSU1",89,0)
 I +RESP=10 S ACT="ECME reversed/NOT re-submitted: "_$P(RESP,"^",2)
"RTN","PSOBPSU1",90,0)
 S:PSOELIG="T" ACT="TRICARE-"_ACT
"RTN","PSOBPSU1",91,0)
 S ACT1=""
"RTN","PSOBPSU1",92,0)
 I $P(RESP,"^",6),$P(RESP,"^",7)'=""  S ACT1="-"_$S($P(RESP,"^",6)="2":"s",$P(RESP,"^",6)="3":"t",1:"p")_$P(RESP,"^",7)
"RTN","PSOBPSU1",93,0)
 S ACT=$E(ACT_ACT1,1,75)
"RTN","PSOBPSU1",94,0)
 D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOBPSU1",95,0)
 D ELOG^PSOBPSU2(RESP)  ;-Logs an ECME Act Log if Rx Qty is different than Billing Qty
"RTN","PSOBPSU1",96,0)
 I PSOELIG="T",$P(RESP,"^",2)'="TRICARE INPATIENT/DISCHARGE" D TRICCHK^PSOREJU3(RX,RFL,RESP,FROM,$G(RVTX))
"RTN","PSOBPSU1",97,0)
 Q
"RTN","PSOBPSU1",98,0)
 ;
"RTN","PSOBPSU1",99,0)
REVERSE(RX,RFL,FROM,RSN,RTXT,IGRL,NDC) ; - Reverse a claim and close all OPEN/UNRESOLVED Rejects
"RTN","PSOBPSU1",100,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",101,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",102,0)
 ;       (r) FROM - Function within OP (See BWHERE param. in EN^BPSNCPDP api)
"RTN","PSOBPSU1",103,0)
 ;       (o) RSN  - Close Reason (2:RX ON HOLD;4: RX RETURNED TO STOCK,5:RX DELETED,etc...)
"RTN","PSOBPSU1",104,0)
 ;       (o) RTXT - Close Reason TEXT (Usually no passed if RSN is passed)
"RTN","PSOBPSU1",105,0)
 ;       (o) IGRL - Ignore RELEASE DATE, reverse anyway  
"RTN","PSOBPSU1",106,0)
 ;       (o) NDC  - NDC number related to the reversal (Note: might be an invalid NDC)
"RTN","PSOBPSU1",107,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",108,0)
 N PSOET S PSOET=$$PSOET^PSOREJP3(RX,RFL)   ;cnf, PSO*7.0*358
"RTN","PSOBPSU1",109,0)
 I 'PSOET,$$STATUS^PSOBPSUT(RX,RFL)="" Q    ;cnf, PSO*7.0*358, add PSOET check, allow reversal for TRICARE non-billable reject
"RTN","PSOBPSU1",110,0)
 N RESP,STS,ACT,STAT,DA,STATUS,NOACT,REVECME S RSN=+$G(RSN),RTXT=$G(RTXT),REVECME=1
"RTN","PSOBPSU1",111,0)
 I RTXT="",RSN D
"RTN","PSOBPSU1",112,0)
 . S:RSN=2 RTXT="RX PLACED ON HOLD" S:RSN=3 RTXT="RX SUSPENDED" S:RSN=4 RTXT="RX RETURNED TO STOCK"
"RTN","PSOBPSU1",113,0)
 . S:RSN=5 RTXT="RX DELETED" S:RSN=7 RTXT="RX DISCONTINUED" S:RSN=8 RTXT="RX EDITED"
"RTN","PSOBPSU1",114,0)
 D CLSALL^PSOREJUT(RX,RFL,DUZ,RSN,RTXT)
"RTN","PSOBPSU1",115,0)
 I '$G(IGRL),$$RXRLDT^PSOBPSUT(RX,RFL) Q
"RTN","PSOBPSU1",116,0)
 ; - Reseting the Re-transmission flag if Rx is being suspended
"RTN","PSOBPSU1",117,0)
 I RSN=3!($$GET1^DIQ(52,RX,100,"I")=5) D RETRXF^PSOREJU2(RX,RFL,1)
"RTN","PSOBPSU1",118,0)
 S STATUS=$$STATUS^PSOBPSUT(RX,RFL),NOACT=0
"RTN","PSOBPSU1",119,0)
 I STATUS'="E PAYABLE",STATUS'="IN PROGRESS",STATUS'="E REVERSAL REJECTED",STATUS'="E REVERSAL STRANDED",STATUS'="E DUPLICATE" S NOACT=1
"RTN","PSOBPSU1",120,0)
 ; Only perform ECME reversal for a released CMOP if rx/fill is Discontinued.
"RTN","PSOBPSU1",121,0)
 I FROM="DC",$$CMOP^PSOBPSUT(RX,RFL) S REVECME=0
"RTN","PSOBPSU1",122,0)
 I REVECME S RESP=$$EN^BPSNCPDP(RX,RFL,$$DOS(RX,RFL),FROM,$$GETNDC^PSONDCUT(RX,RFL),RTXT)
"RTN","PSOBPSU1",123,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSU1",124,0)
 ; - Logging ECME Act Log
"RTN","PSOBPSU1",125,0)
 I '$G(NOACT),REVECME D
"RTN","PSOBPSU1",126,0)
 . S ACT=$S(PSOTRIC:"TRICARE ",1:"")_"Reversal sent to ECME: "_RTXT_$S($G(NDC)'="":" ("_NDC_")",1:"")_$$STS(RX,RFL,+RESP)
"RTN","PSOBPSU1",127,0)
 . D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOBPSU1",128,0)
 Q
"RTN","PSOBPSU1",129,0)
 ;
"RTN","PSOBPSU1",130,0)
DOS(RX,RFL,DATE) ; Return the Date Of Service for ECME
"RTN","PSOBPSU1",131,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",132,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",133,0)
 ;       (o) DATE - Possible Date Of Service
"RTN","PSOBPSU1",134,0)
 ;Output:    DOS  - Actual Date Of Service
"RTN","PSOBPSU1",135,0)
 I '$D(RFL) S RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",136,0)
 ; - Retrieving FILL DATE from file 52 if not passed
"RTN","PSOBPSU1",137,0)
 I $G(DATE)="" S DATE=$$RXRLDT^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU1",138,0)
 ; - Retrieving FILL DATE from file 52 if not passed
"RTN","PSOBPSU1",139,0)
 I 'DATE S DATE=$$RXFLDT^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU1",140,0)
 ; - Future Date not allowed
"RTN","PSOBPSU1",141,0)
 I DATE>DT!'DATE S DATE=DT
"RTN","PSOBPSU1",142,0)
 Q (DATE\1)
"RTN","PSOBPSU1",143,0)
 ;
"RTN","PSOBPSU1",144,0)
RELEASE(RX,RFL,USR) ; - Notifies IB that the Rx was RELEASED
"RTN","PSOBPSU1",145,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",146,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOBPSU1",147,0)
 ;       (o) USR  - User responsible for releasing the Rx (Default: .5 - Postmaster)
"RTN","PSOBPSU1",148,0)
 N IBAR,RXAR,FLDT,RFAR,PSOIBN
"RTN","PSOBPSU1",149,0)
 S:'$D(RFL) RFL=$$LSTRFL(RX)
"RTN","PSOBPSU1",150,0)
 S:'$D(USR) USR=.5
"RTN","PSOBPSU1",151,0)
 D GETS^DIQ(52,RX_",",".01;2;6;7;8;22","I","RXAR")
"RTN","PSOBPSU1",152,0)
 S DFN=+$G(RXAR(52,RX_",",2,"I"))
"RTN","PSOBPSU1",153,0)
 S IBAR("PRESCRIPTION")=RX,IBAR("RX NO")=$G(RXAR(52,RX_",",.01,"I"))
"RTN","PSOBPSU1",154,0)
 S IBAR("CLAIMID")=$E((RX#10000000)+10000000,2,8),IBAR("USER")=USR
"RTN","PSOBPSU1",155,0)
 S IBAR("DRUG")=RXAR(52,RX_",",6,"I"),IBAR("NDC")=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSU1",156,0)
 S FLDT=$$RXFLDT^PSOBPSUT(RX,RFL) I FLDT>DT S FLDT=DT
"RTN","PSOBPSU1",157,0)
 S IBAR("FILL NUMBER")=RFL,IBAR("FILL DATE")=FLDT
"RTN","PSOBPSU1",158,0)
 S IBAR("QTY")=$G(RXAR(52,RX_",",7,"I")),IBAR("DAYS SUPPLY")=$G(RXAR(52,RX_",",8,"I"))
"RTN","PSOBPSU1",159,0)
 I RFL D
"RTN","PSOBPSU1",160,0)
 . D GETS^DIQ(52.1,RFL_","_RX_",",".01;1;1.1","I","RFAR")
"RTN","PSOBPSU1",161,0)
 . S IBAR("QTY")=$G(RFAR(52.1,RFL_","_RX_",",1,"I"))
"RTN","PSOBPSU1",162,0)
 . S IBAR("DAYS SUPPLY")=$G(RFAR(52.1,RFL_","_RX_",",1.1,"I"))
"RTN","PSOBPSU1",163,0)
 S IBAR("STATUS")="RELEASED"
"RTN","PSOBPSU1",164,0)
 S PSOIBN=$$STORESP^IBNCPDP(DFN,.IBAR)
"RTN","PSOBPSU1",165,0)
 Q
"RTN","PSOBPSU1",166,0)
 ;
"RTN","PSOBPSU1",167,0)
LSTRFL(RX) ;  - Returns the latest fill for the Rx
"RTN","PSOBPSU1",168,0)
 ; Input: (r) RX     - Rx IEN (#52)
"RTN","PSOBPSU1",169,0)
 ;Output:     LSTRFL - Most recent refill #
"RTN","PSOBPSU1",170,0)
 N I,LSTRFL
"RTN","PSOBPSU1",171,0)
 S (I,LSTRFL)=0 F  S I=$O(^PSRX(RX,1,I)) Q:'I  S LSTRFL=I
"RTN","PSOBPSU1",172,0)
 Q LSTRFL
"RTN","PSOBPSU1",173,0)
 ;
"RTN","PSOBPSU1",174,0)
ECMEACT(RX,RFL,COMM,USR) ; - Add an Act to the ECME Act Log (FILE 52)
"RTN","PSOBPSU1",175,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU1",176,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU1",177,0)
 ;       (r) COMM - Comments (up to 75 characters)
"RTN","PSOBPSU1",178,0)
 ;       (o) USR  - User logging the comments (Default: DUZ)
"RTN","PSOBPSU1",179,0)
 S:'$D(RFL) RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU1",180,0)
 D RXACT^PSOBPSU2(RX,RFL,COMM,"M",+$G(USR))
"RTN","PSOBPSU1",181,0)
 Q
"RTN","PSOBPSU1",182,0)
 ;
"RTN","PSOBPSU1",183,0)
STS(RX,RFL,RSP) ; Adds the Status to the ECME Act Log according to Rx/fill claim status Response
"RTN","PSOBPSU1",184,0)
 N STS
"RTN","PSOBPSU1",185,0)
 S STS=$S($$STATUS^PSOBPSUT(RX,RFL)'="IN PROGRESS"&($$STATUS^PSOBPSUT(RX,RFL)'=""):"-"_$$STATUS^PSOBPSUT(RX,RFL),1:"")
"RTN","PSOBPSU1",186,0)
 S:+RSP=1 STS="-NO SUBMISSION THROUGH ECME" S:+RSP=3 STS="-NO REVERSAL NEEDED" S:+RSP=4 STS="-NOT PROCESSED"
"RTN","PSOBPSU1",187,0)
 S:+RSP=5 STS="-SOFTWARE ERROR"_$S($P($G(RESP),"^",2)'="":" ("_$P(RESP,"^",2)_")",1:"")
"RTN","PSOBPSU1",188,0)
 I +RSP=2,$$STATUS^PSOBPSUT(RX,RFL)'="" S STS="-NOT BILLABLE:"_$S(PSOELIG="T":"TRICARE",PSOELIG="C":"CHAMPVA",1:"")_":"_$P(RSP,"^",2)
"RTN","PSOBPSU1",189,0)
 Q STS
"RTN","PSOBPSU2")
0^14^B48423091
"RTN","PSOBPSU2",1,0)
PSOBPSU2 ;BIRM/MFR - BPS (ECME) Utilities 2 ;10/15/04
"RTN","PSOBPSU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**260,287,289,341,290,358**;DEC 1997;Build 35
"RTN","PSOBPSU2",3,0)
 ;Reference to File 200 - NEW PERSON supported by IA 10060
"RTN","PSOBPSU2",4,0)
 ;Reference to DUR1^BPSNCPD3 supported by IA 4560
"RTN","PSOBPSU2",5,0)
 ;Reference to $$NCPDPQTY^PSSBPSUT supported by IA 4992
"RTN","PSOBPSU2",6,0)
 ; 
"RTN","PSOBPSU2",7,0)
MWC(RX,RFL) ; Returns whether a prescription is (M)ail, (W)indow or (C)MOP
"RTN","PSOBPSU2",8,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU2",9,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU2",10,0)
 ;Output: "M": MAIL / "W": WINDOW / "C": CMOP
"RTN","PSOBPSU2",11,0)
 ;
"RTN","PSOBPSU2",12,0)
 N MWC
"RTN","PSOBPSU2",13,0)
 ;
"RTN","PSOBPSU2",14,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",15,0)
 ;
"RTN","PSOBPSU2",16,0)
 ; - MAIL/WINDOW fields (Original and Refill)
"RTN","PSOBPSU2",17,0)
 I RFL S MWC=$$GET1^DIQ(52.1,RFL_","_RX,2,"I")
"RTN","PSOBPSU2",18,0)
 E  S MWC=$$GET1^DIQ(52,RX,11,"I")
"RTN","PSOBPSU2",19,0)
 S:MWC="" MWC="W"
"RTN","PSOBPSU2",20,0)
 ;
"RTN","PSOBPSU2",21,0)
 ; - Checking the RX SUSPENSE file (#52.5)
"RTN","PSOBPSU2",22,0)
 I $$GET1^DIQ(52,RX,100,"I")=5 D
"RTN","PSOBPSU2",23,0)
 . N RXS S RXS=+$O(^PS(52.5,"B",RX,0)) Q:'RXS
"RTN","PSOBPSU2",24,0)
 . I $$GET1^DIQ(52.5,RXS,3,"I")'="" S MWC="C" Q
"RTN","PSOBPSU2",25,0)
 . S MWC="M"
"RTN","PSOBPSU2",26,0)
 ;
"RTN","PSOBPSU2",27,0)
 ; - Checking the CMOP EVENT sub-file (#52.01)
"RTN","PSOBPSU2",28,0)
 I MWC'="C" D
"RTN","PSOBPSU2",29,0)
 . N CMP S CMP=0
"RTN","PSOBPSU2",30,0)
 . F  S CMP=$O(^PSRX(RX,4,CMP)) Q:'CMP  D  I MWC="C" Q
"RTN","PSOBPSU2",31,0)
 . . I $$GET1^DIQ(52.01,CMP_","_RX,2,"I")=RFL S MWC="C"
"RTN","PSOBPSU2",32,0)
 ;
"RTN","PSOBPSU2",33,0)
 Q MWC
"RTN","PSOBPSU2",34,0)
 ;
"RTN","PSOBPSU2",35,0)
RXACT(RX,RFL,COMM,TYPE,USR) ; - Add an Activity to the ECME Activity Log (PRESCRIPTION file)
"RTN","PSOBPSU2",36,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSU2",37,0)
 ;       (o) RFL  - Refill #  (Default: most recent)
"RTN","PSOBPSU2",38,0)
 ;       (r) COMM - Comments (up to 75 characters)
"RTN","PSOBPSU2",39,0)
 ;       (r) TYPE - Comments type: (M-ECME,E-Edit, etc...) See file #52 DD for all values
"RTN","PSOBPSU2",40,0)
 ;       (o) USR  - User logging the comments (Default: DUZ)
"RTN","PSOBPSU2",41,0)
 ;
"RTN","PSOBPSU2",42,0)
 S:'$D(RFL) RFL=$$LSTRFL^PSOBPSU1(RX) S:'$D(USR) USR=DUZ
"RTN","PSOBPSU2",43,0)
 S:'$D(^VA(200,+USR,0)) USR=DUZ S COMM=$E($G(COMM),1,75)
"RTN","PSOBPSU2",44,0)
 ;
"RTN","PSOBPSU2",45,0)
 I COMM="" Q
"RTN","PSOBPSU2",46,0)
 I '$D(^PSRX(RX)) Q
"RTN","PSOBPSU2",47,0)
 ;
"RTN","PSOBPSU2",48,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSU2",49,0)
 I $E(COMM,1,7)'="TRICARE",PSOTRIC S COMM=$E("TRICARE-"_COMM,1,75)
"RTN","PSOBPSU2",50,0)
 N X,DIC,DA,DD,DO,DR,DINUM,Y,DLAYGO
"RTN","PSOBPSU2",51,0)
 S DA(1)=RX,DIC="^PSRX("_RX_",""A"",",DLAYGO=52.3,DIC(0)="L"
"RTN","PSOBPSU2",52,0)
 S DIC("DR")=".02///"_TYPE_";.03////"_USR_";.04///"_$S(TYPE'="M"&(RFL>5):RFL+1,1:RFL)_";.05///"_COMM
"RTN","PSOBPSU2",53,0)
 S X=$$NOW^XLFDT() D FILE^DICN
"RTN","PSOBPSU2",54,0)
 Q
"RTN","PSOBPSU2",55,0)
 ;
"RTN","PSOBPSU2",56,0)
ECMENUM(RX) ; Returns the ECME number for a specific prescription
"RTN","PSOBPSU2",57,0)
 N ECMENUM,STS,RF
"RTN","PSOBPSU2",58,0)
 S ECMENUM=$E(10000000+RX,2,8)
"RTN","PSOBPSU2",59,0)
 S STS=$$STATUS^PSOBPSUT(RX,0)
"RTN","PSOBPSU2",60,0)
 I STS="" D
"RTN","PSOBPSU2",61,0)
 . S RF=0 F  S RF=$O(^PSRX(RX,RF)) Q:'RF  D  I STS'="" Q
"RTN","PSOBPSU2",62,0)
 . . S STS=$$STATUS^PSOBPSUT(RX,RF)
"RTN","PSOBPSU2",63,0)
 I STS="" Q ""
"RTN","PSOBPSU2",64,0)
 Q ECMENUM
"RTN","PSOBPSU2",65,0)
 ;
"RTN","PSOBPSU2",66,0)
RXNUM(ECME) ; Returns the Rx number for a specific ECME number
"RTN","PSOBPSU2",67,0)
 ;
"RTN","PSOBPSU2",68,0)
 N RXNUM,FOUND,MAX,LFT,RAD,I,DIR,RX
"RTN","PSOBPSU2",69,0)
 S MAX=$O(^PSRX(999999999999),-1),LFT=0 I $L(MAX)>7 S LFT=$E(MAX,1,$L(MAX)-7)
"RTN","PSOBPSU2",70,0)
 S FOUND=0
"RTN","PSOBPSU2",71,0)
 F RAD=LFT:-1:0 D
"RTN","PSOBPSU2",72,0)
 . S RX=RAD*10000000+ECME I $D(^PSRX(RX,0)),$$ECMENUM(RX)=ECME S FOUND=FOUND+1,FOUND(FOUND)=RX
"RTN","PSOBPSU2",73,0)
 ;
"RTN","PSOBPSU2",74,0)
 I FOUND<2 D
"RTN","PSOBPSU2",75,0)
 . I FOUND=0 S FOUND=-1 Q
"RTN","PSOBPSU2",76,0)
 . S FOUND=FOUND(1)
"RTN","PSOBPSU2",77,0)
 E  D
"RTN","PSOBPSU2",78,0)
 . W ! F I=1:1:FOUND W !?5,I,". ",$$GET1^DIQ(52,FOUND(I),.01),?25,$$GET1^DIQ(52,FOUND(I),6)
"RTN","PSOBPSU2",79,0)
 . W ! S DIR(0)="NA^1:"_FOUND,DIR("A")="Select one: ",DIR("B")=1
"RTN","PSOBPSU2",80,0)
 . D ^DIR I $D(DIRUT) S FOUND=-1 Q
"RTN","PSOBPSU2",81,0)
 . S FOUND=FOUND(Y)
"RTN","PSOBPSU2",82,0)
 ;
"RTN","PSOBPSU2",83,0)
 Q FOUND
"RTN","PSOBPSU2",84,0)
 ;
"RTN","PSOBPSU2",85,0)
ELIG(RX,RFL,PSOELIG) ;Stores eligibility flag
"RTN","PSOBPSU2",86,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) QUIT
"RTN","PSOBPSU2",87,0)
 N DA,DIE,X,Y,PSOTRIC
"RTN","PSOBPSU2",88,0)
 I 'RFL S DA=RX,DIE="^PSRX(",DR="85///"_PSOELIG D ^DIE
"RTN","PSOBPSU2",89,0)
 I RFL S DA=RFL,DA(1)=RX,DIE="^PSRX("_DA(1)_",1,",DR="85///"_PSOELIG D ^DIE
"RTN","PSOBPSU2",90,0)
 Q
"RTN","PSOBPSU2",91,0)
 ;
"RTN","PSOBPSU2",92,0)
ECMESTAT(RX,RFL) ;called from local mail
"RTN","PSOBPSU2",93,0)
 ;Input: 
"RTN","PSOBPSU2",94,0)
 ; RX = Prescription File IEN
"RTN","PSOBPSU2",95,0)
 ; RFL = Refill
"RTN","PSOBPSU2",96,0)
 ;Output:
"RTN","PSOBPSU2",97,0)
 ; 0 for not allowed to print from suspense
"RTN","PSOBPSU2",98,0)
 ; 1 for allowed to print from suspense
"RTN","PSOBPSU2",99,0)
 ;
"RTN","PSOBPSU2",100,0)
 N STATUS,SHDT,PSOTRIC,TRICCK
"RTN","PSOBPSU2",101,0)
 S STATUS=$$STATUS^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU2",102,0)
 ;IN PROGRESS claims - try again.  If still IN PROGRESS, do not allow to print
"RTN","PSOBPSU2",103,0)
 I STATUS["IN PROGRESS" H 5 S STATUS=$$STATUS^PSOBPSUT(RX,RFL) I STATUS["IN PROGRESS" Q 0
"RTN","PSOBPSU2",104,0)
 ;no ECME status, allow to print.  This will eliminate 90% of the cases
"RTN","PSOBPSU2",105,0)
 I STATUS="" Q 1
"RTN","PSOBPSU2",106,0)
 ;check for Tricare rejects, not allowed to go to print until resolved.
"RTN","PSOBPSU2",107,0)
 ;it does not matter much for this API but usually Tricare processing is done first.
"RTN","PSOBPSU2",108,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,.PSOTRIC)
"RTN","PSOBPSU2",109,0)
 ;Add TRIAUD - if RX/RFL is in audit, allow to print even if not payable; PSO*7*358, cnf
"RTN","PSOBPSU2",110,0)
 I PSOTRIC,STATUS'["PAYABLE",'$$TRIAUD^PSOREJU3(RX,RFL) Q 0
"RTN","PSOBPSU2",111,0)
 ;DUR (88)/RTS (79) reject codes are not allowed to print until resolved.
"RTN","PSOBPSU2",112,0)
 I $$FIND^PSOREJUT(RX,RFL,,"79,88") Q 0
"RTN","PSOBPSU2",113,0)
 ;check for suspense hold date/host reject errors
"RTN","PSOBPSU2",114,0)
 I $$DUR(RX,RFL)=0 Q 0
"RTN","PSOBPSU2",115,0)
 Q 1
"RTN","PSOBPSU2",116,0)
 ;
"RTN","PSOBPSU2",117,0)
 ;Description:
"RTN","PSOBPSU2",118,0)
 ;This function checks to see if a RX should be submitted to ECME
"RTN","PSOBPSU2",119,0)
 ;Submit when:
"RTN","PSOBPSU2",120,0)
 ;  RX/Fill was not submitted before (STATUS="")
"RTN","PSOBPSU2",121,0)
 ;  Previous submission had Host Reject Error Code(s)
"RTN","PSOBPSU2",122,0)
 ;Input:
"RTN","PSOBPSU2",123,0)
 ;  RX = Prescription file #52 IEN
"RTN","PSOBPSU2",124,0)
 ;  RFL = Refill number
"RTN","PSOBPSU2",125,0)
 ;Returns:
"RTN","PSOBPSU2",126,0)
 ;  1 = OK to resubmit
"RTN","PSOBPSU2",127,0)
 ;  0 = Don't resubmit
"RTN","PSOBPSU2",128,0)
ECMEST2(RX,RFL) ;
"RTN","PSOBPSU2",129,0)
 N STATUS
"RTN","PSOBPSU2",130,0)
 S STATUS=$$STATUS^PSOBPSUT(RX,RFL)
"RTN","PSOBPSU2",131,0)
 ; Never submitted before, OK to submit
"RTN","PSOBPSU2",132,0)
 I STATUS="" Q 1
"RTN","PSOBPSU2",133,0)
 ; If status other than E REJECTED, don't resubmit
"RTN","PSOBPSU2",134,0)
 I STATUS'="E REJECTED" Q 0
"RTN","PSOBPSU2",135,0)
 ; Check for host reject codes(s)
"RTN","PSOBPSU2",136,0)
 Q $$HOSTREJ(RX,RFL,1)
"RTN","PSOBPSU2",137,0)
 ;
"RTN","PSOBPSU2",138,0)
 ;Description: ePharmacy
"RTN","PSOBPSU2",139,0)
 ;This subroutine checks an RX/FILL for Host Reject Errors returned
"RTN","PSOBPSU2",140,0)
 ;from previous ECME submissions. The host reject errors checked are M6, M8, NN, and 99.
"RTN","PSOBPSU2",141,0)
 ;Note that host reject errors do not pass to the pharmacy reject worklist so it's necessary
"RTN","PSOBPSU2",142,0)
 ;to check ECME for these type errors.
"RTN","PSOBPSU2",143,0)
 ;Input: 
"RTN","PSOBPSU2",144,0)
 ; RX = Prescription File IEN
"RTN","PSOBPSU2",145,0)
 ; RFL = Refill
"RTN","PSOBPSU2",146,0)
 ; ONE = Either 1 or 0 - Defaults to 1
"RTN","PSOBPSU2",147,0)
 ; If 1, At least ONE reject code associated with the RX/FILL must 
"RTN","PSOBPSU2",148,0)
 ;   match either M6, M8, NN, or 99.
"RTN","PSOBPSU2",149,0)
 ; If 0, ALL reject codes must match either M6, M8, NN, or 99
"RTN","PSOBPSU2",150,0)
 ; REJ = (o) reject information from called from routine to be passed back. (contains data returned from DUR1^BPSNCPD3)
"RTN","PSOBPSU2",151,0)
 ;Return:
"RTN","PSOBPSU2",152,0)
 ; 0 = no host rejects exists based on ONE parameter
"RTN","PSOBPSU2",153,0)
 ; 1 = host reject exists based on ONE parameter
"RTN","PSOBPSU2",154,0)
HOSTREJ(RX,RFL,ONE) ; called from PSXRPPL2 and this routine
"RTN","PSOBPSU2",155,0)
 N IDX,TXT,CODE,HRCODE,HRQUIT,RETV,REJ
"RTN","PSOBPSU2",156,0)
 S IDX="",(RETV,HRQUIT)=0
"RTN","PSOBPSU2",157,0)
 I '$D(ONE) S ONE=1
"RTN","PSOBPSU2",158,0)
 ;for print from suspense there will only be primary insurance or an index of 1 in REJ array
"RTN","PSOBPSU2",159,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ) ; Get reject list from last submission if not present
"RTN","PSOBPSU2",160,0)
 S TXT=$G(REJ(1,"REJ CODE LST"))
"RTN","PSOBPSU2",161,0)
 Q:TXT="" 0
"RTN","PSOBPSU2",162,0)
 I ONE=0,TXT'["," S ONE=1
"RTN","PSOBPSU2",163,0)
 F I=1:1:$L(TXT,",") S CODE=$P(TXT,",",I) D  Q:HRQUIT
"RTN","PSOBPSU2",164,0)
 . F HRCODE=99,"M6","M8","NN" D  Q:HRQUIT
"RTN","PSOBPSU2",165,0)
 . . I CODE=HRCODE S RETV=1 I ONE S HRQUIT=1 Q
"RTN","PSOBPSU2",166,0)
 . . I CODE'=HRCODE,RETV=1 S RETV=0,HRQUIT=1 Q
"RTN","PSOBPSU2",167,0)
 Q RETV
"RTN","PSOBPSU2",168,0)
 ;
"RTN","PSOBPSU2",169,0)
 ;Description: 
"RTN","PSOBPSU2",170,0)
 ;Input: RX = Prescription file #52 IEN
"RTN","PSOBPSU2",171,0)
 ; RFL = Refill number
"RTN","PSOBPSU2",172,0)
 ;Returns: A value of 0 (zero) will be returned when reject codes M6, M8,
"RTN","PSOBPSU2",173,0)
 ;NN, and 99 are present OR if on susp hold which means the prescription should not 
"RTN","PSOBPSU2",174,0)
 ;be printed from suspense. Otherwise, a value of 1(one) will be returned.
"RTN","PSOBPSU2",175,0)
DUR(RX,RFL) ;
"RTN","PSOBPSU2",176,0)
 N REJ,IDX,TXT,CODE,SHOLD,SHCODE,ESTAT,SHDT
"RTN","PSOBPSU2",177,0)
 S SHOLD=1,IDX=""
"RTN","PSOBPSU2",178,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",179,0)
 S SHDT=$$SHDT(RX,RFL) ; Get suspense hold date for rx/refill
"RTN","PSOBPSU2",180,0)
 I SHDT'="",SHDT'<$$FMADD^XLFDT(DT,1) Q 0
"RTN","PSOBPSU2",181,0)
 I $$HOSTREJ^PSOBPSU2(RX,RFL,1) I SHDT="" S SHOLD=0 D SHDTLOG(RX,RFL)
"RTN","PSOBPSU2",182,0)
 Q SHOLD
"RTN","PSOBPSU2",183,0)
 ;
"RTN","PSOBPSU2",184,0)
 ;Description: This subroutine sets the EPHARMACY SUSPENSE HOLD DATE field
"RTN","PSOBPSU2",185,0)
 ;for the rx or refill to tomorrow and adds an entry to the SUSPENSE Activity Log.
"RTN","PSOBPSU2",186,0)
 ;Input: RX = Prescription File IEN
"RTN","PSOBPSU2",187,0)
 ; RFL = Refill
"RTN","PSOBPSU2",188,0)
SHDTLOG(RX,RFL) ;
"RTN","PSOBPSU2",189,0)
 N DA,DIE,DR,COMM,SHDT
"RTN","PSOBPSU2",190,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",191,0)
 S SHDT=$$FMADD^XLFDT(DT,1)
"RTN","PSOBPSU2",192,0)
 S COMM="SUSPENSE HOLD until "_$$FMTE^XLFDT(SHDT,"2D")_" due to host reject error."
"RTN","PSOBPSU2",193,0)
 I RFL=0 S DA=RX,DIE="^PSRX(",DR="86///"_SHDT D ^DIE
"RTN","PSOBPSU2",194,0)
 E  S DA=RFL,DA(1)=RX,DIE="^PSRX("_DA(1)_",1,",DR="86///"_SHDT D ^DIE
"RTN","PSOBPSU2",195,0)
 D RXACT(RX,RFL,COMM,"S",+$G(DUZ)) ; Create Activity Log entry
"RTN","PSOBPSU2",196,0)
 Q
"RTN","PSOBPSU2",197,0)
 ;
"RTN","PSOBPSU2",198,0)
 ;Description: This function returns the EPHARMACY SUSPENSE HOLD DATE field
"RTN","PSOBPSU2",199,0)
 ;for the rx or refill
"RTN","PSOBPSU2",200,0)
 ;Input: RX = Prescription File IEN
"RTN","PSOBPSU2",201,0)
 ; RFL = Refill
"RTN","PSOBPSU2",202,0)
SHDT(RX,RFL) ;
"RTN","PSOBPSU2",203,0)
 N FILE,IENS
"RTN","PSOBPSU2",204,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSU2",205,0)
 S FILE=$S(RFL=0:52,1:52.1),IENS=$S(RFL=0:RX_",",1:RFL_","_RX_",")
"RTN","PSOBPSU2",206,0)
 Q $$GET1^DIQ(FILE,IENS,86,"I")
"RTN","PSOBPSU2",207,0)
 ;
"RTN","PSOBPSU2",208,0)
ELOG(RESP) ; - due to size of PSOBPSU1 exceeding limit 
"RTN","PSOBPSU2",209,0)
 ; -Logs an ECME Activity Log if Rx Qty is different than Billing Qty
"RTN","PSOBPSU2",210,0)
 I '$G(RESP),$T(NCPDPQTY^PSSBPSUT)'="" D
"RTN","PSOBPSU2",211,0)
 . N DRUG,RXQTY,BLQTY,BLDU,Z
"RTN","PSOBPSU2",212,0)
 . S DRUG=$$GET1^DIQ(52,RX,6,"I")
"RTN","PSOBPSU2",213,0)
 . S RXQTY=$S('RFL:$$GET1^DIQ(52,RX,7,"I"),1:$$GET1^DIQ(52.1,RFL_","_RX,1))/1
"RTN","PSOBPSU2",214,0)
 . S Z=$$NCPDPQTY^PSSBPSUT(DRUG,RXQTY),BLQTY=Z/1,BLDU=$P(Z,"^",2)
"RTN","PSOBPSU2",215,0)
 . I RXQTY'=BLQTY D
"RTN","PSOBPSU2",216,0)
 . . D RXACT(RX,RFL,"BILLING QUANTITY submitted: "_$J(BLQTY,0,$L($P(BLQTY,".",2)))_" ("_BLDU_")","M",DUZ)
"RTN","PSOBPSU2",217,0)
 Q
"RTN","PSOBPSU2",218,0)
 ;
"RTN","PSOBPSU2",219,0)
UPDFL(RXREC,SUB,INDT) ;update fill date with release date when NDC changes at CMOP and OPAI auto-release
"RTN","PSOBPSU2",220,0)
 ;Input: RXREC = Prescription File IEN
"RTN","PSOBPSU2",221,0)
 ;         SUB = Refill
"RTN","PSOBPSU2",222,0)
 ;        INDT = Release date
"RTN","PSOBPSU2",223,0)
 N DA,DIE,DR,PSOX,SFN,DEAD,SUB,XOK,OLD,X,II,EXDAT,OFILLD,COM,CNT,RFCNT,RF
"RTN","PSOBPSU2",224,0)
 S DEAD=0,SFN=""
"RTN","PSOBPSU2",225,0)
 S EXDAT=INDT I EXDAT["." S EXDAT=$P(EXDAT,".")
"RTN","PSOBPSU2",226,0)
 I '$D(SUB) S SUB=0 F II=0:0 S II=$O(^PSRX(RXREC,1,II)) Q:'II  S SUB=+II
"RTN","PSOBPSU2",227,0)
 I 'SUB S OFILLD=$$GET1^DIQ(52,RXREC,22,"I") Q:OFILLD=EXDAT  D
"RTN","PSOBPSU2",228,0)
 .S (X,OLD)=$P(^PSRX(RXREC,2),"^",2),DA=RXREC,DR="22///"_EXDAT_";101///"_EXDAT,DIE=52
"RTN","PSOBPSU2",229,0)
 .D ^DIE K DIE,DA
"RTN","PSOBPSU2",230,0)
 I SUB S (OLD,X)=+$P($G(^PSRX(RXREC,1,SUB,0)),"^"),DA(1)=RXREC,DA=SUB,OFILLD=$$GET1^DIQ(52.1,DA_","_RXREC,.01,"I") Q:OFILLD=EXDAT  D
"RTN","PSOBPSU2",231,0)
 . S DIE="^PSRX("_DA(1)_",1,",DR=".01///"_EXDAT D ^DIE K DIE S $P(^PSRX(RXREC,3),"^")=EXDAT
"RTN","PSOBPSU2",232,0)
 Q:$D(DTOUT)!($D(DUOUT))
"RTN","PSOBPSU2",233,0)
 S DA=RXREC
"RTN","PSOBPSU2",234,0)
 D AREC^PSOSUCH1
"RTN","PSOBPSU2",235,0)
FIN ;
"RTN","PSOBPSU2",236,0)
 Q
"RTN","PSOBPSUT")
0^26^B54958775
"RTN","PSOBPSUT",1,0)
PSOBPSUT ;BIRM/MFR - BPS (ECME) Utilities ; 07 Jun 2005  8:39 PM
"RTN","PSOBPSUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,281,287,289,358**;DEC 1997;Build 35
"RTN","PSOBPSUT",3,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOBPSUT",4,0)
 ;Reference to IBSEND^BPSECMP2 supported by IA 4411
"RTN","PSOBPSUT",5,0)
 ;Reference to $$STATUS^BPSOSRX supported by IA 4412
"RTN","PSOBPSUT",6,0)
 ;Reference to $$NDCFMT^PSSNDCUT supported by IA 4707
"RTN","PSOBPSUT",7,0)
 ;Reference to $$CLAIM^BPSBUTL supported by IA 4719
"RTN","PSOBPSUT",8,0)
 ;Reference to ^PS(55 supported by IA 2228
"RTN","PSOBPSUT",9,0)
 ;Reference to ^PSDRUG( supported by IA 221
"RTN","PSOBPSUT",10,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOBPSUT",11,0)
 ;
"RTN","PSOBPSUT",12,0)
ECME(RX) ; Returns "e" if Rx/Refill is Electronically Billable (3rd party)
"RTN","PSOBPSUT",13,0)
 Q $S($$STATUS^BPSOSRX(RX,$$LSTRFL^PSOBPSU1(RX))'="":"e",1:"")
"RTN","PSOBPSUT",14,0)
 ;
"RTN","PSOBPSUT",15,0)
STATUS(RX,RFL) ; Returns the Rx's ECME Status (calls STATUS^BPSOSRX)
"RTN","PSOBPSUT",16,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",17,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",18,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",19,0)
 Q $P($$STATUS^BPSOSRX(RX,RFL),"^")
"RTN","PSOBPSUT",20,0)
 ;
"RTN","PSOBPSUT",21,0)
SUBMIT(RX,RFL,IGRL,IGCMP) ; Returns whether the Rx should be submitted to ECME at the moment or not
"RTN","PSOBPSUT",22,0)
 ; Input:  (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",23,0)
 ;         (o) RFL  - Refill # (Def.: most recent)
"RTN","PSOBPSUT",24,0)
 ;         (o) IGRL - Ignore Release Date? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",25,0)
 ;         (o) IGCMP- Ignore CMOP/Suspense check? (1-YES/0-NO) (Def.: 0 - NO)
"RTN","PSOBPSUT",26,0)
 ;
"RTN","PSOBPSUT",27,0)
 ; - Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",28,0)
 N STATUS
"RTN","PSOBPSUT",29,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",30,0)
 ; - Not the latest fill for the prescription
"RTN","PSOBPSUT",31,0)
 I RFL'=$$LSTRFL^PSOBPSU1(RX) Q 0
"RTN","PSOBPSUT",32,0)
 ; - Status not ACTIVE, DISCONTINUED, or EXPIRED
"RTN","PSOBPSUT",33,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOBPSUT",34,0)
 I ",0,11,12,14,15,"'[(","_STATUS_",") Q 0
"RTN","PSOBPSUT",35,0)
 ; Will suspend for CMOP
"RTN","PSOBPSUT",36,0)
 I '$G(IGCMP),$$CMOP(RX,RFL) Q 0
"RTN","PSOBPSUT",37,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",38,0)
 I '$$ECMEON^BPSUTIL($$RXSITE(RX,RFL)) Q 0
"RTN","PSOBPSUT",39,0)
 ; - Rx is RELEASED - Do not submit
"RTN","PSOBPSUT",40,0)
 I '$G(IGRL),$$RXRLDT(RX,RFL) Q 0
"RTN","PSOBPSUT",41,0)
 ; - Future Fill/AUTO SUSPENSE ON - will suspend
"RTN","PSOBPSUT",42,0)
 I '$G(IGCMP),$$RXFLDT(RX,RFL)>DT,$$GET1^DIQ(59,$$RXSITE(RX,RFL),.16,"I") Q 0
"RTN","PSOBPSUT",43,0)
 Q 1
"RTN","PSOBPSUT",44,0)
 ;
"RTN","PSOBPSUT",45,0)
CMOP(RX,RFL) ; Returns if the Rx will be a CMOP Rx or not
"RTN","PSOBPSUT",46,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",47,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",48,0)
 ; Output: 1 - CMOP / 0 - NON-CMOP
"RTN","PSOBPSUT",49,0)
 ;
"RTN","PSOBPSUT",50,0)
 N DFN,CMOP,MAIL,MAILEXP,DRUG,WARNS,STATUS,MW,A
"RTN","PSOBPSUT",51,0)
 ; Get the REFILL # (multiple IEN)
"RTN","PSOBPSUT",52,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",53,0)
 ; MAIL=MAIL Code, MAILEXP=Mail Code Expiration Date
"RTN","PSOBPSUT",54,0)
 S CMOP=0
"RTN","PSOBPSUT",55,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),MAIL=$$GET1^DIQ(55,DFN,.03,"I"),MAILEXP=$$GET1^DIQ(55,DFN,.05,"I")
"RTN","PSOBPSUT",56,0)
 I MAIL>1,MAILEXP=""!(MAILEXP>DT) G QCMOP
"RTN","PSOBPSUT",57,0)
 ; Get drug IEN and check DRUG if CMOP  ,$S($G(MAILEXP)=""!($G(MAILEXP)>DT):1,1:0)
"RTN","PSOBPSUT",58,0)
 S DRUG=$$GET1^DIQ(52,RX,6,"I") G QCMOP:'DRUG,QCMOP:'$D(^PSDRUG("AQ",DRUG))
"RTN","PSOBPSUT",59,0)
 ; Not marked for O.P.
"RTN","PSOBPSUT",60,0)
 I $$GET1^DIQ(50,DRUG,63)'["O" G QCMOP
"RTN","PSOBPSUT",61,0)
 ; Drug Warning >11
"RTN","PSOBPSUT",62,0)
 S WARNS=$$GET1^DIQ(50,DRUG,8) I $L(WARNS)>11 G QCMOP
"RTN","PSOBPSUT",63,0)
 ; If tradename
"RTN","PSOBPSUT",64,0)
 I $$GET1^DIQ(52,RX,6.5)'="" G QCMOP
"RTN","PSOBPSUT",65,0)
 ; If Cancelled, Expired, Deleted, Hold
"RTN","PSOBPSUT",66,0)
 S STATUS=$$GET1^DIQ(52,RX,100,"I") I (STATUS>9&(",14,15,"'[(","_STATUS_",")))!(STATUS=4)!(STATUS=3) G QCMOP
"RTN","PSOBPSUT",67,0)
 ; Rx RELEASED
"RTN","PSOBPSUT",68,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) G QCMOP
"RTN","PSOBPSUT",69,0)
 ; MAIL/WINDOW
"RTN","PSOBPSUT",70,0)
 S MW=$S('RFL:$$GET1^DIQ(52,RX,11,"I"),1:$$GET1^DIQ(52.1,RFL_","_RX,2,"I"))
"RTN","PSOBPSUT",71,0)
 ; IF WINDOW/ORIGINAL/FUTURE FILL SETS MW = MAIL
"RTN","PSOBPSUT",72,0)
 I MW="W",$$RXFLDT^PSOBPSUT(RX,RFL)>DT S MW="M"
"RTN","PSOBPSUT",73,0)
 ; If not MAIL
"RTN","PSOBPSUT",74,0)
 I MW'="M" G QCMOP
"RTN","PSOBPSUT",75,0)
 S CMOP=1
"RTN","PSOBPSUT",76,0)
 ;
"RTN","PSOBPSUT",77,0)
QCMOP Q CMOP
"RTN","PSOBPSUT",78,0)
 ;
"RTN","PSOBPSUT",79,0)
RXRLDT(RX,RFL) ; Returns the Rx Release Date
"RTN","PSOBPSUT",80,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",81,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",82,0)
 ;        
"RTN","PSOBPSUT",83,0)
 ; Output:  RXRLDT - Rx Release Date
"RTN","PSOBPSUT",84,0)
 N RXRLDT
"RTN","PSOBPSUT",85,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",86,0)
 S RXRLDT=$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOBPSUT",87,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",88,0)
 I RFL S RXRLDT=$$GET1^DIQ(52.1,RFL_","_RX,17,"I")
"RTN","PSOBPSUT",89,0)
 Q RXRLDT
"RTN","PSOBPSUT",90,0)
 ;
"RTN","PSOBPSUT",91,0)
RXFLDT(RX,RFL) ; Returns the Rx Fill Date
"RTN","PSOBPSUT",92,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",93,0)
 ;         (o) RFL - Refill # (Default: most recent)      
"RTN","PSOBPSUT",94,0)
 ; Output:  RXFLDT - Rx Fill Date
"RTN","PSOBPSUT",95,0)
 N RXFLDT
"RTN","PSOBPSUT",96,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",97,0)
 S RXFLDT=$$GET1^DIQ(52,RX,22,"I")
"RTN","PSOBPSUT",98,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",99,0)
 I RFL S RXFLDT=$$GET1^DIQ(52.1,RFL_","_RX,.01,"I")
"RTN","PSOBPSUT",100,0)
 Q RXFLDT
"RTN","PSOBPSUT",101,0)
 ;
"RTN","PSOBPSUT",102,0)
RXSUDT(RX,RFL) ; Returns the prescription/fill Suspense Date for the RX/Reject passed in
"RTN","PSOBPSUT",103,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOBPSUT",104,0)
 ;       (o) RFL  - Refill IEN (#52.1)
"RTN","PSOBPSUT",105,0)
 ;Output: SUSPENSE DATE (External format) or <NULL>, if not suspended
"RTN","PSOBPSUT",106,0)
 ;
"RTN","PSOBPSUT",107,0)
 I $G(^PSRX(RX,"STA"))'=5 Q ""
"RTN","PSOBPSUT",108,0)
 N SURX,SURFL
"RTN","PSOBPSUT",109,0)
 S SURX=$O(^PS(52.5,"B",RX,0)) I 'SURX Q ""
"RTN","PSOBPSUT",110,0)
 I $$GET1^DIQ(52.5,SURX,.05,"I") Q ""
"RTN","PSOBPSUT",111,0)
 S SURFL=+$$GET1^DIQ(52.5,SURX,9) I RFL'=SURFL Q ""
"RTN","PSOBPSUT",112,0)
 Q $$GET1^DIQ(52.5,SURX,.02,"I")
"RTN","PSOBPSUT",113,0)
 ;
"RTN","PSOBPSUT",114,0)
RXSITE(RX,RFL) ; Returns the Rx DIVISION
"RTN","PSOBPSUT",115,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOBPSUT",116,0)
 ;         (o) RFL - Refill #
"RTN","PSOBPSUT",117,0)
 ; Output:  SITE - Rx Fill Date
"RTN","PSOBPSUT",118,0)
 ;        
"RTN","PSOBPSUT",119,0)
 N SITE
"RTN","PSOBPSUT",120,0)
 I '$G(RX) Q ""
"RTN","PSOBPSUT",121,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",122,0)
 I RFL S SITE=$$GET1^DIQ(52.1,RFL_","_RX,8,"I")
"RTN","PSOBPSUT",123,0)
 I 'RFL!'$G(SITE) S SITE=$$GET1^DIQ(52,RX,20,"I")
"RTN","PSOBPSUT",124,0)
 Q SITE
"RTN","PSOBPSUT",125,0)
 ;
"RTN","PSOBPSUT",126,0)
MANREL(RX,RFL,PID) ; ePharmacy Manual Rx Release
"RTN","PSOBPSUT",127,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",128,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",129,0)
 ;       (o) PID - Displays PID/Drug/Rx in the NDC prompts
"RTN","PSOBPSUT",130,0)
 ;Output: "" (null - OK to Release) OR "^" (User entered "^", or no valid NDC on file for ePharmacy Rx)
"RTN","PSOBPSUT",131,0)
 ;       
"RTN","PSOBPSUT",132,0)
 N ACTION
"RTN","PSOBPSUT",133,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",134,0)
 ; Check for unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOBPSUT",135,0)
 I $$PSOET^PSOREJP3(RX,RFL) W ! Q "^"
"RTN","PSOBPSUT",136,0)
 ; Checking for REJECTS before proceeding to Rx Release
"RTN","PSOBPSUT",137,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",138,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",139,0)
 ; - ePharmacy switch is OFF
"RTN","PSOBPSUT",140,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q ""
"RTN","PSOBPSUT",141,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",142,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",143,0)
 I '$D(PSOTRIC) N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOBPSUT",144,0)
 ; - NDC editing before Rx release
"RTN","PSOBPSUT",145,0)
 S ACTION=$$CHGNDC^PSONDCUT(RX,RFL,$G(PID))
"RTN","PSOBPSUT",146,0)
 I ACTION="^"!(ACTION=2) D  Q "^"
"RTN","PSOBPSUT",147,0)
 . W:ACTION="^" !!,$C(7),"A valid NDC must be entered before the Release function can be completed.",! H 1
"RTN","PSOBPSUT",148,0)
 . I $G(PSOTRIC) D:ACTION=2 TRIC
"RTN","PSOBPSUT",149,0)
 ; - Checking for OPEN/UNRESOLVED 3rd. Party Payer Rejects (After possible NDC edit)
"RTN","PSOBPSUT",150,0)
 I $$FIND^PSOREJUT(RX,RFL) D  I ACTION="Q"!(ACTION="^") W ! Q "^"
"RTN","PSOBPSUT",151,0)
 . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","OIQ","Q")
"RTN","PSOBPSUT",152,0)
 I $G(PSOTRIC),$$STATUS^PSOBPSUT(RX,RFL)["IN PROGRESS" D TRIC Q "^"
"RTN","PSOBPSUT",153,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",154,0)
 D RELEASE^PSOBPSU1(RX,RFL,DUZ)
"RTN","PSOBPSUT",155,0)
 Q ""
"RTN","PSOBPSUT",156,0)
 ;
"RTN","PSOBPSUT",157,0)
TRIC ;
"RTN","PSOBPSUT",158,0)
 W !!,$C(7),"TRICARE Rx remains in 'IN PROGRESS' status for ECME, and cannot be released.",! H 1
"RTN","PSOBPSUT",159,0)
 Q
"RTN","PSOBPSUT",160,0)
 ;
"RTN","PSOBPSUT",161,0)
AUTOREL(RX,RFL,RLDT,NDC,SRC,STS,HNG) ; Sends Rx Release information to ECME/IB and updates NDC
"RTN","PSOBPSUT",162,0)
 ;                                 in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",163,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",164,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",165,0)
 ;       (r) RLDT- Release Date
"RTN","PSOBPSUT",166,0)
 ;       (r) NDC - NDC Number (Must be 11 digits)
"RTN","PSOBPSUT",167,0)
 ;       (o) SRC - SOURCE: "C" - CMOP / "A" - OPAI
"RTN","PSOBPSUT",168,0)
 ;       (o) STS - Status: (S)uccessful/(U)nsuccessful Release (Default: "S" - Successful)
"RTN","PSOBPSUT",169,0)
 ;       (o) HNG - HANG time after resubmission and before checking the status of the claim (Default: 0)
"RTN","PSOBPSUT",170,0)
 ;       
"RTN","PSOBPSUT",171,0)
 N RXNDC,SITE
"RTN","PSOBPSUT",172,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",173,0)
 S:'$D(STS) STS="S" S:'$D(SRC) SRC="" S HNG=+$G(HNG)
"RTN","PSOBPSUT",174,0)
 S RXNDC=$$GETNDC^PSONDCUT(RX,RFL)
"RTN","PSOBPSUT",175,0)
 ; - Saves the NDC from CMOP/Automated Dispensing Machine in the Prescription file
"RTN","PSOBPSUT",176,0)
 I $$NDCFMT^PSSNDCUT(NDC)'="" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),$S(SRC="C":1,1:0))
"RTN","PSOBPSUT",177,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",178,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",179,0)
 ; - Unsuccessful Release 
"RTN","PSOBPSUT",180,0)
 I STS="U" D  Q
"RTN","PSOBPSUT",181,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLX",,"UNSUCCESSFUL "_$S(SRC="C":"CMOP",1:"EXT INTERFACE")_" RELEASE",1)
"RTN","PSOBPSUT",182,0)
 ; - Notifying IB of a Rx RELEASE event 
"RTN","PSOBPSUT",183,0)
 D RELEASE^PSOBPSU1(RX,RFL)
"RTN","PSOBPSUT",184,0)
 ; - Invalid NDC from Automated Dispensing Machine
"RTN","PSOBPSUT",185,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",186,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID EXT INTERFACE NDC",1,NDC)
"RTN","PSOBPSUT",187,0)
 ; - Invalid NDC number for CMOP
"RTN","PSOBPSUT",188,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)="" D  Q
"RTN","PSOBPSUT",189,0)
 . D REVERSE^PSOBPSU1(RX,RFL,"CRLR",,"INVALID CMOP NDC",1,NDC)
"RTN","PSOBPSUT",190,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",191,0)
 I SRC="A",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",192,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),,"AUTO RELEASE",,1,,1),UPDFL^PSOBPSU2(RX,RFL,RLDT)
"RTN","PSOBPSUT",193,0)
 . H HNG
"RTN","PSOBPSUT",194,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",195,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),0,1)
"RTN","PSOBPSUT",196,0)
 ; - If NDC not equal RXNDC, issue reversal and submit new claim
"RTN","PSOBPSUT",197,0)
 I SRC="C",$$NDCFMT^PSSNDCUT(NDC)'=RXNDC D  Q
"RTN","PSOBPSUT",198,0)
 . ; - Reverse/Resubmit with correct NDC
"RTN","PSOBPSUT",199,0)
 . D ECMESND^PSOBPSU1(RX,RFL,RLDT,"CRLB",$$NDCFMT^PSSNDCUT(NDC),1,"CMOP RELEASE",,1,,1),UPDFL^PSOBPSU2(RX,RFL,RLDT)
"RTN","PSOBPSUT",200,0)
 . ; - Wait for a response from the Payer for the submission above
"RTN","PSOBPSUT",201,0)
 . H HNG
"RTN","PSOBPSUT",202,0)
 . ; - If new claim returned PAYABLE, save new NDC in the DRUG/PRESCRIPTION files
"RTN","PSOBPSUT",203,0)
 . I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D SAVNDC^PSONDCUT(RX,RFL,$$NDCFMT^PSSNDCUT(NDC),1,1)
"RTN","PSOBPSUT",204,0)
 ; - Calls ECME api responsible for notifying IB to create a BILL
"RTN","PSOBPSUT",205,0)
 D IBSEND(RX,RFL)
"RTN","PSOBPSUT",206,0)
 Q
"RTN","PSOBPSUT",207,0)
 ;
"RTN","PSOBPSUT",208,0)
IBSEND(RX,RFL) ; Rx Release: Calls ECME, which will call  IB to create a bill
"RTN","PSOBPSUT",209,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",210,0)
 ;       (o) RFL - Refill #  (Default: most recent)
"RTN","PSOBPSUT",211,0)
 ;
"RTN","PSOBPSUT",212,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",213,0)
 ; - ECME turned OFF for Rx's site
"RTN","PSOBPSUT",214,0)
 I '$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,RFL)) Q
"RTN","PSOBPSUT",215,0)
 ; - Not an ePharmacy Rx
"RTN","PSOBPSUT",216,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="" Q ""
"RTN","PSOBPSUT",217,0)
 ; - Calls ECME previously reversed, re-submit the claim to the payer
"RTN","PSOBPSUT",218,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="E REVERSAL ACCEPTED"!($$STATUS^PSOBPSUT(RX,RFL)="IN PROGRESS") D  Q
"RTN","PSOBPSUT",219,0)
 . D ECMESND^PSOBPSU1(RX,RFL,$$RXRLDT^PSOBPSUT(RX,RFL),"RRL")
"RTN","PSOBPSUT",220,0)
 ; - Notifying ECME of a BILLING event 
"RTN","PSOBPSUT",221,0)
 I $$STATUS^PSOBPSUT(RX,RFL)="E PAYABLE" D  Q
"RTN","PSOBPSUT",222,0)
 . N PSOCLAIM S PSOCLAIM=$$CLAIM^BPSBUTL(RX,RFL)
"RTN","PSOBPSUT",223,0)
 . D IBSEND^BPSECMP2($P(PSOCLAIM,"^",2),$P(PSOCLAIM,"^",3),"BILL",DUZ)
"RTN","PSOBPSUT",224,0)
 Q
"RTN","PSOBPSUT",225,0)
 ;
"RTN","PSOBPSUT",226,0)
RETRX(RX,RFL) ; - Re-transmit a claim for the prescription/fill?
"RTN","PSOBPSUT",227,0)
 ;Input: (r) RX  - Rx IEN (#52)
"RTN","PSOBPSUT",228,0)
 ;       (o) RFL - Refill # (Default: most recent)
"RTN","PSOBPSUT",229,0)
 ;Output: 1 - Re-transmit  /  0 - Don't re-transmit
"RTN","PSOBPSUT",230,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOBPSUT",231,0)
 I RFL Q +$$GET1^DIQ(52.1,RFL_","_RX,82,"I")
"RTN","PSOBPSUT",232,0)
 Q +$$GET1^DIQ(52,RX,82,"I")
"RTN","PSOCAN4")
0^1^B43086462
"RTN","PSOCAN4",1,0)
PSOCAN4 ;BIR/SAB-rx speed dc listman ;10/23/06 11:50am
"RTN","PSOCAN4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**20,24,27,63,88,117,131,259,268,225,358**;DEC 1997;Build 35
"RTN","PSOCAN4",3,0)
 ;External reference to File #200 supported by DBIA 224
"RTN","PSOCAN4",4,0)
 ;External reference NA^ORX1 supported by DBIA 2186
"RTN","PSOCAN4",5,0)
 ;External references to L, UL, PSOL, and PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOCAN4",6,0)
 ;External reference to PSDRUG supported by DBIA 221
"RTN","PSOCAN4",7,0)
 ;External reference to PS(50.7 supported by DBIA 2223
"RTN","PSOCAN4",8,0)
 ;External reference to PS(50.606 supported by DBIA 2174
"RTN","PSOCAN4",9,0)
SEL I '$D(^XUSEC("PSORPH",DUZ)) S VALMSG="Unauthorized Action Selection.",VALMBCK="" Q
"RTN","PSOCAN4",10,0)
 N VALMCNT I '$G(PSOCNT) S VALMSG="This patient has no Prescriptions!" S VALMBCK="" Q
"RTN","PSOCAN4",11,0)
 S DFNHLD=PSODFN
"RTN","PSOCAN4",12,0)
 S PSOPLCK=$$L^PSSLOCK(PSODFN,0) I '$G(PSOPLCK) D LOCK^PSOORCPY S VALMSG=$S($P($G(PSOPLCK),"^",2)'="":$P($G(PSOPLCK),"^",2)_" is working on this patient.",1:"Another person is entering orders for this patient.") K PSOPLCK S VALMBCK="" Q
"RTN","PSOCAN4",13,0)
 K PSOPLCK S RXCNT=0 K PSOFDR,DIR,DUOUT,DIRUT S DIR("A")="Select Orders by number",DIR(0)="LO^1:"_PSOCNT D ^DIR S LST=Y I $D(DTOUT)!($D(DUOUT)) K DIR,DIRUT,DTOUT,DUOUT S VALMBCK="" D ULP Q
"RTN","PSOCAN4",14,0)
 K DIR,DIRUT,DTOUT,PSOOELSE,DTOUT I +LST S (SPEED,PSOOELSE)=1 D  D KCAN^PSOCAN3
"RTN","PSOCAN4",15,0)
 .S PSOCANRA=1 D RQTEST
"RTN","PSOCAN4",16,0)
 .D FULL^VALM1,COM^PSOCAN1 I '$D(INCOM)!($D(DIRUT)) K SPEED S VALMBCK="R" Q
"RTN","PSOCAN4",17,0)
 .D FULL^VALM1 F ORD=1:1:$L(LST,",") Q:$P(LST,",",ORD)']""  S ORN=$P(LST,",",ORD) D @$S(+PSOLST(ORN)=52:"RX",1:"PEN")
"RTN","PSOCAN4",18,0)
 .S VALMBCK="R"
"RTN","PSOCAN4",19,0)
 I '$G(PSOOELSE) S VALMBCK=""
"RTN","PSOCAN4",20,0)
 D ^PSOBUILD,BLD^PSOORUT1,RV^PSOORFL K PSOMSG,RXCNT,DIR,DIRUT,DTOUT,DUOUT,LST,ORD,IEN,ORN,RPH,ST,REFL,REF,PSOACT,ORSV,PSORNW,PSORENW,PSONO,PSOCO,PSOCU,PSODIR,DSMSG,SAVORD,SAVORN,SPEED,DIRUT,PSONOOR
"RTN","PSOCAN4",21,0)
 D INVALD^PSOCAN1 K PSINV,PSOOELSE,INCOM,COM S PSODFN=DFNHLD K DFNHLD D ULP
"RTN","PSOCAN4",22,0)
 Q
"RTN","PSOCAN4",23,0)
ULP D UL^PSSLOCK(+$G(PSODFN)) Q
"RTN","PSOCAN4",24,0)
 ;
"RTN","PSOCAN4",25,0)
RX Q:'$D(^XUSEC("PSORPH",DUZ))
"RTN","PSOCAN4",26,0)
 D PSOL^PSSLOCK($P(PSOLST(ORN),"^",2)) I '$G(PSOMSG) D  D PAUSE^VALM1 K PSOMSG Q
"RTN","PSOCAN4",27,0)
 .I $P($G(PSOMSG),"^",2)'="" W $C(7),!!,$P($G(PSOMSG),"^",2),!,"Rx "_$P(^PSRX($P(PSOLST(ORN),"^",2),0),"^"),! Q
"RTN","PSOCAN4",28,0)
 .W $C(7),!!,"Another person is editing Rx "_$P(^PSRX($P(PSOLST(ORN),"^",2),0),"^"),!
"RTN","PSOCAN4",29,0)
 S RXSP=1 K PSCAN S (EN,X)=$P(^PSRX($P(PSOLST(ORN),"^",2),0),"^") S Y=$P(PSOLST(ORN),"^",2)_"^"_X,Y(0,0)=X,Y(0)=$G(^PSRX($P(PSOLST(ORN),"^",2),0)) D
"RTN","PSOCAN4",30,0)
 .I $P(^PSRX(+Y,"STA"),"^")=1!($P(^("STA"),"^")=4) D  Q
"RTN","PSOCAN4",31,0)
 ..I $P($G(^PSRX(+Y,"PKI")),"^") N PKI,PKI1,PKIR,PKIE,DA S DA=+Y D CER^PSOPKIV1
"RTN","PSOCAN4",32,0)
 ..S:$G(PSONOOR)'="" PSONOORA=$G(PSONOOR) D DEL S:$G(PSONOORA)'="" PSONOOR=$G(PSONOORA) K PSONOORA Q
"RTN","PSOCAN4",33,0)
 .S YY=Y,YY(0,0)=Y(0,0),(PSODFN,DFN)=$P(Y(0),"^",2) D:$G(DFN) CHK^PSOCAN I DEAD!($P(^PSRX(+YY,"STA"),"^")>11),$P(^("STA"),"^")<16 S PSINV(EN)="" Q
"RTN","PSOCAN4",34,0)
 .S DA=+YY I $P($G(^PSRX(DA,"STA")),"^")=11!($P($G(^(2)),"^",6)<DT) D EXP^PSOCAN
"RTN","PSOCAN4",35,0)
 .S RX=YY(0,0) D:$D(^PSRX(DA,0)) SPEED1^PSOCAN1
"RTN","PSOCAN4",36,0)
 K YY I '$D(PSCAN) D PSOUL^PSSLOCK($P(PSOLST(ORN),"^",2)) Q
"RTN","PSOCAN4",37,0)
 S RX="",RXCNT=0 F  S RX=$O(PSCAN(RX)) Q:RX=""  S DA=+PSCAN(RX),REA=$P(PSCAN(RX),"^",2),RXCNT=RXCNT+1 D SHOW^PSOCAN1
"RTN","PSOCAN4",38,0)
 S RX="" F  S RX=$O(PSCAN(RX)) Q:RX=""  D ACT
"RTN","PSOCAN4",39,0)
 D PSOUL^PSSLOCK($P(PSOLST(ORN),"^",2))
"RTN","PSOCAN4",40,0)
 Q
"RTN","PSOCAN4",41,0)
ACT S DA=+PSCAN(RX),REA=$P(PSCAN(RX),"^",2),II=RX,PSODFN=$P(^PSRX(DA,0),"^",2) I REA="R" D REINS^PSOCAN2 Q
"RTN","PSOCAN4",42,0)
 D CAN1^PSOCAN3 Q
"RTN","PSOCAN4",43,0)
PEN ;discontinue pending orders
"RTN","PSOCAN4",44,0)
 S SAVORD=ORD,SAVORN=ORN
"RTN","PSOCAN4",45,0)
 S ORD=$P(PSOLST(ORN),"^",2) D PSOL^PSSLOCK(+ORD_"S") I '$G(PSOMSG) D  D MEDDIS K PSOMSG G OK
"RTN","PSOCAN4",46,0)
 .I $P($G(PSOMSG),"^",2)'="" W $C(7),!!,$P($G(PSOMSG),"^",2)_"  (Pending order)",! Q
"RTN","PSOCAN4",47,0)
 .W $C(7),!!,"Another person is editing this Pending order.",!
"RTN","PSOCAN4",48,0)
 I $P(^PS(52.41,ORD,0),"^",3)="RF" S DA=ORD,DIK="^PS(52.41," D ^DIK K DA,DIK D PSOUL^PSSLOCK(ORD_"S") Q
"RTN","PSOCAN4",49,0)
 K ^PS(52.41,"AOR",$P(^PS(52.41,ORD,0),"^",2),+$P($G(^PS(52.41,ORD,"INI")),"^"),ORD) S $P(^PS(52.41,ORD,0),"^",3)="DC"
"RTN","PSOCAN4",50,0)
 D EN^PSOHLSN(+^PS(52.41,ORD,0),"OC",INCOM,PSONOOR)
"RTN","PSOCAN4",51,0)
 D PSOUL^PSSLOCK(ORD_"S")
"RTN","PSOCAN4",52,0)
OK S ORD=SAVORD,ORN=SAVORN Q
"RTN","PSOCAN4",53,0)
NOOR ;ask nature of order
"RTN","PSOCAN4",54,0)
 D FULL^VALM1
"RTN","PSOCAN4",55,0)
 K DIR,DTOUT,DTOUT,DIRUT I $T(NA^ORX1)]"" D  Q:$D(DIRUT)  G NOORXP
"RTN","PSOCAN4",56,0)
 .S PSONOOR=$$NA^ORX1($S($G(PSOTRIC):"R",1:"S"),0,"B","Nature of Order",0,"WPSDIVR"_$S(+$G(^VA(200,DUZ,"PS")):"E",1:""))
"RTN","PSOCAN4",57,0)
 .I +PSONOOR S PSONOOR=$P(PSONOOR,"^",3) Q
"RTN","PSOCAN4",58,0)
 .S DIRUT=1 K PSONOOR
"RTN","PSOCAN4",59,0)
 ;cnf, PSO*7*358, default to "SERVICE REJECTED" if TRICARE
"RTN","PSOCAN4",60,0)
 S DIR("A")="Nature of Order: ",DIR("B")=$S($G(PSOTRIC):"SERVICE REJECTED",$G(DODR):"SERVICE CORRECTED",1:"WRITTEN")
"RTN","PSOCAN4",61,0)
 S DIR(0)="SA^W:WRITTEN;V:VERBAL;P:TELEPHONE;S:SERVICE CORRECTED;D:DUPLICATE;I:POLICY;R:SERVICE REJECTED"_$S(+$G(^VA(200,DUZ,"PS")):";E:PROVIDER ENTERED",1:"")
"RTN","PSOCAN4",62,0)
 D ^DIR K DIR,DTOUT,DTOUT Q:$D(DIRUT)  S PSONOOR=Y
"RTN","PSOCAN4",63,0)
NOORXP I $G(PSOCANRA),'$G(PSOCANRZ) D REQ
"RTN","PSOCAN4",64,0)
NOORX S:$D(DIRUT)&($G(SPEED)) VALMBCK="Q"
"RTN","PSOCAN4",65,0)
 Q
"RTN","PSOCAN4",66,0)
DEL ;deletes non-verified Rxs
"RTN","PSOCAN4",67,0)
 D FULL^VALM1
"RTN","PSOCAN4",68,0)
 W ! K DIR,DIRUT,DUOUT S DIR(0)="Y",DIR("B")="No",DIR("A",1)="Rx # "_$P(^PSRX($P(PSOLST(ORN),"^",2),0),"^")_" is in a Non-Verified Status.",DIR("A")="Are sure you want to mark the Rx as deleted" D ^DIR I 'Y!($D(DIRUT)) S VALMBCK="R" G EX
"RTN","PSOCAN4",69,0)
 I '$G(SPEED) D  I $D(DIRUT) G EX
"RTN","PSOCAN4",70,0)
 .D NOOR^PSOCAN4 I $D(DIRUT) S VALMSG="No Action Taken!",VALMBCK="R" Q
"RTN","PSOCAN4",71,0)
 .K DIR S DIR("A")="Comments",DIR("B")="Per Pharmacy Request",DIR(0)="F^5:100" D ^DIR K DIR I $D(DIRUT) S VALMSG="No Action Taken!" Q
"RTN","PSOCAN4",72,0)
 K PSDEL,PSORX("INTERVENE") S PSOZVER=1,DA=$P(PSOLST(ORN),"^",2)
"RTN","PSOCAN4",73,0)
 I $G(PKI1) N INCOM S INCOM=Y D DCV^PSOPKIV1 Q
"RTN","PSOCAN4",74,0)
 D ENQ^PSORXDL
"RTN","PSOCAN4",75,0)
EX Q
"RTN","PSOCAN4",76,0)
REQ ;prompt for requesting provider
"RTN","PSOCAN4",77,0)
 I '$G(PSOCANRD),$G(PSOCANRP),$G(ORD),$D(^PS(52.41,ORD,0)) S PSOCANRD=+$P($G(^PS(52.41,ORD,0)),"^",5)
"RTN","PSOCAN4",78,0)
 I $G(PSOCANRD) D
"RTN","PSOCAN4",79,0)
 .I $D(^VA(200,PSOCANRD,"PS")),$P($G(^("PS")),"^"),$S('$P(^("PS"),"^",4):1,1:$P(^("PS"),"^",4)'<DT) Q
"RTN","PSOCAN4",80,0)
 .K PSOCANRD
"RTN","PSOCAN4",81,0)
 W ! K DIC S DIC=200,DIC(0)="AEQMZ",DIC("A")="Requesting PROVIDER: ",DIC("S")="I $D(^(""PS"")),$P(^(""PS""),""^""),$S('$P(^(""PS""),""^"",4):1,1:$P(^(""PS""),""^"",4)'<DT)" I $G(PSOCANRD) S DIC("B")=PSOCANRD
"RTN","PSOCAN4",82,0)
 D ^DIC K DIC S:$G(Y)<0!($D(DTOUT))!($D(DUOUT)) DIRUT=1 I $G(Y) S PSOCANRC=+$G(Y),PSOCANRN=$P($G(Y),"^",2),PSOCANRZ=1
"RTN","PSOCAN4",83,0)
 Q
"RTN","PSOCAN4",84,0)
RQTEST ;
"RTN","PSOCAN4",85,0)
 N PMIN,PMINZ,PMINFLAG
"RTN","PSOCAN4",86,0)
 S PMINFLAG=0 F PMIN=1:1:$L(LST,",") Q:$P(LST,",",PMIN)']""  S PMINZ=$P(LST,",",PMIN) D
"RTN","PSOCAN4",87,0)
 .I $P($G(PSOLST(PMINZ)),"^")=52 I $P($G(^PSRX(+$P($G(PSOLST(PMINZ)),"^",2),"STA")),"^")'=12,'$G(PMINFLAG) S PSOCANRD=+$P($G(^PSRX(+$P($G(PSOLST(PMINZ)),"^",2),0)),"^",4) S PMINFLAG=1
"RTN","PSOCAN4",88,0)
 .I $P($G(PSOLST(PMINZ)),"^")=52.41,'$G(PMINFLAG) S PSOCANRD=$P($G(^PS(52.41,+$P($G(PSOLST(PMINZ)),"^",2),0)),"^",5) S PMINFLAG=1
"RTN","PSOCAN4",89,0)
 I '$G(PMINFLAG) S PSOCANRZ=1
"RTN","PSOCAN4",90,0)
 Q
"RTN","PSOCAN4",91,0)
MEDDIS ;
"RTN","PSOCAN4",92,0)
 N PSOFMMD
"RTN","PSOCAN4",93,0)
 Q:'$G(ORD)
"RTN","PSOCAN4",94,0)
 Q:'$D(^PS(52.41,ORD,0))
"RTN","PSOCAN4",95,0)
 I $P(^PS(52.41,ORD,0),"^",9) W "Drug: "_$P($G(^PSDRUG(+$P(^PS(52.41,ORD,0),"^",9),0)),"^") D PAUSE^VALM1 Q
"RTN","PSOCAN4",96,0)
 I $P(^PS(52.41,ORD,0),"^",8) S PSOFMMD=$P(^(0),"^",8) W "Orderable Item: "_$P($G(^PS(50.7,PSOFMMD,0)),"^")_"  "_$P($G(^PS(50.606,+$P($G(^PS(50.7,PSOFMMD,0)),"^",2),0)),"^") D PAUSE^VALM1
"RTN","PSOCAN4",97,0)
 Q
"RTN","PSOCAN4",98,0)
 ;
"RTN","PSOCAN4",99,0)
REF ;CONT. FROM REF^PSOCAN2; PSO*7*259
"RTN","PSOCAN4",100,0)
 N PSOSIEN S PSOSIEN=0
"RTN","PSOCAN4",101,0)
 F  S PSOSIEN=$O(^PS(52.5,"B",DA,PSOSIEN)) Q:'PSOSIEN  D  Q:PSONODEL
"RTN","PSOCAN4",102,0)
 .I $P($G(^PS(52.5,PSOSIEN,0)),"^",13)'=IFN Q  ;NOT SAME REFILL
"RTN","PSOCAN4",103,0)
 .I '$P($G(^PS(52.5,PSOSIEN,"P")),"^") Q  ;SUSPENSE LABEL PRINT
"RTN","PSOCAN4",104,0)
 .S PSONODEL=1   ;REFILL NODE SHOULD NOT BE DELETED
"RTN","PSOCAN4",105,0)
 Q
"RTN","PSOHLD")
0^17^B50785311
"RTN","PSOHLD",1,0)
PSOHLD ;BIR/SAB - hold unhold functionality ; 7/23/09 1:16pm
"RTN","PSOHLD",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**1,16,21,24,27,32,55,82,114,130,166,148,268,281,298,358**;DEC 1997;Build 35
"RTN","PSOHLD",3,0)
 ;External reference to ^DD(52-DBIA 999,  VA(200-DBIA 224, NA^ORX1-DBIA 2186,
"RTN","PSOHLD",4,0)
 ; L, UL, PSOL, and PSOUL^PSSLOCK-DBIA 2789, ^%DTC-DBIA 10000, ^DIE-DBIA 10018, ^DIR-DBIA 10026,
"RTN","PSOHLD",5,0)
 ; ^DIK-DBIA 10013, ^VALM1-DBIA 10016, ^XUSEC(-DBIA 10076
"RTN","PSOHLD",6,0)
UHLD I '$D(PSOPAR) D ^PSOLSET G:'$D(PSOPAR) EX
"RTN","PSOHLD",7,0)
 I $G(PSOBEDT) W $C(7),$C(7) S VALMSG="Invalid Action at this time !",VALMBCK="" Q
"RTN","PSOHLD",8,0)
 I $G(PSONACT) W $C(7),$C(7) S VALMSG="No Pharmacy Orderable Item !",VALMBCK="" Q
"RTN","PSOHLD",9,0)
 S PSOPLCK=$$L^PSSLOCK(PSODFN,0) I '$G(PSOPLCK) D LOCK^PSOORCPY S VALMSG=$S($P($G(PSOPLCK),"^",2)'="":$P($G(PSOPLCK),"^",2)_" is working on this patient.",1:"Another person is entering orders for this patient.") K PSOPLCK S VALMBCK="" Q
"RTN","PSOHLD",10,0)
 ;W !! S DIC("A")="Unhold Prescription #: ",(DIE,DIC)="^PSRX(",DIC(0)="AEMQZ",DIC("S")="I $G(^PSRX(+Y,""H""))]"""",$P(^(""STA""),""^"")'=16" D ^DIC G:"^"[$E(X) EX G:Y<0 UHLD S (DA,PPL)=+Y,DFN=$P(Y(0),"^",2)
"RTN","PSOHLD",11,0)
 K PSOPLCK D PSOL^PSSLOCK(DA) I '$G(PSOMSG) S VALMSG=$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing this order."),VALMBCK="" K PSOMSG D ULP Q
"RTN","PSOHLD",12,0)
 S Y(0)=^PSRX(DA,0),STA=+$G(^("STA"))
"RTN","PSOHLD",13,0)
 I STA=16 S VALMSG="Placed on HOLD by Provider!" K Y,STA D PSOUL^PSSLOCK(DA) D ULP S VALMBCK="" Q
"RTN","PSOHLD",14,0)
 I STA'=3!('$D(^XUSEC("PSORPH",DUZ))) S VALMSG="Invalid Action Selection!",VALMBCK="" K Y,STA D PSOUL^PSSLOCK(DA) D ULP Q
"RTN","PSOHLD",15,0)
 D FULL^VALM1 K DIR,DTOUT,DUOUT,DIRUT D NOOR I $D(DIRUT) D ULP G EX
"RTN","PSOHLD",16,0)
 I DT>$P(^PSRX(DA,2),"^",6) D  D ULP G EX
"RTN","PSOHLD",17,0)
 .S VALMSG="Medication Expired on "_$E($P(^PSRX(DA,2),"^",6),4,5)_"-"_$E($P(^(2),"^",6),6,7)_"-"_$E($P(^(2),"^",6),2,3) I $P(^PSRX(DA,"STA"),"^")<11 S $P(^PSRX(DA,"STA"),"^")=11
"RTN","PSOHLD",18,0)
 .S ^PSRX(DA,"H")="",COMM="Medication Expired on "_$E($P(^(2),"^",6),4,5)_"-"_$E($P(^(2),"^",6),6,7)_"-"_$E($P(^(2),"^",6),2,3) D EN^PSOHLSN1(DA,"SC","ZE",COMM,"") K COMM
"RTN","PSOHLD",19,0)
EN S RXF=0 F I=0:0 S I=$O(^PSRX(DA,1,I)) Q:'I  S RXF=I,RSDT=$P(^(0),"^")
"RTN","PSOHLD",20,0)
 I RXF D  I $D(Y) D ULP G EX
"RTN","PSOHLD",21,0)
 .S (PSDA,DA(1))=DA,DA=RXF,DIE="^PSRX("_DA(1)_",1,"
"RTN","PSOHLD",22,0)
 .S RLDT=$P(^PSRX(DA(1),1,DA,0),"^",18)
"RTN","PSOHLD",23,0)
 .S DR=$S('RLDT:".01R;2;",1:"")_"3COMMENTS"
"RTN","PSOHLD",24,0)
 .S PSOUNHLD=1 D ^DIE K PSOUNHLD
"RTN","PSOHLD",25,0)
 .S ZD(PSDA)=$P(^PSRX(DA(1),1,DA,0),"^")
"RTN","PSOHLD",26,0)
 .Q:$D(Y)  S PSORX("FILL DATE")=$P(^PSRX(DA(1),1,DA,0),"^"),DA=PSDA K DA(1)
"RTN","PSOHLD",27,0)
 ;
"RTN","PSOHLD",28,0)
 ;PSO*7*298 Require an entry into fill date
"RTN","PSOHLD",29,0)
 S ACT=1,DIE="^PSRX(",FDT=$S($P(^PSRX(DA,2),"^",2):$P(^PSRX(DA,2),"^",2),1:DT)
"RTN","PSOHLD",30,0)
 S RLDT=$P(^PSRX(DA,2),"^",13),DR="",RLDTP1=$P(RLDT,".",1)
"RTN","PSOHLD",31,0)
 I 'RXF&'RLDT S DR="22R//^S X=FDT;11;Q;"
"RTN","PSOHLD",32,0)
 I RLDT&($P(^PSRX(DA,2),"^",2)="") S DR="22R//^S X=RLDTP1;11;Q;"
"RTN","PSOHLD",33,0)
 S DR=DR_"100///0;101///^S X=$S(RXF:$G(ZD(PSDA)),1:$P(^PSRX(PSDA,2),""^"",2))"
"RTN","PSOHLD",34,0)
 ;
"RTN","PSOHLD",35,0)
 D ^DIE K FDT I $D(Y) S VALMBCK="R" D ULP G EX
"RTN","PSOHLD",36,0)
 S COMM="Medication Removed from Hold by Pharmacy" D EN^PSOHLSN1(DA,"OE","",COMM,PSONOOR) K COMM,PSONOOR
"RTN","PSOHLD",37,0)
 S PSORX("FILL DATE")=$S('RXF:$P(^PSRX(DA,2),"^",2),1:ZD(PSDA)) K ^PSRX("AH",$P(^PSRX(DA,"H"),"^"),DA) S ^PSRX(DA,"H")="" D ACT^PSOHLDA S (NEW1,NEW11)="^^"
"RTN","PSOHLD",38,0)
 S (RXF,RXFL(DA))=0 F JJ=0:0 S JJ=$O(^PSRX(DA,1,JJ)) Q:'JJ  S (RXFL(DA),RXF)=JJ
"RTN","PSOHLD",39,0)
 I $G(PSXSYS) D UNHOLD^PSOCMOPA I $G(XFLAG) D ULP G EX
"RTN","PSOHLD",40,0)
 I $G(DA) D RELC I $G(PSOHRL) D ULP G EX
"RTN","PSOHLD",41,0)
 I PSORX("FILL DATE")>DT,$P(PSOPAR,"^",6) D S^PSORXL,EX,ULP Q
"RTN","PSOHLD",42,0)
 S PCOMH(DA)="Medication Removed from Hold by Pharmacy"
"RTN","PSOHLD",43,0)
 I $G(DA) S RXRH(DA)=DA
"RTN","PSOHLD",44,0)
 I $P($G(^PSRX(DA,2)),"^",15)'="" S $P(^PSRX(DA,2),"^",14)=1,RXRP(DA)=1,$P(RXRP(DA),"^",2)=$P($G(^PSRX(DA,0)),"^",18) ; MARK PRESCRIPTION AND LABEL AS BEING REPRINTED WHEN UNHOLDING A RETURNED TO SOTCK PRESCRIPTION
"RTN","PSOHLD",45,0)
 ;
"RTN","PSOHLD",46,0)
 ; - Submitting Rx to ECME
"RTN","PSOHLD",47,0)
 N ACTION
"RTN","PSOHLD",48,0)
 I $$SUBMIT^PSOBPSUT(DA,+$G(RXFL(DA))) D  I ACTION="Q"!(ACTION="^") D ULP G EX
"RTN","PSOHLD",49,0)
 . N RX,RFL S RX=DA,RFL=+$G(RXFL(DA))
"RTN","PSOHLD",50,0)
 . N DA S ACTION=""
"RTN","PSOHLD",51,0)
 . D ECMESND^PSOBPSU1(RX,RFL,,$S(RFL:"RF",1:"OF"))
"RTN","PSOHLD",52,0)
 . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOHLD",53,0)
 . I $$PSOET^PSOREJP3(RX,RFL) S ACTION="Q" Q
"RTN","PSOHLD",54,0)
 . I $$FIND^PSOREJUT(RX,RFL) D
"RTN","PSOHLD",55,0)
 . . S ACTION=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","IOQ","Q")
"RTN","PSOHLD",56,0)
 ;
"RTN","PSOHLD",57,0)
 I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=DA_"," D ULP G EX
"RTN","PSOHLD",58,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOHLD",59,0)
 I $L(PSORX("PSOL",PSOX2))+$L(DA)<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_DA_","
"RTN","PSOHLD",60,0)
 E  S PSORX("PSOL",PSOX2+1)=DA_","
"RTN","PSOHLD",61,0)
 ; 
"RTN","PSOHLD",62,0)
 D ULP
"RTN","PSOHLD",63,0)
EX D PSOUL^PSSLOCK($P(PSOLST(ORN),"^",2)) D ^PSOBUILD
"RTN","PSOHLD",64,0)
 K PSOHRL,PSOMSG,PSOPLCK,ST,PSL,PSNP,IR,NOW,DR,NEW1,NEW11,RTN,DA,PPL,RXN,RX0,RXS,DIK,RXP,FLD,ACT,DIE,DIC,DIR,DIE,X,Y,DIRUT,DUOUT,SUSPT,C,D0,LFD,I,PSDA,RFDATE,DI,DQ,%,RFN,XFLAG
"RTN","PSOHLD",65,0)
 K HRX,PSHLD,PSOLIST,PSORX("FILL DATE"),STA,QTY,RFDT,PSORX0,PSRXN,RXF,JJ Q
"RTN","PSOHLD",66,0)
 ;
"RTN","PSOHLD",67,0)
HLD ;
"RTN","PSOHLD",68,0)
 I $G(PSOBEDT) W $C(7),$C(7) S VALMSG="Invalid Action at this time !",VALMBCK="" Q
"RTN","PSOHLD",69,0)
 I $G(PSONACT) W $C(7),$C(7) S VALMSG="No Pharmacy Orderable Item !",VALMBCK="" Q
"RTN","PSOHLD",70,0)
 I '$D(^XUSEC("PSORPH",DUZ)) S VALMSG="Invalid Action Selection!",VALMBCK="" Q
"RTN","PSOHLD",71,0)
 S PSOPLCK=$$L^PSSLOCK(PSODFN,0) I '$G(PSOPLCK) D LOCK^PSOORCPY S VALMSG=$S($P($G(PSOPLCK),"^",2)'="":$P($G(PSOPLCK),"^",2)_" is working on this patient.",1:"Another person is entering orders for this patient."),VALMBCK="" K PSOPLCK Q
"RTN","PSOHLD",72,0)
 K PSOPLCK D PSOL^PSSLOCK(DA) I '$G(PSOMSG) S VALMSG=$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing this order."),VALMBCK="" K PSOMSG D ULP Q
"RTN","PSOHLD",73,0)
 S Y(0)=^PSRX(DA,0),STA=+$G(^("STA")) I DT>$P(^PSRX(DA,2),"^",6) D  D ULP G D1
"RTN","PSOHLD",74,0)
 .S VALMSG="Medication Expired on "_$E($P(^PSRX(DA,2),"^",6),4,5)_"-"_$E($P(^(2),"^",6),6,7)_"-"_$E($P(^(2),"^",6),2,3),VALMBCK="R"
"RTN","PSOHLD",75,0)
 .I $P(^PSRX(DA,"STA"),"^")<11 S $P(^PSRX(DA,"STA"),"^")=11 D
"RTN","PSOHLD",76,0)
 ..S COMM="Medication Expired on "_$E($P(^PSRX(DA,2),"^",6),4,5)_"-"_$E($P(^(2),"^",6),6,7)_"-"_$E($P(^(2),"^",6),2,3) D EN^PSOHLSN1(DA,"SC","ZE",COMM) K COMM
"RTN","PSOHLD",77,0)
 S ST=$P("ERROR^ACTIVE^NON-VERIFIED^REFILL^HOLD^NON-VERIFIED^SUSPENDED^^^^^DONE^EXPIRED^DISCONTINUED^DELETED^DISCONTINUED^DISCONTINUED (EDIT)^PROVIDER HOLD^","^",STA+2)
"RTN","PSOHLD",78,0)
 I STA,STA'>4!(STA>11) D  D ULP G D1
"RTN","PSOHLD",79,0)
 .S VALMSG="Rx: "_$P(Y(0),"^")_" is currently in a status of "_ST,VALMBCK="R" K ST,Y Q
"RTN","PSOHLD",80,0)
 D FULL^VALM1 D NOOR I $D(DIRUT) D ULP G D1
"RTN","PSOHLD",81,0)
 D HLD^PSOCMOPA I $G(XFLAG) K XFLAG D ULP G D1
"RTN","PSOHLD",82,0)
 K DIR S DIR("A")=$P(^DD(52,99,0),"^"),DIR(0)="52,99" D ^DIR S FLD(99)=Y I $D(DUOUT)!($D(DIRUT)) K DIRUT,DUOUT,DIR D ULP G D1
"RTN","PSOHLD",83,0)
 I $G(FLD(99))=99 K DIR S DIR("A")=$P(^DD(52,99.1,0),"^"),DIR(0)="52,99.1" D ^DIR S FLD(99.1)=Y G AR
"RTN","PSOHLD",84,0)
 E  K DIR S DIR(0)="FO^10:100",DIR("A")="HOLD COMMENTS" D ^DIR S FLD(99.1)=Y
"RTN","PSOHLD",85,0)
AR I $D(DUOUT)!($D(DTOUT)) K DIRUT,DUOUT,DIR S VALMBCK="R" D ULP G D1
"RTN","PSOHLD",86,0)
 F PI=1:1 Q:$P(PPL,",",PI)=""  S DA=$P(PPL,",",PI) D H S DA=PSDA K PSDA D:$D(PSORX("PSOL")) RMP^PSOHLDA
"RTN","PSOHLD",87,0)
 K PI D ^PSOBUILD
"RTN","PSOHLD",88,0)
 D ULP
"RTN","PSOHLD",89,0)
D1 D PSOUL^PSSLOCK($P(PSOLST(ORN),"^",2)) K PSOMSG,PSOPLCK,RFN,DIR,RSDT,FLD,DA,ACT,X,Y,DIRUT,DUOUT,DTOUT,DIROUT
"RTN","PSOHLD",90,0)
 Q
"RTN","PSOHLD",91,0)
 ;
"RTN","PSOHLD",92,0)
H ; - Rx HOLD update
"RTN","PSOHLD",93,0)
 D HOLD^PSOHLDA
"RTN","PSOHLD",94,0)
 Q
"RTN","PSOHLD",95,0)
 ;
"RTN","PSOHLD",96,0)
FLD N DA K DIR S DIR("A")=$P(^DD(52,99,0),"^"),DIR(0)="52,99" D ^DIR Q:$D(DUOUT)!($D(DIRUT))  S FLD(99)=Y
"RTN","PSOHLD",97,0)
 S COMM=Y(0)
"RTN","PSOHLD",98,0)
 I $G(FLD(99))=99 K DIR S DIR("A")=$P(^DD(52,99.1,0),"^"),DIR(0)="52,99.1" D ^DIR Q:$D(DUOUT)!($D(DIRUT))  S (FLD(99.1),COMM)=Y Q
"RTN","PSOHLD",99,0)
 E  S FLD(99.1)=""
"RTN","PSOHLD",100,0)
 Q
"RTN","PSOHLD",101,0)
NOOR ;ask nature of order
"RTN","PSOHLD",102,0)
 K DIR,DTOUT,DTOUT,DIRUT I $T(NA^ORX1)]""  D  Q
"RTN","PSOHLD",103,0)
 .S PSONOOR=$$NA^ORX1("W",0,"B","Nature of Order",0,"WPSDIVR"_$S(+$G(^VA(200,DUZ,"PS")):"E",1:""))
"RTN","PSOHLD",104,0)
 .I +PSONOOR S PSONOOR=$P(PSONOOR,"^",3) Q
"RTN","PSOHLD",105,0)
 .S DIRUT=1 K PSONOOR
"RTN","PSOHLD",106,0)
 S DIR("A")="Nature of Order: ",DIR("B")="WRITTEN"
"RTN","PSOHLD",107,0)
 S DIR(0)="SA^W:WRITTEN;V:VERBAL;P:TELEPHONE;S:SERVICE CORRECTED;D:DUPLICATE;I:POLICY;R:SERVICE REJECTED"_$S(+$G(^VA(200,DUZ,"PS")):";E:PROVIDER ENTERED",1:"")
"RTN","PSOHLD",108,0)
NOORX D ^DIR K DIR,DTOUT,DTOUT Q:$D(DIRUT)  S PSONOOR=Y
"RTN","PSOHLD",109,0)
 Q
"RTN","PSOHLD",110,0)
ULP ;
"RTN","PSOHLD",111,0)
 D UL^PSSLOCK(+$G(PSODFN))
"RTN","PSOHLD",112,0)
 Q
"RTN","PSOHLD",113,0)
RELC ;
"RTN","PSOHLD",114,0)
 S (PSOHRL,PSOHTX)=0  F PSOHT=0:0 S PSOHT=$O(^PSRX(DA,1,PSOHT)) Q:'PSOHT  S:$D(^PSRX(DA,1,PSOHT,0)) PSOHTX=PSOHT
"RTN","PSOHLD",115,0)
 I $G(PSOHTX) S PSOHRL=$S($P($G(^PSRX(DA,1,PSOHTX,0)),"^",18):1,1:0)
"RTN","PSOHLD",116,0)
 I '$G(PSOHTX) S PSOHRL=$S($P($G(^PSRX(DA,2)),"^",13):1,1:0)
"RTN","PSOHLD",117,0)
 K PSOHTX,PSOHT
"RTN","PSOHLD",118,0)
 Q
"RTN","PSON52")
0^7^B64423774
"RTN","PSON52",1,0)
PSON52 ;BIR/DSD - files new entries in prescription file ;08/09/93
"RTN","PSON52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**1,16,23,27,32,46,71,111,124,117,131,139,157,143,219,148,239,201,268,260,225,303,358**;DEC 1997;Build 35
"RTN","PSON52",3,0)
 ;External reference ^PS(55 supported by DBIA 2228
"RTN","PSON52",4,0)
 ;External reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSON52",5,0)
 ;External reference to ^XUSEC supported by DBIA 10076
"RTN","PSON52",6,0)
 ;External reference SWSTAT^IBBAPI supported by DBIA 4663
"RTN","PSON52",7,0)
 ;External reference SAVNDC^PSSNDCUT supported by DBIA 4707
"RTN","PSON52",8,0)
EN(PSOX) ;Entry Point
"RTN","PSON52",9,0)
START ;
"RTN","PSON52",10,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT Monitor
"RTN","PSON52",11,0)
 D INIT G:PSON52("QFLG") END D NFILE Q:$G(PSONEW("DFLG"))  D PS55,DIK
"RTN","PSON52",12,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Monitor
"RTN","PSON52",13,0)
 D FINISH
"RTN","PSON52",14,0)
 I $P(^PSRX(PSOX("IRXN"),0),"^",11)="W",$G(^("IB")) S ^PSRX("ACP",$P(^PSRX(PSOX("IRXN"),0),"^",2),$P(^(2),"^",2),0,PSOX("IRXN"))=""
"RTN","PSON52",15,0)
END D EOJ
"RTN","PSON52",16,0)
 Q
"RTN","PSON52",17,0)
INIT ;
"RTN","PSON52",18,0)
 K X,%DT S:$G(PSOID) PSOX("ISSUE DATE")=PSOID
"RTN","PSON52",19,0)
 S PSOX("CS")=0
"RTN","PSON52",20,0)
 F DEA=1:1 Q:$E(PSODRUG("DEA"),DEA)=""  I $E(+PSODRUG("DEA"),DEA)>1,$E(+PSODRUG("DEA"),DEA)<6 S $P(PSOX("CS"),"^")=1 S:$E(+PSODRUG("DEA"),DEA)=2 $P(PSOX("CS"),"^",2)=1
"RTN","PSON52",21,0)
 S PSON52("QFLG")=0,X1=PSOX("ISSUE DATE"),X2=PSOX("DAYS SUPPLY")*(PSOX("# OF REFILLS")+1)\1
"RTN","PSON52",22,0)
 I $D(CLOZPAT) S X2=$S(X2=14:14,X2=7:7,1:X2) G DT
"RTN","PSON52",23,0)
 S X2=$S(PSOX("DAYS SUPPLY")=X2:X2,+$G(PSOX("CS")):184,+$G(DEA("CS")):184,1:366)
"RTN","PSON52",24,0)
 I X2<30 D
"RTN","PSON52",25,0)
 . N % S %=$P($G(PSORX("PATIENT STATUS")),"^"),X2=30
"RTN","PSON52",26,0)
 . S:%?.N %=$P($G(^PS(53,+%,0)),"^") I %["AUTH ABS" S X2=5
"RTN","PSON52",27,0)
DT D C^%DTC S PSOX("STOP DATE")=$P(X,".") K X
"RTN","PSON52",28,0)
 I PSOX("# OF REFILLS")>0 S X1=PSOX("FILL DATE"),X2=$S((PSOX("DAYS SUPPLY")-10\1)<1:1,1:PSOX("DAYS SUPPLY")-10\1) D C^%DTC S PSOX("NEXT POSSIBLE REFILL")=$P(X,".") K X
"RTN","PSON52",29,0)
 S PSOX("TYPE OF RX")=0,PSOX("DISPENSED DATE")=PSOX("FILL DATE") D NOW^%DTC S PSOX("LOGIN DATE")=$S($P($G(OR0),"^",12):$P($G(OR0),"^",12),1:%) K %,X
"RTN","PSON52",30,0)
 S PSOX("STATUS")=$S($G(PSOX("STATUS"))]"":PSOX("STATUS"),$D(PSORX("VERIFY")):1,1:0)
"RTN","PSON52",31,0)
 S PSOX("COPIES")=$S($G(PSOX("COPIES"))]"":PSOX("COPIES"),1:1)
"RTN","PSON52",32,0)
 I $G(PSORX("PHARM"))]"" S PSOX("PHARMACIST")=PSORX("PHARM") K PSORX("PHARM")
"RTN","PSON52",33,0)
INITX Q
"RTN","PSON52",34,0)
 ;
"RTN","PSON52",35,0)
NFILE I $G(OR0) D  Q:$G(PSONEW("DFLG"))
"RTN","PSON52",36,0)
 .D NOOR^PSONEW Q:$G(PSONEW("DFLG"))
"RTN","PSON52",37,0)
 .I $G(PSOSIGFL)!($G(PSODRUG("OI"))'=$P(OR0,"^",8)) S PSONEW("CLERK CODE")=DUZ,PSONEW("REMARKS")=$G(PSONEW("REMARKS"))_" CPRS Order #"_$P(OR0,"^")_" Edited."
"RTN","PSON52",38,0)
 S DIC="^PSRX(",DLAYGO=52,DIC(0)="L",X=PSOX("RX #") K DD,DO D FILE^DICN S PSOX("IRXN")=+Y K DLAYGO,X,Y,DIC,DD,DO D:+$G(DGI) TECH^PSODGDGI
"RTN","PSON52",39,0)
 F PSOX1=0:1 S PSON52=$P($T(DD+PSOX1),";;",2,4) Q:PSON52=""  K PSOY S PSOY=$P(PSON52,";;") I $G(@PSOY)]"" S $P(PSON52(PSOX("IRXN"),$P(PSON52,";;",2)),"^",$P(PSON52,";;",3))=@PSOY
"RTN","PSON52",40,0)
 F I=1:1:PSOX("ENT") S ^PSRX(PSOX("IRXN"),6,I,0)=PSOX("DOSE",I)_"^"_$G(PSOX("DOSE ORDERED",I))_"^"_$G(PSOX("UNITS",I))_"^"_$G(PSOX("NOUN",I))_"^" D
"RTN","PSON52",41,0)
 .S ^PSRX(PSOX("IRXN"),6,I,0)=^PSRX(PSOX("IRXN"),6,I,0)_$G(PSOX("DURATION",I))_"^"_$G(PSOX("CONJUNCTION",I))_"^"_$G(PSOX("ROUTE",I))_"^"_$G(PSOX("SCHEDULE",I))_"^"_$G(PSOX("VERB",I))
"RTN","PSON52",42,0)
 .I $G(PSOX("ODOSE",I))]"" S ^PSRX(PSOX("IRXN"),6,I,1)=PSOX("ODOSE",I)
"RTN","PSON52",43,0)
 S ^PSRX(PSOX("IRXN"),6,0)="^52.0113^"_PSOX("ENT")_"^"_PSOX("ENT")
"RTN","PSON52",44,0)
 K PSOX1,PSOY
"RTN","PSON52",45,0)
 S PSOX1="" F  S PSOX1=$O(PSON52(PSOX("IRXN"),PSOX1)) Q:PSOX1=""  S ^PSRX(PSOX("IRXN"),PSOX1)=$G(PSON52(PSOX("IRXN"),PSOX1))
"RTN","PSON52",46,0)
 I $O(PSOX("SIG",0)) D
"RTN","PSON52",47,0)
 .S D=0 F  S D=$O(PSOX("SIG",D)) Q:'D  S ^PSRX(PSOX("IRXN"),"INS1",D,0)=PSOX("SIG",D),TP=$G(TP)+1
"RTN","PSON52",48,0)
 .S ^PSRX(PSOX("IRXN"),"INS1",0)="^52.0115^"_TP_"^"_TP_"^"_DT_"^^" K TP,D
"RTN","PSON52",49,0)
 I $G(PSOX("SINS"))]"" S ^PSRX(PSOX("IRXN"),"INSS")=PSOX("SINS")
"RTN","PSON52",50,0)
 I $G(SIGOK) D
"RTN","PSON52",51,0)
 .S $P(^PSRX(PSOX("IRXN"),"SIG"),"^",2)=1,^PSRX(PSOX("IRXN"),"SIG1",0)="^52.04A^^"
"RTN","PSON52",52,0)
 .S D=0 F  S D=$O(SIG(D)) Q:'D  S ^PSRX(PSOX("IRXN"),"SIG1",D,0)=SIG(D),$P(^PSRX(PSOX("IRXN"),"SIG1",0),"^",3)=+$P(^PSRX(PSOX("IRXN"),"SIG1",0),"^",3)+1,$P(^(0),"^",4)=+$P(^(0),"^",4)+1 Q:'$O(SIG(D))
"RTN","PSON52",53,0)
 .K SIG
"RTN","PSON52",54,0)
 I $D(PSOINSFL) S ^PSRX(PSOX("IRXN"),"A",0)="^52.3DA^1^1",^PSRX(PSOX("IRXN"),"A",1,0)=DT_"^G^^0^Patient Instructions "_$S(PSOINSFL=1:"",1:"Not ")_"Sent By Provider."
"RTN","PSON52",55,0)
 I $G(OR0) S:$P(OR0,"^",24) ^PSRX(PSOX("IRXN"),"PKI")=1
"RTN","PSON52",56,0)
 K PSOX1,PSOFINFL,HLDSIG,D,PSOINSFL,D
"RTN","PSON52",57,0)
 D:$G(^TMP("PSODAI",$J,0))
"RTN","PSON52",58,0)
 .S $P(^PSRX(PSOX("IRXN"),3),"^",6)=1
"RTN","PSON52",59,0)
 .I $O(^TMP("PSODAI",$J,0)) S DAI=0 F  S DAI=$O(^TMP("PSODAI",$J,DAI)) Q:'DAI  D
"RTN","PSON52",60,0)
 ..S:'$D(^PSRX(PSOX("IRXN"),"DAI",0)) ^PSRX(PSOX("IRXN"),"DAI",0)="^52.03^^" S ^PSRX(PSOX("IRXN"),"DAI",DAI,0)=^TMP("PSODAI",$J,DAI,0)
"RTN","PSON52",61,0)
 ..S $P(^PSRX(PSOX("IRXN"),"DAI",0),"^",3)=+$P(^PSRX(PSOX("IRXN"),"DAI",0),"^",3)+1,$P(^(0),"^",4)=+$P(^(0),"^",4)+1
"RTN","PSON52",62,0)
 .K ^TMP("PSODAI",$J),DAI
"RTN","PSON52",63,0)
 I $G(PSOX("CHCS NUMBER"))'="" S $P(^PSRX(PSOX("IRXN"),"EXT"),"^")=$G(PSOX("CHCS NUMBER"))
"RTN","PSON52",64,0)
 I $G(PSOX("EXTERNAL SYSTEM"))'="" S $P(^PSRX(PSOX("IRXN"),"EXT"),"^",2)=$G(PSOX("EXTERNAL SYSTEM"))
"RTN","PSON52",65,0)
 I $G(PSOX("NEWCOPAY")) S ^PSRX(PSOX("IRXN"),"IB")=$G(PSOX("NEWCOPAY"))
"RTN","PSON52",66,0)
 ;Next line, set SC question based on Copay status?
"RTN","PSON52",67,0)
IBQ ;I $G(PSOBILL)=2 S ^PSRX(PSOX("IRXN"),"IBQ")=$S($G(PSOX("NEWCOPAY")):0,1:1)
"RTN","PSON52",68,0)
 N PSOSCFLD S PSOSCFLD=$S(PSOSCP'="":$G(PSOANSQ("SC")),1:"")_"^"_$G(PSOANSQ("MST"))_"^"_$G(PSOANSQ("VEH"))_"^"_$G(PSOANSQ("RAD"))_"^"_$G(PSOANSQ("PGW"))_"^"_$G(PSOANSQ("HNC"))_"^"_$G(PSOANSQ("CV"))_"^"_$G(PSOANSQ("SHAD"))
"RTN","PSON52",69,0)
 I PSOSCP<50&($TR(PSOSCFLD,"^")'="")&($P($G(^PS(53,+$G(PSONEW("PATIENT STATUS")),0)),"^",7)'=1) D
"RTN","PSON52",70,0)
 . S ^PSRX(PSOX("IRXN"),"IBQ")=PSOSCFLD K PSOSCFLD  ;don't set if SC % is null or 0, just set it in ICD node
"RTN","PSON52",71,0)
 D ICD^PSODIAG
"RTN","PSON52",72,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),0)
"RTN","PSON52",73,0)
 K PSOANSQ,PSOANSQD,PSOX("NEWCOPAY")
"RTN","PSON52",74,0)
 L -^PSRX("B",PSOX("IRXN"))
"RTN","PSON52",75,0)
 Q
"RTN","PSON52",76,0)
 ;
"RTN","PSON52",77,0)
PS55 ;
"RTN","PSON52",78,0)
 L +^PS(55,PSODFN,"P"):$S(+$G(^DD("DILOCKTM"))>0:+^DD("DILOCKTM"),1:3)
"RTN","PSON52",79,0)
 S:'$D(^PS(55,PSODFN,"P",0)) ^(0)="^55.03PA^^"
"RTN","PSON52",80,0)
 F PSOX1=$P(^PS(55,PSODFN,"P",0),"^",3):1 Q:'$D(^PS(55,PSODFN,"P",PSOX1))
"RTN","PSON52",81,0)
 S PSOX("55 IEN")=PSOX1
"RTN","PSON52",82,0)
 S ^PS(55,PSODFN,"P",PSOX1,0)=PSOX("IRXN"),$P(^PS(55,PSODFN,"P",0),"^",3,4)=PSOX1_"^"_($P(^PS(55,PSODFN,"P",0),"^",4)+1)
"RTN","PSON52",83,0)
 S ^PS(55,PSODFN,"P","A",PSONEW("STOP DATE"),PSOX("IRXN"))=""
"RTN","PSON52",84,0)
PS55X L -^PS(55,PSODFN,"P")
"RTN","PSON52",85,0)
 K PSOX1
"RTN","PSON52",86,0)
 Q
"RTN","PSON52",87,0)
DIK ;
"RTN","PSON52",88,0)
 I $D(^XUSEC("PSORPH",DUZ)) S DA=PSOX("IRXN"),DIE=52,DR="41////"_PSOCOU_";S:'X Y=""@1"";42////"_PSOCOUU_";@1" D ^DIE K DIE,DR
"RTN","PSON52",89,0)
 K DIK,DA S DIK="^PSRX(",DA=PSOX("IRXN") D IX1^DIK K DIK
"RTN","PSON52",90,0)
 S DA=PSOX("IRXN") D ORC^PSORN52C
"RTN","PSON52",91,0)
 Q
"RTN","PSON52",92,0)
FINISH ;
"RTN","PSON52",93,0)
ANQ I $G(ANQDATA)]"" D NOW^%DTC G:$D(^PS(52.52,"B",%)) ANQ D
"RTN","PSON52",94,0)
 .K DD,DO S DIC="^PS(52.52,",DIC(0)="L",DLAYGO=52.52,X=% D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","PSON52",95,0)
 .S ^PS(52.52,+Y,0)=$P(Y,"^",2)_"^"_PSOX("IRXN")_"^"_ANQDATA,^PS(52.52,"A",PSOX("IRXN"),+Y)="" K ANQDATA,X,Y,%,ANQREM
"RTN","PSON52",96,0)
 G:PSOX("STATUS")=4 FINISHP
"RTN","PSON52",97,0)
 I $D(PSORX("VERIFY")) D  G FINISHX
"RTN","PSON52",98,0)
 .K DIC,DLAYGO,DINUM,DIADD,X,DD,DO S DIC="^PS(52.4,",DLAYGO=52.4,DINUM=PSOX("IRXN"),DIC(0)="ML",X=PSOX("IRXN")
"RTN","PSON52",99,0)
 .D FILE^DICN K DD,DO,DIC,DLAYGO,DINUM S ^PS(52.4,PSOX("IRXN"),0)=PSOX("IRXN")_"^"_PSODFN_"^"_DUZ_"^"_"^"_$E(PSOX("LOGIN DATE"),1,7)_"^"_PSOX("IRXN")_"^"_PSOX("STOP DATE")
"RTN","PSON52",100,0)
 .K DIK,DA S DIK="^PS(52.4,",DA=PSOX("IRXN") D IX^DIK K DIK,DA
"RTN","PSON52",101,0)
 ;
"RTN","PSON52",102,0)
 I PSOX("FILL DATE")>DT,$P(PSOPAR,"^",6) S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=0 D SUS^PSORXL K DA G FINISHX
"RTN","PSON52",103,0)
 ;
"RTN","PSON52",104,0)
 ; - Calling ECME for claims generation and transmission / REJECT handling
"RTN","PSON52",105,0)
 N ACTION,PSOERX
"RTN","PSON52",106,0)
 S PSOERX=PSOX("IRXN")
"RTN","PSON52",107,0)
 I $$SUBMIT^PSOBPSUT(PSOERX,0) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSON52",108,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOERX,0,PSOX("FILL DATE"),"OF")
"RTN","PSON52",109,0)
 . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSON52",110,0)
 . I $$PSOET^PSOREJP3(PSOERX,0) S ACTION="Q" Q
"RTN","PSON52",111,0)
 . I $$FIND^PSOREJUT(PSOERX,0) D
"RTN","PSON52",112,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOERX,0,"79,88","OF","IOQ","Q")
"RTN","PSON52",113,0)
 . I $$STATUS^PSOBPSUT(PSOERX,0)="E PAYABLE" D
"RTN","PSON52",114,0)
 . . D SAVNDC^PSSNDCUT(+$$GET1^DIQ(52,PSOERX,6,"I"),$G(PSOSITE),$$GETNDC^PSONDCUT(PSOERX,0))
"RTN","PSON52",115,0)
 ;
"RTN","PSON52",116,0)
FINISHP ;
"RTN","PSON52",117,0)
 I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=0 G FINISHX
"RTN","PSON52",118,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSON52",119,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSON52",120,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSON52",121,0)
 S RXFL(PSOX("IRXN"))=0
"RTN","PSON52",122,0)
FINISHX ;call to build Rx array for bingo board
"RTN","PSON52",123,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSON52",124,0)
 K PSOX1,PSOX2
"RTN","PSON52",125,0)
 Q
"RTN","PSON52",126,0)
EOJ ;
"RTN","PSON52",127,0)
 ;B xref locked in routine PSONRXN
"RTN","PSON52",128,0)
 L -^PSRX("B",PSOX("IRXN")) K OTHDOS,DA,PSON52,PSOPRC,RTE,SCH,PSOX("INS"),PSONEW("INS"),PSORXED("INS"),PSONEW("ENT"),PSORXED("ENT"),OLENT
"RTN","PSON52",129,0)
 D PSOUL^PSSLOCK(PSOX("IRXN"))
"RTN","PSON52",130,0)
 Q
"RTN","PSON52",131,0)
 ;
"RTN","PSON52",132,0)
 ;;PSOX("SIG");;SIG;;1
"RTN","PSON52",133,0)
DD ;;PSOX("RX #");;0;;1
"RTN","PSON52",134,0)
 ;;PSOX("ISSUE DATE");;0;;13
"RTN","PSON52",135,0)
 ;;PSODFN;;0;;2
"RTN","PSON52",136,0)
 ;;PSOX("PATIENT STATUS");;0;;3
"RTN","PSON52",137,0)
 ;;PSOX("PROVIDER");;0;;4
"RTN","PSON52",138,0)
 ;;PSOX("CLINIC");;0;;5
"RTN","PSON52",139,0)
 ;;PSODRUG("IEN");;0;;6
"RTN","PSON52",140,0)
 ;;PSODRUG("TRADE NAME");;TN;;1
"RTN","PSON52",141,0)
 ;;PSOX("QTY");;0;;7
"RTN","PSON52",142,0)
 ;;PSOX("DAYS SUPPLY");;0;;8
"RTN","PSON52",143,0)
 ;;PSOX("# OF REFILLS");;0;;9
"RTN","PSON52",144,0)
 ;;PSOX("COPIES");;0;;18
"RTN","PSON52",145,0)
 ;;PSOX("MAIL/WINDOW");;0;;11
"RTN","PSON52",146,0)
 ;;PSOX("REMARKS");;3;;7
"RTN","PSON52",147,0)
 ;;PSOX("CLERK CODE");;0;;16
"RTN","PSON52",148,0)
 ;;PSODRUG("COST");;0;;17
"RTN","PSON52",149,0)
 ;;PSOSITE;;2;;9
"RTN","PSON52",150,0)
 ;;PSOX("LOGIN DATE");;2;;1
"RTN","PSON52",151,0)
 ;;PSOX("FILL DATE");;2;;2
"RTN","PSON52",152,0)
 ;;PSOX("PHARMACIST");;2;;3
"RTN","PSON52",153,0)
 ;;PSOX("LOT #");;2;;4
"RTN","PSON52",154,0)
 ;;PSOX("DISPENSED DATE");;2;;5
"RTN","PSON52",155,0)
 ;;PSOX("STOP DATE");;2;;6
"RTN","PSON52",156,0)
 ;;PSODRUG("NDC");;2;;7
"RTN","PSON52",157,0)
 ;;PSODRUG("DAW");;EPH;;1
"RTN","PSON52",158,0)
 ;;PSODRUG("MANUFACTURER");;2;;8
"RTN","PSON52",159,0)
 ;;PSOX("EXPIRATION DATE");;2;;11
"RTN","PSON52",160,0)
 ;;PSOX("GENERIC PROVIDER");;2;;12
"RTN","PSON52",161,0)
 ;;PSOX("RELEASED DATE/TIME");;2;;13
"RTN","PSON52",162,0)
 ;;PSOX("METHOD OF PICK-UP");;MP;;1
"RTN","PSON52",163,0)
 ;;PSOX("STATUS");;STA;;1
"RTN","PSON52",164,0)
 ;;PSOX("LAST DISPENSED DATE");;3;;1
"RTN","PSON52",165,0)
 ;;PSOX("NEXT POSSIBLE REFILL");;3;;2
"RTN","PSON52",166,0)
 ;;PSOX("COSIGNING PROVIDER");;3;;3
"RTN","PSON52",167,0)
 ;;PSOX("TYPE OF RX");;TYPE;;1
"RTN","PSON52",168,0)
 ;;PSOX("SAND");;SAND;;1
"RTN","PSON52",169,0)
 ;;PSOX("POE");;POE;;1
"RTN","PSON52",170,0)
 ;;PSOX("INS");;INS;;1
"RTN","PSOORED2")
0^18^B73436344
"RTN","PSOORED2",1,0)
PSOORED2 ;ISC-BHAM/SAB-edit orders from backdoor con't ;03/06/95 10:24
"RTN","PSOORED2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**2,51,46,78,102,114,117,133,159,148,247,260,281,289,276,358**;DEC 1997;Build 35
"RTN","PSOORED2",3,0)
 ;Reference to $$DIVNCPDP^BPSBUTL supported by IA 4719
"RTN","PSOORED2",4,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOORED2",5,0)
 ;called from psooredt. cmop edit checks.
"RTN","PSOORED2",6,0)
 Q
"RTN","PSOORED2",7,0)
ISDT D CHK K RF I $G(CMRL) W !,"Released by CMOP.  No editing allowed on Issue Date." D PAUSE^VALM1 K CMRL Q
"RTN","PSOORED2",8,0)
 S %DT="AEX",%DT(0)=-$P(^PSRX(DA,2),"^",2),Y=$P(RX0,"^",13) X ^DD("DD") S %DT("A")="ISSUE DATE: ",%DT("B")=Y D ^%DT I "^"[$E(X) K X,Y,%DT,DTOUT,DUOUT Q
"RTN","PSOORED2",9,0)
 G:Y=-1 ISDT S PSORXED("FLD",1)=Y
"RTN","PSOORED2",10,0)
 ;S DR="1///"_Y,DIE=52 D ^DIE
"RTN","PSOORED2",11,0)
 D KV K X,Y,%DT
"RTN","PSOORED2",12,0)
 Q
"RTN","PSOORED2",13,0)
FLDT D CHK K RF I $G(CMRL) W !,"Released by CMOP.  No editing allowed on Fill Date." D PAUSE^VALM1 K CMRL Q
"RTN","PSOORED2",14,0)
 D KV S Y=$P(^PSRX(DA,2),"^",2) X ^DD("DD") S DIR("A")="FILL DATE",DIR("B")=Y
"RTN","PSOORED2",15,0)
 S DIR(0)="D^"_$P(RX0,"^",13)_":"_$P(PSORXED("RX2"),"^",6)_":EX"
"RTN","PSOORED2",16,0)
 S DIR("?",1)="The earliest fill date allowed is determined by the Issue Date,",DIR("?",2)="the Fill Date cannot be before the Issue Date or past the Expiration Date."
"RTN","PSOORED2",17,0)
 S DIR("?")="Both the month and day are required." D ^DIR
"RTN","PSOORED2",18,0)
 I $D(DIRUT) D KV K PSORXED("FLD",22),X,Y Q
"RTN","PSOORED2",19,0)
 S PSORXED("FLD",22)=Y ;S DR="22R///"_Y,DIE=52 D ^DIE
"RTN","PSOORED2",20,0)
 K X,Y
"RTN","PSOORED2",21,0)
KV K DIR,DUOUT,DTOUT,DIRUT
"RTN","PSOORED2",22,0)
 Q
"RTN","PSOORED2",23,0)
CHK I $D(^PSRX("AR",+$P(PSORXED("RX2"),"^",13),PSORXED("IRXN"))) S CMRL=1 Q
"RTN","PSOORED2",24,0)
 F RF=0:0 S RF=$O(^PSRX(PSORXED("IRXN"),1,RF)) Q:'RF  I $D(^PSRX("AR",+$P(^PSRX(PSORXED("IRXN"),1,RF,0),"^",18),PSORXED("IRXN"))) S CMRL=1
"RTN","PSOORED2",25,0)
 Q
"RTN","PSOORED2",26,0)
CHK1 I +^PSRX(PSORXED("IRXN"),"STA")=5 D  Q:'$G(CMRL)
"RTN","PSOORED2",27,0)
 .S SURX=$O(^PS(52.5,PSORXED("IRXN"),0)) Q:'SURX  I $P(^PS(52.5,SURX,0),"^",7)']""!($P(^(0),"^",7)="Q") S CMRL=1
"RTN","PSOORED2",28,0)
 .E  S CMRL=0
"RTN","PSOORED2",29,0)
 F FEV=0:0 S FEV=$O(^PSRX(PSORXED("IRXN"),4,FEV)) Q:'FEV  I '$P(^PSRX(PSORXED("IRXN"),4,FEV,0),"^",3),$P(^(0),"^",4)<3 S CMRL=0
"RTN","PSOORED2",30,0)
 Q
"RTN","PSOORED2",31,0)
REF ;shows refill info
"RTN","PSOORED2",32,0)
 S RFN=0 F N=0:0 S N=$O(^PSRX(PSORXED("IRXN"),1,N)) Q:'N  S RFM=N,RFN=RFN+1
"RTN","PSOORED2",33,0)
 ;G:RFM=1 SRF 
"RTN","PSOORED2",34,0)
 W ! K DA,DR D KV S DIR(0)="Y",DIR("B")="No",DIR("A")="There "_$S(RFN>1:"are ",1:"is ")_RFN_" refill"_$S(RFN>1:"s.",1:".")_"  Do you want to edit"
"RTN","PSOORED2",35,0)
 D ^DIR D KV Q:'Y
"RTN","PSOORED2",36,0)
SRF W !!,"#  Log Date   Refill Date  Qty               Routing  Lot #       Pharmacist",! F I=1:1:80 W "="
"RTN","PSOORED2",37,0)
 F N=0:0 S N=$O(^PSRX(PSORXED("IRXN"),1,N)) Q:'N  S P1=^(N,0) D
"RTN","PSOORED2",38,0)
 .S DTT=$P(P1,"^",8)\1 D DAT S LOG=DAT,DTT=$P(P1,"^"),$P(RN," ",10)=" " D DAT
"RTN","PSOORED2",39,0)
 .W !,N_"  "_LOG_"   "_DAT_"      "_$P(P1,"^",4)_$E("               ",$L($P(P1,"^",4))+1,15)_"  "_$S($P(P1,"^",2)="M":"MAIL  ",1:"WINDOW")_"   "_$P(P1,"^",6)_$E(RN,$L($P(P1,"^",6))+1,12)
"RTN","PSOORED2",40,0)
 .W $E($S($D(^VA(200,+$P(P1,"^",5),0)):$P(^(0),"^"),1:""),1,16)
"RTN","PSOORED2",41,0)
 .S PSDIV=$S($D(^PS(59,+$P(P1,"^",9),0)):$P(^(0),"^",6),1:"Unknown") W !,"Division: "_PSDIV_$E("        ",$L(PSDIV)+1,8)_"  "
"RTN","PSOORED2",42,0)
 .W "Dispensed: "_$S($P(P1,"^",19):$E($P(P1,"^",19),4,5)_"/"_$E($P(P1,"^",19),6,7)_"/"_$E($P(P1,"^",19),2,3),1:"")_"  "
"RTN","PSOORED2",43,0)
 .S RTS=$S($P(P1,"^",16):" Returned to Stock: "_$E($P(P1,"^",16),4,5)_"/"_$E($P(P1,"^",16),6,7)_"/"_$E($P(P1,"^",16),2,3),1:" Released: "_$S($P(P1,"^",18):$E($P(P1,"^",18),4,5)_"/"_$E($P(P1,"^",18),6,7)_"/"_$E($P(P1,"^",18),2,3),1:""))
"RTN","PSOORED2",44,0)
 .W RTS W:$P(P1,"^",3)]"" !,"   Remarks: "_$P(P1,"^",3)
"RTN","PSOORED2",45,0)
 S DA(1)=PSORXED("IRXN") I RFN=1 S Y=RFM G RFM
"RTN","PSOORED2",46,0)
 W ! D KV S DIR("A")="Select a Refill",DIR(0)="NO^1:"_RFM_":0" D ^DIR Q:$D(DIRUT)
"RTN","PSOORED2",47,0)
RFM I '$D(^PSRX(PSORXED("IRXN"),1,Y,0)) W !,$C(7),"Invalid selection.",! G SRF
"RTN","PSOORED2",48,0)
 S CMRL=0 I $D(^PSRX("AR",+$P(^PSRX(PSORXED("IRXN"),1,Y,0),"^",18),PSORXED("IRXN"),Y)) S CMRL=1 G RFX
"RTN","PSOORED2",49,0)
 F FEV=0:0 S FEV=$O(^PSRX(PSORXED("IRXN"),4,FEV)) Q:'FEV  I $P(^PSRX(PSORXED("IRXN"),4,FEV,0),"^",3)=Y,$P(^(0),"^",4)<3 S CMRL=1
"RTN","PSOORED2",50,0)
RFX N RFL,NDC,DAW,FLDS,QUIT,CHGNDC,CHANGED
"RTN","PSOORED2",51,0)
 W ! S DA=Y,DIE="^PSRX("_DA(1)_",1,",DR=$S('CMRL:".01;1.1",1:"1.2:5;8")
"RTN","PSOORED2",52,0)
 D GETS^DIQ(52.1,DA_","_DA(1)_",",".01;1;1.1;8;11;81","I","FLDS")
"RTN","PSOORED2",53,0)
 S:$D(^PSRX(DA(1),1,DA,0)) PSORXED("RX1")=^PSRX(DA(1),1,DA,0),(RFED,RFL)=DA
"RTN","PSOORED2",54,0)
 I $G(ST)=11!($G(ST)=12)!($G(ST)=14)!($G(ST)=15),$$STATUS^PSOBPSUT(PSORXED("IRXN"),RFL)'="" S QUIT=0 D RFE Q  ;short circuit for DC'd/Expired ECME RXs
"RTN","PSOORED2",55,0)
 N PSORFILL S PSORFILL=DA   ;*276
"RTN","PSOORED2",56,0)
 D ^DIE S QUIT=$D(Y)
"RTN","PSOORED2",57,0)
 ;*276
"RTN","PSOORED2",58,0)
 I '$D(^PSRX(PSORXED("IRXN"),1,PSORFILL)),'$G(PSOSFN) D
"RTN","PSOORED2",59,0)
 .N DA,NOW,IR,FDA
"RTN","PSOORED2",60,0)
 .S DA=$G(PSORXED("IRXN")) Q:'DA
"RTN","PSOORED2",61,0)
 .S (FDA,IR)=0 F  S FDA=$O(^PSRX(DA,"A",FDA)) Q:'FDA  S IR=FDA
"RTN","PSOORED2",62,0)
 .S IR=IR+1,^PSRX(DA,"A",0)="^52.3DA^"_IR_"^"_IR
"RTN","PSOORED2",63,0)
 .D NOW^%DTC S NOW=%
"RTN","PSOORED2",64,0)
 .S ^PSRX(DA,"A",IR,0)=NOW_"^D^"_DUZ_"^"_$S(PSORFILL>0&(PSORFILL<6):PSORFILL,1:PSORFILL+1)_"^Refill deleted during Rx edit"
"RTN","PSOORED2",65,0)
 K FEV,RFN,RFM,X,Y,DR
"RTN","PSOORED2",66,0)
 I '$G(DA) D REVERSE^PSOBPSU1(PSORXED("IRXN"),RFL,"DE",5) K CMRL,RFED D:$D(PSORX("PSOL"))&($G(DI)=.01) RFD Q
"RTN","PSOORED2",67,0)
 I 'CMRL,'QUIT S DR="1;1.2:5;8" D ^DIE S QUIT=$D(Y)
"RTN","PSOORED2",68,0)
RFE I '$D(^PSRX(PSORXED("IRXN"),1,RFL)) Q
"RTN","PSOORED2",69,0)
 I 'QUIT,$$STATUS^PSOBPSUT(PSORXED("IRXN"),RFL)'="" D
"RTN","PSOORED2",70,0)
 . S NDC=$$GETNDC^PSONDCUT(PSORXED("IRXN"),RFL)
"RTN","PSOORED2",71,0)
 . D EDTDAW^PSODAWUT(PSORXED("IRXN"),RFL,.DAW) I $G(DAW)="^" Q
"RTN","PSOORED2",72,0)
 . D SAVDAW^PSODAWUT(PSORXED("IRXN"),RFL,+$G(DAW))
"RTN","PSOORED2",73,0)
 . D NDC^PSODRG(PSORXED("IRXN"),RFL,,.NDC) I $G(NDC)="^",$G(NDC)="" Q
"RTN","PSOORED2",74,0)
 . I NDC'=$$GETNDC^PSONDCUT(PSORXED("IRXN"),RFL) D
"RTN","PSOORED2",75,0)
 . . S CHGNDC=1 D RXACT^PSOBPSU2(PSORXED("IRXN"),RFL,"NDC changed from "_$$GETNDC^PSONDCUT(PSORXED("IRXN"),RFL)_" to "_NDC_".","E")
"RTN","PSOORED2",76,0)
 . D SAVNDC^PSONDCUT(PSORXED("IRXN"),RFL,NDC)
"RTN","PSOORED2",77,0)
 S CHANGED=$$CHANGED(PSORXED("IRXN"),RFL,.FLDS)
"RTN","PSOORED2",78,0)
 I CHANGED D
"RTN","PSOORED2",79,0)
 . I $P(CHANGED,"^",2),'$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(PSORXED("IRXN"),RFL)) D  Q
"RTN","PSOORED2",80,0)
 . . D REVERSE^PSOBPSU1(PSORXED("IRXN"),RFL,"DC",99,"REFILL DIVISION CHANGED",1)
"RTN","PSOORED2",81,0)
 . I $$SUBMIT^PSOBPSUT(PSORXED("IRXN"),RFL,1,1) D
"RTN","PSOORED2",82,0)
 . . N RX S RX=PSORXED("IRXN")
"RTN","PSOORED2",83,0)
 . . I '$P(CHANGED,"^",2),$$STATUS^PSOBPSUT(RX,RFL)="" Q
"RTN","PSOORED2",84,0)
 . . D ECMESND^PSOBPSU1(RX,RFL,,"ED",$$GETNDC^PSONDCUT(RX,RFL),,$S($P(CHANGED,"^",2):"REFILL DIVISION CHANGED",1:"REFILL EDITED"),,+$G(CHGNDC))
"RTN","PSOORED2",85,0)
 . . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOORED2",86,0)
 . . I $$PSOET^PSOREJP3(RX,RFL) S X="Q" Q
"RTN","PSOORED2",87,0)
 . . ;- Checking/Handling DUR/79 Rejects
"RTN","PSOORED2",88,0)
 . . I $$FIND^PSOREJUT(RX,RFL) S X=$$HDLG^PSOREJU1(RX,RFL,"79,88","ED","IOQ","Q")
"RTN","PSOORED2",89,0)
 K DIE,CMRL,DA,DR
"RTN","PSOORED2",90,0)
 Q
"RTN","PSOORED2",91,0)
CHANGED(RX,RFL,PRIOR) ; - Check if fields have changed and should for 3rd Party Claim resubmission
"RTN","PSOORED2",92,0)
 ;Input:  (r) RX    - Rx IEN
"RTN","PSOORED2",93,0)
 ;        (r) RFL   - Refill #
"RTN","PSOORED2",94,0)
 ;        (r) PRIOR - Array with fields
"RTN","PSOORED2",95,0)
 ;Output:  CHANGED  - 0 - Not changed / 1 - Refill field changed ^ Rx Division changed (1 - YES)
"RTN","PSOORED2",96,0)
 N CHANGED,SAVED
"RTN","PSOORED2",97,0)
 S CHANGED=0 D GETS^DIQ(52.1,RFL_","_RX_",",".01;1;1.1;8;11;81","I","SAVED")
"RTN","PSOORED2",98,0)
 F I=.01,1,1.1,11,81 I $G(PRIOR(52.1,RFL_","_RX_",",I,"I"))'=$G(SAVED(52.1,RFL_","_RX_",",I,"I")) S CHANGED=1 Q
"RTN","PSOORED2",99,0)
 I $$DIVNCPDP^BPSBUTL(+$G(PRIOR(52.1,RFL_","_RX_",",8,"I")))'=$$DIVNCPDP^BPSBUTL(+$G(SAVED(52.1,RFL_","_RX_",",8,"I"))) S CHANGED="1^1"
"RTN","PSOORED2",100,0)
 Q CHANGED
"RTN","PSOORED2",101,0)
 ;
"RTN","PSOORED2",102,0)
DAT S DAT="",DTT=DTT\1 Q:DTT'?7N  S DAT=$E(DTT,4,5)_"/"_$E(DTT,6,7)_"/"_$E(DTT,2,3)
"RTN","PSOORED2",103,0)
 Q
"RTN","PSOORED2",104,0)
DIE S DIE=52 D ^DIE I $D(Y) S PSORXED("DFLG")=1
"RTN","PSOORED2",105,0)
 K DIE,DR,X,Y
"RTN","PSOORED2",106,0)
 Q
"RTN","PSOORED2",107,0)
RFD ;check for deleted refill
"RTN","PSOORED2",108,0)
 M PSOZ1("PSOL")=PSORX("PSOL") N I,J,K,PSOX2,PSOX3,PSOX9 S (I,K)=0 D
"RTN","PSOORED2",109,0)
 .F  S I=$O(PSOZ1("PSOL",I)) Q:'I!(K)  S PSOX2=PSOZ1("PSOL",I) I PSOX2[(PSORXED("IRXN")_",") S PSOX9="" D
"RTN","PSOORED2",110,0)
 ..F J=1:1 S PSOX3=$P(PSOX2,",",J) Q:'PSOX3  D
"RTN","PSOORED2",111,0)
 ...I 'K,PSOX3=PSORXED("IRXN") S K=1
"RTN","PSOORED2",112,0)
 ...E  S PSOX9=PSOX9_$S('PSOX9:"",1:",")_PSOX3
"RTN","PSOORED2",113,0)
 ..I K S:PSOX9]"" PSORX("PSOL",I)=PSOX9_"," K:PSOX9="" PSORX("PSOL",I)
"RTN","PSOORED2",114,0)
 K PSOZ1("PSOL")
"RTN","PSOORED2",115,0)
 Q
"RTN","PSOORED2",116,0)
EDTDOSE ;edit med instructions fields
"RTN","PSOORED2",117,0)
 I '$O(^PSRX(PSORXED("IRXN"),6,0)) D DOSE^PSOORED5 Q
"RTN","PSOORED2",118,0)
 D ^PSOORED3
"RTN","PSOORED2",119,0)
 Q
"RTN","PSOORED2",120,0)
UPD ;updates dosing array
"RTN","PSOORED2",121,0)
 S HENT=ENT
"RTN","PSOORED2",122,0)
UPD1 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"",'$D(PSORXED("DOSE",(HENT+2))) K PSORXED("CONJUNCTION",(HENT+1)) Q
"RTN","PSOORED2",123,0)
 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"" S PSORXED("CONJUNCTION",HENT)=PSORXED("CONJUNCTION",(HENT+1)) D  G UPD1
"RTN","PSOORED2",124,0)
 .K PSORXED("CONJUNCTION",(HENT+1))
"RTN","PSOORED2",125,0)
 .F  Q:'$D(PSORXED("DOSE",(HENT+2)))  D
"RTN","PSOORED2",126,0)
 ..S PSORXED("DOSE",(HENT+1))=PSORXED("DOSE",(HENT+2))
"RTN","PSOORED2",127,0)
 ..S PSORXED("DOSE ORDERED",(HENT+1))=$G(PSORXED("DOSE ORDERED",(HENT+2)))
"RTN","PSOORED2",128,0)
 ..S PSORXED("UNITS",(HENT+1))=$G(PSORXED("UNITS",(HENT+2)))
"RTN","PSOORED2",129,0)
 ..S PSORXED("NOUN",(HENT+1))=$G(PSORXED("NOUN",(HENT+2)))
"RTN","PSOORED2",130,0)
 ..S PSORXED("DURATION",(HENT+1))=$G(PSORXED("DURATION",(HENT+2)))
"RTN","PSOORED2",131,0)
 ..S PSORXED("CONJUNCTION",(HENT+1))=$G(PSORXED("CONJUNCTION",(HENT+2)))
"RTN","PSOORED2",132,0)
 ..S PSORXED("ROUTE",(HENT+1))=$G(PSORXED("ROUTE",(HENT+2)))
"RTN","PSOORED2",133,0)
 ..S PSORXED("SCHEDULE",(HENT+1))=$G(PSORXED("SCHEDULE",(HENT+2)))
"RTN","PSOORED2",134,0)
 ..S PSORXED("ODOSE",(HENT+1))=$G(PSORXED("ODOSE",(HENT+2)))
"RTN","PSOORED2",135,0)
 ..S HENT=HENT+1
"RTN","PSOORED2",136,0)
 ..I $G(PSORXED("CONJUNCTION",(HENT+2)))]"" Q
"RTN","PSOORED2",137,0)
 ..K PSORXED("UNITS",(HENT+1)),PSORXED("NOUN",(HENT+1)),PSORXED("DURATION",(HENT+1)),PSORXED("CONJUNCTION",(HENT+1)),PSORXED("ROUTE",(HENT+1)),PSORXED("SCHEDULE",(HENT+1)),PSORXED("DOSE",(HENT+1)),PSORXED("DOSE ORDERED",(HENT+1))
"RTN","PSOORED2",138,0)
 ..K PSORXED("VERB",(HENT+1)),PSORXED("ODOSE",(HENT+1))
"RTN","PSOORED2",139,0)
 S PSORXED("ENT")=HENT K HENT,SENT D EN^PSOFSIG(.PSORXED)
"RTN","PSOORED2",140,0)
 Q
"RTN","PSOORED2",141,0)
UPD2 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"",'$D(PSORXED("DOSE",(HENT+2))) K PSORXED("CONJUNCTION",(HENT+1)) Q
"RTN","PSOORED2",142,0)
 I $G(PSORXED("CONJUNCTION",(HENT+1)))]"" S PSORXED("CONJUNCTION",HENT)=PSORXED("CONJUNCTION",(HENT+1)) D  G UPD1
"RTN","PSOORED2",143,0)
 .K PSORXED("CONJUNCTION",(HENT+1)) I $D(PSORXED("DOSE",(HENT+2))) D
"RTN","PSOORED2",144,0)
 ..S PSORXED("DOSE",(HENT+1))=PSORXED("DOSE",(HENT+2))
"RTN","PSOORED2",145,0)
 ..S PSORXED("DOSE ORDERED",(HENT+1))=$G(PSORXED("DOSE ORDERED",(HENT+2)))
"RTN","PSOORED2",146,0)
 ..S PSORXED("UNITS",(HENT+1))=$G(PSORXED("UNITS",(HENT+2)))
"RTN","PSOORED2",147,0)
 ..S PSORXED("NOUN",(HENT+1))=$G(PSORXED("NOUN",(HENT+2)))
"RTN","PSOORED2",148,0)
 ..S PSORXED("VERB",(HENT+1))=$G(PSORXED("VERB",(HENT+2)))
"RTN","PSOORED2",149,0)
 ..S PSORXED("DURATION",(HENT+1))=$G(PSORXED("DURATION",(HENT+2)))
"RTN","PSOORED2",150,0)
 ..S PSORXED("CONJUNCTION",(HENT+1))=$G(PSORXED("CONJUNCTION",(HENT+2)))
"RTN","PSOORED2",151,0)
 ..S PSORXED("ROUTE",(HENT+1))=$G(PSORXED("ROUTE",(HENT+2)))
"RTN","PSOORED2",152,0)
 ..S PSORXED("SCHEDULE",(HENT+1))=$G(PSORXED("SCHEDULE",(HENT+2)))
"RTN","PSOORED2",153,0)
 ..S PSORXED("ODOSE",(HENT+1))=$G(PSORXED("ODOSE",(HENT+2)))
"RTN","PSOORED2",154,0)
 ..S HENT=HENT+1
"RTN","PSOORED2",155,0)
 ..I $G(PSORXED("CONJUNCTION",(HENT+1)))]"" Q
"RTN","PSOORED2",156,0)
 ..K PSORXED("UNITS",(HENT+1)),PSORXED("NOUN",(HENT+1)),PSORXED("DURATION",(HENT+1)),PSORXED("ROUTE",(HENT+1)),PSORXED("SCHEDULE",(HENT+1)),PSORXED("DOSE",(HENT+1)),PSORXED("DOSE ORDERED",(HENT+1)),PSORXED("VERB",(HENT+1))
"RTN","PSOORED2",157,0)
 ..K PSORXED("ODOSE",(HENT+1))
"RTN","PSOORED2",158,0)
 F I=0:0 S I=$O(PSORXED("DOSE",I)) Q:'I  S SENT=$G(SENT)+1
"RTN","PSOORED2",159,0)
 S PSORXED("ENT")=SENT K HENT,SENT D EN^PSOFSIG(.PSORXED)
"RTN","PSOORED2",160,0)
 Q
"RTN","PSOORED7")
0^19^B23964642
"RTN","PSOORED7",1,0)
PSOORED7 ;ISC-BHAM/MFR-edit orders from backdoor con't ;03/06/95 10:24
"RTN","PSOORED7",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,281,289,358**;DEC 1997;Build 35
"RTN","PSOORED7",3,0)
 ;called from psooredt. cmop edit checks.
"RTN","PSOORED7",4,0)
 ;Reference to file #50 supported by IA 221
"RTN","PSOORED7",5,0)
 ;Reference to $$ECMEON^BPSUTIL supported by IA 4410
"RTN","PSOORED7",6,0)
 ;Reference to $$DIVNCPDP^BPSBUTL supported by IA 4719
"RTN","PSOORED7",7,0)
 ;
"RTN","PSOORED7",8,0)
NOCHG S CMRL=1 D CHK1^PSOORED2 I '$G(CMRL) W !,"No editing allowed of "_$S(FLN=9:"Day Supply",FLN=10:"Quantity",1:"# of Refills")_" (CMOP)." D PAUSE^VALM1 K CMRL Q
"RTN","PSOORED7",9,0)
 K CMRL,DIC,DIQ
"RTN","PSOORED7",10,0)
 S DIC=52,DA=PSORXED("IRXN"),DIQ="PSORXED" D EN^DIQ1 K DIC,DIQ
"RTN","PSOORED7",11,0)
 S PSORXED($S(FLN=9:"DAYS SUPPLY",FLN=10:"QTY",1:"# OF REFILLS"))=PSORXED(52,DA,DR)
"RTN","PSOORED7",12,0)
 D:'$O(PSORXED("DOSE",0)) DOLST^PSOORED3
"RTN","PSOORED7",13,0)
 I FLN=9 D  Q
"RTN","PSOORED7",14,0)
 .D DAYS^PSODIR1(.PSORXED) I $G(PSORXED("DFLG")) K PSORXED("FLD",8) Q
"RTN","PSOORED7",15,0)
 .S PSORXED("FLD",8)=PSORXED("DAYS SUPPLY")
"RTN","PSOORED7",16,0)
 I FLN=10 D  Q
"RTN","PSOORED7",17,0)
 .D QTY^PSODIR1(.PSORXED) I $G(PSORXED("DFLG")) K PSORXED("FLD",7) Q
"RTN","PSOORED7",18,0)
 .S:$G(PSORXED("QTY")) PSORXED("FLD",7)=PSORXED("QTY")
"RTN","PSOORED7",19,0)
 I FLN=11 D  Q
"RTN","PSOORED7",20,0)
 .S X=$G(PSORXED("PATIENT STATUS")) S:'X X=$P(RX0,"^",3)
"RTN","PSOORED7",21,0)
 .S DIC=53,DIC(0)="QXZ" D ^DIC K DIC
"RTN","PSOORED7",22,0)
 .S:+Y PSORXED("PTST NODE")=Y(0)
"RTN","PSOORED7",23,0)
 .S:'$G(PSORXED("PATIENT STATUS")) PSORXED("PATIENT STATUS")=+Y
"RTN","PSOORED7",24,0)
 .K X,Y
"RTN","PSOORED7",25,0)
 .I $G(PSODRUG("IEN"))=$P(RX0,"^",6) K PSODRUG S X="`"_$P(RX0,"^",6),DIC=50,DIC(0)="QXZ" D ^DIC K PSOY S PSOY=Y,PSOY(0)=Y(0) D SET^PSODRG
"RTN","PSOORED7",26,0)
 .S:'$G(PSORXED("DAYS SUPPLY")) PSORXED("DAYS SUPPLY")=$P(RX0,"^",8)
"RTN","PSOORED7",27,0)
 .F I=0:0 S I=$O(^PSRX(PSORXED("IRXN"),1,I)) Q:'I  S RFTT=$G(RFTT)+1
"RTN","PSOORED7",28,0)
 .D REFILL^PSODIR1(.PSORXED) K RFTT
"RTN","PSOORED7",29,0)
 .I $G(PSORXED("DFLG")) K PSORXED("FLD",9) Q
"RTN","PSOORED7",30,0)
 .I PSORXED("# OF REFILLS")=$P(RX0,"^",9) Q
"RTN","PSOORED7",31,0)
 .S PSORXED("FLD",9)=PSORXED("# OF REFILLS")
"RTN","PSOORED7",32,0)
 Q
"RTN","PSOORED7",33,0)
VER ;checks for changes to dosing instructions
"RTN","PSOORED7",34,0)
 S ENTS=0
"RTN","PSOORED7",35,0)
 F I=0:0 S I=$O(PSORXED("DOSE",I)) Q:'I  S ENTS=$G(ENTS)+1
"RTN","PSOORED7",36,0)
 I ENTS<OLENT!(ENTS>OLENT) S PSOSIGFL=1 Q
"RTN","PSOORED7",37,0)
 F I=1:1:OLENT D:$D(^PSRX(PSORXED("IRXN"),6,I,0))
"RTN","PSOORED7",38,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^")'=PSORXED("DOSE",I) S PSOSIGFL=1
"RTN","PSOORED7",39,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^")=PSORXED("DOSE",I) D
"RTN","PSOORED7",40,0)
 ..I $G(PSORXED("DOSE ORDERED",I)) S:PSORXED("DOSE ORDERED",I)'=$P(^PSRX(PSORXED("IRXN"),6,I,0),"^",2) PSOSIGFL=1
"RTN","PSOORED7",41,0)
 .I $G(PSORXED("DURATION",I))]"" D
"RTN","PSOORED7",42,0)
 ..S DURATION=$S($E($P(^PSRX(PSORXED("IRXN"),6,I,0),"^",5),1)'?.N:$E($P(^PSRX(PSORXED("IRXN"),6,I,0),"^",5),2,99)_$E($P(^PSRX(PSORXED("IRXN"),6,I,0),"^",5),1),1:$P(^PSRX(PSORXED("IRXN"),6,I,0),"^",5))
"RTN","PSOORED7",43,0)
 ..I +DURATION'=+$G(PSORXED("DURATION",I)) S PSOSIGFL=1
"RTN","PSOORED7",44,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^",6)'=$G(PSORXED("CONJUNCTION",I)) S PSOSIGFL=1
"RTN","PSOORED7",45,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^",7)'=$G(PSORXED("ROUTE",I)) S PSOSIGFL=1
"RTN","PSOORED7",46,0)
 .I $P(^PSRX(PSORXED("IRXN"),6,I,0),"^",8)'=PSORXED("SCHEDULE",I) S PSOSIGFL=1
"RTN","PSOORED7",47,0)
 .I $G(^PSRX(PSORXED("IRXN"),6,I,1))'=$G(PSORXED("ODOSE",I)) S PSOSIGFL=1
"RTN","PSOORED7",48,0)
 K DURATION
"RTN","PSOORED7",49,0)
 Q
"RTN","PSOORED7",50,0)
 ;
"RTN","PSOORED7",51,0)
RESUB ; Resubmits 3rd party claim in case of an edit (Original)
"RTN","PSOORED7",52,0)
 N CHANGED S CHANGED=$$CHANGED(PSORXED("IRXN"),.FLDS)
"RTN","PSOORED7",53,0)
 I CHANGED D
"RTN","PSOORED7",54,0)
 . N RX S RX=PSORXED("IRXN") Q:'RX
"RTN","PSOORED7",55,0)
 . I $P(CHANGED,"^",2),'$$ECMEON^BPSUTIL($$RXSITE^PSOBPSUT(RX,0)) D  Q
"RTN","PSOORED7",56,0)
 . . D REVERSE^PSOBPSU1(RX,0,"DC",99,"RX DIVISION CHANGED",1)
"RTN","PSOORED7",57,0)
 . I $$SUBMIT^PSOBPSUT(RX,0,1,1) D
"RTN","PSOORED7",58,0)
 . . I '$P(CHANGED,"^",2),$$STATUS^PSOBPSUT(RX,0)="" Q
"RTN","PSOORED7",59,0)
 . . D ECMESND^PSOBPSU1(RX,0,,"ED",$$GETNDC^PSONDCUT(RX,0),,$S($P(CHANGED,"^",2):"RX DIVISION CHANGED",1:"RX EDITED"),,+$G(CHGNDC))
"RTN","PSOORED7",60,0)
 . . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOORED7",61,0)
 . . I $$PSOET^PSOREJP3(RX,0) S X="Q" Q
"RTN","PSOORED7",62,0)
 . . ;- Checking/Handling DUR/79 Rejects
"RTN","PSOORED7",63,0)
 . . I $$FIND^PSOREJUT(RX,0) S X=$$HDLG^PSOREJU1(RX,0,"79,88","ED","IOQ","Q")
"RTN","PSOORED7",64,0)
 Q
"RTN","PSOORED7",65,0)
 ;
"RTN","PSOORED7",66,0)
CHANGED(RX,PRIOR) ; - Check if fields have changed and should for 3rd Party Claim resubmission
"RTN","PSOORED7",67,0)
 ;Input:  (r) RX    - Rx IEN
"RTN","PSOORED7",68,0)
 ;        (r) PRIOR - Array with fields
"RTN","PSOORED7",69,0)
 ;Output:  CHANGED  - 0 - Not changed / 1 - Original Rx field changed ^ Rx Division changed (1 - YES)
"RTN","PSOORED7",70,0)
 N CHANGED,SAVED
"RTN","PSOORED7",71,0)
 S CHANGED=0 D GETS^DIQ(52,RX_",","4;7;8;20;22;27;81","I","SAVED")
"RTN","PSOORED7",72,0)
 F I=4,7,8,22,27,81 D  I CHANGED Q
"RTN","PSOORED7",73,0)
 . I $G(PRIOR(52,RX_",",I,"I"))'=$G(SAVED(52,RX_",",I,"I")) S CHANGED=1 Q
"RTN","PSOORED7",74,0)
 I $$DIVNCPDP^BPSBUTL(+$G(PRIOR(52,RX_",",20,"I")))'=$$DIVNCPDP^BPSBUTL(+$G(SAVED(52,RX_",",20,"I"))) S CHANGED="1^1"
"RTN","PSOORED7",75,0)
 Q CHANGED
"RTN","PSOORED7",76,0)
 ;;
"RTN","PSOORED7",77,0)
NDCDAWDE(ST,FLN,RXN) ; allow edit of NDC & DAW for DC'd/expired ECME RXs
"RTN","PSOORED7",78,0)
 ;;  input: (r) ST  - the Rx status code
"RTN","PSOORED7",79,0)
 ;;         (r) FLN - field number selected for editing
"RTN","PSOORED7",80,0)
 ;;         (r) RXN - prescription #
"RTN","PSOORED7",81,0)
 ;; output: VALMSG for inappropriate field selection or use
"RTN","PSOORED7",82,0)
 ;;         PSODRUG & RSORXED arrays updated if edited
"RTN","PSOORED7",83,0)
 Q:$G(ST)=""!($G(FLN)="")!($G(RXN)="")
"RTN","PSOORED7",84,0)
 I '((ST=11)!(ST=12)!(ST=14)!(ST=15)) S VALMSG=("Invalid selection!") Q
"RTN","PSOORED7",85,0)
 I '((FLN=2)!(FLN=20)!(FLN=21)) S VALMSG=("Invalid selection!") Q
"RTN","PSOORED7",86,0)
 I $$STATUS^PSOBPSUT(RXN,$$LSTRFL^PSOBPSU1(RXN))="" S VALMSG=("Invalid selection!") Q
"RTN","PSOORED7",87,0)
 ;
"RTN","PSOORED7",88,0)
 ; edit NDCs
"RTN","PSOORED7",89,0)
 I FLN=2 D  Q
"RTN","PSOORED7",90,0)
 .N NDC
"RTN","PSOORED7",91,0)
 .S NDC=$$GETNDC^PSONDCUT(RXN,0)
"RTN","PSOORED7",92,0)
 .D NDCEDT^PSONDCUT(RXN,"",$G(DRG),$G(PSOSITE),.NDC)
"RTN","PSOORED7",93,0)
 .I $G(NDC)="^" Q
"RTN","PSOORED7",94,0)
 .S (PSODRUG("NDC"),PSORXED("FLD",27))=NDC
"RTN","PSOORED7",95,0)
 ;;
"RTN","PSOORED7",96,0)
 ; edit refill NDCs/DAWs
"RTN","PSOORED7",97,0)
 I FLN=20 D  Q
"RTN","PSOORED7",98,0)
 .I $$LSTRFL^PSOBPSU1(RXN)=0 S VALMSG="Invalid selection!" Q
"RTN","PSOORED7",99,0)
 .D REF^PSOORED2
"RTN","PSOORED7",100,0)
 ;;
"RTN","PSOORED7",101,0)
 ; edit DAW
"RTN","PSOORED7",102,0)
 I FLN=21 D  Q
"RTN","PSOORED7",103,0)
 .N DAW
"RTN","PSOORED7",104,0)
 .D EDTDAW^PSODAWUT(RXN,0,.DAW)
"RTN","PSOORED7",105,0)
 .I $G(DAW)="^" Q
"RTN","PSOORED7",106,0)
 .S (PSODRUG("DAW"),PSORXED("FLD",81))=DAW
"RTN","PSOORED7",107,0)
 Q
"RTN","PSOORED7",108,0)
 ;;
"RTN","PSOR52")
0^20^B34697297
"RTN","PSOR52",1,0)
PSOR52 ;IHS/DSD/JCM - Files refill entries in prescription file ;03/10/93
"RTN","PSOR52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**10,22,27,181,148,201,260,281,358**;DEC 1997;Build 35
"RTN","PSOR52",3,0)
 ;Reference to ^PSDRUG supported by DBIA 221
"RTN","PSOR52",4,0)
 ;Reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOR52",5,0)
 ;Reference SWSTAT^IBBAPI supported by DBIA 4663
"RTN","PSOR52",6,0)
 ;Reference SAVNDC^PSSNDCUT supported by DBIA 4707
"RTN","PSOR52",7,0)
 ; This routine is responsible for the actual
"RTN","PSOR52",8,0)
 ; filling of the refill prescription.
"RTN","PSOR52",9,0)
 ;---------------------------------------------------------   
"RTN","PSOR52",10,0)
EN(PSOX) ;Entry Point
"RTN","PSOR52",11,0)
START ;
"RTN","PSOR52",12,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT monitor
"RTN","PSOR52",13,0)
 D INIT G:PSOR52("QFLG") END
"RTN","PSOR52",14,0)
 D FILE
"RTN","PSOR52",15,0)
 D DIK
"RTN","PSOR52",16,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Monitor
"RTN","PSOR52",17,0)
 D FINISH
"RTN","PSOR52",18,0)
END D EOJ
"RTN","PSOR52",19,0)
 Q
"RTN","PSOR52",20,0)
 ;---------------------------------------------------------
"RTN","PSOR52",21,0)
 ;
"RTN","PSOR52",22,0)
INIT ;
"RTN","PSOR52",23,0)
 S PSOR52("QFLG")=0
"RTN","PSOR52",24,0)
 S PSOX("QTY")=$P(PSOX("RX0"),"^",7),PSOX("DAYS SUPPLY")=$P(PSOX("RX0"),"^",8)
"RTN","PSOR52",25,0)
 S:$G(^PSDRUG($P(PSOX("RX0"),"^",6),660))]"" PSOX("COST")=$P(^PSDRUG($P(PSOX("RX0"),"^",6),660),"^",6)
"RTN","PSOR52",26,0)
 D NOW^%DTC S PSOX("LOGIN DATE")=$E(%,1,7)
"RTN","PSOR52",27,0)
 S X1=PSOX("FILL DATE"),X2=PSOX("DAYS SUPPLY")-10\1 D C^%DTC S PSOX1=X
"RTN","PSOR52",28,0)
 S X1=$P(PSOX("RX2"),"^",2)
"RTN","PSOR52",29,0)
 S X2=PSOX("DAYS SUPPLY")*(PSOX("NUMBER")+1)-10\1
"RTN","PSOR52",30,0)
 D C^%DTC S PSOX2=X
"RTN","PSOR52",31,0)
 S PSOX("NEXT POSSIBLE REFILL")=$S(PSOX1>PSOX2:PSOX1,1:PSOX2)
"RTN","PSOR52",32,0)
 K X,PSOX1,PSOX2
"RTN","PSOR52",33,0)
 S (PSOX("LAST DISPENSED DATE"),PSOX("DISPENSED DATE"))=PSOX("FILL DATE")
"RTN","PSOR52",34,0)
 I PSOX("FILL DATE")>$S($G(PSOX("LOGIN DATE")):$E(PSOX("LOGIN DATE"),1,7),1:DT),$P(PSOPAR,"^",6) D
"RTN","PSOR52",35,0)
 .S PSOX("OLD MAIL/WINDOW")=$S($G(PSOX("MAIL/WINDOW"))]"":PSOX("MAIL/WINDOW"),1:"MAIL"),PSOX("MAIL/WINDOW")="M"
"RTN","PSOR52",36,0)
 I $P(PSOX("RX2"),"^",12)]"" S PSOX("GENERIC PROVIDER")=$P(PSOX("RX2"),"^",12)
"RTN","PSOR52",37,0)
 S PSOX("PROVIDER")=$P(PSOX("RX0"),"^",4)
"RTN","PSOR52",38,0)
 S:'$D(PSOX("CLERK CODE")) PSOX("CLERK CODE")=DUZ
"RTN","PSOR52",39,0)
 S PSOX("DAW")=$$GETDAW^PSODAWUT(+PSOX("IRXN")),PSOX("NDC")=$$GETNDC^PSSNDCUT($P(PSOX("RX0"),"^",6))
"RTN","PSOR52",40,0)
INITX Q
"RTN","PSOR52",41,0)
 ;
"RTN","PSOR52",42,0)
FILE ;     
"RTN","PSOR52",43,0)
 ;L +^PSRX(PSOX("IRXN")):0
"RTN","PSOR52",44,0)
 I '$D(^PSRX(PSOX("IRXN"),1,0)) S ^(0)="^52.1DA^1^1"
"RTN","PSOR52",45,0)
 E  S ^PSRX(PSOX("IRXN"),1,0)=$P(^PSRX(PSOX("IRXN"),1,0),"^",1,2)_"^"_PSOX("NUMBER")_"^"_($P(^(0),"^",4)+1)
"RTN","PSOR52",46,0)
 F PSOX1=1:1 S PSOR52=$P($T(DD+PSOX1),";;",2,4) Q:PSOR52=""  K PSOY S PSOY=$P(PSOR52,";;") I $D(@PSOY) S $P(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),$P(PSOR52,";;",2)),"^",$P(PSOR52,";;",3))=@PSOY
"RTN","PSOR52",47,0)
 K PSOX1,PSOY
"RTN","PSOR52",48,0)
 S PSOX1="" F  S PSOX1=$O(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1)) Q:PSOX1=""  S ^PSRX(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1)=$G(PSOR52(PSOX("IRXN"),1,PSOX("NUMBER"),PSOX1))
"RTN","PSOR52",49,0)
 K PSOX1
"RTN","PSOR52",50,0)
 S:PSOX("STA")=6 $P(^PSRX(PSOX("IRXN"),"STA"),"^")=0
"RTN","PSOR52",51,0)
 S $P(^PSRX(PSOX("IRXN"),3),"^",1,2)=PSOX("LAST DISPENSED DATE")_"^"_PSOX("NEXT POSSIBLE REFILL")
"RTN","PSOR52",52,0)
 S $P(^PSRX(PSOX("IRXN"),3),"^",4)=PSOX("LAST REFILL DATE")
"RTN","PSOR52",53,0)
 I $D(PSOX("METHOD OF PICK-UP")),PSOX("FILL DATE")'>DT S $P(^PSRX(PSOX("IRXN"),"MP"),"^")=PSOX("METHOD OF PICK-UP")
"RTN","PSOR52",54,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),PSOX("NUMBER"))
"RTN","PSOR52",55,0)
 ;L -^PSRX(PSOX("IRXN"))
"RTN","PSOR52",56,0)
 Q
"RTN","PSOR52",57,0)
 ;
"RTN","PSOR52",58,0)
DIK ;
"RTN","PSOR52",59,0)
 K DIK,DA
"RTN","PSOR52",60,0)
 S DIK="^PSRX(",DA=PSOX("IRXN") D IX1^DIK K DIK
"RTN","PSOR52",61,0)
 I +$G(^PSRX(DA,"IB")),$P(^PSRX(DA,1,PSOX("NUMBER"),0),"^",2)="W" S ^PSRX("ACP",$P(^PSRX(DA,0),"^",2),$P(^PSRX(DA,1,PSOX("NUMBER"),0),"^"),PSOX("NUMBER"),DA)="" K DA
"RTN","PSOR52",62,0)
 D:$T(EN^PSOHDR)]"" EN^PSOHDR("PREF",PSOX("IRXN"))
"RTN","PSOR52",63,0)
 Q
"RTN","PSOR52",64,0)
 ;
"RTN","PSOR52",65,0)
FINISH ;
"RTN","PSOR52",66,0)
 I $G(PSOX("QS"))="S" D  G FINISHX
"RTN","PSOR52",67,0)
 . S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",68,0)
 . D SUS^PSORXL K DA
"RTN","PSOR52",69,0)
 ;
"RTN","PSOR52",70,0)
 ; - Previous ePharmacy Refill was Deleted and a new one is being entered
"RTN","PSOR52",71,0)
 I '$$SUBMIT^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER")),$$STATUS^PSOBPSUT(PSOX("IRXN"),PSOX("NUMBER"))'="" D
"RTN","PSOR52",72,0)
 . D RETRXF^PSOREJU2(PSOX("IRXN"),PSOX("NUMBER"),1)
"RTN","PSOR52",73,0)
 ;
"RTN","PSOR52",74,0)
 I PSOX("FILL DATE")>$S($G(PSOX("LOGIN DATE")):$E(PSOX("LOGIN DATE"),1,7),1:DT),$P(PSOPAR,"^",6) D  G FINISHX
"RTN","PSOR52",75,0)
 .K PSOXRXFL I $D(RXFL(PSOX("IRXN"))) S PSOXRXFL=$G(RXFL(PSOX("IRXN")))
"RTN","PSOR52",76,0)
 .S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",77,0)
 .D SUS^PSORXL K DA
"RTN","PSOR52",78,0)
 .I $G(PSOXRXFL)'="" S RXFL(PSOX("IRXN"))=$G(PSOXRXFL) K PSOXRXFL
"RTN","PSOR52",79,0)
 ;
"RTN","PSOR52",80,0)
 ; - Calling ECME for claims generation and transmission / REJECT handling
"RTN","PSOR52",81,0)
 N ACTION,PSOERX,PSOERF
"RTN","PSOR52",82,0)
 S PSOERX=PSOX("IRXN"),PSOERF=PSOX("NUMBER")
"RTN","PSOR52",83,0)
 I $$SUBMIT^PSOBPSUT(PSOERX,PSOERF) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOR52",84,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOERX,PSOERF,PSOX("FILL DATE"),"RF")
"RTN","PSOR52",85,0)
 . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOR52",86,0)
 . I $$PSOET^PSOREJP3(PSOERX,PSOERF) S ACTION="Q" Q
"RTN","PSOR52",87,0)
 . I $$FIND^PSOREJUT(PSOERX,PSOERF) D
"RTN","PSOR52",88,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOERX,PSOERF,"79,88","OF","IOQ","Q")
"RTN","PSOR52",89,0)
 . I $$STATUS^PSOBPSUT(PSOERX,PSOERF)="E PAYABLE" D
"RTN","PSOR52",90,0)
 . . D SAVNDC^PSSNDCUT(+$$GET1^DIQ(52,PSOERX,6,"I"),$G(PSOSITE),$$GETNDC^PSONDCUT(PSOERX,PSOERF))
"RTN","PSOR52",91,0)
 ;
"RTN","PSOR52",92,0)
 I $G(PSOX("QS"))="Q" D  G FINISHX
"RTN","PSOR52",93,0)
 . I $G(PPL),$L(PPL_PSOX("IRXN")_",")>240 D TRI^PSOBBC D Q^PSORXL K PPL,RXFL
"RTN","PSOR52",94,0)
 . S RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",95,0)
 . I $G(PPL) S PPL=PPL_PSOX("IRXN")_","
"RTN","PSOR52",96,0)
 . E  S PPL=PSOX("IRXN")_","
"RTN","PSOR52",97,0)
 ;
"RTN","PSOR52",98,0)
 I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=PSOX("NUMBER") G FINISHX
"RTN","PSOR52",99,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOR52",100,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSOR52",101,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSOR52",102,0)
 S RXFL(PSOX("IRXN"))=PSOX("NUMBER")
"RTN","PSOR52",103,0)
 ;
"RTN","PSOR52",104,0)
FINISHX ; 
"RTN","PSOR52",105,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSOR52",106,0)
 K PSOX1,PSOX2
"RTN","PSOR52",107,0)
 Q
"RTN","PSOR52",108,0)
EOJ ;
"RTN","PSOR52",109,0)
 I $D(PSOX("OLD MAIL/WINDOW")) S PSOX("MAIL/WINDOW")=PSOX("OLD MAIL/WINDOW") K PSOX("OLD MAIL/WINDOW")
"RTN","PSOR52",110,0)
 S DA=$O(^PS(52.41,"ARF",PSOX("IRXN"),0)) I DA D  S DIK="^PS(52.41," D ^DIK
"RTN","PSOR52",111,0)
 .S PSORFKL=DA D PSOUL^PSSLOCK(PSORFKL_"S") K PSORFKL
"RTN","PSOR52",112,0)
 K PSOR52,DA,DIK
"RTN","PSOR52",113,0)
 Q
"RTN","PSOR52",114,0)
 ;
"RTN","PSOR52",115,0)
DD ;rx data nodes
"RTN","PSOR52",116,0)
 ;;PSOX("PROVIDER");;0;;17
"RTN","PSOR52",117,0)
 ;;PSOX("QTY");;0;;4
"RTN","PSOR52",118,0)
 ;;PSOX("DAYS SUPPLY");;0;;10
"RTN","PSOR52",119,0)
 ;;PSOX("MAIL/WINDOW");;0;;2
"RTN","PSOR52",120,0)
 ;;PSOX("REMARKS");;0;;3
"RTN","PSOR52",121,0)
 ;;PSOX("CLERK CODE");;0;;7
"RTN","PSOR52",122,0)
 ;;PSOX("COST");;0;;11
"RTN","PSOR52",123,0)
 ;;PSOSITE;;0;;9
"RTN","PSOR52",124,0)
 ;;PSOX("LOGIN DATE");;0;;8
"RTN","PSOR52",125,0)
 ;;PSOX("FILL DATE");;0;;1
"RTN","PSOR52",126,0)
 ;;PSOX("PHARMACIST");;0;;5
"RTN","PSOR52",127,0)
 ;;PSOX("LOT #");;0;;6
"RTN","PSOR52",128,0)
 ;;PSOX("DISPENSED DATE");;0;;19
"RTN","PSOR52",129,0)
 ;;PSOX("NDC");;1;;3
"RTN","PSOR52",130,0)
 ;;PSOX("DAW");;EPH;;1
"RTN","PSOR52",131,0)
 ;;PSOX("MANUFACTURER");;0;;14
"RTN","PSOR52",132,0)
 ;;PSOX("EXPIRATION DATE");;0;;15
"RTN","PSOR52",133,0)
 ;;PSOX("GENERIC PROVIDER");;1;;1
"RTN","PSOR52",134,0)
 ;;PSOX("RELEASED DATE/TIME");;0;;18
"RTN","PSOREJP1")
0^2^B82556492
"RTN","PSOREJP1",1,0)
PSOREJP1 ;BIRM/MFR - Third Party Reject Display Screen ;04/29/05
"RTN","PSOREJP1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,281,287,289,290,358**;DEC 1997;Build 35
"RTN","PSOREJP1",3,0)
 ;Reference to File 9002313.93 - BPS NCPDP REJECT CODES supported by IA 4720
"RTN","PSOREJP1",4,0)
 ;Reference to ^PS(59.7 supported by IA 694
"RTN","PSOREJP1",5,0)
 ;Reference to ^PSDRUG("AQ" supported by IA 3165
"RTN","PSOREJP1",6,0)
 ;
"RTN","PSOREJP1",7,0)
EN(RX,REJ,CHANGE) ; Entry point
"RTN","PSOREJP1",8,0)
 ;
"RTN","PSOREJP1",9,0)
 ; - DO NOT change the IF logic below as both of them might get executed (intentional)
"RTN","PSOREJP1",10,0)
 N FILL,LASTLN,PSOTRIC,PSOCODE,PSOTCODE
"RTN","PSOREJP1",11,0)
 S FILL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJP1",12,0)
 S PSOTRIC="",PSOTRIC=$$TRIC(RX,FILL,PSOTRIC),PSOCODE=$$GET1^DIQ(52.25,REJ_","_RX,.01)
"RTN","PSOREJP1",13,0)
 S PSOTCODE=0 S:PSOCODE'=79&(PSOCODE'=88)&(PSOTRIC) PSOTCODE=1
"RTN","PSOREJP1",14,0)
 I $$CLOSED(RX,REJ) D EN^VALM("PSO REJECT DISPLAY - RESOLVED")
"RTN","PSOREJP1",15,0)
 I '$$CLOSED(RX,REJ)&(PSOTRIC) D EN^VALM("PSO REJECT TRICARE")   ;cnf, PSO*7*358, replace PSOTCODE with PSOTRIC
"RTN","PSOREJP1",16,0)
 I '$$CLOSED(RX,REJ)&('PSOTCODE)&('PSOTRIC) D EN^VALM("PSO REJECT DISPLAY")   ;cnf, PSO*7*358, add PSOTRIC check
"RTN","PSOREJP1",17,0)
 D FULL^VALM1
"RTN","PSOREJP1",18,0)
 Q
"RTN","PSOREJP1",19,0)
 ;
"RTN","PSOREJP1",20,0)
HDR      ; - Builds the Header section
"RTN","PSOREJP1",21,0)
 N LINE1,LINE2,X
"RTN","PSOREJP1",22,0)
 S VALMHDR(1)=$$DVINFO^PSOREJU2(RX,FILL,1),VALMHDR(2)=$$PTINFO^PSOREJU2(RX,1)
"RTN","PSOREJP1",23,0)
 ;cnf, PSO*7*358, add REJ to parameter list for RXINFO^PSOREJP3
"RTN","PSOREJP1",24,0)
 S VALMHDR(3)=$$RXINFO^PSOREJP3(RX,FILL,1),VALMHDR(4)=$$RXINFO^PSOREJP3(RX,FILL,2,REJ)
"RTN","PSOREJP1",25,0)
 Q
"RTN","PSOREJP1",26,0)
 ;
"RTN","PSOREJP1",27,0)
TRIC(RX,RFL,PSOTRIC) ; - Return 1 for TRICARE or 0 (zero) for not TRICARE
"RTN","PSOREJP1",28,0)
 S PSOTRIC="",PSOTRIC=$S(RFL=0&($$GET1^DIQ(52,RX_",",85,"I")="T"):1,$$GET1^DIQ(52.1,RFL_","_RX_",",85,"I")="T":1,1:0)
"RTN","PSOREJP1",29,0)
 Q PSOTRIC
"RTN","PSOREJP1",30,0)
 ;
"RTN","PSOREJP1",31,0)
INIT ; Builds the Body section
"RTN","PSOREJP1",32,0)
 N DATA,LINE
"RTN","PSOREJP1",33,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJP1",34,0)
 S PSOTRIC="",PSOTRIC=$$TRIC(RX,RFL,PSOTRIC)
"RTN","PSOREJP1",35,0)
 F I=1:1:$G(LASTLN) D RESTORE^VALM10(I)
"RTN","PSOREJP1",36,0)
 K ^TMP("PSOREJP1",$J) S VALMCNT=0,LINE=0
"RTN","PSOREJP1",37,0)
 D GET^PSOREJU2(RX,FILL,.DATA,REJ,1)
"RTN","PSOREJP1",38,0)
 D REJ                   ; Display the REJECT Information
"RTN","PSOREJP1",39,0)
 D OTH                   ; Display the Other Rejects Information
"RTN","PSOREJP1",40,0)
 D COM^PSOREJP3          ; Display the Comment
"RTN","PSOREJP1",41,0)
 D INS                   ; Display the Insurance Information
"RTN","PSOREJP1",42,0)
 D CLS                   ; Display the Resolution Information
"RTN","PSOREJP1",43,0)
 S VALMCNT=LINE
"RTN","PSOREJP1",44,0)
 Q
"RTN","PSOREJP1",45,0)
 ;
"RTN","PSOREJP1",46,0)
REJ ; - DUR Information
"RTN","PSOREJP1",47,0)
 N TYPE,PFLDT,TREJ,TDATA,PSOTRIC,PSOET S TDATA=""
"RTN","PSOREJP1",48,0)
 S PSOTRIC="",PSOTRIC=$$TRIC(RX,FILL,PSOTRIC)
"RTN","PSOREJP1",49,0)
 I $G(PSOTRIC) D
"RTN","PSOREJP1",50,0)
 . D SETLN("REJECT Information"_$S($G(PSOTRIC):" (TRICARE)",1:""),1,1)
"RTN","PSOREJP1",51,0)
 . S TDATA=$$EXP(DATA(REJ,"CODE"))_" ("_$G(DATA(REJ,"CODE"))_") "
"RTN","PSOREJP1",52,0)
 . D SETLN("Date/Time     : "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME"))),,,18)
"RTN","PSOREJP1",53,0)
 . D SETLN("Reject(s)     : "_TDATA,,,18)
"RTN","PSOREJP1",54,0)
 . F I=1:1 Q:'$D(TDATA(I))  D SETLN("              : "_TDATA(I),,,18)
"RTN","PSOREJP1",55,0)
 . ;cnf, PSO*7*358, if TRICARE non-billable then reset Status line
"RTN","PSOREJP1",56,0)
 . S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",57,0)
 . I PSOET D SETLN("Status        : NO CLAIM SUBMITTED")
"RTN","PSOREJP1",58,0)
 . I 'PSOET D SETLN("Status        : "_$G(DATA(REJ,"STATUS"))_" - "_$$STATUS^PSOBPSUT(RX,FILL),,,18)
"RTN","PSOREJP1",59,0)
 I '$G(PSOTRIC) D
"RTN","PSOREJP1",60,0)
 .D SETLN("REJECT Information",1,1)
"RTN","PSOREJP1",61,0)
 .S TYPE=$S($G(DATA(REJ,"CODE"))=79:"79 - REFILL TOO SOON",1:"")
"RTN","PSOREJP1",62,0)
 .I TYPE="" S TYPE=DATA(REJ,"CODE")_" - "_$E($$EXP(DATA(REJ,"CODE")),1,23)_"-"
"RTN","PSOREJP1",63,0)
 .D SETLN("Reject Type    : "_TYPE_" received on "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME"))),,,18)
"RTN","PSOREJP1",64,0)
 .D SETLN("Reject Status  : "_$G(DATA(REJ,"STATUS")),,,18)
"RTN","PSOREJP1",65,0)
 .D SET("PAYER MESSAGE",63)
"RTN","PSOREJP1",66,0)
 .D SET("REASON",63)
"RTN","PSOREJP1",67,0)
 .S PFLDT=$$FMTE^XLFDT($G(DATA(REJ,"PLAN PREVIOUS FILL DATE")))
"RTN","PSOREJP1",68,0)
 .D SET("DUR TEXT",63,$S(PFLDT="":1,1:0))
"RTN","PSOREJP1",69,0)
 .I PFLDT'="" D SETLN("Last Fill Date : "_PFLDT_" (from payer)",,1,18)
"RTN","PSOREJP1",70,0)
 Q
"RTN","PSOREJP1",71,0)
 ;
"RTN","PSOREJP1",72,0)
OTH ; - Other Rejects Information
"RTN","PSOREJP1",73,0)
 N LST,I,RJC,J,LAST
"RTN","PSOREJP1",74,0)
 S LST=$G(DATA(REJ,"OTHER REJECTS")) I LST="" Q
"RTN","PSOREJP1",75,0)
 D SETLN()
"RTN","PSOREJP1",76,0)
 D SETLN("OTHER REJECTS",1,1)
"RTN","PSOREJP1",77,0)
 F I=1:1:$L(LST,",") S RJC=$P(LST,",",I) D
"RTN","PSOREJP1",78,0)
 . S LAST=1 F J=(I+1):1:$L(LST,",") I $P(LST,",",J)'="" S LAST=0 Q
"RTN","PSOREJP1",79,0)
 . I RJC'="" D SETLN(RJC_" - "_$$EXP(RJC),,$S(LAST:1,1:0),6)
"RTN","PSOREJP1",80,0)
 Q
"RTN","PSOREJP1",81,0)
 ;
"RTN","PSOREJP1",82,0)
INS ; - Insurance Information
"RTN","PSOREJP1",83,0)
 D SETLN()
"RTN","PSOREJP1",84,0)
 D SETLN("INSURANCE Information",1,1)
"RTN","PSOREJP1",85,0)
 N PSOINS,PSOINS1,I
"RTN","PSOREJP1",86,0)
 S PSOINS=$G(DATA(REJ,"INSURANCE NAME"))
"RTN","PSOREJP1",87,0)
 F I=1:1:(50-($L(PSOINS)+18)) S PSOINS=PSOINS_" "
"RTN","PSOREJP1",88,0)
 S PSOINS1=$G(DATA(REJ,"COB"))
"RTN","PSOREJP1",89,0)
 I PSOINS1="SECONDARY" S PSOINS=PSOINS_"Coord. Of Benefits: "_PSOINS1
"RTN","PSOREJP1",90,0)
 D SETLN("Insurance      : "_PSOINS,,,18)
"RTN","PSOREJP1",91,0)
 D SETLN("Contact        : "_$G(DATA(REJ,"PLAN CONTACT")),,,18)
"RTN","PSOREJP1",92,0)
 D SETLN("Group Name     : "_$G(DATA(REJ,"GROUP NAME")),,,18)
"RTN","PSOREJP1",93,0)
 D SETLN("Group Number   : "_$G(DATA(REJ,"GROUP NUMBER")),,,18)
"RTN","PSOREJP1",94,0)
 D SETLN("Cardholder ID  : "_$G(DATA(REJ,"CARDHOLDER ID")),,1,18)
"RTN","PSOREJP1",95,0)
 Q
"RTN","PSOREJP1",96,0)
 ;
"RTN","PSOREJP1",97,0)
CLS ; - Resolution Information
"RTN","PSOREJP1",98,0)
 N X
"RTN","PSOREJP1",99,0)
 I '$$CLOSED(RX,REJ) Q
"RTN","PSOREJP1",100,0)
 D SETLN()
"RTN","PSOREJP1",101,0)
 D SETLN("RESOLUTION Information",1,1)
"RTN","PSOREJP1",102,0)
 D SETLN("Resolved By    : "_$G(DATA(REJ,"CLOSED BY")),,,18)
"RTN","PSOREJP1",103,0)
 D SETLN("Date/Time      : "_$G(DATA(REJ,"CLOSED DATE/TIME")),,,18)
"RTN","PSOREJP1",104,0)
 I $G(DATA(REJ,"CLOSE COMMENTS"))'="" D SET("CLOSE COMMENTS",63)
"RTN","PSOREJP1",105,0)
 I $G(DATA(REJ,"COD1"))'="" D SETLN("Reason for Svc : "_$$OVRX^PSOREJU1(1,$G(DATA(REJ,"COD1"))),,,18)
"RTN","PSOREJP1",106,0)
 I $G(DATA(REJ,"COD2"))'="" D SETLN("Profes. Svc    : "_$$OVRX^PSOREJU1(2,$G(DATA(REJ,"COD2"))),,,18)
"RTN","PSOREJP1",107,0)
 I $G(DATA(REJ,"COD3"))'="" D SETLN("Result of Svc  : "_$$OVRX^PSOREJU1(3,$G(DATA(REJ,"COD3"))),,,18)
"RTN","PSOREJP1",108,0)
 I $G(DATA(REJ,"CLA CODE"))'="" D
"RTN","PSOREJP1",109,0)
 . N CLAPNTR S CLAPNTR=$$GET1^DIQ(52.25,REJ_","_RX_",",24,"I")
"RTN","PSOREJP1",110,0)
 . S X=DATA(REJ,"CLA CODE")_" - "_$$GET1^DIQ(9002313.25,CLAPNTR,".02")
"RTN","PSOREJP1",111,0)
 . D SETLN("Clarific. Code : "_X,,,18)
"RTN","PSOREJP1",112,0)
 I $G(DATA(REJ,"PRIOR AUTH TYPE"))'="" D
"RTN","PSOREJP1",113,0)
 . S X=$$GET1^DIQ(52.25,REJ_","_RX,25,"I")_" - "_(DATA(REJ,"PRIOR AUTH TYPE"))
"RTN","PSOREJP1",114,0)
 . D SETLN("Prior Auth.Type: "_X,,,18),SETLN("Prior Auth. #  : "_DATA(REJ,"PRIOR AUTH NUMBER"),,,18)
"RTN","PSOREJP1",115,0)
 D SETLN("Reason         : "_$G(DATA(REJ,"CLOSE REASON")),,1,18)
"RTN","PSOREJP1",116,0)
 Q
"RTN","PSOREJP1",117,0)
 ;
"RTN","PSOREJP1",118,0)
 ;
"RTN","PSOREJP1",119,0)
SET(FIELD,L,UND) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJP1",120,0)
 N TXT,T
"RTN","PSOREJP1",121,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L D SETLN($$LABEL(FIELD)_TXT,,$S($G(UND):1,1:0),80-L) Q
"RTN","PSOREJP1",122,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJP1",123,0)
 . I I=1 D SETLN($$LABEL(FIELD)_$E(TXT,1,L),,,80-L) S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJP1",124,0)
 . S T="",$E(T,81-L)=$E(TXT,1,L) D SETLN(T,,$S($E(TXT,L+1,999)=""&$G(UND):1,1:0),80-L) S TXT=$E(TXT,L+1,999)
"RTN","PSOREJP1",125,0)
 Q
"RTN","PSOREJP1",126,0)
 ;
"RTN","PSOREJP1",127,0)
LABEL(FIELD) ; Sets the label for the field
"RTN","PSOREJP1",128,0)
 I FIELD="REASON" Q "Reason         : "
"RTN","PSOREJP1",129,0)
 I FIELD="PAYER MESSAGE" Q "Payer Message  : "
"RTN","PSOREJP1",130,0)
 I FIELD="DUR TEXT" Q "DUR Text       : "
"RTN","PSOREJP1",131,0)
 I FIELD="CLOSE COMMENTS" Q "Comments       : "
"RTN","PSOREJP1",132,0)
 Q ""
"RTN","PSOREJP1",133,0)
 ;
"RTN","PSOREJP1",134,0)
VIEW ; - Rx View hidden action
"RTN","PSOREJP1",135,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",136,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",137,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",138,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",139,0)
 ;
"RTN","PSOREJP1",140,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",141,0)
 DO
"RTN","PSOREJP1",142,0)
 . N PSOVDA,DA,PS
"RTN","PSOREJP1",143,0)
 . S (PSOVDA,DA)=RX,PS="REJECT"
"RTN","PSOREJP1",144,0)
 . N RX,REJ,FILL,LINE,TITLE D DP^PSORXVW
"RTN","PSOREJP1",145,0)
 ;
"RTN","PSOREJP1",146,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",147,0)
 Q
"RTN","PSOREJP1",148,0)
 ;
"RTN","PSOREJP1",149,0)
EDT ; - Rx Edit hidden action
"RTN","PSOREJP1",150,0)
 N VALMCNT,TITLE
"RTN","PSOREJP1",151,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",152,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",153,0)
 S TITLE=VALM("TITLE")
"RTN","PSOREJP1",154,0)
 ;
"RTN","PSOREJP1",155,0)
 ; - DO structure used to avoid losing variables RX,FILL,REJ,LINE,TITLE
"RTN","PSOREJP1",156,0)
 DO
"RTN","PSOREJP1",157,0)
 . N PSOSITE,ORN,PSOPAR,PSOLIST
"RTN","PSOREJP1",158,0)
 . S PSOSITE=$$RXSITE^PSOBPSUT(RX,FILL),ORN=RX
"RTN","PSOREJP1",159,0)
 . S PSOPAR=$G(^PS(59,PSOSITE,1)),PSOLIST(1)=ORN_","
"RTN","PSOREJP1",160,0)
 . N RX,REJ,FILL,LINE,TITLE D EPH^PSORXEDT
"RTN","PSOREJP1",161,0)
 ;
"RTN","PSOREJP1",162,0)
 K VALMBCK I $$CLOSED(RX,REJ),$D(PSOSTFLT),PSOSTFLT="U" S CHANGE=1 Q
"RTN","PSOREJP1",163,0)
 S VALMBCK="R",VALM("TITLE")=TITLE
"RTN","PSOREJP1",164,0)
 Q
"RTN","PSOREJP1",165,0)
 ;
"RTN","PSOREJP1",166,0)
OVR ; - Override a REJECT action
"RTN","PSOREJP1",167,0)
 N PSOET
"RTN","PSOREJP1",168,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",169,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",170,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",171,0)
 I PSOET S VALMSG="OVR not allowed for TRICARE Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",172,0)
 N COD1,COD2,COD3
"RTN","PSOREJP1",173,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",174,0)
 S COD1=$$OVRCOD^PSOREJU1(1,$$GET1^DIQ(52.25,REJ_","_RX,14)) I COD1="^" S VALMBCK="R" Q
"RTN","PSOREJP1",175,0)
 S COD2=$$OVRCOD^PSOREJU1(2) I COD2="^" S VALMBCK="R" Q
"RTN","PSOREJP1",176,0)
 S COD3=$$OVRCOD^PSOREJU1(3) I COD3="^" S VALMBCK="R" Q
"RTN","PSOREJP1",177,0)
 D OVRDSP^PSOREJU1(COD1_"^"_COD2_"^"_COD3)
"RTN","PSOREJP1",178,0)
 D SEND^PSOREJP3(COD1,COD2,COD3)
"RTN","PSOREJP1",179,0)
 Q
"RTN","PSOREJP1",180,0)
 ;
"RTN","PSOREJP1",181,0)
RES ; - Re-submit a claim action
"RTN","PSOREJP1",182,0)
 N PSOET
"RTN","PSOREJP1",183,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",184,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",185,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",186,0)
 I PSOET S VALMSG="RES not allowed for TRICARE Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",187,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",188,0)
 D SEND^PSOREJP3()
"RTN","PSOREJP1",189,0)
 Q
"RTN","PSOREJP1",190,0)
 ;
"RTN","PSOREJP1",191,0)
CLA ; - Submit Clarification Code
"RTN","PSOREJP1",192,0)
 N CLA,PSOET
"RTN","PSOREJP1",193,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",194,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",195,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",196,0)
 I PSOET S VALMSG="CLA not allowed for TRICARE Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",197,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",198,0)
 S CLA=$$CLA^PSOREJU1() I CLA="^" S VALMBCK="R" Q
"RTN","PSOREJP1",199,0)
 W ! D SEND^PSOREJP3(,,,CLA)
"RTN","PSOREJP1",200,0)
 Q
"RTN","PSOREJP1",201,0)
 ;
"RTN","PSOREJP1",202,0)
PA ; - Submit Prior Authorization
"RTN","PSOREJP1",203,0)
 N PA,PSOET
"RTN","PSOREJP1",204,0)
 I $$CLOSED(RX,REJ,1) Q
"RTN","PSOREJP1",205,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP1",206,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP1",207,0)
 I PSOET S VALMSG="PA not allowed for TRICARE Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP1",208,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",209,0)
 S PA=$$PA^PSOREJU2() I PA="^" S VALMBCK="R" Q
"RTN","PSOREJP1",210,0)
 W ! D SEND^PSOREJP3(,,,,PA)
"RTN","PSOREJP1",211,0)
 Q
"RTN","PSOREJP1",212,0)
 ;
"RTN","PSOREJP1",213,0)
MP ; - Patient Medication Profile
"RTN","PSOREJP1",214,0)
 I $G(PSOBACK) D  Q
"RTN","PSOREJP1",215,0)
 . S VALMSG="Not available through Backdoor!",VALMBCK="R"
"RTN","PSOREJP1",216,0)
 N SITE,PATIENT
"RTN","PSOREJP1",217,0)
 D FULL^VALM1 W !
"RTN","PSOREJP1",218,0)
 S SITE=+$$RXSITE^PSOBPSUT(RX,FILL) S:$G(PSOSITE) SITE=PSOSITE
"RTN","PSOREJP1",219,0)
 S PATIENT=+$$GET1^DIQ(52,RX,2,"I")
"RTN","PSOREJP1",220,0)
 D LST^PSOPMP0(SITE,PATIENT) S VALMBCK="R"
"RTN","PSOREJP1",221,0)
 Q
"RTN","PSOREJP1",222,0)
 ;
"RTN","PSOREJP1",223,0)
EXIT ;
"RTN","PSOREJP1",224,0)
 K ^TMP("PSOREJP1",$J)
"RTN","PSOREJP1",225,0)
 Q
"RTN","PSOREJP1",226,0)
 ;
"RTN","PSOREJP1",227,0)
SETLN(TEXT,REV,UND,HIG) ; Sets a line to be displayed in the Body section
"RTN","PSOREJP1",228,0)
 N X
"RTN","PSOREJP1",229,0)
 S:$G(TEXT)="" $E(TEXT,80)=""
"RTN","PSOREJP1",230,0)
 S:$L(TEXT)>80 TEXT=$E(TEXT,1,80)
"RTN","PSOREJP1",231,0)
 S LINE=LINE+1,^TMP("PSOREJP1",$J,LINE,0)=$G(TEXT)
"RTN","PSOREJP1",232,0)
 ;
"RTN","PSOREJP1",233,0)
 I LINE>$G(LASTLN) D SAVE^VALM10(LINE) S LASTLN=LINE
"RTN","PSOREJP1",234,0)
 ;
"RTN","PSOREJP1",235,0)
 I $G(REV) D  Q
"RTN","PSOREJP1",236,0)
 . D CNTRL^VALM10(LINE,1,$L(TEXT),IORVON,IOINORM)
"RTN","PSOREJP1",237,0)
 . I $G(UND) D CNTRL^VALM10(LINE,$L(TEXT)+1,80,IOUON,IOINORM)
"RTN","PSOREJP1",238,0)
 I $G(UND) D CNTRL^VALM10(LINE,1,80,IOUON,IOINORM)
"RTN","PSOREJP1",239,0)
 I $G(HIG) D
"RTN","PSOREJP1",240,0)
 . D CNTRL^VALM10(LINE,HIG,80,IOINHI_$S($G(UND):IOUON,1:""),IOINORM)
"RTN","PSOREJP1",241,0)
 Q
"RTN","PSOREJP1",242,0)
HELP ;
"RTN","PSOREJP1",243,0)
 Q
"RTN","PSOREJP1",244,0)
 ;
"RTN","PSOREJP1",245,0)
CLOSED(RX,REJ,MSG) ; Returns whether the REJECT is RESOLVED or NOT
"RTN","PSOREJP1",246,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,10,"I") D:$G(MSG)  Q 1
"RTN","PSOREJP1",247,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP1",248,0)
 Q 0
"RTN","PSOREJP1",249,0)
 ;
"RTN","PSOREJP1",250,0)
REOPN(RX,REJ) ; Returns whether the REJECT was RE-OPENED or NOT
"RTN","PSOREJP1",251,0)
 Q $S($$GET1^DIQ(52.25,REJ_","_RX,23)="":0,1:1)
"RTN","PSOREJP1",252,0)
 ;
"RTN","PSOREJP1",253,0)
EXP(CODE) ; - Returns the explanation field (.02) for a reject code
"RTN","PSOREJP1",254,0)
 ;  Input:  (r) CODE - .01 field (Code) value from file 9002313.93
"RTN","PSOREJP1",255,0)
 ; Output: .02 field (Explanation) value from file 9002313.93
"RTN","PSOREJP1",256,0)
 N DIC,X,Y
"RTN","PSOREJP1",257,0)
 S DIC=9002313.93,DIC(0)="Z",X=CODE D ^DIC
"RTN","PSOREJP1",258,0)
 Q $P($G(Y(0)),"^",2)
"RTN","PSOREJP1",259,0)
 ;
"RTN","PSOREJP1",260,0)
OUT(RX) ; - Supported call by outside PROTOCOLs to act on specific REJECTs
"RTN","PSOREJP1",261,0)
 N I,RFL,DATA,REJ,PSOBACK,VALMCNT,RXN
"RTN","PSOREJP1",262,0)
 I '$D(^XUSEC("PSORPH",DUZ)) D  Q
"RTN","PSOREJP1",263,0)
 . S VALMSG="PSORPH key required to use the REJ action.",VALMBCK="R"
"RTN","PSOREJP1",264,0)
 I $G(PS)="REJECT" D
"RTN","PSOREJP1",265,0)
 . S VALMSG="REJ action is not available at this point.",VALMBCK="R"
"RTN","PSOREJP1",266,0)
 S PSOBACK=1
"RTN","PSOREJP1",267,0)
 S (RFL,I)=0 F I=1:1 Q:'$D(^PSRX(RX,1,I))  S RFL=I
"RTN","PSOREJP1",268,0)
 S X=$$FIND^PSOREJUT(RX,RFL,.DATA) S REJ=$O(DATA(""))
"RTN","PSOREJP1",269,0)
 I '$G(REJ) S VALMSG="Invalid selection!",VALMBCK="R" Q
"RTN","PSOREJP1",270,0)
 D EN(RX,REJ) S VALMBCK="R"
"RTN","PSOREJP1",271,0)
 Q
"RTN","PSOREJP1",272,0)
 ;
"RTN","PSOREJP2")
0^6^B86681161
"RTN","PSOREJP2",1,0)
PSOREJP2 ;BIRM/MFR - Third Party Rejects View/Process ;04/28/05
"RTN","PSOREJP2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,287,289,358**;DEC 1997;Build 35
"RTN","PSOREJP2",3,0)
 ;Reference to ^PSSLOCK supported by IA #2789
"RTN","PSOREJP2",4,0)
 ; 
"RTN","PSOREJP2",5,0)
 N PSORJSRT,PSOPTFLT,PSODRFLT,PSORXFLT,PSOBYFLD,PSOSTFLT,DIR,DIRUT,DUOUT,DTOUT
"RTN","PSOREJP2",6,0)
 N PSOINFLT,PSODTRNG,PSOINGRP,PSOTRITG
"RTN","PSOREJP2",7,0)
 S PSORJASC=1,PSOINGRP=0,PSOTRITG=1
"RTN","PSOREJP2",8,0)
 ;
"RTN","PSOREJP2",9,0)
 ; - Division/Site selection
"RTN","PSOREJP2",10,0)
 D SEL^PSOREJU1("DIVISION","^PS(59,",.PSOREJST,$$GET1^DIQ(59,+$G(PSOSITE),.01)) I $G(PSOREJST)="^" G EXIT
"RTN","PSOREJP2",11,0)
 ;
"RTN","PSOREJP2",12,0)
 ; - Date range selection
"RTN","PSOREJP2",13,0)
 W ! S PSODTRNG=$$DTRNG("T-90","T") I PSODTRNG="^" G EXIT
"RTN","PSOREJP2",14,0)
 ;
"RTN","PSOREJP2",15,0)
SEL ; - Field Selection (Patient/Drug/Rx)
"RTN","PSOREJP2",16,0)
 S DIR(0)="S^P:PATIENT;D:DRUG;R:Rx;I:INSURANCE",DIR("B")="P"
"RTN","PSOREJP2",17,0)
 S DIR("A")="By (P)atient, (D)rug, (R)x or (I)nsurance" D ^DIR I $D(DIRUT) G EXIT
"RTN","PSOREJP2",18,0)
 S PSOBYFLD=Y,DIR("B")=""
"RTN","PSOREJP2",19,0)
 ;
"RTN","PSOREJP2",20,0)
 I PSOBYFLD="P" D  I $G(PSOPTFLT)="^" G SEL
"RTN","PSOREJP2",21,0)
 . S (PSODRFLT,PSORXFLT,PSOINFLT)="ALL",PSORJSRT="DR"
"RTN","PSOREJP2",22,0)
 . D SEL^PSOREJU1("PATIENT","^DPT(",.PSOPTFLT)
"RTN","PSOREJP2",23,0)
 ;
"RTN","PSOREJP2",24,0)
 I PSOBYFLD="D" D  I $G(PSODRFLT)="^" G SEL
"RTN","PSOREJP2",25,0)
 . S (PSOPTFLT,PSORXFLT,PSOINFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",26,0)
 . D SEL^PSOREJU1("DRUG","^PSDRUG(",.PSODRFLT)
"RTN","PSOREJP2",27,0)
 ;
"RTN","PSOREJP2",28,0)
 I PSOBYFLD="R" D  I $D(DUOUT)!$D(DTOUT)!'$G(PSORXFLT) G SEL
"RTN","PSOREJP2",29,0)
 . S (PSOPTFLT,PSODRFLT,PSOINFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",30,0)
 . N DIC,Y,X,OK K PSOSTFLT,PSORXFLT
"RTN","PSOREJP2",31,0)
 . S DIC=52,DIC(0)="QEZA",DIC("A")="PRESCRIPTION: "
"RTN","PSOREJP2",32,0)
 . F  W ! D ^DIC D  Q:$G(OK) 
"RTN","PSOREJP2",33,0)
 . . I $D(DUOUT)!$D(DTOUT)!(X="") S OK=1 Q
"RTN","PSOREJP2",34,0)
 . . I '$O(^PSRX(+Y,"REJ",0)) D  Q
"RTN","PSOREJP2",35,0)
 . . . W !?40,"Prescription does not have rejects!",$C(7)
"RTN","PSOREJP2",36,0)
 . . S PSORXFLT=+Y,OK=1
"RTN","PSOREJP2",37,0)
 ;
"RTN","PSOREJP2",38,0)
 I PSOBYFLD="I" D  I $O(PSOINFLT(""))="" G SEL
"RTN","PSOREJP2",39,0)
 . S (PSOPTFLT,PSODRFLT,PSORXFLT)="ALL",PSORJSRT="PA"
"RTN","PSOREJP2",40,0)
 . N DIR,Y,X,OK K PSOINFLT W !
"RTN","PSOREJP2",41,0)
 . S DIR("A",1)="Enter the whole or part of the Insurance Company"
"RTN","PSOREJP2",42,0)
 . S DIR("A",2)="name for which you want to view/process REJECTS."
"RTN","PSOREJP2",43,0)
 . S DIR("A",3)=""
"RTN","PSOREJP2",44,0)
 . S DIR(0)="FO^3:30",DIR("A")="  INSURANCE"
"RTN","PSOREJP2",45,0)
 . F  D ^DIR D  Q:$G(OK) 
"RTN","PSOREJP2",46,0)
 . . I $D(DIRUT)!(X="") S OK=1 Q
"RTN","PSOREJP2",47,0)
 . . S PSOINFLT(X)="" K DIR("A") S DIR("A")="ANOTHER ONE"
"RTN","PSOREJP2",48,0)
 ;
"RTN","PSOREJP2",49,0)
 ; - Status Selection (UNRESOLVED or RESOLVED)
"RTN","PSOREJP2",50,0)
 I $G(PSOSTFLT)="" D  I $D(DIRUT) G EXIT
"RTN","PSOREJP2",51,0)
 . S DIR(0)="S^U:UNRESOLVED;R:RESOLVED;B:BOTH",DIR("B")="B"
"RTN","PSOREJP2",52,0)
 . S DIR("A")="(U)NRESOLVED, (R)RESOLVED or (B)OTH REJECT statuses" D ^DIR
"RTN","PSOREJP2",53,0)
 . S PSOSTFLT=Y
"RTN","PSOREJP2",54,0)
 ;
"RTN","PSOREJP2",55,0)
 D LST^PSOREJP0("VP")
"RTN","PSOREJP2",56,0)
 ;
"RTN","PSOREJP2",57,0)
EXIT Q
"RTN","PSOREJP2",58,0)
 ;
"RTN","PSOREJP2",59,0)
CLO      ; - Ignore a REJECT hidden action
"RTN","PSOREJP2",60,0)
 N PSOTRIC,X,PSOET
"RTN","PSOREJP2",61,0)
 ;
"RTN","PSOREJP2",62,0)
 I '$D(FILL) S FILL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJP2",63,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)
"RTN","PSOREJP2",64,0)
 ;
"RTN","PSOREJP2",65,0)
 ;reference to ^XUSEC( supported by IA 10076
"RTN","PSOREJP2",66,0)
 ;bld, PSO*7*358
"RTN","PSOREJP2",67,0)
 I PSOTRIC,'$D(^XUSEC("PSO TRICARE",DUZ)) S VALMSG="Action Requires <PSO TRICARE> security key",VALMBCK="R" Q
"RTN","PSOREJP2",68,0)
 ;if tricare and user has security key, prompt to continue or not
"RTN","PSOREJP2",69,0)
 ;
"RTN","PSOREJP2",70,0)
 ;
"RTN","PSOREJP2",71,0)
 I PSOTRIC,'$$CONT^PSOREJU1() Q
"RTN","PSOREJP2",72,0)
 ;
"RTN","PSOREJP2",73,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",74,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R"
"RTN","PSOREJP2",75,0)
 N DIR,COM
"RTN","PSOREJP2",76,0)
 D FULL^VALM1
"RTN","PSOREJP2",77,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",78,0)
 W !
"RTN","PSOREJP2",79,0)
 S:PSOTRIC COM=$$TCOM^PSOREJP3() S:'PSOTRIC COM=$$COM^PSOREJU1() I COM="^" S VALMBCK="R" Q
"RTN","PSOREJP2",80,0)
 W !
"RTN","PSOREJP2",81,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="NO"
"RTN","PSOREJP2",82,0)
 S DIR("A",1)="     When you confirm this REJECT will be marked RESOLVED."
"RTN","PSOREJP2",83,0)
 S DIR("A",2)=" "
"RTN","PSOREJP2",84,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP2",85,0)
 W ?40,"[Closing..." D CLOSE^PSOREJUT(RX,FILL,REJ,DUZ,6,COM) W "OK]",!,$C(7) H 1
"RTN","PSOREJP2",86,0)
 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP2",87,0)
 ;
"RTN","PSOREJP2",88,0)
 I $$PTLBL(RX,FILL) D PRINT^PSOREJP3(RX,FILL)
"RTN","PSOREJP2",89,0)
 I PSOTRIC D
"RTN","PSOREJP2",90,0)
 .S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP2",91,0)
 .D AUDIT^PSOTRI(RX,FILL,,COM,$S(PSOET:"N",1:"R"))
"RTN","PSOREJP2",92,0)
 ;
"RTN","PSOREJP2",93,0)
 Q
"RTN","PSOREJP2",94,0)
 ;
"RTN","PSOREJP2",95,0)
OPN ; - Re-open a Closed/Resolved Reject
"RTN","PSOREJP2",96,0)
 I '$$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",97,0)
 . S VALMSG="This Reject is NOT marked resolved!",VALMBCK="R"
"RTN","PSOREJP2",98,0)
 ;cnf, PSO*7*358, check for discontinued and not released
"RTN","PSOREJP2",99,0)
 ;  12 - DISCONTINUED
"RTN","PSOREJP2",100,0)
 ;  14 - DISCONTINUED BY PROVIDER
"RTN","PSOREJP2",101,0)
 ;  15 - DISCONTINUED (EDIT)
"RTN","PSOREJP2",102,0)
 N DCSTAT,PSOREL
"RTN","PSOREJP2",103,0)
 S DCSTAT=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOREJP2",104,0)
 S PSOREL=0 D
"RTN","PSOREJP2",105,0)
 . I 'FILL S PSOREL=+$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOREJP2",106,0)
 . I FILL S PSOREL=+$$GET1^DIQ(52.1,FILL_","_RX,17,"I")
"RTN","PSOREJP2",107,0)
 I 'PSOREL,"/12/14/15/"[("/"_DCSTAT_"/") S VALMSG="Discontinued Rx has not been released.",VALMBCK="R" Q
"RTN","PSOREJP2",108,0)
 N DIR,COM,REJDATA,NEWDATA,X,REOPEN
"RTN","PSOREJP2",109,0)
 D FULL^VALM1
"RTN","PSOREJP2",110,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q
"RTN","PSOREJP2",111,0)
 W !
"RTN","PSOREJP2",112,0)
 S DIR(0)="Y",DIR("A")="     Confirm",DIR("B")="NO"
"RTN","PSOREJP2",113,0)
 S DIR("A",1)="     When you confirm this REJECT will be marked UNRESOLVED."
"RTN","PSOREJP2",114,0)
 S DIR("A",2)=" "
"RTN","PSOREJP2",115,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP2",116,0)
 ;
"RTN","PSOREJP2",117,0)
 W ?40,"[Re-opening..."
"RTN","PSOREJP2",118,0)
 K REJDATA D GET^PSOREJU2(RX,FILL,.REJDATA,REJ,1) D SETOPN^PSOREJU2(RX,REJ)
"RTN","PSOREJP2",119,0)
 K NEWDATA M NEWDATA=REJDATA(REJ) S NEWDATA("PHARMACIST")=DUZ
"RTN","PSOREJP2",120,0)
 S REOPEN=1 D SAVE^PSOREJUT(RX,FILL,.NEWDATA,REOPEN)
"RTN","PSOREJP2",121,0)
 I $G(NEWDATA("REJECT IEN")),$D(REJDATA(REJ,"COMMENTS")) D
"RTN","PSOREJP2",122,0)
 . S COM=0 F  S COM=$O(REJDATA(REJ,"COMMENTS",COM)) Q:'COM  D
"RTN","PSOREJP2",123,0)
 . . S X(1)=REJDATA(REJ,"COMMENTS",COM,"COMMENTS")
"RTN","PSOREJP2",124,0)
 . . S X(2)=REJDATA(REJ,"COMMENTS",COM,"DATE/TIME")
"RTN","PSOREJP2",125,0)
 . . S X(3)=REJDATA(REJ,"COMMENTS",COM,"USER")
"RTN","PSOREJP2",126,0)
 . . D SAVECOM^PSOREJP3(RX,NEWDATA("REJECT IEN"),X(1),X(2),X(3))
"RTN","PSOREJP2",127,0)
 D RETRXF^PSOREJU2(RX,FILL,0)
"RTN","PSOREJP2",128,0)
 W "OK]",!,$C(7) H 1
"RTN","PSOREJP2",129,0)
 S CHANGE=1
"RTN","PSOREJP2",130,0)
 Q
"RTN","PSOREJP2",131,0)
 ;
"RTN","PSOREJP2",132,0)
CHG ; - Change Suspense Date action
"RTN","PSOREJP2",133,0)
 N PSOET
"RTN","PSOREJP2",134,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP2",135,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R" W $C(7)
"RTN","PSOREJP2",136,0)
 ;
"RTN","PSOREJP2",137,0)
 ;cnf, PSO*7*358, add PSOET logic for Tricare non-billable
"RTN","PSOREJP2",138,0)
 S PSOET=$$PSOET^PSOREJP3(RX,FILL)
"RTN","PSOREJP2",139,0)
 I PSOET S VALMSG="CSD not allowed for TRICARE Non-Billable claim.",VALMBCK="R" Q
"RTN","PSOREJP2",140,0)
 ;
"RTN","PSOREJP2",141,0)
 N SUSDT,PSOMSG,Y,SUSRX,%DT,DA,DIE,DR,ISSDT,EXPDT,PSOMSG,CUTDT,FILDT
"RTN","PSOREJP2",142,0)
 ;
"RTN","PSOREJP2",143,0)
 S RFL=+$$GET1^DIQ(52.25,REJ_","_RX,5),SUSDT=$$RXSUDT^PSOBPSUT(RX,RFL)
"RTN","PSOREJP2",144,0)
 I RFL>0 S FILDT=$$GET1^DIQ(52.1,RFL_","_RX,.01,"I")
"RTN","PSOREJP2",145,0)
 E  S FILDT=$$GET1^DIQ(52,RX,22,"I")
"RTN","PSOREJP2",146,0)
 I SUSDT="" S VALMSG="Prescription is not suspended!",VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",147,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL) S VALMSG="Prescription has been released already!",VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",148,0)
 D PSOL^PSSLOCK(RX) I '$G(PSOMSG) S VALMSG=$P(PSOMSG,"^",2),VALMBCK="R" W $C(7) Q
"RTN","PSOREJP2",149,0)
 ;
"RTN","PSOREJP2",150,0)
 S ISSDT=$$GET1^DIQ(52,RX,1,"I"),EXPDT=$$GET1^DIQ(52,RX,26,"I")
"RTN","PSOREJP2",151,0)
 S SUSRX=$O(^PS(52.5,"B",RX,0))
"RTN","PSOREJP2",152,0)
 ;
"RTN","PSOREJP2",153,0)
SUDT ; Asks for the new Suspense Date
"RTN","PSOREJP2",154,0)
 S X1=FILDT,X2=+89 D C^%DTC S CUTDT=X
"RTN","PSOREJP2",155,0)
 D FULL^VALM1 S %DT("B")=$$FMTE^XLFDT(SUSDT),%DT="EA",%DT("A")="SUSPENSE DATE: "
"RTN","PSOREJP2",156,0)
 W ! D ^%DT I Y<0!($D(DTOUT)) D PSOUL^PSSLOCK(RX) S VALMBCK="R" Q
"RTN","PSOREJP2",157,0)
 I Y<ISSDT D  G SUDT
"RTN","PSOREJP2",158,0)
 . W !!?5,"Suspense Date cannot be before Issue Date: ",$$FMTE^XLFDT(ISSDT),".",$C(7)
"RTN","PSOREJP2",159,0)
 I Y>EXPDT D  G SUDT
"RTN","PSOREJP2",160,0)
 . W !!?5,"Suspense Date cannot be after Expiration Date: ",$$FMTE^XLFDT(EXPDT),".",$C(7)
"RTN","PSOREJP2",161,0)
 I Y>CUTDT D  G SUDT
"RTN","PSOREJP2",162,0)
 . W !!?5,"Suspense Date cannot be after fill date plus 90 days: "_$$FMTE^XLFDT(CUTDT),".",$C(7)
"RTN","PSOREJP2",163,0)
 S SUSDT=Y
"RTN","PSOREJP2",164,0)
 ;
"RTN","PSOREJP2",165,0)
 N DIR,DIRUT W !
"RTN","PSOREJP2",166,0)
 S DIR("A",1)="     When you confirm, this REJECT will be marked resolved. A"
"RTN","PSOREJP2",167,0)
 S DIR("A",2)="     new claim will be re-submitted to the 3rd party payer"
"RTN","PSOREJP2",168,0)
 I $$GET1^DIQ(52.5,SUSRX,3)="" D
"RTN","PSOREJP2",169,0)
 . I SUSDT>DT D
"RTN","PSOREJP2",170,0)
 . . S DIR("A",3)="     when the prescription label for this fill is printed"
"RTN","PSOREJP2",171,0)
 . . S DIR("A",4)="     from suspense on "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",172,0)
 . . S DIR("A",5)=" "
"RTN","PSOREJP2",173,0)
 . . S DIR("A",6)="     Note: THE LABEL FOR THIS PRESCRIPTION FILL WILL NOT BE"
"RTN","PSOREJP2",174,0)
 . . S DIR("A",7)="           PRINTED LOCAL FROM SUSPENSE BEFORE "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",175,0)
 . E  D
"RTN","PSOREJP2",176,0)
 . . S DIR("A",3)="     the next time local labels are printed from suspense."
"RTN","PSOREJP2",177,0)
 E  D
"RTN","PSOREJP2",178,0)
 . I SUSDT>DT D
"RTN","PSOREJP2",179,0)
 . . S DIR("A",3)="     when the prescription is transmitted to CMOP on "
"RTN","PSOREJP2",180,0)
 . . S DIR("A",4)="     "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",181,0)
 . . S DIR("A",5)=" "
"RTN","PSOREJP2",182,0)
 . . S DIR("A",6)="     Note: THIS PRESCRIPTION FILL WILL NOT BE TRANSMITTED TO"
"RTN","PSOREJP2",183,0)
 . . S DIR("A",7)="           CMOP BEFORE "_$$FMTE^XLFDT(SUSDT)_"."
"RTN","PSOREJP2",184,0)
 . E  D
"RTN","PSOREJP2",185,0)
 . . S DIR("A",3)="     when this prescription fill is transmitted to CMOP on"
"RTN","PSOREJP2",186,0)
 . . S DIR("A",4)="     the next CMOP transmission."
"RTN","PSOREJP2",187,0)
    ;
"RTN","PSOREJP2",188,0)
 S DIR("A",$O(DIR("A",""),-1)+1)=" "
"RTN","PSOREJP2",189,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="YES"
"RTN","PSOREJP2",190,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" D PSOUL^PSSLOCK(RX) Q
"RTN","PSOREJP2",191,0)
 ;
"RTN","PSOREJP2",192,0)
 ; - Suspense/Fill Date updates
"RTN","PSOREJP2",193,0)
 I SUSDT'=$$RXSUDT^PSOBPSUT(RX,RFL) D
"RTN","PSOREJP2",194,0)
 . N DA,DIE,DR,PSOX,SFN,INDT,DEAD
"RTN","PSOREJP2",195,0)
 . S DA=SUSRX,DIE="^PS(52.5,",DR=".02///"_SUSDT D ^DIE
"RTN","PSOREJP2",196,0)
 . S SFN=SUSRX,DEAD=0,INDT=SUSDT D CHANGE^PSOSUCH1(RX,RFL)
"RTN","PSOREJP2",197,0)
 ;
"RTN","PSOREJP2",198,0)
 ; - Flagging the prescription to be re-submitted to ECME on the next CMOP/Print from Suspense
"RTN","PSOREJP2",199,0)
 D RETRXF^PSOREJU2(RX,RFL,1)
"RTN","PSOREJP2",200,0)
 W ?40,"[Closing..."
"RTN","PSOREJP2",201,0)
 D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,8,"Fill Date changed to "_$$FMTE^XLFDT(SUSDT)_". A new claim will be re-submitted on this date.")
"RTN","PSOREJP2",202,0)
 W "OK]",!,$C(7) H 1 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP2",203,0)
 D PSOUL^PSSLOCK(RX)
"RTN","PSOREJP2",204,0)
 Q
"RTN","PSOREJP2",205,0)
 ;
"RTN","PSOREJP2",206,0)
PTLBL(RX,RFL) ; Returns whether the user should be prompted for 'Print Label?' or not
"RTN","PSOREJP2",207,0)
 N PTLBL,CMP,LBL,REPRINT
"RTN","PSOREJP2",208,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,.PSOTRIC)
"RTN","PSOREJP2",209,0)
 I $$FIND^PSOREJUT(RX,RFL) Q 0       ; Has OPEN/UNRESOLVED 3rd pary payer reject
"RTN","PSOREJP2",210,0)
 I $$GET1^DIQ(52,RX,100,"I") Q 0     ; Rx status not ACTIVE
"RTN","PSOREJP2",211,0)
 I $$RXRLDT^PSOBPSUT(RX,RFL),'PSOTRIC Q 0     ; Rx Released
"RTN","PSOREJP2",212,0)
 ; - CMOP Rx fill?
"RTN","PSOREJP2",213,0)
 S PTLBL=1,CMP=0
"RTN","PSOREJP2",214,0)
 F  S CMP=$O(^PSRX(RX,4,CMP)) Q:'CMP  D  Q:'PTLBL
"RTN","PSOREJP2",215,0)
 . I +$$GET1^DIQ(52.01,CMP_","_RX,2,"I")=RFL S PTLBL=0
"RTN","PSOREJP2",216,0)
 I 'PTLBL Q 0
"RTN","PSOREJP2",217,0)
 ; - Label already printed for Rx fill?
"RTN","PSOREJP2",218,0)
 S LBL=0
"RTN","PSOREJP2",219,0)
 F  S LBL=$O(^PSRX(RX,"L",LBL)) Q:'LBL  D  Q:'PTLBL
"RTN","PSOREJP2",220,0)
 . I +$$GET1^DIQ(52.032,LBL_","_RX,1,"I")'=RFL Q
"RTN","PSOREJP2",221,0)
 . I $G(PSOTRIC)&($$RXRLDT^PSOBPSUT(RX,RFL)) S REPRINT=1 Q
"RTN","PSOREJP2",222,0)
 . I $$GET1^DIQ(52.032,LBL_","_RX,4,"I") Q
"RTN","PSOREJP2",223,0)
 . I $$GET1^DIQ(52.032,LBL_","_RX,2)["INTERACTION" Q
"RTN","PSOREJP2",224,0)
 . S PTLBL=0
"RTN","PSOREJP2",225,0)
 ;
"RTN","PSOREJP2",226,0)
 I PTLBL D
"RTN","PSOREJP2",227,0)
 . N DIR,DIRUT,Y
"RTN","PSOREJP2",228,0)
 . W ! S DIR(0)="Y",DIR("A")=$S('$G(REPRINT):"Print Label",1:"Reprint Label"),DIR("B")="YES"
"RTN","PSOREJP2",229,0)
 . D ^DIR I $G(Y)=0!$D(DIRUT) S PTLBL=0 Q
"RTN","PSOREJP2",230,0)
 ;
"RTN","PSOREJP2",231,0)
 Q PTLBL
"RTN","PSOREJP2",232,0)
 ;
"RTN","PSOREJP2",233,0)
DTRNG(BGN,END) ; Date Range Selection
"RTN","PSOREJP2",234,0)
 ;Input: (o) BGN - Default Begin Date 
"RTN","PSOREJP2",235,0)
 ;       (o) END - Default End Date 
"RTN","PSOREJP2",236,0)
 ;
"RTN","PSOREJP2",237,0)
 N %DT,DTOUT,DUOUT,DTRNG,X,Y
"RTN","PSOREJP2",238,0)
 S DTRNG=""
"RTN","PSOREJP2",239,0)
 S %DT="AEST",%DT("A")="BEGIN REJECT DATE: ",%DT("B")=$G(BGN) K:$G(BGN)="" %DT("B") D ^%DT
"RTN","PSOREJP2",240,0)
 I $G(DUOUT)!$G(DTOUT)!($G(Y)=-1) Q "^"
"RTN","PSOREJP2",241,0)
 S $P(DTRNG,U)=Y
"RTN","PSOREJP2",242,0)
 ;
"RTN","PSOREJP2",243,0)
 W ! K %DT
"RTN","PSOREJP2",244,0)
 S %DT="AEST",%DT("A")="END REJECT DATE: ",%DT("B")=$G(END),%DT(0)=Y K:$G(END)="" %DT("B") D ^%DT
"RTN","PSOREJP2",245,0)
 I $G(DUOUT)!$G(DTOUT)!($G(Y)=-1) Q "^"
"RTN","PSOREJP2",246,0)
 ;
"RTN","PSOREJP2",247,0)
 ;Define Entry
"RTN","PSOREJP2",248,0)
 S $P(DTRNG,U,2)=Y
"RTN","PSOREJP2",249,0)
 ;
"RTN","PSOREJP2",250,0)
 Q DTRNG
"RTN","PSOREJP3")
0^3^B79304493
"RTN","PSOREJP3",1,0)
PSOREJP3 ;ALB/SS - Third Party Reject Display Screen - Comments ;10/27/06
"RTN","PSOREJP3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**260,287,289,290,358**;DEC 1997;Build 35
"RTN","PSOREJP3",3,0)
 ;
"RTN","PSOREJP3",4,0)
COM ; Builds the Comments section in the Reject Display Screen
"RTN","PSOREJP3",5,0)
 I +$O(^PSRX(RX,"REJ",REJ,"COM",0))=0 Q
"RTN","PSOREJP3",6,0)
 D SETLN^PSOREJP1()
"RTN","PSOREJP3",7,0)
 D SETLN^PSOREJP1("COMMENTS",1,1)
"RTN","PSOREJP3",8,0)
 N DIWL,DIWR,LNCNT,MAXLN,PSL
"RTN","PSOREJP3",9,0)
 N I,X,PSI,Y,LAST,PSOCOM,TXTLN
"RTN","PSOREJP3",10,0)
 S PSI=999999
"RTN","PSOREJP3",11,0)
 F  S PSI=$O(^PSRX(RX,"REJ",REJ,"COM",PSI),-1) Q:+PSI=0  D
"RTN","PSOREJP3",12,0)
 . S PSCOM=$$GET1^DIQ(52.2551,PSI_","_REJ_","_RX,.01)_" - "
"RTN","PSOREJP3",13,0)
 . S PSCOM=PSCOM_$$GET1^DIQ(52.2551,PSI_","_REJ_","_RX,2)
"RTN","PSOREJP3",14,0)
 . S PSCOM=PSCOM_" ("_$$GET1^DIQ(52.2551,PSI_","_REJ_","_RX,1)_")"
"RTN","PSOREJP3",15,0)
 . ;display comment
"RTN","PSOREJP3",16,0)
 . K ^UTILITY($J,"W") S X=PSCOM,DIWL=1,DIWR=78 D ^DIWP
"RTN","PSOREJP3",17,0)
 . F PSL=1:1 Q:('$D(^UTILITY($J,"W",1,PSL,0)))  D
"RTN","PSOREJP3",18,0)
 . . S LAST=0 I '$D(^UTILITY($J,"W",1,PSL+1)),'$O(^PSRX(RX,"REJ",REJ,"COM",PSI),-1) S LAST=1
"RTN","PSOREJP3",19,0)
 . . S TXTLN=$G(^UTILITY($J,"W",1,PSL,0))
"RTN","PSOREJP3",20,0)
 . . D SETLN^PSOREJP1($S(PSL=1:"- ",1:"  ")_TXTLN,0,$S(LAST:1,1:0),1)
"RTN","PSOREJP3",21,0)
 K ^UTILITY($J,"W")
"RTN","PSOREJP3",22,0)
 Q
"RTN","PSOREJP3",23,0)
 ;
"RTN","PSOREJP3",24,0)
ADDCOM ; - Add comment worklist action
"RTN","PSOREJP3",25,0)
 N PSCOM
"RTN","PSOREJP3",26,0)
 D FULL^VALM1
"RTN","PSOREJP3",27,0)
 S PSCOM=$$COMMENT("Comment: ",150)
"RTN","PSOREJP3",28,0)
 I $L(PSCOM)>0,PSCOM'["^" D
"RTN","PSOREJP3",29,0)
 . D SAVECOM(RX,REJ,PSCOM) ;save the comment
"RTN","PSOREJP3",30,0)
 . D INIT^PSOREJP1 ;update screen
"RTN","PSOREJP3",31,0)
 S VALMBCK="R"
"RTN","PSOREJP3",32,0)
 Q
"RTN","PSOREJP3",33,0)
 ;
"RTN","PSOREJP3",34,0)
 ;Enter a comment
"RTN","PSOREJP3",35,0)
 ;PSOTR  -prompt string
"RTN","PSOREJP3",36,0)
 ;PSMLEN -maxlen
"RTN","PSOREJP3",37,0)
 ;returns:
"RTN","PSOREJP3",38,0)
 ; "^" - if user chose to quit 
"RTN","PSOREJP3",39,0)
 ; "" - nothing entered or input has been discarded
"RTN","PSOREJP3",40,0)
 ; otherwise - comment's text
"RTN","PSOREJP3",41,0)
COMMENT(PSOTR,PSMLEN) ;*/
"RTN","PSOREJP3",42,0)
 N DIR,DTOUT,DUOUT,PSQ
"RTN","PSOREJP3",43,0)
 I '$D(PSOTR) S PSOTR="Comment "
"RTN","PSOREJP3",44,0)
 I '$D(PSMLEN) S PSMLEN=150
"RTN","PSOREJP3",45,0)
 S DIR(0)="FA^1:150"
"RTN","PSOREJP3",46,0)
 S DIR("A")=PSOTR
"RTN","PSOREJP3",47,0)
 S DIR("?")="Enter a free text comment up to 150 characters long."
"RTN","PSOREJP3",48,0)
 S PSQ=0
"RTN","PSOREJP3",49,0)
 F  D  Q:+PSQ'=0
"RTN","PSOREJP3",50,0)
 . W ! D ^DIR
"RTN","PSOREJP3",51,0)
 . I $D(DUOUT)!($D(DTOUT)) S PSQ=-1 Q
"RTN","PSOREJP3",52,0)
 . I $L(Y)'>PSMLEN S PSQ=1 Q
"RTN","PSOREJP3",53,0)
 . W !!,"Enter a free text comment up to 150 characters long.",!
"RTN","PSOREJP3",54,0)
 . S DIR("B")=$E(Y,1,PSMLEN)
"RTN","PSOREJP3",55,0)
 Q:PSQ<0 "^"
"RTN","PSOREJP3",56,0)
 Q:$L(Y)=0 ""
"RTN","PSOREJP3",57,0)
 S PSQ=$$YESNO("Confirm","YES")
"RTN","PSOREJP3",58,0)
 I PSQ=-1 Q "^"
"RTN","PSOREJP3",59,0)
 I PSQ=0 Q ""
"RTN","PSOREJP3",60,0)
 Q Y
"RTN","PSOREJP3",61,0)
 ;
"RTN","PSOREJP3",62,0)
 ; Ask
"RTN","PSOREJP3",63,0)
 ; Input:
"RTN","PSOREJP3",64,0)
 ;  PSQSTR - question
"RTN","PSOREJP3",65,0)
 ;  PSDFL - default answer
"RTN","PSOREJP3",66,0)
 ; Output: 
"RTN","PSOREJP3",67,0)
 ; 1 YES
"RTN","PSOREJP3",68,0)
 ; 0 NO
"RTN","PSOREJP3",69,0)
 ; -1 if cancelled
"RTN","PSOREJP3",70,0)
YESNO(PSQSTR,PSDFL) ; Default - YES
"RTN","PSOREJP3",71,0)
 N DIR,Y,DUOUT
"RTN","PSOREJP3",72,0)
 S DIR(0)="Y"
"RTN","PSOREJP3",73,0)
 S DIR("A")=PSQSTR
"RTN","PSOREJP3",74,0)
 S:$L($G(PSDFL)) DIR("B")=PSDFL
"RTN","PSOREJP3",75,0)
 W ! D ^DIR
"RTN","PSOREJP3",76,0)
 Q $S($G(DUOUT)!$G(DUOUT)!(Y="^"):-1,1:Y)
"RTN","PSOREJP3",77,0)
 ;
"RTN","PSOREJP3",78,0)
 ;Save comment
"RTN","PSOREJP3",79,0)
SAVECOM(PSRXIEN,PSREJIEN,PSCOMNT,DATETIME,USER) ;
"RTN","PSOREJP3",80,0)
 N PSREC,PSDA,PSERR
"RTN","PSOREJP3",81,0)
 I '$G(DATETIME) D NOW^%DTC S DATETIME=%
"RTN","PSOREJP3",82,0)
 I '$G(USER) S USER=DUZ
"RTN","PSOREJP3",83,0)
 D INSITEM(52.2551,PSRXIEN,PSREJIEN,DATETIME)
"RTN","PSOREJP3",84,0)
 S PSREC=$O(^PSRX(PSRXIEN,"REJ",PSREJIEN,"COM","B",DATETIME,0))
"RTN","PSOREJP3",85,0)
 I PSREC>0 D
"RTN","PSOREJP3",86,0)
 . S PSDA(52.2551,PSREC_","_PSREJIEN_","_PSRXIEN_",",1)=USER
"RTN","PSOREJP3",87,0)
 . S PSDA(52.2551,PSREC_","_PSREJIEN_","_PSRXIEN_",",2)=$G(PSCOMNT)
"RTN","PSOREJP3",88,0)
 . D FILE^DIE("","PSDA","PSERR")
"RTN","PSOREJP3",89,0)
 Q
"RTN","PSOREJP3",90,0)
 ;
"RTN","PSOREJP3",91,0)
 ;/**
"RTN","PSOREJP3",92,0)
 ;PSSFILE - subfile# (52.2551) for comment
"RTN","PSOREJP3",93,0)
 ;PSIEN - ien for file in which the new subfile entry will be inserted
"RTN","PSOREJP3",94,0)
 ;PSVAL01 - .01 value for the new entry
"RTN","PSOREJP3",95,0)
INSITEM(PSSFILE,PSIEN0,PSIEN1,PSVAL01) ;*/
"RTN","PSOREJP3",96,0)
 N PSSSI,PSIENS,PSFDA,PSER
"RTN","PSOREJP3",97,0)
 S PSIENS="+1,"_PSIEN1_","_PSIEN0_","
"RTN","PSOREJP3",98,0)
 S PSFDA(PSSFILE,PSIENS,.01)=PSVAL01
"RTN","PSOREJP3",99,0)
 D UPDATE^DIE("","PSFDA","PSSSI","PSER")
"RTN","PSOREJP3",100,0)
 I $D(PSER) D BMES^XPDUTL(PSER("DIERR",1,"TEXT",1))
"RTN","PSOREJP3",101,0)
 Q
"RTN","PSOREJP3",102,0)
 ;
"RTN","PSOREJP3",103,0)
PRINT(RX,RFL) ; Print Label for specific Rx/Fill
"RTN","PSOREJP3",104,0)
 N PPL,PSOSITE,PSOPAR,PSOSYS,PSOLAP,PSOBARS,PSOBAR0,PSOBAR1,PSOIOS,PSOBFLAG
"RTN","PSOREJP3",105,0)
 N POP,DFN,PDUZ,RXFL,REPRINT,REJLBL
"RTN","PSOREJP3",106,0)
 S REJLBL=0 F  S REJLBL=$O(^PSRX(RX,"L",REJLBL)) Q:'REJLBL  I +$$GET1^DIQ(52.032,REJLBL_","_RX,1,"I")=RFL S REPRINT=1 Q
"RTN","PSOREJP3",107,0)
 ;
"RTN","PSOREJP3",108,0)
 S PSOSITE=$$RXSITE^PSOBPSUT(RX,RFL),PSOPAR=^PS(59,PSOSITE,1)
"RTN","PSOREJP3",109,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I"),PDUZ=DUZ,PSOSYS=$G(^PS(59.7,1,40.1))
"RTN","PSOREJP3",110,0)
 S PPL=RX I RFL S RXFL(RX)=RFL
"RTN","PSOREJP3",111,0)
 W ! S PSOBFLAG=1 D LBL^PSOLSET I $G(PSOQUIT) Q
"RTN","PSOREJP3",112,0)
 ;
"RTN","PSOREJP3",113,0)
 S IOP=PSOLAP D ^%ZIS,DQ^PSOLBL,^%ZISC
"RTN","PSOREJP3",114,0)
 Q
"RTN","PSOREJP3",115,0)
 ;
"RTN","PSOREJP3",116,0)
RXINFO(RX,FILL,LINE,REJ) ; Returns header displayable Rx Information
"RTN","PSOREJP3",117,0)
 N TXT,RXINFO,LBL,CMOP,DRG,PSOET
"RTN","PSOREJP3",118,0)
 I LINE=1 D
"RTN","PSOREJP3",119,0)
 . S RXINFO="Rx#      : "_$$GET1^DIQ(52,RX,.01)_"/"_FILL
"RTN","PSOREJP3",120,0)
 . ;cnf, PSO*7*358, add PSOET logic for Tricare non-billable
"RTN","PSOREJP3",121,0)
 . S PSOET=$$PSOET(RX,FILL)
"RTN","PSOREJP3",122,0)
 . S $E(RXINFO,30)="ECME#: "_$S(PSOET:"",1:$E(10000000+RX,2,8))
"RTN","PSOREJP3",123,0)
 . S $E(RXINFO,55)="Fill Date: "_$$FMTE^XLFDT($$RXFLDT^PSOBPSUT(RX,FILL))
"RTN","PSOREJP3",124,0)
 I LINE=2 D
"RTN","PSOREJP3",125,0)
 . S DRG=$$GET1^DIQ(52,RX,6,"I"),CMOP=$S($D(^PSDRUG("AQ",DRG)):1,1:0)
"RTN","PSOREJP3",126,0)
 . S RXINFO=$S(CMOP:"CMOP ",1:"")_"Drug",$E(RXINFO,10)=": "_$E($$GET1^DIQ(52,RX,6),1,43)
"RTN","PSOREJP3",127,0)
 . S $E(RXINFO,56)="NDC Code: "_$$GETNDC^PSONDCUT(RX,FILL)
"RTN","PSOREJP3",128,0)
 Q $G(RXINFO)
"RTN","PSOREJP3",129,0)
 ;
"RTN","PSOREJP3",130,0)
SEND(COD1,COD2,COD3,CLA,PA) ; - Sends Claim to ECME and closes Reject
"RTN","PSOREJP3",131,0)
 N DIR,OVRC,RESP,ALTXT,COM
"RTN","PSOREJP3",132,0)
 S DIR(0)="Y",DIR("A")="     Confirm",DIR("B")="YES"
"RTN","PSOREJP3",133,0)
 S DIR("A",1)="     When you confirm, a new claim will be submitted for"
"RTN","PSOREJP3",134,0)
 S DIR("A",2)="     the prescription and this REJECT will be marked"
"RTN","PSOREJP3",135,0)
 S DIR("A",3)="     resolved."
"RTN","PSOREJP3",136,0)
 S DIR("A",4)=" "
"RTN","PSOREJP3",137,0)
 W ! D ^DIR I $G(Y)=0!$D(DIRUT) S VALMBCK="R" Q
"RTN","PSOREJP3",138,0)
 I $G(COD1)'="" S OVRC=$G(COD2)_"^"_$G(COD1)_"^"_$G(COD3)
"RTN","PSOREJP3",139,0)
 S ALTXT="REJECT WORKLIST"
"RTN","PSOREJP3",140,0)
 S:$G(OVRC)'="" ALTXT=ALTXT_"-DUR OVERRIDE CODES("_$G(COD1)_"/"_$G(COD2)_"/"_$G(COD3)_")"
"RTN","PSOREJP3",141,0)
 S:$G(CLA) ALTXT=ALTXT_"(CLARIF. CODE="_$P(CLA,"^",2)_")"
"RTN","PSOREJP3",142,0)
 S:$G(PA) ALTXT=ALTXT_"(PRIOR AUTH.="_$TR(PA,"^","/")_")"
"RTN","PSOREJP3",143,0)
 D ECMESND^PSOBPSU1(RX,FILL,,"ED",$$GETNDC^PSONDCUT(RX,FILL),,,$G(OVRC),,.RESP,,ALTXT,$G(CLA),$G(PA),$$PSOCOB^PSOREJP3(RX,FILL,REJ))
"RTN","PSOREJP3",144,0)
 I $G(RESP) D  Q
"RTN","PSOREJP3",145,0)
 . W !!?10,"Claim could not be submitted. Please try again later!"
"RTN","PSOREJP3",146,0)
 . W !,?10,"Reason: ",$S($P(RESP,"^",2)="":"UNKNOWN",1:$P(RESP,"^",2)),$C(7) H 2
"RTN","PSOREJP3",147,0)
 ;
"RTN","PSOREJP3",148,0)
 I $$PTLBL^PSOREJP2(RX,FILL) D PRINT(RX,FILL)
"RTN","PSOREJP3",149,0)
 ;
"RTN","PSOREJP3",150,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)
"RTN","PSOREJP3",151,0)
 I $$GET1^DIQ(52,RX,100,"I")=5&(PSOTRIC) D
"RTN","PSOREJP3",152,0)
 . Q:$$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE"
"RTN","PSOREJP3",153,0)
 . N XXX S XXX=""
"RTN","PSOREJP3",154,0)
 . W !,"This prescription can be pulled early from suspense or the label will print"
"RTN","PSOREJP3",155,0)
 . W !,"when PRINT FROM SUSPENSE occurs.",!
"RTN","PSOREJP3",156,0)
 . R !,"Press enter to continue... ",XXX:60
"RTN","PSOREJP3",157,0)
 ;
"RTN","PSOREJP3",158,0)
 I $D(PSOSTFLT),PSOSTFLT'="B" S CHANGE=1
"RTN","PSOREJP3",159,0)
 Q
"RTN","PSOREJP3",160,0)
 ;
"RTN","PSOREJP3",161,0)
FILL ;Fill payable TRICARE Rx
"RTN","PSOREJP3",162,0)
 N COM,OPNREJ,OPNREJ2,OPNREJ3,DCSTAT,PSOREL
"RTN","PSOREJP3",163,0)
 S:'$G(PSOTRIC) PSOTRIC=$$TRIC^PSOREJP1(RX,FILL,PSOTRIC)  ;cnf, PSO*7*358, add line
"RTN","PSOREJP3",164,0)
 ;cnf, PSO*7*358, don't allow option if Tricare and released, PSOREL is set to the release date
"RTN","PSOREJP3",165,0)
 S PSOREL=0 I PSOTRIC D
"RTN","PSOREJP3",166,0)
 . I 'FILL S PSOREL=+$$GET1^DIQ(52,RX,31,"I")
"RTN","PSOREJP3",167,0)
 . I FILL S PSOREL=+$$GET1^DIQ(52.1,FILL_","_RX,17,"I")
"RTN","PSOREJP3",168,0)
 I PSOREL S VALMSG="Released Rxs may not be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",169,0)
 ;cnf, PSO*7*358, don't allow option if prescription has been discontinued
"RTN","PSOREJP3",170,0)
 ;  12 - DISCONTINUED
"RTN","PSOREJP3",171,0)
 ;  14 - DISCONTINUED BY PROVIDER
"RTN","PSOREJP3",172,0)
 ;  15 - DISCONTINUED (EDIT)
"RTN","PSOREJP3",173,0)
 S DCSTAT=$$GET1^DIQ(52,RX,100,"I")
"RTN","PSOREJP3",174,0)
 I "/12/14/15/"[("/"_DCSTAT_"/") S VALMSG="Discontinued Rxs may not be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",175,0)
 D FULL^VALM1
"RTN","PSOREJP3",176,0)
 I $$CLOSED^PSOREJP1(RX,REJ) D  Q
"RTN","PSOREJP3",177,0)
 . S VALMSG="This Reject is marked resolved!",VALMBCK="R"
"RTN","PSOREJP3",178,0)
 ;cnf, PSO*7*358
"RTN","PSOREJP3",179,0)
 S COM=""
"RTN","PSOREJP3",180,0)
 I 'PSOTRIC&($$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE") S VALMSG="Only Rxs with an E PAYABLE status may be filled.",VALMBCK="R" Q
"RTN","PSOREJP3",181,0)
 I PSOTRIC&($$STATUS^PSOBPSUT(RX,FILL)'["PAYABLE") D FILLTR I $L($G(VALMSG)_$G(VALMBCK)) Q  ;cnf, PSO*7*358
"RTN","PSOREJP3",182,0)
 S:COM="" COM="AUTOMATICALLY CLOSED"  ;cnf, PSO*7*358, add condition
"RTN","PSOREJP3",183,0)
 S (OPNREJ,OPNREJ2,OPNREJ3)=""
"RTN","PSOREJP3",184,0)
 S OPNREJ2=0 F  S OPNREJ2=$O(^PSRX(RX,"REJ",OPNREJ2)) Q:OPNREJ2=""!(OPNREJ2'?1N.N)  S OPNREJ=OPNREJ_","_OPNREJ2
"RTN","PSOREJP3",185,0)
 S OPNREJ=$E(OPNREJ,2,999),OPNREJ2=""
"RTN","PSOREJP3",186,0)
 W !?20,"[Closing all rejections for prescription "_$$GET1^DIQ(52,RX,".01")_":"
"RTN","PSOREJP3",187,0)
 F I=1:1 S OPNREJ2=$P(OPNREJ,",",I) Q:OPNREJ2=""  D
"RTN","PSOREJP3",188,0)
 . S OPNREJ3="",OPNREJ3=$$GET1^DIQ(52.25,OPNREJ2_","_RX,".01")
"RTN","PSOREJP3",189,0)
 . W !?25,OPNREJ3_" - "_$$GET1^DIQ(9002313.93,OPNREJ3,".02")_"..."
"RTN","PSOREJP3",190,0)
 . D CLOSE^PSOREJUT(RX,FILL,OPNREJ2,DUZ,6,COM) W "OK]",!,$C(7) H 1
"RTN","PSOREJP3",191,0)
 I $$PTLBL^PSOREJP2(RX,FILL) D PRINT(RX,FILL)
"RTN","PSOREJP3",192,0)
 S CHANGE=1   ;cnf, PSO*7*358, remove S VALMBCK="R" so user goes back to selection list
"RTN","PSOREJP3",193,0)
 Q
"RTN","PSOREJP3",194,0)
 ;
"RTN","PSOREJP3",195,0)
PSOCOB(RX,FILL,REJ) ; Returns RXCOB indicator for Worklist
"RTN","PSOREJP3",196,0)
 N DATA1
"RTN","PSOREJP3",197,0)
 D GET^PSOREJU2(RX,FILL,.DATA1,REJ,1)
"RTN","PSOREJP3",198,0)
 I $G(DATA1(REJ,"COB"))="PRIMARY"  Q 1
"RTN","PSOREJP3",199,0)
 I $G(DATA1(REJ,"COB"))=""  Q 1
"RTN","PSOREJP3",200,0)
 Q 2
"RTN","PSOREJP3",201,0)
 ;
"RTN","PSOREJP3",202,0)
DC ;Discontinue TRICARE Rx
"RTN","PSOREJP3",203,0)
 N ACTION S ACTION="D"
"RTN","PSOREJP3",204,0)
 D FULL^VALM1
"RTN","PSOREJP3",205,0)
 S ACTION=$$DC^PSOREJU1(RX,ACTION)
"RTN","PSOREJP3",206,0)
 I ACTION="Q"!(ACTION="^")!($G(PSORX("DFLG"))) S VALMSG="NO ACTION TAKEN.",VALMBCK="R" Q
"RTN","PSOREJP3",207,0)
 S CHANGE=1
"RTN","PSOREJP3",208,0)
 Q
"RTN","PSOREJP3",209,0)
 ;
"RTN","PSOREJP3",210,0)
FILLTR ;TRICARE specific logic  ;cnf, PSO*7*358
"RTN","PSOREJP3",211,0)
 ;COM is not new'd so the variable can be used in FILL tag
"RTN","PSOREJP3",212,0)
 N CONT,PSOET,PSQSTR
"RTN","PSOREJP3",213,0)
 ;
"RTN","PSOREJP3",214,0)
FILLTR2 ;Use for looping if user enters ^ in required comment field  ;cnf, PSO*7*358
"RTN","PSOREJP3",215,0)
 ;
"RTN","PSOREJP3",216,0)
 ;if tricare, not payable, and no security key, quit
"RTN","PSOREJP3",217,0)
 ;reference to ^XUSEC( supported by IA 10076
"RTN","PSOREJP3",218,0)
 I '$D(^XUSEC("PSO TRICARE",DUZ)) S VALMSG="Action Requires <PSO TRICARE> security key",VALMBCK="R" Q
"RTN","PSOREJP3",219,0)
 ;
"RTN","PSOREJP3",220,0)
 ;if tricare, not payable, and user has security key, prompt to continue or not
"RTN","PSOREJP3",221,0)
 S PSQSTR="You are bypassing claims processing. Do you wish to continue"
"RTN","PSOREJP3",222,0)
 S CONT=$$YESNO(PSQSTR,"No")
"RTN","PSOREJP3",223,0)
 I (CONT=-1)!('CONT) S VALMSG="NO ACTION TAKEN.",VALMBCK="R" Q
"RTN","PSOREJP3",224,0)
 ;
"RTN","PSOREJP3",225,0)
 ;check for valid electronic signature
"RTN","PSOREJP3",226,0)
 I '$$SIG^PSOREJU1() S VALMBCK="R" Q                               ;quit if no valid electronic signature
"RTN","PSOREJP3",227,0)
 ;
"RTN","PSOREJP3",228,0)
 ;prompt user for required TRICARE Justification
"RTN","PSOREJP3",229,0)
 S COM=$$TCOM() G:COM="^" FILLTR2                    ;loop back to "continue?" question if ^ entry
"RTN","PSOREJP3",230,0)
 ;
"RTN","PSOREJP3",231,0)
 ;audit log
"RTN","PSOREJP3",232,0)
 S PSOET=$$PSOET(RX,FILL)
"RTN","PSOREJP3",233,0)
 D AUDIT^PSOTRI(RX,FILL,,COM,$S(PSOET:"N",1:"R"))
"RTN","PSOREJP3",234,0)
 Q
"RTN","PSOREJP3",235,0)
 ;
"RTN","PSOREJP3",236,0)
TCOM() ; - Ask for TRICARE Justification   ;cnf, PSO*7*358
"RTN","PSOREJP3",237,0)
 N COM,DIR,DIRUT,X
"RTN","PSOREJP3",238,0)
 W ! S DIR(0)="F^3:100" S DIR("A")="TRICARE Justification" D ^DIR
"RTN","PSOREJP3",239,0)
 S COM=X I $D(DIRUT) S COM="^"
"RTN","PSOREJP3",240,0)
 Q COM
"RTN","PSOREJP3",241,0)
 ;
"RTN","PSOREJP3",242,0)
PSOET(RX,FILL) ; Returns flag for TRICARE non-billable and no claim submitted - cnf 8/9/2010 PSO*7*358
"RTN","PSOREJP3",243,0)
 ; Return 1 if rejection code is eT (pseudo-reject code)
"RTN","PSOREJP3",244,0)
 ;        0 otherwise
"RTN","PSOREJP3",245,0)
 ;
"RTN","PSOREJP3",246,0)
 I '$G(RX) Q 0
"RTN","PSOREJP3",247,0)
 N X,TRIREJCD
"RTN","PSOREJP3",248,0)
 S X=0
"RTN","PSOREJP3",249,0)
 S TRIREJCD=$T(TRIREJCD+1),TRIREJCD=$P(TRIREJCD,";;",2)
"RTN","PSOREJP3",250,0)
 S X=$$FIND^PSOREJUT(RX,$G(FILL),,TRIREJCD)
"RTN","PSOREJP3",251,0)
 Q X
"RTN","PSOREJP3",252,0)
 ;
"RTN","PSOREJP3",253,0)
TRIREJCD ;TRICARE Reject Code, non-billable Rx   ;cnf, PSO*7*358
"RTN","PSOREJP3",254,0)
 ;;eT;;referenced in ^PSOREJP3, ^PSOREJ
"RTN","PSOREJP3",255,0)
 Q
"RTN","PSOREJU1")
0^21^B72644745
"RTN","PSOREJU1",1,0)
PSOREJU1 ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities (1) ;10/15/04
"RTN","PSOREJU1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,287,289,358**;DEC 1997;Build 35
"RTN","PSOREJU1",3,0)
 ;Reference to File 9002313.21 - BPS NCPDP PROFESSIONAL SERVICE CODE supported by IA 4712
"RTN","PSOREJU1",4,0)
 ;Reference to File 9002313.22 - BPS NCPDP RESULT OF SERVICE CODE supported by IA 4713
"RTN","PSOREJU1",5,0)
 ;Reference to File 9002313.23 - BPS NCPDP REASON FOR SERVICE CODE supported by IA 4714
"RTN","PSOREJU1",6,0)
 ;Reference to File 200 - NEW PERSON supported by IA 10060
"RTN","PSOREJU1",7,0)
 ;Reference to SIG^XUSESIG supported by IA 10050
"RTN","PSOREJU1",8,0)
 ;
"RTN","PSOREJU1",9,0)
ACTION(RX,REJ,OPTS,DEF) ;
"RTN","PSOREJU1",10,0)
 ; Input:  (r) RX   - Rx IEN (#52) 
"RTN","PSOREJU1",11,0)
 ;         (r) REJ  - REJECT ID (IEN)
"RTN","PSOREJU1",12,0)
 ;         (r) OPTS - Available options ("QIO" for QUIT/IGNORE/OVERRIDE)
"RTN","PSOREJU1",13,0)
 ;         (o) DEF  - Default Option ("O", "I" or "Q")
"RTN","PSOREJU1",14,0)
 ; Output: ACTION: "I^Comments" - Ignore Reject
"RTN","PSOREJU1",15,0)
 ;                 "O^COD1^COD2^COD3" - Override with the Override codes COD1(Prof.),COD2(Reason) and COD3(Result)
"RTN","PSOREJU1",16,0)
 ;                 "Q" - Quit
"RTN","PSOREJU1",17,0)
 ;                 "^" - Up-arrow entered or timed out
"RTN","PSOREJU1",18,0)
 ;
"RTN","PSOREJU1",19,0)
 N ACTION,COM,OVR,X,DIR,DIRUT,Y
"RTN","PSOREJU1",20,0)
 ;         
"RTN","PSOREJU1",21,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJU1",22,0)
 I '$G(PSONBILL) Q:'$D(^PSRX(RX,"REJ",REJ))
"RTN","PSOREJU1",23,0)
 ;
"RTN","PSOREJU1",24,0)
 ; - Display DUR/79 REJECT information
"RTN","PSOREJU1",25,0)
 D DISPLAY^PSOREJU3(RX,REJ)
"RTN","PSOREJU1",26,0)
 ;
"RTN","PSOREJU1",27,0)
ASK K ACTION,DIR,DIRUT
"RTN","PSOREJU1",28,0)
 S DIR(0)="SO^",DIR("A")=""
"RTN","PSOREJU1",29,0)
 S:(OPTS["O") DIR(0)=DIR(0)_"O:(O)VERRIDE - RESUBMIT WITH OVERRIDE CODES;",DIR("A")=DIR("A")_"(O)verride,"
"RTN","PSOREJU1",30,0)
 S:(OPTS["I") DIR(0)=DIR(0)_"I:(I)GNORE - FILL Rx WITHOUT CLAIM SUBMISSION;",DIR("A")=DIR("A")_"(I)gnore,"
"RTN","PSOREJU1",31,0)
 S:(OPTS["D") DIR(0)=DIR(0)_"D:(D)iscontinue - DO NOT FILL PRESCRIPTION;",DIR("A")=DIR("A")_"(D)iscontinue,"
"RTN","PSOREJU1",32,0)
 S:(OPTS["Q") DIR(0)=DIR(0)_"Q:(Q)UIT - SEND TO WORKLIST (REQUIRES INTERVENTION);",DIR("A")=DIR("A")_"(Q)uit,"
"RTN","PSOREJU1",33,0)
 S $E(DIR(0),$L(DIR(0)))="",$E(DIR("A"),$L(DIR("A")))="",DIR("??")="^D HELP^PSOREJU2("""_OPTS_""")"
"RTN","PSOREJU1",34,0)
 S:$G(DEF)'="" DIR("B")=DEF D ^DIR I $D(DIRUT) W ! Q "Q"
"RTN","PSOREJU1",35,0)
 ;
"RTN","PSOREJU1",36,0)
 ; - STOP/QUIT Action
"RTN","PSOREJU1",37,0)
 S ACTION=Y I ACTION="Q" Q ACTION
"RTN","PSOREJU1",38,0)
 ;
"RTN","PSOREJU1",39,0)
 ; - IGNORE Action 
"RTN","PSOREJU1",40,0)
 K DIR,DIRUT,X
"RTN","PSOREJU1",41,0)
 ;
"RTN","PSOREJU1",42,0)
 ;PSO*7.0*358, add logic for TRICARE ignore
"RTN","PSOREJU1",43,0)
 I PSOTRIC,ACTION="I",'$$CONT W $C(7),!," ACTION NOT TAKEN!",! H 1 G ASK
"RTN","PSOREJU1",44,0)
 ;
"RTN","PSOREJU1",45,0)
 I ACTION="I" S:'PSOTRIC COM=$$COM() S:PSOTRIC COM=$$TCOM^PSOREJP3() G ASK:COM="^" G ASK:'$$SIG() S ACTION=ACTION_"^"_COM
"RTN","PSOREJU1",46,0)
 ;
"RTN","PSOREJU1",47,0)
 ; - OVERRIDE Action
"RTN","PSOREJU1",48,0)
 I ACTION="O" D  G ASK:OVR="^"
"RTN","PSOREJU1",49,0)
 . S OVR=$$OVR() S ACTION=ACTION_"^"_OVR
"RTN","PSOREJU1",50,0)
 ;
"RTN","PSOREJU1",51,0)
DC1 ;Discontinue
"RTN","PSOREJU1",52,0)
 I ACTION="D" S ACTION=$$DC(RX,ACTION) I $D(DIRUT) S ACTION="D" D DISPLAY^PSOREJU3(RX,REJ) G ASK
"RTN","PSOREJU1",53,0)
 ;
"RTN","PSOREJU1",54,0)
 Q ACTION
"RTN","PSOREJU1",55,0)
 ;
"RTN","PSOREJU1",56,0)
DC(RX,ACTION) ; - Discontinue inside and outside call
"RTN","PSOREJU1",57,0)
 N RXN,MSG,REA,DA,PSCAN,RXNUM
"RTN","PSOREJU1",58,0)
 S DA=RX,RXNUM=""
"RTN","PSOREJU1",59,0)
 D NOOR^PSOCAN4 I $D(DIRUT) W $C(7)," ACTION NOT TAKEN!",! H 1 S PSORX("DFLG")=1,ACTION="Q" Q ACTION
"RTN","PSOREJU1",60,0)
 D REQ^PSOCAN4 I $D(DIRUT) W $C(7)," ACTION NOT TAKEN!",! H 1 S PSORX("DFLG")=1,ACTION="Q" Q ACTION
"RTN","PSOREJU1",61,0)
 S REA="C",RXNUM=$P(^PSRX(DA,0),"^")
"RTN","PSOREJU1",62,0)
 S MSG="Discontinued "_$S($G(PSOFDR):" from Reject Processing Screen",1:"")
"RTN","PSOREJU1",63,0)
 S PSCAN(RXNUM)=DA_"^C"
"RTN","PSOREJU1",64,0)
 D CAN^PSOCAN
"RTN","PSOREJU1",65,0)
 N PSOCKDC S PSOCKDC=1,PSOQFLAG=1,PSOLST(1)=52_"^"_DA_"^"_$$GET1^DIQ(52,RXNUM,100),ORN=1
"RTN","PSOREJU1",66,0)
 D ECME^PSORXL1 I '$G(PPL) S PPL=""  ;remove rx from label print
"RTN","PSOREJU1",67,0)
 Q ACTION
"RTN","PSOREJU1",68,0)
 ;
"RTN","PSOREJU1",69,0)
CONT() ;- Ask to continue for bypassing claims processing  ;PSO*7.0*358
"RTN","PSOREJU1",70,0)
 N DIR,DIRUT,Y
"RTN","PSOREJU1",71,0)
 S DIR(0)="Y",DIR("A")="You are bypassing claims processing. Do you wish to continue",DIR("B")="NO"
"RTN","PSOREJU1",72,0)
 D ^DIR I $D(DIRUT) S Y=0
"RTN","PSOREJU1",73,0)
 Q $G(Y)
"RTN","PSOREJU1",74,0)
 ;
"RTN","PSOREJU1",75,0)
SIG() ; - Get electronic signature
"RTN","PSOREJU1",76,0)
 N CODE,X,X1,Y
"RTN","PSOREJU1",77,0)
 S CODE=$P($G(^VA(200,DUZ,20)),U,4),Y=0 I '$L(CODE) D  Q Y
"RTN","PSOREJU1",78,0)
 . W $C(7),!,"You do not have an electronic signature code."
"RTN","PSOREJU1",79,0)
 . W !,"Please contact your IRM office." H 2
"RTN","PSOREJU1",80,0)
 D SIG^XUSESIG S Y=(X1'="")
"RTN","PSOREJU1",81,0)
 Q Y
"RTN","PSOREJU1",82,0)
 ;
"RTN","PSOREJU1",83,0)
COM() ; - Ask for CLOSE comments
"RTN","PSOREJU1",84,0)
 K COM,DIR,DIRUT,X
"RTN","PSOREJU1",85,0)
 W ! S DIR(0)="F^3:100" S DIR("A")="Comments" D ^DIR
"RTN","PSOREJU1",86,0)
 S COM=X I $D(DIRUT) S COM="^"
"RTN","PSOREJU1",87,0)
 Q COM
"RTN","PSOREJU1",88,0)
 ;
"RTN","PSOREJU1",89,0)
OVR() ; - Ask for OVERRIDE codes
"RTN","PSOREJU1",90,0)
 N COD1,COD2,COD3,DIR,DIRUT W !
"RTN","PSOREJU1",91,0)
 S COD1=$$OVRCOD(1,$$GET1^DIQ(52.25,REJ_","_RX,14)) I COD1="^" Q "^"
"RTN","PSOREJU1",92,0)
 S COD2=$$OVRCOD(2) I COD2="^" Q "^"
"RTN","PSOREJU1",93,0)
 S COD3=$$OVRCOD(3) I COD3="^" Q "^"
"RTN","PSOREJU1",94,0)
 ;
"RTN","PSOREJU1",95,0)
 D OVRDSP^PSOREJU1(COD1_"^"_COD2_"^"_COD3) W !
"RTN","PSOREJU1",96,0)
 ;
"RTN","PSOREJU1",97,0)
 S DIR(0)="Y",DIR("A")="     Confirm? ",DIR("B")="YES"
"RTN","PSOREJU1",98,0)
 D ^DIR I $G(Y)=0!$D(DIRUT) Q "^"
"RTN","PSOREJU1",99,0)
 ;
"RTN","PSOREJU1",100,0)
 Q (COD2_"^"_COD1_"^"_COD3)
"RTN","PSOREJU1",101,0)
 ;
"RTN","PSOREJU1",102,0)
OVRDSP(LST) ; - Display the Override Codes
"RTN","PSOREJU1",103,0)
 N I W !
"RTN","PSOREJU1",104,0)
 F I=1:1:3 D
"RTN","PSOREJU1",105,0)
 . W !?5,$S(I=1:"Reason for Service Code  : ",I=2:"Professional Service Code: ",1:"Result of Service Code   : ")
"RTN","PSOREJU1",106,0)
 . W $E($$OVRX(I,$P(LST,"^",I)),1,48)
"RTN","PSOREJU1",107,0)
 Q
"RTN","PSOREJU1",108,0)
 ;
"RTN","PSOREJU1",109,0)
CLA() ; - Ask for Clarification Code
"RTN","PSOREJU1",110,0)
 N DIR,Y,DIRUT,DIROUT
"RTN","PSOREJU1",111,0)
 S DIR(0)="52.25,24",DIR("A")="Clarification Code" D ^DIR
"RTN","PSOREJU1",112,0)
 I $D(DIRUT)!$D(DIROUT) Q "^"
"RTN","PSOREJU1",113,0)
 Q Y
"RTN","PSOREJU1",114,0)
 ;
"RTN","PSOREJU1",115,0)
HDLG(RX,RFL,CODES,FROM,OPTS,DEF) ; - REJECT Handling
"RTN","PSOREJU1",116,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU1",117,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU1",118,0)
 ;       (r) CODES - List of REJECT CODES to be handled separated by commas (default is "79,88")
"RTN","PSOREJU1",119,0)
 ;       (r) FROM  - Same values as BWHERE param. in the EN^BPSNCPDP api
"RTN","PSOREJU1",120,0)
 ;       (r) OPTS  - Available options ("IOQ" for IGNORE/OVERRIDE/QUIT)
"RTN","PSOREJU1",121,0)
 ;       (o) DEF   - Default Option ("O", "I" or "Q")
"RTN","PSOREJU1",122,0)
 ;Output: ACTION   - "O"-Override, "I"-Ignore,"Q"-Quit,"^"-Up-arrow entered
"RTN","PSOREJU1",123,0)
 ;       
"RTN","PSOREJU1",124,0)
 N REJDATA,NEWDATA,CODE,ACTION,REJ,RESP,REJCDI,PSOTRIC,DCODE S CODE=""
"RTN","PSOREJU1",125,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU1",126,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOREJU1",127,0)
 I PSOTRIC D  ;note that Tricare Rejects need all codes, not just 79/88's
"RTN","PSOREJU1",128,0)
 . S OPTS="DQ",DEF="Q",(DCODE,CODES)=""
"RTN","PSOREJU1",129,0)
 . I $D(^XUSEC("PSO TRICARE",DUZ)) S OPTS=OPTS_"I" ;PSO*7.0*358, if user has security key, include IGNORE in TRICARE options
"RTN","PSOREJU1",130,0)
 . F  S DCODE=$O(^PSRX(RX,"REJ","B",DCODE)) Q:DCODE=""  S CODES=CODES_","_DCODE
"RTN","PSOREJU1",131,0)
 . S CODES=$E(CODES,2,9999)
"RTN","PSOREJU1",132,0)
 . I CODES["88"!(CODES["79") S OPTS="ODQ" S:$D(^XUSEC("PSO TRICARE",DUZ)) OPTS=OPTS_"I" ;PSO*7.0*358, if user has security key, include IGNORE in TRICARE options
"RTN","PSOREJU1",133,0)
 ;  -  In progress Rx not allowed to be filled
"RTN","PSOREJU1",134,0)
 I PSOTRIC,$$STATUS^PSOBPSUT(RX,RFL)["IN PROGRESS" S ACTION="",(DEF,OPTS)="D" D TRICCHK^PSOREJU3(RX,RFL,"",FROM) D  Q ACTION
"RTN","PSOREJU1",135,0)
 . I $P(ACTION,"^")="D" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,7,,$P(ACTION,"^",2))
"RTN","PSOREJU1",136,0)
 ;
"RTN","PSOREJU1",137,0)
 F REJCDI=1:1 S CODE=$P(CODES,",",REJCDI) Q:CODE=""  D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOREJU1",138,0)
 . S ACTION=""
"RTN","PSOREJU1",139,0)
 . I $$FIND^PSOREJUT(RX,RFL,.REJDATA,CODE) D
"RTN","PSOREJU1",140,0)
 . . S REJ=$O(REJDATA(""))
"RTN","PSOREJU1",141,0)
 . . S ACTION=$$ACTION(RX,REJ,OPTS,$G(DEF)) I ACTION="Q"!(ACTION="^") Q  ;PSO*7.0*358,add PSOTRIC as parameter
"RTN","PSOREJU1",142,0)
 . . ;PSO*7.0*358, put in Tricare audit if Ignore action and Tricare Rx
"RTN","PSOREJU1",143,0)
 . . I $P(ACTION,"^")="I" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,6,$P(ACTION,"^",2)) D:PSOTRIC AUDIT^PSOTRI(RX,RFL,,$P(ACTION,"^",2),$S($$PSOET^PSOREJP3(RX,RFL):"N",1:"R")) Q
"RTN","PSOREJU1",144,0)
 . . I $P(ACTION,"^")="O" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,1,,$P(ACTION,"^",3),$P(ACTION,"^",2),$P(ACTION,"^",4))
"RTN","PSOREJU1",145,0)
 . . I $P(ACTION,"^")="D" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,7,,$P(ACTION,"^",2)) Q
"RTN","PSOREJU1",146,0)
 . . D ECMESND^PSOBPSU1(RX,RFL,,FROM,$$GETNDC^PSONDCUT(RX,RFL),,,$P(ACTION,"^",2,4),,.RESP)
"RTN","PSOREJU1",147,0)
 . . I $G(RESP) D  Q
"RTN","PSOREJU1",148,0)
 . . . W !!?10,"Claim could not be submitted. Please try again later!"
"RTN","PSOREJU1",149,0)
 . . . W !,?10,"Reason: ",$S($P(RESP,"^",2)="":"UNKNOWN",1:$P(RESP,"^",2)),$C(7)
"RTN","PSOREJU1",150,0)
 . . K NEWDATA I $$FIND^PSOREJUT(RX,RFL,.NEWDATA,CODE) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOREJU1",151,0)
 . . . S ACTION=$$ACTION(RX,$O(NEWDATA("")),OPTS,$G(DEF)) I ACTION="Q"!(ACTION="^") Q  ;PSO*7.0*358,add PSOTRIC as parameter
"RTN","PSOREJU1",152,0)
 . . . I $P(ACTION,"^")="I" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,6,$P(ACTION,"^",2))
"RTN","PSOREJU1",153,0)
 . . . I $P(ACTION,"^")="O" D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,1,,$P(ACTION,"^",3),$P(ACTION,"^",2),$P(ACTION,"^",4))
"RTN","PSOREJU1",154,0)
 Q ACTION
"RTN","PSOREJU1",155,0)
 ;
"RTN","PSOREJU1",156,0)
OVRX(TYPE,CODE) ; - Returns the extended code/description of the NCPDP DUR override codes
"RTN","PSOREJU1",157,0)
 ; Input: (r) TYPE  - 1 (REASON FOR SERVICE), 2 (PROFESSIONAL SERVICE) or 3 (RESULT OF SERVICE)
"RTN","PSOREJU1",158,0)
 ;        (r) CODE  - Table IEN
"RTN","PSOREJU1",159,0)
 ; Output: "CODE - DESCRIPTION"
"RTN","PSOREJU1",160,0)
 N FILE,DIC,X,Y
"RTN","PSOREJU1",161,0)
 S FILE=9002313+$S(TYPE=1:.23,TYPE=2:.21,1:.22)
"RTN","PSOREJU1",162,0)
 S DIC=FILE,X=CODE D ^DIC
"RTN","PSOREJU1",163,0)
 I TYPE=1 Q CODE_" - "_$$GET1^DIQ(9002313.23,+Y,1)
"RTN","PSOREJU1",164,0)
 I TYPE=2 Q CODE_" - "_$$GET1^DIQ(9002313.21,+Y,1)
"RTN","PSOREJU1",165,0)
 I TYPE=3 Q CODE_" - "_$$GET1^DIQ(9002313.22,+Y,1)
"RTN","PSOREJU1",166,0)
 Q ""
"RTN","PSOREJU1",167,0)
 ;
"RTN","PSOREJU1",168,0)
 ;
"RTN","PSOREJU1",169,0)
OVRCOD(TYPE,VALUE) ; - Prompt for NCPDP Override Codes
"RTN","PSOREJU1",170,0)
 N DIC,X,Y,FILE,PRPT
"RTN","PSOREJU1",171,0)
 ; 
"RTN","PSOREJU1",172,0)
 I TYPE=1 S FILE=9002313.23,PRPT="Reason for Service Code  : "
"RTN","PSOREJU1",173,0)
 I TYPE=2 S FILE=9002313.21,PRPT="Professional Service Code: "
"RTN","PSOREJU1",174,0)
 I TYPE=3 S FILE=9002313.22,PRPT="Result of Service Code   : "
"RTN","PSOREJU1",175,0)
 S DIC=FILE,DIC(0)="Z"
"RTN","PSOREJU1",176,0)
 I $G(VALUE)'="" S X=VALUE D ^DIC I Y>0 W !,PRPT,VALUE,"       ",$P(Y(0),"^",2) Q VALUE
"RTN","PSOREJU1",177,0)
 S DIC=FILE,DIC(0)="AQE",DIC("A")=PRPT
"RTN","PSOREJU1",178,0)
 D ^DIC I $D(DTOUT)!$D(DUOUT)!(Y<0) Q "^"
"RTN","PSOREJU1",179,0)
 Q $P(Y,"^",2)
"RTN","PSOREJU1",180,0)
 ;
"RTN","PSOREJU1",181,0)
SEL(FIELD,FILE,ARRAY,DEFAULT) ; - Provides field selection (one, multiple or ALL)
"RTN","PSOREJU1",182,0)
 N DIC,DTOUT,DUOUT,QT,Y,X
"RTN","PSOREJU1",183,0)
 W !!,"You may select a single or multiple "_FIELD_"S,"
"RTN","PSOREJU1",184,0)
 W !,"or enter ^ALL to select all "_FIELD_"S.",!
"RTN","PSOREJU1",185,0)
 K ARRAY S DIC=FILE,DIC(0)="QEZAM",DIC("A")=FIELD_": "
"RTN","PSOREJU1",186,0)
 I $G(DEFAULT)'="" S DIC("B")=DEFAULT
"RTN","PSOREJU1",187,0)
 F  D ^DIC Q:X=""  D  Q:$G(QT)
"RTN","PSOREJU1",188,0)
 . I $$UP^XLFSTR(X)="^ALL" K ARRAY S ARRAY="ALL",QT=1 Q
"RTN","PSOREJU1",189,0)
 . I $D(DTOUT)!$D(DUOUT) K ARRAY S ARRAY="^",QT=1 Q
"RTN","PSOREJU1",190,0)
 . W "   ",$P(Y,"^",2),$S($D(ARRAY(+Y)):"       (already selected)",1:"")
"RTN","PSOREJU1",191,0)
 . W ! S ARRAY(+Y)="",DIC("A")="ANOTHER ONE: " K DIC("B")
"RTN","PSOREJU1",192,0)
 I '$D(ARRAY) S ARRAY="^"
"RTN","PSOREJU1",193,0)
 Q
"RTN","PSOREJU1",194,0)
 ;
"RTN","PSOREJU1",195,0)
LMREJ(RX,RFL,MSG,BCK) ; Used by ListManager hidden actions to detect unresolved 3rd Party Rejects
"RTN","PSOREJU1",196,0)
 ;Input:  (r) RX   - Rx IEN (#52)
"RTN","PSOREJU1",197,0)
 ;        (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU1",198,0)
 ;Output: (o) MSG  - Usually this will be used to set VALMSG variable, which should be passed in by ref.
"RTN","PSOREJU1",199,0)
 ;        (o) BCK  - This will be used to set VALMBCK variable, which should be passed in by ref.
"RTN","PSOREJU1",200,0)
 ;
"RTN","PSOREJU1",201,0)
 I '$D(^PSRX(+RX)) Q 0
"RTN","PSOREJU1",202,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU1",203,0)
 I $$FIND^PSOREJUT(RX,RFL) D  Q 1
"RTN","PSOREJU1",204,0)
 . S MSG="NOT ALLOWED! Rx has OPEN 3rd Party Payer Reject.",BCK="R" W $C(7),$C(7)
"RTN","PSOREJU1",205,0)
 Q 0
"RTN","PSOREJU1",206,0)
 ;
"RTN","PSOREJU1",207,0)
DUP(RX,RSP,CLOSED) ; Checks if REJECT has already been logged in the PRESCRIPTION file
"RTN","PSOREJU1",208,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU1",209,0)
 ;         (o) RSP - Response IEN
"RTN","PSOREJU1",210,0)
 ;         (o) CLOSED - If CLOSED=1 and Reject is closed, then do not count as duplicate
"RTN","PSOREJU1",211,0)
 ; Output:     DUP - 1: Already logged (duplicate) 
"RTN","PSOREJU1",212,0)
 ;                   0: Not yet logged on PRESCRIPTION file
"RTN","PSOREJU1",213,0)
 N DUP,IDX
"RTN","PSOREJU1",214,0)
 I $G(CLOSED)="" S CLOSED=0
"RTN","PSOREJU1",215,0)
 S (DUP,IDX)=0
"RTN","PSOREJU1",216,0)
 F  S IDX=$O(^PSRX(RX,"REJ",IDX)) Q:'IDX  D  Q:DUP
"RTN","PSOREJU1",217,0)
 . I +RSP=+$$GET1^DIQ(52.25,IDX_","_RX,16,"I") S DUP=1
"RTN","PSOREJU1",218,0)
 . I CLOSED=1,+$$GET1^DIQ(52.25,IDX_","_RX,9,"I")=1 S DUP=0
"RTN","PSOREJU1",219,0)
 Q DUP
"RTN","PSOREJU1",220,0)
 ;
"RTN","PSOREJU1",221,0)
OTH(CODE,LST) ; Removes the current Reject code from the list
"RTN","PSOREJU1",222,0)
 ; Input:  (r) CODE  - Current Reject Code (79 or 88)
"RTN","PSOREJU1",223,0)
 ;         (o) LST   - List of all Reject codes with response (comma separated)
"RTN","PSOREJU1",224,0)
 ; Output:     OTH   - List of OTHER Reject codes (w/out 79 or 88)
"RTN","PSOREJU1",225,0)
 ;
"RTN","PSOREJU1",226,0)
 N I,OTH
"RTN","PSOREJU1",227,0)
 F I=1:1:$L(LST,",") D
"RTN","PSOREJU1",228,0)
 . I $P(LST,",",I),$P(LST,",",I)'=CODE S OTH=$G(OTH)_","_$P(LST,",",I)
"RTN","PSOREJU1",229,0)
 S $E(OTH)=""
"RTN","PSOREJU1",230,0)
 Q OTH
"RTN","PSOREJU1",231,0)
 ;
"RTN","PSOREJU1",232,0)
DAT(DAT) ; - External Date
"RTN","PSOREJU1",233,0)
 S X=$$HL7TFM^XLFDT(DAT) I X<0 Q ""
"RTN","PSOREJU1",234,0)
 Q X
"RTN","PSOREJU1",235,0)
 ;
"RTN","PSOREJU1",236,0)
CLEAN(STR) ; Remove blanks from the end of a string and replaces ";" with ","
"RTN","PSOREJU1",237,0)
 N LEN F LEN=$L(STR):-1:1 Q:$E(STR,LEN)'=" "
"RTN","PSOREJU1",238,0)
 S STR=$TR(STR,";",",")
"RTN","PSOREJU1",239,0)
 Q $E(STR,1,LEN)
"RTN","PSOREJU2")
0^16^B49455422
"RTN","PSOREJU2",1,0)
PSOREJU2 ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities (1) ;10/15/04
"RTN","PSOREJU2",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,260,287,341,290,358**;DEC 1997;Build 35
"RTN","PSOREJU2",3,0)
 ;Reference to $$NABP^BPSBUTL supported by IA 4719
"RTN","PSOREJU2",4,0)
 ;Reference to File 9002313.23 - BPS NCPDP REASON FOR SERVICE CODE supported by IA 4714
"RTN","PSOREJU2",5,0)
 ;
"RTN","PSOREJU2",6,0)
GET(RX,RFL,REJDATA,REJID,OKCL,CODE) ;
"RTN","PSOREJU2",7,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU2",8,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJU2",9,0)
 ;         (r) REJDATA(REJECT IEN,FIELD) - Array where these Reject fields will be returned:
"RTN","PSOREJU2",10,0)
 ;                       "CODE" - Reject Code (79 or 88)
"RTN","PSOREJU2",11,0)
 ;                       "DATE/TIME" - DATE/TIME Reject was detected
"RTN","PSOREJU2",12,0)
 ;                       "PAYER MESSAGE" - Message returned by the payer
"RTN","PSOREJU2",13,0)
 ;                       "REASON" - Reject Reason description (from payer)
"RTN","PSOREJU2",14,0)
 ;                       "INSURANCE NAME" - Patient's Insurance Company Name
"RTN","PSOREJU2",15,0)
 ;                       "COB" - Coordination of Benefits
"RTN","PSOREJU2",16,0)
 ;                       "GROUP NAME" - Patient's Insurance Group Name
"RTN","PSOREJU2",17,0)
 ;                       "GROUP NUMBER" - Patient's Insurance Group Number
"RTN","PSOREJU2",18,0)
 ;                       "CARDHOLDER ID" - Patient's Insurance Cardholder ID
"RTN","PSOREJU2",19,0)
 ;                       "PLAN CONTACT" - Plan's Contact (eg., "1-800-...")
"RTN","PSOREJU2",20,0)
 ;                       "PLAN PREVIOUS FILL DATE" - Last time Rx was paid by payer
"RTN","PSOREJU2",21,0)
 ;                       "STATUS" - REJECTS status ("OPEN/UNRESOLVED" or "CLOSED/RESOLVED")
"RTN","PSOREJU2",22,0)
 ;                       "DUR TEXT" - Payer's DUR description
"RTN","PSOREJU2",23,0)
 ;                       "OTHER REJECTS" - Other Rejects on the same response
"RTN","PSOREJU2",24,0)
 ;                       "REASON SVC CODE" - Reason for Service Code
"RTN","PSOREJU2",25,0)
 ;                  If REJECT is closed, the following fields will be returned:
"RTN","PSOREJU2",26,0)
 ;                       "CLA CODE" - Clarification Code submitted
"RTN","PSOREJU2",27,0)
 ;                       "PRIOR AUTH TYPE" - Prior Authorization Type
"RTN","PSOREJU2",28,0)
 ;                       "PRIOR AUTH NUMBER" - Prior Authorization Type
"RTN","PSOREJU2",29,0)
 ;                       "CLOSED DATE/TIME" - DATE/TIME Reject was closed
"RTN","PSOREJU2",30,0)
 ;                       "CLOSED BY" - Name of the user responsible for closing Reject
"RTN","PSOREJU2",31,0)
 ;                       "CLOSE REASON" - Reason for closing Reject (text)
"RTN","PSOREJU2",32,0)
 ;                       "CLOSE COMMENTS" - User entered comments at close
"RTN","PSOREJU2",33,0)
 ;         (o) REJID - REJECT IEN in the PRESCRIPTION file for retrieve this REJECT
"RTN","PSOREJU2",34,0)
 ;         (o) OKCL - If set to 1, CLOSED REJECTs will also be returned
"RTN","PSOREJU2",35,0)
 ;         (o) CODE - Only REJECTs with this CODE should be returned
"RTN","PSOREJU2",36,0)
 ;
"RTN","PSOREJU2",37,0)
 N REJS,ARRAY,REJFLD,IDX,COM,Z
"RTN","PSOREJU2",38,0)
 ;
"RTN","PSOREJU2",39,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU2",40,0)
 ;
"RTN","PSOREJU2",41,0)
 K REJDATA
"RTN","PSOREJU2",42,0)
 I '$O(^PSRX(RX,"REJ",0)) Q
"RTN","PSOREJU2",43,0)
 ;
"RTN","PSOREJU2",44,0)
 K REJS S RFL=+$G(RFL)
"RTN","PSOREJU2",45,0)
 I $G(REJID) D
"RTN","PSOREJU2",46,0)
 . I +$P($G(^PSRX(RX,"REJ",REJID,0)),"^",4)'=RFL Q
"RTN","PSOREJU2",47,0)
 . I '$G(OKCL),$P($G(^PSRX(RX,"REJ",REJID,0)),"^",5) Q
"RTN","PSOREJU2",48,0)
 . S REJS(REJID)=""
"RTN","PSOREJU2",49,0)
 E  D
"RTN","PSOREJU2",50,0)
 . S IDX=999
"RTN","PSOREJU2",51,0)
 . F  S IDX=$O(^PSRX(RX,"REJ",IDX),-1) Q:'IDX  D
"RTN","PSOREJU2",52,0)
 . . I +$P($G(^PSRX(RX,"REJ",IDX,0)),"^",4)'=RFL Q
"RTN","PSOREJU2",53,0)
 . . I '$G(OKCL),$P($G(^PSRX(RX,"REJ",IDX,0)),"^",5) Q
"RTN","PSOREJU2",54,0)
 . . S REJS(IDX)=""
"RTN","PSOREJU2",55,0)
 I '$D(REJS) Q
"RTN","PSOREJU2",56,0)
 ;
"RTN","PSOREJU2",57,0)
 S IDX=0
"RTN","PSOREJU2",58,0)
 F  S IDX=$O(REJS(IDX)) Q:'IDX  D
"RTN","PSOREJU2",59,0)
 . K ARRAY D GETS^DIQ(52.25,IDX_","_RX_",","*","","ARRAY")
"RTN","PSOREJU2",60,0)
 . K REJFLD M REJFLD=ARRAY(52.25,IDX_","_RX_",")
"RTN","PSOREJU2",61,0)
 . I $G(CODE)'="",REJFLD(.01)'=CODE Q   ;cnf, PSO*7.0*358, add check for '=""
"RTN","PSOREJU2",62,0)
 . S REJDATA(IDX,"CODE")=$G(REJFLD(.01))
"RTN","PSOREJU2",63,0)
 . S REJDATA(IDX,"DATE/TIME")=$G(REJFLD(1))
"RTN","PSOREJU2",64,0)
 . S REJDATA(IDX,"PAYER MESSAGE")=$G(REJFLD(2))
"RTN","PSOREJU2",65,0)
 . S REJDATA(IDX,"REASON")=$G(REJFLD(3))
"RTN","PSOREJU2",66,0)
 . S REJDATA(IDX,"PHARMACIST")=$G(REJFLD(4))
"RTN","PSOREJU2",67,0)
 . S REJDATA(IDX,"INSURANCE NAME")=$G(REJFLD(20))
"RTN","PSOREJU2",68,0)
 . S REJDATA(IDX,"COB")=$G(REJFLD(27))
"RTN","PSOREJU2",69,0)
 . S REJDATA(IDX,"GROUP NAME")=$G(REJFLD(6))
"RTN","PSOREJU2",70,0)
 . S REJDATA(IDX,"GROUP NUMBER")=$G(REJFLD(21))
"RTN","PSOREJU2",71,0)
 . S REJDATA(IDX,"CARDHOLDER ID")=$G(REJFLD(22))
"RTN","PSOREJU2",72,0)
 . S REJDATA(IDX,"PLAN CONTACT")=$G(REJFLD(7))
"RTN","PSOREJU2",73,0)
 . S REJDATA(IDX,"PLAN PREVIOUS FILL DATE")=$G(REJFLD(8))
"RTN","PSOREJU2",74,0)
 . S REJDATA(IDX,"STATUS")=$G(REJFLD(9))
"RTN","PSOREJU2",75,0)
 . S REJDATA(IDX,"OTHER REJECTS")=$G(REJFLD(17))
"RTN","PSOREJU2",76,0)
 . S REJDATA(IDX,"DUR TEXT")=$G(REJFLD(18))
"RTN","PSOREJU2",77,0)
 . S REJDATA(IDX,"REASON SVC CODE")=$G(REJFLD(14))
"RTN","PSOREJU2",78,0)
 . S REJDATA(IDX,"RESPONSE IEN")=$G(REJFLD(16))
"RTN","PSOREJU2",79,0)
 . I '$G(OKCL) Q
"RTN","PSOREJU2",80,0)
 . S REJDATA(IDX,"CLOSED DATE/TIME")=$G(REJFLD(10))
"RTN","PSOREJU2",81,0)
 . S REJDATA(IDX,"CLOSED BY")=$G(REJFLD(11))
"RTN","PSOREJU2",82,0)
 . S REJDATA(IDX,"CLOSE REASON")=$G(REJFLD(12))
"RTN","PSOREJU2",83,0)
 . S REJDATA(IDX,"CLOSE COMMENTS")=$G(REJFLD(13))
"RTN","PSOREJU2",84,0)
 . S REJDATA(IDX,"COD1")=$G(REJFLD(14))
"RTN","PSOREJU2",85,0)
 . S REJDATA(IDX,"COD2")=$G(REJFLD(15))
"RTN","PSOREJU2",86,0)
 . S REJDATA(IDX,"COD3")=$G(REJFLD(19))
"RTN","PSOREJU2",87,0)
 . S REJDATA(IDX,"CLA CODE")=$G(REJFLD(24))
"RTN","PSOREJU2",88,0)
 . S REJDATA(IDX,"PRIOR AUTH TYPE")=$G(REJFLD(25))
"RTN","PSOREJU2",89,0)
 . S REJDATA(IDX,"PRIOR AUTH NUMBER")=$G(REJFLD(26))
"RTN","PSOREJU2",90,0)
 . S COM=0 F  S COM=$O(^PSRX(RX,"REJ",IDX,"COM",COM)) Q:'COM  D
"RTN","PSOREJU2",91,0)
 . . S Z=^PSRX(RX,"REJ",IDX,"COM",COM,0)
"RTN","PSOREJU2",92,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"DATE/TIME")=$P(Z,"^")
"RTN","PSOREJU2",93,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"USER")=$P(Z,"^",2)
"RTN","PSOREJU2",94,0)
 . . S REJDATA(IDX,"COMMENTS",COM,"COMMENTS")=$P(Z,"^",3)
"RTN","PSOREJU2",95,0)
 Q
"RTN","PSOREJU2",96,0)
 ;
"RTN","PSOREJU2",97,0)
HELP(OPTS) ; Display the Help Text for the DUR handling options (OVERRIDE/IGNORE/STOP/QUIT)
"RTN","PSOREJU2",98,0)
 ;
"RTN","PSOREJU2",99,0)
 I OPTS["O" D
"RTN","PSOREJU2",100,0)
 . W !?1,"(O)verride - This option will provide the prompts for the code sets needed to"
"RTN","PSOREJU2",101,0)
 . W !?1,"             override this reject and get a payable 3rd party claim. Before"
"RTN","PSOREJU2",102,0)
 . W !?1,"             you select this option, you may need to call the 3rd party payer"
"RTN","PSOREJU2",103,0)
 . W !?1,"             to determine which code sets are needed to override a particular"
"RTN","PSOREJU2",104,0)
 . W !?1,"             reject. Once the proper override is accepted the label will print"
"RTN","PSOREJU2",105,0)
 . W !?1,"             and the prescription can be filled."
"RTN","PSOREJU2",106,0)
 ;
"RTN","PSOREJU2",107,0)
 I OPTS["I" D
"RTN","PSOREJU2",108,0)
 . W !?1,"(I)gnore   - Choosing Ignore will by-pass 3rd party processing and will allow"
"RTN","PSOREJU2",109,0)
 . W !?1,"             you to print a label and fill the prescription. This essentially"
"RTN","PSOREJU2",110,0)
 . W !?1,"             ignores the clinical safety issues suggested by the 3rd party"
"RTN","PSOREJU2",111,0)
 . W !?1,"             payer and will NOT result in a payable claim."
"RTN","PSOREJU2",112,0)
 ;           
"RTN","PSOREJU2",113,0)
 I OPTS["Q" D
"RTN","PSOREJU2",114,0)
 . W !?1,"(Q)uit     - Choosing Quit will postpone the processing of this prescription"
"RTN","PSOREJU2",115,0)
 . W !?1,"             until this 3rd party reject is resolved. A label will not be"
"RTN","PSOREJU2",116,0)
 . W !?1,"             printed for this prescription and it can not be filled/dispensed"
"RTN","PSOREJU2",117,0)
 . W !?1,"             until this reject is resolved. Rejects can be resolved through"
"RTN","PSOREJU2",118,0)
 . W !?1,"             the Worklist option under the ePharmacy menu."
"RTN","PSOREJU2",119,0)
 Q
"RTN","PSOREJU2",120,0)
 ;
"RTN","PSOREJU2",121,0)
DVINFO(RX,RFL,LM) ; Returns header displayable Division Information
"RTN","PSOREJU2",122,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU2",123,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJU2",124,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU2",125,0)
 N TXT,DVINFO,NCPNPI
"RTN","PSOREJU2",126,0)
 S DVINFO="Division : "_$$GET1^DIQ(59,+$$RXSITE^PSOBPSUT(RX,RFL),.01)
"RTN","PSOREJU2",127,0)
 S NCPNPI=$P($$NABP^BPSBUTL(RX,RFL)," ")
"RTN","PSOREJU2",128,0)
 S $E(DVINFO,$S($G(LM):58,1:51))=$S($L(NCPNPI)=7:"NCPDP",1:"  NPI")_"#: "_NCPNPI
"RTN","PSOREJU2",129,0)
 Q DVINFO
"RTN","PSOREJU2",130,0)
 ;
"RTN","PSOREJU2",131,0)
PTINFO(RX,LM) ; Returns header displayable Patient Information
"RTN","PSOREJU2",132,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJU2",133,0)
 ;       (o) LM   - ListManager format? (1 - Yes / 0 - No) - Default: 0
"RTN","PSOREJU2",134,0)
 N DFN,VADM,PTINFO
"RTN","PSOREJU2",135,0)
 S DFN=$$GET1^DIQ(52,RX,2,"I") D DEM^VADPT
"RTN","PSOREJU2",136,0)
 S PTINFO="Patient  : "_$E($G(VADM(1)),1,$S($G(LM):24,1:20))_"("_$P($G(VADM(2)),"^",2)_")"
"RTN","PSOREJU2",137,0)
 S PTINFO=PTINFO_"  Sex: "_$P($G(VADM(5)),"^")
"RTN","PSOREJU2",138,0)
 S $E(PTINFO,$S($G(LM):61,1:54))="DOB: "_$P($G(VADM(3)),"^",2)_"("_$P($G(VADM(4)),"^")_")"
"RTN","PSOREJU2",139,0)
 Q PTINFO
"RTN","PSOREJU2",140,0)
 ;
"RTN","PSOREJU2",141,0)
RETRXF(RX,RFL,ONOFF) ; - Set/Reset the Re-transmission flag
"RTN","PSOREJU2",142,0)
 ;Input: (r) RX    - Rx IEN (#52)
"RTN","PSOREJU2",143,0)
 ;       (r) RFL   - Refill IEN (#52.1)
"RTN","PSOREJU2",144,0)
 ;       (o) ONOFF - Turn flag ON or OFF (1 - ON / 0 - OFF) (Default: OFF) 
"RTN","PSOREJU2",145,0)
 I RFL>0,'$D(^PSRX(RX,1,RFL,0)) QUIT
"RTN","PSOREJU2",146,0)
 N DA,DIE,DR
"RTN","PSOREJU2",147,0)
 S DR="82///"_$S($G(ONOFF):"YES",1:"@")
"RTN","PSOREJU2",148,0)
 I 'RFL S DA=RX,DIE="^PSRX("
"RTN","PSOREJU2",149,0)
 I RFL S DA(1)=RX,DA=RFL,DIE="^PSRX("_RX_",1,"
"RTN","PSOREJU2",150,0)
 D ^DIE
"RTN","PSOREJU2",151,0)
 Q
"RTN","PSOREJU2",152,0)
 ;
"RTN","PSOREJU2",153,0)
REASON(TXT) ; Extracts the Reason for service code from the REASON text field
"RTN","PSOREJU2",154,0)
 ; Input: (r) TXT  - Reason text (e.g., NN Reason for Service Code Text)
"RTN","PSOREJU2",155,0)
 ;Output:   REASON - NN (if on valid and on file (#9002313.23), null otherwise)
"RTN","PSOREJU2",156,0)
 N REASON,DIC,X,Y
"RTN","PSOREJU2",157,0)
 S REASON=$P(TXT," ") I $L(REASON)'=2 Q ""
"RTN","PSOREJU2",158,0)
 S DIC=9002313.23,X=REASON D ^DIC I Y<0 Q ""
"RTN","PSOREJU2",159,0)
 Q REASON
"RTN","PSOREJU2",160,0)
 ;
"RTN","PSOREJU2",161,0)
SETOPN(RX,REJ) ; - Set the Reject RE-OPENED flag to YES
"RTN","PSOREJU2",162,0)
 ;Input: (r) RX    - Rx IEN (#52)
"RTN","PSOREJU2",163,0)
 ;       (r) REJ   - Reject IEN (#52.25)
"RTN","PSOREJU2",164,0)
 ;       
"RTN","PSOREJU2",165,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJU2",166,0)
 N DIE,DA,DR
"RTN","PSOREJU2",167,0)
 S DIE="^PSRX("_RX_",""REJ"",",DA(1)=RX,DA=REJ,DR="23///YES" D ^DIE
"RTN","PSOREJU2",168,0)
 Q
"RTN","PSOREJU2",169,0)
 ;
"RTN","PSOREJU2",170,0)
PRT(FIELD,P,L) ; Sets the lines for fields that require text wrapping
"RTN","PSOREJU2",171,0)
 ;Input: FIELD - Subscript name from the DATA(REJ,FIELD) array
"RTN","PSOREJU2",172,0)
 ;         P   - Position where the content should be printed
"RTN","PSOREJU2",173,0)
 ;         L   - Lenght of the text on each line
"RTN","PSOREJU2",174,0)
 N TXT,I
"RTN","PSOREJU2",175,0)
 S TXT=DATA(REJ,FIELD) I $L(TXT)'>L W ?P,TXT Q
"RTN","PSOREJU2",176,0)
 F I=1:1 Q:TXT=""  D
"RTN","PSOREJU2",177,0)
 . I I=1 W ?P,$E(TXT,1,L),! S TXT=$E(TXT,L+1,999) Q
"RTN","PSOREJU2",178,0)
 . W ?P,$E(TXT,1,L) S TXT=$E(TXT,L+1,999) W:TXT'="" !
"RTN","PSOREJU2",179,0)
 Q
"RTN","PSOREJU2",180,0)
 ;
"RTN","PSOREJU2",181,0)
PA() ; - Ask for Prior Authorization Type and Number
"RTN","PSOREJU2",182,0)
 ;Output:(PAT^PAN) PAT - Prior Authorization Type (See DD File#52,
"RTN","PSOREJU2",183,0)
 ;                         Sub-file#52.25,field#25 for possible values)
"RTN","PSOREJU2",184,0)
 ;                 PAN - Prior Authorization Number (11 digits)
"RTN","PSOREJU2",185,0)
 ;        
"RTN","PSOREJU2",186,0)
 N DIR,Y,DIRUT,DIROUT,PAT,PAN
"RTN","PSOREJU2",187,0)
 S DIR(0)="52.25,25",DIR("A")="  Prior Authorization Type",DIR("B")="0"
"RTN","PSOREJU2",188,0)
 S (DIR("?"),DIR("??"))="^D PAHLP^PSOREJU2"
"RTN","PSOREJU2",189,0)
 D ^DIR I $D(DIRUT)!$D(DIROUT) Q "^"
"RTN","PSOREJU2",190,0)
 S PAT=Y
"RTN","PSOREJU2",191,0)
 K DIR S DIR(0)="52.25,26",DIR("A")="Prior Authorization Number"
"RTN","PSOREJU2",192,0)
 S DIR("?")="^D PANHLP^PSOREJU2",DIR("??")=""
"RTN","PSOREJU2",193,0)
 D ^DIR I (Y["^")!$D(DIROUT) Q "^"
"RTN","PSOREJU2",194,0)
 S PAN=Y
"RTN","PSOREJU2",195,0)
 Q (PAT_"^"_PAN)
"RTN","PSOREJU2",196,0)
 ;
"RTN","PSOREJU2",197,0)
PAHLP ; Prior Authorization Type Help
"RTN","PSOREJU2",198,0)
 W !?9,"EPSDT - Early Periodic Screening Diagnosis Treatment"
"RTN","PSOREJU2",199,0)
 W !?9,"AFDC  - Aid to Family with Dependent Children"
"RTN","PSOREJU2",200,0)
 Q
"RTN","PSOREJU2",201,0)
 ;
"RTN","PSOREJU2",202,0)
PANHLP ; Prior Authorization Number Help
"RTN","PSOREJU2",203,0)
 W "OR you may leave it blank if the claim does not require a number."
"RTN","PSOREJU2",204,0)
 Q
"RTN","PSOREJU3")
0^4^B68089605
"RTN","PSOREJU3",1,0)
PSOREJU3 ;BIRM/LJE - BPS (ECME) - Clinical Rejects Utilities (3) ;04/25/08
"RTN","PSOREJU3",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**287,290,358**;DEC 1997;Build 35
"RTN","PSOREJU3",3,0)
 ;References to 9002313.99 supported by IA 4305
"RTN","PSOREJU3",4,0)
 ;
"RTN","PSOREJU3",5,0)
 Q
"RTN","PSOREJU3",6,0)
 ;
"RTN","PSOREJU3",7,0)
TRICCHK(RX,RFL,RESP,FROM,RVTX) ;check to see if Rx is non-billable or in an "In Progress" state on ECME
"RTN","PSOREJU3",8,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU3",9,0)
 ;         (r) RFL - REFILL
"RTN","PSOREJU3",10,0)
 ;         (o) RESP - Response from $$EN^BPSNCPDP api
"RTN","PSOREJU3",11,0)
 ;   TRICCHK assumes that the calling routine has validated that the fill is Tricare.
"RTN","PSOREJU3",12,0)
 ;
"RTN","PSOREJU3",13,0)
 ;  - \Need to be mindful of foreground and background processing.
"RTN","PSOREJU3",14,0)
 ;
"RTN","PSOREJU3",15,0)
 N ETOUT,ESTAT
"RTN","PSOREJU3",16,0)
 S:'$D(FROM) FROM="" S ESTAT="",ESTAT=$P(RESP,"^",4),NFROM=0 I FROM="PL"!(FROM="PC") S NFROM=1
"RTN","PSOREJU3",17,0)
 Q:ESTAT["PAYABLE"!(ESTAT["REJECTED")
"RTN","PSOREJU3",18,0)
 I ESTAT["IN PROGRESS",FROM="RRL"!($G(RVTX)="RX RELEASE-NDC CHANGE") D  Q
"RTN","PSOREJU3",19,0)
 . I 'NFROM D
"RTN","PSOREJU3",20,0)
 . . W !!,"TRICARE Prescription "_$$GET1^DIQ(52,RX,".01")_" cannot be released until ECME 'IN PROGRESS'"
"RTN","PSOREJU3",21,0)
 . . W !,"status is resolved payable.",!!
"RTN","PSOREJU3",22,0)
 ;
"RTN","PSOREJU3",23,0)
 I $D(RESP) D  Q
"RTN","PSOREJU3",24,0)
 . I +RESP=6 W:'NFROM&('$G(CMOP)) !!,"Inactive ECME Tricare",!! D  Q
"RTN","PSOREJU3",25,0)
 . . S ACT="Inactive ECME Tricare" D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOREJU3",26,0)
 . I +RESP=2!(+RESP=3) N PSONBILL S PSONBILL=1 D TRIC2 Q
"RTN","PSOREJU3",27,0)
 . I +RESP=4!(ESTAT["IN PROGRESS") N PSONPROG S PSONPROG=1 D TRIC2 Q
"RTN","PSOREJU3",28,0)
 Q
"RTN","PSOREJU3",29,0)
 ;
"RTN","PSOREJU3",30,0)
TRIC2 ;
"RTN","PSOREJU3",31,0)
 N ACTION,REJCOD,REJ,DIR,DIRUT,REA,DA,PSCAN,PSOTRIC,ZZZ
"RTN","PSOREJU3",32,0)
 S PSOTRIC=1,REJ=9999999999
"RTN","PSOREJU3",33,0)
 I $G(CMOP)&($G(PSONPROG)) D TACT Q 
"RTN","PSOREJU3",34,0)
 Q:$G(CMOP)
"RTN","PSOREJU3",35,0)
 I 'NFROM D DISPLAY(RX,REJ)
"RTN","PSOREJU3",36,0)
 I 'NFROM&($G(PSONPROG)) D  D SUSP Q
"RTN","PSOREJU3",37,0)
 . W !!,"This prescription will be suspended.  After the third party claim is resolved,"
"RTN","PSOREJU3",38,0)
 . W !,"it may be printed or pulled early from suspense.",!
"RTN","PSOREJU3",39,0)
 . R !!,"Press <RETURN> to continue...",ZZZ:60,!
"RTN","PSOREJU3",40,0)
 I NFROM&($G(PSONPROG)) D TACT Q
"RTN","PSOREJU3",41,0)
 Q:NFROM
"RTN","PSOREJU3",42,0)
TRIC3 ;
"RTN","PSOREJU3",43,0)
 D MSG
"RTN","PSOREJU3",44,0)
 I FROM="PL"!(FROM="PC") D SUSP Q
"RTN","PSOREJU3",45,0)
 ;cnf, PSO*7*358, add code for options
"RTN","PSOREJU3",46,0)
 N ACTION,DIR,DIRUT,OPTS,DEF,COM
"RTN","PSOREJU3",47,0)
TRIC4 S DIR(0)="SO^",DIR("A")="",OPTS="DQ",DEF="D"
"RTN","PSOREJU3",48,0)
 ;reference to ^XUSEC( supported by IA 10076
"RTN","PSOREJU3",49,0)
 I $D(^XUSEC("PSO TRICARE",DUZ)) S OPTS=OPTS_"I" ;PSO*7.0*358, if user has security key, include IGNORE in TRICARE options
"RTN","PSOREJU3",50,0)
 S:(OPTS["D") DIR(0)=DIR(0)_"D:(D)iscontinue - DO NOT FILL PRESCRIPTION;",DIR("A")=DIR("A")_"(D)iscontinue,"
"RTN","PSOREJU3",51,0)
 S:(OPTS["Q") DIR(0)=DIR(0)_"Q:(Q)UIT - SEND TO WORKLIST (REQUIRES INTERVENTION);",DIR("A")=DIR("A")_"(Q)uit,"
"RTN","PSOREJU3",52,0)
 S:(OPTS["I") DIR(0)=DIR(0)_"I:(I)GNORE - FILL Rx WITHOUT CLAIM SUBMISSION;",DIR("A")=DIR("A")_"(I)gnore,"
"RTN","PSOREJU3",53,0)
 S $E(DIR(0),$L(DIR(0)))="",$E(DIR("A"),$L(DIR("A")))="",DIR("??")="^D HELP^PSOREJU2("""_OPTS_""")"
"RTN","PSOREJU3",54,0)
 S:$G(DEF)'="" DIR("B")=DEF D ^DIR I $D(DIRUT) S Y="Q" W !
"RTN","PSOREJU3",55,0)
 ;
"RTN","PSOREJU3",56,0)
 S ACTION=Y
"RTN","PSOREJU3",57,0)
 I ACTION="D" S ACTION=$$DC^PSOREJU1(RX,ACTION)    ;cnf, PSO*7*358
"RTN","PSOREJU3",58,0)
 I ACTION="Q" D WRKLST^PSOREJU4(RX,RFL,,DUZ,DT,1,"",RESP)    ;cnf, PSO*7*358
"RTN","PSOREJU3",59,0)
 I ACTION="I" G TRIC4:'$$CONT^PSOREJU1() S COM=$$TCOM^PSOREJP3() G TRIC4:COM="^" G TRIC4:'$$SIG^PSOREJU1() D
"RTN","PSOREJU3",60,0)
 . D CLOSE^PSOREJUT(RX,RFL,REJ,DUZ,6,COM)   ;TRICARE non-billable should have only 1 reject - eT
"RTN","PSOREJU3",61,0)
 . D AUDIT^PSOTRI(RX,RFL,,COM,$S($$PSOET^PSOREJP3(RX,RFL):"N",1:"R"))
"RTN","PSOREJU3",62,0)
 Q
"RTN","PSOREJU3",63,0)
 ;
"RTN","PSOREJU3",64,0)
MSG ;
"RTN","PSOREJU3",65,0)
 W !!,"This is a non-billable Tricare prescription."    ;cnf, PSO*7*358
"RTN","PSOREJU3",66,0)
 Q
"RTN","PSOREJU3",67,0)
SUSP ;Suspense Rx due to IN PROGRESS status in ECME
"RTN","PSOREJU3",68,0)
 N DA,ACT,RX0,SD,RXS,PSOWFLG,DIK,RXN,XFLAG,RXP,DD,DO,X,Y,DIC,VALMSG,COMM,LFD,DFLG,RXCMOP
"RTN","PSOREJU3",69,0)
 N PSOQFLAG,PSORXZD,PSOQFLAG,PSOKSPPL,PSOZXPPL,PSOZXPI,RXLTOP
"RTN","PSOREJU3",70,0)
 S DA=RX D SUS^PSORXL1
"RTN","PSOREJU3",71,0)
TACT ;
"RTN","PSOREJU3",72,0)
 S ACT="TRICARE-Rx placed on Suspense due to"_$S($G(PSONPROG):" ECME IN PROGRESS status",$G(PSONBILL):"the Rx being Non-billable",1:"")
"RTN","PSOREJU3",73,0)
 I '$G(DUZ) N DUZ S DUZ=.5
"RTN","PSOREJU3",74,0)
 D RXACT^PSOBPSU2(RX,RFL,ACT,"M",DUZ)
"RTN","PSOREJU3",75,0)
 Q
"RTN","PSOREJU3",76,0)
 ;
"RTN","PSOREJU3",77,0)
DISPLAY(RX,REJ,KEY) ; - Displays REJECT information
"RTN","PSOREJU3",78,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJU3",79,0)
 ;         (r) REJ - REJECT ID (IEN)
"RTN","PSOREJU3",80,0)
 ;         (o) KEY - Display "Press any KEY to continue..." (1-YES/0-NO) (Default: 0)
"RTN","PSOREJU3",81,0)
 ;         
"RTN","PSOREJU3",82,0)
 Q:$G(NFROM)
"RTN","PSOREJU3",83,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJU3",84,0)
 I '$D(^PSRX(RX,"REJ",REJ))&('$G(PSONBILL))&('$G(PSONPROG)) Q
"RTN","PSOREJU3",85,0)
 ;
"RTN","PSOREJU3",86,0)
 N DATA,RFL,LINE,%
"RTN","PSOREJU3",87,0)
 S RFL=+$$GET1^DIQ(52.25,REJ_","_RX,5)
"RTN","PSOREJU3",88,0)
 I '$G(PSONBILL)&('$G(PSONPROG)) D GET^PSOREJU2(RX,RFL,.DATA,REJ) I '$D(DATA(REJ)) Q
"RTN","PSOREJU3",89,0)
 ;
"RTN","PSOREJU3",90,0)
 D HDR
"RTN","PSOREJU3",91,0)
 S $P(LINE,"-",74)="" W !?3,LINE
"RTN","PSOREJU3",92,0)
 W !?3,$$DVINFO^PSOREJU2(RX,RFL)
"RTN","PSOREJU3",93,0)
 W !?3,$$PTINFO^PSOREJU2(RX)
"RTN","PSOREJU3",94,0)
 W !?3,"Rx/Drug  : ",$$GET1^DIQ(52,RX,.01),"/",RFL," - ",$E($$GET1^DIQ(52,RX,6),1,20),?54
"RTN","PSOREJU3",95,0)
 W:'$G(PSONBILL)&('$G(PSONPROG)) "ECME#: ",$E(RX+10000000,2,8)
"RTN","PSOREJU3",96,0)
 D TYPE G DISP2:$G(PSONBILL)!($G(PSONPROG))
"RTN","PSOREJU3",97,0)
 I $G(DATA(REJ,"PAYER MESSAGE"))'="" W !?3,"Payer Message: " D PRT^PSOREJU2("PAYER MESSAGE",18,58)
"RTN","PSOREJU3",98,0)
 I $G(DATA(REJ,"DUR TEXT"))'="" W !?3,"DUR Text     : ",DATA(REJ,"DUR TEXT")
"RTN","PSOREJU3",99,0)
 W !?3,"Insurance    : ",DATA(REJ,"INSURANCE NAME"),?50,"Contact: ",DATA(REJ,"PLAN CONTACT")
"RTN","PSOREJU3",100,0)
 W !?3,"Group Name   : ",DATA(REJ,"GROUP NAME"),?45,"Group Number: ",DATA(REJ,"GROUP NUMBER")
"RTN","PSOREJU3",101,0)
 I $G(DATA(REJ,"CARDHOLDER ID"))'="" W !?3,"Cardholder ID: ",DATA(REJ,"CARDHOLDER ID")
"RTN","PSOREJU3",102,0)
 I DATA(REJ,"PLAN PREVIOUS FILL DATE")'="" D
"RTN","PSOREJU3",103,0)
 . W !?3,"Last Fill Dt.: ",DATA(REJ,"PLAN PREVIOUS FILL DATE")
"RTN","PSOREJU3",104,0)
 . W:DATA(REJ,"PLAN PREVIOUS FILL DATE")'="" "   (from payer)"
"RTN","PSOREJU3",105,0)
DISP2 ;
"RTN","PSOREJU3",106,0)
 W !?3,LINE,$C(7) I $G(KEY) W !?3,"Press <RETURN> to continue..." R %:DTIME W !
"RTN","PSOREJU3",107,0)
 Q
"RTN","PSOREJU3",108,0)
 ;
"RTN","PSOREJU3",109,0)
TYPE ;
"RTN","PSOREJU3",110,0)
 I $G(PSONBILL)!($G(PSONPROG)) D  Q
"RTN","PSOREJU3",111,0)
 . D NOW^%DTC S Y=% D DD^%DT
"RTN","PSOREJU3",112,0)
 . W !?3,"Date/Time: "_$$FMTE^XLFDT(Y)
"RTN","PSOREJU3",113,0)
 . W !?3,"Reason   : ",$S($G(PSONBILL):"Drug not billable.",$G(PSONPROG):"ECME Status is in an 'IN PROGRESS' state and cannot be filled",1:"")
"RTN","PSOREJU3",114,0)
 ;
"RTN","PSOREJU3",115,0)
 I $G(DATA(REJ,"REASON"))'="" W !?3,"Reason       : " D PRT^PSOREJU2("REASON",18,58)
"RTN","PSOREJU3",116,0)
 N RTXT,OCODE,OTXT,I
"RTN","PSOREJU3",117,0)
 S (OTXT,RTXT,OCODE)="",RTXT=$S(DATA(REJ,"CODE")=79:"REFILL TOO SOON",CODE=88:"DUR REJECT",1:$$EXP^PSOREJP1(CODE))_" ("_DATA(REJ,"CODE")_")"
"RTN","PSOREJU3",118,0)
 F I=1:1 S OCODE=$P(DATA(REJ,"OTHER REJECTS"),",",I) Q:OCODE=""   D
"RTN","PSOREJU3",119,0)
 . S OTXT=OTXT_", "_$S(OCODE=79:"REFILL TOO SOON",OCODE=88:"DUR REJECT",1:$$EXP^PSOREJP1(OCODE))_" ("_OCODE_")"
"RTN","PSOREJU3",120,0)
 S RTXT=RTXT_OTXT_".  Received on "_$$FMTE^XLFDT($G(DATA(REJ,"DATE/TIME")))_"."
"RTN","PSOREJU3",121,0)
 S OTXT=""
"RTN","PSOREJU3",122,0)
 W !?3,"Reject(s): " D WRAP(RTXT,14)
"RTN","PSOREJU3",123,0)
 Q
"RTN","PSOREJU3",124,0)
 ;
"RTN","PSOREJU3",125,0)
WRAP(PSOTXT,INDENT) ;
"RTN","PSOREJU3",126,0)
 N I,K,PSOWRAP,PSOMARG
"RTN","PSOREJU3",127,0)
 S PSOWRAP=1,PSOMARG=$S('$G(PSORM):80,$D(IOM):IOM,1:80)-(INDENT+5)
"RTN","PSOREJU3",128,0)
W1 S:$L(PSOTXT)<PSOMARG PSOWRAP(PSOWRAP)=PSOTXT I $L(PSOTXT)'<PSOMARG F I=PSOMARG:-1:0 I $E(PSOTXT,I)?1P S PSOWRAP(PSOWRAP)=$E(PSOTXT,1,I),PSOTXT=$E(PSOTXT,I+1,999),PSOWRAP=PSOWRAP+1 G W1
"RTN","PSOREJU3",129,0)
 F K=1:1:PSOWRAP W ?INDENT,PSOWRAP(K),!
"RTN","PSOREJU3",130,0)
 Q
"RTN","PSOREJU3",131,0)
 ;
"RTN","PSOREJU3",132,0)
HDR ;
"RTN","PSOREJU3",133,0)
 I $G(PSONBILL) W !!?24,"*** TRICARE - NON-BILLABLE ***" Q
"RTN","PSOREJU3",134,0)
 I $G(PSONPROG) W !!?18,"*** TRICARE - 'IN PROGRESS' ECME status ***" Q
"RTN","PSOREJU3",135,0)
 I $G(PSOTRIC) W !!?12,"*** TRICARE - "
"RTN","PSOREJU3",136,0)
 E  W !!?16
"RTN","PSOREJU3",137,0)
 W "REJECT RECEIVED FROM THIRD PARTY PAYER ***" Q
"RTN","PSOREJU3",138,0)
 Q
"RTN","PSOREJU3",139,0)
 ;
"RTN","PSOREJU3",140,0)
SUBMIT(RXIEN,RFCNT,PSOTRIC) ;called from PSOCAN2 (routine size exceeded)
"RTN","PSOREJU3",141,0)
 N SUBMITE S SUBMITE=$$SUBMIT^PSOBPSUT(RXIEN)
"RTN","PSOREJU3",142,0)
 I SUBMITE D
"RTN","PSOREJU3",143,0)
 . N ACTION
"RTN","PSOREJU3",144,0)
 . D ECMESND^PSOBPSU1(RXIEN,,,$S($O(^PSRX(RXIEN,1,0)):"RF",1:"OF"))
"RTN","PSOREJU3",145,0)
 . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOREJU3",146,0)
 . I $$PSOET^PSOREJP3(RXIEN) S ACTION="Q" Q 
"RTN","PSOREJU3",147,0)
 . I $$FIND^PSOREJUT(RXIEN) S ACTION=$$HDLG^PSOREJU1(RXIEN,,"79,88","OF","IOQ","Q")
"RTN","PSOREJU3",148,0)
 I 'SUBMITE&(PSOTRIC) D
"RTN","PSOREJU3",149,0)
 . I $$STATUS^PSOBPSUT(RXIEN,RFCNT'["PAYABLE") D TRICCHK(RXIEN,RFCNT)
"RTN","PSOREJU3",150,0)
 Q
"RTN","PSOREJU3",151,0)
 ;
"RTN","PSOREJU3",152,0)
TRISTA(RX,RFL,RESP,FROM,RVTX) ;called from suspense
"RTN","PSOREJU3",153,0)
 N ETOUT,ESTAT,TRESP,TSTAT,PSOTRIC
"RTN","PSOREJU3",154,0)
 S:'$D(RESP) RESP=""
"RTN","PSOREJU3",155,0)
 S (ESTAT,PSOTRIC)="",PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOREJU3",156,0)
 Q:'PSOTRIC 0
"RTN","PSOREJU3",157,0)
 S TRESP=RESP,ESTAT=$P(TRESP,"^",4) S:ESTAT="" ESTAT=$$STATUS^PSOBPSUT(RX,RFL)
"RTN","PSOREJU3",158,0)
 Q:ESTAT["E PAYABLE" 0
"RTN","PSOREJU3",159,0)
 I $$TRIAUD(RX,RFL) Q 0  ;if Tricare Rx is in audit due to override or bypass, allow to print from suspense, cnf
"RTN","PSOREJU3",160,0)
 I +RESP=2,$P(RESP,"^",3)="T",$P(RESP,"^",2)="TRICARE INPATIENT/DISCHARGE" Q 0   ;if TRICARE INPATIENT/DISCHARGE, allow to print from suspense, cnf 
"RTN","PSOREJU3",161,0)
 Q:ESTAT["E REJECTED" 1  ;rejected tricare is not allowed to print from suspense
"RTN","PSOREJU3",162,0)
 ;if 'in progress' (4) or not billable (2,3) don't allow to print from suspense (IA 4415 Values)
"RTN","PSOREJU3",163,0)
 I '$D(RESP)!($P(RESP,"^",1)="")!($G(RESP)="") D
"RTN","PSOREJU3",164,0)
 . S TSTAT=$$STATUS^PSOBPSUT(RX,RFL) S TRESP=$S(TSTAT["IN PROGRESS":4,TSTAT["NOT BILLABLE":2,1:0)
"RTN","PSOREJU3",165,0)
 . S $P(TRESP,"^",4)=TSTAT
"RTN","PSOREJU3",166,0)
 ;
"RTN","PSOREJU3",167,0)
 I +TRESP=2!(+TRESP=3) D WRKLST^PSOREJU4(RX,RFL,"",DUZ,DT,1,"",RESP) Q 1  ;send Tricare non billable to worklist (pseudo reject), cnf
"RTN","PSOREJU3",168,0)
 I +TRESP=4!(ESTAT["IN PROGRESS") Q 1
"RTN","PSOREJU3",169,0)
 Q 0
"RTN","PSOREJU3",170,0)
 ;
"RTN","PSOREJU3",171,0)
TRIAUD(RXIEN,RXFILL) ;is RXIEN in the Tricare audit and no open rejects  ;cnf
"RTN","PSOREJU3",172,0)
 ; RXIEN will only be in Tricare audit if a bypass or override has occurred and rejects are closed
"RTN","PSOREJU3",173,0)
 ; returns  0  if RXIEN is not in Tricare audit at all or not in audit for right fill number
"RTN","PSOREJU3",174,0)
 ;             rejects must be closed for 0 to be returned
"RTN","PSOREJU3",175,0)
 ;          1  if RXIEN is in Tricare audit for the right fill number and rejects are closed
"RTN","PSOREJU3",176,0)
 ;
"RTN","PSOREJU3",177,0)
 N X,AUDIEN,REJIEN
"RTN","PSOREJU3",178,0)
 S X=0,AUDIEN=""
"RTN","PSOREJU3",179,0)
 I '$D(^PS(52.87,"C",RXIEN)) Q X   ;RXIEN is not in the Tricare audit
"RTN","PSOREJU3",180,0)
 ;
"RTN","PSOREJU3",181,0)
 I $G(RXFILL)="" S RXFILL=$$LSTRFL^PSOBPSU1(RXIEN)  ;Get latest fill if not passed in
"RTN","PSOREJU3",182,0)
 ;
"RTN","PSOREJU3",183,0)
 ;check audit entries for right fill number
"RTN","PSOREJU3",184,0)
 F  S AUDIEN=$O(^PS(52.87,"C",RXIEN,AUDIEN)) Q:AUDIEN=""  I RXFILL=$$GET1^DIQ(52.87,AUDIEN,2) S X=1 Q
"RTN","PSOREJU3",185,0)
 I 'X Q X
"RTN","PSOREJU3",186,0)
 ;
"RTN","PSOREJU3",187,0)
 ;make sure rejects are closed
"RTN","PSOREJU3",188,0)
 S REJIEN=0
"RTN","PSOREJU3",189,0)
 F  S REJIEN=$O(^PSRX(RXIEN,"REJ",REJIEN)) Q:'+REJIEN  D  I 'X Q   ;I 'X, then the reject is not closed
"RTN","PSOREJU3",190,0)
 . S X=$$CLOSED^PSOREJP1(RXIEN,REJIEN,0)
"RTN","PSOREJU3",191,0)
 ;
"RTN","PSOREJU3",192,0)
 Q X
"RTN","PSOREJU3",193,0)
 ;
"RTN","PSOREJU4")
0^5^B31223921
"RTN","PSOREJU4",1,0)
PSOREJU4 ;BIRM/LE - Pharmacy Reject Overrides ;06/26/08
"RTN","PSOREJU4",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**289,290,358**;DEC 1997;Build 35
"RTN","PSOREJU4",3,0)
 ;Reference to DUR1^BPSNCPD3 supported by IA 4560
"RTN","PSOREJU4",4,0)
 ;
"RTN","PSOREJU4",5,0)
AUTOREJ(CODES,PSODIV) ;API to evaluate an array of reject codes to see if they are allowed to be passed to OP reject Worklist 
"RTN","PSOREJU4",6,0)
 ;Input:      CODES - required; array of codes to be validated for overrides.  
"RTN","PSOREJU4",7,0)
 ;           PSODIV - optional; Division for the Rx and Fill to be evaluated
"RTN","PSOREJU4",8,0)
 ;        
"RTN","PSOREJU4",9,0)
 ;Output:     CODES(0)=   1 for all reject codes are allowed to be passed to Pharmacy
"RTN","PSOREJU4",10,0)
 ;                         Reject Worklist or 0 (zero) means only default of 79/88/Tricare and
"RTN","PSOREJU4",11,0)
 ;                         any individually override rejects can be passed to the worklist. 
"RTN","PSOREJU4",12,0)
 ;                        
"RTN","PSOREJU4",13,0)
 ;            CODES(SEQ,REJECT)= 0 (zero) if the fill is not allowed to be passed to the Pharmacy
"RTN","PSOREJU4",14,0)
 ;                                Reject Worklist or 1 (one) for the reject code is allowed.
"RTN","PSOREJU4",15,0)
 ;                                
"RTN","PSOREJU4",16,0)
 N SEQ,COD,AUTO,ALLOW,SPDIV
"RTN","PSOREJU4",17,0)
 ;if no division passed, first division in file 59 is assumed.
"RTN","PSOREJU4",18,0)
 I '$G(PSODIV) S PSODIV=0,PSODIV=$O(^PS(59,PSODIV))
"RTN","PSOREJU4",19,0)
 I '$G(PSODIV) S CODES(0)="0^Division undefined in file 59" Q 
"RTN","PSOREJU4",20,0)
 S SPDIV="",SPDIV=$O(^PS(52.86,"B",PSODIV,SPDIV))
"RTN","PSOREJU4",21,0)
 I SPDIV="" S CODES(0)="0^Division is not defined under ePharmacy Site Parameters option." Q
"RTN","PSOREJU4",22,0)
 ;
"RTN","PSOREJU4",23,0)
 ; - all rejects allowed to pass to Pharmacy Reject Worklist?
"RTN","PSOREJU4",24,0)
 S CODES(0)=$$GET1^DIQ(52.86,SPDIV,1,"I")
"RTN","PSOREJU4",25,0)
 ;
"RTN","PSOREJU4",26,0)
 ; - check individual reject codes.  If defined, can be passed to Pharmacy Reject Worklist
"RTN","PSOREJU4",27,0)
 S (COD,SEQ)="" F  S SEQ=$O(CODES(SEQ)) Q:SEQ=""  F  S COD=$O(CODES(SEQ,COD)) Q:COD=""  D
"RTN","PSOREJU4",28,0)
 . I $D(^PS(52.86,+SPDIV,1,"B",COD)) S CODES(SEQ,COD)=1
"RTN","PSOREJU4",29,0)
 . E  S CODES(SEQ,COD)=0
"RTN","PSOREJU4",30,0)
 Q
"RTN","PSOREJU4",31,0)
 ;
"RTN","PSOREJU4",32,0)
WRKLST(RX,RFL,COMMTXT,USERID,DTTIME,OPECC,RXCOB,RESP) ;External API to store reject codes other that 79/88/Tricare on the OP Reject Worklist
"RTN","PSOREJU4",33,0)
 ; 
"RTN","PSOREJU4",34,0)
 N REJ,REJS,REJLST,I,IDX,CODE,DATA,TXT,PSOTRIC,SPDVI,PSODIV,TRIREJCD,CLOSECHK
"RTN","PSOREJU4",35,0)
 S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJU4",36,0)
 L +^PSRX("REJ",RX):15 Q:'$T "0^Rx locked by another user."
"RTN","PSOREJU4",37,0)
 I $G(RFL)="" S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJU4",38,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ,"",RXCOB)
"RTN","PSOREJU4",39,0)
 ;cnf, PSO*7*358, add TRICARE logic
"RTN","PSOREJU4",40,0)
 S TRIREJCD="",CLOSECHK=0
"RTN","PSOREJU4",41,0)
 I $L($G(RESP)) D
"RTN","PSOREJU4",42,0)
 .I $P(RESP,"^",3)'="T" Q       ;ignore if not TRICARE
"RTN","PSOREJU4",43,0)
 .I 'RESP Q   ;Piece 1 will be 0 if claim was submitted thru ECME
"RTN","PSOREJU4",44,0)
 .S TRIREJCD=$T(TRIREJCD+1^PSOREJP3),TRIREJCD=$P(TRIREJCD,";;",2)
"RTN","PSOREJU4",45,0)
 .S REJ("CODE")=TRIREJCD
"RTN","PSOREJU4",46,0)
 .S REJ("REASON")="TRICARE-DRUG NON BILLABLE"
"RTN","PSOREJU4",47,0)
 .S REJ(1,"REJ CODE LST")=TRIREJCD
"RTN","PSOREJU4",48,0)
 .S REJ(1,"ELIGBLT")="T"
"RTN","PSOREJU4",49,0)
 .S CLOSECHK=1
"RTN","PSOREJU4",50,0)
 S PSOTRIC="" S:$G(REJ(1,"ELIGBLT"))="T" PSOTRIC=1
"RTN","PSOREJU4",51,0)
 S:PSOTRIC="" PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,PSOTRIC)
"RTN","PSOREJU4",52,0)
 K REJS S (AUTO,IDX)=""
"RTN","PSOREJU4",53,0)
 F  S IDX=$O(REJ(IDX)) Q:IDX=""  D  Q:AUTO'=""
"RTN","PSOREJU4",54,0)
 . S TXT=REJ(IDX,"REJ CODE LST")
"RTN","PSOREJU4",55,0)
 . F I=1:1:$L(TXT,",") D
"RTN","PSOREJU4",56,0)
 . . S CODE=$P(TXT,",",I)
"RTN","PSOREJU4",57,0)
 . . I CODE'="79"&(CODE'="88")&('$G(PSOTRIC)) S AUTO=$$EVAL(PSODIV,CODE,OPECC,.AUTO) Q:'+AUTO
"RTN","PSOREJU4",58,0)
 . . I PSOTRIC S AUTO=1  ;cnf, send all billable and non-billable rejects to worklist if TRICARE, PSO*7*358
"RTN","PSOREJU4",59,0)
 . . I $$DUP^PSOREJU1(RX,+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN"))),CLOSECHK) S AUTO="0^Rx is already on Pharmacy Reject Worklist."
"RTN","PSOREJU4",60,0)
 . . S REJS(IDX,CODE)=""
"RTN","PSOREJU4",61,0)
 I '$D(REJS) L -^PSRX("REJ",RX) S AUTO="0^No action taken" Q AUTO
"RTN","PSOREJU4",62,0)
 ;D SAVECOM^PSOREJP3(RX,PSREJIEN,COMMTXT,DTTIME,USER)
"RTN","PSOREJU4",63,0)
 G EXIT:'+AUTO
"RTN","PSOREJU4",64,0)
 ;
"RTN","PSOREJU4",65,0)
 D SYNC2^PSOREJUT
"RTN","PSOREJU4",66,0)
 S AUTO=1
"RTN","PSOREJU4",67,0)
EXIT ;
"RTN","PSOREJU4",68,0)
 L -^PSRX("REJ",RX)
"RTN","PSOREJU4",69,0)
 Q AUTO
"RTN","PSOREJU4",70,0)
 ;
"RTN","PSOREJU4",71,0)
EVAL(PSODIV,CODE,OPECC,AUTO) ;Evaluates whether the reject codes other than 79/88/Tricare is allowed to be passed to OP Reject Worklist
"RTN","PSOREJU4",72,0)
 ;Input:      PSODIV - required; Division for the Rx and Fill to be evaluated
"RTN","PSOREJU4",73,0)
 ;              CODE - required; reject code
"RTN","PSOREJU4",74,0)
 ;             OPECC - optional, 1 means manually passed by OPECC means not passed
"RTN","PSOREJU4",75,0)
 ;              AUTO - passed in value to be returned.
"RTN","PSOREJU4",76,0)
 ;Output:       AUTO - 1 means reject is allowed to be passed to Pharmacy Reject Worklist and zero
"RTN","PSOREJU4",77,0)
 ;                       means not allowed.
"RTN","PSOREJU4",78,0)
 ;                       
"RTN","PSOREJU4",79,0)
 N ALLOWA,CIEN,ALLOW,ICOD,SPDIV
"RTN","PSOREJU4",80,0)
 I '$D(CODE)!(CODE="") Q 0
"RTN","PSOREJU4",81,0)
 I '$G(OPECC) S OPECC=0
"RTN","PSOREJU4",82,0)
 I '$G(PSODIV) Q 0
"RTN","PSOREJU4",83,0)
 S SPDIV="",SPDIV=$O(^PS(52.86,"B",PSODIV,SPDIV))
"RTN","PSOREJU4",84,0)
 Q:SPDIV="" "0^Division is not defined under ePharmacy Site Parameters option."
"RTN","PSOREJU4",85,0)
 S:'$G(AUTO) AUTO=""
"RTN","PSOREJU4",86,0)
 S ICOD="",ICOD=$O(^BPSF(9002313.93,"B",CODE,ICOD))
"RTN","PSOREJU4",87,0)
 Q:ICOD="" 0
"RTN","PSOREJU4",88,0)
 S ALLOWA=$$GET1^DIQ(52.86,SPDIV,1,"I") I ALLOWA Q 1
"RTN","PSOREJU4",89,0)
 Q:'$D(^PS(52.86,SPDIV,1,"B",ICOD)) "0^Reject Code is not allowed to be passed to Pharmacy Reject Worklist."
"RTN","PSOREJU4",90,0)
 S CIEN="",CIEN=$O(^PS(52.86,SPDIV,1,"B",ICOD,CIEN))
"RTN","PSOREJU4",91,0)
 I CIEN="" S AUTO="0^Code not defined."
"RTN","PSOREJU4",92,0)
 S (AUTO,ALLOW)="",ALLOW=$$GET1^DIQ(52.8651,CIEN_","_SPDIV,1,"I")
"RTN","PSOREJU4",93,0)
 I ALLOW Q 1
"RTN","PSOREJU4",94,0)
 I 'ALLOW D
"RTN","PSOREJU4",95,0)
 . I OPECC S AUTO=1
"RTN","PSOREJU4",96,0)
 . I 'OPECC S AUTO="0^Reject code "_CODE_" cannot be placed on the Pharmacy Reject Worklist"
"RTN","PSOREJU4",97,0)
 Q AUTO
"RTN","PSOREJU4",98,0)
 ;
"RTN","PSOREJU4",99,0)
OVER ;due to size of PSOREJU1 this subroutine was needed. also used by OVERMSG
"RTN","PSOREJU4",100,0)
 ;The variables RX, RFL, CODE and CODES are expected to remain when exiting this subroutine
"RTN","PSOREJU4",101,0)
 ;
"RTN","PSOREJU4",102,0)
 N DCODE,AUTO,PSODIV,OCODES S (PSODIV,AUTO,DCODE,OCODES,OVRARR)=""
"RTN","PSOREJU4",103,0)
 S OCODES=CODES,CODES=""
"RTN","PSOREJU4",104,0)
 S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJU4",105,0)
 F  S DCODE=$O(^PSRX(RX,"REJ","B",DCODE)) Q:DCODE=""  D
"RTN","PSOREJU4",106,0)
 . I DCODE[79!(DCODE[88) S CODES=CODES_","_DCODE Q
"RTN","PSOREJU4",107,0)
 . S AUTO=$$EVAL(PSODIV,DCODE,0,.AUTO)
"RTN","PSOREJU4",108,0)
 . Q:'+AUTO
"RTN","PSOREJU4",109,0)
 . S CODES=CODES_","_DCODE,OVRARR(DCODE)=""
"RTN","PSOREJU4",110,0)
 S CODES=$E(CODES,2,9999)
"RTN","PSOREJU4",111,0)
 S:CODES="" CODES=OCODES
"RTN","PSOREJU4",112,0)
 Q
"RTN","PSOREJU4",113,0)
 ;
"RTN","PSOREJU4",114,0)
OVRMSG(RX,RFL,OVRMSG,REJDAT) ;
"RTN","PSOREJU4",115,0)
 N CODES,OVRARR,COD
"RTN","PSOREJU4",116,0)
 S CODES=""
"RTN","PSOREJU4",117,0)
 D OVER
"RTN","PSOREJU4",118,0)
 I '$D(REJDAT) D NOW^%DTC S REJDAT=%
"RTN","PSOREJU4",119,0)
 Q:'$D(OVRARR)
"RTN","PSOREJU4",120,0)
 F  S COD=$O(OVRARR(COD)) Q:COD=""  D
"RTN","PSOREJU4",121,0)
 . D SAVECOM^PSOREJP3(RX,COD,OVRMSG,REJDAT,$S($G(DUZ):DUZ,1:.5))
"RTN","PSOREJU4",122,0)
 Q
"RTN","PSOREJU4",123,0)
 ;
"RTN","PSOREJU4",124,0)
INLIST(RX,RFL,RXCOB) ;Returns whether a prescription/fill contains UNRESOLVED rejects
"RTN","PSOREJU4",125,0)
 ;Input:
"RTN","PSOREJU4",126,0)
 ;RX - Prescription IEN. 
"RTN","PSOREJU4",127,0)
 ;FILL - Fill number being processed. 
"RTN","PSOREJU4",128,0)
 ;Output:
"RTN","PSOREJU4",129,0)
 ;0 - the fill is not on the Pharmacy Reject Worklist
"RTN","PSOREJU4",130,0)
 ;1 - the fill is already on the Pharmacy Reject Worklist
"RTN","PSOREJU4",131,0)
 N PSOX,PSOX1,PSOX2,REJDATA1
"RTN","PSOREJU4",132,0)
 S PSOX=$$FIND^PSOREJUT(RX,RFL,.REJDATA1,"") I PSOX=0  Q 0
"RTN","PSOREJU4",133,0)
 S RXCOB=$S(RXCOB=1:"PRIMARY",RXCOB=2:"SECONDARY")
"RTN","PSOREJU4",134,0)
 S PSOX1="" F  S PSOX1=$O(REJDATA1(PSOX1))  Q:PSOX1=""  I REJDATA1(PSOX1,"COB")=RXCOB  S PSOX2=1  Q
"RTN","PSOREJU4",135,0)
 I '$G(PSOX2) Q 0
"RTN","PSOREJU4",136,0)
 Q 1
"RTN","PSOREJU4",137,0)
 ;
"RTN","PSOREJU4",138,0)
MULTI(RX,RFL,REJDATA,CODE,REJS) ;due to routine size, called from FIND^PSOREJUT
"RTN","PSOREJU4",139,0)
 ;returns REJS = 1 means reject code found on Rx, 0 (zero) means not found
"RTN","PSOREJU4",140,0)
 I $G(RFL) D
"RTN","PSOREJU4",141,0)
 . F I=1:1 S RCODE=$P(CODE,",",I) Q:RCODE=""!($G(REJS))  D GET^PSOREJU2(RX,RFL,.REJDATA,,,$G(RCODE)) I $D(REJDATA) S REJS=1
"RTN","PSOREJU4",142,0)
 E  S RFL=0 D  I '$D(REJDATA) F  S RFL=$O(^PSRX(RX,1,RFL)) Q:'RFL  D  Q:$G(REJS)
"RTN","PSOREJU4",143,0)
 . F I=1:1 S RCODE=$P(CODE,",",I) Q:RCODE=""!($G(REJS))  D GET^PSOREJU2(RX,RFL,.REJDATA,,,$G(RCODE)) I $D(REJDATA) S REJS=1
"RTN","PSOREJU4",144,0)
 Q REJS
"RTN","PSOREJU4",145,0)
 ;
"RTN","PSOREJU4",146,0)
SINGLE(RX,RFL,REJDATA,CODE,REJS) ;due to routine size, called from FIND^PSOREJUT
"RTN","PSOREJU4",147,0)
 ;Returns REJS = 1 means reject code found on Rx, 0 (zero) means not found
"RTN","PSOREJU4",148,0)
 I $G(RFL) D
"RTN","PSOREJU4",149,0)
 . D GET^PSOREJU2(RX,RFL,.REJDATA,,,$G(CODE))
"RTN","PSOREJU4",150,0)
 E  S RFL=0 D  I '$D(REJDATA) F  S RFL=$O(^PSRX(RX,1,RFL)) Q:'RFL  D
"RTN","PSOREJU4",151,0)
 . D GET^PSOREJU2(RX,RFL,.REJDATA,,,$G(CODE))
"RTN","PSOREJU4",152,0)
 S REJS=$S($D(REJDATA):1,1:0)
"RTN","PSOREJU4",153,0)
 Q REJS
"RTN","PSOREJUT")
0^15^B48633596
"RTN","PSOREJUT",1,0)
PSOREJUT ;BIRM/MFR - BPS (ECME) - Clinical Rejects Utilities ;06/07/05
"RTN","PSOREJUT",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**148,247,260,287,289,290,358**;DEC 1997;Build 35
"RTN","PSOREJUT",3,0)
 ;Reference to DUR1^BPSNCPD3 supported by IA 4560
"RTN","PSOREJUT",4,0)
 ;Reference to $$ADDCOMM^BPSBUTL supported by IA 4719
"RTN","PSOREJUT",5,0)
 ;
"RTN","PSOREJUT",6,0)
SAVE(RX,RFL,REJ,REOPEN) ; - Saves DUR Information in the file 52
"RTN","PSOREJUT",7,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",8,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",9,0)
 ;         (o) REOPEN - value of 1 means claim being reopened; null or no value passed means reopen claim functionality not being used
"RTN","PSOREJUT",10,0)
 ;         (r) REJ - Array containing information about the REJECT on the following subscripts:
"RTN","PSOREJUT",11,0)
 ;                   "CODE"   - Reject Code (79 or 88)
"RTN","PSOREJUT",12,0)
 ;                   "DATE/TIME"   - Date/Time Reject Detected
"RTN","PSOREJUT",13,0)
 ;                   "PAYER MESSAGE" - Message returned by Payer (up to 140 chars long)
"RTN","PSOREJUT",14,0)
 ;                   "REASON" - Reject Reason (up to 100 chars long)
"RTN","PSOREJUT",15,0)
 ;                   "DUR TEXT" - Payer's DUR description
"RTN","PSOREJUT",16,0)
 ;                   "INSURANCE NAME" - Patient's Insurance Company Name
"RTN","PSOREJUT",17,0)
 ;                   "GROUP NAME" - Patient's Insurance Group Name
"RTN","PSOREJUT",18,0)
 ;                   "GROUP NUMBER" - Patient's Insurance Group Number
"RTN","PSOREJUT",19,0)
 ;                   "CARDHOLDER ID" - Patient's Insurance Cardholder ID
"RTN","PSOREJUT",20,0)
 ;                   "COB" - Coordination of Benefits
"RTN","PSOREJUT",21,0)
 ;                   "PLAN CONTACT" - Patient's Insurance Plan Contact (1-800)
"RTN","PSOREJUT",22,0)
 ;                   "PREVIOUS FILL" - Plan's Previous Fill Date
"RTN","PSOREJUT",23,0)
 ;                   "OTHER REJECTS" - Other Rejects with same Response
"RTN","PSOREJUT",24,0)
 ;                   "PHARMACIST" - Pharmacist DUZ
"RTN","PSOREJUT",25,0)
 ;                   "RESPONSE IEN" - Pointer to the RESPONSE file in ECME
"RTN","PSOREJUT",26,0)
 ;                   "REASON SVC CODE" - Reason for Service Code (pointer to BPS NCPDP REASON FOR SERVICE CODE)
"RTN","PSOREJUT",27,0)
 ;                   "RE-OPENED" - Re-Open Flag
"RTN","PSOREJUT",28,0)
 ;Output: REJ("REJECT IEN")
"RTN","PSOREJUT",29,0)
 N %,DIC,DR,DA,X,DINUM,DD,DO,DLAYGO
"RTN","PSOREJUT",30,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",31,0)
 I '$G(PSODIV) S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJUT",32,0)
 S REJ("CODE")=$G(REJ("CODE"))
"RTN","PSOREJUT",33,0)
 I REJ("CODE")'=79&(REJ("CODE")'=88)&('$G(PSOTRIC))&('$G(REOPEN)) S ERR="",ERR=$$EVAL^PSOREJU4(PSODIV,REJ("CODE"),$G(OPECC),.ERR) Q:'+ERR
"RTN","PSOREJUT",34,0)
 S REJ("PAYER MESSAGE")=$E($G(REJ("PAYER MESSAGE")),1,140),REJ("REASON")=$E($G(REJ("REASON")),1,100)
"RTN","PSOREJUT",35,0)
 S REJ("DUR TEXT")=$E($G(REJ("DUR TEXT")),1,100),REJ("GROUP NAME")=$E($G(REJ("GROUP NAME")),1,30)
"RTN","PSOREJUT",36,0)
 S REJ("INSURANCE NAME")=$E($G(REJ("INSURANCE NAME")),1,30),REJ("PLAN CONTACT")=$E($G(REJ("PLAN CONTACT")),1,30)
"RTN","PSOREJUT",37,0)
 S REJ("GROUP NUMBER")=$E($G(REJ("GROUP NUMBER")),1,30),REJ("OTHER REJECTS")=$E($G(REJ("OTHER REJECTS")),1,15)
"RTN","PSOREJUT",38,0)
 S REJ("CARDHOLDER ID")=$E($G(REJ("CARDHOLDER ID")),1,20),REJ("COB")=$G(REJ("COB"))
"RTN","PSOREJUT",39,0)
 I $G(REJ("DATE/TIME"))="" D NOW^%DTC S REJ("DATE/TIME")=%
"RTN","PSOREJUT",40,0)
 S DIC="^PSRX("_RX_",""REJ"",",DA(1)=RX,DIC(0)=""
"RTN","PSOREJUT",41,0)
 S X=$G(REJ("CODE")),DINUM=$O(^PSRX(RX,"REJ",9999),-1)+1
"RTN","PSOREJUT",42,0)
 S DIC("DR")="1///"_$G(REJ("DATE/TIME"))_";2///"_REJ("PAYER MESSAGE")_";3///"_REJ("REASON")_";4////"_$G(REJ("PHARMACIST"))_";5///"_RFL
"RTN","PSOREJUT",43,0)
 S DIC("DR")=DIC("DR")_";6///"_REJ("GROUP NAME")_";7///"_REJ("PLAN CONTACT")_";8///"_$G(REJ("PREVIOUS FILL"))
"RTN","PSOREJUT",44,0)
 S DIC("DR")=DIC("DR")_";9///0;14///"_$G(REJ("REASON SVC CODE"))_";16///"_$G(REJ("RESPONSE IEN"))
"RTN","PSOREJUT",45,0)
 S DIC("DR")=DIC("DR")_";17///"_$G(REJ("OTHER REJECTS"))_";18///"_REJ("DUR TEXT")_";20///"_REJ("INSURANCE NAME")
"RTN","PSOREJUT",46,0)
 S DIC("DR")=DIC("DR")_";21///"_REJ("GROUP NUMBER")_";22///"_REJ("CARDHOLDER ID")_";23///"_$G(REJ("RE-OPENED"))
"RTN","PSOREJUT",47,0)
 S DIC("DR")=DIC("DR")_";27///"_REJ("COB")
"RTN","PSOREJUT",48,0)
 F  L +^PSRX(RX):5 Q:$T  H 15
"RTN","PSOREJUT",49,0)
 K DD,DO D FILE^DICN K DD,DO S REJ("REJECT IEN")=+Y
"RTN","PSOREJUT",50,0)
 S REJ("OVERRIDE MSG")=$G(DATA("OVERRIDE MSG"))
"RTN","PSOREJUT",51,0)
 I REJ("OVERRIDE MSG")'="" D SAVECOM^PSOREJP3(RX,REJ("REJECT IEN"),REJ("OVERRIDE MSG"),$G(REJ("DATE/TIME")),$G(DUZ))
"RTN","PSOREJUT",52,0)
 K ERR
"RTN","PSOREJUT",53,0)
 L -^PSRX(RX)
"RTN","PSOREJUT",54,0)
 Q
"RTN","PSOREJUT",55,0)
 ; 
"RTN","PSOREJUT",56,0)
CLSALL(RX,RFL,USR,REA,COM,COD1,COD2,COD3,CLA,PA) ; Close/Resolve All Rejects
"RTN","PSOREJUT",57,0)
 ;Input: (r) RX   - Rx IEN (#52)
"RTN","PSOREJUT",58,0)
 ;       (o) RFL  - Refill # (Default: most recent)
"RTN","PSOREJUT",59,0)
 ;       (r) REA  - Close REASON code
"RTN","PSOREJUT",60,0)
 ;       (o) COM  - Close COMMENTS
"RTN","PSOREJUT",61,0)
 ;       (o) USR  - User DUZ responsible for closing all rejects
"RTN","PSOREJUT",62,0)
 ;       (o) COD1 - NCPDP Reason for Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",63,0)
 ;       (o) COD2 - NCPDP Professional Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",64,0)
 ;       (o) COD3 - NCPDP Result of Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",65,0)
 ;       (o) CLA  - NCPDP Clarification Code for overriding RTS and DUR REJECTS
"RTN","PSOREJUT",66,0)
 ;       (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOREJUT",67,0)
 N REJ,REJDATA,DIE,DR,DA
"RTN","PSOREJUT",68,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",69,0)
 ; - Closing OPEN/UNRESOLVED rejects
"RTN","PSOREJUT",70,0)
 I $$FIND(RX,RFL,.REJDATA) D
"RTN","PSOREJUT",71,0)
 . S REJ="" F  S REJ=$O(REJDATA(REJ)) Q:'REJ  D
"RTN","PSOREJUT",72,0)
 . . D CLOSE(RX,RFL,REJ,USR,REA,$G(COM),$G(COD1),$G(COD2),$G(COD3),$G(CLA),$G(PA))
"RTN","PSOREJUT",73,0)
 Q
"RTN","PSOREJUT",74,0)
 ;
"RTN","PSOREJUT",75,0)
CLOSE(RX,RFL,REJ,USR,REA,COM,COD1,COD2,COD3,CLA,PA) ; - Mark a DUR/REFILL TOO SOON reject RESOLVED
"RTN","PSOREJUT",76,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",77,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",78,0)
 ;         (r) REJ - REJECT ID (IEN)
"RTN","PSOREJUT",79,0)
 ;         (o) USR - User (file #200 IEN) responsible for closing the REJECT
"RTN","PSOREJUT",80,0)
 ;         (r) REA - Reason for closing the REJECT:
"RTN","PSOREJUT",81,0)
 ;                       1:CLAIM RE-SUBMITTED
"RTN","PSOREJUT",82,0)
 ;                       2:RX ON HOLD
"RTN","PSOREJUT",83,0)
 ;                       3:RX SUSPENDED
"RTN","PSOREJUT",84,0)
 ;                       4:RX RETURNED TO STOCK
"RTN","PSOREJUT",85,0)
 ;                       5:RX DELETED
"RTN","PSOREJUT",86,0)
 ;                       6:OVERRIDEN W/OUT RE-SUBMISSION
"RTN","PSOREJUT",87,0)
 ;                       7:DISCONTINUED
"RTN","PSOREJUT",88,0)
 ;                       8:RX EDIT
"RTN","PSOREJUT",89,0)
 ;                      99:OTHER
"RTN","PSOREJUT",90,0)
 ;         (o) COM  - Close comments manually entered by the user
"RTN","PSOREJUT",91,0)
 ;         (o) COD1 - NCPDP Reason for Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",92,0)
 ;         (o) COD2 - NCPDP Professional Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",93,0)
 ;         (o) COD3 - NCPDP Result of Service Code for overriding DUR REJECTS
"RTN","PSOREJUT",94,0)
 ;         (o) CLA  - NCPDP Clarification Code for overriding RTS and DUR REJECTS
"RTN","PSOREJUT",95,0)
 ;         (o) PA   - NCPDP Prior Authorization Type and Number (separated by "^")
"RTN","PSOREJUT",96,0)
 I '$G(RX)!'$G(REJ) Q
"RTN","PSOREJUT",97,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",98,0)
 I '$D(^PSRX(RX,"REJ",REJ)) Q
"RTN","PSOREJUT",99,0)
 I $$GET1^DIQ(52.25,REJ_","_RX,5)'=+$G(RFL) Q
"RTN","PSOREJUT",100,0)
 S:'$G(REA) REA=99 S COM=$TR($G(COM),";^",",,")
"RTN","PSOREJUT",101,0)
 N DQ,DA,DIE,DR,X,Y,REJCOM
"RTN","PSOREJUT",102,0)
 D NOW^%DTC
"RTN","PSOREJUT",103,0)
 S REJCOM="AUTOMATICALLY CLOSED" I REA'=1 S REJCOM=COM
"RTN","PSOREJUT",104,0)
 S DA(1)=RX,DA=REJ,DIE="^PSRX("_RX_",""REJ"","
"RTN","PSOREJUT",105,0)
 S DR="9///1;10///"_%_";11////"_$G(USR)_";12///"_REA_";13///"_REJCOM_";14///"_$G(COD1)_";15///"_$G(COD2)
"RTN","PSOREJUT",106,0)
 S DR=DR_";19///"_$G(COD3)_";24///"_$G(CLA)_";25///"_$P($G(PA),"^")_";26///"_$P($G(PA),"^",2)
"RTN","PSOREJUT",107,0)
 D ^DIE S:'$$PSOET^PSOREJP3(RX,RFL) X=$$ADDCOMM^BPSBUTL(RX,RFL,COM)   ;cnf, PSO*7*358, add check for PSOET (pseudoreject)
"RTN","PSOREJUT",108,0)
 Q
"RTN","PSOREJUT",109,0)
 ;
"RTN","PSOREJUT",110,0)
FIND(RX,RFL,REJDATA,CODE) ; - Returns whether a Rx/fill contains UNRESOLVED rejects
"RTN","PSOREJUT",111,0)
 ; Input: (r) RX - Rx IEN (#52) 
"RTN","PSOREJUT",112,0)
 ; (o) RFL - Refill # (If not passed, look original and all refills)
"RTN","PSOREJUT",113,0)
 ; (o) CODE - Can be null, a specific Reject Code(s) to be checked or multiple codes separated by comma's
"RTN","PSOREJUT",114,0)
 ; Output: 1 - Rx contains unresolved Rejects 
"RTN","PSOREJUT",115,0)
 ; 0 - Rx does not contain unresolved Rejects
"RTN","PSOREJUT",116,0)
 ; .REJDATA - Array containing the Reject(s) data (see 
"RTN","PSOREJUT",117,0)
 ; GET^PSOREJU2 for fields documentation)
"RTN","PSOREJUT",118,0)
 N RCODE,I,REJS
"RTN","PSOREJUT",119,0)
 S REJS=0,RCODE=""
"RTN","PSOREJUT",120,0)
 K REJDATA
"RTN","PSOREJUT",121,0)
 I $G(RFL),$$STATUS^PSOBPSUT(RX,RFL)="" Q 0
"RTN","PSOREJUT",122,0)
 I $G(CODE),CODE["," S REJS=$$MULTI^PSOREJU4(RX,$G(RFL),.REJDATA,$G(CODE),REJS) G FEND
"RTN","PSOREJUT",123,0)
 S REJS=$$SINGLE^PSOREJU4(RX,$G(RFL),.REJDATA,$G(CODE),REJS)
"RTN","PSOREJUT",124,0)
FEND ;
"RTN","PSOREJUT",125,0)
 Q $S(REJS:1,1:0)
"RTN","PSOREJUT",126,0)
 ;
"RTN","PSOREJUT",127,0)
SYNC(RX,RFL,USR,RXCOB) ;
"RTN","PSOREJUT",128,0)
 ; Input:  (r) RX  - Rx IEN (#52) 
"RTN","PSOREJUT",129,0)
 ;         (o) RFL - Refill # (Default: most recent)
"RTN","PSOREJUT",130,0)
 ;         (o) USR - User using the system when this routine is called
"RTN","PSOREJUT",131,0)
 ;         (o) RXCOB - Coordination of Benefits code
"RTN","PSOREJUT",132,0)
 I '$G(RXCOB) S RXCOB=1
"RTN","PSOREJUT",133,0)
 N REJ,REJS,REJLST,I,IDX,CODE,DATA,TXT,PSOTRIC,ERR,PSODIV,OPECC,OVREJ,ESH
"RTN","PSOREJUT",134,0)
 L +^PSRX("REJ",RX):0 Q:'$T
"RTN","PSOREJUT",135,0)
 I '$D(RFL) S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOREJUT",136,0)
 S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOREJUT",137,0)
 D DUR1^BPSNCPD3(RX,RFL,.REJ,"",RXCOB)
"RTN","PSOREJUT",138,0)
 S PSOTRIC="" S:$G(REJ(1,"ELIGBLT"))="T" PSOTRIC=1 S:PSOTRIC="" PSOTRIC=$$TRIC^PSOREJP1(RX,RFL,.PSOTRIC)
"RTN","PSOREJUT",139,0)
 K REJS S (OPECC,IDX,ERR)=""
"RTN","PSOREJUT",140,0)
 F  S IDX=$O(REJ(IDX)) Q:IDX=""  S TXT=$G(REJ(IDX,"REJ CODE LST")) D
"RTN","PSOREJUT",141,0)
 . F I=1:1:$L(TXT,",") S CODE=$P(TXT,",",I),OVREJ="" D
"RTN","PSOREJUT",142,0)
 . . I ",M6,M8,99,NN,"[(","_CODE_",") S ESH="",ESH=$$DUR^PSOBPSU2(RX,RFL) Q:'ESH&('PSOTRIC)
"RTN","PSOREJUT",143,0)
 . . I CODE'="79"&(CODE'="88")&('$G(PSOTRIC)) S ERR=$$EVAL^PSOREJU4(PSODIV,CODE,OPECC,.ERR) Q:'+ERR
"RTN","PSOREJUT",144,0)
 . . S:+$G(ERR) OVREJ=1
"RTN","PSOREJUT",145,0)
 . . I $$DUP^PSOREJU1(RX,+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN")))) Q
"RTN","PSOREJUT",146,0)
 . . S REJS(IDX,CODE)=OVREJ
"RTN","PSOREJUT",147,0)
 I '$D(REJS) L -^PSRX("REJ",RX) Q
"RTN","PSOREJUT",148,0)
SYNC2 ;
"RTN","PSOREJUT",149,0)
 S (IDX,CODE)="" F  S IDX=$O(REJS(IDX)) Q:IDX=""  D
"RTN","PSOREJUT",150,0)
 . F  S CODE=$O(REJS(IDX,CODE)) Q:CODE=""  K DATA D
"RTN","PSOREJUT",151,0)
 . . I 'OPECC&(CODE'[79)&(CODE'[88) S DATA("OVERRIDE MSG")="Automatically transferred due to override for reject code."
"RTN","PSOREJUT",152,0)
 . . I OPECC&(CODE'[79)&(CODE'[88) S DATA("OVERRIDE MSG")="Transferred by "_$S(CODE'["eT":"OPECC.",1:"")   ;cnf,PSO*7.0*358
"RTN","PSOREJUT",153,0)
 . . I $D(COMMTXT) S:COMMTXT'="" DATA("OVERRIDE MSG")=DATA("OVERRIDE MSG")_" "_$$CLEAN^PSOREJU1($P(COMMTXT,":",2))
"RTN","PSOREJUT",154,0)
 . . S DATA("DUR TEXT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"DUR FREE TEXT DESC")))
"RTN","PSOREJUT",155,0)
 . . S DATA("PAYER MESSAGE")=$$CLEAN^PSOREJU1($G(REJ(IDX,"PAYER MESSAGE")))
"RTN","PSOREJUT",156,0)
 . . S DATA("CODE")=CODE,DATA("REASON")=$$CLEAN^PSOREJU1($G(REJ(IDX,"REASON")))
"RTN","PSOREJUT",157,0)
 . . S DATA("PHARMACIST")=$G(USR),DATA("INSURANCE NAME")=$$CLEAN^PSOREJU1($G(REJ(IDX,"INSURANCE NAME")))
"RTN","PSOREJUT",158,0)
 . . S DATA("GROUP NAME")=$$CLEAN^PSOREJU1($G(REJ(IDX,"GROUP NAME"))),DATA("GROUP NUMBER")=$$CLEAN^PSOREJU1($G(REJ(IDX,"GROUP NUMBER")))
"RTN","PSOREJUT",159,0)
 . . S DATA("CARDHOLDER ID")=$$CLEAN^PSOREJU1($G(REJ(IDX,"CARDHOLDER ID"))),DATA("PLAN CONTACT")=$$CLEAN^PSOREJU1($G(REJ(IDX,"PLAN CONTACT")))
"RTN","PSOREJUT",160,0)
 . . S DATA("PREVIOUS FILL")=$$CLEAN^PSOREJU1($$DAT^PSOREJU1($G(REJ(IDX,"PREVIOUS FILL DATE"))))
"RTN","PSOREJUT",161,0)
 . . S DATA("OTHER REJECTS")=$$CLEAN^PSOREJU1($$OTH^PSOREJU1(CODE,$G(REJ(IDX,"REJ CODE LST"))))
"RTN","PSOREJUT",162,0)
 . . S DATA("RESPONSE IEN")=+$$CLEAN^PSOREJU1($G(REJ(IDX,"RESPONSE IEN")))
"RTN","PSOREJUT",163,0)
 . . S DATA("REASON SVC CODE")=$$REASON^PSOREJU2($G(REJ(IDX,"REASON"))),DATA("COB")=IDX
"RTN","PSOREJUT",164,0)
 . . D SAVE(RX,RFL,.DATA)
"RTN","PSOREJUT",165,0)
 L -^PSRX("REJ",RX)
"RTN","PSOREJUT",166,0)
 Q
"RTN","PSORN52")
0^22^B47667744
"RTN","PSORN52",1,0)
PSORN52 ;BIR/DSD - files renewal entries in prescription file ;08/09/93
"RTN","PSORN52",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**1,11,27,37,46,79,71,100,117,157,143,219,148,239,201,225,303,358**;DEC 1997;Build 35
"RTN","PSORN52",3,0)
 ;Ext ref to ^PS(55 sup by DBIA 2228
"RTN","PSORN52",4,0)
 ;Ext ref to PSOUL^PSSLOCK sup by DBIA 2789
"RTN","PSORN52",5,0)
 ;Ext ref to ^VA(200 sup by DBIA 10060
"RTN","PSORN52",6,0)
 ;Ext ref to SWSTAT^IBBAPI sup by DBIA 4663
"RTN","PSORN52",7,0)
EN(PSOX) ;EP
"RTN","PSORN52",8,0)
START ;
"RTN","PSORN52",9,0)
 D:$D(XRTL) T0^%ZOSV ; Start RT Mon
"RTN","PSORN52",10,0)
 N PSOIBHLD,PSOSCOTH,PSOSCOTX S (PSOSCOTH,PSOSCOTX)=0 S PSOIBHLD="" I $G(PSOFDR),$G(ORD) D
"RTN","PSORN52",11,0)
 .S PSOIBHLD=$S($P($G(^PS(52.41,ORD,0)),"^",16)="SC":1,$P($G(^(0)),"^",16)="NSC":0,1:"")
"RTN","PSORN52",12,0)
 .I '$$DT^PSOMLLDT Q
"RTN","PSORN52",13,0)
 .N PSOIBHLX S PSOIBHLX=$G(^PS(52.41,ORD,"IBQ"))
"RTN","PSORN52",14,0)
 .S PSOIBHLD=PSOIBHLD_"^"_$S($P(PSOIBHLX,"^")=1:1,$P(PSOIBHLX,"^")=0:0,1:"")_"^"_$S($P(PSOIBHLX,"^",2)=1:1,$P(PSOIBHLX,"^",2)=0:0,1:"")_"^"_$S($P(PSOIBHLX,"^",3)=1:1,$P(PSOIBHLX,"^",3)=0:0,1:"")
"RTN","PSORN52",15,0)
 .S PSOIBHLD=PSOIBHLD_"^"_$S($P(PSOIBHLX,"^",4)=1:1,$P(PSOIBHLX,"^",4)=0:0,1:"")_"^"_$S($P(PSOIBHLX,"^",5)=1:1,$P(PSOIBHLX,"^",5)=0:0,1:"")_"^"_$S($P(PSOIBHLX,"^",6)=1:1,$P(PSOIBHLX,"^",6)=0:0,1:"")
"RTN","PSORN52",16,0)
 .S PSOIBHLD=PSOIBHLD_"^"_$S($P(PSOIBHLX,"^",7)=1:1,$P(PSOIBHLX,"^",7)=0:0,1:"")
"RTN","PSORN52",17,0)
 .I $P(PSOIBHLX,"^")=1!($P(PSOIBHLX,"^",2)=1)!($P(PSOIBHLX,"^",3)=1)!($P(PSOIBHLX,"^",4)=1)!($P(PSOIBHLX,"^",5)=1)!($P(PSOIBHLX,"^",6)=1)!($P(PSOIBHLX,"^",7)=1) S PSOSCOTH=1
"RTN","PSORN52",18,0)
 I $G(PSOSCOTH)!($G(PSORX("SC"))="SC")!($G(PSORX("SC"))="NSC") S PSOSCOTX=1
"RTN","PSORN52",19,0)
 S PSOANSQ("SC>50")="" D SCP^PSORN52D
"RTN","PSORN52",20,0)
 I $G(PSOFDR),$G(ORD) I $D(^PS(52.41,ORD,"ICD")) S FILE=52.41 D GET^PSORN52D
"RTN","PSORN52",21,0)
 ;Set ans to renew from Rx, only if no ans from Pend file
"RTN","PSORN52",22,0)
 I $G(PSORENW("OIRXN")) D
"RTN","PSORN52",23,0)
 .N PSOLDIBQ S PSOLDIBQ=$G(^PSRX(PSORENW("OIRXN"),"IBQ"))
"RTN","PSORN52",24,0)
 .I $P(PSOIBHLD,"^")="" D
"RTN","PSORN52",25,0)
 ..I $P($G(^PSRX(PSORENW("OIRXN"),"IB")),"^")=2 S $P(PSOIBHLD,"^")=0
"RTN","PSORN52",26,0)
 .I '$$DT^PSOMLLDT Q
"RTN","PSORN52",27,0)
 .I PSOLDIBQ="" Q
"RTN","PSORN52",28,0)
 .D IBHLD^PSORN52A
"RTN","PSORN52",29,0)
 D INIT G:PSORN52("QFLG") END D FILE^PSORN52A
"RTN","PSORN52",30,0)
 S:$D(XRT0) XRTN=$T(+0) D:$D(XRT0) T1^%ZOSV ; Stop RT Mon
"RTN","PSORN52",31,0)
 K PSOANSQ,PSOANSQD,PSONEWFF
"RTN","PSORN52",32,0)
 I $G(PSOIBHLD)'="" D
"RTN","PSORN52",33,0)
 .;Set answers based on Pend Renew, prior to Phar call
"RTN","PSORN52",34,0)
 .Q:'$G(PSOX("IRXN"))
"RTN","PSORN52",35,0)
 .I $P(PSOIBHLD,"^")=1!($P(PSOIBHLD,"^")=0) S PSOANSQ("SC")=$P(PSOIBHLD,"^")
"RTN","PSORN52",36,0)
 .I '$$DT^PSOMLLDT Q
"RTN","PSORN52",37,0)
 .I $P(PSOIBHLD,"^",2)=1!($P(PSOIBHLD,"^",2)=0) S PSOANSQ(PSOX("IRXN"),"MST")=$P(PSOIBHLD,"^",2)
"RTN","PSORN52",38,0)
 .I $P(PSOIBHLD,"^",3)=1!($P(PSOIBHLD,"^",3)=0) S PSOANSQ(PSOX("IRXN"),"VEH")=$P(PSOIBHLD,"^",3)
"RTN","PSORN52",39,0)
 .I $P(PSOIBHLD,"^",4)=1!($P(PSOIBHLD,"^",4)=0) S PSOANSQ(PSOX("IRXN"),"RAD")=$P(PSOIBHLD,"^",4)
"RTN","PSORN52",40,0)
 .I $P(PSOIBHLD,"^",5)=1!($P(PSOIBHLD,"^",5)=0) S PSOANSQ(PSOX("IRXN"),"PGW")=$P(PSOIBHLD,"^",5)
"RTN","PSORN52",41,0)
 .I $P(PSOIBHLD,"^",6)=1!($P(PSOIBHLD,"^",6)=0) S PSOANSQ(PSOX("IRXN"),"HNC")=$P(PSOIBHLD,"^",6)
"RTN","PSORN52",42,0)
 .I $P(PSOIBHLD,"^",7)=1!($P(PSOIBHLD,"^",7)=0) S PSOANSQ(PSOX("IRXN"),"CV")=$P(PSOIBHLD,"^",7)
"RTN","PSORN52",43,0)
 .I $P(PSOIBHLD,"^",8)=1!($P(PSOIBHLD,"^",8)=0) S PSOANSQ(PSOX("IRXN"),"SHAD")=$P(PSOIBHLD,"^",8)
"RTN","PSORN52",44,0)
 K PSOIBHLD
"RTN","PSORN52",45,0)
 I '$G(PSOFDR) I $G(PSORENW("OIRXN")) S FILE=52 D GET^PSORN52D
"RTN","PSORN52",46,0)
 S PSONEW("NEWCOPAY")=""
"RTN","PSORN52",47,0)
 I (PSOSCP<50&('$P($G(^PS(53,+$P(^PSRX(PSOX("IRXN"),0),"^",3),0)),"^",7))),$G(DUZ("AG"))="V" S PSOFLAG=0 D COPAY^PSOCPB
"RTN","PSORN52",48,0)
 ;I PSOSCP>49!($P($G(^PS(53,+$P(^PSRX(PSOX("IRXN"),0),"^",3),0)),"^",7)=1) S PSOFLAG=0 D SC^PSOMLLD2
"RTN","PSORN52",49,0)
 I PSOSCA&(PSOSCP>49)!((PSOSCA!(PSOBILL=2))&($P($G(^PS(53,+$P(^PSRX(PSOX("IRXN"),0),"^",3),0)),"^",7)=1)) S PSOFLAG=0 D SC^PSOMLLD2
"RTN","PSORN52",50,0)
 I $$DT^PSOMLLDT D
"RTN","PSORN52",51,0)
 .I $D(PSOIBQS(PSODFN,"CV")) D MESS D CV^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"CV")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",52,0)
 .I $D(PSOIBQS(PSODFN,"VEH")) D MESS D VEH^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"VEH")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",53,0)
 .I $D(PSOIBQS(PSODFN,"RAD")) D MESS D RAD^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"RAD")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",54,0)
 .I $D(PSOIBQS(PSODFN,"PGW")) D MESS D PGW^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"PGW")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",55,0)
 .I $D(PSOIBQS(PSODFN,"SHAD")) D MESS D SHAD^PSOMLLD2 I $G(PSOANSQ(PSOX("IRXN"),"SHAD")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",56,0)
 .I $D(PSOIBQS(PSODFN,"MST")) D MESS D MST^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"MST")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",57,0)
 .I $D(PSOIBQS(PSODFN,"HNC")) D MESS D HNC^PSOMLLDT I $G(PSOANSQ(PSOX("IRXN"),"HNC")) K PSONEW("NEWCOPAY")
"RTN","PSORN52",58,0)
 K PSOSCOTH,PSOSCOTX
"RTN","PSORN52",59,0)
 I $G(PSONEW("NEWCOPAY")) S ^PSRX(PSOX("IRXN"),"IB")=PSONEW("NEWCOPAY")
"RTN","PSORN52",60,0)
 ;
"RTN","PSORN52",61,0)
 D FINISH,ACP^PSOUTIL
"RTN","PSORN52",62,0)
 ;
"RTN","PSORN52",63,0)
 N PSOSCFLD S PSOSCFLD=$S(PSOSCP'="":$G(PSOANSQ("SC")),1:"")_"^"_$G(PSOANSQ(PSOX("IRXN"),"MST"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"VEH"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"RAD"))
"RTN","PSORN52",64,0)
 S PSOSCFLD=PSOSCFLD_"^"_$G(PSOANSQ(PSOX("IRXN"),"PGW"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"HNC"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"CV"))_"^"_$G(PSOANSQ(PSOX("IRXN"),"SHAD"))
"RTN","PSORN52",65,0)
 I PSOSCP<50&($TR(PSOSCFLD,"^")'="")&('$P($G(^PS(53,+$P(^PSRX(PSOX("IRXN"),0),"^",3),0)),"^",7)) S ^PSRX(PSOX("IRXN"),"IBQ")=PSOSCFLD K PSOSCFLD
"RTN","PSORN52",66,0)
 ;
"RTN","PSORN52",67,0)
 D FILE2^PSORN52D
"RTN","PSORN52",68,0)
 D:$$SWSTAT^IBBAPI() GACT^PSOPFSU0(PSOX("IRXN"),0)
"RTN","PSORN52",69,0)
 K PSONEW("NEWCOPAY"),PSOANSQ
"RTN","PSORN52",70,0)
END D EOJ
"RTN","PSORN52",71,0)
 Q
"RTN","PSORN52",72,0)
INIT S PSORN52("QFLG")=0 S:'$D(PSOX("DAYS SUPPLY")) PSOX("DAYS SUPPLY")=$P(PSOX("RX0"),"^",8)
"RTN","PSORN52",73,0)
 S:'$D(PSOX("# OF REFILLS")) PSOX("# OF REFILLS")=$P(PSOX("RX0"),"^",9) S:'$D(PSOX("ISSUE DATE")) PSOX("ISSUE DATE")=DT
"RTN","PSORN52",74,0)
 D INIT^PSON52 K PSON52
"RTN","PSORN52",75,0)
 Q
"RTN","PSORN52",76,0)
 ;
"RTN","PSORN52",77,0)
FINISH ;
"RTN","PSORN52",78,0)
 G:PSOX("STATUS")=4 FINISHP
"RTN","PSORN52",79,0)
 I $D(PSORX("VERIFY")) D  G FINISHX
"RTN","PSORN52",80,0)
 .K DIC,DLAYGO,DINUM,DIADD,X,DD,DO S DIC="^PS(52.4,",DLAYGO=52.4,DINUM=PSOX("IRXN"),DIC(0)="ML"
"RTN","PSORN52",81,0)
 .S X=PSOX("IRXN") D FILE^DICN K DD,DO,DIC,DLAYGO,DINUM,X
"RTN","PSORN52",82,0)
 .S ^PS(52.4,PSOX("IRXN"),0)=PSOX("IRXN")_"^"_$P(PSOX("NRX0"),"^",2)_"^"_DUZ_"^"_$G(PSOX("OIRXN"))_"^"_$E(PSOX("LOGIN DATE"),1,7)_"^"_PSOX("IRXN")_"^"_PSOX("STOP DATE")
"RTN","PSORN52",83,0)
 .K DIK,DA S DIK="^PS(52.4,",DA=PSOX("IRXN") D IX^DIK K DIK,DA
"RTN","PSORN52",84,0)
 ;
"RTN","PSORN52",85,0)
 I $G(PSOX("QS"))="S",$G(PSOBARCD) S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=0 D SUS^PSORXL K DA G FINISHX
"RTN","PSORN52",86,0)
 ;
"RTN","PSORN52",87,0)
 I PSOX("FILL DATE")>DT,$P(PSOPAR,"^",6) S DA=PSOX("IRXN"),RXFL(PSOX("IRXN"))=0 D SUS^PSORXL K DA G FINISHX
"RTN","PSORN52",88,0)
 ;
"RTN","PSORN52",89,0)
 ; - Submitting Rx to ECME for 3rd Party Billing
"RTN","PSORN52",90,0)
 N ACTION
"RTN","PSORN52",91,0)
 I $$SUBMIT^PSOBPSUT(PSOX("IRXN"),0) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSORN52",92,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSOX("IRXN"),0,PSOX("FILL DATE"),"RN")
"RTN","PSORN52",93,0)
 . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSORN52",94,0)
 . I $$PSOET^PSOREJP3(PSOX("IRXN"),0) S ACTION="Q" Q
"RTN","PSORN52",95,0)
 . I $$FIND^PSOREJUT(PSOX("IRXN"),0) D
"RTN","PSORN52",96,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSOX("IRXN"),0,"79,88","RN","IOQ","Q")
"RTN","PSORN52",97,0)
 ;
"RTN","PSORN52",98,0)
 I $G(PSOX("QS"))="Q",$G(PSOBARCD) D  G FINISHX
"RTN","PSORN52",99,0)
 . N PSOFROM S PSOFROM="BATCH" I $G(PPL),$L(PPL_PSOX("IRXN")_",")>240 D TRI^PSOBBC D Q^PSORXL K PPL,RXFL
"RTN","PSORN52",100,0)
 .S RXFL(PSOX("IRXN"))=0
"RTN","PSORN52",101,0)
 . I $G(PPL) S PPL=PPL_PSOX("IRXN")_","
"RTN","PSORN52",102,0)
 . E  S PPL=PSOX("IRXN")_","
"RTN","PSORN52",103,0)
 . Q
"RTN","PSORN52",104,0)
FINISHP I $G(PSORX("PSOL",1))']"" S PSORX("PSOL",1)=PSOX("IRXN")_",",RXFL(PSOX("IRXN"))=0 G FINISHX
"RTN","PSORN52",105,0)
 F PSOX1=0:0 S PSOX1=$O(PSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSORN52",106,0)
 I $L(PSORX("PSOL",PSOX2))+$L(PSOX("IRXN"))<220 S PSORX("PSOL",PSOX2)=PSORX("PSOL",PSOX2)_PSOX("IRXN")_","
"RTN","PSORN52",107,0)
 E  S PSORX("PSOL",PSOX2+1)=PSOX("IRXN")_","
"RTN","PSORN52",108,0)
 S RXFL(PSOX("IRXN"))=0
"RTN","PSORN52",109,0)
FINISHX ;
"RTN","PSORN52",110,0)
 ;call to build bingo board Rx array
"RTN","PSORN52",111,0)
 S:'$G(PSORX("MAIL/WINDOW")) PSORX("MAIL/WINDOW")=$P(PSORENW("NRX0"),"^",11)
"RTN","PSORN52",112,0)
 I $G(PSORX("MAIL/WINDOW"))["W" S BINGCRT=1,BINGRTE="W",BBFLG=1 D BBRX^PSORN52C
"RTN","PSORN52",113,0)
 K PSOX1,PSOX2
"RTN","PSORN52",114,0)
 Q
"RTN","PSORN52",115,0)
EOJ ;
"RTN","PSORN52",116,0)
 L -^PSRX("B",PSOX("IRXN")) K PSORN52,PSOX("INS"),PSORENW("INS"),PSORXED("INS"),PSONEW("ENT"),PSORXED("ENT"),OLENT,PSOIBHLD,PSOX("SINS"),PSORENW("SINS"),PSORXED("SINS"),FILE
"RTN","PSORN52",117,0)
 D PSOUL^PSSLOCK(PSOX("IRXN")) D PSOUL^PSSLOCK(PSOX("OIRXN"))
"RTN","PSORN52",118,0)
 Q
"RTN","PSORN52",119,0)
MESS ;
"RTN","PSORN52",120,0)
 I $G(PSOSCOTX)=1&(PSOSCP<50) W:$G(PSODRUG("DEA"))'["S"&($G(PSODRUG("DEA"))'["I") !!,"This Rx has been flagged by the provider as: "_$S($G(PSOSCOTH):"NO COPAY",$G(PSORX("SC"))="SC":"NO COPAY",1:"COPAY"),! S PSOSCOTX=2
"RTN","PSORN52",121,0)
 Q
"RTN","PSORXL1")
0^27^B49207569
"RTN","PSORXL1",1,0)
PSORXL1 ;BIR/SAB-action to be taken on prescriptions ; 10/5/07 2:40pm
"RTN","PSORXL1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**36,46,148,260,274,287,289,358**;DEC 1997;Build 35
"RTN","PSORXL1",3,0)
S S SPPL="",PPL1=1 S:'$G(PPL) PPL=$G(PSORX("PSOL",PPL1)) G:$G(PPL)']"" D1
"RTN","PSORXL1",4,0)
S1 F PI=1:1 Q:$P(PPL,",",PI)=""  S DA=$P(PPL,",",PI) D
"RTN","PSORXL1",5,0)
 .I $P(^PSRX(DA,"STA"),"^")<10,$P(^("STA"),"^")'=4 D SUS Q
"RTN","PSORXL1",6,0)
 .I $P(^PSRX(DA,"STA"),"^")=4 S SPPL=SPPL_DA_"," Q
"RTN","PSORXL1",7,0)
 I $G(SPPL)]"" D  K DIR S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR K DIR,DUOUT,DTOUT,DIRUT
"RTN","PSORXL1",8,0)
 .W !!,$C(7),"Drug Interaction Rx(s) " F I=1:1 Q:$P(SPPL,",",I)=""  W $P(^PSRX($P(SPPL,",",I),0),"^")_", "
"RTN","PSORXL1",9,0)
 .I $G(PSOLAP)=""!($G(PSOLAP)=$G(ION)) W !,"Label device must be selected for Drug Interaction label!"
"RTN","PSORXL1",10,0)
 .S PPL=SPPL,DG=1 N PPL1 D Q^PSORXL K DG,SPPL
"RTN","PSORXL1",11,0)
 S SUSPT="SUSPENSE" G D1
"RTN","PSORXL1",12,0)
 Q
"RTN","PSORXL1",13,0)
SUS S ACT=1,RXN=DA,RX0=^PSRX(DA,0),SD=$S($G(ZD(DA)):$E(ZD(DA),1,7),1:$P(^(3),"^")),RXS=$O(^PS(52.5,"B",DA,0)) I RXS S RXCMOP=$P($G(^PS(52.5,RXS,0)),"^",7) D  Q:$G(DFLG)!($G(PSOWFLG))
"RTN","PSORXL1",14,0)
 .;checks to see if future fill exists
"RTN","PSORXL1",15,0)
 .S PSOWFLG=0 I '$G(RXPR(DA)),$P($G(^PS(52.5,RXS,"P")),"^")=0,$P($G(^PSRX(DA,"STA")),"^")=5 D SWARN Q:$G(PSOWFLG)
"RTN","PSORXL1",16,0)
 .K PSOWFLG I $G(RXPR(DA)),'$P($G(^PS(52.5,RXS,"P")),"^") D WARN Q:$G(DFLG)
"RTN","PSORXL1",17,0)
 .S DA=RXS,DIK="^PS(52.5," D ^DIK S DA=RXN I $P($G(^PSRX(RXN,"STA")),"^")=5 S $P(^("STA"),"^")=0
"RTN","PSORXL1",18,0)
 G:$G(RXRP(DA))!($G(RXPR(DA))) LOCK
"RTN","PSORXL1",19,0)
 I $G(PSXSYS) D SUS1^PSOCMOP I $G(XFLAG)=1 K XFLAG Q
"RTN","PSORXL1",20,0)
LOCK I $P($G(^PSRX(RXN,"STA")),"^")=3 G SUSQ
"RTN","PSORXL1",21,0)
 S RXP=+$G(RXPR(DA)),DIC="^PS(52.5,",DIC(0)="L",X=RXN,DIC("DR")=".02///"_SD_";.03////"_$P(^PSRX(DA,0),"^",2)_";.04///M;.05///"_RXP_";.06////"_PSOSITE_";2///0" K DD,DO D FILE^DICN D  I +Y,'$G(RXP),$G(RXRP(RXN)) S $P(^PS(52.5,+Y,0),"^",12)=1
"RTN","PSORXL1",22,0)
 .K DD,DO I +Y,$G(PSOEXREP) S $P(^PS(52.5,+Y,0),"^",12)=1
"RTN","PSORXL1",23,0)
 .I +Y S $P(^PS(52.5,+Y,0),"^",13)=$G(RXFL(RXN))
"RTN","PSORXL1",24,0)
 S $P(^PSRX(RXN,"STA"),"^")=5,LFD=$E(SD,4,5)_"-"_$E(SD,6,7)_"-"_$E(SD,2,3) D ACT
"RTN","PSORXL1",25,0)
 W !!,$S(RXP:"Partial ",1:"")_"RX# ",$P(^PSRX(RXN,0),"^")_" has been suspended until "_LFD_"."
"RTN","PSORXL1",26,0)
 S VALMSG=$S(RXP:"Partial ",1:"")_"Rx# "_$P(^PSRX(RXN,0),"^")_" Has Been Suspended Until "_LFD_"."_$S($G(RXRP(RXN))&('$G(RXP)):" (Reprint)",1:"")
"RTN","PSORXL1",27,0)
 S COMM=$S(RXP:"Partial ",1:"")_"Rx# "_$P(^PSRX(RXN,0),"^")_" Has Been Suspended Until "_LFD_"."_$S($G(RXRP(RXN))&('$G(RXP)):" (Reprint)",1:"")
"RTN","PSORXL1",28,0)
 D:'$D(^TMP("PSORXN",$J,RXN)) EN^PSOHLSN1(RXN,"SC","ZS",COMM)
"RTN","PSORXL1",29,0)
 S:$D(^TMP("PSORXN",$J,RXN)) $P(^TMP("PSORXN",$J,RXN),"^",4)=COMM
"RTN","PSORXL1",30,0)
 ;
"RTN","PSORXL1",31,0)
 ; - If not a PARTIAL, reverse ECME Claim, if necessary
"RTN","PSORXL1",32,0)
 I '$G(RXFL(RXN)) S RXFL(RXN)=$$LSTRFL^PSOBPSU1(RXN)
"RTN","PSORXL1",33,0)
 I '$G(RXP),'$G(PSONPROG) D REVERSE^PSOBPSU1(RXN,,"DC",3)  ;PSONPROG - Tricare in progress, don't reverse
"RTN","PSORXL1",34,0)
 K COMM
"RTN","PSORXL1",35,0)
SUSQ Q
"RTN","PSORXL1",36,0)
 ;PSO*7*274 always recalculate RXF
"RTN","PSORXL1",37,0)
ACT S RXF=0 F I=0:0 S I=$O(^PSRX(DA,1,I)) Q:'I  S RXF=I S:I>5 RXF=I+1
"RTN","PSORXL1",38,0)
 S IR=0 F FDA=0:0 S FDA=$O(^PSRX(DA,"A",FDA)) Q:'FDA  S IR=FDA
"RTN","PSORXL1",39,0)
 S IR=IR+1,^PSRX(DA,"A",0)="^52.3DA^"_IR_"^"_IR
"RTN","PSORXL1",40,0)
 D NOW^%DTC S ^PSRX(DA,"A",IR,0)=%_"^S^"_DUZ_"^"_RXF_"^"_$S(RXP:"Partial ",1:"")_"RX "_$S($G(RXRP(DA))&('$G(RXP)):"Reprint ",1:"")_"Placed on Suspense until "_LFD K RXF,I,FDA,DIC,DIE,DR,Y,X,%,%H,%I
"RTN","PSORXL1",41,0)
 Q
"RTN","PSORXL1",42,0)
D1 I $O(PSORX("PSOL",$G(PPL1))) S PPL1=$O(PSORX("PSOL",$G(PPL1))),PPL=PSORX("PSOL",PPL1) G S1
"RTN","PSORXL1",43,0)
 G:$D(RXRS) RXS^PSORXL
"RTN","PSORXL1",44,0)
 K LBL,PPL1,PPL,DIR,%DT,%,SD,COUNT,EXDT,L,PDUZ,REF,REPRINT,RFDATE,RFL1,RFLL,RXN,WARN,ZY,FLD,PI,ZD,ACT,X,Y,DIRUT,DUOUT,DTOUT,DIROUT,DFLG,RXPD,PSOWFLG
"RTN","PSORXL1",45,0)
 Q
"RTN","PSORXL1",46,0)
WARN W ! K DIR,DIRUT,DUOUT,DTOUT,DFLG S Y=$P(^PS(52.5,RXS,0),"^",2) X ^DD("DD") S RXPD=Y,DIR(0)="SA^S:SUSPEND;Q:QUEUE;E:EXIT"
"RTN","PSORXL1",47,0)
 S DIR("A",1)="Rx #"_$P(^PSRX(DA,0),"^")_" is suspended "_$S($G(RXCMOP)]"":"for CMOP ",1:"")_"until "_RXPD
"RTN","PSORXL1",48,0)
 I $G(RXCMOP)]"" D  G WARN1
"RTN","PSORXL1",49,0)
 .W !!,"A partial entered for this Rx cannot be suspended."
"RTN","PSORXL1",50,0)
 .W !,"You may pull this fill from suspense or print the label now.",!!
"RTN","PSORXL1",51,0)
 .S DIR("A",2)=" ",DIR("A",3)="   Do you want to Queue to print",DIR("A")="                or Exit: "
"RTN","PSORXL1",52,0)
 S DIR("A",2)=" ",DIR("A",3)="   Do you want to: Suspend Partial",DIR("A",4)="                   Queue to print",DIR("A")="                or Exit:  "
"RTN","PSORXL1",53,0)
WARN1 S DIR("B")="EXIT",DIR("?")="^D HLP^PSORXL1" D ^DIR K DIR
"RTN","PSORXL1",54,0)
 I Y="E"!($D(DIRUT))!(Y="S"&($G(RXCMOP)]"")) S DA(1)=DA,DA=RXPR(DA),DIK="^PSRX("_DA(1)_",""P""," D ^DIK S ^PSRX(DA(1),"TYPE")=0,DFLG=1 W $C(7)," Partial Removed!" Q
"RTN","PSORXL1",55,0)
 I Y="Q" S DPPL=PPL,HOLDPPL1=$G(PPL1),DPI=PI,RXLTOP=1 S PPL=$G(RXN)_"," S PSPARTXX=1 D Q^PSORXL K PSPARTXX S DFLG=1,PPL=DPPL,PI=DPI,PPL1=$G(HOLDPPL1) K HOLDPPL1,DPPL,DPPI,DPI,RXLTOP Q
"RTN","PSORXL1",56,0)
 Q
"RTN","PSORXL1",57,0)
HLP I $G(RXCMOP)']"" W !!,"If you choose to suspend this partial Rx, the current suspended fill will",!,"be replaced by the partial.  You may want to pull this fill early instead.",!
"RTN","PSORXL1",58,0)
 I $G(RXCMOP)]"" W !!,"You cannot suspend a partial when a CMOP fill is in suspense, because the partial will replace the CMOP fill in suspense."
"RTN","PSORXL1",59,0)
 W !,"If you choose to queue this partial, the label will printout on the previous",!,"selected label printer.",!
"RTN","PSORXL1",60,0)
 W !,"You may exit without printing or suspending this partial.  This will also delete",!,"the partial Rx entered."
"RTN","PSORXL1",61,0)
 Q
"RTN","PSORXL1",62,0)
SWARN ;
"RTN","PSORXL1",63,0)
 S PSORXLDA=$G(DA),PSORXZD=$P($G(^PS(52.5,RXS,0)),"^",2)
"RTN","PSORXL1",64,0)
 W $C(7),!!,"Rx "_$P($G(^PSRX(DA,0)),"^")_" is already suspended "_$S($G(RXCMOP)]"":"for CMOP ",1:"")_"until "_$E(PSORXZD,4,5)_"-"_$E(PSORXZD,6,7)_"-"_$E(PSORXZD,2,3)_"." K PSORXZD
"RTN","PSORXL1",65,0)
 W !,"By suspending this fill, the fill that is already suspended will be overwritten",!,"and a label will not print for that fill!",!
"RTN","PSORXL1",66,0)
 N PSORF,PSOTRIC D TRIC(DA)
"RTN","PSORXL1",67,0)
 I PSOTRIC,$$STATUS^PSOBPSUT(DA,PSORF)'["PAYABLE" S PSOQFLAG=1 Q
"RTN","PSORXL1",68,0)
 K DIR S DIR(0)="SA^Q:QUEUE;S:SUSPEND",DIR("B")="Q",DIR("A")="Do you want to Queue to print or Suspend Rx "_$P($G(^PSRX(DA,0)),"^")_": " D ^DIR K DIR
"RTN","PSORXL1",69,0)
 I $G(Y)="S" K RXFL(PSORXLDA) G SWARNQ
"RTN","PSORXL1",70,0)
 I $G(Y)="Q" D  G SWARNQ
"RTN","PSORXL1",71,0)
 . S PSOKSPPL=$G(PPL),PSOZXPPL=$G(PPL1),PSOZXPI=$G(PI),RXLTOP=1
"RTN","PSORXL1",72,0)
 . S PPL=$G(RXN)_"," D SWARS D Q^PSORXL S PSOWFLG=1,PPL=PSOKSPPL
"RTN","PSORXL1",73,0)
 . S PI=PSOZXPI,PPL1=PSOZXPPL K PSOKSPPL,PSOZXPPL,PSOZXPI,RXLTOP,RXFL(+$G(PSORXLDA))
"RTN","PSORXL1",74,0)
 W !!,"Nothing queued to print for Rx "_$P($G(^PSRX(PSORXLDA,0)),"^"),! S PSOWFLG=1
"RTN","PSORXL1",75,0)
SWARNQ ;
"RTN","PSORXL1",76,0)
 S DA=$G(PSORXLDA) K PSORXLDA
"RTN","PSORXL1",77,0)
 Q
"RTN","PSORXL1",78,0)
SWARS ;
"RTN","PSORXL1",79,0)
 S PSOZXFL(PSORXLDA)=+$P($G(^PS(52.5,+$G(RXS),0)),"^",13) I '$G(PSOZXFL(PSORXLDA)) K PSOZXFL Q
"RTN","PSORXL1",80,0)
 S PSOZXFPL=$P(PSOKSPPL,",",+$G(PI),99)
"RTN","PSORXL1",81,0)
 S PSOZXFPN=$L(PSOZXFPL,PPL)-1
"RTN","PSORXL1",82,0)
 I $G(PSOZXFL(PSORXLDA)),$G(PSOZXFPN) S RXFL(PSORXLDA)=$G(PSOZXFL(PSORXLDA))-$G(PSOZXFPN)
"RTN","PSORXL1",83,0)
 K PSOZXFL,PSOZXFPL,PSOZXFPN
"RTN","PSORXL1",84,0)
 Q
"RTN","PSORXL1",85,0)
TRIC(PSORX) ;
"RTN","PSORXL1",86,0)
 S PSORF=$$LSTRFL^PSOBPSU1(PSORX)
"RTN","PSORXL1",87,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(PSORX,PSORF,.PSOTRIC)
"RTN","PSORXL1",88,0)
 Q
"RTN","PSORXL1",89,0)
ECME ; - Looks for DUR/79 REJECTS and send Mail Rx's to ECME that have not been SUSPENDED
"RTN","PSORXL1",90,0)
 N PSOI,PSOJ,PSORX,PSORF,PSOACT,BWH,PPLTMP,PSOSTA,PSOTRIC,ESTAT,EACTION
"RTN","PSORXL1",91,0)
 S PPLTMP=$G(PPL)
"RTN","PSORXL1",92,0)
 F PSOI=1:1 S PSORX=+$P($G(PPLTMP),",",PSOI) Q:'PSORX  D
"RTN","PSORXL1",93,0)
 . D TRIC(PSORX) S ESTAT=$P($$STATUS^PSOBPSUT(PSORX,PSORF),"^")
"RTN","PSORXL1",94,0)
 . I PSOTRIC S EACTION=$S(ESTAT["PAYABLE":1,ESTAT["Inactive ECME Tricare":1,ESTAT="":1,1:0)
"RTN","PSORXL1",95,0)
 . I $G(PSOCKDC) D  Q  ;PSOCKDC variable is set in PSORXL and is used to eliminate label print for DC'ed Rx's
"RTN","PSORXL1",96,0)
 . . S PSOSTA=$$GET1^DIQ(52,PSORX,100,"I") I PSOSTA=12!(PSOSTA=11),'$G(RXPR(PSORX)),$G(PPL) D RMV(PSORX,.PPL)
"RTN","PSORXL1",97,0)
 . I $G(RXPR(PSORX)) Q
"RTN","PSORXL1",98,0)
 . S PSOACT="",BWH=$S(PSORF:"RF",1:"OF")
"RTN","PSORXL1",99,0)
 . I $$FIND^PSOREJUT(PSORX,PSORF) D  I PSOACT="Q" D RMV(PSORX,.PPL) Q
"RTN","PSORXL1",100,0)
 . . S PSOACT=$$HDLG^PSOREJU1(PSORX,PSORF,"79,88",BWH,"OIQ","Q")
"RTN","PSORXL1",101,0)
 Q
"RTN","PSORXL1",102,0)
RMV(RX,PPL) ; Remove the Rx from the label print queue
"RTN","PSORXL1",103,0)
 N XPPL,I
"RTN","PSORXL1",104,0)
 S XPPL=PPL,PPL="" F I=1:1:$L(XPPL,",") I $P(XPPL,",",I)'="",$P(XPPL,",",I)'=RX S PPL=PPL_$P(XPPL,",",I)_","
"RTN","PSORXL1",105,0)
 I PPL="" K PPL
"RTN","PSORXL1",106,0)
 Q
"RTN","PSOSUPOE")
0^23^B65674762
"RTN","PSOSUPOE",1,0)
PSOSUPOE ;BIR/RTR - Suspense pull via Listman ;3/1/96
"RTN","PSOSUPOE",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**8,21,27,34,130,148,281,287,289,358**;DEC 1997;Build 35
"RTN","PSOSUPOE",3,0)
 ;External references PSOL and PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOSUPOE",4,0)
SEL I '$G(PSOCNT) S VALMSG="This patient has no Prescriptions!" S VALMBCK="" Q
"RTN","PSOSUPOE",5,0)
 N PSOGETF,PSOGET,PSOGETFN,ORD,ORN,MW,PDUZ,PSLST,PSOSQ,PSOSQRTE,PSOSQMTH,PSPOP,PSOX1,PSOX2,RXLTOP,RXREC,SFN,SORD,SORN,VALMCNT
"RTN","PSOSUPOE",6,0)
 K DIR,DUOUT,DTOUT S DIR("A")="Select Orders by number",DIR(0)="LO^1:"_PSOCNT D ^DIR K DIR I $D(DTOUT)!($D(DUOUT))!('Y) S VALMSG="Nothing pulled from suspense!",VALMBCK="" Q
"RTN","PSOSUPOE",7,0)
 S PSLST=Y
"RTN","PSOSUPOE",8,0)
SELQ D FULL^VALM1
"RTN","PSOSUPOE",9,0)
 K DIR S DIR("A")="Select routing for Rx(s)",DIR(0)="S^M:MAIL;W:WINDOW",DIR("B")="WINDOW" D ^DIR K DIR I Y["^"!($D(DTOUT))!($D(DUOUT)) G END
"RTN","PSOSUPOE",10,0)
 S PSOSQRTE=Y I $G(PSOSQRTE)="W",$P(PSOPAR,"^",12) K DIR S DIR(0)="FO^2:60",DIR("A")="METHOD OF PICK-UP" D ^DIR S PSOSQMTH=$G(Y) K DIR I Y["^"!($D(DTOUT))!($D(DUOUT)) G END
"RTN","PSOSUPOE",11,0)
 W ! K DIR S DIR(0)="Y",DIR("A")="Pull Rx(s) and delete from suspense",DIR("B")="YES" D  D ^DIR K DIR I Y'=1 G END
"RTN","PSOSUPOE",12,0)
 .S DIR("?",1)="Enter Yes to pull selected Rx(s) from suspense. Since(Rx(s) pulled early from",DIR("?",2)="suspense are not associated with a printed batch, these Rx(s) cannot be"
"RTN","PSOSUPOE",13,0)
 .S DIR("?",3)="reprinted from suspense using the 'Reprint batches from suspense' option.",DIR("?")="Therefore, any Rx(s) pulled early from suspense will be deleted from suspense."
"RTN","PSOSUPOE",14,0)
 Q:$G(PULLONE)
"RTN","PSOSUPOE",15,0)
 F SORD=1:1:$L(PSLST,",") Q:$P(PSLST,",",SORD)']""  S SORN=$P(PSLST,",",SORD) D:+PSOLST(SORN)=52 BEG
"RTN","PSOSUPOE",16,0)
 S VALMBCK="R"
"RTN","PSOSUPOE",17,0)
 I '$G(PSOSQ) S VALMSG="No Rx's pulled from suspense!"
"RTN","PSOSUPOE",18,0)
 Q
"RTN","PSOSUPOE",19,0)
BEG ;
"RTN","PSOSUPOE",20,0)
 S RXREC=$P(PSOLST(SORN),"^",2)
"RTN","PSOSUPOE",21,0)
BEGQ Q:'$D(^PSRX(+$G(RXREC),0))
"RTN","PSOSUPOE",22,0)
 D PSOL^PSSLOCK(RXREC) I '$G(PSOMSG) W !!,$S($P($G(PSOMSG),"^",2)'="":$P($G(PSOMSG),"^",2),1:"Another person is editing Rx "_$P($G(^PSRX(RXREC,0)),"^")),! K PSOMSG D DIR Q
"RTN","PSOSUPOE",23,0)
 K PSOMSG I $P($G(^PSRX(RXREC,"STA")),"^")'=5 W !!,"Rx# ",$P(^PSRX(RXREC,0),"^")," is not on Suspense!" D DIR,ULRX Q
"RTN","PSOSUPOE",24,0)
 S SFN=$O(^PS(52.5,"B",RXREC,0)) I 'SFN D DIR,ULRX Q
"RTN","PSOSUPOE",25,0)
 S PDUZ=DUZ I +$G(^PS(52.5,SFN,"P")) W !,">>> Rx #",$P(^PSRX(+$P(^(0),"^"),0),"^")," ALREADY PRINTED FROM SUSPENSE.",!,?5,"USE THE REPRINT OPTION TO REPRINT LABEL." D DIR,ULRX Q
"RTN","PSOSUPOE",26,0)
 I +$P($G(^PSRX(RXREC,2)),"^",6)<DT,+$P($G(^("STA")),"^")<11 D  S DIE=52,DA=RXREC,DR="100///11" D ^DIE S DA=SFN,DIK="^PS(52.5," D ^DIK K DIE,DA,DIK W !,"Rx # "_$P(^PSRX(RXREC,0),"^")_" has expired!" D DIR,ULRX Q
"RTN","PSOSUPOE",27,0)
 .N PSCOU,AAA,VVV,QQQ,PSOPRT,PSOEXPI D EX^PSOSUTL
"RTN","PSOSUPOE",28,0)
 I $D(RXRP(RXREC)) W !!,"A reprint has already been requested for Rx # ",$P($G(^PSRX(RXREC,0)),"^") D DIR,ULRX Q
"RTN","PSOSUPOE",29,0)
 I $D(RXPR(RXREC)) W !!,"A partial has already been requested for Rx # ",$P($G(^PSRX(RXREC,0)),"^") D DIR,ULRX Q
"RTN","PSOSUPOE",30,0)
 S PSPOP=0 I $G(PSODIV),$P($G(^PS(52.5,SFN,0)),"^",6)'=$G(PSOSITE) D CKDIV I $G(PSPOP) D DIR,ULRX Q
"RTN","PSOSUPOE",31,0)
 S:$P(^PS(52.5,SFN,0),"^",5) RXPR(RXREC)=$P(^(0),"^",5) S:$P(^PS(52.5,SFN,0),"^",12) RXRP(RXREC)=1
"RTN","PSOSUPOE",32,0)
 S RXFL(RXREC)=$P($G(^PS(52.5,SFN,0)),"^",13),RXRS(RXREC)=$G(PSODFN),RXLTOP=1
"RTN","PSOSUPOE",33,0)
 S RXRS(RXREC)=$G(RXRS(RXREC))_"^"_$S($P($G(^PS(52.5,SFN,0)),"^",4)="W":"W",1:"M")_"^"_$P($G(^PSRX(RXREC,"MP")),"^") S PSOGET="M" D GETMW
"RTN","PSOSUPOE",34,0)
 S RXRS(RXREC)=$G(RXRS(RXREC))_"^"_$G(PSOGETF)_"^"_$G(PSOGETFN)_"^"_$S($G(PSOGET)="W":"W",1:"M")
"RTN","PSOSUPOE",35,0)
 S $P(^PS(52.5,SFN,0),"^",4)=$G(PSOSQRTE) S MW=$G(PSOSQRTE) N RR,RFCNT D MAILS^PSOSUPAT I $D(PSOSQMTH) S $P(^PSRX(RXREC,"MP"),"^")=$G(PSOSQMTH)
"RTN","PSOSUPOE",36,0)
 S PSOSQ=1
"RTN","PSOSUPOE",37,0)
 ;
"RTN","PSOSUPOE",38,0)
 ; - Submitting Rx to ECME for 3rd Party Billing
"RTN","PSOSUPOE",39,0)
 I '$D(RXPR(RXREC)) D
"RTN","PSOSUPOE",40,0)
 . N ACTION,RFL S RFL=$G(RXFL(RXREC)) I RFL="" S RFL=$$LSTRFL^PSOBPSU1(RXREC)
"RTN","PSOSUPOE",41,0)
 . D ECMESND^PSOBPSU1(RXREC,RFL,,"PP")
"RTN","PSOSUPOE",42,0)
 . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOSUPOE",43,0)
 . I $$PSOET^PSOREJP3(RXREC,RFL) S ACTION="Q" Q
"RTN","PSOSUPOE",44,0)
 . I $$FIND^PSOREJUT(RXREC,RFL) D
"RTN","PSOSUPOE",45,0)
 . . S ACTION=$$HDLG^PSOREJU1(RXREC,RFL,"79,88","PP","IOQ","Q")
"RTN","PSOSUPOE",46,0)
 ;
"RTN","PSOSUPOE",47,0)
 D ULRX K PSOGET,PSOGETF
"RTN","PSOSUPOE",48,0)
 Q
"RTN","PSOSUPOE",49,0)
WIND ;
"RTN","PSOSUPOE",50,0)
 N RRT,RRTT,XXXX,JJJJ,PSINTRX,RTETEST,PSOPSO,SSSS
"RTN","PSOSUPOE",51,0)
 S PBINGRTE=0,PSINTRX=RXREC
"RTN","PSOSUPOE",52,0)
 I $G(RXPR(RXREC)) S RTETEST=$P($G(^PSRX(RXREC,"P",RXPR(PSINTRX),0)),"^",2) S:RTETEST="W" PBINGRTE=1 Q
"RTN","PSOSUPOE",53,0)
 S PSOPSO=0 F SSSS=0:0 S SSSS=$O(^PSRX(PSINTRX,1,SSSS)) Q:'SSSS  S PSOPSO=SSSS
"RTN","PSOSUPOE",54,0)
 I 'PSOPSO S RTETEST=$P($G(^PSRX(PSINTRX,0)),"^",11) S:RTETEST="W" PBINGRTE=1 Q
"RTN","PSOSUPOE",55,0)
 I PSOPSO S RTETEST=$P($G(^PSRX(PSINTRX,1,PSOPSO,0)),"^",2) S:RTETEST="W" PBINGRTE=1 Q
"RTN","PSOSUPOE",56,0)
 Q
"RTN","PSOSUPOE",57,0)
DIR ;
"RTN","PSOSUPOE",58,0)
 W ! K DIR S DIR(0)="E",DIR("A")="Press Return to Continue" D ^DIR K DIR Q
"RTN","PSOSUPOE",59,0)
END S VALMSG="Nothing pulled from suspense!",VALMBCK="R" S:$G(PULLONE)=1 PULLONE=2 Q
"RTN","PSOSUPOE",60,0)
ADD ;Add Rx to SPSORX array
"RTN","PSOSUPOE",61,0)
 I $G(SPSORX("PSOL",1))']"" S SPSORX("PSOL",1)=RXREC_"," Q
"RTN","PSOSUPOE",62,0)
 F PSOX1=0:0 S PSOX1=$O(SPSORX("PSOL",PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOSUPOE",63,0)
 I $L(SPSORX("PSOL",PSOX2))+$L(RXREC)<220 S SPSORX("PSOL",PSOX2)=SPSORX("PSOL",PSOX2)_RXREC_"," Q
"RTN","PSOSUPOE",64,0)
 S SPSORX("PSOL",PSOX2+1)=RXREC_","
"RTN","PSOSUPOE",65,0)
 Q
"RTN","PSOSUPOE",66,0)
BBADD ;
"RTN","PSOSUPOE",67,0)
 N PSOX1,PSOX2
"RTN","PSOSUPOE",68,0)
 I $G(BBRX(1))']"" S BBRX(1)=RXREC_"," Q
"RTN","PSOSUPOE",69,0)
 F PSOX1=0:0 S PSOX1=$O(BBRX(PSOX1)) Q:'PSOX1  S PSOX2=PSOX1
"RTN","PSOSUPOE",70,0)
 I $L(BBRX(PSOX2))+$L(RXREC)<220 S BBRX(PSOX2)=BBRX(PSOX2)_RXREC_"," Q
"RTN","PSOSUPOE",71,0)
 S BBRX(PSOX2+1)=RXREC_","
"RTN","PSOSUPOE",72,0)
 Q
"RTN","PSOSUPOE",73,0)
TRIC(PSOTRX) ;
"RTN","PSOSUPOE",74,0)
 S PSOTRF=$$LSTRFL^PSOBPSU1(PSOTRX)
"RTN","PSOSUPOE",75,0)
 S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(PSOTRX,PSOTRF,.PSOTRIC)
"RTN","PSOSUPOE",76,0)
 S ESTAT=$P($$STATUS^PSOBPSUT(PSOTRX,PSOTRF),"^")
"RTN","PSOSUPOE",77,0)
 I PSOTRIC S EACTION=$S(ESTAT["PAYABLE":1,ESTAT["Inactive ECME Tricare":1,ESTAT="":1,1:0)
"RTN","PSOSUPOE",78,0)
 Q
"RTN","PSOSUPOE",79,0)
PPLADD ;
"RTN","PSOSUPOE",80,0)
 N SZZ,SPSOX1,SPSOX2,LSFN,PSOTRF,PSOTRIC,PSOTRX,EACTION,ESTAT
"RTN","PSOSUPOE",81,0)
 I $G(PPL)'="",$E(PPL,$L(PPL))'="," S PPL=PPL_","
"RTN","PSOSUPOE",82,0)
 F SZZ=0:0 S SZZ=$O(RXRS(SZZ)) Q:'SZZ  D
"RTN","PSOSUPOE",83,0)
 .S LSFN=$O(^PS(52.5,"B",SZZ,0))
"RTN","PSOSUPOE",84,0)
 .Q:'$G(LSFN)
"RTN","PSOSUPOE",85,0)
 .Q:$G(^PS(52.5,LSFN,"P"))
"RTN","PSOSUPOE",86,0)
 .D TRIC(SZZ)
"RTN","PSOSUPOE",87,0)
 .I $G(PSOTRIC) Q:'$G(EACTION)  ;no labels for "In Progress" Tricare Rx's.
"RTN","PSOSUPOE",88,0)
 .I $G(PPL)="" S PPL=SZZ_"," Q
"RTN","PSOSUPOE",89,0)
 .I $L(PPL)+$L(SZZ)<220 S PPL=PPL_SZZ_"," Q
"RTN","PSOSUPOE",90,0)
 .I $G(PSORX("PSOL",2))']"" S PSORX("PSOL",2)=SZZ_"," Q
"RTN","PSOSUPOE",91,0)
 .F SPSOX1=1:0 S SPSOX1=$O(PSORX("PSOL",SPSOX1)) Q:'SPSOX1  S SPSOX2=SPSOX1
"RTN","PSOSUPOE",92,0)
 .I $L(PSORX("PSOL",SPSOX2))+$L(SZZ)<220 S PSORX("PSOL",SPSOX2)=PSORX("PSOL",SPSOX2)_SZZ_"," Q
"RTN","PSOSUPOE",93,0)
 .S PSORX("PSOL",SPSOX2+1)=SZZ_","
"RTN","PSOSUPOE",94,0)
 Q
"RTN","PSOSUPOE",95,0)
CKDIV ;
"RTN","PSOSUPOE",96,0)
 I '$P($G(PSOSYS),"^",2) W !!?10,"Rx # ",$P(^PSRX(RXREC,0),"^")," is not a valid choice (Different Division)" S PSPOP=1 Q
"RTN","PSOSUPOE",97,0)
 I $P($G(PSOSYS),"^",3) W !!?10 K DIR S DIR("A")="Rx # "_$P(^PSRX(RXREC,0),"^")_" is from another division. OK to Pull",DIR(0)="Y",DIR("B")="YES" D ^DIR K DIR I $G(DIRUT)!('Y) S PSPOP=1
"RTN","PSOSUPOE",98,0)
 Q
"RTN","PSOSUPOE",99,0)
SELONE ;Pull one Rx through Listman
"RTN","PSOSUPOE",100,0)
 I $G(PSOBEDT) W $C(7),$C(7) S VALMSG="Invalid Action at this time !",VALMBCK="" Q
"RTN","PSOSUPOE",101,0)
 N ORD,MW,PDUZ,PSLST,PSOSQ,PSOSQRTE,PSOSQMTH,PSPOP,PSOX1,PSOX2,PULLONE,RXLTOP,RXREC,SFN,SORD,SORN,VALMCNT
"RTN","PSOSUPOE",102,0)
 S PULLONE=1
"RTN","PSOSUPOE",103,0)
 I +PSOLST(ORN)'=52 S VALMBCK="" Q
"RTN","PSOSUPOE",104,0)
 I +PSOLST(ORN)=52,$P($G(^PSRX($P(PSOLST(ORN),"^",2),"STA")),"^")'=5 S VALMSG="Rx is not on Suspense!",VALMBCK="" Q
"RTN","PSOSUPOE",105,0)
 I +PSOLST(ORN)=52,$D(RXRS($P(PSOLST(ORN),"^",2))) S VALMSG="Pull early has already been requested!",VALMBCK="" Q
"RTN","PSOSUPOE",106,0)
 N EHOLDQ,ESIEN,ERXIEN S ERXIEN=$P(PSOLST(ORN),"^",2),ESIEN="",ESIEN=$O(^PS(52.5,"B",ERXIEN,ESIEN))
"RTN","PSOSUPOE",107,0)
 I $G(ESIEN),$$GET1^DIQ(52.5,ESIEN,10)'="" D EHOLD Q:$G(EHOLDQ)
"RTN","PSOSUPOE",108,0)
 K EHOLDQ,ESIEN,ERXIEN
"RTN","PSOSUPOE",109,0)
 D SELQ I $G(PULLONE)=2 S VALMSG="Rx# "_$P($G(^PSRX($P(PSOLST(ORN),"^",2),0)),"^")_" not pulled from suspense!" Q
"RTN","PSOSUPOE",110,0)
 I +PSOLST(ORN)=52 S RXREC=$P(PSOLST(ORN),"^",2)
"RTN","PSOSUPOE",111,0)
 D BEGQ S VALMSG="Rx# "_$P($G(^PSRX(+$G(RXREC),0)),"^")_$S($G(PSOSQ):" pulled",1:" not pulled")_" from Suspense!"
"RTN","PSOSUPOE",112,0)
 S VALMBCK="R"
"RTN","PSOSUPOE",113,0)
 Q
"RTN","PSOSUPOE",114,0)
RESET ;
"RTN","PSOSUPOE",115,0)
 N RSDA,RXMW,RXMP,RXSP,RXR,DA,RXPSRX,RXFILL,RXFILLN
"RTN","PSOSUPOE",116,0)
 F RSDA=0:0 S RSDA=$O(RXRS(RSDA)) Q:'RSDA  D
"RTN","PSOSUPOE",117,0)
 .S RXSP=$O(^PS(52.5,"B",RSDA,0)) Q:'RXSP
"RTN","PSOSUPOE",118,0)
 .Q:'$D(^PS(52.5,RXSP,0))
"RTN","PSOSUPOE",119,0)
 .S RXMW=$S($P($G(RXRS(RSDA)),"^",2)="":"M",1:$P($G(RXRS(RSDA)),"^",2)),RXMP=$P($G(RXRS(RSDA)),"^",3),RXFILL=$P($G(RXRS(RSDA)),"^",4),RXFILLN=$P($G(RXRS(RSDA)),"^",5),RXPSRX=$S($P($G(RXRS(RSDA)),"^",6)="":"M",1:$P($G(RXRS(RSDA)),"^",6))
"RTN","PSOSUPOE",120,0)
 .I RXMW'="" S $P(^PS(52.5,RXSP,0),"^",4)=RXMW D
"RTN","PSOSUPOE",121,0)
 ..I RXFILL="P" D  Q
"RTN","PSOSUPOE",122,0)
 ...I $D(^PSRX(RSDA,"P",+$G(RXFILLN),0)) S $P(^PSRX(RSDA,"P",+$G(RXFILLN),0),"^",2)=$G(RXPSRX),$P(^PSRX(RSDA,"MP"),"^")=RXMP
"RTN","PSOSUPOE",123,0)
 ..I RXFILL="R",$G(RXFILLN) S DA(1)=RSDA,DA=RXFILLN,DIE="^PSRX("_DA(1)_",1,",DR="2////"_RXPSRX D ^DIE K DIE
"RTN","PSOSUPOE",124,0)
 ..I RXFILL="O" S DA=RSDA,DIE="^PSRX(",DR="11////"_RXPSRX D ^DIE K DIE
"RTN","PSOSUPOE",125,0)
 ..S $P(^PSRX(RSDA,"MP"),"^")=RXMP
"RTN","PSOSUPOE",126,0)
 Q
"RTN","PSOSUPOE",127,0)
GETMW ;
"RTN","PSOSUPOE",128,0)
 N GETPAR,GETRX,GETCNT
"RTN","PSOSUPOE",129,0)
 S PSOGETF="O",PSOGETFN=""
"RTN","PSOSUPOE",130,0)
 S GETPAR=$P($G(^PS(52.5,SFN,0)),"^",5)
"RTN","PSOSUPOE",131,0)
 I GETPAR S PSOGET=$P($G(^PSRX(RXREC,"P",GETPAR,0)),"^",2),PSOGETF="P",PSOGETFN=GETPAR Q
"RTN","PSOSUPOE",132,0)
 I '$O(^PSRX(RXREC,1,0)) S PSOGET=$P($G(^PSRX(RXREC,0)),"^",11) Q
"RTN","PSOSUPOE",133,0)
 S GETRX=0 F GETCNT=0:0 S GETCNT=$O(^PSRX(RXREC,1,GETCNT)) Q:'GETCNT  S GETRX=GETCNT
"RTN","PSOSUPOE",134,0)
 S PSOGET=$P($G(^PSRX(RXREC,1,+$G(GETRX),0)),"^",2),PSOGETF="R",PSOGETFN=+$G(GETRX)
"RTN","PSOSUPOE",135,0)
 Q
"RTN","PSOSUPOE",136,0)
ULRX ;
"RTN","PSOSUPOE",137,0)
 I '$G(RXREC) Q
"RTN","PSOSUPOE",138,0)
 D PSOUL^PSSLOCK(RXREC)
"RTN","PSOSUPOE",139,0)
 Q
"RTN","PSOSUPOE",140,0)
EHOLD ;
"RTN","PSOSUPOE",141,0)
 Q:'$G(ERXIEN)
"RTN","PSOSUPOE",142,0)
 Q:$$GET1^DIQ(52,ERXIEN,86)=""
"RTN","PSOSUPOE",143,0)
 D FULL^VALM1
"RTN","PSOSUPOE",144,0)
 W !,"This is an ePharmacy billable fill which is Suspended until "_$$GET1^DIQ(52.5,ESIEN,10)_", based"
"RTN","PSOSUPOE",145,0)
 W !,"on the 3/4 Days rule.",!
"RTN","PSOSUPOE",146,0)
 K DIR S EHOLDQ=0,DIR(0)="YA",DIR("A")="Do you wish to continue? "
"RTN","PSOSUPOE",147,0)
 D ^DIR I $D(DIRUT)!('Y) S EHOLDQ=1 K DIR
"RTN","PSOSUPOE",148,0)
 S VALMSG="No action taken.",VALMBCK="R"
"RTN","PSOSUPOE",149,0)
 Q
"RTN","PSOSUPOE",150,0)
 ;
"RTN","PSOSUPRX")
0^24^B46405696
"RTN","PSOSUPRX",1,0)
PSOSUPRX ;BIR/RTR - Suspense pull early ;3/1/96
"RTN","PSOSUPRX",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**8,36,130,185,148,287,358**;DEC 1997;Build 35
"RTN","PSOSUPRX",3,0)
 ;External reference to ^PS(55 supported by DBIA 2228
"RTN","PSOSUPRX",4,0)
 ;External reference to ^PSSLOCK supported by DBIA 2789
"RTN","PSOSUPRX",5,0)
ST N PSOPLLRX D:'$D(PSOPAR) ^PSOLSET G:'$D(PSOPAR) ST
"RTN","PSOSUPRX",6,0)
 N SUSROUTE,BBRX S SUSPT=1,PSLION=$G(PSOLAP),PSOQFLAG=0 W !! S DIR("A")="Print a specific Rx # or all Rx's for a patient",DIR(0)="SBO^S:SPECIFIC RX;A:ALL RXs FOR A PATIENT"
"RTN","PSOSUPRX",7,0)
 S DIR("?",1)="Enter 'S' to print a suspended prescription label early.",DIR("?")="Enter 'A' to print all prescription suspense labels for a patient."
"RTN","PSOSUPRX",8,0)
 D ^DIR K DIR S SA=Y G:$G(DIRUT)!(Y<0) EXIT I SA="A" D ^PSOSUPAT G EXIT
"RTN","PSOSUPRX",9,0)
LU D NOW^%DTC S TM=$E(%,1,12),TM1=$P(TM,".",2) ;setup start time for bingo
"RTN","PSOSUPRX",10,0)
 K SUSROUTE,BBRX,RXP,RXFL,RXRP,RXPR,RXRR
"RTN","PSOSUPRX",11,0)
 K PSOPROFL,PSOE,RXP1,RXPR,PRF,PSOWIN,PSOWINEN K RTE S MW="" W ! S DIR("A")="Select SUSPENDED Rx #: ",DIR(0)="FOA",DIR("?")="Enter the Rx # or wand the barcode. For a list of suspense prescriptions, type '??'",DIR("??")="^D LIST^PSOSUPRX"
"RTN","PSOSUPRX",12,0)
 S POP=0 D ^DIR K DIR G:$D(DIRUT)!('Y) ST S OUT=0 D:Y["-" PSOINST^PSOSUPAT G:OUT LU
"RTN","PSOSUPRX",13,0)
 S:Y'["-" X=Y S:Y["-" Y=$P(Y,"-",2),X=$P(^PSRX(+Y,0),"^") K Y G:$G(X)="" ST K DIC W ! D  S DIC="^PS(52.5,",DIC(0)="ZQE" D ^DIC K DIC,PSOSPINT W ! G:$D(DTOUT)!($D(DUOUT)) ST G LU:Y<0 S RXREC=+Y(0),SFN=+Y
"RTN","PSOSUPRX",14,0)
 .S PSOSPINT=X S DIC("S")="I $D(^PSRX(+$P(^PS(52.5,+Y,0),""^""),0)),$P($G(^(""STA"")),""^"")=5,$P($G(^(0)),""^"")=PSOSPINT"
"RTN","PSOSUPRX",15,0)
 S PSOPLLRX=$G(RXREC) I PSOPLLRX D PSOL^PSSLOCK(PSOPLLRX) I '$G(PSOMSG) D  K DIR S DIR(0)="E",DIR("A")="Press Return to continue" D ^DIR K DIR K PSOMSG,PSOPLLRX,X,Y G LU
"RTN","PSOSUPRX",16,0)
 .I $P($G(PSOMSG),"^",2)'="" W !,$P($G(PSOMSG),"^",2),! Q
"RTN","PSOSUPRX",17,0)
 .W !,"Another person is editing this order.",!
"RTN","PSOSUPRX",18,0)
 K PSOMSG
"RTN","PSOSUPRX",19,0)
 S PSOLOUD=1 D:$P($G(^PS(55,$P(Y(0),"^",3),0)),"^",6)'=2 EN^PSOHLUP($P(Y(0),"^",3)) K PSOLOUD
"RTN","PSOSUPRX",20,0)
 I $G(PSODIV),$P($G(^PS(52.5,SFN,0)),"^",6)'=$G(PSOSITE) S PSPOP=0,PSOSAV=Y,PSOSAVO=Y(0) D CKDIV^PSOSUPAT S Y=PSOSAV,Y(0)=PSOSAVO K PSOSAV,PSOSAVO,PSOPRFLG D:PSPOP UNLK G:PSPOP LU
"RTN","PSOSUPRX",21,0)
 D CHKDEAD W:DEAD !!,?10,$G(PSDNAME)," DIED ",$G(PSDDDATE) D:'DEAD BEG D:$G(PSOQFLAG) RESET^PSOSUPAT K PSOSPEC,PSOQFLAG,PSOPULL,PSODELE D UNLK G LU
"RTN","PSOSUPRX",22,0)
EXIT K ASKED,CBD,CNT,COM,DA,DEAD,DEL,PSODELE,DFN,DIRUT,DR,DTOUT,DUOUT,HOLDDFN,HDSFN,JJ,MW,OLD,OUT,PDUZ,PSODFN,TM,TM1,RXLTOP,RXRR,PSOGET,PSOGETF,PSOGETFN
"RTN","PSOSUPRX",23,0)
 K PPL,PSOPULL,PSOWIN,PSOWINEN,PRF,PSODBQ,PSPOP,PSOQFLAG,PSOPROFL,PSOSPEC,RF,RFCNT,RTE,RX,RXP1,RXPR,RXREC,SA,SFN,STOP,SUSPT,VADM,ZTSK,RXFL
"RTN","PSOSUPRX",24,0)
 K X,Y,Z,PSOPRFLG,PSDDDATE,PSDNAME,ZZZZ,RXRP Q
"RTN","PSOSUPRX",25,0)
CHKDEAD S (DFN,PSODFN)=+$P(Y(0),"^",3) D DEM^VADPT S PSDNAME=$G(VADM(1)) I VADM(1)="" W !?10,"PATIENT UNKNOWN" S DEAD=0 Q
"RTN","PSOSUPRX",26,0)
 I VADM(6)="" S DEAD=0 Q
"RTN","PSOSUPRX",27,0)
 S PSDDDATE=$P(VADM(6),"^",2),(PDUZ,PSOCLC)=DUZ F ZZZZ=0:0 S ZZZZ=$O(^PS(55,DFN,"P",ZZZZ)) Q:'ZZZZ  I $D(^PS(55,DFN,"P",ZZZZ,0)),$P($G(^(0)),"^") S (DA,RXREC)=$P(^(0),"^") I $O(^PS(52.5,"B",DA,0)) D DEAD
"RTN","PSOSUPRX",28,0)
 Q
"RTN","PSOSUPRX",29,0)
DEAD S HOLD=DA,REA="C",COM="Died ("_$G(PSDDDATE)_")",DA=RXREC,DEAD=1 D CAN^PSOCAN S DA=HOLD K HOLD,REA Q
"RTN","PSOSUPRX",30,0)
BEG S PSOSPEC=1,PDUZ=DUZ I +$G(^PS(52.5,SFN,"P")) W !,">>> Rx #",$P(^PSRX(+$P(^(0),"^"),0),"^")," ALREADY PRINTED FROM SUSPENSE.",!,?5,"USE THE REPRINT OPTION TO REPRINT LABEL.",! Q
"RTN","PSOSUPRX",31,0)
 I +$P($G(^PSRX(RXREC,2)),"^",6)<DT,+$P($G(^("STA")),"^")<11 D  S DIE=52,DA=RXREC,DR="100///"_11 D ^DIE S DA=SFN,DIK="^PS(52.5," D ^DIK K DIE,DA,DIK W !,"Rx # "_$P(^PSRX(RXREC,0),"^")_" has expired!" F PSOE=1:1:3 W "." H 1
"RTN","PSOSUPRX",32,0)
 .D EX^PSOSUTL
"RTN","PSOSUPRX",33,0)
 I '$D(^PS(52.5,SFN,0)) K PSOE Q
"RTN","PSOSUPRX",34,0)
 D ICN^PSODPT(+$P(^PSRX(RXREC,0),"^",2))
"RTN","PSOSUPRX",35,0)
 S RXFL(RXREC)=$P($G(^PS(52.5,SFN,0)),"^",13)
"RTN","PSOSUPRX",36,0)
 S HDSFN=SFN,(PPL,DA)=RXREC S:$P(^PS(52.5,SFN,0),"^",5) (RXP1,RXPR(RXREC))=$P(^(0),"^",5)
"RTN","PSOSUPRX",37,0)
 S:$P(^PS(52.5,SFN,0),"^",12) RXRP(RXREC)=1 D QUES Q:$G(PSOQFLAG)
"RTN","PSOSUPRX",38,0)
 S (PSOPULL,PSODBQ,PSONOPRT)=1,RXLTOP=1 D WIND D Q^PSORXL S PPL=RXREC
"RTN","PSOSUPRX",39,0)
 I '$G(PSOQFLAG) W !!,"LABEL QUEUED TO PRINT",! K RX
"RTN","PSOSUPRX",40,0)
 I '$G(PSOQFLAG) D PRF D:'$G(PSOQFLAG)  S PSOQFLAG=0
"RTN","PSOSUPRX",41,0)
 .S:'$G(PSOPROFL) PSOPRFLG=1 W:$G(PSOPROFL) !!,"PROFILE QUEUED TO PRINT"
"RTN","PSOSUPRX",42,0)
 K PSONOPRT,RXPR,RXP1
"RTN","PSOSUPRX",43,0)
 S PPL=RXREC
"RTN","PSOSUPRX",44,0)
 ;call to bingo board
"RTN","PSOSUPRX",45,0)
 S:$G(SUSROUTE) BBRX(1)=PPL
"RTN","PSOSUPRX",46,0)
 D:$G(BINGRTE)&($D(DISGROUP))&('$G(PSOQFLAG)) ^PSOBING1 K BINGRTE,BBRX
"RTN","PSOSUPRX",47,0)
 Q
"RTN","PSOSUPRX",48,0)
QUES I '$D(RTE) W ! K DIR S DIR("A")="Select routing for Rx(s)",DIR(0)="S^M:MAIL;W:WINDOW",DIR("B")="WINDOW" D ^DIR K DIR S (RTE,MW)=Y I Y["^"!($D(DTOUT)) W !!?5,"Nothing pulled from suspense!",! S PSOQFLAG=1 Q
"RTN","PSOSUPRX",49,0)
 S PSOGET="M" D GETMW^PSOSUPOE S RXRR(RXREC)=$S($P(^PS(52.5,SFN,0),"^",4)="W":"W",1:"M")_"^"_$P($G(^PSRX(RXREC,"MP")),"^")_"^"_$G(PSOGETF)_"^"_$G(PSOGETFN)_"^"_$S($G(PSOGET)="W":"W",1:"M")
"RTN","PSOSUPRX",50,0)
 S:$G(MW)="W" SUSROUTE=1 S $P(^PS(52.5,SFN,0),"^",4)=$G(MW) D:$G(MW)="W"  Q:$G(PSOQFLAG)  D MAIL^PSOSUPAT
"RTN","PSOSUPRX",51,0)
 .I '$G(PSOWIN),$P(PSOPAR,"^",12) S DA=RXREC,DIE="^PSRX(",DR=35 D ^DIE S:$D(Y)!($D(DTOUT)) PSOQFLAG=1 Q:$G(PSOQFLAG)  S PSOWIN=1,PSOWINEN=$P($G(^PSRX(RXREC,"MP")),"^") Q
"RTN","PSOSUPRX",52,0)
 I '$D(PSODELE)!($G(PSOSPEC)) W !! S DIR("A")="Pull Rx(s) and delete from suspense",DIR("B")="Y",DIR(0)="Y" D  D ^DIR K DIR S PSODELE=Y I Y'=1 W $C(7),!!?5,"Nothing pulled from suspense!",! S PSOQFLAG=1 K PSODELE Q
"RTN","PSOSUPRX",53,0)
 .S DIR("?",1)="Enter Yes to pull selected Rx(s) from suspense. Since Rx(s) pulled early from",DIR("?",2)="suspense are not associated with a printed batch, these Rx(s) cannot be"
"RTN","PSOSUPRX",54,0)
 .S DIR("?",3)="reprinted from suspense using the 'Reprint batches from Suspense' option.",DIR("?")="Therefore, any Rx(s) pulled early from suspense will be deleted from suspense."
"RTN","PSOSUPRX",55,0)
 S HDSFN=SFN
"RTN","PSOSUPRX",56,0)
 ;
"RTN","PSOSUPRX",57,0)
 ; - Submitting Rx to ECME for 3rd Party Billing
"RTN","PSOSUPRX",58,0)
 N RFL S RFL=RXFL(RXREC) I RFL="" S RFL=$$LSTRFL^PSOBPSU1(RXREC)
"RTN","PSOSUPRX",59,0)
 D ECMESND^PSOBPSU1(RXREC,RFL,,"PE")
"RTN","PSOSUPRX",60,0)
 ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOSUPRX",61,0)
 I $$PSOET^PSOREJP3(RXREC,RFL) S PSOQFLAG=1 Q
"RTN","PSOSUPRX",62,0)
 N PSOTRIC S PSOTRIC="",PSOTRIC=$$TRIC^PSOREJP1(RXREC,RFL,.PSOTRIC)
"RTN","PSOSUPRX",63,0)
 I $$FIND^PSOREJUT(RXREC,RFL),$$HDLG^PSOREJU1(RXREC,RFL,"79,88","PE","IOQ","I")="Q" S PSOQFLAG=1 Q
"RTN","PSOSUPRX",64,0)
 ;
"RTN","PSOSUPRX",65,0)
 Q
"RTN","PSOSUPRX",66,0)
PRF S:'$D(DFN) DFN=+$P(^PS(52.5,SFN,0),"^",3) I $P(PSOPAR,"^",8),'$D(^PSRX(RXREC,1)),'$D(PRF(DFN)),'$G(RXP1) S PSOPROFL=1,HOLDDFN=DFN D ^PSOPRF S DFN=HOLDDFN K HOLDDFN S PRF(DFN)=""
"RTN","PSOSUPRX",67,0)
 Q
"RTN","PSOSUPRX",68,0)
LIST S X="?",DIC("S")="I $D(^PSRX(+$P(^PS(52.5,+Y,0),""^""),0)),$P($G(^(""STA"")),""^"")=5",DIC="^PS(52.5,",DIC(0)="ZQ" D ^DIC K DIC W ! Q:Y<0!($D(DTOUT))  Q
"RTN","PSOSUPRX",69,0)
NEXT S PSOX("IRXN")=RX D NEXT^PSOUTIL(.PSOX) S NEXT=$P(PSOX("RX3"),"^",2)
"RTN","PSOSUPRX",70,0)
 S DA=RX,DIE=52,DR="102///"_NEXT D ^DIE K DIE Q:$D(DTOUT)!($D(DUOUT))
"RTN","PSOSUPRX",71,0)
 K NEXT,PSOX Q
"RTN","PSOSUPRX",72,0)
WIND ;
"RTN","PSOSUPRX",73,0)
 N RRT,RRTT,XXXX,JJJJ,PSINTRX,RTETEST,PSOPSO,SSSS
"RTN","PSOSUPRX",74,0)
 S BINGRTE=0
"RTN","PSOSUPRX",75,0)
 S RRT=1 F XXXX=1:1:$L(PPL) S RRTT=$E(PPL,XXXX) I RRTT="," S RRT=RRT+1
"RTN","PSOSUPRX",76,0)
 F JJJJ=1:1:RRT Q:$G(BINGRTE)  S PSINTRX=$P(PPL,",",JJJJ) I $D(^PSRX(+PSINTRX,0)) D
"RTN","PSOSUPRX",77,0)
 .I $G(RXPR(PSINTRX)) S RTETEST=$P($G(^PSRX(PSINTRX,"P",RXPR(PSINTRX),0)),"^",2) S:RTETEST="W" BINGRTE=1 Q
"RTN","PSOSUPRX",78,0)
 .S PSOPSO=0 F SSSS=0:0 S SSSS=$O(^PSRX(PSINTRX,1,SSSS)) Q:'SSSS  S PSOPSO=SSSS
"RTN","PSOSUPRX",79,0)
 .I 'PSOPSO S RTETEST=$P($G(^PSRX(PSINTRX,0)),"^",11) S:RTETEST="W" BINGRTE=1 Q
"RTN","PSOSUPRX",80,0)
 .I PSOPSO S RTETEST=$P($G(^PSRX(PSINTRX,1,PSOPSO,0)),"^",2) S:RTETEST="W" BINGRTE=1 Q
"RTN","PSOSUPRX",81,0)
 Q
"RTN","PSOSUPRX",82,0)
UNLK ;Unlock prescription
"RTN","PSOSUPRX",83,0)
 Q:'$G(PSOPLLRX)
"RTN","PSOSUPRX",84,0)
 D PSOUL^PSSLOCK(PSOPLLRX)
"RTN","PSOSUPRX",85,0)
 K PSOPLLRX
"RTN","PSOTRI")
0^9^B15159690
"RTN","PSOTRI",1,0)
PSOTRI ;BIRM/BNT - OP TRICARE Audit Log Utilities ;07/21/2010
"RTN","PSOTRI",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**358**;DEC 1997;Build 35
"RTN","PSOTRI",3,0)
 ;
"RTN","PSOTRI",4,0)
 ; Reference to DUR1^BPSNCPD3 supported by IA 4560
"RTN","PSOTRI",5,0)
 ;
"RTN","PSOTRI",6,0)
 Q
"RTN","PSOTRI",7,0)
 ;
"RTN","PSOTRI",8,0)
 ;
"RTN","PSOTRI",9,0)
AUDIT(RX,RFL,RXCOB,TRIJST,AUD) ;
"RTN","PSOTRI",10,0)
 ; Main entry to create a new record in the PSO TRICARE AUDIT LOG file #52.87
"RTN","PSOTRI",11,0)
 ; INPUT: RX    (r) = Prescription IEN
"RTN","PSOTRI",12,0)
 ;        RFL   (o) = Prescription Fill # (Default is original zero fill)
"RTN","PSOTRI",13,0)
 ;        RXCOB (o) = Coordination of Benefits
"RTN","PSOTRI",14,0)
 ;                   1 = Primary (Default)
"RTN","PSOTRI",15,0)
 ;                   2 = Secondary
"RTN","PSOTRI",16,0)
 ;        TRIJST(o) = TRICARE Justification text
"RTN","PSOTRI",17,0)
 ;        AUD   (r) = Audit Type
"RTN","PSOTRI",18,0)
 ;                   R = TRICARE NCPDP REJECT - Associated with an Override audit action
"RTN","PSOTRI",19,0)
 ;                   N = TRICARE NON BILLABLE RX - Associated with an Override audit action
"RTN","PSOTRI",20,0)
 ;                   I = TRICARE INPATIENT - Associated with a Bypass audit action
"RTN","PSOTRI",21,0)
 ; RETURN: Successful Audit entry will return the IEN of the new entry in file 52.87
"RTN","PSOTRI",22,0)
 ;         Unsuccessful Audit entry will return "0^Error Description"
"RTN","PSOTRI",23,0)
 ;
"RTN","PSOTRI",24,0)
 N PROTRIC,PSODIV,RXFLDS,RFLFLDS,RXECME,PSOFDA,FN,SFN,PSOIEN,PSOIENS,PSOUSER,PSOET
"RTN","PSOTRI",25,0)
 N I,PSOAIEN,PSOREJ,DFN,PSODOA,PSODOS,PSOERR,PSOX,PSOY,RXARR,RFLARR,PSOPHRM,PSOQTY
"RTN","PSOTRI",26,0)
 Q:'$D(^PSRX(RX,0)) "0^Prescription does not exist"
"RTN","PSOTRI",27,0)
 ; Verify refill exists
"RTN","PSOTRI",28,0)
 I RFL=""!RFL<0 S RFL=$$LSTRFL^PSOBPSU1(RX)
"RTN","PSOTRI",29,0)
 ;
"RTN","PSOTRI",30,0)
 ; Not original fill
"RTN","PSOTRI",31,0)
 I RFL Q:'$D(^PSRX(RX,1,RFL)) "0^Refill "_RFL_" does not exist"
"RTN","PSOTRI",32,0)
 ;
"RTN","PSOTRI",33,0)
 ; Verify RX is for a TRICARE patient
"RTN","PSOTRI",34,0)
 Q:'$$TRIC^PSOREJP1(RX,RFL) "0^Not a TRICARE RX"
"RTN","PSOTRI",35,0)
 ;
"RTN","PSOTRI",36,0)
 ; Verify Audit Type
"RTN","PSOTRI",37,0)
 I ("/R/N/I/")'[("/"_AUD_"/") Q "0^Invalid Audit Type "_AUD
"RTN","PSOTRI",38,0)
 ; Coordination of Benefits (default is Primary)
"RTN","PSOTRI",39,0)
 S RXCOB=+$G(RXCOB) I RXCOB=0 S RXCOB=1
"RTN","PSOTRI",40,0)
 ; Audit File and Reject subfile
"RTN","PSOTRI",41,0)
 S FN=52.87,SFN=52.8713
"RTN","PSOTRI",42,0)
 ;
"RTN","PSOTRI",43,0)
 ; Fields for original fill:
"RTN","PSOTRI",44,0)
 ; PROVIDER;NDC;DRUG NAME;QUANTITY;PATIENT;PATIENT STATUS;PHARMACIST;UNIT PRICE OF DRUG
"RTN","PSOTRI",45,0)
 S RXFLDS="4;27;6;7;2;3;23;17"
"RTN","PSOTRI",46,0)
 ; Fields for refills
"RTN","PSOTRI",47,0)
 ; PROVIDER;NDC;QUANTITY;PHARMACIST
"RTN","PSOTRI",48,0)
 S RFLFLDS="15;11;1;4"
"RTN","PSOTRI",49,0)
 ;
"RTN","PSOTRI",50,0)
 ; Get data from RX
"RTN","PSOTRI",51,0)
 D GETS^DIQ(52,RX,RXFLDS,"I","RXARR")
"RTN","PSOTRI",52,0)
 ; Get data from Refill
"RTN","PSOTRI",53,0)
 I RFL D GETS^DIQ(52.1,RFL_","_RX,RFLFLDS,"I","RFLARR")
"RTN","PSOTRI",54,0)
 ; Get Division
"RTN","PSOTRI",55,0)
 S PSODIV=$$RXSITE^PSOBPSUT(RX,RFL)
"RTN","PSOTRI",56,0)
 ; ECME Number, if exists
"RTN","PSOTRI",57,0)
 S RXECME=$$ECMENUM^PSOBPSU2(RX)
"RTN","PSOTRI",58,0)
 ; Date of Action is NOW
"RTN","PSOTRI",59,0)
 S PSODOA=$$NOW^XLFDT()
"RTN","PSOTRI",60,0)
 ; Date of Service
"RTN","PSOTRI",61,0)
 S PSODOS=$$DOS^PSOBPSU1(RX,RFL,PSODOA\1)
"RTN","PSOTRI",62,0)
 ; User (If null OR Audit Type is Inpatient set to POSTMASTER)
"RTN","PSOTRI",63,0)
 S PSOUSER=DUZ
"RTN","PSOTRI",64,0)
 I (PSOUSER="")!(AUD="I") S PSOUSER=.5
"RTN","PSOTRI",65,0)
 ; Quantity
"RTN","PSOTRI",66,0)
 S PSOQTY=$S(RFL>0:$G(RFLARR(52.1,RFL_","_RX_",",1,"I")),1:$G(RXARR(52,RX_",",7,"I")))
"RTN","PSOTRI",67,0)
 ;
"RTN","PSOTRI",68,0)
 ; Set up FDA array
"RTN","PSOTRI",69,0)
 S PSOIEN="+1,"
"RTN","PSOTRI",70,0)
 S PSOAIEN=$P($G(^PS(52.87,0)),U,3)+1
"RTN","PSOTRI",71,0)
 ; AUDIT ID field
"RTN","PSOTRI",72,0)
 S PSOFDA(FN,PSOIEN,.01)=PSOAIEN
"RTN","PSOTRI",73,0)
 ; PRESCRIPTION field
"RTN","PSOTRI",74,0)
 S PSOFDA(FN,PSOIEN,1)=RX
"RTN","PSOTRI",75,0)
 ; FILL field
"RTN","PSOTRI",76,0)
 S PSOFDA(FN,PSOIEN,2)=RFL
"RTN","PSOTRI",77,0)
 ; PATIENT field
"RTN","PSOTRI",78,0)
 S PSOFDA(FN,PSOIEN,3)=$G(RXARR(52,RX_",",2,"I"))
"RTN","PSOTRI",79,0)
 ; DIVISOIN field
"RTN","PSOTRI",80,0)
 S PSOFDA(FN,PSOIEN,4)=PSODIV
"RTN","PSOTRI",81,0)
 ; PROVIDER field
"RTN","PSOTRI",82,0)
 S PSOFDA(FN,PSOIEN,5)=$S(RFL>0:$G(RFLARR(52.1,RFL_","_RX_",",15,"I")),1:$G(RXARR(52,RX_",",4,"I")))
"RTN","PSOTRI",83,0)
 ; NDC field
"RTN","PSOTRI",84,0)
 S PSOFDA(FN,PSOIEN,6)=$S(RFL>0:$G(RFLARR(52.1,RFL_","_RX_",",11,"I")),1:$G(RXARR(52,RX_",",27,"I")))
"RTN","PSOTRI",85,0)
 ; DRUG field
"RTN","PSOTRI",86,0)
 S PSOFDA(FN,PSOIEN,7)=$G(RXARR(52,RX_",",6,"I"))
"RTN","PSOTRI",87,0)
 ; BILL COST field (This needs to be verified)
"RTN","PSOTRI",88,0)
 S PSOFDA(FN,PSOIEN,8)=$G(RXARR(52,RX_",",17,"I"))*PSOQTY+8
"RTN","PSOTRI",89,0)
 ; ECME NUMBER field
"RTN","PSOTRI",90,0)
 S PSOFDA(FN,PSOIEN,9)=RXECME
"RTN","PSOTRI",91,0)
 ; QTY field
"RTN","PSOTRI",92,0)
 S PSOFDA(FN,PSOIEN,10)=PSOQTY
"RTN","PSOTRI",93,0)
 ; PATIENT STATUS field
"RTN","PSOTRI",94,0)
 S PSOFDA(FN,PSOIEN,11)=$G(RXARR(52,RX_",",3,"I"))
"RTN","PSOTRI",95,0)
 ; AUDIT TYPE field
"RTN","PSOTRI",96,0)
 S PSOFDA(FN,PSOIEN,12)=AUD
"RTN","PSOTRI",97,0)
 ; USER field
"RTN","PSOTRI",98,0)
 S PSOFDA(FN,PSOIEN,14)=PSOUSER
"RTN","PSOTRI",99,0)
 ; DATE OF ACTION field
"RTN","PSOTRI",100,0)
 S PSOFDA(FN,PSOIEN,15)=PSODOA
"RTN","PSOTRI",101,0)
 ; DATE OF SERVICE field
"RTN","PSOTRI",102,0)
 S PSOFDA(FN,PSOIEN,16)=PSODOS
"RTN","PSOTRI",103,0)
 ; TRICARE JUSTIFICATION field
"RTN","PSOTRI",104,0)
 S PSOFDA(FN,PSOIEN,17)=TRIJST
"RTN","PSOTRI",105,0)
 ; Get Reject Codes, if any exist
"RTN","PSOTRI",106,0)
 D DUR1^BPSNCPD3(RX,RFL,.PSOREJ,.PSOERR,RXCOB)
"RTN","PSOTRI",107,0)
 S PSOET=$$PSOET^PSOREJP3(RX,RFL)    ;check to see if eT is the reject code as no ecme claim.
"RTN","PSOTRI",108,0)
 I PSOET,'$D(PSOREJ(RXCOB,"REJ CODES")) S PSOREJ(RXCOB,"REJ CODES",1,"eT")="",PSOREJ(RXCOB,"REJ CODE LST")="eT"
"RTN","PSOTRI",109,0)
 I $G(PSOREJ(RXCOB,"REJ CODE LST"))]"" D
"RTN","PSOTRI",110,0)
 . S PSOX="",PSOY=1 F I=1:1 S PSOX=$O(PSOREJ(RXCOB,"REJ CODES",I,0)) Q:PSOX=""  D
"RTN","PSOTRI",111,0)
 . . S PSOY=PSOY+1,PSOIENS=PSOY_","_PSOIEN
"RTN","PSOTRI",112,0)
 . . S PSOFDA(SFN,"+"_PSOIENS,.01)=PSOX
"RTN","PSOTRI",113,0)
 ;
"RTN","PSOTRI",114,0)
 D UPDATE^DIE("","PSOFDA","","PSOERR")
"RTN","PSOTRI",115,0)
 I $D(PSOERR("DIERR")) D BMES^XPDUTL(PSOERR("DIERR",1,"TEXT",1))
"RTN","PSOTRI",116,0)
 Q
"RTN","PSOVER1")
0^25^B57808886
"RTN","PSOVER1",1,0)
PSOVER1 ;BHAM ISC/SAB - verify one rx ;3/9/05 12:53pm
"RTN","PSOVER1",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**32,46,90,131,202,207,148,243,268,281,324,358**;DEC 1997;Build 35
"RTN","PSOVER1",3,0)
 ;External reference ^PSDRUG( supported by DBIA 221
"RTN","PSOVER1",4,0)
 ;External reference to PSOUL^PSSLOCK supported by DBIA 2789
"RTN","PSOVER1",5,0)
 ;External reference ^PS(55 supported by DBIA 2228
"RTN","PSOVER1",6,0)
 ;External reference to PSSORPH is supported by DBIA 3234
"RTN","PSOVER1",7,0)
 ;External references to ^ORRDI1 supported by DBIA 4659
"RTN","PSOVER1",8,0)
 ;External reference ^XTMP("ORRDI" supported by DBIA 4660
"RTN","PSOVER1",9,0)
REDO ;
"RTN","PSOVER1",10,0)
 S (DRG,PSODRUG("NAME"))=$P(^PSDRUG(+$P(^PSRX(PSONV,0),"^",6),0),"^"),PSODRUG("VA CLASS")=$P(^(0),"^",2)
"RTN","PSOVER1",11,0)
 I '$D(PSODFN) S PSODFN=$P(^PSRX(PSONV,0),"^",2)
"RTN","PSOVER1",12,0)
 S (STA,DNM)="",PSDPSTOP=0,$P(PSONULN,"-",79)="-" F  S STA=$O(PSOSD(STA)) Q:STA=""  F  S DNM=$O(PSOSD(STA,DNM)) Q:DNM=""  K PSZZZDUP I $P(PSOSD(STA,DNM),"^",2)<10 D
"RTN","PSOVER1",13,0)
 .I STA="ZNONVA" D NVA Q
"RTN","PSOVER1",14,0)
 .I PSODRUG("NAME")=$P(DNM,"^")&(PSONV'=$P(PSOSD(STA,DNM),"^")) S PSZZZDUP=1 K DIR S DIR(0)="E",DIR("A")="Press RETURN to continue" W ! D ^DIR K DIR S PSDTSTOP=1
"RTN","PSOVER1",15,0)
 .I PSODRUG("VA CLASS")]"",$E(PSODRUG("VA CLASS"),1,4)=$E($P(PSOSD(STA,DNM),"^",5),1,4),PSODRUG("NAME")'=$P(DNM,"^") K DIR S DIR(0)="E",DIR("A")="Press RETURN to continue" W ! D ^DIR K DIR D CLS^PSODRDUP S PSDTSTOP=1
"RTN","PSOVER1",16,0)
 .I $G(PSZZZDUP),$G(PSVFLAG),$P($G(^PSRX($P(PSOSD(STA,DNM),"^"),"STA")),"^")=12,$D(^PS(52.4,$P(PSOSD(STA,DNM),"^"),0)) S DA=$P(PSOSD(STA,DNM),"^"),DIK="^PS(52.4," D ^DIK K DIK
"RTN","PSOVER1",17,0)
 .I $G(PSZZZDUP),$G(PSVFLAG),$P($G(^PSRX($P(PSOSD(STA,DNM),"^"),"STA")),"^")'=12 S PSZZQUIT=1
"RTN","PSOVER1",18,0)
 K MSG I $G(PSZZQUIT),$G(PSVFLAG) K PSZZQUIT,PSODRUG,PSODFN,PSZZZDUP,DNM,PSDTSTOP D CLEAN Q
"RTN","PSOVER1",19,0)
 D REMOTE
"RTN","PSOVER1",20,0)
 K PSODRUG,PSODFN,PSZZZDUP,DNM,PSZZQUIT
"RTN","PSOVER1",21,0)
ALLR ;Allergy check
"RTN","PSOVER1",22,0)
 S PSONOAL="" D ALLERGY^PSOORUT2 D:PSONOAL'="" NOALRGY K PSONOAL I $G(PSZZQUIT) K MSG,PSZZQUIT,PSODRUG,PSODFN,PSZZZDUP,DNM,PSDTSTOP D CLEAN Q
"RTN","PSOVER1",23,0)
 G:'$P($G(^PSRX(PSONV,3)),"^",6) EDIT
"RTN","PSOVER1",24,0)
 I '$G(PSDTSTOP) K DIR S DIR(0)="E" D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) K PSDTSTOP G OUT
"RTN","PSOVER1",25,0)
 W !!,"A Drug-Allergy Reaction exists for this medication!",!!,"***SIGNIFICANT*** Allergy Reaction"
"RTN","PSOVER1",26,0)
 W !,"Drug: ",$P($G(^PSDRUG(+$P($G(^PSRX(PSONV,0)),"^",6),0)),"^")
"RTN","PSOVER1",27,0)
 I $O(^PSRX(PSONV,"DAI",0)) W !?6,"Ingredients: " D
"RTN","PSOVER1",28,0)
 .F PSPPP=0:0 S PSPPP=$O(^PSRX(PSONV,"DAI",PSPPP)) Q:'PSPPP  I $G(^(PSPPP,0))'="" W:$X+$L($G(^PSRX(PSONV,"DAI",PSPPP,0)))+2>IOM !?19 W $G(^PSRX(PSONV,"DAI",PSPPP,0))_", "
"RTN","PSOVER1",29,0)
 W ! K DIR,PSPPP S DIR(0)="Y",DIR("B")="Y",DIR("A")="Do you want to intervene?" D ^DIR K DIR I X["^"!($D(DTOUT))!($D(DUOUT)) K PSDTSTOP G OUT
"RTN","PSOVER1",30,0)
 I Y S PSORX("INTERVENE")=0 D EN1^PSORXI(PSONV)
"RTN","PSOVER1",31,0)
EDIT I $G(PKI1)=2 D DCV1^PSOPKIV1 G OUT
"RTN","PSOVER1",32,0)
 K PSDTSTOP S DIR("A")="EDIT",DIR("B")="N",DIR(0)="SB^Y:YES;N:NO;P:PROFILE",DIR("?")="Enter Y to change this RX, P to see a profile, or N to proceed with verification"
"RTN","PSOVER1",33,0)
 D ^DIR K DIR I Y="Y",$G(PSOACT)]"" S VALMBCK="R" G OUT
"RTN","PSOVER1",34,0)
 I $D(DIRUT),$G(PSOCLK) S PSOCQ=1 G OUT
"RTN","PSOVER1",35,0)
 I $D(DIRUT),$G(PSOACT)]"" S VALMBCK="R" G OUT
"RTN","PSOVER1",36,0)
 G VERIFY:Y="N",PROF:Y="P",OUT:"YNP"'[$E(Y)
"RTN","PSOVER1",37,0)
CHANGE S DA=PSONV,(PSRX1,PSRX2)=$P(^PSRX(PSONV,0),"^",6)
"RTN","PSOVER1",38,0)
 S DEA1=1,DEA2=0,PSDOLD=+DA,DIE="^PSRX(",DR="3;7;8;9;4;5;12;1;22;11;"_$S($P(PSOPAR,"^",12):"35;",1:"")_$S($P(PSOPAR,"^",15):"10.6",1:"")_";@2" D ^DIE
"RTN","PSOVER1",39,0)
 ;I PSRX1'=PSRX2,DEA1'=DEA2 S DR="6////"_PSRX1 D ^DIE
"RTN","PSOVER1",40,0)
 D EXPIRE K DIE,DR,DEA1,DEA2,P(5),PSRX1,PSRX2
"RTN","PSOVER1",41,0)
 K PSD(PSDOLD) S PSDNEW=$P(^PSDRUG($P(^PSRX(PSONV,0),"^",6),0),"^")_"^"_PSONV,PSD(PSDNEW)=PSONV_"^*^1^"_$P(^PSDRUG($P(^PSRX(PSONV,0),"^",6),0),"^",2)
"RTN","PSOVER1",42,0)
 S DA=PSONV D ^PSORXPR
"RTN","PSOVER1",43,0)
 G EDIT:PSDNEW=PSDOLD,REDO
"RTN","PSOVER1",44,0)
PROF I '$D(PSOSD) W !,$C(7),"This patient has no other prescriptions on file",!! G EDIT Q
"RTN","PSOVER1",45,0)
 D ^PSODSPL G EDIT Q
"RTN","PSOVER1",46,0)
 ;
"RTN","PSOVER1",47,0)
EXPIRE S RX0=^PSRX(DA,0),X1=$P($P(RX0,"^",13),"."),X2=$P(RX0,"^",9)+1*$P(RX0,"^",8),X2=$S($P(RX0,"^",8)=X2:X2,X2<181:184,X2=360:366,1:X2),X=X1 D:X1&X2 C^%DTC
"RTN","PSOVER1",48,0)
 K ^PS(55,PSDFN,"P","A",+$P(^PSRX(DA,2),"^",6),DA) S ^PS(55,PSDFN,"P","A",X,DA)="",$P(^PSRX(DA,2),"^",6)=X,$P(^PS(52.4,DA,0),"^",7)=X Q
"RTN","PSOVER1",49,0)
VERIFY G:'$P(PSOPAR,"^",2) VERY
"RTN","PSOVER1",50,0)
 S DIR("A")="VERIFY FOR "_PSONAM_" ? (Y/N/Delete/Quit): ",DIR("B")="Y",DIR(0)="SA^Y:YES;N:NO;D:DELETE;Q:QUIT"
"RTN","PSOVER1",51,0)
 S DIR("?",1)="Enter Y (or return) to verify this prescription",DIR("?",2)="N to leave this prescription non-verified and to end this session of verification",DIR("?")="D to delete this prescription"
"RTN","PSOVER1",52,0)
 D ^DIR K DIR G OUT:Y="N",QUIT:"Q^"[$E(Y),DELETE:Y="D"
"RTN","PSOVER1",53,0)
VERY I $G(PKI1)=1 D REA^PSOPKIV1 G:'$D(PKIR) VERIFY
"RTN","PSOVER1",54,0)
 K ^PSRX(PSONV,"DAI") S $P(^PSRX(PSONV,3),"^",6)=""
"RTN","PSOVER1",55,0)
 K ^PSRX(PSONV,"DRI"),SPFL
"RTN","PSOVER1",56,0)
 I '$O(^PSRX(PSONV,6,0)) D  I $D(DUOUT)!($D(DTOUT)) W !!,"Rx: "_$P(^PSRX(DA,0),"^")_" not Verified!!",! H 2 G OUT
"RTN","PSOVER1",57,0)
 .W !!,"Dosing Instructions Missing. Please add!",!
"RTN","PSOVER1",58,0)
 .I $P($G(^PSRX(PSONV,"SIG")),"^")]"",'$P($G(^("SIG")),"^",2) W "SIG: "_$P(^PSRX(PSONV,"SIG"),"^"),!
"RTN","PSOVER1",59,0)
 .I $P($G(^PSRX(PSONV,"SIG")),"^",2),$O(^PSRX(PSONV,"SIG1",0)) D  K I
"RTN","PSOVER1",60,0)
 ..W "SIG: " F I=0:0 S I=$O(^PSRX(PSONV,"SIG1",I)) Q:'I  W ^PSRX(PSONV,"SIG1",I,0),!
"RTN","PSOVER1",61,0)
 .S DA=PSONV,PSOVER=1 K DIR,DIRUT,DUOUT,DTOUT
"RTN","PSOVER1",62,0)
 .S PSODRUG("IEN")=$P(^PSRX(DA,0),"^",6),PSODFN=$P(^(0),"^",2),PSORXED("IRXN")=DA,PSODRUG("OI")=$P(^PSRX(DA,"OR1"),"^")
"RTN","PSOVER1",63,0)
 .D DOSE^PSSORPH(.DOSE,PSODRUG("IEN"),"O",PSODFN),^PSOORED3
"RTN","PSOVER1",64,0)
 .K PSODFN,PSODRUG("IEN"),DOSE,PSOVER
"RTN","PSOVER1",65,0)
 .I '$G(ENT) S DUOUT=1
"RTN","PSOVER1",66,0)
 .Q:$D(DUOUT)!($D(DTOUT))
"RTN","PSOVER1",67,0)
 .K DIR,DIRUT,DUOUT,DTOUT S DIE=52,DR=114 D ^DIE K DIE,DR,DTOUT
"RTN","PSOVER1",68,0)
 .I X'="" D SIG^PSOHELP D:$G(INS1)]"" EN^DDIOL($E(INS1,2,9999999)) S PSORXED("SIG",1)=$E(INS1,2,9999999)
"RTN","PSOVER1",69,0)
 .D EN^PSOFSIG(.PSORXED,1),UDSIG^PSOORED3 H 2
"RTN","PSOVER1",70,0)
 S DA=PSONV,$P(^PSRX(DA,2),"^",10)=DUZ I $P(^PSRX(DA,2),"^",2)>DT,$P(PSOPAR,"^",6) S (SPFL1,PSOVER)="",PSORX("FILL DATE")=$P(^(2),"^",2),RXF=0 D UPSUS S PSTRIVER=1 D SUS^PSORXL K PSORX("FILL DATE"),PSTRIVER G KILL
"RTN","PSOVER1",71,0)
 S PSOVER(PSONV)="" S $P(^PSRX(PSONV,"STA"),"^")=0,$P(PSOSD("NON-VERIFIED",DRG),"^",2)=0,PSOSD("ACTIVE",DRG)=PSOSD("NON-VERIFIED",DRG)
"RTN","PSOVER1",72,0)
 I $G(PKI1)=1,$G(PKIR)]"" D ACT^PSOPKIV1(DA)
"RTN","PSOVER1",73,0)
 K PSOSD("NON-VERIFIED",DRG) D EN^PSOHLSN1(PSONV,"SC","CM","")
"RTN","PSOVER1",74,0)
 ;
"RTN","PSOVER1",75,0)
 ; - Calling ECME for claims generation and transmission / REJECT handling
"RTN","PSOVER1",76,0)
 N ACTION
"RTN","PSOVER1",77,0)
 I $$SUBMIT^PSOBPSUT(PSONV) D  I ACTION="Q"!(ACTION="^") Q
"RTN","PSOVER1",78,0)
 . S ACTION="" D ECMESND^PSOBPSU1(PSONV,,,$S($O(^PSRX(PSONV,1,0)):"RF",1:"OF"))
"RTN","PSOVER1",79,0)
 . ; Quit if there is an unresolved Tricare non-billable reject code, PSO*7*358
"RTN","PSOVER1",80,0)
 . I $$PSOET^PSOREJP3(PSONV) S ACTION="Q" Q
"RTN","PSOVER1",81,0)
 . I $$FIND^PSOREJUT(PSONV) D
"RTN","PSOVER1",82,0)
 . . S ACTION=$$HDLG^PSOREJU1(PSONV,0,"79,88","OF","IOQ","Q")
"RTN","PSOVER1",83,0)
 ;
"RTN","PSOVER1",84,0)
KILL S DA=PSONV,DIK="^PS(52.4," D ^DIK K DA,DIK D DCORD^PSONEW2
"RTN","PSOVER1",85,0)
OUT K DIRUT,DTOUT,DUOUT,UPFLAGX D CLEAN Q
"RTN","PSOVER1",86,0)
DELETE K UPFLAGX D DELETE^PSOVER2 G:$G(UPFLAGX) OUT K PSOSD("NON-VERIFIED",$G(DRG)) Q
"RTN","PSOVER1",87,0)
QUIT S PSOQUIT="" D CLEAN Q
"RTN","PSOVER1",88,0)
UPSUS S $P(PSOSD("NON-VERIFIED",DRG),"^",2)=5,PSOSD("ACTIVE",DRG)=PSOSD("NON-VERIFIED",DRG) K PSOSD("NON-VERIFIED",DRG) D EN^PSOHLSN1(PSONV,"SC","CM","")
"RTN","PSOVER1",89,0)
 Q
"RTN","PSOVER1",90,0)
CLEAN ;cleans up tmp("psorxdc") global
"RTN","PSOVER1",91,0)
 I $O(^TMP("PSORXDC",$J,0)) F RORD=0:0 S RORD=$O(^TMP("PSORXDC",$J,RORD)) Q:'RORD  D
"RTN","PSOVER1",92,0)
 .D PSOUL^PSSLOCK(RORD_$S($P(^TMP("PSORXDC",$J,RORD,0),"^")="P":"S",1:""))
"RTN","PSOVER1",93,0)
 .W !,$S($P(^TMP("PSORXDC",$J,RORD,0),"^")=52:"Prescription",1:"Pending Order")_" #"_$S($P(^TMP("PSORXDC",$J,RORD,0),"^")=52:$P(^PSRX(RORD,0),"^"),1:RORD)_" NOT Discontinued."
"RTN","PSOVER1",94,0)
 K ^TMP("PSORXDC",$J),RORD
"RTN","PSOVER1",95,0)
 Q
"RTN","PSOVER1",96,0)
KV1 ;
"RTN","PSOVER1",97,0)
 K PSOANSQD,DRET,LST,PSOQUIT,PSODRUG,PSONEW,SIG,PSODIR,PHI,PRC,ORCHK,ORDRG,PSOSIGFL,PSORX("ISSUE DATE"),PSORX("FILL DATE"),CLOZPAT
"RTN","PSOVER1",98,0)
KV K DIR,DIRUT,DTOUT,DUOUT
"RTN","PSOVER1",99,0)
 Q
"RTN","PSOVER1",100,0)
NVA ;
"RTN","PSOVER1",101,0)
 I $P(PSOSD(STA,DNM),"^",11) D NVA^PSODRDU1 Q
"RTN","PSOVER1",102,0)
 N PSOOI,CLASS,FLG,X,Y,RXREC,IFN
"RTN","PSOVER1",103,0)
 S (Y,FLG)=""
"RTN","PSOVER1",104,0)
 S RXREC=$P(PSOSD(STA,DNM),"^",10),PSOOI=+$G(^PS(55,DFN,"NVA",RXREC,0)),IFN=RXREC N DNM
"RTN","PSOVER1",105,0)
 F  S Y=$O(^PSDRUG("ASP",PSOOI,Y)) Q:Y=""!(FLG)  S DNM=$P(^PSDRUG(Y,0),"^"),CLASS=$P(^PSDRUG(Y,0),"^",2) I PSODRUG("NAME")=DNM!(CLASS=PSODRUG("VA CLASS")) D DSP^PSODRDU1 S FLG=1 Q
"RTN","PSOVER1",106,0)
 Q
"RTN","PSOVER1",107,0)
REMOTE ; 
"RTN","PSOVER1",108,0)
 K ^TMP($J,"DD"),^TMP($J,"DC"),^TMP($J,"DI"),^TMP($J,"DI"_PSODFN) D
"RTN","PSOVER1",109,0)
 .I $T(HAVEHDR^ORRDI1)']"" Q
"RTN","PSOVER1",110,0)
 .I '$$HAVEHDR^ORRDI1 Q
"RTN","PSOVER1",111,0)
 .I $D(^XTMP("ORRDI","OUTAGE INFO","DOWN")) D  Q
"RTN","PSOVER1",112,0)
 ..I $T(REMOTE^PSORX1)]"" Q
"RTN","PSOVER1",113,0)
 ..W !,"Remote data not available - Only local order checks processed." D PAUSE^PSOORRD2
"RTN","PSOVER1",114,0)
 .W !,"Now doing remote order checks. Please wait..."
"RTN","PSOVER1",115,0)
 .D REMOTE^PSOORRDI(PSODFN,+$P($G(^PSRX(PSONV,0)),"^",6))
"RTN","PSOVER1",116,0)
 .I $P($G(^XTMP("ORRDI","PSOO",PSODFN,0)),"^",3)<0 W !,"Remote data not available - Only local order checks processed." D PAUSE^PSOORRD2 Q
"RTN","PSOVER1",117,0)
 .I $D(^TMP($J,"DD")) D DUP^PSOORRD2
"RTN","PSOVER1",118,0)
 .I $D(^TMP($J,"DC")) D CLS^PSOORRD2
"RTN","PSOVER1",119,0)
 .I $D(^TMP($J,"DI"_PSODFN)) K ^TMP($J,"DI") M ^TMP($J,"DI")=^TMP($J,"DI"_PSODFN) D DRGINT^PSOORRD2
"RTN","PSOVER1",120,0)
 K ^TMP($J,"DD"),^TMP($J,"DC"),^TMP($J,"DI"),^TMP($J,"DI"_PSODFN)
"RTN","PSOVER1",121,0)
 Q
"RTN","PSOVER1",122,0)
NOALRGY ;
"RTN","PSOVER1",123,0)
 N PSODFN,PSODRUG
"RTN","PSOVER1",124,0)
 S PSODFN=$P(^PSRX(PSONV,0),"^",2),PSODRUG("IEN")=$P(^PSRX(PSONV,0),"^",6)
"RTN","PSOVER1",125,0)
 D NOALRGY^PSODRG
"RTN","PSOVER1",126,0)
 Q
"SEC","^DIC",52.87,52.87,0,"AUDIT")
@
"SEC","^DIC",52.87,52.87,0,"DD")
@
"SEC","^DIC",52.87,52.87,0,"DEL")
@
"SEC","^DIC",52.87,52.87,0,"LAYGO")
@
"SEC","^DIC",52.87,52.87,0,"RD")
Pp
"SEC","^DIC",52.87,52.87,0,"WR")
@
"UP",52,52.25,-1)
52^REJ
"UP",52,52.25,0)
52.25
"VER")
8.0^22.0
"^DD",52,52.25,27,0)
COORDINATION OF BENEFITS^S^1:PRIMARY;2:SECONDARY;3:TERTIARY;^2;7^Q
"^DD",52,52.25,27,3)
Enter the Coordination of Benefits indicator.
"^DD",52,52.25,27,21,0)
^^2^2^3100831^
"^DD",52,52.25,27,21,1,0)
This field contains the Coordination of Benefits indicator for 
"^DD",52,52.25,27,21,2,0)
the third party insurance rejection for the fill.
"^DD",52,52.25,27,23,0)
^^2^2^3100831^
"^DD",52,52.25,27,23,1,0)
This field is set automatically to store the Coordination of
"^DD",52,52.25,27,23,2,0)
Benefits indicator for the reject third party claim.
"^DD",52,52.25,27,"DT")
3100831
"^DD",52.87,52.87,0)
FIELD^^17^18
"^DD",52.87,52.87,0,"DDA")
N
"^DD",52.87,52.87,0,"DT")
3100817
"^DD",52.87,52.87,0,"IX","B",52.87,.01)

"^DD",52.87,52.87,0,"IX","C",52.87,1)

"^DD",52.87,52.87,0,"IX","D",52.87,4)

"^DD",52.87,52.87,0,"IX","E",52.87,15)

"^DD",52.87,52.87,0,"IX","F",52.87,5)

"^DD",52.87,52.87,0,"NM","PSO TRICARE AUDIT LOG")

"^DD",52.87,52.87,0,"VRPK")
PSO
"^DD",52.87,52.87,.01,0)
AUDIT ID^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1.N) X
"^DD",52.87,52.87,.01,1,0)
^.1
"^DD",52.87,52.87,.01,1,1,0)
52.87^B
"^DD",52.87,52.87,.01,1,1,1)
S ^PS(52.87,"B",$E(X,1,30),DA)=""
"^DD",52.87,52.87,.01,1,1,2)
K ^PS(52.87,"B",$E(X,1,30),DA)
"^DD",52.87,52.87,.01,3)
Type a number between 1 and 999999999, 0 Decimal Digits.
"^DD",52.87,52.87,.01,21,0)
^^1^1^3100720^
"^DD",52.87,52.87,.01,21,1,0)
This is the Audit ID that represents this specific audit record.
"^DD",52.87,52.87,.01,"DT")
3100816
"^DD",52.87,52.87,1,0)
PRESCRIPTION^P52'^PSRX(^0;2^Q
"^DD",52.87,52.87,1,1,0)
^.1
"^DD",52.87,52.87,1,1,1,0)
52.87^C
"^DD",52.87,52.87,1,1,1,1)
S ^PS(52.87,"C",$E(X,1,30),DA)=""
"^DD",52.87,52.87,1,1,1,2)
K ^PS(52.87,"C",$E(X,1,30),DA)
"^DD",52.87,52.87,1,1,1,"DT")
3100705
"^DD",52.87,52.87,1,3)
Select a Prescription.
"^DD",52.87,52.87,1,21,0)
^^1^1^3100720^
"^DD",52.87,52.87,1,21,1,0)
This is the prescription number associated with this audit record.
"^DD",52.87,52.87,1,"DT")
3100720
"^DD",52.87,52.87,2,0)
FILL^NJ3,0^^0;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",52.87,52.87,2,3)
Type a number between 0 and 999, 0 Decimal Digits
"^DD",52.87,52.87,2,21,0)
^^2^2^3100720^
"^DD",52.87,52.87,2,21,1,0)
This is the Refill number associated with the prescription. The original 
"^DD",52.87,52.87,2,21,2,0)
fill is always '0'.
"^DD",52.87,52.87,2,"DT")
3100720
"^DD",52.87,52.87,3,0)
PATIENT^P2'^DPT(^0;4^Q
"^DD",52.87,52.87,3,3)
Select a Patient.
"^DD",52.87,52.87,3,21,0)
^^1^1^3100816^
"^DD",52.87,52.87,3,21,1,0)
This is the Patient for whom the medication was prescribed.
"^DD",52.87,52.87,3,"DT")
3100816
"^DD",52.87,52.87,4,0)
DIVISION^P59'^PS(59,^0;5^Q
"^DD",52.87,52.87,4,1,0)
^.1
"^DD",52.87,52.87,4,1,1,0)
52.87^D
"^DD",52.87,52.87,4,1,1,1)
S ^PS(52.87,"D",$E(X,1,30),DA)=""
"^DD",52.87,52.87,4,1,1,2)
K ^PS(52.87,"D",$E(X,1,30),DA)
"^DD",52.87,52.87,4,1,1,"DT")
3100705
"^DD",52.87,52.87,4,3)
Select an Outpatient Pharmacy Division.
"^DD",52.87,52.87,4,21,0)
^^2^2^3100816^
"^DD",52.87,52.87,4,21,1,0)
This the Outpatient Pharmacy Division from which the RX/Fill was 
"^DD",52.87,52.87,4,21,2,0)
dispensed.
"^DD",52.87,52.87,4,"DT")
3100816
"^DD",52.87,52.87,5,0)
PROVIDER^P200'^VA(200,^0;6^Q
"^DD",52.87,52.87,5,1,0)
^.1
"^DD",52.87,52.87,5,1,1,0)
52.87^F
"^DD",52.87,52.87,5,1,1,1)
S ^PS(52.87,"F",$E(X,1,30),DA)=""
"^DD",52.87,52.87,5,1,1,2)
K ^PS(52.87,"F",$E(X,1,30),DA)
"^DD",52.87,52.87,5,1,1,"DT")
3100720
"^DD",52.87,52.87,5,3)
Select a Provider.
"^DD",52.87,52.87,5,21,0)
^^1^1^3100720^
"^DD",52.87,52.87,5,21,1,0)
This is the Provider who prescribed the medication.
"^DD",52.87,52.87,5,"DT")
3100720
"^DD",52.87,52.87,6,0)
NDC^F^^0;7^K:$L(X)>13!($L(X)<5) X
"^DD",52.87,52.87,6,3)
Enter 5-13 free text characters.
"^DD",52.87,52.87,6,21,0)
^^2^2^3100816^
"^DD",52.87,52.87,6,21,1,0)
This is the National Drug Code (NDC) of the drug identified in the DRUG 
"^DD",52.87,52.87,6,21,2,0)
field.
"^DD",52.87,52.87,6,"DT")
3100816
"^DD",52.87,52.87,7,0)
DRUG^P50'^PSDRUG(^0;8^Q
"^DD",52.87,52.87,7,3)
Select the medication prescribed.
"^DD",52.87,52.87,7,21,0)
^^1^1^3100720^
"^DD",52.87,52.87,7,21,1,0)
This is the drug prescribed to the patient.
"^DD",52.87,52.87,7,"DT")
3100720
"^DD",52.87,52.87,8,0)
BILL COST^NJ8,2^^0;9^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999)!(X<0)!(X?.E1"."3.N) X
"^DD",52.87,52.87,8,3)
Type a Dollar amount between 0 and 99999, 2 Decimal Digits.
"^DD",52.87,52.87,8,21,0)
^^1^1^3100720^
"^DD",52.87,52.87,8,21,1,0)
This is the total bill cost for the TRICARE prescription being audited.
"^DD",52.87,52.87,8,"DT")
3100817
"^DD",52.87,52.87,9,0)
ECME NUMBER^F^^0;10^K:$L(X)>13!($L(X)<7) X
"^DD",52.87,52.87,9,3)
Enter 7-13 characters in length.
"^DD",52.87,52.87,9,21,0)
^^2^2^3100720^
"^DD",52.87,52.87,9,21,1,0)
This is the Electronic Claims Management Engine (ECME) number associated 
"^DD",52.87,52.87,9,21,2,0)
with the ePharmacy billing transaction.
"^DD",52.87,52.87,9,"DT")
3100720
"^DD",52.87,52.87,10,0)
QTY^NJ8,0^^0;11^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1.N) X
"^DD",52.87,52.87,10,3)
Enter a number between 1 and 99999999, 0 Decimal Digits
"^DD",52.87,52.87,10,21,0)
^^1^1^3100720^
"^DD",52.87,52.87,10,21,1,0)
This is the quantity of medication dispensed.
"^DD",52.87,52.87,10,"DT")
3100720
"^DD",52.87,52.87,11,0)
PATIENT STATUS^P53'^PS(53,^1;1^Q
"^DD",52.87,52.87,11,3)
Select the RX Patient Status.
"^DD",52.87,52.87,11,21,0)
^^3^3^3100816^
"^DD",52.87,52.87,11,21,1,0)
This is the RX PATIENT STATUS that represents the authorization for the 
"^DD",52.87,52.87,11,21,2,0)
RX. This is independent of the eligibility code assigned to the patient 
"^DD",52.87,52.87,11,21,3,0)
by Medical Administration Service (MAS) representative.
"^DD",52.87,52.87,11,"DT")
3100816
"^DD",52.87,52.87,12,0)
AUDIT TYPE^S^R:TRICARE NCPDP REJECT;N:TRICARE NON BILLABLE RX;I:TRICARE INPATIENT;^1;2^Q
"^DD",52.87,52.87,12,3)
Choose the Audit Type associated with the audit event.
"^DD",52.87,52.87,12,21,0)
^^2^2^3100720^
"^DD",52.87,52.87,12,21,1,0)
This is the type of audit associated with a TRICARE Bypass or Override
"^DD",52.87,52.87,12,21,2,0)
event.
"^DD",52.87,52.87,12,"DT")
3100720
"^DD",52.87,52.87,13,0)
NCPDP REJECT CODE^52.8713^^3;0
"^DD",52.87,52.87,13,21,0)
^^3^3^3100720^
"^DD",52.87,52.87,13,21,1,0)
This multiple is used to store the NCPDP Rject Code(s) returned in the
"^DD",52.87,52.87,13,21,2,0)
ECME response from the TRICARE payer indicating the reason(s) why the
"^DD",52.87,52.87,13,21,3,0)
claim was rejected.
"^DD",52.87,52.87,14,0)
USER^P200'^VA(200,^1;4^Q
"^DD",52.87,52.87,14,3)
Select a Pharmacy system user or Postmaster.
"^DD",52.87,52.87,14,21,0)
^^3^3^3100720^
"^DD",52.87,52.87,14,21,1,0)
The person who is responsible for creating the audit record. This would 
"^DD",52.87,52.87,14,21,2,0)
either be a Pharmacy system user or Postmaster if the audit is created by 
"^DD",52.87,52.87,14,21,3,0)
a background process.
"^DD",52.87,52.87,14,"DT")
3100720
"^DD",52.87,52.87,15,0)
DATE OF ACTION^D^^1;5^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",52.87,52.87,15,1,0)
^.1
"^DD",52.87,52.87,15,1,1,0)
52.87^E
"^DD",52.87,52.87,15,1,1,1)
S ^PS(52.87,"E",$E(X,1,30),DA)=""
"^DD",52.87,52.87,15,1,1,2)
K ^PS(52.87,"E",$E(X,1,30),DA)
"^DD",52.87,52.87,15,1,1,"DT")
3100705
"^DD",52.87,52.87,15,3)
Enter a valid date/time or enter NOW.
"^DD",52.87,52.87,15,21,0)
^^2^2^3100816^
"^DD",52.87,52.87,15,21,1,0)
This is the Date/Time that the event that generated the audit record 
"^DD",52.87,52.87,15,21,2,0)
occurred. 
"^DD",52.87,52.87,15,"DT")
3100816
"^DD",52.87,52.87,16,0)
DATE OF SERVICE^D^^1;6^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",52.87,52.87,16,3)
Enter a valid date or enter NOW.
"^DD",52.87,52.87,16,21,0)
^^2^2^3100720^
"^DD",52.87,52.87,16,21,1,0)
This is the Date the prescription was filled or professional service 
"^DD",52.87,52.87,16,21,2,0)
rendered.
"^DD",52.87,52.87,16,"DT")
3100720
"^DD",52.87,52.87,17,0)
TRICARE JUSTIFICATION^F^^2;1^K:$L(X)>250!($L(X)<1) X
"^DD",52.87,52.87,17,3)
Answer must be 1-250 characters in length
"^DD",52.87,52.87,17,21,0)
^^3^3^3100720^
"^DD",52.87,52.87,17,21,1,0)
For bypass processing TRICARE Justification = TRICARE 
"^DD",52.87,52.87,17,21,2,0)
Inpatient/Discharge. For override process - TRICARE Justification has no 
"^DD",52.87,52.87,17,21,3,0)
default text and is a required field.
"^DD",52.87,52.87,17,"DT")
3100720
"^DD",52.87,52.8713,0)
NCPDP REJECT CODE SUB-FIELD^^.01^1
"^DD",52.87,52.8713,0,"DT")
3100707
"^DD",52.87,52.8713,0,"IX","B",52.8713,.01)

"^DD",52.87,52.8713,0,"NM","NCPDP REJECT CODE")

"^DD",52.87,52.8713,0,"UP")
52.87
"^DD",52.87,52.8713,.01,0)
NCPDP REJECT CODE^MFO^^0;1^K:$L(X)>3!($L(X)<1) X
"^DD",52.87,52.8713,.01,1,0)
^.1
"^DD",52.87,52.8713,.01,1,1,0)
52.8713^B
"^DD",52.87,52.8713,.01,1,1,1)
S ^PS(52.87,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",52.87,52.8713,.01,1,1,2)
K ^PS(52.87,DA(1),3,"B",$E(X,1,30),DA)
"^DD",52.87,52.8713,.01,2)
S Y(0)=Y S Y(0)=Y S Y=$$TRANREJ^BPSECFM(Y)
"^DD",52.87,52.8713,.01,2.1)
S Y(0)=Y S Y=$$TRANREJ^BPSECFM(Y)
"^DD",52.87,52.8713,.01,3)
Enter a 1-3 character NCPDP Reject Code.
"^DD",52.87,52.8713,.01,21,0)
^^1^1^3100720^
"^DD",52.87,52.8713,.01,21,1,0)
This is an NCPDP Reject Code that was returned from the TRICARE payer.
"^DD",52.87,52.8713,.01,"DT")
3100720
"^DIC",52.87,52.87,0)
PSO TRICARE AUDIT LOG^52.87
"^DIC",52.87,52.87,0,"GL")
^PS(52.87,
"^DIC",52.87,52.87,"%",0)
^1.005^^0
"^DIC",52.87,52.87,"%D",0)
^^6^6^3100817^
"^DIC",52.87,52.87,"%D",1,0)
The PSO TRICARE AUDIT LOG file (#52.87) is used to capture TRICARE bypass
"^DIC",52.87,52.87,"%D",2,0)
and override audit information for Outpatient Pharmacy related 
"^DIC",52.87,52.87,"%D",3,0)
prescriptions. The bypass function circumvents ePharmacy processing for
"^DIC",52.87,52.87,"%D",4,0)
TRICARE eligible inpatients. The override function allows continued 
"^DIC",52.87,52.87,"%D",5,0)
processing of prescriptions for non-billable products for TRICARE 
"^DIC",52.87,52.87,"%D",6,0)
eligible outpatients as well as prescriptions that reject.
"^DIC",52.87,"B","PSO TRICARE AUDIT LOG",52.87)

**INSTALL NAME**
IB*2.0*434
"BLD",8059,0)
IB*2.0*434^INTEGRATED BILLING^0^3101101^y
"BLD",8059,4,0)
^9.64PA^366.14^1
"BLD",8059,4,366.14,0)
366.14
"BLD",8059,4,366.14,2,0)
^9.641^366.141^1
"BLD",8059,4,366.14,2,366.141,0)
EVENT  (sub-file)
"BLD",8059,4,366.14,2,366.141,1,0)
^9.6411^7.04^2
"BLD",8059,4,366.14,2,366.141,1,7.01,0)
RX COB
"BLD",8059,4,366.14,2,366.141,1,7.04,0)
RATE TYPE SELECTED BY USER
"BLD",8059,4,366.14,222)
y^n^p^^^^n^^n
"BLD",8059,4,366.14,224)

"BLD",8059,4,"APDD",366.14,366.141)

"BLD",8059,4,"APDD",366.14,366.141,7.01)

"BLD",8059,4,"APDD",366.14,366.141,7.04)

"BLD",8059,4,"B",366.14,366.14)

"BLD",8059,6.3)
16
"BLD",8059,"ABPKG")
n
"BLD",8059,"INID")
^y
"BLD",8059,"INIT")
IBY434PO
"BLD",8059,"KRN",0)
^9.67PA^779.2^20
"BLD",8059,"KRN",.4,0)
.4
"BLD",8059,"KRN",.401,0)
.401
"BLD",8059,"KRN",.402,0)
.402
"BLD",8059,"KRN",.403,0)
.403
"BLD",8059,"KRN",.5,0)
.5
"BLD",8059,"KRN",.84,0)
.84
"BLD",8059,"KRN",3.6,0)
3.6
"BLD",8059,"KRN",3.8,0)
3.8
"BLD",8059,"KRN",9.2,0)
9.2
"BLD",8059,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",8059,"KRN",9.8,0)
9.8
"BLD",8059,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",8059,"KRN",9.8,"NM",1,0)
IBNCPDP1^^0^B104112032
"BLD",8059,"KRN",9.8,"NM","B","IBNCPDP1",1)

"BLD",8059,"KRN",19,0)
19
"BLD",8059,"KRN",19.1,0)
19.1
"BLD",8059,"KRN",101,0)
101
"BLD",8059,"KRN",409.61,0)
409.61
"BLD",8059,"KRN",771,0)
771
"BLD",8059,"KRN",779.2,0)
779.2
"BLD",8059,"KRN",870,0)
870
"BLD",8059,"KRN",8989.51,0)
8989.51
"BLD",8059,"KRN",8989.52,0)
8989.52
"BLD",8059,"KRN",8994,0)
8994
"BLD",8059,"KRN","B",.4,.4)

"BLD",8059,"KRN","B",.401,.401)

"BLD",8059,"KRN","B",.402,.402)

"BLD",8059,"KRN","B",.403,.403)

"BLD",8059,"KRN","B",.5,.5)

"BLD",8059,"KRN","B",.84,.84)

"BLD",8059,"KRN","B",3.6,3.6)

"BLD",8059,"KRN","B",3.8,3.8)

"BLD",8059,"KRN","B",9.2,9.2)

"BLD",8059,"KRN","B",9.8,9.8)

"BLD",8059,"KRN","B",19,19)

"BLD",8059,"KRN","B",19.1,19.1)

"BLD",8059,"KRN","B",101,101)

"BLD",8059,"KRN","B",409.61,409.61)

"BLD",8059,"KRN","B",771,771)

"BLD",8059,"KRN","B",779.2,779.2)

"BLD",8059,"KRN","B",870,870)

"BLD",8059,"KRN","B",8989.51,8989.51)

"BLD",8059,"KRN","B",8989.52,8989.52)

"BLD",8059,"KRN","B",8994,8994)

"BLD",8059,"QUES",0)
^9.62^^
"BLD",8059,"REQB",0)
^9.611^1^1
"BLD",8059,"REQB",1,0)
IB*2.0*411^2
"BLD",8059,"REQB","B","IB*2.0*411",1)

"FIA",366.14)
IB NCPDP EVENT LOG
"FIA",366.14,0)
^IBCNR(366.14,
"FIA",366.14,0,0)
366.14D
"FIA",366.14,0,1)
y^n^p^^^^n^^n
"FIA",366.14,0,10)

"FIA",366.14,0,11)

"FIA",366.14,0,"RLRO")

"FIA",366.14,0,"VR")
2.0^IB
"FIA",366.14,366.14)
1
"FIA",366.14,366.141)
1
"FIA",366.14,366.141,7.01)

"FIA",366.14,366.141,7.04)

"INIT")
IBY434PO
"MBREQ")
1
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
434^3101101^101020
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IBNCPDP1")
0^1^B104112032
"RTN","IBNCPDP1",1,0)
IBNCPDP1 ;OAK/ELZ - PROCESSING FOR NEW RX REQUESTS ;5/22/08  15:24
"RTN","IBNCPDP1",2,0)
 ;;2.0;INTEGRATED BILLING;**223,276,339,363,383,405,384,411,434**;21-MAR-94;Build 16
"RTN","IBNCPDP1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBNCPDP1",4,0)
 ;
"RTN","IBNCPDP1",5,0)
 ;
"RTN","IBNCPDP1",6,0)
RX(DFN,IBD) ; pharmacy package call, passing in IBD by ref
"RTN","IBNCPDP1",7,0)
 ; this is called by PSO for all prescriptions issued, return is
"RTN","IBNCPDP1",8,0)
 ; a response to bill ECME or not with array for billing data elements
"RTN","IBNCPDP1",9,0)
 ;warning: back-billing flag:
"RTN","IBNCPDP1",10,0)
 ;if passed IBSCRES(IBRXN,IBFIL)=1
"RTN","IBNCPDP1",11,0)
 ; - then the SC Determination is just done by the IB clerk (billable)
"RTN","IBNCPDP1",12,0)
 ; IBD("PLAN") - is specified only if RX API is called for billing determination for 2ndary claim.
"RTN","IBNCPDP1",13,0)
 ;
"RTN","IBNCPDP1",14,0)
 ;clean up the list of non-answered SC/Env.indicators questions and INS
"RTN","IBNCPDP1",15,0)
 K IBD("SC/EI NO ANSW"),IBD("INS")
"RTN","IBNCPDP1",16,0)
 ;
"RTN","IBNCPDP1",17,0)
 N IBTRKR,IBARR,IBADT,IBRXN,IBFIL,IBTRKRN,IBRMARK,IBANY,IBX,IBT,IBINS,IBSAVE
"RTN","IBNCPDP1",18,0)
 N IBFEE,IBEABD,IBBI,IBIT,IBPRICE,IBRS,IBRT,IBTRN,IBCHG,IBERMSG,IBRXPOL,IBCNT,IBRES,IBNEEDS
"RTN","IBNCPDP1",19,0)
 ;
"RTN","IBNCPDP1",20,0)
 I '$G(DFN) S IBRES="0^No DFN" G RXQ
"RTN","IBNCPDP1",21,0)
 S IBRXN=+$G(IBD("IEN")) I 'IBRXN S IBRES="0^No Rx IEN" G RXQ
"RTN","IBNCPDP1",22,0)
 S IBFIL=+$G(IBD("FILL NUMBER"),-1) I IBFIL<0 S IBRES="0^No fill number" G RXQ
"RTN","IBNCPDP1",23,0)
 S IBD("QTY")=+$G(IBD("QTY")) I 'IBD("QTY") S IBRES="0^No Quantity" G RXQ
"RTN","IBNCPDP1",24,0)
 ;
"RTN","IBNCPDP1",25,0)
 S IBRES="0^Error"
"RTN","IBNCPDP1",26,0)
 S (IBEABD,IBADT)=+$G(IBD("FILL DATE"),DT)
"RTN","IBNCPDP1",27,0)
 ;
"RTN","IBNCPDP1",28,0)
 ; -- look up insurance for patient
"RTN","IBNCPDP1",29,0)
 D ALL^IBCNS1(DFN,"IBINS",1,IBADT,1)
"RTN","IBNCPDP1",30,0)
 ;
"RTN","IBNCPDP1",31,0)
 ; -- determine rate type
"RTN","IBNCPDP1",32,0)
 D
"RTN","IBNCPDP1",33,0)
 . I $G(IBD("RTYPE")),$G(IBD("PLAN")) S IBRT=+IBD("RTYPE") D  Q  ;Rate type was selected by the user for secondary or primary claims entered manually
"RTN","IBNCPDP1",34,0)
 . . S IBRT=IBRT_U_$$COSTTYP^IBNCPUT3(+IBD("RTYPE"),IBADT)
"RTN","IBNCPDP1",35,0)
 . S IBRT=$$RT^IBNCPDPU(DFN,.IBINS)
"RTN","IBNCPDP1",36,0)
 ;
"RTN","IBNCPDP1",37,0)
 ; -- Gather claims tracking information if it exists
"RTN","IBNCPDP1",38,0)
 S IBTRKR=$G(^IBE(350.9,1,6))
"RTN","IBNCPDP1",39,0)
 ; date can't be before parameters
"RTN","IBNCPDP1",40,0)
 S $P(IBTRKR,U)=$S('$P(IBTRKR,U,4):0,+IBTRKR&(IBADT<+IBTRKR):0,1:IBADT)
"RTN","IBNCPDP1",41,0)
 ; already in claims tracking
"RTN","IBNCPDP1",42,0)
 S IBTRKRN=+$O(^IBT(356,"ARXFL",IBRXN,IBFIL,0))
"RTN","IBNCPDP1",43,0)
 ;
"RTN","IBNCPDP1",44,0)
 ; -- Check for TRICARE Inpatient - esg 8/5/10 IB*2*434
"RTN","IBNCPDP1",45,0)
 I $P(IBRT,U,3)="T",$$INP(DFN,IBRXN,IBFIL) D  G RXQ
"RTN","IBNCPDP1",46,0)
 . S IBRMARK="TRICARE INPATIENT/DISCHARGE"            ; reason not billable
"RTN","IBNCPDP1",47,0)
 . D CT                                               ; update/add claims tracking entry
"RTN","IBNCPDP1",48,0)
 . S IBRES=0_U_IBRMARK                                ; not ECME billable
"RTN","IBNCPDP1",49,0)
 . Q
"RTN","IBNCPDP1",50,0)
 ;
"RTN","IBNCPDP1",51,0)
 ;for secondary billing - skip claim tracking functionality
"RTN","IBNCPDP1",52,0)
 G:$G(IBD("RXCOB"))>1 SETINSUR
"RTN","IBNCPDP1",53,0)
 ;
"RTN","IBNCPDP1",54,0)
 ; -- claims tracking info
"RTN","IBNCPDP1",55,0)
 I IBTRKRN,$$PAPERBIL^IBNCPNB(IBTRKRN) S IBRES="0^Existing IB Bill in CT",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",56,0)
 ; already billed as Tricare
"RTN","IBNCPDP1",57,0)
 I $D(^IBA(351.5,"B",IBRXN_";"_IBFIL)) S IBRES="0^Already billed under prior Tricare process",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",58,0)
 ;
"RTN","IBNCPDP1",59,0)
 ; -- no pharmacy coverage, update ct if applicable, quit
"RTN","IBNCPDP1",60,0)
 I '$$PTCOV^IBCNSU3(DFN,IBADT,"PHARMACY",.IBANY) S IBRMARK=$S($G(IBANY):"SERVICE NOT COVERED",1:"NOT INSURED") D:$P(IBTRKR,U,4)=2 CT S IBRES="0^"_IBRMARK,IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",61,0)
 ;
"RTN","IBNCPDP1",62,0)
 ;  -- check for DEA SPECIAL HDLG
"RTN","IBNCPDP1",63,0)
 S IBDEA=$$DEA^IBNCPDP($G(IBD("DEA")),.IBRMARK) I 'IBDEA S IBRES=IBDEA D CT G RXQ
"RTN","IBNCPDP1",64,0)
 ;
"RTN","IBNCPDP1",65,0)
 ;retrieve indicators from file #52 and overwrite the indicators in IBD array
"RTN","IBNCPDP1",66,0)
 D GETINDIC^IBNCPUT2(+IBD("IEN"),.IBD)
"RTN","IBNCPDP1",67,0)
 ; -- process patient exemptions if any (if not already resolved)
"RTN","IBNCPDP1",68,0)
 I $G(IBD("SC/EI OVR"))'=1 D CL^SDCO21(DFN,IBADT,"",.IBARR)
"RTN","IBNCPDP1",69,0)
 ; check out exemptions
"RTN","IBNCPDP1",70,0)
 S IBNEEDS=0 ;flag will be set to 1 if at least one of the questions wasn't answered
"RTN","IBNCPDP1",71,0)
 I $G(IBD("SC/EI OVR"))'=1 I $D(IBARR)>9 F IBX=2:1 S IBT=$P($T(EXEMPT+IBX),";;",2) Q:IBT=""  D:$D(IBARR(+IBT))
"RTN","IBNCPDP1",72,0)
 . I $G(IBD($P(IBT,U,2)))=0 Q
"RTN","IBNCPDP1",73,0)
 . I $G(IBD($P(IBT,U,2))) S IBRMARK=$P(IBT,U,3) Q
"RTN","IBNCPDP1",74,0)
 . I '$G(IBSCRES(IBRXN,IBFIL)) S IBNEEDS=1 D
"RTN","IBNCPDP1",75,0)
 . . S IBD("SC/EI NO ANSW")=$S($G(IBD("SC/EI NO ANSW"))="":$P(IBT,U,2),1:$G(IBD("SC/EI NO ANSW"))_","_$P(IBT,U,2))
"RTN","IBNCPDP1",76,0)
 I '$D(IBRMARK),IBNEEDS=1 S IBRMARK="NEEDS SC DETERMINATION"
"RTN","IBNCPDP1",77,0)
 I $D(IBRMARK) D CT S IBRES="0^"_IBRMARK G RXQ
"RTN","IBNCPDP1",78,0)
 ; Clean-up the NEEDS SC DETERMINATION record if resolved
"RTN","IBNCPDP1",79,0)
 ; And check if it is non-billable in CT
"RTN","IBNCPDP1",80,0)
 I IBTRKRN D
"RTN","IBNCPDP1",81,0)
 . N IBNBR,IBNBRT
"RTN","IBNCPDP1",82,0)
 . S IBNBR=$P($G(^IBT(356,+IBTRKRN,0)),U,19) Q:'IBNBR
"RTN","IBNCPDP1",83,0)
 . S IBNBRT=$P($G(^IBE(356.8,IBNBR,0)),U) Q:IBNBRT=""
"RTN","IBNCPDP1",84,0)
 . ; if refill was deleted (not RX) and now the refill is re-entered
"RTN","IBNCPDP1",85,0)
 . ;use $$RXSTATUS^IBNCPRR instead of $G(^PSRX(IBRXN,"STA"))
"RTN","IBNCPDP1",86,0)
 . I IBNBRT="PRESCRIPTION DELETED",$$RXSTATUS^IBNCPRR(DFN,IBRXN)'=13 D  Q
"RTN","IBNCPDP1",87,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",88,0)
 . . ; clean up REASON NOT BILLABLE and ADDITIONAL COMMENT
"RTN","IBNCPDP1",89,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@;1.08////@" D ^DIE
"RTN","IBNCPDP1",90,0)
 . ; Clean up NBR if released
"RTN","IBNCPDP1",91,0)
 . I IBNBRT="PRESCRIPTION NOT RELEASED" D:$G(IBD("RELEASE DATE"))  Q
"RTN","IBNCPDP1",92,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",93,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",94,0)
 . ; Clean up 'Needs SC determ'
"RTN","IBNCPDP1",95,0)
 . I IBNBRT="NEEDS SC DETERMINATION" D  Q
"RTN","IBNCPDP1",96,0)
 . . N DIE,DA,DR
"RTN","IBNCPDP1",97,0)
 . . S DIE="^IBT(356,",DA=+IBTRKRN,DR=".19////@" D ^DIE
"RTN","IBNCPDP1",98,0)
 . S IBRMARK=IBNBRT
"RTN","IBNCPDP1",99,0)
 I $D(IBRMARK) S IBRES="0^Non-Billable in CT: "_IBRMARK G RXQ
"RTN","IBNCPDP1",100,0)
 ;
"RTN","IBNCPDP1",101,0)
SETINSUR ; -- setup insurance data for patient
"RTN","IBNCPDP1",102,0)
 ; Note: if more than one insurance with the same COB then the latest insurance occurance overrides the first one(s)
"RTN","IBNCPDP1",103,0)
 ; Exmp:
"RTN","IBNCPDP1",104,0)
 ; IBINS("S",1,1)=""
"RTN","IBNCPDP1",105,0)
 ; IBINS("S",1,3)="" <<--- this will be primary
"RTN","IBNCPDP1",106,0)
 ;
"RTN","IBNCPDP1",107,0)
 K IBERMSG    ; Error message
"RTN","IBNCPDP1",108,0)
 K IBRXPOL    ; Array of Rx policies found
"RTN","IBNCPDP1",109,0)
 S IBX=0 F  S IBX=$O(IBINS("S",IBX)) Q:'IBX  D
"RTN","IBNCPDP1",110,0)
 . S IBT=0 F  S IBT=$O(IBINS("S",IBX,IBT)) Q:'IBT  D
"RTN","IBNCPDP1",111,0)
 .. N IBDAT,IBPL,IBINSN,IBPIEN,IBY,IBZ
"RTN","IBNCPDP1",112,0)
 .. S IBZ=$G(IBINS(IBT,0)) Q:IBZ=""
"RTN","IBNCPDP1",113,0)
 .. S IBPL=$P(IBZ,U,18) ; plan
"RTN","IBNCPDP1",114,0)
 .. Q:'IBPL
"RTN","IBNCPDP1",115,0)
 .. Q:'$$PLCOV^IBCNSU3(IBPL,IBADT,3)  ; not a pharmacy plan
"RTN","IBNCPDP1",116,0)
 .. ;
"RTN","IBNCPDP1",117,0)
 .. I $G(IBD("PLAN")) Q:IBPL'=$G(IBD("PLAN"))  ;skip other plans if we call RX API for a specific plan (IBD("PLAN"))
"RTN","IBNCPDP1",118,0)
 .. ;
"RTN","IBNCPDP1",119,0)
 .. I '$G(IBD("PLAN")) I '$D(IBD("INS")),$P(IBRT,"^",3)="V",($P($G(^IBE(355.1,+$P($G(^IBA(355.3,+IBPL,0)),"^",9),0)),"^")["TRICARE"!($P($G(^(0)),"^")="CHAMPVA")) K IBINS Q  ;Tricare/ChampVa coverage for a Vet
"RTN","IBNCPDP1",120,0)
 .. ;
"RTN","IBNCPDP1",121,0)
 .. ; at this point we have found an Rx policy.  We'll count these up later by IBX.
"RTN","IBNCPDP1",122,0)
 .. S IBRXPOL(IBX,IBT)=""
"RTN","IBNCPDP1",123,0)
 .. ;
"RTN","IBNCPDP1",124,0)
 .. S IBINSN=$P($G(^DIC(36,+$G(^IBA(355.3,+IBPL,0)),0)),U) ; ins name
"RTN","IBNCPDP1",125,0)
 .. S IBPIEN=+$G(^IBA(355.3,+IBPL,6))
"RTN","IBNCPDP1",126,0)
 .. I 'IBPIEN S IBERMSG(IBX)="Plan not linked to the Payer" Q  ; Not linked
"RTN","IBNCPDP1",127,0)
 .. D STCHK^IBCNRU1(IBPIEN,.IBY)
"RTN","IBNCPDP1",128,0)
 .. I $E($G(IBY(1)))'="A" S IBERMSG(IBX)=$$ERMSG^IBNCPNB($P($G(IBY(6)),",")) Q  ; not active
"RTN","IBNCPDP1",129,0)
 .. ;
"RTN","IBNCPDP1",130,0)
 .. ; at this point we have a valid policy for this IBX
"RTN","IBNCPDP1",131,0)
 .. S IBERMSG(IBX)=""          ; no error message
"RTN","IBNCPDP1",132,0)
 .. S IBDAT=IBPL ; Plan IEN
"RTN","IBNCPDP1",133,0)
 .. S $P(IBDAT,U,2)=$G(IBY(2)) ; BIN
"RTN","IBNCPDP1",134,0)
 .. S $P(IBDAT,U,3)=$G(IBY(3)) ; PCN
"RTN","IBNCPDP1",135,0)
 .. S $P(IBDAT,U,4)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",1),0)),U) ; Payer Sheet B1
"RTN","IBNCPDP1",136,0)
 .. S $P(IBDAT,U,5)=$P($G(IBINS(IBT,355.3)),U,4) ; Group ID
"RTN","IBNCPDP1",137,0)
 .. S $P(IBDAT,U,6)=$P(IBZ,U,2) ; Cardholder ID
"RTN","IBNCPDP1",138,0)
 .. S $P(IBDAT,U,7)=$P(IBZ,U,16) ; Patient Relationship Code
"RTN","IBNCPDP1",139,0)
 .. S $P(IBDAT,U,8)=$P($P($P(IBZ,U,17),",",2)," ") ; Cardholder First Name
"RTN","IBNCPDP1",140,0)
 .. S $P(IBDAT,U,9)=$P($P(IBZ,U,17),",") ; Cardholder Last Name
"RTN","IBNCPDP1",141,0)
 .. S $P(IBDAT,U,10)=$P($G(^DIC(36,+IBZ,.11)),U,5) ; State
"RTN","IBNCPDP1",142,0)
 .. S $P(IBDAT,U,11)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",2),0)),U) ; Payer Sheet B2
"RTN","IBNCPDP1",143,0)
 .. S $P(IBDAT,U,12)=$P($G(^BPSF(9002313.92,+$P($G(IBY(5)),",",3),0)),U) ; Payer Sheet B3
"RTN","IBNCPDP1",144,0)
 .. S $P(IBDAT,U,13)=$G(IBY(4)) ; Software/Vendor Cert ID
"RTN","IBNCPDP1",145,0)
 .. S $P(IBDAT,U,14)=IBINSN ; Ins Name
"RTN","IBNCPDP1",146,0)
 .. S IBD("INS",IBX,1)=IBDAT
"RTN","IBNCPDP1",147,0)
 .. ;
"RTN","IBNCPDP1",148,0)
 .. S IBDAT=$P($G(IBINS(IBT,355.3)),"^",3) ;group name
"RTN","IBNCPDP1",149,0)
 .. S $P(IBDAT,U,2)=$$PHONE^IBNCPDP6(+IBZ) ;ins co ph 3
"RTN","IBNCPDP1",150,0)
 .. S $P(IBDAT,U,3)=$$GET1^DIQ(366.03,IBPIEN_",",.01) ;plan ID
"RTN","IBNCPDP1",151,0)
 .. S $P(IBDAT,U,4)=$S($P($G(^IBE(355.1,+$P($G(IBINS(IBT,355.3)),"^",9),0)),"^")="TRICARE":"T",1:"V") ; plan type
"RTN","IBNCPDP1",152,0)
 .. S $P(IBDAT,U,5)=+$G(^IBA(355.3,+IBPL,0)) ; insurance co ien
"RTN","IBNCPDP1",153,0)
 .. S $P(IBDAT,U,6)=$P(IBZ,U,20) ;(#.2) COB field of the (#.3121) insurance Type multiple of the Patient file (#2)
"RTN","IBNCPDP1",154,0)
 .. S IBD("INS",IBX,3)=IBDAT
"RTN","IBNCPDP1",155,0)
 .. Q
"RTN","IBNCPDP1",156,0)
 . Q
"RTN","IBNCPDP1",157,0)
 ;
"RTN","IBNCPDP1",158,0)
 ; Count the number of pharmacy insurance policies by IBX found up above
"RTN","IBNCPDP1",159,0)
 S IBX=0 F IBCNT=0:1 S IBX=$O(IBRXPOL(IBX)) Q:'IBX
"RTN","IBNCPDP1",160,0)
 ;
"RTN","IBNCPDP1",161,0)
 ; Determine the value of the IBX variable here.  This is basically the COB sequence# to be used.
"RTN","IBNCPDP1",162,0)
 ; If there is only 1 pharmacy policy or no pharmacy policies, then set IBX in this manner
"RTN","IBNCPDP1",163,0)
 I IBCNT'>1 D
"RTN","IBNCPDP1",164,0)
 . I $D(IBD("INS")) S IBX=+$O(IBD("INS",0))     ; use the only one in this array
"RTN","IBNCPDP1",165,0)
 . I '$D(IBD("INS")) S IBX=+$O(IBERMSG(0))      ; the only one here (or 0)
"RTN","IBNCPDP1",166,0)
 . Q
"RTN","IBNCPDP1",167,0)
 ;
"RTN","IBNCPDP1",168,0)
 ; If there are multiple pharmacy policies on file, then the COB field in the pt. policy must be used correctly
"RTN","IBNCPDP1",169,0)
 ;   and primary insurance must be at #1
"RTN","IBNCPDP1",170,0)
 I IBCNT>1 S IBX=1
"RTN","IBNCPDP1",171,0)
 ;
"RTN","IBNCPDP1",172,0)
 ; In all cases, if this variable is set, then use it
"RTN","IBNCPDP1",173,0)
 I $G(IBD("RXCOB"))>1 S IBX=$G(IBD("RXCOB"))
"RTN","IBNCPDP1",174,0)
 ;
"RTN","IBNCPDP1",175,0)
 ; Check insurance at IBX
"RTN","IBNCPDP1",176,0)
 I '$D(IBD("INS",IBX)),$G(IBERMSG(IBX))'="" S IBRES="0^Not ECME billable: "_IBERMSG(IBX),IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",177,0)
 I '$D(IBD("INS",IBX)) S IBRES="0^No Insurance ECME billable",IBD("NO ECME INSURANCE")=1 G RXQ
"RTN","IBNCPDP1",178,0)
 ;
"RTN","IBNCPDP1",179,0)
 ;for secondary billing - skip ROI functionality
"RTN","IBNCPDP1",180,0)
 G:$G(IBD("RXCOB"))>1 RATEPRIC
"RTN","IBNCPDP1",181,0)
 ; -- check drug for sensitive dx special handling code and ROI on file
"RTN","IBNCPDP1",182,0)
 I IBD("DEA")["U",$D(IBD("INS",1,3)) D  G:$D(IBRMARK) RXQ
"RTN","IBNCPDP1",183,0)
 . I '$$ROI^IBNCPDR4(DFN,$G(IBD("DRUG")),+$P($G(IBD("INS",1,3)),U,5),$G(IBD("FILL DATE"))) D  Q
"RTN","IBNCPDP1",184,0)
 .. S IBRMARK="REFUSES TO SIGN RELEASE (ROI)"
"RTN","IBNCPDP1",185,0)
 .. D CT
"RTN","IBNCPDP1",186,0)
 .. S IBRES="0^NOT BILLABLE, NO ROI - NO ACTIVE ROI ON FILE"
"RTN","IBNCPDP1",187,0)
 . D ROICLN^IBNCPDR4(IBTRKRN,IBRXN,IBFIL) K:$G(IBRMARK)="REFUSES TO SIGN RELEASE (ROI)" IBRMARK
"RTN","IBNCPDP1",188,0)
 ;
"RTN","IBNCPDP1",189,0)
RATEPRIC ;
"RTN","IBNCPDP1",190,0)
 ; determine rates/prices to use
"RTN","IBNCPDP1",191,0)
 I 'IBRT D CT S IBRES="0^Cannot determine Rate type" G RXQ
"RTN","IBNCPDP1",192,0)
 S IBBI=$$EVNTITM^IBCRU3(+IBRT,3,"PRESCRIPTION FILL",IBADT,.IBRS)
"RTN","IBNCPDP1",193,0)
 I 'IBBI,$P(IBBI,";")'="VA COST" D CT S IBRES="0^Cannot find Billable Item" G RXQ
"RTN","IBNCPDP1",194,0)
 ;1;BEDSECTION;1^
"RTN","IBNCPDP1",195,0)
 ;IBRS(1,18,5)=
"RTN","IBNCPDP1",196,0)
 S IBRS=+$O(IBRS($P(IBBI,";"),0))
"RTN","IBNCPDP1",197,0)
 S IBIT=$$ITPTR^IBCRU2($P(IBBI,";"),$S($P(IBRT,U,2)="A":$$NDC^IBNCPNB($G(IBD("NDC"))),1:"PRESCRIPTION"))
"RTN","IBNCPDP1",198,0)
 I 'IBIT,$P(IBRT,U,2)'="C" D CT S IBRES="0^Cannot find Item Pointer" G RXQ
"RTN","IBNCPDP1",199,0)
 ;8
"RTN","IBNCPDP1",200,0)
 S IBPRICE=+$$BICOST^IBCRCI(+IBRT,3,IBADT,"PRESCRIPTION FILL",+IBIT,,,$S($P(IBRT,U,2)="A":IBD("QTY"),1:1))
"RTN","IBNCPDP1",201,0)
 ;36^2991001
"RTN","IBNCPDP1",202,0)
 ;
"RTN","IBNCPDP1",203,0)
 ; get fees if any, ignore return, don't care about price, just need fees
"RTN","IBNCPDP1",204,0)
 S IBCHG=$$RATECHG^IBCRCC(+IBRS,$S($P(IBRT,U,2)'="C":1,1:IBD("QTY")*IBD("COST")),IBADT,.IBFEE)
"RTN","IBNCPDP1",205,0)
 I $P(IBRT,U,2)="C" S IBPRICE=+IBCHG
"RTN","IBNCPDP1",206,0)
 ;
"RTN","IBNCPDP1",207,0)
 I 'IBPRICE D CT S IBRES="0^Cannot find price for Item" G RXQ
"RTN","IBNCPDP1",208,0)
 ;
"RTN","IBNCPDP1",209,0)
 S IBPRICE=(+$G(IBFEE))_U_$S($P(IBRT,U,2)="A":"01",$P(IBRT,U,2)="C":"05",1:"07")_U_$S($P(IBRT,U,2)="C":IBD("QTY")*IBD("COST")+$G(IBFEE),$P(IBRT,U,2)="A":IBPRICE-$G(IBFEE)-$P($G(IBFEE),U,2),1:IBPRICE)_U_IBPRICE_U_(+$P($G(IBFEE),U,2))
"RTN","IBNCPDP1",210,0)
 S IBX=0 F  S IBX=$O(IBD("INS",IBX)) Q:IBX<1  S IBD("INS",IBX,2)=IBPRICE
"RTN","IBNCPDP1",211,0)
 ;
"RTN","IBNCPDP1",212,0)
 ;Check for non-covered drugs
"RTN","IBNCPDP1",213,0)
 S IBRES=$$CHCK^IBNCDNC(.IBD) I IBRES]"" S IBRMARK=$P(IBRES,U,2) D CT G RXQ
"RTN","IBNCPDP1",214,0)
 ;
"RTN","IBNCPDP1",215,0)
 S IBRES=$S($D(IBRMARK):"0^"_IBRMARK,1:1)
"RTN","IBNCPDP1",216,0)
 I IBRES,'$G(IBD("RELEASE DATE")) S IBRMARK="PRESCRIPTION NOT RELEASED"
"RTN","IBNCPDP1",217,0)
 ;
"RTN","IBNCPDP1",218,0)
 D CT
"RTN","IBNCPDP1",219,0)
 ;
"RTN","IBNCPDP1",220,0)
RXQ S $P(IBRES,"^",3)=$S($L($P($G(IBRT),"^",3)):$P(IBRT,"^",3),1:"V")
"RTN","IBNCPDP1",221,0)
 I IBRES D START^IBNCPDP6(IBRXN_";"_IBFIL,$P(IBRES,"^",3),+IBRT)
"RTN","IBNCPDP1",222,0)
 D LOG^IBNCPDP2("BILLABLE STATUS CHECK",IBRES)
"RTN","IBNCPDP1",223,0)
 Q IBRES
"RTN","IBNCPDP1",224,0)
 ;
"RTN","IBNCPDP1",225,0)
 ;
"RTN","IBNCPDP1",226,0)
CT ; files in claims tracking
"RTN","IBNCPDP1",227,0)
 Q:$G(IBD("RXCOB"))>1  ;Claim Tracking is updated only for the primary payer (payer sequence =1)
"RTN","IBNCPDP1",228,0)
 ;If null then the payer sequence = Primary is assumed
"RTN","IBNCPDP1",229,0)
 I IBTRKR D CT^IBNCPDPU(DFN,IBRXN,IBFIL,IBADT,$G(IBRMARK))
"RTN","IBNCPDP1",230,0)
 Q
"RTN","IBNCPDP1",231,0)
 ;
"RTN","IBNCPDP1",232,0)
INP(DFN,IBRXN,IBFIL) ; Is this an inpatient, NON-BILLABLE Rx as of the Issue Date?    esg 8/5/10 - IB*2*434
"RTN","IBNCPDP1",233,0)
 N INP,VAHOW,VAROOT,IBRXINP,VAIP,IBRXISUE,IBMW
"RTN","IBNCPDP1",234,0)
 S INP=0
"RTN","IBNCPDP1",235,0)
 ;
"RTN","IBNCPDP1",236,0)
 S VAROOT="IBRXINP"
"RTN","IBNCPDP1",237,0)
 S IBRXISUE=$$FILE^IBRXUTL(IBRXN,1)\1   ; Rx Issue Date (Field# 1)
"RTN","IBNCPDP1",238,0)
 I 'IBRXISUE S IBRXISUE=DT
"RTN","IBNCPDP1",239,0)
 S VAIP("D")=IBRXISUE        ; if pt was an inpatient at any time during this day
"RTN","IBNCPDP1",240,0)
 D IN5^VADPT                 ; DBIA 10061 - inpatient episode API
"RTN","IBNCPDP1",241,0)
 I '$G(IBRXINP(1)) G INPX    ; not an inpatient on this day
"RTN","IBNCPDP1",242,0)
 ;
"RTN","IBNCPDP1",243,0)
 ; check Rx issue date = discharge date. This is billable so get out (esg 9/13/10)
"RTN","IBNCPDP1",244,0)
 I IBRXISUE=(+$G(IBRXINP(17,1))\1) G INPX
"RTN","IBNCPDP1",245,0)
 ;
"RTN","IBNCPDP1",246,0)
 ; if Rx/fill is MAIL, then this is billable so get out (esg 9/13/10)
"RTN","IBNCPDP1",247,0)
 I IBFIL S IBMW=$$SUBFILE^IBRXUTL(IBRXN,IBFIL,52,2)    ; 52.1,2 MAIL/WINDOW field
"RTN","IBNCPDP1",248,0)
 I 'IBFIL S IBMW=$$FILE^IBRXUTL(IBRXN,11)              ; 52,11 MAIL/WINDOW field
"RTN","IBNCPDP1",249,0)
 I IBMW="M" G INPX
"RTN","IBNCPDP1",250,0)
 ;
"RTN","IBNCPDP1",251,0)
 ; inpatient and non-billable
"RTN","IBNCPDP1",252,0)
 S INP=1
"RTN","IBNCPDP1",253,0)
INPX ;
"RTN","IBNCPDP1",254,0)
 Q INP
"RTN","IBNCPDP1",255,0)
 ;
"RTN","IBNCPDP1",256,0)
EXEMPT ; exemption reasons
"RTN","IBNCPDP1",257,0)
 ; variable from SD call ^ variable from PSO ^ reason not billable
"RTN","IBNCPDP1",258,0)
 ;;1^AO^AGENT ORANGE
"RTN","IBNCPDP1",259,0)
 ;;2^IR^IONIZING RADIATION
"RTN","IBNCPDP1",260,0)
 ;;3^SC^SC TREATMENT
"RTN","IBNCPDP1",261,0)
 ;;4^SWA^SOUTHWEST ASIA
"RTN","IBNCPDP1",262,0)
 ;;5^MST^MILITARY SEXUAL TRAUMA
"RTN","IBNCPDP1",263,0)
 ;;6^HNC^HEAD/NECK CANCER
"RTN","IBNCPDP1",264,0)
 ;;7^CV^COMBAT VETERAN
"RTN","IBNCPDP1",265,0)
 ;;8^SHAD^PROJECT 112/SHAD
"RTN","IBNCPDP1",266,0)
 ;;
"RTN","IBNCPDP1",267,0)
 ;
"RTN","IBY434PO")
0^^B2302496
"RTN","IBY434PO",1,0)
IBY434PO ;ALB/ESG - Post Install for IB patch 434 ;5-Aug-2010
"RTN","IBY434PO",2,0)
 ;;2.0;INTEGRATED BILLING;**434**;21-MAR-94;Build 16
"RTN","IBY434PO",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBY434PO",4,0)
 ;
"RTN","IBY434PO",5,0)
 ; ePharmacy TRICARE Active Duty - patch 434 post installation routine
"RTN","IBY434PO",6,0)
 ;
"RTN","IBY434PO",7,0)
EN ; entry point
"RTN","IBY434PO",8,0)
 N XPDIDTOT
"RTN","IBY434PO",9,0)
 S XPDIDTOT=1
"RTN","IBY434PO",10,0)
 D CT(1)              ; 1. add a new Claims Tracking Reason Not Billable
"RTN","IBY434PO",11,0)
 ;
"RTN","IBY434PO",12,0)
EX ; exit point
"RTN","IBY434PO",13,0)
 Q
"RTN","IBY434PO",14,0)
 ;
"RTN","IBY434PO",15,0)
CT(IBXPD) ; add a new CT RNB
"RTN","IBY434PO",16,0)
 N DA,DIC,DO,X,Y
"RTN","IBY434PO",17,0)
 D BMES^XPDUTL(" STEP "_IBXPD_" of "_XPDIDTOT)
"RTN","IBY434PO",18,0)
 D MES^XPDUTL("-------------")
"RTN","IBY434PO",19,0)
 D MES^XPDUTL("Add a new Claims Tracking RNB ... ")
"RTN","IBY434PO",20,0)
 ;
"RTN","IBY434PO",21,0)
 F X="TRICARE INPATIENT/DISCHARGE" D
"RTN","IBY434PO",22,0)
 . I $D(^IBE(356.8,"B",X)) D MES^XPDUTL("Already there...no action") Q
"RTN","IBY434PO",23,0)
 . S DIC="^IBE(356.8,",DIC(0)="F"
"RTN","IBY434PO",24,0)
 . S DIC("DR")=".04///RX16"
"RTN","IBY434PO",25,0)
 . D FILE^DICN
"RTN","IBY434PO",26,0)
 . I Y=-1 D MES^XPDUTL("ERROR when adding a new RNB to CT.  Please log a Remedy ticket!") Q
"RTN","IBY434PO",27,0)
 . D MES^XPDUTL("Entry added successfully")
"RTN","IBY434PO",28,0)
 . Q
"RTN","IBY434PO",29,0)
 ;
"RTN","IBY434PO",30,0)
CTX ;
"RTN","IBY434PO",31,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY434PO",32,0)
 D UPDATE^XPDID(IBXPD)
"RTN","IBY434PO",33,0)
 Q
"RTN","IBY434PO",34,0)
 ;
"UP",366.14,366.141,-1)
366.14^1
"UP",366.14,366.141,0)
366.141
"VER")
8.0^22.0
"^DD",366.14,366.141,7.01,0)
RX COB^S^0:UNKNOWN;1:PRIMARY;2:SECONDARY;^7;1^Q
"^DD",366.14,366.141,7.01,3)
Select COB indicator for the claim.
"^DD",366.14,366.141,7.01,21,0)
^^2^2^3100830^
"^DD",366.14,366.141,7.01,21,1,0)
The Coordination Of Benefits (COB) indicator designates 
"^DD",366.14,366.141,7.01,21,2,0)
the payer sequence for the claim.
"^DD",366.14,366.141,7.01,"DT")
3100830
"^DD",366.14,366.141,7.04,0)
RATE TYPE SELECTED BY USER^P399.3'^DGCR(399.3,^7;4^Q
"^DD",366.14,366.141,7.04,3)
Select the appropriate Rate Type.
"^DD",366.14,366.141,7.04,21,0)
^^4^4^3100830^
"^DD",366.14,366.141,7.04,21,1,0)
This is the Rate Type selected by the user for ECME Pharmacy
"^DD",366.14,366.141,7.04,21,2,0)
billing purposes.  Users may select the rate type in the option
"^DD",366.14,366.141,7.04,21,3,0)
"Process Secondary/TRICARE Rx to ECME" [BPS COB PROCESS SECOND
"^DD",366.14,366.141,7.04,21,4,0)
TRICARE].
"^DD",366.14,366.141,7.04,"DT")
3100830
**END**
**END**
