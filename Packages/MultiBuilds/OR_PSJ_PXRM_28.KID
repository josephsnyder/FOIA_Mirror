KIDS Distribution saved on Jan 24, 2011@12:11:32
CPRS28 AND REQUIRED PATCHES   RELEASED
**KIDS**:OR PSJ PXRM 280 1.0^OR*3.0*280^PSJ*5.0*226^PXRM*2.0*16^

**INSTALL NAME**
OR PSJ PXRM 280 1.0
"BLD",7631,0)
OR PSJ PXRM 280 1.0^^1^3110124^y
"BLD",7631,6.3)
39
"BLD",7631,10,0)
^9.63^3^3
"BLD",7631,10,1,0)
OR*3.0*280^1
"BLD",7631,10,2,0)
PSJ*5.0*226^1
"BLD",7631,10,3,0)
PXRM*2.0*16^1
"BLD",7631,10,"B","OR*3.0*280",1)

"BLD",7631,10,"B","PSJ*5.0*226",2)

"BLD",7631,10,"B","PXRM*2.0*16",3)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
OR*3.0*280
"BLD",7051,0)
OR*3.0*280^ORDER ENTRY/RESULTS REPORTING^0^3110124^y
"BLD",7051,1,0)
^^2^2^3100208^^
"BLD",7051,1,1,0)
The description of this patch may be found in the National Patch Module
"BLD",7051,1,2,0)
under OR*3*280.
"BLD",7051,4,0)
^9.64PA^100.05^5
"BLD",7051,4,100,0)
100
"BLD",7051,4,100,222)
y^n^f^^^^n
"BLD",7051,4,100.05,0)
100.05
"BLD",7051,4,100.05,222)
y^y^f^^^^n
"BLD",7051,4,100.5,0)
100.5
"BLD",7051,4,100.5,2,0)
^9.641^100.5^1
"BLD",7051,4,100.5,2,100.5,0)
OE/RR RELEASE EVENTS  (File-top level)
"BLD",7051,4,100.5,2,100.5,1,0)
^9.6411^2^1
"BLD",7051,4,100.5,2,100.5,1,2,0)
TYPE OF EVENT
"BLD",7051,4,100.5,222)
y^n^p^^^^n^^n
"BLD",7051,4,100.5,224)

"BLD",7051,4,101.41,0)
101.41
"BLD",7051,4,101.41,222)
n^n^f^^y^^y^r^n
"BLD",7051,4,101.41,224)
I $$SENDDLG^ORY280($P(^(0),U))
"BLD",7051,4,101.43,0)
101.43
"BLD",7051,4,101.43,222)
y^n^f^^^^n
"BLD",7051,4,"APDD",100.5,100.5)

"BLD",7051,4,"APDD",100.5,100.5,2)

"BLD",7051,4,"B",100,100)

"BLD",7051,4,"B",100.05,100.05)

"BLD",7051,4,"B",100.5,100.5)

"BLD",7051,4,"B",101.41,101.41)

"BLD",7051,4,"B",101.43,101.43)

"BLD",7051,6.3)
85
"BLD",7051,"ABNS",0)
^9.66A^^
"BLD",7051,"ABPKG")
n^n
"BLD",7051,"INI")

"BLD",7051,"INID")
n^n^n
"BLD",7051,"INIT")
POST^ORY280
"BLD",7051,"KRN",0)
^9.67PA^8989.52^19
"BLD",7051,"KRN",.4,0)
.4
"BLD",7051,"KRN",.401,0)
.401
"BLD",7051,"KRN",.402,0)
.402
"BLD",7051,"KRN",.403,0)
.403
"BLD",7051,"KRN",.5,0)
.5
"BLD",7051,"KRN",.84,0)
.84
"BLD",7051,"KRN",.84,"NM",0)
^9.68A^^
"BLD",7051,"KRN",3.6,0)
3.6
"BLD",7051,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",7051,"KRN",3.6,"NM",1,0)
OR PROBLEM NTRT BULLETIN^^0
"BLD",7051,"KRN",3.6,"NM","B","OR PROBLEM NTRT BULLETIN",1)

"BLD",7051,"KRN",3.8,0)
3.8
"BLD",7051,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",7051,"KRN",3.8,"NM",1,0)
OR CACS^^0
"BLD",7051,"KRN",3.8,"NM","B","OR CACS",1)

"BLD",7051,"KRN",9.2,0)
9.2
"BLD",7051,"KRN",9.8,0)
9.8
"BLD",7051,"KRN",9.8,"NM",0)
^9.68A^97^82
"BLD",7051,"KRN",9.8,"NM",5,0)
ORQQPL1^^0^B62165510
"BLD",7051,"KRN",9.8,"NM",6,0)
ORQQPL3^^0^B54712722
"BLD",7051,"KRN",9.8,"NM",8,0)
ORWPCE3^^0^B43187706
"BLD",7051,"KRN",9.8,"NM",9,0)
ORY280^^0^B95955808
"BLD",7051,"KRN",9.8,"NM",11,0)
ORWPCE^^0^B60867098
"BLD",7051,"KRN",9.8,"NM",12,0)
ORWPCE1^^0^B63538675
"BLD",7051,"KRN",9.8,"NM",15,0)
ORUTL^^0^B8567087
"BLD",7051,"KRN",9.8,"NM",19,0)
ORMBLDGM^^0^B5247581
"BLD",7051,"KRN",9.8,"NM",20,0)
ORMGMRC^^0^B44816636
"BLD",7051,"KRN",9.8,"NM",22,0)
ORCDPSIV^^0^B121037905
"BLD",7051,"KRN",9.8,"NM",23,0)
ORCMEDT8^^0^B78288682
"BLD",7051,"KRN",9.8,"NM",24,0)
ORYDLG^^0^B14515305
"BLD",7051,"KRN",9.8,"NM",26,0)
ORB3SPEC^^0^B89326077
"BLD",7051,"KRN",9.8,"NM",27,0)
ORCSAVE1^^0^B34248374
"BLD",7051,"KRN",9.8,"NM",28,0)
ORCSAVE2^^0^B84878914
"BLD",7051,"KRN",9.8,"NM",29,0)
ORWCV^^0^B80219268
"BLD",7051,"KRN",9.8,"NM",30,0)
ORCHECK^^0^B109684735
"BLD",7051,"KRN",9.8,"NM",31,0)
ORTSKLPS^^0^B6566762
"BLD",7051,"KRN",9.8,"NM",32,0)
ORWIB^^0^B5804851
"BLD",7051,"KRN",9.8,"NM",33,0)
ORWPS^^0^B65159605
"BLD",7051,"KRN",9.8,"NM",34,0)
ORWLRR^^0^B12620243
"BLD",7051,"KRN",9.8,"NM",35,0)
ORWGAPI3^^0^B30897218
"BLD",7051,"KRN",9.8,"NM",36,0)
ORWLRRG^^0^B24435305
"BLD",7051,"KRN",9.8,"NM",37,0)
ORWLRRG1^^0^B42759995
"BLD",7051,"KRN",9.8,"NM",38,0)
ORWGAPIU^^0^B23850893
"BLD",7051,"KRN",9.8,"NM",39,0)
ORKCHK6^^0^B31072886
"BLD",7051,"KRN",9.8,"NM",40,0)
ORWTPR^^0^B16455738
"BLD",7051,"KRN",9.8,"NM",41,0)
ORWGAPIR^^0^B41610059
"BLD",7051,"KRN",9.8,"NM",43,0)
ORWOR^^0^B42631980
"BLD",7051,"KRN",9.8,"NM",44,0)
ORWORR^^0^B67327939
"BLD",7051,"KRN",9.8,"NM",45,0)
ORQQCN2^^0^B33486661
"BLD",7051,"KRN",9.8,"NM",46,0)
ORWD^^0^B39271044
"BLD",7051,"KRN",9.8,"NM",47,0)
ORWDPS3^^0^B20975704
"BLD",7051,"KRN",9.8,"NM",48,0)
ORWDPS33^^0^B40244944
"BLD",7051,"KRN",9.8,"NM",49,0)
ORWDX^^0^B66882759
"BLD",7051,"KRN",9.8,"NM",50,0)
ORWDXA^^0^B82710229
"BLD",7051,"KRN",9.8,"NM",51,0)
ORWDXM1^^0^B71014486
"BLD",7051,"KRN",9.8,"NM",52,0)
ORWDXM2^^0^B76107854
"BLD",7051,"KRN",9.8,"NM",53,0)
ORWDXM3^^0^B104533418
"BLD",7051,"KRN",9.8,"NM",54,0)
ORCXPND1^^0^B72214647
"BLD",7051,"KRN",9.8,"NM",55,0)
ORCXPND3^^0^B43846714
"BLD",7051,"KRN",9.8,"NM",56,0)
OREVNTX1^^0^B75868849
"BLD",7051,"KRN",9.8,"NM",57,0)
ORMBLDP1^^0^B5382020
"BLD",7051,"KRN",9.8,"NM",58,0)
ORMBLDPS^^0^B86048776
"BLD",7051,"KRN",9.8,"NM",59,0)
ORMPS1^^0^B70284401
"BLD",7051,"KRN",9.8,"NM",60,0)
ORMPS2^^0^B47758235
"BLD",7051,"KRN",9.8,"NM",61,0)
ORWOD^^0^B75747824
"BLD",7051,"KRN",9.8,"NM",62,0)
ORWOD1^^0^B41715088
"BLD",7051,"KRN",9.8,"NM",63,0)
ORWDXC^^0^B52838872
"BLD",7051,"KRN",9.8,"NM",64,0)
ORCSAVE^^0^B92624396
"BLD",7051,"KRN",9.8,"NM",65,0)
ORKCHK^^0^B42414888
"BLD",7051,"KRN",9.8,"NM",66,0)
ORKCHK5^^0^B45867526
"BLD",7051,"KRN",9.8,"NM",67,0)
ORDSGCHK^^0^B89700507
"BLD",7051,"KRN",9.8,"NM",69,0)
ORQ2^^0^B52016905
"BLD",7051,"KRN",9.8,"NM",70,0)
ORWPT1^^0^B15675921
"BLD",7051,"KRN",9.8,"NM",71,0)
ORWRP^^0^B77042419
"BLD",7051,"KRN",9.8,"NM",72,0)
ORMFN^^0^B37182976
"BLD",7051,"KRN",9.8,"NM",73,0)
ORCNOTE^^0^B59596403
"BLD",7051,"KRN",9.8,"NM",74,0)
ORY28001^^0^B71483826
"BLD",7051,"KRN",9.8,"NM",75,0)
ORY2800^^0^B15643771
"BLD",7051,"KRN",9.8,"NM",76,0)
ORY28002^^0^B78087672
"BLD",7051,"KRN",9.8,"NM",77,0)
ORY28003^^0^B89106334
"BLD",7051,"KRN",9.8,"NM",78,0)
ORY28004^^0^B57739965
"BLD",7051,"KRN",9.8,"NM",79,0)
ORY28005^^0^B65374324
"BLD",7051,"KRN",9.8,"NM",80,0)
ORY28006^^0^B62557827
"BLD",7051,"KRN",9.8,"NM",81,0)
ORY28007^^0^B55829468
"BLD",7051,"KRN",9.8,"NM",82,0)
ORY280ES^^0^B12630040
"BLD",7051,"KRN",9.8,"NM",83,0)
ORY2801^^0^B40551743
"BLD",7051,"KRN",9.8,"NM",84,0)
ORY2802^^0^B26766910
"BLD",7051,"KRN",9.8,"NM",85,0)
ORY2803^^0^B12996879
"BLD",7051,"KRN",9.8,"NM",86,0)
ORY2804^^0^B13526807
"BLD",7051,"KRN",9.8,"NM",87,0)
ORWDX2^^0^B17614403
"BLD",7051,"KRN",9.8,"NM",88,0)
ORWDXM4^^0^B37881489
"BLD",7051,"KRN",9.8,"NM",89,0)
ORCSEND3^^0^B25737895
"BLD",7051,"KRN",9.8,"NM",90,0)
ORWDXVB3^^0^B1399631
"BLD",7051,"KRN",9.8,"NM",91,0)
ORY280P^^0^B3900420
"BLD",7051,"KRN",9.8,"NM",92,0)
ORWDRA32^^0^B21891696
"BLD",7051,"KRN",9.8,"NM",93,0)
ORWPT^^0^B60483737
"BLD",7051,"KRN",9.8,"NM",94,0)
ORWDXR01^^0^B20020938
"BLD",7051,"KRN",9.8,"NM",95,0)
ORORDDSC^^0^B13143468
"BLD",7051,"KRN",9.8,"NM",96,0)
OREVNTX^^0^B77019944
"BLD",7051,"KRN",9.8,"NM",97,0)
ORCDPS1^^0^B78578103
"BLD",7051,"KRN",9.8,"NM","B","ORB3SPEC",26)

"BLD",7051,"KRN",9.8,"NM","B","ORCDPS1",97)

"BLD",7051,"KRN",9.8,"NM","B","ORCDPSIV",22)

"BLD",7051,"KRN",9.8,"NM","B","ORCHECK",30)

"BLD",7051,"KRN",9.8,"NM","B","ORCMEDT8",23)

"BLD",7051,"KRN",9.8,"NM","B","ORCNOTE",73)

"BLD",7051,"KRN",9.8,"NM","B","ORCSAVE",64)

"BLD",7051,"KRN",9.8,"NM","B","ORCSAVE1",27)

"BLD",7051,"KRN",9.8,"NM","B","ORCSAVE2",28)

"BLD",7051,"KRN",9.8,"NM","B","ORCSEND3",89)

"BLD",7051,"KRN",9.8,"NM","B","ORCXPND1",54)

"BLD",7051,"KRN",9.8,"NM","B","ORCXPND3",55)

"BLD",7051,"KRN",9.8,"NM","B","ORDSGCHK",67)

"BLD",7051,"KRN",9.8,"NM","B","OREVNTX",96)

"BLD",7051,"KRN",9.8,"NM","B","OREVNTX1",56)

"BLD",7051,"KRN",9.8,"NM","B","ORKCHK",65)

"BLD",7051,"KRN",9.8,"NM","B","ORKCHK5",66)

"BLD",7051,"KRN",9.8,"NM","B","ORKCHK6",39)

"BLD",7051,"KRN",9.8,"NM","B","ORMBLDGM",19)

"BLD",7051,"KRN",9.8,"NM","B","ORMBLDP1",57)

"BLD",7051,"KRN",9.8,"NM","B","ORMBLDPS",58)

"BLD",7051,"KRN",9.8,"NM","B","ORMFN",72)

"BLD",7051,"KRN",9.8,"NM","B","ORMGMRC",20)

"BLD",7051,"KRN",9.8,"NM","B","ORMPS1",59)

"BLD",7051,"KRN",9.8,"NM","B","ORMPS2",60)

"BLD",7051,"KRN",9.8,"NM","B","ORORDDSC",95)

"BLD",7051,"KRN",9.8,"NM","B","ORQ2",69)

"BLD",7051,"KRN",9.8,"NM","B","ORQQCN2",45)

"BLD",7051,"KRN",9.8,"NM","B","ORQQPL1",5)

"BLD",7051,"KRN",9.8,"NM","B","ORQQPL3",6)

"BLD",7051,"KRN",9.8,"NM","B","ORTSKLPS",31)

"BLD",7051,"KRN",9.8,"NM","B","ORUTL",15)

"BLD",7051,"KRN",9.8,"NM","B","ORWCV",29)

"BLD",7051,"KRN",9.8,"NM","B","ORWD",46)

"BLD",7051,"KRN",9.8,"NM","B","ORWDPS3",47)

"BLD",7051,"KRN",9.8,"NM","B","ORWDPS33",48)

"BLD",7051,"KRN",9.8,"NM","B","ORWDRA32",92)

"BLD",7051,"KRN",9.8,"NM","B","ORWDX",49)

"BLD",7051,"KRN",9.8,"NM","B","ORWDX2",87)

"BLD",7051,"KRN",9.8,"NM","B","ORWDXA",50)

"BLD",7051,"KRN",9.8,"NM","B","ORWDXC",63)

"BLD",7051,"KRN",9.8,"NM","B","ORWDXM1",51)

"BLD",7051,"KRN",9.8,"NM","B","ORWDXM2",52)

"BLD",7051,"KRN",9.8,"NM","B","ORWDXM3",53)

"BLD",7051,"KRN",9.8,"NM","B","ORWDXM4",88)

"BLD",7051,"KRN",9.8,"NM","B","ORWDXR01",94)

"BLD",7051,"KRN",9.8,"NM","B","ORWDXVB3",90)

"BLD",7051,"KRN",9.8,"NM","B","ORWGAPI3",35)

"BLD",7051,"KRN",9.8,"NM","B","ORWGAPIR",41)

"BLD",7051,"KRN",9.8,"NM","B","ORWGAPIU",38)

"BLD",7051,"KRN",9.8,"NM","B","ORWIB",32)

"BLD",7051,"KRN",9.8,"NM","B","ORWLRR",34)

"BLD",7051,"KRN",9.8,"NM","B","ORWLRRG",36)

"BLD",7051,"KRN",9.8,"NM","B","ORWLRRG1",37)

"BLD",7051,"KRN",9.8,"NM","B","ORWOD",61)

"BLD",7051,"KRN",9.8,"NM","B","ORWOD1",62)

"BLD",7051,"KRN",9.8,"NM","B","ORWOR",43)

"BLD",7051,"KRN",9.8,"NM","B","ORWORR",44)

"BLD",7051,"KRN",9.8,"NM","B","ORWPCE",11)

"BLD",7051,"KRN",9.8,"NM","B","ORWPCE1",12)

"BLD",7051,"KRN",9.8,"NM","B","ORWPCE3",8)

"BLD",7051,"KRN",9.8,"NM","B","ORWPS",33)

"BLD",7051,"KRN",9.8,"NM","B","ORWPT",93)

"BLD",7051,"KRN",9.8,"NM","B","ORWPT1",70)

"BLD",7051,"KRN",9.8,"NM","B","ORWRP",71)

"BLD",7051,"KRN",9.8,"NM","B","ORWTPR",40)

"BLD",7051,"KRN",9.8,"NM","B","ORY280",9)

"BLD",7051,"KRN",9.8,"NM","B","ORY2800",75)

"BLD",7051,"KRN",9.8,"NM","B","ORY28001",74)

"BLD",7051,"KRN",9.8,"NM","B","ORY28002",76)

"BLD",7051,"KRN",9.8,"NM","B","ORY28003",77)

"BLD",7051,"KRN",9.8,"NM","B","ORY28004",78)

"BLD",7051,"KRN",9.8,"NM","B","ORY28005",79)

"BLD",7051,"KRN",9.8,"NM","B","ORY28006",80)

"BLD",7051,"KRN",9.8,"NM","B","ORY28007",81)

"BLD",7051,"KRN",9.8,"NM","B","ORY2801",83)

"BLD",7051,"KRN",9.8,"NM","B","ORY2802",84)

"BLD",7051,"KRN",9.8,"NM","B","ORY2803",85)

"BLD",7051,"KRN",9.8,"NM","B","ORY2804",86)

"BLD",7051,"KRN",9.8,"NM","B","ORY280ES",82)

"BLD",7051,"KRN",9.8,"NM","B","ORY280P",91)

"BLD",7051,"KRN",9.8,"NM","B","ORYDLG",24)

"BLD",7051,"KRN",19,0)
19
"BLD",7051,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",7051,"KRN",19,"NM",1,0)
OR CPRS GUI CHART^^0
"BLD",7051,"KRN",19,"NM","B","OR CPRS GUI CHART",1)

"BLD",7051,"KRN",19.1,0)
19.1
"BLD",7051,"KRN",101,0)
101
"BLD",7051,"KRN",101,"NM",0)
^9.68A^1^1
"BLD",7051,"KRN",101,"NM",1,0)
OR ITEM RECEIVE^^0
"BLD",7051,"KRN",101,"NM","B","OR ITEM RECEIVE",1)

"BLD",7051,"KRN",409.61,0)
409.61
"BLD",7051,"KRN",771,0)
771
"BLD",7051,"KRN",870,0)
870
"BLD",7051,"KRN",8989.51,0)
8989.51
"BLD",7051,"KRN",8989.51,"NM",0)
^9.68A^12^11
"BLD",7051,"KRN",8989.51,"NM",1,0)
OR RA RFS CARRY ON^^0
"BLD",7051,"KRN",8989.51,"NM",2,0)
ORWOR CATEGORY SEQUENCE^^0
"BLD",7051,"KRN",8989.51,"NM",3,0)
ORW ADDORD INPT^^1^
"BLD",7051,"KRN",8989.51,"NM",4,0)
ORWOR WRITE ORDERS LIST^^0
"BLD",7051,"KRN",8989.51,"NM",6,0)
ORWT TOOLS MENU^^0
"BLD",7051,"KRN",8989.51,"NM",7,0)
OR VBECS DIAGNOSTIC TEST ORDER^^0
"BLD",7051,"KRN",8989.51,"NM",8,0)
OR VBECS REMOVE COLL TIME^^0
"BLD",7051,"KRN",8989.51,"NM",9,0)
OR VBECS DIAGNOSTIC PANEL 1ST^^0
"BLD",7051,"KRN",8989.51,"NM",10,0)
OR RADIOLOGY ISSUES^^0
"BLD",7051,"KRN",8989.51,"NM",11,0)
OR RADIOLOGY MAILGROUP^^1^
"BLD",7051,"KRN",8989.51,"NM",12,0)
OR VBECS COMPONENT ORDER^^0
"BLD",7051,"KRN",8989.51,"NM","B","OR RA RFS CARRY ON",1)

"BLD",7051,"KRN",8989.51,"NM","B","OR RADIOLOGY ISSUES",10)

"BLD",7051,"KRN",8989.51,"NM","B","OR RADIOLOGY MAILGROUP",11)

"BLD",7051,"KRN",8989.51,"NM","B","OR VBECS COMPONENT ORDER",12)

"BLD",7051,"KRN",8989.51,"NM","B","OR VBECS DIAGNOSTIC PANEL 1ST",9)

"BLD",7051,"KRN",8989.51,"NM","B","OR VBECS DIAGNOSTIC TEST ORDER",7)

"BLD",7051,"KRN",8989.51,"NM","B","OR VBECS REMOVE COLL TIME",8)

"BLD",7051,"KRN",8989.51,"NM","B","ORW ADDORD INPT",3)

"BLD",7051,"KRN",8989.51,"NM","B","ORWOR CATEGORY SEQUENCE",2)

"BLD",7051,"KRN",8989.51,"NM","B","ORWOR WRITE ORDERS LIST",4)

"BLD",7051,"KRN",8989.51,"NM","B","ORWT TOOLS MENU",6)

"BLD",7051,"KRN",8989.52,0)
8989.52
"BLD",7051,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",7051,"KRN",8994,0)
8994
"BLD",7051,"KRN",8994,"NM",0)
^9.68A^14^14
"BLD",7051,"KRN",8994,"NM",1,0)
ORQQPL PROBLEM NTRT BULLETIN^^0
"BLD",7051,"KRN",8994,"NM",2,0)
ORWPCE GET DX TEXT^^0
"BLD",7051,"KRN",8994,"NM",3,0)
ORWDPS33 IVDOSFRM^^0
"BLD",7051,"KRN",8994,"NM",4,0)
ORQQCN ISPROSVC^^0
"BLD",7051,"KRN",8994,"NM",5,0)
ORCHECK ISMONO^^0
"BLD",7051,"KRN",8994,"NM",6,0)
ORCHECK GETMONO^^0
"BLD",7051,"KRN",8994,"NM",7,0)
ORCHECK GETMONOL^^0
"BLD",7051,"KRN",8994,"NM",8,0)
ORCHECK DELMONO^^0
"BLD",7051,"KRN",8994,"NM",9,0)
ORCHECK GETXTRA^^0
"BLD",7051,"KRN",8994,"NM",10,0)
ORWDPS33 GETADDFR^^0
"BLD",7051,"KRN",8994,"NM",11,0)
ORCNOTE GET TOTAL^^0
"BLD",7051,"KRN",8994,"NM",12,0)
ORWDXVB3 DIAGORD^^0
"BLD",7051,"KRN",8994,"NM",13,0)
ORWDXVB3 COLLTIM^^0
"BLD",7051,"KRN",8994,"NM",14,0)
ORWDXVB3 SWPANEL^^0
"BLD",7051,"KRN",8994,"NM","B","ORCHECK DELMONO",8)

"BLD",7051,"KRN",8994,"NM","B","ORCHECK GETMONO",6)

"BLD",7051,"KRN",8994,"NM","B","ORCHECK GETMONOL",7)

"BLD",7051,"KRN",8994,"NM","B","ORCHECK GETXTRA",9)

"BLD",7051,"KRN",8994,"NM","B","ORCHECK ISMONO",5)

"BLD",7051,"KRN",8994,"NM","B","ORCNOTE GET TOTAL",11)

"BLD",7051,"KRN",8994,"NM","B","ORQQCN ISPROSVC",4)

"BLD",7051,"KRN",8994,"NM","B","ORQQPL PROBLEM NTRT BULLETIN",1)

"BLD",7051,"KRN",8994,"NM","B","ORWDPS33 GETADDFR",10)

"BLD",7051,"KRN",8994,"NM","B","ORWDPS33 IVDOSFRM",3)

"BLD",7051,"KRN",8994,"NM","B","ORWDXVB3 COLLTIM",13)

"BLD",7051,"KRN",8994,"NM","B","ORWDXVB3 DIAGORD",12)

"BLD",7051,"KRN",8994,"NM","B","ORWDXVB3 SWPANEL",14)

"BLD",7051,"KRN",8994,"NM","B","ORWPCE GET DX TEXT",2)

"BLD",7051,"KRN","B",.4,.4)

"BLD",7051,"KRN","B",.401,.401)

"BLD",7051,"KRN","B",.402,.402)

"BLD",7051,"KRN","B",.403,.403)

"BLD",7051,"KRN","B",.5,.5)

"BLD",7051,"KRN","B",.84,.84)

"BLD",7051,"KRN","B",3.6,3.6)

"BLD",7051,"KRN","B",3.8,3.8)

"BLD",7051,"KRN","B",9.2,9.2)

"BLD",7051,"KRN","B",9.8,9.8)

"BLD",7051,"KRN","B",19,19)

"BLD",7051,"KRN","B",19.1,19.1)

"BLD",7051,"KRN","B",101,101)

"BLD",7051,"KRN","B",409.61,409.61)

"BLD",7051,"KRN","B",771,771)

"BLD",7051,"KRN","B",870,870)

"BLD",7051,"KRN","B",8989.51,8989.51)

"BLD",7051,"KRN","B",8989.52,8989.52)

"BLD",7051,"KRN","B",8994,8994)

"BLD",7051,"PRE")

"BLD",7051,"QDEF")
^^^^NO^^^^YES^^NO
"BLD",7051,"QUES",0)
^9.62^^
"BLD",7051,"REQB",0)
^9.611^26^12
"BLD",7051,"REQB",1,0)
OR*3.0*67^2
"BLD",7051,"REQB",2,0)
OR*3.0*181^2
"BLD",7051,"REQB",11,0)
PSS*1.0*142^2
"BLD",7051,"REQB",12,0)
OR*3.0*295^2
"BLD",7051,"REQB",14,0)
OR*3.0*302^2
"BLD",7051,"REQB",16,0)
OR*3.0*293^2
"BLD",7051,"REQB",19,0)
PSS*1.0*147^2
"BLD",7051,"REQB",22,0)
SD*5.3*536^2
"BLD",7051,"REQB",23,0)
PSS*1.0*151^2
"BLD",7051,"REQB",24,0)
LR*5.2*395^2
"BLD",7051,"REQB",25,0)
OR*3.0*307^2
"BLD",7051,"REQB",26,0)
OR*3.0*330^2
"BLD",7051,"REQB","B","LR*5.2*395",24)

"BLD",7051,"REQB","B","OR*3.0*181",2)

"BLD",7051,"REQB","B","OR*3.0*293",16)

"BLD",7051,"REQB","B","OR*3.0*295",12)

"BLD",7051,"REQB","B","OR*3.0*302",14)

"BLD",7051,"REQB","B","OR*3.0*307",25)

"BLD",7051,"REQB","B","OR*3.0*330",26)

"BLD",7051,"REQB","B","OR*3.0*67",1)

"BLD",7051,"REQB","B","PSS*1.0*142",11)

"BLD",7051,"REQB","B","PSS*1.0*147",19)

"BLD",7051,"REQB","B","PSS*1.0*151",23)

"BLD",7051,"REQB","B","SD*5.3*536",22)

"DATA",101.41,51,0)
GMRCOR CONSULT^Consult^^D^11^2^294^1^1
"DATA",101.41,51,3)
D GETSERV^ORCDGMRC
"DATA",101.41,51,3.1)
D GETSERV^ORCDGMRC
"DATA",101.41,51,4)
K ORSERV,ORPDX,GMRCNOPD,GMRCNOAT,GMRCREAF,^TMP("GMRCS",$J),^TMP("GMRCSLIST",$J)
"DATA",101.41,51,5)
^^^Consult^110
"DATA",101.41,51,10,0)
^101.412IA^10^10
"DATA",101.41,51,10,1,0)
1^4^^Consult to Service/Specialty: ^^1^^^^S.CSLT
"DATA",101.41,51,10,1,1)
Select the service/specialty consultation you wish to request for this patient.
"DATA",101.41,51,10,1,2)
2^^^^Cons
"DATA",101.41,51,10,1,3)
I $G(ORTYPE)'="Q",'$D(OREDIT),'$G(OREWRITE)
"DATA",101.41,51,10,1,4)
I $$ACTIVE^ORDD43(Y),$D(^TMP("GMRCS",$J,+$P(^(0),U,2)))
"DATA",101.41,51,10,1,5)
I $G(ORESET)'=+Y D CKSERV^ORCDGMRC K GMRCREAF
"DATA",101.41,51,10,1,6)
D LISTSERV^ORCDGMRC(1)
"DATA",101.41,51,10,1,10)
N OI S OI=+$G(ORDIALOG(PROMPT,INST)),ORSERV=+$P($G(^ORD(101.43,OI,0)),U,2) D:ORSERV SERVMSG^ORCDGMRC
"DATA",101.41,51,10,1,"W")
cboService
"DATA",101.41,51,10,2,0)
2^15^^Reason for Request: ^^1
"DATA",101.41,51,10,2,1)
Enter a brief description of why this consult is being requested.
"DATA",101.41,51,10,2,3)
I $G(ORTYPE)="Z"!'$G(GMRCREAF)!($G(GMRCREAF)=1&'FIRST)
"DATA",101.41,51,10,2,7)
D REASON^ORCDGMRC
"DATA",101.41,51,10,2,9)
S:'$D(GMRCREAF) GMRCREAF=$$REAF^GMRCDRFR(+$G(ORSERV))
"DATA",101.41,51,10,2,"W")
memReason
"DATA",101.41,51,10,3,0)
3^10^^^^1
"DATA",101.41,51,10,3,1)
Enter if the service rendered will be on an inpatient or outpatient basis.
"DATA",101.41,51,10,3,5)
I $G(ORESET)'="",ORESET'=$P(Y,U) D CHANGED^ORCDGMRC("CAT")
"DATA",101.41,51,10,3,6)
D SETLIST^ORCD
"DATA",101.41,51,10,3,7)
S:$G(ORTYPE)'="Z" Y=$S($$INPT^ORCD:"I",1:"O")
"DATA",101.41,51,10,3,9)
S ORDIALOG(PROMPT,0)=$P(ORDIALOG(PROMPT,0),";",1,2) ;I or O only
"DATA",101.41,51,10,3,"W")
refCategory
"DATA",101.41,51,10,4,0)
4^7^^^^1^^^^S.GMRCT
"DATA",101.41,51,10,4,1)
Select the urgency indicating how quickly results from this consult are needed.
"DATA",101.41,51,10,4,2)
4^^ROUTINE
"DATA",101.41,51,10,4,7)
S Y=9
"DATA",101.41,51,10,4,9)
D URGENCY^ORCDGMRC("C")
"DATA",101.41,51,10,4,"W")
cboUrgency
"DATA",101.41,51,10,5,0)
5^140^^^^1
"DATA",101.41,51,10,5,1)
Select the preferred place to see the patient for this consult.
"DATA",101.41,51,10,5,2)
3
"DATA",101.41,51,10,5,6)
D LIST^ORCD
"DATA",101.41,51,10,5,7)
S:$G(ORTYPE)'="Z" Y=$S($$VAL^ORCD("CATEGORY")="I":"B",1:"C")
"DATA",101.41,51,10,5,9)
D PLACE^ORCDGMRC
"DATA",101.41,51,10,5,"W")
cboPlace
"DATA",101.41,51,10,6,0)
6^17^^Attention: 
"DATA",101.41,51,10,6,1)
Enter the service/specialty user who is to be notified of this request.
"DATA",101.41,51,10,6,3)
I '$G(GMRCNOAT)
"DATA",101.41,51,10,6,4)
N ORT S ORT=$P(^(0),U,11) I 'ORT!(ORT>DT)
"DATA",101.41,51,10,6,"W")
txtAttn
"DATA",101.41,51,10,7,0)
7^20^^Provisional Diagnosis: 
"DATA",101.41,51,10,7,1)
Enter a preliminary diagnosis relating to this request, up to 240 characters.
"DATA",101.41,51,10,7,3)
I '$G(GMRCNOPD)
"DATA",101.41,51,10,7,5)
D LEX^ORCDGMRC
"DATA",101.41,51,10,7,9)
D ENPDX^ORCDGMRC
"DATA",101.41,51,10,7,"W")
txtProvDiag
"DATA",101.41,51,10,8,0)
1.1^178^^Consult Type: 
"DATA",101.41,51,10,8,1)
Enter the type of consult you wish to have done at this service
"DATA",101.41,51,10,8,2)
1
"DATA",101.41,51,10,8,3)
I $G(ORTYPE)="Z"!$D(ORDIALOG(PROMPT,INST)) ;populated by QO only
"DATA",101.41,51,10,9,0)
7.1^173^^^^^^^^^20
"DATA",101.41,51,10,9,3)
I 0 ;stuffed in via Prov Dx
"DATA",101.41,51,10,10,0)
4.5^15820^^Earliest appropriate date:^^^^^W
"DATA",101.41,51,10,10,1)
Enter the earliest appropriate date for this consult to be performed.
"DATA",101.41,51,10,10,3)
Q:'$G(ORSERV)  I $G(^GMR(123.5,ORSERV,"INT"))'=1
"DATA",101.41,51,10,10,7)
S Y="TODAY"
"DATA",101.41,51,10,10,10)
N X,Y,%DT S X=$G(ORDIALOG(PROMPT,INST)),%DT="X" I $L(X) D ^%DT S:Y>0 ORDATE=$P(Y,".")
"DATA",101.41,51,10,10,"W")
calEarliest
"DATA",101.41,51,10,10,"W7")
S Y="TODAY"
"DATA",101.41,51,99)
61814,28145
"DATA",101.41,52,0)
GMRCOR REQUEST^Procedure^^D^43^2^294^1^2
"DATA",101.41,52,4)
K ORSERV,ORPDX,GMRCNOAT,GMRCNOPD,GMRCREAF,ORPROC
"DATA",101.41,52,5)
^^^Procedure^112^^^
"DATA",101.41,52,10,0)
^101.412IA^10^10
"DATA",101.41,52,10,1,0)
1^4^^Procedure: ^^1^^^^S.PROC
"DATA",101.41,52,10,1,1)
Select the procedure you wish to request for this patient.
"DATA",101.41,52,10,1,2)
1
"DATA",101.41,52,10,1,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,52,10,1,5)
I $G(ORESET)'=$P(Y,U) D CKPROCSV^ORCDGMRC Q:'$G(DONE)  D:$G(ORESET) CHANGED^ORCDGMRC("OI")
"DATA",101.41,52,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,52,10,1,10)
N OI S OI=+$G(ORDIALOG(PROMPT,INST)) I $P($G(^ORD(101.43,OI,0)),"^",2)["99PRC" S ORPROC=$P(^ORD(101.43,OI,0),"^",2) D SERVMSG^ORCDGMRC
"DATA",101.41,52,10,2,0)
2^15^^Reason for Request: ^^1
"DATA",101.41,52,10,2,1)
Enter a brief description of why this procedure is being requested.
"DATA",101.41,52,10,2,3)
I $G(ORTYPE)="Z"!'$G(GMRCREAF)!($G(GMRCREAF)=1&'FIRST)
"DATA",101.41,52,10,2,7)
D REASON^ORCDGMRC
"DATA",101.41,52,10,2,9)
S:'$D(GMRCREAF)&('$G(ORPROC)) GMRCREAF=$$REAF^GMRCDRFR($G(ORPROC))
"DATA",101.41,52,10,3,0)
3^10^^^^1
"DATA",101.41,52,10,3,1)
Enter if the service rendered will be on an inpatient or outpatient basis.
"DATA",101.41,52,10,3,5)
I $G(ORESET)'="",ORESET'=$P(Y,U) D CHANGED^ORCDGMRC("CAT")
"DATA",101.41,52,10,3,6)
D SETLIST^ORCD
"DATA",101.41,52,10,3,7)
S:$G(ORTYPE)'="Z" Y=$S($$INPT^ORCD:"I",1:"O")
"DATA",101.41,52,10,3,9)
S ORDIALOG(PROMPT,0)=$P(ORDIALOG(PROMPT,0),";",1,2) ;I or O only
"DATA",101.41,52,10,4,0)
4^7^^^^1^^^^S.GMRCR
"DATA",101.41,52,10,4,1)
Select the urgency indicating how quickly results from this procedure are needed.
"DATA",101.41,52,10,4,2)
4^^ROUTINE
"DATA",101.41,52,10,4,7)
S Y=9
"DATA",101.41,52,10,4,9)
D URGENCY^ORCDGMRC("R")
"DATA",101.41,52,10,5,0)
5^140^^^^1
"DATA",101.41,52,10,5,1)
Select the preferred place to see the patient for this consult.
"DATA",101.41,52,10,5,2)
3
"DATA",101.41,52,10,5,6)
D LIST^ORCD
"DATA",101.41,52,10,5,7)
S:$G(ORTYPE)'="Z" Y=$S($$VAL^ORCD("CATEGORY")="I":"B",1:"C")
"DATA",101.41,52,10,5,9)
D PLACE^ORCDGMRC
"DATA",101.41,52,10,6,0)
6^17^^Attention: 
"DATA",101.41,52,10,6,1)
Enter the service/specialty user who is to be notified of this request.
"DATA",101.41,52,10,6,3)
I '$G(GMRCNOAT)
"DATA",101.41,52,10,6,4)
N ORT S ORT=$P(^(0),U,11) I 'ORT!(ORT>DT)
"DATA",101.41,52,10,7,0)
7^20^^Provisional Diagnosis: 
"DATA",101.41,52,10,7,1)
Enter a preliminary diagnosis relating to this request, up to 240 characters.
"DATA",101.41,52,10,7,3)
I '$G(GMRCNOPD)
"DATA",101.41,52,10,7,5)
D LEX^ORCDGMRC
"DATA",101.41,52,10,7,9)
D ENPDX^ORCDGMRC
"DATA",101.41,52,10,8,0)
1.1^166^^^^1
"DATA",101.41,52,10,8,1)
Enter the service that will be requested to perform this procedure
"DATA",101.41,52,10,8,2)
2^^^^Proc
"DATA",101.41,52,10,8,3)
I $G(ORDIALOG(PROMPT,"LIST"))>1
"DATA",101.41,52,10,8,6)
D LIST^ORCD
"DATA",101.41,52,10,8,7)
S:+$G(ORDIALOG(PROMPT,"LIST"))=1 Y=+$G(ORDIALOG(PROMPT,"LIST",1))
"DATA",101.41,52,10,8,9)
D PROCSVC^ORCDGMRC
"DATA",101.41,52,10,9,0)
7.1^173^^^^^^^^^20
"DATA",101.41,52,10,9,3)
I 0 ;stuffed in via Prov Dx
"DATA",101.41,52,10,10,0)
4.5^15820^^Earliest appropriate date:^^^^^W
"DATA",101.41,52,10,10,1)
Enter the earliest appropriate date for this procedure to be performed.
"DATA",101.41,52,10,10,7)
S Y="TODAY"
"DATA",101.41,52,10,10,10)
N X,Y,%DT S X=$G(ORDIALOG(PROMPT,INST)),%DT="X" I $L(X) D ^%DT S:Y>0 ORDATE=$P(Y,".")
"DATA",101.41,52,10,10,"W")
calEarliest
"DATA",101.41,52,10,10,"W7")
S Y="Today"
"DATA",101.41,52,99)
61814,28145
"DATA",101.41,129,0)
PSJ OR PAT OE^Inpatient Medications^^D^23^2^197^1^2
"DATA",101.41,129,3)
D PROVIDER^ORCDPSIV Q:$G(ORQUIT)  D EN^ORCDPS1("I")
"DATA",101.41,129,3.1)
D EN1^ORCDPS1
"DATA",101.41,129,4)
D EXIT^ORCDPS1
"DATA",101.41,129,5)
^^^Meds, Inpatient^130
"DATA",101.41,129,7)
D SC^ORCDPS3
"DATA",101.41,129,10,0)
^101.412IA^23^23
"DATA",101.41,129,10,1,0)
1^4^^Medication: ^^1^^^^S.UD RX
"DATA",101.41,129,10,1,1)
Enter the medication you wish to order for this patient.
"DATA",101.41,129,10,1,2)
1^@1350
"DATA",101.41,129,10,1,4)
I '$G(^(.1))!($G(^(.1))>$$NOW^XLFDT)
"DATA",101.41,129,10,1,5)
D DEA^ORCDPS1 Q:'$G(DONE)  I $G(ORESET)'=+Y D CHANGED^ORCDPS1("OI")
"DATA",101.41,129,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,129,10,1,9)
D ENOI^ORCDPS1
"DATA",101.41,129,10,1,10)
S OROI=+$G(ORDIALOG(PROMPT,INST)) D ORDITM^ORCDPS1(OROI),NFI^ORCDPS1(OROI)
"DATA",101.41,129,10,2,0)
2^136^^Dose: ^^1^1^^C^^^^Instructions: 
"DATA",101.41,129,10,2,1)
Enter the dosage instructions for this order, as an amount and units.
"DATA",101.41,129,10,2,5)
D CHDOSE^ORCDPS2 Q:'$G(DONE)  D DEFCONJ^ORCDPS1
"DATA",101.41,129,10,2,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST")),F^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))
"DATA",101.41,129,10,2,9)
D DOSES^ORCDPS2 I $G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)),'$G(ORENEW) D LIST^ORCD
"DATA",101.41,129,10,2,10)
D EXDOSE^ORCDPS2
"DATA",101.41,129,10,3,0)
2.1^137^^^^1^^^C^^136
"DATA",101.41,129,10,3,1)
Enter the route of administration for this drug.
"DATA",101.41,129,10,3,2)
^1~3
"DATA",101.41,129,10,3,4)
I $P(^(0),U,4)
"DATA",101.41,129,10,3,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST"))&(X="?"),P^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))!(X'="?")
"DATA",101.41,129,10,3,7)
D DEFRTE^ORCDPS1
"DATA",101.41,129,10,3,9)
D ROUTES^ORCDPS1
"DATA",101.41,129,10,3,10)
S OROUTE=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,129,10,4,0)
2.2^170^^^^1^^^C^^136
"DATA",101.41,129,10,4,1)
Enter a standard schedule for administering this medication.
"DATA",101.41,129,10,4,5)
D CKSCH^ORCDPS1
"DATA",101.41,129,10,4,6)
N DIC,D,X S DIC="^PS(51.1,",DIC(0)="EQS",D="APPSJ",X="??" D MIX^PSSDI(51.1,"PSJ",.DIC,D,.X)
"DATA",101.41,129,10,4,7)
S:$L($G(^TMP("PSJSCH",$J))) Y=^($J)
"DATA",101.41,129,10,4,9)
S:ORCAT="I" REQD=$$SCHREQ^PSJORPOE(OROUTE,OROI,$G(ORDRUG))
"DATA",101.41,129,10,4,10)
S ORSCH=$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,129,10,5,0)
8^7^^Priority: ^^1^^^C^S.PSO
"DATA",101.41,129,10,5,1)
Enter the urgency of this order.
"DATA",101.41,129,10,5,2)
6^^ROUTINE DONE
"DATA",101.41,129,10,5,7)
S Y=+$$RECALL^ORCD(PROMPT) S:Y EDITONLY=1 S:'Y Y=9
"DATA",101.41,129,10,5,9)
S ORDIALOG(PROMPT,"D")=$S(ORCAT="I":"S.PSJ",1:"S.PSO")
"DATA",101.41,129,10,6,0)
10^15^^Comments: ^^^^^C
"DATA",101.41,129,10,6,1)
Enter any additional instructions for this order.
"DATA",101.41,129,10,6,2)
7
"DATA",101.41,129,10,6,3)
I '$G(PSJNOPC)!($G(ORTYPE)="Z")
"DATA",101.41,129,10,7,0)
1.1^384^^^^^^^^^4
"DATA",101.41,129,10,7,2)
^@1350
"DATA",101.41,129,10,7,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,129,10,8,0)
5.5^149^^^^^^^C
"DATA",101.41,129,10,8,1)
Enter the amount (number of tablets, e.g.) to be dispensed.
"DATA",101.41,129,10,8,2)
8^^^Quantity:^^1
"DATA",101.41,129,10,8,3)
I ORCAT="O"
"DATA",101.41,129,10,8,7)
I $G(ORCAT)="O",$G(ORTYPE)'="Z" S Y=$$QTY^ORCDPS1 K:Y'>0 Y
"DATA",101.41,129,10,8,9)
I ORCAT="O" W:$L($G(ORQTY)) !,ORQTY S ORDIALOG(PROMPT,"A")="Quantity"_$S($L($G(ORQTYUNT)):" ("_ORQTYUNT_"): ",1:": ")
"DATA",101.41,129,10,9,0)
7^148^^Pick Up: ^^1^^^RC
"DATA",101.41,129,10,9,1)
Enter if the patient is to receive this medication by mail, at the window, or in the clinic.
"DATA",101.41,129,10,9,3)
I ORCAT="O"
"DATA",101.41,129,10,9,6)
D SETLIST^ORCD
"DATA",101.41,129,10,9,7)
I ORCAT="O",$G(ORTYPE)'="Z" S Y=$S($G(OREVENT):"W",$D(^PSX(550,"C")):"M",1:"W") I $D(^TMP("ORECALL",$J,ORDIALOG,PROMPT,INST)) S Y=^(INST),EDITONLY=1
"DATA",101.41,129,10,10,0)
6^150^^Refills: ^^1^^^RC
"DATA",101.41,129,10,10,1)
Enter the number of refills to allow for this order.
"DATA",101.41,129,10,10,2)
9^^^Refills:
"DATA",101.41,129,10,10,3)
I ORCAT="O",$G(OREFILLS)>0
"DATA",101.41,129,10,10,9)
I ORCAT="O",'$G(OREFILLS) D MAXREFS^ORCDPS1
"DATA",101.41,129,10,11,0)
9^151^^Is this medication for a SC condition? ^^^^^CW^^^^SC: 
"DATA",101.41,129,10,11,1)
If this medication is for treatment of a service-connected condition, enter YES.
"DATA",101.41,129,10,11,3)
I ORCAT="O",$G(ORCOPAY),$G(ORSC)
"DATA",101.41,129,10,11,6)
N DFN S DFN=+ORVP D DIS^DGRPDB
"DATA",101.41,129,10,11,7)
I $G(ORTYPE)'="Z",ORCAT="O",$G(ORCOPAY),$G(ORSC) S Y=$S($P(ORSC,U,2)>50:1,1:0)
"DATA",101.41,129,10,11,9)
I ORCAT="O" S ORCOPAY=$$ASKSC^ORCDPS1 I ORCOPAY,$G(ORSC),'$D(ORDIALOG(PROMPT,INST)) N DFN S DFN=+ORVP D:$P(ORSC,U,2)'>50 DIS^DGRPDB S:$P(ORSC,U,2)>50 $P(ORDIALOG(PROMPT,0),U)="YA",EDITONLY=1 ; Req'd
"DATA",101.41,129,10,12,0)
2.3^153^^How long: ^^^^^C^^136
"DATA",101.41,129,10,12,1)
Enter the length of time over which this dose is to be administered as '4 HOURS', '7 DAYS', '2 WEEKS', or '1 MONTH'.
"DATA",101.41,129,10,12,2)
^^^FOR
"DATA",101.41,129,10,12,3)
I $$ASKDUR^ORCDPS3
"DATA",101.41,129,10,12,5)
D DUR^ORCDPS3
"DATA",101.41,129,10,12,7)
Q  I $G(ORTYPE)'="Z",$G(ORCAT)="I",$G(ORCOMPLX),$P($G(ORSD),U,3) S Y=+$P(ORSD,U,3)_" DAYS"
"DATA",101.41,129,10,13,0)
4^6^^Start: ^^^^1^C
"DATA",101.41,129,10,13,1)
Enter the date this order should begin.
"DATA",101.41,129,10,13,3)
I $G(ORCAT)="O",$G(OREVENT) ;discharge orders only
"DATA",101.41,129,10,13,7)
Q  I $G(ORTYPE)'="Z",ORCAT'="O" S Y=$P($G(ORSD),U) K:'$L(Y) Y
"DATA",101.41,129,10,13,9)
D START^ORCDPS3 ;I 'FIRST,$G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)) D LIST^ORCD ;editonly
"DATA",101.41,129,10,14,0)
3^385^^Text: 
"DATA",101.41,129,10,14,2)
2^^^^^1^0
"DATA",101.41,129,10,14,3)
I 0 ;created by Instructions, if Outpt order
"DATA",101.41,129,10,15,0)
2.5^386^^^^^^^*^^136
"DATA",101.41,129,10,15,2)
^@
"DATA",101.41,129,10,15,3)
I 0 ;created by Instructions
"DATA",101.41,129,10,15,7)
S Y=$$ID^ORCDPS K:'$L(Y) Y
"DATA",101.41,129,10,16,0)
2.6^138^^^^^^^*
"DATA",101.41,129,10,16,3)
I 0 ;created by Instructions
"DATA",101.41,129,10,17,0)
5^387^^^^1^^^C
"DATA",101.41,129,10,17,1)
Enter the number of days for which the patient needs this medication.
"DATA",101.41,129,10,17,3)
I $G(ORCAT)="O"
"DATA",101.41,129,10,17,5)
I $G(ORESET),+ORESET'=+Y D CHANGED^ORCDPS1("DS")
"DATA",101.41,129,10,17,9)
I $G(ORCAT)="O" D DSUP^ORCDPS1
"DATA",101.41,129,10,17,10)
S:$G(ORCAT)="O" ORDSUP=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,129,10,18,0)
1.5^1350
"DATA",101.41,129,10,18,2)
1.5
"DATA",101.41,129,10,18,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,129,10,19,0)
2.4^388^^^^^^^C^^136
"DATA",101.41,129,10,19,.1)
D INPCONJ^ORCDPS1
"DATA",101.41,129,10,19,1)
Enter AND if the next dose is to be administered concurrently with this one, or THEN if it is to follow after.
"DATA",101.41,129,10,19,3)
I $G(ORCOMPLX)
"DATA",101.41,129,10,19,5)
I $G(ORESET)'=$P(Y,U) D CHANGED^ORCDPS1("QUANTITY")
"DATA",101.41,129,10,19,9)
D ENCONJ^ORCDPS1
"DATA",101.41,129,10,19,10)
I $G(ORCOMPLX),'$L($G(ORDIALOG(PROMPT,INST))),FIRST S MAX=1 ;stop prompting dose multiple
"DATA",101.41,129,10,20,0)
3.5^1358^^^^^^^C
"DATA",101.41,129,10,20,2)
3
"DATA",101.41,129,10,20,3)
I 0 ;text stuffed via Entry Action
"DATA",101.41,129,10,20,9)
D PI^ORCDPS2
"DATA",101.41,129,10,21,0)
4.5^1359
"DATA",101.41,129,10,21,2)
10^^^First Dose^^1
"DATA",101.41,129,10,21,3)
I 0 ;set via Entry Action
"DATA",101.41,129,10,21,9)
D NOW^ORCDPS3
"DATA",101.41,129,10,22,0)
2.7^15813^^^^^^^*^^136
"DATA",101.41,129,10,22,2)
^@
"DATA",101.41,129,10,22,3)
I 0 ;from Schedule
"DATA",101.41,129,10,23,0)
2.8^716^^^^^^^*^^136
"DATA",101.41,129,10,23,2)
^@
"DATA",101.41,129,10,23,3)
I 0 ;from Schedule
"DATA",101.41,129,99)
61814,28145
"DATA",101.41,130,0)
PSJI OR PAT FLUID OE^Infusion^^D^24^2^197^1^2
"DATA",101.41,130,3)
D PROVIDER^ORCDPSIV
"DATA",101.41,130,3.1)
D:$G(ORNP) PROVIDER^ORCDPSIV
"DATA",101.41,130,4)
S:$G(ORXNP) ORNP=ORXNP K PSJNOPC,ORXNP,ORIVTYPE,ORLEAD,ORTRAIL,OROTSCH
"DATA",101.41,130,5)
^^^IV Fluids^180
"DATA",101.41,130,10,0)
^101.412IA^18^15
"DATA",101.41,130,10,1,0)
2^4^^Solution: ^^1^1^^C^S.IVB RX^^^Solutions: 
"DATA",101.41,130,10,1,1)
Enter a base solution for this order.
"DATA",101.41,130,10,1,2)
2^^^^^1
"DATA",101.41,130,10,1,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,130,10,1,5)
I $G(ORESET),ORESET'=+Y D CHANGED^ORCDPSIV("B")
"DATA",101.41,130,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,130,10,1,9)
S:FIRST MULT=0 S REQD=$S($G(ORIVTYPE)="I":0,1:1)
"DATA",101.41,130,10,1,10)
D INACTIVE^ORCDPSIV("B")
"DATA",101.41,130,10,2,0)
3^131^^Additive: ^^^1^^C^S.IVA RX^^^Additives: 
"DATA",101.41,130,10,2,1)
Enter an additive for these IV solutions.
"DATA",101.41,130,10,2,2)
1^^^^in^1
"DATA",101.41,130,10,2,3)
I '($$PREMIX^ORCDPSIV&FIRST)
"DATA",101.41,130,10,2,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,130,10,2,5)
I $G(ORESET),ORESET'=ORDIALOG(PROMPT,ORI) D CHANGED^ORCDPSIV("A")
"DATA",101.41,130,10,2,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,130,10,2,10)
D INACTIVE^ORCDPSIV("A")
"DATA",101.41,130,10,3,0)
3.1^152^^^^1^^^C^^131
"DATA",101.41,130,10,3,1)
Enter the strength of this additive, as a number.
"DATA",101.41,130,10,3,9)
D UNITS^ORCDPSIV
"DATA",101.41,130,10,5,0)
5^128^^Infusion Rate: ^^1^^^C
"DATA",101.41,130,10,5,.1)
D INF^ORCDPSIV
"DATA",101.41,130,10,5,1)
Enter the rate at which the IV is to be administered, as the number of ml/hr or Text@Number of Labels per day.
"DATA",101.41,130,10,5,2)
4^^^@ORLEAD^@ORTRAIL
"DATA",101.41,130,10,5,9)
D ENRATE^ORCDPSIV
"DATA",101.41,130,10,5,10)
S (ORLEAD,ORTRAIL)="" S:$G(ORIVTYPE)="I" ORLEAD="Infuse over",ORTRAIL="minutes"
"DATA",101.41,130,10,7,0)
9^15^^Provider Comments: ^^^^^C
"DATA",101.41,130,10,7,1)
Enter any additional comments or instructions for this order.
"DATA",101.41,130,10,7,2)
8^^^^^1
"DATA",101.41,130,10,7,3)
I '$G(PSJNOPC)!($G(ORTYPE)="Z")
"DATA",101.41,130,10,9,0)
3.2^30^^^^^^^C^^131
"DATA",101.41,130,10,9,1)
Enter the units of measurement for this additive.
"DATA",101.41,130,10,9,3)
I '$D(ORDIALOG(PROMPT,INST))
"DATA",101.41,130,10,9,6)
D SETLIST^ORCD
"DATA",101.41,130,10,10,0)
2.1^172^^Volume (in ml): ^^1^^^C^^4
"DATA",101.41,130,10,10,1)
Enter the volume to be administered, as the number of milliliters.
"DATA",101.41,130,10,10,2)
^^^^ml
"DATA",101.41,130,10,10,3)
I $G(ORDIALOG(PROMPT,"LIST"))>1
"DATA",101.41,130,10,10,6)
D LIST^ORCD
"DATA",101.41,130,10,10,7)
S Y=$O(ORDIALOG(PROMPT,"LIST",""),-1) K:'Y Y D:$G(ORDIALOG(PROMPT,"LIST"))>1 LIST^ORCD
"DATA",101.41,130,10,10,9)
D VOLUME^ORCDPSIV
"DATA",101.41,130,10,11,0)
8^7^^Priority: ^^^^^C^S.PSJ
"DATA",101.41,130,10,11,1)
Enter the urgency of this order.
"DATA",101.41,130,10,11,2)
7^^ROUTINE
"DATA",101.41,130,10,11,7)
S Y=+$$RECALL^ORCD(PROMPT) S:Y EDITONLY=1 S:'Y Y=9
"DATA",101.41,130,10,12,0)
6^170^^^^^^^C
"DATA",101.41,130,10,12,1)
Enter a standard schedule for administering this medication.
"DATA",101.41,130,10,12,2)
5
"DATA",101.41,130,10,12,3)
I $G(ORIVTYPE)="I" ;intermittent only
"DATA",101.41,130,10,12,5)
D CKSCH^ORCDPSIV
"DATA",101.41,130,10,12,6)
N DIC,D,X S DIC="^PS(51.1,",DIC(0)="EQS",D="APPSJ",X="??" D MIX^PSSDI(51.1,"PSJ",.DIC,D,.X)
"DATA",101.41,130,10,12,10)
S OROTSCH=$$ISONETIM^ORCDPSIV($G(ORDIALOG(PROMPT,INST)))
"DATA",101.41,130,10,13,0)
7^153^^Limitation:^^^^^C
"DATA",101.41,130,10,13,.1)
D IVPSI^ORCDPSIV
"DATA",101.41,130,10,13,1)

"DATA",101.41,130,10,13,2)
6
"DATA",101.41,130,10,13,3)
I +$G(OROTSCH)=0 D IVPSI1^ORCDPSIV
"DATA",101.41,130,10,13,6)
D IVDURH^ORCDPSIV
"DATA",101.41,130,10,14,0)
1^15809^^^^1^^^C
"DATA",101.41,130,10,14,1)
Enter the infusion type for this order.
"DATA",101.41,130,10,14,5)
I $L($G(ORESET)),ORESET'=ORDIALOG(PROMPT,ORI) D CHANGED^ORCDPSIV("T")
"DATA",101.41,130,10,14,10)
S ORIVTYPE=$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,130,10,15,0)
4^137^^^^1^^^C
"DATA",101.41,130,10,15,1)
Enter the route of administration for this infusion.
"DATA",101.41,130,10,15,2)
3^1~3
"DATA",101.41,130,10,15,4)
I $$IVRTESCR^ORCDPSIV(Y)
"DATA",101.41,130,10,15,6)
D LVROUTES^ORCDPSIV
"DATA",101.41,130,10,15,9)
D IVRTEENT^ORCDPSIV
"DATA",101.41,130,10,16,0)
6.5^15813
"DATA",101.41,130,10,16,2)
^@
"DATA",101.41,130,10,16,3)
I 0 ;from Schedule
"DATA",101.41,130,10,17,0)
10^1359
"DATA",101.41,130,10,17,2)
15^^^First Dose^^1
"DATA",101.41,130,10,17,3)
I 0 ;set via Entry Action
"DATA",101.41,130,10,17,9)
D NOW^ORCDPS3
"DATA",101.41,130,10,18,0)
3.3^15730^^^^^^^C^^131
"DATA",101.41,130,10,18,.1)
D ADDFRQI^ORCDPSIV
"DATA",101.41,130,10,18,1)
Enter the solution bag number the additive should be added to.
"DATA",101.41,130,10,18,2)
^^All Bags
"DATA",101.41,130,10,18,3)
I $G(ORIVTYPE)="C" ;continuous only
"DATA",101.41,130,10,18,6)
D ADDFRQC^ORCDPSIV
"DATA",101.41,130,10,18,7)
S Y=$$ADDFRD^ORCDPSIV(.ORDIALOG,INST,PROMPT)
"DATA",101.41,130,10,18,9)
D ADDFRQC^ORCDPSIV
"DATA",101.41,130,99)
61814,28145
"DATA",101.41,147,0)
PSO OERR^Outpatient Medications^^D^4^2^141^1^2
"DATA",101.41,147,3)
D PROVIDER^ORCDPSIV Q:$G(ORQUIT)  D EN^ORCDPS1("O")
"DATA",101.41,147,3.1)
D EN1^ORCDPS1
"DATA",101.41,147,4)
D EXIT^ORCDPS1
"DATA",101.41,147,5)
^^^Meds, Outpatient^140
"DATA",101.41,147,7)
D SC^ORCDPS3
"DATA",101.41,147,10,0)
^101.412IA^21^21
"DATA",101.41,147,10,1,0)
1^4^^Medication: ^^1^^^^S.O RX
"DATA",101.41,147,10,1,1)
Enter the medication you wish to order for this patient.
"DATA",101.41,147,10,1,2)
1^@1350
"DATA",101.41,147,10,1,4)
I '$G(^(.1))!($G(^(.1))>$$NOW^XLFDT)
"DATA",101.41,147,10,1,5)
D DEA^ORCDPS1 Q:'$G(DONE)  I $G(ORESET)'=+Y D CHANGED^ORCDPS1("OI")
"DATA",101.41,147,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,147,10,1,9)
D ENOI^ORCDPS1
"DATA",101.41,147,10,1,10)
S OROI=+$G(ORDIALOG(PROMPT,INST)) D ORDITM^ORCDPS1(OROI),NFI^ORCDPS1(OROI)
"DATA",101.41,147,10,2,0)
2^136^^Dose: ^^1^1^^C^^^^Instructions: 
"DATA",101.41,147,10,2,1)
Enter the dosage instructions for this order, as an amount and units.
"DATA",101.41,147,10,2,5)
D CHDOSE^ORCDPS2 Q:'$G(DONE)  D DEFCONJ^ORCDPS1
"DATA",101.41,147,10,2,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST")),F^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))
"DATA",101.41,147,10,2,9)
D DOSES^ORCDPS2 I $G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)),'$G(ORENEW) D LIST^ORCD
"DATA",101.41,147,10,2,10)
D EXDOSE^ORCDPS2
"DATA",101.41,147,10,3,0)
2.1^137^^^^1^^^C^^136
"DATA",101.41,147,10,3,1)
Enter the route of administration for this drug.
"DATA",101.41,147,10,3,2)
^1~3
"DATA",101.41,147,10,3,4)
I $P(^(0),U,4)
"DATA",101.41,147,10,3,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST"))&(X="?"),P^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))!(X'="?")
"DATA",101.41,147,10,3,7)
D DEFRTE^ORCDPS1
"DATA",101.41,147,10,3,9)
D ROUTES^ORCDPS1
"DATA",101.41,147,10,3,10)
S OROUTE=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,147,10,4,0)
2.2^170^^^^1^^^C^^136
"DATA",101.41,147,10,4,1)
Enter a standard schedule for administering this medication.
"DATA",101.41,147,10,4,5)
D CKSCH^ORCDPS1
"DATA",101.41,147,10,4,6)
N DIC,D,DZ S DIC="^PS(51.1,",DIC(0)="EQS",D="APPSJ",DZ="??" D MIX^PSSDI(51.1,"PSJ",.DIC,D,.X)
"DATA",101.41,147,10,4,7)
S:$L($G(^TMP("PSJSCH",$J))) Y=^($J)
"DATA",101.41,147,10,4,9)
S:ORCAT="I" REQD=$$SCHREQ^PSJORPOE(OROUTE,OROI,$G(ORDRUG))
"DATA",101.41,147,10,4,10)
S ORSCH=$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,147,10,5,0)
8^7^^Priority: ^^1^^^C^S.PSO
"DATA",101.41,147,10,5,1)
Enter the urgency of this order.
"DATA",101.41,147,10,5,2)
6^^ROUTINE DONE
"DATA",101.41,147,10,5,7)
S Y=+$$RECALL^ORCD(PROMPT) S:Y EDITONLY=1 S:'Y Y=9
"DATA",101.41,147,10,5,9)
S ORDIALOG(PROMPT,"D")=$S(ORCAT="I":"S.PSJ",1:"S.PSO")
"DATA",101.41,147,10,6,0)
10^15^^Comments: ^^^^^C
"DATA",101.41,147,10,6,1)
Enter any additional instructions for this order.
"DATA",101.41,147,10,6,2)
7
"DATA",101.41,147,10,6,3)
I '$G(PSJNOPC)!($G(ORTYPE)="Z")
"DATA",101.41,147,10,7,0)
1.1^384^^^^^^^^^4
"DATA",101.41,147,10,7,2)
^@1350
"DATA",101.41,147,10,7,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,147,10,8,0)
5.5^149^^^^^^^C
"DATA",101.41,147,10,8,1)
Enter the amount (number of tablets, e.g.) to be dispensed.
"DATA",101.41,147,10,8,2)
8^^^Quantity:^^1
"DATA",101.41,147,10,8,3)
I ORCAT="O"
"DATA",101.41,147,10,8,7)
I $G(ORCAT)="O",$G(ORTYPE)'="Z" S Y=$$QTY^ORCDPS1 K:Y'>0 Y
"DATA",101.41,147,10,8,9)
I ORCAT="O" W:$L($G(ORQTY)) !,ORQTY S ORDIALOG(PROMPT,"A")="Quantity"_$S($L($G(ORQTYUNT)):" ("_ORQTYUNT_"): ",1:": ")
"DATA",101.41,147,10,9,0)
7^148^^Pick Up: ^^1^^^RC
"DATA",101.41,147,10,9,1)
Enter if the patient is to receive this medication by mail, at the window, or in the clinic.
"DATA",101.41,147,10,9,3)
I ORCAT="O"
"DATA",101.41,147,10,9,6)
D SETLIST^ORCD
"DATA",101.41,147,10,9,7)
I ORCAT="O",$G(ORTYPE)'="Z" S Y=$S($G(OREVENT):"W",$D(^PSX(550,"C")):"M",1:"W") I $D(^TMP("ORECALL",$J,ORDIALOG,PROMPT,INST)) S Y=^(INST),EDITONLY=1
"DATA",101.41,147,10,10,0)
6^150^^Refills: ^^1^^^RC
"DATA",101.41,147,10,10,1)
Enter the number of refills to allow for this order.
"DATA",101.41,147,10,10,2)
9^^^Refills:
"DATA",101.41,147,10,10,3)
I ORCAT="O",$G(OREFILLS)>0
"DATA",101.41,147,10,10,9)
I ORCAT="O",'$G(OREFILLS) D MAXREFS^ORCDPS1
"DATA",101.41,147,10,11,0)
9^151^^Is this medication for a SC condition? ^^^^^CW^^^^SC: 
"DATA",101.41,147,10,11,1)
If this medication is for treatment of a service-connected condition, enter YES.
"DATA",101.41,147,10,11,3)
I ORCAT="O",$G(ORCOPAY),$G(ORSC)
"DATA",101.41,147,10,11,6)
N DFN S DFN=+ORVP D DIS^DGRPDB
"DATA",101.41,147,10,11,7)
I $G(ORTYPE)'="Z",ORCAT="O",$G(ORCOPAY),$G(ORSC) S Y=$S($P(ORSC,U,2)>50:1,1:0)
"DATA",101.41,147,10,11,9)
I ORCAT="O" S ORCOPAY=$$ASKSC^ORCDPS1 I ORCOPAY,$G(ORSC),'$D(ORDIALOG(PROMPT,INST)) N DFN S DFN=+ORVP D:$P(ORSC,U,2)'>50 DIS^DGRPDB S:$P(ORSC,U,2)>50 $P(ORDIALOG(PROMPT,0),U)="YA",EDITONLY=1 ; Req'd
"DATA",101.41,147,10,12,0)
2.3^153^^How long: ^^^^^C^^136
"DATA",101.41,147,10,12,1)
Enter the length of time over which this dose is to be administered as '4 HOURS', '7 DAYS', '2 WEEKS', or '1 MONTH'.
"DATA",101.41,147,10,12,2)
^^^FOR
"DATA",101.41,147,10,12,3)
I $$ASKDUR^ORCDPS3
"DATA",101.41,147,10,12,5)
D DUR^ORCDPS3
"DATA",101.41,147,10,12,7)
Q  I $G(ORTYPE)'="Z",$G(ORCAT)="I",$G(ORCOMPLX),$P($G(ORSD),U,3) S Y=+$P(ORSD,U,3)_" DAYS"
"DATA",101.41,147,10,13,0)
4^6^^Start: ^^^^1^C
"DATA",101.41,147,10,13,1)
Enter the date this order should begin.
"DATA",101.41,147,10,13,3)
I $G(ORCAT)="O",$G(OREVENT) ;discharge orders only
"DATA",101.41,147,10,13,7)
Q  I $G(ORTYPE)'="Z",ORCAT'="O" S Y=$P($G(ORSD),U) K:'$L(Y) Y
"DATA",101.41,147,10,13,9)
D START^ORCDPS3 ;I 'FIRST,$G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)) D LIST^ORCD ;editonly
"DATA",101.41,147,10,14,0)
3^385
"DATA",101.41,147,10,14,2)
2^^^^^1^0
"DATA",101.41,147,10,14,3)
I 0 ;created by Instructions, if Outpt order
"DATA",101.41,147,10,15,0)
2.5^386^^^^^^^*^^136
"DATA",101.41,147,10,15,2)
^@
"DATA",101.41,147,10,15,3)
I 0 ;created by Instructions
"DATA",101.41,147,10,15,7)
S Y=$$ID^ORCDPS K:'$L(Y) Y
"DATA",101.41,147,10,16,0)
2.6^138^^^^^^^*
"DATA",101.41,147,10,16,3)
I 0 ;created by Instructions
"DATA",101.41,147,10,17,0)
5^387^^^^1^^^C
"DATA",101.41,147,10,17,1)
Enter the number of days for which the patient needs this medication.
"DATA",101.41,147,10,17,3)
I $G(ORCAT)="O"
"DATA",101.41,147,10,17,5)
I $G(ORESET),+ORESET'=+Y D CHANGED^ORCDPS1("DS")
"DATA",101.41,147,10,17,9)
I $G(ORCAT)="O" D DSUP^ORCDPS1
"DATA",101.41,147,10,17,10)
S:$G(ORCAT)="O" ORDSUP=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,147,10,18,0)
1.5^1350
"DATA",101.41,147,10,18,2)
1.5
"DATA",101.41,147,10,18,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,147,10,19,0)
2.4^388^^^^^^^C^^136
"DATA",101.41,147,10,19,.1)
D INPCONJ^ORCDPS1
"DATA",101.41,147,10,19,1)
Enter AND if the next dose is to be administered concurrently with this one, or THEN if it is to follow after.
"DATA",101.41,147,10,19,3)
I $G(ORCOMPLX)
"DATA",101.41,147,10,19,5)
I $G(ORESET)'=$P(Y,U) D CHANGED^ORCDPS1("QUANTITY")
"DATA",101.41,147,10,19,9)
D ENCONJ^ORCDPS1
"DATA",101.41,147,10,19,10)
I $G(ORCOMPLX),'$L($G(ORDIALOG(PROMPT,INST))),FIRST S MAX=1 ;stop prompting dose multiple
"DATA",101.41,147,10,20,0)
3.5^1358^^^^^^^C
"DATA",101.41,147,10,20,2)
3
"DATA",101.41,147,10,20,3)
I 0 ;text stuffed via Entry Action
"DATA",101.41,147,10,20,9)
D PI^ORCDPS2
"DATA",101.41,147,10,21,0)
4.5^1359
"DATA",101.41,147,10,21,2)
10^^^First Dose^^1
"DATA",101.41,147,10,21,3)
I 0 ;set via Entry Action
"DATA",101.41,147,10,21,9)
D NOW^ORCDPS3
"DATA",101.41,147,99)
61814,28144
"DATA",101.41,174,0)
PS MEDS^Medications^^D^2^2^517^1^2
"DATA",101.41,174,3)
D PROVIDER^ORCDPSIV Q:$G(ORQUIT)  D EN^ORCDPS1("")
"DATA",101.41,174,3.1)
D EN1^ORCDPS1
"DATA",101.41,174,4)
D EXIT^ORCDPS1
"DATA",101.41,174,5)
^^^Medications^135
"DATA",101.41,174,7)
D SC^ORCDPS3
"DATA",101.41,174,10,0)
^101.412IA^24^24
"DATA",101.41,174,10,1,0)
1^4^^Medication: ^^1^^^^S.RX
"DATA",101.41,174,10,1,1)
Enter the medication you wish to order for this patient.
"DATA",101.41,174,10,1,2)
1^@1350
"DATA",101.41,174,10,1,4)
I $$ACTIVE^ORDD43(Y)
"DATA",101.41,174,10,1,5)
D DEA^ORCDPS1 Q:'$G(DONE)  I $G(ORESET)'=+Y D CHANGED^ORCDPS1("OI")
"DATA",101.41,174,10,1,6)
N IDX,SCR S IDX=$G(ORDIALOG(PROMPT,"D")),SCR=$G(ORDIALOG(PROMPT,"S")) D XHELP^ORDD43(IDX,SCR)
"DATA",101.41,174,10,1,9)
D ENOI^ORCDPS1
"DATA",101.41,174,10,1,10)
S OROI=+$G(ORDIALOG(PROMPT,INST)) D ORDITM^ORCDPS1(OROI),NFI^ORCDPS1(OROI) S ORPKG=+$O(^DIC(9.4,"C",$S(ORCAT="I":"PSJ",1:"PSO"),0))
"DATA",101.41,174,10,2,0)
2^136^^Dose: ^^1^1^^C^^^^Instructions: 
"DATA",101.41,174,10,2,1)
Enter the dosage instructions for this order, as an amount and units.
"DATA",101.41,174,10,2,5)
D CHDOSE^ORCDPS2 Q:'$G(DONE)  D DEFCONJ^ORCDPS1
"DATA",101.41,174,10,2,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST")),F^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))
"DATA",101.41,174,10,2,9)
D DOSES^ORCDPS2 I $G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)),'$G(ORENEW) D LIST^ORCD
"DATA",101.41,174,10,2,10)
D EXDOSE^ORCDPS2
"DATA",101.41,174,10,3,0)
2.1^137^^^^1^^^C^^136
"DATA",101.41,174,10,3,1)
Enter the route of administration for this drug.
"DATA",101.41,174,10,3,2)
^1~3
"DATA",101.41,174,10,3,4)
I $P(^(0),U,4)
"DATA",101.41,174,10,3,6)
D LIST^ORCD:$G(ORDIALOG(PROMPT,"LIST"))&(X="?"),P^ORCDLGH:'$G(ORDIALOG(PROMPT,"LIST"))!(X'="?")
"DATA",101.41,174,10,3,7)
D DEFRTE^ORCDPS1
"DATA",101.41,174,10,3,9)
D ROUTES^ORCDPS1
"DATA",101.41,174,10,3,10)
S OROUTE=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,174,10,4,0)
2.2^170^^^^1^^^C^^136
"DATA",101.41,174,10,4,1)
Enter a standard schedule for administering this medication.
"DATA",101.41,174,10,4,5)
D CKSCH^ORCDPS1
"DATA",101.41,174,10,4,6)
N DIC,D,DZ S DIC="^PS(51.1,",DIC(0)="EQS",D="APPSJ",DZ="??" D MIX^PSSDI(51.1,"PSJ",.DIC,D,.X)
"DATA",101.41,174,10,4,7)
S:$L($G(^TMP("PSJSCH",$J))) Y=^($J)
"DATA",101.41,174,10,4,9)
S:ORCAT="I" REQD=$$SCHREQ^PSJORPOE(OROUTE,OROI,$G(ORDRUG))
"DATA",101.41,174,10,4,10)
S ORSCH=$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,174,10,5,0)
8^7^^Priority: ^^1^^^C^S.PSO
"DATA",101.41,174,10,5,1)
Enter the urgency of this order.
"DATA",101.41,174,10,5,2)
6^^ROUTINE DONE
"DATA",101.41,174,10,5,7)
S Y=+$$RECALL^ORCD(PROMPT) S:Y EDITONLY=1 S:'Y Y=9
"DATA",101.41,174,10,5,9)
S ORDIALOG(PROMPT,"D")=$S(ORCAT="I":"S.PSJ",1:"S.PSO")
"DATA",101.41,174,10,6,0)
10^15^^Comments: ^^^^^C
"DATA",101.41,174,10,6,1)
Enter any additional instructions for this order.
"DATA",101.41,174,10,6,2)
7
"DATA",101.41,174,10,6,3)
I '$G(PSJNOPC)!($G(ORTYPE)="Z")
"DATA",101.41,174,10,7,0)
1.1^384^^^^^^^^^4
"DATA",101.41,174,10,7,2)
^@1350
"DATA",101.41,174,10,7,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,174,10,8,0)
5.5^149^^^^^^^C
"DATA",101.41,174,10,8,1)
Enter the amount (number of tablets, e.g.) to be dispensed.
"DATA",101.41,174,10,8,2)
8^^^Quantity:^^1
"DATA",101.41,174,10,8,3)
I ORCAT="O"
"DATA",101.41,174,10,8,7)
I $G(ORCAT)="O",$G(ORTYPE)'="Z" S Y=$$QTY^ORCDPS1 K:Y'>0 Y
"DATA",101.41,174,10,8,9)
I ORCAT="O" W:$L($G(ORQTY)) !,ORQTY S ORDIALOG(PROMPT,"A")="Quantity"_$S($L($G(ORQTYUNT)):" ("_ORQTYUNT_"): ",1:": ")
"DATA",101.41,174,10,9,0)
7^148^^Pick Up: ^^1^^^RC
"DATA",101.41,174,10,9,1)
Enter if the patient is to receive this medication by mail, at the window, or in the clinic.
"DATA",101.41,174,10,9,3)
I ORCAT="O"
"DATA",101.41,174,10,9,6)
D SETLIST^ORCD
"DATA",101.41,174,10,9,7)
I ORCAT="O",$G(ORTYPE)'="Z" S Y=$S($G(OREVENT):"W",$D(^PSX(550,"C")):"M",1:"W") I $D(^TMP("ORECALL",$J,ORDIALOG,PROMPT,INST)) S Y=^(INST),EDITONLY=1
"DATA",101.41,174,10,10,0)
6^150^^Refills: ^^1^^^RC
"DATA",101.41,174,10,10,1)
Enter the number of refills to allow for this order.
"DATA",101.41,174,10,10,2)
9^^^Refills:
"DATA",101.41,174,10,10,3)
I ORCAT="O",$G(OREFILLS)>0
"DATA",101.41,174,10,10,9)
I ORCAT="O",'$G(OREFILLS) D MAXREFS^ORCDPS1
"DATA",101.41,174,10,11,0)
9^151^^Is this medication for a SC condition? ^^^^^CW^^^^SC: 
"DATA",101.41,174,10,11,1)
If this medication is for treatment of a service-connected condition, enter YES.
"DATA",101.41,174,10,11,3)
I ORCAT="O",$G(ORCOPAY),$G(ORSC)
"DATA",101.41,174,10,11,6)
N DFN S DFN=+ORVP D DIS^DGRPDB
"DATA",101.41,174,10,11,7)
I $G(ORTYPE)'="Z",ORCAT="O",$G(ORCOPAY),$G(ORSC) S Y=$S($P(ORSC,U,2)>50:1,1:0)
"DATA",101.41,174,10,11,9)
I ORCAT="O" S ORCOPAY=$$ASKSC^ORCDPS1 I ORCOPAY,$G(ORSC),'$D(ORDIALOG(PROMPT,INST)) N DFN S DFN=+ORVP D:$P(ORSC,U,2)'>50 DIS^DGRPDB S:$P(ORSC,U,2)>50 $P(ORDIALOG(PROMPT,0),U)="YA",EDITONLY=1 ; Req'd
"DATA",101.41,174,10,12,0)
2.3^153^^How long: ^^^^^C^^136
"DATA",101.41,174,10,12,1)
Enter the length of time over which this dose is to be administered as '4 HOURS', '7 DAYS', '2 WEEKS', or '1 MONTH'.
"DATA",101.41,174,10,12,2)
^^^FOR
"DATA",101.41,174,10,12,3)
I $$ASKDUR^ORCDPS3
"DATA",101.41,174,10,12,5)
D DUR^ORCDPS3
"DATA",101.41,174,10,12,7)
Q  I $G(ORTYPE)'="Z",$G(ORCAT)="I",$G(ORCOMPLX),$P($G(ORSD),U,3) S Y=+$P(ORSD,U,3)_" DAYS"
"DATA",101.41,174,10,13,0)
4^6^^Start: ^^^^1^C
"DATA",101.41,174,10,13,1)
Enter the date this order should begin.
"DATA",101.41,174,10,13,3)
I $G(ORCAT)="O",$G(OREVENT) ;discharge orders only
"DATA",101.41,174,10,13,7)
Q  I $G(ORTYPE)'="Z",ORCAT'="O" S Y=$P($G(ORSD),U) K:'$L(Y) Y
"DATA",101.41,174,10,13,9)
D START^ORCDPS3 ;I 'FIRST,$G(ORDIALOG(PROMPT,"LIST")),'$O(ORDIALOG(PROMPT,0)) D LIST^ORCD ;editonly
"DATA",101.41,174,10,14,0)
3^385^^Text: 
"DATA",101.41,174,10,14,2)
2^^^^^1^0
"DATA",101.41,174,10,14,3)
I 0 ;created by Instructions, if Outpt order
"DATA",101.41,174,10,15,0)
2.5^386^^^^^^^*^^136
"DATA",101.41,174,10,15,2)
^@
"DATA",101.41,174,10,15,3)
I 0 ;created by Instructions
"DATA",101.41,174,10,15,7)
S Y=$$ID^ORCDPS K:'$L(Y) Y
"DATA",101.41,174,10,16,0)
2.6^138^^^^^^^*
"DATA",101.41,174,10,16,3)
I 0 ;created by Instructions
"DATA",101.41,174,10,17,0)
5^387^^^^1^^^C
"DATA",101.41,174,10,17,1)
Enter the number of days for which the patient needs this medication.
"DATA",101.41,174,10,17,3)
I $G(ORCAT)="O"
"DATA",101.41,174,10,17,5)
I $G(ORESET),+ORESET'=+Y D CHANGED^ORCDPS1("DS")
"DATA",101.41,174,10,17,9)
I $G(ORCAT)="O" D DSUP^ORCDPS1
"DATA",101.41,174,10,17,10)
S:$G(ORCAT)="O" ORDSUP=+$G(ORDIALOG(PROMPT,INST))
"DATA",101.41,174,10,18,0)
1.5^1350
"DATA",101.41,174,10,18,2)
1.5
"DATA",101.41,174,10,18,3)
I 0 ;stuffed in via Instructions
"DATA",101.41,174,10,19,0)
2.4^388^^^^^^^C^^136
"DATA",101.41,174,10,19,.1)
D INPCONJ^ORCDPS1
"DATA",101.41,174,10,19,1)
Enter AND if the next dose is to be administered concurrently with this one, or THEN if it is to follow after.
"DATA",101.41,174,10,19,3)
I $G(ORCOMPLX)
"DATA",101.41,174,10,19,5)
I $G(ORESET)'=$P(Y,U) D CHANGED^ORCDPS1("QUANTITY")
"DATA",101.41,174,10,19,9)
D ENCONJ^ORCDPS1
"DATA",101.41,174,10,19,10)
I $G(ORCOMPLX),'$L($G(ORDIALOG(PROMPT,INST))),FIRST S MAX=1 ;stop prompting dose multiple
"DATA",101.41,174,10,20,0)
3.5^1358^^^^^^^C
"DATA",101.41,174,10,20,2)
3
"DATA",101.41,174,10,20,3)
I 0 ;text stuffed via Entry Action
"DATA",101.41,174,10,20,9)
D PI^ORCDPS2
"DATA",101.41,174,10,21,0)
4.5^1359
"DATA",101.41,174,10,21,2)
10^^^First Dose^^1
"DATA",101.41,174,10,21,3)
I 0 ;set via Entry Action
"DATA",101.41,174,10,21,9)
D NOW^ORCDPS3
"DATA",101.41,174,10,22,0)
11^1615
"DATA",101.41,174,10,22,2)
6.5
"DATA",101.41,174,10,23,0)
2.7^15813^^^^^^^*^^136
"DATA",101.41,174,10,23,2)
^@
"DATA",101.41,174,10,23,3)
I 0 ;from Schedule
"DATA",101.41,174,10,24,0)
2.8^716^^^^^^^*^^136
"DATA",101.41,174,10,24,3)
I 0
"DATA",101.41,174,99)
61814,28145
"DATA",101.41,15730,0)
OR GTX ADDITIVE FREQUENCY^Additive Frequency:^^P
"DATA",101.41,15730,1)
F^^ADDFREQ
"DATA",101.41,15730,99)
61814,28145
"DATA",101.41,15820,0)
OR GTX EARLIEST DATE^Earliest appropriate date:^^P^^^170
"DATA",101.41,15820,1)
R^TODAY::EX^EARLIEST
"DATA",101.41,15820,99)
61814,28145
"FIA",100)
ORDER
"FIA",100,0)
^OR(100,
"FIA",100,0,0)
100I
"FIA",100,0,1)
y^n^f^^^^n
"FIA",100,0,10)

"FIA",100,0,11)

"FIA",100,0,"RLRO")

"FIA",100,0,"VR")
3.0^OR
"FIA",100,100)
0
"FIA",100,100.001)
0
"FIA",100,100.002)
0
"FIA",100,100.008)
0
"FIA",100,100.0081)
0
"FIA",100,100.0082)
0
"FIA",100,100.0085)
0
"FIA",100,100.045)
0
"FIA",100,100.0451)
0
"FIA",100,100.051)
0
"FIA",100,100.09)
0
"FIA",100.05)
ORDER CHECK INSTANCES
"FIA",100.05,0)
^ORD(100.05,
"FIA",100.05,0,0)
100.05P
"FIA",100.05,0,1)
y^y^f^^^^n
"FIA",100.05,0,10)

"FIA",100.05,0,11)

"FIA",100.05,0,"RLRO")

"FIA",100.05,0,"VR")
3.0^OR
"FIA",100.05,100.05)
0
"FIA",100.05,100.515)
0
"FIA",100.05,100.57)
0
"FIA",100.05,100.58)
0
"FIA",100.5)
OE/RR RELEASE EVENTS
"FIA",100.5,0)
^ORD(100.5,
"FIA",100.5,0,0)
100.5I
"FIA",100.5,0,1)
y^n^p^^^^n^^n
"FIA",100.5,0,10)

"FIA",100.5,0,11)

"FIA",100.5,0,"RLRO")

"FIA",100.5,0,"VR")
3.0^OR
"FIA",100.5,100.5)
1
"FIA",100.5,100.5,2)

"FIA",101.41)
ORDER DIALOG
"FIA",101.41,0)
^ORD(101.41,
"FIA",101.41,0,0)
101.41I
"FIA",101.41,0,1)
n^n^f^^y^^y^r^n
"FIA",101.41,0,10)

"FIA",101.41,0,11)
I $$SENDDLG^ORY280($P(^(0),U))
"FIA",101.41,0,"RLRO")

"FIA",101.41,0,"VR")
3.0^OR
"FIA",101.41,101.41)
0
"FIA",101.41,101.411)
0
"FIA",101.41,101.412)
0
"FIA",101.41,101.41218)
0
"FIA",101.41,101.415)
0
"FIA",101.41,101.416)
0
"FIA",101.41,101.4162)
0
"FIA",101.43)
ORDERABLE ITEMS
"FIA",101.43,0)
^ORD(101.43,
"FIA",101.43,0,0)
101.43
"FIA",101.43,0,1)
y^n^f^^^^n
"FIA",101.43,0,10)

"FIA",101.43,0,11)

"FIA",101.43,0,"RLRO")

"FIA",101.43,0,"VR")
3.0^OR
"FIA",101.43,101.43)
0
"FIA",101.43,101.431)
0
"FIA",101.43,101.432)
0
"FIA",101.43,101.438)
0
"FIA",101.43,101.439)
0
"FRV1",101.41,"129,0",5)
UNIT DOSE MEDICATIONS
"FRV1",101.41,"129,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"129,0",7)
INPATIENT MEDICATIONS
"FRV1",101.41,"129,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"129,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"129,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,10,0",2)
OR GTX REFILLS
"FRV1",101.41,"129,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,11,0",2)
OR GTX SERVICE CONNECTED
"FRV1",101.41,"129,10,11,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,12,0",2)
OR GTX DURATION
"FRV1",101.41,"129,10,12,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,12,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"129,10,12,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,13,0",2)
OR GTX START DATE/TIME
"FRV1",101.41,"129,10,13,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,14,0",2)
OR GTX SIG
"FRV1",101.41,"129,10,14,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,15,0",2)
OR GTX DOSE
"FRV1",101.41,"129,10,15,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,15,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"129,10,15,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,16,0",2)
OR GTX DISPENSE DRUG
"FRV1",101.41,"129,10,16,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,17,0",2)
OR GTX DAYS SUPPLY
"FRV1",101.41,"129,10,17,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,18,0",2)
OR GTX DRUG NAME
"FRV1",101.41,"129,10,18,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,19,0",2)
OR GTX AND/THEN
"FRV1",101.41,"129,10,19,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,19,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"129,10,19,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,2,0",2)
OR GTX INSTRUCTIONS
"FRV1",101.41,"129,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,20,0",2)
OR GTX PATIENT INSTRUCTIONS
"FRV1",101.41,"129,10,20,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,21,0",2)
OR GTX NOW
"FRV1",101.41,"129,10,21,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,22,0",2)
OR GTX ADMIN TIMES
"FRV1",101.41,"129,10,22,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,22,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"129,10,22,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,23,0",2)
OR GTX SCHEDULE TYPE
"FRV1",101.41,"129,10,23,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,23,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"129,10,23,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,3,0",2)
OR GTX ROUTE
"FRV1",101.41,"129,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,3,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"129,10,3,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,4,0",2)
OR GTX SCHEDULE
"FRV1",101.41,"129,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,4,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"129,10,4,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,5,0",2)
OR GTX URGENCY
"FRV1",101.41,"129,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,6,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"129,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,7,0",2)
OR GTX STRENGTH
"FRV1",101.41,"129,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,7,0",11)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"129,10,7,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,8,0",2)
OR GTX QUANTITY
"FRV1",101.41,"129,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"129,10,9,0",2)
OR GTX ROUTING
"FRV1",101.41,"129,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,0",5)
IV MEDICATIONS
"FRV1",101.41,"130,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"130,0",7)
INPATIENT MEDICATIONS
"FRV1",101.41,"130,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"130,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"130,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,10,0",2)
OR GTX VOLUME
"FRV1",101.41,"130,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,10,0",11)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"130,10,10,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,11,0",2)
OR GTX URGENCY
"FRV1",101.41,"130,10,11,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,12,0",2)
OR GTX SCHEDULE
"FRV1",101.41,"130,10,12,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,13,0",2)
OR GTX DURATION
"FRV1",101.41,"130,10,13,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,14,0",2)
OR GTX IV TYPE
"FRV1",101.41,"130,10,14,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,15,0",2)
OR GTX ROUTE
"FRV1",101.41,"130,10,15,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,16,0",2)
OR GTX ADMIN TIMES
"FRV1",101.41,"130,10,16,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,17,0",2)
OR GTX NOW
"FRV1",101.41,"130,10,17,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,18,0",2)
OR GTX ADDITIVE FREQUENCY
"FRV1",101.41,"130,10,18,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,18,0",11)
OR GTX ADDITIVE
"FRV1",101.41,"130,10,18,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,2,0",2)
OR GTX ADDITIVE
"FRV1",101.41,"130,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,3,0",2)
OR GTX STRENGTH PSIV
"FRV1",101.41,"130,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,3,0",11)
OR GTX ADDITIVE
"FRV1",101.41,"130,10,3,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,5,0",2)
OR GTX INFUSION RATE
"FRV1",101.41,"130,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,7,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"130,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,9,0",2)
OR GTX UNITS
"FRV1",101.41,"130,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"130,10,9,0",11)
OR GTX ADDITIVE
"FRV1",101.41,"130,10,9,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"147,0",5)
OUTPATIENT MEDICATIONS
"FRV1",101.41,"147,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"147,0",7)
OUTPATIENT PHARMACY
"FRV1",101.41,"147,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"147,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"147,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,10,0",2)
OR GTX REFILLS
"FRV1",101.41,"147,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,11,0",2)
OR GTX SERVICE CONNECTED
"FRV1",101.41,"147,10,11,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,12,0",2)
OR GTX DURATION
"FRV1",101.41,"147,10,12,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,12,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"147,10,12,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,13,0",2)
OR GTX START DATE/TIME
"FRV1",101.41,"147,10,13,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,14,0",2)
OR GTX SIG
"FRV1",101.41,"147,10,14,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,15,0",2)
OR GTX DOSE
"FRV1",101.41,"147,10,15,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,15,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"147,10,15,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,16,0",2)
OR GTX DISPENSE DRUG
"FRV1",101.41,"147,10,16,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,17,0",2)
OR GTX DAYS SUPPLY
"FRV1",101.41,"147,10,17,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,18,0",2)
OR GTX DRUG NAME
"FRV1",101.41,"147,10,18,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,19,0",2)
OR GTX AND/THEN
"FRV1",101.41,"147,10,19,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,19,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"147,10,19,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,2,0",2)
OR GTX INSTRUCTIONS
"FRV1",101.41,"147,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,20,0",2)
OR GTX PATIENT INSTRUCTIONS
"FRV1",101.41,"147,10,20,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,21,0",2)
OR GTX NOW
"FRV1",101.41,"147,10,21,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,3,0",2)
OR GTX ROUTE
"FRV1",101.41,"147,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,3,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"147,10,3,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,4,0",2)
OR GTX SCHEDULE
"FRV1",101.41,"147,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,4,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"147,10,4,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,5,0",2)
OR GTX URGENCY
"FRV1",101.41,"147,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,6,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"147,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,7,0",2)
OR GTX STRENGTH
"FRV1",101.41,"147,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,7,0",11)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"147,10,7,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,8,0",2)
OR GTX QUANTITY
"FRV1",101.41,"147,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"147,10,9,0",2)
OR GTX ROUTING
"FRV1",101.41,"147,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"15820,0",7)
ORDER ENTRY/RESULTS REPORTING
"FRV1",101.41,"15820,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"174,0",5)
PHARMACY
"FRV1",101.41,"174,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"174,0",7)
PHARMACY DATA MANAGEMENT
"FRV1",101.41,"174,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"174,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"174,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,10,0",2)
OR GTX REFILLS
"FRV1",101.41,"174,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,11,0",2)
OR GTX SERVICE CONNECTED
"FRV1",101.41,"174,10,11,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,12,0",2)
OR GTX DURATION
"FRV1",101.41,"174,10,12,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,12,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"174,10,12,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,13,0",2)
OR GTX START DATE/TIME
"FRV1",101.41,"174,10,13,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,14,0",2)
OR GTX SIG
"FRV1",101.41,"174,10,14,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,15,0",2)
OR GTX DOSE
"FRV1",101.41,"174,10,15,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,15,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"174,10,15,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,16,0",2)
OR GTX DISPENSE DRUG
"FRV1",101.41,"174,10,16,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,17,0",2)
OR GTX DAYS SUPPLY
"FRV1",101.41,"174,10,17,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,18,0",2)
OR GTX DRUG NAME
"FRV1",101.41,"174,10,18,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,19,0",2)
OR GTX AND/THEN
"FRV1",101.41,"174,10,19,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,19,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"174,10,19,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,2,0",2)
OR GTX INSTRUCTIONS
"FRV1",101.41,"174,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,20,0",2)
OR GTX PATIENT INSTRUCTIONS
"FRV1",101.41,"174,10,20,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,21,0",2)
OR GTX NOW
"FRV1",101.41,"174,10,21,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,22,0",2)
OR GTX STATEMENTS
"FRV1",101.41,"174,10,22,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,23,0",2)
OR GTX ADMIN TIMES
"FRV1",101.41,"174,10,23,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,23,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"174,10,23,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,24,0",2)
OR GTX SCHEDULE TYPE
"FRV1",101.41,"174,10,24,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,24,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"174,10,24,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,3,0",2)
OR GTX ROUTE
"FRV1",101.41,"174,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,3,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"174,10,3,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,4,0",2)
OR GTX SCHEDULE
"FRV1",101.41,"174,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,4,0",11)
OR GTX INSTRUCTIONS
"FRV1",101.41,"174,10,4,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,5,0",2)
OR GTX URGENCY
"FRV1",101.41,"174,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,6,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"174,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,7,0",2)
OR GTX STRENGTH
"FRV1",101.41,"174,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,7,0",11)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"174,10,7,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,8,0",2)
OR GTX QUANTITY
"FRV1",101.41,"174,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"174,10,9,0",2)
OR GTX ROUTING
"FRV1",101.41,"174,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,0",5)
CONSULTS
"FRV1",101.41,"51,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"51,0",7)
CONSULT/REQUEST TRACKING
"FRV1",101.41,"51,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"51,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"51,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,10,0",2)
OR GTX EARLIEST DATE
"FRV1",101.41,"51,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,2,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"51,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,3,0",2)
OR GTX CATEGORY
"FRV1",101.41,"51,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,4,0",2)
OR GTX URGENCY
"FRV1",101.41,"51,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,5,0",2)
OR GTX PLACE OF CONSULTATION
"FRV1",101.41,"51,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,6,0",2)
OR GTX PROVIDER
"FRV1",101.41,"51,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,7,0",2)
OR GTX FREE TEXT
"FRV1",101.41,"51,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,8,0",2)
OR GTX FREE TEXT OI
"FRV1",101.41,"51,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,9,0",2)
OR GTX CODE
"FRV1",101.41,"51,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"51,10,9,0",11)
OR GTX FREE TEXT
"FRV1",101.41,"51,10,9,0",11,"F")
;ORD(101.41,
"FRV1",101.41,"52,0",5)
PROCEDURES
"FRV1",101.41,"52,0",5,"F")
;ORD(100.98,
"FRV1",101.41,"52,0",7)
CONSULT/REQUEST TRACKING
"FRV1",101.41,"52,0",7,"F")
;DIC(9.4,
"FRV1",101.41,"52,10,1,0",2)
OR GTX ORDERABLE ITEM
"FRV1",101.41,"52,10,1,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,10,0",2)
OR GTX EARLIEST DATE
"FRV1",101.41,"52,10,10,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,2,0",2)
OR GTX WORD PROCESSING 1
"FRV1",101.41,"52,10,2,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,3,0",2)
OR GTX CATEGORY
"FRV1",101.41,"52,10,3,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,4,0",2)
OR GTX URGENCY
"FRV1",101.41,"52,10,4,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,5,0",2)
OR GTX PLACE OF CONSULTATION
"FRV1",101.41,"52,10,5,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,6,0",2)
OR GTX PROVIDER
"FRV1",101.41,"52,10,6,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,7,0",2)
OR GTX FREE TEXT
"FRV1",101.41,"52,10,7,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,8,0",2)
OR GTX REQUEST SERVICE
"FRV1",101.41,"52,10,8,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,9,0",2)
OR GTX CODE
"FRV1",101.41,"52,10,9,0",2,"F")
;ORD(101.41,
"FRV1",101.41,"52,10,9,0",11)
OR GTX FREE TEXT
"FRV1",101.41,"52,10,9,0",11,"F")
;ORD(101.41,
"INIT")
POST^ORY280
"IX",100,100,"AEVNT",0)
100^AEVNT^Orders delayed for release until Event occurs^R^^R^IR^I^100^^^^^S
"IX",100,100,"AEVNT",1)
S ^OR(100,"AEVNT",X(1),X(2),DA)=""
"IX",100,100,"AEVNT",2)
K ^OR(100,"AEVNT",X(1),X(2),DA)
"IX",100,100,"AEVNT",2.5)
K ^OR(100,"AEVNT")
"IX",100,100,"AEVNT",11.1,0)
^.114IA^2^2
"IX",100,100,"AEVNT",11.1,1,0)
1^F^100^.02^^1^F
"IX",100,100,"AEVNT",11.1,1,3)

"IX",100,100,"AEVNT",11.1,2,0)
2^F^100^15^^2^F
"IX",100,100,"AEVNT",11.1,2,3)

"IX",100,100,"ARS",0)
100^ARS^Orders with results, in reverse-chronological sequence^R^^R^IR^I^100^^^^^S
"IX",100,100,"ARS",1)
S ^OR(100,"ARS",X(1),X(2),DA)=""
"IX",100,100,"ARS",2)
K ^OR(100,"ARS",X(1),X(2),DA)
"IX",100,100,"ARS",2.5)
K ^OR(100,"ARS")
"IX",100,100,"ARS",11.1,0)
^.114IA^2^2
"IX",100,100,"ARS",11.1,1,0)
1^F^100^.02^^1^F
"IX",100,100,"ARS",11.1,1,3)

"IX",100,100,"ARS",11.1,2,0)
2^F^100^71^^2^F
"IX",100,100,"ARS",11.1,2,2)
S X=9999999-X
"IX",100,100,"ARS",11.1,2,3)

"IX",100.05,100.05,"C",0)
100.05^C^USED FOR FINDING ORDER CHECKS BASED ON OCCURENCE^R^^R^IR^I^100.05^^^^^LS
"IX",100.05,100.05,"C",.1,0)
^^2^2^3090121^
"IX",100.05,100.05,"C",.1,1,0)
This Index is used to increase the performance of the lookup of order 
"IX",100.05,100.05,"C",.1,2,0)
check instances based on the Occurrence descriptor and the Order number.
"IX",100.05,100.05,"C",1)
S ^ORD(100.05,"C",X(1),$E(X(2),1,30),DA)=""
"IX",100.05,100.05,"C",2)
K ^ORD(100.05,"C",X(1),$E(X(2),1,30),DA)
"IX",100.05,100.05,"C",2.5)
K ^ORD(100.05,"C")
"IX",100.05,100.05,"C",11.1,0)
^.114IA^2^2
"IX",100.05,100.05,"C",11.1,1,0)
1^F^100.05^.01^^1^F
"IX",100.05,100.05,"C",11.1,2,0)
2^F^100.05^2^30^2^F
"IX",100.05,100.05,"D",0)
100.05^D^USED FOR FINDING ORDER CHECKS BASED ON OC TYPE^R^^F^IR^I^100.05^^^^^LS
"IX",100.05,100.05,"D",1)
S ^ORD(100.05,"D",X,DA)=""
"IX",100.05,100.05,"D",2)
K ^ORD(100.05,"D",X,DA)
"IX",100.05,100.05,"D",2.5)
K ^ORD(100.05,"D")
"IX",100.05,100.05,"D",11.1,0)
^.114IA^2^1
"IX",100.05,100.05,"D",11.1,2,0)
1^F^100.05^5^^1^F
"IX",100.05,100.05,"D",11.1,2,3)

"IX",101.41,101.41,"B",0)
101.41^B^Regular B index using full field length^R^^F^IR^I^101.41^^^^^LS
"IX",101.41,101.41,"B",1)
S ^ORD(101.41,"B",$E(X,1,63),DA)=""
"IX",101.41,101.41,"B",2)
K ^ORD(101.41,"B",$E(X,1,63),DA)
"IX",101.41,101.41,"B",2.5)
K ^ORD(101.41,"B")
"IX",101.41,101.41,"B",11.1,0)
^.114IA^1^1
"IX",101.41,101.41,"B",11.1,1,0)
1^F^101.41^.01^63^1^F
"KRN",3.6,274,-1)
0^1
"KRN",3.6,274,0)
OR PROBLEM NTRT BULLETIN^NEW PROBLEM/DIAGNOSIS TERM REQUEST^
"KRN",3.6,274,1,0)
^3.61A^32^32^3080115^^^
"KRN",3.6,274,1,1,0)
                *** New Problem/Diagnosis Term Request ***
"KRN",3.6,274,1,2,0)
 
"KRN",3.6,274,1,3,0)
      Requested term: |1|
"KRN",3.6,274,1,4,0)
Date/Time of request: |2|
"KRN",3.6,274,1,5,0)
   Name of requester: |3| 
"KRN",3.6,274,1,6,0)
             Service: |4|
"KRN",3.6,274,1,7,0)
            Location: |5|
"KRN",3.6,274,1,8,0)
 
"KRN",3.6,274,1,9,0)
A New Term Rapid Turnaround (NTRT) mail message has been sent to you 
"KRN",3.6,274,1,10,0)
because a user from your facility has failed to find a suitable term 
"KRN",3.6,274,1,11,0)
after initiating the search options within the Problem List application 
"KRN",3.6,274,1,12,0)
and has chosen to request a new term to be added to the Problem List 
"KRN",3.6,274,1,13,0)
subset. 
"KRN",3.6,274,1,14,0)
 
"KRN",3.6,274,1,15,0)
Please review the requested term and verify it is understandable, 
"KRN",3.6,274,1,16,0)
clinically useful, and does not already exist within the Problem List 
"KRN",3.6,274,1,17,0)
subset. If the term is found appropriate, then submit a NTRT request at 
"KRN",3.6,274,1,18,0)
the NTRT website, http://hdrmul7.aac.va.gov:7151/ntrt.
"KRN",3.6,274,1,19,0)
 
"KRN",3.6,274,1,20,0)
The Problem List domain steward will review each request and respond to 
"KRN",3.6,274,1,21,0)
you with the outcome of this request. If the term is approved by the 
"KRN",3.6,274,1,22,0)
Problem List NTRT committee it will be added to the Problem List subset 
"KRN",3.6,274,1,23,0)
and made available within future searches.  
"KRN",3.6,274,1,24,0)
 
"KRN",3.6,274,1,25,0)
The progress of this request may be monitored by accessing the NTRT 
"KRN",3.6,274,1,26,0)
website at http://hdrmul7.aac.va.gov:7151/ntrt.
"KRN",3.6,274,1,27,0)
 
"KRN",3.6,274,1,28,0)
If you have questions, need more information, or are having accessibility 
"KRN",3.6,274,1,29,0)
problems with this website, please contact STS by Exchange E-Mail: [VHA 
"KRN",3.6,274,1,30,0)
OI HDI STS NTRT], Phone: 801-924-2163, or by FAX: 801-588-5003.
"KRN",3.6,274,1,31,0)
 
"KRN",3.6,274,1,32,0)
Thank-you.
"KRN",3.6,274,3,0)
^3.63^15^15^3080115^^^^
"KRN",3.6,274,3,1,0)
This bulletin will be delivered to the OR CACS Mail Group. It informs the 
"KRN",3.6,274,3,2,0)
group that a new NTRT Request has been initiated by a Clinician at their 
"KRN",3.6,274,3,3,0)
facility. Upon receipt, the CACs should discuss the request internally, 
"KRN",3.6,274,3,4,0)
and with their local Medical Records Committee. If the group concurs, they
"KRN",3.6,274,3,5,0)
should file an official NTRT request for the the new term/expression at
"KRN",3.6,274,3,6,0)
the NTRT website: 
"KRN",3.6,274,3,7,0)
 
"KRN",3.6,274,3,8,0)
http://hdrmul7.aac.va.gov:7151/ntrt/. 
"KRN",3.6,274,3,9,0)
 
"KRN",3.6,274,3,10,0)
The NTRT Terminology Stewards for the Problem List Domain will consider
"KRN",3.6,274,3,11,0)
the request, and inform the facility of their decision as to whether the
"KRN",3.6,274,3,12,0)
new term should be added to the Enterprise Terminology.
"KRN",3.6,274,3,13,0)
 
"KRN",3.6,274,3,14,0)
If the local group does not concur with the request, they should defer
"KRN",3.6,274,3,15,0)
filing an NTRT Request, and discuss the decision with the requester.
"KRN",3.6,274,4,0)
^3.64A^5^5
"KRN",3.6,274,4,1,0)
1
"KRN",3.6,274,4,1,1,0)
^^1^1^3071207^
"KRN",3.6,274,4,1,1,1,0)
Text of the unresolved term or expression.
"KRN",3.6,274,4,2,0)
2
"KRN",3.6,274,4,2,1,0)
^^1^1^3071207^
"KRN",3.6,274,4,2,1,1,0)
Date/Time of the request.
"KRN",3.6,274,4,3,0)
3
"KRN",3.6,274,4,3,1,0)
^3.65^1^1^3071207^^
"KRN",3.6,274,4,3,1,1,0)
Name of Requester.
"KRN",3.6,274,4,4,0)
4
"KRN",3.6,274,4,4,1,0)
^3.65^1^1^3071207^^
"KRN",3.6,274,4,4,1,1,0)
Hospital Service with which the requester is associated.
"KRN",3.6,274,4,5,0)
5
"KRN",3.6,274,4,5,1,0)
^3.65^1^1^3080115^^^^
"KRN",3.6,274,4,5,1,1,0)
Location (i.e., Facility) where the request originated.
"KRN",3.8,356,-1)
0^1
"KRN",3.8,356,0)
OR CACS^PU^n^^^^
"KRN",3.8,356,2,0)
^3.801^2^2^3070802^^^^
"KRN",3.8,356,2,1,0)
This Mail Group identifies the Clinical Applications Coordinators at the 
"KRN",3.8,356,2,2,0)
facility.
"KRN",3.8,356,3)

"KRN",19,10989,-1)
0^1
"KRN",19,10989,0)
OR CPRS GUI CHART^CPRSChart version 1.0.28.24^^B^^^^^^^^
"KRN",19,10989,1,0)
^19.06^2^2^3100503^^^^
"KRN",19,10989,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,10989,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,10989,99)
60921,44613
"KRN",19,10989,99.1)
62047,59652
"KRN",19,10989,"RPC",0)
^19.05P^2097^2097
"KRN",19,10989,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,10989,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,10989,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,10989,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,10989,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,10989,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,10989,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,10989,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,10989,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,10989,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,10989,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,10989,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,10989,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,10989,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,10989,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,10989,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,10989,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,10989,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,10989,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,10989,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,10989,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,10989,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,10989,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,10989,"RPC",240,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,10989,"RPC",241,0)
TIU LONG LIST OF TITLES
"KRN",19,10989,"RPC",242,0)
TIU NOTES
"KRN",19,10989,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,10989,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,10989,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,10989,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,10989,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,10989,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,10989,"RPC",249,0)
TIU SUMMARIES
"KRN",19,10989,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,10989,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,10989,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,10989,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,10989,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,10989,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,10989,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,10989,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,10989,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,10989,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,10989,"RPC",1037,0)
ORK TRIGGER
"KRN",19,10989,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,10989,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,10989,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,10989,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,10989,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,10989,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,10989,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,10989,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,10989,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,10989,"RPC",1052,0)
ORQOR LIST
"KRN",19,10989,"RPC",1053,0)
ORQORB SORT
"KRN",19,10989,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,10989,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,10989,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,10989,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,10989,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,10989,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,10989,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,10989,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,10989,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,10989,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,10989,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,10989,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,10989,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,10989,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,10989,"RPC",1068,0)
ORQPT WARDS
"KRN",19,10989,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,10989,"RPC",1070,0)
ORQQAL LIST
"KRN",19,10989,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,10989,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,10989,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,10989,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,10989,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,10989,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,10989,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,10989,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,10989,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,10989,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,10989,"RPC",1081,0)
ORQQCN LIST
"KRN",19,10989,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,10989,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,10989,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,10989,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,10989,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,10989,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,10989,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,10989,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,10989,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,10989,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,10989,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,10989,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,10989,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,10989,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,10989,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,10989,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,10989,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,10989,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,10989,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,10989,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,10989,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,10989,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,10989,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,10989,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,10989,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,10989,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,10989,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,10989,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,10989,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,10989,"RPC",1111,0)
ORQQPL LIST
"KRN",19,10989,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,10989,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,10989,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,10989,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,10989,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,10989,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,10989,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,10989,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,10989,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,10989,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,10989,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,10989,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,10989,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,10989,"RPC",1125,0)
ORQQPP LIST
"KRN",19,10989,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,10989,"RPC",1127,0)
ORQQPS LIST
"KRN",19,10989,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,10989,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,10989,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,10989,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,10989,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,10989,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,10989,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,10989,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,10989,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,10989,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,10989,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,10989,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,10989,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,10989,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,10989,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,10989,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,10989,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,10989,"RPC",1152,0)
ORQQXQA USER
"KRN",19,10989,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,10989,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,10989,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,10989,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,10989,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,10989,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,10989,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,10989,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,10989,"RPC",1161,0)
ORWCV LAB
"KRN",19,10989,"RPC",1162,0)
ORWCV POLL
"KRN",19,10989,"RPC",1163,0)
ORWCV START
"KRN",19,10989,"RPC",1164,0)
ORWCV STOP
"KRN",19,10989,"RPC",1165,0)
ORWCV VST
"KRN",19,10989,"RPC",1166,0)
ORWD DEF
"KRN",19,10989,"RPC",1167,0)
ORWD DT
"KRN",19,10989,"RPC",1168,0)
ORWD FORMID
"KRN",19,10989,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,10989,"RPC",1170,0)
ORWD KEY
"KRN",19,10989,"RPC",1171,0)
ORWD OI
"KRN",19,10989,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,10989,"RPC",1173,0)
ORWD SAVE
"KRN",19,10989,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,10989,"RPC",1175,0)
ORWD SIGN
"KRN",19,10989,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,10989,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,10989,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,10989,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,10989,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,10989,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,10989,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,10989,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,10989,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,10989,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,10989,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,10989,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,10989,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,10989,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,10989,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,10989,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,10989,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,10989,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,10989,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,10989,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,10989,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,10989,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,10989,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,10989,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,10989,"RPC",1200,0)
ORWDFH TXT
"KRN",19,10989,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,10989,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,10989,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,10989,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,10989,"RPC",1205,0)
ORWDLR DEF
"KRN",19,10989,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,10989,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,10989,"RPC",1208,0)
ORWDLR STOP
"KRN",19,10989,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,10989,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,10989,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,10989,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,10989,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,10989,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,10989,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,10989,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,10989,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,10989,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,10989,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,10989,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,10989,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,10989,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,10989,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,10989,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,10989,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,10989,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,10989,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,10989,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,10989,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,10989,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,10989,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,10989,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,10989,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,10989,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,10989,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,10989,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,10989,"RPC",1241,0)
ORWDRA DEF
"KRN",19,10989,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,10989,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,10989,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,10989,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,10989,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,10989,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,10989,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,10989,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,10989,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,10989,"RPC",1251,0)
ORWDX DGRP
"KRN",19,10989,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,10989,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,10989,"RPC",1254,0)
ORWDX DLGID
"KRN",19,10989,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,10989,"RPC",1256,0)
ORWDX FORMID
"KRN",19,10989,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,10989,"RPC",1258,0)
ORWDX LOCK
"KRN",19,10989,"RPC",1259,0)
ORWDX MSG
"KRN",19,10989,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,10989,"RPC",1261,0)
ORWDX SAVE
"KRN",19,10989,"RPC",1262,0)
ORWDX SEND
"KRN",19,10989,"RPC",1263,0)
ORWDX SENDP
"KRN",19,10989,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,10989,"RPC",1265,0)
ORWDX WRLST
"KRN",19,10989,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,10989,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,10989,"RPC",1268,0)
ORWDXA DC
"KRN",19,10989,"RPC",1269,0)
ORWDX2 DCREASON
"KRN",19,10989,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,10989,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,10989,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,10989,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,10989,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,10989,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,10989,"RPC",1276,0)
ORWDXA VALID
"KRN",19,10989,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,10989,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,10989,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,10989,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,10989,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,10989,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,10989,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,10989,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,10989,"RPC",1285,0)
ORWDXC ON
"KRN",19,10989,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,10989,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,10989,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,10989,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,10989,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,10989,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,10989,"RPC",1292,0)
ORWDXM MENU
"KRN",19,10989,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,10989,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,10989,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,10989,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,10989,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,10989,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,10989,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,10989,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,10989,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,10989,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,10989,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,10989,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,10989,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,10989,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,10989,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,10989,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,10989,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,10989,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,10989,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,10989,"RPC",1312,0)
ORWLRR ATG
"KRN",19,10989,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,10989,"RPC",1314,0)
ORWLRR CHART
"KRN",19,10989,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,10989,"RPC",1316,0)
ORWLRR GRID
"KRN",19,10989,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,10989,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,10989,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,10989,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,10989,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,10989,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,10989,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,10989,"RPC",1324,0)
ORWLRR TG
"KRN",19,10989,"RPC",1325,0)
ORWLRR USERS
"KRN",19,10989,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,10989,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,10989,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,10989,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,10989,"RPC",1330,0)
ORWOR RESULT
"KRN",19,10989,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,10989,"RPC",1332,0)
ORWOR TSALL
"KRN",19,10989,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,10989,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,10989,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,10989,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,10989,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,10989,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,10989,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,10989,"RPC",1341,0)
ORWORDG IEN
"KRN",19,10989,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,10989,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,10989,"RPC",1344,0)
ORWORR AGET
"KRN",19,10989,"RPC",1345,0)
ORWORR GET
"KRN",19,10989,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,10989,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,10989,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,10989,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,10989,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,10989,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,10989,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,10989,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,10989,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,10989,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,10989,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,10989,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,10989,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,10989,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,10989,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,10989,"RPC",1361,0)
ORWPCE HF
"KRN",19,10989,"RPC",1362,0)
ORWPCE IMM
"KRN",19,10989,"RPC",1363,0)
ORWPCE LEX
"KRN",19,10989,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,10989,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,10989,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,10989,"RPC",1368,0)
ORWPCE PED
"KRN",19,10989,"RPC",1369,0)
ORWPCE PROC
"KRN",19,10989,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,10989,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,10989,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,10989,"RPC",1373,0)
ORWPCE SK
"KRN",19,10989,"RPC",1374,0)
ORWPCE TRT
"KRN",19,10989,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,10989,"RPC",1376,0)
ORWPCE XAM
"KRN",19,10989,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,10989,"RPC",1378,0)
ORWPS COVER
"KRN",19,10989,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,10989,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,10989,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,10989,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,10989,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,10989,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,10989,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,10989,"RPC",1386,0)
ORWPT CWAD
"KRN",19,10989,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,10989,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,10989,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,10989,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,10989,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,10989,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,10989,"RPC",1393,0)
ORWPT LAST5
"KRN",19,10989,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,10989,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,10989,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,10989,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,10989,"RPC",1398,0)
ORWPT SELECT
"KRN",19,10989,"RPC",1399,0)
ORWPT SHARE
"KRN",19,10989,"RPC",1400,0)
ORWPT TOP
"KRN",19,10989,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,10989,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,10989,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,10989,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,10989,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,10989,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,10989,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,10989,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,10989,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,10989,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,10989,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,10989,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,10989,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,10989,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,10989,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,10989,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,10989,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,10989,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,10989,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,10989,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,10989,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,10989,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,10989,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,10989,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,10989,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,10989,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,10989,"RPC",1427,0)
ORWU DEVICE
"KRN",19,10989,"RPC",1428,0)
ORWU DT
"KRN",19,10989,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,10989,"RPC",1430,0)
ORWU GBLREF
"KRN",19,10989,"RPC",1431,0)
ORWU GENERIC
"KRN",19,10989,"RPC",1432,0)
ORWU HASKEY
"KRN",19,10989,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,10989,"RPC",1434,0)
ORWU INPLOC
"KRN",19,10989,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,10989,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,10989,"RPC",1437,0)
ORWU PATCH
"KRN",19,10989,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,10989,"RPC",1439,0)
ORWU USERINFO
"KRN",19,10989,"RPC",1440,0)
ORWU VALDT
"KRN",19,10989,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,10989,"RPC",1442,0)
ORWU VERSRV
"KRN",19,10989,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,10989,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,10989,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,10989,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,10989,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,10989,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,10989,"RPC",1449,0)
ORWUH POPUP
"KRN",19,10989,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,10989,"RPC",1451,0)
ORWUXT LST
"KRN",19,10989,"RPC",1452,0)
ORWUXT REF
"KRN",19,10989,"RPC",1453,0)
ORWUXT VAL
"KRN",19,10989,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,10989,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,10989,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,10989,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,10989,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,10989,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,10989,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,10989,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,10989,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,10989,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,10989,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,10989,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,10989,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,10989,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,10989,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,10989,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,10989,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,10989,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,10989,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,10989,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,10989,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,10989,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,10989,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,10989,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,10989,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,10989,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,10989,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,10989,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,10989,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,10989,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,10989,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,10989,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,10989,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,10989,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,10989,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,10989,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,10989,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,10989,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,10989,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,10989,"RPC",1508,0)
ORWOR VWGET
"KRN",19,10989,"RPC",1509,0)
ORWOR VWSET
"KRN",19,10989,"RPC",1510,0)
ORWU PARAM
"KRN",19,10989,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,10989,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,10989,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,10989,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,10989,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,10989,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,10989,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,10989,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,10989,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,10989,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,10989,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,10989,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,10989,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,10989,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,10989,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,10989,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,10989,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,10989,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,10989,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,10989,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,10989,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,10989,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,10989,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,10989,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,10989,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,10989,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,10989,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,10989,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,10989,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,10989,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,10989,"RPC",1542,0)
ORWLRR INFO
"KRN",19,10989,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,10989,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,10989,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,10989,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,10989,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,10989,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,10989,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,10989,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,10989,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,10989,"RPC",1555,0)
YS GAF API
"KRN",19,10989,"RPC",1556,0)
TIU LONG LIST BOILERPLATED
"KRN",19,10989,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,10989,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,10989,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,10989,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,10989,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,10989,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,10989,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,10989,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,10989,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,10989,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,10989,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,10989,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,10989,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,10989,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,10989,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,10989,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,10989,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,10989,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,10989,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,10989,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,10989,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,10989,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,10989,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,10989,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,10989,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,10989,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,10989,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,10989,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,10989,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,10989,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,10989,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,10989,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,10989,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,10989,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,10989,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,10989,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,10989,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,10989,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,10989,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,10989,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,10989,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,10989,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,10989,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,10989,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,10989,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,10989,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,10989,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,10989,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,10989,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,10989,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,10989,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,10989,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,10989,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,10989,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,10989,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,10989,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,10989,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,10989,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,10989,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,10989,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,10989,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,10989,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,10989,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,10989,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,10989,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,10989,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,10989,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,10989,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,10989,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,10989,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,10989,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,10989,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,10989,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,10989,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,10989,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,10989,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,10989,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,10989,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,10989,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,10989,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,10989,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,10989,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,10989,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,10989,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,10989,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,10989,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,10989,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,10989,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,10989,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,10989,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,10989,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,10989,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,10989,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,10989,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,10989,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,10989,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,10989,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,10989,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,10989,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,10989,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,10989,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,10989,"RPC",1659,0)
ORWDX DGNM
"KRN",19,10989,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,10989,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,10989,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,10989,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,10989,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,10989,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,10989,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,10989,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,10989,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,10989,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,10989,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,10989,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,10989,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,10989,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,10989,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,10989,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,10989,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,10989,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,10989,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,10989,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,10989,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,10989,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,10989,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,10989,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,10989,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,10989,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,10989,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,10989,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,10989,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,10989,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,10989,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,10989,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,10989,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,10989,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,10989,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,10989,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,10989,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,10989,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,10989,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,10989,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,10989,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,10989,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,10989,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,10989,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,10989,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,10989,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,10989,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,10989,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,10989,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,10989,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,10989,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,10989,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,10989,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,10989,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,10989,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,10989,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,10989,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,10989,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,10989,"RPC",1720,0)
ORWSR LIST
"KRN",19,10989,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,10989,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,10989,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,10989,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,10989,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,10989,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,10989,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,10989,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,10989,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,10989,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,10989,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,10989,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,10989,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,10989,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,10989,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,10989,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,10989,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,10989,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,10989,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,10989,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,10989,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,10989,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,10989,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,10989,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,10989,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,10989,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,10989,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,10989,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,10989,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,10989,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,10989,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,10989,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,10989,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,10989,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,10989,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,10989,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,10989,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,10989,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,10989,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,10989,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,10989,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,10989,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,10989,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,10989,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,10989,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,10989,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,10989,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,10989,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,10989,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,10989,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,10989,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,10989,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,10989,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,10989,"RPC",1776,0)
ORWOR1 CHKDIG
"KRN",19,10989,"RPC",1777,0)
ORWOR1 GETDTEXT
"KRN",19,10989,"RPC",1778,0)
ORWOR1 GETDSIG
"KRN",19,10989,"RPC",1779,0)
ORWTPD GETIMG
"KRN",19,10989,"RPC",1780,0)
OREVNTX1 PRMPTID
"KRN",19,10989,"RPC",1781,0)
ORECS01 CHKESSO
"KRN",19,10989,"RPC",1782,0)
ORECS01 VSITID
"KRN",19,10989,"RPC",1784,0)
OREVNTX LIST
"KRN",19,10989,"RPC",1785,0)
OREVNTX PAT
"KRN",19,10989,"RPC",1786,0)
OREVNTX1 GTEVT
"KRN",19,10989,"RPC",1787,0)
OREVNTX1 CPACT
"KRN",19,10989,"RPC",1788,0)
OREVNTX1 CURSPE
"KRN",19,10989,"RPC",1789,0)
OREVNTX1 CHGEVT
"KRN",19,10989,"RPC",1790,0)
OREVNTX1 DELPTEVT
"KRN",19,10989,"RPC",1791,0)
OREVNTX1 DFLTEVT
"KRN",19,10989,"RPC",1792,0)
OREVNTX ACTIVE
"KRN",19,10989,"RPC",1793,0)
OREVNTX1 PUTEVNT
"KRN",19,10989,"RPC",1794,0)
OREVNTX1 WRLSTED
"KRN",19,10989,"RPC",1795,0)
OREVNTX1 EVT
"KRN",19,10989,"RPC",1796,0)
OREVNTX1 NAME
"KRN",19,10989,"RPC",1797,0)
OREVNTX1 MATCH
"KRN",19,10989,"RPC",1798,0)
OREVNTX1 EMPTY
"KRN",19,10989,"RPC",1799,0)
OREVNTX1 EXISTS
"KRN",19,10989,"RPC",1800,0)
OREVNTX1 GTEVT1
"KRN",19,10989,"RPC",1801,0)
OREVNTX1 DIV
"KRN",19,10989,"RPC",1802,0)
OREVNTX1 DIV1
"KRN",19,10989,"RPC",1803,0)
OREVNTX1 LOC
"KRN",19,10989,"RPC",1804,0)
OREVNTX1 LOC1
"KRN",19,10989,"RPC",1805,0)
ORWDX SENDED
"KRN",19,10989,"RPC",1806,0)
OREVNTX1 GETDLG
"KRN",19,10989,"RPC",1807,0)
ORECS01 ECPRINT
"KRN",19,10989,"RPC",1811,0)
ORECS01 ECRPT
"KRN",19,10989,"RPC",1812,0)
OREVNTX1 ISDCOD
"KRN",19,10989,"RPC",1813,0)
OREVNTX1 SETDFLT
"KRN",19,10989,"RPC",1815,0)
TIU IS THIS A CLINPROC?
"KRN",19,10989,"RPC",1816,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,10989,"RPC",1817,0)
TIU LONG LIST CLINPROC TITLES
"KRN",19,10989,"RPC",1819,0)
ORWDPS1 HASOIPI
"KRN",19,10989,"RPC",1821,0)
OREVNTX1 DEFLTS
"KRN",19,10989,"RPC",1822,0)
OREVNTX1 MULTS
"KRN",19,10989,"RPC",1823,0)
OREVNTX1 DONE
"KRN",19,10989,"RPC",1824,0)
OREVNTX1 PROMPT IDS
"KRN",19,10989,"RPC",1825,0)
ORWCIRN CHECKLINK
"KRN",19,10989,"RPC",1826,0)
XWB DIRECT RPC
"KRN",19,10989,"RPC",1827,0)
ORWDPS1 HASROUTE
"KRN",19,10989,"RPC",1828,0)
ORQQCN UNRESOLVED
"KRN",19,10989,"RPC",1829,0)
OREVNTX1 DELDFLT
"KRN",19,10989,"RPC",1830,0)
ORWCH LDFONT
"KRN",19,10989,"RPC",1831,0)
ORWU1 NAMECVT
"KRN",19,10989,"RPC",1832,0)
OREVNTX1 DFLTDLG
"KRN",19,10989,"RPC",1833,0)
ORWDPS5 LESAPI
"KRN",19,10989,"RPC",1834,0)
ORWDPS5 LESGRP
"KRN",19,10989,"RPC",1839,0)
OREVNTX1 TYPEXT
"KRN",19,10989,"RPC",1840,0)
ORWORR RGET
"KRN",19,10989,"RPC",1841,0)
OREVNTX1 AUTHMREL
"KRN",19,10989,"RPC",1842,0)
OREVNTX1 HAVEPRT
"KRN",19,10989,"RPC",1843,0)
OREVNTX1 CMEVTS
"KRN",19,10989,"RPC",1844,0)
OREVNTX1 ODPTEVID
"KRN",19,10989,"RPC",1845,0)
ORWOR PKISITE
"KRN",19,10989,"RPC",1846,0)
OREVNTX1 COMP
"KRN",19,10989,"RPC",1847,0)
OREVNTX1 ISHDORD
"KRN",19,10989,"RPC",1848,0)
ORWDXR ORCPLX
"KRN",19,10989,"RPC",1849,0)
OREVNTX1 ISPASS
"KRN",19,10989,"RPC",1850,0)
OREVNTX1 ISPASS1
"KRN",19,10989,"RPC",1851,0)
OREVNTX1 DLGIEN
"KRN",19,10989,"RPC",1852,0)
ORWDXR CANRN
"KRN",19,10989,"RPC",1853,0)
ORWDXR ISCPLX
"KRN",19,10989,"RPC",1854,0)
ORWDXA OFCPLX
"KRN",19,10989,"RPC",1855,0)
ORQQPX GET NOT PURPOSE
"KRN",19,10989,"RPC",1856,0)
ORWDPS1 IVDEA
"KRN",19,10989,"RPC",1857,0)
ORWDXR ISNOW
"KRN",19,10989,"RPC",1858,0)
ORRHCQ QRYITR
"KRN",19,10989,"RPC",1859,0)
OREVNTX1 GETSTS
"KRN",19,10989,"RPC",1860,0)
ORWU DEFAULT DIVISION
"KRN",19,10989,"RPC",1861,0)
ORWDXA ISACTOI
"KRN",19,10989,"RPC",1862,0)
ORECS01 SAVPATH
"KRN",19,10989,"RPC",1863,0)
ORWOR RESULT HISTORY
"KRN",19,10989,"RPC",1864,0)
XUS GET TOKEN
"KRN",19,10989,"RPC",1865,0)
ORQQPX IMMUN LIST
"KRN",19,10989,"RPC",1866,0)
XWB DEFERRED CLEARALL
"KRN",19,10989,"RPC",1867,0)
ORWOR1 SETDTEXT
"KRN",19,10989,"RPC",1868,0)
ORWOR1 GETDEA
"KRN",19,10989,"RPC",1869,0)
ORWOR1 GETDSCH
"KRN",19,10989,"RPC",1870,0)
ORWORB TEXT FOLLOWUP
"KRN",19,10989,"RPC",1871,0)
ORWU1 NEWLOC
"KRN",19,10989,"RPC",1872,0)
ORWPCE ACTIVE CODE
"KRN",19,10989,"RPC",1873,0)
ORQQPXRM GET WH LETTER TEXT
"KRN",19,10989,"RPC",1874,0)
ORQQPXRM GET WH LETTER TYPE
"KRN",19,10989,"RPC",1875,0)
ORQQPXRM GET WH PROC RESULT
"KRN",19,10989,"RPC",1876,0)
ORQQPXRM WOMEN HEALTH SAVE
"KRN",19,10989,"RPC",1877,0)
ORB FORWARD ALERT
"KRN",19,10989,"RPC",1878,0)
ORB RENEW ALERT
"KRN",19,10989,"RPC",1879,0)
ORPRF CLEAR
"KRN",19,10989,"RPC",1880,0)
ORPRF GETFLG
"KRN",19,10989,"RPC",1881,0)
ORPRF HASFLG
"KRN",19,10989,"RPC",1882,0)
ORWTPD GETOCM
"KRN",19,10989,"RPC",1883,0)
TIU ONE VISIT NOTE?
"KRN",19,10989,"RPC",1884,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,10989,"RPC",1885,0)
ORIMO IMOLOC
"KRN",19,10989,"RPC",1886,0)
ORIMO IMOOD
"KRN",19,10989,"RPC",1887,0)
ORWDPS4 IPOD4OP
"KRN",19,10989,"RPC",1888,0)
ORWDPS4 UPDTDG
"KRN",19,10989,"RPC",1889,0)
TIU USER INACTIVE?
"KRN",19,10989,"RPC",1890,0)
ORWTPD PUTOCM
"KRN",19,10989,"RPC",1891,0)
ORWOR ACTION TEXT
"KRN",19,10989,"RPC",1892,0)
ORQQPXRM GEC DIALOG
"KRN",19,10989,"RPC",1893,0)
ORQQPXRM GET WH REPORT TEXT
"KRN",19,10989,"RPC",1894,0)
ORWDXR01 CANCHG
"KRN",19,10989,"RPC",1895,0)
ORWDXR01 SAVCHG
"KRN",19,10989,"RPC",1896,0)
TIU HAS AUTHOR SIGNED?
"KRN",19,10989,"RPC",1897,0)
ORQQPXRM CHECK REM VERSION
"KRN",19,10989,"RPC",1898,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10989,"RPC",1899,0)
ORQQPXRM GEC STATUS PROMPT
"KRN",19,10989,"RPC",1900,0)
ORWDAL32 SEND BULLETIN
"KRN",19,10989,"RPC",1901,0)
ORWDBA1 ORPKGTYP
"KRN",19,10989,"RPC",1902,0)
ORWDXR01 ISSPLY
"KRN",19,10989,"RPC",1903,0)
ORWDBA1 RCVORCI
"KRN",19,10989,"RPC",1904,0)
ORWPS REASON
"KRN",19,10989,"RPC",1905,0)
ORQQPXRM GEC FINISHED?
"KRN",19,10989,"RPC",1906,0)
ORWDXM3 ISUDQO
"KRN",19,10989,"RPC",1908,0)
ORWDBA1 SCLST
"KRN",19,10989,"RPC",1909,0)
ORWDXR01 OXDATA
"KRN",19,10989,"RPC",1914,0)
ORWDBA1 BASTATUS
"KRN",19,10989,"RPC",1920,0)
ORWORB SETSORT
"KRN",19,10989,"RPC",1921,0)
ORWORB GETSORT
"KRN",19,10989,"RPC",1922,0)
ORWOR EXPIRED
"KRN",19,10989,"RPC",1928,0)
ORECS01 GETDIV
"KRN",19,10989,"RPC",1933,0)
ORWTPD1 GETEFDAT
"KRN",19,10989,"RPC",1934,0)
ORWTPD1 GETEDATS
"KRN",19,10989,"RPC",1935,0)
ORWTPD1 PUTEDATS
"KRN",19,10989,"RPC",1936,0)
ORWTPD1 GETCSDEF
"KRN",19,10989,"RPC",1937,0)
ORWTPD1 GETCSRNG
"KRN",19,10989,"RPC",1938,0)
ORWTPD1 PUTCSRNG
"KRN",19,10989,"RPC",1939,0)
ORWTPD1 GETEAFL
"KRN",19,10989,"RPC",1940,0)
ORWDBA1 GETORDX
"KRN",19,10989,"RPC",1941,0)
ORWDBA3 HINTS
"KRN",19,10989,"RPC",1942,0)
ORWDAL32 LOAD FOR EDIT
"KRN",19,10989,"RPC",1943,0)
ORWDAL32 SAVE ALLERGY
"KRN",19,10989,"RPC",1944,0)
ORWDAL32 SITE PARAMS
"KRN",19,10989,"RPC",1945,0)
ORWPCE CXNOSHOW
"KRN",19,10989,"RPC",1946,0)
ORWDBA2 ADDPDL
"KRN",19,10989,"RPC",1947,0)
ORWDBA2 DELPDL
"KRN",19,10989,"RPC",1948,0)
ORWDBA2 GETDUDC
"KRN",19,10989,"RPC",1949,0)
ORWDBA2 GETPDL
"KRN",19,10989,"RPC",1950,0)
ORWDBA4 GETBAUSR
"KRN",19,10989,"RPC",1951,0)
ORWDBA4 GETTFCI
"KRN",19,10989,"RPC",1952,0)
ORWNSS NSSMSG
"KRN",19,10989,"RPC",1953,0)
ORWNSS QOSCH
"KRN",19,10989,"RPC",1954,0)
ORWNSS VALSCH
"KRN",19,10989,"RPC",1955,0)
ORWNSS CHKSCH
"KRN",19,10989,"RPC",1956,0)
ORWDPS4 ISUDIV
"KRN",19,10989,"RPC",1957,0)
ORWDPS32 AUTHNVA
"KRN",19,10989,"RPC",1962,0)
ORWTIU CHKTXT
"KRN",19,10989,"RPC",1964,0)
ORWDPS5 ISVTP
"KRN",19,10989,"RPC",1965,0)
TIU IS THIS A SURGERY?
"KRN",19,10989,"RPC",1966,0)
TIU IDENTIFY SURGERY CLASS
"KRN",19,10989,"RPC",1967,0)
TIU LONG LIST SURGERY TITLES
"KRN",19,10989,"RPC",1968,0)
TIU GET DOCUMENTS FOR REQUEST
"KRN",19,10989,"RPC",1969,0)
TIU SET ADMINISTRATIVE CLOSURE
"KRN",19,10989,"RPC",1970,0)
ORBCMA5 GETUDID
"KRN",19,10989,"RPC",1973,0)
ORIMO ISCLOC
"KRN",19,10989,"RPC",1974,0)
ORIMO ISIVQO
"KRN",19,10989,"RPC",1975,0)
ORWDBA7 GETIEN9
"KRN",19,10989,"RPC",1976,0)
ORWGN GNLOC
"KRN",19,10989,"RPC",1977,0)
ORWGN AUTHUSR
"KRN",19,10989,"RPC",1978,0)
ORVAA VAA
"KRN",19,10989,"RPC",1981,0)
ORWDAL32 CLINUSER
"KRN",19,10989,"RPC",1982,0)
ORWDBA7 ISWITCH
"KRN",19,10989,"RPC",1983,0)
ORWDFH CURRENT MEALS
"KRN",19,10989,"RPC",1984,0)
ORWDFH NFSLOC READY
"KRN",19,10989,"RPC",1985,0)
ORWDFH OPDIETS
"KRN",19,10989,"RPC",1986,0)
ORWMHV MHV
"KRN",19,10989,"RPC",1987,0)
ORWPCE1 NONCOUNT
"KRN",19,10989,"RPC",1988,0)
ORWPFSS IS PFSS ACTIVE?
"KRN",19,10989,"RPC",1989,0)
GMV EXTRACT REC
"KRN",19,10989,"RPC",1990,0)
GMV MARK ERROR
"KRN",19,10989,"RPC",1991,0)
ORWDXVB COMPORD
"KRN",19,10989,"RPC",1992,0)
ORWDXVB GETALL
"KRN",19,10989,"RPC",1993,0)
ORWDXVB RAW
"KRN",19,10989,"RPC",1994,0)
ORWDXVB RESULTS
"KRN",19,10989,"RPC",1995,0)
ORWDXVB STATALOW
"KRN",19,10989,"RPC",1996,0)
ORWGRPC ALLITEMS
"KRN",19,10989,"RPC",1997,0)
ORWGRPC CLASS
"KRN",19,10989,"RPC",1998,0)
ORWGRPC DATEITEM
"KRN",19,10989,"RPC",1999,0)
ORWGRPC DELVIEWS
"KRN",19,10989,"RPC",2000,0)
ORWGRPC DETAILS
"KRN",19,10989,"RPC",2001,0)
ORWGRPC GETDATES
"KRN",19,10989,"RPC",2002,0)
ORWGRPC GETPREF
"KRN",19,10989,"RPC",2003,0)
ORWGRPC GETVIEWS
"KRN",19,10989,"RPC",2004,0)
ORWGRPC ITEMDATA
"KRN",19,10989,"RPC",2005,0)
ORWGRPC ITEMS
"KRN",19,10989,"RPC",2006,0)
ORWGRPC LOOKUP
"KRN",19,10989,"RPC",2007,0)
ORWGRPC PUBLIC
"KRN",19,10989,"RPC",2008,0)
ORWGRPC RPTPARAM
"KRN",19,10989,"RPC",2009,0)
ORWGRPC SETPREF
"KRN",19,10989,"RPC",2010,0)
ORWGRPC SETVIEWS
"KRN",19,10989,"RPC",2011,0)
ORWGRPC TESTSPEC
"KRN",19,10989,"RPC",2012,0)
ORWGRPC TYPES
"KRN",19,10989,"RPC",2013,0)
TIU GET DOCUMENT STATUS
"KRN",19,10989,"RPC",2014,0)
TIU GET PRF ACTIONS
"KRN",19,10989,"RPC",2015,0)
TIU ISPRF
"KRN",19,10989,"RPC",2016,0)
TIU LINK TO FLAG
"KRN",19,10989,"RPC",2017,0)
ORWGRPC DETAIL
"KRN",19,10989,"RPC",2018,0)
ORWU VERSION
"KRN",19,10989,"RPC",2019,0)
GMV ALLERGY
"KRN",19,10989,"RPC",2020,0)
ORWCIRN WEBADDR
"KRN",19,10989,"RPC",2023,0)
ORWGRPC TAX
"KRN",19,10989,"RPC",2024,0)
GMV DLL VERSION
"KRN",19,10989,"RPC",2025,0)
ORWDX CHANGE
"KRN",19,10989,"RPC",2026,0)
GMV ADD VM
"KRN",19,10989,"RPC",2027,0)
GMV CONVERT DATE
"KRN",19,10989,"RPC",2028,0)
GMV GET CATEGORY IEN
"KRN",19,10989,"RPC",2029,0)
GMV GET CURRENT TIME
"KRN",19,10989,"RPC",2030,0)
GMV GET VITAL TYPE IEN
"KRN",19,10989,"RPC",2031,0)
GMV LATEST VM
"KRN",19,10989,"RPC",2032,0)
GMV MANAGER
"KRN",19,10989,"RPC",2033,0)
GMV PARAMETER
"KRN",19,10989,"RPC",2034,0)
GMV USER
"KRN",19,10989,"RPC",2035,0)
GMV VITALS/CAT/QUAL
"KRN",19,10989,"RPC",2036,0)
GMV V/M ALLDATA
"KRN",19,10989,"RPC",2037,0)
TIU GET LINKED PRF NOTES
"KRN",19,10989,"RPC",2038,0)
TIU GET PRF TITLE
"KRN",19,10989,"RPC",2039,0)
ORWDX1 PATWARD
"KRN",19,10989,"RPC",2040,0)
ORWRP4 HDR MODIFY
"KRN",19,10989,"RPC",2041,0)
ORWDX1 STCHANGE
"KRN",19,10989,"RPC",2042,0)
ORWDX1 DCREN
"KRN",19,10989,"RPC",2043,0)
ORQQPXRM MHV
"KRN",19,10989,"RPC",2044,0)
ORWGRPC GETSIZE
"KRN",19,10989,"RPC",2045,0)
ORWGRPC SETSIZE
"KRN",19,10989,"RPC",2046,0)
GMV LOCATION SELECT
"KRN",19,10989,"RPC",2047,0)
ORWCIRN AUTORDV
"KRN",19,10989,"RPC",2048,0)
ORPRF TRIGGER POPUP
"KRN",19,10989,"RPC",2049,0)
ORWCIRN HDRON
"KRN",19,10989,"RPC",2051,0)
ORCDLR2 CHECK ALL LC TO WC
"KRN",19,10989,"RPC",2052,0)
ORCDLR2 CHECK ONE LC TO WC
"KRN",19,10989,"RPC",2053,0)
ORALWORD ALLWORD
"KRN",19,10989,"RPC",2054,0)
ORWDX1 ORDMATCH
"KRN",19,10989,"RPC",2055,0)
ORWDX1 DCORIG
"KRN",19,10989,"RPC",2056,0)
ORWDX1 UNDCORIG
"KRN",19,10989,"RPC",2057,0)
ORWDXVB SUBCHK
"KRN",19,10989,"RPC",2058,0)
ORDDPAPI ADMTIME
"KRN",19,10989,"RPC",2059,0)
ORWU PARAMS
"KRN",19,10989,"RPC",2060,0)
ORWDPS1 DOWSCH
"KRN",19,10989,"RPC",2061,0)
ORWDPS33 COMPLOC
"KRN",19,10989,"RPC",2062,0)
ORWGRPC FASTDATA
"KRN",19,10989,"RPC",2063,0)
ORWGRPC FASTITEM
"KRN",19,10989,"RPC",2064,0)
ORWGRPC FASTTASK
"KRN",19,10989,"RPC",2065,0)
ORWGRPC FASTLABS
"KRN",19,10989,"RPC",2066,0)
ORWDPS1 QOMEDALT
"KRN",19,10989,"RPC",2067,0)
ORWGRPC ALLVIEWS
"KRN",19,10989,"RPC",2068,0)
ORDDPAPI CLOZMSG
"KRN",19,10989,"RPC",2069,0)
ORWGRPC TESTING
"KRN",19,10989,"RPC",2070,0)
ORQQPXRM MHDLL
"KRN",19,10989,"RPC",2071,0)
ORWDLR33 LC TO WC
"KRN",19,10989,"RPC",2072,0)
ORWU2 COSIGNER
"KRN",19,10989,"RPC",2073,0)
ORWDXVB NURSADMN
"KRN",19,10989,"RPC",2074,0)
ORQQPXRM MHDLLDMS
"KRN",19,10989,"RPC",2075,0)
TIU IS USER A USR PROVIDER
"KRN",19,10989,"RPC",2076,0)
ORWDPS33 IVDOSFRM
"KRN",19,10989,"RPC",2077,0)
ORWDPS32 ALLIVRTE
"KRN",19,10989,"RPC",2078,0)
ORWDXM1 SVRPC
"KRN",19,10989,"RPC",2079,0)
ORWDXVB VBTNS
"KRN",19,10989,"RPC",2080,0)
MAG4 REMOTE IMPORT
"KRN",19,10989,"RPC",2081,0)
ORWDX UNLKOTH
"KRN",19,10989,"RPC",2082,0)
OR GET COMBAT VET
"KRN",19,10989,"RPC",2083,0)
GMV CLOSEST READING
"KRN",19,10989,"RPC",2084,0)
ORQQCN ISPROSVC
"KRN",19,10989,"RPC",2085,0)
ORQQPL PROBLEM NTRT BULLETIN
"KRN",19,10989,"RPC",2086,0)
ORWPCE GET DX TEXT
"KRN",19,10989,"RPC",2087,0)
ORCHECK ISMONO
"KRN",19,10989,"RPC",2088,0)
ORCHECK GETMONO
"KRN",19,10989,"RPC",2089,0)
ORCHECK GETMONOL
"KRN",19,10989,"RPC",2090,0)
ORCHECK DELMONO
"KRN",19,10989,"RPC",2091,0)
ORCHECK GETXTRA
"KRN",19,10989,"RPC",2092,0)
ORWDPS33 GETADDFR
"KRN",19,10989,"RPC",2093,0)
ORCNOTE GET TOTAL
"KRN",19,10989,"RPC",2094,0)
ORVW FACLIST
"KRN",19,10989,"RPC",2095,0)
ORWDXVB3 DIAGORD
"KRN",19,10989,"RPC",2096,0)
ORWDXVB3 COLLTIM
"KRN",19,10989,"RPC",2097,0)
ORWDXVB3 SWPANEL
"KRN",19,10989,"U")
CPRSCHART VERSION 1.0.28.24
"KRN",101,3531,-1)
0^1
"KRN",101,3531,0)
OR ITEM RECEIVE^Read orderable item updates^^X^^^^^^^^
"KRN",101,3531,10,0)
^101.01PA^1^1
"KRN",101,3531,15)
K ^TMP($J,"OR OI BEFORE"),^TMP($J,"OR OI AFTER"),TMP($J,"OR OI NEW")
"KRN",101,3531,20)
D EN^ORMFN(.XQORMSG)
"KRN",101,3531,99)
61888,75972
"KRN",8989.5,419,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^10
"KRN",8989.5,419,1)
M.A.S.
"KRN",8989.5,420,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^30
"KRN",8989.5,420,1)
VITALS/MEASUREMENTS
"KRN",8989.5,421,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^40
"KRN",8989.5,421,1)
NURSING
"KRN",8989.5,422,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^50
"KRN",8989.5,422,1)
DIETETICS
"KRN",8989.5,423,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^60
"KRN",8989.5,423,1)
IV MEDICATIONS
"KRN",8989.5,424,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^70
"KRN",8989.5,424,1)
INPATIENT MEDICATIONS
"KRN",8989.5,425,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^80
"KRN",8989.5,425,1)
IMAGING
"KRN",8989.5,426,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^90
"KRN",8989.5,426,1)
CONSULTS
"KRN",8989.5,427,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^100
"KRN",8989.5,427,1)
PROCEDURES
"KRN",8989.5,428,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^110
"KRN",8989.5,428,1)
SURGERY
"KRN",8989.5,429,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^120
"KRN",8989.5,429,1)
OTHER HOSPITAL SERVICES
"KRN",8989.5,430,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^35
"KRN",8989.5,430,1)
ACTIVITY
"KRN",8989.5,431,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^75
"KRN",8989.5,431,1)
LABORATORY
"KRN",8989.5,526,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^20
"KRN",8989.5,526,1)
ALLERGIES
"KRN",8989.5,776,0)
170;DIC(9.4,^ORWT TOOLS MENU^1
"KRN",8989.5,776,1)
&Time=Clock.exe
"KRN",8989.5,777,0)
170;DIC(9.4,^ORWT TOOLS MENU^2
"KRN",8989.5,777,1)
&Calculator=Calc.exe
"KRN",8989.5,778,0)
170;DIC(9.4,^ORWT TOOLS MENU^3
"KRN",8989.5,778,1)
&Windows Introduction=WinHlp32 Windows.hlp
"KRN",8989.5,1011,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^65
"KRN",8989.5,1011,1)
OUTPATIENT MEDICATIONS
"KRN",8989.5,3263,0)
170;DIC(9.4,^ORWT TOOLS MENU^4
"KRN",8989.5,3263,1)
&Notepad=Notepad.exe
"KRN",8989.5,5091,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^52
"KRN",8989.5,5091,1)
PSJ OR PAT OE
"KRN",8989.5,5092,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^99
"KRN",8989.5,5092,1)
OR GXTEXT WORD PROCESSING ORDER
"KRN",8989.5,5093,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^80
"KRN",8989.5,5093,1)
GMRCOR CONSULT
"KRN",8989.5,5094,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^85
"KRN",8989.5,5094,1)
GMRCOR REQUEST
"KRN",8989.5,5095,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^55
"KRN",8989.5,5095,1)
PSO OERR
"KRN",8989.5,5096,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^60
"KRN",8989.5,5096,1)
LR OTHER LAB TESTS
"KRN",8989.5,5097,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^70
"KRN",8989.5,5097,1)
RA OERR EXAM
"KRN",8989.5,5098,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^58
"KRN",8989.5,5098,1)
PSJI OR PAT FLUID OE
"KRN",8989.5,5099,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^90
"KRN",8989.5,5099,1)
GMRVOR
"KRN",8989.5,5100,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^30
"KRN",8989.5,5100,1)
FHW1
"KRN",8989.5,5101,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^20
"KRN",8989.5,5101,1)
GMRAOR ALLERGY ENTER/EDIT
"KRN",8989.5,11255,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^68
"KRN",8989.5,11255,1)
NON-VA MEDICATIONS
"KRN",8989.5,11256,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^53
"KRN",8989.5,11256,1)
PSH OERR
"KRN",8989.5,11428,0)
170;DIC(9.4,^ORWOR CATEGORY SEQUENCE^69
"KRN",8989.5,11428,1)
CLINIC ORDERS
"KRN",8989.5,13698,0)
170;DIC(9.4,^OR VBECS COMPONENT ORDER^5
"KRN",8989.5,13698,1)
RED BLOOD CELLS
"KRN",8989.5,13699,0)
170;DIC(9.4,^OR VBECS COMPONENT ORDER^10
"KRN",8989.5,13699,1)
FRESH FROZEN PLASMA
"KRN",8989.5,13700,0)
170;DIC(9.4,^OR VBECS COMPONENT ORDER^15
"KRN",8989.5,13700,1)
PLATELETS
"KRN",8989.5,13701,0)
170;DIC(9.4,^OR VBECS COMPONENT ORDER^20
"KRN",8989.5,13701,1)
CRYOPRECIPITATE
"KRN",8989.5,13702,0)
170;DIC(9.4,^OR VBECS COMPONENT ORDER^25
"KRN",8989.5,13702,1)
WHOLE BLOOD
"KRN",8989.5,13703,0)
170;DIC(9.4,^OR VBECS COMPONENT ORDER^30
"KRN",8989.5,13703,1)
OTHER
"KRN",8989.5,15605,0)
170;DIC(9.4,^OR VBECS DIAGNOSTIC TEST ORDER^5
"KRN",8989.5,15605,1)
ABO/RH
"KRN",8989.5,15606,0)
170;DIC(9.4,^OR VBECS DIAGNOSTIC TEST ORDER^10
"KRN",8989.5,15606,1)
ANTIBODY SCREEN
"KRN",8989.5,15607,0)
170;DIC(9.4,^OR VBECS DIAGNOSTIC TEST ORDER^15
"KRN",8989.5,15607,1)
DIRECT ANTIGLOBULIN TEST
"KRN",8989.5,15608,0)
170;DIC(9.4,^OR VBECS DIAGNOSTIC TEST ORDER^20
"KRN",8989.5,15608,1)
TRANSFUSION REACTION WORKUP
"KRN",8989.5,15609,0)
170;DIC(9.4,^OR VBECS DIAGNOSTIC TEST ORDER^25
"KRN",8989.5,15609,1)
TYPE & SCREEN
"KRN",8989.5,15781,0)
170;DIC(9.4,^OR VBECS REMOVE COLL TIME^1
"KRN",8989.5,15781,1)
0
"KRN",8989.5,16371,0)
170;DIC(9.4,^ORWOR WRITE ORDERS LIST^10
"KRN",8989.5,16371,1)
OR ADD MENU CLINICIAN
"KRN",8989.5,16605,0)
170;DIC(9.4,^OR RA RFS CARRY ON^1
"KRN",8989.5,16605,1)
0
"KRN",8989.51,81,-1)
0^2
"KRN",8989.51,81,0)
ORWOR CATEGORY SEQUENCE^Orders Category Sequence^1^Sequence^Display Group
"KRN",8989.51,81,1)
P^100.98^Enter the display group of orders to be listed at this sequence.
"KRN",8989.51,81,6)
N^1:999^Enter a number representing the sequence for this display group.
"KRN",8989.51,81,20,0)
^8989.512^3^3^3080820^^^^
"KRN",8989.51,81,20,1,0)
Multiple instances of this parameter combine to form a list of the display
"KRN",8989.51,81,20,2,0)
groups shown in the order review screen.  Orders are displayed by the
"KRN",8989.51,81,20,3,0)
sequence identified in this list.
"KRN",8989.51,81,30,0)
^8989.513I^3^3
"KRN",8989.51,81,30,1,0)
10^9.4
"KRN",8989.51,81,30,2,0)
8^4.2
"KRN",8989.51,81,30,3,0)
4^200
"KRN",8989.51,198,-1)
0^6
"KRN",8989.51,198,0)
ORWT TOOLS MENU^CPRS GUI Tools Menu^1^Sequence^Name=Command^0
"KRN",8989.51,198,1)
F^^Example:  Notepad=C:\WINDOWS\NOTEPAD.EXE
"KRN",8989.51,198,2)
I '($L($P(X,"="))&$L($P(X,"=",2))) K X
"KRN",8989.51,198,6)
N^1:99^Enter the sequence in which this menu item should appear.
"KRN",8989.51,198,20,0)
^^57^57^3100210
"KRN",8989.51,198,20,1,0)
This parameter may be used to identify which items should appear on the
"KRN",8989.51,198,20,2,0)
tools menu which is displayed by the CPRS GUI.  Each item should contain
"KRN",8989.51,198,20,3,0)
a name that should be displayed on the menu, followed by an equal sign,
"KRN",8989.51,198,20,4,0)
followed by the command string used to invoke the executable.  This
"KRN",8989.51,198,20,5,0)
string may also include parameters that are passed to the executable.
"KRN",8989.51,198,20,6,0)
Some example entries are:
"KRN",8989.51,198,20,7,0)
 
"KRN",8989.51,198,20,8,0)
     Hospital Policy=C:\WINNT\SYSTEM32\VIEWERS\QUIKVIEW.EXE LOCPLCY.DOC
"KRN",8989.51,198,20,9,0)
     VISTA Terminal=C:\PROGRA~1\KEA\KEAVT.EXE VISTA.KTC
"KRN",8989.51,198,20,10,0)
 
"KRN",8989.51,198,20,11,0)
An ampersand may be used in the name portion to identify a letter that
"KRN",8989.51,198,20,12,0)
should be underlined on the menu for quick keyboard access.  For example,
"KRN",8989.51,198,20,13,0)
to underscore the letter H in Hospital Policy, enter &Hospital Policy as
"KRN",8989.51,198,20,14,0)
the name part.
"KRN",8989.51,198,20,15,0)
 
"KRN",8989.51,198,20,16,0)
To use submenus on the tools menu, you must place special text in the
"KRN",8989.51,198,20,17,0)
caption and action values.  Submenus must have action text SUBMENU ID,
"KRN",8989.51,198,20,18,0)
where ID is a unique identifier for the submenu.  Menu items belonging to
"KRN",8989.51,198,20,19,0)
the submenu must specify which submenu they belong to by appending [ID]
"KRN",8989.51,198,20,20,0)
after the caption.  Thus the following entries create a Utilities submenu
"KRN",8989.51,198,20,21,0)
with 2 child items:
"KRN",8989.51,198,20,22,0)
 
"KRN",8989.51,198,20,23,0)
     Utilities=SUBMENU 1
"KRN",8989.51,198,20,24,0)
     Calculator[1]=calc.exe
"KRN",8989.51,198,20,25,0)
     Notepad[1]=notepad.exe
"KRN",8989.51,198,20,26,0)
 
"KRN",8989.51,198,20,27,0)
To create a nested submenu, you create a submenu that belongs to another
"KRN",8989.51,198,20,28,0)
submenu s ID.  For example, to create a nested submenu belonging the
"KRN",8989.51,198,20,29,0)
above Utilities submenu, you would do the following:
"KRN",8989.51,198,20,30,0)
 
"KRN",8989.51,198,20,31,0)
     Utility Web Sites[1]=SUBMENU UtilWeb
"KRN",8989.51,198,20,32,0)
     MicroSoft Tools[UtilWeb]=http:\\www.msdn
"KRN",8989.51,198,20,33,0)
 
"KRN",8989.51,198,20,34,0)
While submenu IDs at the end of a caption are not displayed on the Tools
"KRN",8989.51,198,20,35,0)
menu, this is only true if a corresponding menu ID is found.  If no Menu
"KRN",8989.51,198,20,36,0)
ID is found, the square brackets and included text will appear as part of
"KRN",8989.51,198,20,37,0)
the caption on the Tools menu.  This allows for existing bracketed text
"KRN",8989.51,198,20,38,0)
to remain displayed.
"KRN",8989.51,198,20,39,0)
 
"KRN",8989.51,198,20,40,0)
If two submenus share the same menu ID, the second submenu will be
"KRN",8989.51,198,20,41,0)
treated as belonging to the first menu.
"KRN",8989.51,198,20,42,0)
 
"KRN",8989.51,198,20,43,0)
One point worth noting.  If you have a caption of a single dash (or a
"KRN",8989.51,198,20,44,0)
single dash followed by a submenu id), it will create a separator line in
"KRN",8989.51,198,20,45,0)
the menu or submenu.  This is not new functionality, but may not have
"KRN",8989.51,198,20,46,0)
been previously documented.
"KRN",8989.51,198,20,47,0)
 
"KRN",8989.51,198,20,48,0)
Finally, if more than 30 menu items are assigned to the top level menu
"KRN",8989.51,198,20,49,0)
(i.e. they are not part of a submenu), a "More..." submenu will
"KRN",8989.51,198,20,50,0)
automatically be created at the top of the Tools menu, with additional
"KRN",8989.51,198,20,51,0)
menu items spilling into the newly created "More..." submenu.  If more
"KRN",8989.51,198,20,52,0)
than 30 menu items spill into the "More..." submenu, another "More..."
"KRN",8989.51,198,20,53,0)
submenu will be created inside the first "More..." submenu, with
"KRN",8989.51,198,20,54,0)
additional menu items spilling into it, and so on, as needed.  Note,
"KRN",8989.51,198,20,55,0)
however, that there is a limit of 99 total menu items, since you can only
"KRN",8989.51,198,20,56,0)
enter an integer sequence number from 1-99 when defining the ORWT TOOLS
"KRN",8989.51,198,20,57,0)
MENU parameter.
"KRN",8989.51,198,30,0)
^8989.513I^6^6
"KRN",8989.51,198,30,1,0)
1^200
"KRN",8989.51,198,30,2,0)
2^44
"KRN",8989.51,198,30,3,0)
3^4
"KRN",8989.51,198,30,4,0)
4^4.2
"KRN",8989.51,198,30,5,0)
9^9.4
"KRN",8989.51,198,30,6,0)
2.5^49
"KRN",8989.51,227,-1)
0^4
"KRN",8989.51,227,0)
ORWOR WRITE ORDERS LIST^Write Orders (Inpatient)^1^Sequence^Order Dialog
"KRN",8989.51,227,1)
P^101.41^Enter the entry from the dialog file that should be used in the list box.
"KRN",8989.51,227,3)
I "DMOQA"[$P(^(0),U,4)
"KRN",8989.51,227,6)
N^1:999:2^Enter the relative sequence for this order in the list box.
"KRN",8989.51,227,20,0)
^^6^6^3090901^
"KRN",8989.51,227,20,1,0)
***This parameter has been superseded by ORWDX WRITE ORDERS LIST.***
"KRN",8989.51,227,20,2,0)
Currently, the GUI references only for backward compatibility reasons.
"KRN",8989.51,227,20,3,0)
 
"KRN",8989.51,227,20,4,0)
This parameter is used do list the order dialog names that should appear in
"KRN",8989.51,227,20,5,0)
the Write Orders list box of the CPRS GUI.  This is the list of dialogs that
"KRN",8989.51,227,20,6,0)
should be used in the inpatient setting.
"KRN",8989.51,227,30,0)
^8989.513I^6^6
"KRN",8989.51,227,30,1,0)
1^200
"KRN",8989.51,227,30,2,0)
2^44
"KRN",8989.51,227,30,3,0)
3^4.2
"KRN",8989.51,227,30,4,0)
4^9.4
"KRN",8989.51,227,30,5,0)
2.3^49
"KRN",8989.51,227,30,6,0)
2.7^4
"KRN",8989.51,527,-1)
0^1
"KRN",8989.51,527,0)
OR RA RFS CARRY ON^OR RA RFS CARRY ON^0
"KRN",8989.51,527,1)
Y^^Enter yes or no for whether to carry on the value of Reason for Study
"KRN",8989.51,527,20,0)
^8989.512^5^5^3100721^^^^
"KRN",8989.51,527,20,1,0)
This value will determine if CPRS will carry on the text entered in the 
"KRN",8989.51,527,20,2,0)
Reason for Study field of the Radiology (Imaging) order dialog.  By carry 
"KRN",8989.51,527,20,3,0)
on, it is meant that when one order is entered the value entered in the 
"KRN",8989.51,527,20,4,0)
Reason for Study field will be held and used again in subsequent 
"KRN",8989.51,527,20,5,0)
Radiology orders.
"KRN",8989.51,527,30,0)
^8989.513I^9^5
"KRN",8989.51,527,30,3,0)
3^49
"KRN",8989.51,527,30,5,0)
1^200
"KRN",8989.51,527,30,7,0)
7^4
"KRN",8989.51,527,30,8,0)
9^4.2
"KRN",8989.51,527,30,9,0)
11^9.4
"KRN",8989.51,534,-1)
0^12
"KRN",8989.51,534,0)
OR VBECS COMPONENT ORDER^List of Blood Components^1^Sequence^Blood Component
"KRN",8989.51,534,1)
P^101.43^Select a Blood Component for VBECS
"KRN",8989.51,534,3)
I $P($G(^ORD(101.43,+Y,"VB")),"^")
"KRN",8989.51,534,6)
N^1:99:2^Enter the sequence in which the component should appear in the selection list
"KRN",8989.51,534,20,0)
^8989.512^2^2^3100923^^
"KRN",8989.51,534,20,1,0)
This parameter allows a sequence to be assigned to Blood Components
"KRN",8989.51,534,20,2,0)
selectable from VBECS.
"KRN",8989.51,534,30,0)
^8989.513I^4^4
"KRN",8989.51,534,30,1,0)
6^9.4
"KRN",8989.51,534,30,2,0)
4^4.2
"KRN",8989.51,534,30,3,0)
3^4
"KRN",8989.51,534,30,4,0)
2^200
"KRN",8989.51,603,-1)
0^7
"KRN",8989.51,603,0)
OR VBECS DIAGNOSTIC TEST ORDER^List of Diagnostic Tests for VBECS^1^Sequence^Diagnostic Test
"KRN",8989.51,603,1)
P^101.43^Select a Diagnostic Test for VBECS
"KRN",8989.51,603,3)
I $P($G(^ORD(101.43,+Y,"VB")),"^",2)
"KRN",8989.51,603,6)
N^1:99:2^Enter the sequence in which the test should appear in the selection list
"KRN",8989.51,603,20,0)
^8989.512^2^2^3100923^^^
"KRN",8989.51,603,20,1,0)
This parameter allows a sequence to be assigned to Diagnostic Tests
"KRN",8989.51,603,20,2,0)
selectable from VBECS.
"KRN",8989.51,603,30,0)
^8989.513I^4^4
"KRN",8989.51,603,30,1,0)
6^9.4
"KRN",8989.51,603,30,2,0)
4^4.2
"KRN",8989.51,603,30,3,0)
3^4
"KRN",8989.51,603,30,4,0)
2^200
"KRN",8989.51,644,-1)
0^8
"KRN",8989.51,644,0)
OR VBECS REMOVE COLL TIME^Remove Collection Time Default^0^^REMOVE COLLECTION TIME
"KRN",8989.51,644,1)
Y^^Enter YES to remove the Collection Time Default
"KRN",8989.51,644,20,0)
^^5^5^3100406^
"KRN",8989.51,644,20,1,0)
This parameter can be used to remove any defaults for Collection Times
"KRN",8989.51,644,20,2,0)
in the VBECS Order Dialog.  An entry of YES will set the default to null
"KRN",8989.51,644,20,3,0)
when using the VBECS Blood ordering dialog. Quick orders with a default
"KRN",8989.51,644,20,4,0)
defined in the quick order definition will not be affected by this
"KRN",8989.51,644,20,5,0)
parameter.
"KRN",8989.51,644,30,0)
^8989.513I^3^3
"KRN",8989.51,644,30,1,0)
1^4
"KRN",8989.51,644,30,2,0)
2^4.2
"KRN",8989.51,644,30,3,0)
3^9.4
"KRN",8989.51,645,-1)
0^9
"KRN",8989.51,645,0)
OR VBECS DIAGNOSTIC PANEL 1ST^Show Diagnostic Panel 1st^0^^SHOW DIAGNOSTIC PANEL 1ST
"KRN",8989.51,645,1)
Y^^Enter YES to show Diagnostic Panel left of Components
"KRN",8989.51,645,20,0)
^8989.512^3^3^3100603^^
"KRN",8989.51,645,20,1,0)
This paramter will switch the location of the Diagnostic and Component
"KRN",8989.51,645,20,2,0)
panels on the VBECS Order Dialog.  Set this parameter to YES to see the
"KRN",8989.51,645,20,3,0)
Diagnostic tests panel displayed on the left hand side of the display.
"KRN",8989.51,645,30,0)
^8989.513I^3^3
"KRN",8989.51,645,30,1,0)
1^4
"KRN",8989.51,645,30,2,0)
2^4.2
"KRN",8989.51,645,30,3,0)
3^9.4
"KRN",8989.51,649,-1)
0^10
"KRN",8989.51,649,0)
OR RADIOLOGY ISSUES^CPRS RADIOLOGY ISSUES MAIL GROUP^0^MAIL G^CPRS RADIOLOGY MAIL GROUP^0
"KRN",8989.51,649,1)
F^^Enter the Mail Group to be used to report Radiology issues.
"KRN",8989.51,649,6)
P^3.8
"KRN",8989.51,649,30,0)
^8989.513I^1^1
"KRN",8989.51,649,30,1,0)
1^4.2
"KRN",8989.51,4765,-1)
1^3
"KRN",8989.51,4765,0)
ORW ADDORD INPT
"KRN",8989.51,4766,-1)
1^11
"KRN",8989.51,4766,0)
OR RADIOLOGY MAILGROUP
"KRN",8994,2577,-1)
0^3
"KRN",8994,2577,0)
ORWDPS33 IVDOSFRM^IVDOSFRM^ORWDPS33^2
"KRN",8994,2577,2,0)
^8994.02A^3^2
"KRN",8994,2577,2,1,0)
ORDERIDS^2^^1^1
"KRN",8994,2577,2,3,0)
ALLIV^1^^1^2
"KRN",8994,2577,2,"B","ALLIV",3)

"KRN",8994,2577,2,"B","ORDERIDS",1)

"KRN",8994,2577,2,"PARAMSEQ",1,1)

"KRN",8994,2577,2,"PARAMSEQ",2,3)

"KRN",8994,2578,-1)
0^1
"KRN",8994,2578,0)
ORQQPL PROBLEM NTRT BULLETIN^NTRTBULL^ORQQPL2^1^S
"KRN",8994,2578,1,0)
^^3^3^3070706^
"KRN",8994,2578,1,1,0)
This RPC generates a bulletin to the OR CAC Mail Group, indicating that 
"KRN",8994,2578,1,2,0)
an unresolved term needs to be requested using the New Term Rapid 
"KRN",8994,2578,1,3,0)
Turnaround website at http://hdrmul7.aac.va.gov:7151/ntrt/.
"KRN",8994,2578,2,0)
^8994.02A^1^1
"KRN",8994,2578,2,1,0)
ORTERM^1^255^1^1
"KRN",8994,2578,2,1,1,0)
^^1^1^3070706^
"KRN",8994,2578,2,1,1,1,0)
This is the unresolved term for which an NTRT Request should be filed.
"KRN",8994,2578,2,"B","ORTERM",1)

"KRN",8994,2578,2,"PARAMSEQ",1,1)

"KRN",8994,2578,3,0)
^^2^2^3070706^
"KRN",8994,2578,3,1,0)
Boolean. Return true (1) if the bulletin was successfully generated, or
"KRN",8994,2578,3,2,0)
false (0^explanatory text) if the bulletin could not be generated.
"KRN",8994,2579,-1)
0^2
"KRN",8994,2579,0)
ORWPCE GET DX TEXT^GETDXTXT^ORWPCE3^1^S
"KRN",8994,2579,1,0)
^8994.01^2^2^3070726^^^
"KRN",8994,2579,1,1,0)
Resolves the preferred expanded form of the Diagnosis text for the 
"KRN",8994,2579,1,2,0)
encounter pane on the notes tab.
"KRN",8994,2579,2,0)
^8994.02A^2^2
"KRN",8994,2579,2,1,0)
NARR^1^^1^1
"KRN",8994,2579,2,1,1,0)
^^1^1^3070726^
"KRN",8994,2579,2,1,1,1,0)
This is the narrative entered for the Dx.
"KRN",8994,2579,2,2,0)
CODE^1^^1^2
"KRN",8994,2579,2,2,1,0)
^8994.021^1^1^3070726^^
"KRN",8994,2579,2,2,1,1,0)
This is the ICD code.
"KRN",8994,2579,2,"B","CODE",2)

"KRN",8994,2579,2,"B","NARR",1)

"KRN",8994,2579,2,"PARAMSEQ",1,1)

"KRN",8994,2579,2,"PARAMSEQ",2,2)

"KRN",8994,2618,-1)
0^4
"KRN",8994,2618,0)
ORQQCN ISPROSVC^ISPROSVC^ORQQCN2^1^S
"KRN",8994,2618,1,0)
^^4^4^3090821^
"KRN",8994,2618,1,1,0)
RPC will return 1 or 0 if the supplied file entry from 123.5 is marked as 
"KRN",8994,2618,1,2,0)
part of the Consults-Prosthetics interface.  This RPC is used to disable 
"KRN",8994,2618,1,3,0)
the Earliest Appropriate Date field and value when ordering Prosthetics 
"KRN",8994,2618,1,4,0)
requests via CPRS GUI.
"KRN",8994,2644,-1)
0^10
"KRN",8994,2644,0)
ORWDPS33 GETADDFR^GETADDFR^ORWDPS33^1
"KRN",8994,2644,1,0)
^^2^2^3091023^
"KRN",8994,2644,1,1,0)
This RPC takes an Additive Orderable ITEM IEN and it returns the default
"KRN",8994,2644,1,2,0)
additive frequency defined to the additive file.
"KRN",8994,2644,2,0)
^8994.02A^1^1
"KRN",8994,2644,2,1,0)
OIIEN^1^^1
"KRN",8994,2644,2,1,1,0)
^^1^1^3091023^
"KRN",8994,2644,2,1,1,1,0)
OIIEN = Orderable IEN from file 101.43.
"KRN",8994,2644,2,"B","OIIEN",1)

"KRN",8994,2644,3,0)
^^1^1^3091023^
"KRN",8994,2644,3,1,0)
Returns the default additive value as a string.
"KRN",8994,2647,-1)
0^5
"KRN",8994,2647,0)
ORCHECK ISMONO^ISMONO^ORCHECK^1
"KRN",8994,2648,-1)
0^6
"KRN",8994,2648,0)
ORCHECK GETMONO^GETMONO^ORCHECK^4^^^^1
"KRN",8994,2649,-1)
0^7
"KRN",8994,2649,0)
ORCHECK GETMONOL^GETMONOL^ORCHECK^2
"KRN",8994,2650,-1)
0^8
"KRN",8994,2650,0)
ORCHECK DELMONO^DELMONO^ORCHECK^1
"KRN",8994,2651,-1)
0^9
"KRN",8994,2651,0)
ORCHECK GETXTRA^GETXTRA^ORCHECK^2^^^^1
"KRN",8994,2665,-1)
0^11
"KRN",8994,2665,0)
ORCNOTE GET TOTAL^GETTOT^ORCNOTE^1^P
"KRN",8994,2811,-1)
0^12
"KRN",8994,2811,0)
ORWDXVB3 DIAGORD^DIAGORD^ORWDXVB3^2
"KRN",8994,2811,1,0)
^8994.01^1^1^3100317^^
"KRN",8994,2811,1,1,0)
Get sequence order of Diagnostic Tests for selection.
"KRN",8994,2848,-1)
0^13
"KRN",8994,2848,0)
ORWDXVB3 COLLTIM^COLLTIM^ORWDXVB3^1
"KRN",8994,2848,1,0)
^^3^3^3100406^
"KRN",8994,2848,1,1,0)
This RPC checks the value of the parameter OR VBECS REMOVE COLL TIME
"KRN",8994,2848,1,2,0)
to determine if a default collection time should be presented on the
"KRN",8994,2848,1,3,0)
VBECS order dialog.
"KRN",8994,2849,-1)
0^14
"KRN",8994,2849,0)
ORWDXVB3 SWPANEL^SWPANEL^ORWDXVB3^1
"KRN",8994,2849,1,0)
^^3^3^3100406^
"KRN",8994,2849,1,1,0)
This RPC checks the value of the parameter OR VBECS DIAGNOSTIC PANEL 1ST
"KRN",8994,2849,1,2,0)
to determine the location of the Diagnostic and Component panels on the
"KRN",8994,2849,1,3,0)
VBECS order dialog.
"MBREQ")
1
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PGL",101.41,0,5,5)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"PGL",101.41,0,7,7)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"PGL",101.412,0,2,2)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"PGL",101.412,0,11,1)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"PGL",101.415,0,2,2)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"PGL",101.416,0,2,.02)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"PKG",170,-1)
1^1
"PKG",170,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",170,20,0)
^9.402P^^
"PKG",170,22,0)
^9.49I^1^1
"PKG",170,22,1,0)
3.0^2971217^2980917^11712
"PKG",170,22,1,"PAH",1,0)
280^3110124^10000000180
"PKG",170,22,1,"PAH",1,1,0)
^^2^2^3110124
"PKG",170,22,1,"PAH",1,1,1,0)
The description of this patch may be found in the National Patch Module
"PKG",170,22,1,"PAH",1,1,2,0)
under OR*3*280.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
82
"RTN","ORB3SPEC")
0^26^B89326077
"RTN","ORB3SPEC",1,0)
ORB3SPEC ; slc/CLA - Support routine for ORB3 ;07/15/10  13:11
"RTN","ORB3SPEC",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**139,220,215,280**;Dec 17, 1997;Build 85
"RTN","ORB3SPEC",3,0)
SPECIAL(ORN,ORBASPEC,ORBU,ORBUI,ORNUM,ORDFN,ORDATA,ORBSMSG,ORBMSG,ORBSDEV,ORBPRIM,ORBATTD) ;
"RTN","ORB3SPEC",4,0)
 ;process special notifs to get recips (users,teams,devices)
"RTN","ORB3SPEC",5,0)
 ; ORN: notif ien
"RTN","ORB3SPEC",6,0)
 ; ORBASPEC: recip DUZ array
"RTN","ORB3SPEC",7,0)
 ; ORBU: recip debug array
"RTN","ORB3SPEC",8,0)
 ; ORBUI: ORBU cntr
"RTN","ORB3SPEC",9,0)
 ; ORNUM: order no
"RTN","ORB3SPEC",10,0)
 ; ORDFN: pt id
"RTN","ORB3SPEC",11,0)
 ; ORDATA: pkg data
"RTN","ORB3SPEC",12,0)
 ; ORBSMSG: special notif msg rtn by SPECIAL
"RTN","ORB3SPEC",13,0)
 ; ORBMSG: original notif msg
"RTN","ORB3SPEC",14,0)
 ; ORBSDEV: array of recip devices
"RTN","ORB3SPEC",15,0)
 ; ORBPRIM: pt's inpt primary care provider
"RTN","ORB3SPEC",16,0)
 ; ORBATTD: pt's attending physician
"RTN","ORB3SPEC",17,0)
 ;
"RTN","ORB3SPEC",18,0)
 N ORPAR,ORPTLOC
"RTN","ORB3SPEC",19,0)
 S ORPTLOC=$S($L($G(^DPT(ORDFN,.1))):"I",1:"O")  ;DBIA #10035
"RTN","ORB3SPEC",20,0)
 ;
"RTN","ORB3SPEC",21,0)
 I ORPTLOC="I" D  ;inpt flagged OI notifs
"RTN","ORB3SPEC",22,0)
 .I ORN=32 S ORPAR="ORB OI RESULTS - INPT" D OI
"RTN","ORB3SPEC",23,0)
 .I ORN=41 S ORPAR="ORB OI ORDERED - INPT" D OI
"RTN","ORB3SPEC",24,0)
 .I ORN=64 S ORPAR="ORB OI EXPIRING - INPT" D OI
"RTN","ORB3SPEC",25,0)
 ;
"RTN","ORB3SPEC",26,0)
 I ORPTLOC="O" D  ;outpt flagged OI notifs
"RTN","ORB3SPEC",27,0)
 .I ORN=60 S ORPAR="ORB OI RESULTS - OUTPT" D OI
"RTN","ORB3SPEC",28,0)
 .I ORN=61 S ORPAR="ORB OI ORDERED - OUTPT" D OI
"RTN","ORB3SPEC",29,0)
 .I ORN=65 S ORPAR="ORB OI EXPIRING - OUTPT" D OI
"RTN","ORB3SPEC",30,0)
 ;
"RTN","ORB3SPEC",31,0)
 I ORN=3!(ORN=14)!(ORN=44)!(ORN=57) D  ;lab results notifs
"RTN","ORB3SPEC",32,0)
 .D LRALRTS(ORN,ORDFN,ORDATA,.ORBSMSG,ORBMSG)
"RTN","ORB3SPEC",33,0)
 ;
"RTN","ORB3SPEC",34,0)
 I ORN=33 D  ;requested results notif
"RTN","ORB3SPEC",35,0)
 .I $D(ORBU) D
"RTN","ORB3SPEC",36,0)
 ..S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3SPEC",37,0)
 ..S ORBU(ORBUI)="Potential Orderer-flagged Results recipient: ",ORBUI=ORBUI+1
"RTN","ORB3SPEC",38,0)
 .N RECIP
"RTN","ORB3SPEC",39,0)
 .S RECIP=$$RSLTFLG^ORQOR2(ORNUM)
"RTN","ORB3SPEC",40,0)
 .I +$G(RECIP)>0 D
"RTN","ORB3SPEC",41,0)
 ..S ORBASPEC(+$G(RECIP))=""
"RTN","ORB3SPEC",42,0)
 ..I $D(ORBU) N NODE S NODE=$G(^VA(200,+$G(RECIP),0)) I $L(NODE) D
"RTN","ORB3SPEC",43,0)
 ...S ORBU(ORBUI)="   "_$P(NODE,U)_" is a potential recipient.",ORBUI=ORBUI+1
"RTN","ORB3SPEC",44,0)
 Q
"RTN","ORB3SPEC",45,0)
OI ;get potential recips for OI-flagged notifs
"RTN","ORB3SPEC",46,0)
 N OROI,ORLST,ORERR,ORBX,ORBZ,ORBE,ORBDUZ,ORBDEV,ORBUF
"RTN","ORB3SPEC",47,0)
 S OROI=+$G(^OR(100,+$G(ORNUM),.1,1,0))  ;get oi
"RTN","ORB3SPEC",48,0)
 Q:+$G(OROI)<0
"RTN","ORB3SPEC",49,0)
 I $D(ORBU) D
"RTN","ORB3SPEC",50,0)
 .S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3SPEC",51,0)
 .S ORBU(ORBUI)="Special potential recipients from parameter: "_ORPAR,ORBUI=ORBUI+1
"RTN","ORB3SPEC",52,0)
 S ORBE=0,ORBX=0
"RTN","ORB3SPEC",53,0)
 ;
"RTN","ORB3SPEC",54,0)
 ;process special recip users, teams and devices:
"RTN","ORB3SPEC",55,0)
 D ENVAL^XPAR(.ORLST,ORPAR,"`"_OROI,.ORERR)
"RTN","ORB3SPEC",56,0)
 I 'ORERR,$G(ORLST)>0 D
"RTN","ORB3SPEC",57,0)
 .F ORBX=1:1:ORLST S ORBE=$O(ORLST(ORBE)),ORBZ=$P(ORBE,";",2),ORBUF=0 D
"RTN","ORB3SPEC",58,0)
 ..;
"RTN","ORB3SPEC",59,0)
 ..; process USERS:
"RTN","ORB3SPEC",60,0)
 ..I ORBZ="VA(200," S ORBDUZ=$P(ORBE,";") I $L(ORBDUZ) D
"RTN","ORB3SPEC",61,0)
 ...I ORLST(ORBE,OROI)=1 S ORBASPEC(ORBDUZ)="",ORBUF=1
"RTN","ORB3SPEC",62,0)
 ...I ORLST(ORBE,OROI)=0,$$PPLINK^ORQPTQ1(ORBDUZ,ORDFN) S ORBASPEC(ORBDUZ)="",ORBUF=1
"RTN","ORB3SPEC",63,0)
 ...I $D(ORBU),ORBUF=1 N NODE S NODE=$G(^VA(200,ORBDUZ,0)) I $L(NODE) D
"RTN","ORB3SPEC",64,0)
 ....S ORBU(ORBUI)="   "_$P(NODE,U)_" is a potential recipient.",ORBUI=ORBUI+1
"RTN","ORB3SPEC",65,0)
 ..;
"RTN","ORB3SPEC",66,0)
 ..; process DEVICES:
"RTN","ORB3SPEC",67,0)
 ..I ORBZ="%ZIS(1," S ORBDEV=$P(ORBE,";") I $L(ORBDEV),$D(^%ZIS(1,ORBDEV))>0 D
"RTN","ORB3SPEC",68,0)
 ...S ORBDEV=$G(^%ZIS(1,ORBDEV,0)) I $D(ORBDEV) D
"RTN","ORB3SPEC",69,0)
 ....I ORLST(ORBE,OROI)=1 S ORBSDEV($P(ORBDEV,U))="",ORBUF=1
"RTN","ORB3SPEC",70,0)
 ....I ORLST(ORBE,OROI)=0,$$PDLINK^ORQPTQ1(ORBDEV,ORDFN) S ORBSDEV($P(ORBDEV,U))="",ORBUF=1
"RTN","ORB3SPEC",71,0)
 ....I $D(ORBU),ORBUF=1 D
"RTN","ORB3SPEC",72,0)
 .....S ORBU(ORBUI)="   "_$P(ORBDEV,U)_" is a device recipient.",ORBUI=ORBUI+1
"RTN","ORB3SPEC",73,0)
 ..;
"RTN","ORB3SPEC",74,0)
 ..; process TEAMS:
"RTN","ORB3SPEC",75,0)
 ..I ORBZ="OR(100.21," D SPECTEAM(ORBE)
"RTN","ORB3SPEC",76,0)
 D TITLE(OROI,ORPAR)
"RTN","ORB3SPEC",77,0)
 Q
"RTN","ORB3SPEC",78,0)
SPECTEAM(ORBE) ;get special team recips
"RTN","ORB3SPEC",79,0)
 N ORBLST,IJ,ORBTM
"RTN","ORB3SPEC",80,0)
 S ORBTM=$P(ORBE,";")
"RTN","ORB3SPEC",81,0)
 D TEAMPROV^ORQPTQ1(.ORBLST,ORBTM)
"RTN","ORB3SPEC",82,0)
 I $D(ORBU) N TNODE S TNODE=$G(^OR(100.21,ORBTM,0)) I $L(TNODE) D
"RTN","ORB3SPEC",83,0)
 .S ORBU(ORBUI)="   Team potential recipients from team "_$P(TNODE,U)_":",ORBUI=ORBUI+1
"RTN","ORB3SPEC",84,0)
 I +$G(ORBLST(1))>0 S IJ="" F  S IJ=$O(ORBLST(IJ)) Q:IJ=""  D
"RTN","ORB3SPEC",85,0)
 .S ORBDUZ=$P(ORBLST(IJ),U),ORBUF=0 I $L(ORBDUZ) D
"RTN","ORB3SPEC",86,0)
 ..I ORLST(ORBE,OROI)=1 S ORBASPEC(ORBDUZ_U_ORBTM)="",ORBUF=1
"RTN","ORB3SPEC",87,0)
 ..I ORLST(ORBE,OROI)=0,$D(^OR(100.21,ORBTM,10,"B",ORDFN_";DPT(")) S ORBASPEC(ORBDUZ_U_ORBTM)="",ORBUF=1
"RTN","ORB3SPEC",88,0)
 ..I $D(ORBU),ORBUF=1 N NODE S NODE=$G(^VA(200,ORBDUZ,0)) I $L(NODE) D
"RTN","ORB3SPEC",89,0)
 ...S ORBU(ORBUI)="     "_$P(NODE,U),ORBUI=ORBUI+1
"RTN","ORB3SPEC",90,0)
 ;
"RTN","ORB3SPEC",91,0)
 S ORBTD=$P($$TMDEV^ORB31(ORBTM),U,2)  ;tm's device
"RTN","ORB3SPEC",92,0)
 I $L(ORBTD) D
"RTN","ORB3SPEC",93,0)
 .S ORBSDEV(ORBTD)=""
"RTN","ORB3SPEC",94,0)
 .I $D(ORBU) D
"RTN","ORB3SPEC",95,0)
 ..S ORBU(ORBUI)="   Team's Device "_ORBTD_" is a recipient",ORBUI=ORBUI+1
"RTN","ORB3SPEC",96,0)
 Q
"RTN","ORB3SPEC",97,0)
LRALRTS(ORN,ORDFN,ORDATA,ORBSMSG,ORBMSG) ;find & delete matching alerts and gather recips
"RTN","ORB3SPEC",98,0)
 ; ORN: notif ien
"RTN","ORB3SPEC",99,0)
 ; ORDFN: pt id
"RTN","ORB3SPEC",100,0)
 ; ORDATA: pkg data
"RTN","ORB3SPEC",101,0)
 ; ORBSMSG: special notif msg rtn by LRALRTS
"RTN","ORB3SPEC",102,0)
 ; ORBMSG: original notif msg
"RTN","ORB3SPEC",103,0)
 ;
"RTN","ORB3SPEC",104,0)
 Q:+$G(ORN)<1
"RTN","ORB3SPEC",105,0)
 Q:+$G(ORDFN)<1
"RTN","ORB3SPEC",106,0)
 Q:+$G(ORDATA)<1
"RTN","ORB3SPEC",107,0)
 N LRID,ORY,I,J,XQAID,XQ0,XQ1,ORNE,RECIP,ORDATAE,LRIDE,STDATE
"RTN","ORB3SPEC",108,0)
 N ORTST,ORBMSGE,ORBMSGX,TXQAID,XQF,ORBHX,ORX,ORBI,ORTSTE
"RTN","ORB3SPEC",109,0)
 ;
"RTN","ORB3SPEC",110,0)
 S LRID=$P($P(ORDATA,"|",2),"@")  ;get lab unique results id (OE IDE)
"RTN","ORB3SPEC",111,0)
 Q:+$G(LRID)<1
"RTN","ORB3SPEC",112,0)
 ;
"RTN","ORB3SPEC",113,0)
 ;get pt's alerts within 24 hours:
"RTN","ORB3SPEC",114,0)
 S STDATE=$$FMADD^XLFDT($$NOW^XLFDT,"","-24","","")
"RTN","ORB3SPEC",115,0)
 D PATIENT^XQALERT("ORY",ORDFN,STDATE,"") ;get pt's alerts
"RTN","ORB3SPEC",116,0)
 ;
"RTN","ORB3SPEC",117,0)
 ;look for pt's alerts with same notif ien and unique lab results id:
"RTN","ORB3SPEC",118,0)
 F I=1:1:ORY D
"RTN","ORB3SPEC",119,0)
 .S XQAID=$P(ORY(I),U,2)
"RTN","ORB3SPEC",120,0)
 .S ORBMSGX=$P(ORY(I),U)
"RTN","ORB3SPEC",121,0)
 .S ORNE=$P($P(XQAID,";"),",",3)  ;get notif ien
"RTN","ORB3SPEC",122,0)
 .Q:ORNE'=ORN
"RTN","ORB3SPEC",123,0)
 .;
"RTN","ORB3SPEC",124,0)
 .;find matching alert:
"RTN","ORB3SPEC",125,0)
 .D AHISTORY^XQALBUTL(XQAID,"ORBHX")
"RTN","ORB3SPEC",126,0)
 .S ORDATAE=$G(ORBHX(2))
"RTN","ORB3SPEC",127,0)
 .Q:'$L(ORDATAE)
"RTN","ORB3SPEC",128,0)
 .S LRIDE=$P($P(ORDATAE,"|",2),"@")  ;get lab rslts id from existng alert
"RTN","ORB3SPEC",129,0)
 .Q:LRIDE'=LRID
"RTN","ORB3SPEC",130,0)
 .;
"RTN","ORB3SPEC",131,0)
 .S:ORBMSG["[" ORTST=$P($P(ORBMSG,"[",2),"]")
"RTN","ORB3SPEC",132,0)
 .I ORBMSG'["[" D
"RTN","ORB3SPEC",133,0)
 ..S:ORBMSG["labs: " ORTST=$P(ORBMSG,"labs: ",2)
"RTN","ORB3SPEC",134,0)
 ..S:ORBMSG["results: " ORTST=$P(ORBMSG,"results: ",2)
"RTN","ORB3SPEC",135,0)
 .;
"RTN","ORB3SPEC",136,0)
 .S ORBMSGE=$P(ORBMSGX,"): ",2)
"RTN","ORB3SPEC",137,0)
 .S:ORBMSGE["[" ORTSTE=$P($P(ORBMSGE,"[",2),"]")  ;added to fix CQ #17548 (Part A) for CPRS v28.1 (TC).
"RTN","ORB3SPEC",138,0)
 .;added to fix CQ #19497: undefined ORTSTE variable [v28.17] (TC)
"RTN","ORB3SPEC",139,0)
 .I ORBMSGE'["[" D
"RTN","ORB3SPEC",140,0)
 ..S:ORBMSGE["labs: " ORTSTE=$P(ORBMSGE,"labs: ",2)
"RTN","ORB3SPEC",141,0)
 ..S:ORBMSGE["results: " ORTSTE=$P(ORBMSGE,"results: ",2)
"RTN","ORB3SPEC",142,0)
 .E  S ORTSTE=""
"RTN","ORB3SPEC",143,0)
 .;
"RTN","ORB3SPEC",144,0)
 .S ORX=0
"RTN","ORB3SPEC",145,0)
 .;if alert has recips, get recips from existing alert:
"RTN","ORB3SPEC",146,0)
 .S:$L($G(ORBHX(20,0))) ORX=$P(ORBHX(20,0),U,4)
"RTN","ORB3SPEC",147,0)
 .F ORBI=1:1:ORX D
"RTN","ORB3SPEC",148,0)
 ..S RECIP=+ORBHX(20,ORBI,0)
"RTN","ORB3SPEC",149,0)
 ..S ORBASPEC(RECIP)=""  ;add recip to new alert recip list
"RTN","ORB3SPEC",150,0)
 .;
"RTN","ORB3SPEC",151,0)
 .;delete existing alert:
"RTN","ORB3SPEC",152,0)
 .S XQAKILL=0  ;delete for all recips
"RTN","ORB3SPEC",153,0)
 .D DELETE^XQALERT
"RTN","ORB3SPEC",154,0)
 .K XQAKILL,XQAID
"RTN","ORB3SPEC",155,0)
 ;
"RTN","ORB3SPEC",156,0)
 ;if NO prev alert msg for this pt, notif, lab unique id:
"RTN","ORB3SPEC",157,0)
 I '$L($G(ORBMSGE)) S ORBSMSG=ORBMSG
"RTN","ORB3SPEC",158,0)
 ;
"RTN","ORB3SPEC",159,0)
 ;if prev alert msg for this pt, notif, lab unique id:
"RTN","ORB3SPEC",160,0)
 I $L($G(ORBMSGE)) D
"RTN","ORB3SPEC",161,0)
 .;S:ORBMSGE["[" ORBSMSG=$P(ORBMSGE,"]")_", "_ORTST_"]"
"RTN","ORB3SPEC",162,0)
 .S ORBSMSG=$S(ORBMSGE["["&(ORTSTE'=ORTST):$P(ORBMSGE,"]")_", "_ORTST_"]",(ORBMSGE'["[")&(ORTSTE'=ORTST):ORBMSGE_", "_ORTST,1:ORBMSGE) ;added to fix CQ #17548 (Part A) for CPRS v28.1 (TC).
"RTN","ORB3SPEC",163,0)
 .;S:ORBMSGE'["[" ORBSMSG=ORBMSGE_", "_ORTST
"RTN","ORB3SPEC",164,0)
 ;
"RTN","ORB3SPEC",165,0)
 Q
"RTN","ORB3SPEC",166,0)
 ;
"RTN","ORB3SPEC",167,0)
TITLE(OROI,ORPAR) ;get provider recips
"RTN","ORB3SPEC",168,0)
 N ORTIT
"RTN","ORB3SPEC",169,0)
 I $D(ORBU) D
"RTN","ORB3SPEC",170,0)
 .S ORBU(ORBUI)=" ",ORBUI=ORBUI+1
"RTN","ORB3SPEC",171,0)
 .S ORBU(ORBUI)="Special potential recipients from parameter: "_ORPAR_" PR",ORBUI=ORBUI+1
"RTN","ORB3SPEC",172,0)
 ;
"RTN","ORB3SPEC",173,0)
 ;process special recip users, teams and devices for Provider Recipients
"RTN","ORB3SPEC",174,0)
 S ORTIT=$$GET^XPAR("ALL",ORPAR_" PR","`"_OROI,"E")
"RTN","ORB3SPEC",175,0)
 Q:'$L(ORTIT)
"RTN","ORB3SPEC",176,0)
 I ORTIT["P" D PRIMARY
"RTN","ORB3SPEC",177,0)
 I ORTIT["A" D ATTEND
"RTN","ORB3SPEC",178,0)
 I ORTIT["T" D TEAMS
"RTN","ORB3SPEC",179,0)
 I ORTIT["O" D ORDERER
"RTN","ORB3SPEC",180,0)
 I ORTIT["E" D ENTERBY
"RTN","ORB3SPEC",181,0)
 I ORTIT["R" D PCMMPRIM
"RTN","ORB3SPEC",182,0)
 I ORTIT["S" D PCMMASSC
"RTN","ORB3SPEC",183,0)
 I ORTIT["M" D PCMMTEAM
"RTN","ORB3SPEC",184,0)
 Q
"RTN","ORB3SPEC",185,0)
PRIMARY ;
"RTN","ORB3SPEC",186,0)
 I $D(ORBU),+$G(ORBPRIM)>0 S ORBU(ORBUI)=" Flagged OI Inpt primary provider:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",187,0)
 I $D(ORBU),+$G(ORBPRIM)<1 S ORBU(ORBUI)=" Flagged OI Inpt primary provider: option cannot determine without A/D/T event data.",ORBUI=ORBUI+1
"RTN","ORB3SPEC",188,0)
 I +$G(ORBPRIM)>0 S ORBASPEC(ORBPRIM)=""
"RTN","ORB3SPEC",189,0)
 Q
"RTN","ORB3SPEC",190,0)
ATTEND ;
"RTN","ORB3SPEC",191,0)
 I $D(ORBU),+$G(ORBATTD)>0 S ORBU(ORBUI)=" Flagged OI Attending physician:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",192,0)
 I $D(ORBU),+$G(ORBATTD)<1 S ORBU(ORBUI)=" Flagged OI Attending physician: option cannot determine without A/D/T event data.",ORBUI=ORBUI+1
"RTN","ORB3SPEC",193,0)
 I +$G(ORBATTD)>0 S ORBASPEC(ORBATTD)=""
"RTN","ORB3SPEC",194,0)
 Q
"RTN","ORB3SPEC",195,0)
TEAMS ;
"RTN","ORB3SPEC",196,0)
 N ORBLST,ORBI,ORBJ,ORBTM,ORBTNAME,ORBTTYPE,ORBTD
"RTN","ORB3SPEC",197,0)
 I $D(ORBU) S ORBU(ORBUI)=" Flagged OI Teams/Personal Lists related to patient:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",198,0)
 D TMSPT^ORQPTQ1(.ORBLST,ORDFN)
"RTN","ORB3SPEC",199,0)
 Q:+$G(ORBLST(1))<1
"RTN","ORB3SPEC",200,0)
 S ORBI="" F  S ORBI=$O(ORBLST(ORBI)) Q:ORBI=""  D
"RTN","ORB3SPEC",201,0)
 .S ORBTM=$P(ORBLST(ORBI),U),ORBTNAME=$P(ORBLST(ORBI),U,2)
"RTN","ORB3SPEC",202,0)
 .S ORBTTYPE=$P(ORBLST(ORBI),U,3)
"RTN","ORB3SPEC",203,0)
 .I $D(ORBU) D
"RTN","ORB3SPEC",204,0)
 ..S ORBU(ORBUI)="  Patient list "_ORBTNAME_" ["_ORBTTYPE_"]:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",205,0)
 .N ORBLST2 D TEAMPROV^ORQPTQ1(.ORBLST2,ORBTM)
"RTN","ORB3SPEC",206,0)
 .Q:+$G(ORBLST2(1))<1
"RTN","ORB3SPEC",207,0)
 .S ORBJ="" F  S ORBJ=$O(ORBLST2(ORBJ)) Q:ORBJ=""  D
"RTN","ORB3SPEC",208,0)
 ..S ORBDUZ=$P(ORBLST2(ORBJ),U)_U_ORBTM I +$G(ORBDUZ)>0 S ORBASPEC(ORBDUZ)=""
"RTN","ORB3SPEC",209,0)
 .S ORBTD=$P($$TMDEV^ORB31(ORBTM),U,2)  ;tm's device
"RTN","ORB3SPEC",210,0)
 .I $L(ORBTD) D
"RTN","ORB3SPEC",211,0)
 ..S ORBSDEV(ORBTD)=""
"RTN","ORB3SPEC",212,0)
 ..I $D(ORBU) D
"RTN","ORB3SPEC",213,0)
 ...S ORBU(ORBUI)="   Team's Device "_ORBTD_" is a recipient",ORBUI=ORBUI+1
"RTN","ORB3SPEC",214,0)
 Q
"RTN","ORB3SPEC",215,0)
ORDERER ;
"RTN","ORB3SPEC",216,0)
 N ORBDUZ
"RTN","ORB3SPEC",217,0)
 I $D(ORBU) S ORBU(ORBUI)=" Flagged OI Ordering provider:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",218,0)
 Q:+$G(ORNUM)<1
"RTN","ORB3SPEC",219,0)
 S ORBDUZ=$$ORDERER^ORQOR2(ORNUM)
"RTN","ORB3SPEC",220,0)
 I +$G(ORBDUZ)>0 D
"RTN","ORB3SPEC",221,0)
 .S ORBASPEC(ORBDUZ)=""
"RTN","ORB3SPEC",222,0)
 Q
"RTN","ORB3SPEC",223,0)
ENTERBY ;
"RTN","ORB3SPEC",224,0)
 N ORBDUZ
"RTN","ORB3SPEC",225,0)
 I $D(ORBU) S ORBU(ORBUI)=" Flagged OI User entering order's most recent activity:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",226,0)
 Q:+$G(ORNUM)<1
"RTN","ORB3SPEC",227,0)
 I $D(^OR(100,ORNUM,8,0)) D
"RTN","ORB3SPEC",228,0)
 .S ORBDUZ=$P(^OR(100,ORNUM,8,$P(^OR(100,ORNUM,8,0),U,3),0),U,13)
"RTN","ORB3SPEC",229,0)
 I +$G(ORBDUZ)>0 S ORBASPEC(ORBDUZ)=""
"RTN","ORB3SPEC",230,0)
 Q
"RTN","ORB3SPEC",231,0)
PCMMPRIM ;
"RTN","ORB3SPEC",232,0)
 N ORBDUZ
"RTN","ORB3SPEC",233,0)
 I $D(ORBU) S ORBU(ORBUI)=" Flagged OI PCMM Primary Care Practitioner:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",234,0)
 S ORBDUZ=+$$OUTPTPR^SDUTL3(ORDFN,$$NOW^XLFDT,1)  ;DBIA #1252
"RTN","ORB3SPEC",235,0)
 I +$G(ORBDUZ)>0 S ORBASPEC(ORBDUZ)=""
"RTN","ORB3SPEC",236,0)
 Q
"RTN","ORB3SPEC",237,0)
PCMMASSC ;
"RTN","ORB3SPEC",238,0)
 N ORBDUZ
"RTN","ORB3SPEC",239,0)
 I $D(ORBU) S ORBU(ORBUI)=" Flagged OI PCMM Associate Provider:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",240,0)
 S ORBDUZ=+$$OUTPTAP^SDUTL3(ORDFN,$$NOW^XLFDT)  ;DBIA #1252
"RTN","ORB3SPEC",241,0)
 I +$G(ORBDUZ)>0 S ORBASPEC(ORBDUZ)=""
"RTN","ORB3SPEC",242,0)
 Q
"RTN","ORB3SPEC",243,0)
PCMMTEAM ;
"RTN","ORB3SPEC",244,0)
 N ORPCMM,ORPCMMDZ,ORBDUZ
"RTN","ORB3SPEC",245,0)
 I $D(ORBU) S ORBU(ORBUI)=" Flagged OI PCMM Team Position Assignments:",ORBUI=ORBUI+1
"RTN","ORB3SPEC",246,0)
 S ORPCMM=$$PRPT^SCAPMC(ORDFN,,,,,,"^TMP(""ORPCMM"",$J)",)  ;DBIA #1916
"RTN","ORB3SPEC",247,0)
 S ORPCMMDZ=0
"RTN","ORB3SPEC",248,0)
 F  S ORPCMMDZ=$O(^TMP("ORPCMM",$J,"SCPR",ORPCMMDZ)) Q:'ORPCMMDZ  D
"RTN","ORB3SPEC",249,0)
 .S ORBDUZ=ORPCMMDZ S ORBASPEC(ORBDUZ)=""
"RTN","ORB3SPEC",250,0)
 K ^TMP("ORPCMM",$J)
"RTN","ORB3SPEC",251,0)
 Q
"RTN","ORCDPS1")
0^97^B78578103
"RTN","ORCDPS1",1,0)
ORCDPS1 ;SLC/MKB-Pharmacy dialog utilities ; 12/9/2010
"RTN","ORCDPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,117,141,149,195,215,243,280,337**;Dec 17, 1997;Build 85
"RTN","ORCDPS1",3,0)
 ;
"RTN","ORCDPS1",4,0)
 ; DBIA 2418   START^PSSJORDF   ^TMP("PSJMR",$J)
"RTN","ORCDPS1",5,0)
 ; DBIA 3166   EN^PSSDIN        ^TMP("PSSDIN",$J)
"RTN","ORCDPS1",6,0)
 ; 
"RTN","ORCDPS1",7,0)
EN(TYPE) ; -- entry action for Meds dialogs
"RTN","ORCDPS1",8,0)
 S ORINPT=$$INPT^ORCD,ORCAT=$G(TYPE)
"RTN","ORCDPS1",9,0)
 I 'ORINPT,ORCAT="I" D IMOLOC^ORIMO(.ORINPT,+ORL,+ORVP) S:ORINPT<0 ORINPT=0 ;allow inpt meds at this location?
"RTN","ORCDPS1",10,0)
 I ORCAT="" D
"RTN","ORCDPS1",11,0)
 . I $G(ORENEW)!$G(OREWRITE)!$D(OREDIT),$L($P($G(OR0),U,12)) S ORCAT=$P(OR0,U,12) Q  ;use value from order, via ORCACT4
"RTN","ORCDPS1",12,0)
 . S ORCAT=$S(ORINPT:"I",1:"O")
"RTN","ORCDPS1",13,0)
 S ORDG=+$O(^ORD(100.98,"B",$S(ORCAT="I":"UD RX",1:"O RX"),0))
"RTN","ORCDPS1",14,0)
 K ^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPS1",15,0)
 I $G(ORENEW)!$G(OREWRITE)!$G(OREDIT)!$G(ORXFER) D  Q:$G(ORQUIT)
"RTN","ORCDPS1",16,0)
 . I 'ORINPT,ORCAT="I" D  Q:$G(ORQUIT)
"RTN","ORCDPS1",17,0)
 .. N OI S OI=+$O(^OR(100,+$G(ORIFN),.1,"B",0)) Q:OI<1
"RTN","ORCDPS1",18,0)
 .. I '$O(^ORD(101.43,OI,9,"B","IVM RX",0)) S ORQUIT=1 W $C(7),!!,"This order may not be placed at this location!" Q
"RTN","ORCDPS1",19,0)
 . K ORDIALOG($$PTR("START DATE/TIME"),1)
"RTN","ORCDPS1",20,0)
 . K ORDIALOG($$PTR("NOW"),1) Q:ORCAT'="O"
"RTN","ORCDPS1",21,0)
 . N WP S WP=$$PTR("WORD PROCESSING 1")
"RTN","ORCDPS1",22,0)
 . I '$G(ORXFER),'$$DRAFT^ORWDX2($G(ORIFN)) K ORDIALOG(WP,1),^TMP("ORWORD",$J,WP)
"RTN","ORCDPS1",23,0)
 . I $G(OREDIT),'$O(ORDIALOG($$PTR^ORCD("OR GTX INSTRUCTIONS"),0)) K ^TMP("ORWORD",$J)
"RTN","ORCDPS1",24,0)
 I ORINPT,ORCAT="O" W $C(7),!!,"NOTE: This will create an outpatient prescription for an inpatient!",!
"RTN","ORCDPS1",25,0)
 Q
"RTN","ORCDPS1",26,0)
 ;
"RTN","ORCDPS1",27,0)
EN1 ; -- setup Meds dialog for quick order editor using ORDG
"RTN","ORCDPS1",28,0)
 N DG S DG=$P($G(^ORD(100.98,+$G(ORDG),0)),U,3)
"RTN","ORCDPS1",29,0)
 I $P(DG," ")="O"!(DG="SPLY") S ORINPT=0,ORCAT="O"
"RTN","ORCDPS1",30,0)
 E  S ORINPT=1,ORCAT="I"
"RTN","ORCDPS1",31,0)
 K ^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPS1",32,0)
 Q
"RTN","ORCDPS1",33,0)
 ;
"RTN","ORCDPS1",34,0)
ENOI ; -- setup OI prompt
"RTN","ORCDPS1",35,0)
 N D S D=$G(ORDIALOG(PROMPT,"D"))
"RTN","ORCDPS1",36,0)
 S:D="S.RX" ORDIALOG(PROMPT,"D")=$S(ORCAT="I":"S.UD RX",1:"S.O RX")
"RTN","ORCDPS1",37,0)
 I ORCAT="I",'ORINPT,D="S.UD RX" D  ;limit to IV meds for outpt's
"RTN","ORCDPS1",38,0)
 . S ORDIALOG(PROMPT,"D")="S.IVM RX" ;ORDG=+$O(^ORD(100.98,"B","O RX",0))
"RTN","ORCDPS1",39,0)
 . S ORDIALOG(PROMPT,"?")="Enter the IV medication you wish to order for this patient."
"RTN","ORCDPS1",40,0)
 Q
"RTN","ORCDPS1",41,0)
 ;
"RTN","ORCDPS1",42,0)
DEA ; -- ck DEA# of ordering provider if SchedII drug
"RTN","ORCDPS1",43,0)
 Q:$G(ORTYPE)="Z"  N DEAFLG,PSOI
"RTN","ORCDPS1",44,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(Y),0)),U,2) Q:PSOI'>0
"RTN","ORCDPS1",45,0)
 S DEAFLG=$$OIDEA^PSSUTLA1(PSOI,ORCAT) Q:DEAFLG'>0  ;ok
"RTN","ORCDPS1",46,0)
 I $G(ORNP),'$L($P($G(^VA(200,+ORNP,"PS")),U,2)),'$L($P($G(^("PS")),U,3)) W $C(7),!,$P($G(^(0)),U)_" must have a DEA# or VA# to order this drug!" K DONE Q
"RTN","ORCDPS1",47,0)
 I DEAFLG=1 W $C(7),!,"This order will require a wet signature!"
"RTN","ORCDPS1",48,0)
 Q
"RTN","ORCDPS1",49,0)
 ;
"RTN","ORCDPS1",50,0)
CHANGED(X) ; -- Kill dependent values when prompt X changes
"RTN","ORCDPS1",51,0)
 N PROMPTS,NAME,PTR,P,I
"RTN","ORCDPS1",52,0)
 S PROMPTS=X I X="OI" D
"RTN","ORCDPS1",53,0)
 . S PROMPTS="INSTRUCTIONS^ROUTE^SCHEDULE^START DATE/TIME^DURATION^AND/THEN^DOSE^DISPENSE DRUG^SIG^PATIENT INSTRUCTIONS^DAYS SUPPLY^QUANTITY^REFILLS^SERVICE CONNECTED"
"RTN","ORCDPS1",54,0)
 . K ORDRUG,ORDOSE,OROUTE,ORSCH,ORSD,ORDSUP,ORQTY,ORQTYUNT,OREFILLS,ORCOPAY
"RTN","ORCDPS1",55,0)
 . K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPS1",56,0)
 I X="DS" S PROMPTS="QUANTITY^REFILLS" K OREFILLS
"RTN","ORCDPS1",57,0)
 F P=1:1:$L(PROMPTS,U) S NAME=$P(PROMPTS,U,P) D
"RTN","ORCDPS1",58,0)
 . S PTR=$$PTR(NAME) Q:'PTR
"RTN","ORCDPS1",59,0)
 . S I=0 F  S I=$O(ORDIALOG(PTR,I)) Q:I'>0  K ORDIALOG(PTR,I)
"RTN","ORCDPS1",60,0)
 . K ORDIALOG(PTR,"LIST"),^TMP("ORWORD",$J,PTR)
"RTN","ORCDPS1",61,0)
 Q
"RTN","ORCDPS1",62,0)
 ;
"RTN","ORCDPS1",63,0)
ORDITM(OI) ; -- Check OI, get dependent info
"RTN","ORCDPS1",64,0)
 Q:OI'>0  ;quit - no value
"RTN","ORCDPS1",65,0)
 N ORPS,ORPSOI S ORPS=$G(^ORD(101.43,+OI,"PS")),ORPSOI=+$P($G(^(0)),U,2)
"RTN","ORCDPS1",66,0)
 S ORIV=$S($P(ORPS,U)=2:1,1:0)
"RTN","ORCDPS1",67,0)
 I $G(ORCAT)="O",'$P(ORPS,U,2) W $C(7),!,"This drug may not be used in an outpatient order." S ORQUIT=1 D WAIT Q
"RTN","ORCDPS1",68,0)
 I $G(ORCAT)="I" D  Q:$G(ORQUIT)
"RTN","ORCDPS1",69,0)
 . I $G(ORINPT),'$P(ORPS,U) W $C(7),!,"This drug may not be used in an inpatient order." S ORQUIT=1 D WAIT Q
"RTN","ORCDPS1",70,0)
 . I '$G(ORINPT),'ORIV W $C(7),!,"This drug may not be ordered for an outpatient." S ORQUIT=1 D WAIT Q
"RTN","ORCDPS1",71,0)
 I $G(ORTYPE)="Q" D  I $G(ORQUIT) D WAIT Q
"RTN","ORCDPS1",72,0)
 . N DEAFLG S DEAFLG=$$OIDEA^PSSUTLA1(ORPSOI,ORCAT) Q:DEAFLG'>0  ;ok
"RTN","ORCDPS1",73,0)
 . I $G(ORNP),'$L($P($G(^VA(200,+ORNP,"PS")),U,2)),'$L($P($G(^("PS")),U,3)) W $C(7),!,$P($G(^(0)),U)_" must have a DEA# or VA# to order this drug!" S ORQUIT=1 Q
"RTN","ORCDPS1",74,0)
 . I DEAFLG=1 W $C(7),!,"This order will require a wet signature!"
"RTN","ORCDPS1",75,0)
OI1 ; -ck NF status
"RTN","ORCDPS1",76,0)
 I $P(ORPS,U,6),'$G(ORENEW) D  ;alternative
"RTN","ORCDPS1",77,0)
 . W !!,"*** This medication is not in the formulary! ***"
"RTN","ORCDPS1",78,0)
 . N PSX,CNT,ORX,DIR,X,Y,DTOUT,DUOUT
"RTN","ORCDPS1",79,0)
 . D EN1^PSSUTIL1(.ORPSOI,ORCAT) I '$O(ORPSOI(0)) D  Q
"RTN","ORCDPS1",80,0)
 .. W !,"    There are no formulary alternatives entered for this item."
"RTN","ORCDPS1",81,0)
 .. W !,"    Please consult with your pharmacy before ordering it."
"RTN","ORCDPS1",82,0)
 . S PSX=0,CNT=0 F  S PSX=$O(ORPSOI(PSX)) Q:PSX'>0  D
"RTN","ORCDPS1",83,0)
 .. S ORX=+$O(^ORD(101.43,"ID",PSX_";99PSP",0)) Q:ORX'>0
"RTN","ORCDPS1",84,0)
 .. S CNT=CNT+1,ORPSOI("OI",CNT)=ORX_U_PSX
"RTN","ORCDPS1",85,0)
 .. S DIR("A",CNT)=$J(CNT,3)_" "_$P($G(^ORD(101.43,ORX,0)),U)
"RTN","ORCDPS1",86,0)
 . S DIR(0)="NAO^1:"_CNT,DIR("A")="Select alternative (or <return> to continue): "
"RTN","ORCDPS1",87,0)
 . S DIR("?")="The medication selected is not in the formulary; you may select one of the above listed alternatives instead, or press <return> to continue processing this order."
"RTN","ORCDPS1",88,0)
 . Q:CNT'>0  W !,"    Formulary alternatives:" D ^DIR
"RTN","ORCDPS1",89,0)
 . I Y'>0 S:$D(DTOUT)!$D(DUOUT) ORQUIT=1 Q
"RTN","ORCDPS1",90,0)
 . D:OI'=+ORPSOI("OI",+Y) CHANGED("OI") ;reset parameters if different
"RTN","ORCDPS1",91,0)
 . S OI=+ORPSOI("OI",+Y),ORDIALOG(PROMPT,INST)=OI,OROI=OI
"RTN","ORCDPS1",92,0)
 . S ORPSOI=+$P(ORPSOI("OI",+Y),U,2)
"RTN","ORCDPS1",93,0)
OI2 ; -get routes, doses [also called from NF^ORCDPS]
"RTN","ORCDPS1",94,0)
 D:'$D(^TMP("PSJMR",$J)) START^PSSJORDF(ORPSOI,$G(ORCAT))  ;DBIA 2418
"RTN","ORCDPS1",95,0)
 I '$D(ORDOSE) D
"RTN","ORCDPS1",96,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORPSOI,$S($G(ORCAT)="I":"U",1:"O"),+ORVP)
"RTN","ORCDPS1",97,0)
 . K:$G(ORDOSE(1))=-1 ORDOSE
"RTN","ORCDPS1",98,0)
 Q
"RTN","ORCDPS1",99,0)
 ;
"RTN","ORCDPS1",100,0)
NFI(OI) ; -- Show NFI restrictions, if exist
"RTN","ORCDPS1",101,0)
 N PSOI,I,J,LCNT,MAX,X,STOP
"RTN","ORCDPS1",102,0)
 S PSOI=+$P($G(^ORD(101.43,+$G(OI),0)),U,2)
"RTN","ORCDPS1",103,0)
 D EN^PSSDIN(PSOI,"") Q:'$D(^TMP("PSSDIN",$J,"OI",PSOI))  ;DBIA 3166
"RTN","ORCDPS1",104,0)
 S I=0,LCNT=0,MAX=$S($G(IOBM)&$G(IOTM):IOBM-IOTM+1,1:24) W !
"RTN","ORCDPS1",105,0)
 F  S I=$O(^TMP("PSSDIN",$J,"OI",PSOI,I)) Q:I'>0  D
"RTN","ORCDPS1",106,0)
 . S J=0 F  S J=$O(^TMP("PSSDIN",$J,"OI",PSOI,I,J)) Q:J'>0  S X=$G(^(J)) D  Q:$G(STOP)
"RTN","ORCDPS1",107,0)
 .. S LCNT=LCNT+1 I LCNT'<MAX S:'$$CONT STOP=1 Q:$G(STOP)  S LCNT=1
"RTN","ORCDPS1",108,0)
 .. W !,X
"RTN","ORCDPS1",109,0)
 W ! K ^TMP("PSSDIN",$J,"OI",PSOI)
"RTN","ORCDPS1",110,0)
 Q
"RTN","ORCDPS1",111,0)
 ;
"RTN","ORCDPS1",112,0)
CONT() ; -- Cont or stop?
"RTN","ORCDPS1",113,0)
 N X,Y,DIR,DUOUT,DTOUT,DIRUT,DIROUT S DIR(0)="EA"
"RTN","ORCDPS1",114,0)
 S DIR("A")="Press <return> to continue or ^ to stop ..."
"RTN","ORCDPS1",115,0)
 D ^DIR S:$D(DUOUT)!$D(DTOUT) Y=""
"RTN","ORCDPS1",116,0)
 Q +Y
"RTN","ORCDPS1",117,0)
 ;
"RTN","ORCDPS1",118,0)
WAIT ; -- Wait for user
"RTN","ORCDPS1",119,0)
 N X W !,"Press <return> to continue ..." R X:DTIME
"RTN","ORCDPS1",120,0)
 Q
"RTN","ORCDPS1",121,0)
 ;
"RTN","ORCDPS1",122,0)
ROUTES ; -- Get med routes
"RTN","ORCDPS1",123,0)
 Q:$G(ORDIALOG(PROMPT,"LIST"))  N I,X,CNT S (I,CNT)=0
"RTN","ORCDPS1",124,0)
 F  S I=$O(^TMP("PSJMR",$J,I)) Q:I'>0  S X=^(I),CNT=CNT+1,ORDIALOG(PROMPT,"LIST",CNT)=$P(X,U,3)_U_$P(X,U,1,2),ORDIALOG(PROMPT,"LIST","B",$P(X,U))=$P(X,U,3)
"RTN","ORCDPS1",125,0)
 S:$G(CNT) ORDIALOG(PROMPT,"LIST")=CNT
"RTN","ORCDPS1",126,0)
 S:$G(ORTYPE)'="Z" REQD=$S(ORCAT="I":1,$P($G(^ORD(101.43,+$G(OROI),"PS")),U,5):0,1:1)
"RTN","ORCDPS1",127,0)
 Q
"RTN","ORCDPS1",128,0)
 ;
"RTN","ORCDPS1",129,0)
DEFRTE ; -- Get default route
"RTN","ORCDPS1",130,0)
 N INST1 S INST1=$O(ORDIALOG(PROMPT,0)) S:INST1'>0 INST1=INST
"RTN","ORCDPS1",131,0)
 I INST1=INST S Y=+$P($G(^TMP("PSJMR",$J,1)),U,3) K:Y'>0 Y Q
"RTN","ORCDPS1",132,0)
 S Y=+$G(ORDIALOG(PROMPT,INST1)) K:Y'>0 Y S:$G(Y) EDITONLY=1
"RTN","ORCDPS1",133,0)
 Q
"RTN","ORCDPS1",134,0)
 ;
"RTN","ORCDPS1",135,0)
CKSCH ; -- validate schedule [Called from P-S Action]
"RTN","ORCDPS1",136,0)
 N ORX S ORX=ORDIALOG(PROMPT,ORI) Q:ORX=$G(ORESET)  K ORSD
"RTN","ORCDPS1",137,0)
 D EN^PSSGS0(.ORX,$G(ORCAT))
"RTN","ORCDPS1",138,0)
 I $D(ORX) S ORDIALOG(PROMPT,ORI)=ORX D CHANGED("QUANTITY") Q  ;ok
"RTN","ORCDPS1",139,0)
 W $C(7),!,"Enter a standard schedule for administering this medication"
"RTN","ORCDPS1",140,0)
 K DONE I $G(ORCAT)="I" W ".",! Q
"RTN","ORCDPS1",141,0)
 W " or one of your own,",!,"up to 20 characters.",!
"RTN","ORCDPS1",142,0)
 Q
"RTN","ORCDPS1",143,0)
 ;
"RTN","ORCDPS1",144,0)
DEFCONJ ; -- Set default conjuction for previous instance [P-S Action]
"RTN","ORCDPS1",145,0)
 N LAST,DUR,CONJ
"RTN","ORCDPS1",146,0)
 S LAST=$O(ORDIALOG(PROMPT,ORI),-1) Q:LAST'>0  ;first instance
"RTN","ORCDPS1",147,0)
 S CONJ=$$PTR("AND/THEN") Q:$L($G(ORDIALOG(CONJ,LAST)))
"RTN","ORCDPS1",148,0)
 S DUR=$G(ORDIALOG($$PTR("DURATION"),LAST))
"RTN","ORCDPS1",149,0)
 S ORDIALOG(CONJ,LAST)=$S(+DUR'>0:"A",1:"T")
"RTN","ORCDPS1",150,0)
 Q
"RTN","ORCDPS1",151,0)
 ;
"RTN","ORCDPS1",152,0)
ENCONJ ; -- Get allowable values, if req'd for INST
"RTN","ORCDPS1",153,0)
 N P S P=$$PTR("INSTRUCTIONS")
"RTN","ORCDPS1",154,0)
 S REQD=$S($O(ORDIALOG(P,INST)):1,1:0)
"RTN","ORCDPS1",155,0)
 S ORDIALOG(PROMPT,"A")="And/then"_$S(ORCAT="O":"/except: ",1:": ")
"RTN","ORCDPS1",156,0)
 S $P(ORDIALOG(PROMPT,0),U,2)="A:AND;T:THEN;"_$S(ORCAT="O":"X:EXCEPT;",1:"")
"RTN","ORCDPS1",157,0)
 Q
"RTN","ORCDPS1",158,0)
 ;
"RTN","ORCDPS1",159,0)
INPCONJ ;
"RTN","ORCDPS1",160,0)
 N LETTER,DUR
"RTN","ORCDPS1",161,0)
 I $G(X)="" Q
"RTN","ORCDPS1",162,0)
 S LETTER=$$UP^XLFSTR($E(X,1))
"RTN","ORCDPS1",163,0)
 I LETTER'="T" Q
"RTN","ORCDPS1",164,0)
 S DUR=$$PTR("DURATION") I '$L($G(ORDIALOG(DUR,INST))) D
"RTN","ORCDPS1",165,0)
 .W !,"A duration is required when using a 'Then' conjunction."
"RTN","ORCDPS1",166,0)
 .K X
"RTN","ORCDPS1",167,0)
 Q
"RTN","ORCDPS1",168,0)
 ;
"RTN","ORCDPS1",169,0)
DSUP ; -- Get max/default days supply
"RTN","ORCDPS1",170,0)
 N ORX,Y
"RTN","ORCDPS1",171,0)
 S ORX("PATIENT")=+$G(ORVP),ORX("DRUG")=+$G(ORDRUG)
"RTN","ORCDPS1",172,0)
 D DSUP^PSOSIGDS(.ORX) S Y=+$G(ORX("DAYS SUPPLY")) S:Y'>0 Y=90
"RTN","ORCDPS1",173,0)
 ;S $P(ORDIALOG(PROMPT,0),U,2)="1:"_Y ;max allowed
"RTN","ORCDPS1",174,0)
 I '$G(ORDIALOG(PROMPT,1)),$G(ORTYPE)'="Z" S ORDIALOG(PROMPT,1)=Y
"RTN","ORCDPS1",175,0)
 Q
"RTN","ORCDPS1",176,0)
 ;
"RTN","ORCDPS1",177,0)
QTY() ; -- Return default quantity [Expects ORDSUP]
"RTN","ORCDPS1",178,0)
 N INSTR,DOSE,DUR,SCH,I,ORX,X,Y
"RTN","ORCDPS1",179,0)
 S Y="" I $G(ORDSUP)'>0!'$G(ORDRUG) G QTYQ ;need days supply, disp drug
"RTN","ORCDPS1",180,0)
 S INSTR=$$PTR("INSTRUCTIONS")
"RTN","ORCDPS1",181,0)
 S DOSE=$$PTR("DOSE"),CONJ=$$PTR("AND/THEN")
"RTN","ORCDPS1",182,0)
 S DUR=$$PTR("DURATION"),SCH=$$PTR("SCHEDULE")
"RTN","ORCDPS1",183,0)
 S I=0 F  S I=$O(ORDIALOG(INSTR,I)) Q:I'>0  D  Q:'$D(ORX)
"RTN","ORCDPS1",184,0)
 . S X=$P($G(ORDIALOG(DOSE,I)),"&",3) I X'>0 K ORX Q
"RTN","ORCDPS1",185,0)
 . S ORX("DOSE ORDERED",I)=X,ORX("SCHEDULE",I)=$G(ORDIALOG(SCH,I))
"RTN","ORCDPS1",186,0)
 . S X=$G(ORDIALOG(DUR,I)),ORX("DURATION",I)=$$HL7DUR^ORMBLDPS
"RTN","ORCDPS1",187,0)
 . S ORX("CONJUNCTION",I)=$G(ORDIALOG(CONJ,I))
"RTN","ORCDPS1",188,0)
 G:'$D(ORX) QTYQ ;no doses
"RTN","ORCDPS1",189,0)
 S ORX("PATIENT")=+$G(ORVP),ORX("DRUG")=+$G(ORDRUG)
"RTN","ORCDPS1",190,0)
 S ORX("DAYS SUPPLY")=+$G(ORDSUP)
"RTN","ORCDPS1",191,0)
 D QTYX^PSOSIG(.ORX) S Y=$G(ORX("QTY"))
"RTN","ORCDPS1",192,0)
QTYQ Q Y
"RTN","ORCDPS1",193,0)
 ;
"RTN","ORCDPS1",194,0)
MAXREFS ; -- Get max refills allowed [Entry Action]
"RTN","ORCDPS1",195,0)
 Q:$G(ORCAT)'="O"  N ORX,X
"RTN","ORCDPS1",196,0)
 S ORX("ITEM")=+$P($G(^ORD(101.43,+$G(OROI),0)),U,2)
"RTN","ORCDPS1",197,0)
 S ORX("DRUG")=+$G(ORDRUG),ORX("PATIENT")=+$G(ORVP)
"RTN","ORCDPS1",198,0)
 I $G(OREVENT),$$TYPE^OREVNTX(OREVENT)="D" S ORX("DISCHARGE")=1
"RTN","ORCDPS1",199,0)
 S ORX("DAYS SUPPLY")=$G(ORDSUP) D MAX^PSOSIGDS(.ORX)
"RTN","ORCDPS1",200,0)
 S OREFILLS=$G(ORX("MAX")),X=$G(ORDIALOG(PROMPT,INST))
"RTN","ORCDPS1",201,0)
 I OREFILLS'>0 S ORDIALOG(PROMPT,INST)=0 W !,"No refills allowed." Q
"RTN","ORCDPS1",202,0)
 S $P(ORDIALOG(PROMPT,0),U,2)="0:"_OREFILLS
"RTN","ORCDPS1",203,0)
 S ORDIALOG(PROMPT,"A")="Refills (0-"_OREFILLS_"): "
"RTN","ORCDPS1",204,0)
 I X,X>OREFILLS S ORDIALOG(PROMPT,INST)=OREFILLS
"RTN","ORCDPS1",205,0)
 Q
"RTN","ORCDPS1",206,0)
 ;
"RTN","ORCDPS1",207,0)
ASKSC() ; -- Return 1 or 0, if SC prompt should be asked
"RTN","ORCDPS1",208,0)
 I $$SC^PSOCP(+ORVP,+$G(ORDRUG)) Q 0
"RTN","ORCDPS1",209,0)
 ;I $$RXST^IBARXEU(+ORVP)>0 Q 0 ;exempt from copay
"RTN","ORCDPS1",210,0)
 Q 1
"RTN","ORCDPS1",211,0)
 ;
"RTN","ORCDPS1",212,0)
PTR(X) ; -- Return ptr to prompt OR GTX X
"RTN","ORCDPS1",213,0)
 Q +$O(^ORD(101.41,"AB","OR GTX "_X,0))
"RTN","ORCDPS1",214,0)
 ;
"RTN","ORCDPS1",215,0)
EXIT ; -- exit action for Meds
"RTN","ORCDPS1",216,0)
 S:$G(ORXNP) ORNP=ORXNP
"RTN","ORCDPS1",217,0)
 K ORXNP,ORINPT,ORCAT,ORPKG,OROI,ORIV,ORDRUG,ORDOSE,OROUTE,ORSCH,ORSD,ORDSUP,OREFILLS,ORQTY,ORQTYUNT,ORCOPAY,PSJNOPC,ORCOMPLX
"RTN","ORCDPS1",218,0)
 K ^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORCDPS1",219,0)
 Q
"RTN","ORCDPSIV")
0^22^B121037905
"RTN","ORCDPSIV",1,0)
ORCDPSIV ;SLC/MKB-Pharmacy IV dialog utilities ;06/17/10
"RTN","ORCDPSIV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,38,48,158,195,243,296,280**;Dec 17, 1997;Build 85
"RTN","ORCDPSIV",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCDPSIV",4,0)
CKSCH ; -- validate schedule [Called from P-S Action]
"RTN","ORCDPSIV",5,0)
 N ORX S ORX=ORDIALOG(PROMPT,ORI) Q:ORX=$G(ORESET)  K ORSD
"RTN","ORCDPSIV",6,0)
 D EN^PSSGS0(.ORX,"I")
"RTN","ORCDPSIV",7,0)
 I $D(ORX) S ORDIALOG(PROMPT,ORI)=ORX Q
"RTN","ORCDPSIV",8,0)
 W $C(7),!,"Enter a standard schedule for administering this medication."
"RTN","ORCDPSIV",9,0)
 Q
"RTN","ORCDPSIV",10,0)
ISONETIM(SCH) ;
"RTN","ORCDPSIV",11,0)
 N DUR
"RTN","ORCDPSIV",12,0)
 I SCH="" Q 0
"RTN","ORCDPSIV",13,0)
 K ^TMP($J,"ORCDPSIV GETSCHTYP")
"RTN","ORCDPSIV",14,0)
 D ZERO^PSS51P1(,SCH,"PSJ","O","ORCDPSIV GETSCHTYP")
"RTN","ORCDPSIV",15,0)
 I $D(^TMP($J,"ORCDPSIV GETSCHTYP","B",SCH)) D  Q 1
"RTN","ORCDPSIV",16,0)
 .S DUR=$$PTR^ORCD("OR GTX DURATION")
"RTN","ORCDPSIV",17,0)
 .I $G(ORDIALOG(DUR,1))="" Q
"RTN","ORCDPSIV",18,0)
 .S ORDIALOG(DUR,1)=""
"RTN","ORCDPSIV",19,0)
 .W !,"IV Orders with a schedule type of one-time cannot have a duration."
"RTN","ORCDPSIV",20,0)
 .W !,"The duration has been deleted from this quick order." H 1
"RTN","ORCDPSIV",21,0)
 K ^TMP($J,"ORCDPSIV GETSCHTYP")
"RTN","ORCDPSIV",22,0)
 Q 0
"RTN","ORCDPSIV",23,0)
 ;
"RTN","ORCDPSIV",24,0)
ADDFRD(ORDIALOG,INST,PROMPT) ;
"RTN","ORCDPSIV",25,0)
 N ADDFRIEN,ADDIEN,OI,PSOI,RESULT
"RTN","ORCDPSIV",26,0)
 S RESULT=""
"RTN","ORCDPSIV",27,0)
 I $G(ORIVTYPE)'="C" Q RESULT
"RTN","ORCDPSIV",28,0)
 S ADDFRIEN=$O(^ORD(101.41,"AB","OR GTX ADDITIVE FREQUENCY","")) I 'ADDFRIEN Q RESULT
"RTN","ORCDPSIV",29,0)
 S ADDIEN=$O(^ORD(101.41,"AB","OR GTX ADDITIVE","")) I 'ADDIEN Q RESULT
"RTN","ORCDPSIV",30,0)
 S RESULT=$$RECALL^ORCD(PROMPT,INST) I RESULT'="" Q RESULT
"RTN","ORCDPSIV",31,0)
 S OI=$G(ORDIALOG(ADDIEN,INST)) I OI="" Q RESULT
"RTN","ORCDPSIV",32,0)
 S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2) I +PSOI'>0 Q RESULT
"RTN","ORCDPSIV",33,0)
 S RESULT=$$IV^PSSDSAPA(+PSOI)
"RTN","ORCDPSIV",34,0)
 S RESULT=$S(RESULT="A":"All Bags",RESULT=1:"1 Bag/Day",1:"")
"RTN","ORCDPSIV",35,0)
 Q RESULT
"RTN","ORCDPSIV",36,0)
 ;
"RTN","ORCDPSIV",37,0)
ADDFRQC ;
"RTN","ORCDPSIV",38,0)
 I $G(ORIVTYPE)'="C" Q
"RTN","ORCDPSIV",39,0)
 W !,"Select from the list of the codes below to assign an additive frequency for this additive."
"RTN","ORCDPSIV",40,0)
 W !,"A = All Bags"
"RTN","ORCDPSIV",41,0)
 W !,"1 = 1 Bag/Day"
"RTN","ORCDPSIV",42,0)
 W !,"S = See Comments"
"RTN","ORCDPSIV",43,0)
 W !
"RTN","ORCDPSIV",44,0)
 Q
"RTN","ORCDPSIV",45,0)
ADDFRQI ;
"RTN","ORCDPSIV",46,0)
 S X=$$UP^XLFSTR(X)
"RTN","ORCDPSIV",47,0)
 I X'="A",X'=1,X'="S" D ADDFRQC K X Q
"RTN","ORCDPSIV",48,0)
 I X="A" S X="All Bags" Q
"RTN","ORCDPSIV",49,0)
 I X=1 S X="1 Bag/Day" Q
"RTN","ORCDPSIV",50,0)
 I X="S" S X="See Comments"
"RTN","ORCDPSIV",51,0)
 Q
"RTN","ORCDPSIV",52,0)
 ;
"RTN","ORCDPSIV",53,0)
PROVIDER ; -- Check provider, if authorized to write med orders
"RTN","ORCDPSIV",54,0)
 I $D(^XUSEC("OREMAS",DUZ)),'$$GET^XPAR("ALL","OR OREMAS MED ORDERS") W $C(7),!!,"OREMAS key holders may not enter medication orders." S ORQUIT=1 Q
"RTN","ORCDPSIV",55,0)
 N PS,NAME S PS=$G(^VA(200,+$G(ORNP),"PS")),NAME=$P($G(^(20)),U,2)
"RTN","ORCDPSIV",56,0)
 I '$L(NAME) S NAME=$P(^VA(200,+$G(ORNP),0),U)
"RTN","ORCDPSIV",57,0)
 I '$P(PS,U) W $C(7),!!,NAME_" is not authorized to write medication orders!" S ORQUIT=1
"RTN","ORCDPSIV",58,0)
 I $P(PS,U,4),$$NOW^XLFDT>$P(PS,U,4) W $C(7),!!,NAME_" is no longer authorized to write medication orders!" S ORQUIT=1
"RTN","ORCDPSIV",59,0)
 I $G(ORQUIT) W !,"You must select another provider to continue.",! S PS=$$MEDPROV I PS S ORXNP=ORNP,ORNP=PS K ORQUIT
"RTN","ORCDPSIV",60,0)
 Q
"RTN","ORCDPSIV",61,0)
 ;
"RTN","ORCDPSIV",62,0)
MEDPROV() ; -- Return ordering med provider
"RTN","ORCDPSIV",63,0)
 N X,Y,D,DIC
"RTN","ORCDPSIV",64,0)
 S DIC=200,DIC(0)="AEQ",DIC("A")="Select PROVIDER: ",D="AK.PROVIDER"
"RTN","ORCDPSIV",65,0)
 S DIC("S")="I $P($G(^(""PS"")),U),'$P(^(""PS""),U,4)!($P(^(""PS""),U,4)>$$NOW^XLFDT)"
"RTN","ORCDPSIV",66,0)
 D IX^DIC S:Y>0 Y=+Y I Y'>0 S Y="^"
"RTN","ORCDPSIV",67,0)
 Q Y
"RTN","ORCDPSIV",68,0)
 ;
"RTN","ORCDPSIV",69,0)
CHANGED(TYPE) ; -- Kill dependent values when OI changes
"RTN","ORCDPSIV",70,0)
 N PROMPTS,NAME,PTR,P,I
"RTN","ORCDPSIV",71,0)
 Q:'$L($G(TYPE))  S PROMPTS=""
"RTN","ORCDPSIV",72,0)
 S:TYPE="B" PROMPTS="VOLUME"
"RTN","ORCDPSIV",73,0)
 S:TYPE="A" PROMPTS="STRENGTH PSIV^UNITS"
"RTN","ORCDPSIV",74,0)
 I TYPE="T" D
"RTN","ORCDPSIV",75,0)
 .S PROMPTS="INFUSION RATE^SCHEDULE^ADDITIVE FREQUENCY"
"RTN","ORCDPSIV",76,0)
 .S PTR=$O(^ORD(101.41,"AB","OR GTX DURATION","")) Q:'PTR
"RTN","ORCDPSIV",77,0)
 .I $G(ORDIALOG(PTR,1))["DOSES" S PROMPTS=PROMPTS_U_"DURATION"
"RTN","ORCDPSIV",78,0)
 ;
"RTN","ORCDPSIV",79,0)
 F P=1:1:$L(PROMPTS,U) S NAME=$P(PROMPTS,U,P) D
"RTN","ORCDPSIV",80,0)
 . S PTR=$O(^ORD(101.41,"AB","OR GTX "_NAME,0)) Q:'PTR
"RTN","ORCDPSIV",81,0)
 . S I=0 F  S I=$O(ORDIALOG(PTR,I)) Q:I'>0  K ORDIALOG(PTR,I)
"RTN","ORCDPSIV",82,0)
 . K ORDIALOG(PTR,"LIST")
"RTN","ORCDPSIV",83,0)
 Q
"RTN","ORCDPSIV",84,0)
 ;
"RTN","ORCDPSIV",85,0)
INACTIVE(TYPE) ; -- Check OI inactive date
"RTN","ORCDPSIV",86,0)
 N OI,X,I,PSOI,DEA,EXIT S:$G(TYPE)'="A" TYPE="S"
"RTN","ORCDPSIV",87,0)
 S OI=+$G(ORDIALOG(PROMPT,INST)) Q:OI'>0
"RTN","ORCDPSIV",88,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D  Q  ;inactive
"RTN","ORCDPSIV",89,0)
 . S X=$S(TYPE="A":"additive",1:"solution"),ORQUIT=1
"RTN","ORCDPSIV",90,0)
 . W $C(7),!,"This "_X_" may not be ordered anymore.  Please select another."
"RTN","ORCDPSIV",91,0)
 S I=$S(TYPE="A":4,1:3) I '$P($G(^ORD(101.43,OI,"PS")),U,I) D  Q
"RTN","ORCDPSIV",92,0)
 . S X=$S(TYPE="A":"an additive",1:"a solution"),ORQUIT=1
"RTN","ORCDPSIV",93,0)
 . W $C(7),!,"This item may not be ordered as "_X_"."
"RTN","ORCDPSIV",94,0)
 S EXIT=$$INPT^ORCD I EXIT=0 D ROUTECHK Q
"RTN","ORCDPSIV",95,0)
 Q:'$L($T(IVDEA^PSSUTIL1))  ;DBIA #3784
"RTN","ORCDPSIV",96,0)
 S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2)
"RTN","ORCDPSIV",97,0)
 S DEA=$$IVDEA^PSSUTIL1(PSOI,TYPE) I DEA>0 D  Q:$G(ORQUIT)
"RTN","ORCDPSIV",98,0)
 . I $G(ORNP),'$L($P($G(^VA(200,+ORNP,"PS")),U,2)),'$L($P($G(^("PS")),U,3)) W $C(7),!,$P($G(^(0)),U)_" must have a DEA# or VA# to order this drug!" S ORQUIT=1 Q
"RTN","ORCDPSIV",99,0)
 . I DEA=1 W $C(7),!,"This order will require a wet signature!"
"RTN","ORCDPSIV",100,0)
 D ROUTECHK
"RTN","ORCDPSIV",101,0)
 Q
"RTN","ORCDPSIV",102,0)
 ;
"RTN","ORCDPSIV",103,0)
VOLUME ; -- get allowable volumes for solution
"RTN","ORCDPSIV",104,0)
 N PSOI,ORY,CNT,I,XORY K ORDIALOG(PROMPT,"LIST")
"RTN","ORCDPSIV",105,0)
 S PSOI=+$P($G(^ORD(101.43,+$$VAL^ORCD("SOLUTION",INST),0)),U,2)_"B"
"RTN","ORCDPSIV",106,0)
 D ENVOL^PSJORUT2(PSOI,.ORY) Q:'ORY
"RTN","ORCDPSIV",107,0)
 ;S (I,CNT)=0 F  S I=$O(ORY(I)) Q:I'>0  S CNT=CNT+1,ORDIALOG(PROMPT,"LIST",+ORY(I))=+ORY(I)
"RTN","ORCDPSIV",108,0)
 S (I,CNT)=0 F  S I=$O(ORY(I)) Q:I'>0  D
"RTN","ORCDPSIV",109,0)
 . S CNT=CNT+1
"RTN","ORCDPSIV",110,0)
 . S XORY(I)=+ORY(I) I XORY(I)<1,$E(XORY(I),1,2)'="0." S XORY(I)=0_XORY(I)
"RTN","ORCDPSIV",111,0)
 . S ORDIALOG(PROMPT,"LIST",XORY(I))=XORY(I)
"RTN","ORCDPSIV",112,0)
 S ORDIALOG(PROMPT,"LIST")=CNT_"^1"
"RTN","ORCDPSIV",113,0)
 Q
"RTN","ORCDPSIV",114,0)
 ;
"RTN","ORCDPSIV",115,0)
UNITS ; -- get allowable units for current additive
"RTN","ORCDPSIV",116,0)
 N PSOI,ORY,I,UNITS
"RTN","ORCDPSIV",117,0)
 S PSOI=+$P(^ORD(101.43,+ORDIALOG($$PTR^ORCD("OR GTX ADDITIVE"),INST),0),U,2)_"A"
"RTN","ORCDPSIV",118,0)
 D ENVOL^PSJORUT2(PSOI,.ORY)
"RTN","ORCDPSIV",119,0)
 S I=$O(ORY(0)) Q:'I  S UNITS=$P($G(ORY(I)),U,2)
"RTN","ORCDPSIV",120,0)
 S ORDIALOG($$PTR^ORCD("OR GTX UNITS"),INST)=UNITS
"RTN","ORCDPSIV",121,0)
 W !," (Units for this additive are "_UNITS_")"
"RTN","ORCDPSIV",122,0)
 Q
"RTN","ORCDPSIV",123,0)
 ;
"RTN","ORCDPSIV",124,0)
PREMIX() ; -- Returns 1 or 0, if IV base is a premix solution
"RTN","ORCDPSIV",125,0)
 N BASE,PS,I,Y
"RTN","ORCDPSIV",126,0)
 S BASE=$$PTR^ORCD("OR GTX ORDERABLE ITEM"),Y=0
"RTN","ORCDPSIV",127,0)
 S I=0 F  S I=$O(ORDIALOG(BASE,I)) Q:I'>0  D  Q:Y
"RTN","ORCDPSIV",128,0)
 . S PS=$G(^ORD(101.43,+$G(ORDIALOG(BASE,I)),"PS"))
"RTN","ORCDPSIV",129,0)
 . I $P(PS,U,3)&($P(PS,U,4)) S Y=1
"RTN","ORCDPSIV",130,0)
 Q Y
"RTN","ORCDPSIV",131,0)
 ;
"RTN","ORCDPSIV",132,0)
IVRTEENT ;
"RTN","ORCDPSIV",133,0)
 N ARRAY,DIR,RIEN,TROUTE
"RTN","ORCDPSIV",134,0)
 I ORTYPE'="Z" Q
"RTN","ORCDPSIV",135,0)
 S RIEN=$P($G(ORDIALOG("B","ROUTE")),U,2) Q:RIEN'>0
"RTN","ORCDPSIV",136,0)
 S EXIT=0,TROUTE=$G(ORDIALOG(RIEN,1)) Q:TROUTE'>0
"RTN","ORCDPSIV",137,0)
 I $$IVRTESCR(TROUTE)=1 Q
"RTN","ORCDPSIV",138,0)
 S ORDIALOG(RIEN,1)=""
"RTN","ORCDPSIV",139,0)
 W !!,"The selected route is not a valid route for this order."
"RTN","ORCDPSIV",140,0)
 W !,"Select a new route for this order from the list of routes below."
"RTN","ORCDPSIV",141,0)
 D RTEDISP(.ARRAY)
"RTN","ORCDPSIV",142,0)
 Q
"RTN","ORCDPSIV",143,0)
 ;
"RTN","ORCDPSIV",144,0)
BIVOI(ARRAY) ;
"RTN","ORCDPSIV",145,0)
 N CNT,NUM,OIIEN,OTYPE
"RTN","ORCDPSIV",146,0)
 S CNT=0
"RTN","ORCDPSIV",147,0)
 F OTYPE="SOLUTION","ADDITIVE" D
"RTN","ORCDPSIV",148,0)
 .S OIIEN=+$P($G(ORDIALOG("B",OTYPE)),U,2) I OIIEN>0 D
"RTN","ORCDPSIV",149,0)
 ..S NUM=0 F  S NUM=$O(ORDIALOG(OIIEN,NUM)) Q:NUM'>0  I +$G(ORDIALOG(OIIEN,NUM))>0 D
"RTN","ORCDPSIV",150,0)
 ...S CNT=CNT+1,ARRAY(CNT)=ORDIALOG(OIIEN,NUM)
"RTN","ORCDPSIV",151,0)
 Q
"RTN","ORCDPSIV",152,0)
 ;
"RTN","ORCDPSIV",153,0)
LVROUTES ;
"RTN","ORCDPSIV",154,0)
 N ARRAY,ROUTES
"RTN","ORCDPSIV",155,0)
 D BIVOI(.ARRAY)
"RTN","ORCDPSIV",156,0)
 D IVDOSFRM^ORWDPS33(.ROUTES,.ARRAY,1)
"RTN","ORCDPSIV",157,0)
 D RTEDISP(.ROUTES)
"RTN","ORCDPSIV",158,0)
 Q
"RTN","ORCDPSIV",159,0)
 ;
"RTN","ORCDPSIV",160,0)
RTEDISP(ROUTES) ;
"RTN","ORCDPSIV",161,0)
 N CNT
"RTN","ORCDPSIV",162,0)
 S CNT="" F  S CNT=$O(ROUTES(CNT)) Q:CNT'>0  D
"RTN","ORCDPSIV",163,0)
 .W !,$P($G(ROUTES(CNT)),U,2)
"RTN","ORCDPSIV",164,0)
 Q
"RTN","ORCDPSIV",165,0)
 ;
"RTN","ORCDPSIV",166,0)
IVRTESCR(Y) ;
"RTN","ORCDPSIV",167,0)
 N ARRAY,ROUTES,VALUE
"RTN","ORCDPSIV",168,0)
 D BIVOI(.ARRAY)
"RTN","ORCDPSIV",169,0)
 S VALUE=$$IVQOVAL^ORWDPS33(.ARRAY,Y) I VALUE'="" Q 1
"RTN","ORCDPSIV",170,0)
 Q 0
"RTN","ORCDPSIV",171,0)
 ;
"RTN","ORCDPSIV",172,0)
ROUTECHK ;
"RTN","ORCDPSIV",173,0)
 N CNT,IEN,ROUTE,VALUE
"RTN","ORCDPSIV",174,0)
 S RIEN=$P($G(ORDIALOG("B","ROUTE")),U,2) Q:RIEN'>0
"RTN","ORCDPSIV",175,0)
 S TROUTE=$G(ORDIALOG(RIEN,1)) Q:TROUTE'>0
"RTN","ORCDPSIV",176,0)
 I $$IVRTESCR(TROUTE)=1 Q
"RTN","ORCDPSIV",177,0)
 S ORDIALOG(RIEN,1)=""
"RTN","ORCDPSIV",178,0)
 W !!,"The route defined for this order is an invalid route."
"RTN","ORCDPSIV",179,0)
 W !,"You will need to define a new route for this order."
"RTN","ORCDPSIV",180,0)
 Q
"RTN","ORCDPSIV",181,0)
 ;
"RTN","ORCDPSIV",182,0)
ENRATE ; -- set display text, help based on IV TYPE
"RTN","ORCDPSIV",183,0)
 N X,MSG S X=$G(ORIVTYPE),MSG=""
"RTN","ORCDPSIV",184,0)
 S ORDIALOG(PROMPT,"A")=$S(X="I":"Infuse over time (min): ",1:"Infusion Rate (ml/hr): ")
"RTN","ORCDPSIV",185,0)
 S MSG="Enter the "_$S(X="I":"number of minutes over which to infuse this medication.",1:"infusion rate, as the number of ml/hr or Text@Number of Labels per day. ")
"RTN","ORCDPSIV",186,0)
 S ORDIALOG(PROMPT,"?")=MSG
"RTN","ORCDPSIV",187,0)
 I X="I" D
"RTN","ORCDPSIV",188,0)
 .N RATEI,RATEV,TIME,UNIT
"RTN","ORCDPSIV",189,0)
 .S RATEI=$P($G(ORDIALOG("B","INFUSION RATE")),U,2) Q:RATEI'>0
"RTN","ORCDPSIV",190,0)
 .S RATEV=$G(ORDIALOG(RATEI,1)) Q:'$L(RATEV)
"RTN","ORCDPSIV",191,0)
 .I RATEV'["INFUSE OVER" Q
"RTN","ORCDPSIV",192,0)
 .S TIME=$P(RATEV," ",3)
"RTN","ORCDPSIV",193,0)
 .S UNIT=$P(RATEV," ",4)
"RTN","ORCDPSIV",194,0)
 .I TIME["." Q
"RTN","ORCDPSIV",195,0)
 .I UNIT="Hours" S TIME=TIME*60
"RTN","ORCDPSIV",196,0)
 .S ORDIALOG(RATEI,1)=TIME
"RTN","ORCDPSIV",197,0)
 Q
"RTN","ORCDPSIV",198,0)
 ;
"RTN","ORCDPSIV",199,0)
INF ; -- input transform for INFUSION RATE
"RTN","ORCDPSIV",200,0)
 N ALPHA,CNT,EXIT,FAIL,LDEC,RDEC,TEMP
"RTN","ORCDPSIV",201,0)
 I $G(ORIVTYPE)="I" D  Q
"RTN","ORCDPSIV",202,0)
 .I X["." W !,"Infuse Over Time must be a whole number." K X Q
"RTN","ORCDPSIV",203,0)
 .I $L(X)>4 W !,"Infuse Over Time cannot exceed 4 characters for minutes." K X Q
"RTN","ORCDPSIV",204,0)
 .S FAIL=0
"RTN","ORCDPSIV",205,0)
 .F CNT=1:1:$L(X) D  I FAIL=1 Q
"RTN","ORCDPSIV",206,0)
 ..I ($A($E(X,CNT))<48)!($A($E(X,CNT))>58) S FAIL=1
"RTN","ORCDPSIV",207,0)
 .I FAIL=1 W !,"Infuse Over Time must be a whole number." K X Q
"RTN","ORCDPSIV",208,0)
 K:$L(X)<1!($L(X)>30)!(X["""")!($A(X)=45) X I '$D(X) Q
"RTN","ORCDPSIV",209,0)
 I $G(ORIVTYPE)="C" D  Q
"RTN","ORCDPSIV",210,0)
 .S TEMP=$E(X,($L(X)-5),$L(X))
"RTN","ORCDPSIV",211,0)
 .I X["@",$$UP^XLFSTR(TEMP)=" ML/HR" Q
"RTN","ORCDPSIV",212,0)
 .S ALPHA=0
"RTN","ORCDPSIV",213,0)
 .I X'["@",X'["." D  I ALPHA=1 K X Q
"RTN","ORCDPSIV",214,0)
 ..F CNT=1:1:$L(X) D  I ALPHA=1 Q
"RTN","ORCDPSIV",215,0)
 ...I ($A($E(X,CNT))<48)!($A($E(X,CNT))>58) S ALPHA=1
"RTN","ORCDPSIV",216,0)
 .S EXIT=0
"RTN","ORCDPSIV",217,0)
 .I X[".",X'["@" D  I EXIT=1 K X Q
"RTN","ORCDPSIV",218,0)
 ..S LDEC=$P(X,"."),RDEC=$P(X,".",2)
"RTN","ORCDPSIV",219,0)
 ..I LDEC="" W !,"Infusion Rate required a leading numeric value." S EXIT=1
"RTN","ORCDPSIV",220,0)
 ..I $L(RDEC)>1 W !,"Infusion Rate cannot exceed one decimal place." S EXIT=1
"RTN","ORCDPSIV",221,0)
 ..S ALPHA=0
"RTN","ORCDPSIV",222,0)
 ..F CNT=1:1:$L(LDEC) D  I ALPHA=1 S EXIT=1 Q
"RTN","ORCDPSIV",223,0)
 ...I ($A($E(LDEC,CNT))<48)!($A($E(LDEC,CNT))>58) S ALPHA=1
"RTN","ORCDPSIV",224,0)
 ..I $L(RDEC)=0 Q
"RTN","ORCDPSIV",225,0)
 ..F CNT=1:1:$L(RDEC) D  I ALPHA=1 S EXIT=1 Q
"RTN","ORCDPSIV",226,0)
 ...I ($A($E(RDEC,CNT))<48)!($A($E(RDEC,CNT))>58) S ALPHA=1
"RTN","ORCDPSIV",227,0)
 .D ORINF^PSIVSP Q
"RTN","ORCDPSIV",228,0)
 ; -- assume #minutes for now
"RTN","ORCDPSIV",229,0)
 K:(X'=+X)!(X<1)!(X>999) X ;range?
"RTN","ORCDPSIV",230,0)
 Q
"RTN","ORCDPSIV",231,0)
 ;
"RTN","ORCDPSIV",232,0)
VALIDAYS(X) ; -- Validate IV duration
"RTN","ORCDPSIV",233,0)
 N UNITS,X1,X2,Y,I
"RTN","ORCDPSIV",234,0)
 I X'?1.N." "1.A Q 0
"RTN","ORCDPSIV",235,0)
 S UNITS="^MIN^HOURS^DAYS^M^H^D^",(X1,X2)=""
"RTN","ORCDPSIV",236,0)
 F I=1:1:$L(X) S Y=$E(X,I) S:Y?1N X1=X1_Y S:Y?1A X2=X2_$$UP^XLFSTR(Y)
"RTN","ORCDPSIV",237,0)
 I 'X1 Q 0
"RTN","ORCDPSIV",238,0)
 I UNITS'[(U_X2_U) Q 0
"RTN","ORCDPSIV",239,0)
 Q 1
"RTN","ORCDPSIV",240,0)
 ;
"RTN","ORCDPSIV",241,0)
VALDURA(X) ;-- Validate IV duration/limitation
"RTN","ORCDPSIV",242,0)
 K:$L(X)<1!($L(X)>30)!(X["""")!($A(X)=45) X I '$D(X) Q
"RTN","ORCDPSIV",243,0)
 ;
"RTN","ORCDPSIV",244,0)
IVPSI ;INPUT-TRANSFORM
"RTN","ORCDPSIV",245,0)
 I $L(X)<1!($L(X)>30)!(X["""")!($A(X)=45) S X="" Q
"RTN","ORCDPSIV",246,0)
 I $L(X)>1,X[" " W !,"Spaces are not allow in the duration." K X Q
"RTN","ORCDPSIV",247,0)
 I $E(X)=0 W !,!,"Duration cannot start with a zero." K X Q
"RTN","ORCDPSIV",248,0)
 I X["." W !,!,"Invalid duration or total volume.",!,"Duration has to be integer value!" S X="" Q
"RTN","ORCDPSIV",249,0)
 S X=$$UP^XLFSTR(X)
"RTN","ORCDPSIV",250,0)
 I X["DOSES" D  Q
"RTN","ORCDPSIV",251,0)
 .I $G(ORIVTYPE)'="I" K X W !,"Continuous IV Orders cannot have DOSES as a duration." Q
"RTN","ORCDPSIV",252,0)
 .I +$P(X,"DOSES")<1,+$P(X,"DOSES")>200000 W !,"Invalid number of Doses.",! K X Q
"RTN","ORCDPSIV",253,0)
 I (X'?.N1.2A),(X'?.N1".".N1.2A) W !,!,"Invalid duration or total volume.",! S X="" Q
"RTN","ORCDPSIV",254,0)
 I (X?.N1A) D
"RTN","ORCDPSIV",255,0)
 . I (X["L")!(X["H")!(X["D") Q
"RTN","ORCDPSIV",256,0)
 . E  W !,!,"Invalid duration or total volume.",! S X="" Q
"RTN","ORCDPSIV",257,0)
 I (X?.N1".".N1A) D
"RTN","ORCDPSIV",258,0)
 . I X["L" Q
"RTN","ORCDPSIV",259,0)
 . E  W !,!,"Invalid duration or total volume.",!,"Duration has to be integer value!",! S X="" Q
"RTN","ORCDPSIV",260,0)
 I (X?.N2A)!(X?.N1".".N2A) D
"RTN","ORCDPSIV",261,0)
 . I (X["ML")!(X["CC") Q
"RTN","ORCDPSIV",262,0)
 . E  W !,!,"Invalid duration or total volume",! S X="" Q
"RTN","ORCDPSIV",263,0)
 I X="" K X
"RTN","ORCDPSIV",264,0)
 Q
"RTN","ORCDPSIV",265,0)
 ;
"RTN","ORCDPSIV",266,0)
IVPSI1 ; ASK ON CONDITION
"RTN","ORCDPSIV",267,0)
 N DURI,DURV,TEMPX
"RTN","ORCDPSIV",268,0)
 I $G(OROTSCH)=1 Q
"RTN","ORCDPSIV",269,0)
 S DURI=$P($G(ORDIALOG("B","LIMITATION")),U,2)
"RTN","ORCDPSIV",270,0)
 I DURI>0 S DURV=$G(ORDIALOG(DURI,1))
"RTN","ORCDPSIV",271,0)
 I $L(DURV)>1,$E(DURV)="f",DURV["doses" D
"RTN","ORCDPSIV",272,0)
 .S TEMPX=$P(DURV," ",5)_"DOSES"
"RTN","ORCDPSIV",273,0)
 .I TEMPX'="",TEMPX'=DURV S ORDIALOG(DURI,1)=TEMPX
"RTN","ORCDPSIV",274,0)
 N INT,IVTYPE,ONETIME,TYPE,SCH,SCHNAME
"RTN","ORCDPSIV",275,0)
 D IVDURT($G(ORIVTYPE))
"RTN","ORCDPSIV",276,0)
 ;I $G(ORIVTYPE)'="I" D  G IVPS1X
"RTN","ORCDPSIV",277,0)
 ;.W !,!,"Enter the length of administrative time or total volume for IV fluid order followed by ML or CC for milliliters, L for liters, D for days, H for hours to set limitation."
"RTN","ORCDPSIV",278,0)
 ;.W !,"(Examples: 1500ML, 1000CC, 1L, 3D, or 72H)",!
"RTN","ORCDPSIV",279,0)
 ;W !,"This field is optional a value does not need to be entered."
"RTN","ORCDPSIV",280,0)
 ;W !,!,"Enter the length of administrative time or total volume for IV fluid order followed by ML or CC for milliliters, L for liters, D for days, H for hours or DOSES to set limitation."
"RTN","ORCDPSIV",281,0)
 ;W !,"(Examples: 1500ML, 1000CC, 1L, 3D, 72H, or 10DOSES)",!
"RTN","ORCDPSIV",282,0)
IVPS1X ;
"RTN","ORCDPSIV",283,0)
 ;W !,"This field is optional a value does not need to be entered."
"RTN","ORCDPSIV",284,0)
 I 1
"RTN","ORCDPSIV",285,0)
 Q
"RTN","ORCDPSIV",286,0)
 ;
"RTN","ORCDPSIV",287,0)
IVDURT(TYPE) ;
"RTN","ORCDPSIV",288,0)
 I TYPE'="I" D  G IVDURX
"RTN","ORCDPSIV",289,0)
 .W !,!,"Enter the length of administrative time or total volume for IV fluid order followed by ML or CC for milliliters, L for liters, D for days, H for hours to set limitation."
"RTN","ORCDPSIV",290,0)
 .W !,"(Examples: 1500ML, 1000CC, 1L, 3D, or 72H)",!
"RTN","ORCDPSIV",291,0)
 W !,"This field is optional a value does not need to be entered."
"RTN","ORCDPSIV",292,0)
 W !,!,"Enter the length of administrative time or total volume for IV fluid order followed by ML or CC for milliliters, L for liters, D for days, H for hours or DOSES to set limitation."
"RTN","ORCDPSIV",293,0)
 W !,"(Examples: 1500ML, 1000CC, 1L, 3D, 72H, or 10DOSES)",!
"RTN","ORCDPSIV",294,0)
IVDURX ;
"RTN","ORCDPSIV",295,0)
 W !,"This field is optional a value does not need to be entered."
"RTN","ORCDPSIV",296,0)
 Q
"RTN","ORCDPSIV",297,0)
 ;
"RTN","ORCDPSIV",298,0)
IVDURH ;
"RTN","ORCDPSIV",299,0)
 D IVDURT($G(ORIVTYPE))
"RTN","ORCDPSIV",300,0)
 Q
"RTN","ORCDPSIV",301,0)
 ;
"RTN","ORCHECK")
0^30^B109684735
"RTN","ORCHECK",1,0)
ORCHECK ;SLC/MKB-Order checking calls ;10/28/10  08:12
"RTN","ORCHECK",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,56,70,94,141,215,243,293,280**;Dec 17, 1997;Build 85
"RTN","ORCHECK",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCHECK",4,0)
DISPLAY ; -- DISPLAY event [called from ORCDLG,ORCACT4,ORCMED]
"RTN","ORCHECK",5,0)
 ;    Expects ORVP, ORNMSP, ORTAB, [ORWARD]
"RTN","ORCHECK",6,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")'="E"
"RTN","ORCHECK",7,0)
 N ORX,ORY,I
"RTN","ORCHECK",8,0)
 I ORNMSP="PS" D  ;reset to PSJ, PSJI, or PSO
"RTN","ORCHECK",9,0)
 . I $G(ORDG) S I=$P($G(^ORD(100.98,+ORDG,0)),U,3),I=$P(I," ") Q:'$L(I)  S ORNMSP="PS"_$S(I="UD":"I",1:I) Q
"RTN","ORCHECK",10,0)
 . I $G(ORXFER) S I=$P($P(^TMP("OR",$J,ORTAB,0),U,3),";",3) S:I="" I=$G(ORWARD) S ORNMSP="PS"_$S(I:"O",1:"I") ;opposite of list
"RTN","ORCHECK",11,0)
 S ORX(1)="|"_ORNMSP,ORX=1
"RTN","ORCHECK",12,0)
 D EN^ORKCHK(.ORY,+ORVP,.ORX,"DISPLAY") Q:'$D(ORY)
"RTN","ORCHECK",13,0)
 S I=0 F  S I=$O(ORY(I)) Q:I'>0  W !,$P(ORY(I),U,4) ; display only
"RTN","ORCHECK",14,0)
 Q
"RTN","ORCHECK",15,0)
 ;
"RTN","ORCHECK",16,0)
SELECT ; -- SELECT event
"RTN","ORCHECK",17,0)
 ;    Expects ORVP, ORDAILOG(PROMPT,ORI), ORNMSP
"RTN","ORCHECK",18,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")'="E"
"RTN","ORCHECK",19,0)
 N ORX,ORY,OI
"RTN","ORCHECK",20,0)
 S OI=+$G(ORDIALOG(PROMPT,ORI))
"RTN","ORCHECK",21,0)
 S ORX=1,ORX(1)=OI_"|"_ORNMSP_"|"_$$USID^ORMBLD(OI)
"RTN","ORCHECK",22,0)
 D EN^ORKCHK(.ORY,+ORVP,.ORX,"SELECT"),RETURN:$D(ORY)
"RTN","ORCHECK",23,0)
 Q
"RTN","ORCHECK",24,0)
 ;
"RTN","ORCHECK",25,0)
ACCEPT(MODE) ; -- ACCEPT event [called from ORCDLG,ORCACT4,ORCMED]
"RTN","ORCHECK",26,0)
 ;    Expects ORVP, ORDIALOG(), ORNMSP
"RTN","ORCHECK",27,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")'="E"
"RTN","ORCHECK",28,0)
 N ORX,ORY,ORZ,OI,ORSTRT,ORI,ORIT,ORID,ORSP
"RTN","ORCHECK",29,0)
 S:'$L($G(MODE)) MODE="ACCEPT"
"RTN","ORCHECK",30,0)
 S OI=$$PTR^ORCD("OR GTX ORDERABLE ITEM"),ORSTRT=$$START,ORX=0
"RTN","ORCHECK",31,0)
 S ORI=0 F  S ORI=$O(ORDIALOG(OI,ORI)) Q:ORI'>0  D STUF
"RTN","ORCHECK",32,0)
 I $G(ORDG)=+$O(^ORD(100.98,"B","IV RX",0)) S OI=$$PTR^ORCD("OR GTX ADDITIVE"),ORI=0 F  S ORI=$O(ORDIALOG(OI,ORI)) Q:ORI'>0  D STUF
"RTN","ORCHECK",33,0)
 D EN^ORKCHK(.ORY,+ORVP,.ORX,MODE),RETURN:$D(ORY),FDBDOWN(0)
"RTN","ORCHECK",34,0)
 Q
"RTN","ORCHECK",35,0)
STUF S ORIT=ORDIALOG(OI,ORI),ORSP=""
"RTN","ORCHECK",36,0)
 S:ORNMSP="LR" ORSP=+$G(ORDIALOG($$PTR^ORCD("OR GTX SPECIMEN"),ORI))
"RTN","ORCHECK",37,0)
 S ORID=$S($E(ORNMSP,1,2)="PS":$$DRUG(ORIT,OI),1:$$USID^ORMBLD(ORIT))
"RTN","ORCHECK",38,0)
 S ORZ=1,ORZ(1)=ORIT_"|"_ORNMSP_"|"_ORID
"RTN","ORCHECK",39,0)
 I MODE'="ALL" D EN^ORKCHK(.ORY,+ORVP,.ORZ,"SELECT"),RETURN:$D(ORY)
"RTN","ORCHECK",40,0)
 S ORX=ORX+1,ORX(ORX)=ORZ(1)_"|"_ORSTRT_"||"_ORSP K ORY,ORZ
"RTN","ORCHECK",41,0)
 Q
"RTN","ORCHECK",42,0)
 ;
"RTN","ORCHECK",43,0)
DELAY(MODE) ; -- Delayed ACCEPT event [called from ORMEVNT]
"RTN","ORCHECK",44,0)
 ;    Expects ORVP, ORIFN
"RTN","ORCHECK",45,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")'="E"
"RTN","ORCHECK",46,0)
 N ORX,ORY,ORCHECK S:'$L($G(MODE)) MODE="NOTIF"
"RTN","ORCHECK",47,0)
 D BLD(+ORIFN),EN^ORKCHK(.ORY,+ORVP,.ORX,MODE) Q:'$D(ORY)
"RTN","ORCHECK",48,0)
 D RETURN I MODE="NOTIF" S ORCHECK("OK")="Notification sent to provider" D OC^ORCSAVE2 Q  ; silent
"RTN","ORCHECK",49,0)
 Q
"RTN","ORCHECK",50,0)
 ;
"RTN","ORCHECK",51,0)
BLD(ORDER) ; -- Build new ORX(#) for ORDER
"RTN","ORCHECK",52,0)
 Q:'$G(ORDER)  Q:'$D(^OR(100,ORDER,0))  ;Q:$P($G(^(3)),U,11)  ;edit/renew
"RTN","ORCHECK",53,0)
 N PKG,START,ORI,ITEM,USID,SPEC,ORDG,PTR,INST
"RTN","ORCHECK",54,0)
 S ORDG=$P(^OR(100,ORDER,0),U,11),PKG=$$GET1^DIQ(9.4,$P(^(0),U,14)_",",1)
"RTN","ORCHECK",55,0)
 I PKG="PS",$G(ORDG) S ORI=$P($G(^ORD(100.98,+ORDG,0)),U,3),ORI=$P(ORI," "),PKG=PKG_$S(ORI="UD":"I",1:ORI)
"RTN","ORCHECK",56,0)
 S START=$$START(ORDER),ORI=0
"RTN","ORCHECK",57,0)
 F  S ORI=$O(^OR(100,ORDER,4.5,"ID","ORDERABLE",ORI)) Q:ORI'>0  D
"RTN","ORCHECK",58,0)
 . S INST=$P($G(^OR(100,ORDER,4.5,ORI,0)),U,3),PTR=$P($G(^(0)),U,2),ITEM=+$G(^(1))
"RTN","ORCHECK",59,0)
 . S USID=$S(PKG?1"PS".E:$$DRUG(ITEM,PTR,ORDER),1:$$USID^ORMBLD(ITEM))
"RTN","ORCHECK",60,0)
 . S SPEC=$S(PKG="LR":$$VALUE^ORCSAVE2(ORDER,"SPECIMEN",INST),1:"")
"RTN","ORCHECK",61,0)
 . S ORX=+$G(ORX)+1,ORX(ORX)=ITEM_"|"_PKG_"|"_USID_"|"_START_"|"_ORDER_"|"_SPEC
"RTN","ORCHECK",62,0)
 Q
"RTN","ORCHECK",63,0)
 ;
"RTN","ORCHECK",64,0)
REMDUPS ;
"RTN","ORCHECK",65,0)
 N IFN,CDL,I
"RTN","ORCHECK",66,0)
 S IFN=0 F  S IFN=$O(ORCHECK(IFN)) Q:'IFN  D
"RTN","ORCHECK",67,0)
 . S CDL=0 F  S CDL=$O(ORCHECK(IFN,CDL)) Q:'CDL  D
"RTN","ORCHECK",68,0)
 . . S I=0 F  S I=$O(ORCHECK(IFN,CDL,I)) Q:'I  D
"RTN","ORCHECK",69,0)
 . . . S J=I F  S J=$O(ORCHECK(IFN,CDL,J)) Q:'J  I $P($G(ORCHECK(IFN,CDL,I)),U,3)=$P($G(ORCHECK(IFN,CDL,J)),U,3) K ORCHECK(IFN,CDL,J) S ORCHECK=$G(ORCHECK)-1
"RTN","ORCHECK",70,0)
 Q
"RTN","ORCHECK",71,0)
START(DA) ; -- Returns start date/time
"RTN","ORCHECK",72,0)
 N I,X,Y,%DT S Y=""
"RTN","ORCHECK",73,0)
 I $G(DA) S X=$O(^OR(100,DA,4.5,"ID","START",0)),X=$G(^OR(100,DA,4.5,+X,1))
"RTN","ORCHECK",74,0)
 E  D  ; look in ORDIALOG instead
"RTN","ORCHECK",75,0)
 . S I=0 F  S I=$O(ORDIALOG(I)) Q:I'>0  Q:$P(ORDIALOG(I),U,2)="START"
"RTN","ORCHECK",76,0)
 . S X=$S(I:$G(ORDIALOG(I,1)),1:"")
"RTN","ORCHECK",77,0)
 D AM^ORCSAVE2:X="AM",NEXT^ORCSAVE2:X="NEXT"
"RTN","ORCHECK",78,0)
 D ADMIN^ORCSAVE2("NEXT"):X="NEXTA",ADMIN^ORCSAVE2("CLOSEST"):X="CLOSEST"
"RTN","ORCHECK",79,0)
 I $L(X) S %DT="TX" D ^%DT S:Y'>0 Y=""
"RTN","ORCHECK",80,0)
 Q Y
"RTN","ORCHECK",81,0)
 ;
"RTN","ORCHECK",82,0)
DRUG(OI,PTR,IFN) ; -- Returns 6 ^-piece identifier for Dispense Drug
"RTN","ORCHECK",83,0)
 N ORDD,ORNDF,Y
"RTN","ORCHECK",84,0)
 I ORDG=+$O(^ORD(100.98,"B","IV RX",0)) S ORDD=$$IV G D1
"RTN","ORCHECK",85,0)
 I $G(IFN) S ORDD=$O(^OR(100,IFN,4.5,"ID","DRUG",0)),ORDD=+$G(^OR(100,IFN,4.5,+ORDD,1))
"RTN","ORCHECK",86,0)
 E  S ORDD=+$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORCHECK",87,0)
D1 Q:'ORDD "" S ORNDF=$$ENDCM^PSJORUTL(ORDD)
"RTN","ORCHECK",88,0)
 S Y=$P(ORNDF,U,3)_"^^99NDF^"_ORDD_U_$$NAME50^ORPEAPI(ORDD)_"^99PSD"
"RTN","ORCHECK",89,0)
 Q Y
"RTN","ORCHECK",90,0)
 ;
"RTN","ORCHECK",91,0)
IV() ; -- Get Dispense Drug for IV orderable
"RTN","ORCHECK",92,0)
 N PSOI,TYPE,VOL,ORY
"RTN","ORCHECK",93,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2),VOL=""
"RTN","ORCHECK",94,0)
 S TYPE=$S(PTR=$$PTR^ORCD("OR GTX ADDITIVE"):"A",1:"B")
"RTN","ORCHECK",95,0)
 S:TYPE="B" VOL=$S($G(IFN):$$VALUE^ORCSAVE2(IFN,"VOLUME"),1:+$G(ORDIALOG($$PTR^ORCD("OR GTX VOLUME"),1)))
"RTN","ORCHECK",96,0)
 D ENDDIV^PSJORUTL(PSOI,TYPE,VOL,.ORY)
"RTN","ORCHECK",97,0)
 Q +$G(ORY)
"RTN","ORCHECK",98,0)
 ;
"RTN","ORCHECK",99,0)
LIST(IFN) ; -- Displays list of ORCHECK(IFN) checks
"RTN","ORCHECK",100,0)
 N ORI,ORJ,ORZ,ORMAX,ORTX,ON,OFF
"RTN","ORCHECK",101,0)
 S ORZ=0 F  S ORZ=$O(ORCHECK(IFN,ORZ)) Q:ORZ'>0  D
"RTN","ORCHECK",102,0)
 . S:ORZ=1 ON=IOINHI,OFF=IOINORM S:ORZ'=1 (ON,OFF)="" ; use bold if High
"RTN","ORCHECK",103,0)
 . S ORI=0 F  S ORI=$O(ORCHECK(IFN,ORZ,ORI)) Q:ORI'>0  D
"RTN","ORCHECK",104,0)
 . . S X=$P(ORCHECK(IFN,ORZ,ORI),U,3) I $L(X)<75 W !,ON_">>>  "_X_OFF Q
"RTN","ORCHECK",105,0)
 . . S ORMAX=74 K ORTX D TXT^ORCHTAB Q:'$G(ORTX)  ; wrap
"RTN","ORCHECK",106,0)
 . . F ORJ=1:1:ORTX W !,ON_$S(ORJ=1:">>>  ",1:"      ")_ORTX(ORJ)_OFF
"RTN","ORCHECK",107,0)
 W !
"RTN","ORCHECK",108,0)
 Q
"RTN","ORCHECK",109,0)
 ;
"RTN","ORCHECK",110,0)
CANCEL() ; -- Returns 1 or 0: Cancel order(s)?
"RTN","ORCHECK",111,0)
 N X,Y,DIR,NUM
"RTN","ORCHECK",112,0)
 S NUM=+$G(ORCHECK("IFN")),DIR(0)="YA"
"RTN","ORCHECK",113,0)
 S DIR("A")="Do you want to cancel "_$S(NUM>1:"any of the new orders? ",1:"the new order? ")
"RTN","ORCHECK",114,0)
 S DIR("?",1)="Enter YES to cancel "_$S(NUM>1:"an",1:"the")_" order.  If you wish to override these order checks"
"RTN","ORCHECK",115,0)
 S DIR("?",2)="and release "_$S(NUM>1:"these orders",1:"this order")_", enter NO; you will be prompted for a justification",DIR("?")="if there are any highlighted critical order checks."
"RTN","ORCHECK",116,0)
 D ^DIR
"RTN","ORCHECK",117,0)
 Q +Y
"RTN","ORCHECK",118,0)
 ;
"RTN","ORCHECK",119,0)
REASON() ; -- Reason for overriding order checks
"RTN","ORCHECK",120,0)
 ; I '$D(^XUSEC("ORES",DUZ)),'$D(^XUSEC("ORELSE",DUZ)) Q  ??
"RTN","ORCHECK",121,0)
 N X,Y,DIR
"RTN","ORCHECK",122,0)
 S DIR(0)="FA^2:80^K:X?1."" "" X",DIR("A")="REASON FOR OVERRIDE: "
"RTN","ORCHECK",123,0)
 S DIR("?")="Enter a justification for overriding these order checks, up to 80 characters"
"RTN","ORCHECK",124,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S Y="^"
"RTN","ORCHECK",125,0)
 Q Y
"RTN","ORCHECK",126,0)
 ;
"RTN","ORCHECK",127,0)
SESSION ; -- SESSION event [called from ORCSIGN]
"RTN","ORCHECK",128,0)
 ;    Expects ORVP, ORES()
"RTN","ORCHECK",129,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")'="E"
"RTN","ORCHECK",130,0)
 N ORX,ORY,ORIFN,I,X,Y,ORGLOB
"RTN","ORCHECK",131,0)
 S ORGLOB=$H
"RTN","ORCHECK",132,0)
 K ^TMP($J,ORGLOB)
"RTN","ORCHECK",133,0)
 S ORIFN=0 F  S ORIFN=$O(ORES(ORIFN)) Q:ORIFN'>0  I +$P(ORIFN,";",2)'>1 D
"RTN","ORCHECK",134,0)
 . I "^14^13^11^10^"'[(U_$P($G(^OR(100,+ORIFN,3)),U,3)_U) Q  ;unreleased
"RTN","ORCHECK",135,0)
 . D BLD(+ORIFN) K ^TMP($J,"OCDATA") Q:'$$OCAPI^ORCHECK(+ORIFN,"OCDATA")
"RTN","ORCHECK",136,0)
 . S ORCHECK("IFN")=+$G(ORCHECK("IFN"))+1
"RTN","ORCHECK",137,0)
 . S I=0 F  S I=$O(^TMP($J,"OCDATA",I)) Q:'I  D
"RTN","ORCHECK",138,0)
 . . I $G(^TMP($J,"OCDATA",I,"OC NUMBER"))=32,$$ALGASS(+ORIFN)=1 Q
"RTN","ORCHECK",139,0)
 . . I $G(^TMP($J,"OCDATA",I,"OC NUMBER"))=3 Q
"RTN","ORCHECK",140,0)
 . . I $G(^TMP($J,"OCDATA",I,"OC TEXT",1,0))["Drug-Drug order checks (Duplicate Therapy, Duplicate Drug, Drug Interaction) were not able to be performed." Q
"RTN","ORCHECK",141,0)
 . . S ORCHECK=+$G(ORCHECK)+1,ORCHECK(+ORIFN,$S($G(^TMP($J,"OCDATA",I,"OC LEVEL")):^TMP($J,"OCDATA",I,"OC LEVEL"),1:99),ORCHECK)=$G(^TMP($J,"OCDATA",I,"OC NUMBER"))_U_$G(^TMP($J,"OCDATA",I,"OC LEVEL"))_U_$G(^TMP($J,"OCDATA",I,"OC TEXT",1,0))_U_1
"RTN","ORCHECK",142,0)
 . . I $D(^TMP($J,"OCDATA",I,"OC TEXT",2,0)) D
"RTN","ORCHECK",143,0)
 . . . S ORCHECK(+ORIFN,$S($G(^TMP($J,"OCDATA",I,"OC LEVEL")):^TMP($J,"OCDATA",I,"OC LEVEL"),1:99),ORCHECK)=$G(^TMP($J,"OCDATA",I,"OC NUMBER"))_U_$G(^TMP($J,"OCDATA",I,"OC LEVEL"))_U_"||"_ORGLOB_"&"_$G(^TMP($J,"OCDATA",I,"OC TEXT",1,0))_U_1
"RTN","ORCHECK",144,0)
 . . . N ORI S ORI=0 F  S ORI=$O(^TMP($J,"OCDATA",I,"OC TEXT",ORI)) Q:'ORI  S ^TMP($J,"ORK XTRA TXT",ORGLOB,^TMP($J,"OCDATA",I,"OC TEXT",1,0),ORI)=^TMP($J,"OCDATA",I,"OC TEXT",ORI,0)
"RTN","ORCHECK",145,0)
 . . I $D(^ORD(100.05,^TMP($J,"OCDATA",I,"OC INSTANCE"),16)) D
"RTN","ORCHECK",146,0)
 . . . N ORMONOI S ORMONOI=$O(^TMP($J,"ORMONOGRAPH",""),-1)+1
"RTN","ORCHECK",147,0)
 . . . M ^TMP($J,"ORMONOGRAPH",ORMONOI,"DATA")=^ORD(100.05,^TMP($J,"OCDATA",I,"OC INSTANCE"),16)
"RTN","ORCHECK",148,0)
 . . . S ^TMP($J,"ORMONOGRAPH",ORMONOI,"INT")=^ORD(100.05,^TMP($J,"OCDATA",I,"OC INSTANCE"),17)
"RTN","ORCHECK",149,0)
 . . . S ^TMP($J,"ORMONOGRAPH",ORMONOI,"OC")=$G(^TMP($J,"OCDATA",I,"OC TEXT",1,0))
"RTN","ORCHECK",150,0)
 . K ^TMP($J,"OCDATA")
"RTN","ORCHECK",151,0)
 I $D(ORX) D EN^ORKCHK(.ORY,+ORVP,.ORX,"SESSION"),RETURN:$D(ORY),FDBDOWN(1),REMDUPS
"RTN","ORCHECK",152,0)
 Q
"RTN","ORCHECK",153,0)
 ;
"RTN","ORCHECK",154,0)
FDBDOWN(ORX) ; -- Checks to see if the FDB was down and if so set appropriate OC
"RTN","ORCHECK",155,0)
 ; expects ORCHECK array of order checks
"RTN","ORCHECK",156,0)
 ; if ORX is 1 then this is getting called from SESSION order checks
"RTN","ORCHECK",157,0)
 Q:'$D(ORCHECK)
"RTN","ORCHECK",158,0)
 N ORDSG,ORENH,ORI,ORTHERE
"RTN","ORCHECK",159,0)
 S ORDSG=0,ORENH=0,ORI=$O(ORCHECK("IFN")),ORTHERE=0
"RTN","ORCHECK",160,0)
 I '$L(ORI) S ORI=$O(ORCHECK(ORI))
"RTN","ORCHECK",161,0)
 N ORNEXT S ORNEXT=$O(ORCHECK(ORI,2,""),-1)
"RTN","ORCHECK",162,0)
 I 'ORNEXT S ORNEXT=1
"RTN","ORCHECK",163,0)
 ;look for the "not able to be performed" OCs for each type (DSG and ENH), set flag for each to 1 if found and remove them from ORCHECK
"RTN","ORCHECK",164,0)
 N I S I="" F  S I=$O(ORCHECK(I)) Q:'$L(I)  D
"RTN","ORCHECK",165,0)
 .N J S J=0 F  S J=$O(ORCHECK(I,J)) Q:'J  D
"RTN","ORCHECK",166,0)
 ..N K S K=0 F  S K=$O(ORCHECK(I,J,K)) Q:'K  D
"RTN","ORCHECK",167,0)
 ...I $G(ORCHECK(I,J,K))["Drug Dosage checks were not able to be performed." K ORCHECK(I,J,K) S ORDSG=1
"RTN","ORCHECK",168,0)
 ...I $G(ORCHECK(I,J,K))["Drug-Drug order checks (Duplicate Therapy, Duplicate Drug, Drug Interaction) were not able to be performed." K ORCHECK(I,J,K) S ORENH=1
"RTN","ORCHECK",169,0)
 ...I $G(ORCHECK(I,J,K))["These checks will NOT be performed for this patient:" S ORTHERE=1
"RTN","ORCHECK",170,0)
 ;if DSG or ENH flag is set then add to ORY
"RTN","ORCHECK",171,0)
 I ORDSG!(ORENH) D
"RTN","ORCHECK",172,0)
 .;look to see if message already exists
"RTN","ORCHECK",173,0)
 .I ORTHERE Q
"RTN","ORCHECK",174,0)
 .N ORKGLOB S ORKGLOB=$H
"RTN","ORCHECK",175,0)
 .N ORMAIN S ORMAIN="These checks could not be completed for this patient:"
"RTN","ORCHECK",176,0)
 .S ORCHECK(ORI,2,ORNEXT)="25^2^||"_ORKGLOB_"&"_ORMAIN
"RTN","ORCHECK",177,0)
 .I $G(ORX) S ^TMP($J,"ORK XTRA TXT",ORKGLOB,ORMAIN,0)="These checks could not be completed for this patient:"
"RTN","ORCHECK",178,0)
 .N ORCNT S ORCNT=0
"RTN","ORCHECK",179,0)
 .I ORENH S ORCNT=ORCNT+1,^TMP($J,"ORK XTRA TXT",ORKGLOB,ORMAIN,ORCNT)="      Drug Interactions"
"RTN","ORCHECK",180,0)
 .I ORENH S ORCNT=ORCNT+1,^TMP($J,"ORK XTRA TXT",ORKGLOB,ORMAIN,ORCNT)="      Duplicate Therapy"
"RTN","ORCHECK",181,0)
 .I '$G(ORX),ORDSG S ORCNT=ORCNT+1,^TMP($J,"ORK XTRA TXT",ORKGLOB,ORMAIN,ORCNT)="      Dosing Warnings"
"RTN","ORCHECK",182,0)
 ;.S ORCNT=ORCNT+1,^TMP($J,"ORK XTRA TXT",ORKGLOB,ORMAIN,ORCNT)="    Drug reference system is currently unavailable!"
"RTN","ORCHECK",183,0)
 Q
"RTN","ORCHECK",184,0)
 ;
"RTN","ORCHECK",185,0)
RETURN ; -- Return checks in ORCHECK(ORIFN,CDL,#)
"RTN","ORCHECK",186,0)
 N I,IFN,CDL S I=0 F  S I=$O(ORY(I)) Q:I'>0  D
"RTN","ORCHECK",187,0)
 . S IFN=+$P(ORY(I),U) S:'IFN IFN="NEW"
"RTN","ORCHECK",188,0)
 . S CDL=+$P(ORY(I),U,3) S:'CDL CDL=99
"RTN","ORCHECK",189,0)
 . S:'$D(ORCHECK(IFN)) ORCHECK("IFN")=+$G(ORCHECK("IFN"))+1 ; count
"RTN","ORCHECK",190,0)
 . S ORCHECK=+$G(ORCHECK)+1,ORCHECK(IFN,CDL,ORCHECK)=$P(ORY(I),U,2,4)
"RTN","ORCHECK",191,0)
 Q
"RTN","ORCHECK",192,0)
 ;
"RTN","ORCHECK",193,0)
ALGASS(ORIFN) ;see if patient from order has an allergy assessment
"RTN","ORCHECK",194,0)
 N ORDFN S ORDFN=+$P(^OR(100,ORIFN,0),U,2)
"RTN","ORCHECK",195,0)
 K ORARRAY D EN1^GMRAOR1(ORDFN,"ORARRAY")
"RTN","ORCHECK",196,0)
 I ORARRAY'="" Q 1
"RTN","ORCHECK",197,0)
 Q 0
"RTN","ORCHECK",198,0)
OCAPI(IFN,ORPLACE) ;IA #4859
"RTN","ORCHECK",199,0)
 ;LOOK AT ROUTINE OROCAPI1 FOR MORE DETAILED APIS
"RTN","ORCHECK",200,0)
 ;API to get the order checking info for a specific order (IFN)
"RTN","ORCHECK",201,0)
 ;info is stored in ^TMP($J,ORPLACE)
"RTN","ORCHECK",202,0)
 ;               ^TMP($J,ORPLACE,D0,"OC LEVEL")="order check level"
"RTN","ORCHECK",203,0)
 ;                                                 ,"OC NUMBER")="file 100.8 ien"
"RTN","ORCHECK",204,0)
 ;                                                 ,"OC TEXT")="order check text"
"RTN","ORCHECK",205,0)
 ;                                                 ,"OR REASON")="over ride reason text"
"RTN","ORCHECK",206,0)
 ;                                                 ,"OR PROVIDER")="provider DUZ who entered over ride reason"
"RTN","ORCHECK",207,0)
 ;                                                 ,"OR DT")="date/time over ride reason was entered"
"RTN","ORCHECK",208,0)
 ; NOTE on OC LEVEL: 1 is HIGH, 2 is MODERATE, 3 is LOW
"RTN","ORCHECK",209,0)
 N RET,ORN,CNT,I,ORFLAG
"RTN","ORCHECK",210,0)
 S ORN=+IFN,CNT=0,ORFLAG=0
"RTN","ORCHECK",211,0)
 ;if the order is not released then show ACCEPTANCE_CPRS ocs
"RTN","ORCHECK",212,0)
 I "^14^13^11^10^"[(U_$P($G(^OR(100,ORN,3)),U,3)_U) D GETOC5^OROCAPI1(ORN,"ACCEPTANCE_CPRS",.RET) S ORFLAG=1
"RTN","ORCHECK",213,0)
 ;if it has been signed then show SIGNATURE_CPRS ocs
"RTN","ORCHECK",214,0)
 I 'ORFLAG D GETOC5^OROCAPI1(ORN,"SIGNATURE_CPRS",.RET)
"RTN","ORCHECK",215,0)
 I $D(RET) S I=0 F  S I=$O(RET(ORN,"DATA",I)) Q:'I  S CNT=CNT+1 D
"RTN","ORCHECK",216,0)
 .S ^TMP($J,ORPLACE,CNT,"OC NUMBER")=$P($G(RET(ORN,"DATA",I,1)),U)
"RTN","ORCHECK",217,0)
 .S ^TMP($J,ORPLACE,CNT,"OC LEVEL")=$P($G(RET(ORN,"DATA",I,1)),U,2)
"RTN","ORCHECK",218,0)
 .M ^TMP($J,ORPLACE,CNT,"OC TEXT")=RET(ORN,"DATA",I,"OC")
"RTN","ORCHECK",219,0)
 .S ^TMP($J,ORPLACE,CNT,"OR REASON")=$G(RET(ORN,"DATA",I,"OR",1,0))
"RTN","ORCHECK",220,0)
 .S ^TMP($J,ORPLACE,CNT,"OR PROVIDER")=$S($L(^TMP($J,ORPLACE,CNT,"OR REASON")):$P($G(RET(ORN,"DATA",I,0)),U,4),1:"")
"RTN","ORCHECK",221,0)
 .S ^TMP($J,ORPLACE,CNT,"OR DT")=$S($L(^TMP($J,ORPLACE,CNT,"OR REASON")):$P($G(RET(ORN,"DATA",I,0)),U,5),1:"")
"RTN","ORCHECK",222,0)
 .S ^TMP($J,ORPLACE,CNT,"OR STATUS")=$P($G(RET(ORN,"DATA",I,0)),U,2)
"RTN","ORCHECK",223,0)
 .S ^TMP($J,ORPLACE,CNT,"OC INSTANCE")=I
"RTN","ORCHECK",224,0)
 Q CNT
"RTN","ORCHECK",225,0)
 ;
"RTN","ORCHECK",226,0)
ISMONO(ORY) ;returns 1 if there is monograph data for the orderchecks being presented to the user
"RTN","ORCHECK",227,0)
 S ORY=0
"RTN","ORCHECK",228,0)
 Q:'$$PATCH^XPDUTL("OR*3.0*272")
"RTN","ORCHECK",229,0)
 I $D(^TMP($J,"ORMONOGRAPH")) S ORY=1
"RTN","ORCHECK",230,0)
 Q
"RTN","ORCHECK",231,0)
GETMONOL(ORY) ;returns a list of monographs available for the orderchecks being presented to the user
"RTN","ORCHECK",232,0)
 Q:'$D(^TMP($J,"ORMONOGRAPH"))
"RTN","ORCHECK",233,0)
 N I S I=0
"RTN","ORCHECK",234,0)
 F  S I=$O(^TMP($J,"ORMONOGRAPH",I)) Q:'I  D
"RTN","ORCHECK",235,0)
 .S ORY($G(^TMP($J,"ORMONOGRAPH",I,"INT")))=I_U_$G(^TMP($J,"ORMONOGRAPH",I,"INT"))
"RTN","ORCHECK",236,0)
 Q
"RTN","ORCHECK",237,0)
GETMONO(ORY,ORMONO) ;return a monograph
"RTN","ORCHECK",238,0)
 Q:'$D(^TMP($J,"ORMONOGRAPH",ORMONO))
"RTN","ORCHECK",239,0)
 K ^TMP($J,"ORMONORPC")
"RTN","ORCHECK",240,0)
 M ^TMP($J,"ORMONORPC")=^TMP($J,"ORMONOGRAPH",ORMONO,"DATA")
"RTN","ORCHECK",241,0)
 K ^TMP($J,"ORMONORPC",0)
"RTN","ORCHECK",242,0)
 S ORY=$NA(^TMP($J,"ORMONORPC")),@ORY=""
"RTN","ORCHECK",243,0)
 Q
"RTN","ORCHECK",244,0)
DELMONO(ORY) ;delete monograph data
"RTN","ORCHECK",245,0)
 K ^TMP($J,"ORMONOGRAPH"),^TMP($J,"ORMONORPC")
"RTN","ORCHECK",246,0)
 Q
"RTN","ORCHECK",247,0)
GETXTRA(ORY,ORGL,ORRULE) ;get extra text for an order check
"RTN","ORCHECK",248,0)
 ;^TMP($J,"ORK XTRA TXT") stores the text of order checks that are longer than a single line (reminder order checks)
"RTN","ORCHECK",249,0)
 Q:'$D(^TMP($J,"ORK XTRA TXT",ORGL,ORRULE))
"RTN","ORCHECK",250,0)
 M ORY=^TMP($J,"ORK XTRA TXT",ORGL,ORRULE)
"RTN","ORCHECK",251,0)
 Q
"RTN","ORCMEDT8")
0^23^B78288682
"RTN","ORCMEDT8",1,0)
ORCMEDT8 ;SLC/JM-QO, Generate quick order CRC ;04/14/09  08:41
"RTN","ORCMEDT8",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**245,243,280**;Dec 17, 1997;Build 85
"RTN","ORCMEDT8",3,0)
 Q
"RTN","ORCMEDT8",4,0)
 ;
"RTN","ORCMEDT8",5,0)
UPDQNAME(ORIEN) ; Rename personal quick order name if needed
"RTN","ORCMEDT8",6,0)
 N OLDNAME,NEWNAME,DA,DR,DIE,DIDEL
"RTN","ORCMEDT8",7,0)
 I $P($G(^ORD(101.41,ORIEN,0)),U,4)'="Q" Q
"RTN","ORCMEDT8",8,0)
 S OLDNAME=$P($G(^ORD(101.41,ORIEN,0)),U,1)
"RTN","ORCMEDT8",9,0)
 I $E($P(OLDNAME,U),1,6)'="ORWDQ " Q
"RTN","ORCMEDT8",10,0)
 S NEWNAME="ORWDQ "_$$CRC4QCK(ORIEN)
"RTN","ORCMEDT8",11,0)
 I OLDNAME'=NEWNAME D
"RTN","ORCMEDT8",12,0)
 . S NEWNAME=$$ENSURNEW(NEWNAME)
"RTN","ORCMEDT8",13,0)
 . S DA=ORIEN,DR=".01///"_NEWNAME,DIE="^ORD(101.41," D ^DIE
"RTN","ORCMEDT8",14,0)
 Q
"RTN","ORCMEDT8",15,0)
 ;
"RTN","ORCMEDT8",16,0)
ENSURNEW(NAME) ; Ensures the name is a new entry
"RTN","ORCMEDT8",17,0)
 N IDX,BASENAME,ABC,NEWNAME
"RTN","ORCMEDT8",18,0)
 S NEWNAME=NAME
"RTN","ORCMEDT8",19,0)
 S IDX=0,BASENAME=NEWNAME,ABC=97 ; Find an unused name
"RTN","ORCMEDT8",20,0)
 F  S IDX=$O(^ORD(101.41,"B",NEWNAME,0))  Q:'IDX  D
"RTN","ORCMEDT8",21,0)
 . S NEWNAME=BASENAME_$C(ABC) ; append letter 'a' - 'z'
"RTN","ORCMEDT8",22,0)
 . S ABC=ABC+1 I ABC>122 S BASENAME=BASENAME_"a",ABC=97
"RTN","ORCMEDT8",23,0)
 Q NEWNAME
"RTN","ORCMEDT8",24,0)
RAWCRC(ORIEN) ; Get a raw CRC value to determine if a record has changed
"RTN","ORCMEDT8",25,0)
 N ORDATA,RESULT,ADDCRLF,LASTLINE,LASTIDX,OLDCRC
"RTN","ORCMEDT8",26,0)
 S (RESULT,OLDCRC)=""
"RTN","ORCMEDT8",27,0)
 I $P($G(^ORD(101.41,ORIEN,0)),U,4)'="Q" G RWQ
"RTN","ORCMEDT8",28,0)
 I $E($P($G(^ORD(101.41,ORIEN,0)),U),1,6)'="ORWDQ " G RWQ
"RTN","ORCMEDT8",29,0)
 D LOADRSP^ORWDX(.ORDATA,ORIEN)
"RTN","ORCMEDT8",30,0)
 D PARSE
"RTN","ORCMEDT8",31,0)
RWQ Q RESULT
"RTN","ORCMEDT8",32,0)
 ;
"RTN","ORCMEDT8",33,0)
 ; The following code attemps to duplicate the CRC calculated by the Delphi code
"RTN","ORCMEDT8",34,0)
 ; in CPRS for quick orders.  It will not match all the time, since not all the
"RTN","ORCMEDT8",35,0)
 ; data neded to make the determination is stored on the M side, but it does it's best.
"RTN","ORCMEDT8",36,0)
 ;
"RTN","ORCMEDT8",37,0)
CRC4QCK(ORIEN) ; Get CRC for a personal quick order
"RTN","ORCMEDT8",38,0)
 N ORDATA,DISPGRP,DEFDLG,FORMID,RESULT,FORMDATA,ADDCRLF
"RTN","ORCMEDT8",39,0)
 N LASTLINE,LASTIDX,OLDCRC,FORMINFO,IDINFO,NEXTFORM
"RTN","ORCMEDT8",40,0)
 S RESULT="",FORMID=0
"RTN","ORCMEDT8",41,0)
 ; Must be personal quick order
"RTN","ORCMEDT8",42,0)
 I $P($G(^ORD(101.41,ORIEN,0)),U,4)'="Q" G EXT
"RTN","ORCMEDT8",43,0)
 I $E($P($G(^ORD(101.41,ORIEN,0)),U),1,6)'="ORWDQ " G EXT
"RTN","ORCMEDT8",44,0)
 S OLDCRC=$E($P($G(^ORD(101.41,ORIEN,0)),U,1),7,14)
"RTN","ORCMEDT8",45,0)
 F  Q:(RESULT=OLDCRC)!(FORMID="")  D
"RTN","ORCMEDT8",46,0)
 . K ORDATA D LOADRSP^ORWDX(.ORDATA,ORIEN)
"RTN","ORCMEDT8",47,0)
 . ; First pass don't use any form id - get baseline CRC
"RTN","ORCMEDT8",48,0)
 . I FORMID=1 D  Q:FORMID=""
"RTN","ORCMEDT8",49,0)
 . . S FORMID=""
"RTN","ORCMEDT8",50,0)
 . . S DISPGRP=$P($G(^ORD(101.41,ORIEN,0)),U,5) I '+DISPGRP Q  ; Must have a valid display group
"RTN","ORCMEDT8",51,0)
 . . S DEFDLG=$P($G(^ORD(100.98,DISPGRP,0)),U,4) I '+DEFDLG Q  ; Display group must have a valid default dialog
"RTN","ORCMEDT8",52,0)
 . . D FORMID^ORWDXM(.FORMID,DEFDLG) I '+FORMID S FORMID="" Q  ; Default dialog must have a valid windows form ID
"RTN","ORCMEDT8",53,0)
 . . I (FORMID=130)!(FORMID=140) D
"RTN","ORCMEDT8",54,0)
 . . . N NEWFORM D CHK94^ORWDPS1(.NEWFORM) I NEWFORM=1 S FORMID=135
"RTN","ORCMEDT8",55,0)
 . . D FORMINFO(.FORMINFO,.IDINFO,.NEXTFORM)
"RTN","ORCMEDT8",56,0)
 . I FORMID=0 S FORMID=1
"RTN","ORCMEDT8",57,0)
 . E  D SORTDATA I FORMDATA="" S FORMID="" Q  ; Updates FORMID
"RTN","ORCMEDT8",58,0)
 . D PARSE
"RTN","ORCMEDT8",59,0)
EXT Q RESULT
"RTN","ORCMEDT8",60,0)
 ;
"RTN","ORCMEDT8",61,0)
PARSE ; Parse Data
"RTN","ORCMEDT8",62,0)
 N DATAIDX,IDX,LINE,CODE,CRCDATA,OUTPUT,DONE,ISMASTER,LASTMSTR,FIRST,P3,LK4SPACE
"RTN","ORCMEDT8",63,0)
 S DATAIDX="",(IDX,DONE,ISMASTER,LASTMSTR,LASTIDX)=0,LASTLINE=""
"RTN","ORCMEDT8",64,0)
 F  D GETLINE Q:DONE  D  Q:DONE
"RTN","ORCMEDT8",65,0)
 . I ISMASTER D
"RTN","ORCMEDT8",66,0)
 . . S OUTPUT=+$P(LINE,U,1)_U_+$P(LINE,U,2)_U
"RTN","ORCMEDT8",67,0)
 . . S IDX=IDX+1,CRCDATA(IDX)=OUTPUT
"RTN","ORCMEDT8",68,0)
 . . S FIRST=1,P3=$P(LINE,U,3)
"RTN","ORCMEDT8",69,0)
 . . I P3="COMMENT" S ADDCRLF=1,LK4SPACE=1
"RTN","ORCMEDT8",70,0)
 . . E  D
"RTN","ORCMEDT8",71,0)
 . . . I P3="STATEMENTS" S ADDCRLF=1,LK4SPACE=0
"RTN","ORCMEDT8",72,0)
 . . . E  S ADDCRLF=0,LK4SPACE=0
"RTN","ORCMEDT8",73,0)
 . . F  D GETLINE Q:DONE!ISMASTER  D
"RTN","ORCMEDT8",74,0)
 . . . I CODE="i" S IDX=IDX+1,CRCDATA(IDX)=LINE
"RTN","ORCMEDT8",75,0)
 . . . I CODE="t" D
"RTN","ORCMEDT8",76,0)
 . . . . I FIRST S FIRST=0,OUTPUT=LINE
"RTN","ORCMEDT8",77,0)
 . . . . E  D
"RTN","ORCMEDT8",78,0)
 . . . . . I $L(LASTLINE)=0 S OUTPUT=$C(13)_$C(10)_LINE Q
"RTN","ORCMEDT8",79,0)
 . . . . . I LK4SPACE,$L(LASTLINE)>1,$E(LASTLINE,$L(LASTLINE))=" " S OUTPUT=""
"RTN","ORCMEDT8",80,0)
 . . . . . E  D
"RTN","ORCMEDT8",81,0)
 . . . . . . I ADDCRLF S OUTPUT=$C(13)_$C(10) ; ,$L(LASTLINE)<65
"RTN","ORCMEDT8",82,0)
 . . . . . . E  S OUTPUT=" "
"RTN","ORCMEDT8",83,0)
 . . . . . S OUTPUT=OUTPUT_LINE
"RTN","ORCMEDT8",84,0)
 . . . . S LASTLINE=LINE
"RTN","ORCMEDT8",85,0)
 . . . . S IDX=IDX+1,CRCDATA(IDX)=OUTPUT
"RTN","ORCMEDT8",86,0)
 . . . . I ADDCRLF S LASTIDX=IDX
"RTN","ORCMEDT8",87,0)
 . . I ISMASTER,'DONE S LASTMSTR=1
"RTN","ORCMEDT8",88,0)
 S RESULT=$$CRC4ARRY^ORCRC(.CRCDATA)
"RTN","ORCMEDT8",89,0)
 ; Same data can generate 2 different CRCs - CRLF on end of comments are stripped
"RTN","ORCMEDT8",90,0)
 I OLDCRC'="",RESULT'=OLDCRC,LASTIDX>0 D
"RTN","ORCMEDT8",91,0)
 . S CRCDATA(LASTIDX)=CRCDATA(LASTIDX)_$C(13)_$C(10)
"RTN","ORCMEDT8",92,0)
 . S RESULT=$$CRC4ARRY^ORCRC(.CRCDATA)
"RTN","ORCMEDT8",93,0)
 Q
"RTN","ORCMEDT8",94,0)
 ;
"RTN","ORCMEDT8",95,0)
SORTDATA ; Sorts data by fields according to FormID
"RTN","ORCMEDT8",96,0)
 N IN,OUT,LINE,DATA,ID,CODE,INDEX,END,IDX,RTN,SUBFORM,SUBFORM2,SUBIDX,NODE
"RTN","ORCMEDT8",97,0)
 S SUBFORM="",SUBFORM2=""
"RTN","ORCMEDT8",98,0)
 S FORMDATA=$G(FORMINFO(FORMID)) I FORMDATA="" Q
"RTN","ORCMEDT8",99,0)
 I $E(FORMDATA,1,2)'="00" S RTN="SUBID"_$E(FORMDATA,1,2) D @RTN S FORMDATA=$G(FORMINFO(FORMID)) I FORMDATA="" Q
"RTN","ORCMEDT8",100,0)
 S IN=0,OUT=0,END=1000000,IDX=0
"RTN","ORCMEDT8",101,0)
 F  S IN=$O(ORDATA(IN)) Q:'+IN  D
"RTN","ORCMEDT8",102,0)
 . S LINE=ORDATA(IN)
"RTN","ORCMEDT8",103,0)
 . I $E(LINE)="~" D
"RTN","ORCMEDT8",104,0)
 . . S IDX=1,ID=$P(LINE,U,3),CODE="."_IDINFO(ID)_".",NODE=$P(LINE,U,2)
"RTN","ORCMEDT8",105,0)
 . . S INDEX=$F(FORMDATA,CODE),SUBIDX=0
"RTN","ORCMEDT8",106,0)
 . . I INDEX=0,SUBFORM'="" D
"RTN","ORCMEDT8",107,0)
 . . . S INDEX=($F(FORMDATA,".ZZZ."))
"RTN","ORCMEDT8",108,0)
 . . . I INDEX>0 S SUBIDX=$F(SUBFORM,CODE) I SUBIDX<1 S INDEX=0
"RTN","ORCMEDT8",109,0)
 . . I INDEX=0,SUBFORM2'="" D
"RTN","ORCMEDT8",110,0)
 . . . S INDEX=($F(FORMDATA,".XXX."))
"RTN","ORCMEDT8",111,0)
 . . . I INDEX>0 S SUBIDX=$F(SUBFORM2,CODE) I SUBIDX<1 S INDEX=0
"RTN","ORCMEDT8",112,0)
 . . I INDEX=0 S OUT=END,END=END+1
"RTN","ORCMEDT8",113,0)
 . . E  D
"RTN","ORCMEDT8",114,0)
 . . . I SUBIDX>0 D  I 1
"RTN","ORCMEDT8",115,0)
 . . . . S OUT=(INDEX-4)*250
"RTN","ORCMEDT8",116,0)
 . . . . S SUBIDX=(SUBIDX-4)\4
"RTN","ORCMEDT8",117,0)
 . . . . S OUT=OUT+SUBIDX+(NODE*20)
"RTN","ORCMEDT8",118,0)
 . . . E  S OUT=(INDEX-4)*250
"RTN","ORCMEDT8",119,0)
 . I IDX>0 D
"RTN","ORCMEDT8",120,0)
 . . S DATA(OUT,IDX)=LINE
"RTN","ORCMEDT8",121,0)
 . . S IDX=IDX+1
"RTN","ORCMEDT8",122,0)
 K ORDATA
"RTN","ORCMEDT8",123,0)
 S (IN,OUT,INDEX)=0
"RTN","ORCMEDT8",124,0)
 F  S IN=$O(DATA(IN)) Q:'+IN  D
"RTN","ORCMEDT8",125,0)
 . F  S INDEX=$O(DATA(IN,INDEX)) Q:'+INDEX  D
"RTN","ORCMEDT8",126,0)
 . . S OUT=OUT+1
"RTN","ORCMEDT8",127,0)
 . . S ORDATA(OUT)=DATA(IN,INDEX)
"RTN","ORCMEDT8",128,0)
 S FORMID=$G(NEXTFORM(FORMID))
"RTN","ORCMEDT8",129,0)
 Q
"RTN","ORCMEDT8",130,0)
 ;
"RTN","ORCMEDT8",131,0)
GETLINE ;
"RTN","ORCMEDT8",132,0)
 I LASTMSTR S LASTMSTR=0 Q
"RTN","ORCMEDT8",133,0)
 S DATAIDX=$O(ORDATA(DATAIDX))
"RTN","ORCMEDT8",134,0)
 S DONE=(DATAIDX="")
"RTN","ORCMEDT8",135,0)
 I 'DONE S CODE=$E(ORDATA(DATAIDX),1),LINE=$E(ORDATA(DATAIDX),2,9999),ISMASTER=(CODE="~")
"RTN","ORCMEDT8",136,0)
 Q
"RTN","ORCMEDT8",137,0)
 ;
"RTN","ORCMEDT8",138,0)
FORMINFO(FORMINFO,IDINFO,NEXTFORM) ; populates FORMINFO,IDINFO and NEXTFORM arrays
"RTN","ORCMEDT8",139,0)
 N IDX,LINE,CODE,RTN,NEXT
"RTN","ORCMEDT8",140,0)
 S IDX=1
"RTN","ORCMEDT8",141,0)
 F  S LINE=$E($T(FORMTBL+IDX),21,999) Q:$L(LINE)<1  D
"RTN","ORCMEDT8",142,0)
 . S CODE=$E(LINE,1,3),NEXT=$E(LINE,5,7),LINE=$E(LINE,9,999)
"RTN","ORCMEDT8",143,0)
 . S FORMINFO(CODE)=LINE
"RTN","ORCMEDT8",144,0)
 . I NEXT'="   " S NEXTFORM(CODE)=NEXT
"RTN","ORCMEDT8",145,0)
 . S IDX=IDX+1
"RTN","ORCMEDT8",146,0)
 S IDX=1
"RTN","ORCMEDT8",147,0)
 F  S LINE=$E($T(IDTABLE+IDX),4,999) Q:$L(LINE)<1  D
"RTN","ORCMEDT8",148,0)
 . S CODE=$E(LINE,1,3),LINE=$E(LINE,5,99)
"RTN","ORCMEDT8",149,0)
 . S IDINFO(LINE)=CODE,IDX=IDX+1
"RTN","ORCMEDT8",150,0)
 Q
"RTN","ORCMEDT8",151,0)
 ;
"RTN","ORCMEDT8",152,0)
HASCODE(CODE) ; scans data for code
"RTN","ORCMEDT8",153,0)
 N RESULT,IDX,LINE S IDX="",RESULT=0
"RTN","ORCMEDT8",154,0)
 F  S IDX=$O(ORDATA(IDX)) Q:IDX=""  D  Q:IDX=""
"RTN","ORCMEDT8",155,0)
 . S LINE=ORDATA(IDX)
"RTN","ORCMEDT8",156,0)
 . I $E(LINE)="~" D
"RTN","ORCMEDT8",157,0)
 . . S LINE=$P(LINE,U,3)
"RTN","ORCMEDT8",158,0)
 . . I LINE=CODE S RESULT=1,IDX=""
"RTN","ORCMEDT8",159,0)
 Q RESULT
"RTN","ORCMEDT8",160,0)
 ;
"RTN","ORCMEDT8",161,0)
SUBID ; SubID codes are used to change the form ID depending on depending on data
"RTN","ORCMEDT8",162,0)
 ; Data below is FormID;SubID.list of ID codes in order of use
"RTN","ORCMEDT8",163,0)
 ; SubID's are used to change the FormID depending on data values.
"RTN","ORCMEDT8",164,0)
 Q
"RTN","ORCMEDT8",165,0)
SUBID01 ; Generic Meds dialog
"RTN","ORCMEDT8",166,0)
 N INPT,COMPLEX
"RTN","ORCMEDT8",167,0)
 S INPT=$$HASCODE("NOW"),COMPLEX=$$HASCODE("DAYS")
"RTN","ORCMEDT8",168,0)
 I INPT D  I 1
"RTN","ORCMEDT8",169,0)
 . I COMPLEX S FORMID="INX",SUBFORM=$G(FORMINFO("MDX"))
"RTN","ORCMEDT8",170,0)
 . E  S FORMID="INP"
"RTN","ORCMEDT8",171,0)
 E  I COMPLEX S FORMID="OPX",SUBFORM=$G(FORMINFO("MDX"))
"RTN","ORCMEDT8",172,0)
 Q
"RTN","ORCMEDT8",173,0)
SUBID02 ; IV Meds
"RTN","ORCMEDT8",174,0)
 S SUBFORM=$G(FORMINFO("IVL"))
"RTN","ORCMEDT8",175,0)
 Q
"RTN","ORCMEDT8",176,0)
SUBID03 ; Delphi code adds URGENCY prompt that does not exist in dialog on M side
"RTN","ORCMEDT8",177,0)
 I '$$HASCODE("URGENCY") D
"RTN","ORCMEDT8",178,0)
 . N X
"RTN","ORCMEDT8",179,0)
 . S X=$O(ORDATA(999999),-1)+1
"RTN","ORCMEDT8",180,0)
 . S ORDATA(X)="~0^1^URGENCY"
"RTN","ORCMEDT8",181,0)
 Q
"RTN","ORCMEDT8",182,0)
SUBID04 ; Blood Bank will probably be wrong - quick orders not working in v26
"RTN","ORCMEDT8",183,0)
 S SUBFORM=$G(FORMINFO("BBK"))
"RTN","ORCMEDT8",184,0)
 S SUBFORM2=$G(FORMINFO("BBX"))
"RTN","ORCMEDT8",185,0)
 Q
"RTN","ORCMEDT8",186,0)
SUBID05 ; Diet
"RTN","ORCMEDT8",187,0)
 I FORMID="117" S SUBFORM=$G(FORMINFO("DLN"))
"RTN","ORCMEDT8",188,0)
 I FORMID="TBF" S SUBFORM=$G(FORMINFO("TBL"))
"RTN","ORCMEDT8",189,0)
 Q
"RTN","ORCMEDT8",190,0)
FORMTBL ; Form Table - Forms allowing personal quick orders, as of CPRS GUI v26 (OR*3*215)
"RTN","ORCMEDT8",191,0)
 ;;Consult         ;110;CS2;00.ORD.CLS.URG.PLA.MSC.COD.PRV.COM.ERD.
"RTN","ORCMEDT8",192,0)
 ;;                ;CS2;   ;00.ORD.CLS.URG.PLA.MSC.COD.COM.PRV.ERD.
"RTN","ORCMEDT8",193,0)
 ;;Procedure       ;112;PR2;00.SER.ORD.CLS.URG.PLA.MSC.COD.PRV.COM.ERD.
"RTN","ORCMEDT8",194,0)
 ;;                ;PR2;PR3;00.SER.ORD.COM.CLS.URG.PLA.MSC.COD.PRV.ERD.
"RTN","ORCMEDT8",195,0)
 ;;                ;PR3;   ;00.SER.ORD.CLS.URG.PLA.MSC.COD.COM.PRV.ERD.
"RTN","ORCMEDT8",196,0)
 ;;Diet            ;117;TBF;05.STT.STP.ZZZ.COM.DEL.CAN.
"RTN","ORCMEDT8",197,0)
 ;;                ;TBF;OPM;05.ZZZ.COM.CAN.
"RTN","ORCMEDT8",198,0)
 ;;                ;OPM;   ;00.ORD.MEL.STT.STP.SCH.COM.DEL.
"RTN","ORCMEDT8",199,0)
 ;;                ;DLN;   ;00.ORD.
"RTN","ORCMEDT8",200,0)
 ;;                ;TBL;   ;00.ORD.STR.INS.
"RTN","ORCMEDT8",201,0)
 ;;Lab             ;120;   ;00.ORD.SAM.SPE.URG.COM.COL.STT.SCH.DAY.
"RTN","ORCMEDT8",202,0)
 ;;Blood Bank      ;125;BB2;04.ZZZ.DTE.COL.URG.COM.STT.MSC.REA.YN0.XXX.LAB.
"RTN","ORCMEDT8",203,0)
 ;;                ;BB2;   ;04.ZZZ.URG.COM.COL.DTE.MSC.REA.YN0.STT.XXX.
"RTN","ORCMEDT8",204,0)
 ;;                ;BBK;   ;00.ORD.QTY.MDF.SPC.
"RTN","ORCMEDT8",205,0)
 ;;                ;BBX;   ;00.RES.
"RTN","ORCMEDT8",206,0)
 ;;Inpatient Meds  ;130;   ;00.ORD.DRG.INS.ROU.SCH.URG.COM.SCT.ADM
"RTN","ORCMEDT8",207,0)
 ;;Generic Meds    ;135;   ;01.ORD.INS.DRG.DOS.STR.NAM.ROU.SCH.URG.COM.SUP.QTY.REF.SC0.PCK.PI0.SIG.
"RTN","ORCMEDT8",208,0)
 ;;                ;INP;   ;00.ORD.INS.DRG.DOS.STR.NAM.ROU.SCH.URG.COM.NOW.SIG.
"RTN","ORCMEDT8",209,0)
 ;;                ;OPX;   ;00.ORD.STR.NAM.DRG.ZZZ.URG.COM.SUP.QTY.REF.SC0.PCK.PI0.SIG.
"RTN","ORCMEDT8",210,0)
 ;;                ;INX;   ;00.ORD.STR.NAM.DRG.ZZZ.URG.COM.NOW.SIG.
"RTN","ORCMEDT8",211,0)
 ;;                ;MDX;   ;00.INS.DOS.ROU.SCH.DAY.CNJ.
"RTN","ORCMEDT8",212,0)
 ;;Outpatient Meds ;140;   ;00.ORD.DRG.INS.MSC.ROU.SCH.QTY.REF.PCK.URG.COM.SC0.
"RTN","ORCMEDT8",213,0)
 ;;Non-VA Meds     ;145;   ;03.ORD.INS.DRG.DOS.STR.NAM.ROU.SCH.URG.COM.STT.STA.NOW.SIG.
"RTN","ORCMEDT8",214,0)
 ;;Radiology       ;160;   ;00.ORD.STT.URG.MOD.CLS.IML.PRG.YN0.PRE.COM.MDF.PRV.CON.RSH.LOC.
"RTN","ORCMEDT8",215,0)
 ;;IV Meds         ;180;   ;02.ZZZ.RAT.URG.DAY.COM.SCH.TYP.ADM
"RTN","ORCMEDT8",216,0)
 ;;                ;IVL;   ;00.ORD.VOL.ADD.STR.UNT.
"RTN","ORCMEDT8",217,0)
 ;;
"RTN","ORCMEDT8",218,0)
IDTABLE ; ID table - returns codes used in the form table IDINFO("LONGNAME")=SHORNAME
"RTN","ORCMEDT8",219,0)
 ;;ADD;ADDITIVE
"RTN","ORCMEDT8",220,0)
 ;;ADM:ADMIN
"RTN","ORCMEDT8",221,0)
 ;;CAN;CANCEL
"RTN","ORCMEDT8",222,0)
 ;;CLS;CLASS
"RTN","ORCMEDT8",223,0)
 ;;COD;CODE
"RTN","ORCMEDT8",224,0)
 ;;COL;COLLECT
"RTN","ORCMEDT8",225,0)
 ;;COM;COMMENT
"RTN","ORCMEDT8",226,0)
 ;;CNJ;CONJ
"RTN","ORCMEDT8",227,0)
 ;;CON;CONTRACT
"RTN","ORCMEDT8",228,0)
 ;;DTE;DATETIME
"RTN","ORCMEDT8",229,0)
 ;;DAY;DAYS
"RTN","ORCMEDT8",230,0)
 ;;DEL;DELIVERY
"RTN","ORCMEDT8",231,0)
 ;;DOS;DOSE
"RTN","ORCMEDT8",232,0)
 ;;DRG;DRUG
"RTN","ORCMEDT8",233,0)
 ;;ERD;EARLIEST
"RTN","ORCMEDT8",234,0)
 ;;IML;IMLOC
"RTN","ORCMEDT8",235,0)
 ;;INS;INSTR
"RTN","ORCMEDT8",236,0)
 ;;ISO;ISOLATION
"RTN","ORCMEDT8",237,0)
 ;;LAB;LAB
"RTN","ORCMEDT8",238,0)
 ;;LOC;LOCATION
"RTN","ORCMEDT8",239,0)
 ;;MEL;MEAL
"RTN","ORCMEDT8",240,0)
 ;;MSC;MISC
"RTN","ORCMEDT8",241,0)
 ;;MOD;MODE
"RTN","ORCMEDT8",242,0)
 ;;MDF;MODIFIER
"RTN","ORCMEDT8",243,0)
 ;;NAM;NAME
"RTN","ORCMEDT8",244,0)
 ;;NOW;NOW
"RTN","ORCMEDT8",245,0)
 ;;ORD;ORDERABLE
"RTN","ORCMEDT8",246,0)
 ;;PI0;PI
"RTN","ORCMEDT8",247,0)
 ;;PCK;PICKUP
"RTN","ORCMEDT8",248,0)
 ;;PLA;PLACE
"RTN","ORCMEDT8",249,0)
 ;;PRG;PREGNANT
"RTN","ORCMEDT8",250,0)
 ;;PRE;PREOP
"RTN","ORCMEDT8",251,0)
 ;;PRV;PROVIDER
"RTN","ORCMEDT8",252,0)
 ;;QTY;QTY
"RTN","ORCMEDT8",253,0)
 ;;RAT;RATE
"RTN","ORCMEDT8",254,0)
 ;;REA;REASON
"RTN","ORCMEDT8",255,0)
 ;;REF;REFILLS
"RTN","ORCMEDT8",256,0)
 ;;RSH:RESEARCH
"RTN","ORCMEDT8",257,0)
 ;;RES;RESULTS
"RTN","ORCMEDT8",258,0)
 ;;ROU;ROUTE
"RTN","ORCMEDT8",259,0)
 ;;SAM;SAMPLE
"RTN","ORCMEDT8",260,0)
 ;;SC0;SC
"RTN","ORCMEDT8",261,0)
 ;;SCH;SCHEDULE
"RTN","ORCMEDT8",262,0)
 ;;SCT:SCHTYPE
"RTN","ORCMEDT8",263,0)
 ;;SER;SERVICE
"RTN","ORCMEDT8",264,0)
 ;;SIG;SIG
"RTN","ORCMEDT8",265,0)
 ;;SPE;SPECIMEN
"RTN","ORCMEDT8",266,0)
 ;;SPC;SPECSTS
"RTN","ORCMEDT8",267,0)
 ;;STT;START
"RTN","ORCMEDT8",268,0)
 ;;STA;STATEMENTS
"RTN","ORCMEDT8",269,0)
 ;;STP;STOP
"RTN","ORCMEDT8",270,0)
 ;;STR;STRENGTH
"RTN","ORCMEDT8",271,0)
 ;;SUP;SUPPLY
"RTN","ORCMEDT8",272,0)
 ;;TIM;TIME
"RTN","ORCMEDT8",273,0)
 ;;TYP:TYPE
"RTN","ORCMEDT8",274,0)
 ;;UNT;UNITS
"RTN","ORCMEDT8",275,0)
 ;;URG;URGENCY
"RTN","ORCMEDT8",276,0)
 ;;VIS;VISITSTR
"RTN","ORCMEDT8",277,0)
 ;;VOL;VOLUME
"RTN","ORCMEDT8",278,0)
 ;;XFU;XFUSION
"RTN","ORCMEDT8",279,0)
 ;;YN0;YN
"RTN","ORCMEDT8",280,0)
 ;;XXX;XXX
"RTN","ORCMEDT8",281,0)
 ;;ZZZ;ZZZ
"RTN","ORCMEDT8",282,0)
 ;;
"RTN","ORCNOTE")
0^73^B59596403
"RTN","ORCNOTE",1,0)
ORCNOTE ; SLC/MKB - Progress Note actions ;12/03/09  11:34
"RTN","ORCNOTE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**22,48,65,104,280**;Dec 17, 1997;Build 85
"RTN","ORCNOTE",3,0)
ELSIG ; Sign rec
"RTN","ORCNOTE",4,0)
 N ASK,TIUEVNT,TIUDA,TIUES,TIUI,X,X1,Y,ORI,NMBR,ORPICK,ORQUIT,IDX,TIUPOP,TIUPRM0,TIUPRM1
"RTN","ORCNOTE",5,0)
 I '$D(TIUPRM0) D SETPARM^TIULE
"RTN","ORCNOTE",6,0)
 I $P(TIUPRM0,U,2)'>0 W !,"Electronic signature not yet enabled." H 3 G ELSIGX
"RTN","ORCNOTE",7,0)
 S ORPICK="",VALMBCK=""
"RTN","ORCNOTE",8,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("sign") Q:'ORNMBR
"RTN","ORCNOTE",9,0)
 I +ORNMBR D FULL^VALM1
"RTN","ORCNOTE",10,0)
 S ORI=1
"RTN","ORCNOTE",11,0)
 F  S NMBR=$P(ORNMBR,",",ORI) Q:+NMBR'>0!$D(ORQUIT)  D
"RTN","ORCNOTE",12,0)
 . N TIU0,TIU12,TIU15,TIUSTAT,TIUEVNT,TIUTYPE,TIUDA
"RTN","ORCNOTE",13,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR)),ORI=+$G(ORI)+1
"RTN","ORCNOTE",14,0)
 . S TIUDA=+IDX,TIU0=$G(^TIU(8925,+TIUDA,0)),TIU12=$G(^(12)),TIU15=$G(^(15))
"RTN","ORCNOTE",15,0)
 . S TIUSTAT=+$P(TIU0,U,5)
"RTN","ORCNOTE",16,0)
 . S TIUTYPE=$$PNAME^TIULC1(+$G(^TIU(8925,+TIUDA,0)))
"RTN","ORCNOTE",17,0)
 . S TIUEVNT=$S(+TIUSTAT'>5:"SIGNATURE",1:"COSIGNATURE")
"RTN","ORCNOTE",18,0)
 . S ASK=$$CANDO^TIULP(TIUDA,TIUEVNT)
"RTN","ORCNOTE",19,0)
 . I +ASK>0 D
"RTN","ORCNOTE",20,0)
 . . L +^TIU(8925,+TIUDA):1
"RTN","ORCNOTE",21,0)
 . . E  S ASK="0^ Another user is editing this entry."
"RTN","ORCNOTE",22,0)
 . I +ASK'>0,$P(ASK,U,2)]"" D  I 1
"RTN","ORCNOTE",23,0)
 . . D FULL^VALM1
"RTN","ORCNOTE",24,0)
 . . W !!,"Item #: ",NMBR,!,$P(ASK,U,2),!
"RTN","ORCNOTE",25,0)
 . . W !,"Removed from signature list.",!
"RTN","ORCNOTE",26,0)
 . . I $$READ^TIUU("FOA","Press RETURN to continue...")
"RTN","ORCNOTE",27,0)
 . E  D
"RTN","ORCNOTE",28,0)
 . . I $S(+$$REQCOSIG^TIULP(+TIU0,+TIUDA,DUZ):1,+$P(TIU15,U,6):1,1:0),(+$P(TIU12,U,8)'>0) D  Q:+$G(TIUPOP)
"RTN","ORCNOTE",29,0)
 . . . N COSIGNER
"RTN","ORCNOTE",30,0)
 . . . W !!,"Item #",NMBR,": ",TIUTYPE," for "
"RTN","ORCNOTE",31,0)
 . . . W $$PTNAME^TIULC1($P(TIU0,U,2))," will need cosignature..."
"RTN","ORCNOTE",32,0)
 . . . S COSIGNER=$$ASKCSNR^TIURS(TIUDA,DUZ)
"RTN","ORCNOTE",33,0)
 . . . I +COSIGNER'>0 D
"RTN","ORCNOTE",34,0)
 . . . . S TIUPOP=1
"RTN","ORCNOTE",35,0)
 . . . . W !!,"Item #",NMBR,": MUST have a cosigner, before you may sign."
"RTN","ORCNOTE",36,0)
 . . . . W !!,"Removed from signature list.",!
"RTN","ORCNOTE",37,0)
 . . . . I $$READ^TIUU("FOA","Press RETURN to continue...")
"RTN","ORCNOTE",38,0)
 . . N TIU,TIUY
"RTN","ORCNOTE",39,0)
 . . D EN^VALM("ORC TIU SIGN/COSIGN")
"RTN","ORCNOTE",40,0)
 I +$G(ORPICK)'>0 D  G ELSIGX
"RTN","ORCNOTE",41,0)
 . S VALMSG="** Signature List Empty...Nothing signed. **"
"RTN","ORCNOTE",42,0)
 I +$G(ORPICK)>0 D
"RTN","ORCNOTE",43,0)
 . S TIUES=$$ASKSIG^TIULA1
"RTN","ORCNOTE",44,0)
 . I '+TIUES S VALMSG="** Nothing Signed. **" Q
"RTN","ORCNOTE",45,0)
 . F ORI=1:1:$L(ORPICK,",") S NMBR=$P(ORPICK,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCNOTE",46,0)
 . . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR)),TIUDA=+IDX
"RTN","ORCNOTE",47,0)
 . . D ES^TIURS(TIUDA,TIUES,NMBR)
"RTN","ORCNOTE",48,0)
 I $G(ORPICK)']"" S VALMSG="** Nothing Signed. **"
"RTN","ORCNOTE",49,0)
 E  S VALMSG="** Item"_$S($L(ORPICK,",")>1:"s ",1:" ")_ORPICK_" Signed. **"
"RTN","ORCNOTE",50,0)
ELSIGX K VALMY S VALMBCK="R"
"RTN","ORCNOTE",51,0)
 Q
"RTN","ORCNOTE",52,0)
ACCEPT(ORPICK,NMBR) ; Adds item(s) to signature list
"RTN","ORCNOTE",53,0)
 D FULL^VALM1
"RTN","ORCNOTE",54,0)
 S ORPICK=$G(ORPICK)_$S($L(ORPICK):",",1:"")_NMBR,OREBUILD=1
"RTN","ORCNOTE",55,0)
 W !,"Item #",NMBR," added to the signature list." H 3
"RTN","ORCNOTE",56,0)
 Q
"RTN","ORCNOTE",57,0)
SIGN ; -- sign notes
"RTN","ORCNOTE",58,0)
 N ORI,NMBR,ORQUIT,IDX,TIUDA S VALMBCK=""
"RTN","ORCNOTE",59,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("sign") Q:'ORNMBR
"RTN","ORCNOTE",60,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCNOTE",61,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",62,0)
 . S TIUDA=+IDX Q:'+TIUDA
"RTN","ORCNOTE",63,0)
 . D EDSIG^TIURS(TIUDA,"",1)
"RTN","ORCNOTE",64,0)
 Q
"RTN","ORCNOTE",65,0)
 ;
"RTN","ORCNOTE",66,0)
ADDENDUM ; -- make addendum
"RTN","ORCNOTE",67,0)
 N ORI,NMBR,ORQUIT,IDX,TIUDA,TIUCHNG S VALMBCK=""
"RTN","ORCNOTE",68,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("") Q:'ORNMBR
"RTN","ORCNOTE",69,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCNOTE",70,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",71,0)
 . S TIUDA=+IDX Q:'+TIUDA
"RTN","ORCNOTE",72,0)
 . I +$$ISADDNDM^TIULC1(TIUDA) D  Q
"RTN","ORCNOTE",73,0)
 . . W !,$C(7),"You may not make addenda to addenda."
"RTN","ORCNOTE",74,0)
 . . I $$READ^TIUU("EA","Press RETURN to continue...") W ""
"RTN","ORCNOTE",75,0)
 . D CLEAR^VALM1,ADDEND1^TIURA1 I +$G(TIUCHNG) S OREBUILD=1
"RTN","ORCNOTE",76,0)
 . I '+$G(TIUCHNG) S VALMBCK="R"
"RTN","ORCNOTE",77,0)
 Q
"RTN","ORCNOTE",78,0)
 ;
"RTN","ORCNOTE",79,0)
EDIT ; -- edit notes
"RTN","ORCNOTE",80,0)
 N ORI,NMBR,ORQUIT,IDX,TIUDA,TIUCHNG S VALMBCK=""
"RTN","ORCNOTE",81,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("edit") Q:'ORNMBR
"RTN","ORCNOTE",82,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCNOTE",83,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",84,0)
 . S TIUDA=+IDX Q:'+TIUDA
"RTN","ORCNOTE",85,0)
 . D CLEAR^VALM1,EDIT1^TIURA I +$G(TIUCHNG) S OREBUILD=1
"RTN","ORCNOTE",86,0)
 S VALMBCK="R"
"RTN","ORCNOTE",87,0)
 Q
"RTN","ORCNOTE",88,0)
COPY ; -- copy notes
"RTN","ORCNOTE",89,0)
 N ORI,NMBR,ORQUIT,IDX,TIUDA,TIUCHNG,ORTAB S VALMBCK=""
"RTN","ORCNOTE",90,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("copy") Q:'ORNMBR
"RTN","ORCNOTE",91,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCNOTE",92,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",93,0)
 . S TIUDA=+IDX Q:'+TIUDA
"RTN","ORCNOTE",94,0)
 . D COPY1^TIURC I +$G(TIUCHNG) S OREBUILD=1
"RTN","ORCNOTE",95,0)
 . I '+$G(TIUCHNG) S VALMBCK="R"
"RTN","ORCNOTE",96,0)
 Q
"RTN","ORCNOTE",97,0)
DELETE ; -- delete notes
"RTN","ORCNOTE",98,0)
 N ORI,NMBR,ORQUIT,IDX,TIUDA,TIUCHNG S VALMBCK=""
"RTN","ORCNOTE",99,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("delete") Q:'ORNMBR
"RTN","ORCNOTE",100,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCNOTE",101,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",102,0)
 . S TIUDA=+IDX Q:'+TIUDA
"RTN","ORCNOTE",103,0)
 . D DEL^TIURB(TIUDA) I +$G(TIUCHNG) S OREBUILD=1
"RTN","ORCNOTE",104,0)
 Q
"RTN","ORCNOTE",105,0)
SIGNERS ; -- Identify additional signers
"RTN","ORCNOTE",106,0)
 N ORI,NMBR,ORQUIT,IDX,TIUDA,TIUCHNG S VALMBCK=""
"RTN","ORCNOTE",107,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("") Q:'ORNMBR
"RTN","ORCNOTE",108,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCNOTE",109,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",110,0)
 . S TIUDA=+IDX Q:'+TIUDA
"RTN","ORCNOTE",111,0)
 . D FULL^VALM1,SIGNER^TIURA1
"RTN","ORCNOTE",112,0)
 S VALMBCK="R"
"RTN","ORCNOTE",113,0)
 Q
"RTN","ORCNOTE",114,0)
PRINT ; Print selected documents
"RTN","ORCNOTE",115,0)
 N DFN,TIUDA,TIUDPRM,TIUDARR,TIUDATA,TIUI,DIROUT,TIUDE,POP,TIUPFLG
"RTN","ORCNOTE",116,0)
 N TIUSPG,TIUDEV
"RTN","ORCNOTE",117,0)
 S VALMBCK="" I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("print") Q:'ORNMBR
"RTN","ORCNOTE",118,0)
 D CLEAR^VALM1
"RTN","ORCNOTE",119,0)
 I +$$CHARTANY(ORNMBR) S TIUPFLG=$$FLAG^TIUPRPN3
"RTN","ORCNOTE",120,0)
 S TIUSPG=1
"RTN","ORCNOTE",121,0)
 S TIUDEV=$$DEVICE^TIUDEV(.IO) ; Get Device/allow queueing
"RTN","ORCNOTE",122,0)
 I $S(IO']"":1,TIUDEV']"":1,1:0) G PRINTX
"RTN","ORCNOTE",123,0)
 I $D(IO("Q")) D QUE^TIUDEV("PRINTN^ORCNOTE",TIUDEV) G PRINTX
"RTN","ORCNOTE",124,0)
 D PRINTN
"RTN","ORCNOTE",125,0)
PRINTX N IOSTBM D ^%ZISC,FIXLST^TIULM
"RTN","ORCNOTE",126,0)
 K VALMY S VALMBCK="R"
"RTN","ORCNOTE",127,0)
 Q
"RTN","ORCNOTE",128,0)
CHARTANY(ORNMBR) ; Evaluate selected documents for chart print
"RTN","ORCNOTE",129,0)
 N ORI,NMBR,ORSLT S ORSLT=0
"RTN","ORCNOTE",130,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) Q:+NMBR'>0!+ORSLT  D
"RTN","ORCNOTE",131,0)
 . N IDX,TIUDA
"RTN","ORCNOTE",132,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",133,0)
 . S TIUDA=+IDX Q:'TIUDA
"RTN","ORCNOTE",134,0)
 . S ORSLT=+$$CHARTONE^TIURA1(TIUDA)
"RTN","ORCNOTE",135,0)
 Q ORSLT
"RTN","ORCNOTE",136,0)
PRINTN ; Loop through selected doc's & invoke print code as appropriate
"RTN","ORCNOTE",137,0)
 N TIUI,TIUTYP,ORINDX,ORY,DFN K ^TMP("TIUPR",$J)
"RTN","ORCNOTE",138,0)
 N ORI,NMBR,ORQUIT,IDX,TIUDA,TIUCHNG
"RTN","ORCNOTE",139,0)
 U IO
"RTN","ORCNOTE",140,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)!$D(DIROUT)
"RTN","ORCNOTE",141,0)
 . N TIUPMTHD,TIUTYP,TIUPFHDR,TIUPFNBR,TIUPGRP,TIUPRINT,TIUDTYP,TIUFLAG
"RTN","ORCNOTE",142,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",143,0)
 . S TIUDA=+IDX Q:'+TIUDA  Q:'$D(^TIU(8925,TIUDA,0))
"RTN","ORCNOTE",144,0)
 . S TIUTYP=$P($G(^TIU(8925,TIUDA,0)),U)
"RTN","ORCNOTE",145,0)
 . ; Evaluate whether user can print record
"RTN","ORCNOTE",146,0)
 . S TIUPRINT=$$CANDO^TIULP(TIUDA,"PRINT RECORD")
"RTN","ORCNOTE",147,0)
 . I +TIUPRINT'>0 D  Q  ; Exclude records user can't print
"RTN","ORCNOTE",148,0)
 . . W !!,"Item #",ORI,": ",!,$P(TIUPRINT,U,2),!
"RTN","ORCNOTE",149,0)
 . . I IO=IO(0),'$D(ZTQUEUED),$$READ^TIUU("EA","RETURN to continue...")
"RTN","ORCNOTE",150,0)
 . I +$G(TIUPFLG) S TIUFLAG=+$$CHARTONE^TIURA1(TIUDA)
"RTN","ORCNOTE",151,0)
 . S DFN=$P($G(^TIU(8925,+TIUDA,0)),U,2)
"RTN","ORCNOTE",152,0)
 . I +TIUTYP D
"RTN","ORCNOTE",153,0)
 . . S TIUPMTHD=$$PRNTMTHD^TIULG(+TIUTYP)
"RTN","ORCNOTE",154,0)
 . . S TIUPGRP=$$PRNTGRP^TIULG(+TIUTYP)
"RTN","ORCNOTE",155,0)
 . . S TIUPFHDR=$$PRNTHDR^TIULG(+TIUTYP)
"RTN","ORCNOTE",156,0)
 . . S TIUPFNBR=$$PRNTNBR^TIULG(+TIUTYP)
"RTN","ORCNOTE",157,0)
 . I +$$ISADDNDM^TIULC1(TIUDA) D
"RTN","ORCNOTE",158,0)
 . . S TIUDA=+$P($G(^TIU(8925,TIUDA,0)),U,6)
"RTN","ORCNOTE",159,0)
 . . S TIUDTYP=+$G(^TIU(8925,TIUDA,0))
"RTN","ORCNOTE",160,0)
 . I +$G(^TIU(8925,TIUDA,21))>0 D
"RTN","ORCNOTE",161,0)
 . . S TIUDA=+$G(^TIU(8925,TIUDA,21))
"RTN","ORCNOTE",162,0)
 . . S TIUDTYP=+$G(^TIU(8925,TIUDA,0))
"RTN","ORCNOTE",163,0)
 . Q:+$D(ORINDX(TIUDA))
"RTN","ORCNOTE",164,0)
 . I +$G(TIUDTYP)>0 D
"RTN","ORCNOTE",165,0)
 . . S TIUPMTHD=$$PRNTMTHD^TIULG(+TIUDTYP)
"RTN","ORCNOTE",166,0)
 . . S TIUPGRP=$$PRNTGRP^TIULG(+TIUDTYP)
"RTN","ORCNOTE",167,0)
 . . S TIUPFHDR=$$PRNTHDR^TIULG(+TIUDTYP)
"RTN","ORCNOTE",168,0)
 . . S TIUPFNBR=$$PRNTNBR^TIULG(+TIUDTYP)
"RTN","ORCNOTE",169,0)
 . I $G(TIUPMTHD)]"",+$G(TIUPGRP),($G(TIUPFHDR)]""),($G(TIUPFNBR)]"") S ORY(TIUPMTHD,$G(TIUPGRP)_"$"_TIUPFHDR_";"_DFN,ORI,TIUDA)=TIUPFNBR
"RTN","ORCNOTE",170,0)
 . E  S ORY(TIUPMTHD,DFN,ORI,TIUDA)=""
"RTN","ORCNOTE",171,0)
 . S ORINDX(TIUDA)=ORI
"RTN","ORCNOTE",172,0)
 S TIUPMTHD="" F  S TIUPMTHD=$O(ORY(TIUPMTHD)) Q:TIUPMTHD=""  D
"RTN","ORCNOTE",173,0)
 . D PRNTDOC^TIURA(TIUPMTHD,.ORY)
"RTN","ORCNOTE",174,0)
 Q
"RTN","ORCNOTE",175,0)
BROWSE ; -- browse document
"RTN","ORCNOTE",176,0)
 N ORI,NMBR,ORQUIT,IDX,TIUDA,TIUCHNG,TIUQUIT S VALMBCK=""
"RTN","ORCNOTE",177,0)
 I '$G(ORNMBR) S ORNMBR=$$ORDERS^ORCHART("browse") Q:'ORNMBR
"RTN","ORCNOTE",178,0)
 F ORI=1:1:$L(ORNMBR,",") S NMBR=$P(ORNMBR,",",ORI) D:NMBR  Q:$D(ORQUIT)
"RTN","ORCNOTE",179,0)
 . S IDX=$G(^TMP("OR",$J,"CURRENT","IDX",NMBR))
"RTN","ORCNOTE",180,0)
 . S TIUDA=+IDX Q:'+TIUDA
"RTN","ORCNOTE",181,0)
 . D CLEAR^VALM1,BROWS1^TIURA("TIU BROWSE FOR CLINICIAN")
"RTN","ORCNOTE",182,0)
 . S VALMBCK="R" S:+$G(TIUCHNG) OREBUILD=1
"RTN","ORCNOTE",183,0)
 . I +$G(TIUQUIT) S ORQUIT=1
"RTN","ORCNOTE",184,0)
 Q
"RTN","ORCNOTE",185,0)
 ;
"RTN","ORCNOTE",186,0)
EX ; -- exit action
"RTN","ORCNOTE",187,0)
 D:$G(OREBUILD) TAB^ORCHART(ORTAB,1)
"RTN","ORCNOTE",188,0)
 S:$D(^TMP("OR",$J,"CURRENT","MENU")) XQORM("HIJACK")=^("MENU")
"RTN","ORCNOTE",189,0)
 Q
"RTN","ORCNOTE",190,0)
GETTOT(ORY,DFN) ; --get total count of progress notes
"RTN","ORCNOTE",191,0)
 ; ^TIU(8925,"ACLPT",3) refers to progress notes class
"RTN","ORCNOTE",192,0)
 N ORTIDT,ORTIFN
"RTN","ORCNOTE",193,0)
 S ORY=0
"RTN","ORCNOTE",194,0)
 Q:'$G(DFN)
"RTN","ORCNOTE",195,0)
 F ORTIDT=0:0 S ORTIDT=$O(^TIU(8925,"ACLPT",3,DFN,ORTIDT)) Q:ORTIDT<1  D
"RTN","ORCNOTE",196,0)
 .F ORTIFN=0:0 S ORTIFN=$O(^TIU(8925,"ACLPT",3,DFN,ORTIDT,ORTIFN)) Q:ORTIFN<1  S ORY=ORY+1
"RTN","ORCNOTE",197,0)
 Q
"RTN","ORCSAVE")
0^64^B92624396
"RTN","ORCSAVE",1,0)
ORCSAVE ;SLC/MKB/JDL-Save ;07/08/10  11:46
"RTN","ORCSAVE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,56,70,73,92,94,116,141,163,187,190,195,243,303,293,280**;Dec 17, 1997;Build 85
"RTN","ORCSAVE",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCSAVE",4,0)
NEW(ORDIALOG,ORDG,ORPKG,ORCAT,OREVENT,ORDUZ,ORLOG) ; -- New order
"RTN","ORCSAVE",5,0)
 ; Returns ORIFN = [new] order number, if created/saved
"RTN","ORCSAVE",6,0)
 D EN
"RTN","ORCSAVE",7,0)
 Q
"RTN","ORCSAVE",8,0)
 ;
"RTN","ORCSAVE",9,0)
XX ; -- save new/unreleased edited order into Orders file
"RTN","ORCSAVE",10,0)
 ;    Requires: ORDIALOG() = array of dialog values
"RTN","ORCSAVE",11,0)
 ;              ORIFN      = IFN of original order that was edited
"RTN","ORCSAVE",12,0)
 ;
"RTN","ORCSAVE",13,0)
 N OLDIFN S ORIFN=+ORIFN,OLDIFN=0
"RTN","ORCSAVE",14,0)
 I $S($P(^OR(100,ORIFN,3),U,3)=11:0,$P(^(3),U,3)'=10:1,$P(^(8,1,0),U,4)=2:0,1:1) S OLDIFN=ORIFN K ORIFN ; create new order if released or delayed&signed
"RTN","ORCSAVE",15,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",16,0)
 I $G(OLDIFN) D  ;save links between orders
"RTN","ORCSAVE",17,0)
 . S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=1
"RTN","ORCSAVE",18,0)
 . S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",19,0)
 I $D(^OR(100,+OLDIFN,0)) D
"RTN","ORCSAVE",20,0)
 . Q:'$G(OREVTDF)
"RTN","ORCSAVE",21,0)
 . N OLDEVT,OLDSTS,LSTACT,PATID,NOW,WHEN
"RTN","ORCSAVE",22,0)
 . S (OLDEVT,OLDSTS,LSTACT)=0
"RTN","ORCSAVE",23,0)
 . S NOW=$$NOW^XLFDT
"RTN","ORCSAVE",24,0)
 . S OLDEVT=$P(^OR(100,+OLDIFN,0),U,17),OLDSTS=$P(^OR(100,+OLDIFN,3),U,3)
"RTN","ORCSAVE",25,0)
 . ; Active status = 6 from #100.01
"RTN","ORCSAVE",26,0)
 . I (OLDEVT>0),OLDSTS=6 D
"RTN","ORCSAVE",27,0)
 . . S $P(^OR(100,+ORIFN,0),U,17)=OLDEVT
"RTN","ORCSAVE",28,0)
 . . S $P(^OR(100,+ORIFN,3),U,3)=11
"RTN","ORCSAVE",29,0)
 . . S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORCSAVE",30,0)
 . . I $D(^OR(100,+ORIFN,8,LSTACT,0)) D
"RTN","ORCSAVE",31,0)
 . . . S $P(^OR(100,+ORIFN,8,LSTACT,0),U,15)=11
"RTN","ORCSAVE",32,0)
 . . . S PATID=$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORCSAVE",33,0)
 . . . S WHEN=$P(^OR(100,+ORIFN,8,LSTACT,0),U)
"RTN","ORCSAVE",34,0)
 . . . S ^OR(100,"AC",PATID,9999999-WHEN,+ORIFN,LSTACT)=""
"RTN","ORCSAVE",35,0)
 Q
"RTN","ORCSAVE",36,0)
 ;
"RTN","ORCSAVE",37,0)
RN ; -- save new/unreleased renewal order into Orders file
"RTN","ORCSAVE",38,0)
 ;    Requires: ORDIALOG() = array of new dialog values
"RTN","ORCSAVE",39,0)
 ;              ORIFN      = IFN of original order that was renewed
"RTN","ORCSAVE",40,0)
 ;
"RTN","ORCSAVE",41,0)
 N OLDIFN S OLDIFN=+ORIFN K ORIFN
"RTN","ORCSAVE",42,0)
 D EN Q:'ORIFN  S:'$G(ORDA) ORDA=1
"RTN","ORCSAVE",43,0)
 S $P(^OR(100,ORIFN,3),U,5)=OLDIFN,$P(^(3),U,11)=2
"RTN","ORCSAVE",44,0)
 S $P(^OR(100,OLDIFN,3),U,6)=ORIFN S:$D(^(5)) ^OR(100,ORIFN,5)=^OR(100,OLDIFN,5)
"RTN","ORCSAVE",45,0)
 Q
"RTN","ORCSAVE",46,0)
 ;
"RTN","ORCSAVE",47,0)
EN ; -- save new/unreleased order in ORDIALOG() into Orders file
"RTN","ORCSAVE",48,0)
 ;    Requires: ORVP, ORNP [and ORL, ORTS, ORAPPT if available]
"RTN","ORCSAVE",49,0)
 ;    If defined: ORCAT,ORPKG,ORDG,ORLOG,ORDUZ,OREVENT,ORDCNTRL,ORSRC
"RTN","ORCSAVE",50,0)
 ;     (else use values from ORDIALOG and current state)
"RTN","ORCSAVE",51,0)
 ;
"RTN","ORCSAVE",52,0)
 N PKG,NOW,NODE,CNT,CDL,I,X,STS,SIGNREQD,LOC,TRSPEC,NATR,CATG,DG,LOG,USR,TYPE,ORK
"RTN","ORCSAVE",53,0)
 Q:'$G(ORVP)  Q:'$G(ORDIALOG)  Q:'$D(^ORD(101.41,+ORDIALOG,0))
"RTN","ORCSAVE",54,0)
 S NOW=$$NOW^XLFDT,SIGNREQD=+$P(^ORD(101.41,+ORDIALOG,0),U,6)
"RTN","ORCSAVE",55,0)
 S CATG=$S($L($G(ORCAT)):ORCAT,1:$S($$INPT^ORCD:"I",1:"O"))
"RTN","ORCSAVE",56,0)
 S PKG=$S($G(ORPKG):ORPKG,1:$P(^ORD(101.41,+ORDIALOG,0),U,7))
"RTN","ORCSAVE",57,0)
 I $G(ORIFN),$D(^OR(100,ORIFN,0)) S STS=$P(^(3),U,3) G EN2 ; unrel order
"RTN","ORCSAVE",58,0)
 S DG=$S($G(ORDG):+ORDG,1:$P(^ORD(101.41,+ORDIALOG,0),U,5))
"RTN","ORCSAVE",59,0)
 I $G(OREVENT),$$GET1^DIQ(9.4,+PKG_",",1)'="PSO",'$G(DGPMT) S LOC="",TRSPEC="" ;195
"RTN","ORCSAVE",60,0)
 E  S LOC=$G(ORL),TRSPEC=$G(ORTS)
"RTN","ORCSAVE",61,0)
 S TYPE=$S("^B^C^X^P^0^"[(U_$G(ORSRC)_U):ORSRC,$G(ORDCNTRL)="SN":"P",1:0)
"RTN","ORCSAVE",62,0)
 S LOG=$S($G(ORLOG):ORLOG,1:+$E(NOW,1,12)),USR=$S($G(ORDUZ):ORDUZ,1:DUZ)
"RTN","ORCSAVE",63,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",64,0)
 S STS=$S($G(OREVENT):10,1:11),ORIFN=$$NEXTIFN Q:'ORIFN
"RTN","ORCSAVE",65,0)
EN1 S ^OR(100,ORIFN,0)=ORIFN_U_ORVP_U_U_$G(ORNP)_U_+ORDIALOG_";ORD(101.41,^"_USR_U_LOG_U_U_U_LOC_U_DG_U_CATG_U_TRSPEC_U_PKG_U_U_SIGNREQD_U_$G(OREVENT)_U_$G(ORAPPT)
"RTN","ORCSAVE",66,0)
 S ^OR(100,ORIFN,3)=LOG_"^90^"_STS_U_$S($G(ORIT):ORIT_";ORD(101.41,",1:"")_U_$G(ORDIALOG("PREV"))_"^^1^^^^"_TYPE
"RTN","ORCSAVE",67,0)
 S ^OR(100,ORIFN,8,0)="^100.008DA^1^1",^OR(100,ORIFN,8,1,0)=LOG_"^NW^"_$G(ORNP)_U_$S(SIGNREQD:2,1:3)_"^^^^^^^^"_NATR_U_USR_"^1^"_STS,^OR(100,ORIFN,8,"C","NW",1)=""
"RTN","ORCSAVE",68,0)
 S ^OR(100,"AF",LOG,ORIFN,1)=""
"RTN","ORCSAVE",69,0)
 S ^OR(100,"ACT",ORVP,9999999-LOG,+DG,ORIFN,1)=""
"RTN","ORCSAVE",70,0)
 S:STS'=10 ^OR(100,"AC",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",71,0)
 S:SIGNREQD ^OR(100,"AS",ORVP,9999999-LOG,ORIFN,1)=""
"RTN","ORCSAVE",72,0)
 S:$G(OREVENT) ^OR(100,"AEVNT",ORVP,OREVENT,ORIFN)=""
"RTN","ORCSAVE",73,0)
 ;check if OR GTX STUDY REASON is in ORDIALOG and strip out control characters
"RTN","ORCSAVE",74,0)
 N ORRFSID
"RTN","ORCSAVE",75,0)
 S ORRFSID=$O(^ORD(101.41,"B","OR GTX STUDY REASON",""))
"RTN","ORCSAVE",76,0)
 I ORRFSID,$D(ORDIALOG(ORRFSID,1)) D
"RTN","ORCSAVE",77,0)
 .N X,I
"RTN","ORCSAVE",78,0)
 .S X=ORDIALOG(ORRFSID,1)
"RTN","ORCSAVE",79,0)
 .F I=1:1:31 S X=$TR(X,$C(I))
"RTN","ORCSAVE",80,0)
 .S ORDIALOG(ORRFSID,1)=X
"RTN","ORCSAVE",81,0)
EN2 S ORIFN=+ORIFN D RESPONSE ; save responses
"RTN","ORCSAVE",82,0)
 I $P(^OR(100,ORIFN,0),"^",5) D  ;Copy orders PKI fix
"RTN","ORCSAVE",83,0)
 . N OI
"RTN","ORCSAVE",84,0)
 . S OI=+$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,ORIFN,4.5,OI,1)) Q:'OI
"RTN","ORCSAVE",85,0)
 . I PKG'=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) Q
"RTN","ORCSAVE",86,0)
 . D PKI^ORWDPS1(.ORY,OI,CATG,+ORVP,$$GET^XPAR("ALL^USR.`"_DUZ,"ORWOR PKI USE",1,"Q"))
"RTN","ORCSAVE",87,0)
 . I $E($G(ORY))=2 S ORDEA=ORY
"RTN","ORCSAVE",88,0)
 K ^OR(100,ORIFN,8,1,.1) D ORDTEXT^ORCSAVE1(ORIFN_";1") ; order text
"RTN","ORCSAVE",89,0)
 S NODE=$G(^OR(100,ORIFN,0)) D  S ^OR(100,ORIFN,0)=NODE
"RTN","ORCSAVE",90,0)
 . S $P(NODE,U,4)=$G(ORNP) ; COST?
"RTN","ORCSAVE",91,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","LOCATION",0))
"RTN","ORCSAVE",92,0)
 . I I,$P(NODE,U,10) S X=+$G(^OR(100,ORIFN,4.5,+I,1)) S:X $P(NODE,U,10)=X_";SC(" ;reset Loc if prev value
"RTN","ORCSAVE",93,0)
 . S I=$O(^OR(100,ORIFN,4.5,"ID","CLASS",0))
"RTN","ORCSAVE",94,0)
 . I I S X=$G(^OR(100,ORIFN,4.5,+I,1)) S:"^I^O^"[(U_X_U) $P(NODE,U,12)=X
"RTN","ORCSAVE",95,0)
 S $P(^OR(100,ORIFN,3),U)=NOW
"RTN","ORCSAVE",96,0)
 D DELOCC^OROCAPI1(ORIFN,"ACCEPTANCE_CPRS")
"RTN","ORCSAVE",97,0)
 I $G(ORCHECK) D  ; save order checks
"RTN","ORCSAVE",98,0)
 . S (CNT,CDL)=0 F  S CDL=$O(ORCHECK("NEW",CDL)) Q:CDL'>0  S I=0 D
"RTN","ORCSAVE",99,0)
 . . F  S I=$O(ORCHECK("NEW",CDL,I)) Q:I'>0  D
"RTN","ORCSAVE",100,0)
 . . . I $D(ORCHECK("NEW",CDL,I,0)) D
"RTN","ORCSAVE",101,0)
 . . . . N J S J=0,ORCHECK("NEW",CDL,I)=ORCHECK("NEW",CDL,I,J) F  S J=$O(ORCHECK("NEW",CDL,I,J)) Q:'J  S ORCHECK("NEW",CDL,I)=ORCHECK("NEW",CDL,I)_ORCHECK("NEW",CDL,I,J)
"RTN","ORCSAVE",102,0)
 . . . S X=ORCHECK("NEW",CDL,I)
"RTN","ORCSAVE",103,0)
 . . . S ORK(I,1)=+ORIFN_U_"ACCEPTANCE_CPRS"_U_DUZ_U_$$NOW^XLFDT_U_$P(X,U)_U_CDL
"RTN","ORCSAVE",104,0)
 . . .; S ORK(I,2)=$E($P(X,U,3),1,500)
"RTN","ORCSAVE",105,0)
 . . . S ORK(I,2)=$P(X,U,3)
"RTN","ORCSAVE",106,0)
 . . . I $E(ORK(I,2),0,2)="||" D
"RTN","ORCSAVE",107,0)
 . . . . N ORGLOB,ORRULE,ORI
"RTN","ORCSAVE",108,0)
 . . . . S ORGLOB=$P($P(ORK(I,2),"||",2),"&"),ORRULE=$P($P(ORK(I,2),"||",2),"&",2)
"RTN","ORCSAVE",109,0)
 . . . . S ORK(I,2)=ORRULE
"RTN","ORCSAVE",110,0)
 . . . . S ORI=0 F  S ORI=$O(^TMP($J,"ORK XTRA TXT",ORGLOB,ORRULE,ORI)) Q:'ORI  S ORK(I,2,ORI)=^TMP($J,"ORK XTRA TXT",ORGLOB,ORRULE,ORI)
"RTN","ORCSAVE",111,0)
 . I $D(ORK) D
"RTN","ORCSAVE",112,0)
 . . N OCRET,ORKI
"RTN","ORCSAVE",113,0)
 . . D SAVEOC^OROCAPI1(.ORK,.OCRET)
"RTN","ORCSAVE",114,0)
 . . S ORKI=0 F  S ORKI=$O(ORK(ORKI)) Q:'ORKI  D
"RTN","ORCSAVE",115,0)
 . . . N OCINST,OCTXT S OCTXT=$G(ORK(ORKI,2))
"RTN","ORCSAVE",116,0)
 . . . S OCINST=$O(OCRET(ORKI,0))
"RTN","ORCSAVE",117,0)
 . . . N ORMONOI,ORMONOQ S ORMONOI=0,ORMONOQ=0 F  Q:ORMONOQ=1  S ORMONOI=$O(^TMP($J,"ORMONOGRAPH",ORMONOI)) Q:'ORMONOI  D
"RTN","ORCSAVE",118,0)
 . . . . I OCTXT[$G(^TMP($J,"ORMONOGRAPH",ORMONOI,"OC")) D
"RTN","ORCSAVE",119,0)
 . . . . . S ORMONOQ=1
"RTN","ORCSAVE",120,0)
 . . . . . S ^ORD(100.05,OCINST,17)=^TMP($J,"ORMONOGRAPH",ORMONOI,"INT")
"RTN","ORCSAVE",121,0)
 . . . . . M ^ORD(100.05,OCINST,16)=^TMP($J,"ORMONOGRAPH",ORMONOI,"DATA")
"RTN","ORCSAVE",122,0)
 . . . . . S ^ORD(100.05,OCINST,16,0)="^^"_$O(^ORD(100.05,OCINST,16,""),-1)_U_$O(^ORD(100.05,OCINST,16,""),-1)_U_+$$NOW^XLFDT_U
"RTN","ORCSAVE",123,0)
 . . K ^TMP($J,"ORMONOGRAPH")
"RTN","ORCSAVE",124,0)
 . . K ^TMP($J,"ORK XTRA TXT")
"RTN","ORCSAVE",125,0)
 K ORDEA
"RTN","ORCSAVE",126,0)
ENQ Q
"RTN","ORCSAVE",127,0)
 ;
"RTN","ORCSAVE",128,0)
NEXTIFN() ; -- Returns next available ORIFN
"RTN","ORCSAVE",129,0)
 N I,HDR,LAST,TOTAL,DA
"RTN","ORCSAVE",130,0)
 L +^OR(100,0):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","ORCSAVE",131,0)
 I '$T Q "^"
"RTN","ORCSAVE",132,0)
 S HDR=$G(^OR(100,0)),TOTAL=+$P(HDR,U,4),LAST=$O(^OR(100,"?"),-1)
"RTN","ORCSAVE",133,0)
 S I=LAST\1 F I=(I+1):1 Q:'$D(^OR(100,I,0))
"RTN","ORCSAVE",134,0)
 S DA=I,^OR(100,DA,0)=DA,$P(HDR,U,3,4)=DA_U_(TOTAL+1)
"RTN","ORCSAVE",135,0)
 S ^OR(100,0)=HDR L -^OR(100,0)
"RTN","ORCSAVE",136,0)
 Q DA
"RTN","ORCSAVE",137,0)
 ;
"RTN","ORCSAVE",138,0)
RESPONSE ; -- Save responses in ORDIALOG() into ^OR(100,ORIFN,4.5)
"RTN","ORCSAVE",139,0)
 N PROMPT,CNT,ITM,TYPE,INST,VALUE,I,START,PAT,X
"RTN","ORCSAVE",140,0)
 S PAT=$P(^OR(100,ORIFN,0),U,2),START=$P(^(0),U,8) K ^(4.5)
"RTN","ORCSAVE",141,0)
 S (PROMPT,CNT)=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCSAVE",142,0)
 . S ITM=$G(ORDIALOG(PROMPT)) Q:'ITM
"RTN","ORCSAVE",143,0)
 . S TYPE=$E($G(ORDIALOG(PROMPT,0))) Q:'$L(TYPE)
"RTN","ORCSAVE",144,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCSAVE",145,0)
 . . S VALUE=$G(ORDIALOG(PROMPT,INST)) Q:VALUE=""  S CNT=CNT+1
"RTN","ORCSAVE",146,0)
 . . S ^OR(100,ORIFN,4.5,CNT,0)=+ITM_U_PROMPT_U_INST_U_$P(ITM,U,2)
"RTN","ORCSAVE",147,0)
 . . S:$L($P(ITM,U,2)) ^OR(100,ORIFN,4.5,"ID",$P(ITM,U,2),CNT)=""
"RTN","ORCSAVE",148,0)
 . . I VALUE<1,TYPE="N" S VALUE=0_+VALUE I VALUE="00" S VALUE=0
"RTN","ORCSAVE",149,0)
 . . S:TYPE'="W" ^OR(100,ORIFN,4.5,CNT,1)=VALUE
"RTN","ORCSAVE",150,0)
 . . M:TYPE="W" ^OR(100,ORIFN,4.5,CNT,2)=@VALUE ; array root
"RTN","ORCSAVE",151,0)
 S ^OR(100,ORIFN,4.5,0)="^100.045A^"_CNT_U_CNT
"RTN","ORCSAVE",152,0)
R1 ; [Reset] Orderables
"RTN","ORCSAVE",153,0)
 I $D(^OR(100,ORIFN,.1)) S I=0 F  S I=$O(^OR(100,ORIFN,.1,I)) Q:I'>0  S X=$G(^(I,0)) I X,PAT,START K ^OR(100,"AOI",X,PAT,9999999-START,ORIFN) ; kill xref
"RTN","ORCSAVE",154,0)
 K ^OR(100,ORIFN,.1) I $D(^OR(100,ORIFN,4.5,"ID","ORDERABLE")) D
"RTN","ORCSAVE",155,0)
 . S (I,CNT)=0
"RTN","ORCSAVE",156,0)
 . F  S I=$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D
"RTN","ORCSAVE",157,0)
 . . S X=$G(^OR(100,ORIFN,4.5,I,1)) Q:'X
"RTN","ORCSAVE",158,0)
 . . S CNT=CNT+1,^OR(100,ORIFN,.1,CNT,0)=X,^OR(100,ORIFN,.1,"B",X,CNT)=""
"RTN","ORCSAVE",159,0)
 . . I PAT,START S ^OR(100,"AOI",X,PAT,9999999-START,ORIFN)=""
"RTN","ORCSAVE",160,0)
 . S ^OR(100,ORIFN,.1,0)="^100.001PA^"_CNT_U_CNT
"RTN","ORCSAVE",161,0)
 Q
"RTN","ORCSAVE",162,0)
 ;
"RTN","ORCSAVE",163,0)
RESUME(IFN) ; -- add Response nodes for RESUME tray service
"RTN","ORCSAVE",164,0)
 ; S ^OR(100,+IFN,4.5,<next>,0)=DT_"^^^RESUME",^(1)=1
"RTN","ORCSAVE",165,0)
 ;
"RTN","ORCSAVE",166,0)
 N X,Y,DA,DIC,DLAYGO
"RTN","ORCSAVE",167,0)
 S DIC="^OR(100,"_+IFN_",4.5,",DIC(0)="LX",DA(1)=+IFN,X=DT
"RTN","ORCSAVE",168,0)
 S DIC("DR")=".04///RESUME",DIC("P")=$P(^DD(100,4.5,0),U,2),DLAYGO=100
"RTN","ORCSAVE",169,0)
 D ^DIC S:Y ^OR(100,+IFN,4.5,+Y,1)=1
"RTN","ORCSAVE",170,0)
 Q
"RTN","ORCSAVE",171,0)
 ;
"RTN","ORCSAVE",172,0)
PROVIDER(ORDER,PROV) ; -- Change PROVider assigned to ORDER
"RTN","ORCSAVE",173,0)
 Q:'$G(ORDER)  Q:'$G(PROV)
"RTN","ORCSAVE",174,0)
 N ORACT S ORACT=+$P(ORDER,";",2) S:'ORACT ORACT=1
"RTN","ORCSAVE",175,0)
 S $P(^OR(100,+ORDER,8,ORACT,0),U,3)=PROV
"RTN","ORCSAVE",176,0)
 S:ORACT=1 $P(^OR(100,+ORDER,0),U,4)=PROV
"RTN","ORCSAVE",177,0)
 Q
"RTN","ORCSAVE",178,0)
 ;
"RTN","ORCSAVE",179,0)
ACTION(CODE,DA,PROV,REASON,WHEN,WHO) ; -- save new action
"RTN","ORCSAVE",180,0)
 N NEXT,TOTAL,HDR,LAST,X,PAT,DGRP,SIG,NATR,TXT S DA=+DA
"RTN","ORCSAVE",181,0)
 Q:'$D(^OR(100,DA,0)) 0 Q:$G(CODE)'?2U 0
"RTN","ORCSAVE",182,0)
 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) S:'$G(WHO) WHO=DUZ
"RTN","ORCSAVE",183,0)
 S NATR=+$O(^ORD(100.02,"C","E",0)) ;assume Elec Entered until changed
"RTN","ORCSAVE",184,0)
 S PAT=$P(^OR(100,DA,0),U,2),DGRP=$P(^(0),U,11),SIG=$P(^(0),U,16),X=+$P($G(^(3)),U,7),HDR=$G(^(8,0))
"RTN","ORCSAVE",185,0)
 S:X'>0 X=1 S TXT=$P($G(^OR(100,DA,8,X,0)),U,14) ;current actn's txt ptr
"RTN","ORCSAVE",186,0)
 S:HDR="" HDR="^100.008DA^^" S TOTAL=+$P(HDR,U,4)
"RTN","ORCSAVE",187,0)
 S LAST=$O(^OR(100,DA,8,"C",CODE,"?"),-1) I LAST D
"RTN","ORCSAVE",188,0)
 . S X=$G(^OR(100,DA,8,LAST,0)) Q:$P(X,U,15)'=11  Q:$P(X,U,4)'=2
"RTN","ORCSAVE",189,0)
 . S NEXT=LAST I PAT,$P(X,U) D  ; kill old xref entries
"RTN","ORCSAVE",190,0)
 . . K:DGRP ^OR(100,"ACT",PAT,(9999999-$P(X,U)),DGRP,DA,NEXT)
"RTN","ORCSAVE",191,0)
 . . K ^OR(100,"AC",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AS",PAT,(9999999-$P(X,U)),DA,NEXT),^OR(100,"AF",$P(X,U),DA,NEXT)
"RTN","ORCSAVE",192,0)
 S:'$G(NEXT) NEXT=$O(^OR(100,DA,8,"?"),-1)+1,TOTAL=TOTAL+1
"RTN","ORCSAVE",193,0)
 S ^OR(100,DA,8,NEXT,0)=WHEN_U_CODE_U_$G(PROV)_U_$S(SIG:2,1:3)_"^^^^^^^^"_NATR_U_WHO_U_TXT_"^11",^OR(100,DA,8,"C",CODE,NEXT)=""
"RTN","ORCSAVE",194,0)
 S ^OR(100,"AF",WHEN,DA,NEXT)=""
"RTN","ORCSAVE",195,0)
 I PAT,DGRP S ^OR(100,"ACT",PAT,9999999-WHEN,DGRP,DA,NEXT)=""
"RTN","ORCSAVE",196,0)
 I PAT S ^OR(100,"AC",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",197,0)
 I SIG S ^OR(100,"AS",PAT,9999999-WHEN,DA,NEXT)=""
"RTN","ORCSAVE",198,0)
 S:$L($G(REASON)) ^OR(100,DA,8,NEXT,1)=REASON
"RTN","ORCSAVE",199,0)
 S $P(HDR,U,3,4)=NEXT_U_TOTAL,^OR(100,DA,8,0)=HDR
"RTN","ORCSAVE",200,0)
 Q NEXT
"RTN","ORCSAVE",201,0)
 ;
"RTN","ORCSAVE",202,0)
SET(DLG) ; -- Create new parent for order set ORDIALOG
"RTN","ORCSAVE",203,0)
 ; Returns ORPIFN = ifn of new parent order for set
"RTN","ORCSAVE",204,0)
 ;
"RTN","ORCSAVE",205,0)
 Q:'$G(ORVP)  Q:'$G(DLG)  N OR0,PKG,NOW,CATG,STS,ORLOC,TRSPEC,X
"RTN","ORCSAVE",206,0)
 S OR0=$G(^ORD(101.41,DLG,0)) Q:OR0=""  S ORPIFN=$$NEXTIFN Q:'ORPIFN
"RTN","ORCSAVE",207,0)
 S PKG=$O(^DIC(9.4,"C","OR",0)),CATG=$S($$INPT^ORCD:"I",1:"O"),STS=$S($G(OREVENT):10,1:11),NOW=$S($G(ORSLOG):ORSLOG,1:+$E($$NOW^XLFDT,1,12))
"RTN","ORCSAVE",208,0)
 I $G(OREVENT) S ORLOC="",TRSPEC=""
"RTN","ORCSAVE",209,0)
 S ^OR(100,ORPIFN,0)=ORPIFN_U_ORVP_U_U_$G(ORNP)_U_DLG_";ORD(101.41,^"_DUZ_U_NOW_U_U_U_ORLOC_U_U_CATG_U_TRSPEC_U_PKG_"^^^"_$G(OREVENT),^(3)=NOW_"^90^"_STS_U_$S($G(ORIT):ORIT_"ORD(101.41,",1:"")_"^^^1^^^^0^^"_+$P(OR0,U,6)
"RTN","ORCSAVE",210,0)
 S ^OR(100,ORPIFN,8,0)="^100.008DA^1^1",^(1,0)=NOW_"^NW^"_$G(ORNP)_"^^^^^^^^^^"_DUZ_"^^"_STS,^OR(100,ORPIFN,8,"C","NW",1)="",^OR(100,"AF",NOW,ORPIFN,1)=""
"RTN","ORCSAVE",211,0)
 S ^OR(100,"ACT",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",212,0)
 S:STS=11 ^OR(100,"AC",ORVP,9999999-NOW,ORPIFN,1)=""
"RTN","ORCSAVE",213,0)
 ; AEVNT ??
"RTN","ORCSAVE",214,0)
 S ^OR(100,ORPIFN,1,0)="^100.011^1^1",^(1,0)=$P(OR0,U,2) ; Order text
"RTN","ORCSAVE",215,0)
 Q
"RTN","ORCSAVE1")
0^27^B34248374
"RTN","ORCSAVE1",1,0)
ORCSAVE1 ; SLC/MKB - Save Order Text ;02/24/09  13:52
"RTN","ORCSAVE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**92,132,141,163,187,223,243,280**;Dec 17, 1997;Build 85
"RTN","ORCSAVE1",3,0)
 ;
"RTN","ORCSAVE1",4,0)
 ; ^ORD(101.41,+ORDIALOG,10,ITM,2)=Seq#^Format^Omit^Lead Text^Trail Text
"RTN","ORCSAVE1",5,0)
 ; ^ORD(101.41,+ORDIALOG,10,"ATXT",Seq#,ITM)=""
"RTN","ORCSAVE1",6,0)
 ;
"RTN","ORCSAVE1",7,0)
ORDTEXT(ORDER) ; -- Build and save order text from ORDIALOG() into ORDER
"RTN","ORCSAVE1",8,0)
 N ORTX,I,IFN,ACT,ORSET
"RTN","ORCSAVE1",9,0)
 D ORTX(240) Q:'$G(ORTX)
"RTN","ORCSAVE1",10,0)
 S IFN=+ORDER,ACT=+$P(ORDER,";",2) S:ACT'>0 ACT=1
"RTN","ORCSAVE1",11,0)
 F I=1:1:ORTX S ^OR(100,IFN,8,ACT,.1,I,0)=ORTX(I)
"RTN","ORCSAVE1",12,0)
 S ^OR(100,IFN,8,ACT,.1,0)=U_U_ORTX_U_ORTX_U_DT_U
"RTN","ORCSAVE1",13,0)
 I $E($G(ORDEA))=2 D  ;PKI Drug Schedule - in future may allow 2-5
"RTN","ORCSAVE1",14,0)
 . S ORSET=0
"RTN","ORCSAVE1",15,0)
 . D DIGTEXT(IFN,ORDEA)
"RTN","ORCSAVE1",16,0)
 . F I=1:1:ORSET S ^OR(100,IFN,8,ACT,.2,I,0)=ORSET(I)
"RTN","ORCSAVE1",17,0)
 . I ORSET>0 S ^OR(100,IFN,8,ACT,.2,0)=U_U_ORSET_U_ORSET_U_DT_U
"RTN","ORCSAVE1",18,0)
 Q
"RTN","ORCSAVE1",19,0)
 ;
"RTN","ORCSAVE1",20,0)
ORTX(WIDTH) ; -- May enter here to return order text in ORTX()
"RTN","ORCSAVE1",21,0)
 N ORP,SEQ,ITEM,ORMAX,IVIEN,IVITEM,IVTYPE,RATE
"RTN","ORCSAVE1",22,0)
 K ORTX S ORMAX=$S(+$G(WIDTH):WIDTH,1:240)
"RTN","ORCSAVE1",23,0)
 D EXT ; get external form of values
"RTN","ORCSAVE1",24,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"ATXT",SEQ)) Q:SEQ'>0  D
"RTN","ORCSAVE1",25,0)
 . S ITEM=0 F  S ITEM=$O(^ORD(101.41,+ORDIALOG,10,"ATXT",SEQ,ITEM)) Q:ITEM'>0  D TEXT(ITEM)
"RTN","ORCSAVE1",26,0)
 Q
"RTN","ORCSAVE1",27,0)
 ;
"RTN","ORCSAVE1",28,0)
TEXT(DA) ; -- Includes text of item DA
"RTN","ORCSAVE1",29,0)
 Q:$P(^ORD(101.41,ORDIALOG,10,DA,0),U,11)  Q:'$O(ORP(DA,0))
"RTN","ORCSAVE1",30,0)
 N NEWLN,INST,TYPE,PTR,CHSEQ,CHILD,ORI,X,Y
"RTN","ORCSAVE1",31,0)
 S:'$G(ORTX) ORTX=1,ORTX(1)=""
"RTN","ORCSAVE1",32,0)
 S NEWLN=+$P(ORP(DA),U,4),INST=$O(ORP(DA,0)),Y=""
"RTN","ORCSAVE1",33,0)
 I NEWLN,$L(ORTX(ORTX)) S ORTX=ORTX+1,ORTX(ORTX)="",Y=" "
"RTN","ORCSAVE1",34,0)
 S X=$$GETXT($P(ORP(DA),U,2)) I $L(X) S X=Y_X,Y="" D TXT^ORCHTAB ;lead tx
"RTN","ORCSAVE1",35,0)
 S PTR=+ORP(DA),TYPE=$E(ORDIALOG(PTR,0))
"RTN","ORCSAVE1",36,0)
TXT1 I TYPE'="W" S X=Y_ORP(DA,INST),Y="" D TXT^ORCHTAB
"RTN","ORCSAVE1",37,0)
 I TYPE="W" S ORI=0 F  S ORI=$O(ORP(DA,INST,ORI)) Q:ORI'>0  D  S Y=""
"RTN","ORCSAVE1",38,0)
 . S Y=$S(Y=" ":" ",$P(ORP(DA),U,5):" ",1:"") ;new line, or as stored
"RTN","ORCSAVE1",39,0)
 . S X=Y_ORP(DA,INST,ORI,0),Y=""
"RTN","ORCSAVE1",40,0)
 . I $E(X)'=" " D TXT^ORCHTAB Q  ; wrap
"RTN","ORCSAVE1",41,0)
 . S:$L(ORTX(ORTX)) ORTX=ORTX+1,ORTX(ORTX)="" ; force new line
"RTN","ORCSAVE1",42,0)
 . I X?1." " S ORTX(ORTX)=" ",ORTX=ORTX+1,ORTX(ORTX)="" ; blank line
"RTN","ORCSAVE1",43,0)
 . E  D TXT^ORCHTAB
"RTN","ORCSAVE1",44,0)
 D:$D(^ORD(101.41,+ORDIALOG,10,"DAD",PTR)) CHILD(PTR)
"RTN","ORCSAVE1",45,0)
 S INST=$O(ORP(DA,INST)) ; multiple?
"RTN","ORCSAVE1",46,0)
 I INST S ORTX(ORTX)=ORTX(ORTX)_",",Y="" S:NEWLN ORTX=ORTX+1,ORTX(ORTX)="",Y=" " G TXT1
"RTN","ORCSAVE1",47,0)
 S X=$$GETXT($P(ORP(DA),U,3)) D:$L(X) TXT^ORCHTAB ; trailing text
"RTN","ORCSAVE1",48,0)
 Q
"RTN","ORCSAVE1",49,0)
 ;
"RTN","ORCSAVE1",50,0)
CHILD(PARENT) ; -- add child values
"RTN","ORCSAVE1",51,0)
 N CHSEQ,CHILD S CHSEQ=0
"RTN","ORCSAVE1",52,0)
 F  S CHSEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PARENT,CHSEQ)) Q:CHSEQ'>0  S CHILD=$O(^(CHSEQ,0)) D
"RTN","ORCSAVE1",53,0)
 . Q:'$L($G(ORP(CHILD,INST)))
"RTN","ORCSAVE1",54,0)
 . S X=$$GETXT($P(ORP(CHILD),U,2)) D:$L(X) TXT^ORCHTAB ; lead text
"RTN","ORCSAVE1",55,0)
 . S X=ORP(CHILD,INST) D TXT^ORCHTAB
"RTN","ORCSAVE1",56,0)
 . S X=$$GETXT($P(ORP(CHILD),U,3)) D:$L(X) TXT^ORCHTAB ; trail text
"RTN","ORCSAVE1",57,0)
 Q
"RTN","ORCSAVE1",58,0)
 ;
"RTN","ORCSAVE1",59,0)
GETXT(X) ; -- Returns text of X
"RTN","ORCSAVE1",60,0)
 I $E(X)="@" N VAR S VAR=$E(X,2,99),X=$G(@VAR) K @VAR ; variable w/text
"RTN","ORCSAVE1",61,0)
 Q X
"RTN","ORCSAVE1",62,0)
 ;
"RTN","ORCSAVE1",63,0)
EXT ; -- Build ORP(DA) array of external forms
"RTN","ORCSAVE1",64,0)
 N PROMPT,INST,DA,NODE,FORMAT,OMIT,X,Y,TYPE,PTR
"RTN","ORCSAVE1",65,0)
 S PROMPT=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:PROMPT'>0  D
"RTN","ORCSAVE1",66,0)
 . S DA=+$G(ORDIALOG(PROMPT)),TYPE=$E($G(ORDIALOG(PROMPT,0))) Q:'$L(TYPE)
"RTN","ORCSAVE1",67,0)
 . Q:'DA  S NODE=$G(^ORD(101.41,ORDIALOG,10,DA,2)),FORMAT=$P(NODE,U,2),OMIT=$P(NODE,U,3)
"RTN","ORCSAVE1",68,0)
 . S:$D(ORDIALOG(PROMPT,"FORMAT")) FORMAT=ORDIALOG(PROMPT,"FORMAT")
"RTN","ORCSAVE1",69,0)
 . I $E(FORMAT)="@" S PTR=+$E(FORMAT,2,99) Q:'PTR  ; Don't include
"RTN","ORCSAVE1",70,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  D
"RTN","ORCSAVE1",71,0)
 . . Q:ORDIALOG(PROMPT,INST)=""
"RTN","ORCSAVE1",72,0)
 . . I $E(FORMAT)="@",$L($G(ORDIALOG(PTR,INST))) Q  ; use PTR instead
"RTN","ORCSAVE1",73,0)
 . . I $E(FORMAT)="*" S PTR=+$E(FORMAT,2,99) I '$L($G(ORDIALOG(PTR,INST))) Q  ; must have PTR too
"RTN","ORCSAVE1",74,0)
 . . I $E(FORMAT)="=" S PTR=+$E(FORMAT,2,99) I PTR,$L($G(ORDIALOG(PTR,INST))) S Y=$$EXT^ORCD(PTR,INST),X=$$EXT^ORCD(PROMPT,INST) I (X=Y)!(X[Y)!(Y[X) Q
"RTN","ORCSAVE1",75,0)
 . . I TYPE="W" M ORP(DA,INST)=@ORDIALOG(PROMPT,INST)
"RTN","ORCSAVE1",76,0)
 . . E  S X=$$EXT^ORCD(PROMPT,INST,FORMAT) Q:X=""  Q:OMIT[X  S ORP(DA,INST)=X
"RTN","ORCSAVE1",77,0)
 . . S ORP(DA)=PROMPT_U_$P(NODE,U,4,7) ; ptr^lead^trail^new line^wrap
"RTN","ORCSAVE1",78,0)
 Q
"RTN","ORCSAVE1",79,0)
DIGTEXT(ORDER,ORDEA,ORSIGNER)  ;Build text used to create Digital Signature
"RTN","ORCSAVE1",80,0)
 ;ORDER = ifn of order # (file 100)
"RTN","ORCSAVE1",81,0)
 ;ORDEA = Controlled substance schedule of drug (2-5)
"RTN","ORCSAVE1",82,0)
 ;ORSIGNER = DUZ of sigining physician
"RTN","ORCSAVE1",83,0)
 ;ORSET(1)=1)Date of Prescription (RX) -Date Ordered HL7 format 2)Full Patient Name 3)Patient SSN 4)DFN
"RTN","ORCSAVE1",84,0)
 ;ORSET(2)=5)Patient Street1 6)Patient Street2 7)Patient Street3 8)Patient City 9)Patient State 10)Patient Zip 11)???
"RTN","ORCSAVE1",85,0)
 ;ORSET(3)=12)Drug name (From Dispense Drug or Orderable Item) 13)Variable ptr for Drug (file 50 or 101.43) 14)Drug quantity prescribed 15)Schedule of medication 16)DEA Schedule
"RTN","ORCSAVE1",86,0)
 ;ORSET(4)=17)Direction for use
"RTN","ORCSAVE1",87,0)
 ;ORSET(5)=18)Practitioner's name 19)DUZ 20)Practitioner's (DEA) registration number
"RTN","ORCSAVE1",88,0)
 ;ORSET(6)=22)SiteName 23)SiteStreet1 24)SiteStreet2 25)SiteCity 26)SiteState 27)SiteZip
"RTN","ORCSAVE1",89,0)
 ;ORSET(7)=28)$H
"RTN","ORCSAVE1",90,0)
 N I,DFN,OR80,ORPNM,ORSSN,ORXDT,VAERR,VAPA,X0,X1,X4,X5,X6,X8,X9,X10,X11,X12,X13,X14,SIG
"RTN","ORCSAVE1",91,0)
 S OR80=$G(^OR(100,ORDER,8,1,0))
"RTN","ORCSAVE1",92,0)
 Q:'$L(OR80)
"RTN","ORCSAVE1",93,0)
 S:'$G(ORSIGNER) ORSIGNER=$P(OR80,"^",3)
"RTN","ORCSAVE1",94,0)
 Q:'ORSIGNER
"RTN","ORCSAVE1",95,0)
 S $P(^OR(100,ORDER,8,1,2),"^",4,5)=ORDEA_"^"_1 ;Flag to signing process to get digital signature
"RTN","ORCSAVE1",96,0)
 S ORXDT=$P(OR80,"^"),X1=$$FMTHL7^XLFDT(ORXDT),X4="",X14="",X10=""
"RTN","ORCSAVE1",97,0)
 I '$D(ORVP) S ORVP=$P(^OR(100,ORDER,0),"^",2)
"RTN","ORCSAVE1",98,0)
 S DFN=+ORVP
"RTN","ORCSAVE1",99,0)
 D ADD^VADPT
"RTN","ORCSAVE1",100,0)
 S ORPNM=^DPT(+ORVP,0),ORSSN=$P(ORPNM,"^",9),ORPNM=$P(ORPNM,"^")
"RTN","ORCSAVE1",101,0)
 F I=1:1:6 S X4=X4_$S($L($G(VAPA(I))):$S((I=5):$P(VAPA(I),"^",2),1:VAPA(I)),1:"")_"^"
"RTN","ORCSAVE1",102,0)
 S X11=$$GET1^DIQ(200,ORSIGNER,.01,"E") Q:'$L(X11)
"RTN","ORCSAVE1",103,0)
 S X12=$$DEA^XUSER(,ORSIGNER)
"RTN","ORCSAVE1",104,0)
 S X0=$$GET1^DIQ(4,+$G(DUZ(2)),.01,"E")
"RTN","ORCSAVE1",105,0)
 I $L(X0) S X14=X0_"^"_$$GET1^DIQ(4,DUZ(2),1.01,"E")_"^"_$$GET1^DIQ(4,DUZ(2),1.02,"E")_"^"_$$GET1^DIQ(4,DUZ(2),1.03,"E")_"^"_$$GET1^DIQ(4,DUZ(2),.02,"E")_"^"_$$GET1^DIQ(4,DUZ(2),1.04,"E")
"RTN","ORCSAVE1",106,0)
 S X5=$$VALUE^ORX8(ORDER,"DRUG",,"E"),X6=$$VALUE^ORX8(ORDER,"DRUG")_";50"
"RTN","ORCSAVE1",107,0)
 I '$L(X5) S X5=$$VALUE^ORX8(ORDER,"ORDERABLE",,"E"),X6=$$VALUE^ORX8(ORDER,"ORDERABLE")_";101.43"
"RTN","ORCSAVE1",108,0)
 S X8=$$VALUE^ORX8(ORDER,"QTY",,"E"),X9=$$VALUE^ORX8(ORDER,"SCHEDULE",,"E")
"RTN","ORCSAVE1",109,0)
 S SIG=+$O(^OR(100,ORDER,4.5,"ID","SIG",0)) I SIG,$L($G(^OR(100,ORDER,4.5,SIG,2,1,0))) S X10=^(0)
"RTN","ORCSAVE1",110,0)
 S ORSET(1)=X1_"^"_ORPNM_"^"_ORSSN_"^"_+ORVP_"^"
"RTN","ORCSAVE1",111,0)
 S ORSET(2)=X4_"^"
"RTN","ORCSAVE1",112,0)
 S ORSET(3)=X5_"^"_X6_"^"_X8_"^"_X9_"^"_ORDEA_"^"
"RTN","ORCSAVE1",113,0)
 S ORSET(4)=X10_"^"
"RTN","ORCSAVE1",114,0)
 S ORSET(5)=X11_"^"_ORSIGNER_"^"_X12_"^"
"RTN","ORCSAVE1",115,0)
 S ORSET(6)=X14
"RTN","ORCSAVE1",116,0)
 S ORSET(7)=$H
"RTN","ORCSAVE1",117,0)
 S ORSET=7
"RTN","ORCSAVE1",118,0)
 Q
"RTN","ORCSAVE1",119,0)
DELALRT(ORDER) ; deletes "Order requires electronic signature" alert for all intended recipients after all orders have lapsed
"RTN","ORCSAVE1",120,0)
 ; Fixes CQ #17536: When orders are lapsed, the unsigned order notification does NOT go away (TC). [v28.1]
"RTN","ORCSAVE1",121,0)
 N ORPROV,ORATIFN S ORATIFN=0
"RTN","ORCSAVE1",122,0)
 S ORPROV=$P(^OR(100,+ORDER,8,1,0),U,3) Q:'ORPROV
"RTN","ORCSAVE1",123,0)
 F  S ORATIFN=$O(^XTV(8992.1,"R",ORPROV,ORATIFN)) Q:ORATIFN'>0  D
"RTN","ORCSAVE1",124,0)
 .N ORDNUM S ORDNUM=$$GET1^DIQ(8992.1,ORATIFN,2,"I") ;DBIA #2818
"RTN","ORCSAVE1",125,0)
 .I $D(ORDNUM)&($P(ORDNUM,"@")=+ORDER) D
"RTN","ORCSAVE1",126,0)
 ..N ORXQAID,XQAID,XQAKILL S ORXQAID=$$GET1^DIQ(8992.1,ORATIFN,.01,"I"),XQAID=ORXQAID,XQAKILL=0
"RTN","ORCSAVE1",127,0)
 ..D DELETE^XQALERT K ORXQAID,XQAID,XQAKILL
"RTN","ORCSAVE1",128,0)
 K ORPROV,ORATIFN,ORDNUM
"RTN","ORCSAVE1",129,0)
 Q
"RTN","ORCSAVE1",130,0)
 ;
"RTN","ORCSAVE2")
0^28^B84878914
"RTN","ORCSAVE2",1,0)
ORCSAVE2 ;SLC/MKB-Utilities to update an order ;10/27/10  07:42
"RTN","ORCSAVE2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,27,56,70,94,116,190,157,215,265,243,293,280**;Dec 17, 1997;Build 85
"RTN","ORCSAVE2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCSAVE2",4,0)
 ;
"RTN","ORCSAVE2",5,0)
STATUS(IFN,ST) ; -- Update status of order
"RTN","ORCSAVE2",6,0)
 Q:'$G(IFN)  Q:'$D(^OR(100,+IFN,0))  Q:$P($G(^(3)),U,3)=$G(ST)  ;no change
"RTN","ORCSAVE2",7,0)
 Q:'$G(ST)  Q:'$D(^ORD(100.01,+ST,0))
"RTN","ORCSAVE2",8,0)
 N NODE0,NODE3,ORNOW,DA,XACT,PROV,ORVP
"RTN","ORCSAVE2",9,0)
 S NODE3=$G(^OR(100,+IFN,3)),ORVP=$P($G(^(0)),U,2),ORNOW=$$NOW^XLFDT
"RTN","ORCSAVE2",10,0)
 S $P(NODE3,U)=ORNOW,$P(NODE3,U,3)=ST,^OR(100,+IFN,3)=NODE3
"RTN","ORCSAVE2",11,0)
 I (ST<3)!(ST=12)!(ST=13),$G(ORDCNTRL)'="ZC" D DATES(+IFN,,+$E(ORNOW,1,12))
"RTN","ORCSAVE2",12,0)
 I "^1^2^7^12^13^15^"[(U_ST_U) D CANCEL^ORCSEND(+IFN),UNOTIF^ORCSIGN
"RTN","ORCSAVE2",13,0)
 I $P(NODE3,U,9) D CKPARENT($P(NODE3,U,9)) ; ck siblings to update parent
"RTN","ORCSAVE2",14,0)
 D SETALL^ORDD100(+IFN)
"RTN","ORCSAVE2",15,0)
 Q
"RTN","ORCSAVE2",16,0)
 ;
"RTN","ORCSAVE2",17,0)
CKPARENT(ORIFN) ; -- Update status of parent order, if appropriate
"RTN","ORCSAVE2",18,0)
 N ORSTS,ALLRELSD,ALLDONE,DC,COMP,CH,CHSTS,ACTIVE,LAPS
"RTN","ORCSAVE2",19,0)
 Q:'$D(^OR(100,ORIFN,0))  S ORSTS=$P($G(^(3)),U,3)
"RTN","ORCSAVE2",20,0)
 I (ORSTS=11)!(ORSTS=10) S ALLRELSD=1 D  Q  ;Parent unrel'd - ck children
"RTN","ORCSAVE2",21,0)
 . F CH=0:0 S CH=$O(^OR(100,ORIFN,2,CH)) Q:CH'>0  D  Q:'ALLRELSD
"RTN","ORCSAVE2",22,0)
 . . I '$D(^OR(100,CH)) K ^OR(100,ORIFN,2,CH) Q
"RTN","ORCSAVE2",23,0)
 . . S CHSTS=$P($G(^OR(100,CH,3)),U,3) S:CHSTS=11 ALLRELSD=0
"RTN","ORCSAVE2",24,0)
 . I ALLRELSD D STATUS(ORIFN,5) ; update Parent order to pending
"RTN","ORCSAVE2",25,0)
 S ALLDONE=1,(DC,COMP,LAPS,ACTIVE)=0
"RTN","ORCSAVE2",26,0)
 F CH=0:0 S CH=$O(^OR(100,ORIFN,2,CH)) Q:CH'>0  D  Q:'ALLDONE
"RTN","ORCSAVE2",27,0)
 . I '$D(^OR(100,CH)) K ^OR(100,ORIFN,2,CH) Q
"RTN","ORCSAVE2",28,0)
 . S CHSTS=$P($G(^OR(100,CH,3)),U,3) I CHSTS=14 S LAPS=1 Q
"RTN","ORCSAVE2",29,0)
 . I "^1^12^13^"[(U_CHSTS_U) S DC=1 Q
"RTN","ORCSAVE2",30,0)
 . I "^2^7^"[(U_CHSTS_U) S COMP=1 Q
"RTN","ORCSAVE2",31,0)
 . S ALLDONE=0 S:CHSTS=6 ACTIVE=1
"RTN","ORCSAVE2",32,0)
 I ALLDONE S ORSTS=$S(COMP:2,DC:1,LAPS:14,1:"") D:ORSTS STATUS(ORIFN,ORSTS) Q
"RTN","ORCSAVE2",33,0)
 I ACTIVE,ORSTS'=6 D STATUS(ORIFN,6) ;at least child active
"RTN","ORCSAVE2",34,0)
 Q
"RTN","ORCSAVE2",35,0)
 ;
"RTN","ORCSAVE2",36,0)
RELEASE(ORDER,ACTION,WHEN,WHO,NATURE) ; -- Mark order as released to service
"RTN","ORCSAVE2",37,0)
 S:'$G(ACTION) ACTION=1 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) S:'$G(WHO) WHO=DUZ
"RTN","ORCSAVE2",38,0)
 Q:'$G(ORDER)  N OR0 S OR0=$G(^OR(100,ORDER,8,ACTION,0))
"RTN","ORCSAVE2",39,0)
 S:$L($G(NATURE)) $P(OR0,U,12)=$S(NATURE:NATURE,1:+$O(^ORD(100.02,"C",NATURE,0)))
"RTN","ORCSAVE2",40,0)
 S:($P(OR0,U,15)=10)!($P(OR0,U,15)=11) $P(OR0,U,15)=""
"RTN","ORCSAVE2",41,0)
 ;S $P(OR0,U,16,17)=WHEN_U_WHO,^OR(100,"AR",ORVP,9999999-WHEN,ORDER,ACTION)=""
"RTN","ORCSAVE2",42,0)
 S $P(OR0,U,16,17)=WHEN_U_WHO
"RTN","ORCSAVE2",43,0)
 S ^OR(100,ORDER,8,ACTION,0)=OR0
"RTN","ORCSAVE2",44,0)
 I $P(OR0,U,2)="NW",'$P(^OR(100,ORDER,0),U,8) D STARTDT(ORDER)
"RTN","ORCSAVE2",45,0)
 ;Set the "AR" index.
"RTN","ORCSAVE2",46,0)
 D RS^ORDD100(ORDER,ACTION,ORVP,WHEN)
"RTN","ORCSAVE2",47,0)
 Q
"RTN","ORCSAVE2",48,0)
 ;
"RTN","ORCSAVE2",49,0)
STARTDT(DA) ; -- resolve Start and Stop dates from Responses
"RTN","ORCSAVE2",50,0)
 N X,Y,%DT,ORDG,ORT,ORLAB
"RTN","ORCSAVE2",51,0)
 S ORDG=$P($G(^ORD(100.98,+$P(^OR(100,DA,0),U,11),0)),U,3)
"RTN","ORCSAVE2",52,0)
 S ORLAB="^LAB^CH^HEMA^MI^AP^AU^EM^SP^CY^BB^"[(U_ORDG_U),ORT=""
"RTN","ORCSAVE2",53,0)
 S:ORDG="E/L T" ORT=$$VALUE(DA,"TIME") S:ORDG="MEAL" ORT=$$MEALTIME^ORCDFHO(DA)
"RTN","ORCSAVE2",54,0)
STRT S X=$$VALUE(DA,"START") I '$L(X) D WS^ORDD100 Q  S:$L(ORT) X=X_"@"_ORT
"RTN","ORCSAVE2",55,0)
 D AM:X="AM",NEXT:X="NEXT",ADMIN("NEXT"):X="NEXTA",ADMIN("CLOSEST"):X="CLOSEST"
"RTN","ORCSAVE2",56,0)
 S %DT="T" D ^%DT Q:Y'>0  S:$E($P(Y,".",2),1,2)=24 Y=$P(Y,".")_".2359"
"RTN","ORCSAVE2",57,0)
 S $P(^OR(100,DA,0),U,8)=Y D SS^ORDD100,WS^ORDD100,OI1^ORDD100A(DA)
"RTN","ORCSAVE2",58,0)
STOP I ORLAB S X=$$VALUE(DA,"DAYS") Q:X'>1  S X=$$FMADD^XLFDT(Y,(X-1))
"RTN","ORCSAVE2",59,0)
 I 'ORLAB S X=$$VALUE(DA,"STOP") Q:'$L(X)  S:$L(ORT) X=X_"@"_ORT
"RTN","ORCSAVE2",60,0)
 S %DT="T" D ^%DT Q:Y'>0  S:$E($P(Y,".",2),1,2)=24 Y=$P(Y,".")_".2359"
"RTN","ORCSAVE2",61,0)
 S $P(^OR(100,DA,0),U,9)=Y D ES^ORDD100A
"RTN","ORCSAVE2",62,0)
 Q
"RTN","ORCSAVE2",63,0)
 ;
"RTN","ORCSAVE2",64,0)
NEXT ; -- Resolve next lab collection to FM date/time
"RTN","ORCSAVE2",65,0)
 N ORTIME,ORDAY,NOW,NEXT,ENT
"RTN","ORCSAVE2",66,0)
 ;is referenced by DBIA #964
"RTN","ORCSAVE2",67,0)
 S ENT=$S($P($G(^SC(+$G(ORL),0)),U,4):+$P(^(0),U,4),1:+$G(DUZ(2)))_";DIC(4," S:ENT'>0 ENT="ALL"
"RTN","ORCSAVE2",68,0)
 D GETLST^XPAR(.ORTIME,ENT,"LR PHLEBOTOMY COLLECTION","N")
"RTN","ORCSAVE2",69,0)
 S NOW=$P($H,",",2),ORDAY=$S($O(ORTIME(NOW)):"T",1:"T+1")
"RTN","ORCSAVE2",70,0)
 S ORDAY=$$NEXTCOLL^ORCDLR1(ORDAY) S:ORDAY["+" NOW=0
"RTN","ORCSAVE2",71,0)
 S NEXT=$O(ORTIME(NOW)),X=ORDAY_"@"_$P($G(ORTIME(+NEXT)),U)
"RTN","ORCSAVE2",72,0)
 Q
"RTN","ORCSAVE2",73,0)
 ;
"RTN","ORCSAVE2",74,0)
AM ; -- Resolve AM lab collection to FM date/time
"RTN","ORCSAVE2",75,0)
 N ORTIME,ORDAY,AM,NOW,ENT
"RTN","ORCSAVE2",76,0)
 ;is referenced by DBIA #964
"RTN","ORCSAVE2",77,0)
 S ENT=$S($P($G(^SC(+$G(ORL),0)),U,4):+$P(^(0),U,4),1:+$G(DUZ(2)))_";DIC(4," S:ENT'>0 ENT="ALL"
"RTN","ORCSAVE2",78,0)
 D GETLST^XPAR(.ORTIME,ENT,"LR PHLEBOTOMY COLLECTION","N")
"RTN","ORCSAVE2",79,0)
 S AM=$O(ORTIME(0)),NOW=$P($H,",",2)
"RTN","ORCSAVE2",80,0)
 S ORDAY=$S(AM=$O(ORTIME(NOW)):"T",1:"T+1")
"RTN","ORCSAVE2",81,0)
 S X=$$NEXTCOLL^ORCDLR1(ORDAY)_"@"_$P($G(ORTIME(+AM)),U)
"RTN","ORCSAVE2",82,0)
 Q
"RTN","ORCSAVE2",83,0)
 ;
"RTN","ORCSAVE2",84,0)
ADMIN(START) ; -- Resolve next/closest administration times to FM date/time
"RTN","ORCSAVE2",85,0)
 N PAT,SCH,OI,LOC,Y,I
"RTN","ORCSAVE2",86,0)
 I $G(DA) D  ;get data from order DA
"RTN","ORCSAVE2",87,0)
 . S PAT=+$P($G(^OR(100,DA,0)),U,2),LOC=""
"RTN","ORCSAVE2",88,0)
 . S I=+$O(^OR(100,DA,4.5,"ID","INSTR",0)),I=+$P($G(^OR(100,DA,4.5,I,0)),U,3) ;first
"RTN","ORCSAVE2",89,0)
 . S SCH=$$VALUE(DA,"SCHEDULE",I),OI=$$VALUE(DA,"ORDERABLE")
"RTN","ORCSAVE2",90,0)
 I '$G(DA) D  ;or look in ORDIALOG() instead
"RTN","ORCSAVE2",91,0)
 . S I=+$O(ORDIALOG($$PTR^ORCD("OR GTX INSTRUCTIONS"),0))
"RTN","ORCSAVE2",92,0)
 . S PAT=$G(ORVP),SCH=$G(ORDIALOG($$PTR^ORCD("OR GTX SCHEDULE"),I))
"RTN","ORCSAVE2",93,0)
 . S OI=$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1)),LOC=""
"RTN","ORCSAVE2",94,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2) ;PSOI
"RTN","ORCSAVE2",95,0)
 ;is referenced by DBIA #3167
"RTN","ORCSAVE2",96,0)
 S Y=$$RESOLVE^PSJORPOE(PAT,SCH,OI,START,LOC),X=$P(Y,U,2)
"RTN","ORCSAVE2",97,0)
 Q
"RTN","ORCSAVE2",98,0)
 ;
"RTN","ORCSAVE2",99,0)
SIGN(DA,WHO,WHEN,HOW,WHAT) ; -- affix ES to order
"RTN","ORCSAVE2",100,0)
 Q:'$G(DA)  S:'$G(WHAT) WHAT=1
"RTN","ORCSAVE2",101,0)
 N X S X=$G(^OR(100,DA,8,WHAT,0)) D S2^ORDD100(DA,WHAT) ; kill AS xref
"RTN","ORCSAVE2",102,0)
 S $P(X,U,4,7)=$G(HOW)_U_$G(WHO)_U_$E($G(WHEN),1,12)_U_$S(HOW=0:DUZ,1:"")
"RTN","ORCSAVE2",103,0)
 ; S:$G(WHO) $P(X,U,3)=WHO ; reset provider to signer
"RTN","ORCSAVE2",104,0)
 S ^OR(100,DA,8,WHAT,0)=X
"RTN","ORCSAVE2",105,0)
 D:$G(HOW)=2 S1^ORDD100(DA,WHAT) ; reset AS xref
"RTN","ORCSAVE2",106,0)
 Q
"RTN","ORCSAVE2",107,0)
 ;
"RTN","ORCSAVE2",108,0)
SIGSTS(IFN,ACT) ; -- Set SigSts for backdoor orders [Called from ^ORM* rtns]
"RTN","ORCSAVE2",109,0)
 ; Expects ORNATR, ORVP, ORNP to be defined
"RTN","ORCSAVE2",110,0)
 Q:'$G(IFN)  Q:'$G(ACT)  N X,OR0 S OR0=+$P($G(^OR(100,+IFN,8,ACT,0)),U)
"RTN","ORCSAVE2",111,0)
 S X=$S($$SIGNREQD^ORCACT1(+IFN):$$SIGSTS^ORX1(ORNATR),1:3)
"RTN","ORCSAVE2",112,0)
 K ^OR(100,"AS",ORVP,9999999-OR0,+IFN,ACT)
"RTN","ORCSAVE2",113,0)
 S $P(^OR(100,+IFN,8,ACT,0),U,4)=X
"RTN","ORCSAVE2",114,0)
 I X=2 S ^OR(100,"AS",ORVP,9999999-OR0,+IFN,ACT)="" D NOTIF^ORCSIGN
"RTN","ORCSAVE2",115,0)
 Q
"RTN","ORCSAVE2",116,0)
 ;
"RTN","ORCSAVE2",117,0)
UNVEIL(IFN) ; -- unveil new order
"RTN","ORCSAVE2",118,0)
 S $P(^OR(100,IFN,3),U,8)=""
"RTN","ORCSAVE2",119,0)
 Q
"RTN","ORCSAVE2",120,0)
 ;
"RTN","ORCSAVE2",121,0)
DELETE(ORDER) ; -- delete order [action]
"RTN","ORCSAVE2",122,0)
 N DIK,DA,DAD
"RTN","ORCSAVE2",123,0)
 I $P(ORDER,";",2)>1 S DA=+$P(ORDER,";",2),DA(1)=+ORDER,DIK="^OR(100,"_DA(1)_",8," D:DA ^DIK Q
"RTN","ORCSAVE2",124,0)
 S DAD=+$P($G(^OR(100,+ORDER,3)),U,9) I DAD S DIK="^OR(100,"_DAD_",2,",DA(1)=DAD,DA=+ORDER D ^DIK ; remove link to child from parent
"RTN","ORCSAVE2",125,0)
 K DA S DA=+ORDER,DIK="^OR(100," D ^DIK ;remove order, text
"RTN","ORCSAVE2",126,0)
 D DELETE^OROCAPI1(+ORDER)
"RTN","ORCSAVE2",127,0)
 Q
"RTN","ORCSAVE2",128,0)
 ;
"RTN","ORCSAVE2",129,0)
VERIFY(IFN,DA,TYPE,WHO,WHEN) ; -- order verified
"RTN","ORCSAVE2",130,0)
 Q:'$G(IFN)  Q:'$G(DA)  Q:"^N^C^R^"'[(U_$G(TYPE)_U)
"RTN","ORCSAVE2",131,0)
 N FLD S FLD=$S(TYPE="N":8,TYPE="C":10,1:18)
"RTN","ORCSAVE2",132,0)
 S:'$G(WHO) WHO=DUZ S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSAVE2",133,0)
 S $P(^OR(100,IFN,8,DA,0),U,FLD,FLD+1)=WHO_U_WHEN
"RTN","ORCSAVE2",134,0)
 D:$L($T(VER^EDPFMON)) VER^EDPFMON(IFN)
"RTN","ORCSAVE2",135,0)
 Q
"RTN","ORCSAVE2",136,0)
 ;
"RTN","ORCSAVE2",137,0)
COMP(IFN,WHO,WHEN) ; -- order completed
"RTN","ORCSAVE2",138,0)
 Q:'$G(IFN)  S:'$G(WHO) WHO=DUZ S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSAVE2",139,0)
 D DATES(+IFN,,WHEN),STATUS(+IFN,2)
"RTN","ORCSAVE2",140,0)
 S $P(^OR(100,+IFN,6),U,6,7)=WHEN_U_WHO
"RTN","ORCSAVE2",141,0)
 D:$L($T(COMP^EDPFMON)) COMP^EDPFMON(IFN)
"RTN","ORCSAVE2",142,0)
 Q
"RTN","ORCSAVE2",143,0)
 ;
"RTN","ORCSAVE2",144,0)
DATES(DA,START,STOP) ; -- Update start/stop dates for order DA
"RTN","ORCSAVE2",145,0)
 Q:'$G(DA)  I $G(START) D
"RTN","ORCSAVE2",146,0)
 . Q:START=$P(^OR(100,DA,0),U,8)
"RTN","ORCSAVE2",147,0)
 . D SK^ORDD100,WK^ORDD100,OI2^ORDD100A(DA)
"RTN","ORCSAVE2",148,0)
 . S $P(^OR(100,DA,0),U,8)=START
"RTN","ORCSAVE2",149,0)
 . D SS^ORDD100,WS^ORDD100,OI1^ORDD100A(DA)
"RTN","ORCSAVE2",150,0)
 I $G(STOP) D
"RTN","ORCSAVE2",151,0)
 . ;Q:STOP=$P(^OR(100,DA,0),U,9)  ;ck xref anyway
"RTN","ORCSAVE2",152,0)
 . D EK^ORDD100A S $P(^OR(100,DA,0),U,9)=STOP D ES^ORDD100A
"RTN","ORCSAVE2",153,0)
 Q
"RTN","ORCSAVE2",154,0)
 ;
"RTN","ORCSAVE2",155,0)
OC ; -- Save order checks in ORCHECK() in ^OR(100,+ORIFN,9) ON SIGNATURE IN CPRS
"RTN","ORCSAVE2",156,0)
 Q:'$G(ORIFN)  Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORCSAVE2",157,0)
 D DELOCC^OROCAPI1(+ORIFN,"SIGNATURE_CPRS")
"RTN","ORCSAVE2",158,0)
 N I,J,ORK,CNT,OC,OROCRET
"RTN","ORCSAVE2",159,0)
 S CNT=0
"RTN","ORCSAVE2",160,0)
 S I=0 F  S I=$O(ORCHECK(+ORIFN,I)) Q:'I  D
"RTN","ORCSAVE2",161,0)
 . S J=0 F  S J=$O(ORCHECK(+ORIFN,I,J)) Q:'J  D
"RTN","ORCSAVE2",162,0)
 . . S OC=ORCHECK(+ORIFN,I,J)
"RTN","ORCSAVE2",163,0)
 . . S CNT=CNT+1
"RTN","ORCSAVE2",164,0)
 . . S ORK(CNT,1)=+ORIFN_U_"SIGNATURE_CPRS"_U_DUZ_U_$$NOW^XLFDT_U_+OC_U_I
"RTN","ORCSAVE2",165,0)
 . . S ORK(CNT,2)=$P(OC,U,3)
"RTN","ORCSAVE2",166,0)
 . . S ORK(CNT,3)=$S(I=1:$G(ORCHECK("OK")),1:"")
"RTN","ORCSAVE2",167,0)
 . . I $E(ORK(CNT,2),0,2)="||" D
"RTN","ORCSAVE2",168,0)
 . . . N ORGLOB,ORRULE,ORI
"RTN","ORCSAVE2",169,0)
 . . . S ORGLOB=$P($P(ORK(CNT,2),"||",2),"&"),ORRULE=$P($P(ORK(CNT,2),"||",2),"&",2)
"RTN","ORCSAVE2",170,0)
 . . . S ORK(CNT,2)=ORRULE
"RTN","ORCSAVE2",171,0)
 . . . N ORICNT S ORICNT=0
"RTN","ORCSAVE2",172,0)
 . . . S ORI=1 F  S ORI=$O(^TMP($J,"ORK XTRA TXT",ORGLOB,ORRULE,ORI)) Q:'ORI  S ORICNT=ORICNT+1,ORK(CNT,2,ORICNT)=^TMP($J,"ORK XTRA TXT",ORGLOB,ORRULE,ORI)
"RTN","ORCSAVE2",173,0)
 I $D(ORK) D SAVEOC^OROCAPI1(.ORK,.OROCRET)
"RTN","ORCSAVE2",174,0)
 S ORKI=0 F  S ORKI=$O(ORK(ORKI)) Q:'ORKI  D
"RTN","ORCSAVE2",175,0)
 . N OCINST,OCTXT S OCTXT=$G(ORK(ORKI,2))
"RTN","ORCSAVE2",176,0)
 . S OCINST=$O(OROCRET(ORKI,0))
"RTN","ORCSAVE2",177,0)
 . N ORMONOI,ORMONOQ S ORMONOI=0,ORMONOQ=0 F  Q:ORMONOQ=1  S ORMONOI=$O(^TMP($J,"ORMONOGRAPH",ORMONOI)) Q:'ORMONOI  D
"RTN","ORCSAVE2",178,0)
 . . I OCTXT[$G(^TMP($J,"ORMONOGRAPH",ORMONOI,"OC")) D
"RTN","ORCSAVE2",179,0)
 . . . S ORMONOQ=1
"RTN","ORCSAVE2",180,0)
 . . . S ^ORD(100.05,OCINST,17)=^TMP($J,"ORMONOGRAPH",ORMONOI,"INT")
"RTN","ORCSAVE2",181,0)
 . . . M ^ORD(100.05,OCINST,16)=^TMP($J,"ORMONOGRAPH",ORMONOI,"DATA")
"RTN","ORCSAVE2",182,0)
 . . . S ^ORD(100.05,OCINST,16,0)="^^"_$O(^ORD(100.05,OCINST,16,""),-1)_U_$O(^ORD(100.05,OCINST,16,""),-1)_U_+$$NOW^XLFDT_U
"RTN","ORCSAVE2",183,0)
 K ^TMP($J,"ORMONOGRAPH"),^TMP($J,"ORK XTRA TXT")
"RTN","ORCSAVE2",184,0)
 Q
"RTN","ORCSAVE2",185,0)
 ;
"RTN","ORCSAVE2",186,0)
VALUE(IFN,ID,INST) ; -- Returns value of prompt by identifier ID
"RTN","ORCSAVE2",187,0)
 I '$G(IFN)!('$D(^OR(100,+$G(IFN),0)))!($G(ID)="") Q ""
"RTN","ORCSAVE2",188,0)
 N I,Y S I=0,Y="" S:'$G(INST) INST=1
"RTN","ORCSAVE2",189,0)
 F  S I=$O(^OR(100,IFN,4.5,"ID",ID,I)) Q:I'>0  I $P($G(^OR(100,IFN,4.5,+I,0)),U,3)=INST S Y=$G(^(1)) Q
"RTN","ORCSAVE2",190,0)
 Q Y
"RTN","ORCSAVE2",191,0)
 ;
"RTN","ORCSAVE2",192,0)
SC(ORX,ORIFN) ; -- save responses to SC questions
"RTN","ORCSAVE2",193,0)
 Q:'$G(ORIFN)  Q:'$D(^OR(100,+ORIFN,0))  ;invalid order number
"RTN","ORCSAVE2",194,0)
 N OR5,I,P S OR5=$G(^OR(100,+ORIFN,5)),P=0
"RTN","ORCSAVE2",195,0)
 F I="SC","MST","AO","IR","EC","HNC","CV","SHD" S P=P+1 S:$D(ORX(I)) $P(OR5,U,P)=ORX(I)
"RTN","ORCSAVE2",196,0)
 S ^OR(100,+ORIFN,5)=OR5
"RTN","ORCSAVE2",197,0)
 Q
"RTN","ORCSAVE2",198,0)
 ;
"RTN","ORCSAVE2",199,0)
CANCEL(ORDER) ; -- cancel order [action]
"RTN","ORCSAVE2",200,0)
 N ORA,DIE,DA,DR,ORX
"RTN","ORCSAVE2",201,0)
 S ORDER=$G(ORDER),ORA=+$P(ORDER,";",2) Q:'ORA!('ORDER)
"RTN","ORCSAVE2",202,0)
 I $D(^OR(100,+ORDER,8,ORA)) D
"RTN","ORCSAVE2",203,0)
 .S ORX="Unsigned/unreleased order cancelled by provider"
"RTN","ORCSAVE2",204,0)
 .S DIE="^OR(100,"_+ORDER_",8,",DA=ORA,DA(1)=+ORDER
"RTN","ORCSAVE2",205,0)
 .S DR="4////5;15////13;1////^S X=ORX" D ^DIE
"RTN","ORCSAVE2",206,0)
 I ORA=1 D
"RTN","ORCSAVE2",207,0)
 .K DA S DIE="^OR(100,",DA=+ORDER,DR="5////13" D ^DIE
"RTN","ORCSAVE2",208,0)
 Q
"RTN","ORCSAVE2",209,0)
 ;
"RTN","ORCSAVE2",210,0)
LAPSE(ORDER) ; -- lapse order [action]
"RTN","ORCSAVE2",211,0)
 N ORA S ORA=+$P(ORDER,";",2)
"RTN","ORCSAVE2",212,0)
 Q:'$D(^OR(100,+ORDER,0))  Q:'ORA!('ORDER)
"RTN","ORCSAVE2",213,0)
 I $D(^OR(100,+ORDER,8,ORA)) D
"RTN","ORCSAVE2",214,0)
 .N DIE,DA,DR
"RTN","ORCSAVE2",215,0)
 .S DIE="^OR(100,"_+ORDER_",8,",DA=ORA,DA(1)=+ORDER
"RTN","ORCSAVE2",216,0)
 .S DR="4////5;15////14" D ^DIE,DELALRT^ORCSAVE1(ORDER) ; DELALRT call added to fix CQ #17536 (TC). [v28.1]
"RTN","ORCSAVE2",217,0)
 I ORA=1 D
"RTN","ORCSAVE2",218,0)
 .N DIE,DA,DR
"RTN","ORCSAVE2",219,0)
 .S DIE="^OR(100,",DA=+ORDER,DR="5////14"
"RTN","ORCSAVE2",220,0)
 .D ^DIE,ALPS(DA,ORA)
"RTN","ORCSAVE2",221,0)
 Q
"RTN","ORCSAVE2",222,0)
ALPS(DA,ORACT,TYPE) ;set the lapse index ^OR(100,"ALPS")
"RTN","ORCSAVE2",223,0)
 N ORVP,X,OR0,ORLOG
"RTN","ORCSAVE2",224,0)
 S OR0=$G(^OR(100,DA,8,ORACT,0))
"RTN","ORCSAVE2",225,0)
 S ORLOG=$P(OR0,U),ORVP=$P($G(^OR(100,DA,0)),U,2)
"RTN","ORCSAVE2",226,0)
 I ORVP,ORLOG S ^OR(100,"ALPS",ORVP,9999999-ORLOG,DA,ORACT)=$G(TYPE)
"RTN","ORCSAVE2",227,0)
 S ^OR(100,DA,10)=$$NOW^XLFDT
"RTN","ORCSAVE2",228,0)
 Q
"RTN","ORCSAVE2",229,0)
 ;
"RTN","ORCSAVE2",230,0)
RESP(IFN,PRMT,VAL,INST) ; -- update a single Response VALue
"RTN","ORCSAVE2",231,0)
 S IFN=+$G(IFN),VAL=$G(VAL),PRMT=+$O(^ORD(101.41,"AB",PRMT,0))
"RTN","ORCSAVE2",232,0)
 N ID,DA,DIK S:'$G(INST) INST=1
"RTN","ORCSAVE2",233,0)
 S ID=$P($G(^ORD(101.41,PRMT,1)),U,3) Q:'$L(ID)
"RTN","ORCSAVE2",234,0)
 S DA=0 F  S DA=$O(^OR(100,IFN,4.5,"ID",ID,DA)) Q:DA<1  Q:$P($G(^OR(100,IFN,4.5,DA,0)),U,3)=INST
"RTN","ORCSAVE2",235,0)
 I 'DA D:$L(VAL)  Q  ;add
"RTN","ORCSAVE2",236,0)
 . N DO,DIC,DLG,X
"RTN","ORCSAVE2",237,0)
 . S DIC="^OR(100,"_IFN_",4.5,",DA(1)=IFN,DIC(0)="FL"
"RTN","ORCSAVE2",238,0)
 . S DIC("DR")=".02///"_PRMT_";.03///"_INST_";.04///"_ID
"RTN","ORCSAVE2",239,0)
 . S DLG=+$P($G(^OR(100,IFN,0)),U,5)
"RTN","ORCSAVE2",240,0)
 . S X=+$O(^ORD(101.41,DLG,10,"D",PRMT,0))
"RTN","ORCSAVE2",241,0)
 . D FILE^DICN S:Y ^OR(100,IFN,4.5,+Y,1)=VAL
"RTN","ORCSAVE2",242,0)
 I $L(VAL) S ^OR(100,IFN,4.5,DA,1)=VAL Q  ;change
"RTN","ORCSAVE2",243,0)
 S DIK="^OR(100,"_IFN_",4.5,",DA(1)=IFN D ^DIK ;delete
"RTN","ORCSAVE2",244,0)
 Q
"RTN","ORCSEND3")
0^89^B25737895
"RTN","ORCSEND3",1,0)
ORCSEND3 ;SLC/MKB,AGP-Release cont ;02/24/10  05:53
"RTN","ORCSEND3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,282,280**;Dec 17, 1997;Build 85
"RTN","ORCSEND3",3,0)
 ;
"RTN","ORCSEND3",4,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORCSEND3",5,0)
 ;
"RTN","ORCSEND3",6,0)
 ;Reference to PSJORPOE supported by IA #3167
"RTN","ORCSEND3",7,0)
 ;
"RTN","ORCSEND3",8,0)
CHILD(STRT) ; Create child order, send to package
"RTN","ORCSEND3",9,0)
 N ORAPPT,ORPTS,A
"RTN","ORCSEND3",10,0)
 K ORIFN D EN^ORCSAVE Q:'$G(ORIFN)  D STARTDT^ORCSAVE2(ORIFN)
"RTN","ORCSEND3",11,0)
 I $G(STRT) D DATES^ORCSAVE2(ORIFN,STRT)
"RTN","ORCSEND3",12,0)
 S ORCHLD=+$G(ORCHLD)+1,^OR(100,ORPARENT,2,ORIFN,0)=ORIFN,ORLAST=ORIFN
"RTN","ORCSEND3",13,0)
 S A=$G(^OR(100,ORPARENT,0)),ORAPPT=$P(A,U,18),ORPTS=$P(A,"^",13)
"RTN","ORCSEND3",14,0)
 S $P(^OR(100,ORIFN,0),U,18)=ORAPPT,$P(^(3),U,9)=ORPARENT
"RTN","ORCSEND3",15,0)
 I PKG="LR" I $P(^OR(100,ORIFN,0),U,13)="" S $P(^(0),"^",13)=ORPTS
"RTN","ORCSEND3",16,0)
 N X0 S X0=$G(^OR(100,ORPARENT,8,1,0))
"RTN","ORCSEND3",17,0)
 I $P(X0,U,4)'=2 D SIGN^ORCSAVE2(ORIFN,+$P(X0,U,5),ORNOW,$P(X0,U,4),1)
"RTN","ORCSEND3",18,0)
 D COPY^OROCAPI1(ORPARENT,ORIFN)
"RTN","ORCSEND3",19,0)
 I $G(ORENEW) S OLD=$O(ORENEW(0)) I OLD S $P(^OR(100,OLD,3),U,6)=ORIFN,$P(^OR(100,ORIFN,3),U,5)=OLD,$P(^(3),U,11)=2 K ORENEW(OLD)
"RTN","ORCSEND3",20,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)),NEW^ORMBLD(ORIFN)
"RTN","ORCSEND3",21,0)
 Q
"RTN","ORCSEND3",22,0)
 ;
"RTN","ORCSEND3",23,0)
DOSES(IFN) ;
"RTN","ORCSEND3",24,0)
 N I,CNT S CNT=0
"RTN","ORCSEND3",25,0)
 S I=+$O(^OR(100,+$G(IFN),4.5,"ID","NOW",0)) I I,$G(^OR(100,+$G(IFN),4.5,I,1)) S CNT=CNT+1
"RTN","ORCSEND3",26,0)
 Q CNT
"RTN","ORCSEND3",27,0)
 ;
"RTN","ORCSEND3",28,0)
GETORDER(IFN) ; Set ORX(Inst,Ptr)=Value
"RTN","ORCSEND3",29,0)
 N I,X,Y,PTR,INST,TYPE,SOLCNT,ADDCNT
"RTN","ORCSEND3",30,0)
 S (SOLCNT,ADDCNT)=0
"RTN","ORCSEND3",31,0)
 S I=0 F  S I=$O(^OR(100,IFN,4.5,I)) Q:I'>0  S X=$G(^(I,0)),Y=$G(^(1)) D
"RTN","ORCSEND3",32,0)
 . S PTR=+$P(X,U,2),INST=+$P(X,U,3),TYPE=$P($G(^ORD(101.41,PTR,1)),U)
"RTN","ORCSEND3",33,0)
 . I TYPE'="W" S ORX(PTR,INST)=Y Q
"RTN","ORCSEND3",34,0)
 . ;S ORX(INST,PTR)="^OR(100,"_IFN_",4.5,"_I_",2)"
"RTN","ORCSEND3",35,0)
 . S ORX(PTR,INST)="^OR(100,"_IFN_",4.5,"_I_",2)"
"RTN","ORCSEND3",36,0)
 Q
"RTN","ORCSEND3",37,0)
PSJI ;
"RTN","ORCSEND3",38,0)
 ;IV dialog
"RTN","ORCSEND3",39,0)
 N ORPARENT,OR0,ORNP,ORDIALOG,ORDUZ,ORLOG,ORL,ORDG,ORCAT,ORX,ORP,ORI,STS
"RTN","ORCSEND3",40,0)
 N ORDOSE,ORT,ORSCH,ORDUR,ORSTRT,ORFRST,ORCONJ,ORID,ORDD,ORSTR,ORDGNM
"RTN","ORCSEND3",41,0)
 N ORSTART,ORCHLD,ORLAST,ORSIG,OROI,ID,OR3,ORIG,CODE,PKG,ORENEW,I,ORADMIN
"RTN","ORCSEND3",42,0)
 N ORDUR
"RTN","ORCSEND3",43,0)
 N CNT
"RTN","ORCSEND3",44,0)
 S ORPARENT=+ORIFN,OR0=$G(^OR(100,ORPARENT,0)),OR3=$G(^OR(100,ORPARENT,3))
"RTN","ORCSEND3",45,0)
 S ORCAT="I",ORNP=+$P(OR0,U,4)
"RTN","ORCSEND3",46,0)
 ;Q:$P(OR0,U,12)'="I"  S ORCAT="I",ORNP=+$P(OR0,U,4)
"RTN","ORCSEND3",47,0)
 S ORDIALOG=+$P(OR0,U,5),ORDUZ=+$P(OR0,U,6),ORLOG=$P(OR0,U,7)
"RTN","ORCSEND3",48,0)
 S ORL=$P(OR0,U,10),ORDG=+$P(OR0,U,11),PKG=$$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)
"RTN","ORCSEND3",49,0)
 ;Build ORDIALOG Array and ORX local array
"RTN","ORCSEND3",50,0)
 D GETDLG1^ORCD(ORDIALOG),GETORDER(ORPARENT)
"RTN","ORCSEND3",51,0)
 ;
"RTN","ORCSEND3",52,0)
 S ORSCH=$$PTR("SCHEDULE"),ORDUR=$$PTR("DURATION")
"RTN","ORCSEND3",53,0)
 D STRT S ORSTART=$G(ORSTRT("BEG"))
"RTN","ORCSEND3",54,0)
 S ORADMIN=$$PTR("ADMIN TIMES")
"RTN","ORCSEND3",55,0)
 D DATES^ORCSAVE2(ORPARENT,ORSTART) Q:$$DOSES(ORPARENT)<1
"RTN","ORCSEND3",56,0)
 S ORFRST=$$PTR("NOW"),ORSIG=$$PTR("SIG")
"RTN","ORCSEND3",57,0)
 ;
"RTN","ORCSEND3",58,0)
 I $P(OR3,U,11)=2,$O(^OR(100,+$P(OR3,U,5),2,0)) D
"RTN","ORCSEND3",59,0)
 . S ORENEW=+$P(OR3,U,5),I=0
"RTN","ORCSEND3",60,0)
 . I $$VALUE^ORX8(ORENEW,"NOW") S I=$O(^OR(100,ORENEW,2,0))
"RTN","ORCSEND3",61,0)
 . F  S I=$O(^OR(100,ORENEW,2,I)) Q:I<1  S ORENEW(I)=""
"RTN","ORCSEND3",62,0)
 ;
"RTN","ORCSEND3",63,0)
PSJI1 ;
"RTN","ORCSEND3",64,0)
 ;Build Order Dialog Prompts that can have Multiple Responses
"RTN","ORCSEND3",65,0)
 F ORP="ADDITIVE","ORDERABLE ITEM","STRENGTH PSIV","UNITS","VOLUME" D
"RTN","ORCSEND3",66,0)
 . N PTR S PTR=$$PTR(ORP) Q:PTR'>0  Q:'$D(ORX(PTR,1))
"RTN","ORCSEND3",67,0)
 . S CNT=0 F  S CNT=$O(ORX(PTR,CNT)) Q:CNT'>0  S ORDIALOG(PTR,CNT)=ORX(PTR,CNT)
"RTN","ORCSEND3",68,0)
 ;
"RTN","ORCSEND3",69,0)
 ;Build Order Dialog Responses that should be in both Child Orders
"RTN","ORCSEND3",70,0)
 F ORP="INFUSION RATE","IV TYPE","ROUTE","URGENCY","WORD PROCESSING 1" D
"RTN","ORCSEND3",71,0)
 . N PTR S PTR=$$PTR(ORP) Q:PTR'>0  Q:'$D(ORX(PTR,1))
"RTN","ORCSEND3",72,0)
 . S ORDIALOG(PTR,1)=ORX(PTR,1) S:$E(ORP)="O" OROI=ORX(PTR,1) Q
"RTN","ORCSEND3",73,0)
 ;
"RTN","ORCSEND3",74,0)
 ;If NOW order create NOW Child Order
"RTN","ORCSEND3",75,0)
 I $G(ORX(ORFRST,1)) D
"RTN","ORCSEND3",76,0)
 . S:$D(ORX(ORP,1)) ORDIALOG(ORP,1)=ORX(ORP,1)
"RTN","ORCSEND3",77,0)
 . ;S ID=$G(ORX(ORI,ORID)) S:$P(ID,"&",6) ORDIALOG(ORDD,1)=$P(ID,"&",6)
"RTN","ORCSEND3",78,0)
 . S ORDIALOG(ORSCH,1)="NOW",ORSTART=$$NOW^XLFDT
"RTN","ORCSEND3",79,0)
 . D CHILD(ORSTART)
"RTN","ORCSEND3",80,0)
 ;
"RTN","ORCSEND3",81,0)
 ;Build Order Fields for non-NOW Child Order
"RTN","ORCSEND3",82,0)
 F ORP=ORSCH,ORADMIN,ORDUR S:$D(ORX(ORP,1)) ORDIALOG(ORP,1)=ORX(ORP,1) K:'$D(ORX(ORP,1)) ORDIALOG(ORP,1)
"RTN","ORCSEND3",83,0)
 S ORSTART=$G(ORSTRT(1))
"RTN","ORCSEND3",84,0)
 D CHILD(ORSTART)
"RTN","ORCSEND3",85,0)
 ;
"RTN","ORCSEND3",86,0)
 S:$G(ORCHLD) ^OR(100,ORPARENT,2,0)="^100.002PA^"_ORLAST_U_ORCHLD
"RTN","ORCSEND3",87,0)
 S ORIFN=ORPARENT,ORQUIT=1,OR3=$G(^OR(100,ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORCSEND3",88,0)
 I (STS=1)!(STS=13)!(STS=11) S ORERR="1^Unable to release orders"
"RTN","ORCSEND3",89,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORNOW,DUZ,$G(NATURE)) K ^TMP("ORWORD",$J)
"RTN","ORCSEND3",90,0)
 S $P(^OR(100,ORIFN,3),U,8)=1 ;veil parent order - set stop date/time?
"RTN","ORCSEND3",91,0)
 Q:(STS=1)!(STS=13)!(STS=11)  ;unsuccessful
"RTN","ORCSEND3",92,0)
PSJI2 ; ck if parent is unsigned or edit
"RTN","ORCSEND3",93,0)
 I $P($G(^OR(100,ORIFN,8,1,0)),U,4)=2 S $P(^(0),U,4)="" K ^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,1) ;clear ES
"RTN","ORCSEND3",94,0)
 Q:$P(OR3,U,11)'=1  S ORIG=$P(OR3,U,5) Q:ORIG'>0
"RTN","ORCSEND3",95,0)
 S CODE=$S($P($G(^OR(100,ORIG,3)),U,3)=5:"CA",1:"DC")
"RTN","ORCSEND3",96,0)
 D MSG^ORMBLD(ORIG,CODE) I "^1^13^"[(U_$P($G(^OR(100,ORIG,3)),U,3)_U) D
"RTN","ORCSEND3",97,0)
 . N NATR S NATR=+$O(^ORD(100.02,"C","C",0))
"RTN","ORCSEND3",98,0)
 . S $P(^OR(100,ORIG,3),U,3)=12,$P(^(3),U,7)=0,^(6)=NATR_U_DUZ_U_ORNOW
"RTN","ORCSEND3",99,0)
 . D CANCEL^ORCSEND(ORIG) ;ck for unrel actions
"RTN","ORCSEND3",100,0)
 Q
"RTN","ORCSEND3",101,0)
PTR(X) ; Returns ptr of prompt X in Order Dialog file
"RTN","ORCSEND3",102,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORCSEND3",103,0)
 ;
"RTN","ORCSEND3",104,0)
STRT ; Build ORSTRT(inst)=date.time array of start times by dose
"RTN","ORCSEND3",105,0)
 N OI,PSOI,XD,XH,XM,XS,ORWD,ORI,SCH,ORSD,X,ORD K ORSTRT
"RTN","ORCSEND3",106,0)
 S OI=$G(ORX($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORCSEND3",107,0)
 ;if OI is null assume Intermittent IV order this does not required a
"RTN","ORCSEND3",108,0)
 ;solution check for an additive only value
"RTN","ORCSEND3",109,0)
 I OI="" S OI=$G(ORX($$PTR^ORCD("OR GTX ADDITIVE"),1))
"RTN","ORCSEND3",110,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2),(XD,XH,XM,XS)=0
"RTN","ORCSEND3",111,0)
 S ORWD=+$G(^SC(+$G(ORL),42)) ;ward
"RTN","ORCSEND3",112,0)
 ;S ORI=0 F  S ORI=$O(ORX(ORI)) Q:ORI<1  D
"RTN","ORCSEND3",113,0)
 S SCH=$G(ORX(ORSCH,1)),ORSD="" S:'$L(SCH) X=$$NOW^XLFDT
"RTN","ORCSEND3",114,0)
 S:$L(SCH) ORSD=$$STARTSTP^PSJORPOE(+ORVP,SCH,PSOI,ORWD),X=$P(ORSD,U,4)
"RTN","ORCSEND3",115,0)
 S ORSTRT(1)=$$FMADD^XLFDT(X,XD,XH,XM,XS) ;START+OFFSET
"RTN","ORCSEND3",116,0)
 ; find beginning date.time for parent
"RTN","ORCSEND3",117,0)
 S ORI=0,X=9999999 F  S ORI=$O(ORSTRT(ORI)) Q:ORI<1  I ORSTRT(ORI)<X S X=ORSTRT(ORI)
"RTN","ORCSEND3",118,0)
 S ORSTRT("BEG")=X
"RTN","ORCSEND3",119,0)
 Q
"RTN","ORCXPND1")
0^54^B72214647
"RTN","ORCXPND1",1,0)
ORCXPND1 ; SLC/MKB - Expanded Display cont ;08/31/09  09:18
"RTN","ORCXPND1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**26,67,75,89,92,94,148,159,188,172,215,243,280**;Dec 17, 1997;Build 85
"RTN","ORCXPND1",3,0)
 ;
"RTN","ORCXPND1",4,0)
 ; External References
"RTN","ORCXPND1",5,0)
 ;   DBIA  2387  ^LAB(60
"RTN","ORCXPND1",6,0)
 ;   DBIA  3420  ^DPT(  file #2
"RTN","ORCXPND1",7,0)
 ;   DBIA 10035  ^DPT(  file #2
"RTN","ORCXPND1",8,0)
 ;   DBIA 10037  EN^DGRPD
"RTN","ORCXPND1",9,0)
 ;   DBIA   700  DIS^DGRPDB
"RTN","ORCXPND1",10,0)
 ;   DBIA  2926  RT^GMRCGUIA
"RTN","ORCXPND1",11,0)
 ;   DBIA  2925  DT^GMRCSLM2                     ^TMP("GMRCR"
"RTN","ORCXPND1",12,0)
 ;   DBIA  2503  RR^LR7OR1                       ^TMP("LRRR"
"RTN","ORCXPND1",13,0)
 ;   DBIA  2951  EN1^LR7OSBR                     ^TMP("LRC"
"RTN","ORCXPND1",14,0)
 ;   DBIA  2952  EN^LR7OSMZ0
"RTN","ORCXPND1",15,0)
 ;   DBIA  2400  OEL^PSOORRL                     ^TMP("PS"
"RTN","ORCXPND1",16,0)
 ;   DBIA  2877  EN3^RAO7PC3
"RTN","ORCXPND1",17,0)
 ;   DBIA  2877  EN30^RAO7PC3
"RTN","ORCXPND1",18,0)
 ;   DBIA  1252  $$OUTPTPR^SDUTL3
"RTN","ORCXPND1",19,0)
 ;   DBIA  1252  $$OUTPTTM^SDUTL3
"RTN","ORCXPND1",20,0)
 ;   DBIA  2832  RPC^TIUSRV
"RTN","ORCXPND1",21,0)
 ;   DBIA 10061  DEM^VADPT
"RTN","ORCXPND1",22,0)
 ;   DBIA 10061  KVAR^VADPT
"RTN","ORCXPND1",23,0)
 ;   DBIA 10061  OAD^VADPT
"RTN","ORCXPND1",24,0)
 ;   DBIA 10103  $$FMTE^XLFDT
"RTN","ORCXPND1",25,0)
 ;   DBIA  4408  DISP^DGIBDSP
"RTN","ORCXPND1",26,0)
 ;
"RTN","ORCXPND1",27,0)
COVER ; -- Cover Sheet
"RTN","ORCXPND1",28,0)
 N PKG S PKG=$P($G(^TMP("OR",$J,ORTAB,"IDX",NUM)),U,4)
"RTN","ORCXPND1",29,0)
 D ALLERGY^ORCXPND2:PKG="GMRA",NOTES:PKG="TIU"
"RTN","ORCXPND1",30,0)
 Q
"RTN","ORCXPND1",31,0)
NOTES ; -- Progress Notes
"RTN","ORCXPND1",32,0)
 N I,ORY,DATE,AUTHOR,PTLOC,SUBJ K ^TMP("TIUAUDIT",$J)
"RTN","ORCXPND1",33,0)
 D RPC^TIUSRV(.ORY,ID)
"RTN","ORCXPND1",34,0)
 S I=0 F  S I=$O(@ORY@(I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$G(@ORY@(I,0))
"RTN","ORCXPND1",35,0)
 K @ORY
"RTN","ORCXPND1",36,0)
 Q
"RTN","ORCXPND1",37,0)
PROBLEMS ; -- Problem List
"RTN","ORCXPND1",38,0)
 D PL^ORCXPND4
"RTN","ORCXPND1",39,0)
 Q
"RTN","ORCXPND1",40,0)
MEDS ; -- Pharmacy
"RTN","ORCXPND1",41,0)
 ;N NODE,ORIFN
"RTN","ORCXPND1",42,0)
 K ^TMP("PS",$J)
"RTN","ORCXPND1",43,0)
 D OEL^PSOORRL(+ORVP,ID) ;S NODE=$G(^TMP("PS",$J,0)),ORIFN=+$P(NODE,U,11)
"RTN","ORCXPND1",44,0)
 S ID=+$P($G(^TMP("PS",$J,0)),U,11) D ORDERS  ;DBIA 2400
"RTN","ORCXPND1",45,0)
 ;D @($S($P($G(^OR(100,ORIFN,0)),U,11)=$O(^ORD(100.98,"B","IV RX",0)):"IV",1:"DRUG")_"^ORCXPND2")
"RTN","ORCXPND1",46,0)
 K ^TMP("PS",$J)
"RTN","ORCXPND1",47,0)
 Q
"RTN","ORCXPND1",48,0)
LABS ; -- Laboratory [RESULTS ONLY for ID=OE order #]
"RTN","ORCXPND1",49,0)
 N ORIFN,X,SUB,TEST,NAME,SS,IDE,IVDT,TST,CCNT,ORCY,IG,TCNT
"RTN","ORCXPND1",50,0)
 K ^TMP("LRRR",$J)  ;DBIA 2503
"RTN","ORCXPND1",51,0)
 I (ID?2.5E1" "2N1" "1.N1"-"7N1"."1.4N)!(ID?2.5E1" "2N1" "1.N1"-"7N) D AP^ORCXPND3 Q  ;ID=Accession #-Date/time specimen taken
"RTN","ORCXPND1",52,0)
 S ORIFN=+ID,IDE=$G(^OR(100,+ID,4)) Q:'$L(IDE)  ; OE# -> Lab#
"RTN","ORCXPND1",53,0)
 I +IDE  D RR^LR7OR1(+ORVP,IDE) I '$D(^TMP("LRRR",$J,+ORVP)) S $P(IDE,";",1,3)=";;" ;Order possibly purged, reset to lookup on file 63
"RTN","ORCXPND1",54,0)
 I '+IDE,$P(IDE,";",5)  D RR^LR7OR1(+ORVP,,9999999-$P(IDE,";",5),9999999-$P(IDE,";",5),$P(IDE,";",4))
"RTN","ORCXPND1",55,0)
 K ORCY D TEXT^ORQ12(.ORCY,ORIFN,80)
"RTN","ORCXPND1",56,0)
 S IG=0 F  S IG=$O(ORCY(IG)) Q:IG<1  S X=ORCY(IG) D ITEM^ORCXPND(X)
"RTN","ORCXPND1",57,0)
 D BLANK^ORCXPND I '$D(^TMP("LRRR",$J,+ORVP)) S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="No data available." Q
"RTN","ORCXPND1",58,0)
 M TEST=^TMP("LRRR",$J,+ORVP) S CCNT=0,SS=""
"RTN","ORCXPND1",59,0)
 F  S SS=$O(TEST(SS)) Q:SS=""  S IVDT=0 F  S IVDT=$O(TEST(SS,IVDT)) Q:'IVDT  D
"RTN","ORCXPND1",60,0)
 . I SS="BB" D
"RTN","ORCXPND1",61,0)
 .. I $$GET^XPAR("DIV^SYS^PKG","OR VBECS ON",1,"Q"),$L($T(EN^ORWLR1)),$L($T(CPRS^VBECA3B)) D  Q  ;Transition to VBEC's interface
"RTN","ORCXPND1",62,0)
 ... K ^TMP("ORLRC",$J)
"RTN","ORCXPND1",63,0)
 ... D EN^ORWLR1(DFN)
"RTN","ORCXPND1",64,0)
 ... I '$O(^TMP("ORLRC",$J,0)) S ^TMP("ORLRC",$J,1,0)="",^TMP("ORLRC",$J,2,0)="No Blood Bank report available..."
"RTN","ORCXPND1",65,0)
 ... N I S I=0 F  S I=$O(^TMP("ORLRC",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",66,0)
 ... K ^TMP("ORLRC",$J)
"RTN","ORCXPND1",67,0)
 .. K ^TMP("LRC",$J) D EN1^LR7OSBR(+ORVP) Q:'$D(^TMP("LRC",$J))  D  Q  ;DBIA 2951
"RTN","ORCXPND1",68,0)
 ... N I S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",69,0)
 ... K ^TMP("LRC",$J)
"RTN","ORCXPND1",70,0)
 . I SS="MI" K ^TMP("LRC",$J) D EN^LR7OSMZ0(+ORVP) Q:'$D(^TMP("LRC",$J))  D  Q
"RTN","ORCXPND1",71,0)
 .. N I S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",72,0)
 .. K ^TMP("LRC",$J)
"RTN","ORCXPND1",73,0)
 . I SS="CH" D  Q
"RTN","ORCXPND1",74,0)
 .. S (TCNT,TST)=0 F  S TST=$O(TEST(SS,IVDT,TST)) Q:TST=""  S CCNT=0,TCNT=TCNT+1 D
"RTN","ORCXPND1",75,0)
 ... I TCNT=1 D
"RTN","ORCXPND1",76,0)
 .... S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="   Collection time:          "_$$FMTE^XLFDT(9999999-IVDT,1)
"RTN","ORCXPND1",77,0)
 .... S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$$S(1,CCNT," ")_$$S(3,CCNT,"Test Name")_$$S(29,CCNT,"Result")_$$S(39,CCNT,"Units")_$$S(55,CCNT,"Range") D:$D(IOUON) SETVIDEO^ORCXPND(LCNT,1,70,IOUON,IOUOFF)
"RTN","ORCXPND1",78,0)
 ... I TST S X=TEST(SS,IVDT,TST),CCNT=0 I +X D
"RTN","ORCXPND1",79,0)
 .... S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$$S(1,CCNT,$P(^LAB(60,+X,0),U))_$$S(26,CCNT,$J($P(X,U,2),7))_$$S(34,CCNT,$S($L($P(X,U,3)):$P(X,U,3),1:""))_$$S(39,CCNT,$P(X,U,4))_$$S(45,CCNT,$J($P(X,U,5),15))
"RTN","ORCXPND1",80,0)
 .... I $L($P(X,U,3)),$D(IOINHI) D SETVIDEO^ORCXPND(LCNT,26,8,IOINHI,IOINORM)
"RTN","ORCXPND1",81,0)
 .... I $P(X,U,3)["*",$D(IOBON),$D(IOINHI) D SETVIDEO^ORCXPND(LCNT,26,8,IOBON_IOINHI,IOBOFF_IOINORM)
"RTN","ORCXPND1",82,0)
 ... I TST="N" S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=" Comments: " D
"RTN","ORCXPND1",83,0)
 .... N CMT S CMT=0 F  S CMT=$O(TEST(SS,IVDT,"N",CMT)) Q:'CMT  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=" "_TEST(SS,IVDT,"N",CMT)
"RTN","ORCXPND1",84,0)
 K ^TMP("LRRR",$J)
"RTN","ORCXPND1",85,0)
 Q
"RTN","ORCXPND1",86,0)
 ;
"RTN","ORCXPND1",87,0)
DELAY ; -- Delayed Orders
"RTN","ORCXPND1",88,0)
NEW ; -- New Orders
"RTN","ORCXPND1",89,0)
ORDERS ; -- Orders
"RTN","ORCXPND1",90,0)
 I '$G(ORESULTS) D ORDERS^ORCXPND2 Q
"RTN","ORCXPND1",91,0)
 ; -- Results Display (Add more packages as available)
"RTN","ORCXPND1",92,0)
 N PKG,TAB,ORIFN
"RTN","ORCXPND1",93,0)
 S PKG=+$P($G(^OR(100,+ID,0)),"^",14),PKG=$$NMSP^ORCD(PKG)
"RTN","ORCXPND1",94,0)
 S TAB=$S(PKG="LR":"LABS",PKG="GMRC":"CONSULTS",PKG="RA":"XRAYS",1:"")
"RTN","ORCXPND1",95,0)
 I '$L(TAB)!(ID'>0) D  Q  ; no display available
"RTN","ORCXPND1",96,0)
 . N ORY,I D TEXT^ORQ12(.ORY,+ID,80)
"RTN","ORCXPND1",97,0)
 . S I=0 F  S I=$O(ORY(I)) Q:I'>0  D ITEM^ORCXPND(ORY(I))
"RTN","ORCXPND1",98,0)
 . D BLANK^ORCXPND
"RTN","ORCXPND1",99,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="There are no results to report."
"RTN","ORCXPND1",100,0)
 I $O(^OR(100,+ID,2,0)) S ORIFN=+ID,ID=0 F  S ID=$O(^OR(100,ORIFN,2,ID)) Q:ID<1  I $D(^OR(100,ID,0)) D @TAB
"RTN","ORCXPND1",101,0)
 I '$O(^OR(100,+ID,2,0)) D @TAB
"RTN","ORCXPND1",102,0)
 Q
"RTN","ORCXPND1",103,0)
REPORTS ; -- Patient Profiles
"RTN","ORCXPND1",104,0)
 D EN^ORCXPNDR ; Reports
"RTN","ORCXPND1",105,0)
 Q
"RTN","ORCXPND1",106,0)
CONSULTS ; -- Consults
"RTN","ORCXPND1",107,0)
 N I,X,SUB,ORTX ;,VALMAR
"RTN","ORCXPND1",108,0)
 I $G(ORTAB)="CONSULTS" S X=$P($G(^TMP("OR",$J,ORTAB,"IDX",NUM)),U,4)
"RTN","ORCXPND1",109,0)
 E  D TEXT^ORQ12(.ORTX,+ID) S X=ORTX(1),ID=+$G(^OR(100,+ID,4)) ; OE->GMRC order#
"RTN","ORCXPND1",110,0)
 D ITEM^ORCXPND(X),BLANK^ORCXPND
"RTN","ORCXPND1",111,0)
 I ID'>0 S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="No data available." Q
"RTN","ORCXPND1",112,0)
 I '$G(ORESULTS) D  ;DT action
"RTN","ORCXPND1",113,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="Consult No.:           "_ID
"RTN","ORCXPND1",114,0)
 . N GMRCOER S GMRCOER=2 D DT^GMRCSLM2(ID) S SUB="DT"  ;DBIA 2925
"RTN","ORCXPND1",115,0)
 I $G(ORESULTS) D RT^GMRCGUIA(ID,"^TMP(""GMRCR"",$J,""RT"")") S SUB="RT"
"RTN","ORCXPND1",116,0)
 S I=0 F  S I=$O(^TMP("GMRCR",$J,SUB,I)) Q:I'>0  S X=$G(^(I,0)),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X  ;DBIA 2925
"RTN","ORCXPND1",117,0)
 K ^TMP("GMRCR",$J)
"RTN","ORCXPND1",118,0)
 Q
"RTN","ORCXPND1",119,0)
XRAYS ; -- Radiology
"RTN","ORCXPND1",120,0)
 I '$G(ORESULTS) S ID=+ORVP_U_$TR(ID,"-","^") D EN3^RAO7PC3(ID)
"RTN","ORCXPND1",121,0)
 I $G(ORESULTS) S ID=+$G(^OR(100,+ID,4)) D EN30^RAO7PC3(ID)
"RTN","ORCXPND1",122,0)
 N CASE,PROC,PSET S PSET=$D(^TMP($J,"RAE3",+ORVP,"PRINT_SET"))
"RTN","ORCXPND1",123,0)
 S CASE=0 F  S CASE=$O(^TMP($J,"RAE3",+ORVP,CASE)) Q:CASE'>0  D
"RTN","ORCXPND1",124,0)
 . I PSET S PROC=$O(^TMP($J,"RAE3",+ORVP,CASE,"")) D ITEM^ORCXPND(PROC) Q
"RTN","ORCXPND1",125,0)
 . S PROC="" F  S PROC=$O(^TMP($J,"RAE3",+ORVP,CASE,PROC)) Q:PROC=""  D ITEM^ORCXPND(PROC),BLANK^ORCXPND,XRPT,BLANK^ORCXPND
"RTN","ORCXPND1",126,0)
 I PSET S CASE=$O(^TMP($J,"RAE3",+ORVP,0)),PROC=$O(^(CASE,"")) D BLANK^ORCXPND,XRPT,BLANK^ORCXPND ;printset=list all procs, then one report
"RTN","ORCXPND1",127,0)
 K ^TMP($J,"RAE3",+ORVP),^UTILITY($J,"W")
"RTN","ORCXPND1",128,0)
 S VALM("RM")=81
"RTN","ORCXPND1",129,0)
 Q
"RTN","ORCXPND1",130,0)
 ;
"RTN","ORCXPND1",131,0)
XRPT ; -- Body of Report for CASE, PROC
"RTN","ORCXPND1",132,0)
 N ORD,X,I
"RTN","ORCXPND1",133,0)
 S ORD=$S($L($G(^TMP($J,"RAE3",+ORVP,"ORD"))):^("ORD"),$L($G(^("ORD",CASE))):^(CASE),1:"") I $L(ORD),ORD'=PROC S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="Proc Ord: "_ORD
"RTN","ORCXPND1",134,0)
 S I=1 F  S I=$O(^TMP($J,"RAE3",+ORVP,CASE,PROC,I)) Q:I'>0  S X=^(I),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X ;Skip pt ID on line 1
"RTN","ORCXPND1",135,0)
 Q
"RTN","ORCXPND1",136,0)
 ;
"RTN","ORCXPND1",137,0)
SUMMRIES ; -- Discharge Summaries
"RTN","ORCXPND1",138,0)
 N I,ORY,DATE,AUTHOR,PTLOC,SUBJ K ^TMP("TIUAUDIT",$J)
"RTN","ORCXPND1",139,0)
 D RPC^TIUSRV(.ORY,ID)
"RTN","ORCXPND1",140,0)
 S I=0 F  S I=$O(@ORY@(I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$G(@ORY@(I,0))
"RTN","ORCXPND1",141,0)
 K @ORY
"RTN","ORCXPND1",142,0)
 Q
"RTN","ORCXPND1",143,0)
PTINQ ; Print Patient Inquiry in List Manager
"RTN","ORCXPND1",144,0)
 N DFN,ORI,X
"RTN","ORCXPND1",145,0)
 S DFN=+ORVP
"RTN","ORCXPND1",146,0)
 D DGINQ(DFN)
"RTN","ORCXPND1",147,0)
 S ORI=4,LCNT=0
"RTN","ORCXPND1",148,0)
 F  S ORI=$O(^TMP("ORDATA",$J,1,ORI)) Q:'ORI  S X=^(ORI) D
"RTN","ORCXPND1",149,0)
 . S LCNT=LCNT+1
"RTN","ORCXPND1",150,0)
 . S ^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",151,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORCXPND1",152,0)
 Q
"RTN","ORCXPND1",153,0)
 ;
"RTN","ORCXPND1",154,0)
DGINQ(DFN) ; Patient Inquiry
"RTN","ORCXPND1",155,0)
 D START^ORWRP(80,"DGINQB^ORCXPND1(DFN)")
"RTN","ORCXPND1",156,0)
 Q
"RTN","ORCXPND1",157,0)
DGINQB(DFN) ; Build Patient Inquiry
"RTN","ORCXPND1",158,0)
 N CONTACT,ORDOC,ORTEAM,ORVP,XQORNOD,ORSSTRT,ORSSTOPT,VAOA
"RTN","ORCXPND1",159,0)
 S ORVP=DFN_";DPT(",XQORNOD=1
"RTN","ORCXPND1",160,0)
 D EN^DGRPD ; MAS Patient Inquiry
"RTN","ORCXPND1",161,0)
 ;
"RTN","ORCXPND1",162,0)
 S ORDOC=$$OUTPTPR^SDUTL3(DFN)
"RTN","ORCXPND1",163,0)
 S ORTEAM=$$OUTPTTM^SDUTL3(DFN)
"RTN","ORCXPND1",164,0)
 I ORDOC!ORTEAM  D
"RTN","ORCXPND1",165,0)
 . W !!,"Primary Care Information:"
"RTN","ORCXPND1",166,0)
 . I ORDOC W !,"Primary Practitioner:  ",$P(ORDOC,"^",2)
"RTN","ORCXPND1",167,0)
 . I ORTEAM W !,"Primary Care Team:     ",$P(ORTEAM,"^",2)
"RTN","ORCXPND1",168,0)
 W !!,"Health Insurance Information:"
"RTN","ORCXPND1",169,0)
 D DISP^DGIBDSP  ;DBIA #4408
"RTN","ORCXPND1",170,0)
 W !!,"Service Connection/Rated Disabilities:"
"RTN","ORCXPND1",171,0)
 D DIS^DGRPDB
"RTN","ORCXPND1",172,0)
 F CONTACT="N","S" D
"RTN","ORCXPND1",173,0)
 .S VAOA("A")=$S(CONTACT="N":"",1:3)
"RTN","ORCXPND1",174,0)
 .D OAD^VADPT ;   Get NOK Information
"RTN","ORCXPND1",175,0)
 .I VAOA(9)]"" D
"RTN","ORCXPND1",176,0)
 .. W !!,$S(CONTACT="N":"Next of Kin Information:",1:"Secondary Next of Kin Information:")
"RTN","ORCXPND1",177,0)
 .. W !,"Name:  ",VAOA(9)                          ;     NOK Name
"RTN","ORCXPND1",178,0)
 .. I VAOA(10)]"" W " (",VAOA(10),")"              ;     Relationship
"RTN","ORCXPND1",179,0)
 .. I VAOA(1)]"" W !?7,VAOA(1)                     ;     Address Line 1
"RTN","ORCXPND1",180,0)
 .. I VAOA(2)]"" W !?7,VAOA(2)                     ;     Line 2
"RTN","ORCXPND1",181,0)
 .. I VAOA(3)]"" W !?7,VAOA(3)                     ;     Line 3
"RTN","ORCXPND1",182,0)
 .. I VAOA(4)]"" D
"RTN","ORCXPND1",183,0)
 .. . W !?7,VAOA(4)                                ;     City
"RTN","ORCXPND1",184,0)
 .. . I VAOA(5)]"" W ", "_$P(VAOA(5),"^",2)        ;     State
"RTN","ORCXPND1",185,0)
 .. . W "  ",$P(VAOA(11),"^",2)                    ;     Zip+4
"RTN","ORCXPND1",186,0)
 .. I VAOA(8)]"" W !!?7,"Phone number:  ",VAOA(8)  ;     Phone
"RTN","ORCXPND1",187,0)
 .. I CONTACT="N",$P($G(^DPT(DFN,.21)),U,11)]"" W !?7,"Work phone number:  ",$P(^DPT(DFN,.21),U,11)
"RTN","ORCXPND1",188,0)
 .. I CONTACT="S",$P($G(^DPT(DFN,.211)),U,11)]"" W !?7,"Work phone number:  ",$P(^DPT(DFN,.211),U,11)
"RTN","ORCXPND1",189,0)
 D KVAR^VADPT
"RTN","ORCXPND1",190,0)
 Q
"RTN","ORCXPND1",191,0)
TRIM(X) ;   Trim Spaces
"RTN","ORCXPND1",192,0)
 S X=$G(X) F  Q:$E(X,1)'=" "  S X=$E(X,2,$L(X))
"RTN","ORCXPND1",193,0)
 F  Q:$E(X,$L(X))'=" "  S X=$E(X,1,($L(X)-1))
"RTN","ORCXPND1",194,0)
 Q X
"RTN","ORCXPND1",195,0)
S(X,Y,Z) ; Pad Over
"RTN","ORCXPND1",196,0)
 ;   X=Column #
"RTN","ORCXPND1",197,0)
 ;   Y=Current Length
"RTN","ORCXPND1",198,0)
 ;   Z=Text
"RTN","ORCXPND1",199,0)
 ;   SP=Text Sent
"RTN","ORCXPND1",200,0)
 ;   CCNT=Line Position After Input Text
"RTN","ORCXPND1",201,0)
 I '$D(Z) Q ""
"RTN","ORCXPND1",202,0)
 N SP S SP=Z I X,Y,X>Y S SP=$E("                                                                             ",1,X-Y)_Z
"RTN","ORCXPND1",203,0)
 S CCNT=$$INC(CCNT,SP)
"RTN","ORCXPND1",204,0)
 Q SP
"RTN","ORCXPND1",205,0)
INC(X,Y) ; Character Position Count
"RTN","ORCXPND1",206,0)
 ;   X=Current Count
"RTN","ORCXPND1",207,0)
 ;   Y=Text
"RTN","ORCXPND1",208,0)
 N INC S INC=X+$L(Y)
"RTN","ORCXPND1",209,0)
 Q INC
"RTN","ORCXPND3")
0^55^B43846714
"RTN","ORCXPND3",1,0)
ORCXPND3 ; SLC/MKB,dcm - Expanded display of Reports ;08/31/09  09:35
"RTN","ORCXPND3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**25,30,43,85,172,243,280**;Dec 17, 1997;Build 85
"RTN","ORCXPND3",3,0)
 ;
"RTN","ORCXPND3",4,0)
AP ; -- Retrieve AP results for a specific date/time specimen taken
"RTN","ORCXPND3",5,0)
 ; [alert follow-up, from LABS^ORCXPND1]
"RTN","ORCXPND3",6,0)
 N ORLRSS,ORDTSTKN S ORLRSS=$P($G(XQADATA),U),ORDTSTKN=$P($G(XQADATA),U,3)
"RTN","ORCXPND3",7,0)
 I ORLRSS?1(1"SP",1"CY",1"EM",1"AU"),ORDTSTKN'="" D
"RTN","ORCXPND3",8,0)
 . N ORLRDFN S ORLRDFN=$$LRDFN^LR7OR1(DFN) ;DBIA/ICR #2503
"RTN","ORCXPND3",9,0)
 . K ^TMP("ORAP",$J) D EN^LR7OSAP4("^TMP(""ORAP"",$J)",ORLRDFN,ORLRSS,ORDTSTKN)
"RTN","ORCXPND3",10,0)
 . I '$O(^TMP("ORAP",$J,0)) S ^TMP("ORAP",$J,1,0)="",^TMP("ORAP",$J,2,0)="No Anatomic Pathology report available..."
"RTN","ORCXPND3",11,0)
 . N I S I=0 F  S I=$O(^TMP("ORAP",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND3",12,0)
 . K ^TMP("ORAP",$J)
"RTN","ORCXPND3",13,0)
 Q
"RTN","ORCXPND3",14,0)
 ;
"RTN","ORCXPND3",15,0)
LRA ; -- Anatomic Pathology Report
"RTN","ORCXPND3",16,0)
 N DFN,Y,I,LRLLOC,LRQ
"RTN","ORCXPND3",17,0)
 D TIT^ORCXPNDR("Anatomic Path Report") Q:$$OS^ORCXPNDR()
"RTN","ORCXPND3",18,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",19,0)
 D RPT^ORWRP(.Y,ID,3)
"RTN","ORCXPND3",20,0)
 D ITEM^ORCXPND("Anatomic Path Report")
"RTN","ORCXPND3",21,0)
 S I=3 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:I<1  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=^TMP("ORDATA",$J,1,I)
"RTN","ORCXPND3",22,0)
 K ^TMP("ORDATA",$J)
"RTN","ORCXPND3",23,0)
 Q
"RTN","ORCXPND3",24,0)
 ;
"RTN","ORCXPND3",25,0)
LRAA ; -- Alternate Anatomic Path Report
"RTN","ORCXPND3",26,0)
 N DFN,Y,I,LRLLOC,LRQ
"RTN","ORCXPND3",27,0)
 D TIT^ORCXPNDR("Alternate Anatomic Path Report") Q:$$OS^ORCXPNDR()
"RTN","ORCXPND3",28,0)
 D PREP^ORCXPNDR I $$OS^ORCXPNDR() Q
"RTN","ORCXPND3",29,0)
 D AP^LR7OSUM(ID)
"RTN","ORCXPND3",30,0)
 D ITEM^ORCXPND("Anatomic Pathology Report")
"RTN","ORCXPND3",31,0)
 I '$O(^TMP("LRC",$J,0)) S ^TMP("LRC",$J,1,0)="No Anatomic Pathology reports available..."
"RTN","ORCXPND3",32,0)
 S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=^TMP("LRC",$J,I,0)
"RTN","ORCXPND3",33,0)
 K ^TMP("LRC",$J)
"RTN","ORCXPND3",34,0)
 Q
"RTN","ORCXPND3",35,0)
 ;
"RTN","ORCXPND3",36,0)
LRB1 ; -- Blood Bank Report
"RTN","ORCXPND3",37,0)
 N DFN,Y,I,LRBLOOD,LRCAPA,LRDT0,LRLABKY,LRLLOC,LRO,LRPCEVSO,LRPLASMA,LRSERUM,LRT,LRUNKNOW,LRURINE,LRVIDO,LRVIDOF
"RTN","ORCXPND3",38,0)
 D TIT^ORCXPNDR("Blood Bank Report") Q:$$OS^ORCXPNDR()
"RTN","ORCXPND3",39,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",40,0)
 D RPT^ORWRP(.Y,ID,2)
"RTN","ORCXPND3",41,0)
 D ITEM^ORCXPND("Blood Bank Report")
"RTN","ORCXPND3",42,0)
 S I=5 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:I<1  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=^TMP("ORDATA",$J,1,I)
"RTN","ORCXPND3",43,0)
 K ^TMP("ORDATA",$J)
"RTN","ORCXPND3",44,0)
 Q
"RTN","ORCXPND3",45,0)
 ;
"RTN","ORCXPND3",46,0)
LRB ; -- A better Blood Bank Report
"RTN","ORCXPND3",47,0)
 N DFN,ORY,I,SUBHEAD
"RTN","ORCXPND3",48,0)
 D TIT^ORCXPNDR("Blood Bank Report")
"RTN","ORCXPND3",49,0)
 S DFN=ID
"RTN","ORCXPND3",50,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",51,0)
 I $$GET^XPAR("DIV^SYS^PKG","OR VBECS ON",1,"Q"),$L($T(EN^ORWLR1)),$L($T(CPRS^VBECA3B)) D  Q  ;Transition to VBEC's interface
"RTN","ORCXPND3",52,0)
 . K ^TMP("ORLRC",$J)
"RTN","ORCXPND3",53,0)
 . D EN^ORWLR1(DFN)
"RTN","ORCXPND3",54,0)
 . I '$O(^TMP("ORLRC",$J,0)) S ^TMP("ORLRC",$J,1,0)="",^TMP("ORLRC",$J,2,0)="No Blood Bank report available..."
"RTN","ORCXPND3",55,0)
 . D ITEM^ORCXPND("Blood Bank Report"),BLANK^ORCXPND
"RTN","ORCXPND3",56,0)
 . S I=0 F  S I=$O(^TMP("ORLRC",$J,I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=^TMP("ORLRC",$J,I,0)
"RTN","ORCXPND3",57,0)
 . K ^TMP("ORLRC",$J)
"RTN","ORCXPND3",58,0)
 S SUBHEAD("BLOOD BANK")=""
"RTN","ORCXPND3",59,0)
 D EN^LR7OSUM(.ORY,DFN,,,,,.SUBHEAD)
"RTN","ORCXPND3",60,0)
 I '$O(^TMP("LRC",$J,0)) S ^TMP("LRC",$J,1,0)="No Blood Bank report available..."
"RTN","ORCXPND3",61,0)
 D ITEM^ORCXPND("Blood Bank Report"),BLANK^ORCXPND
"RTN","ORCXPND3",62,0)
 S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=^TMP("LRC",$J,I,0)
"RTN","ORCXPND3",63,0)
 K ^TMP("LRC",$J),^TMP("LRH",$J)
"RTN","ORCXPND3",64,0)
 Q
"RTN","ORCXPND3",65,0)
 ;
"RTN","ORCXPND3",66,0)
LRC ; -- Lab Cumulative
"RTN","ORCXPND3",67,0)
 N DFN,ORY,I,BEG,END,OREND,ORSSTRT,ORSSTOP
"RTN","ORCXPND3",68,0)
 D TIT^ORCXPNDR("Lab Cumulative")
"RTN","ORCXPND3",69,0)
 S DFN=ID
"RTN","ORCXPND3",70,0)
 D RANGE($S($G(ORWARD):7,1:180)) Q:OREND  S BEG=+ORSSTRT,END=+ORSSTOP
"RTN","ORCXPND3",71,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",72,0)
 D EN^LR7OSUM(.ORY,DFN,BEG,END)
"RTN","ORCXPND3",73,0)
 D ITEM^ORCXPND("Lab Cumulative"),BLANK^ORCXPND
"RTN","ORCXPND3",74,0)
 S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=^TMP("LRC",$J,I,0)
"RTN","ORCXPND3",75,0)
 K ^TMP("LRC",$J),^TMP("LRH",$J)
"RTN","ORCXPND3",76,0)
 Q
"RTN","ORCXPND3",77,0)
 ;
"RTN","ORCXPND3",78,0)
LRG ; -- Graph Lab Tests
"RTN","ORCXPND3",79,0)
 N DFN,Y,I,X,BCNT,LRSS,LRCW,LRFLAG,LRCTRL,LRNSET,N,LOW,LRPCEVSO,LRPRAC,LRRB,LRTREA,LRVIDO,LRVIDOF,OREND,ORSSTRT,ORSSTOP
"RTN","ORCXPND3",80,0)
 D TIT^ORCXPNDR("Graph Lab Tests") Q:$$OS^ORCXPNDR()
"RTN","ORCXPND3",81,0)
 D RANGE($S($G(ORWARD):7,1:180)) Q:OREND
"RTN","ORCXPND3",82,0)
 S LRSS="CH",LRCW=8,LRFLAG="",LRCTRL=0,(LRNSET,N)=80
"RTN","ORCXPND3",83,0)
 D L2^LRDIST4 Q:'$D(LRTEST)
"RTN","ORCXPND3",84,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",85,0)
 D RPT^ORWRP(.Y,ID,8,,,,+ORSSTRT,+ORSSTOP)
"RTN","ORCXPND3",86,0)
 D ITEM^ORCXPND("Lab Graph")
"RTN","ORCXPND3",87,0)
 S I=4,BCNT=0
"RTN","ORCXPND3",88,0)
 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:I<1  S X=^(I) D
"RTN","ORCXPND3",89,0)
 . I '$L(X) S BCNT=BCNT+1 I BCNT>1 Q
"RTN","ORCXPND3",90,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X S:$L(X) BCNT=0
"RTN","ORCXPND3",91,0)
 K ^TMP("ORDATA",$J)
"RTN","ORCXPND3",92,0)
 Q
"RTN","ORCXPND3",93,0)
 ;
"RTN","ORCXPND3",94,0)
LRI ; -- Interim Lab Results
"RTN","ORCXPND3",95,0)
 N ORX,DFN,Y,I,X,BCNT,LREDT,LRIDT,LRLLT,LRPCEVSO,LRPRAC,LRRB,LRTREA,LRVIDO,LRVIDOF,OREND,ORSSTRT,ORSSTOP
"RTN","ORCXPND3",96,0)
 D TIT^ORCXPNDR("Lab Interim Results") Q:$$OS^ORCXPNDR()
"RTN","ORCXPND3",97,0)
 D RANGE($S($G(ORWARD):7,1:180)) Q:OREND
"RTN","ORCXPND3",98,0)
 D SET^LRRP4
"RTN","ORCXPND3",99,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",100,0)
 D RPT^ORWRP(.Y,ID,3,,,,+ORSSTRT,+ORSSTOP)
"RTN","ORCXPND3",101,0)
 D ITEM^ORCXPND("Lab Interim Report")
"RTN","ORCXPND3",102,0)
 S I=0,BCNT=0
"RTN","ORCXPND3",103,0)
 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:I<1  S X=^(I) D
"RTN","ORCXPND3",104,0)
 . I '$L(X) S BCNT=BCNT+1 I BCNT>1 Q
"RTN","ORCXPND3",105,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X S:$L(X) BCNT=0
"RTN","ORCXPND3",106,0)
 K ^TMP("ORDATA",$J)
"RTN","ORCXPND3",107,0)
 Q
"RTN","ORCXPND3",108,0)
 ;
"RTN","ORCXPND3",109,0)
LRGEN ;Lab Results by Test
"RTN","ORCXPND3",110,0)
 N DFN,Y,I,II,X,BCNT,LRPRETTY,LREDT,LRLLT,LRPCEVSO,LRPRAC,LRRB,LRTREA,LRVIDO,LRVIDOF,LRCW,LREND,LRTP,LRIX,LRWPL,LRIDT,LRSC,DIC,LRTSTS,LRORD,LRTEST,LRSUB,LRHDR,LRSSP,LRHI,LRLO
"RTN","ORCXPND3",111,0)
 N LBL,LRBLOOD,LRDAT,LRDFN,LRDPF,LRDT0,LREX,LRFFLG,LRFOOT,LRLAB,LRLABKY,LRND,LRNG,LRNOP,LRNOTE,LRODT0,LRONESPC,LRONETST,LRPAGE,LRPARAM,LRPLASMA,LRPP,LRSERUM,LRPS,LRTN,LRUNKNOW,LRURINE,LRWRD,LRX,LRY
"RTN","ORCXPND3",112,0)
 N AGE,I,INC,LRIDT1,LRSV,OREND,ORSSTRT,ORSSTOP
"RTN","ORCXPND3",113,0)
 K ^TMP("LR",$J)
"RTN","ORCXPND3",114,0)
 D TIT^ORCXPNDR("Lab Results by Test") Q:$$OS^ORCXPNDR()
"RTN","ORCXPND3",115,0)
 D RANGE($S($G(ORWARD):7,1:180)) Q:OREND
"RTN","ORCXPND3",116,0)
 D SET^LRGEN
"RTN","ORCXPND3",117,0)
 Q:LREND!'LRTSTS
"RTN","ORCXPND3",118,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",119,0)
 D RPT^ORWRP(.Y,ID,16,,,,+ORSSTRT,+ORSSTOP)
"RTN","ORCXPND3",120,0)
 D ITEM^ORCXPND("Lab Results by Test")
"RTN","ORCXPND3",121,0)
 S I=1,BCNT=0
"RTN","ORCXPND3",122,0)
 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:I<1  S X=^(I) D
"RTN","ORCXPND3",123,0)
 . I '$L(X) S BCNT=BCNT+1 I BCNT>1 Q
"RTN","ORCXPND3",124,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X S:$L(X) BCNT=0
"RTN","ORCXPND3",125,0)
 K ^TMP("ORDATA",$J)
"RTN","ORCXPND3",126,0)
 Q
"RTN","ORCXPND3",127,0)
 ;
"RTN","ORCXPND3",128,0)
STAT ; -- Lab test status
"RTN","ORCXPND3",129,0)
 N DFN,Y,I,X,BCNT,OREND,ORSSTRT,ORSSTOP
"RTN","ORCXPND3",130,0)
 D TIT^ORCXPNDR("Lab Test Status") Q:$$OS^ORCXPNDR()
"RTN","ORCXPND3",131,0)
 D RANGE($S($G(ORWARD):7,1:180)) Q:$G(OREND)
"RTN","ORCXPND3",132,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",133,0)
 D RPT^ORWRP(.Y,ID,9,,,,+ORSSTRT,+ORSSTOP)
"RTN","ORCXPND3",134,0)
 D ITEM^ORCXPND("Lab Test Status")
"RTN","ORCXPND3",135,0)
 S I=0,BCNT=0
"RTN","ORCXPND3",136,0)
 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:I<1  S X=$S($D(^(I))#2:^(I),$D(^(I,0))#2:^(0),1:"") D
"RTN","ORCXPND3",137,0)
 . I '$L(X) S BCNT=BCNT+1 I BCNT>1 Q
"RTN","ORCXPND3",138,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X S:$L(X) BCNT=0
"RTN","ORCXPND3",139,0)
 K ^TMP("ORDATA",$J)
"RTN","ORCXPND3",140,0)
 Q
"RTN","ORCXPND3",141,0)
 ;
"RTN","ORCXPND3",142,0)
RANGE(BEG) ;Get date range for report
"RTN","ORCXPND3",143,0)
 ;BEG=# of days (T-BEG) for start default
"RTN","ORCXPND3",144,0)
 ;Output: ORSSTRT=Start date/time
"RTN","ORCXPND3",145,0)
 ;        ORSSTOP=Stop date/time
"RTN","ORCXPND3",146,0)
 ;        OREND=1 if user '^'s out, so look for it!
"RTN","ORCXPND3",147,0)
 S BEG=$$FMADD^XLFDT(DT,-$G(BEG)),END=$$NOW^XLFDT
"RTN","ORCXPND3",148,0)
 D RANGE^ORPRS01(BEG,END)
"RTN","ORCXPND3",149,0)
 Q
"RTN","ORCXPND3",150,0)
 ;
"RTN","ORCXPND3",151,0)
MED(MED) ; -- Medicine Summary of Patient Procedures
"RTN","ORCXPND3",152,0)
 N DFN,Y,I,X,BCNT,OREND,PROCID
"RTN","ORCXPND3",153,0)
 D TIT^ORCXPNDR("Summary of Patient Procedures") Q:$$OS^ORCXPNDR()
"RTN","ORCXPND3",154,0)
 D PREP^ORCXPNDR
"RTN","ORCXPND3",155,0)
 S DFN=+ID,PROCID=$P(MED,"~",2)
"RTN","ORCXPND3",156,0)
 D RPT^ORWRP(.Y,DFN,19,,,PROCID)
"RTN","ORCXPND3",157,0)
 D ITEM^ORCXPND("Summary of Patient Procedures")
"RTN","ORCXPND3",158,0)
 S I=4,BCNT=0
"RTN","ORCXPND3",159,0)
 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:I<1  S X=^(I) D
"RTN","ORCXPND3",160,0)
 . I '$L(X) S BCNT=BCNT+1 I BCNT>1 Q
"RTN","ORCXPND3",161,0)
 . I $E(X,1,4)="Pg. " Q
"RTN","ORCXPND3",162,0)
 . I X["PHYSICIANS' SIGNATURE" Q
"RTN","ORCXPND3",163,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X S:$L(X) BCNT=0
"RTN","ORCXPND3",164,0)
 K ^TMP("ORDATA",$J)
"RTN","ORCXPND3",165,0)
 Q
"RTN","ORDSGCHK")
0^67^B89700507
"RTN","ORDSGCHK",1,0)
ORDSGCHK ; SLC/AGP - PRE 0.5 DOSE ORDER CHECKS;09/17/2009 ;09/22/10  07:37
"RTN","ORDSGCHK",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17, 1997;Build 85
"RTN","ORDSGCHK",3,0)
 ;
"RTN","ORDSGCHK",4,0)
EN(ORY,DFN,TYPE,OIL) ;
"RTN","ORDSGCHK",5,0)
 N ARRAY,CNT,NAME
"RTN","ORDSGCHK",6,0)
 ;if renewed order build OIL array
"RTN","ORDSGCHK",7,0)
 I $G(ORREN)=1,+$G(ORIFN)>0 D
"RTN","ORDSGCHK",8,0)
 .;IV orders should only have a null type
"RTN","ORDSGCHK",9,0)
 .I TYPE="" S TYPE="PSIV"
"RTN","ORDSGCHK",10,0)
 .D BLDREN(TYPE,ORIFN,.OIL)
"RTN","ORDSGCHK",11,0)
 ;Build easy array to work with
"RTN","ORDSGCHK",12,0)
 S CNT=0 F  S CNT=$O(OIL(CNT)) Q:CNT'>0  D
"RTN","ORDSGCHK",13,0)
 .S NODE=$G(OIL(CNT)) Q:$P(NODE,U,2)="PSIV"
"RTN","ORDSGCHK",14,0)
 .S NAME=$P(NODE,U,2)
"RTN","ORDSGCHK",15,0)
 .Q:'$P(NODE,U,3)
"RTN","ORDSGCHK",16,0)
 .S ARRAY(NAME,$P(NODE,U,3))=NODE
"RTN","ORDSGCHK",17,0)
 I TYPE="PSIV" D IV(.ORY,DFN,.ARRAY)
"RTN","ORDSGCHK",18,0)
 I TYPE'="PSIV" D NONIV(.ORY,DFN,.ARRAY)
"RTN","ORDSGCHK",19,0)
 ;I TYPE="PSO"!(TYPE="PSI") D NONIV(.ORY,DFN,.ARRAY)
"RTN","ORDSGCHK",20,0)
 Q
"RTN","ORDSGCHK",21,0)
 ;
"RTN","ORDSGCHK",22,0)
BLDREN(TYPE,ORIFN,OUT) ;
"RTN","ORDSGCHK",23,0)
 N CNT,EXTVALUE,ISOI,ITEM,LOC,NAME,NUM,NODE,ORDIALOG,TEXT,VALUE,X0
"RTN","ORDSGCHK",24,0)
 S CNT=$O(OUT(""),-1)
"RTN","ORDSGCHK",25,0)
 S X0=$G(^OR(100,+ORIFN,0))
"RTN","ORDSGCHK",26,0)
 S ORDIALOG=+$P(X0,U,5)
"RTN","ORDSGCHK",27,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORDSGCHK",28,0)
 D GETORDER^ORCD(+ORIFN)
"RTN","ORDSGCHK",29,0)
 S LOC=0 F  S LOC=$O(ORDIALOG(LOC)) Q:LOC'>0  D
"RTN","ORDSGCHK",30,0)
 .S ITEM=$P($G(ORDIALOG(LOC)),U,2)
"RTN","ORDSGCHK",31,0)
 .I ITEM="" Q
"RTN","ORDSGCHK",32,0)
 .I ITEM="COMMENT" Q
"RTN","ORDSGCHK",33,0)
 .S ISOI=$S($G(ORDIALOG(LOC,0))[101.43:1,1:0)
"RTN","ORDSGCHK",34,0)
 .S NUM=0 F  S NUM=$O(ORDIALOG(LOC,NUM)) Q:NUM'>0  D
"RTN","ORDSGCHK",35,0)
 ..I NUM<1 Q
"RTN","ORDSGCHK",36,0)
 ..S VALUE=$G(ORDIALOG(LOC,NUM)),EXTVALUE=""
"RTN","ORDSGCHK",37,0)
 ..I ISOI=1 D
"RTN","ORDSGCHK",38,0)
 ...S EXTVALUE=$P($G(^ORD(101.43,VALUE,0)),U)
"RTN","ORDSGCHK",39,0)
 ...I $P($G(^ORD(101.41,LOC,0)),U)="OR GTX ADDITIVE" S ITEM="ADDITIVE"
"RTN","ORDSGCHK",40,0)
 ..I ITEM="RATE" S EXTVALUE=VALUE
"RTN","ORDSGCHK",41,0)
 ..S TEXT=TYPE_U_ITEM_U_NUM_U_VALUE_U_EXTVALUE
"RTN","ORDSGCHK",42,0)
 ..S CNT=CNT+1,OUT(CNT)=TEXT
"RTN","ORDSGCHK",43,0)
 Q
"RTN","ORDSGCHK",44,0)
 ;
"RTN","ORDSGCHK",45,0)
DURATION(STR) ;
"RTN","ORDSGCHK",46,0)
 N LEN,VAL,UNIT,IVLMT,TVAL
"RTN","ORDSGCHK",47,0)
 S (UNIT,IVLMT)="",VAL=0
"RTN","ORDSGCHK",48,0)
 I $E($$LOW^XLFSTR(STR))="f" D
"RTN","ORDSGCHK",49,0)
 . I STR["for a total of" D  Q
"RTN","ORDSGCHK",50,0)
 . .S VAL=$P(STR," ",5)
"RTN","ORDSGCHK",51,0)
 . .S UNIT=$P(STR," ",6)
"RTN","ORDSGCHK",52,0)
 . .S STR=""
"RTN","ORDSGCHK",53,0)
 . S VAL=$P(STR," ",2)
"RTN","ORDSGCHK",54,0)
 . S UNIT=$E($P(STR," ",3))
"RTN","ORDSGCHK",55,0)
 . S STR=""
"RTN","ORDSGCHK",56,0)
 I $E($$LOW^XLFSTR(STR))="w" D
"RTN","ORDSGCHK",57,0)
 . S TVAL=$P(STR," ",4)
"RTN","ORDSGCHK",58,0)
 . S VAL=+TVAL
"RTN","ORDSGCHK",59,0)
 . S LEN=$F(TVAL,VAL)
"RTN","ORDSGCHK",60,0)
 . I $P(VAL,".")="" S VAL=0_VAL
"RTN","ORDSGCHK",61,0)
 . F  S UNIT=$E(TVAL,LEN) Q:((UNIT'=0)&(UNIT'="."))  D
"RTN","ORDSGCHK",62,0)
 . . S LEN=LEN+1
"RTN","ORDSGCHK",63,0)
 . S STR=""
"RTN","ORDSGCHK",64,0)
 I $L(UNIT),$L(VAL) S IVLMT=VAL_$$UP^XLFSTR(UNIT)
"RTN","ORDSGCHK",65,0)
 I STR'="",IVLMT="" D
"RTN","ORDSGCHK",66,0)
 .I STR["ML" S IVLMT=$P(STR,"M")_"M" Q
"RTN","ORDSGCHK",67,0)
 .I STR["CC" S IVLMT=$P(STR,"C")_"M" Q
"RTN","ORDSGCHK",68,0)
 .S IVLMT=STR
"RTN","ORDSGCHK",69,0)
 Q IVLMT
"RTN","ORDSGCHK",70,0)
 ;
"RTN","ORDSGCHK",71,0)
IV(ORY,DFN,ARRAY) ;
"RTN","ORDSGCHK",72,0)
 N CNT,DRUG,DRUGIEN,DRUGNAME,NAME,NUM,OI,ORBASE,ORPSJARR,STR,STRENGTH
"RTN","ORDSGCHK",73,0)
 ;
"RTN","ORDSGCHK",74,0)
 ;populate single values from order
"RTN","ORDSGCHK",75,0)
 S ORPSJARR("TVOL_DUR")="",ORPSJARR("SCHEDULE")=""
"RTN","ORDSGCHK",76,0)
 I $D(ARRAY("DAYS")) S ORPSJARR("TVOL_DUR")=$$DURATION($P(ARRAY("DAYS",1),U,4))
"RTN","ORDSGCHK",77,0)
 ;S RATE=$P(ARRAY(NAME,1),U,4)
"RTN","ORDSGCHK",78,0)
 S ORPSJARR("MR_IEN")=$P(ARRAY("ROUTE",1),U,4)
"RTN","ORDSGCHK",79,0)
 I $D(ARRAY("SCHEDULE")) S ORPSJARR("SCHEDULE")=$P(ARRAY("SCHEDULE",1),U,4)
"RTN","ORDSGCHK",80,0)
 S ORPSJARR("IV_TYPE")=$S($P(ARRAY("TYPE",1),U,4)="I":1,1:2)
"RTN","ORDSGCHK",81,0)
 I ORPSJARR("IV_TYPE")=2 S ORPSJARR("INF_RATE")=$P(ARRAY("RATE",1),U,5)
"RTN","ORDSGCHK",82,0)
 ;
"RTN","ORDSGCHK",83,0)
 ;build additive first, Drug, Strength/unit, bag
"RTN","ORDSGCHK",84,0)
 F NAME="ADDITIVE","ORDERABLE" D
"RTN","ORDSGCHK",85,0)
 .K DRUG
"RTN","ORDSGCHK",86,0)
 .S CNT=0,NUM=0
"RTN","ORDSGCHK",87,0)
 .F  S NUM=$O(ARRAY(NAME,NUM)) Q:NUM'>0  D
"RTN","ORDSGCHK",88,0)
 ..S CNT=CNT+1
"RTN","ORDSGCHK",89,0)
 ..S NODE=$G(ARRAY(NAME,NUM)),OI=$P(NODE,U,4)
"RTN","ORDSGCHK",90,0)
 ..;
"RTN","ORDSGCHK",91,0)
 ..S DRUGIEN=+$P(^ORD(101.43,OI,0),U,2) I DRUGIEN="" Q  ;PHARMACY OI FROM 101.43
"RTN","ORDSGCHK",92,0)
 ..S DRUGNAME=$P($G(ARRAY(NAME,NUM)),U,5) ;OI NAME
"RTN","ORDSGCHK",93,0)
 ..;
"RTN","ORDSGCHK",94,0)
 ..I NAME="ADDITIVE" D  Q
"RTN","ORDSGCHK",95,0)
 ...S STRENGTH=$P($G(ARRAY("STRENGTH",NUM)),U,4)_" "_$P($G(ARRAY("UNITS",NUM)),U,4)
"RTN","ORDSGCHK",96,0)
 ...S STR=+DRUGIEN_U_DRUGNAME_U_STRENGTH_U_$P($G(ARRAY("ADDFREQ",NUM)),U,4)
"RTN","ORDSGCHK",97,0)
 ...S ORPSJARR("AD",CNT)=STR
"RTN","ORDSGCHK",98,0)
 ..;
"RTN","ORDSGCHK",99,0)
 ..;Soltution information
"RTN","ORDSGCHK",100,0)
 ..S STR=+DRUGIEN_U_DRUGNAME_U_$P($G(ARRAY("VOLUME",NUM)),U,4)_" ML"
"RTN","ORDSGCHK",101,0)
 ..S ORPSJARR("SOL",CNT)=STR
"RTN","ORDSGCHK",102,0)
 ;
"RTN","ORDSGCHK",103,0)
 S ORBASE(1)="ORDSGCHK1"
"RTN","ORDSGCHK",104,0)
 S ORBASE(2)="ORDSGCHK2"
"RTN","ORDSGCHK",105,0)
 D DOSE^PSJAPIDS(.ORBASE,DFN,.ORPSJARR)
"RTN","ORDSGCHK",106,0)
 D PARSEOUT
"RTN","ORDSGCHK",107,0)
 Q
"RTN","ORDSGCHK",108,0)
 ;
"RTN","ORDSGCHK",109,0)
NONIV(ORY,DFN,ARRAY) ;
"RTN","ORDSGCHK",110,0)
 N CNT,DOSESTR,DRUG,DRUGARR,DRUGIEN,DRUGNAME,DUR,NAME,NODE
"RTN","ORDSGCHK",111,0)
 N OIIEN,ORBASE,ORDRUG,ORPSARR,PACK,PSNODE,SUB,TYPE,USAGE
"RTN","ORDSGCHK",112,0)
 ;
"RTN","ORDSGCHK",113,0)
 ;assume same drug type used throughout the order dialog
"RTN","ORDSGCHK",114,0)
 ;free text dose do not have a drug.
"RTN","ORDSGCHK",115,0)
 S DRUGIEN=$P($G(ARRAY("DRUG",1)),U,4)
"RTN","ORDSGCHK",116,0)
 I +DRUGIEN>0,$$EXMT^PSSDSAPI(DRUGIEN)=1 Q
"RTN","ORDSGCHK",117,0)
 ;if no ARRAY(DOSE) node set it to null to force free text evaluation
"RTN","ORDSGCHK",118,0)
 ;I '$D(ARRAY("DOSE")),$D(ARRAY("INSTR")) N I S I=0 F  S I=$O(ARRAY("INSTR",I)) Q:'I  S ARRAY("DOSE",I)=$P(ARRAY("INSTR",I),U)_"^DOSE^"_I_"^"
"RTN","ORDSGCHK",119,0)
 N I S I=0 F  S I=$O(ARRAY("INSTR",I)) Q:'I  I '$D(ARRAY("DOSE",I))  S ARRAY("DOSE",I)=$P(ARRAY("INSTR",I),U)_"^DOSE^"_I_"^"
"RTN","ORDSGCHK",120,0)
 ;
"RTN","ORDSGCHK",121,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","ORDSGCHK",122,0)
 .S SUB=$$GETSUB(NAME) I SUB="" Q
"RTN","ORDSGCHK",123,0)
 .S CNT=0 F  S CNT=$O(ARRAY(NAME,CNT)) Q:CNT'>0  D
"RTN","ORDSGCHK",124,0)
 ..S NODE=$G(ARRAY(NAME,CNT))
"RTN","ORDSGCHK",125,0)
 ..;
"RTN","ORDSGCHK",126,0)
 ..;get dose information and drug information from Dose Prompt
"RTN","ORDSGCHK",127,0)
 ..I SUB="DOSE" D
"RTN","ORDSGCHK",128,0)
 ...S PACK=$P(NODE,U)
"RTN","ORDSGCHK",129,0)
 ...S TYPE=$S($P(NODE,U)="PSO":"O",1:"I")
"RTN","ORDSGCHK",130,0)
 ...S DOSESTR=$P(NODE,U,4)
"RTN","ORDSGCHK",131,0)
 ...;
"RTN","ORDSGCHK",132,0)
 ...;free text dose
"RTN","ORDSGCHK",133,0)
 ...I DOSESTR="" D  Q
"RTN","ORDSGCHK",134,0)
 ....N ORQUIT S ORQUIT=0
"RTN","ORDSGCHK",135,0)
 ....I $G(ORREN)=1 D
"RTN","ORDSGCHK",136,0)
 .....N PSIFN S PSIFN=$G(^OR(100,+ORIFN,4))
"RTN","ORDSGCHK",137,0)
 .....S:TYPE="O" PSIFN=$TR(PSIFN,"S","P")_$S(PSIFN?1.N:"R",1:"")
"RTN","ORDSGCHK",138,0)
 .....K ^TMP("PS",$J)
"RTN","ORDSGCHK",139,0)
 .....D OEL^PSOORRL(DFN,PSIFN_";"_TYPE)  ;DBIA 2400
"RTN","ORDSGCHK",140,0)
 .....I '$D(^TMP("PS",$J)) Q
"RTN","ORDSGCHK",141,0)
 .....S ORPSARR(CNT,"DO")=$P($G(ARRAY("INSTR",CNT)),U,4)
"RTN","ORDSGCHK",142,0)
 .....S ORDRUG(CNT,"RX_NUM")=TYPE_";1;PROSPECTIVE;"_CNT
"RTN","ORDSGCHK",143,0)
 .....S ORDRUG(CNT,"DRUG_IEN")=+$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORDSGCHK",144,0)
 .....S ORDRUG(CNT,"DRUG_NM")=$P($G(^TMP("PS",$J,0)),U)
"RTN","ORDSGCHK",145,0)
 .....S ORQUIT=1
"RTN","ORDSGCHK",146,0)
 .....K ^TMP("PS",$J)
"RTN","ORDSGCHK",147,0)
 ....I ORQUIT=1 Q
"RTN","ORDSGCHK",148,0)
 ....S ORPSARR(CNT,"DO")=$P($G(ARRAY("INSTR",CNT)),U,4)
"RTN","ORDSGCHK",149,0)
 ....S ORDRUG(CNT,"DRUG_NM")=$P($G(ARRAY("ORDERABLE",1)),U,5)
"RTN","ORDSGCHK",150,0)
 ....S ORDRUG(CNT,"RX_NUM")=TYPE_";1;PROSPECTIVE;"_CNT
"RTN","ORDSGCHK",151,0)
 ....;S OIIEN=$P($G(ARRAY("ORDERABLE",CNT)),U,4)
"RTN","ORDSGCHK",152,0)
 ....S OIIEN=$P($G(ARRAY("ORDERABLE",1)),U,4) ;orderable only exists for first item (in complex order)
"RTN","ORDSGCHK",153,0)
 ....S ORDRUG("OI")=+$P($G(^ORD(101.43,OIIEN,0)),U,2)
"RTN","ORDSGCHK",154,0)
 ....S ORDRUG("PACKAGE")=$S(PACK="PSO":"O",PACK="PSH":"X",1:"I")
"RTN","ORDSGCHK",155,0)
 ....S PSNODE=$G(^ORD(101.43,OIIEN,"PS")),USAGE=""
"RTN","ORDSGCHK",156,0)
 ....I $P(PSNODE,U,4)=1 S USAGE=USAGE_"A"
"RTN","ORDSGCHK",157,0)
 ....I $P(PSNODE,U,3)=1 S USAGE=USAGE_"B"
"RTN","ORDSGCHK",158,0)
 ....S ORDRUG("OI_USAGE")=USAGE
"RTN","ORDSGCHK",159,0)
 ...;
"RTN","ORDSGCHK",160,0)
 ...S DRUGIEN=$P(DOSESTR,"&",6)
"RTN","ORDSGCHK",161,0)
 ...K ^TMP($J,"DRUGARR")
"RTN","ORDSGCHK",162,0)
 ...D ZERO^PSS50(DRUGIEN,,,,,"DRUGARR")
"RTN","ORDSGCHK",163,0)
 ...S DRUGNAME=$G(^TMP($J,"DRUGARR",DRUGIEN,.01))
"RTN","ORDSGCHK",164,0)
 ...K ^TMP($J,"DRUGARR")
"RTN","ORDSGCHK",165,0)
 ...;
"RTN","ORDSGCHK",166,0)
 ...;Local Possible Dose
"RTN","ORDSGCHK",167,0)
 ...I $P(DOSESTR,"&")="" D  Q
"RTN","ORDSGCHK",168,0)
 ....S ORPSARR(CNT,"DO")=$P($G(ARRAY("INSTR",CNT)),U,4)
"RTN","ORDSGCHK",169,0)
 ....S ORDRUG(CNT,"RX_NUM")=TYPE_";1;PROSPECTIVE;"_CNT
"RTN","ORDSGCHK",170,0)
 ....S ORDRUG(CNT,"DRUG_IEN")=DRUGIEN
"RTN","ORDSGCHK",171,0)
 ....S ORDRUG(CNT,"DRUG_NM")=$P($G(ARRAY("ORDERABLE",1)),U,5) ;DRUGNAME
"RTN","ORDSGCHK",172,0)
 ...;
"RTN","ORDSGCHK",173,0)
 ...;Possible Dose
"RTN","ORDSGCHK",174,0)
 ...S ORPSARR(CNT,"DRG_AMT")=$P(DOSESTR,"&")
"RTN","ORDSGCHK",175,0)
 ...S ORPSARR(CNT,"DRG_UNIT")=$P(DOSESTR,"&",2)
"RTN","ORDSGCHK",176,0)
 ...S ORDRUG(CNT,"RX_NUM")=TYPE_";1;PROSPECTIVE;"_CNT
"RTN","ORDSGCHK",177,0)
 ...S ORDRUG(CNT,"DRUG_IEN")=DRUGIEN
"RTN","ORDSGCHK",178,0)
 ...S ORDRUG(CNT,"DRUG_NM")=$P($G(ARRAY("ORDERABLE",1)),U,5) ;DRUGNAME
"RTN","ORDSGCHK",179,0)
 ..;
"RTN","ORDSGCHK",180,0)
 ..;Additional Order Data
"RTN","ORDSGCHK",181,0)
 ..I SUB="DRATE" D  Q
"RTN","ORDSGCHK",182,0)
 ...S DUR=$P($P(NODE,U,4)," ")
"RTN","ORDSGCHK",183,0)
 ...;S DUR=DUR_$E($P($P(NODE,U,4)," "),1)
"RTN","ORDSGCHK",184,0)
 ...S ORPSARR(CNT,SUB)=DUR_$$DRATESTR($P($P(NODE,U,4)," ",2))
"RTN","ORDSGCHK",185,0)
 ..S ORPSARR(CNT,SUB)=$P(NODE,U,4)
"RTN","ORDSGCHK",186,0)
 ;
"RTN","ORDSGCHK",187,0)
 S ORBASE(1)="ORDSGCHK1"
"RTN","ORDSGCHK",188,0)
 S ORBASE(2)="ORDSGCHK2"
"RTN","ORDSGCHK",189,0)
 D DOSE^PSSDSAPD(.ORBASE,DFN,.ORPSARR,.ORDRUG)
"RTN","ORDSGCHK",190,0)
 D PARSEOUT
"RTN","ORDSGCHK",191,0)
 Q
"RTN","ORDSGCHK",192,0)
 ;
"RTN","ORDSGCHK",193,0)
PARSEOUT ;PARSE OUTPUT GLOBAL
"RTN","ORDSGCHK",194,0)
 N ORNBP S ORNBP=""
"RTN","ORDSGCHK",195,0)
 I $D(^TMP($J,"ORDSGCHK2")) D
"RTN","ORDSGCHK",196,0)
 .I $G(^TMP($J,"ORDSGCHK2","OUT",0))<0 S ORY=$G(ORY)+1,ORY(ORY)="ERR^Drug Dosage checks were not able to be performed."
"RTN","ORDSGCHK",197,0)
 .I $D(^TMP($J,"ORDSGCHK2","OUT","DOSE","ERROR")) D
"RTN","ORDSGCHK",198,0)
 ..N I S I="" F  S I=$O(^TMP($J,"ORDSGCHK2","OUT","DOSE","ERROR",I)) Q:'$L(I)  D
"RTN","ORDSGCHK",199,0)
 ...N J S J="" F  S J=$O(^TMP($J,"ORDSGCHK2","OUT","DOSE","ERROR",I,J)) Q:'$L(J)  D
"RTN","ORDSGCHK",200,0)
 .... I $L($G(^TMP($J,"ORDSGCHK2","OUT","DOSE","ERROR",I,J,"MSG"))) S ORY=$G(ORY)+1,ORY(ORY)="ERR^"_^TMP($J,"ORDSGCHK2","OUT","DOSE","ERROR",I,J,"MSG") D
"RTN","ORDSGCHK",201,0)
 ..... I $L($G(^TMP($J,"ORDSGCHK2","OUT","DOSE","ERROR",I,J,"TEXT"))) S ORY(ORY)=ORY(ORY)_".  "_$G(^TMP($J,"ORDSGCHK2","OUT","DOSE","ERROR",I,J,"TEXT"))
"RTN","ORDSGCHK",202,0)
 .I $D(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE")) D
"RTN","ORDSGCHK",203,0)
 ..N I S I="" F  S I=$O(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I)) Q:'$L(I)  D
"RTN","ORDSGCHK",204,0)
 ...N J S J="" F  S J=$O(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J)) Q:'$L(J)  D
"RTN","ORDSGCHK",205,0)
 .... I $G(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J))["could not be performed" S ORNBP=^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J) Q
"RTN","ORDSGCHK",206,0)
 .... I $G(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J))["Error Summary" S ORNBP=^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J) Q
"RTN","ORDSGCHK",207,0)
 .... I $G(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J))["Reason(s):" S ORNBP=ORNBP_"."_^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J) Q
"RTN","ORDSGCHK",208,0)
 .... I $G(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J))["           " S ORNBP=ORNBP_"."_$P(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J),"           ",2) Q
"RTN","ORDSGCHK",209,0)
 .... I $L(ORNBP)>1 S ORY=$G(ORY)+1,ORY(ORY)="ERR^"_ORNBP,ORNBP=""
"RTN","ORDSGCHK",210,0)
 .... I $L($G(^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J))) S ORY=$G(ORY)+1,ORY(ORY)="ERR^"_^TMP($J,"ORDSGCHK2","OUT","EXCEPTIONS","DOSE",I,J)
"RTN","ORDSGCHK",211,0)
 .N I S I="" F  S I=$O(^TMP($J,"ORDSGCHK2","OUT","DOSE",I)) Q:'$L(I)  D
"RTN","ORDSGCHK",212,0)
 ..Q:(I="ERROR")
"RTN","ORDSGCHK",213,0)
 ..N J S J="" F  S J=$O(^TMP($J,"ORDSGCHK2","OUT","DOSE",I,J)) Q:'$L(J)  D
"RTN","ORDSGCHK",214,0)
 ...N TYP S TYP="" F  S TYP=$O(^TMP($J,"ORDSGCHK2","OUT","DOSE",I,J,TYP)) Q:'$L(TYP)  D
"RTN","ORDSGCHK",215,0)
 ....N ORDIEN S ORDIEN=0 F  S ORDIEN=$O(^TMP($J,"ORDSGCHK2","OUT","DOSE",I,J,TYP,"MESSAGE",ORDIEN)) Q:'ORDIEN  D
"RTN","ORDSGCHK",216,0)
 .....I $L($G(^TMP($J,"ORDSGCHK2","OUT","DOSE",I,J,TYP,"MESSAGE",ORDIEN))) D
"RTN","ORDSGCHK",217,0)
 ......N OROCTYPE S OROCTYPE="DS" I TYP="3_GENERAL" S OROCTYPE="ERR"
"RTN","ORDSGCHK",218,0)
 ......S ORY=$G(ORY)+1,ORY(ORY)=OROCTYPE_U_^TMP($J,"ORDSGCHK2","OUT","DOSE",I,J,TYP,"MESSAGE",ORDIEN)
"RTN","ORDSGCHK",219,0)
 I $L(ORNBP)>1 S ORY=$G(ORY)+1,ORY(ORY)="ERR^"_ORNBP,ORNBP=""
"RTN","ORDSGCHK",220,0)
 Q
"RTN","ORDSGCHK",221,0)
 ;
"RTN","ORDSGCHK",222,0)
GETSUB(NAME) ;
"RTN","ORDSGCHK",223,0)
 I NAME="CONJ" Q "CONJ"
"RTN","ORDSGCHK",224,0)
 I NAME="DAYS" Q "DRATE"
"RTN","ORDSGCHK",225,0)
 I NAME="DOSE" Q "DOSE"
"RTN","ORDSGCHK",226,0)
 I NAME="ROUTE" Q "MR_IEN"
"RTN","ORDSGCHK",227,0)
 I NAME="SCHEDULE" Q "SCHEDULE"
"RTN","ORDSGCHK",228,0)
 Q ""
"RTN","ORDSGCHK",229,0)
 ;
"RTN","ORDSGCHK",230,0)
DRATESTR(ORIN) ;change the form of the DURATION
"RTN","ORDSGCHK",231,0)
 ;DAYS=D,WEEKS=W,MONTHS=L,HOURS=H,MINUTES=M
"RTN","ORDSGCHK",232,0)
 I $$UP^XLFSTR(ORIN)="MONTHS" Q "L"
"RTN","ORDSGCHK",233,0)
 Q $E($$UP^XLFSTR(ORIN))
"RTN","ORDSGCHK",234,0)
 ;
"RTN","OREVNTX")
0^96^B77019944
"RTN","OREVNTX",1,0)
OREVNTX ; SLC/MKB - Event delayed orders RPC's ;06/16/10  05:32
"RTN","OREVNTX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**141,243,280**;Dec 17, 1997;Build 85
"RTN","OREVNTX",3,0)
 ;
"RTN","OREVNTX",4,0)
PAT(ORY,DFN)    ; -- Returns currently delayed events for patient DFN
"RTN","OREVNTX",5,0)
 N EVT,CNT,X,Y S DFN=+$G(DFN),(EVT,CNT)=0
"RTN","OREVNTX",6,0)
 F  S EVT=+$O(^ORE(100.2,"AE",DFN,EVT)) Q:EVT<1  S Y=+$O(^(EVT,0)) D
"RTN","OREVNTX",7,0)
 . I $G(^ORE(100.2,Y,1)) K ^ORE(100.2,"AE",DFN,EVT,Y) Q
"RTN","OREVNTX",8,0)
 . Q:$$LAPSED(Y)  ;I $$EMPTY(Y) D CANCEL(Y) Q
"RTN","OREVNTX",9,0)
 . Q:$O(^ORE(100.2,"DAD",Y,0))  ;has children
"RTN","OREVNTX",10,0)
 . S X=$P($G(^ORD(100.5,EVT,0)),U,8),X="Delayed "_$$LOWER^VALM1(X)
"RTN","OREVNTX",11,0)
 . S CNT=CNT+1,ORY(CNT)=Y_U_X
"RTN","OREVNTX",12,0)
 S:CNT ORY(0)=CNT
"RTN","OREVNTX",13,0)
 Q
"RTN","OREVNTX",14,0)
 ;
"RTN","OREVNTX",15,0)
EXISTS(DFN,EVT) ; -- Returns 1 if patient DFN has delayed orders for EVT,
"RTN","OREVNTX",16,0)
 ;    or 2 if parent/sibling event has delayed orders, else 0
"RTN","OREVNTX",17,0)
 ;
"RTN","OREVNTX",18,0)
 N X,Y,I S Y=0 I '$G(DFN)!'$G(EVT) G EXQ
"RTN","OREVNTX",19,0)
 I $O(^ORE(100.2,"AE",+DFN,+EVT,0)) S Y=1 G EXQ
"RTN","OREVNTX",20,0)
 S X=+$P($G(^ORD(100.5,+EVT,0)),U,12) I X D  G EXQ ;ck parent,siblings
"RTN","OREVNTX",21,0)
 . I $O(^ORE(100.2,"AE",+DFN,X,0)) S Y=2 Q
"RTN","OREVNTX",22,0)
 . S I=0 F  S I=+$O(^ORD(100.5,"DAD",X,I)) Q:I<1  I $O(^ORE(100.2,"AE",+DFN,I,0)) S Y=2 Q
"RTN","OREVNTX",23,0)
EXQ Q Y
"RTN","OREVNTX",24,0)
 ;
"RTN","OREVNTX",25,0)
LIST(ORY,DFN)   ; -- Returns all processed events for patient DFN as
"RTN","OREVNTX",26,0)
 ;    ORY(#) = PatEvtIEN ^ Display Text ^ EvtDateTime
"RTN","OREVNTX",27,0)
 ;             in reverse chronological order
"RTN","OREVNTX",28,0)
 N IDT,DA,CNT,X0,X1,EVT,DC,X
"RTN","OREVNTX",29,0)
 S DFN=+$G(DFN),(IDT,CNT)=0
"RTN","OREVNTX",30,0)
 F  S IDT=$O(^ORE(100.2,"AC",DFN,IDT)) Q:IDT<1  D
"RTN","OREVNTX",31,0)
 . S DA=0 F  S DA=+$O(^ORE(100.2,"AC",DFN,IDT,DA)) Q:DA<1  D
"RTN","OREVNTX",32,0)
 .. S X0=$G(^ORE(100.2,DA,0)),X1=$G(^(1)) Q:$P(X1,U,5)  ;has parent
"RTN","OREVNTX",33,0)
 .. S EVT=+$P(X0,U,2),DC=+$P(X1,U,3)
"RTN","OREVNTX",34,0)
 .. I '$P(X0,U,4),'$O(^ORE(100.2,DA,2,0)),'$O(^ORE(100.2,DA,3,0)),'$D(^OR(100,"AEVNT",DFN_";DPT(",DA)) Q  ;no orders
"RTN","OREVNTX",35,0)
 .. S I=+$O(^ORE(100.2,DA,10,"B"),-1),X=$P($G(^(I,0)),U,2) I X="LP"!(X="CA") Q  ;lapsed or cancelled
"RTN","OREVNTX",36,0)
 .. ;Q if not current admission?
"RTN","OREVNTX",37,0)
 .. S X=$S(EVT:$P($G(^ORD(100.5,EVT,0)),U,8),DC:$P($G(^ORD(100.6,DC,0)),U,5),1:"UNSPECIFIED EVENT")
"RTN","OREVNTX",38,0)
 .. S X=$$LOWER^VALM1(X),CNT=CNT+1,ORY(CNT)=DA_U_X_U_$P(X1,U)
"RTN","OREVNTX",39,0)
 S:CNT ORY(0)=CNT
"RTN","OREVNTX",40,0)
 Q
"RTN","OREVNTX",41,0)
 ;
"RTN","OREVNTX",42,0)
COMP(PTEVT) ; -- Returns 1 or 0, if PTEVT has been completed
"RTN","OREVNTX",43,0)
 N Y,I S Y=$S($G(^ORE(100.2,+$G(PTEVT),1)):1,1:0)
"RTN","OREVNTX",44,0)
 I Y S I=+$O(^ORE(100.2,+$G(PTEVT),10,0)) S:$P($G(^(I,0)),U,2)="CA" Y=0
"RTN","OREVNTX",45,0)
 Q Y
"RTN","OREVNTX",46,0)
 ;
"RTN","OREVNTX",47,0)
ACTIVE(ORY,TYPE)     ; -- Returns all active events [of TYPE] from #100.5
"RTN","OREVNTX",48,0)
 ;  where TYPE=string containing any of the codes from the TYPE field
"RTN","OREVNTX",49,0)
 N NM,IEN,CNT,X0,X S CNT=0,TYPE=$G(TYPE)
"RTN","OREVNTX",50,0)
 S NM="" F  S NM=$O(^ORD(100.5,"C",NM)) Q:NM=""  D
"RTN","OREVNTX",51,0)
 . S IEN=0 F  S IEN=+$O(^ORD(100.5,"C",NM,IEN)) Q:IEN<1  D
"RTN","OREVNTX",52,0)
 .. S X0=$G(^ORD(100.5,IEN,0)) I '$L($P(X0,U,2)) D  ;Child event
"RTN","OREVNTX",53,0)
 ... S X=$P(X0,U,12) S:X $P(X0,U,2)=$P($G(^ORD(100.5,+X,0)),U,2)
"RTN","OREVNTX",54,0)
 .. I $L(TYPE),TYPE'[$P(X0,U,2) Q
"RTN","OREVNTX",55,0)
 .. Q:$O(^ORD(100.5,"DAD",IEN,0))  ;Parent event
"RTN","OREVNTX",56,0)
 .. S CNT=CNT+1,ORY(CNT)=IEN_U_X0
"RTN","OREVNTX",57,0)
 S:CNT ORY(0)=CNT
"RTN","OREVNTX",58,0)
 Q
"RTN","OREVNTX",59,0)
 ;
"RTN","OREVNTX",60,0)
NAME(PTEVT)     ; -- Return name of Patient Event
"RTN","OREVNTX",61,0)
 N X,Y,Z S X=+$P($G(^ORE(100.2,+$G(PTEVT),0)),U,2),Z=$G(^(1))
"RTN","OREVNTX",62,0)
 S:X Y=$P($G(^ORD(100.5,X,0)),U,8)
"RTN","OREVNTX",63,0)
 I 'X S X=+$P(Z,U,3),Y=$P($G(^ORD(100.6,X,0)),U,5)
"RTN","OREVNTX",64,0)
 S Y=$S('Z:"Delayed ",1:"")_$$LOWER^VALM1(Y)
"RTN","OREVNTX",65,0)
 Q Y
"RTN","OREVNTX",66,0)
 ;
"RTN","OREVNTX",67,0)
SHORTNM(PTEVT)  ; -- Return Short Name of Patient Event
"RTN","OREVNTX",68,0)
 ;   or first 15 characters of Event Name if unspecified
"RTN","OREVNTX",69,0)
 N X,Y,Y0 S X=+$P($G(^ORE(100.2,+$G(PTEVT),0)),U,2) I X D
"RTN","OREVNTX",70,0)
 . S Y0=$G(^ORD(100.5,X,0)),Y=$P(Y0,U,10)
"RTN","OREVNTX",71,0)
 . S:'$L(Y) Y=$E($P(Y0,U,8),1,15)
"RTN","OREVNTX",72,0)
 I 'X S X=+$P($G(^ORE(100.2,+$G(PTEVT),1)),U,3),Y=$E($P($G(^ORD(100.6,X,0)),U,5),1,15)
"RTN","OREVNTX",73,0)
 Q Y
"RTN","OREVNTX",74,0)
 ;
"RTN","OREVNTX",75,0)
EVT(PTEVT)      ; -- Return Event ptr #100.5, given PTEVT ptr #100.2
"RTN","OREVNTX",76,0)
 Q +$P($G(^ORE(100.2,+$G(PTEVT),0)),U,2)
"RTN","OREVNTX",77,0)
 ;
"RTN","OREVNTX",78,0)
DC(PTEVT) ; -- Return DC Rule ptr #100.6, given PTEVT ptr #100.2
"RTN","OREVNTX",79,0)
 I $P($G(^ORE(100.2,+$G(PTEVT),1)),U,5) S PTEVT=$P(^(1),U,5) ;use parent
"RTN","OREVNTX",80,0)
 Q +$P($G(^ORE(100.2,+$G(PTEVT),1)),U,3)
"RTN","OREVNTX",81,0)
 ;
"RTN","OREVNTX",82,0)
TYPE(PTEVT)     ; -- Return Type of Patient Event (i.e. A/D/T)
"RTN","OREVNTX",83,0)
 N X,Y S X=+$P($G(^ORE(100.2,+$G(PTEVT),0)),U,2)
"RTN","OREVNTX",84,0)
 I $P($G(^ORD(100.5,X,0)),U,12) S X=$P(^(0),U,12) ;use parent
"RTN","OREVNTX",85,0)
 S Y=$S(X:$P($G(^ORD(100.5,X,0)),U,2),1:"DC")
"RTN","OREVNTX",86,0)
 Q Y
"RTN","OREVNTX",87,0)
 ;
"RTN","OREVNTX",88,0)
DIV(PTEVT)      ; -- Return Division for PTEVT
"RTN","OREVNTX",89,0)
 N X,Y S X=+$P($G(^ORE(100.2,+$G(PTEVT),0)),U,2)
"RTN","OREVNTX",90,0)
 I $P($G(^ORD(100.5,X,0)),U,12) S X=$P(^(0),U,12) ;use parent
"RTN","OREVNTX",91,0)
 S Y=+$P($G(^ORD(100.5,X,0)),U,3) S:Y<1 Y=+$G(DUZ(2))
"RTN","OREVNTX",92,0)
 Q Y
"RTN","OREVNTX",93,0)
 ;
"RTN","OREVNTX",94,0)
LOC(PTEVT)      ; -- Return Default Ordering Location for PTEVT
"RTN","OREVNTX",95,0)
 N X,X0,Y S X=+$P($G(^ORE(100.2,+$G(PTEVT),0)),U,2)
"RTN","OREVNTX",96,0)
 S X0=$G(^ORD(100.5,X,0)),Y=+$P(X0,U,9)_";SC("
"RTN","OREVNTX",97,0)
 I Y<1,$P(X0,U,12) S Y=+$P($G(^ORD(100.5,+$P(X0,U,12),0)),U,9)_";SC("
"RTN","OREVNTX",98,0)
 S:Y<1 Y=$G(ORL)
"RTN","OREVNTX",99,0)
 Q Y
"RTN","OREVNTX",100,0)
 ;
"RTN","OREVNTX",101,0)
EMPTY(PTEVT)    ; -- Returns 1 or 0, if PTEVT has delayed orders
"RTN","OREVNTX",102,0)
 N Y,OR0,PAT,TYPE,PSO,IFN,STS S Y=1 I '$G(PTEVT) Q Y
"RTN","OREVNTX",103,0)
 S OR0=$G(^ORE(100.2,+PTEVT,0)),PAT=+$P(OR0,U)_";DPT("
"RTN","OREVNTX",104,0)
 S TYPE=$$TYPE(PTEVT) I TYPE="D" S PSO=+$O(^DIC(9.4,"C","PSO",0))
"RTN","OREVNTX",105,0)
 S IFN=0 F  S IFN=$O(^OR(100,"AEVNT",PAT,PTEVT,IFN)) Q:IFN<1  D  Q:'Y
"RTN","OREVNTX",106,0)
 . S STS=$P($G(^OR(100,IFN,3)),U,3) I STS=10 S Y=0 Q
"RTN","OREVNTX",107,0)
 . ;I IFN=+$P(OR0,U,4),STS=11!(STS=6) S Y=0 Q
"RTN","OREVNTX",108,0)
 . I TYPE="D",$P($G(^OR(100,IFN,0)),U,14)=PSO,STS=5!(STS=6) S Y=0 Q
"RTN","OREVNTX",109,0)
 I Y,$D(^ORE(100.2,"DAD",PTEVT)) D  ;ck child events
"RTN","OREVNTX",110,0)
 . N CHLD S CHLD=0
"RTN","OREVNTX",111,0)
 . F  S CHLD=+$O(^ORE(100.2,"DAD",PTEVT,CHLD)) Q:CHLD<1  D  Q:'Y
"RTN","OREVNTX",112,0)
 .. S IFN=0 F  S IFN=$O(^OR(100,"AEVNT",PAT,CHLD,IFN)) Q:IFN<1  I $P($G(^OR(100,IFN,3)),U,3)=10 S Y=0 Q
"RTN","OREVNTX",113,0)
 Q Y
"RTN","OREVNTX",114,0)
 ;
"RTN","OREVNTX",115,0)
EVTORDER(ORDER) ; -- Returns 1 or 0, if ORDER is for event
"RTN","OREVNTX",116,0)
 ;    Will return 0 if action DA is included but not NW
"RTN","OREVNTX",117,0)
 N X0,X,Y S X0=$G(^OR(100,+ORDER,0)),X=+$P(ORDER,";",2),Y=0
"RTN","OREVNTX",118,0)
 I $P(X0,U,17),X'>1 D
"RTN","OREVNTX",119,0)
 . I $P($G(^ORE(100.2,+$P(X0,U,17),0)),U,4)=+ORDER S Y=1 Q
"RTN","OREVNTX",120,0)
 . S DAD=+$P($G(^ORE(100.2,+$P(X0,U,17),1)),U,5) ;has parent?
"RTN","OREVNTX",121,0)
 . I DAD,$P($G(^ORE(100.2,DAD,0)),U,4)=+ORDER S Y=1
"RTN","OREVNTX",122,0)
 Q Y
"RTN","OREVNTX",123,0)
 ;
"RTN","OREVNTX",124,0)
MANREL(ORDER)   ; -- Returns 1 or 0, if ORDER was manually released
"RTN","OREVNTX",125,0)
 N EVT,Y,RELDT,TYPE,EVTDT S Y=0
"RTN","OREVNTX",126,0)
 S EVT=+$P($G(^OR(100,+ORDER,0)),U,17),RELDT=+$P($G(^(8,1,0)),U,16)
"RTN","OREVNTX",127,0)
 G:EVT<1 MNQ G:RELDT<1 MNQ ;not delayed or released
"RTN","OREVNTX",128,0)
 I '$D(^ORE(100.2,EVT,2,+ORDER)) S Y=1 G MNQ ;not rel'd by event
"RTN","OREVNTX",129,0)
 S TYPE=$$TYPE(EVT),EVTDT=+$G(^ORE(100.2,EVT,1))
"RTN","OREVNTX",130,0)
 I TYPE="M",$$FMDIFF^XLFDT(EVTDT,RELDT,2)<300 S Y=1
"RTN","OREVNTX",131,0)
MNQ Q Y
"RTN","OREVNTX",132,0)
 ;
"RTN","OREVNTX",133,0)
CANCEL(PTEVT)   ; -- Cancel empty PTEVT, event order
"RTN","OREVNTX",134,0)
 S PTEVT=+$G(PTEVT) D DONE(PTEVT),ACTLOG(PTEVT,"CA")
"RTN","OREVNTX",135,0)
 N IFN,DAD S IFN=+$P($G(^ORE(100.2,PTEVT,0)),U,4)
"RTN","OREVNTX",136,0)
 I IFN<1 D  ;ck for parent w/event order
"RTN","OREVNTX",137,0)
 . S DAD=+$P($G(^ORE(100.2,PTEVT,1)),U,5) Q:DAD<1
"RTN","OREVNTX",138,0)
 . Q:'$G(^ORE(100.2,DAD,1))  ;parent still active
"RTN","OREVNTX",139,0)
 . S IFN=+$P($G(^ORE(100.2,DAD,0)),U,4)
"RTN","OREVNTX",140,0)
 I IFN D:'$$DCD^ORCACT2(IFN) CLRDLY^ORCACT2(IFN) ;cancel event order
"RTN","OREVNTX",141,0)
 Q
"RTN","OREVNTX",142,0)
 ;
"RTN","OREVNTX",143,0)
DONE(PTEVT,WHEN,MVT,OR)    ; -- Terminate PTEVT
"RTN","OREVNTX",144,0)
 Q:'$G(PTEVT)  Q:'$D(^ORE(100.2,PTEVT,0))
"RTN","OREVNTX",145,0)
 N X0,X1,PAT,EVT,DAD
"RTN","OREVNTX",146,0)
 S:'$G(WHEN) WHEN=+$E($$NOW^XLFDT,1,12) D D1
"RTN","OREVNTX",147,0)
 S DAD=$P(X1,U,5) I DAD,$$ALLDONE(DAD) S PTEVT=DAD D D1 Q
"RTN","OREVNTX",148,0)
 S DAD=PTEVT,PTEVT=0 ;if PTEVT=parent, terminate children too
"RTN","OREVNTX",149,0)
 F  S PTEVT=+$O(^ORE(100.2,"DAD",DAD,PTEVT)) Q:PTEVT<1  D D1
"RTN","OREVNTX",150,0)
 Q
"RTN","OREVNTX",151,0)
D1 S X0=$G(^ORE(100.2,+PTEVT,0)),X1=$G(^(1)) Q:'$L(X0)
"RTN","OREVNTX",152,0)
 S PAT=+$P(X0,U),EVT=+$P(X0,U,2) ;,ORD=+$P(X0,U,4)
"RTN","OREVNTX",153,0)
 S $P(X1,U,1,2)=WHEN_U_$G(MVT),$P(X1,U,4)=$G(OR),^ORE(100.2,PTEVT,1)=X1
"RTN","OREVNTX",154,0)
 S ^ORE(100.2,"AC",PAT,9999999-WHEN,PTEVT)=""
"RTN","OREVNTX",155,0)
 S:$G(OR) ^ORE(100.2,"ASR",OR,PTEVT)=""
"RTN","OREVNTX",156,0)
 K:EVT ^ORE(100.2,"AE",PAT,EVT,PTEVT)
"RTN","OREVNTX",157,0)
 Q
"RTN","OREVNTX",158,0)
 ;
"RTN","OREVNTX",159,0)
ALLDONE(DAD) ; -- Returns 1 or 0, if all child events are done
"RTN","OREVNTX",160,0)
 N I,Y S Y=1,I=0
"RTN","OREVNTX",161,0)
 F  S I=+$O(^ORE(100.2,"DAD",+$G(DAD),I)) Q:I<1  I '$G(^ORE(100.2,I,1)) S Y=0 Q
"RTN","OREVNTX",162,0)
 Q Y
"RTN","OREVNTX",163,0)
 ;
"RTN","OREVNTX",164,0)
CHGEVT(IFN,NEWEVT)      ; -- Change the Patient Event for order IFN to NEWEVT
"RTN","OREVNTX",165,0)
 ;    Includes adding or removing event pointer to order
"RTN","OREVNTX",166,0)
 Q:'$G(IFN)  N PAT,OLDEVT,OR3 S:$G(NEWEVT) NEWEVT=+NEWEVT
"RTN","OREVNTX",167,0)
 S PAT=$P($G(^OR(100,+IFN,0)),U,2),OLDEVT=$P($G(^(0)),U,17),OR3=$G(^(3))
"RTN","OREVNTX",168,0)
 Q:OLDEVT=NEWEVT  K:OLDEVT ^OR(100,"AEVNT",PAT,OLDEVT,+IFN)
"RTN","OREVNTX",169,0)
 S $P(^OR(100,+IFN,0),U,17)=NEWEVT S:NEWEVT ^OR(100,"AEVNT",PAT,NEWEVT,+IFN)=""
"RTN","OREVNTX",170,0)
 I NEWEVT,$P(OR3,U,3)'=10 S $P(^OR(100,+IFN,3),U,3)=10,$P(^(8,1,0),U,15)=10
"RTN","OREVNTX",171,0)
 I 'NEWEVT,$P(OR3,U,3)=10 S $P(^OR(100,+IFN,3),U,3)=11,$P(^(8,1,0),U,15)=11 D SET^ORDD100(+IFN,1)
"RTN","OREVNTX",172,0)
 Q
"RTN","OREVNTX",173,0)
 ;
"RTN","OREVNTX",174,0)
ACTLOG(PTEVT,ACTION,EVTYPE,SAVE)  ; -- Log a note for ACTION on PTEVT
"RTN","OREVNTX",175,0)
 ;    SAVE => new data in VAIP() will be saved
"RTN","OREVNTX",176,0)
 Q:'$G(PTEVT)  Q:'$D(^ORE(100.2,PTEVT,0))  Q:'$L($G(ACTION))
"RTN","OREVNTX",177,0)
 N I,HDR,LAST,TOTAL,DA,ORNOW,MVT
"RTN","OREVNTX",178,0)
 F I=1:1:10 L +^ORE(100.2,PTEVT,10,0):1 Q:$T  H 2
"RTN","OREVNTX",179,0)
 Q:'$T "^" S HDR=$G(^ORE(100.2,PTEVT,10,0)) S:'$L(HDR) HDR="^100.25DA^^"
"RTN","OREVNTX",180,0)
 S TOTAL=+$P(HDR,U,4),LAST=+$O(^ORE(100.2,PTEVT,10,"B"),-1)
"RTN","OREVNTX",181,0)
 S I=LAST F I=(I+1):1 Q:'$D(^ORE(100.2,PTEVT,10,I,0))
"RTN","OREVNTX",182,0)
 S DA=I,$P(HDR,U,3,4)=DA_U_(TOTAL+1)
"RTN","OREVNTX",183,0)
 S ^ORE(100.2,PTEVT,10,0)=HDR L -^ORE(100.2,PTEVT,10,0)
"RTN","OREVNTX",184,0)
 S ORNOW=+$$NOW^XLFDT,^ORE(100.2,PTEVT,10,"B",ORNOW,DA)=""
"RTN","OREVNTX",185,0)
 S ^ORE(100.2,PTEVT,10,DA,0)=ORNOW_U_ACTION_U_$S(ACTION="LP":"",1:$G(DUZ))_U_$G(EVTYPE)
"RTN","OREVNTX",186,0)
 S MVT=+$P($G(^ORE(100.2,PTEVT,1)),U,2)
"RTN","OREVNTX",187,0)
 S:MVT ^ORE(100.2,"ADT",MVT,ORNOW,PTEVT,DA)=""
"RTN","OREVNTX",188,0)
 I $G(SAVE),$G(VAIP(4)) S $P(^ORE(100.2,PTEVT,10,DA,0),U,5,7)=+VAIP(4)_U_+VAIP(8)_U_+VAIP(5)
"RTN","OREVNTX",189,0)
 Q
"RTN","OREVNTX",190,0)
 ;
"RTN","OREVNTX",191,0)
LAPSED(PTEVT)   ; -- Ck if PTEVT has lapsed, if so lapse all orders
"RTN","OREVNTX",192,0)
 N Y,X0,EVT,ENTERED,DAYS,ORN,ORCA,ORSIGDT S Y=0
"RTN","OREVNTX",193,0)
 I $G(^ORE(100.2,PTEVT,1)) G LPQ ;already terminated
"RTN","OREVNTX",194,0)
 S X0=$G(^ORE(100.2,PTEVT,0)),EVT=+$P(X0,U,2)
"RTN","OREVNTX",195,0)
 S:$P($G(^ORD(100.5,EVT,0)),U,12) EVT=+$P(^(0),U,12) ;parent
"RTN","OREVNTX",196,0)
 S ENTERED="9999999"
"RTN","OREVNTX",197,0)
 ; if event order is signed then ENTERED needs to be the DT it was signed from file 100
"RTN","OREVNTX",198,0)
 S ORN=$P(^ORE(100.2,PTEVT,0),U,4)
"RTN","OREVNTX",199,0)
 I +ORN S ORCA=$P($G(^OR(100,+ORN,3)),U,7)
"RTN","OREVNTX",200,0)
 I $G(ORCA) S ORSIGDT=$P($G(^OR(100,+ORN,8,ORCA,0)),U,6)
"RTN","OREVNTX",201,0)
 I $G(ORSIGDT) S ENTERED=ORSIGDT
"RTN","OREVNTX",202,0)
 ; if event order is not signed then ENTERED needs to be the ENTERED DT from file 100.2
"RTN","OREVNTX",203,0)
 I ENTERED="9999999" S ENTERED=+$P(X0,U,5)
"RTN","OREVNTX",204,0)
 S DAYS=+$P($G(^ORD(100.5,EVT,0)),U,6) I DAYS<1 G LPQ ;doesn't lapse
"RTN","OREVNTX",205,0)
 I ENTERED>$$FMADD^XLFDT(DT,(0-DAYS)) G LPQ ;not lapsed yet
"RTN","OREVNTX",206,0)
 D LP1(PTEVT) S Y=1 ;lapse orders, event
"RTN","OREVNTX",207,0)
 N J S J=0 F  S J=$O(^ORE(100.2,"DAD",PTEVT,J)) Q:'J  D LP1(J)
"RTN","OREVNTX",208,0)
LPQ Q Y
"RTN","OREVNTX",209,0)
 ;
"RTN","OREVNTX",210,0)
LP1(PTEVT) ; -- Lapse orders, event PTEVT
"RTN","OREVNTX",211,0)
 N X0,PAT,IFN,STS
"RTN","OREVNTX",212,0)
 S X0=$G(^ORE(100.2,PTEVT,0)),PAT=+$P(X0,U)_";DPT("
"RTN","OREVNTX",213,0)
 S IFN=0 F  S IFN=$O(^OR(100,"AEVNT",PAT,PTEVT,IFN)) Q:IFN<1  D
"RTN","OREVNTX",214,0)
 . S STS=$P($G(^OR(100,IFN,3)),U,3) I (STS=10)!(STS=11)!(IFN=+$P(X0,U,4)) D
"RTN","OREVNTX",215,0)
 .. D STATUS^ORCSAVE2(IFN,14)
"RTN","OREVNTX",216,0)
 .. D ALPS^ORCSAVE2(IFN,1,"DELAYED ORDER")
"RTN","OREVNTX",217,0)
 .. S $P(^OR(100,IFN,8,1,0),U,15)="" D:$P(^(0),U,4)=2 SIGN^ORCSAVE2(IFN,"","",5,1)
"RTN","OREVNTX",218,0)
 D DONE(PTEVT),ACTLOG(PTEVT,"LP")
"RTN","OREVNTX",219,0)
 Q
"RTN","OREVNTX1")
0^56^B75868849
"RTN","OREVNTX1",1,0)
OREVNTX1 ; SLC/JLI - Event delayed orders RPC's ;8/20/09  13:53
"RTN","OREVNTX1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**141,165,149,243,280**;Dec 17, 1997;Build 85
"RTN","OREVNTX1",3,0)
 ;
"RTN","OREVNTX1",4,0)
PUTEVNT(ORY,DFN,EVT,ORIFN) ; Save new patient delayed events to file 100.2
"RTN","OREVNTX1",5,0)
 S ORY=$$NEW^OREVNT(DFN,EVT,ORIFN)
"RTN","OREVNTX1",6,0)
 Q
"RTN","OREVNTX1",7,0)
 ;
"RTN","OREVNTX1",8,0)
GTEVT(ORY,PTEVT) ; Return Event infomation based on PTEVT ptr #100.2
"RTN","OREVNTX1",9,0)
 ;EVTID     ptr #100.5
"RTN","OREVNTX1",10,0)
 Q:'+PTEVT
"RTN","OREVNTX1",11,0)
 N EVTID,EVTTYPE,EVTNAME,EVTDISP,EVTDLG,PRTEVT
"RTN","OREVNTX1",12,0)
 S (EVTTYPE,EVTNAME,EVTDISP,PRTEVT)=""
"RTN","OREVNTX1",13,0)
 S EVTDLG=0
"RTN","OREVNTX1",14,0)
 I '$P(^ORE(100.2,+$G(PTEVT),0),U,2) Q
"RTN","OREVNTX1",15,0)
 S EVTID=$$EVT^OREVNTX(PTEVT)
"RTN","OREVNTX1",16,0)
 S PRTEVT=$P(^ORD(100.5,EVTID,0),U,12)
"RTN","OREVNTX1",17,0)
 I PRTEVT S EVTTYPE=$P(^ORD(100.5,PRTEVT,0),U,2)
"RTN","OREVNTX1",18,0)
 E  S EVTTYPE=$P(^ORD(100.5,EVTID,0),U,2)
"RTN","OREVNTX1",19,0)
 I $D(^ORD(100.5,EVTID,0)) D
"RTN","OREVNTX1",20,0)
 . S EVTNAME=$P(^ORD(100.5,EVTID,0),U,1)
"RTN","OREVNTX1",21,0)
 . S EVTDISP=$P(^ORD(100.5,EVTID,0),U,8)
"RTN","OREVNTX1",22,0)
 . S EVTDLG=$P(^ORD(100.5,EVTID,0),U,4)
"RTN","OREVNTX1",23,0)
 S ORY=EVTTYPE_U_EVTID_U_EVTNAME_U_EVTDISP_U_EVTDLG
"RTN","OREVNTX1",24,0)
 Q
"RTN","OREVNTX1",25,0)
GTEVT1(ORY,EVT) ; Return Event information based on EVT ptr #100.5
"RTN","OREVNTX1",26,0)
 ;EVT    ptr #100.5
"RTN","OREVNTX1",27,0)
 Q:'+EVT
"RTN","OREVNTX1",28,0)
 N EVTTYPE,EVTNAME,EVTDISP,EVTDLG,PRTEVT
"RTN","OREVNTX1",29,0)
 S (EVTDLG,PRTEVT)=0
"RTN","OREVNTX1",30,0)
 S PRTEVT=$P(^ORD(100.5,+EVT,0),U,12)
"RTN","OREVNTX1",31,0)
 I PRTEVT>0 S EVTTYPE=$P(^ORD(100.5,PRTEVT,0),U,2)
"RTN","OREVNTX1",32,0)
 E  S EVTTYPE=$P(^ORD(100.5,+EVT,0),U,2)
"RTN","OREVNTX1",33,0)
 S EVTNAME=$P($G(^ORD(100.5,+EVT,0)),U,1)
"RTN","OREVNTX1",34,0)
 S EVTDISP=$P($G(^ORD(100.5,+EVT,0)),U,8)
"RTN","OREVNTX1",35,0)
 S EVTDLG=$P($G(^ORD(100.5,+EVT,0)),U,4)
"RTN","OREVNTX1",36,0)
 S ORY=EVTTYPE_U_EVT_U_EVTNAME_U_EVTDISP_U_EVTDLG
"RTN","OREVNTX1",37,0)
 Q
"RTN","OREVNTX1",38,0)
 ;
"RTN","OREVNTX1",39,0)
EVT(ORY,PTEVT) ; Return Event ptr #100.5, given PTEVT ptr #100.2
"RTN","OREVNTX1",40,0)
 Q:'+PTEVT
"RTN","OREVNTX1",41,0)
 S ORY=$$EVT^OREVNTX(PTEVT)
"RTN","OREVNTX1",42,0)
 Q
"RTN","OREVNTX1",43,0)
 ; 
"RTN","OREVNTX1",44,0)
EXISTS(ORY,DFN,EVT) ;Returns PtEvtID ptr #100.2 if patient already has delayed orders
"RTN","OREVNTX1",45,0)
 I '+EVT S ORY=0 Q
"RTN","OREVNTX1",46,0)
 N PTEVT S (PTEVT,ORY)=0
"RTN","OREVNTX1",47,0)
 S PTEVT=$O(^ORE(100.2,"AE",+DFN,+EVT,PTEVT))
"RTN","OREVNTX1",48,0)
 I PTEVT>0 S ORY=PTEVT
"RTN","OREVNTX1",49,0)
 Q
"RTN","OREVNTX1",50,0)
 ;
"RTN","OREVNTX1",51,0)
TYPEXT(ORY,DFN,EVT) ; does EVT has delayed orders?
"RTN","OREVNTX1",52,0)
 ; 1 if Patient DFN has delayed orders for EVT
"RTN","OREVNTX1",53,0)
 ; 2 if Parent/Sibling event has delayed orders
"RTN","OREVNTX1",54,0)
 ; 0 if No delayed orders for EVT
"RTN","OREVNTX1",55,0)
 Q:'+EVT
"RTN","OREVNTX1",56,0)
 S ORY=$$EXISTS^OREVNTX(DFN,EVT)
"RTN","OREVNTX1",57,0)
 Q
"RTN","OREVNTX1",58,0)
 ;
"RTN","OREVNTX1",59,0)
MATCH(ORY,DFN,EVT) ;If Pt's current data match selected event
"RTN","OREVNTX1",60,0)
 ;DFN: patient DFN
"RTN","OREVNTX1",61,0)
 ;EVT: ptr to #100.5
"RTN","OREVNTX1",62,0)
 S ORY=0
"RTN","OREVNTX1",63,0)
 Q:('+DFN)!('+EVT)
"RTN","OREVNTX1",64,0)
 S ORY=$$MATCH^OREVNT(DFN,EVT)
"RTN","OREVNTX1",65,0)
 N TS,TSNM
"RTN","OREVNTX1",66,0)
 S TS=$S($G(ORTS):+ORTS,1:+$G(^DPT(DFN,.103)))
"RTN","OREVNTX1",67,0)
 S TSNM=$P($G(^DIC(45.7,TS,0)),U)
"RTN","OREVNTX1",68,0)
 S:ORY ORY=ORY_U_TSNM
"RTN","OREVNTX1",69,0)
 Q
"RTN","OREVNTX1",70,0)
 ;
"RTN","OREVNTX1",71,0)
NAME(ORY,PTEVT) ; Return Event name from #100.5, given PTEVT ptr #100.2
"RTN","OREVNTX1",72,0)
 I PTEVT'>0 S ORY="" Q
"RTN","OREVNTX1",73,0)
 S ORY=$$NAME^OREVNTX(PTEVT)
"RTN","OREVNTX1",74,0)
 Q
"RTN","OREVNTX1",75,0)
 ;
"RTN","OREVNTX1",76,0)
DIV(ORY,PTEVT) ; Return division for PTEVT ptr #100.2
"RTN","OREVNTX1",77,0)
 Q:'+PTEVT
"RTN","OREVNTX1",78,0)
 S ORY=$$DIV^OREVNTX(PTEVT)
"RTN","OREVNTX1",79,0)
 Q
"RTN","OREVNTX1",80,0)
 ;
"RTN","OREVNTX1",81,0)
DIV1(ORY,EVT) ; Return division for EVT ptr #100.5
"RTN","OREVNTX1",82,0)
 Q:'+EVT
"RTN","OREVNTX1",83,0)
 S ORY=+$P($G(^ORD(100.5,+EVT,0)),U,3) S:ORY<1 ORY=+$G(DUZ(2))
"RTN","OREVNTX1",84,0)
 Q
"RTN","OREVNTX1",85,0)
 ;
"RTN","OREVNTX1",86,0)
LOC(ORY,PTEVT) ; Return default hospital location ^SC( for PTEVT ptr #100.2
"RTN","OREVNTX1",87,0)
 Q:'+PTEVT
"RTN","OREVNTX1",88,0)
 S ORY=$$LOC^OREVNTX(PTEVT)
"RTN","OREVNTX1",89,0)
 S ORY=+ORY
"RTN","OREVNTX1",90,0)
 Q
"RTN","OREVNTX1",91,0)
 ;
"RTN","OREVNTX1",92,0)
LOC1(ORY,EVT) ; Return default hospital location ^SC( for EVT ptr #100.5
"RTN","OREVNTX1",93,0)
 Q:'+EVT
"RTN","OREVNTX1",94,0)
 S ORY=+$P($G(^ORD(100.5,+EVT,0)),U,9) S:ORY<1 ORY=+$G(ORL)
"RTN","OREVNTX1",95,0)
 Q
"RTN","OREVNTX1",96,0)
 ;
"RTN","OREVNTX1",97,0)
CHGEVT(ORY,NEWEVT,ORIDS) ; Change order's event
"RTN","OREVNTX1",98,0)
 N ORI
"RTN","OREVNTX1",99,0)
 S ORI=0
"RTN","OREVNTX1",100,0)
 F  S ORI=$O(ORIDS(ORI)) Q:'+ORI  D
"RTN","OREVNTX1",101,0)
 . D CHGEVT^OREVNTX(+$G(ORIDS(ORI)),NEWEVT)
"RTN","OREVNTX1",102,0)
 Q
"RTN","OREVNTX1",103,0)
 ;
"RTN","OREVNTX1",104,0)
EMPTY(ORY,PTEVT) ; Return 1 if PTEVT doesn't have any orders
"RTN","OREVNTX1",105,0)
 Q:'+PTEVT
"RTN","OREVNTX1",106,0)
 S ORY=$$EMPTY^OREVNTX(PTEVT)
"RTN","OREVNTX1",107,0)
 Q
"RTN","OREVNTX1",108,0)
 ;
"RTN","OREVNTX1",109,0)
DELPTEVT(ORY,PTEVT) ; Delete Patient Event in #100.2
"RTN","OREVNTX1",110,0)
 Q:'+PTEVT
"RTN","OREVNTX1",111,0)
 D CANCEL^OREVNTX(PTEVT)
"RTN","OREVNTX1",112,0)
 Q
"RTN","OREVNTX1",113,0)
 ;
"RTN","OREVNTX1",114,0)
UPDTOR(ORY,PTIFN,ORIFN,PTEVT) ; If delayed order was DCed, then update the EVENT and "AEVNT"
"RTN","OREVNTX1",115,0)
 Q  ;Don't ever need to do this!
"RTN","OREVNTX1",116,0)
CURSPE(ORY,PTIFN) ; Return current treating specialty
"RTN","OREVNTX1",117,0)
 Q:'PTIFN
"RTN","OREVNTX1",118,0)
 N SPEC S SPEC=$$PT^DGPMOBS(PTIFN),ORY=""
"RTN","OREVNTX1",119,0)
 I SPEC'<0 S ORY=$P(SPEC,U,3)_U_$P(SPEC,U,2)_U_$P(SPEC,U) ;name^ien^obs flag
"RTN","OREVNTX1",120,0)
 Q
"RTN","OREVNTX1",121,0)
DFLTEVT(ORY,PVIFN) ; Return default release event based on provider IFN
"RTN","OREVNTX1",122,0)
 N CMEVTLST,IDX
"RTN","OREVNTX1",123,0)
 S CMEVTLST="",IDX=0
"RTN","OREVNTX1",124,0)
 D GETLST^OREV3(.CMEVTLST)
"RTN","OREVNTX1",125,0)
 F  S IDX=$O(CMEVTLST(IDX)) Q:'IDX  D
"RTN","OREVNTX1",126,0)
 . I $P($G(CMEVTLST(IDX)),U,2) S ORY=$P($G(CMEVTLST(IDX)),U) Q
"RTN","OREVNTX1",127,0)
 Q
"RTN","OREVNTX1",128,0)
CMEVTS(ORY,CLOC) ;Return common event list
"RTN","OREVNTX1",129,0)
 N IDX,X0,X,LOC
"RTN","OREVNTX1",130,0)
 S:CLOC>0 LOC=CLOC
"RTN","OREVNTX1",131,0)
 S IDX=0,ORY=""
"RTN","OREVNTX1",132,0)
 D GETLST^OREV3(.ORY)
"RTN","OREVNTX1",133,0)
 F  S IDX=$O(ORY(IDX)) Q:'IDX  D
"RTN","OREVNTX1",134,0)
 . S X0=""
"RTN","OREVNTX1",135,0)
 . S:$L($G(^ORD(100.5,+ORY(IDX),0))) X0=$G(^(0))
"RTN","OREVNTX1",136,0)
 . I '$L($P(X0,U,2)) D
"RTN","OREVNTX1",137,0)
 .. S X=$P(X0,U,12) S:X $P(X0,U,2)=$P($G(^ORD(100.5,+X,0)),U,2)
"RTN","OREVNTX1",138,0)
 . S:$L(X0) ORY(IDX)=+ORY(IDX)_U_X0
"RTN","OREVNTX1",139,0)
 Q
"RTN","OREVNTX1",140,0)
 ;
"RTN","OREVNTX1",141,0)
DELDFLT(ORY,PVIFN) ; Delete default release event
"RTN","OREVNTX1",142,0)
 Q:'PVIFN
"RTN","OREVNTX1",143,0)
 N ORERR
"RTN","OREVNTX1",144,0)
 S ORERR=""
"RTN","OREVNTX1",145,0)
 D DEL^XPAR(PVIFN_";VA(200,","OREVNT DEFAULT",1,.ORERR)
"RTN","OREVNTX1",146,0)
 Q
"RTN","OREVNTX1",147,0)
WRLSTED(LST,LOC,EVTID) ; Return list of dialogs for writing event delayed orders
"RTN","OREVNTX1",148,0)
 ; .Y(n): DlgName^ListBox Text
"RTN","OREVNTX1",149,0)
WRLST1 N ANENT
"RTN","OREVNTX1",150,0)
 S LOC=+$G(LOC)_";SC(" I 'LOC S LOC=""
"RTN","OREVNTX1",151,0)
 S ANENT="ALL^USR.`"_DUZ_"^"_LOC_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","OREVNTX1",152,0)
 N MNU,SEQ,IEN,ITM,TXT,FID,DGRP,X,TYP
"RTN","OREVNTX1",153,0)
 S MNU=$$GET^XPAR(ANENT,"ORWDX WRITE ORDERS EVENT LIST",EVTID,"I") Q:'MNU
"RTN","OREVNTX1",154,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,MNU,10,"B",SEQ)) Q:'SEQ  D
"RTN","OREVNTX1",155,0)
 . S IEN=0 F  S IEN=$O(^ORD(101.41,MNU,10,"B",SEQ,IEN)) Q:'IEN  D
"RTN","OREVNTX1",156,0)
 . . S X=$G(^ORD(101.41,MNU,10,IEN,0)),ITM=+$P(X,U,2),TXT=$P(X,U,4)
"RTN","OREVNTX1",157,0)
 . . S X=$G(^ORD(101.41,ITM,5)),FID=+$P(X,U,5)
"RTN","OREVNTX1",158,0)
 . . S X=$G(^ORD(101.41,ITM,0)),TYP=$P(X,U,4),DGRP=+$P(X,U,5)
"RTN","OREVNTX1",159,0)
 . . S:'$L(TXT) TXT=$P(X,U,2)
"RTN","OREVNTX1",160,0)
 . . I TYP="M" S:'FID FID=1001
"RTN","OREVNTX1",161,0)
 . . S LST(SEQ)=ITM_";"_FID_";"_DGRP_";"_TYP_U_TXT
"RTN","OREVNTX1",162,0)
 Q
"RTN","OREVNTX1",163,0)
 ;
"RTN","OREVNTX1",164,0)
GETDLG(LST,DLGID) ; Return dialog infomation based on the DLGID
"RTN","OREVNTX1",165,0)
 N DIEN,DFID,DTXT,DTYP,DGRP,X0,X5
"RTN","OREVNTX1",166,0)
 S DLGID=+DLGID
"RTN","OREVNTX1",167,0)
 Q:'DLGID
"RTN","OREVNTX1",168,0)
 S X0=^ORD(101.41,DLGID,0),X5=$G(^(5))
"RTN","OREVNTX1",169,0)
 S DGRP=+$P(X0,U,5),DFID=+$P(X5,U,5),DTXT=$P(X5,U,4),DTYP=$P(X0,U,4)
"RTN","OREVNTX1",170,0)
    S:'$L(DTXT) DTXT=$P(X0,U,2)
"RTN","OREVNTX1",171,0)
 I $P(X0,U,4)="M" S:'DFID DFID=1001
"RTN","OREVNTX1",172,0)
 S LST=DLGID_";"_DFID_";"_DGRP_";"_DTYP_U_DTXT
"RTN","OREVNTX1",173,0)
 Q
"RTN","OREVNTX1",174,0)
DONE(LST,PTEVT) ; Terminate PTEvt
"RTN","OREVNTX1",175,0)
 Q:'PTEVT
"RTN","OREVNTX1",176,0)
 D DONE^OREVNTX(PTEVT)
"RTN","OREVNTX1",177,0)
 D ACTLOG^OREVNTX(PTEVT,"MN")
"RTN","OREVNTX1",178,0)
 Q
"RTN","OREVNTX1",179,0)
SETDFLT(ORY,EVT) ;Set personal default event
"RTN","OREVNTX1",180,0)
 N ERR,VAL S ERR=""
"RTN","OREVNTX1",181,0)
 Q:'$D(^ORD(100.5,EVT,0))
"RTN","OREVNTX1",182,0)
 S VAL=$P(^ORD(100.5,EVT,0),U)
"RTN","OREVNTX1",183,0)
 D EN^XPAR(DUZ_";VA(200,","OREVNT DEFAULT",1,VAL,ERR)
"RTN","OREVNTX1",184,0)
 S ORY=ERR
"RTN","OREVNTX1",185,0)
 Q
"RTN","OREVNTX1",186,0)
CPACT(ORY,EVT) ; Return True/False to display active orders for copy
"RTN","OREVNTX1",187,0)
 ; EVT ptr to #100.5
"RTN","OREVNTX1",188,0)
 Q:'EVT
"RTN","OREVNTX1",189,0)
 S ORY=0
"RTN","OREVNTX1",190,0)
 Q:'$D(^ORD(100.5,EVT,0))
"RTN","OREVNTX1",191,0)
 S ORY=$P(^ORD(100.5,EVT,0),U,11)
"RTN","OREVNTX1",192,0)
 Q
"RTN","OREVNTX1",193,0)
PRMPTID(ORY,PRTNM) ;Return event prompt IEN for OR GTX EVENT
"RTN","OREVNTX1",194,0)
 S:$D(^ORD(101.41,"B","OR GTX EVENT")) ORY=$O(^("OR GTX EVENT",0))
"RTN","OREVNTX1",195,0)
 Q
"RTN","OREVNTX1",196,0)
ISDCOD(ORY,ORIFN) ;True: the order need to be filtered out
"RTN","OREVNTX1",197,0)
 N PAS,X3,X0,ORGRPLST,THEGRP,IDX,ODGRP
"RTN","OREVNTX1",198,0)
 S (ORY,IDX)=0
"RTN","OREVNTX1",199,0)
 Q:'$D(^OR(100,+ORIFN,0))
"RTN","OREVNTX1",200,0)
 S X0=$G(^OR(100,+ORIFN,0))
"RTN","OREVNTX1",201,0)
 S ODGRP=$P(X0,U,11)
"RTN","OREVNTX1",202,0)
 D GETLST^XPAR(.ORGRPLST,"ALL","OREVNT EXCLUDE DGRP")
"RTN","OREVNTX1",203,0)
 F  S IDX=$O(ORGRPLST(IDX)) Q:'IDX!ORY  D
"RTN","OREVNTX1",204,0)
 . S THEGRP=$P($G(ORGRPLST(IDX)),U,2)
"RTN","OREVNTX1",205,0)
 . I $$GRPCHK(THEGRP,ODGRP) S ORY=1
"RTN","OREVNTX1",206,0)
 I ORY Q
"RTN","OREVNTX1",207,0)
 S PAS=";1;"
"RTN","OREVNTX1",208,0)
 S:$D(^OR(100,+ORIFN,3)) X3=^OR(100,+ORIFN,3)
"RTN","OREVNTX1",209,0)
 S:(PAS'[(";"_$P(X3,U,3)_";")) ORY=0
"RTN","OREVNTX1",210,0)
 Q
"RTN","OREVNTX1",211,0)
DEFLTS(ORY,EVTID) ;Return default specialty for EVTID(#100.5)
"RTN","OREVNTX1",212,0)
 Q:'+EVTID
"RTN","OREVNTX1",213,0)
 N PRTEVT
"RTN","OREVNTX1",214,0)
 S PRTEVT=0
"RTN","OREVNTX1",215,0)
 S PRTEVT=$P(^ORD(100.5,+EVTID,0),U,12)
"RTN","OREVNTX1",216,0)
 I PRTEVT>0 S EVTID=PRTEVT
"RTN","OREVNTX1",217,0)
 S ORY=$$DEFTS^ORCDADT(EVTID)
"RTN","OREVNTX1",218,0)
 Q
"RTN","OREVNTX1",219,0)
 ;
"RTN","OREVNTX1",220,0)
MULTS(ORY,EVTID) ;Return specialty list for the EVTID(#100.5)
"RTN","OREVNTX1",221,0)
 Q:'+EVTID
"RTN","OREVNTX1",222,0)
 N I,CNT,X,Y S (I,CNT)=0
"RTN","OREVNTX1",223,0)
 N PRTEVT
"RTN","OREVNTX1",224,0)
 S PRTEVT=0
"RTN","OREVNTX1",225,0)
 S PRTEVT=$P(^ORD(100.5,+EVTID,0),U,12)
"RTN","OREVNTX1",226,0)
 I PRTEVT>0 S EVTID=PRTEVT
"RTN","OREVNTX1",227,0)
 F  S I=$O(^ORD(100.5,+$G(EVTID),"TS",I)) Q:I<1  S X=+$G(^(I,0)) D
"RTN","OREVNTX1",228,0)
 . S Y=$$GET1^DIQ(45.7,X_",",.01)
"RTN","OREVNTX1",229,0)
 . S CNT=CNT+1,ORY(CNT)=X_U_Y
"RTN","OREVNTX1",230,0)
 Q
"RTN","OREVNTX1",231,0)
 ;
"RTN","OREVNTX1",232,0)
PRTIDS(ORY,IDS) ;Return some prompt ids from #101.41
"RTN","OREVNTX1",233,0)
 ; treating specialty Id^attending provider id
"RTN","OREVNTX1",234,0)
 N IDX,ORTS,ORATT
"RTN","OREVNTX1",235,0)
 S (ORY,ORTS,ORATT)=""
"RTN","OREVNTX1",236,0)
 S IDX=$O(^ORD(101.41,"B","OR GTX TREATING SPECIALTY",0))
"RTN","OREVNTX1",237,0)
 S:$D(^ORD(101.41,IDX,1)) ORTS=$P($G(^ORD(101.41,IDX,1)),U,2,3)
"RTN","OREVNTX1",238,0)
 S IDX=$O(^ORD(101.41,"B","OR GTX PROVIDER",0))
"RTN","OREVNTX1",239,0)
 S:$D(^ORD(101.41,IDX,1)) ORATT=$P($G(^ORD(101.41,IDX,1)),U,2,3)
"RTN","OREVNTX1",240,0)
 S ORY=ORTS_"~"_ORATT
"RTN","OREVNTX1",241,0)
 Q
"RTN","OREVNTX1",242,0)
 ;
"RTN","OREVNTX1",243,0)
DFLTDLG(ORY,EVTID) ;Return event default dialog IEN
"RTN","OREVNTX1",244,0)
 S ORY=0
"RTN","OREVNTX1",245,0)
 Q:'$D(^ORD(100.5,+EVTID,0))
"RTN","OREVNTX1",246,0)
 S ORY=$P(^ORD(100.5,+EVTID,0),U,4)
"RTN","OREVNTX1",247,0)
 Q
"RTN","OREVNTX1",248,0)
AUTHMREL(ORY,USER) ;1: user can manual release delayed orders 0: can't
"RTN","OREVNTX1",249,0)
 S ORY=$$CANREL^OREV3
"RTN","OREVNTX1",250,0)
 Q
"RTN","OREVNTX1",251,0)
HAVEPRT(ORY,PTEVT) ;return parent patient event from #100.2
"RTN","OREVNTX1",252,0)
 Q:'+PTEVT
"RTN","OREVNTX1",253,0)
 S ORY=""
"RTN","OREVNTX1",254,0)
 S:$L($G(^ORE(100.2,PTEVT,1))) ORY=$P(^(1),U,5)
"RTN","OREVNTX1",255,0)
 Q
"RTN","OREVNTX1",256,0)
GRPCHK(DG,AGRP) ;If an order's group belong to DG group
"RTN","OREVNTX1",257,0)
 N RST
"RTN","OREVNTX1",258,0)
 S RST=0
"RTN","OREVNTX1",259,0)
 N ORGRP
"RTN","OREVNTX1",260,0)
 D GRP^ORQ1(DG)
"RTN","OREVNTX1",261,0)
 S RST=$S($D(ORGRP(AGRP)):1,1:0)
"RTN","OREVNTX1",262,0)
 Q RST
"RTN","OREVNTX1",263,0)
ODPTEVID(ORY,ORID) ;Return PtEvtID based on the ORID
"RTN","OREVNTX1",264,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","OREVNTX1",265,0)
 S ORY=$P($G(^OR(100,+ORID,0)),U,17)
"RTN","OREVNTX1",266,0)
 Q
"RTN","OREVNTX1",267,0)
COMP(ORY,PTEVT) ;Return 1 or 0 if PTEVT completed or not
"RTN","OREVNTX1",268,0)
 Q:'+PTEVT
"RTN","OREVNTX1",269,0)
 S ORY=$$COMP^OREVNTX(+PTEVT)
"RTN","OREVNTX1",270,0)
 Q
"RTN","OREVNTX1",271,0)
ISHDORD(ORY,ORID) ;Return 1 if it's on-hold med order
"RTN","OREVNTX1",272,0)
 Q:'+ORID
"RTN","OREVNTX1",273,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","OREVNTX1",274,0)
 N STS,HDSTS,ODGP,INPT,OUPT,MEDS,IVMD
"RTN","OREVNTX1",275,0)
 S HDSTS=$O(^ORD(100.01,"B","HOLD",0))
"RTN","OREVNTX1",276,0)
 S STS=$P($G(^OR(100,+ORID,3)),U,3)
"RTN","OREVNTX1",277,0)
 S INPT=$O(^ORD(100.98,"B","UD RX",0))
"RTN","OREVNTX1",278,0)
 S OUPT=$O(^ORD(100.98,"B","O RX",0))
"RTN","OREVNTX1",279,0)
 S MEDS=$O(^ORD(100.98,"B","RX",0))
"RTN","OREVNTX1",280,0)
 S IVMD=$O(^ORD(100.98,"B","IV RX",0))
"RTN","OREVNTX1",281,0)
 S ODGP=$P(^OR(100,+ORID,0),U,11)
"RTN","OREVNTX1",282,0)
 I (U_INPT_U_OUPT_U_MEDS_U_IVMD_U[U_ODGP_U),(HDSTS=STS) S ORY=1
"RTN","OREVNTX1",283,0)
 Q
"RTN","OREVNTX1",284,0)
ISPASS(ORY,PTEVTID,EVTTYPE) ;Return 1 if it's a pass event
"RTN","OREVNTX1",285,0)
 S ORY=$$EVT^OREVNTX(PTEVTID)
"RTN","OREVNTX1",286,0)
 S ORY=$P($G(^ORD(100.5,+ORY,0)),U,7)
"RTN","OREVNTX1",287,0)
 I EVTTYPE="T",ORY,ORY<4 S ORY=1
"RTN","OREVNTX1",288,0)
 E  S ORY=0
"RTN","OREVNTX1",289,0)
 Q
"RTN","OREVNTX1",290,0)
ISPASS1(ORY,EVTID,EVTTYPE) ;Return 1 if it's a pass event
"RTN","OREVNTX1",291,0)
 S ORY=$P($G(^ORD(100.5,+EVTID,0)),U,7)
"RTN","OREVNTX1",292,0)
 I EVTTYPE="T",ORY,ORY<4 S ORY=1
"RTN","OREVNTX1",293,0)
 E  S ORY=0
"RTN","OREVNTX1",294,0)
 Q
"RTN","OREVNTX1",295,0)
DLGIEN(ORY,DLGNAME) ;Return Order Dialog IEN based on name
"RTN","OREVNTX1",296,0)
 Q:'$D(^ORD(101.41,"B",DLGNAME))
"RTN","OREVNTX1",297,0)
 S ORY=$O(^ORD(101.41,"B",DLGNAME,0))
"RTN","OREVNTX1",298,0)
 Q
"RTN","OREVNTX1",299,0)
GETSTS(ORY,ORDID) ;Return Order status
"RTN","OREVNTX1",300,0)
 Q:'+ORDID
"RTN","OREVNTX1",301,0)
 Q:'$D(^OR(100,+ORDID,0))
"RTN","OREVNTX1",302,0)
 S ORY=$P($G(^OR(100,+ORDID,3)),U,3)
"RTN","OREVNTX1",303,0)
 Q
"RTN","OREVNTX1",304,0)
 ;
"RTN","OREVNTX1",305,0)
CHKORD(ORDER) ;Extrinsic function to determine if order is delayed and the "event" order
"RTN","OREVNTX1",306,0)
 ;
"RTN","OREVNTX1",307,0)
 N VALUE
"RTN","OREVNTX1",308,0)
 S VALUE=0
"RTN","OREVNTX1",309,0)
 I +$P($G(^OR(100,ORDER,0)),U,17),'$O(^ORE(100.2,"AO",ORDER,0)) S VALUE=1 ;Delayed but not the "event" order
"RTN","OREVNTX1",310,0)
 Q VALUE
"RTN","ORKCHK")
0^65^B42414888
"RTN","ORKCHK",1,0)
ORKCHK ; slc/CLA - Main routine called by OE/RR to initiate order checks ;09/17/10  09:42
"RTN","ORKCHK",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,94,105,123,232,267,243,280**;Dec 17, 1997;Build 85
"RTN","ORKCHK",3,0)
EN(ORKY,ORKDFN,ORKA,ORKMODE,OROIL) ;initiate order checking
"RTN","ORKCHK",4,0)
 ;ORKY: array of returned msgs in format: ornum^orderchk ien^clin danger^msg
"RTN","ORKCHK",5,0)
 ;ORKDFN: patient dfn
"RTN","ORKCHK",6,0)
 ;ORKA: array of order information in the format:
"RTN","ORKCHK",7,0)
 ; orderable item ien|
"RTN","ORKCHK",8,0)
 ; display group-filler app|
"RTN","ORKCHK",9,0)
 ; nat'l id^nat'l text^nat'l code sys^local id^local text^local code sys|
"RTN","ORKCHK",10,0)
 ; effective d/t|
"RTN","ORKCHK",11,0)
 ; order number|
"RTN","ORKCHK",12,0)
 ; filler data (LR: specimen ien, PS: meds prev ordered during this session in format med1^med2^...)
"RTN","ORKCHK",13,0)
 ;ORKMODE: mode/event trigger (DISPLAY,SELECT,ACCEPT,SESSION,ALL,NOTIF)
"RTN","ORKCHK",14,0)
 ; PS: meds previously ordered during this session med1^med2^...
"RTN","ORKCHK",15,0)
 ;OROIL: array containing the order info passed in (oly for ACCEPT mode)
"RTN","ORKCHK",16,0)
 N ORKQ,ORKN S ORKQ=0,ORKN=1
"RTN","ORKCHK",17,0)
 S:+$G(ORKDFN)<1 ORKY(ORKN)="^^^Order Checking Unavailable - invalid patient id",ORKQ=1,ORKN=ORKN+1
"RTN","ORKCHK",18,0)
 S:'$L($G(ORKMODE)) ORKY(ORKN)="^^^Order Checking Unavailable - invalid mode/event",ORKQ=1,ORKN=ORKN+1
"RTN","ORKCHK",19,0)
 Q:$G(ORKQ)=1
"RTN","ORKCHK",20,0)
 Q:+$G(ORKA)<1
"RTN","ORKCHK",21,0)
 N ORKX,ORKS,DNGR,ORENT,ORKENT,ORKNENT,ORNUM,ORKOFF,ORKTMODE
"RTN","ORKCHK",22,0)
 N ORKADUZ,ORKNDUZ,ORKI,ORKPRIM,ORKNMSG,ORKMSG,ORKLOG,ORKLD,ORKLI,ORKOI
"RTN","ORKCHK",23,0)
 N ORKDG,ORKLPS,ORKPSA,ORKCNT,ORKDGI
"RTN","ORKCHK",24,0)
 ;
"RTN","ORKCHK",25,0)
 ;save array of orders for use in session processing:
"RTN","ORKCHK",26,0)
 M ^TMP("ORKA",$J)=ORKA
"RTN","ORKCHK",27,0)
 ;
"RTN","ORKCHK",28,0)
 ;get patient's location flag (INPATIENT ONLY - outpt locations cannot be
"RTN","ORKCHK",29,0)
 ;reliably determined, and many simultaneous outpt locations can occur):
"RTN","ORKCHK",30,0)
 N DFN,ORKLOC
"RTN","ORKCHK",31,0)
 S DFN=ORKDFN,VA200="" D OERR^VADPT
"RTN","ORKCHK",32,0)
 S ORKLOC=+$G(^DIC(42,+VAIN(4),44))
"RTN","ORKCHK",33,0)
 K VA200,VAIN
"RTN","ORKCHK",34,0)
 ;
"RTN","ORKCHK",35,0)
 ;get user's service/section flag:
"RTN","ORKCHK",36,0)
 N ORKSRV
"RTN","ORKCHK",37,0)
 S ORKSRV=$$GET1^DIQ(200,DUZ,29,"I") I +ORKSRV>0 S ORKSRV=$P(ORKSRV,U)
"RTN","ORKCHK",38,0)
 ;
"RTN","ORKCHK",39,0)
 ;log order check debug messages (or not)
"RTN","ORKCHK",40,0)
 S ORKLOG=$$GET^XPAR("DIV^SYS^PKG","ORK DEBUG ENABLE/DISABLE",1,"I")
"RTN","ORKCHK",41,0)
 I $G(ORKLOG)="D" K ^XTMP("ORKLOG") S ^XTMP("ORKLOG",0)=""
"RTN","ORKCHK",42,0)
 I +$P($G(^XTMP("ORKLOG",0)),U,3)>5000 K ^XTMP("ORKLOG")
"RTN","ORKCHK",43,0)
 ;
"RTN","ORKCHK",44,0)
 ;if SESSION mode & pharmacy order occurred in session get unsigned med orders
"RTN","ORKCHK",45,0)
 I ORKMODE="SESSION" D
"RTN","ORKCHK",46,0)
 .S ORKDG=$P(ORKA(1),"|",2)
"RTN","ORKCHK",47,0)
 .I $E($G(ORKDG),1,2)="PS" D
"RTN","ORKCHK",48,0)
 ..S ORKDGI=0,ORKDGI=$O(^ORD(100.98,"B","PHARMACY",ORKDGI))
"RTN","ORKCHK",49,0)
 ..K ^TMP("ORR",$J)
"RTN","ORKCHK",50,0)
 ..D EN^ORQ1(DFN_";DPT(",ORKDGI,11,"","","",0,0)
"RTN","ORKCHK",51,0)
 ..;store unsigned med orders in ^TMP("ORR",$J for processing in ORKPS
"RTN","ORKCHK",52,0)
 ;
"RTN","ORKCHK",53,0)
 ;main processing loop:
"RTN","ORKCHK",54,0)
 S ORKX="" F  S ORKX=$O(ORKA(ORKX)) Q:ORKX=""  D
"RTN","ORKCHK",55,0)
 .S ORKOI=$P(ORKA(ORKX),"|")
"RTN","ORKCHK",56,0)
 .;
"RTN","ORKCHK",57,0)
 .;log debug msgs if parameter is enabled:
"RTN","ORKCHK",58,0)
 .I $G(ORKLOG)="E" D
"RTN","ORKCHK",59,0)
 ..S ORKLD=$$NOW^XLFDT
"RTN","ORKCHK",60,0)
 ..S ORKLI=0
"RTN","ORKCHK",61,0)
 ..I +$P($G(^XTMP("ORKLOG",0)),U,3)<1 S $P(^XTMP("ORKLOG",0),U,3)=0
"RTN","ORKCHK",62,0)
 ..S ORKCNT=$P(^XTMP("ORKLOG",0),U,3)+1
"RTN","ORKCHK",63,0)
 ..S ^XTMP("ORKLOG",0)=$$FMADD^XLFDT(ORKLD,3,"","","")_U_ORKLD_U_ORKCNT
"RTN","ORKCHK",64,0)
 ..S ^XTMP("ORKLOG",ORKLD,ORKDFN,+$G(ORKOI),ORKMODE,DUZ,ORKLI)=ORKA(ORKX)
"RTN","ORKCHK",65,0)
 .;
"RTN","ORKCHK",66,0)
 .S ORKDG=$P(ORKA(ORKX),"|",2),ORKTMODE=""
"RTN","ORKCHK",67,0)
 .S ORKENT="USR^LOC.`"_+$G(ORKLOC)_"^SRV.`"_+$G(ORKSRV)_"^DIV^SYS^PKG"
"RTN","ORKCHK",68,0)
 .Q:'$L($G(ORKDG))
"RTN","ORKCHK",69,0)
 .;
"RTN","ORKCHK",70,0)
 .;if pharmacy order and multiple pharmacy orders in session add data node:
"RTN","ORKCHK",71,0)
 .I $E(ORKDG,1,2)="PS",($L($G(ORKPSA))) D
"RTN","ORKCHK",72,0)
 ..S $P(ORKA(ORKX),"|",6)=ORKPSA
"RTN","ORKCHK",73,0)
 .;
"RTN","ORKCHK",74,0)
 .S ORNUM=$P(ORKA(ORKX),"|",5)
"RTN","ORKCHK",75,0)
 .; get correct DUZ for notification processing if in NOTIF mode:
"RTN","ORKCHK",76,0)
 .I ORKMODE="NOTIF" D
"RTN","ORKCHK",77,0)
 ..S:+$G(ORNUM)>0 ORKNDUZ=$$ORDERER^ORQOR2(ORNUM) ;ordering provider
"RTN","ORKCHK",78,0)
 ..S:+$G(ORNUM)<1 ORKNDUZ=$P($$PRIM^ORQPTQ4(ORKDFN),U) ;prim provider
"RTN","ORKCHK",79,0)
 ..I +$G(ORKNDUZ)>0 D
"RTN","ORKCHK",80,0)
 ...S ORKSRV=$$GET1^DIQ(200,ORKNDUZ,29,"I") I +ORKSRV>0 S ORKSRV=$P(ORKSRV,U)
"RTN","ORKCHK",81,0)
 ...S ORKNENT="USR.`"_+ORKNDUZ_"^LOC.`"_+$G(ORKLOC)_"^SRV.`"_+$G(ORKSRV)_"^DIV^SYS^PKG"
"RTN","ORKCHK",82,0)
 ..S:+$G(ORKNDUZ)<1 ORKNENT="LOC.`"_+$G(ORKLOC)_"^DIV^SYS^PKG"
"RTN","ORKCHK",83,0)
 .S ORENT=$S(ORKMODE="NOTIF":ORKNENT,1:ORKENT)
"RTN","ORKCHK",84,0)
 .;
"RTN","ORKCHK",85,0)
 .;If the order is a delayed release order (NOTIF) process all nodes.
"RTN","ORKCHK",86,0)
 .;If it is a renewal, edit or delayed signature order (ALL) process all
"RTN","ORKCHK",87,0)
 .;modes except SESSION which gets processed just before signature:
"RTN","ORKCHK",88,0)
 .I ORKMODE="NOTIF"!(ORKMODE="ALL") S ORKTMODE=ORKMODE D
"RTN","ORKCHK",89,0)
 ..D EN^ORKCHK3(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)  ;DISPLAY
"RTN","ORKCHK",90,0)
 ..D EN^ORKCHK4(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)  ;SELECT
"RTN","ORKCHK",91,0)
 ..D EN^ORKCHK5(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE,.OROIL)  ;ACCEPT
"RTN","ORKCHK",92,0)
 ..I ORKMODE="NOTIF" D EN^ORKCHK6(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)  ;SESSION
"RTN","ORKCHK",93,0)
 ..S ORKMODE=ORKTMODE
"RTN","ORKCHK",94,0)
 .;
"RTN","ORKCHK",95,0)
 .;Process regular orders/modes:
"RTN","ORKCHK",96,0)
 .I '$L($G(ORKTMODE)) D
"RTN","ORKCHK",97,0)
 ..I ORKMODE="DISPLAY" D EN^ORKCHK3(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)
"RTN","ORKCHK",98,0)
 ..I ORKMODE="SELECT" D EN^ORKCHK4(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)
"RTN","ORKCHK",99,0)
 ..I ORKMODE="ACCEPT" D EN^ORKCHK5(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE,.OROIL)
"RTN","ORKCHK",100,0)
 ..I ORKMODE="SESSION" D EN^ORKCHK6(.ORKS,ORKDFN,ORKA(ORKX),ORENT,ORKTMODE)
"RTN","ORKCHK",101,0)
 ;
"RTN","ORKCHK",102,0)
 ;set messages into sorting array then into ORKY ORKS("ORK",clinical danger level,oi,msg)=ornum^order check ien^clin danger level^message
"RTN","ORKCHK",103,0)
 S ORKX="",ORKI=1
"RTN","ORKCHK",104,0)
 F  S ORKX=$O(ORKS("ORK",ORKX)) Q:ORKX=""  D
"RTN","ORKCHK",105,0)
 .S ORKY(ORKI)=ORKS("ORK",ORKX)
"RTN","ORKCHK",106,0)
 .;S ORKY(ORKI)=$E(ORKS("ORK",ORKX),1,500)
"RTN","ORKCHK",107,0)
 .;
"RTN","ORKCHK",108,0)
 .;log debug msgs if parameter is enabled:
"RTN","ORKCHK",109,0)
 .I $G(ORKLOG)="E" D
"RTN","ORKCHK",110,0)
 ..S ORKLI=$G(ORKLI)+1
"RTN","ORKCHK",111,0)
 ..S ^XTMP("ORKLOG",$$NOW^XLFDT,ORKDFN,+$G(ORKOI),ORKMODE,DUZ,ORKLI)=ORKY(ORKI)
"RTN","ORKCHK",112,0)
 ..S $P(^XTMP("ORKLOG",0),U,3)=$P($G(^XTMP("ORKLOG",0)),U,3)+1
"RTN","ORKCHK",113,0)
 .;
"RTN","ORKCHK",114,0)
 .;send moderate and high danger order checks for delayed orders as notifications:
"RTN","ORKCHK",115,0)
 .I ORKMODE="NOTIF" S DNGR=$P(ORKY(ORKI),U,3) I $G(DNGR)<3 D
"RTN","ORKCHK",116,0)
 ..S ORKADUZ="",ORNUM=$P(ORKY(ORKI),U)
"RTN","ORKCHK",117,0)
 ..S:+$G(ORKNDUZ)>0 ORKADUZ(ORKNDUZ)=""
"RTN","ORKCHK",118,0)
 ..S ORKNMSG="Order check: "_$P(ORKY(ORKI),U,4)
"RTN","ORKCHK",119,0)
 ..D EN^ORB3(54,ORKDFN,$G(ORNUM),.ORKADUZ,ORKNMSG,"")
"RTN","ORKCHK",120,0)
 .S ORKI=ORKI+1
"RTN","ORKCHK",121,0)
 ;
"RTN","ORKCHK",122,0)
 K ^TMP("ORKA",$J),^TMP("ORR",$J)
"RTN","ORKCHK",123,0)
 I $G(ORKLOG)="E" D
"RTN","ORKCHK",124,0)
 .S ORKLI=$G(ORKLI)+1
"RTN","ORKCHK",125,0)
 .S ^XTMP("ORKLOG",$$NOW^XLFDT,ORKDFN,+$G(ORKOI),ORKMODE,DUZ,ORKLI)="LEAVING ORDER CHECKING"
"RTN","ORKCHK",126,0)
 .S $P(^XTMP("ORKLOG",0),U,3)=$P($G(^XTMP("ORKLOG",0)),U,3)+1
"RTN","ORKCHK",127,0)
 D CHKRMT
"RTN","ORKCHK",128,0)
 Q
"RTN","ORKCHK",129,0)
 ;
"RTN","ORKCHK",130,0)
OI2DD(ORPSA,OROI,ORPSPKG) ;rtn dispense drugs for a PS OI
"RTN","ORKCHK",131,0)
 N PSOI
"RTN","ORKCHK",132,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKCHK",133,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKCHK",134,0)
 Q:+$G(PSOI)<1
"RTN","ORKCHK",135,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKCHK",136,0)
 Q
"RTN","ORKCHK",137,0)
CHKRMT ;
"RTN","ORKCHK",138,0)
 N I,ORQFLAG
"RTN","ORKCHK",139,0)
 S ORQFLAG=1
"RTN","ORKCHK",140,0)
 S I=0 F  S I=$O(ORKA(I)) Q:'I  I $E($P(ORKA(I),"|",2),1,2)="PS"!($E($P(ORKA(I),"|",2),1,2)="RA") S ORQFLAG=0
"RTN","ORKCHK",141,0)
 Q:$G(ORQFLAG)
"RTN","ORKCHK",142,0)
 Q:'$$HAVEHDR^ORRDI1
"RTN","ORKCHK",143,0)
 Q:$$LDPTTVAL^ORRDI2($G(DFN))
"RTN","ORKCHK",144,0)
 Q:$P($G(^XTMP("ORRDI","PSOO",ORKDFN,0)),U,3)'<0&($P($G(^XTMP("ORRDI","ART",ORKDFN,0)),U,3)'<0)
"RTN","ORKCHK",145,0)
 I $G(ORKMODE)="ACCEPT" D
"RTN","ORKCHK",146,0)
 . N IFN
"RTN","ORKCHK",147,0)
 . S IFN=$O(ORKY(""),-1)+1
"RTN","ORKCHK",148,0)
 . S ORKY(IFN)="^99^2^Remote Order Checking not available - checks done on local data only"
"RTN","ORKCHK",149,0)
 . K ^TMP($J,"ORRDI") S ^TMP($J,"ORRDI",ORKDFN)=1
"RTN","ORKCHK",150,0)
 I $G(ORKMODE)="SESSION" D
"RTN","ORKCHK",151,0)
 . N I,IFN,ORARR
"RTN","ORKCHK",152,0)
 . S IFN=$O(ORKY(""),-1)
"RTN","ORKCHK",153,0)
 . S I=0 F  S I=$O(ORKY(I)) Q:'I  S ORARR(+ORKY(I))=""
"RTN","ORKCHK",154,0)
 . S I=0 F  S I=$O(ORARR(I)) Q:'I  S IFN=IFN+1,ORKY(IFN)=I_"^99^2^Remote Order Checking not available - checks done on local data only"
"RTN","ORKCHK",155,0)
 . K ^TMP($J,"ORRDI") S ^TMP($J,"ORRDI",ORKDFN)=1
"RTN","ORKCHK",156,0)
 Q
"RTN","ORKCHK5")
0^66^B45867526
"RTN","ORKCHK5",1,0)
ORKCHK5 ; slc/CLA - Support routine called by ORKCHK to do ACCEPT mode order checks ;10/14/10  09:02
"RTN","ORKCHK5",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,94,123,190,280**;Dec 17, 1997;Build 85
"RTN","ORKCHK5",3,0)
 Q
"RTN","ORKCHK5",4,0)
 ;
"RTN","ORKCHK5",5,0)
EN(ORKS,ORKDFN,ORKA,ORENT,ORKTMODE,OROIL) ;perform order checking for orderable item acceptance
"RTN","ORKCHK5",6,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORKCHK5",7,0)
 ;
"RTN","ORKCHK5",8,0)
 N OI,ORKDG,HL7,ODT,ORNUM,HL7NPTR,HL7NTXT,HL7NCOD,HL7LPTR,HL7LTXT,HL7LCOD
"RTN","ORKCHK5",9,0)
 N OCN,DNGR,ORKMSG,ORKPDATA,ORKOCNUM
"RTN","ORKCHK5",10,0)
 ;
"RTN","ORKCHK5",11,0)
 S OI=$P(ORKA,"|"),ORKDG=$P(ORKA,"|",2),HL7=$P(ORKA,"|",3)
"RTN","ORKCHK5",12,0)
 S ODT=$P(ORKA,"|",4),ORNUM=$P(ORKA,"|",5),ORKPDATA=$P(ORKA,"|",6)
"RTN","ORKCHK5",13,0)
 S HL7NPTR=$P(HL7,U),HL7NTXT=$P(HL7,U,2),HL7NCOD=$P(HL7,U,3)
"RTN","ORKCHK5",14,0)
 S HL7LPTR=$P(HL7,U,4),HL7LTXT=$P(HL7,U,5),HL7LCOD=$P(HL7,U,6)
"RTN","ORKCHK5",15,0)
 I ORKDG="GMRC",'$L(ODT) S ODT=$$NOW^XLFDT  ;def consult order d/t is now
"RTN","ORKCHK5",16,0)
 ;
"RTN","ORKCHK5",17,0)
 I $E(ORKDG,1,2)="PS" D PHARM
"RTN","ORKCHK5",18,0)
 I $E(ORKDG,1,2)'="PS",($E(ORKDG,1,2)'="LR"),($L($G(OI))),($L($G(ODT))),(ORKTMODE'="ALL") D DUPOR
"RTN","ORKCHK5",19,0)
 I $E(ORKDG,1,2)="LR",($L($G(OI))),($L($G(ODT))),(ORKTMODE'="ALL") D
"RTN","ORKCHK5",20,0)
 .D DUPLAB
"RTN","ORKCHK5",21,0)
 .D LABFREQ
"RTN","ORKCHK5",22,0)
 I $E(ORKDG,1,2)'="PS" D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"ACCEPT")
"RTN","ORKCHK5",23,0)
 D REMCHK(.ORKS,OI,ORKDFN) ;do reminder order checks
"RTN","ORKCHK5",24,0)
 Q
"RTN","ORKCHK5",25,0)
 ;
"RTN","ORKCHK5",26,0)
PHARM ;process pharmacy order checks:
"RTN","ORKCHK5",27,0)
 N ORPSPKG,ORPSA,ORKDD
"RTN","ORKCHK5",28,0)
 N ORALLRN,ORALLRF,ORALLRD
"RTN","ORKCHK5",29,0)
 D PARAMS("ALLERGY-DRUG INTERACTION",.ORALLRN,.ORALLRF,.ORALLRD)
"RTN","ORKCHK5",30,0)
 ;
"RTN","ORKCHK5",31,0)
 D DSGCHK(.ORKS,ORKDFN,.OROIL,ORKA) ;do pharmacy dosage checks
"RTN","ORKCHK5",32,0)
 ;dispense drug selected:
"RTN","ORKCHK5",33,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK5",34,0)
 .D RXOCS
"RTN","ORKCHK5",35,0)
 .D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"ACCEPT")
"RTN","ORKCHK5",36,0)
 ;
"RTN","ORKCHK5",37,0)
 ;dispense drug NOT selected, split OI into dispense drugs:
"RTN","ORKCHK5",38,0)
 I '$L($G(HL7LPTR)) D
"RTN","ORKCHK5",39,0)
 .S ORPSPKG=$E(ORKDG,3)
"RTN","ORKCHK5",40,0)
 .I ORPSPKG="H" S ORPSPKG="X"  ;change to "X" if "H"erbal/non-VA med
"RTN","ORKCHK5",41,0)
 .I "IOX"[ORPSPKG D OI2DD(.ORPSA,OI,ORPSPKG)
"RTN","ORKCHK5",42,0)
 .S ORKDD=0 F  S ORKDD=$O(ORPSA(ORKDD)) Q:'ORKDD  D
"RTN","ORKCHK5",43,0)
 ..S HL7LTXT=ORPSA(ORKDD)
"RTN","ORKCHK5",44,0)
 ..S HL7NPTR=$P(ORKDD,";",2)
"RTN","ORKCHK5",45,0)
 ..S HL7LPTR=+ORKDD
"RTN","ORKCHK5",46,0)
 ..S HL7LCOD="99PSD",HL7NCOD="99NDF"
"RTN","ORKCHK5",47,0)
 ..S $P(HL7,U)=HL7NPTR,$P(HL7,U,3)=HL7NCOD
"RTN","ORKCHK5",48,0)
 ..S $P(HL7,U,4)=HL7LPTR,$P(HL7,U,5)=HL7LTXT,$P(HL7,U,6)=HL7LCOD
"RTN","ORKCHK5",49,0)
 ..S $P(ORKA,"|",3)=HL7  ;set these for MLM OCX call
"RTN","ORKCHK5",50,0)
 ..D RXOCS
"RTN","ORKCHK5",51,0)
 ..D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"ACCEPT")
"RTN","ORKCHK5",52,0)
 Q
"RTN","ORKCHK5",53,0)
 ;
"RTN","ORKCHK5",54,0)
RXOCS ;drug-allergy interaction
"RTN","ORKCHK5",55,0)
 Q:ORALLRF="D"
"RTN","ORKCHK5",56,0)
 N ORKAL
"RTN","ORKCHK5",57,0)
 I $L($G(HL7NPTR)),($G(HL7NCOD)="99NDF") D
"RTN","ORKCHK5",58,0)
 .D RXN^ORQQAL(.ORKAL,ORKDFN,"DR",HL7NPTR,$G(HL7LPTR)) I (ORKAL>0) D
"RTN","ORKCHK5",59,0)
 ..Q:$L($P(ORKAL,U,2))<1
"RTN","ORKCHK5",60,0)
 ..S ORKMSG="Previous adverse reaction to: "_$P(ORKAL,U,2)
"RTN","ORKCHK5",61,0)
 ..S ORKS("ORK",ORALLRD_","_$G(ORNUM)_","_$E(ORKMSG,1,225))=ORNUM_U_ORALLRN_U_ORALLRD_U_ORKMSG
"RTN","ORKCHK5",62,0)
 Q
"RTN","ORKCHK5",63,0)
 ;
"RTN","ORKCHK5",64,0)
OI2DD(ORPSA,OROI,ORPSPKG)       ;rtn dispense drugs for a PS OI
"RTN","ORKCHK5",65,0)
 N PSOI
"RTN","ORKCHK5",66,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKCHK5",67,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKCHK5",68,0)
 Q:+$G(PSOI)<1
"RTN","ORKCHK5",69,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKCHK5",70,0)
 Q
"RTN","ORKCHK5",71,0)
 ;
"RTN","ORKCHK5",72,0)
DUPOR ;duplicate orders for non-pharmacy and non-lab:
"RTN","ORKCHK5",73,0)
 S OCN=0,OCN=$O(^ORD(100.8,"B","DUPLICATE ORDER",OCN))
"RTN","ORKCHK5",74,0)
 Q:+$G(OCN)<1
"RTN","ORKCHK5",75,0)
 Q:$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",OCN,"I")="D"
"RTN","ORKCHK5",76,0)
 N ORKOR S ORKOR=0
"RTN","ORKCHK5",77,0)
 D DUP^ORKOR(.ORKOR,ORKDFN,OI,ODT,ORKDG) I (ORKOR>0) D
"RTN","ORKCHK5",78,0)
 .S ORKOCNUM=+$P(ORKOR,U)
"RTN","ORKCHK5",79,0)
 .S DNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",OCN,"I")
"RTN","ORKCHK5",80,0)
 .S ORKMSG="Duplicate order: "_$P(ORKOR,U,2)
"RTN","ORKCHK5",81,0)
 .S ORKS("ORK",DNGR_","_$G(ORNUM)_","_ORKOCNUM_","_$E(ORKMSG,1,225))=ORNUM_U_OCN_U_DNGR_U_ORKMSG_U_ORKOCNUM
"RTN","ORKCHK5",82,0)
 Q
"RTN","ORKCHK5",83,0)
 ;
"RTN","ORKCHK5",84,0)
DUPLAB ;duplicate laboratory orders:
"RTN","ORKCHK5",85,0)
 N ORKLR,OCI
"RTN","ORKCHK5",86,0)
 S ORKLR=0,OCI=""
"RTN","ORKCHK5",87,0)
 S OCN=0,OCN=$O(^ORD(100.8,"B","DUPLICATE ORDER",OCN))
"RTN","ORKCHK5",88,0)
 Q:+$G(OCN)<1
"RTN","ORKCHK5",89,0)
 Q:$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",OCN,"I")="D"
"RTN","ORKCHK5",90,0)
 S DNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",OCN,"I")
"RTN","ORKCHK5",91,0)
 D DUP^ORKLR(.ORKLR,OI,ORKDFN,ODT,ORKPDATA)
"RTN","ORKCHK5",92,0)
 F  S OCI=$O(ORKLR(OCI)) Q:OCI=""  D
"RTN","ORKCHK5",93,0)
 .S ORKOCNUM=+$P(ORKLR(OCI),U)
"RTN","ORKCHK5",94,0)
 .S ORKMSG="Duplicate order: "_$P(ORKLR(OCI),U,2)
"RTN","ORKCHK5",95,0)
 .S ORKS("ORK",DNGR_","_$G(ORNUM)_","_ORKOCNUM_","_$E(ORKMSG,1,225))=ORNUM_U_OCN_U_DNGR_U_ORKMSG_U_ORKOCNUM
"RTN","ORKCHK5",96,0)
 Q
"RTN","ORKCHK5",97,0)
 ;
"RTN","ORKCHK5",98,0)
LABFREQ ;lab order frequency restrictions:
"RTN","ORKCHK5",99,0)
 N ORKLR,OCI
"RTN","ORKCHK5",100,0)
 S ORKLR=0,OCI=""
"RTN","ORKCHK5",101,0)
 S OCN=0,OCN=$O(^ORD(100.8,"B","LAB ORDER FREQ RESTRICTIONS",OCN))
"RTN","ORKCHK5",102,0)
 Q:+$G(OCN)<1
"RTN","ORKCHK5",103,0)
 Q:$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",OCN,"I")="D"
"RTN","ORKCHK5",104,0)
 S DNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",OCN,"I")
"RTN","ORKCHK5",105,0)
 D ORFREQ^ORKLR2(.ORKLR,OI,ORKDFN_";DPT(",ODT,ORKPDATA)
"RTN","ORKCHK5",106,0)
 S OCI="" F  S OCI=$O(ORKLR(OCI)) Q:OCI=""  D
"RTN","ORKCHK5",107,0)
 .S ORKMSG=$P(ORKLR(OCI),U,2)
"RTN","ORKCHK5",108,0)
 .S ORKS("ORK",DNGR_","_$G(ORNUM)_","_$E(ORKMSG,1,225))=ORNUM_U_OCN_U_DNGR_U_ORKMSG
"RTN","ORKCHK5",109,0)
 Q
"RTN","ORKCHK5",110,0)
 ;
"RTN","ORKCHK5",111,0)
PARAMS(ORKNAME,ORKNUM,ORKFLAG,ORKDNGR) ; get parameter values for an order chk
"RTN","ORKCHK5",112,0)
 S ORKNUM=0,ORKNUM=$O(^ORD(100.8,"B",ORKNAME,ORKNUM))
"RTN","ORKCHK5",113,0)
 S ORKFLAG=$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",ORKNUM,"I")
"RTN","ORKCHK5",114,0)
 S ORKDNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",ORKNUM,"I")
"RTN","ORKCHK5",115,0)
 Q
"RTN","ORKCHK5",116,0)
REMCHK(ORRET,OROI,ORDFN) ; DO REMINDER ORDER CHECKS
"RTN","ORKCHK5",117,0)
 ;
"RTN","ORKCHK5",118,0)
 N ORKGLOB S ORKGLOB=$H
"RTN","ORKCHK5",119,0)
 I $D(^PXD(801,"AOIR",OROI,1)) D  ;check to see if I need to call for TEST OC for this OI
"RTN","ORKCHK5",120,0)
 .N ORKNUM,ORKFLAG,ORKDNGR
"RTN","ORKCHK5",121,0)
 .D PARAMS("CLINICAL REMINDER TEST",.ORKNUM,.ORKFLAG,.ORKDNGR)
"RTN","ORKCHK5",122,0)
 .Q:ORKFLAG="D"
"RTN","ORKCHK5",123,0)
 .D ORDERCHK^PXRMORCH(ORDFN,OROI,1,0)
"RTN","ORKCHK5",124,0)
 .Q:'$D(^TMP($J,OROI))
"RTN","ORKCHK5",125,0)
 .N ORCDL S ORCDL="" F  S ORCDL=$O(^TMP($J,OROI,ORCDL)) Q:'$L(ORCDL)  S ORKDNGR=$S(ORCDL="H":1,ORCDL="M":2,1:3) D
"RTN","ORKCHK5",126,0)
 ..N ORRULE S ORRULE="" F  S ORRULE=$O(^TMP($J,OROI,ORCDL,ORRULE)) Q:'$L(ORRULE)  D
"RTN","ORKCHK5",127,0)
 ...S ORRET("ORK",ORCDL_","_$G(ORNUM)_","_ORKNUM_","_ORRULE)=ORNUM_U_ORKNUM_U_ORCDL_U_"||"_ORKGLOB_"&"_ORRULE
"RTN","ORKCHK5",128,0)
 ...M ^TMP($J,"ORK XTRA TXT",ORKGLOB,ORRULE)=^TMP($J,OROI,ORCDL,ORRULE)
"RTN","ORKCHK5",129,0)
 .K ^TMP($J,OROI)
"RTN","ORKCHK5",130,0)
 I $D(^PXD(801,"AOIR",OROI,0)) D  ;check to see if I need to call for LIVE OC for this OI
"RTN","ORKCHK5",131,0)
 .N ORKNUM,ORKFLAG,ORKDNGR
"RTN","ORKCHK5",132,0)
 .D PARAMS("CLINICAL REMINDER LIVE",.ORKNUM,.ORKFLAG,.ORKDNGR)
"RTN","ORKCHK5",133,0)
 .Q:ORKFLAG="D"
"RTN","ORKCHK5",134,0)
 .D ORDERCHK^PXRMORCH(ORDFN,OROI,0,0)
"RTN","ORKCHK5",135,0)
 .Q:'$D(^TMP($J,OROI))
"RTN","ORKCHK5",136,0)
 .N ORCDL S ORCDL="" F  S ORCDL=$O(^TMP($J,OROI,ORCDL)) Q:'$L(ORCDL)  S ORKDNGR=$S(ORCDL="H":1,ORCDL="M":2,1:3) D
"RTN","ORKCHK5",137,0)
 ..N ORRULE S ORRULE="" F  S ORRULE=$O(^TMP($J,OROI,ORCDL,ORRULE)) Q:'$L(ORRULE)  D
"RTN","ORKCHK5",138,0)
 ...S ORRET("ORK",ORCDL_","_$G(ORNUM)_","_ORKNUM_","_ORRULE)=ORNUM_U_ORKNUM_U_ORCDL_U_"||"_ORKGLOB_"&"_ORRULE
"RTN","ORKCHK5",139,0)
 ...M ^TMP($J,"ORK XTRA TXT",ORKGLOB,ORRULE)=^TMP($J,OROI,ORCDL,ORRULE)
"RTN","ORKCHK5",140,0)
 .K ^TMP($J,OROI)
"RTN","ORKCHK5",141,0)
 Q
"RTN","ORKCHK5",142,0)
 ;
"RTN","ORKCHK5",143,0)
DSGCHK(ORRET,ORDFN,OROIL,ORKA) ;DO DOSAGE ORDER CHECKS
"RTN","ORKCHK5",144,0)
 Q:'$$PATCH^XPDUTL("PSS*1.0*117")
"RTN","ORKCHK5",145,0)
 Q:'$$DS^PSSDSAPI
"RTN","ORKCHK5",146,0)
 Q:$G(XQY0)="OR BCMA ORDER COM"
"RTN","ORKCHK5",147,0)
 N ORTYPE,ORY,ORI,ORKNUM,ORKFLAG,ORKDNGR
"RTN","ORKCHK5",148,0)
 D PARAMS("DRUG DOSAGE",.ORKNUM,.ORKFLAG,.ORKDNGR)
"RTN","ORKCHK5",149,0)
 Q:ORKFLAG="D"  ;this checks if the order check is turned on or not
"RTN","ORKCHK5",150,0)
 S ORTYPE=$P(ORKA,"|",2)
"RTN","ORKCHK5",151,0)
 D EN^ORDSGCHK(.ORY,ORDFN,ORTYPE,.OROIL)
"RTN","ORKCHK5",152,0)
 N ORI S ORI=0 F  S ORI=$O(ORY(ORI)) Q:'ORI  D
"RTN","ORKCHK5",153,0)
 .I $P(ORY(ORI),U)="ERR" S ORRET("ORK",ORKDNGR_","_$G(ORNUM)_","_$E($P(ORY(ORI),U,2),1,225))=ORNUM_U_25_U_2_U_$P(ORY(ORI),U,2)
"RTN","ORKCHK5",154,0)
 .I $P(ORY(ORI),U)="DS" S ORRET("ORK",ORKDNGR_","_$G(ORNUM)_","_$E($P(ORY(ORI),U,2),1,225))=ORNUM_U_ORKNUM_U_ORKDNGR_U_$P(ORY(ORI),U,2)
"RTN","ORKCHK5",155,0)
 Q
"RTN","ORKCHK6")
0^39^B31072886
"RTN","ORKCHK6",1,0)
ORKCHK6 ; slc/CLA - Support routine called by ORKCHK to do SESSION mode order checks ;01/24/11  10:35
"RTN","ORKCHK6",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**6,32,74,87,94,123,162,190,249,280**;Dec 17, 1997;Build 85
"RTN","ORKCHK6",3,0)
 Q
"RTN","ORKCHK6",4,0)
 ;
"RTN","ORKCHK6",5,0)
EN(ORKS,ORKDFN,ORKA,ORENT,ORKTMODE) ;perform order checking for entire ordering session
"RTN","ORKCHK6",6,0)
 Q:$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE",1,"I")="D"
"RTN","ORKCHK6",7,0)
 ;
"RTN","ORKCHK6",8,0)
 N OI,ORKDG,HL7,ODT,ORNUM,HL7NPTR,HL7NTXT,HL7NCOD,HL7LPTR,HL7LTXT,HL7LCOD
"RTN","ORKCHK6",9,0)
 N ORKMSG,ORKDGI,ORKT,ORKTXT,ORKPDATA
"RTN","ORKCHK6",10,0)
 ;
"RTN","ORKCHK6",11,0)
 S OI=$P(ORKA,"|"),ORKDG=$P(ORKA,"|",2),HL7=$P(ORKA,"|",3)
"RTN","ORKCHK6",12,0)
 S ODT=$P(ORKA,"|",4),ORNUM=$P(ORKA,"|",5),ORKPDATA=$P(ORKA,"|",6)
"RTN","ORKCHK6",13,0)
 S HL7NPTR=$P(HL7,U),HL7NTXT=$P(HL7,U,2),HL7NCOD=$P(HL7,U,3)
"RTN","ORKCHK6",14,0)
 S HL7LPTR=$P(HL7,U,4),HL7LTXT=$P(HL7,U,5),HL7LCOD=$P(HL7,U,6)
"RTN","ORKCHK6",15,0)
 ;
"RTN","ORKCHK6",16,0)
 S:ORKDG="PSJ" ORKDG="PSI"
"RTN","ORKCHK6",17,0)
 I $E(ORKDG,1,2)="PS" D PHARM
"RTN","ORKCHK6",18,0)
 I $E(ORKDG,1,2)'="PS" D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",19,0)
 Q
"RTN","ORKCHK6",20,0)
 ;
"RTN","ORKCHK6",21,0)
PHARM ;process pharmacy order checks:
"RTN","ORKCHK6",22,0)
 N ORPSPKG,ORPSA,ORKDD
"RTN","ORKCHK6",23,0)
 N ORCRITN,ORCRITF,ORCRITD,ORSIGN,ORSIGF,ORSIGD,ORDUPN,ORDUPF,ORDUPD,ORDUPC,ORDUPCF,ORDUPCD,ORALLRN,ORALLRF,ORALLRD
"RTN","ORKCHK6",24,0)
 ;
"RTN","ORKCHK6",25,0)
 D PARAMS("ALLERGY-DRUG INTERACTION",.ORALLRN,.ORALLRF,.ORALLRD)
"RTN","ORKCHK6",26,0)
 D PARAMS("CRITICAL DRUG INTERACTION",.ORCRITN,.ORCRITF,.ORCRITD)
"RTN","ORKCHK6",27,0)
 D PARAMS("SIGNIFICANT DRUG INTERACTION",.ORSIGN,.ORSIGF,.ORSIGD)
"RTN","ORKCHK6",28,0)
 D PARAMS("DUPLICATE DRUG ORDER",.ORDUPN,.ORDUPF,.ORDUPD)
"RTN","ORKCHK6",29,0)
 D PARAMS("DUPLICATE DRUG CLASS ORDER",.ORDUPCN,.ORDUPCF,.ORDUPCD)
"RTN","ORKCHK6",30,0)
 ;
"RTN","ORKCHK6",31,0)
 ;dispense drug selected:
"RTN","ORKCHK6",32,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK6",33,0)
 .D RXOCS
"RTN","ORKCHK6",34,0)
 .D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",35,0)
 ;
"RTN","ORKCHK6",36,0)
 ;dispense drug NOT selected, split OI into dispense drugs:
"RTN","ORKCHK6",37,0)
 I '$L($G(HL7LPTR)) D
"RTN","ORKCHK6",38,0)
 .S ORPSPKG=$E(ORKDG,3)
"RTN","ORKCHK6",39,0)
 .I ORPSPKG="H" S ORPSPKG="X"  ;change to "X" if "H"erbal/non-VA med
"RTN","ORKCHK6",40,0)
 .I "IOX"[ORPSPKG D OI2DD(.ORPSA,OI,ORPSPKG)
"RTN","ORKCHK6",41,0)
 .S ORKDD=0 F  S ORKDD=$O(ORPSA(ORKDD)) Q:'ORKDD  D
"RTN","ORKCHK6",42,0)
 ..S HL7LTXT=ORPSA(ORKDD)
"RTN","ORKCHK6",43,0)
 ..S HL7NPTR=$P(ORKDD,";",2)
"RTN","ORKCHK6",44,0)
 ..S HL7LPTR=+ORKDD
"RTN","ORKCHK6",45,0)
 ..S HL7LCOD="99PSD",HL7NCOD="99NDF"
"RTN","ORKCHK6",46,0)
 ..S $P(HL7,U)=HL7NPTR,$P(HL7,U,3)=HL7NCOD
"RTN","ORKCHK6",47,0)
 ..S $P(HL7,U,4)=HL7LPTR,$P(HL7,U,5)=HL7LTXT,$P(HL7,U,6)=HL7LCOD
"RTN","ORKCHK6",48,0)
 ..S $P(ORKA,"|",3)=HL7  ;set these for MLM OCX call
"RTN","ORKCHK6",49,0)
 ..D RXOCS
"RTN","ORKCHK6",50,0)
 ..D MLM^ORKCHK2(.ORKS,ORKDFN,ORKA,ORENT,"SESSION")
"RTN","ORKCHK6",51,0)
 Q
"RTN","ORKCHK6",52,0)
 ;
"RTN","ORKCHK6",53,0)
RXOCS ;drug-drug interaction, duplicate drug order, duplicate drug class
"RTN","ORKCHK6",54,0)
 Q:ORCRITF_ORSIGF_ORDUPF_ORDUPCF_ORALLRF'["E"  ;quit if none are "E"nabled
"RTN","ORKCHK6",55,0)
 N ORKRX,ORPSNUM
"RTN","ORKCHK6",56,0)
 I $L($G(HL7LPTR)),($G(HL7LCOD)="99PSD") D
"RTN","ORKCHK6",57,0)
 .D CHKSESS^ORKPS(.ORKRX,ORKDFN,HL7LPTR,OI,ORKPDATA,ORKDG)
"RTN","ORKCHK6",58,0)
 .N CHK,XX S CHK=0,XX=""
"RTN","ORKCHK6",59,0)
 .F  S CHK=$O(ORKRX(CHK)) Q:'CHK  D
"RTN","ORKCHK6",60,0)
 ..S XX=ORKRX(CHK)
"RTN","ORKCHK6",61,0)
 ..;
"RTN","ORKCHK6",62,0)
 ..;critical drug interaction:
"RTN","ORKCHK6",63,0)
 ..I $P(XX,U)="DI",$P(XX,U,5)="CRITICAL" D
"RTN","ORKCHK6",64,0)
 ...Q:ORCRITF="D"
"RTN","ORKCHK6",65,0)
 ...S ORPSNUM=$P(XX,U,8)  ;get the associated order number
"RTN","ORKCHK6",66,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK6",67,0)
 ...E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK6",68,0)
 ...S ORKMSG=$P(XX,U,5)_" drug-drug interaction: "_$P(XX,U,6)_" & "_$P(XX,U,7)
"RTN","ORKCHK6",69,0)
 ...S ORKS("ORK",ORCRITD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORCRITN_U_ORCRITD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK6",70,0)
 ..;
"RTN","ORKCHK6",71,0)
 ..;significant drug interaction:
"RTN","ORKCHK6",72,0)
 ..I $P(XX,U)="DI",$P(XX,U,5)="SIGNIFICANT" D
"RTN","ORKCHK6",73,0)
 ...Q:ORSIGF="D"
"RTN","ORKCHK6",74,0)
 ...S ORPSNUM=$P(XX,U,8)  ;get the associated order number
"RTN","ORKCHK6",75,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK6",76,0)
 ...E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK6",77,0)
 ...S ORKMSG=$P(XX,U,5)_" drug-drug interaction: "_$P(XX,U,6)_" & "_$P(XX,U,7)
"RTN","ORKCHK6",78,0)
 ...S ORKS("ORK",ORSIGD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORSIGN_U_ORSIGD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK6",79,0)
 ..;
"RTN","ORKCHK6",80,0)
 ..;duplicate drug:
"RTN","ORKCHK6",81,0)
 ..I $P(XX,U)="DD" D
"RTN","ORKCHK6",82,0)
 ...Q:ORDUPF="D"
"RTN","ORKCHK6",83,0)
 ...S ORPSNUM=$P(XX,U,4)  ;get the associated order number
"RTN","ORKCHK6",84,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK6",85,0)
 ...E  S ORKTXT=$P(XX,U,3)
"RTN","ORKCHK6",86,0)
 ...S ORKMSG="Duplicate order: "_ORKTXT
"RTN","ORKCHK6",87,0)
 ...S ORKS("ORK",ORDUPD_","_$G(ORNUM)_","_ORPSNUM_",Duplicate order: "_$P(XX,U,3))=ORNUM_U_ORDUPN_U_ORDUPD_U_ORKMSG_U_$G(ORPSNUM)
"RTN","ORKCHK6",88,0)
 ..;
"RTN","ORKCHK6",89,0)
 ..;duplicate class:
"RTN","ORKCHK6",90,0)
 ..I $P(XX,U)="DC" D
"RTN","ORKCHK6",91,0)
 ...Q:ORDUPCF="D"
"RTN","ORKCHK6",92,0)
 ...S ORPSNUM=$P(XX,U,6)  ;get the associated order number
"RTN","ORKCHK6",93,0)
 ...I $L(ORPSNUM),$G(^OR(100,+ORPSNUM,0)) S ORKT=$$FULLTEXT^ORQOR1(+ORPSNUM),ORKTXT=$P(ORKT,U)_" ["_$P(ORKT,U,2)_"]"
"RTN","ORKCHK6",94,0)
 ...E  S ORKTXT=$P(XX,U,5)
"RTN","ORKCHK6",95,0)
 ...S ORKMSG="Duplicate drug class order: "_$P(XX,U,3)
"RTN","ORKCHK6",96,0)
 ...S ORKS("ORK",ORDUPCD_","_$G(ORNUM)_","_ORPSNUM_","_$E(ORKMSG,1,225))=ORNUM_U_ORDUPCN_U_ORDUPCD_U_ORKMSG_" ("_ORKTXT_")"_U_$G(ORPSNUM)
"RTN","ORKCHK6",97,0)
 Q:ORALLRF="D"
"RTN","ORKCHK6",98,0)
 N ORKAL
"RTN","ORKCHK6",99,0)
 I $L($G(HL7NPTR)),($G(HL7NCOD)="99NDF") D
"RTN","ORKCHK6",100,0)
 .D RXN^ORQQAL(.ORKAL,ORKDFN,"DR",HL7NPTR,$G(HL7LPTR)) I (ORKAL>0) D
"RTN","ORKCHK6",101,0)
 ..Q:$L($P(ORKAL,U,2))<1
"RTN","ORKCHK6",102,0)
 ..S ORKMSG="Previous adverse reaction to: "_$P(ORKAL,U,2)
"RTN","ORKCHK6",103,0)
 ..S ORKS("ORK",ORALLRD_","_$G(ORNUM)_","_$E(ORKMSG,1,225))=ORNUM_U_ORALLRN_U_ORALLRD_U_ORKMSG
"RTN","ORKCHK6",104,0)
 Q
"RTN","ORKCHK6",105,0)
 Q
"RTN","ORKCHK6",106,0)
 ;
"RTN","ORKCHK6",107,0)
OI2DD(ORPSA,OROI,ORPSPKG)       ;rtn dispense drugs for a PS OI
"RTN","ORKCHK6",108,0)
 N PSOI
"RTN","ORKCHK6",109,0)
 Q:'$D(^ORD(101.43,OROI,0))
"RTN","ORKCHK6",110,0)
 S PSOI=$P($P(^ORD(101.43,OROI,0),U,2),";")
"RTN","ORKCHK6",111,0)
 Q:+$G(PSOI)<1
"RTN","ORKCHK6",112,0)
 D DRG^PSSUTIL1(.ORPSA,PSOI,ORPSPKG)
"RTN","ORKCHK6",113,0)
 Q
"RTN","ORKCHK6",114,0)
 ;
"RTN","ORKCHK6",115,0)
PARAMS(ORKNAME,ORKNUM,ORKFLAG,ORKDNGR) ; get parameter values for an order chk
"RTN","ORKCHK6",116,0)
 S ORKNUM=0,ORKNUM=$O(^ORD(100.8,"B",ORKNAME,ORKNUM))
"RTN","ORKCHK6",117,0)
 S ORKFLAG=$$GET^XPAR(ORENT,"ORK PROCESSING FLAG",ORKNUM,"I")
"RTN","ORKCHK6",118,0)
 S ORKDNGR=$$GET^XPAR("DIV^SYS^PKG","ORK CLINICAL DANGER LEVEL",ORKNUM,"I")
"RTN","ORKCHK6",119,0)
 Q
"RTN","ORMBLDGM")
0^19^B5247581
"RTN","ORMBLDGM",1,0)
ORMBLDGM ;SLC/MKB-Build outgoing GMR* ORM msgs ;11/18/08  11:24
"RTN","ORMBLDGM",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**26,68,97,190,195,280**;Dec 17, 1997;Build 85
"RTN","ORMBLDGM",3,0)
HL7DATE(DATE) ; -- FM -> HL7 format
"RTN","ORMBLDGM",4,0)
 Q $$FMTHL7^XLFDT(DATE)  ;**97
"RTN","ORMBLDGM",5,0)
 ;
"RTN","ORMBLDGM",6,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORMBLDGM",7,0)
 Q $O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMBLDGM",8,0)
 ;
"RTN","ORMBLDGM",9,0)
CSLT ; -- Segments for new Consult order
"RTN","ORMBLDGM",10,0)
 N OI,WP,URG,CATG,PLACE,ATTN,DIAG,CODE,QT,I,J,USID,CTYPE,RSERV,Z
"RTN","ORMBLDGM",11,0)
 N EARLY,X,Y ;WAT/280
"RTN","ORMBLDGM",12,0)
 S OI=$G(ORDIALOG($$PTR("ORDERABLE ITEM"),1))
"RTN","ORMBLDGM",13,0)
 S CTYPE=$G(ORDIALOG($$PTR("FREE TEXT OI"),1))
"RTN","ORMBLDGM",14,0)
 S RSERV=$G(ORDIALOG($$PTR("REQUEST SERVICE"),1))
"RTN","ORMBLDGM",15,0)
 S WP=$$PTR("WORD PROCESSING 1"),URG=+$G(ORDIALOG($$PTR("URGENCY"),1))
"RTN","ORMBLDGM",16,0)
 S CATG=$G(ORDIALOG($$PTR("CATEGORY"),1))
"RTN","ORMBLDGM",17,0)
 S PLACE=$G(ORDIALOG($$PTR("PLACE OF CONSULTATION"),1))
"RTN","ORMBLDGM",18,0)
 S ATTN=$G(ORDIALOG($$PTR("PROVIDER"),1))
"RTN","ORMBLDGM",19,0)
 S DIAG=$G(ORDIALOG($$PTR("FREE TEXT"),1))
"RTN","ORMBLDGM",20,0)
 S CODE=$G(ORDIALOG($$PTR("CODE"),1))
"RTN","ORMBLDGM",21,0)
 S X=$G(ORDIALOG($$PTR("EARLIEST DATE"),1)),%DT="TX" D ^%DT S:Y>0 EARLY=$$HL7DATE(Y) ;WAT/280
"RTN","ORMBLDGM",22,0)
CS1 S QT="^^^"_$G(EARLY)_"^^"_$P($G(^ORD(101.42,+URG,0)),U,2),$P(ORMSG(4),"|",8)=QT ;WAT/280
"RTN","ORMBLDGM",23,0)
 S $P(ORMSG(3),"|",3)=CATG S:PLACE="C" PLACE="OC"
"RTN","ORMBLDGM",24,0)
 S USID=$$USID^ORMBLD(OI) ;S:$L(CTYPE) $P(USID,U,5)=CTYPE
"RTN","ORMBLDGM",25,0)
 S ORMSG(5)="OBR||||"_USID_"||||||||||||||"_PLACE_"|"_ATTN,Z=5
"RTN","ORMBLDGM",26,0)
 ; Create DG1 & ZCL segment(s) for Billing Awareness (BA) project
"RTN","ORMBLDGM",27,0)
 D DG1^ORWDBA3($G(IFN),"Z",5)
"RTN","ORMBLDGM",28,0)
 I RSERV'>0,$P(USID,U,6)="99CON" S RSERV=+$P(USID,U,4)
"RTN","ORMBLDGM",29,0)
 S:RSERV Z=Z+1,ORMSG(Z)="ZSV|^^^"_+RSERV_U_$$GET1^DIQ(123.5,+RSERV_",",.01)_"^99CON|"_CTYPE
"RTN","ORMBLDGM",30,0)
 S I=0,J=+$O(^TMP("ORWORD",$J,WP,1,0)),Z=Z+1 ; get first line
"RTN","ORMBLDGM",31,0)
 S ORMSG(Z)="OBX|1|TX|2000.02^REASON FOR REQUEST^AS4||"_$G(^TMP("ORWORD",$J,WP,1,J,0))
"RTN","ORMBLDGM",32,0)
 F  S J=$O(^TMP("ORWORD",$J,WP,1,J)) Q:J'>0  S I=I+1,ORMSG(Z,I)=^(+J,0)
"RTN","ORMBLDGM",33,0)
 I $L(DIAG) D
"RTN","ORMBLDGM",34,0)
 . N TYPE,VALUE S TYPE="TX",VALUE=DIAG
"RTN","ORMBLDGM",35,0)
 . S:$L(CODE) TYPE="CE",VALUE=CODE_U_DIAG_"^I9C"
"RTN","ORMBLDGM",36,0)
 . S Z=Z+1,ORMSG(Z)="OBX|2|"_TYPE_"|^PROVISIONAL DIAGNOSIS^||"_VALUE
"RTN","ORMBLDGM",37,0)
 Q
"RTN","ORMBLDP1")
0^57^B5382020
"RTN","ORMBLDP1",1,0)
ORMBLDP1 ;SLC/MKB-Build outgoing Pharmacy ORM msgs ;10/01/2009
"RTN","ORMBLDP1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,280**;Dec 17, 1997;Build 85
"RTN","ORMBLDP1",3,0)
 ;
"RTN","ORMBLDP1",4,0)
ADDFRQCV(STR,PATH) ;
"RTN","ORMBLDP1",5,0)
 N RESULT
"RTN","ORMBLDP1",6,0)
 S RESULT=""
"RTN","ORMBLDP1",7,0)
 I PATH="O" D  Q RESULT
"RTN","ORMBLDP1",8,0)
 .S STR=$$UP^XLFSTR(STR)
"RTN","ORMBLDP1",9,0)
 .I STR="1 BAG/DAY" S RESULT=1 Q
"RTN","ORMBLDP1",10,0)
 .I STR="ALL BAGS" S RESULT="A" Q
"RTN","ORMBLDP1",11,0)
 .I STR="SEE COMMENTS" S RESULT="S"
"RTN","ORMBLDP1",12,0)
 .I STR["in bag" S RESULT=$P(STR," ",3)
"RTN","ORMBLDP1",13,0)
 I PATH="I" D
"RTN","ORMBLDP1",14,0)
 .I STR=1 S RESULT="1 Bag/Day" Q
"RTN","ORMBLDP1",15,0)
 .I STR="A" S RESULT="All Bags" Q
"RTN","ORMBLDP1",16,0)
 .I STR="" Q
"RTN","ORMBLDP1",17,0)
 .S RESULT="in bag "_STR
"RTN","ORMBLDP1",18,0)
 Q RESULT
"RTN","ORMBLDP1",19,0)
 ;
"RTN","ORMBLDP1",20,0)
MOB(ORIEN,DFN) ;
"RTN","ORMBLDP1",21,0)
 N IVTYPE,NODE,NUM,TYPE
"RTN","ORMBLDP1",22,0)
 S IVTYPE=""
"RTN","ORMBLDP1",23,0)
 D MOB^PSBAPIPM(DFN,ORIEN)
"RTN","ORMBLDP1",24,0)
 S NODE=$G(^TMP("PSB",$J,0)) I NODE=-1 Q IVTYPE
"RTN","ORMBLDP1",25,0)
 S TYPE=$P(NODE,U,3)
"RTN","ORMBLDP1",26,0)
 S NUM=+$P(NODE,U,4)
"RTN","ORMBLDP1",27,0)
 I TYPE="A" S IVTYPE="C" Q IVTYPE
"RTN","ORMBLDP1",28,0)
 I TYPE="P" S IVTYPE="I" Q IVTYPE
"RTN","ORMBLDP1",29,0)
 I TYPE="S",NUM=0 S IVTYPE="C" Q IVTYPE
"RTN","ORMBLDP1",30,0)
 I TYPE="S",NUM=1 S IVTYPE="I" Q IVTYPE
"RTN","ORMBLDP1",31,0)
 Q IVTYPE
"RTN","ORMBLDP1",32,0)
 ;
"RTN","ORMBLDP1",33,0)
HL7IVLMT(STR) ;
"RTN","ORMBLDP1",34,0)
 N LEN,VAL,UNIT,IVLMT,TVAL
"RTN","ORMBLDP1",35,0)
 S (UNIT,IVLMT)="",VAL=0
"RTN","ORMBLDP1",36,0)
 I $E($$LOW^XLFSTR(STR))="f" D
"RTN","ORMBLDP1",37,0)
 . I STR["for a total of" D  Q
"RTN","ORMBLDP1",38,0)
 . .S VAL=$P(STR," ",5)
"RTN","ORMBLDP1",39,0)
 . .S UNIT=$P(STR," ",6)
"RTN","ORMBLDP1",40,0)
 . S VAL=$P(STR," ",2)
"RTN","ORMBLDP1",41,0)
 . S UNIT=$E($P(STR," ",3))
"RTN","ORMBLDP1",42,0)
 I $E($$LOW^XLFSTR(STR))="w" D
"RTN","ORMBLDP1",43,0)
 . S TVAL=$P(STR," ",4)      ;pull data in total example 0.5ml
"RTN","ORMBLDP1",44,0)
 . S VAL=+TVAL     ;this will strip out leading zero and alpha 00.5L becomes .5 or 05.5 becomes 5.5
"RTN","ORMBLDP1",45,0)
 . S LEN=$F(TVAL,VAL)        ;get length up to alphas or trailing zeros
"RTN","ORMBLDP1",46,0)
 . I $P(VAL,".")="" S VAL=0_VAL  ;make sure decimal values have only one leading zero .5 becomes 0.5.
"RTN","ORMBLDP1",47,0)
 . F  S UNIT=$E(TVAL,LEN) Q:((UNIT'=0)&(UNIT'="."))  D    ;get first alpha m or l
"RTN","ORMBLDP1",48,0)
 . . S LEN=LEN+1
"RTN","ORMBLDP1",49,0)
 I $L(UNIT),$L(VAL) S IVLMT=$$LOW^XLFSTR(UNIT)_VAL
"RTN","ORMBLDP1",50,0)
 Q IVLMT
"RTN","ORMBLDPS")
0^58^B86048776
"RTN","ORMBLDPS",1,0)
ORMBLDPS ;SLC/MKB-Build outgoing Pharmacy ORM msgs ;08/12/10  07:25
"RTN","ORMBLDPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,38,54,86,97,94,116,129,141,190,195,237,254,243,293,280**;Dec 17, 1997;Build 85
"RTN","ORMBLDPS",3,0)
PTR(NAME) ; -- Returns ptr value of prompt in Dialog file
"RTN","ORMBLDPS",4,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMBLDPS",5,0)
 ;
"RTN","ORMBLDPS",6,0)
NVA ; -- new Non-VA Meds order
"RTN","ORMBLDPS",7,0)
 N NVA S NVA=1
"RTN","ORMBLDPS",8,0)
OUT ; -- new Outpt Meds order [same as UD, +3 fields]
"RTN","ORMBLDPS",9,0)
UD ; -- new Inpt (Unit Dose) Meds order
"RTN","ORMBLDPS",10,0)
 N ADMIN,OI,DRUG,INSTR,DOSE,ROUTE,SCHED,DUR,URG,PROVCOMM,PI,DISPENSE,X,Y,I,J,K,L,QT1,QT2,QT3,QT4,QT6,QT9,CONJ,ORC,SC,OUTPT,OITXT,OITXT2
"RTN","ORMBLDPS",11,0)
 N QT7,SCHTYPE
"RTN","ORMBLDPS",12,0)
 S OUTPT=$S($P(OR0,U,12)="O":1,1:0) ;outpt flag
"RTN","ORMBLDPS",13,0)
 S X=$G(^OR(100,IFN,8,1,0)) I $P(X,U,5),$P(X,U,5)'=$P(X,U,3) S $P(ORMSG(4),"|",13)=$P(X,U,5) ; Send signer instead of orderer if different
"RTN","ORMBLDPS",14,0)
 S OI=$$PTR("ORDERABLE ITEM"),DRUG=$$PTR("DISPENSE DRUG")
"RTN","ORMBLDPS",15,0)
 S INSTR=$$PTR("INSTRUCTIONS"),SCHED=$$PTR("SCHEDULE"),ADMIN=$$PTR("ADMIN TIMES")
"RTN","ORMBLDPS",16,0)
 S SCHTYPE=$$PTR("SCHEDULE TYPE")
"RTN","ORMBLDPS",17,0)
 S DUR=$$PTR("DURATION"),URG=$$PTR("URGENCY"),DOSE=$$PTR("DOSE")
"RTN","ORMBLDPS",18,0)
 S ROUTE=$$PTR("ROUTE"),PROVCOMM=$$PTR("WORD PROCESSING 1")
"RTN","ORMBLDPS",19,0)
 S PI=$$PTR("PATIENT INSTRUCTIONS"),CONJ=$$PTR("AND/THEN")
"RTN","ORMBLDPS",20,0)
 S J=1,ORC(J)=$P(ORMSG(4),"|",1,7)_"|"
"RTN","ORMBLDPS",21,0)
 I +$G(NVA)=1 G NVA1
"RTN","ORMBLDPS",22,0)
UD1 S I=0 F  S I=$O(ORDIALOG(INSTR,I)) Q:I'>0  D
"RTN","ORMBLDPS",23,0)
 . S X=$G(ORDIALOG(DOSE,I))
"RTN","ORMBLDPS",24,0)
 . ;S QT1=$S($L(X):$P(X,"&",1,4)_"&"_$P(X,"&",6),1:"")
"RTN","ORMBLDPS",25,0)
 . S QT2=$$ESC($G(ORDIALOG(SCHED,I)))_$S(OUTPT:"",1:"&"_$G(ORDIALOG(ADMIN,I)))
"RTN","ORMBLDPS",26,0)
 . S QT3=$$HL7DUR
"RTN","ORMBLDPS",27,0)
 . S QT1=$S($L(X):$P(X,"&",1,6),1:"")
"RTN","ORMBLDPS",28,0)
 . S QT6=$P($G(^ORD(101.42,+$G(ORDIALOG(URG,I)),0)),U,2)
"RTN","ORMBLDPS",29,0)
 . S QT7=$G(ORDIALOG(SCHTYPE,I))
"RTN","ORMBLDPS",30,0)
 . S QT9=$G(ORDIALOG(CONJ,I))_"~" S:$E(QT9)="T" QT9="S~"
"RTN","ORMBLDPS",31,0)
 . S J=J+1,ORC(J)=QT1_U_QT2_U_QT3_"^^^"_QT6_U_QT7_U_$$INSTR_U_QT9
"RTN","ORMBLDPS",32,0)
 ;
"RTN","ORMBLDPS",33,0)
NVA1 I +$G(NVA)=1 D
"RTN","ORMBLDPS",34,0)
 . S I=1 ;only one dosage possible for non-va meds
"RTN","ORMBLDPS",35,0)
 . S QT2=$G(ORDIALOG(SCHED,I)),QT3=$$HL7DUR,X=$G(ORDIALOG(DOSE,I))
"RTN","ORMBLDPS",36,0)
 . S QT1=$S($L(X):$P(X,"&",1,6),1:"")
"RTN","ORMBLDPS",37,0)
 . S QT6=$P($G(^ORD(101.42,+$G(ORDIALOG(URG,I)),0)),U,2)
"RTN","ORMBLDPS",38,0)
 . S QT9=$G(ORDIALOG(CONJ,I))_"~" S:$E(QT9)="T" QT9="S~"
"RTN","ORMBLDPS",39,0)
 . S J=J+1,ORC(J)=QT1_U_$$ESC(QT2)_U_QT3_"^^^"_QT6_"^^"_$$INSTR_U_QT9
"RTN","ORMBLDPS",40,0)
 ;
"RTN","ORMBLDPS",41,0)
 I $L($P(OR0,U,8)) S $P(ORC(2),U,4)=$$FMTHL7^XLFDT($P(OR0,U,8)) S:J<2 J=2
"RTN","ORMBLDPS",42,0)
 S J=J+1,ORC(J)="|"_$P(ORMSG(4),"|",9,999),ORC=J,X="ORMSG(4)",ORMSG(4)="",I=0
"RTN","ORMBLDPS",43,0)
 F J=1:1:ORC S Y=ORC(J) D  ;add to ORMSG(4)
"RTN","ORMBLDPS",44,0)
 . I $L(@X)+$L(Y)'>245 S @X=@X_Y
"RTN","ORMBLDPS",45,0)
 . E  S L=245-$L(@X),@X=@X_$E(Y,1,L),I=I+1,X="ORMSG(4,"_I_")",@X=$E(Y,L+1,$L(Y))
"RTN","ORMBLDPS",46,0)
 I $G(ORDIALOG(DRUG,1)) S X=$$ENDCM^PSJORUTL(ORDIALOG(DRUG,1)),DISPENSE=$P(X,U,3)_"^^99NDF^"_ORDIALOG(DRUG,1)_"^^99PSD"
"RTN","ORMBLDPS",47,0)
 S OITXT=$$USID^ORMBLD($G(ORDIALOG(OI,1)))
"RTN","ORMBLDPS",48,0)
 S OITXT2=$P(OITXT,U,1,4)_U_$$ESC($P(OITXT,U,5))_U_$P(OITXT,U,6,99)
"RTN","ORMBLDPS",49,0)
 S ORMSG(5)="RXO|"_OITXT2_"|||||||||"_$G(DISPENSE)
"RTN","ORMBLDPS",50,0)
UD2 I $G(OUTPT) D
"RTN","ORMBLDPS",51,0)
 . N QTY,REFS,DSPY
"RTN","ORMBLDPS",52,0)
 . S QTY=$$PTR("QUANTITY"),REFS=$$PTR("REFILLS"),DSPY=$$PTR("DAYS SUPPLY")
"RTN","ORMBLDPS",53,0)
 . S ORMSG(5)=ORMSG(5)_"|"_$G(ORDIALOG(QTY,1))_"||"_$G(ORDIALOG(REFS,1))_"||||D"_$G(ORDIALOG(DSPY,1))
"RTN","ORMBLDPS",54,0)
 S I=5 I $L($G(ORDIALOG(PROVCOMM,1))) D
"RTN","ORMBLDPS",55,0)
 . S J=$O(^TMP("ORWORD",$J,PROVCOMM,1,0)) Q:'J
"RTN","ORMBLDPS",56,0)
 . S I=6,ORMSG(6)="NTE|6|P|"_$$ESC($G(^TMP("ORWORD",$J,PROVCOMM,1,J,0)))
"RTN","ORMBLDPS",57,0)
 . S K=0 F  S J=$O(^TMP("ORWORD",$J,PROVCOMM,1,J)) Q:J'>0  S K=K+1,ORMSG(6,K)=$G(^(J,0))
"RTN","ORMBLDPS",58,0)
 I $G(OUTPT),$L($G(ORDIALOG(PI,1))) D
"RTN","ORMBLDPS",59,0)
 . S J=$O(^TMP("ORWORD",$J,PI,1,0)) Q:'J
"RTN","ORMBLDPS",60,0)
 . S I=I+1,ORMSG(I)="NTE|7|P|"_$G(^TMP("ORWORD",$J,PI,1,J,0))
"RTN","ORMBLDPS",61,0)
 . S K=0 F  S J=$O(^TMP("ORWORD",$J,PI,1,J)) Q:J'>0  S K=K+1,ORMSG(I,K)=$G(^(J,0))
"RTN","ORMBLDPS",62,0)
UD3 S J=0 F  S J=$O(ORDIALOG(ROUTE,J)) Q:J'>0  S I=I+1,ORMSG(I)=$$RXR($G(ORDIALOG(ROUTE,J)))
"RTN","ORMBLDPS",63,0)
 D ORDCHKS
"RTN","ORMBLDPS",64,0)
 S I=I+1,ORMSG(I)=$$ZRX(IFN,OUTPT)
"RTN","ORMBLDPS",65,0)
 I $G(OUTPT) D  ;add SC data
"RTN","ORMBLDPS",66,0)
 . N OR5 S OR5=$G(^OR(100,IFN,5))
"RTN","ORMBLDPS",67,0)
 . I $L(OR5),OR5'?5"^" S I=I+1,ORMSG(I)="ZSC|"_$TR(OR5,"^","|") Q
"RTN","ORMBLDPS",68,0)
 . S SC=$$PTR("SERVICE CONNECTED") S:$D(ORDIALOG(SC,1)) I=I+1,ORMSG(I)="ZSC|"_$S(ORDIALOG(SC,1):"SC",1:"NSC")
"RTN","ORMBLDPS",69,0)
 ; Create DG1 & ZCL segment(s) for Billing Awareness (BA) Project
"RTN","ORMBLDPS",70,0)
 D DG1^ORWDBA3($G(IFN),"I",I)
"RTN","ORMBLDPS",71,0)
 I $P(^ORD(100.98,$P(OR0,U,11),0),U)="NON-VA MEDICATIONS" D
"RTN","ORMBLDPS",72,0)
 . S I=I+1 D ZRN(IFN,.ORMSG,I)
"RTN","ORMBLDPS",73,0)
 Q
"RTN","ORMBLDPS",74,0)
 ;
"RTN","ORMBLDPS",75,0)
INSTR() ; -- Return text instructions for QT-8, instance I
"RTN","ORMBLDPS",76,0)
 N Y S Y=$P($G(ORDIALOG(DOSE,I)),"&",5)
"RTN","ORMBLDPS",77,0)
 I $G(ORDIALOG(DRUG,1)),$L(Y) Q $$ESC(Y)
"RTN","ORMBLDPS",78,0)
 S Y=$G(ORDIALOG(INSTR,I)) I $G(OUTPT) D
"RTN","ORMBLDPS",79,0)
 . N UNITS,UNT S UNITS=$$PTR("FREE TEXT"),UNT=$G(ORDIALOG(UNITS,I))
"RTN","ORMBLDPS",80,0)
 . S:$L(UNT) Y=Y_" "_UNT ;old format
"RTN","ORMBLDPS",81,0)
 Q $$ESC(Y)
"RTN","ORMBLDPS",82,0)
 ;
"RTN","ORMBLDPS",83,0)
HL7DUR() ; -- Returns HL7 form of duration X
"RTN","ORMBLDPS",84,0)
 N X,X1,X2,Y S X=$G(ORDIALOG(DUR,I))
"RTN","ORMBLDPS",85,0)
 S X1=+$G(X),Y="" G:X1'>0 HDQ
"RTN","ORMBLDPS",86,0)
 S X2=$$UP^XLFSTR($P(X,X1,2)) S:$E(X2)=" " X2=$E(X2,2,99)
"RTN","ORMBLDPS",87,0)
 S Y=$S($E(X2,1,2)="MO":"L",'$L(X2):"D",1:$E(X2))_X1
"RTN","ORMBLDPS",88,0)
HDQ Q Y
"RTN","ORMBLDPS",89,0)
 ;
"RTN","ORMBLDPS",90,0)
IV ; -- new IV Meds order
"RTN","ORMBLDPS",91,0)
 N SOLN,VOL,ADDS,STR,UNITS,RATE,URG,WP,QT,I,X1,X2,INST
"RTN","ORMBLDPS",92,0)
 N IVLIMIT ; duratioin or total volume for IV order
"RTN","ORMBLDPS",93,0)
 N IVTYPE,IVZRX,X,CNT,ROUTE,ORBCMA,DFN,ADDFREQ
"RTN","ORMBLDPS",94,0)
 S IVLIMIT=$$PTR("DURATION")
"RTN","ORMBLDPS",95,0)
 S IVTYPE=$G(ORDIALOG(+$$PTR("IV TYPE"),1))
"RTN","ORMBLDPS",96,0)
 I IVTYPE="",$P($G(^OR(100,IFN,3)),U,11)="B" D
"RTN","ORMBLDPS",97,0)
 .S IVTYPE=$$MOB^ORMBLDP1(IFN,+$P($G(^OR(100,IFN,0)),U,2))
"RTN","ORMBLDPS",98,0)
 .D RESP^ORCSAVE2(IFN,"OR GTX IV TYPE",IVTYPE)
"RTN","ORMBLDPS",99,0)
 S RATE=$$PTR("INFUSION RATE"),ADDS=$$PTR("ADDITIVE")
"RTN","ORMBLDPS",100,0)
 S ADDFREQ=$$PTR("ADDITIVE FREQUENCY")
"RTN","ORMBLDPS",101,0)
 S STR=$$PTR("STRENGTH PSIV"),UNITS=$$PTR("UNITS")
"RTN","ORMBLDPS",102,0)
 S WP=$$PTR("WORD PROCESSING 1"),VOL=$$PTR("VOLUME")
"RTN","ORMBLDPS",103,0)
 S SCHTYPE=$$PTR("SCHEDULE TYPE")
"RTN","ORMBLDPS",104,0)
 S SOLN=$$PTR("ORDERABLE ITEM"),URG=+$G(ORDIALOG($$PTR("URGENCY"),1))
"RTN","ORMBLDPS",105,0)
 ;I IVTYPE="",$G(ORDIALOG(+$$PTR("SCHEDULE"),1))="" S IVTYPE="C"
"RTN","ORMBLDPS",106,0)
 I IVTYPE="I" S QT=U_$$ESC($G(ORDIALOG(+$$PTR("SCHEDULE"),1)))_"&"_$G(ORDIALOG(+$$PTR("ADMIN TIMES"),1))_"^^^^"
"RTN","ORMBLDPS",107,0)
 I IVTYPE="C" S QT="^^^^^"
"RTN","ORMBLDPS",108,0)
 ;S QT=U_$G(ORDIALOG(+$$PTR("SCHEDULE"),1))_"^^^^"
"RTN","ORMBLDPS",109,0)
 S:URG QT=QT_$P($G(^ORD(101.42,URG,0)),U,2)
"RTN","ORMBLDPS",110,0)
 S $P(ORMSG(4),"|",8)=QT
"RTN","ORMBLDPS",111,0)
 S X=$G(^OR(100,IFN,8,1,0)) I $P(X,U,5),$P(X,U,5)'=$P(X,U,3) S $P(ORMSG(4),"|",13)=$P(X,U,5) ; Send signer instead of orderer if different
"RTN","ORMBLDPS",112,0)
 S RATE=$G(ORDIALOG(RATE,1)) S:$E(RATE,$L(RATE))=" " RATE=$E(RATE,1,($L(RATE)-1)) S ORMSG(5)="RXO|^^^PS-1^IV^99OTH|"_$$ESC(RATE) ;strip any trailing spaces
"RTN","ORMBLDPS",113,0)
 S IVLIMIT=$G(ORDIALOG(IVLIMIT,1))
"RTN","ORMBLDPS",114,0)
 I $L(IVLIMIT) S IVLIMIT=$$HL7IVLMT^ORMBLDP1(IVLIMIT),ORMSG(5)="RXO|^^"_IVLIMIT_"^PS-1^IV^99OTH|"_RATE
"RTN","ORMBLDPS",115,0)
 S I=5 I $L($G(ORDIALOG(WP,1))) D
"RTN","ORMBLDPS",116,0)
 . N J,K S J=$O(^TMP("ORWORD",$J,WP,1,0)) Q:'J
"RTN","ORMBLDPS",117,0)
 . S I=6,ORMSG(6)="NTE|6|P|"_$$ESC($G(^TMP("ORWORD",$J,WP,1,J,0)))
"RTN","ORMBLDPS",118,0)
 . S K=0 F  S J=$O(^TMP("ORWORD",$J,WP,1,J)) Q:J'>0  S K=K+1,ORMSG(6,K)=^(J,0)
"RTN","ORMBLDPS",119,0)
 ;S I=I+1,ORMSG(I)=$$RXR(+$$PTR("ROUTE"))
"RTN","ORMBLDPS",120,0)
 S ROUTE=+$$PTR("ROUTE")
"RTN","ORMBLDPS",121,0)
 S I=I+1,ORMSG(I)=$$RXR($G(ORDIALOG(ROUTE,1)))
"RTN","ORMBLDPS",122,0)
IV1 S INST=0 F  S INST=$O(ORDIALOG(SOLN,INST)) Q:INST'>0  D
"RTN","ORMBLDPS",123,0)
 . S X1="B",X2=+$G(ORDIALOG(SOLN,INST))
"RTN","ORMBLDPS",124,0)
 . I $P($G(^ORD(101.43,X2,"PS")),U,4) S X1=X1_"A" ;pre-mix
"RTN","ORMBLDPS",125,0)
 . S I=I+1,ORMSG(I)="RXC|"_X1_"|"_$$USID^ORMBLD(X2)_"|"_$G(ORDIALOG(VOL,INST))_"|"_$$HL7UNIT("ML")
"RTN","ORMBLDPS",126,0)
 I $O(ORDIALOG(ADDS,0)) D
"RTN","ORMBLDPS",127,0)
 . S INST=0 F  S INST=$O(ORDIALOG(ADDS,INST)) Q:INST'>0  D
"RTN","ORMBLDPS",128,0)
 . . S X1=$G(ORDIALOG(ADDS,INST)),X2=$G(ORDIALOG(UNITS,INST))
"RTN","ORMBLDPS",129,0)
 . . S I=I+1,ORMSG(I)="RXC|A|"_$$USID^ORMBLD(X1)_"|"_$G(ORDIALOG(STR,INST))_"|"_$$HL7UNIT(X2)_"|"_$$ADDFRQCV^ORMBLDP1($G(ORDIALOG(ADDFREQ,INST)),"O")
"RTN","ORMBLDPS",130,0)
 . . ;S I=I+1,ORMSG(I)="RXC|A|"_$$USID^ORMBLD(X1)_"|"_$G(ORDIALOG(STR,INST))_"|"_$$HL7UNIT(X2)
"RTN","ORMBLDPS",131,0)
 D ORDCHKS
"RTN","ORMBLDPS",132,0)
 S IVZRX=$$ZRX(IFN,0)
"RTN","ORMBLDPS",133,0)
 S CNT=0
"RTN","ORMBLDPS",134,0)
 F X=1:1:$L(IVZRX) I $E(IVZRX,X)="|" S CNT=CNT+1
"RTN","ORMBLDPS",135,0)
 I CNT<6 F X=CNT:1:5 S IVZRX=IVZRX_"|"
"RTN","ORMBLDPS",136,0)
 S I=I+1,ORMSG(I)=IVZRX_IVTYPE
"RTN","ORMBLDPS",137,0)
 ; Create DG1 & ZCL segment(s) for Billing Awareness (BA) Project
"RTN","ORMBLDPS",138,0)
 D DG1^ORWDBA3($G(IFN),"I",I)
"RTN","ORMBLDPS",139,0)
 Q
"RTN","ORMBLDPS",140,0)
 ;
"RTN","ORMBLDPS",141,0)
RXR(ROUTE) ; -- Returns RXR segment
"RTN","ORMBLDPS",142,0)
 N IEN,NAME
"RTN","ORMBLDPS",143,0)
 I +ROUTE=0 Q "RXR|^^^^^99PSR"
"RTN","ORMBLDPS",144,0)
 K ^TMP($J,"ORMBLDPS RXR")
"RTN","ORMBLDPS",145,0)
 D ALL^PSS51P2(+ROUTE,,,,"ORMBLDPS RXR")
"RTN","ORMBLDPS",146,0)
 S NAME=^TMP($J,"ORMBLDPS RXR",+ROUTE,.01)
"RTN","ORMBLDPS",147,0)
 ;N NAME S NAME=$$GET1^DIQ(51.2,+ROUTE_",",.01)
"RTN","ORMBLDPS",148,0)
 K ^TMP($J,"ORMBLDPS RXR")
"RTN","ORMBLDPS",149,0)
 Q "RXR|^^^"_+ROUTE_U_NAME_"^99PSR"
"RTN","ORMBLDPS",150,0)
 ;
"RTN","ORMBLDPS",151,0)
ZRX(IFN,OUTPT) ; -- Returns ZRX segment
"RTN","ORMBLDPS",152,0)
 N NATURE,TYPE,ORIG,PSORIG,ROUTING,ZRX
"RTN","ORMBLDPS",153,0)
 S TYPE=$P($G(^OR(100,IFN,3)),U,11),NATURE=$P($G(^(8,1,0)),U,12)
"RTN","ORMBLDPS",154,0)
 S:NATURE NATURE=$P($G(^ORD(100.02,+NATURE,0)),U,2) ;code
"RTN","ORMBLDPS",155,0)
 S PSORIG="" I (TYPE=1)!(TYPE=2) D
"RTN","ORMBLDPS",156,0)
 . S ORIG=$P($G(^OR(100,IFN,3)),U,5),PSORIG=$G(^OR(100,+ORIG,4))
"RTN","ORMBLDPS",157,0)
 . I PSORIG'>0 S PSORIG="",TYPE=0 ;edit of unreleased order
"RTN","ORMBLDPS",158,0)
 S ZRX="ZRX|"_PSORIG_"|"_NATURE_"|"_$S(TYPE=1:"E",TYPE=2:"R",1:"N")
"RTN","ORMBLDPS",159,0)
 S ROUTING=$G(ORDIALOG($$PTR("ROUTING"),1))
"RTN","ORMBLDPS",160,0)
 ;AGP FIX FOR PROBLEM WITH ROUTING BE SET TO DAY SUPPLY ONCE ROOT CAUSE
"RTN","ORMBLDPS",161,0)
 ;IS FOUND THIS CODE WILL BE REMOVE
"RTN","ORMBLDPS",162,0)
 I OUTPT=1,ROUTING'="",ROUTING>0 S ROUTING="M"
"RTN","ORMBLDPS",163,0)
 I $G(OUTPT) S ZRX=ZRX_"|"_ROUTING_$S($L($P($G(^OR(100,ORIFN,8,1,2)),"^",3)):"|||1",1:"")
"RTN","ORMBLDPS",164,0)
 Q ZRX
"RTN","ORMBLDPS",165,0)
 ;
"RTN","ORMBLDPS",166,0)
ZRN(IFN,ORMSG,I) ; -- Set ZRN segment
"RTN","ORMBLDPS",167,0)
 N ST,ZRN,J,K,TXT
"RTN","ORMBLDPS",168,0)
 S ORMSG(I)="ZRN|N|"
"RTN","ORMBLDPS",169,0)
 S ST=$$PTR("STATEMENTS")
"RTN","ORMBLDPS",170,0)
 I $L($G(ORDIALOG(ST,1))) D
"RTN","ORMBLDPS",171,0)
 . S J=$O(^TMP("ORWORD",$J,ST,1,0)) Q:'J
"RTN","ORMBLDPS",172,0)
 . S K=0,TXT=$G(^TMP("ORWORD",$J,ST,1,J,0))
"RTN","ORMBLDPS",173,0)
 . I $L(TXT) S K=K+1,ORMSG(I,K)=TXT
"RTN","ORMBLDPS",174,0)
 . F  S J=$O(^TMP("ORWORD",$J,ST,1,J)) Q:J'>0  S TXT=$G(^(J,0)) D
"RTN","ORMBLDPS",175,0)
 . . I $L(TXT) S K=K+1,ORMSG(I,K)=TXT
"RTN","ORMBLDPS",176,0)
 Q
"RTN","ORMBLDPS",177,0)
 ;
"RTN","ORMBLDPS",178,0)
ORDCHKS ; -- Include order checks in OBX segments
"RTN","ORMBLDPS",179,0)
 N ORRET,OC,CNT S CNT=0
"RTN","ORMBLDPS",180,0)
 D GETOC5^OROCAPI1(+IFN,"SIGNATURE_CPRS",.ORRET)
"RTN","ORMBLDPS",181,0)
 S OC=0 F  S OC=$O(ORRET(+IFN,"DATA",OC)) Q:'OC  D
"RTN","ORMBLDPS",182,0)
 .S I=I+1,CNT=CNT+1
"RTN","ORMBLDPS",183,0)
 .S ORMSG(I)="OBX|"_CNT_"|TX|^^^"_+ORRET(+IFN,"DATA",OC,1)_"^^99OCX||"_$$ESC($G(ORRET(+IFN,"DATA",OC,"OC",1,0)))
"RTN","ORMBLDPS",184,0)
 .I '$L($G(ORRET(+IFN,"DATA",OC,"OC",2,0))) S ORMSG(I)=ORMSG(I)_"|||||||||"_$$FMTHL7^XLFDT($P(ORRET(+IFN,"DATA",OC,1),U,5))_"||"_$P(ORRET(+IFN,"DATA",OC,1),U,5)
"RTN","ORMBLDPS",185,0)
 .I $L($G(ORRET(+IFN,"DATA",OC,"OC",2,0))) D
"RTN","ORMBLDPS",186,0)
 ..N J S J=1 F  S J=$O(ORRET(+IFN,"DATA",OC,"OC",J)) Q:'J  S ORMSG(I,J-1)=$G(ORRET(+IFN,"DATA",OC,"OC",J,0))
"RTN","ORMBLDPS",187,0)
 ..S ORMSG(I,$O(ORMSG(I,""),-1))=ORMSG(I,$O(ORMSG(I,""),-1))_"|||||||||"_$$FMTHL7^XLFDT($P(ORRET(+IFN,"DATA",OC,1),U,5))_"||"_$P(ORRET(+IFN,"DATA",OC,1),U,5)
"RTN","ORMBLDPS",188,0)
 .I $L($G(ORRET(+IFN,"DATA",OC,"OR",1,0))) S I=I+1,ORMSG(I)="NTE|"_OC_"|P|"_$$ESC($G(ORRET(+IFN,"DATA",OC,"OR",1,0)))
"RTN","ORMBLDPS",189,0)
 Q
"RTN","ORMBLDPS",190,0)
 ;
"RTN","ORMBLDPS",191,0)
HL7UNIT(X) ; -- Return coded element for volume/strength units
"RTN","ORMBLDPS",192,0)
 N I,UNIT,Y
"RTN","ORMBLDPS",193,0)
 F I=1:1:$L(X) I $E(X,I)?1A Q  ; first letter
"RTN","ORMBLDPS",194,0)
 S UNIT=$$UP^XLFSTR($E(X,I,$L(X))),Y=""
"RTN","ORMBLDPS",195,0)
 F I=1:1:14 S X=$P("ML^LITER^MCG^MG^GM^UNITS^IU^MEQ^MM^MU^THOUU^MG-PE^NANOGRAM^MMOL","^",I) I UNIT=X S Y="^^^PSIV-"_I_U_UNIT_"^99OTH" Q
"RTN","ORMBLDPS",196,0)
 Q Y
"RTN","ORMBLDPS",197,0)
 ;
"RTN","ORMBLDPS",198,0)
VER(IFN) ; -- Send msg for nurse-verified orders
"RTN","ORMBLDPS",199,0)
 N OR0,ORMSG S OR0=$G(^OR(100,+IFN,0)) Q:$P(OR0,U,12)'="I"  ;Inpt only
"RTN","ORMBLDPS",200,0)
 S ORMSG(1)=$$MSH^ORMBLD("ORM","PS"),ORMSG(2)=$$PID^ORMBLD($P(OR0,U,2))
"RTN","ORMBLDPS",201,0)
 S ORMSG(3)=$$PV1^ORMBLD($P(OR0,U,2),$P(OR0,U,12),+$P(OR0,U,10))
"RTN","ORMBLDPS",202,0)
 S ORMSG(4)="ORC|ZV|"_IFN_"^OR|"_$G(^OR(100,+IFN,4))_"^PS||||||||"_DUZ_"||||"_$$FMTHL7^XLFDT($$NOW^XLFDT)
"RTN","ORMBLDPS",203,0)
 D MSG^XQOR("OR EVSEND PS",.ORMSG)
"RTN","ORMBLDPS",204,0)
 Q
"RTN","ORMBLDPS",205,0)
 ;
"RTN","ORMBLDPS",206,0)
REF(IFN,ROUTING,CLINIC) ; -- Send msg for refill request
"RTN","ORMBLDPS",207,0)
 N OR0,ORMSG S OR0=$G(^OR(100,+IFN,0)) Q:$P(OR0,U,12)'="O"
"RTN","ORMBLDPS",208,0)
 S:'$G(CLINIC) CLINIC=$S($G(ORL):+ORL,1:+$P(OR0,U,10))
"RTN","ORMBLDPS",209,0)
 S ORMSG(1)=$$MSH^ORMBLD("ORM","PS"),ORMSG(2)=$$PID^ORMBLD($P(OR0,U,2))
"RTN","ORMBLDPS",210,0)
 S ORMSG(3)=$$PV1^ORMBLD($P(OR0,U,2),"O",CLINIC)
"RTN","ORMBLDPS",211,0)
 S ORMSG(4)="ORC|ZF|"_IFN_"^OR|"_$G(^OR(100,+IFN,4))_"^PS|||||||"_DUZ_"||"_$G(ORNP)_"|||"_$$FMTHL7^XLFDT($$NOW^XLFDT)
"RTN","ORMBLDPS",212,0)
 S ORMSG(5)="ZRX||||"_ROUTING
"RTN","ORMBLDPS",213,0)
 D MSG^XQOR("OR EVSEND PS",.ORMSG)
"RTN","ORMBLDPS",214,0)
 Q
"RTN","ORMBLDPS",215,0)
ESC(STR) ;
"RTN","ORMBLDPS",216,0)
 Q $$ESC^ORHLESC(STR,"~|\&^")
"RTN","ORMFN")
0^72^B37182976
"RTN","ORMFN",1,0)
ORMFN ; SLC/MKB - MFN msg router ;8/18/2010
"RTN","ORMFN",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**26,97,94,176,215,243,280**;Dec 17, 1997;Build 85
"RTN","ORMFN",3,0)
EN(MSG) ; -- main entry point for OR ITEM RECEIVE
"RTN","ORMFN",4,0)
 N ORMSG,ORNMSP,ORDG,LEN,MSH,MFI,MFE,ZPKG,ZSY,NTE,ORMFE,ORDITEM,ORACTION,ORDIFN,ORFIEN,ORFLD,ORFDA,NUM,VALUE,X,Y,DA,DIC,DIK,SYS,ZLC,LAST,NAME,ID,INACTIVE,I,ORY,NEXT,DD,DO
"RTN","ORMFN",5,0)
 ;AGP Create a before and after temp global for compares by other protocols
"RTN","ORMFN",6,0)
 K ^TMP($J,"OR OI BEFORE"),^TMP($J,"OR OI AFTER"),^TMP($J,"OR OI NEW")
"RTN","ORMFN",7,0)
 S ORMSG=$G(MSG,"MSG") Q:'$O(@ORMSG@(0))  ; msg array root
"RTN","ORMFN",8,0)
 N ORNOW S ORNOW=$$NOW^XLFDT ;M ^XTMP("OR ITEM RECEIVE",ORNOW)=@ORMSG
"RTN","ORMFN",9,0)
MSH S MSH=0 F  S MSH=$O(@ORMSG@(MSH)) Q:MSH'>0  Q:$E(@ORMSG@(MSH),1,3)="MSH"
"RTN","ORMFN",10,0)
 Q:'MSH  S MSH=MSH_U_@ORMSG@(MSH)
"RTN","ORMFN",11,0)
 S X=$P(MSH,"|",3) S:X="RADIOLOGY" X="IMAGING"
"RTN","ORMFN",12,0)
 S ORDG=$O(^ORD(100.98,"B",X,0)),ORNMSP=$$NMSP(X) Q:'$L(ORNMSP)
"RTN","ORMFN",13,0)
 S MFI=$O(@ORMSG@(+MSH)) Q:$E(@ORMSG@(MFI),1,3)'="MFI"  ; error
"RTN","ORMFN",14,0)
MFE S MFE=+MFI ; ** loop through each MFE segment
"RTN","ORMFN",15,0)
 F  S MFE=$O(@ORMSG@(+MFE)) Q:MFE'>0  I $E(@ORMSG@(MFE),1,3)="MFE" D
"RTN","ORMFN",16,0)
 . K ORFLD,ORFDA
"RTN","ORMFN",17,0)
 . S MFE=MFE_U_@ORMSG@(MFE),ORMFE=$P(MFE,"|",2),INACTIVE=$P(MFE,"|",4)
"RTN","ORMFN",18,0)
 . S ORDITEM=$P(MFE,"|",5),NAME=$TR($P(ORDITEM,U,5),"~"," ")
"RTN","ORMFN",19,0)
 . ;AGP remove automatic stripping of trailing spaces
"RTN","ORMFN",20,0)
 . ;S LEN=$L(NAME) I $E(NAME,LEN)=" " S NAME=$E(NAME,1,(LEN-1))
"RTN","ORMFN",21,0)
 . S ID=$P(ORDITEM,U,4)_";"_$P(ORDITEM,U,6)
"RTN","ORMFN",22,0)
 . S ORDIFN=+$O(^ORD(101.43,"ID",ID,0)),ORFIEN=ORDIFN_","
"RTN","ORMFN",23,0)
 . S ORACTION=$S(ORMFE="MAD":1,(ORMFE="MAC")&('ORDIFN):1,(ORMFE="MUP")&('ORDIFN):1,'ORDIFN:0,ORMFE="MAC":2,ORMFE="MUP":2,ORMFE="MDC":3,ORMFE="MDL":3,1:0) ; 1=add, 2=change, 3=delete (inactivate)
"RTN","ORMFN",24,0)
 . Q:'ORACTION  ; 0=error
"RTN","ORMFN",25,0)
 . I ORACTION=3 S ORFDA(101.43,ORFIEN,.1)=$S(INACTIVE:$$HL7TFM^XLFDT(INACTIVE),1:$$NOW^XLFDT) D FILE^DIE("K","ORFDA") Q
"RTN","ORMFN",26,0)
ADD . I ORACTION=1,'ORDIFN D  Q:'ORDIFN  ;create item if it doesn't exist
"RTN","ORMFN",27,0)
 . . S ORDIFN=$$CREATE(NAME),ORFIEN=ORDIFN_","
"RTN","ORMFN",28,0)
 . . S ORFDA(101.43,ORFIEN,5)=+ORDG
"RTN","ORMFN",29,0)
 . . I ORDIFN>0 S ^TMP($J,"OR OI NEW",ORDIFN)=""
"RTN","ORMFN",30,0)
 . I '$D(^TMP($J,"OR OI NEW",ORDIFN)) M ^TMP($J,"OR OI BEFORE",ORDIFN)=^ORD(101.43,ORDIFN)
"RTN","ORMFN",31,0)
 . S ORFLD(.01)=NAME,ORFLD(1.1)=NAME,ORFLD(2)=ID,ORFLD(3)=$P(ORDITEM,U)
"RTN","ORMFN",32,0)
 . S SYS=$P(ORDITEM,U,3),ORFLD(4)=$S(+SYS=99:$E(SYS,3,99),1:SYS)
"RTN","ORMFN",33,0)
 . S ORFLD(.1)=$S(ORMFE="MAC":"@",(ORMFE="MUP")&('INACTIVE):"@",INACTIVE:$$HL7TFM^XLFDT(INACTIVE),1:"")
"RTN","ORMFN",34,0)
 . F NUM=.01,.1,1.1,2,3,4 S VALUE=$S(ORFLD(NUM)="":"@",1:ORFLD(NUM)) D VAL^DIE(101.43,ORFIEN,NUM,"F",VALUE,.ORY,"ORFDA")
"RTN","ORMFN",35,0)
ZPKG . S LAST=+MFE,ZPKG=$O(@ORMSG@(+MFE))
"RTN","ORMFN",36,0)
 . I ZPKG,$E(@ORMSG@(ZPKG),1,3)=("Z"_ORNMSP) S ZPKG=ZPKG_U_@ORMSG@(ZPKG),LAST=+ZPKG D @ORNMSP ; ZXX segment
"RTN","ORMFN",37,0)
 . D FILE^DIE("K","ORFDA") ; file data
"RTN","ORMFN",38,0)
ZLC . S NEXT=$O(@ORMSG@(LAST)) I NEXT,$E(@ORMSG@(NEXT),1,3)="ZLC" D
"RTN","ORMFN",39,0)
 . . N COMP,CID,CODE,CSYS
"RTN","ORMFN",40,0)
 . . K DA,^ORD(101.43,ORDIFN,10) ;S DIC("P")=$P(^DD(101.43,10,0),U,2)
"RTN","ORMFN",41,0)
 . . S DA(1)=ORDIFN,DIC="^ORD(101.43,"_DA(1)_",10,",DIC(0)="L",ZLC=LAST
"RTN","ORMFN",42,0)
 . . F  S ZLC=$O(@ORMSG@(ZLC)) Q:ZLC'>0  Q:$E(@ORMSG@(ZLC),1,3)'="ZLC"  D
"RTN","ORMFN",43,0)
 . . . S COMP=$P(@ORMSG@(ZLC),"|",5),X=$P(COMP,U,5) I X="" S LAST=ZLC Q
"RTN","ORMFN",44,0)
 . . . S CID=$P(COMP,U,4)_";"_$P(COMP,U,6) K DIC("DR"),DO,DD
"RTN","ORMFN",45,0)
 . . . S CODE=$P(COMP,U),CSYS=$P(COMP,U,3) S:+CSYS=99 CSYS=$E(CSYS,3,99)
"RTN","ORMFN",46,0)
 . . . S DIC("DR")="2///^S X=CID;3///^S X=CODE;4///^S X=CSYS"
"RTN","ORMFN",47,0)
 . . . D FILE^DICN S LAST=ZLC
"RTN","ORMFN",48,0)
ZSY . I $D(^ORD(101.43,ORDIFN,2)) D  ; kill old ones first
"RTN","ORMFN",49,0)
 . . S DA(1)=ORDIFN,DIK="^ORD(101.43,"_DA(1)_",2,"
"RTN","ORMFN",50,0)
 . . S DA=0 F  S DA=$O(^ORD(101.43,DA(1),2,DA)) Q:DA'>0  D ^DIK
"RTN","ORMFN",51,0)
 . . K ^ORD(101.43,ORDIFN,2),DIK,DA
"RTN","ORMFN",52,0)
 . S NEXT=$O(@ORMSG@(LAST)) I NEXT,$E(@ORMSG@(NEXT),1,3)="ZSY" D
"RTN","ORMFN",53,0)
 . . K DA,DIC S DA(1)=ORDIFN,DIC="^ORD(101.43,"_DA(1)_",2,"
"RTN","ORMFN",54,0)
 . . S DIC(0)="L",ZSY=LAST ;,DIC("P")=$P(^DD(101.43,1,0),U,2)
"RTN","ORMFN",55,0)
 . . F  S ZSY=$O(@ORMSG@(+ZSY)) Q:ZSY'>0  Q:$E(@ORMSG@(ZSY),1,3)'="ZSY"  D
"RTN","ORMFN",56,0)
 . . . S X=$P(@ORMSG@(ZSY),"|",3),LAST=ZSY
"RTN","ORMFN",57,0)
 . . . K DD,DO D:$L(X) FILE^DICN
"RTN","ORMFN",58,0)
NTE . K ^ORD(101.43,ORDIFN,8) ; replace text
"RTN","ORMFN",59,0)
 . S NEXT=$O(@ORMSG@(LAST)) I NEXT,$E(@ORMSG@(NEXT),1,3)="NTE" D
"RTN","ORMFN",60,0)
 . . S NTE=LAST,DA=0
"RTN","ORMFN",61,0)
 . . F  S NTE=$O(@ORMSG@(NTE)) Q:NTE'>0  Q:$E(@ORMSG@(NTE),1,3)'="NTE"  S DA=DA+1,^ORD(101.43,ORDIFN,8,DA,0)=$P(@ORMSG@(NTE),"|",4) I $O(@ORMSG@(NTE,0)) D
"RTN","ORMFN",62,0)
 . . . S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S DA=DA+1,^ORD(101.43,ORDIFN,8,DA,0)=@ORMSG@(NTE,I)
"RTN","ORMFN",63,0)
 . . S ^ORD(101.43,ORDIFN,8,0)="^^"_DA_U_DA_U_DT_U
"RTN","ORMFN",64,0)
 . I '$D(^TMP($J,"OR OI NEW",ORDIFN)) M ^TMP($J,"OR OI AFTER",ORDIFN)=^ORD(101.43,ORDIFN)
"RTN","ORMFN",65,0)
 Q
"RTN","ORMFN",66,0)
 ;
"RTN","ORMFN",67,0)
NMSP(NAME) ; -- returns namespace for package
"RTN","ORMFN",68,0)
 I NAME="RADIOLOGY" Q "RA"
"RTN","ORMFN",69,0)
 I NAME="IMAGING" Q "RA"
"RTN","ORMFN",70,0)
 I NAME="LABORATORY" Q "LR"
"RTN","ORMFN",71,0)
 I NAME="DIETETICS" Q "FH"
"RTN","ORMFN",72,0)
 I NAME="PHARMACY" Q "PS"
"RTN","ORMFN",73,0)
 I NAME="CONSULTS" Q "CS"
"RTN","ORMFN",74,0)
 I NAME="PROCEDURES" Q "CS"
"RTN","ORMFN",75,0)
 Q ""
"RTN","ORMFN",76,0)
 ;
"RTN","ORMFN",77,0)
CREATE(X) ; -- Create new item in #101.43
"RTN","ORMFN",78,0)
 Q:'$L($G(X)) 0 N HDR,LAST,TOTAL,I
"RTN","ORMFN",79,0)
 L +^ORD(101.43,0):1 Q:'$T 0
"RTN","ORMFN",80,0)
 S HDR=$G(^ORD(101.43,0)) Q:HDR="" 0
"RTN","ORMFN",81,0)
 S LAST=$P(HDR,U,3),TOTAL=$P(HDR,U,4)
"RTN","ORMFN",82,0)
 F I=(LAST+1):1 Q:'$D(^ORD(101.43,I,0))
"RTN","ORMFN",83,0)
 S ^ORD(101.43,I,0)=X,X=$E(X,1,30),^ORD(101.43,"B",$$UP^XLFSTR(X),I)=""
"RTN","ORMFN",84,0)
 S $P(^ORD(101.43,0),U,3,4)=I_U_(TOTAL+1)
"RTN","ORMFN",85,0)
 L -^ORD(101.43,0)
"RTN","ORMFN",86,0)
 Q I
"RTN","ORMFN",87,0)
 ;
"RTN","ORMFN",88,0)
FH ; -- Dietetics
"RTN","ORMFN",89,0)
 S X=$P(ZPKG,"|",2),ORFLD(111.1)=$S(X="":"@",1:X)
"RTN","ORMFN",90,0)
 S X=$P(ZPKG,"|",3),ORFLD(111.2)=$S(X="":"@",1:X)
"RTN","ORMFN",91,0)
 S X=$P(ZPKG,"|",5),ORFLD(111.3)=$S(X="":"@",1:X)
"RTN","ORMFN",92,0)
 F NUM=111.1,111.2,111.3 D VAL^DIE(101.43,ORFIEN,NUM,"F",ORFLD(NUM),.ORY,"ORFDA")
"RTN","ORMFN",93,0)
 K ^ORD(101.43,ORDIFN,8) S X=$P(ZPKG,"|",4)
"RTN","ORMFN",94,0)
 I $L(X) S ^ORD(101.43,ORDIFN,8,0)="^^1^1^"_DT_U,^(1,0)=X
"RTN","ORMFN",95,0)
 Q
"RTN","ORMFN",96,0)
 ;
"RTN","ORMFN",97,0)
LR ; -- Laboratory
"RTN","ORMFN",98,0)
 S X=$P(ZPKG,"|",2),ORFLD(60.1)=$S(X="":"@",1:X)
"RTN","ORMFN",99,0)
 S X=$P(ZPKG,"|",3),ORFLD(60.2)=$S(X="":"@",1:X)
"RTN","ORMFN",100,0)
 ;S X=$P(ZPKG,"|",4),ORFLD(60.3)=$S(X="":"@",1:X)
"RTN","ORMFN",101,0)
 S X=$P(ZPKG,"|",5),ORFLD(60.6)=$S(X="":"@",1:X)
"RTN","ORMFN",102,0)
 S X=$P(ZPKG,"|",6),ORFLD(60.4)=$S(X="":"@",1:X)
"RTN","ORMFN",103,0)
 S X=$P(ZPKG,"|",7),ORFLD(60.5)=$S(X="":"@",1:X)
"RTN","ORMFN",104,0)
 S X=$P(ZPKG,"|",8),ORFLD(6)=$S(X="":"@",1:X)
"RTN","ORMFN",105,0)
 S X=$P(ZPKG,"|",9),ORFLD(60.7)=$S(X="":"@",1:X)
"RTN","ORMFN",106,0)
 F NUM=6,60.1,60.2,60.4,60.5,60.6,60.7 D VAL^DIE(101.43,ORFIEN,NUM,"F",ORFLD(NUM),.ORY,"ORFDA")
"RTN","ORMFN",107,0)
 Q
"RTN","ORMFN",108,0)
 ;
"RTN","ORMFN",109,0)
PS ; -- Pharmacy
"RTN","ORMFN",110,0)
 N ROUTE
"RTN","ORMFN",111,0)
 S X=$P(ZPKG,"|",2)
"RTN","ORMFN",112,0)
 ;S ORFDA(101.43,ORFIEN,50.1)=$S(X'["I":0,$L($P($P(ORDITEM,U,5),"~",3)):2,1:1)
"RTN","ORMFN",113,0)
 S ORFDA(101.43,ORFIEN,50.1)=$S(X["V":2,X["I":1,1:0) ;inpt or iv med
"RTN","ORMFN",114,0)
 S ORFDA(101.43,ORFIEN,50.2)=(X["O") ;outpt med
"RTN","ORMFN",115,0)
 S ORFDA(101.43,ORFIEN,50.3)=(X["B") ;fluid base/soln
"RTN","ORMFN",116,0)
 S ORFDA(101.43,ORFIEN,50.4)=(X["A") ;fluid additive
"RTN","ORMFN",117,0)
 S ORFDA(101.43,ORFIEN,50.5)=(X["S") ;supply item
"RTN","ORMFN",118,0)
 S ORFDA(101.43,ORFIEN,50.7)=(X["N") ;non-VA med
"RTN","ORMFN",119,0)
 S X=$P(ZPKG,"|",3),ORFDA(101.43,ORFIEN,50.6)=$S(X:1,1:0)
"RTN","ORMFN",120,0)
 ;Check for default med route
"RTN","ORMFN",121,0)
 ;S ROUTE=$$MEDROUTE
"RTN","ORMFN",122,0)
 ;I ROUTE>0 S ORFDA(101.43,ORFIEN,50.8)=ROUTE
"RTN","ORMFN",123,0)
 Q
"RTN","ORMFN",124,0)
 ;
"RTN","ORMFN",125,0)
MEDROUTE() ;
"RTN","ORMFN",126,0)
 N CNT,ROUTE
"RTN","ORMFN",127,0)
 S CNT=0,ROUTE=0
"RTN","ORMFN",128,0)
 F  S CNT=$O(@ORMSG@(CNT)) Q:CNT'>0  D
"RTN","ORMFN",129,0)
 .I $P($G(@ORMSG@(CNT)),"|")'="ZPB" Q
"RTN","ORMFN",130,0)
 .S ROUTE=+$P($G(@ORMSG@(CNT)),"|",4)
"RTN","ORMFN",131,0)
 Q ROUTE
"RTN","ORMFN",132,0)
 ;
"RTN","ORMFN",133,0)
RA ; -- Radiology/Nuc Medicine
"RTN","ORMFN",134,0)
 S X=$P(ZPKG,"|",4),ORFLD(6)=$S(X="":"@",1:X)
"RTN","ORMFN",135,0)
 S X=$P(ZPKG,"|",5),ORFLD(71.1)=$S(X="":"@",1:X)
"RTN","ORMFN",136,0)
 S X=$P(ZPKG,"|",7),ORFLD(71.2)=$S(X="":"@",1:X)
"RTN","ORMFN",137,0)
 S X=$P(ZPKG,"|",2),ORFLD(71.3)=$S(X="":"@",1:X)
"RTN","ORMFN",138,0)
 S ORFLD(71.4)=$S($P(ZPKG,"|",6)="Y":1,1:0)
"RTN","ORMFN",139,0)
 S ORFLD(7)=$S($P(ZPKG,"|",3)="Y":2,1:1)
"RTN","ORMFN",140,0)
 F NUM=6,7,71.1,71.2,71.3,71.4 D VAL^DIE(101.43,ORFIEN,NUM,"F",ORFLD(NUM),.ORY,"ORFDA")
"RTN","ORMFN",141,0)
 Q
"RTN","ORMFN",142,0)
 ;
"RTN","ORMFN",143,0)
CS ; -- Consults/Requests
"RTN","ORMFN",144,0)
 S X=$P(ZPKG,"|",2),ORFLD(123.1)=$S(X="":"@",1:X)
"RTN","ORMFN",145,0)
 D VAL^DIE(101.43,ORFIEN,123.1,"F",ORFLD(123.1),.ORY,"ORFDA")
"RTN","ORMFN",146,0)
 Q
"RTN","ORMGMRC")
0^20^B44816636
"RTN","ORMGMRC",1,0)
ORMGMRC ; SLC/MKB - Process Consult ORM msgs ;03/17/09  10:58
"RTN","ORMGMRC",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,26,68,92,153,174,195,255,243,280**;Dec 17, 1997;Build 85
"RTN","ORMGMRC",3,0)
EN ; -- entry point for GMRC messges
"RTN","ORMGMRC",4,0)
 I '$L($T(@ORDCNTRL)) Q  ;S ORERR="Invalid order control code" Q
"RTN","ORMGMRC",5,0)
 I ORDCNTRL'="SN",ORDCNTRL'="ZP",'ORIFN!('$D(^OR(100,+ORIFN,0))) S ORERR="Invalid OE/RR order number" Q
"RTN","ORMGMRC",6,0)
 S:ORDCNTRL="OC"&(ORTYPE="ORR") ORDCNTRL="UA" ;new code
"RTN","ORMGMRC",7,0)
 N ORSTS,OREASON1,NTE S ORSTS=$$STATUS(ORDSTS)
"RTN","ORMGMRC",8,0)
 S:'ORLOG ORLOG=$$NOW^XLFDT S:'ORDUZ ORDUZ=DUZ S:$G(DGPMT) ORDUZ=""
"RTN","ORMGMRC",9,0)
 S OREASON=$P(OREASON,U,5),NTE=$O(@ORMSG@(+ORC)),OREASON1=""
"RTN","ORMGMRC",10,0)
 I NTE,$E(@ORMSG@(NTE),1,3)="NTE" S OREASON1=$P(@ORMSG@(NTE),"|",4)
"RTN","ORMGMRC",11,0)
 D @ORDCNTRL
"RTN","ORMGMRC",12,0)
 Q
"RTN","ORMGMRC",13,0)
 ;
"RTN","ORMGMRC",14,0)
ZP ; -- Purged
"RTN","ORMGMRC",15,0)
 Q:'ORIFN  Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORMGMRC",16,0)
 K ^OR(100,+ORIFN,4) I "^3^5^6^8^"[(U_$P($G(^(3)),U,3)_U) D STATUS^ORCSAVE2(+ORIFN,14) ; Remove pkg reference, sts=lapsed if still active
"RTN","ORMGMRC",17,0)
 Q
"RTN","ORMGMRC",18,0)
 ;
"RTN","ORMGMRC",19,0)
ZR ; -- Purged as requested [ack]
"RTN","ORMGMRC",20,0)
 D DELETE^ORCSAVE2(+ORIFN)
"RTN","ORMGMRC",21,0)
 Q
"RTN","ORMGMRC",22,0)
 ;
"RTN","ORMGMRC",23,0)
ZU ; -- Unable to purge [ack]
"RTN","ORMGMRC",24,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; update Last Activity
"RTN","ORMGMRC",25,0)
 Q
"RTN","ORMGMRC",26,0)
 ;
"RTN","ORMGMRC",27,0)
OK ; -- Order accepted, GMRC order # assigned [ack]
"RTN","ORMGMRC",28,0)
 S ^OR(100,+ORIFN,4)=PKGIFN S:'$G(ORSTS) ORSTS=5
"RTN","ORMGMRC",29,0)
 D STATUS^ORCSAVE2(+ORIFN,ORSTS) ; 5=pending
"RTN","ORMGMRC",30,0)
 D DATES^ORCSAVE2(+ORIFN,+$E($$NOW^XLFDT,1,12))
"RTN","ORMGMRC",31,0)
 Q
"RTN","ORMGMRC",32,0)
 ;
"RTN","ORMGMRC",33,0)
XX ; -- Change order
"RTN","ORMGMRC",34,0)
 N ORDIALOG,ORDG,ORDA,ORX,ORP,ORSIG S:'$L(ORNATR) ORNATR="S"
"RTN","ORMGMRC",35,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)  S ORIFN=+ORIFN
"RTN","ORMGMRC",36,0)
 S ORDA=$$ACTION^ORCSAVE("XX",ORIFN,ORNP,OREASON1,ORLOG,ORDUZ)
"RTN","ORMGMRC",37,0)
 I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMGMRC",38,0)
 ; -Update sts of order to active, last action to dc/edit:
"RTN","ORMGMRC",39,0)
 S ORX=+$P($G(^OR(100,ORIFN,3)),U,7) S:ORX'>0 ORX=+$O(^(8,ORDA),-1)
"RTN","ORMGMRC",40,0)
 I $D(^OR(100,ORIFN,8,ORX,0)),$P(^(0),U,15)="" S $P(^(0),U,15)=12
"RTN","ORMGMRC",41,0)
 S $P(^OR(100,ORIFN,3),U,7)=ORDA D:$G(ORSTS) STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMGMRC",42,0)
 D PXRMKILL^ORDD100(ORIFN,ORVP,ORLOG) ; JEH 255
"RTN","ORMGMRC",43,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMGMRC",44,0)
 ; -If unsigned edit, leave XX unsigned & mark ORX as Sig Not Req'd
"RTN","ORMGMRC",45,0)
 S ORSIG=$S($P($G(^OR(100,ORIFN,8,ORX,0)),U,4)'=2:1,1:0)
"RTN","ORMGMRC",46,0)
 D SIGSTS^ORCSAVE2(ORIFN,ORDA):ORSIG,SIGN^ORCSAVE2(ORIFN,,,5,ORX):'ORSIG
"RTN","ORMGMRC",47,0)
 ; -Update responses, get/save new order text:
"RTN","ORMGMRC",48,0)
 K ^OR(100,ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(ORIFN_";"_ORDA)
"RTN","ORMGMRC",49,0)
 S $P(^OR(100,ORIFN,8,ORDA,0),U,14)=ORDA
"RTN","ORMGMRC",50,0)
 K:OREASON="RESUBMIT" ^OR(100,ORIFN,6) ;clear previous DC data
"RTN","ORMGMRC",51,0)
 D PXRMADD^ORDD100(ORIFN,ORVP,ORLOG) ; JEH 255
"RTN","ORMGMRC",52,0)
 I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMGMRC",53,0)
 Q
"RTN","ORMGMRC",54,0)
 ;
"RTN","ORMGMRC",55,0)
SN ; -- New backdoor order: return NA msg w/ORIFN, or DE msg
"RTN","ORMGMRC",56,0)
 N ORDIALOG,ORDG,ORP K ^TMP("ORWORD",$J) S:'$L(ORNATR) ORNATR="W"
"RTN","ORMGMRC",57,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMGMRC",58,0)
 I ORDUZ,'$D(^VA(200,ORDUZ,0)) S ORERR="Invalid entering person" Q
"RTN","ORMGMRC",59,0)
 I '$G(ORL) S ORERR="Missing or invalid patient location" Q
"RTN","ORMGMRC",60,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)
"RTN","ORMGMRC",61,0)
SN1 D EN^ORCSAVE K ^TMP("ORWORD",$J) ; setting status, xrefs
"RTN","ORMGMRC",62,0)
 I '$G(ORIFN) S ORERR="Cannot create new order" Q
"RTN","ORMGMRC",63,0)
 ;Save DG1 and ZCL segments of HL7 message from backdoor orders
"RTN","ORMGMRC",64,0)
 D BDOSTR^ORWDBA3
"RTN","ORMGMRC",65,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORLOG,ORDUZ,ORNATR),SIGSTS^ORCSAVE2(ORIFN,1)
"RTN","ORMGMRC",66,0)
 S:'ORSTRT ORSTRT=$$NOW^XLFDT D DATES^ORCSAVE2(+ORIFN,ORSTRT)
"RTN","ORMGMRC",67,0)
 D:$G(ORSTS) STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMGMRC",68,0)
 I $G(ORL) S ORP(1)=ORIFN_";1^1" D PRINTS^ORWD1(.ORP,+ORL) ; chart copy
"RTN","ORMGMRC",69,0)
 S ^OR(100,ORIFN,4)=PKGIFN
"RTN","ORMGMRC",70,0)
 Q
"RTN","ORMGMRC",71,0)
 ;
"RTN","ORMGMRC",72,0)
DLG ; -- Build ORDIALOG(),ORDG from msg
"RTN","ORMGMRC",73,0)
 N OBR,USID,TYPE,OI,ZSV,J,OBX,WP,I
"RTN","ORMGMRC",74,0)
 S OBR=$$OBR I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMGMRC",75,0)
 S USID=$P(@ORMSG@(OBR),"|",5),TYPE=$S(USID["99CON":"CONSULT",1:"REQUEST")
"RTN","ORMGMRC",76,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","GMRCOR "_TYPE,0))
"RTN","ORMGMRC",77,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMGMRC",78,0)
 S ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMGMRC",79,0)
 ;ORSTRT defined in routine ORM before coming here ;WAT/280
"RTN","ORMGMRC",80,0)
 S ORDIALOG($$PTR("EARLIEST DATE"),1)=ORSTRT ;WAT/280
"RTN","ORMGMRC",81,0)
 S OI=$$ORDITEM^ORM(USID) I 'OI S ORERR="Invalid consult or procedure" Q
"RTN","ORMGMRC",82,0)
 S ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORMGMRC",83,0)
 S ZSV=$O(@ORMSG@(OBR)) I ZSV,$E(@ORMSG@(ZSV),1,3)="ZSV" D
"RTN","ORMGMRC",84,0)
 . N X1,X2 S X1=$P(@ORMSG@(ZSV),"|",2),X2=$P(@ORMSG@(ZSV),"|",3)
"RTN","ORMGMRC",85,0)
 . I TYPE="REQUEST" S ORDIALOG($$PTR("REQUEST SERVICE"),1)=+$P(X1,U,4)
"RTN","ORMGMRC",86,0)
 . I TYPE="CONSULT",$L(X2) S ORDIALOG($$PTR("FREE TEXT OI"),1)=X2
"RTN","ORMGMRC",87,0)
D1 S ORDIALOG($$PTR("CATEGORY"),1)=$G(ORCAT)
"RTN","ORMGMRC",88,0)
 S J=$P(@ORMSG@(OBR),"|",19),ORDIALOG($$PTR("PLACE OF CONSULTATION"),1)=$S(J="OC":"C",1:J)
"RTN","ORMGMRC",89,0)
 S ORDIALOG($$PTR("PROVIDER"),1)=$P(@ORMSG@(OBR),"|",20)
"RTN","ORMGMRC",90,0)
 S OBX=OBR F  S OBX=$O(@ORMSG@(OBX)) Q:OBX'>0  S J=$E(@ORMSG@(OBX),1,3) Q:J="ORC"  Q:J="MSH"  I J="OBX" D
"RTN","ORMGMRC",91,0)
 . N SEG,NAME,VALUE S SEG=@ORMSG@(OBX)
"RTN","ORMGMRC",92,0)
 . S NAME=$$UP^XLFSTR($P($P(SEG,"|",4),U,2)),VALUE=$P(SEG,"|",6)
"RTN","ORMGMRC",93,0)
 . I NAME="PROVISIONAL DIAGNOSIS" D  Q
"RTN","ORMGMRC",94,0)
 .. S:$P(SEG,"|",3)="CE" ORDIALOG($$PTR("CODE"),1)=$P(VALUE,U),VALUE=$P(VALUE,U,2)
"RTN","ORMGMRC",95,0)
 .. S ORDIALOG($$PTR("FREE TEXT"),1)=VALUE
"RTN","ORMGMRC",96,0)
 . S WP=$$PTR("WORD PROCESSING 1"),I=1,^TMP("ORWORD",$J,WP,1,I,0)=VALUE
"RTN","ORMGMRC",97,0)
 . S J=0 F  S J=$O(@ORMSG@(OBX,J)) Q:J'>0  S I=I+1,^TMP("ORWORD",$J,WP,1,I,0)=@ORMSG@(OBX,J)
"RTN","ORMGMRC",98,0)
 S:$G(I) ^TMP("ORWORD",$J,WP,1,0)="^^"_I_U_I_U_DT_U,ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMGMRC",99,0)
 Q
"RTN","ORMGMRC",100,0)
 ;
"RTN","ORMGMRC",101,0)
OBR() ; -- Return subscript of RXE segment
"RTN","ORMGMRC",102,0)
 N X,I,SEG S X="",I=+ORC
"RTN","ORMGMRC",103,0)
 F  S I=$O(@ORMSG@(I)) Q:I'>0  S SEG=$E(@ORMSG@(I),1,3) Q:SEG="ORC"  I SEG="OBR" S X=I Q
"RTN","ORMGMRC",104,0)
 Q X
"RTN","ORMGMRC",105,0)
 ;
"RTN","ORMGMRC",106,0)
SC ; -- Status changed (i.e. scheduled)
"RTN","ORMGMRC",107,0)
 S:'$G(ORSTS) ORSTS=6 D STATUS^ORCSAVE2(+ORIFN,ORSTS) ; 6=active
"RTN","ORMGMRC",108,0)
 Q
"RTN","ORMGMRC",109,0)
 ;
"RTN","ORMGMRC",110,0)
STATUS(X) ; -- Returns ptr to Order Status file #100.01
"RTN","ORMGMRC",111,0)
 Q $S(X="DC":1,X="CM":2,X="HD":3,X="IP":5,X="SC":6,X="A":9,X="RP":12,X="CA":13,X="ZC":8,1:5)
"RTN","ORMGMRC",112,0)
 ;
"RTN","ORMGMRC",113,0)
RE ; -- Completed, w/results
"RTN","ORMGMRC",114,0)
 N I,SEG,DA,DR,DIE,X,Y
"RTN","ORMGMRC",115,0)
 S:'$G(ORSTS) ORSTS=2 D STATUS^ORCSAVE2(+ORIFN,ORSTS)
"RTN","ORMGMRC",116,0)
 S X="",DA=+ORIFN,DIE="^OR(100,"
"RTN","ORMGMRC",117,0)
 S DR="71////"_+$E($$NOW^XLFDT,1,12) D ^DIE
"RTN","ORMGMRC",118,0)
 S I=+ORC,X="" F  S I=$O(@ORMSG@(I)) Q:I<1  S SEG=$G(@ORMSG@(I)) Q:$E(SEG,1,3)="ORC"  I $E(SEG,1,3)="OBX",$P(SEG,"|",4)["SIG FINDINGS" S X=$P(SEG,"|",6) Q
"RTN","ORMGMRC",119,0)
 S $P(^OR(100,DA,7),U,2)=$S(X="Y":1,1:"")
"RTN","ORMGMRC",120,0)
 S:'$G(ORNP) ORNP=+$P($G(^OR(100,+ORIFN,0)),U,4)
"RTN","ORMGMRC",121,0)
 I $P(ORC,"|",17)["MAINTENANCE" Q  ;group update - no CM ack needed
"RTN","ORMGMRC",122,0)
 I $L($T(ADD^ORRCACK)) D ADD^ORRCACK(+ORIFN,ORNP) ;Ack stub for prov
"RTN","ORMGMRC",123,0)
 Q
"RTN","ORMGMRC",124,0)
 ;
"RTN","ORMGMRC",125,0)
UA ; -- Unable to Accept [ack]
"RTN","ORMGMRC",126,0)
 S ORDUZ="" I '$L(OREASON1),$L(OREASON) S OREASON1=OREASON
"RTN","ORMGMRC",127,0)
OC ; -- Cancelled/Denied
"RTN","ORMGMRC",128,0)
 S:'$L(ORNATR) ORNATR="X" ;Rejected
"RTN","ORMGMRC",129,0)
 S ^OR(100,+ORIFN,6)=$O(^ORD(100.02,"C",ORNATR,0))_U_ORDUZ_U_ORLOG_U_U_OREASON1
"RTN","ORMGMRC",130,0)
 D STATUS^ORCSAVE2(+ORIFN,13) I ORDCNTRL="OC" D UPDATE("DC") Q
"RTN","ORMGMRC",131,0)
UD ; -- Unable to discontinue [ack]
"RTN","ORMGMRC",132,0)
 N DA S DA=$P(ORIFN,";",2) I DA D
"RTN","ORMGMRC",133,0)
 . S $P(^OR(100,+ORIFN,8,DA,0),U,15)=13 ;request rejected
"RTN","ORMGMRC",134,0)
 . S:$L(OREASON1) ^OR(100,+ORIFN,8,DA,1)=OREASON1
"RTN","ORMGMRC",135,0)
 Q
"RTN","ORMGMRC",136,0)
 ;
"RTN","ORMGMRC",137,0)
OD ; -- Discontinued
"RTN","ORMGMRC",138,0)
 S ^OR(100,+ORIFN,6)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORDUZ_U_ORLOG_U_U_OREASON1
"RTN","ORMGMRC",139,0)
 D STATUS^ORCSAVE2(+ORIFN,1),UPDATE("DC"):$L(ORNATR)
"RTN","ORMGMRC",140,0)
 Q
"RTN","ORMGMRC",141,0)
 ;
"RTN","ORMGMRC",142,0)
DR ; -- Discontinued [ack]
"RTN","ORMGMRC",143,0)
 D STATUS^ORCSAVE2(+ORIFN,1)
"RTN","ORMGMRC",144,0)
 Q
"RTN","ORMGMRC",145,0)
 ;
"RTN","ORMGMRC",146,0)
UPDATE(ORACT) ; -- continue processing
"RTN","ORMGMRC",147,0)
 N ORX,ORDA,ORP
"RTN","ORMGMRC",148,0)
 S ORX=$$CREATE^ORX1(ORNATR) D:ORX
"RTN","ORMGMRC",149,0)
 . S ORDA=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP,OREASON1,ORLOG,ORDUZ)
"RTN","ORMGMRC",150,0)
 . I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMGMRC",151,0)
 . D RELEASE^ORCSAVE2(+ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMGMRC",152,0)
 . D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMGMRC",153,0)
 . I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMGMRC",154,0)
 . S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMGMRC",155,0)
 I 'ORX,ORACT="DC",'$$ACTV^ORX1(ORNATR) S $P(^OR(100,+ORIFN,3),U,7)=0
"RTN","ORMGMRC",156,0)
 D:$G(ORACT)="DC" CANCEL^ORCSEND(+ORIFN)
"RTN","ORMGMRC",157,0)
 Q
"RTN","ORMGMRC",158,0)
 ;
"RTN","ORMGMRC",159,0)
PTR(X) ; -- Returns ptr to prompt in Order Dialog file #101.41
"RTN","ORMGMRC",160,0)
 Q $O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORMPS1")
0^59^B70284401
"RTN","ORMPS1",1,0)
ORMPS1 ;SLC/MKB - Process Pharmacy ORM msgs cont ; 10/01/09 7:38am
"RTN","ORMPS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**86,92,94,116,134,152,158,149,190,195,215,265,275,243,280**;Dec 17, 1997;Build 85
"RTN","ORMPS1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORMPS1",4,0)
UDOSE ; -- new Unit Dose order
"RTN","ORMPS1",5,0)
 N ADMIN,QT,DRUG,INSTR,DOSE,RTE,SCH,OI,URG,WP,DUR,STR,DRGNM,X,PSOI,PSDD,S0,ID,LDOSE,XC,NTE,S0,RXR
"RTN","ORMPS1",6,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORMPS1",7,0)
 I $G(ORAPPT)>0 S ORDG=+$O(^ORD(100.98,"B","CLINIC ORDERS",0))
"RTN","ORMPS1",8,0)
 E  S ORDG=+$O(^ORD(100.98,"B","UNIT DOSE MEDICATIONS",0))
"RTN","ORMPS1",9,0)
 S ORPKG=+$$PKG("PSJ")
"RTN","ORMPS1",10,0)
 D GETDLG1^ORCD(ORDIALOG) S QT=$G(ORQT(1))
"RTN","ORMPS1",11,0)
 S DRUG=$$PTR("DISPENSE DRUG"),INSTR=$$PTR("INSTRUCTIONS")
"RTN","ORMPS1",12,0)
 S DOSE=$$PTR("DOSE"),RTE=$$PTR("ROUTE")
"RTN","ORMPS1",13,0)
 S SCH=$$PTR("SCHEDULE"),ADMIN=$$PTR("ADMIN TIMES")
"RTN","ORMPS1",14,0)
 S OI=$$PTR("ORDERABLE ITEM"),URG=$$PTR("URGENCY")
"RTN","ORMPS1",15,0)
 S WP=$$PTR("WORD PROCESSING 1"),DUR=$$PTR("DURATION")
"RTN","ORMPS1",16,0)
 S STR=$$PTR("STRENGTH"),DRGNM=$$PTR("DRUG NAME")
"RTN","ORMPS1",17,0)
UD1 S:RXO X=$P(RXO,"|",2),ORDIALOG(OI,1)=$$ORDITEM^ORM(X),PSOI=$P(X,U,4,5)
"RTN","ORMPS1",18,0)
 I '$G(ORDIALOG(OI,1)) S ORERR="Missing or invalid orderable item" Q
"RTN","ORMPS1",19,0)
 S PSDD=$P($$FIND^ORM(+RXE,3),U,4,5),ORDIALOG(DRUG,1)=+PSDD
"RTN","ORMPS1",20,0)
 S S0=$$FIND^ORM(+RXE,26)_"&"_$P($$FIND^ORM(+RXE,27),U,5)
"RTN","ORMPS1",21,0)
 S ID=$P(QT,U),LDOSE=$P(QT,U,8) I 'ID,S0 D
"RTN","ORMPS1",22,0)
 . N UNT,PTRN S UNT=$P(S0,"&",2),PTRN="1.N1"""_UNT_""""
"RTN","ORMPS1",23,0)
 . I LDOSE?@PTRN S $P(ID,"&",1,2)=+LDOSE_"&"_UNT Q  ;pre-POE orders
"RTN","ORMPS1",24,0)
 . S:$P(PSOI,U,2)'[S0 ORDIALOG(STR,1)=$TR(S0,"&")
"RTN","ORMPS1",25,0)
 I 'ID,'S0 S ORDIALOG(DRGNM,1)=$$UNESC^ORMPS2($P(PSDD,U,2))
"RTN","ORMPS1",26,0)
 S:$L(ID) ORDIALOG(DOSE,1)=$$UNESC^ORMPS2($P(ID,"&",1,4)_"&"_LDOSE_"&"_+PSDD_"&"_S0)
"RTN","ORMPS1",27,0)
 I LDOSE="" D  I LDOSE="" S ORERR="Unable to determine instructions" Q
"RTN","ORMPS1",28,0)
 . I $G(RXC)'>0 D  Q  ;look for units/dose
"RTN","ORMPS1",29,0)
 .. S LDOSE=$P(ID,"&",3),X=$P(ID,"&",4) I 'LDOSE S LDOSE="" Q
"RTN","ORMPS1",30,0)
 .. S:'$L(X) X=$$UNESC^ORMPS2($P($$FIND^ORM(+RXE,7),U,5)) S:$L(X) LDOSE=LDOSE_" "_X
"RTN","ORMPS1",31,0)
 .. S ORDIALOG(DRGNM,1)=$$UNESC^ORMPS2($P(PSDD,U,2)) ;force use of DD
"RTN","ORMPS1",32,0)
 . F  D  Q:LDOSE'=""  S RXC=$O(@ORMSG@(RXC)) Q:'RXC  Q:$E(@ORMSG@(RXC),1,3)'="RXC"
"RTN","ORMPS1",33,0)
 .. S XC=@ORMSG@(RXC) Q:+$P($P(XC,"|",3),U,4)'=+PSOI
"RTN","ORMPS1",34,0)
 .. S LDOSE=$P(XC,"|",4)_$P($P(XC,"|",5),U,5) ;strength_units
"RTN","ORMPS1",35,0)
 S ORDIALOG(INSTR,1)=$$UNESC^ORMPS2(LDOSE)
"RTN","ORMPS1",36,0)
UD2 S NTE=$$NTE^ORMPS3(21) I NTE D
"RTN","ORMPS1",37,0)
 . N CNT,I S CNT=1,^TMP("ORWORD",$J,WP,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",38,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,WP,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",39,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",40,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMPS1",41,0)
 S RXR=$$RXR^ORMPS I 'RXR S ORERR="Missing or invalid RXR segment" Q
"RTN","ORMPS1",42,0)
 S ORDIALOG(RTE,1)=$P($P(RXR,"|",2),U,4),ORDIALOG(URG,1)=ORURG
"RTN","ORMPS1",43,0)
 S X=$P(QT,U,2)
"RTN","ORMPS1",44,0)
 S ORDIALOG(SCH,1)=$$UNESC^ORMPS2($P(X,"&"))
"RTN","ORMPS1",45,0)
 S:$L($P(X,"&",2)) ORDIALOG(ADMIN,1)=$P(X,"&",2)
"RTN","ORMPS1",46,0)
 S X=$P(QT,U,3) I $L(X) D  ;set only if previous order had duration
"RTN","ORMPS1",47,0)
 . N IFN S IFN=$S($G(ORIFN):+ORIFN,$P(ZRX,"|",2):+$P(ZRX,"|",2),1:0)
"RTN","ORMPS1",48,0)
 . S:$O(^OR(100,+IFN,4.5,"ID","DAYS",0)) ORDIALOG(DUR,1)=$$DURATION^ORMPS3(X)
"RTN","ORMPS1",49,0)
 D DOSETEXT^ORCDPS2 ;reset Instructions text, SIG
"RTN","ORMPS1",50,0)
 D UNESCARR^ORMPS2("ORDIALOG")
"RTN","ORMPS1",51,0)
 Q
"RTN","ORMPS1",52,0)
OUT ; -- new Outpt order
"RTN","ORMPS1",53,0)
 N OI,SIG,INSTR,DOSE,RTE,SCH,DUR,SC,STR,DRUG,PI,CONJ,PSOI,PSDD,S0,X,I,RXR,J,NTE,ZSC,CNT,PC
"RTN","ORMPS1",54,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORMPS1",55,0)
 S ORDG=+$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",0))
"RTN","ORMPS1",56,0)
 S ORPKG=+$$PKG("PSO") D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMPS1",57,0)
 S OI=$$PTR("ORDERABLE ITEM"),SIG=$$PTR("SIG")
"RTN","ORMPS1",58,0)
 S INSTR=$$PTR("INSTRUCTIONS"),DOSE=$$PTR("DOSE")
"RTN","ORMPS1",59,0)
 S SCH=$$PTR("SCHEDULE"),DUR=$$PTR("DURATION")
"RTN","ORMPS1",60,0)
 S RTE=$$PTR("ROUTE"),SC=$$PTR("SERVICE CONNECTED")
"RTN","ORMPS1",61,0)
 S STR=$$PTR("STRENGTH"),DRUG=$$PTR("DISPENSE DRUG")
"RTN","ORMPS1",62,0)
 S PI=$$PTR("PATIENT INSTRUCTIONS"),CONJ=$$PTR("AND/THEN")
"RTN","ORMPS1",63,0)
 S PC=$$PTR("WORD PROCESSING 1")
"RTN","ORMPS1",64,0)
 S:RXO X=$P(RXO,"|",2),ORDIALOG(OI,1)=$$ORDITEM^ORM(X),PSOI=$P(X,U,4,5)
"RTN","ORMPS1",65,0)
 I '$G(ORDIALOG(OI,1)) S ORERR="Missing or invalid orderable item" Q
"RTN","ORMPS1",66,0)
 S PSDD=$P($$FIND^ORM(+RXE,3),U,4,5),ORDIALOG(DRUG,1)=+PSDD
"RTN","ORMPS1",67,0)
 S S0=$$FIND^ORM(+RXE,26)_"&"_$P($$FIND^ORM(+RXE,27),U,5)
"RTN","ORMPS1",68,0)
 I S0,$P(PSOI,U,2)'[S0 S ORDIALOG(STR,1)=$TR(S0,"&")
"RTN","ORMPS1",69,0)
 I 'S0,'$G(ORQT(1)) S ORDIALOG($$PTR("DRUG NAME"),1)=$$UNESC^ORMPS2($P(PSDD,U,2))
"RTN","ORMPS1",70,0)
OUT1 S ORDIALOG($$PTR("QUANTITY"),1)=$$FIND^ORM(+RXE,11)
"RTN","ORMPS1",71,0)
 S ORDIALOG($$PTR("REFILLS"),1)=$$FIND^ORM(+RXE,13)
"RTN","ORMPS1",72,0)
 S X=$$FIND^ORM(+RXE,23) S:$E(X)="D" X=+$E(X,2,99)
"RTN","ORMPS1",73,0)
 S:X ORDIALOG($$PTR("DAYS SUPPLY"),1)=X
"RTN","ORMPS1",74,0)
 I ZRX S X=$P(ZRX,"|",5) S:$L(X) ORDIALOG($$PTR("ROUTING"),1)=X
"RTN","ORMPS1",75,0)
 S:ORURG ORDIALOG($$PTR("URGENCY"),1)=ORURG F I=1:1:ORQT D
"RTN","ORMPS1",76,0)
 . S ORDIALOG(INSTR,I)=$$UNESC^ORMPS2($P(ORQT(I),U,8)),X=$P(ORQT(I),U)
"RTN","ORMPS1",77,0)
 . S:$L(X) ORDIALOG(DOSE,I)=$$UNESC^ORMPS2($P(X,"&",1,4)_"&"_$P(ORQT(I),U,8)_"&"_+PSDD_"&"_S0)
"RTN","ORMPS1",78,0)
 . S X=$P(ORQT(I),U,2) S:$L(X) ORDIALOG(SCH,I)=$$UNESC^ORMPS2(X)
"RTN","ORMPS1",79,0)
 . S X=$P(ORQT(I),U,3) S:$L(X) ORDIALOG(DUR,I)=$$DURATION^ORMPS3(X)
"RTN","ORMPS1",80,0)
 . S X=$P(ORQT(I),U,9) S:$L(X) ORDIALOG(CONJ,I)=$S(X="S":"T",1:X)
"RTN","ORMPS1",81,0)
 S RXR=$$RXR^ORMPS I RXR S ORDIALOG(RTE,1)=$P($P(RXR,"|",2),U,4) D
"RTN","ORMPS1",82,0)
 . S I=1,J=+RXR ;look for multiple RXR's
"RTN","ORMPS1",83,0)
 . F  S J=$O(@ORMSG@(J)) Q:J'>0  S RXR=@ORMSG@(J) Q:$E(RXR,1,3)'="RXR"  S I=I+1,ORDIALOG(RTE,I)=$P($P(RXR,"|",2),U,4)
"RTN","ORMPS1",84,0)
OUT2 S NTE=$$NTE^ORMPS3(6) I NTE D  ;Prov Comm ;D:'NTE PCOMM^ORMPS2
"RTN","ORMPS1",85,0)
 . S CNT=1,^TMP("ORWORD",$J,PC,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",86,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,PC,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",87,0)
 . S ^TMP("ORWORD",$J,PC,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",88,0)
 . S ORDIALOG(PC,1)="^TMP(""ORWORD"",$J,"_PC_",1)",ORDIALOG(PC,"FORMAT")="@" ;keep, don't show
"RTN","ORMPS1",89,0)
 . N XCNT,XCOMM,XCOMMENT,XORCOMM,XXCNT,XORIFN
"RTN","ORMPS1",90,0)
 . S XORIFN=$G(ORIFN) S:XORIFN="" XORIFN=$P(RXR,"|",2) Q:XORIFN=""
"RTN","ORMPS1",91,0)
 . S XCOMM=$O(^OR(100,+XORIFN,4.5,"ID","COMMENT",0)) Q:XCOMM=""
"RTN","ORMPS1",92,0)
 . S XCNT=0 F  S XCNT=$O(^TMP("ORWORD",$J,PC,1,XCNT)) Q:XCNT=""  S XCOMMENT=^TMP("ORWORD",$J,PC,1,XCNT,0) D
"RTN","ORMPS1",93,0)
 .. S XORCOMM=$G(^OR(100,+XORIFN,4.5,XCOMM,2,XCNT,0)),XXCNT=0
"RTN","ORMPS1",94,0)
 .. I XORCOMM="" F  S XXCNT=$O(^OR(100,+XORIFN,4.5,XCOMM,2,XXCNT)) Q:XXCNT=""  S XORCOMM=$G(^(XXCNT,0)) Q:XORCOMM'=""
"RTN","ORMPS1",95,0)
 .. I $G(XCOMMENT)=$G(XORCOMM) S ORDIALOG(PC,"FORMAT")="@"
"RTN","ORMPS1",96,0)
 S NTE=$$NTE^ORMPS3(7) I NTE D  ;Pat Instr
"RTN","ORMPS1",97,0)
 . S CNT=1,^TMP("ORWORD",$J,PI,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",98,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,PI,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",99,0)
 . S ^TMP("ORWORD",$J,PI,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",100,0)
 . S ORDIALOG(PI,1)="^TMP(""ORWORD"",$J,"_PI_",1)"
"RTN","ORMPS1",101,0)
 S NTE=$$NTE^ORMPS3(21) I NTE D  ;Sig
"RTN","ORMPS1",102,0)
 . S CNT=1,^TMP("ORWORD",$J,SIG,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",103,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,SIG,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",104,0)
 . S ^TMP("ORWORD",$J,SIG,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",105,0)
 . S ORDIALOG(SIG,1)="^TMP(""ORWORD"",$J,"_SIG_",1)"
"RTN","ORMPS1",106,0)
 . S ORDIALOG(PI,"FORMAT")="@" ;PI already included in Sig
"RTN","ORMPS1",107,0)
OUT3 I '$G(ORQT(1))!('NTE) D DOSETEXT^ORCDPS2 ;reset Instructions text, Sig
"RTN","ORMPS1",108,0)
 S ZSC=$$ZSC^ORMPS3,X=$P(ZSC,"|",2) I X?2.3U S ORDIALOG(SC,1)=$S(X="SC":1,1:0)
"RTN","ORMPS1",109,0)
 Q
"RTN","ORMPS1",110,0)
IV ; -- new IV order
"RTN","ORMPS1",111,0)
 N IVTYP,IVTYPE S IVTYP=$P(ZRX,"|",7) I IVTYP="",$$NUMADDS^ORMPS3'>1 G UDOSE
"RTN","ORMPS1",112,0)
 N SOLN,VOL,ADDS,STR,UNITS,RATE,URG,X,X1,X2,X3,I,J,TYPE,OI,WP,NTE,SCH
"RTN","ORMPS1",113,0)
 N DAYS,ROUTE,ADMIN,RXR,ADDFREQ
"RTN","ORMPS1",114,0)
 S ORDIALOG=+$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORMPS1",115,0)
 I +$G(ORAPPT)>0 S ORDG=+$O(^ORD(100.98,"B","CLINIC ORDERS",0))
"RTN","ORMPS1",116,0)
 E  S ORDG=+$O(^ORD(100.98,"B",$S($P(ZRX,"|",7)="TPN":"TPN",1:"IV RX"),0))
"RTN","ORMPS1",117,0)
 S ORPKG=+$$PKG("PSJ") D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMPS1",118,0)
 S SOLN=$$PTR("ORDERABLE ITEM"),VOL=$$PTR("VOLUME"),SCH=$$PTR("SCHEDULE")
"RTN","ORMPS1",119,0)
 S RATE=$$PTR("INFUSION RATE") S:ORURG ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMPS1",120,0)
 S WP=$$PTR("WORD PROCESSING 1"),ADDS=$$PTR("ADDITIVE")
"RTN","ORMPS1",121,0)
 S ADDFREQ=$$PTR("ADDITIVE FREQUENCY")
"RTN","ORMPS1",122,0)
 S STR=$$PTR("STRENGTH PSIV"),UNITS=$$PTR("UNITS")
"RTN","ORMPS1",123,0)
 S DAYS=$$PTR("DURATION"),IVTYPE=$$PTR("IV TYPE"),ADMIN=$$PTR("ADMIN TIMES")
"RTN","ORMPS1",124,0)
IV1 S NTE=$$NTE^ORMPS3(21) I NTE D
"RTN","ORMPS1",125,0)
 . N CNT,I S CNT=1,^TMP("ORWORD",$J,WP,1,CNT,0)=$$UNESC^ORMPS2($P(@ORMSG@(NTE),"|",4))
"RTN","ORMPS1",126,0)
 . I $O(@ORMSG@(NTE,0)) S I=0 F  S I=$O(@ORMSG@(NTE,I)) Q:I'>0  S CNT=CNT+1,^TMP("ORWORD",$J,WP,1,CNT,0)=$$UNESC^ORMPS2(@ORMSG@(NTE,I))
"RTN","ORMPS1",127,0)
 . S ^TMP("ORWORD",$J,WP,1,0)="^^"_CNT_U_CNT_U_DT_U
"RTN","ORMPS1",128,0)
 . S ORDIALOG(WP,1)="^TMP(""ORWORD"",$J,"_WP_",1)"
"RTN","ORMPS1",129,0)
 N ORDAYS S ORDAYS=""
"RTN","ORMPS1",130,0)
 S:$D(RXO) ORDAYS=$P($P(RXO,"|",2),"^",3)
"RTN","ORMPS1",131,0)
 S:$L(ORDAYS) ORDAYS=$$IVLIM^ORMPS2(ORDAYS)
"RTN","ORMPS1",132,0)
 S:$L(ORDAYS) ORDIALOG(DAYS,1)=ORDAYS
"RTN","ORMPS1",133,0)
 S ORDIALOG(IVTYPE,1)=IVTYP
"RTN","ORMPS1",134,0)
 S X=$P($$FIND^ORM(+RXE,25),U,5)
"RTN","ORMPS1",135,0)
 S ORDIALOG(RATE,1)=$$FIND^ORM(+RXE,24)_$S($L(X):" "_X,1:""),(I,J)=0
"RTN","ORMPS1",136,0)
 F  D  S RXC=$O(@ORMSG@(RXC)) Q:'RXC  Q:$E(@ORMSG@(RXC),1,3)'="RXC"
"RTN","ORMPS1",137,0)
 . S X=@ORMSG@(RXC),TYPE=$P(X,"|",2),OI=$$ORDITEM^ORM($P(X,"|",3)) Q:'OI
"RTN","ORMPS1",138,0)
 . S X1=$P(X,"|",4),X2=$P($P(X,"|",5),U,5),X3=$P(X,"|",6)
"RTN","ORMPS1",139,0)
 . I $E(TYPE)="B" S J=J+1,ORDIALOG(SOLN,J)=OI,ORDIALOG(VOL,J)=X1 Q
"RTN","ORMPS1",140,0)
 . S I=I+1,ORDIALOG(ADDS,I)=OI,ORDIALOG(STR,I)=X1,ORDIALOG(UNITS,I)=X2,ORDIALOG(ADDFREQ,I)=$$ADDFRQCV^ORMBLDP1(X3,"I")
"RTN","ORMPS1",141,0)
IV2 ;
"RTN","ORMPS1",142,0)
 S RXR=$$RXR^ORMPS
"RTN","ORMPS1",143,0)
 S ROUTE=$P(RXR,"|",2)
"RTN","ORMPS1",144,0)
 S ORDIALOG($$PTR("ROUTE"),1)=$P(ROUTE,U,4)
"RTN","ORMPS1",145,0)
 I IVTYP="I" S X=$P($G(ORQT(1)),U,2) D
"RTN","ORMPS1",146,0)
 .S:$L($P(X,"&")) ORDIALOG(SCH,1)=$P(X,"&")
"RTN","ORMPS1",147,0)
 .S:$L($P(X,"&",2)) ORDIALOG(ADMIN,1)=$P(X,"&",2)
"RTN","ORMPS1",148,0)
 D UNESCARR^ORMPS2("ORDIALOG")
"RTN","ORMPS1",149,0)
 Q
"RTN","ORMPS1",150,0)
PKG(NMSP) ; -- Return Package file ptr for NMSP
"RTN","ORMPS1",151,0)
 N I S I=0
"RTN","ORMPS1",152,0)
 F  S I=+$O(^DIC(9.4,"C",NMSP,I)) Q:I<1  Q:'$O(^(I,0))  ;no Addl Prefs
"RTN","ORMPS1",153,0)
 Q I
"RTN","ORMPS1",154,0)
PTR(NAME) ; -- Returns ien of prompt NAME in Order Dialog file #101.41
"RTN","ORMPS1",155,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORMPS1",156,0)
QT ; -- Unpiece the Q/T field from RXE
"RTN","ORMPS1",157,0)
 I 'RXE S ORQT(1)=ORQT,ORQT=1 Q  ; nothing to reset
"RTN","ORMPS1",158,0)
 N X,Y,I,J,P,SEG,DONE K ORQT
"RTN","ORMPS1",159,0)
 S SEG=$G(@ORMSG@(+RXE)),X=$P(SEG,"|",2),(I,J,P,DONE)=0
"RTN","ORMPS1",160,0)
 F  D  Q:DONE
"RTN","ORMPS1",161,0)
 . S P=P+1,Y=$P(X,"~",P) I Y="" S DONE=1 Q
"RTN","ORMPS1",162,0)
 . I P<$L(X,"~") S I=I+1,ORQT(I)=Y Q
"RTN","ORMPS1",163,0)
 . I $L(SEG,"|")>2 S I=I+1,ORQT(I)=Y,DONE=1 Q
"RTN","ORMPS1",164,0)
 . S J=+$O(@ORMSG@(+RXE,J)) I J'>0 S I=I+1,ORQT(I)=Y,DONE=1 Q
"RTN","ORMPS1",165,0)
 . S SEG=$G(@ORMSG@(+RXE,J)),X=$P(SEG,"|"),P=1,I=I+1,ORQT(I)=Y_$P(X,"~")
"RTN","ORMPS1",166,0)
 S ORQT=I Q:'ORQT  ; else reset ORSTRT, ORSTOP, ORURG
"RTN","ORMPS1",167,0)
 S ORSTRT=$P(ORQT(1),U,4),ORSTOP=$P(ORQT(ORQT),U,5),ORURG=$P(ORQT(1),U,6)
"RTN","ORMPS1",168,0)
 S:ORSTRT ORSTRT=$$FMDATE^ORM(ORSTRT) S:ORSTOP ORSTOP=$$FMDATE^ORM(ORSTOP) S:$L(ORURG) ORURG=$$URGENCY^ORM(ORURG)
"RTN","ORMPS1",169,0)
 Q
"RTN","ORMPS2")
0^60^B47758235
"RTN","ORMPS2",1,0)
ORMPS2 ;SLC/MKB - Process Pharmacy ORM msgs cont ;10/01/2009
"RTN","ORMPS2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**94,116,129,134,186,190,195,215,265,243,280**;Dec 17, 1997;Build 85
"RTN","ORMPS2",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORMPS2",4,0)
 ;
"RTN","ORMPS2",5,0)
FINISHED() ; -- new order [SN^ORMPS] due to finishing?
"RTN","ORMPS2",6,0)
 N Y,ORIG,TYPE,ORIG4 S Y=0
"RTN","ORMPS2",7,0)
 S ORIG=+$P(ZRX,"|",2),TYPE=$P(ZRX,"|",4),ORIG4=$G(^OR(100,ORIG,4))
"RTN","ORMPS2",8,0)
 I ORIG,TYPE="E",ORIG4?1.N1"P"!(ORIG4?1.N1"S") S ORIFN=+ORIG,Y=1
"RTN","ORMPS2",9,0)
 Q Y
"RTN","ORMPS2",10,0)
 ;
"RTN","ORMPS2",11,0)
WPX() ; -- Compare comments in @ORMSG@(NTE) with order ORIFN
"RTN","ORMPS2",12,0)
 ;     Returns 1 if different, or 0 if same
"RTN","ORMPS2",13,0)
 N NTE,SPINST,Y,X S Y=0
"RTN","ORMPS2",14,0)
 S NTE=+$$NTE^ORMPS3(21),SPINST=$S(NTE:$$NTXT^ORMPS3(NTE),1:"")
"RTN","ORMPS2",15,0)
 S X=$$VALTXT^ORMPS3(+ORIFN,"COMMENT")
"RTN","ORMPS2",16,0)
 I $TR(X," ")'=$TR(SPINST," ") S Y=1 ;comp text w/o spaces
"RTN","ORMPS2",17,0)
WQ Q Y
"RTN","ORMPS2",18,0)
 ;
"RTN","ORMPS2",19,0)
IVX() ; -- Compare ORMSG to Inpt order ORIFN if IV, return 0 if 'diff or 'IV
"RTN","ORMPS2",20,0)
 N Y,ADDFREQ,RXC,DG,OI,PSOI,XC,X,RATE,RXR,ORA,ORB,ORX,I,J,OI0,INST,VOL,STR,UNT
"RTN","ORMPS2",21,0)
 S RXC=$$RXC^ORMPS,Y=0 I RXC'>0 Q Y  ;not IV of any kind
"RTN","ORMPS2",22,0)
 S DG=+$P($G(^OR(100,+ORIFN,0)),U,11),DG=$P($G(^ORD(100.98,DG,0)),U,3)
"RTN","ORMPS2",23,0)
 I DG'="IV RX",DG'="TPN" D  Q Y  ;not fluid
"RTN","ORMPS2",24,0)
 . I $P(ZRX,"|",7)'="" S Y=1 Q
"RTN","ORMPS2",25,0)
 . I $$NUMADDS^ORMPS3>1 S Y=1 Q
"RTN","ORMPS2",26,0)
 . S OI=$$VALUE("ORDERABLE"),PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORMPS2",27,0)
 . S XC=@ORMSG@(RXC) I PSOI'=$P(XC,U,4) S Y=1 Q
"RTN","ORMPS2",28,0)
 . N X1,X2,X3 S X1=$P(XC,"|",4),X2=$P($P(XC,"|",5),U,5)
"RTN","ORMPS2",29,0)
 . S X3=$$VALUE("INSTR") I (X1_X2)'=X3,(X1_" "_X2)'=X3 S Y=1 Q
"RTN","ORMPS2",30,0)
IV1 S RATE=$$FIND^ORM(+RXE,24),UNT=$P($$FIND^ORM(+RXE,25),U,5)
"RTN","ORMPS2",31,0)
 S:$L(UNT) RATE=RATE_" "_UNT S X=$$VALUE("RATE") I RATE'=X D  Q:Y Y
"RTN","ORMPS2",32,0)
 . S:RATE["@" RATE=$P(RATE,"@") S:X["@" X=$P(X,"@") ;rate@labels
"RTN","ORMPS2",33,0)
 . I RATE'=X S Y=1 Q
"RTN","ORMPS2",34,0)
 I $P(ZRX,"|",7)'=$$VALUE("TYPE") S Y=1 Q Y
"RTN","ORMPS2",35,0)
 S RXR=$$RXR^ORMPS
"RTN","ORMPS2",36,0)
 I $P($P(RXR,"|",2),U,4)'=$$VALUE("ROUTE") S Y=1 Q Y
"RTN","ORMPS2",37,0)
 S ORB=+$$PTR("ORDERABLE ITEM"),ORA=+$$PTR("ADDITIVE"),I=+RXC
"RTN","ORMPS2",38,0)
 F  S XC=@ORMSG@(I) Q:$E(XC,1,3)'="RXC"  D  S I=$O(@ORMSG@(I)) Q:I'>0
"RTN","ORMPS2",39,0)
 . S ORX($P(XC,"|",2),+$P(XC,U,4))=$P(XC,"|",4)_U_$P($P(XC,"|",5),U,5)_U_$P(XC,"|",6)
"RTN","ORMPS2",40,0)
 . ;ORX("A",PSOI)=str^units^bag or ORX("B",PSOI)=volume^units^null
"RTN","ORMPS2",41,0)
 F I="STRENGTH","UNITS","VOLUME","ADDFREQ" D  ;ORX(I,inst)=value
"RTN","ORMPS2",42,0)
 . S J=0 F  S J=$O(^OR(100,+ORIFN,4.5,"ID",I,J)) Q:J'>0  D
"RTN","ORMPS2",43,0)
 .. S INST=+$P($G(^OR(100,+ORIFN,4.5,J,0)),U,3)
"RTN","ORMPS2",44,0)
 .. S:INST ORX(I,INST)=$G(^OR(100,+ORIFN,4.5,J,1))
"RTN","ORMPS2",45,0)
 S I=0 F  S I=$O(^OR(100,+ORIFN,4.5,"ID","ORDERABLE",I)) Q:I'>0  D  Q:Y
"RTN","ORMPS2",46,0)
 . S OI0=$G(^OR(100,+ORIFN,4.5,I,0)),OI=+$G(^(1))
"RTN","ORMPS2",47,0)
 . S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2)
"RTN","ORMPS2",48,0)
 . I $P(OI0,U,2)=ORA,$G(ORX("A",PSOI)) D  Q
"RTN","ORMPS2",49,0)
 .. S INST=$P(OI0,U,3),STR=+ORX("A",PSOI),UNT=$P(ORX("A",PSOI),U,2)
"RTN","ORMPS2",50,0)
 .. S ADDFREQ=$P(ORX("A",PSOI),U,3)
"RTN","ORMPS2",51,0)
 .. I STR'=$G(ORX("STRENGTH",INST)) S Y=1 Q
"RTN","ORMPS2",52,0)
 .. I UNT'=$G(ORX("UNITS",INST)) S Y=1 Q
"RTN","ORMPS2",53,0)
 .. I $$ADDFRQCV^ORMBLDP1(ADDFREQ,"I")'=$G(ORX("ADDFREQ",INST)) S Y=1 Q
"RTN","ORMPS2",54,0)
 .. K ORX("A",PSOI) ;same
"RTN","ORMPS2",55,0)
 . I $P(OI0,U,2)=ORB,$G(ORX("B",PSOI)) D  Q
"RTN","ORMPS2",56,0)
 .. S INST=$P(OI0,U,3),VOL=+$G(ORX("B",PSOI))
"RTN","ORMPS2",57,0)
 .. I VOL'=$G(ORX("VOLUME",INST)) S Y=1 Q
"RTN","ORMPS2",58,0)
 .. K ORX("B",PSOI) ;same
"RTN","ORMPS2",59,0)
 . S Y=1
"RTN","ORMPS2",60,0)
 I $O(ORX("A",0))!$O(ORX("B",0)) S Y=1 ;leftover items - changed
"RTN","ORMPS2",61,0)
 Q Y
"RTN","ORMPS2",62,0)
 ;
"RTN","ORMPS2",63,0)
CHANGED() ; -- Compare ORMSG to order ORIFN, return 1 if different
"RTN","ORMPS2",64,0)
 N I,X,Y,X1,NTE,SIG,PI,TRXO S Y=0
"RTN","ORMPS2",65,0)
 I $G(ORCAT)="I" D  G CHQ
"RTN","ORMPS2",66,0)
 . I $$WPX S Y=1 Q  ;Special Instructions
"RTN","ORMPS2",67,0)
 . S X=$$VALUE("DAYS") ;duration
"RTN","ORMPS2",68,0)
 . I $G(X)'="" D  I $G(X)'=X1 S Y=1 Q
"RTN","ORMPS2",69,0)
 . .S X=$$HL7IVLMT^ORMBLDP1(X)
"RTN","ORMPS2",70,0)
 . .S TRXO=$$RXO^ORMPS,X1=$P($P($G(TRXO),"|",2),U,3)
"RTN","ORMPS2",71,0)
 . .;S X1=$$DURATION^ORMPS3($P($P(TRXO,"|",2),U,3))
"RTN","ORMPS2",72,0)
 . I $$IVX S Y=1 Q  ;IV fields
"RTN","ORMPS2",73,0)
 ;S X=+$P($P(RXE,"|",3),U,4) I X'=+$$VALUE("DRUG") S Y=1 G CHQ
"RTN","ORMPS2",74,0)
 I +$P(RXE,"|",11)'=+$$VALUE("QTY") S Y=1 G CHQ
"RTN","ORMPS2",75,0)
 I +$P(RXE,"|",13)'=+$$VALUE("REFILLS") S Y=1 G CHQ
"RTN","ORMPS2",76,0)
 ;S X=$P(RXE,"|",23) S:$E(X)="D" X=+$E(X,2,99) I X'=+$$VALUE("SUPPLY") S Y=1 G CHQ
"RTN","ORMPS2",77,0)
 ;I $P(ZRX,"|",5)'=$$VALUE("PICKUP") S Y=1 G CHQ
"RTN","ORMPS2",78,0)
 S NTE=$$NTE^ORMPS3(21),SIG=+$O(^OR(100,+ORIFN,4.5,"ID","SIG",0)) ;verb
"RTN","ORMPS2",79,0)
 I NTE,SIG,$P($P(@ORMSG@(NTE),"|",4)," ")'=$P($G(^OR(100,+ORIFN,4.5,SIG,2,1,0))," ") S Y=1 G CHQ
"RTN","ORMPS2",80,0)
 S NTE=$$NTE^ORMPS3(7),PI=+$O(^OR(100,+ORIFN,4.5,"ID","PI",0))
"RTN","ORMPS2",81,0)
 I (NTE&'PI)!('NTE&PI) Q 1 ;added or deleted
"RTN","ORMPS2",82,0)
 I NTE,PI D  G CHQ ;compare text
"RTN","ORMPS2",83,0)
 . S PI=$$VALTXT^ORMPS3(+ORIFN,PI)_$$VALTXT^ORMPS3(+ORIFN,"COMMENT")
"RTN","ORMPS2",84,0)
 . S NTE=$$NTXT^ORMPS3(NTE)
"RTN","ORMPS2",85,0)
 . I $TR(NTE," ")'=$TR(PI," ") S Y=1 Q  ;comp text w/o spaces
"RTN","ORMPS2",86,0)
CHQ Q Y
"RTN","ORMPS2",87,0)
 ;
"RTN","ORMPS2",88,0)
VALUE(ID) ; -- Return value of ID in ^OR(100,+ORIFN,4.5,"ID")
"RTN","ORMPS2",89,0)
 N I,Y I '$L($G(ID)) Q ""
"RTN","ORMPS2",90,0)
 S I=+$O(^OR(100,+ORIFN,4.5,"ID",ID,0))
"RTN","ORMPS2",91,0)
 S Y=$G(^OR(100,+ORIFN,4.5,I,1))
"RTN","ORMPS2",92,0)
 Q Y
"RTN","ORMPS2",93,0)
 ;
"RTN","ORMPS2",94,0)
PTR(X) ; -- Return ptr to prompt OR GTX X
"RTN","ORMPS2",95,0)
 Q +$O(^ORD(101.41,"AB","OR GTX "_X,0))
"RTN","ORMPS2",96,0)
 ;
"RTN","ORMPS2",97,0)
RO ; -- Replacement order (finished)
"RTN","ORMPS2",98,0)
 N RXO,RXC,ORDIALOG,ORDG,ORPKG,ORDA,ORX,ORSIG,ORP,ZSC,NEWSTS
"RTN","ORMPS2",99,0)
 N ADMIN,IVTYPE
"RTN","ORMPS2",100,0)
 K ^TMP("ORWORD",$J)
"RTN","ORMPS2",101,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMPS2",102,0)
 I 'RXE S ORERR="Missing or invalid RXE segment" Q
"RTN","ORMPS2",103,0)
 S RXO=$$RXO^ORMPS,RXC=$$RXC^ORMPS,ORIFN=+$G(ORIFN)
"RTN","ORMPS2",104,0)
 I ORIFN'>0 S ORERR="Missing or invalid order number" Q
"RTN","ORMPS2",105,0)
 D @($S(RXC:"IV",$G(ORCAT)="I":"UDOSE",1:"OUT")_"^ORMPS1") Q:$D(ORERR)
"RTN","ORMPS2",106,0)
 ;Check keep Admin Time with order if not define in the RXE segment on
"RTN","ORMPS2",107,0)
 ;verify
"RTN","ORMPS2",108,0)
 I RXC,$$VALUE("TYPE")="I" S ORDIALOG($$PTR("ADMIN TIMES"),1)=$$VALUE("ADMIN")
"RTN","ORMPS2",109,0)
 S ORDA=$$ACTION^ORCSAVE("XX",ORIFN,ORNP,"",ORNOW,ORWHO)
"RTN","ORMPS2",110,0)
 I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMPS2",111,0)
RO1 ; -Update sts of order to active, last action to dc/edit:
"RTN","ORMPS2",112,0)
 S ORX=ORDA F  S ORX=+$O(^OR(100,ORIFN,8,ORX),-1) Q:ORX'>0  I $D(^(ORX,0)),$P(^(0),U,15)="" Q  ;ORX=last released action
"RTN","ORMPS2",113,0)
 S:ORX $P(^OR(100,ORIFN,8,ORX,0),U,15)=12 ;dc/edit
"RTN","ORMPS2",114,0)
 S $P(^OR(100,ORIFN,3),U,7)=ORDA,NEWSTS=$S('$G(ORSTS):0,ORSTS=$P(^(3),U,3):0,1:1) K ^(6)
"RTN","ORMPS2",115,0)
 D STATUS^ORCSAVE2(ORIFN,ORSTS):NEWSTS,SETALL^ORDD100(ORIFN):'NEWSTS
"RTN","ORMPS2",116,0)
 D DATES^ORCSAVE2(ORIFN,ORSTRT,ORSTOP)
"RTN","ORMPS2",117,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,ORWHO,ORNATR)
"RTN","ORMPS2",118,0)
 ; -If unsigned edit, leave XX unsigned & mark ORX as Sig Not Req'd
"RTN","ORMPS2",119,0)
 S ORSIG=$S($P($G(^OR(100,ORIFN,8,ORX,0)),U,4)'=2:1,1:0)
"RTN","ORMPS2",120,0)
 D SIGSTS^ORCSAVE2(ORIFN,ORDA):ORSIG,SIGN^ORCSAVE2(ORIFN,,,5,ORX):'ORSIG
"RTN","ORMPS2",121,0)
RO2 ; -Update responses, get/save new order text:
"RTN","ORMPS2",122,0)
 K ^OR(100,ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(ORIFN_";"_ORDA)
"RTN","ORMPS2",123,0)
 S $P(^OR(100,ORIFN,0),U,5)=ORDIALOG_";ORD(101.41,",$P(^(0),U,14)=ORPKG
"RTN","ORMPS2",124,0)
 ;I $P(^OR(100,ORIFN,0),U,11)'=ORDG D  ;update DG,xrefs
"RTN","ORMPS2",125,0)
 ;AGP Changes to handle IMO IV orders CPRS 26v43
"RTN","ORMPS2",126,0)
 I $P(^OR(100,ORIFN,0),U,11)'=ORDG,$P(^OR(100,ORIFN,0),U,11)'=$O(^ORD(100.98,"B","CLINIC ORDERS","")) D
"RTN","ORMPS2",127,0)
 . N DA,DR,DIE
"RTN","ORMPS2",128,0)
 . S DA=ORIFN,DR="23////"_ORDG,DIE="^OR(100," D ^DIE
"RTN","ORMPS2",129,0)
 S ^OR(100,ORIFN,4)=PKGIFN,$P(^(8,ORDA,0),U,14)=ORDA
"RTN","ORMPS2",130,0)
 S ORIFN=ORIFN_";"_ORDA,ORDCNTRL="SN" ;to send NA msg back
"RTN","ORMPS2",131,0)
 I $G(ORL) S ORP(1)=ORIFN_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMPS2",132,0)
 I $G(ORCAT)="O" S ZSC=$$ZSC^ORMPS3 I ZSC,$P(ZSC,"|",2)'?2.3U S ^OR(100,+ORIFN,5)=$TR($P(ZSC,"|",2,9),"|","^") ;1 or 0 instead of [N]SC in #100
"RTN","ORMPS2",133,0)
 Q
"RTN","ORMPS2",134,0)
IVLIM(IVDUR) ;
"RTN","ORMPS2",135,0)
 I $L(IVDUR) D
"RTN","ORMPS2",136,0)
 . N DURU,DURV S DURU="",DURV=0
"RTN","ORMPS2",137,0)
 . S DURU=$E(IVDUR,1),DURV=$E(IVDUR,2,$L(IVDUR))
"RTN","ORMPS2",138,0)
 . I IVDUR["dose" S DURV=$E(IVDUR,6,$L(IVDUR)),IVDUR="for a total of "_+DURV_$S(+DURV=1:" doses",+DURV>1:" doses",1:" dose") Q
"RTN","ORMPS2",139,0)
 . I (DURU="D")!(DURU="d") S IVDUR="for "_+DURV_$S(+DURV=1:" day",+DURV>1:" days",1:" day")
"RTN","ORMPS2",140,0)
 . I (DURU="H")!(DURU="h") S IVDUR="for "_+DURV_$S(+DURV=1:" hours",+DURV>1:" hours",1:" hour")
"RTN","ORMPS2",141,0)
 . I (DURU="M")!(DURU="m") S IVDUR="with total volume "_+DURV_" ml"
"RTN","ORMPS2",142,0)
 . I (DURU="L")!(DURU="l") S IVDUR="with total volume "_+DURV_" L"
"RTN","ORMPS2",143,0)
 Q IVDUR
"RTN","ORMPS2",144,0)
UNESC(STRING) ;
"RTN","ORMPS2",145,0)
 Q $$UNESC^ORHLESC(STRING)
"RTN","ORMPS2",146,0)
UNESCARR(ARR) ;
"RTN","ORMPS2",147,0)
 N I S I="" F  S I=$O(@ARR@(I)) Q:'$L(I)  D
"RTN","ORMPS2",148,0)
 .N IND S IND=$S(ARR["(":$E(ARR,0,$L(ARR)-1)_","""_I_""")",1:ARR_"("""_I_""")")
"RTN","ORMPS2",149,0)
 .N TYPE S TYPE=$D(@ARR@(I))
"RTN","ORMPS2",150,0)
 .I TYPE=11!(TYPE=10) D UNESCARR(IND)
"RTN","ORMPS2",151,0)
 .I TYPE=1!(TYPE=11) S @ARR@(I)=$$UNESC(@ARR@(I))
"RTN","ORMPS2",152,0)
 Q
"RTN","ORMPS2",153,0)
PCOMM ; -- Get Provider Comments from previous order, when changed
"RTN","ORMPS2",154,0)
 N OLD,I
"RTN","ORMPS2",155,0)
 S OLD=+$G(ORIFN) I OLD<1 S OLD=+$P(ZRX,"|",2) Q:OLD<1
"RTN","ORMPS2",156,0)
 S I=+$O(^OR(100,OLD,4.5,"ID","COMMENT",0)) Q:I<1
"RTN","ORMPS2",157,0)
 Q:'$O(^OR(100,OLD,4.5,I,2,0))  ;none
"RTN","ORMPS2",158,0)
 M ^TMP("ORWORD",$J,PC,1)=^OR(100,OLD,4.5,I,2)
"RTN","ORMPS2",159,0)
 S ORDIALOG(PC,1)="^TMP(""ORWORD"",$J,"_PC_",1)"
"RTN","ORMPS2",160,0)
 S ORDIALOG(PC,"FORMAT")="@" ;text in Sig already
"RTN","ORMPS2",161,0)
 Q
"RTN","ORORDDSC")
0^95^B13143468
"RTN","ORORDDSC",1,0)
ORORDDSC ; SLC/AGP - API for returning Order Dialogs Structure; 03/18/09
"RTN","ORORDDSC",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**301,295,280**;Dec 17, 1997;Build 85
"RTN","ORORDDSC",3,0)
 ;
"RTN","ORORDDSC",4,0)
BEG(OUTPUT,IEN,TYPE,CNT) ;
"RTN","ORORDDSC",5,0)
 N DTYPE,NODE
"RTN","ORORDDSC",6,0)
 S NODE=$G(^ORD(101.41,IEN,0))
"RTN","ORORDDSC",7,0)
 S DTYPE=$S(TYPE="Q":"Quick Order",TYPE="M":"Menu",TYPE="D":"Dialog",TYPE="O":"Order Set",TYPE="A":"Action",1:"")
"RTN","ORORDDSC",8,0)
 S CNT=CNT+1 S @OUTPUT@(CNT)=$$REPEAT^XLFSTR("-",79)
"RTN","ORORDDSC",9,0)
 S CNT=CNT+1 S @OUTPUT@(CNT)=$J(" ",24)_"Name: "_$P(NODE,U)
"RTN","ORORDDSC",10,0)
 S CNT=CNT+1 S @OUTPUT@(CNT)=$J(" ",24)_"Type: "_DTYPE
"RTN","ORORDDSC",11,0)
 I $P(NODE,U,2)'="" S CNT=CNT+1 S @OUTPUT@(CNT)=$J(" ",16)_"Display Text: "_$P(NODE,U,2)
"RTN","ORORDDSC",12,0)
 I TYPE="Q" D  Q
"RTN","ORORDDSC",13,0)
 .S CNT=CNT+1 S @OUTPUT@(CNT)=$J(" ",15)_"Display Group: "_$$GETDISGP($P(NODE,U,5))
"RTN","ORORDDSC",14,0)
 .S CNT=CNT+1 S @OUTPUT@(CNT)=$J(" ",21)_"Package: "_$$NMSP($P(NODE,U,7))
"RTN","ORORDDSC",15,0)
 Q
"RTN","ORORDDSC",16,0)
 ;
"RTN","ORORDDSC",17,0)
DIALOG(OUTPUT,IEN,TYPE,CNT) ;
"RTN","ORORDDSC",18,0)
 D BEG(.OUTPUT,IEN,TYPE,.CNT)
"RTN","ORORDDSC",19,0)
 S CNT=CNT+1,@OUTPUT@(CNT)=$$REPEAT^XLFSTR("-",79)
"RTN","ORORDDSC",20,0)
 Q
"RTN","ORORDDSC",21,0)
 ;
"RTN","ORORDDSC",22,0)
EN(IEN,SUB) ;
"RTN","ORORDDSC",23,0)
 I $D(^TMP($J,SUB,IEN))>0 Q
"RTN","ORORDDSC",24,0)
 N CNT,OUTPUT
"RTN","ORORDDSC",25,0)
 S CNT=0
"RTN","ORORDDSC",26,0)
 S OUTPUT=$NA(^TMP($J,SUB,IEN))
"RTN","ORORDDSC",27,0)
 D DIRECT(.OUTPUT,IEN,.CNT)
"RTN","ORORDDSC",28,0)
 Q
"RTN","ORORDDSC",29,0)
 ;
"RTN","ORORDDSC",30,0)
DIRECT(OUTPUT,IEN,CNT) ;
"RTN","ORORDDSC",31,0)
 N ORDIALOG,SAFEIEN,TYPE
"RTN","ORORDDSC",32,0)
 S TYPE=$P($G(^ORD(101.41,IEN,0)),U,4)
"RTN","ORORDDSC",33,0)
 I TYPE="Q" D  Q
"RTN","ORORDDSC",34,0)
 .;done to prevent a problem with TIU Active Medication Objects
"RTN","ORORDDSC",35,0)
 .;killing the variable IEN
"RTN","ORORDDSC",36,0)
 .S ORTYPE="Z"
"RTN","ORORDDSC",37,0)
 .S SAFEIEN=IEN
"RTN","ORORDDSC",38,0)
 .D GETQDLG^ORCD(IEN)
"RTN","ORORDDSC",39,0)
 .D QO(.ORDIALOG,SAFEIEN,.OUTPUT,.CNT)
"RTN","ORORDDSC",40,0)
 I TYPE="M"!(TYPE="O") D MENU(.OUTPUT,IEN,TYPE,.CNT) Q
"RTN","ORORDDSC",41,0)
 I TYPE="D"!(TYPE="A") D DIALOG(.OUTPUT,IEN,TYPE,.CNT) Q
"RTN","ORORDDSC",42,0)
 Q
"RTN","ORORDDSC",43,0)
 ;
"RTN","ORORDDSC",44,0)
GETDISGP(IEN) ;
"RTN","ORORDDSC",45,0)
 N RESULT
"RTN","ORORDDSC",46,0)
 S RESULT=$P($G(^ORD(100.98,IEN,0)),U)
"RTN","ORORDDSC",47,0)
 Q RESULT
"RTN","ORORDDSC",48,0)
 ;
"RTN","ORORDDSC",49,0)
MENU(OUTPUT,IEN,TYPE,CNT) ;
"RTN","ORORDDSC",50,0)
 D BEG(.OUTPUT,IEN,TYPE,.CNT)
"RTN","ORORDDSC",51,0)
 N NODE,NUM,SEQ,ITEM
"RTN","ORORDDSC",52,0)
 S SEQ="" F  S SEQ=$O(^ORD(101.41,IEN,10,"B",SEQ)) Q:SEQ=""  D
"RTN","ORORDDSC",53,0)
 .S NUM=$O(^ORD(101.41,IEN,10,"B",SEQ,"")) Q:NUM=""
"RTN","ORORDDSC",54,0)
 .S ITEM=+$P($G(^ORD(101.41,IEN,10,NUM,0)),U,2) I ITEM'>0 Q
"RTN","ORORDDSC",55,0)
 .S CNT=CNT+1,@OUTPUT@(CNT)=$J(" ",25)_"SEQ: "_SEQ
"RTN","ORORDDSC",56,0)
 .D DIRECT(.OUTPUT,ITEM,.CNT)
"RTN","ORORDDSC",57,0)
 S CNT=CNT+1,@OUTPUT@(CNT)=$$REPEAT^XLFSTR("-",79)
"RTN","ORORDDSC",58,0)
 Q
"RTN","ORORDDSC",59,0)
 ;
"RTN","ORORDDSC",60,0)
NMSP(PKG) ;
"RTN","ORORDDSC",61,0)
 Q $$GET1^DIQ(9.4,+PKG_",",.01)
"RTN","ORORDDSC",62,0)
 ;
"RTN","ORORDDSC",63,0)
QO(ORDIALOG,IEN,OUTPUT,CNT) ; -- Display new order on screen
"RTN","ORORDDSC",64,0)
 N SEQ,DA,X,PROMPT,MULT,I,TITLE,LEN
"RTN","ORORDDSC",65,0)
 D BEG(.OUTPUT,IEN,"Q",.CNT)
"RTN","ORORDDSC",66,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:SEQ'>0  D
"RTN","ORORDDSC",67,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORORDDSC",68,0)
 .. S X=$G(^ORD(101.41,+ORDIALOG,10,DA,0)) Q:$P(X,U,11)  ;child
"RTN","ORORDDSC",69,0)
 .. S PROMPT=$P(X,U,2),MULT=$P(X,U,7) Q:$P(X,U,9)["*"  ;hide
"RTN","ORORDDSC",70,0)
 .. Q:'PROMPT  S I=$O(ORDIALOG(PROMPT,0)) Q:'I  ; no values
"RTN","ORORDDSC",71,0)
 .. S TITLE=$S($L($G(ORDIALOG(PROMPT,"TTL"))):ORDIALOG(PROMPT,"TTL"),1:ORDIALOG(PROMPT,"A"))
"RTN","ORORDDSC",72,0)
 .. S CNT=CNT+1,@OUTPUT@(CNT)=$J(TITLE,30)
"RTN","ORORDDSC",73,0)
 .. I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORORDDSC",74,0)
 ... S @OUTPUT@(CNT)=@OUTPUT@(CNT)_$E($G(^TMP("ORWORD",$J,PROMPT,I,1,0)),1,40)_$S($L($G(^(0)))>40:" ...",$O(^TMP("ORWORD",$J,PROMPT,I,1)):" ...",1:"") Q
"RTN","ORORDDSC",75,0)
 .. I $E(ORDIALOG(PROMPT,0))'="W" D
"RTN","ORORDDSC",76,0)
 ... S @OUTPUT@(CNT)=@OUTPUT@(CNT)_$$ITEM^ORCDLG(PROMPT,I) Q:'MULT  Q:'$O(ORDIALOG(PROMPT,I))  ; done
"RTN","ORORDDSC",77,0)
 .. F  S I=$O(ORDIALOG(PROMPT,I)) Q:I'>0  D
"RTN","ORORDDSC",78,0)
 ... S CNT=CNT+1,@OUTPUT@(CNT)=$J(" ",30)_$$ITEM^ORCDLG(PROMPT,I)
"RTN","ORORDDSC",79,0)
 S CNT=CNT+1,@OUTPUT@(CNT)=$$REPEAT^XLFSTR("-",79)
"RTN","ORORDDSC",80,0)
 Q
"RTN","ORORDDSC",81,0)
 ;
"RTN","ORQ2")
0^69^B52016905
"RTN","ORQ2",1,0)
ORQ2 ; SLC/MKB/GSS - Detailed Order Report ;11/16/09  06:07
"RTN","ORQ2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**12,56,75,94,141,213,195,243,282,293,280**;Dec 17, 1997;Build 85
"RTN","ORQ2",3,0)
 ;
"RTN","ORQ2",4,0)
 ;
"RTN","ORQ2",5,0)
 ;Reference to ^DIC(45.7 supported by IA #519
"RTN","ORQ2",6,0)
 ;Reference to OERR^VADPT supported by IA #4325
"RTN","ORQ2",7,0)
 ;
"RTN","ORQ2",8,0)
DETAIL(ORY,ORIFN) ; -- Returns details of order ORIFN in ORY(#)
"RTN","ORQ2",9,0)
 N X,X2,I,CNT,ORDIALOG,OR0,OR3,OR6,SEQ,ITEM,PRMT,MULT,FIRST,TITLE,INST,DIWL,DIWR,DIWF,ACTION,VAIN,ORIGVIEW,ORNMSP,ORYT
"RTN","ORQ2",10,0)
 S CNT=0,ORIFN=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6))
"RTN","ORQ2",11,0)
 S ORNMSP=$$NMSP^ORCD($P(OR0,U,14))
"RTN","ORQ2",12,0)
 K @ORY,ORYT S ORIGVIEW=1 D TEXT^ORQ12(.ORYT,+ORIFN_";"_+$P(OR3,U,7),80) ;CurrTx
"RTN","ORQ2",13,0)
 M @ORY=ORYT ;Move text to global
"RTN","ORQ2",14,0)
 S I=0 F CNT=1:1 S I=$O(ORYT(I)) Q:I'>0  D:$D(IORVON) SETVIDEO(I,1,$L(ORYT(I)),IORVON,IORVOFF)
"RTN","ORQ2",15,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",16,0)
D1 I $O(^OR(100,+ORIFN,2,0)) D
"RTN","ORQ2",17,0)
 . S CNT=CNT+1,@ORY@(CNT)="Sub Orders:"
"RTN","ORQ2",18,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,11,IOUON,IOUOFF)
"RTN","ORQ2",19,0)
 . N IFN S IFN=0
"RTN","ORQ2",20,0)
 . F  S IFN=+$O(^OR(100,+ORIFN,2,IFN)) Q:IFN<1  I $D(^OR(100,IFN,0)) D SUB(IFN)
"RTN","ORQ2",21,0)
 . S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",22,0)
 I $P(OR3,U,9),$D(^OR(100,+$P(OR3,U,9),0)) D
"RTN","ORQ2",23,0)
 . S CNT=CNT+1,@ORY@(CNT)="Parent Order:"
"RTN","ORQ2",24,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,12,IOUON,IOUOFF)
"RTN","ORQ2",25,0)
 . D SUB(+$P(OR3,U,9))
"RTN","ORQ2",26,0)
 . S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",27,0)
 I $P(OR3,U,11)=1,$P(OR3,U,5) D  ;Changed - show previous order
"RTN","ORQ2",28,0)
 . S CNT=CNT+1,@ORY@(CNT)="Previous Order:"
"RTN","ORQ2",29,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,15,IOUON,IOUOFF) ;prev order original text
"RTN","ORQ2",30,0)
 . N ORZ,I,ORIGVIEW S ORIGVIEW=2 D TEXT^ORQ12(.ORZ,+$P(OR3,U,5),55)
"RTN","ORQ2",31,0)
 . S CNT=CNT+1,@ORY@(CNT)="     Order Text:        "_$G(ORZ(1))
"RTN","ORQ2",32,0)
 . S I=1 F  S I=$O(ORZ(I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$$REPEAT^XLFSTR(" ",24)_$G(ORZ(I))
"RTN","ORQ2",33,0)
D2 S CNT=CNT+1,@ORY@(CNT)="Activity:"
"RTN","ORQ2",34,0)
 D:$D(IOUON) SETVIDEO(CNT,1,9,IOUON,IOUOFF)
"RTN","ORQ2",35,0)
 S DIWL=1,DIWR=64,DIWF="C64",ORI=0 K ^UTILITY($J,"W")
"RTN","ORQ2",36,0)
 F  S ORI=$O(^OR(100,ORIFN,8,ORI)) Q:ORI'>0  S ACTION=$G(^(ORI,0)) D ACT^ORQ20
"RTN","ORQ2",37,0)
 I "^1^12^13^"[(U_$P(OR3,U,3)_U),$L(OR6),$P(ACTION,U,2)'="DC" D DC^ORQ20
"RTN","ORQ2",38,0)
 I $P(OR3,U,3)=2,$P(OR6,U,6) S CNT=CNT+1,@ORY@(CNT)=$$DATE^ORQ20($P(OR6,U,6))_"  Completed"_$S($P(OR6,U,7):" by "_$$USER^ORQ20($P(OR6,U,7)),1:"")
"RTN","ORQ2",39,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",40,0)
D3 S CNT=CNT+1,@ORY@(CNT)="Current Data:"
"RTN","ORQ2",41,0)
 D:$D(IOUON) SETVIDEO(CNT,1,13,IOUON,IOUOFF)
"RTN","ORQ2",42,0)
 D VA I $G(VAIN(2)) S CNT=CNT+1,@ORY@(CNT)="Current Primary Provider:     "_$P(VAIN(2),"^",2)
"RTN","ORQ2",43,0)
 I $G(VAIN(11)) S CNT=CNT+1,@ORY@(CNT)="Current Attending Physician:  "_$P(VAIN(11),"^",2)
"RTN","ORQ2",44,0)
 S CNT=CNT+1,@ORY@(CNT)="Treating Specialty:           "_$P($G(^DIC(45.7,+$P(OR0,U,13),0)),U)
"RTN","ORQ2",45,0)
 S CNT=CNT+1,@ORY@(CNT)="Ordering Location:            "_$P($G(^SC(+$P(OR0,U,10),0)),U)
"RTN","ORQ2",46,0)
 S CNT=CNT+1,@ORY@(CNT)="Start Date/Time:              "_$S($P(OR0,U,8):$$DATE^ORQ20($P(OR0,U,8)),1:"")
"RTN","ORQ2",47,0)
 I $P(OR3,U,5),$P(OR3,U,11)=2 S X=$$ORIG(ORIFN),@ORY@(CNT)=@ORY@(CNT)_" (originally "_$$DATE^ORQ20(X)_")"
"RTN","ORQ2",48,0)
 S CNT=CNT+1,@ORY@(CNT)="Stop Date/Time:               "_$S($P(OR0,U,9):$$DATE^ORQ20($P(OR0,U,9)),1:"")
"RTN","ORQ2",49,0)
 I $P(OR3,U,3)=1,$P(OR6,U,6) S @ORY@(CNT)=@ORY@(CNT)_"  (expired "_$$DATE^ORQ20($P(OR6,U,6))_")"
"RTN","ORQ2",50,0)
 S CNT=CNT+1,@ORY@(CNT)="Current Status:               "_$S($D(^ORD(100.01,+$P(OR3,U,3),0)):$P(^(0),"^"),1:"-")
"RTN","ORQ2",51,0)
 I $$GET^XPAR("ALL","ORPF SHOW STATUS DESCRIPTION",1,"I"),$P(OR3,U,3),$D(^ORD(100.01,$P(OR3,U,3),0)) N J S J=0 F  S J=$O(^ORD(100.01,$P(OR3,U,3),1,J)) Q:J<1  S CNT=CNT+1,@ORY@(CNT)="  "_^(J,0)
"RTN","ORQ2",52,0)
 S CNT=CNT+1,@ORY@(CNT)="Order #"_ORIFN
"RTN","ORQ2",53,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",54,0)
D4 S CNT=CNT+1,@ORY@(CNT)="Order:" D:$D(IOUON) SETVIDEO(CNT,1,6,IOUON,IOUOFF)
"RTN","ORQ2",55,0)
 I '$O(^OR(100,ORIFN,4.5,0)),ORNMSP="RA" D RAD^ORQ21("") Q
"RTN","ORQ2",56,0)
 S ORDIALOG=$P(OR0,U,5) Q:$P(ORDIALOG,";",2)="ORD(101,"  ; 2.5 order
"RTN","ORQ2",57,0)
 D GETDLG^ORCD(+ORDIALOG),GETORDER^ORCD(ORIFN)
"RTN","ORQ2",58,0)
 S DIWL=1,DIWR=50,DIWF="C50"
"RTN","ORQ2",59,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:SEQ'>0  S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORQ2",60,0)
 . S ITEM=$G(^ORD(101.41,+ORDIALOG,10,DA,0)) Q:$P(ITEM,U,11)  ; child
"RTN","ORQ2",61,0)
 . S PRMT=$P(ITEM,U,2),MULT=$P(ITEM,U,7) Q:$P(ITEM,U,9)["*"  ;hide
"RTN","ORQ2",62,0)
 . S FIRST=$O(ORDIALOG(PRMT,0)) Q:'FIRST  ; no values
"RTN","ORQ2",63,0)
 . S TITLE=$S(MULT&$L($G(ORDIALOG(PRMT,"TTL"))):ORDIALOG(PRMT,"TTL"),1:ORDIALOG(PRMT,"A"))
"RTN","ORQ2",64,0)
 . S TITLE=TITLE_$$REPEAT^XLFSTR(" ",30-$L(TITLE))
"RTN","ORQ2",65,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PRMT,INST)) Q:INST'>0  D
"RTN","ORQ2",66,0)
 . . I $E(ORDIALOG(PRMT,0))="W" D WP Q
"RTN","ORQ2",67,0)
 . . K ^UTILITY($J,"W") S X=$$EXT^ORCD(PRMT,INST) I TITLE["Infusion Rate"&(X'="")&(X'["ml/hr") S TITLE="Infuse Over Time:",TITLE=TITLE_$$REPEAT^XLFSTR(" ",30-$L(TITLE))
"RTN","ORQ2",68,0)
 . . D ^DIWP
"RTN","ORQ2",69,0)
 . . D:$D(^ORD(101.41,+ORDIALOG,10,"DAD",PRMT)) CHILDREN(PRMT)
"RTN","ORQ2",70,0)
 . . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=$S((INST=FIRST)&(I=1):TITLE,1:$$REPEAT^XLFSTR(" ",30))_^(I,0)
"RTN","ORQ2",71,0)
 I ORNMSP="GMRC",$G(^OR(100,ORIFN,4)) S CNT=CNT+1,@ORY@(CNT)="Consult No.:                  "_+^(4)
"RTN","ORQ2",72,0)
 S CNT=CNT+1,@ORY@(CNT)="   " ;blank
"RTN","ORQ2",73,0)
 D RAD^ORQ21(1):ORNMSP="RA",MED^ORQ21:ORNMSP="PS" ;add'l data
"RTN","ORQ2",74,0)
 D BA^ORQ21 ;call for CIDC data
"RTN","ORQ2",75,0)
D5 K ^TMP($J,"OCDATA") I $$OCAPI^ORCHECK(+ORIFN,"OCDATA") D
"RTN","ORQ2",76,0)
 . N CK,OK,X0,X,CDL,I S CNT=CNT+1,@ORY@(CNT)="Order Checks:"
"RTN","ORQ2",77,0)
 . D:$D(IOUON) SETVIDEO(CNT,1,13,IOUON,IOUOFF)
"RTN","ORQ2",78,0)
 . S CK=0 F  S CK=$O(^TMP($J,"OCDATA",CK)) Q:CK'>0  D
"RTN","ORQ2",79,0)
 .. S X0=^TMP($J,"OCDATA",CK,"OC NUMBER")_U_^TMP($J,"OCDATA",CK,"OC LEVEL")_U_U_^TMP($J,"OCDATA",CK,"OR REASON")_U_^TMP($J,"OCDATA",CK,"OR PROVIDER")_U_^TMP($J,"OCDATA",CK,"OR DT")
"RTN","ORQ2",80,0)
 .. S X=^TMP($J,"OCDATA",CK,"OC TEXT",1,0)
"RTN","ORQ2",81,0)
 .. S CDL=$$CDL($P(X0,U,2)) I $P(X0,U,6),'$D(OK) S OK=$P(X0,U,4,6)
"RTN","ORQ2",82,0)
 .. I $L(X)'>68 S CNT=CNT+1,@ORY@(CNT)=CDL_X D XTRA Q
"RTN","ORQ2",83,0)
 .. S DIWL=1,DIWR=68,DIWF="C68" K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ2",84,0)
 .. S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=CDL_^(I,0),CDL="            "
"RTN","ORQ2",85,0)
 .. D XTRA
"RTN","ORQ2",86,0)
 . K ^TMP($J,"OCDATA")
"RTN","ORQ2",87,0)
 . Q:'$L($G(OK))  S CNT=CNT+1,@ORY@(CNT)="Override:   "_$S($P(OK,U,2):$$USER^ORQ20($P(OK,U,2))_" on ",1:"")_$$DATE^ORQ20($P(OK,U,3))
"RTN","ORQ2",88,0)
 . I $L($P(OK,U))'>68 S CNT=CNT+1,@ORY@(CNT)="            "_$P(OK,U) Q
"RTN","ORQ2",89,0)
 . S DIWL=1,DIWR=68,DIWF="C68",X=$P(OK,U) K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ2",90,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)="            "_^(I,0)
"RTN","ORQ2",91,0)
 K ^TMP("ORWORD",$J),^UTILITY($J,"W")
"RTN","ORQ2",92,0)
 Q
"RTN","ORQ2",93,0)
 ;
"RTN","ORQ2",94,0)
XTRA ;
"RTN","ORQ2",95,0)
 I $D(^TMP($J,"OCDATA",CK,"OC TEXT",2,0)) N ORXT S ORXT=1 F  S ORXT=$O(^TMP($J,"OCDATA",CK,"OC TEXT",ORXT)) Q:'ORXT  D
"RTN","ORQ2",96,0)
 . S X=^TMP($J,"OCDATA",CK,"OC TEXT",ORXT,0),CDL="              "
"RTN","ORQ2",97,0)
 . I $L(X)'>68 S CNT=CNT+1,@ORY@(CNT)=CDL_X Q
"RTN","ORQ2",98,0)
 . S DIWL=1,DIWR=68,DIWF="C68" K ^UTILITY($J,"W") D ^DIWP
"RTN","ORQ2",99,0)
 . S I=0 F  S I=$O(^UTILITY($J,"W",DIWL,I)) Q:I'>0  S CNT=CNT+1,@ORY@(CNT)=CDL_^(I,0),CDL="              "
"RTN","ORQ2",100,0)
 I $D(^TMP($J,"OCDATA",CK,"OC TEXT",2,0)) S X="",CNT=CNT+1,@ORY@(CNT)="              "
"RTN","ORQ2",101,0)
 Q
"RTN","ORQ2",102,0)
 ;
"RTN","ORQ2",103,0)
SUB(IFN) ; -- add suborder or parent
"RTN","ORQ2",104,0)
 N ORCY,STS,STRT,IG,A,STOP,SCHED D TEXT^ORQ12(.ORCY,IFN,58)
"RTN","ORQ2",105,0)
 S STS=$G(^ORD(100.01,+$P($G(^OR(100,IFN,3)),U,3),.1))
"RTN","ORQ2",106,0)
 S A=^OR(100,IFN,0),STRT=$P(A,U,8),STOP=$P(A,U,9)
"RTN","ORQ2",107,0)
 S SCHED=$$VALUE^ORX8(IFN,"SCHEDULE",1,"E")
"RTN","ORQ2",108,0)
 S:STRT'="" STRT=$$DATE^ORQ20(STRT) I ORNMSP="LR" S:STOP]"" STOP=$$DATE^ORQ20(STOP)
"RTN","ORQ2",109,0)
 S IG=0 F  S IG=$O(ORCY(IG)) Q:IG<1  S CNT=CNT+1,@ORY@(CNT)=$J(STS,4)_" "_ORCY(IG)_" "_STRT,(STS,STRT)=" "
"RTN","ORQ2",110,0)
 I ORNMSP="LR",STOP]"" S CNT=CNT+1,@ORY@(CNT)=$J("How often: ",16)_SCHED_"   Stops:  "_STOP
"RTN","ORQ2",111,0)
 Q
"RTN","ORQ2",112,0)
 ;
"RTN","ORQ2",113,0)
WP ; -- add word-processing
"RTN","ORQ2",114,0)
 N WP,ORI,X M WP=@ORDIALOG(PRMT,INST)
"RTN","ORQ2",115,0)
 S CNT=CNT+1,@ORY@(CNT)=TITLE
"RTN","ORQ2",116,0)
 S ORI=0 F  S ORI=$O(WP(ORI)) Q:ORI'>0  S X=WP(ORI,0) S:X'="" CNT=CNT+1,@ORY@(CNT)="  "_X
"RTN","ORQ2",117,0)
 Q
"RTN","ORQ2",118,0)
 ;
"RTN","ORQ2",119,0)
CHILDREN(PARENT) ; -- add children
"RTN","ORQ2",120,0)
 N SEQ,DA,ITM,PRMT,TYPE,X
"RTN","ORQ2",121,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PARENT,SEQ)) Q:SEQ'>0  S DA=$O(^(SEQ,0)) D
"RTN","ORQ2",122,0)
 . S ITM=$G(^ORD(101.41,+ORDIALOG,10,DA,0)),PRMT=$P(ITM,U,2)
"RTN","ORQ2",123,0)
 . Q:$G(ORDIALOG(PRMT,INST))=""  Q:$P(ITM,U,9)["*"  ;no value or hide
"RTN","ORQ2",124,0)
 . S TYPE=$E(ORDIALOG(PRMT,0)) D:TYPE="W" WP
"RTN","ORQ2",125,0)
 . I TYPE'="W" D
"RTN","ORQ2",126,0)
 . . S X=$$EXT^ORCD(PRMT,INST)
"RTN","ORQ2",127,0)
 . . I $L(X,"|")=2 S X=$$REPLACE^ORHLESC(X,"|","||")
"RTN","ORQ2",128,0)
 . . D ^DIWP
"RTN","ORQ2",129,0)
 Q
"RTN","ORQ2",130,0)
 ;
"RTN","ORQ2",131,0)
SETVIDEO(LINE,COL,WIDTH,ON,OFF) ; -- set video attributes
"RTN","ORQ2",132,0)
 S ORY("VIDEO",LINE,COL,WIDTH)=ON
"RTN","ORQ2",133,0)
 S ORY("VIDEO",LINE,COL+WIDTH,0)=OFF
"RTN","ORQ2",134,0)
 Q
"RTN","ORQ2",135,0)
 ;
"RTN","ORQ2",136,0)
VA ; -- Call VADPT
"RTN","ORQ2",137,0)
 N ORY,DFN,Y S DFN=+$P(OR0,"^",2) D OERR^VADPT
"RTN","ORQ2",138,0)
 Q
"RTN","ORQ2",139,0)
 ;
"RTN","ORQ2",140,0)
CDL(X) ; -- Returns Clinical Danger Level X
"RTN","ORQ2",141,0)
 N Y S Y=$S(X=1:"HIGH:",X=2:"MODERATE:",X=3:"LOW:",1:"NONE:")
"RTN","ORQ2",142,0)
 S Y=$E(Y_"        ",1,12)
"RTN","ORQ2",143,0)
 Q Y
"RTN","ORQ2",144,0)
 ;
"RTN","ORQ2",145,0)
ORIG(IFN) ; -- Return original start date of [renewal] order
"RTN","ORQ2",146,0)
 N I,Y,X3,DONE
"RTN","ORQ2",147,0)
 S I=IFN,Y=$P($G(^OR(100,IFN,0)),U,8),DONE=0
"RTN","ORQ2",148,0)
 F  S X3=$G(^OR(100,I,3)) D  Q:DONE
"RTN","ORQ2",149,0)
 . I $P(X3,U,11)=2,$P(X3,U,5) S I=$P(X3,U,5) Q  ;loop
"RTN","ORQ2",150,0)
 . S Y=$P($G(^OR(100,I,0)),U,8),DONE=1
"RTN","ORQ2",151,0)
 Q Y
"RTN","ORQQCN2")
0^45^B33486661
"RTN","ORQQCN2",1,0)
ORQQCN2 ; slc/REV - Functions for GUI consult actions ;08/21/09  08:21
"RTN","ORQQCN2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,149,215,242,280**;Dec 17, 1997;Build 85
"RTN","ORQQCN2",3,0)
 ;
"RTN","ORQQCN2",4,0)
 ; DBIA 2426  SERV1^GMRCASV  ^TMP("GMRCSLIST,$J)
"RTN","ORQQCN2",5,0)
 ;
"RTN","ORQQCN2",6,0)
CMT(ORERR,ORIEN,ORCOM,ORALRT,ORALTO,ORDATE) ;Add comment to existing consult without changing status
"RTN","ORQQCN2",7,0)
 ;ORIEN - IEN of consult from File 123
"RTN","ORQQCN2",8,0)
 ;ORERR - return array for results/errors
"RTN","ORQQCN2",9,0)
 ;ORCOM is the comments array to be added
"RTN","ORQQCN2",10,0)
 ;     passed in as ORCOM(1)="Xxxx Xxxxx...",ORCOM(2)="Xxxx Xx Xxx...", ORCOM(3)="Xxxxx Xxx Xx...", etc.
"RTN","ORQQCN2",11,0)
 ;ORALRT - should alerts be sent to anyone?
"RTN","ORQQCN2",12,0)
 ;ORALTO - array of alert recipient IENs
"RTN","ORQQCN2",13,0)
 N ORAD,ORDUZ,ORNP,X
"RTN","ORQQCN2",14,0)
 S ORERR=0,ORAD=$S($D(ORDATE):ORDATE,1:$$NOW^XLFDT),ORNP=""
"RTN","ORQQCN2",15,0)
 I '$D(ORCOM) S ORERR="1^Comments required - no action taken" Q
"RTN","ORQQCN2",16,0)
 I '$D(^GMR(123,ORIEN)) S ORERR="1^No such consult" Q
"RTN","ORQQCN2",17,0)
 I $G(ORALRT)=1 D
"RTN","ORQQCN2",18,0)
 .F I=1:1  S X=$P(ORALTO,";",I) Q:X=""  S ORDUZ(X)=""
"RTN","ORQQCN2",19,0)
 D CMT^GMRCGUIB(ORIEN,.ORCOM,.ORDUZ,ORAD,DUZ)
"RTN","ORQQCN2",20,0)
 Q
"RTN","ORQQCN2",21,0)
 ;
"RTN","ORQQCN2",22,0)
SCH(ORERR,ORIEN,ORNP,ORDATE,ORALRT,ORALTO,ORCOM) ;Schedule consult and change status
"RTN","ORQQCN2",23,0)
 ;ORERR - return array for results/errors
"RTN","ORQQCN2",24,0)
 ;ORIEN - IEN of consult from File 123
"RTN","ORQQCN2",25,0)
 ;ORNP - Provider who Scheduled consult
"RTN","ORQQCN2",26,0)
 ;ORDATE - Date/Time Consult was scheduled.
"RTN","ORQQCN2",27,0)
 ;ORALRT - should alerts be sent to anyone?
"RTN","ORQQCN2",28,0)
 ;ORALTO - array of alert recipient IENs
"RTN","ORQQCN2",29,0)
 ;ORCOM is the comments array to be added
"RTN","ORQQCN2",30,0)
 ;     passed in as ORCOM(1)="Xxxx Xxxxx...",ORCOM(2)="Xxxx Xx Xxx...", ORCOM(3)="Xxxxx Xxx Xx...", etc.
"RTN","ORQQCN2",31,0)
 N ORAD,ORDUZ,X
"RTN","ORQQCN2",32,0)
 S ORERR=0,ORAD=$S($D(ORDATE):ORDATE,1:$$NOW^XLFDT)
"RTN","ORQQCN2",33,0)
 S:+$G(ORNP)=0 ORNP=DUZ
"RTN","ORQQCN2",34,0)
 I '$D(^GMR(123,ORIEN)) S ORERR="1^No such consult" Q
"RTN","ORQQCN2",35,0)
 I $G(ORALRT)=1 D
"RTN","ORQQCN2",36,0)
 .F I=1:1  S X=$P(ORALTO,";",I) Q:X=""  S ORDUZ(X)=""
"RTN","ORQQCN2",37,0)
 S ORERR=$$SCH^GMRCGUIB(ORIEN,ORNP,ORAD,.ORDUZ,.ORCOM)
"RTN","ORQQCN2",38,0)
 Q
"RTN","ORQQCN2",39,0)
 ;
"RTN","ORQQCN2",40,0)
SVCTREE(Y,PURPOSE) ;Returns list of consult service for current
"RTN","ORQQCN2",41,0)
 ;  context, screening for inactive, groupers, and tracking
"RTN","ORQQCN2",42,0)
 ; PURPOSE: Display=0, Forward=1, Order=1
"RTN","ORQQCN2",43,0)
 N GMRCTO,GMRCDG,GMRCSVC,GMRCOI
"RTN","ORQQCN2",44,0)
  S GMRCTO=PURPOSE,GMRCDG=1
"RTN","ORQQCN2",45,0)
 D SERV1^GMRCASV
"RTN","ORQQCN2",46,0)
 S GMRCSVC=0
"RTN","ORQQCN2",47,0)
 I '$D(^TMP("GMRCSLIST",$J)) S Y(1)="-1^No services found" Q  ;DBIA 2426
"RTN","ORQQCN2",48,0)
 F I=1:1  S GMRCSVC=$O(^TMP("GMRCSLIST",$J,GMRCSVC)) Q:+GMRCSVC=0  D
"RTN","ORQQCN2",49,0)
 . S Y(I)=^TMP("GMRCSLIST",$J,GMRCSVC)
"RTN","ORQQCN2",50,0)
 . S GMRCOI=$O(^ORD(101.43,"ID",$P(Y(I),U,1)_";99CON",0))
"RTN","ORQQCN2",51,0)
 . S Y(I)=Y(I)_U_GMRCOI
"RTN","ORQQCN2",52,0)
 Q
"RTN","ORQQCN2",53,0)
 ;
"RTN","ORQQCN2",54,0)
SVCSYN(ORROOT,ORSTRT,ORWHY,ORSYN,ORIEN) ;;return CSLT services for GUI
"RTN","ORQQCN2",55,0)
 ;Input:
"RTN","ORQQCN2",56,0)
 ; ORROOT - passed in as the array to return results in
"RTN","ORQQCN2",57,0)
 ; ORSTRT- service to begin building from
"RTN","ORQQCN2",58,0)
 ; ORWHY - 0 for display, 1 for forwarding or ordering
"RTN","ORQQCN2",59,0)
 ; ORSYN - Boolean: 1=return synonyms, 0=do not
"RTN","ORQQCN2",60,0)
 ; ORIEN - Consult IEN (file 123) (OPTIONAL)
"RTN","ORQQCN2",61,0)
 ;Output: Array formatted as follows-
"RTN","ORQQCN2",62,0)
 ;      svc ien^svc name or syn^parent^has children^svc usage^orderable item
"RTN","ORQQCN2",63,0)
 N ORSVC,I,X,OI
"RTN","ORQQCN2",64,0)
 S:+$G(ORSTRT)=0 ORSTRT=1
"RTN","ORQQCN2",65,0)
 S:$G(ORWHY)="" ORWHY=1
"RTN","ORQQCN2",66,0)
 S:$G(ORSYN)="" ORSYN=1
"RTN","ORQQCN2",67,0)
 S ORROOT=$NA(^TMP("ORCSLT",$J))
"RTN","ORQQCN2",68,0)
 D GUI^GMRCASV1(ORROOT,ORSTRT,ORWHY,ORSYN,$G(ORIEN))
"RTN","ORQQCN2",69,0)
 S ORSVC=0
"RTN","ORQQCN2",70,0)
 I '$D(@ORROOT) S @ORROOT@(1)="-1^No services found" Q
"RTN","ORQQCN2",71,0)
 F I=1:1  S ORSVC=$O(@ORROOT@(ORSVC)) Q:+ORSVC=0  D
"RTN","ORQQCN2",72,0)
 . S X=@ORROOT@(ORSVC)
"RTN","ORQQCN2",73,0)
 . S OI=$O(^ORD(101.43,"ID",$P(X,U,1)_";99CON",0))
"RTN","ORQQCN2",74,0)
 . I +OI>0 S @ORROOT@(ORSVC)=X_U_OI
"RTN","ORQQCN2",75,0)
 Q
"RTN","ORQQCN2",76,0)
STATUS(Y) ; Returns a list of statuses currently in use
"RTN","ORQQCN2",77,0)
 ;
"RTN","ORQQCN2",78,0)
 N GMRCORST
"RTN","ORQQCN2",79,0)
 S GMRCORST=0,Y(999)="999^OTHER^"
"RTN","ORQQCN2",80,0)
 F  S GMRCORST=$O(^ORD(100.01,GMRCORST)) Q:'+GMRCORST  D
"RTN","ORQQCN2",81,0)
 . I '$D(^GMR(123.1,"AC",GMRCORST)) S Y(999)=Y(999)_GMRCORST_"," Q
"RTN","ORQQCN2",82,0)
 . Q:$$SCREEN^XTID(100.01,,GMRCORST_",")  ;inactive VUID
"RTN","ORQQCN2",83,0)
 . S Y(GMRCORST)=GMRCORST_U_$P(^ORD(100.01,GMRCORST,0),U,1)
"RTN","ORQQCN2",84,0)
 Q
"RTN","ORQQCN2",85,0)
 ;
"RTN","ORQQCN2",86,0)
MEDRSLT(ORY,GMRCO) ;Returns Medicine results plus TIU results
"RTN","ORQQCN2",87,0)
 S ORY=$NA(^TMP("ORRSLT",$J))
"RTN","ORQQCN2",88,0)
 D RT^GMRCGUIA(GMRCO,ORY)
"RTN","ORQQCN2",89,0)
 Q
"RTN","ORQQCN2",90,0)
 ;
"RTN","ORQQCN2",91,0)
SHOW513(ORY,GMRCO)  ;CONSULTS SF513 DISPLAY IN GUI
"RTN","ORQQCN2",92,0)
 D GUI^GMRCP5(.ORY,GMRCO)
"RTN","ORQQCN2",93,0)
 Q
"RTN","ORQQCN2",94,0)
PRT513(Y,GMRCO,GMRCCHT,GMRCDEV) ; Print SF513 to VistA device from GUI
"RTN","ORQQCN2",95,0)
 N ORSTATUS
"RTN","ORQQCN2",96,0)
 D EN^GMRCP5(GMRCO,GMRCCHT,GMRCDEV,.ORSTATUS)
"RTN","ORQQCN2",97,0)
 S Y=ORSTATUS
"RTN","ORQQCN2",98,0)
 Q
"RTN","ORQQCN2",99,0)
WPRT513(ORY,GMRCO,GMRCCHT) ;Print SF513 to Windows device from GUI
"RTN","ORQQCN2",100,0)
 N ZTQUEUED,ORHFS,ORSUB,ORIO,ORSTATUS,ROOT,ORHANDLE
"RTN","ORQQCN2",101,0)
 N IOM,IOSL,IOST,IOF,IOT,IOS
"RTN","ORQQCN2",102,0)
 S (ORSUB,ROOT)="ORDATA",ORIO="OR WINDOWS HFS",ORHANDLE="ORQQCN2"
"RTN","ORQQCN2",103,0)
 S ORY=$NA(^TMP(ORSUB,$J,1))
"RTN","ORQQCN2",104,0)
 S ORHFS=$$HFS^ORWRP()
"RTN","ORQQCN2",105,0)
 D HFSOPEN^ORWRP(ORHANDLE,ORHFS,"W")
"RTN","ORQQCN2",106,0)
 I POP D  Q
"RTN","ORQQCN2",107,0)
 . I $D(ROOT) D SETITEM^ORWRP(.ROOT,"ERROR: Unable to open HFS file for SF513 print")
"RTN","ORQQCN2",108,0)
 D IOVAR^ORWRP(.ORIO,,,"P-WINHFS80")
"RTN","ORQQCN2",109,0)
 N $ETRAP,$ESTACK
"RTN","ORQQCN2",110,0)
 S $ETRAP="D ERR^ORWRP Q"
"RTN","ORQQCN2",111,0)
 U IO
"RTN","ORQQCN2",112,0)
 D PRNT^GMRCP5A(GMRCO,0,0,GMRCCHT,0)
"RTN","ORQQCN2",113,0)
 D HFSCLOSE^ORWRP(ORHANDLE,ORHFS)
"RTN","ORQQCN2",114,0)
 Q
"RTN","ORQQCN2",115,0)
SIGFIND(Y,ORIEN,ORFL,ORCOM,ORALRT,ORALTO,ORDATE) ;Significant findings
"RTN","ORQQCN2",116,0)
 S Y=$$SFILE^GMRCGUIB(ORIEN,4,ORFL,"",DUZ,.ORCOM,ORALRT,ORALTO,ORDATE) ; "4"=SIG FIND ACTION
"RTN","ORQQCN2",117,0)
 Q
"RTN","ORQQCN2",118,0)
ADMCOMPL(Y,ORIEN,ORFL,ORCOM,ORRESP,ORALRT,ORALTO,ORDATE) ; Admin users
"RTN","ORQQCN2",119,0)
 ; Administrative complete action
"RTN","ORQQCN2",120,0)
 S Y=$$SFILE^GMRCGUIB(ORIEN,10,ORFL,ORRESP,DUZ,.ORCOM,ORALRT,ORALTO,ORDATE) ; "10"=Admin Complete
"RTN","ORQQCN2",121,0)
 Q
"RTN","ORQQCN2",122,0)
SVCLIST(ORY,FROM,DIR) ; Return a set of consult services in long list format
"RTN","ORQQCN2",123,0)
 ; .ORY=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORQQCN2",124,0)
 N I,IEN,CNT,Y,ORTMP,ORSVC,ORSTR
"RTN","ORQQCN2",125,0)
 S I=0,CNT=44,ORSVC=""
"RTN","ORQQCN2",126,0)
 D SVCTREE^ORQQCN2(.Y,1)
"RTN","ORQQCN2",127,0)
 F I=1:1  S ORSVC=$P($G(Y(I)),U,2) Q:ORSVC=""  D
"RTN","ORQQCN2",128,0)
 . S ORTMP(ORSVC)=Y(I)
"RTN","ORQQCN2",129,0)
 F I=1:1  Q:I=CNT  S FROM=$O(ORTMP(FROM),DIR) Q:FROM=""  D
"RTN","ORQQCN2",130,0)
 . S ORSTR=ORTMP(FROM)
"RTN","ORQQCN2",131,0)
 . S ORY(I)=ORSTR
"RTN","ORQQCN2",132,0)
 Q
"RTN","ORQQCN2",133,0)
GETCTXT(Y,ORUSER) ; Returns current view context for user
"RTN","ORQQCN2",134,0)
 S Y=$$GET^XPAR("ALL","ORCH CONTEXT CONSULTS",1)
"RTN","ORQQCN2",135,0)
 Q
"RTN","ORQQCN2",136,0)
SAVECTXT(Y,ORCTXT) ; Save new view preferences for user
"RTN","ORQQCN2",137,0)
 N TMP
"RTN","ORQQCN2",138,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT CONSULTS",1)
"RTN","ORQQCN2",139,0)
 I TMP'="" D  Q
"RTN","ORQQCN2",140,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT CONSULTS",1,ORCTXT)
"RTN","ORQQCN2",141,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT CONSULTS",1,ORCTXT)
"RTN","ORQQCN2",142,0)
 Q
"RTN","ORQQCN2",143,0)
 ;
"RTN","ORQQCN2",144,0)
DEFRFREQ(ORY,ORSVC,ORDFN,RESOLVE) ;Return default reason for request for service
"RTN","ORQQCN2",145,0)
 ; ORSVC=pointer to file 123.5
"RTN","ORQQCN2",146,0)
 ; ORDFN=patient, if RESOLVE=1
"RTN","ORQQCN2",147,0)
 ; RESOLVE=1 to resolve boilerplate, 0 to not resolve
"RTN","ORQQCN2",148,0)
 Q:+$G(ORSVC)=0
"RTN","ORQQCN2",149,0)
 I +RESOLVE,(+$G(ORDFN)=0) Q
"RTN","ORQQCN2",150,0)
 S ORY=$NA(^TMP("ORREQ",$J))
"RTN","ORQQCN2",151,0)
 S:$G(RESOLVE)="" RESOLVE=0
"RTN","ORQQCN2",152,0)
 D GETDEF^GMRCDRFR(.ORY,ORSVC,ORDFN,RESOLVE)
"RTN","ORQQCN2",153,0)
 K @ORY@(0)
"RTN","ORQQCN2",154,0)
 Q
"RTN","ORQQCN2",155,0)
EDITDRFR(ORY,ORSVC) ; Allow editing of reason for request?
"RTN","ORQQCN2",156,0)
 S ORY=$$REAF^GMRCDRFR(ORSVC)
"RTN","ORQQCN2",157,0)
 Q
"RTN","ORQQCN2",158,0)
SVCIEN(ORY,ORIEN) ;Given orderable item file entry, return IEN in 123.5, OR -1 IF INACTIVE IN 101.43
"RTN","ORQQCN2",159,0)
 N X1
"RTN","ORQQCN2",160,0)
 I '$D(^ORD(101.43,ORIEN)) S ORY=-1 Q
"RTN","ORQQCN2",161,0)
 S X1=$G(^ORD(101.43,ORIEN,.1))
"RTN","ORQQCN2",162,0)
 I +X1,+X1<$$NOW^XLFDT S ORY=-1 Q
"RTN","ORQQCN2",163,0)
 S ORY=$P($$USID^ORWDXC(ORIEN),U,4)
"RTN","ORQQCN2",164,0)
 Q
"RTN","ORQQCN2",165,0)
PROVDX(ORY,ORIEN) ;Return provisional dx prompting info for service
"RTN","ORQQCN2",166,0)
 S ORY=$$PROVDX^GMRCUTL1(ORIEN)
"RTN","ORQQCN2",167,0)
 Q
"RTN","ORQQCN2",168,0)
PREREQ(ORY,ORSVC,ORDFN) ;Returns prequisites for ordering
"RTN","ORQQCN2",169,0)
 Q:(+$G(ORSVC)=0)!(+$G(ORDFN)=0)
"RTN","ORQQCN2",170,0)
 S ORY=$NA(^TMP("ORPREREQ",$J))
"RTN","ORQQCN2",171,0)
 D PREREQ^GMRCUTL1(.ORY,ORSVC,ORDFN,0)  ;0=RESOLVE OBJECTS
"RTN","ORQQCN2",172,0)
 K @ORY@(0)
"RTN","ORQQCN2",173,0)
 Q
"RTN","ORQQCN2",174,0)
UNRSLVD(ORY,ORDFN) ;Returns true if unresolved consults for user/pt
"RTN","ORQQCN2",175,0)
 ;S ORY=0
"RTN","ORQQCN2",176,0)
 ;Q:+$$GET^XPAR("ALL","ORWOR SHOW CONSULTS",1,"I")=0
"RTN","ORQQCN2",177,0)
 ;S ORY=+$$ANYPENDG^GMRCTIU(ORDFN,DUZ)   ;DBIA #3473
"RTN","ORQQCN2",178,0)
 ;Q
"RTN","ORQQCN2",179,0)
 S $P(ORY,U,1)=+$$ANYPENDG^GMRCTIU(ORDFN,DUZ)   ;DBIA #3473
"RTN","ORQQCN2",180,0)
 S $P(ORY,U,2)=+$$GET^XPAR("ALL","ORWOR SHOW CONSULTS",1,"I")
"RTN","ORQQCN2",181,0)
 Q
"RTN","ORQQCN2",182,0)
ISPROSVC(ORY,GMRCIEN) ; IS THIS SERVICE PART OF CONSULTS-PROSTHETICS INTERFACE, wat/OR*3*280
"RTN","ORQQCN2",183,0)
 ;GMRCIEN - IEN of selected service
"RTN","ORQQCN2",184,0)
 I $G(^GMR(123.5,$G(GMRCIEN),"INT"))=1 S ORY=1
"RTN","ORQQCN2",185,0)
 Q
"RTN","ORQQPL1")
0^5^B62165510
"RTN","ORQQPL1",1,0)
ORQQPL1 ; ALB/PDR/REV - PROBLEM LIST FOR CPRS GUI ;11/19/09  10:06
"RTN","ORQQPL1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,148,173,203,206,249,243,280**;Dec 17, 1997;Build 85
"RTN","ORQQPL1",3,0)
 ;
"RTN","ORQQPL1",4,0)
 ;------------------------- GET PROBLEM FROM LEXICON -------------------
"RTN","ORQQPL1",5,0)
 ;
"RTN","ORQQPL1",6,0)
LEXSRCH(LIST,FROM,N,VIEW,ORDATE) ; Get candidate Problems from LEX file
"RTN","ORQQPL1",7,0)
 N LEX,VAL,VAL1,COD,CIEN,SYS,MAX,NAME
"RTN","ORQQPL1",8,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORQQPL1",9,0)
 S:'$G(N) N=100
"RTN","ORQQPL1",10,0)
 S:'$L($G(VIEW)) VIEW="PL1"
"RTN","ORQQPL1",11,0)
 D CONFIG^LEXSET("GMPL",VIEW,ORDATE)
"RTN","ORQQPL1",12,0)
 D LOOK^LEXA(FROM,"GMPL",N,"",ORDATE)
"RTN","ORQQPL1",13,0)
 S S=0
"RTN","ORQQPL1",14,0)
 F  S S=$O(LEX("LIST",S)) Q:S<1  D
"RTN","ORQQPL1",15,0)
 . S VAL1=LEX("LIST",S)
"RTN","ORQQPL1",16,0)
 . S COD="",CIEN="",SYS="",NAME=""
"RTN","ORQQPL1",17,0)
 . I $L(VAL1,"CPT-4 ")>1 D
"RTN","ORQQPL1",18,0)
 .. S SYS="ICD-9-CM "
"RTN","ORQQPL1",19,0)
 .. S COD="799.9"
"RTN","ORQQPL1",20,0)
 .. S CIEN=""
"RTN","ORQQPL1",21,0)
 .. S NAME=$P(VAL1," (CPT-4")
"RTN","ORQQPL1",22,0)
 . I $L(VAL1,"DSM-IV ")>1 D
"RTN","ORQQPL1",23,0)
 .. S SYS="DSM-IV "
"RTN","ORQQPL1",24,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",25,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",26,0)
 .. S CIEN=$$CODEN^ICDCODE($$ICDONE^LEXU($P(VAL1,U,1),ORDATE),80)
"RTN","ORQQPL1",27,0)
 .. S NAME=$P(VAL1," (DSM-IV")
"RTN","ORQQPL1",28,0)
 .. ;
"RTN","ORQQPL1",29,0)
 . I $L(VAL1,"(TITLE 38 ")>1 D
"RTN","ORQQPL1",30,0)
 .. S SYS="TITLE 38 "
"RTN","ORQQPL1",31,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",32,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",33,0)
 .. S CIEN=$$CODEN^ICDCODE($$ICDONE^LEXU($P(VAL1,U,1),ORDATE),80)
"RTN","ORQQPL1",34,0)
 .. S NAME=$P(VAL1,"(TITLE 38 ")
"RTN","ORQQPL1",35,0)
 .. ;
"RTN","ORQQPL1",36,0)
 . I $L(VAL1,"ICD-9-CM ")>1 D
"RTN","ORQQPL1",37,0)
 .. S SYS="ICD-9-CM "
"RTN","ORQQPL1",38,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",39,0)
 .. S:COD["/" COD=$P(COD,"/",1)
"RTN","ORQQPL1",40,0)
 .. S CIEN=+$$CODEN^ICDCODE(COD,80)
"RTN","ORQQPL1",41,0)
 .. S NAME=$P(VAL1," (ICD-9-CM")
"RTN","ORQQPL1",42,0)
 . I $L(NAME)=0 S NAME=$P($P(VAL1," (")," *")
"RTN","ORQQPL1",43,0)
 . ;
"RTN","ORQQPL1",44,0)
 . ; jeh Clean left over codes
"RTN","ORQQPL1",45,0)
 . S NAME=$P(NAME," (CPT-4")
"RTN","ORQQPL1",46,0)
 . S NAME=$P(NAME," (DSM-IV")
"RTN","ORQQPL1",47,0)
 . S NAME=$P(NAME,"(TITLE 38 ")
"RTN","ORQQPL1",48,0)
 . S NAME=$P(NAME," (ICD-9-CM")
"RTN","ORQQPL1",49,0)
 . ;
"RTN","ORQQPL1",50,0)
 . S VAL=NAME_U_COD_U_CIEN_U_SYS ; ien^.01^icd^icdifn^system
"RTN","ORQQPL1",51,0)
 . S LIST(S)=VAL
"RTN","ORQQPL1",52,0)
 . S MAX=S
"RTN","ORQQPL1",53,0)
 I $G(MAX)'="" S LIST(MAX+1)=$G(LEX("MAT"))
"RTN","ORQQPL1",54,0)
 K ^TMP("LEXSCH",$J)
"RTN","ORQQPL1",55,0)
 Q
"RTN","ORQQPL1",56,0)
 ;
"RTN","ORQQPL1",57,0)
ICDREC(COD) ;
"RTN","ORQQPL1",58,0)
 N CODIEN
"RTN","ORQQPL1",59,0)
 I COD="" Q ""
"RTN","ORQQPL1",60,0)
 S COD=$P($P(COD,U),"/")
"RTN","ORQQPL1",61,0)
 S CODIEN=$$CODEN^ICDCODE(COD,80) ;ICR #3990
"RTN","ORQQPL1",62,0)
 Q CODIEN
"RTN","ORQQPL1",63,0)
 ;
"RTN","ORQQPL1",64,0)
CPTREC(COD) ;
"RTN","ORQQPL1",65,0)
 I COD="" Q ""
"RTN","ORQQPL1",66,0)
 Q $$CODEN^ICPTCOD(COD) ;ICR #1995
"RTN","ORQQPL1",67,0)
 ;
"RTN","ORQQPL1",68,0)
EDLOAD(RETURN,DA,GMPROV,GMPVAMC) ; LOAD  EDIT ARRAYS
"RTN","ORQQPL1",69,0)
 ; DA=problem IFN
"RTN","ORQQPL1",70,0)
 N I,GMPFLD,GMPORIG,GMPL
"RTN","ORQQPL1",71,0)
 D GETFLDS^GMPLEDT3(DA)
"RTN","ORQQPL1",72,0)
 S I=0
"RTN","ORQQPL1",73,0)
 D LOADFLDS(.RETURN,"GMPFLD","NEW",.I)
"RTN","ORQQPL1",74,0)
 D LOADFLDS(.RETURN,"GMPORIG","ORG",.I)
"RTN","ORQQPL1",75,0)
 K GMPFLD,GMPORIG,GMPL  ; should not have to do this
"RTN","ORQQPL1",76,0)
 Q
"RTN","ORQQPL1",77,0)
 ;
"RTN","ORQQPL1",78,0)
LOADFLDS(RETURN,NAM,TYP,I) ; LOAD FIELDS FOR TYPE OF ARRAY
"RTN","ORQQPL1",79,0)
 N S,V,CVP,PN,PID
"RTN","ORQQPL1",80,0)
 S S="",V=$C(254)
"RTN","ORQQPL1",81,0)
 F  S S=$O(@NAM@(S)) Q:S=10  D
"RTN","ORQQPL1",82,0)
 . S RETURN(I)=TYP_V_S_V_@NAM@(S)
"RTN","ORQQPL1",83,0)
 . S I=I+1
"RTN","ORQQPL1",84,0)
 S S=""
"RTN","ORQQPL1",85,0)
 F  S S=$O(@NAM@(10,S)) Q:S=""  D
"RTN","ORQQPL1",86,0)
 . S CVP=@NAM@(10,S)
"RTN","ORQQPL1",87,0)
 . S PN="" ; provider name
"RTN","ORQQPL1",88,0)
 . S PID=$P(CVP,U,6) ; provider id
"RTN","ORQQPL1",89,0)
 . I PID'=""  S PN=$$GET1^DIQ(200,PID,.01) ; get provider name
"RTN","ORQQPL1",90,0)
 . S RETURN(I)=TYP_V_"10,"_S_V_CVP_U_PN
"RTN","ORQQPL1",91,0)
 . S I=I+1
"RTN","ORQQPL1",92,0)
 Q
"RTN","ORQQPL1",93,0)
 ;
"RTN","ORQQPL1",94,0)
EDSAVE(RETURN,GMPIFN,GMPROV,GMPVAMC,UT,EDARRAY) ; SAVE EDITED RES
"RTN","ORQQPL1",95,0)
 ; RETURN - boolean, 1 success, 0 failure
"RTN","ORQQPL1",96,0)
 ; EDARRAY - array used for indirect sets of GMPORIG() and GMPFLDS()
"RTN","ORQQPL1",97,0)
 ;
"RTN","ORQQPL1",98,0)
 N GMPFLD,GMPORIG,S,GMPLUSER
"RTN","ORQQPL1",99,0)
 S RETURN=1 ; initialize for success
"RTN","ORQQPL1",100,0)
 I UT S GMPLUSER=1
"RTN","ORQQPL1",101,0)
 ;
"RTN","ORQQPL1",102,0)
 ;S GMPLUSER=1
"RTN","ORQQPL1",103,0)
 S S=""
"RTN","ORQQPL1",104,0)
 F  S S=$O(EDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",105,0)
 . S @EDARRAY(S)
"RTN","ORQQPL1",106,0)
 I $D(GMPFLD(10,"NEW"))>9 D  I 'RETURN Q  ; Bail Out if no lock
"RTN","ORQQPL1",107,0)
 . L +^AUPNPROB(GMPIFN,11):10  ; given bogus nature of this lock, should be able to get
"RTN","ORQQPL1",108,0)
 . I '$T S RETURN=0
"RTN","ORQQPL1",109,0)
 ;
"RTN","ORQQPL1",110,0)
 D EN^GMPLSAVE  ; save the data
"RTN","ORQQPL1",111,0)
 K GMPFLD,GMPORIG
"RTN","ORQQPL1",112,0)
 ;
"RTN","ORQQPL1",113,0)
 L -^AUPNPROB(GMPIFN,11)  ; free this instance of lock (in case it was set)
"RTN","ORQQPL1",114,0)
 S RETURN=1
"RTN","ORQQPL1",115,0)
 Q
"RTN","ORQQPL1",116,0)
 ;
"RTN","ORQQPL1",117,0)
UPDATE(ORRETURN,UPDARRAY) ; UPDATE A PROBLEM RECORD
"RTN","ORQQPL1",118,0)
 ; Does essentially same job as EDSAVE above, however does not handle edits to comments
"RTN","ORQQPL1",119,0)
 ; or addition of multiple comments.
"RTN","ORQQPL1",120,0)
 ; Use initially just for status updates.
"RTN","ORQQPL1",121,0)
 ;
"RTN","ORQQPL1",122,0)
 N S,GMPL,GMPORIG ; last 2 vars created in nested call
"RTN","ORQQPL1",123,0)
 S S=""
"RTN","ORQQPL1",124,0)
 F  S S=$O(UPDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",125,0)
 . S @UPDARRAY(S)
"RTN","ORQQPL1",126,0)
 D UPDATE^GMPLUTL(.ORARRAY,.ORRETURN)
"RTN","ORQQPL1",127,0)
 K ORARRAY
"RTN","ORQQPL1",128,0)
 ; broker wont pick up root node RETURN
"RTN","ORQQPL1",129,0)
 S ORRETURN(1)=ORRETURN(0) ; error text
"RTN","ORQQPL1",130,0)
 S ORRETURN(0)=ORRETURN ; gmpdfn
"RTN","ORQQPL1",131,0)
 I ORRETURN(0)=""  S ORRETURN=1 ; insurance ? need
"RTN","ORQQPL1",132,0)
 Q
"RTN","ORQQPL1",133,0)
 ;
"RTN","ORQQPL1",134,0)
ADDSAVE(RETURN,GMPDFN,GMPROV,GMPVAMC,ADDARRAY) ; SAVE NEW RECORD
"RTN","ORQQPL1",135,0)
 ; RETURN - Problem IFN if success, 0 otherwise
"RTN","ORQQPL1",136,0)
 ; ADDARRAY - array used for indirect sets of  GMPFLDS()
"RTN","ORQQPL1",137,0)
 ;
"RTN","ORQQPL1",138,0)
 N DA,GMPFLD,GMPORIG,S
"RTN","ORQQPL1",139,0)
 S RETURN=0 ;
"RTN","ORQQPL1",140,0)
 L +^AUPNPROB(0):10
"RTN","ORQQPL1",141,0)
 Q:'$T  ; bail out if no lock
"RTN","ORQQPL1",142,0)
 ;
"RTN","ORQQPL1",143,0)
 S S=""
"RTN","ORQQPL1",144,0)
 F  S S=$O(ADDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",145,0)
 . S @ADDARRAY(S)
"RTN","ORQQPL1",146,0)
 ;
"RTN","ORQQPL1",147,0)
 D NEW^GMPLSAVE
"RTN","ORQQPL1",148,0)
 ;
"RTN","ORQQPL1",149,0)
 S RETURN=DA
"RTN","ORQQPL1",150,0)
 ;
"RTN","ORQQPL1",151,0)
 L -^AUPNPROB(0)
"RTN","ORQQPL1",152,0)
 S RETURN=1
"RTN","ORQQPL1",153,0)
 Q
"RTN","ORQQPL1",154,0)
 ;
"RTN","ORQQPL1",155,0)
INITUSER(RETURN,ORDUZ) ; INITIALIZE FOR NEW USER
"RTN","ORQQPL1",156,0)
 ; taken from INIT^GMPLMGR
"RTN","ORQQPL1",157,0)
 ; leave GMPLUSER on symbol table - is evaluated in EDITSAVE
"RTN","ORQQPL1",158,0)
 ;
"RTN","ORQQPL1",159,0)
 N X,PV,CTXT,GMPLPROV
"RTN","ORQQPL1",160,0)
 S GMPLUSER=$$CLINUSER(DUZ)
"RTN","ORQQPL1",161,0)
 S CTXT=$$GET^XPAR("ALL","ORCH CONTEXT PROBLEMS",1)
"RTN","ORQQPL1",162,0)
 S X=$G(^GMPL(125.99,1,0)) ; IN1+6^GMPLMGR
"RTN","ORQQPL1",163,0)
 S RETURN(0)=GMPLUSER ;  problem list user, or other user
"RTN","ORQQPL1",164,0)
 S RETURN(1)=$$VIEW^GMPLX1(DUZ) ; GMPLVIEW("VIEW") - users default view
"RTN","ORQQPL1",165,0)
 S RETURN(2)=+$P(X,U,2) ; verify transcribed problems
"RTN","ORQQPL1",166,0)
 S RETURN(3)=+$P(X,U,3) ; prompt for chart copy
"RTN","ORQQPL1",167,0)
 S RETURN(4)=+$P(X,U,4) ; use lexicon
"RTN","ORQQPL1",168,0)
 S RETURN(5)=$S($P(X,U,5)="R":1,1:0) ; chron or reverse chron listing
"RTN","ORQQPL1",169,0)
 S RETURN(6)=$S($P($G(CTXT),";",3)'="":$P($G(CTXT),";",3),1:"A")
"RTN","ORQQPL1",170,0)
 S GMPLPROV=$P($G(CTXT),";",5)
"RTN","ORQQPL1",171,0)
 I +GMPLPROV>0,$D(^VA(200,GMPLPROV)) D
"RTN","ORQQPL1",172,0)
 . S RETURN(7)=GMPLPROV_U_$P(^VA(200,GMPLPROV,0),U)
"RTN","ORQQPL1",173,0)
 E  S RETURN(7)="0^All"
"RTN","ORQQPL1",174,0)
 S RETURN(8)=$$SERVICE^GMPLX1(DUZ) ; user's service/section
"RTN","ORQQPL1",175,0)
 ; Guessing from what I see in the data that $$VIEW^GMPLX1 actually returns a composite
"RTN","ORQQPL1",176,0)
 ; of default view (in/out patient)/(c1/c2... if out patient i.e. GMPLVIEW("CLIN")) or
"RTN","ORQQPL1",177,0)
 ;                                 /(s1/s2... if in patient i.e. GMPLVIEW("SERV"))
"RTN","ORQQPL1",178,0)
 ; Going with this assumption for now:
"RTN","ORQQPL1",179,0)
 I $L(RETURN(1),"/")>1 D
"RTN","ORQQPL1",180,0)
 . S PV=RETURN(1)
"RTN","ORQQPL1",181,0)
 . S RETURN(1)=$P(PV,"/")
"RTN","ORQQPL1",182,0)
 . I RETURN(1)="C" S GMPLVIEW("CLIN")=$P(PV,"/",2,99)
"RTN","ORQQPL1",183,0)
 . I RETURN(1)="S" S GMPLVIEW("SERV")=$P(PV,"/",2,99)
"RTN","ORQQPL1",184,0)
 S RETURN(9)=$G(GMPLVIEW("SERV")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",185,0)
 S RETURN(10)=$G(GMPLVIEW("CLIN")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",186,0)
 S RETURN(11)=""
"RTN","ORQQPL1",187,0)
 S RETURN(12)=+$P($G(CTXT),";",4)    ; should comments display?
"RTN","ORQQPL1",188,0)
 K GMPLVIEW
"RTN","ORQQPL1",189,0)
 Q
"RTN","ORQQPL1",190,0)
 ;
"RTN","ORQQPL1",191,0)
CLINUSER(ORDUZ) ;is this a clinical user?
"RTN","ORQQPL1",192,0)
 N ORUSER
"RTN","ORQQPL1",193,0)
 S ORUSER=0
"RTN","ORQQPL1",194,0)
 I $D(^XUSEC("ORES",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",195,0)
 I $D(^XUSEC("ORELSE",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",196,0)
 I $D(^XUSEC("PROVIDER",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",197,0)
 Q ORUSER
"RTN","ORQQPL1",198,0)
 ;
"RTN","ORQQPL1",199,0)
INITPT(RETURN,DFN) ; GET PATIENT PARAMETERS
"RTN","ORQQPL1",200,0)
 Q:+$G(DFN)=0
"RTN","ORQQPL1",201,0)
 N GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST,GMPCV,GMPSHD
"RTN","ORQQPL1",202,0)
 ;
"RTN","ORQQPL1",203,0)
 S RETURN(0)=DUZ(2) ; facility #
"RTN","ORQQPL1",204,0)
 D DEM^VADPT ; get death indicator
"RTN","ORQQPL1",205,0)
 S RETURN(1)=$G(VADM(6)) ; death indicator
"RTN","ORQQPL1",206,0)
 D VADPT^GMPLX1(DFN) ; get eligibilities
"RTN","ORQQPL1",207,0)
 S RETURN(2)=$P(GMPSC,U) ; service connected
"RTN","ORQQPL1",208,0)
 S RETURN(3)=$G(GMPAGTOR) ; agent orange exposure
"RTN","ORQQPL1",209,0)
 S RETURN(4)=$G(GMPION) ; ionizing radiation exposure
"RTN","ORQQPL1",210,0)
 S RETURN(5)=$G(GMPGULF) ; gulf war exposure
"RTN","ORQQPL1",211,0)
 S RETURN(6)=VA("BID") ; need this to reconstitute GMPDFN on return
"RTN","ORQQPL1",212,0)
 S RETURN(7)=$G(GMPHNC) ; head/neck cancer
"RTN","ORQQPL1",213,0)
 S RETURN(8)=$G(GMPMST) ; MST
"RTN","ORQQPL1",214,0)
 S RETURN(9)=$G(GMPCV) ; CV
"RTN","ORQQPL1",215,0)
 S RETURN(10)=$G(GMPSHD) ; SHAD
"RTN","ORQQPL1",216,0)
 Q
"RTN","ORQQPL1",217,0)
 ;
"RTN","ORQQPL1",218,0)
PROVSRCH(LST,FLAG,N,FROM,PART) ; Get candidate Rroviders from person file
"RTN","ORQQPL1",219,0)
 N LV,NS,RV,IEN
"RTN","ORQQPL1",220,0)
 S RV=$NAME(LV("DILIST","ID"))
"RTN","ORQQPL1",221,0)
 IF +$G(N)=0 S N=50
"RTN","ORQQPL1",222,0)
 S FLAG=$G(FLAG),N=$G(N),FROM=$G(FROM),PART=$G(PART)
"RTN","ORQQPL1",223,0)
 D LIST^DIC(200,"",".01;1",FLAG,N,FROM,PART,"","","","LV")
"RTN","ORQQPL1",224,0)
 S NS=""
"RTN","ORQQPL1",225,0)
 F  S NS=$O(LV("DILIST",1,NS)) Q:NS=""  D
"RTN","ORQQPL1",226,0)
 . S IEN=""
"RTN","ORQQPL1",227,0)
 . S IEN=$O(^VA(200,"B",@RV@(NS,.01),IEN)) ; compliments of PROV^ORQPTQ
"RTN","ORQQPL1",228,0)
 . S LST(NS)=IEN_U_@RV@(NS,.01)  ; initials_U_@RV@(NS,1)
"RTN","ORQQPL1",229,0)
 Q
"RTN","ORQQPL1",230,0)
 ;
"RTN","ORQQPL1",231,0)
CLINSRCH(Y,X) ; Get LIST OF CLINICS
"RTN","ORQQPL1",232,0)
 ; Note: This comes from CLIN^ORQPTQ2, where it was commented out in place of
"RTN","ORQQPL1",233,0)
 ; a call to ^XPAR. I would have just used CLIN^ORQPTQ2, but it didn't work - at
"RTN","ORQQPL1",234,0)
 ; least on SLC OEX directory.
"RTN","ORQQPL1",235,0)
 ; X has no purpose other than to satisfy apparent rpc and tcallv requirement for args
"RTN","ORQQPL1",236,0)
 N I,NAME,IEN
"RTN","ORQQPL1",237,0)
 S I=1,IEN=0,NAME=""
"RTN","ORQQPL1",238,0)
 ;access to SC global granted under DBIA #518:
"RTN","ORQQPL1",239,0)
 F  S NAME=$O(^SC("B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","ORQQPL1",240,0)
 . I $P(^SC(IEN,0),"^",3)="C" S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQQPL1",241,0)
 Q
"RTN","ORQQPL1",242,0)
 ;
"RTN","ORQQPL1",243,0)
SRVCSRCH(Y,FROM,DIR,ALL) ; GET LIST OF SERVICES
"RTN","ORQQPL1",244,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORQQPL1",245,0)
 F  Q:I=CNT  S FROM=$O(^DIC(49,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORQQPL1",246,0)
 . S IEN=$O(^DIC(49,"B",FROM,0)) I '$G(ALL),$P(^DIC(49,IEN,0),U,9)'="C" Q
"RTN","ORQQPL1",247,0)
 . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORQQPL1",248,0)
 Q
"RTN","ORQQPL1",249,0)
 ;
"RTN","ORQQPL1",250,0)
DUP(Y,DFN,TERM,TEXT) ;Check for duplicate problem
"RTN","ORQQPL1",251,0)
 S Y=$$DUPL^GMPLX(DFN,TERM,TEXT) Q:+Y=0
"RTN","ORQQPL1",252,0)
 I $P(^AUPNPROB(Y,1),U,2)="H" S Y=0 Q
"RTN","ORQQPL1",253,0)
 S Y=Y_U_$P(^AUPNPROB(Y,0),U,12)
"RTN","ORQQPL1",254,0)
 Q
"RTN","ORQQPL3")
0^6^B54712722
"RTN","ORQQPL3",1,0)
ORQQPL3 ; ALB/PDR/REV - Problem List RPCs ;11/19/09  10:15
"RTN","ORQQPL3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,148,173,243,280**;Dec 17, 1997;Build 85
"RTN","ORQQPL3",3,0)
 ;
"RTN","ORQQPL3",4,0)
 ;---------------- LIST PATIENT PROBLEMS ------------------------
"RTN","ORQQPL3",5,0)
 ;
"RTN","ORQQPL3",6,0)
PROBL(ROOT,DFN,CONTEXT)        ;  GET LIST OF PATIENT PROBLEMS
"RTN","ORQQPL3",7,0)
 N DIWL,DIWR,DIWF
"RTN","ORQQPL3",8,0)
 N ST,ORI,ORX
"RTN","ORQQPL3",9,0)
 S (LCNT,NUM)=0
"RTN","ORQQPL3",10,0)
 S DIWL=1,DIWR=48,DIWF="C48"
"RTN","ORQQPL3",11,0)
 S CONTEXT=";;"_$G(CONTEXT)
"RTN","ORQQPL3",12,0)
 I CONTEXT=";;" S CONTEXT=";;A"
"RTN","ORQQPL3",13,0)
 S ST=$P(CONTEXT,";",3)
"RTN","ORQQPL3",14,0)
 ;
"RTN","ORQQPL3",15,0)
 I ST="R" D DELLIST(.ROOT,+DFN) ; show deleted only
"RTN","ORQQPL3",16,0)
 I ST'="R"  D LIST(.ROOT,+DFN,ST) ; show others - don't trust ELSE here
"RTN","ORQQPL3",17,0)
 ;
"RTN","ORQQPL3",18,0)
 I ROOT(0)<1 D
"RTN","ORQQPL3",19,0)
 . S LCNT=1
"RTN","ORQQPL3",20,0)
 . S ROOT(1)="     "_$$PAD^ORCHTAB("No data available.",49)_"|"
"RTN","ORQQPL3",21,0)
 Q
"RTN","ORQQPL3",22,0)
 ;
"RTN","ORQQPL3",23,0)
 ;
"RTN","ORQQPL3",24,0)
LIST(GMPL,GMPDFN,GMPSTAT)       ; -- Returns list of problems for patient GMPDFN
"RTN","ORQQPL3",25,0)
 ;    in GMPL(#)=ifn^status^description^ICD^onset^last modified^SC^SpExp^Condition^Loc^
"RTN","ORQQPL3",26,0)
 ;                          loc.type^prov^service
"RTN","ORQQPL3",27,0)
 ;     & GMPL(0)=number of problems returned
"RTN","ORQQPL3",28,0)
 ; This is virtually same as LIST^GMPLUTL2 except that it appends the
"RTN","ORQQPL3",29,0)
 ; condition - T)ranscribed or P)ermanent,location,loc type,provider, service.
"RTN","ORQQPL3",30,0)
 ;
"RTN","ORQQPL3",31,0)
 N I,IFN,CNT,GMPL0,GMPL1,SP,ST,NUM,ONSET,ICD,LASTMOD,PRIO,DTREC
"RTN","ORQQPL3",32,0)
 N SC,ORLIST,ORVIEW,GMPARAM,ORTOTAL,LIN,LOC,LT,PROV,SERV,HASCMT
"RTN","ORQQPL3",33,0)
 N SCCOND,AO,IR,ENV,HNC,MST,CV,SHD,ORICD186,INACT
"RTN","ORQQPL3",34,0)
 Q:$G(GMPDFN)'>0
"RTN","ORQQPL3",35,0)
 S CNT=0,SP=""
"RTN","ORQQPL3",36,0)
 S GMPARAM("QUIET")=1
"RTN","ORQQPL3",37,0)
 S GMPARAM("REV")=$P($G(^GMPL(125.99,1,0)),U,5)="R"
"RTN","ORQQPL3",38,0)
 S ORVIEW("ACT")=GMPSTAT
"RTN","ORQQPL3",39,0)
 S ORVIEW("PROV")=0
"RTN","ORQQPL3",40,0)
 S ORVIEW("VIEW")=""
"RTN","ORQQPL3",41,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORQQPL3",42,0)
 ;
"RTN","ORQQPL3",43,0)
 D GETPLIST^GMPLMGR1(.ORLIST,.ORTOTAL,.ORVIEW)
"RTN","ORQQPL3",44,0)
 ;
"RTN","ORQQPL3",45,0)
 F NUM=0:0 S NUM=$O(ORLIST(NUM)) Q:NUM'>0  D
"RTN","ORQQPL3",46,0)
 . S IFN=+ORLIST(NUM) Q:IFN'>0
"RTN","ORQQPL3",47,0)
 . S INACT=""
"RTN","ORQQPL3",48,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",49,0)
 . S GMPL1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",50,0)
 . S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",51,0)
 . S CNT=CNT+1
"RTN","ORQQPL3",52,0)
 . I +ORICD186 D
"RTN","ORQQPL3",53,0)
 . . S ICD=$$CODEC^ICDCODE(+GMPL0)
"RTN","ORQQPL3",54,0)
 . . I '+$$STATCHK^ICDAPIU(ICD,DT) S INACT="#"
"RTN","ORQQPL3",55,0)
 . E  D
"RTN","ORQQPL3",56,0)
 . . S ICD=$P($G(^ICD9(+GMPL0,0)),U)
"RTN","ORQQPL3",57,0)
 . S LASTMOD=$P(GMPL0,U,3)
"RTN","ORQQPL3",58,0)
 . S ST=$P(GMPL0,U,12)
"RTN","ORQQPL3",59,0)
 . S ONSET=$P(GMPL0,U,13)
"RTN","ORQQPL3",60,0)
 . S SC=$S(+$P(GMPL1,U,10):"SC",$P(GMPL1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",61,0)
 . S AO=$S(+$P(GMPL1,U,11):"/AO",1:"")
"RTN","ORQQPL3",62,0)
 . S IR=$S(+$P(GMPL1,U,12):"/IR",1:"")
"RTN","ORQQPL3",63,0)
 . S ENV=$S(+$P(GMPL1,U,13):"/EC",1:"")
"RTN","ORQQPL3",64,0)
 . S HNC=$S(+$P(GMPL1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",65,0)
 . S MST=$S(+$P(GMPL1,U,16):"/MST",1:"")
"RTN","ORQQPL3",66,0)
 . S CV=$S(+$P(GMPL1,U,17):"/CV",1:"")
"RTN","ORQQPL3",67,0)
 . S SHD=$S(+$P(GMPL1,U,18):"/SHD",1:"")
"RTN","ORQQPL3",68,0)
 . S SCCOND=SC_AO_IR_ENV_HNC_MST_CV_SHD
"RTN","ORQQPL3",69,0)
 . S LOC=$P(GMPL1,U,8)
"RTN","ORQQPL3",70,0)
 . S DTREC=$P(GMPL1,U,9)
"RTN","ORQQPL3",71,0)
 . S LT=""
"RTN","ORQQPL3",72,0)
 . I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3),LOC=LOC_";"_$P($G(^SC(LOC,0)),U,1)
"RTN","ORQQPL3",73,0)
 . S PROV=$P(GMPL1,U,5) ; responsible provider
"RTN","ORQQPL3",74,0)
 . I PROV'="" S PROV=PROV_";"_$P($G(^VA(200,PROV,0)),U,1)
"RTN","ORQQPL3",75,0)
 . S SERV=$P(GMPL1,U,6)
"RTN","ORQQPL3",76,0)
 . I SERV=0 S SERV="" ; not sure how it gets set to 0, but need consistency in GUI
"RTN","ORQQPL3",77,0)
 . I SERV'="" S SERV=SERV_";"_$P($G(^DIC(49,SERV,0)),U,1)
"RTN","ORQQPL3",78,0)
 . S SP=""
"RTN","ORQQPL3",79,0)
 . F I=11,12,13 S:$P(GMPL1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",80,0)
 . S PRIO=$P(GMPL1,U,14)
"RTN","ORQQPL3",81,0)
 . S LIN=IFN_U_ST_U_$$PROBTEXT^GMPLX(IFN)_U_ICD_U_ONSET
"RTN","ORQQPL3",82,0)
 . S LIN=LIN_U_LASTMOD_U_SC_U_SP_U_$P(GMPL1,U,2)
"RTN","ORQQPL3",83,0)
 . S LIN=LIN_U_LOC_U_LT_U_PROV_U_SERV_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND_U_INACT
"RTN","ORQQPL3",84,0)
 . S GMPL(CNT)=LIN
"RTN","ORQQPL3",85,0)
 S GMPL(0)=CNT
"RTN","ORQQPL3",86,0)
 Q
"RTN","ORQQPL3",87,0)
 ;
"RTN","ORQQPL3",88,0)
 ;
"RTN","ORQQPL3",89,0)
 ;------------------------------------- GET LIST OF DELETED PROBLEMS -----------------------------
"RTN","ORQQPL3",90,0)
 ;
"RTN","ORQQPL3",91,0)
DELLIST(RETURN,GMPDFN) ; GET LIST OF DELETED PROBLEMS
"RTN","ORQQPL3",92,0)
 ; see GETPLIST^GMPLMGR1 and LIST^GMPUTL2
"RTN","ORQQPL3",93,0)
 N S,IFN,I,L0,L1,ST,TXT,ICD,ONSET,MOD,SC,SP,LOC,LT,PROV,SERV,PRIO,HASCMT,DTREC
"RTN","ORQQPL3",94,0)
 N SCCOND,AO,IR,ENV,HNC,MST,CV,SHD,ORICD186,INACT
"RTN","ORQQPL3",95,0)
 S I=0,S=""
"RTN","ORQQPL3",96,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORQQPL3",97,0)
 F  S S=$O(^AUPNPROB("ACTIVE",GMPDFN,S)) Q:S=""  D
"RTN","ORQQPL3",98,0)
 . S IFN=""
"RTN","ORQQPL3",99,0)
 . F  S IFN=$O(^AUPNPROB("ACTIVE",+GMPDFN,S,IFN)) Q:IFN=""  D
"RTN","ORQQPL3",100,0)
 .. I $P($G(^AUPNPROB(IFN,1)),U,2)="H" D
"RTN","ORQQPL3",101,0)
 ... S L0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",102,0)
 ... Q:L0=""
"RTN","ORQQPL3",103,0)
 ... S INACT=""
"RTN","ORQQPL3",104,0)
 ... S L1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",105,0)
 ... S ST=$P(L0,U,12)
"RTN","ORQQPL3",106,0)
 ... S TXT=$$PROBTEXT^GMPLX(IFN)
"RTN","ORQQPL3",107,0)
 ... I +ORICD186 D
"RTN","ORQQPL3",108,0)
 ... . S ICD=$$CODEC^ICDCODE(+L0)
"RTN","ORQQPL3",109,0)
 ... . I '+$$STATCHK^ICDAPIU(ICD,DT) S INACT="#"
"RTN","ORQQPL3",110,0)
 ... E  D
"RTN","ORQQPL3",111,0)
 ... . S ICD=$P($G(^ICD9(+L0,0)),U)
"RTN","ORQQPL3",112,0)
 ... S ONSET=$P(L0,U,13)
"RTN","ORQQPL3",113,0)
 ... S MOD=$P(L0,U,3)
"RTN","ORQQPL3",114,0)
 ... S SC=$S(+$P(L1,U,10):"SC",$P(L1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",115,0)
 ... S AO=$S(+$P(L1,U,11):"/AO",1:"")
"RTN","ORQQPL3",116,0)
 ... S IR=$S(+$P(L1,U,12):"/IR",1:"")
"RTN","ORQQPL3",117,0)
 ... S ENV=$S(+$P(L1,U,13):"/EC",1:"")
"RTN","ORQQPL3",118,0)
 ... S HNC=$S(+$P(L1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",119,0)
 ... S MST=$S(+$P(L1,U,16):"/MST",1:"")
"RTN","ORQQPL3",120,0)
 ... S CV=$S(+$P(L1,U,17):"/CV",1:"")
"RTN","ORQQPL3",121,0)
 ... S SHD=$S(+$P(L1,U,18):"/SHD",1:"")
"RTN","ORQQPL3",122,0)
 ... S SCCOND=SC_AO_IR_ENV_HNC_MST_CV_SHD
"RTN","ORQQPL3",123,0)
 ... S SP=$$GETSP
"RTN","ORQQPL3",124,0)
 ... S LOC=$P(L1,U,8)
"RTN","ORQQPL3",125,0)
 ... S LT=""
"RTN","ORQQPL3",126,0)
 ... I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3)
"RTN","ORQQPL3",127,0)
 ... S PROV=$P(L1,U,5) ; responsible provider
"RTN","ORQQPL3",128,0)
 ... S SERV=$P(L1,U,6)
"RTN","ORQQPL3",129,0)
 ... S PRIO=$P(L1,U,14)
"RTN","ORQQPL3",130,0)
 ... S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",131,0)
 ... S DTREC=$P(L1,U,9)
"RTN","ORQQPL3",132,0)
 ... S I=I+1
"RTN","ORQQPL3",133,0)
 ... S RETURN(I)=IFN_U_ST_U_TXT_U_ICD_U_ONSET
"RTN","ORQQPL3",134,0)
 ... S RETURN(I)=RETURN(I)_U_MOD_U_SC_U_SP_U_$P(L1,U,2)
"RTN","ORQQPL3",135,0)
 ... S RETURN(I)=RETURN(I)_U_LOC_U_LT_U_PROV_U_SERV
"RTN","ORQQPL3",136,0)
 ... S RETURN(I)=RETURN(I)_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND_U_INACT
"RTN","ORQQPL3",137,0)
 S RETURN(0)=I
"RTN","ORQQPL3",138,0)
 Q
"RTN","ORQQPL3",139,0)
 ;
"RTN","ORQQPL3",140,0)
GETSP() ; GET EXPOSURES
"RTN","ORQQPL3",141,0)
 N I
"RTN","ORQQPL3",142,0)
 S SP=""
"RTN","ORQQPL3",143,0)
 F I=11,12,13 S:$P(L1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",144,0)
 Q SP
"RTN","ORQQPL3",145,0)
 ;
"RTN","ORQQPL3",146,0)
 ; adapted from ^GMPLBLD3 ;9/96
"RTN","ORQQPL3",147,0)
 ;
"RTN","ORQQPL3",148,0)
 ; ----------------------- GET USER PROBLEM CATEGORIES --------------
"RTN","ORQQPL3",149,0)
 ;
"RTN","ORQQPL3",150,0)
CAT(TMP,ORDUZ,CLIN) ; Get user category list
"RTN","ORQQPL3",151,0)
 N GSEQ,GCNT,GROUP,HDR,IFN,LCNT,ITEM,TG,GMPLSLST
"RTN","ORQQPL3",152,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",153,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",154,0)
 K @TG
"RTN","ORQQPL3",155,0)
 S (GSEQ,GCNT,LCNT)=0
"RTN","ORQQPL3",156,0)
 ;
"RTN","ORQQPL3",157,0)
 S GMPLSLST=$$GETUSLST(DUZ,CLIN)  ; get approp list for user
"RTN","ORQQPL3",158,0)
 ; Build multiple of category\problems
"RTN","ORQQPL3",159,0)
 ; Iterate categories
"RTN","ORQQPL3",160,0)
 F  S GSEQ=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ)) Q:GSEQ'>0  D
"RTN","ORQQPL3",161,0)
 . S IFN=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",162,0)
 . S ITEM=$G(^GMPL(125.1,IFN,0))
"RTN","ORQQPL3",163,0)
 . S GROUP=+$P(ITEM,U,3)
"RTN","ORQQPL3",164,0)
 . S HDR=GROUP_U_$P(ITEM,U,4,5)
"RTN","ORQQPL3",165,0)
 . S GCNT=GCNT+1
"RTN","ORQQPL3",166,0)
 . S @TG@(GCNT)=HDR ; put category into temp global
"RTN","ORQQPL3",167,0)
 Q
"RTN","ORQQPL3",168,0)
 ;
"RTN","ORQQPL3",169,0)
GETUSLST(ORDUZ,CLIN) ; GET AN APPROPRIATE CATEGORY LIST FOR THE USER
"RTN","ORQQPL3",170,0)
 N GMPLSLST
"RTN","ORQQPL3",171,0)
 S GMPLSLST=$P($G(^VA(200,DUZ,125)),U,2)
"RTN","ORQQPL3",172,0)
 ;I 'GMPLSLST D
"RTN","ORQQPL3",173,0)
 I 'GMPLSLST,CLIN,$D(^GMPL(125,"C",+CLIN)) S GMPLSLST=$O(^(+CLIN,0))
"RTN","ORQQPL3",174,0)
 ;. S GMPLSLST=$O(^VA(200,DUZ,+CLIN,0))  ;$O(^(+CLIN,0))
"RTN","ORQQPL3",175,0)
 Q GMPLSLST
"RTN","ORQQPL3",176,0)
 ;
"RTN","ORQQPL3",177,0)
 ;----------------------- USER PROBLEM LIST --------------------------
"RTN","ORQQPL3",178,0)
 ;
"RTN","ORQQPL3",179,0)
PROB(TMP,GROUP) ; Get user problem list for given group
"RTN","ORQQPL3",180,0)
 N PSEQ,PCNT,IFN,ITEM,TG,CODE,TEXT,ORICD186
"RTN","ORQQPL3",181,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",182,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",183,0)
 K @TG
"RTN","ORQQPL3",184,0)
 S LCNT=0
"RTN","ORQQPL3",185,0)
 S ORICD186=$$PATCH^XPDUTL("ICD*18.0*6")
"RTN","ORQQPL3",186,0)
 ;
"RTN","ORQQPL3",187,0)
 ; iterate through problems in category
"RTN","ORQQPL3",188,0)
 S (PSEQ,PCNT)=0
"RTN","ORQQPL3",189,0)
 F  S PSEQ=$O(^GMPL(125.12,"C",GROUP,PSEQ)) Q:PSEQ'>0  D
"RTN","ORQQPL3",190,0)
 . S IFN=$O(^GMPL(125.12,"C",GROUP,PSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",191,0)
 . S ITEM=$G(^GMPL(125.12,IFN,0))
"RTN","ORQQPL3",192,0)
 . S TEXT=$P(ITEM,U,4)
"RTN","ORQQPL3",193,0)
 . ; SEE DD for GMPL(125.12,4 :
"RTN","ORQQPL3",194,0)
 . ; "...code which is to be displayed... generally assumed to be ICD"
"RTN","ORQQPL3",195,0)
 . S CODE=$P(ITEM,U,5)
"RTN","ORQQPL3",196,0)
 . I +ORICD186,'+$$STATCHK^ICDAPIU(CODE,DT) Q
"RTN","ORQQPL3",197,0)
 . S PCNT=PCNT+1
"RTN","ORQQPL3",198,0)
 . ; RETURN:
"RTN","ORQQPL3",199,0)
 . ; PROBLEM^DISPLAY TEXT^CODE^CODE IFN
"RTN","ORQQPL3",200,0)
 . I +ORICD186 D
"RTN","ORQQPL3",201,0)
 . . S @TG@(PCNT)=$P(ITEM,U,3,5)_U_$$CODEN^ICDCODE(CODE,80)
"RTN","ORQQPL3",202,0)
 . E  D
"RTN","ORQQPL3",203,0)
 . . S @TG@(PCNT)=$P(ITEM,U,3,5)_U_$$ICDCODE(CODE)
"RTN","ORQQPL3",204,0)
 Q
"RTN","ORQQPL3",205,0)
 ;
"RTN","ORQQPL3",206,0)
ICDCODE(COD)    ; RETURN INTERNAL ICD FOR EXTERNAL CODE  (obsolete after CSV patches released - RV)
"RTN","ORQQPL3",207,0)
 N CODIEN
"RTN","ORQQPL3",208,0)
 I COD="" Q ""
"RTN","ORQQPL3",209,0)
 S CODIEN=$$CODEN^ICDCODE($P(COD,U),80) ;ICR #3990
"RTN","ORQQPL3",210,0)
 Q CODIEN
"RTN","ORQQPL3",211,0)
 ;
"RTN","ORQQPL3",212,0)
 ;------------------ Filter Providers ---------------------
"RTN","ORQQPL3",213,0)
 ;
"RTN","ORQQPL3",214,0)
GETRPRV(RETURN,INP) ; GET LIST OF RESPONSIBLE PROVIDERS FROM PRBLM LIST
"RTN","ORQQPL3",215,0)
 ; RETURN - aa list of responsible providers from which to select for filtering
"RTN","ORQQPL3",216,0)
 ; INP - array of problem list providers to select from
"RTN","ORQQPL3",217,0)
 ;
"RTN","ORQQPL3",218,0)
 N S
"RTN","ORQQPL3",219,0)
 S S=""
"RTN","ORQQPL3",220,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",221,0)
 . I INP(S)'="",$G(^VA(200,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",222,0)
 .. S RETURN(I)=INP(S)_U_$P(^VA(200,INP(S),0),U)
"RTN","ORQQPL3",223,0)
 S RETURN(0)="-1"_U_"<None recorded>" ; return empty provider
"RTN","ORQQPL3",224,0)
 Q
"RTN","ORQQPL3",225,0)
 ;
"RTN","ORQQPL3",226,0)
 ;---------------------------------------------------- GET FILTERED CLINIC LIST ------------------------
"RTN","ORQQPL3",227,0)
 ;
"RTN","ORQQPL3",228,0)
GETCLIN(RETURN,INP) ; Get FILTERED LIST OF CLINICS
"RTN","ORQQPL3",229,0)
 ; RETURN NAMES FOR LIST OF CLINICS PASSED IN
"RTN","ORQQPL3",230,0)
 N I,S
"RTN","ORQQPL3",231,0)
 S S=""
"RTN","ORQQPL3",232,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",233,0)
 . I INP(S)'="",$G(^SC(INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",234,0)
 .. S RETURN(I)=INP(S)_U_$P(^SC(INP(S),0),U,1)
"RTN","ORQQPL3",235,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty location
"RTN","ORQQPL3",236,0)
 Q
"RTN","ORQQPL3",237,0)
 ;
"RTN","ORQQPL3",238,0)
GETSRVC(RETURN,INP) ; GET FILTERED LIST OF INPATIENT SERVICES
"RTN","ORQQPL3",239,0)
 ; RETURN NAMES FOR LIST OF IEN PASSED IN
"RTN","ORQQPL3",240,0)
 N I,S
"RTN","ORQQPL3",241,0)
 S S=""
"RTN","ORQQPL3",242,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",243,0)
 . I INP(S)'="",$G(^DIC(49,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",244,0)
 .. S RETURN(I)=INP(S)_U_$P(^DIC(49,INP(S),0),U,1)
"RTN","ORQQPL3",245,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty service
"RTN","ORQQPL3",246,0)
 Q
"RTN","ORTSKLPS")
0^31^B6566762
"RTN","ORTSKLPS",1,0)
ORTSKLPS ;SLC/JMH-nightly task to lapse old unsigned orders ;03/11/10  07:52
"RTN","ORTSKLPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,280**;Dec 17, 1997;Build 85
"RTN","ORTSKLPS",3,0)
 ;
"RTN","ORTSKLPS",4,0)
TASK ;
"RTN","ORTSKLPS",5,0)
 ;only run between Midnight and 1:59:59 AM
"RTN","ORTSKLPS",6,0)
 ;I $E($P($$NOW^XLFDT,".",2),1,2)>1 Q
"RTN","ORTSKLPS",7,0)
 ;don't run if run recently (within 4 hours)
"RTN","ORTSKLPS",8,0)
 ;I $$FMDIFF^XLFDT($$NOW^XLFDT,$G(^XTMP("OR LAPSE ORDERS","LAST TIME")),2)<14400 Q
"RTN","ORTSKLPS",9,0)
 ;set timestamp of last run
"RTN","ORTSKLPS",10,0)
 S ^XTMP("OR LAPSE ORDERS",0)=$$FMADD^XLFDT($$NOW^XLFDT,2)_U_$$NOW^XLFDT
"RTN","ORTSKLPS",11,0)
 S ^XTMP("OR LAPSE ORDERS","LAST TIME")=$$NOW^XLFDT
"RTN","ORTSKLPS",12,0)
 ;loop through unsigned orders
"RTN","ORTSKLPS",13,0)
 N ORVP,ORDT,ORN,ORACT,ORINVDT,ORPARAM,ORDIAL,ORDISP
"RTN","ORTSKLPS",14,0)
 S ORVP="" F  S ORVP=$O(^OR(100,"AS",ORVP)) Q:'$L(ORVP)  D
"RTN","ORTSKLPS",15,0)
 .S ORINVDT=0 F  S ORINVDT=$O(^OR(100,"AS",ORVP,ORINVDT)) Q:'ORINVDT  D
"RTN","ORTSKLPS",16,0)
 ..S ORDT=9999999-ORINVDT
"RTN","ORTSKLPS",17,0)
 ..S ORN=0 F  S ORN=$O(^OR(100,"AS",ORVP,ORINVDT,ORN)) Q:'ORN  D
"RTN","ORTSKLPS",18,0)
 ...;don't lapse if order does not have a status of unreleased (11)
"RTN","ORTSKLPS",19,0)
 ...Q:$P($G(^OR(100,ORN,3)),U,3)'=11
"RTN","ORTSKLPS",20,0)
 ...;get order action
"RTN","ORTSKLPS",21,0)
 ...S ORACT=$O(^OR(100,"AS",ORVP,ORINVDT,ORN,""))
"RTN","ORTSKLPS",22,0)
 ...;get order dialog
"RTN","ORTSKLPS",23,0)
 ...S ORDIAL=$P($G(^OR(100,ORN,0)),U,5)
"RTN","ORTSKLPS",24,0)
 ...I $P(ORDIAL,";",2)='"ORD(101.41," Q
"RTN","ORTSKLPS",25,0)
 ...;using order dialog get display group
"RTN","ORTSKLPS",26,0)
 ...S ORDISP=$P($G(^ORD(101.41,+ORDIAL,0)),U,5)
"RTN","ORTSKLPS",27,0)
 ...I +ORDISP S ORDISP=$P($G(^ORD(100.98,+ORDISP,0)),U)
"RTN","ORTSKLPS",28,0)
 ...;get lapse parameter for display group
"RTN","ORTSKLPS",29,0)
 ...I $L(ORDISP) S ORPARAM=$$GET^XPAR($$ENT(ORN),"OR LAPSE ORDERS",ORDISP)
"RTN","ORTSKLPS",30,0)
 ...;get default lapse parameter if one for display group not set
"RTN","ORTSKLPS",31,0)
 ...I '$G(ORPARAM) S ORPARAM=$$GET^XPAR($$ENT(ORN),"OR LAPSE ORDERS DFLT")
"RTN","ORTSKLPS",32,0)
 ...;quit if ORPARAM isn't even set
"RTN","ORTSKLPS",33,0)
 ...Q:'$L(ORPARAM)
"RTN","ORTSKLPS",34,0)
 ...;quit if order is not older than T-(days for lapse)
"RTN","ORTSKLPS",35,0)
 ...I $$FMDIFF^XLFDT($$NOW^XLFDT,ORDT,2)<(ORPARAM*24*60*60) Q
"RTN","ORTSKLPS",36,0)
 ...;if old then lapse
"RTN","ORTSKLPS",37,0)
 ...D LAPSE^ORCSAVE2(ORN_";"_ORACT)
"RTN","ORTSKLPS",38,0)
 ;loop through pending events
"RTN","ORTSKLPS",39,0)
 N ORPT,OREVT,ORPTR,Y
"RTN","ORTSKLPS",40,0)
 S ORPT="" F  S ORPT=$O(^ORE(100.2,"AE",ORPT)) Q:'ORPT  D
"RTN","ORTSKLPS",41,0)
 .S OREVT="" F  S OREVT=$O(^ORE(100.2,"AE",ORPT,OREVT)) Q:'OREVT  D
"RTN","ORTSKLPS",42,0)
 ..S ORPTR="" F  S ORPTR=$O(^ORE(100.2,"AE",ORPT,OREVT,ORPTR)) Q:'ORPTR  S Y=$$LAPSED^OREVNTX(ORPTR)
"RTN","ORTSKLPS",43,0)
 Q
"RTN","ORTSKLPS",44,0)
ENT(ORN) ;get the proper entity for an order
"RTN","ORTSKLPS",45,0)
 N ORRET,ORHS,ORDIV
"RTN","ORTSKLPS",46,0)
 S ORRET="ALL"
"RTN","ORTSKLPS",47,0)
 S ORHS=$P(^OR(100,ORN,0),U,10)
"RTN","ORTSKLPS",48,0)
 I $G(ORHS)>0 S ORDIV=$P(^SC(+ORHS,0),U,4)
"RTN","ORTSKLPS",49,0)
 I $G(ORDIV)>0 S ORRET=ORDIV_";DIC(4,^SYS^PKG"
"RTN","ORTSKLPS",50,0)
 Q ORRET
"RTN","ORUTL")
0^15^B8567087
"RTN","ORUTL",1,0)
ORUTL ; slc/dcm,RWF - Order utilities; ;3/28/08  15:15
"RTN","ORUTL",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**95,280**Dec 17, 1997;;Build 85
"RTN","ORUTL",3,0)
LOC ;;GET PT. LOCATION
"RTN","ORUTL",4,0)
 S C(1)=$S($D(ORL(2))#2:$S(ORL(2)[";":$S($D(@("^"_$P(ORL(2),";",2)_+ORL(2)_",0)")):$P(^(0),"^"),1:""),1:""),1:"")
"RTN","ORUTL",5,0)
 I 'OR4,ORVP[";DPT(",$D(ORL(2)),ORL(2) Q
"RTN","ORUTL",6,0)
 G:$L(C(1)) LOC1 S (CT,C)=0,O=1 I ORVP[";DPT(",$O(^DPT(+ORVP,"DE",0))>0 W !!,"Currently enrolled in the following clinics: ",!
"RTN","ORUTL",7,0)
 I  S I=0 F L=0:0 S I=$O(^DPT(+ORVP,"DE",I)) Q:I'>0  I $D(^(I,0)) S Y=^(0) I $P(Y,"^",2)'="I",'$P(Y,"^",3) I $D(^SC(+Y,0)) S X=^(0) D
"RTN","ORUTL",8,0)
 . I $D(^SC(+Y,"I")) S ORIA=+^("I"),ORRA=$P(^("I"),"^",2) I $S('ORIA:0,ORIA>DT:0,ORRA'>DT&(ORRA):0,1:1) Q
"RTN","ORUTL",9,0)
 . S CT=CT+1 W:(CT#2) !?17 W:'(CT#2) ?47 W $P(X,"^") S C=C+1,C(1)=$P(X,"^") S:C'=1 C=-1
"RTN","ORUTL",10,0)
 W !
"RTN","ORUTL",11,0)
LOC1 S C=1 W !,"Patient Location: " W:C=1&($L(C(1))) C(1),"//" R X:DTIME G QUIT:'$T,QUIT:C'=1&(X=""),LOC:$L(X)>20!(X'?.ANP),QUIT:X[U
"RTN","ORUTL",12,0)
 S DIC("S")="I ""FI""'[$P(^(0),""^"",3),'$P($G(^(""OOS"")),""^"")",DIC=44,DIC(0)=$S(C=1&($L(C(1)))&(X=""):"EMQOZX",1:"EMQZ")
"RTN","ORUTL",13,0)
 S:X="" X=C(1) D ^DIC G LOC:X["?" S:Y>0 ORL=+Y_";SC(",ORL(0)=$S($L($P(Y(0),"^",2)):$P(Y(0),"^",2),1:$E($P(Y(0),"^"),1,4))
"RTN","ORUTL",14,0)
 K ORIA,ORRA I $D(^SC(+Y,"I")) S ORIA=+^("I"),ORRA=$P(^("I"),U,2)
"RTN","ORUTL",15,0)
 I $S('$D(ORIA):0,'ORIA:0,ORIA>DT:0,ORRA'>DT&(ORRA):0,1:1) W $C(7)," This location has been inactivated." K ORL G LOC
"RTN","ORUTL",16,0)
 I Y<0 W "  You must select a standard location." G LOC
"RTN","ORUTL",17,0)
 K DIC,C,ORIA,ORRA Q
"RTN","ORUTL",18,0)
QUIT S OREND=1 K DIC,C Q
"RTN","ORUTL",19,0)
READ ;;Hold screen
"RTN","ORUTL",20,0)
 I $D(IOST) Q:$E(IOST)'="C"
"RTN","ORUTL",21,0)
 W ! I $D(IOSL),$Y<(IOSL-4) G READ
"RTN","ORUTL",22,0)
 W !?5,"Press return to continue  " R X:$S($D(DTIME):DTIME,1:300)
"RTN","ORUTL",23,0)
 Q
"RTN","ORUTL",24,0)
CHKNAM(X,Y) ;Input transform to not allow certain characters
"RTN","ORUTL",25,0)
 ;X is the text to be checked, Y are the characters not allowed as sent in by the input transform of the field
"RTN","ORUTL",26,0)
 N I,J I '$D(Y) S Y="-;,=^" ;if no special characters sent in, set list to all
"RTN","ORUTL",27,0)
 F I=1:1:$L(Y) I X[($E(Y,I)) S J=1
"RTN","ORUTL",28,0)
 Q +$G(J)
"RTN","ORUTL",29,0)
CHKMNE(X) ;Input transform to not allow use of standard Lmgr Mnemonics
"RTN","ORUTL",30,0)
 N Y
"RTN","ORUTL",31,0)
 S Y=$$UP^XLFSTR(X) ;check to make sure mnemonic isn't set to lower case of restricted entries.  List Manager is case insensitive
"RTN","ORUTL",32,0)
 I Y="ADPL"!(Y="DN")!(Y="Q")!(Y="FS")!(Y="GO")!(Y="?")!(Y="??")!(Y="LS")!(Y="+")!(Y="-")!(Y="PL")!(Y="PS")!(Y="RD")!(Y="SL")!(Y="<")!(Y=">")!(Y="UP")!(Y="PI")!(Y="CWAD")!(Y="TD")!(Y="EX") Q 1
"RTN","ORUTL",33,0)
 Q 0
"RTN","ORUTL",34,0)
PAD(ORX,ORL) ; Pads string to specified length
"RTN","ORUTL",35,0)
 N ORY
"RTN","ORUTL",36,0)
 S ORY="",$P(ORY," ",(ORL-$L(ORX))+1)=""
"RTN","ORUTL",37,0)
 Q ORY
"RTN","ORWCV")
0^29^B80219268
"RTN","ORWCV",1,0)
ORWCV ; SLC/KCM - Background Cover Sheet Load; ; 06/10/09
"RTN","ORWCV",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,132,209,214,195,215,260,243,282,302,280**;Dec 17, 1997;Build 85
"RTN","ORWCV",3,0)
 ;
"RTN","ORWCV",4,0)
 ;
"RTN","ORWCV",5,0)
 ; DBIA 1096    Reference to ^DGPM("ATID1"
"RTN","ORWCV",6,0)
 ; DBIA 1894    Reference to GETENC^PXAPI
"RTN","ORWCV",7,0)
 ; DBIA 1895    Reference to APPT2VST^PXAPI
"RTN","ORWCV",8,0)
 ; DBIA 2096    Reference to ^SD(409.63
"RTN","ORWCV",9,0)
 ; DBIA 2437    Reference to ^DGPM(
"RTN","ORWCV",10,0)
 ; DBIA 2965    Reference to ^DIC(405.1
"RTN","ORWCV",11,0)
 ; DBIA 4011    Access ^XWB(8994)
"RTN","ORWCV",12,0)
 ; DBIA 4313    Direct R/W permission to capacity mgmt global ^KMPTMP("KMPDT")
"RTN","ORWCV",13,0)
 ; DBIA 4325    References to AWCMCPR1
"RTN","ORWCV",14,0)
 ; DBIA 10061   Reference to ^UTILITY
"RTN","ORWCV",15,0)
 ; CPRS has a SACC exemption for usage of the variable $ZE
"RTN","ORWCV",16,0)
 ; 
"RTN","ORWCV",17,0)
START(VAL,DFN,IP,HWND,LOC,NODO,NEWREM) ; start cover sheet build in background
"RTN","ORWCV",18,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,SECT,BACK,X,I,ORLIST,STR,FILE,NODE,ORHTIME,ORX
"RTN","ORWCV",19,0)
 ; Capacity planning timing code uses ORHTIME
"RTN","ORWCV",20,0)
 S ORHTIME=$H
"RTN","ORWCV",21,0)
 S LOC=$G(LOC),NODO=";"_$G(NODO),NEWREM=+$G(NEWREM)
"RTN","ORWCV",22,0)
 D GETLST^XPAR(.ORX,"SYS^PKG","ORWOR COVER RETRIEVAL NEW","Q")
"RTN","ORWCV",23,0)
 S I=0 F  S I=$O(ORX(I)) Q:'I  I $D(^ORD(101.24,+ORX(I),0)) S SECT(+$P(^(0),"^",2))=$P(ORX(I),"^",2)
"RTN","ORWCV",24,0)
 D GETLST^XPAR(.ORLIST,"ALL","ORWCV1 COVERSHEET LIST")
"RTN","ORWCV",25,0)
 S (VAL,BACK,STR,FILE)=""
"RTN","ORWCV",26,0)
 F  S I=$O(ORLIST(I)) Q:'I  I $D(^ORD(101.24,$P(ORLIST(I),"^",2),0))  S X0=^(0) D
"RTN","ORWCV",27,0)
 . Q:$P(X0,"^",8)'="C"
"RTN","ORWCV",28,0)
 . S X=$P(X0,"^",2)
"RTN","ORWCV",29,0)
 . I NODO[(";"_X_";") Q                                  ; if in NODO, dont do section
"RTN","ORWCV",30,0)
 . S STR=STR_X_";"
"RTN","ORWCV",31,0)
 . I '$G(SECT(X)) S VAL=VAL_X_";"                        ; load section in foreground
"RTN","ORWCV",32,0)
 . E  S BACK=BACK_X_";",FILE=FILE_$P(ORLIST(I),"^",2)_";"  ; load section in background
"RTN","ORWCV",33,0)
 Q:BACK=""
"RTN","ORWCV",34,0)
 S ZTIO="ORW THREAD RESOURCE",ZTRTN="BUILD^ORWCV",ZTDTH=$H
"RTN","ORWCV",35,0)
 S (ZTSAVE("DFN"),ZTSAVE("IP"),ZTSAVE("HWND"),ZTSAVE("NEWREM"),ZTSAVE("LOC"),ZTSAVE("BACK"),ZTSAVE("FILE"))=""
"RTN","ORWCV",36,0)
 S ZTDESC="CPRS GUI Background Data Retrieval"
"RTN","ORWCV",37,0)
 D ^%ZTLOAD I '$D(ZTSK) S VAL=STR Q
"RTN","ORWCV",38,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",39,0)
 K ^XTMP(NODE)
"RTN","ORWCV",40,0)
 S ^XTMP(NODE,0)=$$FMADD^XLFDT(DT,1)_U_DT_U_"Background CPRS "_ZTSK
"RTN","ORWCV",41,0)
 ; Start capacity planning timing clock - will be stopped in POLL code
"RTN","ORWCV",42,0)
 I +$G(^KMPTMP("KMPD-CPRS")) S ^KMPTMP("KMPDT","ORWCV",NODE)=$G(ORHTIME)_"^^"_$G(DUZ)_"^"_$G(IO("CLNM"))
"RTN","ORWCV",43,0)
 Q
"RTN","ORWCV",44,0)
BUILD ; called in background by task manager, expects DFN, JobID 
"RTN","ORWCV",45,0)
 N NODE,IFLE,ORFNUM,ID,ENT,RTN,INODE,PARAM1,PARAM2,DETAIL,X0,X2
"RTN","ORWCV",46,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN
"RTN","ORWCV",47,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWCV",48,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE) Q  ; client no longer polling
"RTN","ORWCV",49,0)
 I '$D(^XTMP(NODE,0)) Q                    ; XTMP node has been purged
"RTN","ORWCV",50,0)
 L +^XTMP(NODE):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","ORWCV",51,0)
 S ^XTMP(NODE,"DFN")=DFN
"RTN","ORWCV",52,0)
 ;N $ETRAP,$ESTACK
"RTN","ORWCV",53,0)
 ;S $ETRAP="D ERR^ORWCV Q"
"RTN","ORWCV",54,0)
 I $L($G(FILE),";")>0 F IFLE=1:1:$L(FILE,";") S ORFNUM=$P(FILE,";",IFLE)  Q:'$D(^ORD(101.24,+ORFNUM,0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWCV",55,0)
 . S ID=$P(X0,"^",2),ENT=$P(X0,"^",6),RTN=$P(X0,"^",5),PARAM1=$P(X2,"^"),PARAM2=$P(X2,"^",2),INODE=$P(X2,"^",5),DETAIL=""
"RTN","ORWCV",56,0)
 . I $P(X0,"^",18) S DETAIL=$P($G(^ORD(101.24,+$P(X0,"^",18),0)),"^",13),DETAIL=$P($G(^XWB(8994,+DETAIL,0)),"^")  ;DBIA 4011
"RTN","ORWCV",57,0)
 . I '$L(INODE) Q
"RTN","ORWCV",58,0)
 . I '$L(ENT) S LST(IFLE)="0^ERROR: Missing ENTRY POINT field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",59,0)
 . I '$L(RTN) S LST(IFLE)="0^ERROR: Missing ROUTINE field in file 101.24 for "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",60,0)
 . I '$L($T(@(ENT_"^"_RTN))) S LST(IFLE)="0^ERROR: "_ENT_"~"_RTN_" does not exist. See file 101.24 entry: "_$P(X0,"^")_", IFN="_+ORFNUM D LST2XTMP(INODE) Q
"RTN","ORWCV",61,0)
 . I ID=50 D:$L($T(STRT3^AWCMCPR1)) STRT3^AWCMCPR1 D  D:$L($T(END^AWCMCPR1)) END^AWCMCPR1 Q  ;Special case for reminders
"RTN","ORWCV",62,0)
 .. I $G(NEWREM) D APPL^ORQQPXRM(.LST,DFN,LOC) I 1
"RTN","ORWCV",63,0)
 .. E  D @(ENT_"^"_RTN_"(.LST,DFN)")
"RTN","ORWCV",64,0)
 .. D LST2XTMP(INODE)
"RTN","ORWCV",65,0)
 . I $L(PARAM1),$L(PARAM2) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1,PARAM2)"),LST2XTMP(INODE) Q
"RTN","ORWCV",66,0)
 . I $L(PARAM1) D @(ENT_"^"_RTN_"(.LST,DFN,PARAM1)"),LST2XTMP(INODE) Q
"RTN","ORWCV",67,0)
 . D @(ENT_"^"_RTN_"(.LST,DFN)"),LST2XTMP(INODE)
"RTN","ORWCV",68,0)
 S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",69,0)
 I $G(^XTMP(NODE,"STOP")) K ^XTMP(NODE)
"RTN","ORWCV",70,0)
 L -^XTMP(NODE)
"RTN","ORWCV",71,0)
 Q
"RTN","ORWCV",72,0)
ERR ;Error trap
"RTN","ORWCV",73,0)
 S $ETRAP="D UNWIND^ORWCV Q"
"RTN","ORWCV",74,0)
 I $D(NODE) D
"RTN","ORWCV",75,0)
 . I $D(INODE) S LST(0)="",LST(1)="0^ERROR DURING COVER SHEET BUILD:"_$ZERROR D LST2XTMP(INODE)
"RTN","ORWCV",76,0)
 . S ^XTMP(NODE,"DONE")=1
"RTN","ORWCV",77,0)
 . L -^XTMP(NODE)
"RTN","ORWCV",78,0)
 D @^%ZOSF("ERRTN") ;file error
"RTN","ORWCV",79,0)
 S $ECODE=",UOR70 error during Cover Sheet build,"
"RTN","ORWCV",80,0)
 Q
"RTN","ORWCV",81,0)
UNWIND ;Unwind Error stack
"RTN","ORWCV",82,0)
 Q:$ESTACK>1  ;pop the stack
"RTN","ORWCV",83,0)
 ;add additional code here, if needed
"RTN","ORWCV",84,0)
 Q
"RTN","ORWCV",85,0)
LST2XTMP(ID) ; put the list in ^XTMP(NODE,ID)
"RTN","ORWCV",86,0)
 I $G(^XTMP(NODE,"STOP")) Q
"RTN","ORWCV",87,0)
 N I
"RTN","ORWCV",88,0)
 I $L($G(DETAIL)) S I=0 F  S I=$O(LST(I)) Q:'I  S $P(LST(I),"^",12)=DETAIL
"RTN","ORWCV",89,0)
 K ^XTMP(NODE,ID) M ^XTMP(NODE,ID)=LST S ^XTMP(NODE,ID)=1 K LST
"RTN","ORWCV",90,0)
 Q
"RTN","ORWCV",91,0)
POLL(LST,DFN,IP,HWND) ; poll for completed cover sheet parts
"RTN","ORWCV",92,0)
 N I,ILST,ID,NODE,DONE
"RTN","ORWCV",93,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",94,0)
 I '$D(^XTMP(NODE,"DFN")) Q
"RTN","ORWCV",95,0)
 I ^XTMP(NODE,"DFN")'=DFN S LST(1)="~DONE=1" Q
"RTN","ORWCV",96,0)
 I $G(^XTMP(NODE,"DONE")) S ILST=ILST+1,LST(ILST)="~DONE=1",DONE=1
"RTN","ORWCV",97,0)
 F ID="PROB","CWAD","MEDS","RMND","LABS","VITL","VSIT" D
"RTN","ORWCV",98,0)
 . I '$G(^XTMP(NODE,ID)) Q
"RTN","ORWCV",99,0)
 . S ILST=ILST+1,LST(ILST)="~"_ID
"RTN","ORWCV",100,0)
 . S I=0 F  S I=$O(^XTMP(NODE,ID,I)) Q:'I  S ILST=ILST+1,LST(ILST)="i"_^(I)
"RTN","ORWCV",101,0)
 . K ^XTMP(NODE,ID)
"RTN","ORWCV",102,0)
 ; Stop capacity planning timing clock - was started in START code
"RTN","ORWCV",103,0)
 I DONE K ^XTMP(NODE) I +$G(^KMPTMP("KMPD-CPRS")) S $P(^KMPTMP("KMPDT","ORWCV",NODE),"^",2)=$H
"RTN","ORWCV",104,0)
 Q
"RTN","ORWCV",105,0)
STOP(OK,DFN,IP,HWND) ; stop cover sheet data retrieval
"RTN","ORWCV",106,0)
 S NODE="ORWCV "_IP_"-"_HWND_"-"_DFN,ILST=0,DONE=0
"RTN","ORWCV",107,0)
 S ^XTMP(NODE,"STOP")=1,OK=1
"RTN","ORWCV",108,0)
 L +^XTMP(NODE):$S($G(DILOCKTM)>0:DILOCKTM,1:5)
"RTN","ORWCV",109,0)
 I $G(^XTMP(NODE,"DONE")) K ^XTMP(NODE)
"RTN","ORWCV",110,0)
 L -^XTMP(NODE)
"RTN","ORWCV",111,0)
 Q
"RTN","ORWCV",112,0)
CLEAN ; clean up ^XTMP nodes
"RTN","ORWCV",113,0)
 S X="ORWCV"
"RTN","ORWCV",114,0)
 F  S X=$O(^XTMP(X)) Q:$E(X,1,5)'="ORWCV"  W !,X K ^XTMP(X)
"RTN","ORWCV",115,0)
 Q
"RTN","ORWCV",116,0)
LAB(LST,DFN) ; return labs for patient
"RTN","ORWCV",117,0)
 D:$L($T(STRT2^AWCMCPR1)) STRT2^AWCMCPR1
"RTN","ORWCV",118,0)
 D LIST^ORQOR1(.LST,DFN,"LAB",4,"T-"_$$RNGLAB(DFN),"T","AW",1)
"RTN","ORWCV",119,0)
 D:$L($T(END^AWCMCPR1)) END^AWCMCPR1
"RTN","ORWCV",120,0)
 Q
"RTN","ORWCV",121,0)
 ;
"RTN","ORWCV",122,0)
VST1(ORVISIT,DFN,BEG,END,SKIP) ;
"RTN","ORWCV",123,0)
 N ERR,ERRMSG
"RTN","ORWCV",124,0)
 S ERR=0 ; kludge to return errors
"RTN","ORWCV",125,0)
 Q:'$G(DFN)
"RTN","ORWCV",126,0)
 D VST(.ORVISIT,DFN,.BEG,.END,$G(SKIP),.ERR,.ERRMSG)
"RTN","ORWCV",127,0)
 I ERR K ORVISIT S ORVISIT(1)=ERRMSG
"RTN","ORWCV",128,0)
 Q
"RTN","ORWCV",129,0)
 ;
"RTN","ORWCV",130,0)
TEST ;D VST(.ZZZ,76,2950101,3050401,777,1,1)
"RTN","ORWCV",131,0)
 Q
"RTN","ORWCV",132,0)
VST(ORVISIT,DFN,BEG,END,SKIP,ERR,ERRMSG) ; return appts/admissions for patient
"RTN","ORWCV",133,0)
 N CHECKERR,VAERR,VASD,BDT,COUNT,DTM,EDT,LOC,NOW,ORQUERY,ORLST,STI,STS,TODAY,I,J,K,XI,XE,X
"RTN","ORWCV",134,0)
 S CHECKERR=($G(ERR)=0) ; kludge to check for errors
"RTN","ORWCV",135,0)
 S NOW=$$NOW^XLFDT(),TODAY=$P(NOW,".",1)
"RTN","ORWCV",136,0)
 I '$G(BEG) S BEG=$$X2FM($$RNGVBEG)
"RTN","ORWCV",137,0)
 I '$G(END) S END=$$X2FM($$RNGVEND)+0.2359
"RTN","ORWCV",138,0)
 S COUNT=0
"RTN","ORWCV",139,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",140,0)
 S VAERR=0
"RTN","ORWCV",141,0)
 I END>NOW D   Q:VAERR  ; get future encounters, past cancels/no-shows from VADPT
"RTN","ORWCV",142,0)
 . S VASD("F")=BEG
"RTN","ORWCV",143,0)
 . S VASD("T")=END
"RTN","ORWCV",144,0)
 . S VASD("W")="123456789"
"RTN","ORWCV",145,0)
 . D SDA^ORQRY01(.ERR,.ERRMSG)
"RTN","ORWCV",146,0)
 . I CHECKERR,ERR K ^UTILITY("VASD",$J) S ORVISIT(1)=ERRMSG Q  ;IA 10061
"RTN","ORWCV",147,0)
 . S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWCV",148,0)
 . . S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","ORWCV",149,0)
 . . S DTM=$P(XI,U),IEN=$P(XI,U,2),STI=$P(XI,U,3)
"RTN","ORWCV",150,0)
 . . S LOC=$P(XE,U,2),STS=$P(XE,U,3)
"RTN","ORWCV",151,0)
 . . I DTM<TODAY,(STI=""!(STI["I")!(STI="NT")) Q  ; no prior kept appts
"RTN","ORWCV",152,0)
 . . S ^TMP("ORVSTLIST",$J,DTM,"A",1)="A;"_DTM_";"_IEN_U_DTM_U_LOC_U_STS
"RTN","ORWCV",153,0)
 . K ^UTILITY("VASD",$J)
"RTN","ORWCV",154,0)
 I BEG'>NOW D  ;past encounters from ACRP Toolkit - set in CALLBACK
"RTN","ORWCV",155,0)
 . S BDT=BEG
"RTN","ORWCV",156,0)
 . S EDT=$S(END<NOW:END,1:NOW)
"RTN","ORWCV",157,0)
 . D COVER^SDRROR
"RTN","ORWCV",158,0)
 . D OPEN^SDQ(.ORQUERY)
"RTN","ORWCV",159,0)
 . I '$$ERRCHK^SDQUT() D INDEX^SDQ(.ORQUERY,"PATIENT/DATE","SET")
"RTN","ORWCV",160,0)
 . I '$$ERRCHK^SDQUT() D PAT^SDQ(.ORQUERY,DFN,"SET")
"RTN","ORWCV",161,0)
 . I '$$ERRCHK^SDQUT() D DATE^SDQ(.ORQUERY,BDT,EDT,"SET")
"RTN","ORWCV",162,0)
 . I '$$ERRCHK^SDQUT() D
"RTN","ORWCV",163,0)
 . . S ORLST=$NA(^TMP("ORVSTLIST",$J))
"RTN","ORWCV",164,0)
 . . D SCANCB^SDQ(.ORQUERY,"D CALLBACK^ORWCV(Y,Y0,.ORLST,.ORSTOP)","SET")
"RTN","ORWCV",165,0)
 . I '$$ERRCHK^SDQUT() D ACTIVE^SDQ(.ORQUERY,"TRUE","SET")
"RTN","ORWCV",166,0)
 . I '$$ERRCHK^SDQUT() D SCAN^SDQ(.ORQUERY,"FORWARD")
"RTN","ORWCV",167,0)
 . D CLOSE^SDQ(.ORQUERY)
"RTN","ORWCV",168,0)
 ;
"RTN","ORWCV",169,0)
 I '$G(SKIP) D
"RTN","ORWCV",170,0)
 . N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,EARLY,DONE                ; admits
"RTN","ORWCV",171,0)
 . S EARLY=$$X2FM($$RNGVBEG),DONE=0
"RTN","ORWCV",172,0)
 . S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D  Q:DONE
"RTN","ORWCV",173,0)
 . . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D  Q:DONE
"RTN","ORWCV",174,0)
 . . . S X0=^DGPM(MOV,0),MTIM=$P(X0,U)
"RTN","ORWCV",175,0)
 . . . I MTIM<EARLY S DONE=1 Q
"RTN","ORWCV",176,0)
 . . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWCV",177,0)
 . . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWCV",178,0)
 . . . S ^TMP("ORVSTLIST",$J,MTIM,"I",1)="I;"_MTIM_";"_HLOC_U_MTIM_U_"Inpatient Stay"_U_XLOC_U_XTYP
"RTN","ORWCV",179,0)
 ;
"RTN","ORWCV",180,0)
 S COUNT=0
"RTN","ORWCV",181,0)
 S I=0 F  S I=$O(^TMP("ORVSTLIST",$J,I)) Q:'I  D
"RTN","ORWCV",182,0)
 . S J="" F  S J=$O(^TMP("ORVSTLIST",$J,I,J)) Q:J=""  D
"RTN","ORWCV",183,0)
 . . S K=0 F  S K=$O(^TMP("ORVSTLIST",$J,I,J,K)) Q:'K  D
"RTN","ORWCV",184,0)
 . . . S COUNT=COUNT+1
"RTN","ORWCV",185,0)
 . . . S ORVISIT(COUNT)=^TMP("ORVSTLIST",$J,I,J,K)
"RTN","ORWCV",186,0)
 K ^TMP("ORVSTLIST",$J)
"RTN","ORWCV",187,0)
 Q
"RTN","ORWCV",188,0)
CALLBACK(IEN,NODE0,ARRAY,STOP) ; called back from ACRP Toolkit for encounters
"RTN","ORWCV",189,0)
 ;
"RTN","ORWCV",190,0)
 ; IEN and NODE0 relate to Outpatient Encounter File
"RTN","ORWCV",191,0)
 ; set STOP to 1 if need to quit
"RTN","ORWCV",192,0)
 ;
"RTN","ORWCV",193,0)
 N COUNT,DTM,LOC,OOS,TYPE,XSTAT,XLOC
"RTN","ORWCV",194,0)
 S DTM=+NODE0,COUNT=1
"RTN","ORWCV",195,0)
 S LOC=$P(NODE0,"^",4)
"RTN","ORWCV",196,0)
 S XLOC=$P($G(^SC(+LOC,0)),U),OOS=$G(^("OOS"))
"RTN","ORWCV",197,0)
 I OOS Q              ; ignore OOS locations
"RTN","ORWCV",198,0)
 I $P(NODE0,"^",6) Q  ; not parent encounter
"RTN","ORWCV",199,0)
 S XSTAT=$P($G(^SD(409.63,+$P(NODE0,"^",12),0)),"^")
"RTN","ORWCV",200,0)
 S TYPE=$S($P(NODE0,"^",8)=1:"A",1:"V")
"RTN","ORWCV",201,0)
 I TYPE="V",$D(@ARRAY@(DTM,"V")) S COUNT=$O(@ARRAY@(DTM,"V","A"),-1)+1 ; same d/t
"RTN","ORWCV",202,0)
 S @ARRAY@(DTM,TYPE,COUNT)=TYPE_";"_DTM_";"_LOC_U_DTM_U_XLOC_U_XSTAT
"RTN","ORWCV",203,0)
 Q
"RTN","ORWCV",204,0)
DTLVST(RPT,DFN,IEN,APPTINFO) ; return progress notes / discharge summary
"RTN","ORWCV",205,0)
 N VISIT
"RTN","ORWCV",206,0)
 I $P(APPTINFO,";")="A" D  Q
"RTN","ORWCV",207,0)
 . S VISIT=$$APPT2VST^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",208,0)
 . I VISIT=0 S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",209,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",210,0)
 I $P(APPTINFO,";")="V" D  Q
"RTN","ORWCV",211,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",212,0)
 . D DETNOTE^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",213,0)
 I $P(APPTINFO,";")="I" D  Q
"RTN","ORWCV",214,0)
 . S VISIT=+$$GETENC^PXAPI(DFN,$P(APPTINFO,";",2),$P(APPTINFO,";",3))
"RTN","ORWCV",215,0)
 . D DETSUM^ORQQVS(.RPT,DFN,VISIT)
"RTN","ORWCV",216,0)
 . K ^TMP("PXKENC",$J)
"RTN","ORWCV",217,0)
 I $P(APPTINFO,";")="R" D RCDTL^SDRROR
"RTN","ORWCV",218,0)
 Q
"RTN","ORWCV",219,0)
X2FM(X) ; return FM date given relative date
"RTN","ORWCV",220,0)
 N %DT S %DT="TS" D ^%DT
"RTN","ORWCV",221,0)
 Q Y
"RTN","ORWCV",222,0)
RNGLAB(DFN) ; return days back for patient
"RTN","ORWCV",223,0)
 N INPT,PAR,LOC
"RTN","ORWCV",224,0)
 S INPT=0 I $L($G(^DPT(DFN,.1))) S INPT=1,LOC=^(.1)
"RTN","ORWCV",225,0)
 S PAR="ORQQLR DATE RANGE "_$S(INPT:"INPT",1:"OUTPT")
"RTN","ORWCV",226,0)
 Q $$GET^XPAR("ALL"_$S(INPT:"^LOC."_LOC,1:""),PAR,1,"I")
"RTN","ORWCV",227,0)
 ;
"RTN","ORWCV",228,0)
RNGVBEG() ; return start date for encounters
"RTN","ORWCV",229,0)
 Q $$GET^XPAR("ALL","ORQQCSDR CS RANGE START",1,"I")
"RTN","ORWCV",230,0)
 ;
"RTN","ORWCV",231,0)
RNGVEND() ; return stop date for encounters
"RTN","ORWCV",232,0)
 Q $$GET^XPAR("ALL","ORQQCSDR CS RANGE STOP",1,"I")
"RTN","ORWCV",233,0)
 ;
"RTN","ORWCV",234,0)
RANGES(REC,DFN) ; return ranges given a patient
"RTN","ORWCV",235,0)
 N REC
"RTN","ORWCV",236,0)
 S REC=$$RNGLAB(DFN)_U_$$RNGVBEG_U_$$RNGVEND
"RTN","ORWCV",237,0)
 Q
"RTN","ORWD")
0^46^B39271044
"RTN","ORWD",1,0)
ORWD ; SLC/KCM - Utilities for Windows Dialogs ;7/2/01  13:31
"RTN","ORWD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,280**;Dec 17, 1997;Build 85
"RTN","ORWD",3,0)
 ;
"RTN","ORWD",4,0)
DT(Y,X) ; Returns internal Fileman Date/Time
"RTN","ORWD",5,0)
 N %DT S %DT="TS" D ^%DT
"RTN","ORWD",6,0)
 Q
"RTN","ORWD",7,0)
PROVKEY(VAL,USERID) ; Returns 1 if user possesses the provider key
"RTN","ORWD",8,0)
 N NAM S NAM=$P(^VA(200,USERID,0),U,1)
"RTN","ORWD",9,0)
 S VAL=$D(^VA(200,"AK.PROVIDER",NAM,USERID))
"RTN","ORWD",10,0)
 Q
"RTN","ORWD",11,0)
KEY(VAL,KEYNAME,USERID) ; Returns 1 if user possesses the key
"RTN","ORWD",12,0)
 S VAL=0 I $D(^XUSEC(KEYNAME,USERID)) S VAL=1
"RTN","ORWD",13,0)
 Q
"RTN","ORWD",14,0)
OI(Y,XREF,DIR,FROM) ; Return a bolus of orderable items
"RTN","ORWD",15,0)
 ; .Return Array, Cross Reference (S.xxx), Direction, Starting Text
"RTN","ORWD",16,0)
 N I,IEN,CNT S CNT=44
"RTN","ORWD",17,0)
 ;
"RTN","ORWD",18,0)
 I DIR=0 D  ; Forward direction
"RTN","ORWD",19,0)
 . F I=1:1:CNT S FROM=$O(^ORD(101.43,XREF,FROM)) Q:FROM=""  D
"RTN","ORWD",20,0)
 . . S Y(I)=$O(^ORD(101.43,XREF,FROM,0))_"^"_FROM
"RTN","ORWD",21,0)
 . I $G(Y(CNT))="" S Y(I)=""
"RTN","ORWD",22,0)
 ;
"RTN","ORWD",23,0)
 I DIR=1 D  ; Reverse direction
"RTN","ORWD",24,0)
 . F I=1:1:CNT S FROM=$O(^ORD(101.43,XREF,FROM),-1) Q:FROM=""  D
"RTN","ORWD",25,0)
 . . S Y(I)=$O(^ORD(101.43,XREF,FROM,0))_"^"_FROM
"RTN","ORWD",26,0)
 Q
"RTN","ORWD",27,0)
ODEF(Y,DLG) ; Return the definition for a dialog
"RTN","ORWD",28,0)
 Q:'$L(DLG)
"RTN","ORWD",29,0)
 S DLG=+$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWD",30,0)
 Q:$D(^ORD(101.41,DLG,50))<10
"RTN","ORWD",31,0)
 N I,IEN,IDX
"RTN","ORWD",32,0)
 S I=0,IDX=0
"RTN","ORWD",33,0)
 S Y(0)=$P($G(^ORD(101.41,DLG,5)),"^",4)
"RTN","ORWD",34,0)
 F  S I=$O(^ORD(101.41,DLG,50,"AC",I)) Q:I=""  S IEN=$O(^(I,0)) D
"RTN","ORWD",35,0)
 . S IDX=IDX+1,Y(IDX)=$G(^ORD(101.41,DLG,50,IEN,0))
"RTN","ORWD",36,0)
 Q
"RTN","ORWD",37,0)
DEF(Y,DLG) ; Return format mapping for a dialog
"RTN","ORWD",38,0)
 ; Y(n): CtrlName^DlgPtr^FmtSeq^Fmt^Omit^Lead^Trail^Mult?^chd1~chd2~...
"RTN","ORWD",39,0)
 I DLG="NOT IMPLEMENTED" S Y(0)="0^0" Q                 ; for testing
"RTN","ORWD",40,0)
 S DLG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWD",41,0)
 N I,J,K,N,X0,X2,XW,DPTR
"RTN","ORWD",42,0)
 S Y(0)=$P(^ORD(101.41,DLG,0),U,5)_U_DLG
"RTN","ORWD",43,0)
 S I=0,N=0
"RTN","ORWD",44,0)
 F  S I=$O(^ORD(101.41,DLG,10,I)) Q:I'>0  D
"RTN","ORWD",45,0)
 . S X0=$G(^ORD(101.41,DLG,10,I,0)),DPTR=$P(X0,U,2)
"RTN","ORWD",46,0)
 . S X2=$G(^ORD(101.41,DLG,10,I,2))
"RTN","ORWD",47,0)
 . S XW=$G(^ORD(101.41,DLG,10,I,"W"))
"RTN","ORWD",48,0)
 . S N=N+1,Y(N)=$P(XW,U,1)_U_DPTR_U_X2,CHLD=""
"RTN","ORWD",49,0)
 . S J=0 F  S J=$O(^ORD(101.41,DLG,10,"DAD",DPTR,J)) Q:'J  D
"RTN","ORWD",50,0)
 . . S K=0 F  S K=$O(^ORD(101.41,DLG,10,"DAD",DPTR,J,K)) Q:'K  D
"RTN","ORWD",51,0)
 . . . S CHLD=CHLD_$P(^ORD(101.41,DLG,10,K,0),U,2)_"~"
"RTN","ORWD",52,0)
 . S $P(Y(N),U,8)=CHLD
"RTN","ORWD",53,0)
 Q
"RTN","ORWD",54,0)
FORMID(VAL,ORIFN) ; procedure
"RTN","ORWD",55,0)
 ; Returns the Dialog Form ID
"RTN","ORWD",56,0)
 N X
"RTN","ORWD",57,0)
 S VAL=0,X=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWD",58,0)
 Q:$P(X,";",2)'="ORD(101.41,"
"RTN","ORWD",59,0)
 S VAL=+$P($G(^ORD(101.41,+X,5)),U,5)
"RTN","ORWD",60,0)
 ; I X S VAL=$P($G(^XTV(8989.52,+X,0)),U,2)
"RTN","ORWD",61,0)
 Q
"RTN","ORWD",62,0)
GET4EDIT(LST,ORIFN) ; procedure
"RTN","ORWD",63,0)
 ; return responses in format that can be used by dialog
"RTN","ORWD",64,0)
 N ILST,PRMT,INST,DLG,ORDIALOG S ILST=0
"RTN","ORWD",65,0)
 I '$D(ORIFN) S LST=0 Q
"RTN","ORWD",66,0)
 S ORIFN=+ORIFN,DLG=+$P(^OR(100,ORIFN,0),U,5)
"RTN","ORWD",67,0)
 D GETDLG1^ORCD(DLG),GETORDER^ORCD("^OR(100,"_ORIFN_",4.5)")
"RTN","ORWD",68,0)
 S PRMT=0 F  S PRMT=$O(ORDIALOG(PRMT)) Q:'PRMT  D
"RTN","ORWD",69,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PRMT,INST)) Q:'INST  D
"RTN","ORWD",70,0)
 . . S ILST=ILST+1,LST(ILST)="~"_PRMT_U_INST_U_$P(ORDIALOG(PRMT),U,3)
"RTN","ORWD",71,0)
 . . S ILST=ILST+1,LST(ILST)="d"_ORDIALOG(PRMT,INST)
"RTN","ORWD",72,0)
 . . I $E(ORDIALOG(PRMT,INST))=U D                 ; load word processing
"RTN","ORWD",73,0)
 . . . N I,REF S I=0,REF=ORDIALOG(PRMT,INST)
"RTN","ORWD",74,0)
 . . . F  S I=$O(@REF@(I)) Q:'I  S ILST=ILST+1,LST(ILST)="t"_^(I,0)
"RTN","ORWD",75,0)
 . . E  S $P(LST(ILST),U,2)=$$EXT^ORCD(PRMT,INST)  ; load external value
"RTN","ORWD",76,0)
 . . I "R"[$E(ORDIALOG(PRMT,0)) D
"RTN","ORWD",77,0)
 . . . S $P(LST(ILST),U,2)=$$UP^XLFSTR($$FMTE^XLFDT(ORDIALOG(PRMT,INST)))
"RTN","ORWD",78,0)
 Q
"RTN","ORWD",79,0)
EXTDT(X) ; Return an external date time that can be interpreted by %DT
"RTN","ORWD",80,0)
 I $E(X)="T" Q "TODAY"_$E(X,2,255)
"RTN","ORWD",81,0)
 I $E(X)="V" Q "NEXT VISIT"_$E(X,2,255)
"RTN","ORWD",82,0)
 Q ""
"RTN","ORWD",83,0)
SAVE(Y,DFN,ORNP,LOC,DLG,ORWDACT,RSP) ; procedure
"RTN","ORWD",84,0)
 ; Save order
"RTN","ORWD",85,0)
 N ORDIALOG,ORL,ORVP,ORIFN,ORDUZ,ORSTS,ORDG,OREVENT,ORCAT,ORDA
"RTN","ORWD",86,0)
 I $P(^ORD(101.41,+DLG,0),U)="PSO OERR" S ORCAT="O"
"RTN","ORWD",87,0)
 I $P(^ORD(101.41,+DLG,0),U)="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWD",88,0)
 S ORVP=DFN_";DPT(",ORL(2)=LOC_";SC(",ORL=ORL(2)
"RTN","ORWD",89,0)
 D GETDLG^ORCD(DLG)
"RTN","ORWD",90,0)
 M ORDIALOG=RSP S ORDIALOG=DLG
"RTN","ORWD",91,0)
 I ORWDACT="N" D
"RTN","ORWD",92,0)
 . D EN^ORCSAVE
"RTN","ORWD",93,0)
 . S Y="" I ORIFN D GETBYIFN^ORWORR(.Y,ORIFN)
"RTN","ORWD",94,0)
 I $P(ORWDACT,U,1)="E" D
"RTN","ORWD",95,0)
 . S ORIFN=+$P(ORWDACT,U,2) D XX^ORCSAVE
"RTN","ORWD",96,0)
 . S Y="" S ORIFN=+$P(ORWDACT,U,2)_";"_ORDA D GETBYIFN^ORWORR(.Y,ORIFN)
"RTN","ORWD",97,0)
 Q
"RTN","ORWD",98,0)
SIGN(ERRLST,DFN,ORNP,LOC,ORWSIGN) ; procedure
"RTN","ORWD",99,0)
 ; Sign orders (ORIFN;ACT^RELSTS^SIGSTS^NATR)
"RTN","ORWD",100,0)
 N ORVP,ORL,IDX,ANERROR,ERRCNT
"RTN","ORWD",101,0)
 S ORVP=DFN_";DPT(",ORL(2)=LOC_";SC(",ORL=ORL(2),ERRCNT=0
"RTN","ORWD",102,0)
 I '$D(^XUSEC("ORES",DUZ)) S ERRLST(1)=0_U_"Must have ORES key." Q
"RTN","ORWD",103,0)
 S IDX=0 F  S IDX=$O(ORWSIGN(IDX)) Q:'IDX  S X=ORWSIGN(IDX) D
"RTN","ORWD",104,0)
 . ; ** change NATR when GUI changed to pass Nature in 4th piece
"RTN","ORWD",105,0)
 . S ORIFN=$P(X,U),RELSTS=$P(X,U,2),SIGSTS=$P(X,U,3),NATR="E" ;$P(X,U,4)
"RTN","ORWD",106,0)
 . I SIGSTS=2 D NOTIF^ORCSIGN S ANERROR=""
"RTN","ORWD",107,0)
 . I SIGSTS'=2 D EN^ORCSEND(ORIFN,"",SIGSTS,RELSTS,NATR,"",.ANERROR)
"RTN","ORWD",108,0)
 . I $L(ANERROR) D  Q           ; don't print if an error occurred
"RTN","ORWD",109,0)
 . . S ERRCNT=ERRCNT+1,ERRLST(ERRCNT)=$P(ORWSIGN(IDX),U)_U_ANERROR
"RTN","ORWD",110,0)
 . . K ORWSIGN(IDX)
"RTN","ORWD",111,0)
 . I RELSTS=0 K ORWSIGN(IDX) Q  ; don't print if unreleased
"RTN","ORWD",112,0)
 . S ORWSIGN(IDX)=$P(ORWSIGN(IDX),U)
"RTN","ORWD",113,0)
 D PRINTS^ORWD1(.ORWSIGN,LOC)
"RTN","ORWD",114,0)
 Q
"RTN","ORWD",115,0)
VALIDACT(VAL,ORIFN,ACTION) ;procedure
"RTN","ORWD",116,0)
 ; Return 1 if action is valid for this order, otherwise 0^error
"RTN","ORWD",117,0)
 S VAL=$$VALID^ORCACT0(ORIFN,ACTION,.ERR)
"RTN","ORWD",118,0)
 I VAL=0 S VAL=VAL_U_ERR
"RTN","ORWD",119,0)
 Q
"RTN","ORWD",120,0)
SAVEACT(LST,ORIFN,ACTION,REASON,DFN,ORNP,LOC) ;procedure
"RTN","ORWD",121,0)
 ; Save this action for the order (it is still unsigned/unreleased)
"RTN","ORWD",122,0)
 N ORDIALOG,ORL,ORVP,ORDUZ,ORSTS,ORDG,OREVENT,ACTDA,SIGSTS,RELSTS,ASTS
"RTN","ORWD",123,0)
 S ORVP=DFN_";DPT(",ORL(2)=LOC_";SC("
"RTN","ORWD",124,0)
 S SIGSTS=2,RELSTS=11
"RTN","ORWD",125,0)
 I '$P(ORIFN,";",2) S $P(ORIFN,";",2)=1
"RTN","ORWD",126,0)
 I (ACTION="FL")!(ACTION="UF")!(ACTION="WC") S SIGSTS=3,RELSTS=""
"RTN","ORWD",127,0)
 S ASTS=$P(^OR(100,+ORIFN,8,+$P(ORIFN,";",2),0),U,15)
"RTN","ORWD",128,0)
 I ACTION="DC",((ASTS=10)!(ASTS=11)) D  Q       ; exit here if DELETE
"RTN","ORWD",129,0)
 . D GETBYIFN^ORWORR(.LST,ORIFN)
"RTN","ORWD",130,0)
 . S $P(LST(1),U,1)="~0",LST(2)="tDELETED - "_$E(LST(2),2,245)
"RTN","ORWD",131,0)
 . D CANCEL^ORCSAVE2(ORIFN)
"RTN","ORWD",132,0)
 ;
"RTN","ORWD",133,0)
 ; the only valid action for ActDA>1 is deletion, so only orders 
"RTN","ORWD",134,0)
 ; identified by ORIFN;1 should reach this point
"RTN","ORWD",135,0)
 ;
"RTN","ORWD",136,0)
 I $P(ORIFN,";",2)>1 S $ECODE=",Uorder action invalid," Q
"RTN","ORWD",137,0)
 I ACTION="FL" S $P(^OR(100,+ORIFN,6),U,1)=1
"RTN","ORWD",138,0)
 I ACTION="UF" S $P(^OR(100,+ORIFN,6),U,1)=0
"RTN","ORWD",139,0)
 I ACTION'="RN" D
"RTN","ORWD",140,0)
 . S ACTDA=$$ACTION^ORCSAVE(ACTION,+ORIFN,ORNP,REASON)
"RTN","ORWD",141,0)
 I ACTION="RN" D
"RTN","ORWD",142,0)
 . N ORDA,ORDIALOG,PRMT,SAVIFN,X0
"RTN","ORWD",143,0)
 . S SAVIFN=+ORIFN,X0=^OR(100,+ORIFN,0)
"RTN","ORWD",144,0)
 . I $P(X0,U,5)["101.41," D                        ; version 3
"RTN","ORWD",145,0)
 . . S ORDIALOG=+$P(X0,U,5),ORCAT=$P(^OR(100,+ORIFN,0),U,12)
"RTN","ORWD",146,0)
 . . D GETDLG^ORCD(ORDIALOG),GETORDER^ORCD(+ORIFN)
"RTN","ORWD",147,0)
 . E  D                                            ; version 2.5 generic
"RTN","ORWD",148,0)
 . . S ORDIALOG=$O(^ORD(101.41,"B","OR GXTEXT WORD PROCESSING ORDE",0))
"RTN","ORWD",149,0)
 . . D GETDLG^ORCD(ORDIALOG)
"RTN","ORWD",150,0)
 . . S PRMT=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWD",151,0)
 . . S ORDIALOG(PRMT,1)=$NA(^TMP("ORWORD",$J,PRMT,1))
"RTN","ORWD",152,0)
 . . M ^TMP("ORWORD",$J,PRMT,1)=^OR(100,+ORIFN,1)
"RTN","ORWD",153,0)
 . . S PRMT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWD",154,0)
 . . I $P(X0,U,9) S ORDIALOG(PRMT,1)=$P(X0,U,9)
"RTN","ORWD",155,0)
 . D RN^ORCSAVE I 'ORIFN S $ECODE=",UCPRS renew order,"
"RTN","ORWD",156,0)
 . S ACTDA=ORDA,ORIFN=SAVIFN
"RTN","ORWD",157,0)
 I (ACTION="FL")!(ACTION="UF") S ACTDA=1
"RTN","ORWD",158,0)
 D GETBYIFN^ORWORR(.LST,+ORIFN_";"_ACTDA)
"RTN","ORWD",159,0)
 S $P(LST(1),U,12)=ACTDA
"RTN","ORWD",160,0)
 Q
"RTN","ORWDPS3")
0^47^B20975704
"RTN","ORWDPS3",1,0)
ORWDPS3 ; SLC/KCM/JLI - Order Dialogs, Menus;01/18/2006
"RTN","ORWDPS3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,94,116,132,187,195,215,280**;Dec 17, 1997;Build 85
"RTN","ORWDPS3",3,0)
MEDXFER ; -- setup ORDIALOG for a med that is transferred (from SETUP^ORWDXM4)
"RTN","ORWDPS3",4,0)
 N IVDIALOG,OI K ^TMP("PS",$J)
"RTN","ORWDPS3",5,0)
 S IVDIALOG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDPS3",6,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","PS MEDS",0))
"RTN","ORWDPS3",7,0)
 I +$P($G(^OR(100,+ORIT,0)),U,5)=IVDIALOG S ORDIALOG=IVDIALOG
"RTN","ORWDPS3",8,0)
 S ORDG=+$P(^ORD(101.41,ORDIALOG,0),U,5)
"RTN","ORWDPS3",9,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDPS3",10,0)
 D GETORDER^ORCD("^OR(100,"_+ORIT_",4.5)")
"RTN","ORWDPS3",11,0)
 ;I ORDIALOG=IVDIALOG Q
"RTN","ORWDPS3",12,0)
 S OI=$$VAL^ORCD("MEDICATION")
"RTN","ORWDPS3",13,0)
 I ORDIALOG'=IVDIALOG,'$$MEDOK(OI,ORCAT) D SETERR(ORIT,"This may not be ordered as an "_$S(ORCAT="I":"in",1:"out")_"patient drug.") Q
"RTN","ORWDPS3",14,0)
 I +$G(OI)>0,$G(^ORD(101.43,OI,.1)),(^(.1)<$$NOW^XLFDT) D SETERR(ORIT,"This may no longer be ordered.") Q
"RTN","ORWDPS3",15,0)
 I (ORDIALOG'=IVDIALOG),(ORCAT="I") D OUT^ORCMED
"RTN","ORWDPS3",16,0)
 I (ORDIALOG'=IVDIALOG),(ORCAT="O") D IN^ORCMED
"RTN","ORWDPS3",17,0)
 S ORWPSWRG="" ; force interactive dialog for transfers
"RTN","ORWDPS3",18,0)
 Q
"RTN","ORWDPS3",19,0)
MEDOK(OI,CAT)   ; return 1 if med may be ordered for this patient category
"RTN","ORWDPS3",20,0)
 N P S P=$S(CAT="I":1,1:2)
"RTN","ORWDPS3",21,0)
 I ORIMO S P=1
"RTN","ORWDPS3",22,0)
 N THEGRP,INPTGRP
"RTN","ORWDPS3",23,0)
 S THEGRP=0
"RTN","ORWDPS3",24,0)
 I $D(ORIT),+ORIT S THEGRP=$P($G(^OR(100,+ORIT,0)),U,11)
"RTN","ORWDPS3",25,0)
 S INPTGRP=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDPS3",26,0)
 I P=2,(INPTGRP=THEGRP),($P($G(^ORD(101.43,+OI,"PS")),U,1)=2) Q 2
"RTN","ORWDPS3",27,0)
 E  Q $P($G(^ORD(101.43,+OI,"PS")),U,P)
"RTN","ORWDPS3",28,0)
 ;
"RTN","ORWDPS3",29,0)
SETERR(ID,X)       ; sets LST to rejection with error message
"RTN","ORWDPS3",30,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDPS3",31,0)
 S LST(0)="8^0",LST(.5)=X,LST(.6)=""
"RTN","ORWDPS3",32,0)
 Q
"RTN","ORWDPS3",33,0)
 ;
"RTN","ORWDPS3",34,0)
PS ; setup environment for medications
"RTN","ORWDPS3",35,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDPS3",36,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J)
"RTN","ORWDPS3",37,0)
 N PROMPT,OI
"RTN","ORWDPS3",38,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDPS3",39,0)
 S OI=""
"RTN","ORWDPS3",40,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=ORDIALOG(PROMPT,1) D MEDACTV Q:$G(ORQUIT)
"RTN","ORWDPS3",41,0)
 N PSOI
"RTN","ORWDPS3",42,0)
 S PSOI=+$P($G(^ORD(101.43,+OI,0)),U,2) D START^PSSJORDF(PSOI,ORCAT)
"RTN","ORWDPS3",43,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX SCHEDULE",0))
"RTN","ORWDPS3",44,0)
 I $D(ORDIALOG(PROMPT,1)) S ORSCH=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",45,0)
 I (ORCAT="I"),$L($G(ORSCH)) D
"RTN","ORWDPS3",46,0)
 . S ORSD=""
"RTN","ORWDPS3",47,0)
 . I $L($G(^DPT(+ORVP,.1))) S ORSD=$$STARTSTP^PSJORPOE(+ORVP,ORSCH,PSOI,+$G(ORWARD),"")
"RTN","ORWDPS3",48,0)
 . I $P(ORSD,U)="NEXT" S $P(ORSD,U)="NEXTA"
"RTN","ORWDPS3",49,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DAYS SUPPLY",0))
"RTN","ORWDPS3",50,0)
 I $D(ORDIALOG(PROMPT,1)) S ORDSUP=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",51,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX DISPENSE DRUG",0))
"RTN","ORWDPS3",52,0)
 I $D(ORDIALOG(PROMPT,1)) S ORDRUG=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",53,0)
 S PROMPT=$O(^ORD(101.41,"AB","OR GTX REFILLS",0))
"RTN","ORWDPS3",54,0)
 I $D(ORDIALOG(PROMPT,1)) S OREFILLS=ORDIALOG(PROMPT,1)
"RTN","ORWDPS3",55,0)
 I ORCAT="O" S ORCOPAY=$$ASKSC^ORCDPS1
"RTN","ORWDPS3",56,0)
 I ORCAT="I" S PROMPT=$O(^ORD(101.41,"AB","OR GTX START DATE/TIME",0)) D
"RTN","ORWDPS3",57,0)
 . I $L($P($G(ORSD),U)),'$D(ORDIALOG(PROMPT,1)) S ORDIALOG(PROMPT,1)=$P(ORSD,U)
"RTN","ORWDPS3",58,0)
 ; create a SIG if none exists (i.e., when copying pre-POE orders)
"RTN","ORWDPS3",59,0)
 I '$L($G(ORDIALOG($$PTR^ORCD("OR GTX SIG"),1))) D
"RTN","ORWDPS3",60,0)
 . N ORDOSE,ORDRUG,ORWPSOI,PROMPT,DRUG
"RTN","ORWDPS3",61,0)
 . S PROMPT=$$PTR^ORCD("OR GTX INSTRUCTIONS")
"RTN","ORWDPS3",62,0)
 . S ORDRUG=$G(ORDIALOG($$PTR^ORCD("OR GTX DISPENSE DRUG"),1))
"RTN","ORWDPS3",63,0)
 . S ORWPSOI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDPS3",64,0)
 . I ORWPSOI S ORWPSOI=+$P($G(^ORD(101.43,+ORWPSOI,0)),U,2)
"RTN","ORWDPS3",65,0)
 . D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,$S(ORCAT="I":"U",1:"O"),ORVP)       ; dflt doses
"RTN","ORWDPS3",66,0)
 . D D1^ORCDPS2  ; set up ORDOSE & xrefs in ORDIALOG
"RTN","ORWDPS3",67,0)
 . S DRUG=$G(ORDOSE("DD",+ORDRUG))
"RTN","ORWDPS3",68,0)
 . I DRUG,ORCAT="O" D RESETID^ORCDPS
"RTN","ORWDPS3",69,0)
 . D SIG^ORCDPS2
"RTN","ORWDPS3",70,0)
 Q
"RTN","ORWDPS3",71,0)
AUTHMED ; sets ORQUIT if not authorized to write meds
"RTN","ORWDPS3",72,0)
 N NOAUTH,NAME
"RTN","ORWDPS3",73,0)
 D AUTH^ORWDPS32(.NOAUTH,ORNP)
"RTN","ORWDPS3",74,0)
 I +NOAUTH D
"RTN","ORWDPS3",75,0)
 . S ORQUIT=1
"RTN","ORWDPS3",76,0)
 . S LST(0)="8^0"
"RTN","ORWDPS3",77,0)
 . I $P(NOAUTH,U,2)'="" S LST(.5)=$P(NOAUTH,U,2) Q
"RTN","ORWDPS3",78,0)
 . S NAME=$P($G(^VA(200,+ORNP,20)),U,2)
"RTN","ORWDPS3",79,0)
 . I '$L(NAME) S NAME=$P($G(^VA(200,+ORNP,0)),U,1)
"RTN","ORWDPS3",80,0)
 . S LST(.5)=NAME_" is not authorized to write med orders."
"RTN","ORWDPS3",81,0)
 Q
"RTN","ORWDPS3",82,0)
MEDACTV ; sets ORQUIT if the orderable item is not active for a med
"RTN","ORWDPS3",83,0)
 Q:'$G(OI)
"RTN","ORWDPS3",84,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDPS3",85,0)
 . S ORQUIT=1
"RTN","ORWDPS3",86,0)
 . S LST(0)="8^0"
"RTN","ORWDPS3",87,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDPS3",88,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDPS3",89,0)
 ; copied from ORDITM^ORCDPS1 to make sure quick order if for right dialog
"RTN","ORWDPS3",90,0)
 N ORPS,PSOI,ORIV,ORINPT
"RTN","ORWDPS3",91,0)
 S ORINPT=$$INPT^ORCD
"RTN","ORWDPS3",92,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS")),PSOI=+$P($G(^(0)),U,2)
"RTN","ORWDPS3",93,0)
 S ORIV=$S($P(ORPS,U)=2:1,1:0)
"RTN","ORWDPS3",94,0)
 I $G(ORCAT)="O",'$P(ORPS,U,2),'ORIMO S LST(.5)="This drug may not be used in an outpatient order."
"RTN","ORWDPS3",95,0)
 I $G(ORCAT)="I" D
"RTN","ORWDPS3",96,0)
 . I $G(ORINPT),'$P(ORPS,U),'ORIMO S LST(.5)="This drug may not be used in an inpatient order."
"RTN","ORWDPS3",97,0)
 . I '$G(ORINPT),'ORIV,'ORIMO S LST(.5)="This drug may not be ordered for an outpatient."
"RTN","ORWDPS3",98,0)
 I $L($G(LST(.5))) S ORQUIT=1,LST(0)="8^0"
"RTN","ORWDPS3",99,0)
 Q
"RTN","ORWDPS33")
0^48^B40244944
"RTN","ORWDPS33",1,0)
ORWDPS33 ; SLC/KCM - Pharmacy Calls for GUI Dialog ;10/07/10
"RTN","ORWDPS33",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,280**;Dec 17, 1997;Build 85
"RTN","ORWDPS33",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORWDPS33",4,0)
 ;This routine move several RPCs from ORWDPS32 because of the routine size
"RTN","ORWDPS33",5,0)
 ;
"RTN","ORWDPS33",6,0)
COMPLOC(ORY,ORID,LOC) ;
"RTN","ORWDPS33",7,0)
 S ORY=0
"RTN","ORWDPS33",8,0)
 I LOC'=+$P($G(^OR(100,+ORID,0)),U,10) S ORY=1
"RTN","ORWDPS33",9,0)
 Q
"RTN","ORWDPS33",10,0)
DOSES(LST,OI) ; return doses for an orderable item  -  TEST ONLY
"RTN","ORWDPS33",11,0)
 N ORTMP,ORI,ORJ,ILST,LTSA,NDF,ORWDRG,VAPN,X,PSTYPE S PSTYPE="O"
"RTN","ORWDPS33",12,0)
 D ENDD^PSJORUTL("^^^"_+$P($G(^ORD(101.43,OI,0)),"^",2),PSTYPE,.ORTMP)
"RTN","ORWDPS33",13,0)
 S ORI=0 F  S ORI=$O(ORTMP(ORI)) Q:'ORI  S ORWDRG=+ORTMP(ORI) D
"RTN","ORWDPS33",14,0)
 . K ^TMP($J,"ORWDPS32 DRUG")
"RTN","ORWDPS33",15,0)
 . D NDF^PSS50(+ORWDRG,,,,,"ORWDPS32 DRUG")
"RTN","ORWDPS33",16,0)
 . S VAPN=$P($G(^TMP($J,"ORWDPS32 DRUG",+ORWDRG,22)),U),NDF=$P($G(^TMP($J,"ORWDPS32 DRUG",+ORWDRG,20)),U)
"RTN","ORWDPS33",17,0)
 . S X=$$DFSU^PSNAPIS(NDF,VAPN)
"RTN","ORWDPS33",18,0)
 . S LSTA($P(X,U,4),$P(X,U,6))=""
"RTN","ORWDPS33",19,0)
 . I +$P(X,U,4)=$P(X,U,4) S LSTA($P(X,U,4)*2,$P(X,U,6))=""
"RTN","ORWDPS33",20,0)
 K ^TMP($J,"ORWDPS32 DRUG")
"RTN","ORWDPS33",21,0)
 S ORI="",ILST=0 F  S ORI=$O(LSTA(ORI)) Q:ORI=""  D
"RTN","ORWDPS33",22,0)
 . S ORJ="" F  S ORJ=$O(LSTA(ORI,ORJ)) Q:ORJ=""  D
"RTN","ORWDPS33",23,0)
 . . S ILST=ILST+1,LST(ILST)=ORI_" "_ORJ
"RTN","ORWDPS33",24,0)
 Q
"RTN","ORWDPS33",25,0)
 ;
"RTN","ORWDPS33",26,0)
DRUGMSG(VAL,IEN)        ; return any message associated with a dispense drug
"RTN","ORWDPS33",27,0)
 N X S X=$$ENDCM^PSJORUTL(IEN)
"RTN","ORWDPS33",28,0)
 S VAL=$P(X,U,2)_U_$P(X,U,4)
"RTN","ORWDPS33",29,0)
 Q
"RTN","ORWDPS33",30,0)
 ;
"RTN","ORWDPS33",31,0)
FORMALT(ORLST,IEN,PSTYPE) ; return a list of formulary alternatives
"RTN","ORWDPS33",32,0)
 D ENRFA^PSJORUTL(IEN,PSTYPE,.ORLST)
"RTN","ORWDPS33",33,0)
 S I=0 F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORWDPS33",34,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(ORLST(I),U,4)_";99PSP",0))
"RTN","ORWDPS33",35,0)
 . S $P(ORLST(I),U,4)=OI I OI S $P(ORLST(I),U,5)=$P(^ORD(101.43,OI,0),U)
"RTN","ORWDPS33",36,0)
 Q
"RTN","ORWDPS33",37,0)
 ;
"RTN","ORWDPS33",38,0)
GETADDFR(ORY,OIIEN) ;
"RTN","ORWDPS33",39,0)
 N PSOI,TEMP
"RTN","ORWDPS33",40,0)
 S ORY=""
"RTN","ORWDPS33",41,0)
 S PSOI=+$P($G(^ORD(101.43,OIIEN,0)),U,2)
"RTN","ORWDPS33",42,0)
 S TEMP=$$IV^PSSDSAPA(PSOI)
"RTN","ORWDPS33",43,0)
 S ORY=$$ADDFRQCV^ORMBLDP1(TEMP,"I")
"RTN","ORWDPS33",44,0)
 Q
"RTN","ORWDPS33",45,0)
 ;
"RTN","ORWDPS33",46,0)
ISVALIV(RESULT,ORID,ACTION) ;
"RTN","ORWDPS33",47,0)
 N ARRAY,CNT,ID,IVD,NUM,ORDERID,OUTPUT,ROUTE,ROUTEID,TYPE
"RTN","ORWDPS33",48,0)
 S TYPE=$S(ACTION="XFR":"transfered",ACTION="RN":"renewed",1:"copied")
"RTN","ORWDPS33",49,0)
 S IVD=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE","")) Q:IVD'>0
"RTN","ORWDPS33",50,0)
 I +$P($G(^OR(100,+ORID,0)),U,5)'=IVD Q
"RTN","ORWDPS33",51,0)
 S ORDERID="",ROUTEID="",CNT=0
"RTN","ORWDPS33",52,0)
 F  S ORDERID=$O(^OR(100,+ORID,4.5,"ID","ORDERABLE",ORDERID)) Q:ORDERID'>0  D
"RTN","ORWDPS33",53,0)
 .I +$G(^OR(100,+ORID,4.5,ORDERID,1))'>0 Q
"RTN","ORWDPS33",54,0)
 .S CNT=CNT+1,ARRAY(CNT)=^OR(100,+ORID,4.5,ORDERID,1)
"RTN","ORWDPS33",55,0)
 S ROUTEID=+$O(^OR(100,+ORID,4.5,"ID","ROUTE","")) I ROUTEID'>0 D  Q
"RTN","ORWDPS33",56,0)
 .S RESULT="This order contains an invalid route. It cannot be "_TYPE_"."
"RTN","ORWDPS33",57,0)
 S ROUTE=+$G(^OR(100,+ORID,4.5,ROUTEID,1)) I ROUTE'>0 D  Q
"RTN","ORWDPS33",58,0)
 .S RESULT="This order contains an invalid route. It cannot be "_TYPE_"."
"RTN","ORWDPS33",59,0)
 S OUTPUT=$$IVQOVAL(.ARRAY,ROUTE) I OUTPUT="" D
"RTN","ORWDPS33",60,0)
 .;S TYPE=$S(ACTION="XFR":"transfered",ACTION="RN":"renewed",1:"copied")
"RTN","ORWDPS33",61,0)
 .S RESULT="This order contains an invalid route. It cannot be "_TYPE_"."
"RTN","ORWDPS33",62,0)
 I RESULT'="" Q
"RTN","ORWDPS33",63,0)
 N IVTYPE,IVTYPEID,INFUSEID,INFUSE
"RTN","ORWDPS33",64,0)
 S IVTYPEID=+$O(^OR(100,+ORID,4.5,"ID","TYPE","")) I IVTYPEID'>0 D  Q
"RTN","ORWDPS33",65,0)
 .S RESULT="This order contains an  invalid IV Type. It cannot be "_TYPE_"."
"RTN","ORWDPS33",66,0)
 S IVTYPE=$G(^OR(100,+ORID,4.5,IVTYPEID,1)) I IVTYPE="" D  Q
"RTN","ORWDPS33",67,0)
 .S RESULT="This order contains an invalid IV Type. It cannot be "_TYPE_"."
"RTN","ORWDPS33",68,0)
 S INFUSEID=+$O(^OR(100,+ORID,4.5,"ID","RATE","")) Q:INFUSEID'>0
"RTN","ORWDPS33",69,0)
 S INFUSE=$G(^OR(100,+ORID,4.5,INFUSEID,1)) Q:INFUSE=""
"RTN","ORWDPS33",70,0)
 I $$VALINF^ORWDXM3(IVTYPE,INFUSE)=0 D
"RTN","ORWDPS33",71,0)
 .;S TYPE=$S(ACTION="XFR":"transfered",ACTION="RN":"renewed",1:"copied")
"RTN","ORWDPS33",72,0)
 .S RESULT="This order contains an invalid infusion rate. It cannot be "_TYPE_"."
"RTN","ORWDPS33",73,0)
 ;//AGP IV ADDITIVE FREQUENCY
"RTN","ORWDPS33",74,0)
 I IVTYPE="C",ACTION="RN" D
"RTN","ORWDPS33",75,0)
 .N ADDCNT,ADDIEN,ADDFCNT,SUB
"RTN","ORWDPS33",76,0)
 .S ADDIEN=$$PTR^ORCD("OR GTX ADDITIVE")
"RTN","ORWDPS33",77,0)
 .S ADDCNT=0,ADDFCNT=0,SUB=0
"RTN","ORWDPS33",78,0)
 .F  S SUB=$O(^OR(100,+ORID,4.5,"ID","ORDERABLE",SUB)) Q:SUB'>0  D
"RTN","ORWDPS33",79,0)
 ..I $P($G(^OR(100,+ORID,4.5,SUB,0)),U,2)'=ADDIEN Q
"RTN","ORWDPS33",80,0)
 ..S ADDCNT=ADDCNT+1
"RTN","ORWDPS33",81,0)
 .S SUB=0
"RTN","ORWDPS33",82,0)
 .F  S SUB=$O(^OR(100,+ORID,4.5,"ID","ADDFREQ",SUB)) Q:SUB'>0  S ADDFCNT=ADDFCNT+1
"RTN","ORWDPS33",83,0)
 .I ADDCNT'=ADDFCNT S RESULT="This order does not contain the same number of values for the Additives and the IV Additive Frequency prompts. It cannot be renewed."
"RTN","ORWDPS33",84,0)
 Q
"RTN","ORWDPS33",85,0)
 ;
"RTN","ORWDPS33",86,0)
IVQOVAL(ARRAY,ROUTE) ;
"RTN","ORWDPS33",87,0)
 N CNT,RARR,RESULT
"RTN","ORWDPS33",88,0)
 S RESULT=""
"RTN","ORWDPS33",89,0)
 D IVDOSFRM(.RARR,.ARRAY,1)
"RTN","ORWDPS33",90,0)
 S CNT="" F  S CNT=$O(RARR(CNT)) Q:CNT'>0!(RESULT'="")  D
"RTN","ORWDPS33",91,0)
 .I $P(RARR(CNT),U)=ROUTE S RESULT=RARR(CNT) Q
"RTN","ORWDPS33",92,0)
 Q RESULT
"RTN","ORWDPS33",93,0)
 ;
"RTN","ORWDPS33",94,0)
IVDOSFRM(LST,ORDERIDS,ALLIV) ;
"RTN","ORWDPS33",95,0)
 N ORARRAY,CNT,CNT1,OI,POI
"RTN","ORWDPS33",96,0)
 S OI="",CNT=0,CNT1=0
"RTN","ORWDPS33",97,0)
 F  S OI=$O(ORDERIDS(OI)) Q:OI'>0  D
"RTN","ORWDPS33",98,0)
 .S POI=+$P($G(^ORD(101.43,$G(ORDERIDS(OI)),0)),U,2) Q:POI'>0
"RTN","ORWDPS33",99,0)
 .S CNT=CNT+1
"RTN","ORWDPS33",100,0)
 .S ORARRAY(CNT)=POI
"RTN","ORWDPS33",101,0)
 I CNT=0 Q
"RTN","ORWDPS33",102,0)
 S ORARRAY(0)=CNT
"RTN","ORWDPS33",103,0)
 D START1^PSSJORDF(.ORARRAY,ALLIV)
"RTN","ORWDPS33",104,0)
 S CNT="" F  S CNT=$O(ORARRAY(CNT)) Q:CNT'>0  D
"RTN","ORWDPS33",105,0)
 .S CNT1=CNT1+1,LST(CNT1)=$G(ORARRAY(CNT))
"RTN","ORWDPS33",106,0)
 ;this temp should be killed by Pharmacy. This will be removed once
"RTN","ORWDPS33",107,0)
 ;Pharmacy send an update
"RTN","ORWDPS33",108,0)
 K ^TMP("PSJMR",$J)
"RTN","ORWDPS33",109,0)
 Q
"RTN","ORWDPS33",110,0)
 ;
"RTN","ORWDPS33",111,0)
ISSPLY(VAL,IEN) ; return true if orderable item is a supply
"RTN","ORWDPS33",112,0)
 S VAL=0
"RTN","ORWDPS33",113,0)
 I $P($G(^ORD(101.43,IEN,"PS")),U,5)=1 S VAL=1
"RTN","ORWDPS33",114,0)
 Q
"RTN","ORWDPS33",115,0)
IVAMT(VAL,OI,ORWTYP)     ; return UNITS^AMOUNT |^AMOUNT^AMOUNT...| for IV soln
"RTN","ORWDPS33",116,0)
 N I,PSOI,ORWY,AMT
"RTN","ORWDPS33",117,0)
 S PSOI=+$P($G(^ORD(101.43,OI,0)),U,2)_ORWTYP,VAL=""
"RTN","ORWDPS33",118,0)
 D ENVOL^PSJORUT2(PSOI,.ORWY)
"RTN","ORWDPS33",119,0)
 I ORWTYP="B" D
"RTN","ORWDPS33",120,0)
 . S I=0 F  S I=$O(ORWY(I)) Q:I'>0  S AMT(+ORWY(I))="" D
"RTN","ORWDPS33",121,0)
 . . I ORWY(I)<1 D  ;SBR
"RTN","ORWDPS33",122,0)
 . . . K AMT(+ORWY(I))
"RTN","ORWDPS33",123,0)
 . . . S AMT(0_+ORWY(I))=""
"RTN","ORWDPS33",124,0)
 . S AMT=0,VAL="ML" F  S AMT=$O(AMT(AMT)) Q:AMT'>0  S VAL=VAL_U_AMT
"RTN","ORWDPS33",125,0)
 I ORWTYP="A" D
"RTN","ORWDPS33",126,0)
 . S I=+$O(ORWY(0)) S VAL=$P($G(ORWY(I)),U,2)
"RTN","ORWDPS33",127,0)
 . I '$L(VAL) S VAL="ML^LITER^MCG^MG^GM^UNITS^IU^MEQ^MM^MU^THOUU^MG-PE^NANOGRAM^MMOL"
"RTN","ORWDPS33",128,0)
 Q
"RTN","ORWDPS33",129,0)
 ;
"RTN","ORWDPS33",130,0)
MEDISIV(VAL,IEN)        ; return true if orderable item is IV medication
"RTN","ORWDPS33",131,0)
 S VAL=0
"RTN","ORWDPS33",132,0)
 I $P($G(^ORD(101.43,IEN,"PS")),U)=2 S VAL=1
"RTN","ORWDPS33",133,0)
 Q
"RTN","ORWDPS33",134,0)
 ;
"RTN","ORWDPS33",135,0)
SCSTS(VAL,ORVP,ORDRUG)  ; return service connected eligibility for patient
"RTN","ORWDPS33",136,0)
 N ORWP94 S ORWP94=$O(^ORD(101.41,"AB","PS MEDS",0))>0
"RTN","ORWDPS33",137,0)
 I $L($T(SC^PSOCP)),$$SC^PSOCP(+ORVP,+$G(ORDRUG)) S VAL=0 G XSCSTS
"RTN","ORWDPS33",138,0)
 I 'ORWP94,(+$$RXST^IBARXEU(+ORVP)>0) S VAL=0 G XSCSTS
"RTN","ORWDPS33",139,0)
 S VAL=1
"RTN","ORWDPS33",140,0)
XSCSTS Q
"RTN","ORWDPS33",141,0)
 ;
"RTN","ORWDPS33",142,0)
VALQTY(OK,X)    ; validate a quantity, return 1 if valid, 0 if not
"RTN","ORWDPS33",143,0)
 ; to be compatible with LM, make sure X is integer from 1 to 240
"RTN","ORWDPS33",144,0)
 ; this is based on the input transform from 52,7
"RTN","ORWDPS33",145,0)
 K:(+X'>0)!(+X>99999999)!(X'?.8N.1".".2N)!($L(X)>12) X
"RTN","ORWDPS33",146,0)
 S OK=$S($D(X):1,1:0)
"RTN","ORWDPS33",147,0)
 Q
"RTN","ORWDPS33",148,0)
 ;
"RTN","ORWDPS33",149,0)
VALRATE(VAL,X)   ; return "1" (true) if IV rate text is valid
"RTN","ORWDPS33",150,0)
 I $E($RE($$UPPER^ORWDPS32(X)),1,5)="RH/LM"  S X=$E(X,1,$L(X)-5)
"RTN","ORWDPS33",151,0)
 S X=$$TRIM^ORWDPS32(X)
"RTN","ORWDPS33",152,0)
 D ORINF^PSIVSP S VAL=$G(X) ;S OK=$S($D(X):1,1:0)
"RTN","ORWDPS33",153,0)
 Q
"RTN","ORWDPS33",154,0)
VALSCH(OK,X,PSTYPE)    ; validate a schedule, return 1 if valid, 0 if not
"RTN","ORWDPS33",155,0)
 I '$L($T(EN^PSSGSGUI)) S OK=-1 Q
"RTN","ORWDPS33",156,0)
 I $E($T(EN^PSSGSGUI),1,4)="EN(X" D
"RTN","ORWDPS33",157,0)
 . N ORX S ORX=$G(X) D EN^PSSGSGUI(.ORX,$G(PSTYPE,"I"))
"RTN","ORWDPS33",158,0)
 . K X S:$D(ORX) X=ORX
"RTN","ORWDPS33",159,0)
 E  D
"RTN","ORWDPS33",160,0)
 . D EN^PSSGSGUI
"RTN","ORWDPS33",161,0)
 S OK=$S($D(X):1,1:0)
"RTN","ORWDPS33",162,0)
 Q
"RTN","ORWDPS33",163,0)
 ;
"RTN","ORWDRA32")
0^92^B21891696
"RTN","ORWDRA32",1,0)
ORWDRA32 ; SLC/KCM/REV/JDL - Radiology calls to support windows [6/28/02] ;04/13/10  12:43
"RTN","ORWDRA32",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,116,141,215,280**;Dec 17, 1997;Build 85
"RTN","ORWDRA32",3,0)
 ;
"RTN","ORWDRA32",4,0)
DEF(LST,PATID,EVTDIV,IMGTYP) ; Get dialog data for radiology
"RTN","ORWDRA32",5,0)
 N ILST,I,ORX S ILST=0
"RTN","ORWDRA32",6,0)
 S LST($$NXT)="~ShortList"  D SHORT
"RTN","ORWDRA32",7,0)
 S IMGTYP=$$IMTYPE(IMGTYP)
"RTN","ORWDRA32",8,0)
 S LST($$NXT)="~Common Procedures" D COMMPRO
"RTN","ORWDRA32",9,0)
 S LST($$NXT)="~Modifiers" D MODIFYR
"RTN","ORWDRA32",10,0)
 S LST($$NXT)="~Urgencies" D URGENCY
"RTN","ORWDRA32",11,0)
 S LST($$NXT)="~Transport" D TRNSPRT
"RTN","ORWDRA32",12,0)
 S LST($$NXT)="~Category" D CATEGRY
"RTN","ORWDRA32",13,0)
 S LST($$NXT)="~Submit to" D SUBMIT
"RTN","ORWDRA32",14,0)
 S LST($$NXT)="~Last 7 Days" D LAST7
"RTN","ORWDRA32",15,0)
 Q
"RTN","ORWDRA32",16,0)
MODIFYR ; Get the modifiers (should be by imaging type)
"RTN","ORWDRA32",17,0)
 S I=$O(^RA(79.2,"C",IMGTYP,0)) Q:'I
"RTN","ORWDRA32",18,0)
 S ORX=0 F  S ORX=$O(^RAMIS(71.2,"AB",I,ORX)) Q:'ORX  S LST($$NXT)="i"_ORX_U_$P(^RAMIS(71.2,ORX,0),U)
"RTN","ORWDRA32",19,0)
 Q
"RTN","ORWDRA32",20,0)
SHORT ; from DEF, get short list of imaging quick orders
"RTN","ORWDRA32",21,0)
 N I,TMP
"RTN","ORWDRA32",22,0)
 D GETQLST^ORWDXQ(.TMP,IMGTYP,"Q")
"RTN","ORWDRA32",23,0)
 S I=0 F  S I=$O(TMP(I)) Q:'I  D
"RTN","ORWDRA32",24,0)
 . S LST($$NXT)="i"_TMP(I)
"RTN","ORWDRA32",25,0)
 Q
"RTN","ORWDRA32",26,0)
COMMPRO ; Get the common procedures
"RTN","ORWDRA32",27,0)
 N ORX
"RTN","ORWDRA32",28,0)
 S ORX=""
"RTN","ORWDRA32",29,0)
 F  S ORX=$O(^ORD(101.43,"COMMON",IMGTYP,ORX)) Q:ORX=""  D
"RTN","ORWDRA32",30,0)
 . S I=$O(^ORD(101.43,"COMMON",IMGTYP,ORX,0))
"RTN","ORWDRA32",31,0)
 . I $$REQDET,$P($G(^ORD(101.43,I,"RA")),U,2)="B" Q
"RTN","ORWDRA32",32,0)
 . S LST($$NXT)="i"_I_U_ORX_U_U_$$REQAPPR(I)
"RTN","ORWDRA32",33,0)
 Q
"RTN","ORWDRA32",34,0)
URGENCY ; Get the allowable urgencies and default
"RTN","ORWDRA32",35,0)
 S ORX="",I=0
"RTN","ORWDRA32",36,0)
 F  S ORX=$O(^ORD(101.42,"S.RA",ORX)) Q:ORX=""  D
"RTN","ORWDRA32",37,0)
 . S I=$O(^ORD(101.42,"S.RA",ORX,0))
"RTN","ORWDRA32",38,0)
 . S LST($$NXT)="i"_I_U_ORX
"RTN","ORWDRA32",39,0)
 S I=$O(^ORD(101.42,"B","ROUTINE",0))
"RTN","ORWDRA32",40,0)
 S LST($$NXT)="d"_I_U_"ROUTINE"
"RTN","ORWDRA32",41,0)
 Q
"RTN","ORWDRA32",42,0)
TRNSPRT ; Get the modes of transport
"RTN","ORWDRA32",43,0)
 F ORX="A^AMBULATORY","P^PORTABLE","S^STRETCHER","W^WHEELCHAIR" D
"RTN","ORWDRA32",44,0)
 . S LST($$NXT)="i"_ORX
"RTN","ORWDRA32",45,0)
 ; figure default on windows side
"RTN","ORWDRA32",46,0)
 Q
"RTN","ORWDRA32",47,0)
CATEGRY ; Get the categories of exam
"RTN","ORWDRA32",48,0)
 F ORX="I^INPATIENT","O^OUTPATIENT","E^EMPLOYEE","C^CONTRACT","S^SHARING","R^RESEARCH" D
"RTN","ORWDRA32",49,0)
 . S LST($$NXT)="i"_ORX
"RTN","ORWDRA32",50,0)
 ; figure default on windows side
"RTN","ORWDRA32",51,0)
 Q
"RTN","ORWDRA32",52,0)
SUBMIT ; Get the locations to which the request may be submitted
"RTN","ORWDRA32",53,0)
 N TMPLST,ASK,ORX
"RTN","ORWDRA32",54,0)
 D EN4^RAO7PC1(IMGTYP,"TMPLST")
"RTN","ORWDRA32",55,0)
 S I=0 F  S I=$O(TMPLST(I)) Q:'I  S LST($$NXT)="i"_TMPLST(I)
"RTN","ORWDRA32",56,0)
 I $D(TMPLST) S I=$O(TMPLST(0)),ORX=$P(TMPLST(I),U,1,2),LST($$NXT)="d"_ORX
"RTN","ORWDRA32",57,0)
 S LST($$NXT)="~Ask Submit"
"RTN","ORWDRA32",58,0)
 I $G(EVTDIV) S ORX=$$GET^XPAR(+$G(EVTDIV)_";DIC(4,^SYS^PKG","RA SUBMIT PROMPT",1,"Q")
"RTN","ORWDRA32",59,0)
 E  S ORX=$$GET^XPAR("ALL","RA SUBMIT PROMPT",1,"Q")
"RTN","ORWDRA32",60,0)
 ;S DUZ(2)=TMPDIV
"RTN","ORWDRA32",61,0)
 S ASK=$S($L(ORX):ORX,1:1)
"RTN","ORWDRA32",62,0)
 S LST($$NXT)="d"_ASK_U_$S(ASK=1:"YES",ASK=0:"NO",1:"YES")
"RTN","ORWDRA32",63,0)
 Q
"RTN","ORWDRA32",64,0)
LAST7 ; Get exams for the last 7 days
"RTN","ORWDRA32",65,0)
 K ^TMP($J,"RAE7") D EN2^RAO7PC1(PATID)
"RTN","ORWDRA32",66,0)
 S I=0 F  S I=$O(^TMP($J,"RAE7",PATID,I)) Q:'I  D
"RTN","ORWDRA32",67,0)
 . S LST($$NXT)="i"_I_U_^TMP($J,"RAE7",PATID,I)
"RTN","ORWDRA32",68,0)
 K ^TMP($J,"RAE7")
"RTN","ORWDRA32",69,0)
 Q
"RTN","ORWDRA32",70,0)
PROCMSG(ORY,IEN) ; return order message for a procedure
"RTN","ORWDRA32",71,0)
 N I
"RTN","ORWDRA32",72,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S ORY(I)=^(I,0)
"RTN","ORWDRA32",73,0)
 Q
"RTN","ORWDRA32",74,0)
NXT() ; Increment index of LST
"RTN","ORWDRA32",75,0)
 S ILST=ILST+1
"RTN","ORWDRA32",76,0)
 Q ILST
"RTN","ORWDRA32",77,0)
RAORDITM(Y,FROM,DIR,IMGTYP) ; Return a subset of orderable items
"RTN","ORWDRA32",78,0)
 ; .Return Array, Starting Text, Direction, Cross Reference (S.xxx)
"RTN","ORWDRA32",79,0)
 N I,IEN,CNT,ORX,DTXT,REQDET,REQAPPR,XREF S I=0,CNT=44
"RTN","ORWDRA32",80,0)
 S XREF="S."_$$IMTYPE(IMGTYP)
"RTN","ORWDRA32",81,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDRA32",82,0)
 . S IEN=0 F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN)) Q:'IEN  D
"RTN","ORWDRA32",83,0)
 . . I $$REQDET,$P($G(^ORD(101.43,IEN,"RA")),U,2)="B" Q
"RTN","ORWDRA32",84,0)
 . . S ORX=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDRA32",85,0)
 . . I +$P(ORX,U,3),$P(ORX,U,3)<DT Q
"RTN","ORWDRA32",86,0)
 . . S I=I+1
"RTN","ORWDRA32",87,0)
 . . I 'ORX S Y(I)=IEN_U_$P(ORX,U,2)_U_$P(ORX,U,2)_U_$$REQAPPR(IEN)
"RTN","ORWDRA32",88,0)
 . . E  S Y(I)=IEN_U_$P(ORX,U,2)_" <"_$P(ORX,U,4)_">"_U_$P(ORX,U,4)_U_$$REQAPPR(IEN)
"RTN","ORWDRA32",89,0)
 Q
"RTN","ORWDRA32",90,0)
REQDET() ; Are "broad" procedures allowed for this division?
"RTN","ORWDRA32",91,0)
 N RESULT
"RTN","ORWDRA32",92,0)
 I $G(EVTDIV) S RESULT=$$GET^XPAR(+$G(EVTDIV)_";DIC(4,^SYS^PKG","RA REQUIRE DETAILED",1,"Q")
"RTN","ORWDRA32",93,0)
 E  S RESULT=$$GET^XPAR("ALL","RA REQUIRE DETAILED",1,"Q")
"RTN","ORWDRA32",94,0)
 Q RESULT
"RTN","ORWDRA32",95,0)
 ;
"RTN","ORWDRA32",96,0)
REQAPPR(IEN) ;  does procedure require radiologist approval?
"RTN","ORWDRA32",97,0)
 N RAIEN
"RTN","ORWDRA32",98,0)
 S RAIEN=$P($P($G(^ORD(101.43,IEN,0)),U,2),";",1)
"RTN","ORWDRA32",99,0)
 I +RAIEN=0 Q ""
"RTN","ORWDRA32",100,0)
 Q $P($G(^RAMIS(71,RAIEN,0)),U,11)
"RTN","ORWDRA32",101,0)
 ;
"RTN","ORWDRA32",102,0)
ISOLATN(Y,DFN) ;Is patient on isolation procedures?
"RTN","ORWDRA32",103,0)
 N ORVP
"RTN","ORWDRA32",104,0)
 S ORVP=DFN_";DPT("
"RTN","ORWDRA32",105,0)
 S Y=$$IP^ORMBLD
"RTN","ORWDRA32",106,0)
 Q
"RTN","ORWDRA32",107,0)
APPROVAL(Y,DUMMY) ; RETURNS LIST OF RADIOLOGISTS WHO MAY APPROVE A
"RTN","ORWDRA32",108,0)
 ;                       PROCEDURE WHEN REQUIRED
"RTN","ORWDRA32",109,0)
 N ORX,I
"RTN","ORWDRA32",110,0)
 S I="" F  S I=$O(^VA(200,"ARC","S",I)) Q:I=""  D
"RTN","ORWDRA32",111,0)
 . ;I $P($G(^VA(200,I,"PS")),U,4),$P(^VA(200,I,"PS"),U,4)'>DT Q
"RTN","ORWDRA32",112,0)
 . I '$$ACTIVE^XUSER(I) Q
"RTN","ORWDRA32",113,0)
 . I $P($G(^VA(200,I,"RA")),U,3),$P(^VA(200,I,"RA"),U,3)'>DT Q
"RTN","ORWDRA32",114,0)
 . S ORX=$P($G(^VA(200,I,0)),U)
"RTN","ORWDRA32",115,0)
 . S Y(I)=I_U_ORX
"RTN","ORWDRA32",116,0)
 Q
"RTN","ORWDRA32",117,0)
IMTYPE(DGRP) ; return the mnemonic for the imaging type
"RTN","ORWDRA32",118,0)
 Q $P(^ORD(100.98,DGRP,0),U,3)
"RTN","ORWDRA32",119,0)
IMTYPSEL(Y,DUMMY) ;return list of active imaging types
"RTN","ORWDRA32",120,0)
 N ORX,I,IEN,DGRP,MNEM,NAME
"RTN","ORWDRA32",121,0)
 S ORX=""
"RTN","ORWDRA32",122,0)
 F I=1:1  S ORX=$O(^RA(79.2,"C",ORX)) Q:ORX=""  D
"RTN","ORWDRA32",123,0)
 . I '$D(^ORD(101.43,"S."_ORX)) Q
"RTN","ORWDRA32",124,0)
 . S IEN=$O(^RA(79.2,"C",ORX,0))
"RTN","ORWDRA32",125,0)
 . S NAME=$P(^RA(79.2,IEN,0),U,1)
"RTN","ORWDRA32",126,0)
 . S MNEM=$P(^RA(79.2,IEN,0),U,3)
"RTN","ORWDRA32",127,0)
 . S DGRP=$O(^ORD(100.98,"B",MNEM,0))
"RTN","ORWDRA32",128,0)
 . S Y(I)=IEN_U_NAME_U_MNEM_U_DGRP
"RTN","ORWDRA32",129,0)
 Q
"RTN","ORWDRA32",130,0)
RADSRC(Y,SRCTYPE) ; return list of available contract/sharing/research sources
"RTN","ORWDRA32",131,0)
 S ORX=0
"RTN","ORWDRA32",132,0)
 F I=1:1 S ORX=$O(^DIC(34,ORX)) Q:+ORX=0  D
"RTN","ORWDRA32",133,0)
 . Q:($P(^DIC(34,ORX,0),U,2)'=SRCTYPE)
"RTN","ORWDRA32",134,0)
 . I $D(^DIC(34,ORX,"I")),(^DIC(34,ORX,"I")<$$NOW^XLFDT) Q
"RTN","ORWDRA32",135,0)
 . S Y(I)=ORX_U_$P(^DIC(34,ORX,0),U,1)
"RTN","ORWDRA32",136,0)
 Q
"RTN","ORWDRA32",137,0)
LOCTYPE(Y,ORLOC) ; Returns type of location (C,W)
"RTN","ORWDRA32",138,0)
 S Y=-1
"RTN","ORWDRA32",139,0)
 Q:$G(ORLOC)=""
"RTN","ORWDRA32",140,0)
 S Y=$P($G(^SC(+$G(ORLOC),0)),U,3)
"RTN","ORWDRA32",141,0)
 Q
"RTN","ORWDX")
0^49^B66882759
"RTN","ORWDX",1,0)
ORWDX ; SLC/KCM/REV/JLI - Order dialog utilities ;09/08/2008 [2/11/09 8:00am]
"RTN","ORWDX",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,125,131,132,141,164,178,187,190,195,215,246,243,283,296,280**;Dec 17, 1997;Build 85
"RTN","ORWDX",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORWDX",4,0)
 ;Reference to DIC(9.4 supported by IA #2058
"RTN","ORWDX",5,0)
 ;
"RTN","ORWDX",6,0)
ORDITM(Y,FROM,DIR,XREF) ; Subset of orderable items
"RTN","ORWDX",7,0)
 ; Y(n)=IEN^.01 Name^.01 Name  -or-  IEN^Synonym <.01 Name>^.01 Name
"RTN","ORWDX",8,0)
 N I,IEN,CNT,X,DTXT,CURTM,DEFROUTE
"RTN","ORWDX",9,0)
 S DEFROUTE=""
"RTN","ORWDX",10,0)
 S I=0,CNT=44,CURTM=$$NOW^XLFDT
"RTN","ORWDX",11,0)
 F  Q:I'<CNT  S FROM=$O(^ORD(101.43,XREF,FROM),DIR) Q:FROM=""  D
"RTN","ORWDX",12,0)
 . S IEN="" F  S IEN=$O(^ORD(101.43,XREF,FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWDX",13,0)
 . . S X=^ORD(101.43,XREF,FROM,IEN)
"RTN","ORWDX",14,0)
 . . I +$P(X,U,3),$P(X,U,3)<CURTM Q
"RTN","ORWDX",15,0)
 . . Q:$P(X,U,5)  S I=I+1
"RTN","ORWDX",16,0)
 . . I 'X S Y(I)=IEN_U_$P(X,U,2)_U_$P(X,U,2)
"RTN","ORWDX",17,0)
 . . E  S Y(I)=IEN_U_$P(X,U,2)_$C(9)_"<"_$P(X,U,4)_">"_U_$P(X,U,4)
"RTN","ORWDX",18,0)
 Q
"RTN","ORWDX",19,0)
ODITMBC(Y,XREF,ODLST) ;
"RTN","ORWDX",20,0)
 N CNT,NM,XRF
"RTN","ORWDX",21,0)
 S CNT=0,NM=0,XRF=XREF
"RTN","ORWDX",22,0)
 F  S CNT=$O(ODLST(CNT)) Q:'CNT  D FNDINFO(.Y,ODLST(CNT))
"RTN","ORWDX",23,0)
 Q
"RTN","ORWDX",24,0)
FNDINFO(Y,ODIEN) ;
"RTN","ORWDX",25,0)
 D FNDINFO^ORWDX1(.Y,.ODIEN)
"RTN","ORWDX",26,0)
 Q
"RTN","ORWDX",27,0)
DLGDEF(LST,DLG) ; Format mapping for a dlg
"RTN","ORWDX",28,0)
 D DLGDEF^ORWDX1(.LST,.DLG)
"RTN","ORWDX",29,0)
 Q
"RTN","ORWDX",30,0)
DLGQUIK(LST,QO) ;(NOT USED)
"RTN","ORWDX",31,0)
 D LOADRSP(.LST,QO)
"RTN","ORWDX",32,0)
 Q
"RTN","ORWDX",33,0)
LOADRSP(LST,RSPID,TRANS)      ; Load responses from 101.41 or 100
"RTN","ORWDX",34,0)
 ; RSPID:  C123456;1-3243 = cached copy,   134-3234 = cached quick
"RTN","ORWDX",35,0)
 ;         X123456;1      = change order,  134      = quick dialog
"RTN","ORWDX",36,0)
 N I,J,DLG,INST,ID,VAL,ILST,ROOT,ORLOC S ROOT=""
"RTN","ORWDX",37,0)
 I RSPID["-" S ROOT="^TMP(""ORWDXMQ"",$J,"""_RSPID_""")" G XROOT^ORWDX2
"RTN","ORWDX",38,0)
 I $E(RSPID)="X" S ROOT="^OR(100,"_+$P(RSPID,"X",2)_",4.5)"  G XROOT^ORWDX2
"RTN","ORWDX",39,0)
 I +RSPID=RSPID  S ROOT="^ORD(101.41,"_+RSPID_",6)" G XROOT^ORWDX2
"RTN","ORWDX",40,0)
 Q:ROOT=""
"RTN","ORWDX",41,0)
 G XROOT^ORWDX2
"RTN","ORWDX",42,0)
SAVE(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,ORDIALOG,ORDEA,ORAPPT,ORSRC,OREVTDF) ;
"RTN","ORWDX",43,0)
 ; ORVP=DFN, ORNP=Provider, ORL=Location, DLG=Order Dialog,
"RTN","ORWDX",44,0)
 ; ORDG=Display Group, ORIT=Quick Order Dialog, ORAPPT=Appointment
"RTN","ORWDX",45,0)
 N ORDUZ,ORSTS,OREVENT,ORCAT,ORDA,ORTS,ORNEW,ORCHECK,ORLOG,ORLEAD,ORTRAIL,ORPKG,ORWP94,ORCATFN,OREVTYPE,ONPASS
"RTN","ORWDX",46,0)
 N XCNT,XCOMM,XDONE,XX  ;SBR
"RTN","ORWDX",47,0)
 S (XCOMM,XCNT)=""  ;SBR
"RTN","ORWDX",48,0)
 I $G(ORIFN)'="" D  ;SBR problem only occurs on change or renew orders
"RTN","ORWDX",49,0)
 . S XCNT=$O(^OR(100,+ORIFN,4.5,"ID","COMMENT",XCNT))  ;SBR
"RTN","ORWDX",50,0)
 . I XCNT'="" S XCOMM=$P($G(^OR(100,+ORIFN,4.5,XCNT,0)),"^",2)  ;SBR
"RTN","ORWDX",51,0)
 . I XCOMM'="" S XDONE=0,XX="" F  S XX=$O(ORDIALOG("WP",XCOMM,1,XX)) Q:XX=""  D  ;SBR
"RTN","ORWDX",52,0)
 . . I ORDIALOG("WP",XCOMM,1,XX,0)'="" S XDONE=1 Q  ;SBR
"RTN","ORWDX",53,0)
 . I XCOMM'="",'$G(XDONE),$D(ORDIALOG("WP",XCOMM)) K ORDIALOG("WP",XCOMM)  ;SBR
"RTN","ORWDX",54,0)
 S ORCATFN="" I $L($P(DLG,U,2)) S ORCATFN=$P(DLG,U,2),DLG=$P(DLG,U,1)
"RTN","ORWDX",55,0)
 ;Remove treating facility if inpatient and IMO order 26.42
"RTN","ORWDX",56,0)
 I $G(^DPT(ORVP,.1))'="",$P($G(^ORD(100.98,ORDG,0)),U)="CLINIC ORDERS" K ORDIALOG("ORTS")
"RTN","ORWDX",57,0)
 I $G(ORDIALOG("ORTS")) S ORTS=ORDIALOG("ORTS") K ORDIALOG("ORTS")
"RTN","ORWDX",58,0)
 I $G(ORDIALOG("ORSLOG")) S ORLOG=ORDIALOG("ORSLOG") K ORDIALOG("ORSLOG")
"RTN","ORWDX",59,0)
 I $D(ORDIALOG("OREVENT")) S OREVENT=ORDIALOG("OREVENT") K ORDIALOG("OREVENT")
"RTN","ORWDX",60,0)
 ;=====================================================
"RTN","ORWDX",61,0)
 ; Changed for v26.27 (RV)
"RTN","ORWDX",62,0)
 S ORCAT=$$INPT^ORCD,ORCAT=$S(ORCAT=1:"I",1:"O")
"RTN","ORWDX",63,0)
 ;I $L($G(OREVENT)) D
"RTN","ORWDX",64,0)
 ;. S ONPASS=0
"RTN","ORWDX",65,0)
 ;. S OREVTYPE=$$TYPE^OREVNTX(OREVENT)
"RTN","ORWDX",66,0)
 ;. I OREVTYPE="T" D ISPASS^OREVNTX1(.ONPASS,+OREVENT,"T")
"RTN","ORWDX",67,0)
 ;. S ORCAT=$S(OREVTYPE="A":"I",OREVTYPE="T":"I",ONPASS=1:"O",1:"O")
"RTN","ORWDX",68,0)
 ;E  S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDX",69,0)
 ;=====================================================
"RTN","ORWDX",70,0)
 I DLG="PS MEDS" S ORWP94=1 D
"RTN","ORWDX",71,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO SUPPLY",0)) S DLG="PSO SUPPLY"
"RTN","ORWDX",72,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSO OERR",0)) S DLG="PSO OERR"
"RTN","ORWDX",73,0)
 . I ORIT=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0)) S DLG="PSJ OR PAT OE"
"RTN","ORWDX",74,0)
 I DLG="PSO OERR" S ORCAT="O" I $G(OREVENT("EFFECTIVE")) D
"RTN","ORWDX",75,0)
 . S ORDIALOG($O(^ORD(101.41,"B","OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:""),0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDX",76,0)
 I DLG="PSJ OR PAT OE" S ORCAT="I"
"RTN","ORWDX",77,0)
 S:DLG="FHW1" ORCAT="I" S:DLG?1"FHW "2.7U1" MEAL" ORCAT="O"
"RTN","ORWDX",78,0)
 S ORVP=ORVP_";DPT(",ORL(2)=ORL_";SC(",ORL=ORL(2)
"RTN","ORWDX",79,0)
 I ORDG=$O(^ORD(100.98,"B","LAB",0)) D  ;use section
"RTN","ORWDX",80,0)
 . N OI,SUB S OI=+$G(ORDIALOG($$PTR^ORCD("OR GTX ORDERABLE ITEM"),1))
"RTN","ORWDX",81,0)
 . S SUB=$P($G(^ORD(101.43,OI,"LR")),U,6),ORDG=$$DGRP^ORMLR(SUB)
"RTN","ORWDX",82,0)
 K:'ORDG ORDG K:'ORIT ORIT ; Dgrp & Quick must be non-zero
"RTN","ORWDX",83,0)
 M ORCHECK=ORDIALOG("ORCHECK") K ORDIALOG("ORCHECK")
"RTN","ORWDX",84,0)
 S ORDIALOG=$O(^ORD(101.41,"AB",DLG,0))
"RTN","ORWDX",85,0)
 I 'ORDIALOG S ORDIALOG=$O(^ORD(101.41,"B",DLG,0))
"RTN","ORWDX",86,0)
 I $D(ORDIALOG("ORLEAD")) S ORLEAD=ORDIALOG("ORLEAD")
"RTN","ORWDX",87,0)
 I $D(ORDIALOG("ORTRAIL")) S ORTRAIL=ORDIALOG("ORTRAIL")
"RTN","ORWDX",88,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORWDX",89,0)
 I $L(ORCATFN) S ORCAT=ORCATFN
"RTN","ORWDX",90,0)
 I $G(ORWP94) D
"RTN","ORWDX",91,0)
 . N SIGPRMT S SIGPRMT=$O(^ORD(101.41,"B","OR GTX SIG",0))
"RTN","ORWDX",92,0)
 . N INSPRMT S INSPRMT=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDX",93,0)
 . I $L($G(ORDIALOG(SIGPRMT,1))) S ORDIALOG(INSPRMT,"FORMAT")="@"
"RTN","ORWDX",94,0)
 . I ORCAT="O" S ORPKG=$O(^DIC(9.4,"C","PSO",0))
"RTN","ORWDX",95,0)
 . I ORCAT="I" S ORPKG=$O(^DIC(9.4,"C","PSJ",0))
"RTN","ORWDX",96,0)
 S ORSRC=$G(ORSRC)
"RTN","ORWDX",97,0)
 D DELPI^ORWDX1 ;delete empty PI
"RTN","ORWDX",98,0)
 I $G(ORIFN)="" D  ; new order
"RTN","ORWDX",99,0)
 . D EN^ORCSAVE
"RTN","ORWDX",100,0)
 . S REC="" I ORIFN D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",101,0)
 . I '$D(^TMP("ORECALL",$J,ORDIALOG)) M ^TMP("ORECALL",$J,ORDIALOG)=ORDIALOG
"RTN","ORWDX",102,0)
 E  D
"RTN","ORWDX",103,0)
 . N OR0
"RTN","ORWDX",104,0)
 . S OR0=$G(^OR(100,+ORIFN,0)),ORSTS=$P($G(^(3)),U,3),ORDG=$P(OR0,U,11)
"RTN","ORWDX",105,0)
 . I $L($P(OR0,U,17)),ORSTS=10 S OREVENT=$P(OR0,U,17),OREVENT("TS")=$P(OR0,U,13)
"RTN","ORWDX",106,0)
 . D XX^ORCSAVE ; edit order
"RTN","ORWDX",107,0)
 . S REC="" S ORIFN=+ORIFN_";"_ORDA D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDX",108,0)
 Q
"RTN","ORWDX",109,0)
SENDED(ORWLST,ORIENS,TS,LOC) ; Release EDOs to svc
"RTN","ORWDX",110,0)
 N OK,ORVP,ORWERR,ORSIGST,ORDA,ORNATURE,ORIX,X,PTEVT,ORIFN,J,EVENT,LOCK,OR3
"RTN","ORWDX",111,0)
 S ORWERR="",ORIX=0,LOC=LOC_";SC("
"RTN","ORWDX",112,0)
 F  S ORIX=$O(ORIENS(ORIX)) Q:'ORIX  D  Q:ORWERR]""
"RTN","ORWDX",113,0)
 . S (ORIFN,ORWLST(ORIX))=ORIENS(ORIX)
"RTN","ORWDX",114,0)
 . S PTEVT=$P(^OR(100,+ORIFN,0),U,17)
"RTN","ORWDX",115,0)
 . I PTEVT D
"RTN","ORWDX",116,0)
 .. I $D(EVENT(PTEVT)) S LOCK=1 Q
"RTN","ORWDX",117,0)
 .. S LOCK=$$LCKEVT^ORX2(PTEVT) S:LOCK EVENT(PTEVT)=""
"RTN","ORWDX",118,0)
 . I 'LOCK S ORWERR="1^delayed event is locked - another user is processing orders for this event" S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",119,0)
 . S ORDA=$P(ORIFN,";",2) S:'ORDA ORDA=1
"RTN","ORWDX",120,0)
 . S ORVP=$P($G(^OR(100,+ORIFN,0)),U,2)
"RTN","ORWDX",121,0)
 . I $D(^OR(100,+ORIFN,8,ORDA,0)) D
"RTN","ORWDX",122,0)
 .. S ORSIGST=$P($G(^(0)),U,4),ORNATURE=$P($G(^(0)),U,12) ;naked references refer to OR(100,+ORIFN,8,ORDA on line above
"RTN","ORWDX",123,0)
 . S OK=$$LOCK1^ORX2(ORIFN) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",124,0)
 . I OK,$G(LOCK) D
"RTN","ORWDX",125,0)
 .. S OR3=$G(^OR(100,+ORIFN,3)) I $P(OR3,"^",3)'=10!($P(OR3,"^",9)]"") D UNLK1^ORX2(ORIENS(ORIX)) Q  ;order already released or has a parent
"RTN","ORWDX",126,0)
 .. S:$G(LOC) $P(^OR(100,+ORIFN,0),U,10)=LOC ;set location
"RTN","ORWDX",127,0)
 .. S:$G(TS) $P(^OR(100,+ORIFN,0),U,13)=TS ;set specialty 
"RTN","ORWDX",128,0)
 .. D EN2^ORCSEND(ORIENS(ORIX),ORSIGST,ORNATURE,.ORWERR),UNLK1^ORX2(ORIENS(ORIX)) ;add ,LOCK to if statement for 195
"RTN","ORWDX",129,0)
 . I $L(ORWERR) S ORWLST(ORIX)=ORWLST(ORIX)_"^E^"_ORWERR Q
"RTN","ORWDX",130,0)
 . E  D
"RTN","ORWDX",131,0)
 .. S PTEVT=$P($G(^OR(100,+ORIENS(ORIX),0)),U,17)
"RTN","ORWDX",132,0)
 .. D:$$TYPE^OREVNTX(PTEVT)="M" SAVE^ORMEVNT1(ORIENS(ORIX),PTEVT,2)
"RTN","ORWDX",133,0)
 . S X="RS"
"RTN","ORWDX",134,0)
 . S $P(ORWLST(ORIX),U,2)=X
"RTN","ORWDX",135,0)
 S J=0 F  S J=$O(EVENT(J)) Q:'+J  D UNLEVT^ORX2(J) ;195
"RTN","ORWDX",136,0)
 Q
"RTN","ORWDX",137,0)
SEND(ORWLST,DFN,ORNP,ORL,ES,ORWREC) ; Sign
"RTN","ORWDX",138,0)
 ; DFN=Patient, ORNP=Provider, ORL=Location, ES=Encrypted ES code
"RTN","ORWDX",139,0)
 ; ORWREC(n)=ORIFN;Action^Signature Sts^Release Sts^Nature of Order
"RTN","ORWDX",140,0)
SEND1 N ORVP,ORWI,ORWERR,ORWREL,ORWSIG,ORWNATR,ORDERID,ORBEF,ORLR,ORLAB,X,I
"RTN","ORWDX",141,0)
 S ORVP=DFN_";DPT(",ORL=ORL_";SC(",ORL(2)=ORL,ORWLST=0
"RTN","ORWDX",142,0)
 F I="LR","VBEC" S X=+$O(^DIC(9.4,"C",I,0)) S:X ORLR(X)=1
"RTN","ORWDX",143,0)
 S ORWI=0 F  S ORWI=$O(ORWREC(ORWI)) Q:'ORWI  D
"RTN","ORWDX",144,0)
 . S X=ORWREC(ORWI),ORWERR=""
"RTN","ORWDX",145,0)
 . S ORDERID=$P(X,U),ORWSIG=$P(X,U,2),ORWREL=$P(X,U,3),ORWNATR=$P(X,U,4)
"RTN","ORWDX",146,0)
 . S ORBEF=0
"RTN","ORWDX",147,0)
 . I '$D(^OR(100,+ORDERID,0)) Q
"RTN","ORWDX",148,0)
 . I $D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) S ORBEF=$P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),U,15)
"RTN","ORWDX",149,0)
 . S:$D(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0)) ORWNATR=$S($P(^OR(100,+ORDERID,8,+$P(ORDERID,";",2),0),"^",4)=3:"",1:ORWNATR)
"RTN","ORWDX",150,0)
 . S ORWERR=$$CHKACT^ORWDXR(ORDERID,ORWSIG,ORWREL,ORWNATR)
"RTN","ORWDX",151,0)
 . I $L(ORWERR) S ORWERR="1^"_ORWERR
"RTN","ORWDX",152,0)
 . I '$L(ORWERR) D
"RTN","ORWDX",153,0)
 .. I $G(ORLR(+$P(^OR(100,+ORDERID,0),U,14))),'$G(ORLAB) D  ; lab batch start
"RTN","ORWDX",154,0)
 ... I $L($T(BHS^ORMBLD)) D BHS^ORMBLD(ORVP) S ORLAB=1
"RTN","ORWDX",155,0)
 .. N OK S OK=$$LOCK1^ORX2(ORDERID) I 'OK S ORWERR="1^"_$P(OK,U,2)
"RTN","ORWDX",156,0)
 .. I OK D EN^ORCSEND(ORDERID,"",ORWSIG,ORWREL,ORWNATR,"",.ORWERR),UNLK1^ORX2(ORDERID)
"RTN","ORWDX",157,0)
 . S ORWLST(ORWI)=ORDERID,X=""
"RTN","ORWDX",158,0)
 . I $L(ORWERR) S ORWLST(ORWI)=ORWLST(ORWI)_"^E^"_ORWERR Q
"RTN","ORWDX",159,0)
 . I ORWREL,((ORBEF=10)!(ORBEF=11)),($P(^OR(100,+ORDERID,3),U,3)'=10) S X="R"
"RTN","ORWDX",160,0)
 . I ORWSIG'=2 S X=X_"S"
"RTN","ORWDX",161,0)
 . S $P(ORWLST(ORWI),U,2)=X
"RTN","ORWDX",162,0)
 I $G(ORLAB) D BTS^ORMBLD(ORVP)
"RTN","ORWDX",163,0)
 I $D(ORWLST)>9 D
"RTN","ORWDX",164,0)
 . N I,A
"RTN","ORWDX",165,0)
 . S I=0 F  S I=$O(ORWLST(I)) Q:I=""  S A=$G(ORWLST(I)) I A["Invalid Procedure, Inactive, no Imaging Type" D SM^ORWDX2(A)
"RTN","ORWDX",166,0)
  Q
"RTN","ORWDX",167,0)
DLGID(VAL,ORIFN) ; return dlg IEN for order
"RTN","ORWDX",168,0)
 S VAL=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",169,0)
 S VAL=$S($P(VAL,";",2)="ORD(101.41,":+VAL,1:0)
"RTN","ORWDX",170,0)
 Q
"RTN","ORWDX",171,0)
FORMID(VAL,ORIFN) ; Base dlg FormID for an order
"RTN","ORWDX",172,0)
 N DLG
"RTN","ORWDX",173,0)
 S VAL=0,DLG=$P(^OR(100,+ORIFN,0),U,5)
"RTN","ORWDX",174,0)
 Q:$P(DLG,";",2)'="ORD(101.41,"
"RTN","ORWDX",175,0)
 D FORMID^ORWDXM(.VAL,+DLG)
"RTN","ORWDX",176,0)
 Q
"RTN","ORWDX",177,0)
AGAIN(VAL,DLG) ; return true to keep dlg for another order
"RTN","ORWDX",178,0)
 S VAL=''$P($G(^ORD(101.41,DLG,0)),U,9)
"RTN","ORWDX",179,0)
 Q
"RTN","ORWDX",180,0)
DGRP(VAL,DLG) ; Display grp pointer for a dlg
"RTN","ORWDX",181,0)
 S DLG=$S($E(DLG)="`":+$P(DLG,"`",2),1:$O(^ORD(101.41,"AB",DLG,0))) ;kcm
"RTN","ORWDX",182,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,5)
"RTN","ORWDX",183,0)
 Q
"RTN","ORWDX",184,0)
DGNM(VAL,NM) ; Display grp pointer for name
"RTN","ORWDX",185,0)
 S VAL=$O(^ORD(100.98,"B",NM,0))
"RTN","ORWDX",186,0)
 Q
"RTN","ORWDX",187,0)
WRLST(LST,LOC) ; List of dlgs for writing orders
"RTN","ORWDX",188,0)
 G WRLST1^ORWDX1
"RTN","ORWDX",189,0)
MSG(LST,IEN) ; Msg text for orderable item
"RTN","ORWDX",190,0)
 N I
"RTN","ORWDX",191,0)
 S I=0 F  S I=$O(^ORD(101.43,IEN,8,I)) Q:I'>0  S LST(I)=^(I,0)
"RTN","ORWDX",192,0)
 Q
"RTN","ORWDX",193,0)
DISMSG(VAL,IEN) ; Disabled mge for ordering dlg
"RTN","ORWDX",194,0)
 S VAL=$P($G(^ORD(101.41,+IEN,0)),U,3)
"RTN","ORWDX",195,0)
 Q
"RTN","ORWDX",196,0)
LOCK(OK,DFN) ; Attempt to lock pt for ordering
"RTN","ORWDX",197,0)
 S OK=$$LOCK^ORX2(DFN)
"RTN","ORWDX",198,0)
 Q
"RTN","ORWDX",199,0)
UNLOCK(OK,DFN) ; Unlock pt for ordering
"RTN","ORWDX",200,0)
 D UNLOCK^ORX2(DFN) S OK=1
"RTN","ORWDX",201,0)
 Q
"RTN","ORWDX",202,0)
LOCKORD(OK,ORIFN) ; Attempt to lock order
"RTN","ORWDX",203,0)
 S OK=$$LOCK1^ORX2(ORIFN)
"RTN","ORWDX",204,0)
 Q
"RTN","ORWDX",205,0)
UNLKORD(OK,ORIFN) ; Unlock order
"RTN","ORWDX",206,0)
 D UNLK1^ORX2(ORIFN) S OK=1
"RTN","ORWDX",207,0)
 Q
"RTN","ORWDX",208,0)
UNLKOTH(OK,ORIFN) ; Unlock pt not by this session
"RTN","ORWDX",209,0)
 K ^XTMP("ORPTLK-"_ORIFN) S OK=1
"RTN","ORWDX",210,0)
 Q
"RTN","ORWDX2")
0^87^B17614403
"RTN","ORWDX2",1,0)
ORWDX2 ; SLC/JM/AGP - Order dialog utilities ;11/09/2006
"RTN","ORWDX2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**246,243,280**;Dec 17, 1997;Build 85
"RTN","ORWDX2",3,0)
 ;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORWDX2",4,0)
 ;
"RTN","ORWDX2",5,0)
 Q
"RTN","ORWDX2",6,0)
 ;
"RTN","ORWDX2",7,0)
NXT() ; -- Gets index in array
"RTN","ORWDX2",8,0)
 S ILST=ILST+1
"RTN","ORWDX2",9,0)
 Q ILST
"RTN","ORWDX2",10,0)
 ;
"RTN","ORWDX2",11,0)
EXTVAL(IVAL,DLG) ; External value given a dlg ptr
"RTN","ORWDX2",12,0)
 N ORDIALOG
"RTN","ORWDX2",13,0)
 S ORDIALOG(DLG,0)=$P($G(^ORD(101.41,DLG,1)),U,1,2)
"RTN","ORWDX2",14,0)
 S ORDIALOG(DLG,1)=IVAL
"RTN","ORWDX2",15,0)
 I $E(ORDIALOG(DLG,0))="R",(+IVAL'=IVAL) Q IVAL  ; free text date/time
"RTN","ORWDX2",16,0)
 Q $$EXT^ORCD(DLG,1)  ; all others
"RTN","ORWDX2",17,0)
 ;
"RTN","ORWDX2",18,0)
XROOT ; Part of LOADRSP^ORWDX - moved here because of routine size
"RTN","ORWDX2",19,0)
 N CHKDOSE,DOSE,INSTR
"RTN","ORWDX2",20,0)
 S (ILST,I)=0,CHKDOSE=$$CHKDOSES
"RTN","ORWDX2",21,0)
 F  S I=$O(@ROOT@(I)) Q:I'>0  D
"RTN","ORWDX2",22,0)
 . S DLG=$P(@ROOT@(I,0),U,2),INST=$P(^(0),U,3)
"RTN","ORWDX2",23,0)
 . S ID=$P($G(^ORD(101.41,DLG,1)),U,3)
"RTN","ORWDX2",24,0)
 . I '$L(ID) S ID="ID"_DLG
"RTN","ORWDX2",25,0)
 . S VAL=$G(@ROOT@(I,1))
"RTN","ORWDX2",26,0)
 . I $P($G(^ORD(101.41,DLG,0)),U)="OR GTX ADDITIVE" S ID="ADDITIVE"
"RTN","ORWDX2",27,0)
 . I $E(RSPID)="C",(ID="START"),VAL Q  ; skip literal start time on copy
"RTN","ORWDX2",28,0)
 . S LST($$NXT)="~"_DLG_U_INST_U_ID
"RTN","ORWDX2",29,0)
 . I $L(VAL) D
"RTN","ORWDX2",30,0)
 .. S LST($$NXT)="i"_VAL,LST($$NXT)="e"_$$EXTVAL(VAL,DLG)
"RTN","ORWDX2",31,0)
 .. I CHKDOSE D DOSEINFO
"RTN","ORWDX2",32,0)
 . I $D(@ROOT@(I,2))>1 D
"RTN","ORWDX2",33,0)
 .. I $E(RSPID)?1U,'$G(TRANS),ID="COMMENT",'$$DRAFT(RSPID) D FORMID^ORWDX(.X,+$E(RSPID,2,99)) Q:X=140
"RTN","ORWDX2",34,0)
 .. S J=0 F  S J=$O(@ROOT@(I,2,J)) Q:J'>0  D
"RTN","ORWDX2",35,0)
 ... S LST($$NXT)="t"_$G(@ROOT@(I,2,J,0))
"RTN","ORWDX2",36,0)
 I CHKDOSE D FIXDOSES
"RTN","ORWDX2",37,0)
 I $E(ROOT,1,4)="^TMP" K ^TMP("ORWDXMQ",$J)
"RTN","ORWDX2",38,0)
 Q
"RTN","ORWDX2",39,0)
 ;
"RTN","ORWDX2",40,0)
DRAFT(ID) ; -- Return 1 or 0 if editing an unsigned/unreleased or pending order
"RTN","ORWDX2",41,0)
 N IEN,STS,ES
"RTN","ORWDX2",42,0)
 I $E(ID)?1U,$E(ID)'="X" Q 0
"RTN","ORWDX2",43,0)
 S IEN=$S(ID:+ID,1:+$E(ID,2,99))
"RTN","ORWDX2",44,0)
 S STS=$P($G(^OR(100,IEN,3)),U,3),ES=$P($G(^(8,1,0)),U,4)
"RTN","ORWDX2",45,0)
 I STS=5 Q 1
"RTN","ORWDX2",46,0)
 I STS=11 Q 1
"RTN","ORWDX2",47,0)
 I STS=10,ES=2 Q 1
"RTN","ORWDX2",48,0)
 Q 0
"RTN","ORWDX2",49,0)
 ;
"RTN","ORWDX2",50,0)
CHKDOSES() ; Returns true if doses may need to be modified
"RTN","ORWDX2",51,0)
 Q $$PATCH^XPDUTL("PSS*1.0*78")&($T(DOSE^PSSORUTE)'="")
"RTN","ORWDX2",52,0)
 ;
"RTN","ORWDX2",53,0)
DOSEINFO ; Collect pointers to dose information
"RTN","ORWDX2",54,0)
 I ID="INSTR" S INSTR(INST)=ILST-1
"RTN","ORWDX2",55,0)
 I ID="DOSE",+VAL>0 S DOSE(INST)=ILST-1 ; +VAL filters out local dosages
"RTN","ORWDX2",56,0)
 Q
"RTN","ORWDX2",57,0)
 ;
"RTN","ORWDX2",58,0)
FIXDOSES ; Update doses for those saved before PSS*1*78 was installed
"RTN","ORWDX2",59,0)
 N CODE,OLDDOSE,IDX,NEWDOSE,IIDX
"RTN","ORWDX2",60,0)
 S IIDX=0
"RTN","ORWDX2",61,0)
 F  S IIDX=$O(INSTR(IIDX)) Q:'+IIDX  D
"RTN","ORWDX2",62,0)
 . I +$G(INSTR(IIDX))>0,+$G(DOSE(IIDX))>0 D
"RTN","ORWDX2",63,0)
 .. S OLDDOSE=$E(LST(INSTR(IIDX)),2,999)
"RTN","ORWDX2",64,0)
 .. S NEWDOSE=$$DOSE^PSSORUTE(OLDDOSE)
"RTN","ORWDX2",65,0)
 .. I OLDDOSE'=NEWDOSE D
"RTN","ORWDX2",66,0)
 ... F IDX=0:1:1 D
"RTN","ORWDX2",67,0)
 .... S CODE=$E(LST(INSTR(IIDX)+IDX),1)
"RTN","ORWDX2",68,0)
 .... S LST(INSTR(IIDX)+IDX)=CODE_NEWDOSE
"RTN","ORWDX2",69,0)
 .. S OLDDOSE=$P(LST(DOSE(IIDX)),"&",5)
"RTN","ORWDX2",70,0)
 .. S NEWDOSE=$$DOSE^PSSORUTE(OLDDOSE)
"RTN","ORWDX2",71,0)
 .. I OLDDOSE'=NEWDOSE D
"RTN","ORWDX2",72,0)
 ... F IDX=0:1:1 D
"RTN","ORWDX2",73,0)
 .... S $P(LST(DOSE(IIDX)+IDX),"&",5)=NEWDOSE
"RTN","ORWDX2",74,0)
 Q
"RTN","ORWDX2",75,0)
 ;       
"RTN","ORWDX2",76,0)
DCREASON(LST)   ; Return a list of DC reasons
"RTN","ORWDX2",77,0)
 N ARRAY,CNT,ERROR,IEN,ILST,NAME,SEQARR,X
"RTN","ORWDX2",78,0)
 S ILST=1,LST(ILST)="~DCReason"
"RTN","ORWDX2",79,0)
 S IEN=0 F  S IEN=$O(^ORD(100.03,IEN)) Q:'IEN  S X=^(IEN,0) D
"RTN","ORWDX2",80,0)
 . I $P(X,U,4) Q                              ; inactive
"RTN","ORWDX2",81,0)
 . I $P(X,U,5)'=+$O(^DIC(9.4,"C","OR",0)) Q   ; not OR pkg
"RTN","ORWDX2",82,0)
 . I $P(X,U,7)=+$O(^ORD(100.02,"C","A",0)) Q  ; nature=auto
"RTN","ORWDX2",83,0)
 . S ARRAY($P(X,U))="i"_IEN_U_$P(X,U)
"RTN","ORWDX2",84,0)
 D GETLST^XPAR(.SEQARR,"SYS","OR DC REASON LIST","Q",.ERROR)
"RTN","ORWDX2",85,0)
 ;S CNT=0 F  S CNT=$O(SEQARR(CNT)) Q:CNT'>0  D
"RTN","ORWDX2",86,0)
 F CNT=1:1:SEQARR D
"RTN","ORWDX2",87,0)
 . S IEN=$P(SEQARR(CNT),U,2),NAME=$P(^ORD(100.03,IEN,0),U)
"RTN","ORWDX2",88,0)
 . S ILST=ILST+1,LST(ILST)="i"_IEN_U_NAME
"RTN","ORWDX2",89,0)
 . I $D(ARRAY(NAME))>0 K ARRAY(NAME)
"RTN","ORWDX2",90,0)
 I $D(ARRAY)'>0 Q
"RTN","ORWDX2",91,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","ORWDX2",92,0)
 .S ILST=ILST+1,LST(ILST)=ARRAY(NAME)
"RTN","ORWDX2",93,0)
 Q
"RTN","ORWDX2",94,0)
SM(ERROR) ; Send message to Radiology users
"RTN","ORWDX2",95,0)
 K XMY N XMDUZ,XMSUB,XMTEXT,OR0,ORIFN,DFN,OIP,OI,ORERR,MG
"RTN","ORWDX2",96,0)
 S XMDUZ="CPRS,ORDERS",MG=$$GET^XPAR("SYS","OR RADIOLOGY ISSUES") I MG="" Q
"RTN","ORWDX2",97,0)
 S XMY("G."_MG)="",XMSUB="CPRS Order Error on Radiology Order"
"RTN","ORWDX2",98,0)
 S XMTEXT="ORERR(",ORIFN=+ERROR
"RTN","ORWDX2",99,0)
 S OR0=$G(^OR(100,ORIFN,0)),DFN=+$P(OR0,"^",2),OIP=$O(^OR(100,ORIFN,4.5,"ID","ORDERABLE",0)),OI=$G(^OR(100,ORIFN,4.5,OIP,1))
"RTN","ORWDX2",100,0)
 S ORERR(1,0)="Patient: "_$P($G(^DPT(DFN,0)),"^")
"RTN","ORWDX2",101,0)
 S ORERR(2,0)="CPRS Order Number: "_ORIFN
"RTN","ORWDX2",102,0)
 S ORERR(3,0)="CPRS Orderable Item: "_OI_" - "_$P($G(^ORD(101.43,OI,0)),"^")
"RTN","ORWDX2",103,0)
 S ORERR(4,0)=" "
"RTN","ORWDX2",104,0)
 S ORERR(5,0)="Error from Radiology: "_$P(ERROR,"^",4)
"RTN","ORWDX2",105,0)
 D ^XMD
"RTN","ORWDX2",106,0)
 Q
"RTN","ORWDXA")
0^50^B82710229
"RTN","ORWDXA",1,0)
ORWDXA ; SLC/KCM/JLI - Utilites for Order Actions ;03/29/10  09:26
"RTN","ORWDXA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,141,149,187,213,195,215,243,280**;Dec 17, 1997;Build 85
"RTN","ORWDXA",3,0)
 ;
"RTN","ORWDXA",4,0)
VALID(VAL,ORID,ACTION,ORNP,ORWNAT) ; Is action valid for order?
"RTN","ORWDXA",5,0)
 N ORACT,ORVP,ORVER,ORIFN,PRTID S VAL="",PRTID=0
"RTN","ORWDXA",6,0)
 I +ORID=0 S VAL="This order has been deleted." Q
"RTN","ORWDXA",7,0)
 I '$D(^OR(100,+ORID,0)) S VAL="This order has been deleted!" Q
"RTN","ORWDXA",8,0)
 I ACTION="XFR",'$L($T(XFR^ORCACT01)) S ACTION="RW" ; for pre-POE
"RTN","ORWDXA",9,0)
 N ORNSS S ORNSS=1
"RTN","ORWDXA",10,0)
 I (ACTION="RN") D VALSCH^ORWNSS(.ORNSS,ORID)
"RTN","ORWDXA",11,0)
 I ORNSS=0 S VAL="This order contains an invalid administration schedule." Q
"RTN","ORWDXA",12,0)
 I (ACTION="RN") D ISVALIV^ORWDPS33(.VAL,ORID,ACTION) I $L(VAL)>0 Q
"RTN","ORWDXA",13,0)
 S ORIFN=ORID,ORVP=$P(^OR(100,+ORID,0),U,2)  ; ORCACT0 expects
"RTN","ORWDXA",14,0)
 I (ACTION="RN") D  Q:$L(VAL)
"RTN","ORWDXA",15,0)
 . N DLG S DLG=$P(^OR(100,+ORID,0),U,5) Q:DLG'[";ORD(101.41,"
"RTN","ORWDXA",16,0)
 . I $G(^ORD(101.41,+DLG,3))'["PROVIDER^ORCDPSIV" Q
"RTN","ORWDXA",17,0)
 . D AUTH^ORWDPS32(.VAL,ORNP)
"RTN","ORWDXA",18,0)
 . I VAL S VAL=$P(VAL,U,2)
"RTN","ORWDXA",19,0)
 . E  S VAL=""
"RTN","ORWDXA",20,0)
 S ORVER=$S(ACTION="CR":"R",$D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:"^")
"RTN","ORWDXA",21,0)
 I ACTION="CR" S ACTION="VR"
"RTN","ORWDXA",22,0)
 I (ACTION="ES")!(ACTION="OC")!(ACTION="RS") S ORACT=ACTION ; why not defined???
"RTN","ORWDXA",23,0)
 I (ACTION="VR"),'($D(^XUSEC("ORELSE",DUZ))!$D(^XUSEC("OREMAS",DUZ))) D  Q
"RTN","ORWDXA",24,0)
 . S VAL="You are not authorized to verify these orders."
"RTN","ORWDXA",25,0)
 I $L(VAL) Q
"RTN","ORWDXA",26,0)
 N OIIEN,ISIV,IVOD
"RTN","ORWDXA",27,0)
 S (ISIV,OIIEN,IVOD)=0
"RTN","ORWDXA",28,0)
 I (ACTION="RW")!(ACTION="XX")!(ACTION="XFR") D  Q:$L(VAL)
"RTN","ORWDXA",29,0)
 . S ISIV=$P(^OR(100,+ORID,0),U,11)
"RTN","ORWDXA",30,0)
 . I ISIV,($P(^ORD(100.98,ISIV,0),U,3)="IV RX") S IVOD=1
"RTN","ORWDXA",31,0)
 . D:'IVOD GTORITM^ORWDXR(.OIIEN,+ORID)
"RTN","ORWDXA",32,0)
 . D:OIIEN ISACTOI(.VAL,OIIEN) I $L(VAL)>0 Q
"RTN","ORWDXA",33,0)
 . N DLG,FRM
"RTN","ORWDXA",34,0)
 . S DLG=$P(^OR(100,+ORID,0),U,5),FRM=0
"RTN","ORWDXA",35,0)
 . I $P(DLG,";",2)'="ORD(101.41," S DLG=0
"RTN","ORWDXA",36,0)
 . I DLG D FORMID^ORWDXM(.FRM,+DLG)
"RTN","ORWDXA",37,0)
 . I '(DLG&FRM) D
"RTN","ORWDXA",38,0)
 . . S VAL="Copy & Change are not implemented for this order that predates CPRS."
"RTN","ORWDXA",39,0)
 N OREBUILD
"RTN","ORWDXA",40,0)
 ;I (ACTION="RW")!(ACTION="XFR")!(ACTION="RN") D ISVALIV^ORWDPS33(.VAL,ORID,ACTION) I $L(VAL)>0 Q
"RTN","ORWDXA",41,0)
 I $$VALID^ORCACT0(ORID,ACTION,.VAL,$G(ORWNAT)) S VAL="" ; VAL=error
"RTN","ORWDXA",42,0)
 I ACTION="RN",$$UPCTCHK(ORID) S VAL="Cannot renew this order due to an illegal character ""^"" in the comments or patient instructions."
"RTN","ORWDXA",43,0)
 I ACTION="RW",$$UPCTCHK(ORID) S VAL="Cannot copy this order due to an illegal character ""^"" in the comments or patient instructions."
"RTN","ORWDXA",44,0)
 Q
"RTN","ORWDXA",45,0)
 ;
"RTN","ORWDXA",46,0)
HOLD(REC,ORID,ORNP) ; Place order on hold
"RTN","ORWDXA",47,0)
 N ACTDA
"RTN","ORWDXA",48,0)
 S ACTDA=$$ACTION^ORCSAVE("HD",+ORID,ORNP)
"RTN","ORWDXA",49,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",50,0)
 Q
"RTN","ORWDXA",51,0)
UNHOLD(REC,ORID,ORNP) ; Release order from hold
"RTN","ORWDXA",52,0)
 N ACTDA
"RTN","ORWDXA",53,0)
 S ACTDA=$$ACTION^ORCSAVE("RL",+ORID,ORNP)
"RTN","ORWDXA",54,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",55,0)
 Q
"RTN","ORWDXA",56,0)
DC(REC,ORID,ORNP,ORL,REASON,DCORIG,ISNEWORD) ; Discontinue/Cancel/Delete order
"RTN","ORWDXA",57,0)
 N NATURE,CREATE,PRINT,STATUS,ACTDA,SIGSTS
"RTN","ORWDXA",58,0)
 N X3,X8,CURRACT
"RTN","ORWDXA",59,0)
 Q:'+ORID
"RTN","ORWDXA",60,0)
 I $G(DCORIG)="" S DCORIG=0
"RTN","ORWDXA",61,0)
 S CURRACT=0
"RTN","ORWDXA",62,0)
 S ORL(2)=ORL_";SC(",ORL=ORL(2),NATURE=""
"RTN","ORWDXA",63,0)
 I REASON S NATURE=$P(^ORD(100.02,$P(^ORD(100.03,REASON,0),U,7),0),U,2)
"RTN","ORWDXA",64,0)
 S:NATURE="" NATURE="W"  ; S:ORNP=DUZ NATURE="E"
"RTN","ORWDXA",65,0)
 ;change the way create work to support forcing signature for all DC
"RTN","ORWDXA",66,0)
 ;reasons
"RTN","ORWDXA",67,0)
 S CREATE=1,PRINT=$$PRINT^ORCACT2(NATURE)
"RTN","ORWDXA",68,0)
 ;S CREATE=$$CREATE^ORX1(NATURE)
"RTN","ORWDXA",69,0)
 S X3=$G(^OR(100,+ORID,3))
"RTN","ORWDXA",70,0)
 S CURRACT=$P(X3,U,7) S:CURRACT<1 CURRACT=+$O(^OR(100,+ORID,8,"?"),-1)
"RTN","ORWDXA",71,0)
 I '$D(^OR(100,+ORID,8,+$P(ORID,";",2),0)) D
"RTN","ORWDXA",72,0)
 . S X8=$G(^OR(100,+ORID,8,CURRACT,0))
"RTN","ORWDXA",73,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",74,0)
 . S $P(ORID,";",2)=CURRACT
"RTN","ORWDXA",75,0)
 E  D
"RTN","ORWDXA",76,0)
 . S X8=^OR(100,+ORID,8,+$P(ORID,";",2),0)
"RTN","ORWDXA",77,0)
 . S SIGSTS=$P(X8,U,4)
"RTN","ORWDXA",78,0)
 I '$D(SIGSTS) S SIGSTS=1
"RTN","ORWDXA",79,0)
 S STATUS=$P($G(^OR(100,+ORID,8,+$P(ORID,";",2),0)),U,15)
"RTN","ORWDXA",80,0)
 I (STATUS=10)!(STATUS=11) D  Q   ; delete/cancel unreleased order
"RTN","ORWDXA",81,0)
 . N RPLORD
"RTN","ORWDXA",82,0)
 . S RPLORD=$P($G(^OR(100,+ORID,3)),U,5)    ; replaced order
"RTN","ORWDXA",83,0)
 . D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",84,0)
 . I STATUS=10,($P(X8,U,4)'=2) D  ; CANCEL signed, delayed, unreleased
"RTN","ORWDXA",85,0)
 . . ; taken from CLRDLY^ORCACT2
"RTN","ORWDXA",86,0)
 . . I REASON D SET^ORCACT2(+ORID,NATURE,REASON,,DCORIG)
"RTN","ORWDXA",87,0)
 . . I 'REASON D SET^ORCACT2(+ORID,"M","","Delayed Order Cancelled",DCORIG)
"RTN","ORWDXA",88,0)
 . . D STATUS^ORCSAVE2(+ORID,13) S $P(^OR(100,+ORID,8,1,0),U,15)=13
"RTN","ORWDXA",89,0)
 . E  D                           ; CANCEL OR DELETE unsigned, unreleased
"RTN","ORWDXA",90,0)
 . . I $P(X8,U,2)="DC" K ^OR(100,+ORID,6)
"RTN","ORWDXA",91,0)
 . . ; delete fwd ptr to order about to be deleted
"RTN","ORWDXA",92,0)
 . . I RPLORD,$P(X8,U,2)="NW" S $P(^OR(100,RPLORD,3),U,6)=""
"RTN","ORWDXA",93,0)
 . . ; delete ptr to order in Patient Event file #100.2
"RTN","ORWDXA",94,0)
 . . N EVT S EVT=$P($G(^OR(100,+ORID,0)),U,17) I EVT,EVT=+$O(^ORE(100.2,"AO",+ORID,0)) S $P(^ORE(100.2,EVT,0),U,4)="" K ^ORE(100.2,"AO",+ORID,EVT)
"RTN","ORWDXA",95,0)
 . . I $G(ISNEWORD) D DELETE^ORCSAVE2(ORID)
"RTN","ORWDXA",96,0)
 . . I '$G(ISNEWORD) D CANCEL^ORCSAVE2(ORID)
"RTN","ORWDXA",97,0)
 . I RPLORD,'(SIGSTS=1) S ORID=RPLORD  ; for Renews & Changes, show replaced order
"RTN","ORWDXA",98,0)
 . I '$D(^OR(100,+ORID)) D
"RTN","ORWDXA",99,0)
 . . S $P(REC(1),U)="~0",REC(2)="tDELETED: "_$E(REC(2),2,245)
"RTN","ORWDXA",100,0)
 . E  D
"RTN","ORWDXA",101,0)
 . . K REC
"RTN","ORWDXA",102,0)
 . . D GETBYIFN^ORWORR(.REC,+ORID_";"_$P($G(^OR(100,+ORID,3)),U,7))
"RTN","ORWDXA",103,0)
 . S $P(REC(1),U,14)=2 ; DCType = deletion
"RTN","ORWDXA",104,0)
 S ACTDA=$$ACTION^ORCSAVE("DC",+ORID,ORNP)
"RTN","ORWDXA",105,0)
 D SET^ORCACT2(+ORID,NATURE,REASON,,DCORIG)
"RTN","ORWDXA",106,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",107,0)
 S $P(REC(1),U,14)=$S(CREATE:1,1:3)  ;DCType - 1=NewOrder, 3=NewStatus
"RTN","ORWDXA",108,0)
 N PKG
"RTN","ORWDXA",109,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",110,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",111,0)
 I REASON=16&(PKG="PS") D
"RTN","ORWDXA",112,0)
 . N XMB
"RTN","ORWDXA",113,0)
 . S XMB="OR DRUG ORDER CANCELLED"
"RTN","ORWDXA",114,0)
 . S XMB(1)=$P($G(REC(2)),"tDiscontinue",2),XMB(4)=$P($G(^VA(200,DUZ,0)),U)
"RTN","ORWDXA",115,0)
 . S XMB(2)=+ORID
"RTN","ORWDXA",116,0)
 . S XMB(3)=+$P($G(^OR(100,+ORID,0)),U,2)
"RTN","ORWDXA",117,0)
 . S XMB(3)=$P($G(^DPT(XMB(3),0)),U)
"RTN","ORWDXA",118,0)
 . D ^XMB
"RTN","ORWDXA",119,0)
 Q
"RTN","ORWDXA",120,0)
DCREQIEN(VAL) ; Return IEN for Req Phys Cancelled reason
"RTN","ORWDXA",121,0)
 S VAL=$O(^ORD(100.03,"S","REQ",0))
"RTN","ORWDXA",122,0)
 Q
"RTN","ORWDXA",123,0)
COMPLETE(REC,ORID,ESCODE) ; Complete order (generic)
"RTN","ORWDXA",124,0)
 ;N X S X=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDXA",125,0)
 ;D DATES^ORCSAVE2(+ORID,,X)
"RTN","ORWDXA",126,0)
 ;D STATUS^ORCSAVE2(+ORID,2)
"RTN","ORWDXA",127,0)
 ; validate ESCode
"RTN","ORWDXA",128,0)
 D COMP^ORCSAVE2(ORID)
"RTN","ORWDXA",129,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",130,0)
 Q
"RTN","ORWDXA",131,0)
VERIFY(REC,ORID,ESCODE,ORVER) ; Verify order
"RTN","ORWDXA",132,0)
 ; validate ESCode
"RTN","ORWDXA",133,0)
 S ORVER=$G(ORVER,$S($D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:U))
"RTN","ORWDXA",134,0)
 I ORVER'=U D
"RTN","ORWDXA",135,0)
 . N ORIFN,ORES,ORI
"RTN","ORWDXA",136,0)
 . ; VERIFY any replaced orders:
"RTN","ORWDXA",137,0)
 . S ORIFN=ORID,ORES(ORIFN)="" D REPLCD^ORCACT1
"RTN","ORWDXA",138,0)
 . S ORI="" F  S ORI=$O(ORES(ORI)) Q:ORI=""  D EN^ORCSEND(ORI,"VR","",""),UNLK1^ORX2(+ORI):ORI'=ORID ;ORID locked prior
"RTN","ORWDXA",139,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",140,0)
 Q
"RTN","ORWDXA",141,0)
ALERT(DUMMY,ORID,ORDUZ) ; alert user (ORDUZ) when order (ORID) resulted
"RTN","ORWDXA",142,0)
 ;if no user passed, use ordering provider:
"RTN","ORWDXA",143,0)
 I $G(ORDUZ)<1 S ORDUZ=+$$ORDERER^ORQOR2(+ORID)
"RTN","ORWDXA",144,0)
 I $L($G(ORDUZ))<1 S ORDUZ=DUZ
"RTN","ORWDXA",145,0)
 S DUMMY=1,$P(^OR(100,+ORID,3),U,10)=ORDUZ
"RTN","ORWDXA",146,0)
 Q
"RTN","ORWDXA",147,0)
FLAG(REC,ORIFN,OREASON,ORNP) ; Flag order
"RTN","ORWDXA",148,0)
 N ORB,ORVP,DA,ORPS
"RTN","ORWDXA",149,0)
 D BULLETIN
"RTN","ORWDXA",150,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",151,0)
 K ^OR(100,+ORIFN,8,DA,3) S ^(3)="1^"_$G(XMZ)_U_+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON_$S($G(ORNP):"^^^^"_+ORNP,1:"")
"RTN","ORWDXA",152,0)
 D KILL^XM,MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",153,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; Last Activity
"RTN","ORWDXA",154,0)
 I +$G(ORNP)<1 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",155,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^1" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",156,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",157,0)
 Q
"RTN","ORWDXA",158,0)
BULLETIN ; flagged order bulletin
"RTN","ORWDXA",159,0)
 N OR0,OR3,ORDTXT,XMB,XMY,XMDUZ,ORENT,BULL,ORSRV,ORUSR
"RTN","ORWDXA",160,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORWDXA",161,0)
 ;CLA - 3/21/96:
"RTN","ORWDXA",162,0)
 S ORUSR=+$P(OR0,U,4)
"RTN","ORWDXA",163,0)
 S ORSRV=$G(^VA(200,ORUSR,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWDXA",164,0)
 S ORENT="USR.`"_ORUSR_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","ORWDXA",165,0)
 S BULL=$$GET^XPAR(ORENT,"ORB FLAGGED ORDERS BULLETIN",1,"Q")
"RTN","ORWDXA",166,0)
 Q:$G(BULL)'="Y"   ;quit if parm val not 'Y'es
"RTN","ORWDXA",167,0)
 ;
"RTN","ORWDXA",168,0)
 S XMB="OR FLAGGED ORDER",XMDUZ=DUZ,XMY(+$P(OR0,U,4))=""
"RTN","ORWDXA",169,0)
 S XMB(1)=$P(^DPT(+$P(OR0,U,2),0),U),XMB(2)=$P(^(0),U,9),XMB(3)="" ;sb AGE
"RTN","ORWDXA",170,0)
 S XMB(4)=$$FMTE^XLFDT($P(OR0,U,7))
"RTN","ORWDXA",171,0)
 D TEXT^ORQ12(.ORDTXT,+ORIFN,80)
"RTN","ORWDXA",172,0)
 S XMB(5)=$G(ORDTXT(1)),XMB(6)=$G(ORDTXT(2)),XMB(7)=$G(ORDTXT(3))
"RTN","ORWDXA",173,0)
 S XMB(8)=$$FMTE^XLFDT($P(OR0,U,8)),XMB(9)=$$FMTE^XLFDT($P(OR0,U,9)),XMB(10)=OREASON
"RTN","ORWDXA",174,0)
 S XMB(11)=$P($G(^ORD(100.01,+$P(OR3,U,3),0)),U)
"RTN","ORWDXA",175,0)
 D EN^XMB
"RTN","ORWDXA",176,0)
 Q
"RTN","ORWDXA",177,0)
UNFLAG(REC,ORIFN,OREASON) ; Unflag order
"RTN","ORWDXA",178,0)
 N DA,ORB,ORNP,ORVP,ORPS
"RTN","ORWDXA",179,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",180,0)
 S $P(^OR(100,+ORIFN,8,DA,3),U)=0,$P(^(3),U,6,8)=+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON D MSG^ORCFLAG(ORIFN)
"RTN","ORWDXA",181,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT  ; Last Activity
"RTN","ORWDXA",182,0)
 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",183,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^0" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",184,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",185,0)
 Q
"RTN","ORWDXA",186,0)
FLAGTXT(LST,ORID) ; flag reason
"RTN","ORWDXA",187,0)
 N FLAG
"RTN","ORWDXA",188,0)
 S FLAG=$G(^OR(100,+ORID,8,$P(ORID,";",2),3))
"RTN","ORWDXA",189,0)
 S LST(1)="FLAGGED: "_$$FMTE^XLFDT($P(FLAG,U,3))_" by "_$P($G(^VA(200,+$P(FLAG,U,4),0)),U)
"RTN","ORWDXA",190,0)
 S LST(2)=$P(FLAG,U,5) ; reason
"RTN","ORWDXA",191,0)
 Q
"RTN","ORWDXA",192,0)
WCGET(LST,ORID) ; ward comments
"RTN","ORWDXA",193,0)
 N I,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",194,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,8,ACT,5,I)) Q:'I  S LST(I)=$G(^(I,0))
"RTN","ORWDXA",195,0)
 Q
"RTN","ORWDXA",196,0)
WCPUT(ERR,ORID,WCLST) ; Set ward comments
"RTN","ORWDXA",197,0)
 N DIERR,ERRLST,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",198,0)
 D WP^DIE(100.008,ACT_","_ORIFN_",",50,"","WCLST","ERRLST")
"RTN","ORWDXA",199,0)
 S ERR="" I $D(DIERR) S ERR="An error occurred while saving comments."
"RTN","ORWDXA",200,0)
 Q
"RTN","ORWDXA",201,0)
OFCPLX(ORY,ORID,PRTORDER) ; is ORID child of PRTORDER
"RTN","ORWDXA",202,0)
 N NUMCHDS,NOWID,NOWVAL,X3,ORDA,ISNOW
"RTN","ORWDXA",203,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXA",204,0)
 S ISNOW=0
"RTN","ORWDXA",205,0)
 D ISNOW^ORWDXR(.ISNOW,+ORID)
"RTN","ORWDXA",206,0)
 Q:ISNOW
"RTN","ORWDXA",207,0)
 N PKG
"RTN","ORWDXA",208,0)
 S PKG=$P($G(^OR(100,+ORID,0)),U,14)
"RTN","ORWDXA",209,0)
 S PKG=$$NMSP^ORCD(PKG)
"RTN","ORWDXA",210,0)
 I PKG'="PS" Q
"RTN","ORWDXA",211,0)
 I $L($G(^OR(100,+ORID,3))),('$L($P(^(3),U,9))) Q
"RTN","ORWDXA",212,0)
 S (NUMCHDS,NOWID,NOWVAL,X3,ORDA)=0
"RTN","ORWDXA",213,0)
 S PRTORDER=+$P(^(3),U,9)
"RTN","ORWDXA",214,0)
 S X3=$G(^OR(100,PRTORDER,3)),ORDA=$P(X3,U,7)
"RTN","ORWDXA",215,0)
 S PRTORDER=PRTORDER_";"_ORDA
"RTN","ORWDXA",216,0)
 S NUMCHDS=$P($G(^OR(100,+PRTORDER,2,0)),U,4)
"RTN","ORWDXA",217,0)
 I NUMCHDS>2 S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",218,0)
 S:$D(^OR(100,+PRTORDER,4.5,"ID","NOW")) NOWID=$O(^("NOW",0))
"RTN","ORWDXA",219,0)
 S:NOWID NOWVAL=$G(^OR(100,+PRTORDER,4.5,NOWID,1))
"RTN","ORWDXA",220,0)
 I NOWVAL=1 Q
"RTN","ORWDXA",221,0)
 E  S ORY="COMPLEX-PSI"_U_PRTORDER
"RTN","ORWDXA",222,0)
 Q
"RTN","ORWDXA",223,0)
ISACTOI(ORY,OI) ; Is ord item active?
"RTN","ORWDXA",224,0)
 I $G(^ORD(101.43,+OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXA",225,0)
 . S ORY=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXA",226,0)
 Q
"RTN","ORWDXA",227,0)
UPCTCHK(ORID) ;
"RTN","ORWDXA",228,0)
 ;ORID=ORDER NUMBER
"RTN","ORWDXA",229,0)
 ;RETURNS 1 IF THERE IS AN UPCARET IN THE ORDER'S COMMENTS
"RTN","ORWDXA",230,0)
 N RET,COMMID,WPCNT,PIID S RET=0
"RTN","ORWDXA",231,0)
 S COMMID=$O(^OR(100,+ORID,4.5,"ID","COMMENT",0))
"RTN","ORWDXA",232,0)
 I COMMID S WPCNT=0 F  S WPCNT=$O(^OR(100,+ORID,4.5,COMMID,2,WPCNT)) Q:'WPCNT!(RET)  D
"RTN","ORWDXA",233,0)
 .I $G(^OR(100,+ORID,4.5,COMMID,2,WPCNT,0))["^" S RET=1
"RTN","ORWDXA",234,0)
 S PIID=$O(^OR(100,+ORID,4.5,"ID","PI",0))
"RTN","ORWDXA",235,0)
 I PIID S WPCNT=0 F  S WPCNT=$O(^OR(100,+ORID,4.5,PIID,2,WPCNT)) Q:'WPCNT!(RET)  D
"RTN","ORWDXA",236,0)
 .I $G(^OR(100,+ORID,4.5,PIID,2,WPCNT,0))["^" S RET=1
"RTN","ORWDXA",237,0)
 Q RET
"RTN","ORWDXC")
0^63^B52838872
"RTN","ORWDXC",1,0)
ORWDXC ; SLC/KCM - Utilities for Order Checking ;11/02/10  11:26
"RTN","ORWDXC",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,141,221,243,280**;Dec 17, 1997;Build 85
"RTN","ORWDXC",3,0)
 ;
"RTN","ORWDXC",4,0)
ON(VAL) ; returns E if order checking enabled, otherwise D
"RTN","ORWDXC",5,0)
 S VAL=$$GET^XPAR("DIV^SYS^PKG","ORK SYSTEM ENABLE/DISABLE")
"RTN","ORWDXC",6,0)
 Q
"RTN","ORWDXC",7,0)
FILLID(VAL,DLG) ; Return the FillerID (namespace) for a dialog
"RTN","ORWDXC",8,0)
 N DGRP
"RTN","ORWDXC",9,0)
 S VAL="",DGRP=$P($G(^ORD(101.41,DLG,0)),U,5) Q:'DGRP
"RTN","ORWDXC",10,0)
 S DLG=$$DEFDLG^ORWDXQ(DGRP)
"RTN","ORWDXC",11,0)
 S VAL=$P($G(^ORD(101.41,DLG,0)),U,7),VAL=$$NMSP^ORCD(VAL)
"RTN","ORWDXC",12,0)
 I VAL="PS" D
"RTN","ORWDXC",13,0)
 . N X
"RTN","ORWDXC",14,0)
 . S X=$P($P($G(^ORD(100.98,DGRP,0)),U,3)," ")
"RTN","ORWDXC",15,0)
 . I $L(X) S VAL="PS"_$S(X="UD":"I",1:X)
"RTN","ORWDXC",16,0)
 Q
"RTN","ORWDXC",17,0)
DISPLAY(LST,DFN,FID) ; Return list of Order Checks for a FillerID (namespace)
"RTN","ORWDXC",18,0)
 N I,ORX,ORY
"RTN","ORWDXC",19,0)
 S ORX=1,ORX(1)="|"_FID
"RTN","ORWDXC",20,0)
 D EN^ORKCHK(.ORY,DFN,.ORX,"DISPLAY")
"RTN","ORWDXC",21,0)
 S I=0 F  S I=$O(ORY(I)) Q:I'>0  S LST(I)=$P(ORY(I),U,4)
"RTN","ORWDXC",22,0)
 Q
"RTN","ORWDXC",23,0)
ACCEPT(LST,DFN,FID,STRT,ORL,OIL,ORIFN,ORREN)    ; Return list of Order Checks on Accept Order
"RTN","ORWDXC",24,0)
 ; OIL(n)=OIptr^PS|PSIV|LR^PkgInfo
"RTN","ORWDXC",25,0)
 ; ORREN - IF ORREN IS SET TO 1 THEN ORIFN IS THE ORDER GETTING RENEWED
"RTN","ORWDXC",26,0)
 N X,Y,USID,ORCHECK,ORI,ORX,ORY
"RTN","ORWDXC",27,0)
 ; convert relative start date to real start date
"RTN","ORWDXC",28,0)
 S ORL=ORL_";SC(",X=STRT,STRT=""
"RTN","ORWDXC",29,0)
 D:X="AM" AM^ORCSAVE2 D:X="NEXT" NEXT^ORCSAVE2
"RTN","ORWDXC",30,0)
 I $L(X) S %DT="FTX" D ^%DT S:Y'>0 Y="" S STRT=Y
"RTN","ORWDXC",31,0)
 ; do the SELECT order checks
"RTN","ORWDXC",32,0)
 S ORI=0 F  S ORI=$O(OIL(ORI)) Q:'ORI  D
"RTN","ORWDXC",33,0)
 . Q:'OIL(ORI)
"RTN","ORWDXC",34,0)
 . S USID=$$USID(OIL(ORI))
"RTN","ORWDXC",35,0)
 . S OIL(ORI,"USID")=USID
"RTN","ORWDXC",36,0)
 . S ORX=1,ORX(1)=+OIL(ORI)_"|"_FID_"|"_USID
"RTN","ORWDXC",37,0)
 . D EN^ORKCHK(.ORY,DFN,.ORX,"SELECT")
"RTN","ORWDXC",38,0)
 . I $D(ORY) D RETURN^ORCHECK ; expects ORY, ORCHECK
"RTN","ORWDXC",39,0)
 . K ORX,ORY
"RTN","ORWDXC",40,0)
 ; do the ACCEPT order checks
"RTN","ORWDXC",41,0)
 S (ORI,ORX)=0 F  S ORI=$O(OIL(ORI)) Q:'ORI  D
"RTN","ORWDXC",42,0)
 . Q:'OIL(ORI)
"RTN","ORWDXC",43,0)
 . S ORX=ORX+1
"RTN","ORWDXC",44,0)
 . S ORX(ORX)=+OIL(ORI)_"|"_FID_"|"_OIL(ORI,"USID")_"|"_STRT
"RTN","ORWDXC",45,0)
 . I $P(OIL(ORI),U,2)="LR" S $P(ORX(ORX),"|",6)=$P(OIL(ORI),U,3)
"RTN","ORWDXC",46,0)
 D EN^ORKCHK(.ORY,DFN,.ORX,"ACCEPT",.OIL)
"RTN","ORWDXC",47,0)
 I $D(ORY) D RETURN^ORCHECK   ; expects ORY, ORCHECK
"RTN","ORWDXC",48,0)
 ; return ORCHECK as 1 dimensional list
"RTN","ORWDXC",49,0)
 D FDBDOWN^ORCHECK(0)
"RTN","ORWDXC",50,0)
 D OPOS(DFN)
"RTN","ORWDXC",51,0)
 D CHK2LST
"RTN","ORWDXC",52,0)
 Q
"RTN","ORWDXC",53,0)
DELAY(LST,DFN,FID,STRT,ORL,OIL) ; Return list of Order Checks on Accept Delayed
"RTN","ORWDXC",54,0)
 ; OIL(n)=OIptr^PS|PSIV|LR^PkgInfo
"RTN","ORWDXC",55,0)
 N X,Y,ORCHECK,ORI,ORX,ORY
"RTN","ORWDXC",56,0)
 ; convert relative start date to real start date
"RTN","ORWDXC",57,0)
 S ORL=ORL_";SC(",X=STRT,STRT=""
"RTN","ORWDXC",58,0)
 D:X="AM" AM^ORCSAVE2 D:X="NEXT" NEXT^ORCSAVE2
"RTN","ORWDXC",59,0)
 I $L(X) S %DT="FTX" D ^%DT S:Y'>0 Y="" S STRT=Y
"RTN","ORWDXC",60,0)
 ; do the ACCEPT order checks
"RTN","ORWDXC",61,0)
 S (ORI,ORX)=0 F  S ORI=$O(OIL(ORI)) Q:'ORI  D
"RTN","ORWDXC",62,0)
 . S ORX=ORX+1
"RTN","ORWDXC",63,0)
 . S ORX(ORX)=+OIL(ORI)_"|"_FID_"|"_$$USID(OIL(ORI))_"|"_STRT
"RTN","ORWDXC",64,0)
 . I $P(OIL(ORI),U,2)="LR" S $P(ORX(ORX),"|",6)=$P(OIL(ORI),U,3)
"RTN","ORWDXC",65,0)
 D EN^ORKCHK(.ORY,DFN,.ORX,"ALL")
"RTN","ORWDXC",66,0)
 I $D(ORY) D RETURN^ORCHECK   ; expects ORY, ORCHECK
"RTN","ORWDXC",67,0)
 ; return ORCHECK as 1 dimensional list
"RTN","ORWDXC",68,0)
 D CHK2LST
"RTN","ORWDXC",69,0)
 Q
"RTN","ORWDXC",70,0)
SESSION(LST,ORVP,ORLST)  ; Return list of Order Checks on Release Order
"RTN","ORWDXC",71,0)
 N ORES,ORCHECK
"RTN","ORWDXC",72,0)
 S ORVP=+ORVP_";DPT("
"RTN","ORWDXC",73,0)
 S I=0 F  S I=$O(ORLST(I)) Q:'I  D
"RTN","ORWDXC",74,0)
 . I +$P(ORLST(I),";",2)'=1 Q  ; order not new
"RTN","ORWDXC",75,0)
 . I $P(ORLST(I),U,3)="0" Q    ; order not being released
"RTN","ORWDXC",76,0)
 . S ORES($P(ORLST(I),U))=""
"RTN","ORWDXC",77,0)
 D SESSION^ORCHECK
"RTN","ORWDXC",78,0)
 D OPOS(+ORVP)
"RTN","ORWDXC",79,0)
 D CHK2LST
"RTN","ORWDXC",80,0)
 D CHECKIT(.LST)
"RTN","ORWDXC",81,0)
 Q
"RTN","ORWDXC",82,0)
SAVECHK(OK,ORVP,RSN,LST)    ; Save order checks for session
"RTN","ORWDXC",83,0)
 N ORCHECK,ORIFN S OK=1
"RTN","ORWDXC",84,0)
 D LST2CHK
"RTN","ORWDXC",85,0)
 I $L(RSN)>0 S ORCHECK("OK")=RSN
"RTN","ORWDXC",86,0)
 S ORIFN=0 F  S ORIFN=$O(ORCHECK(ORIFN)) Q:'ORIFN  D OC^ORCSAVE2
"RTN","ORWDXC",87,0)
 Q
"RTN","ORWDXC",88,0)
DELORD(OK,ORIFN)      ; Delete order
"RTN","ORWDXC",89,0)
 N STS,DIK,DA
"RTN","ORWDXC",90,0)
 S STS=$P(^OR(100,+ORIFN,8,1,0),U,15),OK=0
"RTN","ORWDXC",91,0)
 I (STS=10)!(STS=11) D  Q  ; makes sure it's an unreleased order
"RTN","ORWDXC",92,0)
 . S DA=+ORIFN,DIK="^OR(100," Q:'DA
"RTN","ORWDXC",93,0)
 . D ^DIK
"RTN","ORWDXC",94,0)
 . S OK=1
"RTN","ORWDXC",95,0)
 . D DELETE^OROCAPI1(+ORIFN)
"RTN","ORWDXC",96,0)
 Q
"RTN","ORWDXC",97,0)
USID(ORITMX) ; Return universal svc ID for an orderable item
"RTN","ORWDXC",98,0)
 ; ORITMX = OI^NMSP^PKGINFO
"RTN","ORWDXC",99,0)
 N RSLT,ORDRUG S RSLT=""
"RTN","ORWDXC",100,0)
 I $E($P(ORITMX,U,2),1,2)="PS" D
"RTN","ORWDXC",101,0)
 . I $P(ORITMX,U,2)="PSIV" D
"RTN","ORWDXC",102,0)
 . . N PSOI,TYPE,VOL S VOL=""
"RTN","ORWDXC",103,0)
 . . S PSOI=+$P($G(^ORD(101.43,+ORITMX,0)),U,2)
"RTN","ORWDXC",104,0)
 . . S TYPE=$P($P(ORITMX,U,3),";")
"RTN","ORWDXC",105,0)
 . . I TYPE="B" S VOL=$P($P(ORITMX,U,3),";",2)
"RTN","ORWDXC",106,0)
 . . D ENDDIV^PSJORUTL(PSOI,TYPE,VOL,.ORDRUG)
"RTN","ORWDXC",107,0)
 . . S ORDRUG=+ORDRUG
"RTN","ORWDXC",108,0)
 . E  S ORDRUG=+$P(ORITMX,U,3)
"RTN","ORWDXC",109,0)
 . S RSLT=$$ENDCM^PSJORUTL(ORDRUG)
"RTN","ORWDXC",110,0)
 . S RSLT=$P(RSLT,U,3)_"^^99NDF^"_ORDRUG_U_$$NAME50^ORPEAPI(ORDRUG)_"^99PSD"
"RTN","ORWDXC",111,0)
 E  S RSLT=$$USID^ORMBLD(+ORITMX)
"RTN","ORWDXC",112,0)
 I +$P(RSLT,U)=0,+($P(RSLT,U,4)=0) S RSLT="" ; has to be null (why?)
"RTN","ORWDXC",113,0)
 Q RSLT
"RTN","ORWDXC",114,0)
 ;
"RTN","ORWDXC",115,0)
CHK2LST ; creates list that can be passed to broker from ORCHECK array
"RTN","ORWDXC",116,0)
 ; expects ORCHECK to be present and populates LST
"RTN","ORWDXC",117,0)
 D REMDUPS ;similar to REMDUPS^ORCHECK
"RTN","ORWDXC",118,0)
 N ORIFN,ORID,CDL,I,ILST,LASTIFN,RESERVED,ORCHECK2,ORNUM,OLIST S ILST=0,LASTIFN=0,RESERVED=0,OLIST=0
"RTN","ORWDXC",119,0)
 S ORIFN="" F  S ORIFN=$O(ORCHECK(ORIFN)) Q:ORIFN=""  D
"RTN","ORWDXC",120,0)
 . S CDL=0 F  S CDL=$O(ORCHECK(ORIFN,CDL)) Q:'CDL  D
"RTN","ORWDXC",121,0)
 . . S I=0 F  S I=$O(ORCHECK(ORIFN,CDL,I)) Q:'I  D
"RTN","ORWDXC",122,0)
 . . . S ORCHECK2(ORIFN,CDL,+ORCHECK(ORIFN,CDL,I),I)=ORCHECK(ORIFN,CDL,I)
"RTN","ORWDXC",123,0)
 K ORCHECK
"RTN","ORWDXC",124,0)
 S ORIFN="" F  S ORIFN=$O(ORCHECK2(ORIFN)) Q:ORIFN=""  D
"RTN","ORWDXC",125,0)
 . S CDL=0 F  S CDL=$O(ORCHECK2(ORIFN,CDL)) Q:'CDL  D
"RTN","ORWDXC",126,0)
 . . S ORNUM=0 F  S ORNUM=$O(ORCHECK2(ORIFN,CDL,ORNUM)) Q:'ORNUM  D
"RTN","ORWDXC",127,0)
 . . . S I=0 F  S I=$O(ORCHECK2(ORIFN,CDL,ORNUM,I)) Q:'I  D
"RTN","ORWDXC",128,0)
 . . . . S OLIST=OLIST+1,ORCHECK(ORIFN,CDL,OLIST)=ORCHECK2(ORIFN,CDL,ORNUM,I)
"RTN","ORWDXC",129,0)
 S ORIFN="" F  S ORIFN=$O(ORCHECK(ORIFN)) Q:ORIFN=""  D
"RTN","ORWDXC",130,0)
 . S CDL=0 F  S CDL=$O(ORCHECK(ORIFN,CDL)) Q:'CDL  D
"RTN","ORWDXC",131,0)
 . . S I=0 F  S I=$O(ORCHECK(ORIFN,CDL,I)) Q:'I  D
"RTN","ORWDXC",132,0)
 . . . I LASTIFN'=ORIFN S LASTIFN=ORIFN,RESERVED=ILST+1,ILST=ILST+1 ; saves a spot for the RDI warning at the top of each order's checks
"RTN","ORWDXC",133,0)
 . . . S ORID=ORIFN I +ORID,(+ORID=ORID) S ORID=ORID_";1"
"RTN","ORWDXC",134,0)
 . . . I '$P(ORCHECK(ORIFN,CDL,I),U,2) Q  ; CDL="" means don't show
"RTN","ORWDXC",135,0)
 . . . I $P(ORCHECK(ORIFN,CDL,I),U,1)=99 S LST(RESERVED)=ORID_U_ORCHECK(ORIFN,CDL,I) Q  ;Put RDI warning at the top of each order's checks
"RTN","ORWDXC",136,0)
 . . . S ILST=ILST+1,LST(ILST)=ORID_U_ORCHECK(ORIFN,CDL,I)
"RTN","ORWDXC",137,0)
 Q
"RTN","ORWDXC",138,0)
LST2CHK ; create ORCHECK array from list passed by broker
"RTN","ORWDXC",139,0)
 N ORIFN,CDL,I,ILST S I=0
"RTN","ORWDXC",140,0)
 S ILST="" F  S ILST=$O(LST("ORCHECKS",ILST)) Q:$L(ILST)'>0  D
"RTN","ORWDXC",141,0)
 . I $D(LST("ORCHECKS",ILST,0)) D
"RTN","ORWDXC",142,0)
 . . N J S J=0 S X=LST("ORCHECKS",ILST,J) F  S J=$O(LST("ORCHECKS",ILST,J)) Q:'J  S X=X_LST("ORCHECKS",ILST,J)
"RTN","ORWDXC",143,0)
 . I '$D(LST("ORCHECKS",ILST,0)) S X=LST("ORCHECKS",ILST)
"RTN","ORWDXC",144,0)
 . S ORIFN=$P(X,U),CDL=$P(X,U,3)
"RTN","ORWDXC",145,0)
 . I +$G(ORIFN)>0,+$G(CDL)>0 D  ;cla 12/16/03
"RTN","ORWDXC",146,0)
 . . S I=I+1,ORCHECK(+ORIFN,CDL,I)=$P(X,U,2,4)
"RTN","ORWDXC",147,0)
 Q
"RTN","ORWDXC",148,0)
CHECKIT(X) ;remove uncessesary duplication of Duplicate Therapy checks
"RTN","ORWDXC",149,0)
 N I,J,Y
"RTN","ORWDXC",150,0)
 S I=0 F  S I=$O(X(I)) Q:'I  I $P(X(I),U,2)=17 D
"RTN","ORWDXC",151,0)
 .Q:$P($G(^ORD(100.8,17,0)),U)'="DUPLICATE DRUG THERAPY"
"RTN","ORWDXC",152,0)
 .N STR S STR=$P($P(X(I),"{",2),"}")
"RTN","ORWDXC",153,0)
 .S J=0 F  S J=J+1 Q:J>$L(STR,", ")  S Y(+X(I),I,J)=$P(STR,", ",J)
"RTN","ORWDXC",154,0)
 S I=0 F  S I=$O(Y(I)) Q:'I  D
"RTN","ORWDXC",155,0)
 .S J=0 F  S J=$O(Y(I,J)) Q:'J  D
"RTN","ORWDXC",156,0)
 ..S K=J F  S K=$O(Y(I,K)) Q:'K  D
"RTN","ORWDXC",157,0)
 ...N A,B M A=Y(I,J),B=Y(I,K)
"RTN","ORWDXC",158,0)
 ...I $$AINB(.A,.B) K X(J)
"RTN","ORWDXC",159,0)
 ...I $$AINB(.B,.A) K X(K)
"RTN","ORWDXC",160,0)
 Q
"RTN","ORWDXC",161,0)
AINB(A,B) ;if array A is a subset of array B then return 1, else return 0
"RTN","ORWDXC",162,0)
 N I,RET
"RTN","ORWDXC",163,0)
 S RET=1
"RTN","ORWDXC",164,0)
 S I=0 F  S I=$O(A(I)) Q:'I  I '$$XINA(A(I),.B) S RET=0 Q
"RTN","ORWDXC",165,0)
 Q RET
"RTN","ORWDXC",166,0)
XINA(X,A) ;if string X is an entry in array A then return 1, else return 0
"RTN","ORWDXC",167,0)
 N I,RET
"RTN","ORWDXC",168,0)
 S RET=0
"RTN","ORWDXC",169,0)
 S I=0 F  S I=$O(A(I)) Q:'I  I X=A(I) S RET=1 Q
"RTN","ORWDXC",170,0)
 Q RET
"RTN","ORWDXC",171,0)
REMDUPS ;similar to REMDUPS^ORCHECK
"RTN","ORWDXC",172,0)
 N IFN,CDL,I S IFN="NEW"
"RTN","ORWDXC",173,0)
 S CDL=0 F  S CDL=$O(ORCHECK(IFN,CDL)) Q:'CDL  D
"RTN","ORWDXC",174,0)
 . S I=0 F  S I=$O(ORCHECK(IFN,CDL,I)) Q:'I  D
"RTN","ORWDXC",175,0)
 . . S J=I F  S J=$O(ORCHECK(IFN,CDL,J)) Q:'J  I $G(ORCHECK(IFN,CDL,I))=$G(ORCHECK(IFN,CDL,J)) K ORCHECK(IFN,CDL,J) S ORCHECK=$G(ORCHECK)-1
"RTN","ORWDXC",176,0)
 Q
"RTN","ORWDXC",177,0)
OPOS(DFN) ;handles saving and removing order checks that should only be displayed once per cprs session
"RTN","ORWDXC",178,0)
 ; expects ORCHECK
"RTN","ORWDXC",179,0)
 ; sets these order checks into the "Once Per cprs Session" global ^TMP($J,"OC-OPOS",DFN)
"RTN","ORWDXC",180,0)
 N I,J,K
"RTN","ORWDXC",181,0)
 S I="" F  S I=$O(ORCHECK(I)) Q:'$L(I)  D
"RTN","ORWDXC",182,0)
 .S J=0 F  S J=$O(ORCHECK(I,J)) Q:'J  D
"RTN","ORWDXC",183,0)
 ..S K=0 F  S K=$O(ORCHECK(I,J,K)) Q:'K  D
"RTN","ORWDXC",184,0)
 ...Q:(ORCHECK(I,J,K)'["These checks will NOT be performed for this patient")
"RTN","ORWDXC",185,0)
 ...I $L(ORCHECK(I,J,K),"&")>1  I $D(^TMP($J,"OC-OPOS",DFN,$E($P(ORCHECK(I,J,K),"&",2),1,225))) K ORCHECK(I,J,K) Q
"RTN","ORWDXC",186,0)
 ...I $D(^TMP($J,"OC-OPOS",DFN,$E(ORCHECK(I,J,K),1,225))) K ORCHECK(I,J,K) Q
"RTN","ORWDXC",187,0)
 ...I $L(ORCHECK(I,J,K),"&")>1 S ^TMP($J,"OC-OPOS",DFN,$E($P(ORCHECK(I,J,K),"&",2),1,225))="" Q
"RTN","ORWDXC",188,0)
 ...S ^TMP($J,"OC-OPOS",DFN,$E(ORCHECK(I,J,K),1,225))=""
"RTN","ORWDXC",189,0)
 Q
"RTN","ORWDXM1")
0^51^B71014486
"RTN","ORWDXM1",1,0)
ORWDXM1 ; SLC/KCM - Order Dialogs, Menus;5/12/08 6:14am ;9/10/2010
"RTN","ORWDXM1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,178,185,187,215,243,280**;Dec 17, 1997;Build 85
"RTN","ORWDXM1",3,0)
BLDQRSP(LST,ORIT,FLDS,ISIMO,ENCLOC) ; Build responses for an order
"RTN","ORWDXM1",4,0)
 ; LST=QuickLevel^ResponseID(ORIT;$H)^Dialog^Type^FormID^DGrp
"RTN","ORWDXM1",5,0)
 ; LST(n)=verify or reject text
"RTN","ORWDXM1",6,0)
 ; ORIT= ptr to 101.41 for quick order, 100 for copy
"RTN","ORWDXM1",7,0)
 ;       1   2    3    4   5   6    7    8        11-20
"RTN","ORWDXM1",8,0)
 ; FLDS=DFN^LOC^ORNP^INPT^SEX^AGE^EVENT^SC%^^^Key Variables...
"RTN","ORWDXM1",9,0)
 ; ORIT=+ORIT: ptr to 101.41, $E(ORIT)=C: copy $E(ORIT)=X: change
"RTN","ORWDXM1",10,0)
 ; !! SHOULD CHECK for PRE-CPRS ORDERS (treat as text?)
"RTN","ORWDXM1",11,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWDXM1",12,0)
 N ORWMODE ; 0:Dlg,Quick 1:copy 2:change
"RTN","ORWDXM1",13,0)
 N TEMPCAT ; pt cat from DPT
"RTN","ORWDXM1",14,0)
 N ISXFER ; Trnsfr order?
"RTN","ORWDXM1",15,0)
 N ORIMO ;If IMO(inpt med on opt)
"RTN","ORWDXM1",16,0)
 N TEMPORIT
"RTN","ORWDXM1",17,0)
 N ADMLOC,PATLOC,ORDLOC,LEVEL,DELAY,SCHLOC,SCHTYP
"RTN","ORWDXM1",18,0)
 S PATLOC=$P(FLDS,U,2)
"RTN","ORWDXM1",19,0)
 S ORDLOC=$S(ORIT["C":+$P($G(^OR(100,+$P(ORIT,"C",2),0)),U,10),1:0)
"RTN","ORWDXM1",20,0)
 S ORIMO=$G(ISIMO)
"RTN","ORWDXM1",21,0)
 S ORWMODE=0,ISXFER=""
"RTN","ORWDXM1",22,0)
 S:$E(ORIT)="C" ORWMODE=1 S:$E(ORIT)="T" ORWMODE=1,ISXFER=";T" ;treat xfer as copy
"RTN","ORWDXM1",23,0)
 S:$E(ORIT)="X" ORWMODE=2
"RTN","ORWDXM1",24,0)
 S TEMPORIT=ORIT
"RTN","ORWDXM1",25,0)
 I ORWMODE S ORIT=$E(ORIT,2,999)
"RTN","ORWDXM1",26,0)
 S LST(0)=""
"RTN","ORWDXM1",27,0)
 D CHKDSBL^ORWDXM3(.LST,ORIT,ORWMODE) Q:+LST(0)=8  ;disable
"RTN","ORWDXM1",28,0)
 D CHKVACT^ORWDXM3(.LST,ORIT,ORWMODE,$P(FLDS,U,3)) Q:+LST(0)=8  ;action
"RTN","ORWDXM1",29,0)
 I ORWMODE=1 D CHKCOPY^ORWDXM3(.LST,ORIT,FLDS) Q:+LST(0)=8  ;no copy
"RTN","ORWDXM1",30,0)
 I ORWMODE=2 D BLD4CHG^ORWDXM3(.LST,ORIT,FLDS) Q  ;change
"RTN","ORWDXM1",31,0)
 I 'ORWMODE,($P(^ORD(101.41,+ORIT,0),U,4)="D"),'($O(^DIC(9.4,"C","OR",0))[$P(^ORD(101.41,+ORIT,0),U,7)) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER) Q
"RTN","ORWDXM1",32,0)
 N ORIMTYPE,ORCOMP,ORTAS,LRFZX,LRFSAMP,LRFSPEC,LRFDATE,LRFURG,LRFSCH
"RTN","ORWDXM1",33,0)
 N ORTIME,ORCOLLCT,ORMAX,ORTEST,ORIMTIME,ORSMAX,ORSTMS,ORSCH
"RTN","ORWDXM1",34,0)
 N PSJNOPC,ORMORE,ORINPT,ORXNP,ORSCHED,ORQTY,ORNOUNS,ORXNP,OREFILLS
"RTN","ORWDXM1",35,0)
 N ORCOMPLX,ORQTY,ORCOPAY,ORDRUG,ORWPSPIK,ORWPSWRG,ORSD,ORDSUP,ORWP94
"RTN","ORWDXM1",36,0)
 N ORPARAM,ORNPO,ORTIME,ORMEAL,ORTRAY,ORDATE,GMRCNOPD,GMRCNOAT,GMRCREAF
"RTN","ORWDXM1",37,0)
 N ORTYPE,ORVP,ORL,ORNP,ORSEX,ORAGE,ORWARD,OREVENT,ORDIV,ORSC,KEYVAR
"RTN","ORWDXM1",38,0)
 N ORDG,ORDIALOG,ORCAT,FIRST,ORQUIT,X,ORTRAIL,ORLEAD,RSPREF,AUTOACK
"RTN","ORWDXM1",39,0)
 N OREVNTYP
"RTN","ORWDXM1",40,0)
 S ORWP94=$O(^ORD(101.41,"AB","PS MEDS",0))>0
"RTN","ORWDXM1",41,0)
 S ORVP=$P(FLDS,U,1)_";DPT(",ORNP=+$P(FLDS,U,3),ORSC=$P(FLDS,U,8)
"RTN","ORWDXM1",42,0)
 S ORL=$P(FLDS,U,2)_";SC(",ORL(2)=ORL
"RTN","ORWDXM1",43,0)
 S ORSEX=$P(FLDS,U,5),ORAGE=$P(FLDS,U,6),ORTYPE="Q",FIRST=1
"RTN","ORWDXM1",44,0)
 I $P(FLDS,U,4),$G(^SC(+ORL,42)) S ORWARD=+^SC(+ORL,42)
"RTN","ORWDXM1",45,0)
 I $L($P(FLDS,U,7))  D
"RTN","ORWDXM1",46,0)
 . S OREVENT=$P(FLDS,U,7)
"RTN","ORWDXM1",47,0)
 . S OREVNTYP=$P(OREVENT,";",2)
"RTN","ORWDXM1",48,0)
 . S OREVENT("TS")=$P(OREVENT,";",3)
"RTN","ORWDXM1",49,0)
 . S OREVENT("EFFECTIVE")=$P(OREVENT,";",4)
"RTN","ORWDXM1",50,0)
 . S OREVENT=+$P(OREVENT,";",1)
"RTN","ORWDXM1",51,0)
 I 'ORWMODE D
"RTN","ORWDXM1",52,0)
 . D SETKEYV^ORWDXM3($P(FLDS,U,11,20)) ; from menu path
"RTN","ORWDXM1",53,0)
 . S KEYVAR=$$KEYVAR^ORWDXM3(ORIT) ; from entry action
"RTN","ORWDXM1",54,0)
 . D SETKEYV^ORWDXM3(KEYVAR)
"RTN","ORWDXM1",55,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",56,0)
 ; init return record based on auto-accept
"RTN","ORWDXM1",57,0)
 I ORWMODE S LST(0)="2^"_ORIT ;verify on copy
"RTN","ORWDXM1",58,0)
 E  S LST(0)=+$P($G(^ORD(101.41,ORIT,5)),U,8)_U_ORIT
"RTN","ORWDXM1",59,0)
 S TEMPCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWDXM1",60,0)
 I TEMPCAT="I",+$P(FLDS,U,4)=1,$E(TEMPORIT)="C",$P($G(^ORD(100.98,$P($G(^OR(100,+ORIT,0)),U,11),0)),U)="OUTPATIENT MEDICATIONS" S TEMPCAT="O"
"RTN","ORWDXM1",61,0)
 I $L($G(OREVNTYP)) D
"RTN","ORWDXM1",62,0)
 . S ORCAT=$S(OREVNTYP="A":"I",OREVNTYP="T":"I",OREVNTYP="O":TEMPCAT,OREVNTYP="M":TEMPCAT,OREVNTYP="C":TEMPCAT,1:"O") I $G(OREVENT) D
"RTN","ORWDXM1",63,0)
 .. N X S X=$$EVT^OREVNTX(OREVENT),X=$P($G(^ORD(100.5,+X,0)),U,7)
"RTN","ORWDXM1",64,0)
 .. I OREVNTYP="T",X,X<4 S ORCAT="O" ;To pass=outpt
"RTN","ORWDXM1",65,0)
 .. I OREVNTYP="D",X=41 S ORCAT="I" ;From ASIH=inpt
"RTN","ORWDXM1",66,0)
 E  S ORCAT=TEMPCAT
"RTN","ORWDXM1",67,0)
 D SETUP^ORWDXM4 Q:+LST(0)=8
"RTN","ORWDXM1",68,0)
 S X="OR GTX START DATE"_$S($G(ORWP94):"/TIME",1:"")
"RTN","ORWDXM1",69,0)
 I ORWMODE,(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D  ;remove old values
"RTN","ORWDXM1",70,0)
 . K ORDIALOG($$PTR^ORCD(X),1)
"RTN","ORWDXM1",71,0)
 . I ORWMODE=2,$$DRAFT^ORWDX2(ORIT) Q  ;keep comments
"RTN","ORWDXM1",72,0)
 . K:ISXFER'["T" ORDIALOG($$PTR^ORCD("OR GTX WORD PROCESSING 1"),1)
"RTN","ORWDXM1",73,0)
 D SETUPS^ORWDXM4 ;moved to save space, expects X
"RTN","ORWDXM1",74,0)
 Q:+LST(0)=8
"RTN","ORWDXM1",75,0)
 I $G(ORQUIT) S LST(0)="0^0^"_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR) Q
"RTN","ORWDXM1",76,0)
 N SEQ,DA,XCODE,MUSTASK,PROMPT,INST,KEY,IVFID
"RTN","ORWDXM1",77,0)
 S IVFID=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",78,0)
 S AUTOACK=$S($D(ORWPSWRG):0,1:1)
"RTN","ORWDXM1",79,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:'SEQ  D
"RTN","ORWDXM1",80,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM1",81,0)
 . . ; skip if child prmpt
"RTN","ORWDXM1",82,0)
 . . I $P(^ORD(101.41,+ORDIALOG,10,DA,0),U,11) Q
"RTN","ORWDXM1",83,0)
 . . ; set dflt for prmpt, chk if interactive
"RTN","ORWDXM1",84,0)
 . . S PROMPT=$P(^ORD(101.41,+ORDIALOG,10,DA,0),U,2)
"RTN","ORWDXM1",85,0)
 . . D SETITEM(DA,PROMPT,1,.MUSTASK)
"RTN","ORWDXM1",86,0)
 . . I MUSTASK S AUTOACK=0 Q
"RTN","ORWDXM1",87,0)
 . . ; iterate through child items if parent & edit only
"RTN","ORWDXM1",88,0)
 . . Q:'$D(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT))
"RTN","ORWDXM1",89,0)
 . . N CSEQ,CDA,CPROMPT,INST,ORQUIT
"RTN","ORWDXM1",90,0)
 . . S CSEQ=0 F  S CSEQ=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ)) Q:'CSEQ  D  Q:$G(ORQUIT)
"RTN","ORWDXM1",91,0)
 . . . S CDA=$O(^ORD(101.41,+ORDIALOG,10,"DAD",PROMPT,CSEQ,0))
"RTN","ORWDXM1",92,0)
 . . . S CPROMPT=$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,2)
"RTN","ORWDXM1",93,0)
 . . . ; if req & no instances then need interaction
"RTN","ORWDXM1",94,0)
 . . . I $P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6),ORDIALOG'=IVFID,'$O(ORDIALOG(CPROMPT,0)) S AUTOACK=0
"RTN","ORWDXM1",95,0)
 . . . S INST=0 F  S INST=$O(ORDIALOG(CPROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",96,0)
 . . . . N ORASK D VBASK^ORWDXM4(INST) ; set ORASK for VBECS
"RTN","ORWDXM1",97,0)
 . . . . ; set dflt for each child prmpt
"RTN","ORWDXM1",98,0)
 . . . . D SETITEM(CDA,CPROMPT,INST,.MUSTASK)
"RTN","ORWDXM1",99,0)
 . . . . ; if no val & child prmpt req'd then need interaction
"RTN","ORWDXM1",100,0)
 . . . . I MUSTASK,$P(^ORD(101.41,+ORDIALOG,10,CDA,0),U,6) S AUTOACK=0
"RTN","ORWDXM1",101,0)
 N IVDLG
"RTN","ORWDXM1",102,0)
 S IVDLG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM1",103,0)
 I $$ISMED(ORIT),(ORDIALOG'=IVDLG),(ORCAT="I") D
"RTN","ORWDXM1",104,0)
 . F P="PATIENT INSTRUCTIONS","START DATE/TIME","DAYS SUPPLY","QUANTITY","REFILLS","ROUTING","SERVICE CONNECTED" K ORDIALOG($$PTR(P),1)
"RTN","ORWDXM1",105,0)
 S KEY=$S(ORWMODE:"C",1:"")_ORIT_"-"_$P($H,",",2),SEQ=0
"RTN","ORWDXM1",106,0)
 I $$ISINPMED(ORIT) D
"RTN","ORWDXM1",107,0)
 .S LEVEL=$P(LST(0),U),DELAY=$S($P($G(OREVENT),";")>0:1,1:0)
"RTN","ORWDXM1",108,0)
 .I LEVEL=2!(ISIMO) D ADMTIME^ORWDXM2(ORDLOC,PATLOC,ENCLOC,DELAY,ISIMO)
"RTN","ORWDXM1",109,0)
 I ($$ISMED(ORIT)),'($$VALQO^ORWDXM3(ORIT)) S AUTOACK=0
"RTN","ORWDXM1",110,0)
 S PROMPT=0 F  S PROMPT=$O(ORDIALOG(PROMPT)) Q:'PROMPT  D
"RTN","ORWDXM1",111,0)
 . I '$D(^ORD(101.41,ORDIALOG,10,"D",PROMPT)) K ORDIALOG(PROMPT) Q
"RTN","ORWDXM1",112,0)
 . S INST=0 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D
"RTN","ORWDXM1",113,0)
 . . S SEQ=SEQ+1,^TMP("ORWDXMQ",$J,KEY,SEQ,0)=U_PROMPT_U_INST
"RTN","ORWDXM1",114,0)
 . . ; save word proc val
"RTN","ORWDXM1",115,0)
 . . I $E(ORDIALOG(PROMPT,0))="W",$L(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",116,0)
 . . .  M ^TMP("ORWDXMQ",$J,KEY,SEQ,2)=@ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",117,0)
 . . ; save other val types
"RTN","ORWDXM1",118,0)
 . . E  S ^TMP("ORWDXMQ",$J,KEY,SEQ,1)=ORDIALOG(PROMPT,INST)
"RTN","ORWDXM1",119,0)
 I AUTOACK D
"RTN","ORWDXM1",120,0)
 . I ORWMODE S AUTOACK=2
"RTN","ORWDXM1",121,0)
 . I 'ORWMODE,($P(^ORD(101.41,ORIT,0),U,8)!'LST(0)) S AUTOACK=2
"RTN","ORWDXM1",122,0)
 ;I ($$ISMED(ORIT)),'($$VALQO^ORWDXM3(ORIT)) S AUTOACK=0
"RTN","ORWDXM1",123,0)
 I ORIMO,ORWMODE S AUTOACK=2
"RTN","ORWDXM1",124,0)
 ; accept Herbal/OTC/NonVA Med quick orders
"RTN","ORWDXM1",125,0)
 I $L($G(^ORD(101.41,+ORIT,0))),($P(^ORD(100.98,$P(^ORD(101.41,+ORIT,0),U,5),0),U,3)="NV RX"),($P($G(^ORD(101.41,+ORIT,5)),U,8)) S AUTOACK=1
"RTN","ORWDXM1",126,0)
 ;I AUTOACK=2,$$ISMED(ORIT),(ORDIALOG=IVDLG),$$VERORD^ORWDXM3=0 S AUTOACK=0
"RTN","ORWDXM1",127,0)
 I AUTOACK=2,$$ISMED(ORIT),$$VERORD^ORWDXM3(ORIT)=0 S AUTOACK=0
"RTN","ORWDXM1",128,0)
 I AUTOACK=2 D VERTXT^ORWDXM2
"RTN","ORWDXM1",129,0)
 S LST(0)=AUTOACK_U_KEY_U_$$DLGINFO^ORWDXM3(ORIT,ORWMODE_ISXFER)_"^"_$G(KEYVAR)
"RTN","ORWDXM1",130,0)
 I $P(LST(0),U,4)="D" S $P(LST(0),U,4)="Q"
"RTN","ORWDXM1",131,0)
 I ORWMODE=1 S $P(LST(0),U,4)="C"
"RTN","ORWDXM1",132,0)
 K ^TMP("ORWORD",$J)
"RTN","ORWDXM1",133,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J)
"RTN","ORWDXM1",134,0)
 Q
"RTN","ORWDXM1",135,0)
SETITEM(DA,PROMPT,INST,MUSTASK) ; set dflt val & return if must prompt
"RTN","ORWDXM1",136,0)
 N EDITONLY,Y,VALIV,XCODE
"RTN","ORWDXM1",137,0)
 S MUSTASK=0,EDITONLY=0,VALIV=0
"RTN","ORWDXM1",138,0)
 I $D(^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)) D
"RTN","ORWDXM1",139,0)
 . I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORWDXM1",140,0)
 . . S ^TMP("ORWORD",$J,PROMPT,INST,1,0)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",141,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",142,0)
 . E  S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORDIALOG,PROMPT)
"RTN","ORWDXM1",143,0)
 I $D(^TMP("ORWDHTM",$J,ORIT,PROMPT)) D
"RTN","ORWDXM1",144,0)
 . S ORDIALOG(PROMPT,INST)=^TMP("ORWDHTM",$J,ORIT,PROMPT)
"RTN","ORWDXM1",145,0)
 . ; NEED TO CLEAN UP ^TMP("ORWDHTM") after process order set!!!
"RTN","ORWDXM1",146,0)
 ;
"RTN","ORWDXM1",147,0)
 ; skip if a value already exists for this prompt and not WP
"RTN","ORWDXM1",148,0)
 Q:$D(ORDIALOG(PROMPT,INST))&($E(ORDIALOG(PROMPT,0))'="W")
"RTN","ORWDXM1",149,0)
 ; execute default action if no value in QO, checking EDITONLY afterwards
"RTN","ORWDXM1",150,0)
 I '$D(ORDIALOG(PROMPT,INST)) D
"RTN","ORWDXM1",151,0)
 . ;
"RTN","ORWDXM1",152,0)
 . ;Intermittent IV orders do not require a solution or an infusion rate
"RTN","ORWDXM1",153,0)
 . I PROMPT=$$PTR("INFUSION RATE"),$$GETIVTYP^ORWDXM3="I" S VALIV=1 Q
"RTN","ORWDXM1",154,0)
 . I PROMPT=$$PTR("ORDERABLE ITEM"),$$GETIVTYP^ORWDXM3="I" S VALIV=1 Q
"RTN","ORWDXM1",155,0)
 . I $E(ORDIALOG(PROMPT,0))="W",$D(^ORD(101.41,+ORDIALOG,10,DA,8))>9 D
"RTN","ORWDXM1",156,0)
 . . M ^TMP("ORWORD",$J,PROMPT,INST)=^ORD(101.41,+ORDIALOG,10,DA,8)
"RTN","ORWDXM1",157,0)
 . . S ORDIALOG(PROMPT,INST)="^TMP(""ORWORD"","_$J_","_PROMPT_","_INST_")"
"RTN","ORWDXM1",158,0)
 . E  D
"RTN","ORWDXM1",159,0)
 . . S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,7)))
"RTN","ORWDXM1",160,0)
 . . I $L(XCODE) X XCODE S:$D(Y) ORDIALOG(PROMPT,INST)=Y
"RTN","ORWDXM1",161,0)
 Q:VALIV=1
"RTN","ORWDXM1",162,0)
 Q:$G(EDITONLY)
"RTN","ORWDXM1",163,0)
 I 'ORWMODE,$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,8) Q
"RTN","ORWDXM1",164,0)
 I ORWMODE,($P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,9)'["W"),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6)!$D(ORDIALOG(PROMPT,INST)) Q
"RTN","ORWDXM1",165,0)
 I 'ORWMODE,LST(0),$D(ORDIALOG(PROMPT,INST)),($E(ORDIALOG(PROMPT,0))="W") Q
"RTN","ORWDXM1",166,0)
 I 'ORWMODE,LST(0),'$P($G(^ORD(101.41,+ORDIALOG,10,DA,0)),U,6) Q
"RTN","ORWDXM1",167,0)
 S XCODE=$$SUBCODE($G(^ORD(101.41,+ORDIALOG,10,DA,3)))
"RTN","ORWDXM1",168,0)
 I $L(XCODE) X XCODE Q:'$T
"RTN","ORWDXM1",169,0)
 S MUSTASK=1
"RTN","ORWDXM1",170,0)
 Q
"RTN","ORWDXM1",171,0)
SUBCODE(X) ; substitute code
"RTN","ORWDXM1",172,0)
 I X["$$REQDCOMM^ORCDLR" Q "I $$LRRQCM^ORWDXM2"
"RTN","ORWDXM1",173,0)
 I X["$$ASKSAMP^ORCDLR" Q "I $$LRASMP^ORWDXM2"
"RTN","ORWDXM1",174,0)
 I X["$$SCHEDULD^ORCDRA1" Q "I $$SCHEDULD^ORWDXM2"
"RTN","ORWDXM1",175,0)
 I X["(^PSX(550,""C"")" Q "S Y=$E($$DEFPICK^ORWDPS32) K:'$L(Y) Y"
"RTN","ORWDXM1",176,0)
 I X["I $$ASKURG^ORCDVBEC" Q "I 1"
"RTN","ORWDXM1",177,0)
 I X["K:$G(ORASK)" Q "I $G(ORASK)"
"RTN","ORWDXM1",178,0)
 Q X
"RTN","ORWDXM1",179,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME
"RTN","ORWDXM1",180,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORWDXM1",181,0)
 ;
"RTN","ORWDXM1",182,0)
ISINPMED(IFN) ;
"RTN","ORWDXM1",183,0)
 N PKG,RESULT,Y
"RTN","ORWDXM1",184,0)
 I 'ORWMODE S PKG=$P($G(^ORD(101.41,IFN,0)),U,7)
"RTN","ORWDXM1",185,0)
 E  S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM1",186,0)
 S Y=$$GET1^DIQ(9.4,+PKG_",",1)
"RTN","ORWDXM1",187,0)
 S RESULT=$S($E(Y,1,3)="PSJ":1,1:0)
"RTN","ORWDXM1",188,0)
 Q RESULT
"RTN","ORWDXM1",189,0)
 ;
"RTN","ORWDXM1",190,0)
ISMED(IFN) ; return 1 if pharmacy order dlg used
"RTN","ORWDXM1",191,0)
 N PKG
"RTN","ORWDXM1",192,0)
 I 'ORWMODE S PKG=$P($G(^ORD(101.41,IFN,0)),U,7)
"RTN","ORWDXM1",193,0)
 E  S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM1",194,0)
 Q $$NMSP^ORCD(PKG)="PS"
"RTN","ORWDXM1",195,0)
SITEVAL() ;return 1 if site does want the reason for study to carry through from past orders of this ordering session
"RTN","ORWDXM1",196,0)
 I $$GET^XPAR("ALL^SRV.`"_+^VA(200,DUZ,5),"OR RA RFS CARRY ON")=0 Q 0
"RTN","ORWDXM1",197,0)
 Q 1
"RTN","ORWDXM1",198,0)
SVRPC(RET,X) ;RPC FOR SITEVAL
"RTN","ORWDXM1",199,0)
 S RET=$$SITEVAL
"RTN","ORWDXM1",200,0)
 Q
"RTN","ORWDXM2")
0^52^B76107854
"RTN","ORWDXM2",1,0)
ORWDXM2 ; SLC/KCM - Quick Orders ;05/18/2009
"RTN","ORWDXM2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,116,132,158,187,195,215,243,280**;Dec 17, 1997;Build 85
"RTN","ORWDXM2",3,0)
 ;
"RTN","ORWDXM2",4,0)
ADMTIME(ORDLOC,PATLOC,ENCLOC,DELAY,ISIMO) ;
"RTN","ORWDXM2",5,0)
 N ADMLOC,INST,SCHLOC,SCHTYPE
"RTN","ORWDXM2",6,0)
 S ADMLOC=+$P($G(ORDIALOG("B","ADMINISTRATION TIMES")),U,2)
"RTN","ORWDXM2",7,0)
 I ADMLOC>0,ORDLOC>0,PATLOC'=ORDLOC D  Q
"RTN","ORWDXM2",8,0)
 .S INST=0 F  S INST=$O(ORDIALOG(ADMLOC,INST)) Q:+INST'>0  D
"RTN","ORWDXM2",9,0)
 ..S ORDIALOG(ADMLOC,INST)=""
"RTN","ORWDXM2",10,0)
 I ADMLOC>0,$S(ENCLOC'=PATLOC:1,ISIMO:1,DELAY:1,1:0) D  Q
"RTN","ORWDXM2",11,0)
 .S INST=0 F  S INST=$O(ORDIALOG(ADMLOC,INST)) Q:+INST'>0  D
"RTN","ORWDXM2",12,0)
 ..S ORDIALOG(ADMLOC,INST)=""
"RTN","ORWDXM2",13,0)
 S SCHLOC=+$P($G(ORDIALOG("B","SCHEDULE TYPE")),U,2) Q:SCHLOC'>0
"RTN","ORWDXM2",14,0)
 S INST=0 F  S INST=$O(ORDIALOG(SCHLOC,INST)) Q:+INST'>0  D
"RTN","ORWDXM2",15,0)
 .S SCHTYP=$G(ORDIALOG(SCHLOC,INST)) Q:SCHTYP=""
"RTN","ORWDXM2",16,0)
 .I $S(SCHTYP="P":1,SCHTYP="O":1,SCHTYP="OC":1,1:0),ADMLOC>0 S ORDIALOG(ADMLOC,INST)=""
"RTN","ORWDXM2",17,0)
 Q
"RTN","ORWDXM2",18,0)
 ;
"RTN","ORWDXM2",19,0)
CLRRCL(OK)      ; clear ORECALL
"RTN","ORWDXM2",20,0)
 S OK=1
"RTN","ORWDXM2",21,0)
 K ^TMP("ORECALL",$J),^TMP("ORWDXMQ",$J)
"RTN","ORWDXM2",22,0)
 Q
"RTN","ORWDXM2",23,0)
VERTXT ; set verify text for order
"RTN","ORWDXM2",24,0)
 N SEQ,DA,X,PROMPT,MULT,CHILD,INST,TITLE,TEMP,ILST,SPACES
"RTN","ORWDXM2",25,0)
 N ISADMIN
"RTN","ORWDXM2",26,0)
 S ILST=0,$P(SPACES," ",31)=""
"RTN","ORWDXM2",27,0)
 S SEQ=0 F  S SEQ=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ)) Q:SEQ'>0  D
"RTN","ORWDXM2",28,0)
 . S DA=0 F  S DA=$O(^ORD(101.41,+ORDIALOG,10,"B",SEQ,DA)) Q:'DA  D
"RTN","ORWDXM2",29,0)
 . . S X0=$G(^ORD(101.41,+ORDIALOG,10,DA,0))
"RTN","ORWDXM2",30,0)
 . . S ISADMIN=$S(+OREVENT>0:0,ISIMO=1:0,$P($G(^ORD(101.41,$P(X0,U,2),0)),U)="OR GTX ADMIN TIMES":1,1:0)
"RTN","ORWDXM2",31,0)
 . . I ISADMIN=1,ORDLOC>0,ORDLOC'=PATLOC Q
"RTN","ORWDXM2",32,0)
 . . I $P(X0,U,9)["*",ISADMIN=0 Q
"RTN","ORWDXM2",33,0)
 . . S PROMPT=$P(X0,U,2),MULT=$P(X0,U,7),CHILD=$P(X0,U,11) I CHILD,ISADMIN=0 Q
"RTN","ORWDXM2",34,0)
 . . Q:'PROMPT  S INST=$O(ORDIALOG(PROMPT,0)) Q:'INST  ; no values
"RTN","ORWDXM2",35,0)
 . . S TITLE=$S($L($G(ORDIALOG(PROMPT,"TTL"))):ORDIALOG(PROMPT,"TTL"),1:ORDIALOG(PROMPT,"A"))
"RTN","ORWDXM2",36,0)
 . . I $E(ORDIALOG(PROMPT,0))="W" D
"RTN","ORWDXM2",37,0)
 . . . N IWP,WP,CNT
"RTN","ORWDXM2",38,0)
 . . . S IWP=0,CNT=0
"RTN","ORWDXM2",39,0)
 . . . F  S IWP=$O(^TMP("ORWORD",$J,PROMPT,INST,IWP)) Q:'IWP  D
"RTN","ORWDXM2",40,0)
 . . . . S CNT=CNT+1,WP(CNT)=^TMP("ORWORD",$J,PROMPT,INST,IWP,0)
"RTN","ORWDXM2",41,0)
 . . . I CNT=1 S ILST=ILST+1,LST(ILST)=$J(TITLE,30)_WP(1)
"RTN","ORWDXM2",42,0)
 . . . I CNT>1 D 
"RTN","ORWDXM2",43,0)
 . . . . S ILST=ILST+1,LST(ILST)=TITLE,IWP=0
"RTN","ORWDXM2",44,0)
 . . . . F  S IWP=$O(WP(IWP)) Q:'IWP  S ILST=ILST+1,LST(ILST)=WP(IWP)
"RTN","ORWDXM2",45,0)
 . . E  D
"RTN","ORWDXM2",46,0)
 . . . S TEMP=$$ITEM^ORCDLG(PROMPT,INST) I TEMP="" Q
"RTN","ORWDXM2",47,0)
 . . . S ILST=ILST+1,LST(ILST)=$J(TITLE,30)
"RTN","ORWDXM2",48,0)
 . . . ;S LST(ILST)=LST(ILST)_$$ITEM^ORCDLG(PROMPT,INST)
"RTN","ORWDXM2",49,0)
 . . . S LST(ILST)=LST(ILST)_TEMP
"RTN","ORWDXM2",50,0)
 . . Q:'MULT  Q:'$O(ORDIALOG(PROMPT,INST))  ; done
"RTN","ORWDXM2",51,0)
 . . F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:INST'>0  S ILST=ILST+1,LST(ILST)=SPACES_$$ITEM^ORCDLG(PROMPT,INST)
"RTN","ORWDXM2",52,0)
 D DISPLAY^ORWDBA3  ;for display of Billing Aware data from orig order
"RTN","ORWDXM2",53,0)
 Q
"RTN","ORWDXM2",54,0)
RA ; setup environment for radiology
"RTN","ORWDXM2",55,0)
 ; -- get imaging types based on display group of quick order and
"RTN","ORWDXM2",56,0)
 ;    setup list of imaging locations based on imaging type
"RTN","ORWDXM2",57,0)
 N ORY,ITYPE,IFN,CNT,ORIMLOC,PROMPT
"RTN","ORWDXM2",58,0)
 S ORDIV=$$DIV^ORCDRA1,ITYPE=$P($G(^ORD(100.98,+ORDG,0)),U,3)
"RTN","ORWDXM2",59,0)
 S ORIMTYPE=$O(^RA(79.2,"C",ITYPE,0))
"RTN","ORWDXM2",60,0)
 D EN4^RAO7PC1(ITYPE,"ORY")
"RTN","ORWDXM2",61,0)
 S (IFN,CNT)=0 F  S IFN=$O(ORY(IFN)) Q:IFN'>0  D
"RTN","ORWDXM2",62,0)
 . S CNT=CNT+1,ORIMLOC(CNT)=ORY(IFN),ORIMLOC("B",$P(ORY(IFN),U,2))=IFN
"RTN","ORWDXM2",63,0)
 I '$$GET^XPAR("ALL","RA SUBMIT PROMPT",1,"Q"),CNT>1 K ORIMLOC
"RTN","ORWDXM2",64,0)
 E  S ORIMLOC=CNT_"^1"
"RTN","ORWDXM2",65,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX IMAGING LOCATION",0))
"RTN","ORWDXM2",66,0)
 I $G(ORIMLOC) M ORDIALOG(PROMPT,"LIST")=ORIMLOC
"RTN","ORWDXM2",67,0)
 Q
"RTN","ORWDXM2",68,0)
LR ; setup environment for lab
"RTN","ORWDXM2",69,0)
 ; -- setup ORTIME, ORIMTIME & ORTEST arrays
"RTN","ORWDXM2",70,0)
 ;    setup ORMAX, ORDG, & ORCOLLCT variables
"RTN","ORWDXM2",71,0)
 N PROMPT,INST,EDITONLY
"RTN","ORWDXM2",72,0)
 D GETIMES^ORCDLR1  ; sets up ORTIME and ORIMTIME arrays
"RTN","ORWDXM2",73,0)
 S ORMAX=$$GET^XPAR("ALL^LOC.`"_+ORL,"LR MAX DAYS CONTINUOUS",1,"Q")
"RTN","ORWDXM2",74,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0)),INST=1
"RTN","ORWDXM2",75,0)
 D LRTEST           ; sets up ORTEST array and ORDG
"RTN","ORWDXM2",76,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX COLLECTION TYPE",0))
"RTN","ORWDXM2",77,0)
 I $D(ORDIALOG(PROMPT,1)) S ORCOLLCT=ORDIALOG(PROMPT,1) I 1
"RTN","ORWDXM2",78,0)
 E  S EDITONLY=0,ORCOLLCT=$$COLLTYPE^ORCDLR1
"RTN","ORWDXM2",79,0)
 I ORCOLLCT="I" D
"RTN","ORWDXM2",80,0)
 . S PROMPT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXM2",81,0)
 . D LRICTMOK
"RTN","ORWDXM2",82,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX ADMIN SCHEDULE",0))
"RTN","ORWDXM2",83,0)
 I $D(ORDIALOG(PROMPT,1)) S ORSCH=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",84,0)
 Q
"RTN","ORWDXM2",85,0)
LRTEST ; -- Setup ORTEST() array of ordering parameters (copied from ORCDLR)
"RTN","ORWDXM2",86,0)
 N OI,TST,DG
"RTN","ORWDXM2",87,0)
 S OI=+$G(ORDIALOG(PROMPT,INST)) Q:'OI
"RTN","ORWDXM2",88,0)
 I '$D(ORTEST) S TST=+$P($G(^ORD(101.43,OI,0)),U,2) D TEST^LR7OR3(TST,.ORTEST) S ORTEST=TST
"RTN","ORWDXM2",89,0)
 S DG=$P($G(^ORD(101.43,+OI,"LR")),U,6) S:'$L(DG) DG="LAB"
"RTN","ORWDXM2",90,0)
 S DG=$O(^ORD(100.98,"B",DG,0)) S:DG ORDG=DG
"RTN","ORWDXM2",91,0)
 Q
"RTN","ORWDXM2",92,0)
LRRQCM()        ; return true if lab test has required comments
"RTN","ORWDXM2",93,0)
 I $O(^TMP("ORWORD",$J,PROMPT,INST,0)) Q 1 ; edit via WP
"RTN","ORWDXM2",94,0)
 N LRTEST,LRSAMP,LRSPEC,LRTSTN,LRTCOM,LRCCOM,DA,CNT,I,REQDCOMM,OI,TST
"RTN","ORWDXM2",95,0)
 S LRSAMP=$$VAL^ORCD("COLLECTION SAMPLE"),LRSPEC=$$VAL^ORCD("SPECIMEN")
"RTN","ORWDXM2",96,0)
 S OI=+$G(ORDIALOG(PROMPT,INST)) Q:'OI 0
"RTN","ORWDXM2",97,0)
 I '$D(ORTEST) S TST=+$P($G(^ORD(101.43,OI,0)),U,2) D TEST^LR7OR3(TST,.ORTEST) S ORTEST=TST
"RTN","ORWDXM2",98,0)
 S LRTSTN=1,LRTEST(1)=+ORTEST,DA=$O(^LAB(60,LRTEST(1),3,"B",+LRSAMP,0))
"RTN","ORWDXM2",99,0)
 S REQDCOMM=$P($G(^LAB(60,LRTEST(1),3,+DA,0)),U,6)
"RTN","ORWDXM2",100,0)
 S:'REQDCOMM REQDCOMM=+$P($G(^LAB(60,LRTEST(1),0)),U,19)
"RTN","ORWDXM2",101,0)
 Q REQDCOMM
"RTN","ORWDXM2",102,0)
LRASMP()       ; return true to ask collection sample (from ASKSAMP^ORCDLR)
"RTN","ORWDXM2",103,0)
 N DEFSAMP,SAMP0
"RTN","ORWDXM2",104,0)
 S DEFSAMP=$G(ORDIALOG(PROMPT,INST)),SAMP0=$G(^LAB(62,+DEFSAMP,0))
"RTN","ORWDXM2",105,0)
 I (ORCOLLCT="LC")!(ORCOLLCT="I"),$G(ORTEST("Lab CollSamp")) Q 0
"RTN","ORWDXM2",106,0)
 I $G(ORTEST("Unique CollSamp")),DEFSAMP Q 0 ; unique -> don't ask
"RTN","ORWDXM2",107,0)
 I 'DEFSAMP!('FIRST) Q 1 ; no default or edit -> ask
"RTN","ORWDXM2",108,0)
 I $G(ORDIALOG(PROMPT,"LIST"))="1^1" Q 0 ; only one choice
"RTN","ORWDXM2",109,0)
 Q 1
"RTN","ORWDXM2",110,0)
LRICTMOK        ;
"RTN","ORWDXM2",111,0)
 Q:'$D(ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",112,0)
 N ORY
"RTN","ORWDXM2",113,0)
 D VALDT^ORWU(.ORY,ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",114,0)
 I +$$VALID^LR7OV4(DUZ(2),ORY)=0 S ORDIALOG(PROMPT,1)=""
"RTN","ORWDXM2",115,0)
 Q
"RTN","ORWDXM2",116,0)
DO ; setup environment for diet order
"RTN","ORWDXM2",117,0)
 ; partially copied from EN^ORCDFH
"RTN","ORWDXM2",118,0)
 I ORCAT'="I" D  Q
"RTN","ORWDXM2",119,0)
 . S ORQUIT=1
"RTN","ORWDXM2",120,0)
 . S LST(0)="8^0"
"RTN","ORWDXM2",121,0)
 . S LST(.5)="This type of diet may be entered for inpatients only."
"RTN","ORWDXM2",122,0)
 D EN^FHWOR8(+ORVP,.ORPARAM)          ; set FH ordering parameters
"RTN","ORWDXM2",123,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T" ; for now
"RTN","ORWDXM2",124,0)
 N PROMPT,OI                          ; set NPO flag if NPO diet
"RTN","ORWDXM2",125,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",126,0)
 S OI=+$G(ORDIALOG(PROMPT,1))
"RTN","ORWDXM2",127,0)
 S ORNPO=($P($G(^ORD(101.43,OI,0)),U)="NPO")
"RTN","ORWDXM2",128,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXM2",129,0)
 S X=$G(ORDIALOG(PROMPT,1)) I $L(X) D CNV^ORCDFH1 S ORDIALOG(PROMPT,1)=$G(X)
"RTN","ORWDXM2",130,0)
 Q
"RTN","ORWDXM2",131,0)
EL ; setup environment for early/late tray
"RTN","ORWDXM2",132,0)
 D EN^FHWOR8(+ORVP,.ORPARAM)          ; set FH ordering parameters
"RTN","ORWDXM2",133,0)
 S:'$L($G(ORPARAM(3))) ORPARAM(3)="T" ; for now
"RTN","ORWDXM2",134,0)
 D EN2^ORCDFH                         ; setup ORTIME array
"RTN","ORWDXM2",135,0)
 N PROMPT                             ; set ORMEAL,ORTRAY
"RTN","ORWDXM2",136,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX MEAL",0))
"RTN","ORWDXM2",137,0)
 I $D(ORDIALOG(PROMPT,1)) S ORMEAL=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",138,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",139,0)
 I $D(ORDIALOG(PROMPT,1)) S ORTRAY=ORDIALOG(PROMPT,1)
"RTN","ORWDXM2",140,0)
 Q
"RTN","ORWDXM2",141,0)
UD ; setup environment for unit dose med
"RTN","ORWDXM2",142,0)
 I $G(ORWP94) G PS^ORWDPS3  ; if patch 94 installed
"RTN","ORWDXM2",143,0)
 ;
"RTN","ORWDXM2",144,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDXM2",145,0)
 N PROMPT,OI
"RTN","ORWDXM2",146,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",147,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=ORDIALOG(PROMPT,1) D MEDACTV(1) Q:$G(ORQUIT)
"RTN","ORWDXM2",148,0)
 D INSTR^ORCDPS(OI)      ; sets up instructions, routes, etc.
"RTN","ORWDXM2",149,0)
 D CHOICES^ORCDPS("U")   ; gets list of dispense drugs       
"RTN","ORWDXM2",150,0)
 Q
"RTN","ORWDXM2",151,0)
IV ; setup environment for IV fluid
"RTN","ORWDXM2",152,0)
 D AUTHMED Q:$G(ORQUIT)  ; checks authorized to write meds
"RTN","ORWDXM2",153,0)
 ; sets up list of volumes if only one solution
"RTN","ORWDXM2",154,0)
 ; otherwise, let the dialog go interactive
"RTN","ORWDXM2",155,0)
 N PROMPT,INST,CNT,OI
"RTN","ORWDXM2",156,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM2",157,0)
 S (CNT,INST)=0
"RTN","ORWDXM2",158,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D  Q:$G(ORQUIT)
"RTN","ORWDXM2",159,0)
 . S CNT=CNT+1
"RTN","ORWDXM2",160,0)
 . S OI=ORDIALOG(PROMPT,INST) D MEDACTV(3) ; check active solutions
"RTN","ORWDXM2",161,0)
 I CNT=1 S INST=1 D VOLUME^ORCDPSIV
"RTN","ORWDXM2",162,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX ADDITIVE",0))
"RTN","ORWDXM2",163,0)
 S INST=0
"RTN","ORWDXM2",164,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  D  Q:$G(ORQUIT)
"RTN","ORWDXM2",165,0)
 . S OI=ORDIALOG(PROMPT,INST) D MEDACTV(4) ; check active additives
"RTN","ORWDXM2",166,0)
 Q
"RTN","ORWDXM2",167,0)
OP ; setup environment for outpatient pharmacy
"RTN","ORWDXM2",168,0)
 I $G(ORWP94) G PS^ORWDPS3  ; if patch 94 installed
"RTN","ORWDXM2",169,0)
 ;
"RTN","ORWDXM2",170,0)
 D AUTHMED Q:$G(ORQUIT)       ; checks authorized to write meds
"RTN","ORWDXM2",171,0)
 N PROMPT,INST,CNT,OI
"RTN","ORWDXM2",172,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX ORDERABLE ITEM",0)),OI=0
"RTN","ORWDXM2",173,0)
 I $D(ORDIALOG(PROMPT,1)) S OI=$G(ORDIALOG(PROMPT,1)) D MEDACTV(2) Q:$G(ORQUIT)
"RTN","ORWDXM2",174,0)
 D:+OI INSTR^ORCDPS(OI)           ; sets up instructions, routes, etc.
"RTN","ORWDXM2",175,0)
 D CHOICES^ORCDPS("O")        ; gets list of dispense drugs      
"RTN","ORWDXM2",176,0)
 ; get defaults for drug, refills if only one dispense drug
"RTN","ORWDXM2",177,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX DISPENSE DRUG",0))
"RTN","ORWDXM2",178,0)
 S (CNT,INST)=0
"RTN","ORWDXM2",179,0)
 F  S INST=$O(ORDIALOG(PROMPT,INST)) Q:'INST  S CNT=CNT+1
"RTN","ORWDXM2",180,0)
 I CNT=1 D
"RTN","ORWDXM2",181,0)
 . S ORDRUG=+$G(ORDIALOG(PROMPT,1)),ORCOMPLX=0
"RTN","ORWDXM2",182,0)
 . S OREFILLS=$P($G(ORDIALOG(PROMPT,"LIST","D",ORDRUG)),U,3)
"RTN","ORWDXM2",183,0)
 . S:'$L(OREFILLS) OREFILLS=11
"RTN","ORWDXM2",184,0)
 E  S ORCOMPLX=1,OREFILLS=11  ; force interactive on complex order
"RTN","ORWDXM2",185,0)
 S ORCOPAY=1                  ; ask SC if can't determine copay
"RTN","ORWDXM2",186,0)
 I $G(ORDRUG),$L($T(ASKSC^ORCDPS)) S ORCOPAY=$$ASKSC^ORCDPS
"RTN","ORWDXM2",187,0)
 Q
"RTN","ORWDXM2",188,0)
AUTHMED ; sets ORQUIT if not authorized to write meds
"RTN","ORWDXM2",189,0)
 N NOAUTH,NAME
"RTN","ORWDXM2",190,0)
 D AUTH^ORWDPS32(.NOAUTH,ORNP)
"RTN","ORWDXM2",191,0)
 I +NOAUTH D
"RTN","ORWDXM2",192,0)
 . S ORQUIT=1
"RTN","ORWDXM2",193,0)
 . S LST(0)="8^0"
"RTN","ORWDXM2",194,0)
 . ; FIX FOR REMEDY 71069, CQ 15917
"RTN","ORWDXM2",195,0)
 . S LST(.5)=$P(NOAUTH,U,2)
"RTN","ORWDXM2",196,0)
 . ;S NAME=$P($G(^VA(200,+ORNP,20)),U,2)
"RTN","ORWDXM2",197,0)
 . ;I '$L(NAME) S NAME=$P($G(^VA(200,+ORNP,0)),U,1)
"RTN","ORWDXM2",198,0)
 . ;S LST(.5)=NAME_" is not authorized to write med orders."
"RTN","ORWDXM2",199,0)
 Q
"RTN","ORWDXM2",200,0)
MEDACTV(USAGE) ; sets ORQUIT if the orderable item is not active for a med
"RTN","ORWDXM2",201,0)
 Q:'$G(OI)  S USAGE=+$G(USAGE)
"RTN","ORWDXM2",202,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D  Q
"RTN","ORWDXM2",203,0)
 . S ORQUIT=1,LST(0)="8^0"
"RTN","ORWDXM2",204,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" has been inactivated and may not be ordered anymore."
"RTN","ORWDXM2",205,0)
 I USAGE,'$P($G(^ORD(101.43,OI,"PS")),U,USAGE) D  Q
"RTN","ORWDXM2",206,0)
 . S ORQUIT=1,LST(0)="8^0"
"RTN","ORWDXM2",207,0)
 . S LST(.5)=$P($G(^ORD(101.43,OI,0)),U)_" may not be ordered as an "_$S(USAGE=1:"inpatient medication",USAGE=2:"outpatient medication",USAGE=3:"IV solution",1:"IV additive")_" anymore."
"RTN","ORWDXM2",208,0)
 Q
"RTN","ORWDXM2",209,0)
SCHEDULD() ; Is patient scheduled for PREOP (Imaging)
"RTN","ORWDXM2",210,0)
 I $G(ORDIALOG(PROMPT,1)) Q 1 ; don't ask - already have date
"RTN","ORWDXM2",211,0)
 E  Q 0
"RTN","ORWDXM2",212,0)
 Q
"RTN","ORWDXM3")
0^53^B104533418
"RTN","ORWDXM3",1,0)
ORWDXM3 ; SLC/KCM/JLI - Quick Orders ;09/10/09
"RTN","ORWDXM3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,131,132,141,185,187,190,195,215,243,303,296,280**;Dec 17, 1997;Build 85
"RTN","ORWDXM3",3,0)
 ;
"RTN","ORWDXM3",4,0)
VALCOUNT(NAME,ORDIALOG) ;
"RTN","ORWDXM3",5,0)
 N COUNT,IEN,NUM
"RTN","ORWDXM3",6,0)
 S NUM=0,COUNT=0
"RTN","ORWDXM3",7,0)
 S IEN=$P($G(ORDIALOG("B",NAME)),U,2) Q:IEN'>0
"RTN","ORWDXM3",8,0)
 F  S NUM=$O(ORDIALOG(IEN,NUM)) Q:+NUM'>0  S COUNT=COUNT+1
"RTN","ORWDXM3",9,0)
 Q COUNT
"RTN","ORWDXM3",10,0)
 ;
"RTN","ORWDXM3",11,0)
ISMISSFL(ORDIALOG,IVTYPE) ;
"RTN","ORWDXM3",12,0)
 N ADDCNT,RESULT,SOLCNT,STRCNT
"RTN","ORWDXM3",13,0)
 S RESULT=0
"RTN","ORWDXM3",14,0)
 S ADDCNT=$$VALCOUNT("ADDITIVE",.ORDIALOG)
"RTN","ORWDXM3",15,0)
 S STRCNT=$$VALCOUNT("STRENGTH",.ORDIALOG)
"RTN","ORWDXM3",16,0)
 S SOLCNT=$$VALCOUNT("SOLUTION",.ORDIALOG)
"RTN","ORWDXM3",17,0)
 I IVTYPE'="I",ADDCNT'=STRCNT S RESULT=1
"RTN","ORWDXM3",18,0)
 I IVTYPE="I" D
"RTN","ORWDXM3",19,0)
 .I ADDCNT=0,SOLCNT>0 Q
"RTN","ORWDXM3",20,0)
 .I ADDCNT=0 S RESULT=1 Q
"RTN","ORWDXM3",21,0)
 .I ADDCNT'=STRCNT S RESULT=1 Q
"RTN","ORWDXM3",22,0)
 Q RESULT
"RTN","ORWDXM3",23,0)
 ;
"RTN","ORWDXM3",24,0)
IVADFCHK(ORDIALOG) ;
"RTN","ORWDXM3",25,0)
 ; This line tag checks to see if there are the same number of values
"RTN","ORWDXM3",26,0)
 ;for ADDITIVE and Additive Frequency. This also checks to see if
"RTN","ORWDXM3",27,0)
 ;the value assigned to ADDFREQ is one of the three possible values
"RTN","ORWDXM3",28,0)
 ;All Bags, 1 bag/day, See Comments. If See Comments it also checks
"RTN","ORWDXM3",29,0)
 ;for text in the comment section.
"RTN","ORWDXM3",30,0)
 N ADDCNT,ADDFCNT,ADDFREQ,COMMENT,FREQ,INST,RESULT
"RTN","ORWDXM3",31,0)
 S ADDCNT=$$VALCOUNT("ADDITIVE",.ORDIALOG)
"RTN","ORWDXM3",32,0)
 S ADDFCNT=$$VALCOUNT("ADDITIVE FREQUENCY",.ORDIALOG)
"RTN","ORWDXM3",33,0)
 I ADDCNT'=ADDFCNT Q 0
"RTN","ORWDXM3",34,0)
 S ADDFREQ=$O(^ORD(101.41,"AB","OR GTX ADDITIVE FREQUENCY",""))
"RTN","ORWDXM3",35,0)
 S COMMENT=$O(^ORD(101.41,"AB","OR GTX WORD PROCESSING 1",""))
"RTN","ORWDXM3",36,0)
 I +$G(ADDFREQ)'>0 Q O
"RTN","ORWDXM3",37,0)
 S INST=0,RESULT=1
"RTN","ORWDXM3",38,0)
 F  S INST=$O(ORDIALOG(ADDFREQ,INST)) Q:INST'>0!(RESULT=0)  D
"RTN","ORWDXM3",39,0)
 .S FREQ=$$ADDFRQCV^ORMBLDP1($G(ORDIALOG(ADDFREQ,INST)),"O")
"RTN","ORWDXM3",40,0)
 .I FREQ="A"!(FREQ=1) Q
"RTN","ORWDXM3",41,0)
 .I FREQ="" S RESULT=0 Q
"RTN","ORWDXM3",42,0)
 .I FREQ="S",'$L($G(ORDIALOG(COMMENT,1))) S RESULT=0 Q
"RTN","ORWDXM3",43,0)
 Q RESULT
"RTN","ORWDXM3",44,0)
 ;
"RTN","ORWDXM3",45,0)
KEYVAR(DLG)  ; Parse entry action for key variables & return in string
"RTN","ORWDXM3",46,0)
 ; RV=CollTp^Samp^Spec^CollDt^Urg^Sched^NoComm^NoDiag^NoProv^NoRsn
"RTN","ORWDXM3",47,0)
 N XCODE,RV,POS,Z
"RTN","ORWDXM3",48,0)
 S XCODE=$G(^ORD(101.41,DLG,3)),RV=""
"RTN","ORWDXM3",49,0)
 I '$L(XCODE) Q ""
"RTN","ORWDXM3",50,0)
 S POS=$F(XCODE,"LRFZX=")    I POS S $P(RV,U,1)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",51,0)
 S POS=$F(XCODE,"LRFSAMP=")  I POS S $P(RV,U,2)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",52,0)
 S POS=$F(XCODE,"LRFSPEC=")  I POS S $P(RV,U,3)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",53,0)
 S POS=$F(XCODE,"LRFDATE=")  I POS S $P(RV,U,4)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",54,0)
 S POS=$F(XCODE,"LRFURG=")   I POS S $P(RV,U,5)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",55,0)
 S POS=$F(XCODE,"LRFSCH=")   I POS S $P(RV,U,6)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",56,0)
 S POS=$F(XCODE,"PSJNOPC=")  I POS S $P(RV,U,7)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",57,0)
 S POS=$F(XCODE,"GMRCNOPD=") I POS S $P(RV,U,8)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",58,0)
 S POS=$F(XCODE,"GMRCNOAT=") I POS S $P(RV,U,9)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",59,0)
 S POS=$F(XCODE,"GMRCREAF=") I POS S $P(RV,U,10)=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",60,0)
 S POS=$F(XCODE,"ORFORGET=") I POS D
"RTN","ORWDXM3",61,0)
 . ; need to change this so that it is executed in SETKEYV so
"RTN","ORWDXM3",62,0)
 . ; that it is executed each time menu is revisited
"RTN","ORWDXM3",63,0)
 . N ORFORGET S ORFORGET=$$VALUE(XCODE,POS)
"RTN","ORWDXM3",64,0)
 . I ORFORGET K ^TMP("ORECALL",$J,+ORFORGET)
"RTN","ORWDXM3",65,0)
 . E  K ^TMP("ORECALL",$J)
"RTN","ORWDXM3",66,0)
 Q RV
"RTN","ORWDXM3",67,0)
VALUE(STR,BEG) ; Return value of "var=" (copied from ORCONVRT)
"RTN","ORWDXM3",68,0)
 N X,Y,I S X=$E(STR,BEG,999),Y=""
"RTN","ORWDXM3",69,0)
 S:$E(X)="""" X=$E(X,2,999) ; strip leading "
"RTN","ORWDXM3",70,0)
 F I=1:1:$L(X) S Z=$E(X,I) Q:(Z=",")!(Z=" ")!(Z="""")  S Y=Y_Z
"RTN","ORWDXM3",71,0)
 Q $TR(Y,U,"")
"RTN","ORWDXM3",72,0)
 ;
"RTN","ORWDXM3",73,0)
SETKEYV(X)      ; Set the key variables based on contents of X
"RTN","ORWDXM3",74,0)
 I $L($P(X,U,1))  S LRFZX=$P(X,U,1)
"RTN","ORWDXM3",75,0)
 I $L($P(X,U,2))  S LRFSAMP=$P(X,U,2)
"RTN","ORWDXM3",76,0)
 I $L($P(X,U,3))  S LRFSPEC=$P(X,U,3)
"RTN","ORWDXM3",77,0)
 I $L($P(X,U,4))  S LRFDATE=$P(X,U,4)
"RTN","ORWDXM3",78,0)
 I $L($P(X,U,5))  S LRFURG=$P(X,U,5)
"RTN","ORWDXM3",79,0)
 I $L($P(X,U,6))  S LRFSCH=$P(X,U,6)
"RTN","ORWDXM3",80,0)
 I $L($P(X,U,7))  S PSJNOPC=$P(X,U,7)
"RTN","ORWDXM3",81,0)
 I $L($P(X,U,8))  S GMRCNOPD=$P(X,U,8)
"RTN","ORWDXM3",82,0)
 I $L($P(X,U,9))  S GMRCNOAT=$P(X,U,9)
"RTN","ORWDXM3",83,0)
 I $L($P(X,U,10)) S GMRCREAF=$P(X,U,10)
"RTN","ORWDXM3",84,0)
 Q
"RTN","ORWDXM3",85,0)
DLGINFO(IEN,MODE)    ; return information about a dialog
"RTN","ORWDXM3",86,0)
 ; IEN=DlgIEN or ORIFN, MODE=0:Dlg,1:Copy,2:Change
"RTN","ORWDXM3",87,0)
 ; RESULT=DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",88,0)
 ; If MODE="1;T",don't check "PS MEDS" for transfer order
"RTN","ORWDXM3",89,0)
 ; PSMDGP=1: Unit/Dose  Group
"RTN","ORWDXM3",90,0)
 ; PSMDGP=2: OutPatient Group
"RTN","ORWDXM3",91,0)
 N X0,DLGIEN,TYP,FID,DGRP,PSMDGP,ISXF
"RTN","ORWDXM3",92,0)
 S PSMDGP=0,ISXF=""
"RTN","ORWDXM3",93,0)
 S ISXF=$P(MODE,";",2)
"RTN","ORWDXM3",94,0)
 S MODE=+MODE
"RTN","ORWDXM3",95,0)
 S DLGIEN=IEN I MODE,(ISXF'="T") D
"RTN","ORWDXM3",96,0)
 . S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",97,0)
 . I $P(^ORD(101.41,DLGIEN,0),U)="PS MEDS" D
"RTN","ORWDXM3",98,0)
 . . N PTCAT S PTCAT=$P($G(^OR(100,+IEN,0)),U,12)
"RTN","ORWDXM3",99,0)
 . . I PTCAT="I" S DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)),PSMDGP=1
"RTN","ORWDXM3",100,0)
 . . I PTCAT="O" S DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)),PSMDGP=2
"RTN","ORWDXM3",101,0)
 I MODE,(ISXF="T") S DLGIEN=+$P($G(^OR(100,+IEN,0)),U,5)
"RTN","ORWDXM3",102,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),TYP=$P(X0,U,4),DGRP=$P(X0,U,5)
"RTN","ORWDXM3",103,0)
 I MODE S DGRP=+$P($G(^OR(100,+IEN,0)),U,11)
"RTN","ORWDXM3",104,0)
 ;JD NEW START 11/13/02
"RTN","ORWDXM3",105,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) S PSMDGP=1
"RTN","ORWDXM3",106,0)
 I DLGIEN=$O(^ORD(101.41,"B","PSO OERR",0)) S PSMDGP=2
"RTN","ORWDXM3",107,0)
 ;JD NEW END 11/13/02
"RTN","ORWDXM3",108,0)
 ; for copy or change, if the base dialog has changed, use it's info
"RTN","ORWDXM3",109,0)
 I MODE,$G(ORDIALOG),(+DLGIEN'=+ORDIALOG),(PSMDGP=0) D
"RTN","ORWDXM3",110,0)
 . S DLGIEN=+ORDIALOG,DGRP=$P(^ORD(101.41,+ORDIALOG,0),U,5)
"RTN","ORWDXM3",111,0)
 D FORMID^ORWDXM(.FID,DLGIEN)
"RTN","ORWDXM3",112,0)
 Q DLGIEN_U_TYP_U_FID_U_DGRP
"RTN","ORWDXM3",113,0)
 ;
"RTN","ORWDXM3",114,0)
CHKDSBL(LST,ID,MODE)  ; return message if dialog disabled
"RTN","ORWDXM3",115,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",116,0)
 ; LST=QL_REJECT + disabled message or unchanged
"RTN","ORWDXM3",117,0)
 S DLGIEN=+ID I MODE S DLGIEN=+$P($G(^OR(100,+ID,0)),U,5)
"RTN","ORWDXM3",118,0)
 S X0=$G(^ORD(101.41,DLGIEN,0)),X=$P(X0,U,3)
"RTN","ORWDXM3",119,0)
 I '$L(X),($P(X0,U,4)="Q") D  ; check default dialog
"RTN","ORWDXM3",120,0)
 . S DLGIEN=+$$DEFDLG^ORWDXQ($P(X0,U,5))
"RTN","ORWDXM3",121,0)
 . S X=$P($G(^ORD(101.41,DLGIEN,0)),U,3)
"RTN","ORWDXM3",122,0)
 I $L(X) D
"RTN","ORWDXM3",123,0)
 . I MODE D GETTXT^ORWORR(.LST,ID) S LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",124,0)
 . S LST(0)="8^0",LST(.5)="Dialog Disabled:  "_X
"RTN","ORWDXM3",125,0)
 Q
"RTN","ORWDXM3",126,0)
CHKVACT(LST,ID,MODE,ORNP)  ; return message if action not valid
"RTN","ORWDXM3",127,0)
 ; ID=DlgIEN or ORIFN, MODE=0:Dialog,1:Copy,2:Change
"RTN","ORWDXM3",128,0)
 ; LST=QL_REJECT + invalid action message or unchanged
"RTN","ORWDXM3",129,0)
 Q:'MODE  ; not an action on an order
"RTN","ORWDXM3",130,0)
 N X,ACT S ACT=$S(MODE=1:"RW",MODE=2:"XX",1:"")
"RTN","ORWDXM3",131,0)
 D VALID^ORWDXA(.X,ID,ACT,ORNP)
"RTN","ORWDXM3",132,0)
 I $L(X) D GETTXT^ORWORR(.LST,ID) D
"RTN","ORWDXM3",133,0)
 . S LST(0)="8^0",LST(.5)=X,LST(.6)="",LST(.7)="Cannot "_$S(MODE=1:"Copy",1:"Change")_" -"
"RTN","ORWDXM3",134,0)
 Q
"RTN","ORWDXM3",135,0)
CHKCOPY(LST,ID,FLDS)  ; return message if can't copy this order
"RTN","ORWDXM3",136,0)
 ; ID=ORIFN;ACT FLDS=EventType in 7th piece
"RTN","ORWDXM3",137,0)
 ; LST=QL_REJECT + cannot copy message or unchanged
"RTN","ORWDXM3",138,0)
 I "^A^D^T^"'[(U_$E($P(FLDS,U,7))_U) Q             ; not event delayed
"RTN","ORWDXM3",139,0)
 N PKG S PKG=$P($G(^OR(100,+ID,0)),U,14)
"RTN","ORWDXM3",140,0)
 S PKG=$$NMSP^ORCD(PKG) I PKG="OR"!(PKG="PS") Q    ; xfer meds, generics
"RTN","ORWDXM3",141,0)
 N ORWCAT S ORWCAT=$P($G(^OR(100,+ID,0)),U,12)
"RTN","ORWDXM3",142,0)
 I ORWCAT="I",("^A^T^"[(U_$E($P(FLDS,U,7))_U)) Q   ; admit, xfer inpt
"RTN","ORWDXM3",143,0)
 I ORWCAT="O",$E($P(FLDS,U,7))="D" Q               ; discharge outpt
"RTN","ORWDXM3",144,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM3",145,0)
 I ORWCAT="I" S LST(.5)="inpatient order to outpatient -"
"RTN","ORWDXM3",146,0)
 I ORWCAT="O" S LST(.5)="outpatient order to inpatient -"
"RTN","ORWDXM3",147,0)
 S:$D(LST(.5)) LST(.5)="Cannot copy the following "_LST(.5)
"RTN","ORWDXM3",148,0)
 S LST(0)="8^0",LST(.7)=""
"RTN","ORWDXM3",149,0)
 Q
"RTN","ORWDXM3",150,0)
BLD4CHG(LST,ID,FLDS)  ; build responses for an edit
"RTN","ORWDXM3",151,0)
 ; ID=ORIFN;ACT FLDS=unused right now
"RTN","ORWDXM3",152,0)
 ; LST(0)=Qlvl^RespID(XOrderID)^DlgIEN^DlgType^FormID^DGrp
"RTN","ORWDXM3",153,0)
 N OIDX,OI,CNT
"RTN","ORWDXM3",154,0)
 S (OI,OIDX,CNT)=0
"RTN","ORWDXM3",155,0)
 S:$D(^OR(100,+ID,4.5,"ID","ORDERABLE")) OIDX=$O(^OR(100,+ID,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXM3",156,0)
 I $D(^OR(100,+ID,4.5,OIDX)) D
"RTN","ORWDXM3",157,0)
 . F  S CNT=$O(^OR(100,+ID,4.5,OIDX,CNT)) Q:'CNT  D
"RTN","ORWDXM3",158,0)
 . . S OI=^(CNT) D VALDOI
"RTN","ORWDXM3",159,0)
 I +LST(0)=8 S LST(.5)="You can not change this order." Q
"RTN","ORWDXM3",160,0)
 S LST(0)="0^X"_ID_U_$$DLGINFO(+ID,2)
"RTN","ORWDXM3",161,0)
 S $P(LST(0),U,4)="X"
"RTN","ORWDXM3",162,0)
 Q
"RTN","ORWDXM3",163,0)
GETIVTYP() ;
"RTN","ORWDXM3",164,0)
 N RESULT,TYPEIEN
"RTN","ORWDXM3",165,0)
 S RESULT=""
"RTN","ORWDXM3",166,0)
 S TYPEIEN=$O(^ORD(101.41,"B","OR GTX IV TYPE","")) I TYPEIEN'>0 Q RESULT
"RTN","ORWDXM3",167,0)
 S RESULT=$G(ORDIALOG(TYPEIEN,1))
"RTN","ORWDXM3",168,0)
 Q RESULT
"RTN","ORWDXM3",169,0)
 ;
"RTN","ORWDXM3",170,0)
VALDOI ; Validate the Orderable Items
"RTN","ORWDXM3",171,0)
 N ORQUIT,ORPS
"RTN","ORWDXM3",172,0)
 I $G(^ORD(101.43,OI,.1)),^(.1)'>$$NOW^XLFDT D
"RTN","ORWDXM3",173,0)
 . S ORQUIT=1
"RTN","ORWDXM3",174,0)
 . S LST(0)="8^0"
"RTN","ORWDXM3",175,0)
 I $D(ORQUIT) Q:ORQUIT
"RTN","ORWDXM3",176,0)
 S ORPS=$G(^ORD(101.43,+OI,"PS"))
"RTN","ORWDXM3",177,0)
 I $P(ORPS,U,1,4)="0^0^0^0",($P(ORPS,U,7)=0) S LST(0)="8^0"
"RTN","ORWDXM3",178,0)
 Q
"RTN","ORWDXM3",179,0)
VERDUR(ORDIALOG) ;
"RTN","ORWDXM3",180,0)
 ;check for duration value if a THEN conjunation is used
"RTN","ORWDXM3",181,0)
 N CONJ,CONVALUE,DUR,I,SUCC
"RTN","ORWDXM3",182,0)
 S SUCC=1
"RTN","ORWDXM3",183,0)
 S CONJ=$$PTR^ORCDPS1("AND/THEN")
"RTN","ORWDXM3",184,0)
 S DUR=$$PTR^ORCDPS1("DURATION")
"RTN","ORWDXM3",185,0)
 S I=0 F  S I=$O(ORDIALOG(CONJ,I)) Q:I'>0!(SUCC=0)  D
"RTN","ORWDXM3",186,0)
 . I $$UP^XLFSTR($E($G(ORDIALOG(CONJ,I)),1))="T" D
"RTN","ORWDXM3",187,0)
 . . I '$L($G(ORDIALOG(DUR,I))) S SUCC=0
"RTN","ORWDXM3",188,0)
 Q SUCC
"RTN","ORWDXM3",189,0)
 ;
"RTN","ORWDXM3",190,0)
VERORD(OIEN) ;
"RTN","ORWDXM3",191,0)
 N IFN,INFUSE,INFUID,ODG,ODP,ASSIV,SUCC,TYPE
"RTN","ORWDXM3",192,0)
 S SUCC=0,IFN=ORDIALOG
"RTN","ORWDXM3",193,0)
 S ODP=+$P($G(^ORD(101.41,+IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM3",194,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM3",195,0)
 I ODP'["PS" Q 1
"RTN","ORWDXM3",196,0)
 I ODP="PSH" Q 1
"RTN","ORWDXM3",197,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",198,0)
 I ODG="IV RX"!(ODG="TPN") D  Q SUCC
"RTN","ORWDXM3",199,0)
 .S TYPE=$$GETIVTYP
"RTN","ORWDXM3",200,0)
 .I TYPE="" Q SUCC
"RTN","ORWDXM3",201,0)
 .S PASSIV=$$IVRTECHK
"RTN","ORWDXM3",202,0)
 .I PASSIV=0 Q SUCC
"RTN","ORWDXM3",203,0)
 .S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",204,0)
 .S INFUSE=$G(ORDIALOG(INFUID,1))
"RTN","ORWDXM3",205,0)
 .S SUCC=$$VALINF(TYPE,INFUSE)
"RTN","ORWDXM3",206,0)
 .I SUCC=0 Q
"RTN","ORWDXM3",207,0)
 .I TYPE="C" S SUCC=$$IVADFCHK(.ORDIALOG)
"RTN","ORWDXM3",208,0)
 I (ODP="PSJ")!(ODP="PSO"),ODG'="IV RX",ODG'="TPN" S SUCC=$$VERDUR(.ORDIALOG)
"RTN","ORWDXM3",209,0)
 Q SUCC
"RTN","ORWDXM3",210,0)
 ;
"RTN","ORWDXM3",211,0)
VALINF(TYPE,INFUSE) ;
"RTN","ORWDXM3",212,0)
 N SUCC
"RTN","ORWDXM3",213,0)
 S SUCC=0
"RTN","ORWDXM3",214,0)
 I TYPE="I" D  Q SUCC
"RTN","ORWDXM3",215,0)
 .I INFUSE="" S SUCC=1 Q
"RTN","ORWDXM3",216,0)
 .I $TR(INFUSE,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")["INFUSE OVER" S SUCC=1 Q
"RTN","ORWDXM3",217,0)
 .I $L(INFUSE)>4 Q
"RTN","ORWDXM3",218,0)
 Q 1
"RTN","ORWDXM3",219,0)
 ;
"RTN","ORWDXM3",220,0)
VALQO(IFN) ;Check to see if it's a good QO med
"RTN","ORWDXM3",221,0)
 ;If it's an IV QO: check if infusion rate entered
"RTN","ORWDXM3",222,0)
 ;If it's an UD QO: check if dosage entered
"RTN","ORWDXM3",223,0)
 ;regular order treated as good QO
"RTN","ORWDXM3",224,0)
 ;
"RTN","ORWDXM3",225,0)
 I IFN[";",($$UPCTCHK^ORWDXA(+IFN)) Q 0
"RTN","ORWDXM3",226,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM3",227,0)
 N ODP,ODG,INFUID,INFUSE,DSAGEID,SUCC,PASSIV,TYPE
"RTN","ORWDXM3",228,0)
 S SUCC=0
"RTN","ORWDXM3",229,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM3",230,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM3",231,0)
 I ODP'["PS" Q 1
"RTN","ORWDXM3",232,0)
 I ODP="PSH" Q 1
"RTN","ORWDXM3",233,0)
 ;check infusion rate for IV QO
"RTN","ORWDXM3",234,0)
 I ODG="IV RX"!(ODG="TPN") D
"RTN","ORWDXM3",235,0)
 . S INFUID=$O(^ORD(101.41,"B","OR GTX INFUSION RATE",0))
"RTN","ORWDXM3",236,0)
 . S TYPE=$$GETIVTYP
"RTN","ORWDXM3",237,0)
 . I TYPE="" Q
"RTN","ORWDXM3",238,0)
 . I $D(ORDIALOG(INFUID,1)) D
"RTN","ORWDXM3",239,0)
 . . I TYPE="I" D  Q
"RTN","ORWDXM3",240,0)
 . . . S INFUSE=$G(ORDIALOG(INFUID,1))
"RTN","ORWDXM3",241,0)
 . . . I INFUSE="" Q
"RTN","ORWDXM3",242,0)
 . . . I INFUSE["INFUSE OVER" S SUCC=1 Q
"RTN","ORWDXM3",243,0)
 . . . I $L(INFUSE)>4 Q
"RTN","ORWDXM3",244,0)
 . . . I +INFUSE>0 S INFUSE="INFUSE OVER "_INFUSE_" Minutes"
"RTN","ORWDXM3",245,0)
 . . . S ORDIALOG(INFUID,1)=INFUSE,SUCC=1
"RTN","ORWDXM3",246,0)
 . . S SUCC=1
"RTN","ORWDXM3",247,0)
 . ; additive frequency check/infusion rate checks for continuous orders
"RTN","ORWDXM3",248,0)
 . I TYPE="C" D  I SUCC=0 Q
"RTN","ORWDXM3",249,0)
 . . I $D(ORDIALOG(INFUID,1)) S SUCC=1 I SUCC=0 Q
"RTN","ORWDXM3",250,0)
 . . S SUCC=$$IVADFCHK(.ORDIALOG)
"RTN","ORWDXM3",251,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",252,0)
 . I '$D(ORDIALOG(INFUID,1)),TYPE="I" S SUCC=1
"RTN","ORWDXM3",253,0)
 . S PASSIV=$$IVRTECHK
"RTN","ORWDXM3",254,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",255,0)
 . I PASSIV=0 S SUCC=0
"RTN","ORWDXM3",256,0)
 . I SUCC=1,$$ISMISSFL(.ORDIALOG,TYPE)=1 S SUCC=0
"RTN","ORWDXM3",257,0)
 ;check dosage for UD QO
"RTN","ORWDXM3",258,0)
 I (ODP="PSJ")!(ODP="PSO"),ODG'="IV RX",ODG'="TPN" D
"RTN","ORWDXM3",259,0)
 . S DSAGEID=$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))
"RTN","ORWDXM3",260,0)
 . I $D(ORDIALOG(DSAGEID,1)) S SUCC=1
"RTN","ORWDXM3",261,0)
 . I SUCC=0 Q
"RTN","ORWDXM3",262,0)
 . ;
"RTN","ORWDXM3",263,0)
 . S SUCC=$$VERDUR(.ORDIALOG)
"RTN","ORWDXM3",264,0)
 ;
"RTN","ORWDXM3",265,0)
 I SUCC=1,$P($G(^ORD(101.41,IFN,5)),U,8) D
"RTN","ORWDXM3",266,0)
 .N COMMID,WPCNT
"RTN","ORWDXM3",267,0)
 .S COMMID=$O(^ORD(101.41,"B","OR GTX WORD PROCESSING 1",0))
"RTN","ORWDXM3",268,0)
 .S COMMID=$O(^ORD(101.41,IFN,6,"D",COMMID,0))
"RTN","ORWDXM3",269,0)
 .I COMMID S WPCNT=0 F  S WPCNT=$O(^ORD(101.41,IFN,6,COMMID,2,WPCNT)) Q:'WPCNT!('SUCC)  D
"RTN","ORWDXM3",270,0)
 ..I ^ORD(101.41,IFN,6,COMMID,2,WPCNT,0)["^" S SUCC=0
"RTN","ORWDXM3",271,0)
 Q SUCC
"RTN","ORWDXM3",272,0)
 ;
"RTN","ORWDXM3",273,0)
IVRTECHK() ;
"RTN","ORWDXM3",274,0)
 N RTIEN,RTVALUE,RESULT
"RTN","ORWDXM3",275,0)
 N CNT,NUM,ORDERIDS,OIIEN,OTYPE,ROUTE
"RTN","ORWDXM3",276,0)
 S CNT=0,RESULT=0
"RTN","ORWDXM3",277,0)
 S RTIEN=+$P($G(ORDIALOG("B","ROUTE")),U,2) I RTIEN'>0 Q RESULT
"RTN","ORWDXM3",278,0)
 S RTVALUE=+$G(ORDIALOG(RTIEN,1)) I RTVALUE'>0 Q RESULT
"RTN","ORWDXM3",279,0)
 F OTYPE="SOLUTION","ADDITIVE" D
"RTN","ORWDXM3",280,0)
 .S OIIEN=+$P($G(ORDIALOG("B",OTYPE)),U,2) I OIIEN>0 D
"RTN","ORWDXM3",281,0)
 ..S NUM=0 F  S NUM=$O(ORDIALOG(OIIEN,NUM)) Q:NUM'>0  I +$G(ORDIALOG(OIIEN,NUM))>0 D
"RTN","ORWDXM3",282,0)
 ...S CNT=CNT+1,ORDERIDS(CNT)=ORDIALOG(OIIEN,NUM)
"RTN","ORWDXM3",283,0)
 I $D(ORDERIDS)=0 Q
"RTN","ORWDXM3",284,0)
 S ROUTE=$$IVQOVAL^ORWDPS33(.ORDERIDS,RTVALUE)
"RTN","ORWDXM3",285,0)
 I ROUTE="" S ORDIALOG(RTIEN,1)=ROUTE
"RTN","ORWDXM3",286,0)
 I ROUTE'="" S RESULT=1
"RTN","ORWDXM3",287,0)
 ;K ^TMP($J,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",288,0)
 ;D ALL^PSS51P2(RTVALUE,,,,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",289,0)
 ;I +^TMP($J,"ORWDXM3 IVRTECHK",RTVALUE,6)'=1 S ORDIALOG(RTIEN,1)="",RESULT=0
"RTN","ORWDXM3",290,0)
 ;K ^TMP($J,"ORWDXM3 IVRTECHK")
"RTN","ORWDXM3",291,0)
 Q RESULT
"RTN","ORWDXM3",292,0)
 ;
"RTN","ORWDXM3",293,0)
ISUDQO(ORY,DLGID) ;True: is unit dose quick order
"RTN","ORWDXM3",294,0)
 S ORY=0
"RTN","ORWDXM3",295,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORWDXM3",296,0)
 N CLODGRP,UDGRP1,UDGRP2,DLGTYP,DLGGRP
"RTN","ORWDXM3",297,0)
 S UDGRP1=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDXM3",298,0)
 S UDGRP2=$O(^ORD(100.98,"B","I RX",0))
"RTN","ORWDXM3",299,0)
 S CLODGRP=$O(^ORD(100.98,"B","CLINIC ORDERS",""))
"RTN","ORWDXM3",300,0)
 S DLGTYP=$P($G(^ORD(101.41,DLGID,0)),U,4)
"RTN","ORWDXM3",301,0)
 S DLGGRP=$P($G(^ORD(101.41,DLGID,0)),U,5)
"RTN","ORWDXM3",302,0)
 I (DLGTYP="Q"),((DLGGRP=UDGRP1)!(DLGGRP=UDGRP2)!(DLGGRP=CLODGRP)) S ORY=1
"RTN","ORWDXM3",303,0)
 Q
"RTN","ORWDXM4")
0^88^B37881489
"RTN","ORWDXM4",1,0)
ORWDXM4 ; SLC/KCM - Order Dialogs, Menus;10:42 AM  6 Sep 1998
"RTN","ORWDXM4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,215,296,280**;Dec 17, 1997;Build 85
"RTN","ORWDXM4",3,0)
 ;
"RTN","ORWDXM4",4,0)
SETUP ; -- setup dialog (continued from ORWDXM1)
"RTN","ORWDXM4",5,0)
 ;    if xfer med order, setup ORDIALOG differently
"RTN","ORWDXM4",6,0)
 I ORWMODE,$$ISMED(ORIT),$$CHGSTS(ORCAT,ORIT) D MEDXFER Q
"RTN","ORWDXM4",7,0)
 ;    get base dialog (based on display group) & location of responses
"RTN","ORWDXM4",8,0)
 I ORWMODE D
"RTN","ORWDXM4",9,0)
 . S ORDG=$P(^OR(100,+ORIT,0),U,11),ORDIALOG=+$P(^(0),U,5)
"RTN","ORWDXM4",10,0)
 . S RSPREF="^OR(100,"_+ORIT_",4.5)"
"RTN","ORWDXM4",11,0)
 E  D
"RTN","ORWDXM4",12,0)
 . N X0 S X0=$G(^ORD(101.41,ORIT,0))
"RTN","ORWDXM4",13,0)
 . S ORDIALOG=$S($P(X0,U,4)="D":ORIT,1:0)
"RTN","ORWDXM4",14,0)
 . S ORDG=$P(X0,U,5) Q:'ORDG
"RTN","ORWDXM4",15,0)
 . I 'ORDIALOG S ORDIALOG=+$$DEFDLG^ORWDXQ(ORDG)
"RTN","ORWDXM4",16,0)
 . S RSPREF="^ORD(101.41,"_ORIT_",6)"
"RTN","ORWDXM4",17,0)
 ;    setup the ORDIALOG array
"RTN","ORWDXM4",18,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXM4",19,0)
 D GETORDER^ORCD(RSPREF)
"RTN","ORWDXM4",20,0)
 Q
"RTN","ORWDXM4",21,0)
SETUPS ; -- setup for specific types of dialogs (continued from ORWDXM1)
"RTN","ORWDXM4",22,0)
 ; pharmacy uses ORCAT to know order package
"RTN","ORWDXM4",23,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0)) S ORCAT="O"
"RTN","ORWDXM4",24,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0)) D
"RTN","ORWDXM4",25,0)
 . I ORCAT="O",'ORIMO S ORWPSWRG="" ; not auto-ack, pt not inpt
"RTN","ORWDXM4",26,0)
 . S ORCAT="I"
"RTN","ORWDXM4",27,0)
 I ORCAT="O",$D(OREVENT("EFFECTIVE")),(ORDG=+$O(^ORD(100.98,"B","O RX",0))) D
"RTN","ORWDXM4",28,0)
 . S ORDIALOG($O(^ORD(101.41,"B",X,0)),1)=OREVENT("EFFECTIVE")
"RTN","ORWDXM4",29,0)
 I ORDIALOG=$O(^ORD(101.41,"B","RA OERR EXAM",0))         D RA^ORWDXM2 G XENV
"RTN","ORWDXM4",30,0)
 I ORDIALOG=$O(^ORD(101.41,"B","LR OTHER LAB TESTS",0))   D LR^ORWDXM2 G XENV
"RTN","ORWDXM4",31,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW1",0))                 D DO^ORWDXM2 G XENV
"RTN","ORWDXM4",32,0)
 I ORDIALOG=$O(^ORD(101.41,"B","FHW2",0))                 D EL^ORWDXM2 G XENV
"RTN","ORWDXM4",33,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJ OR PAT OE",0))        D UD^ORWDXM2 G XENV
"RTN","ORWDXM4",34,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",0)) D IV^ORWDXM2 G XENV
"RTN","ORWDXM4",35,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO OERR",0))             D OP^ORWDXM2 G XENV
"RTN","ORWDXM4",36,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PSO SUPPLY",0))           D OP^ORWDXM2 G XENV
"RTN","ORWDXM4",37,0)
 I ORDIALOG=$O(^ORD(101.41,"B","PS MEDS",0))              D PS^ORWDPS3 G XENV
"RTN","ORWDXM4",38,0)
 I ORDIALOG=$O(^ORD(101.41,"B","VBEC BLOOD BANK",0))      D VB^ORWDXM4 G XENV
"RTN","ORWDXM4",39,0)
 I ORDIALOG=$O(^ORD(101.41,"B","GMRAOR ALLERGY ENTER/EDIT",0)) S ORQUIT=1
"RTN","ORWDXM4",40,0)
XENV ;    end case
"RTN","ORWDXM4",41,0)
 Q
"RTN","ORWDXM4",42,0)
MEDXFER ; -- setup ORDIALOG for a med that is transferred (from SETUP)
"RTN","ORWDXM4",43,0)
 ;
"RTN","ORWDXM4",44,0)
 ; use ORWDPS3 if OR*3*94 installed
"RTN","ORWDXM4",45,0)
 I ORWP94 G MEDXFER^ORWDPS3
"RTN","ORWDXM4",46,0)
 ;
"RTN","ORWDXM4",47,0)
 N UDLG,FDLG,ODLG,DLG,OI K ^TMP("PS",$J)
"RTN","ORWDXM4",48,0)
 S UDLG=$O(^ORD(101.41,"AB","PSJ OR PAT OE",0))
"RTN","ORWDXM4",49,0)
 S FDLG=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWDXM4",50,0)
 S ODLG=$O(^ORD(101.41,"AB","PSO OERR",0))
"RTN","ORWDXM4",51,0)
 S DLG=$P($G(^OR(100,+ORIT,0)),U,5)
"RTN","ORWDXM4",52,0)
 S ORDIALOG=$S(+DLG=UDLG:ODLG,+DLG=ODLG:UDLG,+DLG=FDLG:FDLG,1:0)
"RTN","ORWDXM4",53,0)
 I 'ORDIALOG D SETERR(ORIT,"Incomplete Order Record") Q
"RTN","ORWDXM4",54,0)
 S ORDG=+$P(^ORD(101.41,ORDIALOG,0),U,5)
"RTN","ORWDXM4",55,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXM4",56,0)
 D GETORDER^ORCD("^OR(100,"_+ORIT_",4.5)")
"RTN","ORWDXM4",57,0)
 S OI=$$VAL^ORCD("MEDICATION")
"RTN","ORWDXM4",58,0)
 I '$$MEDOK(OI,ORCAT) D SETERR(ORIT,"This may not be ordered as an "_$S(ORCAT="I":"in",1:"out")_"patient drug.") Q
"RTN","ORWDXM4",59,0)
 I $G(^ORD(101.43,OI,.1)),(^(.1)<$$NOW^XLFDT) D SETERR(ORIT,"This may no longer be ordered.") Q
"RTN","ORWDXM4",60,0)
 K ORDIALOG($$PTR("DISPENSE DRUG"),1)
"RTN","ORWDXM4",61,0)
 K ORDIALOG($$PTR("WORD PROCESSING 1"),1)
"RTN","ORWDXM4",62,0)
 I ORDIALOG=ODLG D IN2OUT  ; could call  IN^ORCMED except for writes
"RTN","ORWDXM4",63,0)
 I ORDIALOG=UDLG D OUT2IN  ; could call OUT^ORCMED except for writes
"RTN","ORWDXM4",64,0)
 Q
"RTN","ORWDXM4",65,0)
IN2OUT ; -- make inpatient responses into outpatient
"RTN","ORWDXM4",66,0)
 N I,DDRUG,PKGID,DOSE
"RTN","ORWDXM4",67,0)
 S DOSE=$G(ORDIALOG($$PTR("INSTRUCTIONS"),1))
"RTN","ORWDXM4",68,0)
 F I="INSTRUCTIONS","UNITS/DOSE","FREE TEXT","DISPENSE DRUG" K ORDIALOG($$PTR(I),1)
"RTN","ORWDXM4",69,0)
 S PKGID=$G(^OR(100,+ORIT,4))_";"_$P(^(0),U,12)
"RTN","ORWDXM4",70,0)
 D OEL^PSOORRL(+ORVP,PKGID) S DDRUG=$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORWDXM4",71,0)
 I $P(DDRUG,U,3) S ORDIALOG($$PTR("DISPENSE DRUG"),1)=$P(DDRUG,U,3)
"RTN","ORWDXM4",72,0)
 ;    keep instructions if IV med, otherwise use units returned
"RTN","ORWDXM4",73,0)
 I $P($G(^ORD(101.43,OI,"PS")),U)=2 S ORDIALOG($$PTR("INSTRUCTIONS"),1)=DOSE
"RTN","ORWDXM4",74,0)
 E  S:$P(DDRUG,U,2) ORDIALOG($$PTR("INSTRUCTIONS"),1)=$P(DDRUG,U,2)
"RTN","ORWDXM4",75,0)
 ;    change orderable item if new orderable item returned
"RTN","ORWDXM4",76,0)
 I $P(DDRUG,U,4),$P(DDRUG,U,4)'=+$P($G(^ORD(101.43,OI,0)),U,2) D
"RTN","ORWDXM4",77,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(DDRUG,U,4)_";99PSP",0))
"RTN","ORWDXM4",78,0)
 . S:OI ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORWDXM4",79,0)
 Q
"RTN","ORWDXM4",80,0)
OUT2IN ; make outpatient responses into inpatient
"RTN","ORWDXM4",81,0)
 N ORP,ORI,PROMPT,PKGID,DDRUG,ONE
"RTN","ORWDXM4",82,0)
 D CHANGED^ORCDPS("XFR") ; Kill extra values not in inpt dialog
"RTN","ORWDXM4",83,0)
 S PKGID=$G(^OR(100,+ORIT,4))_";"_$P(^(0),U,12)
"RTN","ORWDXM4",84,0)
 D OEL^PSOORRL(+ORVP,PKGID) S DDRUG=$G(^TMP("PS",$J,"DD",1,0))
"RTN","ORWDXM4",85,0)
 S:$P(DDRUG,U,3) ORDIALOG($$PTR("DISPENSE DRUG"),1)=$P(DDRUG,U,3)
"RTN","ORWDXM4",86,0)
 I $P(DDRUG,U,4),$P(DDRUG,U,4)'=+$P($G(^ORD(101.43,+OI,0)),U,2) D
"RTN","ORWDXM4",87,0)
 . S OI=+$O(^ORD(101.43,"ID",+$P(DDRUG,U,4)_";99PSP",0))
"RTN","ORWDXM4",88,0)
 . S:OI ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORWDXM4",89,0)
 S ONE=$O(ORDIALOG($$PTR("INSTRUCTIONS"),0)) ; first inst
"RTN","ORWDXM4",90,0)
 F ORP="ROUTE","SCHEDULE" D
"RTN","ORWDXM4",91,0)
 . S ORI=0,PROMPT=$$PTR(ORP)
"RTN","ORWDXM4",92,0)
 . F  S ORI=$O(ORDIALOG(PROMPT,ORI)) Q:ORI'>0  I ORDIALOG(PROMPT,ORI)=""!(ORI>ONE) K ORDIALOG(PROMPT,ORI)
"RTN","ORWDXM4",93,0)
 Q
"RTN","ORWDXM4",94,0)
PTR(NAME) ; -- Returns pointer to OR GTX NAME (copied from ORCMED)
"RTN","ORWDXM4",95,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_NAME,1,63),0))
"RTN","ORWDXM4",96,0)
 ;
"RTN","ORWDXM4",97,0)
MEDOK(OI,CAT)   ; return 1 if med may be ordered for this patient category
"RTN","ORWDXM4",98,0)
 N P S P=$S(CAT="I":1,1:2)
"RTN","ORWDXM4",99,0)
 Q $P($G(^ORD(101.43,+OI,"PS")),U,P)
"RTN","ORWDXM4",100,0)
 ;
"RTN","ORWDXM4",101,0)
CHGSTS(ECAT,IFN)        ; return 1 if out to in or in to out
"RTN","ORWDXM4",102,0)
 N OCAT
"RTN","ORWDXM4",103,0)
 S OCAT=$P($G(^OR(100,+IFN,0)),U,12)
"RTN","ORWDXM4",104,0)
 Q OCAT'=ECAT
"RTN","ORWDXM4",105,0)
 ;
"RTN","ORWDXM4",106,0)
ISMED(IFN)      ; return 1 if this is a pharmacy order
"RTN","ORWDXM4",107,0)
 N PKG S PKG=$P($G(^OR(100,+IFN,0)),U,14)
"RTN","ORWDXM4",108,0)
 Q $$NMSP^ORCD(PKG)="PS"
"RTN","ORWDXM4",109,0)
SETERR(ID,X)       ; sets LST to rejection with error message
"RTN","ORWDXM4",110,0)
 D GETTXT^ORWORR(.LST,ID)
"RTN","ORWDXM4",111,0)
 S LST(0)="8^0",LST(.5)=X,LST(.6)=""
"RTN","ORWDXM4",112,0)
 Q
"RTN","ORWDXM4",113,0)
VB ; setup environment for VBECS
"RTN","ORWDXM4",114,0)
 ; -- setup ORTIME, ORIMTIME arrays
"RTN","ORWDXM4",115,0)
 D GETIMES^ORCDLR1
"RTN","ORWDXM4",116,0)
 ; -- setup ORCOMP, ORTEST, and ORTAS
"RTN","ORWDXM4",117,0)
 S (ORCOMP,ORTEST,ORTAS)=""
"RTN","ORWDXM4",118,0)
 N P,PROMPT,I,X,X0
"RTN","ORWDXM4",119,0)
 S P=+$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM4",120,0)
 S I=0 F  S I=$O(ORDIALOG(P,I)) Q:I<1  S X=+$G(ORDIALOG(P,I)) D
"RTN","ORWDXM4",121,0)
 . S X0=$G(^ORD(101.43,X,"VB")),X=+$P($G(^(0)),U,2)
"RTN","ORWDXM4",122,0)
 . I $P(X0,U) S ORCOMP=ORCOMP_$S($L(ORCOMP):U,1:"")_X Q
"RTN","ORWDXM4",123,0)
 . S ORTEST=ORTEST_$S($L(ORTEST):U,1:"")_X
"RTN","ORWDXM4",124,0)
 . I X=2 S ORTAS=1
"RTN","ORWDXM4",125,0)
 I '$D(ORTEST("Lab CollSamp")) D
"RTN","ORWDXM4",126,0)
 . N I,V,T,LC S LC=1
"RTN","ORWDXM4",127,0)
 . F I=1:1:$L(ORTEST,U) S V=+$P(ORTEST,U,I) D  Q:'LC  ;no LC samp
"RTN","ORWDXM4",128,0)
 .. S T=$$LAB60^ORCDVBEC(V) ;VBECS ID -> #60 ien
"RTN","ORWDXM4",129,0)
 .. I '$P($G(^LAB(60,T,0)),U,9) S LC=0 Q
"RTN","ORWDXM4",130,0)
 . S ORTEST("Lab CollSamp")=LC
"RTN","ORWDXM4",131,0)
 I '$D(ORTIME),'$D(ORIMTIME) D GETIMES^ORCDLR1
"RTN","ORWDXM4",132,0)
 S PROMPT=$O(^ORD(101.41,"B","OR GTX COLLECTION TYPE",0))
"RTN","ORWDXM4",133,0)
 I $D(ORDIALOG(PROMPT,1)) S ORCOLLCT=ORDIALOG(PROMPT,1) I 1
"RTN","ORWDXM4",134,0)
 E  S EDITONLY=0,ORCOLLCT=$$COLLTYPE^ORCDLR1
"RTN","ORWDXM4",135,0)
 I ORCOLLCT="I" D
"RTN","ORWDXM4",136,0)
 . S PROMPT=$O(^ORD(101.41,"B","OR GTX START DATE/TIME",0))
"RTN","ORWDXM4",137,0)
 . D LRICTMOK^ORWDXM2
"RTN","ORWDXM4",138,0)
 Q
"RTN","ORWDXM4",139,0)
VBASK(I) ; set the ORASK variable for child component prompts in VBECS order
"RTN","ORWDXM4",140,0)
 I ORDIALOG'=$O(^ORD(101.41,"B","VBEC BLOOD BANK",0)) Q
"RTN","ORWDXM4",141,0)
 N P S P=+$O(^ORD(101.41,"AB","OR GTX ORDERABLE ITEM",0))
"RTN","ORWDXM4",142,0)
 N OI S OI=+$G(ORDIALOG(P,I))
"RTN","ORWDXM4",143,0)
 I +$G(^ORD(101.43,+$G(OI),"VB")) S ORASK=1
"RTN","ORWDXM4",144,0)
 Q
"RTN","ORWDXM4",145,0)
VBQO(IFN) ;Check to see if it's a good VBECS QO
"RTN","ORWDXM4",146,0)
 ;regular order treated as good QO
"RTN","ORWDXM4",147,0)
 ;
"RTN","ORWDXM4",148,0)
 I $P($G(^ORD(101.41,IFN,0)),U,4)'="Q" Q 1
"RTN","ORWDXM4",149,0)
 N ODP,ODG,RESULT,P,TNS,I
"RTN","ORWDXM4",150,0)
 S RESULT=0
"RTN","ORWDXM4",151,0)
 S ODP=+$P($G(^ORD(101.41,IFN,0)),U,7),ODG=+$P($G(^(0)),U,5)
"RTN","ORWDXM4",152,0)
 S ODP=$$GET1^DIQ(9.4,+ODP_",",1),ODG=$P($G(^ORD(100.98,ODG,0)),U,3)
"RTN","ORWDXM4",153,0)
 I ODP'["VBEC" Q 1
"RTN","ORWDXM4",154,0)
 Q RESULT
"RTN","ORWDXR01")
0^94^B20020938
"RTN","ORWDXR01",1,0)
ORWDXR01 ;SLC/JDL - Utilities for Order Actions;; 6/30/03 11:48 ;04/16/10  08:26
"RTN","ORWDXR01",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**187,190,195,215,280**;Dec 17, 1997;Build 85
"RTN","ORWDXR01",3,0)
CANCHG(ORY,ORIFN,TXTOD) ;
"RTN","ORWDXR01",4,0)
 ;If it's an pending or unsigned unreleased renewed order, can edit=True
"RTN","ORWDXR01",5,0)
 S ORY=0
"RTN","ORWDXR01",6,0)
 Q:'$D(^OR(100,+ORIFN,0))
"RTN","ORWDXR01",7,0)
 I TXTOD D TXTCAN(.ORY) Q
"RTN","ORWDXR01",8,0)
 N OUTGRP,URELSTS,USIGSTS,RNTYPE,PDSTS
"RTN","ORWDXR01",9,0)
 N ODGRP,ODREL,ODSIG,ODTYPE,LSTACT
"RTN","ORWDXR01",10,0)
 S OUTGRP=$O(^ORD(100.98,"B","O RX",0))
"RTN","ORWDXR01",11,0)
 S URELSTS=$O(^ORD(100.01,"B","UNRELEASED",0))
"RTN","ORWDXR01",12,0)
 S PDSTS=$O(^ORD(100.01,"B","PENDING",0))
"RTN","ORWDXR01",13,0)
 S USIGSTS=2 ; unsigned order
"RTN","ORWDXR01",14,0)
 S RNTYPE=2 ; renew action
"RTN","ORWDXR01",15,0)
 ;Data from the order entry
"RTN","ORWDXR01",16,0)
 S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORWDXR01",17,0)
 S ODGRP=$P($G(^OR(100,+ORIFN,0)),U,11)
"RTN","ORWDXR01",18,0)
 S ODREL=$P($G(^OR(100,+ORIFN,3)),U,3)
"RTN","ORWDXR01",19,0)
 S ODSIG=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,4)
"RTN","ORWDXR01",20,0)
 S ODTYPE=$P($G(^OR(100,+ORIFN,3)),U,11)
"RTN","ORWDXR01",21,0)
 I (ODGRP=OUTGRP),(ODREL=URELSTS),(ODSIG=USIGSTS),(ODTYPE=RNTYPE) S ORY=1
"RTN","ORWDXR01",22,0)
 Q
"RTN","ORWDXR01",23,0)
 ;
"RTN","ORWDXR01",24,0)
TXTCAN(ORY) ;
"RTN","ORWDXR01",25,0)
 ;if it's an unsigned unreleased renewed text order, can change=true
"RTN","ORWDXR01",26,0)
 N URELSTS,USIGSTS,RNTYPE
"RTN","ORWDXR01",27,0)
 N ODREL,ODSIG,ODTYPE,LSTACT
"RTN","ORWDXR01",28,0)
 S URELSTS=$O(^ORD(100.01,"B","UNRELEASED",0))
"RTN","ORWDXR01",29,0)
 S USIGSTS=2 ; unsigned order
"RTN","ORWDXR01",30,0)
 S RNTYPE=2 ; renew action
"RTN","ORWDXR01",31,0)
 ;Data from the order entry
"RTN","ORWDXR01",32,0)
 S LSTACT=$P($G(^OR(100,+ORIFN,3)),U,7)
"RTN","ORWDXR01",33,0)
 S ODREL=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,15)
"RTN","ORWDXR01",34,0)
 S ODSIG=$P($G(^OR(100,+ORIFN,8,LSTACT,0)),U,4)
"RTN","ORWDXR01",35,0)
 S ODTYPE=$P($G(^OR(100,+ORIFN,3)),U,11)
"RTN","ORWDXR01",36,0)
 I (ODREL=URELSTS),(ODSIG=USIGSTS),(ODTYPE=RNTYPE) S ORY=1
"RTN","ORWDXR01",37,0)
 Q
"RTN","ORWDXR01",38,0)
 ;
"RTN","ORWDXR01",39,0)
SAVCHG(ORY,ORID,PARM1,PARM2,TXTOD) ;
"RTN","ORWDXR01",40,0)
 ;save new changes on the unreleased unsigned renewed order
"RTN","ORWDXR01",41,0)
 Q:'$D(^OR(100,+ORID,0))
"RTN","ORWDXR01",42,0)
 ;Update new start and stop date the text order
"RTN","ORWDXR01",43,0)
 I TXTOD D TXTSAV(.ORY,ORID,PARM1,PARM2) Q
"RTN","ORWDXR01",44,0)
 ;Update new refills and pickup for the med order
"RTN","ORWDXR01",45,0)
 N REFID,PICKID,ACT,IX,TXT,REFPOS,NDQUIT
"RTN","ORWDXR01",46,0)
 S (REFID,PICKID,ACT,REFPOS,NDQUIT)=0,ORY=""
"RTN","ORWDXR01",47,0)
 S ACT=+$P(ORID,";",2) S:ACT'>0 ACT=1
"RTN","ORWDXR01",48,0)
 S REFID=$O(^OR(100,+ORID,4.5,"ID","REFILLS",0))
"RTN","ORWDXR01",49,0)
 S PICKID=$O(^OR(100,+ORID,4.5,"ID","PICKUP",0))
"RTN","ORWDXR01",50,0)
 S:$D(^OR(100,+ORID,4.5,REFID,1)) ^(1)=PARM1
"RTN","ORWDXR01",51,0)
 S:$D(^OR(100,+ORID,4.5,PICKID,1)) ^(1)=PARM2
"RTN","ORWDXR01",52,0)
 S IX=0 F  S IX=$O(^OR(100,+ORID,8,ACT,.1,IX)) Q:('IX)!(NDQUIT)  D
"RTN","ORWDXR01",53,0)
 . S TXT=$G(^OR(100,+ORID,8,ACT,.1,IX,0))
"RTN","ORWDXR01",54,0)
 . I ($$UP^XLFSTR(TXT)["QUANTITY:"),($$UP^XLFSTR(TXT)["REFILLS:") D
"RTN","ORWDXR01",55,0)
 . . S REFPOS=$F($$UP^XLFSTR(TXT),"REFILLS")-$L("REFILLS")-1
"RTN","ORWDXR01",56,0)
 . . S TXT=$E(TXT,1,REFPOS)_"Refills: "_PARM1
"RTN","ORWDXR01",57,0)
 . . S ^OR(100,+ORID,8,ACT,.1,IX,0)=TXT,NDQUIT=1 Q
"RTN","ORWDXR01",58,0)
 D GETBYIFN^ORWORR(.ORY,+ORID)
"RTN","ORWDXR01",59,0)
 Q
"RTN","ORWDXR01",60,0)
 ;
"RTN","ORWDXR01",61,0)
TXTSAV(ORY,ORID,PARM1,PARM2) ;
"RTN","ORWDXR01",62,0)
 ; Update new start and stop date for the unsigned unreleased
"RTN","ORWDXR01",63,0)
 ; renewed text order
"RTN","ORWDXR01",64,0)
 N STRTID,STOPID
"RTN","ORWDXR01",65,0)
 S STRTID=$O(^OR(100,+ORID,4.5,"ID","START",0))
"RTN","ORWDXR01",66,0)
 S STOPID=$O(^OR(100,+ORID,4.5,"ID","STOP",0))
"RTN","ORWDXR01",67,0)
 S:$D(^OR(100,+ORID,4.5,STRTID,1)) ^(1)=PARM1
"RTN","ORWDXR01",68,0)
 S:$D(^OR(100,+ORID,4.5,STOPID,1)) ^(1)=PARM2
"RTN","ORWDXR01",69,0)
 D GETBYIFN^ORWORR(.ORY,+ORID)
"RTN","ORWDXR01",70,0)
 Q
"RTN","ORWDXR01",71,0)
 ;
"RTN","ORWDXR01",72,0)
ISSPLY(ORY,DLGID,QODLG) ;
"RTN","ORWDXR01",73,0)
 ; ORY=1: is "PSO SUPPLY" dialog
"RTN","ORWDXR01",74,0)
 S ORY=""
"RTN","ORWDXR01",75,0)
 Q:'$D(^ORD(101.41,DLGID,0))
"RTN","ORWDXR01",76,0)
 I 'QODLG,($P(^ORD(101.41,DLGID,0),U)="PSO SUPPLY") S ORY=1
"RTN","ORWDXR01",77,0)
 I QODLG D
"RTN","ORWDXR01",78,0)
 . N SPLYDG S SPLYDG=$O(^ORD(100.98,"B","SPLY",0))
"RTN","ORWDXR01",79,0)
 . I $P(^ORD(101.41,DLGID,0),U,5)=SPLYDG S ORY=1
"RTN","ORWDXR01",80,0)
 Q
"RTN","ORWDXR01",81,0)
 ;
"RTN","ORWDXR01",82,0)
OXDATA(ORY,ORIEN) ; Return orderable item data for order check usage
"RTN","ORWDXR01",83,0)
 Q:'$D(^OR(100,+ORIEN,0))
"RTN","ORWDXR01",84,0)
 D MAYBEIV(.ORY,ORIEN) I $L($G(ORY))>1 Q
"RTN","ORWDXR01",85,0)
 N DRUGID,OIID,IDX,IDY,DISPIN,DISPOUT,DISPID
"RTN","ORWDXR01",86,0)
 S (DRUGID,OIID,IDX,IDY,DISPIN,DISPOUT)=0
"RTN","ORWDXR01",87,0)
 S DISPID=""
"RTN","ORWDXR01",88,0)
 S DISPIN=$O(^ORD(100.98,"B","UD RX",0))
"RTN","ORWDXR01",89,0)
 S DISPOUT=$O(^ORD(100.98,"B","O RX",0))
"RTN","ORWDXR01",90,0)
 N DISPCM S DISPCM=$O(^ORD(100.98,"B","CLINIC ORDERS",0))
"RTN","ORWDXR01",91,0)
 S DRUGID=$O(^OR(100,+ORIEN,4.5,"ID","DRUG",0))
"RTN","ORWDXR01",92,0)
 S OIID=$O(^OR(100,+ORIEN,4.5,"ID","ORDERABLE",0))
"RTN","ORWDXR01",93,0)
 S DISPID=$P(^OR(100,+ORIEN,0),U,11)
"RTN","ORWDXR01",94,0)
 I DISPID=DISPIN S DISPID="PSI"
"RTN","ORWDXR01",95,0)
 I DISPID=DISPOUT S DISPID="PSO"
"RTN","ORWDXR01",96,0)
 I DISPID=DISPCM S DISPID="PSI"
"RTN","ORWDXR01",97,0)
 I (DISPID'="PSI"),(DISPID'="PSO") Q
"RTN","ORWDXR01",98,0)
 Q:'DRUGID
"RTN","ORWDXR01",99,0)
 Q:'OIID
"RTN","ORWDXR01",100,0)
 S IDX=$O(^OR(100,+ORIEN,4.5,DRUGID,0))
"RTN","ORWDXR01",101,0)
 S IDY=$O(^OR(100,+ORIEN,4.5,OIID,0))
"RTN","ORWDXR01",102,0)
 I IDX,IDY,'+DISPID S ORY=$G(^OR(100,+ORIEN,4.5,OIID,IDY))_U_DISPID_U_$G(^OR(100,+ORIEN,4.5,DRUGID,IDX))
"RTN","ORWDXR01",103,0)
 Q
"RTN","ORWDXR01",104,0)
 ;
"RTN","ORWDXR01",105,0)
MAYBEIV(ORY,ORIEN) ; Return orderable item data for iv order check usage
"RTN","ORWDXR01",106,0)
 N X0,ORDIALOG
"RTN","ORWDXR01",107,0)
 S X0=^OR(100,+ORIEN,0)
"RTN","ORWDXR01",108,0)
 S ORDIALOG=+$P(X0,U,5)
"RTN","ORWDXR01",109,0)
 D GETDLG^ORCD(ORDIALOG)
"RTN","ORWDXR01",110,0)
 D GETORDER^ORCD(+ORIEN)
"RTN","ORWDXR01",111,0)
 I $D(ORDIALOG("B","SOLUTION")) D
"RTN","ORWDXR01",112,0)
 .N ORI,ORSUB
"RTN","ORWDXR01",113,0)
 .S ORSUB=$P(ORDIALOG("B","SOLUTION"),U,2)
"RTN","ORWDXR01",114,0)
 .S ORI=0 F  S ORI=$O(ORDIALOG(ORSUB,ORI)) Q:'ORI  S ORY=$G(ORY)_"|"_$G(ORDIALOG(ORSUB,ORI))_U_"PSIV"_U_"B;"
"RTN","ORWDXR01",115,0)
 I $D(ORDIALOG("B","ADDITIVE")) D
"RTN","ORWDXR01",116,0)
 .N ORI,ORSUB
"RTN","ORWDXR01",117,0)
 .S ORSUB=$P(ORDIALOG("B","ADDITIVE"),U,2)
"RTN","ORWDXR01",118,0)
 .S ORI=0 F  S ORI=$O(ORDIALOG(ORSUB,ORI)) Q:'ORI  S ORY=$G(ORY)_"|"_$G(ORDIALOG(ORSUB,ORI))_U_"PSIV"_U_"A"
"RTN","ORWDXR01",119,0)
 I $L($G(ORY),"|")>1 S ORY=$P(ORY,"|",2,$L(ORY,"|"))
"RTN","ORWDXR01",120,0)
 Q
"RTN","ORWDXR01",121,0)
 ;
"RTN","ORWDXVB3")
0^90^B1399631
"RTN","ORWDXVB3",1,0)
ORWDXVB3 ;;slc/dcm - Order dialog utilities for Blood Bank Cont. ;3/17/10  08:20
"RTN","ORWDXVB3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17 1997;Build 85
"RTN","ORWDXVB3",3,0)
DIAGORD(OROOT) ;Get sequence order of Diagnostic tests
"RTN","ORWDXVB3",4,0)
 N ORLIST,I,X
"RTN","ORWDXVB3",5,0)
 D GETLST^XPAR(.ORLIST,"ALL","OR VBECS DIAGNOSTIC TEST ORDER")
"RTN","ORWDXVB3",6,0)
 S I=0 F  S I=$O(ORLIST(I)) Q:'I  S X=ORLIST(I) I $D(^ORD(101.43,$P(X,"^",2),0)) S OROOT(I)=$P(X,"^",2)_"^"_$P(^(0),"^",1)_"^"_$P(^(0),"^",1)
"RTN","ORWDXVB3",7,0)
 Q
"RTN","ORWDXVB3",8,0)
COLLTIM(OROOT) ;Get Collection Time Default Parameter Value
"RTN","ORWDXVB3",9,0)
 S OROOT=+$$GET^XPAR("ALL","OR VBECS REMOVE COLL TIME",1,"I")
"RTN","ORWDXVB3",10,0)
 Q
"RTN","ORWDXVB3",11,0)
SWPANEL(OROOT) ;Switch the location of the Diagnostic and Component panels on VBECS Order Dialog
"RTN","ORWDXVB3",12,0)
 S OROOT=+$$GET^XPAR("ALL","OR VBECS DIAGNOSTIC PANEL 1ST",1,"I")
"RTN","ORWDXVB3",13,0)
 Q
"RTN","ORWGAPI3")
0^35^B30897218
"RTN","ORWGAPI3",1,0)
ORWGAPI3 ; SLC/STAFF - Graph Data ;07/28/09  11:34
"RTN","ORWGAPI3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**215,243,280**;Dec 17, 1997;Build 85
"RTN","ORWGAPI3",3,0)
 ;
"RTN","ORWGAPI3",4,0)
 ;
"RTN","ORWGAPI3",5,0)
ADVERSE(DATA,ITEM,START,DFN,CNT,TMP,BACKTO) ; from ORWGAPIR
"RTN","ORWGAPI3",6,0)
 N ADVERSE,DATE,DATE2,NODE,RESULT,RXN,VALUE
"RTN","ORWGAPI3",7,0)
 S DATE="",DATE2="",CNT=$G(CNT),BACKTO=+$G(BACKTO)
"RTN","ORWGAPI3",8,0)
 S ADVERSE=""
"RTN","ORWGAPI3",9,0)
 S VALUE=ITEM_U_ITEM
"RTN","ORWGAPI3",10,0)
 S NODE=""
"RTN","ORWGAPI3",11,0)
 F  S NODE=$O(^GMR(120.8,"B",DFN,NODE)) Q:NODE=""  D
"RTN","ORWGAPI3",12,0)
 . I '$D(^GMR(120.8,NODE,0)) Q
"RTN","ORWGAPI3",13,0)
 . I $G(^GMR(120.8,NODE,"ER")) Q  ; entered in error
"RTN","ORWGAPI3",14,0)
 . I '$P(^GMR(120.8,NODE,0),U,12) Q  ; signed
"RTN","ORWGAPI3",15,0)
 . S DATE=+$P($G(^GMR(120.8,NODE,0)),U,4) I 'DATE Q
"RTN","ORWGAPI3",16,0)
 . I DATE>START Q
"RTN","ORWGAPI3",17,0)
 . I DATE<BACKTO Q
"RTN","ORWGAPI3",18,0)
 . I ITEM'=$P(^GMR(120.8,NODE,0),U,2) Q
"RTN","ORWGAPI3",19,0)
 . S RXN=0
"RTN","ORWGAPI3",20,0)
 . F  S RXN=$O(^GMR(120.8,NODE,10,"B",RXN)) Q:RXN<1  D
"RTN","ORWGAPI3",21,0)
 .. S ADVERSE=ADVERSE_$$EVALUE^ORWGAPIU(RXN,120.8)_", "
"RTN","ORWGAPI3",22,0)
 . I $L(ADVERSE)>0 S ADVERSE=$E(ADVERSE,1,$L(ADVERSE)-2)
"RTN","ORWGAPI3",23,0)
 . S CNT=CNT+1
"RTN","ORWGAPI3",24,0)
 . S RESULT=120.8_U_ITEM_U_DATE_U_DATE2_U_ADVERSE
"RTN","ORWGAPI3",25,0)
 . D SETUP^ORWGAPIW(.DATA,RESULT,TMP,.CNT)
"RTN","ORWGAPI3",26,0)
 Q
"RTN","ORWGAPI3",27,0)
 ;
"RTN","ORWGAPI3",28,0)
DX(DATA,ITEM,START,DFN,CNT,TMP,BACKTO) ; from ORWGAPIR
"RTN","ORWGAPI3",29,0)
 N DATE,DATE2,NODE,NUM,RESULT,VALUE,VALUES K VALUE
"RTN","ORWGAPI3",30,0)
 K ^TMP("ORWGRPC TEMP",$J)
"RTN","ORWGAPI3",31,0)
 S DATE2="",CNT=$G(CNT),BACKTO=+$G(BACKTO)
"RTN","ORWGAPI3",32,0)
 S NUM=""
"RTN","ORWGAPI3",33,0)
 F  S NUM=$O(^PXRMINDX(45,"ICD9","PNI",DFN,NUM)) Q:NUM=""  D
"RTN","ORWGAPI3",34,0)
 . S DATE=""
"RTN","ORWGAPI3",35,0)
 . F  S DATE=$O(^PXRMINDX(45,"ICD9","PNI",DFN,NUM,ITEM,DATE)) Q:DATE=""  D
"RTN","ORWGAPI3",36,0)
 .. I DATE>START Q
"RTN","ORWGAPI3",37,0)
 .. I DATE<BACKTO Q
"RTN","ORWGAPI3",38,0)
 .. S NODE=""
"RTN","ORWGAPI3",39,0)
 .. F  S NODE=$O(^PXRMINDX(45,"ICD9","PNI",DFN,NUM,ITEM,DATE,NODE)) Q:NODE=""  D
"RTN","ORWGAPI3",40,0)
 ... I '$D(^TMP("ORWGRPC TEMP",$J,ITEM,DATE)) S ^TMP("ORWGRPC TEMP",$J,ITEM,DATE)=NODE_U_NUM
"RTN","ORWGAPI3",41,0)
 S ITEM=""
"RTN","ORWGAPI3",42,0)
 F  S ITEM=$O(^TMP("ORWGRPC TEMP",$J,ITEM)) Q:ITEM=""  D
"RTN","ORWGAPI3",43,0)
 . S DATE=""
"RTN","ORWGAPI3",44,0)
 . F  S DATE=$O(^TMP("ORWGRPC TEMP",$J,ITEM,DATE)) Q:DATE=""  D
"RTN","ORWGAPI3",45,0)
 .. S NODE=$G(^TMP("ORWGRPC TEMP",$J,ITEM,DATE)) I '$L(NODE) Q
"RTN","ORWGAPI3",46,0)
 .. S NUM=$P(NODE,U,2)
"RTN","ORWGAPI3",47,0)
 .. S NODE=$P(NODE,U)
"RTN","ORWGAPI3",48,0)
 .. I '$L($G(^DGPT(+NODE,0))) Q  ; ****** remove this when PTF patch is released **********
"RTN","ORWGAPI3",49,0)
 .. D PTF^ORWGAPIA(NODE,.VALUE,.VALUES) S VALUE=$$EXT^ORWGAPIX($G(VALUE("DISCHARGE STATUS")),45,6)
"RTN","ORWGAPI3",50,0)
 .. I NUM="DXLS" S VALUE="(DXLS)  "_VALUE_U_U_VALUES ;*****************************
"RTN","ORWGAPI3",51,0)
 .. S RESULT=45_"DX"_U_ITEM_U_DATE_U_DATE2_U_"  "_VALUE
"RTN","ORWGAPI3",52,0)
 .. D SETUP^ORWGAPIW(.DATA,RESULT,TMP,.CNT)
"RTN","ORWGAPI3",53,0)
 K ^TMP("ORWGRPC TEMP",$J)
"RTN","ORWGAPI3",54,0)
 Q
"RTN","ORWGAPI3",55,0)
 ;
"RTN","ORWGAPI3",56,0)
LAB(DATA,ITEM,START,DFN,CNT,TMP,BACKTO) ; from ORWGAPIR
"RTN","ORWGAPI3",57,0)
 N COMMENT,DATE,DATE2,NODE,RESULT,TYPE,VALUE K VALUE
"RTN","ORWGAPI3",58,0)
 S DATE="",DATE2="",CNT=$G(CNT),BACKTO=+$G(BACKTO)
"RTN","ORWGAPI3",59,0)
 D
"RTN","ORWGAPI3",60,0)
 . I $E(ITEM)="A" S TYPE="AP" Q
"RTN","ORWGAPI3",61,0)
 . I $E(ITEM)="M" S TYPE="MI" Q
"RTN","ORWGAPI3",62,0)
 . S TYPE="" Q
"RTN","ORWGAPI3",63,0)
 F  S DATE=$O(^PXRMINDX(63,"PI",DFN,ITEM,DATE)) Q:DATE=""  D
"RTN","ORWGAPI3",64,0)
 . I DATE>START Q
"RTN","ORWGAPI3",65,0)
 . I DATE<BACKTO Q
"RTN","ORWGAPI3",66,0)
 . S NODE=""
"RTN","ORWGAPI3",67,0)
 . F  S NODE=$O(^PXRMINDX(63,"PI",DFN,ITEM,DATE,NODE)) Q:NODE=""  D
"RTN","ORWGAPI3",68,0)
 .. K VALUE
"RTN","ORWGAPI3",69,0)
 .. D LAB^ORWGAPIC(.VALUE,NODE,ITEM)
"RTN","ORWGAPI3",70,0)
 .. I TYPE="AP" S RESULT="63AP^"_ITEM_U_DATE_U_DATE2 ;_U_$P(VALUE,U,2)
"RTN","ORWGAPI3",71,0)
 .. I TYPE="MI" S RESULT="63MI^"_ITEM_U_DATE_U_DATE2_U_$P(VALUE,U,4)
"RTN","ORWGAPI3",72,0)
 .. I TYPE="" D
"RTN","ORWGAPI3",73,0)
 ... S COMMENT=""
"RTN","ORWGAPI3",74,0)
 ... I $L($G(VALUE("COMMENTS",1))) S COMMENT=1
"RTN","ORWGAPI3",75,0)
 ... S RESULT="63^"_ITEM_U_DATE_U_DATE2_U_$P(VALUE,U,3)_U_$P(VALUE,U,4)_U_$G(VALUE("SPECIMEN"))_U_COMMENT
"RTN","ORWGAPI3",76,0)
 ... I $L($P(VALUE,U,7)) S $P(RESULT,U,10)=$P($P(VALUE,U,7),"!",2,3)_U_$P($P(VALUE,U,7),"!",7)
"RTN","ORWGAPI3",77,0)
 .. D SETUP^ORWGAPIW(.DATA,RESULT,TMP,.CNT)
"RTN","ORWGAPI3",78,0)
 Q
"RTN","ORWGAPI3",79,0)
 ;
"RTN","ORWGAPI3",80,0)
MED(DATA,ITEM,START,DFN,CNT,TMP,BACKTO) ; from ORWGAPIR
"RTN","ORWGAPI3",81,0)
 D MED3^ORWGAPIE(.DATA,ITEM,START,DFN,.CNT,.TMP)
"RTN","ORWGAPI3",82,0)
 Q
"RTN","ORWGAPI3",83,0)
 ;
"RTN","ORWGAPI3",84,0)
NOTE(DATA,ITEM,START,DFN,CNT,TMP,BACKTO) ; from ORWGAPIR
"RTN","ORWGAPI3",85,0)
 N DATE,DOC,DOCCLASS,DOCTYPE,DUM,IEN,RESULT,RESULTS,TITLE,VALUE K DUM
"RTN","ORWGAPI3",86,0)
 K ^TMP("ORWGRPC TEMP",$J),^TMP("TIUR",$J)
"RTN","ORWGAPI3",87,0)
 S CNT=$G(CNT),ITEM=$$UP^ORWGAPIX(ITEM),BACKTO=+$G(BACKTO)
"RTN","ORWGAPI3",88,0)
 F DOCTYPE="P","D","C" D
"RTN","ORWGAPI3",89,0)
 . S DOCCLASS=$$DOCCLASS^ORWGAPIA(DOCTYPE)
"RTN","ORWGAPI3",90,0)
 . K ^TMP("TIUR",$J)
"RTN","ORWGAPI3",91,0)
 . D TIU^ORWGAPIA(.DUM,DOCCLASS,5,DFN)
"RTN","ORWGAPI3",92,0)
 . S DOC=0
"RTN","ORWGAPI3",93,0)
 . F  S DOC=$O(^TMP("TIUR",$J,DOC)) Q:DOC<1  D
"RTN","ORWGAPI3",94,0)
 .. S RESULTS=^TMP("TIUR",$J,DOC)
"RTN","ORWGAPI3",95,0)
 .. S IEN=+$P(RESULTS,U)
"RTN","ORWGAPI3",96,0)
 .. S TITLE=$$UP^ORWGAPIX($P(RESULTS,U,2))
"RTN","ORWGAPI3",97,0)
 .. I TITLE'=ITEM Q
"RTN","ORWGAPI3",98,0)
 .. ; do not use admission date S DATE=$P($G(^AUPNVSIT(+$P($G(^TIU(8925,IEN,0)),U,3),0)),U)
"RTN","ORWGAPI3",99,0)
 .. S DATE=$P(RESULTS,U,3)
"RTN","ORWGAPI3",100,0)
 .. I DATE>START Q
"RTN","ORWGAPI3",101,0)
 .. I DATE<BACKTO Q
"RTN","ORWGAPI3",102,0)
 .. S VALUE=$P(RESULTS,U,7)
"RTN","ORWGAPI3",103,0)
 .. S CNT=CNT+1
"RTN","ORWGAPI3",104,0)
 .. S RESULT=8925_U_TITLE_U_DATE_"^^"_VALUE
"RTN","ORWGAPI3",105,0)
 .. I $D(^TMP("ORWGRPC TEMP",$J,RESULT)) Q
"RTN","ORWGAPI3",106,0)
 .. S ^TMP("ORWGRPC TEMP",$J,RESULT)=""
"RTN","ORWGAPI3",107,0)
 .. D SETUP^ORWGAPIW(.DATA,RESULT,TMP,.CNT)
"RTN","ORWGAPI3",108,0)
 K ^TMP("ORWGRPC TEMP",$J),^TMP("TIUR",$J)
"RTN","ORWGAPI3",109,0)
 Q
"RTN","ORWGAPI3",110,0)
 ;
"RTN","ORWGAPI3",111,0)
ORDER(DATA,ITEM,START,DFN,CNT,TMP,BACKTO) ; from ORWGAPIR
"RTN","ORWGAPI3",112,0)
 N DATE,DATE2,NODE,ORUPCHUK,RESULT,VALUE K ORUPCHUK
"RTN","ORWGAPI3",113,0)
 S DATE="",CNT=$G(CNT),BACKTO=+$G(BACKTO)
"RTN","ORWGAPI3",114,0)
 F  S DATE=$O(^PXRMINDX(100,"PI",DFN,ITEM,DATE)) Q:DATE=""  D
"RTN","ORWGAPI3",115,0)
 . I DATE>START Q
"RTN","ORWGAPI3",116,0)
 . I DATE<BACKTO Q
"RTN","ORWGAPI3",117,0)
 . S DATE2=""
"RTN","ORWGAPI3",118,0)
 . F  S DATE2=$O(^PXRMINDX(100,"PI",DFN,ITEM,DATE,DATE2)) Q:DATE2=""  D
"RTN","ORWGAPI3",119,0)
 .. S NODE=""
"RTN","ORWGAPI3",120,0)
 .. F  S NODE=$O(^PXRMINDX(100,"PI",DFN,ITEM,DATE,DATE2,NODE)) Q:NODE=""  D
"RTN","ORWGAPI3",121,0)
 ... D EN^ORX8($P(NODE,";")) S VALUE=$P($G(ORUPCHUK("ORSTS")),U,2)
"RTN","ORWGAPI3",122,0)
 ... S RESULT=100_U_ITEM_U_DATE_"^^"_VALUE
"RTN","ORWGAPI3",123,0)
 ... D SETUP^ORWGAPIW(.DATA,RESULT,TMP,.CNT)
"RTN","ORWGAPI3",124,0)
 Q
"RTN","ORWGAPI3",125,0)
 ;
"RTN","ORWGAPI3",126,0)
RAD(DATA,ITEM,START,DFN,CNT,TMP,BACKTO) ; from ORWGAPIR
"RTN","ORWGAPI3",127,0)
 N DATE,DATE2,NODE,RESULT,VALUE,VALUES K VALUE
"RTN","ORWGAPI3",128,0)
 S DATE="",DATE2="",CNT=$G(CNT),BACKTO=+$G(BACKTO)
"RTN","ORWGAPI3",129,0)
 F  S DATE=$O(^PXRMINDX(70,"PI",DFN,ITEM,DATE)) Q:DATE=""  D
"RTN","ORWGAPI3",130,0)
 . I DATE>START Q
"RTN","ORWGAPI3",131,0)
 . I DATE<BACKTO Q
"RTN","ORWGAPI3",132,0)
 . S NODE=""
"RTN","ORWGAPI3",133,0)
 . F  S NODE=$O(^PXRMINDX(70,"PI",DFN,ITEM,DATE,NODE)) Q:NODE=""  D
"RTN","ORWGAPI3",134,0)
 .. D RAD^ORWGAPIA(NODE,.VALUE,.VALUES) S VALUE=$G(VALUE("PDX"))_"-"_$G(VALUE("EXAM STATUS"))_U_U_VALUES
"RTN","ORWGAPI3",135,0)
 .. S RESULT=70_U_ITEM_U_DATE_U_DATE2_U_VALUE
"RTN","ORWGAPI3",136,0)
 .. D SETUP^ORWGAPIW(.DATA,RESULT,TMP,.CNT)
"RTN","ORWGAPI3",137,0)
 Q
"RTN","ORWGAPI3",138,0)
 ;
"RTN","ORWGAPIR")
0^41^B41610059
"RTN","ORWGAPIR",1,0)
ORWGAPIR ; SLC/STAFF - Graph API Router ;7/31/09  13:06
"RTN","ORWGAPIR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**215,260,243,280**;Dec 17, 1997;Build 85
"RTN","ORWGAPIR",3,0)
 ;
"RTN","ORWGAPIR",4,0)
DATA(DATA,ITEM,FILE,START,DFN,CNT,TMP,BACKTO) ; from ORWGAPI
"RTN","ORWGAPIR",5,0)
 S DFN=+$G(DFN) I 'DFN Q
"RTN","ORWGAPIR",6,0)
 S FILE=$G(FILE) I '$L(FILE) Q
"RTN","ORWGAPIR",7,0)
 S ITEM=$G(ITEM) I '$L(ITEM) Q
"RTN","ORWGAPIR",8,0)
 S BACKTO=+$G(BACKTO)
"RTN","ORWGAPIR",9,0)
 I FILE=52 D OUTRX^ORWGAPI7(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",10,0)
 I FILE=53.79 D BCMA^ORWGAPI7(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",11,0)
 I FILE=55 D INRX^ORWGAPI7(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",12,0)
 I FILE="55NVA" D NVA^ORWGAPI7(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",13,0)
 I FILE=63 D LAB^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",14,0)
 I FILE="63AP" D LAB^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",15,0)
 I FILE="63BB" D BBDATA^ORWGAPIB(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",16,0)
 I FILE="63MI" D LAB^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",17,0)
 I FILE=70 D RAD^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",18,0)
 I FILE=100 D ORDER^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",19,0)
 I FILE=120.5 D VITAL^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",20,0)
 I FILE=120.8 D ADVERSE^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",21,0)
 I FILE=601.2 D MH^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",22,0)
 I FILE=9000010.07 D POV^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",23,0)
 I FILE=9000010.11 D IMM^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",24,0)
 I FILE=9000010.12 D SKIN^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",25,0)
 I FILE=9000010.13 D EXAM^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",26,0)
 I FILE=9000010.16 D EDU^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",27,0)
 I FILE=9000010.18 D PROC^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",28,0)
 I FILE=9000010.23 D HF^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",29,0)
 I FILE=9000011 D PROB^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",30,0)
 I FILE=9999911 D PROBX^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",31,0)
 I FILE="45OP" D OP^ORWGAPI4(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",32,0)
 I FILE="45DX" D DX^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",33,0)
 I FILE=9000010 D VISIT^ORWGAPI8(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",34,0)
 I FILE=405 D ADMIT^ORWGAPI8(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",35,0)
 I FILE=130 D SURG^ORWGAPI8(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",36,0)
 I FILE=8925 D NOTE^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",37,0)
 I FILE=690 D MED^ORWGAPI3(.DATA,ITEM,START,DFN,.CNT,TMP,BACKTO) Q
"RTN","ORWGAPIR",38,0)
 Q
"RTN","ORWGAPIR",39,0)
 ;
"RTN","ORWGAPIR",40,0)
ITEMS(ITEMS,DFN,TYPE,FMT,OLDEST,NEWEST,CNT,TMP) ; from ORWGAPI
"RTN","ORWGAPIR",41,0)
 S FMT=$G(FMT,3),OLDEST=+$G(OLDEST),NEWEST=+$G(NEWEST),CNT=+$G(CNT)
"RTN","ORWGAPIR",42,0)
 I (TYPE=70)!(TYPE=100)!(TYPE=120.5)!(TYPE=601.2) D STD(.ITEMS,DFN,TYPE,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",43,0)
 I (TYPE=9000010.11)!(TYPE=9000010.12)!(TYPE=9000010.13) D STD(.ITEMS,DFN,TYPE,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",44,0)
 I (TYPE=9000010.16)!(TYPE=9000010.23) D STD(.ITEMS,DFN,TYPE,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",45,0)
 I (TYPE=9000010.07)!(TYPE=9000010.18) D STD1(.ITEMS,DFN,TYPE,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",46,0)
 I (TYPE=52)!(TYPE=55) D STD2(.ITEMS,DFN,TYPE,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",47,0)
 I TYPE=63 D LAB^ORWGAPI1(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",48,0)
 I TYPE=9000010 D VISITS^ORWGAPI6(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",49,0)
 I TYPE=9000011 D PL^ORWGAPI2(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",50,0)
 I TYPE=9999911 D PLX^ORWGAPI2(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",51,0)
 I TYPE=405 D ADMITS^ORWGAPI6(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",52,0)
 I TYPE=50.605 D DC^ORWGAPI5(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",53,0)
 I TYPE=68 D AA^ORWGAPI1(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",54,0)
 I TYPE=8925.1 D TITLE^ORWGAPI1(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",55,0)
 I TYPE=53.79 D BCMA^ORWGAPI5(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",56,0)
 I TYPE=120.8 D ADVERSE^ORWGAPI2(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",57,0)
 I TYPE=130 D SURGERY^ORWGAPI6(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",58,0)
 I TYPE=8925 D NOTES^ORWGAPI1(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",59,0)
 I TYPE=690 D MED^ORWGAPI1(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",60,0)
 S TYPE=$$UP^ORWGAPIX(TYPE)
"RTN","ORWGAPIR",61,0)
 I $E(TYPE,1,2)=45 D REG^ORWGAPI2(.ITEMS,DFN,TYPE,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",62,0)
 I TYPE="55NVA" D NVA^ORWGAPI5(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",63,0)
 I TYPE="63AP" D AP^ORWGAPI1(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",64,0)
 I TYPE="63BB" D BBITEM^ORWGAPIB(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",65,0)
 I TYPE="63MI" D MI^ORWGAPI1(.ITEMS,DFN,FMT,OLDEST,NEWEST,.CNT,TMP) Q
"RTN","ORWGAPIR",66,0)
 Q
"RTN","ORWGAPIR",67,0)
 ;
"RTN","ORWGAPIR",68,0)
STD(ITEMS,DFN,FILE,FMT,OLDEST,NEWEST,CNT,TMP) ;
"RTN","ORWGAPIR",69,0)
 N DATE,ITEM,OK,RESULT
"RTN","ORWGAPIR",70,0)
 S ITEM=""
"RTN","ORWGAPIR",71,0)
 F  S ITEM=$O(^PXRMINDX(FILE,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","ORWGAPIR",72,0)
 . S OK=0
"RTN","ORWGAPIR",73,0)
 . I FMT=6 D
"RTN","ORWGAPIR",74,0)
 .. S DATE=OLDEST
"RTN","ORWGAPIR",75,0)
 .. F  S DATE=$O(^PXRMINDX(FILE,"PI",DFN,ITEM,DATE)) Q:DATE=""  Q:DATE>NEWEST  D  Q:OK
"RTN","ORWGAPIR",76,0)
 ... S CNT=CNT+1
"RTN","ORWGAPIR",77,0)
 ... S OK=1
"RTN","ORWGAPIR",78,0)
 ... S RESULT=FILE_U_ITEM
"RTN","ORWGAPIR",79,0)
 . I FMT=3 D
"RTN","ORWGAPIR",80,0)
 .. S DATE=$O(^PXRMINDX(FILE,"PI",DFN,ITEM,""),-1)
"RTN","ORWGAPIR",81,0)
 .. I 'DATE Q
"RTN","ORWGAPIR",82,0)
 .. S CNT=CNT+1
"RTN","ORWGAPIR",83,0)
 .. S OK=1
"RTN","ORWGAPIR",84,0)
 .. S RESULT=FILE_U_ITEM_"^^"_$$EVALUE^ORWGAPIU(ITEM,FILE,.01)_"^^"_DATE
"RTN","ORWGAPIR",85,0)
 .. I FILE=100 S RESULT=RESULT_U_$$OGROUP^ORWGAPIW(ITEM)
"RTN","ORWGAPIR",86,0)
 . I FMT=0 D
"RTN","ORWGAPIR",87,0)
 .. S CNT=CNT+1
"RTN","ORWGAPIR",88,0)
 .. S OK=1
"RTN","ORWGAPIR",89,0)
 .. S RESULT=FILE_U_ITEM_U_$$EVALUE^ORWGAPIU(ITEM,FILE,.01)
"RTN","ORWGAPIR",90,0)
 . I OK D SETUP^ORWGAPIW(.ITEMS,RESULT,TMP,.CNT)
"RTN","ORWGAPIR",91,0)
 I FILE=120.5 D BMIITEMS^ORWGAPIX(.ITEMS,.CNT,TMP) Q
"RTN","ORWGAPIR",92,0)
 Q
"RTN","ORWGAPIR",93,0)
 ;
"RTN","ORWGAPIR",94,0)
STD1(ITEMS,DFN,FILE,FMT,OLDEST,NEWEST,CNT,TMP) ;
"RTN","ORWGAPIR",95,0)
 N DATE,ITEM,OK,RESULT,TYPE
"RTN","ORWGAPIR",96,0)
 K ^TMP("ORWGRPC TEMP",$J)
"RTN","ORWGAPIR",97,0)
 S TYPE=""
"RTN","ORWGAPIR",98,0)
 F  S TYPE=$O(^PXRMINDX(FILE,"PPI",DFN,TYPE)) Q:TYPE=""  D
"RTN","ORWGAPIR",99,0)
 . S ITEM=""
"RTN","ORWGAPIR",100,0)
 . F  S ITEM=$O(^PXRMINDX(FILE,"PPI",DFN,TYPE,ITEM)) Q:ITEM=""  D
"RTN","ORWGAPIR",101,0)
 .. S OK=0
"RTN","ORWGAPIR",102,0)
 .. I FMT=6 D
"RTN","ORWGAPIR",103,0)
 ... S DATE=OLDEST
"RTN","ORWGAPIR",104,0)
 ... F  S DATE=$O(^PXRMINDX(FILE,"PPI",DFN,TYPE,ITEM,DATE)) Q:DATE=""  Q:DATE>NEWEST  D  Q:OK
"RTN","ORWGAPIR",105,0)
 .... S CNT=CNT+1
"RTN","ORWGAPIR",106,0)
 .... S OK=1
"RTN","ORWGAPIR",107,0)
 .... S RESULT=FILE_U_ITEM
"RTN","ORWGAPIR",108,0)
 .. I FMT=3 D
"RTN","ORWGAPIR",109,0)
 ... S DATE=$O(^PXRMINDX(FILE,"PPI",DFN,TYPE,ITEM,""),-1)
"RTN","ORWGAPIR",110,0)
 ... I DATE S ^TMP("ORWGRPC TEMP",$J,ITEM,DATE)=""
"RTN","ORWGAPIR",111,0)
 .. I FMT=0 D
"RTN","ORWGAPIR",112,0)
 ... S CNT=CNT+1
"RTN","ORWGAPIR",113,0)
 ... S OK=1
"RTN","ORWGAPIR",114,0)
 ... S RESULT=FILE_U_ITEM_U_$$EVALUE^ORWGAPIU(ITEM,FILE,.01)
"RTN","ORWGAPIR",115,0)
 .. I OK D SETUP^ORWGAPIW(.ITEMS,RESULT,TMP,.CNT)
"RTN","ORWGAPIR",116,0)
 I FMT=3 D
"RTN","ORWGAPIR",117,0)
 . S ITEM=""
"RTN","ORWGAPIR",118,0)
 . F  S ITEM=$O(^TMP("ORWGRPC TEMP",$J,ITEM)) Q:ITEM=""  D
"RTN","ORWGAPIR",119,0)
 .. S DATE=$O(^TMP("ORWGRPC TEMP",$J,ITEM,""),-1)
"RTN","ORWGAPIR",120,0)
 .. I 'DATE Q
"RTN","ORWGAPIR",121,0)
 .. S CNT=CNT+1
"RTN","ORWGAPIR",122,0)
 .. S RESULT=FILE_U_ITEM_"^^"_$$EVALUE^ORWGAPIU(ITEM,FILE,.01)_"^^"_DATE
"RTN","ORWGAPIR",123,0)
 .. D SETUP^ORWGAPIW(.ITEMS,RESULT,TMP,.CNT)
"RTN","ORWGAPIR",124,0)
 K ^TMP("ORWGRPC TEMP",$J)
"RTN","ORWGAPIR",125,0)
 Q
"RTN","ORWGAPIR",126,0)
 ;
"RTN","ORWGAPIR",127,0)
STD2(ITEMS,DFN,FILE,FMT,OLDEST,NEWEST,CNT,TMP) ;
"RTN","ORWGAPIR",128,0)
 N DATE,DATE2,ITEM,OK,RESULT
"RTN","ORWGAPIR",129,0)
 S ITEM=""
"RTN","ORWGAPIR",130,0)
 F  S ITEM=$O(^PXRMINDX(FILE,"PI",DFN,ITEM)) Q:ITEM=""  D
"RTN","ORWGAPIR",131,0)
 . S OK=0
"RTN","ORWGAPIR",132,0)
 . I FMT=6 D
"RTN","ORWGAPIR",133,0)
 .. S DATE=0
"RTN","ORWGAPIR",134,0)
 .. F  S DATE=$O(^PXRMINDX(FILE,"PI",DFN,ITEM,DATE)) Q:DATE=""  Q:DATE>NEWEST  D  Q:OK
"RTN","ORWGAPIR",135,0)
 ... S DATE2=""
"RTN","ORWGAPIR",136,0)
 ... F  S DATE2=$O(^PXRMINDX(FILE,"PI",DFN,ITEM,DATE,DATE2)) Q:DATE2=""  D
"RTN","ORWGAPIR",137,0)
 .... I DATE2<OLDEST Q
"RTN","ORWGAPIR",138,0)
 .... S CNT=CNT+1
"RTN","ORWGAPIR",139,0)
 .... S OK=1
"RTN","ORWGAPIR",140,0)
 .... S RESULT=FILE_U_ITEM
"RTN","ORWGAPIR",141,0)
 . I FMT=3 D
"RTN","ORWGAPIR",142,0)
 .. S DATE=$O(^PXRMINDX(FILE,"PI",DFN,ITEM,""),-1)
"RTN","ORWGAPIR",143,0)
 .. I 'DATE Q
"RTN","ORWGAPIR",144,0)
 .. S CNT=CNT+1
"RTN","ORWGAPIR",145,0)
 .. S OK=1
"RTN","ORWGAPIR",146,0)
 .. S RESULT=FILE_U_ITEM_"^^"_$$EVALUE^ORWGAPIU(ITEM,FILE,.01)_"^^"_DATE
"RTN","ORWGAPIR",147,0)
 .. S RESULT=RESULT_U_$$DRGCLASS^ORWGAPIC(ITEM)
"RTN","ORWGAPIR",148,0)
 . I FMT=0 D
"RTN","ORWGAPIR",149,0)
 .. S CNT=CNT+1
"RTN","ORWGAPIR",150,0)
 .. S OK=1
"RTN","ORWGAPIR",151,0)
 .. S RESULT=FILE_U_ITEM_U_$$EVALUE^ORWGAPIU(ITEM,FILE,.01)
"RTN","ORWGAPIR",152,0)
 .. S RESULT=RESULT_U_$$DRGCLASS^ORWGAPIC(ITEM)
"RTN","ORWGAPIR",153,0)
 . I OK D SETUP^ORWGAPIW(.ITEMS,RESULT,TMP,.CNT)
"RTN","ORWGAPIR",154,0)
 Q
"RTN","ORWGAPIR",155,0)
 ;
"RTN","ORWGAPIU")
0^38^B23850893
"RTN","ORWGAPIU",1,0)
ORWGAPIU ; SLC/STAFF - Graph API Utilities ;07/28/09  11:34
"RTN","ORWGAPIU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**215,260,243,280**;Dec 17, 1997;Build 85
"RTN","ORWGAPIU",3,0)
 ;
"RTN","ORWGAPIU",4,0)
EVALUE(VAL,FILE,FIELD) ; $$(internal value,file,field) -> external value or ""
"RTN","ORWGAPIU",5,0)
 ; from ORWGAPI1, ORWGAPI2, ORWGAPI3, ORWGAPI4, ORWGAPIP, ORWGAPIR
"RTN","ORWGAPIU",6,0)
 I VAL="" Q ""
"RTN","ORWGAPIU",7,0)
 S FIELD=$G(FIELD,.01)
"RTN","ORWGAPIU",8,0)
 I $E(FILE,1,2)=63 Q $$LABNAME^ORWGAPIC(VAL)
"RTN","ORWGAPIU",9,0)
 I FILE="63AP;I" Q $$ICD9^ORWGAPIA(VAL)
"RTN","ORWGAPIU",10,0)
 I FILE="45DX" Q $$ICD9^ORWGAPIA(VAL)
"RTN","ORWGAPIU",11,0)
 I FILE="45OP" Q $$ICD0^ORWGAPIA(VAL)
"RTN","ORWGAPIU",12,0)
 I FILE="45;ICD9" Q $$ICD9^ORWGAPIA(VAL)
"RTN","ORWGAPIU",13,0)
 I FILE="45;ICD0" Q $$ICD0^ORWGAPIA(VAL)
"RTN","ORWGAPIU",14,0)
 I FIELD=.01,'$L(VAL) Q ""
"RTN","ORWGAPIU",15,0)
 I FILE=9000010.07 Q $$ICD9^ORWGAPIA(VAL)
"RTN","ORWGAPIU",16,0)
 I FILE=9000010.18 Q $$ICPT^ORWGAPIA(VAL)
"RTN","ORWGAPIU",17,0)
 I FILE=9000011 Q $$ICD9^ORWGAPIA(VAL)
"RTN","ORWGAPIU",18,0)
 I FILE=9999911 Q $$ICD9^ORWGAPIA(VAL)
"RTN","ORWGAPIU",19,0)
 I FILE=130 Q $$ICPT^ORWGAPIA(VAL)
"RTN","ORWGAPIU",20,0)
 I FILE=120.8 Q $$ALLG^ORWGAPIA(VAL)
"RTN","ORWGAPIU",21,0)
 I FILE=50.605 Q $$DC^ORWGAPIC(VAL)
"RTN","ORWGAPIU",22,0)
 I FILE=68 Q $$AA^ORWGAPIC(VAL)
"RTN","ORWGAPIU",23,0)
 I FILE=811.2 Q $$TAX^ORWGAPIA(VAL)
"RTN","ORWGAPIU",24,0)
 D
"RTN","ORWGAPIU",25,0)
 . I FILE=52 S FIELD=6 Q
"RTN","ORWGAPIU",26,0)
 . I FILE=53.79 S FIELD=.08 Q
"RTN","ORWGAPIU",27,0)
 . I FILE=55 S FILE=55.07 Q
"RTN","ORWGAPIU",28,0)
 . I FILE="55NVA" S FILE=55.05 Q
"RTN","ORWGAPIU",29,0)
 . I FILE=70 S FILE=70.03,FIELD=2 Q
"RTN","ORWGAPIU",30,0)
 . I FILE=100 S FILE=100.001 Q
"RTN","ORWGAPIU",31,0)
 . I FILE=120.5 S FIELD=.03 Q
"RTN","ORWGAPIU",32,0)
 . I FILE=601.2 S FILE=601.21 Q
"RTN","ORWGAPIU",33,0)
 . I FILE=690 S FILE=690.24 Q
"RTN","ORWGAPIU",34,0)
 Q $$EXT^ORWGAPIX(VAL,FILE,FIELD)
"RTN","ORWGAPIU",35,0)
 ;
"RTN","ORWGAPIU",36,0)
FILE(FILE,REF,XREF,SCREEN) ; from ORWGAPI
"RTN","ORWGAPIU",37,0)
 S REF="",SCREEN="I 1",XREF="B"
"RTN","ORWGAPIU",38,0)
 I FILE="" Q
"RTN","ORWGAPIU",39,0)
 D
"RTN","ORWGAPIU",40,0)
 . I FILE="45DX" S REF=$$GBLREF(80),XREF="AB" Q
"RTN","ORWGAPIU",41,0)
 . I FILE="45OP" S REF=$$GBLREF(80.1),XREF="AB" Q
"RTN","ORWGAPIU",42,0)
 . I FILE=50.605 S REF=$$GBLREF(50.605),XREF="C" Q
"RTN","ORWGAPIU",43,0)
 . I FILE=52 S REF=$$GBLREF(50) Q
"RTN","ORWGAPIU",44,0)
 . I FILE=53.79 S REF=$$GBLREF(50.7),SCREEN="I $P(ZERO,U,10)'=1" Q
"RTN","ORWGAPIU",45,0)
 . I FILE=55 S REF=$$GBLREF(50) Q
"RTN","ORWGAPIU",46,0)
 . I FILE="55NVA" S REF=$$GBLREF(50.7),SCREEN="I $P(ZERO,U,10)=1" Q
"RTN","ORWGAPIU",47,0)
 . I FILE=63 S REF=$$GBLREF(60),SCREEN="I $L($P(ZERO,U,5)),""BO""[$P(ZERO,U,3),$P(ZERO,U,4)=""CH""" Q
"RTN","ORWGAPIU",48,0)
 . I FILE="63AP" S REF=$$GBLREF(60),SCREEN="I 0" Q
"RTN","ORWGAPIU",49,0)
 . I FILE="63AP;D" S REF=$$GBLREF(61.4) Q
"RTN","ORWGAPIU",50,0)
 . I FILE="63AP;E" S REF=$$GBLREF(61.2) Q
"RTN","ORWGAPIU",51,0)
 . I FILE="63AP;F" S REF=$$GBLREF(61.3) Q
"RTN","ORWGAPIU",52,0)
 . I FILE="63AP;I" S REF=$$GBLREF(80),XREF="AB" Q
"RTN","ORWGAPIU",53,0)
 . I FILE="63AP;M" S REF=$$GBLREF(61.1) Q
"RTN","ORWGAPIU",54,0)
 . I FILE="63AP;O" S REF=$$GBLREF(61) Q
"RTN","ORWGAPIU",55,0)
 . I FILE="63AP;P" S REF=$$GBLREF(61.5) Q
"RTN","ORWGAPIU",56,0)
 . I FILE="63AP;T" S REF=$$GBLREF(60),SCREEN="I ""BO""[$P(ZERO,U,3),(($P(ZERO,U,4)=""CY"")!($P(ZERO,U,4)=""SP"")!($P(ZERO,U,4)=""EM"")!($P(ZERO,U,4)=""AU""))" Q
"RTN","ORWGAPIU",57,0)
 . I FILE="63BB" S REF=$$GBLREF(66),SCREEN="I $P(ZERO,U,15)=1" Q
"RTN","ORWGAPIU",58,0)
 . I FILE="63MI" S REF=$$GBLREF(60),SCREEN="I 0" Q
"RTN","ORWGAPIU",59,0)
 . I FILE="63MI;A" S REF=$$GBLREF(62.06) Q
"RTN","ORWGAPIU",60,0)
 . I FILE="63MI;M" S REF=$$GBLREF(60) Q  ; mycobacteria not currently used
"RTN","ORWGAPIU",61,0)
 . I FILE="63MI;O" S REF=$$GBLREF(61.2),SCREEN="I $L($P(ZERO,U,5)),""BFPMV""[$P(ZERO,U,5)" Q
"RTN","ORWGAPIU",62,0)
 . I FILE="63MI;S" S REF=$$GBLREF(61) Q
"RTN","ORWGAPIU",63,0)
 . I FILE="63MI;T" S REF=$$GBLREF(60),SCREEN="I ""BO""[$P(ZERO,U,3),$P(ZERO,U,4)=""MI""" Q
"RTN","ORWGAPIU",64,0)
 . I FILE=70 S REF=$$GBLREF(71) Q
"RTN","ORWGAPIU",65,0)
 . I FILE=100 S REF=$$GBLREF(101.43) Q
"RTN","ORWGAPIU",66,0)
 . I FILE=120.5 S REF=$$GBLREF(120.51),SCREEN="I ""BP^P^T^R^P^HT^WT^CVP^CG^PO2^PN""[$P(ZERO,U,2)" Q
"RTN","ORWGAPIU",67,0)
 . ;I FILE=120.8 S REF=$$GBLREF(120.83) Q
"RTN","ORWGAPIU",68,0)
 . I FILE=130 S REF=$$GBLREF(81),SCREEN="I '$P(ZERO,U,4)" Q
"RTN","ORWGAPIU",69,0)
 . I FILE=405 S REF=$$GBLREF(44),SCREEN="I 0" Q
"RTN","ORWGAPIU",70,0)
 . I FILE=601.2 S REF=$$GBLREF(601) Q
"RTN","ORWGAPIU",71,0)
 . I FILE=690 S REF=$$GBLREF(697.2),XREF="BA" Q
"RTN","ORWGAPIU",72,0)
 . I FILE=811.2 S REF=$$GBLREF(811.2),SCREEN="I $P(ZERO,U,6)'=1" Q
"RTN","ORWGAPIU",73,0)
 . I FILE=8925 S REF=$$GBLREF(8925.1),SCREEN="I $P(ZERO,U,4)=""DOC""" Q
"RTN","ORWGAPIU",74,0)
 . I FILE=9000010 S REF=$$GBLREF(44) Q
"RTN","ORWGAPIU",75,0)
 . I FILE=9000010.07 S REF=$$GBLREF(80),XREF="AB" Q
"RTN","ORWGAPIU",76,0)
 . I FILE=9000010.11 S REF=$$GBLREF(9999999.14),SCREEN="I $P(ZERO,U,7)'=1" Q
"RTN","ORWGAPIU",77,0)
 . I FILE=9000010.12 S REF=$$GBLREF(9999999.28),SCREEN="I $P(ZERO,U,3)'=1" Q
"RTN","ORWGAPIU",78,0)
 . I FILE=9000010.13 S REF=$$GBLREF(9999999.15),SCREEN="I $P(ZERO,U,4)'=1" Q
"RTN","ORWGAPIU",79,0)
 . I FILE=9000010.16 S REF=$$GBLREF(9999999.09),SCREEN="I $P(ZERO,U,3)'=1" Q
"RTN","ORWGAPIU",80,0)
 . I FILE=9000010.18 S REF=$$GBLREF(81),SCREEN="I '$P(ZERO,U,4)" Q
"RTN","ORWGAPIU",81,0)
 . I FILE=9000010.23 S REF=$$GBLREF(9999999.64),SCREEN="I $P(ZERO,U,10)=""F"",$P(ZERO,U,11)'=1" Q
"RTN","ORWGAPIU",82,0)
 . I FILE=9000011 S REF=$$GBLREF(80),XREF="AB",SCREEN="I $E(ZERO)'=""E"",'$L($P(ZERO,U,9))" Q
"RTN","ORWGAPIU",83,0)
 . I FILE=9999911 S REF=$$GBLREF(80),XREF="AB",SCREEN="I $E(ZERO)'=""E"",'$L($P(ZERO,U,9))" Q
"RTN","ORWGAPIU",84,0)
 I $E(REF)'="^" S REF=""
"RTN","ORWGAPIU",85,0)
 S REF=REF  ;_""""_XREF_""")"
"RTN","ORWGAPIU",86,0)
 Q
"RTN","ORWGAPIU",87,0)
 ;
"RTN","ORWGAPIU",88,0)
GBLREF(FN) ; $$(file#) -> global reference
"RTN","ORWGAPIU",89,0)
 Q $$GBLREF^ORWGAPIX($G(FN))
"RTN","ORWGAPIU",90,0)
 ;
"RTN","ORWGAPIU",91,0)
INISET ; postinit, set initial public graph setting  - from ORY215, ORY243
"RTN","ORWGAPIU",92,0)
 D INISET^ORWGAPIP
"RTN","ORWGAPIU",93,0)
 Q
"RTN","ORWGAPIU",94,0)
 ;
"RTN","ORWGAPIU",95,0)
ITEMPRFX(ITEM) ; $$(item) -> item prefix   - from ORWGAPI1
"RTN","ORWGAPIU",96,0)
 N ABBREV,PREFIX
"RTN","ORWGAPIU",97,0)
 S PREFIX=""
"RTN","ORWGAPIU",98,0)
 S ABBREV=$P(ITEM,";",2)
"RTN","ORWGAPIU",99,0)
 I $E(ITEM)="A" D  Q PREFIX
"RTN","ORWGAPIU",100,0)
 . I ABBREV="T" S PREFIX="TEST" Q
"RTN","ORWGAPIU",101,0)
 . I ABBREV="S" S PREFIX="SPECIMEN" Q
"RTN","ORWGAPIU",102,0)
 . I ABBREV="O" S PREFIX="ORGAN" Q
"RTN","ORWGAPIU",103,0)
 . I ABBREV="M" S PREFIX="MORPHOLOGY" Q
"RTN","ORWGAPIU",104,0)
 . I ABBREV="E" S PREFIX="ETIOLOGY" Q
"RTN","ORWGAPIU",105,0)
 . I ABBREV="D" S PREFIX="DISEASE" Q
"RTN","ORWGAPIU",106,0)
 . I ABBREV="P" S PREFIX="PROCEDURE" Q
"RTN","ORWGAPIU",107,0)
 . I ABBREV="F" S PREFIX="FUNCTION" Q
"RTN","ORWGAPIU",108,0)
 . I ABBREV="I" S PREFIX="ICD9" Q
"RTN","ORWGAPIU",109,0)
 I $E(ITEM)="B" Q "BLOOD COMPONENT"
"RTN","ORWGAPIU",110,0)
 I $E(ITEM)="M" D  Q PREFIX
"RTN","ORWGAPIU",111,0)
 . I ABBREV="T" S PREFIX="TEST" Q
"RTN","ORWGAPIU",112,0)
 . I ABBREV="S" S PREFIX="SPECIMEN" Q
"RTN","ORWGAPIU",113,0)
 . I ABBREV="O" S PREFIX="ORGANISM" Q
"RTN","ORWGAPIU",114,0)
 . I ABBREV="A" S PREFIX="ANTIBIOTIC" Q
"RTN","ORWGAPIU",115,0)
 . I ABBREV="M" S PREFIX="TB ANTIBIOTIC" Q
"RTN","ORWGAPIU",116,0)
 Q PREFIX
"RTN","ORWGAPIU",117,0)
 ;
"RTN","ORWIB")
0^32^B5804851
"RTN","ORWIB",1,0)
ORWIB ; SLC/KCM - wrap calls to AISC ;04/16/09  05:57 [6/4/09 12:16pm]
"RTN","ORWIB",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17, 1997;Build 85
"RTN","ORWIB",3,0)
VISIT(LST,CLINIC) ; get list of visit types for clinic
"RTN","ORWIB",4,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT VISIT TYPE CPT PROCEDURES","LST")
"RTN","ORWIB",5,0)
 Q
"RTN","ORWIB",6,0)
PROC(LST,CLINIC) ; get list of procedures for clinic
"RTN","ORWIB",7,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT CPT PROCEDURE CODES","LST")
"RTN","ORWIB",8,0)
 Q
"RTN","ORWIB",9,0)
DIAG(LST,CLINIC) ; get list of diagnoses for clinic
"RTN","ORWIB",10,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT ICD-9 DIAGNOSIS CODES","LST")
"RTN","ORWIB",11,0)
 Q
"RTN","ORWIB",12,0)
EFVPD(LST,CLINIC) ; get list of encounter form elements
"RTN","ORWIB",13,0)
 N PFN
"RTN","ORWIB",14,0)
 S PFN(1)="DG SELECT VISIT TYPE CPT PROCEDURES"
"RTN","ORWIB",15,0)
 S PFN(2)="DG SELECT CPT PROCEDURE CODES"
"RTN","ORWIB",16,0)
 S PFN(3)="DG SELECT ICD-9 DIAGNOSIS CODES"
"RTN","ORWIB",17,0)
 D GLL^IBDF18A(CLINIC,.PFN,"LST")
"RTN","ORWIB",18,0)
 Q
"RTN","ORWIB",19,0)
SAVEPCE(OK,ORPXAPI) ; save encounter information
"RTN","ORWIB",20,0)
 N PKG,SRC,CODE,IEN,I
"RTN","ORWIB",21,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWIB",22,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWIB",23,0)
 S I=0 F  S I=$O(ORPXAPI("DX/PL",I)) Q:'I  D      ; ICD codes to ptrs
"RTN","ORWIB",24,0)
 . S CODE=ORPXAPI("DX/PL",I,"DIAGNOSIS"),IEN=$$CODEN^ICDCODE(CODE,80) ;ICR #3990
"RTN","ORWIB",25,0)
 . I IEN'>0 S IEN=$$CODEN^ICDCODE(CODE,80) ;ICR #3990
"RTN","ORWIB",26,0)
 . S ORPXAPI("DX/PL",I,"DIAGNOSIS")=IEN
"RTN","ORWIB",27,0)
 S I=0 F  S I=$O(ORPXAPI("PROCEDURE",I)) Q:'I  D  ; CPT codes to ptrs
"RTN","ORWIB",28,0)
 . S CODE=ORPXAPI("PROCEDURE",I,"PROCEDURE"),IEN=$$CODEN^ICPTCOD(CODE) ;ICR #1995
"RTN","ORWIB",29,0)
 . S ORPXAPI("PROCEDURE",I,"PROCEDURE")=IEN
"RTN","ORWIB",30,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC)
"RTN","ORWIB",31,0)
 Q
"RTN","ORWIB",32,0)
SCSEL(VAL,DFN,ATM,LOC,VST) ; return SC conditions that may be selected
"RTN","ORWIB",33,0)
 ; VAL=SCallow^SCdflt;AOallow^AOdflt;IRallow^IRdflt;ECallow^ECdflt
"RTN","ORWIB",34,0)
 N X,S S S=";"
"RTN","ORWIB",35,0)
 D SCCOND^PXUTLSCC(DFN,ATM,LOC,$G(VST),.X)
"RTN","ORWIB",36,0)
 S VAL=$G(X("SC"))_S_$G(X("AO"))_S_$G(X("IR"))_S_$G(X("EC"))
"RTN","ORWIB",37,0)
 Q
"RTN","ORWIB",38,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWIB",39,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWIB",40,0)
 D ELIG^VADPT
"RTN","ORWIB",41,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWIB",42,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWIB",43,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWIB",44,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWIB",45,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWIB",46,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWIB",47,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWIB",48,0)
 Q
"RTN","ORWLRR")
0^34^B12620243
"RTN","ORWLRR",1,0)
ORWLRR ;SLC/STAFF- rpc routing for lab results ;4/9/10  12:54
"RTN","ORWLRR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,280**;Dec 17, 1997;Build 85
"RTN","ORWLRR",3,0)
 ;
"RTN","ORWLRR",4,0)
 ; this routine simply routes CPRS rpc calls to the appropriate lab routine
"RTN","ORWLRR",5,0)
 ;
"RTN","ORWLRR",6,0)
ALLTESTS(ORY,FROM,DIR) ; from Remote Procedure file
"RTN","ORWLRR",7,0)
 D ALLTESTS^LR7OGO(.ORY,FROM,DIR)
"RTN","ORWLRR",8,0)
 Q
"RTN","ORWLRR",9,0)
 ;
"RTN","ORWLRR",10,0)
ATESTS(ORY,TEST) ; from Remote Procedure file
"RTN","ORWLRR",11,0)
 D ATESTS^LR7OGO(.ORY,TEST)
"RTN","ORWLRR",12,0)
 Q
"RTN","ORWLRR",13,0)
 ;
"RTN","ORWLRR",14,0)
ATG(ORY,TESTGP,USER) ; from Remote Procedure file
"RTN","ORWLRR",15,0)
 D ATG^LR7OGO(.ORY,TESTGP,USER)
"RTN","ORWLRR",16,0)
 Q
"RTN","ORWLRR",17,0)
 ;
"RTN","ORWLRR",18,0)
ATOMICS(ORY,FROM,DIR) ; from Remote Procedure file
"RTN","ORWLRR",19,0)
 D ATOMICS^LR7OGO(.ORY,FROM,DIR)
"RTN","ORWLRR",20,0)
 Q
"RTN","ORWLRR",21,0)
 ;
"RTN","ORWLRR",22,0)
CHART(ORY,DFN,DATE1,DATE2,SPEC,TEST) ; from Remote Procedure file
"RTN","ORWLRR",23,0)
 D CHART^LR7OGC(.ORY,DFN,DATE1,DATE2,SPEC,TEST)
"RTN","ORWLRR",24,0)
 Q
"RTN","ORWLRR",25,0)
 ;
"RTN","ORWLRR",26,0)
CHEMTEST(ORY,FROM,DIR) ; from Remote Procedure file
"RTN","ORWLRR",27,0)
 D CHEMTEST^LR7OGO(.ORY,FROM,DIR)
"RTN","ORWLRR",28,0)
 Q
"RTN","ORWLRR",29,0)
 ;
"RTN","ORWLRR",30,0)
GRID(ORY,DFN,DATE1,DATE2,SPEC,TESTS) ; from Remote Procedure file
"RTN","ORWLRR",31,0)
 D GRID^ORWLRRG(.ORY,DFN,DATE1,DATE2,SPEC,.TESTS)
"RTN","ORWLRR",32,0)
 Q
"RTN","ORWLRR",33,0)
 ;
"RTN","ORWLRR",34,0)
INTERIM(ORY,DFN,DATE1,DATE2) ; Interim Report RPC (All Tests by Date)
"RTN","ORWLRR",35,0)
 N ROOT
"RTN","ORWLRR",36,0)
 S ROOT=$$SET()
"RTN","ORWLRR",37,0)
 I $$REMOTE(.DFN,.ROOT) D INTERIM^LR7OGM(.ORY,DFN,DATE1,DATE2)
"RTN","ORWLRR",38,0)
 D CLEAN(.ORY,.ROOT)
"RTN","ORWLRR",39,0)
 Q
"RTN","ORWLRR",40,0)
 ;
"RTN","ORWLRR",41,0)
INTERIMG(ORY,DFN,DATE1,DIR,FORMAT) ; from Remote Procedure file
"RTN","ORWLRR",42,0)
 D INTERIMG^LR7OGM(.ORY,DFN,DATE1,DIR,$G(FORMAT,1))
"RTN","ORWLRR",43,0)
 Q
"RTN","ORWLRR",44,0)
 ;
"RTN","ORWLRR",45,0)
INTERIMS(ORY,DFN,DATE1,DATE2,ORTESTS) ; from Remote Procedure file
"RTN","ORWLRR",46,0)
 D INTERIMS^LR7OGM(.ORY,DFN,DATE1,DATE2,.ORTESTS)
"RTN","ORWLRR",47,0)
 Q
"RTN","ORWLRR",48,0)
 ;
"RTN","ORWLRR",49,0)
MICRO(ORY,DFN,DATE1,DATE2) ; Micro Report RPC
"RTN","ORWLRR",50,0)
 N ROOT
"RTN","ORWLRR",51,0)
 S ROOT=$$SET()
"RTN","ORWLRR",52,0)
 I $$REMOTE(.DFN,.ROOT) D MICRO^LR7OGM(.ORY,DFN,DATE1,DATE2)
"RTN","ORWLRR",53,0)
 D CLEAN(.ORY,.ROOT)
"RTN","ORWLRR",54,0)
 Q
"RTN","ORWLRR",55,0)
 ;
"RTN","ORWLRR",56,0)
NEWOLD(ORY,DFN) ; from Remote Procedure file
"RTN","ORWLRR",57,0)
 D NEWOLD^LR7OGMU(.ORY,DFN)
"RTN","ORWLRR",58,0)
 Q
"RTN","ORWLRR",59,0)
 ;
"RTN","ORWLRR",60,0)
PARAM(ORY) ; from Remote Procedure file
"RTN","ORWLRR",61,0)
 D PARAM^LR7OGO(.ORY)
"RTN","ORWLRR",62,0)
 Q
"RTN","ORWLRR",63,0)
 ;
"RTN","ORWLRR",64,0)
SPEC(ORY,FROM,DIR) ; from Remote Procedure file
"RTN","ORWLRR",65,0)
 D SPEC^LR7OGO(.ORY,FROM,DIR)
"RTN","ORWLRR",66,0)
 Q
"RTN","ORWLRR",67,0)
 ;
"RTN","ORWLRR",68,0)
TG(ORY,USER) ; from Remote Procedure file
"RTN","ORWLRR",69,0)
 D TG^LR7OGO(.ORY,USER)
"RTN","ORWLRR",70,0)
 Q
"RTN","ORWLRR",71,0)
 ;
"RTN","ORWLRR",72,0)
USERS(ORY,FROM,DIR) ; from Remote Procedure file
"RTN","ORWLRR",73,0)
 D USERS^LR7OGO(.ORY,FROM,DIR)
"RTN","ORWLRR",74,0)
 Q
"RTN","ORWLRR",75,0)
 ;
"RTN","ORWLRR",76,0)
UTGA(ORY,ORTESTS) ; from Remote Procedure file
"RTN","ORWLRR",77,0)
 D UTGA^LR7OGO(.ORY,.ORTESTS)
"RTN","ORWLRR",78,0)
 Q
"RTN","ORWLRR",79,0)
 ;
"RTN","ORWLRR",80,0)
UTGD(ORY,TGRP) ; from Remote Procedure file
"RTN","ORWLRR",81,0)
 D UTGD^LR7OGO(.ORY,TGRP)
"RTN","ORWLRR",82,0)
 Q
"RTN","ORWLRR",83,0)
 ;
"RTN","ORWLRR",84,0)
UTGR(ORY,ORTESTS,TGRP) ; from Remote Procedure file
"RTN","ORWLRR",85,0)
 D UTGR^LR7OGO(.ORY,.ORTESTS,TGRP)
"RTN","ORWLRR",86,0)
 Q
"RTN","ORWLRR",87,0)
 ;
"RTN","ORWLRR",88,0)
INFO(ORY,ORTEST) ; Get Lab test description info
"RTN","ORWLRR",89,0)
 I '$L($T(ONE^LR7OR4)) S ORY(1)="Missing lab API (part of patch LR*5.2*256)" Q
"RTN","ORWLRR",90,0)
 D ONE^LR7OR4(.ORY,.ORTEST)
"RTN","ORWLRR",91,0)
 Q
"RTN","ORWLRR",92,0)
REMOTE(DFN,ROOT) ;Setup for remote data
"RTN","ORWLRR",93,0)
 N REMOTE,ORGO
"RTN","ORWLRR",94,0)
 S REMOTE=+$P(DFN,";",2),ORGO=1
"RTN","ORWLRR",95,0)
 I 'REMOTE S DFN=+DFN Q ORGO ;DFN = DFN;ICN for remote calls
"RTN","ORWLRR",96,0)
 I REMOTE D
"RTN","ORWLRR",97,0)
 . I '$L($T(GETDFN^MPIF001)) D SETITEM^ORWRP(.ROOT,"MPI routines missing on remote system") S ORGO=0 Q
"RTN","ORWLRR",98,0)
 . S ICN=+$P(DFN,";",2),DFN=+$$GETDFN^MPIF001(ICN)
"RTN","ORWLRR",99,0)
 . I DFN<0 D SETITEM^ORWRP(.ROOT,"Patient not found on remote system") S ORGO=0 Q
"RTN","ORWLRR",100,0)
 . S:'$D(DUZ("AG")) DUZ("AG")="" ;Broker not currently setting agency for remote sites
"RTN","ORWLRR",101,0)
 Q ORGO
"RTN","ORWLRR",102,0)
SET() ;Shared setup of ROOT node
"RTN","ORWLRR",103,0)
 K ^TMP("ORDATA",$J,"OUTPUT")
"RTN","ORWLRR",104,0)
 S ROOT=$NA(^TMP("ORDATA",$J,"OUTPUT"))
"RTN","ORWLRR",105,0)
 Q ROOT
"RTN","ORWLRR",106,0)
CLEAN(ORY,ROOT) ;Shared Clean-up
"RTN","ORWLRR",107,0)
 I '$O(@ROOT@(0)) S @ROOT@(1)="",@ROOT@(2)="No Data Found"
"RTN","ORWLRR",108,0)
 I $S($D(ORY):$S('$O(@ORY@(0)):1,1:0),1:$O(@ROOT@(0))) M @ORY=@ROOT
"RTN","ORWLRR",109,0)
 K ^TMP("ORDATA",$J,"OUTPUT")
"RTN","ORWLRR",110,0)
 Q
"RTN","ORWLRRG")
0^36^B24435305
"RTN","ORWLRRG",1,0)
ORWLRRG ;SLC/STAFF- lab worksheet data ;4/9/10  12:52
"RTN","ORWLRRG",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17, 1997;Build 85
"RTN","ORWLRRG",3,0)
 ;
"RTN","ORWLRRG",4,0)
GRID(ROOT,DFN,START,END,SPEC,TESTS) ; from ORWLRR
"RTN","ORWLRRG",5,0)
 D GRID^LR7OGG(.ROOT,DFN,START,END,SPEC,.TESTS) Q  ; **** remove when correct
"RTN","ORWLRRG",6,0)
 S ROOT=$NA(^TMP("ORGRID",$J))
"RTN","ORWLRRG",7,0)
 K ^TMP("ORGRID",$J),^TMP("ORWORK",$J)
"RTN","ORWLRRG",8,0)
 D GETTEST(DFN,START,END,SPEC,.TESTS)
"RTN","ORWLRRG",9,0)
 D GETDATA(DFN,START,END)
"RTN","ORWLRRG",10,0)
 D NTESTS^ORWLRRG1
"RTN","ORWLRRG",11,0)
 D NRESULTS^ORWLRRG1
"RTN","ORWLRRG",12,0)
 D SPECREF^ORWLRRG1
"RTN","ORWLRRG",13,0)
 D COMBINE^ORWLRRG1
"RTN","ORWLRRG",14,0)
 K ^TMP("ORWORK",$J)
"RTN","ORWLRRG",15,0)
 Q
"RTN","ORWLRRG",16,0)
 ;
"RTN","ORWLRRG",17,0)
GETTEST(DFN,START,END,SPEC,ORTESTS) ;
"RTN","ORWLRRG",18,0)
 N FIRST,LAST,XX K XX
"RTN","ORWLRRG",19,0)
 D GRID^LR7OGG(.XX,DFN,START,START,SPEC,.ORTESTS) ; just get test info
"RTN","ORWLRRG",20,0)
 M ^TMP("ORWORK",$J,"TEST")=@XX
"RTN","ORWLRRG",21,0)
 S FIRST=$O(^TMP("ORWORK",$J,"TEST",0))
"RTN","ORWLRRG",22,0)
 S LAST=$O(^TMP("ORWORK",$J,"TEST",""),-1)
"RTN","ORWLRRG",23,0)
 I $L(FIRST) K ^TMP("ORWORK",$J,"TEST",FIRST)
"RTN","ORWLRRG",24,0)
 I $L(LAST) K ^TMP("ORWORK",$J,"TEST",LAST)
"RTN","ORWLRRG",25,0)
 K @XX,XX
"RTN","ORWLRRG",26,0)
 ;
"RTN","ORWLRRG",27,0)
GETDATA(DFN,START,END) ;
"RTN","ORWLRRG",28,0)
 N COL,CNT,NUM,REFCHECK,RESULTS,RNUM,SPEC,TEST,TESTINFO,TESTSPEC,TYPEITEM,XX
"RTN","ORWLRRG",29,0)
 K TESTSPEC,XX
"RTN","ORWLRRG",30,0)
 S CNT=0
"RTN","ORWLRRG",31,0)
 S NUM=1
"RTN","ORWLRRG",32,0)
 F  S NUM=$O(^TMP("ORWORK",$J,"TEST",NUM)) Q:NUM<1  D
"RTN","ORWLRRG",33,0)
 . S TESTINFO=^TMP("ORWORK",$J,"TEST",NUM)
"RTN","ORWLRRG",34,0)
 . S TYPEITEM="63^"_$P(TESTINFO,U,2)
"RTN","ORWLRRG",35,0)
 . D ITEMDATA^ORWGAPI(.XX,TYPEITEM,START,DFN,END)
"RTN","ORWLRRG",36,0)
 . S RNUM=0
"RTN","ORWLRRG",37,0)
 . F  S RNUM=$O(XX(RNUM)) Q:RNUM<1  D
"RTN","ORWLRRG",38,0)
 .. S RESULTS=XX(RNUM)
"RTN","ORWLRRG",39,0)
 .. S REFCHECK=$P(RESULTS,U,2)_U_$P(RESULTS,U,7)_U_$P(RESULTS,U,10,11)
"RTN","ORWLRRG",40,0)
 .. S REFCHECK=$$UP^XLFSTR(REFCHECK)
"RTN","ORWLRRG",41,0)
 .. S CNT=CNT+1
"RTN","ORWLRRG",42,0)
 .. S ^TMP("ORWORK",$J,"RESULTS",CNT)=RESULTS
"RTN","ORWLRRG",43,0)
 .. S ^TMP("ORWORK",$J,"REFCHECK",REFCHECK)=""
"RTN","ORWLRRG",44,0)
 .. S COL=$P(RESULTS,U,3)
"RTN","ORWLRRG",45,0)
 .. I COL S ^TMP("ORWORK",$J,"COL",COL)=""
"RTN","ORWLRRG",46,0)
 .. S TEST=$P(RESULTS,U,2),SPEC=$P(RESULTS,U,7)
"RTN","ORWLRRG",47,0)
 .. I TEST,SPEC S TESTSPEC(TEST,SPEC)=$P(RESULTS,U,8)
"RTN","ORWLRRG",48,0)
 D REREF(DFN,.TESTSPEC)
"RTN","ORWLRRG",49,0)
 D COLLECT(DFN,START,END)
"RTN","ORWLRRG",50,0)
 K XX
"RTN","ORWLRRG",51,0)
 Q
"RTN","ORWLRRG",52,0)
 ;
"RTN","ORWLRRG",53,0)
REREF(DFN,TESTSPEC) ;
"RTN","ORWLRRG",54,0)
 N AGE,DATA,DOB,HIGH,LOW,NUM,SEX,SPEC,SREF,SUB,TEST
"RTN","ORWLRRG",55,0)
 K DATA
"RTN","ORWLRRG",56,0)
 D DEMOG(.DFN,.SEX,.DOB)
"RTN","ORWLRRG",57,0)
 S AGE=$$FMDIFF^XLFDT(DT,DOB)\1
"RTN","ORWLRRG",58,0)
 D TESTSPEC^ORWGAPIC(.DATA)
"RTN","ORWLRRG",59,0)
 S NUM=0
"RTN","ORWLRRG",60,0)
 F  S NUM=$O(DATA(NUM)) Q:NUM<1  D
"RTN","ORWLRRG",61,0)
 . S SREF=DATA(NUM)
"RTN","ORWLRRG",62,0)
 . S TEST=$P(SREF,U,1),SPEC=$P(SREF,U,2)
"RTN","ORWLRRG",63,0)
 . I TEST,SPEC,$L($G(TESTSPEC(TEST,SPEC))) D
"RTN","ORWLRRG",64,0)
 .. S LOW=$P(SREF,U,3) I $E(LOW,1,2)="$S" S @("LOW="_LOW)
"RTN","ORWLRRG",65,0)
 .. S HIGH=$P(SREF,U,4) I $E(HIGH,1,2)="$S" S @("HIGH="_HIGH)
"RTN","ORWLRRG",66,0)
 .. S SREF=$$UP^XLFSTR($P(SREF,U,1,2)_U_LOW_"!"_HIGH_U_$P(SREF,U,8))
"RTN","ORWLRRG",67,0)
 .. S SUB=TEST_U_SPEC_U
"RTN","ORWLRRG",68,0)
 .. S ^TMP("ORWORK",$J,"TESTSPEC",SUB)=SREF
"RTN","ORWLRRG",69,0)
 .. S ^TMP("ORWORK",$J,"SPECNAME",SPEC)=TESTSPEC(TEST,SPEC)
"RTN","ORWLRRG",70,0)
 .. I '$D(^TMP("ORWORK",$J,"REFCHECK",SREF)) S ^(SREF)=""
"RTN","ORWLRRG",71,0)
 .. K ^TMP("ORWORK",$J,"REFCHECK",SUB)
"RTN","ORWLRRG",72,0)
 K DATA
"RTN","ORWLRRG",73,0)
 Q
"RTN","ORWLRRG",74,0)
 ;
"RTN","ORWLRRG",75,0)
DEMOG(DFN,SEX,DOB) ;
"RTN","ORWLRRG",76,0)
 N INFO
"RTN","ORWLRRG",77,0)
 D DEMOG^ORWPT16(.INFO,DFN)
"RTN","ORWLRRG",78,0)
 S SEX=$P(INFO,U,2),DOB=$P(INFO,U,3)
"RTN","ORWLRRG",79,0)
 Q
"RTN","ORWLRRG",80,0)
 ;
"RTN","ORWLRRG",81,0)
COLLECT(DFN,START,END) ;
"RTN","ORWLRRG",82,0)
 N COL,COLCNT,COM,COMMENT,CNT,ERR,RESULTS
"RTN","ORWLRRG",83,0)
 K COM,RESULTS
"RTN","ORWLRRG",84,0)
 S COLCNT=0
"RTN","ORWLRRG",85,0)
 S CNT=0
"RTN","ORWLRRG",86,0)
 K RESULTS
"RTN","ORWLRRG",87,0)
 S COL=START
"RTN","ORWLRRG",88,0)
 F  S COL=$O(^TMP("ORWORK",$J,"COL",COL),-1) Q:COL=""  D  Q:COL<END
"RTN","ORWLRRG",89,0)
 . S COLCNT=COLCNT+1
"RTN","ORWLRRG",90,0)
 . S ^TMP("ORWORK",$J,"COL",COL)=COLCNT
"RTN","ORWLRRG",91,0)
 . D SPEC^LRPXAPI(.RESULTS,DFN,COL,"S",.ERR)
"RTN","ORWLRRG",92,0)
 . I $L($G(RESULTS("S"))) D
"RTN","ORWLRRG",93,0)
 .. S COMMENT=""
"RTN","ORWLRRG",94,0)
 .. I $$COMMENT^LRPXAPI($$LRDFN^LRPXAPIU(DFN),$$LRIDT^LRPXAPIU(COL)) S COMMENT="**"
"RTN","ORWLRRG",95,0)
 .. S CNT=CNT+1
"RTN","ORWLRRG",96,0)
 .. S ^TMP("ORWORK",$J,"SPEC",CNT)=COMMENT_U_RESULTS("S")
"RTN","ORWLRRG",97,0)
 .. S ^TMP("ORWORK",$J,"SPECNUM",$P(RESULTS("S"),U))=CNT
"RTN","ORWLRRG",98,0)
 .. S COM(COL)=""
"RTN","ORWLRRG",99,0)
 . K RESULTS
"RTN","ORWLRRG",100,0)
 S ^TMP("ORWORK",$J,"COL",0)=COLCNT
"RTN","ORWLRRG",101,0)
 D NCOL
"RTN","ORWLRRG",102,0)
 D COMMENT(DFN,START,END,.COM)
"RTN","ORWLRRG",103,0)
 K COM,RESULTS
"RTN","ORWLRRG",104,0)
 Q
"RTN","ORWLRRG",105,0)
 ;
"RTN","ORWLRRG",106,0)
NCOL ;
"RTN","ORWLRRG",107,0)
 N CNT,COL,COMMENT,INEXACT,INFO,NUM,SNUM,SPEC,SPECNAME
"RTN","ORWLRRG",108,0)
 S CNT=0
"RTN","ORWLRRG",109,0)
 S NUM=0
"RTN","ORWLRRG",110,0)
 F  S NUM=$O(^TMP("ORWORK",$J,"SPEC",NUM)) Q:NUM<1  D
"RTN","ORWLRRG",111,0)
 . S INFO=^TMP("ORWORK",$J,"SPEC",NUM)
"RTN","ORWLRRG",112,0)
 . S COL=$P(INFO,U,2)
"RTN","ORWLRRG",113,0)
 . S SNUM=$G(^TMP("ORWORK",$J,"COL",COL)) I SNUM D
"RTN","ORWLRRG",114,0)
 .. S COMMENT=$P(INFO,U,1),INEXACT=$P(INFO,U,3),SPEC=$P(INFO,U,6)
"RTN","ORWLRRG",115,0)
 .. S SPECNAME=$G(^TMP("ORWORK",$J,"SPECNAME",SPEC))
"RTN","ORWLRRG",116,0)
 .. I INEXACT=1 S INEXACT=COL\1
"RTN","ORWLRRG",117,0)
 .. E  S INEXACT=COL
"RTN","ORWLRRG",118,0)
 .. S ^TMP("ORWORK",$J,"NCOL",NUM)=SNUM_U_COL_U_SPEC_U_SPECNAME_U_COMMENT_U_INEXACT
"RTN","ORWLRRG",119,0)
 .. S CNT=CNT+1
"RTN","ORWLRRG",120,0)
 S ^TMP("ORWORK",$J,"NCOL",0)=CNT
"RTN","ORWLRRG",121,0)
 Q
"RTN","ORWLRRG",122,0)
 ;
"RTN","ORWLRRG",123,0)
COMMENT(DFN,START,END,COM) ;
"RTN","ORWLRRG",124,0)
 N COL,COLCNT,COMMENT,CNT,ERR,RESULTS
"RTN","ORWLRRG",125,0)
 K RESULTS
"RTN","ORWLRRG",126,0)
 S CNT=0
"RTN","ORWLRRG",127,0)
 S COL=START
"RTN","ORWLRRG",128,0)
 F  S COL=$O(COM(COL),-1) Q:COL=""  D  Q:COL<END
"RTN","ORWLRRG",129,0)
 . D SPEC^LRPXAPI(.RESULTS,DFN,COL,"C",.ERR)
"RTN","ORWLRRG",130,0)
 . I $L($O(RESULTS("C",0))) D
"RTN","ORWLRRG",131,0)
 .. S CNT=CNT+1
"RTN","ORWLRRG",132,0)
 .. S ^TMP("ORWORK",$J,"COMMENTS",CNT)=$P($$FMTE^XLFDT(COL),":",1,2)_" ** Comments:"
"RTN","ORWLRRG",133,0)
 .. S NUM=0
"RTN","ORWLRRG",134,0)
 .. F  S NUM=$O(RESULTS("C",NUM)) Q:NUM<1  D
"RTN","ORWLRRG",135,0)
 ... S CNT=CNT+1
"RTN","ORWLRRG",136,0)
 ... S ^TMP("ORWORK",$J,"COMMENTS",CNT)=RESULTS("C",NUM)
"RTN","ORWLRRG",137,0)
 .. S CNT=CNT+1
"RTN","ORWLRRG",138,0)
 .. S ^TMP("ORWORK",$J,"COMMENTS",CNT)=""
"RTN","ORWLRRG",139,0)
 . K RESULTS
"RTN","ORWLRRG",140,0)
 S ^TMP("ORWORK",$J,"COMMENTS",0)=CNT
"RTN","ORWLRRG",141,0)
 K RESULTS
"RTN","ORWLRRG",142,0)
 Q
"RTN","ORWLRRG",143,0)
 ;
"RTN","ORWLRRG1")
0^37^B42759995
"RTN","ORWLRRG1",1,0)
ORWLRRG1 ;SLC/STAFF- lab worksheet data processing ;07/28/09  11:35
"RTN","ORWLRRG1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17, 1997;Build 85
"RTN","ORWLRRG1",3,0)
 ;
"RTN","ORWLRRG1",4,0)
NTESTS ; from ORWLRRG
"RTN","ORWLRRG1",5,0)
 N BTEST,ETEST,INFO,NUM,REFCHECK,TEST,TESTCNT
"RTN","ORWLRRG1",6,0)
 S TESTCNT=0
"RTN","ORWLRRG1",7,0)
 S NUM=0
"RTN","ORWLRRG1",8,0)
 F  S NUM=$O(^TMP("ORWORK",$J,"TEST",NUM)) Q:NUM<1  D
"RTN","ORWLRRG1",9,0)
 . S INFO=^TMP("ORWORK",$J,"TEST",NUM)
"RTN","ORWLRRG1",10,0)
 . S TEST=+$P(INFO,U,2),BTEST=(TEST-1)_U_"Z",ETEST=TEST_U_"Z"
"RTN","ORWLRRG1",11,0)
 . S REFCHECK=BTEST
"RTN","ORWLRRG1",12,0)
 . F  S REFCHECK=$O(^TMP("ORWORK",$J,"REFCHECK",REFCHECK)) Q:REFCHECK]ETEST  Q:REFCHECK=""  D
"RTN","ORWLRRG1",13,0)
 .. I $P(REFCHECK,U)=TEST D
"RTN","ORWLRRG1",14,0)
 ... S TESTCNT=TESTCNT+1
"RTN","ORWLRRG1",15,0)
 ... S ^TMP("ORWORK",$J,"NTESTS",TESTCNT)=TESTCNT_U_$P(INFO,U,2,3)_U_REFCHECK
"RTN","ORWLRRG1",16,0)
 ... S ^TMP("ORWORK",$J,"REFCHECK",REFCHECK)=TESTCNT
"RTN","ORWLRRG1",17,0)
 S ^TMP("ORWORK",$J,"NTESTS",0)=TESTCNT
"RTN","ORWLRRG1",18,0)
 Q
"RTN","ORWLRRG1",19,0)
 ;
"RTN","ORWLRRG1",20,0)
NRESULTS ; from ORWLRRG
"RTN","ORWLRRG1",21,0)
 N ACNT,COL,COLNUM,CNT,FLAG,INFO,NUM,REFCHECK,RESULT,TESTNUM
"RTN","ORWLRRG1",22,0)
 S ACNT=0,CNT=0
"RTN","ORWLRRG1",23,0)
 S NUM=0
"RTN","ORWLRRG1",24,0)
 F  S NUM=$O(^TMP("ORWORK",$J,"RESULTS",NUM)) Q:NUM<1  D
"RTN","ORWLRRG1",25,0)
 . S INFO=^TMP("ORWORK",$J,"RESULTS",NUM)
"RTN","ORWLRRG1",26,0)
 . S COL=+$P(INFO,U,3)
"RTN","ORWLRRG1",27,0)
 . S REFCHECK=+$P(INFO,U,2)_U_+$P(INFO,U,7)_U
"RTN","ORWLRRG1",28,0)
 . I $L($P(INFO,U,10,11)) S REFCHECK=REFCHECK_$P(INFO,U,10,11)
"RTN","ORWLRRG1",29,0)
 . E  S REFCHECK=$G(^TMP("ORWORK",$J,"TESTSPEC",REFCHECK))
"RTN","ORWLRRG1",30,0)
 . I '$L(REFCHECK) Q
"RTN","ORWLRRG1",31,0)
 . S REFCHECK=$$UP^XLFSTR(REFCHECK)
"RTN","ORWLRRG1",32,0)
 . S TESTNUM=$G(^TMP("ORWORK",$J,"REFCHECK",REFCHECK))
"RTN","ORWLRRG1",33,0)
 . I 'TESTNUM Q
"RTN","ORWLRRG1",34,0)
 . S COLNUM=$G(^TMP("ORWORK",$J,"COL",COL))
"RTN","ORWLRRG1",35,0)
 . I 'COLNUM Q
"RTN","ORWLRRG1",36,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",37,0)
 . S RESULT=$P(INFO,U,5),FLAG=$P(INFO,U,6)
"RTN","ORWLRRG1",38,0)
 . S ^TMP("ORWORK",$J,"NRESULTS",CNT)=COLNUM_U_TESTNUM_U_RESULT_U_FLAG
"RTN","ORWLRRG1",39,0)
 . I $L(FLAG) D AB(.ACNT,REFCHECK,COL,RESULT,FLAG)
"RTN","ORWLRRG1",40,0)
 S ^TMP("ORWORK",$J,"NRESULTS",0)=CNT
"RTN","ORWLRRG1",41,0)
 D ARESULTS
"RTN","ORWLRRG1",42,0)
 Q
"RTN","ORWLRRG1",43,0)
 ;
"RTN","ORWLRRG1",44,0)
AB(ACNT,REFCHECK,COL,RESULT,FLAG) ;
"RTN","ORWLRRG1",45,0)
 S ACNT=ACNT+1
"RTN","ORWLRRG1",46,0)
 S ^TMP("ORWORK",$J,"RESULTSA",ACNT)=REFCHECK_U_COL_U_RESULT_U_FLAG
"RTN","ORWLRRG1",47,0)
 S ^TMP("ORWORK",$J,"REFCHECKA",REFCHECK)=""
"RTN","ORWLRRG1",48,0)
 S ^TMP("ORWORK",$J,"COLA",COL)=""
"RTN","ORWLRRG1",49,0)
 Q
"RTN","ORWLRRG1",50,0)
 ;
"RTN","ORWLRRG1",51,0)
ARESULTS ;
"RTN","ORWLRRG1",52,0)
 N COL,COLNUM,CNT,FLAG,INFO,NUM,REFCHECK,RESULT,TESTNUM
"RTN","ORWLRRG1",53,0)
 D ACOL
"RTN","ORWLRRG1",54,0)
 D NACOL
"RTN","ORWLRRG1",55,0)
 D ATESTS
"RTN","ORWLRRG1",56,0)
 S CNT=0,NUM=0
"RTN","ORWLRRG1",57,0)
 F  S NUM=$O(^TMP("ORWORK",$J,"RESULTSA",NUM)) Q:NUM<1  D
"RTN","ORWLRRG1",58,0)
 . S INFO=^TMP("ORWORK",$J,"RESULTSA",NUM)
"RTN","ORWLRRG1",59,0)
 . S COL=+$P(INFO,U,5)
"RTN","ORWLRRG1",60,0)
 . S REFCHECK=$P(INFO,U,1,4)
"RTN","ORWLRRG1",61,0)
 . S TESTNUM=$G(^TMP("ORWORK",$J,"REFCHECKA",REFCHECK))
"RTN","ORWLRRG1",62,0)
 . I 'TESTNUM Q
"RTN","ORWLRRG1",63,0)
 . S COLNUM=$G(^TMP("ORWORK",$J,"COLA",COL))
"RTN","ORWLRRG1",64,0)
 . I 'COLNUM Q
"RTN","ORWLRRG1",65,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",66,0)
 . S RESULT=$P(INFO,U,6),FLAG=$P(INFO,U,7)
"RTN","ORWLRRG1",67,0)
 . S ^TMP("ORWORK",$J,"NRESULTSA",CNT)=COLNUM_U_TESTNUM_U_RESULT_U_FLAG
"RTN","ORWLRRG1",68,0)
 S ^TMP("ORWORK",$J,"NRESULTSA",0)=CNT
"RTN","ORWLRRG1",69,0)
 Q
"RTN","ORWLRRG1",70,0)
 ;
"RTN","ORWLRRG1",71,0)
ACOL ;
"RTN","ORWLRRG1",72,0)
 N COL,COLCNT
"RTN","ORWLRRG1",73,0)
 S COLCNT=0
"RTN","ORWLRRG1",74,0)
 S COL=""
"RTN","ORWLRRG1",75,0)
 F  S COL=$O(^TMP("ORWORK",$J,"COLA",COL),-1) Q:COL=""  D
"RTN","ORWLRRG1",76,0)
 . S COLCNT=COLCNT+1
"RTN","ORWLRRG1",77,0)
 . S ^TMP("ORWORK",$J,"COLA",COL)=COLCNT
"RTN","ORWLRRG1",78,0)
 S ^TMP("ORWORK",$J,"COLA",0)=COLCNT
"RTN","ORWLRRG1",79,0)
 Q
"RTN","ORWLRRG1",80,0)
NACOL ;
"RTN","ORWLRRG1",81,0)
 N CNT,COL,COMMENT,INEXACT,INFO,NUM,SNUM,SPEC,SPECNAME
"RTN","ORWLRRG1",82,0)
 S CNT=0
"RTN","ORWLRRG1",83,0)
 S NUM=0
"RTN","ORWLRRG1",84,0)
 F  S NUM=$O(^TMP("ORWORK",$J,"SPEC",NUM)) Q:NUM<1  D
"RTN","ORWLRRG1",85,0)
 . S INFO=^TMP("ORWORK",$J,"SPEC",NUM)
"RTN","ORWLRRG1",86,0)
 . S COL=$P(INFO,U,2)
"RTN","ORWLRRG1",87,0)
 . S SNUM=$G(^TMP("ORWORK",$J,"COLA",COL)) I SNUM D
"RTN","ORWLRRG1",88,0)
 .. S COMMENT=$P(INFO,U,1),INEXACT=$P(INFO,U,3),SPEC=$P(INFO,U,6)
"RTN","ORWLRRG1",89,0)
 .. S SPECNAME=$G(^TMP("ORWORK",$J,"SPECNAME",SPEC))
"RTN","ORWLRRG1",90,0)
 .. I INEXACT=1 S INEXACT=COL\1
"RTN","ORWLRRG1",91,0)
 .. E  S INEXACT=COL
"RTN","ORWLRRG1",92,0)
 .. S ^TMP("ORWORK",$J,"NCOLA",NUM)=SNUM_U_COL_U_SPEC_U_SPECNAME_U_COMMENT_U_INEXACT
"RTN","ORWLRRG1",93,0)
 .. S CNT=CNT+1
"RTN","ORWLRRG1",94,0)
 S ^TMP("ORWORK",$J,"NCOLA",0)=CNT
"RTN","ORWLRRG1",95,0)
 Q
"RTN","ORWLRRG1",96,0)
 ;
"RTN","ORWLRRG1",97,0)
ATESTS ;
"RTN","ORWLRRG1",98,0)
 N BTEST,ETEST,INFO,NUM,REFCHECK,TEST,TESTCNT
"RTN","ORWLRRG1",99,0)
 S TESTCNT=0
"RTN","ORWLRRG1",100,0)
 S NUM=0
"RTN","ORWLRRG1",101,0)
 F  S NUM=$O(^TMP("ORWORK",$J,"TEST",NUM)) Q:NUM<1  D
"RTN","ORWLRRG1",102,0)
 . S INFO=^TMP("ORWORK",$J,"TEST",NUM)
"RTN","ORWLRRG1",103,0)
 . S TEST=+$P(INFO,U,2),BTEST=(TEST-1)_U_"Z",ETEST=TEST_U_"Z"
"RTN","ORWLRRG1",104,0)
 . S REFCHECK=BTEST
"RTN","ORWLRRG1",105,0)
 . F  S REFCHECK=$O(^TMP("ORWORK",$J,"REFCHECKA",REFCHECK)) Q:REFCHECK]ETEST  Q:REFCHECK=""  D
"RTN","ORWLRRG1",106,0)
 .. I $P(REFCHECK,U)=TEST D
"RTN","ORWLRRG1",107,0)
 ... S TESTCNT=TESTCNT+1
"RTN","ORWLRRG1",108,0)
 ... S ^TMP("ORWORK",$J,"NTESTSA",TESTCNT)=TESTCNT_U_$P(INFO,U,2,3)_U_REFCHECK
"RTN","ORWLRRG1",109,0)
 ... S ^TMP("ORWORK",$J,"REFCHECKA",REFCHECK)=TESTCNT
"RTN","ORWLRRG1",110,0)
 S ^TMP("ORWORK",$J,"NTESTSA",0)=TESTCNT
"RTN","ORWLRRG1",111,0)
 Q
"RTN","ORWLRRG1",112,0)
 ;
"RTN","ORWLRRG1",113,0)
SPECREF ; from ORWLRRG
"RTN","ORWLRRG1",114,0)
 N CNT,HIGH,INFO,LOW,RANGE,REF,SNAME,SPEC,SUB,TEST,UNITS
"RTN","ORWLRRG1",115,0)
 S CNT=0
"RTN","ORWLRRG1",116,0)
 S REF=""
"RTN","ORWLRRG1",117,0)
 F  S REF=$O(^TMP("ORWORK",$J,"REFCHECK",REF)) Q:REF=""  D
"RTN","ORWLRRG1",118,0)
 . S SUB=+^TMP("ORWORK",$J,"REFCHECK",REF)
"RTN","ORWLRRG1",119,0)
 . S TEST=+$P(REF,U),SPEC=+$P(REF,U,2),RANGE=$P(REF,U,3),UNITS=$P(REF,U,4)
"RTN","ORWLRRG1",120,0)
 . S LOW=$P(RANGE,"!"),HIGH=$P(RANGE,"!",2)
"RTN","ORWLRRG1",121,0)
 . S SNAME=$G(^TMP("ORWORK",$J,"SPECNAME",SPEC))
"RTN","ORWLRRG1",122,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",123,0)
 . S ^TMP("ORWORK",$J,"SPECREF",SUB)=TEST_U_SNAME_U_SPEC_U_LOW_U_HIGH_U_UNITS
"RTN","ORWLRRG1",124,0)
 S ^TMP("ORWORK",$J,"SPECREF",0)=CNT
"RTN","ORWLRRG1",125,0)
 Q
"RTN","ORWLRRG1",126,0)
 ;
"RTN","ORWLRRG1",127,0)
COMBINE ; from ORWLRRG
"RTN","ORWLRRG1",128,0)
 N ACOLCNT,ARESCNT,ATESTCNT,CNT,COLCNT,INFO,RESCNT,SUB,TESTCNT,TOSPEC,TOCOM,TSCNT
"RTN","ORWLRRG1",129,0)
 S COLCNT=+$G(^TMP("ORWORK",$J,"NCOL",0))
"RTN","ORWLRRG1",130,0)
 S TESTCNT=+$G(^TMP("ORWORK",$J,"NTESTS",0))
"RTN","ORWLRRG1",131,0)
 S RESCNT=+$G(^TMP("ORWORK",$J,"NRESULTS",0))
"RTN","ORWLRRG1",132,0)
 S ACOLCNT=+$G(^TMP("ORWORK",$J,"NCOLA",0))
"RTN","ORWLRRG1",133,0)
 S ATESTCNT=+$G(^TMP("ORWORK",$J,"NTESTSA",0))
"RTN","ORWLRRG1",134,0)
 S ARESCNT=+$G(^TMP("ORWORK",$J,"NRESULTSA",0))
"RTN","ORWLRRG1",135,0)
 S TSCNT=^TMP("ORWORK",$J,"SPECREF",0)
"RTN","ORWLRRG1",136,0)
 S TOSPEC=COLCNT+TESTCNT+RESCNT+ACOLCNT+ATESTCNT+ARESCNT+2
"RTN","ORWLRRG1",137,0)
 S TOCOM=TOSPEC+TSCNT
"RTN","ORWLRRG1",138,0)
 S ^TMP("ORGRID",$J,1)=TESTCNT_U_COLCNT_U_RESCNT_U_TOSPEC_U_TOCOM
"RTN","ORWLRRG1",139,0)
 S CNT=1
"RTN","ORWLRRG1",140,0)
 S SUB=0
"RTN","ORWLRRG1",141,0)
 F  S SUB=$O(^TMP("ORWORK",$J,"NTESTS",SUB)) Q:SUB<1  D
"RTN","ORWLRRG1",142,0)
 . S INFO=^TMP("ORWORK",$J,"NTESTS",SUB)
"RTN","ORWLRRG1",143,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",144,0)
 . S ^TMP("ORGRID",$J,CNT)=INFO
"RTN","ORWLRRG1",145,0)
 S SUB=0
"RTN","ORWLRRG1",146,0)
 F  S SUB=$O(^TMP("ORWORK",$J,"NCOL",SUB)) Q:SUB<1  D
"RTN","ORWLRRG1",147,0)
 . S INFO=^TMP("ORWORK",$J,"NCOL",SUB)
"RTN","ORWLRRG1",148,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",149,0)
 . S ^TMP("ORGRID",$J,CNT)=INFO
"RTN","ORWLRRG1",150,0)
 S SUB=0
"RTN","ORWLRRG1",151,0)
 F  S SUB=$O(^TMP("ORWORK",$J,"NRESULTS",SUB)) Q:SUB<1  D
"RTN","ORWLRRG1",152,0)
 . S INFO=^TMP("ORWORK",$J,"NRESULTS",SUB)
"RTN","ORWLRRG1",153,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",154,0)
 . S ^TMP("ORGRID",$J,CNT)=INFO
"RTN","ORWLRRG1",155,0)
 S CNT=CNT+1
"RTN","ORWLRRG1",156,0)
 S ^TMP("ORGRID",$J,CNT)=ATESTCNT_U_ACOLCNT_U_ARESCNT
"RTN","ORWLRRG1",157,0)
 S SUB=0
"RTN","ORWLRRG1",158,0)
 F  S SUB=$O(^TMP("ORWORK",$J,"NTESTSA",SUB)) Q:SUB<1  D
"RTN","ORWLRRG1",159,0)
 . S INFO=^TMP("ORWORK",$J,"NTESTSA",SUB)
"RTN","ORWLRRG1",160,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",161,0)
 . S ^TMP("ORGRID",$J,CNT)=INFO
"RTN","ORWLRRG1",162,0)
 S SUB=0
"RTN","ORWLRRG1",163,0)
 F  S SUB=$O(^TMP("ORWORK",$J,"NCOLA",SUB)) Q:SUB<1  D
"RTN","ORWLRRG1",164,0)
 . S INFO=^TMP("ORWORK",$J,"NCOLA",SUB)
"RTN","ORWLRRG1",165,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",166,0)
 . S ^TMP("ORGRID",$J,CNT)=INFO
"RTN","ORWLRRG1",167,0)
 S SUB=0
"RTN","ORWLRRG1",168,0)
 F  S SUB=$O(^TMP("ORWORK",$J,"NRESULTSA",SUB)) Q:SUB<1  D
"RTN","ORWLRRG1",169,0)
 . S INFO=^TMP("ORWORK",$J,"NRESULTSA",SUB)
"RTN","ORWLRRG1",170,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",171,0)
 . S ^TMP("ORGRID",$J,CNT)=INFO
"RTN","ORWLRRG1",172,0)
 S SUB=0
"RTN","ORWLRRG1",173,0)
 F  S SUB=$O(^TMP("ORWORK",$J,"SPECREF",SUB)) Q:SUB<1  D
"RTN","ORWLRRG1",174,0)
 . S INFO=^TMP("ORWORK",$J,"SPECREF",SUB)
"RTN","ORWLRRG1",175,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",176,0)
 . S ^TMP("ORGRID",$J,CNT)=INFO
"RTN","ORWLRRG1",177,0)
 S SUB=0
"RTN","ORWLRRG1",178,0)
 F  S SUB=$O(^TMP("ORWORK",$J,"COMMENTS",SUB)) Q:SUB<1  D
"RTN","ORWLRRG1",179,0)
 . S INFO=^TMP("ORWORK",$J,"COMMENTS",SUB)
"RTN","ORWLRRG1",180,0)
 . S CNT=CNT+1
"RTN","ORWLRRG1",181,0)
 . S ^TMP("ORGRID",$J,CNT)=INFO
"RTN","ORWLRRG1",182,0)
 Q
"RTN","ORWOD")
0^61^B75747824
"RTN","ORWOD",1,0)
ORWOD ; SLC/GSS - Utility for Order Dialogs ; 7/24/09 9:55am
"RTN","ORWOD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,296,280**;DEC 17, 1997;Build 85
"RTN","ORWOD",3,0)
 ;
"RTN","ORWOD",4,0)
 ; DBIA 5133: reading ^PXRMD file #801.41
"RTN","ORWOD",5,0)
 ; 
"RTN","ORWOD",6,0)
 Q
"RTN","ORWOD",7,0)
 ;
"RTN","ORWOD",8,0)
INSTALL ;Post-install entry point for OR*3*243
"RTN","ORWOD",9,0)
 D MAIN
"RTN","ORWOD",10,0)
 Q
"RTN","ORWOD",11,0)
 ;
"RTN","ORWOD",12,0)
ATWILL ;Entry point for ORDER MENU MANAGEMENT menu - ORCM MGMT opt MR
"RTN","ORWOD",13,0)
 W !,"This option generates two Quick Order (QO) reports to assist in the"
"RTN","ORWOD",14,0)
 W !,"evaluation of Med QOs that may need to be updated to accommodate the"
"RTN","ORWOD",15,0)
 W !,"three new fields exported in CPRS GUI v27:  Route, IV Type and Schedule."
"RTN","ORWOD",16,0)
 W !,"One report lists Med QOs that are contained in another entry such as an"
"RTN","ORWOD",17,0)
 W !,"order menu, order set or reminder dialog. The other report lists Med QOs"
"RTN","ORWOD",18,0)
 W !,"that are stand alone and are not included in another entry. These reports"
"RTN","ORWOD",19,0)
 W !,"will be sent to you via Mailman.",!
"RTN","ORWOD",20,0)
 S DIR(0)="FAO",DIR("A")="Do you wish to continue? " D ^DIR Q:X=""!(X="^")
"RTN","ORWOD",21,0)
 S ORCDD=$TR(X,"yn","YN") I ORCDD'="Y",ORCDD'="N" W "  Enter Y or N",! G ATWILL
"RTN","ORWOD",22,0)
 I X="N" W "...report not compiled" Q
"RTN","ORWOD",23,0)
 W !,"Compiling Med Quick Order check report..."
"RTN","ORWOD",24,0)
 D MAIN
"RTN","ORWOD",25,0)
 W !,"...QO check report compiled and mailed to ",$P(^VA(200,DUZ,0),U)
"RTN","ORWOD",26,0)
 Q
"RTN","ORWOD",27,0)
 ;
"RTN","ORWOD",28,0)
MAIN ;Main calls for QO Reports
"RTN","ORWOD",29,0)
 N ANCSTR,I,PSJNOPC,XMDUN,XMSUB
"RTN","ORWOD",30,0)
 D NTRY
"RTN","ORWOD",31,0)
 ; ANCSTR='ancestors', i.e., QO being used on a menu/Reminder Dialogs
"RTN","ORWOD",32,0)
 F ANCSTR="Y","N" D
"RTN","ORWOD",33,0)
 . D MAILSU
"RTN","ORWOD",34,0)
 . D SEND(XMSUB,DUZ)
"RTN","ORWOD",35,0)
 D CLEANUP
"RTN","ORWOD",36,0)
 Q
"RTN","ORWOD",37,0)
 ;
"RTN","ORWOD",38,0)
ANCSTR ;Determine QO usage - called by XSET and MM
"RTN","ORWOD",39,0)
 S ANCSTR="N"
"RTN","ORWOD",40,0)
 I $O(^ORD(101.41,"AD",ODIENXT,0))!($D(^TMP("OR",$J,"RD",ODIENXT))=0) S ANCSTR="Y"
"RTN","ORWOD",41,0)
 Q
"RTN","ORWOD",42,0)
 ;
"RTN","ORWOD",43,0)
XSET ;Set QO record for display
"RTN","ORWOD",44,0)
 D ANCSTR
"RTN","ORWOD",45,0)
 S RC=ODIENXT_U_$P(REC,U)_U_$P(REC,U,2)_U_$G(ODATYPE)_U_$G(ODAROUTE)_U_$G(ODASCHD)_U_$G(ODARATE)_U_$G(ODALIMIT)
"RTN","ORWOD",46,0)
 Q
"RTN","ORWOD",47,0)
 ;
"RTN","ORWOD",48,0)
NTRY ;Compiling report
"RTN","ORWOD",49,0)
 N AFIND,DIEN,DOSE,DSPLGRP,DSPLGPTR,GETXT,HIT,NODE3,ODALIMIT,ODARATE,ODAROUTE,ODASCHD,ODATYPE,ODIEN,ODIENXT,ORDIALOG,PTEXT,PTYPE,RC,REC,TYPE,XSET
"RTN","ORWOD",50,0)
 K ^TMP("OR",$J)
"RTN","ORWOD",51,0)
 S (DSPLGRP,DSPLGPTR,ODIEN,ODIENXT,TYPE)=""
"RTN","ORWOD",52,0)
 S XSET="S RC=ODIENXT_U_$P(REC,U)_U_$P(REC,U,2)_U_$G(ODATYPE)_U_$G(ODAROUTE)_U_$G(ODASCHD)_U_$G(ODARATE)_U_$G(ODALIMIT)"
"RTN","ORWOD",53,0)
 S DOSE=+$O(^ORD(101.41,"B","OR GTX INSTRUCTIONS",0))  ;use for MM tag
"RTN","ORWOD",54,0)
 ;
"RTN","ORWOD",55,0)
 ; Order Dialogs Structure, Menus - orig code by A.Puleo
"RTN","ORWOD",56,0)
 ; Reminder Dialog Type: (PTYPE) E=Dialog Element, G=Dialog Group
"RTN","ORWOD",57,0)
 F PTYPE="G","E" S DIEN="" D
"RTN","ORWOD",58,0)
 . F  S DIEN=$O(^PXRMD(801.41,"TYPE",PTYPE,DIEN)) Q:DIEN'>0  D  ;DBIA 5133
"RTN","ORWOD",59,0)
 .. ; PTEXT is 'FINDING ITEM' where 101.41 refers to ^ORD(101.41)
"RTN","ORWOD",60,0)
 .. ; Example: ^PXRMD(801.41,2515,1)="^^3^^51;ORD(101.41,"
"RTN","ORWOD",61,0)
 .. S PTEXT=$P($G(^PXRMD(801.41,DIEN,1)),U,5),AFIND=""
"RTN","ORWOD",62,0)
 .. I PTEXT[101.41 S ^TMP("OR",$J,"RD",$P(PTEXT,";"))=DIEN
"RTN","ORWOD",63,0)
 .. F  S AFIND=$O(^PXRMD(801.41,DIEN,3,"B",AFIND)) Q:AFIND=""  D
"RTN","ORWOD",64,0)
 ... I AFIND[101.41 S ^TMP("OR",$J,"RD",$P(AFIND,";"))=DIEN
"RTN","ORWOD",65,0)
 ;
"RTN","ORWOD",66,0)
 ; find IEN for the 'PSJI OR PAT FLUID OE' entry in Order Dialog File
"RTN","ORWOD",67,0)
 S ODIEN=$O(^ORD(101.41,"AB","PSJI OR PAT FLUID OE",0))
"RTN","ORWOD",68,0)
 ; 
"RTN","ORWOD",69,0)
 ; loop thru Display Group File, file # 100.98 & store all
"RTN","ORWOD",70,0)
 ; Display Group entries that have a pointer to 'PSJI OR PAT FLUID OE'
"RTN","ORWOD",71,0)
 ; in field # 4 or Default Dialog field
"RTN","ORWOD",72,0)
 F  S DSPLGRP=$O(^ORD(100.98,DSPLGRP)) Q:DSPLGRP'?1N.N  D
"RTN","ORWOD",73,0)
 . I ODIEN=$P($G(^ORD(100.98,DSPLGRP,0)),U,4) S ^TMP("OR",$J,"DG",DSPLGRP)=ODIEN
"RTN","ORWOD",74,0)
 ;
"RTN","ORWOD",75,0)
 ; loop though Order Dialog file to
"RTN","ORWOD",76,0)
 ; find each entry that is an IV Quick Order. Do this by checking
"RTN","ORWOD",77,0)
 ; field #4 or TYPE field for a 'Q' & then check field #5 or
"RTN","ORWOD",78,0)
 ; DISPLAY GROUP field for a pointer to one of the display groups found
"RTN","ORWOD",79,0)
 ; above. If both conditions are true then continue to next step,
"RTN","ORWOD",80,0)
 ; if not, continue looping.
"RTN","ORWOD",81,0)
 F  S ODIENXT=$O(^ORD(101.41,ODIENXT)) Q:ODIENXT'?1N.N  D
"RTN","ORWOD",82,0)
 . D MM
"RTN","ORWOD",83,0)
 . S TYPE=$P($G(^ORD(101.41,ODIENXT,0)),U,4) Q:TYPE'="Q"
"RTN","ORWOD",84,0)
 . S DSPLGPTR=$P($G(^ORD(101.41,ODIENXT,0)),U,5) Q:$G(DSPLGPTR)=""  ;no display group pointer in QO
"RTN","ORWOD",85,0)
 . Q:'$G(^TMP("OR",$J,"DG",DSPLGPTR))  ;no such display group in compiled data
"RTN","ORWOD",86,0)
 . S REC=^ORD(101.41,ODIENXT,0)
"RTN","ORWOD",87,0)
 . ;
"RTN","ORWOD",88,0)
 . K ORDIALOG
"RTN","ORWOD",89,0)
 . ; call GETQDLG^ORCD to build the Order dialog array (ORDIALOG())
"RTN","ORWOD",90,0)
 . D GETQDLG^ORCD(ODIENXT) S (HIT)=0
"RTN","ORWOD",91,0)
 . ;
"RTN","ORWOD",92,0)
 . ;ZW ORDIALOG("B")  ;ORDIALOG() listing
"RTN","ORWOD",93,0)
 . ; set variables for 'TYPE' (IV TYPE), 'ROUTE', 'SCHEDULE', 'RATE', 'LIMITATION'
"RTN","ORWOD",94,0)
 . F I=1:1:5 S @($P("ODATYPE,ODAROUTE,ODASCHD,ODARATE,ODALIMIT",",",I))=$G(ORDIALOG($P($G(ORDIALOG("B",$P("TYPE,ROUTE,SCHEDULE,INFUSION RATE,LIMITATION",",",I))),U,2),1))
"RTN","ORWOD",95,0)
 . ;
"RTN","ORWOD",96,0)
 . ; Quick Orders to be displayed to end user in First List Message follow:
"RTN","ORWOD",97,0)
 . ;
"RTN","ORWOD",98,0)
 . ; IV TYPE is null or ROUTE is null
"RTN","ORWOD",99,0)
 . I (ODATYPE=""!(ODAROUTE="")) D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),1,1,0)=RC,HIT=1
"RTN","ORWOD",100,0)
 . ;
"RTN","ORWOD",101,0)
 . ; IV TYPE is 'I' and SCHEDULE is null
"RTN","ORWOD",102,0)
 . I ODATYPE="I"&(ODASCHD="") D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),2,1,0)=RC,HIT=1
"RTN","ORWOD",103,0)
 . ;
"RTN","ORWOD",104,0)
 . ; IV TYPE is not 'C' or null or RATE is not 1-4#.1#, integer or '@'
"RTN","ORWOD",105,0)
 . I ODATYPE="C"!(ODATYPE="") D
"RTN","ORWOD",106,0)
 .. Q:ODARATE["@"
"RTN","ORWOD",107,0)
 .. Q:ODARATE?1.4N!(ODARATE?1.4N1".".1N)  ;integers alone OK
"RTN","ORWOD",108,0)
 .. S GETXT=$$GETXT(ODARATE," ml/hr")
"RTN","ORWOD",109,0)
 .. Q:GETXT?1.4N!(GETXT?1.4N1".".1N)  ;# ml/hr & #.# ml/hr Rate OK
"RTN","ORWOD",110,0)
 .. D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),3,1,0)=RC,HIT=1
"RTN","ORWOD",111,0)
 . ;
"RTN","ORWOD",112,0)
 . ; IV TYPE is 'I' but RATE not an integer minute or hour or null
"RTN","ORWOD",113,0)
 . I ODATYPE="I"&(ODARATE'?1.N)&(ODARATE'="") D  ;integer alone OK
"RTN","ORWOD",114,0)
 .. S GETXT=$$GETXT(ODARATE," Minutes| Hours")
"RTN","ORWOD",115,0)
 .. Q:GETXT?1.3N  ;integer # Minutes & # Hours Rate OK
"RTN","ORWOD",116,0)
 .. D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),4,1,0)=RC,HIT=1
"RTN","ORWOD",117,0)
 . ;
"RTN","ORWOD",118,0)
 . ; IV LIMIT or Duration (LIMITATION) was not integer or null
"RTN","ORWOD",119,0)
 . I ODALIMIT'?.N,ODALIMIT'="" D
"RTN","ORWOD",120,0)
 .. Q:ODALIMIT?1.2N1"D"!(ODALIMIT?1.3N1"H")!(ODALIMIT?1.4N1"ML")!(ODALIMIT?1.4N1" ML")!(ODALIMIT?1.2N1"L")!(ODALIMIT?1.4N1"CC")!(ODALIMIT?1.4N1" CC")  ;#D, #H, #ML, #L, #CC Limit OK
"RTN","ORWOD",121,0)
 .. Q:ODALIMIT?1.2N1"d"!(ODALIMIT?1.3N1"h")!(ODALIMIT?1.4N1"ml")!(ODALIMIT?1.4n1" ml")!(ODALIMIT?1.2N1"l")!(ODALIMIT?1.4N1"cc")!(ODALIMIT?1.4N1" cc")  ;#d, #h, #ml, #l, #cc Limit OK
"RTN","ORWOD",122,0)
 .. Q:ODALIMIT?1"for "1.2N1" days"  ;for # days OK
"RTN","ORWOD",123,0)
 .. Q:ODALIMIT?1.5N1"DOSES"!(ODALIMIT?1"for a total of "1.5N1" doses")  ;for a total of # doses OK
"RTN","ORWOD",124,0)
 .. Q:ODALIMIT?1"with total volume "1.2N1"L"!(ODALIMIT?1"with total volume "1.4N1"ml")
"RTN","ORWOD",125,0)
 .. Q:ODALIMIT?1"for "1.2N1" hours"
"RTN","ORWOD",126,0)
 .. D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),5,1,0)=RC,HIT=1
"RTN","ORWOD",127,0)
 . ;
"RTN","ORWOD",128,0)
 . ;AGP If IV TYPE="C" and the numbers Additive Frequency do not match the number
"RTN","ORWOD",129,0)
 . ;of additives
"RTN","ORWOD",130,0)
 . I ODATYPE="C",$$IVADFCHK^ORWDXM3(.ORDIALOG)=0 D
"RTN","ORWOD",131,0)
 ..D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),8,1,0)=RC,HIT=1
"RTN","ORWOD",132,0)
 . ;
"RTN","ORWOD",133,0)
 . ; Go get next Order Dialog entry if no problems
"RTN","ORWOD",134,0)
 . I 'HIT Q
"RTN","ORWOD",135,0)
 . ;
"RTN","ORWOD",136,0)
 . ; If Quick Order is in First List message then check
"RTN","ORWOD",137,0)
 . ; the Order Dialog file #101.41, field #58 or AUTO-ACCEPT QUICK ORDER
"RTN","ORWOD",138,0)
 . ; field.  If field #58 is set to 'Y'es then set the field to 'N'o and
"RTN","ORWOD",139,0)
 . ; then display this Quick Order in the Second List.
"RTN","ORWOD",140,0)
 . I +$P($G(^ORD(101.41,ODIENXT,5)),U,8) D
"RTN","ORWOD",141,0)
 .. S $P(^ORD(101.41,ODIENXT,5),U,8)=""  ;uncommented, sets AUTO-ACCEPT QUICK ORDER field
"RTN","ORWOD",142,0)
 .. D XSET S ^TMP("OR",$J,"QO",ANCSTR,$P(REC,U),7,1,0)=RC
"RTN","ORWOD",143,0)
 Q
"RTN","ORWOD",144,0)
 ;
"RTN","ORWOD",145,0)
GETXT(LOOKIN,SUFFIX) ;Return text occuring prior to suffix
"RTN","ORWOD",146,0)
 ; e.g. LOOKIN="INFUSE OVER 30 MINUTES",SUFFIX=" MINUTES" returns '30'
"RTN","ORWOD",147,0)
 N I,ISUFFIX,RSTRG,RTXT,STRG
"RTN","ORWOD",148,0)
 S I=0,RTXT=""
"RTN","ORWOD",149,0)
 F  S I=I+1,ISUFFIX=$P(SUFFIX,"|",I) Q:ISUFFIX=""  D:$F(LOOKIN,ISUFFIX)  Q:$G(RTXT)'=""
"RTN","ORWOD",150,0)
 . S RSTRG=$RE($E(LOOKIN,1,$F(LOOKIN,ISUFFIX)-$L(ISUFFIX)-1))
"RTN","ORWOD",151,0)
 . S RTXT=$P(RSTRG," ")
"RTN","ORWOD",152,0)
 Q $RE(RTXT)
"RTN","ORWOD",153,0)
 ;
"RTN","ORWOD",154,0)
MM ;Looks for 'MM' in Order Dialog / original code logic by James Hartin
"RTN","ORWOD",155,0)
 N ANCSTR,MMREC,NEXT,NODE3,PROMPT,VALUE
"RTN","ORWOD",156,0)
 S NEXT=1,VALUE=""
"RTN","ORWOD",157,0)
 F  S NEXT=$O(^ORD(101.41,ODIENXT,6,NEXT))  Q:NEXT'?1N.N  D
"RTN","ORWOD",158,0)
 . S VALUE=$G(^ORD(101.41,ODIENXT,6,NEXT,1)),PROMPT=+$P($G(^(0)),U,2)
"RTN","ORWOD",159,0)
 . S MMREC=^ORD(101.41,ODIENXT,0)
"RTN","ORWOD",160,0)
 . ; ODIEN^NAME^DISPLAY TEXT^VALUE
"RTN","ORWOD",161,0)
 . I PROMPT=DOSE,(VALUE["MM ") D
"RTN","ORWOD",162,0)
 .. D ANCSTR
"RTN","ORWOD",163,0)
 .. S ^TMP("OR",$J,"QO",ANCSTR,$P(MMREC,U),6,1,0)=ODIENXT_U_$P(MMREC,U)_U_$P(MMREC,U,2)_U_VALUE
"RTN","ORWOD",164,0)
 Q
"RTN","ORWOD",165,0)
 ;
"RTN","ORWOD",166,0)
MAILSU ;Set-up MAILMAN variables and format ^TMP("OR",$J,"MAIL")
"RTN","ORWOD",167,0)
 N DASH,DISPNAME,HDRLINE,LEGEND,LEGENDS,NEXT,NUM,NXTLINE,ODIENXT,ODQONAME,ORLEGEND,OROUT,QONAM,QOTOT,QORECORD,SPC
"RTN","ORWOD",168,0)
 K ^TMP("OR",$J,"MAIL")
"RTN","ORWOD",169,0)
 ;
"RTN","ORWOD",170,0)
 ;Title of emails
"RTN","ORWOD",171,0)
 S:ANCSTR="Y" XMSUB="QOs ON ORDER MENUS/SETS OR REMINDER DIALOGS: "
"RTN","ORWOD",172,0)
 S:ANCSTR="N" XMSUB="QOs NOT ON ORDER MENUS/SETS OR REMINDER DIALOGS: "
"RTN","ORWOD",173,0)
 S XMSUB=XMSUB_$$HTE^XLFDT($H)
"RTN","ORWOD",174,0)
 ;
"RTN","ORWOD",175,0)
 ;Group 1/A="IV TYPE IS NULL OR ROUTE IS NULL"
"RTN","ORWOD",176,0)
 ;Group 2/B="IV TYPE IS 'I' AND SCHEDULE IS NULL"
"RTN","ORWOD",177,0)
 ;Group 3/C="IV TYPE IS NOT 'C' OR NULL OR RATE IS NOT 1-4#.1#, INTERGER OR '@'"
"RTN","ORWOD",178,0)
 ;Group 4/D="IV TYPE IS 'I' BUT RATE NOT AN INTEGER MINUTE OR HOUR"
"RTN","ORWOD",179,0)
 ;Group 5/E="IV LIMIT OR DURATION (LIMITATION) WAS NOT NULL OR INTEGER"
"RTN","ORWOD",180,0)
 ;Group 6/F="ORDER DIALOGS WITH 'MM' IN THE DISPLAY TEXT"
"RTN","ORWOD",181,0)
 ;Group 7/G="AUTO-ACCEPT QUICK ORDER WAS 'Y'es, NOW SET TO 'N'o"
"RTN","ORWOD",182,0)
 ;Group 8/H="Number of IV Bags and additives do not matches"
"RTN","ORWOD",183,0)
 ;
"RTN","ORWOD",184,0)
 D NTRY^ORWOD1
"RTN","ORWOD",185,0)
 S ODQONAME="@",SPC="                            ",QOTOT=0
"RTN","ORWOD",186,0)
 F  S ODQONAME=$O(^TMP("OR",$J,"QO",ANCSTR,ODQONAME)) Q:ODQONAME=""  D
"RTN","ORWOD",187,0)
 . S (LEGENDS,ORLEGEND,QORECORD)=""
"RTN","ORWOD",188,0)
 . F  S ORLEGEND=$O(^TMP("OR",$J,"QO",ANCSTR,ODQONAME,ORLEGEND)) D  Q:ORLEGEND=""
"RTN","ORWOD",189,0)
 .. I ORLEGEND'="" S LEGENDS=LEGENDS_$C(ORLEGEND+64) S:$G(QORECORD)="" QORECORD=^TMP("OR",$J,"QO",ANCSTR,ODQONAME,ORLEGEND,1,0) Q
"RTN","ORWOD",190,0)
 .. S NXTLINE=NXTLINE+1,QONAM=$P(QORECORD,U,2),DISPNAME=$P(QORECORD,U,3) S:DISPNAME="" DISPNAME=SPC
"RTN","ORWOD",191,0)
 .. S OROUT=$J($P(QORECORD,U,1),5)_" "_$E(QONAM,1,30)_$E(SPC,1,30-$L(QONAM))_" "_$E(DISPNAME,1,30)_$E(SPC,1,30-$L(DISPNAME))_" "_$J(LEGENDS,6)
"RTN","ORWOD",192,0)
 .. S ^TMP("OR",$J,"MAIL",NXTLINE,0)=OROUT,QOTOT=QOTOT+1
"RTN","ORWOD",193,0)
 S NXTLINE=NXTLINE+1,^TMP("OR",$J,"MAIL",NXTLINE,0)=""
"RTN","ORWOD",194,0)
 S NXTLINE=NXTLINE+1,^TMP("OR",$J,"MAIL",NXTLINE,0)=QOTOT_" = Med Quick Orders"
"RTN","ORWOD",195,0)
 Q
"RTN","ORWOD",196,0)
 ;
"RTN","ORWOD",197,0)
SEND(XMSUB,USER) ;Send MailMan message to USER
"RTN","ORWOD",198,0)
 ; Text of message is located in ^TMP("OR",$J,"MAIL",LineNumbers0-n)
"RTN","ORWOD",199,0)
 ; Subject is the string XMSUB.
"RTN","ORWOD",200,0)
 N MGIEN,MGROUP,NL,REF,XMDUZ,XMY,XMZ
"RTN","ORWOD",201,0)
 ;
"RTN","ORWOD",202,0)
 ;Subject '> 64 characters.
"RTN","ORWOD",203,0)
 S XMSUB=$E(XMSUB,1,64)
"RTN","ORWOD",204,0)
 ;Sender is Postmaster.
"RTN","ORWOD",205,0)
 S XMDUZ=0.5
"RTN","ORWOD",206,0)
 ;
"RTN","ORWOD",207,0)
RETRY ;Get message number.
"RTN","ORWOD",208,0)
 D XMZ^XMA2
"RTN","ORWOD",209,0)
 I XMZ<1 G RETRY
"RTN","ORWOD",210,0)
 ;
"RTN","ORWOD",211,0)
 ;Load message
"RTN","ORWOD",212,0)
 M ^XMB(3.9,XMZ,2)=^TMP("OR",$J,"MAIL")
"RTN","ORWOD",213,0)
 S NL=$O(^XMB(3.9,XMZ,2,""),-1)
"RTN","ORWOD",214,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","ORWOD",215,0)
 ;
"RTN","ORWOD",216,0)
 ;Send message to USER
"RTN","ORWOD",217,0)
 I $G(USER)'="" S XMY(DUZ)="" D ENT1^XMD Q
"RTN","ORWOD",218,0)
 W !,"Error: No USER defined..message not sent!"
"RTN","ORWOD",219,0)
 Q
"RTN","ORWOD",220,0)
 ;
"RTN","ORWOD",221,0)
CLEANUP ; Clean-up
"RTN","ORWOD",222,0)
 K ^TMP("OR",$J)
"RTN","ORWOD",223,0)
 Q
"RTN","ORWOD1")
0^62^B41715088
"RTN","ORWOD1",1,0)
ORWOD1 ; SLC/GSS - Utility for Order Dialogs ; 10/01/09 11:28am
"RTN","ORWOD1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**243,296,280**;DEC 17, 1997;Build 85
"RTN","ORWOD1",3,0)
 ;
"RTN","ORWOD1",4,0)
NTRY ;Entry point
"RTN","ORWOD1",5,0)
 N TXT
"RTN","ORWOD1",6,0)
 F NXTLINE=1:1 S TXT=$P($T(TXT+NXTLINE),";;",2) Q:TXT="Q"  S ^TMP("OR",$J,"MAIL",NXTLINE,0)=TXT
"RTN","ORWOD1",7,0)
 Q
"RTN","ORWOD1",8,0)
TXT ;Text for report follows
"RTN","ORWOD1",9,0)
 ;;         Quick Orders Which Should be Considered for Editing
"RTN","ORWOD1",10,0)
 ;;
"RTN","ORWOD1",11,0)
 ;;CPRS 27 has added three new fields (Route, IV Type, and Schedule) to the
"RTN","ORWOD1",12,0)
 ;;IV Order Dialog. For all IV orders the Route and IV Type must be defined.
"RTN","ORWOD1",13,0)
 ;;For Intermittent IV Type orders the schedule field must be defined. CPRS
"RTN","ORWOD1",14,0)
 ;;will not process the orders unless these fields are defined.
"RTN","ORWOD1",15,0)
 ;;
"RTN","ORWOD1",16,0)
 ;;The following table of Quick Orders (QO) was compiled by examining the
"RTN","ORWOD1",17,0)
 ;;QOs and whether or not they were contained in another entry of the Order
"RTN","ORWOD1",18,0)
 ;;Dialog file, e.g., Order Menu, Order Set and/or the Reminder Dialog
"RTN","ORWOD1",19,0)
 ;;file. QOs which are contained in those files should be edited ASAP after
"RTN","ORWOD1",20,0)
 ;;CPRS v27 is installed. QOs not contained in those files are less critical
"RTN","ORWOD1",21,0)
 ;;but should still be edited. Note that if the ORCM SEARCH/REPLACE option
"RTN","ORWOD1",22,0)
 ;;is used, it does not look for usage in the Reminder Dialog file and thus
"RTN","ORWOD1",23,0)
 ;;may give different results than the table below.
"RTN","ORWOD1",24,0)
 ;;
"RTN","ORWOD1",25,0)
 ;;The Quick Orders are listed in alphabetical order by QO name and include
"RTN","ORWOD1",26,0)
 ;;the QO's IEN (internal reference number), display name, and Legend code.
"RTN","ORWOD1",27,0)
 ;;The Legend code corresponds to a letter or letters in the Legend (see
"RTN","ORWOD1",28,0)
 ;;below.) You will need to evaluate each quick order and update it based on
"RTN","ORWOD1",29,0)
 ;;the Legend code(s).
"RTN","ORWOD1",30,0)
 ;;
"RTN","ORWOD1",31,0)
 ;;A Quick Order can be edited by using the "Enter/edit quick orders" option
"RTN","ORWOD1",32,0)
 ;;on the Order Menu Management menu in VistA (roll and scroll). At the
"RTN","ORWOD1",33,0)
 ;;prompt, "Select QUICK ORDER NAME:", enter the name of the Quick Order.
"RTN","ORWOD1",34,0)
 ;;The QO will then be displayed for your editing.  The "Enter/edit quick
"RTN","ORWOD1",35,0)
 ;;orders" option can also be used to edit a Personal Quick Order.
"RTN","ORWOD1",36,0)
 ;;
"RTN","ORWOD1",37,0)
 ;;Additionally, when OR*3.0*301 is released, it will include a new option
"RTN","ORWOD1",38,0)
 ;;entitled, Convert IV Inpatient QO to Infusion QO [OR CONVERT INP TO QO].
"RTN","ORWOD1",39,0)
 ;;This option will be on the ORDER MENU MANAGEMENT [ORCM MENU] menu. This
"RTN","ORWOD1",40,0)
 ;;option enables CACs at sites to convert an IV quick order that is set-up
"RTN","ORWOD1",41,0)
 ;;as an Inpatient quick order to the new Infusion quick order format. 
"RTN","ORWOD1",42,0)
 ;;
"RTN","ORWOD1",43,0)
 ;;QO Edit Hint:
"RTN","ORWOD1",44,0)
 ;;In addition to entering the QO name, users may also edit a Quick Order by
"RTN","ORWOD1",45,0)
 ;;entering the back tick (`) and the IEN at the "Select QUICK ORDER NAME:"
"RTN","ORWOD1",46,0)
 ;;prompt. For example, if the Quick Order name is PSI SICU CAM DOBUTAMINE 500
"RTN","ORWOD1",47,0)
 ;;MG and the IEN is 6200, a user may enter "`6200" at the "Select QUICK ORDER
"RTN","ORWOD1",48,0)
 ;;NAME:" prompt. This will save the time required to type the name of the Quick
"RTN","ORWOD1",49,0)
 ;;Order in at the "Select QUICK ORDER NAME:" prompt.
"RTN","ORWOD1",50,0)
 ;;
"RTN","ORWOD1",51,0)
 ;;Note: The term 'null', as used below, can be viewed as meaning 'not defined'.
"RTN","ORWOD1",52,0)
 ;;
"RTN","ORWOD1",53,0)
 ;;Legend:
"RTN","ORWOD1",54,0)
 ;;A...Problem: The IV type is null or the route is null.
"RTN","ORWOD1",55,0)
 ;;    Action:  Please edit the IV Type or route fields with the appropriate
"RTN","ORWOD1",56,0)
 ;;      information.
"RTN","ORWOD1",57,0)
 ;;B...Problem: The IV type is 'I' and the schedule is null.
"RTN","ORWOD1",58,0)
 ;;    Action:  For Intermittent IV Orders a schedule is needed to process the
"RTN","ORWOD1",59,0)
 ;;      order.  Enter a schedule which denotes the Intermittent IV dose.
"RTN","ORWOD1",60,0)
 ;;C...Problem: Continuous IV Type does not have a rate defined. When accepting
"RTN","ORWOD1",61,0)
 ;;      the order in CPRS, rate is required and must be between 1 and 9999.9,
"RTN","ORWOD1",62,0)
 ;;      a whole number, or text that contains an '@'. Some continuous IV Type
"RTN","ORWOD1",63,0)
 ;;      Quick Orders may not include a rate to allow provider to define at
"RTN","ORWOD1",64,0)
 ;;      time of order.
"RTN","ORWOD1",65,0)
 ;;    Action:  Evaluate need for rate default and assign in Quick Order if
"RTN","ORWOD1",66,0)
 ;;      appropriate. The infusion rate must be a number up to four digits and
"RTN","ORWOD1",67,0)
 ;;      it will allow up to one decimal place. If IV Type is not defined in
"RTN","ORWOD1",68,0)
 ;;      the Quick Order, then an IV Type must be defined in the Quick Order
"RTN","ORWOD1",69,0)
 ;;      set-up.
"RTN","ORWOD1",70,0)
 ;;D...Problem:  The IV type is 'I' but the rate is not a whole number minute
"RTN","ORWOD1",71,0)
 ;;      or hour yet not null.
"RTN","ORWOD1",72,0)
 ;;    Action:  A valid "Infuse Over" value must be assigned to the Quick
"RTN","ORWOD1",73,0)
 ;;      Order. Using the Quick Order Editor, add an "Infuse Over" value in
"RTN","ORWOD1",74,0)
 ;;      the number of minutes (maximum of 9999).
"RTN","ORWOD1",75,0)
 ;;E...Problem:  The IV limit or duration (limitation) value was other than
"RTN","ORWOD1",76,0)
 ;;      null or a whole number.
"RTN","ORWOD1",77,0)
 ;;    Action:  This field is not required but if it exists, it must be a
"RTN","ORWOD1",78,0)
 ;;      whole number. To correct this, follow the Help Text for the Limitation
"RTN","ORWOD1",79,0)
 ;;      Prompt in the Quick Order editor for this Quick Order.
"RTN","ORWOD1",80,0)
 ;;F...Problem:  The Order Dialogs with 'MM' in the display text
"RTN","ORWOD1",81,0)
 ;;    Action:  MMOL (millimole) has been added as a unit of measure.  Please 
"RTN","ORWOD1",82,0)
 ;;      replace 'MM' with MMOL.
"RTN","ORWOD1",83,0)
 ;;G...Problem:  Auto Accept Quick Order which was 'Y'es and now set to 'N'o.
"RTN","ORWOD1",84,0)
 ;;    Action:  These Quick Orders were converted from an Auto Accept Quick
"RTN","ORWOD1",85,0)
 ;;      Order to a non-Auto Accept Quick because they have at least one
"RTN","ORWOD1",86,0)
 ;;      invalid field. Please correct the problems identified by the Legend
"RTN","ORWOD1",87,0)
 ;;      code(s) for the Quick Order before setting the Quick Order back to
"RTN","ORWOD1",88,0)
 ;;      an Auto-Accept Quick Order.
"RTN","ORWOD1",89,0)
 ;;
"RTN","ORWOD1",90,0)
 ;;H...Problem:  Continuous IV Quick Orders do not have an Additive Frequency assigned for every additives.
"RTN","ORWOD1",91,0)
 ;;    Action:  These Quick Orders need to have an Additive Frequency value assigned for
"RTN","ORWOD1",92,0)
 ;;      each additive in the quick order.
"RTN","ORWOD1",93,0)
 ;;      
"RTN","ORWOD1",94,0)
 ;;Note: QO Names and QO Display Names over 30 characters are truncated at 30
"RTN","ORWOD1",95,0)
 ;;      characters.  If in doubt on the Name you can use the IEN to edit the
"RTN","ORWOD1",96,0)
 ;;      Quick Order (see above).
"RTN","ORWOD1",97,0)
 ;;
"RTN","ORWOD1",98,0)
 ;;                            -----------------------
"RTN","ORWOD1",99,0)
 ;;                            
"RTN","ORWOD1",100,0)
 ;;  IEN Name                           Display Name                   Legend
"RTN","ORWOD1",101,0)
 ;;===== ============================== ============================== ======
"RTN","ORWOD1",102,0)
 ;;Q
"RTN","ORWOR")
0^43^B42631980
"RTN","ORWOR",1,0)
ORWOR ; SLC/KCM - Orders Calls ;09/07/10  14:01
"RTN","ORWOR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,141,163,187,190,215,243,307,330,280**;Dec 17, 1997;Build 85
"RTN","ORWOR",3,0)
 ;
"RTN","ORWOR",4,0)
CURRENT(LST,DFN) ; Get Current Orders for a Patient
"RTN","ORWOR",5,0)
 ; Returns two lists in ^TMP("ORW",$J), fields and text
"RTN","ORWOR",6,0)
 N TM,IEN,X,X0,X3,CTR,IDX,I
"RTN","ORWOR",7,0)
 K ^TMP("ORW",$J)
"RTN","ORWOR",8,0)
 S IDX=0,DFN=DFN_";DPT("
"RTN","ORWOR",9,0)
 S TM=0 F  S TM=$O(^OR(100,"AC",DFN,TM)) Q:TM<1  D
"RTN","ORWOR",10,0)
 . S IEN=0 F  S IEN=$O(^OR(100,"AC",DFN,TM,IEN)) Q:IEN<1  D
"RTN","ORWOR",11,0)
 . . S X0=^OR(100,IEN,0),X3=^(3)
"RTN","ORWOR",12,0)
 . . S X=IEN_U_$P(X0,U,7)_U_$P(X0,U,11)_U_$P(X3,U,6)_U_$P(X3,U,3)
"RTN","ORWOR",13,0)
 . . S ^TMP("ORW",$J,IDX+1)=X
"RTN","ORWOR",14,0)
 . . S (CTR,I)=0,X=""
"RTN","ORWOR",15,0)
 . . F  S I=$O(^OR(100,IEN,1,I)) Q:I<1  D  Q:CTR>244
"RTN","ORWOR",16,0)
 . . . S X=X_$E(^OR(100,IEN,1,I,0),1,(245-CTR)),CTR=$L(X)
"RTN","ORWOR",17,0)
 . . S ^TMP("ORW",$J,IDX+2)=X,IDX=IDX+2
"RTN","ORWOR",18,0)
 ; S LST=$NA(^TMP("ORW",$J))
"RTN","ORWOR",19,0)
 M LST=^TMP("ORW",$J)
"RTN","ORWOR",20,0)
 Q
"RTN","ORWOR",21,0)
DETAIL(LST,ORID,DFN)    ; Return details of ORID (shell to kill VIDEO subs)
"RTN","ORWOR",22,0)
 Q:'+ORID
"RTN","ORWOR",23,0)
 I $G(DFN) N ORVP S ORVP=DFN_";DPT("
"RTN","ORWOR",24,0)
 S LST="^TMP(""ORTXT"",$J)"
"RTN","ORWOR",25,0)
 D DETAIL^ORQ2(.LST,ORID)
"RTN","ORWOR",26,0)
 K @LST@("VIDEO")
"RTN","ORWOR",27,0)
 S LST=$NA(^TMP("ORTXT",$J)),@LST=""
"RTN","ORWOR",28,0)
 Q
"RTN","ORWOR",29,0)
RESULT(REF,DFN,ORID,ID)      ; Return results of order identified by ID
"RTN","ORWOR",30,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",31,0)
 N ORESULTS,ORVP,LCNT S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",32,0)
 D ORDERS^ORCXPND1
"RTN","ORWOR",33,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",34,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",35,0)
 Q
"RTN","ORWOR",36,0)
RESHIST(REF,DFN,ORID,ID)      ; Return result history of associated tests identified by ID
"RTN","ORWOR",37,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWOR",38,0)
 N ORESULTS,ORVP,LCNT
"RTN","ORWOR",39,0)
 S ORESULTS=1,LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWOR",40,0)
 D ORDHIST^ORWOR2
"RTN","ORWOR",41,0)
 K ^TMP("ORXPND",$J,"VIDEO")
"RTN","ORWOR",42,0)
 S REF=$NA(^TMP("ORXPND",$J))
"RTN","ORWOR",43,0)
 Q
"RTN","ORWOR",44,0)
TSALL(LST)      ; Return list of treating specialties
"RTN","ORWOR",45,0)
 N Y S Y=0
"RTN","ORWOR",46,0)
 F  S Y=$O(^DIC(45.7,Y)) Q:'Y  I $$ACTIVE^DGACT(45.7,Y) S LST(Y)=Y_U_$P(^DIC(45.7,Y,0),U)
"RTN","ORWOR",47,0)
 Q
"RTN","ORWOR",48,0)
DT(X) ; -- Returns FM date for X (SEE ORCHTAB1)
"RTN","ORWOR",49,0)
 N Y,%DT S %DT="T",Y="" D:X'="" ^%DT
"RTN","ORWOR",50,0)
 Q +Y
"RTN","ORWOR",51,0)
VWSET(ORERR,VIEW)       ; Set the preferred view for orders
"RTN","ORWOR",52,0)
 ; VIEW:  semi-colon delimited record
"RTN","ORWOR",53,0)
 ;        1 - Relative From Date/Time or ""
"RTN","ORWOR",54,0)
 ;        2 - Relative Thru Date/Time or ""
"RTN","ORWOR",55,0)
 ;        3 - Filter
"RTN","ORWOR",56,0)
 ;        4 - Display Group Pointer
"RTN","ORWOR",57,0)
 ;        5 - Format (preserve for list manager)
"RTN","ORWOR",58,0)
 ;        6 - chronological display (R or F)
"RTN","ORWOR",59,0)
 ;        7 - sort by display group
"RTN","ORWOR",60,0)
 N FMT
"RTN","ORWOR",61,0)
 ; use short name for display group instead of pointer
"RTN","ORWOR",62,0)
 I $E($P(VIEW,";",2))="T" S $P(VIEW,";",2)=$P($P(VIEW,";",2),"@") ;allows all orders for Today
"RTN","ORWOR",63,0)
 S $P(VIEW,";",4)=$P($G(^ORD(100.98,+$P(VIEW,";",4),0)),U,3)
"RTN","ORWOR",64,0)
 ; use last saved format, since this is used only by LM
"RTN","ORWOR",65,0)
 S FMT=$P($$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),";",5)
"RTN","ORWOR",66,0)
 S:'$L(FMT) FMT="L" S $P(VIEW,";",5)=FMT
"RTN","ORWOR",67,0)
 ; and save the parameter
"RTN","ORWOR",68,0)
 D EN^XPAR(DUZ_";VA(200,","ORCH CONTEXT ORDERS",1,VIEW,.ORERR)
"RTN","ORWOR",69,0)
 Q
"RTN","ORWOR",70,0)
VWGET(REC)      ; Get the preferred view for orders
"RTN","ORWOR",71,0)
 N FROM,THRU,FILTER,DGRP,FRMT,CHRN,BYGRP,S,VNAME,FL,I
"RTN","ORWOR",72,0)
 S REC=$$GET^XPAR("ALL","ORCH CONTEXT ORDERS",1,"I"),S=";"
"RTN","ORWOR",73,0)
 S FROM=$$DT($P(REC,S)),THRU=$$DT($P(REC,S,2)),FILTER=$P(REC,S,3)
"RTN","ORWOR",74,0)
 S DGRP=$P(REC,S,4),FRMT=$P(REC,S,5),CHRN=$P(REC,S,6),BYGRP=$P(REC,S,7)
"RTN","ORWOR",75,0)
 S:'$L(DGRP) DGRP="ALL" S DGRP=+$O(^ORD(100.98,"B",DGRP,0))
"RTN","ORWOR",76,0)
 I FILTER="" S FILTER=2  ; active orders
"RTN","ORWOR",77,0)
 I CHRN="" S CHRN="R"    ; reverse chronological
"RTN","ORWOR",78,0)
 I BYGRP="" S BYGRP=1    ; sort by display group
"RTN","ORWOR",79,0)
 ; set up view name
"RTN","ORWOR",80,0)
 D REVSTS^ORWORDG(.FL)
"RTN","ORWOR",81,0)
 S I=0 F  S I=$O(FL(I)) Q:'I  Q:+FL(I)=FILTER
"RTN","ORWOR",82,0)
 S VNAME=$P($G(FL(+I)),U,2)
"RTN","ORWOR",83,0)
 I '("^6^8^9^10^19^20^"[(U_FILTER_U)) S VNAME=VNAME_" Orders"
"RTN","ORWOR",84,0)
 I FILTER=2 S VNAME="Active Orders (includes Pending & Recent Activity)"
"RTN","ORWOR",85,0)
 I FILTER=23 S VNAME="Current Orders (Active & Pending Status Only)"
"RTN","ORWOR",86,0)
 S VNAME=VNAME_" - "_$P($G(^ORD(100.98,DGRP,0)),U)
"RTN","ORWOR",87,0)
 I (FROM>0)!(THRU>0) D
"RTN","ORWOR",88,0)
 . S VNAME=VNAME_" ("_$$FMTE^XLFDT(FROM,"2D")_" thru "
"RTN","ORWOR",89,0)
 . S VNAME=VNAME_$S(THRU>0:$$FMTE^XLFDT(THRU,"2D"),1:"")_")"
"RTN","ORWOR",90,0)
 S REC=FROM_S_THRU_S_FILTER_S_DGRP_S_FRMT_S_CHRN_S_BYGRP_S_VNAME
"RTN","ORWOR",91,0)
 Q
"RTN","ORWOR",92,0)
SHEETS(LST,ORVP) ; Return Order Sheets for a patient
"RTN","ORWOR",93,0)
 N ELST,ETYP,ORIFN,TS,I
"RTN","ORWOR",94,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",95,0)
 S ETYP="" F  S ETYP=$O(^OR(100,"AEVNT",ORVP,ETYP)) Q:ETYP=""  D
"RTN","ORWOR",96,0)
 . S ORIFN=0 F  S ORIFN=$O(^OR(100,"AEVNT",ORVP,ETYP,ORIFN)) Q:'ORIFN  D
"RTN","ORWOR",97,0)
 . . I (ETYP="A")!(ETYP="T") S ELST(ETYP,$P($G(^OR(100,+ORIFN,0)),U,13))=""
"RTN","ORWOR",98,0)
 S LST(1)="C;O^Current View",I=1
"RTN","ORWOR",99,0)
 S TS="" F  S TS=$O(ELST("A",TS)) Q:TS=""  D
"RTN","ORWOR",100,0)
 . S I=I+1,LST(I)="A;"_TS_U_"Admit to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",101,0)
 S I=I+1,LST(I)="A;-1^Admit..."
"RTN","ORWOR",102,0)
 S TS="" F  S TS=$O(ELST("T",TS)) Q:TS=""  D
"RTN","ORWOR",103,0)
 . S I=I+1,LST(I)="T;"_TS_U_"Transfer to "_$P($G(^DIC(45.7,TS,0)),U)
"RTN","ORWOR",104,0)
 I $L($G(^DPT(+ORVP,.1))) D
"RTN","ORWOR",105,0)
 . S I=I+1,LST(I)="T;-1^Transfer..."
"RTN","ORWOR",106,0)
 . S I=I+1,LST(I)="D;0^Discharge"
"RTN","ORWOR",107,0)
 Q
"RTN","ORWOR",108,0)
EVENTS(LST,EVT) ; Return general delayed events categories for a patient
"RTN","ORWOR",109,0)
 N EVTI
"RTN","ORWOR",110,0)
 S EVTI=0
"RTN","ORWOR",111,0)
 S EVTI=EVTI+1,LST(EVTI)="A;-1^Admit..."
"RTN","ORWOR",112,0)
 S EVTI=EVTI+1,LST(EVTI)="T;-1^Transfer..."
"RTN","ORWOR",113,0)
 S EVTI=EVTI+1,LST(EVTI)="D;0^Discharge"
"RTN","ORWOR",114,0)
 Q
"RTN","ORWOR",115,0)
UNSIGN(LST,ORVP,HAVE)   ; Return Unsigned Orders that are not on client
"RTN","ORWOR",116,0)
 N DC,DEL,DG,IFN,ACT,X0,X3,X8,ENT,LVL,TM,ILST,ORELSE
"RTN","ORWOR",117,0)
 S ILST=0
"RTN","ORWOR",118,0)
 Q:'$D(^XUSEC("ORES",DUZ))&('$D(^XUSEC("ORELSE",DUZ))&'$D(^ORAM(103,+ORVP)))
"RTN","ORWOR",119,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWOR",120,0)
 S ENT="ALL"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+^(5),1:"")
"RTN","ORWOR",121,0)
 S LVL=$$GET^XPAR(ENT,"OR UNSIGNED ORDERS ON EXIT")
"RTN","ORWOR",122,0)
 ; Nurses only see their own unsigned orders, independent of OR UNSIGNED ORDERS ON EXIT
"RTN","ORWOR",123,0)
 S ORELSE=$D(^XUSEC("ORELSE",DUZ))
"RTN","ORWOR",124,0)
 I ORELSE S LVL=1
"RTN","ORWOR",125,0)
 Q:'LVL
"RTN","ORWOR",126,0)
 S TM=0 F  S TM=$O(^OR(100,"AS",ORVP,TM)) Q:TM<1  D
"RTN","ORWOR",127,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AS",ORVP,TM,IFN)) Q:IFN<1  D
"RTN","ORWOR",128,0)
 . . S ACT=0 F  S ACT=$O(^OR(100,"AS",ORVP,TM,IFN,ACT)) Q:ACT<1  D
"RTN","ORWOR",129,0)
 . . . Q:$D(HAVE(IFN_";"_ACT))  ;in Changes
"RTN","ORWOR",130,0)
 . . . S X0=$G(^OR(100,IFN,0)),X3=$G(^OR(100,IFN,3))
"RTN","ORWOR",131,0)
 . . . S X8=$G(^OR(100,IFN,8,ACT,0))
"RTN","ORWOR",132,0)
 . . . ;determine Display Group
"RTN","ORWOR",133,0)
 . . . S DG=$P($G(^ORD(100.98,$P(X0,U,11),0)),U,2)
"RTN","ORWOR",134,0)
 . . . ;determine if DC
"RTN","ORWOR",135,0)
 . . . S DC=$S($P(X8,U,2)="DC":1,1:0)
"RTN","ORWOR",136,0)
 . . . ;determine if Delay
"RTN","ORWOR",137,0)
 . . . S DEL=$$CHKORD^OREVNTX1(IFN)
"RTN","ORWOR",138,0)
 . . . I '$S(LVL=1&($P(X8,U,3)=DUZ):1,ORELSE&($P(X8,U,13)=DUZ):1,LVL=2:1,1:0) Q  ;chk user
"RTN","ORWOR",139,0)
 . . . ;if Nurse, and order is already released or held for signature, don't include in list
"RTN","ORWOR",140,0)
 . . . I ORELSE,$S((+$P(X8,U,16)>0):1,$D(^OR(100,IFN,5)):1,1:0) Q
"RTN","ORWOR",141,0)
 . . . S ILST=ILST+1,LST(ILST)=IFN_";"_ACT_U_$P(X8,U,3)_U_DG_U_DC_U_DEL
"RTN","ORWOR",142,0)
 Q
"RTN","ORWOR",143,0)
PKIUSE(RETURN) ; RPC determines user can use PKI Digital Signature
"RTN","ORWOR",144,0)
 S RETURN=0
"RTN","ORWOR",145,0)
 I $$GET^XPAR("ALL^USR.`"_DUZ,"ORWOR PKI USE",1,"Q") S RETURN=1
"RTN","ORWOR",146,0)
 Q
"RTN","ORWOR",147,0)
PKISITE(RETURN) ; RPC determines if PKI is turned on at the site
"RTN","ORWOR",148,0)
 S RETURN=0
"RTN","ORWOR",149,0)
 Q:'$L($T(STORESIG^XUSSPKI))  ;Check for Kernel piece
"RTN","ORWOR",150,0)
 Q:'$L($T(DOSE^PSSOPKI1))  ;Check for Pharmacy piece
"RTN","ORWOR",151,0)
 I $$GET^XPAR("ALL","ORWOR PKI SITE",1,"Q") S RETURN=1
"RTN","ORWOR",152,0)
 Q
"RTN","ORWOR",153,0)
ACTXT(ORY,ORIFN) ;Return detail action information
"RTN","ORWOR",154,0)
 N ORI,CNT,OR0,OR3,OR6,ACTION
"RTN","ORWOR",155,0)
 K ^TMP("ORACTXT",$J)
"RTN","ORWOR",156,0)
 S ORY="^TMP(""ORACTXT"",$J)",ORI=$P(ORIFN,";",2)
"RTN","ORWOR",157,0)
 S CNT=0,ORIFN=+ORIFN,OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)),OR6=$G(^(6))
"RTN","ORWOR",158,0)
 F  S ORI=$O(^OR(100,+ORIFN,8,ORI)) Q:ORI'>0  S ACTION=$G(^(ORI,0)) D ACT^ORQ20
"RTN","ORWOR",159,0)
 S ORY=$NA(^TMP("ORACTXT",$J)),@ORY=""
"RTN","ORWOR",160,0)
 Q
"RTN","ORWOR",161,0)
EXPIRED(ORY) ;return FM date/time to begin search for expired orders
"RTN","ORWOR",162,0)
 N HRS
"RTN","ORWOR",163,0)
 S HRS=$$GET^XPAR("ALL","ORWOR EXPIRED ORDERS",1,"I")
"RTN","ORWOR",164,0)
 S ORY=$$FMADD^XLFDT($$NOW^XLFDT,"","-"_HRS,"","")
"RTN","ORWOR",165,0)
 Q
"RTN","ORWORR")
0^44^B67327939
"RTN","ORWORR",1,0)
ORWORR ; SLC/KCM/JLI - Retrieve Orders for Broker ;8/24/09
"RTN","ORWORR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,92,116,110,132,141,163,189,195,215,243,280**;Dec 17, 1997;Build 85
"RTN","ORWORR",3,0)
 ;
"RTN","ORWORR",4,0)
GET(LST,DFN,FILTER,GROUPS) ; procedure
"RTN","ORWORR",5,0)
 Q  ; don't call until using same treating specialty logic as AGET
"RTN","ORWORR",6,0)
 ;    & until MULT, ORWARD, & ORIGVIEW implemented
"RTN","ORWORR",7,0)
 ;    & until the date ranges implemented
"RTN","ORWORR",8,0)
 ; Get orders for patient
"RTN","ORWORR",9,0)
 ;        1   2    3     4      5     6   7   8   9   10     11    12    13    14     15     16 17    18
"RTN","ORWORR",10,0)
 ; .LST=~IFN^Grp^ActTm^StrtTm^StopTm^Sts^Sig^Nrs^Clk^PrvID^PrvNam^ActDA^Flag^DCType^ChrtRev^DEA#^^Schedule
"RTN","ORWORR",11,0)
 ; .LST=tOrder Text (repeating as necessary)
"RTN","ORWORR",12,0)
 ;     DFN=Patient ID
"RTN","ORWORR",13,0)
 ;  FILTER=# indicates which orders to return, default=2 (current)
"RTN","ORWORR",14,0)
 ;  GROUPS=display grp of orders to show (default=ALL)
"RTN","ORWORR",15,0)
 ; -- section uses ORQ1 to get orders list rather than XGET --
"RTN","ORWORR",16,0)
 N ORLIST,ORIFN,X0,X3,X8,IDX,IFN,ACT,PRV,LN,TXT,STRT,STOP,CSTS,EYE,DEA ;PKI
"RTN","ORWORR",17,0)
 K ^TMP("ORR",$J)
"RTN","ORWORR",18,0)
 S (IDX,LST)=0 S:'$D(GROUPS) GROUPS=1 S:'$D(FILTER) FILTER=2
"RTN","ORWORR",19,0)
 D EN^ORQ1(DFN_";DPT(",GROUPS,FILTER,"","","",0,1)
"RTN","ORWORR",20,0)
 S EYE=0 F  S EYE=$O(^TMP("ORR",$J,ORLIST,EYE)) Q:'EYE  S IFN=^(EYE) D
"RTN","ORWORR",21,0)
 . S ACT=$P(IFN,";",2),IFN=+IFN,X0=^OR(100,IFN,0),X3=^(3),X8=^(8,ACT,0)
"RTN","ORWORR",22,0)
 . D GETFLDS
"RTN","ORWORR",23,0)
 K ^TMP("ORR",$J)
"RTN","ORWORR",24,0)
 G EXIT
"RTN","ORWORR",25,0)
AGET(REF,DFN,FILTER,GROUPS,DTFROM,DTTHRU,EVENT,ORRECIP) ;Get abbrev. event delayed order list for patient 
"RTN","ORWORR",26,0)
 ; returns ^TMP("ORR",$J,ORLIST,n)=IFN^DGrp^ActTm
"RTN","ORWORR",27,0)
 ; see input parameters above
"RTN","ORWORR",28,0)
 ; -- from ORWORR
"RTN","ORWORR",29,0)
 ; -- section uses ORQ1 to get orders list rather than XGET --
"RTN","ORWORR",30,0)
 N ORLIST,ORIFN,IFN,I,ORWTS,TOT,MULT,ORWARD,TXTVW,ORYD,PTEVTID,EVTNAME
"RTN","ORWORR",31,0)
 S (PTEVTID,EVTNAME)=""
"RTN","ORWORR",32,0)
 K ^TMP("ORR",$J),^TMP("ORRJD",$J)
"RTN","ORWORR",33,0)
 S:'$D(GROUPS) GROUPS=1 S:'$D(FILTER) FILTER=2
"RTN","ORWORR",34,0)
 S ORWTS=+$P(FILTER,U,2),FILTER=+FILTER
"RTN","ORWORR",35,0)
 S MULT=$S("^1^6^8^9^10^11^13^14^20^22^"[(U_FILTER_U):1,1:0)
"RTN","ORWORR",36,0)
 I $L($G(^DPT(DFN,.1))) S ORWARD=1 ; normally ptr to 42
"RTN","ORWORR",37,0)
 S:'$L($G(DTFROM)) DTFROM=0
"RTN","ORWORR",38,0)
 S:'$L($G(DTTHRU)) DTTHRU=0
"RTN","ORWORR",39,0)
 I $P(DTFROM,".")=$P(DTTHRU,"."),$P(DTFROM,".",2)>$P(DTTHRU,".",2),$P(DTTHRU,".",2)="" S $P(DTTHRU,".",2)=2359
"RTN","ORWORR",40,0)
 S:'$L($G(EVENT)) EVENT=0
"RTN","ORWORR",41,0)
 I $G(EVTDCREL)="TRUE" D
"RTN","ORWORR",42,0)
 . D EN^ORQ1(DFN_";DPT(",GROUPS,FILTER,"",DTFROM,DTTHRU,2,MULT,"",1,EVENT)
"RTN","ORWORR",43,0)
 . D GET2^ORWORR1
"RTN","ORWORR",44,0)
 E  D
"RTN","ORWORR",45,0)
 . D EN^ORQ1(DFN_";DPT(",GROUPS,FILTER,"",DTFROM,DTTHRU,0,MULT,"",1,EVENT)
"RTN","ORWORR",46,0)
 . D GET1^ORWORR1
"RTN","ORWORR",47,0)
 Q
"RTN","ORWORR",48,0)
RGET(REF,DFN,FILTER,GROUPS,DTFROM,DTTHRU,EVENT) ;Orders of AutoDC/Release Event
"RTN","ORWORR",49,0)
 N EVTDCREL
"RTN","ORWORR",50,0)
 S EVTDCREL="TRUE"
"RTN","ORWORR",51,0)
 D AGET(.REF,DFN,FILTER,GROUPS,DTFROM,DTTHRU,EVENT)
"RTN","ORWORR",52,0)
 Q
"RTN","ORWORR",53,0)
XGET ; retrieval algorithm before all the AC xref changes
"RTN","ORWORR",54,0)
 N X,X0,X3,IDX,IFN,LN,TIME,DGRP,MASK,TXT,ACT,PRV,ID,DEA,PASS ;PKI
"RTN","ORWORR",55,0)
 S DFN=DFN_";DPT(",IDX=0,LST=0
"RTN","ORWORR",56,0)
 I '$G(FILTER) S FILTER=2                    ; Default: Current/Active
"RTN","ORWORR",57,0)
 I $D(GROUPS)=1 D
"RTN","ORWORR",58,0)
 . S:'GROUPS GROUPS=$O(^ORD(100.98,"B",GROUPS,0))
"RTN","ORWORR",59,0)
 . D XPND(GROUPS)
"RTN","ORWORR",60,0)
 I FILTER=1  D DOALL G EXIT                  ; All
"RTN","ORWORR",61,0)
 I FILTER=2  D DOCUR G EXIT                  ; Current
"RTN","ORWORR",62,0)
 I FILTER=3  S PASS=";1;"                    ; Discontinued
"RTN","ORWORR",63,0)
 I FILTER=4  S PASS=";2;7;"                  ; Comp/Expired
"RTN","ORWORR",64,0)
 I FILTER=5  S PASS=";3;4;5;6;8;9;"          ; Expiring
"RTN","ORWORR",65,0)
 I FILTER=6  S PASS=";1;2;3;4;5;6;7;8;9;11;" ; New Activity
"RTN","ORWORR",66,0)
 I FILTER=7  S PASS=";5;"                    ; Pending
"RTN","ORWORR",67,0)
 I FILTER=8  Q                               ; Expanded
"RTN","ORWORR",68,0)
 I FILTER=9  S PASS=";3;4;5;6;8;9;11;"       ; Unverified by Nurse
"RTN","ORWORR",69,0)
 I FILTER=10 S PASS=";3;4;5;6;8;9;11;"       ; Unverified by Clerk
"RTN","ORWORR",70,0)
 I FILTER=11 S PASS=";3;4;5;6;7;8;11;"       ; Unsigned
"RTN","ORWORR",71,0)
 I FILTER=12 S PASS=";4;"                    ; Flagged
"RTN","ORWORR",72,0)
 I FILTER=13 S PASS=""                       ; Verbal/Phone
"RTN","ORWORR",73,0)
 I FILTER=14 S PASS=""                       ; Verbal/Phone Unsigned
"RTN","ORWORR",74,0)
 D DOGET
"RTN","ORWORR",75,0)
EXIT I LST=0 D
"RTN","ORWORR",76,0)
 . N %,X,%I D NOW^%DTC
"RTN","ORWORR",77,0)
 . S LST(1)="~0^0^"_%_"^^^97",LST(2)="tNo Orders Found."
"RTN","ORWORR",78,0)
 Q
"RTN","ORWORR",79,0)
DOGET ; Here to filter orders 
"RTN","ORWORR",80,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AO",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",81,0)
 . S DGRP=0 F  S DGRP=$O(^OR(100,"AO",DFN,TIME,DGRP)) Q:'DGRP  D
"RTN","ORWORR",82,0)
 . . I $D(GROUPS)>1 Q:'$D(GROUPS(DGRP))           ;filter by display grp
"RTN","ORWORR",83,0)
 . . S IFN=0 F  S IFN=$O(^OR(100,"AO",DFN,TIME,DGRP,IFN)) Q:'IFN  D
"RTN","ORWORR",84,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3)                ;get main nodes
"RTN","ORWORR",85,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!($P(X3,U,3)=99) Q  ;skip veil,chld,sts=99
"RTN","ORWORR",86,0)
 . . . I $L(PASS),(PASS'[(";"_$P(X3,U,3)_";")) Q  ;filter by status
"RTN","ORWORR",87,0)
 . . . ; any other filtering
"RTN","ORWORR",88,0)
 . . . D GETFLDS
"RTN","ORWORR",89,0)
 Q
"RTN","ORWORR",90,0)
DOALL ; Here to get all orders (no filter by status)
"RTN","ORWORR",91,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AO",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",92,0)
 . S DGRP=0 F  S DGRP=$O(^OR(100,"AO",DFN,TIME,DGRP)) Q:'DGRP  D
"RTN","ORWORR",93,0)
 . . I $D(GROUPS)>1 Q:'$D(GROUPS(DGRP))           ;filter by display grp
"RTN","ORWORR",94,0)
 . . S IFN=0 F  S IFN=$O(^OR(100,"AO",DFN,TIME,DGRP,IFN)) Q:'IFN  D
"RTN","ORWORR",95,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3)                ;get main nodes
"RTN","ORWORR",96,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!($P(X3,U,3)=99) Q  ;skip veil,chld,sts=99
"RTN","ORWORR",97,0)
 . . . D GETFLDS
"RTN","ORWORR",98,0)
 Q
"RTN","ORWORR",99,0)
DOCUR ; Here to get all current orders
"RTN","ORWORR",100,0)
 N AOCTXT,STS,STOP,%
"RTN","ORWORR",101,0)
 S X=-$$GET^XPAR("ALL","ORPF ACTIVE ORDERS CONTEXT HRS")
"RTN","ORWORR",102,0)
 S %H=$H,X=(%H*86400+$P(%H,",",2))+(X*3600),%H=(X\86400)_","_(X#86400)
"RTN","ORWORR",103,0)
 D YMD^%DTC S AOCTXT=X_%
"RTN","ORWORR",104,0)
 S MASK="110000100101110"   ; mask out STS=1,2,7,10,12,13,14
"RTN","ORWORR",105,0)
 S TIME=0 F  S TIME=$O(^OR(100,"AC",DFN,TIME)) Q:'TIME  D
"RTN","ORWORR",106,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AC",DFN,TIME,IFN)) Q:'IFN  D
"RTN","ORWORR",107,0)
 . . ; filter out display groups here
"RTN","ORWORR",108,0)
 . . S ACT=0 F  S ACT=$O(^OR(100,"AC",DFN,TIME,IFN,ACT)) Q:'ACT  D
"RTN","ORWORR",109,0)
 . . . S X0=^OR(100,IFN,0),X3=^(3),X8=^(8,ACT,0)
"RTN","ORWORR",110,0)
 . . . S STS=$P(X3,U,3),STOP=$P(X0,U,9)
"RTN","ORWORR",111,0)
 . . . I $P(X3,U,8)!$P(X3,U,9)!(STS=99) Q
"RTN","ORWORR",112,0)
 . . . I $P(X8,U,15)=13,($P(X8,U)<AOCTXT) D ACKILL Q
"RTN","ORWORR",113,0)
 . . . I $P(X8,U,15)=13!($P(X8,U,15)=""),("RN^XX"[$P(X8,U,2)) D ACKILL Q
"RTN","ORWORR",114,0)
 . . . I $E(MASK,STS),STOP<AOCTXT D ACKILL Q
"RTN","ORWORR",115,0)
 . . . D GETFLDS
"RTN","ORWORR",116,0)
 Q
"RTN","ORWORR",117,0)
ACKILL ; called only from DOCUR - kill AC xref
"RTN","ORWORR",118,0)
 ; K ^OR(100,"AC",DFN,TIME,IFN,ACT)  ; let ORQ1 kill if for now
"RTN","ORWORR",119,0)
 Q
"RTN","ORWORR",120,0)
GET4V11(LST,TXTVW,ORYD,IFNLST) ; get order fields TEMP
"RTN","ORWORR",121,0)
 G GET41
"RTN","ORWORR",122,0)
GET4LST(LST,IFNLST) ; get order fields for list of orders
"RTN","ORWORR",123,0)
GET41 N ACT,ACTID,IDX,X0,X3,X8,PRV,ID,LN,TXT,STRT,STOP,CSTS,IFN,IFNIDX,ORIGVIEW,DEA ;PKI
"RTN","ORWORR",124,0)
 N LOC ;IMO
"RTN","ORWORR",125,0)
 S (IDX,LST,IFNIDX)=0
"RTN","ORWORR",126,0)
 F  S IFNIDX=$O(IFNLST(IFNIDX)) Q:'IFNIDX  S IFN=IFNLST(IFNIDX) D
"RTN","ORWORR",127,0)
 . S ACT=$S($P(IFN,";",2):$P(IFN,";",2),1:1),IFN=+IFN
"RTN","ORWORR",128,0)
 . S X0=$G(^OR(100,IFN,0)),X3=$G(^(3)),X8=$G(^(8,ACT,0))
"RTN","ORWORR",129,0)
 . D GETFLDS
"RTN","ORWORR",130,0)
 Q
"RTN","ORWORR",131,0)
GETBYIFN(LST,IFN) ; procedure
"RTN","ORWORR",132,0)
 ; get fields for single order
"RTN","ORWORR",133,0)
 ; .LST(n)=described above in GET
"RTN","ORWORR",134,0)
 ;  IFN=internal entry # for order
"RTN","ORWORR",135,0)
 I 'IFN Q
"RTN","ORWORR",136,0)
 N ACT,IDX,X0,X3,X8,PRV,ID,LN,TXT,STRT,STOP,CSTS,ACTID,ORIGVIEW,ORYD,TXTVW,DEA ;PKI
"RTN","ORWORR",137,0)
 S IDX=0,LST=0,ORYD=0
"RTN","ORWORR",138,0)
 S X0=$G(^OR(100,+IFN,0)),X3=$G(^(3))
"RTN","ORWORR",139,0)
 S ACT=$S($P(IFN,";",2):$P(IFN,";",2),$P(X3,U,7):$P(X3,U,7),1:1)
"RTN","ORWORR",140,0)
 S IFN=+IFN,X8=$G(^OR(100,IFN,8,ACT,0))
"RTN","ORWORR",141,0)
GETFLDS ; used by entry points to place order fields into list
"RTN","ORWORR",142,0)
 ; expects IDX=sequence #, IFN=order, X0=node 0, X3=node 3, LST=results
"RTN","ORWORR",143,0)
 ; LST(IDX)=~IFN^Grp^OrdTm^StrtTm^StopTm^Sts^Sig^Nrs^Clk^PrvID^PrvNam^Act^Flagged[^DCType]^ChartRev^DEA#^^DigSig^LOC^[DCORIGNAL]^IsPendingDCorder^IsDelayOrder
"RTN","ORWORR",144,0)
 S PRV=$P(X8,U,5) S:'PRV PRV=$P(X8,U,3) S PRV=PRV_U
"RTN","ORWORR",145,0)
 I PRV S PRV=PRV_$P(^VA(200,+PRV,0),U)
"RTN","ORWORR",146,0)
 S DEA=$$DEA^XUSER(,+PRV) ; get user DEA info - PKI
"RTN","ORWORR",147,0)
 S IDX=IDX+1,LST=LST+1,ID=IFN_";"_ACT,ACTID=$P(X8,U,2)
"RTN","ORWORR",148,0)
 S CSTS=$S($P(X8,U,15):$P(X8,U,15),1:$P(X3,U,3))
"RTN","ORWORR",149,0)
 I $P(X8,U,15)=10,$P(X3,U,3)=14 S CSTS=14 ;delayed-lapsed order
"RTN","ORWORR",150,0)
 S STRT=$S($P(X3,U,3)=11:$$RSTRT,ACTID="NW"!(ACTID="XX")!(ACTID="RL"):$P(X0,U,8),ACTID="DC":"",1:$P(X8,U)) ;110
"RTN","ORWORR",151,0)
 S STOP=$S($P(X3,U,3)=11:$$RSTOP,ACTID="HD":$P($G(^OR(100,+IFN,8,ACT,2)),U),1:$P(X0,U,9))
"RTN","ORWORR",152,0)
 S LST(IDX)="~"_ID_U_$P(X0,U,11)_U_$P(X8,U)_U_STRT_U_STOP_U_CSTS_U_$P(X8,U,4)_U_$P(X8,U,8)_U_$P(X8,U,10)_U_PRV
"RTN","ORWORR",153,0)
 S $P(LST(IDX),U,13)=+$G(^OR(100,IFN,8,ACT,3))    ; flagged
"RTN","ORWORR",154,0)
 I +$P(X8,U,8) S $P(LST(IDX),U,8)=$$INITIALS^ORCHTAB2(+$P(X8,U,8))    ;nurse
"RTN","ORWORR",155,0)
 I +$P(X8,U,10) S $P(LST(IDX),U,9)=$$INITIALS^ORCHTAB2(+$P(X8,U,10))  ;clerk
"RTN","ORWORR",156,0)
 I +$P(X8,U,18) S $P(LST(IDX),U,15)=$$INITIALS^ORCHTAB2(+$P(X8,U,18)) ;chart review
"RTN","ORWORR",157,0)
 I $L($G(DEA)) S $P(LST(IDX),U,16)=DEA ;PKI
"RTN","ORWORR",158,0)
 I $P($G(^OR(100,IFN,8,ACT,2)),"^",5) S $P(LST(IDX),U,18)=$P(^(2),"^",4)
"RTN","ORWORR",159,0)
 I '$P($G(^OR(100,IFN,8,ACT,2)),"^",5),$P(X0,"^",5) D  ;Copy orders PKI fix
"RTN","ORWORR",160,0)
 . N OI,ORVP,ORCAT,PKG
"RTN","ORWORR",161,0)
 . S OI=+$O(^OR(100,IFN,4.5,"ID","ORDERABLE",0)),OI=+$G(^OR(100,IFN,4.5,OI,1)) Q:'OI
"RTN","ORWORR",162,0)
 . S ORVP=$P(X0,"^",2),PKG=$P(X0,"^",14)
"RTN","ORWORR",163,0)
 . S ORCAT=$S($L($P($G(^DPT(+ORVP,.1)),U)):"I",1:"O")
"RTN","ORWORR",164,0)
 . I PKG'=$O(^DIC(9.4,"B","OUTPATIENT PHARMACY",0)) Q
"RTN","ORWORR",165,0)
 . D PKI^ORWDPS1(.ORY,OI,ORCAT,+ORVP,$$GET^XPAR("ALL^USR.`"_DUZ,"ORWOR PKI USE",1,"Q"))
"RTN","ORWORR",166,0)
 . I $E($G(ORY))=2 S $P(LST(IDX),U,18)=ORY
"RTN","ORWORR",167,0)
 ; Change to display location for Clinic Orders, Inpatients, & IV infusion orders.
"RTN","ORWORR",168,0)
 N DGID,DGNAM
"RTN","ORWORR",169,0)
 S LOC=""
"RTN","ORWORR",170,0)
 S DGID=$P(X0,U,11)
"RTN","ORWORR",171,0)
 I $L(DGID) D 
"RTN","ORWORR",172,0)
 .S DGNAM=$P($G(^ORD(100.98,DGID,0)),U)
"RTN","ORWORR",173,0)
 .;I DGNAM="CLINIC ORDERS"!(DGNAM="INPATIENT MEDICATIONS")!(DGNAM="IV MEDICATIONS")!(DGNAM="UNIT DOSE MEDICATIONS") D
"RTN","ORWORR",174,0)
 .S LOC=$P(X0,U,10) ;IMO
"RTN","ORWORR",175,0)
 .S:+LOC LOC=$P($G(^SC(+LOC,0)),U)_":"_+LOC ;IMO
"RTN","ORWORR",176,0)
 S $P(LST(IDX),U,19)=LOC ;IMO
"RTN","ORWORR",177,0)
 ;need a way to determine if order is in an unsigned DC state.
"RTN","ORWORR",178,0)
 S $P(LST(IDX),U,21)=$S(ACTID="DC":1,1:0)
"RTN","ORWORR",179,0)
 S $P(LST(IDX),U,22)=$$CHKORD^OREVNTX1(IFN)
"RTN","ORWORR",180,0)
 ;
"RTN","ORWORR",181,0)
 S ORIGVIEW=$S($G(TXTVW)=0:0,$G(TXTVW)=1:1,ORYD=-1:1,'ORYD:1,$P(X8,U)'<ORYD:0,1:1)
"RTN","ORWORR",182,0)
 K TXT D TEXT^ORQ12(.TXT,ID,255)                  ; optimize later
"RTN","ORWORR",183,0)
 I $O(^OR(100,+IFN,2,0)) S LN=$O(TXT(0)),TXT(LN)="+"_TXT(LN)
"RTN","ORWORR",184,0)
 I $O(^OR(100,+IFN,8,"C","XX",0)) S LN=$O(TXT(0)),TXT(LN)="*"_TXT(LN)
"RTN","ORWORR",185,0)
 S LN=0 F  S LN=$O(TXT(LN)) Q:'LN  S IDX=IDX+1,LST(IDX)="t"_TXT(LN)
"RTN","ORWORR",186,0)
 I $O(^OR(100,+IFN,8,1,.2,0)) S IDX=IDX+1,LST(IDX)="|" D  ;PKI XMLText
"RTN","ORWORR",187,0)
 . S I=0 F  S I=$O(^OR(100,+IFN,8,1,.2,I)) Q:'I  S IDX=IDX+1,LST(IDX)="x"_^(I,0)
"RTN","ORWORR",188,0)
 Q
"RTN","ORWORR",189,0)
RSTRT() ; return start date from responses
"RTN","ORWORR",190,0)
 Q $G(^OR(100,IFN,4.5,+$O(^OR(100,IFN,4.5,"ID","START",0)),1))
"RTN","ORWORR",191,0)
RSTOP() ; return stop date from responses
"RTN","ORWORR",192,0)
 Q $G(^OR(100,IFN,4.5,+$O(^OR(100,IFN,4.5,"ID","STOP",0)),1))
"RTN","ORWORR",193,0)
GETTXT(LST,IFN) ; get text of an order
"RTN","ORWORR",194,0)
 I $L(IFN,";")=1 S IFN=IFN_";1"
"RTN","ORWORR",195,0)
 D TEXT^ORQ12(.LST,IFN,255)
"RTN","ORWORR",196,0)
 Q
"RTN","ORWORR",197,0)
XPND(AGRP) ; procedure
"RTN","ORWORR",198,0)
 ; Expand display group (GROUPS defined outside of call)
"RTN","ORWORR",199,0)
 N I,CHLD
"RTN","ORWORR",200,0)
 S GROUPS(AGRP)=^ORD(100.98,AGRP,0),I=0
"RTN","ORWORR",201,0)
 F  S I=$O(^ORD(100.98,AGRP,1,I)) Q:'I  S CHLD=$P(^(I,0),U) D XPND(CHLD)
"RTN","ORWORR",202,0)
 Q
"RTN","ORWORR",203,0)
GETPKG(Y,IFN) ; get order pkg
"RTN","ORWORR",204,0)
 N ORDERID,PKGID
"RTN","ORWORR",205,0)
 Q:+IFN<1
"RTN","ORWORR",206,0)
 S ORDERID=+IFN,Y=""
"RTN","ORWORR",207,0)
 S PKGID=$P(OR(100,ORDERID,0),U,14)
"RTN","ORWORR",208,0)
 S:PKGID>0 Y=$P(^DIC(9.4,PKGID,0),U,2)
"RTN","ORWORR",209,0)
 Q
"RTN","ORWPCE")
0^11^B60867098
"RTN","ORWPCE",1,0)
ORWPCE ; SLC/JM/REV - wrap calls to PCE and AICS ;11/19/09  13:07
"RTN","ORWPCE",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,173,190,195,215,243,295,280**;Dec 17, 1997;Build 85
"RTN","ORWPCE",3,0)
 ;
"RTN","ORWPCE",4,0)
 ; DBIA 2950   LOOK^LEXA          ^TMP("LEXFND",$J)
"RTN","ORWPCE",5,0)
 ; DBIA 1609   CONFIG^LEXSET      ^TMP("LEXSCH",$J)
"RTN","ORWPCE",6,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORWPCE",7,0)
 ; DBIA 3991   $$STATCHK^ICDAPIU
"RTN","ORWPCE",8,0)
 ;
"RTN","ORWPCE",9,0)
 Q
"RTN","ORWPCE",10,0)
VISIT(LST,CLINIC,ORDATE) ; get list of visit types for clinic
"RTN","ORWPCE",11,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",12,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT VISIT TYPE CPT PROCEDURES","LST",,,,ORDATE)
"RTN","ORWPCE",13,0)
 Q
"RTN","ORWPCE",14,0)
PROC(LST,CLINIC,ORDATE) ; get list of procedures for clinic P12 for CPTMods
"RTN","ORWPCE",15,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",16,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT CPT PROCEDURE CODES","LST",,,1,ORDATE)
"RTN","ORWPCE",17,0)
 N IDX,MOD,CODES,FIRST S IDX=0
"RTN","ORWPCE",18,0)
 F  S IDX=$O(LST(IDX)) Q:'+IDX  D
"RTN","ORWPCE",19,0)
 . I LST(IDX)="" K LST(IDX) Q
"RTN","ORWPCE",20,0)
 . S MOD=0,CODES="",FIRST=1
"RTN","ORWPCE",21,0)
 . F  S MOD=$O(LST(IDX,"MODIFIER",MOD)) Q:(MOD="")  D
"RTN","ORWPCE",22,0)
 . . I FIRST S FIRST=0
"RTN","ORWPCE",23,0)
 . . E  S CODES=CODES_";"
"RTN","ORWPCE",24,0)
 . . S CODES=CODES_LST(IDX,"MODIFIER",MOD)
"RTN","ORWPCE",25,0)
 . K LST(IDX,"MODIFIER")
"RTN","ORWPCE",26,0)
 . I 'FIRST S $P(LST(IDX),U,12)=CODES
"RTN","ORWPCE",27,0)
 Q
"RTN","ORWPCE",28,0)
CPTMODS(LST,ORCPTCOD,ORDATE) ;Return CPT Modifiers for a CPT Code
"RTN","ORWPCE",29,0)
 N ORM,ORIDX,ORI,MODNAME
"RTN","ORWPCE",30,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",31,0)
 I +($$CODM^ICPTCOD(ORCPTCOD,$NA(ORM),0,ORDATE)),+$D(ORM) D
"RTN","ORWPCE",32,0)
 . S ORIDX="",ORI=0
"RTN","ORWPCE",33,0)
 . F  S ORIDX=$O(ORM(ORIDX)) Q:(ORIDX="")  D
"RTN","ORWPCE",34,0)
 . . S ORI=ORI+1,MODNAME=$P(ORM(ORIDX),U,1)
"RTN","ORWPCE",35,0)
 . . S LST(MODNAME_ORI)=$P(ORM(ORIDX),U,2)_U_MODNAME_U_ORIDX
"RTN","ORWPCE",36,0)
 Q
"RTN","ORWPCE",37,0)
GETMOD(MODINFO,ORMODIEN,ORDATE) ;Returns info for a specific CPT Modifier
"RTN","ORWPCE",38,0)
 N ORDATA
"RTN","ORWPCE",39,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",40,0)
 S ORDATA=$$MOD^ICPTMOD(ORMODIEN,"I",ORDATE,1)
"RTN","ORWPCE",41,0)
 I +ORDATA>0 S MODINFO=ORMODIEN_U_$P(ORDATA,U,3)_U_$P(ORDATA,U,2)
"RTN","ORWPCE",42,0)
 Q
"RTN","ORWPCE",43,0)
DIAG(LST,CLINIC,ORDATE) ; get list of diagnoses for clinic
"RTN","ORWPCE",44,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",45,0)
 D GETLST^IBDF18A(CLINIC,"DG SELECT ICD-9 DIAGNOSIS CODES","LST",,,,ORDATE)
"RTN","ORWPCE",46,0)
 Q
"RTN","ORWPCE",47,0)
IMM(LST,CLINIC) ;get list of immunizations for clinic
"RTN","ORWPCE",48,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT IMMUNIZATIONS","LST")
"RTN","ORWPCE",49,0)
 Q
"RTN","ORWPCE",50,0)
SK(LST,CLINIC) ;get list of skin test for clinic
"RTN","ORWPCE",51,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT SKIN TESTS","LST")
"RTN","ORWPCE",52,0)
 Q
"RTN","ORWPCE",53,0)
HF(LST,CLINIC) ;get list of health factors for clinic
"RTN","ORWPCE",54,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT HEALTH FACTORS","LST")
"RTN","ORWPCE",55,0)
 Q
"RTN","ORWPCE",56,0)
PED(LST,CLINIC) ;get list of education topices for clinic
"RTN","ORWPCE",57,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EDUCATION TOPICS","LST")
"RTN","ORWPCE",58,0)
 Q
"RTN","ORWPCE",59,0)
TRT(LST,CLINIC) ;get list of treatments for clinic
"RTN","ORWPCE",60,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT TREATMENTS","LST")
"RTN","ORWPCE",61,0)
 Q
"RTN","ORWPCE",62,0)
XAM(LST,CLINIC) ;get list of exams for clinic
"RTN","ORWPCE",63,0)
 D GETLST^IBDF18A(CLINIC,"PX SELECT EXAMS","LST")
"RTN","ORWPCE",64,0)
 Q
"RTN","ORWPCE",65,0)
ACTPROB(GLST,DFN,ORDATE) ;get list of patient's active problems
"RTN","ORWPCE",66,0)
 K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE",67,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",68,0)
 D DSELECT^GMPLENFM  ;DBIA 1365
"RTN","ORWPCE",69,0)
 N ORPROB,ORPROBIX,ORPRCNT
"RTN","ORWPCE",70,0)
 S ORPRCNT=0
"RTN","ORWPCE",71,0)
 S ORPROBIX=0
"RTN","ORWPCE",72,0)
 F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D  ;DBIA 1365
"RTN","ORWPCE",73,0)
 . S ORPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE",74,0)
 . I $L(ORPROB)>255 S $P(ORPROB,U)=$E($P(ORPROB,U),1,245)
"RTN","ORWPCE",75,0)
 . I $E(ORPROB,1)="$" S ORPROB=$E(ORPROB,2,255)
"RTN","ORWPCE",76,0)
 . I '$D(ORPROB(ORPROB)) D
"RTN","ORWPCE",77,0)
 .. S ORPROB(ORPROB)=""
"RTN","ORWPCE",78,0)
 .. S ORPRCNT=ORPRCNT+1
"RTN","ORWPCE",79,0)
 .. S $P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)=ORPROB
"RTN","ORWPCE",80,0)
 . E  K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)
"RTN","ORWPCE",81,0)
 ; DBIA   10082     NAME: ICD DIAGNOSIS FILE
"RTN","ORWPCE",82,0)
 N ORWINDEX,ORITEM
"RTN","ORWPCE",83,0)
 S ORWINDEX=0
"RTN","ORWPCE",84,0)
 F  S ORWINDEX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)) Q:'ORWINDEX  D:$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX),"^",1)]""
"RTN","ORWPCE",85,0)
 . N ORICD,ORICDI,ORI
"RTN","ORWPCE",86,0)
 . S ORITEM=^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)
"RTN","ORWPCE",87,0)
 . S ORICD=$P(ORITEM,"^",3)
"RTN","ORWPCE",88,0)
 . F ORI=1:1:$L(ORICD,"/") D
"RTN","ORWPCE",89,0)
 . . S ORICDI=$P(ORICD,"/",ORI)
"RTN","ORWPCE",90,0)
 . . I '+$$STATCHK^ICDAPIU(ORICDI,ORDATE) S $P(ORITEM,"^",11)="#"  ;DBIA 3991
"RTN","ORWPCE",91,0)
 . S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORWINDEX)=ORITEM
"RTN","ORWPCE",92,0)
 S ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",0)=ORPRCNT
"RTN","ORWPCE",93,0)
 S GLST="^TMP(""IB"","_$J_",""INTERFACES"",""GMP SELECT PATIENT ACTIVE PROBLEMS"")"
"RTN","ORWPCE",94,0)
 Q
"RTN","ORWPCE",95,0)
SCSEL(VAL,DFN,ATM,LOC,VST) ; return SC conditions that may be selected
"RTN","ORWPCE",96,0)
 ; VAL=SCallow^SCdflt;AOallow^AOdflt;IRallow^IRdflt;ECallow^ECdflt;
"RTN","ORWPCE",97,0)
 ;     MSTallow^MSTdflt;HNCallow^HNCdflt;CVAllow^CVDflt;SHADAllow^SHADDflt
"RTN","ORWPCE",98,0)
 N ORX,S S S=";"
"RTN","ORWPCE",99,0)
 D SCCOND^PXUTLSCC(DFN,ATM,LOC,$G(VST),.ORX)
"RTN","ORWPCE",100,0)
 S VAL=$G(ORX("SC"))_S_$G(ORX("AO"))_S_$G(ORX("IR"))_S_$G(ORX("EC"))_S_$G(ORX("MST"))_S_$G(ORX("HNC"))_S_$G(ORX("CV"))_S_$G(ORX("SHAD"))
"RTN","ORWPCE",101,0)
 Q
"RTN","ORWPCE",102,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPCE",103,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPCE",104,0)
 D ELIG^VADPT
"RTN","ORWPCE",105,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPCE",106,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPCE",107,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPCE",108,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPCE",109,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPCE",110,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPCE",111,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPCE",112,0)
 Q
"RTN","ORWPCE",113,0)
CPTREQD(VAL,IEN) ; return 1 in VAL if note still needs a CPT code
"RTN","ORWPCE",114,0)
 S VAL=+$P(^TIU(8925,IEN,0),U,11)
"RTN","ORWPCE",115,0)
 Q
"RTN","ORWPCE",116,0)
NOTEVSTR(VAL,IEN) ; return the VSTR^AUTHOR for a note
"RTN","ORWPCE",117,0)
 N X0,X12,VISIT
"RTN","ORWPCE",118,0)
 S X0=$G(^TIU(8925,+IEN,0)),X12=$G(^(12)),VISIT=$P(X12,U,7)
"RTN","ORWPCE",119,0)
 I +VISIT S VAL=$$VSTRBLD^TIUSRVP(VISIT) I 1
"RTN","ORWPCE",120,0)
 E  S VAL=$P(X12,U,11)_";"_$P(X0,U,7)_";"_$P(X0,U,13)
"RTN","ORWPCE",121,0)
 Q
"RTN","ORWPCE",122,0)
HASVISIT(ORY,IEN,DFN,ORLOC,ORDTE) ;Has visit or is stand alone
"RTN","ORWPCE",123,0)
 N ORVISIT
"RTN","ORWPCE",124,0)
 S ORY=-1
"RTN","ORWPCE",125,0)
 I +$G(IEN)>0 S ORVISIT=+$P($G(^TIU(8925,+IEN,0)),U,3)
"RTN","ORWPCE",126,0)
 I +$G(ORVISIT)'>0 S ORVISIT=$$GETENC^PXAPI(DFN,ORDTE,ORLOC)
"RTN","ORWPCE",127,0)
 I +$G(ORVISIT)>0 S ORY=$$VST2APPT^PXAPI(ORVISIT)
"RTN","ORWPCE",128,0)
 Q
"RTN","ORWPCE",129,0)
DELETE(VAL,VSTR,DFN) ; delete PCE info when deleting a note
"RTN","ORWPCE",130,0)
 N VISIT,ORCOUNT,ORDTE,ORLOC
"RTN","ORWPCE",131,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",132,0)
 S ORLOC=$P(VSTR,";"),ORDTE=$P(VSTR,";",2)
"RTN","ORWPCE",133,0)
 I '$D(^TMP("ORWPCE",$J,VSTR))&('$$GETENC^PXAPI(DFN,ORDTE,ORLOC)) S VAL=0 Q  ; no PCE data saved yet
"RTN","ORWPCE",134,0)
 I $P(VSTR,";",3)="H" S VAL=0 Q           ; leave inpatient alone
"RTN","ORWPCE",135,0)
 I $L($T(DOCCNT^TIUSRVLV))=0 S VAL=0 Q    ; leave if no tiu entry point
"RTN","ORWPCE",136,0)
 D DOCCNT^TIUSRVLV(.ORCOUNT,DFN,VSTR)     ; Do not delete if another
"RTN","ORWPCE",137,0)
 I ORCOUNT>0 S VAL=0 Q                    ; title points to visit
"RTN","ORWPCE",138,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQDEL^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",139,0)
 S (ZTSAVE("VSTR"),ZTSAVE("DFN"))="",ZTDESC="CPRS Delete Note/PCE"
"RTN","ORWPCE",140,0)
 S ZTSYNC="ORW"_VSTR
"RTN","ORWPCE",141,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQDEL^ORWPCE1
"RTN","ORWPCE",142,0)
 Q
"RTN","ORWPCE",143,0)
SAVE(OK,PCELIST,NOTEIEN,ORLOC) ; save PCE information
"RTN","ORWPCE",144,0)
 N VSTR,GMPLUSER
"RTN","ORWPCE",145,0)
 N ZTIO,ZTRTN,ZTDTH,ZTSAVE,ZTDESC,ZTSYNC,ZTSK
"RTN","ORWPCE",146,0)
 S VSTR=$P(PCELIST(1),U,4) K ^TMP("ORWPCE",$J,VSTR)
"RTN","ORWPCE",147,0)
 M ^TMP("ORWPCE",$J,VSTR)=PCELIST
"RTN","ORWPCE",148,0)
 S GMPLUSER=$$CLINUSER^ORQQPL1(DUZ),NOTEIEN=+$G(NOTEIEN)
"RTN","ORWPCE",149,0)
 S ZTIO="ORW/PXAPI RESOURCE",ZTRTN="DQSAVE^ORWPCE1",ZTDTH=$H
"RTN","ORWPCE",150,0)
 S ZTSAVE("PCELIST(")="",ZTDESC="Data from CPRS to PCE"
"RTN","ORWPCE",151,0)
 S ZTSAVE("GMPLUSER")="",ZTSAVE("NOTEIEN")="",ZTSAVE("DUZ")=""
"RTN","ORWPCE",152,0)
 I VSTR'["E" S ZTSYNC="ORW"_VSTR
"RTN","ORWPCE",153,0)
 S ZTSAVE("ORLOC")=""
"RTN","ORWPCE",154,0)
 D ^%ZTLOAD I '$D(ZTSK) D DQSAVE^ORWPCE1
"RTN","ORWPCE",155,0)
 Q
"RTN","ORWPCE",156,0)
LEX(LST,X,APP,ORDATE)   ; return list after lexicon lookup
"RTN","ORWPCE",157,0)
 N LEX,ILST,I,IEN
"RTN","ORWPCE",158,0)
 S:APP="CPT" APP="CHP" ; LEX PATCH 10
"RTN","ORWPCE",159,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",160,0)
 D CONFIG^LEXSET(APP,APP,ORDATE)  ;DBIA 1609
"RTN","ORWPCE",161,0)
 I APP="CHP" D
"RTN","ORWPCE",162,0)
 . ; Set the filter for CPT only using CS APIs - format is the same as for DIC("S")
"RTN","ORWPCE",163,0)
 . S ^TMP("LEXSCH",$J,"FIL",0)="I $L($$CPTONE^LEXU(+Y,$G(ORDATE)))!($L($$CPCONE^LEXU(+Y,$G(ORDATE))))"  ;DBIA 1609
"RTN","ORWPCE",164,0)
 . ; Set Applications Default Flag (Lexicon can not overwrite filter)
"RTN","ORWPCE",165,0)
 . S ^TMP("LEXSCH",$J,"ADF",0)=1
"RTN","ORWPCE",166,0)
 D LOOK^LEXA(X,APP,1,"",ORDATE)
"RTN","ORWPCE",167,0)
 I '$D(LEX("LIST",1)) D  G LEXX
"RTN","ORWPCE",168,0)
 . S LST(1)="-1^No matches found.^"_APP
"RTN","ORWPCE",169,0)
 S LST(1)=LEX("LIST",1),ILST=1
"RTN","ORWPCE",170,0)
 S (I,IEN)=""
"RTN","ORWPCE",171,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I=""  D  ;DBIA 2950
"RTN","ORWPCE",172,0)
 .F  S IEN=$O(^TMP("LEXFND",$J,I,IEN)) Q:IEN=""  D
"RTN","ORWPCE",173,0)
 ..S ILST=ILST+1,LST(ILST)=IEN_U_^TMP("LEXFND",$J,I,IEN)
"RTN","ORWPCE",174,0)
LEXX K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J),^TMP("LEXSCH",$J),^TMP("LEXLE",$J)
"RTN","ORWPCE",175,0)
 Q
"RTN","ORWPCE",176,0)
LEXCODE(VAL,IEN,APP,ORDATE)     ; return code for a lexicon entry
"RTN","ORWPCE",177,0)
 S VAL=""
"RTN","ORWPCE",178,0)
 S:'+$G(ORDATE) ORDATE=DT
"RTN","ORWPCE",179,0)
 I APP="ICD" S VAL=$$ICDONE^LEXU(IEN,ORDATE)
"RTN","ORWPCE",180,0)
 I APP="CPT"!(APP="CHP") S VAL=$$CPTONE^LEXU(IEN,ORDATE) ; LEX PATCH 10
"RTN","ORWPCE",181,0)
 I VAL="",(APP="CHP") S VAL=$$CPCONE^LEXU(IEN,ORDATE) ; LEX PATCH 10
"RTN","ORWPCE",182,0)
 Q
"RTN","ORWPCE",183,0)
ADDRES ; Add the ORW/PXAPI RESOURCE device
"RTN","ORWPCE",184,0)
 N X
"RTN","ORWPCE",185,0)
 S X=$$RES^XUDHSET("ORW/PXAPI RESOURCE",,5,"CPRS to PCE transactions")
"RTN","ORWPCE",186,0)
 Q
"RTN","ORWPCE",187,0)
GETSVC(NEWSVC,SVC,LOC,INP) ; Returns the correct Service Connected Category
"RTN","ORWPCE",188,0)
 N DSS,ORWSVC
"RTN","ORWPCE",189,0)
 S DSS=$P($G(^SC(+LOC,0)),U,7)
"RTN","ORWPCE",190,0)
 Q:'+DSS
"RTN","ORWPCE",191,0)
 M ORWSVC=SVC
"RTN","ORWPCE",192,0)
 S NEWSVC=$$SVC^PXKCO(.ORWSVC,DSS,INP,LOC) ; DBIA #3225
"RTN","ORWPCE",193,0)
 Q
"RTN","ORWPCE1")
0^12^B63538675
"RTN","ORWPCE1",1,0)
ORWPCE1 ;SLC/KCM - PCE Calls from CPRS GUI; 10/26/04 ;11/20/09  09:25
"RTN","ORWPCE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148,187,190,215,243,280**;Dec 17, 1997;Build 85
"RTN","ORWPCE1",3,0)
 ;
"RTN","ORWPCE1",4,0)
 ; DBIA 1365   DSELECT^GMPLENFM   ^TMP("IB",$J)
"RTN","ORWPCE1",5,0)
 ;
"RTN","ORWPCE1",6,0)
GETVSIT(VSTR,DFN) ; lookup a visit
"RTN","ORWPCE1",7,0)
 N PKG,SRC,ORPXAPI,OK,ORVISIT
"RTN","ORWPCE1",8,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",9,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",10,0)
 S ORPXAPI("ENCOUNTER",1,"ENC D/T")=$P(VSTR,";",2)
"RTN","ORWPCE1",11,0)
 S ORPXAPI("ENCOUNTER",1,"PATIENT")=DFN
"RTN","ORWPCE1",12,0)
 S ORPXAPI("ENCOUNTER",1,"HOS LOC")=+VSTR
"RTN","ORWPCE1",13,0)
 S ORPXAPI("ENCOUNTER",1,"SERVICE CATEGORY")=$P(VSTR,";",3)
"RTN","ORWPCE1",14,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",15,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORVISIT)
"RTN","ORWPCE1",16,0)
 Q ORVISIT
"RTN","ORWPCE1",17,0)
DQDEL ; background call to DATA2PCE and DELVFILE
"RTN","ORWPCE1",18,0)
 N VISIT,VAL
"RTN","ORWPCE1",19,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",20,0)
 S VISIT=$$GETVSIT(VSTR,DFN)
"RTN","ORWPCE1",21,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","TEXT INTEGRATION UTILITIES")
"RTN","ORWPCE1",22,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",23,0)
 Q
"RTN","ORWPCE1",24,0)
DQSAVE ; Background Call to DATA2PCE
"RTN","ORWPCE1",25,0)
 N PKG,SRC,TYP,CODE,IEN,OK,I,X,ORPXAPI,ORPXDEL
"RTN","ORWPCE1",26,0)
 N CAT,NARR,ROOT,ROOT2,ORAVST
"RTN","ORWPCE1",27,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,MOD,MODCNT,MODIDX,MODS
"RTN","ORWPCE1",28,0)
 N COM,COMMENT,COMMENTS
"RTN","ORWPCE1",29,0)
 N DFN,PROBLEMS,PXAPREDT,ORCPTDEL
"RTN","ORWPCE1",30,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",31,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",32,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",33,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT)=0
"RTN","ORWPCE1",34,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","ORWPCE1",35,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","ORWPCE1",36,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","ORWPCE1",37,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",38,0)
 . . S PRV=PRV+1
"RTN","ORWPCE1",39,0)
 . . S ROOT="ORPXAPI(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",40,0)
 . . S ROOT2="ORPXDEL(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",41,0)
 . . I $E(TYP,4)'="-" D
"RTN","ORWPCE1",42,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","ORWPCE1",43,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","ORWPCE1",44,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","ORWPCE1",45,0)
 . . S @ROOT2@("DELETE")=1
"RTN","ORWPCE1",46,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","ORWPCE1",47,0)
 . I TYP="VST" D  Q
"RTN","ORWPCE1",48,0)
 . . S ROOT="ORPXAPI(""ENCOUNTER"",1)"
"RTN","ORWPCE1",49,0)
 . . I CODE="DT" S @ROOT@("ENC D/T")=$P(X,U,3) Q
"RTN","ORWPCE1",50,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","ORWPCE1",51,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","ORWPCE1",52,0)
 . . I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q
"RTN","ORWPCE1",53,0)
 . . ;prevents checkout!
"RTN","ORWPCE1",54,0)
 . . I CODE="VC" S @ROOT@("SERVICE CATEGORY")=$P(X,U,3) Q
"RTN","ORWPCE1",55,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","ORWPCE1",56,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","ORWPCE1",57,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","ORWPCE1",58,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","ORWPCE1",59,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","ORWPCE1",60,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","ORWPCE1",61,0)
 . . I CODE="CV" S @ROOT@("CV")=$P(X,U,3) Q
"RTN","ORWPCE1",62,0)
 . . I CODE="SHD" S @ROOT@("SHAD")=$P(X,U,3) Q
"RTN","ORWPCE1",63,0)
 . . I CODE="OL" D  Q
"RTN","ORWPCE1",64,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","ORWPCE1",65,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","ORWPCE1",66,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","ORWPCE1",67,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","ORWPCE1",68,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","ORWPCE1",69,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",70,0)
 . . S CPT=CPT+1,ROOT="ORPXAPI(""PROCEDURE"","_CPT_")"
"RTN","ORWPCE1",71,0)
 . . S IEN=$$CODEN^ICPTCOD(CODE) ;ICR #1995
"RTN","ORWPCE1",72,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","ORWPCE1",73,0)
 . . I +$P(X,U,9) D
"RTN","ORWPCE1",74,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","ORWPCE1",75,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","ORWPCE1",76,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","ORWPCE1",77,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","ORWPCE1",78,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",79,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",80,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",81,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",82,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","ORWPCE1",83,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0,ORCPTDEL=CPT
"RTN","ORWPCE1",84,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","ORWPCE1",85,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",86,0)
 . . S ICD=ICD+1,ROOT="ORPXAPI(""DX/PL"","_ICD_")"
"RTN","ORWPCE1",87,0)
 . . S IEN=+$$CODEN^ICDCODE(CODE,80) ;ICR #3990
"RTN","ORWPCE1",88,0)
 . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","ORWPCE1",89,0)
 . . S @ROOT@("PRIMARY")=$P(X,U,5)
"RTN","ORWPCE1",90,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",91,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",92,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",93,0)
 . . I $L($P(X,U,7)),$P(X,U,7)=1 S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","ORWPCE1",94,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","ORWPCE1",95,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",96,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","ORWPCE1",97,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",98,0)
 . . S IMM=IMM+1,ROOT="ORPXAPI(""IMMUNIZATION"","_IMM_")"
"RTN","ORWPCE1",99,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",100,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","ORWPCE1",101,0)
 . . S:$L($P(X,U,5)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","ORWPCE1",102,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","ORWPCE1",103,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","ORWPCE1",104,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",105,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","ORWPCE1",106,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",107,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","ORWPCE1",108,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",109,0)
 . . S SK=SK+1,ROOT="ORPXAPI(""SKIN TEST"","_SK_")"
"RTN","ORWPCE1",110,0)
 . . S @ROOT@("TEST")=CODE
"RTN","ORWPCE1",111,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",112,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","ORWPCE1",113,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","ORWPCE1",114,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","ORWPCE1",115,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",116,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","ORWPCE1",117,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",118,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","ORWPCE1",119,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",120,0)
 . . S PED=PED+1,ROOT="ORPXAPI(""PATIENT ED"","_PED_")"
"RTN","ORWPCE1",121,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","ORWPCE1",122,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","ORWPCE1",123,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",124,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","ORWPCE1",125,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",126,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","ORWPCE1",127,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",128,0)
 . . S HF=HF+1,ROOT="ORPXAPI(""HEALTH FACTOR"","_HF_")"
"RTN","ORWPCE1",129,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","ORWPCE1",130,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","ORWPCE1",131,0)
 . . S:$P(X,U,6)'>0 $P(X,U,6)=$G(ORPXAPI("PROVIDER",1,"NAME"))
"RTN","ORWPCE1",132,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",133,0)
 . . S:$L($P(X,U,11)) @ROOT@("EVENT D/T")=$P($P(X,U,11),";",1)
"RTN","ORWPCE1",134,0)
 . . S:$L($P(X,U,11)) SRC=$P($P(X,U,11),";",2)
"RTN","ORWPCE1",135,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","ORWPCE1",136,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",137,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","ORWPCE1",138,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",139,0)
 . . S XAM=XAM+1,ROOT="ORPXAPI(""EXAM"","_XAM_")"
"RTN","ORWPCE1",140,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","ORWPCE1",141,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",142,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",143,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","ORWPCE1",144,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",145,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","ORWPCE1",146,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",147,0)
 . . S TRT=TRT+1,ROOT="ORPXAPI(""TREATMENT"","_TRT_")"
"RTN","ORWPCE1",148,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",149,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",150,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",151,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",152,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",153,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","ORWPCE1",154,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","ORWPCE1",155,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","ORWPCE1",156,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",157,0)
 . . Q:'$L(CAT)
"RTN","ORWPCE1",158,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","ORWPCE1",159,0)
 ;Store the comments
"RTN","ORWPCE1",160,0)
 S COM=""
"RTN","ORWPCE1",161,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) ORPXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","ORWPCE1",162,0)
 ;
"RTN","ORWPCE1",163,0)
 ;Remove any problems to add that the patient already has as active problems
"RTN","ORWPCE1",164,0)
 I $D(PROBLEMS),$D(DFN) D
"RTN","ORWPCE1",165,0)
 . N ORWPROB,ORPROBIX
"RTN","ORWPCE1",166,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",167,0)
 . D DSELECT^GMPLENFM  ;DBIA 1365
"RTN","ORWPCE1",168,0)
 . S ORPROBIX=0
"RTN","ORWPCE1",169,0)
 . F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D  ;DBIA 1365
"RTN","ORWPCE1",170,0)
 .. S ORWPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE1",171,0)
 .. S ORWPROB($S($E(ORWPROB,1)="$":$E(ORWPROB,2,255),1:ORWPROB))=""
"RTN","ORWPCE1",172,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",173,0)
 . Q:'$D(ORWPROB)
"RTN","ORWPCE1",174,0)
 . S ORPROBIX=""
"RTN","ORWPCE1",175,0)
 . F  S ORPROBIX=$O(PROBLEMS(ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",176,0)
 .. S:$D(ORWPROB(PROBLEMS(ORPROBIX))) ORPXAPI("DX/PL",ORPROBIX,"PL ADD")=0
"RTN","ORWPCE1",177,0)
 ;
"RTN","ORWPCE1",178,0)
 I $$MDS(.ORPXAPI,$G(ORLOC)) S ORPXAPI("ENCOUNTER",1,"CHECKOUT D/T")=$$NOW^XLFDT
"RTN","ORWPCE1",179,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",180,0)
DATA2PCE ;
"RTN","ORWPCE1",181,0)
 I $G(PXAPREDT)!($G(ORCPTDEL)) D
"RTN","ORWPCE1",182,0)
 . M ORPXDEL("ENCOUNTER")=ORPXAPI("ENCOUNTER")
"RTN","ORWPCE1",183,0)
 . I $G(ORCPTDEL) M ORPXDEL("PROCEDURE",ORCPTDEL)=ORPXAPI("PROCEDURE",ORCPTDEL)
"RTN","ORWPCE1",184,0)
 . S OK=$$DATA2PCE^PXAPI("ORPXDEL",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",185,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",186,0)
 I OK>0,+NOTEIEN,+ORAVST D  ; NOTEIEN only set on inpatient encounters
"RTN","ORWPCE1",187,0)
 .N OROK,ORX
"RTN","ORWPCE1",188,0)
 .S ORX(1207)=ORAVST
"RTN","ORWPCE1",189,0)
 .D FILE^TIUSRVP(.OROK,NOTEIEN,.ORX,1)
"RTN","ORWPCE1",190,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",191,0)
 Q
"RTN","ORWPCE1",192,0)
 ;
"RTN","ORWPCE1",193,0)
MDS(X,ORLOC) ; return TRUE if checkout is needed
"RTN","ORWPCE1",194,0)
 I $$CHKOUT^ORWPCE2(ORLOC) Q 1
"RTN","ORWPCE1",195,0)
 N I,ORAUTO,OROK
"RTN","ORWPCE1",196,0)
 S (OROK,I)=0
"RTN","ORWPCE1",197,0)
 F  S I=$O(X("DX/PL",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",198,0)
 . I $G(X("DX/PL",I,"DIAGNOSIS")) S OROK=1
"RTN","ORWPCE1",199,0)
 I 'OROK D
"RTN","ORWPCE1",200,0)
 .S I=0 F  S I=$O(X("PROCEDURE",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",201,0)
 .. I $G(X("PROCEDURE",I,"PROCEDURE")) S OROK=1
"RTN","ORWPCE1",202,0)
 I $D(X("PROVIDER",1,"NAME")) S OROK=1
"RTN","ORWPCE1",203,0)
 Q OROK
"RTN","ORWPCE1",204,0)
NONCOUNT(ORY,ORLOC) ;  Is the location a non-count clinic? (DBIA #964)
"RTN","ORWPCE1",205,0)
 Q:'ORLOC
"RTN","ORWPCE1",206,0)
 S ORY=$S($P($G(^SC(ORLOC,0)),U,17)="Y":1,1:0)
"RTN","ORWPCE1",207,0)
 Q
"RTN","ORWPCE3")
0^8^B43187706
"RTN","ORWPCE3",1,0)
ORWPCE3 ; SLC/KCM/REV/JM - Get a PCE encounter for a TIU document;11/21/03 ;11/30/09  13:55
"RTN","ORWPCE3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,190,280**;Dec 17, 1997;Build 85
"RTN","ORWPCE3",3,0)
 Q
"RTN","ORWPCE3",4,0)
PCE4NOTE(LST,IEN,DFN,VSITSTR) ; Return encounter for an associated note
"RTN","ORWPCE3",5,0)
 ; LST(1)=HDR^AllowEdit^CPTRequired^VStr^Author^hasCPT
"RTN","ORWPCE3",6,0)
 ; LST(n)=TYP+^CODE^CAT^NARR^QUAL1^QUAL2 (QUAL1=Primary!Qty, QUAL2=Prv)
"RTN","ORWPCE3",7,0)
 N VISIT,VSTR,ILST,LOC,CODE,PRIM,QTY,CAT,NARR,PRV,X0,X12,X802,X811,VTYP
"RTN","ORWPCE3",8,0)
 N IPOV,ICPT,IPRV,IIMM,ISK,IPED,IHF,IXAM,ITRT,ICOM,MIDX,MIEN,MCNT,MODS
"RTN","ORWPCE3",9,0)
 I +$G(IEN)<1 D  I 1 ; Get PCE Data on a new note not yet saved
"RTN","ORWPCE3",10,0)
 . S (X0,X12)=""
"RTN","ORWPCE3",11,0)
 . S VISIT=$$GETENC^PXAPI(DFN,$P(VSITSTR,";",2),$P(VSITSTR,";"))
"RTN","ORWPCE3",12,0)
 . S VSTR=VSITSTR
"RTN","ORWPCE3",13,0)
 E  D
"RTN","ORWPCE3",14,0)
 . S X0=^TIU(8925,IEN,0),X12=$G(^(12))
"RTN","ORWPCE3",15,0)
 . S VISIT=$P(X12,U,7)
"RTN","ORWPCE3",16,0)
 . I 'VISIT S VISIT=$P(X0,U,3)
"RTN","ORWPCE3",17,0)
 . D NOTEVSTR^ORWPCE(.VSTR,IEN)
"RTN","ORWPCE3",18,0)
 S VTYP=$P(VSTR,";",3)
"RTN","ORWPCE3",19,0)
 S ILST=1
"RTN","ORWPCE3",20,0)
 S ICOM=0
"RTN","ORWPCE3",21,0)
 S LST(1)="HDR"_U_("HID"[VTYP)_U_$P(X0,U,11)_U_VSTR_U_$P(X12,U,2)
"RTN","ORWPCE3",22,0)
 ;add hasCPT node
"RTN","ORWPCE3",23,0)
 S LST(1)=LST(1)_U_0
"RTN","ORWPCE3",24,0)
 I VISIT'>0 D  Q
"RTN","ORWPCE3",25,0)
 . I $G(VSTR)'="" M LST=^TMP("ORWPCE",$J,VSTR)  ; get cached visit data
"RTN","ORWPCE3",26,0)
 I $P(LST(1),U,2),VTYP="H" Q                    ; quit if admission
"RTN","ORWPCE3",27,0)
 K ^TMP("PXKENC",$J)
"RTN","ORWPCE3",28,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ORWPCE3",29,0)
 I '$D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0)) Q
"RTN","ORWPCE3",30,0)
 S $P(LST(1),U,6)=$D(^TMP("PXKENC",$J,VISIT,"CPT"))\10
"RTN","ORWPCE3",31,0)
 S X0=^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),LOC=+$P(X0,U,22)
"RTN","ORWPCE3",32,0)
 S ILST=ILST+1,LST(ILST)="VST^DT^"_$P(X0,U)
"RTN","ORWPCE3",33,0)
 S ILST=ILST+1,LST(ILST)="VST^PT^"_$P(X0,U,5)
"RTN","ORWPCE3",34,0)
 S ILST=ILST+1,LST(ILST)="VST^HL^"_LOC_"^^"_$P($G(^SC(LOC,0)),U)
"RTN","ORWPCE3",35,0)
 S ILST=ILST+1,LST(ILST)="VST^PS^0"  ;outpt
"RTN","ORWPCE3",36,0)
 ;S X0=$G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800))
"RTN","ORWPCE3",37,0)
 N VAL
"RTN","ORWPCE3",38,0)
 D SCSEL^ORWPCE(.VAL,$P(X0,U,5),$P(X0,U),LOC,VISIT)
"RTN","ORWPCE3",39,0)
 S ILST=ILST+1,LST(ILST)="VST^SC^"_$P($P(VAL,";",1),U,2)
"RTN","ORWPCE3",40,0)
 S ILST=ILST+1,LST(ILST)="VST^AO^"_$P($P(VAL,";",2),U,2)
"RTN","ORWPCE3",41,0)
 S ILST=ILST+1,LST(ILST)="VST^IR^"_$P($P(VAL,";",3),U,2)
"RTN","ORWPCE3",42,0)
 S ILST=ILST+1,LST(ILST)="VST^EC^"_$P($P(VAL,";",4),U,2)
"RTN","ORWPCE3",43,0)
 S ILST=ILST+1,LST(ILST)="VST^MST^"_$P($P(VAL,";",5),U,2)
"RTN","ORWPCE3",44,0)
 I $P(VAL,";",6)'="" D
"RTN","ORWPCE3",45,0)
 .S ILST=ILST+1,LST(ILST)="VST^HNC^"_$P($P(VAL,";",6),U,2)
"RTN","ORWPCE3",46,0)
 I $P(VAL,";",7)'="" D
"RTN","ORWPCE3",47,0)
 .S ILST=ILST+1,LST(ILST)="VST^CV^"_$P($P(VAL,";",7),U,2)
"RTN","ORWPCE3",48,0)
 ;for provider
"RTN","ORWPCE3",49,0)
 ; LST(n)="PRV"^ien^^^name^primary/secondary flag
"RTN","ORWPCE3",50,0)
 S IPRV=0 F  S IPRV=$O(^TMP("PXKENC",$J,VISIT,"PRV",IPRV)) Q:'IPRV  D
"RTN","ORWPCE3",51,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PRV",IPRV,0)
"RTN","ORWPCE3",52,0)
 . ;Q:$P(X0,U,4)'="P"
"RTN","ORWPCE3",53,0)
 . S CODE=$P(X0,U),NARR=$P($G(^VA(200,CODE,0)),U)
"RTN","ORWPCE3",54,0)
 . S PRIM=($P(X0,U,4)="P")
"RTN","ORWPCE3",55,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",56,0)
 . S LST(ILST)="PRV"_U_CODE_"^^^"_NARR_"^"_PRIM
"RTN","ORWPCE3",57,0)
 S IPOV=0 F  S IPOV=$O(^TMP("PXKENC",$J,VISIT,"POV",IPOV)) Q:'IPOV  D
"RTN","ORWPCE3",58,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"POV",IPOV,0),X802=$G(^(802)),X811=$G(^(811))
"RTN","ORWPCE3",59,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",60,0)
 . S:CODE CODE=$P(^ICD9(CODE,0),U)
"RTN","ORWPCE3",61,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",62,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",63,0)
 . S NARR=$P(X0,U,4)
"RTN","ORWPCE3",64,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",65,0)
 . S PRIM=($P(X0,U,12)="P")
"RTN","ORWPCE3",66,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",67,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",68,0)
 . S LST(ILST)="POV"_U_CODE_U_CAT_U_NARR_U_PRIM_U_PRV
"RTN","ORWPCE3",69,0)
 . I X811]"" D
"RTN","ORWPCE3",70,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",71,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",72,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",73,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",74,0)
 S ICPT=0 F  S ICPT=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT)) Q:'ICPT  D
"RTN","ORWPCE3",75,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"CPT",ICPT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",76,0)
 . S CODE=$$CODEC^ICPTCOD($P(X0,U)) ;ICR #1995
"RTN","ORWPCE3",77,0)
 . S:CODE=-1 CODE=""
"RTN","ORWPCE3",78,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",79,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",80,0)
 . S NARR=$P(X0,U,4)
"RTN","ORWPCE3",81,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",82,0)
 . S QTY=$P(X0,U,16)
"RTN","ORWPCE3",83,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",84,0)
 . S MCNT=0,MIDX=0,MODS=""
"RTN","ORWPCE3",85,0)
 . F  S MIDX=$O(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX)) Q:'MIDX  D
"RTN","ORWPCE3",86,0)
 . . S MIEN=$G(^TMP("PXKENC",$J,VISIT,"CPT",ICPT,1,MIDX,0))
"RTN","ORWPCE3",87,0)
 . . I +MIEN S MCNT=MCNT+1,MODS=MODS_";/"_MIEN
"RTN","ORWPCE3",88,0)
 . I +MCNT S MODS=MCNT_MODS
"RTN","ORWPCE3",89,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",90,0)
 . S LST(ILST)="CPT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_U_U_MODS
"RTN","ORWPCE3",91,0)
 . I X811]"" D
"RTN","ORWPCE3",92,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",93,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",94,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",95,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",96,0)
 ;for immunization:
"RTN","ORWPCE3",97,0)
 ; LST(n)="IMM"^Code^^^Series^prv^Reaction^Contraindicated^Refused
"RTN","ORWPCE3",98,0)
 S IIMM=0 F  S IIMM=$O(^TMP("PXKENC",$J,VISIT,"IMM",IIMM)) Q:'IIMM  D
"RTN","ORWPCE3",99,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"IMM",IIMM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",100,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",101,0)
 . S:CODE NARR=$P(^AUTTIMM(CODE,0),U)
"RTN","ORWPCE3",102,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",103,0)
 . S CAT=""
"RTN","ORWPCE3",104,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",105,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",106,0)
 . S LST(ILST)="IMM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",107,0)
 . I X811]"" D
"RTN","ORWPCE3",108,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",109,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",110,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",111,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",112,0)
 ;for skin test:
"RTN","ORWPCE3",113,0)
 ; LST(n)="SK"^Code^^^result^prv^reading^d/t read^d/t given
"RTN","ORWPCE3",114,0)
 S ISK=0 F  S ISK=$O(^TMP("PXKENC",$J,VISIT,"SK",ISK)) Q:'ISK  D
"RTN","ORWPCE3",115,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"SK",ISK,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",116,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",117,0)
 . S:CODE NARR=$P(^AUTTSK(CODE,0),U)
"RTN","ORWPCE3",118,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",119,0)
 . S CAT=""
"RTN","ORWPCE3",120,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",121,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",122,0)
 . S LST(ILST)="SK"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,5,6)_U_$P(X12,U)
"RTN","ORWPCE3",123,0)
 . I X811]"" D
"RTN","ORWPCE3",124,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",125,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",126,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",127,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",128,0)
 ;for patient education:
"RTN","ORWPCE3",129,0)
 ; LST(n)="PED"^Code^^^level of understanding^prv
"RTN","ORWPCE3",130,0)
 S IPED=0 F  S IPED=$O(^TMP("PXKENC",$J,VISIT,"PED",IPED)) Q:'IPED  D
"RTN","ORWPCE3",131,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"PED",IPED,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",132,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",133,0)
 . S:CODE NARR=$P(^AUTTEDT(CODE,0),U)
"RTN","ORWPCE3",134,0)
 . S QTY=$P(X0,U,6)
"RTN","ORWPCE3",135,0)
 . S CAT=""
"RTN","ORWPCE3",136,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",137,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",138,0)
 . S LST(ILST)="PED"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",139,0)
 . I X811]"" D
"RTN","ORWPCE3",140,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",141,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",142,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",143,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",144,0)
 ;for health factors:
"RTN","ORWPCE3",145,0)
 ; LST(n)="HF"^Code^^^level/severity^prv
"RTN","ORWPCE3",146,0)
 S IHF=0 F  S IHF=$O(^TMP("PXKENC",$J,VISIT,"HF",IHF)) Q:'IHF  D
"RTN","ORWPCE3",147,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"HF",IHF,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",148,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",149,0)
 . S:CODE NARR=$P(^AUTTHF(CODE,0),U)
"RTN","ORWPCE3",150,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",151,0)
 . S CAT=""
"RTN","ORWPCE3",152,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",153,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",154,0)
 . S LST(ILST)="HF"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",155,0)
 . I X811]"" D
"RTN","ORWPCE3",156,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",157,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",158,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",159,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",160,0)
 ;for exam:
"RTN","ORWPCE3",161,0)
 ; LST(n)="XAM"^Code^^^result^prv
"RTN","ORWPCE3",162,0)
 S IXAM=0 F  S IXAM=$O(^TMP("PXKENC",$J,VISIT,"XAM",IXAM)) Q:'IXAM  D
"RTN","ORWPCE3",163,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"XAM",IXAM,0),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",164,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",165,0)
 . S:CODE NARR=$P(^AUTTEXAM(CODE,0),U)
"RTN","ORWPCE3",166,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",167,0)
 . S CAT=""
"RTN","ORWPCE3",168,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",169,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",170,0)
 . S LST(ILST)="XAM"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV_U_$P(X0,U,6,7)
"RTN","ORWPCE3",171,0)
 . I X811]"" D
"RTN","ORWPCE3",172,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",173,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",174,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",175,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",176,0)
 ;for treatment:
"RTN","ORWPCE3",177,0)
 ; LST(n)="TRT"^Code^CAT^NARR^QTY^prv
"RTN","ORWPCE3",178,0)
 S ITRT=0 F  S ITRT=$O(^TMP("PXKENC",$J,VISIT,"TRT",ITRT)) Q:'ITRT  D
"RTN","ORWPCE3",179,0)
 . S X0=^TMP("PXKENC",$J,VISIT,"TRT",ITRT,0),X802=$G(^(802)),X12=$G(^(12)),X811=$G(^(811))
"RTN","ORWPCE3",180,0)
 . S CODE=$P(X0,U)
"RTN","ORWPCE3",181,0)
 . S QTY=$P(X0,U,4)
"RTN","ORWPCE3",182,0)
 . S CAT=$P(X802,U)
"RTN","ORWPCE3",183,0)
 . S NARR=$P(X0,U,6)
"RTN","ORWPCE3",184,0)
 . S:CAT CAT=$P(^AUTNPOV(CAT,0),U)
"RTN","ORWPCE3",185,0)
 . S:NARR NARR=$P(^AUTNPOV(NARR,0),U)
"RTN","ORWPCE3",186,0)
 . S PRV=$P(X12,U,4)
"RTN","ORWPCE3",187,0)
 . S ILST=ILST+1
"RTN","ORWPCE3",188,0)
 . S LST(ILST)="TRT"_U_CODE_U_CAT_U_NARR_U_QTY_U_PRV
"RTN","ORWPCE3",189,0)
 . I X811]"" D
"RTN","ORWPCE3",190,0)
 .. S ICOM=ICOM+1
"RTN","ORWPCE3",191,0)
 .. S $P(LST(ILST),U,10)=ICOM
"RTN","ORWPCE3",192,0)
 .. S ILST=ILST+1
"RTN","ORWPCE3",193,0)
 .. S LST(ILST)="COM"_U_ICOM_U_X811
"RTN","ORWPCE3",194,0)
 Q
"RTN","ORWPS")
0^33^B65159605
"RTN","ORWPS",1,0)
ORWPS ; SLC/KCM/JLI/REV/CLA - Meds Tab; 06/09/2010
"RTN","ORWPS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,141,173,203,190,195,265,275,243,280**;Dec 17, 1997;Build 85
"RTN","ORWPS",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","ORWPS",4,0)
COVER(LST,DFN) ; retrieve meds for cover sheet
"RTN","ORWPS",5,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",6,0)
 D OCL^PSOORRL(DFN,"","")
"RTN","ORWPS",7,0)
 N ILST,ITMP,X S ILST=0
"RTN","ORWPS",8,0)
 S ITMP="" F  S ITMP=$O(^TMP("PS",$J,ITMP)) Q:'ITMP  D
"RTN","ORWPS",9,0)
 . S X=^TMP("PS",$J,ITMP,0)
"RTN","ORWPS",10,0)
 . I '$L($P(X,U,2)) S X="??"  ; show something if drug empty
"RTN","ORWPS",11,0)
 . I $D(^TMP("PS",$J,ITMP,"CLINIC",0)) S LST($$NXT)=$P(X,U,1,2)_U_$P(X,U,8,9)_U_"C"
"RTN","ORWPS",12,0)
 . E  S LST($$NXT)=$P(X,U,1,2)_U_$P(X,U,8,9)
"RTN","ORWPS",13,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",14,0)
 Q
"RTN","ORWPS",15,0)
DT(X) ; -- Returns FM date for X
"RTN","ORWPS",16,0)
 N Y,%DT S %DT="T",Y="" D:X'="" ^%DT
"RTN","ORWPS",17,0)
 Q Y
"RTN","ORWPS",18,0)
 ;
"RTN","ORWPS",19,0)
ACTIVE(LST,DFN,USER,VIEW,UPDATE) ; retrieve active inpatient & outpatient meds
"RTN","ORWPS",20,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",21,0)
 K ^TMP("ORACT",$J)
"RTN","ORWPS",22,0)
 N BEG,DATE,END,ERROR,CTX,STVIEW
"RTN","ORWPS",23,0)
 S (BEG,END,CTX)=""
"RTN","ORWPS",24,0)
 S VIEW=+$G(VIEW)
"RTN","ORWPS",25,0)
 S UPDATE=+$G(UPDATE)
"RTN","ORWPS",26,0)
 I VIEW=0,UPDATE=0 S VIEW=1
"RTN","ORWPS",27,0)
 S CTX=$$GET^XPAR("ALL","ORCH CONTEXT MEDS")
"RTN","ORWPS",28,0)
 I CTX=";" D DEL^XPAR("USR.`"_DUZ,"ORCH CONTEXT MEDS")
"RTN","ORWPS",29,0)
 S CTX=$$GET^XPAR("ALL","ORCH CONTEXT MEDS")
"RTN","ORWPS",30,0)
 S BEG=$$DT($P(CTX,";")),END=$$DT($P(CTX,";",2))
"RTN","ORWPS",31,0)
 I +$G(USER)=0 S USER=DUZ
"RTN","ORWPS",32,0)
 I UPDATE=1 D
"RTN","ORWPS",33,0)
 .S STVIEW=$$GET^XPAR($G(USER)_";VA(200,","OR MEDS TAB SORT",1,"I")
"RTN","ORWPS",34,0)
 .I VIEW>0,+STVIEW'=VIEW D PUT^XPAR(DUZ_";VA(200,","OR MEDS TAB SORT",,VIEW,.ERROR) S STVIEW=VIEW
"RTN","ORWPS",35,0)
 .I VIEW=0,+STVIEW=0 D PUT^XPAR(DUZ_";VA(200,","OR MEDS TAB SORT",,"1",.ERROR) S STVIEW=1,VIEW=1
"RTN","ORWPS",36,0)
 .I VIEW=0,+STVIEW'=VIEW S VIEW=+STVIEW
"RTN","ORWPS",37,0)
 .S LST(0)=STVIEW_U
"RTN","ORWPS",38,0)
 .S DATE=""
"RTN","ORWPS",39,0)
 .I BEG>0,END>0 S DATE=" ("_$$FMTE^XLFDT(BEG,2)_"-"_$$FMTE^XLFDT(END,2)_")"
"RTN","ORWPS",40,0)
 .;I +BEG=0!(+END=0) S DATE=" (To set a specific date range go to Tools|Options|Other Parameters)"
"RTN","ORWPS",41,0)
 .S LST(0)=LST(0)_DATE
"RTN","ORWPS",42,0)
 D OCL^PSOORRL(DFN,BEG,END,VIEW)
"RTN","ORWPS",43,0)
 N ITMP,FIELDS,INSTRUCT,COMMENTS,REASON,NVSDT,TYPE,ILST,J S ILST=0
"RTN","ORWPS",44,0)
 S ITMP="" F  S ITMP=$O(^TMP("PS",$J,ITMP)) Q:'ITMP  D
"RTN","ORWPS",45,0)
 . K INSTRUCT,COMMENTS,REASON
"RTN","ORWPS",46,0)
 . K ^TMP("ORACT",$J,"COMMENTS")
"RTN","ORWPS",47,0)
 . S COMMENTS="^TMP(""ORACT"",$J,""COMMENTS"")"
"RTN","ORWPS",48,0)
 . S (INSTRUCT,@COMMENTS)="",FIELDS=^TMP("PS",$J,ITMP,0)
"RTN","ORWPS",49,0)
 . I +$P(FIELDS,"^",8),$D(^OR(100,+$P(FIELDS,"^",8),8,"C","XX")) D
"RTN","ORWPS",50,0)
 . . S $P(^TMP("PS",$J,ITMP,0),"^",2)="*"_$P(^TMP("PS",$J,ITMP,0),"^",2) ;dan testing
"RTN","ORWPS",51,0)
 . S TYPE=$S($P($P(FIELDS,U),";",2)="O":"OP",1:"UD")
"RTN","ORWPS",52,0)
 . I $D(^TMP("PS",$J,ITMP,"CLINIC",0)) S TYPE="CP"
"RTN","ORWPS",53,0)
 . N LOC,LOCEX S (LOC,LOCEX)=""
"RTN","ORWPS",54,0)
 . I TYPE="CP" S LOC=$G(^TMP("PS",$J,ITMP,"CLINIC",0))
"RTN","ORWPS",55,0)
 . S:LOC LOCEX=$P($G(^SC(+LOC,0)),U)_":"_+LOC ;IMO NEW
"RTN","ORWPS",56,0)
 . I TYPE="OP",$P(FIELDS,";")["N" S TYPE="NV"          ;non-VA med
"RTN","ORWPS",57,0)
 . I $O(^TMP("PS",$J,ITMP,"A",0))>0 S TYPE="IV"
"RTN","ORWPS",58,0)
 . I $O(^TMP("PS",$J,ITMP,"B",0))>0 S TYPE="IV"
"RTN","ORWPS",59,0)
 . I (TYPE="UD")!(TYPE="CP") D UDINST(.INSTRUCT,ITMP)
"RTN","ORWPS",60,0)
 . I TYPE="OP" D OPINST(.INSTRUCT,ITMP)
"RTN","ORWPS",61,0)
 . I TYPE="IV" D IVINST(.INSTRUCT,ITMP)
"RTN","ORWPS",62,0)
 . I TYPE="NV" D NVINST(.INSTRUCT,ITMP),NVREASON(.REASON,.NVSDT,ITMP)
"RTN","ORWPS",63,0)
 . I (TYPE="UD")!(TYPE="IV")!(TYPE="NV")!(TYPE="CP") D SETMULT(COMMENTS,ITMP,"SIO")
"RTN","ORWPS",64,0)
 . M COMMENTS=@COMMENTS
"RTN","ORWPS",65,0)
 . I $D(COMMENTS(1)) S COMMENTS(1)="\"_COMMENTS(1)
"RTN","ORWPS",66,0)
 . S:TYPE="NV" $P(FIELDS,U,4)=$G(NVSDT)
"RTN","ORWPS",67,0)
 . I LOC S LST($$NXT)="~CP:"_LOCEX_U_FIELDS
"RTN","ORWPS",68,0)
 . E  S LST($$NXT)="~"_TYPE_U_FIELDS
"RTN","ORWPS",69,0)
 . S J=0 F  S J=$O(INSTRUCT(J)) Q:'J  S LST($$NXT)=INSTRUCT(J)
"RTN","ORWPS",70,0)
 . S J=0 F  S J=$O(COMMENTS(J)) Q:'J  S LST($$NXT)="t"_COMMENTS(J)
"RTN","ORWPS",71,0)
 . S J=0 F  S J=$O(REASON(J)) Q:'J  S LST($$NXT)="t"_REASON(J)
"RTN","ORWPS",72,0)
 K ^TMP("PS",$J)
"RTN","ORWPS",73,0)
 K ^TMP("ORACT",$J)
"RTN","ORWPS",74,0)
 Q
"RTN","ORWPS",75,0)
NXT() ; increment ILST
"RTN","ORWPS",76,0)
 S ILST=ILST+1
"RTN","ORWPS",77,0)
 Q ILST
"RTN","ORWPS",78,0)
 ;
"RTN","ORWPS",79,0)
UDINST(Y,INDEX) ; assembles instructions for a unit dose order
"RTN","ORWPS",80,0)
 N I,X,RST
"RTN","ORWPS",81,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",82,0)
 S RST="^TMP(""ORACT"",$J,""INSTRUCT"")"
"RTN","ORWPS",83,0)
 S @RST@(1)=" "_$P(X,U,2),@RST=1
"RTN","ORWPS",84,0)
 S X=$S($L($P(X,U,6)):$P(X,U,6),1:$P(X,U,7))
"RTN","ORWPS",85,0)
 I $L(X) S @RST=2,@RST@(2)=X
"RTN","ORWPS",86,0)
 E  S @RST=1 D SETMULT(.RST,INDEX,"SIG")
"RTN","ORWPS",87,0)
 S @RST@(2)="\Give: "_$G(@RST@(2)),@RST=$G(@RST,2)
"RTN","ORWPS",88,0)
 D SETMULT(RST,INDEX,"MDR"),SETMULT(RST,INDEX,"SCH")
"RTN","ORWPS",89,0)
 F I=3:1:@RST S @RST@(I)=" "_@RST@(I)
"RTN","ORWPS",90,0)
 M Y=@RST K @RST
"RTN","ORWPS",91,0)
 Q
"RTN","ORWPS",92,0)
OPINST(Y,INDEX) ; assembles instructions for an outpatient prescription
"RTN","ORWPS",93,0)
 N I,X,RST
"RTN","ORWPS",94,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",95,0)
 S RST="^TMP(""ORACT"",$J,""INSTRUCT"")"
"RTN","ORWPS",96,0)
 S @RST@(1)=" "_$P(X,U,2),@RST=1
"RTN","ORWPS",97,0)
 I $L($P(X,U,12)) S @RST@(1)=@RST@(1)_"  Qty: "_$P(X,U,12)
"RTN","ORWPS",98,0)
 I $L($P(X,U,11)) S @RST@(1)=@RST@(1)_" for "_$P(X,U,11)_" days"
"RTN","ORWPS",99,0)
 D SETMULT(RST,INDEX,"SIG")
"RTN","ORWPS",100,0)
 I @RST=1 D
"RTN","ORWPS",101,0)
 . D SETMULT(RST,INDEX,"SIO")
"RTN","ORWPS",102,0)
 . D SETMULT(RST,INDEX,"MDR")
"RTN","ORWPS",103,0)
 . D SETMULT(RST,INDEX,"SCH")
"RTN","ORWPS",104,0)
 S @RST@(2)="\ Sig: "_$G(@RST@(2))
"RTN","ORWPS",105,0)
 F I=3:1:@RST S @RST@(I)=" "_@RST@(I)
"RTN","ORWPS",106,0)
 M Y=@RST K @RST
"RTN","ORWPS",107,0)
 Q
"RTN","ORWPS",108,0)
IVINST(Y,INDEX) ; assembles instructions for an IV order
"RTN","ORWPS",109,0)
 N SOLN1,I,RST,IVDUR,CNT
"RTN","ORWPS",110,0)
 S IVDUR=""
"RTN","ORWPS",111,0)
 S RST="^TMP(""ORACT"",$J,""INSTRUCT"")"
"RTN","ORWPS",112,0)
 S @RST=0 D SETMULT(RST,INDEX,"A") S SOLN1=@RST+1
"RTN","ORWPS",113,0)
 D SETMULT(RST,INDEX,"B")
"RTN","ORWPS",114,0)
 I $D(@RST@(SOLN1)),$L($P(FIELDS,U,2)) S @RST@(SOLN1)="in "_@RST@(SOLN1)
"RTN","ORWPS",115,0)
 S SOLN1=@RST+1
"RTN","ORWPS",116,0)
 S CNT=@RST
"RTN","ORWPS",117,0)
 D SETMULT(RST,INDEX,"MDR")
"RTN","ORWPS",118,0)
 I $D(^TMP("PS",$J,INDEX,"SCH",1,0)) S @RST@(@RST)=@RST@(@RST)_" "_^TMP("PS",$J,INDEX,"SCH",1,0)
"RTN","ORWPS",119,0)
 F I=1:1:@RST S @RST@(I)="\"_$TR(@RST@(I),U," ")
"RTN","ORWPS",120,0)
 I $D(@RST@(1)) S @RST@(1)=" "_$E(@RST@(1),2,999)
"RTN","ORWPS",121,0)
 S @RST@(@RST)=@RST@(@RST)_" "_$P(^TMP("PS",$J,INDEX,0),U,3)
"RTN","ORWPS",122,0)
 S:$D(^TMP("PS",$J,INDEX,"IVLIM",0)) IVDUR=$G(^TMP("PS",$J,INDEX,"IVLIM",0))
"RTN","ORWPS",123,0)
 I $L(IVDUR) D
"RTN","ORWPS",124,0)
 . N DURU,DURV S DURU="",DURV=0
"RTN","ORWPS",125,0)
 . I IVDUR["dose" D  Q
"RTN","ORWPS",126,0)
 . .S DURV=$P(IVDUR,"doses",2)
"RTN","ORWPS",127,0)
 . .S IVDUR="for a total of "_+DURV_$S(+DURV=1:"dose",+DURV>1:" doses",1:" dose")
"RTN","ORWPS",128,0)
 . .S @RST@(@RST)=@RST@(@RST)_" "_IVDUR
"RTN","ORWPS",129,0)
 . S DURU=$E(IVDUR,1),DURV=$E(IVDUR,2,$L(IVDUR))
"RTN","ORWPS",130,0)
 . I (DURU="D")!(DURU="d") S IVDUR="for "_+DURV_$S(+DURV=1:" day",+DURV>1:" days",1:" day")
"RTN","ORWPS",131,0)
 . I (DURU="H")!(DURU="h") S IVDUR="for "_+DURV_$S(+DURV=1:" hours",+DURV>1:" hours",1:" hour")
"RTN","ORWPS",132,0)
 . I (DURU="M")!(DURU="m") S IVDUR="with total volume "_+DURV_" ml"
"RTN","ORWPS",133,0)
 . I (DURU="L")!(DURU="l") S IVDUR="with total volume "_+DURV_" L"
"RTN","ORWPS",134,0)
 . S @RST@(@RST)=@RST@(@RST)_" "_IVDUR
"RTN","ORWPS",135,0)
 M Y=@RST K @RST
"RTN","ORWPS",136,0)
 Q
"RTN","ORWPS",137,0)
NVINST(Y,INDEX) ; assembles instructions for a non-VA med
"RTN","ORWPS",138,0)
 N I,X,RST
"RTN","ORWPS",139,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",140,0)
 S RST="^TMP(""ORACT"",$J,""INSTRUCT"")"
"RTN","ORWPS",141,0)
 S @RST@(1)=" "_$P(X,U,2),@RST=1
"RTN","ORWPS",142,0)
 D SETMULT(RST,INDEX,"SIG")
"RTN","ORWPS",143,0)
 I @RST=1 D
"RTN","ORWPS",144,0)
 . D SETMULT(RST,INDEX,"SIO")
"RTN","ORWPS",145,0)
 . D SETMULT(RST,INDEX,"MDR")
"RTN","ORWPS",146,0)
 . D SETMULT(RST,INDEX,"SCH")
"RTN","ORWPS",147,0)
 S @RST@(2)="\ "_$G(@RST@(2))
"RTN","ORWPS",148,0)
 F I=3:1:@RST S @RST@(I)=" "_@RST@(I)
"RTN","ORWPS",149,0)
 M Y=@RST K @RST
"RTN","ORWPS",150,0)
 Q
"RTN","ORWPS",151,0)
NVREASON(ORR,NVSDT,INDEX) ; assembles start date and reasons for a non-VA med
"RTN","ORWPS",152,0)
 N ORI,J,X,ORN,ORA
"RTN","ORWPS",153,0)
 S ORI=0 K ORR
"RTN","ORWPS",154,0)
 S X=^TMP("PS",$J,INDEX,0)
"RTN","ORWPS",155,0)
 S ORN=+$P(X,U,8)
"RTN","ORWPS",156,0)
 I $D(^OR(100,ORN,0)) D
"RTN","ORWPS",157,0)
 .S NVSDT=$P(^OR(100,ORN,0),U,8)
"RTN","ORWPS",158,0)
 .D WPVAL^ORWDXR(.ORA,ORN,"STATEMENTS") I $D(ORA) D
"RTN","ORWPS",159,0)
 ..S J=0 F  S J=$O(ORA(J)) Q:J<1  S ORI=ORI+1,ORR(ORI)=ORA(J)
"RTN","ORWPS",160,0)
 Q
"RTN","ORWPS",161,0)
SETMULT(Y,INDEX,SUB) ; appends the multiple at the subscript to Y
"RTN","ORWPS",162,0)
 N I,X,J
"RTN","ORWPS",163,0)
 S J=$G(@Y)
"RTN","ORWPS",164,0)
 S I=0 F  S I=$O(^TMP("PS",$J,INDEX,SUB,I)) Q:'I  S X=$G(^(I,0)) D
"RTN","ORWPS",165,0)
 . I SUB="B",$L($P(X,U,3)) S X=$P(X,U)_" "_$P(X,U,3)_"^"_$P(X,U,2)
"RTN","ORWPS",166,0)
 . S J=J+1,@Y@(J)=X
"RTN","ORWPS",167,0)
 S @Y=J
"RTN","ORWPS",168,0)
 Q
"RTN","ORWPS",169,0)
COMPRESS(Y) ; concatenate Y subscripts into smallest possible number
"RTN","ORWPS",170,0)
 N I,J,X S J=1,X(J)=""
"RTN","ORWPS",171,0)
 S I=0 F  S I=$O(Y(I)) Q:'I  D
"RTN","ORWPS",172,0)
 . I ($L(Y(I))+$L(X(J)))>245 S J=J+1,X(J)=""
"RTN","ORWPS",173,0)
 . S X(J)=X(J)_$S($L(X(J)):" ",1:"")_Y(I)
"RTN","ORWPS",174,0)
 K Y M Y=X
"RTN","ORWPS",175,0)
 Q
"RTN","ORWPS",176,0)
DETAIL(ROOT,DFN,ID) ; -- show details for a med order
"RTN","ORWPS",177,0)
 K ^TMP("ORXPND",$J)
"RTN","ORWPS",178,0)
 N LCNT,ORVP
"RTN","ORWPS",179,0)
 S LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWPS",180,0)
 D MEDS^ORCXPND1
"RTN","ORWPS",181,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWPS",182,0)
 Q
"RTN","ORWPS",183,0)
MEDHIST(ORROOT,DFN,ORIFN) ; -- show admin history for a med  (RV)
"RTN","ORWPS",184,0)
 N ORPSID,HPIV,ISIV,CKPKG,ORPHMID
"RTN","ORWPS",185,0)
 N CLINDISP,IVDIAL
"RTN","ORWPS",186,0)
 S ORPSID=+$P($$OI^ORX8(ORIFN),U,3),ISIV=0,HPIV=0
"RTN","ORWPS",187,0)
 S ORROOT=$NA(^TMP("ORHIST",$J)) K @ORROOT
"RTN","ORWPS",188,0)
 S ORPHMID=$G(^OR(100,+ORIFN,4))  ;Pharmacy order number
"RTN","ORWPS",189,0)
 S ISIV=$O(^ORD(100.98,"B","IV RX",ISIV))
"RTN","ORWPS",190,0)
 S HPIV=$O(^ORD(100.98,"B","TPN",HPIV))
"RTN","ORWPS",191,0)
 S CLINDISP=$O(^ORD(100.98,"B","C RX",""))
"RTN","ORWPS",192,0)
 S IVDIAL=$O(^ORD(101.41,"B","PSJI OR PAT FLUID OE",""))
"RTN","ORWPS",193,0)
 S CKPKG=$$PATCH^XPDUTL("PSB*2.0*19")
"RTN","ORWPS",194,0)
 ;if the order is pending or the order has no pharmacy # 
"RTN","ORWPS",195,0)
 ;or the order is not in the Display Group IV MEDICATION
"RTN","ORWPS",196,0)
 ; then use the Orderable item number to get the MAH.
"RTN","ORWPS",197,0)
 I (ORPHMID["P")!(ORPHMID="") D  Q
"RTN","ORWPS",198,0)
 . I '$L($T(HISTORY^PSBMLHS)) D  Q
"RTN","ORWPS",199,0)
 . . S @ORROOT@(0)="This report is only available using BCMA version 2.0."
"RTN","ORWPS",200,0)
 . D HISTORY^PSBMLHS(.ORROOT,DFN,ORPSID)  ; DBIA #3459 for BCMA v2.0
"RTN","ORWPS",201,0)
 ; If the order has a Display Group of IV MEDICATION the use the Pharmacy order number to get the MA
"RTN","ORWPS",202,0)
 I ($P($G(^OR(100,+ORIFN,0)),U,11)=ISIV)!($P($G(^OR(100,+ORIFN,0)),U,11)=HPIV)!(($P($G(^OR(100,+ORIFN,0)),U,11)=CLINDISP)&(+$P($G(^OR(100,+ORIFN,0)),U,5)=IVDIAL)) D  Q
"RTN","ORWPS",203,0)
 . I 'CKPKG S @ORROOT@(0)="Medication Administration History is not available at this time for IV fluids."
"RTN","ORWPS",204,0)
 . I CKPKG D
"RTN","ORWPS",205,0)
 . . D RPC^PSBO(.ORROOT,"PM",DFN,"","","","","","","","","",ORPHMID)  ;DBIA #3955
"RTN","ORWPS",206,0)
 . . I '$D(@ORROOT) S @ORROOT@(0)="No Medication Administration History found for the IV order."
"RTN","ORWPS",207,0)
 I '$L($T(HISTORY^PSBMLHS)) D  Q
"RTN","ORWPS",208,0)
 . S @ORROOT@(0)="This report is only available using BCMA version 2.0."
"RTN","ORWPS",209,0)
 D HISTORY^PSBMLHS(.ORROOT,DFN,ORPSID)  ; DBIA #3459 for BCMA v2.0
"RTN","ORWPS",210,0)
 Q
"RTN","ORWPS",211,0)
 ;
"RTN","ORWPS",212,0)
REASON(ORY) ; -- Return Non-VA Med Statement/Reasons
"RTN","ORWPS",213,0)
 N ORE
"RTN","ORWPS",214,0)
 D GETLST^XPAR(.ORY,"ALL","ORWD NONVA REASON","E")
"RTN","ORWPS",215,0)
 Q
"RTN","ORWPT")
0^93^B60483737
"RTN","ORWPT",1,0)
ORWPT ; SLC/KCM/REV - Patient Lookup Functions ;04/14/10  10:37
"RTN","ORWPT",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,149,206,187,190,215,243,280**;Dec 17, 1997;Build 85
"RTN","ORWPT",3,0)
 ;
"RTN","ORWPT",4,0)
 ; Ref. to ^UTILITY via IA 10061
"RTN","ORWPT",5,0)
 ;
"RTN","ORWPT",6,0)
IDINFO(REC,DFN) ; Return identifying information for a patient
"RTN","ORWPT",7,0)
 ; PID^DOB^SEX^VET^SC%^WARD^RM-BED^NAME
"RTN","ORWPT",8,0)
 N X0,X1,X101,X3,XV  ; name/dob/sex/ssn, ward, room-bed, sc%, vet
"RTN","ORWPT",9,0)
 S X0=$G(^DPT(DFN,0)),X1=$G(^(.1)),X101=$G(^(.101)),X3=$G(^(.3)),XV=$G(^("VET"))
"RTN","ORWPT",10,0)
 S REC=$$SSN^DPTLK1(DFN)_U_$$DOB^DPTLK1(DFN,2)_U_$P(X0,U,2)_U_$P(XV,U)_U_$P(X3,U,2)_U_$P(X1,U)_U_$P(X101,U)_U_$P(X0,U) ;DG249
"RTN","ORWPT",11,0)
 Q
"RTN","ORWPT",12,0)
PTINQ(REF,DFN) ; Return formatted pt inquiry report
"RTN","ORWPT",13,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",14,0)
 D DGINQ^ORCXPND1(DFN)
"RTN","ORWPT",15,0)
 S REF=$NA(^TMP("ORDATA",$J,1))
"RTN","ORWPT",16,0)
 Q
"RTN","ORWPT",17,0)
SCDIS(LST,DFN) ; Return service connected % and rated disabilities
"RTN","ORWPT",18,0)
 N VAEL,VAERR,I,ILST,DIS,SC,X
"RTN","ORWPT",19,0)
 D ELIG^VADPT
"RTN","ORWPT",20,0)
 S LST(1)="Service Connected: "_$S(+VAEL(3):$P(VAEL(3),U,2)_"%",1:"NO")
"RTN","ORWPT",21,0)
 I 'VAEL(4),'$P($G(^DG(391,+VAEL(6),0)),U,2) S LST(2)="NOT A VETERAN." Q
"RTN","ORWPT",22,0)
 S I=0,ILST=1 F  S I=$O(^DPT(DFN,.372,I)) Q:'I  S X=^(I,0) D
"RTN","ORWPT",23,0)
 . S DIS=$P($G(^DIC(31,+X,0)),U) Q:DIS=""
"RTN","ORWPT",24,0)
 . S SC=$S($P(X,U,3):"SC",$P(X,U,3)']"":"not specified",1:"NSC")
"RTN","ORWPT",25,0)
 . S ILST=ILST+1,LST(ILST)=DIS_" ("_$P(X,U,2)_"% "_SC_")"
"RTN","ORWPT",26,0)
 I ILST=1 S LST(2)="Rated Disabilities: NONE STATED"
"RTN","ORWPT",27,0)
 Q
"RTN","ORWPT",28,0)
SHOW ; temporary - show patient inquiry screen
"RTN","ORWPT",29,0)
 N I,Y,DIC S DIC=2,DIC(0)="AEMQ" D ^DIC Q:'Y
"RTN","ORWPT",30,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",31,0)
 D DGINQ^ORCXPND1(+Y)
"RTN","ORWPT",32,0)
 S I=0 F  S I=$O(^TMP("ORDATA",$J,1,I)) Q:'I  W !,^(I)
"RTN","ORWPT",33,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORWPT",34,0)
 Q
"RTN","ORWPT",35,0)
SELCHK(REC,DFN) ; Check for sensitive pt
"RTN","ORWPT",36,0)
 ; SENSITIVE
"RTN","ORWPT",37,0)
 S REC=$$EN1^ORQPT2(DFN)
"RTN","ORWPT",38,0)
 Q
"RTN","ORWPT",39,0)
DIEDON(VAL,DFN) ; Check for a date of death
"RTN","ORWPT",40,0)
 S VAL=+$G(^DPT(DFN,.35))
"RTN","ORWPT",41,0)
 Q
"RTN","ORWPT",42,0)
SELECT(REC,DFN) ; Selects patient & returns key information
"RTN","ORWPT",43,0)
 ;  1    2   3   4    5      6    7    8       9       10      11  12
"RTN","ORWPT",44,0)
 ; NAME^SEX^DOB^SSN^LOCIEN^LOCNM^RMBD^CWAD^SENSITIVE^ADMITTED^CONV^SC^
"RTN","ORWPT",45,0)
 ; 13  14  15  16
"RTN","ORWPT",46,0)
 ; SC%^ICN^AGE^TS
"RTN","ORWPT",47,0)
 ;
"RTN","ORWPT",48,0)
 ; for CCOW (RV - 2/27/03)  name="-1", location=error message
"RTN","ORWPT",49,0)
 I '$D(^DPT(+DFN,0)) S REC="-1^^^^^Patient is unknown to CPRS." Q
"RTN","ORWPT",50,0)
 ;
"RTN","ORWPT",51,0)
 N X
"RTN","ORWPT",52,0)
 K ^TMP($J,"OC-OPOS") ; delete once per order session order checks
"RTN","ORWPT",53,0)
 K ^TMP("ORWPCE",$J) ; delete PCE 'cache' when switching patients
"RTN","ORWPT",54,0)
 S X=^DPT(DFN,0),REC=$P(X,U,1,3)_U_$P(X,U,9)_U_U_$G(^(.1))_U_$G(^(.101))
"RTN","ORWPT",55,0)
 S X=$P(REC,U,6) I $L(X) S $P(REC,U,5)=+$G(^DIC(42,+$O(^DIC(42,"B",X,0)),44))
"RTN","ORWPT",56,0)
 S $P(REC,U,8)=$$CWAD^ORQPT2(DFN)_U_$$EN1^ORQPT2(DFN)
"RTN","ORWPT",57,0)
 ; I $P(REC,U,9) D EN2^ORQPT2(DFN)  ;update DG security log ; DG249
"RTN","ORWPT",58,0)
 S X=$G(^DPT(DFN,.105)) I X S $P(REC,U,10)=$P($G(^DGPM(X,0)),U)
"RTN","ORWPT",59,0)
 S:'$D(IOST) IOST="P-OTHER"
"RTN","ORWPT",60,0)
 S $P(REC,U,11)=0
"RTN","ORWPT",61,0)
 D ELIG^VADPT S $P(REC,U,12)=$G(VAEL(3)) ;two pieces: SC^SC%
"RTN","ORWPT",62,0)
 I $L($T(GETICN^MPIF001)) S X=+$$GETICN^MPIF001(DFN) S:X>0 $P(REC,U,14)=X
"RTN","ORWPT",63,0)
 S $P(REC,U,15)=$$AGE(DFN,$P(REC,U,3))
"RTN","ORWPT",64,0)
 S $P(REC,U,16)=+$G(^DPT(DFN,.103)) ; treating specialty
"RTN","ORWPT",65,0)
 K VAEL,VAERR ;VADPT call to kill?
"RTN","ORWPT",66,0)
 S ^DISV(DUZ,"^DPT(")=DFN
"RTN","ORWPT",67,0)
 Q
"RTN","ORWPT",68,0)
SHARE(VAL,IP,HWND,DFN) ; Set global to share DFN with other applications
"RTN","ORWPT",69,0)
 K ^TMP("ORWCHART",$J),^TMP("ORECALL",$J),^TMP("ORWORD",$J)
"RTN","ORWPT",70,0)
 K ^TMP("ORWDXMQ",$J)
"RTN","ORWPT",71,0)
 S ^TMP("ORWCHART",$J,IP,HWND)=DFN
"RTN","ORWPT",72,0)
 Q
"RTN","ORWPT",73,0)
BYWARD(LST,WARD) ; Return a list of patients in a ward
"RTN","ORWPT",74,0)
 N ILST,DFN
"RTN","ORWPT",75,0)
 I +$G(WARD)<1 S LST(1)="^No ward identified" Q
"RTN","ORWPT",76,0)
 S (ILST,DFN)=0
"RTN","ORWPT",77,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;DBIA #36
"RTN","ORWPT",78,0)
 F  S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0  D
"RTN","ORWPT",79,0)
 . S ILST=ILST+1,LST(ILST)=+DFN_U_$P(^DPT(+DFN,0),U)_U_$G(^DPT(+DFN,.101))
"RTN","ORWPT",80,0)
 I ILST<1 S LST(1)="^No patients found."
"RTN","ORWPT",81,0)
 Q
"RTN","ORWPT",82,0)
LAST5(LST,ID) ; Return a list of patients matching A9999 identifiers
"RTN","ORWPT",83,0)
 N I,IEN,XREF
"RTN","ORWPT",84,0)
 S (I,IEN)=0,XREF=$S($L(ID)=5:"BS5",1:"BS")
"RTN","ORWPT",85,0)
 F  S IEN=$O(^DPT(XREF,ID,IEN)) Q:'IEN  D
"RTN","ORWPT",86,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",87,0)
 Q
"RTN","ORWPT",88,0)
 ;
"RTN","ORWPT",89,0)
LAST5RPL(LST,ID) ; ; Return list matching A9999 id's, but from RPL only.
"RTN","ORWPT",90,0)
 N ORRPL,ORCNT,ORPT,ORPIEN
"RTN","ORWPT",91,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",92,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",93,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",94,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",95,0)
 ;
"RTN","ORWPT",96,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",97,0)
 F  S ORPT=$O(^OR(100.21,ORRPL,10,ORPT)) Q:'ORPT  D
"RTN","ORWPT",98,0)
 .S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORPT,0))
"RTN","ORWPT",99,0)
 .I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",100,0)
 .S ORCNT=ORCNT+1
"RTN","ORWPT",101,0)
 .S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",102,0)
 ;
"RTN","ORWPT",103,0)
 Q
"RTN","ORWPT",104,0)
 ;
"RTN","ORWPT",105,0)
FULLSSN(LST,ID) ; Return a list of patients matching full SSN entered
"RTN","ORWPT",106,0)
 N I,IEN
"RTN","ORWPT",107,0)
 S (I,IEN)=0
"RTN","ORWPT",108,0)
 F  S IEN=$O(^DPT("SSN",ID,IEN)) Q:'IEN  D
"RTN","ORWPT",109,0)
 . S I=I+1,LST(I)=IEN_U_$P(^DPT(IEN,0),U)_U_$$DOB^DPTLK1(IEN,2)_U_$$SSN^DPTLK1(IEN)  ; DG249
"RTN","ORWPT",110,0)
 Q
"RTN","ORWPT",111,0)
 ;
"RTN","ORWPT",112,0)
FSSNRPL(LST,ID) ; Return list matching Full SSN, but from RPL only.
"RTN","ORWPT",113,0)
 N ORRPL,ORCNT,ORPT,ORLPT,ORPIEN
"RTN","ORWPT",114,0)
 ; IA ____ allows read access to NEW PERSON file node 101:
"RTN","ORWPT",115,0)
 S ORRPL=$G(^VA(200,DUZ,101))
"RTN","ORWPT",116,0)
 S ORRPL=$P(ORRPL,U,2)
"RTN","ORWPT",117,0)
 I (('ORRPL)!(ORRPL="")) S LST(0)="" Q
"RTN","ORWPT",118,0)
 ;
"RTN","ORWPT",119,0)
 S (ORCNT,ORPT)=0
"RTN","ORWPT",120,0)
 F  S ORPT=$O(^DPT("SSN",ID,ORPT)) Q:'ORPT  D
"RTN","ORWPT",121,0)
 .S ORLPT=0
"RTN","ORWPT",122,0)
 .F  S ORLPT=$O(^OR(100.21,ORRPL,10,ORLPT)) Q:'ORLPT  D
"RTN","ORWPT",123,0)
 ..S ORPIEN=+$G(^OR(100.21,ORRPL,10,ORLPT,0))
"RTN","ORWPT",124,0)
 ..I ((ORPIEN<0)!(ORPIEN="")) Q
"RTN","ORWPT",125,0)
 ..I (ORPIEN'=ORPT) Q
"RTN","ORWPT",126,0)
 ..S ORCNT=ORCNT+1
"RTN","ORWPT",127,0)
 ..S LST(ORCNT)=ORPIEN_U_$P(^DPT(ORPIEN,0),U)_U_$$DOB^DPTLK1(ORPIEN,2)_U_$$SSN^DPTLK1(ORPIEN) ; DG249.
"RTN","ORWPT",128,0)
 ;
"RTN","ORWPT",129,0)
 Q
"RTN","ORWPT",130,0)
 ;
"RTN","ORWPT",131,0)
TOP(LST) ; Return top for all patients list (last selected for now)
"RTN","ORWPT",132,0)
 N IEN
"RTN","ORWPT",133,0)
 S IEN=$G(^DISV(DUZ,"^DPT("))
"RTN","ORWPT",134,0)
 I IEN S LST(1)=IEN_U_$P($G(^DPT(IEN,0)),U)
"RTN","ORWPT",135,0)
 Q
"RTN","ORWPT",136,0)
ENCTITL(REC,DFN,LOC,PROV) ; Return external values for encounter
"RTN","ORWPT",137,0)
 ; LOCNAME^LOCABBR^ROOMBED^PROVNAME
"RTN","ORWPT",138,0)
 S $P(REC,U,1)=$P($G(^SC(+LOC,0)),U,1,2)
"RTN","ORWPT",139,0)
 S $P(REC,U,3)=$P($G(^DPT(DFN,.101)),U)
"RTN","ORWPT",140,0)
 S $P(REC,U,4)=$P($G(^VA(200,+PROV,0)),U)
"RTN","ORWPT",141,0)
 Q
"RTN","ORWPT",142,0)
LISTALL(Y,FROM,DIR) ; Return a bolus of patient names.  From is either Name or IEN^Name.
"RTN","ORWPT",143,0)
 N I,IEN,CNT,FROMIEN,ORIDNAME S CNT=44,I=0,FROMIEN=0
"RTN","ORWPT",144,0)
 I $P(FROM,U,2)'="" S FROMIEN=$P(FROM,U,1),FROM=$O(^DPT("B",$P(FROM,U,2)),-DIR)
"RTN","ORWPT",145,0)
 F  S FROM=$O(^DPT("B",FROM),DIR) Q:FROM=""  D  Q:I=CNT
"RTN","ORWPT",146,0)
 . S IEN=FROMIEN,FROMIEN=0 F  S IEN=$O(^DPT("B",FROM,IEN)) Q:'IEN  D  Q:I=CNT
"RTN","ORWPT",147,0)
 . . S ORIDNAME=""
"RTN","ORWPT",148,0)
 . . S ORIDNAME=$G(^DPT(IEN,0)) ; Get zero node name.
"RTN","ORWPT",149,0)
 . . ; S X1=$G(^DPT(IEN,.1))_" "_$G(^DPT(IEN,.101))
"RTN","ORWPT",150,0)
 . . S I=I+1 S Y(I)=IEN_U_FROM_U_U_U_U_$P(ORIDNAME,U) ;_"^"_X ; _"^"_X1  ;"   ("_X_")"
"RTN","ORWPT",151,0)
 Q
"RTN","ORWPT",152,0)
APPTLST(LST,DFN) ; return a list of appointments
"RTN","ORWPT",153,0)
 ; APPTTIME^LOCIEN^LOCNAME^EXTSTATUS
"RTN","ORWPT",154,0)
 N ERR,ERRMSG,VASD,VAERR K ^UTILITY("VASD",$J)  ;IA 10061
"RTN","ORWPT",155,0)
 S VASD("F")=$$HTFM^XLFDT($H-30,1)
"RTN","ORWPT",156,0)
 S VASD("T")=$$HTFM^XLFDT($H+1,1)_".2359"
"RTN","ORWPT",157,0)
 S VASD("W")="123456789"
"RTN","ORWPT",158,0)
 D SDA^ORQRY01(.ERR,.ERRMSG)
"RTN","ORWPT",159,0)
 I ERR K ^UTILITY("VASD",$J) K LST S LST(1)=ERRMSG Q
"RTN","ORWPT",160,0)
 S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  D
"RTN","ORWPT",161,0)
 . S LST(I)=$P(^UTILITY("VASD",$J,I,"I"),U,1,2)_U_$P(^("E"),U,2,3)
"RTN","ORWPT",162,0)
 K ^UTILITY("VASD",$J)
"RTN","ORWPT",163,0)
 Q
"RTN","ORWPT",164,0)
ADMITLST(LST,DFN) ; return a list of admissions
"RTN","ORWPT",165,0)
 ; MOVETIME^LOCIEN^LOCNAME^TYPE
"RTN","ORWPT",166,0)
 N TIM,MOV,X0,Y,MTIM,XTYP,XLOC,HLOC,ILST S ILST=0
"RTN","ORWPT",167,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",DFN,TIM)) Q:TIM'>0  D
"RTN","ORWPT",168,0)
 . S MOV=0  F  S MOV=$O(^DGPM("ATID1",DFN,TIM,MOV)) Q:MOV'>0  D
"RTN","ORWPT",169,0)
 . . N VSTR,TIUDA
"RTN","ORWPT",170,0)
 . . S X0=$G(^DGPM(MOV,0)) I X0']"" Q
"RTN","ORWPT",171,0)
 . . S MTIM=$P(X0,U)
"RTN","ORWPT",172,0)
 . . S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","ORWPT",173,0)
 . . S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","ORWPT",174,0)
 . . S VSTR=HLOC_";"_MTIM_";H",TIUDA=$$HASDS^TIULX(DFN,VSTR)
"RTN","ORWPT",175,0)
 . . S ILST=ILST+1,LST(ILST)=MTIM_U_HLOC_U_XLOC_U_XTYP_U_MOV_U_TIUDA
"RTN","ORWPT",176,0)
 Q
"RTN","ORWPT",177,0)
CLINRNG(LST) ; return date ranges for clinic appointments
"RTN","ORWPT",178,0)
 S LST(1)="T;T^Today"
"RTN","ORWPT",179,0)
 S LST(2)="T+1;T+1^Tomorrow"
"RTN","ORWPT",180,0)
 S LST(3)="T-1;T-1^Yesterday"
"RTN","ORWPT",181,0)
 S LST(4)="T-7;T^Past Week"
"RTN","ORWPT",182,0)
 S LST(5)="T-31;T^Past Month"
"RTN","ORWPT",183,0)
 S LST(6)="S^Specify Date Range..."
"RTN","ORWPT",184,0)
 Q
"RTN","ORWPT",185,0)
 ;
"RTN","ORWPT",186,0)
 N %,%H,X,SUNDAY,START
"RTN","ORWPT",187,0)
 S LST(1)=DT_";"_DT_"^Today",X=$$HTFM^XLFDT($H+1,1)
"RTN","ORWPT",188,0)
 S LST(2)=X_";"_X_"^Tomorrow"
"RTN","ORWPT",189,0)
 S X=+$H F  Q:X#7=3  S X=X-1                        ; $H#7=3 is Sunday
"RTN","ORWPT",190,0)
 S LST(3)=$$HTFM^XLFDT(X)_";"_$$HTFM^XLFDT(X+6)_"^This Week"
"RTN","ORWPT",191,0)
 S LST(4)=$$HTFM^XLFDT(X+7)_";"_$$HTFM^XLFDT(X+13)_"^Next Week"
"RTN","ORWPT",192,0)
 S LST(5)=$E(DT,1,5)_"01;"_$E(DT,1,5)_"31^This Month"
"RTN","ORWPT",193,0)
 S X=$E(DT,4,5)+1 S:X=13 X=1 S X=$E(DT,1,3)_$TR($J(X,2)," ",0)
"RTN","ORWPT",194,0)
 S LST(6)=X_"01;"_X_"31^Next Month"
"RTN","ORWPT",195,0)
 S LST(7)="^Specify Dates"
"RTN","ORWPT",196,0)
 Q
"RTN","ORWPT",197,0)
DFLTSRC(VAL) ; return default patient list source (T, W, C, P, S)
"RTN","ORWPT",198,0)
 N SRV S SRV=+$G(^VA(200,DUZ,5))
"RTN","ORWPT",199,0)
 S VAL=$$GET^XPAR("ALL^SRV.`"_SRV,"ORLP DEFAULT LIST SOURCE")
"RTN","ORWPT",200,0)
 Q
"RTN","ORWPT",201,0)
SAVDFLT(OK,X) ; save new default patient list settings (X=type^ien^sdt;edt)
"RTN","ORWPT",202,0)
 G SAVDFLT^ORWPT1
"RTN","ORWPT",203,0)
 ;
"RTN","ORWPT",204,0)
DISCHRG(Y,DFN,ADMITDT) ; Get discharge movement information
"RTN","ORWPT",205,0)
 N VAIP
"RTN","ORWPT",206,0)
 I +$G(ADMITDT)=0 S Y=DT Q
"RTN","ORWPT",207,0)
 S VAIP("D")=ADMITDT D 52^VADPT
"RTN","ORWPT",208,0)
 I +VAIP(17)=0 S Y=DT Q
"RTN","ORWPT",209,0)
 S Y=+VAIP(17,1)
"RTN","ORWPT",210,0)
 Q
"RTN","ORWPT",211,0)
CWAD(Y,DFN) ;  returns CWAD flags for a patient
"RTN","ORWPT",212,0)
 S Y=$$CWAD^ORQPT2(DFN)
"RTN","ORWPT",213,0)
 Q
"RTN","ORWPT",214,0)
LEGACY(ORLST,DFN) ; return message if data on the legacy system
"RTN","ORWPT",215,0)
 ; ORLST(0)=1 if data,  ORLST(n)=display message if data
"RTN","ORWPT",216,0)
 S ORLST(0)=0
"RTN","ORWPT",217,0)
 I $L($T(HXDATA^A7RDPAGU)) D
"RTN","ORWPT",218,0)
 . D HXDATA^A7RDPAGU(.ORLST,DFN)
"RTN","ORWPT",219,0)
 . I $O(ORLST(0)) S ORLST(0)=1
"RTN","ORWPT",220,0)
 Q
"RTN","ORWPT",221,0)
INPLOC(REC,DFN) ; Return a patient's current location
"RTN","ORWPT",222,0)
 N X
"RTN","ORWPT",223,0)
 S X=$G(^DPT(DFN,.102)),REC=0
"RTN","ORWPT",224,0)
 I X S X=$P($G(^DGPM(X,0)),U,6)
"RTN","ORWPT",225,0)
 I X S REC=+$G(^DIC(42,X,44))
"RTN","ORWPT",226,0)
 I X S $P(REC,U,2)=$P($G(^DIC(42,X,0)),U,1)
"RTN","ORWPT",227,0)
 I X S X=$P($G(^DIC(42,X,0)),U,3)
"RTN","ORWPT",228,0)
 S $P(REC,U,3)=X
"RTN","ORWPT",229,0)
 Q
"RTN","ORWPT",230,0)
AGE(DFN,BEG) ; returns age based on date of birth and date of death (or DT)
"RTN","ORWPT",231,0)
 N END,X
"RTN","ORWPT",232,0)
 S END=+$G(^DPT(DFN,.35)),END=$S(END:END,1:DT)
"RTN","ORWPT",233,0)
 S X=$E(END,1,3)-$E(BEG,1,3)-($E(END,4,7)<$E(BEG,4,7))
"RTN","ORWPT",234,0)
 Q X
"RTN","ORWPT",235,0)
ROK(X) ; Routine OK (in UCI) (NDBI)
"RTN","ORWPT",236,0)
 S X=$G(X) Q:'$L(X) 0  Q:$L(X)>8 0  X ^%ZOSF("TEST") Q:$T 1  Q 0
"RTN","ORWPT",237,0)
 ;
"RTN","ORWPT",238,0)
 ;NDBI(X) ; National Database Integration site 1 = yes  0 = no
"RTN","ORWPT",239,0)
 ; N R,G S X="A7RDUP" X ^%ZOSF("TEST") S R=$T,G=$S($D(^A7RCP):1,1:0),X=R+G,X=$S(X=2:1,1:0) Q X
"RTN","ORWPT1")
0^70^B15675921
"RTN","ORWPT1",1,0)
ORWPT1 ; SLC/KCM - Patient Lookup Functions (cont) ;01/19/10  05:31
"RTN","ORWPT1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,109,280**;Dec 17, 1997;Build 85
"RTN","ORWPT1",3,0)
 ;
"RTN","ORWPT1",4,0)
SAVDFLT ; continued from ORWPT, save new default patient list
"RTN","ORWPT1",5,0)
 N DAY,HOLDX S OK=1
"RTN","ORWPT1",6,0)
 I $P(X,U)="P" D
"RTN","ORWPT1",7,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"P")
"RTN","ORWPT1",8,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT PROVIDER",1,"`"_$P(X,U,2))
"RTN","ORWPT1",9,0)
 I $P(X,U)="T" D
"RTN","ORWPT1",10,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"T")
"RTN","ORWPT1",11,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT TEAM",1,"`"_$P(X,U,2))
"RTN","ORWPT1",12,0)
 I $P(X,U)="S" D
"RTN","ORWPT1",13,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"S")
"RTN","ORWPT1",14,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT SPECIALTY",1,"`"_$P(X,U,2))
"RTN","ORWPT1",15,0)
 I $P(X,U)="C" D
"RTN","ORWPT1",16,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"C")
"RTN","ORWPT1",17,0)
 . F DAY="MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY" D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC "_DAY,1,"`"_$P(X,U,2))
"RTN","ORWPT1",18,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC START DATE",1,$P($P(X,U,3),";"))
"RTN","ORWPT1",19,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC STOP DATE",1,$P($P(X,U,3),";",2))
"RTN","ORWPT1",20,0)
 ; SLC/PKS - 6/25/2001
"RTN","ORWPT1",21,0)
 ; Added section to save clinic defaults for current day only:
"RTN","ORWPT1",22,0)
 I $P(X,U)="CT" D
"RTN","ORWPT1",23,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"C")
"RTN","ORWPT1",24,0)
 . S HOLDX=X
"RTN","ORWPT1",25,0)
 . D NOW^%DTC D DW^%DTC S DAY=X S X=HOLDX
"RTN","ORWPT1",26,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC "_DAY,1,"`"_$P(X,U,2))
"RTN","ORWPT1",27,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC START DATE",1,$P($P(X,U,3),";"))
"RTN","ORWPT1",28,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT CLINIC STOP DATE",1,$P($P(X,U,3),";",2))
"RTN","ORWPT1",29,0)
 I $P(X,U)="W" D
"RTN","ORWPT1",30,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1,"W")
"RTN","ORWPT1",31,0)
 . D EN^XPAR(DUZ_";VA(200,","ORLP DEFAULT WARD",1,"`"_$P(X,U,2))
"RTN","ORWPT1",32,0)
 I $P(X,U)="A" D DEL^XPAR(DUZ_";VA(200,","ORLP DEFAULT LIST SOURCE",1)
"RTN","ORWPT1",33,0)
 Q
"RTN","ORWPT1",34,0)
PRCARE(VAL,PATIENT)        ; return Primary Care info
"RTN","ORWPT1",35,0)
 ; VAL=Primary Care Team^Primary Care Provider^Attending
"RTN","ORWPT1",36,0)
 N PCT,PCP,ATT,ASS
"RTN","ORWPT1",37,0)
 S PCT=$P($$OUTPTTM^SDUTL3(PATIENT,DT),U,2)
"RTN","ORWPT1",38,0)
 S PCP=$P($$OUTPTPR^SDUTL3(PATIENT,DT),U,2)
"RTN","ORWPT1",39,0)
 S ATT=$G(^DPT(PATIENT,.1041)) I ATT S ATT=$P($G(^VA(200,ATT,0)),U)
"RTN","ORWPT1",40,0)
 S ASS=$P($$OUTPTAP^SDUTL3(PATIENT,DT),U,2)
"RTN","ORWPT1",41,0)
 S VAL=PCT_U_PCP_U_ATT_U_ASS
"RTN","ORWPT1",42,0)
 Q
"RTN","ORWPT1",43,0)
PCDETAIL(LST,PATIENT)   ; return Primary Care Detail information
"RTN","ORWPT1",44,0)
 N ILST,X S ILST=0
"RTN","ORWPT1",45,0)
 S X=$$OUTPTTM^SDUTL3(PATIENT,DT)
"RTN","ORWPT1",46,0)
 I +X>0 D
"RTN","ORWPT1",47,0)
 . S ILST=ILST+1,LST(ILST)="    Primary Care Team:  "_$P(X,U,2)
"RTN","ORWPT1",48,0)
 . S ILST=ILST+1,LST(ILST)="                Phone:  "_$P($G(^SCTM(404.51,+X,0)),U,2)
"RTN","ORWPT1",49,0)
 E  S ILST=ILST+1,LST(ILST)="No Primary Care Team Assigned."
"RTN","ORWPT1",50,0)
 S ILST=ILST+1,LST(ILST)=" "
"RTN","ORWPT1",51,0)
 S X=$$OUTPTPR^SDUTL3(PATIENT,DT)
"RTN","ORWPT1",52,0)
 I +X>0 D
"RTN","ORWPT1",53,0)
 . S ILST=ILST+1,LST(ILST)="Primary Care Provider:  "_$P(X,U,2)
"RTN","ORWPT1",54,0)
 . S ILST=ILST+1,LST(ILST)="         Analog Pager:  "_$P($G(^VA(200,+X,.13)),U,7)
"RTN","ORWPT1",55,0)
 . S ILST=ILST+1,LST(ILST)="        Digital Pager:  "_$P($G(^VA(200,+X,.13)),U,8)
"RTN","ORWPT1",56,0)
 . S ILST=ILST+1,LST(ILST)="         Office Phone:  "_$P($G(^VA(200,+X,.13)),U,2)
"RTN","ORWPT1",57,0)
 E  S ILST=ILST+1,LST(ILST)="No Primary Care Provider Assigned."
"RTN","ORWPT1",58,0)
 S ILST=ILST+1,LST(ILST)=" "
"RTN","ORWPT1",59,0)
 S X=$$OUTPTAP^SDUTL3(PATIENT,DT)
"RTN","ORWPT1",60,0)
 I +X>0 D
"RTN","ORWPT1",61,0)
 . S ILST=ILST+1,LST(ILST)="   Associate Provider:  "_$P(X,U,2)
"RTN","ORWPT1",62,0)
 . S ILST=ILST+1,LST(ILST)="         Analog Pager:  "_$P($G(^VA(200,+X,.13)),U,7)
"RTN","ORWPT1",63,0)
 . S ILST=ILST+1,LST(ILST)="        Digital Pager:  "_$P($G(^VA(200,+X,.13)),U,8)
"RTN","ORWPT1",64,0)
 . S ILST=ILST+1,LST(ILST)="         Office Phone:  "_$P($G(^VA(200,+X,.13)),U,2)
"RTN","ORWPT1",65,0)
 E  S ILST=ILST+1,LST(ILST)="No Associate Provider Assigned."
"RTN","ORWPT1",66,0)
 S ILST=ILST+1,LST(ILST)=" "
"RTN","ORWPT1",67,0)
 S X=$G(^DPT(PATIENT,.1041))
"RTN","ORWPT1",68,0)
 I +X D
"RTN","ORWPT1",69,0)
 . S ILST=ILST+1,LST(ILST)="  Attending Physician:  "_$P($G(^VA(200,+X,0)),U)
"RTN","ORWPT1",70,0)
 . S ILST=ILST+1,LST(ILST)="         Analog Pager:  "_$P($G(^VA(200,+X,.13)),U,7)
"RTN","ORWPT1",71,0)
 . S ILST=ILST+1,LST(ILST)="        Digital Pager:  "_$P($G(^VA(200,+X,.13)),U,8)
"RTN","ORWPT1",72,0)
 . S ILST=ILST+1,LST(ILST)="         Office Phone:  "_$P($G(^VA(200,+X,.13)),U,2)
"RTN","ORWPT1",73,0)
 Q
"RTN","ORWRP")
0^71^B77042419
"RTN","ORWRP",1,0)
ORWRP ; ALB/MJK,dcm Report Calls ; 12/05/02 11:03
"RTN","ORWRP",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**1,10,85,109,132,160,194,227,215,262,243,280**;Dec 17, 1997;Build 85
"RTN","ORWRP",3,0)
 ;
"RTN","ORWRP",4,0)
LABLIST(LST) ; -- report list for labs tab
"RTN","ORWRP",5,0)
 ;  RPC: ORWRP LAB REPORT LIST
"RTN","ORWRP",6,0)
 N I,J,X,X0,X2,CNT,EOF,IFN,ROOT,RPC,ORLIST,HEAD
"RTN","ORWRP",7,0)
 S EOF="$$END",ROOT=$NA(LST),(CNT,I)=0
"RTN","ORWRP",8,0)
 D SETITEM(ROOT,"[LAB REPORT LIST]")
"RTN","ORWRP",9,0)
 D GETLST^XPAR(.ORLIST,"ALL","ORWRP REPORT LAB LIST")
"RTN","ORWRP",10,0)
 F  S I=$O(ORLIST(I)) Q:'I  Q:'$D(^ORD(101.24,$P(ORLIST(I),"^",2),0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWRP",11,0)
 . Q:$P(X0,"^",12)="L"
"RTN","ORWRP",12,0)
 . S RPC=$$GET1^DIQ(8994,+$P(X0,"^",13),.01),IFN=ORLIST(I),HEAD=$P(X0,"^")
"RTN","ORWRP",13,0)
 . I $L($P(X2,"^",3)) S HEAD=$P(X2,"^",3)
"RTN","ORWRP",14,0)
 . S X=$P(X0,"^",2)_"^"_HEAD_"^"_$P(X0,"^",3)_"^"_$P(X0,"^",12)_"^"_$P(X0,"^",7)_"^"_RPC_"^"_IFN
"RTN","ORWRP",15,0)
 . D SETITEM(.ROOT,X)
"RTN","ORWRP",16,0)
 D SETITEM(.ROOT,"$$END")
"RTN","ORWRP",17,0)
 Q
"RTN","ORWRP",18,0)
LIST(LST) ; -- report lists for reports tab
"RTN","ORWRP",19,0)
 ;  RPC: ORWRP REPORT LIST
"RTN","ORWRP",20,0)
 N EOF,ROOT
"RTN","ORWRP",21,0)
 S EOF="$$END",ROOT=$NA(LST)
"RTN","ORWRP",22,0)
 K @ROOT
"RTN","ORWRP",23,0)
 D GETRPTS(.ROOT,.EOF) ; -report list
"RTN","ORWRP",24,0)
 D GETHS(.ROOT,.EOF) ; -health summary types
"RTN","ORWRP",25,0)
 D GETDT(.ROOT,.EOF) ; -date ranges
"RTN","ORWRP",26,0)
 Q
"RTN","ORWRP",27,0)
GETCOL(ROOT,IFN) ; -- get Column headers for ListView
"RTN","ORWRP",28,0)
 N I,J,X,VAL
"RTN","ORWRP",29,0)
 Q:'$G(IFN)
"RTN","ORWRP",30,0)
 S I=0,ROOT=$NA(ROOT)
"RTN","ORWRP",31,0)
 F  S I=$O(^ORD(101.24,IFN,3,"C",I)) Q:'I  D
"RTN","ORWRP",32,0)
 . S VAL=$$GET^XPAR(DUZ_";VA(200,","ORWCH COLUMNS REPORTS",IFN,"I"),J=0
"RTN","ORWRP",33,0)
 . F  S J=$O(^ORD(101.24,IFN,3,"C",I,J)) Q:'J  I $D(^ORD(101.24,IFN,3,J)) S X=^(J,0) D
"RTN","ORWRP",34,0)
 .. I $L(VAL),$P(VAL,",",I) S $P(X,"^",10)=$P(VAL,",",I)
"RTN","ORWRP",35,0)
 .. D SETITEM(.ROOT,X)
"RTN","ORWRP",36,0)
 Q
"RTN","ORWRP",37,0)
GETRPTS(ROOT,EOF) ; -- get report list
"RTN","ORWRP",38,0)
 N I,J,X,X0,X2,CNT,IFN,ORLIST,HEAD
"RTN","ORWRP",39,0)
 D SETITEM(.ROOT,"[REPORT LIST]"),GETLST^XPAR(.ORLIST,"ALL","ORWRP REPORT LIST")
"RTN","ORWRP",40,0)
 S (CNT,I)=0
"RTN","ORWRP",41,0)
 F  S I=$O(ORLIST(I)) Q:'I  Q:'$D(^ORD(101.24,$P(ORLIST(I),"^",2),0))  S X0=^(0),X2=$G(^(2)) D
"RTN","ORWRP",42,0)
 . Q:$P(X0,"^",12)="L"
"RTN","ORWRP",43,0)
 . S RPC=$$GET1^DIQ(8994,+$P(X0,"^",13),.01),IFN=ORLIST(I),HEAD=$P(X0,"^")
"RTN","ORWRP",44,0)
 . I $L($P(X2,"^",3)) S HEAD=$P(X2,"^",3)
"RTN","ORWRP",45,0)
 . S X=$P(X0,"^",2)_"^"_HEAD_"^"_$P(X0,"^",4)_"^"_$P(X0,"^",19)_";"_$P(X0,"^",20)_"^"_$P(X0,"^",6)_"^"_$P(X0,"^",5)_"^"_$P(X0,"^",3)_"^"_$P(X0,"^",12)_"^"_$P(X0,"^",7)_"^"_RPC_"^"_IFN
"RTN","ORWRP",46,0)
 . D SETITEM(.ROOT,X)
"RTN","ORWRP",47,0)
 D SETITEM(.ROOT,"$$END")
"RTN","ORWRP",48,0)
 Q
"RTN","ORWRP",49,0)
GETHS(ROOT,EOF) ; --get health summary types
"RTN","ORWRP",50,0)
 N C,I,IFN,ORHSPARM,ORHSROOT,ORERR,X,T
"RTN","ORWRP",51,0)
 K ^TMP("ORHSPARM",$J)
"RTN","ORWRP",52,0)
 S ORHSROOT="^TMP(""ORHSPARM"",$J)"
"RTN","ORWRP",53,0)
 I $$GET^XPAR("ALL","ORWRP HEALTH SUMMARY LIST ALL",1) S I="",C=0 D
"RTN","ORWRP",54,0)
 . F  S I=$O(^GMT(142,"B",I)) Q:I=""  S IFN=$O(^(I,0)) Q:'IFN  D
"RTN","ORWRP",55,0)
 .. S X=$G(^GMT(142,IFN,0)) Q:'$L(X)
"RTN","ORWRP",56,0)
 .. S T=$G(^GMT(142,IFN,"T")),C=C+1,@ORHSROOT@(C)=IFN_"^"_$S($L(T):T,1:$P(X,"^"))_"^^^^^1"
"RTN","ORWRP",57,0)
 .. I I="GMTS HS ADHOC OPTION" S @ORHSROOT@(C)="0^GMTS Adhoc Report"
"RTN","ORWRP",58,0)
 I '$$GET^XPAR("ALL","ORWRP HEALTH SUMMARY LIST ALL",1) D
"RTN","ORWRP",59,0)
 . D:$L($T(GETLIST^GMTSXAL)) GETLIST^GMTSXAL($NA(@ORHSROOT),$G(DUZ),1,.ORERR)
"RTN","ORWRP",60,0)
 . Q:$G(ORERR)
"RTN","ORWRP",61,0)
 . S I=0 F  S I=$O(@ORHSROOT@(I)) Q:'I  S @ORHSROOT@(I)=@ORHSROOT@(I)_"^^^^^1" I $P(@ORHSROOT@(I),"^",2)="GMTS HS ADHOC OPTION" S @ORHSROOT@(I)="0^Adhoc Report"
"RTN","ORWRP",62,0)
 D SETITEM(.ROOT,"[HEALTH SUMMARY TYPES]")
"RTN","ORWRP",63,0)
 S I=0  F  S I=$O(@ORHSROOT@(I)) Q:'I  D SETITEM(.ROOT,"h"_@ORHSROOT@(I))
"RTN","ORWRP",64,0)
 D SETITEM(.ROOT,EOF)
"RTN","ORWRP",65,0)
 Q
"RTN","ORWRP",66,0)
GETDT(ROOT,EOF) ; -- get date range choices
"RTN","ORWRP",67,0)
 N I,X
"RTN","ORWRP",68,0)
 D SETITEM(.ROOT,"[DATE RANGES]")
"RTN","ORWRP",69,0)
 F I=2:1 S X=$P($T(DTLIST+I),";",3) Q:X=EOF  D SETITEM(.ROOT,"d"_X)
"RTN","ORWRP",70,0)
 Q
"RTN","ORWRP",71,0)
DTLIST ; -- list of date ranges
"RTN","ORWRP",72,0)
 ;<number of days>^ <display text>
"RTN","ORWRP",73,0)
 ;;S^Date Range...
"RTN","ORWRP",74,0)
 ;;0^Today
"RTN","ORWRP",75,0)
 ;;7^One Week
"RTN","ORWRP",76,0)
 ;;30^One Month
"RTN","ORWRP",77,0)
 ;;180^Six Months
"RTN","ORWRP",78,0)
 ;;365^One Year
"RTN","ORWRP",79,0)
 ;;732^Two Year
"RTN","ORWRP",80,0)
 ;;50000^All Results
"RTN","ORWRP",81,0)
 ;;$$END
"RTN","ORWRP",82,0)
 ;
"RTN","ORWRP",83,0)
SETITEM(ROOT,X) ; -- set item in list
"RTN","ORWRP",84,0)
 S @ROOT@($O(@ROOT@(9999),-1)+1)=X
"RTN","ORWRP",85,0)
 Q
"RTN","ORWRP",86,0)
RPT(ROOT,DFN,RPTID,HSTYPE,DTRANGE,EXAMID,ALPHA,OMEGA) ; -- return report text
"RTN","ORWRP",87,0)
 ;ROOT=Output in ^TMP("ORDATA",$J)
"RTN","ORWRP",88,0)
 ;DFN=Patient DFN ; ICN for remote sites
"RTN","ORWRP",89,0)
 ;RPTID=Unique report ID_";"_Remote ID_"~"_HSComponent for listview (ent;rtn;0;MaxOcc) or text (ent;rtn;#component;MaxOcc)
"RTN","ORWRP",90,0)
 ;HSTYPE=Health Sum Type
"RTN","ORWRP",91,0)
 ;DTRANGE=# days back from today
"RTN","ORWRP",92,0)
 ;EXAMID=Rad exam ID
"RTN","ORWRP",93,0)
 ;ALPHA=Start date
"RTN","ORWRP",94,0)
 ;OMEGA=End date
"RTN","ORWRP",95,0)
 ;  RPC: ORWRP REPORT TEXT
"RTN","ORWRP",96,0)
 ;
"RTN","ORWRP",97,0)
 N X,X0,X2,X4,I,J,ENT,RTN,ID,REMOTE,GO,OUT,MAX,SITE,ORFHIE,%ZIS,HSTAG,DIRECT,TAB
"RTN","ORWRP",98,0)
 K ^TMP("ORDATA",$J)
"RTN","ORWRP",99,0)
 S TAB="R"
"RTN","ORWRP",100,0)
 I $E(RPTID,1,2)="L:" S TAB="L",RPTID=$P(RPTID,":",2,999) ;an ID beginning with "L:" forces TAB to LAB - "L:" added in GUI code
"RTN","ORWRP",101,0)
 S HSTAG=$P($G(RPTID),"~",2),RPTID=$P($G(RPTID),"~"),ROOT=$NA(^TMP("ORDATA",$J,1)),REMOTE=+$P(RPTID,";",2),RPTID=$P($P(RPTID,";"),":")
"RTN","ORWRP",102,0)
 I 'REMOTE S DFN=+DFN ;DFN = DFN;ICN for remote calls
"RTN","ORWRP",103,0)
 S I=0,X0="",X2="",X4="",SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)
"RTN","ORWRP",104,0)
 F  S I=$O(^ORD(101.24,"AC",I)) Q:I=""  S J=0 F  S J=$O(^ORD(101.24,"AC",I,J)) Q:'J  D
"RTN","ORWRP",105,0)
 . I $P($G(^ORD(101.24,J,0)),"^",2)=RPTID,$P(^(0),"^",8)=TAB S X0=^(0),X2=$G(^(2)),ORFHIE=$G(^(4)),DIRECT=$P(ORFHIE,"^",4),X4=$P(ORFHIE,"^",2),ORFHIE=$P(ORFHIE,"^",3)
"RTN","ORWRP",106,0)
 I '$L(X0) D NOTYET(.ROOT) Q
"RTN","ORWRP",107,0)
 S RTN=$P(X0,"^",5),ENT=$P(X0,"^",6)
"RTN","ORWRP",108,0)
 I '$L(RTN)!'$L(ENT) D NOTYET(.ROOT) Q
"RTN","ORWRP",109,0)
 I '$L($T(@(ENT_"^"_RTN))) D NOTYET(.ROOT) Q
"RTN","ORWRP",110,0)
 ;I $G(ALPHA) S X=ALPHA-$G(OMEGA) D  ;jeh 243
"RTN","ORWRP",111,0)
 I $G(ALPHA) D
"RTN","ORWRP",112,0)
 . N X1,X2
"RTN","ORWRP",113,0)
 . S X=ALPHA
"RTN","ORWRP",114,0)
 . S X1=ALPHA,X2=$G(OMEGA) D:X2 ^%DTC ;X returned, # of days diff
"RTN","ORWRP",115,0)
 . I X<0 S X=X*(-1)
"RTN","ORWRP",116,0)
 . I X4,X>X4 S:ALPHA>OMEGA OMEGA=$$FMADD^XLFDT(ALPHA,-X4) S:ALPHA'>OMEGA ALPHA=$$FMADD^XLFDT(OMEGA,-X4) S DTRANGE=""
"RTN","ORWRP",117,0)
 I X4,$G(DTRANGE)>X4 S DTRANGE=X4,ALPHA=""
"RTN","ORWRP",118,0)
 I $L($G(DTRANGE)),'$G(ALPHA) S ALPHA=$$FMADD^XLFDT(DT,-DTRANGE),OMEGA=DT_".235959"
"RTN","ORWRP",119,0)
 I $G(OMEGA),$E(OMEGA,8)'="." S OMEGA=OMEGA_".235959"
"RTN","ORWRP",120,0)
 S ID=$G(HSTAG),$P(ID,";",5,10)=SITE_";"_$P(X2,"^",8)_";"_$P(X2,"^",9)_";"_RPTID_";"_$G(DIRECT) ;HDRHX CHANGE
"RTN","ORWRP",121,0)
 I $L($P($G(HSTAG),";",4)) S MAX=$P(HSTAG,";",4)
"RTN","ORWRP",122,0)
 I $L($G(HSTYPE)) M ID=HSTYPE
"RTN","ORWRP",123,0)
 I $L($G(EXAMID)) M ID=EXAMID
"RTN","ORWRP",124,0)
 S OUT=ENT_"^"_RTN_"(.ROOT,DFN,.ID,.ALPHA,.OMEGA,.DTRANGE,.REMOTE,.MAX,.ORFHIE)"
"RTN","ORWRP",125,0)
 I REMOTE S GO=0 D  Q:'GO
"RTN","ORWRP",126,0)
 . I '$L($T(GETDFN^MPIF001)) D SETITEM(.ROOT,"MPI routines missing on remote system ("_SITE_")") S GO=0 Q
"RTN","ORWRP",127,0)
 . S ICN=+$P(DFN,";",2),DFN=+$$GETDFN^MPIF001(ICN)
"RTN","ORWRP",128,0)
 . I DFN<0 D SETITEM(.ROOT,"Patient not found on remote system ("_SITE_")") S GO=0 Q
"RTN","ORWRP",129,0)
 . S GO=+$P(X0,"^",3)
"RTN","ORWRP",130,0)
 . I 'GO D SETITEM(.ROOT,"Remote access not available for this report ("_SITE_")")
"RTN","ORWRP",131,0)
 S %ZIS="0N"
"RTN","ORWRP",132,0)
 D @OUT
"RTN","ORWRP",133,0)
 Q
"RTN","ORWRP",134,0)
NOTYET(ROOT) ; -- not available
"RTN","ORWRP",135,0)
 D SETITEM(.ROOT,"Report not available at this time.")
"RTN","ORWRP",136,0)
 Q
"RTN","ORWRP",137,0)
START(RM,GOTO,ORIOSL) ;
"RTN","ORWRP",138,0)
 ;RM=Right margin
"RTN","ORWRP",139,0)
 N ZTQUEUED,ORHFS,ORSUB,ORIO,ORHANDLE,IOM,IOSL,IOST,IOF,IOT,IOS
"RTN","ORWRP",140,0)
 S ORHFS=$$HFS(),ORSUB="ORDATA",ORHANDLE="ORWRP"
"RTN","ORWRP",141,0)
 D HFSOPEN(ORHANDLE,ORHFS,"W")
"RTN","ORWRP",142,0)
 I POP D  Q
"RTN","ORWRP",143,0)
 . I $D(ROOT) D SETITEM(.ROOT,"ERROR: Unable to open HFS file")
"RTN","ORWRP",144,0)
 D IOVAR(.ORIO,.RM,.ORIOSL)
"RTN","ORWRP",145,0)
 N $ETRAP,$ESTACK
"RTN","ORWRP",146,0)
 S $ETRAP="D ERR^ORWRP Q"
"RTN","ORWRP",147,0)
 U IO
"RTN","ORWRP",148,0)
 D @GOTO
"RTN","ORWRP",149,0)
 D HFSCLOSE(ORHANDLE,ORHFS)
"RTN","ORWRP",150,0)
 Q
"RTN","ORWRP",151,0)
ERR ;Error trap
"RTN","ORWRP",152,0)
 S $ETRAP="D UNWIND^ORWRP Q"
"RTN","ORWRP",153,0)
 N %ZIS
"RTN","ORWRP",154,0)
 S %ZIS="0N"
"RTN","ORWRP",155,0)
 D @^%ZOSF("ERRTN") ;file error
"RTN","ORWRP",156,0)
 I $D(ORHANDLE) D CLOSE^%ZISH(ORHANDLE)
"RTN","ORWRP",157,0)
 I $D(ORHFS) D
"RTN","ORWRP",158,0)
 . N ORARR,OROK
"RTN","ORWRP",159,0)
 . S ORARR(ORHFS)="",OROK=$$DEL^%ZISH("",$NA(ORARR)) ;delete HFS file
"RTN","ORWRP",160,0)
 S $ECODE=",UOR69 error during CPRS report build,"
"RTN","ORWRP",161,0)
 Q
"RTN","ORWRP",162,0)
UNWIND ;Unwind Error stack
"RTN","ORWRP",163,0)
 Q:$ESTACK>1  ;pop stack
"RTN","ORWRP",164,0)
 ;
"RTN","ORWRP",165,0)
 Q
"RTN","ORWRP",166,0)
HFS() ; -- get hfs file name
"RTN","ORWRP",167,0)
 N H
"RTN","ORWRP",168,0)
 S H=$H
"RTN","ORWRP",169,0)
 Q "ORU_"_$J_"_"_$P(H,",")_"_"_$P(H,",",2)_".DAT"
"RTN","ORWRP",170,0)
HFSOPEN(HANDLE,ORHFS,ORMODE) ;
"RTN","ORWRP",171,0)
 D OPEN^%ZISH(HANDLE,,ORHFS,$G(ORMODE,"W")) Q:POP
"RTN","ORWRP",172,0)
 Q
"RTN","ORWRP",173,0)
IOVAR(ORIO,ORRM,ORIOSL,ORIOST,ORIOF,ORIOT) ;Setup IO variables based on IO Device
"RTN","ORWRP",174,0)
 N IFN,IFN1
"RTN","ORWRP",175,0)
 S ORIO=$G(ORIO,"OR WORKSTATION"),ION=ORIO,IOM=$G(ORRM,80),IOSL=$G(ORIOSL,62),IOST=$G(ORIOST,"P-OTHER"),IOF=$G(ORIOF,""""""),IOT=$G(ORIOT,"HFS")
"RTN","ORWRP",176,0)
 I $O(^%ZIS(1,"B",ORIO,0)) S IFN=$O(^(0)),IOS=IFN
"RTN","ORWRP",177,0)
 I $D(^%ZIS(1,IFN,0)) S IOST(0)=+$G(^("SUBTYPE")),IOT=$G(ORIOT,^("TYPE")),IOST=$G(ORIOST,$P($G(^%ZIS(2,IOST(0),0),IOST),"^"))
"RTN","ORWRP",178,0)
 I $O(^%ZIS(2,"B",IOST,0)) S IFN=$O(^(0)) I IFN S IOST(0)=IFN,IFN1=$G(^%ZIS(2,IFN,1)),IOM=$G(ORRM,$P(IFN1,"^")),IOF=$G(ORIOF,$P(IFN1,"^",2)),IOSL=$G(ORIOSL,$P(IFN1,"^",3))
"RTN","ORWRP",179,0)
 Q
"RTN","ORWRP",180,0)
HFSCLOSE(HANDLE,ORHFS) ;Close HFS and unload data
"RTN","ORWRP",181,0)
 N ORDEL,X,%ZIS
"RTN","ORWRP",182,0)
 S %ZIS="0N"
"RTN","ORWRP",183,0)
 I IO[ORHFS D CLOSE^%ZISH(HANDLE)
"RTN","ORWRP",184,0)
 S ROOT=$NA(^TMP(ORSUB,$J,1)),ORDEL(ORHFS)=""
"RTN","ORWRP",185,0)
 K @ROOT
"RTN","ORWRP",186,0)
 S X=$$FTG^%ZISH(,ORHFS,$NA(@ROOT@(1)),4)
"RTN","ORWRP",187,0)
 D STRIP
"RTN","ORWRP",188,0)
 S X=$$DEL^%ZISH(,$NA(ORDEL))
"RTN","ORWRP",189,0)
 Q
"RTN","ORWRP",190,0)
USEHFS ; -- use host file to build global array
"RTN","ORWRP",191,0)
 N OROK,SECTION
"RTN","ORWRP",192,0)
 S SECTION=0
"RTN","ORWRP",193,0)
 D INIT
"RTN","ORWRP",194,0)
 S OROK=$$FTG^%ZISH(,ORHFS,$NA(@ROOT@(1)),4) I 'OROK Q
"RTN","ORWRP",195,0)
 D STRIP
"RTN","ORWRP",196,0)
 N ORARR S ORARR(ORHFS)=""
"RTN","ORWRP",197,0)
 S OROK=$$DEL^%ZISH("",$NA(ORARR))
"RTN","ORWRP",198,0)
 Q
"RTN","ORWRP",199,0)
INIT ; -- initialize counts and global section
"RTN","ORWRP",200,0)
 S (INC,CNT)=0,SECTION=SECTION+1,ROOT=$NA(^TMP(ORSUB,$J,SECTION))
"RTN","ORWRP",201,0)
 K @ROOT
"RTN","ORWRP",202,0)
 Q
"RTN","ORWRP",203,0)
FINAL ; -- set 'x of y' for each section CALLED FROM ^ORWLR
"RTN","ORWRP",204,0)
 N I
"RTN","ORWRP",205,0)
 F I=1:1:SECTION S ^TMP(ORSUB,$J,I,.1)=I_U_SECTION
"RTN","ORWRP",206,0)
 Q
"RTN","ORWRP",207,0)
STRIP ; -- strip off control chars
"RTN","ORWRP",208,0)
 N I,X
"RTN","ORWRP",209,0)
 S I=0 F  S I=$O(@ROOT@(I)) Q:'I  S X=^(I) D
"RTN","ORWRP",210,0)
 . I X[$C(8) D  ;BS
"RTN","ORWRP",211,0)
 .. I $L(X,$C(8))=$L(X,$C(95)) S (X,@ROOT@(I))=$TR(X,$C(8,95),"") Q  ;BS & _
"RTN","ORWRP",212,0)
 .. S (X,@ROOT@(I))=$TR(X,$C(8),"")
"RTN","ORWRP",213,0)
 . I X[$C(7)!(X[$C(12)) S @ROOT@(I)=$TR(X,$C(7,12),"") ;BEL or FF
"RTN","ORWRP",214,0)
 Q
"RTN","ORWRP",215,0)
WINDFLT(ORY) ;Windows printer as default?
"RTN","ORWRP",216,0)
 S ORY=+$$GET^XPAR("ALL","ORWDP WINPRINT DEFAULT")
"RTN","ORWRP",217,0)
 Q
"RTN","ORWRP",218,0)
GETDFPRT(Y,ORUSER,ORLOC) ; Returns default printer for user
"RTN","ORWRP",219,0)
 N IEN,X0,ENT
"RTN","ORWRP",220,0)
 S ENT="ALL"
"RTN","ORWRP",221,0)
 I $G(ORLOC) S ORLOC=+ORLOC_";SC(",ENT=ENT_"^"_ORLOC
"RTN","ORWRP",222,0)
 I +$$GET^XPAR(ENT,"ORWDP WINPRINT DEFAULT") S Y="WIN;Windows Printer" Q
"RTN","ORWRP",223,0)
 S IEN=$$GET^XPAR(ENT,"ORWDP DEFAULT PRINTER",1) Q:+IEN=0
"RTN","ORWRP",224,0)
 Q:'$D(^%ZIS(1,IEN,0))  S X0=^(0)
"RTN","ORWRP",225,0)
 S Y=IEN_";"_$P(X0,U)
"RTN","ORWRP",226,0)
 Q
"RTN","ORWRP",227,0)
SAVDFPRT(Y,ORDEV) ; Save new default printer for user
"RTN","ORWRP",228,0)
 N ORPAR,ORERR,ORWINDEF
"RTN","ORWRP",229,0)
 Q:$L(ORDEV)=0
"RTN","ORWRP",230,0)
 ; Reset Windows printer default to True/False
"RTN","ORWRP",231,0)
 S ORPAR="ORWDP WINPRINT DEFAULT"
"RTN","ORWRP",232,0)
 I ORDEV="WIN" S ORWINDEF="Y"
"RTN","ORWRP",233,0)
 E  S ORWINDEF="N"
"RTN","ORWRP",234,0)
 I $$GET^XPAR(DUZ_";VA(200,",ORPAR,1)'="" D CHG^XPAR(DUZ_";VA(200,",ORPAR,1,ORWINDEF,.ORERR)
"RTN","ORWRP",235,0)
 E  D ADD^XPAR(DUZ_";VA(200,",ORPAR,1,ORWINDEF,.ORERR)
"RTN","ORWRP",236,0)
 Q:ORDEV="WIN"
"RTN","ORWRP",237,0)
 ; If not Windows printer selected, save VistA default printer
"RTN","ORWRP",238,0)
 S ORPAR="ORWDP DEFAULT PRINTER",ORDEV="`"_ORDEV
"RTN","ORWRP",239,0)
 I $$GET^XPAR(DUZ_";VA(200,",ORPAR,1)'="" D CHG^XPAR(DUZ_";VA(200,",ORPAR,1,ORDEV,.ORERR)
"RTN","ORWRP",240,0)
 E  D ADD^XPAR(DUZ_";VA(200,",ORPAR,1,ORDEV,.ORERR)
"RTN","ORWRP",241,0)
 Q
"RTN","ORWTPR")
0^40^B16455738
"RTN","ORWTPR",1,0)
ORWTPR ; SLC/STAFF Personal Preference - Reminders ;07/28/09  10:16
"RTN","ORWTPR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,173,215,243,280**;Oct 24, 2000;Build 85
"RTN","ORWTPR",3,0)
 ;
"RTN","ORWTPR",4,0)
GETREM(VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",5,0)
 ; get user's reminders
"RTN","ORWTPR",6,0)
 N CLASS,CNT,ERR,IEN,NUM,OK,TMPLIST,ZERO K VALUES
"RTN","ORWTPR",7,0)
 D GETLST^XPAR(.TMPLIST,"USR.`"_USER,"ORQQPX SEARCH ITEMS","Q",.ERR)
"RTN","ORWTPR",8,0)
 S CNT=0,IEN=0 F  S IEN=$O(^PXD(811.9,IEN)) Q:IEN<1  S ZERO=$G(^(IEN,0)) I $L($P(ZERO,U,3)),'$P(ZERO,U,6) D
"RTN","ORWTPR",9,0)
 .S CNT=CNT+1
"RTN","ORWTPR",10,0)
 .S VALUES(CNT)=IEN_"^0^"_$P(ZERO,U,3)_U_$P(ZERO,U)
"RTN","ORWTPR",11,0)
 .S CLASS=$P($G(^PXD(811.9,IEN,100)),U)
"RTN","ORWTPR",12,0)
 .S $P(VALUES(CNT),U,5)=$S(CLASS="N":"NATIONAL",CLASS="L":"LOCAL",1:CLASS)
"RTN","ORWTPR",13,0)
 .S OK=0,NUM=0 F  S NUM=$O(TMPLIST(NUM)) Q:NUM<1  D  Q:OK
"RTN","ORWTPR",14,0)
 ..I IEN=$P(TMPLIST(NUM),U,2) S OK=1
"RTN","ORWTPR",15,0)
 .I OK S $P(VALUES(CNT),U,2)=$P(TMPLIST(NUM),U)
"RTN","ORWTPR",16,0)
 Q
"RTN","ORWTPR",17,0)
 ;
"RTN","ORWTPR",18,0)
SETREM(OK,VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",19,0)
 ; save user's reminders
"RTN","ORWTPR",20,0)
 N NUM,ERR
"RTN","ORWTPR",21,0)
 S OK=1
"RTN","ORWTPR",22,0)
 D NDEL^XPAR("USR.`"_USER,"ORQQPX SEARCH ITEMS",.ERR)
"RTN","ORWTPR",23,0)
 S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPR",24,0)
 .D EN^XPAR(USER_";VA(200,","ORQQPX SEARCH ITEMS",$P(VALUES(NUM),U,1),"`"_$P(VALUES(NUM),U,2),.ERR)
"RTN","ORWTPR",25,0)
 Q
"RTN","ORWTPR",26,0)
 ;
"RTN","ORWTPR",27,0)
GETOC(VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",28,0)
 ; get user's order checks
"RTN","ORWTPR",29,0)
 N CNT,IEN,LIST,NUM,VAL,VALOK K LIST,VALUES
"RTN","ORWTPR",30,0)
 S IEN=0 F  S IEN=$O(^ORD(100.8,IEN)) Q:IEN<1  D
"RTN","ORWTPR",31,0)
 .S VAL=$$GET^XPAR("ALL","ORK PROCESSING FLAG",IEN,"I")
"RTN","ORWTPR",32,0)
 .I '$L(VAL) Q
"RTN","ORWTPR",33,0)
 .S VALOK=$$GET^XPAR("ALL","ORK EDITABLE BY USER",IEN,"I")
"RTN","ORWTPR",34,0)
 .S LIST(IEN)=VAL_U_VALOK
"RTN","ORWTPR",35,0)
 S NUM=0,CNT=0 F  S NUM=$O(LIST(NUM)) Q:NUM<1  D
"RTN","ORWTPR",36,0)
 .S CNT=CNT+1
"RTN","ORWTPR",37,0)
 .S VALUES(CNT)=NUM_U_$P($G(^ORD(100.8,NUM,0)),U)_U_$S($P(LIST(NUM),U)="E":"ON",1:"OFF")_U_$S($P(LIST(NUM),U,2)="0":"MANDATORY",1:"")
"RTN","ORWTPR",38,0)
 Q
"RTN","ORWTPR",39,0)
 ;
"RTN","ORWTPR",40,0)
SAVEOC(OK,VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",41,0)
 ; save user's order checks
"RTN","ORWTPR",42,0)
 N NUM,ERR
"RTN","ORWTPR",43,0)
 S OK=1
"RTN","ORWTPR",44,0)
 S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPR",45,0)
 .D EN^XPAR(USER_";VA(200,","ORK PROCESSING FLAG","`"_+VALUES(NUM),$S($P(VALUES(NUM),U,2)="ON":"E",1:"D"),.ERR)
"RTN","ORWTPR",46,0)
 Q
"RTN","ORWTPR",47,0)
 ;
"RTN","ORWTPR",48,0)
 ;
"RTN","ORWTPR",49,0)
GETNOT(VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",50,0)
 ; get user's notifications
"RTN","ORWTPR",51,0)
 N CNT,IEN,NAME,RESULT K VALUES
"RTN","ORWTPR",52,0)
 S CNT=0
"RTN","ORWTPR",53,0)
 S NAME="" F  S NAME=$O(^ORD(100.9,"B",NAME)) Q:NAME=""  D
"RTN","ORWTPR",54,0)
 .S IEN=0  F  S IEN=$O(^ORD(100.9,"B",NAME,IEN)) Q:IEN<1  D
"RTN","ORWTPR",55,0)
 ..S RESULT=$$ONOFF^ORB3USER(IEN,USER,"","") I $L($G(RESULT)) D
"RTN","ORWTPR",56,0)
 ...S CNT=CNT+1
"RTN","ORWTPR",57,0)
 ...S VALUES(CNT)=IEN_U_NAME_U_$P(RESULT,U)_U_$S($$UP^XLFSTR($P(RESULT,U,3))["MANDATORY":"MANDATORY",1:"")
"RTN","ORWTPR",58,0)
 Q
"RTN","ORWTPR",59,0)
 ;
"RTN","ORWTPR",60,0)
SAVENOT(OK,VALUES,USER) ; from ORWTPP
"RTN","ORWTPR",61,0)
 ; save user's notifications
"RTN","ORWTPR",62,0)
 N ERR,NUM
"RTN","ORWTPR",63,0)
 S OK=1
"RTN","ORWTPR",64,0)
 S NUM=0 F  S NUM=$O(VALUES(NUM)) Q:NUM<1  D
"RTN","ORWTPR",65,0)
 .D EN^XPAR(USER_";VA(200,","ORB PROCESSING FLAG","`"_+VALUES(NUM),$S($P(VALUES(NUM),U,2)="ON":"E",1:"D"),.ERR)
"RTN","ORWTPR",66,0)
 Q
"RTN","ORWTPR",67,0)
 ;
"RTN","ORWTPR",68,0)
CLEARNOT(OK,USER) ; from ORWTPP
"RTN","ORWTPR",69,0)
 ; clear user's notifications
"RTN","ORWTPR",70,0)
 D RECIPURG^XQALBUTL(USER) ;ICR(DBIA) #3010
"RTN","ORWTPR",71,0)
 S OK=1
"RTN","ORWTPR",72,0)
 Q
"RTN","ORWTPR",73,0)
 ;
"RTN","ORWTPR",74,0)
GETNOTO(INFO,USER) ; from ORWTPP
"RTN","ORWTPR",75,0)
 ; get user's other info for notifications
"RTN","ORWTPR",76,0)
 I $$GET^XPAR("USR.`"_USER,"ORB FLAGGED ORDERS BULLETIN",1,"Q")="Y" S $P(INFO,U,2)=1
"RTN","ORWTPR",77,0)
 I $$GET^XPAR("ALL^USR.`"_USER,"ORB ERASE ALL",1,"Q") S $P(INFO,U,3)=1
"RTN","ORWTPR",78,0)
 Q
"RTN","ORWTPR",79,0)
 ;
"RTN","ORWTPR",80,0)
GETSURR(INFO,USER) ; from ORWTPP
"RTN","ORWTPR",81,0)
 ; get user's surrogate info
"RTN","ORWTPR",82,0)
 N SURR
"RTN","ORWTPR",83,0)
 D SUROLIST^XQALSURO(USER,.SURR) ;ICR(DBIA) #2790
"RTN","ORWTPR",84,0)
 S INFO=$G(SURR(1))
"RTN","ORWTPR",85,0)
 Q
"RTN","ORWTPR",86,0)
 ;
"RTN","ORWTPR",87,0)
SAVESURR(OK,INFO,USER) ; from ORWTPP
"RTN","ORWTPR",88,0)
 ; save user's surrogate info
"RTN","ORWTPR",89,0)
 N START,STOP,SURR,RET
"RTN","ORWTPR",90,0)
 S OK=1
"RTN","ORWTPR",91,0)
 S SURR=$P(INFO,U,1)
"RTN","ORWTPR",92,0)
 S START=$P(INFO,U,2)
"RTN","ORWTPR",93,0)
 S STOP=$P(INFO,U,3)
"RTN","ORWTPR",94,0)
 S RET=$$SAVESURR^ORWTPUA(USER,SURR,START,STOP)
"RTN","ORWTPR",95,0)
 I 'RET S OK="0^"_RET
"RTN","ORWTPR",96,0)
 Q
"RTN","ORWTPR",97,0)
 ;
"RTN","ORWTPR",98,0)
SAVENOTO(OK,INFO,USER) ; from ORWTPP
"RTN","ORWTPR",99,0)
 ; save user's notification settings
"RTN","ORWTPR",100,0)
 N ERR,FLAG,VAL
"RTN","ORWTPR",101,0)
 S OK=1
"RTN","ORWTPR",102,0)
 S FLAG=$P(INFO,U,3)
"RTN","ORWTPR",103,0)
 S VAL=$S(FLAG>0:"Y",1:"@")
"RTN","ORWTPR",104,0)
 D EN^XPAR(USER_";VA(200,","ORB FLAGGED ORDERS BULLETIN",1,VAL,.ERR)
"RTN","ORWTPR",105,0)
 Q
"RTN","ORWTPR",106,0)
 ;
"RTN","ORWTPR",107,0)
OCDESC(TEXT,IEN) ; from RPC
"RTN","ORWTPR",108,0)
 N CNT,LINE,NUM K TEXT
"RTN","ORWTPR",109,0)
 S IEN=+$G(IEN) I IEN<1 Q
"RTN","ORWTPR",110,0)
 S TEXT(1)=$P($G(^ORD(100.8,IEN,0)),U)
"RTN","ORWTPR",111,0)
 S TEXT(2)=""
"RTN","ORWTPR",112,0)
 S CNT=2
"RTN","ORWTPR",113,0)
 S NUM=0 F  S NUM=$O(^ORD(100.8,IEN,1,NUM)) Q:NUM<1  S LINE=$G(^(NUM,0)) D
"RTN","ORWTPR",114,0)
 .S CNT=CNT+1
"RTN","ORWTPR",115,0)
 .S TEXT(CNT)=LINE
"RTN","ORWTPR",116,0)
 S TEXT(CNT+1)=""
"RTN","ORWTPR",117,0)
 Q
"RTN","ORWTPR",118,0)
 ;
"RTN","ORWTPR",119,0)
NOTDESC(TEXT,IEN) ; from RPC
"RTN","ORWTPR",120,0)
 K TEXT
"RTN","ORWTPR",121,0)
 S IEN=+$G(IEN) I IEN<1 Q
"RTN","ORWTPR",122,0)
 S TEXT(1)=$P($G(^ORD(100.9,IEN,0)),U)
"RTN","ORWTPR",123,0)
 S TEXT(2)=""
"RTN","ORWTPR",124,0)
 S TEXT(3)=$P($G(^ORD(100.9,IEN,4)),U)
"RTN","ORWTPR",125,0)
 S TEXT(4)=""
"RTN","ORWTPR",126,0)
 Q
"RTN","ORY280")
0^9^B95955808
"RTN","ORY280",1,0)
ORY280 ;ISL/TC,JER - Pre- and Post-install for patch OR*3*280 ;09/22/10  07:12
"RTN","ORY280",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17, 1997;Build 85
"RTN","ORY280",3,0)
 ;
"RTN","ORY280",4,0)
 ;
"RTN","ORY280",5,0)
PRE ; Initiate pre-init processes
"RTN","ORY280",6,0)
 Q
"RTN","ORY280",7,0)
 ;
"RTN","ORY280",8,0)
POST ; Initiate post-init processes
"RTN","ORY280",9,0)
 D DLGBULL
"RTN","ORY280",10,0)
 D UPDNAT
"RTN","ORY280",11,0)
 D OC
"RTN","ORY280",12,0)
 D UPDPAR
"RTN","ORY280",13,0)
 D ^ORY280ES ;expert system changes
"RTN","ORY280",14,0)
 D MAIN^ORY280P ;install parameter values
"RTN","ORY280",15,0)
 K ^DIC(100.05,0,"RD") ; REMOVE @ ACCESS CODE FROM READ OF FILE 100.05
"RTN","ORY280",16,0)
 ;D UPDPAR1
"RTN","ORY280",17,0)
 Q
"RTN","ORY280",18,0)
 ;
"RTN","ORY280",19,0)
SENDDLG(ANAME) ; Return true if the current order dialog should be sent
"RTN","ORY280",20,0)
 I ANAME="OR GTX EARLIEST DATE" Q 1
"RTN","ORY280",21,0)
 I ANAME="GMRCOR CONSULT" Q 1
"RTN","ORY280",22,0)
 I ANAME="GMRCOR REQUEST" Q 1
"RTN","ORY280",23,0)
 I ANAME="OR GTX ADDITIVE FREQUENCY" Q 1
"RTN","ORY280",24,0)
 I ANAME="PSJI OR PAT FLUID OE" Q 1
"RTN","ORY280",25,0)
 I ANAME="PSJ OR PAT OE" Q 1
"RTN","ORY280",26,0)
 I ANAME="PSO OERR" Q 1
"RTN","ORY280",27,0)
 I ANAME="PS MEDS" Q 1
"RTN","ORY280",28,0)
 Q 0
"RTN","ORY280",29,0)
 ;
"RTN","ORY280",30,0)
DLGBULL ; send bulletin about modified dialogs <on first install>
"RTN","ORY280",31,0)
 N I,ORD
"RTN","ORY280",32,0)
 F I="GMRCOR CONSULT","GMRCOR REQUEST","PSJI OR PAT FLUID OE" S ORD(I)=""
"RTN","ORY280",33,0)
 D EN^ORYDLG(280,.ORD)
"RTN","ORY280",34,0)
 Q
"RTN","ORY280",35,0)
 ;
"RTN","ORY280",36,0)
OC ; setup new order checks
"RTN","ORY280",37,0)
 S ^ORD(100.8,34,0)="DRUG DOSAGE"
"RTN","ORY280",38,0)
 S ^ORD(100.8,34,1,0)="^^2^2^3090623^"
"RTN","ORY280",39,0)
 S ^ORD(100.8,34,1,1,0)="This is an order check that Pharmacy performs to check the dosage of a "
"RTN","ORY280",40,0)
 S ^ORD(100.8,34,1,2,0)="drug order for various problems."
"RTN","ORY280",41,0)
 S ^ORD(100.8,35,0)="CLINICAL REMINDER TEST"
"RTN","ORY280",42,0)
 S ^ORD(100.8,35,1,0)="^^4^4^3090706^"
"RTN","ORY280",43,0)
 S ^ORD(100.8,35,1,1,0)="This order check refers to Clinical Reminder Rules that will look at the "
"RTN","ORY280",44,0)
 S ^ORD(100.8,35,1,2,0)="Orderable Item that is getting placed and determin if a Reminder Rule "
"RTN","ORY280",45,0)
 S ^ORD(100.8,35,1,3,0)="should fire.  The CLINICAL REMINDER TEST order check is for testing "
"RTN","ORY280",46,0)
 S ^ORD(100.8,35,1,4,0)="Reminder Order checks before deploying them to production."
"RTN","ORY280",47,0)
 S ^ORD(100.8,36,0)="CLINICAL REMINDER LIVE"
"RTN","ORY280",48,0)
 S ^ORD(100.8,36,1,0)="^^3^3^3090706^"
"RTN","ORY280",49,0)
 S ^ORD(100.8,36,1,1,0)="This order check refers to Clinical Reminder Rules that will look at the "
"RTN","ORY280",50,0)
 S ^ORD(100.8,36,1,2,0)="Orderable Item that is getting placed and determin if a Reminder Rule "
"RTN","ORY280",51,0)
 S ^ORD(100.8,36,1,3,0)="should fire. "
"RTN","ORY280",52,0)
 S ^ORD(100.8,"B","DRUG DOSAGE",34)=""
"RTN","ORY280",53,0)
 S ^ORD(100.8,"B","CLINICAL REMINDER LIVE",36)=""
"RTN","ORY280",54,0)
 S ^ORD(100.8,"B","CLINICAL REMINDER TEST",35)=""
"RTN","ORY280",55,0)
 D EN^XPAR("PKG","ORK PROCESSING FLAG","DRUG DOSAGE","Enabled",.ERR)
"RTN","ORY280",56,0)
 D EN^XPAR("PKG","ORK PROCESSING FLAG","CLINICAL REMINDER TEST","Disabled",.ERR)
"RTN","ORY280",57,0)
 D EN^XPAR("PKG","ORK PROCESSING FLAG","CLINICAL REMINDER LIVE","Enabled",.ERR)
"RTN","ORY280",58,0)
 D EN^XPAR("PKG","ORK CLINICAL DANGER LEVEL","CLINICAL REMINDER LIVE","Moderate",.ERR)
"RTN","ORY280",59,0)
 D EN^XPAR("PKG","ORK CLINICAL DANGER LEVEL","CLINICAL REMINDER TEST","Low",.ERR)
"RTN","ORY280",60,0)
 D EN^XPAR("PKG","ORK CLINICAL DANGER LEVEL","DRUG DOSAGE","High",.ERR)
"RTN","ORY280",61,0)
 Q
"RTN","ORY280",62,0)
 ;
"RTN","ORY280",63,0)
UPDNAT ;
"RTN","ORY280",64,0)
 N DA,DIE,DR,UPDATED,XUMF
"RTN","ORY280",65,0)
 S XUMF=1
"RTN","ORY280",66,0)
 S DIE="^ORD(100.02,"
"RTN","ORY280",67,0)
 S DA=$O(^ORD(100.02,"B","SERVICE REJECT","")) I DA'>0 Q
"RTN","ORY280",68,0)
 ;DBIA 4631
"RTN","ORY280",69,0)
 S UPDATED=$$SETVUID^XTID(100.02,.01,DA_",",4712356)
"RTN","ORY280",70,0)
 I +$P(UPDATED,U)=0 D  Q
"RTN","ORY280",71,0)
 .D EN^DDIOL("Nature of Order file entry 'Service Reject' not updated")
"RTN","ORY280",72,0)
 .D EN^DDIOL($P(UPDATED,U,2))
"RTN","ORY280",73,0)
 S DR=".01///REJECTED BY SERVICE"
"RTN","ORY280",74,0)
 D ^DIE
"RTN","ORY280",75,0)
 D EN^DDIOL("Nature of Order file entry 'Service Reject' renamed to 'Rejected by Service'.")
"RTN","ORY280",76,0)
 Q
"RTN","ORY280",77,0)
 ;
"RTN","ORY280",78,0)
UPDPAR ;
"RTN","ORY280",79,0)
 N ZTDESC,ZTDTH,ZTRTN,ZTSAVE,ZTIO,TEXT,ZTSK
"RTN","ORY280",80,0)
 S ZTDESC="Session Order Dialog setting update"
"RTN","ORY280",81,0)
 S TEXT=ZTDESC_" has been queued, task number "
"RTN","ORY280",82,0)
 S ZTRTN="UPDPARQ^ORY280"
"RTN","ORY280",83,0)
 S ZTIO=""
"RTN","ORY280",84,0)
 S ZTDTH=$$NOW^XLFDT
"RTN","ORY280",85,0)
 D ^%ZTLOAD
"RTN","ORY280",86,0)
 I $D(ZTSK) S TEXT=TEXT_ZTSK D MES^XPDUTL(.TEXT)
"RTN","ORY280",87,0)
 Q
"RTN","ORY280",88,0)
 ;
"RTN","ORY280",89,0)
UPDPARQ ;
"RTN","ORY280",90,0)
 N ENT,INST,ORERR,ORLIST,PAR,VALUE
"RTN","ORY280",91,0)
 S PAR="ORWCH BOUNDS",INST="frmOCSession",VALUE="0,0,0,0"
"RTN","ORY280",92,0)
 D ENVAL^XPAR(.ORLIST,PAR,INST,.ORERR)
"RTN","ORY280",93,0)
 S ENT=""
"RTN","ORY280",94,0)
 F  S ENT=$O(ORLIST(ENT)) Q:ENT=""  D DEL^XPAR(ENT,PAR,INST,.ORERR)
"RTN","ORY280",95,0)
 ;F  S ENT=$O(ORLIST(ENT)) Q:ENT=""  D CHG^XPAR(ENT,PAR,INST,VALUE,.ORERR)
"RTN","ORY280",96,0)
 Q
"RTN","ORY280",97,0)
 ;
"RTN","ORY280",98,0)
UPDPAR1 ;Update ORWT TOOLS MENU parameter description
"RTN","ORY280",99,0)
 N TMP,DIE,ARRAY,ERR,X
"RTN","ORY280",100,0)
 D BMES^XPDUTL("Starting update of ORWT TOOLS MENU parameter definition description...")
"RTN","ORY280",101,0)
 S TMP("OR*3*280",8989.51,1)="This parameter may be used to identify which items should appear on the"
"RTN","ORY280",102,0)
 S TMP("OR*3*280",8989.51,2)="tools menu which is displayed by the CPRS GUI.  Each item should contain"
"RTN","ORY280",103,0)
 S TMP("OR*3*280",8989.51,3)="a name that should be displayed on the menu, followed by an equal sign,"
"RTN","ORY280",104,0)
 S TMP("OR*3*280",8989.51,4)="followed by the command string used to invoke the executable.  This"
"RTN","ORY280",105,0)
 S TMP("OR*3*280",8989.51,5)="string may also include parameters that are passed to the executable."
"RTN","ORY280",106,0)
 S TMP("OR*3*280",8989.51,6)="Some example entries are:"
"RTN","ORY280",107,0)
 S TMP("OR*3*280",8989.51,7)=" "
"RTN","ORY280",108,0)
 S TMP("OR*3*280",8989.51,8)="     Hospital Policy=C:\WINNT\SYSTEM32\VIEWERS\QUIKVIEW.EXE LOCPLCY.DOC"
"RTN","ORY280",109,0)
 S TMP("OR*3*280",8989.51,9)="     VISTA Terminal=C:\PROGRA~1\KEA\KEAVT.EXE VISTA.KTC"
"RTN","ORY280",110,0)
 S TMP("OR*3*280",8989.51,10)=" "
"RTN","ORY280",111,0)
 S TMP("OR*3*280",8989.51,11)="An ampersand may be used in the name portion to identify a letter that"
"RTN","ORY280",112,0)
 S TMP("OR*3*280",8989.51,12)="should be underlined on the menu for quick keyboard access.  For example,"
"RTN","ORY280",113,0)
 S TMP("OR*3*280",8989.51,13)="to underscore the letter H in Hospital Policy, enter &Hospital Policy as"
"RTN","ORY280",114,0)
 S TMP("OR*3*280",8989.51,14)="the name part."
"RTN","ORY280",115,0)
 S TMP("OR*3*280",8989.51,15)=" "
"RTN","ORY280",116,0)
 S TMP("OR*3*280",8989.51,16)="To use submenus on the tools menu, you must place special text in the"
"RTN","ORY280",117,0)
 S TMP("OR*3*280",8989.51,17)="caption and action values.  Submenus must have action text SUBMENU ID,"
"RTN","ORY280",118,0)
 S TMP("OR*3*280",8989.51,18)="where ID is a unique identifier for the submenu.  Menu items belonging to"
"RTN","ORY280",119,0)
 S TMP("OR*3*280",8989.51,19)="the submenu must specify which submenu they belong to by appending [ID]"
"RTN","ORY280",120,0)
 S TMP("OR*3*280",8989.51,20)="after the caption.  Thus the following entries create a Utilities submenu"
"RTN","ORY280",121,0)
 S TMP("OR*3*280",8989.51,21)="with 2 child items:"
"RTN","ORY280",122,0)
 S TMP("OR*3*280",8989.51,22)=" "
"RTN","ORY280",123,0)
 S TMP("OR*3*280",8989.51,23)="     Utilities=SUBMENU 1"
"RTN","ORY280",124,0)
 S TMP("OR*3*280",8989.51,24)="     Calculator[1]=calc.exe"
"RTN","ORY280",125,0)
 S TMP("OR*3*280",8989.51,25)="     Notepad[1]=notepad.exe"
"RTN","ORY280",126,0)
 S TMP("OR*3*280",8989.51,26)=" "
"RTN","ORY280",127,0)
 S TMP("OR*3*280",8989.51,27)="To create a nested submenu, you create a submenu that belongs to another"
"RTN","ORY280",128,0)
 S TMP("OR*3*280",8989.51,28)="submenu s ID.  For example, to create a nested submenu belonging the"
"RTN","ORY280",129,0)
 S TMP("OR*3*280",8989.51,29)="above Utilities submenu, you would do the following:"
"RTN","ORY280",130,0)
 S TMP("OR*3*280",8989.51,30)=" "
"RTN","ORY280",131,0)
 S TMP("OR*3*280",8989.51,31)="     Utility Web Sites[1]=SUBMENU UtilWeb"
"RTN","ORY280",132,0)
 S TMP("OR*3*280",8989.51,32)="     MicroSoft Tools[UtilWeb]=http:\\www.msdn"
"RTN","ORY280",133,0)
 S TMP("OR*3*280",8989.51,33)=" "
"RTN","ORY280",134,0)
 S TMP("OR*3*280",8989.51,34)="While submenu IDs at the end of a caption are not displayed on the Tools"
"RTN","ORY280",135,0)
 S TMP("OR*3*280",8989.51,35)="menu, this is only true if a corresponding menu ID is found.  If no Menu"
"RTN","ORY280",136,0)
 S TMP("OR*3*280",8989.51,36)="ID is found, the square brackets and included text will appear as part of"
"RTN","ORY280",137,0)
 S TMP("OR*3*280",8989.51,37)="the caption on the Tools menu.  This allows for existing bracketed text"
"RTN","ORY280",138,0)
 S TMP("OR*3*280",8989.51,38)="to remain displayed."
"RTN","ORY280",139,0)
 S TMP("OR*3*280",8989.51,39)=" "
"RTN","ORY280",140,0)
 S TMP("OR*3*280",8989.51,40)="If two submenus share the same menu ID, the second submenu will be"
"RTN","ORY280",141,0)
 S TMP("OR*3*280",8989.51,41)="treated as belonging to the first menu."
"RTN","ORY280",142,0)
 S TMP("OR*3*280",8989.51,42)=" "
"RTN","ORY280",143,0)
 S TMP("OR*3*280",8989.51,43)="One point worth noting.  If you have a caption of a single dash (or a"
"RTN","ORY280",144,0)
 S TMP("OR*3*280",8989.51,44)="single dash followed by a submenu id), it will create a separator line in"
"RTN","ORY280",145,0)
 S TMP("OR*3*280",8989.51,45)="the menu or submenu.  This is not new functionality, but may not have"
"RTN","ORY280",146,0)
 S TMP("OR*3*280",8989.51,46)="been previously documented."
"RTN","ORY280",147,0)
 S TMP("OR*3*280",8989.51,47)=" "
"RTN","ORY280",148,0)
 S TMP("OR*3*280",8989.51,48)="Finally, if more than 30 menu items are assigned to the top level menu"
"RTN","ORY280",149,0)
 S TMP("OR*3*280",8989.51,49)="(i.e. they are not part of a submenu), a ""More..."" submenu will"
"RTN","ORY280",150,0)
 S TMP("OR*3*280",8989.51,50)="automatically be created at the top of the Tools menu, with additional"
"RTN","ORY280",151,0)
 S TMP("OR*3*280",8989.51,51)="menu items spilling into the newly created ""More..."" submenu.  If more"
"RTN","ORY280",152,0)
 S TMP("OR*3*280",8989.51,52)="than 30 menu items spill into the ""More..."" submenu, another ""More..."""
"RTN","ORY280",153,0)
 S TMP("OR*3*280",8989.51,53)="submenu will be created inside the first ""More..."" submenu, with"
"RTN","ORY280",154,0)
 S TMP("OR*3*280",8989.51,54)="additional menu items spilling into it, and so on, as needed.  Note,"
"RTN","ORY280",155,0)
 S TMP("OR*3*280",8989.51,55)="however, that there is a limit of 99 total menu items, since you can only"
"RTN","ORY280",156,0)
 S TMP("OR*3*280",8989.51,56)="enter an integer sequence number from 1-99 when defining the ORWT TOOLS"
"RTN","ORY280",157,0)
 S TMP("OR*3*280",8989.51,57)="MENU parameter."
"RTN","ORY280",158,0)
 S X=$$FIND1^DIC(8989.51,,"BX","ORWT TOOLS MENU",,,)
"RTN","ORY280",159,0)
 S ARRAY=$NA(TMP("OR*3*280",8989.51))
"RTN","ORY280",160,0)
 S ERR=$NA(TMP("OR*3*280","ERR"))
"RTN","ORY280",161,0)
 D WP^DIE(8989.51,X_",",20,"K",ARRAY,ERR)
"RTN","ORY280",162,0)
 I $D(TMP("OR*3*280","ERR")) D  Q
"RTN","ORY280",163,0)
 . N ERRORS,LINES,FILE,IENS,TXT,TEXT,Y
"RTN","ORY280",164,0)
 . S FILE=8989.51
"RTN","ORY280",165,0)
 . S ERRORS=0 F  S ERRORS=$O(TMP("OR*3*280","ERR","DIERR",ERRORS)) Q:+ERRORS=0  D
"RTN","ORY280",166,0)
 .. S IENS=$G(TMP("OR*3*280","ERR","DIERR",ERRORS,"PARAM","IENS"))
"RTN","ORY280",167,0)
 .. S Y=0
"RTN","ORY280",168,0)
 .. F  S Y=$O(TMP("OR*3*280","ERR","DIERR",ERRORS,"TEXT",Y)) Q:+Y=0  D
"RTN","ORY280",169,0)
 ... S TXT(Y)=$G(TMP("OR*3*280","ERR","DIERR",ERRORS,"TEXT",Y))
"RTN","ORY280",170,0)
 . D BMES^XPDUTL("  Error occurred during update of ORWT TOOLS MENU parameter definition.")
"RTN","ORY280",171,0)
 . D MES^XPDUTL("  Entry"_$S($G(IENS)'="":" "_IENS,1:"")_" in file "_FILE_$S($G(IENS)'="":",",1:"")_" failed to update with the following")
"RTN","ORY280",172,0)
 . D MES^XPDUTL("  error message:")
"RTN","ORY280",173,0)
 . D MES^XPDUTL(" ")
"RTN","ORY280",174,0)
 . S Y=0 F  S Y=$O(TXT(Y)) Q:Y=""  D
"RTN","ORY280",175,0)
 .. S TEXT=$G(TXT(Y))
"RTN","ORY280",176,0)
 .. D MES^XPDUTL("    "_TEXT)
"RTN","ORY280",177,0)
 . K TMP
"RTN","ORY280",178,0)
 D BMES^XPDUTL("Update of ORWT TOOLS MENU parameter definition description has")
"RTN","ORY280",179,0)
 D MES^XPDUTL(" successfully completed")
"RTN","ORY280",180,0)
 Q
"RTN","ORY280",181,0)
 ;
"RTN","ORY2800")
0^75^B15643771
"RTN","ORY2800",1,0)
ORY2800 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY2800",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY2800",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY2800",4,0)
 ;
"RTN","ORY2800",5,0)
S ;
"RTN","ORY2800",6,0)
 ;
"RTN","ORY2800",7,0)
 Q
"RTN","ORY2800",8,0)
 ;
"RTN","ORY2800",9,0)
WARN(RTN,MSG,LINES) ;
"RTN","ORY2800",10,0)
 ;
"RTN","ORY2800",11,0)
 Q:$G(OCXAUTO)
"RTN","ORY2800",12,0)
 ;
"RTN","ORY2800",13,0)
 N DASH,LINE,NLINE,PLINE
"RTN","ORY2800",14,0)
 ;
"RTN","ORY2800",15,0)
 S DASH="",$P(DASH,"-",(55-$L(MSG)-2))="-"
"RTN","ORY2800",16,0)
 W !!,"--------------",MSG,DASH
"RTN","ORY2800",17,0)
 ;
"RTN","ORY2800",18,0)
 W !,RTN,?10,"[CPRS28.FO-SLC.MED.VA.GOV] -> [",$$NETNAME^OCXSEND,"] Line"
"RTN","ORY2800",19,0)
 ;
"RTN","ORY2800",20,0)
 I $O(LINES($O(LINES(0)))) W "s: "
"RTN","ORY2800",21,0)
 E  W ": "
"RTN","ORY2800",22,0)
 ;
"RTN","ORY2800",23,0)
 S LINE=0 F  S LINE=$O(LINES(LINE)) Q:'LINE  D
"RTN","ORY2800",24,0)
 .W:($X>60) !,?40
"RTN","ORY2800",25,0)
 .S NLINE=LINE F  S PLINE=NLINE,NLINE=$O(LINES(NLINE)) Q:(NLINE-PLINE-1)
"RTN","ORY2800",26,0)
 .I (PLINE=LINE) W " ",LINE
"RTN","ORY2800",27,0)
 .E  W " ",LINE,"-",PLINE S LINE=PLINE
"RTN","ORY2800",28,0)
 ;
"RTN","ORY2800",29,0)
 W ! Q
"RTN","ORY2800",30,0)
 ;
"RTN","ORY2800",31,0)
TEXT(RTN,LINE) ;
"RTN","ORY2800",32,0)
 ;
"RTN","ORY2800",33,0)
 N TEXT X "S TEXT=$T(+"_(+LINE)_"^"_RTN_")" Q TEXT
"RTN","ORY2800",34,0)
 ;
"RTN","ORY2800",35,0)
HEADER ;
"RTN","ORY2800",36,0)
 ;
"RTN","ORY2800",37,0)
 W !," Created: MAR 3,2010 at 07:20  at  CPRS28.FO-SLC.MED.VA.GOV"
"RTN","ORY2800",38,0)
 W !," Current Date: ",$$NOW,"  at  ",$$NETNAME^OCXSEND,!!
"RTN","ORY2800",39,0)
 S LASTFILE=0 K ^TMP("OCXRULE",$J)
"RTN","ORY2800",40,0)
 S ^TMP("OCXRULE",$J)=($P($H,",",2)+($H*86400)+(1*60*60))_" <- ^TMP ENTRY EXPIRATION DATE FOR ^OCXOPURG"
"RTN","ORY2800",41,0)
 Q
"RTN","ORY2800",42,0)
 ;
"RTN","ORY2800",43,0)
GETFILE(FILE,RECNAME,ARRAY) ;
"RTN","ORY2800",44,0)
 ;
"RTN","ORY2800",45,0)
 N CHECK,GLNEXT,GLREF,LINES,REC,DD,FLD
"RTN","ORY2800",46,0)
 S REC=$$LOOKUP(FILE,RECNAME)
"RTN","ORY2800",47,0)
 I 'REC W !!,$$FILENAME^OCXSENDD(FILE),": ",RECNAME Q 0
"RTN","ORY2800",48,0)
 I (REC=-1) W !!,$$FILENAME^OCXSENDD(FILE),": ",RECNAME,"  duplicate local entries.",! Q 0
"RTN","ORY2800",49,0)
 I (REC=-2) W !!,$$FILENAME^OCXSENDD(FILE)," (",FILE,") local file not found." W ! Q:$$PAUSE -10 Q REC
"RTN","ORY2800",50,0)
 I (REC<0) W !!,$$FILENAME^OCXSENDD(FILE),": ",RECNAME,"  unknown lookup error." W ! Q:$$PAUSE -10 Q REC
"RTN","ORY2800",51,0)
 I (REC>0) D
"RTN","ORY2800",52,0)
 .S CHECK=0,LINES=0
"RTN","ORY2800",53,0)
 .D GETREC($$FILE^OCXSENDD(FILE,"GLOBAL NAME"),"ARRAY(",REC,.ARRAY)
"RTN","ORY2800",54,0)
 .S GLREF="ARRAY" F  S GLREF=$Q(@GLREF) Q:'$L(GLREF)  Q:'($E(GLREF,1,6)="ARRAY(")  K:'$L(@GLREF) @GLREF
"RTN","ORY2800",55,0)
 ;
"RTN","ORY2800",56,0)
 Q REC
"RTN","ORY2800",57,0)
 ;
"RTN","ORY2800",58,0)
LKUPARRY(DD,KEY,ARRAY) ;
"RTN","ORY2800",59,0)
 ;
"RTN","ORY2800",60,0)
 N D0 S D0=0 F  S D0=$O(ARRAY(DD,D0)) Q:'D0  Q:($G(ARRAY(DD,D0,.01,"E"))=KEY)
"RTN","ORY2800",61,0)
 Q D0
"RTN","ORY2800",62,0)
 ;
"RTN","ORY2800",63,0)
LOOKUP(FILE,KEY) ;
"RTN","ORY2800",64,0)
 I $O(^TMP("OCXRULE",$J,"B",FILE,KEY,0)) Q 0
"RTN","ORY2800",65,0)
 N RECNAM,REC,D0,CNT,SHORT S (REC,CNT)=0
"RTN","ORY2800",66,0)
 S GL=$$FILE^OCXSENDD(FILE,"GLOBAL NAME") Q:'$L(GL) -2 S GL=$E(GL,1,$L(GL)-1)_")"
"RTN","ORY2800",67,0)
 S SHORT=$E(KEY,1,30),RECNAM=SHORT D  F  S RECNAM=$O(@GL@("B",RECNAM)) Q:'$L(RECNAM)  Q:'($E(RECNAM,1,$L(SHORT))=SHORT)  D
"RTN","ORY2800",68,0)
 .S D0=0 F  S D0=$O(@GL@("B",RECNAM,D0)) Q:'D0  I ($P($G(@GL@(D0,0)),U,1)=KEY) S CNT=CNT+1,REC=D0_U_RECNAME
"RTN","ORY2800",69,0)
 Q:(CNT>1) -1
"RTN","ORY2800",70,0)
 S:$L($P(REC,U,2)) ^TMP("OCXRULE",$J,"A",FILE,$P(REC,U,2))=""
"RTN","ORY2800",71,0)
 Q +REC
"RTN","ORY2800",72,0)
 ;
"RTN","ORY2800",73,0)
GETREC(GL,PATH,D0,REM) ;
"RTN","ORY2800",74,0)
 ;
"RTN","ORY2800",75,0)
 Q:'($P($G(@(GL_"0)")),U,2))
"RTN","ORY2800",76,0)
 N S1,DATA,DD
"RTN","ORY2800",77,0)
 S DATA="" D DIQ(GL,D0,.DATA)
"RTN","ORY2800",78,0)
 S DD=$O(DATA(0)) Q:'DD
"RTN","ORY2800",79,0)
 ;
"RTN","ORY2800",80,0)
 I $L($$FILE^OCXSENDD(DD,"NAME")) S PATH=PATH_""""_DD_":"_D0_""""
"RTN","ORY2800",81,0)
 I '$L($$FILE^OCXSENDD(DD,"NAME")) S PATH=PATH_","""_DD_":"_D0_""""
"RTN","ORY2800",82,0)
 M @(PATH_")")=DATA(DD,D0)
"RTN","ORY2800",83,0)
 ;
"RTN","ORY2800",84,0)
 S S1="" F  S S1=$O(@(GL_D0_","_$$SUB(S1)_")")) Q:'$L(S1)  I ($D(@(GL_D0_","_$$SUB(S1)_")"))>3) D
"RTN","ORY2800",85,0)
 .N D1,GLREF S GLREF=GL_D0_","_$$SUB(S1)_","
"RTN","ORY2800",86,0)
 .S D1=0 F  S D1=$O(@(GLREF_D1_")")) Q:'D1  D GETREC(GLREF,PATH,D1,.REM)
"RTN","ORY2800",87,0)
 ;
"RTN","ORY2800",88,0)
 Q
"RTN","ORY2800",89,0)
 ;
"RTN","ORY2800",90,0)
SUB(X) Q:'(X=+X) """"_X_"""" Q X
"RTN","ORY2800",91,0)
 ;
"RTN","ORY2800",92,0)
DIQ(DIC,DA,OCXARY) ;
"RTN","ORY2800",93,0)
 N DR,DIQ S DR=".01:99999",DIQ="OCXARY(",DIQ(0)="EN" D EN^DIQ1
"RTN","ORY2800",94,0)
 Q
"RTN","ORY2800",95,0)
 ;
"RTN","ORY2800",96,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY2800",97,0)
 ;
"RTN","ORY2800",98,0)
NOW() N X,Y,%DT S X="N",%DT="T" D ^%DT S Y=$$DATE^OCXSENDD(Y) S:(Y["@") Y=$P(Y,"@",1)_" at "_$P(Y,"@",2) Q Y
"RTN","ORY2800",99,0)
 ;
"RTN","ORY28001")
0^74^B71483826
"RTN","ORY28001",1,0)
ORY28001 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY28001",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY28001",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY28001",4,0)
 ;
"RTN","ORY28001",5,0)
S ;
"RTN","ORY28001",6,0)
 ;
"RTN","ORY28001",7,0)
 D DOT^ORY280ES
"RTN","ORY28001",8,0)
 ;
"RTN","ORY28001",9,0)
 ;
"RTN","ORY28001",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY28001",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY28001",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY28001",13,0)
 ;
"RTN","ORY28001",14,0)
 G ^ORY28002
"RTN","ORY28001",15,0)
 ;
"RTN","ORY28001",16,0)
 Q
"RTN","ORY28001",17,0)
 ;
"RTN","ORY28001",18,0)
DATA ;
"RTN","ORY28001",19,0)
 ;
"RTN","ORY28001",20,0)
 ;;ROOT^OCXS(860.2,0)^ORDER CHECK RULE^860.2I
"RTN","ORY28001",21,0)
 ;;ROOT^OCXS(860.3,0)^ORDER CHECK ELEMENT^860.3
"RTN","ORY28001",22,0)
 ;;ROOT^OCXS(860.4,0)^ORDER CHECK DATA FIELD^860.4I
"RTN","ORY28001",23,0)
 ;;ROOT^OCXS(860.5,0)^ORDER CHECK DATA SOURCE^860.5
"RTN","ORY28001",24,0)
 ;;ROOT^OCXS(860.6,0)^ORDER CHECK DATA CONTEXT^860.6
"RTN","ORY28001",25,0)
 ;;ROOT^OCXS(860.8,0)^ORDER CHECK COMPILER FUNCTIONS^860.8
"RTN","ORY28001",26,0)
 ;;ROOT^OCXS(860.9,0)^ORDER CHECK NATIONAL TERM^860.9
"RTN","ORY28001",27,0)
 ;;ROOT^OCXS(863,0)^OCX MDD CLASS^863
"RTN","ORY28001",28,0)
 ;;ROOT^OCXS(863.1,0)^OCX MDD APPLICATION^863.1
"RTN","ORY28001",29,0)
 ;;ROOT^OCXS(863.2,0)^OCX MDD SUBJECT^863.2
"RTN","ORY28001",30,0)
 ;;ROOT^OCXS(863.3,0)^OCX MDD LINK^863.3I
"RTN","ORY28001",31,0)
 ;;ROOT^OCXS(863.4,0)^OCX MDD ATTRIBUTE^863.4
"RTN","ORY28001",32,0)
 ;;ROOT^OCXS(863.5,0)^OCX MDD VALUES^863.5
"RTN","ORY28001",33,0)
 ;;ROOT^OCXS(863.6,0)^OCX MDD METHOD^863.6
"RTN","ORY28001",34,0)
 ;;ROOT^OCXS(863.7,0)^OCX MDD PUBLIC FUNCTION^863.7
"RTN","ORY28001",35,0)
 ;;ROOT^OCXS(863.8,0)^OCX MDD PARAMETER^863.8
"RTN","ORY28001",36,0)
 ;;ROOT^OCXS(863.9,0)^OCX MDD CONDITION/FUNCTION^863.9I
"RTN","ORY28001",37,0)
 ;;ROOT^OCXS(864,0)^OCX MDD SITE PREFERENCES^864P
"RTN","ORY28001",38,0)
 ;;ROOT^OCXS(864.1,0)^OCX MDD DATATYPE^864.1
"RTN","ORY28001",39,0)
 ;;ROOT^OCXD(860.1,0)^ORDER CHECK PATIENT ACTIVE DATA^860.1P
"RTN","ORY28001",40,0)
 ;;ROOT^OCXD(860.7,0)^ORDER CHECK PATIENT RULE EVENT^860.7P
"RTN","ORY28001",41,0)
 ;;ROOT^OCXD(861,0)^ORDER CHECK RAW DATA LOG^861
"RTN","ORY28001",42,0)
 ;;SOF^863.8  OCX MDD PARAMETER
"RTN","ORY28001",43,0)
 ;;KEY^863.8:^COMPARISON VALUE
"RTN","ORY28001",44,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",45,0)
 ;;D^COMPARISON VALUE
"RTN","ORY28001",46,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",47,0)
 ;;D^CVAL
"RTN","ORY28001",48,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",49,0)
 ;;D^ 
"RTN","ORY28001",50,0)
 ;;R^"863.8:",1,2
"RTN","ORY28001",51,0)
 ;;D^   This is a value to be compared with PRIMARY DATA FIELD
"RTN","ORY28001",52,0)
 ;;R^"863.8:",1,3
"RTN","ORY28001",53,0)
 ;;D^ in a truth conditional.
"RTN","ORY28001",54,0)
 ;;R^"863.8:",1,4
"RTN","ORY28001",55,0)
 ;;D^ 
"RTN","ORY28001",56,0)
 ;;EOR^
"RTN","ORY28001",57,0)
 ;;KEY^863.8:^DATA TYPE
"RTN","ORY28001",58,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",59,0)
 ;;D^DATA TYPE
"RTN","ORY28001",60,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",61,0)
 ;;D^DATA TYPE
"RTN","ORY28001",62,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",63,0)
 ;;D^An MDD data type; i.e., an entry in the OCX MDD DATA TYPE file.
"RTN","ORY28001",64,0)
 ;;R^"863.8:","863.84:6",.01,"E"
"RTN","ORY28001",65,0)
 ;;D^QUERY
"RTN","ORY28001",66,0)
 ;;R^"863.8:","863.84:6",1,"E"
"RTN","ORY28001",67,0)
 ;;D^Enter the datatype
"RTN","ORY28001",68,0)
 ;;R^"863.8:","863.84:7",.01,"E"
"RTN","ORY28001",69,0)
 ;;D^DIC
"RTN","ORY28001",70,0)
 ;;R^"863.8:","863.84:7",1,"E"
"RTN","ORY28001",71,0)
 ;;D^864.1
"RTN","ORY28001",72,0)
 ;;R^"863.8:","863.84:8",.01,"E"
"RTN","ORY28001",73,0)
 ;;D^DATA TYPE
"RTN","ORY28001",74,0)
 ;;R^"863.8:","863.84:8",1,"E"
"RTN","ORY28001",75,0)
 ;;D^POINTER TO A FILEMAN FILE
"RTN","ORY28001",76,0)
 ;;R^"863.8:","863.84:9",.01,"E"
"RTN","ORY28001",77,0)
 ;;D^DIC LOOKUP INDEX STRING
"RTN","ORY28001",78,0)
 ;;R^"863.8:","863.84:9",1,"E"
"RTN","ORY28001",79,0)
 ;;D^B^C
"RTN","ORY28001",80,0)
 ;;EOR^
"RTN","ORY28001",81,0)
 ;;KEY^863.8:^DIC
"RTN","ORY28001",82,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",83,0)
 ;;D^DIC
"RTN","ORY28001",84,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",85,0)
 ;;D^DIC
"RTN","ORY28001",86,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",87,0)
 ;;D^An open reference used to specify the file in a DIC lookup
"RTN","ORY28001",88,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY28001",89,0)
 ;;D^DATA TYPE
"RTN","ORY28001",90,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY28001",91,0)
 ;;D^POINTER TO A FILEMAN FILE
"RTN","ORY28001",92,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY28001",93,0)
 ;;D^DIC
"RTN","ORY28001",94,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY28001",95,0)
 ;;D^1
"RTN","ORY28001",96,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY28001",97,0)
 ;;D^QUERY
"RTN","ORY28001",98,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY28001",99,0)
 ;;D^Enter the name of the file you are pointing to
"RTN","ORY28001",100,0)
 ;;EOR^
"RTN","ORY28001",101,0)
 ;;KEY^863.8:^DIC LOOKUP INDEX STRING
"RTN","ORY28001",102,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",103,0)
 ;;D^DIC LOOKUP INDEX STRING
"RTN","ORY28001",104,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",105,0)
 ;;D^DICIX
"RTN","ORY28001",106,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",107,0)
 ;;D^Contains the names of indices to be used in a DIC lookup in a comma
"RTN","ORY28001",108,0)
 ;;R^"863.8:",1,2
"RTN","ORY28001",109,0)
 ;;D^delimited string.
"RTN","ORY28001",110,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY28001",111,0)
 ;;D^DATA TYPE
"RTN","ORY28001",112,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY28001",113,0)
 ;;D^FREE TEXT
"RTN","ORY28001",114,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY28001",115,0)
 ;;D^QUERY
"RTN","ORY28001",116,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY28001",117,0)
 ;;D^Enter a DIC lookup index string
"RTN","ORY28001",118,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY28001",119,0)
 ;;D^HELP MESSAGE
"RTN","ORY28001",120,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY28001",121,0)
 ;;D^This is an '^' delimited string which contains the names of indices which are to be used in a DIC lookup; e.g., B^C^DOB.
"RTN","ORY28001",122,0)
 ;;EOR^
"RTN","ORY28001",123,0)
 ;;KEY^863.8:^FILE
"RTN","ORY28001",124,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",125,0)
 ;;D^FILE
"RTN","ORY28001",126,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",127,0)
 ;;D^FILE
"RTN","ORY28001",128,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",129,0)
 ;;D^The internal entry number of a file.
"RTN","ORY28001",130,0)
 ;;R^"863.8:","863.84:6",.01,"E"
"RTN","ORY28001",131,0)
 ;;D^QUERY
"RTN","ORY28001",132,0)
 ;;R^"863.8:","863.84:6",1,"E"
"RTN","ORY28001",133,0)
 ;;D^File
"RTN","ORY28001",134,0)
 ;;R^"863.8:","863.84:7",.01,"E"
"RTN","ORY28001",135,0)
 ;;D^DATA TYPE
"RTN","ORY28001",136,0)
 ;;R^"863.8:","863.84:7",1,"E"
"RTN","ORY28001",137,0)
 ;;D^POINTER TO A FILEMAN FILE
"RTN","ORY28001",138,0)
 ;;R^"863.8:","863.84:8",.01,"E"
"RTN","ORY28001",139,0)
 ;;D^DIC
"RTN","ORY28001",140,0)
 ;;R^"863.8:","863.84:8",1,"E"
"RTN","ORY28001",141,0)
 ;;D^1
"RTN","ORY28001",142,0)
 ;;EOR^
"RTN","ORY28001",143,0)
 ;;KEY^863.8:^FM MASK
"RTN","ORY28001",144,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",145,0)
 ;;D^FM MASK
"RTN","ORY28001",146,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",147,0)
 ;;D^FM MASK
"RTN","ORY28001",148,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",149,0)
 ;;D^Tag^routine where code is located to parse the FM DD and override the parameter value
"RTN","ORY28001",150,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY28001",151,0)
 ;;D^QUERY
"RTN","ORY28001",152,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY28001",153,0)
 ;;D^Enter tag^routine where the FM MASK parser is located
"RTN","ORY28001",154,0)
 ;;R^"863.8:","863.84:5",.01,"E"
"RTN","ORY28001",155,0)
 ;;D^DATA TYPE
"RTN","ORY28001",156,0)
 ;;R^"863.8:","863.84:5",1,"E"
"RTN","ORY28001",157,0)
 ;;D^LINE TAG
"RTN","ORY28001",158,0)
 ;;EOR^
"RTN","ORY28001",159,0)
 ;;KEY^863.8:^FREE TEXT MAXIMUM LENGTH
"RTN","ORY28001",160,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",161,0)
 ;;D^FREE TEXT MAXIMUM LENGTH
"RTN","ORY28001",162,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",163,0)
 ;;D^FMAX
"RTN","ORY28001",164,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",165,0)
 ;;D^Maximum string length allowed
"RTN","ORY28001",166,0)
 ;;R^"863.8:",2,"E"
"RTN","ORY28001",167,0)
 ;;D^245
"RTN","ORY28001",168,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY28001",169,0)
 ;;D^QUERY
"RTN","ORY28001",170,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY28001",171,0)
 ;;D^Maximum text string length allowed
"RTN","ORY28001",172,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY28001",173,0)
 ;;D^FM MASK
"RTN","ORY28001",174,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY28001",175,0)
 ;;D^FMAX^OCXF6
"RTN","ORY28001",176,0)
 ;;R^"863.8:","863.84:5",.01,"E"
"RTN","ORY28001",177,0)
 ;;D^DATA TYPE
"RTN","ORY28001",178,0)
 ;;R^"863.8:","863.84:5",1,"E"
"RTN","ORY28001",179,0)
 ;;D^POSITIVE INTEGER
"RTN","ORY28001",180,0)
 ;;EOR^
"RTN","ORY28001",181,0)
 ;;KEY^863.8:^HELP MESSAGE
"RTN","ORY28001",182,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",183,0)
 ;;D^HELP MESSAGE
"RTN","ORY28001",184,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",185,0)
 ;;D^HELP
"RTN","ORY28001",186,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",187,0)
 ;;D^A text string 1-250 characters long which overrides the Fileman help
"RTN","ORY28001",188,0)
 ;;R^"863.8:",1,2
"RTN","ORY28001",189,0)
 ;;D^message.
"RTN","ORY28001",190,0)
 ;;R^"863.8:","863.84:10",.01,"E"
"RTN","ORY28001",191,0)
 ;;D^QUERY
"RTN","ORY28001",192,0)
 ;;R^"863.8:","863.84:10",1,"E"
"RTN","ORY28001",193,0)
 ;;D^Enter a brief help message
"RTN","ORY28001",194,0)
 ;;R^"863.8:","863.84:8",.01,"E"
"RTN","ORY28001",195,0)
 ;;D^DATA TYPE
"RTN","ORY28001",196,0)
 ;;R^"863.8:","863.84:8",1,"E"
"RTN","ORY28001",197,0)
 ;;D^FREE TEXT
"RTN","ORY28001",198,0)
 ;;R^"863.8:","863.84:9",.01,"E"
"RTN","ORY28001",199,0)
 ;;D^FM MASK
"RTN","ORY28001",200,0)
 ;;R^"863.8:","863.84:9",1,"E"
"RTN","ORY28001",201,0)
 ;;D^HELP^OCXF6
"RTN","ORY28001",202,0)
 ;;EOR^
"RTN","ORY28001",203,0)
 ;;KEY^863.8:^LOOP QUERY
"RTN","ORY28001",204,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",205,0)
 ;;D^LOOP QUERY
"RTN","ORY28001",206,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",207,0)
 ;;D^LOOP QUERY
"RTN","ORY28001",208,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",209,0)
 ;;D^Alternate query used when repeated answers are required
"RTN","ORY28001",210,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY28001",211,0)
 ;;D^DATA TYPE
"RTN","ORY28001",212,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY28001",213,0)
 ;;D^FREE TEXT
"RTN","ORY28001",214,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY28001",215,0)
 ;;D^QUERY
"RTN","ORY28001",216,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY28001",217,0)
 ;;D^Enter loop query text
"RTN","ORY28001",218,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY28001",219,0)
 ;;D^HELP MESSAGE
"RTN","ORY28001",220,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY28001",221,0)
 ;;D^This is the query text for all entries after the first one
"RTN","ORY28001",222,0)
 ;;EOR^
"RTN","ORY28001",223,0)
 ;;KEY^863.8:^MANDATORY MESSAGE
"RTN","ORY28001",224,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",225,0)
 ;;D^MANDATORY MESSAGE
"RTN","ORY28001",226,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",227,0)
 ;;D^MAND MSG
"RTN","ORY28001",228,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",229,0)
 ;;D^Message sent to user telling him that his entry is mandatory
"RTN","ORY28001",230,0)
 ;;R^"863.8:",2,"E"
"RTN","ORY28001",231,0)
 ;;D^Mandatory answer.  You must enter a value or '^' to exit.
"RTN","ORY28001",232,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY28001",233,0)
 ;;D^QUERY
"RTN","ORY28001",234,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY28001",235,0)
 ;;D^Enter message
"RTN","ORY28001",236,0)
 ;;R^"863.8:","863.84:5",.01,"E"
"RTN","ORY28001",237,0)
 ;;D^DATA TYPE
"RTN","ORY28001",238,0)
 ;;R^"863.8:","863.84:5",1,"E"
"RTN","ORY28001",239,0)
 ;;D^FREE TEXT
"RTN","ORY28001",240,0)
 ;;EOR^
"RTN","ORY28001",241,0)
 ;;KEY^863.8:^OCXO DATA DRIVE SOURCE
"RTN","ORY28001",242,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",243,0)
 ;;D^OCXO DATA DRIVE SOURCE
"RTN","ORY28001",244,0)
 ;;EOR^
"RTN","ORY28001",245,0)
 ;;KEY^863.8:^OCXO EXTERNAL FUNCTION CALL
"RTN","ORY28001",246,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",247,0)
 ;;D^OCXO EXTERNAL FUNCTION CALL
"RTN","ORY28001",248,0)
 ;;EOR^
"RTN","ORY28001",249,0)
 ;;KEY^863.8:^OCXO FILE POINTER
"RTN","ORY28001",250,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",251,0)
 ;;D^OCXO FILE POINTER
"RTN","ORY28001",252,0)
 ;;EOR^
"RTN","ORY28001",253,0)
 ;;KEY^863.8:^OCXO GENERATE CODE FUNCTION
"RTN","ORY28001",254,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",255,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY28001",256,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",257,0)
 ;;D^GEN
"RTN","ORY28001",258,0)
 ;;EOR^
"RTN","ORY28001",259,0)
 ;;KEY^863.8:^OCXO HL7 SEGMENT ID
"RTN","ORY28001",260,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",261,0)
 ;;D^OCXO HL7 SEGMENT ID
"RTN","ORY28001",262,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",263,0)
 ;;D^HL7SEGID
"RTN","ORY28001",264,0)
 ;;EOR^
"RTN","ORY28001",265,0)
 ;;KEY^863.8:^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY28001",266,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",267,0)
 ;;D^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY28001",268,0)
 ;;EOR^
"RTN","ORY28001",269,0)
 ;;KEY^863.8:^OCXO VARIABLE NAME
"RTN","ORY28001",270,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",271,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY28001",272,0)
 ;;EOR^
"RTN","ORY28001",273,0)
 ;;KEY^863.8:^OCXO VT-BAR PIECE NUMBER
"RTN","ORY28001",274,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",275,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY28001",276,0)
 ;;EOR^
"RTN","ORY28001",277,0)
 ;;KEY^863.8:^PRIMARY DATA FIELD
"RTN","ORY28001",278,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28001",279,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY28001",280,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28001",281,0)
 ;;D^PDFLD
"RTN","ORY28001",282,0)
 ;;R^"863.8:",1,1
"RTN","ORY28001",283,0)
 ;;D^ 
"RTN","ORY28001",284,0)
 ;;R^"863.8:",1,2
"RTN","ORY28001",285,0)
 ;1;
"RTN","ORY28001",286,0)
 ;
"RTN","ORY28002")
0^76^B78087672
"RTN","ORY28002",1,0)
ORY28002 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY28002",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY28002",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY28002",4,0)
 ;
"RTN","ORY28002",5,0)
S ;
"RTN","ORY28002",6,0)
 ;
"RTN","ORY28002",7,0)
 D DOT^ORY280ES
"RTN","ORY28002",8,0)
 ;
"RTN","ORY28002",9,0)
 ;
"RTN","ORY28002",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY28002",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY28002",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY28002",13,0)
 ;
"RTN","ORY28002",14,0)
 G ^ORY28003
"RTN","ORY28002",15,0)
 ;
"RTN","ORY28002",16,0)
 Q
"RTN","ORY28002",17,0)
 ;
"RTN","ORY28002",18,0)
DATA ;
"RTN","ORY28002",19,0)
 ;
"RTN","ORY28002",20,0)
 ;;D^  Primary data field in a comparison expression that
"RTN","ORY28002",21,0)
 ;;R^"863.8:",1,3
"RTN","ORY28002",22,0)
 ;;D^ is to be tested.
"RTN","ORY28002",23,0)
 ;;R^"863.8:",1,4
"RTN","ORY28002",24,0)
 ;;D^ 
"RTN","ORY28002",25,0)
 ;;EOR^
"RTN","ORY28002",26,0)
 ;;KEY^863.8:^QUERY
"RTN","ORY28002",27,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28002",28,0)
 ;;D^QUERY
"RTN","ORY28002",29,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28002",30,0)
 ;;D^QUERY
"RTN","ORY28002",31,0)
 ;;R^"863.8:",1,1
"RTN","ORY28002",32,0)
 ;;D^Used with methods that manage interactive dialogues.  Equivalent to DIC("A")
"RTN","ORY28002",33,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY28002",34,0)
 ;;D^DATA TYPE
"RTN","ORY28002",35,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY28002",36,0)
 ;;D^FREE TEXT
"RTN","ORY28002",37,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY28002",38,0)
 ;;D^QUERY
"RTN","ORY28002",39,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY28002",40,0)
 ;;D^Enter the query (free text string)
"RTN","ORY28002",41,0)
 ;;EOR^
"RTN","ORY28002",42,0)
 ;;KEY^863.8:^REPEAT THE QUERY
"RTN","ORY28002",43,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28002",44,0)
 ;;D^REPEAT THE QUERY
"RTN","ORY28002",45,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28002",46,0)
 ;;D^LOOP
"RTN","ORY28002",47,0)
 ;;R^"863.8:",1,1
"RTN","ORY28002",48,0)
 ;;D^Set this = 1 to repetitively ask the user to enter a value
"RTN","ORY28002",49,0)
 ;;R^"863.8:","863.84:1",.01,"E"
"RTN","ORY28002",50,0)
 ;;D^DATA TYPE
"RTN","ORY28002",51,0)
 ;;R^"863.8:","863.84:1",1,"E"
"RTN","ORY28002",52,0)
 ;;D^YES NO
"RTN","ORY28002",53,0)
 ;;R^"863.8:","863.84:2",.01,"E"
"RTN","ORY28002",54,0)
 ;;D^HELP MESSAGE
"RTN","ORY28002",55,0)
 ;;R^"863.8:","863.84:2",1,"E"
"RTN","ORY28002",56,0)
 ;;D^Answer 'YES' if you want the user to repetitively enter a value.
"RTN","ORY28002",57,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY28002",58,0)
 ;;D^QUERY
"RTN","ORY28002",59,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY28002",60,0)
 ;;D^Is the query repetitive
"RTN","ORY28002",61,0)
 ;;EOR^
"RTN","ORY28002",62,0)
 ;;KEY^863.8:^TERMINATOR
"RTN","ORY28002",63,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28002",64,0)
 ;;D^TERMINATOR
"RTN","ORY28002",65,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28002",66,0)
 ;;D^TERMINATOR
"RTN","ORY28002",67,0)
 ;;R^"863.8:",1,1
"RTN","ORY28002",68,0)
 ;;D^A text string terminator; e.g., '?', ': ', '=>'
"RTN","ORY28002",69,0)
 ;;R^"863.8:",2,"E"
"RTN","ORY28002",70,0)
 ;;D^:
"RTN","ORY28002",71,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY28002",72,0)
 ;;D^QUERY
"RTN","ORY28002",73,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY28002",74,0)
 ;;D^Enter text string terminator
"RTN","ORY28002",75,0)
 ;;R^"863.8:","863.84:5",.01,"E"
"RTN","ORY28002",76,0)
 ;;D^DATA TYPE
"RTN","ORY28002",77,0)
 ;;R^"863.8:","863.84:5",1,"E"
"RTN","ORY28002",78,0)
 ;;D^FREE TEXT
"RTN","ORY28002",79,0)
 ;;R^"863.8:","863.84:6",.01,"E"
"RTN","ORY28002",80,0)
 ;;D^FREE TEXT MAXIMUM LENGTH
"RTN","ORY28002",81,0)
 ;;R^"863.8:","863.84:6",1,"E"
"RTN","ORY28002",82,0)
 ;;D^9
"RTN","ORY28002",83,0)
 ;;EOR^
"RTN","ORY28002",84,0)
 ;;KEY^863.8:^VALUE CALL
"RTN","ORY28002",85,0)
 ;;R^"863.8:",.01,"E"
"RTN","ORY28002",86,0)
 ;;D^VALUE CALL
"RTN","ORY28002",87,0)
 ;;R^"863.8:",.02,"E"
"RTN","ORY28002",88,0)
 ;;D^VAL CALL
"RTN","ORY28002",89,0)
 ;;R^"863.8:",.03,"E"
"RTN","ORY28002",90,0)
 ;;D^NO
"RTN","ORY28002",91,0)
 ;;R^"863.8:",1,1
"RTN","ORY28002",92,0)
 ;;D^tag^routine which manages the dialogue for collecting and validating a value
"RTN","ORY28002",93,0)
 ;;R^"863.8:","863.84:3",.01,"E"
"RTN","ORY28002",94,0)
 ;;D^QUERY
"RTN","ORY28002",95,0)
 ;;R^"863.8:","863.84:3",1,"E"
"RTN","ORY28002",96,0)
 ;;D^Enter tag^routine
"RTN","ORY28002",97,0)
 ;;R^"863.8:","863.84:4",.01,"E"
"RTN","ORY28002",98,0)
 ;;D^DATA TYPE
"RTN","ORY28002",99,0)
 ;;R^"863.8:","863.84:4",1,"E"
"RTN","ORY28002",100,0)
 ;;D^LINE TAG
"RTN","ORY28002",101,0)
 ;;EOR^
"RTN","ORY28002",102,0)
 ;;EOF^OCXS(863.8)^1
"RTN","ORY28002",103,0)
 ;;SOF^864.1  OCX MDD DATATYPE
"RTN","ORY28002",104,0)
 ;;KEY^864.1:^BOOLEAN
"RTN","ORY28002",105,0)
 ;;R^"864.1:",.01,"E"
"RTN","ORY28002",106,0)
 ;;D^BOOLEAN
"RTN","ORY28002",107,0)
 ;;R^"864.1:",.02,"E"
"RTN","ORY28002",108,0)
 ;;D^BOOL
"RTN","ORY28002",109,0)
 ;;EOR^
"RTN","ORY28002",110,0)
 ;;KEY^864.1:^FREE TEXT
"RTN","ORY28002",111,0)
 ;;R^"864.1:",.01,"E"
"RTN","ORY28002",112,0)
 ;;D^FREE TEXT
"RTN","ORY28002",113,0)
 ;;R^"864.1:",.02,"E"
"RTN","ORY28002",114,0)
 ;;D^FT
"RTN","ORY28002",115,0)
 ;;R^"864.1:",2,"E"
"RTN","ORY28002",116,0)
 ;;D^GENERIC
"RTN","ORY28002",117,0)
 ;;R^"864.1:","864.11:1",.01,"E"
"RTN","ORY28002",118,0)
 ;;D^VALUE CALL
"RTN","ORY28002",119,0)
 ;;R^"864.1:","864.11:1",1,"E"
"RTN","ORY28002",120,0)
 ;;D^FT^OCXFDFT
"RTN","ORY28002",121,0)
 ;;R^"864.1:","864.11:2",.01,"E"
"RTN","ORY28002",122,0)
 ;;D^QUERY
"RTN","ORY28002",123,0)
 ;;R^"864.1:","864.11:2",1,"E"
"RTN","ORY28002",124,0)
 ;;D^Enter a free text string
"RTN","ORY28002",125,0)
 ;;R^"864.1:","864.11:3",.01,"E"
"RTN","ORY28002",126,0)
 ;;D^FREE TEXT MAXIMUM LENGTH
"RTN","ORY28002",127,0)
 ;;R^"864.1:","864.11:3",1,"E"
"RTN","ORY28002",128,0)
 ;;D^240
"RTN","ORY28002",129,0)
 ;;R^"864.1:","864.11:4",.01,"E"
"RTN","ORY28002",130,0)
 ;;D^HELP MESSAGE
"RTN","ORY28002",131,0)
 ;;R^"864.1:","864.11:4",1,"E"
"RTN","ORY28002",132,0)
 ;;D^Enter a free text string.  Do not use control characters.  |FTMM HELP|
"RTN","ORY28002",133,0)
 ;;R^"864.1:","864.11:5",.01,"E"
"RTN","ORY28002",134,0)
 ;;D^LOOP QUERY
"RTN","ORY28002",135,0)
 ;;R^"864.1:","864.11:5",1,"E"
"RTN","ORY28002",136,0)
 ;;D^Enter another free text string
"RTN","ORY28002",137,0)
 ;;R^"864.1:","864.11:6",.01,"E"
"RTN","ORY28002",138,0)
 ;;D^REPEAT THE QUERY
"RTN","ORY28002",139,0)
 ;;R^"864.1:","864.11:6",1,"E"
"RTN","ORY28002",140,0)
 ;;D^0
"RTN","ORY28002",141,0)
 ;;EOR^
"RTN","ORY28002",142,0)
 ;;KEY^864.1:^GENERIC
"RTN","ORY28002",143,0)
 ;;R^"864.1:",.01,"E"
"RTN","ORY28002",144,0)
 ;;D^GENERIC
"RTN","ORY28002",145,0)
 ;;R^"864.1:",.02,"E"
"RTN","ORY28002",146,0)
 ;;D^GENERIC
"RTN","ORY28002",147,0)
 ;;R^"864.1:","864.11:11",.01,"E"
"RTN","ORY28002",148,0)
 ;;D^MANDATORY MESSAGE
"RTN","ORY28002",149,0)
 ;;R^"864.1:","864.11:11",1,"E"
"RTN","ORY28002",150,0)
 ;;D^This answer is mandatory.  Enter a response or press '^' to exit.
"RTN","ORY28002",151,0)
 ;;R^"864.1:","864.11:12",.01,"E"
"RTN","ORY28002",152,0)
 ;;D^TERMINATOR
"RTN","ORY28002",153,0)
 ;;R^"864.1:","864.11:12",1,"E"
"RTN","ORY28002",154,0)
 ;;D^:
"RTN","ORY28002",155,0)
 ;;R^"864.1:","864.11:13",.01,"E"
"RTN","ORY28002",156,0)
 ;;D^LOOP QUERY
"RTN","ORY28002",157,0)
 ;;R^"864.1:","864.11:13",1,"E"
"RTN","ORY28002",158,0)
 ;;D^Enter another value
"RTN","ORY28002",159,0)
 ;;R^"864.1:","864.11:7",.01,"E"
"RTN","ORY28002",160,0)
 ;;D^VALUE CALL
"RTN","ORY28002",161,0)
 ;;R^"864.1:","864.11:7",1,"E"
"RTN","ORY28002",162,0)
 ;;D^GEN^OCXFDMOM
"RTN","ORY28002",163,0)
 ;;R^"864.1:","864.11:8",.01,"E"
"RTN","ORY28002",164,0)
 ;;D^QUERY
"RTN","ORY28002",165,0)
 ;;R^"864.1:","864.11:8",1,"E"
"RTN","ORY28002",166,0)
 ;;D^Enter a value
"RTN","ORY28002",167,0)
 ;;R^"864.1:","864.11:9",.01,"E"
"RTN","ORY28002",168,0)
 ;;D^HELP MESSAGE
"RTN","ORY28002",169,0)
 ;;R^"864.1:","864.11:9",1,"E"
"RTN","ORY28002",170,0)
 ;;D^ 
"RTN","ORY28002",171,0)
 ;;EOR^
"RTN","ORY28002",172,0)
 ;;KEY^864.1:^NUMERIC
"RTN","ORY28002",173,0)
 ;;R^"864.1:",.01,"E"
"RTN","ORY28002",174,0)
 ;;D^NUMERIC
"RTN","ORY28002",175,0)
 ;;R^"864.1:",.02,"E"
"RTN","ORY28002",176,0)
 ;;D^NUMERIC
"RTN","ORY28002",177,0)
 ;;R^"864.1:",2,"E"
"RTN","ORY28002",178,0)
 ;;D^GENERIC
"RTN","ORY28002",179,0)
 ;;R^"864.1:","864.11:1",.01,"E"
"RTN","ORY28002",180,0)
 ;;D^VALUE CALL
"RTN","ORY28002",181,0)
 ;;R^"864.1:","864.11:1",1,"E"
"RTN","ORY28002",182,0)
 ;;D^NU^OCXFDNU
"RTN","ORY28002",183,0)
 ;;R^"864.1:","864.11:2",.01,"E"
"RTN","ORY28002",184,0)
 ;;D^QUERY
"RTN","ORY28002",185,0)
 ;;R^"864.1:","864.11:2",1,"E"
"RTN","ORY28002",186,0)
 ;;D^Enter a number
"RTN","ORY28002",187,0)
 ;;R^"864.1:","864.11:3",.01,"E"
"RTN","ORY28002",188,0)
 ;;D^LOOP QUERY
"RTN","ORY28002",189,0)
 ;;R^"864.1:","864.11:3",1,"E"
"RTN","ORY28002",190,0)
 ;;D^Enter another number
"RTN","ORY28002",191,0)
 ;;R^"864.1:","864.11:4",.01,"E"
"RTN","ORY28002",192,0)
 ;;D^REPEAT THE QUERY
"RTN","ORY28002",193,0)
 ;;R^"864.1:","864.11:4",1,"E"
"RTN","ORY28002",194,0)
 ;;D^0
"RTN","ORY28002",195,0)
 ;;EOR^
"RTN","ORY28002",196,0)
 ;;EOF^OCXS(864.1)^1
"RTN","ORY28002",197,0)
 ;;SOF^863.7  OCX MDD PUBLIC FUNCTION
"RTN","ORY28002",198,0)
 ;;KEY^863.7:^GCC BOOLEAN LOGICAL FALSE
"RTN","ORY28002",199,0)
 ;;R^"863.7:",.01,"E"
"RTN","ORY28002",200,0)
 ;;D^GCC BOOLEAN LOGICAL FALSE
"RTN","ORY28002",201,0)
 ;;R^"863.7:",.02,"E"
"RTN","ORY28002",202,0)
 ;;D^EXTRINSIC FUNCTION
"RTN","ORY28002",203,0)
 ;;R^"863.7:",3,"E"
"RTN","ORY28002",204,0)
 ;;D^FALSE^OCXF23
"RTN","ORY28002",205,0)
 ;;R^"863.7:","863.74:1",.01,"E"
"RTN","ORY28002",206,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY28002",207,0)
 ;;R^"863.7:","863.74:1",1.1,"E"
"RTN","ORY28002",208,0)
 ;;D^1
"RTN","ORY28002",209,0)
 ;;EOR^
"RTN","ORY28002",210,0)
 ;;KEY^863.7:^GCC FREE TEXT CONTAINS ELEMENT IN SET
"RTN","ORY28002",211,0)
 ;;R^"863.7:",.01,"E"
"RTN","ORY28002",212,0)
 ;;D^GCC FREE TEXT CONTAINS ELEMENT IN SET
"RTN","ORY28002",213,0)
 ;;R^"863.7:",.02,"E"
"RTN","ORY28002",214,0)
 ;;D^EXTRINSIC FUNCTION
"RTN","ORY28002",215,0)
 ;;R^"863.7:",3,"E"
"RTN","ORY28002",216,0)
 ;;D^CONSET^OCXF22
"RTN","ORY28002",217,0)
 ;;R^"863.7:","863.74:1",.01,"E"
"RTN","ORY28002",218,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY28002",219,0)
 ;;R^"863.7:","863.74:1",1.1,"E"
"RTN","ORY28002",220,0)
 ;;D^1
"RTN","ORY28002",221,0)
 ;;R^"863.7:","863.74:2",.01,"E"
"RTN","ORY28002",222,0)
 ;;D^COMPARISON VALUE
"RTN","ORY28002",223,0)
 ;;R^"863.7:","863.74:2",1.1,"E"
"RTN","ORY28002",224,0)
 ;;D^2
"RTN","ORY28002",225,0)
 ;;EOR^
"RTN","ORY28002",226,0)
 ;;KEY^863.7:^GCC FREE TEXT EQUALS
"RTN","ORY28002",227,0)
 ;;R^"863.7:",.01,"E"
"RTN","ORY28002",228,0)
 ;;D^GCC FREE TEXT EQUALS
"RTN","ORY28002",229,0)
 ;;R^"863.7:",.02,"E"
"RTN","ORY28002",230,0)
 ;;D^EXTRINSIC FUNCTION
"RTN","ORY28002",231,0)
 ;;R^"863.7:",3,"E"
"RTN","ORY28002",232,0)
 ;;D^AEQ^OCXF22
"RTN","ORY28002",233,0)
 ;;R^"863.7:","863.74:1",.01,"E"
"RTN","ORY28002",234,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY28002",235,0)
 ;;R^"863.7:","863.74:1",1.1,"E"
"RTN","ORY28002",236,0)
 ;;D^1
"RTN","ORY28002",237,0)
 ;;R^"863.7:","863.74:2",.01,"E"
"RTN","ORY28002",238,0)
 ;;D^COMPARISON VALUE
"RTN","ORY28002",239,0)
 ;;R^"863.7:","863.74:2",1.1,"E"
"RTN","ORY28002",240,0)
 ;;D^2
"RTN","ORY28002",241,0)
 ;;EOR^
"RTN","ORY28002",242,0)
 ;;KEY^863.7:^GCC FREE TEXT STARTS WITH
"RTN","ORY28002",243,0)
 ;;R^"863.7:",.01,"E"
"RTN","ORY28002",244,0)
 ;;D^GCC FREE TEXT STARTS WITH
"RTN","ORY28002",245,0)
 ;;R^"863.7:",.02,"E"
"RTN","ORY28002",246,0)
 ;;D^EXTRINSIC FUNCTION
"RTN","ORY28002",247,0)
 ;;R^"863.7:",3,"E"
"RTN","ORY28002",248,0)
 ;;D^START^OCXF22
"RTN","ORY28002",249,0)
 ;;R^"863.7:","863.74:1",.01,"E"
"RTN","ORY28002",250,0)
 ;;D^PRIMARY DATA FIELD
"RTN","ORY28002",251,0)
 ;;R^"863.7:","863.74:1",1.1,"E"
"RTN","ORY28002",252,0)
 ;;D^1
"RTN","ORY28002",253,0)
 ;;R^"863.7:","863.74:2",.01,"E"
"RTN","ORY28002",254,0)
 ;;D^COMPARISON VALUE
"RTN","ORY28002",255,0)
 ;;R^"863.7:","863.74:2",1.1,"E"
"RTN","ORY28002",256,0)
 ;;D^2
"RTN","ORY28002",257,0)
 ;;EOR^
"RTN","ORY28002",258,0)
 ;;EOF^OCXS(863.7)^1
"RTN","ORY28002",259,0)
 ;;SOF^863.9  OCX MDD CONDITION/FUNCTION
"RTN","ORY28002",260,0)
 ;;KEY^863.9:^CONTAINS ELEMENT IN SET
"RTN","ORY28002",261,0)
 ;;R^"863.9:",.01,"E"
"RTN","ORY28002",262,0)
 ;;D^CONTAINS ELEMENT IN SET
"RTN","ORY28002",263,0)
 ;;R^"863.9:",.02,"E"
"RTN","ORY28002",264,0)
 ;;D^FREE TEXT
"RTN","ORY28002",265,0)
 ;;R^"863.9:",.04,"E"
"RTN","ORY28002",266,0)
 ;;D^CONTAINS AN ELEMENT IN THE SET
"RTN","ORY28002",267,0)
 ;;R^"863.9:","863.91:1",.01,"E"
"RTN","ORY28002",268,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY28002",269,0)
 ;;R^"863.9:","863.91:1",1,"E"
"RTN","ORY28002",270,0)
 ;;D^GCC FREE TEXT CONTAINS ELEMENT IN SET
"RTN","ORY28002",271,0)
 ;;EOR^
"RTN","ORY28002",272,0)
 ;;KEY^863.9:^EQ FREE TEXT
"RTN","ORY28002",273,0)
 ;;R^"863.9:",.01,"E"
"RTN","ORY28002",274,0)
 ;;D^EQ FREE TEXT
"RTN","ORY28002",275,0)
 ;;R^"863.9:",.02,"E"
"RTN","ORY28002",276,0)
 ;;D^FREE TEXT
"RTN","ORY28002",277,0)
 ;;R^"863.9:",.04,"E"
"RTN","ORY28002",278,0)
 ;;D^IS EQUAL TO
"RTN","ORY28002",279,0)
 ;;R^"863.9:","863.91:3",.01,"E"
"RTN","ORY28002",280,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY28002",281,0)
 ;;R^"863.9:","863.91:3",1,"E"
"RTN","ORY28002",282,0)
 ;;D^GCC FREE TEXT EQUALS
"RTN","ORY28002",283,0)
 ;;R^"863.9:","863.92:1",.01,"E"
"RTN","ORY28002",284,0)
 ;;D^EQUALS
"RTN","ORY28002",285,0)
 ;;EOR^
"RTN","ORY28002",286,0)
 ;;KEY^863.9:^LOGICAL FALSE
"RTN","ORY28002",287,0)
 ;;R^"863.9:",.01,"E"
"RTN","ORY28002",288,0)
 ;;D^LOGICAL FALSE
"RTN","ORY28002",289,0)
 ;;R^"863.9:",.02,"E"
"RTN","ORY28002",290,0)
 ;;D^BOOLEAN
"RTN","ORY28002",291,0)
 ;;R^"863.9:",.03,"E"
"RTN","ORY28002",292,0)
 ;;D^GCC BOOLEAN LOGICAL FALSE
"RTN","ORY28002",293,0)
 ;;R^"863.9:",.04,"E"
"RTN","ORY28002",294,0)
 ;;D^IS FALSE
"RTN","ORY28002",295,0)
 ;;R^"863.9:","863.91:1",.01,"E"
"RTN","ORY28002",296,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY28002",297,0)
 ;;R^"863.9:","863.91:1",1,"E"
"RTN","ORY28002",298,0)
 ;;D^GCC BOOLEAN LOGICAL FALSE
"RTN","ORY28002",299,0)
 ;;R^"863.9:","863.92:1",.01,"E"
"RTN","ORY28002",300,0)
 ;;D^FALSE
"RTN","ORY28002",301,0)
 ;;EOR^
"RTN","ORY28002",302,0)
 ;;KEY^863.9:^STARTS WITH
"RTN","ORY28002",303,0)
 ;;R^"863.9:",.01,"E"
"RTN","ORY28002",304,0)
 ;;D^STARTS WITH
"RTN","ORY28002",305,0)
 ;;R^"863.9:",.02,"E"
"RTN","ORY28002",306,0)
 ;;D^FREE TEXT
"RTN","ORY28002",307,0)
 ;;R^"863.9:",.04,"E"
"RTN","ORY28002",308,0)
 ;;D^STARTS WITH
"RTN","ORY28002",309,0)
 ;;R^"863.9:","863.91:3",.01,"E"
"RTN","ORY28002",310,0)
 ;;D^OCXO GENERATE CODE FUNCTION
"RTN","ORY28002",311,0)
 ;;R^"863.9:","863.91:3",1,"E"
"RTN","ORY28002",312,0)
 ;;D^GCC FREE TEXT STARTS WITH
"RTN","ORY28002",313,0)
 ;;R^"863.9:","863.92:1",.01,"E"
"RTN","ORY28002",314,0)
 ;;D^BEGINS WITH
"RTN","ORY28002",315,0)
 ;;EOR^
"RTN","ORY28002",316,0)
 ;;EOF^OCXS(863.9)^1
"RTN","ORY28002",317,0)
 ;;SOF^863.4  OCX MDD ATTRIBUTE
"RTN","ORY28002",318,0)
 ;;KEY^863.4:^ALLERGY ASSESSMENT
"RTN","ORY28002",319,0)
 ;1;
"RTN","ORY28002",320,0)
 ;
"RTN","ORY28003")
0^77^B89106334
"RTN","ORY28003",1,0)
ORY28003 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY28003",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY28003",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY28003",4,0)
 ;
"RTN","ORY28003",5,0)
S ;
"RTN","ORY28003",6,0)
 ;
"RTN","ORY28003",7,0)
 D DOT^ORY280ES
"RTN","ORY28003",8,0)
 ;
"RTN","ORY28003",9,0)
 ;
"RTN","ORY28003",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY28003",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY28003",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY28003",13,0)
 ;
"RTN","ORY28003",14,0)
 G ^ORY28004
"RTN","ORY28003",15,0)
 ;
"RTN","ORY28003",16,0)
 Q
"RTN","ORY28003",17,0)
 ;
"RTN","ORY28003",18,0)
DATA ;
"RTN","ORY28003",19,0)
 ;
"RTN","ORY28003",20,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY28003",21,0)
 ;;D^ALLERGY ASSESSMENT
"RTN","ORY28003",22,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY28003",23,0)
 ;;D^DATA TYPE
"RTN","ORY28003",24,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY28003",25,0)
 ;;D^BOOLEAN
"RTN","ORY28003",26,0)
 ;;EOR^
"RTN","ORY28003",27,0)
 ;;KEY^863.4:^FILLER
"RTN","ORY28003",28,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY28003",29,0)
 ;;D^FILLER
"RTN","ORY28003",30,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY28003",31,0)
 ;;D^DATA TYPE
"RTN","ORY28003",32,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY28003",33,0)
 ;;D^FREE TEXT
"RTN","ORY28003",34,0)
 ;;EOR^
"RTN","ORY28003",35,0)
 ;;KEY^863.4:^HL7 FILLER
"RTN","ORY28003",36,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY28003",37,0)
 ;;D^HL7 FILLER
"RTN","ORY28003",38,0)
 ;;R^"863.4:",.02,"E"
"RTN","ORY28003",39,0)
 ;;D^HL7FILLR
"RTN","ORY28003",40,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY28003",41,0)
 ;;D^DATA TYPE
"RTN","ORY28003",42,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY28003",43,0)
 ;;D^FREE TEXT
"RTN","ORY28003",44,0)
 ;;EOR^
"RTN","ORY28003",45,0)
 ;;KEY^863.4:^IEN
"RTN","ORY28003",46,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY28003",47,0)
 ;;D^IEN
"RTN","ORY28003",48,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY28003",49,0)
 ;;D^DATA TYPE
"RTN","ORY28003",50,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY28003",51,0)
 ;;D^NUMERIC
"RTN","ORY28003",52,0)
 ;;EOR^
"RTN","ORY28003",53,0)
 ;;KEY^863.4:^ORDER MODE
"RTN","ORY28003",54,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY28003",55,0)
 ;;D^ORDER MODE
"RTN","ORY28003",56,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY28003",57,0)
 ;;D^DATA TYPE
"RTN","ORY28003",58,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY28003",59,0)
 ;;D^FREE TEXT
"RTN","ORY28003",60,0)
 ;;EOR^
"RTN","ORY28003",61,0)
 ;;KEY^863.4:^ORDER PATIENT
"RTN","ORY28003",62,0)
 ;;R^"863.4:",.01,"E"
"RTN","ORY28003",63,0)
 ;;D^ORDER PATIENT
"RTN","ORY28003",64,0)
 ;;R^"863.4:","863.41:1",.01,"E"
"RTN","ORY28003",65,0)
 ;;D^DATA TYPE
"RTN","ORY28003",66,0)
 ;;R^"863.4:","863.41:1",1,"E"
"RTN","ORY28003",67,0)
 ;;D^NUMERIC
"RTN","ORY28003",68,0)
 ;;EOR^
"RTN","ORY28003",69,0)
 ;;EOF^OCXS(863.4)^1
"RTN","ORY28003",70,0)
 ;;SOF^863.2  OCX MDD SUBJECT
"RTN","ORY28003",71,0)
 ;;KEY^863.2:^PATIENT
"RTN","ORY28003",72,0)
 ;;R^"863.2:",.01,"E"
"RTN","ORY28003",73,0)
 ;;D^PATIENT
"RTN","ORY28003",74,0)
 ;;R^"863.2:","863.21:1",.01,"E"
"RTN","ORY28003",75,0)
 ;;D^FILE
"RTN","ORY28003",76,0)
 ;;R^"863.2:","863.21:1",1,"E"
"RTN","ORY28003",77,0)
 ;;D^2
"RTN","ORY28003",78,0)
 ;;EOR^
"RTN","ORY28003",79,0)
 ;;EOF^OCXS(863.2)^1
"RTN","ORY28003",80,0)
 ;;SOF^863.3  OCX MDD LINK
"RTN","ORY28003",81,0)
 ;;KEY^863.3:^PATIENT.ALLERGY ASSESSMENT
"RTN","ORY28003",82,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY28003",83,0)
 ;;D^PATIENT.ALLERGY ASSESSMENT
"RTN","ORY28003",84,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY28003",85,0)
 ;;D^PATIENT
"RTN","ORY28003",86,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY28003",87,0)
 ;;D^ALLERGY ASSESSMENT
"RTN","ORY28003",88,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY28003",89,0)
 ;;D^2344
"RTN","ORY28003",90,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY28003",91,0)
 ;;D^OCXO EXTERNAL FUNCTION CALL
"RTN","ORY28003",92,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY28003",93,0)
 ;;D^ALRGY(|PATIENT IEN|)
"RTN","ORY28003",94,0)
 ;;EOR^
"RTN","ORY28003",95,0)
 ;;KEY^863.3:^PATIENT.HL7_FILLER
"RTN","ORY28003",96,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY28003",97,0)
 ;;D^PATIENT.HL7_FILLER
"RTN","ORY28003",98,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY28003",99,0)
 ;;D^PATIENT
"RTN","ORY28003",100,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY28003",101,0)
 ;;D^HL7
"RTN","ORY28003",102,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY28003",103,0)
 ;;D^HL7 FILLER
"RTN","ORY28003",104,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY28003",105,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY28003",106,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY28003",107,0)
 ;;D^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY28003",108,0)
 ;;R^"863.3:","863.32:2",1,"E"
"RTN","ORY28003",109,0)
 ;;D^2
"RTN","ORY28003",110,0)
 ;;R^"863.3:","863.32:3",.01,"E"
"RTN","ORY28003",111,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY28003",112,0)
 ;;R^"863.3:","863.32:3",1,"E"
"RTN","ORY28003",113,0)
 ;;D^OCXODATA("ORC",3)
"RTN","ORY28003",114,0)
 ;;R^"863.3:","863.32:4",.01,"E"
"RTN","ORY28003",115,0)
 ;;D^OCXO HL7 SEGMENT ID
"RTN","ORY28003",116,0)
 ;;R^"863.3:","863.32:5",.01,"E"
"RTN","ORY28003",117,0)
 ;;D^OCXO DATA DRIVE SOURCE
"RTN","ORY28003",118,0)
 ;;R^"863.3:","863.32:5",1,"E"
"RTN","ORY28003",119,0)
 ;;D^HL7
"RTN","ORY28003",120,0)
 ;;R^"863.3:","863.32:6",.01,"E"
"RTN","ORY28003",121,0)
 ;;D^OCXO FILE POINTER
"RTN","ORY28003",122,0)
 ;;EOR^
"RTN","ORY28003",123,0)
 ;;KEY^863.3:^PATIENT.HL7_PATIENT_ID
"RTN","ORY28003",124,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY28003",125,0)
 ;;D^PATIENT.HL7_PATIENT_ID
"RTN","ORY28003",126,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY28003",127,0)
 ;;D^PATIENT
"RTN","ORY28003",128,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY28003",129,0)
 ;;D^HL7
"RTN","ORY28003",130,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY28003",131,0)
 ;;D^IEN
"RTN","ORY28003",132,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY28003",133,0)
 ;;D^99
"RTN","ORY28003",134,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY28003",135,0)
 ;;D^OCXO HL7 SEGMENT ID
"RTN","ORY28003",136,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY28003",137,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY28003",138,0)
 ;;R^"863.3:","863.32:3",.01,"E"
"RTN","ORY28003",139,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY28003",140,0)
 ;;R^"863.3:","863.32:3",1,"E"
"RTN","ORY28003",141,0)
 ;;D^OCXODATA("PID",3)
"RTN","ORY28003",142,0)
 ;;EOR^
"RTN","ORY28003",143,0)
 ;;KEY^863.3:^PATIENT.IEN
"RTN","ORY28003",144,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY28003",145,0)
 ;;D^PATIENT.IEN
"RTN","ORY28003",146,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY28003",147,0)
 ;;D^PATIENT
"RTN","ORY28003",148,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY28003",149,0)
 ;;D^IEN
"RTN","ORY28003",150,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY28003",151,0)
 ;;D^99
"RTN","ORY28003",152,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY28003",153,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY28003",154,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY28003",155,0)
 ;;D^DFN
"RTN","ORY28003",156,0)
 ;;EOR^
"RTN","ORY28003",157,0)
 ;;KEY^863.3:^PATIENT.OERR_ORDER_PATIENT
"RTN","ORY28003",158,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY28003",159,0)
 ;;D^PATIENT.OERR_ORDER_PATIENT
"RTN","ORY28003",160,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY28003",161,0)
 ;;D^PATIENT
"RTN","ORY28003",162,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY28003",163,0)
 ;;D^ORDER PATIENT
"RTN","ORY28003",164,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY28003",165,0)
 ;;D^5567
"RTN","ORY28003",166,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY28003",167,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY28003",168,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY28003",169,0)
 ;;D^OCXORD
"RTN","ORY28003",170,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY28003",171,0)
 ;;D^OCXO UP-ARROW PIECE NUMBER
"RTN","ORY28003",172,0)
 ;;R^"863.3:","863.32:2",1,"E"
"RTN","ORY28003",173,0)
 ;;D^1
"RTN","ORY28003",174,0)
 ;;EOR^
"RTN","ORY28003",175,0)
 ;;KEY^863.3:^PATIENT.OPS_FILLER
"RTN","ORY28003",176,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY28003",177,0)
 ;;D^PATIENT.OPS_FILLER
"RTN","ORY28003",178,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY28003",179,0)
 ;;D^PATIENT
"RTN","ORY28003",180,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY28003",181,0)
 ;;D^OPS
"RTN","ORY28003",182,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY28003",183,0)
 ;;D^FILLER
"RTN","ORY28003",184,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY28003",185,0)
 ;;D^99
"RTN","ORY28003",186,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY28003",187,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY28003",188,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY28003",189,0)
 ;;D^OCXPSD
"RTN","ORY28003",190,0)
 ;;R^"863.3:","863.32:2",.01,"E"
"RTN","ORY28003",191,0)
 ;;D^OCXO VT-BAR PIECE NUMBER
"RTN","ORY28003",192,0)
 ;;R^"863.3:","863.32:2",1,"E"
"RTN","ORY28003",193,0)
 ;;D^1
"RTN","ORY28003",194,0)
 ;;EOR^
"RTN","ORY28003",195,0)
 ;;KEY^863.3:^PATIENT.OPS_ORD_MODE
"RTN","ORY28003",196,0)
 ;;R^"863.3:",.01,"E"
"RTN","ORY28003",197,0)
 ;;D^PATIENT.OPS_ORD_MODE
"RTN","ORY28003",198,0)
 ;;R^"863.3:",.02,"E"
"RTN","ORY28003",199,0)
 ;;D^PATIENT
"RTN","ORY28003",200,0)
 ;;R^"863.3:",.04,"E"
"RTN","ORY28003",201,0)
 ;;D^OPS
"RTN","ORY28003",202,0)
 ;;R^"863.3:",.05,"E"
"RTN","ORY28003",203,0)
 ;;D^ORDER MODE
"RTN","ORY28003",204,0)
 ;;R^"863.3:",.06,"E"
"RTN","ORY28003",205,0)
 ;;D^99
"RTN","ORY28003",206,0)
 ;;R^"863.3:","863.32:1",.01,"E"
"RTN","ORY28003",207,0)
 ;;D^OCXO VARIABLE NAME
"RTN","ORY28003",208,0)
 ;;R^"863.3:","863.32:1",1,"E"
"RTN","ORY28003",209,0)
 ;;D^OCXPSM
"RTN","ORY28003",210,0)
 ;;EOR^
"RTN","ORY28003",211,0)
 ;;EOF^OCXS(863.3)^1
"RTN","ORY28003",212,0)
 ;;SOF^860.9  ORDER CHECK NATIONAL TERM
"RTN","ORY28003",213,0)
 ;;KEY^860.9:^ANGIOGRAM (PERIPHERAL)
"RTN","ORY28003",214,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",215,0)
 ;;D^ANGIOGRAM (PERIPHERAL)
"RTN","ORY28003",216,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",217,0)
 ;;D^101.43
"RTN","ORY28003",218,0)
 ;;EOR^
"RTN","ORY28003",219,0)
 ;;KEY^860.9:^BLOOD SPECIMEN
"RTN","ORY28003",220,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",221,0)
 ;;D^BLOOD SPECIMEN
"RTN","ORY28003",222,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",223,0)
 ;;D^61
"RTN","ORY28003",224,0)
 ;;EOR^
"RTN","ORY28003",225,0)
 ;;KEY^860.9:^DANGEROUS MEDS FOR PTS > 64
"RTN","ORY28003",226,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",227,0)
 ;;D^DANGEROUS MEDS FOR PTS > 64
"RTN","ORY28003",228,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",229,0)
 ;;D^101.43
"RTN","ORY28003",230,0)
 ;;R^"860.9:",2,"E"
"RTN","ORY28003",231,0)
 ;;D^I $P($G(^ORD(100.98,$P($G(^ORD(101.43,+Y,0)),U,5),0)),U)="PHARMACY"
"RTN","ORY28003",232,0)
 ;;EOR^
"RTN","ORY28003",233,0)
 ;;KEY^860.9:^DNR
"RTN","ORY28003",234,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",235,0)
 ;;D^DNR
"RTN","ORY28003",236,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",237,0)
 ;;D^101.43
"RTN","ORY28003",238,0)
 ;;EOR^
"RTN","ORY28003",239,0)
 ;;KEY^860.9:^EGFR
"RTN","ORY28003",240,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",241,0)
 ;;D^EGFR
"RTN","ORY28003",242,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",243,0)
 ;;D^60
"RTN","ORY28003",244,0)
 ;;EOR^
"RTN","ORY28003",245,0)
 ;;KEY^860.9:^FOOD-DRUG INTERACTION MED
"RTN","ORY28003",246,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",247,0)
 ;;D^FOOD-DRUG INTERACTION MED
"RTN","ORY28003",248,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",249,0)
 ;;D^101.43
"RTN","ORY28003",250,0)
 ;;R^"860.9:",2,"E"
"RTN","ORY28003",251,0)
 ;;D^I $P($G(^ORD(100.98,$P($G(^ORD(101.43,+Y,0)),U,5),0)),U)="PHARMACY"
"RTN","ORY28003",252,0)
 ;;EOR^
"RTN","ORY28003",253,0)
 ;;KEY^860.9:^NPO
"RTN","ORY28003",254,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",255,0)
 ;;D^NPO
"RTN","ORY28003",256,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",257,0)
 ;;D^101.43
"RTN","ORY28003",258,0)
 ;;EOR^
"RTN","ORY28003",259,0)
 ;;KEY^860.9:^ONE TIME MED
"RTN","ORY28003",260,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",261,0)
 ;;D^ONE TIME MED
"RTN","ORY28003",262,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",263,0)
 ;;D^51.1
"RTN","ORY28003",264,0)
 ;;R^"860.9:",2,"E"
"RTN","ORY28003",265,0)
 ;;D^I $E($P(^(0),U,4),1,2)="PS"
"RTN","ORY28003",266,0)
 ;;EOR^
"RTN","ORY28003",267,0)
 ;;KEY^860.9:^PARTIAL THROMBOPLASTIN TIME
"RTN","ORY28003",268,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",269,0)
 ;;D^PARTIAL THROMBOPLASTIN TIME
"RTN","ORY28003",270,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",271,0)
 ;;D^101.43
"RTN","ORY28003",272,0)
 ;;EOR^
"RTN","ORY28003",273,0)
 ;;KEY^860.9:^PROTHROMBIN TIME
"RTN","ORY28003",274,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",275,0)
 ;;D^PROTHROMBIN TIME
"RTN","ORY28003",276,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",277,0)
 ;;D^101.43
"RTN","ORY28003",278,0)
 ;;EOR^
"RTN","ORY28003",279,0)
 ;;KEY^860.9:^SERUM CREATININE
"RTN","ORY28003",280,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",281,0)
 ;;D^SERUM CREATININE
"RTN","ORY28003",282,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",283,0)
 ;;D^60
"RTN","ORY28003",284,0)
 ;;EOR^
"RTN","ORY28003",285,0)
 ;;KEY^860.9:^SERUM SPECIMEN
"RTN","ORY28003",286,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",287,0)
 ;;D^SERUM SPECIMEN
"RTN","ORY28003",288,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",289,0)
 ;;D^61
"RTN","ORY28003",290,0)
 ;;EOR^
"RTN","ORY28003",291,0)
 ;;KEY^860.9:^SERUM UREA NITROGEN
"RTN","ORY28003",292,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",293,0)
 ;;D^SERUM UREA NITROGEN
"RTN","ORY28003",294,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",295,0)
 ;;D^60
"RTN","ORY28003",296,0)
 ;;EOR^
"RTN","ORY28003",297,0)
 ;;KEY^860.9:^THROMBOPLASTIN TIME PARTIAL
"RTN","ORY28003",298,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",299,0)
 ;;D^THROMBOPLASTIN TIME PARTIAL
"RTN","ORY28003",300,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",301,0)
 ;;D^60
"RTN","ORY28003",302,0)
 ;;EOR^
"RTN","ORY28003",303,0)
 ;;KEY^860.9:^WBC
"RTN","ORY28003",304,0)
 ;;R^"860.9:",.01,"E"
"RTN","ORY28003",305,0)
 ;;D^WBC
"RTN","ORY28003",306,0)
 ;;R^"860.9:",.02,"E"
"RTN","ORY28003",307,0)
 ;;D^60
"RTN","ORY28003",308,0)
 ;;EOR^
"RTN","ORY28003",309,0)
 ;;EOF^OCXS(860.9)^1
"RTN","ORY28003",310,0)
 ;;SOF^860.8  ORDER CHECK COMPILER FUNCTIONS
"RTN","ORY28003",311,0)
 ;;KEY^860.8:^ALLERGY ASSESSMENT
"RTN","ORY28003",312,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28003",313,0)
 ;;D^ALLERGY ASSESSMENT
"RTN","ORY28003",314,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28003",315,0)
 ;;D^ALRGY
"RTN","ORY28003",316,0)
 ;;R^"860.8:",1,1
"RTN","ORY28003",317,0)
 ;;D^This function checks to see if the patient has an allergy assessment on 
"RTN","ORY28003",318,0)
 ;;R^"860.8:",1,2
"RTN","ORY28003",319,0)
 ;;D^file. If not, a "0" (zero) is returned.  If the patient does have an
"RTN","ORY28003",320,0)
 ;;R^"860.8:",1,3
"RTN","ORY28003",321,0)
 ;;D^allergy assessment or no know allergies (NKA), a "1" (one) is returned.
"RTN","ORY28003",322,0)
 ;;R^"860.8:",100,1
"RTN","ORY28003",323,0)
 ;;D^   ;ALRGY(ORPT)   ; determine if pt has an allergy assessment
"RTN","ORY28003",324,0)
 ;;R^"860.8:",100,2
"RTN","ORY28003",325,0)
 ;;D^   ; ; rtn 0 if no allergy assessment, 1 if allergy assessment or NKA
"RTN","ORY28003",326,0)
 ;;R^"860.8:",100,3
"RTN","ORY28003",327,0)
 ;;D^   ; N ORALRGY
"RTN","ORY28003",328,0)
 ;;R^"860.8:",100,4
"RTN","ORY28003",329,0)
 ;;D^   ; D EN1^GMRAOR1(ORPT,"ORALRGY")
"RTN","ORY28003",330,0)
 ;;R^"860.8:",100,5
"RTN","ORY28003",331,0)
 ;;D^   ; Q:$G(ORALRGY)="" 0
"RTN","ORY28003",332,0)
 ;;R^"860.8:",100,6
"RTN","ORY28003",333,0)
 ;;D^   ; Q 1
"RTN","ORY28003",334,0)
 ;;R^"860.8:",100,7
"RTN","ORY28003",335,0)
 ;;D^   ; ;
"RTN","ORY28003",336,0)
 ;;EOR^
"RTN","ORY28003",337,0)
 ;;KEY^860.8:^CONVERT DATE FROM FILEMAN FORMAT TO OCX FORMAT
"RTN","ORY28003",338,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28003",339,0)
 ;;D^CONVERT DATE FROM FILEMAN FORMAT TO OCX FORMAT
"RTN","ORY28003",340,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28003",341,0)
 ;;D^DT2INT
"RTN","ORY28003",342,0)
 ;;R^"860.8:",1,1
"RTN","ORY28003",343,0)
 ;;D^  ;DT2INT(OCXDT) ;      This Local Extrinsic Function converts a date into an integer
"RTN","ORY28003",344,0)
 ;;R^"860.8:",1,2
"RTN","ORY28003",345,0)
 ;1;
"RTN","ORY28003",346,0)
 ;
"RTN","ORY28004")
0^78^B57739965
"RTN","ORY28004",1,0)
ORY28004 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY28004",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY28004",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY28004",4,0)
 ;
"RTN","ORY28004",5,0)
S ;
"RTN","ORY28004",6,0)
 ;
"RTN","ORY28004",7,0)
 D DOT^ORY280ES
"RTN","ORY28004",8,0)
 ;
"RTN","ORY28004",9,0)
 ;
"RTN","ORY28004",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY28004",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY28004",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY28004",13,0)
 ;
"RTN","ORY28004",14,0)
 G ^ORY28005
"RTN","ORY28004",15,0)
 ;
"RTN","ORY28004",16,0)
 Q
"RTN","ORY28004",17,0)
 ;
"RTN","ORY28004",18,0)
DATA ;
"RTN","ORY28004",19,0)
 ;
"RTN","ORY28004",20,0)
 ;;D^  ; ; By taking the Years, Months, Days, Hours and Minutes converting
"RTN","ORY28004",21,0)
 ;;R^"860.8:",1,3
"RTN","ORY28004",22,0)
 ;;D^  ; ; Them into Seconds and then adding them all together into one big integer
"RTN","ORY28004",23,0)
 ;;R^"860.8:",100,1
"RTN","ORY28004",24,0)
 ;;D^  ;DT2INT(OCXDT) ;      This Local Extrinsic Function converts a date into an integer
"RTN","ORY28004",25,0)
 ;;R^"860.8:",100,2
"RTN","ORY28004",26,0)
 ;;D^  ; ; By taking the Years, Months, Days, Hours and Minutes converting
"RTN","ORY28004",27,0)
 ;;R^"860.8:",100,3
"RTN","ORY28004",28,0)
 ;;D^  ; ; Them into Seconds and then adding them all together into one big integer
"RTN","ORY28004",29,0)
 ;;R^"860.8:",100,4
"RTN","ORY28004",30,0)
 ;;D^  ; ;
"RTN","ORY28004",31,0)
 ;;R^"860.8:",100,5
"RTN","ORY28004",32,0)
 ;;D^  ; Q:'$L($G(OCXDT)) ""
"RTN","ORY28004",33,0)
 ;;R^"860.8:",100,6
"RTN","ORY28004",34,0)
 ;;D^  ; N OCXDIFF,OCXVAL S (OCXDIFF,OCXVAL)=0
"RTN","ORY28004",35,0)
 ;;R^"860.8:",100,7
"RTN","ORY28004",36,0)
 ;;D^  ; ;
"RTN","ORY28004",37,0)
 ;;R^"860.8:",100,8
"RTN","ORY28004",38,0)
 ;;D^  ; I $L(OCXDT),'OCXDT,(OCXDT[" at ") D  ; EXTERNAL EXPERT SYSTEM FORMAT 1 TO EXTERNAL FORMAT
"RTN","ORY28004",39,0)
 ;;R^"860.8:",100,9
"RTN","ORY28004",40,0)
 ;;D^  ; .N OCXHR,OCXMIN,OCXTIME
"RTN","ORY28004",41,0)
 ;;R^"860.8:",100,10
"RTN","ORY28004",42,0)
 ;;D^  ; .S OCXTIME=$P($P(OCXDT," at ",2),".",1),OCXHR=$P(OCXTIME,":",1),OCXMIN=$P(OCXTIME,":",2)
"RTN","ORY28004",43,0)
 ;;R^"860.8:",100,11
"RTN","ORY28004",44,0)
 ;;D^  ; .S:(OCXDT["Midnight") OCXHR=00
"RTN","ORY28004",45,0)
 ;;R^"860.8:",100,12
"RTN","ORY28004",46,0)
 ;;D^  ; .S:(OCXDT["PM") OCXHR=OCXHR+12
"RTN","ORY28004",47,0)
 ;;R^"860.8:",100,13
"RTN","ORY28004",48,0)
 ;;D^  ; .S OCXDT=$P(OCXDT," at ")_"@"_$E(OCXHR+100,2,3)_$E(OCXMIN+100,2,3)
"RTN","ORY28004",49,0)
 ;;R^"860.8:",100,14
"RTN","ORY28004",50,0)
 ;;D^  ; ;
"RTN","ORY28004",51,0)
 ;;R^"860.8:",100,15
"RTN","ORY28004",52,0)
 ;;D^  ; I $L(OCXDT),(OCXDT?1.2N1"/"1.2N.1" ".2N.1":".2N) D  ; EXTERNAL EXPERT SYSTEM FORMAT 2 TO EXTERNAL FORMAT
"RTN","ORY28004",53,0)
 ;;R^"860.8:",100,16
"RTN","ORY28004",54,0)
 ;;D^  ; .N OCXMON
"RTN","ORY28004",55,0)
 ;;R^"860.8:",100,17
"RTN","ORY28004",56,0)
 ;;D^  ; .S OCXMON=$P("January^February^March^April^May^June^July^August^September^October^November^December",U,$P(OCXDT,"/",1))
"RTN","ORY28004",57,0)
 ;;R^"860.8:",100,18
"RTN","ORY28004",58,0)
 ;;D^  ; .I $L($P(OCXDT," ",2)) S OCXDT=OCXMON_" "_$P($P(OCXDT," ",1),"/",2)_"@"_$TR($P(OCXDT," ",2),":","")
"RTN","ORY28004",59,0)
 ;;R^"860.8:",100,19
"RTN","ORY28004",60,0)
 ;;D^  ; .E  S OCXDT=OCXMON_" "_$P($P(OCXDT," ",1),"/",2)
"RTN","ORY28004",61,0)
 ;;R^"860.8:",100,20
"RTN","ORY28004",62,0)
 ;;D^  ; ;
"RTN","ORY28004",63,0)
 ;;R^"860.8:",100,21
"RTN","ORY28004",64,0)
 ;;D^  ; I $L(OCXDT),(OCXDT?1.2N1"/"1.2N1"/"1.2N.1" ".2N.1":".2N) D  ; EXTERNAL EXPERT SYSTEM FORMAT 3 TO EXTERNAL FORMAT
"RTN","ORY28004",65,0)
 ;;R^"860.8:",100,22
"RTN","ORY28004",66,0)
 ;;D^  ; .N OCXMON
"RTN","ORY28004",67,0)
 ;;R^"860.8:",100,23
"RTN","ORY28004",68,0)
 ;;D^  ; .S OCXMON=$P("January^February^March^April^May^June^July^August^September^October^November^December",U,$P(OCXDT,"/",1))
"RTN","ORY28004",69,0)
 ;;R^"860.8:",100,24
"RTN","ORY28004",70,0)
 ;;D^  ; .I $L($P(OCXDT," ",2)) S OCXDT=OCXMON_" "_$P($P(OCXDT," ",1),"/",2)_","_$P($P(OCXDT," ",1),"/",3)_"@"_$TR($P(OCXDT," ",2),":","")
"RTN","ORY28004",71,0)
 ;;R^"860.8:",100,25
"RTN","ORY28004",72,0)
 ;;D^  ; .E  S OCXDT=OCXMON_" "_$P($P(OCXDT," ",1),"/",2)_", "_$P($P(OCXDT," ",1),"/",3)
"RTN","ORY28004",73,0)
 ;;R^"860.8:",100,26
"RTN","ORY28004",74,0)
 ;;D^  ; ;
"RTN","ORY28004",75,0)
 ;;R^"860.8:",100,27
"RTN","ORY28004",76,0)
 ;;D^  ; I $L(OCXDT),'OCXDT D  ; EXTERNAL FORMAT TO INTERNAL FILEMAN FORMAT
"RTN","ORY28004",77,0)
 ;;R^"860.8:",100,28
"RTN","ORY28004",78,0)
 ;;D^  ; .I (OCXDT["@0000") S OCXDT=$P(OCXDT,"@",1),OCXDIFF=1
"RTN","ORY28004",79,0)
 ;;R^"860.8:",100,29
"RTN","ORY28004",80,0)
 ;;D^  ; .N %DT,X,Y S X=OCXDT,%DT="" S:(OCXDT["@")!(OCXDT="N") %DT="T" D ^%DT S OCXDT=+Y
"RTN","ORY28004",81,0)
 ;;R^"860.8:",100,30
"RTN","ORY28004",82,0)
 ;;D^  ; ;
"RTN","ORY28004",83,0)
 ;;R^"860.8:",100,31
"RTN","ORY28004",84,0)
 ;;D^  ; I ($L(OCXDT\1)>7) S OCXDT=$$HL7TFM^XLFDT(OCXDT)  ; HL7 FORMAT TO INTERNAL FILEMAN FORMAT
"RTN","ORY28004",85,0)
 ;;R^"860.8:",100,32
"RTN","ORY28004",86,0)
 ;;D^  ; ;
"RTN","ORY28004",87,0)
 ;;R^"860.8:",100,33
"RTN","ORY28004",88,0)
 ;;D^  ; I ($L(OCXDT\1)=7) S OCXDT=$$FMTH^XLFDT(+OCXDT)   ; INTERNAL FILEMAN FORMAT TO $H FORMAT
"RTN","ORY28004",89,0)
 ;;R^"860.8:",100,34
"RTN","ORY28004",90,0)
 ;;D^  ; ;
"RTN","ORY28004",91,0)
 ;;R^"860.8:",100,35
"RTN","ORY28004",92,0)
 ;;D^  ; I (OCXDT?5N1","1.5N) S OCXVAL=(OCXDT*86400)+$P(OCXDT,",",2)     ;  $H FORMAT TO EXPERT SYSTEM INTERNAL FORMAT
"RTN","ORY28004",93,0)
 ;;R^"860.8:",100,36
"RTN","ORY28004",94,0)
 ;;D^  ; ;
"RTN","ORY28004",95,0)
 ;;R^"860.8:",100,37
"RTN","ORY28004",96,0)
 ;;D^  ; Q OCXVAL
"RTN","ORY28004",97,0)
 ;;R^"860.8:",100,38
"RTN","ORY28004",98,0)
 ;;D^  ; ;
"RTN","ORY28004",99,0)
 ;;EOR^
"RTN","ORY28004",100,0)
 ;;KEY^860.8:^CONVERT DATE FROM OCX FORMAT TO READABLE FORMAT
"RTN","ORY28004",101,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28004",102,0)
 ;;D^CONVERT DATE FROM OCX FORMAT TO READABLE FORMAT
"RTN","ORY28004",103,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28004",104,0)
 ;;D^INT2DT
"RTN","ORY28004",105,0)
 ;;R^"860.8:",1,1
"RTN","ORY28004",106,0)
 ;;D^  ;INT2DT(OCXDT,OCXF) ;      This Local Extrinsic Function converts an OCX internal format
"RTN","ORY28004",107,0)
 ;;R^"860.8:",1,2
"RTN","ORY28004",108,0)
 ;;D^  ; ; date into an Externl Format (Human Readable) date.   'OCXF=SHORT FORMAT OCXF=LONG FORMAT
"RTN","ORY28004",109,0)
 ;;R^"860.8:",1,3
"RTN","ORY28004",110,0)
 ;;D^  ; ;
"RTN","ORY28004",111,0)
 ;;R^"860.8:",100,1
"RTN","ORY28004",112,0)
 ;;D^  ;INT2DT(OCXDT,OCXF) ;      This Local Extrinsic Function converts an OCX internal format
"RTN","ORY28004",113,0)
 ;;R^"860.8:",100,2
"RTN","ORY28004",114,0)
 ;;D^  ; ; date into an Externl Format (Human Readable) date.   'OCXF=SHORT FORMAT OCXF=LONG FORMAT
"RTN","ORY28004",115,0)
 ;;R^"860.8:",100,3
"RTN","ORY28004",116,0)
 ;;D^  ; ;
"RTN","ORY28004",117,0)
 ;;R^"860.8:",100,4
"RTN","ORY28004",118,0)
 ;;D^  ; Q:'$L($G(OCXDT)) "" S OCXF=+$G(OCXF)
"RTN","ORY28004",119,0)
 ;;R^"860.8:",100,5
"RTN","ORY28004",120,0)
 ;;D^  ; N OCXYR,OCXLPYR,OCXMON,OCXDAY,OCXHR,OCXMIN,OCXSEC,OCXCYR
"RTN","ORY28004",121,0)
 ;;R^"860.8:",100,6
"RTN","ORY28004",122,0)
 ;;D^  ; S (OCXYR,OCXLPYR,OCXMON,OCXDAY,OCXHR,OCXMIN,OCXSEC,OCXAP)=""
"RTN","ORY28004",123,0)
 ;;R^"860.8:",100,7
"RTN","ORY28004",124,0)
 ;;D^  ; S OCXSEC=$E(OCXDT#60+100,2,3),OCXDT=OCXDT\60
"RTN","ORY28004",125,0)
 ;;R^"860.8:",100,8
"RTN","ORY28004",126,0)
 ;;D^  ; S OCXMIN=$E(OCXDT#60+100,2,3),OCXDT=OCXDT\60
"RTN","ORY28004",127,0)
 ;;R^"860.8:",100,9
"RTN","ORY28004",128,0)
 ;;D^  ; S OCXHR=$E(OCXDT#24+100,2,3),OCXDT=OCXDT\24
"RTN","ORY28004",129,0)
 ;;R^"860.8:",100,10
"RTN","ORY28004",130,0)
 ;;D^  ; S OCXCYR=($H\1461)*4+1841+(($H#1461)\365)
"RTN","ORY28004",131,0)
 ;;R^"860.8:",100,11
"RTN","ORY28004",132,0)
 ;;D^  ; S OCXYR=(OCXDT\1461)*4+1841,OCXDT=OCXDT#1461
"RTN","ORY28004",133,0)
 ;;R^"860.8:",100,12
"RTN","ORY28004",134,0)
 ;;D^  ; S OCXLPYR=(OCXDT\365),OCXDT=OCXDT-(OCXLPYR*365),OCXYR=OCXYR+OCXLPYR
"RTN","ORY28004",135,0)
 ;;R^"860.8:",100,13
"RTN","ORY28004",136,0)
 ;;D^  ; S OCXCNT="031^059^090^120^151^181^212^243^273^304^334^365"
"RTN","ORY28004",137,0)
 ;;R^"860.8:",100,14
"RTN","ORY28004",138,0)
 ;;D^  ; S:(OCXLPYR=3) OCXCNT="031^060^091^121^152^182^213^244^274^305^335^366"
"RTN","ORY28004",139,0)
 ;;R^"860.8:",100,15
"RTN","ORY28004",140,0)
 ;;D^  ; F OCXMON=1:1:12 Q:(OCXDT<$P(OCXCNT,U,OCXMON))
"RTN","ORY28004",141,0)
 ;;R^"860.8:",100,16
"RTN","ORY28004",142,0)
 ;;D^  ; S OCXDAY=OCXDT-$P(OCXCNT,U,OCXMON-1)+1
"RTN","ORY28004",143,0)
 ;;R^"860.8:",100,17
"RTN","ORY28004",144,0)
 ;;D^  ; I OCXF S OCXMON=$P("January^February^March^April^May^June^July^August^September^October^November^December",U,OCXMON)
"RTN","ORY28004",145,0)
 ;;R^"860.8:",100,18
"RTN","ORY28004",146,0)
 ;;D^  ; E  S OCXMON=$E(OCXMON+100,2,3)
"RTN","ORY28004",147,0)
 ;;R^"860.8:",100,19
"RTN","ORY28004",148,0)
 ;;D^  ; S OCXAP=$S('OCXHR:"Midnight",(OCXHR=12):"Noon",(OCXHR<12):"AM",1:"PM")
"RTN","ORY28004",149,0)
 ;;R^"860.8:",100,20
"RTN","ORY28004",150,0)
 ;;D^  ; I OCXF S OCXHR=OCXHR#12 S:'OCXHR OCXHR=12
"RTN","ORY28004",151,0)
 ;;R^"860.8:",100,21
"RTN","ORY28004",152,0)
 ;;D^  ; Q:'OCXF $E(OCXMON+100,2,3)_"/"_$E(OCXDAY+100,2,3)_$S((OCXCYR=OCXYR):" "_OCXHR_":"_OCXMIN,1:"/"_$E(OCXYR,3,4))
"RTN","ORY28004",153,0)
 ;;R^"860.8:",100,22
"RTN","ORY28004",154,0)
 ;;D^  ; Q:(OCXHR+OCXMIN+OCXSEC) OCXMON_" "_OCXDAY_","_OCXYR_" at "_OCXHR_":"_OCXMIN_"."_OCXSEC_" "_OCXAP
"RTN","ORY28004",155,0)
 ;;R^"860.8:",100,23
"RTN","ORY28004",156,0)
 ;;D^  ; Q OCXMON_" "_OCXDAY_","_OCXYR
"RTN","ORY28004",157,0)
 ;;R^"860.8:",100,24
"RTN","ORY28004",158,0)
 ;;D^  ; ;
"RTN","ORY28004",159,0)
 ;;EOR^
"RTN","ORY28004",160,0)
 ;;KEY^860.8:^ELAPSED ORDER CHECK TIME LOGGER
"RTN","ORY28004",161,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28004",162,0)
 ;;D^ELAPSED ORDER CHECK TIME LOGGER
"RTN","ORY28004",163,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28004",164,0)
 ;;D^TIMELOG
"RTN","ORY28004",165,0)
 ;;R^"860.8:",100,1
"RTN","ORY28004",166,0)
 ;;D^  ;TIMELOG(OCXMODE,OCXCALL) ; Log an entry in the Elapsed time log.
"RTN","ORY28004",167,0)
 ;;R^"860.8:",100,2
"RTN","ORY28004",168,0)
 ;;D^  ; ;
"RTN","ORY28004",169,0)
 ;;R^"860.8:",100,3
"RTN","ORY28004",170,0)
 ;;D^  ; ;
"RTN","ORY28004",171,0)
 ;;R^"860.8:",100,4
"RTN","ORY28004",172,0)
 ;;D^  ; Q 0
"RTN","ORY28004",173,0)
 ;;R^"860.8:",100,5
"RTN","ORY28004",174,0)
 ;;D^  ; ;
"RTN","ORY28004",175,0)
 ;;EOR^
"RTN","ORY28004",176,0)
 ;;KEY^860.8:^EQUALS TERM OPERATOR
"RTN","ORY28004",177,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28004",178,0)
 ;;D^EQUALS TERM OPERATOR
"RTN","ORY28004",179,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28004",180,0)
 ;;D^EQTERM
"RTN","ORY28004",181,0)
 ;;R^"860.8:",100,1
"RTN","ORY28004",182,0)
 ;;D^  ;EQTERM(DATA,TERM) ;
"RTN","ORY28004",183,0)
 ;;R^"860.8:",100,2
"RTN","ORY28004",184,0)
 ;;D^  ; ;
"RTN","ORY28004",185,0)
 ;;R^"860.8:",100,3
"RTN","ORY28004",186,0)
 ;;D^T+; I $G(OCXTRACE) W !,"%%%%",?20," Execution trace  DATA: ",$G(DATA),"   TERM: ",$G(TERM)
"RTN","ORY28004",187,0)
 ;;R^"860.8:",100,4
"RTN","ORY28004",188,0)
 ;;D^  ; N OCXF,OCXL
"RTN","ORY28004",189,0)
 ;;R^"860.8:",100,5
"RTN","ORY28004",190,0)
 ;;D^  ; ;
"RTN","ORY28004",191,0)
 ;;R^"860.8:",100,6
"RTN","ORY28004",192,0)
 ;;D^  ; S OCXL="",OCXF=$$TERMLKUP(TERM,.OCXL)
"RTN","ORY28004",193,0)
 ;;R^"860.8:",100,7
"RTN","ORY28004",194,0)
 ;;D^T-; Q:'OCXF 0
"RTN","ORY28004",195,0)
 ;;R^"860.8:",100,8
"RTN","ORY28004",196,0)
 ;;D^T+; I 'OCXF W:$G(OCXTRACE) !,"%%%%",?20," Term '",TERM,"' not in Order Check National Term File" Q 0
"RTN","ORY28004",197,0)
 ;1;
"RTN","ORY28004",198,0)
 ;
"RTN","ORY28005")
0^79^B65374324
"RTN","ORY28005",1,0)
ORY28005 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY28005",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY28005",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY28005",4,0)
 ;
"RTN","ORY28005",5,0)
S ;
"RTN","ORY28005",6,0)
 ;
"RTN","ORY28005",7,0)
 D DOT^ORY280ES
"RTN","ORY28005",8,0)
 ;
"RTN","ORY28005",9,0)
 ;
"RTN","ORY28005",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY28005",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY28005",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY28005",13,0)
 ;
"RTN","ORY28005",14,0)
 G ^ORY28006
"RTN","ORY28005",15,0)
 ;
"RTN","ORY28005",16,0)
 Q
"RTN","ORY28005",17,0)
 ;
"RTN","ORY28005",18,0)
DATA ;
"RTN","ORY28005",19,0)
 ;
"RTN","ORY28005",20,0)
 ;;R^"860.8:",100,9
"RTN","ORY28005",21,0)
 ;;D^T+; I '$O(OCXL(0)) W:$G(OCXTRACE) !,"%%%%",?20," There are no local terms listed for the National Term '",TERM,"'." Q 0
"RTN","ORY28005",22,0)
 ;;R^"860.8:",100,10
"RTN","ORY28005",23,0)
 ;;D^T+; I ($D(OCXL(DATA))!$D(OCXL("B",DATA))) W:$G(OCXTRACE) !,"%%%%",?20," Data equals Term" Q 1
"RTN","ORY28005",24,0)
 ;;R^"860.8:",100,11
"RTN","ORY28005",25,0)
 ;;D^T-; I ($D(OCXL(DATA))!$D(OCXL("B",DATA))) Q 1
"RTN","ORY28005",26,0)
 ;;R^"860.8:",100,12
"RTN","ORY28005",27,0)
 ;;D^T-; Q 0
"RTN","ORY28005",28,0)
 ;;R^"860.8:",100,13
"RTN","ORY28005",29,0)
 ;;D^T+; W:$G(OCXTRACE) !,"%%%%",?20," Data does not equal Term" Q 0
"RTN","ORY28005",30,0)
 ;;R^"860.8:",100,14
"RTN","ORY28005",31,0)
 ;;D^  ; ;
"RTN","ORY28005",32,0)
 ;;EOR^
"RTN","ORY28005",33,0)
 ;;KEY^860.8:^FILE DATA IN PATIENT ACTIVE DATA FILE
"RTN","ORY28005",34,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28005",35,0)
 ;;D^FILE DATA IN PATIENT ACTIVE DATA FILE
"RTN","ORY28005",36,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28005",37,0)
 ;;D^FILE
"RTN","ORY28005",38,0)
 ;;R^"860.8:",1,1
"RTN","ORY28005",39,0)
 ;;D^  ;FILE(DFN,OCXELE,OCXDFL) ;     This Local Extrinsic Function files data
"RTN","ORY28005",40,0)
 ;;R^"860.8:",1,2
"RTN","ORY28005",41,0)
 ;;D^  ; ;     in the Order Check Patient Data File
"RTN","ORY28005",42,0)
 ;;R^"860.8:",1,3
"RTN","ORY28005",43,0)
 ;;D^  ; ;
"RTN","ORY28005",44,0)
 ;;R^"860.8:",100,1
"RTN","ORY28005",45,0)
 ;;D^  ;FILE(DFN,OCXELE,OCXDFL) ;     This Local Extrinsic Function logs a validated event/element.
"RTN","ORY28005",46,0)
 ;;R^"860.8:",100,2
"RTN","ORY28005",47,0)
 ;;D^  ; ;
"RTN","ORY28005",48,0)
 ;;R^"860.8:",100,3
"RTN","ORY28005",49,0)
 ;;D^T+; I $G(OCXTRACE) W !,"%%%%",?20," Execution trace  DFN: ",DFN,"   OCXELE: ",+$G(OCXELE),"   OCXDFL: ",$G(OCXDFL)
"RTN","ORY28005",50,0)
 ;;R^"860.8:",100,4
"RTN","ORY28005",51,0)
 ;;D^  ; N OCXTIMN,OCXTIML,OCXTIMT1,OCXTIMT2,OCXDATA,OCXPC,OCXPC,OCXVAL,OCXSUB,OCXDFI
"RTN","ORY28005",52,0)
 ;;R^"860.8:",100,5
"RTN","ORY28005",53,0)
 ;;D^  ; S DFN=+$G(DFN),OCXELE=+$G(OCXELE)
"RTN","ORY28005",54,0)
 ;;R^"860.8:",100,6
"RTN","ORY28005",55,0)
 ;;D^  ; ;
"RTN","ORY28005",56,0)
 ;;R^"860.8:",100,7
"RTN","ORY28005",57,0)
 ;;D^  ; Q:'DFN 1 Q:'OCXELE 1 K OCXDATA
"RTN","ORY28005",58,0)
 ;;R^"860.8:",100,8
"RTN","ORY28005",59,0)
 ;;D^  ; ;
"RTN","ORY28005",60,0)
 ;;R^"860.8:",100,9
"RTN","ORY28005",61,0)
 ;;D^  ; S OCXDATA(DFN,OCXELE)=1
"RTN","ORY28005",62,0)
 ;;R^"860.8:",100,10
"RTN","ORY28005",63,0)
 ;;D^  ; F OCXPC=1:1:$L(OCXDFL,",") S OCXDFI=$P(OCXDFL,",",OCXPC) I OCXDFI D
"RTN","ORY28005",64,0)
 ;;R^"860.8:",100,11
"RTN","ORY28005",65,0)
 ;;D^  ; .S OCXVAL=$G(OCXDF(+OCXDFI)),OCXDATA(DFN,OCXELE,+OCXDFI)=OCXVAL
"RTN","ORY28005",66,0)
 ;;R^"860.8:",100,12
"RTN","ORY28005",67,0)
 ;;D^T+; .I $G(OCXTRACE) W !,"%%%%",?20,"   ",$P($G(^OCXS(860.4,+OCXDFI,0)),U,1)," = """,OCXVAL,""""
"RTN","ORY28005",68,0)
 ;;R^"860.8:",100,13
"RTN","ORY28005",69,0)
 ;;D^  ; ;
"RTN","ORY28005",70,0)
 ;;R^"860.8:",100,14
"RTN","ORY28005",71,0)
 ;;D^  ; M ^TMP("OCXCHK",$J,DFN)=OCXDATA(DFN)
"RTN","ORY28005",72,0)
 ;;R^"860.8:",100,15
"RTN","ORY28005",73,0)
 ;;D^  ; ;
"RTN","ORY28005",74,0)
 ;;R^"860.8:",100,16
"RTN","ORY28005",75,0)
 ;;D^  ; Q 0
"RTN","ORY28005",76,0)
 ;;R^"860.8:",100,17
"RTN","ORY28005",77,0)
 ;;D^  ; ;
"RTN","ORY28005",78,0)
 ;;EOR^
"RTN","ORY28005",79,0)
 ;;KEY^860.8:^GENERATE STRING CHECKSUM
"RTN","ORY28005",80,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28005",81,0)
 ;;D^GENERATE STRING CHECKSUM
"RTN","ORY28005",82,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28005",83,0)
 ;;D^CKSUM
"RTN","ORY28005",84,0)
 ;;R^"860.8:",100,1
"RTN","ORY28005",85,0)
 ;;D^  ;CKSUM(STR) ;
"RTN","ORY28005",86,0)
 ;;R^"860.8:",100,2
"RTN","ORY28005",87,0)
 ;;D^  ; ;
"RTN","ORY28005",88,0)
 ;;R^"860.8:",100,3
"RTN","ORY28005",89,0)
 ;;D^  ; N CKSUM,PTR,ASC S CKSUM=0
"RTN","ORY28005",90,0)
 ;;R^"860.8:",100,4
"RTN","ORY28005",91,0)
 ;;D^  ; S STR=$TR(STR,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ORY28005",92,0)
 ;;R^"860.8:",100,5
"RTN","ORY28005",93,0)
 ;;D^  ; F PTR=$L(STR):-1:1 S ASC=$A(STR,PTR)-42 I (ASC>0),(ASC<51) S CKSUM=CKSUM*2+ASC
"RTN","ORY28005",94,0)
 ;;R^"860.8:",100,6
"RTN","ORY28005",95,0)
 ;;D^  ; Q +CKSUM
"RTN","ORY28005",96,0)
 ;;R^"860.8:",100,7
"RTN","ORY28005",97,0)
 ;;D^  ; ;
"RTN","ORY28005",98,0)
 ;;EOR^
"RTN","ORY28005",99,0)
 ;;KEY^860.8:^GET DATA FROM THE ACTIVE DATA FILE
"RTN","ORY28005",100,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28005",101,0)
 ;;D^GET DATA FROM THE ACTIVE DATA FILE
"RTN","ORY28005",102,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28005",103,0)
 ;;D^GETDATA
"RTN","ORY28005",104,0)
 ;;R^"860.8:",100,1
"RTN","ORY28005",105,0)
 ;;D^  ;GETDATA(DFN,OCXL,OCXDFI) ;     This Local Extrinsic Function returns runtime data
"RTN","ORY28005",106,0)
 ;;R^"860.8:",100,2
"RTN","ORY28005",107,0)
 ;;D^  ; ;
"RTN","ORY28005",108,0)
 ;;R^"860.8:",100,3
"RTN","ORY28005",109,0)
 ;;D^  ; N OCXE,VAL,PC S VAL=""
"RTN","ORY28005",110,0)
 ;;R^"860.8:",100,4
"RTN","ORY28005",111,0)
 ;;D^  ; F PC=1:1:$L(OCXL,U) S OCXE=$P(OCXL,U,PC) I OCXE S VAL=$G(^TMP("OCXCHK",$J,DFN,OCXE,OCXDFI)) Q:$L(VAL)
"RTN","ORY28005",112,0)
 ;;R^"860.8:",100,5
"RTN","ORY28005",113,0)
 ;;D^  ; Q VAL
"RTN","ORY28005",114,0)
 ;;R^"860.8:",100,6
"RTN","ORY28005",115,0)
 ;;D^  ; ;
"RTN","ORY28005",116,0)
 ;;EOR^
"RTN","ORY28005",117,0)
 ;;KEY^860.8:^IN LIST OPERATOR
"RTN","ORY28005",118,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28005",119,0)
 ;;D^IN LIST OPERATOR
"RTN","ORY28005",120,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28005",121,0)
 ;;D^LIST
"RTN","ORY28005",122,0)
 ;;R^"860.8:",100,1
"RTN","ORY28005",123,0)
 ;;D^  ;LIST(DATA,LIST) ;   IS THE DATA FIELD IN THE LIST
"RTN","ORY28005",124,0)
 ;;R^"860.8:",100,2
"RTN","ORY28005",125,0)
 ;;D^  ; ;
"RTN","ORY28005",126,0)
 ;;R^"860.8:",100,3
"RTN","ORY28005",127,0)
 ;;D^T+; W:$G(OCXTRACE) !,"%%%%",?20,"     $$LIST(""",DATA,""",""",LIST,""")"
"RTN","ORY28005",128,0)
 ;;R^"860.8:",100,4
"RTN","ORY28005",129,0)
 ;;D^  ; S:'($E(LIST,1)=",") LIST=","_LIST S:'($E(LIST,$L(LIST))=",") LIST=LIST_"," S DATA=","_DATA_","
"RTN","ORY28005",130,0)
 ;;R^"860.8:",100,5
"RTN","ORY28005",131,0)
 ;;D^  ; Q (LIST[DATA)
"RTN","ORY28005",132,0)
 ;;R^"860.8:",100,6
"RTN","ORY28005",133,0)
 ;;D^  ; ;
"RTN","ORY28005",134,0)
 ;;EOR^
"RTN","ORY28005",135,0)
 ;;KEY^860.8:^LOCAL TERM LOOKUP
"RTN","ORY28005",136,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28005",137,0)
 ;;D^LOCAL TERM LOOKUP
"RTN","ORY28005",138,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28005",139,0)
 ;;D^TERMLKUP
"RTN","ORY28005",140,0)
 ;;R^"860.8:",1,1
"RTN","ORY28005",141,0)
 ;;D^ 
"RTN","ORY28005",142,0)
 ;;R^"860.8:",1,2
"RTN","ORY28005",143,0)
 ;;D^  This function allows a local site to define to Order Checking
"RTN","ORY28005",144,0)
 ;;R^"860.8:",1,3
"RTN","ORY28005",145,0)
 ;;D^ a term specific to that site. (ie. Lab Test Name, Radiology
"RTN","ORY28005",146,0)
 ;;R^"860.8:",1,4
"RTN","ORY28005",147,0)
 ;;D^ procedure name, etc.)
"RTN","ORY28005",148,0)
 ;;R^"860.8:",1,5
"RTN","ORY28005",149,0)
 ;;D^ 
"RTN","ORY28005",150,0)
 ;;R^"860.8:",100,1
"RTN","ORY28005",151,0)
 ;;D^  ;TERMLKUP(OCXTERM,OCXFILE) ;
"RTN","ORY28005",152,0)
 ;;R^"860.8:",100,2
"RTN","ORY28005",153,0)
 ;;D^  ; ;
"RTN","ORY28005",154,0)
 ;;R^"860.8:",100,3
"RTN","ORY28005",155,0)
 ;;D^  ; Q
"RTN","ORY28005",156,0)
 ;;R^"860.8:",100,4
"RTN","ORY28005",157,0)
 ;;D^  ; ;
"RTN","ORY28005",158,0)
 ;;EOR^
"RTN","ORY28005",159,0)
 ;;KEY^860.8:^NEW RULE MESSAGE
"RTN","ORY28005",160,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28005",161,0)
 ;;D^NEW RULE MESSAGE
"RTN","ORY28005",162,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28005",163,0)
 ;;D^NEWRULE
"RTN","ORY28005",164,0)
 ;;R^"860.8:",100,1
"RTN","ORY28005",165,0)
 ;;D^  ;NEWRULE(OCXDFN,OCXORD,OCXRUL,OCXREL,OCXNOTF,OCXMESS) ; Has this rule already been triggered for this order number
"RTN","ORY28005",166,0)
 ;;R^"860.8:",100,2
"RTN","ORY28005",167,0)
 ;;D^  ; ;
"RTN","ORY28005",168,0)
 ;;R^"860.8:",100,3
"RTN","ORY28005",169,0)
 ;;D^L+; S OCXERR=$$TIMELOG("M","NEWRULE("_(+$G(OCXDFN))_","_(+$G(OCXORD))_","_(+$G(OCXRUL))_","_(+$G(OCXREL))_","_(+$G(OCXNOTF))_","_$G(OCXMESS)_")")
"RTN","ORY28005",170,0)
 ;;R^"860.8:",100,4
"RTN","ORY28005",171,0)
 ;;D^  ; ;
"RTN","ORY28005",172,0)
 ;;R^"860.8:",100,5
"RTN","ORY28005",173,0)
 ;;D^  ; Q:'$G(OCXDFN) 0 Q:'$G(OCXRUL) 0
"RTN","ORY28005",174,0)
 ;;R^"860.8:",100,6
"RTN","ORY28005",175,0)
 ;;D^  ; Q:'$G(OCXREL) 0  Q:'$G(OCXNOTF) 0  Q:'$L($G(OCXMESS)) 0
"RTN","ORY28005",176,0)
 ;;R^"860.8:",100,7
"RTN","ORY28005",177,0)
 ;;D^  ; S OCXORD=+$G(OCXORD),OCXDFN=+OCXDFN
"RTN","ORY28005",178,0)
 ;;R^"860.8:",100,8
"RTN","ORY28005",179,0)
 ;;D^  ; ;
"RTN","ORY28005",180,0)
 ;;R^"860.8:",100,9
"RTN","ORY28005",181,0)
 ;;D^  ; N OCXNDX,OCXDATA,OCXDFI,OCXELE,OCXGR,OCXTIME,OCXCKSUM,OCXTSP,OCXTSPL
"RTN","ORY28005",182,0)
 ;;R^"860.8:",100,10
"RTN","ORY28005",183,0)
 ;;D^  ; ;
"RTN","ORY28005",184,0)
 ;;R^"860.8:",100,11
"RTN","ORY28005",185,0)
 ;;D^  ; S OCXTIME=(+$H)
"RTN","ORY28005",186,0)
 ;;R^"860.8:",100,12
"RTN","ORY28005",187,0)
 ;;D^  ; S OCXCKSUM=$$CKSUM(OCXMESS)
"RTN","ORY28005",188,0)
 ;;R^"860.8:",100,13
"RTN","ORY28005",189,0)
 ;;D^  ; ;
"RTN","ORY28005",190,0)
 ;;R^"860.8:",100,14
"RTN","ORY28005",191,0)
 ;;D^  ; S OCXTSP=($H*86400)+$P($H,",",2)
"RTN","ORY28005",192,0)
 ;;R^"860.8:",100,15
"RTN","ORY28005",193,0)
 ;;D^  ; S OCXTSPL=($G(^OCXD(860.7,"AT",OCXTIME,OCXDFN,OCXRUL,+OCXORD,OCXCKSUM))+$G(OCXTSPI,300))
"RTN","ORY28005",194,0)
 ;;R^"860.8:",100,16
"RTN","ORY28005",195,0)
 ;;D^  ; ;
"RTN","ORY28005",196,0)
 ;;R^"860.8:",100,17
"RTN","ORY28005",197,0)
 ;;D^  ; Q:(OCXTSPL>OCXTSP) 0
"RTN","ORY28005",198,0)
 ;;R^"860.8:",100,18
"RTN","ORY28005",199,0)
 ;;D^  ; ;
"RTN","ORY28005",200,0)
 ;;R^"860.8:",100,19
"RTN","ORY28005",201,0)
 ;;D^  ; K OCXDATA
"RTN","ORY28005",202,0)
 ;;R^"860.8:",100,20
"RTN","ORY28005",203,0)
 ;;D^  ; S OCXDATA(OCXDFN,0)=OCXDFN
"RTN","ORY28005",204,0)
 ;;R^"860.8:",100,21
"RTN","ORY28005",205,0)
 ;;D^  ; S OCXDATA("B",OCXDFN,OCXDFN)=""
"RTN","ORY28005",206,0)
 ;;R^"860.8:",100,22
"RTN","ORY28005",207,0)
 ;;D^  ; S OCXDATA("AT",OCXTIME,OCXDFN,OCXRUL,+OCXORD,OCXCKSUM)=OCXTSP
"RTN","ORY28005",208,0)
 ;;R^"860.8:",100,23
"RTN","ORY28005",209,0)
 ;;D^  ; ;
"RTN","ORY28005",210,0)
 ;;R^"860.8:",100,24
"RTN","ORY28005",211,0)
 ;;D^  ; S OCXGR="^OCXD(860.7"
"RTN","ORY28005",212,0)
 ;;R^"860.8:",100,25
"RTN","ORY28005",213,0)
 ;;D^T+; D SETAP(OCXGR_")",0,"Patient",$P($G(^DPT(OCXDFN,0)),U,1),.OCXDATA,OCXDFN)
"RTN","ORY28005",214,0)
 ;;R^"860.8:",100,26
"RTN","ORY28005",215,0)
 ;;D^T-; D SETAP(OCXGR_")",0,.OCXDATA,OCXDFN)
"RTN","ORY28005",216,0)
 ;;R^"860.8:",100,27
"RTN","ORY28005",217,0)
 ;;D^  ; ;
"RTN","ORY28005",218,0)
 ;;R^"860.8:",100,28
"RTN","ORY28005",219,0)
 ;;D^  ; K OCXDATA
"RTN","ORY28005",220,0)
 ;;R^"860.8:",100,29
"RTN","ORY28005",221,0)
 ;;D^  ; S OCXDATA(OCXRUL,0)=OCXRUL_U_(OCXTIME)_U_(+OCXORD)
"RTN","ORY28005",222,0)
 ;;R^"860.8:",100,30
"RTN","ORY28005",223,0)
 ;;D^  ; S OCXDATA(OCXRUL,"M")=OCXMESS
"RTN","ORY28005",224,0)
 ;;R^"860.8:",100,31
"RTN","ORY28005",225,0)
 ;;D^  ; S OCXDATA("B",OCXRUL,OCXRUL)=""
"RTN","ORY28005",226,0)
 ;;R^"860.8:",100,32
"RTN","ORY28005",227,0)
 ;;D^  ; S OCXGR=OCXGR_","_OCXDFN_",1"
"RTN","ORY28005",228,0)
 ;;R^"860.8:",100,33
"RTN","ORY28005",229,0)
 ;;D^T+; D SETAP(OCXGR_")","860.71P","Rule",$P($G(^OCXS(860.2,OCXRUL,0)),U,1),.OCXDATA,OCXRUL)
"RTN","ORY28005",230,0)
 ;;R^"860.8:",100,34
"RTN","ORY28005",231,0)
 ;;D^T-; D SETAP(OCXGR_")","860.71P",.OCXDATA,OCXRUL)
"RTN","ORY28005",232,0)
 ;;R^"860.8:",100,35
"RTN","ORY28005",233,0)
 ;;D^  ; ;
"RTN","ORY28005",234,0)
 ;;R^"860.8:",100,36
"RTN","ORY28005",235,0)
 ;;D^  ; K OCXDATA
"RTN","ORY28005",236,0)
 ;;R^"860.8:",100,37
"RTN","ORY28005",237,0)
 ;;D^  ; S OCXDATA(OCXREL,0)=OCXREL
"RTN","ORY28005",238,0)
 ;;R^"860.8:",100,38
"RTN","ORY28005",239,0)
 ;;D^  ; S OCXDATA("B",OCXREL,OCXREL)=""
"RTN","ORY28005",240,0)
 ;;R^"860.8:",100,39
"RTN","ORY28005",241,0)
 ;;D^  ; S OCXGR=OCXGR_","_OCXRUL_",1"
"RTN","ORY28005",242,0)
 ;;R^"860.8:",100,40
"RTN","ORY28005",243,0)
 ;;D^T+; D SETAP(OCXGR_")","860.712","Relation",OCXREL,.OCXDATA,OCXREL)
"RTN","ORY28005",244,0)
 ;;R^"860.8:",100,41
"RTN","ORY28005",245,0)
 ;;D^T-; D SETAP(OCXGR_")","860.712",.OCXDATA,OCXREL)
"RTN","ORY28005",246,0)
 ;;R^"860.8:",100,42
"RTN","ORY28005",247,0)
 ;;D^  ; ;
"RTN","ORY28005",248,0)
 ;;R^"860.8:",100,43
"RTN","ORY28005",249,0)
 ;1;
"RTN","ORY28005",250,0)
 ;
"RTN","ORY28006")
0^80^B62557827
"RTN","ORY28006",1,0)
ORY28006 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY28006",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY28006",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY28006",4,0)
 ;
"RTN","ORY28006",5,0)
S ;
"RTN","ORY28006",6,0)
 ;
"RTN","ORY28006",7,0)
 D DOT^ORY280ES
"RTN","ORY28006",8,0)
 ;
"RTN","ORY28006",9,0)
 ;
"RTN","ORY28006",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY28006",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY28006",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY28006",13,0)
 ;
"RTN","ORY28006",14,0)
 G ^ORY28007
"RTN","ORY28006",15,0)
 ;
"RTN","ORY28006",16,0)
 Q
"RTN","ORY28006",17,0)
 ;
"RTN","ORY28006",18,0)
DATA ;
"RTN","ORY28006",19,0)
 ;
"RTN","ORY28006",20,0)
 ;;D^  ; S OCXELE=0 F  S OCXELE=$O(^OCXS(860.2,OCXRUL,"C","C",OCXELE)) Q:'OCXELE  D
"RTN","ORY28006",21,0)
 ;;R^"860.8:",100,44
"RTN","ORY28006",22,0)
 ;;D^  ; .;
"RTN","ORY28006",23,0)
 ;;R^"860.8:",100,45
"RTN","ORY28006",24,0)
 ;;D^  ; .N OCXGR1
"RTN","ORY28006",25,0)
 ;;R^"860.8:",100,46
"RTN","ORY28006",26,0)
 ;;D^  ; .S OCXGR1=OCXGR_","_OCXREL_",1"
"RTN","ORY28006",27,0)
 ;;R^"860.8:",100,47
"RTN","ORY28006",28,0)
 ;;D^  ; .K OCXDATA
"RTN","ORY28006",29,0)
 ;;R^"860.8:",100,48
"RTN","ORY28006",30,0)
 ;;D^  ; .S OCXDATA(OCXELE,0)=OCXELE
"RTN","ORY28006",31,0)
 ;;R^"860.8:",100,49
"RTN","ORY28006",32,0)
 ;;D^  ; .S OCXDATA(OCXELE,"TIME")=OCXTIME
"RTN","ORY28006",33,0)
 ;;R^"860.8:",100,50
"RTN","ORY28006",34,0)
 ;;D^  ; .S OCXDATA(OCXELE,"LOG")=$G(OCXOLOG)
"RTN","ORY28006",35,0)
 ;;R^"860.8:",100,51
"RTN","ORY28006",36,0)
 ;;D^  ; .S OCXDATA("B",OCXELE,OCXELE)=""
"RTN","ORY28006",37,0)
 ;;R^"860.8:",100,52
"RTN","ORY28006",38,0)
 ;;D^  ; .K ^OCXD(860.7,OCXDFN,1,OCXRUL,1,OCXREL,1,OCXELE)
"RTN","ORY28006",39,0)
 ;;R^"860.8:",100,53
"RTN","ORY28006",40,0)
 ;;D^T+; .D SETAP(OCXGR1_")","860.7122P","Element",$P($G(^OCXS(860.3,OCXELE,0)),U,1),.OCXDATA,OCXELE)
"RTN","ORY28006",41,0)
 ;;R^"860.8:",100,54
"RTN","ORY28006",42,0)
 ;;D^T-; .D SETAP(OCXGR1_")","860.7122P",.OCXDATA,OCXELE)
"RTN","ORY28006",43,0)
 ;;R^"860.8:",100,55
"RTN","ORY28006",44,0)
 ;;D^  ; .;
"RTN","ORY28006",45,0)
 ;;R^"860.8:",100,56
"RTN","ORY28006",46,0)
 ;;D^  ; .S OCXDFI=0 F  S OCXDFI=$O(^TMP("OCXCHK",$J,OCXDFN,OCXELE,OCXDFI)) Q:'OCXDFI  D
"RTN","ORY28006",47,0)
 ;;R^"860.8:",100,57
"RTN","ORY28006",48,0)
 ;;D^  ; ..N OCXGR2
"RTN","ORY28006",49,0)
 ;;R^"860.8:",100,58
"RTN","ORY28006",50,0)
 ;;D^  ; ..S OCXGR2=OCXGR1_","_OCXELE_",1"
"RTN","ORY28006",51,0)
 ;;R^"860.8:",100,59
"RTN","ORY28006",52,0)
 ;;D^  ; ..K OCXDATA
"RTN","ORY28006",53,0)
 ;;R^"860.8:",100,60
"RTN","ORY28006",54,0)
 ;;D^  ; ..S OCXDATA(OCXDFI,0)=OCXDFI
"RTN","ORY28006",55,0)
 ;;R^"860.8:",100,61
"RTN","ORY28006",56,0)
 ;;D^  ; ..S OCXDATA(OCXDFI,"VAL")=^TMP("OCXCHK",$J,OCXDFN,OCXELE,OCXDFI)
"RTN","ORY28006",57,0)
 ;;R^"860.8:",100,62
"RTN","ORY28006",58,0)
 ;;D^  ; ..S OCXDATA("B",OCXDFI,OCXDFI)=""
"RTN","ORY28006",59,0)
 ;;R^"860.8:",100,63
"RTN","ORY28006",60,0)
 ;;D^T+; ..D SETAP(OCXGR2_")","860.71223P","Data Field",$P($G(^OCXS(860.4,OCXDFI,0)),U,1),.OCXDATA,OCXDFI)
"RTN","ORY28006",61,0)
 ;;R^"860.8:",100,64
"RTN","ORY28006",62,0)
 ;;D^T-; ..D SETAP(OCXGR2_")","860.71223P",.OCXDATA,OCXDFI)
"RTN","ORY28006",63,0)
 ;;R^"860.8:",100,65
"RTN","ORY28006",64,0)
 ;;D^  ; ;
"RTN","ORY28006",65,0)
 ;;R^"860.8:",100,66
"RTN","ORY28006",66,0)
 ;;D^  ; Q 1
"RTN","ORY28006",67,0)
 ;;R^"860.8:",100,67
"RTN","ORY28006",68,0)
 ;;D^  ; ;
"RTN","ORY28006",69,0)
 ;;R^"860.8:",100,68
"RTN","ORY28006",70,0)
 ;;D^T+;SETAP(ROOT,DD,ITEM,ITEMNAME,DATA,DA) ;  Set Rule Event data
"RTN","ORY28006",71,0)
 ;;R^"860.8:",100,69
"RTN","ORY28006",72,0)
 ;;D^T-;SETAP(ROOT,DD,DATA,DA) ;  Set Rule Event data
"RTN","ORY28006",73,0)
 ;;R^"860.8:",100,70
"RTN","ORY28006",74,0)
 ;;D^  ; M @ROOT=DATA
"RTN","ORY28006",75,0)
 ;;R^"860.8:",100,71
"RTN","ORY28006",76,0)
 ;;D^  ; I +$G(DD) S @ROOT@(0)="^"_($G(DD))_"^"_($P($G(@ROOT@(0)),U,3)+1)_"^"_$G(DA)
"RTN","ORY28006",77,0)
 ;;R^"860.8:",100,72
"RTN","ORY28006",78,0)
 ;;D^  ; I '$G(DD) S $P(@ROOT@(0),U,3,4)=($P($G(@ROOT@(0)),U,3)+1)_"^"_$G(DA)
"RTN","ORY28006",79,0)
 ;;R^"860.8:",100,73
"RTN","ORY28006",80,0)
 ;;D^T+; W:$G(OCXTRACE) !,"File Active Data ",$G(ITEM),": ",$G(ITEMNAME)
"RTN","ORY28006",81,0)
 ;;R^"860.8:",100,74
"RTN","ORY28006",82,0)
 ;;D^  ; ;
"RTN","ORY28006",83,0)
 ;;R^"860.8:",100,75
"RTN","ORY28006",84,0)
 ;;D^  ; Q
"RTN","ORY28006",85,0)
 ;;R^"860.8:",100,76
"RTN","ORY28006",86,0)
 ;;D^  ; ;
"RTN","ORY28006",87,0)
 ;;R^"860.8:",100,77
"RTN","ORY28006",88,0)
 ;;D^  ; ;
"RTN","ORY28006",89,0)
 ;;EOR^
"RTN","ORY28006",90,0)
 ;;KEY^860.8:^OPIOID MEDICATIONS
"RTN","ORY28006",91,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28006",92,0)
 ;;D^OPIOID MEDICATIONS
"RTN","ORY28006",93,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28006",94,0)
 ;;D^OPIOID
"RTN","ORY28006",95,0)
 ;;R^"860.8:",1,1
"RTN","ORY28006",96,0)
 ;;D^If the patient is currently receiving "active" medications in the opioid 
"RTN","ORY28006",97,0)
 ;;R^"860.8:",1,2
"RTN","ORY28006",98,0)
 ;;D^VA drug classes CN101 or CN102, this function returns a "1" and list of 
"RTN","ORY28006",99,0)
 ;;R^"860.8:",1,3
"RTN","ORY28006",100,0)
 ;;D^the opioid medications in the following format:
"RTN","ORY28006",101,0)
 ;;R^"860.8:",1,4
"RTN","ORY28006",102,0)
 ;;D^ 
"RTN","ORY28006",103,0)
 ;;R^"860.8:",1,5
"RTN","ORY28006",104,0)
 ;;D^  1^drug order text 1, drug order text 2, drug order text 3, ...
"RTN","ORY28006",105,0)
 ;;R^"860.8:",1,6
"RTN","ORY28006",106,0)
 ;;D^ 
"RTN","ORY28006",107,0)
 ;;R^"860.8:",1,7
"RTN","ORY28006",108,0)
 ;;D^[Note: The drug order text is truncated to the first 25 characters.]
"RTN","ORY28006",109,0)
 ;;R^"860.8:",1,8
"RTN","ORY28006",110,0)
 ;;D^ 
"RTN","ORY28006",111,0)
 ;;R^"860.8:",1,9
"RTN","ORY28006",112,0)
 ;;D^If the patient is not currently receiving opioid medications, a zero (0)
"RTN","ORY28006",113,0)
 ;;R^"860.8:",1,10
"RTN","ORY28006",114,0)
 ;;D^is returned.
"RTN","ORY28006",115,0)
 ;;R^"860.8:",100,1
"RTN","ORY28006",116,0)
 ;;D^   ;OPIOID(ORPT) ;determine if pat is receiving opioid med
"RTN","ORY28006",117,0)
 ;;R^"860.8:",100,2
"RTN","ORY28006",118,0)
 ;;D^   ; ; rtn 1^opioid drug 1, opioid drug 2, opioid drug3, ...
"RTN","ORY28006",119,0)
 ;;R^"860.8:",100,3
"RTN","ORY28006",120,0)
 ;;D^   ; N ORDG,ORTN,ORNUM,ORDI,ORDCLAS,ORDERS,ORTEXT,DUP,DUPI,DUPJ,DUPLEN
"RTN","ORY28006",121,0)
 ;;R^"860.8:",100,4
"RTN","ORY28006",122,0)
 ;;D^   ; S ORDG=0,ORTN=0,DUPI=0,DUPLEN=20
"RTN","ORY28006",123,0)
 ;;R^"860.8:",100,5
"RTN","ORY28006",124,0)
 ;;D^   ; K ^TMP("ORR",$J)
"RTN","ORY28006",125,0)
 ;;R^"860.8:",100,6
"RTN","ORY28006",126,0)
 ;;D^   ; S ORDG=$O(^ORD(100.98,"B","RX",ORDG))
"RTN","ORY28006",127,0)
 ;;R^"860.8:",100,7
"RTN","ORY28006",128,0)
 ;;D^   ; D EN^ORQ1(ORPT_";DPT(",ORDG,2,"","","",0,0)
"RTN","ORY28006",129,0)
 ;;R^"860.8:",100,8
"RTN","ORY28006",130,0)
 ;;D^   ; N J,HOR,SEQ,X S J=1,HOR=0,SEQ=0
"RTN","ORY28006",131,0)
 ;;R^"860.8:",100,9
"RTN","ORY28006",132,0)
 ;;D^   ; S HOR=$O(^TMP("ORR",$J,HOR)) Q:+HOR<1 ORTN
"RTN","ORY28006",133,0)
 ;;R^"860.8:",100,10
"RTN","ORY28006",134,0)
 ;;D^   ; F  S SEQ=$O(^TMP("ORR",$J,HOR,SEQ)) Q:+SEQ<1  D
"RTN","ORY28006",135,0)
 ;;R^"860.8:",100,11
"RTN","ORY28006",136,0)
 ;;D^   ; .S X=^TMP("ORR",$J,HOR,SEQ)
"RTN","ORY28006",137,0)
 ;;R^"860.8:",100,12
"RTN","ORY28006",138,0)
 ;;D^   ; .S ORNUM=+$P(X,";")
"RTN","ORY28006",139,0)
 ;;R^"860.8:",100,13
"RTN","ORY28006",140,0)
 ;;D^   ; .Q:ORNUM=+$G(ORIFN)  ;quit if dup med order # = current order #
"RTN","ORY28006",141,0)
 ;;R^"860.8:",100,14
"RTN","ORY28006",142,0)
 ;;D^   ; .S ORDI=$$VALUE^ORCSAVE2(ORNUM,"DRUG")
"RTN","ORY28006",143,0)
 ;;R^"860.8:",100,15
"RTN","ORY28006",144,0)
 ;;D^   ; .I +$G(ORDI)>0 D
"RTN","ORY28006",145,0)
 ;;R^"860.8:",100,16
"RTN","ORY28006",146,0)
 ;;D^   ; ..S ORDCLAS=$P(^PSDRUG(ORDI,0),U,2)  ;va drug class
"RTN","ORY28006",147,0)
 ;;R^"860.8:",100,17
"RTN","ORY28006",148,0)
 ;;D^   ; ..I ($G(ORDCLAS)="CN101")!($G(ORDCLAS)="CN102") D  ;opioid classes
"RTN","ORY28006",149,0)
 ;;R^"860.8:",100,18
"RTN","ORY28006",150,0)
 ;;D^   ; ...S ORTEXT=$$FULLTEXT^ORQOR1(ORNUM)
"RTN","ORY28006",151,0)
 ;;R^"860.8:",100,19
"RTN","ORY28006",152,0)
 ;;D^   ; ...S ORTEXT=$P(ORTEXT,U)_" ["_$P(ORTEXT,U,2)_"]"
"RTN","ORY28006",153,0)
 ;;R^"860.8:",100,20
"RTN","ORY28006",154,0)
 ;;D^   ; ...S DUPI=DUPI+1,DUP(DUPI)=" ["_DUPI_"] "_ORTEXT
"RTN","ORY28006",155,0)
 ;;R^"860.8:",100,21
"RTN","ORY28006",156,0)
 ;;D^   ; ...S ORTN=1
"RTN","ORY28006",157,0)
 ;;R^"860.8:",100,22
"RTN","ORY28006",158,0)
 ;;D^   ; I DUPI>0 D
"RTN","ORY28006",159,0)
 ;;R^"860.8:",100,23
"RTN","ORY28006",160,0)
 ;;D^   ; .;S DUPLEN=$P(215/DUPI,".")
"RTN","ORY28006",161,0)
 ;;R^"860.8:",100,24
"RTN","ORY28006",162,0)
 ;;D^   ; .S DUPLEN=500
"RTN","ORY28006",163,0)
 ;;R^"860.8:",100,25
"RTN","ORY28006",164,0)
 ;;D^   ; .F DUPJ=1:1:DUPI D
"RTN","ORY28006",165,0)
 ;;R^"860.8:",100,26
"RTN","ORY28006",166,0)
 ;;D^   ; ..I DUPJ=1 S ORDERS=$E(DUP(DUPJ),1,DUPLEN)
"RTN","ORY28006",167,0)
 ;;R^"860.8:",100,27
"RTN","ORY28006",168,0)
 ;;D^   ; ..E  S ORDERS=ORDERS_", "_$E(DUP(DUPJ),1,DUPLEN)
"RTN","ORY28006",169,0)
 ;;R^"860.8:",100,28
"RTN","ORY28006",170,0)
 ;;D^   ; K ^TMP("ORR",$J)
"RTN","ORY28006",171,0)
 ;;R^"860.8:",100,29
"RTN","ORY28006",172,0)
 ;;D^   ; Q ORTN_U_$G(ORDERS)
"RTN","ORY28006",173,0)
 ;;R^"860.8:",100,30
"RTN","ORY28006",174,0)
 ;;D^   ; ;
"RTN","ORY28006",175,0)
 ;;EOR^
"RTN","ORY28006",176,0)
 ;;KEY^860.8:^RETURN POINTED TO VALUE
"RTN","ORY28006",177,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28006",178,0)
 ;;D^RETURN POINTED TO VALUE
"RTN","ORY28006",179,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28006",180,0)
 ;;D^POINTER
"RTN","ORY28006",181,0)
 ;;R^"860.8:",1,1
"RTN","ORY28006",182,0)
 ;;D^  ;POINTER(OCXFILE,D0) ;    This Local Extrinsic Function gets the value of the name field
"RTN","ORY28006",183,0)
 ;;R^"860.8:",1,2
"RTN","ORY28006",184,0)
 ;;D^  ; ;  of record D0 in file OCXFILE
"RTN","ORY28006",185,0)
 ;;R^"860.8:",100,1
"RTN","ORY28006",186,0)
 ;;D^  ;POINTER(OCXFILE,D0) ;    This Local Extrinsic Function gets the value of the name field
"RTN","ORY28006",187,0)
 ;;R^"860.8:",100,2
"RTN","ORY28006",188,0)
 ;;D^  ; ;  of record D0 in file OCXFILE
"RTN","ORY28006",189,0)
 ;;R^"860.8:",100,3
"RTN","ORY28006",190,0)
 ;;D^T+; I $G(OCXTRACE) W !,"%%%%",?20,"   FILE: ",$G(OCXFILE),"  D0: ",$G(D0)
"RTN","ORY28006",191,0)
 ;;R^"860.8:",100,4
"RTN","ORY28006",192,0)
 ;;D^  ; Q:'$G(D0) "" Q:'$L($G(OCXFILE)) ""
"RTN","ORY28006",193,0)
 ;;R^"860.8:",100,5
"RTN","ORY28006",194,0)
 ;;D^  ; N GLREF
"RTN","ORY28006",195,0)
 ;;R^"860.8:",100,6
"RTN","ORY28006",196,0)
 ;;D^  ; I '(OCXFILE=(+OCXFILE)) S GLREF=U_OCXFILE
"RTN","ORY28006",197,0)
 ;;R^"860.8:",100,7
"RTN","ORY28006",198,0)
 ;;D^  ; E  S GLREF=$$FILE^OCXBDTD(+OCXFILE,"GLOBAL NAME") Q:'$L(GLREF) ""
"RTN","ORY28006",199,0)
 ;;R^"860.8:",100,8
"RTN","ORY28006",200,0)
 ;;D^T+; I $G(OCXTRACE) W !,"%%%%",?20," GLREF: ",GLREF,"  RESOLVES TO: ",$P($G(@(GLREF_(+D0)_",0)")),U,1)
"RTN","ORY28006",201,0)
 ;;R^"860.8:",100,9
"RTN","ORY28006",202,0)
 ;;D^  ; Q $P($G(@(GLREF_(+D0)_",0)")),U,1)
"RTN","ORY28006",203,0)
 ;;R^"860.8:",100,10
"RTN","ORY28006",204,0)
 ;;D^  ; ;
"RTN","ORY28006",205,0)
 ;;EOR^
"RTN","ORY28006",206,0)
 ;;KEY^860.8:^STRING CONTAINS ONE OF A LIST OF VALUES
"RTN","ORY28006",207,0)
 ;;R^"860.8:",.01,"E"
"RTN","ORY28006",208,0)
 ;;D^STRING CONTAINS ONE OF A LIST OF VALUES
"RTN","ORY28006",209,0)
 ;;R^"860.8:",.02,"E"
"RTN","ORY28006",210,0)
 ;;D^CLIST
"RTN","ORY28006",211,0)
 ;;R^"860.8:",100,1
"RTN","ORY28006",212,0)
 ;;D^  ;CLIST(DATA,LIST) ;   DOES THE DATA FIELD CONTAIN AN ELEMENT IN THE LIST
"RTN","ORY28006",213,0)
 ;;R^"860.8:",100,2
"RTN","ORY28006",214,0)
 ;;D^  ; ;
"RTN","ORY28006",215,0)
 ;;R^"860.8:",100,3
"RTN","ORY28006",216,0)
 ;;D^T+; W:$G(OCXTRACE) !!,"$$CLIST(",DATA,",""",LIST,""")"
"RTN","ORY28006",217,0)
 ;;R^"860.8:",100,4
"RTN","ORY28006",218,0)
 ;;D^  ; N PC F PC=1:1:$L(LIST,","),0 I PC,$L($P(LIST,",",PC)),(DATA[$P(LIST,",",PC)) Q
"RTN","ORY28006",219,0)
 ;;R^"860.8:",100,5
"RTN","ORY28006",220,0)
 ;;D^  ; Q ''PC
"RTN","ORY28006",221,0)
 ;;EOR^
"RTN","ORY28006",222,0)
 ;;EOF^OCXS(860.8)^1
"RTN","ORY28006",223,0)
 ;;SOF^860.6  ORDER CHECK DATA CONTEXT
"RTN","ORY28006",224,0)
 ;;KEY^860.6:^CPRS ORDER PRESCAN
"RTN","ORY28006",225,0)
 ;;R^"860.6:",.01,"E"
"RTN","ORY28006",226,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY28006",227,0)
 ;;R^"860.6:",.02,"E"
"RTN","ORY28006",228,0)
 ;;D^OEPS
"RTN","ORY28006",229,0)
 ;;R^"860.6:",1,"E"
"RTN","ORY28006",230,0)
 ;;D^DATA DRIVEN
"RTN","ORY28006",231,0)
 ;;EOR^
"RTN","ORY28006",232,0)
 ;;KEY^860.6:^CPRS ORDER PROTOCOL
"RTN","ORY28006",233,0)
 ;;R^"860.6:",.01,"E"
"RTN","ORY28006",234,0)
 ;1;
"RTN","ORY28006",235,0)
 ;
"RTN","ORY28007")
0^81^B55829468
"RTN","ORY28007",1,0)
ORY28007 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY28007",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY28007",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY28007",4,0)
 ;
"RTN","ORY28007",5,0)
S ;
"RTN","ORY28007",6,0)
 ;
"RTN","ORY28007",7,0)
 D DOT^ORY280ES
"RTN","ORY28007",8,0)
 ;
"RTN","ORY28007",9,0)
 ;
"RTN","ORY28007",10,0)
 K REMOTE,LOCAL,OPCODE,REF
"RTN","ORY28007",11,0)
 F LINE=1:1:500 S TEXT=$P($T(DATA+LINE),";",2,999) Q:TEXT  I $L(TEXT) D  Q:QUIT
"RTN","ORY28007",12,0)
 .S ^TMP("OCXRULE",$J,$O(^TMP("OCXRULE",$J,"A"),-1)+1)=TEXT
"RTN","ORY28007",13,0)
 ;
"RTN","ORY28007",14,0)
 ;
"RTN","ORY28007",15,0)
 ;
"RTN","ORY28007",16,0)
 Q
"RTN","ORY28007",17,0)
 ;
"RTN","ORY28007",18,0)
DATA ;
"RTN","ORY28007",19,0)
 ;
"RTN","ORY28007",20,0)
 ;;D^CPRS ORDER PROTOCOL
"RTN","ORY28007",21,0)
 ;;R^"860.6:",.02,"E"
"RTN","ORY28007",22,0)
 ;;D^OERR
"RTN","ORY28007",23,0)
 ;;R^"860.6:",1,"E"
"RTN","ORY28007",24,0)
 ;;D^DATA DRIVEN
"RTN","ORY28007",25,0)
 ;;EOR^
"RTN","ORY28007",26,0)
 ;;KEY^860.6:^DATABASE LOOKUP
"RTN","ORY28007",27,0)
 ;;R^"860.6:",.01,"E"
"RTN","ORY28007",28,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY28007",29,0)
 ;;R^"860.6:",.02,"E"
"RTN","ORY28007",30,0)
 ;;D^DL
"RTN","ORY28007",31,0)
 ;;R^"860.6:",1,"E"
"RTN","ORY28007",32,0)
 ;;D^PACKAGE LOOKUP
"RTN","ORY28007",33,0)
 ;;EOR^
"RTN","ORY28007",34,0)
 ;;KEY^860.6:^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY28007",35,0)
 ;;R^"860.6:",.01,"E"
"RTN","ORY28007",36,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY28007",37,0)
 ;;R^"860.6:",.02,"E"
"RTN","ORY28007",38,0)
 ;;D^HL7
"RTN","ORY28007",39,0)
 ;;R^"860.6:",1,"E"
"RTN","ORY28007",40,0)
 ;;D^DATA DRIVEN
"RTN","ORY28007",41,0)
 ;;EOR^
"RTN","ORY28007",42,0)
 ;;EOF^OCXS(860.6)^1
"RTN","ORY28007",43,0)
 ;;SOF^860.5  ORDER CHECK DATA SOURCE
"RTN","ORY28007",44,0)
 ;;KEY^860.5:^DATABASE LOOKUP
"RTN","ORY28007",45,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY28007",46,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY28007",47,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY28007",48,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY28007",49,0)
 ;;EOR^
"RTN","ORY28007",50,0)
 ;;KEY^860.5:^HL7 COMMON ORDER SEGMENT
"RTN","ORY28007",51,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY28007",52,0)
 ;;D^HL7 COMMON ORDER SEGMENT
"RTN","ORY28007",53,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY28007",54,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY28007",55,0)
 ;;EOR^
"RTN","ORY28007",56,0)
 ;;KEY^860.5:^HL7 PATIENT ID SEGMENT
"RTN","ORY28007",57,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY28007",58,0)
 ;;D^HL7 PATIENT ID SEGMENT
"RTN","ORY28007",59,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY28007",60,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY28007",61,0)
 ;;EOR^
"RTN","ORY28007",62,0)
 ;;KEY^860.5:^OERR ORDER EVENT FLAG PROTOCOL
"RTN","ORY28007",63,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY28007",64,0)
 ;;D^OERR ORDER EVENT FLAG PROTOCOL
"RTN","ORY28007",65,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY28007",66,0)
 ;;D^CPRS ORDER PROTOCOL
"RTN","ORY28007",67,0)
 ;;EOR^
"RTN","ORY28007",68,0)
 ;;KEY^860.5:^ORDER ENTRY ORDER PRESCAN
"RTN","ORY28007",69,0)
 ;;R^"860.5:",.01,"E"
"RTN","ORY28007",70,0)
 ;;D^ORDER ENTRY ORDER PRESCAN
"RTN","ORY28007",71,0)
 ;;R^"860.5:",.02,"E"
"RTN","ORY28007",72,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY28007",73,0)
 ;;EOR^
"RTN","ORY28007",74,0)
 ;;EOF^OCXS(860.5)^1
"RTN","ORY28007",75,0)
 ;;SOF^860.4  ORDER CHECK DATA FIELD
"RTN","ORY28007",76,0)
 ;;KEY^860.4:^ALLERGY ASSESSMENT
"RTN","ORY28007",77,0)
 ;;R^"860.4:",.01,"E"
"RTN","ORY28007",78,0)
 ;;D^ALLERGY ASSESSMENT
"RTN","ORY28007",79,0)
 ;;R^"860.4:",1,"E"
"RTN","ORY28007",80,0)
 ;;D^ALLERGY
"RTN","ORY28007",81,0)
 ;;R^"860.4:",101,"E"
"RTN","ORY28007",82,0)
 ;;D^BOOLEAN
"RTN","ORY28007",83,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",.01,"E"
"RTN","ORY28007",84,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY28007",85,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",.02,"E"
"RTN","ORY28007",86,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY28007",87,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",1,"E"
"RTN","ORY28007",88,0)
 ;;D^PATIENT.ALLERGY ASSESSMENT
"RTN","ORY28007",89,0)
 ;;EOR^
"RTN","ORY28007",90,0)
 ;;KEY^860.4:^FILLER
"RTN","ORY28007",91,0)
 ;;R^"860.4:",.01,"E"
"RTN","ORY28007",92,0)
 ;;D^FILLER
"RTN","ORY28007",93,0)
 ;;R^"860.4:",1,"E"
"RTN","ORY28007",94,0)
 ;;D^FILL
"RTN","ORY28007",95,0)
 ;;R^"860.4:",101,"E"
"RTN","ORY28007",96,0)
 ;;D^FREE TEXT
"RTN","ORY28007",97,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",.01,"E"
"RTN","ORY28007",98,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY28007",99,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",.02,"E"
"RTN","ORY28007",100,0)
 ;;D^ORDER ENTRY ORDER PRESCAN
"RTN","ORY28007",101,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",1,"E"
"RTN","ORY28007",102,0)
 ;;D^PATIENT.OPS_FILLER
"RTN","ORY28007",103,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.01,"E"
"RTN","ORY28007",104,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY28007",105,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.02,"E"
"RTN","ORY28007",106,0)
 ;;D^HL7 COMMON ORDER SEGMENT
"RTN","ORY28007",107,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",1,"E"
"RTN","ORY28007",108,0)
 ;;D^PATIENT.HL7_FILLER
"RTN","ORY28007",109,0)
 ;;EOR^
"RTN","ORY28007",110,0)
 ;;KEY^860.4:^ORDER MODE
"RTN","ORY28007",111,0)
 ;;R^"860.4:",.01,"E"
"RTN","ORY28007",112,0)
 ;;D^ORDER MODE
"RTN","ORY28007",113,0)
 ;;R^"860.4:",101,"E"
"RTN","ORY28007",114,0)
 ;;D^FREE TEXT
"RTN","ORY28007",115,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",.01,"E"
"RTN","ORY28007",116,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY28007",117,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",.02,"E"
"RTN","ORY28007",118,0)
 ;;D^ORDER ENTRY ORDER PRESCAN
"RTN","ORY28007",119,0)
 ;;R^"860.4:","860.41:CPRS ORDER PRESCAN^860.6",1,"E"
"RTN","ORY28007",120,0)
 ;;D^PATIENT.OPS_ORD_MODE
"RTN","ORY28007",121,0)
 ;;EOR^
"RTN","ORY28007",122,0)
 ;;KEY^860.4:^PATIENT IEN
"RTN","ORY28007",123,0)
 ;;R^"860.4:",.01,"E"
"RTN","ORY28007",124,0)
 ;;D^PATIENT IEN
"RTN","ORY28007",125,0)
 ;;R^"860.4:",101,"E"
"RTN","ORY28007",126,0)
 ;;D^NUMERIC
"RTN","ORY28007",127,0)
 ;;R^"860.4:","860.41:CPRS ORDER PROTOCOL^860.6",.01,"E"
"RTN","ORY28007",128,0)
 ;;D^CPRS ORDER PROTOCOL
"RTN","ORY28007",129,0)
 ;;R^"860.4:","860.41:CPRS ORDER PROTOCOL^860.6",.02,"E"
"RTN","ORY28007",130,0)
 ;;D^OERR ORDER EVENT FLAG PROTOCOL
"RTN","ORY28007",131,0)
 ;;R^"860.4:","860.41:CPRS ORDER PROTOCOL^860.6",1,"E"
"RTN","ORY28007",132,0)
 ;;D^PATIENT.OERR_ORDER_PATIENT
"RTN","ORY28007",133,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",.01,"E"
"RTN","ORY28007",134,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY28007",135,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",.02,"E"
"RTN","ORY28007",136,0)
 ;;D^DATABASE LOOKUP
"RTN","ORY28007",137,0)
 ;;R^"860.4:","860.41:DATABASE LOOKUP^860.6",1,"E"
"RTN","ORY28007",138,0)
 ;;D^PATIENT.IEN
"RTN","ORY28007",139,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.01,"E"
"RTN","ORY28007",140,0)
 ;;D^GENERIC HL7 MESSAGE ARRAY
"RTN","ORY28007",141,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",.02,"E"
"RTN","ORY28007",142,0)
 ;;D^HL7 PATIENT ID SEGMENT
"RTN","ORY28007",143,0)
 ;;R^"860.4:","860.41:GENERIC HL7 MESSAGE ARRAY^860.6",1,"E"
"RTN","ORY28007",144,0)
 ;;D^PATIENT.HL7_PATIENT_ID
"RTN","ORY28007",145,0)
 ;;EOR^
"RTN","ORY28007",146,0)
 ;;EOF^OCXS(860.4)^1
"RTN","ORY28007",147,0)
 ;;SOF^860.3  ORDER CHECK ELEMENT
"RTN","ORY28007",148,0)
 ;;KEY^860.3:^DIET ORDER
"RTN","ORY28007",149,0)
 ;;R^"860.3:",.01,"E"
"RTN","ORY28007",150,0)
 ;;D^DIET ORDER
"RTN","ORY28007",151,0)
 ;;R^"860.3:",.02,"E"
"RTN","ORY28007",152,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY28007",153,0)
 ;;R^"860.3:","860.31:1",.01,"E"
"RTN","ORY28007",154,0)
 ;;D^1
"RTN","ORY28007",155,0)
 ;;R^"860.3:","860.31:1",1,"E"
"RTN","ORY28007",156,0)
 ;;D^FILLER
"RTN","ORY28007",157,0)
 ;;R^"860.3:","860.31:1",2,"E"
"RTN","ORY28007",158,0)
 ;;D^EQ FREE TEXT
"RTN","ORY28007",159,0)
 ;;R^"860.3:","860.31:1",3,"E"
"RTN","ORY28007",160,0)
 ;;D^FH
"RTN","ORY28007",161,0)
 ;;EOR^
"RTN","ORY28007",162,0)
 ;;KEY^860.3:^NO ALLERGY ASSESSMENT
"RTN","ORY28007",163,0)
 ;;R^"860.3:",.01,"E"
"RTN","ORY28007",164,0)
 ;;D^NO ALLERGY ASSESSMENT
"RTN","ORY28007",165,0)
 ;;R^"860.3:",.02,"E"
"RTN","ORY28007",166,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY28007",167,0)
 ;;R^"860.3:","860.31:1",.01,"E"
"RTN","ORY28007",168,0)
 ;;D^1
"RTN","ORY28007",169,0)
 ;;R^"860.3:","860.31:1",1,"E"
"RTN","ORY28007",170,0)
 ;;D^ALLERGY ASSESSMENT
"RTN","ORY28007",171,0)
 ;;R^"860.3:","860.31:1",2,"E"
"RTN","ORY28007",172,0)
 ;;D^LOGICAL FALSE
"RTN","ORY28007",173,0)
 ;;R^"860.3:","860.31:2",.01,"E"
"RTN","ORY28007",174,0)
 ;;D^2
"RTN","ORY28007",175,0)
 ;;R^"860.3:","860.31:2",1,"E"
"RTN","ORY28007",176,0)
 ;;D^ORDER MODE
"RTN","ORY28007",177,0)
 ;;R^"860.3:","860.31:2",2,"E"
"RTN","ORY28007",178,0)
 ;;D^CONTAINS ELEMENT IN SET
"RTN","ORY28007",179,0)
 ;;R^"860.3:","860.31:2",3,"E"
"RTN","ORY28007",180,0)
 ;;D^SELECT,SESSION
"RTN","ORY28007",181,0)
 ;;EOR^
"RTN","ORY28007",182,0)
 ;;KEY^860.3:^PHARMACY ORDER
"RTN","ORY28007",183,0)
 ;;R^"860.3:",.01,"E"
"RTN","ORY28007",184,0)
 ;;D^PHARMACY ORDER
"RTN","ORY28007",185,0)
 ;;R^"860.3:",.02,"E"
"RTN","ORY28007",186,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY28007",187,0)
 ;;R^"860.3:","860.31:1",.01,"E"
"RTN","ORY28007",188,0)
 ;;D^1
"RTN","ORY28007",189,0)
 ;;R^"860.3:","860.31:1",1,"E"
"RTN","ORY28007",190,0)
 ;;D^FILLER
"RTN","ORY28007",191,0)
 ;;R^"860.3:","860.31:1",2,"E"
"RTN","ORY28007",192,0)
 ;;D^STARTS WITH
"RTN","ORY28007",193,0)
 ;;R^"860.3:","860.31:1",3,"E"
"RTN","ORY28007",194,0)
 ;;D^PS
"RTN","ORY28007",195,0)
 ;;EOR^
"RTN","ORY28007",196,0)
 ;;KEY^860.3:^RADIOLOGY ORDER
"RTN","ORY28007",197,0)
 ;;R^"860.3:",.01,"E"
"RTN","ORY28007",198,0)
 ;;D^RADIOLOGY ORDER
"RTN","ORY28007",199,0)
 ;;R^"860.3:",.02,"E"
"RTN","ORY28007",200,0)
 ;;D^CPRS ORDER PRESCAN
"RTN","ORY28007",201,0)
 ;;R^"860.3:","860.31:1",.01,"E"
"RTN","ORY28007",202,0)
 ;;D^1
"RTN","ORY28007",203,0)
 ;;R^"860.3:","860.31:1",1,"E"
"RTN","ORY28007",204,0)
 ;;D^FILLER
"RTN","ORY28007",205,0)
 ;;R^"860.3:","860.31:1",2,"E"
"RTN","ORY28007",206,0)
 ;;D^EQ FREE TEXT
"RTN","ORY28007",207,0)
 ;;R^"860.3:","860.31:1",3,"E"
"RTN","ORY28007",208,0)
 ;;D^RA
"RTN","ORY28007",209,0)
 ;;EOR^
"RTN","ORY28007",210,0)
 ;;EOF^OCXS(860.3)^1
"RTN","ORY28007",211,0)
 ;;SOF^860.2  ORDER CHECK RULE
"RTN","ORY28007",212,0)
 ;;KEY^860.2:^NO ALLERGY ASSESSMENT
"RTN","ORY28007",213,0)
 ;;R^"860.2:",.01,"E"
"RTN","ORY28007",214,0)
 ;;D^NO ALLERGY ASSESSMENT
"RTN","ORY28007",215,0)
 ;;R^"860.2:","860.21:1",.01,"E"
"RTN","ORY28007",216,0)
 ;;D^NO ALLERGY ASSESSMENT
"RTN","ORY28007",217,0)
 ;;R^"860.2:","860.21:1",.02,"E"
"RTN","ORY28007",218,0)
 ;;D^SIMPLE DEFINITION
"RTN","ORY28007",219,0)
 ;;R^"860.2:","860.21:1",1,"E"
"RTN","ORY28007",220,0)
 ;;D^NO ALLERGY ASSESSMENT
"RTN","ORY28007",221,0)
 ;;R^"860.2:","860.21:3",.01,"E"
"RTN","ORY28007",222,0)
 ;;D^PHARMACY ORDER
"RTN","ORY28007",223,0)
 ;;R^"860.2:","860.21:3",.02,"E"
"RTN","ORY28007",224,0)
 ;;D^SIMPLE DEFINITION
"RTN","ORY28007",225,0)
 ;;R^"860.2:","860.21:3",1,"E"
"RTN","ORY28007",226,0)
 ;;D^PHARMACY ORDER
"RTN","ORY28007",227,0)
 ;;R^"860.2:","860.21:4",.01,"E"
"RTN","ORY28007",228,0)
 ;;D^DIET ORDER
"RTN","ORY28007",229,0)
 ;;R^"860.2:","860.21:4",.02,"E"
"RTN","ORY28007",230,0)
 ;;D^SIMPLE DEFINITION
"RTN","ORY28007",231,0)
 ;;R^"860.2:","860.21:4",1,"E"
"RTN","ORY28007",232,0)
 ;;D^DIET ORDER
"RTN","ORY28007",233,0)
 ;;R^"860.2:","860.21:5",.01,"E"
"RTN","ORY28007",234,0)
 ;;D^RADIOLOGY ORDER
"RTN","ORY28007",235,0)
 ;;R^"860.2:","860.21:5",.02,"E"
"RTN","ORY28007",236,0)
 ;;D^SIMPLE DEFINITION
"RTN","ORY28007",237,0)
 ;;R^"860.2:","860.21:5",1,"E"
"RTN","ORY28007",238,0)
 ;;D^RADIOLOGY ORDER
"RTN","ORY28007",239,0)
 ;;R^"860.2:","860.22:1",.01,"E"
"RTN","ORY28007",240,0)
 ;;D^1
"RTN","ORY28007",241,0)
 ;;R^"860.2:","860.22:1",1,"E"
"RTN","ORY28007",242,0)
 ;;D^NO ALLERGY ASSESSMENT AND (RADIOLOGY ORDER OR PHARMACY ORDER OR DIET ORDER)
"RTN","ORY28007",243,0)
 ;;R^"860.2:","860.22:1",2,"E"
"RTN","ORY28007",244,0)
 ;;D^NO ALLERGY ASSESSMENT
"RTN","ORY28007",245,0)
 ;;R^"860.2:","860.22:1",6,"E"
"RTN","ORY28007",246,0)
 ;;D^Patient has no allergy assessment.
"RTN","ORY28007",247,0)
 ;;R^"860.2:","860.22:1",9,"E"
"RTN","ORY28007",248,0)
 ;;D^Q:'$$NEWRULE(DFN,$J,39,1,999,"Patient has no allergy assessment.")
"RTN","ORY28007",249,0)
 ;;EOR^
"RTN","ORY28007",250,0)
 ;;EOF^OCXS(860.2)^1
"RTN","ORY28007",251,0)
 ;1;
"RTN","ORY28007",252,0)
 ;
"RTN","ORY2801")
0^83^B40551743
"RTN","ORY2801",1,0)
ORY2801 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY2801",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY2801",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY2801",4,0)
 ;
"RTN","ORY2801",5,0)
S ;
"RTN","ORY2801",6,0)
 ;
"RTN","ORY2801",7,0)
 Q
"RTN","ORY2801",8,0)
 ;
"RTN","ORY2801",9,0)
 ;
"RTN","ORY2801",10,0)
COMPARE(L,R) ;
"RTN","ORY2801",11,0)
 ;
"RTN","ORY2801",12,0)
 Q:$$RES("R") 1
"RTN","ORY2801",13,0)
 ;
"RTN","ORY2801",14,0)
 Q:'$L($O(L(""))) $$ADDREC^ORY2802("R")
"RTN","ORY2801",15,0)
 ;
"RTN","ORY2801",16,0)
 N C,OCXDD M C=L,C=R S OCXDD=$O(C("")) Q $$MULT("C",OCXDD)
"RTN","ORY2801",17,0)
 ;
"RTN","ORY2801",18,0)
 Q 0
"RTN","ORY2801",19,0)
 ;
"RTN","ORY2801",20,0)
RES(REF) ;
"RTN","ORY2801",21,0)
 ;
"RTN","ORY2801",22,0)
 N QUIT,SUB
"RTN","ORY2801",23,0)
 S QUIT=0
"RTN","ORY2801",24,0)
 S SUB="" F  S SUB=$O(@REF@(SUB)) Q:'$L(SUB)  I (SUB[":") D  Q:QUIT
"RTN","ORY2801",25,0)
 .N DD,DA
"RTN","ORY2801",26,0)
 .S DD=$P(SUB,":",1),DA=$P(SUB,":",2)
"RTN","ORY2801",27,0)
 .I $L(DA),'(DA=+DA) D  Q:QUIT
"RTN","ORY2801",28,0)
 ..N DANEW,SUBNEW
"RTN","ORY2801",29,0)
 ..S DANEW=$O(^OCXS($P(DA,U,2),"B",$P(DA,U,1),0))
"RTN","ORY2801",30,0)
 ..I 'DANEW W !!,$P($G(^OCXS(+$P(DA,U,2),0)),U,1),": ",$P(DA,U,1),"  could not resolve name.",!!,"    End Transport." S QUIT=1 Q
"RTN","ORY2801",31,0)
 ..S SUBNEW=DD_":"_DANEW
"RTN","ORY2801",32,0)
 ..I $D(@REF@(SUBNEW)) W !!," multiple #",DANEW," already existed." S QUIT=1 Q
"RTN","ORY2801",33,0)
 ..M @REF@(SUBNEW)=@REF@(SUB)
"RTN","ORY2801",34,0)
 ..K @REF@(SUB)
"RTN","ORY2801",35,0)
 ..S SUB=""
"RTN","ORY2801",36,0)
 .I $L(SUB),($D(@REF@(SUB))>9) S QUIT=$$RES($NA(@REF@(SUB)))
"RTN","ORY2801",37,0)
 ;
"RTN","ORY2801",38,0)
 Q QUIT
"RTN","ORY2801",39,0)
 ;
"RTN","ORY2801",40,0)
MULT(CREF,OCXDD) ;
"RTN","ORY2801",41,0)
 ;
"RTN","ORY2801",42,0)
 N OCXSUB,LREF,RREF,QUIT,OCXFLD
"RTN","ORY2801",43,0)
 S LREF="L"_$E(CREF,2,$L(CREF)),RREF="R"_$E(CREF,2,$L(CREF))
"RTN","ORY2801",44,0)
 ;
"RTN","ORY2801",45,0)
 S QUIT=0,OCXFLD="" F  S OCXFLD=$O(@CREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  D  Q:QUIT
"RTN","ORY2801",46,0)
 .I (OCXFLD[":") D  Q:QUIT
"RTN","ORY2801",47,0)
 ..Q:$$EXFLD(+OCXFLD,0)
"RTN","ORY2801",48,0)
 ..I '$D(@LREF@(OCXDD,OCXFLD,.01,"E")) D  M @LREF@(OCXDD,OCXFLD)=@RREF@(OCXDD,OCXFLD)
"RTN","ORY2801",49,0)
 ...D WARN("Missing multiple:",CREF,OCXDD,OCXFLD)
"RTN","ORY2801",50,0)
 ...S QUIT=$$ADDMULT^ORY2803(CREF,OCXDD,OCXFLD)
"RTN","ORY2801",51,0)
 ..I '$D(@RREF@(OCXDD,OCXFLD,.01,"E")) D  M @RREF@(OCXDD,OCXFLD)=@LREF@(OCXDD,OCXFLD)
"RTN","ORY2801",52,0)
 ...D WARN("Extra multiple:",CREF,OCXDD,OCXFLD)
"RTN","ORY2801",53,0)
 ...S QUIT=$$DELMULT^ORY2803($$APPEND(CREF,OCXDD),OCXFLD)
"RTN","ORY2801",54,0)
 .;
"RTN","ORY2801",55,0)
 .I (OCXFLD=+OCXFLD),'$$EXFLD(+OCXDD,OCXFLD) D
"RTN","ORY2801",56,0)
 ..I ($O(@CREF@(OCXDD,OCXFLD,""))="E") D  Q
"RTN","ORY2801",57,0)
 ...I $L($G(@RREF@(OCXDD,OCXFLD,"E"))),'$L($G(@LREF@(OCXDD,OCXFLD,"E"))) D  Q
"RTN","ORY2801",58,0)
 ....D WARN("Data Value Missing in "_$$NETNAME^OCXSEND,CREF,OCXDD,OCXFLD,"E")
"RTN","ORY2801",59,0)
 ....S QUIT=$$EDITFLD^ORY2804(CREF,OCXDD,OCXFLD,"E")
"RTN","ORY2801",60,0)
 ...I $L($G(@LREF@(OCXDD,OCXFLD,"E"))),'$L($G(@RREF@(OCXDD,OCXFLD,"E"))) D  Q
"RTN","ORY2801",61,0)
 ....D WARN("Extra Data Value in "_$$NETNAME^OCXSEND,CREF,OCXDD,OCXFLD,"E")
"RTN","ORY2801",62,0)
 ....S QUIT=$$DELFLD^ORY2804(CREF,OCXDD,OCXFLD,"E")
"RTN","ORY2801",63,0)
 ...I '(@LREF@(OCXDD,OCXFLD,"E")=@RREF@(OCXDD,OCXFLD,"E")) D
"RTN","ORY2801",64,0)
 ....D WARN("Inconsistent Data",CREF,OCXDD,OCXFLD,"E")
"RTN","ORY2801",65,0)
 ....S QUIT=$$EDITFLD^ORY2804(CREF,OCXDD,OCXFLD,"E")
"RTN","ORY2801",66,0)
 ..S OCXSUB=0 F  Q:QUIT  S OCXSUB=$O(@CREF@(OCXDD,OCXFLD,OCXSUB)) Q:'OCXSUB  I '($G(@RREF@(OCXDD,OCXFLD,OCXSUB))=$G(@LREF@(OCXDD,OCXFLD,OCXSUB))) D  Q
"RTN","ORY2801",67,0)
 ...D WARN("Inconsistent word Data",CREF,OCXDD,OCXFLD,OCXSUB)
"RTN","ORY2801",68,0)
 ...S QUIT=$$LOADWORD^ORY2802(RREF,OCXDD,OCXFLD,OCXSUB)
"RTN","ORY2801",69,0)
 .;
"RTN","ORY2801",70,0)
 .I 'QUIT,(OCXFLD[":") S QUIT=$$MULT($$APPEND(CREF,OCXDD),OCXFLD)
"RTN","ORY2801",71,0)
 Q QUIT
"RTN","ORY2801",72,0)
 ;
"RTN","ORY2801",73,0)
APPEND(ARRAY,OCXSUB) ;
"RTN","ORY2801",74,0)
 S:'(OCXSUB=+OCXSUB) OCXSUB=""""_OCXSUB_""""
"RTN","ORY2801",75,0)
 Q:'(ARRAY["(") ARRAY_"("_OCXSUB_")"
"RTN","ORY2801",76,0)
 Q $E(ARRAY,1,$L(ARRAY)-1)_","_OCXSUB_")"
"RTN","ORY2801",77,0)
 ;
"RTN","ORY2801",78,0)
EXFLD(FILE,OCXFLD) ;
"RTN","ORY2801",79,0)
 N OCXFNAM
"RTN","ORY2801",80,0)
 S OCXFNAM=$$FIELD^OCXSENDD(FILE,OCXFLD,"LABEL")
"RTN","ORY2801",81,0)
 I (OCXFNAM["UNIQUE OBJECT IDENTIFIER") Q 1
"RTN","ORY2801",82,0)
 I (FILE=860.2),(OCXFLD=.02) Q 1
"RTN","ORY2801",83,0)
 I (FILE=860.22),(OCXFLD=4) Q 1
"RTN","ORY2801",84,0)
 I (FILE=860.3),(OCXFLD=3) Q 1
"RTN","ORY2801",85,0)
 I (FILE=860.9),(OCXFLD=1) Q 1
"RTN","ORY2801",86,0)
 I (FILE=860.91) Q 1
"RTN","ORY2801",87,0)
 I (FILE=860.801) Q 1
"RTN","ORY2801",88,0)
 I (FILE=860.81) Q 1
"RTN","ORY2801",89,0)
 I (FILE=861.01) Q 1
"RTN","ORY2801",90,0)
 I (FILE=863.02) Q 1
"RTN","ORY2801",91,0)
 I (FILE=863.54) Q 1
"RTN","ORY2801",92,0)
 I (FILE=863.61) Q 1
"RTN","ORY2801",93,0)
 I (FILE=863.72) Q 1
"RTN","ORY2801",94,0)
 I (FILE=863.81) Q 1
"RTN","ORY2801",95,0)
 I ($E(OCXFNAM,1)="*") Q 1
"RTN","ORY2801",96,0)
 Q 0
"RTN","ORY2801",97,0)
 ;
"RTN","ORY2801",98,0)
WARN(MSG,CREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY2801",99,0)
 ;
"RTN","ORY2801",100,0)
 Q:$G(OCXAUTO)
"RTN","ORY2801",101,0)
 ;
"RTN","ORY2801",102,0)
 N D0,DASH,OCXDDPTH,OCXDPTR,FILE,FILEID,LREF,OCXPTR,RREF
"RTN","ORY2801",103,0)
 ;
"RTN","ORY2801",104,0)
 S DASH="",$P(DASH,"-",(55-$L(MSG)))="-"
"RTN","ORY2801",105,0)
 W !!,"------------",MSG,DASH
"RTN","ORY2801",106,0)
 D DSPHDR(CREF,OCXDD,OCXFLD)
"RTN","ORY2801",107,0)
 I $D(OCXSUB) D DSPFLD(CREF,OCXDD,OCXFLD,OCXSUB)
"RTN","ORY2801",108,0)
 I '$D(OCXSUB) D DSPREC(CREF,OCXDD,OCXFLD)
"RTN","ORY2801",109,0)
 ;
"RTN","ORY2801",110,0)
 W ! Q
"RTN","ORY2801",111,0)
 ;
"RTN","ORY2801",112,0)
DSPREC(CREF,OCXDD,OCXFLD) ;
"RTN","ORY2801",113,0)
 ;
"RTN","ORY2801",114,0)
 N OCXDPTR,OCXDDPTH,LEVL,OCXCREF,OCXSUB
"RTN","ORY2801",115,0)
 S OCXCREF=$$APPEND($$APPEND(CREF,OCXDD),OCXFLD)
"RTN","ORY2801",116,0)
 S OCXDDPTH=$P($P(OCXCREF,"(",2),")",1),LEVL=$L(OCXDDPTH,",")
"RTN","ORY2801",117,0)
 S OCXSUB="" F  S OCXSUB=$O(@OCXCREF@(OCXSUB)) Q:'$L(OCXSUB)  D
"RTN","ORY2801",118,0)
 .;
"RTN","ORY2801",119,0)
 .I '(OCXSUB[":"),'((OCXSUB=.01)&$O(@OCXCREF@(OCXSUB))) D
"RTN","ORY2801",120,0)
 ..N LINE
"RTN","ORY2801",121,0)
 ..Q:$$EXFLD(+OCXFLD,OCXSUB)
"RTN","ORY2801",122,0)
 ..I OCXFLD W !,?(5+((LEVL)*4)),$$FIELD^OCXSENDD(+OCXFLD,OCXSUB,"LABEL"),": ",$G(@OCXCREF@(OCXSUB,"E"))
"RTN","ORY2801",123,0)
 ..S LINE=0 F  S LINE=$O(@OCXCREF@(OCXSUB,LINE)) Q:'LINE  D
"RTN","ORY2801",124,0)
 ...W !,?(5+(LEVL*4)),$J(LINE,3),">",@OCXCREF@(OCXSUB,LINE)
"RTN","ORY2801",125,0)
 .;
"RTN","ORY2801",126,0)
 .I (OCXSUB[":") D
"RTN","ORY2801",127,0)
 ..N D0,OCXDD,FILENAME
"RTN","ORY2801",128,0)
 ..S D0=+$P(OCXSUB,":",2),OCXDD=+OCXSUB
"RTN","ORY2801",129,0)
 ..S FILENAME=$$FILENAME^OCXSENDD(OCXDD)
"RTN","ORY2801",130,0)
 ..I $L(FILENAME) W !,?(5+($L(LEVL)*4)),FILENAME
"RTN","ORY2801",131,0)
 ..E  W !!,?(5+(LEVL*4)),FILENAME
"RTN","ORY2801",132,0)
 ..W " ",D0,": ",$G(@OCXCREF@(OCXSUB,.01,"E"))
"RTN","ORY2801",133,0)
 ..D DSPREC($$APPEND(CREF,OCXDD),OCXFLD,OCXSUB)
"RTN","ORY2801",134,0)
 ;
"RTN","ORY2801",135,0)
 Q
"RTN","ORY2801",136,0)
 ;
"RTN","ORY2801",137,0)
DSPHDR(CREF,OCXDD,OCXFLD) ;
"RTN","ORY2801",138,0)
 ;
"RTN","ORY2801",139,0)
 N D0,FILE,FILEID,OCXPTR,OCXDDPTH
"RTN","ORY2801",140,0)
 S OCXDDPTH=$P($P($$APPEND($$APPEND(CREF,OCXDD),OCXFLD),"(",2),")",1)
"RTN","ORY2801",141,0)
 S FILE="" F OCXPTR=1:1:$L(OCXDDPTH,",") D
"RTN","ORY2801",142,0)
 .N OCXDD,D0,FILEID
"RTN","ORY2801",143,0)
 .S FILEID=$P(OCXDDPTH,",",OCXPTR)
"RTN","ORY2801",144,0)
 .I (FILEID[":") D
"RTN","ORY2801",145,0)
 ..S D0=+$P(FILEID,":",2),OCXDD=+$E(FILEID,2,$L(FILEID))
"RTN","ORY2801",146,0)
 ..W !,?(5+(OCXPTR*4)),$$FILENAME^OCXSENDD(OCXDD)
"RTN","ORY2801",147,0)
 ..S:$L(FILE) FILE=FILE_"," S FILE=FILE_FILEID
"RTN","ORY2801",148,0)
 ..I $D(@("L("_FILE_",.01,""E"")")) W ": ",@("L("_FILE_",.01,""E"")") W:D0 " [",D0,"]"
"RTN","ORY2801",149,0)
 ..E  I $D(@("R("_FILE_",.01,""E"")")) W ": ",@("R("_FILE_",.01,""E"")") W:D0 " [",D0,"]"
"RTN","ORY2801",150,0)
 ;
"RTN","ORY2801",151,0)
 Q
"RTN","ORY2801",152,0)
 ;
"RTN","ORY2801",153,0)
DSPFLD(CREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY2801",154,0)
 ;
"RTN","ORY2801",155,0)
 N OCXDPTR,LREF,RREF,OCXDDPTH
"RTN","ORY2801",156,0)
 ;
"RTN","ORY2801",157,0)
 S OCXDDPTH=$P($P($$APPEND(CREF,OCXDD),"(",2),")",1)
"RTN","ORY2801",158,0)
 S LREF="L("_OCXDDPTH_")",RREF="R("_OCXDDPTH_")"
"RTN","ORY2801",159,0)
 W !,?(5+(($L(OCXDDPTH,",")+1)*4)),$$FIELD^OCXSENDD(OCXDD,OCXFLD,"LABEL")," field [",OCXFLD,"]"
"RTN","ORY2801",160,0)
 I OCXSUB W " Line #",OCXSUB
"RTN","ORY2801",161,0)
 ;
"RTN","ORY2801",162,0)
 W:($D(@RREF@(OCXFLD,OCXSUB))) !,?(5+(($L(OCXDDPTH,",")+2)*4)),"(R) CPRS28.FO-SLC.MED.VA.GOV: ",@RREF@(OCXFLD,OCXSUB)
"RTN","ORY2801",163,0)
 W:($D(@LREF@(OCXFLD,OCXSUB))) !,?(5+(($L(OCXDDPTH,",")+2)*4)),"(L) ",$$NETNAME^OCXSEND,": ",@LREF@(OCXFLD,OCXSUB)
"RTN","ORY2801",164,0)
 ;
"RTN","ORY2801",165,0)
 Q
"RTN","ORY2801",166,0)
 ;
"RTN","ORY2801",167,0)
 W !,?10 Q 0 Q $$PAUSE
"RTN","ORY2801",168,0)
 ;
"RTN","ORY2801",169,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY2801",170,0)
 ;
"RTN","ORY2801",171,0)
NOW() N X,Y,%DT S X="N",%DT="T" D ^%DT S Y=$$DATE^OCXSENDD(Y) S:(Y["@") Y=$P(Y,"@",1)_" at "_$P(Y,"@",2) Q Y
"RTN","ORY2801",172,0)
 ;
"RTN","ORY2802")
0^84^B26766910
"RTN","ORY2802",1,0)
ORY2802 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY2802",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY2802",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY2802",4,0)
 ;
"RTN","ORY2802",5,0)
S ;
"RTN","ORY2802",6,0)
 ;  Record Utilities
"RTN","ORY2802",7,0)
 Q
"RTN","ORY2802",8,0)
 ;
"RTN","ORY2802",9,0)
ADDREC(OCXCREF) ;
"RTN","ORY2802",10,0)
 ;
"RTN","ORY2802",11,0)
 N QUIT,OCXDD,OCXDA,OCXGREF,OCXNAME
"RTN","ORY2802",12,0)
 S OCXDD=$O(@OCXCREF@("")) Q:'OCXDD 0
"RTN","ORY2802",13,0)
 S OCXNAME=$G(@OCXCREF@(OCXDD,.01,"E"))
"RTN","ORY2802",14,0)
 ;
"RTN","ORY2802",15,0)
 W "   record missing..."
"RTN","ORY2802",16,0)
 I (OCXFLAG["D") Q 0
"RTN","ORY2802",17,0)
 ;
"RTN","ORY2802",18,0)
 S OCXDA=0 D CREATE(OCXCREF,OCXDD,.OCXDA,0)
"RTN","ORY2802",19,0)
 S:$L(OCXNAME) ^TMP("OCXRULE",$J,"A",+OCXDD,OCXNAME)=""
"RTN","ORY2802",20,0)
 ;
"RTN","ORY2802",21,0)
 Q 0
"RTN","ORY2802",22,0)
 ;
"RTN","ORY2802",23,0)
CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;
"RTN","ORY2802",24,0)
 ;
"RTN","ORY2802",25,0)
 N OCXFLD,OCXGREF,OCXKEY
"RTN","ORY2802",26,0)
 ;
"RTN","ORY2802",27,0)
 I $L(OCXDA),'(OCXDA=+OCXDA) W !!,"Unresolved subscript." Q
"RTN","ORY2802",28,0)
 ;
"RTN","ORY2802",29,0)
 S OCXKEY=@OCXCREF@(OCXDD,.01,"E")
"RTN","ORY2802",30,0)
 S OCXGREF=$$GETREF(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)
"RTN","ORY2802",31,0)
 I 'OCXDA D
"RTN","ORY2802",32,0)
 .S OCXDA=$O(^TMP("OCXRULE",$J,"B",+OCXDD,OCXKEY,0)) Q:OCXDA
"RTN","ORY2802",33,0)
 .S OCXDA=$O(@(OCXGREF_""" "")"),-1)+1
"RTN","ORY2802",34,0)
 .F OCXDA=OCXDA:1 Q:'$D(@(OCXGREF_OCXDA_",0)"))
"RTN","ORY2802",35,0)
 .I $D(@(OCXGREF_OCXDA_",0)")) S OCXDA=0
"RTN","ORY2802",36,0)
 ;
"RTN","ORY2802",37,0)
 I 'OCXDA W !!,"Error adding record..." Q
"RTN","ORY2802",38,0)
 ;
"RTN","ORY2802",39,0)
 I '$D(@(OCXGREF_"0)")) S @(OCXGREF_"0)")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U
"RTN","ORY2802",40,0)
 ;
"RTN","ORY2802",41,0)
 S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD[":")  I '$$EXFLD^ORY2801(+OCXDD,OCXFLD) D
"RTN","ORY2802",42,0)
 .I $L($G(@OCXCREF@(OCXDD,OCXFLD,"E"))) D DIE(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,"E"),.OCXDA,OCXLVL)
"RTN","ORY2802",43,0)
 .I $O(@OCXCREF@(OCXDD,OCXFLD,0)) D WORD(OCXDD,OCXGREF,OCXFLD,.OCXDA,OCXCREF)
"RTN","ORY2802",44,0)
 ;
"RTN","ORY2802",45,0)
 D PUSH(.OCXDA)
"RTN","ORY2802",46,0)
 S OCXFLD="" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD[":") D
"RTN","ORY2802",47,0)
 .S OCXDA=$P(OCXFLD,":",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)
"RTN","ORY2802",48,0)
 D POP(.OCXDA)
"RTN","ORY2802",49,0)
 Q
"RTN","ORY2802",50,0)
 ;
"RTN","ORY2802",51,0)
LOADWORD(RREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY2802",52,0)
 ;
"RTN","ORY2802",53,0)
 N QUIT,DDPATH,INDEX,OCXDA,OCXGREF
"RTN","ORY2802",54,0)
 S DDPATH=$P($P($$APPEND(RREF,OCXDD),"(",2),")",1)
"RTN","ORY2802",55,0)
 F INDEX=1:1:$L(DDPATH,",") S OCXDA($L(DDPATH,",")-INDEX)=+$P($P(DDPATH,",",INDEX),":",2)
"RTN","ORY2802",56,0)
 S OCXDA=$G(OCXDA(0)) K OCXDA(0)
"RTN","ORY2802",57,0)
 Q:(OCXFLAG["D") 0
"RTN","ORY2802",58,0)
 I (OCXFLAG["A") S QUIT=$$READ("Y"," Do you want to reload the local '"_$$FIELD^OCXSENDD(+OCXDD,+OCXFLD,"LABEL")_"' field ?","YES") Q:'QUIT (QUIT[U)
"RTN","ORY2802",59,0)
 S OCXGREF=$$GETREF(+OCXDD,.OCXDA,$L(DDPATH,",")-1) Q:'$L(OCXGREF)
"RTN","ORY2802",60,0)
 D WORD(OCXDD,OCXGREF,OCXFLD,.OCXDA,RREF)
"RTN","ORY2802",61,0)
 Q 0
"RTN","ORY2802",62,0)
 ;
"RTN","ORY2802",63,0)
GETREF(OCXDD,OCXDA,OCXLVL) ;
"RTN","ORY2802",64,0)
 ;
"RTN","ORY2802",65,0)
 Q:'OCXDD ""
"RTN","ORY2802",66,0)
 ;
"RTN","ORY2802",67,0)
 N OCXIENS,OCXERR,OCXX
"RTN","ORY2802",68,0)
 S OCXIENS=$$IENS^DILF(.OCXDA),OCXERR=""
"RTN","ORY2802",69,0)
 S OCXX=$$ROOT^DILFD(OCXDD,OCXIENS,0,OCXERR)
"RTN","ORY2802",70,0)
 Q OCXX
"RTN","ORY2802",71,0)
 ;
"RTN","ORY2802",72,0)
WORD(DD,GREF,FLD,DA,RREF) ;
"RTN","ORY2802",73,0)
 ;
"RTN","ORY2802",74,0)
 N SUB,GLROOT,LINE
"RTN","ORY2802",75,0)
 S SUB=$P($$FIELD^OCXSENDD(+DD,FLD,"GLOBAL SUBSCRIPT LOCATION"),";",1) S:'(SUB=+SUB) SUB=""""_SUB_""""
"RTN","ORY2802",76,0)
 S GLROOT=GREF_DA_","_SUB_")" K @GLROOT
"RTN","ORY2802",77,0)
 S LINE=0 F  S LINE=$O(@RREF@(DD,FLD,LINE)) Q:'LINE  D
"RTN","ORY2802",78,0)
 .S @GLROOT@($O(@GLROOT@(""),-1)+1,0)=@RREF@(DD,FLD,LINE)
"RTN","ORY2802",79,0)
 S LINE=$O(@GLROOT@(""),-1),@GLROOT@(0)=U_U_LINE_U_LINE_U_$$DATE("T")_U
"RTN","ORY2802",80,0)
 ;
"RTN","ORY2802",81,0)
 Q
"RTN","ORY2802",82,0)
 ;
"RTN","ORY2802",83,0)
DATE(X) N %DT,Y S %DT="" D ^%DT Q +Y
"RTN","ORY2802",84,0)
 ;
"RTN","ORY2802",85,0)
DIE(OCXDD,OCXDIC,OCXFLD,OCXVAL,OCXDA,OCXLVL) ;
"RTN","ORY2802",86,0)
 ;
"RTN","ORY2802",87,0)
 N DIC,DIE,X,Y,DR,DA,OCXDVAL,OCXPTR,OCXGREF,D0,OCXSCR
"RTN","ORY2802",88,0)
 S (D0,DA)=OCXDA,(DIC,DIE)=OCXDIC,DR=""
"RTN","ORY2802",89,0)
 S:OCXLVL D0=OCXDA(1),DR="S DA(1)="_(+D0)_",D0="_(+D0)_";"
"RTN","ORY2802",90,0)
 S:OCXVAL="?" OCXVAL="? " S DR=DR_OCXFLD_"///^S X=OCXVAL"
"RTN","ORY2802",91,0)
 I '(OCXVAL="@") W !,?(OCXLVL*5),$$FIELD^OCXSENDD(+OCXDD,OCXFLD,"LABEL"),": ",OCXVAL
"RTN","ORY2802",92,0)
 ;
"RTN","ORY2802",93,0)
 I '(OCXVAL="@") D
"RTN","ORY2802",94,0)
 .N OCXIEN,SHORT
"RTN","ORY2802",95,0)
 .S OCXPTR=+$P($$FIELD^OCXSENDD(+OCXDD,OCXFLD,"SPECIFIER"),"P",2)
"RTN","ORY2802",96,0)
 .Q:'OCXPTR
"RTN","ORY2802",97,0)
 .S OCXGREF="^"_$$FIELD^OCXSENDD(+OCXDD,OCXFLD,"POINTER")
"RTN","ORY2802",98,0)
 .I '($E(OCXGREF,1,4)="^OCX"),'(OCXGREF="^ORD(100.9,"),'(OCXGREF="^ORD(100.8,") Q
"RTN","ORY2802",99,0)
 .Q:$$DIC(OCXGREF,OCXVAL,0)
"RTN","ORY2802",100,0)
 .S OCXIEN=$$DIC(OCXGREF,OCXVAL,1)
"RTN","ORY2802",101,0)
 .S ^TMP("OCXRULE",$J,"B",OCXPTR,OCXVAL,OCXIEN)=""
"RTN","ORY2802",102,0)
 ;
"RTN","ORY2802",103,0)
 S OCXSCR=1
"RTN","ORY2802",104,0)
 D ^DIE
"RTN","ORY2802",105,0)
 ;
"RTN","ORY2802",106,0)
 ; I $D(Y) -> DIE FILER ERROR
"RTN","ORY2802",107,0)
 I $D(Y) W "   ^DIE filer data error..." S OCXDIER=$G(OCXDIER)+1
"RTN","ORY2802",108,0)
 I '$D(Y) W "    ...Correct data Filed"
"RTN","ORY2802",109,0)
 ;
"RTN","ORY2802",110,0)
 Q
"RTN","ORY2802",111,0)
 ;
"RTN","ORY2802",112,0)
DIC(DIC,X,OCXADD) N OCXSCR S DIC(0)="",OCXSCR=1 S:OCXADD DIC(0)="L" D ^DIC Q:(+Y>0) +Y Q 0
"RTN","ORY2802",113,0)
 ;
"RTN","ORY2802",114,0)
PUSH(OCXDA) ;
"RTN","ORY2802",115,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)
"RTN","ORY2802",116,0)
 S OCXDA(1)=OCXDA,OCXDA=0
"RTN","ORY2802",117,0)
 Q
"RTN","ORY2802",118,0)
 ;
"RTN","ORY2802",119,0)
POP(OCXDA) ;
"RTN","ORY2802",120,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))
"RTN","ORY2802",121,0)
 S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""),-1))
"RTN","ORY2802",122,0)
 Q
"RTN","ORY2802",123,0)
 ;
"RTN","ORY2802",124,0)
APPEND(ARRAY,OCXSUB) ;
"RTN","ORY2802",125,0)
 S:'(OCXSUB=+OCXSUB) OCXSUB=""""_OCXSUB_""""
"RTN","ORY2802",126,0)
 Q:'(ARRAY["(") ARRAY_"("_OCXSUB_")"
"RTN","ORY2802",127,0)
 Q $E(ARRAY,1,$L(ARRAY)-1)_","_OCXSUB_")"
"RTN","ORY2802",128,0)
 ;
"RTN","ORY2802",129,0)
READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;
"RTN","ORY2802",130,0)
 N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORY2802",131,0)
 Q:'$L($G(OCXZ0)) U
"RTN","ORY2802",132,0)
 S DIR(0)=OCXZ0
"RTN","ORY2802",133,0)
 S:$L($G(OCXZA)) DIR("A")=OCXZA
"RTN","ORY2802",134,0)
 S:$L($G(OCXZB)) DIR("B")=OCXZB
"RTN","ORY2802",135,0)
 F OCXLINE=1:1:($G(OCXZL)-1) W !
"RTN","ORY2802",136,0)
 D ^DIR
"RTN","ORY2802",137,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","ORY2802",138,0)
 Q Y
"RTN","ORY2802",139,0)
 ;
"RTN","ORY2802",140,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY2802",141,0)
 ;
"RTN","ORY2803")
0^85^B12996879
"RTN","ORY2803",1,0)
ORY2803 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY2803",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY2803",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY2803",4,0)
 ;
"RTN","ORY2803",5,0)
S ;
"RTN","ORY2803",6,0)
 ;  Multiple Utilities
"RTN","ORY2803",7,0)
 Q
"RTN","ORY2803",8,0)
 ;
"RTN","ORY2803",9,0)
ADDMULT(OCXCREF,OCXDD,OCXFLD) ;
"RTN","ORY2803",10,0)
 ;
"RTN","ORY2803",11,0)
 ;
"RTN","ORY2803",12,0)
 N QUIT,OCXDA,OCXGREF,OCXNAME,DDPATH,INDEX
"RTN","ORY2803",13,0)
 ;
"RTN","ORY2803",14,0)
 S DDPATH=$P($P($$APPEND($$APPEND(OCXCREF,OCXDD),OCXFLD),"(",2),")",1)
"RTN","ORY2803",15,0)
 F INDEX=1:1:$L(DDPATH,",") S OCXDA($L(DDPATH,",")-INDEX)=+$P($P(DDPATH,",",INDEX),":",2)
"RTN","ORY2803",16,0)
 S OCXDA=$G(OCXDA(0)) K OCXDA(0)
"RTN","ORY2803",17,0)
 ;
"RTN","ORY2803",18,0)
 Q:(OCXFLAG["D") 0
"RTN","ORY2803",19,0)
 I (OCXFLAG["A") S QUIT=$$READ("Y"," Do you want to add a local '"_$$FILENAME^OCXSENDD(+OCXFLD)_"' multiple ?","YES") Q:'QUIT (QUIT[U)
"RTN","ORY2803",20,0)
 ;
"RTN","ORY2803",21,0)
 S OCXGREF=$$GETREF^ORY2802(+OCXFLD,.OCXDA,1)
"RTN","ORY2803",22,0)
 D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,1)
"RTN","ORY2803",23,0)
 ;
"RTN","ORY2803",24,0)
 Q 0
"RTN","ORY2803",25,0)
 ;
"RTN","ORY2803",26,0)
DELMULT(OCXCREF,OCXDD) ;
"RTN","ORY2803",27,0)
 ;
"RTN","ORY2803",28,0)
 N QUIT,OCXGREF,DA,INDEX,DDPATH
"RTN","ORY2803",29,0)
 ;
"RTN","ORY2803",30,0)
 Q:(OCXFLAG["D") 0
"RTN","ORY2803",31,0)
 I (OCXFLAG["A") S QUIT=$$READ("Y"," Do you want to delete the local '"_$$FILENAME^OCXSENDD(+OCXDD)_"' multiple ?","YES") Q:'QUIT (QUIT[U)
"RTN","ORY2803",32,0)
 ;
"RTN","ORY2803",33,0)
 S DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),"(",2),")",1)
"RTN","ORY2803",34,0)
 F INDEX=1:1:$L(DDPATH,",") S DA($L(DDPATH,",")-INDEX)=+$P($P(DDPATH,",",INDEX),":",2)
"RTN","ORY2803",35,0)
 S DA=$G(DA(0)) K DA(0)
"RTN","ORY2803",36,0)
 S OCXGREF=$$GETREF^ORY2802(+OCXDD,.DA,1)
"RTN","ORY2803",37,0)
 ;
"RTN","ORY2803",38,0)
 D DIE^ORY2802(+OCXDD,OCXGREF,.01,"@",.DA,$L(DDPATH,",")-1)
"RTN","ORY2803",39,0)
 K @OCXCREF@(OCXDD) W !!,"  deleted..."
"RTN","ORY2803",40,0)
 ;
"RTN","ORY2803",41,0)
 Q 0
"RTN","ORY2803",42,0)
 ;
"RTN","ORY2803",43,0)
CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;
"RTN","ORY2803",44,0)
 ;
"RTN","ORY2803",45,0)
 N OCXFLD,OCXGREF
"RTN","ORY2803",46,0)
 ;
"RTN","ORY2803",47,0)
 S OCXGREF=$$GETREF^ORY2802(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)  S:'OCXDA OCXDA=$O(@(OCXGREF_"""@"")"),-1)+1
"RTN","ORY2803",48,0)
 ;
"RTN","ORY2803",49,0)
 I '$D(@(OCXGREF_"0)")) S @(OCXGREF_"0)")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U
"RTN","ORY2803",50,0)
 ;
"RTN","ORY2803",51,0)
 S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD[":")  I '$$EXFLD^ORY2801(+OCXDD,OCXFLD) D
"RTN","ORY2803",52,0)
 .I $L($G(@OCXCREF@(OCXDD,OCXFLD,"E"))) D DIE^ORY2802(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,"E"),.OCXDA,OCXLVL)
"RTN","ORY2803",53,0)
 ;
"RTN","ORY2803",54,0)
 D PUSH(.OCXDA)
"RTN","ORY2803",55,0)
 S OCXFLD="" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD[":") D
"RTN","ORY2803",56,0)
 .S OCXDA=$P(OCXFLD,":",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)
"RTN","ORY2803",57,0)
 D POP(.OCXDA)
"RTN","ORY2803",58,0)
 Q
"RTN","ORY2803",59,0)
 ;
"RTN","ORY2803",60,0)
PUSH(OCXDA) ;
"RTN","ORY2803",61,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)
"RTN","ORY2803",62,0)
 S OCXDA(1)=OCXDA,OCXDA=0
"RTN","ORY2803",63,0)
 Q
"RTN","ORY2803",64,0)
 ;
"RTN","ORY2803",65,0)
POP(OCXDA) ;
"RTN","ORY2803",66,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))
"RTN","ORY2803",67,0)
 S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""),-1))
"RTN","ORY2803",68,0)
 Q
"RTN","ORY2803",69,0)
 ;
"RTN","ORY2803",70,0)
APPEND(ARRAY,OCXSUB) ;
"RTN","ORY2803",71,0)
 S:'(OCXSUB=+OCXSUB) OCXSUB=""""_OCXSUB_""""
"RTN","ORY2803",72,0)
 Q:'(ARRAY["(") ARRAY_"("_OCXSUB_")"
"RTN","ORY2803",73,0)
 Q $E(ARRAY,1,$L(ARRAY)-1)_","_OCXSUB_")"
"RTN","ORY2803",74,0)
 ;
"RTN","ORY2803",75,0)
READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;
"RTN","ORY2803",76,0)
 N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORY2803",77,0)
 Q:'$L($G(OCXZ0)) U
"RTN","ORY2803",78,0)
 S DIR(0)=OCXZ0
"RTN","ORY2803",79,0)
 S:$L($G(OCXZA)) DIR("A")=OCXZA
"RTN","ORY2803",80,0)
 S:$L($G(OCXZB)) DIR("B")=OCXZB
"RTN","ORY2803",81,0)
 F OCXLINE=1:1:($G(OCXZL)-1) W !
"RTN","ORY2803",82,0)
 D ^DIR
"RTN","ORY2803",83,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","ORY2803",84,0)
 Q Y
"RTN","ORY2803",85,0)
 ;
"RTN","ORY2803",86,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY2803",87,0)
 ;
"RTN","ORY2804")
0^86^B13526807
"RTN","ORY2804",1,0)
ORY2804 ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY2804",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY2804",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY2804",4,0)
 ;
"RTN","ORY2804",5,0)
S ;
"RTN","ORY2804",6,0)
 ;  Field Utilities
"RTN","ORY2804",7,0)
 Q
"RTN","ORY2804",8,0)
 ;
"RTN","ORY2804",9,0)
EDITFLD(OCXCREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY2804",10,0)
 ;
"RTN","ORY2804",11,0)
 N DDPATH,OCXDA,OCXPC,OCXLVL,QUIT
"RTN","ORY2804",12,0)
 ;
"RTN","ORY2804",13,0)
 S QUIT=0,DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),"(",2),")",1)
"RTN","ORY2804",14,0)
 S OCXLVL=$L(DDPATH,",")
"RTN","ORY2804",15,0)
 F OCXPC=1:1:OCXLVL S OCXDA(OCXLVL-OCXPC)=+$P($P(DDPATH,",",OCXPC),":",2)
"RTN","ORY2804",16,0)
 S OCXDA=OCXDA(0) K OCXDA(0)
"RTN","ORY2804",17,0)
 I $L($G(@OCXCREF@(OCXDD,OCXFLD,"E"))) D
"RTN","ORY2804",18,0)
 .N RESP
"RTN","ORY2804",19,0)
 .Q:(OCXFLAG["D")
"RTN","ORY2804",20,0)
 .I (OCXFLAG["A") S RESP=$$READ("Y"," Do you want to change the local '"_$$FILENAME^OCXSENDD(+OCXDD)_"' field ?","YES") I 'RESP S QUIT=(RESP[U) Q
"RTN","ORY2804",21,0)
 .S OCXGREF=$$GETREF^ORY2802(+OCXDD,.OCXDA,OCXLVL-1) Q:'$L(OCXGREF)
"RTN","ORY2804",22,0)
 .D DIE^ORY2802(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,"E"),.OCXDA,OCXLVL-1)
"RTN","ORY2804",23,0)
 ;
"RTN","ORY2804",24,0)
 Q QUIT
"RTN","ORY2804",25,0)
 ;
"RTN","ORY2804",26,0)
DELFLD(OCXCREF,OCXDD,OCXFLD,OCXSUB) ;
"RTN","ORY2804",27,0)
 ;
"RTN","ORY2804",28,0)
 N DDPATH,OCXDA,OCXPC,OCXLVL,QUIT,RESP
"RTN","ORY2804",29,0)
 ;
"RTN","ORY2804",30,0)
 S QUIT=0,DDPATH=$P($P($$APPEND(OCXCREF,OCXDD),"(",2),")",1)
"RTN","ORY2804",31,0)
 S OCXLVL=$L(DDPATH,",")
"RTN","ORY2804",32,0)
 F OCXPC=1:1:OCXLVL S OCXDA(OCXLVL-OCXPC)=+$P($P(DDPATH,",",OCXPC),":",2)
"RTN","ORY2804",33,0)
 S OCXDA=OCXDA(0) K OCXDA(0)
"RTN","ORY2804",34,0)
 Q:(OCXFLAG["D") 0
"RTN","ORY2804",35,0)
 I (OCXFLAG["A") S RESP=$$READ("Y"," Do you want to Delete the local '"_$$FILENAME^OCXSENDD(+OCXDD)_"' value ?","YES") I 'RESP S QUIT=(RESP[U) Q QUIT
"RTN","ORY2804",36,0)
 S OCXGREF=$$GETREF^ORY2802(+OCXDD,.OCXDA,OCXLVL-1) Q:'$L(OCXGREF)
"RTN","ORY2804",37,0)
 D DIE^ORY2802(OCXDD,OCXGREF,OCXFLD,"@",.OCXDA,OCXLVL-1)
"RTN","ORY2804",38,0)
 ;
"RTN","ORY2804",39,0)
 Q QUIT
"RTN","ORY2804",40,0)
 ;
"RTN","ORY2804",41,0)
CREATE(OCXCREF,OCXDD,OCXDA,OCXLVL) ;
"RTN","ORY2804",42,0)
 ;
"RTN","ORY2804",43,0)
 N OCXFLD,OCXGREF
"RTN","ORY2804",44,0)
 ;
"RTN","ORY2804",45,0)
 S OCXGREF=$$GETREF^ORY2802(+OCXDD,.OCXDA,OCXLVL) Q:'$L(OCXGREF)  S:'OCXDA OCXDA=$O(@(OCXGREF_"""@"")"),-1)+1
"RTN","ORY2804",46,0)
 ;
"RTN","ORY2804",47,0)
 I '$D(@(OCXGREF_"0)")) S @(OCXGREF_"0)")=U_$$FILEHDR^OCXSENDD(+OCXDD)_U_U
"RTN","ORY2804",48,0)
 ;
"RTN","ORY2804",49,0)
 S OCXFLD=0 F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'OCXFLD  Q:(OCXFLD[":")  I '$$EXFLD^ORY2801(+OCXDD,OCXFLD) D
"RTN","ORY2804",50,0)
 .I $L($G(@OCXCREF@(OCXDD,OCXFLD,"E"))) D DIE^ORY2802(OCXDD,OCXGREF,OCXFLD,@OCXCREF@(OCXDD,OCXFLD,"E"),.OCXDA,OCXLVL)
"RTN","ORY2804",51,0)
 ;
"RTN","ORY2804",52,0)
 D PUSH(.OCXDA)
"RTN","ORY2804",53,0)
 S OCXFLD="" F  S OCXFLD=$O(@OCXCREF@(OCXDD,OCXFLD)) Q:'$L(OCXFLD)  I (OCXFLD[":") D
"RTN","ORY2804",54,0)
 .S OCXDA=$P(OCXFLD,":",2) W ! D CREATE($$APPEND(OCXCREF,OCXDD),OCXFLD,.OCXDA,OCXLVL+1)
"RTN","ORY2804",55,0)
 D POP(.OCXDA)
"RTN","ORY2804",56,0)
 Q
"RTN","ORY2804",57,0)
 ;
"RTN","ORY2804",58,0)
PUSH(OCXDA) ;
"RTN","ORY2804",59,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB),-1) Q:'OCXSUB  S OCXDA(OCXSUB+1)=OCXDA(OCXSUB)
"RTN","ORY2804",60,0)
 S OCXDA(1)=OCXDA,OCXDA=0
"RTN","ORY2804",61,0)
 Q
"RTN","ORY2804",62,0)
 ;
"RTN","ORY2804",63,0)
POP(OCXDA) ;
"RTN","ORY2804",64,0)
 N OCXSUB S OCXSUB="" F  S OCXSUB=$O(OCXDA(OCXSUB)) Q:'OCXSUB  S OCXDA(OCXSUB)=$G(OCXDA(OCXSUB+1))
"RTN","ORY2804",65,0)
 S OCXDA=OCXDA(1) K OCXDA($O(OCXDA(""),-1))
"RTN","ORY2804",66,0)
 Q
"RTN","ORY2804",67,0)
 ;
"RTN","ORY2804",68,0)
APPEND(ARRAY,OCXSUB) ;
"RTN","ORY2804",69,0)
 S:'(OCXSUB=+OCXSUB) OCXSUB=""""_OCXSUB_""""
"RTN","ORY2804",70,0)
 Q:'(ARRAY["(") ARRAY_"("_OCXSUB_")"
"RTN","ORY2804",71,0)
 Q $E(ARRAY,1,$L(ARRAY)-1)_","_OCXSUB_")"
"RTN","ORY2804",72,0)
 ;
"RTN","ORY2804",73,0)
READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;
"RTN","ORY2804",74,0)
 N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORY2804",75,0)
 Q:'$L($G(OCXZ0)) U
"RTN","ORY2804",76,0)
 S DIR(0)=OCXZ0
"RTN","ORY2804",77,0)
 S:$L($G(OCXZA)) DIR("A")=OCXZA
"RTN","ORY2804",78,0)
 S:$L($G(OCXZB)) DIR("B")=OCXZB
"RTN","ORY2804",79,0)
 F OCXLINE=1:1:($G(OCXZL)-1) W !
"RTN","ORY2804",80,0)
 D ^DIR
"RTN","ORY2804",81,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","ORY2804",82,0)
 Q Y
"RTN","ORY2804",83,0)
 ;
"RTN","ORY2804",84,0)
PAUSE() W "  Press Enter " R X:DTIME W ! Q (X[U)
"RTN","ORY2804",85,0)
 ;
"RTN","ORY280ES")
0^82^B12630040
"RTN","ORY280ES",1,0)
ORY280ES ;SLC/RJS,CLA - OCX PACKAGE RULE TRANSPORT ROUTINE (Delete after Install of OR*3*280) ;MAR 3,2010 at 07:20
"RTN","ORY280ES",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17,1997;Build 85
"RTN","ORY280ES",3,0)
 ;;  ;;ORDER CHECK EXPERT version 1.01 released OCT 29,1998
"RTN","ORY280ES",4,0)
 ;
"RTN","ORY280ES",5,0)
S ;
"RTN","ORY280ES",6,0)
 ;
"RTN","ORY280ES",7,0)
 N OCXDIER,QUIT,LINE,TEXT,REMOTE,LOCAL,D0,OPCODE,REF,OCXFLAG S QUIT=0
"RTN","ORY280ES",8,0)
 N OCXAUTO,OCZSCR
"RTN","ORY280ES",9,0)
 ;
"RTN","ORY280ES",10,0)
 D DOT
"RTN","ORY280ES",11,0)
 I $L($T(VERSION^OCXOCMP)),($$VERSION^OCXOCMP="ORDER CHECK EXPERT version 1.01 released OCT 29,1998"),1
"RTN","ORY280ES",12,0)
 E  D  Q
"RTN","ORY280ES",13,0)
 .W !
"RTN","ORY280ES",14,0)
 .W !,"Rule Transport aborted, version mismatch."
"RTN","ORY280ES",15,0)
 .W !,"Current Local version: ",$$VERSION^OCXOCMP
"RTN","ORY280ES",16,0)
 .W !,"   Rule Transport Version: ORDER CHECK EXPERT version 1.01 released OCT 29,1998"
"RTN","ORY280ES",17,0)
 I '$D(DTIME) W !!,"DTIME not defined !!",!! Q
"RTN","ORY280ES",18,0)
 W !!,"Order Check Expert System Rule Transporter"
"RTN","ORY280ES",19,0)
 W !," Created: MAR 3,2010 at 07:20  at  CPRS28.FO-SLC.MED.VA.GOV"
"RTN","ORY280ES",20,0)
 W !," Current Date: ",$$NOW^ORY2800,"  at  ",$$NETNAME^OCXSEND,!!
"RTN","ORY280ES",21,0)
 S LASTFILE=0 K ^TMP("OCXRULE",$J)
"RTN","ORY280ES",22,0)
 S ^TMP("OCXRULE",$J)=($P($H,",",2)+($H*86400)+(1*60*60))_" <- ^TMP ENTRY EXPIRATION DATE FOR ^OCXOPURG"
"RTN","ORY280ES",23,0)
 S OCXFLAG="O"
"RTN","ORY280ES",24,0)
 ;
"RTN","ORY280ES",25,0)
RUN ;
"RTN","ORY280ES",26,0)
 ;
"RTN","ORY280ES",27,0)
 W !,"Loading Data " D ^ORY28001
"RTN","ORY280ES",28,0)
 ;
"RTN","ORY280ES",29,0)
 S LINE=0 F  S LINE=$O(^TMP("OCXRULE",$J,LINE)) Q:'LINE   D  Q:QUIT
"RTN","ORY280ES",30,0)
 .D:'(LINE#50) STATUS^OCXOPOST(LINE,$O(^TMP("OCXRULE",$J," "),-1))
"RTN","ORY280ES",31,0)
 .S TEXT=$G(^TMP("OCXRULE",$J,LINE)) I $L(TEXT) D  Q:QUIT
"RTN","ORY280ES",32,0)
 ..S TEXT=$P(TEXT,";",2,999),OPCODE=$P(TEXT,U,1),TEXT=$P(TEXT,U,2,999)
"RTN","ORY280ES",33,0)
 ..;
"RTN","ORY280ES",34,0)
 ..I OPCODE="KEY" D DOT S LOCAL="",D0=$$GETFILE^ORY2800(+$P(TEXT,U,1),$P(TEXT,U,2),.LOCAL) S QUIT=(D0=(-10)) Q
"RTN","ORY280ES",35,0)
 ..I OPCODE="R" S REF="REMOTE("_$P(TEXT,":",1)_":"_D0_$P(TEXT,":",2,99)_")" Q
"RTN","ORY280ES",36,0)
 ..I OPCODE="D",$D(REF) S @REF=$P(TEXT,U,1,999) K REF Q
"RTN","ORY280ES",37,0)
 ..;
"RTN","ORY280ES",38,0)
 ..I OPCODE="EOR" S QUIT=$$COMPARE^ORY2801(.LOCAL,.REMOTE) K LOCAL,REMOTE Q
"RTN","ORY280ES",39,0)
 ..I OPCODE="EOF" K LOCAL,REMOTE Q
"RTN","ORY280ES",40,0)
 ..I OPCODE="SOF" W !,"  Installing '",TEXT,"' records... " Q
"RTN","ORY280ES",41,0)
 ..I OPCODE="ROOT" D  Q
"RTN","ORY280ES",42,0)
 ...N FILE,DATA
"RTN","ORY280ES",43,0)
 ...S FILE=U_$P(TEXT,U,1),DATA=$P(TEXT,U,2,3)
"RTN","ORY280ES",44,0)
 ...I ($P($G(@FILE),U,1,2)=DATA) Q
"RTN","ORY280ES",45,0)
 ...S $P(@FILE,U,1,2)=DATA
"RTN","ORY280ES",46,0)
 ...W !,"  Restoring file #",(+$P(DATA,U,2))," zero node"
"RTN","ORY280ES",47,0)
 ..;
"RTN","ORY280ES",48,0)
 ..W !,"Unknown OpCode: ",OPCODE,"  in: ",TEXT S QUIT=$$PAUSE^ORY2800 W !
"RTN","ORY280ES",49,0)
 ;
"RTN","ORY280ES",50,0)
 K ^TMP("OCXRULE",$J)
"RTN","ORY280ES",51,0)
 ;
"RTN","ORY280ES",52,0)
 I $D(^OCXS) D
"RTN","ORY280ES",53,0)
 .N FILE,DO,PD0,CNT
"RTN","ORY280ES",54,0)
 .S FILE=0 F  S FILE=$O(^OCXS(FILE)) Q:'FILE  D
"RTN","ORY280ES",55,0)
 ..S D0=0 F CNT=0:1 S PD0=D0,D0=$O(^OCXS(FILE,D0)) Q:'D0
"RTN","ORY280ES",56,0)
 ..S $P(^OCXS(FILE,0),U,3,4)=CNT_U_PD0
"RTN","ORY280ES",57,0)
 ;
"RTN","ORY280ES",58,0)
 I $G(OCXDIER) D
"RTN","ORY280ES",59,0)
 .W !!!!!!!
"RTN","ORY280ES",60,0)
 .W !,?5,"******************** Warning ******************** "
"RTN","ORY280ES",61,0)
 .W !,?7,+$G(OCXDIER)," data filing error",$S(($G(OCXDIER)=1):"",1:"s"),"."
"RTN","ORY280ES",62,0)
 .W !,?7,"Some expert system rules may be incomplete."
"RTN","ORY280ES",63,0)
 .W !,?5,"******************** Warning ******************** "
"RTN","ORY280ES",64,0)
 I '$G(OCXDIER) W !!,?5," No data filing errors."
"RTN","ORY280ES",65,0)
 W !!,"Transport Finished..."
"RTN","ORY280ES",66,0)
 ;
"RTN","ORY280ES",67,0)
 D
"RTN","ORY280ES",68,0)
 .N OCXOETIM
"RTN","ORY280ES",69,0)
 .D BMES^XPDUTL("---Creating Order Check Routines-----------------------------------")
"RTN","ORY280ES",70,0)
 .D AUTO^OCXOCMP
"RTN","ORY280ES",71,0)
 ;
"RTN","ORY280ES",72,0)
 Q
"RTN","ORY280ES",73,0)
 ;
"RTN","ORY280ES",74,0)
DOT Q:$G(OCXAUTO)  W:($X>70) ! W " ." Q
"RTN","ORY280ES",75,0)
 ;
"RTN","ORY280ES",76,0)
READ(OCXZ0,OCXZA,OCXZB,OCXZL) ;
"RTN","ORY280ES",77,0)
 N OCXLINE,DIR,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ORY280ES",78,0)
 Q:'$L($G(OCXZ0)) U
"RTN","ORY280ES",79,0)
 S DIR(0)=OCXZ0
"RTN","ORY280ES",80,0)
 S:$L($G(OCXZA)) DIR("A")=OCXZA
"RTN","ORY280ES",81,0)
 S:$L($G(OCXZB)) DIR("B")=OCXZB
"RTN","ORY280ES",82,0)
 F OCXLINE=1:1:($G(OCXZL)-1) W !
"RTN","ORY280ES",83,0)
 D ^DIR
"RTN","ORY280ES",84,0)
 I $D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT) Q U
"RTN","ORY280ES",85,0)
 Q Y
"RTN","ORY280ES",86,0)
 ;
"RTN","ORY280P")
0^91^B3900420
"RTN","ORY280P",1,0)
ORY280P ;slc/dcm - Export Package Level Parameters ;3/17/10  09:18
"RTN","ORY280P",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**280**;Dec 17, 1997;Build 85
"RTN","ORY280P",3,0)
MAIN ; main (initial) parameter transport routine
"RTN","ORY280P",4,0)
 K ^TMP($J,"XPARRSTR")
"RTN","ORY280P",5,0)
 N ENT,IDX,ROOT,REF,VAL,I
"RTN","ORY280P",6,0)
 S ROOT=$NAME(^TMP($J,"XPARRSTR")),ROOT=$E(ROOT,1,$L(ROOT)-1)_","
"RTN","ORY280P",7,0)
 D LOAD
"RTN","ORY280P",8,0)
 S IDX=0,ENT="PKG.ORDER ENTRY/RESULTS REPORTING"
"RTN","ORY280P",9,0)
 F  S IDX=$O(^TMP($J,"XPARRSTR",IDX)) Q:'IDX  D
"RTN","ORY280P",10,0)
 . N PAR,INST,ORVAL,ORERR
"RTN","ORY280P",11,0)
 . S PAR=$P(^TMP($J,"XPARRSTR",IDX,"KEY"),U),INST=$P(^("KEY"),U,2)
"RTN","ORY280P",12,0)
 . M ORVAL=^TMP($J,"XPARRSTR",IDX,"VAL")
"RTN","ORY280P",13,0)
 . D EN^XPAR(ENT,PAR,INST,.ORVAL,.ORERR)
"RTN","ORY280P",14,0)
 K ^TMP($J,"XPARRSTR")
"RTN","ORY280P",15,0)
 D PKG
"RTN","ORY280P",16,0)
 Q
"RTN","ORY280P",17,0)
LOAD ; load data into ^TMP (expects ROOT to be defined)
"RTN","ORY280P",18,0)
 S I=1 F  S REF=$T(DATA+I) Q:REF=""  S VAL=$T(DATA+I+1) D
"RTN","ORY280P",19,0)
 . S I=I+2,REF=$P(REF,";",3,999),VAL=$P(VAL,";",3,999)
"RTN","ORY280P",20,0)
 . S @(ROOT_REF)=VAL
"RTN","ORY280P",21,0)
 Q
"RTN","ORY280P",22,0)
PKG ;Setup VBECS package level parameters of Pointer Type
"RTN","ORY280P",23,0)
 N ORX,P
"RTN","ORY280P",24,0)
 S P="OR VBECS COMPONENT ORDER"
"RTN","ORY280P",25,0)
 D SET("RED BLOOD CELLS",P,5,"S.VBC")
"RTN","ORY280P",26,0)
 D SET("FRESH FROZEN PLASMA",P,10,"S.VBC")
"RTN","ORY280P",27,0)
 D SET("PLATELETS",P,15,"S.VBC")
"RTN","ORY280P",28,0)
 D SET("CRYOPRECIPITATE",P,20,"S.VBC")
"RTN","ORY280P",29,0)
 D SET("WHOLE BLOOD",P,25,"S.VBC")
"RTN","ORY280P",30,0)
 D SET("OTHER",P,30,"S.VBC")
"RTN","ORY280P",31,0)
 S P="OR VBECS DIAGNOSTIC TEST ORDER"
"RTN","ORY280P",32,0)
 D SET("ABO/RH",P,5,"S.VBT")
"RTN","ORY280P",33,0)
 D SET("ANTIBODY SCREEN",P,10,"S.VBT")
"RTN","ORY280P",34,0)
 D SET("DIRECT ANTIGLOBULIN TEST",P,15,"S.VBT")
"RTN","ORY280P",35,0)
 D SET("TRANSFUSION REACTION WORKUP",P,20,"S.VBT")
"RTN","ORY280P",36,0)
 D SET("TYPE & SCREEN",P,25,"S.VBT")
"RTN","ORY280P",37,0)
 Q
"RTN","ORY280P",38,0)
SET(ONAME,P,S,XREF) ;Set the parameter
"RTN","ORY280P",39,0)
 ;ONAME=Report name
"RTN","ORY280P",40,0)
 ;P=Parameter name
"RTN","ORY280P",41,0)
 ;S=Sequence (count)
"RTN","ORY280P",42,0)
 ;XREF=Cross Reference to screen on
"RTN","ORY280P",43,0)
 N DA,ORERR
"RTN","ORY280P",44,0)
 S DA=0 F  S DA=$O(^ORD(101.43,XREF,ONAME,DA)) Q:'DA  D
"RTN","ORY280P",45,0)
 . D EN^XPAR("PKG.ORDER ENTRY/RESULTS REPORTING",P,S,ONAME,.ORERR)
"RTN","ORY280P",46,0)
 Q
"RTN","ORY280P",47,0)
DATA ; parameter data
"RTN","ORY280P",48,0)
 ;;9343,"KEY")
"RTN","ORY280P",49,0)
 ;;OR VBECS REMOVE COLL TIME^1
"RTN","ORY280P",50,0)
 ;;9343,"VAL")
"RTN","ORY280P",51,0)
 ;;NO
"RTN","ORY280P",52,0)
 ;;9344,"KEY")
"RTN","ORY280P",53,0)
 ;;OR VBECS DIAGNOSTIC PANEL 1ST^1
"RTN","ORY280P",54,0)
 ;;9344,"VAL")
"RTN","ORY280P",55,0)
 ;;NO
"RTN","ORYDLG")
0^24^B14515305
"RTN","ORYDLG",1,0)
ORYDLG ;SLC/MKB -- Postinit bulletin for order dialogs ;05/01/09  12:16
"RTN","ORYDLG",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**141,165,216,243,280**;Dec 17, 1997;Build 85
"RTN","ORYDLG",3,0)
 ;
"RTN","ORYDLG",4,0)
EN(PATCH,ORDLG,USERS) ; -- look for local copies of ORDLG(NAME) by package,
"RTN","ORYDLG",5,0)
 ;    send list in bulletin to DUZ, POSTMASTER, USERS(DUZ) when done
"RTN","ORYDLG",6,0)
 ;
"RTN","ORYDLG",7,0)
 Q:$O(ORDLG(""))=""  ;none
"RTN","ORYDLG",8,0)
 N ORZ,ORI,X,NM,I,OR0,PKG,DG,ORPKG,ORNATL,DLG,CNT,LR,PS
"RTN","ORYDLG",9,0)
 S ORZ(1)="The following nationally exported order dialogs have been modified by"
"RTN","ORYDLG",10,0)
 S X="this patch:   ",ORI=1,NM="" F  S NM=$O(ORDLG(NM)) Q:NM=""  D
"RTN","ORYDLG",11,0)
 . S ORI=ORI+1,ORZ(ORI)=X_NM,X="              "
"RTN","ORYDLG",12,0)
 . S I=+$O(^ORD(101.41,"AB",NM,0)),OR0=$G(^ORD(101.41,I,0))
"RTN","ORYDLG",13,0)
 . S PKG=+$P(OR0,U,7),DG=+$P(OR0,U,5) S:PKG ORPKG(PKG,DG)=""
"RTN","ORYDLG",14,0)
 . S:$P(NM," ")="LR" LR=1 S:"^PS^PSJ^PSO^PSH^"[(U_$P(NM," ")_U) PS=1
"RTN","ORYDLG",15,0)
 D:$G(LR) LR D:$G(PS) PS ;reset FORMAT codes in changed dialogs
"RTN","ORYDLG",16,0)
 S I=0 F I=1:1 S X=$T(NATL+I) Q:X["ZZZZZ"  S ORNATL($P(X,";",3))=""
"RTN","ORYDLG",17,0)
 S ORI=ORI+1,ORZ(ORI)="Please review and compare the following locally created order dialogs"
"RTN","ORYDLG",18,0)
 S ORI=ORI+1,ORZ(ORI)="that may be copies, for any necessary changes:",CNT=0
"RTN","ORYDLG",19,0)
 S PKG=0 F  S PKG=$O(ORPKG(PKG)) Q:PKG<1  S DLG=0 D
"RTN","ORYDLG",20,0)
 . F  S DLG=+$O(^ORD(101.41,"APKG",PKG,DLG)) Q:DLG<1  D
"RTN","ORYDLG",21,0)
 .. S OR0=$G(^ORD(101.41,DLG,0))  Q:$P(OR0,U,4)'="D"
"RTN","ORYDLG",22,0)
 .. Q:'$D(ORPKG(PKG,+$P(OR0,U,5)))  ;included DispGrp
"RTN","ORYDLG",23,0)
 .. Q:$D(ORNATL($P(OR0,U)))  S CNT=CNT+1
"RTN","ORYDLG",24,0)
 .. S ORI=ORI+1,ORZ(ORI)=$J(DLG,7)_"  "_$P(OR0,U)
"RTN","ORYDLG",25,0)
EN1 I CNT>0 D  ;local copies found -> send bulletin
"RTN","ORYDLG",26,0)
 . N XMDUZ,XMY,I,XMSUB,XMTEXT,DIFROM
"RTN","ORYDLG",27,0)
 . S XMDUZ="PATCH OR*3*"_$G(PATCH)_" POSTINIT",XMY(.5)=""
"RTN","ORYDLG",28,0)
 . S:$G(DUZ) XMY(DUZ)="" S I=0 F  S I=$O(USERS(I)) Q:I<1  S XMY(I)=""
"RTN","ORYDLG",29,0)
 . S XMSUB=XMDUZ_" COMPLETED",XMTEXT="ORZ(" D ^XMD
"RTN","ORYDLG",30,0)
 . D BMES^XPDUTL("Some national order dialogs have been modified in this patch;")
"RTN","ORYDLG",31,0)
 . D MES^XPDUTL("a bulletin has been sent to the installer listing local copies that")
"RTN","ORYDLG",32,0)
 . D MES^XPDUTL("may need to be reviewed and updated.")
"RTN","ORYDLG",33,0)
 Q
"RTN","ORYDLG",34,0)
 ;
"RTN","ORYDLG",35,0)
NATL ;;Nationally exported dialogs
"RTN","ORYDLG",36,0)
 ;;FHW1
"RTN","ORYDLG",37,0)
 ;;FHW2
"RTN","ORYDLG",38,0)
 ;;FHW3
"RTN","ORYDLG",39,0)
 ;;FHW7
"RTN","ORYDLG",40,0)
 ;;FHW8
"RTN","ORYDLG",41,0)
 ;;FHW OP MEAL
"RTN","ORYDLG",42,0)
 ;;FHW SPECIAL MEAL
"RTN","ORYDLG",43,0)
 ;;GMRAOR ALLERGY ENTER/EDIT
"RTN","ORYDLG",44,0)
 ;;GMRCOR CONSULT
"RTN","ORYDLG",45,0)
 ;;GMRCOR REQUEST
"RTN","ORYDLG",46,0)
 ;;GMRVOR
"RTN","ORYDLG",47,0)
 ;;LR OTHER LAB TESTS
"RTN","ORYDLG",48,0)
 ;;OR GWCOND CONDITION
"RTN","ORYDLG",49,0)
 ;;OR GWDIAG DIAGNOSIS
"RTN","ORYDLG",50,0)
 ;;OR GWINST DNR
"RTN","ORYDLG",51,0)
 ;;OR GXACTV OTHER ACTIVITY ORDER
"RTN","ORYDLG",52,0)
 ;;OR GXMISC GENERAL
"RTN","ORYDLG",53,0)
 ;;OR GXMOVE ADMIT PATIENT
"RTN","ORYDLG",54,0)
 ;;OR GXMOVE DISCHARGE
"RTN","ORYDLG",55,0)
 ;;OR GXMOVE EVENT
"RTN","ORYDLG",56,0)
 ;;OR GXMOVE TRANSFER
"RTN","ORYDLG",57,0)
 ;;OR GXMOVE TREATING SPECIALTY
"RTN","ORYDLG",58,0)
 ;;OR GXPARM CALL HO ON
"RTN","ORYDLG",59,0)
 ;;OR GXSKIN DRESSING CHANGE
"RTN","ORYDLG",60,0)
 ;;OR GXTEXT TEXT ONLY ORDER
"RTN","ORYDLG",61,0)
 ;;OR GXTEXT WORD PROCESSING ORDER
"RTN","ORYDLG",62,0)
 ;;ORWD GENERIC ACTIVITY
"RTN","ORYDLG",63,0)
 ;;ORWD GENERIC DIET
"RTN","ORYDLG",64,0)
 ;;ORWD GENERIC NURSING
"RTN","ORYDLG",65,0)
 ;;ORWD GENERIC VITALS
"RTN","ORYDLG",66,0)
 ;;PS MEDS
"RTN","ORYDLG",67,0)
 ;;PSH OERR
"RTN","ORYDLG",68,0)
 ;;PSJ OR PAT OE
"RTN","ORYDLG",69,0)
 ;;PSJI OR PAT FLUID OE
"RTN","ORYDLG",70,0)
 ;;PSO OERR
"RTN","ORYDLG",71,0)
 ;;PSO SUPPLY
"RTN","ORYDLG",72,0)
 ;;RA OERR EXAM
"RTN","ORYDLG",73,0)
 ;;ZZZZZ
"RTN","ORYDLG",74,0)
 ;
"RTN","ORYDLG",75,0)
PS ; -- reset FORMAT values in PS dialogs
"RTN","ORYDLG",76,0)
 N DRUG,OI,STR,DLGNM,DLG,PRMT,DA
"RTN","ORYDLG",77,0)
 S DRUG=$$PTR("OR GTX DRUG NAME")
"RTN","ORYDLG",78,0)
 S OI=$$PTR("OR GTX ORDERABLE ITEM"),STR=$$PTR("OR GTX STRENGTH")
"RTN","ORYDLG",79,0)
 F DLGNM="PS MEDS","PSJ OR PAT OE","PSO OERR","PSO SUPPLY","PSH OERR" D
"RTN","ORYDLG",80,0)
 . S DLG=$$PTR(DLGNM)
"RTN","ORYDLG",81,0)
 . F PRMT=OI,STR D
"RTN","ORYDLG",82,0)
 .. S DA=+$O(^ORD(101.41,DLG,10,"D",PRMT,0))
"RTN","ORYDLG",83,0)
 .. S:DA $P(^ORD(101.41,DLG,10,DA,2),U,2)=("@"_DRUG)
"RTN","ORYDLG",84,0)
 Q
"RTN","ORYDLG",85,0)
 ; IV dialog
"RTN","ORYDLG",86,0)
 S DLG=$$PTR("PSJI OR PAT FLUID OE"),PRMT=$$PTR("OR GTX INFUSION RATE")
"RTN","ORYDLG",87,0)
 S DA=+$O(^ORD(101.41,DLG,10,"D",PRMT,0))
"RTN","ORYDLG",88,0)
 I DA S $P(^ORD(101.41,DLG,10,DA,2),U,2)=("@"_$$PTR("OR GTX SCHEDULE"))
"RTN","ORYDLG",89,0)
 Q
"RTN","ORYDLG",90,0)
 ;
"RTN","ORYDLG",91,0)
LR ; -- reset FORMAT value in LR dialog
"RTN","ORYDLG",92,0)
 N DLG,PRMT,DA
"RTN","ORYDLG",93,0)
 S DLG=$$PTR("LR OTHER LAB TESTS"),PRMT=$$PTR("OR GTX SPECIMEN")
"RTN","ORYDLG",94,0)
 S DA=+$O(^ORD(101.41,DLG,10,"D",PRMT,0))
"RTN","ORYDLG",95,0)
 I DA S $P(^ORD(101.41,DLG,10,DA,2),U,2)=("="_$$PTR("OR GTX COLLECTION SAMPLE"))
"RTN","ORYDLG",96,0)
 Q
"RTN","ORYDLG",97,0)
 ;
"RTN","ORYDLG",98,0)
PTR(X) Q +$O(^ORD(101.41,"B",X,0))
"SEC","^DIC",100.05,100.05,0,"AUDIT")
@
"SEC","^DIC",100.05,100.05,0,"DD")
@
"SEC","^DIC",100.05,100.05,0,"DEL")
@
"SEC","^DIC",100.05,100.05,0,"LAYGO")
@
"SEC","^DIC",100.05,100.05,0,"WR")
@
"VER")
8.0^22.0
"^DD",100,100,0)
FIELD^^69^65
"^DD",100,100,0,"DDA")
N
"^DD",100,100,0,"DIK")
ORD2
"^DD",100,100,0,"DIKOLD")
ORD2
"^DD",100,100,0,"DT")
3100423
"^DD",100,100,0,"IX","AC",100,.02)

"^DD",100,100,0,"IX","AC1",100.008,.01)

"^DD",100,100,0,"IX","ACT1",100,.02)

"^DD",100,100,0,"IX","ACT2",100,23)

"^DD",100,100,0,"IX","ACT3",100.008,.01)

"^DD",100,100,0,"IX","AD",100,21)

"^DD",100,100,0,"IX","AE",100,22)

"^DD",100,100,0,"IX","AF",100.008,.01)

"^DD",100,100,0,"IX","AOI",100.001,.01)

"^DD",100,100,0,"IX","AOI1",100,.02)

"^DD",100,100,0,"IX","AOI2",100,21)

"^DD",100,100,0,"IX","AR",100,.02)

"^DD",100,100,0,"IX","AR1",100.008,16)

"^DD",100,100,0,"IX","AS",100,.02)

"^DD",100,100,0,"IX","AS1",100.008,.01)

"^DD",100,100,0,"IX","AS2",100.008,4)

"^DD",100,100,0,"IX","AW",100,.02)

"^DD",100,100,0,"IX","AW1",100,23)

"^DD",100,100,0,"IX","AW2",100,21)

"^DD",100,100,0,"IX","AZ",100,.01)

"^DD",100,100,0,"NM","ORDER")

"^DD",100,100,0,"PT",53.1,125)

"^DD",100,100,0,"PT",55.05,7)

"^DD",100,100,0,"PT",69.03,6)

"^DD",100,100,0,"PT",75.1,7)

"^DD",100,100,0,"PT",100,9)

"^DD",100,100,0,"PT",100,9.1)

"^DD",100,100,0,"PT",100,36)

"^DD",100,100,0,"PT",100.002,.01)

"^DD",100,100,0,"PT",100.05,.01)

"^DD",100,100,0,"PT",100.2,4)

"^DD",100,100,0,"PT",100.26,.01)

"^DD",100,100,0,"PT",100.27,.01)

"^DD",100,100,0,"PT",100.99,14)

"^DD",100,100,0,"PT",102.4,.01)

"^DD",100,100,0,"PT",115,20)

"^DD",100,100,0,"PT",115.01,10)

"^DD",100,100,0,"PT",115.016,.05)

"^DD",100,100,0,"PT",115.016,13.5)

"^DD",100,100,0,"PT",115.016,17.5)

"^DD",100,100,0,"PT",115.016,21.5)

"^DD",100,100,0,"PT",115.017,11)

"^DD",100,100,0,"PT",115.017,14)

"^DD",100,100,0,"PT",115.02,13)

"^DD",100,100,0,"PT",115.03,11)

"^DD",100,100,0,"PT",115.03,12)

"^DD",100,100,0,"PT",115.04,13)

"^DD",100,100,0,"PT",115.05,6)

"^DD",100,100,0,"PT",115.06,7)

"^DD",100,100,0,"PT",120.55,.01)

"^DD",100,100,0,"PT",123,.03)

"^DD",100,100,0,"PT",130,100)

"^DD",100,100,0,"PT",373,.08)

"^DD",100,100,0,"PT",668,19)

"^DD",100,100,0,"PT",691,1000)

"^DD",100,100,0,"PT",691.1,1000)

"^DD",100,100,0,"PT",691.5,1000)

"^DD",100,100,0,"PT",691.6,1000)

"^DD",100,100,0,"PT",691.7,1000)

"^DD",100,100,0,"PT",691.8,1000)

"^DD",100,100,0,"PT",694,1000)

"^DD",100,100,0,"PT",698,1000)

"^DD",100,100,0,"PT",698.1,1000)

"^DD",100,100,0,"PT",698.2,1000)

"^DD",100,100,0,"PT",698.3,1000)

"^DD",100,100,0,"PT",699,1000)

"^DD",100,100,0,"PT",699.5,1000)

"^DD",100,100,0,"PT",700,1000)

"^DD",100,100,0,"PT",701,1000)

"^DD",100,100,0,"PT",8925,1210)

"^DD",100,100,0,"PT",9000010.18,.17)

"^DD",100,100,0,"VRPK")
OR
"^DD",100,100,.01,0)
ORDER #^RNJ9,0X^^0;1^K:+X'=X!(X>999999999)!(X<0) X I $D(X) S DINUM=X
"^DD",100,100,.01,.1)

"^DD",100,100,.01,1,0)
^.1
"^DD",100,100,.01,1,1,0)
100^AZ^MUMPS
"^DD",100,100,.01,1,1,1)
S ^OR(100,"AZ",DA,$P(^OR(100,DA,0),U,2))=""
"^DD",100,100,.01,1,1,2)
Q
"^DD",100,100,.01,1,1,"DT")
2990107
"^DD",100,100,.01,3)
Enter the order number.
"^DD",100,100,.01,21,0)
^^1^1^2920225^^^^
"^DD",100,100,.01,21,1,0)
This is the internal order number of the file.
"^DD",100,100,.01,"DT")
2990107
"^DD",100,100,.02,0)
OBJECT OF ORDER^RV^^0;2^Q
"^DD",100,100,.02,1,0)
^.1^^-1
"^DD",100,100,.02,1,2,0)
100^AC^MUMPS
"^DD",100,100,.02,1,2,1)
D SETALL^ORDD100(DA)
"^DD",100,100,.02,1,2,2)
D KILALL^ORDD100(DA)
"^DD",100,100,.02,1,2,"%D",0)
^^4^4^2971028^
"^DD",100,100,.02,1,2,"%D",1,0)
^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100,.02,1,2,"%D",2,0)
Allows retrieval of "active" orders; includes orders with any kind of
"^DD",100,100,.02,1,2,"%D",3,0)
active status, as well as those that have ended w/in the Active Orders
"^DD",100,100,.02,1,2,"%D",4,0)
Context Hours.
"^DD",100,100,.02,1,2,"DT")
2960830
"^DD",100,100,.02,1,5,0)
100^AS^MUMPS
"^DD",100,100,.02,1,5,1)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D S1^ORDD100(DA,ORDA,X)
"^DD",100,100,.02,1,5,2)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,9,ORDA)) Q:ORDA'>0  D S2^ORDD100(DA,ORDA,X)
"^DD",100,100,.02,1,5,"%D",0)
^^2^2^2971028^^^
"^DD",100,100,.02,1,5,"%D",1,0)
^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100,.02,1,5,"%D",2,0)
Allows retrieval of unsigned orders.
"^DD",100,100,.02,1,5,"DT")
2910624
"^DD",100,100,.02,1,7,0)
100^AR^MUMPS
"^DD",100,100,.02,1,7,1)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D RS^ORDD100(DA,ORDA,X)
"^DD",100,100,.02,1,7,2)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D RK^ORDD100(DA,ORDA,X)
"^DD",100,100,.02,1,7,"%D",0)
^^2^2^2980602^
"^DD",100,100,.02,1,7,"%D",1,0)
^OR(100,"AR",ORVP,9999999-ORRDT,ORIFN,ORDA)
"^DD",100,100,.02,1,7,"%D",2,0)
Allows retrieval of orders by inverse date released.
"^DD",100,100,.02,1,7,"DT")
2980602
"^DD",100,100,.02,1,9,0)
100^AW^MUMPS
"^DD",100,100,.02,1,9,1)
D WS^ORDD100
"^DD",100,100,.02,1,9,2)
D WK^ORDD100
"^DD",100,100,.02,1,9,"%D",0)
^^2^2^2971028^^^
"^DD",100,100,.02,1,9,"%D",1,0)
^OR(100,"AW",ORVP,ORDG,ORSTRT,ORIFN)
"^DD",100,100,.02,1,9,"%D",2,0)
Allows retrieval of orders by display group.
"^DD",100,100,.02,1,9,"DT")
2920526
"^DD",100,100,.02,1,10,0)
100^AOI1^MUMPS
"^DD",100,100,.02,1,10,1)
D OI1^ORDD100A(DA)
"^DD",100,100,.02,1,10,2)
D OI2^ORDD100A(DA)
"^DD",100,100,.02,1,10,"%D",0)
^^2^2^2971028^^^
"^DD",100,100,.02,1,10,"%D",1,0)
^OR(100,"AOI",ORIT,ORVP,9999999-ORSTRT,ORIFN)
"^DD",100,100,.02,1,10,"%D",2,0)
Allows retrieval of patients for whom an item has been ordered.
"^DD",100,100,.02,1,10,"DT")
2960404
"^DD",100,100,.02,1,11,0)
100^ACT1^MUMPS
"^DD",100,100,.02,1,11,1)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D ACT1^ORDD100A(DA,ORDA,,X)
"^DD",100,100,.02,1,11,2)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D ACT2^ORDD100A(DA,ORDA,,X)
"^DD",100,100,.02,1,11,"%D",0)
^^2^2^2971028^^^^
"^DD",100,100,.02,1,11,"%D",1,0)
^OR(100,"ACT",ORVP,9999999-ORLOG,ORDG,ORIFN,DA)
"^DD",100,100,.02,1,11,"%D",2,0)
Allows retrieval of orders in reverse-chronological order.
"^DD",100,100,.02,1,11,"DT")
2960801
"^DD",100,100,.02,3)
Enter the name of a patient.
"^DD",100,100,.02,21,0)
^^2^2^2920224^^^^
"^DD",100,100,.02,21,1,0)
This is the individual object of the order.  Depending on the parent 
"^DD",100,100,.02,21,2,0)
file entry, this would be the Patient, Control Point, etc.
"^DD",100,100,.02,"DT")
3020612
"^DD",100,100,.02,"V",0)
^.12P^3^2
"^DD",100,100,.02,"V",1,0)
2^PATIENT^1^P^n^n
"^DD",100,100,.02,"V",3,0)
67^REFERRAL^6^R^n^n
"^DD",100,100,.1,0)
ORDERABLE ITEMS^100.001PA^^.1;0
"^DD",100,100,.1,21,0)
^^1^1^2950622^^
"^DD",100,100,.1,21,1,0)
This multiple contains the items being ordered.
"^DD",100,100,.1,"DT")
2950622
"^DD",100,100,.8,0)
ORDER ACTIONS^100.008DA^^8;0
"^DD",100,100,.8,3)
Enter the order that this order relates to.
"^DD",100,100,.8,21,0)
^^2^2^2971219^^^^
"^DD",100,100,.8,21,1,0)
These are the actions taken on this order, including the signature and
"^DD",100,100,.8,21,2,0)
verification required to release to the service.
"^DD",100,100,.8,"DT")
2951027
"^DD",100,100,.9,0)
ORDER CHECKS^100.09P^^9;0
"^DD",100,100,.9,21,0)
^^1^1^2971025^^^
"^DD",100,100,.9,21,1,0)
This is the list of order checks found for this order.
"^DD",100,100,1,0)
CURRENT AGENT/PROVIDER^P200'^VA(200,^0;4^Q
"^DD",100,100,1,3)
Enter the name of the requesting clinician for this order.
"^DD",100,100,1,21,0)
^^1^1^2970306^^^^
"^DD",100,100,1,21,1,0)
This is the person who is responsible for the order.
"^DD",100,100,1,"DT")
2970306
"^DD",100,100,2,0)
DIALOG^RV^^0;5^Q
"^DD",100,100,2,1,0)
^.1^^0
"^DD",100,100,2,3)
Enter the dialog that was used to create this order.
"^DD",100,100,2,21,0)
^^1^1^2951120^^^^
"^DD",100,100,2,21,1,0)
This is the dialog that created this order.
"^DD",100,100,2,"DT")
2951101
"^DD",100,100,2,"V",0)
^.12P^2^2
"^DD",100,100,2,"V",1,0)
19^OPTION^1^OPT^^n
"^DD",100,100,2,"V",2,0)
101^PROTOCOL^2^PRO^^n
"^DD",100,100,2,"V",3,0)
101.41^DIALOG^3^DLG^n^n
"^DD",100,100,3,0)
WHO ENTERED^P200'^VA(200,^0;6^Q
"^DD",100,100,3,3)
Enter the name of the person who entered this order.
"^DD",100,100,3,21,0)
^^1^1^2920224^^^^
"^DD",100,100,3,21,1,0)
This is the USER who entered the information about the order.
"^DD",100,100,3,"DT")
2900820
"^DD",100,100,4,0)
WHEN ENTERED^D^^0;7^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,4,1,0)
^.1^^0
"^DD",100,100,4,3)
Enter the date/time when this order was entered.
"^DD",100,100,4,21,0)
^^1^1^2920224^^^^
"^DD",100,100,4,21,1,0)
This is the date/time of completion of the initiation of the order.
"^DD",100,100,4,"DT")
2961224
"^DD",100,100,4.5,0)
RESPONSES^100.045A^^4.5;0
"^DD",100,100,4.5,21,0)
^^1^1^2970926^^^^
"^DD",100,100,4.5,21,1,0)
This contains the responses to an order dialog.
"^DD",100,100,4.5,"DT")
2910905
"^DD",100,100,5,0)
STATUS^*P100.01'^ORD(100.01,^3;3^S DIC("S")="I '$$SCREEN^XTID(100.01,,Y_"","")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",100,100,5,1,0)
^.1^^0
"^DD",100,100,5,3)
Enter the status of this order.
"^DD",100,100,5,12)
Data Standardization of Order Status file #100.01
"^DD",100,100,5,12.1)
S DIC("S")="I '$$SCREEN^XTID(100.01,,Y_"","")"
"^DD",100,100,5,21,0)
^.001^1^1^3060223^^^^
"^DD",100,100,5,21,1,0)
This is the status of the order.
"^DD",100,100,5,"DT")
3060223
"^DD",100,100,5.1,0)
ORDER DIAGNOSES^100.051PA^^5.1;0
"^DD",100,100,5.1,21,0)
^^1^1^3031216^
"^DD",100,100,5.1,21,1,0)
These are the the diagnoses associated with this order.
"^DD",100,100,6,0)
PATIENT LOCATION^V^^0;10^Q
"^DD",100,100,6,3)
Enter the location of the patient.
"^DD",100,100,6,21,0)
^^1^1^2920224^^^^
"^DD",100,100,6,21,1,0)
This is the hospital location from which the order originated.
"^DD",100,100,6,"DT")
2970508
"^DD",100,100,6,"V",0)
^.12P^1^1
"^DD",100,100,6,"V",1,0)
44^HOSPITAL LOCATION^1^H^n^n
"^DD",100,100,7,0)
ITEM ORDERED^V^^3;4^Q
"^DD",100,100,7,1,0)
^.1^^0
"^DD",100,100,7,3)
Enter the item ordered.
"^DD",100,100,7,21,0)
^^1^1^2971027^^^^
"^DD",100,100,7,21,1,0)
This is the variable pointer to the file and item ordered. 
"^DD",100,100,7,"DT")
2890131
"^DD",100,100,7,"V",0)
^.12P^3^2
"^DD",100,100,7,"V",1,0)
19^PROTOCOL^1^MISC^^n
"^DD",100,100,7,"V",2,0)
60^LAB TEST^2^LAB^^n
"^DD",100,100,7,"V",3,0)
101.41^ORDER DIALOG^3^DIALOG^n^n
"^DD",100,100,8,0)
VEILED^S^1:VEILED;0:UNVEILED;^3;8^Q
"^DD",100,100,8,21,0)
^^3^3^2920224^^
"^DD",100,100,8,21,1,0)
This field is set when creating an order to prevent the order from
"^DD",100,100,8,21,2,0)
being displayed on the review screen until the order is complete and
"^DD",100,100,8,21,3,0)
accepted.
"^DD",100,100,8,"DT")
2890816
"^DD",100,100,8.1,0)
TYPE^S^0:STANDARD;1:EDIT;2:RENEW;4:HOLD;6:DISCONTINUE;B:BCMA;C:COPY;X:TRANSFER;P:PACKAGE;^3;11^Q
"^DD",100,100,8.1,3)
The type of order is determined by the action a user takes when processing orders.
"^DD",100,100,8.1,21,0)
^.001^2^2^3030815^^
"^DD",100,100,8.1,21,1,0)
This field is used to determine the type of order that is being processed.
"^DD",100,100,8.1,21,2,0)
Different things happen depending on the order type.
"^DD",100,100,8.1,"DT")
3030815
"^DD",100,100,9,0)
REPLACED ORDER^P100'^OR(100,^3;5^Q
"^DD",100,100,9,3)
Enter the number of the order that this order replaces.
"^DD",100,100,9,21,0)
^^2^2^2951027^^^^
"^DD",100,100,9,21,1,0)
This is the order number of the order which was replaced by this order,
"^DD",100,100,9,21,2,0)
either by editing or renewal.
"^DD",100,100,9,"DT")
2960202
"^DD",100,100,9.1,0)
REPLACEMENT ORDER^P100'^OR(100,^3;6^Q
"^DD",100,100,9.1,3)
Enter the number of the order that replaces this one.
"^DD",100,100,9.1,21,0)
^^2^2^2970701^
"^DD",100,100,9.1,21,1,0)
This is the order number of the order that replaces this one, either
"^DD",100,100,9.1,21,2,0)
by edit or renewal.
"^DD",100,100,9.1,"DT")
2970701
"^DD",100,100,10,0)
PATIENT CLASS^S^I:INPATIENT;O:OUTPATIENT;^0;12^Q
"^DD",100,100,10,3)
Enter the patient's classification for this order.
"^DD",100,100,10,21,0)
^^2^2^2960918^
"^DD",100,100,10,21,1,0)
This is the patient's inpatient classification for this order; an inpatient
"^DD",100,100,10,21,2,0)
may have some orders performed on an outpatient basis.
"^DD",100,100,10,"DT")
2960918
"^DD",100,100,11,0)
TREATING SPECIALTY^P45.7'^DIC(45.7,^0;13^Q
"^DD",100,100,11,3)
Enter the treating specialty associated with this order.
"^DD",100,100,11,21,0)
^^1^1^2920423^^^^
"^DD",100,100,11,21,1,0)
This is the TREATING SPECIALTY associated with this order.
"^DD",100,100,11,"DT")
2870522
"^DD",100,100,12,0)
PACKAGE^RP9.4'^DIC(9.4,^0;14^Q
"^DD",100,100,12,1,0)
^.1^^0
"^DD",100,100,12,3)
Enter the package that is generating this order.
"^DD",100,100,12,21,0)
^^1^1^2920226^^^^
"^DD",100,100,12,21,1,0)
This is the package creating the order.
"^DD",100,100,12,"DT")
2880307
"^DD",100,100,13,0)
COST^NJ11,2^^0;15^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999999)!(X<0) X
"^DD",100,100,13,3)
Type a Dollar Amount between 0 and 99999999, 2 Decimal Digits
"^DD",100,100,13,21,0)
^^1^1^2920224^^^^
"^DD",100,100,13,21,1,0)
This is the cost of filling this order.
"^DD",100,100,13,"DT")
2871202
"^DD",100,100,14,0)
SIGNATURE REQUIRED^S^0:NONE;1:ORELSE;2:ORES;^0;16^Q
"^DD",100,100,14,3)
Enter the OR key required to sign this order
"^DD",100,100,14,21,0)
^^4^4^2970314^
"^DD",100,100,14,21,1,0)
This is the OR key required to sign this order.  If set to 2, only users
"^DD",100,100,14,21,2,0)
with the ORES key will be allowed to sign this order; if set to 1, users
"^DD",100,100,14,21,3,0)
with either the ORELSE or ORES keys will be allowed to sign.  A 0 or ""
"^DD",100,100,14,21,4,0)
indicates that no signature is required.
"^DD",100,100,14,"DT")
2970314
"^DD",100,100,15,0)
EVENT^P100.2'^ORE(100.2,^0;17^Q
"^DD",100,100,15,1,0)
^.1^^0
"^DD",100,100,15,3)
Enter the event this order should be delayed for.
"^DD",100,100,15,21,0)
^.001^1^1^3020425^^^
"^DD",100,100,15,21,1,0)
This is the event that this order's release is/was delayed till.
"^DD",100,100,15,"DT")
3020425
"^DD",100,100,16,0)
PATIENT APPOINTMENT^D^^0;18^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,16,21,0)
^^2^2^3031230^
"^DD",100,100,16,21,1,0)
This is the appointment date/time for outpatients and is only entered 
"^DD",100,100,16,21,2,0)
when inpatient medications are ordered for them.
"^DD",100,100,16,"DT")
3031230
"^DD",100,100,20,0)
CHILDREN^100.002PA^^2;0
"^DD",100,100,20,3)
Enter the children associated with this order.
"^DD",100,100,20,21,0)
^^2^2^2920224^^^^
"^DD",100,100,20,21,1,0)
This field allows a single order or set of orders to be linked 
"^DD",100,100,20,21,2,0)
to a parent order.
"^DD",100,100,21,0)
START DATE^D^^0;8^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,21,1,0)
^.1
"^DD",100,100,21,1,1,0)
100^AD^MUMPS
"^DD",100,100,21,1,1,1)
D SS^ORDD100
"^DD",100,100,21,1,1,2)
D SK^ORDD100
"^DD",100,100,21,1,1,"%D",0)
^^3^3^2971028^^
"^DD",100,100,21,1,1,"%D",1,0)
^OR(100,"AD",ORSTRT,ORIFN)
"^DD",100,100,21,1,1,"%D",2,0)
Allows retrieval of orders by start date; set only for future orders
"^DD",100,100,21,1,1,"%D",3,0)
that are scheduled.
"^DD",100,100,21,1,1,"DT")
2970312
"^DD",100,100,21,1,2,0)
100^AW2^MUMPS
"^DD",100,100,21,1,2,1)
D WS^ORDD100
"^DD",100,100,21,1,2,2)
D WK^ORDD100
"^DD",100,100,21,1,2,"%D",0)
^^2^2^2971028^
"^DD",100,100,21,1,2,"%D",1,0)
^OR(100,"AW",ORVP,ORDG,ORSTRT,ORIFN)
"^DD",100,100,21,1,2,"%D",2,0)
Allows retrieval of orders by display group.
"^DD",100,100,21,1,2,"DT")
2970312
"^DD",100,100,21,1,3,0)
100^AOI2^MUMPS
"^DD",100,100,21,1,3,1)
D OI1^ORDD100A(DA)
"^DD",100,100,21,1,3,2)
D OI2^ORDD100A(DA)
"^DD",100,100,21,1,3,"%D",0)
^^2^2^2971028^^
"^DD",100,100,21,1,3,"%D",1,0)
^OR(100,"AOI",ORIT,ORVP,9999999-ORSTRT,ORIFN)
"^DD",100,100,21,1,3,"%D",2,0)
Allows retrieval of patients for whom an item has been ordered.
"^DD",100,100,21,1,3,"DT")
2970312
"^DD",100,100,21,3)
Enter the start date/time for this order
"^DD",100,100,21,21,0)
^^1^1^2970312^^^^
"^DD",100,100,21,21,1,0)
This is the start date/time of the order.
"^DD",100,100,21,"DT")
2970312
"^DD",100,100,22,0)
STOP DATE^DX^^0;9^S %DT="ETX" D ^%DT S X=Y K:Y<1 X I $D(X),X<$P(^OR(100,DA,0),"^",8) K X
"^DD",100,100,22,1,0)
^.1
"^DD",100,100,22,1,1,0)
100^AE^MUMPS
"^DD",100,100,22,1,1,1)
D ES^ORDD100A
"^DD",100,100,22,1,1,2)
D EK^ORDD100A
"^DD",100,100,22,1,1,"%D",0)
^^3^3^2971028^^^
"^DD",100,100,22,1,1,"%D",1,0)
^OR(100,"AE",ORSTOP,ORIFN)
"^DD",100,100,22,1,1,"%D",2,0)
Allows retrieval of orders by expiration date; set only for orders that
"^DD",100,100,22,1,1,"%D",3,0)
have not already completed, expired, or been discontinued or canceled.
"^DD",100,100,22,1,1,"DT")
2960625
"^DD",100,100,22,3)
STOP DATE must be after the START DATE.
"^DD",100,100,22,21,0)
^^1^1^2970710^^^^
"^DD",100,100,22,21,1,0)
This is the stop date/time of the order.
"^DD",100,100,22,"DT")
2960625
"^DD",100,100,23,0)
TO^RP100.98'^ORD(100.98,^0;11^Q
"^DD",100,100,23,1,0)
^.1^^-1
"^DD",100,100,23,1,1,0)
100^AW1^MUMPS
"^DD",100,100,23,1,1,1)
D WS^ORDD100
"^DD",100,100,23,1,1,2)
D WK^ORDD100
"^DD",100,100,23,1,1,"%D",0)
^^2^2^2971028^
"^DD",100,100,23,1,1,"%D",1,0)
^OR(100,"AW",ORVP,ORDG,ORSTRT,ORIFN)
"^DD",100,100,23,1,1,"%D",2,0)
Allows retrieval of orders by display group.
"^DD",100,100,23,1,1,"DT")
2920601
"^DD",100,100,23,1,3,0)
100^ACT2^MUMPS
"^DD",100,100,23,1,3,1)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D ACT1^ORDD100A(DA,ORDA,,,X)
"^DD",100,100,23,1,3,2)
N ORDA S ORDA=0 F  S ORDA=$O(^OR(100,DA,8,ORDA)) Q:ORDA'>0  D ACT2^ORDD100A(DA,ORDA,,,X)
"^DD",100,100,23,1,3,"%D",0)
^^2^2^2971028^^^^
"^DD",100,100,23,1,3,"%D",1,0)
^OR(100,"ACT",ORVP,9999999-ORLOG,ORDG,ORIFN,DA)
"^DD",100,100,23,1,3,"%D",2,0)
Allows retrieval of orders in reverse-chronological order.
"^DD",100,100,23,1,3,"DT")
2960801
"^DD",100,100,23,3)
Enter the service that generates this order.
"^DD",100,100,23,21,0)
^^2^2^2920224^^^^
"^DD",100,100,23,21,1,0)
This is the service to which the order is referred.
"^DD",100,100,23,21,2,0)
This is used to determine the display group in which the order appears.
"^DD",100,100,23,"DT")
2961017
"^DD",100,100,23,"V",0)
^.12P
"^DD",100,100,30,0)
CURRENT ACTION^NJ3,0^^3;7^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100,30,1,0)
^.1^^0
"^DD",100,100,30,3)
Enter the item number of the action currently being taken on this order
"^DD",100,100,30,21,0)
^^3^3^2961031^^^^
"^DD",100,100,30,21,1,0)
This is the item number of the action in the Order Actions multiple that
"^DD",100,100,30,21,2,0)
is currently being carried out on this order; it will be used to build
"^DD",100,100,30,21,3,0)
the text for the Current Orders list.
"^DD",100,100,30,"DT")
2961030
"^DD",100,100,31,0)
DATE OF LAST ACTIVITY^D^^3;1^S %DT="ET" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,31,3)
Enter the date of last activity for this order.
"^DD",100,100,31,21,0)
^^1^1^2970306^^^^
"^DD",100,100,31,21,1,0)
This is the date/time the order was last updated.
"^DD",100,100,31,"DT")
2970306
"^DD",100,100,32,0)
GRACE DAYS BEFORE PURGE^NJ3,0^^3;2^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100,32,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",100,100,32,21,0)
^^8^8^2970306^^^^
"^DD",100,100,32,21,1,0)
This is the number of days to hold an order from the
"^DD",100,100,32,21,2,0)
date of last activity. The order in OE/RR may be 
"^DD",100,100,32,21,3,0)
purged after this date.
"^DD",100,100,32,21,4,0)
The default is 30 days.  If a package needs the order
"^DD",100,100,32,21,5,0)
retained for a period longer than 30 days, this can
"^DD",100,100,32,21,6,0)
be specified when the order is created by setting the
"^DD",100,100,32,21,7,0)
variable ORPURG to the appropriate number of days before
"^DD",100,100,32,21,8,0)
calling FILE^ORX.
"^DD",100,100,32,"DT")
2970306
"^DD",100,100,33,0)
PACKAGE REFERENCE^F^^4;E1,200^K:$L(X)>200!($L(X)<1) X
"^DD",100,100,33,3)
ANSWER MUST BE 1-200 CHARACTERS IN LENGTH
"^DD",100,100,33,21,0)
^^4^4^2960801^^^^
"^DD",100,100,33,21,1,0)
This information allows the package to link the order in OR
"^DD",100,100,33,21,2,0)
with its more detailed order information in the individual package.
"^DD",100,100,33,21,3,0)
It is the package's responsibility to define and determine the
"^DD",100,100,33,21,4,0)
structure of this information.
"^DD",100,100,33,"DT")
2850807
"^DD",100,100,35,0)
ALERT ON RESULTS^P200'^VA(200,^3;10^Q
"^DD",100,100,35,3)
Enter the name of the user to be alerted when results for this order become available.
"^DD",100,100,35,21,0)
^.001^3^3^3011210^^^
"^DD",100,100,35,21,1,0)
This field contains the user who requested to be alerted when results
"^DD",100,100,35,21,2,0)
for this order become available.  Only lab, radiology, and consult orders
"^DD",100,100,35,21,3,0)
will generate results.
"^DD",100,100,35,"DT")
3011210
"^DD",100,100,36,0)
PARENT^P100'^OR(100,^3;9^Q
"^DD",100,100,36,3)
Enter the parent, if this order is its child.
"^DD",100,100,36,21,0)
^^1^1^2920423^^^
"^DD",100,100,36,21,1,0)
This is the parent of an order that may have a parent/child relationship.
"^DD",100,100,36,"DT")
2900116
"^DD",100,100,39,0)
LAPSED DATE/TIME^D^^10;1^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",100,100,39,3)
This is the date/time when the order was lapsed.
"^DD",100,100,39,21,0)
^^2^2^3080408^
"^DD",100,100,39,21,1,0)
This field will specify when the order was Lapsed.  Lapsing takes place 
"^DD",100,100,39,21,2,0)
in routine ORTSKLPS and is part of the ORMTIME scheduled option.
"^DD",100,100,39,"DT")
3080415
"^DD",100,100,51,0)
SERVICE CONNECTED CONDITION^S^1:YES;0:NO;^5;1^Q
"^DD",100,100,51,3)
Enter YES if this order is for treatment of a service-connected condition.
"^DD",100,100,51,21,0)
^.001^5^5^3010921^^
"^DD",100,100,51,21,1,0)
When signing orders, the provider may be asked if this order is for
"^DD",100,100,51,21,2,0)
treatment of  a service-connected condition; his/her response to this
"^DD",100,100,51,21,3,0)
question will be stored in this field.  Currently this question is only
"^DD",100,100,51,21,4,0)
asked for Outpatient Medications, and the response is passed to that
"^DD",100,100,51,21,5,0)
package with the new order.
"^DD",100,100,51,"DT")
3010921
"^DD",100,100,52,0)
MST^S^1:YES;0:NO;^5;2^Q
"^DD",100,100,52,.1)
MILITARY SEXUAL TRAUMA
"^DD",100,100,52,3)
Enter YES if this order is for treatment of a condition due to MST.
"^DD",100,100,52,21,0)
^^6^6^3010925^
"^DD",100,100,52,21,1,0)
If a patient has been identified as having been treated for Military
"^DD",100,100,52,21,2,0)
Sexual Trauma (MST), then the provider may be asked when signing the
"^DD",100,100,52,21,3,0)
order if it is for treatment of a condition related to MST and his/her
"^DD",100,100,52,21,4,0)
response to this question will be stored in this field.  Currently this
"^DD",100,100,52,21,5,0)
question is only asked for Outpatient Medications, and the response is
"^DD",100,100,52,21,6,0)
passed to that package with the new order.
"^DD",100,100,52,"DT")
3010925
"^DD",100,100,53,0)
AGENT ORANGE EXPOSURE^S^1:YES;0:NO;^5;3^Q
"^DD",100,100,53,3)
Enter YES if this order is for treatment of a condition due to Agent Orange exposure during Vietnam service.
"^DD",100,100,53,21,0)
^^6^6^3010925^
"^DD",100,100,53,21,1,0)
If a patient has been identified as having been exposed to Agent Orange
"^DD",100,100,53,21,2,0)
(AO) during service in Vietnam, then the provider may be asked when
"^DD",100,100,53,21,3,0)
signing the order if it is for treatment of a condition related to AO
"^DD",100,100,53,21,4,0)
and his/her response to this question will be stored in this field.
"^DD",100,100,53,21,5,0)
Currently this question is only asked for Outpatient Medications, and
"^DD",100,100,53,21,6,0)
the response is passed to that package with the new order.
"^DD",100,100,53,"DT")
3010921
"^DD",100,100,54,0)
IONIZING RADIATION EXPOSURE^S^1:YES;0:NO;^5;4^Q
"^DD",100,100,54,3)
Enter YES if this order is for treatment of a condition due to ionizing radiation exposure during military service.
"^DD",100,100,54,21,0)
^^7^7^3010925^
"^DD",100,100,54,21,1,0)
If a patient has been identified as having been treated for exposure to
"^DD",100,100,54,21,2,0)
ionizing radiation (IR) during military service, then the provider may
"^DD",100,100,54,21,3,0)
be asked when signing the order if it is for treatment of a condition
"^DD",100,100,54,21,4,0)
related to IR and his/her response to this question will be stored in
"^DD",100,100,54,21,5,0)
this field.  Currently this question is only asked for Outpatient
"^DD",100,100,54,21,6,0)
Medications, and the response is passed to that package with the new
"^DD",100,100,54,21,7,0)
order.
"^DD",100,100,54,"DT")
3010921
"^DD",100,100,55,0)
SOUTHWEST ASIA CONDITIONS^S^1:YES;0:NO;^5;5^Q
"^DD",100,100,55,3)
Enter YES if this order is for treatment of a condition due to environmental contaminant exposure during the Persian Gulf War.
"^DD",100,100,55,21,0)
^.001^7^7^3010921^^
"^DD",100,100,55,21,1,0)
If a patient has been identified as having been treated for exposure to
"^DD",100,100,55,21,2,0)
environmental contaminants (EC) during the Persian Gulf War, then the
"^DD",100,100,55,21,3,0)
provider may be asked when signing the order if it is for treatment of a
"^DD",100,100,55,21,4,0)
condition related to EC and his/her response to this question will be
"^DD",100,100,55,21,5,0)
stored in this field.  Currently this question is only asked for
"^DD",100,100,55,21,6,0)
Outpatient Medications, and the response is passed to that package with
"^DD",100,100,55,21,7,0)
the new order.
"^DD",100,100,55,"DT")
3060911
"^DD",100,100,56,0)
HEAD AND/OR NECK CANCER^S^1:YES;0:NO;^5;6^Q
"^DD",100,100,56,3)
Enter YES if this order is for treatment of head or neck cancer due to nose or throat radium treatments while in the military.
"^DD",100,100,56,21,0)
^^7^7^3010925^
"^DD",100,100,56,21,1,0)
If a patient has been identified as having been treated for head or neck
"^DD",100,100,56,21,2,0)
cancer due to nose or throat radium treatments while in the military,
"^DD",100,100,56,21,3,0)
then the provider may be asked when signing the order if it is for
"^DD",100,100,56,21,4,0)
treatment of head or neck cancer and his/her response to this question
"^DD",100,100,56,21,5,0)
will be stored in this field.  Currently this question is only asked for
"^DD",100,100,56,21,6,0)
Outpatient Medications, and the response is passed to that package with
"^DD",100,100,56,21,7,0)
the new order.
"^DD",100,100,56,"DT")
3010925
"^DD",100,100,57,0)
COMBAT VETERAN^S^1:YES;0:NO;^5;7^Q
"^DD",100,100,57,3)
Enter YES if this order is for treatment of a condition related to combat.
"^DD",100,100,57,21,0)
^^5^5^3031117^
"^DD",100,100,57,21,1,0)
When signing orders, the provider may be asked if this order is for
"^DD",100,100,57,21,2,0)
treatment of a combat-related condition; his/her response to this
"^DD",100,100,57,21,3,0)
question will be stored in this field.  Currently this question is only
"^DD",100,100,57,21,4,0)
asked for Outpatient Medications, and the response is passed to that
"^DD",100,100,57,21,5,0)
package with the new order.
"^DD",100,100,57,"DT")
3031117
"^DD",100,100,58,0)
SHIPBOARD HAZARD^S^1:YES;0:NO;^5;8^Q
"^DD",100,100,58,3)
Enter YES if this order is for treatment of a condition related to Shipboard Hazard.
"^DD",100,100,58,"DT")
3060824
"^DD",100,100,61,0)
NATURE OF DC^*P100.02'^ORD(100.02,^6;1^S DIC("S")="I '$$SCREEN^XTID(100.02,,Y_"","")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",100,100,61,3)
Enter the nature of this dc order
"^DD",100,100,61,12)
Data Standardization of Nature of Order file #100.02
"^DD",100,100,61,12.1)
S DIC("S")="I '$$SCREEN^XTID(100.02,,Y_"","")"
"^DD",100,100,61,21,0)
^.001^4^4^3060223^^^^
"^DD",100,100,61,21,1,0)
Orders that are DC'ed because they have been duplicated do not create a
"^DD",100,100,61,21,2,0)
DC order, nor is a chart copy or electronic signature notification
"^DD",100,100,61,21,3,0)
generated.  If this is a CHANGE IN THERAPY, then a DC order is generated
"^DD",100,100,61,21,4,0)
that must be signed, and a chart copy of the new DC request is printed.
"^DD",100,100,61,"DT")
3060223
"^DD",100,100,62,0)
DC'ed BY^P200'^VA(200,^6;2^Q
"^DD",100,100,62,3)
Enter the name of the person who DC'ed this order
"^DD",100,100,62,21,0)
^^1^1^2970312^
"^DD",100,100,62,21,1,0)
This is the person who DC'ed this order.
"^DD",100,100,62,"DT")
2970312
"^DD",100,100,63,0)
DC DATE/TIME^D^^6;3^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,63,3)
Enter the date/time this order was DC'ed.
"^DD",100,100,63,21,0)
^^1^1^2970312^
"^DD",100,100,63,21,1,0)
This is the date/time the order was DC'ed.
"^DD",100,100,63,"DT")
2970312
"^DD",100,100,64,0)
DC REASON^P100.03'^ORD(100.03,^6;4^Q
"^DD",100,100,64,3)
Enter the reason why this order was DC'ed.
"^DD",100,100,64,21,0)
^^1^1^2970312^
"^DD",100,100,64,21,1,0)
This is the reason this order was DC'ed, i.e. "Patient discharged."
"^DD",100,100,64,"DT")
2970312
"^DD",100,100,65,0)
DC REASON TEXT^F^^6;5^K:$L(X)>80!($L(X)<1) X
"^DD",100,100,65,3)
Answer must be 1-80 characters in length.
"^DD",100,100,65,21,0)
^^1^1^2970312^^
"^DD",100,100,65,21,1,0)
This is the text of the DC reason.
"^DD",100,100,65,"DT")
2970312
"^DD",100,100,66,0)
COMPLETED^D^^6;6^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,66,3)
Enter the date/time this order was completed.
"^DD",100,100,66,21,0)
^^1^1^2990519^^
"^DD",100,100,66,21,1,0)
This is the date/time the order was marked as complete.
"^DD",100,100,66,"DT")
2990519
"^DD",100,100,67,0)
COMPLETED BY^P200'^VA(200,^6;7^Q
"^DD",100,100,67,3)
Enter the name of the person who completed this order.
"^DD",100,100,67,21,0)
^^1^1^2990519^
"^DD",100,100,67,21,1,0)
This is the person who marked this order as complete.
"^DD",100,100,67,"DT")
2990519
"^DD",100,100,68,0)
DC EVENT^P100.2'^ORE(100.2,^6;8^Q
"^DD",100,100,68,3)
Enter the event that caused this order to terminate.
"^DD",100,100,68,21,0)
^.001^1^1^3020425^^^
"^DD",100,100,68,21,1,0)
This is the event that automatically discontinued this order.
"^DD",100,100,68,"DT")
3020425
"^DD",100,100,69,0)
DC ORIGINAL ORDER^S^1:TRUE;0:FALSE;^6;9^Q
"^DD",100,100,69,3)
Do not edit this field.
"^DD",100,100,69,21,0)
^^6^6^3100521^
"^DD",100,100,69,21,1,0)
This field is only accessed by CPRS. This field is set to True if both 
"^DD",100,100,69,21,2,0)
the original order and the pending renewal order are discontinued. This 
"^DD",100,100,69,21,3,0)
field is set to False if only the pending renewal order is discontinued. 
"^DD",100,100,69,21,4,0)
If only the pending renewal order is discontinued, CPRS assigns the 
"^DD",100,100,69,21,5,0)
original order's status to the status it received from the pharmacy 
"^DD",100,100,69,21,6,0)
package.
"^DD",100,100,69,"DT")
3100521
"^DD",100,100,71,0)
RESULTS DATE/TIME^D^^7;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100,71,3)
Enter the date/time this order was resulted.
"^DD",100,100,71,21,0)
^.001^2^2^3020930^^
"^DD",100,100,71,21,1,0)
This field contains the date/time that results became available for this
"^DD",100,100,71,21,2,0)
order; only Lab, Radiology, and Consult orders have results.
"^DD",100,100,71,"DT")
3030402
"^DD",100,100,72,0)
ABNORMAL RESULTS^S^1:YES;^7;2^Q
"^DD",100,100,72,3)
Enter YES if the results of this order are abnormal.
"^DD",100,100,72,21,0)
^.001^1^1^3021007^^
"^DD",100,100,72,21,1,0)
This field indicates whether the results for this order were abnormal, or outside of normal ranges.
"^DD",100,100,72,"DT")
3020930
"^DD",100,100,73,0)
FINDINGS^F^^7;3^K:$L(X)>80!($L(X)<1) X
"^DD",100,100,73,3)
Answer must be 1-80 characters in length.
"^DD",100,100,73,21,0)
^^2^2^3020930^
"^DD",100,100,73,21,1,0)
This field contains the text of any significant findings for the results
"^DD",100,100,73,21,2,0)
of this order.
"^DD",100,100,73,"DT")
3020930
"^DD",100,100,90,0)
BA SERVICE CONNECTED CONDITION^S^1:YES;0:NO;^5.2;1^Q
"^DD",100,100,90,3)
Enter YES if this order is for treatment of a service-connected condition.
"^DD",100,100,90,21,0)
^.001^1^1^3040123^^
"^DD",100,100,90,21,1,0)
When signing orders, the provider may be asked if this order is for treatment of a service-connected condition; his/her response to this question will be stored in this field.
"^DD",100,100,90,"DT")
3040123
"^DD",100,100,91,0)
BA MILITARY SEXUAL TRAUMA^S^1:YES;0:NO;^5.2;2^Q
"^DD",100,100,91,3)
Enter YES if this order is for treatment of a condition due to MST.
"^DD",100,100,91,"DT")
3040123
"^DD",100,100,92,0)
BA AGENT ORANGE EXPOSURE^S^1:YES;0:NO;^5.2;3^Q
"^DD",100,100,92,3)
Enter YES if this order is for treatment of a condition due to Agent Oragne exposure during Vietnam service.
"^DD",100,100,92,"DT")
3040123
"^DD",100,100,93,0)
BA IONIZING RADIATION EXPOSURE^S^1:YES;0:NO;^5.2;4^Q
"^DD",100,100,93,3)
Enter YES if this order is for treatment of a condition due to ionizing radiation exposure during military service.
"^DD",100,100,93,"DT")
3040123
"^DD",100,100,94,0)
BA SOUTHWEST ASIA CONDITIONS^S^1:YES;0:NO;^5.2;5^Q
"^DD",100,100,94,3)
Enter YES if this ordre is for treatmetn of a condition due to environmental contaminant exposure during the Persian Gulf War.
"^DD",100,100,94,"DT")
3060911
"^DD",100,100,95,0)
BA HEAD AND/OR NECK CANCER^S^1:YES;0:NO;^5.2;6^Q
"^DD",100,100,95,3)
Enter YES if this order is for treatment of head or neck cancer due to nose or throat radium treatments while in the military.
"^DD",100,100,95,"DT")
3040123
"^DD",100,100,96,0)
BA COMBAT VETERAN^S^1:YES;0:NO;^5.2;7^Q
"^DD",100,100,96,3)
Enter YES if this order is for treatment of a condition related to combat.
"^DD",100,100,96,"DT")
3040123
"^DD",100,100,97,0)
PFSS ACCOUNT REFERENCE^P375'^IBBAA(375,^5.5;1^Q
"^DD",100,100,97,21,0)
^.001^3^3^3061025^
"^DD",100,100,97,21,1,0)
The PFSS Account Reference field stores the PFSS Account Reference
"^DD",100,100,97,21,2,0)
associated with the order. The field is a pointer to the PFSS Account
"^DD",100,100,97,21,3,0)
Reference file (#375).
"^DD",100,100,97,"DT")
3061025
"^DD",100,100,98,0)
BA SHIPBOARD HAZARD^S^1:YES;0:NO;^5.2;8^Q
"^DD",100,100,98,3)
Enter YES if this order is treatment for a condition related to Shipboard Hazard.
"^DD",100,100,98,"DT")
3061025
"^DD",100,100.001,0)
ORDERABLE ITEMS SUB-FIELD^^.01^1
"^DD",100,100.001,0,"DIK")
ORD2
"^DD",100,100.001,0,"DT")
2950622
"^DD",100,100.001,0,"IX","B",100.001,.01)

"^DD",100,100.001,0,"NM","ORDERABLE ITEMS")

"^DD",100,100.001,0,"UP")
100
"^DD",100,100.001,.01,0)
ORDERABLE ITEM^MP101.43'^ORD(101.43,^0;1^Q
"^DD",100,100.001,.01,1,0)
^.1
"^DD",100,100.001,.01,1,1,0)
100.001^B
"^DD",100,100.001,.01,1,1,1)
S ^OR(100,DA(1),.1,"B",$E(X,1,30),DA)=""
"^DD",100,100.001,.01,1,1,2)
K ^OR(100,DA(1),.1,"B",$E(X,1,30),DA)
"^DD",100,100.001,.01,1,2,0)
100^AOI^MUMPS
"^DD",100,100.001,.01,1,2,1)
D OI1^ORDD100A(DA(1))
"^DD",100,100.001,.01,1,2,2)
D OI2^ORDD100A(DA(1))
"^DD",100,100.001,.01,1,2,"%D",0)
^^2^2^2971028^^
"^DD",100,100.001,.01,1,2,"%D",1,0)
^OR(100,"AOI",ORIT,ORVP,9999999-ORSTRT,ORIFN)
"^DD",100,100.001,.01,1,2,"%D",2,0)
Allows retrieval of patients for whom an item has been ordered.
"^DD",100,100.001,.01,1,2,"DT")
2960404
"^DD",100,100.001,.01,3)
Enter the item you wish to order.
"^DD",100,100.001,.01,21,0)
^^2^2^2950622^
"^DD",100,100.001,.01,21,1,0)
This is the actual item (test, procedure, diet, drug, etc) being ordered
"^DD",100,100.001,.01,21,2,0)
from the Orderable Items file.
"^DD",100,100.001,.01,"DT")
2960404
"^DD",100,100.002,0)
CHILDREN SUB-FIELD^NL^.01^1
"^DD",100,100.002,0,"DIK")
ORD2
"^DD",100,100.002,0,"IX","AL",100.002,.01)

"^DD",100,100.002,0,"NM","CHILDREN")

"^DD",100,100.002,0,"UP")
100
"^DD",100,100.002,.01,0)
CHILDREN^M*P100X^OR(100,^0;1^D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X I $D(X) S DINUM=X
"^DD",100,100.002,.01,1,0)
^.1^^0
"^DD",100,100.002,.01,1,1,0)
100.002^AL^MUMPS
"^DD",100,100.002,.01,1,1,1)
S P=$P(^OR(100,DA(1),0),"^",2),P2=$P(^(0),"^",8),P1=$S($D(^(3)):$P(^(3),"^",4),1:"") I P,P1,P2 S ^OR(100,"AL",P,P1,P2,DA,DA(1))=""
"^DD",100,100.002,.01,1,1,2)
S P=$P(^OR(100,DA(1),0),"^",2),P2=$P(^(0),"^",8),P1=$S($D(^(3)):$P(^(3),"^",4),1:"") I P,P1,P2 K ^OR(100,"AL",P,P1,P2,DA,DA(1))
"^DD",100,100.002,.01,3)
Enter the children associated with this order.
"^DD",100,100.002,.01,21,0)
^^2^2^2920224^^^^
"^DD",100,100.002,.01,21,1,0)
These are the orders which compose this entry 
"^DD",100,100.002,.01,21,2,0)
and have this entry in the Parent field.
"^DD",100,100.002,.01,"DT")
2900116
"^DD",100,100.008,0)
ORDER ACTIONS SUB-FIELD^^74^41
"^DD",100,100.008,0,"DIK")
ORD2
"^DD",100,100.008,0,"DT")
3020425
"^DD",100,100.008,0,"IX","C",100.008,2)

"^DD",100,100.008,0,"NM","ORDER ACTIONS")

"^DD",100,100.008,0,"UP")
100
"^DD",100,100.008,.01,0)
DATE/TIME ORDERED^RD^^0;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,.01,1,0)
^.1
"^DD",100,100.008,.01,1,1,0)
100^ACT3^MUMPS
"^DD",100,100.008,.01,1,1,1)
N ORDA S ORDA=DA(1) D ACT1^ORDD100A(ORDA,DA)
"^DD",100,100.008,.01,1,1,2)
N ORDA S ORDA=DA(1) D ACT2^ORDD100A(ORDA,DA)
"^DD",100,100.008,.01,1,1,"%D",0)
^^2^2^2971028^^^^
"^DD",100,100.008,.01,1,1,"%D",1,0)
^OR(100,"ACT",ORVP,9999999-ORLOG,ORDG,ORIFN,DA)
"^DD",100,100.008,.01,1,1,"%D",2,0)
Allows retrieval of orders in reverse-chronological order.
"^DD",100,100.008,.01,1,1,"DT")
2961224
"^DD",100,100.008,.01,1,2,0)
100^AC1^MUMPS
"^DD",100,100.008,.01,1,2,1)
N X1,X2 S X1=DA(1),X2=DA D SET^ORDD100(X1,X2)
"^DD",100,100.008,.01,1,2,2)
N X1,X2 S X1=DA(1),X2=DA D KIL^ORDD100(X1,X2)
"^DD",100,100.008,.01,1,2,"%D",0)
^^4^4^2971028^
"^DD",100,100.008,.01,1,2,"%D",1,0)
^OR(100,"AC",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100.008,.01,1,2,"%D",2,0)
Allows retrieval of "active" orders; includes orders with any kind of
"^DD",100,100.008,.01,1,2,"%D",3,0)
active status, as well as those that have ended w/in the Active Orders
"^DD",100,100.008,.01,1,2,"%D",4,0)
Context Hours.
"^DD",100,100.008,.01,1,2,"DT")
2960830
"^DD",100,100.008,.01,1,3,0)
100^AS1^MUMPS
"^DD",100,100.008,.01,1,3,1)
N ORDA S ORDA=DA(1) D S1^ORDD100(ORDA,DA,"",X)
"^DD",100,100.008,.01,1,3,2)
N ORDA S ORDA=DA(1) D S2^ORDD100(ORDA,DA,"",X)
"^DD",100,100.008,.01,1,3,"%D",0)
^^2^2^2971028^^^
"^DD",100,100.008,.01,1,3,"%D",1,0)
^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100.008,.01,1,3,"%D",2,0)
Allows retrieval of unsigned orders.
"^DD",100,100.008,.01,1,3,"DT")
2970107
"^DD",100,100.008,.01,1,4,0)
100^AF
"^DD",100,100.008,.01,1,4,1)
S ^OR(100,"AF",$E(X,1,30),DA(1),DA)=""
"^DD",100,100.008,.01,1,4,2)
K ^OR(100,"AF",$E(X,1,30),DA(1),DA)
"^DD",100,100.008,.01,1,4,"DT")
2970814
"^DD",100,100.008,.01,3)
Enter the date/time this action was ordered.
"^DD",100,100.008,.01,21,0)
^^1^1^2951027^^
"^DD",100,100.008,.01,21,1,0)
This is the date/time this action was ordered.
"^DD",100,100.008,.01,"DT")
2970814
"^DD",100,100.008,.1,0)
ORDER TEXT^100.0081^^.1;0
"^DD",100,100.008,.1,21,0)
^^1^1^3000727^
"^DD",100,100.008,.1,21,1,0)
This is the text of the order.
"^DD",100,100.008,.2,0)
EXTERNAL TEXT^100.0082^^.2;0
"^DD",100,100.008,.2,9)
@
"^DD",100,100.008,.2,21,0)
^.001^4^4^3020326^^^^
"^DD",100,100.008,.2,21,1,0)
This is the text of the order stored in external format.
"^DD",100,100.008,.2,21,2,0)
DO NOT EDIT THIS FIELD!  This field is used to create a Digital Signature.
"^DD",100,100.008,.2,21,3,0)
Editing this field will render the Digital Signature invalid and prevent
"^DD",100,100.008,.2,21,4,0)
the order from being processed.
"^DD",100,100.008,.2,"DT")
3020326
"^DD",100,100.008,1,0)
REASON FOR ACTION/REJECT^F^^1;1^K:$L(X)>240!($L(X)<1) X
"^DD",100,100.008,1,3)
Answer must be 1-240 characters in length.
"^DD",100,100.008,1,21,0)
^^2^2^2970308^
"^DD",100,100.008,1,21,1,0)
This is the reason returned by the package why this action is being
"^DD",100,100.008,1,21,2,0)
taken or rejected.
"^DD",100,100.008,1,"DT")
2970308
"^DD",100,100.008,2,0)
ACTION^RS^NW:NEW;DC:DISCONTINUE;HD:HOLD;RL:RELEASE HOLD;XX:CHANGE;^0;2^Q
"^DD",100,100.008,2,1,0)
^.1
"^DD",100,100.008,2,1,1,0)
100.008^C
"^DD",100,100.008,2,1,1,1)
S ^OR(100,DA(1),8,"C",$E(X,1,30),DA)=""
"^DD",100,100.008,2,1,1,2)
K ^OR(100,DA(1),8,"C",$E(X,1,30),DA)
"^DD",100,100.008,2,1,1,"DT")
2960202
"^DD",100,100.008,2,3)
Enter the action to be taken on this order.
"^DD",100,100.008,2,21,0)
^.001^1^1^3000712^^^^
"^DD",100,100.008,2,21,1,0)
This is the action being ordered.
"^DD",100,100.008,2,"DT")
3000712
"^DD",100,100.008,3,0)
PROVIDER^P200'^VA(200,^0;3^Q
"^DD",100,100.008,3,3)
Enter the name of the requesting clinician for this order.
"^DD",100,100.008,3,21,0)
^^1^1^2970310^^
"^DD",100,100.008,3,21,1,0)
This is the requestor of this order.
"^DD",100,100.008,3,"DT")
2970310
"^DD",100,100.008,4,0)
SIGNATURE STATUS^S^0:ON CHART w/written orders;1:ELECTRONIC;2:NOT SIGNED;3:NOT REQUIRED;4:ON CHART w/printed orders;5:NOT REQUIRED due to cancel/lapse;6:SERVICE CORRECTION to signed order;7:DIGITALLY SIGNED;8:ON PARENT order;^0;4^Q
"^DD",100,100.008,4,1,0)
^.1
"^DD",100,100.008,4,1,1,0)
100^AS2^MUMPS
"^DD",100,100.008,4,1,1,1)
N ORDA S ORDA=DA(1) D S1^ORDD100(ORDA,DA)
"^DD",100,100.008,4,1,1,2)
N ORDA S ORDA=DA(1) D S2^ORDD100(ORDA,DA)
"^DD",100,100.008,4,1,1,"%D",0)
^.101^2^2^3061108^^^
"^DD",100,100.008,4,1,1,"%D",1,0)
^OR(100,"AS",ORVP,9999999-ORLOG,ORIFN,DA)
"^DD",100,100.008,4,1,1,"%D",2,0)
Allows retrieval of unsigned orders.
"^DD",100,100.008,4,1,1,"DT")
2961224
"^DD",100,100.008,4,3)
Select 0=On chart-written, 1=Electronic, 2=Not Signed, 3=Not Required, 4=On chart-printed, 5=Not Required-cancel/lapse, 6=Service Correction, 7=Digitally Signed, 8=On Parent Order
"^DD",100,100.008,4,21,0)
^.001^4^4^3040514^^^^
"^DD",100,100.008,4,21,1,0)
This is the signature status of the order.  Entries with a null value
"^DD",100,100.008,4,21,2,0)
in this field are assumed to have been entered through the back door
"^DD",100,100.008,4,21,3,0)
via specific package order entry options and do not require signature
"^DD",100,100.008,4,21,4,0)
unless so specified by the package.
"^DD",100,100.008,4,"DT")
3061108
"^DD",100,100.008,5,0)
SIGNED BY^*P200'^VA(200,^0;5^I $D(^XUSEC("ORES",DUZ)) D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",100,100.008,5,3)
Enter the person signing this order.
"^DD",100,100.008,5,12)
Only users with the ORES key allowed.
"^DD",100,100.008,5,12.1)
I $D(^XUSEC("ORES",DUZ))
"^DD",100,100.008,5,21,0)
^^4^4^2960525^^
"^DD",100,100.008,5,21,1,0)
This is the user who entered his/her electronic signature code to
"^DD",100,100.008,5,21,2,0)
authenticate this order.  It will be replaced by an encryption of
"^DD",100,100.008,5,21,3,0)
the name and title of the signer, along with a checksum of the order
"^DD",100,100.008,5,21,4,0)
text, as soon as we figure out how to do that. :)
"^DD",100,100.008,5,"DT")
2960525
"^DD",100,100.008,6,0)
DATE/TIME SIGNED^D^^0;6^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,6,3)
Enter the date/time the order was electronically signed.
"^DD",100,100.008,6,21,0)
^^1^1^2951027^
"^DD",100,100.008,6,21,1,0)
This is the date/time that the order was electronically signed.
"^DD",100,100.008,6,"DT")
2951027
"^DD",100,100.008,7,0)
SIGNED ON CHART^P200'^VA(200,^0;7^Q
"^DD",100,100.008,7,3)
Enter the person who specified that this order was signed on the patient's chart.
"^DD",100,100.008,7,21,0)
^^1^1^2951027^
"^DD",100,100.008,7,21,1,0)
This is the person who released an order based on a signature in the chart.
"^DD",100,100.008,7,"DT")
2951027
"^DD",100,100.008,8,0)
VERIFYING NURSE^P200'^VA(200,^0;8^Q
"^DD",100,100.008,8,3)
Enter the name of the nurse who verified this order.
"^DD",100,100.008,8,21,0)
^^1^1^2951027^
"^DD",100,100.008,8,21,1,0)
This is the nurse who acknowledged or verified the accuracy of this order.
"^DD",100,100.008,8,"DT")
2951027
"^DD",100,100.008,9,0)
DATE/TIME NURSE VERIFIED^D^^0;9^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,9,3)
Enter the date/time the order was verified by a nurse.
"^DD",100,100.008,9,21,0)
^^2^2^2951027^
"^DD",100,100.008,9,21,1,0)
This is the date/time that the order was acknowledged or verified by a
"^DD",100,100.008,9,21,2,0)
nurse.
"^DD",100,100.008,9,"DT")
2951027
"^DD",100,100.008,10,0)
VERIFYING CLERK^P200'^VA(200,^0;10^Q
"^DD",100,100.008,10,3)
Enter the name of the ward clerk who verified this order.
"^DD",100,100.008,10,21,0)
^^2^2^2951027^
"^DD",100,100.008,10,21,1,0)
This is the ward clerk who took off this order, if it was not transmitted
"^DD",100,100.008,10,21,2,0)
directly to the service for action.
"^DD",100,100.008,10,"DT")
2951027
"^DD",100,100.008,11,0)
DATE/TIME CLERK VERIFIED^D^^0;11^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,11,3)
Enter the date/time this order was verified.
"^DD",100,100.008,11,21,0)
^^1^1^2951027^
"^DD",100,100.008,11,21,1,0)
This is the date/time that the ward clerk took off this order.
"^DD",100,100.008,11,"DT")
2951027
"^DD",100,100.008,12,0)
NATURE OF ORDER^*P100.02'^ORD(100.02,^0;12^S DIC("S")="I '$$SCREEN^XTID(100.02,,Y_"","")" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",100,100.008,12,3)
Enter how this order originated
"^DD",100,100.008,12,12)
Data Standardization of Nature of Order file #100.02
"^DD",100,100.008,12,12.1)
S DIC("S")="I '$$SCREEN^XTID(100.02,,Y_"","")"
"^DD",100,100.008,12,21,0)
^.001^1^1^3060223^^^^
"^DD",100,100.008,12,21,1,0)
This specifies the nature of the order or how it originated.
"^DD",100,100.008,12,"DT")
3060223
"^DD",100,100.008,13,0)
ENTERED BY^P200'^VA(200,^0;13^Q
"^DD",100,100.008,13,3)
Enter the name of the person who entered this order.
"^DD",100,100.008,13,21,0)
^^2^2^2960408^
"^DD",100,100.008,13,21,1,0)
This is the user who entered the information about this order into the
"^DD",100,100.008,13,21,2,0)
computer.
"^DD",100,100.008,13,"DT")
2960408
"^DD",100,100.008,14,0)
TEXT REFERENCE^NJ3,0^^0;14^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100.008,14,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",100,100.008,14,21,0)
^.001^2^2^3000724^^^
"^DD",100,100.008,14,21,1,0)
This field contains a reference to the Order Action entry containing
"^DD",100,100.008,14,21,2,0)
the text for this order.
"^DD",100,100.008,14,"DT")
3000724
"^DD",100,100.008,15,0)
RELEASE STATUS^S^11:unreleased;10:pre-release;13:rejected;12:dc/edit;14:lapsed;^0;15^Q
"^DD",100,100.008,15,3)
Enter the status of this action request.
"^DD",100,100.008,15,21,0)
^.001^2^2^3000712^^^
"^DD",100,100.008,15,21,1,0)
This field tracks the status of the request for this action; this is NOT
"^DD",100,100.008,15,21,2,0)
the same as the order status.
"^DD",100,100.008,15,"DT")
3061108
"^DD",100,100.008,16,0)
RELEASE DATE/TIME^D^^0;16^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,16,1,0)
^.1
"^DD",100,100.008,16,1,1,0)
100^AR1^MUMPS
"^DD",100,100.008,16,1,1,1)
N ORDER S ORDER=DA(1) D RS^ORDD100(ORDER,DA,,X)
"^DD",100,100.008,16,1,1,2)
N ORDER S ORDER=DA(1) D RK^ORDD100(ORDER,DA,,X)
"^DD",100,100.008,16,1,1,"%D",0)
^^2^2^2980602^
"^DD",100,100.008,16,1,1,"%D",1,0)
^OR(100,"AR",ORVP,9999999-ORRDT,ORIFN,ORDA)
"^DD",100,100.008,16,1,1,"%D",2,0)
Allows retrieval of orders by inverse date released.
"^DD",100,100.008,16,1,1,"DT")
2980602
"^DD",100,100.008,16,3)
Enter the date/time this order was released to the service
"^DD",100,100.008,16,21,0)
^^1^1^2970312^
"^DD",100,100.008,16,21,1,0)
This is the date/time the order was released to the service for action.
"^DD",100,100.008,16,"DT")
2980602
"^DD",100,100.008,17,0)
RELEASING PERSON^P200'^VA(200,^0;17^Q
"^DD",100,100.008,17,3)
Enter the name of the person releasing the order
"^DD",100,100.008,17,21,0)
^^1^1^2970312^
"^DD",100,100.008,17,21,1,0)
This is the person who released the order to the service for action.
"^DD",100,100.008,17,"DT")
2970312
"^DD",100,100.008,18,0)
CHART REVIEWED BY^P200'^VA(200,^0;18^Q
"^DD",100,100.008,18,3)
Enter the name of the person who reviewed this order in the chart.
"^DD",100,100.008,18,21,0)
^^2^2^2980508^^
"^DD",100,100.008,18,21,1,0)
This field contains the name of the user who performed the chart review
"^DD",100,100.008,18,21,2,0)
that included this order.
"^DD",100,100.008,18,"DT")
2980508
"^DD",100,100.008,19,0)
DATE/TIME CHART REVIEWED^D^^0;19^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,19,3)
Enter the date/time this order was reviewed in the chart.
"^DD",100,100.008,19,21,0)
^^2^2^2980508^
"^DD",100,100.008,19,21,1,0)
This field contains the date/time that a chart review was performed, that
"^DD",100,100.008,19,21,2,0)
included this order.
"^DD",100,100.008,19,"DT")
2980508
"^DD",100,100.008,21,0)
DC/HOLD UNTIL^D^^2;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,21,3)
Enter the date/time the hold should be removed from this order
"^DD",100,100.008,21,21,0)
^^6^6^2970519^^^
"^DD",100,100.008,21,21,1,0)
This is the date/time the hold was or will be removed from this order; if
"^DD",100,100.008,21,21,2,0)
a future date/time is entered at the time of holding the order, the hold
"^DD",100,100.008,21,21,3,0)
will be automatically removed when this date/time is reached.
"^DD",100,100.008,21,21,4,0)
  
"^DD",100,100.008,21,21,5,0)
If this order is reinstated after being cancelled, this is the date/time
"^DD",100,100.008,21,21,6,0)
the cancel status was removed from this order.
"^DD",100,100.008,21,"DT")
2970519
"^DD",100,100.008,22,0)
DC/HOLD RELEASED BY^P200'^VA(200,^2;2^Q
"^DD",100,100.008,22,3)
Enter the name of the person who removed the hold on this order
"^DD",100,100.008,22,21,0)
^^1^1^2970519^^^
"^DD",100,100.008,22,21,1,0)
This is the user who released the cancel or hold on this order.
"^DD",100,100.008,22,"DT")
2970519
"^DD",100,100.008,23,0)
DIGITAL SIGNATURE^FI^^2;3^K:$L(X)>100!($L(X)<1) X
"^DD",100,100.008,23,3)
Answer must be 1-100 characters in length.
"^DD",100,100.008,23,8.5)
^
"^DD",100,100.008,23,9)
^
"^DD",100,100.008,23,21,0)
^.001^1^1^3020314^^^
"^DD",100,100.008,23,21,1,0)
This is the digital signature of the order.
"^DD",100,100.008,23,"DT")
3020314
"^DD",100,100.008,24,0)
DRUG SCHEDULE^F^^2;4^K:$L(X)>3!($L(X)<1) X
"^DD",100,100.008,24,3)
Answer must be 1-3 characters in length.
"^DD",100,100.008,24,8.5)
^
"^DD",100,100.008,24,9)
^
"^DD",100,100.008,24,21,0)
^^11^11^3020425^
"^DD",100,100.008,24,21,1,0)
 This is the CS FEDERAL SCHEDULE of the drug as defined in the National
"^DD",100,100.008,24,21,2,0)
 Drug file (VA PRODUCT #50.68).  Pharmacy package further refines the
"^DD",100,100.008,24,21,3,0)
 schedule to:
"^DD",100,100.008,24,21,4,0)
   1    Sch. I Nar.
"^DD",100,100.008,24,21,5,0)
   2    II
"^DD",100,100.008,24,21,6,0)
   2n   II Non-Nar.
"^DD",100,100.008,24,21,7,0)
   3    III
"^DD",100,100.008,24,21,8,0)
   3n   III Non-Nar.
"^DD",100,100.008,24,21,9,0)
   4    IV
"^DD",100,100.008,24,21,10,0)
   5    V
"^DD",100,100.008,24,21,11,0)
   0    other active drugs
"^DD",100,100.008,24,"DT")
3020425
"^DD",100,100.008,25,0)
DIGITAL SIGNATURE REQUIRED^S^0:NO;1:YES;^2;5^Q
"^DD",100,100.008,25,3)

"^DD",100,100.008,25,21,0)
^^1^1^3020322^
"^DD",100,100.008,25,21,1,0)
This field is set if a Digital Signature is required.
"^DD",100,100.008,25,"DT")
3020322
"^DD",100,100.008,31,0)
FLAGGED^S^1:YES;0:NO;^3;1^Q
"^DD",100,100.008,31,3)
Enter YES if this order is being flagged
"^DD",100,100.008,31,21,0)
^^1^1^2970308^
"^DD",100,100.008,31,21,1,0)
This indicates that this order has been flagged.
"^DD",100,100.008,31,"DT")
2970308
"^DD",100,100.008,32,0)
BULLETIN^P3.9'^XMB(3.9,^3;2^Q
"^DD",100,100.008,32,3)
Enter the message sent regarding this flag
"^DD",100,100.008,32,21,0)
^^1^1^2970308^
"^DD",100,100.008,32,21,1,0)
This is the bulletin sent as a result of flagging this order.
"^DD",100,100.008,32,"DT")
2970308
"^DD",100,100.008,33,0)
DATE/TIME FLAGGED^D^^3;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,33,3)
Enter the date/time this order was flagged
"^DD",100,100.008,33,21,0)
^^1^1^2970308^
"^DD",100,100.008,33,21,1,0)
This is the date/time when this order was flagged.
"^DD",100,100.008,33,"DT")
2970308
"^DD",100,100.008,34,0)
FLAGGED BY^P200'^VA(200,^3;4^Q
"^DD",100,100.008,34,3)
Enter the name of the person who flagged this order
"^DD",100,100.008,34,21,0)
^^1^1^2970308^
"^DD",100,100.008,34,21,1,0)
This is the user who flagged this order.
"^DD",100,100.008,34,"DT")
2970308
"^DD",100,100.008,35,0)
REASON FOR FLAG^F^^3;5^K:$L(X)>80!($L(X)<1) X
"^DD",100,100.008,35,3)
Answer must be 1-80 characters in length.
"^DD",100,100.008,35,21,0)
^^3^3^2970308^
"^DD",100,100.008,35,21,1,0)
This is the reason this order was flagged; it will be included in the
"^DD",100,100.008,35,21,2,0)
bulletin generated, as well as included in the text of this order until
"^DD",100,100.008,35,21,3,0)
this order is unflagged.
"^DD",100,100.008,35,"DT")
2970308
"^DD",100,100.008,36,0)
DATE/TIME UNFLAGGED^D^^3;6^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,36,3)
Enter the date/time this order was unflagged
"^DD",100,100.008,36,21,0)
^^1^1^2970308^
"^DD",100,100.008,36,21,1,0)
This is the date/time this order was unflagged.
"^DD",100,100.008,36,"DT")
2970308
"^DD",100,100.008,37,0)
UNFLAGGED BY^P200'^VA(200,^3;7^Q
"^DD",100,100.008,37,3)
Enter the name of the person who unflagged this order
"^DD",100,100.008,37,21,0)
^^1^1^2970308^
"^DD",100,100.008,37,21,1,0)
This is the user who unflagged this order.
"^DD",100,100.008,37,"DT")
2970308
"^DD",100,100.008,38,0)
REASON FOR UNFLAG^F^^3;8^K:$L(X)>80!($L(X)<1) X
"^DD",100,100.008,38,3)
Answer must be 1-80 characters in length.
"^DD",100,100.008,38,21,0)
^^2^2^2970308^
"^DD",100,100.008,38,21,1,0)
This is the reason for unflagging this order, usually a response to the
"^DD",100,100.008,38,21,2,0)
reason for flag.
"^DD",100,100.008,38,"DT")
2970308
"^DD",100,100.008,39,0)
ALERTED PROVIDER^P200'^VA(200,^3;9^Q
"^DD",100,100.008,39,3)
Enter the name of the user who should be alerted to this flag.
"^DD",100,100.008,39,21,0)
^^1^1^2991216^
"^DD",100,100.008,39,21,1,0)
This is the user who was alerted to the flag.
"^DD",100,100.008,39,"DT")
2991216
"^DD",100,100.008,50,0)
WARD COMMENTS^100.0085^^5;0
"^DD",100,100.008,50,21,0)
^^1^1^2971219^
"^DD",100,100.008,50,21,1,0)
This is where ward or clinic comments on orders are stored.
"^DD",100,100.008,71,0)
CHART COPY PRINTED^S^0:NO;1:YES;^7;1^Q
"^DD",100,100.008,71,3)
ENTRY OF 'YES' MEANS CHART COPY HAS PRINTED.
"^DD",100,100.008,71,21,0)
^^1^1^2990707^^
"^DD",100,100.008,71,21,1,0)
This field is set to YES when the chart copy has printed.
"^DD",100,100.008,71,"DT")
2980521
"^DD",100,100.008,72,0)
CHART COPY PRINTED WHEN^D^^7;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.008,72,3)
ENTER THE 1ST TIME THE CHART COPY PRINTED.
"^DD",100,100.008,72,21,0)
^^1^1^2980521^
"^DD",100,100.008,72,21,1,0)
This field stores the date/time the chart copy 1st printed.
"^DD",100,100.008,72,"DT")
2980521
"^DD",100,100.008,73,0)
CHART COPY PRINTED BY^P200'^VA(200,^7;3^Q
"^DD",100,100.008,73,3)
ENTER THE PERSON WHO PRINTED THE 1ST CHART COPY
"^DD",100,100.008,73,21,0)
^^1^1^2980521^
"^DD",100,100.008,73,21,1,0)
This field contains the person signed on when the chart copy 1st printed.
"^DD",100,100.008,73,"DT")
2980521
"^DD",100,100.008,74,0)
CHART COPY PRINTER^F^^7;4^K:$L(X)>50!($L(X)<2) X
"^DD",100,100.008,74,3)
Answer must be 2-50 characters in length.
"^DD",100,100.008,74,21,0)
^^1^1^2980521^
"^DD",100,100.008,74,21,1,0)
This is the device that the chart copy was 1st sent to.
"^DD",100,100.008,74,"DT")
2980521
"^DD",100,100.0081,0)
ORDER TEXT SUB-FIELD^^.01^1
"^DD",100,100.0081,0,"DT")
3000724
"^DD",100,100.0081,0,"NM","ORDER TEXT")

"^DD",100,100.0081,0,"UP")
100.008
"^DD",100,100.0081,.01,0)
ORDER TEXT^WL^^0;1^Q
"^DD",100,100.0081,.01,3)
Enter the text of this order.
"^DD",100,100.0081,.01,21,0)
^.001^1^1^3000727^^
"^DD",100,100.0081,.01,21,1,0)
This is the text of the order.
"^DD",100,100.0081,.01,"DT")
3000724
"^DD",100,100.0082,0)
EXTERNAL TEXT SUB-FIELD^^.01^1
"^DD",100,100.0082,0,"DT")
3020312
"^DD",100,100.0082,0,"NM","EXTERNAL TEXT")

"^DD",100,100.0082,0,"UP")
100.008
"^DD",100,100.0082,.01,0)
EXTERNAL TEXT^WL^^0;1^Q
"^DD",100,100.0082,.01,8.5)
^
"^DD",100,100.0082,.01,9)
^
"^DD",100,100.0082,.01,21,0)
^.001^4^4^3020326^^^^
"^DD",100,100.0082,.01,21,1,0)
This is the text of the order stored in external format.  This field is used
"^DD",100,100.0082,.01,21,2,0)
along with the Digital Signature to validate the integrity of the order.
"^DD",100,100.0082,.01,21,3,0)
DO NOT MODIFY THE DATA IN THIS FIELD!  Changing anything in this field
"^DD",100,100.0082,.01,21,4,0)
will invalidate the order.
"^DD",100,100.0082,.01,"DT")
3020326
"^DD",100,100.0085,0)
WARD COMMENTS SUB-FIELD^^.01^1
"^DD",100,100.0085,0,"DT")
2970308
"^DD",100,100.0085,0,"NM","WARD COMMENTS")

"^DD",100,100.0085,0,"UP")
100.008
"^DD",100,100.0085,.01,0)
WARD COMMENTS^WL^^0;1^Q
"^DD",100,100.0085,.01,3)
Enter any additional comments on this order
"^DD",100,100.0085,.01,21,0)
^^3^3^2970308^
"^DD",100,100.0085,.01,21,1,0)
This field contains additional comments or instructions regarding this
"^DD",100,100.0085,.01,21,2,0)
order; these will be included in a detailed display of this order, but
"^DD",100,100.0085,.01,21,3,0)
not transmitted to the ancillary service.
"^DD",100,100.0085,.01,"DT")
2970308
"^DD",100,100.045,0)
RESPONSES SUB-FIELD^^2^6
"^DD",100,100.045,0,"DIK")
ORD2
"^DD",100,100.045,0,"DT")
2961003
"^DD",100,100.045,0,"IX","ID",100.045,.04)

"^DD",100,100.045,0,"NM","RESPONSES")

"^DD",100,100.045,0,"UP")
100
"^DD",100,100.045,.01,0)
ITEM ENTRY^NJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100.045,.01,1,0)
^.1^^0
"^DD",100,100.045,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",100,100.045,.01,21,0)
^^2^2^2950707^^
"^DD",100,100.045,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",100,100.045,.01,21,2,0)
by which this response was obtained.
"^DD",100,100.045,.01,"DT")
2910904
"^DD",100,100.045,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",100,100.045,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",100,100.045,.02,21,0)
^^2^2^2950707^^
"^DD",100,100.045,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",100,100.045,.02,21,2,0)
as type prompt.
"^DD",100,100.045,.02,"DT")
2950707
"^DD",100,100.045,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",100,100.045,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",100,100.045,.03,21,0)
^^2^2^2920225^
"^DD",100,100.045,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",100,100.045,.03,21,2,0)
individual instance.
"^DD",100,100.045,.03,"DT")
2910805
"^DD",100,100.045,.04,0)
ID^F^^0;4^K:$L(X)>10!($L(X)<2) X
"^DD",100,100.045,.04,1,0)
^.1
"^DD",100,100.045,.04,1,1,0)
100.045^ID
"^DD",100,100.045,.04,1,1,1)
S ^OR(100,DA(1),4.5,"ID",$E(X,1,30),DA)=""
"^DD",100,100.045,.04,1,1,2)
K ^OR(100,DA(1),4.5,"ID",$E(X,1,30),DA)
"^DD",100,100.045,.04,1,1,"DT")
2961003
"^DD",100,100.045,.04,3)
Answer must be 2-10 characters in length.
"^DD",100,100.045,.04,21,0)
^^2^2^2961003^
"^DD",100,100.045,.04,21,1,0)
This field assigns a free text identifier to this response value, for quick
"^DD",100,100.045,.04,21,2,0)
access to certain values in this order.
"^DD",100,100.045,.04,"DT")
2961003
"^DD",100,100.045,1,0)
VALUE^F^^1;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",100,100.045,1,3)
Answer must be 1-245 characters in length.
"^DD",100,100.045,1,21,0)
^^2^2^2920225^
"^DD",100,100.045,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",100,100.045,1,21,2,0)
type.
"^DD",100,100.045,1,"DT")
2910805
"^DD",100,100.045,2,0)
TEXT^100.0451^^2;0
"^DD",100,100.045,2,21,0)
^^1^1^2970926^^
"^DD",100,100.045,2,21,1,0)
This contains responses to items that are a word processing type.
"^DD",100,100.0451,0)
TEXT SUB-FIELD^^.01^1
"^DD",100,100.0451,0,"DT")
2910805
"^DD",100,100.0451,0,"NM","TEXT")

"^DD",100,100.0451,0,"UP")
100.045
"^DD",100,100.0451,.01,0)
TEXT^WL^^0;1^Q
"^DD",100,100.0451,.01,3)
Enter text.
"^DD",100,100.0451,.01,"DT")
2910805
"^DD",100,100.051,0)
ORDER DIAGNOSES SUB-FIELD^^1^2
"^DD",100,100.051,0,"DIK")
ORD2
"^DD",100,100.051,0,"DT")
3031216
"^DD",100,100.051,0,"IX","B",100.051,.01)

"^DD",100,100.051,0,"NM","ORDER DIAGNOSES")

"^DD",100,100.051,0,"UP")
100
"^DD",100,100.051,.01,0)
ORDER DIAGNOSES^P80'^ICD9(^0;1^Q
"^DD",100,100.051,.01,1,0)
^.1
"^DD",100,100.051,.01,1,1,0)
100.051^B
"^DD",100,100.051,.01,1,1,1)
S ^OR(100,DA(1),5.1,"B",$E(X,1,30),DA)=""
"^DD",100,100.051,.01,1,1,2)
K ^OR(100,DA(1),5.1,"B",$E(X,1,30),DA)
"^DD",100,100.051,.01,3)
Enter the diagnosis code for this order.
"^DD",100,100.051,.01,"DT")
3031216
"^DD",100,100.051,1,0)
EXPRESSION^P757.01'^LEX(757.01,^0;2^Q
"^DD",100,100.051,1,"DT")
3040714
"^DD",100,100.09,0)
ORDER CHECKS SUB-FIELD^^1^6
"^DD",100,100.09,0,"DIK")
ORD2
"^DD",100,100.09,0,"DT")
2971025
"^DD",100,100.09,0,"IX","B",100.09,.01)

"^DD",100,100.09,0,"NM","ORDER CHECKS")

"^DD",100,100.09,0,"UP")
100
"^DD",100,100.09,.01,0)
ORDER CHECK^MP100.8'^ORD(100.8,^0;1^Q
"^DD",100,100.09,.01,1,0)
^.1
"^DD",100,100.09,.01,1,1,0)
100.09^B
"^DD",100,100.09,.01,1,1,1)
S ^OR(100,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",100,100.09,.01,1,1,2)
K ^OR(100,DA(1),9,"B",$E(X,1,30),DA)
"^DD",100,100.09,.01,3)
Enter an order check found for this order.
"^DD",100,100.09,.01,21,0)
^^1^1^2971025^^
"^DD",100,100.09,.01,21,1,0)
This is an order check that was found to be true for this order.
"^DD",100,100.09,.01,"DT")
2971025
"^DD",100,100.09,.02,0)
CLINICAL DANGER LEVEL^S^1:HIGH;2:MODERATE;3:LOW;^0;2^Q
"^DD",100,100.09,.02,3)
Enter the clinical danger level of this order check.
"^DD",100,100.09,.02,21,0)
^^3^3^2960424^
"^DD",100,100.09,.02,21,1,0)
This is the clinical danger level associated with this check; checks
"^DD",100,100.09,.02,21,2,0)
flagged as 'HIGH' danger level will require a justification for
"^DD",100,100.09,.02,21,3,0)
overriding it and releasing the order.
"^DD",100,100.09,.02,"DT")
2960424
"^DD",100,100.09,.04,0)
OVERRIDE REASON^F^^0;4^K:$L(X)>80!($L(X)<1) X
"^DD",100,100.09,.04,3)
Answer must be 1-80 characters in length.
"^DD",100,100.09,.04,21,0)
^^2^2^2960424^
"^DD",100,100.09,.04,21,1,0)
This is the reason entered by the user as the justification for
"^DD",100,100.09,.04,21,2,0)
overriding the order check and releasing the order.
"^DD",100,100.09,.04,"DT")
2960424
"^DD",100,100.09,.05,0)
OVERRIDDEN BY^P200'^VA(200,^0;5^Q
"^DD",100,100.09,.05,3)
Enter the name of the person who is overriding this order check
"^DD",100,100.09,.05,21,0)
^^2^2^2960613^
"^DD",100,100.09,.05,21,1,0)
This is the user who chose to override this order check and entered the
"^DD",100,100.09,.05,21,2,0)
reason why.
"^DD",100,100.09,.05,"DT")
2960613
"^DD",100,100.09,.06,0)
DATE/TIME OVERRIDDEN^D^^0;6^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",100,100.09,.06,3)
Enter the date/time this order check was overridden.
"^DD",100,100.09,.06,21,0)
^^1^1^2960613^
"^DD",100,100.09,.06,21,1,0)
This is the date/time when this order check occurred and was overridden.
"^DD",100,100.09,.06,"DT")
2960613
"^DD",100,100.09,1,0)
ORDER CHECK MESSAGE^F^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",100,100.09,1,3)
Answer must be 1-245 characters in length.
"^DD",100,100.09,1,21,0)
^^1^1^2990518^
"^DD",100,100.09,1,21,1,0)
This is the actual text of the order check that was displayed to the user.
"^DD",100,100.09,1,"DT")
2990518
"^DD",100.05,100.05,0)
FIELD^^16^14
"^DD",100.05,100.05,0,"DDA")
N
"^DD",100.05,100.05,0,"DT")
3090618
"^DD",100.05,100.05,0,"IX","B",100.05,.01)

"^DD",100.05,100.05,0,"NM","ORDER CHECK INSTANCES")

"^DD",100.05,100.05,0,"VRPK")
OR
"^DD",100.05,100.05,.01,0)
ORDER^RP100'^OR(100,^0;1^Q
"^DD",100.05,100.05,.01,1,0)
^.1
"^DD",100.05,100.05,.01,1,1,0)
100.05^B
"^DD",100.05,100.05,.01,1,1,1)
S ^ORD(100.05,"B",$E(X,1,30),DA)=""
"^DD",100.05,100.05,.01,1,1,2)
K ^ORD(100.05,"B",$E(X,1,30),DA)
"^DD",100.05,100.05,.01,3)
Select the order that this order check is in reference to
"^DD",100.05,100.05,.01,21,0)
^^1^1^3090121^^
"^DD",100.05,100.05,.01,21,1,0)
This gives the order that the Order Check is related to.
"^DD",100.05,100.05,.01,"DT")
3090121
"^DD",100.05,100.05,1,0)
STATUS^P100.01'^ORD(100.01,^0;2^Q
"^DD",100.05,100.05,1,3)
Enter the status of the order when the order check occurred.
"^DD",100.05,100.05,1,21,0)
^^1^1^3090116^^
"^DD",100.05,100.05,1,21,1,0)
This is the status of the order when the Order Check occurred.
"^DD",100.05,100.05,1,"DT")
3090116
"^DD",100.05,100.05,2,0)
OCCURRENCE^F^^0;3^K:$L(X)>15!($L(X)<1) X
"^DD",100.05,100.05,2,3)
Enter a descriptor tag between 1 and 15 characters
"^DD",100.05,100.05,2,21,0)
^^6^6^3090116^
"^DD",100.05,100.05,2,21,1,0)
This is a description field that the application where the order check 
"^DD",100.05,100.05,2,21,2,0)
occurred can use to describe where/when the order check took place.  For 
"^DD",100.05,100.05,2,21,3,0)
instance, CPRS will use ACCEPTANCE_CPRS when the order check happened at 
"^DD",100.05,100.05,2,21,4,0)
order acceptance inside of the CPRS application. CPRS will use 
"^DD",100.05,100.05,2,21,5,0)
SIGNATURE_CPRS when the order check happened at order signature inside of 
"^DD",100.05,100.05,2,21,6,0)
the CPRS application.
"^DD",100.05,100.05,2,"DT")
3090116
"^DD",100.05,100.05,3,0)
USER^P200'^VA(200,^0;4^Q
"^DD",100.05,100.05,3,3)
Enter the user who saw the order checks
"^DD",100.05,100.05,3,21,0)
^^1^1^3090121^
"^DD",100.05,100.05,3,21,1,0)
This is the user that saw the order checks.
"^DD",100.05,100.05,3,"DT")
3090121
"^DD",100.05,100.05,4,0)
OCCURRENCE D/T^D^^0;5^S %DT="E" D ^%DT S X=Y K:X<1 X
"^DD",100.05,100.05,4,3)
Enter the date/time of the order check
"^DD",100.05,100.05,4,21,0)
^^1^1^3090115^
"^DD",100.05,100.05,4,21,1,0)
This is the date/time that the order checks happened.
"^DD",100.05,100.05,4,"DT")
3090121
"^DD",100.05,100.05,5,0)
ORDER CHECK^P100.8'^ORD(100.8,^1;1^Q
"^DD",100.05,100.05,5,3)
Enter the type of Order Check
"^DD",100.05,100.05,5,21,0)
^^1^1^3090121^
"^DD",100.05,100.05,5,21,1,0)
This field represents what type of order check took place
"^DD",100.05,100.05,5,"DT")
3090121
"^DD",100.05,100.05,6,0)
CLINICAL DANGER LEVEL^S^1:HIGH;2:MODERATE;3:LOW;^1;2^Q
"^DD",100.05,100.05,6,3)
Enter the Clinical Danger Level of this Order Check
"^DD",100.05,100.05,6,21,0)
^^2^2^3090115^
"^DD",100.05,100.05,6,21,1,0)
This is the clinical danger of the Order Check type (file 100.8) at the 
"^DD",100.05,100.05,6,21,2,0)
time this order check was seen.
"^DD",100.05,100.05,6,"DT")
3090115
"^DD",100.05,100.05,7,0)
OVERRIDE REASON^100.57^^3;0
"^DD",100.05,100.05,7,21,0)
^^2^2^3090116^
"^DD",100.05,100.05,7,21,1,0)
This field represents the reason that the provider is overriding the 
"^DD",100.05,100.05,7,21,2,0)
order check and continuing with placing the order.
"^DD",100.05,100.05,8,0)
ORDER CHECK MESSAGE^100.58^^2;0
"^DD",100.05,100.05,8,21,0)
^^2^2^3090115^
"^DD",100.05,100.05,8,21,1,0)
This field stores the text of the order check that was presented to the 
"^DD",100.05,100.05,8,21,2,0)
user.
"^DD",100.05,100.05,13,0)
PHARMACIST OVERRIDE COMMENTS^F^^11;1^K:$L(X)>80!($L(X)<1) X
"^DD",100.05,100.05,13,3)
Enter the reason that the pharmacist is overriding the order check
"^DD",100.05,100.05,13,21,0)
^^2^2^3090116^
"^DD",100.05,100.05,13,21,1,0)
This field represents the reason that the Pharmacist is overriding the 
"^DD",100.05,100.05,13,21,2,0)
Order Check and continuing with placing the order.
"^DD",100.05,100.05,13,"DT")
3090116
"^DD",100.05,100.05,14,0)
PHARMACIST^P200'^VA(200,^11;2^Q
"^DD",100.05,100.05,14,3)
Enter the Pharmacist who is entering the Pharmacist Override Comments
"^DD",100.05,100.05,14,8.5)
@
"^DD",100.05,100.05,14,21,0)
^^1^1^3090121^
"^DD",100.05,100.05,14,21,1,0)
This is the Pharmacist who entered the Pharmacist Override Comments
"^DD",100.05,100.05,14,"DT")
3090121
"^DD",100.05,100.05,14.1,0)
PHARMACIST COMMENTS D/T^D^^15;1^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",100.05,100.05,14.1,3)
Enter the date/time that the Pharmacist Override Comments were entered.
"^DD",100.05,100.05,14.1,21,0)
^^2^2^3090116^
"^DD",100.05,100.05,14.1,21,1,0)
This field represents the Date and Time that the Pharmacist Override 
"^DD",100.05,100.05,14.1,21,2,0)
Comments were entered.
"^DD",100.05,100.05,14.1,"DT")
3090121
"^DD",100.05,100.05,15,0)
MONOGRAPH^100.515^^16;0
"^DD",100.05,100.05,15,21,0)
^^1^1^3091023^
"^DD",100.05,100.05,15,21,1,0)
This field stores the monograph for Drug-Drug Interactions.
"^DD",100.05,100.05,16,0)
MONOGRAPH TERM^F^^17;1^K:$L(X)>50!($L(X)<1) X
"^DD",100.05,100.05,16,3)
Answer must be 1-50 characters in length
"^DD",100.05,100.05,16,21,0)
^^2^2^3090618^
"^DD",100.05,100.05,16,21,1,0)
This is the term that will be displayed to the user when selecting from a 
"^DD",100.05,100.05,16,21,2,0)
list of monographs to view.
"^DD",100.05,100.05,16,"DT")
3090618
"^DD",100.05,100.515,0)
MONOGRAPH SUB-FIELD^^.01^1
"^DD",100.05,100.515,0,"DT")
3090617
"^DD",100.05,100.515,0,"NM","MONOGRAPH")

"^DD",100.05,100.515,0,"UP")
100.05
"^DD",100.05,100.515,.01,0)
MONOGRAPH^WKx^^0;1^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",100.05,100.515,.01,.1)
MONOGRAPH DATA
"^DD",100.05,100.515,.01,3)
Enter Standard MUMPS code
"^DD",100.05,100.515,.01,9)
@
"^DD",100.05,100.515,.01,21,0)
^^2^2^3090617^
"^DD",100.05,100.515,.01,21,1,0)
This field will hold the monograph data that pharmacy sends back with 
"^DD",100.05,100.515,.01,21,2,0)
Drug Interaction order checks.
"^DD",100.05,100.515,.01,23,0)
^^1^1^3090617^
"^DD",100.05,100.515,.01,23,1,0)
This will be a word processing field with word wrap on.
"^DD",100.05,100.515,.01,"DT")
3090617
"^DD",100.05,100.57,0)
OVERRIDE REASON SUB-FIELD^^.01^1
"^DD",100.05,100.57,0,"DT")
3070622
"^DD",100.05,100.57,0,"NM","OVERRIDE REASON")

"^DD",100.05,100.57,0,"UP")
100.05
"^DD",100.05,100.57,.01,0)
OVERRIDE REASON^W^^0;1
"^DD",100.05,100.57,.01,"DT")
3070622
"^DD",100.05,100.58,0)
ORDER CHECK MESSAGE SUB-FIELD^^.01^1
"^DD",100.05,100.58,0,"DT")
3070622
"^DD",100.05,100.58,0,"NM","ORDER CHECK MESSAGE")

"^DD",100.05,100.58,0,"UP")
100.05
"^DD",100.05,100.58,.01,0)
ORDER CHECK MESSAGE^W^^0;1
"^DD",100.05,100.58,.01,"DT")
3070622
"^DD",100.5,100.5,2,0)
TYPE OF EVENT^RS^A:ADMISSION;T:TRANSFER;D:DISCHARGE;O:O.R.;M:MANUAL RELEASE;^0;2^Q
"^DD",100.5,100.5,2,1,0)
^.1
"^DD",100.5,100.5,2,1,1,0)
100.5^ADT
"^DD",100.5,100.5,2,1,1,1)
S ^ORD(100.5,"ADT",$E(X,1,30),DA)=""
"^DD",100.5,100.5,2,1,1,2)
K ^ORD(100.5,"ADT",$E(X,1,30),DA)
"^DD",100.5,100.5,2,1,1,"DT")
3011005
"^DD",100.5,100.5,2,3)
Enter the type of event that should cause delayed orders to be released.
"^DD",100.5,100.5,2,21,0)
^^11^11^3090825^
"^DD",100.5,100.5,2,21,1,0)
This is the event that should cause delayed orders to be released to the
"^DD",100.5,100.5,2,21,2,0)
service(s) for action; for OR (Surgery) events, the orders will be
"^DD",100.5,100.5,2,21,3,0)
released when TIME PAT IN OR (#130,.205) is entered in the Surgery
"^DD",100.5,100.5,2,21,4,0)
package.  
"^DD",100.5,100.5,2,21,5,0)
 
"^DD",100.5,100.5,2,21,6,0)
Orders delayed for Manual Release will not be automatically
"^DD",100.5,100.5,2,21,7,0)
released by CPRS at all and can only be released via the "Release to
"^DD",100.5,100.5,2,21,8,0)
Service" action by a user who is authorized to do so.  Authorization is
"^DD",100.5,100.5,2,21,9,0)
controlled by the parameter OREVNT MANUAL RELEASE CONTROL, which lets
"^DD",100.5,100.5,2,21,10,0)
sites choose whether release is controlled by keys or by the parameter
"^DD",100.5,100.5,2,21,11,0)
OREVNT MANUAL RELEASE or both.
"^DD",100.5,100.5,2,"DT")
3090311
"^DD",101.41,101.41,0)
FIELD^^99^30
"^DD",101.41,101.41,0,"DDA")
N
"^DD",101.41,101.41,0,"DT")
2980501
"^DD",101.41,101.41,0,"IX","AB",101.41,.01)

"^DD",101.41,101.41,0,"IX","AD",101.412,2)

"^DD",101.41,101.41,0,"IX","AM",101.41,99)

"^DD",101.41,101.41,0,"IX","AM2",101.41,2)

"^DD",101.41,101.41,0,"IX","AM51",101.41,51)

"^DD",101.41,101.41,0,"IX","AM52",101.41,52)

"^DD",101.41,101.41,0,"IX","AMM",101.412,.01)

"^DD",101.41,101.41,0,"IX","AMM2",101.412,2)

"^DD",101.41,101.41,0,"IX","AMM3",101.412,3)

"^DD",101.41,101.41,0,"IX","AMM4",101.412,4)

"^DD",101.41,101.41,0,"IX","AMM5",101.412,5)

"^DD",101.41,101.41,0,"IX","APKG",101.41,7)

"^DD",101.41,101.41,0,"IX","C",101.41,2)

"^DD",101.41,101.41,0,"NM","ORDER DIALOG")

"^DD",101.41,101.41,0,"PT",100,2)

"^DD",101.41,101.41,0,"PT",100,7)

"^DD",101.41,101.41,0,"PT",100.045,.02)

"^DD",101.41,101.41,0,"PT",100.5,4)

"^DD",101.41,101.41,0,"PT",100.5,5)

"^DD",101.41,101.41,0,"PT",100.98,4)

"^DD",101.41,101.41,0,"PT",101.412,1)

"^DD",101.41,101.41,0,"PT",101.412,2)

"^DD",101.41,101.41,0,"PT",101.415,2)

"^DD",101.41,101.41,0,"PT",101.416,.02)

"^DD",101.41,101.41,0,"PT",101.441,.01)

"^DD",101.41,101.41,0,"PT",801.41,15)

"^DD",101.41,101.41,0,"PT",801.4118,.01)

"^DD",101.41,101.41,0,"VRPK")
OR
"^DD",101.41,101.41,.01,0)
NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",101.41,101.41,.01,1,0)
^.1^^-1
"^DD",101.41,101.41,.01,1,2,0)
101.41^AB
"^DD",101.41,101.41,.01,1,2,1)
S ^ORD(101.41,"AB",$E(X,1,63),DA)=""
"^DD",101.41,101.41,.01,1,2,2)
K ^ORD(101.41,"AB",$E(X,1,63),DA)
"^DD",101.41,101.41,.01,1,2,"%D",0)
^^1^1^2971020^
"^DD",101.41,101.41,.01,1,2,"%D",1,0)
This is a regular index on the full 63 characters of the Name field.
"^DD",101.41,101.41,.01,1,2,"DT")
2971020
"^DD",101.41,101.41,.01,3)
Answer must be 3-63 characters in length.
"^DD",101.41,101.41,.01,21,0)
^^3^3^2971219^
"^DD",101.41,101.41,.01,21,1,0)
This is the name of the dialog; entries that were converted from the
"^DD",101.41,101.41,.01,21,2,0)
Protocol file will retain the same name.  Namespacing is not required,
"^DD",101.41,101.41,.01,21,3,0)
but still encouraged.
"^DD",101.41,101.41,.01,"DT")
2971020
"^DD",101.41,101.41,2,0)
DISPLAY TEXT^FX^^0;2^K:$L(X)>80!($L(X)<3)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.41,2,1,0)
^.1
"^DD",101.41,101.41,2,1,1,0)
101.41^C
"^DD",101.41,101.41,2,1,1,1)
S ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)=""
"^DD",101.41,101.41,2,1,1,2)
K ^ORD(101.41,"C",$$UP^XLFSTR($E(X,1,63)),DA)
"^DD",101.41,101.41,2,1,1,"DT")
2950112
"^DD",101.41,101.41,2,1,2,0)
101.41^AM2^MUMPS
"^DD",101.41,101.41,2,1,2,1)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,2)
D REDOM^ORDD41
"^DD",101.41,101.41,2,1,2,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,2,1,2,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.41,2,1,2,"DT")
2990210
"^DD",101.41,101.41,2,3)
Answer must be 3-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=). 
"^DD",101.41,101.41,2,21,0)
^.001^1^1^3010913^^^^
"^DD",101.41,101.41,2,21,1,0)
The text of this dialog's name as it appears on a menu or subheader.
"^DD",101.41,101.41,2,"DT")
3000823
"^DD",101.41,101.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",101.41,101.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",101.41,101.41,3,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,3,21,1,0)
This field disables use of this dialog when it contains text.  The text
"^DD",101.41,101.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",101.41,101.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",101.41,101.41,3,"DT")
2950112
"^DD",101.41,101.41,4,0)
TYPE^RS^P:prompt;D:dialog;Q:quick order;O:order set;M:menu;A:action;^0;4^Q
"^DD",101.41,101.41,4,3)
Specify a type for this dialog.
"^DD",101.41,101.41,4,21,0)
^^5^5^2950716^^^^
"^DD",101.41,101.41,4,21,1,0)
This field defines the type of order dialog to be processed.  Control
"^DD",101.41,101.41,4,21,2,0)
will be passed to the OE/RR Dialog Processor for dialog items; menu types
"^DD",101.41,101.41,4,21,3,0)
are used for displaying and selecting dialog items.  Action types will only
"^DD",101.41,101.41,4,21,4,0)
execute the entry and exit actions, ignoring any items that may exist; these
"^DD",101.41,101.41,4,21,5,0)
dialogs should not create entries in the Orders file.
"^DD",101.41,101.41,4,"DT")
2950716
"^DD",101.41,101.41,5,0)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"^DD",101.41,101.41,5,3)
Enter the display group containing orderable items defined by this dialog.
"^DD",101.41,101.41,5,21,0)
^^3^3^2950112^
"^DD",101.41,101.41,5,21,1,0)
This field determines what display group this dialog has been defined for.
"^DD",101.41,101.41,5,21,2,0)
It will define which orderable items are selectable with this dialog,
"^DD",101.41,101.41,5,21,3,0)
as well as what service to send the order to when it is complete.
"^DD",101.41,101.41,5,"DT")
2950112
"^DD",101.41,101.41,6,0)
SIGNATURE REQUIRED^S^0:NONE;1:ORELSE;2:ORES;^0;6^Q
"^DD",101.41,101.41,6,3)
Enter the OR key required to sign orders created by this dialog
"^DD",101.41,101.41,6,21,0)
^^6^6^2970318^^
"^DD",101.41,101.41,6,21,1,0)
This field indicates what signature will be required for orders created by
"^DD",101.41,101.41,6,21,2,0)
this dialog, to be considered complete and ready to release to the service
"^DD",101.41,101.41,6,21,3,0)
for action.  If this flag is set to NO and the dialog contains a prompt
"^DD",101.41,101.41,6,21,4,0)
for item(s) from the Orderable Item file, the order created may still
"^DD",101.41,101.41,6,21,5,0)
require a signature if any of the items ordered are individually flagged
"^DD",101.41,101.41,6,21,6,0)
as requiring a signature.
"^DD",101.41,101.41,6,"DT")
2970318
"^DD",101.41,101.41,7,0)
PACKAGE^P9.4'^DIC(9.4,^0;7^Q
"^DD",101.41,101.41,7,1,0)
^.1
"^DD",101.41,101.41,7,1,1,0)
101.41^APKG
"^DD",101.41,101.41,7,1,1,1)
S ^ORD(101.41,"APKG",$E(X,1,30),DA)=""
"^DD",101.41,101.41,7,1,1,2)
K ^ORD(101.41,"APKG",$E(X,1,30),DA)
"^DD",101.41,101.41,7,1,1,"DT")
2970325
"^DD",101.41,101.41,7,3)
Enter the VISTA package that is to receive orders created by this dialog.
"^DD",101.41,101.41,7,21,0)
^^3^3^2950208^
"^DD",101.41,101.41,7,21,1,0)
This is the VISTA package that is intended to receive orders created by
"^DD",101.41,101.41,7,21,2,0)
this dialog; this is required for creating the HL7 messages to pass the
"^DD",101.41,101.41,7,21,3,0)
order.
"^DD",101.41,101.41,7,"DT")
2970325
"^DD",101.41,101.41,8,0)
VERIFY ORDER^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.41,8,3)
Enter YES to have orders created by this dialog presented to the user before saving, with the opportunity to edit.
"^DD",101.41,101.41,8,21,0)
^^3^3^2950623^
"^DD",101.41,101.41,8,21,1,0)
This field is a flag, which determines if the order created by this dialog
"^DD",101.41,101.41,8,21,2,0)
will be presented to the user for verification before saving in the Orders
"^DD",101.41,101.41,8,21,3,0)
file; for most quick orders, this flag should be set to 0 (no).
"^DD",101.41,101.41,8,"DT")
2950623
"^DD",101.41,101.41,9,0)
ASK FOR ANOTHER ORDER^S^0:NO;1:YES;2:YES-DON'T ASK;^0;9^Q
"^DD",101.41,101.41,9,3)
Enter YES to have the user asked to enter another order from this dialog before exiting.
"^DD",101.41,101.41,9,21,0)
^^6^6^2970616^^^
"^DD",101.41,101.41,9,21,1,0)
This field allows the user to add another order from this dialog, when the
"^DD",101.41,101.41,9,21,2,0)
initial order is accepted and placed; if set to YES, the user will be
"^DD",101.41,101.41,9,21,3,0)
asked "Add another <dialog display text> order?" to allow for either
"^DD",101.41,101.41,9,21,4,0)
exiting the processor or adding an additional order of the same type.
"^DD",101.41,101.41,9,21,5,0)
This field can also be set to YES-DON'T ASK to force the processor to
"^DD",101.41,101.41,9,21,6,0)
automatically drop into prompting for another order without asking first.
"^DD",101.41,101.41,9,"DT")
2970616
"^DD",101.41,101.41,10,0)
ITEMS^101.412IA^^10;0
"^DD",101.41,101.41,10,21,0)
^^5^5^2990211^^^^
"^DD",101.41,101.41,10,21,1,0)
This field contains the components for dialogs:
"^DD",101.41,101.41,10,21,2,0)
     Dialogs      -> prompts
"^DD",101.41,101.41,10,21,3,0)
     Quick orders -> prompts (completed)
"^DD",101.41,101.41,10,21,4,0)
     Order sets   -> dialogs or quick orders
"^DD",101.41,101.41,10,21,5,0)
     Menus        -> dialogs, quick orders, or order sets
"^DD",101.41,101.41,11,0)
DATA TYPE^S^D:date/time;R:free text date/time;F:free text;N:numeric;S:set of codes;Y:yes/no;P:pointer;W:word processing;^1;1^Q
"^DD",101.41,101.41,11,3)
Enter the type of data to be collected at this prompt.
"^DD",101.41,101.41,11,21,0)
^^2^2^2950823^^
"^DD",101.41,101.41,11,21,1,0)
This is the type of data being prompted for; this field is used to define
"^DD",101.41,101.41,11,21,2,0)
a call to the reader (^DIR) in most cases.
"^DD",101.41,101.41,11,23,0)
^^1^1^2950823^^
"^DD",101.41,101.41,11,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,11,"DT")
2950407
"^DD",101.41,101.41,12,0)
DOMAIN^F^^1;2^K:$L(X)>235!($L(X)<1) X
"^DD",101.41,101.41,12,3)
Answer must be 1-235 characters in length.
"^DD",101.41,101.41,12,21,0)
^^3^3^2990225^^^^
"^DD",101.41,101.41,12,21,1,0)
This is a parameter that may be used to further specify the data type.
"^DD",101.41,101.41,12,21,2,0)
The string stored here should be appropriate for the second ^-piece of
"^DD",101.41,101.41,12,21,3,0)
DIR(0) when used with the data type field.
"^DD",101.41,101.41,12,23,0)
^^1^1^2990225^^^^
"^DD",101.41,101.41,12,23,1,0)
Used with Prompt-type only.
"^DD",101.41,101.41,12,"DT")
2990225
"^DD",101.41,101.41,13,0)
ID^F^^1;3^K:$L(X)>10!($L(X)<2) X
"^DD",101.41,101.41,13,3)
Answer must be 2-10 characters in length.
"^DD",101.41,101.41,13,21,0)
^.001^20^20^3010727^^
"^DD",101.41,101.41,13,21,1,0)
This field may contain a single word identifier which will be
"^DD",101.41,101.41,13,21,2,0)
stored with the user response in the Orders file #100, where it
"^DD",101.41,101.41,13,21,3,0)
will be indexed for quick reference to certain values in the
"^DD",101.41,101.41,13,21,4,0)
order dialog.  The following are some examples of values
"^DD",101.41,101.41,13,21,5,0)
currently in use:
"^DD",101.41,101.41,13,21,6,0)
 
"^DD",101.41,101.41,13,21,7,0)
   START      -> Start date/time
"^DD",101.41,101.41,13,21,8,0)
   STOP       -> Stop date/time
"^DD",101.41,101.41,13,21,9,0)
   SCHEDULE   -> Administration Schedule
"^DD",101.41,101.41,13,21,10,0)
   ORDERABLE  -> Orderable Item
"^DD",101.41,101.41,13,21,11,0)
   DRUG       -> Dispense Drug
"^DD",101.41,101.41,13,21,12,0)
   CANCEL     -> Cancel Future Orders flag
"^DD",101.41,101.41,13,21,13,0)
   COMMENT    -> Word processing comments
"^DD",101.41,101.41,13,21,14,0)
 
"^DD",101.41,101.41,13,21,15,0)
These values must be unique among entries within an order dialog
"^DD",101.41,101.41,13,21,16,0)
but do not need to be unique across the entire file.  Be sure to
"^DD",101.41,101.41,13,21,17,0)
check the IDs assigned to generic text entries to make sure that
"^DD",101.41,101.41,13,21,18,0)
all IDs are unique.  In order to avoid potential problems it's
"^DD",101.41,101.41,13,21,19,0)
recommended that you use unique IDs for any local entries that you
"^DD",101.41,101.41,13,21,20,0)
create.
"^DD",101.41,101.41,13,"DT")
2960215
"^DD",101.41,101.41,17,0)
VALIDATION^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,17,9)
@
"^DD",101.41,101.41,17,21,0)
^^3^3^2960912^
"^DD",101.41,101.41,17,21,1,0)
This is MUMPS code that will be executed at the time of releasing an
"^DD",101.41,101.41,17,21,2,0)
order created with this dialog; dialog responses may be checked again
"^DD",101.41,101.41,17,21,3,0)
here before releasing the order to the service.
"^DD",101.41,101.41,17,"DT")
2960912
"^DD",101.41,101.41,19,0)
ADDITIONAL TEXT^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,19,9)
@
"^DD",101.41,101.41,19,21,0)
^^3^3^2960405^^
"^DD",101.41,101.41,19,21,1,0)
This is MUMPS code that will be executed when order ORIFN created by this
"^DD",101.41,101.41,19,21,2,0)
dialog is about to be displayed; any string that should be appended to the
"^DD",101.41,101.41,19,21,3,0)
order text should be returned in Y.
"^DD",101.41,101.41,19,"DT")
2960405
"^DD",101.41,101.41,20,0)
DESCRIPTION^101.411^^2;0
"^DD",101.41,101.41,20,21,0)
^^1^1^2971219^
"^DD",101.41,101.41,20,21,1,0)
This is a description of the dialog and its uses.
"^DD",101.41,101.41,21,0)
RESPONSES^101.416^^6;0
"^DD",101.41,101.41,21,21,0)
^^2^2^2971219^
"^DD",101.41,101.41,21,21,1,0)
This multiple contains any responses to prompts that have been pre-answered
"^DD",101.41,101.41,21,21,2,0)
to create a quick order.
"^DD",101.41,101.41,30,0)
ENTRY ACTION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,30,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,30,9)
@
"^DD",101.41,101.41,30,21,0)
^^4^4^2950425^
"^DD",101.41,101.41,30,21,1,0)
This is MUMPS code that will be executed at the top of a dialog, prior to
"^DD",101.41,101.41,30,21,2,0)
the execution of any prompts; it may perform functions such as listing
"^DD",101.41,101.41,30,21,3,0)
the recent Radiology exams before ordering a new one, or alerting the
"^DD",101.41,101.41,30,21,4,0)
user to an existing diet order before making a change.
"^DD",101.41,101.41,30,"DT")
2950425
"^DD",101.41,101.41,31,0)
QUICK SETUP^K^^3.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,31,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,31,9)
@
"^DD",101.41,101.41,31,21,0)
^^3^3^2970113^
"^DD",101.41,101.41,31,21,1,0)
This is MUMPS code that will be executed in the place of the Entry Action
"^DD",101.41,101.41,31,21,2,0)
when creating quick orders for this dialog; variables may be set here
"^DD",101.41,101.41,31,21,3,0)
instead to bypass the usual dependence on specific patient values.
"^DD",101.41,101.41,31,"DT")
2970113
"^DD",101.41,101.41,40,0)
EXIT ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.41,40,3)
This is Standard MUMPS code.
"^DD",101.41,101.41,40,9)
@
"^DD",101.41,101.41,40,21,0)
^^2^2^2950622^
"^DD",101.41,101.41,40,21,1,0)
This is MUMPS code that will be executed upon completion of processing the
"^DD",101.41,101.41,40,21,2,0)
dialog; it is currently used only with dialog-type entries.
"^DD",101.41,101.41,40,"DT")
2950622
"^DD",101.41,101.41,50,0)
CONTROLS^101.415A^^50;0
"^DD",101.41,101.41,51,0)
COLUMN WIDTH^NJ3,0^^5;1^K:+X'=X!(X>240)!(X<20)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,51,1,0)
^.1
"^DD",101.41,101.41,51,1,1,0)
101.41^AM51^MUMPS
"^DD",101.41,101.41,51,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,51,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,51,1,1,"%D",1,0)
Update TIMESTAMP whenever COLUMN WIDTH is changed.
"^DD",101.41,101.41,51,1,1,"DT")
2990210
"^DD",101.41,101.41,51,3)
Type a Number between 20 and 240, 0 Decimal Digits
"^DD",101.41,101.41,51,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,51,21,1,0)
This is the width, in characters, for each column in a menu.  For example,
"^DD",101.41,101.41,51,21,2,0)
to have 3 columns on an 80 character device, enter a width of 26.
"^DD",101.41,101.41,51,"DT")
2990210
"^DD",101.41,101.41,52,0)
MNEMONIC WIDTH^NJ1,0^^5;2^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,52,1,0)
^.1
"^DD",101.41,101.41,52,1,1,0)
101.41^AM52^MUMPS
"^DD",101.41,101.41,52,1,1,1)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,2)
D REDO^ORDD41
"^DD",101.41,101.41,52,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.41,52,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC WIDTH is changed.
"^DD",101.41,101.41,52,1,1,"DT")
2990210
"^DD",101.41,101.41,52,3)
Type a Number between 1 and 9, 0 Decimal Digits
"^DD",101.41,101.41,52,21,0)
^^2^2^2950623^
"^DD",101.41,101.41,52,21,1,0)
This field allows the width of item mnemonics to be varied; the default
"^DD",101.41,101.41,52,21,2,0)
value is 5.
"^DD",101.41,101.41,52,"DT")
2990210
"^DD",101.41,101.41,53,0)
PATH SWITCH^S^1:YES;0:NO;^5;3^Q
"^DD",101.41,101.41,53,3)
Enter YES if this menu should be redisplayed when traversing back up the menu tree.
"^DD",101.41,101.41,53,21,0)
^^5^5^2950623^
"^DD",101.41,101.41,53,21,1,0)
This switch allows the user, when traversing back UP the tree of menus and
"^DD",101.41,101.41,53,21,2,0)
items, to select a new path back down the tree.  In other words, the menu
"^DD",101.41,101.41,53,21,3,0)
is redisplayed when returning to that menu's level in the tree and
"^DD",101.41,101.41,53,21,4,0)
processing back down the tree is possible from that point.  If nothing is
"^DD",101.41,101.41,53,21,5,0)
selected from the menu, the path continues back up the tree.
"^DD",101.41,101.41,53,"DT")
2950623
"^DD",101.41,101.41,54,0)
LISTBOX TEXT^F^^5;4^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.41,54,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.41,54,"DT")
2960524
"^DD",101.41,101.41,55,0)
WINDOW FORM ID^NJ4,0^^5;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.41,55,3)
Type a Number between 0 and 9999, 0 Decimal Digits
"^DD",101.41,101.41,55,21,0)
^.001^23^23^3010727^^
"^DD",101.41,101.41,55,21,1,0)
This field tells the GUI DELPHI code which form to use to process the
"^DD",101.41,101.41,55,21,2,0)
order dialog.  Each number represents a unique form.  Following are some
"^DD",101.41,101.41,55,21,3,0)
of the more common codes and their corresponding form in DELPHI.
"^DD",101.41,101.41,55,21,4,0)
 
"^DD",101.41,101.41,55,21,5,0)
    Form Name     Windows Form ID
"^DD",101.41,101.41,55,21,6,0)
    ---------     ---------------
"^DD",101.41,101.41,55,21,7,0)
  OD_ACTIVITY           100
"^DD",101.41,101.41,55,21,8,0)
  OD_ALLERGY            105
"^DD",101.41,101.41,55,21,9,0)
  OD_CONSULT            110
"^DD",101.41,101.41,55,21,10,0)
  OD_PROCEDURE          112
"^DD",101.41,101.41,55,21,11,0)
  OD_DIET_TXT           115
"^DD",101.41,101.41,55,21,12,0)
  OD_DIET               117
"^DD",101.41,101.41,55,21,13,0)
  OD_LAB                120
"^DD",101.41,101.41,55,21,14,0)
  OD_MEDINPT            130
"^DD",101.41,101.41,55,21,15,0)
  OD_MEDS               135
"^DD",101.41,101.41,55,21,16,0)
  OD_MEDOUTPT           140
"^DD",101.41,101.41,55,21,17,0)
  OD_NURSING            150
"^DD",101.41,101.41,55,21,18,0)
  OD_MISC               151
"^DD",101.41,101.41,55,21,19,0)
  OD_GENERIC            152
"^DD",101.41,101.41,55,21,20,0)
  OD_IMAGING            160
"^DD",101.41,101.41,55,21,21,0)
  OD_VITALS             171 
"^DD",101.41,101.41,55,21,22,0)
  OD_MEDIV              180
"^DD",101.41,101.41,55,21,23,0)
  OD_TEXTONLY           999
"^DD",101.41,101.41,55,"DT")
2960804
"^DD",101.41,101.41,56,0)
CREATE PARENT ORDER^S^1:YES;0:NO;^5;6^Q
"^DD",101.41,101.41,56,3)
Enter YES if a parent order should be created for this order set
"^DD",101.41,101.41,56,21,0)
^^6^6^2970227^
"^DD",101.41,101.41,56,21,1,0)
This flag indicates whether a parent order should be created to group
"^DD",101.41,101.41,56,21,2,0)
together all the orders created by this order set; this flag is only
"^DD",101.41,101.41,56,21,3,0)
valid with SET type order dialogs.  If this value is YES, a parent
"^DD",101.41,101.41,56,21,4,0)
order will be created, and only the parent will be presented on the
"^DD",101.41,101.41,56,21,5,0)
orders list for display and action; NO will prevent a parent from being
"^DD",101.41,101.41,56,21,6,0)
created and all orders will be created and displayed independently.
"^DD",101.41,101.41,56,"DT")
2970227
"^DD",101.41,101.41,57,0)
DISPLAY SUBHEADER^S^1:YES;0:NO;^5;7^Q
"^DD",101.41,101.41,57,3)
Enter YES if a subheader should be displayed as each order in this set is processed
"^DD",101.41,101.41,57,21,0)
^^3^3^2970227^
"^DD",101.41,101.41,57,21,1,0)
This flag indicates whether a subheader is to be displayed for each order
"^DD",101.41,101.41,57,21,2,0)
in this set as it is processed and placed; this flag is only valid with
"^DD",101.41,101.41,57,21,3,0)
SET type order dialogs.
"^DD",101.41,101.41,57,"DT")
2970227
"^DD",101.41,101.41,58,0)
AUTO-ACCEPT QUICK ORDER^S^1:YES;^5;8^Q
"^DD",101.41,101.41,58,3)
Enter 'Yes' if the order should be placed without displaying the dialog window.
"^DD",101.41,101.41,58,21,0)
^^2^2^2980902^
"^DD",101.41,101.41,58,21,1,0)
This can be set to yes for a quick order so that it can be placed simply
"^DD",101.41,101.41,58,21,2,0)
by clicking on it in the GUI (no ordering dialog is displayed).
"^DD",101.41,101.41,58,"DT")
2980902
"^DD",101.41,101.41,99,0)
TIMESTAMP^F^^99;1^K:$L(X)>15!($L(X)<1) X
"^DD",101.41,101.41,99,1,0)
^.1
"^DD",101.41,101.41,99,1,1,0)
101.41^AM^MUMPS
"^DD",101.41,101.41,99,1,1,1)
D SET^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,2)
D KILL^ORDD41(DA)
"^DD",101.41,101.41,99,1,1,"%D",0)
^^2^2^2990210^
"^DD",101.41,101.41,99,1,1,"%D",1,0)
Recompiles order dialog menus in ^XUTL("XQORM",<dialog#>_";ORD(101.41,")
"^DD",101.41,101.41,99,1,1,"%D",2,0)
whenever fields necessary to displaying the menu are changed.
"^DD",101.41,101.41,99,1,1,"DT")
2990210
"^DD",101.41,101.41,99,3)
Answer must be 1-15 characters in length.
"^DD",101.41,101.41,99,21,0)
^^2^2^2980501^
"^DD",101.41,101.41,99,21,1,0)
For menus, this contains the $H time the menu was last compiled for use
"^DD",101.41,101.41,99,21,2,0)
with the Unwinder utility (^XQOR).
"^DD",101.41,101.41,99,"DT")
2990210
"^DD",101.41,101.411,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",101.41,101.411,0,"DT")
2950407
"^DD",101.41,101.411,0,"NM","DESCRIPTION")

"^DD",101.41,101.411,0,"UP")
101.41
"^DD",101.41,101.411,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",101.41,101.411,.01,3)
Enter a description of this dialog.
"^DD",101.41,101.411,.01,21,0)
^^1^1^2950425^^
"^DD",101.41,101.411,.01,21,1,0)
This field contains a description of the content and use of this dialog.
"^DD",101.41,101.411,.01,"DT")
2950407
"^DD",101.41,101.412,0)
ITEMS SUB-FIELD^^117^37
"^DD",101.41,101.412,0,"DT")
2971117
"^DD",101.41,101.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^ORD(101.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",101.41,101.412,0,"IX","ATXT",101.412,21)

"^DD",101.41,101.412,0,"IX","B",101.412,.01)

"^DD",101.41,101.412,0,"IX","D",101.412,2)

"^DD",101.41,101.412,0,"IX","DAD",101.412,1)

"^DD",101.41,101.412,0,"IX","DAD1",101.412,.01)

"^DD",101.41,101.412,0,"NM","ITEMS")

"^DD",101.41,101.412,0,"UP")
101.41
"^DD",101.41,101.412,.01,0)
SEQUENCE^MNJ5,1^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.41,101.412,.01,1,0)
^.1
"^DD",101.41,101.412,.01,1,1,0)
101.412^B
"^DD",101.41,101.412,.01,1,1,1)
S ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.412,.01,1,1,2)
K ^ORD(101.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.41,101.412,.01,1,2,0)
101.412^DAD1^MUMPS
"^DD",101.41,101.412,.01,1,2,1)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) S:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)=""
"^DD",101.41,101.412,.01,1,2,2)
N ORP S ORP=$P(^ORD(101.41,DA(1),10,DA,0),U,11) K:ORP ^ORD(101.41,DA(1),10,"DAD",ORP,X,DA)
"^DD",101.41,101.412,.01,1,2,"%D",0)
^^1^1^2950511^
"^DD",101.41,101.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,.01,1,2,"DT")
2950511
"^DD",101.41,101.412,.01,1,3,0)
101.41^AMM^MUMPS
"^DD",101.41,101.412,.01,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,.01,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",101.41,101.412,.01,1,3,"DT")
2990210
"^DD",101.41,101.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",101.41,101.412,.01,21,0)
^^2^2^2971117^^^^
"^DD",101.41,101.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",101.41,101.412,.01,21,2,0)
processed.
"^DD",101.41,101.412,.01,"DT")
2990210
"^DD",101.41,101.412,.1,0)
INPUT TRANSFORM^K^^.1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,.1,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,.1,9)
@
"^DD",101.41,101.412,.1,21,0)
^^2^2^2950816^
"^DD",101.41,101.412,.1,21,1,0)
This is code that will be used as the third piece of DIR(0) when asking
"^DD",101.41,101.412,.1,21,2,0)
this prompt.
"^DD",101.41,101.412,.1,"DT")
2950816
"^DD",101.41,101.412,1,0)
PARENT^P101.41'^ORD(101.41,^0;11^Q
"^DD",101.41,101.412,1,1,0)
^.1
"^DD",101.41,101.412,1,1,1,0)
101.412^DAD^MUMPS
"^DD",101.41,101.412,1,1,1,1)
S ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)=""
"^DD",101.41,101.412,1,1,1,2)
K ^ORD(101.41,DA(1),10,"DAD",X,$P(^ORD(101.41,DA(1),10,DA,0),U),DA)
"^DD",101.41,101.412,1,1,1,"%D",0)
^^1^1^2950511^^
"^DD",101.41,101.412,1,1,1,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",101.41,101.412,1,1,1,"DT")
2950511
"^DD",101.41,101.412,1,3)
If this prompt is subordinate to another in this dialog, enter the parent prompt here
"^DD",101.41,101.412,1,21,0)
^^4^4^2950511^
"^DD",101.41,101.412,1,21,1,0)
This field controls the behavior of this prompt.  If a parent is defined
"^DD",101.41,101.412,1,21,2,0)
here, this prompt will be asked from within the parent's dialog; when it
"^DD",101.41,101.412,1,21,3,0)
is invoked independently based on its position sequence number, the child
"^DD",101.41,101.412,1,21,4,0)
prompt will be ignored.
"^DD",101.41,101.412,1,"DT")
2950511
"^DD",101.41,101.412,2,0)
ITEM^P101.41'X^ORD(101.41,^0;2^D TREE^ORDD41
"^DD",101.41,101.412,2,1,0)
^.1
"^DD",101.41,101.412,2,1,1,0)
101.41^AD
"^DD",101.41,101.412,2,1,1,1)
S ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",101.41,101.412,2,1,1,2)
K ^ORD(101.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",101.41,101.412,2,1,1,"DT")
2950123
"^DD",101.41,101.412,2,1,2,0)
101.412^D
"^DD",101.41,101.412,2,1,2,1)
S ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.412,2,1,2,2)
K ^ORD(101.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",101.41,101.412,2,1,2,"DT")
2950411
"^DD",101.41,101.412,2,1,3,0)
101.41^AMM2^MUMPS
"^DD",101.41,101.412,2,1,3,1)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,2)
D REDOX^ORDD41
"^DD",101.41,101.412,2,1,3,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",101.41,101.412,2,1,3,"DT")
2990210
"^DD",101.41,101.412,2,3)
Enter an order dialog; a dialog that is an ancestor may not also be a sub-item.
"^DD",101.41,101.412,2,21,0)
^^3^3^2950123^
"^DD",101.41,101.412,2,21,1,0)
This field points to an order dialog which is subordinate to this dialog.
"^DD",101.41,101.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",101.41,101.412,2,21,3,0)
as an item.
"^DD",101.41,101.412,2,"DT")
2990217
"^DD",101.41,101.412,3,0)
MNEMONIC^FX^^0;3^K:$L(X)>4!($L(X)<1)!(+X=X&($L(X,".")>1))!($$CHKMNE^ORUTL(X)) X
"^DD",101.41,101.412,3,1,0)
^.1
"^DD",101.41,101.412,3,1,1,0)
101.41^AMM3^MUMPS
"^DD",101.41,101.412,3,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,3,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,3,1,1,"%D",1,0)
Update TIMESTAMP whenever MNEMONIC is changed.
"^DD",101.41,101.412,3,1,1,"DT")
2990210
"^DD",101.41,101.412,3,3)
Enter a mnemonic to be used when this dialog is displayed for selection, 1-4 characters in length with no decimal places if numeric. Standard list manager mnemonics may not be used.
"^DD",101.41,101.412,3,21,0)
^.001^2^2^3010727^^^^
"^DD",101.41,101.412,3,21,1,0)
This is a short abbreviation for this item dialog to be used when this
"^DD",101.41,101.412,3,21,2,0)
dialog is displayed for selection.
"^DD",101.41,101.412,3,"DT")
3000822
"^DD",101.41,101.412,4,0)
DISPLAY TEXT^FX^^0;4^K:$L(X)>80!($L(X)<1)!($$CHKNAM^ORUTL(X)) X
"^DD",101.41,101.412,4,1,0)
^.1
"^DD",101.41,101.412,4,1,1,0)
101.41^AMM4^MUMPS
"^DD",101.41,101.412,4,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,4,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,4,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY TEXT is changed.
"^DD",101.41,101.412,4,1,1,"DT")
2990210
"^DD",101.41,101.412,4,3)
Answer must be 1-80 characters in length and cannot contain a semicolon (;), a comma (,), an up-arrow (^), a dash (-), or an equal sign (=).
"^DD",101.41,101.412,4,21,0)
^.001^2^2^3010419^^^^
"^DD",101.41,101.412,4,21,1,0)
This field allows the text that normally appears for this item to be
"^DD",101.41,101.412,4,21,2,0)
replaced with alternate text for use in this dialog or menu.
"^DD",101.41,101.412,4,"DT")
3000823
"^DD",101.41,101.412,5,0)
DISPLAY ONLY?^S^0:NO;1:YES;2:YES-HEADER;^0;5^Q
"^DD",101.41,101.412,5,1,0)
^.1
"^DD",101.41,101.412,5,1,1,0)
101.41^AMM5^MUMPS
"^DD",101.41,101.412,5,1,1,1)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,2)
D REDOX^ORDD41
"^DD",101.41,101.412,5,1,1,"%D",0)
^^1^1^2990210^
"^DD",101.41,101.412,5,1,1,"%D",1,0)
Update TIMESTAMP whenever DISPLAY ONLY? is changed.
"^DD",101.41,101.412,5,1,1,"DT")
2990210
"^DD",101.41,101.412,5,3)
Enter YES if this item is text for display only and not a selectable item.
"^DD",101.41,101.412,5,21,0)
^^3^3^2970409^^^^
"^DD",101.41,101.412,5,21,1,0)
This field identifies an item as being free text for display purposes
"^DD",101.41,101.412,5,21,2,0)
only.  The text in the Display Text field will be displayed, but it
"^DD",101.41,101.412,5,21,3,0)
is not selectable; if designated as a header, the text will be underlined.
"^DD",101.41,101.412,5,"DT")
2990210
"^DD",101.41,101.412,6,0)
REQUIRED^S^1:YES;0:NO;^0;6^Q
"^DD",101.41,101.412,6,3)
Enter YES if a response to this prompt is mandatory.
"^DD",101.41,101.412,6,21,0)
^^1^1^2950407^
"^DD",101.41,101.412,6,21,1,0)
This field indicates that the user must enter a response to this prompt.
"^DD",101.41,101.412,6,"DT")
2950407
"^DD",101.41,101.412,7,0)
MULTIPLE VALUED^S^1:YES;0:NO;^0;7^Q
"^DD",101.41,101.412,7,3)
Enter YES if this prompt is to be asked multiple times.
"^DD",101.41,101.412,7,21,0)
^^3^3^2950407^
"^DD",101.41,101.412,7,21,1,0)
This field determines if this prompt will be allowed to have multiple
"^DD",101.41,101.412,7,21,2,0)
values, or be prompted for only once; if this prompt is a sub-dialog,
"^DD",101.41,101.412,7,21,3,0)
the entire dialog will be asked once or many times, as a group.
"^DD",101.41,101.412,7,"DT")
2950407
"^DD",101.41,101.412,7.1,0)
MAX NUMBER OF MULTIPLES^NJ2,0^^0;12^K:+X'=X!(X>99)!(X<2)!(X?.E1"."1N.N) X
"^DD",101.41,101.412,7.1,3)
Type a Number between 2 and 99, 0 Decimal Digits
"^DD",101.41,101.412,7.1,21,0)
^^4^4^2950815^
"^DD",101.41,101.412,7.1,21,1,0)
This is the maximum number of values that may be entered for this prompt,
"^DD",101.41,101.412,7.1,21,2,0)
if it is flagged as being multiple-valued.  For example, a diet order may
"^DD",101.41,101.412,7.1,21,3,0)
have up to 5 diet modifications entered, where 5 is the maximum allowed
"^DD",101.41,101.412,7.1,21,4,0)
that would be entered here.
"^DD",101.41,101.412,7.1,"DT")
2950815
"^DD",101.41,101.412,7.2,0)
TITLE^F^^0;13^K:$L(X)>30!($L(X)<3) X
"^DD",101.41,101.412,7.2,3)
Answer must be 3-30 characters in length.
"^DD",101.41,101.412,7.2,21,0)
^^8^8^2970430^^
"^DD",101.41,101.412,7.2,21,1,0)
This is text that will be used in place of the prompt when the order is
"^DD",101.41,101.412,7.2,21,2,0)
displayed for place, edit, or cancel, or at the top of a multiple-valued
"^DD",101.41,101.412,7.2,21,3,0)
prompt.  The Display Text for the prompt will be used together with the
"^DD",101.41,101.412,7.2,21,4,0)
instance number to prompt for user input; for example if Title="Lab Tests:"
"^DD",101.41,101.412,7.2,21,5,0)
and Display Text="Test:" the user would see
"^DD",101.41,101.412,7.2,21,6,0)
  Lab Tests:
"^DD",101.41,101.412,7.2,21,7,0)
  1. Test:
"^DD",101.41,101.412,7.2,21,8,0)
  2. Test:
"^DD",101.41,101.412,7.2,"DT")
2950815
"^DD",101.41,101.412,7.3,0)
PROMPT^F^^0;14^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,7.3,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,7.3,21,0)
^^3^3^2970618^
"^DD",101.41,101.412,7.3,21,1,0)
This field contains text that will be appended to the beginning of the
"^DD",101.41,101.412,7.3,21,2,0)
display text when prompting for additional values; if this field is
"^DD",101.41,101.412,7.3,21,3,0)
empty, then "Another " will be used.
"^DD",101.41,101.412,7.3,"DT")
2970618
"^DD",101.41,101.412,8,0)
ASK ON EDIT ONLY^S^1:YES;0:NO;^0;8^Q
"^DD",101.41,101.412,8,3)
Enter YES if this prompt should not be asked initially when creating this order, only if the user chooses to edit the order.
"^DD",101.41,101.412,8,21,0)
^^4^4^2960112^^^
"^DD",101.41,101.412,8,21,1,0)
This field determines the behaviour of the dialog driver for this prompt;
"^DD",101.41,101.412,8,21,2,0)
if no value or the defined default is usually correct for this prompt,
"^DD",101.41,101.412,8,21,3,0)
enter YES here to have this prompt skipped on the first pass through this
"^DD",101.41,101.412,8,21,4,0)
dialog when creating an order.
"^DD",101.41,101.412,8,"DT")
2950407
"^DD",101.41,101.412,9,0)
ASK ON ACTION^F^^0;9^K:$L(X)>3!($L(X)<1) X
"^DD",101.41,101.412,9,3)
Answer must be 1-3 characters in length.
"^DD",101.41,101.412,9,21,0)
^^6^6^2970708^^^
"^DD",101.41,101.412,9,21,1,0)
This field determines the behaviour of the dialog driver for this prompt
"^DD",101.41,101.412,9,21,2,0)
when taking a particular action on an order created by this dialog.  If
"^DD",101.41,101.412,9,21,3,0)
this string contains "R", this prompt will be asked when renewing an order;
"^DD",101.41,101.412,9,21,4,0)
if this string contains "C", this prompt will be asked when changing an
"^DD",101.41,101.412,9,21,5,0)
order; if this string contains "W", this prompt will be asked when
"^DD",101.41,101.412,9,21,6,0)
rewriting an order.
"^DD",101.41,101.412,9,"DT")
2970708
"^DD",101.41,101.412,10,0)
INDEX^F^^0;10^K:$L(X)>25!($L(X)<1) X
"^DD",101.41,101.412,10,3)
Answer must be 1-25 characters in length.
"^DD",101.41,101.412,10,21,0)
^^3^3^2950713^^^
"^DD",101.41,101.412,10,21,1,0)
For pointer-type prompts, this is the index to use when searching the file;
"^DD",101.41,101.412,10,21,2,0)
it must be in the form of a regular cross-reference.  To search on multiple
"^DD",101.41,101.412,10,21,3,0)
indices, enter a string of index names separated by semi-colons, i.e. "B;C".
"^DD",101.41,101.412,10,"DT")
2950713
"^DD",101.41,101.412,11,0)
HELP MESSAGE^F^^1;1^K:$L(X)>160!($L(X)<1) X
"^DD",101.41,101.412,11,3)
Answer must be 1-160 characters in length.
"^DD",101.41,101.412,11,21,0)
^^2^2^2970609^^
"^DD",101.41,101.412,11,21,1,0)
This field contains the help message to be presented when the user enters
"^DD",101.41,101.412,11,21,2,0)
a question mark at this prompt.
"^DD",101.41,101.412,11,"DT")
2970609
"^DD",101.41,101.412,12,0)
SPECIAL LOOKUP ROUTINE^F^^1;2^K:$L(X)>20!($L(X)<3) X
"^DD",101.41,101.412,12,3)
Enter the routine to use instead of DIC to do this lookup, as [TAG;]ROUTINE
"^DD",101.41,101.412,12,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,12,21,1,0)
This field contains a routine to execute that will replace the standard
"^DD",101.41,101.412,12,21,2,0)
DIC lookup for this prompt; it must be entered here as LINETAG;ROUTINE
"^DD",101.41,101.412,12,21,3,0)
using a ; instead of ^ and where LINETAG is optional.
"^DD",101.41,101.412,12,"DT")
2970609
"^DD",101.41,101.412,13,0)
ASK ON CONDITION^K^^3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,13,3)
This is MUMPS code that sets $T to determine if this prompt should be asked, or given a default value and bypassed.
"^DD",101.41,101.412,13,9)
@
"^DD",101.41,101.412,13,21,0)
^^5^5^2950407^
"^DD",101.41,101.412,13,21,1,0)
This is MUMPS code that sets $T to determine if this prompt should be asked
"^DD",101.41,101.412,13,21,2,0)
or simply given a default value and presented to the user for acceptance
"^DD",101.41,101.412,13,21,3,0)
or editing.  For example, the prompt "Pregnant: " may have code here to
"^DD",101.41,101.412,13,21,4,0)
check the sex of the current patient, i.e. I ORSEX="F" will allow it to be
"^DD",101.41,101.412,13,21,5,0)
asked only for female patients.
"^DD",101.41,101.412,13,"DT")
2950407
"^DD",101.41,101.412,14,0)
SCREEN^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,14,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,14,9)
@
"^DD",101.41,101.412,14,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,14,21,1,0)
For pointer-type prompts, this field may contain MUMPS code that will be
"^DD",101.41,101.412,14,21,2,0)
set into DIC("S") to screen the possible choices in the pointed-to file.
"^DD",101.41,101.412,14,"DT")
2950407
"^DD",101.41,101.412,15,0)
POST-SELECTION ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,15,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,15,9)
@
"^DD",101.41,101.412,15,21,0)
^^3^3^2970923^^^^
"^DD",101.41,101.412,15,21,1,0)
This is code that will be executed after a response is entered to this
"^DD",101.41,101.412,15,21,2,0)
prompt; if this prompt should be re-asked, kill the variable DONE.
"^DD",101.41,101.412,15,21,3,0)
If execution of the ordering dialog should be stopped, set ORQUIT=1.
"^DD",101.41,101.412,15,"DT")
2970923
"^DD",101.41,101.412,16,0)
XECUTABLE HELP^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,16,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,16,9)
@
"^DD",101.41,101.412,16,21,0)
^^2^2^2950407^
"^DD",101.41,101.412,16,21,1,0)
This is code that is to be executed when the user enters two or more
"^DD",101.41,101.412,16,21,2,0)
question marks at this prompt.
"^DD",101.41,101.412,16,"DT")
2950407
"^DD",101.41,101.412,17,0)
DEFAULT^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,17,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,17,9)
@
"^DD",101.41,101.412,17,21,0)
^^2^2^2971219^^^^
"^DD",101.41,101.412,17,21,1,0)
This is code that is to be executed to determine the appropriate default
"^DD",101.41,101.412,17,21,2,0)
value for this prompt, setting Y=internal form of this value.
"^DD",101.41,101.412,17,"DT")
2950519
"^DD",101.41,101.412,18,0)
DEFAULT WORD-PROCESSING TEXT^101.41218^^8;0
"^DD",101.41,101.412,18,21,0)
^^1^1^2971219^
"^DD",101.41,101.412,18,21,1,0)
This is default text to be stuffed into this word-processing prompt.
"^DD",101.41,101.412,19,0)
ENTRY ACTION^K^^9;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,19,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,19,9)
@
"^DD",101.41,101.412,19,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,19,21,1,0)
This is code that will be executed at the beginning of the processing of
"^DD",101.41,101.412,19,21,2,0)
this prompt, before the Default and Ask on Condition fields are executed;
"^DD",101.41,101.412,19,21,3,0)
any special setup required for this field should be done here.
"^DD",101.41,101.412,19,"DT")
2970609
"^DD",101.41,101.412,20,0)
EXIT ACTION^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,20,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,20,9)
@
"^DD",101.41,101.412,20,21,0)
^^3^3^2970609^
"^DD",101.41,101.412,20,21,1,0)
This is code that will be executed at the very end of the processing of
"^DD",101.41,101.412,20,21,2,0)
this prompt, after prompting and the Validation field is executed;
"^DD",101.41,101.412,20,21,3,0)
any special cleanup should be done here.
"^DD",101.41,101.412,20,"DT")
2970609
"^DD",101.41,101.412,21,0)
ORDER TEXT SEQUENCE^NJ5,2^^2;1^K:+X'=X!(X>99.99)!(X<1)!(X?.E1"."3N.N) X
"^DD",101.41,101.412,21,1,0)
^.1
"^DD",101.41,101.412,21,1,1,0)
101.412^ATXT
"^DD",101.41,101.412,21,1,1,1)
S ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)=""
"^DD",101.41,101.412,21,1,1,2)
K ^ORD(101.41,DA(1),10,"ATXT",$E(X,1,30),DA)
"^DD",101.41,101.412,21,1,1,"%D",0)
^^1^1^2960226^
"^DD",101.41,101.412,21,1,1,"%D",1,0)
Used to build order text.
"^DD",101.41,101.412,21,1,1,"DT")
2960226
"^DD",101.41,101.412,21,3)
Enter the order in which this value should be added to the order text, as a number between 1 and 99.99; leave this field blank to prevent this value from being included
"^DD",101.41,101.412,21,21,0)
^^3^3^2970607^^^
"^DD",101.41,101.412,21,21,1,0)
This field indicates the order in which values will be concatenated
"^DD",101.41,101.412,21,21,2,0)
together to build the order text; this may differ from the prompting
"^DD",101.41,101.412,21,21,3,0)
order defined in the .01 Sequence field.
"^DD",101.41,101.412,21,"DT")
2960226
"^DD",101.41,101.412,22,0)
FORMAT^F^^2;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.41,101.412,22,3)
Answer must be 1-10 characters in length.
"^DD",101.41,101.412,22,21,0)
^^15^15^2971207^^^^
"^DD",101.41,101.412,22,21,1,0)
This is a string of characters that will define any exceptions to how
"^DD",101.41,101.412,22,21,2,0)
the external form of this value is generated.  Possible values include:
"^DD",101.41,101.412,22,21,3,0)
  Pointer         -> <field #>~<piece in RPC list of field #>, default =.01
"^DD",101.41,101.412,22,21,4,0)
  Set of Codes    -> 1~<piece in RPC list of code> to use code for name
"^DD",101.41,101.412,22,21,5,0)
  Date/Time       -> Format string to pass $$FMTE^XLFDT (default = 2)
"^DD",101.41,101.412,22,21,6,0)
  
"^DD",101.41,101.412,22,21,7,0)
  Suppress value  -> @
"^DD",101.41,101.412,22,21,8,0)
  Replace value   -> @<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,9,0)
                      whose value, when present, supersedes this value
"^DD",101.41,101.412,22,21,10,0)
  Required value  -> *<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,11,0)
                      whose value is required to be present to include
"^DD",101.41,101.412,22,21,12,0)
                      this value
"^DD",101.41,101.412,22,21,13,0)
  Ignore if same  -> =<ptr> where ptr is the Dialog IEN of the prompt
"^DD",101.41,101.412,22,21,14,0)
                      whose value, if the external form is the same,
"^DD",101.41,101.412,22,21,15,0)
                      supersedes this value
"^DD",101.41,101.412,22,"DT")
2960226
"^DD",101.41,101.412,23,0)
OMIT TEXT^F^^2;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,23,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,23,21,0)
^^3^3^2970829^^^^
"^DD",101.41,101.412,23,21,1,0)
This is the external form of a value that is not to be included when building
"^DD",101.41,101.412,23,21,2,0)
the order text.  E.g. to include the urgency in the order text unless it
"^DD",101.41,101.412,23,21,3,0)
is routine, enter "ROUTINE" here.
"^DD",101.41,101.412,23,"DT")
2970829
"^DD",101.41,101.412,24,0)
LEADING TEXT^F^^2;4^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,24,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,24,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,24,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,24,21,2,0)
immediately in front of this value, e.g. "Instructions:".  If this text
"^DD",101.41,101.412,24,21,3,0)
is contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,24,"DT")
2970724
"^DD",101.41,101.412,25,0)
TRAILING TEXT^F^^2;5^K:$L(X)>80!($L(X)<1) X
"^DD",101.41,101.412,25,3)
Answer must be 1-80 characters in length.
"^DD",101.41,101.412,25,21,0)
^^3^3^2970724^^^^
"^DD",101.41,101.412,25,21,1,0)
This field contains text that will be appended to the order text
"^DD",101.41,101.412,25,21,2,0)
immediately following this value, e.g. "refills".  If this text is
"^DD",101.41,101.412,25,21,3,0)
contained in a variable, enter @NAME where NAME is the variable name.
"^DD",101.41,101.412,25,"DT")
2970724
"^DD",101.41,101.412,26,0)
START NEW LINE^S^1:YES;0:NO;^2;6^Q
"^DD",101.41,101.412,26,3)
Enter YES if this value should begin on a new line in the order text.
"^DD",101.41,101.412,26,21,0)
0^^2^2^2970911^
"^DD",101.41,101.412,26,21,1,0)
This field determines if this value is concatenated onto the current line
"^DD",101.41,101.412,26,21,2,0)
when building the order text, or if a new line is started with this value.
"^DD",101.41,101.412,26,"DT")
2970911
"^DD",101.41,101.412,27,0)
WORD-WRAP^S^1:DON'T WRAP;0:WRAP;^2;7^Q
"^DD",101.41,101.412,27,3)
Enter 'Don't Wrap' to have the text be added line-by-line as it is stored; the default formatting is 'Wrap'.
"^DD",101.41,101.412,27,21,0)
^^3^3^2970926^^^
"^DD",101.41,101.412,27,21,1,0)
This field determines if this text should be wrapped when added to the
"^DD",101.41,101.412,27,21,2,0)
order text, or appended line by line as stored in the file; this is only
"^DD",101.41,101.412,27,21,3,0)
used for word-processing type prompts.
"^DD",101.41,101.412,27,"DT")
2970926
"^DD",101.41,101.412,101,0)
WINDOWS CONTROL^F^^W;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,101,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,101,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,101,21,1,0)
Stores the type of Windows control necessary to get the data for this
"^DD",101.41,101.412,101,21,2,0)
prompt.
"^DD",101.41,101.412,101,"DT")
2960517
"^DD",101.41,101.412,102,0)
API NAME^F^^W;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,102,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,102,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,102,21,1,0)
This is the API that should be called when the control is used.  How the API
"^DD",101.41,101.412,102,21,2,0)
is used varys with the control.  Examples are: filling list boxes, getting
"^DD",101.41,101.412,102,21,3,0)
boilerplate text, etc.
"^DD",101.41,101.412,102,"DT")
2951002
"^DD",101.41,101.412,103,0)
API PARAMETER #1^F^^W;3^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.412,103,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.412,103,21,0)
^^1^1^2950715^
"^DD",101.41,101.412,103,21,1,0)
A parameter that is used by the API call may be stored here.
"^DD",101.41,101.412,103,"DT")
2950715
"^DD",101.41,101.412,113,0)
WINDOWS CONDITION^K^^W3;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,113,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,113,9)
@
"^DD",101.41,101.412,113,21,0)
^^3^3^2950715^
"^DD",101.41,101.412,113,21,1,0)
This is silent code that is executed when building the dialog for windows.
"^DD",101.41,101.412,113,21,2,0)
It identifies which prompts should be included in the dialog.  The condition
"^DD",101.41,101.412,113,21,3,0)
should leave $T false if the prompt should not be asked.
"^DD",101.41,101.412,113,"DT")
2950715
"^DD",101.41,101.412,117,0)
WINDOWS DEFAULT^K^^W7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",101.41,101.412,117,3)
This is Standard MUMPS code.
"^DD",101.41,101.412,117,9)
@
"^DD",101.41,101.412,117,21,0)
^^2^2^2950715^
"^DD",101.41,101.412,117,21,1,0)
This code should silently set the default value of a prompt when it is 
"^DD",101.41,101.412,117,21,2,0)
selected.
"^DD",101.41,101.412,117,"DT")
2950715
"^DD",101.41,101.41218,0)
DEFAULT WORD-PROCESSING TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.41218,0,"DT")
2950407
"^DD",101.41,101.41218,0,"NM","DEFAULT WORD-PROCESSING TEXT")

"^DD",101.41,101.41218,0,"UP")
101.412
"^DD",101.41,101.41218,.01,0)
DEFAULT WORD-PROCESSING TEXT^W^^0;1^Q
"^DD",101.41,101.41218,.01,3)
Enter the default response for a word-processing type prompt.
"^DD",101.41,101.41218,.01,21,0)
^^2^2^2950407^
"^DD",101.41,101.41218,.01,21,1,0)
This field contains the text to be presented as the default for this prompt,
"^DD",101.41,101.41218,.01,21,2,0)
for word-processing type prompts.
"^DD",101.41,101.41218,.01,"DT")
2950407
"^DD",101.41,101.415,0)
CONTROLS SUB-FIELD^^14^14
"^DD",101.41,101.415,0,"DT")
2960202
"^DD",101.41,101.415,0,"IX","AC",101.415,3)

"^DD",101.41,101.415,0,"IX","B",101.415,.01)

"^DD",101.41,101.415,0,"NM","CONTROLS")

"^DD",101.41,101.415,0,"UP")
101.41
"^DD",101.41,101.415,.01,0)
LOGICAL NAME^MF^^0;1^K:$L(X)>8!($L(X)<1)!'(X?1.8U) X
"^DD",101.41,101.415,.01,1,0)
^.1
"^DD",101.41,101.415,.01,1,1,0)
101.415^B
"^DD",101.41,101.415,.01,1,1,1)
S ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",101.41,101.415,.01,1,1,2)
K ^ORD(101.41,DA(1),50,"B",$E(X,1,30),DA)
"^DD",101.41,101.415,.01,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,.01,21,0)
^^1^1^2960202^
"^DD",101.41,101.415,.01,21,1,0)
This is the name by which controls can refer to each other.
"^DD",101.41,101.415,.01,"DT")
2960202
"^DD",101.41,101.415,2,0)
ITEM^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.415,2,"DT")
2960202
"^DD",101.41,101.415,3,0)
CREATE SEQUENCE^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,3,1,0)
^.1
"^DD",101.41,101.415,3,1,1,0)
101.415^AC
"^DD",101.41,101.415,3,1,1,1)
S ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)=""
"^DD",101.41,101.415,3,1,1,2)
K ^ORD(101.41,DA(1),50,"AC",$E(X,1,30),DA)
"^DD",101.41,101.415,3,1,1,"%D",0)
^^2^2^2960202^
"^DD",101.41,101.415,3,1,1,"%D",1,0)
The 'AC' cross-reference puts in window controls in order by creation 
"^DD",101.41,101.415,3,1,1,"%D",2,0)
sequence.
"^DD",101.41,101.415,3,1,1,"DT")
2960202
"^DD",101.41,101.415,3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.41,101.415,3,"DT")
2960202
"^DD",101.41,101.415,4,0)
CONTROL TYPE^S^0:Label;1:Button;2:Edit;3:Memo;4:ListBox;5:SimpleCombo;6:DropDownList;7:LongCombo;^0;4^Q
"^DD",101.41,101.415,4,"DT")
2960202
"^DD",101.41,101.415,5,0)
LABEL^F^^0;5^K:$L(X)>30!($L(X)<1) X
"^DD",101.41,101.415,5,3)
Answer must be 1-30 characters in length.
"^DD",101.41,101.415,5,"DT")
2960202
"^DD",101.41,101.415,6,0)
BESIDE^F^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,6,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,6,"DT")
2960202
"^DD",101.41,101.415,7,0)
BELOW^F^^0;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,7,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,7,"DT")
2960202
"^DD",101.41,101.415,8,0)
WIDTH^NJ6,4^^0;8^K:+X'=X!(X>1)!(X<0)!(X?.E1"."5N.N) X
"^DD",101.41,101.415,8,3)
Type a Number between 0 and 1, 4 Decimal Digits
"^DD",101.41,101.415,8,"DT")
2960202
"^DD",101.41,101.415,9,0)
LEFT CONTROL^F^^0;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,9,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,9,"DT")
2960202
"^DD",101.41,101.415,10,0)
RIGHT CONTROL^F^^0;10^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,10,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,10,"DT")
2960202
"^DD",101.41,101.415,11,0)
HEIGHT^NJ2,0^^0;11^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,11,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.41,101.415,11,"DT")
2960202
"^DD",101.41,101.415,12,0)
UPPER CONTROL^F^^0;12^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,12,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,12,"DT")
2960202
"^DD",101.41,101.415,13,0)
LOWER CONTROL^F^^0;13^K:$L(X)>8!($L(X)<1) X
"^DD",101.41,101.415,13,3)
Answer must be 1-8 characters in length.
"^DD",101.41,101.415,13,"DT")
2960202
"^DD",101.41,101.415,14,0)
TAB SEQUENCE^NJ2,0^^0;14^K:+X'=X!(X>89)!(X<0)!(X?.E1"."1N.N) X
"^DD",101.41,101.415,14,3)
Type a Number between 0 and 89, 0 Decimal Digits
"^DD",101.41,101.415,14,"DT")
2960202
"^DD",101.41,101.416,0)
RESPONSES SUB-FIELD^^2^5
"^DD",101.41,101.416,0,"DT")
2960717
"^DD",101.41,101.416,0,"IX","D",101.416,.02)

"^DD",101.41,101.416,0,"NM","RESPONSES")

"^DD",101.41,101.416,0,"UP")
101.41
"^DD",101.41,101.416,.01,0)
ITEM ENTRY^MNJ7,0^^0;1^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.01,1,0)
^.1^^0
"^DD",101.41,101.416,.01,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.01,21,0)
^^2^2^2971219^^^
"^DD",101.41,101.416,.01,21,1,0)
This is the internal entry number of the prompt in the Item multiple
"^DD",101.41,101.416,.01,21,2,0)
by which this response was obtained.
"^DD",101.41,101.416,.01,"DT")
2961118
"^DD",101.41,101.416,.02,0)
DIALOG^P101.41'^ORD(101.41,^0;2^Q
"^DD",101.41,101.416,.02,1,0)
^.1
"^DD",101.41,101.416,.02,1,1,0)
101.416^D
"^DD",101.41,101.416,.02,1,1,1)
S ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)=""
"^DD",101.41,101.416,.02,1,1,2)
K ^ORD(101.41,DA(1),6,"D",$E(X,1,30),DA)
"^DD",101.41,101.416,.02,1,1,"DT")
2961118
"^DD",101.41,101.416,.02,3)
Select the dialog prompt from which this response was generated.
"^DD",101.41,101.416,.02,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.02,21,1,0)
This is a pointer to the dialog prompt, which is in the Order Dialog file
"^DD",101.41,101.416,.02,21,2,0)
as type prompt.
"^DD",101.41,101.416,.02,"DT")
2961118
"^DD",101.41,101.416,.03,0)
INSTANCE^NJ7,0^^0;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.41,101.416,.03,3)
Type a Number between 1 and 9999999, 0 Decimal Digits
"^DD",101.41,101.416,.03,21,0)
^^2^2^2960717^
"^DD",101.41,101.416,.03,21,1,0)
In the case of multiple answers for the same item, this identifies the
"^DD",101.41,101.416,.03,21,2,0)
individual instance.
"^DD",101.41,101.416,.03,"DT")
2960717
"^DD",101.41,101.416,1,0)
VALUE^FO^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",101.41,101.416,1,2)
S Y(0)=Y S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,2.1)
S Y=$$OUTPUT^ORCMEDT5(Y)
"^DD",101.41,101.416,1,3)
Answer must be 1-245 characters in length.
"^DD",101.41,101.416,1,21,0)
^^2^2^2971219^^
"^DD",101.41,101.416,1,21,1,0)
This contains the actual response, unless the value is a word processing
"^DD",101.41,101.416,1,21,2,0)
type.
"^DD",101.41,101.416,1,"DT")
2980717
"^DD",101.41,101.416,2,0)
TEXT^101.4162^^2;0
"^DD",101.41,101.416,2,21,0)
^^1^1^2971219^
"^DD",101.41,101.416,2,21,1,0)
This contains the actual response, for word-processing type prompts.
"^DD",101.41,101.416,2,"DT")
2960717
"^DD",101.41,101.4162,0)
TEXT SUB-FIELD^^.01^1
"^DD",101.41,101.4162,0,"DT")
2960717
"^DD",101.41,101.4162,0,"NM","TEXT")

"^DD",101.41,101.4162,0,"UP")
101.416
"^DD",101.41,101.4162,.01,0)
TEXT^WL^^0;1^Q
"^DD",101.41,101.4162,.01,21,0)
^^1^1^2960717^^
"^DD",101.41,101.4162,.01,21,1,0)
This contains responses to items that are a word processing type.
"^DD",101.41,101.4162,.01,"DT")
2960717
"^DD",101.43,101.43,0)
FIELD^^50.7^39
"^DD",101.43,101.43,0,"DDA")
N
"^DD",101.43,101.43,0,"DT")
3061122
"^DD",101.43,101.43,0,"IX","AQO",101.439,2)

"^DD",101.43,101.43,0,"IX","B",101.43,.01)

"^DD",101.43,101.43,0,"IX","B",101.432,.01)

"^DD",101.43,101.43,0,"IX","C",101.43,3)

"^DD",101.43,101.43,0,"IX","C1",101.439,.01)

"^DD",101.43,101.43,0,"IX","C2",101.43,.01)

"^DD",101.43,101.43,0,"IX","CD",101.43,.1)

"^DD",101.43,101.43,0,"IX","COMMON",101.43,71.4)

"^DD",101.43,101.43,0,"IX","COMMON1",101.43,71.3)

"^DD",101.43,101.43,0,"IX","COMMON2",101.43,.01)

"^DD",101.43,101.43,0,"IX","ID",101.43,2)

"^DD",101.43,101.43,0,"IX","S",101.439,.01)

"^DD",101.43,101.43,0,"IX","S0",101.43,.01)

"^DD",101.43,101.43,0,"IX","S1",101.43,111.1)

"^DD",101.43,101.43,0,"IX","S10",101.43,50.7)

"^DD",101.43,101.43,0,"IX","S10",101.43,6001)

"^DD",101.43,101.43,0,"IX","S11",101.43,6002)

"^DD",101.43,101.43,0,"IX","S2",101.43,71.3)

"^DD",101.43,101.43,0,"IX","S3",101.43,60.6)

"^DD",101.43,101.43,0,"IX","S4",101.43,50.1)

"^DD",101.43,101.43,0,"IX","S5",101.43,50.2)

"^DD",101.43,101.43,0,"IX","S6",101.43,50.3)

"^DD",101.43,101.43,0,"IX","S7",101.43,5)

"^DD",101.43,101.43,0,"IX","S8",101.43,50.4)

"^DD",101.43,101.43,0,"IX","S9",101.43,50.5)

"^DD",101.43,101.43,0,"IX","SD",101.43,.1)

"^DD",101.43,101.43,0,"IX","SS",101.432,.01)

"^DD",101.43,101.43,0,"IX","SS1",101.439,.01)

"^DD",101.43,101.43,0,"IX","SS2",101.43,.01)

"^DD",101.43,101.43,0,"IX","SSD",101.43,.1)

"^DD",101.43,101.43,0,"IX","SST",101.43,60.7)

"^DD",101.43,101.43,0,"IX","ST",101.43,60.7)

"^DD",101.43,101.43,0,"NM","ORDERABLE ITEMS")

"^DD",101.43,101.43,0,"PT",100,7)

"^DD",101.43,101.43,0,"PT",100.001,.01)

"^DD",101.43,101.43,0,"PT",100.68,.01)

"^DD",101.43,101.43,0,"PT",101.442,.01)

"^DD",101.43,101.43,0,"PT",104.05,.01)

"^DD",101.43,101.43,0,"PT",801.02,.01)

"^DD",101.43,101.43,0,"PT",801.41,17)

"^DD",101.43,101.43,0,"PT",801.43,.02)

"^DD",101.43,101.43,0,"PT",810.31,.04)

"^DD",101.43,101.43,0,"PT",810.32,.01)

"^DD",101.43,101.43,0,"PT",811.52,.01)

"^DD",101.43,101.43,0,"PT",811.902,.01)

"^DD",101.43,101.43,0,"VRPK")
OR
"^DD",101.43,101.43,0,"VRRV")
1^3061122
"^DD",101.43,101.43,.01,0)
NAME^RFX^^0;1^K:$L(X)>63!($L(X)<2)!($$CHKNAM^ORUTL(X,";")) X
"^DD",101.43,101.43,.01,1,0)
^.1^^-1
"^DD",101.43,101.43,.01,1,1,0)
101.43^B
"^DD",101.43,101.43,.01,1,1,1)
S ^ORD(101.43,"B",$E(X,1,30),DA)=""
"^DD",101.43,101.43,.01,1,1,2)
K ^ORD(101.43,"B",$E(X,1,30),DA)
"^DD",101.43,101.43,.01,1,2,0)
101.43^C2^MUMPS
"^DD",101.43,101.43,.01,1,2,1)
N CD,IN S CD=$P(^ORD(101.43,DA,0),U,3),IN=$G(^(.1)) D CS^ORDD43(X,CD,IN)
"^DD",101.43,101.43,.01,1,2,2)
N CD S CD=$P(^ORD(101.43,DA,0),U,3) D CK^ORDD43(X,CD)
"^DD",101.43,101.43,.01,1,2,"%D",0)
^^1^1^2990316^^^
"^DD",101.43,101.43,.01,1,2,"%D",1,0)
Allows retrieval of items by code within Sets.
"^DD",101.43,101.43,.01,1,2,"DT")
2950713
"^DD",101.43,101.43,.01,1,3,0)
101.43^S0^MUMPS
"^DD",101.43,101.43,.01,1,3,1)
N IN,TYP S IN=$G(^ORD(101.43,DA,.1)),TYP=$P($G(^("LR")),U,7) D SS^ORDD43(X,IN,TYP)
"^DD",101.43,101.43,.01,1,3,2)
D SK^ORDD43(X)
"^DD",101.43,101.43,.01,1,3,"%D",0)
^^2^2^2990316^^^^
"^DD",101.43,101.43,.01,1,3,"%D",1,0)
Allows retrieval of orderable items via the Set "S" xrefs:
"^DD",101.43,101.43,.01,1,3,"%D",2,0)
^ORD(101.43,"S.<set>",NAME,DA)
"^DD",101.43,101.43,.01,1,3,"DT")
2950810
"^DD",101.43,101.43,.01,1,4,0)
101.43^COMMON2^MUMPS
"^DD",101.43,101.43,.01,1,4,1)
N IT,CP S IT=$P($G(^ORD(101.43,DA,"RA")),U,3),CP=$P($G(^("RA")),U,4) D SETRA^ORDD43(X,IT,CP)
"^DD",101.43,101.43,.01,1,4,2)
N IT,CP S IT=$P($G(^ORD(101.43,DA,"RA")),U,3),CP=$P($G(^("RA")),U,4) D KILLRA^ORDD43(X,IT,CP)
"^DD",101.43,101.43,.01,1,4,"%D",0)
^^2^2^2990316^^^
"^DD",101.43,101.43,.01,1,4,"%D",1,0)
Allows retrieval of Radiology common procedures alphabetically within
"^DD",101.43,101.43,.01,1,4,"%D",2,0)
imaging types.
"^DD",101.43,101.43,.01,1,4,"DT")
2950725
"^DD",101.43,101.43,.01,1,5,0)
101.43^SS2^MUMPS
"^DD",101.43,101.43,.01,1,5,1)
N IN,TYP S IN=$G(^ORD(101.43,DA,.1)),TYP=$P($G(^("LR")),U,7) D SS1^ORDD43(X,IN,TYP)
"^DD",101.43,101.43,.01,1,5,2)
D SK1^ORDD43(X)
"^DD",101.43,101.43,.01,1,5,"%D",0)
^^2^2^2990316^^^
"^DD",101.43,101.43,.01,1,5,"%D",1,0)
Allows retrieval of items by synonym via the Set "S" xrefs:
"^DD",101.43,101.43,.01,1,5,"%D",2,0)
^ORD(101.43,"S.<set>",SYNONYM,DA)
"^DD",101.43,101.43,.01,1,5,"DT")
2950810
"^DD",101.43,101.43,.01,3)
Answer must be 2-63 characters in length and cannot contain a semicolon (;).
"^DD",101.43,101.43,.01,21,0)
2^.001^1^1^3100520^^^^
"^DD",101.43,101.43,.01,21,1,0)
This is the name of this item that will be used for displaying and searching.
"^DD",101.43,101.43,.01,"DT")
3100521
"^DD",101.43,101.43,.01,"V",0)
^.12P^1^1
"^DD",101.43,101.43,.01,"V",1,0)
60^LABORATORY TEST^1^LAB^^n
"^DD",101.43,101.43,.1,0)
INACTIVATED^D^^.1;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",101.43,101.43,.1,1,0)
^.1
"^DD",101.43,101.43,.1,1,1,0)
101.43^SD^MUMPS
"^DD",101.43,101.43,.1,1,1,1)
N NM,TYP S NM=$P(^ORD(101.43,DA,0),U),TYP=$P($G(^("LR")),U,7) D SS^ORDD43(NM,X,TYP)
"^DD",101.43,101.43,.1,1,1,2)
N NM,TYP S NM=$P(^ORD(101.43,DA,0),U),TYP=$P($G(^("LR")),U,7) D SS^ORDD43(NM,,TYP)
"^DD",101.43,101.43,.1,1,1,"%D",0)
^^1^1^2960814^
"^DD",101.43,101.43,.1,1,1,"%D",1,0)
Allows retrieval of orderable items by set.
"^DD",101.43,101.43,.1,1,1,"DT")
2960814
"^DD",101.43,101.43,.1,1,2,0)
101.43^SSD^MUMPS
"^DD",101.43,101.43,.1,1,2,1)
N NM,TYP S NM=$P(^ORD(101.43,DA,0),U),TYP=$P($G(^("LR")),U,7) D SS1^ORDD43(NM,X,TYP)
"^DD",101.43,101.43,.1,1,2,2)
N NM,TYP S NM=$P(^ORD(101.43,DA,0),U),TYP=$P($G(^("LR")),U,7) D SS1^ORDD43(NM,,TYP)
"^DD",101.43,101.43,.1,1,2,"%D",0)
^^1^1^2960814^
"^DD",101.43,101.43,.1,1,2,"%D",1,0)
Allows retrieval of items by synonym via the Set "S" xrefs.
"^DD",101.43,101.43,.1,1,2,"DT")
2960814
"^DD",101.43,101.43,.1,1,3,0)
101.43^CD^MUMPS
"^DD",101.43,101.43,.1,1,3,1)
N NM,CD S NM=$P(^ORD(101.43,DA,0),U),CD=$P(^(0),U,3) D CS^ORDD43(NM,CD,X)
"^DD",101.43,101.43,.1,1,3,2)
N NM,CD S NM=$P(^ORD(101.43,DA,0),U),CD=$P(^(0),U,3) D CS^ORDD43(NM,CD)
"^DD",101.43,101.43,.1,1,3,"%D",0)
^^1^1^2960814^
"^DD",101.43,101.43,.1,1,3,"%D",1,0)
Allows retrieval of items by code within Sets.
"^DD",101.43,101.43,.1,1,3,"DT")
2960814
"^DD",101.43,101.43,.1,3)
Enter the date and time after which this item may no longer be ordered.
"^DD",101.43,101.43,.1,21,0)
^^3^3^2950303^
"^DD",101.43,101.43,.1,21,1,0)
This is a date and time for inactivating this item.  If this field has a
"^DD",101.43,101.43,.1,21,2,0)
value, this item will not ba available to select for ordering after this
"^DD",101.43,101.43,.1,21,3,0)
date.
"^DD",101.43,101.43,.1,"DT")
2960814
"^DD",101.43,101.43,.91,0)
NOTIFY ON ORDER^S^1:YES;0:NO;^.9;1^Q
"^DD",101.43,101.43,.91,3)
Enter YES if a notification should be generated whenever this item is ordered.
"^DD",101.43,101.43,.91,21,0)
^^2^2^2950523^
"^DD",101.43,101.43,.91,21,1,0)
This field is a flag to determine if a notification should be generated
"^DD",101.43,101.43,.91,21,2,0)
whenever an order for this item is placed.
"^DD",101.43,101.43,.91,"DT")
2950523
"^DD",101.43,101.43,.92,0)
NOTIFY WHEN RESULTED^S^1:YES;0:NO;^.9;2^Q
"^DD",101.43,101.43,.92,3)
Enter YES if a notification should be generated when an order for this item is resulted.
"^DD",101.43,101.43,.92,21,0)
^^2^2^2950523^
"^DD",101.43,101.43,.92,21,1,0)
This field is a flag to determine if a notification should be sent when
"^DD",101.43,101.43,.92,21,2,0)
results are posted for an order for this item.
"^DD",101.43,101.43,.92,"DT")
2950523
"^DD",101.43,101.43,1,0)
SYNONYMS^101.432A^^2;0
"^DD",101.43,101.43,1,21,0)
^^2^2^2990223^^
"^DD",101.43,101.43,1,21,1,0)
This multiple contains synonyms for this orderable item, used when
"^DD",101.43,101.43,1,21,2,0)
searching the file.
"^DD",101.43,101.43,1.1,0)
PACKAGE NAME^RF^^0;8^K:$L(X)>63!($L(X)<3) X
"^DD",101.43,101.43,1.1,1,0)
^.1^^0
"^DD",101.43,101.43,1.1,3)
Answer must be 3-63 characters in length.
"^DD",101.43,101.43,1.1,21,0)
^^1^1^2960910^^^^
"^DD",101.43,101.43,1.1,21,1,0)
This is the name of this item as defined by the filling service.
"^DD",101.43,101.43,1.1,"DT")
2960920
"^DD",101.43,101.43,2,0)
ID^RF^^0;2^K:$L(X)>30!($L(X)<3) X
"^DD",101.43,101.43,2,1,0)
^.1
"^DD",101.43,101.43,2,1,1,0)
101.43^ID
"^DD",101.43,101.43,2,1,1,1)
S ^ORD(101.43,"ID",$E(X,1,30),DA)=""
"^DD",101.43,101.43,2,1,1,2)
K ^ORD(101.43,"ID",$E(X,1,30),DA)
"^DD",101.43,101.43,2,1,1,"DT")
2950303
"^DD",101.43,101.43,2,3)
Answer must be 3-30 characters in length.
"^DD",101.43,101.43,2,21,0)
^^4^4^2950303^^
"^DD",101.43,101.43,2,21,1,0)
This is a unique identifier for this item, created from the primary key
"^DD",101.43,101.43,2,21,2,0)
passed in the Orderable Items update message from each package; it will
"^DD",101.43,101.43,2,21,3,0)
be in the form of "package code;99XXX" where XXX indicates the package
"^DD",101.43,101.43,2,21,4,0)
table originating this item (i.e. RAP, LRT, etc).
"^DD",101.43,101.43,2,"DT")
2950303
"^DD",101.43,101.43,3,0)
CODE^F^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",101.43,101.43,3,1,0)
^.1
"^DD",101.43,101.43,3,1,1,0)
101.43^C^MUMPS
"^DD",101.43,101.43,3,1,1,1)
N NM,IN S NM=$P(^ORD(101.43,DA,0),U),IN=$G(^(.1)) D CS^ORDD43(NM,X,IN)
"^DD",101.43,101.43,3,1,1,2)
N NM S NM=$P(^ORD(101.43,DA,0),U) D CK^ORDD43(NM,X)
"^DD",101.43,101.43,3,1,1,"%D",0)
^^1^1^2950713^^^^
"^DD",101.43,101.43,3,1,1,"%D",1,0)
Allows retrieval of items by code within Sets.
"^DD",101.43,101.43,3,1,1,"DT")
2950713
"^DD",101.43,101.43,3,3)
Answer must be 1-10 characters in length.
"^DD",101.43,101.43,3,21,0)
^^2^2^2950303^
"^DD",101.43,101.43,3,21,1,0)
This is the code assigned to this item by the authoritative package,
"^DD",101.43,101.43,3,21,2,0)
from a national standard coding system such as CPT or SNOMED.
"^DD",101.43,101.43,3,"DT")
2950713
"^DD",101.43,101.43,4,0)
CODING SYSTEM^S^NDF:NATIONAL DRUG FILE;CPT4:CPT4;NLT:NATIONAL LAB TEST FILE;^0;4^Q
"^DD",101.43,101.43,4,3)
Enter the coding system in which this item has been coded.
"^DD",101.43,101.43,4,21,0)
^^1^1^2960213^^
"^DD",101.43,101.43,4,21,1,0)
This is the system used to generate the code assigned in field 3.
"^DD",101.43,101.43,4,"DT")
2960213
"^DD",101.43,101.43,5,0)
DISPLAY GROUP^P100.98'^ORD(100.98,^0;5^Q
"^DD",101.43,101.43,5,1,0)
^.1
"^DD",101.43,101.43,5,1,1,0)
101.43^S7^MUMPS
"^DD",101.43,101.43,5,1,1,1)
N ORX S ORX=$P(^ORD(100.98,X,0),U,3) D:$L(ORX) SET^ORDD43(ORX,DA)
"^DD",101.43,101.43,5,1,1,2)
N ORX S ORX=$P(^ORD(100.98,X,0),U,3) D:$L(ORX) KILL^ORDD43(ORX,DA)
"^DD",101.43,101.43,5,1,1,"%D",0)
^^1^1^2950303^
"^DD",101.43,101.43,5,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,5,1,1,"DT")
2950303
"^DD",101.43,101.43,5,3)
Enter the display group this orderable item belongs to.
"^DD",101.43,101.43,5,21,0)
^^4^4^2950303^
"^DD",101.43,101.43,5,21,1,0)
This is the display group that this item is a menber of; this field is
"^DD",101.43,101.43,5,21,2,0)
used for a variety of purposes such as narrowing a search for an item,
"^DD",101.43,101.43,5,21,3,0)
sorting and grouping orders, and passing the order to the service
"^DD",101.43,101.43,5,21,4,0)
for filling.
"^DD",101.43,101.43,5,"DT")
2950303
"^DD",101.43,101.43,6,0)
COST^NJ10,2^^0;6^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999.99)!(X<0) X
"^DD",101.43,101.43,6,3)
Type a Dollar Amount between 0 and 9999999.99, 2 Decimal Digits
"^DD",101.43,101.43,6,21,0)
^^1^1^2950303^
"^DD",101.43,101.43,6,21,1,0)
This is the [approximate] cost of filling an order for this item.
"^DD",101.43,101.43,6,"DT")
2950303
"^DD",101.43,101.43,7,0)
AUTHORIZATION^S^0:NO SIGNATURE REQUIRED;1:PHYSICIAN;2:SPECIALIST;3:SERVICE CHIEF;4:COSIGNATURE;^0;7^Q
"^DD",101.43,101.43,7,3)
Enter the level of authorization required to release an order for this item.
"^DD",101.43,101.43,7,21,0)
^^3^3^2950303^
"^DD",101.43,101.43,7,21,1,0)
This field is used to identify the level of authentication necessary to
"^DD",101.43,101.43,7,21,2,0)
release an order for this item; it will be replaced by the Clinical
"^DD",101.43,101.43,7,21,3,0)
Authorization and Subscription Utility (CASU) when it becomes available.
"^DD",101.43,101.43,7,"DT")
2950303
"^DD",101.43,101.43,8,0)
ORDER MESSAGE^101.438^^8;0
"^DD",101.43,101.43,8,21,0)
^.001^2^2^3040407^^
"^DD",101.43,101.43,8,21,1,0)
This field contains text that is to be displayed to the user whenever
"^DD",101.43,101.43,8,21,2,0)
this item is selected to be ordered.
"^DD",101.43,101.43,9,0)
SET MEMBERSHIP^101.439A^^9;0
"^DD",101.43,101.43,9,21,0)
^^3^3^2941117^
"^DD",101.43,101.43,9,21,1,0)
This field contains the names of sets to which this orderable item belongs.
"^DD",101.43,101.43,9,21,2,0)
When a set name is entered here, a cross-reference of the format "S.name"
"^DD",101.43,101.43,9,21,3,0)
is created, allowing rapid lookups on this file.
"^DD",101.43,101.43,10,0)
COMPONENTS^101.431A^^10;0
"^DD",101.43,101.43,10,21,0)
^^2^2^2960411^^^
"^DD",101.43,101.43,10,21,1,0)
This multiple contains the components of this orderable item, i.e. drug
"^DD",101.43,101.43,10,21,2,0)
ingredients or tests in a lab panel.
"^DD",101.43,101.43,50.1,0)
INPATIENT MED^S^0:NO;1:YES;2:YES-IV;^PS;1^Q
"^DD",101.43,101.43,50.1,1,0)
^.1
"^DD",101.43,101.43,50.1,1,1,0)
101.43^S4^MUMPS
"^DD",101.43,101.43,50.1,1,1,1)
D SET^ORDD43("UD RX",DA):X,SET^ORDD43("IVM RX",DA):X=2
"^DD",101.43,101.43,50.1,1,1,2)
D KILL^ORDD43("UD RX",DA):X,KILL^ORDD43("IVM RX",DA):X=2
"^DD",101.43,101.43,50.1,1,1,"%D",0)
^^1^1^2950623^^^^
"^DD",101.43,101.43,50.1,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,50.1,1,1,"DT")
2950623
"^DD",101.43,101.43,50.1,3)
Enter YES if this drug is selectable for an inpatient med order.
"^DD",101.43,101.43,50.1,21,0)
^^1^1^2970624^^
"^DD",101.43,101.43,50.1,21,1,0)
This field indicates if this drug is selectable for an inpatient med order.
"^DD",101.43,101.43,50.1,"DT")
2970624
"^DD",101.43,101.43,50.2,0)
OUTPATIENT MED^S^1:YES;0:NO;^PS;2^Q
"^DD",101.43,101.43,50.2,1,0)
^.1
"^DD",101.43,101.43,50.2,1,1,0)
101.43^S5^MUMPS
"^DD",101.43,101.43,50.2,1,1,1)
D:X SET^ORDD43("O RX",DA)
"^DD",101.43,101.43,50.2,1,1,2)
D:X KILL^ORDD43("O RX",DA)
"^DD",101.43,101.43,50.2,1,1,"%D",0)
^^1^1^2950112^^
"^DD",101.43,101.43,50.2,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,50.2,1,1,"DT")
2950112
"^DD",101.43,101.43,50.2,3)
Enter YES if this drug is selectable for an outpatient med order.
"^DD",101.43,101.43,50.2,21,0)
^^1^1^2950112^
"^DD",101.43,101.43,50.2,21,1,0)
This field indicates if this drug is selectable for an outpatient med order.
"^DD",101.43,101.43,50.2,"DT")
2950112
"^DD",101.43,101.43,50.3,0)
IV BASE^S^1:YES;0:NO;^PS;3^Q
"^DD",101.43,101.43,50.3,1,0)
^.1
"^DD",101.43,101.43,50.3,1,1,0)
101.43^S6^MUMPS
"^DD",101.43,101.43,50.3,1,1,1)
D:X SET^ORDD43("IVB RX",DA)
"^DD",101.43,101.43,50.3,1,1,2)
D:X KILL^ORDD43("IVB RX",DA)
"^DD",101.43,101.43,50.3,1,1,"%D",0)
^^1^1^2950623^^^
"^DD",101.43,101.43,50.3,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,50.3,1,1,"DT")
2950623
"^DD",101.43,101.43,50.3,3)
Enter YES if this drug is selectable as a base for an IV Fluid order.
"^DD",101.43,101.43,50.3,21,0)
^^2^2^2950112^
"^DD",101.43,101.43,50.3,21,1,0)
This field indicates if this drug is selectable as a base for an IV Fluid
"^DD",101.43,101.43,50.3,21,2,0)
order.
"^DD",101.43,101.43,50.3,"DT")
2950623
"^DD",101.43,101.43,50.4,0)
IV ADDITIVE^S^1:YES;0:NO;^PS;4^Q
"^DD",101.43,101.43,50.4,1,0)
^.1
"^DD",101.43,101.43,50.4,1,1,0)
101.43^S8^MUMPS
"^DD",101.43,101.43,50.4,1,1,1)
D:X SET^ORDD43("IVA RX",DA)
"^DD",101.43,101.43,50.4,1,1,2)
D:X KILL^ORDD43("IVA RX",DA)
"^DD",101.43,101.43,50.4,1,1,"%D",0)
^^1^1^2950623^^^
"^DD",101.43,101.43,50.4,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,50.4,1,1,"DT")
2950623
"^DD",101.43,101.43,50.4,3)
Enter YES if this drug is selectable as an additive for an IV Fluid order.
"^DD",101.43,101.43,50.4,21,0)
^^2^2^2950112^
"^DD",101.43,101.43,50.4,21,1,0)
This field indicates if this drug is selectable as an additive for an IV
"^DD",101.43,101.43,50.4,21,2,0)
Fluid order.
"^DD",101.43,101.43,50.4,"DT")
2950623
"^DD",101.43,101.43,50.5,0)
SUPPLY^S^1:YES;0:NO;^PS;5^Q
"^DD",101.43,101.43,50.5,1,0)
^.1
"^DD",101.43,101.43,50.5,1,1,0)
101.43^S9^MUMPS
"^DD",101.43,101.43,50.5,1,1,1)
D:X SET^ORDD43("SPLY",DA)
"^DD",101.43,101.43,50.5,1,1,2)
D:X KILL^ORDD43("SPLY",DA)
"^DD",101.43,101.43,50.5,1,1,"%D",0)
^^1^1^2960402^
"^DD",101.43,101.43,50.5,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,50.5,1,1,"DT")
2960402
"^DD",101.43,101.43,50.5,3)
Enter YES if this item is selectable for a medication supply order.
"^DD",101.43,101.43,50.5,21,0)
^^2^2^2960402^
"^DD",101.43,101.43,50.5,21,1,0)
This field indicates if this item is selectable for a medication supply
"^DD",101.43,101.43,50.5,21,2,0)
order.
"^DD",101.43,101.43,50.5,"DT")
2960402
"^DD",101.43,101.43,50.6,0)
NON-FORMULARY^S^1:YES;0:NO;^PS;6^Q
"^DD",101.43,101.43,50.6,3)
Enter YES if this orderable item in not in the local formulary.
"^DD",101.43,101.43,50.6,21,0)
^^1^1^3000828^
"^DD",101.43,101.43,50.6,21,1,0)
This field indicates if this item is available in the local formulary.
"^DD",101.43,101.43,50.6,"DT")
3000828
"^DD",101.43,101.43,50.7,0)
NON-VA MEDS^S^1:YES;0:NO;^PS;7^Q
"^DD",101.43,101.43,50.7,1,0)
^.1
"^DD",101.43,101.43,50.7,1,10,0)
101.43^S10^MUMPS
"^DD",101.43,101.43,50.7,1,10,1)
D:X SET^ORDD43("NV RX",DA)
"^DD",101.43,101.43,50.7,1,10,2)
D:X KILL^ORDD43("NV RX",DA)
"^DD",101.43,101.43,50.7,1,10,"%D",0)
^.101^1^1^3030214^^
"^DD",101.43,101.43,50.7,1,10,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,50.7,1,10,"DT")
3030214
"^DD",101.43,101.43,50.7,3)
Enter YES if this drug is selectable for a non-VA med order.
"^DD",101.43,101.43,50.7,21,0)
^.001^1^1^3030305^^^^
"^DD",101.43,101.43,50.7,21,1,0)
This field indicates if this drug is selectable for a non-VA med order.
"^DD",101.43,101.43,50.7,"DT")
3030214
"^DD",101.43,101.43,60.1,0)
SPECIMEN^F^^LR;1^K:$L(X)>100!($L(X)<1) X
"^DD",101.43,101.43,60.1,3)
Answer must be 1-100 characters in length.
"^DD",101.43,101.43,60.1,21,0)
^^4^4^2950509^^
"^DD",101.43,101.43,60.1,21,1,0)
This is the specimen to be collected for this test; it is in the 6-piece
"^DD",101.43,101.43,60.1,21,2,0)
HL7 format, where the first 3 pieces are the code, name, and system of
"^DD",101.43,101.43,60.1,21,3,0)
the SNOMED code for this specimen, and the last 3 pieces are similarly
"^DD",101.43,101.43,60.1,21,4,0)
from the local Site/Specimen file.
"^DD",101.43,101.43,60.1,"DT")
2950509
"^DD",101.43,101.43,60.2,0)
CAN LAB COLLECT^S^1:YES;0:NO;^LR;2^Q
"^DD",101.43,101.43,60.2,3)
Enter YES if the phlebotomy team can collect this specimen.
"^DD",101.43,101.43,60.2,21,0)
^^1^1^2950208^
"^DD",101.43,101.43,60.2,21,1,0)
This identifies which specimens the lab phlebotomy team can collect.
"^DD",101.43,101.43,60.2,"DT")
2950208
"^DD",101.43,101.43,60.3,0)
SEQUENCE^NJ2,0^^LR;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.43,101.43,60.3,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.43,101.43,60.3,21,0)
^^2^2^2950208^
"^DD",101.43,101.43,60.3,21,1,0)
This field indicates the order in which specimens are presented for
"^DD",101.43,101.43,60.3,21,2,0)
selection, the first being the most often selected and the default.
"^DD",101.43,101.43,60.3,"DT")
2950208
"^DD",101.43,101.43,60.4,0)
MAX ORDER FREQUENCY^NJ3,0^^LR;4^K:+X'=X!(X>120)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.43,101.43,60.4,3)
Type a Number between 1 and 120, 0 Decimal Digits
"^DD",101.43,101.43,60.4,21,0)
^^3^3^2950208^
"^DD",101.43,101.43,60.4,21,1,0)
This is used to control how often this item may be ordered within a given
"^DD",101.43,101.43,60.4,21,2,0)
time period.  This item may be ordered only once within the number of days
"^DD",101.43,101.43,60.4,21,3,0)
specified in this field.
"^DD",101.43,101.43,60.4,"DT")
2950208
"^DD",101.43,101.43,60.5,0)
DAILY ORDER MAX^NJ2,0^^LR;5^K:+X'=X!(X>50)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.43,101.43,60.5,3)
Type a Number between 1 and 50, 0 Decimal Digits
"^DD",101.43,101.43,60.5,21,0)
^^2^2^2950208^
"^DD",101.43,101.43,60.5,21,1,0)
This is the number of times within a given day that this item may be
"^DD",101.43,101.43,60.5,21,2,0)
ordered.
"^DD",101.43,101.43,60.5,"DT")
2950208
"^DD",101.43,101.43,60.6,0)
LAB SECTION^S^CH:CHEMISTRY;MI:MICROBIOLOGY;BB:BLOOD BANK;EM:ELECTRON MICROSCOPY;SP:SURGICAL PATHOLOGY;AU:AUTOPSY;CY:CYTOLOGY;^LR;6^Q
"^DD",101.43,101.43,60.6,1,0)
^.1
"^DD",101.43,101.43,60.6,1,1,0)
101.43^S3^MUMPS
"^DD",101.43,101.43,60.6,1,1,1)
N ORX S ORX=$S(X="BB":"BB",X="CH":"CH",X="MI":"CH",1:"AP") D SET^ORDD43(ORX,DA)
"^DD",101.43,101.43,60.6,1,1,2)
N ORX S ORX=$S(X="BB":"BB",X="CH":"CH",X="MI":"CH",1:"AP") D KILL^ORDD43(ORX,DA)
"^DD",101.43,101.43,60.6,1,1,"%D",0)
^^1^1^2950208^
"^DD",101.43,101.43,60.6,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,60.6,1,1,"DT")
2950208
"^DD",101.43,101.43,60.6,3)
Enter the lab section for this test.
"^DD",101.43,101.43,60.6,21,0)
^^2^2^2960529^^
"^DD",101.43,101.43,60.6,21,1,0)
This is the lab section to which orders for this test and sample will be
"^DD",101.43,101.43,60.6,21,2,0)
sent.
"^DD",101.43,101.43,60.6,"DT")
2960529
"^DD",101.43,101.43,60.7,0)
TYPE^S^I:input;O:output;B:both;N:neither;^LR;7^Q
"^DD",101.43,101.43,60.7,1,0)
^.1
"^DD",101.43,101.43,60.7,1,1,0)
101.43^ST^MUMPS
"^DD",101.43,101.43,60.7,1,1,1)
N NM,IN S NM=$P(^ORD(101.43,DA,0),U),IN=$G(^(.1)) D SS^ORDD43(NM,IN,X)
"^DD",101.43,101.43,60.7,1,1,2)
N NM S NM=$P(^ORD(101.43,DA,0),U) D SK^ORDD43(NM)
"^DD",101.43,101.43,60.7,1,1,"%D",0)
^^1^1^2960911^
"^DD",101.43,101.43,60.7,1,1,"%D",1,0)
Allows retrieval of orderable items by set.
"^DD",101.43,101.43,60.7,1,1,"DT")
2960911
"^DD",101.43,101.43,60.7,1,2,0)
101.43^SST^MUMPS
"^DD",101.43,101.43,60.7,1,2,1)
N NM,IN S NM=$P(^ORD(101.43,DA,0),U),IN=$G(^(.1)) D SS1^ORDD43(NM,IN,X)
"^DD",101.43,101.43,60.7,1,2,2)
N NM S NM=$P(^ORD(101.43,DA,0),U) D SK1^ORDD43(NM)
"^DD",101.43,101.43,60.7,1,2,"%D",0)
^^1^1^2960911^
"^DD",101.43,101.43,60.7,1,2,"%D",1,0)
Allows retrieval of items by synonym via the Set "S" xrefs.
"^DD",101.43,101.43,60.7,1,2,"DT")
2960911
"^DD",101.43,101.43,60.7,3)
Enter I if this test is orderable, O if it is only for results reporting, B if it may be used for both purposes, or N for neither.
"^DD",101.43,101.43,60.7,21,0)
^^2^2^2970703^^
"^DD",101.43,101.43,60.7,21,1,0)
This field indicates if this item may be selected when ordering a lab
"^DD",101.43,101.43,60.7,21,2,0)
test, and/or if it is included in this file for results reporting only.
"^DD",101.43,101.43,60.7,"DT")
2970703
"^DD",101.43,101.43,71.1,0)
CONTRAST MEDIA^F^^RA;1^K:$L(X)>7!($L(X)<1) X
"^DD",101.43,101.43,71.1,3)
Answer must be 1-7 characters in length
"^DD",101.43,101.43,71.1,21,0)
^^14^14^3050106^
"^DD",101.43,101.43,71.1,21,1,0)
This field indicates what contrast media, if any, is used by this
"^DD",101.43,101.43,71.1,21,2,0)
radiologic procedure where:
"^DD",101.43,101.43,71.1,21,3,0)
 
"^DD",101.43,101.43,71.1,21,4,0)
      I = Ionic Iodinated
"^DD",101.43,101.43,71.1,21,5,0)
      N = Non-ionic Iodinated
"^DD",101.43,101.43,71.1,21,6,0)
      L = Gadolinium
"^DD",101.43,101.43,71.1,21,7,0)
      C = Cholecystographic
"^DD",101.43,101.43,71.1,21,8,0)
      G = Gastrografin
"^DD",101.43,101.43,71.1,21,9,0)
      B = Barium
"^DD",101.43,101.43,71.1,21,10,0)
      M = Unspecified contrast media
"^DD",101.43,101.43,71.1,21,11,0)
 
"^DD",101.43,101.43,71.1,21,12,0)
This value may consist of as many of these flags as are appropriate for
"^DD",101.43,101.43,71.1,21,13,0)
this procedure; if empty, no contrast media is assumed.  This field is 
"^DD",101.43,101.43,71.1,21,14,0)
used primarily for Order Checking.
"^DD",101.43,101.43,71.1,"DT")
3050915
"^DD",101.43,101.43,71.2,0)
PROCEDURE TYPE^S^B:BROAD;D:DETAILED;S:SERIES;P:PARENT;^RA;2^Q
"^DD",101.43,101.43,71.2,3)
Enter the type of radiologic procedure for this item.
"^DD",101.43,101.43,71.2,21,0)
^^2^2^2941116^
"^DD",101.43,101.43,71.2,21,1,0)
This field identifies the procedure type for this orderable item whether
"^DD",101.43,101.43,71.2,21,2,0)
broad or detailed, a series or parent exam.
"^DD",101.43,101.43,71.2,"DT")
2941116
"^DD",101.43,101.43,71.3,0)
IMAGING TYPE^S^RAD:RADIOLOGY;CT:CT SCAN;MRI:MAGNETIC RESONANCE IMAGING;ANI:ANGIO/NEURO/INTERVENTIONAL;CARD:CARDIOLOGY STUDIES;NM:NUCLEAR MEDICINE;US:ULTRASOUND;VAS:VASCULAR LAB;MAM:MAMMOGRAPHY;^RA;3^Q
"^DD",101.43,101.43,71.3,1,0)
^.1
"^DD",101.43,101.43,71.3,1,1,0)
101.43^S2^MUMPS
"^DD",101.43,101.43,71.3,1,1,1)
D SET^ORDD43(X,DA)
"^DD",101.43,101.43,71.3,1,1,2)
D KILL^ORDD43(X,DA)
"^DD",101.43,101.43,71.3,1,1,"%D",0)
^^1^1^2950112^^
"^DD",101.43,101.43,71.3,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,71.3,1,1,"DT")
2950112
"^DD",101.43,101.43,71.3,1,2,0)
101.43^COMMON1^MUMPS
"^DD",101.43,101.43,71.3,1,2,1)
N CP,NM S NM=$P(^ORD(101.43,DA,0),U),CP=$P($G(^("RA")),U,4) D SETRA^ORDD43(NM,X,CP)
"^DD",101.43,101.43,71.3,1,2,2)
N CP,NM S NM=$P(^ORD(101.43,DA,0),U),CP=$P($G(^("RA")),U,4) D KILLRA^ORDD43(NM,X,CP)
"^DD",101.43,101.43,71.3,1,2,"%D",0)
^^2^2^2950725^^^
"^DD",101.43,101.43,71.3,1,2,"%D",1,0)
Allows retrieval of Radiology common procedures alphabetically within
"^DD",101.43,101.43,71.3,1,2,"%D",2,0)
imaging types.
"^DD",101.43,101.43,71.3,1,2,"DT")
2950711
"^DD",101.43,101.43,71.3,3)
Enter the type of imaging for this procedure.
"^DD",101.43,101.43,71.3,21,0)
^^1^1^2971216^^
"^DD",101.43,101.43,71.3,21,1,0)
This is the imaging type of this radiology procedure.
"^DD",101.43,101.43,71.3,"DT")
2971216
"^DD",101.43,101.43,71.4,0)
COMMON PROCEDURE^S^1:YES;0:NO;^RA;4^Q
"^DD",101.43,101.43,71.4,1,0)
^.1
"^DD",101.43,101.43,71.4,1,1,0)
101.43^COMMON^MUMPS
"^DD",101.43,101.43,71.4,1,1,1)
N IT,NM S NM=$P(^ORD(101.43,DA,0),U),IT=$P($G(^("RA")),U,3) D SETRA^ORDD43(NM,IT,X)
"^DD",101.43,101.43,71.4,1,1,2)
N IT,NM S NM=$P(^ORD(101.43,DA,0),U),IT=$P($G(^("RA")),U,3) D KILLRA^ORDD43(NM,IT,X)
"^DD",101.43,101.43,71.4,1,1,"%D",0)
^^2^2^2960910^^^^
"^DD",101.43,101.43,71.4,1,1,"%D",1,0)
Allows retrieval of Radiology common procedures alphabetically within
"^DD",101.43,101.43,71.4,1,1,"%D",2,0)
imaging types.
"^DD",101.43,101.43,71.4,1,1,"DT")
2960910
"^DD",101.43,101.43,71.4,3)
Enter YES if this is a commonly ordered procedure.
"^DD",101.43,101.43,71.4,21,0)
^^3^3^2950711^^
"^DD",101.43,101.43,71.4,21,1,0)
This field indicates that this procedure is commonly ordered from
"^DD",101.43,101.43,71.4,21,2,0)
Radiology, and is an entry in the Radiology Common Procedures file;
"^DD",101.43,101.43,71.4,21,3,0)
the number stored here is the sequence number for display.
"^DD",101.43,101.43,71.4,"DT")
2960910
"^DD",101.43,101.43,111.1,0)
DIET TYPE^S^D:DIET;T:TUBEFEEDING PRODUCT;^FH;1^Q
"^DD",101.43,101.43,111.1,1,0)
^.1
"^DD",101.43,101.43,111.1,1,1,0)
101.43^S1^MUMPS
"^DD",101.43,101.43,111.1,1,1,1)
N ORX S ORX=$S(X="T":"TF",1:"DO") D SET^ORDD43(ORX,DA)
"^DD",101.43,101.43,111.1,1,1,2)
N ORX S ORX=$S(X="T":"TF",1:"DO") D KILL^ORDD43(ORX,DA)
"^DD",101.43,101.43,111.1,1,1,"%D",0)
^^1^1^2950502^^^
"^DD",101.43,101.43,111.1,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,111.1,1,1,"DT")
2950502
"^DD",101.43,101.43,111.1,3)
Enter the diet type for this orderable item.
"^DD",101.43,101.43,111.1,21,0)
^^2^2^2941116^
"^DD",101.43,101.43,111.1,21,1,0)
This field identifies the diet type associated with this orderable item,
"^DD",101.43,101.43,111.1,21,2,0)
if the order is for a diet modification or a tubefeeding product.
"^DD",101.43,101.43,111.1,"DT")
2950502
"^DD",101.43,101.43,111.2,0)
PRECEDENCE^NJ2,0^^FH;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.43,101.43,111.2,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",101.43,101.43,111.2,21,0)
^^2^2^2971219^^
"^DD",101.43,101.43,111.2,21,1,0)
This field is used to avoid conflicting diet modifications; items with
"^DD",101.43,101.43,111.2,21,2,0)
the same precedence number may not be selected together.
"^DD",101.43,101.43,111.2,"DT")
2941116
"^DD",101.43,101.43,111.3,0)
ASK EXPIRATION DATE?^S^Y:YES;N:NO;^FH;3^Q
"^DD",101.43,101.43,111.3,3)
Enter YES if the user should be asked for an expiration date when this diet is ordered
"^DD",101.43,101.43,111.3,21,0)
^^2^2^2971219^
"^DD",101.43,101.43,111.3,21,1,0)
This is a flag that determines if a stop date should be prompted for
"^DD",101.43,101.43,111.3,21,2,0)
when placing an order for this diet.
"^DD",101.43,101.43,111.3,"DT")
2961101
"^DD",101.43,101.43,123.1,0)
SERVICE USAGE^S^1:GROUPER ONLY;2:TRACKING ONLY;^CS;1^Q
"^DD",101.43,101.43,123.1,3)
Enter the usage of this service if it may NOT be selectable for ordering, 1 for grouping only or 2 for tracking only.
"^DD",101.43,101.43,123.1,21,0)
^^4^4^2971023^
"^DD",101.43,101.43,123.1,21,1,0)
This field contains the usage of this consult service; a value here
"^DD",101.43,101.43,123.1,21,2,0)
indicates that this service may NOT be selectable for ordering.  Services
"^DD",101.43,101.43,123.1,21,3,0)
with a 1 are used for grouping purposes only, and a 2 indicates that
"^DD",101.43,101.43,123.1,21,4,0)
only service personnel may order or forward consults to this service.
"^DD",101.43,101.43,123.1,"DT")
2971023
"^DD",101.43,101.43,6001,0)
BLOOD COMPONENT^S^1:YES;0:NO;^VB;1^Q
"^DD",101.43,101.43,6001,1,0)
^.1
"^DD",101.43,101.43,6001,1,1,0)
101.43^S10^MUMPS
"^DD",101.43,101.43,6001,1,1,1)
D:X SET^ORDD43("VBC",DA)
"^DD",101.43,101.43,6001,1,1,2)
D:X KILL^ORDD43("VBC",DA)
"^DD",101.43,101.43,6001,1,1,"%D",0)
^^1^1^3031125^
"^DD",101.43,101.43,6001,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,6001,1,1,"DT")
3031125
"^DD",101.43,101.43,6001,3)
Enter YES if this orderable item is a blood component.
"^DD",101.43,101.43,6001,"DT")
3031125
"^DD",101.43,101.43,6002,0)
DIAGNOSTIC TEST^S^0:NO;1:YES;2:TAS;^VB;2^Q
"^DD",101.43,101.43,6002,1,0)
^.1
"^DD",101.43,101.43,6002,1,1,0)
101.43^S11^MUMPS
"^DD",101.43,101.43,6002,1,1,1)
D:X SET^ORDD43("VBT",DA)
"^DD",101.43,101.43,6002,1,1,2)
D:X KILL^ORDD43("VBT",DA)
"^DD",101.43,101.43,6002,1,1,"%D",0)
^^1^1^3031125^
"^DD",101.43,101.43,6002,1,1,"%D",1,0)
Creates an entry in SET multiple.
"^DD",101.43,101.43,6002,1,1,"DT")
3031125
"^DD",101.43,101.43,6002,3)
Enter YES if this item is a diagnostic test, TAS if the test is a Type & Screen.
"^DD",101.43,101.43,6002,"DT")
3031125
"^DD",101.43,101.431,0)
COMPONENTS SUB-FIELD^^4^4
"^DD",101.43,101.431,0,"DT")
2960411
"^DD",101.43,101.431,0,"IX","AID",101.431,2)

"^DD",101.43,101.431,0,"IX","B",101.431,.01)

"^DD",101.43,101.431,0,"NM","COMPONENTS")

"^DD",101.43,101.431,0,"UP")
101.43
"^DD",101.43,101.431,.01,0)
NAME^MF^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",101.43,101.431,.01,1,0)
^.1
"^DD",101.43,101.431,.01,1,1,0)
101.431^B
"^DD",101.43,101.431,.01,1,1,1)
S ^ORD(101.43,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.43,101.431,.01,1,1,2)
K ^ORD(101.43,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.43,101.431,.01,3)
Answer must be 1-60 characters in length.
"^DD",101.43,101.431,.01,21,0)
^^1^1^2960411^
"^DD",101.43,101.431,.01,21,1,0)
This is the name of a component of this orderable item.
"^DD",101.43,101.431,.01,"DT")
2960411
"^DD",101.43,101.431,2,0)
ID^F^^0;2^K:$L(X)>20!($L(X)<1) X
"^DD",101.43,101.431,2,1,0)
^.1
"^DD",101.43,101.431,2,1,1,0)
101.431^AID
"^DD",101.43,101.431,2,1,1,1)
S ^ORD(101.43,DA(1),10,"AID",$E(X,1,30),DA)=""
"^DD",101.43,101.431,2,1,1,2)
K ^ORD(101.43,DA(1),10,"AID",$E(X,1,30),DA)
"^DD",101.43,101.431,2,1,1,"DT")
2960411
"^DD",101.43,101.431,2,3)
Answer must be 1-20 characters in length.
"^DD",101.43,101.431,2,21,0)
^^4^4^2960411^
"^DD",101.43,101.431,2,21,1,0)
This is an identifier for this component, created from the 6-piece coded
"^DD",101.43,101.431,2,21,2,0)
format passed in the Orderable Items update message from each package.
"^DD",101.43,101.431,2,21,3,0)
It should be stored in the form of "package code;99XXX" where XXX 
"^DD",101.43,101.431,2,21,4,0)
indicates the package table originating this item (i.e. RAP, LRT, etc.).
"^DD",101.43,101.431,2,"DT")
2960411
"^DD",101.43,101.431,3,0)
CODE^F^^0;3^K:$L(X)>10!($L(X)<1) X
"^DD",101.43,101.431,3,3)
Answer must be 1-10 characters in length.
"^DD",101.43,101.431,3,21,0)
^^2^2^2960411^
"^DD",101.43,101.431,3,21,1,0)
This is the code assigned to this item by the authoritative package from a
"^DD",101.43,101.431,3,21,2,0)
national standard coding system such as CPT or SNOMED.
"^DD",101.43,101.431,3,"DT")
2960411
"^DD",101.43,101.431,4,0)
CODING SYSTEM^S^NDF:NATIONAL DRUG FILE;CPT4:CPT4;NLT:NATIONAL LAB TEST FILE;^0;4^Q
"^DD",101.43,101.431,4,3)
Enter the coding system in which this item has been coded.
"^DD",101.43,101.431,4,21,0)
^^1^1^2960411^
"^DD",101.43,101.431,4,21,1,0)
This is the system used to generate the code assigned in field 3.
"^DD",101.43,101.431,4,"DT")
2960411
"^DD",101.43,101.432,0)
SYNONYMS SUB-FIELD^^.01^1
"^DD",101.43,101.432,0,"DT")
2950303
"^DD",101.43,101.432,0,"IX","B",101.432,.01)

"^DD",101.43,101.432,0,"NM","SYNONYMS")

"^DD",101.43,101.432,0,"UP")
101.43
"^DD",101.43,101.432,.01,0)
SYNONYM^MF^^0;1^K:$L(X)>63!($L(X)<1) X
"^DD",101.43,101.432,.01,1,0)
^.1
"^DD",101.43,101.432,.01,1,1,0)
101.432^B
"^DD",101.43,101.432,.01,1,1,1)
S ^ORD(101.43,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",101.43,101.432,.01,1,1,2)
K ^ORD(101.43,DA(1),2,"B",$E(X,1,30),DA)
"^DD",101.43,101.432,.01,1,2,0)
101.43^B^MNEMONIC
"^DD",101.43,101.432,.01,1,2,1)
S:'$D(^ORD(101.43,"B",$E(X,1,30),DA(1),DA)) ^(DA)=1
"^DD",101.43,101.432,.01,1,2,2)
I $D(^ORD(101.43,"B",$E(X,1,30),DA(1),DA)),^(DA) K ^(DA)
"^DD",101.43,101.432,.01,1,2,"DT")
2950303
"^DD",101.43,101.432,.01,1,3,0)
101.43^SS^MUMPS
"^DD",101.43,101.432,.01,1,3,1)
D SS3^ORDD43
"^DD",101.43,101.432,.01,1,3,2)
D SK3^ORDD43
"^DD",101.43,101.432,.01,1,3,"%D",0)
^^2^2^2990316^^^^
"^DD",101.43,101.432,.01,1,3,"%D",1,0)
Allows retrieval of items by synonym via the Set "S" xrefs:
"^DD",101.43,101.432,.01,1,3,"%D",2,0)
^ORD(101.43,"S.<set>",SYNONYM,DA)
"^DD",101.43,101.432,.01,1,3,"DT")
2950810
"^DD",101.43,101.432,.01,3)
Answer must be 1-63 characters in length.
"^DD",101.43,101.432,.01,21,0)
^^1^1^2990223^^
"^DD",101.43,101.432,.01,21,1,0)
This is a synonym for this orderable item.
"^DD",101.43,101.432,.01,"DT")
2990223
"^DD",101.43,101.438,0)
ORDER MESSAGE SUB-FIELD^^.01^1
"^DD",101.43,101.438,0,"DT")
2941205
"^DD",101.43,101.438,0,"NM","ORDER MESSAGE")

"^DD",101.43,101.438,0,"UP")
101.43
"^DD",101.43,101.438,.01,0)
ORDER MESSAGE^WL^^0;1^Q
"^DD",101.43,101.438,.01,3)
Enter a message to be displayed whenever this item is ordered.
"^DD",101.43,101.438,.01,21,0)
^.001^2^2^3040407^^^^
"^DD",101.43,101.438,.01,21,1,0)
This field contains text that is to be displayed to the user whenever
"^DD",101.43,101.438,.01,21,2,0)
this item is selected to be ordered.
"^DD",101.43,101.438,.01,"DT")
2941205
"^DD",101.43,101.439,0)
SET MEMBERSHIP SUB-FIELD^^2^2
"^DD",101.43,101.439,0,"DT")
2941117
"^DD",101.43,101.439,0,"IX","B",101.439,.01)

"^DD",101.43,101.439,0,"NM","SET MEMBERSHIP")

"^DD",101.43,101.439,0,"UP")
101.43
"^DD",101.43,101.439,.01,0)
SET^MF^^0;1^K:$L(X)>8!($L(X)<2) X
"^DD",101.43,101.439,.01,1,0)
^.1
"^DD",101.43,101.439,.01,1,1,0)
101.439^B
"^DD",101.43,101.439,.01,1,1,1)
S ^ORD(101.43,DA(1),9,"B",$E(X,1,30),DA)=""
"^DD",101.43,101.439,.01,1,1,2)
K ^ORD(101.43,DA(1),9,"B",$E(X,1,30),DA)
"^DD",101.43,101.439,.01,1,2,0)
101.43^S^MUMPS
"^DD",101.43,101.439,.01,1,2,1)
Q:$P($G(^ORD(101.43,DA(1),"LR")),U,7)="O"  N NM,IN S NM=$P(^(0),U),IN=$G(^(.1)) S:$L(NM) ^ORD(101.43,"S."_X,$$UP^XLFSTR(NM),DA(1))=U_NM_U_IN
"^DD",101.43,101.439,.01,1,2,2)
N NM S NM=$P(^ORD(101.43,DA(1),0),U) K:$L(NM) ^ORD(101.43,"S."_X,$$UP^XLFSTR(NM),DA(1))
"^DD",101.43,101.439,.01,1,2,"%D",0)
^^1^1^2960806^^^^
"^DD",101.43,101.439,.01,1,2,"%D",1,0)
Allows retrieval of orderable items by set.
"^DD",101.43,101.439,.01,1,2,"DT")
2960806
"^DD",101.43,101.439,.01,1,3,0)
101.43^SS1^MUMPS
"^DD",101.43,101.439,.01,1,3,1)
D SS2^ORDD43
"^DD",101.43,101.439,.01,1,3,2)
D SK2^ORDD43
"^DD",101.43,101.439,.01,1,3,"%D",0)
^^1^1^2960806^^^^
"^DD",101.43,101.439,.01,1,3,"%D",1,0)
Allows retrieval of items by synonym via the Set "S" xrefs.
"^DD",101.43,101.439,.01,1,3,"DT")
2960806
"^DD",101.43,101.439,.01,1,4,0)
101.43^C1^MUMPS
"^DD",101.43,101.439,.01,1,4,1)
N CD,NM,IN S NM=$P(^ORD(101.43,DA(1),0),U),CD=$P(^(0),U,3),IN=$G(^(.1)) S:$L(CD) ^ORD(101.43,"C."_X,$$UP^XLFSTR(CD_" "_NM),DA(1))=U_(CD_" "_NM)_U_IN
"^DD",101.43,101.439,.01,1,4,2)
N CD,NM S NM=$P(^ORD(101.43,DA(1),0),U),CD=$P(^(0),U,3) K:$L(CD) ^ORD(101.43,"C."_X,$$UP^XLFSTR(CD_" "_NM),DA(1))
"^DD",101.43,101.439,.01,1,4,"%D",0)
^^1^1^2960806^^^^
"^DD",101.43,101.439,.01,1,4,"%D",1,0)
Allows retrieval of items by code within Sets.
"^DD",101.43,101.439,.01,1,4,"DT")
2950713
"^DD",101.43,101.439,.01,3)
Answer must be 2-8 characters in length.
"^DD",101.43,101.439,.01,21,0)
^^1^1^2941117^^^^
"^DD",101.43,101.439,.01,21,1,0)
This is the name of a set to which this orderable item belongs.
"^DD",101.43,101.439,.01,"DT")
2960806
"^DD",101.43,101.439,2,0)
QO ONLY^S^1:YES;^0;2^Q
"^DD",101.43,101.439,2,1,0)
^.1
"^DD",101.43,101.439,2,1,1,0)
101.43^AQO^MUMPS
"^DD",101.43,101.439,2,1,1,1)
D QO^ORDD43(X)
"^DD",101.43,101.439,2,1,1,2)
D QO^ORDD43("")
"^DD",101.43,101.439,2,1,1,"%D",0)
^^3^3^3021106^
"^DD",101.43,101.439,2,1,1,"%D",1,0)
This index adds data to the 5th piece of the "S.xxx" xrefs to tell CPRS
"^DD",101.43,101.439,2,1,1,"%D",2,0)
GUI whether or not to allow this item to be selectable in the regular
"^DD",101.43,101.439,2,1,1,"%D",3,0)
order dialog for the set, or if it should be orderable via quick orders.
"^DD",101.43,101.439,2,1,1,"DT")
3021106
"^DD",101.43,101.439,2,3)
Enter YES if this item should only be orderable via quick orders.
"^DD",101.43,101.439,2,21,0)
^^2^2^3021106^
"^DD",101.43,101.439,2,21,1,0)
This field determines if the item may be ordered via the regular order
"^DD",101.43,101.439,2,21,2,0)
dialog for this Set, or only via predefined quick orders.
"^DD",101.43,101.439,2,"DT")
3021106
"^DIC",100,100,0)
ORDER^100I
"^DIC",100,100,0,"GL")
^OR(100,
"^DIC",100,100,"%D",0)
^^2^2^2950424^^^^
"^DIC",100,100,"%D",1,0)
This is the file of orders/requisitions made for any package through the
"^DIC",100,100,"%D",2,0)
Order Entry Option (OR).
"^DIC",100,"B","ORDER",100)

"^DIC",100.05,100.05,0)
ORDER CHECK INSTANCES^100.05
"^DIC",100.05,100.05,0,"GL")
^ORD(100.05,
"^DIC",100.05,100.05,"%",0)
^1.005^^0
"^DIC",100.05,100.05,"%D",0)
^^2^2^3090121^
"^DIC",100.05,100.05,"%D",1,0)
The purpose of this file is to create a repository for instances of order 
"^DIC",100.05,100.05,"%D",2,0)
checks that are presented to the users of VISTA across all applications.  
"^DIC",100.05,"B","ORDER CHECK INSTANCES",100.05)

"^DIC",101.41,101.41,0)
ORDER DIALOG^101.41
"^DIC",101.41,101.41,0,"GL")
^ORD(101.41,
"^DIC",101.41,101.41,"%D",0)
^^2^2^2960819^^
"^DIC",101.41,101.41,"%D",1,0)
This file contains the information needed to define how to prompt for each
"^DIC",101.41,101.41,"%D",2,0)
order, what values are acceptable, etc.
"^DIC",101.41,"B","ORDER DIALOG",101.41)

"^DIC",101.43,101.43,0)
ORDERABLE ITEMS^101.43
"^DIC",101.43,101.43,0,"GL")
^ORD(101.43,
"^DIC",101.43,101.43,"%D",0)
^^1^1^2941116^^^^
"^DIC",101.43,101.43,"%D",1,0)
This file contains the orderable items for use within OE/RR.
"^DIC",101.43,"B","ORDERABLE ITEMS",101.43)

**INSTALL NAME**
PSJ*5.0*226
"BLD",7614,0)
PSJ*5.0*226^INPATIENT MEDICATIONS^0^3110124^y
"BLD",7614,1,0)
^^1^1^3090519^
"BLD",7614,1,1,0)
Provide dosing checks for Unit Dose and IV orders.
"BLD",7614,4,0)
^9.64PA^^
"BLD",7614,6)
2^
"BLD",7614,6.3)
46
"BLD",7614,"ABPKG")
n
"BLD",7614,"KRN",0)
^9.67PA^779.2^20
"BLD",7614,"KRN",.4,0)
.4
"BLD",7614,"KRN",.401,0)
.401
"BLD",7614,"KRN",.402,0)
.402
"BLD",7614,"KRN",.403,0)
.403
"BLD",7614,"KRN",.5,0)
.5
"BLD",7614,"KRN",.84,0)
.84
"BLD",7614,"KRN",3.6,0)
3.6
"BLD",7614,"KRN",3.8,0)
3.8
"BLD",7614,"KRN",9.2,0)
9.2
"BLD",7614,"KRN",9.8,0)
9.8
"BLD",7614,"KRN",9.8,"NM",0)
^9.68A^4^3
"BLD",7614,"KRN",9.8,"NM",2,0)
PSJHL3^^0^B66158358
"BLD",7614,"KRN",9.8,"NM",3,0)
PSJHL4^^0^B75570898
"BLD",7614,"KRN",9.8,"NM",4,0)
PSJHL4A^^0^B58072219
"BLD",7614,"KRN",9.8,"NM","B","PSJHL3",2)

"BLD",7614,"KRN",9.8,"NM","B","PSJHL4",3)

"BLD",7614,"KRN",9.8,"NM","B","PSJHL4A",4)

"BLD",7614,"KRN",19,0)
19
"BLD",7614,"KRN",19.1,0)
19.1
"BLD",7614,"KRN",101,0)
101
"BLD",7614,"KRN",409.61,0)
409.61
"BLD",7614,"KRN",771,0)
771
"BLD",7614,"KRN",779.2,0)
779.2
"BLD",7614,"KRN",870,0)
870
"BLD",7614,"KRN",8989.51,0)
8989.51
"BLD",7614,"KRN",8989.52,0)
8989.52
"BLD",7614,"KRN",8994,0)
8994
"BLD",7614,"KRN","B",.4,.4)

"BLD",7614,"KRN","B",.401,.401)

"BLD",7614,"KRN","B",.402,.402)

"BLD",7614,"KRN","B",.403,.403)

"BLD",7614,"KRN","B",.5,.5)

"BLD",7614,"KRN","B",.84,.84)

"BLD",7614,"KRN","B",3.6,3.6)

"BLD",7614,"KRN","B",3.8,3.8)

"BLD",7614,"KRN","B",9.2,9.2)

"BLD",7614,"KRN","B",9.8,9.8)

"BLD",7614,"KRN","B",19,19)

"BLD",7614,"KRN","B",19.1,19.1)

"BLD",7614,"KRN","B",101,101)

"BLD",7614,"KRN","B",409.61,409.61)

"BLD",7614,"KRN","B",771,771)

"BLD",7614,"KRN","B",779.2,779.2)

"BLD",7614,"KRN","B",870,870)

"BLD",7614,"KRN","B",8989.51,8989.51)

"BLD",7614,"KRN","B",8989.52,8989.52)

"BLD",7614,"KRN","B",8994,8994)

"BLD",7614,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7614,"QUES",0)
^9.62^^
"BLD",7614,"REQB",0)
^9.611^1^1
"BLD",7614,"REQB",1,0)
PSJ*5.0*197^2
"BLD",7614,"REQB","B","PSJ*5.0*197",1)

"MBREQ")
1
"PKG",197,-1)
1^1
"PKG",197,0)
INPATIENT MEDICATIONS^PSJ^UNIT DOSE AND IVS
"PKG",197,20,0)
^9.402P^^
"PKG",197,22,0)
^9.49I^1^1
"PKG",197,22,1,0)
5.0^2971215^2980917^11712
"PKG",197,22,1,"PAH",1,0)
226^3110124^10000000180
"PKG",197,22,1,"PAH",1,1,0)
^^1^1^3110124
"PKG",197,22,1,"PAH",1,1,1,0)
Provide dosing checks for Unit Dose and IV orders.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PSJHL3")
0^2^B66158358
"RTN","PSJHL3",1,0)
PSJHL3 ;BIR/RLW-PHARMACY ORDER SEGMENTS ;04 Aug 98 / 10:10 AM
"RTN","PSJHL3",2,0)
 ;;5.0; INPATIENT MEDICATIONS ;**1,11,14,40,42,47,50,56,58,92,101,102,123,110,111,152,134,226**;16 DEC 97;Build 46
"RTN","PSJHL3",3,0)
 ;
"RTN","PSJHL3",4,0)
 ; Reference to ^PS(50.606 is supported by DBIA# 2174.
"RTN","PSJHL3",5,0)
 ; Reference to ^PS(50.607 is supported by DBIA# 2221.        
"RTN","PSJHL3",6,0)
 ; Reference to ^PS(50.7 is supported by DBIA# 2180.
"RTN","PSJHL3",7,0)
 ; Reference to ^PS(51.2 is supported by DBIA# 2178.
"RTN","PSJHL3",8,0)
 ; Reference to ^PS(52.6 is supported by DBIA# 1231.
"RTN","PSJHL3",9,0)
 ; Reference to ^PS(52.7 is supported by DBIA# 2173.
"RTN","PSJHL3",10,0)
 ; Reference to ^PS(55 is supported by DBIA# 2191.
"RTN","PSJHL3",11,0)
 ; Reference to ^PSDRUG( is supported by DBIA# 2192.
"RTN","PSJHL3",12,0)
 ; Reference to ^PSNDF( is supported by DBIA# 2195.
"RTN","PSJHL3",13,0)
 ; Reference to ^VA(200 is supported by DBIA# 10060.
"RTN","PSJHL3",14,0)
 ; Reference to ^PSNAPIS is supported by DBIA# 2531.
"RTN","PSJHL3",15,0)
 ; Reference to ^XLFDT is supported by DBIA# 10103.
"RTN","PSJHL3",16,0)
 ; Reference to ^PSSUTIL1 is supported by DBIA# 3179.
"RTN","PSJHL3",17,0)
 ; Reference to ^ORHLESC is supported by DBIA# 4922.
"RTN","PSJHL3",18,0)
 ;
"RTN","PSJHL3",19,0)
EN1(PSJHLDFN,PSOC,PSJORDER) ; start here
"RTN","PSJHL3",20,0)
 ; passed in are PSJHLDFN (patient ien)
"RTN","PSJHL3",21,0)
 ;               PSJORDER (file root of order)
"RTN","PSJHL3",22,0)
 ;               OC (order control code - NW for new order, OK for finished order, OC for order canceled)
"RTN","PSJHL3",23,0)
 I $G(PSJHLDFN)']""!$G(PSOC)']""!$G(PSJORDER)']"" W !,"INSUFFICIENT DATA FOR ^PSJHL3" Q
"RTN","PSJHL3",24,0)
 N COMMENTS,DDIEA,DDNUM,DOSE,DOSEFORM,DOSEOR,NAME,DURATION,IVTYPE,NODE1,NODE2,NDNODE,OINODE,PSGPLS,PSGPLF,PRODNAME,SPDIEN,UNIT,UNITS,CNT,DDIEN,SCHEDULE,PSGST
"RTN","PSJHL3",25,0)
 D INIT
"RTN","PSJHL3",26,0)
 S IVTYPE=$S(RXORDER["U":"",1:$$IVTYPE^PSJHLU(PSJORDER))
"RTN","PSJHL3",27,0)
 D RXO,RXE,RXR D ZRX
"RTN","PSJHL3",28,0)
 D CALL^PSJHLU(PSJI)
"RTN","PSJHL3",29,0)
 Q
"RTN","PSJHL3",30,0)
INIT ; initialize HL7 variables
"RTN","PSJHL3",31,0)
 D INIT^PSJHLU
"RTN","PSJHL3",32,0)
 Q
"RTN","PSJHL3",33,0)
RXO ; pharmacy prescription order segment (used to send Orderable Item to OE/RR)
"RTN","PSJHL3",34,0)
 S LIMIT=17 X PSJCLEAR
"RTN","PSJHL3",35,0)
 S FIELD(0)="RXO"
"RTN","PSJHL3",36,0)
 S OINODE=$G(@(PSJORDER_".2)"))
"RTN","PSJHL3",37,0)
 S SPDIEN=+$P(OINODE,"^"),DOSEOR=$$ESC^ORHLESC($P(OINODE,"^",2)),DOSE=$P(OINODE,"^",5),UNIT=$P(OINODE,"^",6) S:'$G(PSJBCBU) UNIT=$$ESC^ORHLESC(UNIT)
"RTN","PSJHL3",38,0)
 S FIELD(1)=$S(SPDIEN=0:"^^^^",1:"^^^"_SPDIEN_"^")
"RTN","PSJHL3",39,0)
 I SPDIEN S DOSEFORM=$P($G(^PS(50.7,SPDIEN,0)),"^",2),NAME=$P($G(^PS(50.606,+DOSEFORM,0)),"^") S:'$G(PSJBCBU) NAME=$$ESC^ORHLESC(NAME) S FIELD(1)=FIELD(1)_$$ESC^ORHLESC($P($G(^PS(50.7,SPDIEN,0)),"^"))_" "_NAME
"RTN","PSJHL3",40,0)
 S FIELD(1)=FIELD(1)_"^99PSP"
"RTN","PSJHL3",41,0)
 N IVLNOD S IVLNOD=$G(@(PSJORDER_"2.5)")) D
"RTN","PSJHL3",42,0)
 .S IVLIM=$P(IVLNOD,"^",4) I IVLIM?1"a".N S IVLIM="doses"_$P(IVLIM,"a",2)
"RTN","PSJHL3",43,0)
 .S $P(FIELD(1),"^",3)=IVLIM
"RTN","PSJHL3",44,0)
 D SEGMENT^PSJHLU(LIMIT),DISPLAY^PSJHL2
"RTN","PSJHL3",45,0)
 Q
"RTN","PSJHL3",46,0)
RXE ; pharmacy encoded order segment
"RTN","PSJHL3",47,0)
 S (UNITS,NDNODE,SPDIEN,PRODNAME,DDNUM,DDIEN,CNT)="",LIMIT=26 X PSJCLEAR
"RTN","PSJHL3",48,0)
 S FIELD(0)="RXE"
"RTN","PSJHL3",49,0)
 S NODE1=$G(@(PSJORDER_"0)")),NODE2=$G(@(PSJORDER_"2)")),NODEPT2=$G(@(PSJORDER_".2)"))
"RTN","PSJHL3",50,0)
  I $G(PSGST)="" N PSGST D
"RTN","PSJHL3",51,0)
 .I $G(RXORDER)["V" N X,ZZND,LYN,PSGS0XT,PSGS0Y,PSGOES S PSGOES=1 S X=$G(P(9)) I X]"" D EN^PSGS0 S:$G(ZZND)'="" PSGST=$P(ZZND,"^",5) Q
"RTN","PSJHL3",52,0)
 .S PSGST=$P($G(NODE1),"^",7)
"RTN","PSJHL3",53,0)
 I RXORDER["V" D IVRXE Q
"RTN","PSJHL3",54,0)
 I RXORDER["P",IVTYPE="F" D IVRXE Q
"RTN","PSJHL3",55,0)
 I RXORDER["P",$P(NODE1,"^",4)="H" D IVRXE Q
"RTN","PSJHL3",56,0)
 N RENEW S RENEW=$$LASTREN^PSJLMPRI(PSJHLDFN,RXORDER)
"RTN","PSJHL3",57,0)
 S PSGPLS=$S($G(PSJEXPOE):$P(NODE2,"^",2),RENEW>$P(NODE2,"^",2):RENEW,1:$P(NODE2,"^",2))
"RTN","PSJHL3",58,0)
 S PSGPLF=$S($G(PSJEXPOE):PSJEXPOE,1:$P(NODE2,"^",4))
"RTN","PSJHL3",59,0)
 S FIELD(1)="^"_$S($G(PSJBCBU):$P(NODE2,"^"),1:$$ESC^ORHLESC($P(NODE2,"^")))_"&"_$P(NODE2,"^",5)_"^^"_$$FMTHL7^XLFDT(PSGPLS)_"^"_$$FMTHL7^XLFDT(PSGPLF)_"^"_$P($G(NODEPT2),"^",4)_"^"_$G(PSGST)
"RTN","PSJHL3",60,0)
 S FIELD(21)="^"_$P(NODE2,"^",5)_"^99PSA^^^"
"RTN","PSJHL3",61,0)
 I ($G(DOSEOR)']"")!($O(@(PSJORDER_"1,"" "")"),-1)=1) D
"RTN","PSJHL3",62,0)
 .S (CNT,DDNUM)=0 F  S DDNUM=$O(@(PSJORDER_"1,"_DDNUM_")")) Q:'DDNUM  Q:CNT=1  S DDIEN=+$G(@(PSJORDER_"1,"_DDNUM_",0)")) D
"RTN","PSJHL3",63,0)
 ..S FIELD(1)=$S($P(@(PSJORDER_"1,"_DDNUM_",0)"),"^",2)="":"1",1:$P(@(PSJORDER_"1,"_DDNUM_",0)"),"^",2))_"&"_FIELD(1)
"RTN","PSJHL3",64,0)
 ..S FIELD(1)=DOSE_"&"_UNIT_"&"_FIELD(1),$P(FIELD(1),"^",8)=$S($G(DOSEOR)]"":$G(DOSEOR),1:DOSE_UNIT)
"RTN","PSJHL3",65,0)
 ..S:$P(FIELD(1),"^",8)="" $P(FIELD(1),"^",8)=$$ESC^ORHLESC($G(@(PSJORDER_".3)")))
"RTN","PSJHL3",66,0)
 ..S NDNODE=$G(^PSDRUG(DDIEN,"ND"))
"RTN","PSJHL3",67,0)
 ..;  CHANGE FOR NEW NDF CALL
"RTN","PSJHL3",68,0)
 ..S PRODNAME=$S($T(^PSNAPIS)]"":$$PROD0^PSNAPIS(+NDNODE,$P(NDNODE,"^",3)),$G(^PSNDF(+NDNODE,5,+$P(NDNODE,"^",3),0))]"":^(0),1:"N/A")
"RTN","PSJHL3",69,0)
 ..S:PRODNAME="" PRODNAME="N/A"
"RTN","PSJHL3",70,0)
 ..S FIELD(2)=$S(PRODNAME="N/A":"^^",1:+NDNODE_"."_+$P(NDNODE,"^",3)_"^"_$P(NDNODE,"^",2)_"^"_"99NDF")_"^"_DDIEN_"^"_$S($G(PSJBCBU):$P($G(^PSDRUG(DDIEN,0)),"^"),1:$$ESC^ORHLESC($P($G(^PSDRUG(DDIEN,0)),"^")))_"^"_"99PSD"
"RTN","PSJHL3",71,0)
 ..S UNITS=$S(PRODNAME="N/A":"N/A",1:$S($T(^PSNAPIS)]"":$P($$DFSU^PSNAPIS(+NDNODE,$P(NDNODE,"^",3)),"^",5),1:$P($G(^PSNDF(+NDNODE,2,+$P(PRODNAME,"^",2),3,+$P(PRODNAME,"^",3),4,+$P(PRODNAME,"^",4),0)),"^")))
"RTN","PSJHL3",72,0)
 ..S FIELD(5)="^^^"_$$ESC^ORHLESC(UNITS)_"^"_$$ESC^ORHLESC($P($G(^PS(50.607,UNITS,0)),"^"))_"^99PSU"
"RTN","PSJHL3",73,0)
 ..S FIELD(6)="^^^"_$$ESC^ORHLESC($G(DOSEFORM))_"^"_$$ESC^ORHLESC($P($G(^PS(50.606,+$G(DOSEFORM),0)),"^"))_"^99PSF"
"RTN","PSJHL3",74,0)
 ..S FIELD(25)=$$EN^PSSUTIL1(DDIEN),FIELD(26)=$P(FIELD(25),"|",2),FIELD(25)=$P(FIELD(25),"|")
"RTN","PSJHL3",75,0)
 ..I $P(FIELD(25),"^",5)]"" S $P(FIELD(25),"^",5)=$$ESC^ORHLESC($P(FIELD(25),"^",5))
"RTN","PSJHL3",76,0)
 ..S CNT=CNT+1
"RTN","PSJHL3",77,0)
 E  S $P(FIELD(1),"^",8)=$$ESC^ORHLESC(DOSEOR)
"RTN","PSJHL3",78,0)
 S NAME=$P($G(^VA(200,DUZ,0)),"^") S:'$G(PSJBCBU) NAME=$$ESC^ORHLESC(NAME) S FIELD(14)=DUZ_"^"_NAME_"^"_"99NP"
"RTN","PSJHL3",79,0)
 D SEGMENT^PSJHLU(LIMIT),DISPLAY^PSJHL2
"RTN","PSJHL3",80,0)
 D SEGMENT2^PSJHLU
"RTN","PSJHL3",81,0)
 Q
"RTN","PSJHL3",82,0)
IVRXE ; RXE segment for IV orders
"RTN","PSJHL3",83,0)
 ; If an Inpatient Med IV order, send RXE w/dispense drug info.  
"RTN","PSJHL3",84,0)
 ; If an IV FLUID order, send start/stop date and duration in the RXE
"RTN","PSJHL3",85,0)
 ; and send an RXC for each additive and solution.
"RTN","PSJHL3",86,0)
 N ADSNODE
"RTN","PSJHL3",87,0)
 I RXORDER["V" S PSGPLS=$P(NODE1,"^",2),PSGPLF=$P(NODE1,"^",3)
"RTN","PSJHL3",88,0)
 E  S PSGPLS=$P(NODE2,"^",2),PSGPLF=$P(NODE2,"^",4)
"RTN","PSJHL3",89,0)
 S FIELD(1)="^"_$S(PSJORDER["IV":($P(NODE1,"^",9)_"&"_$P(NODE1,"^",11)),1:$P(NODE2,"^"))_"^^"_$$FMTHL7^XLFDT(PSGPLS)_"^"_$$FMTHL7^XLFDT(PSGPLF)_"^"_$G(P("PRY"))
"RTN","PSJHL3",90,0)
 S FIELD(21)="^"_$S(PSJORDER["IV":$P(NODE1,"^",11),1:$P(NODE2,"^",5))_"^99PSA^^^"
"RTN","PSJHL3",91,0)
 S NAME=$P($G(^VA(200,DUZ,0)),"^") S:'$G(PSJBCBU) NAME=$$ESC^ORHLESC(NAME)
"RTN","PSJHL3",92,0)
 S FIELD(14)=DUZ_"^"_NAME_"^"_"99NP"
"RTN","PSJHL3",93,0)
 N X,Y
"RTN","PSJHL3",94,0)
 I RXORDER["V" S INFUSE=$P(NODE1,"^",8)
"RTN","PSJHL3",95,0)
 E  S INFUSE=$P($G(@(PSJORDER_"8)")),"^",5)
"RTN","PSJHL3",96,0)
 I INFUSE?1N.N1" ml/hr" S FIELD(23)=+INFUSE,Y=$P(INFUSE,+INFUSE,2),Y=$$TRIM^XLFSTR(Y,"LR"," "),FIELD(24)="^^^^"_Y_"^PSU"
"RTN","PSJHL3",97,0)
 I FIELD(23)="",FIELD(24)="" S FIELD(23)=INFUSE
"RTN","PSJHL3",98,0)
 D SEGMENT^PSJHLU(LIMIT),DISPLAY^PSJHL2
"RTN","PSJHL3",99,0)
 K SEGMENT I RXORDER["V" S JJ=0 F  S JJ=$O(@(PSJORDER_"5,"_JJ_")")) Q:'JJ  S SEGMENT(JJ-1)=$S($G(PSJBCBU):$G(@(PSJORDER_"5,"_JJ_",0)")),1:$$ESC^ORHLESC($G(@(PSJORDER_"5,"_JJ_",0)"))))
"RTN","PSJHL3",100,0)
 E  S JJ=0 F  S JJ=$O(@(PSJORDER_"12,"_JJ_")")) Q:'JJ  S SEGMENT(JJ-1)=$S($G(PSJBCBU):$G(@(PSJORDER_"12,"_JJ_",0)")),1:$G(@(PSJORDER_"12,"_JJ_",0)")))
"RTN","PSJHL3",101,0)
 I $D(SEGMENT(0)) S SEGMENT(0)="NTE|6|L|"_SEGMENT(0) D
"RTN","PSJHL3",102,0)
 .D SET^PSJHLU K SEGMENT,JJ
"RTN","PSJHL3",103,0)
 I RXORDER["V",$P($G(@(PSJORDER_"3)")),"^")]"" K SEGMENT D
"RTN","PSJHL3",104,0)
 .S SEGMENT(0)="NTE|21|L|"_$S($G(PSJSBCBU):$P($G(@(PSJORDER_"3)")),"^"),1:$$ESC^ORHLESC($P($G(@(PSJORDER_"3)")),"^"))) D
"RTN","PSJHL3",105,0)
 .D SET^PSJHLU K SEGMENT
"RTN","PSJHL3",106,0)
 I RXORDER["P",$P($G(@(PSJORDER_"9)")),U,2)]"" K SEGMENT D
"RTN","PSJHL3",107,0)
 .S SEGMENT(0)="NTE|21|L|"_$S($G(PSJSBCBU):$P($G(@(PSJORDER_"9)")),U,2),1:$$ESC^ORHLESC($P($G(@(PSJORDER_"9)")),U,2))) D
"RTN","PSJHL3",108,0)
 .D SET^PSJHLU K SEGMENT
"RTN","PSJHL3",109,0)
RXC ;component segments
"RTN","PSJHL3",110,0)
 N ADDITIVE,SOLUTION,SUB,TYPE,AD,SOL,PTR,NUM,UTMP,XTMP
"RTN","PSJHL3",111,0)
 S LIMIT=24 X PSJCLEAR
"RTN","PSJHL3",112,0)
 S FIELD(0)="RXC"
"RTN","PSJHL3",113,0)
 ; In the line below, the naked reference refers to the full global reference represented in PSJORDER_TYPE...
"RTN","PSJHL3",114,0)
 ; This could be a reference to either ^PS(53.1 or ^PS(55
"RTN","PSJHL3",115,0)
 S AD="AD",SOL="SOL" F TYPE="AD","SOL" S SUB=0 F  S SUB=$O(@(PSJORDER_TYPE_","_SUB_")")) Q:SUB=""  S NODE1=$G(^(SUB,0)) Q:NODE1=""  D
"RTN","PSJHL3",116,0)
 .S FIELD(1)=$S(TYPE="AD":"A",1:"B")
"RTN","PSJHL3",117,0)
 .I FIELD(1)="A",($P(NODE1,U,3)="") S $P(NODE1,U,3)="A"
"RTN","PSJHL3",118,0)
 .S PTR=+$S(TYPE="AD":+$P($G(^PS(52.6,$P(NODE1,"^"),0)),"^",11),1:+$P($G(^PS(52.7,$P(NODE1,"^"),0)),"^",11))
"RTN","PSJHL3",119,0)
 .S FIELD(2)="^^^"_$S($G(PSJBCBU):+$P(NODE1,"^"),1:PTR)_"^"_$S($G(PSJBCBU):$S(TYPE="AD":$P($G(^PS(52.6,+$P(NODE1,"^"),0)),"^"),1:$P($G(^PS(52.7,+$P(NODE1,"^"),0)),"^")_" "_$P($G(^(0)),U,4)),1:$P($G(^PS(50.7,PTR,0)),"^"))
"RTN","PSJHL3",120,0)
 .S:(TYPE="AD"&$G(PSJBCBU)) FIELD(2)=FIELD(2)_$S($P(NODE1,"^",3)]"":" BOTTLE: "_$P(NODE1,"^",3),1:"")
"RTN","PSJHL3",121,0)
 .S FIELD(2)=FIELD(2)_"^99PSP"
"RTN","PSJHL3",122,0)
 .S FIELD(3)=$P($P(NODE1,"^",2)," ")
"RTN","PSJHL3",123,0)
 .S FIELD(4)=$P($P(NODE1,"^",2)," ",2)
"RTN","PSJHL3",124,0)
 .S FIELD(5)=$P(NODE1,"^",3)
"RTN","PSJHL3",125,0)
 .F XTMP=1:1:14 S UTMP($P("ML^LITER^MCG^MG^GM^UNITS^IU^MEQ^MM^MU^THOUU^MG-PE^NANOGRAM^MMOL","^",XTMP))="PSIV-"_XTMP
"RTN","PSJHL3",126,0)
 .S NUM="" S:FIELD(4)'="" NUM=$G(UTMP(FIELD(4)))
"RTN","PSJHL3",127,0)
 .S FIELD(4)="^^^"_NUM_"^"_FIELD(4)_"^99OTH"
"RTN","PSJHL3",128,0)
 .D SEGMENT^PSJHLU(LIMIT),DISPLAY^PSJHL2
"RTN","PSJHL3",129,0)
 Q
"RTN","PSJHL3",130,0)
RXR ; med route segment
"RTN","PSJHL3",131,0)
 S LIMIT=4 X PSJCLEAR
"RTN","PSJHL3",132,0)
 S FIELD(0)="RXR"
"RTN","PSJHL3",133,0)
 I PSJORDER["IV" S FIELD(1)="^^^"_$P($G(@(PSJORDER_".2)")),"^",3) Q:$P(FIELD(1),U,4)=""  D
"RTN","PSJHL3",134,0)
 .N PSJUNITS S PSJUNITS=$S($G(PSJBCBU):$P($G(^PS(51.2,+$P(FIELD(1),"^",4),0)),"^"),1:$$ESC^ORHLESC($P($G(^PS(51.2,+$P(FIELD(1),"^",4),0)),"^")))
"RTN","PSJHL3",135,0)
 .S FIELD(1)=FIELD(1)_"^"_PSJUNITS_"^99PSR"
"RTN","PSJHL3",136,0)
 .S:$G(PSJBCBU) FIELD(4)="^^^"_$P($G(@(PSJORDER_"0)")),"^",4)_"^"_$$CODES^PSIVUTL($P($G(@(PSJORDER_"0)")),"^",4),55.01,.04)_"^99PSR"
"RTN","PSJHL3",137,0)
 I PSJORDER[53.1 S FIELD(1)="^^^"_$P($G(@(PSJORDER_"0)")),"^",3) Q:$P(FIELD(1),U,4)=""  D
"RTN","PSJHL3",138,0)
 .N PSJUNITS S PSJUNITS=$S($G(PSJBCBU):$P($G(^PS(51.2,+$P(FIELD(1),"^",4),0)),"^"),1:$$ESC^ORHLESC($P($G(^PS(51.2,+$P(FIELD(1),"^",4),0)),"^")))
"RTN","PSJHL3",139,0)
 .S FIELD(1)=FIELD(1)_"^"_PSJUNITS_"^99PSR"
"RTN","PSJHL3",140,0)
 .S:$G(PSJBCBU) FIELD(4)="^^^"_$P($G(@(PSJORDER_"0)")),"^",4)_"^"_$$CODES^PSIVUTL($P($G(@(PSJORDER_"0)")),"^",4),53.1,4)_"^99PSR"
"RTN","PSJHL3",141,0)
 S:FIELD(1)="" FIELD(1)="^^^"_$P(NODE1,"^",3)_"^"_$S($G(PSJBCBU):$P($G(^PS(51.2,+$P(NODE1,"^",3),0)),"^"),1:$$ESC^ORHLESC($P($G(^PS(51.2,+$P(NODE1,"^",3),0)),"^")))_"^99PSR"
"RTN","PSJHL3",142,0)
 D SEGMENT^PSJHLU(LIMIT),DISPLAY^PSJHL2
"RTN","PSJHL3",143,0)
 Q
"RTN","PSJHL3",144,0)
ZRX ; pharmacy Z-segment
"RTN","PSJHL3",145,0)
 D ZRX^PSJHLU
"RTN","PSJHL3",146,0)
 Q
"RTN","PSJHL3",147,0)
CNT ;Count dispense drugs for an order
"RTN","PSJHL3",148,0)
 S (CNT,DDNUM)=0 F  S DDNUM=$O(@(PSJORDER_"1,"_DDNUM_")")) Q:'DDNUM  S CNT=CNT+1
"RTN","PSJHL3",149,0)
 Q
"RTN","PSJHL4")
0^3^B75570898
"RTN","PSJHL4",1,0)
PSJHL4 ;BIR/RLW-DECODE HL7 /MESSSAGE FROM OE/RR ;16 Mar 99 / 4:55 PM
"RTN","PSJHL4",2,0)
 ;;5.0; INPATIENT MEDICATIONS ;**1,12,27,34,40,42,55,47,50,56,58,98,85,105,107,110,111,154,134,197,226**;16 DEC 97;Build 46
"RTN","PSJHL4",3,0)
 ; Reference to $$EN^PSOHLNEW is supported by DBIA# 2188.
"RTN","PSJHL4",4,0)
 ; Reference to ^PS(50.7 is supported by DBIA 2180.
"RTN","PSJHL4",5,0)
 ; Reference to ^PS(51.2 is supported by DBIA 2178.
"RTN","PSJHL4",6,0)
 ; Reference to ^PS(55 is supported by DBIA 2191.
"RTN","PSJHL4",7,0)
 ; Reference to ^PS(59.7 supported by DBIA 2181.
"RTN","PSJHL4",8,0)
 ; Reference to ^ORHLESC is supported by DBIA 4922.
"RTN","PSJHL4",9,0)
 ; 
"RTN","PSJHL4",10,0)
EN(PSJMSG) ; Start
"RTN","PSJHL4",11,0)
 K ^TMP("PSJNVO",$J)
"RTN","PSJHL4",12,0)
 N ADCNT,SOLCNT,OCCNT
"RTN","PSJHL4",13,0)
 N ACKDATE,ADDITIVE,ADMINSTR,APPL,COMMENT,PSJHLDFN,DISPENSE,DOSE,DURATION,II,INSTR,J,JJ,JJJ,K,LOGIN,NEWORDER,NURSEACK,OBXFL,OCNARR,OCPROV,OCRSN,ORDER,PRIORITY,PSITEM,ORDCON,PROCOM,PSJORDER,PSREASON
"RTN","PSJHL4",14,0)
 N LOC,PROVIDER,PSPR,PSOC,PTR,QQ,REQST,ROUTE,RXON,RXORDER,SCHEDULE,SEGMENT,SOLUTION,STPDT,STRENGTH,TEXT,CLERK,INFRT,IVTYP,SCHTYP,PREON,NOO,ROC,FREQ,CLASS,PSJHLMTN,UNIT,UNITS,QFLG,VOLUME,TVOLUME,PSGP
"RTN","PSJHL4",15,0)
 N PSJASTP,FLDATE,FLCMNT,PSJFLAG,PSJYN,PRNTON,APPT,IVLIMIT,IVCAT,INTRMT
"RTN","PSJHL4",16,0)
 S (ADCNT,SOLCNT,OCCNT,II,TVOLUME)="",(OBXFL,QFLG)=0,PSJHLMTN="ORR" F  S II=$O(PSJMSG(II)) Q:'II  D DECODE Q:QFLG  D @FIELD(0) Q:$G(CLASS)="O"  Q:QFLG
"RTN","PSJHL4",17,0)
 I ($G(CLASS)'="I")!(QFLG) G END
"RTN","PSJHL4",18,0)
 I ($G(PSOC)="NW")!($G(PSOC)="XO") N DIK,DA S DIK="^PS(53.1,",DA=NEWORDER D EN1^DIK L -^PS(53.1,NEWORDER)
"RTN","PSJHL4",19,0)
 I ($G(PSOC)="NW")!($G(PSOC)="XO") D EN1^PSJHL2(PSJHLDFN,$S(PSOC="NW":"OK",1:"XR"),NEWORDER_"P")
"RTN","PSJHL4",20,0)
END ;
"RTN","PSJHL4",21,0)
 K ^TMP("PSJNVO",$J)
"RTN","PSJHL4",22,0)
 I (",S,A,")[(","_$G(PRIORITY)_",")!($G(SCHEDULE)="NOW")!($G(SCHEDULE)["STAT") D
"RTN","PSJHL4",23,0)
 . I $G(PRIORITY)="ZD",$G(PSGORD) D NOTIFY(PSGORD_$S(PSGORD["V":"V",PSGORD["U":"U",1:""),PSJHLDFN,$G(PRIORITY),$G(SCHEDULE))
"RTN","PSJHL4",24,0)
 . I $G(NEWORDER) D NOTIFY(NEWORDER_"P",PSJHLDFN,$G(PRIORITY),$G(SCHEDULE))
"RTN","PSJHL4",25,0)
 Q
"RTN","PSJHL4",26,0)
DECODE ; Parse into fields 
"RTN","PSJHL4",27,0)
 K FIELD
"RTN","PSJHL4",28,0)
 N PSJCTR1 S PSJCTR1=""
"RTN","PSJHL4",29,0)
 S SEGMENT=$G(PSJMSG(II))
"RTN","PSJHL4",30,0)
 I $D(PSJMSG(II,1)),$P(SEGMENT,"|",1)="ORC" F  S PSJCTR1=$O(PSJMSG(II,PSJCTR1)) Q:PSJCTR1=""  D
"RTN","PSJHL4",31,0)
 . S SEGMENT=SEGMENT_PSJMSG(II,PSJCTR1)  ;Handle CPRS "overflow" ORC nodes
"RTN","PSJHL4",32,0)
 I $D(PSJMSG(II,1)),$P(SEGMENT,"|",1)="OBX" S PSJCTR1="" F  S PSJCTR1=$O(PSJMSG(II,PSJCTR1)) Q:PSJCTR1=""  D
"RTN","PSJHL4",33,0)
 . S SEGMENT=SEGMENT_PSJMSG(II,PSJCTR1)  ;Handle CPRS "overflow" OBX nodes
"RTN","PSJHL4",34,0)
 S J=0
"RTN","PSJHL4",35,0)
 F  Q:$G(SEGMENT)=""  D
"RTN","PSJHL4",36,0)
 .I SEGMENT["|" S FIELD(J)=$P(SEGMENT,"|"),SEGMENT=$E(SEGMENT,$L(FIELD(J))+2,$L(SEGMENT)),J=J+1 Q
"RTN","PSJHL4",37,0)
 .I SEGMENT'["|" S FIELD(J)=SEGMENT,SEGMENT="" Q
"RTN","PSJHL4",38,0)
 K PSJCTR1
"RTN","PSJHL4",39,0)
 Q
"RTN","PSJHL4",40,0)
NOTIFY(ORDER,PSJHLDFN,PRIO,PSJSCHED) ; Send msg
"RTN","PSJHL4",41,0)
 N NTFYREAS,WARD,MGROUP,NTFSTAT,DRUG,DRIEN,PNAME,ORDATE,DO,PSG,XMY,VADPT,LASTFOUR,PSJSOK,CLINIC
"RTN","PSJHL4",42,0)
 Q:($G(PRIO)=""&($G(PSJSCHED)=""))
"RTN","PSJHL4",43,0)
 S DFN=PSJHLDFN D DEM^VADPT S LASTFOUR=$P($P(VADM(2),"^",2),"-",3)
"RTN","PSJHL4",44,0)
 S NTFYREAS=$S((",S,A,")[(","_PRIO_","):1,($G(PSJSCHED)="NOW"):2,($G(PSJSCHED)="STAT"):3,1:0) Q:'NTFYREAS
"RTN","PSJHL4",45,0)
 S PSJSOK=1
"RTN","PSJHL4",46,0)
 I ORDER["P" D PND
"RTN","PSJHL4",47,0)
 I ORDER["U" D UD
"RTN","PSJHL4",48,0)
 I ORDER["V" D IV
"RTN","PSJHL4",49,0)
 Q:PSJSOK=1
"RTN","PSJHL4",50,0)
 D XMD^PSJHL4A
"RTN","PSJHL4",51,0)
 Q
"RTN","PSJHL4",52,0)
PND ; Pending
"RTN","PSJHL4",53,0)
 N WARD,WDPARM,MGRP
"RTN","PSJHL4",54,0)
 Q:'$D(^PS(53.1,+ORDER,0))
"RTN","PSJHL4",55,0)
 S CLINIC=$P($G(^PS(53.1,+ORDER,"DSS")),"^",1)
"RTN","PSJHL4",56,0)
 S WARD=$G(^DPT(PSJHLDFN,.1)) I WARD]"" D
"RTN","PSJHL4",57,0)
 .N DIC,X,Y S DIC="^DIC(42,",DIC(0)="BOXZ",X=WARD D ^DIC S WARD=+Y Q:WARD=0
"RTN","PSJHL4",58,0)
 .S WARD=$O(^PS(59.6,"B",WARD,0)) Q:+WARD=0
"RTN","PSJHL4",59,0)
 .Q:$$SNDTSTW^PSJHL4A(PRIO,PSJSCHED,WARD)
"RTN","PSJHL4",60,0)
 .S WDPARM=$G(^PS(59.6,+WARD,0)),MGRP=$P(WDPARM,"^",30) Q:+MGRP=0
"RTN","PSJHL4",61,0)
 .S MGRP=$$GET1^DIQ(3.8,MGRP,.01) I MGRP]"" S XMY("G."_MGRP_"@"_$G(^XMB("NETNAME")))="",PSJSOK=0
"RTN","PSJHL4",62,0)
 S:'$$SNDTSTP^PSJHL4A(PRIO,PSJSCHED) MGROUP="G.PSJ STAT NOW PENDING ORDER@"_$G(^XMB("NETNAME")),XMY(MGROUP)="",PSJSOK=0
"RTN","PSJHL4",63,0)
 S NTFSTAT="PENDING"
"RTN","PSJHL4",64,0)
 N NDP2,ND0 S NDP2=$G(^PS(53.1,+ORDER,.2)),ND0=$G(^PS(53.1,+ORDER,0))
"RTN","PSJHL4",65,0)
 S DRIEN=+$P(NDP2,"^"),DO=$P(NDP2,"^",2),RTE=$P(ND0,"^",3),ORDATE=$P(ND0,"^",14)
"RTN","PSJHL4",66,0)
 S SCHED=$P($G(^PS(53.1,+ORDER,2)),"^")
"RTN","PSJHL4",67,0)
 Q
"RTN","PSJHL4",68,0)
UD ; UD
"RTN","PSJHL4",69,0)
 N WARD,WDPARM,MGRP
"RTN","PSJHL4",70,0)
 Q:'$D(^PS(55,PSJHLDFN,5,+ORDER,0))
"RTN","PSJHL4",71,0)
 S CLINIC=$P($G(^PS(55,PSJHLDFN,5,+ORDER,8)),"^",1)
"RTN","PSJHL4",72,0)
 S WARD=$P($G(^PS(55,PSJHLDFN,5,+ORDER,0)),"^",23) I +WARD D
"RTN","PSJHL4",73,0)
 .S WARD=$O(^PS(59.6,"B",WARD,0)) Q:+WARD=0
"RTN","PSJHL4",74,0)
 .Q:$$SNDTSTW^PSJHL4A(PRIO,PSJSCHED,WARD)
"RTN","PSJHL4",75,0)
 .S WDPARM=$G(^PS(59.6,+WARD,0)),MGRP=$P(WDPARM,"^",30) Q:+MGRP=0
"RTN","PSJHL4",76,0)
 .S MGRP=$$GET1^DIQ(3.8,MGRP,.01) I MGRP]"" S XMY("G."_MGRP_"@"_$G(^XMB("NETNAME")))="",PSJSOK=0
"RTN","PSJHL4",77,0)
 S:'$$SNDTSTA^PSJHL4A(PRIO,PSJSCHED) MGROUP="G.PSJ STAT NOW ACTIVE ORDER@"_$G(^XMB("NETNAME")),XMY(MGROUP)="",PSJSOK=0
"RTN","PSJHL4",78,0)
 S NTFSTAT="ACTIVE"
"RTN","PSJHL4",79,0)
 N ND2,ND0 S ND0=$G(^PS(55,PSJHLDFN,5,+ORDER,0)),ND2=$G(^PS(55,PSJHLDFN,5,+ORDER,2)),NDP2=$G(^PS(55,PSJHLDFN,5,+ORDER,.2))
"RTN","PSJHL4",80,0)
 S DRIEN=+$P(NDP2,"^"),DO=$P(NDP2,"^",2),RTE=$P(ND0,"^",3),ORDATE=$P(ND0,"^",14)
"RTN","PSJHL4",81,0)
 S SCHED=$P(ND2,"^")
"RTN","PSJHL4",82,0)
 Q
"RTN","PSJHL4",83,0)
IV ; IV
"RTN","PSJHL4",84,0)
 N WARD,WDPARM,MGRP
"RTN","PSJHL4",85,0)
 Q:'$D(^PS(55,PSJHLDFN,"IV",+ORDER,0))
"RTN","PSJHL4",86,0)
 S CLINIC=$P($G(^PS(55,PSJHLDFN,"IV",+ORDER,"DSS")),"^",1)
"RTN","PSJHL4",87,0)
 S WARD=$P($G(^PS(55,PSJHLDFN,"IV",+ORDER,0)),"^",22) I +WARD D
"RTN","PSJHL4",88,0)
 .S WARD=$O(^PS(59.6,"B",WARD,0)) Q:+WARD=0
"RTN","PSJHL4",89,0)
 .Q:$$SNDTSTW^PSJHL4A(PRIO,PSJSCHED,WARD)
"RTN","PSJHL4",90,0)
 .S WDPARM=$G(^PS(59.6,+WARD,0)),MGRP=$P(WDPARM,"^",30) Q:+MGRP=0
"RTN","PSJHL4",91,0)
 .S MGRP=$$GET1^DIQ(3.8,MGRP,.01) I MGRP]"" S XMY("G."_MGRP_"@"_$G(^XMB("NETNAME")))="",PSJSOK=0
"RTN","PSJHL4",92,0)
 S:'$$SNDTSTA^PSJHL4A(PRIO,PSJSCHED) MGROUP="G.PSJ STAT NOW ACTIVE ORDER@"_$G(^XMB("NETNAME")),XMY(MGROUP)="",PSJSOK=0
"RTN","PSJHL4",93,0)
 S NTFSTAT="ACTIVE"
"RTN","PSJHL4",94,0)
 N ND2,NDP2,ND0 S ND0=$G(^PS(55,PSJHLDFN,"IV",+ORDER,0)),ND2=$G(^PS(55,PSJHLDFN,"IV",+ORDER,2))
"RTN","PSJHL4",95,0)
 S NDP2=$G(^PS(55,PSJHLDFN,"IV",+ORDER,.2))
"RTN","PSJHL4",96,0)
 S DRIEN=$P(NDP2,"^"),DO=$P(NDP2,"^",2),RTE=$P(NDP2,"^",3)
"RTN","PSJHL4",97,0)
 S ORDATE=$P(ND2,"^"),SCHED=$P(ND0,"^",9)
"RTN","PSJHL4",98,0)
 Q
"RTN","PSJHL4",99,0)
MSH ; Header
"RTN","PSJHL4",100,0)
 S PSOC=FIELD(8)
"RTN","PSJHL4",101,0)
 Q
"RTN","PSJHL4",102,0)
PID ; ID
"RTN","PSJHL4",103,0)
 S PSJHLDFN=$$UNESC^ORHLESC(FIELD(3))
"RTN","PSJHL4",104,0)
 Q
"RTN","PSJHL4",105,0)
PV1 ; Visit
"RTN","PSJHL4",106,0)
 N A
"RTN","PSJHL4",107,0)
 S CLASS=FIELD(2),LOC=$P(FIELD(3),"^"),APPT="" I $G(FIELD(44))]"" S APPT=+$$HL7TFM^XLFDT(FIELD(44))
"RTN","PSJHL4",108,0)
 I "IO"'[CLASS S PSREASON="Invalid patient class" Q
"RTN","PSJHL4",109,0)
 N QQ K PSJNVA S QQ=II F  S QQ=$O(PSJMSG(QQ)) Q:'QQ  D  Q:$G(PSJNVA)
"RTN","PSJHL4",110,0)
 .S X=$G(PSJMSG(QQ))
"RTN","PSJHL4",111,0)
 .I $P(X,"|")="ZRN" S PSJNVA=1,CLASS="O" D EN^PSOHLNEW(.PSJMSG)
"RTN","PSJHL4",112,0)
 I $G(PSJNVA) K PSJNVA Q
"RTN","PSJHL4",113,0)
 I CLASS="O" N QQ S QQ=II F  S QQ=$O(PSJMSG(QQ)) Q:'QQ  I $P(PSJMSG(QQ),"|")="OBR" D  Q:$P(PSJMSG(QQ),"|")="OBR"
"RTN","PSJHL4",114,0)
 .S RXON=$P(PSJMSG(QQ),"|",4) I RXON]"" S RXON=$P(RXON,"^") I "ABNPUV"[$E(RXON,$L(RXON)) S CLASS="I"
"RTN","PSJHL4",115,0)
 I CLASS="O" N QQ S QQ=II F  S QQ=$O(PSJMSG(QQ)) Q:'QQ  I $P(PSJMSG(QQ),"|")="ORC" D  Q:$P(PSJMSG(QQ),"|")="ORC"
"RTN","PSJHL4",116,0)
 .S RXON=$P(PSJMSG(QQ),"|",4) I RXON]"" S RXON=$P(RXON,"^") I "ABNPUV"[$E(RXON,$L(RXON)) S CLASS="I"
"RTN","PSJHL4",117,0)
 I CLASS="O" N CHK,QQ S QQ=II F  S QQ=$O(PSJMSG(QQ)) Q:'QQ  I $P(PSJMSG(QQ),"|")="RXO" D  Q:$P(PSJMSG(QQ),"|")="RXO"
"RTN","PSJHL4",118,0)
 .S CHK=$P(PSJMSG(QQ),"|",2),CHK=$S($P(CHK,"^",5)="IV":"IV",1:$P(CHK,"^",4))
"RTN","PSJHL4",119,0)
 .I CHK="IV" S CLASS="I" Q
"RTN","PSJHL4",120,0)
 .I 'CHK S PSREASON="Missing or Invalid Orderable Item",CLASS="I" Q
"RTN","PSJHL4",121,0)
 .I $P($G(^PS(50.7,CHK,0)),"^",3)=1 S CLASS="I" Q
"RTN","PSJHL4",122,0)
 D:CLASS="O" EN^PSOHLNEW(.PSJMSG)
"RTN","PSJHL4",123,0)
 Q
"RTN","PSJHL4",124,0)
ORC ; Order
"RTN","PSJHL4",125,0)
 S TMPAT=""
"RTN","PSJHL4",126,0)
 S PSOC=FIELD(1)
"RTN","PSJHL4",127,0)
 S ORDER=FIELD(2)
"RTN","PSJHL4",128,0)
 I $G(PSREASON)]"" D ERROR^PSJHL9 Q
"RTN","PSJHL4",129,0)
 S PSJORDER=$P(FIELD(2),"^"),RXON=$P(FIELD(3),"^"),RXORDER=$S((RXON["N")!(RXON["P"):"^PS(53.1,"_+RXON_",",RXON["V":"^PS(55,"_PSJHLDFN_",""IV"","_+RXON_",",1:"^PS(55,"_PSJHLDFN_",5,"_+RXON_",")
"RTN","PSJHL4",130,0)
 I PSOC="NA" D ASSIGN^PSJHL5 Q
"RTN","PSJHL4",131,0)
 S CLERK=+$G(FIELD(10))
"RTN","PSJHL4",132,0)
 S PROVIDER=+$G(FIELD(12)) D:PSOC="NW"
"RTN","PSJHL4",133,0)
 .I PROVIDER=0 S PSREASON="Invalid Provider" D ERROR^PSJHL9 Q 
"RTN","PSJHL4",134,0)
 .I PROVIDER>0 S PSPR=$G(^VA(200,+PROVIDER,"PS")) I '$D(PSPR)!'(PSPR)!$S($P(PSPR,"^",4)="":0,1:$P(PSPR,"^",4)'>DT) S PSREASON="Invalid Provider" D ERROR^PSJHL9 Q
"RTN","PSJHL4",135,0)
 S UNITS=$P(FIELD(7),"^"),INSTR=$$UNESC^ORHLESC($P(FIELD(7),"^",8))
"RTN","PSJHL4",136,0)
 S:UNITS["&" DOSE=$P(UNITS,"&"),UNIT=$P(UNITS,"&",2),UNITS=$P(UNITS,"&",3) S:UNITS]"" UNITS=$$UNESC^ORHLESC(UNITS) S:$G(DOSE)]"" DOSE=$$UNESC^ORHLESC(DOSE)
"RTN","PSJHL4",137,0)
 S SCHEDULE=$P(FIELD(7),"^",2),PRIORITY=$P(FIELD(7),"^",6) S:SCHEDULE["PRN" SCHTYP="P"
"RTN","PSJHL4",138,0)
 I SCHEDULE["&" S ADMINS=$P(SCHEDULE,"&",2),SCHEDULE=$P(SCHEDULE,"&") S ADMINS=$TR(ADMINS," ","") S ADMINS=$S(ADMINS:ADMINS,1:"")
"RTN","PSJHL4",139,0)
 S SCHEDULE=$$UNESC^ORHLESC(SCHEDULE)
"RTN","PSJHL4",140,0)
 I SCHEDULE["@" S TMPAT=$$TMPAT^PSJHL4A(SCHEDULE)
"RTN","PSJHL4",141,0)
 I $G(TMPAT) S $P(SCHEDULE,"@",2)=TMPAT,ADMINS=TMPAT
"RTN","PSJHL4",142,0)
 S DURATION=$P(FIELD(7),"^",3),REQST=$P(FIELD(7),"^",4) S:REQST'="" REQST=+$E(+$$HL7TFM^XLFDT(REQST),1,12) S REQST=$$DATE2^PSJUTL2(REQST)
"RTN","PSJHL4",143,0)
 S PRIORITY=$S($G(PRIORITY)]"":PRIORITY,1:"R")
"RTN","PSJHL4",144,0)
 I $E(SCHEDULE,1)=" " S:$TR(SCHEDULE," ")="PRN" SCHEDULE="PRN" I '(SCHEDULE="PRN")  S PSREASON="Invalid Schedule" D ERROR^PSJHL9 Q
"RTN","PSJHL4",145,0)
 S SCHTYP=$P(FIELD(7),"^",7)
"RTN","PSJHL4",146,0)
 I $G(SCHTYP)="D" S SCHTYP="C"  ;Makes CPRS Day of Week consistent in behavior with backdoor order of Day of Week
"RTN","PSJHL4",147,0)
 S PRNTON=$P(FIELD(8),"^")
"RTN","PSJHL4",148,0)
 S NURSEACK=$G(FIELD(11))
"RTN","PSJHL4",149,0)
 S LOGIN=$G(FIELD(15)) S:LOGIN'="" LOGIN=+$E(+$$HL7TFM^XLFDT(FIELD(15)),1,12) S LOGIN=$$DATE2^PSJUTL2(LOGIN)
"RTN","PSJHL4",150,0)
 S:$G(NURSEACK)]"" ACKDATE=LOGIN
"RTN","PSJHL4",151,0)
 S ORDCON=$P($G(FIELD(16)),U) I ORDCON="A" S PSJASTP=$G(FIELD(9)) S:$G(PSJASTP)'="" PSJASTP=+$E(+$$HL7TFM^XLFDT(PSJASTP),1,12) S PSJASTP=$$DATE2^PSJUTL2(PSJASTP)
"RTN","PSJHL4",152,0)
 I (PSOC="CA")!(PSOC="DC") D CANCEL^PSJHL6 Q
"RTN","PSJHL4",153,0)
 I PSOC="HD" D HOLD^PSJHL6 Q
"RTN","PSJHL4",154,0)
 I PSOC="RL" D UNHOLD^PSJHL6 Q
"RTN","PSJHL4",155,0)
 I PSOC="ZV" D NURSEACK^PSJHL5 Q
"RTN","PSJHL4",156,0)
 I PSOC="SS" D STATUS^PSJHL5 Q
"RTN","PSJHL4",157,0)
 ;Commented line below since ^PSJHL8 doesn't exist.
"RTN","PSJHL4",158,0)
 ;I PSOC="Z@" N X S X="PSJHL8" X ^%ZOSF("TEST") I  D PURGE^PSJHL8 Q
"RTN","PSJHL4",159,0)
 I PSOC="DE" S QFLG=1 Q
"RTN","PSJHL4",160,0)
 Q
"RTN","PSJHL4",161,0)
OBR ; Flagging from CPRS.
"RTN","PSJHL4",162,0)
 S ORDER=FIELD(2)
"RTN","PSJHL4",163,0)
 S PSJORDER=$P(FIELD(2),"^"),RXON=$P(FIELD(3),"^"),RXORDER=$S((RXON["N")!(RXON["P"):"^PS(53.1,"_+RXON_",",RXON["V":"^PS(55,"_PSJHLDFN_",""IV"","_+RXON_",",1:"^PS(55,"_PSJHLDFN_",5,"_+RXON_",")
"RTN","PSJHL4",164,0)
 S PSJFLAG=FIELD(4)
"RTN","PSJHL4",165,0)
 S FLDATE=$G(FIELD(7)) S:FLDATE'="" FLDATE=+$E(+$$HL7TFM^XLFDT(FIELD(7)),1,12) S FLDATE=$$DATE2^PSJUTL2(FLDATE)
"RTN","PSJHL4",166,0)
 S CLERK=+$G(FIELD(16))
"RTN","PSJHL4",167,0)
 S PSJYN=$G(FIELD(24))
"RTN","PSJHL4",168,0)
 S FLCMNT=$$UNESC^ORHLESC($G(FIELD(13)))
"RTN","PSJHL4",169,0)
 I PSOC="ORU" D FLAG^PSJHL5
"RTN","PSJHL4",170,0)
 Q
"RTN","PSJHL4",171,0)
RXC ; IV 
"RTN","PSJHL4",172,0)
 D RXC^PSJHL4A
"RTN","PSJHL4",173,0)
 Q
"RTN","PSJHL4",174,0)
RXO ; OP
"RTN","PSJHL4",175,0)
 D RXO^PSJHL4A
"RTN","PSJHL4",176,0)
 Q
"RTN","PSJHL4",177,0)
RXR ; Route
"RTN","PSJHL4",178,0)
 S ROUTE=$P(FIELD(1),"^",4)
"RTN","PSJHL4",179,0)
 Q
"RTN","PSJHL4",180,0)
OBX ; Obs.
"RTN","PSJHL4",181,0)
 D OBX^PSJHL4A
"RTN","PSJHL4",182,0)
 Q
"RTN","PSJHL4",183,0)
NTE ; Note
"RTN","PSJHL4",184,0)
 D NTE^PSJHL4A
"RTN","PSJHL4",185,0)
 Q
"RTN","PSJHL4",186,0)
ZRX ; Custom
"RTN","PSJHL4",187,0)
 D ZRX^PSJHL4A
"RTN","PSJHL4",188,0)
 Q
"RTN","PSJHL4",189,0)
ZSC ;Service Connected - Not Used
"RTN","PSJHL4",190,0)
 Q
"RTN","PSJHL4",191,0)
ZRN ;Non-VA Med (Herbal/OTC)
"RTN","PSJHL4",192,0)
 S CLASS="O" D EN^PSOHLNEW(.PSJMSG)
"RTN","PSJHL4",193,0)
 Q
"RTN","PSJHL4",194,0)
DG1 ;Billing Awareness - Not used
"RTN","PSJHL4",195,0)
 Q
"RTN","PSJHL4A")
0^4^B58072219
"RTN","PSJHL4A",1,0)
PSJHL4A ;BIR/RLW-CONTINUE DECODE HL7 /MESSSAGE FROM OE/RR ;16 Mar 99 / 4:55 PM
"RTN","PSJHL4A",2,0)
 ;;5.0; INPATIENT MEDICATIONS ;**105,111,154,170,159,134,197,226**;16 DEC 97;Build 46
"RTN","PSJHL4A",3,0)
 ;
"RTN","PSJHL4A",4,0)
 ; Reference to ^PS(52.6 is supported by DBIA# 1231.
"RTN","PSJHL4A",5,0)
 ; Reference to ^PS(52.7 is supported by DBIA# 2173.
"RTN","PSJHL4A",6,0)
 ; Reference to ^PS(55 is supported by DBIA# 2191.
"RTN","PSJHL4A",7,0)
 ; Reference to ^PS(59.7 supported by DBIA #2181.
"RTN","PSJHL4A",8,0)
 ; Reference to ^ORHLESC is supported by DBIA# 4922.
"RTN","PSJHL4A",9,0)
 ; Reference to ^SC( is supported by DBIA# 10040.
"RTN","PSJHL4A",10,0)
 ; Reference to ^PS(51.1 is supported by DBIA# 2177.
"RTN","PSJHL4A",11,0)
 ; Reference to ^PS(50.7 is supported by DBIA #2180.
"RTN","PSJHL4A",12,0)
 ; Reference to ^PS(51.2 is supported by DBIA 2178.
"RTN","PSJHL4A",13,0)
 ;
"RTN","PSJHL4A",14,0)
RXC ; IV order
"RTN","PSJHL4A",15,0)
 N IVFL
"RTN","PSJHL4A",16,0)
 S APPL=FIELD(1)
"RTN","PSJHL4A",17,0)
 I APPL["B" S SOLCNT=SOLCNT+1,PTR=$P(FIELD(2),"^",4) Q:'PTR  S VOLUME=+FIELD(3)_" ML" D  I '$D(^TMP("PSJNVO",$J,"SOL",SOLCNT,0)) D SOLSRCH
"RTN","PSJHL4A",18,0)
 .S SOLUTION="" F  S SOLUTION=$O(^PS(52.7,"AOI",PTR,SOLUTION)) Q:'SOLUTION  S INACT=$G(^PS(52.7,SOLUTION,"I")) I 'INACT!(INACT>DT) I VOLUME=$P(^PS(52.7,SOLUTION,0),U,3) D
"RTN","PSJHL4A",19,0)
 ..S ^TMP("PSJNVO",$J,"SOL",0)=SOLCNT
"RTN","PSJHL4A",20,0)
 ..S ^TMP("PSJNVO",$J,"SOL",SOLCNT,0)=SOLUTION_"^"_VOLUME,TVOLUME=TVOLUME+(+VOLUME)
"RTN","PSJHL4A",21,0)
 I $G(INFRT)]"" S X=INFRT D ENI^PSJHLU S INFRT=$G(X)
"RTN","PSJHL4A",22,0)
 I APPL="A" S ADCNT=ADCNT+1,PTR=$P(FIELD(2),"^",4) Q:'PTR  S STRENGTH=$G(FIELD(3))_" "_$P($G(FIELD(4)),"^",5) D  I '$D(^TMP("PSJNVO",$J,"AD",ADCNT,0)) S PSREASON="Can't find matching additive" D ERROR^PSJHL9 Q
"RTN","PSJHL4A",23,0)
 .S ADDITIVE="" F  S ADDITIVE=$O(^PS(52.6,"AOI",PTR,ADDITIVE)) Q:'ADDITIVE  S INACT=$G(^PS(52.6,ADDITIVE,"I")),IVFL=$P($G(^(0)),"^",13) I 'INACT!(INACT>DT),IVFL'=0 Q:$G(^PS(52.6,ADDITIVE,0))']""  D  Q:ADDITIVE
"RTN","PSJHL4A",24,0)
 ..I $G(PSITEM)="" S PSITEM=PTR
"RTN","PSJHL4A",25,0)
 ..S ^TMP("PSJNVO",$J,"AD",0)=ADCNT
"RTN","PSJHL4A",26,0)
 ..S ^TMP("PSJNVO",$J,"AD",ADCNT,0)=ADDITIVE_"^"_STRENGTH_"^"_$S('+$P($G(FIELD(5)),U):"",1:$P($G(FIELD(5)),U))
"RTN","PSJHL4A",27,0)
 Q
"RTN","PSJHL4A",28,0)
 ;
"RTN","PSJHL4A",29,0)
RXO ;
"RTN","PSJHL4A",30,0)
 I $O(PSJMSG(II,0)) D
"RTN","PSJHL4A",31,0)
 .K SEGMENT
"RTN","PSJHL4A",32,0)
 .N KK,JJ,XX
"RTN","PSJHL4A",33,0)
 .S SEGMENT(1)=$G(PSJMSG(II))
"RTN","PSJHL4A",34,0)
 .S KK=1,JJ="" F  S JJ=$O(PSJMSG(II,JJ)) Q:'JJ  S KK=KK+1,SEGMENT(KK)=$G(PSJMSG(II,JJ))
"RTN","PSJHL4A",35,0)
 .S KK=1,JJ=0
"RTN","PSJHL4A",36,0)
 .F  Q:'$D(SEGMENT(KK))  D
"RTN","PSJHL4A",37,0)
 ..I SEGMENT(KK)["|" S FIELD(JJ)=$P(SEGMENT(KK),"|"),SEGMENT(KK)=$E(SEGMENT(KK),$L(FIELD(JJ))+2,$L(SEGMENT(KK))),JJ=JJ+1 Q
"RTN","PSJHL4A",38,0)
 ..I SEGMENT(KK)'["|" S FIELD(JJ)=SEGMENT(KK),KK=KK+1 Q:'$D(SEGMENT(KK))  D
"RTN","PSJHL4A",39,0)
 ...S XX=$P(SEGMENT(KK),"|"),SEGMENT(KK)=$E(SEGMENT(KK),$L(X)+2,$L(SEGMENT(KK))),FIELD(JJ)=FIELD(JJ)_XX,JJ=JJ+1
"RTN","PSJHL4A",40,0)
 S APPL="",PSITEM=$S($P(FIELD(1),"^",5)="IV":"",1:$P(FIELD(1),"^",4))
"RTN","PSJHL4A",41,0)
 S:$P(FIELD(1),"^",6)="ORD" PSITEM=""
"RTN","PSJHL4A",42,0)
 S:$P(FIELD(1),"^",5)="IV" IVTYP="A",SCHTYP="C",INFRT=$G(FIELD(2))
"RTN","PSJHL4A",43,0)
 S DISPENSE=$P($G(FIELD(10)),"^",4)
"RTN","PSJHL4A",44,0)
 S IVLIMIT=$P($G(PSJMSG(II)),"^",3)
"RTN","PSJHL4A",45,0)
 S:IVLIMIT["doses" IVLIMIT=$TR(IVLIMIT,"doses","a")
"RTN","PSJHL4A",46,0)
 Q
"RTN","PSJHL4A",47,0)
 ;
"RTN","PSJHL4A",48,0)
OBX ;
"RTN","PSJHL4A",49,0)
 S OBXFL=1,OCNARR=FIELD(5),OCPROV=CLERK,OCCNT=OCCNT+1
"RTN","PSJHL4A",50,0)
 S ^TMP("PSJNVO",$J,10,0)=OCCNT
"RTN","PSJHL4A",51,0)
 S ^TMP("PSJNVO",$J,10,OCCNT,0)=OCNARR
"RTN","PSJHL4A",52,0)
 S ^TMP("PSJNVO",$J,10,OCCNT,1)=$$UNESC^ORHLESC($P($G(^VA(200,+OCPROV,0)),"^"))
"RTN","PSJHL4A",53,0)
 Q
"RTN","PSJHL4A",54,0)
 ;
"RTN","PSJHL4A",55,0)
NTE ;
"RTN","PSJHL4A",56,0)
 S TEXT=$S((FIELD(1)=6)&('OBXFL):"PROCOM",(FIELD(1)=7)&('OBXFL):"ADMINSTR",1:"OCRSN")
"RTN","PSJHL4A",57,0)
 S @TEXT@(1)=$$UNESC^ORHLESC($G(FIELD(3)))
"RTN","PSJHL4A",58,0)
 S K=1,J="" F  S J=$O(PSJMSG(II,J)) Q:'J  S K=K+1,@TEXT@(K)=$G(PSJMSG(II,J))
"RTN","PSJHL4A",59,0)
 D:$D(OCRSN)
"RTN","PSJHL4A",60,0)
 .S QQ=0 F  S QQ=$O(OCRSN(QQ)) Q:'QQ  S ^TMP("PSJNVO",$J,10,OCCNT,2,QQ,0)=OCRSN(QQ)
"RTN","PSJHL4A",61,0)
 S OBXFL=0
"RTN","PSJHL4A",62,0)
 Q
"RTN","PSJHL4A",63,0)
 ;
"RTN","PSJHL4A",64,0)
ZRX ;
"RTN","PSJHL4A",65,0)
 N ND,ND2,CHK,FOLOR,STDT
"RTN","PSJHL4A",66,0)
 S PREON=$G(FIELD(1)),ROC=$G(FIELD(3)),IVCAT=$G(FIELD(6))
"RTN","PSJHL4A",67,0)
 S IVCAT=$S(",I,C,"[(","_IVCAT_","):IVCAT,1:"") I 'PREON S IVTYP=$S($G(PSGS0XT):"P",1:"A") S IVTYP=$S(IVCAT="I":"P",IVCAT="C":"A",1:$G(IVTYP))
"RTN","PSJHL4A",68,0)
 S ND=$S((PREON["N")!(PREON["P"):$G(^PS(53.1,+PREON,0)),PREON["V":$G(^PS(55,PSJHLDFN,"IV",+PREON,0)),1:$G(^PS(55,PSJHLDFN,5,+PREON,0)))
"RTN","PSJHL4A",69,0)
 S ND2=$S((PREON["N")!(PREON["P"):$G(^PS(53.1,+PREON,2)),PREON["V":$G(^PS(55,PSJHLDFN,"IV",+PREON,2)),1:$G(^PS(55,PSJHLDFN,5,+PREON,2)))
"RTN","PSJHL4A",70,0)
 I 'ND I ROC'="N" S PSREASON="Invalid Pharmacy order number" D ERROR^PSJHL9 Q
"RTN","PSJHL4A",71,0)
 I ND I ROC="R" S FOLOR=$S(PREON["V":$P(ND2,U,6),1:$P(ND,U,26)) I FOLOR S PSREASON="Duplicate Renewal Request" D ERROR^PSJHL9 Q
"RTN","PSJHL4A",72,0)
 I ND I ROC="R" S CHK=$S(PREON["V":$P(ND,U,17),1:$P(ND,U,9)) I "AE"'[CHK S PSREASON="Pharmacy orders with a status of "_CHK_" may not be renewed" D ERROR^PSJHL9 Q
"RTN","PSJHL4A",73,0)
 I $G(CHK)="E" I PREON'["V" D NOW^%DTC S X1=+$E(%,1,12),X2=-4 D C^%DTC S STDT=$S(PREON["V":$P(ND,U,3),1:$P(ND2,U,4)) I STDT'>X S PSREASON="Pharmacy orders expired longer than 4 days may not be renewed" D ERROR^PSJHL9 Q
"RTN","PSJHL4A",74,0)
 I ND I ROC="E" S FOLOR=$S(PREON["V":$P(ND2,U,6),1:$P(ND,U,26)) I FOLOR S PSREASON="Pharmacy orders may only be edited ONCE" D ERROR^PSJHL9 Q
"RTN","PSJHL4A",75,0)
 I ND I ROC="E" S CHK=$S(PREON["V":$P(ND,U,17),1:$P(ND,U,9)) I "DEHO"[CHK N CHKRTN S CHKRTN=CHK_"^PSJHL6" D @CHKRTN S PSREASON=PSREASON_" orders may not be edited" D ERROR^PSJHL9 Q
"RTN","PSJHL4A",76,0)
 D:ROC'="R" VALID^PSJHL9 Q:QFLG
"RTN","PSJHL4A",77,0)
 I $G(PSITEM)="",$D(^TMP("PSJNVO",$J,"SOL",1,0)) S PSITEM=$P($G(^PS(52.7,+^TMP("PSJNVO",$J,"SOL",1,0),0)),"^",11)
"RTN","PSJHL4A",78,0)
 I PRIORITY="ZD" D VALID^PSJHL10 S QFLG=1 Q
"RTN","PSJHL4A",79,0)
 I (PREON]"")&(ROC="E") D EDITCK^PSJHL5 Q:QFLG
"RTN","PSJHL4A",80,0)
 D NVO^PSJHL9
"RTN","PSJHL4A",81,0)
 I (PREON]"")&(ROC="R") D RENEW^PSJHL7 Q
"RTN","PSJHL4A",82,0)
 I (PREON]"")&(ROC="E") D EDIT^PSJHL5
"RTN","PSJHL4A",83,0)
 Q
"RTN","PSJHL4A",84,0)
 ;
"RTN","PSJHL4A",85,0)
SOLSRCH ;Find solution
"RTN","PSJHL4A",86,0)
 N SSSS,SEG,ON,ROC,SOL,SOL2
"RTN","PSJHL4A",87,0)
 F SSSS=II:0 S SSSS=$O(PSJMSG(SSSS)) Q:'SSSS  I $P(PSJMSG(SSSS),"|")="ZRX" D  Q
"RTN","PSJHL4A",88,0)
 .S SEG=$G(PSJMSG(SSSS)),ON=$P(SEG,"|",2),ROC=$P(SEG,"|",4)
"RTN","PSJHL4A",89,0)
 I $G(ROC)'="N" F SOL=0:0 S SOL=$O(^PS(55,PSJHLDFN,"IV",+ON,"SOL",SOL)) Q:'SOL  S SOL2=$G(^PS(55,PSJHLDFN,"IV",+ON,"SOL",SOL,0)) I $D(^PS(52.7,"AOI",PTR,+SOL2))&($P(SOL2,U,2)=VOLUME) S SOLUTION=+SOL2 D SET Q
"RTN","PSJHL4A",90,0)
 I 'SOLUTION S SOLUTION=$O(^PS(52.7,"AOI",PTR,SOLUTION)) D SET
"RTN","PSJHL4A",91,0)
 Q
"RTN","PSJHL4A",92,0)
SET ;Set solution tmp nodes
"RTN","PSJHL4A",93,0)
 Q:'+SOLUTION
"RTN","PSJHL4A",94,0)
 S ^TMP("PSJNVO",$J,"SOL",0)=SOLCNT
"RTN","PSJHL4A",95,0)
 S ^TMP("PSJNVO",$J,"SOL",SOLCNT,0)=SOLUTION_"^"_VOLUME,TVOLUME=TVOLUME+(+VOLUME)
"RTN","PSJHL4A",96,0)
 Q
"RTN","PSJHL4A",97,0)
 ;
"RTN","PSJHL4A",98,0)
SNDTSTW(PRIO,PSJSCHED,WARD) ; Test to determine if mail message should be sent.
"RTN","PSJHL4A",99,0)
 N SNPRIO,SNSCHD,SNOPT
"RTN","PSJHL4A",100,0)
 S SNPRIO=$S(PRIO="S":"S",PRIO="A":"A",1:"R")
"RTN","PSJHL4A",101,0)
 S SNSCHD=$S(PSJSCHED="STAT":"S",PSJSCHED="NOW":"N",1:"R")
"RTN","PSJHL4A",102,0)
 S SNOPT=$P($G(^PS(59.6,WARD,0)),"^",32)
"RTN","PSJHL4A",103,0)
 S:SNOPT="" SNOPT=$P($G(^PS(59.7,1,27)),"^",1)
"RTN","PSJHL4A",104,0)
 Q:SNOPT="" 0
"RTN","PSJHL4A",105,0)
 Q:SNOPT[SNPRIO 0
"RTN","PSJHL4A",106,0)
 Q:SNOPT[SNSCHD 0
"RTN","PSJHL4A",107,0)
 Q 1
"RTN","PSJHL4A",108,0)
 ;
"RTN","PSJHL4A",109,0)
SNDTSTP(PRIO,PSJSCHED) ; Test to determine if mail message should be sent.
"RTN","PSJHL4A",110,0)
 N SNPRIO,SNSCHD,SNOPT
"RTN","PSJHL4A",111,0)
 S SNPRIO=$S(PRIO="S":"S",PRIO="A":"A",1:"R")
"RTN","PSJHL4A",112,0)
 S SNSCHD=$S(PSJSCHED="STAT":"S",PSJSCHED="NOW":"N",1:"R")
"RTN","PSJHL4A",113,0)
 S SNOPT=$P($G(^PS(59.7,1,27)),"^",1)
"RTN","PSJHL4A",114,0)
 Q:SNOPT="" 1
"RTN","PSJHL4A",115,0)
 Q:SNOPT[SNPRIO 0
"RTN","PSJHL4A",116,0)
 Q:SNOPT[SNSCHD 0
"RTN","PSJHL4A",117,0)
 Q 1
"RTN","PSJHL4A",118,0)
 ;
"RTN","PSJHL4A",119,0)
SNDTSTA(PRIO,PSJSCHED) ; Test to determine if mail message should be sent.
"RTN","PSJHL4A",120,0)
 N SNPRIO,SNSCHD,SNOPT
"RTN","PSJHL4A",121,0)
 S SNPRIO=$S(PRIO="S":"S",PRIO="A":"A",1:"R")
"RTN","PSJHL4A",122,0)
 S SNSCHD=$S(PSJSCHED="STAT":"S",PSJSCHED="NOW":"N",1:"R")
"RTN","PSJHL4A",123,0)
 S SNOPT=$P($G(^PS(59.7,1,27)),"^",2)
"RTN","PSJHL4A",124,0)
 S:SNOPT="" SNOPT=$P($G(^PS(59.7,1,27)),"^",1)
"RTN","PSJHL4A",125,0)
 Q:SNOPT="" 1
"RTN","PSJHL4A",126,0)
 Q:SNOPT[SNPRIO 0
"RTN","PSJHL4A",127,0)
 Q:SNOPT[SNSCHD 0
"RTN","PSJHL4A",128,0)
 Q 1
"RTN","PSJHL4A",129,0)
 ;
"RTN","PSJHL4A",130,0)
TMPAT(SCHEDULE) ; Extract admin times from schedule in format schedule@schedule
"RTN","PSJHL4A",131,0)
 S TMPAT="" I SCHEDULE'["@" Q TMPAT
"RTN","PSJHL4A",132,0)
 S TMPAT=$P(SCHEDULE,"@",2) I TMPAT]"" D
"RTN","PSJHL4A",133,0)
 .N WARD S WARD=$G(^DPT(PSJHLDFN,.1)) I WARD]"" D
"RTN","PSJHL4A",134,0)
 ..N DIC,X,Y S DIC="^DIC(42,",DIC(0)="BOXZ",X=WARD D ^DIC S WARD=+Y Q:WARD=0
"RTN","PSJHL4A",135,0)
 ..S WARD=$O(^PS(59.6,"B",WARD,0))
"RTN","PSJHL4A",136,0)
 .I '$D(^PS(51.1,"AC","PSJ",TMPAT)) S TMPAT="" Q
"RTN","PSJHL4A",137,0)
 .N II I '$$DOW^PSIVUTL($P(SCHEDULE,"@")) S TMPAT="" Q
"RTN","PSJHL4A",138,0)
 .N TMPIEN S TMPIEN=$O(^PS(51.1,"AC","PSJ",TMPAT,0)),TMPAT=$P($G(^PS(51.1,+TMPIEN,0)),"^",2) D
"RTN","PSJHL4A",139,0)
 ..I $P($G(^PS(51.1,+TMPIEN,1,+$G(WARD),0)),"^",2) S TMPAT=$P($G(^(0)),"^",2)
"RTN","PSJHL4A",140,0)
 Q TMPAT
"RTN","PSJHL4A",141,0)
 ;
"RTN","PSJHL4A",142,0)
XMD ; Mailman call for NOTIFY^PSJHL4
"RTN","PSJHL4A",143,0)
 ; Input - PNAME  = Patient Name
"RTN","PSJHL4A",144,0)
 ;         RTE    = Route
"RTN","PSJHL4A",145,0)
 ;         DRUG   = Drug Name
"RTN","PSJHL4A",146,0)
 ;         WARD   = Ward Name
"RTN","PSJHL4A",147,0)
 ;         CLINIC = Clinic Location Name
"RTN","PSJHL4A",148,0)
 ;         PRIO   = CPRS Order Priority
"RTN","PSJHL4A",149,0)
 S PNAME=$P($G(^DPT(+PSJHLDFN,0)),"^") S:$G(RTE) RTE=$P(^PS(51.2,+RTE,0),"^",3)
"RTN","PSJHL4A",150,0)
 S DRUG=$S(DRIEN:$P($G(^PS(50.7,+DRIEN,0)),"^"),1:""),WARD=$G(^DPT(PSJHLDFN,.1))
"RTN","PSJHL4A",151,0)
 I $G(CLINIC)'="" S CLINIC=$P($G(^SC(CLINIC,0)),"^",2) I CLINIC'="" S WARD=CLINIC
"RTN","PSJHL4A",152,0)
 S XMDUZ="MEDICATIONS,INPATIENT",XMSUB=$G(WARD)
"RTN","PSJHL4A",153,0)
 S XMSUB=XMSUB_"-"_NTFSTAT_" "_$S($G(PRIO)="A":"ASAP",$G(PRIO)="S":"STAT",$G(NTFYREAS)=2:"NOW",$G(NTFYREAS)=3:"STAT",1:"")_"-"
"RTN","PSJHL4A",154,0)
 S XMSUB=XMSUB_$E(PNAME,1,65-$L(XMSUB))
"RTN","PSJHL4A",155,0)
 S XMTEXT="PSG("
"RTN","PSJHL4A",156,0)
 S PSG(1,0)="Inpatient Medications has received the following "_$S($G(PRIO)="A":"ASAP",$G(PRIO)="S":"STAT",$G(NTFYREAS)=2:"NOW",1:"")_" order ("_NTFSTAT_")"
"RTN","PSJHL4A",157,0)
 S PSG(2,0)=""
"RTN","PSJHL4A",158,0)
 S PSG(3,0)="          Patient:     "_PNAME I $G(LASTFOUR) S PSG(3,0)=PSG(3,0)_"  ("_LASTFOUR_")"
"RTN","PSJHL4A",159,0)
 S PSG(4,0)="Order Information:     "_DRUG_" "_DO_" "_RTE_" "_$G(PSJSCHED)
"RTN","PSJHL4A",160,0)
 S PSG(5,0)="       Order Date:     "_$$ENDTC^PSGMI(ORDATE)
"RTN","PSJHL4A",161,0)
 D ^XMD
"RTN","PSJHL4A",162,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
PXRM*2.0*16
"BLD",7630,0)
PXRM*2.0*16^CLINICAL REMINDERS^0^3110124^y
"BLD",7630,4,0)
^9.64PA^801^2
"BLD",7630,4,801,0)
801
"BLD",7630,4,801,222)
y^n^f^^^^n
"BLD",7630,4,811.9,0)
811.9
"BLD",7630,4,811.9,222)
y^n^f^^^^n
"BLD",7630,4,"B",801,801)

"BLD",7630,4,"B",811.9,811.9)

"BLD",7630,6.3)
119
"BLD",7630,"ABPKG")
n
"BLD",7630,"INI")
PRE^PXRMP16I
"BLD",7630,"INIT")

"BLD",7630,"KRN",0)
^9.67PA^779.2^20
"BLD",7630,"KRN",.4,0)
.4
"BLD",7630,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",7630,"KRN",.4,"NM",1,0)
PXRM ORDERABLE ITEM GROUP LIST    FILE #801^801^0
"BLD",7630,"KRN",.4,"NM","B","PXRM ORDERABLE ITEM GROUP LIST    FILE #801",1)

"BLD",7630,"KRN",.401,0)
.401
"BLD",7630,"KRN",.402,0)
.402
"BLD",7630,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",7630,"KRN",.402,"NM",1,0)
PXRM EDIT ORDER CHECK    FILE #801^801^0
"BLD",7630,"KRN",.402,"NM","B","PXRM EDIT ORDER CHECK    FILE #801",1)

"BLD",7630,"KRN",.403,0)
.403
"BLD",7630,"KRN",.403,"NM",0)
^9.68A^^
"BLD",7630,"KRN",.5,0)
.5
"BLD",7630,"KRN",.84,0)
.84
"BLD",7630,"KRN",3.6,0)
3.6
"BLD",7630,"KRN",3.8,0)
3.8
"BLD",7630,"KRN",9.2,0)
9.2
"BLD",7630,"KRN",9.8,0)
9.8
"BLD",7630,"KRN",9.8,"NM",0)
^9.68A^25^21
"BLD",7630,"KRN",9.8,"NM",1,0)
PXRMORCH^^0^B212664484
"BLD",7630,"KRN",9.8,"NM",2,0)
PXRMORXR^^0^B75991552
"BLD",7630,"KRN",9.8,"NM",3,0)
PXRM^^0^B34249926
"BLD",7630,"KRN",9.8,"NM",4,0)
PXRMDEV^^0^B28974848
"BLD",7630,"KRN",9.8,"NM",8,0)
PXRMINTR^^0^B37092667
"BLD",7630,"KRN",9.8,"NM",9,0)
PXRMEXPS^^0^B186431616
"BLD",7630,"KRN",9.8,"NM",10,0)
PXRMEXPD^^0^B192354344
"BLD",7630,"KRN",9.8,"NM",12,0)
PXRMRPCA^^0^B64569743
"BLD",7630,"KRN",9.8,"NM",13,0)
PXRMRPCD^^0^B11060075
"BLD",7630,"KRN",9.8,"NM",14,0)
PXRMEXIC^^0^B65705401
"BLD",7630,"KRN",9.8,"NM",15,0)
PXRMEXU5^^0^B39432783
"BLD",7630,"KRN",9.8,"NM",16,0)
PXRMORHL^^0^B9594664
"BLD",7630,"KRN",9.8,"NM",17,0)
PXRMREV^^0^B12256539
"BLD",7630,"KRN",9.8,"NM",18,0)
PXRMDEDT^^0^B86324286
"BLD",7630,"KRN",9.8,"NM",19,0)
PXRMDLG4^^0^B92764011
"BLD",7630,"KRN",9.8,"NM",20,0)
PXRMDLLB^^0^B39413514
"BLD",7630,"KRN",9.8,"NM",21,0)
PXRMFRPT^^0^B103832616
"BLD",7630,"KRN",9.8,"NM",22,0)
PXRMPSN^^0^B28129650
"BLD",7630,"KRN",9.8,"NM",23,0)
PXRMEXU1^^0^B36300309
"BLD",7630,"KRN",9.8,"NM",24,0)
PXRMFNFT^^0^B58241703
"BLD",7630,"KRN",9.8,"NM",25,0)
PXRMP16I^^0^B422881
"BLD",7630,"KRN",9.8,"NM","B","PXRM",3)

"BLD",7630,"KRN",9.8,"NM","B","PXRMDEDT",18)

"BLD",7630,"KRN",9.8,"NM","B","PXRMDEV",4)

"BLD",7630,"KRN",9.8,"NM","B","PXRMDLG4",19)

"BLD",7630,"KRN",9.8,"NM","B","PXRMDLLB",20)

"BLD",7630,"KRN",9.8,"NM","B","PXRMEXIC",14)

"BLD",7630,"KRN",9.8,"NM","B","PXRMEXPD",10)

"BLD",7630,"KRN",9.8,"NM","B","PXRMEXPS",9)

"BLD",7630,"KRN",9.8,"NM","B","PXRMEXU1",23)

"BLD",7630,"KRN",9.8,"NM","B","PXRMEXU5",15)

"BLD",7630,"KRN",9.8,"NM","B","PXRMFNFT",24)

"BLD",7630,"KRN",9.8,"NM","B","PXRMFRPT",21)

"BLD",7630,"KRN",9.8,"NM","B","PXRMINTR",8)

"BLD",7630,"KRN",9.8,"NM","B","PXRMORCH",1)

"BLD",7630,"KRN",9.8,"NM","B","PXRMORHL",16)

"BLD",7630,"KRN",9.8,"NM","B","PXRMORXR",2)

"BLD",7630,"KRN",9.8,"NM","B","PXRMP16I",25)

"BLD",7630,"KRN",9.8,"NM","B","PXRMPSN",22)

"BLD",7630,"KRN",9.8,"NM","B","PXRMREV",17)

"BLD",7630,"KRN",9.8,"NM","B","PXRMRPCA",12)

"BLD",7630,"KRN",9.8,"NM","B","PXRMRPCD",13)

"BLD",7630,"KRN",19,0)
19
"BLD",7630,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",7630,"KRN",19,"NM",1,0)
PXRM ORDERABLE ITEM GROUP EDIT^^0
"BLD",7630,"KRN",19,"NM",2,0)
PXRM ORDERABLE ITEM GROUP INQ^^0
"BLD",7630,"KRN",19,"NM",3,0)
PXRM ORDERABLE ITEM TESTER^^0
"BLD",7630,"KRN",19,"NM",4,0)
PXRM ORDERABLE ITEM GROUP MENU^^0
"BLD",7630,"KRN",19,"NM",5,0)
PXRM MANAGERS MENU^^2
"BLD",7630,"KRN",19,"NM","B","PXRM MANAGERS MENU",5)

"BLD",7630,"KRN",19,"NM","B","PXRM ORDERABLE ITEM GROUP EDIT",1)

"BLD",7630,"KRN",19,"NM","B","PXRM ORDERABLE ITEM GROUP INQ",2)

"BLD",7630,"KRN",19,"NM","B","PXRM ORDERABLE ITEM GROUP MENU",4)

"BLD",7630,"KRN",19,"NM","B","PXRM ORDERABLE ITEM TESTER",3)

"BLD",7630,"KRN",19.1,0)
19.1
"BLD",7630,"KRN",101,0)
101
"BLD",7630,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",7630,"KRN",101,"NM",1,0)
PXRM ORDER CHECK UPDATES^^0
"BLD",7630,"KRN",101,"NM",2,0)
OR ITEM RECEIVE^^2
"BLD",7630,"KRN",101,"NM","B","OR ITEM RECEIVE",2)

"BLD",7630,"KRN",101,"NM","B","PXRM ORDER CHECK UPDATES",1)

"BLD",7630,"KRN",409.61,0)
409.61
"BLD",7630,"KRN",409.61,"NM",0)
^9.68A^^0
"BLD",7630,"KRN",771,0)
771
"BLD",7630,"KRN",779.2,0)
779.2
"BLD",7630,"KRN",870,0)
870
"BLD",7630,"KRN",8989.51,0)
8989.51
"BLD",7630,"KRN",8989.52,0)
8989.52
"BLD",7630,"KRN",8994,0)
8994
"BLD",7630,"KRN","B",.4,.4)

"BLD",7630,"KRN","B",.401,.401)

"BLD",7630,"KRN","B",.402,.402)

"BLD",7630,"KRN","B",.403,.403)

"BLD",7630,"KRN","B",.5,.5)

"BLD",7630,"KRN","B",.84,.84)

"BLD",7630,"KRN","B",3.6,3.6)

"BLD",7630,"KRN","B",3.8,3.8)

"BLD",7630,"KRN","B",9.2,9.2)

"BLD",7630,"KRN","B",9.8,9.8)

"BLD",7630,"KRN","B",19,19)

"BLD",7630,"KRN","B",19.1,19.1)

"BLD",7630,"KRN","B",101,101)

"BLD",7630,"KRN","B",409.61,409.61)

"BLD",7630,"KRN","B",771,771)

"BLD",7630,"KRN","B",779.2,779.2)

"BLD",7630,"KRN","B",870,870)

"BLD",7630,"KRN","B",8989.51,8989.51)

"BLD",7630,"KRN","B",8989.52,8989.52)

"BLD",7630,"KRN","B",8994,8994)

"BLD",7630,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",7630,"QUES",0)
^9.62^^
"BLD",7630,"REQB",0)
^9.611^1^1
"BLD",7630,"REQB",1,0)
PXRM*2.0*17^2
"BLD",7630,"REQB","B","PXRM*2.0*17",1)

"FIA",801)
REMINDER ORDERABLE ITEM GROUP
"FIA",801,0)
^PXD(801,
"FIA",801,0,0)
801
"FIA",801,0,1)
y^n^f^^^^n
"FIA",801,0,10)

"FIA",801,0,11)

"FIA",801,0,"RLRO")

"FIA",801,0,"VR")
2.0^PXRM
"FIA",801,801)
0
"FIA",801,801.01)
0
"FIA",801,801.015)
0
"FIA",801,801.02)
0
"FIA",801,801.03)
0
"FIA",801,801.04)
0
"FIA",801,801.05)
0
"FIA",801,801.06)
0
"FIA",801,801.32)
0
"FIA",811.9)
REMINDER DEFINITION
"FIA",811.9,0)
^PXD(811.9,
"FIA",811.9,0,0)
811.9I
"FIA",811.9,0,1)
y^n^f^^^^n
"FIA",811.9,0,10)

"FIA",811.9,0,11)

"FIA",811.9,0,"RLRO")

"FIA",811.9,0,"VR")
2.0^PXRM
"FIA",811.9,811.9)
0
"FIA",811.9,811.9001)
0
"FIA",811.9,811.90012)
0
"FIA",811.9,811.9002)
0
"FIA",811.9,811.90021)
0
"FIA",811.9,811.9003)
0
"FIA",811.9,811.9004)
0
"FIA",811.9,811.902)
0
"FIA",811.9,811.90221)
0
"FIA",811.9,811.9024)
0
"FIA",811.9,811.9025)
0
"FIA",811.9,811.92)
0
"FIA",811.9,811.925)
0
"FIA",811.9,811.9251)
0
"FIA",811.9,811.9252)
0
"FIA",811.9,811.9255)
0
"FIA",811.9,811.9256)
0
"FIA",811.9,811.93)
0
"FIA",811.9,811.948)
0
"FIA",811.9,811.961)
0
"FIA",811.9,811.965)
0
"FIA",811.9,811.966)
0
"FIA",811.9,811.97)
0
"FIA",811.9,811.971)
0
"FIA",811.9,811.973)
0
"FIA",811.9,811.974)
0
"FIA",811.9,811.975)
0
"FIA",811.9,811.976)
0
"INI")
PRE^PXRMP16I
"IX",801,801,"ADC",0)
801^ADC^DRUG CLASS^MU^^R^IR^W^801.015^^^^^A
"IX",801,801,"ADC",1)
D IMPDRCL^PXRMORXR(.DA,X)
"IX",801,801,"ADC",1.4)

"IX",801,801,"ADC",2)
D DELDRCL^PXRMORXR(.DA,X)
"IX",801,801,"ADC",2.4)
S X=$S($D(^PXD(801,DA(1),2)):1,1:0)
"IX",801,801,"ADC",2.5)

"IX",801,801,"ADC",11.1,0)
^.114IA^1^1
"IX",801,801,"ADC",11.1,1,0)
1^F^801.015^.01^^^F
"IX",801,801,"AOI",0)
801^AOI^ORDERABLE ITEM^MU^^F^IR^W^801.02^^^^^A
"IX",801,801,"AOI",.1,0)
^^4^4^3090708^
"IX",801,801,"AOI",.1,1,0)
This cross-reference is used to update the AOIR cross-reference whenever
"IX",801,801,"AOI",.1,2,0)
an orderable item is added or deleted from an existing Orderable Item Group
"IX",801,801,"AOI",.1,3,0)
that contains entries in the Rule List multiple.
"IX",801,801,"AOI",.1,4,0)

"IX",801,801,"AOI",1)
D OISAOI^PXRMORXR(.DA,X)
"IX",801,801,"AOI",1.4)
S X=$S($D(^PXD(801,DA(1),3)):1,1:0)
"IX",801,801,"AOI",2)
D OIKAOI^PXRMORXR(.DA,X)
"IX",801,801,"AOI",2.4)
S X=$S($D(^PXD(801,DA(1),3)):1,1:0)
"IX",801,801,"AOI",11.1,0)
^.114IA^1^1
"IX",801,801,"AOI",11.1,1,0)
1^F^801.02^.01^^^F
"IX",801,801,"AOIR",0)
801^AOIR^This xref sort the rules by the different fields.^MU^^F^IR^W^801.04^^^^^A
"IX",801,801,"AOIR",.1,0)
^^3^3^3091214^
"IX",801,801,"AOIR",.1,1,0)
This cross-reference is used to create a sort cross-reference by Orderable
"IX",801,801,"AOIR",.1,2,0)
Item, testing flag, Orderable Item Group IEN, and Rule IEN. If a rule is
"IX",801,801,"AOIR",.1,3,0)
inactive, that entry will not exist in the cross-reference.
"IX",801,801,"AOIR",1)
D RULESAOI^PXRMORXR(.DA,.X)
"IX",801,801,"AOIR",1.4)
S X=0 I +X(2)=1,$G(X(3))'="" S X=1
"IX",801,801,"AOIR",2)
D RULEKAOI^PXRMORXR(.DA,.X)
"IX",801,801,"AOIR",2.4)
S X=0 I X(1)'="",X(2)'="",X(3)'="" S X=1
"IX",801,801,"AOIR",11.1,0)
^.114IA^3^3
"IX",801,801,"AOIR",11.1,1,0)
1^F^801.04^.01^^^F
"IX",801,801,"AOIR",11.1,2,0)
2^F^801.04^2^^^F
"IX",801,801,"AOIR",11.1,3,0)
3^F^801.04^3^^^F
"IX",801,801,"B",0)
801^B^B cross-reference^R^^F^IR^I^801^^^^^LS
"IX",801,801,"B",.1,0)
^^1^1^3100416^
"IX",801,801,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross-reference.
"IX",801,801,"B",1)
S ^PXD(801,"B",$E(X,1,64),DA)=""
"IX",801,801,"B",2)
K ^PXD(801,"B",$E(X,1,64),DA)
"IX",801,801,"B",2.5)
K ^PXD(801,"B")
"IX",801,801,"B",11.1,0)
^.114IA^1^1
"IX",801,801,"B",11.1,1,0)
1^F^801^.01^64^1^F
"IX",801,801,"B",11.1,1,3)

"IX",801,801,"D",0)
801^D^This is a cross-reference by Drug-Class^R^^F^IR^W^801.015^^^^^LS
"IX",801,801,"D",1)
S ^PXD(801,"D",X,DA(1),DA)=""
"IX",801,801,"D",2)
K ^PXD(801,"D",X,DA(1),DA)
"IX",801,801,"D",2.5)
K ^PXD(801,"D")
"IX",801,801,"D",11.1,0)
^.114IA^1^1
"IX",801,801,"D",11.1,1,0)
1^F^801.015^.01^^1^F
"IX",801,801,"O",0)
801^O^This is a cross reference by orderable item^R^^F^IR^W^801.02^^^^^LS
"IX",801,801,"O",1)
S ^PXD(801,"O",X,DA(1),DA)=""
"IX",801,801,"O",2)
K ^PXD(801,"O",X,DA(1),DA)
"IX",801,801,"O",2.5)
K ^PXD(801,"O")
"IX",801,801,"O",11.1,0)
^.114IA^1^1
"IX",801,801,"O",11.1,1,0)
1^F^801.02^.01^^1^F
"IX",801,801,"O",11.1,1,3)

"IX",811.9,811.9,"ACD",0)
811.9^ACD^Expand the Custom Date Due Field^MU^^F^IR^I^811.9^^^^^A
"IX",811.9,811.9,"ACD",1)
D CDBUILD^PXRMCDUE(X,.DA)
"IX",811.9,811.9,"ACD",2)
D CDKILL^PXRMCDUE(X,.DA)
"IX",811.9,811.9,"ACD",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"ACD",11.1,1,0)
1^F^811.9^45^^1^F
"IX",811.9,811.9,"ACD",11.1,1,3)

"IX",811.9,811.9,"ADEL",0)
811.9^ADEL^Set PXRMDEFD=1 when the entire definition is being deleted.^MU^^F^IR^I^811.9^^^^^A
"IX",811.9,811.9,"ADEL",.1,0)
^^3^3^3040308^
"IX",811.9,811.9,"ADEL",.1,1,0)
PXRMDEFD is set to 1 when the entire definition is being deleted. This
"IX",811.9,811.9,"ADEL",.1,2,0)
provides a flag that can be used to control various actions, such as
"IX",811.9,811.9,"ADEL",.1,3,0)
execution of cross-references, on fields in the definition file.
"IX",811.9,811.9,"ADEL",1)
Q
"IX",811.9,811.9,"ADEL",2)
I X2="" S PXRMDEFD=1
"IX",811.9,811.9,"ADEL",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"ADEL",11.1,1,0)
1^F^811.9^.01^^1^F
"IX",811.9,811.9,"ADEL",11.1,1,3)

"IX",811.9,811.9,"AE",0)
811.9^AE^Build the internal patient cohort logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AE",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AE",.1,1,0)
This cross-reference builds the internal patient cohort logic.
"IX",811.9,811.9,"AE",1)
D CPPCLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA,"","")
"IX",811.9,811.9,"AE",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AE",2)
D BLDPCLS^PXRMLOGX(DA,"",""),BLDINFL^PXRMLOGX(DA,"","")
"IX",811.9,811.9,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AE",11.1,1,0)
1^F^811.9^30^^^F
"IX",811.9,811.9,"AF",0)
811.9^AF^Cross-reference for building internal resolution logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AF",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AF",.1,1,0)
This cross-reference builds the internal resolution logic.
"IX",811.9,811.9,"AF",1)
D CPRESLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA,"","")
"IX",811.9,811.9,"AF",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AF",2)
D BLDRESLS^PXRMLOGX(DA),BLDINFL^PXRMLOGX(DA,"","")
"IX",811.9,811.9,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AF",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AF",11.1,1,0)
1^F^811.9^34^^^F
"IX",811.9,811.9,"AP",0)
811.9^AP^Will set a rem. to the "P" x-ref if the usage field contains a "P"^MU^^F^IR^I^811.9^^^^^S
"IX",811.9,811.9,"AP",.1,0)
^^2^2^3040303^
"IX",811.9,811.9,"AP",.1,1,0)
This cross-reference will set a reminder to the "P" cross-reference if the 
"IX",811.9,811.9,"AP",.1,2,0)
reminders contains a "P" in the usage field.
"IX",811.9,811.9,"AP",1)
S ^PXD(811.9,"P",DA)=""
"IX",811.9,811.9,"AP",1.4)
S X=$S(X["P":1,1:0)
"IX",811.9,811.9,"AP",2)
K ^PXD(811.9,"P",DA)
"IX",811.9,811.9,"AP",2.4)

"IX",811.9,811.9,"AP",2.5)
K ^PXD(811.9,"P")
"IX",811.9,811.9,"AP",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AP",11.1,1,0)
1^F^811.9^103^30^1^F
"IX",811.9,811.9,"B",0)
811.9^B^B cross-reference^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"B",.1,0)
^^1^1^3000222^
"IX",811.9,811.9,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross-reference.
"IX",811.9,811.9,"B",1)
S ^PXD(811.9,"B",$E(X,1,64),DA)=""
"IX",811.9,811.9,"B",2)
K ^PXD(811.9,"B",$E(X,1,64),DA)
"IX",811.9,811.9,"B",2.5)
K ^PXD(811.9,"B")
"IX",811.9,811.9,"B",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"B",11.1,1,0)
1^F^811.9^.01^64^1^F
"IX",811.9,811.9,"D",0)
811.9^D^Look up by Print Name^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"D",.1,0)
^^1^1^3000216^
"IX",811.9,811.9,"D",.1,1,0)
This cross-reference is used for look-up by the reminder's Print Name.
"IX",811.9,811.9,"D",1)
S ^PXD(811.9,"D",$E(X,1,35),DA)=""
"IX",811.9,811.9,"D",2)
K ^PXD(811.9,"D",$E(X,1,35),DA)
"IX",811.9,811.9,"D",2.5)
K ^PXD(811.9,"D")
"IX",811.9,811.9,"D",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"D",11.1,1,0)
1^F^811.9^1.2^35^1^F
"IX",811.9,811.9002,"B",0)
811.9002^B^New style B cross-reference^R^^F^IR^I^811.9002^^^^^LS
"IX",811.9,811.9002,"B",1)
S ^PXD(811.9,DA(1),50,"B",$E(X,1,128),DA)=""
"IX",811.9,811.9002,"B",2)
K ^PXD(811.9,DA(1),50,"B",$E(X,1,128),DA)
"IX",811.9,811.9002,"B",2.5)
K ^PXD(811.9,DA(1),50,"B")
"IX",811.9,811.9002,"B",11.1,0)
^.114IA^1^1
"IX",811.9,811.9002,"B",11.1,1,0)
1^F^811.9002^.01^128^1^F
"IX",811.9,811.9002,"B",11.1,1,3)

"IX",811.9,811.902,"ACASE",0)
811.902^ACASE^Reset internal condition whenever case sensitive field changes.^MU^^F^IR^I^811.902^^^^^A
"IX",811.9,811.902,"ACASE",1)
D CASESEN^PXRMCOND(X,.DA,811.9)
"IX",811.9,811.902,"ACASE",2)
D CASESEN^PXRMCOND(X,.DA,811.9)
"IX",811.9,811.902,"ACASE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"ACASE",11.1,1,0)
1^F^811.902^15^^1^F
"IX",811.9,811.902,"ACOND",0)
811.902^ACOND^Build the internal condition structure^MU^^F^IR^I^811.902^^^^^A
"IX",811.9,811.902,"ACOND",1)
D SICOND^PXRMCOND(.X,.DA,811.9)
"IX",811.9,811.902,"ACOND",2)
D KICOND^PXRMCOND(.X,.DA,811.9)
"IX",811.9,811.902,"ACOND",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"ACOND",11.1,1,0)
1^F^811.902^14^30^1^F
"IX",811.9,811.902,"ADATE",0)
811.902^ADATE^Give a warning if the ending date is before the beginning date^MU^^R^IR^I^811.902^^^^^A
"IX",811.9,811.902,"ADATE",1)
D COMPARE^PXRMDATE(.X)
"IX",811.9,811.902,"ADATE",2)
Q
"IX",811.9,811.902,"ADATE",11.1,0)
^.114IA^2^2
"IX",811.9,811.902,"ADATE",11.1,1,0)
1^F^811.902^9^^^F
"IX",811.9,811.902,"ADATE",11.1,2,0)
2^F^811.902^12^^^F
"IX",811.9,811.902,"AE",0)
811.902^AE^Build all logic strings^MU^^R^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AE",1)
D BLDALL^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AE",2)
D BLDALL^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AE",11.1,1,0)
1^F^811.902^.01^^1^F
"IX",811.9,811.902,"AENODE",0)
811.902^AENODE^Set the ENODE.^MU^^F^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AENODE",.1,0)
^^16^16^3060615^
"IX",811.9,811.902,"AENODE",.1,1,0)
This cross-reference is used to group findings by type. The index it
"IX",811.9,811.902,"AENODE",.1,2,0)
creates has the form:
"IX",811.9,811.902,"AENODE",.1,3,0)
 ^PXD(811.9,DA(1),20,"E",GLOBAL,IEN,DA)
"IX",811.9,811.902,"AENODE",.1,4,0)
 where 
"IX",811.9,811.902,"AENODE",.1,5,0)
  DA(1) is the internal entry number in file # 811.9.
"IX",811.9,811.902,"AENODE",.1,6,0)
  GLOBAL is the global name of the global that defines the finding.
"IX",811.9,811.902,"AENODE",.1,7,0)
   For example, the global name for file #811.9 is ^PXD(811.9,.
"IX",811.9,811.902,"AENODE",.1,8,0)
  IEN is the internal entry number of the finding in GLOBAL.
"IX",811.9,811.902,"AENODE",.1,9,0)
  DA is the finding number.
"IX",811.9,811.902,"AENODE",.1,10,0)

"IX",811.9,811.902,"AENODE",.1,11,0)
Some examples:
"IX",811.9,811.902,"AENODE",.1,12,0)
 ^PXD(811.9,661,20,"E","PSDRUG(",6344,2)=
"IX",811.9,811.902,"AENODE",.1,13,0)
 ^PXD(811.9,662,20,"E","AUTTEDT(",363,3)=
"IX",811.9,811.902,"AENODE",.1,14,0)
 ^PXD(811.9,669,20,"E","PXRMD(811.5,",660014,5)=
"IX",811.9,811.902,"AENODE",.1,15,0)

"IX",811.9,811.902,"AENODE",.1,16,0)

"IX",811.9,811.902,"AENODE",1)
D SENODE^PXRMENOD(.X,.DA,811.9)
"IX",811.9,811.902,"AENODE",2)
D KENODE^PXRMENOD(.X,.DA,811.9)
"IX",811.9,811.902,"AENODE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AENODE",11.1,1,0)
1^F^811.902^.01^^1^F
"IX",811.9,811.902,"AENODE",11.1,1,3)

"IX",811.9,811.902,"AF",0)
811.902^AF^Check for rebuild of age findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AF",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AF",.1,1,0)
When MINIMUM AGE, MAXIMUM AGE, or REMINDER FREQUENCY are changed then
"IX",811.9,811.902,"AF",.1,2,0)
rebuild the age findings list.
"IX",811.9,811.902,"AF",1)
D BLDAFL^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AF",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AF",2)
D BLDAFL^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AF",11.1,0)
^.114IA^4^3
"IX",811.9,811.902,"AF",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AF",11.1,3,0)
2^F^811.902^2^^^F
"IX",811.9,811.902,"AF",11.1,4,0)
3^F^811.902^3^^^F
"IX",811.9,811.902,"AG",0)
811.902^AG^Check for rebuild of resolution findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AG",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AG",.1,1,0)
When USE IN RESOLUTION LOGIC is changed then rebuild the resolution
"IX",811.9,811.902,"AG",.1,2,0)
findings list.
"IX",811.9,811.902,"AG",1)
D BLDRESLS^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AG",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AG",2)
D BLDRESLS^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AG",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AG",11.1,0)
^.114IA^3^1
"IX",811.9,811.902,"AG",11.1,3,0)
1^F^811.902^7^^^F
"IX",811.9,811.902,"AH",0)
811.902^AH^Check for rebuild of patient cohort findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AH",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AH",.1,1,0)
Whenever USE IN PATIENT COHORT LOGIC is changed rebuild the patient cohort
"IX",811.9,811.902,"AH",.1,2,0)
logic list.
"IX",811.9,811.902,"AH",1)
D BLDPCLS^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AH",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AH",2)
D BLDPCLS^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AH",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AH",11.1,0)
^.114IA^2^1
"IX",811.9,811.902,"AH",11.1,2,0)
1^F^811.902^8^^^F
"IX",811.9,811.902,"AI",0)
811.902^AI^Check for rebuild of information findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AI",.1,0)
^^4^4^3021224^^
"IX",811.9,811.902,"AI",.1,1,0)
Whenever any of the following fields change rebuild the information
"IX",811.9,811.902,"AI",.1,2,0)
findings list: MINIMUM AGE, MAXIMUM AGE, REMINDER FREQUENCY, USE IN
"IX",811.9,811.902,"AI",.1,3,0)
RESOLUTION LOGIC, USE IN PATIENT COHORT LOGIC.
"IX",811.9,811.902,"AI",.1,4,0)

"IX",811.9,811.902,"AI",1)
D BLDINFL^PXRMLOGX(DA(1),"",20)
"IX",811.9,811.902,"AI",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AI",2)
D BLDINFL^PXRMLOGX(DA(1),DA,20)
"IX",811.9,811.902,"AI",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AI",11.1,0)
^.114IA^7^5
"IX",811.9,811.902,"AI",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AI",11.1,4,0)
2^F^811.902^2^^^F
"IX",811.9,811.902,"AI",11.1,5,0)
3^F^811.902^3^^^F
"IX",811.9,811.902,"AI",11.1,6,0)
4^F^811.902^7^^^F
"IX",811.9,811.902,"AI",11.1,7,0)
5^F^811.902^8^^^F
"IX",811.9,811.902,"AWARNSL",0)
811.902^AWARNSL^Warn the user to review the status list if RXTYPE field is changed.^MU^^F^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AWARNSL",1)
D WARN^PXRMSTA1
"IX",811.9,811.902,"AWARNSL",1.4)
S X=$S(X2'="":1,1:0)
"IX",811.9,811.902,"AWARNSL",2)
D WARN^PXRMSTA1
"IX",811.9,811.902,"AWARNSL",2.4)
S X=$S(X2="":1,1:0)
"IX",811.9,811.902,"AWARNSL",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AWARNSL",11.1,1,0)
1^F^811.902^16^^1^F
"IX",811.9,811.925,"AB",0)
811.925^AB^Build the function finding data structure.^MU^^F^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AB",1)
D FFBUILD^PXRMFFDB(X,.DA)
"IX",811.9,811.925,"AB",2)
D FFKILL^PXRMFFDB(X,.DA)
"IX",811.9,811.925,"AB",11.1,0)
^.114IA^1^1
"IX",811.9,811.925,"AB",11.1,1,0)
1^F^811.925^3^^1^F
"IX",811.9,811.925,"AE",0)
811.925^AE^Build all logic strings.^MU^^F^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AE",1)
D BLDALL^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AE",2)
D BLDALL^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.925,"AE",11.1,1,0)
1^F^811.925^.01^^1^F
"IX",811.9,811.925,"AF",0)
811.925^AF^Check for rebuild of age findings list^MU^^R^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AF",1)
D BLDAFL^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AF",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.925,"AF",2)
D BLDAFL^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AF",11.1,0)
^.114IA^3^3
"IX",811.9,811.925,"AF",11.1,1,0)
1^F^811.925^13^^1^F
"IX",811.9,811.925,"AF",11.1,2,0)
2^F^811.925^14^^2^F
"IX",811.9,811.925,"AF",11.1,3,0)
3^F^811.925^15^^3^F
"IX",811.9,811.925,"AG",0)
811.925^AG^Check for rebuild of resolution findings list^MU^^F^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AG",1)
D BLDRESLS^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AG",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.925,"AG",2)
D BLDRESLS^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AG",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AG",11.1,0)
^.114IA^1^1
"IX",811.9,811.925,"AG",11.1,1,0)
1^F^811.925^11^^1^F
"IX",811.9,811.925,"AH",0)
811.925^AH^Check for rebuilds of patient cohort findings list^MU^^F^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AH",.1,0)
^^2^2^3021223^
"IX",811.9,811.925,"AH",.1,1,0)
Whenever USE IN PATIENT COHORT LOGIC is changed rebuild the patient
"IX",811.9,811.925,"AH",.1,2,0)
cohort logic list.
"IX",811.9,811.925,"AH",1)
D BLDPCLS^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AH",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.925,"AH",2)
D BLDPCLS^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AH",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AH",2.5)

"IX",811.9,811.925,"AH",11.1,0)
^.114IA^1^1
"IX",811.9,811.925,"AH",11.1,1,0)
1^F^811.925^12^^1^F
"IX",811.9,811.925,"AI",0)
811.925^AI^Check for rebuild of information findings list.^MU^^R^IR^I^811.925^^^^^A
"IX",811.9,811.925,"AI",.1,0)
^^3^3^3021224^
"IX",811.9,811.925,"AI",.1,1,0)
Whenever any of the following fields change rebuild the information
"IX",811.9,811.925,"AI",.1,2,0)
findings list: MINIMUM AGE, MAXIMUM AGE, REMINDER FREQUENCY, USE IN
"IX",811.9,811.925,"AI",.1,3,0)
RESOLUTION LOGIC, USE IN PATIENT COHORT LOGIC.
"IX",811.9,811.925,"AI",1)
D BLDINFL^PXRMLOGX(DA(1),"",25)
"IX",811.9,811.925,"AI",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.925,"AI",2)
D BLDINFL^PXRMLOGX(DA(1),DA,25)
"IX",811.9,811.925,"AI",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.925,"AI",11.1,0)
^.114IA^5^5
"IX",811.9,811.925,"AI",11.1,1,0)
1^F^811.925^13^^^F
"IX",811.9,811.925,"AI",11.1,2,0)
2^F^811.925^14^^^F
"IX",811.9,811.925,"AI",11.1,3,0)
3^F^811.925^15^^^F
"IX",811.9,811.925,"AI",11.1,4,0)
4^F^811.925^11^^^F
"IX",811.9,811.925,"AI",11.1,5,0)
5^F^811.925^12^^^F
"KEY",811.9,811.9,"B",0)
811.9^B^P^840
"KEY",811.9,811.9,"B",2,0)
^.312IA^1^1
"KEY",811.9,811.9,"B",2,1,0)
.01^811.9^1
"KEYPTR",811.9,811.9,"B")
811.9^B
"KRN",.4,2565,-1)
0^1
"KRN",.4,2565,0)
PXRM ORDERABLE ITEM GROUP LIST^3100309.1307^@^801^^@^3101118
"KRN",.4,2565,"F",1)
.01;C1;X~"No.";C66~0;C70;X;L11~"--------------------------------------------------------------------------------";C1~"Class:";C1;S1~100;C25;X~
"KRN",.4,2565,"F",2)
"Sponsor:";C1;S1~101;C25;X~"Review Date:";C1;S1~102;C25;X~"Group Description:";C1;S1~10,.01;C3;X;S1~"Drug Class List:";C1;S2~15,.01;C5;X~
"KRN",.4,2565,"F",3)
"Orderable Item List:";C1;S2~20,.01;C5;X~30,"Reminder Rule List:";C1;S2~30,D RULEINQ^PXRMORCH;Z;"D RULEINQ^PXRMORCH"~30,D ^DIWW;Z;"D ^DIWW"~
"KRN",.4,2565,"H")
REMINDER ORDERABLE ITEM GROUP 
"KRN",.4,2565,"SUB")
1
"KRN",.402,2254,-1)
0^1
"KRN",.402,2254,0)
PXRM EDIT ORDER CHECK^3100308.1338^@^801^^@^3101118
"KRN",.402,2254,"DIAB",1,1,801.015,0)
ALL
"KRN",.402,2254,"DIAB",1,1,801.02,0)
ALL
"KRN",.402,2254,"DR",1,801)
S PXRMNOIG=$$NAT^PXRMORCH(.DA) I PXRMNOIG=1 S Y="@5";.01;100;101;102;10;@5;15;20;I PXRMNOIG=1 S Y="@4";30;
"KRN",.402,2254,"DR",2,801.015)
.01
"KRN",.402,2254,"DR",2,801.02)
.01
"KRN",.402,2254,"DR",2,801.04)
.01;1;2;3;4;10;@6;I $$HASDEF^PXRMORCH(.DA)=1 S Y="@1";20;I +X<1 S Y="@1";21;S Y="@2";@1;30;I X="" W !,"Either a reminder term or definition must be defined" S Y="@6";31;@3;32;I X="" W !,"Output Text must be defined" S Y="@3";
"KRN",.402,2254,"DR",2,801.04,1)
I X="D" D DELTXT^PXRMORCH(.DA) S Y="@4";@2;40;D SNOCTL^PXRMORCH(.DA);I X="NO",^PXD(801,DA(1),3,DA,5)=0 W !,"Order Check Text is needed" S Y="@2";@4;
"KRN",19,11507,-1)
2^5
"KRN",19,11507,0)
PXRM MANAGERS MENU^Reminder Managers Menu^^M^10000000020^^^^^^^534
"KRN",19,11507,10,0)
^19.01IP^20^20
"KRN",19,11507,10,20,0)
13823^ROI^92
"KRN",19,11507,10,20,"^")
PXRM ORDERABLE ITEM GROUP MENU
"KRN",19,11507,"U")
REMINDER MANAGERS MENU
"KRN",19,13821,-1)
0^2
"KRN",19,13821,0)
PXRM ORDERABLE ITEM GROUP INQ^Reminder Orderable Item Inquiry^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,13821,1,0)
^19.06^2^2^3090727^^
"KRN",19,13821,1,1,0)
This option is used to display the details of a reminder orderable item group.
"KRN",19,13821,1,2,0)

"KRN",19,13821,20)
D EN^PXRMORCH("I")
"KRN",19,13821,"U")
REMINDER ORDERABLE ITEM INQUIR
"KRN",19,13822,-1)
0^1
"KRN",19,13822,0)
PXRM ORDERABLE ITEM GROUP EDIT^Add/Edit Reminder Orderable Item Group^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,13822,1,0)
^^2^2^3090707^
"KRN",19,13822,1,1,0)
This option is used to create/edit a reminder orderable item group.
"KRN",19,13822,1,2,0)

"KRN",19,13822,20)
D EN^PXRMORCH("E")
"KRN",19,13822,"U")
ADD/EDIT REMINDER ORDERABLE IT
"KRN",19,13823,-1)
0^4
"KRN",19,13823,0)
PXRM ORDERABLE ITEM GROUP MENU^Reminder Orderable Item Group Menu^^M^^^^^^^^CLINICAL REMINDERS
"KRN",19,13823,1,0)
^19.06^3^3^3090720^^
"KRN",19,13823,1,1,0)
This option contains the menu options to allow an user to create/edit a
"KRN",19,13823,1,2,0)
reminder orderable item group.
"KRN",19,13823,1,3,0)

"KRN",19,13823,10,0)
^19.01IP^3^3
"KRN",19,13823,10,1,0)
13822^OE^1
"KRN",19,13823,10,1,"^")
PXRM ORDERABLE ITEM GROUP EDIT
"KRN",19,13823,10,2,0)
13821^OI^5
"KRN",19,13823,10,2,"^")
PXRM ORDERABLE ITEM GROUP INQ
"KRN",19,13823,10,3,0)
13824^OT^10
"KRN",19,13823,10,3,"^")
PXRM ORDERABLE ITEM TESTER
"KRN",19,13823,99)
61888,75972
"KRN",19,13823,"U")
REMINDER ORDERABLE ITEM GROUP 
"KRN",19,13824,-1)
0^3
"KRN",19,13824,0)
PXRM ORDERABLE ITEM TESTER^Reminder Orderable Item Group Test^^A^^^^^^^^CLINICAL REMINDERS^^1
"KRN",19,13824,1,0)
^^4^4^3090720^
"KRN",19,13824,1,1,0)
This option allow the user to run a test against a patient and an orderable
"KRN",19,13824,1,2,0)
item. This allow them to evaluate the results of a reminder order check
"KRN",19,13824,1,3,0)
rule before turning it on in CPRS.
"KRN",19,13824,1,4,0)

"KRN",19,13824,20)
D TESTER^PXRMORXR
"KRN",19,13824,"U")
REMINDER ORDERABLE ITEM GROUP 
"KRN",101,1,-1)
0^1
"KRN",101,1,0)
PXRM ORDER CHECK UPDATES^PXRM ORDER CHECK UPDATES^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,1,1,0)
^^3^3^3091202
"KRN",101,1,1,1,0)
This is the Clinical Reminders protocol for checking orderable items in 
"KRN",101,1,1,2,0)
file 801, when an update is done to the ORDERABLE ITEM file, file #101.43.
"KRN",101,1,1,3,0)

"KRN",101,1,20)
D OIUPDATE^PXRMORHL(.XQORMSG)
"KRN",101,1,99)
61888,75972
"KRN",101,3531,-1)
2^2
"KRN",101,3531,0)
OR ITEM RECEIVE^Read orderable item updates^^X^10000000195
"KRN",101,3531,10,0)
^101.01PA^1^1
"KRN",101,3531,10,1,0)
1^^1^
"KRN",101,3531,10,1,"^")
PXRM ORDER CHECK UPDATES
"MBREQ")
1
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",534,-1)
1^1
"PKG",534,0)
CLINICAL REMINDERS^PXRM^Clinical Reminders^^^3000301
"PKG",534,20,0)
^9.402P^^
"PKG",534,22,0)
^9.49I^1^1
"PKG",534,22,1,0)
2.0^3050204^3050309^10000000020
"PKG",534,22,1,"PAH",1,0)
16^3110124^10000000195
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
21
"RTN","PXRM")
0^3^B34249926
"RTN","PXRM",1,0)
PXRM ; SLC/PKR - Clinical Reminders entry points. ; 10/20/2009
"RTN","PXRM",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,11,12,16**;Feb 04, 2005;Build 119
"RTN","PXRM",3,0)
 ;Entry points in this routine are listed in DBIA #2182.
"RTN","PXRM",4,0)
 ;==========================================================
"RTN","PXRM",5,0)
MAIN(DFN,PXRMITEM,OUTTYPE,DISC) ;Main driver for clinical reminders.
"RTN","PXRM",6,0)
 ;INPUT  DFN - Pointer to Patient File (#2)
"RTN","PXRM",7,0)
 ;       PXRMITEM - IEN of reminder to evaluate.
"RTN","PXRM",8,0)
 ;       OUTTYPE - Flag to indicate type of output information.
"RTN","PXRM",9,0)
 ;         0 - Reminders DUE NOW only (CLINICAL REMINDERS DUE
"RTN","PXRM",10,0)
 ;             HS component)
"RTN","PXRM",11,0)
 ;         1 - All Reminders with Next and Last Information
"RTN","PXRM",12,0)
 ;             (CLINICAL REMINDERS SUMMARY HS component)
"RTN","PXRM",13,0)
 ;         5 - Health Maintenance (CLINICAL REMINDERS MAINTENANCE
"RTN","PXRM",14,0)
 ;              HS component)
"RTN","PXRM",15,0)
 ;        10 - MyHealtheVet summary
"RTN","PXRM",16,0)
 ;        11 - MyHealtheVet detailed
"RTN","PXRM",17,0)
 ;        12 - MyHealtheVet combined
"RTN","PXRM",18,0)
 ;        55 - Order check
"RTN","PXRM",19,0)
 ;        DISC - (optional) if this is true then the disclaimer will
"RTN","PXRM",20,0)
 ;             be loaded in ^TMP("PXRM",$J,"DISC").
"RTN","PXRM",21,0)
 ;
"RTN","PXRM",22,0)
 ;OUTPUT  ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=
"RTN","PXRM",23,0)
 ;              STATUS_U_DUE DATE_U_LAST DONE
"RTN","PXRM",24,0)
 ;        where PXRMRNAM is the PRINT NAME or if it is undefined then
"RTN","PXRM",25,0)
 ;        it is the NAME (.01).
"RTN","PXRM",26,0)
 ;        For the Clinical Maintenance component, OUTTYPE=5, there is 
"RTN","PXRM",27,0)
 ;        subsequent output of the form
"RTN","PXRM",28,0)
 ;        ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",N)=TEXT
"RTN","PXRM",29,0)
 ;        where N is a number and TEXT is a text string.
"RTN","PXRM",30,0)
 ;
"RTN","PXRM",31,0)
 ;        If DISC is true then the disclaimer will be loaded into
"RTN","PXRM",32,0)
 ;        ^TMP("PXRM",$J,"DISC"). The calling application should
"RTN","PXRM",33,0)
 ;        delete this when it is done.
"RTN","PXRM",34,0)
 ;
"RTN","PXRM",35,0)
 ;        The calling application can display the contents of these
"RTN","PXRM",36,0)
 ;        two ^TMP arrays as it chooses. The caller should also make
"RTN","PXRM",37,0)
 ;        sure the ^TMP globals are killed before it exits.
"RTN","PXRM",38,0)
 ;
"RTN","PXRM",39,0)
 N DEFARR,FIEVAL
"RTN","PXRM",40,0)
 ;Load the definition into DEFARR.
"RTN","PXRM",41,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRM",42,0)
 ;
"RTN","PXRM",43,0)
 I $G(NODISC)="" S NODISC=1
"RTN","PXRM",44,0)
 I $D(GMFLAG) S NODISC=0
"RTN","PXRM",45,0)
 D EVAL(DFN,.DEFARR,OUTTYPE,NODISC,.FIEVAL)
"RTN","PXRM",46,0)
 Q
"RTN","PXRM",47,0)
 ;
"RTN","PXRM",48,0)
 ;==========================================================
"RTN","PXRM",49,0)
EVAL(DFN,DEFARR,OUTTYPE,NODISC,FIEVAL,DATE) ;Reminder evaluation entry
"RTN","PXRM",50,0)
 ;point. This entry point uses the local array DEFARR for the reminder
"RTN","PXRM",51,0)
 ;definition and returns the Finding Evaluation Array, FIEVAL.
"RTN","PXRM",52,0)
 ;PXRM namespaced variables are the reminder evaluation "global"
"RTN","PXRM",53,0)
 ;variables. If date is specified then the reminder will be evaluated
"RTN","PXRM",54,0)
 ;as if the current date is DATE.
"RTN","PXRM",55,0)
 N PXRMAGE,PXRMDATE,PXRMDOB,PXRMDOD,PXRMLAD,PXRMPDEM,PXRMPID,PXRMITEM
"RTN","PXRM",56,0)
 N PXRMRM,PXRMRNAM,PXRMSEX,PXRMXTLK
"RTN","PXRM",57,0)
 ;Make sure the reminder exists.
"RTN","PXRM",58,0)
 I $D(DEFARR("DNE")) D NODEF^PXRMERRH(DEFARR("IEN")) Q
"RTN","PXRM",59,0)
 ;PXRMRM is the right margin for output.
"RTN","PXRM",60,0)
 S PXRMRM=80
"RTN","PXRM",61,0)
 S PXRMDATE=$G(DATE)
"RTN","PXRM",62,0)
 S PXRMITEM=DEFARR("IEN")
"RTN","PXRM",63,0)
 S PXRMPID="PXRM"_PXRMITEM_$H
"RTN","PXRM",64,0)
 N D00
"RTN","PXRM",65,0)
 S D00=DEFARR(0)
"RTN","PXRM",66,0)
 S PXRMRNAM=$P(D00,U,3)
"RTN","PXRM",67,0)
 ;If the print name is null use the .01.
"RTN","PXRM",68,0)
 I PXRMRNAM="" S PXRMRNAM=$P(D00,U,1)
"RTN","PXRM",69,0)
 ;
"RTN","PXRM",70,0)
 ;Set the error handler to the PXRMERRH routine. Use the new style of
"RTN","PXRM",71,0)
 ;error trapping.
"RTN","PXRM",72,0)
 N $ES,$ET
"RTN","PXRM",73,0)
 S $ET="D ERRHDLR^PXRMERRH"
"RTN","PXRM",74,0)
 ;
"RTN","PXRM",75,0)
 ;Initialize the working array.
"RTN","PXRM",76,0)
 K ^TMP(PXRMPID,$J)
"RTN","PXRM",77,0)
 ;
"RTN","PXRM",78,0)
 N DUE,DUEDATE,FREQ,PCLOGIC,RESDATE,RESLOGIC
"RTN","PXRM",79,0)
 ;Make sure the reminder is active.
"RTN","PXRM",80,0)
 I $P(D00,U,6) D  G OUTPUT
"RTN","PXRM",81,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")="The reminder "_PXRMRNAM_" was inactivated "_$$FMTE^XLFDT($P(D00,U,7),"5Z")
"RTN","PXRM",82,0)
 . S PXRMPDEM("DFN")=DFN,PCLOGIC=0,RESLOGIC="",DUE="",DUEDATE=0
"RTN","PXRM",83,0)
 . S RESDATE="",FREQ="0Y"
"RTN","PXRM",84,0)
 ;
"RTN","PXRM",85,0)
 ;Make sure the "E" node exists
"RTN","PXRM",86,0)
 I $D(DEFARR(20))&'$D(DEFARR("E")) D  G EXIT
"RTN","PXRM",87,0)
 . W !,"Reminder definition is corrupted, ENODE is missing cannot continue!"
"RTN","PXRM",88,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="ERROR"_U_"E NODE MISSING"
"RTN","PXRM",89,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO ENODE")=""
"RTN","PXRM",90,0)
 ;
"RTN","PXRM",91,0)
 ;Establish the main findings evaluation variables.
"RTN","PXRM",92,0)
 S (DUE,DUEDATE,FREQ,RESDATE)=0
"RTN","PXRM",93,0)
 S (PCLOGIC,RESLOGIC)=""
"RTN","PXRM",94,0)
 ;
"RTN","PXRM",95,0)
 ;Establish the patient demographic information.
"RTN","PXRM",96,0)
 N TODAY
"RTN","PXRM",97,0)
 S TODAY=$G(DATE,DT)
"RTN","PXRM",98,0)
 D DEM^PXRMPINF(DFN,TODAY,.PXRMPDEM)
"RTN","PXRM",99,0)
 I PXRMPDEM("PATIENT")="" D  G EXIT
"RTN","PXRM",100,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NO PAT")="DFN "_DFN_" IS NOT A VALID PATIENT"
"RTN","PXRM",101,0)
 . S PCLOGIC=0
"RTN","PXRM",102,0)
 ;
"RTN","PXRM",103,0)
 ;Load the local demographic variables for use in condition.
"RTN","PXRM",104,0)
 S PXRMAGE=PXRMPDEM("AGE"),PXRMDOB=PXRMPDEM("DOB"),PXRMDOD=PXRMPDEM("DOD")
"RTN","PXRM",105,0)
 S PXRMLAD=PXRMPDEM("LAD"),PXRMSEX=PXRMPDEM("SEX")
"RTN","PXRM",106,0)
 ;
"RTN","PXRM",107,0)
 ;Check for a date of death.
"RTN","PXRM",108,0)
 I PXRMPDEM("DOD")'="" D
"RTN","PXRM",109,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","DEAD")=""
"RTN","PXRM",110,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"DEAD")="Patient is deceased."
"RTN","PXRM",111,0)
 ;
"RTN","PXRM",112,0)
 ;If the component is CR and the patient is deceased we are done.
"RTN","PXRM",113,0)
 I OUTTYPE=0,PXRMPDEM("DOD")'="",'$G(PXRMIDOD) G OUTPUT
"RTN","PXRM",114,0)
 ;
"RTN","PXRM",115,0)
 ;Check for a sex specific reminder.
"RTN","PXRM",116,0)
 N SEXOK
"RTN","PXRM",117,0)
 S SEXOK=$$SEX^PXRMLOG(.DEFARR,PXRMPDEM("SEX"))
"RTN","PXRM",118,0)
 S FIEVAL("SEX")=SEXOK
"RTN","PXRM",119,0)
 ;If the patient is the wrong sex then don't do anything else.
"RTN","PXRM",120,0)
 I 'SEXOK D  G OUTPUT
"RTN","PXRM",121,0)
 . S PCLOGIC=0
"RTN","PXRM",122,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRM",123,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRM",124,0)
 ;
"RTN","PXRM",125,0)
 ;Evaluate the findings.
"RTN","PXRM",126,0)
 S PXRMXTLK=""
"RTN","PXRM",127,0)
 D EVAL^PXRMEVFI(DFN,.DEFARR,.FIEVAL)
"RTN","PXRM",128,0)
 I +PXRMXTLK>0 D  G OUTPUT
"RTN","PXRM",129,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","EXPANDED TAXONOMY","NO LOCK")="NO LOCK for ien "_+PXRMXTLK
"RTN","PXRM",130,0)
 . S PCLOGIC=0
"RTN","PXRM",131,0)
 ;
"RTN","PXRM",132,0)
 ;Check for missing index.
"RTN","PXRM",133,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"WARNING","MISSING INDEX")) D  G OUTPUT
"RTN","PXRM",134,0)
 . S (DUE,DUEDATE)="CNBD",PCLOGIC=1
"RTN","PXRM",135,0)
 ;
"RTN","PXRM",136,0)
 ;Evaluate the Patient Cohort Logic.
"RTN","PXRM",137,0)
 D EVALPCL^PXRMLOG(.DEFARR,.PXRMPDEM,.FREQ,.PCLOGIC,.FIEVAL)
"RTN","PXRM",138,0)
 ;
"RTN","PXRM",139,0)
 ;Evaluate the resolution logic and get the last resolution date.
"RTN","PXRM",140,0)
 D EVALRESL^PXRMLOG(.DEFARR,.RESDATE,.RESLOGIC,.FIEVAL)
"RTN","PXRM",141,0)
 ;
"RTN","PXRM",142,0)
 ;If the reminder is applicable calculate the due date.
"RTN","PXRM",143,0)
 I PCLOGIC D DUE^PXRMDATE(.DEFARR,RESDATE,FREQ,.DUE,.DUEDATE,.FIEVAL)
"RTN","PXRM",144,0)
 ;
"RTN","PXRM",145,0)
OUTPUT ;Prepare the final output.
"RTN","PXRM",146,0)
 D OUTPUT^PXRMOUTD(OUTTYPE,.DEFARR,.PXRMPDEM,PCLOGIC,RESLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRM",147,0)
 ;
"RTN","PXRM",148,0)
EXIT ;Kill the working arrays unless this was a test run.
"RTN","PXRM",149,0)
 K ^TMP($J,"SVC",DFN)
"RTN","PXRM",150,0)
 I $G(PXRMDEBG) D
"RTN","PXRM",151,0)
 . S PXRMID=PXRMPID
"RTN","PXRM",152,0)
 . S FIEVAL("PATIENT AGE")=$G(PXRMPDEM("AGE"))
"RTN","PXRM",153,0)
 . S FIEVAL("DFN")=DFN
"RTN","PXRM",154,0)
 . S FIEVAL("EVAL DATE/TIME")=$$NOW^PXRMDATE
"RTN","PXRM",155,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"REMINDER NAME")=$G(PXRMRNAM)
"RTN","PXRM",156,0)
 E  K ^TMP(PXRMPID,$J)
"RTN","PXRM",157,0)
 ;
"RTN","PXRM",158,0)
 ;I DISC is true load the disclaimer.
"RTN","PXRM",159,0)
 I $G(DISC) D LOAD^PXRMDISC
"RTN","PXRM",160,0)
 Q
"RTN","PXRM",161,0)
 ;
"RTN","PXRM",162,0)
 ;==========================================================
"RTN","PXRM",163,0)
FIDATA(DFN,PXRMITEM,FINDINGS) ;Return the finding evaluation array to the
"RTN","PXRM",164,0)
 ;caller in the array FINDINGS. The caller should use the form
"RTN","PXRM",165,0)
 ;D FIDATA^PXRM(DFN,PXRMITEM,.FINDINGS)
"RTN","PXRM",166,0)
 ;The elements of the FINDINGS array will correspond to the
"RTN","PXRM",167,0)
 ;findings in the reminder definition. For finding N FINDINGS(N)
"RTN","PXRM",168,0)
 ;will be 0 if the finding is false and 1 if it is true. For
"RTN","PXRM",169,0)
 ;true findings there will be additional elements. The exact set
"RTN","PXRM",170,0)
 ;of additional elements will depend of the type of finding.
"RTN","PXRM",171,0)
 ;Some typical examples are:
"RTN","PXRM",172,0)
 ;FINDINGS(N)=1
"RTN","PXRM",173,0)
 ;FINDINGS(N,"DATE")=FileMan date
"RTN","PXRM",174,0)
 ;FINDINGS(N,"FINDING")=variable pointer to the finding
"RTN","PXRM",175,0)
 ;FINDINGS(N,"FILE NUMBER")=file number of data source
"RTN","PXRM",176,0)
 ;FINDINGS(N,"VALUE")=value of the finding, for example the
"RTN","PXRM",177,0)
 ;                    value of a lab test
"RTN","PXRM",178,0)
 ;
"RTN","PXRM",179,0)
 N DEFARR,FI,FIEVAL
"RTN","PXRM",180,0)
 ;Load the definition into DEFARR.
"RTN","PXRM",181,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRM",182,0)
 D EVAL(DFN,.DEFARR,0,1,.FIEVAL)
"RTN","PXRM",183,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J)
"RTN","PXRM",184,0)
 ;Load the FINDINGS array.
"RTN","PXRM",185,0)
 S FI=0
"RTN","PXRM",186,0)
 F  S FI=+$O(FIEVAL(FI)) Q:FI=0  D
"RTN","PXRM",187,0)
 . S FINDINGS(FI)=FIEVAL(FI)
"RTN","PXRM",188,0)
 . I 'FIEVAL(FI) Q
"RTN","PXRM",189,0)
 . S FINDINGS(FI,"DATE")=FIEVAL(FI,"DATE")
"RTN","PXRM",190,0)
 . I FIEVAL(FI,"FINDING")["PSDRUG" S FINDINGS(FI,"DRUG")=1
"RTN","PXRM",191,0)
 . S FINDINGS(FI,"FILE NUMBER")=FIEVAL(FI,"FILE NUMBER")
"RTN","PXRM",192,0)
 . S FINDINGS(FI,"FINDING")=FIEVAL(FI,"FINDING")
"RTN","PXRM",193,0)
 . I $D(FIEVAL(FI,"TERM")) S FINDINGS(FI,"TERM")=FIEVAL(FI,"TERM")
"RTN","PXRM",194,0)
 . I $D(FIEVAL(FI,"VALUE")) S (FINDINGS(FI,"RESULT"),FINDINGS(FI,"VALUE"))=FIEVAL(FI,"VALUE")
"RTN","PXRM",195,0)
 . I $D(FIEVAL(FI,"VISIT")) S FINDINGS(FI,"VIEN")=FIEVAL(FI,"VISIT")
"RTN","PXRM",196,0)
 Q
"RTN","PXRM",197,0)
 ;
"RTN","PXRM",198,0)
 ;==========================================================
"RTN","PXRM",199,0)
INACTIVE(PXRMITEM) ;Return the INACTIVE FLAG, which has a value of 1
"RTN","PXRM",200,0)
 ;if the reminder is inactive.
"RTN","PXRM",201,0)
 I '$D(^PXD(811.9,PXRMITEM)) Q 1
"RTN","PXRM",202,0)
 Q $P(^PXD(811.9,PXRMITEM,0),U,6)
"RTN","PXRM",203,0)
 ;
"RTN","PXRMDEDT")
0^18^B86324286
"RTN","PXRMDEDT",1,0)
PXRMDEDT ; SLC/PJH - Edit PXRM reminder dialog. ;03/01/2010
"RTN","PXRMDEDT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,17,16**;Feb 04, 2005;Build 119
"RTN","PXRMDEDT",3,0)
 ;
"RTN","PXRMDEDT",4,0)
 ;Used by protocol PXRM SELECTION ADD/PXRM GENERAL ADD
"RTN","PXRMDEDT",5,0)
 ;
"RTN","PXRMDEDT",6,0)
 ;Add Dialog
"RTN","PXRMDEDT",7,0)
 ;----------
"RTN","PXRMDEDT",8,0)
ADD N DA,DIC,Y,DTOUT,DUOUT,DTYP,DLAYGO,HED
"RTN","PXRMDEDT",9,0)
 S HED="ADD DIALOG"
"RTN","PXRMDEDT",10,0)
 W IORESET
"RTN","PXRMDEDT",11,0)
 F  D  Q:$D(DTOUT)
"RTN","PXRMDEDT",12,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",13,0)
 .;Set the starting place for additions.
"RTN","PXRMDEDT",14,0)
 .D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",15,0)
 .S DIC(0)="AELMQ",DLAYGO=801.41
"RTN","PXRMDEDT",16,0)
 .S DIC("A")="Select DIALOG to add: "
"RTN","PXRMDEDT",17,0)
 .S DIC("DR")="4///"_$G(PXRMDTYP)
"RTN","PXRMDEDT",18,0)
 .D ^DIC
"RTN","PXRMDEDT",19,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",20,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",21,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",22,0)
 .I $P(Y,U,3)'=1 W !,"This dialog name already exists" Q
"RTN","PXRMDEDT",23,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMDEDT",24,0)
 .;Determine dialog type
"RTN","PXRMDEDT",25,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",26,0)
 .;Enter dialog type if a new entry
"RTN","PXRMDEDT",27,0)
 .I DTYP="" D  Q:$D(Y)
"RTN","PXRMDEDT",28,0)
 ..N DIE,DR
"RTN","PXRMDEDT",29,0)
 ..S DIE=801.41,DR=4
"RTN","PXRMDEDT",30,0)
 ..D ^DIE
"RTN","PXRMDEDT",31,0)
 .;
"RTN","PXRMDEDT",32,0)
 .;Edit Dialog
"RTN","PXRMDEDT",33,0)
 .D EDIT(DTYP,DA,0)
"RTN","PXRMDEDT",34,0)
 Q
"RTN","PXRMDEDT",35,0)
 ;
"RTN","PXRMDEDT",36,0)
 ;called by protocol PXRM DIALOG EDIT
"RTN","PXRMDEDT",37,0)
 ;-----------------------------------
"RTN","PXRMDEDT",38,0)
EDIT(TYP,DA,OIEN) ;
"RTN","PXRMDEDT",39,0)
 Q:'$$LOCK(DA)
"RTN","PXRMDEDT",40,0)
 W IORESET
"RTN","PXRMDEDT",41,0)
 N CS1,CS2,D1,DIC,DIDEL,DIE,DIK,DR,DTOUT,DUOUT,DINUSE,TYP,ODA,Y
"RTN","PXRMDEDT",42,0)
 ;Save checksum
"RTN","PXRMDEDT",43,0)
 S VALMBCK=""
"RTN","PXRMDEDT",44,0)
 S CS1=$$FILE^PXRMEXCS(801.41,DA)
"RTN","PXRMDEDT",45,0)
 ;
"RTN","PXRMDEDT",46,0)
 ;Check dialog type
"RTN","PXRMDEDT",47,0)
 S TYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",48,0)
 S DIE="^PXRMD(801.41,",DIDEL=801.41,DINUSE=0,ODA=DA
"RTN","PXRMDEDT",49,0)
 ;Reminder Dialog
"RTN","PXRMDEDT",50,0)
 I TYP="R" S DR="[PXRM EDIT REMINDER DIALOG]"
"RTN","PXRMDEDT",51,0)
 ;Dialog Element
"RTN","PXRMDEDT",52,0)
 I TYP="E" S DR="[PXRM EDIT ELEMENT]"
"RTN","PXRMDEDT",53,0)
 ;Additional Prompt
"RTN","PXRMDEDT",54,0)
 ;I TYP="P" S DR="[PXRM EDIT PROMPT]"
"RTN","PXRMDEDT",55,0)
 ;Forced Value
"RTN","PXRMDEDT",56,0)
 I TYP="F" S DR="[PXRM EDIT FORCED VALUE]"
"RTN","PXRMDEDT",57,0)
 ;Dialog Group (Finding item dialog)
"RTN","PXRMDEDT",58,0)
 I TYP="G" S DR="[PXRM EDIT GROUP]" ;S VALMBCK="R"
"RTN","PXRMDEDT",59,0)
 ;Result Group
"RTN","PXRMDEDT",60,0)
 I TYP="S" S DR="[PXRM RESULT GROUP]"
"RTN","PXRMDEDT",61,0)
 ;Result Element
"RTN","PXRMDEDT",62,0)
 I TYP="T" S DR="[PXRM RESULT ELEMENT]"
"RTN","PXRMDEDT",63,0)
 ;Allows limited edit of national dialogs
"RTN","PXRMDEDT",64,0)
 I $P($G(^PXRMD(801.41,DA,100)),U)="N" D
"RTN","PXRMDEDT",65,0)
 .I TYP="T",+$P($G(^PXMRD(801.41,DA,100)),U,4)=0 Q
"RTN","PXRMDEDT",66,0)
 .I $G(PXRMINST)=1,DUZ(0)="@" Q
"RTN","PXRMDEDT",67,0)
 .S DR="[PXRM EDIT NATIONAL DIALOG]",DINUSE=1
"RTN","PXRMDEDT",68,0)
 ;
"RTN","PXRMDEDT",69,0)
 I "GEPFS"[TYP D
"RTN","PXRMDEDT",70,0)
 .I '$D(^PXRMD(801.41,"AD",DA)),'$D(^PXRMD(801.41,"R",DA)),'$D(^PXRMD(801.41,"RG",DA)) W !,"Not used by any other dialog",! Q
"RTN","PXRMDEDT",71,0)
 .I PXRMGTYP'="DLG" S DINUSE=1 Q
"RTN","PXRMDEDT",72,0)
 .I PXRMGTYP="DLG" D  Q
"RTN","PXRMDEDT",73,0)
 ..N SUB
"RTN","PXRMDEDT",74,0)
 ..S SUB=0
"RTN","PXRMDEDT",75,0)
 ..F  S SUB=$O(^PXRMD(801.41,"AD",DA,SUB)) Q:'SUB  Q:DINUSE  D
"RTN","PXRMDEDT",76,0)
 ...I SUB'=PXRMDIEN S DINUSE=1
"RTN","PXRMDEDT",77,0)
 I DINUSE D
"RTN","PXRMDEDT",78,0)
 .W !,"Current dialog "_$S(TYP="S":"result group",1:"element/group")_" name: "_$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",79,0)
 .I TYP="S" W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN,"RG") Q
"RTN","PXRMDEDT",80,0)
 .I PXRMGTYP="DLGE" D
"RTN","PXRMDEDT",81,0)
 ..W !,"Used by:" D USE^PXRMDLST(DA,10,"","AD")
"RTN","PXRMDEDT",82,0)
 ..I $D(^PXRMD(801.41,"R",DA))'>0 Q
"RTN","PXRMDEDT",83,0)
 ..W !,"Used as a Replacement Element/Group for: " D USE^PXRMDLST(DA,10,"","R")
"RTN","PXRMDEDT",84,0)
 .I PXRMGTYP'="DLGE" D
"RTN","PXRMDEDT",85,0)
 ..W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN,"AD")
"RTN","PXRMDEDT",86,0)
 ..I $D(^PXRMD(801.41,"R",DA))'>0 Q
"RTN","PXRMDEDT",87,0)
 ..W !,"Used as a Replacement Element/Group for: " D USE^PXRMDLST(DA,10,PXRMDIEN,"R")
"RTN","PXRMDEDT",88,0)
 ;
"RTN","PXRMDEDT",89,0)
 ;Save list of components
"RTN","PXRMDEDT",90,0)
 N COMP D COMP^PXRMDEDX(DA,.COMP)
"RTN","PXRMDEDT",91,0)
 ;Edit dialog then unlock
"RTN","PXRMDEDT",92,0)
 I TYP'="P" D ^DIE D UNLOCK(ODA) I $G(DA)="",$G(OIEN)>0 D
"RTN","PXRMDEDT",93,0)
 .S DA=OIEN,DR="118////@" D ^DIE K DA
"RTN","PXRMDEDT",94,0)
 I TYP="P" D PROMPT(DA) D UNLOCK(ODA)
"RTN","PXRMDEDT",95,0)
 ;I '$D(DUOUT)&($G(D1)'="") D  Q
"RTN","PXRMDEDT",96,0)
 I $G(D1)'="" D
"RTN","PXRMDEDT",97,0)
 . I $P($G(^PXRMD(801.41,DA,10,D1,0)),U,2)="" D  Q
"RTN","PXRMDEDT",98,0)
 . . S DA(1)=DA,DA=D1 Q:'DA
"RTN","PXRMDEDT",99,0)
 . . S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDT",100,0)
 . . D ^DIK
"RTN","PXRMDEDT",101,0)
 . . ;S VALMBG=1
"RTN","PXRMDEDT",102,0)
 I $D(DUOUT) S VALMBG=1 Q
"RTN","PXRMDEDT",103,0)
 I '$D(DA) D  Q
"RTN","PXRMDEDT",104,0)
 .;Clear any pointers from #811.9
"RTN","PXRMDEDT",105,0)
 .I $D(PXRMDIEN) D PURGE(PXRMDIEN)
"RTN","PXRMDEDT",106,0)
 .;Option to delete components
"RTN","PXRMDEDT",107,0)
 .I $D(COMP) D DELETE^PXRMDEDX(.COMP)
"RTN","PXRMDEDT",108,0)
 .S VALMBCK="R"
"RTN","PXRMDEDT",109,0)
 ;
"RTN","PXRMDEDT",110,0)
 ;Update edit history
"RTN","PXRMDEDT",111,0)
 I (TYP'="R") D
"RTN","PXRMDEDT",112,0)
 .S CS2=$$FILE^PXRMEXCS(801.41,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMDEDT",113,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",114,0)
 .D SEHIST^PXRMUTIL(801.41,DIC,DA)
"RTN","PXRMDEDT",115,0)
 ;
"RTN","PXRMDEDT",116,0)
 ;Redisplay changes (reminder dialog option only)
"RTN","PXRMDEDT",117,0)
 I PXRMGTYP="DLG",TYP="R" D
"RTN","PXRMDEDT",118,0)
 .;Get name of reminder dialog again
"RTN","PXRMDEDT",119,0)
 .S Y=$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",120,0)
 .;Format headings to include dialog name
"RTN","PXRMDEDT",121,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_$P(Y,U)
"RTN","PXRMDEDT",122,0)
 .;Check if the set is disable and add to header if disabled
"RTN","PXRMDEDT",123,0)
 .I $P(^PXRMD(801.41,DA,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDEDT",124,0)
 .;Reset header in case name has changed
"RTN","PXRMDEDT",125,0)
 .S VALMHDR(1)=PXRMHD
"RTN","PXRMDEDT",126,0)
 Q
"RTN","PXRMDEDT",127,0)
 ;
"RTN","PXRMDEDT",128,0)
 ;Add SINGLE dialog element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",129,0)
 ;-------------------------
"RTN","PXRMDEDT",130,0)
ESEL(PXRMDIEN,SEL) ;
"RTN","PXRMDEDT",131,0)
 N DA,DIC,DLAYGO,DNEW,DTOUT,DUOUT,DTYP,Y
"RTN","PXRMDEDT",132,0)
 ;
"RTN","PXRMDEDT",133,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",134,0)
 S DLAYGO="801.41"
"RTN","PXRMDEDT",135,0)
 ;Set the starting place for additions.
"RTN","PXRMDEDT",136,0)
 D SETSTART^PXRMCOPY(DIC)
"RTN","PXRMDEDT",137,0)
 S DIC(0)="AEMQL"
"RTN","PXRMDEDT",138,0)
 S DIC("A")="Select new DIALOG ELEMENT: "
"RTN","PXRMDEDT",139,0)
 S DIC("S")="I ""EGPF""[$P(^PXRMD(801.41,Y,0),U,4)"
"RTN","PXRMDEDT",140,0)
 S DIC("DR")="4///E"
"RTN","PXRMDEDT",141,0)
 W !
"RTN","PXRMDEDT",142,0)
 D ^DIC
"RTN","PXRMDEDT",143,0)
 I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",144,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",145,0)
 I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",146,0)
 S DA=$P(Y,U,1) Q:'DA
"RTN","PXRMDEDT",147,0)
 S DNEW=$P(Y,U,3)
"RTN","PXRMDEDT",148,0)
 ;Group points to itself
"RTN","PXRMDEDT",149,0)
 I 'DNEW,$$VGROUP(DA,PXRMDIEN) Q
"RTN","PXRMDEDT",150,0)
 ;Add to dialog
"RTN","PXRMDEDT",151,0)
 D EADD(SEL,DA,PXRMDIEN)
"RTN","PXRMDEDT",152,0)
 ;Determine dialog type
"RTN","PXRMDEDT",153,0)
 S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",154,0)
 ;
"RTN","PXRMDEDT",155,0)
 ;Edit Dialog
"RTN","PXRMDEDT",156,0)
 I DNEW D EDIT(DTYP,DA)
"RTN","PXRMDEDT",157,0)
 Q
"RTN","PXRMDEDT",158,0)
 ;
"RTN","PXRMDEDT",159,0)
 ;Update dialog component multiple
"RTN","PXRMDEDT",160,0)
 ;--------------------------------
"RTN","PXRMDEDT",161,0)
EADD(SEL,NSUB,PXRMDIEN) ;
"RTN","PXRMDEDT",162,0)
 N ERRMSG,FDAIEN,FDA,IENS
"RTN","PXRMDEDT",163,0)
 S IENS="+2,"_PXRMDIEN_","
"RTN","PXRMDEDT",164,0)
 S FDA(801.412,IENS,.01)=SEL
"RTN","PXRMDEDT",165,0)
 S FDA(801.412,IENS,2)=NSUB
"RTN","PXRMDEDT",166,0)
 D UPDATE^DIE("","FDA","FDAIEN","ERRMSG")
"RTN","PXRMDEDT",167,0)
 I $D(MSG) D AWRITE^PXRMUTIL("ERRMSG")
"RTN","PXRMDEDT",168,0)
 Q
"RTN","PXRMDEDT",169,0)
 ;
"RTN","PXRMDEDT",170,0)
 ;Change Dialog Element Type
"RTN","PXRMDEDT",171,0)
 ;--------------------------
"RTN","PXRMDEDT",172,0)
NTYP(TYP) ;
"RTN","PXRMDEDT",173,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",174,0)
 S DIR(0)="SA"_U_"E:Element;"
"RTN","PXRMDEDT",175,0)
 S DIR(0)=DIR(0)_"G:Group;"
"RTN","PXRMDEDT",176,0)
 S DIR("A")="Dialog Element Type: "
"RTN","PXRMDEDT",177,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",178,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",179,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(3)"
"RTN","PXRMDEDT",180,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",181,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",182,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",183,0)
 S TYP=Y
"RTN","PXRMDEDT",184,0)
 Q
"RTN","PXRMDEDT",185,0)
 ;
"RTN","PXRMDEDT",186,0)
 ;Clear pointers from the reminder file and process ID file
"RTN","PXRMDEDT",187,0)
 ;---------------------------------------------------------
"RTN","PXRMDEDT",188,0)
PURGE(DIEN) ;
"RTN","PXRMDEDT",189,0)
 ;Purge pointers to this dialog from reminder file
"RTN","PXRMDEDT",190,0)
 N RIEN
"RTN","PXRMDEDT",191,0)
 S RIEN=0
"RTN","PXRMDEDT",192,0)
 F  S RIEN=$O(^PXD(811.9,"AG",DIEN,RIEN)) Q:'RIEN  D
"RTN","PXRMDEDT",193,0)
 .K ^PXD(811.9,RIEN,51),^PXD(811.9,"AG",DIEN,RIEN)
"RTN","PXRMDEDT",194,0)
 ;
"RTN","PXRMDEDT",195,0)
 Q
"RTN","PXRMDEDT",196,0)
 ;
"RTN","PXRMDEDT",197,0)
VGROUP(DA,IEN) ;Check dialog index to see if group will point to itself 
"RTN","PXRMDEDT",198,0)
 N FOUND
"RTN","PXRMDEDT",199,0)
 S FOUND=0
"RTN","PXRMDEDT",200,0)
 ;
"RTN","PXRMDEDT",201,0)
 ;Only do check if dialog is a group
"RTN","PXRMDEDT",202,0)
 I $P($G(^PXRMD(801.41,DA,0)),U,4)'="G" Q FOUND
"RTN","PXRMDEDT",203,0)
 ;
"RTN","PXRMDEDT",204,0)
 ;Group cannot be added to itself
"RTN","PXRMDEDT",205,0)
 I DA=IEN D  Q FOUND
"RTN","PXRMDEDT",206,0)
 .S FOUND=1
"RTN","PXRMDEDT",207,0)
 .W !,"A group cannot be added to itself" H 2
"RTN","PXRMDEDT",208,0)
 ;
"RTN","PXRMDEDT",209,0)
 ;IEN is the dialog group being added to 
"RTN","PXRMDEDT",210,0)
 D VGROUP1(DA,IEN)
"RTN","PXRMDEDT",211,0)
 Q FOUND
"RTN","PXRMDEDT",212,0)
 ;
"RTN","PXRMDEDT",213,0)
VGROUP1(DA,DIEN) ;Examine all parent dialogs
"RTN","PXRMDEDT",214,0)
 ;
"RTN","PXRMDEDT",215,0)
 ;End search if already found
"RTN","PXRMDEDT",216,0)
 Q:FOUND
"RTN","PXRMDEDT",217,0)
 ;
"RTN","PXRMDEDT",218,0)
 ;Check if dialog being added is a parent at this level
"RTN","PXRMDEDT",219,0)
 I $D(^PXRMD(801.41,"AD",DIEN,DA)) D  Q
"RTN","PXRMDEDT",220,0)
 .S FOUND=1
"RTN","PXRMDEDT",221,0)
 .W !,"A group cannot be added as it's own descendant" H 2
"RTN","PXRMDEDT",222,0)
 ;
"RTN","PXRMDEDT",223,0)
 ;If not look at other parents
"RTN","PXRMDEDT",224,0)
 N SUB
"RTN","PXRMDEDT",225,0)
 S SUB=0
"RTN","PXRMDEDT",226,0)
 F  S SUB=$O(^PXRMD(801.41,"AD",DIEN,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMDEDT",227,0)
 .;Ignore reminder dialogs
"RTN","PXRMDEDT",228,0)
 .I $P($G(^PXRMD(801.41,SUB,0)),U,4)'="G" Q
"RTN","PXRMDEDT",229,0)
 .;Repeat check on other parents
"RTN","PXRMDEDT",230,0)
 .D VGROUP1(DA,SUB)
"RTN","PXRMDEDT",231,0)
 Q
"RTN","PXRMDEDT",232,0)
 ;
"RTN","PXRMDEDT",233,0)
HELP(CALL) ;General help text routine
"RTN","PXRMDEDT",234,0)
 N HTEXT
"RTN","PXRMDEDT",235,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDT",236,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDT",237,0)
 ;
"RTN","PXRMDEDT",238,0)
 I CALL=1 D
"RTN","PXRMDEDT",239,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDT",240,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDT",241,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDT",242,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDT",243,0)
 I CALL=2 D
"RTN","PXRMDEDT",244,0)
 .S HTEXT(1)="Enter Y to copy the current dialog element to a new name"
"RTN","PXRMDEDT",245,0)
 .S HTEXT(2)="and then use this new element in the reminder dialog."
"RTN","PXRMDEDT",246,0)
 I CALL=3 D
"RTN","PXRMDEDT",247,0)
 .S HTEXT(1)="Enter G to change the current dialog element into a dialog"
"RTN","PXRMDEDT",248,0)
 .S HTEXT(2)="group so that additional elements can be added. Enter E to"
"RTN","PXRMDEDT",249,0)
 .S HTEXT(3)="leave the type of the dialog element unchanged."
"RTN","PXRMDEDT",250,0)
 I CALL=4 D
"RTN","PXRMDEDT",251,0)
 .S HTEXT(1)="Enter Y to change the dialog prompt created into a forced"
"RTN","PXRMDEDT",252,0)
 .S HTEXT(2)="value. To edit the new forced value switch to the forced"
"RTN","PXRMDEDT",253,0)
 .S HTEXT(3)="value screen using CV. This option only applies to prompts"
"RTN","PXRMDEDT",254,0)
 .S HTEXT(4)="which update PCE or vitals."
"RTN","PXRMDEDT",255,0)
 .S HTEXT(5)="Enter N to leave the dialog prompt unchanged."
"RTN","PXRMDEDT",256,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",257,0)
 S IC=""
"RTN","PXRMDEDT",258,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDT",259,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDT",260,0)
 . D ^DIWP
"RTN","PXRMDEDT",261,0)
 W !
"RTN","PXRMDEDT",262,0)
 S IC=0
"RTN","PXRMDEDT",263,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDT",264,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDT",265,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",266,0)
 W !
"RTN","PXRMDEDT",267,0)
 Q
"RTN","PXRMDEDT",268,0)
 ;
"RTN","PXRMDEDT",269,0)
LOCK(DA) ;Lock the record
"RTN","PXRMDEDT",270,0)
 N OK
"RTN","PXRMDEDT",271,0)
 S OK=1
"RTN","PXRMDEDT",272,0)
 I '$$VEDIT^PXRMUTIL("^PXRMD(801.41,",DA) D
"RTN","PXRMDEDT",273,0)
 .N DTYP
"RTN","PXRMDEDT",274,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",275,0)
 .;Allow limit edit of Result Elements that are not lock
"RTN","PXRMDEDT",276,0)
 .I DTYP="T",+$P($G(^PXRMD(801.41,DA,100)),U,4)=0 Q
"RTN","PXRMDEDT",277,0)
 .;Allow edit of findings but not component multiple on groups 
"RTN","PXRMDEDT",278,0)
 .I DTYP="G",$G(PXRMDIEN),DA'=PXRMDIEN Q
"RTN","PXRMDEDT",279,0)
 .I DTYP="G",$G(PXRMGTYP)="DLGE" Q
"RTN","PXRMDEDT",280,0)
 .;Allow edit of element findings
"RTN","PXRMDEDT",281,0)
 .I DTYP="E" Q
"RTN","PXRMDEDT",282,0)
 .S OK=0
"RTN","PXRMDEDT",283,0)
 .W !!,?5,"VA- and national class reminder dialogs may not be edited" H 2
"RTN","PXRMDEDT",284,0)
 I 'OK Q 0
"RTN","PXRMDEDT",285,0)
 ;
"RTN","PXRMDEDT",286,0)
 L +^PXRMD(801.41,DA):0 I  Q 1
"RTN","PXRMDEDT",287,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMDEDT",288,0)
 ;
"RTN","PXRMDEDT",289,0)
PROMPT(IEN) ;
"RTN","PXRMDEDT",290,0)
 N DIE,DR
"RTN","PXRMDEDT",291,0)
 S DIE="^PXRMD(801.41,",DA=IEN
"RTN","PXRMDEDT",292,0)
 S DR=".01;3;100;101;102;24;23;21"
"RTN","PXRMDEDT",293,0)
 S IEN=$G(^PXRMD(801.41,IEN,46)) I $G(IEN)="" G EX
"RTN","PXRMDEDT",294,0)
 I $P($G(^PXRMD(801.42,IEN,0)),U)="COM" S DR=DR_";45"
"RTN","PXRMDEDT",295,0)
EX ;
"RTN","PXRMDEDT",296,0)
 D ^DIE
"RTN","PXRMDEDT",297,0)
 Q
"RTN","PXRMDEDT",298,0)
 ;
"RTN","PXRMDEDT",299,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMDEDT",300,0)
 L -^PXRMD(801.41,DA)
"RTN","PXRMDEDT",301,0)
 Q
"RTN","PXRMDEV")
0^4^B28974848
"RTN","PXRMDEV",1,0)
PXRMDEV ; SLC/PKR - This is a driver for testing Clinical Reminders.;10/20/2009
"RTN","PXRMDEV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,11,16**;Feb 04, 2005;Build 119
"RTN","PXRMDEV",3,0)
 ;
"RTN","PXRMDEV",4,0)
 ;==================================================
"RTN","PXRMDEV",5,0)
CMOUT ;Do formatted Clinical Maintenance output.
"RTN","PXRMDEV",6,0)
 N DUE,DUECOL,HIST,LAST,LASTCOL,LNUM,RIEN,RNAME,STATUS,STATCOL,TEMP,TYPE
"RTN","PXRMDEV",7,0)
 W !!,"Formatted Output:"
"RTN","PXRMDEV",8,0)
 S RIEN=$O(^TMP("PXRHM",$J,""))
"RTN","PXRMDEV",9,0)
 S RNAME=$O(^TMP("PXRHM",$J,RIEN,""))
"RTN","PXRMDEV",10,0)
 S TEMP=$G(^TMP("PXRHM",$J,RIEN,RNAME))
"RTN","PXRMDEV",11,0)
 S STATUS=$P(TEMP,U,1)
"RTN","PXRMDEV",12,0)
 S DUE=$$EDATE^PXRMDATE($P(TEMP,U,2))
"RTN","PXRMDEV",13,0)
 S LAST=$$EDATE^PXRMDATE($P(TEMP,U,3))
"RTN","PXRMDEV",14,0)
 S STATCOL=41-($L(STATUS)/2)
"RTN","PXRMDEV",15,0)
 S DUECOL=53-($L(DUE)/2)
"RTN","PXRMDEV",16,0)
 S LASTCOL=67-($L(LAST)/2)
"RTN","PXRMDEV",17,0)
 W !!,?36,"--STATUS--",?47,"--DUE DATE--",?61,"--LAST DONE--",!
"RTN","PXRMDEV",18,0)
 W !,RNAME,?STATCOL,STATUS,?DUECOL,DUE,?LASTCOL,LAST,!
"RTN","PXRMDEV",19,0)
 S LNUM=0
"RTN","PXRMDEV",20,0)
 F  S LNUM=$O(^TMP("PXRHM",$J,RIEN,RNAME,"TXT",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",21,0)
 . W !,^TMP("PXRHM",$J,RIEN,RNAME,"TXT",LNUM)
"RTN","PXRMDEV",22,0)
 Q
"RTN","PXRMDEV",23,0)
 ;
"RTN","PXRMDEV",24,0)
 ;==================================================
"RTN","PXRMDEV",25,0)
DEB ;Prompt for patient and reminder by name input component.
"RTN","PXRMDEV",26,0)
 N DATE,DFN,DIC,DIR,DIROUT,DTOUT,DUOUT,PXRMITEM,PXRHM,PXRMTDEB,X,Y
"RTN","PXRMDEV",27,0)
 S DIC=2,DIC("A")="Select Patient: "
"RTN","PXRMDEV",28,0)
 S DIC(0)="AEQMZ"
"RTN","PXRMDEV",29,0)
 D ^DIC
"RTN","PXRMDEV",30,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",31,0)
 S DFN=+$P(Y,U,1)
"RTN","PXRMDEV",32,0)
 I DFN=-1 W !,"No patient selected!" Q
"RTN","PXRMDEV",33,0)
 S DIC=811.9,DIC("A")="Select Reminder: "
"RTN","PXRMDEV",34,0)
 D ^DIC
"RTN","PXRMDEV",35,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",36,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",37,0)
 S PXRMITEM=+$P(Y,U,1)
"RTN","PXRMDEV",38,0)
 I PXRMITEM=-1 W !,"No reminder selected!" Q
"RTN","PXRMDEV",39,0)
 S DIR(0)="LA"_U_"0"
"RTN","PXRMDEV",40,0)
 S DIR("A")="Enter component number 0, 1, 5, 10, 11, 12, 55: "
"RTN","PXRMDEV",41,0)
 D ^DIR
"RTN","PXRMDEV",42,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",43,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",44,0)
 I X="" S X=5
"RTN","PXRMDEV",45,0)
 S PXRHM=X
"RTN","PXRMDEV",46,0)
 S DIR(0)="DA^"_0_"::ETX"
"RTN","PXRMDEV",47,0)
 S DIR("A")="Enter date for reminder evaluation: "
"RTN","PXRMDEV",48,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMDEV",49,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMDEV",50,0)
 W !
"RTN","PXRMDEV",51,0)
 D ^DIR K DIR
"RTN","PXRMDEV",52,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",53,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",54,0)
 S DATE=Y
"RTN","PXRMDEV",55,0)
 I $D(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,")) S PXRMTDEB=$$ASKYN^PXRMEUT("N","Display all term findings","","")
"RTN","PXRMDEV",56,0)
 D DOREM(DFN,PXRMITEM,PXRHM,DATE)
"RTN","PXRMDEV",57,0)
 Q
"RTN","PXRMDEV",58,0)
 ;
"RTN","PXRMDEV",59,0)
 ;==================================================
"RTN","PXRMDEV",60,0)
DEV ;Prompt for patient and reminder by name and evaluation date.
"RTN","PXRMDEV",61,0)
 N DATE,DFN,DIC,DIROUT,DIRUT,DTOUT,DUOUT,PXRMITEM,PXRHM,PXRMTDEB,REF,X,Y
"RTN","PXRMDEV",62,0)
 S DIC=2,DIC("A")="Select Patient: "
"RTN","PXRMDEV",63,0)
 S DIC(0)="AEQMZ"
"RTN","PXRMDEV",64,0)
 D ^DIC
"RTN","PXRMDEV",65,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",66,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",67,0)
 S DFN=+$P(Y,U,1)
"RTN","PXRMDEV",68,0)
 S DIC=811.9,DIC("A")="Select Reminder: "
"RTN","PXRMDEV",69,0)
 D ^DIC
"RTN","PXRMDEV",70,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",71,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",72,0)
 S PXRMITEM=+$P(Y,U,1)
"RTN","PXRMDEV",73,0)
 S PXRHM=5
"RTN","PXRMDEV",74,0)
 S DIR(0)="DA^"_0_"::ETX"
"RTN","PXRMDEV",75,0)
 S DIR("A")="Enter date for reminder evaluation: "
"RTN","PXRMDEV",76,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMDEV",77,0)
 S DIR("PRE")="S X=$$DCHECK^PXRMDATE(X) K:X=-1 X"
"RTN","PXRMDEV",78,0)
 W !
"RTN","PXRMDEV",79,0)
 D ^DIR K DIR
"RTN","PXRMDEV",80,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMDEV",81,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","PXRMDEV",82,0)
 S DATE=Y
"RTN","PXRMDEV",83,0)
 I $D(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.5,")) S PXRMTDEB=$$ASKYN^PXRMEUT("N","Display all term findings","","")
"RTN","PXRMDEV",84,0)
 D DOREM(DFN,PXRMITEM,PXRHM,DATE)
"RTN","PXRMDEV",85,0)
 Q
"RTN","PXRMDEV",86,0)
 ;
"RTN","PXRMDEV",87,0)
 ;==================================================
"RTN","PXRMDEV",88,0)
DOREM(DFN,PXRMITEM,PXRMHM,DATE) ;Do the reminder
"RTN","PXRMDEV",89,0)
 N DEFARR,FIEVAL,FINDING,PXRMDEBG,PXRMID,REF,TFIEVAL
"RTN","PXRMDEV",90,0)
 ;This is a debugging run so set PXRMDEBG.
"RTN","PXRMDEV",91,0)
 S PXRMDEBG=1
"RTN","PXRMDEV",92,0)
 D DEF^PXRMLDR(PXRMITEM,.DEFARR)
"RTN","PXRMDEV",93,0)
 I +$G(DATE)=0 D EVAL^PXRM(DFN,.DEFARR,PXRHM,1,.FIEVAL)
"RTN","PXRMDEV",94,0)
 I +$G(DATE)>0 D EVAL^PXRM(DFN,.DEFARR,PXRHM,1,.FIEVAL,DATE)
"RTN","PXRMDEV",95,0)
 ;
"RTN","PXRMDEV",96,0)
 I $D(^TMP("PXRMFFDEB",$J)) M FIEVAL=^TMP("PXRMFFDEB",$J) K ^TMP("PXRMFFDEB",$J)
"RTN","PXRMDEV",97,0)
 ;
"RTN","PXRMDEV",98,0)
 W !!,"The elements of the FIEVAL array are:"
"RTN","PXRMDEV",99,0)
 S REF="FIEVAL"
"RTN","PXRMDEV",100,0)
 D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",101,0)
 ;
"RTN","PXRMDEV",102,0)
 I $G(PXRMTDEB) D
"RTN","PXRMDEV",103,0)
 . W !!,"Term findings:"
"RTN","PXRMDEV",104,0)
 . S REF="TFIEVAL"
"RTN","PXRMDEV",105,0)
 . S FINDING=0
"RTN","PXRMDEV",106,0)
 . F  S FINDING=$O(^TMP("PXRMTDEB",$J,FINDING)) Q:FINDING=""  D
"RTN","PXRMDEV",107,0)
 .. K TFIEVAL M TFIEVAL(FINDING)=^TMP("PXRMTDEB",$J,FINDING)
"RTN","PXRMDEV",108,0)
 .. W !,"Finding ",FINDING,":"
"RTN","PXRMDEV",109,0)
 .. D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",110,0)
 . K ^TMP("PXRMTDEB",$J)
"RTN","PXRMDEV",111,0)
 ;
"RTN","PXRMDEV",112,0)
 W !!,"The elements of the ^TMP(PXRMID,$J) array are:"
"RTN","PXRMDEV",113,0)
 I $D(PXRMID) S REF="^TMP(PXRMID,$J)" D AWRITE^PXRMUTIL(REF) K ^TMP(PXRMID,$J)
"RTN","PXRMDEV",114,0)
 ;
"RTN","PXRMDEV",115,0)
 W !!,"The elements of the ^TMP(""PXRHM"",$J) array are:"
"RTN","PXRMDEV",116,0)
 S REF="^TMP(""PXRHM"",$J)"
"RTN","PXRMDEV",117,0)
 D AWRITE^PXRMUTIL(REF)
"RTN","PXRMDEV",118,0)
 ;
"RTN","PXRMDEV",119,0)
 I $D(^TMP("PXRHM",$J)) D CMOUT
"RTN","PXRMDEV",120,0)
 I PXRHM=12 D MHVCOUT
"RTN","PXRMDEV",121,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J),^TMP("PXRMMHVC",$J)
"RTN","PXRMDEV",122,0)
 Q
"RTN","PXRMDEV",123,0)
 ;
"RTN","PXRMDEV",124,0)
 ;==================================================
"RTN","PXRMDEV",125,0)
MHVCOUT ;Do formatted MHV combined output.
"RTN","PXRMDEV",126,0)
 N DUE,DUECOL,HIST,LAST,LASTCOL,LNUM,RIEN,RNAME,STATUS,STATCOL,TEMP,TYPE
"RTN","PXRMDEV",127,0)
 W !!,"Formatted Output:"
"RTN","PXRMDEV",128,0)
 S RIEN=$O(^TMP("PXRMMHVC",$J,""))
"RTN","PXRMDEV",129,0)
 S TEMP=^TMP("PXRMMHVC",$J,RIEN,"STATUS")
"RTN","PXRMDEV",130,0)
 S STATUS=$P(TEMP,U,1)
"RTN","PXRMDEV",131,0)
 S DUE=$$EDATE^PXRMDATE($P(TEMP,U,2))
"RTN","PXRMDEV",132,0)
 S LAST=$$EDATE^PXRMDATE($P(TEMP,U,3))
"RTN","PXRMDEV",133,0)
 S DUE=$$EDATE^PXRMDATE($P(TEMP,U,2))
"RTN","PXRMDEV",134,0)
 S LAST=$$EDATE^PXRMDATE($P(TEMP,U,3))
"RTN","PXRMDEV",135,0)
 S STATCOL=41-($L(STATUS)/2)
"RTN","PXRMDEV",136,0)
 S DUECOL=53-($L(DUE)/2)
"RTN","PXRMDEV",137,0)
 S LASTCOL=67-($L(LAST)/2)
"RTN","PXRMDEV",138,0)
 S RNAME=$P(^PXD(811.9,RIEN,0),U,3)
"RTN","PXRMDEV",139,0)
 I RNAME="" S RNAME=$P(^PXD(811.9,RIEN,0),U,1)
"RTN","PXRMDEV",140,0)
 W !!,?36,"--STATUS--",?47,"--DUE DATE--",?61,"--LAST DONE--",!
"RTN","PXRMDEV",141,0)
 W !,RNAME,?STATCOL,STATUS,?DUECOL,DUE,?LASTCOL,LAST,!
"RTN","PXRMDEV",142,0)
 W !!,"---------- Detailed Output ----------"
"RTN","PXRMDEV",143,0)
 S LNUM=0
"RTN","PXRMDEV",144,0)
 F  S LNUM=$O(^TMP("PXRMMHVC",$J,RIEN,"DETAIL",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",145,0)
 . W !,^TMP("PXRMMHVC",$J,RIEN,"DETAIL",LNUM)
"RTN","PXRMDEV",146,0)
 W !!,"---------- Summary Output ----------"
"RTN","PXRMDEV",147,0)
 S LNUM=0
"RTN","PXRMDEV",148,0)
 F  S LNUM=$O(^TMP("PXRMMHVC",$J,RIEN,"SUMMARY",LNUM)) Q:LNUM=""  D
"RTN","PXRMDEV",149,0)
 . W !,^TMP("PXRMMHVC",$J,RIEN,"SUMMARY",LNUM)
"RTN","PXRMDEV",150,0)
 Q
"RTN","PXRMDEV",151,0)
 ;
"RTN","PXRMDLG4")
0^19^B92764011
"RTN","PXRMDLG4",1,0)
PXRMDLG4 ; SLC/PJH - Reminder Dialog Edit/Inquiry ;01/18/2010
"RTN","PXRMDLG4",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,6,12,16**;Feb 04, 2005;Build 119
"RTN","PXRMDLG4",3,0)
 ;
"RTN","PXRMDLG4",4,0)
WP(SUB,SUB1,WIDTH,SEQ,VALMCNT) ;Format WP text
"RTN","PXRMDLG4",5,0)
 N DIWF,DIWL,DIWR,IC,TEXT,X,TXTCNT,DTXT,CNT,SUB2
"RTN","PXRMDLG4",6,0)
 S (CNT,SUB2,TXTCNT)=0
"RTN","PXRMDLG4",7,0)
 F  S SUB2=$O(^PXRMD(801.41,SUB,SUB1,SUB2)) Q:'SUB2  D
"RTN","PXRMDLG4",8,0)
 .S TXTCNT=TXTCNT+1,DTXT(TXTCNT)=$G(^PXRMD(801.41,SUB,SUB1,SUB2,0))
"RTN","PXRMDLG4",9,0)
 .S DTXT(TXTCNT)=$$STRREP^PXRMUTIL($G(DTXT(TXTCNT)),"<br>","\\")
"RTN","PXRMDLG4",10,0)
 I TXTCNT>0 D
"RTN","PXRMDLG4",11,0)
 .N OUTPUT,NLINES
"RTN","PXRMDLG4",12,0)
 .S NLINES=0 D FORMAT^PXRMTEXT(1,WIDTH,TXTCNT,.DTXT,.NLINES,.OUTPUT)
"RTN","PXRMDLG4",13,0)
 .I NLINES>0 K DTXT M DTXT=OUTPUT
"RTN","PXRMDLG4",14,0)
 S CNT=0
"RTN","PXRMDLG4",15,0)
 F  S CNT=$O(DTXT(CNT)) Q:CNT=""  D
"RTN","PXRMDLG4",16,0)
 .S TEXT=$G(DTXT(CNT)),VALMCNT=VALMCNT+1
"RTN","PXRMDLG4",17,0)
 .S ^TMP(NODE,$J,VALMCNT,0)=SEQ_TEXT,SEQ=$J("",$L(SEQ))
"RTN","PXRMDLG4",18,0)
 Q
"RTN","PXRMDLG4",19,0)
 ;
"RTN","PXRMDLG4",20,0)
ADD ;PXRM DIALOG ADD ELEMENT validation
"RTN","PXRMDLG4",21,0)
 N ANS,DTOUT,DUOUT,LIT,LOCK,Y,PIEN,ERR,IEN,NATIONAL,SEQ
"RTN","PXRMDLG4",22,0)
 W IORESET
"RTN","PXRMDLG4",23,0)
 S VALMBCK="R",NATIONAL=0
"RTN","PXRMDLG4",24,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,100)),U)="N" S NATIONAL=1
"RTN","PXRMDLG4",25,0)
 S LOCK=$P($G(^PXRMD(801.41,PXRMDIEN,100)),U,4)
"RTN","PXRMDLG4",26,0)
 I NATIONAL,'($G(PXRMINST)=1)&(DUZ(0)="@"),$G(LOCK)'=1 D  Q
"RTN","PXRMDLG4",27,0)
 .W !,"Elements may not be added to national reminder dialogs" H 2
"RTN","PXRMDLG4",28,0)
 ;
"RTN","PXRMDLG4",29,0)
 F  D SEQ(.SEQ,.PIEN) Q:$D(DUOUT)!$D(DTOUT)  Q:SEQ
"RTN","PXRMDLG4",30,0)
 Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDLG4",31,0)
 ;
"RTN","PXRMDLG4",32,0)
 ;Check if sequence number is OK
"RTN","PXRMDLG4",33,0)
 I $G(PIEN)="" Q
"RTN","PXRMDLG4",34,0)
 S ANS="N" D ASK^PXRMDLG5(.ANS,PIEN) Q:$D(DUOUT)!$D(DTOUT)!($G(ANS)="N")
"RTN","PXRMDLG4",35,0)
 ;
"RTN","PXRMDLG4",36,0)
 ;Select a dialog element to add to parent dialog (PIEN)
"RTN","PXRMDLG4",37,0)
 ;PIEN may be dialog or a group within the dialog
"RTN","PXRMDLG4",38,0)
 D ESEL^PXRMDEDT(PIEN,SEQ)
"RTN","PXRMDLG4",39,0)
 ;Rebuild workfile
"RTN","PXRMDLG4",40,0)
 D BUILD^PXRMDLG(PXRMMODE)
"RTN","PXRMDLG4",41,0)
 Q
"RTN","PXRMDLG4",42,0)
 ;
"RTN","PXRMDLG4",43,0)
FADD(DIEN,FTAB) ;Additional Findings
"RTN","PXRMDLG4",44,0)
 N FIND,FSUB,FTYP,FNAME,FNUM
"RTN","PXRMDLG4",45,0)
 S FSUB=0
"RTN","PXRMDLG4",46,0)
 F  S FSUB=$O(^PXRMD(801.41,DIEN,3,FSUB)) Q:'FSUB  D
"RTN","PXRMDLG4",47,0)
 .S FIND=$P($G(^PXRMD(801.41,DIEN,3,FSUB,0)),U) Q:FIND=""
"RTN","PXRMDLG4",48,0)
 .S FNAME="" D FDESC(FIND) Q:FNAME=""
"RTN","PXRMDLG4",49,0)
 .;Save additional finding name
"RTN","PXRMDLG4",50,0)
 .S FOUND=1 D FSAVE(2,FNAME,FTYP,FTAB,FIND)
"RTN","PXRMDLG4",51,0)
 Q
"RTN","PXRMDLG4",52,0)
 ;
"RTN","PXRMDLG4",53,0)
DETAIL(DIEN,LEV,VIEW,NODE) ;;Build listman global for all components
"RTN","PXRMDLG4",54,0)
 N DDATA,DDLG,DEND,DCIEN,DNAM,DSEQ,DSTRT,IND,JND,DSUB
"RTN","PXRMDLG4",55,0)
 S DSEQ=0
"RTN","PXRMDLG4",56,0)
 ;
"RTN","PXRMDLG4",57,0)
 ;Get each sequence number
"RTN","PXRMDLG4",58,0)
 F  S DSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLG4",59,0)
 .;Determine subscript
"RTN","PXRMDLG4",60,0)
 .S DSUB=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLG4",61,0)
 .;Get ien of prompt/component
"RTN","PXRMDLG4",62,0)
 .S DCIEN=$P($G(^PXRMD(801.41,DIEN,10,DSUB,0)),U,2) Q:'DCIEN
"RTN","PXRMDLG4",63,0)
 .I "PF"[$P($G(^PXRMD(801.41,DCIEN,0)),U,4) D  Q
"RTN","PXRMDLG4",64,0)
 ..S ^TMP("PXRMDLG4",$J,"IEN",NSEL)=DIEN_U_DSEQ
"RTN","PXRMDLG4",65,0)
 ..S ^TMP("PXRMDLG4",$J,"SEQ",LEV_DSEQ)=DCIEN
"RTN","PXRMDLG4",66,0)
 .;Save line in workfile
"RTN","PXRMDLG4",67,0)
 .D DLINE(DCIEN,LEV,DSEQ,NODE)
"RTN","PXRMDLG4",68,0)
 .;Build pointers back to parent
"RTN","PXRMDLG4",69,0)
 .I VIEW'=4 D
"RTN","PXRMDLG4",70,0)
 ..S ^TMP("PXRMDLG4",$J,"IEN",NSEL)=DIEN_U_DSEQ
"RTN","PXRMDLG4",71,0)
 ..S ^TMP("PXRMDLG4",$J,"SEQ",LEV_DSEQ)=DCIEN
"RTN","PXRMDLG4",72,0)
 .;Process any sub-components
"RTN","PXRMDLG4",73,0)
 .I VIEW<5 D DETAIL(DCIEN,LEV_DSEQ_".",VIEW,NODE)
"RTN","PXRMDLG4",74,0)
 Q
"RTN","PXRMDLG4",75,0)
 ;
"RTN","PXRMDLG4",76,0)
DLINE(DIEN,LEV,DSEQ,NODE) ;Save individual component details
"RTN","PXRMDLG4",77,0)
 N CNT,DBOX,DCAP,DDIS,DMULT,DSUPP,DSHOW,DTYP,DTXT
"RTN","PXRMDLG4",78,0)
 N IC,RESNM,RESULT,RIEN,RNAME,RCNT
"RTN","PXRMDLG4",79,0)
 ;Dialog name
"RTN","PXRMDLG4",80,0)
 S DDATA=$G(^PXRMD(801.41,DIEN,0)),DNAM=$P(DDATA,U) Q:DNAM=""
"RTN","PXRMDLG4",81,0)
 ;Check if standard PXRM prompt
"RTN","PXRMDLG4",82,0)
 I $$PXRM^PXRMEXID(DNAM) Q
"RTN","PXRMDLG4",83,0)
 ;Dialog Type and Disabled
"RTN","PXRMDLG4",84,0)
 S DDIS=$P(DDATA,U,3),DTYP=$P(DDATA,U,4)
"RTN","PXRMDLG4",85,0)
 S DTYP=$S(DTYP="G":"Group",1:"Element"),DNAM=DTYP_": "_DNAM
"RTN","PXRMDLG4",86,0)
 I VIEW=5 S DNAM=DNAM
"RTN","PXRMDLG4",87,0)
 ;Resolution type and name
"RTN","PXRMDLG4",88,0)
 S RNAME="",RIEN=$P($G(^PXRMD(801.41,DIEN,1)),U,3)
"RTN","PXRMDLG4",89,0)
 I RIEN S RNAME=$P($G(^PXRMD(801.9,RIEN,0)),U)
"RTN","PXRMDLG4",90,0)
 ;
"RTN","PXRMDLG4",91,0)
 ;Group fields
"RTN","PXRMDLG4",92,0)
 I DTYP="Group" D
"RTN","PXRMDLG4",93,0)
 .S DGRP=1,DTXT=$P(DDATA,U,5),DCAP=" [group caption]"
"RTN","PXRMDLG4",94,0)
 .I DTXT="" S DCAP=""
"RTN","PXRMDLG4",95,0)
 .I DTXT]"" S DCAP=DTXT_" "_DCAP
"RTN","PXRMDLG4",96,0)
 .S DBOX=$S($P(DDATA,U,6)="Y":"BOX",1:"NO BOX")
"RTN","PXRMDLG4",97,0)
 .S DSUPP=$S($P(DDATA,U,11):"SUPPRESS",1:"NO SUPPRESS")
"RTN","PXRMDLG4",98,0)
 .S DSHOW=$S($P(DDATA,U,10):"HIDE",1:"SHOW")
"RTN","PXRMDLG4",99,0)
 .S DMULT=$P(DDATA,U,9)
"RTN","PXRMDLG4",100,0)
 .S DMULT=$S(DMULT=1:"ONE ONLY",DMULT=2:"ONE OR MORE",DMULT=3:"NONE OR ONE",DMULT=4:"ALL REQUIRED",1:"NO SELECTION")
"RTN","PXRMDLG4",101,0)
 ;
"RTN","PXRMDLG4",102,0)
 N DPTX,DTXT,EXIST,ITEM,TEMP,SEP,SEQ,TAB,ALTLEN
"RTN","PXRMDLG4",103,0)
 S NSEL=NSEL+1,NLINE=NLINE+1,ITEM=NSEL,SEP=$E(LEV,$L(LEV)),SEQ=LEV_DSEQ
"RTN","PXRMDLG4",104,0)
 ;Suppress Item numbers for INQ options
"RTN","PXRMDLG4",105,0)
 I VIEW=4 S ITEM=""
"RTN","PXRMDLG4",106,0)
 ;Otherwise display Item, Sequence and Dialog Name
"RTN","PXRMDLG4",107,0)
 S TEMP=$J(ITEM,4)_$J("",3)_SEQ,TAB=$L(TEMP)+2
"RTN","PXRMDLG4",108,0)
 S CNT=0 F IC=1:1 Q:'$P(SEQ,".",IC)  S:$P(SEQ,".",IC)<10 CNT=CNT+1
"RTN","PXRMDLG4",109,0)
 S TAB=TAB+CNT
"RTN","PXRMDLG4",110,0)
 ;
"RTN","PXRMDLG4",111,0)
 S ALTLEN=$L(TEMP)
"RTN","PXRMDLG4",112,0)
 ;Display dialog name
"RTN","PXRMDLG4",113,0)
 S TEMP=TEMP_$J("",2+CNT)_DNAM
"RTN","PXRMDLG4",114,0)
 ;Add disabled if present
"RTN","PXRMDLG4",115,0)
 I +DDIS>0 S TEMP=TEMP_" (Disabled)"
"RTN","PXRMDLG4",116,0)
 ;
"RTN","PXRMDLG4",117,0)
 S ^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",118,0)
 ;check for alternate dialog element/group
"RTN","PXRMDLG4",119,0)
 I VIEW<2!(VIEW>4) D
"RTN","PXRMDLG4",120,0)
 .I $D(^PXRMD(801.41,DIEN,49))>0 D ALT^PXRMDLG5(DIEN,LEV,DSEQ,NODE,VIEW,.NLINE,CNT,ALTLEN)
"RTN","PXRMDLG4",121,0)
 ;
"RTN","PXRMDLG4",122,0)
 ;Dialog Text or P/N Text
"RTN","PXRMDLG4",123,0)
 I (VIEW=2)!(VIEW=3)!(VIEW=4) D
"RTN","PXRMDLG4",124,0)
 .N DGBEG,DGSUB,TSUB
"RTN","PXRMDLG4",125,0)
 .S DGSUB=0,TSUB=$$TSUB^PXRMDLG1(DIEN,VIEW)
"RTN","PXRMDLG4",126,0)
 .I VIEW=4 S DGBEG=$J("",TAB)_"Text: "
"RTN","PXRMDLG4",127,0)
 .I VIEW'=4 S DGBEG=$J("",5+$L(SEQ)+CNT+$L(DTYP))_"Text: "
"RTN","PXRMDLG4",128,0)
 .D WP(DIEN,TSUB,65,.DGBEG,.NLINE)
"RTN","PXRMDLG4",129,0)
 .I DTYP="Group" D
"RTN","PXRMDLG4",130,0)
 ..S TEMP=DGBEG_"["_DBOX_", "_DSUPP_", "_DSHOW_", "_DMULT_"]"
"RTN","PXRMDLG4",131,0)
 ..S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",132,0)
 ;
"RTN","PXRMDLG4",133,0)
 ;Set up selection index
"RTN","PXRMDLG4",134,0)
 S ^TMP(NODE,$J,"IDX",NSEL,DIEN)=""
"RTN","PXRMDLG4",135,0)
 ;Insert finding items
"RTN","PXRMDLG4",136,0)
 I (VIEW=1)!(VIEW=4),("Element;Group"[DTYP) D
"RTN","PXRMDLG4",137,0)
 .N DSUB,FDATA,FILENUM,FLIT,FLONG,FNAME,FOUND,FREP,FTYP,TEMP
"RTN","PXRMDLG4",138,0)
 .;Findings
"RTN","PXRMDLG4",139,0)
 .S FNAME="",FOUND=0
"RTN","PXRMDLG4",140,0)
 .D FDESC($P($G(^PXRMD(801.41,DIEN,1)),U,5))
"RTN","PXRMDLG4",141,0)
 .I FNAME'="" S FOUND=1 D FSAVE(1,FNAME,FTYP,TAB)
"RTN","PXRMDLG4",142,0)
 .;Resolution
"RTN","PXRMDLG4",143,0)
 .I RNAME]"" D
"RTN","PXRMDLG4",144,0)
 ..S TEMP=$J("",TAB)_"Resolution: "_RNAME
"RTN","PXRMDLG4",145,0)
 ..S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",146,0)
 .;Result Group
"RTN","PXRMDLG4",147,0)
 .I VIEW=4 D
"RTN","PXRMDLG4",148,0)
 ..S RCNT=0 F  S RCNT=$O(^PXRMD(801.41,DIEN,51,RCNT)) Q:RCNT'>0  D
"RTN","PXRMDLG4",149,0)
 ...S RESULT=$P($G(^PXRMD(801.41,DIEN,51,RCNT,0)),U)
"RTN","PXRMDLG4",150,0)
 ...S RESNM=$P($G(^PXRMD(801.41,RESULT,0)),U) Q:RESNM=""
"RTN","PXRMDLG4",151,0)
 ...S TEMP=$J("",TAB)_"Result Group: "_RESNM
"RTN","PXRMDLG4",152,0)
 ...S NLINE=NLINE+1,^TMP(NODE,$J,NLINE,0)=TEMP
"RTN","PXRMDLG4",153,0)
 .;Additional findings
"RTN","PXRMDLG4",154,0)
 .D FADD(DIEN,TAB)
"RTN","PXRMDLG4",155,0)
 ;Get additional prompts
"RTN","PXRMDLG4",156,0)
 I VIEW=2 D
"RTN","PXRMDLG4",157,0)
 .S FIEN=$P($G(^PXRMD(801.41,DIEN,1)),U,5)
"RTN","PXRMDLG4",158,0)
 .I $G(FIEN)["PXD(811.2," D TAX^PXRMDLG1(FIEN,DSEQ,DIEN,.NLINE,NODE)
"RTN","PXRMDLG4",159,0)
 .I $G(FIEN)["ICPT"!($G(FIEN)["ICD9") D FIND^PXRMDLG1(FIEN,DSEQ,DIEN,.NLINE,NODE)
"RTN","PXRMDLG4",160,0)
 .D FADD(DIEN,TAB)
"RTN","PXRMDLG4",161,0)
 I VIEW,VIEW<5,"Element;Group"[DTYP D PROMPT(DIEN,TAB,"Prompts: ",VIEW)
"RTN","PXRMDLG4",162,0)
 ;
"RTN","PXRMDLG4",163,0)
 I VIEW=4,$D(^PXRMD(801.41,DIEN,49))>0 D ALT^PXRMDLG5(DIEN,LEV,DSEQ,NODE,VIEW,.NLINE,CNT,ALTLEN)
"RTN","PXRMDLG4",164,0)
 S NLINE=NLINE+1
"RTN","PXRMDLG4",165,0)
 S ^TMP(NODE,$J,NLINE,0)=$J("",79)
"RTN","PXRMDLG4",166,0)
 Q
"RTN","PXRMDLG4",167,0)
 ;
"RTN","PXRMDLG4",168,0)
FDESC(FIEN) ;Finding description
"RTN","PXRMDLG4",169,0)
 N FGLOB,FITEM,FNUM
"RTN","PXRMDLG4",170,0)
 S FGLOB=$P(FIEN,";",2) Q:FGLOB=""
"RTN","PXRMDLG4",171,0)
 S FITEM=$P(FIEN,";") Q:FITEM=""
"RTN","PXRMDLG4",172,0)
 S FNUM=" ["_FITEM_"]"
"RTN","PXRMDLG4",173,0)
 I FGLOB["ICD9" D  Q
"RTN","PXRMDLG4",174,0)
 .S FTYP="DIAGNOSIS",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",175,0)
 .S FNAME=$P($G(@FGLOB),U,3)_FNUM
"RTN","PXRMDLG4",176,0)
 I FGLOB["WV" D  Q
"RTN","PXRMDLG4",177,0)
 .S FTYP="WH NOTIFICATION PURPOSE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",178,0)
 .S FNAME=$P($G(@FGLOB),U)_FNUM
"RTN","PXRMDLG4",179,0)
 I FGLOB["ICPT" D  Q
"RTN","PXRMDLG4",180,0)
 .S FTYP="PROCEDURE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",181,0)
 .S FNAME=$P($G(@FGLOB),U,2)_FNUM
"RTN","PXRMDLG4",182,0)
 I FGLOB["ORD(101.41" D  Q
"RTN","PXRMDLG4",183,0)
 .S FTYP="QUICK ORDER",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",184,0)
 .S FNAME=$P($G(@FGLOB),U,2)_FNUM
"RTN","PXRMDLG4",185,0)
 ;Short name for finding type
"RTN","PXRMDLG4",186,0)
 S FTYP=$G(DEF1(FGLOB)) Q:FTYP=""
"RTN","PXRMDLG4",187,0)
 ;Long name
"RTN","PXRMDLG4",188,0)
 S FTYP=$G(DEF2(FTYP))
"RTN","PXRMDLG4",189,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG4",190,0)
 S FNAME=$P($G(@FGLOB),U,1)_FNUM
"RTN","PXRMDLG4",191,0)
 I FNAME="" S FNAME=$P($G(@FGLOB),U)_FNUM
"RTN","PXRMDLG4",192,0)
 I FNAME="" S FNAME=FITEM
"RTN","PXRMDLG4",193,0)
 Q
"RTN","PXRMDLG4",194,0)
 ;
"RTN","PXRMDLG4",195,0)
FSAVE(DSUB,FNAME,FTYP,FTAB,FIEN) ;Save finding details
"RTN","PXRMDLG4",196,0)
 N IND,FMTSTR,NL,OUTPUT,TEMP,TEXT
"RTN","PXRMDLG4",197,0)
 I DSUB>1 D
"RTN","PXRMDLG4",198,0)
 . S FMTSTR=FTAB_"R^13L1^"_(65-FTAB)_"L"
"RTN","PXRMDLG4",199,0)
 . S TEXT=U_"Add. Finding:"
"RTN","PXRMDLG4",200,0)
 I DSUB=1 D
"RTN","PXRMDLG4",201,0)
 . S FMTSTR=FTAB_"R^8L1^"_(70-FTAB)_"L"
"RTN","PXRMDLG4",202,0)
 . S TEXT=U_"Finding:"
"RTN","PXRMDLG4",203,0)
 S TEXT=TEXT_U_FNAME_" ("_FTYP_")"
"RTN","PXRMDLG4",204,0)
 D COLFMT^PXRMTEXT(FMTSTR,TEXT," ",.NL,.OUTPUT)
"RTN","PXRMDLG4",205,0)
 F IND=1:1:NL D
"RTN","PXRMDLG4",206,0)
 . S NLINE=NLINE+1
"RTN","PXRMDLG4",207,0)
 . S ^TMP(NODE,$J,NLINE,0)=OUTPUT(IND)
"RTN","PXRMDLG4",208,0)
 I VIEW=2,($G(FIEN)["ICPT"!($G(FIEN)["ICD9")) D FIND^PXRMDLG1(FIEN,DSEQ,DIEN,.NLINE,NODE)
"RTN","PXRMDLG4",209,0)
 Q
"RTN","PXRMDLG4",210,0)
 ;
"RTN","PXRMDLG4",211,0)
PROMPT(IEN,TAB,TEXT,VIEW) ;additional prompts in the dialog file
"RTN","PXRMDLG4",212,0)
 N DATA,DDIS,DGSEQ,DSUB,DTITLE,DTXT,DTYP,SEQ,SUB
"RTN","PXRMDLG4",213,0)
 S SEQ=0
"RTN","PXRMDLG4",214,0)
 F  S SEQ=$O(^PXRMD(801.41,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG4",215,0)
 .S SUB=$O(^PXRMD(801.41,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG4",216,0)
 .S DSUB=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DSUB 
"RTN","PXRMDLG4",217,0)
 .S DATA=$G(^PXRMD(801.41,DSUB,0)) Q:DATA=""
"RTN","PXRMDLG4",218,0)
 .S DNAME=$P(DATA,U),DDIS=$P(DATA,U,3),DTYP=$P(DATA,U,4)
"RTN","PXRMDLG4",219,0)
 .I "PF"'[DTYP Q
"RTN","PXRMDLG4",220,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG4",221,0)
 .I DTYP="P",(VIEW=2)!(VIEW=3) D
"RTN","PXRMDLG4",222,0)
 ..;Override prompt caption
"RTN","PXRMDLG4",223,0)
 ..S DTITLE=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,6)
"RTN","PXRMDLG4",224,0)
 ..I DTITLE="" S DTITLE=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG4",225,0)
 ..S DNAME=DTITLE
"RTN","PXRMDLG4",226,0)
 .S DNAME=$J("",TAB)_TEXT_DNAME
"RTN","PXRMDLG4",227,0)
 .S:+DDIS>0 DNAME=DNAME_" (Disabled)"
"RTN","PXRMDLG4",228,0)
 .S NLINE=NLINE+1
"RTN","PXRMDLG4",229,0)
 .S ^TMP(NODE,$J,NLINE,0)=DNAME
"RTN","PXRMDLG4",230,0)
 .S TEXT=$J("",$L(TEXT))
"RTN","PXRMDLG4",231,0)
 Q
"RTN","PXRMDLG4",232,0)
 ;
"RTN","PXRMDLG4",233,0)
SEQ(SEQ,PIEN) ;Select sequence number to add
"RTN","PXRMDLG4",234,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLG4",235,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLG4",236,0)
 S SEQ=0
"RTN","PXRMDLG4",237,0)
 S DIR(0)="FA0;1;30"
"RTN","PXRMDLG4",238,0)
 S DIR("A")="Enter a new SEQUENCE NUMBER: "
"RTN","PXRMDLG4",239,0)
 S DIR("?")="Enter new sequence number. For detailed help type ??"
"RTN","PXRMDLG4",240,0)
 S DIR("??")=U_"D HELP^PXRMDLG4(1)"
"RTN","PXRMDLG4",241,0)
 D ^DIR K DIR
"RTN","PXRMDLG4",242,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLG4",243,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLG4",244,0)
 ;
"RTN","PXRMDLG4",245,0)
 ;Check that sequence number is new 
"RTN","PXRMDLG4",246,0)
 I $D(^TMP("PXRMDLG4",$J,"SEQ",X)) D  Q
"RTN","PXRMDLG4",247,0)
 .W !,"Sequence number "_X_" already in use."
"RTN","PXRMDLG4",248,0)
 ;
"RTN","PXRMDLG4",249,0)
 ;Then check that the parent is a group or reminder dialog
"RTN","PXRMDLG4",250,0)
 I X["." D  Q:X=""
"RTN","PXRMDLG4",251,0)
 .N CLASS,SUB
"RTN","PXRMDLG4",252,0)
 .;Sequence number of parent
"RTN","PXRMDLG4",253,0)
 .S SUB=$P(X,".",1,$L(X,".")-1)
"RTN","PXRMDLG4",254,0)
 .I $G(SUB)=""!($G(SUB)=0) W !,"Invalid sequence number. A sequence number cannot be less then 1" H 2 Q
"RTN","PXRMDLG4",255,0)
 .;Get IEN of parent dialog or group
"RTN","PXRMDLG4",256,0)
 .S PIEN=$G(^TMP("PXRMDLG4",$J,"SEQ",SUB))
"RTN","PXRMDLG4",257,0)
 .;Validate sequence number
"RTN","PXRMDLG4",258,0)
 .I 'PIEN W !,"Sequence number is not part of an existing group." S X="" Q
"RTN","PXRMDLG4",259,0)
 .;Validate that the parent is a group or reminder dialog
"RTN","PXRMDLG4",260,0)
 .I "RG"'[$P($G(^PXRMD(801.41,PIEN,0)),U,4) D  S X="" Q
"RTN","PXRMDLG4",261,0)
 ..W !,"New sequences can only be added to groups or reminder dialogs"
"RTN","PXRMDLG4",262,0)
 .;Disallow adding elements to national dialogs or groups
"RTN","PXRMDLG4",263,0)
 .I $P($G(^PXMRD(801.41,PIEN,100)),U)="N" D  Q:X=""
"RTN","PXRMDLG4",264,0)
 ..Q:(DUZ(0)="@")&($G(PXRMINST)=1)
"RTN","PXRMDLG4",265,0)
 ..W !,"Elements cannot be added to a national group" S X=""
"RTN","PXRMDLG4",266,0)
 ;
"RTN","PXRMDLG4",267,0)
 ;If adding to top level parent ien is reminder dialog
"RTN","PXRMDLG4",268,0)
 I X?.N S PIEN=PXRMDIEN
"RTN","PXRMDLG4",269,0)
 ;
"RTN","PXRMDLG4",270,0)
 S SEQ=$P(X,".",$L(X,"."))
"RTN","PXRMDLG4",271,0)
 Q
"RTN","PXRMDLG4",272,0)
 ;
"RTN","PXRMDLG4",273,0)
 ;
"RTN","PXRMDLG4",274,0)
HELP(CALL) ;General help text routine.
"RTN","PXRMDLG4",275,0)
 N HTEXT
"RTN","PXRMDLG4",276,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLG4",277,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLG4",278,0)
 ;
"RTN","PXRMDLG4",279,0)
 I CALL=1 D
"RTN","PXRMDLG4",280,0)
 .S HTEXT(1)="Sequence numbers can be added at any level. Specify the full"
"RTN","PXRMDLG4",281,0)
 .S HTEXT(2)="number for the level required (e.g. 15.10.20)."
"RTN","PXRMDLG4",282,0)
 ;
"RTN","PXRMDLG4",283,0)
 D HELP^PXRMEUT(.HTEXT)
"RTN","PXRMDLG4",284,0)
 Q
"RTN","PXRMDLG4",285,0)
 ;
"RTN","PXRMDLLB")
0^20^B39413514
"RTN","PXRMDLLB",1,0)
PXRMDLLB ;SLC/PJH - REMINDER DIALOG LOADER ;03/01/2010
"RTN","PXRMDLLB",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,16**;Feb 04, 2005;Build 119
"RTN","PXRMDLLB",3,0)
 ;
"RTN","PXRMDLLB",4,0)
CODE(DFIEN,DFTYP,ARRAY) ;
"RTN","PXRMDLLB",5,0)
 N ARY,CNT,CNT1
"RTN","PXRMDLLB",6,0)
 I DFTYP["ICD9" S CODE=$P($G(^ICD9(DFIEN,0)),U) D PERIOD^ICDAPIU(CODE,.ARY)
"RTN","PXRMDLLB",7,0)
 I DFTYP["ICPT" S CODE=$P($$CPT^ICPTCOD(DFIEN),U,2) D PERIOD^ICPTAPIU(CODE,.ARY)
"RTN","PXRMDLLB",8,0)
 I $D(ARY)'>0 Q
"RTN","PXRMDLLB",9,0)
 I $P($G(ARY(0)),U,2)'>0 Q
"RTN","PXRMDLLB",10,0)
 S (CNT,CNT1)=0
"RTN","PXRMDLLB",11,0)
 F  S CNT=$O(ARY(CNT)) Q:CNT=""  D
"RTN","PXRMDLLB",12,0)
 . S ARRAY(CNT1)=CODE_":"_CNT_":"_$P($G(ARY(CNT)),U)
"RTN","PXRMDLLB",13,0)
 . S CNT1=CNT1+1
"RTN","PXRMDLLB",14,0)
 Q
"RTN","PXRMDLLB",15,0)
 ;
"RTN","PXRMDLLB",16,0)
CODES(FILE,TXIEN,ARRAY) ;Return selectable codes from taxonomy file
"RTN","PXRMDLLB",17,0)
 N CNT,CODE,CSCNT,DATA,DATES,DISPLAY,IEN,INSTALL,TEXT,NODE,SUB
"RTN","PXRMDLLB",18,0)
 S SUB=0,CNT=0,NODE=$S(FILE=80:"SDX",FILE=81:"SPR")
"RTN","PXRMDLLB",19,0)
 F  S SUB=$O(^PXD(811.2,TXIEN,NODE,SUB)) Q:'SUB  D
"RTN","PXRMDLLB",20,0)
 .S DATA=$G(^PXD(811.2,TXIEN,NODE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLB",21,0)
 .;Ignore if disabled
"RTN","PXRMDLLB",22,0)
 .S DISPLAY=""
"RTN","PXRMDLLB",23,0)
 .I $P(DATA,U,3)=1 Q
"RTN","PXRMDLLB",24,0)
 .;Get ien of code
"RTN","PXRMDLLB",25,0)
 .S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMDLLB",26,0)
 .;get date ranges and text from period api
"RTN","PXRMDLLB",27,0)
 .K ARY
"RTN","PXRMDLLB",28,0)
 .I FILE=80 S CODE=$P($G(^ICD9(IEN,0)),U)
"RTN","PXRMDLLB",29,0)
 .I FILE=81 S CODE=$P($$CPT^ICPTCOD(IEN),U,2)
"RTN","PXRMDLLB",30,0)
 .S DISPLAY=$P($G(DATA),U,2)
"RTN","PXRMDLLB",31,0)
 .;Set display text from taxonomy selectable code text
"RTN","PXRMDLLB",32,0)
 .S TEXT=$P(DATA,U,2)
"RTN","PXRMDLLB",33,0)
 .;otherwise use icd9/cpt description
"RTN","PXRMDLLB",34,0)
 .I TEXT="",FILE=80 S TEXT=$P($$ICDDX^ICDCODE(IEN),U,3)
"RTN","PXRMDLLB",35,0)
 .I TEXT="",FILE=81 S TEXT=$P($$CPT^ICPTCOD(IEN),U,3)
"RTN","PXRMDLLB",36,0)
 .I FILE=80 D PERIOD^ICDAPIU(CODE,.ARY)
"RTN","PXRMDLLB",37,0)
 .I FILE=81 D PERIOD^ICPTAPIU(CODE,.ARY)
"RTN","PXRMDLLB",38,0)
 .I $D(ARY)'>0 Q
"RTN","PXRMDLLB",39,0)
 .I $P($G(ARY(0)),U,2)'>0 Q
"RTN","PXRMDLLB",40,0)
 .S CSCNT=0 F  S CSCNT=$O(ARY(CSCNT)) Q:CSCNT=""  D
"RTN","PXRMDLLB",41,0)
 ..S DATES=":"_CSCNT_":"_$P($G(ARY(CSCNT)),U)
"RTN","PXRMDLLB",42,0)
 ..S TEXT=$P($G(ARY(CSCNT)),U,2) I $G(DISPLAY)'="" S TEXT=DISPLAY
"RTN","PXRMDLLB",43,0)
 ..S CNT=CNT+1,ARRAY(CNT)=IEN_U_$G(CODE)_$G(DATES)_U_$G(TEXT)
"RTN","PXRMDLLB",44,0)
 Q
"RTN","PXRMDLLB",45,0)
 ;
"RTN","PXRMDLLB",46,0)
EXP(TIEN,DCUR,DTTYP) ;Expand taxonomy codes
"RTN","PXRMDLLB",47,0)
 N CODES,CNT,FILE,LIT,CAT
"RTN","PXRMDLLB",48,0)
 S FILE=$S(DTTYP="POV":80,DTTYP="CPT":81,1:"") Q:'FILE
"RTN","PXRMDLLB",49,0)
 S LIT="Selectable "_$S(FILE=80:"Diagnoses:",1:"Procedures:")
"RTN","PXRMDLLB",50,0)
 S CAT=$P($G(^PXD(811.2,TIEN,0)),U)
"RTN","PXRMDLLB",51,0)
 ;
"RTN","PXRMDLLB",52,0)
 S OCNT=OCNT+1
"RTN","PXRMDLLB",53,0)
 S ORY(OCNT)=3_U_DITEM_U_U_DTTYP_U_U_U_U_U_CAT_U_LIT
"RTN","PXRMDLLB",54,0)
 ;Get selectable codes
"RTN","PXRMDLLB",55,0)
 D CODES(FILE,TIEN,.CODES)
"RTN","PXRMDLLB",56,0)
 S CNT=0
"RTN","PXRMDLLB",57,0)
 ;Save selectable codes as type 5 records
"RTN","PXRMDLLB",58,0)
 F  S CNT=$O(CODES(CNT)) Q:'CNT  D
"RTN","PXRMDLLB",59,0)
 .S OCNT=OCNT+1,ORY(OCNT)=5_U_DITEM_U_U_DTTYP_U_U_CODES(CNT)
"RTN","PXRMDLLB",60,0)
 Q
"RTN","PXRMDLLB",61,0)
 ;
"RTN","PXRMDLLB",62,0)
 ;Pass MST code as a forced value
"RTN","PXRMDLLB",63,0)
MST(DFTYP,DFIEN) ;
"RTN","PXRMDLLB",64,0)
 ;Validate finding ien
"RTN","PXRMDLLB",65,0)
 Q:DFIEN=""
"RTN","PXRMDLLB",66,0)
 ;For each MST term check if finding is mapped
"RTN","PXRMDLLB",67,0)
 N FOUND,TCOND,TIEN,TNAM,TSUB
"RTN","PXRMDLLB",68,0)
 S FOUND=0
"RTN","PXRMDLLB",69,0)
 F TNAM="POSITIVE","NEGATIVE","DECLINES" D  Q:FOUND
"RTN","PXRMDLLB",70,0)
 .;Get term IEN
"RTN","PXRMDLLB",71,0)
 .S TIEN=$O(^PXRMD(811.5,"B","MST "_TNAM_" REPORT","")) Q:'TIEN
"RTN","PXRMDLLB",72,0)
 .;Check if finding is mapped to term
"RTN","PXRMDLLB",73,0)
 .Q:'$D(^PXRMD(811.5,TIEN,20,"E",DFTYP,DFIEN))
"RTN","PXRMDLLB",74,0)
 .;If exam and term condition logic is null ignore
"RTN","PXRMDLLB",75,0)
 .I DFTYP="AUTTEXAM(" D  Q:TCOND=""
"RTN","PXRMDLLB",76,0)
 ..S TCOND="",TSUB=$O(^PXRMD(811.5,TIEN,20,"E",DFTYP,DFIEN,"")) Q:'TSUB
"RTN","PXRMDLLB",77,0)
 ..S TCOND=$P($G(^PXRMD(811.5,TIEN,20,TSUB,3)),U)
"RTN","PXRMDLLB",78,0)
 .;If it is then create additional prompt for MST
"RTN","PXRMDLLB",79,0)
 .N DSEQ,DEXC,DDEF,DGUI,DTYP,DTEXT,DSNL,DREQ
"RTN","PXRMDLLB",80,0)
 .;Add to end of array
"RTN","PXRMDLLB",81,0)
 .S DSEQ=$O(ARRAY(""),-1)+1
"RTN","PXRMDLLB",82,0)
 .;Null fields
"RTN","PXRMDLLB",83,0)
 .S DDEF="",DEXC="",DTEXT="",DSNL="",DREQ=""
"RTN","PXRMDLLB",84,0)
 .;MST status (exept for exams)
"RTN","PXRMDLLB",85,0)
 .I DFTYP'="AUTTEXAM(" S DDEF=$$STCODE^PXRMMST("MST "_TNAM_" REPORT")
"RTN","PXRMDLLB",86,0)
 .;GUI process and forced value
"RTN","PXRMDLLB",87,0)
 .S DGUI="MST",DTYP="F"
"RTN","PXRMDLLB",88,0)
 .;Save in array
"RTN","PXRMDLLB",89,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DTEXT_U_DSNL_U_DREQ
"RTN","PXRMDLLB",90,0)
 .;Quit after the first term is found
"RTN","PXRMDLLB",91,0)
 .S FOUND=1
"RTN","PXRMDLLB",92,0)
 Q
"RTN","PXRMDLLB",93,0)
 ;
"RTN","PXRMDLLB",94,0)
REPLACE(DFN,TERMNODE,DITEM,DATA,TERMSTAT) ;
"RTN","PXRMDLLB",95,0)
 ;this section is use to compare the term evalution result against
"RTN","PXRMDLLB",96,0)
 ;the value store in the Reminder Term Status field.
"RTN","PXRMDLLB",97,0)
 ;If the value match and the replacement item is active then the orginal
"RTN","PXRMDLLB",98,0)
 ;item will be replace with the new item.
"RTN","PXRMDLLB",99,0)
 N TERMOUT
"RTN","PXRMDLLB",100,0)
 S TERMSTAT=1 I +$P(TERMNODE,U),$P($G(TERMNODE),U,2)'="" D  Q:+TERMSTAT=0
"RTN","PXRMDLLB",101,0)
 .N DITEMO
"RTN","PXRMDLLB",102,0)
 .S TERMOUT=$$TERM($P(TERMNODE,U),DFN,$G(DITEM),"D")
"RTN","PXRMDLLB",103,0)
 .I TERMOUT'=$P(TERMNODE,U,2) Q
"RTN","PXRMDLLB",104,0)
 .I +$P(TERMNODE,U,3)'>0 S TERMSTAT=0 Q
"RTN","PXRMDLLB",105,0)
 .S DITEMO=DITEM,DITEM=$P(TERMNODE,U,3),DATA=$G(^PXRMD(801.41,DITEM,0))
"RTN","PXRMDLLB",106,0)
 .I $G(DATA)=""!($$ISDISAB^PXRMDLL(DITEM)=1) S DITEM=$O(^PXRMD(801.41,"B","VA-DISABLE BRANCHING LOGIC REPLACEMENT ELEMENT","")) Q
"RTN","PXRMDLLB",107,0)
 Q
"RTN","PXRMDLLB",108,0)
 ;
"RTN","PXRMDLLB",109,0)
RESGROUP(DIEN) ;
"RTN","PXRMDLLB",110,0)
 N CNT,RESULT,TEMP
"RTN","PXRMDLLB",111,0)
 S RESULT=""
"RTN","PXRMDLLB",112,0)
 I $$PATCH^XPDUTL("OR*3.0*243")=0 D  Q RESULT
"RTN","PXRMDLLB",113,0)
 .S RESULT=$P($G(^PXRMD(801.41,DIEN,51,1,0)),U) I RESULT="" Q
"RTN","PXRMDLLB",114,0)
 .I $$ISDISAB^PXRMDLL(RESULT)=1 S RESULT="" Q
"RTN","PXRMDLLB",115,0)
 S CNT=0 F  S CNT=$O(^PXRMD(801.41,DIEN,51,CNT)) Q:CNT'>0  D
"RTN","PXRMDLLB",116,0)
 .S TEMP=$P($G(^PXRMD(801.41,DIEN,51,CNT,0)),U) I TEMP="" Q
"RTN","PXRMDLLB",117,0)
 .I $$ISDISAB^PXRMDLL(TEMP)=1 S TEMP="" Q
"RTN","PXRMDLLB",118,0)
 .S RESULT=$S(RESULT="":TEMP,1:RESULT_"~"_TEMP)
"RTN","PXRMDLLB",119,0)
 Q RESULT
"RTN","PXRMDLLB",120,0)
 ;
"RTN","PXRMDLLB",121,0)
TERM(TERMIEN,DFN,IEN,TYPE) ;
"RTN","PXRMDLLB",122,0)
 ;this section is use to for the term evaluation
"RTN","PXRMDLLB",123,0)
 N ARRAY,CNT,NODE,RESULT,STR,TERMARR
"RTN","PXRMDLLB",124,0)
 N DATEORDR,ESUB,FINDPA,FIEVAL,TFIEVAL,NOCC,BDT,EDT,SDIR,SUB,WVIEN
"RTN","PXRMDLLB",125,0)
 S (TERMARR,TFIEVAL,DATEORDR,FIEVAL)=""
"RTN","PXRMDLLB",126,0)
 ;build term array
"RTN","PXRMDLLB",127,0)
 D TERM^PXRMLDR(TERMIEN,.TERMARR)
"RTN","PXRMDLLB",128,0)
 ;term evaulation
"RTN","PXRMDLLB",129,0)
 D IEVALTER^PXRMTERM(DFN,.TERMARR,.TERMARR,1,.FIEVAL)
"RTN","PXRMDLLB",130,0)
 S RESULT=$G(FIEVAL(1))
"RTN","PXRMDLLB",131,0)
 I TYPE="O" Q +RESULT
"RTN","PXRMDLLB",132,0)
 ;if the item is one of the WH review reminders build finding item and
"RTN","PXRMDLLB",133,0)
 ;text from the  the WVALERTS API in PXRMCWH
"RTN","PXRMDLLB",134,0)
 I RESULT=1,$P($G(^PXRMD(801.41,IEN,0)),U,16)["WHR" D
"RTN","PXRMDLLB",135,0)
 .N IDENT,DATE
"RTN","PXRMDLLB",136,0)
 .S IDENT=$P($G(^PXRMD(801.41,IEN,0)),U,16)
"RTN","PXRMDLLB",137,0)
 .I $G(FIEVAL(1,"LINK"))=1,$G(FIEVAL(1,"STATUS"))="OPEN",$G(FIEVAL(1,"VALUE"))="Pending" D
"RTN","PXRMDLLB",138,0)
 ..S WVIEN=$G(FIEVAL(1,"WVIEN"))
"RTN","PXRMDLLB",139,0)
 ..;DBIA #4102
"RTN","PXRMDLLB",140,0)
 ..D RESULTS^WVALERTS(.ARRAY,WVIEN) D
"RTN","PXRMDLLB",141,0)
 ...K WHFIND,WHNAME
"RTN","PXRMDLLB",142,0)
 ...S NODE=$G(ARRAY(0)) I +$P(NODE,U)'>0 Q
"RTN","PXRMDLLB",143,0)
 ...S WHFIND=WVIEN_";WV(790.1,",WHNAME=$P($G(NODE),U,3)
"RTN","PXRMDLLB",144,0)
 ...S (ESUB,SUB)=0 F  S SUB=$O(DTXT(SUB)) Q:SUB'>0  S ESUB=SUB
"RTN","PXRMDLLB",145,0)
 ...S ESUB=ESUB+1
"RTN","PXRMDLLB",146,0)
 ...I IDENT="WHRP" D
"RTN","PXRMDLLB",147,0)
 ....N MOD
"RTN","PXRMDLLB",148,0)
 ....S DATE=""
"RTN","PXRMDLLB",149,0)
 ....S DTXT(ESUB)=$P($G(NODE),U,3),ESUB=ESUB+1
"RTN","PXRMDLLB",150,0)
 ....S DATE=$P($G(NODE),U,4),STR=$$RJ^XLFSTR("Collected: ",20)
"RTN","PXRMDLLB",151,0)
 ....S STR=STR_$P($G(NODE),U,8)
"RTN","PXRMDLLB",152,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",153,0)
 ....S STR=$$RJ^XLFSTR("Lab Accession #: ",20),STR=STR_$P($G(NODE),U,9)
"RTN","PXRMDLLB",154,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",155,0)
 ....S STR=$$RJ^XLFSTR("Specimen: ",20),STR=STR_$P($G(NODE),U,10)
"RTN","PXRMDLLB",156,0)
 ....S DTXT(ESUB)=STR
"RTN","PXRMDLLB",157,0)
 ...I IDENT="WHRM" D
"RTN","PXRMDLLB",158,0)
 ....S STR=$$RJ^XLFSTR("Procedure: ",20),STR=STR_$P($G(NODE),U,5)
"RTN","PXRMDLLB",159,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",160,0)
 ....S STR=$$RJ^XLFSTR("Primary Diagnosis: ",20),STR=STR_$P($G(NODE),U,6)
"RTN","PXRMDLLB",161,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",162,0)
 ....S STR=$$RJ^XLFSTR("Modifiers: ",20),MOD=$P($G(NODE),U,7)
"RTN","PXRMDLLB",163,0)
 ....I $G(MOD)="" S STR=STR_"<none>"
"RTN","PXRMDLLB",164,0)
 ....E  S STR=STR_$P($G(MOD),"~",1)
"RTN","PXRMDLLB",165,0)
 ....S DTXT(ESUB)=STR,ESUB=ESUB+1
"RTN","PXRMDLLB",166,0)
 ....I $P($G(MOD),"~",2)'="" S DTXT(ESUB)=$$LJ^XLFSTR($P(MOD,"~",2),23)
"RTN","PXRMDLLB",167,0)
 Q +RESULT
"RTN","PXRMDLLB",168,0)
 ;
"RTN","PXRMEXIC")
0^14^B65705401
"RTN","PXRMEXIC",1,0)
PXRMEXIC ; SLC/PKR/PJH - Routines to install repository entry components. ;04/16/2010
"RTN","PXRMEXIC",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,17,16**;Feb 04, 2005;Build 119
"RTN","PXRMEXIC",3,0)
 ;=================================================
"RTN","PXRMEXIC",4,0)
FILE(PXRMRIEN,EXISTS,IND120,JND120,ACTION,ATTR,NAMECHG) ;Read and process a
"RTN","PXRMEXIC",5,0)
 ;file entry in repository entry PXRMRIEN. IND120 and JND120 are the
"RTN","PXRMEXIC",6,0)
 ;indexes for the component list. ACTION is one of the possible actions.
"RTN","PXRMEXIC",7,0)
 I ACTION="S" Q
"RTN","PXRMEXIC",8,0)
 N DATA,DUZ0S,FDA,FDAEND,FDASTART,FIELD,FILENUM
"RTN","PXRMEXIC",9,0)
 N IEN,IENS,IENREND,IENROOT,IENRSTR,IND,INDICES
"RTN","PXRMEXIC",10,0)
 N LINE,MSG,NEW01,PXNAT,PXRMEDOK,PXRMEXCH
"RTN","PXRMEXIC",11,0)
 N SITEIEN,SRCIEN,TEMP,TEXT,TFDA,TIUFPRIV,TNAME,TOPFNUM,VERSN,XUMF
"RTN","PXRMEXIC",12,0)
 N WPLCNT,WPTMP
"RTN","PXRMEXIC",13,0)
 I $G(PXRMIGDS) S DUZ0S=DUZ(0),DUZ(0)="^",XUMF=1
"RTN","PXRMEXIC",14,0)
 ;Set PXRMEDOK so files pointing to sponsors can be installed.
"RTN","PXRMEXIC",15,0)
 ;Set PXRMEXCH so national entries can be installed and prevent
"RTN","PXRMEXIC",16,0)
 ;execution of the input transform for custom logic fields.
"RTN","PXRMEXIC",17,0)
 ;Set PXNAT to allow installation of national (those starting with VA-)
"RTN","PXRMEXIC",18,0)
 ;PCE items.
"RTN","PXRMEXIC",19,0)
 S (PXNAT,PXRMEDOK,PXRMEXCH)=1
"RTN","PXRMEXIC",20,0)
 S TEMP=^PXD(811.8,PXRMRIEN,120,IND120,1,JND120,0)
"RTN","PXRMEXIC",21,0)
 S FDASTART=+$P(TEMP,U,2)
"RTN","PXRMEXIC",22,0)
 S FDAEND=+$P(TEMP,U,3)
"RTN","PXRMEXIC",23,0)
 S IENRSTR=+$P(TEMP,U,4)
"RTN","PXRMEXIC",24,0)
 S IENREND=+$P(TEMP,U,5)
"RTN","PXRMEXIC",25,0)
 F IND=FDASTART:1:FDAEND D
"RTN","PXRMEXIC",26,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",27,0)
 . S INDICES=$P(LINE,"~",1)
"RTN","PXRMEXIC",28,0)
 . S DATA=$P(LINE,"~",2)
"RTN","PXRMEXIC",29,0)
 . S FILENUM=$P(INDICES,";",1)
"RTN","PXRMEXIC",30,0)
 . S IENS=$P(INDICES,";",2)
"RTN","PXRMEXIC",31,0)
 . I IND=START S SRCIEN=+IENS
"RTN","PXRMEXIC",32,0)
 . S FIELD=$P(INDICES,";",3)
"RTN","PXRMEXIC",33,0)
 . I LINE["WP-start" D
"RTN","PXRMEXIC",34,0)
 .. S DATA="WPTMP("_IND_","_+FIELD_")"
"RTN","PXRMEXIC",35,0)
 .. S WPLCNT=$P(LINE,"~",3)
"RTN","PXRMEXIC",36,0)
 .. D WORDPROC(PXRMRIEN,.WPTMP,IND,+FIELD,.IND,WPLCNT)
"RTN","PXRMEXIC",37,0)
 . I (IND=START)&((FIELD=.01)!(FIELD=.001)) D
"RTN","PXRMEXIC",38,0)
 ..;Save the top level file number.
"RTN","PXRMEXIC",39,0)
 .. S TOPFNUM=FILENUM
"RTN","PXRMEXIC",40,0)
 ..;If the action is copy put it in the first open spot.
"RTN","PXRMEXIC",41,0)
 .. I ACTION="C" S IENROOT(SRCIEN)=$$LOIEN^PXRMEXU5(FILENUM)
"RTN","PXRMEXIC",42,0)
 ..;
"RTN","PXRMEXIC",43,0)
 ..;If the action is install try to install at the source ien. If
"RTN","PXRMEXIC",44,0)
 ..;an entry already exists at the source ien put it in the first
"RTN","PXRMEXIC",45,0)
 ..;open spot.
"RTN","PXRMEXIC",46,0)
 .. I ACTION="I" D
"RTN","PXRMEXIC",47,0)
 ... S SITEIEN=+$$FIND1^DIC(FILENUM,"","Q","`"_SRCIEN)
"RTN","PXRMEXIC",48,0)
 ... I SITEIEN>0 S IENROOT(SRCIEN)=""
"RTN","PXRMEXIC",49,0)
 ... E  S IENROOT(SRCIEN)=$$LOIEN^PXRMEXU5(FILENUM)
"RTN","PXRMEXIC",50,0)
 ..;
"RTN","PXRMEXIC",51,0)
 ..;If the action is merge or overwrite get the existing ien.
"RTN","PXRMEXIC",52,0)
 .. I (ACTION="M")!(ACTION="O") D
"RTN","PXRMEXIC",53,0)
 ... S SITEIEN=$$EXISTS^PXRMEXIU(FILENUM,DATA)
"RTN","PXRMEXIC",54,0)
 ... S IENROOT(SRCIEN)=""
"RTN","PXRMEXIC",55,0)
 .;
"RTN","PXRMEXIC",56,0)
 .;This line is use to convert pre-patch 12 disable text to the new
"RTN","PXRMEXIC",57,0)
 .;value of 1 for disable
"RTN","PXRMEXIC",58,0)
 . I FILENUM=801.41,FIELD=3,DATA'="" S DATA=1
"RTN","PXRMEXIC",59,0)
 . S FDA(FILENUM,IENS,FIELD)=DATA
"RTN","PXRMEXIC",60,0)
 ;
"RTN","PXRMEXIC",61,0)
 ;Initialize the edit history.
"RTN","PXRMEXIC",62,0)
 D INIEH(TOPFNUM,IENS,.FDA,.WPTMP)
"RTN","PXRMEXIC",63,0)
 ;Build the IENROOT
"RTN","PXRMEXIC",64,0)
 F IND=IENRSTR:1:IENREND D
"RTN","PXRMEXIC",65,0)
 . I IND=0 Q
"RTN","PXRMEXIC",66,0)
 . S TEMP=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",67,0)
 . S IENROOT($P(TEMP,U,1))=$P(TEMP,U,2)
"RTN","PXRMEXIC",68,0)
 ;Check for name changes, i.e., the copy action.
"RTN","PXRMEXIC",69,0)
 D NAMECHG(.FDA,.NAMECHG,TOPFNUM)
"RTN","PXRMEXIC",70,0)
 ;
"RTN","PXRMEXIC",71,0)
 ;Special handling for file 142.
"RTN","PXRMEXIC",72,0)
 I TOPFNUM=142 D  Q:'$D(FDA)
"RTN","PXRMEXIC",73,0)
 . D SFMVPI^PXRMEXIU(.FDA,.NAMECHG,142.14)
"RTN","PXRMEXIC",74,0)
 ;
"RTN","PXRMEXIC",75,0)
 ;Special handling for file 801
"RTN","PXRMEXIC",76,0)
 I TOPFNUM=801 D  Q:PXRMDONE
"RTN","PXRMEXIC",77,0)
 . D ROC^PXRMEXU5(.FDA)
"RTN","PXRMEXIC",78,0)
 ;
"RTN","PXRMEXIC",79,0)
 ;Special handling for file 801.41
"RTN","PXRMEXIC",80,0)
 I TOPFNUM=801.41 D  Q:PXRMDONE
"RTN","PXRMEXIC",81,0)
 . I ACTION="M" D MERGE^PXRMEXU5(801.41,EXISTS,"15;18*",.FDA,.IENROOT)
"RTN","PXRMEXIC",82,0)
 . D DLG^PXRMEXU4(.FDA,.NAMECHG)
"RTN","PXRMEXIC",83,0)
 ;
"RTN","PXRMEXIC",84,0)
 ;Special handling for file 810.9
"RTN","PXRMEXIC",85,0)
 I TOPFNUM=810.9 D LOC^PXRMEXU0(.FDA)
"RTN","PXRMEXIC",86,0)
 ;
"RTN","PXRMEXIC",87,0)
 ;If the file number is 811.4 the user must have programmer
"RTN","PXRMEXIC",88,0)
 ;access to install it.
"RTN","PXRMEXIC",89,0)
 I (TOPFNUM=811.4)&(DUZ(0)'="@") D  Q
"RTN","PXRMEXIC",90,0)
 . W !,"Only programmers can install Reminder Computed Findings."
"RTN","PXRMEXIC",91,0)
 ;
"RTN","PXRMEXIC",92,0)
 ;Special handling for file 811.5.
"RTN","PXRMEXIC",93,0)
 I TOPFNUM=811.5 D  Q:'$D(FDA)
"RTN","PXRMEXIC",94,0)
 .;If the site has any findings already mapped merge them in.
"RTN","PXRMEXIC",95,0)
 . I ACTION="M" D MERGE^PXRMEXU5(811.5,EXISTS,"20*",.FDA,.IENROOT)
"RTN","PXRMEXIC",96,0)
 . D SFMVPI^PXRMEXIU(.FDA,.NAMECHG,811.52)
"RTN","PXRMEXIC",97,0)
 ;
"RTN","PXRMEXIC",98,0)
 ;Special handling for file 811.9.
"RTN","PXRMEXIC",99,0)
 I TOPFNUM=811.9 D
"RTN","PXRMEXIC",100,0)
 .;Don't execute the input transform for custom logic fields.
"RTN","PXRMEXIC",101,0)
 . S PXRMEXCH=1
"RTN","PXRMEXIC",102,0)
 . D DEF^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",103,0)
 ;
"RTN","PXRMEXIC",104,0)
 ;If FDA is not defined at this point the user has opted to abort
"RTN","PXRMEXIC",105,0)
 ;the install.
"RTN","PXRMEXIC",106,0)
 I '$D(FDA) Q
"RTN","PXRMEXIC",107,0)
 ;
"RTN","PXRMEXIC",108,0)
 ;Special handling for file 8925.1
"RTN","PXRMEXIC",109,0)
 I TOPFNUM=8925.1 D
"RTN","PXRMEXIC",110,0)
 . S TIUFPRIV=1
"RTN","PXRMEXIC",111,0)
 . D TIUOBJ^PXRMEXIU(.FDA)
"RTN","PXRMEXIC",112,0)
 ;
"RTN","PXRMEXIC",113,0)
 ;Special handling for file 9999999.64.
"RTN","PXRMEXIC",114,0)
 I TOPFNUM=9999999.64 D
"RTN","PXRMEXIC",115,0)
 . D HF^PXRMEXIU(.FDA,.NAMECHG)
"RTN","PXRMEXIC",116,0)
 ;
"RTN","PXRMEXIC",117,0)
 ;If the action is merge or overwrite do a test install before deleting
"RTN","PXRMEXIC",118,0)
 ;the original entry.
"RTN","PXRMEXIC",119,0)
 I (ACTION="M")!(ACTION="O") D
"RTN","PXRMEXIC",120,0)
 .;Make the .01 unique for the test install.
"RTN","PXRMEXIC",121,0)
 . S IENS=$O(FDA(TOPFNUM,""))
"RTN","PXRMEXIC",122,0)
 .;Get the length of the .01 field
"RTN","PXRMEXIC",123,0)
 . D FIELD^DID(TOPFNUM,.01,"","FIELD LENGTH","ATTR")
"RTN","PXRMEXIC",124,0)
 . S TNAME="tmp"_$E(FDA(TOPFNUM,IENS,.01),1,ATTR("FIELD LENGTH")-3)
"RTN","PXRMEXIC",125,0)
 .;Make sure the test entry does not already exist.
"RTN","PXRMEXIC",126,0)
 . D DELALL^PXRMEXFI(TOPFNUM,TNAME)
"RTN","PXRMEXIC",127,0)
 . K ^TMP($J,"TFDA") M ^TMP($J,"TFDA")=FDA K FDA
"RTN","PXRMEXIC",128,0)
 . K TFDA M TFDA=^TMP($J,"TFDA")
"RTN","PXRMEXIC",129,0)
 . S TFDA(TOPFNUM,IENS,.01)=TNAME
"RTN","PXRMEXIC",130,0)
 . D UPDATE^DIE("E","TFDA","IENROOT","MSG")
"RTN","PXRMEXIC",131,0)
 . I $D(MSG) D
"RTN","PXRMEXIC",132,0)
 .. S TEXT(1)=ATTR("FILE NAME")_" entry "_$G(ATTR("PT01"))_" did not get installed!"
"RTN","PXRMEXIC",133,0)
 .. S TEXT(2)="Examine the following error message for the reason."
"RTN","PXRMEXIC",134,0)
 .. S TEXT(3)=""
"RTN","PXRMEXIC",135,0)
 .. S TEXT(4)="The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXIC",136,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIC",137,0)
 .. D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXIC",138,0)
 .. H 2
"RTN","PXRMEXIC",139,0)
 . I '$D(MSG) K TFDA M FDA=^TMP($J,"TFDA")
"RTN","PXRMEXIC",140,0)
 . K ^TMP($J,"TFDA")
"RTN","PXRMEXIC",141,0)
 .;Delete the test entry.
"RTN","PXRMEXIC",142,0)
 . D DELALL^PXRMEXFI(TOPFNUM,TNAME)
"RTN","PXRMEXIC",143,0)
 .;If the original update worked put the entry at its original ien.
"RTN","PXRMEXIC",144,0)
 ;Install the FDA.
"RTN","PXRMEXIC",145,0)
 I '$D(MSG) D
"RTN","PXRMEXIC",146,0)
 .;Delete the existing entry.
"RTN","PXRMEXIC",147,0)
 . I (ACTION="M")!(ACTION="O") D
"RTN","PXRMEXIC",148,0)
 .. D DELETE^PXRMEXFI(TOPFNUM,SITEIEN)
"RTN","PXRMEXIC",149,0)
 .. S IENROOT(SRCIEN)=SITEIEN
"RTN","PXRMEXIC",150,0)
 . D UPDATE^DIE("E","FDA","IENROOT","MSG")
"RTN","PXRMEXIC",151,0)
 . I $D(MSG) D
"RTN","PXRMEXIC",152,0)
 .. S TEXT(1)=ATTR("FILE NAME")_" entry "_$G(ATTR("PT01"))_" did not get installed!"
"RTN","PXRMEXIC",153,0)
 .. S TEXT(2)="Examine the following error message for the reason."
"RTN","PXRMEXIC",154,0)
 .. S TEXT(3)=""
"RTN","PXRMEXIC",155,0)
 .. S TEXT(4)="The update failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMEXIC",156,0)
 .. D MES^XPDUTL(.TEXT)
"RTN","PXRMEXIC",157,0)
 .. D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXIC",158,0)
 .. W !
"RTN","PXRMEXIC",159,0)
 .. H 2
"RTN","PXRMEXIC",160,0)
 S VERSN=$$GETTAGV^PXRMEXU3(^PXD(811.8,PXRMRIEN,100,3,0),"<PACKAGE_VERSION>")
"RTN","PXRMEXIC",161,0)
 I TOPFNUM=801 D
"RTN","PXRMEXIC",162,0)
 .;mapp OI associate with a Drug Class
"RTN","PXRMEXIC",163,0)
 .N PXRMEXCH
"RTN","PXRMEXIC",164,0)
 .D EXCHINST^PXRMORXR(ATTR("PT01"))
"RTN","PXRMEXIC",165,0)
 I TOPFNUM=811.2 D
"RTN","PXRMEXIC",166,0)
 .;Rebuild taxonomy expansions.
"RTN","PXRMEXIC",167,0)
 . N IEN,PXRMEXCH
"RTN","PXRMEXIC",168,0)
 . S IEN=+$O(^PXD(811.2,"B",ATTR("PT01"),""))
"RTN","PXRMEXIC",169,0)
 . I IEN>0 D EXPAND^PXRMBXTL(IEN,"")
"RTN","PXRMEXIC",170,0)
 I TOPFNUM=811.9,VERSN=1.5 D
"RTN","PXRMEXIC",171,0)
 . N IEN,PXRMEXCH,X
"RTN","PXRMEXIC",172,0)
 . S IEN=+$O(^PXD(811.9,"B",ATTR("PT01"),""))
"RTN","PXRMEXIC",173,0)
 . I IEN=0 Q
"RTN","PXRMEXIC",174,0)
 .;For reminder definitions build the found/not found text counts.
"RTN","PXRMEXIC",175,0)
 . D SFNFTC^PXRMEXU0(IEN)
"RTN","PXRMEXIC",176,0)
 .;Build the internal logic and finding strings.
"RTN","PXRMEXIC",177,0)
 . S X=$G(^PXD(811.9,IEN,30))
"RTN","PXRMEXIC",178,0)
 . I X'="" D CPPCLS^PXRMLOGX(IEN,X)
"RTN","PXRMEXIC",179,0)
 . S X=$G(^PXD(811.9,IEN,34))
"RTN","PXRMEXIC",180,0)
 . I X'="" D CPRESLS^PXRMLOGX(IEN,X)
"RTN","PXRMEXIC",181,0)
 . D BLDALL^PXRMLOGX(IEN,"","")
"RTN","PXRMEXIC",182,0)
 I $G(PXRMIGDS) S DUZ(0)=DUZ0S
"RTN","PXRMEXIC",183,0)
 Q
"RTN","PXRMEXIC",184,0)
 ;
"RTN","PXRMEXIC",185,0)
 ;=================================================
"RTN","PXRMEXIC",186,0)
INIEH(FILENUM,IENS,FDA,WPTMP) ;If the file is a clinical reminder file and
"RTN","PXRMEXIC",187,0)
 ;it has an edit history initialize the history.
"RTN","PXRMEXIC",188,0)
 I (FILENUM<800)!(FILENUM>811.9) Q
"RTN","PXRMEXIC",189,0)
 ;
"RTN","PXRMEXIC",190,0)
 N IENS,SFN,TARGET,WP
"RTN","PXRMEXIC",191,0)
 D FIELD^DID(FILENUM,"EDIT HISTORY","","SPECIFIER","TARGET")
"RTN","PXRMEXIC",192,0)
 S SFN=+$G(TARGET("SPECIFIER"))
"RTN","PXRMEXIC",193,0)
 I SFN=0 Q
"RTN","PXRMEXIC",194,0)
 S IENS=$O(FDA(SFN,""))
"RTN","PXRMEXIC",195,0)
 I IENS="" Q
"RTN","PXRMEXIC",196,0)
 S FDA(SFN,IENS,.01)=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXIC",197,0)
 S FDA(SFN,IENS,1)=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMEXIC",198,0)
 ;The word-processing field is set when the packing is done.
"RTN","PXRMEXIC",199,0)
 S WP=FDA(SFN,IENS,2)
"RTN","PXRMEXIC",200,0)
 K @WP
"RTN","PXRMEXIC",201,0)
 S @WP@(1)="Exchange Install"
"RTN","PXRMEXIC",202,0)
 Q
"RTN","PXRMEXIC",203,0)
 ;
"RTN","PXRMEXIC",204,0)
 ;=================================================
"RTN","PXRMEXIC",205,0)
NAMECHG(FDA,NAMECHG,FILENUM) ;If this component has been copied to a new
"RTN","PXRMEXIC",206,0)
 ;name make the change.
"RTN","PXRMEXIC",207,0)
 N CLASS,IENS,PT01
"RTN","PXRMEXIC",208,0)
 S IENS=$O(FDA(FILENUM,""))
"RTN","PXRMEXIC",209,0)
 S PT01=FDA(FILENUM,IENS,.01)
"RTN","PXRMEXIC",210,0)
 I $D(NAMECHG(FILENUM,PT01)) D
"RTN","PXRMEXIC",211,0)
 . S FDA(FILENUM,IENS,.01)=NAMECHG(FILENUM,PT01)
"RTN","PXRMEXIC",212,0)
 . I (FILENUM<801.41)!(FILENUM>811.9) Q
"RTN","PXRMEXIC",213,0)
 .;Once a component has been copied CLASS can no longer be national.
"RTN","PXRMEXIC",214,0)
 . S CLASS=$G(FDA(FILENUM,IENS,100))
"RTN","PXRMEXIC",215,0)
 . I CLASS["N" S FDA(FILENUM,IENS,100)="LOCAL"
"RTN","PXRMEXIC",216,0)
 .;The Sponsor is also removed.
"RTN","PXRMEXIC",217,0)
 . K FDA(FILENUM,IENS,101)
"RTN","PXRMEXIC",218,0)
 Q
"RTN","PXRMEXIC",219,0)
 ;
"RTN","PXRMEXIC",220,0)
 ;=================================================
"RTN","PXRMEXIC",221,0)
RTNLD(PXRMRIEN,START,END,ATTR,RTN) ;Load a routine from the repository into
"RTN","PXRMEXIC",222,0)
 ;the array RTN.
"RTN","PXRMEXIC",223,0)
 N IND,LINE,LN,ROUTINE
"RTN","PXRMEXIC",224,0)
 S LINE=^PXD(811.8,PXRMRIEN,100,START,0)
"RTN","PXRMEXIC",225,0)
 S ROUTINE=$P(LINE,";",1)
"RTN","PXRMEXIC",226,0)
 S ROUTINE=$TR(ROUTINE," ","")
"RTN","PXRMEXIC",227,0)
 S ATTR("FILE NUMBER")=0
"RTN","PXRMEXIC",228,0)
 S ATTR("NAME")=$P(LINE,";",1)
"RTN","PXRMEXIC",229,0)
 S ATTR("NAME")=$TR(ATTR("NAME")," ","")
"RTN","PXRMEXIC",230,0)
 S ATTR("MIN FIELD LENGTH")=3
"RTN","PXRMEXIC",231,0)
 S ATTR("FIELD LENGTH")=8
"RTN","PXRMEXIC",232,0)
 S LN=0
"RTN","PXRMEXIC",233,0)
 F IND=START:1:END D
"RTN","PXRMEXIC",234,0)
 . S LN=LN+1
"RTN","PXRMEXIC",235,0)
 . S LINE=^PXD(811.8,PXRMRIEN,100,IND,0)
"RTN","PXRMEXIC",236,0)
 . S RTN(LN,0)=LINE
"RTN","PXRMEXIC",237,0)
 Q
"RTN","PXRMEXIC",238,0)
 ;
"RTN","PXRMEXIC",239,0)
 ;=================================================
"RTN","PXRMEXIC",240,0)
RTNSAVE(RTN,NAME) ;Save the routine loaded in RTN to the name
"RTN","PXRMEXIC",241,0)
 ;found in NAMECHG.
"RTN","PXRMEXIC",242,0)
 N DIE,XCN
"RTN","PXRMEXIC",243,0)
 ;%ZOSF("SAVE") requires a global.
"RTN","PXRMEXIC",244,0)
 K ^TMP($J,"PXRMRTN")
"RTN","PXRMEXIC",245,0)
 S DIE="^TMP($J,""PXRMRTN"","
"RTN","PXRMEXIC",246,0)
 M ^TMP($J,"PXRMRTN")=RTN
"RTN","PXRMEXIC",247,0)
 S XCN=0
"RTN","PXRMEXIC",248,0)
 S X=NAME
"RTN","PXRMEXIC",249,0)
 X ^%ZOSF("SAVE")
"RTN","PXRMEXIC",250,0)
 K ^TMP($J,"PXRMRTN")
"RTN","PXRMEXIC",251,0)
 Q
"RTN","PXRMEXIC",252,0)
 ;
"RTN","PXRMEXIC",253,0)
 ;=================================================
"RTN","PXRMEXIC",254,0)
WORDPROC(PXRMRIEN,WPTMP,I1,I2,IND,WPLCNT) ;Load WPTMP with the word
"RTN","PXRMEXIC",255,0)
 ;processing field.
"RTN","PXRMEXIC",256,0)
 N I3
"RTN","PXRMEXIC",257,0)
 F I3=1:1:WPLCNT D
"RTN","PXRMEXIC",258,0)
 . S IND=IND+1
"RTN","PXRMEXIC",259,0)
 . S WPTMP(I1,I2,I3)=$G(^PXD(811.8,PXRMRIEN,100,IND,0))
"RTN","PXRMEXIC",260,0)
 Q
"RTN","PXRMEXIC",261,0)
 ;
"RTN","PXRMEXPD")
0^10^B192354344
"RTN","PXRMEXPD",1,0)
PXRMEXPD ; SLC/PKR - General packing driver. ;03/16/2010
"RTN","PXRMEXPD",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,17,16**;Feb 04, 2005;Build 119
"RTN","PXRMEXPD",3,0)
 ;==========================
"RTN","PXRMEXPD",4,0)
BLDDESC(USELLIST,TMPIND) ;If multiple entries have been selected
"RTN","PXRMEXPD",5,0)
 ;then initialize the description with the selected list.
"RTN","PXRMEXPD",6,0)
 N IEN,NL,NOUT,TEXT,TEXTOUT
"RTN","PXRMEXPD",7,0)
 S TEXT(1)="The following Clinical Reminder items were selected for packing:\\"
"RTN","PXRMEXPD",8,0)
 S FILENUM=0,NL=1
"RTN","PXRMEXPD",9,0)
 F  S FILENUM=$O(USELLIST(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPD",10,0)
 . I NL>1 S NL=NL+1,TEXT(NL)="\\"
"RTN","PXRMEXPD",11,0)
 . S NL=NL+1,TEXT(NL)=$$GET1^DID(FILENUM,"","","NAME")_"\\"
"RTN","PXRMEXPD",12,0)
 . S IEN=0
"RTN","PXRMEXPD",13,0)
 . F  S IEN=+$O(USELLIST(FILENUM,"IEN",IEN)) Q:IEN=0  D
"RTN","PXRMEXPD",14,0)
 .. S NL=NL+1,TEXT(NL)="  "_$$GET1^DIQ(FILENUM,IEN,".01")_"\\"
"RTN","PXRMEXPD",15,0)
 D FORMAT^PXRMTEXT(1,70,NL,.TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMEXPD",16,0)
 K ^TMP(TMPIND,$J,"DESC")
"RTN","PXRMEXPD",17,0)
 F IND=1:1:NOUT  S ^TMP(TMPIND,$J,"DESC",1,IND,0)=TEXTOUT(IND)
"RTN","PXRMEXPD",18,0)
 Q
"RTN","PXRMEXPD",19,0)
 ;
"RTN","PXRMEXPD",20,0)
 ;==========================
"RTN","PXRMEXPD",21,0)
BLDTEXT(TMPIND) ;Combine the source information and the user's input into the
"RTN","PXRMEXPD",22,0)
 ;"TEXT" array.
"RTN","PXRMEXPD",23,0)
 N IC,IND
"RTN","PXRMEXPD",24,0)
 S (IC,IND)=0
"RTN","PXRMEXPD",25,0)
 F  S IC=$O(^TMP(TMPIND,$J,"SRC",IC)) Q:+IC=0  D
"RTN","PXRMEXPD",26,0)
 . S IND=IND+1
"RTN","PXRMEXPD",27,0)
 . S ^TMP(TMPIND,$J,"TEXT",1,IND)=^TMP(TMPIND,$J,"SRC",IC)
"RTN","PXRMEXPD",28,0)
 ;
"RTN","PXRMEXPD",29,0)
 S IC=0
"RTN","PXRMEXPD",30,0)
 F  S IC=$O(^TMP(TMPIND,$J,"TXT",1,IC)) Q:+IC=0  D
"RTN","PXRMEXPD",31,0)
 . S IND=IND+1
"RTN","PXRMEXPD",32,0)
 . S ^TMP(TMPIND,$J,"TEXT",1,IND)=^TMP(TMPIND,$J,"TXT",1,IC,0)
"RTN","PXRMEXPD",33,0)
 Q
"RTN","PXRMEXPD",34,0)
 ;
"RTN","PXRMEXPD",35,0)
 ;==========================
"RTN","PXRMEXPD",36,0)
CLDIQOUT(FILENUM,IEN,FIELD,IENROOT,DIQOUT) ;Clean-up the DIQOUT returned by
"RTN","PXRMEXPD",37,0)
 ;the GETS^DIQ call.
"RTN","PXRMEXPD",38,0)
 ;Remove edit history from all reminder files.
"RTN","PXRMEXPD",39,0)
 D RMEH^PXRMEXPU(FILENUM,.DIQOUT)
"RTN","PXRMEXPD",40,0)
 ;Convert the iens to the FDA adding form.
"RTN","PXRMEXPD",41,0)
 D CONTOFDA^PXRMEXPU(.DIQOUT,.IENROOT)
"RTN","PXRMEXPD",42,0)
 ;Remove hospital locations from location lists
"RTN","PXRMEXPD",43,0)
 I FILENUM=810.9 K DIQOUT(810.944)
"RTN","PXRMEXPD",44,0)
 ;TIU conversion for TIU/HS objects
"RTN","PXRMEXPD",45,0)
 I FILENUM=8925.1,FIELD="**" D TIUCONV(FILENUM,IEN,.DIQOUT)
"RTN","PXRMEXPD",46,0)
 Q
"RTN","PXRMEXPD",47,0)
 ;
"RTN","PXRMEXPD",48,0)
 ;==========================
"RTN","PXRMEXPD",49,0)
CMPLIST(CMPLIST,SELLIST,FILELST,ERROR) ;Process the selected list and build a
"RTN","PXRMEXPD",50,0)
 ;complete list of components to be packed.
"RTN","PXRMEXPD",51,0)
 N CIEN,IND,JND,FNUM,LRD,NUM,PACKLIST,ROUTINE
"RTN","PXRMEXPD",52,0)
 S ERROR=0
"RTN","PXRMEXPD",53,0)
 F IND=1:1:FILELST(0) D
"RTN","PXRMEXPD",54,0)
 . S FNUM=$P(FILELST(IND),U,1)
"RTN","PXRMEXPD",55,0)
 . I '$D(SELLIST(FNUM)) Q
"RTN","PXRMEXPD",56,0)
 . S ROUTINE=$$GETSRTN^PXRMEXPS(FNUM)_"(FNUM,CIEN,.PACKLIST)"
"RTN","PXRMEXPD",57,0)
 . S NUM=0
"RTN","PXRMEXPD",58,0)
 . F  S NUM=+$O(SELLIST(FNUM,NUM)) Q:NUM=0   S CIEN=SELLIST(FNUM,NUM) D @ROUTINE
"RTN","PXRMEXPD",59,0)
 ;PACKLIST is built by following all pointers. Reversing the order
"RTN","PXRMEXPD",60,0)
 ;for the Exchange install should allow resolution of pointers.
"RTN","PXRMEXPD",61,0)
 S FNUM=""
"RTN","PXRMEXPD",62,0)
 F  S FNUM=$O(PACKLIST(FNUM)) Q:FNUM=""  D
"RTN","PXRMEXPD",63,0)
 . I $D(PACKLIST(FNUM,"ERROR")) D
"RTN","PXRMEXPD",64,0)
 .. S IND=0,ERROR=ERROR+1
"RTN","PXRMEXPD",65,0)
 .. I ERROR=1 W !
"RTN","PXRMEXPD",66,0)
 .. F  S IND=+$O(PACKLIST(FNUM,"ERROR",IND)) Q:IND=0  W !,PACKLIST(FNUM,"ERROR",IND)," IEN=",IND
"RTN","PXRMEXPD",67,0)
 . S IND="IEN",JND=0
"RTN","PXRMEXPD",68,0)
 . F  S IND=+$O(PACKLIST(FNUM,IND),-1) Q:IND=0  S JND=JND+1,CMPLIST(FNUM,JND)=PACKLIST(FNUM,IND)
"RTN","PXRMEXPD",69,0)
 ;If any definitions have a linked dialog add the linked dialog to the
"RTN","PXRMEXPD",70,0)
 ;selection list so it can be marked as selected.
"RTN","PXRMEXPD",71,0)
 I '$D(CMPLIST(811.9)) Q
"RTN","PXRMEXPD",72,0)
 S NUM=$O(SELLIST(801.41,"IEN"),-1)
"RTN","PXRMEXPD",73,0)
 S IND=0
"RTN","PXRMEXPD",74,0)
 F  S IND=$O(CMPLIST(811.9,IND)) Q:IND=""  D
"RTN","PXRMEXPD",75,0)
 . S LRD=$G(^PXD(811.9,CMPLIST(811.9,IND),51))
"RTN","PXRMEXPD",76,0)
 . I LRD'="" S NUM=NUM+1,SELLIST(801.41,NUM)=LRD,SELLIST(801.41,"IEN",LRD)=NUM
"RTN","PXRMEXPD",77,0)
 I ERROR D
"RTN","PXRMEXPD",78,0)
 . W !,"Cannot create the packed file due to the above error(s)."
"RTN","PXRMEXPD",79,0)
 . H 2
"RTN","PXRMEXPD",80,0)
 Q
"RTN","PXRMEXPD",81,0)
 ;
"RTN","PXRMEXPD",82,0)
 ;==========================
"RTN","PXRMEXPD",83,0)
CRE ;Pack a reminder component and store it in the repository.
"RTN","PXRMEXPD",84,0)
 N CMPLIST,CNT,DIEN,DERRFND,DERRMSG,EFNAME,ERROR,FAIL,FAILTYPE,FILELST
"RTN","PXRMEXPD",85,0)
 N OUTPUT,POA,RANK,SERROR,SELLIST,SUCCESS,TMPIND,USELLIST
"RTN","PXRMEXPD",86,0)
 S TMPIND="PXRMEXPR"
"RTN","PXRMEXPD",87,0)
 K ^TMP(TMPIND,$J)
"RTN","PXRMEXPD",88,0)
 S FILELST(1)=811.4_U_$$GET1^DID(811.4,"","","NAME")
"RTN","PXRMEXPD",89,0)
 S FILELST(2)=810.8_U_$$GET1^DID(810.8,"","","NAME")
"RTN","PXRMEXPD",90,0)
 S FILELST(3)=811.9_U_$$GET1^DID(811.9,"","","NAME")
"RTN","PXRMEXPD",91,0)
 S FILELST(4)=801.41_U_$$GET1^DID(801.41,"","","NAME")
"RTN","PXRMEXPD",92,0)
 S FILELST(5)=810.7_U_$$GET1^DID(810.7,"","","NAME")
"RTN","PXRMEXPD",93,0)
 S FILELST(6)=810.2_U_$$GET1^DID(810.2,"","","NAME")
"RTN","PXRMEXPD",94,0)
 S FILELST(7)=810.4_U_$$GET1^DID(810.4,"","","NAME")
"RTN","PXRMEXPD",95,0)
 S FILELST(8)=810.9_U_$$GET1^DID(810.9,"","","NAME")
"RTN","PXRMEXPD",96,0)
 S FILELST(9)=811.6_U_$$GET1^DID(811.6,"","","NAME")
"RTN","PXRMEXPD",97,0)
 S FILELST(10)=811.2_U_$$GET1^DID(811.2,"","","NAME")
"RTN","PXRMEXPD",98,0)
 S FILELST(11)=811.5_U_$$GET1^DID(811.5,"","","NAME")
"RTN","PXRMEXPD",99,0)
 S FILELST(12)=801_U_$$GET1^DID(801,"","","NAME")
"RTN","PXRMEXPD",100,0)
 S FILELST(0)=12
"RTN","PXRMEXPD",101,0)
 D PACKORD(.RANK)
"RTN","PXRMEXPD",102,0)
 ;
"RTN","PXRMEXPD",103,0)
 ;Get the list to pack.
"RTN","PXRMEXPD",104,0)
 D FSEL(.SELLIST,.FILELST)
"RTN","PXRMEXPD",105,0)
 ;
"RTN","PXRMEXPD",106,0)
 K VALMHDR
"RTN","PXRMEXPD",107,0)
 I '$D(SELLIST) S VALMHDR(1)="No reminder items were selected!"  Q
"RTN","PXRMEXPD",108,0)
 ;Save the user's selections.
"RTN","PXRMEXPD",109,0)
 M USELLIST=SELLIST
"RTN","PXRMEXPD",110,0)
 ;Process the selected list to build a complete list of components
"RTN","PXRMEXPD",111,0)
 ;to be packed.
"RTN","PXRMEXPD",112,0)
 D CMPLIST(.CMPLIST,.SELLIST,.FILELST,.ERROR)
"RTN","PXRMEXPD",113,0)
 I ERROR K ^TMP(TMPIND,$J) Q
"RTN","PXRMEXPD",114,0)
 ;
"RTN","PXRMEXPD",115,0)
 ;Check reminder dialogs for errors
"RTN","PXRMEXPD",116,0)
 N FAILTYPE
"RTN","PXRMEXPD",117,0)
 S FAIL=0
"RTN","PXRMEXPD",118,0)
 I $D(SELLIST(801.41)) D  I FAIL="F" K ^TMP(TMPIND,$J) Q
"RTN","PXRMEXPD",119,0)
 .W !,"Checking reminder dialog(s) for errors."
"RTN","PXRMEXPD",120,0)
 . S DIEN=0
"RTN","PXRMEXPD",121,0)
 .;Check individual reminder dialogs 
"RTN","PXRMEXPD",122,0)
 . F  S DIEN=$O(SELLIST(801.41,"IEN",DIEN)) Q:DIEN'>0  D
"RTN","PXRMEXPD",123,0)
 .. I FAIL=0 W "."
"RTN","PXRMEXPD",124,0)
 .. S FAILTYPE=$$RETARR^PXRMDLRP(DIEN,.OUTPUT) Q:'$D(OUTPUT)
"RTN","PXRMEXPD",125,0)
 .. I FAILTYPE="F" S FAIL="F"
"RTN","PXRMEXPD",126,0)
 .. I FAILTYPE="W",FAIL=0 S FAIL="W"
"RTN","PXRMEXPD",127,0)
 .. W !!,$S(FAILTYPE="W":"**WARNING**",1:"**FATAL ERROR**")
"RTN","PXRMEXPD",128,0)
 .. S CNT=0 F  S CNT=$O(OUTPUT(CNT)) Q:CNT'>0  W !,OUTPUT(CNT)
"RTN","PXRMEXPD",129,0)
 .. K OUTPUT
"RTN","PXRMEXPD",130,0)
 .;
"RTN","PXRMEXPD",131,0)
 . I FAIL="W" H 2
"RTN","PXRMEXPD",132,0)
 . I FAIL=0 W !,"No problems found." H 1 Q
"RTN","PXRMEXPD",133,0)
 . I FAIL="F" W !!,"Cannot create the packed file. Please correct the above fatal error(s)." H 2
"RTN","PXRMEXPD",134,0)
 ;
"RTN","PXRMEXPD",135,0)
 ;Create the header information.
"RTN","PXRMEXPD",136,0)
 D HEADER(TMPIND,.USELLIST,.SELLIST,.RANK,.EFNAME)
"RTN","PXRMEXPD",137,0)
 I EFNAME=-1 Q
"RTN","PXRMEXPD",138,0)
 ;
"RTN","PXRMEXPD",139,0)
 ;Order the component list.
"RTN","PXRMEXPD",140,0)
 D ORDER(.CMPLIST,.RANK,.POA)
"RTN","PXRMEXPD",141,0)
 ;Pack the list
"RTN","PXRMEXPD",142,0)
 D PACK(.CMPLIST,.POA,TMPIND,.SELLIST,.SERROR)
"RTN","PXRMEXPD",143,0)
 I SERROR K ^TMP(TMPIND,$J) Q
"RTN","PXRMEXPD",144,0)
 ;Add information to the description about quick orders, TIU health 
"RTN","PXRMEXPD",145,0)
 ;summary objects, and health summaries that are included but are
"RTN","PXRMEXPD",146,0)
 ;not exchangeable.
"RTN","PXRMEXPD",147,0)
 D NEXINFO(TMPIND)
"RTN","PXRMEXPD",148,0)
 D STOREPR^PXRMEXU2(.SUCCESS,EFNAME,TMPIND,.SELLIST)
"RTN","PXRMEXPD",149,0)
 K ^TMP(TMPIND,$J)
"RTN","PXRMEXPD",150,0)
 I SUCCESS D
"RTN","PXRMEXPD",151,0)
 . S VALMHDR(1)=EFNAME_" was saved in the Exchange File."
"RTN","PXRMEXPD",152,0)
 . D BLDLIST^PXRMEXLC(1)
"RTN","PXRMEXPD",153,0)
 E  D
"RTN","PXRMEXPD",154,0)
 . S VALMHDR(1)="Creation of Exchange File entry "_EFNAME
"RTN","PXRMEXPD",155,0)
 . S VALMHDR(2)="failed; it was not saved!"
"RTN","PXRMEXPD",156,0)
 Q
"RTN","PXRMEXPD",157,0)
 ;
"RTN","PXRMEXPD",158,0)
 ;==========================
"RTN","PXRMEXPD",159,0)
FSEL(LIST,FILELST) ;Select file list.
"RTN","PXRMEXPD",160,0)
 N ALIST,DIR,DIROUT,DIRUT,DONE,DTOUT,DUOUT,IND,X,Y
"RTN","PXRMEXPD",161,0)
 F IND=1:1:FILELST(0) S ALIST(IND)=$$RJ^XLFSTR(IND,4," ")_" "_$P(FILELST(IND),U,2)
"RTN","PXRMEXPD",162,0)
 M DIR("A")=ALIST
"RTN","PXRMEXPD",163,0)
 S DIR("A")="Select a file"
"RTN","PXRMEXPD",164,0)
 S DIR(0)="NO^1:"_FILELST(0)
"RTN","PXRMEXPD",165,0)
 S DONE=0
"RTN","PXRMEXPD",166,0)
 F  Q:DONE  D
"RTN","PXRMEXPD",167,0)
 . W !!,"Select from the following reminder files:"
"RTN","PXRMEXPD",168,0)
 . D ^DIR
"RTN","PXRMEXPD",169,0)
 . I (Y="")!(Y["^") S DONE=1 Q
"RTN","PXRMEXPD",170,0)
 . I $D(DIROUT)!$D(DIRUT) S DONE=1 Q
"RTN","PXRMEXPD",171,0)
 . I $D(DUOUT)!$D(DTOUT) S DONE=1 Q
"RTN","PXRMEXPD",172,0)
 . D IENSEL(.LIST,Y,.FILELST)
"RTN","PXRMEXPD",173,0)
 Q
"RTN","PXRMEXPD",174,0)
 ;
"RTN","PXRMEXPD",175,0)
 ;==========================
"RTN","PXRMEXPD",176,0)
IENSEL(LIST,ID,FILELST) ;Select entries from the selected file.
"RTN","PXRMEXPD",177,0)
 N DIC,DIR,DIROUT,DIRUT,DONE,DTOUT,DUOUT,FILENUM,NUMF,X,Y
"RTN","PXRMEXPD",178,0)
 S (DIC,FILENUM)=$P(FILELST(ID),U,1)
"RTN","PXRMEXPD",179,0)
 S NUMF=+$O(LIST(FILENUM,""),-1)
"RTN","PXRMEXPD",180,0)
 S DIC(0)="QEA"
"RTN","PXRMEXPD",181,0)
 S DONE=0
"RTN","PXRMEXPD",182,0)
 F  Q:DONE  D
"RTN","PXRMEXPD",183,0)
 . D ^DIC
"RTN","PXRMEXPD",184,0)
 . I Y=-1 S DONE=1 Q
"RTN","PXRMEXPD",185,0)
 . I $D(DIROUT)!$D(DIRUT) S DONE=1 Q
"RTN","PXRMEXPD",186,0)
 . I $D(DUOUT)!$D(DTOUT) S DONE=1 Q
"RTN","PXRMEXPD",187,0)
 . S NUMF=NUMF+1
"RTN","PXRMEXPD",188,0)
 . S LIST(FILENUM,NUMF)=+Y
"RTN","PXRMEXPD",189,0)
 . S LIST(FILENUM,"IEN",+Y)=NUMF
"RTN","PXRMEXPD",190,0)
 . W !,"Enter another one or just press enter to go back to file selection."
"RTN","PXRMEXPD",191,0)
 Q
"RTN","PXRMEXPD",192,0)
 ;
"RTN","PXRMEXPD",193,0)
 ;==========================
"RTN","PXRMEXPD",194,0)
GETTEXT(FILENUM,IEN,TMPIND,INDEX) ;Let the user input some text.
"RTN","PXRMEXPD",195,0)
 N DIC,DWLW,DWPK,FIELDNUM,TYPE
"RTN","PXRMEXPD",196,0)
 ;If this is the description text, (signfied by FILENUM>0) load the
"RTN","PXRMEXPD",197,0)
 ;description or short description as the default.
"RTN","PXRMEXPD",198,0)
 I FILENUM>0 D
"RTN","PXRMEXPD",199,0)
 . S FIELDNUM=$$FLDNUM^DILFD(FILENUM,"DESCRIPTION"),TYPE="WP"
"RTN","PXRMEXPD",200,0)
 . I FIELDNUM=0 S FIELDNUM=$$FLDNUM^DILFD(FILENUM,"SHORT DESCRIPTION"),TYPE="SD"
"RTN","PXRMEXPD",201,0)
 E  S FIELDNUM=0
"RTN","PXRMEXPD",202,0)
 I FIELDNUM>0 D
"RTN","PXRMEXPD",203,0)
 . N MSG,WP,X
"RTN","PXRMEXPD",204,0)
 . I TYPE="WP" D
"RTN","PXRMEXPD",205,0)
 .. S X=$$GET1^DIQ(FILENUM,IEN,FIELDNUM,"Z","WP","MSG")
"RTN","PXRMEXPD",206,0)
 .. M ^TMP(TMPIND,$J,INDEX,1)=WP
"RTN","PXRMEXPD",207,0)
 . I TYPE="SD" D
"RTN","PXRMEXPD",208,0)
 .. S X=$$GET1^DIQ(FILENUM,IEN,FIELDNUM,"","","MSG")
"RTN","PXRMEXPD",209,0)
 .. S ^TMP(TMPIND,$J,INDEX,1,1,0)=X
"RTN","PXRMEXPD",210,0)
 S DIC="^TMP(TMPIND,$J,"""_INDEX_""",1,"
"RTN","PXRMEXPD",211,0)
 S DWLW=72,DWPK=1
"RTN","PXRMEXPD",212,0)
 D EN^DIWE
"RTN","PXRMEXPD",213,0)
 Q
"RTN","PXRMEXPD",214,0)
 ;
"RTN","PXRMEXPD",215,0)
 ;==========================
"RTN","PXRMEXPD",216,0)
GDIQF(FILENUM,FILENAME,IEN,IND,TMPIND,SELLIST,SERROR) ;Save file entries into
"RTN","PXRMEXPD",217,0)
 ;^TMP(TMPIND,$J).
"RTN","PXRMEXPD",218,0)
 N CSUM,DIQOUT,IENROOT,FIELD,MSG,NUM
"RTN","PXRMEXPD",219,0)
 K DIQOUT,IENROOT
"RTN","PXRMEXPD",220,0)
 ;If the file entry is ok to install then get the entire entry,
"RTN","PXRMEXPD",221,0)
 ;otherwise just get the .01.
"RTN","PXRMEXPD",222,0)
 S FIELD=$S($$IOKTP^PXRMEXFI(FILENUM,IEN):"**",1:.01)
"RTN","PXRMEXPD",223,0)
 ;
"RTN","PXRMEXPD",224,0)
 ;Items from file 142, 142.5, and 8925.1 need to be added to the
"RTN","PXRMEXPD",225,0)
 ;SELLIST array if $$IOKTP returns "**". These items are IEN specific
"RTN","PXRMEXPD",226,0)
 ;and the check needs to be done at time of packing this is why they
"RTN","PXRMEXPD",227,0)
 ;are added to SELLIST.
"RTN","PXRMEXPD",228,0)
 I ((FILENUM=142)!(FILENUM=142.5)!(FILENUM=8925.1))&(FIELD="**") D
"RTN","PXRMEXPD",229,0)
 .S NUM=$O(SELLIST(FILENUM,"IEN",""),-1)
"RTN","PXRMEXPD",230,0)
 .S NUM=NUM+1,SELLIST(FILENUM,"IEN",IEN)=NUM,SELLIST(FILENUM,NUM)=IEN
"RTN","PXRMEXPD",231,0)
 ;
"RTN","PXRMEXPD",232,0)
 D GETS^DIQ(FILENUM,IEN,FIELD,"N","DIQOUT","MSG")
"RTN","PXRMEXPD",233,0)
 I $D(MSG) D  Q
"RTN","PXRMEXPD",234,0)
 . S SERROR=1
"RTN","PXRMEXPD",235,0)
 . N ETEXT
"RTN","PXRMEXPD",236,0)
 . S ETEXT="GETS^DIQ failed for "_FILENAME_", ien="_IEN_";"
"RTN","PXRMEXPD",237,0)
 . W !,ETEXT
"RTN","PXRMEXPD",238,0)
 . W !,"it returned the following error:"
"RTN","PXRMEXPD",239,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXPD",240,0)
 . H 2
"RTN","PXRMEXPD",241,0)
 . K MSG
"RTN","PXRMEXPD",242,0)
 D CLDIQOUT(FILENUM,IEN,FIELD,.IENROOT,.DIQOUT)
"RTN","PXRMEXPD",243,0)
 S ^TMP("PXRMEXCS",$J,IND,FILENAME)=$$DIQOUTCS^PXRMEXCS(.DIQOUT)
"RTN","PXRMEXPD",244,0)
 ;Load the converted DIQOUT into TMP.
"RTN","PXRMEXPD",245,0)
 M ^TMP(TMPIND,$J,IND,FILENAME)=DIQOUT
"RTN","PXRMEXPD",246,0)
 M ^TMP(TMPIND,$J,IND,FILENAME_"_IENROOT")=IENROOT
"RTN","PXRMEXPD",247,0)
 Q
"RTN","PXRMEXPD",248,0)
 ;
"RTN","PXRMEXPD",249,0)
 ;==========================
"RTN","PXRMEXPD",250,0)
GRTN(ROUTINE,TMPIND,SERROR) ;Save routines into ^TMP(TMPIND,$J).
"RTN","PXRMEXPD",251,0)
 N DIF,IEN,IND,RA,TEMP,X,XCNP
"RTN","PXRMEXPD",252,0)
 S X=ROUTINE
"RTN","PXRMEXPD",253,0)
 X ^%ZOSF("TEST")
"RTN","PXRMEXPD",254,0)
 I $T D
"RTN","PXRMEXPD",255,0)
 . K RA
"RTN","PXRMEXPD",256,0)
 . S DIF="RA("
"RTN","PXRMEXPD",257,0)
 . S XCNP=0
"RTN","PXRMEXPD",258,0)
 . X ^%ZOSF("LOAD")
"RTN","PXRMEXPD",259,0)
 . S ^TMP("PXRMEXCS",$J,"ROUTINE",X)=$$ROUTINE^PXRMEXCS(.RA)
"RTN","PXRMEXPD",260,0)
 . M ^TMP(TMPIND,$J,"ROUTINE",X)=RA
"RTN","PXRMEXPD",261,0)
 E  D
"RTN","PXRMEXPD",262,0)
 . S SERROR=1
"RTN","PXRMEXPD",263,0)
 . W !,"Warning could not find routine ",X
"RTN","PXRMEXPD",264,0)
 . H 2
"RTN","PXRMEXPD",265,0)
 Q
"RTN","PXRMEXPD",266,0)
 ;
"RTN","PXRMEXPD",267,0)
 ;==========================
"RTN","PXRMEXPD",268,0)
HEADER(TMPIND,USELLIST,SELLIST,RANK,EFNAME) ;Create the Exchange file header
"RTN","PXRMEXPD",269,0)
 ;information.
"RTN","PXRMEXPD",270,0)
 N DIR,EXTYPE,IEN,IND,FILENAME,FILENUM,NFNUM,NIEN,PNAME,Y
"RTN","PXRMEXPD",271,0)
 S (FILENAME,FILENUM,IEN,NIEN)="",NFNUM=0
"RTN","PXRMEXPD",272,0)
 F  S FILENUM=$O(USELLIST(FILENUM)) Q:FILENUM=""  S NFNUM=NFNUM+1
"RTN","PXRMEXPD",273,0)
 I NFNUM=1 D
"RTN","PXRMEXPD",274,0)
 . S FILENUM=$O(USELLIST(""))
"RTN","PXRMEXPD",275,0)
 . S IND="",NIEN=0
"RTN","PXRMEXPD",276,0)
 . F  S IND=$O(USELLIST(FILENUM,IND)) Q:IND="IEN"  S NIEN=NIEN+1
"RTN","PXRMEXPD",277,0)
 . I NIEN=1 D
"RTN","PXRMEXPD",278,0)
 .. S IND=$O(USELLIST(FILENUM,""))
"RTN","PXRMEXPD",279,0)
 .. S IEN=USELLIST(FILENUM,IND)
"RTN","PXRMEXPD",280,0)
 .. S NAME=$$GET1^DIQ(FILENUM,IEN,.01)
"RTN","PXRMEXPD",281,0)
 .. S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMEXPD",282,0)
 ..;If only one item was selected make it the default.
"RTN","PXRMEXPD",283,0)
 .. S DIR("B")=NAME
"RTN","PXRMEXPD",284,0)
 ;Get the Exchange file entry name.
"RTN","PXRMEXPD",285,0)
 S DIR(0)="FAU^3:64"
"RTN","PXRMEXPD",286,0)
 S DIR("A")="Enter the Exchange File entry name: "
"RTN","PXRMEXPD",287,0)
 D ^DIR
"RTN","PXRMEXPD",288,0)
 I (Y="")!($D(DTOUT))!($D(DUOUT)) S EFNAME=-1 Q
"RTN","PXRMEXPD",289,0)
 S EFNAME=Y
"RTN","PXRMEXPD",290,0)
 K DIR
"RTN","PXRMEXPD",291,0)
 ;Save the source information.
"RTN","PXRMEXPD",292,0)
 D PUTSRC(FILENAME,EFNAME,TMPIND)
"RTN","PXRMEXPD",293,0)
 S PNAME=$S(NIEN=1:FILENAME,1:"Exchange File entry")
"RTN","PXRMEXPD",294,0)
 ;If multiple items were selected for packing initialize the
"RTN","PXRMEXPD",295,0)
 ;description with the selection list.
"RTN","PXRMEXPD",296,0)
 I (NFNUM>1)!(NIEN>1) D BLDDESC(.USELLIST,TMPIND)
"RTN","PXRMEXPD",297,0)
 ;If a single item was selected the description will be initialized
"RTN","PXRMEXPD",298,0)
 ;with the selected item's description. In either case the user can
"RTN","PXRMEXPD",299,0)
 ;input additional description text.
"RTN","PXRMEXPD",300,0)
 W !,"Enter a description of the ",PNAME," you are packing." H 2
"RTN","PXRMEXPD",301,0)
 D GETTEXT(FILENUM,IEN,TMPIND,"DESC")
"RTN","PXRMEXPD",302,0)
 ;
"RTN","PXRMEXPD",303,0)
 ;Have the user input keywords for indexing the entry.
"RTN","PXRMEXPD",304,0)
 W !,"Enter keywords or phrases to help index the entry you are packing."
"RTN","PXRMEXPD",305,0)
 W !,"Separate the keywords or phrases on each line with commas." H 2
"RTN","PXRMEXPD",306,0)
 D GETTEXT(0,0,TMPIND,"KEYWORD")
"RTN","PXRMEXPD",307,0)
 ;
"RTN","PXRMEXPD",308,0)
 ;Combine the source and input text into the "TEXT" array.
"RTN","PXRMEXPD",309,0)
 D BLDTEXT(TMPIND)
"RTN","PXRMEXPD",310,0)
 Q
"RTN","PXRMEXPD",311,0)
 ;
"RTN","PXRMEXPD",312,0)
 ;==========================
"RTN","PXRMEXPD",313,0)
NEXINFO(TMPIND) ;Add information to the description about quick orders,
"RTN","PXRMEXPD",314,0)
 ;TIU health summary objects, and health summaries that are included
"RTN","PXRMEXPD",315,0)
 ;but are not exchangeable.
"RTN","PXRMEXPD",316,0)
 N NL,NLS
"RTN","PXRMEXPD",317,0)
 S (NL,NLS)=$P($G(^TMP(TMPIND,$J,"DESC",1,0)),U,4)
"RTN","PXRMEXPD",318,0)
 I $D(^TMP($J,"ORDER DIALOG")) D
"RTN","PXRMEXPD",319,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",320,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable order dialog(s):"
"RTN","PXRMEXPD",321,0)
 . D NEXINFOA(TMPIND,"ORDER DIALOG",.NL)
"RTN","PXRMEXPD",322,0)
 I $D(^TMP($J,"TIU OBJECT")) D
"RTN","PXRMEXPD",323,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",324,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable TIU object(s):"
"RTN","PXRMEXPD",325,0)
 . D NEXINFOA(TMPIND,"TIU OBJECT",.NL)
"RTN","PXRMEXPD",326,0)
 I $D(^TMP($J,"HS OBJECT")) D
"RTN","PXRMEXPD",327,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",328,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable health summary object(s):"
"RTN","PXRMEXPD",329,0)
 . D NEXINFOA(TMPIND,"HS OBJECT",.NL)
"RTN","PXRMEXPD",330,0)
 I $D(^TMP($J,"HS TYPE")) D
"RTN","PXRMEXPD",331,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",332,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable health summary type(s):"
"RTN","PXRMEXPD",333,0)
 . D NEXINFOA(TMPIND,"HS TYPE",.NL)
"RTN","PXRMEXPD",334,0)
 I $D(^TMP($J,"HS COMP")) D
"RTN","PXRMEXPD",335,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",336,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable health summary component(s):"
"RTN","PXRMEXPD",337,0)
 . D NEXINFOA(TMPIND,"HS COMP",.NL)
"RTN","PXRMEXPD",338,0)
 I $D(^TMP($J,"LOCATION LIST")) D
"RTN","PXRMEXPD",339,0)
 . I NL>NLS S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=""
"RTN","PXRMEXPD",340,0)
 . S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)="Non-exchangeable location list hospital locations:"
"RTN","PXRMEXPD",341,0)
 . D NEXINFOA(TMPIND,"LOCATION LIST",.NL)
"RTN","PXRMEXPD",342,0)
 I NL>NLS S $P(^TMP(TMPIND,$J,"DESC",1,0),U,3,4)=NL_U_NL
"RTN","PXRMEXPD",343,0)
 Q
"RTN","PXRMEXPD",344,0)
 ;
"RTN","PXRMEXPD",345,0)
 ;==========================
"RTN","PXRMEXPD",346,0)
NEXINFOA(TMPIND,SUB,NL) ;
"RTN","PXRMEXPD",347,0)
 N IEN,LNUM
"RTN","PXRMEXPD",348,0)
 I SUB'["ORDER" S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=$$REPEAT^XLFSTR("-",79)
"RTN","PXRMEXPD",349,0)
 S IEN=0
"RTN","PXRMEXPD",350,0)
 F  S IEN=$O(^TMP($J,SUB,IEN)) Q:IEN'>0  D
"RTN","PXRMEXPD",351,0)
 .S LNUM=0
"RTN","PXRMEXPD",352,0)
 .F  S LNUM=$O(^TMP($J,SUB,IEN,LNUM)) Q:LNUM=""  D
"RTN","PXRMEXPD",353,0)
 ..S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=^TMP($J,SUB,IEN,LNUM)
"RTN","PXRMEXPD",354,0)
 I SUB'["ORDER" S NL=NL+1,^TMP(TMPIND,$J,"DESC",1,NL,0)=$$REPEAT^XLFSTR("-",79)
"RTN","PXRMEXPD",355,0)
 K ^TMP($J,SUB)
"RTN","PXRMEXPD",356,0)
 Q
"RTN","PXRMEXPD",357,0)
 ;
"RTN","PXRMEXPD",358,0)
 ;==========================
"RTN","PXRMEXPD",359,0)
ORDER(CMPLIST,RANK,POA) ;Order the component list so pointers can be resolved.
"RTN","PXRMEXPD",360,0)
 N FILENUM,ORDER,PORDER
"RTN","PXRMEXPD",361,0)
 S FILENUM="",ORDER=0
"RTN","PXRMEXPD",362,0)
 F  S FILENUM=$O(CMPLIST(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXPD",363,0)
 . S PORDER=$G(RANK("FN",FILENUM))
"RTN","PXRMEXPD",364,0)
 . I PORDER="" S ORDER=ORDER+1,PORDER=ORDER
"RTN","PXRMEXPD",365,0)
 . S POA(PORDER)=FILENUM
"RTN","PXRMEXPD",366,0)
 Q
"RTN","PXRMEXPD",367,0)
 ;
"RTN","PXRMEXPD",368,0)
 ;==========================
"RTN","PXRMEXPD",369,0)
PACK(CMPLIST,POA,TMPIND,SELLIST,SERROR) ;Create the packed entry, store it in
"RTN","PXRMEXPD",370,0)
 ;^TMP(TMPIND,$J). TMPIND should be namespaced and set by the caller.
"RTN","PXRMEXPD",371,0)
 N IEN,IND,JND,KND,FILENAME,FILENUM,ROUTINE
"RTN","PXRMEXPD",372,0)
 W !,"Packing components ..."
"RTN","PXRMEXPD",373,0)
 S (KND,SERROR)=0
"RTN","PXRMEXPD",374,0)
 S IND=""
"RTN","PXRMEXPD",375,0)
 F  S IND=$O(POA(IND)) Q:IND=""  D
"RTN","PXRMEXPD",376,0)
 . S FILENUM=POA(IND)
"RTN","PXRMEXPD",377,0)
 . S FILENAME=$S(FILENUM=0:"ROUTINE",1:$$GET1^DID(FILENUM,"","","NAME"))
"RTN","PXRMEXPD",378,0)
 . S JND=""
"RTN","PXRMEXPD",379,0)
 . F  S JND=$O(CMPLIST(FILENUM,JND)) Q:JND=""  D
"RTN","PXRMEXPD",380,0)
 .. S IEN=CMPLIST(FILENUM,JND)
"RTN","PXRMEXPD",381,0)
 .. I FILENUM=0 W !,"Adding routine ",IEN
"RTN","PXRMEXPD",382,0)
 .. E  W !,"Adding ",FILENAME," ",$$GET1^DIQ(FILENUM,IEN,.01),", IEN=",IEN
"RTN","PXRMEXPD",383,0)
 .. I FILENUM=0 D GRTN(IEN,TMPIND,.SERROR)
"RTN","PXRMEXPD",384,0)
 .. I FILENUM>0 S KND=KND+1 D GDIQF(FILENUM,FILENAME,IEN,KND,TMPIND,.SELLIST,.SERROR)
"RTN","PXRMEXPD",385,0)
 ;
"RTN","PXRMEXPD",386,0)
 S ^TMP(TMPIND,$J,"NUMF")=KND
"RTN","PXRMEXPD",387,0)
 W !,"Packing is complete."
"RTN","PXRMEXPD",388,0)
 ;If there were any errors saving the data kill the ^TMP array.
"RTN","PXRMEXPD",389,0)
 I SERROR K ^TMP(TMPIND,$J)
"RTN","PXRMEXPD",390,0)
 Q
"RTN","PXRMEXPD",391,0)
 ;
"RTN","PXRMEXPD",392,0)
 ;==========================
"RTN","PXRMEXPD",393,0)
PACKORD(RANK) ;
"RTN","PXRMEXPD",394,0)
 S RANK("FN",801.41)=7000,RANK(7000)=801.41
"RTN","PXRMEXPD",395,0)
 S RANK("FN",810.2)=11000,RANK(11000)=810.2
"RTN","PXRMEXPD",396,0)
 S RANK("FN",810.4)=8000,RANK(8000)=810.4
"RTN","PXRMEXPD",397,0)
 S RANK("FN",810.7)=10000,RANK(10000)=810.7
"RTN","PXRMEXPD",398,0)
 S RANK("FN",810.8)=9000,RANK(9000)=810.8
"RTN","PXRMEXPD",399,0)
 S RANK("FN",810.9)=4000,RANK(4000)=810.9
"RTN","PXRMEXPD",400,0)
 S RANK("FN",811.2)=3000,RANK(3000)=811.2
"RTN","PXRMEXPD",401,0)
 S RANK("FN",811.4)=2000,RANK(2000)=811.4
"RTN","PXRMEXPD",402,0)
 S RANK("FN",811.5)=5000,RANK(5000)=811.5
"RTN","PXRMEXPD",403,0)
 S RANK("FN",811.6)=1000,RANK(1000)=811.6
"RTN","PXRMEXPD",404,0)
 S RANK("FN",811.9)=6000,RANK(6000)=811.9
"RTN","PXRMEXPD",405,0)
 S RANK("FN",142.1)=100000,RANK(100000)=142.1
"RTN","PXRMEXPD",406,0)
 S RANK("FN",142)=100100,RANK(100100)=142
"RTN","PXRMEXPD",407,0)
 S RANK("FN",142.5)=100200,RANK(100200)=142.5
"RTN","PXRMEXPD",408,0)
 S RANK("FN",8925.1)=100300,RANK(100300)=8925.1
"RTN","PXRMEXPD",409,0)
 S RANK("FN",801)=100400,RANK(100400)=801
"RTN","PXRMEXPD",410,0)
 Q
"RTN","PXRMEXPD",411,0)
 ;
"RTN","PXRMEXPD",412,0)
 ;==========================
"RTN","PXRMEXPD",413,0)
PUTSRC(FILENAME,NAME,TMPIND) ;Save the source information.
"RTN","PXRMEXPD",414,0)
 N LOC
"RTN","PXRMEXPD",415,0)
 S LOC=$$SITE^VASITE
"RTN","PXRMEXPD",416,0)
 I FILENAME'="" S ^TMP(TMPIND,$J,"SRC","FILENAME")=FILENAME
"RTN","PXRMEXPD",417,0)
 S ^TMP(TMPIND,$J,"SRC","NAME")=NAME
"RTN","PXRMEXPD",418,0)
 S ^TMP(TMPIND,$J,"SRC","USER")=$$GET1^DIQ(200,DUZ,.01)
"RTN","PXRMEXPD",419,0)
 S ^TMP(TMPIND,$J,"SRC","SITE")=$P(LOC,U,2)
"RTN","PXRMEXPD",420,0)
 S ^TMP(TMPIND,$J,"SRC","DATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMEXPD",421,0)
 Q
"RTN","PXRMEXPD",422,0)
 ;
"RTN","PXRMEXPD",423,0)
 ;==========================
"RTN","PXRMEXPD",424,0)
TIUCONV(FILENUM,IEN,ARRAY) ;Convert health summary object to external.
"RTN","PXRMEXPD",425,0)
 N HSO,IENS,NAME
"RTN","PXRMEXPD",426,0)
 S IENS="+"_IEN_","
"RTN","PXRMEXPD",427,0)
 I $G(ARRAY(FILENUM,IENS,9))'["$$TIU^GMTSOBJ" D  Q
"RTN","PXRMEXPD",428,0)
 . S ARRAY(FILENUM,IENS,9)="NOT A HS OBJECT"
"RTN","PXRMEXPD",429,0)
 S HSO=$P(ARRAY(FILENUM,IENS,9),",",2)
"RTN","PXRMEXPD",430,0)
 S HSO=$P(HSO,")")
"RTN","PXRMEXPD",431,0)
 ;Handle corrupted health summary object names.
"RTN","PXRMEXPD",432,0)
 I +HSO>0 S NAME=$P($G(^GMT(142.5,HSO,0)),U,1)
"RTN","PXRMEXPD",433,0)
 E  S NAME="MISSING"
"RTN","PXRMEXPD",434,0)
 S ARRAY(FILENUM,IENS,9)="S X=$$TIU^GMTSOBJ(DFN,"_NAME_")"
"RTN","PXRMEXPD",435,0)
 S ARRAY(FILENUM,IENS,99)=""
"RTN","PXRMEXPD",436,0)
 Q
"RTN","PXRMEXPD",437,0)
 ;
"RTN","PXRMEXPS")
0^9^B186431616
"RTN","PXRMEXPS",1,0)
PXRMEXPS ; SLC/PKR - Packing save routines. ;3/08/2010
"RTN","PXRMEXPS",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,16**;Feb 04, 2005;Build 119
"RTN","PXRMEXPS",3,0)
 ;==========================================
"RTN","PXRMEXPS",4,0)
ADD(FILENUM,IEN,PACKLIST,NF) ;
"RTN","PXRMEXPS",5,0)
 S NF=+$O(PACKLIST(FILENUM,"IEN"),-1)+1
"RTN","PXRMEXPS",6,0)
 S PACKLIST(FILENUM,NF)=IEN
"RTN","PXRMEXPS",7,0)
 S PACKLIST(FILENUM,"IEN",IEN)=NF
"RTN","PXRMEXPS",8,0)
 Q
"RTN","PXRMEXPS",9,0)
 ;
"RTN","PXRMEXPS",10,0)
 ;==========================================
"RTN","PXRMEXPS",11,0)
CHKCF(ROOT,TOPIEN,GBL,PACKLIST) ;
"RTN","PXRMEXPS",12,0)
 N IEN,NAME,NUM,PARM
"RTN","PXRMEXPS",13,0)
 S IEN=""
"RTN","PXRMEXPS",14,0)
 F  S IEN=$O(@ROOT@(TOPIEN,20,"E",GBL,IEN)) Q:IEN=""  D
"RTN","PXRMEXPS",15,0)
 . I $P($G(^PXRMD(811.4,IEN,0)),U,1)'="VA-REMINDER DEFINITION" Q
"RTN","PXRMEXPS",16,0)
 . S NUM=$O(@ROOT@(TOPIEN,20,"E",GBL,IEN,"")) Q:NUM'>0
"RTN","PXRMEXPS",17,0)
 . S PARM=$P($G(@ROOT@(TOPIEN,20,NUM,15)),U,1)
"RTN","PXRMEXPS",18,0)
 . S NAME=$P(PARM,U,1)
"RTN","PXRMEXPS",19,0)
 . S RIEN=$O(^PXD(811.9,"B",NAME,"")) Q:RIEN'>0
"RTN","PXRMEXPS",20,0)
 . S ROUTINE=$$GETSRTN(811.9)_"(811.9,RIEN,.PACKLIST)"
"RTN","PXRMEXPS",21,0)
 . D @ROUTINE
"RTN","PXRMEXPS",22,0)
 Q
"RTN","PXRMEXPS",23,0)
 ;
"RTN","PXRMEXPS",24,0)
 ;==========================================
"RTN","PXRMEXPS",25,0)
EXISTS(FILENUM,IEN,PACKLIST) ;If the entry already exists remove it
"RTN","PXRMEXPS",26,0)
 ;and keep only the higher entry.
"RTN","PXRMEXPS",27,0)
 I '$D(PACKLIST(FILENUM,"IEN",IEN)) Q
"RTN","PXRMEXPS",28,0)
 N NUM
"RTN","PXRMEXPS",29,0)
 S NUM=PACKLIST(FILENUM,"IEN",IEN)
"RTN","PXRMEXPS",30,0)
 K PACKLIST(FILENUM,NUM)
"RTN","PXRMEXPS",31,0)
 Q
"RTN","PXRMEXPS",32,0)
 ;
"RTN","PXRMEXPS",33,0)
 ;==========================================
"RTN","PXRMEXPS",34,0)
GEDSUB(EDUIEN,NSUB,LIST) ;Build the recursive list of education topic
"RTN","PXRMEXPS",35,0)
 ;subtopics.
"RTN","PXRMEXPS",36,0)
 ;DBIA #3085
"RTN","PXRMEXPS",37,0)
 N IND,SUBIEN
"RTN","PXRMEXPS",38,0)
 S IND=0
"RTN","PXRMEXPS",39,0)
 F  S IND=+$O(^AUTTEDT(EDUIEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",40,0)
 . S NSUB=NSUB+1
"RTN","PXRMEXPS",41,0)
 . S SUBIEN=$P(^AUTTEDT(EDUIEN,10,IND,0),U,1)
"RTN","PXRMEXPS",42,0)
 . S LIST(NSUB)=SUBIEN
"RTN","PXRMEXPS",43,0)
 . D GEDSUB(SUBIEN,.NSUB,.LIST)
"RTN","PXRMEXPS",44,0)
 Q
"RTN","PXRMEXPS",45,0)
 ;
"RTN","PXRMEXPS",46,0)
 ;==========================================
"RTN","PXRMEXPS",47,0)
GETFNUM(GBL) ;Return the file number for a global.
"RTN","PXRMEXPS",48,0)
 S GBL="^"_GBL_"0)"
"RTN","PXRMEXPS",49,0)
 Q +$P(@GBL,U,2)
"RTN","PXRMEXPS",50,0)
 ;
"RTN","PXRMEXPS",51,0)
 ;==========================================
"RTN","PXRMEXPS",52,0)
GETSRTN(FILENUM) ;Return the save routine according to the file number.
"RTN","PXRMEXPS",53,0)
 I FILENUM=50 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",54,0)
 I FILENUM=50.6 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",55,0)
 I FILENUM=50.605 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",56,0)
 I FILENUM=60 Q "SLT^PXRMEXPS"
"RTN","PXRMEXPS",57,0)
 I FILENUM=71 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",58,0)
 I FILENUM=80 Q "NOSAVE^PXRMEXPS"
"RTN","PXRMEXPS",59,0)
 I FILENUM=80.1 Q "NOSAVE^PXRMEXPS"
"RTN","PXRMEXPS",60,0)
 I FILENUM=81 Q "NOSAVE^PXRMEXPS"
"RTN","PXRMEXPS",61,0)
 I FILENUM=101.41 Q "SODIALOG^PXRMEXPS"
"RTN","PXRMEXPS",62,0)
 I FILENUM=101.43 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",63,0)
 I FILENUM=120.51 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",64,0)
 I FILENUM=142 Q "SHST^PXRMEXPS"
"RTN","PXRMEXPS",65,0)
 I FILENUM=142.1 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",66,0)
 I FILENUM=142.5 Q "SHSO^PXRMEXPS"
"RTN","PXRMEXPS",67,0)
 I FILENUM=601.71 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",68,0)
 I FILENUM=790.404 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",69,0)
 I FILENUM=801 Q "SROC^PXRMEXPS"
"RTN","PXRMEXPS",70,0)
 I FILENUM=801.41 Q "SDIALOG^PXRMEXPS"
"RTN","PXRMEXPS",71,0)
 I FILENUM=810.2 Q "SEDEF^PXRMEXPS"
"RTN","PXRMEXPS",72,0)
 I FILENUM=810.4 Q "SLR^PXRMEXPS"
"RTN","PXRMEXPS",73,0)
 I FILENUM=810.7 Q "SRECR^PXRMEXPS"
"RTN","PXRMEXPS",74,0)
 I FILENUM=810.8 Q "SRCG^PXRMEXPS"
"RTN","PXRMEXPS",75,0)
 I FILENUM=810.9 Q "SLL^PXRMEXPS"
"RTN","PXRMEXPS",76,0)
 I FILENUM=811.2 Q "SGENR^PXRMEXPS"
"RTN","PXRMEXPS",77,0)
 I FILENUM=811.4 Q "SCF^PXRMEXPS"
"RTN","PXRMEXPS",78,0)
 I FILENUM=811.5 Q "SRT^PXRMEXPS"
"RTN","PXRMEXPS",79,0)
 I FILENUM=811.6 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",80,0)
 I FILENUM=811.9 Q "SDEF^PXRMEXPS"
"RTN","PXRMEXPS",81,0)
 I FILENUM=8925.1 Q "STIUOBJ^PXRMEXPS"
"RTN","PXRMEXPS",82,0)
 I FILENUM=8927.1 Q "STIUTEMP^PXRMEXPS"
"RTN","PXRMEXPS",83,0)
 I FILENUM=9999999.09 Q "SED^PXRMEXPS"
"RTN","PXRMEXPS",84,0)
 I FILENUM=9999999.14 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",85,0)
 I FILENUM=9999999.15 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",86,0)
 I FILENUM=9999999.28 Q "SGEN^PXRMEXPS"
"RTN","PXRMEXPS",87,0)
 I FILENUM=9999999.64 Q "SHF^PXRMEXPS"
"RTN","PXRMEXPS",88,0)
 Q "NORTN^PXRMEXPS"
"RTN","PXRMEXPS",89,0)
 ;
"RTN","PXRMEXPS",90,0)
 ;==========================================
"RTN","PXRMEXPS",91,0)
NORTN(FILENUM,IEN,PACKLIST) ;Don't have a routine for this file number.
"RTN","PXRMEXPS",92,0)
 S NF=+$O(PACKLIST(FILENUM,"IEN"),-1)+1
"RTN","PXRMEXPS",93,0)
 S PACKLIST(FILENUM,NF)=IEN
"RTN","PXRMEXPS",94,0)
 S PACKLIST(FILENUM,"IEN",IEN)=NF
"RTN","PXRMEXPS",95,0)
 S PACKLIST(FILENUM,"ERROR",IEN)="No packing routine for file number "_FILENUM_"."
"RTN","PXRMEXPS",96,0)
 Q
"RTN","PXRMEXPS",97,0)
 ;
"RTN","PXRMEXPS",98,0)
 ;==========================================
"RTN","PXRMEXPS",99,0)
NOSAVE(FILENUM,IEN,PACKLIST) ;Don't do anything for this file number.
"RTN","PXRMEXPS",100,0)
 Q
"RTN","PXRMEXPS",101,0)
 ;
"RTN","PXRMEXPS",102,0)
 ;==========================================
"RTN","PXRMEXPS",103,0)
SCF(FILENUM,IEN,PACKLIST) ;Reminder computed findings.
"RTN","PXRMEXPS",104,0)
 N CFRTN
"RTN","PXRMEXPS",105,0)
 ;Add the computed finding file entry.
"RTN","PXRMEXPS",106,0)
 D SGENR(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",107,0)
 S CFRTN=$P(^PXRMD(811.4,IEN,0),U,2)
"RTN","PXRMEXPS",108,0)
 ;Add the routine; mark routines with file number 0.
"RTN","PXRMEXPS",109,0)
 D SGEN(0,CFRTN,.PACKLIST)
"RTN","PXRMEXPS",110,0)
 Q
"RTN","PXRMEXPS",111,0)
 ;
"RTN","PXRMEXPS",112,0)
 ;==========================================
"RTN","PXRMEXPS",113,0)
SDEF(FILENUM,RIEN,PACKLIST) ;Reminder definitions.
"RTN","PXRMEXPS",114,0)
 N DIALOG,FNUM,GBL,IEN,NF,ROUTINE,SPON
"RTN","PXRMEXPS",115,0)
 D SGENR(FILENUM,RIEN,.PACKLIST)
"RTN","PXRMEXPS",116,0)
 ;Process the finding multiple.
"RTN","PXRMEXPS",117,0)
 S GBL=""
"RTN","PXRMEXPS",118,0)
 F  S GBL=$O(^PXD(811.9,RIEN,20,"E",GBL)) Q:GBL=""  D
"RTN","PXRMEXPS",119,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",120,0)
 . I FNUM=811.4 D CHKCF("^PXD(811.9)",RIEN,GBL,.PACKLIST)
"RTN","PXRMEXPS",121,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",122,0)
 . S IEN=""
"RTN","PXRMEXPS",123,0)
 . F  S IEN=$O(^PXD(811.9,RIEN,20,"E",GBL,IEN)) Q:IEN=""  D @ROUTINE
"RTN","PXRMEXPS",124,0)
 ;Dialog
"RTN","PXRMEXPS",125,0)
 S DIALOG=+$G(^PXD(811.9,RIEN,51))
"RTN","PXRMEXPS",126,0)
 I DIALOG>0,'$D(PACKLIST(801.41,"IEN",DIALOG)) D SDIALOG(801.41,DIALOG,.PACKLIST)
"RTN","PXRMEXPS",127,0)
 Q
"RTN","PXRMEXPS",128,0)
 ;
"RTN","PXRMEXPS",129,0)
 ;==========================================
"RTN","PXRMEXPS",130,0)
SDIALOG(FILENUM,DIEN,PACKLIST) ;Reminder dialogs.
"RTN","PXRMEXPS",131,0)
 I DIEN'>0 Q
"RTN","PXRMEXPS",132,0)
 N IEN,IND,FI,FNUM,GBL,MHT,OI,OLIST,REG,ROUTINE,TEMP,TERM,TLIST
"RTN","PXRMEXPS",133,0)
 D SGENR(FILENUM,DIEN,.PACKLIST)
"RTN","PXRMEXPS",134,0)
 ;Get the source reminder.
"RTN","PXRMEXPS",135,0)
 S IEN=$P(^PXRMD(801.41,DIEN,0),U,2)
"RTN","PXRMEXPS",136,0)
 I IEN'="" D
"RTN","PXRMEXPS",137,0)
 . S ROUTINE=$$GETSRTN(811.9)_"(811.9,IEN,.PACKLIST)"
"RTN","PXRMEXPS",138,0)
 . D @ROUTINE
"RTN","PXRMEXPS",139,0)
 ;Check for a finding item.
"RTN","PXRMEXPS",140,0)
 S TEMP=$G(^PXRMD(801.41,DIEN,1))
"RTN","PXRMEXPS",141,0)
 S FI=$P(TEMP,U,5)
"RTN","PXRMEXPS",142,0)
 I FI'="" D
"RTN","PXRMEXPS",143,0)
 . S IEN=$P(FI,";",1)
"RTN","PXRMEXPS",144,0)
 . S GBL=$P(FI,";",2)
"RTN","PXRMEXPS",145,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",146,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",147,0)
 . D @ROUTINE
"RTN","PXRMEXPS",148,0)
 ;Check for an orderable item.
"RTN","PXRMEXPS",149,0)
 S OI=$P(TEMP,U,7)
"RTN","PXRMEXPS",150,0)
 I OI'="" D
"RTN","PXRMEXPS",151,0)
 . S ROUTINE=$$GETSRTN(101.43)_"(101.43,OI,.PACKLIST)"
"RTN","PXRMEXPS",152,0)
 . D @ROUTINE
"RTN","PXRMEXPS",153,0)
 ;Check for additional findings.
"RTN","PXRMEXPS",154,0)
 S IND=0
"RTN","PXRMEXPS",155,0)
 F  S IND=+$O(^PXRMD(801.41,DIEN,3,IND)) Q:IND=0  D
"RTN","PXRMEXPS",156,0)
 . S FI=$P(^PXRMD(801.41,DIEN,3,IND,0),U,1)
"RTN","PXRMEXPS",157,0)
 . S IEN=$P(FI,";",1)
"RTN","PXRMEXPS",158,0)
 . S GBL=$P(FI,";",2)
"RTN","PXRMEXPS",159,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",160,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",161,0)
 . D @ROUTINE
"RTN","PXRMEXPS",162,0)
 ;Check word processing fields for TIU Object and Template Fields
"RTN","PXRMEXPS",163,0)
 D TIUSRCH^PXRMEXU1("^PXRMD(801.41,",DIEN,25,.OLIST,.TLIST)
"RTN","PXRMEXPS",164,0)
 I $D(OLIST)>0 D
"RTN","PXRMEXPS",165,0)
 . S ROUTINE=$$GETSRTN(8925.1)_"(8925.1,.OLIST,.PACKLIST)"
"RTN","PXRMEXPS",166,0)
 . D @ROUTINE K OLIST
"RTN","PXRMEXPS",167,0)
 I $D(TLIST)>0 D
"RTN","PXRMEXPS",168,0)
 . S ROUTINE=$$GETSRTN(8927.1)_"(8927.1,.TLIST,.PACKLIST)"
"RTN","PXRMEXPS",169,0)
 . D @ROUTINE K TLIST
"RTN","PXRMEXPS",170,0)
 D TIUSRCH^PXRMEXU1("^PXRMD(801.41,",DIEN,35,.OLIST,.TLIST)
"RTN","PXRMEXPS",171,0)
 I $D(OLIST)>0 D
"RTN","PXRMEXPS",172,0)
 . S ROUTINE=$$GETSRTN(8925.1)_"(8925.1,.OLIST,.PACKLIST)"
"RTN","PXRMEXPS",173,0)
 . D @ROUTINE K OLIST
"RTN","PXRMEXPS",174,0)
 I $D(TLIST)>0 D
"RTN","PXRMEXPS",175,0)
 . S ROUTINE=$$GETSRTN(8927.1)_"(8927.1,.TLIST,.PACKLIST)"
"RTN","PXRMEXPS",176,0)
 . D @ROUTINE K TLIST
"RTN","PXRMEXPS",177,0)
 ;Check the components multiple for elements.
"RTN","PXRMEXPS",178,0)
 I $D(^PXRMD(801.41,DIEN,10)) D
"RTN","PXRMEXPS",179,0)
 . S ROUTINE=$$GETSRTN(801.41)_"(801.41,IEN,.PACKLIST)"
"RTN","PXRMEXPS",180,0)
 . S IND=0
"RTN","PXRMEXPS",181,0)
 . F  S IND=+$O(^PXRMD(801.41,DIEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",182,0)
 .. S IEN=$P(^PXRMD(801.41,DIEN,10,IND,0),U,2)
"RTN","PXRMEXPS",183,0)
 .. D @ROUTINE
"RTN","PXRMEXPS",184,0)
 ;Check for a term and a replacement element/group.
"RTN","PXRMEXPS",185,0)
 S TEMP=$G(^PXRMD(801.41,DIEN,49))
"RTN","PXRMEXPS",186,0)
 S TERM=$P(TEMP,U,1)
"RTN","PXRMEXPS",187,0)
 I TERM'="" D
"RTN","PXRMEXPS",188,0)
 . S ROUTINE=$$GETSRTN(811.5)_"(811.5,TERM,.PACKLIST)"
"RTN","PXRMEXPS",189,0)
 . D @ROUTINE
"RTN","PXRMEXPS",190,0)
 S REG=$P(TEMP,U,3)
"RTN","PXRMEXPS",191,0)
 I REG'="" D
"RTN","PXRMEXPS",192,0)
 . S ROUTINE=$$GETSRTN(801.41)_"(801.41,REG,.PACKLIST)"
"RTN","PXRMEXPS",193,0)
 . D @ROUTINE
"RTN","PXRMEXPS",194,0)
 ;Check for a mental health test.
"RTN","PXRMEXPS",195,0)
 S MHT=$P($G(^PXRMD(801.41,DIEN,50)),U,1)
"RTN","PXRMEXPS",196,0)
 I MHT'="" D
"RTN","PXRMEXPS",197,0)
 . S ROUTINE=$$GETSRTN(601.71)_"(601.71,MHT,.PACKLIST)"
"RTN","PXRMEXPS",198,0)
 . D @ROUTINE
"RTN","PXRMEXPS",199,0)
 ;Check for result groups.
"RTN","PXRMEXPS",200,0)
 I $D(^PXRMD(801.41,DIEN,51)) D
"RTN","PXRMEXPS",201,0)
 . S ROUTINE=$$GETSRTN(801.41)_"(801.41,IEN,.PACKLIST)"
"RTN","PXRMEXPS",202,0)
 . S IND=0
"RTN","PXRMEXPS",203,0)
 . F  S IND=+$O(^PXRMD(801.41,DIEN,51,IND)) Q:IND=0  D
"RTN","PXRMEXPS",204,0)
 .. S IEN=$P(^PXRMD(801.41,DIEN,51,IND,0),U,1)
"RTN","PXRMEXPS",205,0)
 .. D @ROUTINE
"RTN","PXRMEXPS",206,0)
 Q
"RTN","PXRMEXPS",207,0)
 ;
"RTN","PXRMEXPS",208,0)
 ;==========================================
"RTN","PXRMEXPS",209,0)
SED(FILENUM,IEN,PACKLIST) ;Education topics.
"RTN","PXRMEXPS",210,0)
 N IND,NF,NSUB,SUBLIST
"RTN","PXRMEXPS",211,0)
 D EXISTS(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",212,0)
 D ADD(FILENUM,IEN,.PACKLIST,.NF)
"RTN","PXRMEXPS",213,0)
 S NSUB=0
"RTN","PXRMEXPS",214,0)
 ;Get all the subtopics.
"RTN","PXRMEXPS",215,0)
 D GEDSUB(IEN,.NSUB,.SUBLIST)
"RTN","PXRMEXPS",216,0)
 F IND=1:1:NSUB D
"RTN","PXRMEXPS",217,0)
 . D EXISTS(FILENUM,SUBLIST(IND),.PACKLIST)
"RTN","PXRMEXPS",218,0)
 . S NF=NF+1
"RTN","PXRMEXPS",219,0)
 . S PACKLIST(FILENUM,NF)=SUBLIST(IND)
"RTN","PXRMEXPS",220,0)
 . S PACKLIST(FILENUM,"IEN",SUBLIST(IND))=NF
"RTN","PXRMEXPS",221,0)
 Q
"RTN","PXRMEXPS",222,0)
 ;
"RTN","PXRMEXPS",223,0)
 ;==========================================
"RTN","PXRMEXPS",224,0)
SEDEF(FILENUM,IEN,PACKLIST) ;Reminder extract definitions.
"RTN","PXRMEXPS",225,0)
 N CR,CRRTN,IND,JND,LRRTN,LRS,RDEF,RDEFRTN,TEMP
"RTN","PXRMEXPS",226,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",227,0)
 ;Initialize the save routines.
"RTN","PXRMEXPS",228,0)
 S LRRTN=$$GETSRTN(810.4)_"(810.4,LRS,.PACKLIST)"
"RTN","PXRMEXPS",229,0)
 S CRRTN=$$GETSRTN(810.7)_"(810.7,CR,.PACKLIST)"
"RTN","PXRMEXPS",230,0)
 S RDEFRTN=$$GETSRTN(811.9)_"(811.9,RDEF,.PACKLIST)"
"RTN","PXRMEXPS",231,0)
 ;Go through the extract sequence.
"RTN","PXRMEXPS",232,0)
 S IND=0
"RTN","PXRMEXPS",233,0)
 F  S IND=+$O(^PXRM(810.2,IEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",234,0)
 . S LRS=$P(^PXRM(810.2,IEN,10,IND,0),U,2)
"RTN","PXRMEXPS",235,0)
 . D @LRRTN
"RTN","PXRMEXPS",236,0)
 .;Go through the reminders and counting rules.
"RTN","PXRMEXPS",237,0)
 . S JND=0
"RTN","PXRMEXPS",238,0)
 . F  S JND=+$O(^PXRM(810.2,IEN,10,IND,10,JND)) Q:JND=0  D
"RTN","PXRMEXPS",239,0)
 .. S TEMP=^PXRM(810.2,IEN,10,IND,10,JND,0)
"RTN","PXRMEXPS",240,0)
 .. S RDEF=$P(TEMP,U,2)
"RTN","PXRMEXPS",241,0)
 .. I RDEF'="" D @RDEFRTN
"RTN","PXRMEXPS",242,0)
 .. S CR=$P(TEMP,U,3)
"RTN","PXRMEXPS",243,0)
 .. I CR'="" D @CRRTN
"RTN","PXRMEXPS",244,0)
 Q
"RTN","PXRMEXPS",245,0)
 ;
"RTN","PXRMEXPS",246,0)
 ;==========================================
"RTN","PXRMEXPS",247,0)
SGEN(FILENUM,IEN,PACKLIST) ;General save routine, used for everything that
"RTN","PXRMEXPS",248,0)
 ;does not require special handling.
"RTN","PXRMEXPS",249,0)
 N NF
"RTN","PXRMEXPS",250,0)
 D EXISTS(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",251,0)
 D ADD(FILENUM,IEN,.PACKLIST,.NF)
"RTN","PXRMEXPS",252,0)
 Q
"RTN","PXRMEXPS",253,0)
 ;
"RTN","PXRMEXPS",254,0)
 ;==========================================
"RTN","PXRMEXPS",255,0)
SGENR(FILENUM,IEN,PACKLIST) ;General reminder global save routine, used for
"RTN","PXRMEXPS",256,0)
 ;reminder globals that do not require special handling.
"RTN","PXRMEXPS",257,0)
 N SPON
"RTN","PXRMEXPS",258,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",259,0)
 S SPON=+$$GET1^DIQ(FILENUM,IEN,101,"I")
"RTN","PXRMEXPS",260,0)
 I SPON>0 D SGEN(811.6,SPON,.PACKLIST)
"RTN","PXRMEXPS",261,0)
 Q
"RTN","PXRMEXPS",262,0)
 ;
"RTN","PXRMEXPS",263,0)
 ;==========================================
"RTN","PXRMEXPS",264,0)
SHF(FILENUM,IEN,PACKLIST) ;Health factors.
"RTN","PXRMEXPS",265,0)
 N CAT,HF,NF
"RTN","PXRMEXPS",266,0)
 ;All health factor references covered by DBIA #3083.
"RTN","PXRMEXPS",267,0)
 ;If the health factor is a category then it has to be coming from
"RTN","PXRMEXPS",268,0)
 ;a health summary so include all the health factors in the category.
"RTN","PXRMEXPS",269,0)
 I $P(^AUTTHF(IEN,0),U,10)="C" D
"RTN","PXRMEXPS",270,0)
 . S CAT=1,HF=0
"RTN","PXRMEXPS",271,0)
 . F  S HF=$O(^AUTTHF("AC",IEN,HF)) Q:HF'>0  D
"RTN","PXRMEXPS",272,0)
 .. D EXISTS(FILENUM,HF,.PACKLIST)
"RTN","PXRMEXPS",273,0)
 .. D ADD(FILENUM,HF,.PACKLIST,.NF)
"RTN","PXRMEXPS",274,0)
 D EXISTS(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",275,0)
 D ADD(FILENUM,IEN,.PACKLIST,.NF)
"RTN","PXRMEXPS",276,0)
 I $G(CAT) Q
"RTN","PXRMEXPS",277,0)
 ;For a regular health factor make sure the category is on the list.
"RTN","PXRMEXPS",278,0)
 S CAT=$P(^AUTTHF(IEN,0),U,3)
"RTN","PXRMEXPS",279,0)
 D EXISTS(FILENUM,CAT,.PACKLIST)
"RTN","PXRMEXPS",280,0)
 S NF=NF+1
"RTN","PXRMEXPS",281,0)
 S PACKLIST(FILENUM,NF)=CAT
"RTN","PXRMEXPS",282,0)
 S PACKLIST(FILENUM,"IEN",CAT)=NF
"RTN","PXRMEXPS",283,0)
 Q
"RTN","PXRMEXPS",284,0)
 ;
"RTN","PXRMEXPS",285,0)
 ;==========================================
"RTN","PXRMEXPS",286,0)
SHSO(FILENUM,IEN,PACKLIST) ;Health summary object.
"RTN","PXRMEXPS",287,0)
 N HST
"RTN","PXRMEXPS",288,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",289,0)
 S HST=$P($G(^GMT(142.5,IEN,0)),U,3)
"RTN","PXRMEXPS",290,0)
 S ROUTINE=$$GETSRTN(142)_"(142,.HST,.PACKLIST)"
"RTN","PXRMEXPS",291,0)
 D @ROUTINE
"RTN","PXRMEXPS",292,0)
 Q
"RTN","PXRMEXPS",293,0)
 ;
"RTN","PXRMEXPS",294,0)
 ;==========================================
"RTN","PXRMEXPS",295,0)
SHST(FILENUM,IEN,PACKLIST) ;Health Summary Type
"RTN","PXRMEXPS",296,0)
 N CNT,FNUM,GBL,HSC,ITEM,NODE,ROUTINE,SEL
"RTN","PXRMEXPS",297,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",298,0)
 S CNT=0 F  S CNT=$O(^GMT(142,IEN,1,CNT)) Q:CNT'>0  D
"RTN","PXRMEXPS",299,0)
 .S HSC=$P($G(^GMT(142,IEN,1,CNT,0)),U,2)
"RTN","PXRMEXPS",300,0)
 .S ROUTINE=$$GETSRTN(142.1)_"(142.1,HSC,.PACKLIST)"
"RTN","PXRMEXPS",301,0)
 .D @ROUTINE
"RTN","PXRMEXPS",302,0)
 .;loop through selection item, variable pointer
"RTN","PXRMEXPS",303,0)
 .S SEL=0 F  S SEL=$O(^GMT(142,IEN,1,CNT,1,SEL)) Q:SEL'>0  D
"RTN","PXRMEXPS",304,0)
 ..S NODE=$P($G(^GMT(142,IEN,1,CNT,1,SEL,0)),U)
"RTN","PXRMEXPS",305,0)
 ..I NODE'="" D
"RTN","PXRMEXPS",306,0)
 ...S ITEM=$P(NODE,";",1)
"RTN","PXRMEXPS",307,0)
 ...S GBL=$P(NODE,";",2)
"RTN","PXRMEXPS",308,0)
 ...S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",309,0)
 ...S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,ITEM,.PACKLIST)"
"RTN","PXRMEXPS",310,0)
 ...I ROUTINE="NOROUTINE" Q
"RTN","PXRMEXPS",311,0)
 ...D @ROUTINE
"RTN","PXRMEXPS",312,0)
 Q
"RTN","PXRMEXPS",313,0)
 ;
"RTN","PXRMEXPS",314,0)
 ;==========================================
"RTN","PXRMEXPS",315,0)
SLL(FILENUM,IEN,PACKLIST) ;Reminder location lists.
"RTN","PXRMEXPS",316,0)
 N CSTEXL,IND,ROUTINE
"RTN","PXRMEXPS",317,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",318,0)
 ;If CREDIT STOPS TO EXCLUDE (LIST) has been used put it on the packing
"RTN","PXRMEXPS",319,0)
 ;list.
"RTN","PXRMEXPS",320,0)
 S IND=0
"RTN","PXRMEXPS",321,0)
 F  S IND=+$O(^PXRMD(810.9,IEN,40.7,IND)) Q:IND=0  D
"RTN","PXRMEXPS",322,0)
 . S CSTEXL=$G(^PXRMD(810.9,IEN,40.7,IND,2))
"RTN","PXRMEXPS",323,0)
 . I CSTEXL="" Q
"RTN","PXRMEXPS",324,0)
 . S ROUTINE=$$GETSRTN(810.9)_"(810.9,CSTEXL,.PACKLIST)"
"RTN","PXRMEXPS",325,0)
 . D @ROUTINE
"RTN","PXRMEXPS",326,0)
 ;Save information about hospital locations which are non-transportable.
"RTN","PXRMEXPS",327,0)
 I $D(^PXRMD(810.9,IEN,44))>1 D NTHLOC^PXRMEXFI(IEN,"LOCATION LIST")
"RTN","PXRMEXPS",328,0)
 Q
"RTN","PXRMEXPS",329,0)
 ;
"RTN","PXRMEXPS",330,0)
 ;==========================================
"RTN","PXRMEXPS",331,0)
SLR(FILENUM,IEN,PACKLIST) ;Reminder list rules.
"RTN","PXRMEXPS",332,0)
 N IND,LR,RDEF,RTERM,ROUTINE,TEMP
"RTN","PXRMEXPS",333,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",334,0)
 S TEMP=^PXRM(810.4,IEN,0)
"RTN","PXRMEXPS",335,0)
 S RTERM=$P(TEMP,U,7)
"RTN","PXRMEXPS",336,0)
 I RTERM'="" D
"RTN","PXRMEXPS",337,0)
 . S ROUTINE=$$GETSRTN(811.5)_"(811.5,RTERM,.PACKLIST)"
"RTN","PXRMEXPS",338,0)
 . D @ROUTINE
"RTN","PXRMEXPS",339,0)
 S RDEF=$P(TEMP,U,10)
"RTN","PXRMEXPS",340,0)
 I RDEF'="" D
"RTN","PXRMEXPS",341,0)
 . S ROUTINE=$$GETSRTN(811.9)_"(811.9,RDEF,.PACKLIST)"
"RTN","PXRMEXPS",342,0)
 . D @ROUTINE
"RTN","PXRMEXPS",343,0)
 ;If there is a sequence save the list rules.
"RTN","PXRMEXPS",344,0)
 I '$D(^PXRM(810.4,IEN,30)) Q
"RTN","PXRMEXPS",345,0)
 S ROUTINE=$$GETSRTN(810.4)_"(810.4,LR,.PACKLIST)"
"RTN","PXRMEXPS",346,0)
 S IND=0
"RTN","PXRMEXPS",347,0)
 F  S IND=+$O(^PXRM(810.4,IEN,30,IND)) Q:IND=0  D
"RTN","PXRMEXPS",348,0)
 . S LR=$P(^PXRM(810.4,IEN,30,IND,0),U,2)
"RTN","PXRMEXPS",349,0)
 . D @ROUTINE
"RTN","PXRMEXPS",350,0)
 Q
"RTN","PXRMEXPS",351,0)
 ;
"RTN","PXRMEXPS",352,0)
 ;==========================================
"RTN","PXRMEXPS",353,0)
SLT(FILENUM,IEN,PACKLIST) ;Lab tests
"RTN","PXRMEXPS",354,0)
 I +IEN'=IEN S IEN=$P(IEN,";",3)
"RTN","PXRMEXPS",355,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",356,0)
 Q
"RTN","PXRMEXPS",357,0)
 ;
"RTN","PXRMEXPS",358,0)
 ;==========================================
"RTN","PXRMEXPS",359,0)
SODIALOG(FILENUM,IEN,PACKLIST) ;Order dialogs.
"RTN","PXRMEXPS",360,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",361,0)
 ;dbia 5446
"RTN","PXRMEXPS",362,0)
 D EN^ORORDDSC(IEN,"ORDER DIALOG")
"RTN","PXRMEXPS",363,0)
 Q
"RTN","PXRMEXPS",364,0)
 ;
"RTN","PXRMEXPS",365,0)
 ;==========================================
"RTN","PXRMEXPS",366,0)
SRCG(FILENUM,IEN,PACKLIST) ;Reminder counting groups.
"RTN","PXRMEXPS",367,0)
 N IND,ROUTINE,TIEN
"RTN","PXRMEXPS",368,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",369,0)
 ;Put terms on the pack list.
"RTN","PXRMEXPS",370,0)
 S ROUTINE=$$GETSRTN(811.5)_"(811.5,TIEN,.PACKLIST)"
"RTN","PXRMEXPS",371,0)
 S IND=0
"RTN","PXRMEXPS",372,0)
 F  S IND=+$O(^PXRM(810.8,IEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",373,0)
 . S TIEN=$P(^PXRM(810.8,IEN,10,IND,0),U,2)
"RTN","PXRMEXPS",374,0)
 . D @ROUTINE
"RTN","PXRMEXPS",375,0)
 Q
"RTN","PXRMEXPS",376,0)
 ;
"RTN","PXRMEXPS",377,0)
 ;==========================================
"RTN","PXRMEXPS",378,0)
SRECR(FILENUM,IEN,PACKLIST) ;Reminder extract counting rule.
"RTN","PXRMEXPS",379,0)
 N CGIEN,IND,ROUTINE,TIEN
"RTN","PXRMEXPS",380,0)
 D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",381,0)
 ;Put counting groups on the pack list.
"RTN","PXRMEXPS",382,0)
 S ROUTINE=$$GETSRTN(810.8)_"(810.8,CGIEN,.PACKLIST)"
"RTN","PXRMEXPS",383,0)
 S IND=0
"RTN","PXRMEXPS",384,0)
 F  S IND=+$O(^PXRM(810.7,IEN,10,IND)) Q:IND=0  D
"RTN","PXRMEXPS",385,0)
 . S CGIEN=$P(^PXRM(810.7,IEN,10,IND,0),U,2)
"RTN","PXRMEXPS",386,0)
 . D @ROUTINE
"RTN","PXRMEXPS",387,0)
 Q
"RTN","PXRMEXPS",388,0)
 ;
"RTN","PXRMEXPS",389,0)
 ;==========================================
"RTN","PXRMEXPS",390,0)
SRT(FILENUM,TIEN,PACKLIST) ;Reminder terms.
"RTN","PXRMEXPS",391,0)
 N FNUM,GBL,IEN,NF,ROUTINE,SPON
"RTN","PXRMEXPS",392,0)
 N ITEM,NUM,RIEN
"RTN","PXRMEXPS",393,0)
 D EXISTS(FILENUM,TIEN,.PACKLIST)
"RTN","PXRMEXPS",394,0)
 D ADD(FILENUM,TIEN,.PACKLIST,.NF)
"RTN","PXRMEXPS",395,0)
 ;Process the finding multiple.
"RTN","PXRMEXPS",396,0)
 S GBL=""
"RTN","PXRMEXPS",397,0)
 F  S GBL=$O(^PXRMD(811.5,TIEN,20,"E",GBL)) Q:GBL=""  D
"RTN","PXRMEXPS",398,0)
 . S FNUM=$$GETFNUM(GBL)
"RTN","PXRMEXPS",399,0)
 . I FNUM=811.4 D CHKCF("^PXRMD(811.5)",TIEN,GBL,.PACKLIST)
"RTN","PXRMEXPS",400,0)
 . S ROUTINE=$$GETSRTN(FNUM)_"(FNUM,IEN,.PACKLIST)"
"RTN","PXRMEXPS",401,0)
 . S IEN=""
"RTN","PXRMEXPS",402,0)
 . F  S IEN=$O(^PXRMD(811.5,TIEN,20,"E",GBL,IEN)) Q:IEN=""  D @ROUTINE
"RTN","PXRMEXPS",403,0)
 ;Sponsor
"RTN","PXRMEXPS",404,0)
 S SPON=+$P(^PXRMD(811.5,TIEN,100),U,2)
"RTN","PXRMEXPS",405,0)
 I SPON>0 D SGEN(811.6,SPON,.PACKLIST)
"RTN","PXRMEXPS",406,0)
 Q
"RTN","PXRMEXPS",407,0)
 ;
"RTN","PXRMEXPS",408,0)
 ;==========================================
"RTN","PXRMEXPS",409,0)
SROC(FILENUM,ROCIEN,PACKLIST) ;Reminder Order Checks.
"RTN","PXRMEXPS",410,0)
 ;packed order check structure up
"RTN","PXRMEXPS",411,0)
 D SGENR(FILENUM,ROCIEN,.PACKLIST)
"RTN","PXRMEXPS",412,0)
 N SUB,DRCL,OI,OLIST,RIEN,ROUTINE,TIEN,TLIST,WPNODE
"RTN","PXRMEXPS",413,0)
 ;packed list of Drug Classes
"RTN","PXRMEXPS",414,0)
 I $D(^PXD(801,ROCIEN,2)) D
"RTN","PXRMEXPS",415,0)
 .S SUB=0 F  S SUB=$O(^PXD(801,ROCIEN,1.5,SUB)) Q:SUB'>0  D
"RTN","PXRMEXPS",416,0)
 ..S DRCL=$P($G(^PXD(801,ROCIEN,1.5,SUB,0)),U) Q:DRCL'>0
"RTN","PXRMEXPS",417,0)
 ..S ROUTINE=$$GETSRTN(50.605)_"(50.605,DRCL,.PACKLIST)"
"RTN","PXRMEXPS",418,0)
 ..D @ROUTINE
"RTN","PXRMEXPS",419,0)
 ;packed list of Orderable Item
"RTN","PXRMEXPS",420,0)
 I $D(^PXD(801,ROCIEN,2)) D
"RTN","PXRMEXPS",421,0)
 .S SUB=0 F  S SUB=$O(^PXD(801,ROCIEN,2,SUB)) Q:SUB'>0  D
"RTN","PXRMEXPS",422,0)
 ..S OI=$P($G(^PXD(801,ROCIEN,2,SUB,0)),U) Q:OI'>0
"RTN","PXRMEXPS",423,0)
 ..S ROUTINE=$$GETSRTN(101.43)_"(101.43,OI,.PACKLIST)"
"RTN","PXRMEXPS",424,0)
 ..D @ROUTINE
"RTN","PXRMEXPS",425,0)
 ;loop through rules and packed definitions or terms
"RTN","PXRMEXPS",426,0)
 S SUB=0 F  S SUB=$O(^PXD(801,ROCIEN,3,SUB)) Q:SUB'>0  D
"RTN","PXRMEXPS",427,0)
 .I $D(^PXD(801,ROCIEN,3,SUB,4))>0 D
"RTN","PXRMEXPS",428,0)
 ..;search for TIU Objects
"RTN","PXRMEXPS",429,0)
 ..S WPNODE="3,"_SUB_",4"
"RTN","PXRMEXPS",430,0)
 ..D TIUSRCH^PXRMEXU1("^PXD(801,",ROCIEN,WPNODE,.OLIST,.TLIST)
"RTN","PXRMEXPS",431,0)
 ..I $D(OLIST)>0 D
"RTN","PXRMEXPS",432,0)
 ... S ROUTINE=$$GETSRTN(8925.1)_"(8925.1,.OLIST,.PACKLIST)"
"RTN","PXRMEXPS",433,0)
 ... D @ROUTINE K OLIST
"RTN","PXRMEXPS",434,0)
 ..K TLIST
"RTN","PXRMEXPS",435,0)
 .;packed term up only
"RTN","PXRMEXPS",436,0)
 .S TIEN=$P($G(^PXD(801,ROCIEN,3,SUB,2)),U) I TIEN>0 D  Q
"RTN","PXRMEXPS",437,0)
 ..S ROUTINE=$$GETSRTN(811.5)_"(811.5,TIEN,.PACKLIST)"
"RTN","PXRMEXPS",438,0)
 ..D @ROUTINE
"RTN","PXRMEXPS",439,0)
 .;packed definition up if defined
"RTN","PXRMEXPS",440,0)
 .S RIEN=$P($G(^PXD(801,ROCIEN,3,SUB,3)),U) I RIEN>0 D
"RTN","PXRMEXPS",441,0)
 ..S ROUTINE=$$GETSRTN(811.9)_"(811.9,RIEN,.PACKLIST)"
"RTN","PXRMEXPS",442,0)
 ..D @ROUTINE
"RTN","PXRMEXPS",443,0)
 Q
"RTN","PXRMEXPS",444,0)
 ;
"RTN","PXRMEXPS",445,0)
 ;==========================================
"RTN","PXRMEXPS",446,0)
STIUOBJ(FILENUM,OLIST,PACKLIST) ;
"RTN","PXRMEXPS",447,0)
 N ARY,CNT,HSO,IEN,NAME,ROUTINE,TEMP
"RTN","PXRMEXPS",448,0)
 S CNT=0 F  S CNT=$O(OLIST(CNT)) Q:CNT'>0  D
"RTN","PXRMEXPS",449,0)
 . S NAME=OLIST(CNT)
"RTN","PXRMEXPS",450,0)
 . ;dbia 5447
"RTN","PXRMEXPS",451,0)
 . S IEN=$$OBJBYNAM^TIUCHECK(.ARY,NAME) I IEN=-1 Q
"RTN","PXRMEXPS",452,0)
 . ;S IEN=$O(^TIU(8925.1,"B",NAME,"")) Q:IEN'>0
"RTN","PXRMEXPS",453,0)
 .;Do not ship non TIU/HS Objects
"RTN","PXRMEXPS",454,0)
 . I $G(ARY(IEN,9))'["S X=$$TIU^GMTSOBJ(" D  Q
"RTN","PXRMEXPS",455,0)
 .. D TIU^PXRMEXU5(IEN,.ARY,"TIU OBJECT")
"RTN","PXRMEXPS",456,0)
 .. D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",457,0)
 . D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",458,0)
 . S TEMP=$P($G(ARY(IEN,9)),",",2)
"RTN","PXRMEXPS",459,0)
 . S HSO=$P(TEMP,")")
"RTN","PXRMEXPS",460,0)
 . S ROUTINE=$$GETSRTN(142.5)_"(142.5,.HSO,.PACKLIST)"
"RTN","PXRMEXPS",461,0)
 . D @ROUTINE
"RTN","PXRMEXPS",462,0)
 Q
"RTN","PXRMEXPS",463,0)
 ;
"RTN","PXRMEXPS",464,0)
 ;==========================================
"RTN","PXRMEXPS",465,0)
STIUTEMP(FILENUM,TLIST,PACKLIST) ;
"RTN","PXRMEXPS",466,0)
 N CNT,IEN,NAME
"RTN","PXRMEXPS",467,0)
 S CNT=0 F  S CNT=$O(TLIST(CNT)) Q:CNT'>0  D
"RTN","PXRMEXPS",468,0)
 .S NAME=TLIST(CNT)
"RTN","PXRMEXPS",469,0)
 .S IEN=$O(^TIU(8927.1,"B",NAME,"")) Q:IEN'>0
"RTN","PXRMEXPS",470,0)
 .D SGEN(FILENUM,IEN,.PACKLIST)
"RTN","PXRMEXPS",471,0)
 Q
"RTN","PXRMEXPS",472,0)
 ;
"RTN","PXRMEXU1")
0^23^B36300309
"RTN","PXRMEXU1",1,0)
PXRMEXU1 ; SLC/PKR/PJH - Reminder exchange repository utilities, #1.;07/14/2009
"RTN","PXRMEXU1",2,0)
 ;;2.0;CLINICAL REMINDERS;**6,12,16**;Feb 04, 2005;Build 119
"RTN","PXRMEXU1",3,0)
 ;=====================================================
"RTN","PXRMEXU1",4,0)
DELETE(LIST) ;Delete the repository entries in LIST.
"RTN","PXRMEXU1",5,0)
 N DA,DIK
"RTN","PXRMEXU1",6,0)
 S DIK="^PXD(811.8,"
"RTN","PXRMEXU1",7,0)
 S DA=""
"RTN","PXRMEXU1",8,0)
 F  S DA=$O(LIST(DA)) Q:+DA=0  D ^DIK
"RTN","PXRMEXU1",9,0)
 Q
"RTN","PXRMEXU1",10,0)
 ;
"RTN","PXRMEXU1",11,0)
 ;=====================================================
"RTN","PXRMEXU1",12,0)
DELHIST(RIEN,IHIEN) ;Delete install history IHIEN in repository entry RIEN.
"RTN","PXRMEXU1",13,0)
 N DA,DIK
"RTN","PXRMEXU1",14,0)
 S DA=IHIEN,DA(1)=RIEN
"RTN","PXRMEXU1",15,0)
 S DIK="^PXD(811.8,"_DA(1)_",130,"
"RTN","PXRMEXU1",16,0)
 D ^DIK
"RTN","PXRMEXU1",17,0)
 Q
"RTN","PXRMEXU1",18,0)
 ;
"RTN","PXRMEXU1",19,0)
 ;=====================================================
"RTN","PXRMEXU1",20,0)
DESC(RIEN,DESL,DESC,KEYWORD) ;Build the description.
"RTN","PXRMEXU1",21,0)
 N JND,LC,NKEYWL
"RTN","PXRMEXU1",22,0)
 S LC=1,^PXD(811.8,RIEN,110,LC,0)="Source:      "_DESL("SOURCE")
"RTN","PXRMEXU1",23,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Date Packed: "_DESL("DATEP")
"RTN","PXRMEXU1",24,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Package Version: "_DESL("VRSN")
"RTN","PXRMEXU1",25,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",26,0)
 ;Add the user's description.
"RTN","PXRMEXU1",27,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Description:"
"RTN","PXRMEXU1",28,0)
 F JND=1:1:+$P($G(@DESC@(1,0)),U,4) D
"RTN","PXRMEXU1",29,0)
 . S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=@DESC@(1,JND,0)
"RTN","PXRMEXU1",30,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",31,0)
 ;Add the keywords.
"RTN","PXRMEXU1",32,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Keywords:"
"RTN","PXRMEXU1",33,0)
 S NKEYWL=+$P($G(@KEYWORD@(1,0)),U,4)
"RTN","PXRMEXU1",34,0)
 F JND=1:1:NKEYWL D
"RTN","PXRMEXU1",35,0)
 . S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=@KEYWORD@(1,JND,0)
"RTN","PXRMEXU1",36,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)=""
"RTN","PXRMEXU1",37,0)
 S LC=LC+1,^PXD(811.8,RIEN,110,LC,0)="Components:"
"RTN","PXRMEXU1",38,0)
 S ^PXD(811.8,RIEN,110,0)=U_811.804_U_LC_U_LC
"RTN","PXRMEXU1",39,0)
 Q
"RTN","PXRMEXU1",40,0)
 ;
"RTN","PXRMEXU1",41,0)
 ;=====================================================
"RTN","PXRMEXU1",42,0)
RIEN(LIEN) ;Given the list ien return the repository ien.
"RTN","PXRMEXU1",43,0)
 N RIEN
"RTN","PXRMEXU1",44,0)
 S RIEN=$G(^TMP("PXRMEXLR",$J,"SEL",LIEN))
"RTN","PXRMEXU1",45,0)
 Q RIEN
"RTN","PXRMEXU1",46,0)
 ;
"RTN","PXRMEXU1",47,0)
 ;=====================================================
"RTN","PXRMEXU1",48,0)
SAVHIST ;Save the installation history in the repository.
"RTN","PXRMEXU1",49,0)
 N ACTION,DATE,CMPNT,FTYPE,IND,INDEX,ITEM,JND,KND,NEWNAME
"RTN","PXRMEXU1",50,0)
 N SUB,TEMP,TOTAL,TYPE,USER
"RTN","PXRMEXU1",51,0)
 ;Find the first open spot in the Installation History node.
"RTN","PXRMEXU1",52,0)
 S (IND,JND)=0
"RTN","PXRMEXU1",53,0)
 F  S IND=+$O(^PXD(811.8,PXRMRIEN,130,IND)) S JND=JND+1 Q:(IND=0)!(IND>JND)
"RTN","PXRMEXU1",54,0)
 S IND=JND
"RTN","PXRMEXU1",55,0)
 S JND=0
"RTN","PXRMEXU1",56,0)
 F SUB="PXRMEXIA","PXRMEXIAD" D
"RTN","PXRMEXU1",57,0)
 . S INDEX=0
"RTN","PXRMEXU1",58,0)
 . F  S INDEX=$O(^TMP(SUB,$J,INDEX)) Q:+INDEX=0  D
"RTN","PXRMEXU1",59,0)
 .. S JND=JND+1
"RTN","PXRMEXU1",60,0)
 .. S CMPNT=$O(^TMP(SUB,$J,INDEX,""))
"RTN","PXRMEXU1",61,0)
 .. S ITEM=$O(^TMP(SUB,$J,INDEX,CMPNT,""))
"RTN","PXRMEXU1",62,0)
 .. S ACTION=$O(^TMP(SUB,$J,INDEX,CMPNT,ITEM,""))
"RTN","PXRMEXU1",63,0)
 .. S NEWNAME=$G(^TMP(SUB,$J,INDEX,CMPNT,ITEM,ACTION))
"RTN","PXRMEXU1",64,0)
 .. S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,0)=INDEX_U_CMPNT_U_ITEM_U_ACTION_U_NEWNAME
"RTN","PXRMEXU1",65,0)
 ..;Set the 0 node.
"RTN","PXRMEXU1",66,0)
 .. S ^PXD(811.8,PXRMRIEN,130,IND,1,0)=U_"811.8031A"_U_JND_U_JND
"RTN","PXRMEXU1",67,0)
 ..;Check for finding item changes and save them.
"RTN","PXRMEXU1",68,0)
 .. S FTYPE=""
"RTN","PXRMEXU1",69,0)
 .. I CMPNT["DEFINITION" S FTYPE="DEFF"
"RTN","PXRMEXU1",70,0)
 .. I CMPNT["DIALOG" S FTYPE="DIAF"
"RTN","PXRMEXU1",71,0)
 .. I CMPNT["TERM" S FTYPE="TRMF"
"RTN","PXRMEXU1",72,0)
 .. I (FTYPE'=""),($D(^TMP(SUB,$J,FTYPE))) D
"RTN","PXRMEXU1",73,0)
 ... N FI,FINDING,OFINDING
"RTN","PXRMEXU1",74,0)
 ... S KND=2
"RTN","PXRMEXU1",75,0)
 ... S FI=""
"RTN","PXRMEXU1",76,0)
 ... F  S FI=$O(^TMP(SUB,$J,FTYPE,FI)) Q:FI=""  D
"RTN","PXRMEXU1",77,0)
 .... S OFINDING=$O(^TMP(SUB,$J,FTYPE,FI,""))
"RTN","PXRMEXU1",78,0)
 .... S FINDING=^TMP(SUB,$J,FTYPE,FI,OFINDING)
"RTN","PXRMEXU1",79,0)
 .... I OFINDING=FINDING Q
"RTN","PXRMEXU1",80,0)
 .... S KND=KND+1
"RTN","PXRMEXU1",81,0)
 .... S TEMP=$E(OFINDING,1,33)
"RTN","PXRMEXU1",82,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,KND,0)="    "_TEMP_$$INSCHR^PXRMEXLC((35-$L(TEMP))," ")_FINDING
"RTN","PXRMEXU1",83,0)
 ... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,0)=U_"811.80315A"_U_KND_U_KND
"RTN","PXRMEXU1",84,0)
 ... I KND>2 D
"RTN","PXRMEXU1",85,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,1,0)="   Finding Changes"
"RTN","PXRMEXU1",86,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,2,0)="     Original"_$$INSCHR^PXRMEXLC(27," ")_"New"
"RTN","PXRMEXU1",87,0)
 ..;
"RTN","PXRMEXU1",88,0)
 ..;Check for TIU template replacements and save them.
"RTN","PXRMEXU1",89,0)
 .. I CMPNT["DIALOG" S FTYPE="DIATIU"
"RTN","PXRMEXU1",90,0)
 .. E  S FTYPE=""
"RTN","PXRMEXU1",91,0)
 .. I (FTYPE'=""),($D(^TMP(SUB,$J,FTYPE))) D
"RTN","PXRMEXU1",92,0)
 ... N OTIUT,TIUT,TYPE
"RTN","PXRMEXU1",93,0)
 ... S TYPE=""
"RTN","PXRMEXU1",94,0)
 ... S KND=2
"RTN","PXRMEXU1",95,0)
 ... F  S TYPE=$O(^TMP(SUB,$J,FTYPE,TYPE)) Q:TYPE=""  D
"RTN","PXRMEXU1",96,0)
 .... S OTIUT=""
"RTN","PXRMEXU1",97,0)
 .... F  S OTIUT=$O(^TMP(SUB,$J,FTYPE,TYPE,OTIUT)) Q:OTIUT=""  D
"RTN","PXRMEXU1",98,0)
 ..... S TIUT=$G(^TMP(SUB,$J,FTYPE,TYPE,OTIUT))
"RTN","PXRMEXU1",99,0)
 ..... I OTIUT=TIUT Q
"RTN","PXRMEXU1",100,0)
 ..... I '$D(^TMP(SUB,$J,FTYPE,TYPE,OTIUT,ITEM)) Q
"RTN","PXRMEXU1",101,0)
 ..... S KND=KND+1
"RTN","PXRMEXU1",102,0)
 ..... S TEMP=$E(OTIUT,1,33)
"RTN","PXRMEXU1",103,0)
 ..... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,KND,0)="    "_TEMP_$$INSCHR^PXRMEXLC((35-$L(TEMP))," ")_TIUT
"RTN","PXRMEXU1",104,0)
 .... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,0)=U_"811.80315A"_U_KND_U_KND
"RTN","PXRMEXU1",105,0)
 .... I KND>2 D
"RTN","PXRMEXU1",106,0)
 ..... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,1,0)="   "_TYPE
"RTN","PXRMEXU1",107,0)
 ..... S ^PXD(811.8,PXRMRIEN,130,IND,1,JND,1,2,0)="     Original"_$$INSCHR^PXRMEXLC(27," ")_"New"
"RTN","PXRMEXU1",108,0)
 ;If JND is still 0 then there was nothing to save.
"RTN","PXRMEXU1",109,0)
 I JND>0 D
"RTN","PXRMEXU1",110,0)
 .;Save the header information.
"RTN","PXRMEXU1",111,0)
 . S DATE=$$NOW^XLFDT
"RTN","PXRMEXU1",112,0)
 . S TYPE=$G(^TMP("PXRMEXIA",$J,"TYPE"))
"RTN","PXRMEXU1",113,0)
 . I TYPE="" S TYPE="INTERACTIVE"
"RTN","PXRMEXU1",114,0)
 . S USER=$$GET1^DIQ(200,DUZ,.01,"")
"RTN","PXRMEXU1",115,0)
 . S ^PXD(811.8,PXRMRIEN,130,IND,0)=DATE_U_USER_U_TYPE
"RTN","PXRMEXU1",116,0)
 . S ^PXD(811.8,PXRMRIEN,130,"B",DATE,IND)=""
"RTN","PXRMEXU1",117,0)
 .;Set the 0 node.
"RTN","PXRMEXU1",118,0)
 . S (KND,TOTAL)=0
"RTN","PXRMEXU1",119,0)
 . F  S KND=+$O(^PXD(811.8,PXRMRIEN,130,KND)) Q:KND=0  S TOTAL=TOTAL+1
"RTN","PXRMEXU1",120,0)
 . S ^PXD(811.8,PXRMRIEN,130,0)=U_"811.803DA"_U_IND_U_TOTAL
"RTN","PXRMEXU1",121,0)
 K ^TMP("PXRMEXIA",$J)
"RTN","PXRMEXU1",122,0)
 K ^TMP("PXRMEXIAD",$J)
"RTN","PXRMEXU1",123,0)
 Q
"RTN","PXRMEXU1",124,0)
 ;
"RTN","PXRMEXU1",125,0)
 ;=====================================================
"RTN","PXRMEXU1",126,0)
 ;Extract TIU Objects/Templates from any WP text
"RTN","PXRMEXU1",127,0)
TIUSRCH(GLOB,IEN,NODE,OLIST,TLIST) ;
"RTN","PXRMEXU1",128,0)
 N OCNT,SUB,TCNT,TEXT
"RTN","PXRMEXU1",129,0)
 ;Add to existing arrays
"RTN","PXRMEXU1",130,0)
 S OCNT=+$O(OLIST(""),-1),TCNT=+$O(TLIST(""),-1),SUB=0
"RTN","PXRMEXU1",131,0)
 ;Scan WP fields
"RTN","PXRMEXU1",132,0)
 F  S SUB=$O(@(GLOB_IEN_","_NODE_","_SUB_")")) Q:'SUB  D
"RTN","PXRMEXU1",133,0)
 .;Get individual line
"RTN","PXRMEXU1",134,0)
 .S TEXT=$G(@(GLOB_IEN_","_NODE_","_SUB_",0)")) Q:TEXT=""
"RTN","PXRMEXU1",135,0)
 .;Most text lines will have no TIU link so ignore them
"RTN","PXRMEXU1",136,0)
 .I (TEXT'["|")&(TEXT'["{FLD:") Q
"RTN","PXRMEXU1",137,0)
 .;Templates are in format {FLD:fldname} (only applies to dialogs)
"RTN","PXRMEXU1",138,0)
 .I GLOB[801.41 D TIUXTR("{FLD:","}",TEXT,.TLIST,.TCNT)
"RTN","PXRMEXU1",139,0)
 .;Objects are in format |Objectname|
"RTN","PXRMEXU1",140,0)
 .D TIUXTR("|","|",TEXT,.OLIST,.OCNT)
"RTN","PXRMEXU1",141,0)
 Q
"RTN","PXRMEXU1",142,0)
 ;
"RTN","PXRMEXU1",143,0)
TIUXTR(SRCH,SRCH1,TEXT,OUTPUT,CNT) ;
"RTN","PXRMEXU1",144,0)
 N EXIST,IC,TXT,ONAME
"RTN","PXRMEXU1",145,0)
 S TXT=TEXT
"RTN","PXRMEXU1",146,0)
 F  D  Q:TXT'[SRCH
"RTN","PXRMEXU1",147,0)
 .S TXT=$E(TXT,$F(TXT,SRCH),$L(TXT)) Q:TXT'[SRCH1
"RTN","PXRMEXU1",148,0)
 .S ONAME=$P(TXT,SRCH1) Q:ONAME=""
"RTN","PXRMEXU1",149,0)
 .;
"RTN","PXRMEXU1",150,0)
 .;remove the valid item from the text string. This prevent problems
"RTN","PXRMEXU1",151,0)
 .;with multiple objects on one line.
"RTN","PXRMEXU1",152,0)
 .;
"RTN","PXRMEXU1",153,0)
 .S TXT=$P(TXT,ONAME_SRCH1,2)
"RTN","PXRMEXU1",154,0)
 .;Check if already selected
"RTN","PXRMEXU1",155,0)
 .S EXIST=0,IC=0
"RTN","PXRMEXU1",156,0)
 .F  S IC=$O(OUTPUT(IC)) Q:'IC  Q:EXIST  D
"RTN","PXRMEXU1",157,0)
 ..I $G(OUTPUT(IC))=ONAME S EXIST=1
"RTN","PXRMEXU1",158,0)
 .;Save array of object/template names
"RTN","PXRMEXU1",159,0)
 .I 'EXIST S CNT=CNT+1,OUTPUT(CNT)=ONAME
"RTN","PXRMEXU1",160,0)
 Q
"RTN","PXRMEXU1",161,0)
 ;
"RTN","PXRMEXU5")
0^15^B39432783
"RTN","PXRMEXU5",1,0)
PXRMEXU5 ; SLC/PKR - Reminder exchange KIDS utilities, #5. ;03/07/2010
"RTN","PXRMEXU5",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,16**;Feb 04, 2005;Build 119
"RTN","PXRMEXU5",3,0)
 ;==================================================
"RTN","PXRMEXU5",4,0)
BMTABLE(MTABLE,IENROOT,DIQOUT,FDA) ;Build the table for merging
"RTN","PXRMEXU5",5,0)
 ;GETS^DIQOUT indexes into the FDA. The merge table has the form:
"RTN","PXRMEXU5",6,0)
 ;MTABLE(IENSD)=IENSF. IENSD is the DIQOUT iens and IENSF is the
"RTN","PXRMEXU5",7,0)
 ;FDA iens. MTABLE provides a direct replacement of IENSD to IENSF.
"RTN","PXRMEXU5",8,0)
 N FILENUM,IEN,IENS,IENSD,IENRF,IENSF,IND,LAST,LEN,NULLF,TOPFN
"RTN","PXRMEXU5",9,0)
 S FILENUM=$O(FDA(""),-1),IENS=$O(FDA(FILENUM,""),-1)
"RTN","PXRMEXU5",10,0)
 S LAST=+$P(IENS,",",1)
"RTN","PXRMEXU5",11,0)
 ;Initialize the merge table by looking for identical entries in
"RTN","PXRMEXU5",12,0)
 ;DIQOUT and FDA. First create the top level entry.
"RTN","PXRMEXU5",13,0)
 S NULLF=0
"RTN","PXRMEXU5",14,0)
 S FILENUM=$O(DIQOUT(""))
"RTN","PXRMEXU5",15,0)
 S IENSD=$O(DIQOUT(FILENUM,""))
"RTN","PXRMEXU5",16,0)
 S LEN=$L(IENSD,",")-1
"RTN","PXRMEXU5",17,0)
 S IENS=$P(IENSD,",",LEN)_","
"RTN","PXRMEXU5",18,0)
 ;DBIA #2631
"RTN","PXRMEXU5",19,0)
 F IND=1:1:LEN-1 S FILENUM=$G(^DD(FILENUM,0,"UP"))
"RTN","PXRMEXU5",20,0)
 S TOPFN=FILENUM
"RTN","PXRMEXU5",21,0)
 S IENSF=$O(FDA(TOPFN,""))
"RTN","PXRMEXU5",22,0)
 S MTABLE(TOPFN,IENS)=IENSF
"RTN","PXRMEXU5",23,0)
 ;Build all the entries below the top level.
"RTN","PXRMEXU5",24,0)
 S FILENUM=TOPFN
"RTN","PXRMEXU5",25,0)
 F  S FILENUM=$O(DIQOUT(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXU5",26,0)
 . S IENSD=""
"RTN","PXRMEXU5",27,0)
 . F  S IENSD=$O(DIQOUT(FILENUM,IENSD)) Q:IENSD=""  D
"RTN","PXRMEXU5",28,0)
 .. S MTABLE(FILENUM,IENSD)=""
"RTN","PXRMEXU5",29,0)
 .. I '$D(FDA(FILENUM)) S NULLF=1 Q
"RTN","PXRMEXU5",30,0)
 ..;Look for matches based on identical .01s
"RTN","PXRMEXU5",31,0)
 .. S IENSF=""
"RTN","PXRMEXU5",32,0)
 .. F  S IENSF=$O(FDA(FILENUM,IENSF)) Q:IENSF=""  D
"RTN","PXRMEXU5",33,0)
 ... I $G(DIQOUT(FILENUM,IENSD,.01))=$G(FDA(FILENUM,IENSF,.01)) S MTABLE(FILENUM,IENSD)=IENSF
"RTN","PXRMEXU5",34,0)
 ... E  S NULLF=1
"RTN","PXRMEXU5",35,0)
 ;Entries that are equal to null at this point don't have a
"RTN","PXRMEXU5",36,0)
 ;corresponding FDA entry.
"RTN","PXRMEXU5",37,0)
 I 'NULLF Q
"RTN","PXRMEXU5",38,0)
 S FILENUM=""
"RTN","PXRMEXU5",39,0)
 F  S FILENUM=$O(FDA(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXU5",40,0)
 . S IENSF=""
"RTN","PXRMEXU5",41,0)
 . F  S IENSF=$O(FDA(FILENUM,IENSF)) Q:IENSF=""  D
"RTN","PXRMEXU5",42,0)
 .. S IND=+IENSF
"RTN","PXRMEXU5",43,0)
 .. I IENROOT(IND)'="" S IENRF(FILENUM,IENROOT(IND))=IND
"RTN","PXRMEXU5",44,0)
 ;IENRF keeps track of the IENROOT entries by file number.
"RTN","PXRMEXU5",45,0)
 S FILENUM=""
"RTN","PXRMEXU5",46,0)
 F  S FILENUM=$O(MTABLE(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXU5",47,0)
 . S IENSD=""
"RTN","PXRMEXU5",48,0)
 . F  S IENSD=$O(MTABLE(FILENUM,IENSD)) Q:IENSD=""  D
"RTN","PXRMEXU5",49,0)
 .. I MTABLE(FILENUM,IENSD)'="" Q
"RTN","PXRMEXU5",50,0)
 .. D MMTAB(.MTABLE,.IENROOT,.LAST,FILENUM,IENSD,.IENRF)
"RTN","PXRMEXU5",51,0)
 Q
"RTN","PXRMEXU5",52,0)
 ;
"RTN","PXRMEXU5",53,0)
 ;==================================================
"RTN","PXRMEXU5",54,0)
LOIEN(FILENUM) ;Find the first open ien in a global.
"RTN","PXRMEXU5",55,0)
 N GBL,I1,I2,OIEN
"RTN","PXRMEXU5",56,0)
 S GBL=$$GET1^DID(FILENUM,"","","GLOBAL NAME")_"I1)"
"RTN","PXRMEXU5",57,0)
 S OIEN=-1
"RTN","PXRMEXU5",58,0)
 S (I1,I2)=0
"RTN","PXRMEXU5",59,0)
 F  S I1=+$O(@GBL) Q:(OIEN>0)!(I1=0)  D
"RTN","PXRMEXU5",60,0)
 . I ((I1-I2)>1)!(I1="") S OIEN=I2+1 Q
"RTN","PXRMEXU5",61,0)
 . S I2=I1
"RTN","PXRMEXU5",62,0)
 I OIEN=-1 S OIEN=I2+1
"RTN","PXRMEXU5",63,0)
 Q OIEN
"RTN","PXRMEXU5",64,0)
 ;
"RTN","PXRMEXU5",65,0)
 ;==================================================
"RTN","PXRMEXU5",66,0)
MERGE(FILENUM,IEN,FIELD,FDA,IENROOT) ;Merge existing site entries into
"RTN","PXRMEXU5",67,0)
 ;the FDA that is loaded from Exchange.
"RTN","PXRMEXU5",68,0)
 ;FILENUM - the file number
"RTN","PXRMEXU5",69,0)
 ;IEN - internal entry number
"RTN","PXRMEXU5",70,0)
 ;FIELD - semicolon separated list of fields.
"RTN","PXRMEXU5",71,0)
 ;These the are arguments for GETS^DIQ, see that documentation for 
"RTN","PXRMEXU5",72,0)
 ;more information.
"RTN","PXRMEXU5",73,0)
 ;FDA and IENROOT are the FDA and IENROOT for UPDATE^DIE. These
"RTN","PXRMEXU5",74,0)
 ;are already setup with the contents of the packed reminder before
"RTN","PXRMEXU5",75,0)
 ;this routine is called.
"RTN","PXRMEXU5",76,0)
 ;The default is to merge any nodes of the FDA with the nodes
"RTN","PXRMEXU5",77,0)
 ;already existing at the site. If MODE="R" then the existing nodes
"RTN","PXRMEXU5",78,0)
 ;will be replaced with the nodes already in the FDA.
"RTN","PXRMEXU5",79,0)
 N DIQOUT,IENSD,IENSF,IND,IND1,IND2,IND2S,IND3,LE,MSG,MTABLE
"RTN","PXRMEXU5",80,0)
 N SITE,TIENROOT
"RTN","PXRMEXU5",81,0)
 S IENS=IEN_","
"RTN","PXRMEXU5",82,0)
 D GETS^DIQ(FILENUM,IENS,FIELD,"N","DIQOUT","MSG")
"RTN","PXRMEXU5",83,0)
 I $D(MSG) D  Q
"RTN","PXRMEXU5",84,0)
 . N ETEXT,FILENAME
"RTN","PXRMEXU5",85,0)
 . S FILENAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMEXU5",86,0)
 . S ETEXT="GETS^DIQ failed for "_FILENAME_" entry "_IEN_", it returned the following error message:"
"RTN","PXRMEXU5",87,0)
 . W !,ETEXT
"RTN","PXRMEXU5",88,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMEXU5",89,0)
 . H 2
"RTN","PXRMEXU5",90,0)
 . K MSG
"RTN","PXRMEXU5",91,0)
 ;If there is nothing to merge quit.
"RTN","PXRMEXU5",92,0)
 I '$D(DIQOUT) Q
"RTN","PXRMEXU5",93,0)
 ;Clean up DIQOUT remove null entries and change pointers to the resolved
"RTN","PXRMEXU5",94,0)
 ;form.
"RTN","PXRMEXU5",95,0)
 D CLDIQOUT^PXRMEXPU(.DIQOUT)
"RTN","PXRMEXU5",96,0)
 ;If there is nothing left to merge quit.
"RTN","PXRMEXU5",97,0)
 I '$D(DIQOUT) Q
"RTN","PXRMEXU5",98,0)
 ;Build the merge table.
"RTN","PXRMEXU5",99,0)
 D BMTABLE(.MTABLE,.IENROOT,.DIQOUT,.FDA)
"RTN","PXRMEXU5",100,0)
 ;Do the merge
"RTN","PXRMEXU5",101,0)
 S FILENUM=""
"RTN","PXRMEXU5",102,0)
 F  S FILENUM=$O(DIQOUT(FILENUM)) Q:FILENUM=""  D
"RTN","PXRMEXU5",103,0)
 . S IENSD=""
"RTN","PXRMEXU5",104,0)
 . F  S IENSD=$O(DIQOUT(FILENUM,IENSD)) Q:IENSD=""  D
"RTN","PXRMEXU5",105,0)
 .. S IENSF=MTABLE(FILENUM,IENSD)
"RTN","PXRMEXU5",106,0)
 .. S FIELD=""
"RTN","PXRMEXU5",107,0)
 .. F  S FIELD=$O(DIQOUT(FILENUM,IENSD,FIELD)) Q:FIELD=""  D
"RTN","PXRMEXU5",108,0)
 ... S FDA(FILENUM,IENSF,FIELD)=DIQOUT(FILENUM,IENSD,FIELD)
"RTN","PXRMEXU5",109,0)
 Q
"RTN","PXRMEXU5",110,0)
 ;
"RTN","PXRMEXU5",111,0)
 ;==================================================
"RTN","PXRMEXU5",112,0)
MMTAB(MTABLE,IENROOT,LAST,FILENUM,IENS,IENRF) ;Generate a merge table entry.
"RTN","PXRMEXU5",113,0)
 N IENRL,FNUP,UP,UPIENS
"RTN","PXRMEXU5",114,0)
 S UP=$P(IENS,",",2,99)
"RTN","PXRMEXU5",115,0)
 ;DBIA #2631
"RTN","PXRMEXU5",116,0)
 S FNUP=$G(^DD(FILENUM,0,"UP"))
"RTN","PXRMEXU5",117,0)
 S UPIENS=MTABLE(FNUP,UP)
"RTN","PXRMEXU5",118,0)
 S LAST=LAST+1
"RTN","PXRMEXU5",119,0)
 S MTABLE(FILENUM,IENS)="+"_LAST_","_UPIENS
"RTN","PXRMEXU5",120,0)
 S IENRL=$O(IENRF(FILENUM,""),-1)+1
"RTN","PXRMEXU5",121,0)
 S IENROOT(LAST)=IENRL,IENRF(FILENUM,IENRL)=LAST
"RTN","PXRMEXU5",122,0)
 Q
"RTN","PXRMEXU5",123,0)
 ;
"RTN","PXRMEXU5",124,0)
 ;==================================================
"RTN","PXRMEXU5",125,0)
NONULL(PXRMRIEN) ;Set any lines with a length of 0 equal to a space
"RTN","PXRMEXU5",126,0)
 ;so KIDS will not delete them.
"RTN","PXRMEXU5",127,0)
 N IND
"RTN","PXRMEXU5",128,0)
 S IND=0
"RTN","PXRMEXU5",129,0)
 F  S IND=+$O(^PXD(811.8,PXRMRIEN,100,IND)) Q:IND=0  D
"RTN","PXRMEXU5",130,0)
 . I $L(^PXD(811.8,PXRMRIEN,100,IND,0))=0 S ^PXD(811.8,PXRMRIEN,100,IND,0)=" "
"RTN","PXRMEXU5",131,0)
 Q
"RTN","PXRMEXU5",132,0)
 ;
"RTN","PXRMEXU5",133,0)
 ;==================================================
"RTN","PXRMEXU5",134,0)
POSTKIDS(PXRMRIEN) ;Change all ACK characters in node 100 of Exchange
"RTN","PXRMEXU5",135,0)
 ;File entry PXRMRIEN back to "^".
"RTN","PXRMEXU5",136,0)
 N ACK,UPA
"RTN","PXRMEXU5",137,0)
 S ACK=$C(6)
"RTN","PXRMEXU5",138,0)
 S UPA="^"
"RTN","PXRMEXU5",139,0)
 D REPCHAR(PXRMRIEN,ACK,UPA)
"RTN","PXRMEXU5",140,0)
 Q
"RTN","PXRMEXU5",141,0)
 ;
"RTN","PXRMEXU5",142,0)
 ;==================================================
"RTN","PXRMEXU5",143,0)
PREKIDS(PXRMRIEN) ;Change all "^" characters in node 100 of Exchange
"RTN","PXRMEXU5",144,0)
 ;File entry PXRMRIEN so that KIDS does not truncate lines when it
"RTN","PXRMEXU5",145,0)
 ;installs the file.
"RTN","PXRMEXU5",146,0)
 N ACK,UPA
"RTN","PXRMEXU5",147,0)
 S ACK=$C(6)
"RTN","PXRMEXU5",148,0)
 S UPA="^"
"RTN","PXRMEXU5",149,0)
 D REPCHAR(PXRMRIEN,UPA,ACK)
"RTN","PXRMEXU5",150,0)
 D NONULL(PXRMRIEN)
"RTN","PXRMEXU5",151,0)
 Q
"RTN","PXRMEXU5",152,0)
 ;
"RTN","PXRMEXU5",153,0)
 ;==================================================
"RTN","PXRMEXU5",154,0)
REPCHAR(PXRMRIEN,CHAR1,CHAR2) ;Replace CHAR1 with CHAR2 for all lines in node
"RTN","PXRMEXU5",155,0)
 ;100 of entry PXRMRIEN of the Exchange File.
"RTN","PXRMEXU5",156,0)
 N IND,LINE
"RTN","PXRMEXU5",157,0)
 S IND=0
"RTN","PXRMEXU5",158,0)
 F  S IND=+$O(^PXD(811.8,PXRMRIEN,100,IND)) Q:IND=0  D
"RTN","PXRMEXU5",159,0)
 . S LINE=$TR(^PXD(811.8,PXRMRIEN,100,IND,0),CHAR1,CHAR2)
"RTN","PXRMEXU5",160,0)
 . S ^PXD(811.8,PXRMRIEN,100,IND,0)=LINE
"RTN","PXRMEXU5",161,0)
 Q
"RTN","PXRMEXU5",162,0)
 ;
"RTN","PXRMEXU5",163,0)
ROC(FDA) ;
"RTN","PXRMEXU5",164,0)
 N ACTION,IEN,IENS,OI,OOI,TEXT
"RTN","PXRMEXU5",165,0)
 S ACTION="",IENS=""
"RTN","PXRMEXU5",166,0)
 F  S IENS=$O(FDA(801.02,IENS)) Q:IENS=""  D  I ACTION="Q" K FDA S PXRMDONE=1
"RTN","PXRMEXU5",167,0)
 .S TEXT=""
"RTN","PXRMEXU5",168,0)
 .S (OI,OOI)=FDA(801.02,IENS,.01)
"RTN","PXRMEXU5",169,0)
 .S IEN=$$EXISTS^PXRMEXIU(101.43,OI)
"RTN","PXRMEXU5",170,0)
 .I IEN>0,$G(^ORD(101.43,IEN,.1))'="" D
"RTN","PXRMEXU5",171,0)
 ..S IEN=0
"RTN","PXRMEXU5",172,0)
 ..S TEXT="ORDERABLE ITEM  entry "_OI_" is inactive."
"RTN","PXRMEXU5",173,0)
 .I IEN=0 D
"RTN","PXRMEXU5",174,0)
 ..;Get replacement
"RTN","PXRMEXU5",175,0)
 ..I TEXT="" S TEXT="ORDERABLE ITEM  entry "_OI_" does not exist."
"RTN","PXRMEXU5",176,0)
 ..N DIC,DIR,DUOUT,MSG,X,Y
"RTN","PXRMEXU5",177,0)
 ..S MSG(1)=" "
"RTN","PXRMEXU5",178,0)
 ..S MSG(2)=TEXT
"RTN","PXRMEXU5",179,0)
 ..D MES^XPDUTL(.MSG)
"RTN","PXRMEXU5",180,0)
 ..S ACTION=$$GETACT^PXRMEXIU("DPQ",.DIR) I ACTION="S" S ACTION="Q"
"RTN","PXRMEXU5",181,0)
 ..I ACTION="Q" Q
"RTN","PXRMEXU5",182,0)
 ..I ACTION="D" K FDA(801.02,IENS,.01) Q
"RTN","PXRMEXU5",183,0)
 ..S DIC=101.43
"RTN","PXRMEXU5",184,0)
 ..S DIC(0)="AEMNQ"
"RTN","PXRMEXU5",185,0)
 ..;S DIC("S")="I $$FILESCR^PXRMDLG6(Y,FILENUM)=1"
"RTN","PXRMEXU5",186,0)
 ..S Y=-1
"RTN","PXRMEXU5",187,0)
 ..F  Q:+Y'=-1  D
"RTN","PXRMEXU5",188,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU5",189,0)
 ...I $D(XPDNM) X ^%ZOSF("EON")
"RTN","PXRMEXU5",190,0)
 ...D ^DIC
"RTN","PXRMEXU5",191,0)
 ...I $D(XPDNM) X ^%ZOSF("EOFF")
"RTN","PXRMEXU5",192,0)
 ...;If this is being called during a KIDS install we need echoing on.
"RTN","PXRMEXU5",193,0)
 ...I $D(DUOUT) S Y="" Q
"RTN","PXRMEXU5",194,0)
 ...I Y=-1 D BMES^XPDUTL("You must input a replacement!")
"RTN","PXRMEXU5",195,0)
 ..I Y="" S ACTION="Q" Q
"RTN","PXRMEXU5",196,0)
 ..S OI=$P(Y,U,2)
"RTN","PXRMEXU5",197,0)
 ..S FDA(801.02,IENS,.01)=OI
"RTN","PXRMEXU5",198,0)
 .;I OI'=OOI D
"RTN","PXRMEXU5",199,0)
 .;.S ^TMP("PXRMEXIA",$J,"DIAF",$P(IENS,",",1),ABBR_"."_OOI)=ABBR_"."_OI
"RTN","PXRMEXU5",200,0)
 Q
"RTN","PXRMEXU5",201,0)
 ;==================================================
"RTN","PXRMEXU5",202,0)
TIU(IEN,ARRAY,SUB) ;
"RTN","PXRMEXU5",203,0)
 I $D(^TMP($J,SUB,IEN))>0 Q
"RTN","PXRMEXU5",204,0)
 N CNT,ERROR,OUTPUT
"RTN","PXRMEXU5",205,0)
 S OUTPUT=$NA(^TMP($J,SUB,IEN))
"RTN","PXRMEXU5",206,0)
 I $G(ARRAY(IEN,9))="" Q
"RTN","PXRMEXU5",207,0)
 S CNT=1 S @OUTPUT@(CNT)="TIU Object: "_$G(ARRAY(IEN,.01))
"RTN","PXRMEXU5",208,0)
 S CNT=CNT+1,@OUTPUT@(CNT)="Object Method: "_$G(ARRAY(IEN,9))
"RTN","PXRMEXU5",209,0)
 S CNT=CNT+1,@OUTPUT@(CNT)=""
"RTN","PXRMEXU5",210,0)
 Q
"RTN","PXRMEXU5",211,0)
 ;
"RTN","PXRMFNFT")
0^24^B58241703
"RTN","PXRMFNFT",1,0)
PXRMFNFT ; SLC/PKR - Process found/not found text. ;05/21/2010
"RTN","PXRMFNFT",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,12,16**;Feb 04, 2005;Build 119
"RTN","PXRMFNFT",3,0)
 ;
"RTN","PXRMFNFT",4,0)
 ;===================================================
"RTN","PXRMFNFT",5,0)
AGE(DFN,DEFARR,FIEVAL,NTXT) ;Output the age match/no match
"RTN","PXRMFNFT",6,0)
 ;text.
"RTN","PXRMFNFT",7,0)
 N CTIUO,FI,IC,LC,NIN,NLINES,TEXT,TEXTIN
"RTN","PXRMFNFT",8,0)
 I '$D(FIEVAL("AGE")) Q
"RTN","PXRMFNFT",9,0)
 S NLINES=0
"RTN","PXRMFNFT",10,0)
 S IC=""
"RTN","PXRMFNFT",11,0)
 F  S IC=$O(FIEVAL("AGE",IC)) Q:IC=""  D
"RTN","PXRMFNFT",12,0)
 . S FI=$S(FIEVAL("AGE",IC):1,1:2)
"RTN","PXRMFNFT",13,0)
 . S NIN=$P(DEFARR(7,IC,3),U,FI)
"RTN","PXRMFNFT",14,0)
 . I +NIN=0 Q
"RTN","PXRMFNFT",15,0)
 . K TEXTIN
"RTN","PXRMFNFT",16,0)
 .;If CTIUO is true the text contains a TIU object.
"RTN","PXRMFNFT",17,0)
 . S CTIUO=$S(NIN["T":1,1:0)
"RTN","PXRMFNFT",18,0)
 . I CTIUO D
"RTN","PXRMFNFT",19,0)
 .. N VSTR S VSTR=""
"RTN","PXRMFNFT",20,0)
 ..;TIU expansion expects the trailing 0, i.e. TEXTIN(N,0).
"RTN","PXRMFNFT",21,0)
 .. F LC=1:1:+NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,7,IC,FI,LC,0)
"RTN","PXRMFNFT",22,0)
 .. S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",23,0)
 .. D FNFTXTO(1,NIN,.TEXTIN,DFN,VSTR,.NLINES,.TEXT)
"RTN","PXRMFNFT",24,0)
 . I 'CTIUO D
"RTN","PXRMFNFT",25,0)
 .. F LC=1:1:NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,7,IC,FI,LC,0)
"RTN","PXRMFNFT",26,0)
 .. S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",27,0)
 .. D FNFTXTR(1,NIN,.TEXTIN,.NLINES,.TEXT)
"RTN","PXRMFNFT",28,0)
 D COPYTXT^PXRMOUTU(.NTXT,NLINES,.TEXT)
"RTN","PXRMFNFT",29,0)
 Q
"RTN","PXRMFNFT",30,0)
 ;
"RTN","PXRMFNFT",31,0)
 ;===================================================
"RTN","PXRMFNFT",32,0)
FINDING(INDENT,DFN,FINDING,IFIEVAL,NLINES,TEXT) ;Output the finding found/not
"RTN","PXRMFNFT",33,0)
 ;found text.
"RTN","PXRMFNFT",34,0)
 N CTIUO,FI,LC,NIN,NODE,TEMP,TEXTIN
"RTN","PXRMFNFT",35,0)
 S FI=$S(IFIEVAL:1,1:2)
"RTN","PXRMFNFT",36,0)
 S NODE=$S(FINDING["FF":25,1:20)
"RTN","PXRMFNFT",37,0)
 S TEMP=$G(DEFARR(NODE,FINDING,6))
"RTN","PXRMFNFT",38,0)
 S NIN=$P(TEMP,U,FI)
"RTN","PXRMFNFT",39,0)
 I +NIN=0 Q
"RTN","PXRMFNFT",40,0)
 I FINDING["FF" S FINDING=$P(FINDING,"FF",2)
"RTN","PXRMFNFT",41,0)
 S CTIUO=$S(NIN["T":1,1:0)
"RTN","PXRMFNFT",42,0)
 I CTIUO D
"RTN","PXRMFNFT",43,0)
 . S NIN=+NIN
"RTN","PXRMFNFT",44,0)
 . N VSTR
"RTN","PXRMFNFT",45,0)
 . F LC=1:1:+NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,NODE,FINDING,FI,LC,0)
"RTN","PXRMFNFT",46,0)
 . I $D(IFIEVAL("VISIT")) D
"RTN","PXRMFNFT",47,0)
 .. N TEMP,VDATE,VLOC,VSC
"RTN","PXRMFNFT",48,0)
 .. S TEMP=^AUPNVSIT(IFIEVAL("VISIT"),0)
"RTN","PXRMFNFT",49,0)
 .. S VDATE=$P(TEMP,U,1)
"RTN","PXRMFNFT",50,0)
 .. S VLOC=$P(TEMP,U,22)
"RTN","PXRMFNFT",51,0)
 .. S VSC=$P(TEMP,U,7)
"RTN","PXRMFNFT",52,0)
 .. S VSTR=VLOC_";"_VDATE_";"_VSC
"RTN","PXRMFNFT",53,0)
 . E  S VSTR=""
"RTN","PXRMFNFT",54,0)
 . S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",55,0)
 . D FNFTXTO(INDENT,NIN,.TEXTIN,DFN,VSTR,.NLINES,.TEXT)
"RTN","PXRMFNFT",56,0)
 I 'CTIUO D
"RTN","PXRMFNFT",57,0)
 . F LC=1:1:NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,NODE,FINDING,FI,LC,0)
"RTN","PXRMFNFT",58,0)
 . S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",59,0)
 . D FNFTXTR(INDENT,NIN,.TEXTIN,.NLINES,.TEXT)
"RTN","PXRMFNFT",60,0)
 Q
"RTN","PXRMFNFT",61,0)
 ;
"RTN","PXRMFNFT",62,0)
 ;===================================================
"RTN","PXRMFNFT",63,0)
FNFTXTO(INDENT,NIN,TEXTIN,DFN,VSTR,NLINES,TEXT) ;Load found/not found text
"RTN","PXRMFNFT",64,0)
 ;that contains TIU objects.
"RTN","PXRMFNFT",65,0)
 N IND,INOBJECT,JND,OLINE,NEWLINE,NOL,NOUT,NUML,TA,TEXTOUT,TIN
"RTN","PXRMFNFT",66,0)
 ;Make sure this works if it is being called a part of an object.
"RTN","PXRMFNFT",67,0)
 I $D(^TMP("TIUBOIL",$J)) D
"RTN","PXRMFNFT",68,0)
 . K ^TMP("PXRMTIUBOIL",$J)
"RTN","PXRMFNFT",69,0)
 . M ^TMP("PXRMTIUBOIL",$J)=^TMP("TIUBOIL",$J)
"RTN","PXRMFNFT",70,0)
 . S INOBJECT=1
"RTN","PXRMFNFT",71,0)
 E  S INOBJECT=0
"RTN","PXRMFNFT",72,0)
 S NUML=0
"RTN","PXRMFNFT",73,0)
 F IND=1:1:NIN D
"RTN","PXRMFNFT",74,0)
 . I TEXTIN(IND)'["|" S NUML=NUML+1,TIN(NUML)=TEXTIN(IND) Q
"RTN","PXRMFNFT",75,0)
 . S NEWLINE=$S(TEXTIN(IND)["|_\\":"\\",1:"")
"RTN","PXRMFNFT",76,0)
 . S OLINE(1,0)=$S(NEWLINE'="":$$STRREP^PXRMUTIL(TEXTIN(IND),"_\\",""),1:TEXTIN(IND))
"RTN","PXRMFNFT",77,0)
 . K ^TMP("TIUBOIL",$J)
"RTN","PXRMFNFT",78,0)
 . D BLRPLT^TIUSRVD(.TA,"",DFN,VSTR,"OLINE")
"RTN","PXRMFNFT",79,0)
 . S NOL=$P(^TMP("TIUBOIL",$J,0),U,3)
"RTN","PXRMFNFT",80,0)
 . F JND=1:1:NOL S NUML=NUML+1,TIN(NUML)=^TMP("TIUBOIL",$J,JND,0)_NEWLINE
"RTN","PXRMFNFT",81,0)
 D FORMAT^PXRMTEXT(INDENT,PXRMRM,NUML,.TIN,.NOUT,.TEXTOUT)
"RTN","PXRMFNFT",82,0)
 F LC=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(LC)
"RTN","PXRMFNFT",83,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMFNFT",84,0)
 I INOBJECT M ^TMP("TIUBOIL",$J)=^TMP("PXRMTIUBOIL",$J) K ^TMP("PXRMTIUBOIL",$J)
"RTN","PXRMFNFT",85,0)
 Q
"RTN","PXRMFNFT",86,0)
 ;
"RTN","PXRMFNFT",87,0)
 ;===================================================
"RTN","PXRMFNFT",88,0)
FNFTXTR(INDENT,NIN,TEXTIN,NLINES,TEXT) ;Load regular found/not found text
"RTN","PXRMFNFT",89,0)
 ;that does not contain TIU objects.
"RTN","PXRMFNFT",90,0)
 N JND,NOUT,TEXTOUT
"RTN","PXRMFNFT",91,0)
 D FORMAT^PXRMTEXT(INDENT,PXRMRM,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMFNFT",92,0)
 F JND=1:1:NOUT S NLINES=NLINES+1,TEXT(NLINES)=TEXTOUT(JND)
"RTN","PXRMFNFT",93,0)
 Q
"RTN","PXRMFNFT",94,0)
 ;
"RTN","PXRMFNFT",95,0)
 ;===================================================
"RTN","PXRMFNFT",96,0)
LOGIC(DFN,LOGSTR,LOGTYPE,TTYPE,DEFARR,NTXT) ;Output the detailed
"RTN","PXRMFNFT",97,0)
 ;logic found/not found text.
"RTN","PXRMFNFT",98,0)
 I LOGSTR="" Q
"RTN","PXRMFNFT",99,0)
 N CTIUO,FI,LC,NIN,NLINES,SUB,TEXT,TEXTIN
"RTN","PXRMFNFT",100,0)
 I TTYPE="S" S NIN=$S(LOGTYPE="PCL":DEFARR(72),LOGTYPE="RES":DEFARR(77),1:0)
"RTN","PXRMFNFT",101,0)
 E  S NIN=$S(LOGTYPE="PCL":DEFARR(62),LOGTYPE="RES":DEFARR(67),1:0)
"RTN","PXRMFNFT",102,0)
 I NIN="" Q
"RTN","PXRMFNFT",103,0)
 S FI=$P(LOGSTR,U,1)
"RTN","PXRMFNFT",104,0)
 S NIN=$S(FI=1:$P(NIN,U,1),FI=0:$P(NIN,U,2),1:0)
"RTN","PXRMFNFT",105,0)
 I +NIN=0 Q
"RTN","PXRMFNFT",106,0)
 I TTYPE="S" D
"RTN","PXRMFNFT",107,0)
 . I LOGTYPE="PCL",FI=1 S SUB=70
"RTN","PXRMFNFT",108,0)
 . I LOGTYPE="PCL",FI=0 S SUB=71
"RTN","PXRMFNFT",109,0)
 . I LOGTYPE="RES",FI=1 S SUB=75
"RTN","PXRMFNFT",110,0)
 . I LOGTYPE="RES",FI=0 S SUB=76
"RTN","PXRMFNFT",111,0)
 E  D
"RTN","PXRMFNFT",112,0)
 . I LOGTYPE="PCL",FI=1 S SUB=60
"RTN","PXRMFNFT",113,0)
 . I LOGTYPE="PCL",FI=0 S SUB=61
"RTN","PXRMFNFT",114,0)
 . I LOGTYPE="RES",FI=1 S SUB=65
"RTN","PXRMFNFT",115,0)
 . I LOGTYPE="RES",FI=0 S SUB=66
"RTN","PXRMFNFT",116,0)
 S NLINES=0
"RTN","PXRMFNFT",117,0)
 S CTIUO=$S(NIN["T":1,1:0)
"RTN","PXRMFNFT",118,0)
 I CTIUO D
"RTN","PXRMFNFT",119,0)
 . N VSTR S VSTR=""
"RTN","PXRMFNFT",120,0)
 . F LC=1:1:+NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,SUB,LC,0)
"RTN","PXRMFNFT",121,0)
 . S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",122,0)
 . D FNFTXTO(1,NIN,.TEXTIN,DFN,VSTR,.NLINES,.TEXT)
"RTN","PXRMFNFT",123,0)
 I 'CTIUO D
"RTN","PXRMFNFT",124,0)
 . F LC=1:1:NIN S TEXTIN(LC)=^PXD(811.9,PXRMITEM,SUB,LC,0)
"RTN","PXRMFNFT",125,0)
 . S NIN=NIN+1,TEXTIN(NIN)="\\"
"RTN","PXRMFNFT",126,0)
 . D FNFTXTR(1,NIN,.TEXTIN,.NLINES,.TEXT)
"RTN","PXRMFNFT",127,0)
 D COPYTXT^PXRMOUTU(.NTXT,NLINES,.TEXT)
"RTN","PXRMFNFT",128,0)
 Q
"RTN","PXRMFNFT",129,0)
 ;
"RTN","PXRMFNFT",130,0)
 ;===================================================
"RTN","PXRMFNFT",131,0)
SNMLA(RIEN) ;Set the number of match lines for the age match text.
"RTN","PXRMFNFT",132,0)
 N IND,JND,LC,MATCHLC,NPIPE,RES,WMSG
"RTN","PXRMFNFT",133,0)
 S IND=0
"RTN","PXRMFNFT",134,0)
 F  S IND=+$O(^PXD(811.9,RIEN,7,IND)) Q:IND=0  D
"RTN","PXRMFNFT",135,0)
 .;Age match text
"RTN","PXRMFNFT",136,0)
 . S (JND,LC,NPIPE)=0
"RTN","PXRMFNFT",137,0)
 . F  S JND=$O(^PXD(811.9,RIEN,7,IND,1,JND)) Q:JND=""  D
"RTN","PXRMFNFT",138,0)
 .. S NPIPE=NPIPE+$L(^PXD(811.9,RIEN,7,IND,1,JND,0),"|")-1
"RTN","PXRMFNFT",139,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",140,0)
 . S MATCHLC=LC
"RTN","PXRMFNFT",141,0)
 . I (NPIPE#2)=1 D
"RTN","PXRMFNFT",142,0)
 .. S WMSG="match text for age range "_IND
"RTN","PXRMFNFT",143,0)
 .. D TIUOBJW(WMSG,NPIPE)
"RTN","PXRMFNFT",144,0)
 . I NPIPE>1 S MATCHLC=MATCHLC_"T"
"RTN","PXRMFNFT",145,0)
 .;Age no match text
"RTN","PXRMFNFT",146,0)
 . S (JND,LC,NPIPE)=0
"RTN","PXRMFNFT",147,0)
 . F  S JND=$O(^PXD(811.9,RIEN,7,IND,2,JND)) Q:JND=""  D
"RTN","PXRMFNFT",148,0)
 .. S NPIPE=NPIPE+$L(^PXD(811.9,RIEN,7,IND,2,JND,0),"|")-1
"RTN","PXRMFNFT",149,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",150,0)
 . I (NPIPE#2)=1 D
"RTN","PXRMFNFT",151,0)
 .. S WMSG="no match text for age range "_IND
"RTN","PXRMFNFT",152,0)
 .. D TIUOBJW(WMSG,NPIPE)
"RTN","PXRMFNFT",153,0)
 . I NPIPE>1 S LC=LC_"T"
"RTN","PXRMFNFT",154,0)
 . S ^PXD(811.9,RIEN,7,IND,3)=MATCHLC_U_LC
"RTN","PXRMFNFT",155,0)
 Q
"RTN","PXRMFNFT",156,0)
 ;
"RTN","PXRMFNFT",157,0)
 ;===================================================
"RTN","PXRMFNFT",158,0)
SNMLF(RIEN,NODE) ;Set the number of found lines for the found text.
"RTN","PXRMFNFT",159,0)
 ;For regular and functional findings.
"RTN","PXRMFNFT",160,0)
 N IND,JND,LC,NNAME,NFL,NPIPE,RES,WMSG
"RTN","PXRMFNFT",161,0)
 S NNAME=$S(NODE=20:"finding",NODE=25:"function finding",1:"?")
"RTN","PXRMFNFT",162,0)
 S IND=0
"RTN","PXRMFNFT",163,0)
 F  S IND=+$O(^PXD(811.9,RIEN,NODE,IND)) Q:IND=0  D
"RTN","PXRMFNFT",164,0)
 .;Found text
"RTN","PXRMFNFT",165,0)
 . S (JND,LC,NPIPE)=0
"RTN","PXRMFNFT",166,0)
 . F  S JND=$O(^PXD(811.9,RIEN,NODE,IND,1,JND)) Q:JND=""  D
"RTN","PXRMFNFT",167,0)
 .. S NPIPE=NPIPE+$L(^PXD(811.9,RIEN,NODE,IND,1,JND,0),"|")-1
"RTN","PXRMFNFT",168,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",169,0)
 . S NFL=LC
"RTN","PXRMFNFT",170,0)
 . I (NPIPE#2)=1 D
"RTN","PXRMFNFT",171,0)
 .. S WMSG="found text for "_NNAME_" "_IND
"RTN","PXRMFNFT",172,0)
 .. D TIUOBJW(WMSG,NPIPE)
"RTN","PXRMFNFT",173,0)
 . I NPIPE>1 S NFL=NFL_"T"
"RTN","PXRMFNFT",174,0)
 .;Not found text
"RTN","PXRMFNFT",175,0)
 . S (JND,LC,NPIPE)=0
"RTN","PXRMFNFT",176,0)
 . F  S JND=$O(^PXD(811.9,RIEN,NODE,IND,2,JND)) Q:JND=""  D
"RTN","PXRMFNFT",177,0)
 .. S NPIPE=NPIPE+$L(^PXD(811.9,RIEN,NODE,IND,2,JND,0),"|")-1
"RTN","PXRMFNFT",178,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",179,0)
 . I (NPIPE#2)=1 D
"RTN","PXRMFNFT",180,0)
 .. S WMSG="not found text for "_NNAME_" "_IND
"RTN","PXRMFNFT",181,0)
 .. D TIUOBJW(WMSG,NPIPE)
"RTN","PXRMFNFT",182,0)
 . I NPIPE>1 S LC=LC_"T"
"RTN","PXRMFNFT",183,0)
 . S ^PXD(811.9,RIEN,NODE,IND,6)=NFL_U_LC
"RTN","PXRMFNFT",184,0)
 Q
"RTN","PXRMFNFT",185,0)
 ;
"RTN","PXRMFNFT",186,0)
 ;===================================================
"RTN","PXRMFNFT",187,0)
SNMLL(RIEN) ;Set the number of lines for the logic found/not found
"RTN","PXRMFNFT",188,0)
 ;text. Append a "T" to the number of lines if the text contains
"RTN","PXRMFNFT",189,0)
 ;a TIU object.
"RTN","PXRMFNFT",190,0)
 N CSTR,IND,LC,NPIPE,RES,SUB,TTYPE
"RTN","PXRMFNFT",191,0)
 ;SUB=60 General cohort found text
"RTN","PXRMFNFT",192,0)
 ;SUB=61 General cohort not found text
"RTN","PXRMFNFT",193,0)
 ;SUB=65 General resolution found text
"RTN","PXRMFNFT",194,0)
 ;SUB=66 General resolution not found text
"RTN","PXRMFNFT",195,0)
 ;SUB=70 Summary cohort found text
"RTN","PXRMFNFT",196,0)
 ;SUB=71 Summary cohort not found text
"RTN","PXRMFNFT",197,0)
 ;SUB=75 Summary resolution found text
"RTN","PXRMFNFT",198,0)
 ;SUB=76 Summary resolution not found text
"RTN","PXRMFNFT",199,0)
 F SUB=60,61,65,66,70,71,75,76 D
"RTN","PXRMFNFT",200,0)
 . S (IND,LC,NPIPE)=0
"RTN","PXRMFNFT",201,0)
 . F  S IND=$O(^PXD(811.9,RIEN,SUB,IND)) Q:IND=""  D
"RTN","PXRMFNFT",202,0)
 .. S NPIPE=NPIPE+$L(^PXD(811.9,RIEN,SUB,IND,0),"|")-1
"RTN","PXRMFNFT",203,0)
 .. S LC=LC+1
"RTN","PXRMFNFT",204,0)
 . I (NPIPE#2)=1 D
"RTN","PXRMFNFT",205,0)
 .. I SUB=60 S TTYPE="general cohort found text"
"RTN","PXRMFNFT",206,0)
 .. I SUB=61 S TTYPE="general cohort not found text"
"RTN","PXRMFNFT",207,0)
 .. I SUB=65 S TTYPE="general resolution found text"
"RTN","PXRMFNFT",208,0)
 .. I SUB=66 S TTYPE="general resolution not found text"
"RTN","PXRMFNFT",209,0)
 .. I SUB=70 S TTYPE="summary cohort found text"
"RTN","PXRMFNFT",210,0)
 .. I SUB=71 S TTYPE="summary cohort not found text"
"RTN","PXRMFNFT",211,0)
 .. I SUB=75 S TTYPE="summary resolution found text"
"RTN","PXRMFNFT",212,0)
 .. I SUB=76 S TTYPE="summary resolution not found text"
"RTN","PXRMFNFT",213,0)
 .. D TIUOBJW(TTYPE,NPIPE)
"RTN","PXRMFNFT",214,0)
 . I NPIPE>1 S LC=LC_"T"
"RTN","PXRMFNFT",215,0)
 . I SUB=60 S CSTR=LC
"RTN","PXRMFNFT",216,0)
 . I SUB=61 S ^PXD(811.9,RIEN,62)=CSTR_U_LC
"RTN","PXRMFNFT",217,0)
 . I SUB=65 S CSTR=LC
"RTN","PXRMFNFT",218,0)
 . I SUB=66 S ^PXD(811.9,RIEN,67)=CSTR_U_LC
"RTN","PXRMFNFT",219,0)
 . I SUB=70 S CSTR=LC
"RTN","PXRMFNFT",220,0)
 . I SUB=71 S ^PXD(811.9,RIEN,72)=CSTR_U_LC
"RTN","PXRMFNFT",221,0)
 . I SUB=75 S CSTR=LC
"RTN","PXRMFNFT",222,0)
 . I SUB=76 S ^PXD(811.9,RIEN,77)=CSTR_U_LC
"RTN","PXRMFNFT",223,0)
 Q
"RTN","PXRMFNFT",224,0)
 ;
"RTN","PXRMFNFT",225,0)
 ;===================================================
"RTN","PXRMFNFT",226,0)
TIUOBJW(WMSG,NPIPE) ;Odd number of "|" characters in text, issue
"RTN","PXRMFNFT",227,0)
 ;a warning that TIU OBJ expansion will not work.
"RTN","PXRMFNFT",228,0)
 N TEXT
"RTN","PXRMFNFT",229,0)
 S TEXT(1)=""
"RTN","PXRMFNFT",230,0)
 S TEXT(2)="Warning, "_WMSG_" has "_NPIPE_" ""|"" characters."
"RTN","PXRMFNFT",231,0)
 S TEXT(3)="Because this is an odd number, TIU Object expansion will not work."
"RTN","PXRMFNFT",232,0)
 D MES^XPDUTL(.TEXT)
"RTN","PXRMFNFT",233,0)
 Q
"RTN","PXRMFNFT",234,0)
 ;
"RTN","PXRMFRPT")
0^21^B103832616
"RTN","PXRMFRPT",1,0)
PXRMFRPT ; SLC/PKR - Finding usage report. ;11/02/2009
"RTN","PXRMFRPT",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,17,16**;Feb 04, 2005;Build 119
"RTN","PXRMFRPT",3,0)
 ;==============================
"RTN","PXRMFRPT",4,0)
BLDLIST(FILENUM,GBL,FIEN,SUB) ;
"RTN","PXRMFRPT",5,0)
 D DEFLIST(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",6,0)
 D TERMLIST(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",7,0)
 D DIALOG(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",8,0)
 D BROC(FILENUM,GBL,FIEN,SUB)
"RTN","PXRMFRPT",9,0)
 Q
"RTN","PXRMFRPT",10,0)
 ;
"RTN","PXRMFRPT",11,0)
BROC(FNUM,GBL,FIEN,SUB) ;
"RTN","PXRMFRPT",12,0)
 N IEN,NODE,RIEN,RNAME
"RTN","PXRMFRPT",13,0)
 S NODE=$S(FNUM=811.9:"R",FNUM=811.5:"T",FNUM=101.43:"O",FNUM=50.605:"D",1:"")
"RTN","PXRMFRPT",14,0)
 I NODE="" Q
"RTN","PXRMFRPT",15,0)
 I +FIEN>0 D  Q
"RTN","PXRMFRPT",16,0)
 .I '$D(^PXD(801,NODE,FIEN)) Q
"RTN","PXRMFRPT",17,0)
 .S IEN=0 F  S IEN=$O(^PXD(801,NODE,FIEN,IEN)) Q:IEN'>0  D
"RTN","PXRMFRPT",18,0)
 ..I NODE="O"!(NODE="D") S ^TMP($J,SUB,FNUM,FIEN,"ROC",IEN,NODE)="" Q
"RTN","PXRMFRPT",19,0)
 ..S RIEN="" F  S RIEN=$O(^PXD(801,NODE,FIEN,IEN,RIEN)) Q:RIEN=""  D
"RTN","PXRMFRPT",20,0)
 ...S RNAME=$P($G(^PXD(801,IEN,3,RIEN,0)),U)
"RTN","PXRMFRPT",21,0)
 ...S ^TMP($J,SUB,FNUM,FIEN,"ROC",IEN,RNAME)="" Q
"RTN","PXRMFRPT",22,0)
 Q
"RTN","PXRMFRPT",23,0)
 ;
"RTN","PXRMFRPT",24,0)
 ;==============================
"RTN","PXRMFRPT",25,0)
DEFLIST(FILENUM,GBL,FIEN,SUB) ;Search reminder definitions for any that are
"RTN","PXRMFRPT",26,0)
 ;using GBL as a finding. If FIEN is not null then search for only
"RTN","PXRMFRPT",27,0)
 ;those findings.
"RTN","PXRMFRPT",28,0)
 N FI,FNDIEN,IEN
"RTN","PXRMFRPT",29,0)
 S IEN=0
"RTN","PXRMFRPT",30,0)
 F  S IEN=+$O(^PXD(811.9,IEN)) Q:IEN=0  D
"RTN","PXRMFRPT",31,0)
 . I '$D(^PXD(811.9,IEN,20,"E",GBL)) Q
"RTN","PXRMFRPT",32,0)
 . I +FIEN>0 D
"RTN","PXRMFRPT",33,0)
 .. S FI=""
"RTN","PXRMFRPT",34,0)
 .. F  S FI=$O(^PXD(811.9,IEN,20,"E",GBL,FIEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",35,0)
 ... S ^TMP($J,SUB,FILENUM,FIEN,"DEF",IEN,FI)=""
"RTN","PXRMFRPT",36,0)
 . I +FIEN=0 D
"RTN","PXRMFRPT",37,0)
 ..;No finding specified, find all of them.
"RTN","PXRMFRPT",38,0)
 .. S FNDIEN=""
"RTN","PXRMFRPT",39,0)
 .. F  S FNDIEN=$O(^PXD(811.9,IEN,20,"E",GBL,FNDIEN)) Q:FNDIEN=""  D
"RTN","PXRMFRPT",40,0)
 ... S FI=""
"RTN","PXRMFRPT",41,0)
 ... F  S FI=$O(^PXD(811.9,IEN,20,"E",GBL,FNDIEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",42,0)
 .... S ^TMP($J,SUB,FILENUM,FNDIEN,"DEF",IEN,FI)=""
"RTN","PXRMFRPT",43,0)
 Q
"RTN","PXRMFRPT",44,0)
 ;
"RTN","PXRMFRPT",45,0)
 ;==============================
"RTN","PXRMFRPT",46,0)
DIALDSAR(OUTPUT) ;
"RTN","PXRMFRPT",47,0)
 ;This is used for individual dialog element checks, may be better in a
"RTN","PXRMFRPT",48,0)
 ;different routine
"RTN","PXRMFRPT",49,0)
 N FILENUM,IND,STATUS,TEMP
"RTN","PXRMFRPT",50,0)
 S IND=0 F  S IND=+$O(^DD(801.41,15,"V",IND)) Q:IND=0  D
"RTN","PXRMFRPT",51,0)
 . S TEMP=^DD(801.41,15,"V",IND,0)
"RTN","PXRMFRPT",52,0)
 . S FILENUM=$P(TEMP,U)
"RTN","PXRMFRPT",53,0)
 .;DBIA #4640
"RTN","PXRMFRPT",54,0)
 . S STATUS=+$$GETSTAT^HDISVF01(FILENUM)
"RTN","PXRMFRPT",55,0)
 . I STATUS'=6,STATUS'=7 Q
"RTN","PXRMFRPT",56,0)
 . S OUTPUT($$ROOT^DILFD(FILENUM))=FILENUM_U_STATUS
"RTN","PXRMFRPT",57,0)
 ;DBIA #4640
"RTN","PXRMFRPT",58,0)
 S STATUS=+$$GETSTAT^HDISVF01(101.43) I STATUS'=6,STATUS'=7 Q
"RTN","PXRMFRPT",59,0)
 S OUTPUT($$ROOT^DILFD("^101.43,"))=101.43_U_STATUS
"RTN","PXRMFRPT",60,0)
 Q
"RTN","PXRMFRPT",61,0)
 ;
"RTN","PXRMFRPT",62,0)
 ;==============================
"RTN","PXRMFRPT",63,0)
DIALOG(FILENUM,GBL,FIEN,SUB) ;
"RTN","PXRMFRPT",64,0)
 ;HANDLE NONE
"RTN","PXRMFRPT",65,0)
 N DIEN,FIELD,FIND
"RTN","PXRMFRPT",66,0)
 I +FIEN>0 D  Q
"RTN","PXRMFRPT",67,0)
 .I '$D(^TMP($J,"DLG FIND",GBL,FIEN)) Q
"RTN","PXRMFRPT",68,0)
 .S DIEN=0
"RTN","PXRMFRPT",69,0)
 .F  S DIEN=$O(^TMP($J,"DLG FIND",GBL,FIEN,DIEN)) Q:DIEN'>0  D
"RTN","PXRMFRPT",70,0)
 ..S FIELD=""
"RTN","PXRMFRPT",71,0)
 ..F  S FIELD=$O(^TMP($J,"DLG FIND",GBL,FIEN,DIEN,FIELD)) Q:FIELD=""  D
"RTN","PXRMFRPT",72,0)
 ...S ^TMP($J,SUB,FILENUM,FIEN,"DIALOG",DIEN,FIELD)=""
"RTN","PXRMFRPT",73,0)
 ;
"RTN","PXRMFRPT",74,0)
 S FIND="" F  S FIND=$O(^TMP($J,"DLG FIND",GBL,FIND)) Q:FIND=""  D
"RTN","PXRMFRPT",75,0)
 .S DIEN=0
"RTN","PXRMFRPT",76,0)
 .F  S DIEN=$O(^TMP($J,"DLG FIND",GBL,FIND,DIEN)) Q:DIEN'>0  D
"RTN","PXRMFRPT",77,0)
 ..S FIELD=""
"RTN","PXRMFRPT",78,0)
 ..F  S FIELD=$O(^TMP($J,"DLG FIND",GBL,FIND,DIEN,FIELD)) Q:FIELD=""  D
"RTN","PXRMFRPT",79,0)
 ...S ^TMP($J,SUB,FILENUM,FIND,"DIALOG",DIEN,FIELD)=""
"RTN","PXRMFRPT",80,0)
 Q
"RTN","PXRMFRPT",81,0)
 ;
"RTN","PXRMFRPT",82,0)
 ;==============================
"RTN","PXRMFRPT",83,0)
FSEL(FNUM,GBL,GNAME,LIST) ;Build a list of reminder findings and let the user
"RTN","PXRMFRPT",84,0)
 ;select from the list.
"RTN","PXRMFRPT",85,0)
 N ALIST,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FILENUM,FLIST,IND,INUM
"RTN","PXRMFRPT",86,0)
 N STAR,TEMP,TLIST,X,Y
"RTN","PXRMFRPT",87,0)
 S (IND,INUM)=0
"RTN","PXRMFRPT",88,0)
 ;DBIA #2991, #5149 for access to ^DD.
"RTN","PXRMFRPT",89,0)
 F  S IND=+$O(^DD(811.902,.01,"V",IND)) Q:IND=0  D
"RTN","PXRMFRPT",90,0)
 . S TEMP=^DD(811.902,.01,"V",IND,0)
"RTN","PXRMFRPT",91,0)
 .;Create a temporary list ordered by file name.
"RTN","PXRMFRPT",92,0)
 . S TLIST($P(TEMP,U,2))=$P(TEMP,U,1)
"RTN","PXRMFRPT",93,0)
 ;Scan dialogs for additional findings.
"RTN","PXRMFRPT",94,0)
 S IND=0
"RTN","PXRMFRPT",95,0)
 F  S IND=+$O(^DD(801.41,15,"V",IND)) Q:IND=0  D
"RTN","PXRMFRPT",96,0)
 . S TEMP=^DD(801.41,15,"V",IND,0)
"RTN","PXRMFRPT",97,0)
 . S TLIST($P(TEMP,U,2))=$P(TEMP,U,1)
"RTN","PXRMFRPT",98,0)
 S IND="",INUM=0
"RTN","PXRMFRPT",99,0)
 F  S IND=$O(TLIST(IND)) Q:IND=""  D
"RTN","PXRMFRPT",100,0)
 . S INUM=INUM+1
"RTN","PXRMFRPT",101,0)
 . S FILENUM=TLIST(IND)
"RTN","PXRMFRPT",102,0)
 .;DBIA #4640
"RTN","PXRMFRPT",103,0)
 . S STAR=$S($$SCREEN^HDISVF01(FILENUM):" *",1:"")
"RTN","PXRMFRPT",104,0)
 . S FLIST(FILENUM)=INUM
"RTN","PXRMFRPT",105,0)
 . S GNAME(INUM)=IND
"RTN","PXRMFRPT",106,0)
 . S ALIST(INUM)=" "_$J(INUM,4)_" - "_GNAME(INUM)_STAR
"RTN","PXRMFRPT",107,0)
 . S FNUM(INUM)=FILENUM
"RTN","PXRMFRPT",108,0)
 . S GBL(INUM)=$P($$GET1^DID(FILENUM,"","","GLOBAL NAME"),"^",2)
"RTN","PXRMFRPT",109,0)
 M DIR("A")=ALIST
"RTN","PXRMFRPT",110,0)
 S DIR("A")="Enter your list for the report"
"RTN","PXRMFRPT",111,0)
 S DIR(0)="LO^1:"_INUM
"RTN","PXRMFRPT",112,0)
 W !!,"Select from the following reminder findings (* signifies standardized):"
"RTN","PXRMFRPT",113,0)
 D ^DIR
"RTN","PXRMFRPT",114,0)
 I $D(DIROUT)!$D(DIRUT) S LIST="" Q
"RTN","PXRMFRPT",115,0)
 I $D(DUOUT)!$D(DTOUT) S LIST="" Q
"RTN","PXRMFRPT",116,0)
 S LIST=Y
"RTN","PXRMFRPT",117,0)
 Q
"RTN","PXRMFRPT",118,0)
 ;
"RTN","PXRMFRPT",119,0)
 ;==============================
"RTN","PXRMFRPT",120,0)
ISEL(FNUM,GBL,GNAME,LIST,ITEMLIST) ;See if the user wants selected items or
"RTN","PXRMFRPT",121,0)
 ;all from the selected finding types.
"RTN","PXRMFRPT",122,0)
 N DA,DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,IND,LI,NUM,SEL,TEXT,Y
"RTN","PXRMFRPT",123,0)
 S DIC(0)="AEMQ"
"RTN","PXRMFRPT",124,0)
 S DIR(0)="S^1:ALL;2:SELECTED"
"RTN","PXRMFRPT",125,0)
 S DIR("B")="SELECTED"
"RTN","PXRMFRPT",126,0)
 S NUM=$L(LIST,",")-1
"RTN","PXRMFRPT",127,0)
 F IND=1:1:NUM D
"RTN","PXRMFRPT",128,0)
 . S LI=$P(LIST,",",IND)
"RTN","PXRMFRPT",129,0)
 . S TEXT="Search for all or selected "_GNAME(LI)
"RTN","PXRMFRPT",130,0)
 . S TEXT=TEXT_$S($E(TEXT,$L(TEXT))="S":"?",1:"S?")
"RTN","PXRMFRPT",131,0)
 . W !,TEXT
"RTN","PXRMFRPT",132,0)
 . D ^DIR
"RTN","PXRMFRPT",133,0)
 . I $D(DIROUT)!$D(DIRUT) Q
"RTN","PXRMFRPT",134,0)
 . I $D(DUOUT)!$D(DTOUT) Q
"RTN","PXRMFRPT",135,0)
 . I Y=1 S ITEMLIST="ALL" Q
"RTN","PXRMFRPT",136,0)
 . S DIC=FNUM(LI)
"RTN","PXRMFRPT",137,0)
 . S DIC("A")="Select "_GNAME(LI)_": "
"RTN","PXRMFRPT",138,0)
 . S SEL=1
"RTN","PXRMFRPT",139,0)
 . F  Q:'SEL  D
"RTN","PXRMFRPT",140,0)
 .. D ^DIC
"RTN","PXRMFRPT",141,0)
 .. I ($D(DTOUT))!($D(DUOUT)) S SEL=0 Q
"RTN","PXRMFRPT",142,0)
 .. I Y=-1 S SEL=0 Q
"RTN","PXRMFRPT",143,0)
 .. S ITEMLIST(FNUM(LI),$P(Y,U,1))=""
"RTN","PXRMFRPT",144,0)
 Q
"RTN","PXRMFRPT",145,0)
 ;
"RTN","PXRMFRPT",146,0)
 ;==============================
"RTN","PXRMFRPT",147,0)
MSG ;Generate the MailMan message that reports the results.
"RTN","PXRMFRPT",148,0)
 N ANS,DTYP,FILENUM,FNAME,GNAME,IND,NAME,NL,NOUT,REPIEN,REPFNUM,REPGNAME
"RTN","PXRMFRPT",149,0)
 N REPFNAME,RNUM,STANDARD,STATUS,TEXT,TEXTOUT,TO
"RTN","PXRMFRPT",150,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMFRPT",151,0)
 S NL=1,^TMP("PXRMXMZ",$J,NL,0)="Clinical Reminder finding usage report."
"RTN","PXRMFRPT",152,0)
 S FILENUM=0
"RTN","PXRMFRPT",153,0)
 F  S FILENUM=$O(^TMP($J,"FDATA",FILENUM)) Q:FILENUM=""  D
"RTN","PXRMFRPT",154,0)
 .;DBIA #4640
"RTN","PXRMFRPT",155,0)
 . S STANDARD=$$SCREEN^HDISVF01(FILENUM)
"RTN","PXRMFRPT",156,0)
 . S GNAME=$$GET1^DID(FILENUM,"","","NAME")
"RTN","PXRMFRPT",157,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMFRPT",158,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="The following "_GNAME_"s are used as Clinical Reminder findings:"
"RTN","PXRMFRPT",159,0)
 . I STANDARD S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="(This file has been standardized.)"
"RTN","PXRMFRPT",160,0)
 . S FIEN=0
"RTN","PXRMFRPT",161,0)
 . F  S FIEN=$O(^TMP($J,"FDATA",FILENUM,FIEN)) Q:FIEN=""  D
"RTN","PXRMFRPT",162,0)
 .. S FNAME=$$GET1^DIQ(FILENUM,FIEN,.01)
"RTN","PXRMFRPT",163,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMFRPT",164,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="======================================================="
"RTN","PXRMFRPT",165,0)
 .. S TEXT=GNAME_" - "_FNAME_" (IEN="_FIEN_")"
"RTN","PXRMFRPT",166,0)
 .. D FORMATS^PXRMTEXT(1,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",167,0)
 .. F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",168,0)
 .. I STANDARD D
"RTN","PXRMFRPT",169,0)
 ...;DBIA #4631
"RTN","PXRMFRPT",170,0)
 ... S STATUS=$P($$GETSTAT^XTID(FILENUM,.01,FIEN_","),U,3)
"RTN","PXRMFRPT",171,0)
 ... I STATUS="" S STATUS="undefined"
"RTN","PXRMFRPT",172,0)
 ... S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  status is: "_STATUS
"RTN","PXRMFRPT",173,0)
 ...;DBIA #5078
"RTN","PXRMFRPT",174,0)
 ... S REP=$$RPLCMNT^XTIDTRM(FILENUM,FIEN)
"RTN","PXRMFRPT",175,0)
 ... I REP=(FIEN_";"_FILENUM) S REP=""
"RTN","PXRMFRPT",176,0)
 ... I REP'="" D
"RTN","PXRMFRPT",177,0)
 .... S REPIEN=$P(REP,";",1)
"RTN","PXRMFRPT",178,0)
 .... S REPFNUM=$P(REP,";",2)
"RTN","PXRMFRPT",179,0)
 .... S REPGNAME=$$GET1^DID(REPFNUM,"","","NAME")
"RTN","PXRMFRPT",180,0)
 .... S REPFNAME=$$GET1^DIQ(REPFNUM,REPIEN,.01)
"RTN","PXRMFRPT",181,0)
 .... S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  its replacement is "_REPGNAME_"; "_REPFNAME
"RTN","PXRMFRPT",182,0)
 .. F TYPE="DEF","TERM","DIALOG" D
"RTN","PXRMFRPT",183,0)
 ... I '$D(^TMP($J,"FDATA",FILENUM,FIEN,TYPE)) Q
"RTN","PXRMFRPT",184,0)
 ... S RNUM=$S(TYPE="DEF":811.9,TYPE="TERM":811.5,TYPE="DIALOG":801.41)
"RTN","PXRMFRPT",185,0)
 ... S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMFRPT",186,0)
 ... S TEXT=FNAME_" is used in the following "_$S(TYPE="DEF":"Definitions:",TYPE="TERM":"Terms:",TYPE="DIALOG":"Dialogs:",1:"")
"RTN","PXRMFRPT",187,0)
 ... D FORMATS^PXRMTEXT(4,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",188,0)
 ... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",189,0)
 ... S IEN=0
"RTN","PXRMFRPT",190,0)
 ... F  S IEN=$O(^TMP($J,"FDATA",FILENUM,FIEN,TYPE,IEN)) Q:IEN=""  D
"RTN","PXRMFRPT",191,0)
 .... S NAME=$$GET1^DIQ(RNUM,IEN,.01)
"RTN","PXRMFRPT",192,0)
 .... S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="----------------------------"
"RTN","PXRMFRPT",193,0)
 ....;
"RTN","PXRMFRPT",194,0)
 .... I TYPE="DIALOG" D 
"RTN","PXRMFRPT",195,0)
 ..... S DTYP=$P(^PXRMD(801.41,IEN,0),U,4)
"RTN","PXRMFRPT",196,0)
 ..... S TEXT="Dialog "_$S(DTYP="E":"element",DTYP="G":"group",DTYP="S":"result group",1:"item")
"RTN","PXRMFRPT",197,0)
 ..... S TEXT=TEXT_" "_NAME_$S($P(^PXRMD(801.41,IEN,0),U,3)=1:" (Disable)",1:"")_" (IEN="_IEN_")"
"RTN","PXRMFRPT",198,0)
 ..... S TEXT=TEXT_", used in the"
"RTN","PXRMFRPT",199,0)
 ..... D FORMATS^PXRMTEXT(6,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",200,0)
 ..... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",201,0)
 ..... S FI=0
"RTN","PXRMFRPT",202,0)
 ..... F  S FI=$O(^TMP($J,"FDATA",FILENUM,FIEN,TYPE,IEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",203,0)
 ...... S TEXT=$S(FI=15:"Finding Item field",FI=17:"Orderable Item field",FI=18:"Additional Finding field",FI=119:"MH Test field",1:"")
"RTN","PXRMFRPT",204,0)
 ...... D FORMATS^PXRMTEXT(8,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",205,0)
 ...... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",206,0)
 ....;
"RTN","PXRMFRPT",207,0)
 .... I TYPE'="DIALOG" D
"RTN","PXRMFRPT",208,0)
 ..... S TEXT=NAME_" (IEN="_IEN_")"
"RTN","PXRMFRPT",209,0)
 ..... D FORMATS^PXRMTEXT(6,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",210,0)
 ..... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",211,0)
 ..... S FI=0
"RTN","PXRMFRPT",212,0)
 ..... F  S FI=$O(^TMP($J,"FDATA",FILENUM,FIEN,TYPE,IEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",213,0)
 ...... S TEXT="Finding number "_FI
"RTN","PXRMFRPT",214,0)
 ...... D FORMATS^PXRMTEXT(8,72,TEXT,.NOUT,.TEXTOUT)
"RTN","PXRMFRPT",215,0)
 ...... F IND=1:1:NOUT S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=TEXTOUT(IND)
"RTN","PXRMFRPT",216,0)
 .....;
"RTN","PXRMFRPT",217,0)
 ;Deliver the message.
"RTN","PXRMFRPT",218,0)
 I NL=1 W !,"None of the selected findings are used in definitions, terms, or dialogs."
"RTN","PXRMFRPT",219,0)
 I NL>1 D
"RTN","PXRMFRPT",220,0)
 .;Ask the user if they want the report delivered through MailMan.
"RTN","PXRMFRPT",221,0)
 . S ANS=$$ASKYN^PXRMEUT("Y","Deliver the report as a MailMan message")
"RTN","PXRMFRPT",222,0)
 . I ANS="1" D
"RTN","PXRMFRPT",223,0)
 .. S TO(DUZ)=""
"RTN","PXRMFRPT",224,0)
 .. D SEND^PXRMMSG("PXRMXMZ","Clinical Reminders Finding Usage Report",.TO)
"RTN","PXRMFRPT",225,0)
 . I ANS="0" F IND=1:1:NL W !,^TMP("PXRMXMZ",$J,IND,0)
"RTN","PXRMFRPT",226,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMFRPT",227,0)
 Q
"RTN","PXRMFRPT",228,0)
 ;
"RTN","PXRMFRPT",229,0)
 ;==============================
"RTN","PXRMFRPT",230,0)
REPD ;Main report driver.
"RTN","PXRMFRPT",231,0)
 N DONE,FI,FIEN,FIENS,FILES,FILENUM,FNUM,GBL,GNAME,IEN,IND,ITEMLIST
"RTN","PXRMFRPT",232,0)
 N LI,LIST,NL,NUM,REP,STATUS,TYPE
"RTN","PXRMFRPT",233,0)
 S DONE=0
"RTN","PXRMFRPT",234,0)
 W !,"Clinical Reminders Finding Usage Report"
"RTN","PXRMFRPT",235,0)
 F  Q:DONE  D
"RTN","PXRMFRPT",236,0)
 . K ^TMP($J,"DIALOG MESSAGE"),^TMP($J,"DLG FIND")
"RTN","PXRMFRPT",237,0)
 . K ^TMP($J,"FDATA"),^TMP("PXRMXMZ",$J)
"RTN","PXRMFRPT",238,0)
 . K FNUM,GBL,GNAME,ITEMLIST,LIST
"RTN","PXRMFRPT",239,0)
 .;Get a list of findings for the report.
"RTN","PXRMFRPT",240,0)
 . D FSEL(.FNUM,.GBL,.GNAME,.LIST)
"RTN","PXRMFRPT",241,0)
 . S NUM=$L(LIST,",")-1
"RTN","PXRMFRPT",242,0)
 . I NUM=0 S DONE=1 Q
"RTN","PXRMFRPT",243,0)
 . D ISEL(.FNUM,.GBL,.GNAME,.LIST,.ITEMLIST)
"RTN","PXRMFRPT",244,0)
 . I '$D(ITEMLIST) Q
"RTN","PXRMFRPT",245,0)
 . D BLDDLGTM^PXRMSTS("DLG FIND")
"RTN","PXRMFRPT",246,0)
 . F IND=1:1:NUM D
"RTN","PXRMFRPT",247,0)
 .. S LI=$P(LIST,",",IND)
"RTN","PXRMFRPT",248,0)
 .. I '$D(ITEMLIST(FNUM(LI))) D BLDLIST(FNUM(LI),GBL(LI),"","FDATA") Q
"RTN","PXRMFRPT",249,0)
 .. I $D(ITEMLIST(FNUM(LI))) D
"RTN","PXRMFRPT",250,0)
 ... S FIEN=""
"RTN","PXRMFRPT",251,0)
 ... F  S FIEN=$O(ITEMLIST(FNUM(LI),FIEN)) Q:FIEN=""  D BLDLIST(FNUM(LI),GBL(LI),FIEN,"FDATA")
"RTN","PXRMFRPT",252,0)
 .;Process the finding list and generate the MailMan message.
"RTN","PXRMFRPT",253,0)
 . D MSG
"RTN","PXRMFRPT",254,0)
 . K ^TMP($J,"FDATA"),^TMP("PXRMXMZ",$J),^TMP($J,"DLG FIND")
"RTN","PXRMFRPT",255,0)
 Q
"RTN","PXRMFRPT",256,0)
 ;
"RTN","PXRMFRPT",257,0)
 ;==============================
"RTN","PXRMFRPT",258,0)
TERMLIST(FILENUM,GBL,FIEN,SUB) ;Search reminder terms for any that are using
"RTN","PXRMFRPT",259,0)
 ;GBL as a finding. If FIEN is not null then search for only those
"RTN","PXRMFRPT",260,0)
 ;findings.
"RTN","PXRMFRPT",261,0)
 N FI,FNDIEN,IEN
"RTN","PXRMFRPT",262,0)
 S IEN=0
"RTN","PXRMFRPT",263,0)
 F  S IEN=+$O(^PXRMD(811.5,IEN)) Q:IEN=0  D
"RTN","PXRMFRPT",264,0)
 . I '$D(^PXRMD(811.5,IEN,20,"E",GBL)) Q
"RTN","PXRMFRPT",265,0)
 . I +FIEN>0 D
"RTN","PXRMFRPT",266,0)
 .. S FI=""
"RTN","PXRMFRPT",267,0)
 .. F  S FI=$O(^PXRMD(811.5,IEN,20,"E",GBL,FIEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",268,0)
 ... S ^TMP($J,SUB,FILENUM,FIEN,"TERM",IEN,FI)=""
"RTN","PXRMFRPT",269,0)
 . I +FIEN=0 D
"RTN","PXRMFRPT",270,0)
 ..;No finding specified find all of them.
"RTN","PXRMFRPT",271,0)
 .. S FNDIEN=""
"RTN","PXRMFRPT",272,0)
 .. F  S FNDIEN=$O(^PXRMD(811.5,IEN,20,"E",GBL,FNDIEN)) Q:FNDIEN=""  D
"RTN","PXRMFRPT",273,0)
 ... S FI=""
"RTN","PXRMFRPT",274,0)
 ... F  S FI=$O(^PXRMD(811.5,IEN,20,"E",GBL,FNDIEN,FI)) Q:FI=""  D
"RTN","PXRMFRPT",275,0)
 .... S ^TMP($J,SUB,FILENUM,FNDIEN,"TERM",IEN,FI)=""
"RTN","PXRMFRPT",276,0)
 Q
"RTN","PXRMFRPT",277,0)
 ;
"RTN","PXRMINTR")
0^8^B37092667
"RTN","PXRMINTR",1,0)
PXRMINTR ; SLC/PKR/PJH - Input transforms for Clinical Reminders.;09/29/2009
"RTN","PXRMINTR",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,12,16**;Feb 04, 2005;Build 119
"RTN","PXRMINTR",3,0)
 ;=======================================================
"RTN","PXRMINTR",4,0)
VASP(DA,X) ;Check for valid associate sponsor in file 811.6.
"RTN","PXRMINTR",5,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",6,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",7,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",8,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",9,0)
 ;Make sure that an associated sponsor does not point to itself.
"RTN","PXRMINTR",10,0)
 I X=DA D  Q 0
"RTN","PXRMINTR",11,0)
 . D EN^DDIOL("An associated sponsor cannot point to itself.")
"RTN","PXRMINTR",12,0)
 ;A sponsor cannot be an associated sponsor if it contains associated
"RTN","PXRMINTR",13,0)
 ;sponsors.
"RTN","PXRMINTR",14,0)
 I $D(^PXRMD(811.6,X,2,"B")) D  Q 0
"RTN","PXRMINTR",15,0)
 . D EN^DDIOL("A sponsor cannot be selected as an associated sponsor if it contains associated sponsors.")
"RTN","PXRMINTR",16,0)
 ;The class of an associated sponsor must match that of the sponsor.
"RTN","PXRMINTR",17,0)
 N ASCLASS,SCLASS
"RTN","PXRMINTR",18,0)
 S SCLASS=$P(^PXRMD(811.6,DA,0),U,2)
"RTN","PXRMINTR",19,0)
 S ASCLASS=$P(^PXRMD(811.6,X,0),U,2)
"RTN","PXRMINTR",20,0)
 I ASCLASS'=SCLASS D  Q 0
"RTN","PXRMINTR",21,0)
 . N TEXT
"RTN","PXRMINTR",22,0)
 . S TEXT="The associated sponsor's class is "_ASCLASS_", it does not match the sponsor's class which is "_SCLASS_". They must match."
"RTN","PXRMINTR",23,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",24,0)
 Q 1
"RTN","PXRMINTR",25,0)
 ;
"RTN","PXRMINTR",26,0)
 ;=======================================================
"RTN","PXRMINTR",27,0)
VCLASS(X) ;Check for valid CLASS field, ordinary users cannot create
"RTN","PXRMINTR",28,0)
 ;National classes.
"RTN","PXRMINTR",29,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",30,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",31,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",32,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",33,0)
 I (X["N"),(($G(PXRMINST)'=1)!(DUZ(0)'="@")) D  Q 0
"RTN","PXRMINTR",34,0)
 . D EN^DDIOL("You are not allowed to create a NATIONAL class")
"RTN","PXRMINTR",35,0)
 E  Q 1
"RTN","PXRMINTR",36,0)
 ;
"RTN","PXRMINTR",37,0)
 ;=======================================================
"RTN","PXRMINTR",38,0)
VDT(X) ;Check for a valid date/time. Input transform on 
"RTN","PXRMINTR",39,0)
 ;beginning date/time and ending date/time fields.
"RTN","PXRMINTR",40,0)
 N FMDATE,VALID
"RTN","PXRMINTR",41,0)
 S FMDATE=$$CTFMD^PXRMDATE(X)
"RTN","PXRMINTR",42,0)
 S VALID=$S(FMDATE=-1:0,1:1)
"RTN","PXRMINTR",43,0)
 I 'VALID D 
"RTN","PXRMINTR",44,0)
 . N TEXT
"RTN","PXRMINTR",45,0)
 . S TEXT=X_" is not a valid date/time"
"RTN","PXRMINTR",46,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",47,0)
 Q VALID
"RTN","PXRMINTR",48,0)
 ;
"RTN","PXRMINTR",49,0)
 ;=======================================================
"RTN","PXRMINTR",50,0)
VFINDING(X) ;Check X to see if it is a valid finding. This is the input
"RTN","PXRMINTR",51,0)
 ;transform on the .01 field of the reminder findings multiple for
"RTN","PXRMINTR",52,0)
 ;definitions and terms.
"RTN","PXRMINTR",53,0)
 ;Include stubs for all possible finding types in case we need input
"RTN","PXRMINTR",54,0)
 ;transforms on them.
"RTN","PXRMINTR",55,0)
 ;I X["AUTTEDT(" Q 1
"RTN","PXRMINTR",56,0)
 ;I X["AUTTEXAM(" Q 1
"RTN","PXRMINTR",57,0)
 I X["AUTTHF(" Q $$VHF(X)
"RTN","PXRMINTR",58,0)
 ;I X["AUTTIMM(" Q 1
"RTN","PXRMINTR",59,0)
 ;I X["AUTTSK(" Q 1
"RTN","PXRMINTR",60,0)
 ;I X["GMRD(120.51," Q 1
"RTN","PXRMINTR",61,0)
 I X["LAB(60," Q $$VLAB(X)
"RTN","PXRMINTR",62,0)
 ;I X["ORD(101.43," Q 1
"RTN","PXRMINTR",63,0)
 I X["PXD(811.2," Q $$VTAX(X)
"RTN","PXRMINTR",64,0)
 ;I X["PXRMD(811.4," Q 1
"RTN","PXRMINTR",65,0)
 ;I X["PXRMD(811.5," Q 1
"RTN","PXRMINTR",66,0)
 ;I X["PS(50.605," Q 1
"RTN","PXRMINTR",67,0)
 ;I X["PSDRUG(" Q 1
"RTN","PXRMINTR",68,0)
 ;I X["PSNDF(50.6," Q 1
"RTN","PXRMINTR",69,0)
 ;I X["RAMIS(71," Q 1
"RTN","PXRMINTR",70,0)
 ;I X["YTT(601," Q 1
"RTN","PXRMINTR",71,0)
 Q 1
"RTN","PXRMINTR",72,0)
 ;
"RTN","PXRMINTR",73,0)
 ;=======================================================
"RTN","PXRMINTR",74,0)
VHF(X) ;Check for valid health factor findings. It must be a factor, not
"RTN","PXRMINTR",75,0)
 ;a category.
"RTN","PXRMINTR",76,0)
 N CAT,IEN,TEMP,TYPE
"RTN","PXRMINTR",77,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",78,0)
 S TEMP=$G(^AUTTHF(IEN,0))
"RTN","PXRMINTR",79,0)
 S TYPE=$P(TEMP,U,10)
"RTN","PXRMINTR",80,0)
 I TYPE="C" D  Q 0
"RTN","PXRMINTR",81,0)
 . D EN^DDIOL("Category health factors cannot be used as a finding!")
"RTN","PXRMINTR",82,0)
 I TYPE'="F" D  Q 0
"RTN","PXRMINTR",83,0)
 . D EN^DDIOL("Only factor health factors can be used as a finding!")
"RTN","PXRMINTR",84,0)
 ;Make sure that the health factor has a category.
"RTN","PXRMINTR",85,0)
 S CAT=$P(TEMP,U,3)
"RTN","PXRMINTR",86,0)
 I CAT="" D  Q 0
"RTN","PXRMINTR",87,0)
 . D EN^DDIOL("Factor health factors must have a category!")
"RTN","PXRMINTR",88,0)
 I '$D(^AUTTHF(CAT)) D  Q 0
"RTN","PXRMINTR",89,0)
 . D EN^DDIOL("The category for this health factor does not exist!")
"RTN","PXRMINTR",90,0)
 Q 1
"RTN","PXRMINTR",91,0)
 ;
"RTN","PXRMINTR",92,0)
 ;=======================================================
"RTN","PXRMINTR",93,0)
VIGNAC(X) ;Check X to see if it contains valid IGNORE ON N/A codes.
"RTN","PXRMINTR",94,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",95,0)
 ;IGNORE ON N/A field is 8 characters. The valid codes are:
"RTN","PXRMINTR",96,0)
 ;   A - age
"RTN","PXRMINTR",97,0)
 ;   I - inactive
"RTN","PXRMINTR",98,0)
 ;   R - race
"RTN","PXRMINTR",99,0)
 ;   S - sex
"RTN","PXRMINTR",100,0)
 ;   * - wildcard matches anything.
"RTN","PXRMINTR",101,0)
 N LEN
"RTN","PXRMINTR",102,0)
 S LEN=$L(X)
"RTN","PXRMINTR",103,0)
 I (LEN>8)!(LEN<1) Q 0
"RTN","PXRMINTR",104,0)
 ;
"RTN","PXRMINTR",105,0)
 N TEMP,TEXT
"RTN","PXRMINTR",106,0)
 S TEMP=X
"RTN","PXRMINTR",107,0)
 S TEMP=$TR(TEMP,"A","")
"RTN","PXRMINTR",108,0)
 S TEMP=$TR(TEMP,"I","")
"RTN","PXRMINTR",109,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",110,0)
 S TEMP=$TR(TEMP,"S","")
"RTN","PXRMINTR",111,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",112,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",113,0)
 ;bad codes.
"RTN","PXRMINTR",114,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",115,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",116,0)
 . S TEXT=TEMP_" is not a valid IGNORE ON N/A code!"
"RTN","PXRMINTR",117,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",118,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",119,0)
 . S TEXT=TEMP_" are not valid IGNORE ON N/A codes!"
"RTN","PXRMINTR",120,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",121,0)
 Q 1
"RTN","PXRMINTR",122,0)
 ;
"RTN","PXRMINTR",123,0)
 ;=======================================================
"RTN","PXRMINTR",124,0)
VLAB(X) ;Check for valid lab findings. Everything but a panel is ok.
"RTN","PXRMINTR",125,0)
 I X'["LAB(60" Q 1
"RTN","PXRMINTR",126,0)
 N DATANAME,LAB0,LABTEST,SUB,TEST,TEXT
"RTN","PXRMINTR",127,0)
 S LABTEST=$P(X,";",1)
"RTN","PXRMINTR",128,0)
 ;DBIA #91-A
"RTN","PXRMINTR",129,0)
 S LAB0=^LAB(60,LABTEST,0)
"RTN","PXRMINTR",130,0)
 S SUB=$P(LAB0,U,4)
"RTN","PXRMINTR",131,0)
 ;BB and WK not allowed
"RTN","PXRMINTR",132,0)
 I (SUB="BB")!(SUB="WK") D  Q 0
"RTN","PXRMINTR",133,0)
 . S TEXT=SUB_" tests cannot be used as reminder findings."
"RTN","PXRMINTR",134,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",135,0)
 ;The concept of lab panel only applies to CH tests.
"RTN","PXRMINTR",136,0)
 I SUB'["CH" Q 1
"RTN","PXRMINTR",137,0)
 S DATANAME=$P(LAB0,U,5)
"RTN","PXRMINTR",138,0)
 ;If DATA NAME is null then it is a panel.
"RTN","PXRMINTR",139,0)
 I DATANAME="" D  Q 0
"RTN","PXRMINTR",140,0)
 . S TEXT(1)=$P(LAB0,U,1)_" is a lab panel, it cannot be used as a reminder finding!"
"RTN","PXRMINTR",141,0)
 . S TEXT(2)="Contact your Lab ADPAC for help"
"RTN","PXRMINTR",142,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMINTR",143,0)
 Q 1
"RTN","PXRMINTR",144,0)
 ;
"RTN","PXRMINTR",145,0)
 ;=======================================================
"RTN","PXRMINTR",146,0)
VNAME(NAME) ;Check for a valid .01 value. The names of national reminder
"RTN","PXRMINTR",147,0)
 ;components start with "VA-" and normal users are not allowed to
"RTN","PXRMINTR",148,0)
 ;create them.
"RTN","PXRMINTR",149,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",150,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",151,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",152,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",153,0)
 N AUTH,STEXT,TEXT,VALID
"RTN","PXRMINTR",154,0)
 S NAME=$$UP^XLFSTR(NAME)
"RTN","PXRMINTR",155,0)
 S VALID=1
"RTN","PXRMINTR",156,0)
 S STEXT=$E(NAME,1,3)
"RTN","PXRMINTR",157,0)
 I (STEXT="VA-") D
"RTN","PXRMINTR",158,0)
 . S AUTH=($G(PXRMINST)=1)&(DUZ(0)="@")
"RTN","PXRMINTR",159,0)
 . I 'AUTH D
"RTN","PXRMINTR",160,0)
 .. S TEXT="Name cannot start with ""VA-"", reserved for national reminder components!"
"RTN","PXRMINTR",161,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMINTR",162,0)
 .. H 2
"RTN","PXRMINTR",163,0)
 .. S VALID=0
"RTN","PXRMINTR",164,0)
 Q VALID
"RTN","PXRMINTR",165,0)
 ;
"RTN","PXRMINTR",166,0)
 ;=======================================================
"RTN","PXRMINTR",167,0)
VSPONSOR(X) ;Make sure file Class and Sponsor Class match.
"RTN","PXRMINTR",168,0)
 ;If there is no sponsor don't do the check.
"RTN","PXRMINTR",169,0)
 I X="" Q 1
"RTN","PXRMINTR",170,0)
 ;Do not execute as part of a verify fields.
"RTN","PXRMINTR",171,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMINTR",172,0)
 ;Do not execute as part of exchange.
"RTN","PXRMINTR",173,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMINTR",174,0)
 N FCLASS,FILENUM,SCLASS,TEXT,VALID
"RTN","PXRMINTR",175,0)
 S VALID=1
"RTN","PXRMINTR",176,0)
 I $G(X)="" Q VALID
"RTN","PXRMINTR",177,0)
 I $G(DIC)="" Q 0
"RTN","PXRMINTR",178,0)
 S FILENUM=+$P(@(DIC_"0)"),U,2)
"RTN","PXRMINTR",179,0)
 S FCLASS=$P(@(DIC_DA_",100)"),U,1)
"RTN","PXRMINTR",180,0)
 S SCLASS=$P(^PXRMD(811.6,X,100),U,1)
"RTN","PXRMINTR",181,0)
 I SCLASS'=FCLASS D
"RTN","PXRMINTR",182,0)
 . S FCLASS=$$EXTERNAL^DILFD(FILENUM,100,"",FCLASS)
"RTN","PXRMINTR",183,0)
 . S SCLASS=$$EXTERNAL^DILFD(811.6,100,"",SCLASS)
"RTN","PXRMINTR",184,0)
 . S TEXT="Sponsor Class is "_SCLASS_", File Class is "_FCLASS_" they must match!"
"RTN","PXRMINTR",185,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",186,0)
 . S VALID=0
"RTN","PXRMINTR",187,0)
 Q VALID
"RTN","PXRMINTR",188,0)
 ;
"RTN","PXRMINTR",189,0)
 ;=======================================================
"RTN","PXRMINTR",190,0)
VTAX(X) ;Make sure the taxonomy is active.
"RTN","PXRMINTR",191,0)
 N IEN,INACTIVE
"RTN","PXRMINTR",192,0)
 S IEN=$P(X,";",1)
"RTN","PXRMINTR",193,0)
 S INACTIVE=$P(^PXD(811.2,IEN,0),U,6)
"RTN","PXRMINTR",194,0)
 I INACTIVE D  Q 0
"RTN","PXRMINTR",195,0)
 . D EN^DDIOL("This taxonomy is inactive and cannot be selected.")
"RTN","PXRMINTR",196,0)
 Q 1
"RTN","PXRMINTR",197,0)
 ;
"RTN","PXRMINTR",198,0)
 ;=======================================================
"RTN","PXRMINTR",199,0)
VTPER(X) ;Check for valid time period. They must be of the form NS,
"RTN","PXRMINTR",200,0)
 ; where N is a number and S is D for days, M for months, or Y for years.
"RTN","PXRMINTR",201,0)
 N LEN
"RTN","PXRMINTR",202,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMINTR",203,0)
 S LEN=$L(X)
"RTN","PXRMINTR",204,0)
 I (LEN>5)!(LEN<2) Q 0
"RTN","PXRMINTR",205,0)
 I ((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) Q 0
"RTN","PXRMINTR",206,0)
 Q 1
"RTN","PXRMINTR",207,0)
 ;
"RTN","PXRMINTR",208,0)
 ;=======================================================
"RTN","PXRMINTR",209,0)
VUSAGE(X) ;Check X to see if it contains valid USAGE codes.
"RTN","PXRMINTR",210,0)
 ;This is part of the input transform for this field. The length of the
"RTN","PXRMINTR",211,0)
 ;USAGE field is 10 characters. The valid codes are:
"RTN","PXRMINTR",212,0)
 ;   C - CPRS
"RTN","PXRMINTR",213,0)
 ;   L - Reminder Patient List
"RTN","PXRMINTR",214,0)
 ;   O - Reminder Order Checks
"RTN","PXRMINTR",215,0)
 ;   P - Patient
"RTN","PXRMINTR",216,0)
 ;   R - Reports
"RTN","PXRMINTR",217,0)
 ;   X - Extracts
"RTN","PXRMINTR",218,0)
 ;   * - Wildcard matches anything, except P.
"RTN","PXRMINTR",219,0)
 N LEN
"RTN","PXRMINTR",220,0)
 S LEN=$L(X)
"RTN","PXRMINTR",221,0)
 I (LEN>10)!(LEN<1) Q 0
"RTN","PXRMINTR",222,0)
 ;
"RTN","PXRMINTR",223,0)
 N TEMP,TEXT
"RTN","PXRMINTR",224,0)
 S TEMP=$$UP^XLFSTR(X)
"RTN","PXRMINTR",225,0)
 S TEMP=$TR(TEMP,"C","")
"RTN","PXRMINTR",226,0)
 S TEMP=$TR(TEMP,"L","")
"RTN","PXRMINTR",227,0)
 S TEMP=$TR(TEMP,"O","")
"RTN","PXRMINTR",228,0)
 S TEMP=$TR(TEMP,"P","")
"RTN","PXRMINTR",229,0)
 S TEMP=$TR(TEMP,"R","")
"RTN","PXRMINTR",230,0)
 S TEMP=$TR(TEMP,"X","")
"RTN","PXRMINTR",231,0)
 S TEMP=$TR(TEMP,"*","")
"RTN","PXRMINTR",232,0)
 ;At this point TEMP should be NULL,if it is not then there are
"RTN","PXRMINTR",233,0)
 ;bad codes.
"RTN","PXRMINTR",234,0)
 S LEN=$L(TEMP)
"RTN","PXRMINTR",235,0)
 I LEN=1 D  Q 0
"RTN","PXRMINTR",236,0)
 . S TEXT=TEMP_" is not a valid USAGE code!"
"RTN","PXRMINTR",237,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",238,0)
 I LEN>1 D  Q 0
"RTN","PXRMINTR",239,0)
 . S TEXT=TEMP_" are not valid USAGE codes!"
"RTN","PXRMINTR",240,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMINTR",241,0)
 Q 1
"RTN","PXRMORCH")
0^1^B212664484
"RTN","PXRMORCH",1,0)
PXRMORCH ; SLC/AGP - Reminder Order Checks ;6/11/2010
"RTN","PXRMORCH",2,0)
 ;;2.0;CLINICAL REMINDERS;**16**;Feb 04, 2005;Build 119
"RTN","PXRMORCH",3,0)
 ;
"RTN","PXRMORCH",4,0)
 Q
"RTN","PXRMORCH",5,0)
 ;
"RTN","PXRMORCH",6,0)
ADD(INPUT) ;
"RTN","PXRMORCH",7,0)
 ;Add code is used when creating a new orderable item group
"RTN","PXRMORCH",8,0)
 N DA,DIC,Y,DTOUT,DUOUT,DTYP,DLAYGO
"RTN","PXRMORCH",9,0)
 S DIC="^PXD(801,"
"RTN","PXRMORCH",10,0)
 ;Set the starting place for additions.
"RTN","PXRMORCH",11,0)
 I INPUT="E" S DIC(0)="AELMQ",DLAYGO=801
"RTN","PXRMORCH",12,0)
 I INPUT="I" S DIC(0)="AEMQ"
"RTN","PXRMORCH",13,0)
 S DIC("A")="Select Reminder Order Check Rule: "
"RTN","PXRMORCH",14,0)
 D ^DIC
"RTN","PXRMORCH",15,0)
 I $D(DUOUT)!($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMORCH",16,0)
 I Y=-1 K DIC Q
"RTN","PXRMORCH",17,0)
 I INPUT="I" D  Q
"RTN","PXRMORCH",18,0)
 .N BY,DC,DHD,FR,HTEXT,IENN,NOW,TO
"RTN","PXRMORCH",19,0)
 .S HTEXT="REMINDER ORDERABLE ITEM GROUP INQUIRY"
"RTN","PXRMORCH",20,0)
 .D SET^PXRMINQ(Y,HTEXT)
"RTN","PXRMORCH",21,0)
 .;NAME OF PRINT TEMPLATE SHOULD BE CHANGED?
"RTN","PXRMORCH",22,0)
 .D DISP^PXRMINQ("^PXD(801,","[PXRM ORDERABLE ITEM GROUP LIST]")
"RTN","PXRMORCH",23,0)
 I INPUT="E" D EDIT(+Y)
"RTN","PXRMORCH",24,0)
 Q
"RTN","PXRMORCH",25,0)
 ;
"RTN","PXRMORCH",26,0)
BUILD(REF,INPUT,ITEM,CNT,ALPHA,MATCH) ;
"RTN","PXRMORCH",27,0)
 ;build a list of orderable item group entries that contain ITEM
"RTN","PXRMORCH",28,0)
 N ARRAY,IEN,NAME
"RTN","PXRMORCH",29,0)
 K ^TMP($J,"PXRMORCL")
"RTN","PXRMORCH",30,0)
 S CNT=0
"RTN","PXRMORCH",31,0)
 S IEN=0 F  S IEN=$O(^PXD(801,REF,ITEM,IEN)) Q:IEN'>0  D
"RTN","PXRMORCH",32,0)
 .S NAME=$P(^PXD(801,IEN,0),U)
"RTN","PXRMORCH",33,0)
 .S ARRAY(NAME)=IEN
"RTN","PXRMORCH",34,0)
 I '$D(ARRAY) W !,"No matching orderable item group found." Q 0
"RTN","PXRMORCH",35,0)
 ;
"RTN","PXRMORCH",36,0)
 ;build output display text in array alpha this loop is used to build
"RTN","PXRMORCH",37,0)
 ;a format the DIR call can use in the SELECT line tag
"RTN","PXRMORCH",38,0)
 S NAME="" F  S NAME=$O(ARRAY(NAME)) Q:NAME=""  D
"RTN","PXRMORCH",39,0)
 .S IEN=ARRAY(NAME)
"RTN","PXRMORCH",40,0)
 .;
"RTN","PXRMORCH",41,0)
 .;if use for inquiry build temp global for inquiry
"RTN","PXRMORCH",42,0)
 .I INPUT="I" S ^TMP($J,"PXRMORCL",IEN)="" Q
"RTN","PXRMORCH",43,0)
 .;
"RTN","PXRMORCH",44,0)
 .S CNT=CNT+1,ALPHA(CNT)=$$RJ^XLFSTR(CNT,4," ")_" "_NAME
"RTN","PXRMORCH",45,0)
 .S MATCH(CNT,IEN)=NAME
"RTN","PXRMORCH",46,0)
 ;
"RTN","PXRMORCH",47,0)
 I INPUT="I" D
"RTN","PXRMORCH",48,0)
 .N BY,DIC,DHD,FLDS,FR,HTEXT,L,PXRMROOT,TO
"RTN","PXRMORCH",49,0)
 .S (DIC,PXRMROOT)="^PXD(801,"
"RTN","PXRMORCH",50,0)
 .S FLDS="[PXRM ORDERABLE ITEM GROUP LIST]"
"RTN","PXRMORCH",51,0)
 .S L=0,L(0)=1,BY=.01,BY(0)="^TMP($J,""PXRMORCL""",FR="",TO=""
"RTN","PXRMORCH",52,0)
 .S HTEXT="REMINDER ORDERABLE ITEM GROUP INQUIRY"
"RTN","PXRMORCH",53,0)
 .S DHD="@@"
"RTN","PXRMORCH",54,0)
 .D EN1^DIP
"RTN","PXRMORCH",55,0)
 K ^TMP($J,"PXRMORCL")
"RTN","PXRMORCH",56,0)
 Q
"RTN","PXRMORCH",57,0)
 ;
"RTN","PXRMORCH",58,0)
CHECK(IEN) ;
"RTN","PXRMORCH",59,0)
 ;This sub routine is called after an edit is done. It validate the
"RTN","PXRMORCH",60,0)
 ;data in the entry. If a rule is incomplete the entry is marked
"RTN","PXRMORCH",61,0)
 ;inactive.
"RTN","PXRMORCH",62,0)
 ;
"RTN","PXRMORCH",63,0)
 N CNT,LOOP,NODE,PIECE,RESULT,RARRAY,RIEN,RNAME,RNODE,ROUT,TNODE,TXT
"RTN","PXRMORCH",64,0)
 ;Quit if no rules are defined
"RTN","PXRMORCH",65,0)
 S RESULT=0
"RTN","PXRMORCH",66,0)
 I $G(IEN(1))="" Q
"RTN","PXRMORCH",67,0)
 I '$D(^PXD(801,IEN(1),3,"B")) Q
"RTN","PXRMORCH",68,0)
 W !,"Checking for errors"
"RTN","PXRMORCH",69,0)
 S RIEN=0 F  S RIEN=$O(^PXD(801,IEN(1),3,RIEN)) Q:RIEN'>0  D
"RTN","PXRMORCH",70,0)
 .S CNT=0
"RTN","PXRMORCH",71,0)
 .S NODE=$G(^PXD(801,IEN(1),3,RIEN,0))
"RTN","PXRMORCH",72,0)
 .;check to see if a rule is defined if not report error and quit
"RTN","PXRMORCH",73,0)
 .S RNAME=$P(NODE,U) I RNAME="" D  Q
"RTN","PXRMORCH",74,0)
 ..S TXT(1)="Rule IEN: "_RIEN_" does not have a name defined."
"RTN","PXRMORCH",75,0)
 ..D DISABLE(IEN(1),RIEN,1,TXT)
"RTN","PXRMORCH",76,0)
 .;loop through the zero node to determine if all the fields are defined
"RTN","PXRMORCH",77,0)
 .F PIECE=2:1:5 D
"RTN","PXRMORCH",78,0)
 ..I $P(NODE,U,PIECE)="" D
"RTN","PXRMORCH",79,0)
 ...S CNT=CNT+1,TXT(CNT)="\\Rule "_RNAME_" does not have a value defined in the "_$S(PIECE=2:"Print Name",PIECE=3:"Active Flag",PIECE=4:"Testing Flag",PIECE=5:"Severity")_" flag."
"RTN","PXRMORCH",80,0)
 .S RNODE=$G(^PXD(801,IEN(1),3,RIEN,3))
"RTN","PXRMORCH",81,0)
 .S TNODE=$G(^PXD(801,IEN(1),3,RIEN,2))
"RTN","PXRMORCH",82,0)
 .;check for an existance of either a term node or a definition node
"RTN","PXRMORCH",83,0)
 .I $P(RNODE,U)="",$P(TNODE,U)="" D
"RTN","PXRMORCH",84,0)
 ..S CNT=CNT+1,TXT(CNT)="\\Rule "_RNAME_" does not have a reminder term or a reminder defintion defined."
"RTN","PXRMORCH",85,0)
 .I $P(RNODE,U)'="",$P(TNODE,U)'="" D
"RTN","PXRMORCH",86,0)
 ..S CNT=CNT+1,TXT(CNT)="\\Rule "_RNAME_" has both a reminder term or a reminder defintion defined."
"RTN","PXRMORCH",87,0)
 .;check on the term node
"RTN","PXRMORCH",88,0)
 .I +$P(TNODE,U)>0 D
"RTN","PXRMORCH",89,0)
 ..I $P(TNODE,U,2)="" D
"RTN","PXRMORCH",90,0)
 ...S CNT=CNT+1,TXT(CNT)="\\Rule "_RNAME_" does not have a reminder term status value defined."
"RTN","PXRMORCH",91,0)
 ..I +$G(^PXD(801,IEN(1),3,RIEN,5))=0 D
"RTN","PXRMORCH",92,0)
 ...S CNT=CNT+1,TXT(CNT)="\\Rule "_RNAME_" does not have the order check text defined."
"RTN","PXRMORCH",93,0)
 .;check on ther definition node
"RTN","PXRMORCH",94,0)
 .I +$P(RNODE,U)>0 D
"RTN","PXRMORCH",95,0)
 ..I $P(RNODE,U,2)="" D
"RTN","PXRMORCH",96,0)
 ...S CNT=CNT+1,TXT(CNT)="\\Rule "_RNAME_" does not have a value for the reminder definition status."
"RTN","PXRMORCH",97,0)
 ..I $P(RNODE,U,3)="" D
"RTN","PXRMORCH",98,0)
 ...S CNT=CNT+1,TXT(CNT)="\\Rule "_RNAME_" does not have an output text value defined."
"RTN","PXRMORCH",99,0)
 ..I $P(RNODE,U,3)="O"!($P(RNODE,U,3)="B") D
"RTN","PXRMORCH",100,0)
 ...I +$G(^PXD(801,IEN(1),3,RIEN,5))=0 D
"RTN","PXRMORCH",101,0)
 ....S CNT=CNT+1,TXT(CNT)="\\Rule "_RNAME_" does not have the order check text defined."
"RTN","PXRMORCH",102,0)
 .I CNT>0 D DISABLE(IEN(1),RIEN,.CNT,.TXT) S RESULT=1
"RTN","PXRMORCH",103,0)
 I RESULT=0 W !!,"No errors found.",!!
"RTN","PXRMORCH",104,0)
 Q
"RTN","PXRMORCH",105,0)
 ;
"RTN","PXRMORCH",106,0)
DELTXT(IEN) ;
"RTN","PXRMORCH",107,0)
 ;delete the order check text called when the order check text
"RTN","PXRMORCH",108,0)
 ;is no longer valid for order check rule
"RTN","PXRMORCH",109,0)
 N DA,DIK,TEMP
"RTN","PXRMORCH",110,0)
 I '$D(^PXD(801,IEN(1),3,IEN,4)) Q
"RTN","PXRMORCH",111,0)
 W !,"Deleting order check output text"
"RTN","PXRMORCH",112,0)
 S DA(2)=IEN(1),DA(1)=IEN
"RTN","PXRMORCH",113,0)
 S DIK="^PXD(801,"_DA(2)_",3,"_DA(1)_",4,"
"RTN","PXRMORCH",114,0)
 S DA=0 F  S DA=$O(^PXD(801,DA(2),3,DA(1),4,DA)) Q:DA'>0  S TEMP(DA)=""
"RTN","PXRMORCH",115,0)
 S DA=0 F  S DA=$O(TEMP(DA)) Q:DA'>0  D ^DIK
"RTN","PXRMORCH",116,0)
 S ^PXD(801,IEN(1),3,IEN,5)=0
"RTN","PXRMORCH",117,0)
 Q
"RTN","PXRMORCH",118,0)
 ;
"RTN","PXRMORCH",119,0)
DISABLE(GIEN,RIEN,CNT,TXTIN) ;
"RTN","PXRMORCH",120,0)
 ;this is used to inactive an incomplete rule
"RTN","PXRMORCH",121,0)
 N DA,DIE,DR,LC,NOUT,TEXTOUT
"RTN","PXRMORCH",122,0)
 S CNT=CNT+1,TXTIN(CNT)="\\\\Reminder Order Check Rule made inactive. Please correct the above errors"
"RTN","PXRMORCH",123,0)
 D FORMAT^PXRMTEXT(1,75,CNT,.TXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMORCH",124,0)
 F LC=1:1:NOUT W !,TEXTOUT(LC)
"RTN","PXRMORCH",125,0)
 W !!
"RTN","PXRMORCH",126,0)
 S DA(1)=GIEN,DA=RIEN,DIE="^PXD(801,"_DA(1)_",3,",DR="2///NO"
"RTN","PXRMORCH",127,0)
 D ^DIE
"RTN","PXRMORCH",128,0)
 Q
"RTN","PXRMORCH",129,0)
 ;
"RTN","PXRMORCH",130,0)
EDIT(DA) ;
"RTN","PXRMORCH",131,0)
 ;PXRMNOIG is used in the template to control editing of fields for
"RTN","PXRMORCH",132,0)
 ;National Orderable Item Groups
"RTN","PXRMORCH",133,0)
 N CS1,CS2,DIDEL,DIE,DINUSE,DR,PXRMNOIG
"RTN","PXRMORCH",134,0)
 I DA>0 S CS1=$$FILE^PXRMEXCS(801,DA)
"RTN","PXRMORCH",135,0)
 S DIDEL=801,DIE="^PXD(801,",DINUSE=0
"RTN","PXRMORCH",136,0)
 S DR="[PXRM EDIT ORDER CHECK]"
"RTN","PXRMORCH",137,0)
 D ^DIE
"RTN","PXRMORCH",138,0)
 I +$G(DA)'>0 Q
"RTN","PXRMORCH",139,0)
 S CS2=$$FILE^PXRMEXCS(801,DA) Q:CS2=CS1  Q:+CS2=0
"RTN","PXRMORCH",140,0)
 S DIC="^PXD(801,"
"RTN","PXRMORCH",141,0)
 D SEHIST^PXRMUTIL(801,DIC,DA)
"RTN","PXRMORCH",142,0)
 D CHECK(.DA)
"RTN","PXRMORCH",143,0)
 Q
"RTN","PXRMORCH",144,0)
 ;
"RTN","PXRMORCH",145,0)
EN(INPUT) ;
"RTN","PXRMORCH",146,0)
EN1 ;
"RTN","PXRMORCH",147,0)
 ;inital editor and inquiry entry point. This controls which
"RTN","PXRMORCH",148,0)
 ;way to select an order check group to edit, inquiry, or to add a new
"RTN","PXRMORCH",149,0)
 ;one. Input="E" editing/adding an entry Input="I" doing an inquiry
"RTN","PXRMORCH",150,0)
 N CNT,DIR,HTEXT,TAG
"RTN","PXRMORCH",151,0)
 S CNT=0
"RTN","PXRMORCH",152,0)
 S CNT=CNT+1,HTEXT(CNT)="\\Select 'N' to select an orderable item group by a group name."
"RTN","PXRMORCH",153,0)
 S CNT=CNT+1,HTEXT(CNT)="\\Select 'D' to select an orderable item group by Drug Class"
"RTN","PXRMORCH",154,0)
 S CNT=CNT+1,HTEXT(CNT)="\\Select 'O' to select an orderable item group by an Orderable Item"
"RTN","PXRMORCH",155,0)
 S CNT=CNT+1,HTEXT(CNT)="\\Select 'R' to select an orderable item group by a Reminder Definition."
"RTN","PXRMORCH",156,0)
 S CNT=CNT+1,HTEXT(CNT)="\\Select 'T' to select an orderable item group by a Reminder Term."
"RTN","PXRMORCH",157,0)
 S CNT=CNT+1,HTEXT(CNT)="\\Select Q to Quit"
"RTN","PXRMORCH",158,0)
 S DIR(0)="SB^"
"RTN","PXRMORCH",159,0)
 ;
"RTN","PXRMORCH",160,0)
 S DIR("A")="Select Reminder Orderable Item Group by"
"RTN","PXRMORCH",161,0)
 S DIR("A",1)="     N:  ORDERABLE ITEM GROUP NAME"
"RTN","PXRMORCH",162,0)
 S DIR("A",2)="     D:  DRUG CLASS"
"RTN","PXRMORCH",163,0)
 S DIR("A",3)="     O:  ORDERABLE ITEM"
"RTN","PXRMORCH",164,0)
 S DIR("A",4)="     R:  REMINDER DEFINITION"
"RTN","PXRMORCH",165,0)
 S DIR("A",5)="     T:  REMINDER TERM"
"RTN","PXRMORCH",166,0)
 S DIR("A",6)="     Q:  QUIT"
"RTN","PXRMORCH",167,0)
 S DIR("A",7)=" "
"RTN","PXRMORCH",168,0)
 S DIR(0)=DIR(0)_"N:ORDERABLE ITEM GROUP NAME;D:DRUG CLASS;O:ORDERABLE ITEM;R:REMINDER DEFINITION;T:REMINDER TERM;Q:QUIT"
"RTN","PXRMORCH",169,0)
 ;
"RTN","PXRMORCH",170,0)
 S DIR("B")="N"
"RTN","PXRMORCH",171,0)
 S DIR("?")="Select one of the above option or '^' to quit. Enter ?? for detail help."
"RTN","PXRMORCH",172,0)
 S DIR("??")=U_"D HELP^PXRMEUT(.HTEXT)"
"RTN","PXRMORCH",173,0)
 W !,"Select Reminder Orderable Item Group by one of the following:",!!
"RTN","PXRMORCH",174,0)
 D ^DIR
"RTN","PXRMORCH",175,0)
 I Y="Q" Q
"RTN","PXRMORCH",176,0)
 I Y[U Q
"RTN","PXRMORCH",177,0)
 D FIND(Y,INPUT)
"RTN","PXRMORCH",178,0)
 G EN1
"RTN","PXRMORCH",179,0)
 Q
"RTN","PXRMORCH",180,0)
 ;
"RTN","PXRMORCH",181,0)
FIND(TYPE,INPUT) ;
"RTN","PXRMORCH",182,0)
FIND1 ;
"RTN","PXRMORCH",183,0)
 ;general file look-up
"RTN","PXRMORCH",184,0)
 N DIC,IEN,ROOT,SCREEN,Y
"RTN","PXRMORCH",185,0)
 I TYPE="N" D ADD(INPUT) Q
"RTN","PXRMORCH",186,0)
 I TYPE="D" S ROOT="^PS(50.605,"
"RTN","PXRMORCH",187,0)
 I TYPE="O" S ROOT="^ORD(101.43,"
"RTN","PXRMORCH",188,0)
 I TYPE="T" S ROOT="^PXRMD(811.5,"
"RTN","PXRMORCH",189,0)
 I TYPE="R" S ROOT="^PXD(811.9,"
"RTN","PXRMORCH",190,0)
 S DIC=ROOT
"RTN","PXRMORCH",191,0)
 S DIC(0)="AEMOQ"
"RTN","PXRMORCH",192,0)
 D ^DIC
"RTN","PXRMORCH",193,0)
 I ($D(DTOUT))!($D(DUOUT))!(Y=-1) Q
"RTN","PXRMORCH",194,0)
 I TYPE="N",+Y>0 D EDIT(+Y) Q
"RTN","PXRMORCH",195,0)
 ;TYPE matches the xref on file 801.
"RTN","PXRMORCH",196,0)
 D SELECT(TYPE,INPUT,+Y)
"RTN","PXRMORCH",197,0)
 K Y G FIND1
"RTN","PXRMORCH",198,0)
 Q
"RTN","PXRMORCH",199,0)
 ;
"RTN","PXRMORCH",200,0)
GETOCTXT(DFN,IEN,RULEIEN,OI,SEV,PNAME,CNT) ;
"RTN","PXRMORCH",201,0)
 ;this get the order check text out of file 801. It also format and
"RTN","PXRMORCH",202,0)
 ;expand any TIU Objects and stores the results in the temp global
"RTN","PXRMORCH",203,0)
 N LC,NIN,NLINES,NOUT,PXRMRM,TEXT,TEXTIN,TEXTOUT
"RTN","PXRMORCH",204,0)
 ;
"RTN","PXRMORCH",205,0)
 S NIN=$G(^PXD(801,IEN,3,RULEIEN,5))
"RTN","PXRMORCH",206,0)
 I +NIN=0 Q
"RTN","PXRMORCH",207,0)
 S NLINES=0,PXRMRM=80
"RTN","PXRMORCH",208,0)
 ;
"RTN","PXRMORCH",209,0)
 ;if text contains a TIU Object call the Found/Not Found Text expansion
"RTN","PXRMORCH",210,0)
 I NIN["T" D
"RTN","PXRMORCH",211,0)
 .F LC=1:1:+NIN S TEXTIN(LC)=$G(^PXD(801,IEN,3,RULEIEN,4,LC,0))
"RTN","PXRMORCH",212,0)
 .D FNFTXTO^PXRMFNFT(1,+NIN,.TEXTIN,DFN,"",.NLINES,.TEXT)
"RTN","PXRMORCH",213,0)
 ;
"RTN","PXRMORCH",214,0)
 ;if it does not contain the TIU Object call the normal format code
"RTN","PXRMORCH",215,0)
 I NIN'["T" D
"RTN","PXRMORCH",216,0)
 .F LC=1:1:NIN S TEXTIN(LC)=$G(^PXD(801,IEN,3,RULEIEN,4,LC,0))
"RTN","PXRMORCH",217,0)
 .D FORMAT^PXRMTEXT(1,PXRMRM,NIN,.TEXTIN,.NLINES,.TEXT)
"RTN","PXRMORCH",218,0)
 ;
"RTN","PXRMORCH",219,0)
 ;put the output in the TMP global
"RTN","PXRMORCH",220,0)
 F LC=1:1:NLINES S CNT=CNT+1,^TMP($J,OI,SEV,PNAME,CNT)=TEXT(LC)
"RTN","PXRMORCH",221,0)
 Q
"RTN","PXRMORCH",222,0)
 ;
"RTN","PXRMORCH",223,0)
HASDEF(DA) ;
"RTN","PXRMORCH",224,0)
 I $P($G(^PXD(801,DA(1),3,DA,3)),U)>0 Q 1
"RTN","PXRMORCH",225,0)
 Q 0
"RTN","PXRMORCH",226,0)
 ;
"RTN","PXRMORCH",227,0)
HELP(TYPE) ;
"RTN","PXRMORCH",228,0)
 N LC,NIN,NLINES,NOUT,TEXT,TEXTIN,TEXTOUT
"RTN","PXRMORCH",229,0)
 I TYPE=1 D
"RTN","PXRMORCH",230,0)
 .S TEXTIN(1)="Select 'Yes' to add all orderable items by a specific drug class."
"RTN","PXRMORCH",231,0)
 .S TEXTIN(2)="After the orderable items are added the user will be able to do additional edits to the orderable item list."
"RTN","PXRMORCH",232,0)
 .S TEXTIN(3)="\\Select 'No' if not adding medication orderable items,or not adding all orderable items for a drug class."
"RTN","PXRMORCH",233,0)
 .S NIN=3
"RTN","PXRMORCH",234,0)
 I '$D(TEXTIN) Q
"RTN","PXRMORCH",235,0)
 D FORMAT^PXRMTEXT(1,75,NIN,.TEXTIN,.NLINES,.TEXT)
"RTN","PXRMORCH",236,0)
 ;write out the output
"RTN","PXRMORCH",237,0)
 F LC=1:1:NLINES D
"RTN","PXRMORCH",238,0)
 .S CNT=CNT+1 W !,TEXT(LC)
"RTN","PXRMORCH",239,0)
 Q
"RTN","PXRMORCH",240,0)
 ;
"RTN","PXRMORCH",241,0)
NAT(DA) ;
"RTN","PXRMORCH",242,0)
 ;used by the input template to control editing of fields
"RTN","PXRMORCH",243,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q 1
"RTN","PXRMORCH",244,0)
 I $G(PXRMINST)=1 Q 0
"RTN","PXRMORCH",245,0)
 I $P($G(^PXD(801,DA,100)),U)="N" Q 1
"RTN","PXRMORCH",246,0)
 Q 0
"RTN","PXRMORCH",247,0)
 ;
"RTN","PXRMORCH",248,0)
ORDERCHK(DFN,OI,TEST,TESTER) ;
"RTN","PXRMORCH",249,0)
 ;main order check API
"RTN","PXRMORCH",250,0)
 ;Input
"RTN","PXRMORCH",251,0)
 ;  OI=IEN of Orderable Item from file 101.43
"RTN","PXRMORCH",252,0)
 ;  DFN=Patient DFN
"RTN","PXRMORCH",253,0)
 ;  TEST=Value that matches the Testing Flag either 1 or 0
"RTN","PXRMORCH",254,0)
 ;
"RTN","PXRMORCH",255,0)
 ;Output
"RTN","PXRMORCH",256,0)
 ;  ^TMP($J,OI,SEV,DISPLAY NAME,n)=TEXT
"RTN","PXRMORCH",257,0)
 ;  SEV=is the value assigned to the severity field
"RTN","PXRMORCH",258,0)
 ;  DISPLAY NAME=is the value assigned to the Display Field Name
"RTN","PXRMORCH",259,0)
 ;
"RTN","PXRMORCH",260,0)
 K ^TMP($J,OI)
"RTN","PXRMORCH",261,0)
 N CNT,IEN,IENOI,IENR,NODE,NUM,OIREM,PNAME,RIEN,RNAME
"RTN","PXRMORCH",262,0)
 N RULEIEN,REMEVLST,RSTAT,SEV,TEXTTYPE,TIEN,TNAME,TSTAT
"RTN","PXRMORCH",263,0)
 ;
"RTN","PXRMORCH",264,0)
 ;loop through AOIR xref to find the group IEN and the corresponding
"RTN","PXRMORCH",265,0)
 ;Rules assigned to the orderable item
"RTN","PXRMORCH",266,0)
 ;
"RTN","PXRMORCH",267,0)
 S IEN=0 F  S IEN=$O(^PXD(801,"AOIR",OI,TEST,IEN)) Q:IEN'>0  D
"RTN","PXRMORCH",268,0)
 .S RULEIEN=0
"RTN","PXRMORCH",269,0)
 .F  S RULEIEN=$O(^PXD(801,"AOIR",OI,TEST,IEN,RULEIEN)) Q:RULEIEN'>0  D 
"RTN","PXRMORCH",270,0)
 ..;
"RTN","PXRMORCH",271,0)
 ..S NODE=$G(^PXD(801,IEN,3,RULEIEN,0))
"RTN","PXRMORCH",272,0)
 ..S PNAME=$P(NODE,U,2)
"RTN","PXRMORCH",273,0)
 ..S SEV=$P(NODE,U,5)
"RTN","PXRMORCH",274,0)
 ..S TIEN=$P($G(^PXD(801,IEN,3,RULEIEN,2)),U)
"RTN","PXRMORCH",275,0)
 ..;
"RTN","PXRMORCH",276,0)
 ..;Reminder Term defined used branching logic code
"RTN","PXRMORCH",277,0)
 ..I TIEN>0 D  Q
"RTN","PXRMORCH",278,0)
 ...S TSTAT=$$TERM^PXRMDLLB(TIEN,DFN,RULEIEN,"O")
"RTN","PXRMORCH",279,0)
 ...S CNT=0
"RTN","PXRMORCH",280,0)
 ...I TESTER=1 D
"RTN","PXRMORCH",281,0)
 ....S TNAME=$P(^PXRMD(811.5,TIEN,0),U)
"RTN","PXRMORCH",282,0)
 ....S CNT=CNT+1,^TMP($J,OI,SEV,PNAME,CNT)="INTERNAL: Reminder Term: "_TNAME_" Status: "_$S(TSTAT=1:"True",1:"False")
"RTN","PXRMORCH",283,0)
 ....S CNT=CNT+1,^TMP($J,OI,SEV,PNAME,CNT)=" "
"RTN","PXRMORCH",284,0)
 ...I TSTAT'=$P(^PXD(801,IEN,3,RULEIEN,2),U,2) Q
"RTN","PXRMORCH",285,0)
 ...;load order check text needs to be converted
"RTN","PXRMORCH",286,0)
 ...D GETOCTXT(DFN,IEN,RULEIEN,OI,SEV,PNAME,.CNT)
"RTN","PXRMORCH",287,0)
 ..;if not TERM do reminder evaluation
"RTN","PXRMORCH",288,0)
 ..S NODE=$G(^PXD(801,IEN,3,RULEIEN,3))
"RTN","PXRMORCH",289,0)
 ..S RIEN=$P(NODE,U),RSTAT=$P(NODE,U,2),TEXTTYPE=$P(NODE,U,3)
"RTN","PXRMORCH",290,0)
 ..S NODE=$G(^PXD(811.9,RIEN,0))
"RTN","PXRMORCH",291,0)
 ..;
"RTN","PXRMORCH",292,0)
 ..S RNAME=$S($P(NODE,U,3)'="":$P(NODE,U,3),1:$P(NODE,U))
"RTN","PXRMORCH",293,0)
 ..D REMEVAL(DFN,OI,RIEN,PNAME,IEN,RULEIEN,RNAME,TEXTTYPE,RSTAT,SEV,TESTER)
"RTN","PXRMORCH",294,0)
 Q
"RTN","PXRMORCH",295,0)
 ;
"RTN","PXRMORCH",296,0)
 ;
"RTN","PXRMORCH",297,0)
REMEVAL(DFN,OI,RIEN,PNAME,IEN,RULEIEN,RNAME,TEXTTYE,RSTAT,SEV,TESTER) ;
"RTN","PXRMORCH",298,0)
 ;used by ORDECHK this does the reminder evaluation and put the
"RTN","PXRMORCH",299,0)
 ;reminder text in the temp global
"RTN","PXRMORCH",300,0)
 K ^TMP("PXRHM",$J),^TMP("PXRMORTMP",$J)
"RTN","PXRMORCH",301,0)
 N CNT,NUM,STATUS
"RTN","PXRMORCH",302,0)
 S CNT=0
"RTN","PXRMORCH",303,0)
 ;
"RTN","PXRMORCH",304,0)
 ;standard reminder evaluation results, final output like the
"RTN","PXRMORCH",305,0)
 ;HS COMPONENT REMINDER FINDINGS
"RTN","PXRMORCH",306,0)
 ;
"RTN","PXRMORCH",307,0)
 D MAIN^PXRM(DFN,RIEN,55,1)
"RTN","PXRMORCH",308,0)
 S STATUS=$P($G(^TMP("PXRHM",$J,RIEN,RNAME)),U)
"RTN","PXRMORCH",309,0)
 I TESTER=1 D
"RTN","PXRMORCH",310,0)
 .S CNT=CNT+1,^TMP($J,OI,SEV,PNAME,CNT)="INTERNAL: Reminder Definition: "_RNAME_" Status: "_STATUS
"RTN","PXRMORCH",311,0)
 .S CNT=CNT+1,^TMP($J,OI,SEV,PNAME,CNT)=" "
"RTN","PXRMORCH",312,0)
 ;if not valid status quit
"RTN","PXRMORCH",313,0)
 I (STATUS="CNBD")!(STATUS="ERROR") Q
"RTN","PXRMORCH",314,0)
 ;if Reminder Status does not match status field quit.
"RTN","PXRMORCH",315,0)
 I $$STATMTCH(STATUS,RSTAT)=0 Q
"RTN","PXRMORCH",316,0)
 ;save off the evaluation temp global into another global. This
"RTN","PXRMORCH",317,0)
 ;prevent a problem with TIU Objects for reminder evaluation
"RTN","PXRMORCH",318,0)
 M ^TMP("PXRMORTMP",$J)=^TMP("PXRHM",$J)
"RTN","PXRMORCH",319,0)
 ;
"RTN","PXRMORCH",320,0)
 S NUM=0
"RTN","PXRMORCH",321,0)
 ;load order check text if requested
"RTN","PXRMORCH",322,0)
 I TEXTTYPE="O"!(TEXTTYPE="B") D GETOCTXT(DFN,IEN,RULEIEN,OI,SEV,PNAME,.CNT)
"RTN","PXRMORCH",323,0)
 I TEXTTYPE="O" Q
"RTN","PXRMORCH",324,0)
 ;
"RTN","PXRMORCH",325,0)
 I TEXTTYPE="B" S CNT=CNT+1,^TMP($J,OI,SEV,PNAME,CNT)=""
"RTN","PXRMORCH",326,0)
 ;build reminder text if requested
"RTN","PXRMORCH",327,0)
 F  S NUM=$O(^TMP("PXRMORTMP",$J,RIEN,RNAME,"TXT",NUM)) Q:NUM'>0  D
"RTN","PXRMORCH",328,0)
 .S CNT=CNT+1
"RTN","PXRMORCH",329,0)
 .S ^TMP($J,OI,SEV,PNAME,CNT)=$G(^TMP("PXRMORTMP",$J,RIEN,RNAME,"TXT",NUM))
"RTN","PXRMORCH",330,0)
 K ^TMP("PXRHM",$J),^TMP("PXRMORTMP",$J)
"RTN","PXRMORCH",331,0)
 Q
"RTN","PXRMORCH",332,0)
 ;
"RTN","PXRMORCH",333,0)
RNXHELP ;Executable help for RULE NAME.
"RTN","PXRMORCH",334,0)
 N TEXT
"RTN","PXRMORCH",335,0)
 S TEXT(1)="Select an existing rule assigned to the orderable item group to edit the rule."
"RTN","PXRMORCH",336,0)
 S TEXT(2)="Or enter a new rule name to add a rule the orderable item group."
"RTN","PXRMORCH",337,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMORCH",338,0)
 Q
"RTN","PXRMORCH",339,0)
 ;
"RTN","PXRMORCH",340,0)
RULEINQ ;
"RTN","PXRMORCH",341,0)
 ;this entry point is used to build the RULE multiple output for the
"RTN","PXRMORCH",342,0)
 ;INQUIRY option
"RTN","PXRMORCH",343,0)
 ;
"RTN","PXRMORCH",344,0)
 N DIEW,DIWF,DIWL,PAD,RJC,NODE,X
"RTN","PXRMORCH",345,0)
 K ^TMP($J,"W")
"RTN","PXRMORCH",346,0)
 D WPFORMAT(D0,D1,1)
"RTN","PXRMORCH",347,0)
 D WPFORMAT(D0,D1,4)
"RTN","PXRMORCH",348,0)
 S RJC=20,PAD=" "
"RTN","PXRMORCH",349,0)
 S DIWF="C80",DIWL=2
"RTN","PXRMORCH",350,0)
 S NODE=$G(^PXD(801,D0,3,D1,0))
"RTN","PXRMORCH",351,0)
 S X=$$RJ^XLFSTR("Rule Name:",RJC,PAD)
"RTN","PXRMORCH",352,0)
 S X=X_" "_$P(NODE,U)
"RTN","PXRMORCH",353,0)
 D ^DIWP
"RTN","PXRMORCH",354,0)
 S X=$$RJ^XLFSTR("Display Name:",RJC,PAD)
"RTN","PXRMORCH",355,0)
 S X=X_" "_$P(NODE,U,2)
"RTN","PXRMORCH",356,0)
 D ^DIWP
"RTN","PXRMORCH",357,0)
 S X=$$RJ^XLFSTR("Active Flag:",RJC,PAD)
"RTN","PXRMORCH",358,0)
 S X=X_" "_$S($P(NODE,U,3)=1:"Yes",1:"No")
"RTN","PXRMORCH",359,0)
 D ^DIWP
"RTN","PXRMORCH",360,0)
 S X=$$RJ^XLFSTR("Testing Flag:",RJC,PAD)
"RTN","PXRMORCH",361,0)
 S X=X_" "_$S($P(NODE,U,4)=1:"Yes",1:"No")
"RTN","PXRMORCH",362,0)
 D ^DIWP
"RTN","PXRMORCH",363,0)
 S X=$$RJ^XLFSTR("Severity:",RJC,PAD)
"RTN","PXRMORCH",364,0)
 S X=X_" "_$S($P(NODE,U,5)=1:"High",$P(NODE,U,5)=2:"Medium",1:"Low")
"RTN","PXRMORCH",365,0)
 D ^DIWP
"RTN","PXRMORCH",366,0)
 I $P($G(^PXD(801,D0,3,D1,2)),U)'="" D  Q
"RTN","PXRMORCH",367,0)
 .S X=" " D ^DIWP
"RTN","PXRMORCH",368,0)
 .S NODE=$G(^PXD(801,D0,3,D1,2))
"RTN","PXRMORCH",369,0)
 .S X=$$RJ^XLFSTR("Reminder Term:",RJC,PAD)
"RTN","PXRMORCH",370,0)
 .S X=X_" "_$P($G(^PXRMD(811.5,$P(NODE,U),0)),U)
"RTN","PXRMORCH",371,0)
 .D ^DIWP
"RTN","PXRMORCH",372,0)
 .S X=$$RJ^XLFSTR("Reminder Term Status:",RJC,PAD)
"RTN","PXRMORCH",373,0)
 .S X=X_" "_$S($P(NODE,U,2)=1:"TRUE",1:"FALSE")
"RTN","PXRMORCH",374,0)
 .D ^DIWP
"RTN","PXRMORCH",375,0)
 .D WPOUT(4,"Order Check Text",RJC,PAD)
"RTN","PXRMORCH",376,0)
 .D WPOUT(1,"Rule Description",RJC,PAD)
"RTN","PXRMORCH",377,0)
 S X=" " D ^DIWP
"RTN","PXRMORCH",378,0)
 S NODE=$G(^PXD(801,D0,3,D1,3)) I +$P(NODE,U)=0 G RULEINQX
"RTN","PXRMORCH",379,0)
 S X=$$RJ^XLFSTR("Reminder Definition:",RJC,PAD)
"RTN","PXRMORCH",380,0)
 S X=X_" "_$P($G(^PXD(811.9,$P(NODE,U),0)),U)
"RTN","PXRMORCH",381,0)
 D ^DIWP
"RTN","PXRMORCH",382,0)
 S X=$$RJ^XLFSTR("Definition Status:",RJC,PAD)
"RTN","PXRMORCH",383,0)
 S X=X_" "_$S($P(NODE,U,2)="D":"Due",$P(NODE,U,2)="A":"Applicable",1:"N/A")
"RTN","PXRMORCH",384,0)
 D ^DIWP
"RTN","PXRMORCH",385,0)
 S X=$$RJ^XLFSTR("Output Text:",RJC,PAD)
"RTN","PXRMORCH",386,0)
 S X=X_" "_$S($P(NODE,U,3)="O":"Order Check Text Only",$P(NODE,U,3)="D":"Definition Text Only",1:"Both Order Check and Definition Text")
"RTN","PXRMORCH",387,0)
 D ^DIWP
"RTN","PXRMORCH",388,0)
 D WPOUT(4,"Order Check Text",RJC,PAD)
"RTN","PXRMORCH",389,0)
 D WPOUT(1,"Rule Description",RJC,PAD)
"RTN","PXRMORCH",390,0)
RULEINQX ;
"RTN","PXRMORCH",391,0)
 K ^TMP($J,"W")
"RTN","PXRMORCH",392,0)
 Q
"RTN","PXRMORCH",393,0)
 ;
"RTN","PXRMORCH",394,0)
SELECT(REF,INPUT,ITEM) ;
"RTN","PXRMORCH",395,0)
 ;if requested to find an orderable item group by Orderable, Definition,
"RTN","PXRMORCH",396,0)
 ;term this line tag is used
"RTN","PXRMORCH",397,0)
 ;
"RTN","PXRMORCH",398,0)
 N ALPHA,CNT,DIROUT,DIRUT,DIR,DONE,MATCH,NAME
"RTN","PXRMORCH",399,0)
 ;build array by name of rules containing ITEM
"RTN","PXRMORCH",400,0)
 D BUILD(REF,INPUT,ITEM,.CNT,.ALPHA,.MATCH)
"RTN","PXRMORCH",401,0)
 ;
"RTN","PXRMORCH",402,0)
 I INPUT="I" Q
"RTN","PXRMORCH",403,0)
 I CNT=0 Q
"RTN","PXRMORCH",404,0)
 S DONE=0
"RTN","PXRMORCH",405,0)
 ;allow multiple edits of different orderable item groups
"RTN","PXRMORCH",406,0)
 F  Q:DONE  D
"RTN","PXRMORCH",407,0)
 .M DIR("A")=ALPHA
"RTN","PXRMORCH",408,0)
 .S DIR("A")="Select a reminder orderable item group"
"RTN","PXRMORCH",409,0)
 .S DIR(0)="NO^1:"_CNT
"RTN","PXRMORCH",410,0)
 .W !!,"Select a reminder order check group from the following list:"
"RTN","PXRMORCH",411,0)
 .D ^DIR
"RTN","PXRMORCH",412,0)
 .I (Y="")!(Y["^") S DONE=1 Q
"RTN","PXRMORCH",413,0)
 .I $D(DIROUT)!($D(DIRUT))!($D(DUOUT))!($D(DTOUT)) S DONE=1 Q
"RTN","PXRMORCH",414,0)
 .S IEN=$O(MATCH(Y,"")) I IEN=0 Q
"RTN","PXRMORCH",415,0)
 .D EDIT(IEN)
"RTN","PXRMORCH",416,0)
 .;rebuild build array by name of rules containing ITEM
"RTN","PXRMORCH",417,0)
 .D BUILD(REF,INPUT,ITEM,.CNT,.ALPHA,.MATCH)
"RTN","PXRMORCH",418,0)
 Q
"RTN","PXRMORCH",419,0)
 ;
"RTN","PXRMORCH",420,0)
SNOCTL(DA) ;
"RTN","PXRMORCH",421,0)
 ;set the number of lines in the order check text multiple
"RTN","PXRMORCH",422,0)
 N NUM,NOLC,PIPECNT
"RTN","PXRMORCH",423,0)
 S (NUM,NOLC,PIPECNT)=0
"RTN","PXRMORCH",424,0)
 F  S NUM=$O(^PXD(801,DA(1),3,DA,4,NUM)) Q:NUM'>0  D
"RTN","PXRMORCH",425,0)
 .S PIPECNT=PIPECNT+$L(^PXD(801,DA(1),3,DA,4,NUM,0),"|")-1
"RTN","PXRMORCH",426,0)
 .S NOLC=NOLC+1
"RTN","PXRMORCH",427,0)
 I (PIPECNT#2)=1 D TIUOBJW^PXRMFNFT("Order Check Text",PIPECNT)
"RTN","PXRMORCH",428,0)
 I PIPECNT>0 S NOLC=NOLC_"T"
"RTN","PXRMORCH",429,0)
 S ^PXD(801,DA(1),3,DA,5)=NOLC
"RTN","PXRMORCH",430,0)
 Q
"RTN","PXRMORCH",431,0)
 ;
"RTN","PXRMORCH",432,0)
STATMTCH(REMSTAT,RULESTAT) ;
"RTN","PXRMORCH",433,0)
 I RULESTAT="D",REMSTAT["DUE" Q 1
"RTN","PXRMORCH",434,0)
 I RULESTAT="A",REMSTAT'="N/A",REMSTAT'="NEVER" Q 1
"RTN","PXRMORCH",435,0)
 I RULESTAT="N",$E(REMSTAT,1)="N" Q 1
"RTN","PXRMORCH",436,0)
 Q 0
"RTN","PXRMORCH",437,0)
 ;
"RTN","PXRMORCH",438,0)
WPFORMAT(D0,D1,SUB) ;
"RTN","PXRMORCH",439,0)
 ;use for inquiry, build word-processing fields to be used later
"RTN","PXRMORCH",440,0)
 ;because of DIWP API
"RTN","PXRMORCH",441,0)
 ;
"RTN","PXRMORCH",442,0)
 N CNT,NLINES,NUM,TEXTIN,TEXTOUT,TITLE
"RTN","PXRMORCH",443,0)
 I '$D(^PXD(801,D0,3,D1,SUB)) Q
"RTN","PXRMORCH",444,0)
 S CNT=0,NUM=0
"RTN","PXRMORCH",445,0)
 F  S CNT=$O(^PXD(801,D0,3,D1,SUB,CNT)) Q:CNT'>0  D
"RTN","PXRMORCH",446,0)
 .S NUM=NUM+1,TEXTIN(NUM)=$G(^PXD(801,D0,3,D1,SUB,CNT,0))
"RTN","PXRMORCH",447,0)
 D FORMAT^PXRMTEXT(22,74,NUM,.TEXTIN,.NLINES,.TEXTOUT)
"RTN","PXRMORCH",448,0)
 S ^TMP($J,"W",SUB)=NLINES
"RTN","PXRMORCH",449,0)
 F CNT=1:1:NLINES D
"RTN","PXRMORCH",450,0)
 .S ^TMP($J,"W",SUB,CNT)=TEXTOUT(CNT)
"RTN","PXRMORCH",451,0)
 Q
"RTN","PXRMORCH",452,0)
 ;
"RTN","PXRMORCH",453,0)
WPOUT(SUB,TITLE,RJC,PAD) ;
"RTN","PXRMORCH",454,0)
 ;print out word processing field text used by INQUIRY
"RTN","PXRMORCH",455,0)
 I '$D(^TMP($J,"W",SUB)) Q
"RTN","PXRMORCH",456,0)
 N IND,PADS,X
"RTN","PXRMORCH",457,0)
 S PADS="          "
"RTN","PXRMORCH",458,0)
 S X=$$RJ^XLFSTR(TITLE_":",RJC,PAD)
"RTN","PXRMORCH",459,0)
 D ^DIWP
"RTN","PXRMORCH",460,0)
 F IND=1:1:^TMP($J,"W",SUB) D
"RTN","PXRMORCH",461,0)
 .S X=^TMP($J,"W",SUB,IND)
"RTN","PXRMORCH",462,0)
 .D ^DIWP
"RTN","PXRMORCH",463,0)
 Q
"RTN","PXRMORCH",464,0)
 ;
"RTN","PXRMORHL")
0^16^B9594664
"RTN","PXRMORHL",1,0)
PXRMORHL ; SLC/AGP - Reminder Order Checks HL7 updates;10/20/2009
"RTN","PXRMORHL",2,0)
 ;;2.0;CLINICAL REMINDERS;**16**;Feb 04, 2005;Build 119
"RTN","PXRMORHL",3,0)
 ;
"RTN","PXRMORHL",4,0)
 Q
"RTN","PXRMORHL",5,0)
ADDMSG(OI,ACT,NL) ;
"RTN","PXRMORHL",6,0)
 N ACTION,GIEN,OINAME
"RTN","PXRMORHL",7,0)
 I '$D(^PXD(801,"O",OI)),ACT'=1 Q
"RTN","PXRMORHL",8,0)
 S OINAME=$P($G(^ORD(101.43,OI,0)),U)
"RTN","PXRMORHL",9,0)
 S ACTION=$S(ACT=1:"added",ACT=2:"inactivated",ACT=3:"changed",ACT=4:"reactivated",1:"unknown")
"RTN","PXRMORHL",10,0)
 ;only build message for new OI and OI contains within a group
"RTN","PXRMORHL",11,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMORHL",12,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=OINAME_" was "_ACTION
"RTN","PXRMORHL",13,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  it is used in the following Orderable Item Groups"
"RTN","PXRMORHL",14,0)
 ;build OI message for each OI
"RTN","PXRMORHL",15,0)
 ;add specific OI group to the message
"RTN","PXRMORHL",16,0)
 I '$D(^PXD(801,"O",OI)) D  Q
"RTN","PXRMORHL",17,0)
 .S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="   None" Q
"RTN","PXRMORHL",18,0)
 S GIEN=0 F  S GIEN=$O(^PXD(801,"O",OI,GIEN)) Q:GIEN'>0  D
"RTN","PXRMORHL",19,0)
 .S NL=NL+1
"RTN","PXRMORHL",20,0)
 .S ^TMP("PXRMXMZ",$J,NL,0)="   "_$P($G(^PXD(801,GIEN,0)),U)
"RTN","PXRMORHL",21,0)
 Q
"RTN","PXRMORHL",22,0)
 ;
"RTN","PXRMORHL",23,0)
EN ;
"RTN","PXRMORHL",24,0)
 N ACT,CHANGED,NL,NODE,OIIEN,SUB,SUB1
"RTN","PXRMORHL",25,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMORHL",26,0)
 S NL=0
"RTN","PXRMORHL",27,0)
 ;check for new OI first
"RTN","PXRMORHL",28,0)
 I $D(^TMP($J,"NEW")) D
"RTN","PXRMORHL",29,0)
 .S OIIEN=0 F  S OIIEN=$O(^TMP($J,"NEW",OIIEN)) Q:OIIEN'>0  D ADDMSG(OIIEN,1,.NL)
"RTN","PXRMORHL",30,0)
 ;
"RTN","PXRMORHL",31,0)
 S OIIEN=0 F  S OIIEN=$O(^TMP($J,"BEFORE",OIIEN)) Q:OIIEN'>0  D
"RTN","PXRMORHL",32,0)
 .I '$D(^TMP($J,"AFTER",OIIEN)) Q
"RTN","PXRMORHL",33,0)
 .S CHANGED=0,SUB=""
"RTN","PXRMORHL",34,0)
 .;loop through each OI using the Before Global
"RTN","PXRMORHL",35,0)
 .F  S SUB=$O(^TMP($J,"BEFORE",OIIEN,SUB)) Q:SUB=""!(CHANGED>0)  D
"RTN","PXRMORHL",36,0)
 ..;do checks on multiples node
"RTN","PXRMORHL",37,0)
 ..I SUB=2!(SUB=8)!(SUB=9)!(SUB=10) D  Q
"RTN","PXRMORHL",38,0)
 ...;
"RTN","PXRMORHL",39,0)
 ...;check the zero node first
"RTN","PXRMORHL",40,0)
 ...S NODE=^TMP($J,"BEFORE",OIIEN,SUB,0)
"RTN","PXRMORHL",41,0)
 ...I NODE'=$G(^TMP($J,"AFTER",OIIEN,SUB,0)) S CHANGED=3 Q
"RTN","PXRMORHL",42,0)
 ...;
"RTN","PXRMORHL",43,0)
 ...;check word processing field
"RTN","PXRMORHL",44,0)
 ...I SUB=8 D  Q
"RTN","PXRMORHL",45,0)
 ....S SUB1=0
"RTN","PXRMORHL",46,0)
 ....F  S SUB1=$O(^TMP($J,"BEFORE",OIIEN,SUB,SUB1)) Q:SUB1'>0!(CHANGED>0)  D
"RTN","PXRMORHL",47,0)
 .....S NODE=^TMP($J,"AFTER",OIIEN,8,SUB1,0)
"RTN","PXRMORHL",48,0)
 .....I NODE'=$G(^TMP($J,"AFTER",OIIEN,8,SUB1,0)) S CHANGED=3 Q
"RTN","PXRMORHL",49,0)
 ...;
"RTN","PXRMORHL",50,0)
 ...;for other nodes check the "B" xref
"RTN","PXRMORHL",51,0)
 ...S SUB1=""
"RTN","PXRMORHL",52,0)
 ...F  S SUB1=$O(^TMP($J,"BEFORE",OIIEN,SUB,"B",SUB1)) Q:SUB1=""!(CHANGED>0)  D
"RTN","PXRMORHL",53,0)
 ....I '$D(^TMP($J,"AFTER",OIIEN,SUB,"B",SUB1)) S CHANGED=3
"RTN","PXRMORHL",54,0)
 ..;
"RTN","PXRMORHL",55,0)
 ..;check non-multiple
"RTN","PXRMORHL",56,0)
 ..S NODE=^TMP($J,"BEFORE",OIIEN,SUB)
"RTN","PXRMORHL",57,0)
 ..I NODE'=^TMP($J,"AFTER",OIIEN,SUB) D
"RTN","PXRMORHL",58,0)
 ...I SUB=.1 D  Q
"RTN","PXRMORHL",59,0)
 ....I NODE="" S CHANGED=2 Q
"RTN","PXRMORHL",60,0)
 ....S CHANGED=4
"RTN","PXRMORHL",61,0)
 ...S CHANGED=3
"RTN","PXRMORHL",62,0)
 .;
"RTN","PXRMORHL",63,0)
 .I CHANGED>0 D ADDMSG(OIIEN,CHANGED,.NL)
"RTN","PXRMORHL",64,0)
 I $D(^TMP("PXRMXMZ",$J)) D SEND^PXRMMSG("PXRMXMZ","Orderable Item Updates")
"RTN","PXRMORHL",65,0)
 K ^TMP("PXRMXMZ",$J),^TMP($J,"BEFORE"),^TMP($J,"AFTER"),^TMP($J,"NEW")
"RTN","PXRMORHL",66,0)
 Q
"RTN","PXRMORHL",67,0)
 ;
"RTN","PXRMORHL",68,0)
OIUPDATE(MSG) ;
"RTN","PXRMORHL",69,0)
 K ^TMP($J,"AFTER"),^TMP($J,"BEFORE"),^TMP($J,"NEW")
"RTN","PXRMORHL",70,0)
 M ^TMP($J,"AFTER")=^TMP($J,"OR OI AFTER")
"RTN","PXRMORHL",71,0)
 M ^TMP($J,"BEFORE")=^TMP($J,"OR OI BEFORE")
"RTN","PXRMORHL",72,0)
 I $D(^TMP($J,"OR OI NEW")) M ^TMP($J,"NEW")=^TMP($J,"OR OI NEW")
"RTN","PXRMORHL",73,0)
 D EN
"RTN","PXRMORHL",74,0)
 Q
"RTN","PXRMORHL",75,0)
 ;
"RTN","PXRMORXR")
0^2^B75991552
"RTN","PXRMORXR",1,0)
PXRMORXR ; SLC/AGP - Reminder Order Checks XREF;04/16/2010
"RTN","PXRMORXR",2,0)
 ;;2.0;CLINICAL REMINDERS;**16**;Feb 04, 2005;Build 119
"RTN","PXRMORXR",3,0)
 ;
"RTN","PXRMORXR",4,0)
 Q
"RTN","PXRMORXR",5,0)
 ;
"RTN","PXRMORXR",6,0)
 ;for the rules X(1)=RULE NAME, X(2)=ACTIVE FLAG, X(3)=TESTING FLAG
"RTN","PXRMORXR",7,0)
 ;
"RTN","PXRMORXR",8,0)
 ;FORMAT OF XREF ^PXD(801,"AOIR",OI,TEST,GIEN,RULEIEN)=""
"RTN","PXRMORXR",9,0)
 ;
"RTN","PXRMORXR",10,0)
AOIRCHK ;
"RTN","PXRMORXR",11,0)
 N ACTIVE,CNT,GIEN,GNAME,OI,OINAME,OUTPUT,RIEN,RNAME,TEST,TEXTIN
"RTN","PXRMORXR",12,0)
 ;start from AOIR xref
"RTN","PXRMORXR",13,0)
 S CNT=0,OI=0
"RTN","PXRMORXR",14,0)
 F  S OI=$O(^PXD(801,"AOIR",OI)) Q:OI'>0  D
"RTN","PXRMORXR",15,0)
 .S OINAME=$P(^ORD(101.43,OI,0),U)
"RTN","PXRMORXR",16,0)
 .I '$D(^PXD(801,"O",OI)) D  Q
"RTN","PXRMORXR",17,0)
 ..K TEXTIN
"RTN","PXRMORXR",18,0)
 ..S TEXTIN(1)="Orderable item : "_OINAME_" does not exist in the Reminder Orderable Item Group file."
"RTN","PXRMORXR",19,0)
 ..D BUILDMSG(1,.TEXTIN,.CNT,.OUTPUT)
"RTN","PXRMORXR",20,0)
 .S TEST=0 F  S TEST=$O(^PXD(801,"AOIR",OI,TEST)) Q:TEST'>0  D
"RTN","PXRMORXR",21,0)
 ..S GIEN=0 F  S GIEN=$O(^PXD(801,"AOIR",OI,TEST,GIEN)) Q:GIEN'>0  D
"RTN","PXRMORXR",22,0)
 ...S RIEN=0
"RTN","PXRMORXR",23,0)
 ...F  S RIEN=$O(^PXD(801,"AOIR",OI,TEST,GIEN,RIEN)) Q:RIEN'>0  D
"RTN","PXRMORXR",24,0)
 ....D CHKFXR(OI,OINAME,TEST,GIEN,RIEN,.CNT,.OUTPUT)
"RTN","PXRMORXR",25,0)
 ;
"RTN","PXRMORXR",26,0)
 ;check from file structure
"RTN","PXRMORXR",27,0)
 S GIEN=0 F  S GIEN=$O(^PXD(801,GIEN)) Q:GIEN'>0  D
"RTN","PXRMORXR",28,0)
 .S GNAME=$P(^PXD(801,GIEN,0),U)
"RTN","PXRMORXR",29,0)
 .;loop OI multiple for each OI
"RTN","PXRMORXR",30,0)
 .S OI=0 F  S OI=$O(^PXD(801,GIEN,2,"B",OI)) Q:OI'>0  D
"RTN","PXRMORXR",31,0)
 ..S OINAME=$P(^ORD(101.43,OI,0),U)
"RTN","PXRMORXR",32,0)
 ..;
"RTN","PXRMORXR",33,0)
 ..;for each OI check to see if corresponding Rule is in the xref
"RTN","PXRMORXR",34,0)
 ..S RIEN=0 F  S RIEN=$O(^PXD(801,GIEN,3,RIEN)) Q:RIEN'>0  D
"RTN","PXRMORXR",35,0)
 ...S NODE=$G(^PXD(801,GIEN,3,RIEN,0))
"RTN","PXRMORXR",36,0)
 ...S RNAME=$P(NODE,U),ACTIVE=$P(NODE,U,3),TEST=$P(NODE,U,4)
"RTN","PXRMORXR",37,0)
 ...;
"RTN","PXRMORXR",38,0)
 ...;only active entries should be in the xref
"RTN","PXRMORXR",39,0)
 ...I ACTIVE=1 D  Q
"RTN","PXRMORXR",40,0)
 ....I $D(^PXD(801,"AOIR",OI,TEST,GIEN,RIEN)) Q
"RTN","PXRMORXR",41,0)
 ....K TEXTIN
"RTN","PXRMORXR",42,0)
 ....S TEXTIN(1)="Rule "_RNAME_" with an active status and a testing "
"RTN","PXRMORXR",43,0)
 ....S TEXTIN(2)="flag of "_TEST_" assigned to Reminder Orderable Item Group "_GNAME
"RTN","PXRMORXR",44,0)
 ....S TEXTIN(3)=" does not exist in the AOIR xref for Orderable Item "_OINAME
"RTN","PXRMORXR",45,0)
 ....D BUILDMSG(3,.TEXTIN,.CNT,.OUTPUT)
"RTN","PXRMORXR",46,0)
 ...;
"RTN","PXRMORXR",47,0)
 ...;inactive entries should not be in the xref
"RTN","PXRMORXR",48,0)
 ...I $D(^PXD(801,"AOIR",OI,TEST,GIEN,RIEN)) Q
"RTN","PXRMORXR",49,0)
 ...K TEXTIN
"RTN","PXRMORXR",50,0)
 ...S TEXTIN(1)="Rule "_RNAME_" with an inactive status and a testing "
"RTN","PXRMORXR",51,0)
 ...S TEXTIN(2)="flag of "_TEST_" assigned to Reminder Orderable Item Group "_GNAME
"RTN","PXRMORXR",52,0)
 ...S TEXTIN(3)=" exist in the AOIR xref for Orderable Item "_OINAME
"RTN","PXRMORXR",53,0)
 ...D BUILDMSG(3,.TEXTIN,.CNT,.OUTPUT)
"RTN","PXRMORXR",54,0)
 ;
"RTN","PXRMORXR",55,0)
 ;write out the output
"RTN","PXRMORXR",56,0)
 I '$D(OUTPUT) W !,"No errors found" Q
"RTN","PXRMORXR",57,0)
 S CNT=0 F  S CNT=$O(OUTPUT(CNT)) Q:CNT'>0  W !,OUTPUT(CNT)
"RTN","PXRMORXR",58,0)
 Q
"RTN","PXRMORXR",59,0)
 ;
"RTN","PXRMORXR",60,0)
BLDDCOI(DA,SEL,LIST) ;
"RTN","PXRMORXR",61,0)
 ;builds a list of OI associate with drug class NOT being deleted from
"RTN","PXRMORXR",62,0)
 ;the order check group
"RTN","PXRMORXR",63,0)
 N DRCLIEN,DRUGIEN,POIIEN,OIIEN
"RTN","PXRMORXR",64,0)
 S DRCLIEN=""
"RTN","PXRMORXR",65,0)
 F  S DRCLIEN=$O(^PXD(801,DA(1),1.5,"B",DRCLIEN)) Q:DRCLIEN=""  D
"RTN","PXRMORXR",66,0)
 .I DRCLIEN=SEL Q
"RTN","PXRMORXR",67,0)
 .K ^TMP($J,"VAC")
"RTN","PXRMORXR",68,0)
 .D IX^PSSCLINR("VAC",DRCLIEN)
"RTN","PXRMORXR",69,0)
 .I '$D(^TMP($J,"VAC")) Q
"RTN","PXRMORXR",70,0)
 .S DRUGIEN=0
"RTN","PXRMORXR",71,0)
 .F  S DRUGIEN=$O(^TMP($J,"VAC",DRCLIEN,DRUGIEN)) Q:DRUGIEN'>0  D
"RTN","PXRMORXR",72,0)
 ..; DBIA 5187
"RTN","PXRMORXR",73,0)
 ..S POIIEN=$$ITEM^PSSCLINR(DRUGIEN) I POIIEN'>0 Q
"RTN","PXRMORXR",74,0)
 ..S OIIEN=$O(^ORD(101.43,"ID",POIIEN_";99PSP","")) Q:OIIEN'>0
"RTN","PXRMORXR",75,0)
 ..S ^TMP($J,"DRCL LIST",OIIEN)=DRCLIEN
"RTN","PXRMORXR",76,0)
 Q
"RTN","PXRMORXR",77,0)
 ;
"RTN","PXRMORXR",78,0)
BUILDMSG(NIN,TEXTIN,CNT,MESS) ;
"RTN","PXRMORXR",79,0)
 N LINE,NOUT,TEXTOUT
"RTN","PXRMORXR",80,0)
 D FORMAT^PXRMTEXT(1,75,NIN,.TEXTIN,.NOUT,.TEXTOUT)
"RTN","PXRMORXR",81,0)
 S CNT=CNT+1,MESS(CNT)=""
"RTN","PXRMORXR",82,0)
 F LINE=1:1:NOUT S CNT=CNT+1,MESS(CNT)=TEXTOUT(LINE)
"RTN","PXRMORXR",83,0)
 Q
"RTN","PXRMORXR",84,0)
 ;
"RTN","PXRMORXR",85,0)
CHKFXR(OI,OINAME,TEST,GIEN,RIEN,CNT,OUTPUT) ;
"RTN","PXRMORXR",86,0)
 N GNAME,NODE,RNAME,TEXTIN
"RTN","PXRMORXR",87,0)
 I '$D(^PXD(801,GIEN)) D  Q
"RTN","PXRMORXR",88,0)
 .K TEXTIN
"RTN","PXRMORXR",89,0)
 .S TEXTIN(1)="Reminder Orderable Item Group IEN "_GIEN_" does not exist in the file."  Q
"RTN","PXRMORXR",90,0)
 .D BUILDMSG(1,.TEXTIN,.CNT,.OUTPUT)
"RTN","PXRMORXR",91,0)
 S GNAME=$P(^PXD(801,GIEN,0),U)
"RTN","PXRMORXR",92,0)
 I '$D(^PXD(801,GIEN,2,"B",OI)) D  Q
"RTN","PXRMORXR",93,0)
 .K TEXTIN
"RTN","PXRMORXR",94,0)
 .S TEXTIN(1)="Orderable Item: "_OINAME_" does not exist in the Reminder Orderable Item File entry "_GNAME_"."
"RTN","PXRMORXR",95,0)
 .D BUILDMSG(1,.TEXTIN,.CNT,.OUTPUT)
"RTN","PXRMORXR",96,0)
 I '$D(^PXD(801,GIEN,3,RIEN)) D  Q
"RTN","PXRMORXR",97,0)
 .K TEXTIN
"RTN","PXRMORXR",98,0)
 .S TEXTIN(1)="Rule Ien: "_RIEN_" does not exist in the Reminder Orderable Item File entry "_GNAME_"."
"RTN","PXRMORXR",99,0)
 .D BUILDMSG(1,.TEXTIN,.CNT,.OUTPUT)
"RTN","PXRMORXR",100,0)
 S NODE=$G(^PXD(801,GIEN,3,RIEN,0))
"RTN","PXRMORXR",101,0)
 S RNAME=$P(NODE,U)
"RTN","PXRMORXR",102,0)
 I $P(NODE,U,3)=0 D  Q
"RTN","PXRMORXR",103,0)
 .K TEXTIN
"RTN","PXRMORXR",104,0)
 .S TEXTIN(1)="Rule "_RNAME_" assigned to Reminder Orderable Item File entry "_GNAME_" is marked as inactive."
"RTN","PXRMORXR",105,0)
 .D BUILDMSG(1,.TEXTIN,.CNT,.OUTPUT)
"RTN","PXRMORXR",106,0)
 I TEST'=$P(NODE,U,4) D  Q
"RTN","PXRMORXR",107,0)
 .K TEXTIN
"RTN","PXRMORXR",108,0)
 .S TEXTIN(1)="Rule "_RNAME_" assigned to Reminder Orderable Item File entry "_GNAME_" status does not match."
"RTN","PXRMORXR",109,0)
 .D BUILDMSG(1,.TEXTIN,.CNT,.OUTPUT)
"RTN","PXRMORXR",110,0)
 Q
"RTN","PXRMORXR",111,0)
 ;
"RTN","PXRMORXR",112,0)
CNDSRULE(DA,OLD,NEW) ;
"RTN","PXRMORXR",113,0)
 I OLD(1)="",NEW(1)'="" Q 1
"RTN","PXRMORXR",114,0)
 I OLD(2)'=NEW(2) Q 1
"RTN","PXRMORXR",115,0)
 I OLD(3)'=NEW(3) Q 1
"RTN","PXRMORXR",116,0)
 Q 0
"RTN","PXRMORXR",117,0)
 ;
"RTN","PXRMORXR",118,0)
CNDKRULE(DA,OLD,NEW) ;
"RTN","PXRMORXR",119,0)
 I NEW(1)'="",NEW(1)="" Q 1
"RTN","PXRMORXR",120,0)
 I OLD(2)'=NEW(2) Q 1
"RTN","PXRMORXR",121,0)
 I OLD(3)'=NEW(3) Q 1
"RTN","PXRMORXR",122,0)
 Q
"RTN","PXRMORXR",123,0)
 ;
"RTN","PXRMORXR",124,0)
DELDRCL(IENS,OLD) ;
"RTN","PXRMORXR",125,0)
 ;This subroutine allows users to add delete orderable item that are
"RTN","PXRMORXR",126,0)
 ;assigned to a drug class
"RTN","PXRMORXR",127,0)
 I IENS(1)="" Q
"RTN","PXRMORXR",128,0)
 I $G(PXRMDALL)=1 Q
"RTN","PXRMORXR",129,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMORXR",130,0)
 I $G(OLD)="" Q
"RTN","PXRMORXR",131,0)
 N DA,DRCLNAME,DRGIEN,DRUGIEN,DIK,OIIEN,OINAME,POIIEN,TEXT,Y
"RTN","PXRMORXR",132,0)
 K ^TMP($J,"DRCL LIST")
"RTN","PXRMORXR",133,0)
 S DA(1)=IENS(1)
"RTN","PXRMORXR",134,0)
 S DIK="^PXD(801,"_DA(1)_",2,"
"RTN","PXRMORXR",135,0)
 S DRGIEN=OLD
"RTN","PXRMORXR",136,0)
 I DRGIEN'>0 Q
"RTN","PXRMORXR",137,0)
 ;Build list of OI belonging to other Drug Classes
"RTN","PXRMORXR",138,0)
 D BLDDCOI(.DA,DRGIEN,"DRCL LIST") ;
"RTN","PXRMORXR",139,0)
 ; DBIA 5187
"RTN","PXRMORXR",140,0)
 K ^TMP($J,"VAC")
"RTN","PXRMORXR",141,0)
 D IX^PSSCLINR("VAC",DRGIEN)
"RTN","PXRMORXR",142,0)
 I '$D(^TMP($J,"VAC")) Q
"RTN","PXRMORXR",143,0)
 S DRUGIEN=0
"RTN","PXRMORXR",144,0)
 F  S DRUGIEN=$O(^TMP($J,"VAC",DRGIEN,DRUGIEN)) Q:DRUGIEN'>0  D
"RTN","PXRMORXR",145,0)
 .; DBIA 5187
"RTN","PXRMORXR",146,0)
 .S POIIEN=$$ITEM^PSSCLINR(DRUGIEN) I POIIEN'>0 Q
"RTN","PXRMORXR",147,0)
 .S OIIEN=$O(^ORD(101.43,"ID",POIIEN_";99PSP","")) Q:OIIEN'>0
"RTN","PXRMORXR",148,0)
 .I $D(^TMP($J,"DRCL LIST",OIIEN)) D  Q
"RTN","PXRMORXR",149,0)
 ..S OINAME=$P($G(^ORD(101.43,OIIEN,0)),U)
"RTN","PXRMORXR",150,0)
 ..S DRCLNAME="DRCLNAME"
"RTN","PXRMORXR",151,0)
 ..S TEXT(1)="Cannot delete orderable item: "_OINAME_" it is assigned to another drug class "_DRCLNAME_"in this group."
"RTN","PXRMORXR",152,0)
 ..D EN^DDIOL(.TEXT)
"RTN","PXRMORXR",153,0)
 .S DA=$O(^PXD(801,DA(1),2,"B",OIIEN,"")) I DA="" Q
"RTN","PXRMORXR",154,0)
 .D ^DIK
"RTN","PXRMORXR",155,0)
 .S TEXT(1)="Removing Orderable Item: "_$P($G(^ORD(101.43,OIIEN,0)),U)
"RTN","PXRMORXR",156,0)
 .D EN^DDIOL(.TEXT)
"RTN","PXRMORXR",157,0)
 K ^TMP($J,"VAC"),^TMP($J,"DRCL LIST")
"RTN","PXRMORXR",158,0)
 Q
"RTN","PXRMORXR",159,0)
 ;
"RTN","PXRMORXR",160,0)
EXCHINST(NAME) ;
"RTN","PXRMORXR",161,0)
 ;this calls the ADC xref to add OI associated with a drug class
"RTN","PXRMORXR",162,0)
 ;when installing an order check group from exchange
"RTN","PXRMORXR",163,0)
 N CNT,DRCLIEN,IEN
"RTN","PXRMORXR",164,0)
 S IEN(1)=$O(^PXD(801,"B",NAME,"")) Q:IEN(1)'>0
"RTN","PXRMORXR",165,0)
 S CNT=0
"RTN","PXRMORXR",166,0)
 I '$D(^PXD(801,IEN(1),1.5)) Q
"RTN","PXRMORXR",167,0)
 F  S CNT=$O(^PXD(801,IEN(1),1.5,CNT)) Q:CNT'>0  D
"RTN","PXRMORXR",168,0)
 .S DRCLIEN=$P($G(^PXD(801,IEN(1),1.5,CNT,0)),U) I +DRCLIEN=0 Q
"RTN","PXRMORXR",169,0)
 .D IMPDRCL(.IEN,DRCLIEN)
"RTN","PXRMORXR",170,0)
 Q
"RTN","PXRMORXR",171,0)
 ;
"RTN","PXRMORXR",172,0)
IMPDRCL(IENS,NEW) ;
"RTN","PXRMORXR",173,0)
 ;This subroutine automatically add all orderable item that are
"RTN","PXRMORXR",174,0)
 ;assigned to a drug class
"RTN","PXRMORXR",175,0)
 I $G(DIUTIL)="VERIFY FIELDS" Q
"RTN","PXRMORXR",176,0)
 I $G(NEW)="" Q
"RTN","PXRMORXR",177,0)
 I $G(PXRMEXCH)=1 Q
"RTN","PXRMORXR",178,0)
 N DRGIEN,DRUGIEN,FDA,MSG,OIIEN,POIIEN,TEXT,Y
"RTN","PXRMORXR",179,0)
 S DRGIEN=NEW
"RTN","PXRMORXR",180,0)
 ; DBIA 5187
"RTN","PXRMORXR",181,0)
 K ^TMP($J,"VAC")
"RTN","PXRMORXR",182,0)
 D IX^PSSCLINR("VAC",DRGIEN)
"RTN","PXRMORXR",183,0)
 I '$D(^TMP($J,"VAC")) Q
"RTN","PXRMORXR",184,0)
 S DRUGIEN=0
"RTN","PXRMORXR",185,0)
 F  S DRUGIEN=$O(^TMP($J,"VAC",DRGIEN,DRUGIEN)) Q:DRUGIEN'>0  D
"RTN","PXRMORXR",186,0)
 .; DBIA 5187
"RTN","PXRMORXR",187,0)
 .S POIIEN=$$ITEM^PSSCLINR(DRUGIEN) I POIIEN'>0 Q
"RTN","PXRMORXR",188,0)
 .S OIIEN=$O(^ORD(101.43,"ID",POIIEN_";99PSP","")) Q:OIIEN'>0
"RTN","PXRMORXR",189,0)
 .I $G(^ORD(101.43,OIIEN,.1))'="" Q
"RTN","PXRMORXR",190,0)
 .S TEXT(1)="Adding Orderable Item: "_$P($G(^ORD(101.43,OIIEN,0)),U)
"RTN","PXRMORXR",191,0)
 .I $D(^PXD(801,IENS(1),2,"B",OIIEN)) D
"RTN","PXRMORXR",192,0)
 ..S TEXT(1)="Orderable Item: "_$P($G(^ORD(101.43,OIIEN,0)),U)_" already added."
"RTN","PXRMORXR",193,0)
 .D EN^DDIOL(.TEXT)
"RTN","PXRMORXR",194,0)
 .;
"RTN","PXRMORXR",195,0)
 .S FDA(801.02,"?+1,"_IENS(1)_",",.01)=OIIEN
"RTN","PXRMORXR",196,0)
 .D UPDATE^DIE("","FDA","","MSG") I $D(MSG) D AWRITE^PXRMUTIL("MSG") H 2
"RTN","PXRMORXR",197,0)
 .K FDA
"RTN","PXRMORXR",198,0)
 K ^TMP($J,"VAC")
"RTN","PXRMORXR",199,0)
 Q
"RTN","PXRMORXR",200,0)
 ;
"RTN","PXRMORXR",201,0)
OIKAOI(DA,OLD) ;
"RTN","PXRMORXR",202,0)
 N NODE,RIEN
"RTN","PXRMORXR",203,0)
 ;I '$D(^PXD(801,DA(1),3)) Q
"RTN","PXRMORXR",204,0)
 S RIEN=0 F  S RIEN=$O(^PXD(801,DA(1),3,RIEN)) Q:RIEN'>0  D
"RTN","PXRMORXR",205,0)
 .S NODE=$G(^PXD(801,DA(1),3,RIEN,0)) I $P(NODE,U,3)=0 Q
"RTN","PXRMORXR",206,0)
 .I $D(^PXD(801,"AOIR",OLD,$P(NODE,U,4),DA(1),RIEN)) K ^PXD(801,"AOIR",OLD,$P(NODE,U,4),DA(1),RIEN)
"RTN","PXRMORXR",207,0)
 Q
"RTN","PXRMORXR",208,0)
 ;
"RTN","PXRMORXR",209,0)
OISAOI(DA,NEW) ;
"RTN","PXRMORXR",210,0)
 N NODE,RIEN
"RTN","PXRMORXR",211,0)
 ;I '$D(^PXD(801,DA(1),3)) Q
"RTN","PXRMORXR",212,0)
 S RIEN=0 F  S RIEN=$O(^PXD(801,DA(1),3,RIEN)) Q:RIEN'>0  D
"RTN","PXRMORXR",213,0)
 .S NODE=$G(^PXD(801,DA(1),3,RIEN,0)) I $P(NODE,U,3)=0 Q
"RTN","PXRMORXR",214,0)
 .S ^PXD(801,"AOIR",NEW,$P(NODE,U,4),DA(1),RIEN)=""
"RTN","PXRMORXR",215,0)
 Q
"RTN","PXRMORXR",216,0)
 ;
"RTN","PXRMORXR",217,0)
RULEKAOI(DA,OLD) ;
"RTN","PXRMORXR",218,0)
 ;I OLD(1)=""!(OLD(2)="")!(OLD(3)="") Q
"RTN","PXRMORXR",219,0)
 N OI
"RTN","PXRMORXR",220,0)
 S OI=0 F  S OI=$O(^PXD(801,DA(1),2,"B",OI)) Q:OI'>0  D
"RTN","PXRMORXR",221,0)
 .I $D(^PXD(801,"AOIR",OI,OLD(3),DA(1),DA)) K ^PXD(801,"AOIR",OI,OLD(3),DA(1),DA)
"RTN","PXRMORXR",222,0)
 Q
"RTN","PXRMORXR",223,0)
 ;
"RTN","PXRMORXR",224,0)
RULESAOI(DA,NEW) ;
"RTN","PXRMORXR",225,0)
 N OI
"RTN","PXRMORXR",226,0)
 ;I +NEW(2)=0 Q
"RTN","PXRMORXR",227,0)
 ;I $G(NEW(3))="" Q
"RTN","PXRMORXR",228,0)
 N OI
"RTN","PXRMORXR",229,0)
 S OI=0 F  S OI=$O(^PXD(801,DA(1),2,"B",OI)) Q:OI'>0  D
"RTN","PXRMORXR",230,0)
 .S ^PXD(801,"AOIR",OI,NEW(3),DA(1),DA)=""
"RTN","PXRMORXR",231,0)
 Q
"RTN","PXRMORXR",232,0)
 ;
"RTN","PXRMORXR",233,0)
TESTER ;
"RTN","PXRMORXR",234,0)
 N CNT,DFN,DIC,DIROUT,DIRUT,DTOUT,DUOUT,NAME,OI,ONAME,SEV,TEST
"RTN","PXRMORXR",235,0)
 S DIC=2,DIC("A")="Select Patient: ",DIC(0)="AEQMZ" D ^DIC
"RTN","PXRMORXR",236,0)
 I $D(DIROUT)!($D(DIRUT)) Q
"RTN","PXRMORXR",237,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMORXR",238,0)
 S DFN=+$P(Y,U)
"RTN","PXRMORXR",239,0)
 S DIC=101.43,DIC("A")="Select Orderable Item: ",DIC(0)="AEQMZ" D ^DIC
"RTN","PXRMORXR",240,0)
 I $D(DIROUT)!($D(DIRUT)) Q
"RTN","PXRMORXR",241,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMORXR",242,0)
 S OI=+$P(Y,U)
"RTN","PXRMORXR",243,0)
 W !!
"RTN","PXRMORXR",244,0)
 F TEST=0:1:1 D
"RTN","PXRMORXR",245,0)
 .D ORDERCHK^PXRMORCH(DFN,OI,TEST,1)
"RTN","PXRMORXR",246,0)
 .I '$D(^TMP($J,OI)) W !,"No "_$S(TEST=0:"Production Rules",1:"Testing Rules")_" found." Q
"RTN","PXRMORXR",247,0)
 .W !,$S(TEST=0:"Production Rules:",1:"Testing Rules:")
"RTN","PXRMORXR",248,0)
 .F SEV=3,2,1 D
"RTN","PXRMORXR",249,0)
 ..I '$D(^TMP($J,OI,SEV)) W !,"No rules with a severity of "_$S(SEV=1:"High",SEV=2:"Medium",1:"Low")_" found." Q
"RTN","PXRMORXR",250,0)
 ..W !,$S(SEV=1:"High",SEV=2:"Medium",1:"Low")_" Severity Results:"
"RTN","PXRMORXR",251,0)
 ..S ONAME="",NAME=""
"RTN","PXRMORXR",252,0)
 ..F  S NAME=$O(^TMP($J,OI,SEV,NAME)) Q:NAME=""  D
"RTN","PXRMORXR",253,0)
 ...I NAME'=ONAME S ONAME=NAME W !!,NAME
"RTN","PXRMORXR",254,0)
 ...S CNT=0 F  S CNT=$O(^TMP($J,OI,SEV,NAME,CNT)) Q:CNT'>0  D
"RTN","PXRMORXR",255,0)
 ....W !,^TMP($J,OI,SEV,NAME,CNT)
"RTN","PXRMORXR",256,0)
 Q
"RTN","PXRMORXR",257,0)
 ;
"RTN","PXRMP16I")
0^25^B422881
"RTN","PXRMP16I",1,0)
PXRMP16I ; SLC/AGP - Inits for PXRM*2.0*16. ;12/06/2010
"RTN","PXRMP16I",2,0)
 ;;2.0;CLINICAL REMINDERS;**16**;Feb 04, 2005;Build 119
"RTN","PXRMP16I",3,0)
 Q
"RTN","PXRMP16I",4,0)
 ;
"RTN","PXRMP16I",5,0)
PRE ;
"RTN","PXRMP16I",6,0)
 I +$$PATCH^XPDUTL("PXRM*2.0*16")=0 Q
"RTN","PXRMP16I",7,0)
 ;cleanup for test sites only
"RTN","PXRMP16I",8,0)
 N DIU,TEXT
"RTN","PXRMP16I",9,0)
 D EN^DDIOL("Removing old data dictionaries.")
"RTN","PXRMP16I",10,0)
 S DIU(0)=""
"RTN","PXRMP16I",11,0)
 S DIU=801
"RTN","PXRMP16I",12,0)
 S TEXT=" Deleting data dictionary for file # "_DIU
"RTN","PXRMP16I",13,0)
 D EN^DDIOL(TEXT)
"RTN","PXRMP16I",14,0)
 D EN^DIU2
"RTN","PXRMP16I",15,0)
 Q
"RTN","PXRMPSN")
0^22^B28129650
"RTN","PXRMPSN",1,0)
PXRMPSN ; SLC/PKR - Process PSN protocol events. ;03/25/2010
"RTN","PXRMPSN",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,17,16**;Feb 04, 2005;Build 119
"RTN","PXRMPSN",3,0)
 ;==============================
"RTN","PXRMPSN",4,0)
DEF(FILENUM,GBL,FIEN,NL) ;Write out the list of definintions using this
"RTN","PXRMPSN",5,0)
 ;finding.
"RTN","PXRMPSN",6,0)
 N DEF,FI,IEN,START
"RTN","PXRMPSN",7,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",8,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="in the following reminder definitions:"
"RTN","PXRMPSN",9,0)
 I '$D(^TMP($J,"FDATA",FILENUM,FIEN,"DEF")) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  None" Q
"RTN","PXRMPSN",10,0)
 S (IEN,START)=0
"RTN","PXRMPSN",11,0)
 F  S IEN=$O(^TMP($J,"FDATA",FILENUM,FIEN,"DEF",IEN)) Q:IEN=""  D
"RTN","PXRMPSN",12,0)
 . S DEF=$P(^PXD(811.9,IEN,0),U,1)
"RTN","PXRMPSN",13,0)
 . I START>0 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",14,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" "_DEF_" (IEN="_IEN_")"
"RTN","PXRMPSN",15,0)
 . S FI="",START=1
"RTN","PXRMPSN",16,0)
 . F  S FI=$O(^TMP($J,"FDATA",FILENUM,FIEN,"DEF",IEN,FI)) Q:FI=""  D
"RTN","PXRMPSN",17,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="   Finding number "_FI
"RTN","PXRMPSN",18,0)
 Q
"RTN","PXRMPSN",19,0)
 ;
"RTN","PXRMPSN",20,0)
 ;==============================
"RTN","PXRMPSN",21,0)
EVDRVR ;Event driver for PSN events.
"RTN","PXRMPSN",22,0)
 ;STRUCTURE OF MESSAGE
"RTN","PXRMPSN",23,0)
 ;^TMP("PSN",$J,VA PRODUCT IEN,0)=VA PRODUCT IEN^OLD DRUG CLASS IEN^
"RTN","PXRMPSN",24,0)
 ;NEW DRUG CLASS IEN^VA GENERIC IEN^VA GENERIC NAME
"RTN","PXRMPSN",25,0)
 N DEFL,FILENUM,FILES,GBL,NEWDCIEN,NEWDCNAM,NL,OLDDCIEN,OLDDCNAM
"RTN","PXRMPSN",26,0)
 N SUBJECT,TEMP,VAGIEN,VAGNAM,VAPROD,VAPRODIEN
"RTN","PXRMPSN",27,0)
 S ZTREQ="@"
"RTN","PXRMPSN",28,0)
 K ^TMP($J,"FDATA"),^TMP("PXRMXMZ",$J)
"RTN","PXRMPSN",29,0)
 S NL=1,^TMP("PXRMXMZ",$J,NL,0)="NDF Drug Class update"
"RTN","PXRMPSN",30,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" Review each of the entries to determine if you need to:"
"RTN","PXRMPSN",31,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  * Add the new drug class to the reminder definition/term"
"RTN","PXRMPSN",32,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  * Change the finding to use the new drug class instead"
"RTN","PXRMPSN",33,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  * In some cases, no change will be clinically necessary"
"RTN","PXRMPSN",34,0)
 ;
"RTN","PXRMPSN",35,0)
 S VAPRODIEN=0
"RTN","PXRMPSN",36,0)
 F  S VAPRODIEN=$O(^XTMP(EVENT,VAPRODIEN)) Q:VAPRODIEN=""  D
"RTN","PXRMPSN",37,0)
 . S TEMP=^XTMP(EVENT,VAPRODIEN,0)
"RTN","PXRMPSN",38,0)
 . S OLDDCIEN=$P(TEMP,U,2)
"RTN","PXRMPSN",39,0)
 . S NEWDCIEN=$P(TEMP,U,3)
"RTN","PXRMPSN",40,0)
 . S VAGIEN=$P(TEMP,U,4)
"RTN","PXRMPSN",41,0)
 . S VAGNAM=$P(TEMP,U,5)
"RTN","PXRMPSN",42,0)
 .;DBIA #2574
"RTN","PXRMPSN",43,0)
 . S VAPROD=$$PROD0^PSNAPIS(VAPRODIEN,VAPRODIEN)
"RTN","PXRMPSN",44,0)
 . S OLDDCNAM=$$CLASS2^PSNAPIS(OLDDCIEN)
"RTN","PXRMPSN",45,0)
 . S NEWDCNAM=$$CLASS2^PSNAPIS(NEWDCIEN)
"RTN","PXRMPSN",46,0)
 . S OLDDCNAM=$$STRREP^PXRMUTIL(OLDDCNAM,"^",", ")
"RTN","PXRMPSN",47,0)
 . S NEWDCNAM=$$STRREP^PXRMUTIL(NEWDCNAM,"^",", ")
"RTN","PXRMPSN",48,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",49,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="-------------------------------------------------------"
"RTN","PXRMPSN",50,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="VA PRODUCT: "_$P(VAPROD,U,1)_" (IEN="_VAPRODIEN_")"
"RTN","PXRMPSN",51,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" Has moved from drug class "_OLDDCNAM_", (IEN="_OLDDCIEN_")"
"RTN","PXRMPSN",52,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=" to drug class "_NEWDCNAM_", (IEN="_NEWDCIEN_")"
"RTN","PXRMPSN",53,0)
 .;Process the lists, and generate a MailMan message.
"RTN","PXRMPSN",54,0)
 . K ^TMP($J,"FDATA")
"RTN","PXRMPSN",55,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",56,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="VA GENERIC "_VAGNAM_" (IEN="_VAGIEN_") is represented by its"
"RTN","PXRMPSN",57,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="original drug class "_OLDDCNAM
"RTN","PXRMPSN",58,0)
 . D DEFLIST^PXRMFRPT(50.605,"PS(50.605,",OLDDCIEN,"FDATA")
"RTN","PXRMPSN",59,0)
 . D DEF(50.605,"PS(50.605,",OLDDCIEN,.NL)
"RTN","PXRMPSN",60,0)
 . D TERMLIST^PXRMFRPT(50.605,"PS(50.605,",OLDDCIEN,"FDATA")
"RTN","PXRMPSN",61,0)
 . D TERM(50.605,"PS(50.605,",OLDDCIEN,.NL)
"RTN","PXRMPSN",62,0)
 . D ROC(50.605,"PS(60.605,",OLDDCIEN,.NL)
"RTN","PXRMPSN",63,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",64,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="VA GENERIC "_VAGNAM_" is used directly"
"RTN","PXRMPSN",65,0)
 . D DEFLIST^PXRMFRPT(50.6,"PSNDF(50.6,",VAGIEN,"FDATA")
"RTN","PXRMPSN",66,0)
 . D DEF(50.6,"PSNDF(50.6,",VAGIEN,.NL)
"RTN","PXRMPSN",67,0)
 . D TERMLIST^PXRMFRPT(50.6,"PSNDF(50.6,",VAGIEN,"FDATA")
"RTN","PXRMPSN",68,0)
 . D TERM(50.6,"PSNDF(50.6,",VAGIEN,.NL)
"RTN","PXRMPSN",69,0)
 S SUBJECT="Clinical Reminder Drug Class Update from National Drug File"
"RTN","PXRMPSN",70,0)
 D SEND^PXRMMSG("PXRMXMZ",SUBJECT)
"RTN","PXRMPSN",71,0)
 K ^TMP($J,"FDATA"),^TMP("PXRMXMZ",$J),^XTMP(EVENT)
"RTN","PXRMPSN",72,0)
 Q
"RTN","PXRMPSN",73,0)
 ;
"RTN","PXRMPSN",74,0)
 ;==============================
"RTN","PXRMPSN",75,0)
PSNEVENT ;Handle PSN events. This routine is attached to the PSN NEW CLASS
"RTN","PXRMPSN",76,0)
 ;protocol through the PXRM PSN EVENT protocol.
"RTN","PXRMPSN",77,0)
 N EVENT,SUBJECT
"RTN","PXRMPSN",78,0)
 S EVENT="PXRM PSN EVENT"_$$NOW^XLFDT
"RTN","PXRMPSN",79,0)
 K ^XTMP(EVENT)
"RTN","PXRMPSN",80,0)
 ;STRUCTURE OF MESSAGE
"RTN","PXRMPSN",81,0)
 ;^TMP($J,VA PRODUCT IEN,0)=VA PRODUCT IEN^OLD DRUG CLASS IEN^
"RTN","PXRMPSN",82,0)
 ;NEW DRUG CLASS IEN^VA GENERIC IEN^VA GENERIC NAME
"RTN","PXRMPSN",83,0)
 S ^XTMP(EVENT,0)=$$FMADD^XLFDT(DT,3)_U_DT
"RTN","PXRMPSN",84,0)
 M ^XTMP(EVENT)=^TMP("PSN",$J)
"RTN","PXRMPSN",85,0)
 S SUBJECT="Clinical Reminders PSN protocol event"
"RTN","PXRMPSN",86,0)
 ;Task off the work and return to the protocol.
"RTN","PXRMPSN",87,0)
 K ZTSAVE
"RTN","PXRMPSN",88,0)
 S ZTSAVE("EVENT")=""
"RTN","PXRMPSN",89,0)
 S ZTSAVE("SUBJECT")=""
"RTN","PXRMPSN",90,0)
 S ZTRTN="EVDRVR^PXRMPSN"
"RTN","PXRMPSN",91,0)
 S ZTDESC="Clinical Reminders PSN event handler"
"RTN","PXRMPSN",92,0)
 S ZTDTH=$H
"RTN","PXRMPSN",93,0)
 S ZTIO=""
"RTN","PXRMPSN",94,0)
 D ^%ZTLOAD
"RTN","PXRMPSN",95,0)
 Q
"RTN","PXRMPSN",96,0)
 ;
"RTN","PXRMPSN",97,0)
 ;==============================
"RTN","PXRMPSN",98,0)
ROC(FILENUM,GBL,FIEN,NL) ;Search all reminder order checks for any that are
"RTN","PXRMPSN",99,0)
 ;using this finding, defined by the global (GBL) and the IEN (FIEN)
"RTN","PXRMPSN",100,0)
 ;should only be called for Drug Class
"RTN","PXRMPSN",101,0)
 N IEN,NAME,START
"RTN","PXRMPSN",102,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",103,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="and the following reminder order check groups:"
"RTN","PXRMPSN",104,0)
 I '$D(^PXD(801,"D",FIEN)) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  None" Q
"RTN","PXRMPSN",105,0)
 S (IEN,START)=0
"RTN","PXRMPSN",106,0)
 F  S IEN=$O(^PXD(801,"D",FIEN,IEN)) Q:IEN'>0  D
"RTN","PXRMPSN",107,0)
 . S NAME=$P($G(^PXD(801,IEN,0)),U) I NAME="" Q
"RTN","PXRMPSN",108,0)
 . I START>0 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",109,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  "_NAME_" (IEN="_IEN_")"
"RTN","PXRMPSN",110,0)
 . S START=1
"RTN","PXRMPSN",111,0)
 Q
"RTN","PXRMPSN",112,0)
 ;
"RTN","PXRMPSN",113,0)
 ;==============================
"RTN","PXRMPSN",114,0)
TERM(FILENUM,GBL,FIEN,NL) ;Search all reminder terms for any
"RTN","PXRMPSN",115,0)
 ;that are using this finding, defined by the global (GBL) and the
"RTN","PXRMPSN",116,0)
 ;IEN (FIEN).
"RTN","PXRMPSN",117,0)
 N FI,IEN,START,TERM
"RTN","PXRMPSN",118,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",119,0)
 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="and the following reminder terms:"
"RTN","PXRMPSN",120,0)
 I '$D(^TMP($J,"FDATA",FILENUM,FIEN,"TERM")) S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  None" Q
"RTN","PXRMPSN",121,0)
 S (IEN,START)=0
"RTN","PXRMPSN",122,0)
 F  S IEN=$O(^TMP($J,"FDATA",FILENUM,FIEN,"TERM",IEN)) Q:IEN=""  D
"RTN","PXRMPSN",123,0)
 . S TERM=$P(^PXRMD(811.5,IEN,0),U,1)
"RTN","PXRMPSN",124,0)
 . I START>0 S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)=""
"RTN","PXRMPSN",125,0)
 . S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="  "_TERM_" (IEN="_IEN_")"
"RTN","PXRMPSN",126,0)
 . S FI="",START=1
"RTN","PXRMPSN",127,0)
 . F  S FI=$O(^TMP($J,"FDATA",FILENUM,FIEN,"TERM",IEN,FI)) Q:FI=""  D
"RTN","PXRMPSN",128,0)
 .. S NL=NL+1,^TMP("PXRMXMZ",$J,NL,0)="   Finding number "_FI
"RTN","PXRMPSN",129,0)
 Q
"RTN","PXRMPSN",130,0)
 ;
"RTN","PXRMREV")
0^17^B12256539
"RTN","PXRMREV",1,0)
PXRMREV ; SLC/PJH,PKR - Review Date routines. ;02/01/2010
"RTN","PXRMREV",2,0)
 ;;2.0;CLINICAL REMINDERS;**4,16**;Feb 04, 2005;Build 119
"RTN","PXRMREV",3,0)
 ;
"RTN","PXRMREV",4,0)
 ;Select the review date
"RTN","PXRMREV",5,0)
 ;----------------------
"RTN","PXRMREV",6,0)
DATE() ;
"RTN","PXRMREV",7,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMREV",8,0)
 S DIR(0)="DA^"_DT_"::EFTX"
"RTN","PXRMREV",9,0)
 S DIR("A")="Enter Review Cutoff Date: "
"RTN","PXRMREV",10,0)
 S DIR("B")=$$FMTE^XLFDT($$DT^XLFDT,"D")
"RTN","PXRMREV",11,0)
 S DIR("?")="This must be today or a future date. For detailed help type ??"
"RTN","PXRMREV",12,0)
 S DIR("??")=U_"D HELP^PXRMREV(2)"
"RTN","PXRMREV",13,0)
 W !
"RTN","PXRMREV",14,0)
 D ^DIR
"RTN","PXRMREV",15,0)
 I $D(DIROUT)!$D(DIRUT) Q ""
"RTN","PXRMREV",16,0)
 I $D(DTOUT)!($D(DUOUT)) Q ""
"RTN","PXRMREV",17,0)
 Q Y
"RTN","PXRMREV",18,0)
 ;
"RTN","PXRMREV",19,0)
 ;Select file for review
"RTN","PXRMREV",20,0)
 ;----------------------
"RTN","PXRMREV",21,0)
FILE() N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PXRMREV",22,0)
 S DIR(0)="SO"_U_"C:Computed Finding;"
"RTN","PXRMREV",23,0)
 S DIR(0)=DIR(0)_"D:Reminder Dialog;"
"RTN","PXRMREV",24,0)
 S DIR(0)=DIR(0)_"L:Reminder Location List;"
"RTN","PXRMREV",25,0)
 S DIR(0)=DIR(0)_"O:Reminder Orderable Item Groups;"
"RTN","PXRMREV",26,0)
 S DIR(0)=DIR(0)_"R:Reminder Definition;"
"RTN","PXRMREV",27,0)
 S DIR(0)=DIR(0)_"S:Reminder Sponsor;"
"RTN","PXRMREV",28,0)
 S DIR(0)=DIR(0)_"T:Reminder Term;"
"RTN","PXRMREV",29,0)
 S DIR(0)=DIR(0)_"X:Reminder Taxonomy;"
"RTN","PXRMREV",30,0)
 S DIR("A")="Select File to Review"
"RTN","PXRMREV",31,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMREV",32,0)
 S DIR("??")=U_"D HELP^PXRMREV(1)"
"RTN","PXRMREV",33,0)
 D ^DIR
"RTN","PXRMREV",34,0)
 I $D(DIROUT)!$D(DIROUT) Q ""
"RTN","PXRMREV",35,0)
 I $D(DTOUT)!$D(DUOUT) Q ""
"RTN","PXRMREV",36,0)
 Q Y
"RTN","PXRMREV",37,0)
 ;
"RTN","PXRMREV",38,0)
 ;General help text routine
"RTN","PXRMREV",39,0)
 ;-------------------------
"RTN","PXRMREV",40,0)
HELP(CALL) ;
"RTN","PXRMREV",41,0)
 N DIWF,DIWL,DIWR,HTEXT,IC
"RTN","PXRMREV",42,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMREV",43,0)
 I CALL=1 D
"RTN","PXRMREV",44,0)
 .S HTEXT(1)="Select the file for which a Review Date report is required."
"RTN","PXRMREV",45,0)
 .S HTEXT(2)=" "
"RTN","PXRMREV",46,0)
 .S HTEXT(3)="The report lists in review date order all file entries which"
"RTN","PXRMREV",47,0)
 .S HTEXT(4)="have a review date prior to the cuttoff date."
"RTN","PXRMREV",48,0)
 I CALL=2 D
"RTN","PXRMREV",49,0)
 .S HTEXT(1)="Enter a future date or today. All review dates in the file"
"RTN","PXRMREV",50,0)
 .S HTEXT(2)="selected which are prior or equal to this date will be reported."
"RTN","PXRMREV",51,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREV",52,0)
 S IC=""
"RTN","PXRMREV",53,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMREV",54,0)
 . S X=HTEXT(IC)
"RTN","PXRMREV",55,0)
 . D ^DIWP
"RTN","PXRMREV",56,0)
 W !
"RTN","PXRMREV",57,0)
 S IC=0
"RTN","PXRMREV",58,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMREV",59,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMREV",60,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREV",61,0)
 W !
"RTN","PXRMREV",62,0)
 Q
"RTN","PXRMREV",63,0)
 ;
"RTN","PXRMREV",64,0)
 ;Print review date reports
"RTN","PXRMREV",65,0)
 ;-------------------------
"RTN","PXRMREV",66,0)
START N DATE,DIROUT,DONE,DTOUT,DUOUT,FTYPE
"RTN","PXRMREV",67,0)
 S DONE=0
"RTN","PXRMREV",68,0)
 F  Q:DONE  D
"RTN","PXRMREV",69,0)
 . S FTYPE=$$FILE
"RTN","PXRMREV",70,0)
 . I FTYPE="" S DONE=1 Q
"RTN","PXRMREV",71,0)
 . S DATE=$$DATE
"RTN","PXRMREV",72,0)
 . I DATE="" S DONE=1 Q
"RTN","PXRMREV",73,0)
 .;
"RTN","PXRMREV",74,0)
 . N BY,DHD,DIC,FLDS,FR,L,NOW,TO
"RTN","PXRMREV",75,0)
 . S FR="01/01/2000"
"RTN","PXRMREV",76,0)
 . S TO=DATE
"RTN","PXRMREV",77,0)
 . S BY="REVIEW DATE"
"RTN","PXRMREV",78,0)
 . S FLDS=".01,REVIEW DATE;C60"
"RTN","PXRMREV",79,0)
 . S L=0
"RTN","PXRMREV",80,0)
 .;
"RTN","PXRMREV",81,0)
 . I FTYPE="C" S DIC="^PXRMD(811.4,",DHD="CF'S TO REVIEW"
"RTN","PXRMREV",82,0)
 . I FTYPE="D" S DIC="^PXRMD(801.41,",DHD="DIALOGS TO REVIEW"
"RTN","PXRMREV",83,0)
 . I FTYPE="L" S DIC="^PXRMD(810.9,",DHD="LOCATION LISTS TO REVIEW"
"RTN","PXRMREV",84,0)
 . I FTYPE="R" S DIC="^PXD(811.9,",DHD="REMINDERS TO REVIEW"
"RTN","PXRMREV",85,0)
 . I FTYPE="S" S DIC="^PXRMD(811.6,",DHD="SPONSORS TO REVIEW"
"RTN","PXRMREV",86,0)
 . I FTYPE="X" S DIC="^PXD(811.2,",DHD="TAXONOMIES TO REVIEW"
"RTN","PXRMREV",87,0)
 . I FTYPE="O" S DIC="^PXD(801,",DHD="ORDERABLE ITEM GROUPS TO REVIEW"
"RTN","PXRMREV",88,0)
 . I FTYPE="T" S DIC="^PXRMD(811.5,",DHD="TERMS TO REVIEW"
"RTN","PXRMREV",89,0)
 .;
"RTN","PXRMREV",90,0)
 . S DHD=DHD_" (up to "_$$FMTE^XLFDT(DATE)_")"
"RTN","PXRMREV",91,0)
 .;Print
"RTN","PXRMREV",92,0)
 . D EN1^DIP
"RTN","PXRMREV",93,0)
 Q
"RTN","PXRMREV",94,0)
 ;
"RTN","PXRMRPCA")
0^12^B64569743
"RTN","PXRMRPCA",1,0)
PXRMRPCA ; SLC/PJH - Functions returning REMINDER data ;11/04/2009
"RTN","PXRMRPCA",2,0)
 ;;2.0;CLINICAL REMINDERS;**12,16**;Feb 04, 2005;Build 119
"RTN","PXRMRPCA",3,0)
 Q
"RTN","PXRMRPCA",4,0)
 ;
"RTN","PXRMRPCA",5,0)
ALL(ORY) ;All active reminders
"RTN","PXRMRPCA",6,0)
 ;print name^ien
"RTN","PXRMRPCA",7,0)
 N ARR,DATA,NAME,ORREM,OCNT,SUB,USAGE
"RTN","PXRMRPCA",8,0)
 S ORREM=0
"RTN","PXRMRPCA",9,0)
 F  S ORREM=$O(^PXD(811.9,ORREM)) Q:'ORREM  D
"RTN","PXRMRPCA",10,0)
 .;Include only CPRS reminders
"RTN","PXRMRPCA",11,0)
 .S USAGE=$P($G(^PXD(811.9,ORREM,100)),U,4)
"RTN","PXRMRPCA",12,0)
 .I USAGE["L" Q
"RTN","PXRMRPCA",13,0)
 .I USAGE["O" Q
"RTN","PXRMRPCA",14,0)
 .I USAGE'["C",USAGE'["*" Q
"RTN","PXRMRPCA",15,0)
 .S DATA=$G(^PXD(811.9,ORREM,0)) Q:DATA=""
"RTN","PXRMRPCA",16,0)
 .;Skip inactive reminders
"RTN","PXRMRPCA",17,0)
 .I $P(DATA,U,6) Q
"RTN","PXRMRPCA",18,0)
 .;Skip reminders with no name
"RTN","PXRMRPCA",19,0)
 .S NAME=$P(DATA,U,3) I NAME="" Q
"RTN","PXRMRPCA",20,0)
 .;Sort by name
"RTN","PXRMRPCA",21,0)
 .S ARR(NAME_U_ORREM)=""
"RTN","PXRMRPCA",22,0)
 ; Build output arrray
"RTN","PXRMRPCA",23,0)
 S SUB="",OCNT=0
"RTN","PXRMRPCA",24,0)
 F  S SUB=$O(ARR(SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",25,0)
 .S OCNT=OCNT+1
"RTN","PXRMRPCA",26,0)
 .S ORY(OCNT)=SUB
"RTN","PXRMRPCA",27,0)
 Q
"RTN","PXRMRPCA",28,0)
 ;
"RTN","PXRMRPCA",29,0)
APPL(ORY,ORPT,ORLOC) ;Applicable reminders for cover sheet
"RTN","PXRMRPCA",30,0)
 ;format file 811.9 ien^reminder print name^date due^last occur^prty^due.
"RTN","PXRMRPCA",31,0)
 N ORSRV,TMPLST,ERR,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT
"RTN","PXRMRPCA",32,0)
 N ORDUE,ORPRI,ORSTA,PASS
"RTN","PXRMRPCA",33,0)
 S ORJ=0
"RTN","PXRMRPCA",34,0)
 S ORSRV=$$GET1^DIQ(200,DUZ,29)
"RTN","PXRMRPCA",35,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",36,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",37,0)
 D GETLST^XPAR(.TMPLST,PASS,"ORQQPX SEARCH ITEMS","Q",.ERR) ; DBIA #3076
"RTN","PXRMRPCA",38,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",39,0)
 D AVAL(.TMPLST,2) ;Evaluate reminders
"RTN","PXRMRPCA",40,0)
 Q
"RTN","PXRMRPCA",41,0)
 ;
"RTN","PXRMRPCA",42,0)
ALIST(ORY,ORPT,LIST) ;Evaluate specific reminders
"RTN","PXRMRPCA",43,0)
 N ORSRV,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT,ORLOC
"RTN","PXRMRPCA",44,0)
 N ORDUE,ORPRI,ORSTA
"RTN","PXRMRPCA",45,0)
 S ORJ=0
"RTN","PXRMRPCA",46,0)
 D AVAL(.LIST,1)
"RTN","PXRMRPCA",47,0)
 Q
"RTN","PXRMRPCA",48,0)
 ;
"RTN","PXRMRPCA",49,0)
AVAL(ARRAY,POS) ;Evaluate array of reminders
"RTN","PXRMRPCA",50,0)
 S ORI=0 F  S ORI=$O(ARRAY(ORI)) Q:'ORI  D
"RTN","PXRMRPCA",51,0)
 .S ORIEN=$P(ARRAY(ORI),U,POS)
"RTN","PXRMRPCA",52,0)
 .K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",53,0)
 . I $$INACTIVE^PXRM(ORIEN) Q
"RTN","PXRMRPCA",54,0)
 .;Evaluate reminder
"RTN","PXRMRPCA",55,0)
 .D MAIN^PXRM(ORPT,ORIEN,1,1)
"RTN","PXRMRPCA",56,0)
 .;Not applicable is default
"RTN","PXRMRPCA",57,0)
 .S ORDUE=2 D  Q:ORTXT=""
"RTN","PXRMRPCA",58,0)
 ..S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""
"RTN","PXRMRPCA",59,0)
 ..;Determine status
"RTN","PXRMRPCA",60,0)
 ..S ORX=^TMP("PXRHM",$J,ORIEN,ORTXT) Q:ORX=""
"RTN","PXRMRPCA",61,0)
 ..S ORSTA=$P(ORX,U)
"RTN","PXRMRPCA",62,0)
 ..;Ignore reminders that are not applicable
"RTN","PXRMRPCA",63,0)
 ..I (ORSTA=" ")!(ORSTA["NEVER")!(ORSTA="N/A") Q
"RTN","PXRMRPCA",64,0)
 ..;Differentiate due and applicable
"RTN","PXRMRPCA",65,0)
 ..S ORDUE=0 I ORSTA["DUE" S ORDUE=1
"RTN","PXRMRPCA",66,0)
 ..I ORSTA["ERROR" S ORDUE=3
"RTN","PXRMRPCA",67,0)
 ..I ORSTA["CNBD" S ORDUE=4
"RTN","PXRMRPCA",68,0)
 ..;Get next due and last done dates 
"RTN","PXRMRPCA",69,0)
 ..S ORDUEDT=$P(ORX,U,2),ORLASTDT=$P(ORX,U,3)
"RTN","PXRMRPCA",70,0)
 ..S ORLASTDT=$S(+$G(ORLASTDT)>0:ORLASTDT,1:"")  ;null if not a date
"RTN","PXRMRPCA",71,0)
 ..;Reminder priority
"RTN","PXRMRPCA",72,0)
 ..S ORPRI=$P($G(^PXD(811.9,ORIEN,0)),U,10)
"RTN","PXRMRPCA",73,0)
 ..;Default is 2 for medium
"RTN","PXRMRPCA",74,0)
 ..I ORPRI="" S ORPRI=2
"RTN","PXRMRPCA",75,0)
 ..S ORJ=ORJ+1
"RTN","PXRMRPCA",76,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_ORDUEDT_U_ORLASTDT_U_ORPRI_U_ORDUE_U_$$DLG(ORIEN)_U_U_U_U_$$DLGWIPE(ORIEN)
"RTN","PXRMRPCA",77,0)
 .;Save not applicables also (IF a valid reminder)
"RTN","PXRMRPCA",78,0)
 .I ORDUE=2 D
"RTN","PXRMRPCA",79,0)
 ..S ORJ=ORJ+1
"RTN","PXRMRPCA",80,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_U_U_U_ORDUE_U_$$DLG(ORIEN)_U_U_U_U_$$DLGWIPE(ORIEN)
"RTN","PXRMRPCA",81,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",82,0)
 Q
"RTN","PXRMRPCA",83,0)
 ;
"RTN","PXRMRPCA",84,0)
CATEGORY(ORY,ORPT,ORLOC) ;Reminder Categories
"RTN","PXRMRPCA",85,0)
 ;type^name^ien^parent^child^etc
"RTN","PXRMRPCA",86,0)
 N ERR,IC,ORSRV,PASS,TEMPLST
"RTN","PXRMRPCA",87,0)
 ;Get user's service 
"RTN","PXRMRPCA",88,0)
 ;S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",89,0)
 S ORSRV=$$GET1^DIQ(200,DUZ,29)
"RTN","PXRMRPCA",90,0)
 ;Build list of locations and services required
"RTN","PXRMRPCA",91,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",92,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",93,0)
 ;
"RTN","PXRMRPCA",94,0)
 ;Get list of categories from GUI parameters file
"RTN","PXRMRPCA",95,0)
 D GETLST^XPAR(.TMPLST,PASS,"PXRM CPRS LOOKUP CATEGORIES","Q",.ERR)
"RTN","PXRMRPCA",96,0)
 ;If error return error type
"RTN","PXRMRPCA",97,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",98,0)
 ;
"RTN","PXRMRPCA",99,0)
 ;For each category build tree of reminders/subcategories
"RTN","PXRMRPCA",100,0)
 N CNT,LEVEL,ORCAT,UNIQ
"RTN","PXRMRPCA",101,0)
 S CNT="",IC=0,LEVEL=0,UNIQ=0
"RTN","PXRMRPCA",102,0)
 ;For each category in 'PXRM CPRS LOOKUP CATEGORIES'
"RTN","PXRMRPCA",103,0)
 F  S CNT=$O(TMPLST(CNT)) Q:'CNT  D
"RTN","PXRMRPCA",104,0)
 .;Get category ien
"RTN","PXRMRPCA",105,0)
 .S ORCAT=$P(TMPLST(CNT),U,2)
"RTN","PXRMRPCA",106,0)
 .;Update unique number
"RTN","PXRMRPCA",107,0)
 .S UNIQ=UNIQ+1
"RTN","PXRMRPCA",108,0)
 .;Add category and associated reminders/subcategories to output array
"RTN","PXRMRPCA",109,0)
 .D GETLST(0,ORCAT,0,UNIQ)
"RTN","PXRMRPCA",110,0)
 Q
"RTN","PXRMRPCA",111,0)
 ;
"RTN","PXRMRPCA",112,0)
DLG(REM) ;Dialog check
"RTN","PXRMRPCA",113,0)
 N DATA,DIEN,DOK
"RTN","PXRMRPCA",114,0)
 S DIEN=$P($G(^PXD(811.9,REM,51)),U) Q:'DIEN 0
"RTN","PXRMRPCA",115,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMRPCA",116,0)
 I $P(DATA,U,4)="R",+$P(DATA,U,3)=0 Q 1
"RTN","PXRMRPCA",117,0)
 Q 0
"RTN","PXRMRPCA",118,0)
 ;
"RTN","PXRMRPCA",119,0)
DLGWIPE(REM) ;Dialog check
"RTN","PXRMRPCA",120,0)
 N DATA,DIEN,DOK
"RTN","PXRMRPCA",121,0)
 S DIEN=$P($G(^PXD(811.9,REM,51)),U) Q:'DIEN 0
"RTN","PXRMRPCA",122,0)
 I $P($G(^PXRMD(801.41,DIEN,0)),U,17)=1 Q 1
"RTN","PXRMRPCA",123,0)
 Q 0
"RTN","PXRMRPCA",124,0)
 ;
"RTN","PXRMRPCA",125,0)
GETLST(D0,D1,LEVEL,PARENT) ;Add to output array
"RTN","PXRMRPCA",126,0)
 N DATA,NAME,ORREM,ORSCAT,PCAT,SEQ,SUB,TEMP,USAGE
"RTN","PXRMRPCA",127,0)
 ;Get category ien if this is a sub-category
"RTN","PXRMRPCA",128,0)
 S PCAT=0 I LEVEL>0 D  Q:ORSCAT=""  S UNIQ=UNIQ+1,PARENT=UNIQ
"RTN","PXRMRPCA",129,0)
 .S ORSCAT=$P($G(^PXRMD(811.7,D0,10,D1,0)),U),PCAT=PARENT
"RTN","PXRMRPCA",130,0)
 ;Otherwise use passed ien
"RTN","PXRMRPCA",131,0)
 I LEVEL=0 S ORSCAT=D1
"RTN","PXRMRPCA",132,0)
 ;Get category name
"RTN","PXRMRPCA",133,0)
 S NAME=$G(^PXRMD(811.7,ORSCAT,0)) I NAME="" Q
"RTN","PXRMRPCA",134,0)
 ;
"RTN","PXRMRPCA",135,0)
 ;Create category entry in output array
"RTN","PXRMRPCA",136,0)
 ;unique number^type^name^parent^reminder ien
"RTN","PXRMRPCA",137,0)
 ;
"RTN","PXRMRPCA",138,0)
 S IC=IC+1,ORY(IC)=PARENT_U_"C"_U_NAME_U_PCAT_U
"RTN","PXRMRPCA",139,0)
 ;Increment tab
"RTN","PXRMRPCA",140,0)
 S LEVEL=LEVEL+1
"RTN","PXRMRPCA",141,0)
 ;
"RTN","PXRMRPCA",142,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMRPCA",143,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCA",144,0)
 F  S SUB=$O(^PXRMD(811.7,ORSCAT,2,SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",145,0)
 .S DATA=$G(^PXRMD(811.7,ORSCAT,2,SUB,0)) Q:DATA=""
"RTN","PXRMRPCA",146,0)
 .S ORREM=$P(DATA,U) Q:ORREM=""
"RTN","PXRMRPCA",147,0)
 .S SEQ=$P(DATA,U,2)_0
"RTN","PXRMRPCA",148,0)
 .;Skip inactive reminders
"RTN","PXRMRPCA",149,0)
 .S DATA=$G(^PXD(811.9,ORREM,0)) Q:DATA=""  Q:$P(DATA,U,6)
"RTN","PXRMRPCA",150,0)
 .;Include only CPRS reminders
"RTN","PXRMRPCA",151,0)
 .S USAGE=$P($G(^PXD(811.9,ORREM,100)),U,4) I USAGE'["C",USAGE'["*" Q
"RTN","PXRMRPCA",152,0)
 .I USAGE["L"!(USAGE["O") Q
"RTN","PXRMRPCA",153,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMRPCA",154,0)
 .;or printname
"RTN","PXRMRPCA",155,0)
 .S NAME=$P(DATA,U,3)
"RTN","PXRMRPCA",156,0)
 .S TEMP(SEQ)=NAME_U_ORREM
"RTN","PXRMRPCA",157,0)
 ;
"RTN","PXRMRPCA",158,0)
 ;Re-save reminders in output array for display
"RTN","PXRMRPCA",159,0)
 ;unique number^type^name^parent^reminder ien
"RTN","PXRMRPCA",160,0)
 ;
"RTN","PXRMRPCA",161,0)
 S SEQ=""
"RTN","PXRMRPCA",162,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCA",163,0)
 .S NAME=$P(TEMP(SEQ),U),ORREM=$P(TEMP(SEQ),U,2)
"RTN","PXRMRPCA",164,0)
 .S UNIQ=UNIQ+1
"RTN","PXRMRPCA",165,0)
 .S IC=IC+1,ORY(IC)=UNIQ_U_"R"_U_NAME_U_PARENT_U_ORREM_U_$$DLG(ORREM)
"RTN","PXRMRPCA",166,0)
 ;
"RTN","PXRMRPCA",167,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMRPCA",168,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCA",169,0)
 F  S SUB=$O(^PXRMD(811.7,ORSCAT,10,SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",170,0)
 .S DATA=$G(^PXRMD(811.7,ORSCAT,10,SUB,0)) Q:DATA=""
"RTN","PXRMRPCA",171,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=SUB
"RTN","PXRMRPCA",172,0)
 ;
"RTN","PXRMRPCA",173,0)
 ;Process sub-sub categories in the same manner
"RTN","PXRMRPCA",174,0)
 S SEQ=""
"RTN","PXRMRPCA",175,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCA",176,0)
 .S SUB=TEMP(SEQ)
"RTN","PXRMRPCA",177,0)
 .D GETLST(ORSCAT,SUB,LEVEL,PARENT)
"RTN","PXRMRPCA",178,0)
 Q
"RTN","PXRMRPCA",179,0)
 ;
"RTN","PXRMRPCA",180,0)
LIST(ORY,ORPT,ORLOC) ;Reminders for this patient location (not evaluated)
"RTN","PXRMRPCA",181,0)
 ;format file 811.9 ien
"RTN","PXRMRPCA",182,0)
 N ORSRV,TMPLST,ERR,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT
"RTN","PXRMRPCA",183,0)
 N CNT,ORIEN,ORDUE,ORPRI,ORSTA,PASS,SUB
"RTN","PXRMRPCA",184,0)
 S ORJ=0
"RTN","PXRMRPCA",185,0)
 ;
"RTN","PXRMRPCA",186,0)
 S ORSRV=$$GET1^DIQ(200,DUZ,29)
"RTN","PXRMRPCA",187,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",188,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",189,0)
 D GETLST^XPAR(.TMPLST,PASS,"ORQQPX SEARCH ITEMS","Q",.ERR) ; DBIA #3076
"RTN","PXRMRPCA",190,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",191,0)
 ;
"RTN","PXRMRPCA",192,0)
 S CNT=0,SUB=""
"RTN","PXRMRPCA",193,0)
 F  S SUB=$O(TMPLST(SUB)) Q:'SUB  D
"RTN","PXRMRPCA",194,0)
 .S ORIEN=$P(TMPLST(SUB),U,2) Q:'ORIEN  Q:'$D(^PXD(811.9,ORIEN,0))
"RTN","PXRMRPCA",195,0)
 .S CNT=CNT+1,ORY(CNT)=ORIEN
"RTN","PXRMRPCA",196,0)
 Q
"RTN","PXRMRPCA",197,0)
 ;
"RTN","PXRMRPCA",198,0)
REMDET(ORY,ORPT,ORIEN) ;return detail for a pt's clinical reminder
"RTN","PXRMRPCA",199,0)
 ; ORY - return array
"RTN","PXRMRPCA",200,0)
 ; ORPT - patient DFN
"RTN","PXRMRPCA",201,0)
 ; ORIEN - clinical reminder (811.9 ien)
"RTN","PXRMRPCA",202,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",203,0)
 D MAIN^PXRM(ORPT,ORIEN,5,1)     ; 5 returns all reminder info
"RTN","PXRMRPCA",204,0)
 N CR,I,J,ORTXT,SCT,STA,STA1,STA2,STA3 S I=1,J=0
"RTN","PXRMRPCA",205,0)
 S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""
"RTN","PXRMRPCA",206,0)
 S STA=$G(^TMP("PXRHM",$J,ORIEN,ORTXT)) I STA'="" D
"RTN","PXRMRPCA",207,0)
 .S STA(1)=$P(STA,U),STA(2)=$P(STA,U,2),STA(3)=$P(STA,U,3)
"RTN","PXRMRPCA",208,0)
 .F SCT=1,2,3 I STA(SCT) S STA(SCT)=$$FMTE^XLFDT(STA(SCT),"5D")
"RTN","PXRMRPCA",209,0)
 .S ORY(I)="  --STATUS--  --DUE DATE--  --LAST DONE--",I=I+1
"RTN","PXRMRPCA",210,0)
 .S ORY(I)=$J(STA(1),10)_$J(STA(2),13)_$J(STA(3),14),I=I+1
"RTN","PXRMRPCA",211,0)
 F  S J=$O(^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J)) Q:J=""  D
"RTN","PXRMRPCA",212,0)
 .S ORY(I)=^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J),I=I+1
"RTN","PXRMRPCA",213,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",214,0)
 Q
"RTN","PXRMRPCA",215,0)
 ;
"RTN","PXRMRPCA",216,0)
WEB(ORY,ORRM) ;web page call
"RTN","PXRMRPCA",217,0)
 ;web site description^address
"RTN","PXRMRPCA",218,0)
 N ADDR,CNT,DATA,DESC,LINE,SUB,TITLE,TXT,UNIQ
"RTN","PXRMRPCA",219,0)
 S DESC="",CNT=0,UNIQ=0
"RTN","PXRMRPCA",220,0)
 ;Get the reminder specific web sites in alpha order
"RTN","PXRMRPCA",221,0)
 I ORRM]"" D
"RTN","PXRMRPCA",222,0)
 .F  S DESC=$O(^PXD(811.9,ORRM,50,"B",DESC)) Q:DESC=""  D
"RTN","PXRMRPCA",223,0)
 ..S SUB=0
"RTN","PXRMRPCA",224,0)
 ..F  S SUB=$O(^PXD(811.9,ORRM,50,"B",DESC,SUB)) Q:'SUB  D
"RTN","PXRMRPCA",225,0)
 ...S ADDR=$P($G(^PXD(811.9,ORRM,50,SUB,0)),U) Q:ADDR=""
"RTN","PXRMRPCA",226,0)
 ...S TITLE=$P($G(^PXD(811.9,ORRM,50,SUB,0)),U,2)
"RTN","PXRMRPCA",227,0)
 ...S UNIQ=UNIQ+1,CNT=CNT+1,ORY(CNT)=1_U_UNIQ_U_ADDR_U_TITLE,LINE=0
"RTN","PXRMRPCA",228,0)
 ...F  S LINE=$O(^PXD(811.9,ORRM,50,SUB,1,LINE)) Q:'LINE  D
"RTN","PXRMRPCA",229,0)
 ....S TXT=$G(^PXD(811.9,ORRM,50,SUB,1,LINE,0)) Q:TXT=""
"RTN","PXRMRPCA",230,0)
 ....S CNT=CNT+1,ORY(CNT)=2_U_UNIQ_U_TXT
"RTN","PXRMRPCA",231,0)
 ;Get the general web sites in alpha order
"RTN","PXRMRPCA",232,0)
 F  S DESC=$O(^PXRM(800,1,1,"B",DESC)) Q:DESC=""  D
"RTN","PXRMRPCA",233,0)
 .S SUB=0
"RTN","PXRMRPCA",234,0)
 .F  S SUB=$O(^PXRM(800,1,1,"B",DESC,SUB)) Q:'SUB  D
"RTN","PXRMRPCA",235,0)
 ..S ADDR=$P($G(^PXRM(800,1,1,SUB,0)),U) Q:ADDR=""
"RTN","PXRMRPCA",236,0)
 ..S TITLE=$P($G(^PXRM(800,1,1,SUB,0)),U,2)
"RTN","PXRMRPCA",237,0)
 ..S UNIQ=UNIQ+1,CNT=CNT+1,ORY(CNT)=1_U_UNIQ_U_ADDR_U_TITLE,LINE=0
"RTN","PXRMRPCA",238,0)
 ..F  S LINE=$O(^PXRM(800,1,1,SUB,1,LINE)) Q:'LINE  D
"RTN","PXRMRPCA",239,0)
 ...S TXT=$G(^PXRM(800,1,1,SUB,1,LINE,0)) Q:TXT=""
"RTN","PXRMRPCA",240,0)
 ...S CNT=CNT+1,ORY(CNT)=2_U_UNIQ_U_TXT
"RTN","PXRMRPCA",241,0)
 Q
"RTN","PXRMRPCD")
0^13^B11060075
"RTN","PXRMRPCD",1,0)
PXRMRPCD ;SLC/PJH - PXRM REMINDER DIALOG ;11/04/2009
"RTN","PXRMRPCD",2,0)
 ;;2.0;CLINICAL REMINDERS;**16**;Feb 04, 2005;Build 119
"RTN","PXRMRPCD",3,0)
 ;
"RTN","PXRMRPCD",4,0)
 ; Used by CPRS - see DBIA #3295/#3296/#3332
"RTN","PXRMRPCD",5,0)
 ;
"RTN","PXRMRPCD",6,0)
 ;
"RTN","PXRMRPCD",7,0)
CATEGORY(ORY,CIEN) ;Get category information
"RTN","PXRMRPCD",8,0)
 ;
"RTN","PXRMRPCD",9,0)
 ; Input parameter Category ien [#811.7]
"RTN","PXRMRPCD",10,0)
 ;
"RTN","PXRMRPCD",11,0)
 N DATA,IC,IEN,NAME,PNAME,RIEN,SEQ,SUB,TEMP,USAGE
"RTN","PXRMRPCD",12,0)
 S IC=0
"RTN","PXRMRPCD",13,0)
 ;Get category name
"RTN","PXRMRPCD",14,0)
 S NAME=$G(^PXRMD(811.7,CIEN,0)) I NAME="" Q
"RTN","PXRMRPCD",15,0)
 ;
"RTN","PXRMRPCD",16,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMRPCD",17,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCD",18,0)
 F  S SUB=$O(^PXRMD(811.7,CIEN,2,SUB)) Q:SUB=""  D
"RTN","PXRMRPCD",19,0)
 .S DATA=$G(^PXRMD(811.7,CIEN,2,SUB,0)) Q:DATA=""
"RTN","PXRMRPCD",20,0)
 .S RIEN=$P(DATA,U) Q:'RIEN
"RTN","PXRMRPCD",21,0)
 .S SEQ=$P(DATA,U,2)_0
"RTN","PXRMRPCD",22,0)
 .;Include only CPRS reminders
"RTN","PXRMRPCD",23,0)
 .S USAGE=$P($G(^PXD(811.9,RIEN,100)),U,4) I USAGE'["C",USAGE'["*" Q
"RTN","PXRMRPCD",24,0)
 .I USAGE["L"!(USAGE["O") Q
"RTN","PXRMRPCD",25,0)
 .;Skip inactive reminders
"RTN","PXRMRPCD",26,0)
 .S DATA=$G(^PXD(811.9,RIEN,0)) Q:DATA=""  Q:$P(DATA,U,6)
"RTN","PXRMRPCD",27,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMRPCD",28,0)
 .;or printname
"RTN","PXRMRPCD",29,0)
 .S PNAME=$P(DATA,U,3)
"RTN","PXRMRPCD",30,0)
 .S TEMP(SEQ)=RIEN_U_NAME_U_PNAME
"RTN","PXRMRPCD",31,0)
 ;
"RTN","PXRMRPCD",32,0)
 ;Re-save reminders in output array for display
"RTN","PXRMRPCD",33,0)
 ;type^reminder ien^name
"RTN","PXRMRPCD",34,0)
 ;
"RTN","PXRMRPCD",35,0)
 S SEQ=""
"RTN","PXRMRPCD",36,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCD",37,0)
 .S IC=IC+1,ORY(IC)="R"_U_TEMP(SEQ)
"RTN","PXRMRPCD",38,0)
 ;
"RTN","PXRMRPCD",39,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMRPCD",40,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCD",41,0)
 F  S SUB=$O(^PXRMD(811.7,CIEN,10,SUB)) Q:SUB=""  D
"RTN","PXRMRPCD",42,0)
 .S DATA=$G(^PXRMD(811.7,CIEN,10,SUB,0)) Q:DATA=""
"RTN","PXRMRPCD",43,0)
 .S IEN=$P(DATA,U) Q:'IEN
"RTN","PXRMRPCD",44,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=IEN
"RTN","PXRMRPCD",45,0)
 ;
"RTN","PXRMRPCD",46,0)
 ;Save sub categories
"RTN","PXRMRPCD",47,0)
 S SEQ=""
"RTN","PXRMRPCD",48,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCD",49,0)
 .S SUB=TEMP(SEQ) Q:'SUB
"RTN","PXRMRPCD",50,0)
 .S NAME=$P($G(^PXRMD(811.7,SUB,0)),U) Q:NAME=""
"RTN","PXRMRPCD",51,0)
 .S IC=IC+1,ORY(IC)="C"_U_SUB_U_NAME
"RTN","PXRMRPCD",52,0)
 Q
"RTN","PXRMRPCD",53,0)
 ;
"RTN","PXRMRPCD",54,0)
DIALOG(ORY,ORDLG,DFN) ;Load dialog
"RTN","PXRMRPCD",55,0)
 ;
"RTN","PXRMRPCD",56,0)
 ; Input parameter ORDLG - dialog ien [#801.41]
"RTN","PXRMRPCD",57,0)
 ;
"RTN","PXRMRPCD",58,0)
 I 'ORDLG S ORY(1)="-1^dialog ien not specified" Q
"RTN","PXRMRPCD",59,0)
 ;
"RTN","PXRMRPCD",60,0)
 ;Check if a reminder dialog and enabled
"RTN","PXRMRPCD",61,0)
 N DATA
"RTN","PXRMRPCD",62,0)
 S DATA=$G(^PXRMD(801.41,ORDLG,0))
"RTN","PXRMRPCD",63,0)
 ;
"RTN","PXRMRPCD",64,0)
 I $P(DATA,U,4)'="R" S ORY(1)="-1^reminder dialog invalid" Q
"RTN","PXRMRPCD",65,0)
 ;
"RTN","PXRMRPCD",66,0)
 I $P(DATA,U,3) S ORY(1)="-1^reminder dialog disabled" Q
"RTN","PXRMRPCD",67,0)
 ;
"RTN","PXRMRPCD",68,0)
 ;Load dialog lines into local array
"RTN","PXRMRPCD",69,0)
 D LOAD^PXRMDLL(ORDLG,$G(DFN))
"RTN","PXRMRPCD",70,0)
 Q
"RTN","PXRMRPCD",71,0)
 ;
"RTN","PXRMRPCD",72,0)
EDITPAR(PAR) ;Edit CPRS GUI Version 15 parameters
"RTN","PXRMRPCD",73,0)
 ;
"RTN","PXRMRPCD",74,0)
 ;This is an entry action in the PXRM CPRS CONFIGURATION menu options
"RTN","PXRMRPCD",75,0)
 ;
"RTN","PXRMRPCD",76,0)
 ;Check if Patch 85 has been installed
"RTN","PXRMRPCD",77,0)
 I '$$FIND1^DIC(8989.51,"","AMX",PAR) D  Q
"RTN","PXRMRPCD",78,0)
 .W !!,"This option requires CPRS GUI Version 15" H 1
"RTN","PXRMRPCD",79,0)
 ;
"RTN","PXRMRPCD",80,0)
 ;Edit Parameter Definition
"RTN","PXRMRPCD",81,0)
 D EDITPAR^XPAREDIT(PAR)
"RTN","PXRMRPCD",82,0)
 Q
"RTN","PXRMRPCD",83,0)
 ;
"RTN","PXRMRPCD",84,0)
SEL(ORY) ;Selectable reminders and categories
"RTN","PXRMRPCD",85,0)
 N CIEN,CNAM,CNT,DATA,RCLASS,RNAM,RPNAM,RIEN,TYPE,USAGE
"RTN","PXRMRPCD",86,0)
 ;
"RTN","PXRMRPCD",87,0)
 ;Reminders in print name order
"RTN","PXRMRPCD",88,0)
 S TYPE="R",RPNAM="",CNT=0
"RTN","PXRMRPCD",89,0)
 F  S RPNAM=$O(^PXD(811.9,"D",RPNAM)) Q:RPNAM=""  D
"RTN","PXRMRPCD",90,0)
 .S RIEN=0
"RTN","PXRMRPCD",91,0)
 .F  S RIEN=$O(^PXD(811.9,"D",RPNAM,RIEN)) Q:'RIEN  D
"RTN","PXRMRPCD",92,0)
 ..;Include only CPRS reminders
"RTN","PXRMRPCD",93,0)
 ..S USAGE=$P($G(^PXD(811.9,RIEN,100)),U,4) I USAGE'["C",USAGE'["*" Q
"RTN","PXRMRPCD",94,0)
 ..I USAGE["L"!(USAGE["O") Q
"RTN","PXRMRPCD",95,0)
 ..;Skip inactive reminders
"RTN","PXRMRPCD",96,0)
 ..S DATA=$G(^PXD(811.9,RIEN,0)) Q:DATA=""  Q:$P(DATA,U,6)
"RTN","PXRMRPCD",97,0)
 ..S RNAM=$P(DATA,U),RCLASS=$P($G(^PXD(811.9,RIEN,100)),U)
"RTN","PXRMRPCD",98,0)
 ..S CNT=CNT+1,ORY(CNT)=TYPE_U_RIEN_U_RPNAM_U_RNAM_U_RCLASS
"RTN","PXRMRPCD",99,0)
 ;
"RTN","PXRMRPCD",100,0)
 ;Categories in name order
"RTN","PXRMRPCD",101,0)
 S TYPE="C",CNAM=""
"RTN","PXRMRPCD",102,0)
 F  S CNAM=$O(^PXRMD(811.7,"B",CNAM)) Q:CNAM=""  D
"RTN","PXRMRPCD",103,0)
 .S CIEN=$O(^PXRMD(811.7,"B",CNAM,"")) Q:'CIEN
"RTN","PXRMRPCD",104,0)
 .S CNT=CNT+1,ORY(CNT)=TYPE_U_CIEN_U_CNAM
"RTN","PXRMRPCD",105,0)
 Q
"VER")
8.0^22.0
"^DD",801,801,0)
FIELD^^15^9
"^DD",801,801,0,"DDA")
N
"^DD",801,801,0,"DT")
3100309
"^DD",801,801,0,"IX","R",801.04,30)

"^DD",801,801,0,"IX","T",801.04,20)

"^DD",801,801,0,"NM","REMINDER ORDERABLE ITEM GROUP")

"^DD",801,801,0,"VRPK")
PXRM
"^DD",801,801,.01,0)
GROUP NAME^RFX^^0;1^K:($L(X)>64)!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(.X)) X
"^DD",801,801,.01,1,0)
^.1^^0
"^DD",801,801,.01,3)
Answer must be 3-64 characters in length.
"^DD",801,801,.01,21,0)
^^4^4^3090716^^
"^DD",801,801,.01,21,1,0)
This field is the name of the Reminder Orderable Item Group.
"^DD",801,801,.01,21,2,0)
Nationally distributed reminder orderable items group names
"^DD",801,801,.01,21,3,0)
are prefixed with "VA-".
"^DD",801,801,.01,21,4,0)

"^DD",801,801,.01,"DT")
3100416
"^DD",801,801,10,0)
DESCRIPTION^801.01^^1;0
"^DD",801,801,10,21,0)
^^3^3^3100111^
"^DD",801,801,10,21,1,0)
This field contains a description of the clinical
"^DD",801,801,10,21,2,0)
reminder order checks. It is used to document its
"^DD",801,801,10,21,3,0)
purpose and intended goals.
"^DD",801,801,15,0)
DRUG CLASS LIST^801.015P^^1.5;0
"^DD",801,801,15,21,0)
^^4^4^3100308^
"^DD",801,801,15,21,1,0)
This field stores a list of Drug Classes that are associated with the 
"^DD",801,801,15,21,2,0)
Orderable Item Group. This field is used for automatically 
"^DD",801,801,15,21,3,0)
adding/removing the orderable items associated with a drug class to/from 
"^DD",801,801,15,21,4,0)
the list.
"^DD",801,801,20,0)
ORDERABLE ITEM LIST^801.02P^^2;0
"^DD",801,801,20,21,0)
^^11^11^3100111^
"^DD",801,801,20,21,1,0)
This multiple contains a list of orderable items that each reminder
"^DD",801,801,20,21,2,0)
rule should run against. As an order is placed in CPRS, the
"^DD",801,801,20,21,3,0)
orderable item is passed to the Order Check Mechanism. This
"^DD",801,801,20,21,4,0)
orderable item will be checked against this list; if it is found,
"^DD",801,801,20,21,5,0)
then the reminder definition or term assigned to the rule multiple
"^DD",801,801,20,21,6,0)
will be evaluated against the orderable item.
"^DD",801,801,20,21,7,0)
 
"^DD",801,801,20,21,8,0)
When an order is placed in CPRS, the orderable item is passed to
"^DD",801,801,20,21,9,0)
the Order Check Mechanism. If the orderable item is found in a 
"^DD",801,801,20,21,10,0)
Group's Orderable Item List then each rule in the group will
"^DD",801,801,20,21,11,0)
be evaluated.
"^DD",801,801,20,"DT")
3090706
"^DD",801,801,30,0)
RULE LIST^801.04^^3;0
"^DD",801,801,30,21,0)
^^3^3^3100111^
"^DD",801,801,30,21,1,0)
This multiple contains a list of rules that are evaluated for each
"^DD",801,801,30,21,2,0)
orderable item in the orderable item list multiple. A rule can contain
"^DD",801,801,30,21,3,0)
either one reminder term or one reminder definition.
"^DD",801,801,30,23,0)
^.001^1^1^3090727^^^^
"^DD",801,801,30,23,1,0)

"^DD",801,801,30,"DT")
3090707
"^DD",801,801,100,0)
CLASS^RSX^L:LOCAL;V:VISN;N:NATIONAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",801,801,100,3)
Enter a class.
"^DD",801,801,100,21,0)
^^3^3^3090707^^
"^DD",801,801,100,21,1,0)
This is the CLASS of the Orderable Item Group. Possible classes are "N" for
"^DD",801,801,100,21,2,0)
national, "V" for VISN, and "L" for local.
"^DD",801,801,100,21,3,0)

"^DD",801,801,100,"DT")
3100125
"^DD",801,801,101,0)
SPONSOR^P811.6'X^PXRMD(811.6,^100;2^Q
"^DD",801,801,101,3)
Select the sponsor.
"^DD",801,801,101,21,0)
^^2^2^3090707^
"^DD",801,801,101,21,1,0)
This is the organization or group that sponsors this orderable item group.
"^DD",801,801,101,21,2,0)

"^DD",801,801,101,"DT")
3100125
"^DD",801,801,102,0)
REVIEW DATE^DX^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",801,801,102,3)
Enter the date the order check group should be reviewed.
"^DD",801,801,102,21,0)
^^4^4^3090707^
"^DD",801,801,102,21,1,0)
The REVIEW DATE is used to determine when the orderable item group should be
"^DD",801,801,102,21,2,0)
reviewed to verify that it is current with the latest standards and
"^DD",801,801,102,21,3,0)
guidelines.
"^DD",801,801,102,21,4,0)

"^DD",801,801,102,"DT")
3100125
"^DD",801,801,110,0)
EDIT HISTORY^801.03DA^^110;0
"^DD",801,801.01,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",801,801.01,0,"DT")
3090617
"^DD",801,801.01,0,"NM","DESCRIPTION")

"^DD",801,801.01,0,"UP")
801
"^DD",801,801.01,.01,0)
DESCRIPTION^Wx^^0;1
"^DD",801,801.01,.01,"DT")
3100111
"^DD",801,801.015,0)
DRUG CLASS LIST SUB-FIELD^^.01^1
"^DD",801,801.015,0,"DT")
3100308
"^DD",801,801.015,0,"IX","B",801.015,.01)

"^DD",801,801.015,0,"NM","DRUG CLASS LIST")

"^DD",801,801.015,0,"UP")
801
"^DD",801,801.015,.01,0)
DRUG CLASS^MP50.605'^PS(50.605,^0;1^Q
"^DD",801,801.015,.01,1,0)
^.1
"^DD",801,801.015,.01,1,1,0)
801.015^B
"^DD",801,801.015,.01,1,1,1)
S ^PXD(801,DA(1),1.5,"B",$E(X,1,30),DA)=""
"^DD",801,801.015,.01,1,1,2)
K ^PXD(801,DA(1),1.5,"B",$E(X,1,30),DA)
"^DD",801,801.015,.01,3)
Select a Drug Class
"^DD",801,801.015,.01,21,0)
^^5^5^3100308^
"^DD",801,801.015,.01,21,1,0)
By adding a drug class to the order check group all orderable items 
"^DD",801,801.015,.01,21,2,0)
associated with the Drug Class will be assigned to the orderable item 
"^DD",801,801.015,.01,21,3,0)
list. When a Drug Class is deleted from the order check group the 
"^DD",801,801.015,.01,21,4,0)
orderable item associated with that drug class will be remove from the 
"^DD",801,801.015,.01,21,5,0)
list of orderable items.
"^DD",801,801.015,.01,"DT")
3100416
"^DD",801,801.02,0)
ORDERABLE ITEM LIST SUB-FIELD^^5^1
"^DD",801,801.02,0,"DT")
3100309
"^DD",801,801.02,0,"IX","B",801.02,.01)

"^DD",801,801.02,0,"NM","ORDERABLE ITEM LIST")

"^DD",801,801.02,0,"UP")
801
"^DD",801,801.02,.01,0)
ORDERABLE ITEM^M*P101.43'^ORD(101.43,^0;1^S DIC("S")="I $G(^ORD(101.43,Y,.1))=""""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",801,801.02,.01,1,0)
^.1^^-1
"^DD",801,801.02,.01,1,1,0)
801.02^B
"^DD",801,801.02,.01,1,1,1)
S ^PXD(801,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",801,801.02,.01,1,1,2)
K ^PXD(801,DA(1),2,"B",$E(X,1,30),DA)
"^DD",801,801.02,.01,3)
Select an orderable item to add to the group.
"^DD",801,801.02,.01,12)
This screen will only allow selection of active orderable items
"^DD",801,801.02,.01,12.1)
S DIC("S")="I $G(^ORD(101.43,Y,.1))="""""
"^DD",801,801.02,.01,"DT")
3100416
"^DD",801,801.03,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",801,801.03,0,"DT")
3090702
"^DD",801,801.03,0,"IX","B",801.03,.01)

"^DD",801,801.03,0,"NM","EDIT HISTORY")

"^DD",801,801.03,0,"UP")
801
"^DD",801,801.03,.01,0)
EDIT DATE^RDX^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",801,801.03,.01,1,0)
^.1
"^DD",801,801.03,.01,1,1,0)
801.03^B
"^DD",801,801.03,.01,1,1,1)
S ^PXD(801,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",801,801.03,.01,1,1,2)
K ^PXD(801,DA(1),110,"B",$E(X,1,30),DA)
"^DD",801,801.03,.01,3)
Do not edit this field.
"^DD",801,801.03,.01,21,0)
^^4^4^3090707^^
"^DD",801,801.03,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",801,801.03,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",801,801.03,.01,21,3,0)

"^DD",801,801.03,.01,21,4,0)

"^DD",801,801.03,.01,"DT")
3090707
"^DD",801,801.03,1,0)
EDIT BY^RP200'^VA(200,^0;2^Q
"^DD",801,801.03,1,3)
Do not edit this field.
"^DD",801,801.03,1,21,0)
^^3^3^3090702^
"^DD",801,801.03,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",801,801.03,1,21,2,0)
and should not be changed by the user.
"^DD",801,801.03,1,21,3,0)

"^DD",801,801.03,1,"DT")
3090702
"^DD",801,801.03,2,0)
EDIT COMMENTS^801.32^^1;0
"^DD",801,801.03,2,21,0)
^^3^3^3090702^
"^DD",801,801.03,2,21,1,0)
This word-processing field can be used to record the changes made during
"^DD",801,801.03,2,21,2,0)
the editing session.
"^DD",801,801.03,2,21,3,0)

"^DD",801,801.04,0)
RULE LIST SUB-FIELD^^45^13
"^DD",801,801.04,0,"DT")
3100126
"^DD",801,801.04,0,"IX","B",801.04,.01)

"^DD",801,801.04,0,"NM","RULE LIST")

"^DD",801,801.04,0,"UP")
801
"^DD",801,801.04,.01,0)
RULE NAME^MRF^^0;1^K:$L(X)>64!($L(X)<3) X
"^DD",801,801.04,.01,.1)

"^DD",801,801.04,.01,1,0)
^.1
"^DD",801,801.04,.01,1,1,0)
801.04^B
"^DD",801,801.04,.01,1,1,1)
S ^PXD(801,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",801,801.04,.01,1,1,2)
K ^PXD(801,DA(1),3,"B",$E(X,1,30),DA)
"^DD",801,801.04,.01,3)
Answer must be 3-64 characters in length.
"^DD",801,801.04,.01,4)
D RNXHELP^PXRMORCH
"^DD",801,801.04,.01,21,0)
^^1^1^3100111^
"^DD",801,801.04,.01,21,1,0)
This is the internal name of the rule.
"^DD",801,801.04,.01,"DT")
3100416
"^DD",801,801.04,1,0)
DISPLAY NAME^RF^^0;2^K:$L(X)>64!($L(X)<3) X
"^DD",801,801.04,1,3)
Answer must be 3-64 characters in length
"^DD",801,801.04,1,21,0)
^^2^2^3090716^^
"^DD",801,801.04,1,21,1,0)
This is the name that will display in the CPRS Order Check Window.
"^DD",801,801.04,1,21,2,0)

"^DD",801,801.04,1,"DT")
3090716
"^DD",801,801.04,2,0)
ACTIVE FLAG^RS^1:YES;0:NO;^0;3^Q
"^DD",801,801.04,2,3)
Is the rule active?
"^DD",801,801.04,2,21,0)
^^3^3^3100111^
"^DD",801,801.04,2,21,1,0)
This can either be set to Yes or No. This field determines if the
"^DD",801,801.04,2,21,2,0)
rule is active or inactive. If the rule is inactive, then the
"^DD",801,801.04,2,21,3,0)
rule will not be evaluated for the orderable item list.
"^DD",801,801.04,2,"DT")
3100416
"^DD",801,801.04,3,0)
TESTING FLAG^RS^1:YES;0:NO;^0;4^Q
"^DD",801,801.04,3,3)
Is the rule being tested?
"^DD",801,801.04,3,21,0)
^^4^4^3100111^
"^DD",801,801.04,3,21,1,0)
This value should be set to YES when a rule is first created
"^DD",801,801.04,3,21,2,0)
so the creator of the rule can test it before turning it on
"^DD",801,801.04,3,21,3,0)
for the entire facility. To turn it on for the entire facility,
"^DD",801,801.04,3,21,4,0)
this field must be set to NO.
"^DD",801,801.04,3,"DT")
3100416
"^DD",801,801.04,4,0)
SEVERITY^RS^3:LOW;2:MEDIUM;1:HIGH;^0;5^Q
"^DD",801,801.04,4,3)
What's the severity of the order check?
"^DD",801,801.04,4,21,0)
^^6^6^3100114^
"^DD",801,801.04,4,21,1,0)
Enter a severity for the order check. The severity
"^DD",801,801.04,4,21,2,0)
can be one of three possible values: HIGH, MEDIUM, or LOW.
"^DD",801,801.04,4,21,3,0)
If multiple reminder order checks are run against an 
"^DD",801,801.04,4,21,4,0)
orderable item, the results are displayed by order of severity.
"^DD",801,801.04,4,21,5,0)
Also, a severity of HIGH requires the user to enter an
"^DD",801,801.04,4,21,6,0)
override reason when signing the order.
"^DD",801,801.04,4,"DT")
3100119
"^DD",801,801.04,10,0)
RULE DESCRIPTION^801.05^^1;0
"^DD",801,801.04,10,21,0)
^^3^3^3090707^
"^DD",801,801.04,10,21,1,0)
This is the description of what the creator  is trying to accomplish with this
"^DD",801,801.04,10,21,2,0)
particular rule.
"^DD",801,801.04,10,21,3,0)

"^DD",801,801.04,20,0)
REMINDER TERM^P811.5'^PXRMD(811.5,^2;1^Q
"^DD",801,801.04,20,1,0)
^.1
"^DD",801,801.04,20,1,1,0)
801^T
"^DD",801,801.04,20,1,1,1)
S ^PXD(801,"T",$E(X,1,30),DA(1),DA)=""
"^DD",801,801.04,20,1,1,2)
K ^PXD(801,"T",$E(X,1,30),DA(1),DA)
"^DD",801,801.04,20,1,1,"DT")
3090706
"^DD",801,801.04,20,21,0)
^^6^6^3100111^
"^DD",801,801.04,20,21,1,0)
This field is a pointer to file #811.5. If a reminder term is
"^DD",801,801.04,20,21,2,0)
defined in this field when an order is placed in CPRS, the
"^DD",801,801.04,20,21,3,0)
reminder term will be evaluated. The reminder term evaluation will
"^DD",801,801.04,20,21,4,0)
return either a TRUE or FALSE value. The value returned by the
"^DD",801,801.04,20,21,5,0)
reminder term evaluation is used in conjunction with the
"^DD",801,801.04,20,21,6,0)
TERM EVALUATION STATUS field.
"^DD",801,801.04,20,"DT")
3100111
"^DD",801,801.04,21,0)
TERM EVALUATION STATUS^S^1:TRUE;0:FALSE;^2;2^Q
"^DD",801,801.04,21,3)
Enter the value for the reminder term results that should trigger an order check.
"^DD",801,801.04,21,4)

"^DD",801,801.04,21,21,0)
^^7^7^3100111^
"^DD",801,801.04,21,21,1,0)
This field is used in conjunction with the REMINDER TERM field;
"^DD",801,801.04,21,21,2,0)
it will be used to determine if the rule should appear in the
"^DD",801,801.04,21,21,3,0)
order check window in CPRS. When the reminder term is defined in
"^DD",801,801.04,21,21,4,0)
field #20, the TRUE/FALSE result of the term evaluation will be
"^DD",801,801.04,21,21,5,0)
compared to the value defined in this field. If the value matches,
"^DD",801,801.04,21,21,6,0)
the text defined in the Order Check Text field will appear in the
"^DD",801,801.04,21,21,7,0)
order check window with the DISPLAY NAME.
"^DD",801,801.04,21,"DT")
3100126
"^DD",801,801.04,30,0)
REMINDER DEFINITION^*P811.9'^PXD(811.9,^3;1^S DIC("S")="I $P($G(^(100)),U,4)[""O""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",801,801.04,30,1,0)
^.1
"^DD",801,801.04,30,1,1,0)
801^R
"^DD",801,801.04,30,1,1,1)
S ^PXD(801,"R",$E(X,1,30),DA(1),DA)=""
"^DD",801,801.04,30,1,1,2)
K ^PXD(801,"R",$E(X,1,30),DA(1),DA)
"^DD",801,801.04,30,1,1,"DT")
3090706
"^DD",801,801.04,30,3)
Select a reminder definition defined for use in an order check.
"^DD",801,801.04,30,12)
This screen only allows selection of reminder definitions with a USAGE value of Order Check.
"^DD",801,801.04,30,12.1)
S DIC("S")="I $P($G(^(100)),U,4)[""O"""
"^DD",801,801.04,30,21,0)
^^6^6^3100111^
"^DD",801,801.04,30,21,1,0)
This field is a pointer to file #811.9. If a reminder definition is
"^DD",801,801.04,30,21,2,0)
defined in this field when an order is placed in CPRS, the
"^DD",801,801.04,30,21,3,0)
reminder definition will be evaluated. The reminder definition
"^DD",801,801.04,30,21,4,0)
evaluation will return an evaluation status. The value of the status
"^DD",801,801.04,30,21,5,0)
returned by the reminder definition evaluation is used in 
"^DD",801,801.04,30,21,6,0)
conjunction with the DEFINITION EVALUATION STATUS field.
"^DD",801,801.04,30,"DT")
3100126
"^DD",801,801.04,31,0)
DEFINITION EVALUATION STATUS^S^D:DUE;A:APPLICABLE;N:N/A;^3;2^Q
"^DD",801,801.04,31,3)
Enter the value for the reminder definition evaluation status that should trigger an order check.
"^DD",801,801.04,31,21,0)
^^14^14^3100111^^
"^DD",801,801.04,31,21,1,0)
This field is used in conjunction with the REMINDER DEFINITION
"^DD",801,801.04,31,21,2,0)
field. It will be used to determine if the rule should appear in
"^DD",801,801.04,31,21,3,0)
the order check window in CPRS. When a reminder definition is
"^DD",801,801.04,31,21,4,0)
defined in field #30, the status value from the definition
"^DD",801,801.04,31,21,5,0)
evaluation will be compared to the value defined in this field.
"^DD",801,801.04,31,21,6,0)
If the evaluation status value matches then the rule will appear
"^DD",801,801.04,31,21,7,0)
in the order check window. This field can have one of three possible
"^DD",801,801.04,31,21,8,0)
values: DUE, APPLICABLE, and N/A.
"^DD",801,801.04,31,21,9,0)
 
"^DD",801,801.04,31,21,10,0)
DUE includes the status of DUE NOW and DUE SOON.
"^DD",801,801.04,31,21,11,0)
 
"^DD",801,801.04,31,21,12,0)
APPLICABLE includes the status of DUE NOW, DUE SOON, and RESOLVED.
"^DD",801,801.04,31,21,13,0)
 
"^DD",801,801.04,31,21,14,0)
N/A includes the status of N/A and NEVER.
"^DD",801,801.04,31,"DT")
3100125
"^DD",801,801.04,32,0)
OUTPUT TEXT^S^O:ORDER CHECK TEXT ONLY;D:DEFINITION TEXT ONLY;B:BOTH ORDER CHECK AND DEFINITION TEXT;^3;3^Q
"^DD",801,801.04,32,3)
Select what text should appear in the order check window.
"^DD",801,801.04,32,21,0)
^^16^16^3100114^
"^DD",801,801.04,32,21,1,0)
This field controls which text will appear in the order check
"^DD",801,801.04,32,21,2,0)
window.
"^DD",801,801.04,32,21,3,0)
 
"^DD",801,801.04,32,21,4,0)
ORDER CHECK TEXT ONLY will display the text defined in the ORDER
"^DD",801,801.04,32,21,5,0)
CHECK TEXT field in the Order Check Window.
"^DD",801,801.04,32,21,6,0)
 
"^DD",801,801.04,32,21,7,0)
DEFINITION TEXT ONLY will display the text returned from the
"^DD",801,801.04,32,21,8,0)
reminder evaluation. This text is similar to the Clinical
"^DD",801,801.04,32,21,9,0)
Maintenance Output, but without the status line and the
"^DD",801,801.04,32,21,10,0)
frequency line in the output.
"^DD",801,801.04,32,21,11,0)
 
"^DD",801,801.04,32,21,12,0)
BOTH ORDER CHECK and DEFINITION TEXT: This value will display both
"^DD",801,801.04,32,21,13,0)
the text defined in the ORDER CHECK TEXT field and the text returned
"^DD",801,801.04,32,21,14,0)
by the reminder evaluation, without the Status Line and the
"^DD",801,801.04,32,21,15,0)
Frequency Line. The text defined in the ORDER CHECK TEXT
"^DD",801,801.04,32,21,16,0)
field will appear first in the output.
"^DD",801,801.04,32,"DT")
3100125
"^DD",801,801.04,40,0)
ORDER CHECK TEXT^801.06^^4;0
"^DD",801,801.04,40,21,0)
^^5^5^3100114^
"^DD",801,801.04,40,21,1,0)
This field stores the text that should display in the Order Check
"^DD",801,801.04,40,21,2,0)
Window. This text will only appear if the rule is true and the
"^DD",801,801.04,40,21,3,0)
evaluation is done for a reminder term or if the evaluation
"^DD",801,801.04,40,21,4,0)
is done for a reminder definition and the value of 
"^DD",801,801.04,40,21,5,0)
the OUTPUT TEXT field is not DEFINITION TEXT ONLY.
"^DD",801,801.04,45,0)
NO. OF ORDER CHECK TEXT LINES^F^^5;1^K:$L(X)>5!($L(X)<1) X
"^DD",801,801.04,45,3)
Answer must be 1-5 characters in length.
"^DD",801,801.04,45,21,0)
^^3^3^3091214^
"^DD",801,801.04,45,21,1,0)
This is the number of lines in the ORDER CHECK TEXT. If the number ends
"^DD",801,801.04,45,21,2,0)
with "T" then the text contains a TIU object. This field is set
"^DD",801,801.04,45,21,3,0)
automatically during the rule edit and should never be edited by hand.
"^DD",801,801.04,45,"DT")
3100125
"^DD",801,801.05,0)
RULE DESCRIPTION SUB-FIELD^^.01^1
"^DD",801,801.05,0,"DT")
3090702
"^DD",801,801.05,0,"NM","RULE DESCRIPTION")

"^DD",801,801.05,0,"UP")
801.04
"^DD",801,801.05,.01,0)
RULE DESCRIPTION^Wx^^0;1
"^DD",801,801.05,.01,21,0)
^^3^3^3090707^
"^DD",801,801.05,.01,21,1,0)
This is the description of what the creator  is trying to accomplish with this
"^DD",801,801.05,.01,21,2,0)
particular rule.
"^DD",801,801.05,.01,21,3,0)

"^DD",801,801.05,.01,"DT")
3090707
"^DD",801,801.06,0)
ORDER CHECK TEXT SUB-FIELD^^.01^1
"^DD",801,801.06,0,"DT")
3090702
"^DD",801,801.06,0,"NM","ORDER CHECK TEXT")

"^DD",801,801.06,0,"UP")
801.04
"^DD",801,801.06,.01,0)
ORDER CHECK TEXT^Wx^^0;1
"^DD",801,801.06,.01,3)
Enter the text that should appear in the order check window.
"^DD",801,801.06,.01,"DT")
3100125
"^DD",801,801.32,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",801,801.32,0,"DT")
3090702
"^DD",801,801.32,0,"NM","EDIT COMMENTS")

"^DD",801,801.32,0,"UP")
801.03
"^DD",801,801.32,.01,0)
EDIT COMMENTS^Wx^^0;1^Q
"^DD",801,801.32,.01,21,0)
^^3^3^3090702^
"^DD",801,801.32,.01,21,1,0)
This word-processing field can be used to record the changes made during
"^DD",801,801.32,.01,21,2,0)
the editing session.
"^DD",801,801.32,.01,21,3,0)

"^DD",801,801.32,.01,"DT")
3090702
"^DD",811.9,811.9,0)
FIELD^^78^54
"^DD",811.9,811.9,0,"DDA")
N
"^DD",811.9,811.9,0,"DT")
3080829
"^DD",811.9,811.9,0,"ID",100)
W:$D(^(100)) "   ",@("$P($P($C(59)_$S($D(^DD(811.9,100,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(100),U,1)_"":"",2),$C(59),1)")
"^DD",811.9,811.9,0,"IX","AD",811.9,.01)

"^DD",811.9,811.9,0,"IX","AG",811.9,51)

"^DD",811.9,811.9,0,"NM","REMINDER DEFINITION")

"^DD",811.9,811.9,0,"PT",142.14,.01)

"^DD",811.9,811.9,0,"PT",801.04,30)

"^DD",811.9,811.9,0,"PT",801.1,40)

"^DD",811.9,811.9,0,"PT",801.41,2)

"^DD",811.9,811.9,0,"PT",810.12,.01)

"^DD",811.9,811.9,0,"PT",810.22,1)

"^DD",811.9,811.9,0,"PT",810.33,.02)

"^DD",811.9,811.9,0,"PT",810.4,9)

"^DD",811.9,811.9,0,"PT",810.532,.01)

"^DD",811.9,811.9,0,"PT",810.545,.01)

"^DD",811.9,811.9,0,"PT",810.6,9)

"^DD",811.9,811.9,0,"PT",811.72,.01)

"^DD",811.9,811.9,0,"PT",811.9,1.4)

"^DD",811.9,811.9,0,"VRPK")
PXRM
"^DD",811.9,811.9,.01,0)
NAME^RFX^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(.X)) X
"^DD",811.9,811.9,.01,1,0)
^.1^^-1
"^DD",811.9,811.9,.01,1,2,0)
811.9^AD^MUMPS
"^DD",811.9,811.9,.01,1,2,1)
Q
"^DD",811.9,811.9,.01,1,2,2)
D DELEXTL^PXRMBXTL(DA)
"^DD",811.9,811.9,.01,1,2,"DT")
2980619
"^DD",811.9,811.9,.01,3)
Enter the name of the clinical reminder, 3-64 characters.
"^DD",811.9,811.9,.01,21,0)
^.001^10^10^3090604^^^^
"^DD",811.9,811.9,.01,21,1,0)
This field is the name of a clinical reminder definition. Nationally
"^DD",811.9,811.9,.01,21,2,0)
distributed reminder definition names are prefixed with "VA-". The
"^DD",811.9,811.9,.01,21,3,0)
VA- prefixed reminder definitions cannot be altered by a site, but
"^DD",811.9,811.9,.01,21,4,0)
may be inactivated so they will not be selectable or evaluated in
"^DD",811.9,811.9,.01,21,5,0)
the CPRS GUI.
"^DD",811.9,811.9,.01,21,6,0)
 
"^DD",811.9,811.9,.01,21,7,0)
Local modifications can be made to any "VA-" reminder definition by
"^DD",811.9,811.9,.01,21,8,0)
copying the definition to a new one with a unique name and then
"^DD",811.9,811.9,.01,21,9,0)
making modifications to the new definition which meet local
"^DD",811.9,811.9,.01,21,10,0)
criteria.
"^DD",811.9,811.9,.01,23,0)
^.001^2^2^3090604^^^^
"^DD",811.9,811.9,.01,23,1,0)
National reminders names will start with VA- and they will have a class
"^DD",811.9,811.9,.01,23,2,0)
of National. National reminders cannot be edited by sites. 
"^DD",811.9,811.9,.01,"DT")
3090529
"^DD",811.9,811.9,1.2,0)
PRINT NAME^F^^0;3^K:$L(X)>35!($L(X)<3) X
"^DD",811.9,811.9,1.2,1,0)
^.1^^0
"^DD",811.9,811.9,1.2,3)
Enter the PRINT NAME.
"^DD",811.9,811.9,1.2,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,1.2,21,1,0)
This is the name that is used when the results of a reminder evaluation
"^DD",811.9,811.9,1.2,21,2,0)
are displayed.
"^DD",811.9,811.9,1.2,"DT")
3000216
"^DD",811.9,811.9,1.3,0)
DO IN ADVANCE TIME FRAME^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.9,1.3,3)
Enter time period to mark the reminder due in advance (e.g., 6M,1Y).
"^DD",811.9,811.9,1.3,21,0)
^.001^6^6^3050124^^^^
"^DD",811.9,811.9,1.3,21,1,0)
This field is used to let a reminder become due earlier than the
"^DD",811.9,811.9,1.3,21,2,0)
date determined by adding the frequency to the date when the
"^DD",811.9,811.9,1.3,21,3,0)
reminder was last resolved. For example, if the frequency is 1Y (one
"^DD",811.9,811.9,1.3,21,4,0)
year) and the DO IN ADVANCE TIME FRAME is 1M (one month), the
"^DD",811.9,811.9,1.3,21,5,0)
reminder would have a status of "DUE SOON" 11 months after it was
"^DD",811.9,811.9,1.3,21,6,0)
last resolved. After one year has passed, the STATUS would be "DUE".
"^DD",811.9,811.9,1.3,"DT")
3000427
"^DD",811.9,811.9,1.4,0)
RELATED REMINDER GUIDELINE^P811.9'^PXD(811.9,^0;5^Q
"^DD",811.9,811.9,1.4,3)
Enter the related national reminder.
"^DD",811.9,811.9,1.4,21,0)
^.001^2^2^3070427^^^^
"^DD",811.9,811.9,1.4,21,1,0)
If a local reminder replaces a national reminder, this field can be
"^DD",811.9,811.9,1.4,21,2,0)
used to identify the related national reminder.
"^DD",811.9,811.9,1.4,"DT")
3070427
"^DD",811.9,811.9,1.6,0)
INACTIVE FLAG^SX^1:INACTIVE;^0;6^Q
"^DD",811.9,811.9,1.6,1,0)
^.1
"^DD",811.9,811.9,1.6,1,1,0)
^^TRIGGER^811.9^1.7
"^DD",811.9,811.9,1.6,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,1.1) X ^DD(811.9,1.6,1,1,1.4)
"^DD",811.9,811.9,1.6,1,1,1.1)
S X=DIV N %I,%H,% D NOW^%DTC S X=%
"^DD",811.9,811.9,1.6,1,1,1.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,2.1) X ^DD(811.9,1.6,1,1,2.4)
"^DD",811.9,811.9,1.6,1,1,2.1)
S X=DIV N %I,%H,% D NOW^%DTC S X=%
"^DD",811.9,811.9,1.6,1,1,2.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,"CREATE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DELETE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DT")
2971008
"^DD",811.9,811.9,1.6,1,1,"FIELD")
INACTIVE DATE
"^DD",811.9,811.9,1.6,3)
Enter "1" to inactivate the reminder.
"^DD",811.9,811.9,1.6,21,0)
^.001^6^6^3050121^^^^
"^DD",811.9,811.9,1.6,21,1,0)
Reminders that are inactive will not be evaluated. The Clinical
"^DD",811.9,811.9,1.6,21,2,0)
Maintenance component will return a message stating the reminder is
"^DD",811.9,811.9,1.6,21,3,0)
inactive and the date when it was made inactive.
"^DD",811.9,811.9,1.6,21,4,0)

"^DD",811.9,811.9,1.6,21,5,0)
Other applications that use reminders may use this flag to determine
"^DD",811.9,811.9,1.6,21,6,0)
if a reminder can be selected for inclusion.
"^DD",811.9,811.9,1.6,23,0)
^.001^7^7^3050121^^^^
"^DD",811.9,811.9,1.6,23,1,0)
When a reminder is inactive, the following will occur:
"^DD",811.9,811.9,1.6,23,2,0)
1. It cannot be selected for inclusion on a Health Summary. (Other
"^DD",811.9,811.9,1.6,23,3,0)
packages that use Reminders should follow this rule.)
"^DD",811.9,811.9,1.6,23,4,0)
2. In the Clinical Maintenance mode, a message will be returned stating the
"^DD",811.9,811.9,1.6,23,5,0)
reminder is inactive along with the date and time when it was made
"^DD",811.9,811.9,1.6,23,6,0)
inactive.
"^DD",811.9,811.9,1.6,23,7,0)
3. In any other mode, nothing will be returned.
"^DD",811.9,811.9,1.6,"DT")
2971008
"^DD",811.9,811.9,1.7,0)
INACTIVE CHANGE DATE^DX^^0;7^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,1.7,5,1,0)
811.9^1.6^1
"^DD",811.9,811.9,1.7,9)
^
"^DD",811.9,811.9,1.7,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,1.7,21,1,0)
This is the date and time when the INACTIVE FLAG was last changed. It
"^DD",811.9,811.9,1.7,21,2,0)
is set automatically. Users should never edit this field.
"^DD",811.9,811.9,1.7,23,0)
^.001^1^1^3050121^^^
"^DD",811.9,811.9,1.7,23,1,0)
This field is set by a trigger on INACTIVE FLAG.
"^DD",811.9,811.9,1.7,"DT")
2971008
"^DD",811.9,811.9,1.8,0)
IGNORE ON N/A^FX^^0;8^S X=$$UP^XLFSTR(X) K:'$$VIGNAC^PXRMINTR(X) X
"^DD",811.9,811.9,1.8,3)
Input a string of N/A code(s)
"^DD",811.9,811.9,1.8,21,0)
^.001^11^11^3050121^^^^
"^DD",811.9,811.9,1.8,21,1,0)
This field allows the user to stop reminders from being printed in
"^DD",811.9,811.9,1.8,21,2,0)
the Clinical Maintenance component if the reminder is N/A. This is a
"^DD",811.9,811.9,1.8,21,3,0)
free text field that can contain any combination of the following
"^DD",811.9,811.9,1.8,21,4,0)
codes:
"^DD",811.9,811.9,1.8,21,5,0)
 
"^DD",811.9,811.9,1.8,21,6,0)
Code  Description
"^DD",811.9,811.9,1.8,21,7,0)
 A    N/A due to not meeting age criteria.
"^DD",811.9,811.9,1.8,21,8,0)
 I    N/A due to inactive reminder.
"^DD",811.9,811.9,1.8,21,9,0)
 R    N/A due to the wrong race.
"^DD",811.9,811.9,1.8,21,10,0)
 S    N/A due to the wrong sex.
"^DD",811.9,811.9,1.8,21,11,0)
 *    N/A for any reason.
"^DD",811.9,811.9,1.8,"DT")
2991103
"^DD",811.9,811.9,1.9,0)
SEX SPECIFIC^S^F:FEMALE;M:MALE;^0;9^Q
"^DD",811.9,811.9,1.9,3)
Enter M or F if this reminder is sex specific.
"^DD",811.9,811.9,1.9,21,0)
^.001^8^8^3050124^^^^
"^DD",811.9,811.9,1.9,21,1,0)
This field is used to make a reminder sex specific. If an "F" is
"^DD",811.9,811.9,1.9,21,2,0)
entered, the reminder applies only to females. If an "M" is entered,
"^DD",811.9,811.9,1.9,21,3,0)
the reminder applies only to males. If it is left blank, then the
"^DD",811.9,811.9,1.9,21,4,0)
reminder is applicable to either sex.
"^DD",811.9,811.9,1.9,21,5,0)

"^DD",811.9,811.9,1.9,21,6,0)
If CUSTOM COHORT LOGIC is defined and it does not contain SEX, then
"^DD",811.9,811.9,1.9,21,7,0)
this field will be ignored.
"^DD",811.9,811.9,1.9,21,8,0)

"^DD",811.9,811.9,1.9,"DT")
2951109
"^DD",811.9,811.9,1.91,0)
PRIORITY^S^1:HIGH;2:MEDIUM;3:LOW;^0;10^Q
"^DD",811.9,811.9,1.91,3)
Enter the REMINDER PRIORITY.
"^DD",811.9,811.9,1.91,21,0)
^.001^1^1^3050121^^^^
"^DD",811.9,811.9,1.91,21,1,0)
REMINDER PRIORITY is used by the CPRS GUI for sorting purposes.
"^DD",811.9,811.9,1.91,"DT")
2990716
"^DD",811.9,811.9,2,0)
DESCRIPTION^811.92^^1;0
"^DD",811.9,811.9,2,21,0)
^.001^2^2^3081128^^^^
"^DD",811.9,811.9,2,21,1,0)
This field contains a description of the clinical reminder. It is
"^DD",811.9,811.9,2,21,2,0)
used to document its purpose and intended usage.
"^DD",811.9,811.9,2,"DT")
3070618
"^DD",811.9,811.9,3,0)
TECHNICAL DESCRIPTION^811.93^^2;0
"^DD",811.9,811.9,3,21,0)
^.001^2^2^3071004^^^^
"^DD",811.9,811.9,3,21,1,0)
The TECHNICAL DESCRIPTION is for documenting how a reminder is
"^DD",811.9,811.9,3,21,2,0)
supposed to function and why the definition is set up the way it is.
"^DD",811.9,811.9,3,"DT")
2960131
"^DD",811.9,811.9,7,0)
BASELINE AGE FINDINGS^811.97^^7;0
"^DD",811.9,811.9,7,21,0)
^.001^8^8^3050121^^^^
"^DD",811.9,811.9,7,21,1,0)
This multiple is for defining reminder frequency age ranges sets. It
"^DD",811.9,811.9,7,21,2,0)
can be used to specify different frequencies for different ages. For
"^DD",811.9,811.9,7,21,3,0)
example, you could define a frequency of every 3 years for ages 40
"^DD",811.9,811.9,7,21,4,0)
to 49 as the first age range set, a frequency of every 2 years for
"^DD",811.9,811.9,7,21,5,0)
ages 50 to 59 as the second, and a frequency of once a year for ages
"^DD",811.9,811.9,7,21,6,0)
60 to 75. With this set the reminder would be due every 3 years for
"^DD",811.9,811.9,7,21,7,0)
ages 40 to 49, every 2 years for ages 50 to 59, and once a year for
"^DD",811.9,811.9,7,21,8,0)
ages 60 to 75.
"^DD",811.9,811.9,7,"DT")
2970711
"^DD",811.9,811.9,20,0)
FINDINGS^811.902V^^20;0
"^DD",811.9,811.9,20,21,0)
^.001^5^5^3090304^^^^
"^DD",811.9,811.9,20,21,1,0)
This multiple identifies which finding items to use when evaluating the
"^DD",811.9,811.9,20,21,2,0)
reminder. Finding items may be categorized into 4 types of findings:
"^DD",811.9,811.9,20,21,3,0)
age, patient cohort, resolution, and informational. How patient findings
"^DD",811.9,811.9,20,21,4,0)
are used depends on the values given to the various fields associated with 
"^DD",811.9,811.9,20,21,5,0)
findings. See the description of those fields to learn what they do.
"^DD",811.9,811.9,20,"DT")
3040513
"^DD",811.9,811.9,25,0)
FUNCTION FINDINGS^811.925I^^25;0
"^DD",811.9,811.9,25,21,0)
^.001^13^13^3050124^^^^
"^DD",811.9,811.9,25,21,1,0)
This multiple is used to define function findings; each function
"^DD",811.9,811.9,25,21,2,0)
finding is labeled by an integer: the FUNCTION FINDING NUMBER. The
"^DD",811.9,811.9,25,21,3,0)
user defines a function finding by inputting a FUNCTION FINDING
"^DD",811.9,811.9,25,21,4,0)
NUMBER and associated FUNCTION STRING. Function Findings are then
"^DD",811.9,811.9,25,21,5,0)
used in the reminder definition logic by reference to FF(FUNCTION
"^DD",811.9,811.9,25,21,6,0)
FINDING NUMBER). For example, if function findings 1 and 2 were
"^DD",811.9,811.9,25,21,7,0)
defined, then they could be used in the cohort or resolution logic as
"^DD",811.9,811.9,25,21,8,0)
FF(1) and FF(2).
"^DD",811.9,811.9,25,21,9,0)

"^DD",811.9,811.9,25,21,10,0)
Function findings can be used in the resolution logic with one
"^DD",811.9,811.9,25,21,11,0)
caveat. They do not have a date associated with them; therefore, the
"^DD",811.9,811.9,25,21,12,0)
resolution logic must be written so that it cannot be made true
"^DD",811.9,811.9,25,21,13,0)
solely by a function finding.
"^DD",811.9,811.9,25,"DT")
3030131
"^DD",811.9,811.9,30,0)
CUSTOMIZED COHORT LOGIC^FX^^30;1^K:'$$VALID^PXRMLOG(X,.DA,3,512) X
"^DD",811.9,811.9,30,.1)
CUSTOMIZED PATIENT COHORT LOGIC (OPTIONAL)
"^DD",811.9,811.9,30,1,0)
^.1^^0
"^DD",811.9,811.9,30,3)
Enter a Boolean string from 3-512 characters that uses findings to define the patient cohort.
"^DD",811.9,811.9,30,21,0)
^.001^10^10^3050121^^^^
"^DD",811.9,811.9,30,21,1,0)
This field may be used to define a customized Patient Cohort Logic
"^DD",811.9,811.9,30,21,2,0)
string. Typically this is done when the USE IN PATIENT COHORT LOGIC
"^DD",811.9,811.9,30,21,3,0)
fields associated with each finding do not provide the ability to
"^DD",811.9,811.9,30,21,4,0)
create the required logic string. The requirement for custom logic
"^DD",811.9,811.9,30,21,5,0)
arises when the required logic is more complex than can be
"^DD",811.9,811.9,30,21,6,0)
represented by simple concatenation of Boolean logical operators and
"^DD",811.9,811.9,30,21,7,0)
findings.
"^DD",811.9,811.9,30,21,8,0)

"^DD",811.9,811.9,30,21,9,0)
Detailed information on how to create the custom logic string can be
"^DD",811.9,811.9,30,21,10,0)
found in the Clinical Reminders Manager Manual.
"^DD",811.9,811.9,30,"DT")
3041227
"^DD",811.9,811.9,31,0)
INTERNAL PATIENT COHORT LOGIC^FX^^31;1^K:$L(X)>512!($L(X)<3) X
"^DD",811.9,811.9,31,3)
Do not edit this field.
"^DD",811.9,811.9,31,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,31,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,31,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,31,23,0)
^.001^4^4^3050121^^^^
"^DD",811.9,811.9,31,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,31,23,2,0)
user-entered Patient Cohort Logic, then it is copied into this field.
"^DD",811.9,811.9,31,23,3,0)
Otherwise this field is determined using the USE IN PATIENT COHORT
"^DD",811.9,811.9,31,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,31,"DT")
3031027
"^DD",811.9,811.9,32,0)
PATIENT COHORT FINDINGS COUNT^NJ2,0X^^32;1^K:+X'=X!(X>154)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,32,3)
Do not edit this field.
"^DD",811.9,811.9,32,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,32,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,32,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,32,23,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.9,32,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,32,23,2,0)
the number of findings that are in the INTERNAL PATIENT COHORT LOGIC
"^DD",811.9,811.9,32,23,3,0)
field.
"^DD",811.9,811.9,32,"DT")
3031024
"^DD",811.9,811.9,33,0)
PATIENT COHORT FINDINGS LIST^FX^^32;2^K:$L(X)>512!($L(X)<1) X
"^DD",811.9,811.9,33,3)
Do not edit this field.
"^DD",811.9,811.9,33,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,33,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,33,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,33,23,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,33,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,33,23,2,0)
a list of the findings in the INTERNAL PATIENT COHORT LOGIC field.
"^DD",811.9,811.9,33,"DT")
3031024
"^DD",811.9,811.9,34,0)
CUSTOMIZED RESOLUTION LOGIC^FX^^34;1^K:'$$VALIDR^PXRMLOG(X,.DA,5,512) X
"^DD",811.9,811.9,34,.1)
CUSTOMIZED RESOLUTION LOGIC (OPTIONAL)
"^DD",811.9,811.9,34,1,0)
^.1^^0
"^DD",811.9,811.9,34,3)
Enter a Boolean string from 5-512 characters that includes findings that resolve the reminder.
"^DD",811.9,811.9,34,21,0)
^.001^11^11^3050121^^^^
"^DD",811.9,811.9,34,21,1,0)
This field may be used to define a customized Resolution Logic
"^DD",811.9,811.9,34,21,2,0)
string. Typically this is done when the USE IN RESOLUTION LOGIC
"^DD",811.9,811.9,34,21,3,0)
fields associated with each finding do not provide the ability to
"^DD",811.9,811.9,34,21,4,0)
create the required logic string. The requirement for custom logic
"^DD",811.9,811.9,34,21,5,0)
arises when the required logic is more complex than can be
"^DD",811.9,811.9,34,21,6,0)
represented by simple concatenation of Boolean logical operators and
"^DD",811.9,811.9,34,21,7,0)
findings.
"^DD",811.9,811.9,34,21,8,0)

"^DD",811.9,811.9,34,21,9,0)
Detailed information on how to create the custom logic string can be
"^DD",811.9,811.9,34,21,10,0)
found in the Clinical Reminders Manager Manual.
"^DD",811.9,811.9,34,21,11,0)

"^DD",811.9,811.9,34,"DT")
3050110
"^DD",811.9,811.9,35,0)
INTERNAL RESOLUTION LOGIC^FX^^35;1^K:'$$VALIDR^PXRMLOG(X,.DA,5,512) X
"^DD",811.9,811.9,35,3)
Do not edit this field.
"^DD",811.9,811.9,35,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,35,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,35,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,35,23,0)
^.001^4^4^3050121^^^^
"^DD",811.9,811.9,35,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,35,23,2,0)
user-entered Resolution Logic, then it is copied into this field.
"^DD",811.9,811.9,35,23,3,0)
Otherwise this field is determined using the USE IN RESOLUTION
"^DD",811.9,811.9,35,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,35,"DT")
3070511
"^DD",811.9,811.9,36,0)
RESOLUTION FINDINGS COUNT^NJ2,0X^^36;1^K:+X'=X!(X>154)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,36,3)
Do not edit this field.
"^DD",811.9,811.9,36,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,36,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,36,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,36,23,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,36,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,36,23,2,0)
the number of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,36,"DT")
3031024
"^DD",811.9,811.9,37,0)
RESOLUTION FINDINGS LIST^FX^^36;2^K:$L(X)>512!($L(X)<1) X
"^DD",811.9,811.9,37,3)
Do not edit this field.
"^DD",811.9,811.9,37,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,37,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,37,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,37,23,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,37,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,37,23,2,0)
the list of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,37,"DT")
3031024
"^DD",811.9,811.9,40,0)
AGE FINDINGS COUNT^NJ2,0X^^40;1^K:+X'=X!(X>154)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,40,3)
Do not edit this field.
"^DD",811.9,811.9,40,21,0)
^.001^2^2^3050121^^
"^DD",811.9,811.9,40,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,40,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,40,23,0)
^.001^3^3^3050121^^
"^DD",811.9,811.9,40,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,40,23,2,0)
the number of findings that can override the baseline age range frequency
"^DD",811.9,811.9,40,23,3,0)
set. It should never be edited by hand.
"^DD",811.9,811.9,40,"DT")
3031024
"^DD",811.9,811.9,41,0)
AGE FINDINGS LIST^FX^^40;2^K:$L(X)>512!($L(X)<1) X
"^DD",811.9,811.9,41,3)
Do not edit this field.
"^DD",811.9,811.9,41,21,0)
^.001^2^2^3050121^^
"^DD",811.9,811.9,41,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,41,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,41,23,0)
^.001^3^3^3050121^^
"^DD",811.9,811.9,41,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,41,23,2,0)
a list of the findings that can override the baseline age range frequency.
"^DD",811.9,811.9,41,23,3,0)
It should never be edited by hand.
"^DD",811.9,811.9,41,"DT")
3031024
"^DD",811.9,811.9,42,0)
INFORMATION FINDINGS COUNT^NJ2,0X^^42;1^K:+X'=X!(X>154)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,42,3)
Do not edit this field.
"^DD",811.9,811.9,42,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.9,42,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,42,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,42,23,0)
^.001^3^3^3050121^^^
"^DD",811.9,811.9,42,23,1,0)
This field is computed by the Clinical Reminders software and
"^DD",811.9,811.9,42,23,2,0)
contains the number of findings that are information only. It should
"^DD",811.9,811.9,42,23,3,0)
never be edited by hand.
"^DD",811.9,811.9,42,"DT")
3031024
"^DD",811.9,811.9,43,0)
INFORMATION FINDINGS LIST^FX^^42;2^K:$L(X)>512!($L(X)<1) X
"^DD",811.9,811.9,43,3)
Do not edit this field.
"^DD",811.9,811.9,43,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.9,43,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,43,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,43,23,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.9,43,23,1,0)
This field is computed by the Clinical Reminders software and
"^DD",811.9,811.9,43,23,2,0)
contains the number of information findings. It should never be
"^DD",811.9,811.9,43,23,3,0)
edited by hand.
"^DD",811.9,811.9,43,"DT")
3031024
"^DD",811.9,811.9,45,0)
CUSTOM DATE DUE^FX^^45;1^K:'$$VCDUE^PXRMCDUE(X,.DA) X
"^DD",811.9,811.9,45,3)
Enter the CUSTOM DATE DUE
"^DD",811.9,811.9,45,4)
D XHELP^PXRMCDUE
"^DD",811.9,811.9,45,21,0)
^.001^16^16^3050124^^^
"^DD",811.9,811.9,45,21,1,0)
When a CUSTOM DATE DUE is defined, it takes precedence over the
"^DD",811.9,811.9,45,21,2,0)
standard date due calculation. This means the normal date due
"^DD",811.9,811.9,45,21,3,0)
calculation that is based on the dates of the resolution findings
"^DD",811.9,811.9,45,21,4,0)
and the final frequency is not done. Only the dates of the findings
"^DD",811.9,811.9,45,21,5,0)
and the frequencies specified in the Custom Date Due string are
"^DD",811.9,811.9,45,21,6,0)
used. Any finding that is in the reminder definition can be used in
"^DD",811.9,811.9,45,21,7,0)
the Custom Date Due string; it is not limited to those defined as
"^DD",811.9,811.9,45,21,8,0)
resolution findings.
"^DD",811.9,811.9,45,21,9,0)

"^DD",811.9,811.9,45,21,10,0)
The final age range will still be used to determine if the patient
"^DD",811.9,811.9,45,21,11,0)
is in the cohort; however, the frequency associated with this age
"^DD",811.9,811.9,45,21,12,0)
range is not used. Only the frequencies specified in the Custom Date
"^DD",811.9,811.9,45,21,13,0)
Due String are used. They are added to the date of the associated
"^DD",811.9,811.9,45,21,14,0)
finding to determine the dates used by either the MIN_DATE or
"^DD",811.9,811.9,45,21,15,0)
MAX_DATE functions.
"^DD",811.9,811.9,45,21,16,0)

"^DD",811.9,811.9,45,"DT")
3030807
"^DD",811.9,811.9,46,0)
CUSTOM DATE DUE FUNCTION^F^^46;1^K:$L(X)>30!($L(X)<3) X
"^DD",811.9,811.9,46,3)
Do not edit this field.
"^DD",811.9,811.9,46,21,0)
^^2^2^3050121^
"^DD",811.9,811.9,46,21,1,0)
This field contains the function used in the CUSTOM DATE DUE. It is
"^DD",811.9,811.9,46,21,2,0)
created automatically and should not be set by hand.
"^DD",811.9,811.9,46,"DT")
3030807
"^DD",811.9,811.9,47,0)
NUMBER OF ARGUMENTS^NJ2,0^^46;2^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,47,3)
Do not edit this field.
"^DD",811.9,811.9,47,21,0)
^^2^2^3050121^
"^DD",811.9,811.9,47,21,1,0)
This is the number of arguments (findings) used in the CUSTOM DATE
"^DD",811.9,811.9,47,21,2,0)
DUE. It is created automatically and should not be set by hand.
"^DD",811.9,811.9,47,"DT")
3030807
"^DD",811.9,811.9,48,0)
CUSTOM DATE DUE ARG LIST^811.948A^^47;0
"^DD",811.9,811.9,48,21,0)
^^4^4^3050121^
"^DD",811.9,811.9,48,21,1,0)
This is the list of arguments (findings) used in the CUSTOM DATE
"^DD",811.9,811.9,48,21,2,0)
DUE. It is used to efficiently calculate the resolution date from
"^DD",811.9,811.9,48,21,3,0)
the custom date due string. It is created automatically and should
"^DD",811.9,811.9,48,21,4,0)
not be set by hand.
"^DD",811.9,811.9,50,0)
WEB SITES^811.9002^^50;0
"^DD",811.9,811.9,50,21,0)
^.001^5^5^3050124^^^^
"^DD",811.9,811.9,50,21,1,0)
This multiple contains Web sites that have information related to
"^DD",811.9,811.9,50,21,2,0)
this reminder. The list of web sites will be displayed in the CPRS
"^DD",811.9,811.9,50,21,3,0)
GUI if the user right-clicks on a reminder and then selects
"^DD",811.9,811.9,50,21,4,0)
reference information. If a particular web site is clicked on, the
"^DD",811.9,811.9,50,21,5,0)
GUI will open a browser at that web site.
"^DD",811.9,811.9,50,"DT")
2991129
"^DD",811.9,811.9,51,0)
LINKED REMINDER DIALOG^*P801.41'^PXRMD(801.41,^51;1^S DIC("S")="I $P(^(0),U,4)=""R""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.9,51,1,0)
^.1
"^DD",811.9,811.9,51,1,1,0)
811.9^AG
"^DD",811.9,811.9,51,1,1,1)
S ^PXD(811.9,"AG",$E(X,1,30),DA)=""
"^DD",811.9,811.9,51,1,1,2)
K ^PXD(811.9,"AG",$E(X,1,30),DA)
"^DD",811.9,811.9,51,1,1,"DT")
2991005
"^DD",811.9,811.9,51,3)
Enter the dialog to be used in CPRS to resolve this reminder. 
"^DD",811.9,811.9,51,12)
Reminders may only point to reminder dialog entries
"^DD",811.9,811.9,51,12.1)
S DIC("S")="I $P(^(0),U,4)=""R"""
"^DD",811.9,811.9,51,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.9,51,21,1,0)
This is the Reminder Dialog that will be used when the reminder is
"^DD",811.9,811.9,51,21,2,0)
processed in the CPRS GUI.
"^DD",811.9,811.9,51,"DT")
3000423
"^DD",811.9,811.9,60,0)
GENERAL COHORT FOUND TEXT^811.9003^^60;0
"^DD",811.9,811.9,60,9)
^
"^DD",811.9,811.9,60,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.9,60,21,1,0)
This optional field defines the detailed text to display when the
"^DD",811.9,811.9,60,21,2,0)
Patient Cohort Logic is true. Detailed text is used for components
"^DD",811.9,811.9,60,21,3,0)
such as Clinical Maintenance and MyHealtheVet Detailed.
"^DD",811.9,811.9,60,"DT")
3000504
"^DD",811.9,811.9,61,0)
GENERAL COHORT NOT FOUND TEXT^811.961^^61;0
"^DD",811.9,811.9,61,9)
^
"^DD",811.9,811.9,61,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,61,21,1,0)
This optional field defines the detailed text to display when the
"^DD",811.9,811.9,61,21,2,0)
Patient Cohort Logic is false. Detailed text is used for components
"^DD",811.9,811.9,61,21,3,0)
such as Clinical Maintenance and MyHealtheVet Detailed.
"^DD",811.9,811.9,61,21,4,0)

"^DD",811.9,811.9,61,"DT")
3000504
"^DD",811.9,811.9,62,0)
# OF GEN. COHORT FOUND LINES^F^^62;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,62,3)
Do not edit this field.
"^DD",811.9,811.9,62,9)
^
"^DD",811.9,811.9,62,21,0)
^.001^5^5^3050124^^^^
"^DD",811.9,811.9,62,21,1,0)
This is the number of lines in the GENERAL COHORT FOUND TEXT. If the
"^DD",811.9,811.9,62,21,2,0)
number ends with "T" then the text contains TIU objects. This field
"^DD",811.9,811.9,62,21,3,0)
is set automatically during reminder edit and should never be edited
"^DD",811.9,811.9,62,21,4,0)
by hand.
"^DD",811.9,811.9,62,21,5,0)

"^DD",811.9,811.9,62,"DT")
3040604
"^DD",811.9,811.9,63,0)
# GEN. COHORT NOT FOUND LINES^F^^62;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,63,3)
Do not edit this field.
"^DD",811.9,811.9,63,9)
^
"^DD",811.9,811.9,63,21,0)
^.001^5^5^3050124^^^^
"^DD",811.9,811.9,63,21,1,0)
This is the number of lines in the GENERAL COHORT NOT FOUND TEXT. If
"^DD",811.9,811.9,63,21,2,0)
the number ends with "T" then the text contains TIU objects. This
"^DD",811.9,811.9,63,21,3,0)
field is set automatically during reminder edit and should never be
"^DD",811.9,811.9,63,21,4,0)
edited by hand.
"^DD",811.9,811.9,63,21,5,0)

"^DD",811.9,811.9,63,"DT")
3040604
"^DD",811.9,811.9,65,0)
GENERAL RES. FOUND TEXT^811.965^^65;0
"^DD",811.9,811.9,65,9)
^
"^DD",811.9,811.9,65,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,65,21,1,0)
This optional field defines the detailed text to display when the
"^DD",811.9,811.9,65,21,2,0)
Resolution Logic is true. Detailed text is used for components such as
"^DD",811.9,811.9,65,21,3,0)
Clinical Maintenance and MyHealtheVet Detailed.
"^DD",811.9,811.9,65,21,4,0)

"^DD",811.9,811.9,65,"DT")
3040607
"^DD",811.9,811.9,66,0)
GENERAL RES. NOT FOUND TEXT^811.966^^66;0
"^DD",811.9,811.9,66,9)
^
"^DD",811.9,811.9,66,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,66,21,1,0)
This optional field defines the detailed text to display when the
"^DD",811.9,811.9,66,21,2,0)
Resolution Logic is false. Detailed text is used for components such as
"^DD",811.9,811.9,66,21,3,0)
Clinical Maintenance and MyHealtheVet Detailed.
"^DD",811.9,811.9,66,21,4,0)

"^DD",811.9,811.9,66,"DT")
3040607
"^DD",811.9,811.9,67,0)
# GEN. RES. FOUND LINES^F^^67;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,67,3)
Do not edit this field.
"^DD",811.9,811.9,67,9)
^
"^DD",811.9,811.9,67,21,0)
^.001^5^5^3050124^^^
"^DD",811.9,811.9,67,21,1,0)
This is the number of lines in the GENERAL RESOLUTION FOUND TEXT. If
"^DD",811.9,811.9,67,21,2,0)
the number ends with "T" then the text contains TIU objects. This
"^DD",811.9,811.9,67,21,3,0)
field is set automatically during reminder edit and should never be
"^DD",811.9,811.9,67,21,4,0)
edited by hand.
"^DD",811.9,811.9,67,21,5,0)

"^DD",811.9,811.9,67,"DT")
3040604
"^DD",811.9,811.9,68,0)
# GEN. RES. NOT FOUND LINES^F^^67;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,68,3)
Do not edit this field.
"^DD",811.9,811.9,68,9)
^
"^DD",811.9,811.9,68,21,0)
^.001^5^5^3050124^^^
"^DD",811.9,811.9,68,21,1,0)
This is the number of lines in the GENERAL RESOLUTION NOT FOUND
"^DD",811.9,811.9,68,21,2,0)
TEXT. If the number ends with "T" then the text contains TIU
"^DD",811.9,811.9,68,21,3,0)
objects. This field is set automatically during reminder edit and
"^DD",811.9,811.9,68,21,4,0)
should never be edited by hand.
"^DD",811.9,811.9,68,21,5,0)

"^DD",811.9,811.9,68,"DT")
3040604
"^DD",811.9,811.9,69,0)
RESCISSION DATE^D^^0;11^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,69,3)
Enter the RESCISSION DATE
"^DD",811.9,811.9,69,21,0)
^.001^1^1^3050121^^^
"^DD",811.9,811.9,69,21,1,0)
This is the rescission date for this reminder definition.
"^DD",811.9,811.9,69,"DT")
3040617
"^DD",811.9,811.9,70,0)
SUMMARY COHORT FOUND TEXT^811.9004^^70;0
"^DD",811.9,811.9,70,9)
^
"^DD",811.9,811.9,70,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.9,70,21,1,0)
This optional field defines the summary text to display when the
"^DD",811.9,811.9,70,21,2,0)
Patient Cohort Logic is true. Summary text is used for components such
"^DD",811.9,811.9,70,21,3,0)
as MyHealtheVet Summary.
"^DD",811.9,811.9,71,0)
SUMMARY COHORT NOT FOUND TEXT^811.971^^71;0
"^DD",811.9,811.9,71,9)
^
"^DD",811.9,811.9,71,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.9,71,21,1,0)
This optional field defines the summary text to display when the
"^DD",811.9,811.9,71,21,2,0)
Patient Cohort Logic is false. Summary text is used for components such 
"^DD",811.9,811.9,71,21,3,0)
MyHealtheVet Summary.
"^DD",811.9,811.9,72,0)
# SUM. COHORT FOUND LINES^F^^72;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,72,3)
Do not edit this field.
"^DD",811.9,811.9,72,9)
^
"^DD",811.9,811.9,72,21,0)
^.001^5^5^3050124^^^^
"^DD",811.9,811.9,72,21,1,0)
This is the number of lines in the SUMMARY COHORT FOUND TEXT. If the
"^DD",811.9,811.9,72,21,2,0)
number ends with "T" then the text contains TIU objects. This field
"^DD",811.9,811.9,72,21,3,0)
is set automatically during reminder edit and should never be edited
"^DD",811.9,811.9,72,21,4,0)
by hand.  
"^DD",811.9,811.9,72,21,5,0)

"^DD",811.9,811.9,72,"DT")
3040604
"^DD",811.9,811.9,73,0)
# SUM. COHORT NOT FOUND LINES^F^^72;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,73,3)
Do not edit this field.
"^DD",811.9,811.9,73,9)
^
"^DD",811.9,811.9,73,21,0)
^.001^4^4^3050124^^
"^DD",811.9,811.9,73,21,1,0)
This is the number of lines in the SUMMARY COHORT NOT FOUND TEXT. If
"^DD",811.9,811.9,73,21,2,0)
the number ends with "T" then the text contains TIU objects. This
"^DD",811.9,811.9,73,21,3,0)
field is set automatically during reminder edit and should never be
"^DD",811.9,811.9,73,21,4,0)
edited by hand.  
"^DD",811.9,811.9,73,"DT")
3040607
"^DD",811.9,811.9,75,0)
SUMMARY RES. FOUND TEXT^811.975^^75;0
"^DD",811.9,811.9,75,9)
^
"^DD",811.9,811.9,75,21,0)
^.001^4^4^3050124^^^
"^DD",811.9,811.9,75,21,1,0)
This optional field defines the summary text to display when the
"^DD",811.9,811.9,75,21,2,0)
Resolution Logic is true. Summary text is used for components such 
"^DD",811.9,811.9,75,21,3,0)
as MyHealtheVet Summary.
"^DD",811.9,811.9,75,21,4,0)

"^DD",811.9,811.9,75,"DT")
3040608
"^DD",811.9,811.9,76,0)
SUMMARY RES. NOT FOUND TEXT^811.976^^76;0
"^DD",811.9,811.9,76,9)
^
"^DD",811.9,811.9,76,21,0)
^.001^4^4^3050124^^^
"^DD",811.9,811.9,76,21,1,0)
This optional field defines the summary text to display when the
"^DD",811.9,811.9,76,21,2,0)
Resolution Logic is false. Summary text is used for components such 
"^DD",811.9,811.9,76,21,3,0)
as MyHealtheVet Summary.
"^DD",811.9,811.9,76,21,4,0)

"^DD",811.9,811.9,77,0)
# SUM. RES. FOUND LINES^F^^77;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,77,3)
Do not edit this field.
"^DD",811.9,811.9,77,9)
^
"^DD",811.9,811.9,77,21,0)
^.001^5^5^3050124^^
"^DD",811.9,811.9,77,21,1,0)
This is the number of lines in the SUMMARY RESOLUTION FOUND TEXT. If
"^DD",811.9,811.9,77,21,2,0)
the number ends with "T" then the text contains TIU objects. This
"^DD",811.9,811.9,77,21,3,0)
field is set automatically during reminder edit and should never be
"^DD",811.9,811.9,77,21,4,0)
edited by hand.  
"^DD",811.9,811.9,77,21,5,0)

"^DD",811.9,811.9,77,"DT")
3040608
"^DD",811.9,811.9,78,0)
# SUM. RES. NOT FOUND LINES^F^^77;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.9,78,3)
Do not edit this field.
"^DD",811.9,811.9,78,9)
^
"^DD",811.9,811.9,78,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,78,21,1,0)
This is the number of lines in the SUMMARY RESOLUTION NOT FOUND
"^DD",811.9,811.9,78,21,2,0)
TEXT. If the number ends with "T" then the text contains TIU
"^DD",811.9,811.9,78,21,3,0)
objects. This field is set automatically during reminder edit and
"^DD",811.9,811.9,78,21,4,0)
should never be edited by hand.
"^DD",811.9,811.9,78,"DT")
3040608
"^DD",811.9,811.9,100,0)
CLASS^RSX^N:NATIONAL;V:VISN;L:LOCAL;^100;1^K:'$$VCLASS^PXRMINTR(X) X
"^DD",811.9,811.9,100,3)
Enter the CLASS.
"^DD",811.9,811.9,100,21,0)
^.001^5^5^3090707^^^^
"^DD",811.9,811.9,100,21,1,0)
This is the CLASS of the definition. Possible classes are "N" for
"^DD",811.9,811.9,100,21,2,0)
national, "V" for VISN, and "L" for local. National definitions cannot
"^DD",811.9,811.9,100,21,3,0)
be edited by sites.
"^DD",811.9,811.9,100,21,4,0)

"^DD",811.9,811.9,100,21,5,0)

"^DD",811.9,811.9,100,"DT")
3090707
"^DD",811.9,811.9,101,0)
SPONSOR^P811.6X^PXRMD(811.6,^100;2^K:'$$VSPONSOR^PXRMINTR(X) X
"^DD",811.9,811.9,101,3)
Enter the SPONSOR.
"^DD",811.9,811.9,101,21,0)
^.001^1^1^3050124^^^
"^DD",811.9,811.9,101,21,1,0)
This is the organization or group that sponsors this definition.
"^DD",811.9,811.9,101,"DT")
3010604
"^DD",811.9,811.9,102,0)
REVIEW DATE^D^^100;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,102,3)
Enter the REVIEW DATE.
"^DD",811.9,811.9,102,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.9,102,21,1,0)
The REVIEW DATE is used to determine when the definition should be
"^DD",811.9,811.9,102,21,2,0)
reviewed to verify that it is current with the latest standards and
"^DD",811.9,811.9,102,21,3,0)
guidelines. You can find all reminder definitions whose review date
"^DD",811.9,811.9,102,21,4,0)
has passed using the Clinical Reminders Review Date Report.
"^DD",811.9,811.9,102,"DT")
3010416
"^DD",811.9,811.9,103,0)
USAGE^RFX^^100;4^S X=$$UP^XLFSTR(X) K:'$$VUSAGE^PXRMINTR(X) X
"^DD",811.9,811.9,103,3)
Enter usage codes.
"^DD",811.9,811.9,103,21,0)
^^18^18^3091214^
"^DD",811.9,811.9,103,21,1,0)
The Usage field describes how the reminder definition will be
"^DD",811.9,811.9,103,21,2,0)
used. This field must contain C if the reminder is to be selected
"^DD",811.9,811.9,103,21,3,0)
in CPRS. The L or the O values will override all other values. For
"^DD",811.9,811.9,103,21,4,0)
example, if L and C are defined in the usage field, the Reminder
"^DD",811.9,811.9,103,21,5,0)
will not show on the cover sheet in CPRS, because L is in the
"^DD",811.9,811.9,103,21,6,0)
Usage field.
"^DD",811.9,811.9,103,21,7,0)
 
"^DD",811.9,811.9,103,21,8,0)
This is free text field and can contain any combination of the
"^DD",811.9,811.9,103,21,9,0)
following codes: 
"^DD",811.9,811.9,103,21,10,0)
                                 
"^DD",811.9,811.9,103,21,11,0)
             Code  Usage 
"^DD",811.9,811.9,103,21,12,0)
              C    CPRS  
"^DD",811.9,811.9,103,21,13,0)
              L    Reminder Patient List
"^DD",811.9,811.9,103,21,14,0)
              O    Reminder Order Checks
"^DD",811.9,811.9,103,21,15,0)
              P    Patient
"^DD",811.9,811.9,103,21,16,0)
              R    Reminder Reports  
"^DD",811.9,811.9,103,21,17,0)
              X    Reminder Extracts  
"^DD",811.9,811.9,103,21,18,0)
              *    All of the above, except L, and O.
"^DD",811.9,811.9,103,23,0)
^^1^1^3091105^
"^DD",811.9,811.9,103,23,1,0)

"^DD",811.9,811.9,103,"DT")
3091214
"^DD",811.9,811.9,110,0)
EDIT HISTORY^811.9001D^^110;0
"^DD",811.9,811.9,110,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.9,110,21,1,0)
This multiple is used to record a history of changes made to the
"^DD",811.9,811.9,110,21,2,0)
definition.
"^DD",811.9,811.9001,0)
EDIT HISTORY SUB-FIELD^^2^3
"^DD",811.9,811.9001,0,"DT")
3010416
"^DD",811.9,811.9001,0,"IX","B",811.9001,.01)

"^DD",811.9,811.9001,0,"NM","EDIT HISTORY")

"^DD",811.9,811.9001,0,"UP")
811.9
"^DD",811.9,811.9001,.01,0)
EDIT DATE^D^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9001,.01,1,0)
^.1
"^DD",811.9,811.9001,.01,1,1,0)
811.9001^B
"^DD",811.9,811.9001,.01,1,1,1)
S ^PXD(811.9,DA(1),110,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.9001,.01,1,1,2)
K ^PXD(811.9,DA(1),110,"B",$E(X,1,30),DA)
"^DD",811.9,811.9001,.01,3)
Do not edit this field.
"^DD",811.9,811.9001,.01,21,0)
^.001^2^2^3050124^^^
"^DD",811.9,811.9001,.01,21,1,0)
This is the date and time when the editing was done. This field is set
"^DD",811.9,811.9001,.01,21,2,0)
automatically and should not be changed by the user.
"^DD",811.9,811.9001,.01,"DT")
3010416
"^DD",811.9,811.9001,1,0)
EDIT BY^P200'^VA(200,^0;2^Q
"^DD",811.9,811.9001,1,3)
Do not edit this field.
"^DD",811.9,811.9001,1,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.9001,1,21,1,0)
This is the person who did the editing. This field is set automatically
"^DD",811.9,811.9001,1,21,2,0)
and should not be changed by the user.
"^DD",811.9,811.9001,1,"DT")
3010416
"^DD",811.9,811.9001,2,0)
EDIT COMMENTS^811.90012^^1;0
"^DD",811.9,811.9001,2,21,0)
^.001^2^2^3050124^^^^
"^DD",811.9,811.9001,2,21,1,0)
This word-processing field can be used to record the changes made
"^DD",811.9,811.9001,2,21,2,0)
during the editing session.
"^DD",811.9,811.9001,2,"DT")
3010425
"^DD",811.9,811.90012,0)
EDIT COMMENTS SUB-FIELD^^.01^1
"^DD",811.9,811.90012,0,"DT")
3010416
"^DD",811.9,811.90012,0,"NM","EDIT COMMENTS")

"^DD",811.9,811.90012,0,"UP")
811.9001
"^DD",811.9,811.90012,.01,0)
EDIT COMMENTS^W^^0;1^Q
"^DD",811.9,811.90012,.01,3)
Enter your edit comments.
"^DD",811.9,811.90012,.01,"DT")
3010425
"^DD",811.9,811.9002,0)
WEB SITES SUB-FIELD^^1^3
"^DD",811.9,811.9002,0,"DT")
2991130
"^DD",811.9,811.9002,0,"IX","C",811.9002,.01)

"^DD",811.9,811.9002,0,"NM","WEB SITES")

"^DD",811.9,811.9002,0,"UP")
811.9
"^DD",811.9,811.9002,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",811.9,811.9002,.01,1,0)
^.1
"^DD",811.9,811.9002,.01,1,1,0)
811.9002^C
"^DD",811.9,811.9002,.01,1,1,1)
S ^PXD(811.9,DA(1),50,"C",$E(X,1,30),DA)=""
"^DD",811.9,811.9002,.01,1,1,2)
K ^PXD(811.9,DA(1),50,"C",$E(X,1,30),DA)
"^DD",811.9,811.9002,.01,1,1,"DT")
3010502
"^DD",811.9,811.9002,.01,3)
Enter a URL.
"^DD",811.9,811.9002,.01,21,0)
^.001^1^1^3050121^^^^
"^DD",811.9,811.9002,.01,21,1,0)
This is the URL for the web site.
"^DD",811.9,811.9002,.01,"DT")
3010502
"^DD",811.9,811.9002,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",811.9,811.9002,.02,3)
Enter the web site title.
"^DD",811.9,811.9002,.02,21,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.9002,.02,21,1,0)
This is the web site title that is used by the CPRS GUI. It will
"^DD",811.9,811.9002,.02,21,2,0)
appear after a right click, allowing the user to select the web
"^DD",811.9,811.9002,.02,21,3,0)
site.
"^DD",811.9,811.9002,.02,"DT")
2991130
"^DD",811.9,811.9002,1,0)
WEB SITE DESCRIPTION^811.90021^^1;0
"^DD",811.9,811.9002,1,21,0)
^.001^1^1^3050121^^^^
"^DD",811.9,811.9002,1,21,1,0)
This field contains a description of the Web site.
"^DD",811.9,811.90021,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.90021,0,"DT")
2991130
"^DD",811.9,811.90021,0,"NM","WEB SITE DESCRIPTION")

"^DD",811.9,811.90021,0,"UP")
811.9002
"^DD",811.9,811.90021,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.90021,.01,3)
Enter the Web site description.
"^DD",811.9,811.90021,.01,"DT")
2991130
"^DD",811.9,811.9003,0)
GENERAL COHORT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9003,0,"DT")
3000110
"^DD",811.9,811.9003,0,"NM","GENERAL COHORT FOUND TEXT")

"^DD",811.9,811.9003,0,"UP")
811.9
"^DD",811.9,811.9003,.01,0)
GENERAL COHORT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9003,.01,.1)
GENERAL PATIENT COHORT FOUND TEXT
"^DD",811.9,811.9003,.01,3)
Enter general text to display when the Patient Cohort Logic is true.
"^DD",811.9,811.9003,.01,"DT")
3031016
"^DD",811.9,811.9004,0)
SUMMARY COHORT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9004,0,"DT")
3040604
"^DD",811.9,811.9004,0,"NM","SUMMARY COHORT FOUND TEXT")

"^DD",811.9,811.9004,0,"UP")
811.9
"^DD",811.9,811.9004,.01,0)
SUMMARY COHORT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9004,.01,.1)
SUMMARY PATIENT COHORT FOUND TEXT
"^DD",811.9,811.9004,.01,3)
Enter the summary text to display when the Patient Cohort Logic is true.
"^DD",811.9,811.9004,.01,21,0)
^.001^1^1^3050124^^^^
"^DD",811.9,811.9004,.01,21,1,0)

"^DD",811.9,811.9004,.01,"DT")
3040608
"^DD",811.9,811.902,0)
FINDINGS SUB-FIELD^^28^27
"^DD",811.9,811.902,0,"DT")
3080829
"^DD",811.9,811.902,0,"IX","B",811.902,.01)

"^DD",811.9,811.902,0,"NM","FINDINGS")

"^DD",811.9,811.902,0,"UP")
811.9
"^DD",811.9,811.902,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.9,811.902,.01,1,0)
^.1^^-1
"^DD",811.9,811.902,.01,1,1,0)
811.902^B
"^DD",811.9,811.902,.01,1,1,1)
S ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.902,.01,1,1,2)
K ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.9,811.902,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.9,811.902,.01,3)
Enter a finding item in the format: Prefix.Name
"^DD",811.9,811.902,.01,21,0)
^.001^7^7^3090304^^^^
"^DD",811.9,811.902,.01,21,1,0)
This field identifies the finding items included in the reminder
"^DD",811.9,811.902,.01,21,2,0)
definition.
"^DD",811.9,811.902,.01,21,3,0)

"^DD",811.9,811.902,.01,21,4,0)
Hint: To add a second occurrence of a finding, enclose it in quotes,
"^DD",811.9,811.902,.01,21,5,0)
i.e., "Prefix.Name"
"^DD",811.9,811.902,.01,21,6,0)

"^DD",811.9,811.902,.01,21,7,0)

"^DD",811.9,811.902,.01,"DT")
3090529
"^DD",811.9,811.902,.01,"V",0)
^.12P^17^17
"^DD",811.9,811.902,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.9,811.902,.01,"V",2,0)
9999999.09^EDUCATION TOPICS^10^ED^n^n
"^DD",811.9,811.902,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.9,811.902,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.9,811.902,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.9,811.902,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.9,811.902,.01,"V",7,0)
601.71^MH TESTS AND SURVEYS^35^MH^n^n
"^DD",811.9,811.902,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.9,811.902,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.9,811.902,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.9,811.902,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.9,811.902,.01,"V",12,0)
811.5^REMINDER TERM^60^RT^n^n
"^DD",811.9,811.902,.01,"V",13,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.9,811.902,.01,"V",14,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.9,811.902,.01,"V",15,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.9,811.902,.01,"V",16,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.9,811.902,.01,"V",17,0)
810.9^REMINDER LOCATION LIST^17^RL^n^n
"^DD",811.9,811.902,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,1,1,0)
^.1^^0
"^DD",811.9,811.902,1,3)
Enter the minimum age for the frequency associated with this finding.
"^DD",811.9,811.902,1,21,0)
^.001^2^2^3050120^^^^
"^DD",811.9,811.902,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.902,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.902,1,"DT")
3031107
"^DD",811.9,811.902,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,2,1,0)
^.1^^0
"^DD",811.9,811.902,2,3)
Enter the maximum age for the frequency associated with this finding.
"^DD",811.9,811.902,2,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.902,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.902,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.902,2,"DT")
3031107
"^DD",811.9,811.902,3,0)
REMINDER FREQUENCY^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.902,3,1,0)
^.1^^0
"^DD",811.9,811.902,3,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.902,3,21,0)
^.001^6^6^3050212^^^^
"^DD",811.9,811.902,3,21,1,0)
If this finding is true (found) then use this frequency and the age
"^DD",811.9,811.902,3,21,2,0)
range specified by the MINIMUM AGE and MAXIMUM AGE to override the
"^DD",811.9,811.902,3,21,3,0)
baseline frequency age range set. The frequency is input as nD, nM,
"^DD",811.9,811.902,3,21,4,0)
or nY, where n is a number and D stands for days, M for months, Y
"^DD",811.9,811.902,3,21,5,0)
for years. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.902,3,21,6,0)
values 365D, 12M, or 1Y would all work.
"^DD",811.9,811.902,3,"DT")
3031107
"^DD",811.9,811.902,4,0)
FOUND TEXT^811.9024^^1;0
"^DD",811.9,811.902,4,9)
^
"^DD",811.9,811.902,4,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.902,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,4,21,2,0)
output if this finding is found (true).
"^DD",811.9,811.902,5,0)
NOT FOUND TEXT^811.9025^^2;0
"^DD",811.9,811.902,5,9)
^
"^DD",811.9,811.902,5,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.902,5,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,5,21,2,0)
output if the finding is not found (false).
"^DD",811.9,811.902,6,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,6,3)
Enter an optional rank from 1 to 999 or leave blank.
"^DD",811.9,811.902,6,21,0)
^.001^11^11^3050120^^^^
"^DD",811.9,811.902,6,21,1,0)
This field is used to rank the frequency and age range sets associated
"^DD",811.9,811.902,6,21,2,0)
with a finding. If there is more than one true finding that can
"^DD",811.9,811.902,6,21,3,0)
override the baseline frequency age range set, then the determination of
"^DD",811.9,811.902,6,21,4,0)
which one to use is made based on the finding with the highest rank.
"^DD",811.9,811.902,6,21,5,0)
Ranks can range from 1 to 999 with 1 being the highest rank.
"^DD",811.9,811.902,6,21,6,0)
 
"^DD",811.9,811.902,6,21,7,0)
When the Rank field is blank (null) for all true findings that can
"^DD",811.9,811.902,6,21,8,0)
override the baseline frequency age range set, then the frequency that
"^DD",811.9,811.902,6,21,9,0)
will cause the reminder to be given most often will be used. For
"^DD",811.9,811.902,6,21,10,0)
example, if finding 1 has a frequency of 6 months, and finding 2 has a
"^DD",811.9,811.902,6,21,11,0)
frequency of 1 year, finding 1 will be used to override the baseline.
"^DD",811.9,811.902,6,"DT")
2990325
"^DD",811.9,811.902,7,0)
USE IN RESOLUTION LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;6^Q
"^DD",811.9,811.902,7,1,0)
^.1^^0
"^DD",811.9,811.902,7,3)
Enter the logic operator to be used in the default Internal Resolution Logic.
"^DD",811.9,811.902,7,21,0)
^.001^27^27^3050124^^^^
"^DD",811.9,811.902,7,21,1,0)
This optional field is used to indicate that this finding item
"^DD",811.9,811.902,7,21,2,0)
should be included as part of the resolution logic for this
"^DD",811.9,811.902,7,21,3,0)
reminder. Note - if the CUSTOMIZED RESOLUTION LOGIC is defined then
"^DD",811.9,811.902,7,21,4,0)
this field is ignored.
"^DD",811.9,811.902,7,21,5,0)
 
"^DD",811.9,811.902,7,21,6,0)
Valid entries for the USE IN RESOLUTION LOGIC field are:
"^DD",811.9,811.902,7,21,7,0)
 
"^DD",811.9,811.902,7,21,8,0)
                       EQUATES TO BOOLEAN
"^DD",811.9,811.902,7,21,9,0)
  OPERATOR   VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,7,21,10,0)
  --------   -----     ------------------
"^DD",811.9,811.902,7,21,11,0)
             BLANK     not included in Resolution Logic
"^DD",811.9,811.902,7,21,12,0)
                       (Use @ to delete value)
"^DD",811.9,811.902,7,21,13,0)
   &         AND       &(Finding)
"^DD",811.9,811.902,7,21,14,0)
   !         OR        !(Finding)
"^DD",811.9,811.902,7,21,15,0)
   &'        AND NOT   &'(Finding)
"^DD",811.9,811.902,7,21,16,0)
   !'        OR NOT    !'(Finding)
"^DD",811.9,811.902,7,21,17,0)
 
"^DD",811.9,811.902,7,21,18,0)
All finding items that have a value in this field are automatically
"^DD",811.9,811.902,7,21,19,0)
combined to create the DEFAULT RESOLUTION LOGIC.
"^DD",811.9,811.902,7,21,20,0)
 
"^DD",811.9,811.902,7,21,21,0)
After all findings have been evaluated, the finding item is replaced
"^DD",811.9,811.902,7,21,22,0)
by its true or false value in the resolution logic and the
"^DD",811.9,811.902,7,21,23,0)
resolution logic is evaluated. If the resolution logic evaluates to
"^DD",811.9,811.902,7,21,24,0)
true, then the last resolution date is determined. The applicable
"^DD",811.9,811.902,7,21,25,0)
frequency is added to the resolution date to determine when the
"^DD",811.9,811.902,7,21,26,0)
reminder is next due. If the resolution logic evaluates to false,
"^DD",811.9,811.902,7,21,27,0)
then reminder is due.
"^DD",811.9,811.902,7,"DT")
3031107
"^DD",811.9,811.902,8,0)
USE IN PATIENT COHORT LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.902,8,1,0)
^.1^^0
"^DD",811.9,811.902,8,3)
Enter the logic operator to be used in the default Internal Patient Cohort Logic
"^DD",811.9,811.902,8,21,0)
^.001^31^31^3050124^^^^
"^DD",811.9,811.902,8,21,1,0)
This optional field is used to indicate that this finding item
"^DD",811.9,811.902,8,21,2,0)
should be included as part of the Patient Cohort Logic for this
"^DD",811.9,811.902,8,21,3,0)
reminder. Note - if the CUSTOMIZED COHORT LOGIC is defined then this
"^DD",811.9,811.902,8,21,4,0)
field is ignored.
"^DD",811.9,811.902,8,21,5,0)
 
"^DD",811.9,811.902,8,21,6,0)
Valid entries for the USE IN PATIENT COHORT LOGIC field are:
"^DD",811.9,811.902,8,21,7,0)
 
"^DD",811.9,811.902,8,21,8,0)
                     EQUATES TO BOOLEAN
"^DD",811.9,811.902,8,21,9,0)
  OPERATOR  VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,8,21,10,0)
  --------  -----     ------------------
"^DD",811.9,811.902,8,21,11,0)
            BLANK     not included in Patient Cohort Logic
"^DD",811.9,811.902,8,21,12,0)
                      (Use @ to delete value)
"^DD",811.9,811.902,8,21,13,0)
   &        AND       &(Finding)
"^DD",811.9,811.902,8,21,14,0)
   !        OR        !(Finding)
"^DD",811.9,811.902,8,21,15,0)
   &'       AND NOT   &'(Finding)
"^DD",811.9,811.902,8,21,16,0)
   !'       OR NOT    !'(Finding)
"^DD",811.9,811.902,8,21,17,0)
 
"^DD",811.9,811.902,8,21,18,0)
All finding items that have a value in this field are automatically
"^DD",811.9,811.902,8,21,19,0)
combined to create the DEFAULT COHORT LOGIC. The default logic
"^DD",811.9,811.902,8,21,20,0)
string initially includes (SEX)&(AGE), regardless of whether the
"^DD",811.9,811.902,8,21,21,0)
baseline specifies SEX and AGE criteria. Each finding item with a
"^DD",811.9,811.902,8,21,22,0)
value in the Use In Patient Cohort Logic field is appended to the
"^DD",811.9,811.902,8,21,23,0)
string by using the operator and finding item. For example, if
"^DD",811.9,811.902,8,21,24,0)
finding item 2 had an operator for this field of "&" then the string
"^DD",811.9,811.902,8,21,25,0)
would be (SEX)&(AGE)&FI(2).
"^DD",811.9,811.902,8,21,26,0)

"^DD",811.9,811.902,8,21,27,0)
After all findings have been evaluated, the finding item is replaced
"^DD",811.9,811.902,8,21,28,0)
by its true or false value in the cohort logic and the cohort logic
"^DD",811.9,811.902,8,21,29,0)
is evaluated. If the cohort logic evaluates to true, then the reminder
"^DD",811.9,811.902,8,21,30,0)
is applicable to the patient. If the cohort logic evaluates to false,
"^DD",811.9,811.902,8,21,31,0)
then reminder is non-applicable or N/A.
"^DD",811.9,811.902,8,"DT")
3031107
"^DD",811.9,811.902,9,0)
BEGINNING DATE/TIME^FX^^0;8^S X=$$COTN^PXRMDATE(X) K:(($L(X)<1)!($L(X)>20)!('$$VDT^PXRMINTR(X))) X
"^DD",811.9,811.902,9,3)
Enter the Beginning Date/Time
"^DD",811.9,811.902,9,21,0)
^.001^13^13^3050124^^^^
"^DD",811.9,811.902,9,21,1,0)
This is the beginning date/time to search for the finding. When
"^DD",811.9,811.902,9,21,2,0)
combined with the ENDING DATE/TIME, they define a date range in
"^DD",811.9,811.902,9,21,3,0)
which to search for the finding.
"^DD",811.9,811.902,9,21,4,0)

"^DD",811.9,811.902,9,21,5,0)
This can be entered in acceptable FileMan date/time formats and
"^DD",811.9,811.902,9,21,6,0)
abbreviations. In addition, you may use the abbreviations T-NY or
"^DD",811.9,811.902,9,21,7,0)
NOW-NY, where N is an integer and Y stands for years. If this is
"^DD",811.9,811.902,9,21,8,0)
null, then the beginning date/time will correspond with the 
"^DD",811.9,811.902,9,21,9,0)
date/time of the oldest entry.
"^DD",811.9,811.902,9,21,10,0)

"^DD",811.9,811.902,9,21,11,0)
See the FileMan Getting Started Manual to learn about acceptable
"^DD",811.9,811.902,9,21,12,0)
FileMan date/time formats and abbreviations.
"^DD",811.9,811.902,9,21,13,0)

"^DD",811.9,811.902,9,"DT")
3040924
"^DD",811.9,811.902,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:N;^0;9^Q
"^DD",811.9,811.902,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.9,811.902,10,21,0)
^.001^4^4^3050124^^^^
"^DD",811.9,811.902,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.9,811.902,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES then both
"^DD",811.9,811.902,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.9,811.902,10,21,4,0)
only to taxonomy findings.
"^DD",811.9,811.902,10,"DT")
2990325
"^DD",811.9,811.902,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,11,3)
Enter a number between 0 and 999.
"^DD",811.9,811.902,11,21,0)
^.001^16^16^3050124^^^^
"^DD",811.9,811.902,11,21,1,0)
This field applies only to health factors. In order to understand
"^DD",811.9,811.902,11,21,2,0)
how it works, you need to understand how health factors work in the
"^DD",811.9,811.902,11,21,3,0)
reminder evaluation process. If you are not clear about this, see
"^DD",811.9,811.902,11,21,4,0)
the health factor section of the Clinical Reminder Manager Manual.
"^DD",811.9,811.902,11,21,5,0)

"^DD",811.9,811.902,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.9,811.902,11,21,7,0)
within a category. A problem can arise if there are two or more
"^DD",811.9,811.902,11,21,8,0)
health factors within a category and they both have the same date.
"^DD",811.9,811.902,11,21,9,0)
(This can happen if both health factors are given during the same
"^DD",811.9,811.902,11,21,10,0)
encounter).  When the dates are the same, the health factor with the
"^DD",811.9,811.902,11,21,11,0)
highest WITHIN CATEGORY RANK will be used. This is a numerical value
"^DD",811.9,811.902,11,21,12,0)
like RANK FREQUENCY, with 1 being the highest rank.
"^DD",811.9,811.902,11,21,13,0)

"^DD",811.9,811.902,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0, then the
"^DD",811.9,811.902,11,21,15,0)
categorization of health factors will be ignored and the health
"^DD",811.9,811.902,11,21,16,0)
factor will be treated as a distinct finding.
"^DD",811.9,811.902,11,"DT")
3000501
"^DD",811.9,811.902,12,0)
ENDING DATE/TIME^FX^^0;11^S X=$$COTN^PXRMDATE(X) K:(($L(X)<1)!($L(X)>20)!('$$VDT^PXRMINTR(X))) X
"^DD",811.9,811.902,12,3)
Enter the Ending Date/Time
"^DD",811.9,811.902,12,21,0)
^.001^15^15^3050124^^^^
"^DD",811.9,811.902,12,21,1,0)
This is the ending date/time to search for findings. When combined
"^DD",811.9,811.902,12,21,2,0)
with the BEGINNING DATE/TIME they define a date range in which to
"^DD",811.9,811.902,12,21,3,0)
search for the finding. The ENDING DATE/TIME must be after the
"^DD",811.9,811.902,12,21,4,0)
BEGINNING DATE/TIME.
"^DD",811.9,811.902,12,21,5,0)

"^DD",811.9,811.902,12,21,6,0)
This can be entered in acceptable FileMan date/time formats and
"^DD",811.9,811.902,12,21,7,0)
abbreviations. In addition, you may use the abbreviations T-NY or 
"^DD",811.9,811.902,12,21,8,0)
NOW-NY, where N is an integer and Y stands for years. If this is null,
"^DD",811.9,811.902,12,21,9,0)
then the end date/time will correspond with the date/time of the
"^DD",811.9,811.902,12,21,10,0)
most recent entry.  
"^DD",811.9,811.902,12,21,11,0)
                                 
"^DD",811.9,811.902,12,21,12,0)
See the FileMan Getting Started Manual to learn about acceptable
"^DD",811.9,811.902,12,21,13,0)
FileMan date/time formats and abbreviations.
"^DD",811.9,811.902,12,21,14,0)

"^DD",811.9,811.902,12,21,15,0)

"^DD",811.9,811.902,12,"DT")
3040924
"^DD",811.9,811.902,13,0)
MH SCALE^NJ15,0X^^0;12^K:+X'=X!(X>999999999999999)!(X<1)!('$$VSCALEF^PXRMMH(X)) X
"^DD",811.9,811.902,13,3)
Enter the scale number.
"^DD",811.9,811.902,13,4)
D SCHELPF^PXRMMH
"^DD",811.9,811.902,13,21,0)
^.001^3^3^3070413^^
"^DD",811.9,811.902,13,21,1,0)
This applies only to Mental Health Instrument findings. It sets the
"^DD",811.9,811.902,13,21,2,0)
default scale, i.e., the value for V in the Condition.
"^DD",811.9,811.902,13,21,3,0)

"^DD",811.9,811.902,13,"DT")
3070430
"^DD",811.9,811.902,14,0)
CONDITION^FX^^3;1^K:($L(X)<3)!($L(X)>225)!('$$VCOND^PXRMCOND(X)) X
"^DD",811.9,811.902,14,3)
Answer must be 3-225 characters in length.
"^DD",811.9,811.902,14,21,0)
^.001^49^49^3050124^^^^
"^DD",811.9,811.902,14,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.9,811.902,14,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.9,811.902,14,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.9,811.902,14,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.9,811.902,14,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.9,811.902,14,21,6,0)
(e.g., 3).
"^DD",811.9,811.902,14,21,7,0)
 
"^DD",811.9,811.902,14,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.9,811.902,14,21,9,0)
identified as V in the statement regardless of the type of finding. If 
"^DD",811.9,811.902,14,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.9,811.902,14,21,11,0)
considered as found (true); otherwise the finding is considered as not
"^DD",811.9,811.902,14,21,12,0)
found (false).
"^DD",811.9,811.902,14,21,13,0)
 
"^DD",811.9,811.902,14,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.9,811.902,14,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.9,811.902,14,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.9,811.902,14,21,17,0)
         
"^DD",811.9,811.902,14,21,18,0)
Typical examples of M code are as follows:
"^DD",811.9,811.902,14,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.9,811.902,14,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.9,811.902,14,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,14,21,22,0)
    systolic and diastolic values
"^DD",811.9,811.902,14,21,23,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,14,21,24,0)
    systolic or diastolic values
"^DD",811.9,811.902,14,21,25,0)
    I V["BLACK" for VA-RACE computed finding where race contains BLACK
"^DD",811.9,811.902,14,21,26,0)
 
"^DD",811.9,811.902,14,21,27,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.9,811.902,14,21,28,0)
for the value, and examples:
"^DD",811.9,811.902,14,21,29,0)
 
"^DD",811.9,811.902,14,21,30,0)
Finding type                Field Value Used        Example M Code
"^DD",811.9,811.902,14,21,31,0)
 
"^DD",811.9,811.902,14,21,32,0)
 Drug                       None
"^DD",811.9,811.902,14,21,33,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.9,811.902,14,21,34,0)
 Exam                       Result                  I V="N"
"^DD",811.9,811.902,14,21,35,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.9,811.902,14,21,36,0)
 Immunization               Series                  I V="P"
"^DD",811.9,811.902,14,21,37,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.9,811.902,14,21,38,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.9,811.902,14,21,39,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.9,811.902,14,21,40,0)
 Radiology Procedure        None
"^DD",811.9,811.902,14,21,41,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.9,811.902,14,21,42,0)
 Reminder Taxonomy          None
"^DD",811.9,811.902,14,21,43,0)
 Skin Test                  Result                  I V="N"
"^DD",811.9,811.902,14,21,44,0)
 VA Drug Class              None
"^DD",811.9,811.902,14,21,45,0)
 VA Generic                 None
"^DD",811.9,811.902,14,21,46,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.9,811.902,14,21,47,0)
 
"^DD",811.9,811.902,14,21,48,0)
For details about allowed CONDITIONS for each finding type, see the
"^DD",811.9,811.902,14,21,49,0)
Clinical Reminders Manager Manual.
"^DD",811.9,811.902,14,"DT")
3030923
"^DD",811.9,811.902,15,0)
CONDITION CASE SENSITIVE^S^0:NO;1:YES;^3;2^Q
"^DD",811.9,811.902,15,3)
Enter NO to make the condition case insensitive.
"^DD",811.9,811.902,15,21,0)
^.001^3^3^3050124^^^^
"^DD",811.9,811.902,15,21,1,0)
When CONDITION CASE SENSITIVE is NO, then the CONDITION will be
"^DD",811.9,811.902,15,21,2,0)
evaluated without regard to case. The default is YES, so that
"^DD",811.9,811.902,15,21,3,0)
CONDITION evaluation is case sensitive.
"^DD",811.9,811.902,15,"DT")
3040907
"^DD",811.9,811.902,16,0)
RXTYPE^FX^^0;13^S X=$$UP^XLFSTR(X) K:($L(X)>20)!($L(X)<1)!('$$VRXTYPE^PXRMRXTY(X)) X
"^DD",811.9,811.902,16,3)
Enter the RXTYPE string.
"^DD",811.9,811.902,16,4)
D RXTYXHLP^PXRMRXTY
"^DD",811.9,811.902,16,21,0)
^.001^6^6^3050124^^^^
"^DD",811.9,811.902,16,21,1,0)
RXTYPE applies only to drug findings; it controls the search for
"^DD",811.9,811.902,16,21,2,0)
patient medications. The possible values for RXTYPE are "I" for
"^DD",811.9,811.902,16,21,3,0)
inpatient, "N" for non-VA meds, and "O" for outpatient. RXTYPE can
"^DD",811.9,811.902,16,21,4,0)
be any combination of these such as "NO" which will search for
"^DD",811.9,811.902,16,21,5,0)
non-VA meds and outpatient medications. If RXTYPE is blank it is
"^DD",811.9,811.902,16,21,6,0)
equivalent to a value of "INO".
"^DD",811.9,811.902,16,"DT")
3040924
"^DD",811.9,811.902,17,0)
OCCURRENCE COUNT^NJ2,0^^0;14^K:+X'=X!(X>99)!(X<-99)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,17,3)
Type a Number between -99 and 99, 0 Decimal Digits
"^DD",811.9,811.902,17,21,0)
^.001^7^7^3050212^^^^
"^DD",811.9,811.902,17,21,1,0)
This is the maximum number of occurrences of the finding in the date
"^DD",811.9,811.902,17,21,2,0)
range to return. If the OCCURRENCE COUNT is input as a positive number,
"^DD",811.9,811.902,17,21,3,0)
N, up to N of the most recent occurrences will be returned and the
"^DD",811.9,811.902,17,21,4,0)
finding will take the value of the most recent occurrence. If the
"^DD",811.9,811.902,17,21,5,0)
OCCURRENCE COUNT is input as a negative number then this behavior is
"^DD",811.9,811.902,17,21,6,0)
reversed. Up to N of the oldest occurrences will be returned and the
"^DD",811.9,811.902,17,21,7,0)
finding will take the value of the oldest occurrence in the list.
"^DD",811.9,811.902,17,"DT")
3030922
"^DD",811.9,811.902,18,0)
USE STATUS/COND IN SEARCH^S^1:YES;0:NO;^3;3^Q
"^DD",811.9,811.902,18,3)
Enter a "Yes" if you want the STATUS LIST and/or CONDITION used in the finding search.
"^DD",811.9,811.902,18,21,0)
^.001^11^11^3060509^^^^
"^DD",811.9,811.902,18,21,1,0)
Give this field a value of "YES" if you want the STATUS LIST and/or
"^DD",811.9,811.902,18,21,2,0)
CONDITION applied to each result found in the date range for this
"^DD",811.9,811.902,18,21,3,0)
finding. Only results that have a status on the list or for which
"^DD",811.9,811.902,18,21,4,0)
the CONDITION is true will be retained. The maximum number to retain
"^DD",811.9,811.902,18,21,5,0)
is specified by the OCCURRENCE COUNT.
"^DD",811.9,811.902,18,21,6,0)

"^DD",811.9,811.902,18,21,7,0)
Note - if the finding has both a STATUS LIST and a CONDITION the
"^DD",811.9,811.902,18,21,8,0)
status check will be made first; the CONDITION will be applied only
"^DD",811.9,811.902,18,21,9,0)
if the finding passes the status check.
"^DD",811.9,811.902,18,21,10,0)

"^DD",811.9,811.902,18,21,11,0)

"^DD",811.9,811.902,18,"DT")
3060509
"^DD",811.9,811.902,21,0)
STATUS LIST^811.90221^^5;0
"^DD",811.9,811.902,21,9)
^
"^DD",811.9,811.902,21,21,0)
^.001^6^6^3050212^^^^
"^DD",811.9,811.902,21,21,1,0)
This field applies to finding types that have an associated status.
"^DD",811.9,811.902,21,21,2,0)
When the search for patient findings is done only those findings that
"^DD",811.9,811.902,21,21,3,0)
have a status on the list can be true. The allowable values depend on
"^DD",811.9,811.902,21,21,4,0)
the finding type. If no statuses are specified then the default list
"^DD",811.9,811.902,21,21,5,0)
for each finding type will be used. The default lists can be found in
"^DD",811.9,811.902,21,21,6,0)
the Clinical Reminders Manager Manual.
"^DD",811.9,811.902,22,0)
INTERNAL CONDITION^F^^10;1^K:$L(X)>245!($L(X)<3) X
"^DD",811.9,811.902,22,3)
Do not edit this field.
"^DD",811.9,811.902,22,21,0)
^.001^2^2^3050212^^^^
"^DD",811.9,811.902,22,21,1,0)
This is the internal form of the condition. It is set automatically and
"^DD",811.9,811.902,22,21,2,0)
should never be set by hand.
"^DD",811.9,811.902,22,"DT")
3030915
"^DD",811.9,811.902,23,0)
V SUBSCRIPT LIST^F^^11;1^K:$L(X)>245!($L(X)<1) X
"^DD",811.9,811.902,23,3)
Do not edit this field.
"^DD",811.9,811.902,23,21,0)
^.001^3^3^3050212^^^^
"^DD",811.9,811.902,23,21,1,0)
This is a list of V value subscripts used in the CONDITION. It is used
"^DD",811.9,811.902,23,21,2,0)
when the CONDITION is not case sensitive. This should never be set by
"^DD",811.9,811.902,23,21,3,0)
hand.
"^DD",811.9,811.902,23,"DT")
3030915
"^DD",811.9,811.902,24,0)
NO. OF FOUND TEXT LINES^F^^6;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.902,24,3)
Do not edit this field.
"^DD",811.9,811.902,24,9)
^
"^DD",811.9,811.902,24,21,0)
^.001^5^5^3050212^^^^
"^DD",811.9,811.902,24,21,1,0)
This is the number of lines in the found text. If the number ends
"^DD",811.9,811.902,24,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.902,24,21,3,0)
automatically during reminder edit and should never be edited by
"^DD",811.9,811.902,24,21,4,0)
hand.
"^DD",811.9,811.902,24,21,5,0)

"^DD",811.9,811.902,24,"DT")
3031017
"^DD",811.9,811.902,25,0)
NO. NOT FOUND TEXT LINES^F^^6;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.902,25,3)
Do not edit this field.
"^DD",811.9,811.902,25,9)
^
"^DD",811.9,811.902,25,21,0)
^.001^5^5^3050212^^^^
"^DD",811.9,811.902,25,21,1,0)
This is the number of lines in the not found text. If the number
"^DD",811.9,811.902,25,21,2,0)
ends with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.902,25,21,3,0)
automatically during reminder edit and should never be edited by
"^DD",811.9,811.902,25,21,4,0)
hand.
"^DD",811.9,811.902,25,21,5,0)

"^DD",811.9,811.902,25,"DT")
3031017
"^DD",811.9,811.902,26,0)
COMPUTED FINDING PARAMETER^F^^15;E1,245^K:$L(X)>245!($L(X)<1) X
"^DD",811.9,811.902,26,3)
Answer must be 1-245 characters in length.
"^DD",811.9,811.902,26,21,0)
^.001^1^1^3050212^^^^
"^DD",811.9,811.902,26,21,1,0)
This field is used to pass a parameter into the computed finding.
"^DD",811.9,811.902,26,"DT")
3060609
"^DD",811.9,811.902,27,0)
USE START DATE^S^0:NO;1:YES;^0;15^Q
"^DD",811.9,811.902,27,3)
Enter YES if you want to use the Start Date as the date of the finding
"^DD",811.9,811.902,27,21,0)
^.001^4^4^3050808^^^^
"^DD",811.9,811.902,27,21,1,0)
For findings that have a Start Date and a Stop Date the default is
"^DD",811.9,811.902,27,21,2,0)
to use the Stop Date as the date of the finding. Enter a YES for
"^DD",811.9,811.902,27,21,3,0)
this field if you want to use the Start Date as the date of the
"^DD",811.9,811.902,27,21,4,0)
finding.
"^DD",811.9,811.902,27,"DT")
3050708
"^DD",811.9,811.902,28,0)
INCLUDE VISIT DATA^S^0:NO;1:YES;^0;16^Q
"^DD",811.9,811.902,28,3)
Enter YES or NO
"^DD",811.9,811.902,28,21,0)
^^5^5^3060127^
"^DD",811.9,811.902,28,21,1,0)
This applies only to V file findings; if it is "YES" then data from
"^DD",811.9,811.902,28,21,2,0)
the associated visit will be available for use in a Condition. The
"^DD",811.9,811.902,28,21,3,0)
default is "NO."
"^DD",811.9,811.902,28,21,4,0)

"^DD",811.9,811.902,28,21,5,0)

"^DD",811.9,811.902,28,"DT")
3060127
"^DD",811.9,811.90221,0)
STATUS LIST SUB-FIELD^^.01^1
"^DD",811.9,811.90221,0,"DT")
3020802
"^DD",811.9,811.90221,0,"IX","B",811.90221,.01)

"^DD",811.9,811.90221,0,"NM","STATUS LIST")

"^DD",811.9,811.90221,0,"UP")
811.902
"^DD",811.9,811.90221,.01,0)
STATUS^MFX^^0;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.9,811.90221,.01,1,0)
^.1
"^DD",811.9,811.90221,.01,1,1,0)
811.90221^B
"^DD",811.9,811.90221,.01,1,1,1)
S ^PXD(811.9,DA(2),20,DA(1),5,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.90221,.01,1,1,2)
K ^PXD(811.9,DA(2),20,DA(1),5,"B",$E(X,1,30),DA)
"^DD",811.9,811.90221,.01,3)
Enter a status.
"^DD",811.9,811.90221,.01,4)

"^DD",811.9,811.90221,.01,21,0)
^.001^10^10^3050124^^^^
"^DD",811.9,811.90221,.01,21,1,0)
This multiple is used  to store a list of possible statuses that the
"^DD",811.9,811.90221,.01,21,2,0)
reminder  will look for when evaluating a finding item. This field
"^DD",811.9,811.90221,.01,21,3,0)
should only be  populated  if the finding item is a Drug, Radiology
"^DD",811.9,811.90221,.01,21,4,0)
Procedure, Order, or  Taxonomy. This field is designed  to only be
"^DD",811.9,811.90221,.01,21,5,0)
populated  through the Reminder  Definition/Term editors; this field
"^DD",811.9,811.90221,.01,21,6,0)
should not be edited using FileMan. The reason for this is because
"^DD",811.9,811.90221,.01,21,7,0)
each finding item can only have certain possible statuses assigned 
"^DD",811.9,811.90221,.01,21,8,0)
to it. The editors will evaluate the finding items and allow the
"^DD",811.9,811.90221,.01,21,9,0)
users to only  select a status from an appropriate list of statuses
"^DD",811.9,811.90221,.01,21,10,0)
for that finding item.
"^DD",811.9,811.90221,.01,"DT")
3040903
"^DD",811.9,811.9024,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9024,0,"DT")
2990325
"^DD",811.9,811.9024,0,"NM","FOUND TEXT")

"^DD",811.9,811.9024,0,"UP")
811.902
"^DD",811.9,811.9024,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9024,.01,3)
Enter the found text.
"^DD",811.9,811.9024,.01,"DT")
2990325
"^DD",811.9,811.9025,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9025,0,"DT")
2990325
"^DD",811.9,811.9025,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.9025,0,"UP")
811.902
"^DD",811.9,811.9025,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9025,.01,3)
Enter the not found text.
"^DD",811.9,811.9025,.01,"DT")
2990325
"^DD",811.9,811.92,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.92,0,"NM","DESCRIPTION")

"^DD",811.9,811.92,0,"UP")
811.9
"^DD",811.9,811.92,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.92,.01,3)
Enter the REMINDER DESCRIPTION.
"^DD",811.9,811.92,.01,"DT")
3081128
"^DD",811.9,811.925,0)
FUNCTION FINDINGS SUB-FIELD^^16^15
"^DD",811.9,811.925,0,"DT")
3041116
"^DD",811.9,811.925,0,"ID",3)
W:$D(^(3)) "   ",$P(^(3),U,1)
"^DD",811.9,811.925,0,"IX","B",811.925,.01)

"^DD",811.9,811.925,0,"NM","FUNCTION FINDINGS")

"^DD",811.9,811.925,0,"UP")
811.9
"^DD",811.9,811.925,.01,0)
FUNCTION FINDING NUMBER^MNJ3,0X^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X I $D(X) S DINUM=X
"^DD",811.9,811.925,.01,1,0)
^.1
"^DD",811.9,811.925,.01,1,1,0)
811.925^B
"^DD",811.9,811.925,.01,1,1,1)
S ^PXD(811.9,DA(1),25,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.925,.01,1,1,2)
K ^PXD(811.9,DA(1),25,"B",$E(X,1,30),DA)
"^DD",811.9,811.925,.01,3)
Enter the number of the function finding you are defining.
"^DD",811.9,811.925,.01,21,0)
^.001^2^2^3050124^^^
"^DD",811.9,811.925,.01,21,1,0)
This is the number of the function finding you want to create or
"^DD",811.9,811.925,.01,21,2,0)
edit.
"^DD",811.9,811.925,.01,"DT")
3040715
"^DD",811.9,811.925,1,0)
FOUND TEXT^811.9251^^1;0
"^DD",811.9,811.925,1,9)
^
"^DD",811.9,811.925,1,21,0)
^.001^2^2^3050121^^^
"^DD",811.9,811.925,1,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.925,1,21,2,0)
output if  this function finding is found (true).
"^DD",811.9,811.925,2,0)
NOT FOUND TEXT^811.9252^^2;0
"^DD",811.9,811.925,2,9)
^
"^DD",811.9,811.925,2,21,0)
^.001^2^2^3050121^^
"^DD",811.9,811.925,2,21,1,0)
This is the text that will be displayed in the Clinical Maintenance output if 
"^DD",811.9,811.925,2,21,2,0)
the function finding is not found (false).  
"^DD",811.9,811.925,3,0)
FUNCTION STRING^FX^^3;1^K:$L(X)>245!($L(X)<2)!('$$VFSTRING^PXRMFFDB(X,.DA)) X
"^DD",811.9,811.925,3,3)
Answer must be 2-245 characters in length.
"^DD",811.9,811.925,3,4)
D FSXHELP^PXRMFFH
"^DD",811.9,811.925,3,21,0)
^^2^2^3050121^
"^DD",811.9,811.925,3,21,1,0)
FUNCTION STRING is input by the user and it defines a function finding.
"^DD",811.9,811.925,3,21,2,0)

"^DD",811.9,811.925,3,"DT")
3040712
"^DD",811.9,811.925,5,0)
FUNCTION LIST^811.9255^^5;0
"^DD",811.9,811.925,5,21,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.925,5,21,1,0)
FUNCTION LIST is a data structure that is used to efficiently
"^DD",811.9,811.925,5,21,2,0)
evaluate function findings. It is generated automatically and should
"^DD",811.9,811.925,5,21,3,0)
never be edited by user.
"^DD",811.9,811.925,10,0)
LOGIC^F^^10;1^K:$L(X)>250!($L(X)<3) X
"^DD",811.9,811.925,10,3)
Do not edit this field.
"^DD",811.9,811.925,10,21,0)
^.001^4^4^3050121^^
"^DD",811.9,811.925,10,21,1,0)
This is the internal representation of the function string. For
"^DD",811.9,811.925,10,21,2,0)
example, if the function string is MIN_DATE(1,2)>MAX_DATE(3) then 
"^DD",811.9,811.925,10,21,3,0)
the LOGIC field would be FN(1)>FN(2).
"^DD",811.9,811.925,10,21,4,0)

"^DD",811.9,811.925,10,"DT")
3021212
"^DD",811.9,811.925,11,0)
USE IN RESOLUTION LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;6^Q
"^DD",811.9,811.925,11,3)
Enter the logical operator
"^DD",811.9,811.925,11,21,0)
^.001^27^27^3050124^^^
"^DD",811.9,811.925,11,21,1,0)
This optional field is used to indicate that this finding item
"^DD",811.9,811.925,11,21,2,0)
should be included as part of the resolution logic for this
"^DD",811.9,811.925,11,21,3,0)
reminder. Note - if the CUSTOMIZED RESOLUTION LOGIC is defined, then
"^DD",811.9,811.925,11,21,4,0)
this field is ignored.
"^DD",811.9,811.925,11,21,5,0)
 
"^DD",811.9,811.925,11,21,6,0)
Valid entries for the USE IN RESOLUTION LOGIC field are:
"^DD",811.9,811.925,11,21,7,0)
 
"^DD",811.9,811.925,11,21,8,0)
                       EQUATES TO BOOLEAN
"^DD",811.9,811.925,11,21,9,0)
  OPERATOR   VALUE     OPERATOR LOGIC
"^DD",811.9,811.925,11,21,10,0)
  --------   -----     ------------------
"^DD",811.9,811.925,11,21,11,0)
             BLANK     not included in Resolution Logic
"^DD",811.9,811.925,11,21,12,0)
                       (Use @ to delete value)
"^DD",811.9,811.925,11,21,13,0)
   &         AND       &(Finding)
"^DD",811.9,811.925,11,21,14,0)
   !         OR        !(Finding)
"^DD",811.9,811.925,11,21,15,0)
   &'        AND NOT   &'(Finding)
"^DD",811.9,811.925,11,21,16,0)
   !'        OR NOT    !'(Finding)
"^DD",811.9,811.925,11,21,17,0)
 
"^DD",811.9,811.925,11,21,18,0)
All finding items that have a value in this field are automatically
"^DD",811.9,811.925,11,21,19,0)
combined to create the DEFAULT RESOLUTION LOGIC.
"^DD",811.9,811.925,11,21,20,0)
 
"^DD",811.9,811.925,11,21,21,0)
After all findings have been evaluated, the finding item is replaced
"^DD",811.9,811.925,11,21,22,0)
by its true or false value in the resolution logic and the
"^DD",811.9,811.925,11,21,23,0)
resolution logic is evaluated. If the resolution logic evaluates to
"^DD",811.9,811.925,11,21,24,0)
true, then the last resolution date is determined. The applicable
"^DD",811.9,811.925,11,21,25,0)
frequency is added to the resolution date to determine when the
"^DD",811.9,811.925,11,21,26,0)
reminder is next due. If the resolution logic evaluates to false,
"^DD",811.9,811.925,11,21,27,0)
then reminder is due.
"^DD",811.9,811.925,11,"DT")
3041118
"^DD",811.9,811.925,12,0)
USE IN PATIENT COHORT LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.925,12,3)
Enter the logical operator 
"^DD",811.9,811.925,12,21,0)
^.001^31^31^3050124^^
"^DD",811.9,811.925,12,21,1,0)
This optional field is used to indicate that this finding item
"^DD",811.9,811.925,12,21,2,0)
should be included as part of the Patient Cohort Logic for this
"^DD",811.9,811.925,12,21,3,0)
reminder. Note - if the CUSTOMIZED COHORT LOGIC is defined, then this
"^DD",811.9,811.925,12,21,4,0)
field is ignored.
"^DD",811.9,811.925,12,21,5,0)
 
"^DD",811.9,811.925,12,21,6,0)
Valid entries for the USE IN PATIENT COHORT LOGIC field are:
"^DD",811.9,811.925,12,21,7,0)
 
"^DD",811.9,811.925,12,21,8,0)
                     EQUATES TO BOOLEAN
"^DD",811.9,811.925,12,21,9,0)
  OPERATOR  VALUE     OPERATOR LOGIC
"^DD",811.9,811.925,12,21,10,0)
  --------  -----     ------------------
"^DD",811.9,811.925,12,21,11,0)
            BLANK     not included in Patient Cohort Logic
"^DD",811.9,811.925,12,21,12,0)
                      (Use @ to delete value)
"^DD",811.9,811.925,12,21,13,0)
   &        AND       &(Finding)
"^DD",811.9,811.925,12,21,14,0)
   !        OR        !(Finding)
"^DD",811.9,811.925,12,21,15,0)
   &'       AND NOT   &'(Finding)
"^DD",811.9,811.925,12,21,16,0)
   !'       OR NOT    !'(Finding)
"^DD",811.9,811.925,12,21,17,0)
 
"^DD",811.9,811.925,12,21,18,0)
All finding items that have a value in this field are automatically
"^DD",811.9,811.925,12,21,19,0)
combined to create the DEFAULT COHORT LOGIC. The default logic
"^DD",811.9,811.925,12,21,20,0)
string initially includes (SEX)&(AGE), regardless of whether the
"^DD",811.9,811.925,12,21,21,0)
baseline specifies SEX and AGE criteria. Each finding item with a
"^DD",811.9,811.925,12,21,22,0)
value in the Use In Patient Cohort Logic field is appended to the
"^DD",811.9,811.925,12,21,23,0)
string by using the operator and finding item. For example, if
"^DD",811.9,811.925,12,21,24,0)
finding item 2 had an operator for this field of "&" then the string
"^DD",811.9,811.925,12,21,25,0)
would be (SEX)&(AGE)&FI(2).
"^DD",811.9,811.925,12,21,26,0)

"^DD",811.9,811.925,12,21,27,0)
After all findings have been evaluated, the finding item is replaced
"^DD",811.9,811.925,12,21,28,0)
by its true or false value in the cohort logic and the cohort logic
"^DD",811.9,811.925,12,21,29,0)
is evaluated. If the cohort logic evaluates to true, then the reminder
"^DD",811.9,811.925,12,21,30,0)
is applicable to the patient. If the cohort logic evaluates to false
"^DD",811.9,811.925,12,21,31,0)
then reminder is non-applicable or N/A.
"^DD",811.9,811.925,12,"DT")
3031107
"^DD",811.9,811.925,13,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.925,13,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",811.9,811.925,13,21,0)
^^2^2^3050120^
"^DD",811.9,811.925,13,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.925,13,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.925,13,"DT")
3031107
"^DD",811.9,811.925,14,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.925,14,3)
Type a Number between 0 and 200, 0 Decimal Digits
"^DD",811.9,811.925,14,21,0)
^^2^2^3050120^
"^DD",811.9,811.925,14,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.925,14,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.925,14,"DT")
3031107
"^DD",811.9,811.925,15,0)
REMINDER FREQUENCY^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.925,15,3)
Answer must be 1-15 characters in length.
"^DD",811.9,811.925,15,21,0)
^^6^6^3050120^
"^DD",811.9,811.925,15,21,1,0)
If this finding is true (found) then use this frequency and the age
"^DD",811.9,811.925,15,21,2,0)
range specified by the MINIMUM AGE and MAXIMUM AGE to override the
"^DD",811.9,811.925,15,21,3,0)
baseline frequency age range set. The frequency is input as nD, nM,
"^DD",811.9,811.925,15,21,4,0)
or nY, where n is a number and D stands for days, M for months, Y
"^DD",811.9,811.925,15,21,5,0)
for years. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.925,15,21,6,0)
values 365D, 12M, or 1Y would all work.
"^DD",811.9,811.925,15,"DT")
3031107
"^DD",811.9,811.925,16,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.925,16,3)
Type a Number between 1 and 999, 0 Decimal Digits
"^DD",811.9,811.925,16,21,0)
^^11^11^3050120^
"^DD",811.9,811.925,16,21,1,0)
This field is used to rank the frequency and age range sets associated
"^DD",811.9,811.925,16,21,2,0)
with a finding. If there is more than one true finding that can
"^DD",811.9,811.925,16,21,3,0)
override the baseline frequency age range set, then the determination of
"^DD",811.9,811.925,16,21,4,0)
which one to use is made based on the finding with the highest rank.
"^DD",811.9,811.925,16,21,5,0)
Ranks can range from 1 to 999 with 1 being the highest rank.
"^DD",811.9,811.925,16,21,6,0)
 
"^DD",811.9,811.925,16,21,7,0)
When the Rank field is blank (null) for all true findings that can
"^DD",811.9,811.925,16,21,8,0)
override the baseline frequency age range set, then the frequency that
"^DD",811.9,811.925,16,21,9,0)
will cause the reminder to be given most often will be used. For
"^DD",811.9,811.925,16,21,10,0)
example, if finding 1 has a frequency of 6 months, and finding 2 has a
"^DD",811.9,811.925,16,21,11,0)
frequency of 1 year, finding 1 will be used to override the baseline.
"^DD",811.9,811.925,16,"DT")
3031210
"^DD",811.9,811.925,40,0)
NAME^F^^40;1^K:$L(X)>64!($L(X)<1) X
"^DD",811.9,811.925,40,3)
Answer must be 1-64 characters in length.
"^DD",811.9,811.925,40,21,0)
^.001^7^7^3050121^^
"^DD",811.9,811.925,40,21,1,0)
If the NAME field is present it will be displayed with the function
"^DD",811.9,811.925,40,21,2,0)
finding result in the Clinical Maintenance output. The format is
"^DD",811.9,811.925,40,21,3,0)
 Function Finding: NAME
"^DD",811.9,811.925,40,21,4,0)
If NAME is null then the format will be:
"^DD",811.9,811.925,40,21,5,0)
 Function Finding: function
"^DD",811.9,811.925,40,21,6,0)
where function is the name of the function used in the function
"^DD",811.9,811.925,40,21,7,0)
finding.
"^DD",811.9,811.925,40,"DT")
3030922
"^DD",811.9,811.925,41,0)
NO. FOUND TEXT LINES^F^^6;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.925,41,3)
Do not edit this field.
"^DD",811.9,811.925,41,9)
^
"^DD",811.9,811.925,41,21,0)
^.001^4^4^3050121^^^^
"^DD",811.9,811.925,41,21,1,0)
This is the number of lines in the found text. If the number ends
"^DD",811.9,811.925,41,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.925,41,21,3,0)
automatically during reminder edit and should never be edited by hand.
"^DD",811.9,811.925,41,21,4,0)

"^DD",811.9,811.925,41,"DT")
3031017
"^DD",811.9,811.925,42,0)
NO. NOT FOUND TEXT LINES^F^^6;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.925,42,3)
Do not edit this field.
"^DD",811.9,811.925,42,9)
^
"^DD",811.9,811.925,42,21,0)
^.001^4^4^3050121^^^^
"^DD",811.9,811.925,42,21,1,0)
This is the number of lines in the not found text. If the number ends
"^DD",811.9,811.925,42,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.925,42,21,3,0)
automatically during reminder edit and should never be edited by hand.
"^DD",811.9,811.925,42,21,4,0)

"^DD",811.9,811.925,42,"DT")
3031017
"^DD",811.9,811.9251,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9251,0,"DT")
3021223
"^DD",811.9,811.9251,0,"NM","FOUND TEXT")

"^DD",811.9,811.9251,0,"UP")
811.925
"^DD",811.9,811.9251,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9251,.01,"DT")
3021223
"^DD",811.9,811.9252,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9252,0,"DT")
3021223
"^DD",811.9,811.9252,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.9252,0,"UP")
811.925
"^DD",811.9,811.9252,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9252,.01,"DT")
3021223
"^DD",811.9,811.9255,0)
FUNCTION LIST SUB-FIELD^^20^3
"^DD",811.9,811.9255,0,"DT")
3021212
"^DD",811.9,811.9255,0,"NM","FUNCTION LIST")

"^DD",811.9,811.9255,0,"UP")
811.925
"^DD",811.9,811.9255,.01,0)
FUNCTION NUMBER^MNJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.9255,.01,1,0)
^.1^^0
"^DD",811.9,811.9255,.01,3)
Do not edit this field.
"^DD",811.9,811.9255,.01,21,0)
^.001^6^6^3050121^^
"^DD",811.9,811.9255,.01,21,1,0)
FUNCTION NUMBER is an internal counter of the functions used in the
"^DD",811.9,811.9255,.01,21,2,0)
function string. For example, if the function string is
"^DD",811.9,811.9255,.01,21,3,0)
MIN_DATE(1,2)>MAX_DATE(3) then function number 1 is MIN_DATE and
"^DD",811.9,811.9255,.01,21,4,0)
function number 2 is MAX_DATE. The function numbers correspond with
"^DD",811.9,811.9255,.01,21,5,0)
the internal number used in field #10 LOGIC. For the above function
"^DD",811.9,811.9255,.01,21,6,0)
string the LOGIC field would be FN(1)>FN(2).
"^DD",811.9,811.9255,.01,"DT")
3030911
"^DD",811.9,811.9255,.02,0)
FUNCTION^P802.4'X^PXRMD(802.4,^0;2^Q
"^DD",811.9,811.9255,.02,3)
Do not edit this field.
"^DD",811.9,811.9255,.02,21,0)
^.001^4^4^3050121^^
"^DD",811.9,811.9255,.02,21,1,0)
FUNCTION is a pointer to the Function File, #802.4. For example, if
"^DD",811.9,811.9255,.02,21,2,0)
the function string is MIN_DATE(1,2)>MAX_DATE(3) then function
"^DD",811.9,811.9255,.02,21,3,0)
number 1 is MIN_DATE and FUNCTION is the pointer to the MIN_DATE
"^DD",811.9,811.9255,.02,21,4,0)
funtion in file #802.4
"^DD",811.9,811.9255,.02,"DT")
3021216
"^DD",811.9,811.9255,20,0)
FUNCTION ARGUMENT LIST^811.9256^^20;0
"^DD",811.9,811.9255,20,21,0)
^.001^6^6^3050121^^^
"^DD",811.9,811.9255,20,21,1,0)
The FUNCTION ARGUMENT LIST multiple is the list of arguments
"^DD",811.9,811.9255,20,21,2,0)
(finding numbers) for each function in the function string. For
"^DD",811.9,811.9255,20,21,3,0)
example, if the function string is MIN_DATE(1,2)>MAX_DATE(3) then
"^DD",811.9,811.9255,20,21,4,0)
the argument list for function number 1 is 1 and 2 and the argument
"^DD",811.9,811.9255,20,21,5,0)
list for function 2 is 3.
"^DD",811.9,811.9255,20,21,6,0)

"^DD",811.9,811.9256,0)
FUNCTION ARGUMENT LIST SUB-FIELD^^.01^1
"^DD",811.9,811.9256,0,"DT")
3021212
"^DD",811.9,811.9256,0,"NM","FUNCTION ARGUMENT LIST")

"^DD",811.9,811.9256,0,"UP")
811.9255
"^DD",811.9,811.9256,.01,0)
FINDING NUMBER^MNJ3,0X^^0;1^K:'$$VFINDING^PXRMFFDB(X,DA(3)) X
"^DD",811.9,811.9256,.01,1,0)
^.1^^0
"^DD",811.9,811.9256,.01,3)
Do not edit this field.
"^DD",811.9,811.9256,.01,21,0)
^.001^1^1^3050121^^
"^DD",811.9,811.9256,.01,21,1,0)
This is an individual argument (finding number).
"^DD",811.9,811.9256,.01,"DT")
3030911
"^DD",811.9,811.93,0)
TECHNICAL DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.93,0,"NM","TECHNICAL DESCRIPTION")

"^DD",811.9,811.93,0,"UP")
811.9
"^DD",811.9,811.93,.01,0)
TECHNICAL DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.93,.01,.1)
 
"^DD",811.9,811.93,.01,3)
Enter the TECHNICAL DESCRIPTION.
"^DD",811.9,811.93,.01,"DT")
2960131
"^DD",811.9,811.948,0)
CUSTOM DATE DUE ARG LIST SUB-FIELD^^.02^2
"^DD",811.9,811.948,0,"DT")
3050121
"^DD",811.9,811.948,0,"IX","B",811.948,.01)

"^DD",811.9,811.948,0,"NM","CUSTOM DATE DUE ARG LIST")

"^DD",811.9,811.948,0,"UP")
811.9
"^DD",811.9,811.948,.01,0)
FINDING^NJ3,0^^0;1^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.948,.01,1,0)
^.1
"^DD",811.9,811.948,.01,1,1,0)
811.948^B
"^DD",811.9,811.948,.01,1,1,1)
S ^PXD(811.9,DA(1),47,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.948,.01,1,1,2)
K ^PXD(811.9,DA(1),47,"B",$E(X,1,30),DA)
"^DD",811.9,811.948,.01,3)
Do not edit this field.
"^DD",811.9,811.948,.01,21,0)
^^2^2^3050121^
"^DD",811.9,811.948,.01,21,1,0)
This is the number of a finding used in the custom date due string.
"^DD",811.9,811.948,.01,21,2,0)
It is created automatically and should not be set by hand.
"^DD",811.9,811.948,.01,"DT")
3050121
"^DD",811.9,811.948,.02,0)
FREQUENCY^F^^0;2^K:$L(X)>8!($L(X)<2) X
"^DD",811.9,811.948,.02,3)
Do not edit this field.
"^DD",811.9,811.948,.02,21,0)
^^3^3^3050121^
"^DD",811.9,811.948,.02,21,1,0)
This is the frequency that is associated with the finding defined in
"^DD",811.9,811.948,.02,21,2,0)
the .01 field of the CUSTOM DATE DUE ARGUMENT LIST. It is created
"^DD",811.9,811.948,.02,21,3,0)
automatically and should never be set by hand.
"^DD",811.9,811.948,.02,"DT")
3030807
"^DD",811.9,811.961,0)
GENERAL COHORT NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.961,0,"DT")
3000110
"^DD",811.9,811.961,0,"NM","GENERAL COHORT NOT FOUND TEXT")

"^DD",811.9,811.961,0,"UP")
811.9
"^DD",811.9,811.961,.01,0)
GENERAL COHORT NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.961,.01,.1)
GENERAL PATIENT COHORT NOT FOUND TEXT
"^DD",811.9,811.961,.01,3)
Enter general text to display when the Patient Cohort Logic is false.
"^DD",811.9,811.961,.01,"DT")
3000504
"^DD",811.9,811.965,0)
GENERAL RES. FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.965,0,"DT")
3000110
"^DD",811.9,811.965,0,"NM","GENERAL RES. FOUND TEXT")

"^DD",811.9,811.965,0,"UP")
811.9
"^DD",811.9,811.965,.01,0)
GENERAL RES. FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.965,.01,.1)
GENERAL RESOLUTION FOUND TEXT
"^DD",811.9,811.965,.01,3)
Enter general text to display when the Resolution Logic is true.
"^DD",811.9,811.965,.01,"DT")
3040607
"^DD",811.9,811.966,0)
GENERAL RES. NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.966,0,"DT")
3000110
"^DD",811.9,811.966,0,"NM","GENERAL RES. NOT FOUND TEXT")

"^DD",811.9,811.966,0,"UP")
811.9
"^DD",811.9,811.966,.01,0)
GENERAL RES. NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.966,.01,.1)
GENERAL RESOLUTION NOT FOUND TEXT
"^DD",811.9,811.966,.01,3)
Enter general text to display when the Resolution Logic is false.
"^DD",811.9,811.966,.01,"DT")
3040607
"^DD",811.9,811.97,0)
BASELINE AGE FINDINGS SUB-FIELD^^6^7
"^DD",811.9,811.97,0,"DT")
3031016
"^DD",811.9,811.97,0,"IX","B",811.97,.01)

"^DD",811.9,811.97,0,"NM","BASELINE AGE FINDINGS")

"^DD",811.9,811.97,0,"UP")
811.9
"^DD",811.9,811.97,.01,0)
REMINDER FREQUENCY^MFX^^0;1^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.97,.01,1,0)
^.1
"^DD",811.9,811.97,.01,1,1,0)
811.97^B
"^DD",811.9,811.97,.01,1,1,1)
S ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.97,.01,1,1,2)
K ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)
"^DD",811.9,811.97,.01,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.97,.01,21,0)
^.001^5^5^3050121^^^^
"^DD",811.9,811.97,.01,21,1,0)
This is the frequency for the reminder. It is input as nD, nM, or
"^DD",811.9,811.97,.01,21,2,0)
nY, where D stands for days, M for months, Y for years, and n is a
"^DD",811.9,811.97,.01,21,3,0)
number. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.97,.01,21,4,0)
values 365D, 12M, or 1Y would all work. If a reminder is only to be
"^DD",811.9,811.97,.01,21,5,0)
given once in a lifetime use a frequency of 99Y.
"^DD",811.9,811.97,.01,"DT")
2970505
"^DD",811.9,811.97,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,1,3)
Enter the minimum age for this reminder frequency.
"^DD",811.9,811.97,1,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.97,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.97,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.97,1,"DT")
2960201
"^DD",811.9,811.97,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,2,3)
Enter the maximum age for this reminder frequency.
"^DD",811.9,811.97,2,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.97,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.97,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.97,2,"DT")
2960201
"^DD",811.9,811.97,3,0)
AGE MATCH TEXT^811.973^^1;0
"^DD",811.9,811.97,3,9)
^
"^DD",811.9,811.97,3,21,0)
^.001^2^2^3050121^^^^
"^DD",811.9,811.97,3,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,3,21,2,0)
component if the patient's age falls within the age range.
"^DD",811.9,811.97,4,0)
AGE NO MATCH TEXT^811.974^^2;0
"^DD",811.9,811.97,4,9)
^
"^DD",811.9,811.97,4,21,0)
^.001^2^2^3050121^^
"^DD",811.9,811.97,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,4,21,2,0)
component if the patient's age does not fall in the age range.
"^DD",811.9,811.97,4,"DT")
2960201
"^DD",811.9,811.97,5,0)
NO. OF AGE MATCH LINES^F^^3;1^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.97,5,3)
Do not edit this field.
"^DD",811.9,811.97,5,9)
^
"^DD",811.9,811.97,5,21,0)
^.001^3^3^3050121^^^^
"^DD",811.9,811.97,5,21,1,0)
This is the number of lines in the age match text. If the number ends
"^DD",811.9,811.97,5,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.97,5,21,3,0)
automatically during reminder edit and should never be edited by hand.
"^DD",811.9,811.97,5,"DT")
3031016
"^DD",811.9,811.97,6,0)
NO. OF AGE NO MATCH LINES^F^^3;2^K:$L(X)>5!($L(X)<1) X
"^DD",811.9,811.97,6,3)
Do not edit this field.
"^DD",811.9,811.97,6,9)
^
"^DD",811.9,811.97,6,21,0)
^.001^4^4^3050121^^
"^DD",811.9,811.97,6,21,1,0)
This is the number of lines in the age no match text. If the number ends
"^DD",811.9,811.97,6,21,2,0)
with "T" then the text contains TIU objects. This field is set
"^DD",811.9,811.97,6,21,3,0)
automatically during reminder edit and should never be edited by hand.
"^DD",811.9,811.97,6,21,4,0)

"^DD",811.9,811.97,6,"DT")
3031016
"^DD",811.9,811.971,0)
SUMMARY COHORT NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.971,0,"DT")
3040604
"^DD",811.9,811.971,0,"NM","SUMMARY COHORT NOT FOUND TEXT")

"^DD",811.9,811.971,0,"UP")
811.9
"^DD",811.9,811.971,.01,0)
SUMMARY COHORT NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.971,.01,.1)
SUMMARY PATIENT COHORT NOT FOUND TEXT
"^DD",811.9,811.971,.01,3)
Enter the summary text to display when the Patient Cohort Logic is false.
"^DD",811.9,811.971,.01,21,0)
^.001^1^1^3050124^^^^
"^DD",811.9,811.971,.01,21,1,0)

"^DD",811.9,811.971,.01,"DT")
3040608
"^DD",811.9,811.973,0)
AGE MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.973,0,"DT")
2960201
"^DD",811.9,811.973,0,"NM","AGE MATCH TEXT")

"^DD",811.9,811.973,0,"UP")
811.97
"^DD",811.9,811.973,.01,0)
AGE MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.973,.01,3)
Enter text to display for a match on age range.
"^DD",811.9,811.973,.01,"DT")
2960201
"^DD",811.9,811.974,0)
AGE NO MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.974,0,"DT")
2960201
"^DD",811.9,811.974,0,"NM","AGE NO MATCH TEXT")

"^DD",811.9,811.974,0,"UP")
811.97
"^DD",811.9,811.974,.01,0)
AGE NO MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.974,.01,3)
Enter the text to display for no match on age range.
"^DD",811.9,811.974,.01,"DT")
2960201
"^DD",811.9,811.975,0)
SUMMARY RES. FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.975,0,"DT")
3040608
"^DD",811.9,811.975,0,"NM","SUMMARY RES. FOUND TEXT")

"^DD",811.9,811.975,0,"UP")
811.9
"^DD",811.9,811.975,.01,0)
SUMMARY RESOLUTION FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.975,.01,.1)
SUMMARY RESOLUTION LOGIC FOUND TEXT
"^DD",811.9,811.975,.01,3)
Enter the summary text to display when the Resolution Logic is true.
"^DD",811.9,811.975,.01,"DT")
3040608
"^DD",811.9,811.976,0)
SUMMARY RES. NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.976,0,"DT")
3040608
"^DD",811.9,811.976,0,"NM","SUMMARY RES. NOT FOUND TEXT")

"^DD",811.9,811.976,0,"UP")
811.9
"^DD",811.9,811.976,.01,0)
SUMMARY RES. NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.976,.01,.1)
SUMMARY RESOLUTION LOGIC NOT FOUND TEXT
"^DD",811.9,811.976,.01,3)
Enter the summary text to display when the Resolution Logic is false.
"^DD",811.9,811.976,.01,21,0)
^.001^1^1^3050124^^^^
"^DD",811.9,811.976,.01,21,1,0)

"^DD",811.9,811.976,.01,"DT")
3040608
"^DIC",801,801,0)
REMINDER ORDERABLE ITEM GROUP^801
"^DIC",801,801,0,"GL")
^PXD(801,
"^DIC",801,801,"%",0)
^1.005^^0
"^DIC",801,801,"%D",0)
^^6^6^3091214^
"^DIC",801,801,"%D",1,0)
This file contains a list of Orderable Items that should have a reminder
"^DIC",801,801,"%D",2,0)
definition or a reminder  term evaluation run against them as an order check.
"^DIC",801,801,"%D",3,0)
The Orderable Item will only be evaluated when the user places the order in
"^DIC",801,801,"%D",4,0)
CPRS. An Orderable Item Group can contain a list of Orderable Items and a list
"^DIC",801,801,"%D",5,0)
of Rules. A reminder rule can only contain one reminder term or one
"^DIC",801,801,"%D",6,0)
reminder definition.
"^DIC",801,"B","REMINDER ORDERABLE ITEM GROUP",801)

"^DIC",811.9,811.9,0)
REMINDER DEFINITION^811.9
"^DIC",811.9,811.9,0,"GL")
^PXD(811.9,
"^DIC",811.9,811.9,"%",0)
^1.005^1^1
"^DIC",811.9,811.9,"%",1,0)
GMTS
"^DIC",811.9,811.9,"%","B","GMTS",1)

"^DIC",811.9,811.9,"%D",0)
^1.001^9^9^3061212^^^^
"^DIC",811.9,811.9,"%D",1,0)
This file contains Clinical Reminder definitions. For a detailed
"^DIC",811.9,811.9,"%D",2,0)
description of the contents of this file, see the Clinical Reminders
"^DIC",811.9,811.9,"%D",3,0)
Manager Manual. Additional information may be found at the Clinical
"^DIC",811.9,811.9,"%D",4,0)
Reminders web site: http//vista.med.va.gov/reminders
"^DIC",811.9,811.9,"%D",5,0)

"^DIC",811.9,811.9,"%D",6,0)
This file contains a combination of nationally distributed and local
"^DIC",811.9,811.9,"%D",7,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.9,811.9,"%D",8,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.9,811.9,"%D",9,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.9,"B","REMINDER DEFINITION",811.9)

**END**
**END**
