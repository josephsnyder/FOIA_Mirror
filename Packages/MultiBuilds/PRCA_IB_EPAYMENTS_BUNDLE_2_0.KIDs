KIDS Distribution saved on May 15, 2018@14:09:49
PRCA_IB_EPAYMENTS BUNDLE 2.0
**KIDS**:PRCA IB EPAYMENTS BUNDLE 2.0^IB*2.0*596^PRCA*4.5*321^

**INSTALL NAME**
PRCA IB EPAYMENTS BUNDLE 2.0
"BLD",10583,0)
PRCA IB EPAYMENTS BUNDLE 2.0^^1^3180515^y
"BLD",10583,1,0)
^^5^5^3170626^
"BLD",10583,1,1,0)
The purpose of this patch is to meet the requirements of the Medical Care
"BLD",10583,1,2,0)
Collection Fund (MCCF) Electronic Data Interchange (EDI) Transaction 
"BLD",10583,1,3,0)
Application Suite (TAS) Phase 1 project as related to Accounts Receivable
"BLD",10583,1,4,0)
(PRCA). Two patches will be released in this KIDS multi-build distribution
"BLD",10583,1,5,0)
containing: PRCA*4.5*321 and IB*2*596.
"BLD",10583,6.3)
22
"BLD",10583,10,0)
^9.63^2^2
"BLD",10583,10,1,0)
IB*2.0*596^1
"BLD",10583,10,2,0)
PRCA*4.5*321^1
"BLD",10583,10,"B","IB*2.0*596",1)

"BLD",10583,10,"B","PRCA*4.5*321",2)

"BLD",10583,"KRN",0)
^9.67PA^779.2^20
"BLD",10583,"KRN",.4,0)
.4
"BLD",10583,"KRN",.401,0)
.401
"BLD",10583,"KRN",.402,0)
.402
"BLD",10583,"KRN",.403,0)
.403
"BLD",10583,"KRN",.5,0)
.5
"BLD",10583,"KRN",.84,0)
.84
"BLD",10583,"KRN",3.6,0)
3.6
"BLD",10583,"KRN",3.8,0)
3.8
"BLD",10583,"KRN",9.2,0)
9.2
"BLD",10583,"KRN",9.8,0)
9.8
"BLD",10583,"KRN",19,0)
19
"BLD",10583,"KRN",19.1,0)
19.1
"BLD",10583,"KRN",101,0)
101
"BLD",10583,"KRN",409.61,0)
409.61
"BLD",10583,"KRN",771,0)
771
"BLD",10583,"KRN",779.2,0)
779.2
"BLD",10583,"KRN",870,0)
870
"BLD",10583,"KRN",8989.51,0)
8989.51
"BLD",10583,"KRN",8989.52,0)
8989.52
"BLD",10583,"KRN",8994,0)
8994
"BLD",10583,"KRN","B",.4,.4)

"BLD",10583,"KRN","B",.401,.401)

"BLD",10583,"KRN","B",.402,.402)

"BLD",10583,"KRN","B",.403,.403)

"BLD",10583,"KRN","B",.5,.5)

"BLD",10583,"KRN","B",.84,.84)

"BLD",10583,"KRN","B",3.6,3.6)

"BLD",10583,"KRN","B",3.8,3.8)

"BLD",10583,"KRN","B",9.2,9.2)

"BLD",10583,"KRN","B",9.8,9.8)

"BLD",10583,"KRN","B",19,19)

"BLD",10583,"KRN","B",19.1,19.1)

"BLD",10583,"KRN","B",101,101)

"BLD",10583,"KRN","B",409.61,409.61)

"BLD",10583,"KRN","B",771,771)

"BLD",10583,"KRN","B",779.2,779.2)

"BLD",10583,"KRN","B",870,870)

"BLD",10583,"KRN","B",8989.51,8989.51)

"BLD",10583,"KRN","B",8989.52,8989.52)

"BLD",10583,"KRN","B",8994,8994)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.2
**INSTALL NAME**
IB*2.0*596
"BLD",10582,0)
IB*2.0*596^INTEGRATED BILLING^0^3180515^y
"BLD",10582,4,0)
^9.64PA^^
"BLD",10582,6.3)
31
"BLD",10582,"ABPKG")
n
"BLD",10582,"KRN",0)
^9.67PA^779.2^20
"BLD",10582,"KRN",.4,0)
.4
"BLD",10582,"KRN",.401,0)
.401
"BLD",10582,"KRN",.402,0)
.402
"BLD",10582,"KRN",.403,0)
.403
"BLD",10582,"KRN",.5,0)
.5
"BLD",10582,"KRN",.84,0)
.84
"BLD",10582,"KRN",3.6,0)
3.6
"BLD",10582,"KRN",3.8,0)
3.8
"BLD",10582,"KRN",9.2,0)
9.2
"BLD",10582,"KRN",9.8,0)
9.8
"BLD",10582,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",10582,"KRN",9.8,"NM",1,0)
IBCEOB4^^0^B25651384
"BLD",10582,"KRN",9.8,"NM","B","IBCEOB4",1)

"BLD",10582,"KRN",19,0)
19
"BLD",10582,"KRN",19.1,0)
19.1
"BLD",10582,"KRN",101,0)
101
"BLD",10582,"KRN",409.61,0)
409.61
"BLD",10582,"KRN",771,0)
771
"BLD",10582,"KRN",779.2,0)
779.2
"BLD",10582,"KRN",870,0)
870
"BLD",10582,"KRN",8989.51,0)
8989.51
"BLD",10582,"KRN",8989.52,0)
8989.52
"BLD",10582,"KRN",8994,0)
8994
"BLD",10582,"KRN","B",.4,.4)

"BLD",10582,"KRN","B",.401,.401)

"BLD",10582,"KRN","B",.402,.402)

"BLD",10582,"KRN","B",.403,.403)

"BLD",10582,"KRN","B",.5,.5)

"BLD",10582,"KRN","B",.84,.84)

"BLD",10582,"KRN","B",3.6,3.6)

"BLD",10582,"KRN","B",3.8,3.8)

"BLD",10582,"KRN","B",9.2,9.2)

"BLD",10582,"KRN","B",9.8,9.8)

"BLD",10582,"KRN","B",19,19)

"BLD",10582,"KRN","B",19.1,19.1)

"BLD",10582,"KRN","B",101,101)

"BLD",10582,"KRN","B",409.61,409.61)

"BLD",10582,"KRN","B",771,771)

"BLD",10582,"KRN","B",779.2,779.2)

"BLD",10582,"KRN","B",870,870)

"BLD",10582,"KRN","B",8989.51,8989.51)

"BLD",10582,"KRN","B",8989.52,8989.52)

"BLD",10582,"KRN","B",8994,8994)

"BLD",10582,"QUES",0)
^9.62^^
"BLD",10582,"REQB",0)
^9.611^1^1
"BLD",10582,"REQB",1,0)
IB*2.0*511^1
"BLD",10582,"REQB","B","IB*2.0*511",1)

"MBREQ")
1
"PKG",230,-1)
1^1
"PKG",230,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",230,20,0)
^9.402P^1^1
"PKG",230,20,1,0)
2^^IBAXDR
"PKG",230,20,1,1)

"PKG",230,20,"B",2,1)

"PKG",230,22,0)
^9.49I^1^1
"PKG",230,22,1,0)
2.0^2940321^2940525
"PKG",230,22,1,"PAH",1,0)
596^3180515^520824644
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IBCEOB4")
0^1^B25651384
"RTN","IBCEOB4",1,0)
IBCEOB4 ;ALB/PJH - EPAYMENTS MOVE/COPY EEOB TO NEW CLAIM ;Jun 11, 2014@17:45:06
"RTN","IBCEOB4",2,0)
 ;;2.0;INTEGRATED BILLING;**451,511,596**;21-MAR-1994;Build 31
"RTN","IBCEOB4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","IBCEOB4",4,0)
 ;
"RTN","IBCEOB4",5,0)
 ;Entry point for EEOB Move
"RTN","IBCEOB4",6,0)
MOVE(EOBIEN,IBIFN,DUZ,MDATE,JCOM,EVENT) ;
"RTN","IBCEOB4",7,0)
 ;
"RTN","IBCEOB4",8,0)
 N DA,DIC,DIE,DIK,DR,IEN101,OBILL,X,Y
"RTN","IBCEOB4",9,0)
 S OBILL=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,EOBIEN,0)),U))
"RTN","IBCEOB4",10,0)
 ;
"RTN","IBCEOB4",11,0)
 ;Create new MOVE/COPY HISTORY stub
"RTN","IBCEOB4",12,0)
 S DA(1)=EOBIEN
"RTN","IBCEOB4",13,0)
 S DIC="^IBM(361.1,"_DA(1)_",101,",DIC(0)="L",X=MDATE
"RTN","IBCEOB4",14,0)
 D FILE^DICN
"RTN","IBCEOB4",15,0)
 S IEN101=+Y Q:'IEN101
"RTN","IBCEOB4",16,0)
 ;
"RTN","IBCEOB4",17,0)
 ;Update detail on MOVE/COPY HISTORY
"RTN","IBCEOB4",18,0)
 K DA,DIE,DR,X,Y
"RTN","IBCEOB4",19,0)
 S DIE="^IBM(361.1,"_EOBIEN_",101,",DA=IEN101
"RTN","IBCEOB4",20,0)
 ;Update User, Date/Time, Comments,Move/Copy event
"RTN","IBCEOB4",21,0)
 S DR=".02///"_DUZ_";.03///"_JCOM_";.05///"_EVENT
"RTN","IBCEOB4",22,0)
 ;Update original bill number
"RTN","IBCEOB4",23,0)
 S DR=DR_";.04///"_OBILL
"RTN","IBCEOB4",24,0)
 D ^DIE
"RTN","IBCEOB4",25,0)
 ;
"RTN","IBCEOB4",26,0)
 ;Update bill number on EOB
"RTN","IBCEOB4",27,0)
 K DA,DIE,DR,X,Y
"RTN","IBCEOB4",28,0)
 S DIE="^IBM(361.1,",DA=EOBIEN,DR=".01///"_IBIFN
"RTN","IBCEOB4",29,0)
 D ^DIE
"RTN","IBCEOB4",30,0)
 ;
"RTN","IBCEOB4",31,0)
 ;Re-index updated EOB to correct PAYER NAME - IB*2*511
"RTN","IBCEOB4",32,0)
 K DA S DIK="^IBM(361.1,",DA=EOBIEN D IX^DIK
"RTN","IBCEOB4",33,0)
 ;
"RTN","IBCEOB4",34,0)
 ;Update any AR AMOUNTS DISTRIBUTION (split/edit detail)
"RTN","IBCEOB4",35,0)
 D FUNCTION(EOBIEN,OBILL,IBIFN)
"RTN","IBCEOB4",36,0)
 ;
"RTN","IBCEOB4",37,0)
 Q
"RTN","IBCEOB4",38,0)
 ;
"RTN","IBCEOB4",39,0)
 ;Entry point for EEOB Copy
"RTN","IBCEOB4",40,0)
COPY(EOBIEN,IBIFN,DUZ,MDATE,JCOM,EVENT) ;'
"RTN","IBCEOB4",41,0)
 ;
"RTN","IBCEOB4",42,0)
 N IEN,IEN1,OBILL,NEWEOB
"RTN","IBCEOB4",43,0)
 ;
"RTN","IBCEOB4",44,0)
 ;Original Claim number
"RTN","IBCEOB4",45,0)
 S OBILL=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,EOBIEN,0)),U))
"RTN","IBCEOB4",46,0)
 ;
"RTN","IBCEOB4",47,0)
 ;Lock zero node before making inserts
"RTN","IBCEOB4",48,0)
 Q:'$$LOCK(0)
"RTN","IBCEOB4",49,0)
 ;
"RTN","IBCEOB4",50,0)
 ;Scan through list of new claims
"RTN","IBCEOB4",51,0)
 S IEN=0
"RTN","IBCEOB4",52,0)
 F  S IEN=$O(IBIFN(IEN)) Q:'IEN  D
"RTN","IBCEOB4",53,0)
 .;Create stub
"RTN","IBCEOB4",54,0)
 .N DA,DIC,DIE,DIK,DLAYGO,DR,IEN1,IEN101,X,Y
"RTN","IBCEOB4",55,0)
 .S DIC(0)="L",DIC="^IBM(361.1,",DLAYGO=361.1
"RTN","IBCEOB4",56,0)
 .;Use 399 ien as .01 field
"RTN","IBCEOB4",57,0)
 .S X=IEN
"RTN","IBCEOB4",58,0)
 .D FILE^DICN
"RTN","IBCEOB4",59,0)
 .S NEWEOB=+Y Q:'NEWEOB
"RTN","IBCEOB4",60,0)
 .;Lock the new entry
"RTN","IBCEOB4",61,0)
 .Q:'$$LOCK(NEWEOB)
"RTN","IBCEOB4",62,0)
 .;Copy details to new EOB (except for audit information)
"RTN","IBCEOB4",63,0)
 .N ARRAY
"RTN","IBCEOB4",64,0)
 .M ARRAY=^IBM(361.1,EOBIEN) K ARRAY(101)
"RTN","IBCEOB4",65,0)
 .M ^IBM(361.1,NEWEOB)=ARRAY
"RTN","IBCEOB4",66,0)
 .;Re-index new EOB
"RTN","IBCEOB4",67,0)
 .K DA,DIE,DIK,DR,IEN1,IEN101,X,Y
"RTN","IBCEOB4",68,0)
 .S DIK="^IBM(361.1,",DA=NEWEOB D IX^DIK
"RTN","IBCEOB4",69,0)
 .;Update .01 field in new EOB
"RTN","IBCEOB4",70,0)
 .K DA,X,Y
"RTN","IBCEOB4",71,0)
 .S DIE="^IBM(361.1,",DA=NEWEOB
"RTN","IBCEOB4",72,0)
 .S DR=".01////"_IBIFN(IEN)
"RTN","IBCEOB4",73,0)
 .D ^DIE
"RTN","IBCEOB4",74,0)
 .;Re-index updated EOB to correct PAYER NAME - IB*2*511
"RTN","IBCEOB4",75,0)
 .K DA,DIK,X,Y S DIK="^IBM(361.1,",DA=NEWEOB D IX^DIK
"RTN","IBCEOB4",76,0)
 .;
"RTN","IBCEOB4",77,0)
 .;Update any AR AMOUNTS DISTRIBUTION (split/edit detail)
"RTN","IBCEOB4",78,0)
 .D FUNCTION(NEWEOB,OBILL,IBIFN(IEN))
"RTN","IBCEOB4",79,0)
 .;
"RTN","IBCEOB4",80,0)
 .;Create stub for audit information
"RTN","IBCEOB4",81,0)
 .K DA,DIC,X,Y
"RTN","IBCEOB4",82,0)
 .S DA(1)=NEWEOB
"RTN","IBCEOB4",83,0)
 .S DIC="^IBM(361.1,"_DA(1)_",101,",DIC(0)="L",X=MDATE
"RTN","IBCEOB4",84,0)
 .D FILE^DICN
"RTN","IBCEOB4",85,0)
 .S IEN101=+Y Q:'IEN101
"RTN","IBCEOB4",86,0)
 .;
"RTN","IBCEOB4",87,0)
 .;Update detail on MOVE/COPY HISTORY
"RTN","IBCEOB4",88,0)
 .K DA,DIE,DR,X,Y
"RTN","IBCEOB4",89,0)
 .S DIE="^IBM(361.1,"_NEWEOB_",101,",DA=IEN101
"RTN","IBCEOB4",90,0)
 .;Update User, Date/Time, Comments,Event
"RTN","IBCEOB4",91,0)
 .S DR=".02///"_DUZ_";.03///"_JCOM_";.05///"_EVENT
"RTN","IBCEOB4",92,0)
 .S DR=DR_";.04///"_OBILL
"RTN","IBCEOB4",93,0)
 .D ^DIE
"RTN","IBCEOB4",94,0)
 .;
"RTN","IBCEOB4",95,0)
 .;Insert Other claim numbers
"RTN","IBCEOB4",96,0)
 .K DIC,DLAYGO,IEN1,X,Y
"RTN","IBCEOB4",97,0)
 .S IEN1=""
"RTN","IBCEOB4",98,0)
 .F  S IEN1=$O(IBIFN(IEN1)) Q:'IEN1  D
"RTN","IBCEOB4",99,0)
 ..;current claim excluded
"RTN","IBCEOB4",100,0)
 ..Q:IEN1=IEN
"RTN","IBCEOB4",101,0)
 ..N DA,DIC,DLAYGO,DR,X
"RTN","IBCEOB4",102,0)
 ..S DA(1)=IEN101,DA(2)=NEWEOB
"RTN","IBCEOB4",103,0)
 ..S DIC="^IBM(361.1,"_DA(2)_",101,"_DA(1)_",1,"
"RTN","IBCEOB4",104,0)
 ..S DIC(0)="L",X=IBIFN(IEN1)
"RTN","IBCEOB4",105,0)
 ..D FILE^DICN
"RTN","IBCEOB4",106,0)
 .;Unlock new entry
"RTN","IBCEOB4",107,0)
 .D UNLOCK(NEWEOB)
"RTN","IBCEOB4",108,0)
 ;
"RTN","IBCEOB4",109,0)
 ;Update original EOB audit information
"RTN","IBCEOB4",110,0)
 N DA,DIC,DIE,DLAYGO,DR,IEN1,IEN101,X,Y
"RTN","IBCEOB4",111,0)
 S DA(1)=EOBIEN
"RTN","IBCEOB4",112,0)
 S DIC="^IBM(361.1,"_DA(1)_",101,",DIC(0)="L",X=MDATE
"RTN","IBCEOB4",113,0)
 D FILE^DICN
"RTN","IBCEOB4",114,0)
 S IEN101=+Y Q:'IEN101
"RTN","IBCEOB4",115,0)
 ;
"RTN","IBCEOB4",116,0)
 ;Update User, Date/Time, Comments,Event
"RTN","IBCEOB4",117,0)
 K DA,DIC,X,Y
"RTN","IBCEOB4",118,0)
 S DIE="^IBM(361.1,"_EOBIEN_",101,",DA=IEN101
"RTN","IBCEOB4",119,0)
 S DR=".02///"_DUZ_";.03///"_JCOM_";.05///"_EVENT
"RTN","IBCEOB4",120,0)
 D ^DIE
"RTN","IBCEOB4",121,0)
 ;
"RTN","IBCEOB4",122,0)
 ;Insert Other claim numbers
"RTN","IBCEOB4",123,0)
 K DA,DIC,X,Y
"RTN","IBCEOB4",124,0)
 S IEN1=""
"RTN","IBCEOB4",125,0)
 F  S IEN1=$O(IBIFN(IEN1)) Q:'IEN1  D
"RTN","IBCEOB4",126,0)
 .K DA,DIC,DR,X
"RTN","IBCEOB4",127,0)
 .S DA(1)=IEN101,DA(2)=EOBIEN
"RTN","IBCEOB4",128,0)
 .S DIC="^IBM(361.1,"_DA(2)_",101,"_DA(1)_",1,"
"RTN","IBCEOB4",129,0)
 .S DIC(0)="L",X=IBIFN(IEN1)
"RTN","IBCEOB4",130,0)
 .D FILE^DICN
"RTN","IBCEOB4",131,0)
 ;
"RTN","IBCEOB4",132,0)
 ;Release zero node after inserts
"RTN","IBCEOB4",133,0)
 D UNLOCK(0)
"RTN","IBCEOB4",134,0)
 Q
"RTN","IBCEOB4",135,0)
 ;
"RTN","IBCEOB4",136,0)
REMOVE(EOBIEN,DUZ,JCOM) ;Mark EEOB as Removed - IB*2*511
"RTN","IBCEOB4",137,0)
 ; Timestamp
"RTN","IBCEOB4",138,0)
 N DA,DIC,DIE,DR,IEN101,OBILL,X,Y
"RTN","IBCEOB4",139,0)
 S OBILL=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,EOBIEN,0)),U))
"RTN","IBCEOB4",140,0)
 ;
"RTN","IBCEOB4",141,0)
 ;Create new MOVE/COPY HISTORY stub for remove action
"RTN","IBCEOB4",142,0)
 S DA(1)=EOBIEN
"RTN","IBCEOB4",143,0)
 S DIC="^IBM(361.1,"_DA(1)_",101,",DIC(0)="L",X=$$NOW^XLFDT
"RTN","IBCEOB4",144,0)
 D FILE^DICN
"RTN","IBCEOB4",145,0)
 S IEN101=+Y Q:'IEN101
"RTN","IBCEOB4",146,0)
 ;
"RTN","IBCEOB4",147,0)
 ;Update detail on MOVE/COPY HISTORY
"RTN","IBCEOB4",148,0)
 N DIE,DA,DR,X,Y
"RTN","IBCEOB4",149,0)
 S DIE="^IBM(361.1,"_EOBIEN_",101,",DA=IEN101
"RTN","IBCEOB4",150,0)
 ;Update User, Date/Time, Comments, Original Bill and Remove event
"RTN","IBCEOB4",151,0)
 S DR=".02///"_DUZ_";.03///"_JCOM_";.04///"_OBILL_";.05///R"
"RTN","IBCEOB4",152,0)
 D ^DIE
"RTN","IBCEOB4",153,0)
 ;
"RTN","IBCEOB4",154,0)
 ;Mark EEOB as removed to prevent further use
"RTN","IBCEOB4",155,0)
 N DIE,DA,DR,X,Y
"RTN","IBCEOB4",156,0)
 S DIE="^IBM(361.1,",DA=EOBIEN
"RTN","IBCEOB4",157,0)
 ;Update EEOB REMOVED
"RTN","IBCEOB4",158,0)
 S DR="102///1"
"RTN","IBCEOB4",159,0)
 D ^DIE
"RTN","IBCEOB4",160,0)
 Q
"RTN","IBCEOB4",161,0)
 ; 
"RTN","IBCEOB4",162,0)
 ;Update Split/Edit history for EOB
"RTN","IBCEOB4",163,0)
FUNCTION(EOBIEN,ONAME,NEWIEN) ;
"RTN","IBCEOB4",164,0)
 N DA,DIE,DR,NEWNAME,SUB,X,Y
"RTN","IBCEOB4",165,0)
 ;Check for split/edit history for original claim
"RTN","IBCEOB4",166,0)
 S SUB=$O(^IBM(361.1,EOBIEN,8,"B",ONAME,"")) Q:'SUB
"RTN","IBCEOB4",167,0)
 ;New bill name
"RTN","IBCEOB4",168,0)
 S NEWNAME=$P($G(^DGCR(399,NEWIEN,0)),U)
"RTN","IBCEOB4",169,0)
 ;Update bill number in Split/Edit history
"RTN","IBCEOB4",170,0)
 S DA(1)=EOBIEN,DIE="^IBM(361.1,"_DA(1)_",8,",DA=SUB
"RTN","IBCEOB4",171,0)
 S DR=".01///"_NEWNAME_";.03///"_NEWNAME
"RTN","IBCEOB4",172,0)
 D ^DIE
"RTN","IBCEOB4",173,0)
 Q
"RTN","IBCEOB4",174,0)
 ;
"RTN","IBCEOB4",175,0)
 ;
"RTN","IBCEOB4",176,0)
LOCK(EOBIEN) ;Lock Original EOB
"RTN","IBCEOB4",177,0)
 L +^IBM(361.1,EOBIEN):5 I  Q 1
"RTN","IBCEOB4",178,0)
 W !,"EOB in use by another user, try later"
"RTN","IBCEOB4",179,0)
 Q 0
"RTN","IBCEOB4",180,0)
 ;
"RTN","IBCEOB4",181,0)
UNLOCK(EOBIEN) ;Release EOB
"RTN","IBCEOB4",182,0)
 L -^IBM(361.1,EOBIEN)
"RTN","IBCEOB4",183,0)
 Q
"RTN","IBCEOB4",184,0)
 ;
"RTN","IBCEOB4",185,0)
 ; BEGIN IB*2.0*596
"RTN","IBCEOB4",186,0)
RESTORE(EOBIEN) ;EP - RCDPEM5
"RTN","IBCEOB4",187,0)
 ; Clear EEOB REMOVED flag from previously suspensed EEOB
"RTN","IBCEOB4",188,0)
 ; INPUT - EEOBIEN - #361.1 IEN 
"RTN","IBCEOB4",189,0)
 ;
"RTN","IBCEOB4",190,0)
 Q:'EOBIEN
"RTN","IBCEOB4",191,0)
 ;
"RTN","IBCEOB4",192,0)
 N DIE,DA,DR,X,Y
"RTN","IBCEOB4",193,0)
 S DIE="^IBM(361.1,",DA=EOBIEN
"RTN","IBCEOB4",194,0)
 ;Update EEOB REMOVED
"RTN","IBCEOB4",195,0)
 S DR="102///@"
"RTN","IBCEOB4",196,0)
 D ^DIE
"RTN","IBCEOB4",197,0)
 Q
"RTN","IBCEOB4",198,0)
 ; END IB*2.0*596
"VER")
8.0^22.2
**INSTALL NAME**
PRCA*4.5*321
"BLD",10552,0)
PRCA*4.5*321^ACCOUNTS RECEIVABLE^0^3180515^y
"BLD",10552,4,0)
^9.64PA^344.61^7
"BLD",10552,4,342,0)
342
"BLD",10552,4,342,2,0)
^9.641^342^1
"BLD",10552,4,342,2,342,0)
AR SITE PARAMETER  (File-top level)
"BLD",10552,4,342,2,342,1,0)
^9.6411^7.08^2
"BLD",10552,4,342,2,342,1,7.07,0)
AUTO-AUDIT MEDICAL EDI BILLS
"BLD",10552,4,342,2,342,1,7.08,0)
AUTO-AUDIT RX EDI BILLS
"BLD",10552,4,342,222)
y^y^p^^^^n^^n
"BLD",10552,4,342,224)

"BLD",10552,4,344,0)
344
"BLD",10552,4,344,2,0)
^9.641^344^2
"BLD",10552,4,344,2,344,0)
AR BATCH PAYMENT  (File-top level)
"BLD",10552,4,344,2,344,1,0)
^9.6411^.03^1
"BLD",10552,4,344,2,344,1,.03,0)
DATE OPENED
"BLD",10552,4,344,2,344.01,0)
TRANSACTION  (sub-file)
"BLD",10552,4,344,2,344.01,1,0)
^9.6411^.09^1
"BLD",10552,4,344,2,344.01,1,.09,0)
PATIENT NAME OR BILL NUMBER
"BLD",10552,4,344,222)
y^y^p^^^^n^^n
"BLD",10552,4,344,224)

"BLD",10552,4,344.31,0)
344.31
"BLD",10552,4,344.31,2,0)
^9.641^344.31^1
"BLD",10552,4,344.31,2,344.31,0)
EDI THIRD PARTY EFT DETAIL  (File-top level)
"BLD",10552,4,344.31,2,344.31,1,0)
^9.6411^3^1
"BLD",10552,4,344.31,2,344.31,1,3,0)
DEBIT/CREDIT FLAG
"BLD",10552,4,344.31,222)
y^y^p^^^^n^^n
"BLD",10552,4,344.31,224)

"BLD",10552,4,344.49,0)
344.49
"BLD",10552,4,344.49,2,0)
^9.641^344.491^1
"BLD",10552,4,344.49,2,344.491,0)
SEQUENCE #  (sub-file)
"BLD",10552,4,344.49,2,344.491,1,0)
^9.6411^.1^1
"BLD",10552,4,344.49,2,344.491,1,.1,0)
RECEIPT LINE COMMENT
"BLD",10552,4,344.49,222)
y^y^p^^^^n^^n
"BLD",10552,4,344.49,224)

"BLD",10552,4,344.6,0)
344.6
"BLD",10552,4,344.6,2,0)
^9.641^344.6^1
"BLD",10552,4,344.6,2,344.6,0)
RCDPE AUTO-PAY EXCLUSION  (File-top level)
"BLD",10552,4,344.6,2,344.6,1,0)
^9.6411^.1^3
"BLD",10552,4,344.6,2,344.6,1,.01,0)
PAYER NAME
"BLD",10552,4,344.6,2,344.6,1,.09,0)
PHARMACY PAYER
"BLD",10552,4,344.6,2,344.6,1,.1,0)
TRICARE PAYER
"BLD",10552,4,344.6,222)
y^y^p^^^^n^^n
"BLD",10552,4,344.6,224)

"BLD",10552,4,344.61,0)
344.61
"BLD",10552,4,344.61,2,0)
^9.641^344.61^1
"BLD",10552,4,344.61,2,344.61,0)
RCDPE PARAMETER  (File-top level)
"BLD",10552,4,344.61,2,344.61,1,0)
^9.6411^.07^3
"BLD",10552,4,344.61,2,344.61,1,.06,0)
MEDICAL EFT POST PREVENT DAYS
"BLD",10552,4,344.61,2,344.61,1,.07,0)
PHARMACY EFT POST PREVENT DAYS
"BLD",10552,4,344.61,2,344.61,1,.1,0)
DAY FOR WORKLOAD NOTIFICATIONS
"BLD",10552,4,344.61,222)
y^y^p^^^^n^^n
"BLD",10552,4,344.61,224)

"BLD",10552,4,344.73,0)
344.73
"BLD",10552,4,344.73,222)
y^y^f^^^^n
"BLD",10552,4,"APDD",342,342)

"BLD",10552,4,"APDD",342,342,7.07)

"BLD",10552,4,"APDD",342,342,7.08)

"BLD",10552,4,"APDD",344,344)

"BLD",10552,4,"APDD",344,344,.03)

"BLD",10552,4,"APDD",344,344.01)

"BLD",10552,4,"APDD",344,344.01,.09)

"BLD",10552,4,"APDD",344.31,344.31)

"BLD",10552,4,"APDD",344.31,344.31,3)

"BLD",10552,4,"APDD",344.49,344.491)

"BLD",10552,4,"APDD",344.49,344.491,.1)

"BLD",10552,4,"APDD",344.6,344.6)

"BLD",10552,4,"APDD",344.6,344.6,.01)

"BLD",10552,4,"APDD",344.6,344.6,.09)

"BLD",10552,4,"APDD",344.6,344.6,.1)

"BLD",10552,4,"APDD",344.61,344.61)

"BLD",10552,4,"APDD",344.61,344.61,.06)

"BLD",10552,4,"APDD",344.61,344.61,.07)

"BLD",10552,4,"APDD",344.61,344.61,.1)

"BLD",10552,4,"B",342,342)

"BLD",10552,4,"B",344,344)

"BLD",10552,4,"B",344.31,344.31)

"BLD",10552,4,"B",344.49,344.49)

"BLD",10552,4,"B",344.6,344.6)

"BLD",10552,4,"B",344.61,344.61)

"BLD",10552,4,"B",344.73,344.73)

"BLD",10552,6.3)
48
"BLD",10552,"INIT")
POST^RCP321
"BLD",10552,"KRN",0)
^9.67PA^779.2^20
"BLD",10552,"KRN",.4,0)
.4
"BLD",10552,"KRN",.401,0)
.401
"BLD",10552,"KRN",.402,0)
.402
"BLD",10552,"KRN",.403,0)
.403
"BLD",10552,"KRN",.5,0)
.5
"BLD",10552,"KRN",.84,0)
.84
"BLD",10552,"KRN",3.6,0)
3.6
"BLD",10552,"KRN",3.8,0)
3.8
"BLD",10552,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",10552,"KRN",3.8,"NM",1,0)
RCDPE AUDIT^^0
"BLD",10552,"KRN",3.8,"NM","B","RCDPE AUDIT",1)

"BLD",10552,"KRN",9.2,0)
9.2
"BLD",10552,"KRN",9.2,"NM",0)
^9.68A^1^1
"BLD",10552,"KRN",9.2,"NM",1,0)
RCDPE PAYER FLAGS GENERAL^^0
"BLD",10552,"KRN",9.2,"NM","B","RCDPE PAYER FLAGS GENERAL",1)

"BLD",10552,"KRN",9.8,0)
9.8
"BLD",10552,"KRN",9.8,"NM",0)
^9.68A^71^66
"BLD",10552,"KRN",9.8,"NM",1,0)
RCDPECH^^0^B9924260
"BLD",10552,"KRN",9.8,"NM",3,0)
RCDPEDAR^^0^B81987477
"BLD",10552,"KRN",9.8,"NM",4,0)
RCDPEDA2^^0^B142498917
"BLD",10552,"KRN",9.8,"NM",5,0)
RCDPEDA3^^0^B113392851
"BLD",10552,"KRN",9.8,"NM",7,0)
RCDPEWL3^^0^B88451997
"BLD",10552,"KRN",9.8,"NM",8,0)
RCDPEWL1^^0^B78442494
"BLD",10552,"KRN",9.8,"NM",9,0)
RCDPEAA2^^0^B122312525
"BLD",10552,"KRN",9.8,"NM",10,0)
RCDPE215^^0^B89764235
"BLD",10552,"KRN",9.8,"NM",11,0)
RCDPR215^^0^B44787625
"BLD",10552,"KRN",9.8,"NM",12,0)
RCDPLPL1^^0^B36617409
"BLD",10552,"KRN",9.8,"NM",13,0)
RCDPLPL4^^0^B239990272
"BLD",10552,"KRN",9.8,"NM",14,0)
RCDPUT^^0^B27245872
"BLD",10552,"KRN",9.8,"NM",15,0)
RCDPEDA4^^0^B36841110
"BLD",10552,"KRN",9.8,"NM",16,0)
RCDPESR3^^0^B55320528
"BLD",10552,"KRN",9.8,"NM",17,0)
RCDPEM^^0^B74838117
"BLD",10552,"KRN",9.8,"NM",18,0)
RCDPEM1^^0^B45189971
"BLD",10552,"KRN",9.8,"NM",19,0)
RCDPTAR^^0^B194758258
"BLD",10552,"KRN",9.8,"NM",20,0)
RCDPEMA^^0^B29986515
"BLD",10552,"KRN",9.8,"NM",21,0)
RCDPEM5^^0^B154473324
"BLD",10552,"KRN",9.8,"NM",22,0)
RCDPUREC^^0^B146354431
"BLD",10552,"KRN",9.8,"NM",23,0)
RCDPEM4^^0^B228006558
"BLD",10552,"KRN",9.8,"NM",24,0)
RCDPEARL^^0^B37930557
"BLD",10552,"KRN",9.8,"NM",25,0)
RCP321^^0^B27251682
"BLD",10552,"KRN",9.8,"NM",26,0)
RCDPEAR1^^0^B207394984
"BLD",10552,"KRN",9.8,"NM",27,0)
RCDPEAR2^^0^B111529501
"BLD",10552,"KRN",9.8,"NM",28,0)
RCDPEAR3^^0^B4337332
"BLD",10552,"KRN",9.8,"NM",29,0)
RCDPENR2^^0^B257719505
"BLD",10552,"KRN",9.8,"NM",30,0)
RCDPPLB^^0^B197182060
"BLD",10552,"KRN",9.8,"NM",31,0)
RCDPRU^^0^B191218781
"BLD",10552,"KRN",9.8,"NM",32,0)
RCDPRU2^^0^B21266563
"BLD",10552,"KRN",9.8,"NM",33,0)
RCDPURE1^^0^B73133259
"BLD",10552,"KRN",9.8,"NM",34,0)
RCDPENR3^^0^B198455458
"BLD",10552,"KRN",9.8,"NM",35,0)
RCDPENR4^^0^B69598566
"BLD",10552,"KRN",9.8,"NM",36,0)
RCDPLPL3^^0^B59761517
"BLD",10552,"KRN",9.8,"NM",37,0)
RCDPRPL1^^0^B33857605
"BLD",10552,"KRN",9.8,"NM",38,0)
RCDPURED^^0^B74391782
"BLD",10552,"KRN",9.8,"NM",39,0)
RCDPELAR^^0^B126615293
"BLD",10552,"KRN",9.8,"NM",40,0)
RCDPRPLM^^0^B91367884
"BLD",10552,"KRN",9.8,"NM",41,0)
RCDPESR6^^0^B47026238
"BLD",10552,"KRN",9.8,"NM",42,0)
RCDPEX3^^0^B76582678
"BLD",10552,"KRN",9.8,"NM",43,0)
RCDPEX31^^0^B42060337
"BLD",10552,"KRN",9.8,"NM",44,0)
RCDPEAA1^^0^B162348483
"BLD",10552,"KRN",9.8,"NM",45,0)
RCDPEAA4^^0^B51754176
"BLD",10552,"KRN",9.8,"NM",46,0)
RCDPESR2^^0^B91233703
"BLD",10552,"KRN",9.8,"NM",47,0)
RCDPESR4^^0^B85709407
"BLD",10552,"KRN",9.8,"NM",48,0)
RCDPEAP^^0^B228321394
"BLD",10552,"KRN",9.8,"NM",49,0)
RCDPEAP1^^0^B105684443
"BLD",10552,"KRN",9.8,"NM",50,0)
RCDPEM2^^0^B247276843
"BLD",10552,"KRN",9.8,"NM",51,0)
RCDPEWL8^^0^B102769103
"BLD",10552,"KRN",9.8,"NM",52,0)
RCDPEX32^^0^B55174770
"BLD",10552,"KRN",9.8,"NM",54,0)
PRCABJ2^^0^B14780114
"BLD",10552,"KRN",9.8,"NM",55,0)
RCDPESP^^0^B166335480
"BLD",10552,"KRN",9.8,"NM",56,0)
RCDPESP5^^0^B147639025
"BLD",10552,"KRN",9.8,"NM",57,0)
RCDPEP^^0^B147639796
"BLD",10552,"KRN",9.8,"NM",58,0)
RCDPESP2^^0^B176714545
"BLD",10552,"KRN",9.8,"NM",59,0)
RCDPRLIS^^0^B128405994
"BLD",10552,"KRN",9.8,"NM",60,0)
RCDPRL^^0^B2015972
"BLD",10552,"KRN",9.8,"NM",61,0)
PRCAUDT^^0^B53225243
"BLD",10552,"KRN",9.8,"NM",64,0)
RCDPEM7^^0^B147289800
"BLD",10552,"KRN",9.8,"NM",65,0)
RCDPEWL0^^0^B242411211
"BLD",10552,"KRN",9.8,"NM",66,0)
RCDPEWL7^^0^B123991907
"BLD",10552,"KRN",9.8,"NM",67,0)
RCDPEWLD^^0^B101321313
"BLD",10552,"KRN",9.8,"NM",68,0)
RCDPESP1^^0^B106087451
"BLD",10552,"KRN",9.8,"NM",69,0)
RCDPARC^^0^B238304719
"BLD",10552,"KRN",9.8,"NM",70,0)
RCDPESR1^^0^B51294022
"BLD",10552,"KRN",9.8,"NM",71,0)
RCDPEX4^^0^B12198277
"BLD",10552,"KRN",9.8,"NM","B","PRCABJ2",54)

"BLD",10552,"KRN",9.8,"NM","B","PRCAUDT",61)

"BLD",10552,"KRN",9.8,"NM","B","RCDPARC",69)

"BLD",10552,"KRN",9.8,"NM","B","RCDPE215",10)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEAA1",44)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEAA2",9)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEAA4",45)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEAP",48)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEAP1",49)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEAR1",26)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEAR2",27)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEAR3",28)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEARL",24)

"BLD",10552,"KRN",9.8,"NM","B","RCDPECH",1)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEDA2",4)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEDA3",5)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEDA4",15)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEDAR",3)

"BLD",10552,"KRN",9.8,"NM","B","RCDPELAR",39)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEM",17)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEM1",18)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEM2",50)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEM4",23)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEM5",21)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEM7",64)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEMA",20)

"BLD",10552,"KRN",9.8,"NM","B","RCDPENR2",29)

"BLD",10552,"KRN",9.8,"NM","B","RCDPENR3",34)

"BLD",10552,"KRN",9.8,"NM","B","RCDPENR4",35)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEP",57)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESP",55)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESP1",68)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESP2",58)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESP5",56)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESR1",70)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESR2",46)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESR3",16)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESR4",47)

"BLD",10552,"KRN",9.8,"NM","B","RCDPESR6",41)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEWL0",65)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEWL1",8)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEWL3",7)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEWL7",66)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEWL8",51)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEWLD",67)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEX3",42)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEX31",43)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEX32",52)

"BLD",10552,"KRN",9.8,"NM","B","RCDPEX4",71)

"BLD",10552,"KRN",9.8,"NM","B","RCDPLPL1",12)

"BLD",10552,"KRN",9.8,"NM","B","RCDPLPL3",36)

"BLD",10552,"KRN",9.8,"NM","B","RCDPLPL4",13)

"BLD",10552,"KRN",9.8,"NM","B","RCDPPLB",30)

"BLD",10552,"KRN",9.8,"NM","B","RCDPR215",11)

"BLD",10552,"KRN",9.8,"NM","B","RCDPRL",60)

"BLD",10552,"KRN",9.8,"NM","B","RCDPRLIS",59)

"BLD",10552,"KRN",9.8,"NM","B","RCDPRPL1",37)

"BLD",10552,"KRN",9.8,"NM","B","RCDPRPLM",40)

"BLD",10552,"KRN",9.8,"NM","B","RCDPRU",31)

"BLD",10552,"KRN",9.8,"NM","B","RCDPRU2",32)

"BLD",10552,"KRN",9.8,"NM","B","RCDPTAR",19)

"BLD",10552,"KRN",9.8,"NM","B","RCDPURE1",33)

"BLD",10552,"KRN",9.8,"NM","B","RCDPUREC",22)

"BLD",10552,"KRN",9.8,"NM","B","RCDPURED",38)

"BLD",10552,"KRN",9.8,"NM","B","RCDPUT",14)

"BLD",10552,"KRN",9.8,"NM","B","RCP321",25)

"BLD",10552,"KRN",19,0)
19
"BLD",10552,"KRN",19,"NM",0)
^9.68A^37^37
"BLD",10552,"KRN",19,"NM",1,0)
RCDPE EEOB MOVE/COPY/RMOVE RPT^^0
"BLD",10552,"KRN",19,"NM",2,0)
RCDPE EDI LOCKBOX MENU^^0
"BLD",10552,"KRN",19,"NM",3,0)
RCDPE EDI LOCKBOX WORKLIST^^4^
"BLD",10552,"KRN",19,"NM",4,0)
RCDPE EXCEPTION PROCESSING^^4^
"BLD",10552,"KRN",19,"NM",5,0)
RCDPE MATCH EFT TO ERA^^4^
"BLD",10552,"KRN",19,"NM",6,0)
RCDPE MANUAL MATCH EFT-ERA^^4^
"BLD",10552,"KRN",19,"NM",7,0)
RCDPE MARK 0-BAL EFT MATCHED^^4^
"BLD",10552,"KRN",19,"NM",8,0)
RCDPE ERA POSTED BY PAPER EOB^^4^
"BLD",10552,"KRN",19,"NM",9,0)
RCDPE UNMATCH ERA^^4^
"BLD",10552,"KRN",19,"NM",10,0)
RCDPE REMOVE ERA FROM WORKLIST^^4^
"BLD",10552,"KRN",19,"NM",11,0)
RCDPE EEOB MOVE/COPY/REMOVE^^4^
"BLD",10552,"KRN",19,"NM",12,0)
RCDPE REMOVE DUP DEPOSITS^^4^
"BLD",10552,"KRN",19,"NM",13,0)
RCDPE UNPOSTED EFT OVERRIDE^^4^
"BLD",10552,"KRN",19,"NM",14,0)
RCDPE APAR^^4^
"BLD",10552,"KRN",19,"NM",15,0)
RCDPE EDI LOCKBOX REPORTS MENU^^0^
"BLD",10552,"KRN",19,"NM",16,0)
RCDPE PAYER IDENTIFY^^0
"BLD",10552,"KRN",19,"NM",17,0)
RCDPE EDI LOCKBOX ACT REPORT^^4^
"BLD",10552,"KRN",19,"NM",18,0)
RCDPE EFT AGING REPORT^^4^
"BLD",10552,"KRN",19,"NM",19,0)
RCDPE ERA AGING REPORT^^4^
"BLD",10552,"KRN",19,"NM",20,0)
RCDPE VIEW/PRINT ERA^^4^
"BLD",10552,"KRN",19,"NM",21,0)
RCDPE ACTIVE WITH EEOB REPORT^^4^
"BLD",10552,"KRN",19,"NM",22,0)
RCDPE REMOVED ERA AUDIT^^4^
"BLD",10552,"KRN",19,"NM",23,0)
RCDPE ERA W/PAPER EOB REPORT^^4^
"BLD",10552,"KRN",19,"NM",24,0)
RCDPE EFT AUDIT REPORT^^4^
"BLD",10552,"KRN",19,"NM",25,0)
RCDPE AUTO-POST REPORT^^4^
"BLD",10552,"KRN",19,"NM",26,0)
RCDPE AUTO-DECREASE REPORT^^4^
"BLD",10552,"KRN",19,"NM",27,0)
RCDPE PAYER EXCLUSION NAME TIN^^4^
"BLD",10552,"KRN",19,"NM",28,0)
RCDPE CARC/RARC TABLE REPORT^^4^
"BLD",10552,"KRN",19,"NM",29,0)
RCDPE PROVIDER LVL ADJ REPORT^^4^
"BLD",10552,"KRN",19,"NM",30,0)
RCDPE EFT TRANSACTION AUD REP^^4^
"BLD",10552,"KRN",19,"NM",31,0)
RCDPE CARC CODE PAYER REPORT^^4^
"BLD",10552,"KRN",19,"NM",32,0)
RCDPE ERA STATUS CHNG AUD REP^^4^
"BLD",10552,"KRN",19,"NM",33,0)
RCDPE UNAPPLIED EFT DEP REPORT^^4^
"BLD",10552,"KRN",19,"NM",34,0)
RCDPE AUTO-POST RECEIPT REPORT^^4^
"BLD",10552,"KRN",19,"NM",35,0)
RCDPE EFT-ERA TRENDING REPORT^^4^
"BLD",10552,"KRN",19,"NM",36,0)
RCDPE CARC/RARC QUICK SEARCH^^4^
"BLD",10552,"KRN",19,"NM",37,0)
RCDPE MOVE ERA TO SUSPENSE^^0
"BLD",10552,"KRN",19,"NM","B","RCDPE ACTIVE WITH EEOB REPORT",21)

"BLD",10552,"KRN",19,"NM","B","RCDPE APAR",14)

"BLD",10552,"KRN",19,"NM","B","RCDPE AUTO-DECREASE REPORT",26)

"BLD",10552,"KRN",19,"NM","B","RCDPE AUTO-POST RECEIPT REPORT",34)

"BLD",10552,"KRN",19,"NM","B","RCDPE AUTO-POST REPORT",25)

"BLD",10552,"KRN",19,"NM","B","RCDPE CARC CODE PAYER REPORT",31)

"BLD",10552,"KRN",19,"NM","B","RCDPE CARC/RARC QUICK SEARCH",36)

"BLD",10552,"KRN",19,"NM","B","RCDPE CARC/RARC TABLE REPORT",28)

"BLD",10552,"KRN",19,"NM","B","RCDPE EDI LOCKBOX ACT REPORT",17)

"BLD",10552,"KRN",19,"NM","B","RCDPE EDI LOCKBOX MENU",2)

"BLD",10552,"KRN",19,"NM","B","RCDPE EDI LOCKBOX REPORTS MENU",15)

"BLD",10552,"KRN",19,"NM","B","RCDPE EDI LOCKBOX WORKLIST",3)

"BLD",10552,"KRN",19,"NM","B","RCDPE EEOB MOVE/COPY/REMOVE",11)

"BLD",10552,"KRN",19,"NM","B","RCDPE EEOB MOVE/COPY/RMOVE RPT",1)

"BLD",10552,"KRN",19,"NM","B","RCDPE EFT AGING REPORT",18)

"BLD",10552,"KRN",19,"NM","B","RCDPE EFT AUDIT REPORT",24)

"BLD",10552,"KRN",19,"NM","B","RCDPE EFT TRANSACTION AUD REP",30)

"BLD",10552,"KRN",19,"NM","B","RCDPE EFT-ERA TRENDING REPORT",35)

"BLD",10552,"KRN",19,"NM","B","RCDPE ERA AGING REPORT",19)

"BLD",10552,"KRN",19,"NM","B","RCDPE ERA POSTED BY PAPER EOB",8)

"BLD",10552,"KRN",19,"NM","B","RCDPE ERA STATUS CHNG AUD REP",32)

"BLD",10552,"KRN",19,"NM","B","RCDPE ERA W/PAPER EOB REPORT",23)

"BLD",10552,"KRN",19,"NM","B","RCDPE EXCEPTION PROCESSING",4)

"BLD",10552,"KRN",19,"NM","B","RCDPE MANUAL MATCH EFT-ERA",6)

"BLD",10552,"KRN",19,"NM","B","RCDPE MARK 0-BAL EFT MATCHED",7)

"BLD",10552,"KRN",19,"NM","B","RCDPE MATCH EFT TO ERA",5)

"BLD",10552,"KRN",19,"NM","B","RCDPE MOVE ERA TO SUSPENSE",37)

"BLD",10552,"KRN",19,"NM","B","RCDPE PAYER EXCLUSION NAME TIN",27)

"BLD",10552,"KRN",19,"NM","B","RCDPE PAYER IDENTIFY",16)

"BLD",10552,"KRN",19,"NM","B","RCDPE PROVIDER LVL ADJ REPORT",29)

"BLD",10552,"KRN",19,"NM","B","RCDPE REMOVE DUP DEPOSITS",12)

"BLD",10552,"KRN",19,"NM","B","RCDPE REMOVE ERA FROM WORKLIST",10)

"BLD",10552,"KRN",19,"NM","B","RCDPE REMOVED ERA AUDIT",22)

"BLD",10552,"KRN",19,"NM","B","RCDPE UNAPPLIED EFT DEP REPORT",33)

"BLD",10552,"KRN",19,"NM","B","RCDPE UNMATCH ERA",9)

"BLD",10552,"KRN",19,"NM","B","RCDPE UNPOSTED EFT OVERRIDE",13)

"BLD",10552,"KRN",19,"NM","B","RCDPE VIEW/PRINT ERA",20)

"BLD",10552,"KRN",19.1,0)
19.1
"BLD",10552,"KRN",19.1,"NM",0)
^9.68A^^0
"BLD",10552,"KRN",101,0)
101
"BLD",10552,"KRN",101,"NM",0)
^9.68A^19^18
"BLD",10552,"KRN",101,"NM",1,0)
RCDPE APAR SELECTED EEOB MENU^^0
"BLD",10552,"KRN",101,"NM",2,0)
VALM QUIT^^4^
"BLD",10552,"KRN",101,"NM",3,0)
RCDPE APAR VIEW/PRINT ERA^^4^
"BLD",10552,"KRN",101,"NM",4,0)
RCDPE APAR SPLIT LINE^^4^
"BLD",10552,"KRN",101,"NM",5,0)
RCDPE APAR RESEARCH^^4^
"BLD",10552,"KRN",101,"NM",6,0)
RCDPE APAR EEOB REVIEW^^4^
"BLD",10552,"KRN",101,"NM",7,0)
RCDPE APAR VIEW/PRINT EOB^^4^
"BLD",10552,"KRN",101,"NM",8,0)
RCDPE APAR VERIFY^^4^
"BLD",10552,"KRN",101,"NM",9,0)
VALM BLANK 1^^4^
"BLD",10552,"KRN",101,"NM",10,0)
RCDPE APAR CLAIM COMMENT^^4^
"BLD",10552,"KRN",101,"NM",11,0)
RCDPE MARK FOR AUTOPOST^^4^
"BLD",10552,"KRN",101,"NM",12,0)
RCDPE PAYER FLAGS MENU^^0
"BLD",10552,"KRN",101,"NM",13,0)
RCDPE PAYER FLAGS EDIT^^0
"BLD",10552,"KRN",101,"NM",14,0)
RCDPE PAYER FLAGS FILTER^^0
"BLD",10552,"KRN",101,"NM",15,0)
RCDPE PAYER FLAG PHARM^^0
"BLD",10552,"KRN",101,"NM",16,0)
RCDPE PAYER FLAG TRIC^^0
"BLD",10552,"KRN",101,"NM",18,0)
RCDP LIST OF RECEIPTS MENU^^0
"BLD",10552,"KRN",101,"NM",19,0)
RCDP LIST OF RECEIPTS PROCESS^^0
"BLD",10552,"KRN",101,"NM","B","RCDP LIST OF RECEIPTS MENU",18)

"BLD",10552,"KRN",101,"NM","B","RCDP LIST OF RECEIPTS PROCESS",19)

"BLD",10552,"KRN",101,"NM","B","RCDPE APAR CLAIM COMMENT",10)

"BLD",10552,"KRN",101,"NM","B","RCDPE APAR EEOB REVIEW",6)

"BLD",10552,"KRN",101,"NM","B","RCDPE APAR RESEARCH",5)

"BLD",10552,"KRN",101,"NM","B","RCDPE APAR SELECTED EEOB MENU",1)

"BLD",10552,"KRN",101,"NM","B","RCDPE APAR SPLIT LINE",4)

"BLD",10552,"KRN",101,"NM","B","RCDPE APAR VERIFY",8)

"BLD",10552,"KRN",101,"NM","B","RCDPE APAR VIEW/PRINT EOB",7)

"BLD",10552,"KRN",101,"NM","B","RCDPE APAR VIEW/PRINT ERA",3)

"BLD",10552,"KRN",101,"NM","B","RCDPE MARK FOR AUTOPOST",11)

"BLD",10552,"KRN",101,"NM","B","RCDPE PAYER FLAG PHARM",15)

"BLD",10552,"KRN",101,"NM","B","RCDPE PAYER FLAG TRIC",16)

"BLD",10552,"KRN",101,"NM","B","RCDPE PAYER FLAGS EDIT",13)

"BLD",10552,"KRN",101,"NM","B","RCDPE PAYER FLAGS FILTER",14)

"BLD",10552,"KRN",101,"NM","B","RCDPE PAYER FLAGS MENU",12)

"BLD",10552,"KRN",101,"NM","B","VALM BLANK 1",9)

"BLD",10552,"KRN",101,"NM","B","VALM QUIT",2)

"BLD",10552,"KRN",409.61,0)
409.61
"BLD",10552,"KRN",409.61,"NM",0)
^9.68A^4^4
"BLD",10552,"KRN",409.61,"NM",1,0)
RCDP RECEIPT PROFILE^^0
"BLD",10552,"KRN",409.61,"NM",2,0)
RCDPE PAYER FLAGS^^0
"BLD",10552,"KRN",409.61,"NM",3,0)
RCDPE APAR EEOB LIST^^0
"BLD",10552,"KRN",409.61,"NM",4,0)
RCDP LIST OF RECEIPTS REPORT^^0
"BLD",10552,"KRN",409.61,"NM","B","RCDP LIST OF RECEIPTS REPORT",4)

"BLD",10552,"KRN",409.61,"NM","B","RCDP RECEIPT PROFILE",1)

"BLD",10552,"KRN",409.61,"NM","B","RCDPE APAR EEOB LIST",3)

"BLD",10552,"KRN",409.61,"NM","B","RCDPE PAYER FLAGS",2)

"BLD",10552,"KRN",771,0)
771
"BLD",10552,"KRN",771,"NM",0)
^9.68A^^
"BLD",10552,"KRN",779.2,0)
779.2
"BLD",10552,"KRN",870,0)
870
"BLD",10552,"KRN",8989.51,0)
8989.51
"BLD",10552,"KRN",8989.51,"NM",0)
^9.68A^2^2
"BLD",10552,"KRN",8989.51,"NM",1,0)
RCDPE APAR^^0
"BLD",10552,"KRN",8989.51,"NM",2,0)
RCDPE EDI LOCKBOX WORKLIST^^0
"BLD",10552,"KRN",8989.51,"NM","B","RCDPE APAR",1)

"BLD",10552,"KRN",8989.51,"NM","B","RCDPE EDI LOCKBOX WORKLIST",2)

"BLD",10552,"KRN",8989.52,0)
8989.52
"BLD",10552,"KRN",8994,0)
8994
"BLD",10552,"KRN","B",.4,.4)

"BLD",10552,"KRN","B",.401,.401)

"BLD",10552,"KRN","B",.402,.402)

"BLD",10552,"KRN","B",.403,.403)

"BLD",10552,"KRN","B",.5,.5)

"BLD",10552,"KRN","B",.84,.84)

"BLD",10552,"KRN","B",3.6,3.6)

"BLD",10552,"KRN","B",3.8,3.8)

"BLD",10552,"KRN","B",9.2,9.2)

"BLD",10552,"KRN","B",9.8,9.8)

"BLD",10552,"KRN","B",19,19)

"BLD",10552,"KRN","B",19.1,19.1)

"BLD",10552,"KRN","B",101,101)

"BLD",10552,"KRN","B",409.61,409.61)

"BLD",10552,"KRN","B",771,771)

"BLD",10552,"KRN","B",779.2,779.2)

"BLD",10552,"KRN","B",870,870)

"BLD",10552,"KRN","B",8989.51,8989.51)

"BLD",10552,"KRN","B",8989.52,8989.52)

"BLD",10552,"KRN","B",8994,8994)

"BLD",10552,"QDEF")
^^^^^^^^YES
"BLD",10552,"QUES",0)
^9.62^^
"BLD",10552,"REQB",0)
^9.611^5^4
"BLD",10552,"REQB",1,0)
PRCA*4.5*318^1
"BLD",10552,"REQB",3,0)
PRCA*4.5*312^1
"BLD",10552,"REQB",4,0)
PRCA*4.5*317^1
"BLD",10552,"REQB",5,0)
PRCA*4.5*319^1
"BLD",10552,"REQB","B","PRCA*4.5*312",3)

"BLD",10552,"REQB","B","PRCA*4.5*317",4)

"BLD",10552,"REQB","B","PRCA*4.5*318",1)

"BLD",10552,"REQB","B","PRCA*4.5*319",5)

"FIA",342)
AR SITE PARAMETER
"FIA",342,0)
^RC(342,
"FIA",342,0,0)
342P
"FIA",342,0,1)
y^y^p^^^^n^^n
"FIA",342,0,10)

"FIA",342,0,11)

"FIA",342,0,"RLRO")

"FIA",342,0,"VR")
4.5^PRCA
"FIA",342,342)
1
"FIA",342,342,7.07)

"FIA",342,342,7.08)

"FIA",344)
AR BATCH PAYMENT
"FIA",344,0)
^RCY(344,
"FIA",344,0,0)
344I
"FIA",344,0,1)
y^y^p^^^^n^^n
"FIA",344,0,10)

"FIA",344,0,11)

"FIA",344,0,"RLRO")

"FIA",344,0,"VR")
4.5^PRCA
"FIA",344,344)
1
"FIA",344,344,.03)

"FIA",344,344.01)
1
"FIA",344,344.01,.09)

"FIA",344.31)
EDI THIRD PARTY EFT DETAIL
"FIA",344.31,0)
^RCY(344.31,
"FIA",344.31,0,0)
344.31PI
"FIA",344.31,0,1)
y^y^p^^^^n^^n
"FIA",344.31,0,10)

"FIA",344.31,0,11)

"FIA",344.31,0,"RLRO")

"FIA",344.31,0,"VR")
4.5^PRCA
"FIA",344.31,344.31)
1
"FIA",344.31,344.31,3)

"FIA",344.49)
EDI LOCKBOX EOB WORKLIST
"FIA",344.49,0)
^RCY(344.49,
"FIA",344.49,0,0)
344.49P
"FIA",344.49,0,1)
y^y^p^^^^n^^n
"FIA",344.49,0,10)

"FIA",344.49,0,11)

"FIA",344.49,0,"RLRO")

"FIA",344.49,0,"VR")
4.5^PRCA
"FIA",344.49,344.49)
1
"FIA",344.49,344.491)
1
"FIA",344.49,344.491,.1)

"FIA",344.6)
RCDPE AUTO-PAY EXCLUSION
"FIA",344.6,0)
^RCY(344.6,
"FIA",344.6,0,0)
344.6I
"FIA",344.6,0,1)
y^y^p^^^^n^^n
"FIA",344.6,0,10)

"FIA",344.6,0,11)

"FIA",344.6,0,"RLRO")

"FIA",344.6,0,"VR")
4.5^PRCA
"FIA",344.6,344.6)
1
"FIA",344.6,344.6,.01)

"FIA",344.6,344.6,.09)

"FIA",344.6,344.6,.1)

"FIA",344.61)
RCDPE PARAMETER
"FIA",344.61,0)
^RCY(344.61,
"FIA",344.61,0,0)
344.61P
"FIA",344.61,0,1)
y^y^p^^^^n^^n
"FIA",344.61,0,10)

"FIA",344.61,0,11)

"FIA",344.61,0,"RLRO")

"FIA",344.61,0,"VR")
4.5^PRCA
"FIA",344.61,344.61)
1
"FIA",344.61,344.61,.06)

"FIA",344.61,344.61,.07)

"FIA",344.61,344.61,.1)

"FIA",344.73)
RCDPE COMMENT HISTORY
"FIA",344.73,0)
^RCY(344.73,
"FIA",344.73,0,0)
344.73P
"FIA",344.73,0,1)
y^y^f^^^^n
"FIA",344.73,0,10)

"FIA",344.73,0,11)

"FIA",344.73,0,"RLRO")

"FIA",344.73,0,"VR")
4.5^PRCA
"FIA",344.73,344.73)
0
"INIT")
POST^RCP321
"IX",344.6,344.6,"B",0)
344.6^B^Index by Name (full 60)^R^^F^IR^I^344.6^^^^^LS
"IX",344.6,344.6,"B",.1,0)
^^2^2^3170620^
"IX",344.6,344.6,"B",.1,1,0)
This index allows lookup using the full 60 character long PAYER NAME 
"IX",344.6,344.6,"B",.1,2,0)
field.
"IX",344.6,344.6,"B",1)
S ^RCY(344.6,"B",$E(X,1,60),DA)=""
"IX",344.6,344.6,"B",2)
K ^RCY(344.6,"B",$E(X,1,60),DA)
"IX",344.6,344.6,"B",2.5)
K ^RCY(344.6,"B")
"IX",344.6,344.6,"B",11.1,0)
^.114IA^1^1
"IX",344.6,344.6,"B",11.1,1,0)
1^F^344.6^.01^60^1^F
"IX",344.6,344.6,"CPID",0)
344.6^CPID^Combination of the PAYER NAME and PAYER ID^R^^R^IR^I^344.6^^^^^LS
"IX",344.6,344.6,"CPID",.1,0)
^^2^2^3140506^
"IX",344.6,344.6,"CPID",.1,1,0)
This index is used to ensure that the PAYER NAME /PAYER ID combination is 
"IX",344.6,344.6,"CPID",.1,2,0)
unique.
"IX",344.6,344.6,"CPID",1)
S ^RCY(344.6,"CPID",$E(X(1),1,60),$E(X(2),1,30),DA)=""
"IX",344.6,344.6,"CPID",2)
K ^RCY(344.6,"CPID",$E(X(1),1,60),$E(X(2),1,30),DA)
"IX",344.6,344.6,"CPID",2.5)
K ^RCY(344.6,"CPID")
"IX",344.6,344.6,"CPID",11.1,0)
^.114IA^2^2
"IX",344.6,344.6,"CPID",11.1,1,0)
1^F^344.6^.01^60^1^F
"IX",344.6,344.6,"CPID",11.1,2,0)
2^F^344.6^.02^30^2^F
"IX",344.73,344.73,"AC",0)
344.73^AC^Lookup index^MU^^R^IR^I^344.73^^^^^S
"IX",344.73,344.73,"AC",.1,0)
^^2^2^3170620^
"IX",344.73,344.73,"AC",.1,1,0)
This index allows lookup of comment history by receipt, receipt line 
"IX",344.73,344.73,"AC",.1,2,0)
number and date/time entered.
"IX",344.73,344.73,"AC",1)
S ^RCY(344.73,"AC",X(1),X(2),X(3))=DA
"IX",344.73,344.73,"AC",2)
K ^RCY(344.73,"AC",X(1),X(2),X(3))
"IX",344.73,344.73,"AC",2.5)
K ^RCY(344.73,"AC")
"IX",344.73,344.73,"AC",11.1,0)
^.114IA^3^3
"IX",344.73,344.73,"AC",11.1,1,0)
1^F^344.73^.01^^1^F
"IX",344.73,344.73,"AC",11.1,2,0)
2^F^344.73^1^^2^F
"IX",344.73,344.73,"AC",11.1,3,0)
3^F^344.73^3^^3^F
"IX",344.73,344.73,"C",0)
344.73^C^Uniqueness Index for Key 'A' of File #344.73^R^^R^IR^I^344.73^^^^^LS
"IX",344.73,344.73,"C",.1,0)
^^2^2^3170620^
"IX",344.73,344.73,"C",.1,1,0)
This is an index by receipt, receipt line number, user and date/time 
"IX",344.73,344.73,"C",.1,2,0)
entered used to track changes comment history.
"IX",344.73,344.73,"C",1)
S ^RCY(344.73,"C",X(1),X(2),X(3),X(4),DA)=""
"IX",344.73,344.73,"C",2)
K ^RCY(344.73,"C",X(1),X(2),X(3),X(4),DA)
"IX",344.73,344.73,"C",2.5)
K ^RCY(344.73,"C")
"IX",344.73,344.73,"C",11.1,0)
^.114IA^4^4
"IX",344.73,344.73,"C",11.1,1,0)
1^F^344.73^.01^^1
"IX",344.73,344.73,"C",11.1,2,0)
2^F^344.73^1^^2
"IX",344.73,344.73,"C",11.1,3,0)
3^F^344.73^2^^3
"IX",344.73,344.73,"C",11.1,4,0)
4^F^344.73^3^^4
"KEY",344.73,344.73,"A",0)
344.73^A^P^1473
"KEY",344.73,344.73,"A",2,0)
^.312IA^4^4
"KEY",344.73,344.73,"A",2,1,0)
.01^344.73^1
"KEY",344.73,344.73,"A",2,2,0)
1^344.73^2
"KEY",344.73,344.73,"A",2,3,0)
2^344.73^3
"KEY",344.73,344.73,"A",2,4,0)
3^344.73^4
"KEYPTR",344.73,344.73,"A")
344.73^C
"KRN",3.8,1427,-1)
0^1
"KRN",3.8,1427,0)
RCDPE AUDIT^PU^y^^^0^
"KRN",3.8,1427,2,0)
^3.801^3^3^3150617^^^^
"KRN",3.8,1427,2,1,0)
This is the mail group that will receive warning bulletins produced by the
"KRN",3.8,1427,2,2,0)
ePayments Workload Notification process. Warnings for overdue EFT and ERA
"KRN",3.8,1427,2,3,0)
are sent to this group.
"KRN",3.8,1427,3)

"KRN",9.2,1554,-1)
0^1
"KRN",9.2,1554,0)
RCDPE PAYER FLAGS GENERAL^Flag Payers as Pharmacy/Tricare^3170512.083^^
"KRN",9.2,1554,1,0)
^^43^43^3170822^
"KRN",9.2,1554,1,1,0)
PH - Use this option to flag/un-flag a payer as a Pharmacy payer.  The
"KRN",9.2,1554,1,2,0)
     selected entries will be toggled, so that un-flagged entries are
"KRN",9.2,1554,1,3,0)
     flagged, and flagged entries are un-flagged.
"KRN",9.2,1554,1,4,0)
 
"KRN",9.2,1554,1,5,0)
TR - Use this option to flag/un-flag a payer as a Tricare payer.  The
"KRN",9.2,1554,1,6,0)
     selected entries will be toggled, as for the PH option.
"KRN",9.2,1554,1,7,0)
 
"KRN",9.2,1554,1,8,0)
ED - Use this option to edit the Pharmacy and Tricare flags on a single
"KRN",9.2,1554,1,9,0)
     payer.
"KRN",9.2,1554,1,10,0)
 
"KRN",9.2,1554,1,11,0)
FI - Use this option to change the filters on the list, to display only
"KRN",9.2,1554,1,12,0)
     entries that match the filter criteria. You may filter the list by
"KRN",9.2,1554,1,13,0)
     Date Added and by the status of the Pharmacy and Tricare flags.
"KRN",9.2,1554,1,14,0)
 
"KRN",9.2,1554,1,15,0)
PRE-SELECTION
"KRN",9.2,1554,1,16,0)
      - If you select any of the above options you will be prompted for
"KRN",9.2,1554,1,17,0)
        the appropriate information to complete the action.  However you
"KRN",9.2,1554,1,18,0)
        may save time and keystrokes by preselection of the answers.  Type
"KRN",9.2,1554,1,19,0)
        the equals sign (=) after the option and specify the answers as
"KRN",9.2,1554,1,20,0)
        follows:
"KRN",9.2,1554,1,21,0)
 
"KRN",9.2,1554,1,22,0)
        ED=Line to Edit
"KRN",9.2,1554,1,23,0)
        e.g. ED=10      - Edit Pharmacy and Tricare flags for line 10
"KRN",9.2,1554,1,24,0)
 
"KRN",9.2,1554,1,25,0)
        PH=List of Lines
"KRN",9.2,1554,1,26,0)
        TR=List of Lines
"KRN",9.2,1554,1,27,0)
 
"KRN",9.2,1554,1,28,0)
        List of lines may be specified using the standard format. Use ';'
"KRN",9.2,1554,1,29,0)
        to separate individual lines in the list.  Use '-' to specify
"KRN",9.2,1554,1,30,0)
        a range of lines.
"KRN",9.2,1554,1,31,0)
        e.g. PH=10       - toggle pharmacy for line 10
"KRN",9.2,1554,1,32,0)
             PH=1;4;8    - toggle pharmacy for lines 1, 4 and 8
"KRN",9.2,1554,1,33,0)
             TR=3-9      - toggle Tricare for lines 3 through 9
"KRN",9.2,1554,1,34,0)
             PH=1;3-9;12 - toggle pharmacy for lines 1, 3 through 9 and 12
"KRN",9.2,1554,1,35,0)
 
"KRN",9.2,1554,1,36,0)
 
"KRN",9.2,1554,1,37,0)
        FI=Type;[Start];[End]
"KRN",9.2,1554,1,38,0)
 
"KRN",9.2,1554,1,39,0)
        Specify the type of filter and optionally the start and end date
"KRN",9.2,1554,1,40,0)
        for filter by Date Added.
"KRN",9.2,1554,1,41,0)
        e.g. FI=P       - Change filter to show lines flagged pharmacy
"KRN",9.2,1554,1,42,0)
             FI=A;T-7;T - Change filter to show all records added in the
"KRN",9.2,1554,1,43,0)
                          last 7 days.
"KRN",19,2919461,-1)
4^4
"KRN",19,2919461,0)
RCDPE EXCEPTION PROCESSING
"KRN",19,2919462,-1)
4^18
"KRN",19,2919462,0)
RCDPE EFT AGING REPORT
"KRN",19,2919463,-1)
4^19
"KRN",19,2919463,0)
RCDPE ERA AGING REPORT
"KRN",19,2919464,-1)
4^5
"KRN",19,2919464,0)
RCDPE MATCH EFT TO ERA
"KRN",19,2919465,-1)
4^3
"KRN",19,2919465,0)
RCDPE EDI LOCKBOX WORKLIST
"KRN",19,2919467,-1)
0^2
"KRN",19,2919467,0)
RCDPE EDI LOCKBOX MENU^EDI Lockbox (ePayments)^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2919467,1,0)
^19.06^1^1^3170619^^^^
"KRN",19,2919467,1,1,0)
This is the menu that contains the EDI Lockbox functionality.
"KRN",19,2919467,10,0)
^19.01IP^18^18
"KRN",19,2919467,10,2,0)
2919465^WL^10
"KRN",19,2919467,10,2,"^")
RCDPE EDI LOCKBOX WORKLIST
"KRN",19,2919467,10,5,0)
2919461^EXC^5
"KRN",19,2919467,10,5,"^")
RCDPE EXCEPTION PROCESSING
"KRN",19,2919467,10,6,0)
2919464^MA^20
"KRN",19,2919467,10,6,"^")
RCDPE MATCH EFT TO ERA
"KRN",19,2919467,10,7,0)
2919470^REP^55
"KRN",19,2919467,10,7,"^")
RCDPE EDI LOCKBOX REPORTS MENU
"KRN",19,2919467,10,8,0)
2919471^MM^30
"KRN",19,2919467,10,8,"^")
RCDPE MANUAL MATCH EFT-ERA
"KRN",19,2919467,10,9,0)
2919472^ZB^70
"KRN",19,2919467,10,9,"^")
RCDPE MARK 0-BAL EFT MATCHED
"KRN",19,2919467,10,11,0)
2919476^UP^65
"KRN",19,2919467,10,11,"^")
RCDPE ERA POSTED BY PAPER EOB
"KRN",19,2919467,10,12,0)
2919478^UN^60
"KRN",19,2919467,10,12,"^")
RCDPE UNMATCH ERA
"KRN",19,2919467,10,13,0)
2921657^REM^50
"KRN",19,2919467,10,13,"^")
RCDPE REMOVE ERA FROM WORKLIST
"KRN",19,2919467,10,14,0)
2922178^MCR^25
"KRN",19,2919467,10,14,"^")
RCDPE EEOB MOVE/COPY/REMOVE
"KRN",19,2919467,10,15,0)
2921609^REFT^45
"KRN",19,2919467,10,15,"^")
RCDPE REMOVE DUP DEPOSITS
"KRN",19,2919467,10,16,0)
2922187^OEFT^40
"KRN",19,2919467,10,16,"^")
RCDPE UNPOSTED EFT OVERRIDE
"KRN",19,2919467,10,17,0)
2922188^APAR^15
"KRN",19,2919467,10,17,"^")
RCDPE APAR
"KRN",19,2919467,10,18,0)
2922476^IDP^80
"KRN",19,2919467,10,18,"^")
RCDPE PAYER IDENTIFY
"KRN",19,2919467,10.1)

"KRN",19,2919467,99)
64572,45117
"KRN",19,2919467,99.1)
64572,45122
"KRN",19,2919467,"U")
EDI LOCKBOX (EPAYMENTS)
"KRN",19,2919468,-1)
4^17
"KRN",19,2919468,0)
RCDPE EDI LOCKBOX ACT REPORT
"KRN",19,2919470,-1)
0^15
"KRN",19,2919470,0)
RCDPE EDI LOCKBOX REPORTS MENU^EDI Lockbox (ePayments) Reports Menu^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2919470,1,0)
2^19.06^2^2^3171023^^^^
"KRN",19,2919470,1,1,0)
This menu allows access to all the reports that can be produced for EDI
"KRN",19,2919470,1,2,0)
Lockbox.
"KRN",19,2919470,10,0)
^19.01IP^25^25
"KRN",19,2919470,10,1,0)
2919468^DA^10
"KRN",19,2919470,10,1,"^")
RCDPE EDI LOCKBOX ACT REPORT
"KRN",19,2919470,10,3,0)
2919462^EFT^30
"KRN",19,2919470,10,3,"^")
RCDPE EFT AGING REPORT
"KRN",19,2919470,10,4,0)
2919463^ERA^40
"KRN",19,2919470,10,4,"^")
RCDPE ERA AGING REPORT
"KRN",19,2919470,10,6,0)
2919477^VP
"KRN",19,2919470,10,6,"^")
RCDPE VIEW/PRINT ERA
"KRN",19,2919470,10,7,0)
2919712^AB^60
"KRN",19,2919470,10,7,"^")
RCDPE ACTIVE WITH EEOB REPORT
"KRN",19,2919470,10,9,0)
2921658^REMR^
"KRN",19,2919470,10,9,"^")
RCDPE REMOVED ERA AUDIT
"KRN",19,2919470,10,10,0)
2921610^POSR^
"KRN",19,2919470,10,10,"^")
RCDPE ERA W/PAPER EOB REPORT
"KRN",19,2919470,10,11,0)
2921611^DUPR
"KRN",19,2919470,10,11,"^")
RCDPE EFT AUDIT REPORT
"KRN",19,2919470,10,12,0)
2922179^MCR
"KRN",19,2919470,10,12,"^")
RCDPE EEOB MOVE/COPY/RMOVE RPT
"KRN",19,2919470,10,13,0)
2922181^AP^80
"KRN",19,2919470,10,13,"^")
RCDPE AUTO-POST REPORT
"KRN",19,2919470,10,14,0)
2922182^AD^70
"KRN",19,2919470,10,14,"^")
RCDPE AUTO-DECREASE REPORT
"KRN",19,2919470,10,15,0)
2922186^PX
"KRN",19,2919470,10,15,"^")
RCDPE PAYER EXCLUSION NAME TIN
"KRN",19,2919470,10,16,0)
2922296^TB
"KRN",19,2919470,10,16,"^")
RCDPE CARC/RARC TABLE REPORT
"KRN",19,2919470,10,18,0)
2922297^PLB
"KRN",19,2919470,10,18,"^")
RCDPE PROVIDER LVL ADJ REPORT
"KRN",19,2919470,10,19,0)
2922298^ETA
"KRN",19,2919470,10,19,"^")
RCDPE EFT TRANSACTION AUD REP
"KRN",19,2919470,10,20,0)
2922295^CR
"KRN",19,2919470,10,20,"^")
RCDPE CARC CODE PAYER REPORT
"KRN",19,2919470,10,21,0)
2922310^ESC
"KRN",19,2919470,10,21,"^")
RCDPE ERA STATUS CHNG AUD REP
"KRN",19,2919470,10,22,0)
2922424^UN^50
"KRN",19,2919470,10,22,"^")
RCDPE UNAPPLIED EFT DEP REPORT
"KRN",19,2919470,10,23,0)
2922451^APR^90
"KRN",19,2919470,10,23,"^")
RCDPE AUTO-POST RECEIPT REPORT
"KRN",19,2919470,10,24,0)
2922302^ETR^45
"KRN",19,2919470,10,24,"^")
RCDPE EFT-ERA TRENDING REPORT
"KRN",19,2919470,10,25,0)
2922299^QS
"KRN",19,2919470,10,25,"^")
RCDPE CARC/RARC QUICK SEARCH
"KRN",19,2919470,99)
64579,21827
"KRN",19,2919470,99.1)
59232,49629
"KRN",19,2919470,"U")
EDI LOCKBOX (EPAYMENTS) REPORT
"KRN",19,2919471,-1)
4^6
"KRN",19,2919471,0)
RCDPE MANUAL MATCH EFT-ERA
"KRN",19,2919472,-1)
4^7
"KRN",19,2919472,0)
RCDPE MARK 0-BAL EFT MATCHED
"KRN",19,2919473,-1)
0^37
"KRN",19,2919473,0)
RCDPE MOVE ERA TO SUSPENSE^Move ERA Total To Suspense^THIS OPTION IS NO LONGER IN USE^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2919473,1,0)
^19.06^10^10^3030520^^^^
"KRN",19,2919473,1,1,0)
This option will allow the user to choose an ERA record that is matched
"KRN",19,2919473,1,2,0)
to an EFT deposit and will create a receipt to post the total amount
"KRN",19,2919473,1,3,0)
reported as being paid on the EFT to SUSPENSE.  The ERA record must
"KRN",19,2919473,1,4,0)
not already have a receipt attached to it.  This option is used to force a
"KRN",19,2919473,1,5,0)
'TR' document to be generated from the EDI Lockbox deposit account to the
"KRN",19,2919473,1,6,0)
suspense account when creating/posting a receipt can not be done due to
"KRN",19,2919473,1,7,0)
take backs or other situations where the EFT and ERA amounts do not match.
"KRN",19,2919473,1,8,0)
NO posting to individual claims in AR is accomplished by this option.
"KRN",19,2919473,1,9,0)
These must be done manually.  FMS is updated if there is any payment
"KRN",19,2919473,1,10,0)
indicated on the EFT.
"KRN",19,2919473,25)
SUSPERA^RCDPEWL5
"KRN",19,2919473,"U")
MOVE ERA TOTAL TO SUSPENSE
"KRN",19,2919476,-1)
4^8
"KRN",19,2919476,0)
RCDPE ERA POSTED BY PAPER EOB
"KRN",19,2919477,-1)
4^20
"KRN",19,2919477,0)
RCDPE VIEW/PRINT ERA
"KRN",19,2919478,-1)
4^9
"KRN",19,2919478,0)
RCDPE UNMATCH ERA
"KRN",19,2919712,-1)
4^21
"KRN",19,2919712,0)
RCDPE ACTIVE WITH EEOB REPORT
"KRN",19,2921609,-1)
4^12
"KRN",19,2921609,0)
RCDPE REMOVE DUP DEPOSITS
"KRN",19,2921610,-1)
4^23
"KRN",19,2921610,0)
RCDPE ERA W/PAPER EOB REPORT
"KRN",19,2921611,-1)
4^24
"KRN",19,2921611,0)
RCDPE EFT AUDIT REPORT
"KRN",19,2921657,-1)
4^10
"KRN",19,2921657,0)
RCDPE REMOVE ERA FROM WORKLIST
"KRN",19,2921658,-1)
4^22
"KRN",19,2921658,0)
RCDPE REMOVED ERA AUDIT
"KRN",19,2922178,-1)
4^11
"KRN",19,2922178,0)
RCDPE EEOB MOVE/COPY/REMOVE
"KRN",19,2922179,-1)
0^1
"KRN",19,2922179,0)
RCDPE EEOB MOVE/COPY/RMOVE RPT^EEOB Move/Copy/Remove Audit Report^^R^^^^^^^y^ACCOUNTS RECEIVABLE
"KRN",19,2922179,1,0)
^19.06^3^3^3140529^^^^
"KRN",19,2922179,1,1,0)
This report lists EEOBs that have either been moved or copied to new claim
"KRN",19,2922179,1,2,0)
numbers or have been removed from a claim. The report can be filtered by
"KRN",19,2922179,1,3,0)
Station/Division and by date range.  
"KRN",19,2922179,25)
EOB^RCDPEM4
"KRN",19,2922179,"U")
EEOB MOVE/COPY/REMOVE AUDIT RE
"KRN",19,2922181,-1)
4^25
"KRN",19,2922181,0)
RCDPE AUTO-POST REPORT
"KRN",19,2922182,-1)
4^26
"KRN",19,2922182,0)
RCDPE AUTO-DECREASE REPORT
"KRN",19,2922186,-1)
4^27
"KRN",19,2922186,0)
RCDPE PAYER EXCLUSION NAME TIN
"KRN",19,2922187,-1)
4^13
"KRN",19,2922187,0)
RCDPE UNPOSTED EFT OVERRIDE
"KRN",19,2922188,-1)
4^14
"KRN",19,2922188,0)
RCDPE APAR
"KRN",19,2922295,-1)
4^31
"KRN",19,2922295,0)
RCDPE CARC CODE PAYER REPORT
"KRN",19,2922296,-1)
4^28
"KRN",19,2922296,0)
RCDPE CARC/RARC TABLE REPORT
"KRN",19,2922297,-1)
4^29
"KRN",19,2922297,0)
RCDPE PROVIDER LVL ADJ REPORT
"KRN",19,2922298,-1)
4^30
"KRN",19,2922298,0)
RCDPE EFT TRANSACTION AUD REP
"KRN",19,2922299,-1)
4^36
"KRN",19,2922299,0)
RCDPE CARC/RARC QUICK SEARCH
"KRN",19,2922302,-1)
4^35
"KRN",19,2922302,0)
RCDPE EFT-ERA TRENDING REPORT
"KRN",19,2922310,-1)
4^32
"KRN",19,2922310,0)
RCDPE ERA STATUS CHNG AUD REP
"KRN",19,2922424,-1)
4^33
"KRN",19,2922424,0)
RCDPE UNAPPLIED EFT DEP REPORT
"KRN",19,2922451,-1)
4^34
"KRN",19,2922451,0)
RCDPE AUTO-POST RECEIPT REPORT
"KRN",19,2922476,-1)
0^16
"KRN",19,2922476,0)
RCDPE PAYER IDENTIFY^Identify Payers^^R^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",19,2922476,1,0)
^19.06^7^7^3170822^^
"KRN",19,2922476,1,1,0)
The option displays a list of payers from the PAYER EXCLUSION file 
"KRN",19,2922476,1,2,0)
(#344.6) and allows an end user with the appropriate security access to 
"KRN",19,2922476,1,3,0)
flag entries as Pharmacy and/or Tricare. Entries can be either, neither 
"KRN",19,2922476,1,4,0)
or both.  The option allows the user to filter the list by date added.  
"KRN",19,2922476,1,5,0)
This is important as entries are added to the file automatically by the 
"KRN",19,2922476,1,6,0)
nightly process.  A user needs to be able to see what entries were 
"KRN",19,2922476,1,7,0)
added recently and if they need to be flagged.
"KRN",19,2922476,25)
EN^RCDPEP
"KRN",19,2922476,"U")
IDENTIFY PAYERS
"KRN",101,1697,-1)
4^2
"KRN",101,1697,0)
VALM QUIT
"KRN",101,1702,-1)
4^9
"KRN",101,1702,0)
VALM BLANK 1
"KRN",101,7963,-1)
4^3
"KRN",101,7963,0)
RCDPE APAR VIEW/PRINT ERA
"KRN",101,7965,-1)
0^1
"KRN",101,7965,0)
RCDPE APAR SELECTED EEOB MENU^APAR Selected EEOB^^M^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,7965,1,0)
^101.06^3^3^3140515^^^^
"KRN",101,7965,1,1,0)
The APAR selected EEOB menu contains the actions that can be performed 
"KRN",101,7965,1,2,0)
manually on the EEOB item that did not get a receipt when the associated 
"KRN",101,7965,1,3,0)
ERA record was processed during the auto-post nightly process.
"KRN",101,7965,4)
25^4
"KRN",101,7965,10,0)
^101.01PA^21^21
"KRN",101,7965,10,1,0)
1697^^999^^^EXIT
"KRN",101,7965,10,1,"^")
VALM QUIT
"KRN",101,7965,10,3,0)
7966^^100^
"KRN",101,7965,10,3,"^")
RCDPE MARK FOR AUTOPOST
"KRN",101,7965,10,10,0)
7963^ERA^220^
"KRN",101,7965,10,10,"^")
RCDPE APAR VIEW/PRINT ERA
"KRN",101,7965,10,11,0)
7967^^50^
"KRN",101,7965,10,11,"^")
RCDPE APAR SPLIT LINE
"KRN",101,7965,10,13,0)
7969^^240^^^Research Menu
"KRN",101,7965,10,13,"^")
RCDPE APAR RESEARCH
"KRN",101,7965,10,14,0)
7970^^310^
"KRN",101,7965,10,14,"^")
RCDPE APAR EEOB REVIEW
"KRN",101,7965,10,15,0)
7971^EOB^210^
"KRN",101,7965,10,15,"^")
RCDPE APAR VIEW/PRINT EOB
"KRN",101,7965,10,16,0)
7973^^320^^^
"KRN",101,7965,10,16,"^")
RCDPE APAR VERIFY
"KRN",101,7965,10,19,0)
1702^^250^
"KRN",101,7965,10,19,"^")
VALM BLANK 1
"KRN",101,7965,10,20,0)
8017^^150^
"KRN",101,7965,10,20,"^")
RCDPE APAR CLAIM COMMENT
"KRN",101,7965,10,21,0)
1702^^170^
"KRN",101,7965,10,21,"^")
VALM BLANK 1
"KRN",101,7965,15)
I $G(RCFASTXT) S VALMBCK="Q"
"KRN",101,7965,26)
D SHOW^VALM
"KRN",101,7965,28)
Select Action: 
"KRN",101,7965,99)
64572,45117
"KRN",101,7966,-1)
4^11
"KRN",101,7966,0)
RCDPE MARK FOR AUTOPOST
"KRN",101,7967,-1)
4^4
"KRN",101,7967,0)
RCDPE APAR SPLIT LINE
"KRN",101,7969,-1)
4^5
"KRN",101,7969,0)
RCDPE APAR RESEARCH
"KRN",101,7970,-1)
4^6
"KRN",101,7970,0)
RCDPE APAR EEOB REVIEW
"KRN",101,7971,-1)
4^7
"KRN",101,7971,0)
RCDPE APAR VIEW/PRINT EOB
"KRN",101,7973,-1)
4^8
"KRN",101,7973,0)
RCDPE APAR VERIFY
"KRN",101,8017,-1)
4^10
"KRN",101,8017,0)
RCDPE APAR CLAIM COMMENT
"KRN",101,8358,-1)
0^13
"KRN",101,8358,0)
RCDPE PAYER FLAGS EDIT^Edit Flags^^A^^^^^^^^
"KRN",101,8358,20)
D EDIT^RCDPEP
"KRN",101,8358,99)
64572,45117
"KRN",101,8359,-1)
0^14
"KRN",101,8359,0)
RCDPE PAYER FLAGS FILTER^Filter^^A^^^^^^^^
"KRN",101,8359,20)
D FILTER^RCDPEP
"KRN",101,8359,99)
64572,45117
"KRN",101,8360,-1)
0^15
"KRN",101,8360,0)
RCDPE PAYER FLAG PHARM^Flag Pharmacy^^A^^^^^^^^
"KRN",101,8360,20)
D FLAGP^RCDPEP
"KRN",101,8360,99)
64572,45117
"KRN",101,8361,-1)
0^16
"KRN",101,8361,0)
RCDPE PAYER FLAG TRIC^Flag Tricare^^A^^^^^^^^
"KRN",101,8361,20)
D FLAGT^RCDPEP
"KRN",101,8361,99)
64572,45117
"KRN",101,8362,-1)
0^12
"KRN",101,8362,0)
RCDPE PAYER FLAGS MENU^Payer Flags^^M^^^^^^^^
"KRN",101,8362,4)
26^4
"KRN",101,8362,10,0)
^101.01PA^5^5
"KRN",101,8362,10,1,0)
8358^ED^100^
"KRN",101,8362,10,1,"^")
RCDPE PAYER FLAGS EDIT
"KRN",101,8362,10,2,0)
8359^FI^110^
"KRN",101,8362,10,2,"^")
RCDPE PAYER FLAGS FILTER
"KRN",101,8362,10,3,0)
8360^PH^200^
"KRN",101,8362,10,3,"^")
RCDPE PAYER FLAG PHARM
"KRN",101,8362,10,4,0)
8361^TR^210^
"KRN",101,8362,10,4,"^")
RCDPE PAYER FLAG TRIC
"KRN",101,8362,10,5,0)
1697^Q^900^
"KRN",101,8362,10,5,"^")
VALM QUIT
"KRN",101,8362,26)
D SHOW^VALM
"KRN",101,8362,28)
Select Action:
"KRN",101,8362,99)
64572,45117
"KRN",101,8363,-1)
0^19
"KRN",101,8363,0)
RCDP LIST OF RECEIPTS PROCESS^Receipt Processing^^A^^^^^^^^ACCOUNTS RECEIVABLE
"KRN",101,8363,20)
D RP^RCDPRL
"KRN",101,8363,99)
64572,45117
"KRN",101,8364,-1)
0^18
"KRN",101,8364,0)
RCDP LIST OF RECEIPTS MENU^List of Receipts Menu^^M^^^^^^^^
"KRN",101,8364,4)
26^4
"KRN",101,8364,10,0)
^101.01PA^2^2
"KRN",101,8364,10,1,0)
8363^RP^100^
"KRN",101,8364,10,1,"^")
RCDP LIST OF RECEIPTS PROCESS
"KRN",101,8364,10,2,0)
1697^Q^900^
"KRN",101,8364,10,2,"^")
VALM QUIT
"KRN",101,8364,26)
D SHOW^VALM
"KRN",101,8364,99)
64572,45117
"KRN",409.61,423,-1)
0^1
"KRN",409.61,423,0)
RCDP RECEIPT PROFILE^1^^80^7^16^1^1^Transaction^RCDP RECEIPT PROFILE MENU^Receipt Profile^1^^1
"KRN",409.61,423,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,423,"ARRAY")
 ^TMP("RCDPRPLM",$J)
"KRN",409.61,423,"COL",0)
^409.621^8^7
"KRN",409.61,423,"COL",2,0)
ACCOUNT^7^26^Account
"KRN",409.61,423,"COL",3,0)
PAY DATE^35^8^Pay Date
"KRN",409.61,423,"COL",4,0)
PAY AMOUNT^63^7^Pay Amt
"KRN",409.61,423,"COL",5,0)
PROC AMOUNT^72^8^Proc Amt
"KRN",409.61,423,"COL",6,0)
OPEN BY^45^7^Open By
"KRN",409.61,423,"COL",7,0)
TRANS NUMBER^2^1^#
"KRN",409.61,423,"COL",8,0)
EDIT BY^54^7^Edit By
"KRN",409.61,423,"COL","B","ACCOUNT",2)

"KRN",409.61,423,"COL","B","BY",6)

"KRN",409.61,423,"COL","B","EDIT BY",8)

"KRN",409.61,423,"COL","B","OPEN BY",6)

"KRN",409.61,423,"COL","B","PAY AMOUNT",4)

"KRN",409.61,423,"COL","B","PAY DATE",3)

"KRN",409.61,423,"COL","B","PROC AMOUNT",5)

"KRN",409.61,423,"COL","B","TRANS NUMBER",7)

"KRN",409.61,423,"FNL")
D EXIT^RCDPRPLM
"KRN",409.61,423,"HDR")
D HDR^RCDPRPLM
"KRN",409.61,423,"INIT")
D INIT^RCDPRPLM
"KRN",409.61,726,-1)
0^3
"KRN",409.61,726,0)
RCDPE APAR EEOB LIST^1^^93^6^19^1^1^EEOB Line^RCDPE APAR EEOB LIST MENU^AUTOPOST - AWAIT RESOLUTION^1^^1
"KRN",409.61,726,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,726,"ARRAY")
 ^TMP("RCDPE-APAR_EEOB_WL",$J)
"KRN",409.61,726,"COL",0)
^409.621^3^2
"KRN",409.61,726,"COL",2,0)
PAYER_LN^9^50^Payer Name/ID
"KRN",409.61,726,"COL",3,0)
DATE POSTED^81^12^Date Posted
"KRN",409.61,726,"COL","B","DATE POSTED",3)

"KRN",409.61,726,"COL","B","PAYER_LN",2)

"KRN",409.61,726,"FNL")
D EXIT^RCDPEAA1
"KRN",409.61,726,"HDR")
D HDR^RCDPEAA1
"KRN",409.61,726,"INIT")
D INIT^RCDPEAA1
"KRN",409.61,795,-1)
0^2
"KRN",409.61,795,0)
RCDPE PAYER FLAGS^1^^95^4^19^1^1^^RCDPE PAYER FLAGS MENU^Payer Pharmacy/Tricare^1^^1
"KRN",409.61,795,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,795,"ARRAY")
 ^TMP("RCDPEP",$J)
"KRN",409.61,795,"COL",0)
^409.621^6^6
"KRN",409.61,795,"COL",1,0)
LINE^1^4^ #
"KRN",409.61,795,"COL",2,0)
PAYER^6^55^PAYER^^1
"KRN",409.61,795,"COL",3,0)
PHARMACY FLAG^75^2^Rx
"KRN",409.61,795,"COL",4,0)
TRICARE FLAG^79^2^TR
"KRN",409.61,795,"COL",5,0)
ID^63^10^TIN
"KRN",409.61,795,"COL",6,0)
DATE ADDED^82^12^DATE ADDED
"KRN",409.61,795,"COL","AIDENT",1,2)

"KRN",409.61,795,"COL","B","DATE ADDED",6)

"KRN",409.61,795,"COL","B","ID",5)

"KRN",409.61,795,"COL","B","LINE",1)

"KRN",409.61,795,"COL","B","PAYER",2)

"KRN",409.61,795,"COL","B","PHARMACY FLAG",3)

"KRN",409.61,795,"COL","B","TRICARE FLAG",4)

"KRN",409.61,795,"FNL")
D EXIT^RCDPEP
"KRN",409.61,795,"HDR")
D HDR^RCDPEP
"KRN",409.61,795,"HLP")
D HELP^RCDPEP
"KRN",409.61,795,"INIT")
D INIT^RCDPEP
"KRN",409.61,796,-1)
0^4
"KRN",409.61,796,0)
RCDP LIST OF RECEIPTS REPORT^1^^80^6^20^1^1^^RCDP LIST OF RECEIPTS MENU^LIST OF RECEIPTS^1^^1
"KRN",409.61,796,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,796,"ARRAY")

"KRN",409.61,796,"COL",0)
^409.621^9^9
"KRN",409.61,796,"COL",1,0)
DATE OPENED^7^8^DATE
"KRN",409.61,796,"COL",2,0)
RECEIPT^16^12^RECEIPT
"KRN",409.61,796,"COL",3,0)
TYPE^29^5^TYPE
"KRN",409.61,796,"COL",4,0)
USER INITIALS^35^2^US
"KRN",409.61,796,"COL",5,0)
COUNT^38^5^COUNT
"KRN",409.61,796,"COL",6,0)
AMOUNT^48^6^AMOUNT
"KRN",409.61,796,"COL",7,0)
FMS DOC^56^13^FMS CR DOC
"KRN",409.61,796,"COL",8,0)
STATUS^73^6^STATUS
"KRN",409.61,796,"COL",9,0)
LINE^1^4^ #
"KRN",409.61,796,"COL","B","AMOUNT",6)

"KRN",409.61,796,"COL","B","COUNT",5)

"KRN",409.61,796,"COL","B","DATE OPENED",1)

"KRN",409.61,796,"COL","B","FMS DOC",7)

"KRN",409.61,796,"COL","B","LINE",9)

"KRN",409.61,796,"COL","B","RECEIPT",2)

"KRN",409.61,796,"COL","B","STATUS",8)

"KRN",409.61,796,"COL","B","TYPE",3)

"KRN",409.61,796,"COL","B","USER INITIALS",4)

"KRN",409.61,796,"FNL")
D EXIT^RCDPRL
"KRN",409.61,796,"HDR")
D HDR^RCDPRL
"KRN",409.61,796,"HLP")
D HELP^RCDPRL
"KRN",409.61,796,"INIT")
D INIT^RCDPRL
"KRN",8989.51,941,-1)
0^1
"KRN",8989.51,941,0)
RCDPE APAR^Display unposted EEOBs by user pref^1
"KRN",8989.51,941,1)
F
"KRN",8989.51,941,6)
F
"KRN",8989.51,941,20,0)
^^21^21^3170821^
"KRN",8989.51,941,20,1,0)
The AUTO-POST - AWAITING RESOLUTION screen that is generated when
"KRN",8989.51,941,20,2,0)
executing the RCDPE AUTO-POST AWAITING RESOLUTION option provides the
"KRN",8989.51,941,20,3,0)
capability to filter the data displayed via the Change View action. The
"KRN",8989.51,941,20,4,0)
Change View action saves the filter preferences by user.
"KRN",8989.51,941,20,5,0)
 
"KRN",8989.51,941,20,6,0)
Parameter Instance              Possible Value
"KRN",8989.51,941,20,7,0)
  
"KRN",8989.51,941,20,8,0)
--------------------------------------------------------------------------
"KRN",8989.51,941,20,9,0)
ALL_PAYERS/RANGE_OF_PAYERS      3 fields:A/R;StartWith;GoTo 
"KRN",8989.51,941,20,10,0)
                                     (e.g.,'R;AE;AEZ') 
"KRN",8989.51,941,20,11,0)
Note: The second and third fields of ALL_PAYERS/RANGE_OF_PAYERS are only
"KRN",8989.51,941,20,12,0)
       present When the first field is set to 'R' (Range of Payers)
"KRN",8989.51,941,20,13,0)
 
"KRN",8989.51,941,20,14,0)
MEDICAL/PHARMACY                1 field: M/P/B
"KRN",8989.51,941,20,15,0)
Note: M/P/B (M)edical (P)harmacy or (B)
"KRN",8989.51,941,20,16,0)
 
"KRN",8989.51,941,20,17,0)
SORT                            2 fields:N/P/R/U;1/0
"KRN",8989.51,941,20,18,0)
Note: 1st field D=Date/Time ERA Filed, N=Payer Name, P=Amount Posted
"KRN",8989.51,941,20,19,0)
                R=Auto Post Reject Reason, R=Unposted Amount
"KRN",8989.51,941,20,20,0)
      2nd field H=Highest to Lowest, L=Lowest to Highest
"KRN",8989.51,941,20,21,0)
                Null if first field is N or P
"KRN",8989.51,941,30,0)
^8989.513I^1^1
"KRN",8989.51,941,30,1,0)
1^200
"KRN",8989.51,942,-1)
0^2
"KRN",8989.51,942,0)
RCDPE EDI LOCKBOX WORKLIST^ERA Worklist Change View Parameters^1
"KRN",8989.51,942,1)
F
"KRN",8989.51,942,6)
F
"KRN",8989.51,942,20,0)
^^19^19^3170913^
"KRN",8989.51,942,20,1,0)
The ERA List - Worklist screen within the ERA Worklist option [RCDPE EDI LOCKBOX
"KRN",8989.51,942,20,2,0)
WORKLIST]  provides the capability to filter the data displayed via the Change
"KRN",8989.51,942,20,3,0)
View action. The Change View action allows users to change and save their
"KRN",8989.51,942,20,4,0)
individual filter preferences.
"KRN",8989.51,942,20,5,0)
  
"KRN",8989.51,942,20,6,0)
Below is a list of the parameter/value pairs (instances) for the Change View 
"KRN",8989.51,942,20,7,0)
action, which are stored using this Parameter Definition.
"KRN",8989.51,942,20,8,0)
 
"KRN",8989.51,942,20,9,0)
 Parameter Instance              Possible Value
"KRN",8989.51,942,20,10,0)
 ------------------------------------------------------------------------------
"KRN",8989.51,942,20,11,0)
 ERA_POSTING_STATUS              'U':Unposted;'P':Posted;'B':Both
"KRN",8989.51,942,20,12,0)
 ERA-EFT_MATCH_STATUS            'N':Not Matched;'M':Matched;'B':Both
"KRN",8989.51,942,20,13,0)
 ALL_PAYERS/RANGE_OF_PAYERS      3 fields:A/R;StartWith;GoTo (e.g.,'R;AE;AEZ')
"KRN",8989.51,942,20,14,0)
 ERA_AUTO_POSTING                'A':Auto-Posting;'N':Non Auto-Posting;'B':Both
"KRN",8989.51,942,20,15,0)
 ERA_CLAIM_TYPE                  'M':Medical;'P':Pharmacy;T:Tricare'A':All
"KRN",8989.51,942,20,16,0)
 ERA_PAYMENT_TYPE                'Z':Zero;'P':Payment;'B':Both
"KRN",8989.51,942,20,17,0)
 
"KRN",8989.51,942,20,18,0)
Note: The second and third fields of ALL_PAYERS/RANGE_OF_PAYERS are only
"KRN",8989.51,942,20,19,0)
      present When the first field is set to 'R' (Range of Payers)
"KRN",8989.51,942,30,0)
^8989.513I^1^1
"KRN",8989.51,942,30,1,0)
1^200
"MBREQ")
1
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;LME1^XPDIA1;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",561,-1)
1^1
"PKG",561,0)
ACCOUNTS RECEIVABLE^PRCA^FMS
"PKG",561,20,0)
^9.402P^1^1
"PKG",561,20,1,0)
2^^PRCAMRG
"PKG",561,20,1,1)

"PKG",561,20,"B",2,1)

"PKG",561,22,0)
^9.49I^1^1
"PKG",561,22,1,0)
4.5^2950320^2950331
"PKG",561,22,1,"PAH",1,0)
321^3180515^520824644
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
66
"RTN","PRCABJ2")
0^54^B14780114
"RTN","PRCABJ2",1,0)
PRCABJ2 ;ALB/SAB - NIGHTLY PROCESS FOR ACCOUNTS RECEIVABLE ;07-JUL-15
"RTN","PRCABJ2",2,0)
 ;;4.5;Accounts Receivable;**304,321**;Mar 20, 1995;Build 48
"RTN","PRCABJ2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","PRCABJ2",4,0)
 ;
"RTN","PRCABJ2",5,0)
 ; read of DGCR(399.2 allowed by DBIA 3822
"RTN","PRCABJ2",6,0)
 ;
"RTN","PRCABJ2",7,0)
 Q
"RTN","PRCABJ2",8,0)
 ; Auto-audit Paper and Electronic (EDI) bills if ready
"RTN","PRCABJ2",9,0)
ABAUDIT ;
"RTN","PRCABJ2",10,0)
 ; Local Variables
"RTN","PRCABJ2",11,0)
 ;    APIEN - Accounts Payable (file #430) ien
"RTN","PRCABJ2",12,0)
 ;
"RTN","PRCABJ2",13,0)
 N APIEN,BILLTYP,DIE,DA,DR,DIR,DIRUT,DTOUT,DUOUT,X,Y,APD0,APD202,FLG1,FLG2,FLG1E,FLG2E,NBLIEN ; PRCA*4.5*321
"RTN","PRCABJ2",14,0)
 N PRCABLNO,PRCAECME,RATEIEN,RCPAPER,XX ; PRCA*4.5*321
"RTN","PRCABJ2",15,0)
 ;
"RTN","PRCABJ2",16,0)
 S APIEN=""
"RTN","PRCABJ2",17,0)
 ;
"RTN","PRCABJ2",18,0)
 ;Check parameters to see if it needs to run.
"RTN","PRCABJ2",19,0)
 S FLG1=$$GET1^DIQ(342,"1,",7.05,"I")   ; Get the value of the auto-audit medical paper bill flag
"RTN","PRCABJ2",20,0)
 S FLG2=$$GET1^DIQ(342,"1,",7.06,"I")   ; Get the value of the auto-audit pharmacy paper bill flag
"RTN","PRCABJ2",21,0)
 S FLG1E=$$GET1^DIQ(342,"1,",7.07,"I") ; Get the value of the auto-audit medical EDI bill flag - PRCA*4.5*321
"RTN","PRCABJ2",22,0)
 S FLG2E=$$GET1^DIQ(342,"1,",7.08,"I") ; Get the value of the auto-audit pharmacy EDI bill flag - PRCA*4.5*321
"RTN","PRCABJ2",23,0)
 ;
"RTN","PRCABJ2",24,0)
 ; Quit if all auto-audit parameters are set to 'No'
"RTN","PRCABJ2",25,0)
 Q:('FLG1)&('FLG2)&('FLG1E)&('FLG2E)  ; PRCA*4.5*321
"RTN","PRCABJ2",26,0)
 ;
"RTN","PRCABJ2",27,0)
 ;retrieve DB values
"RTN","PRCABJ2",28,0)
 S NBLIEN=$O(^PRCA(430.3,"B","NEW BILL",""))  ; New Bill Status IEN
"RTN","PRCABJ2",29,0)
 ;S CATIEN=$O(^PRCA(430.2,"C","RI",""))        ; Reimbursable Insurance IEN  ; removed PRCA*4.5*321
"RTN","PRCABJ2",30,0)
 ;S HICD=$O(^PRCA(430.6,"B","HI",""))          ; Health insurance IEN  ; removed PRCA*4.5*321
"RTN","PRCABJ2",31,0)
 ;S ACTIVE=$O(^PRCA(430.3,"B","ACTIVE",""))    ; New Bill Status IEN  ; removed PRCA*4.5*321
"RTN","PRCABJ2",32,0)
 S BILLTYP=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",""))  ; Bill Type IEN
"RTN","PRCABJ2",33,0)
 ;S RCPAPER=1 ; Field 27 in ^DGCR(399 ; 0 - is electronic, 1 - FORCE LOCAL PRINT  ; removed PRCA*4.5*321
"RTN","PRCABJ2",34,0)
 ;
"RTN","PRCABJ2",35,0)
 Q:NBLIEN=""
"RTN","PRCABJ2",36,0)
 ;
"RTN","PRCABJ2",37,0)
 F  S APIEN=$O(^PRCA(430,"AC",NBLIEN,APIEN)) Q:'APIEN  D
"RTN","PRCABJ2",38,0)
 . S APD0=$G(^PRCA(430,APIEN,0))   ; Patient info
"RTN","PRCABJ2",39,0)
 . S APD202=$G(^PRCA(430,APIEN,202))   ;Insured info
"RTN","PRCABJ2",40,0)
 . Q:$$GET1^DIQ(399,APIEN_",",.07,"I")'=BILLTYP  ; Bill type is not Reimbursable Insurance. Skip
"RTN","PRCABJ2",41,0)
 . ; BEGIN - PRCA*4.5*321
"RTN","PRCABJ2",42,0)
 . Q:$$GET1^DIQ(430,APIEN_",",7,"I")=""       ; Quit if no PATIENT IEN
"RTN","PRCABJ2",43,0)
 . Q:$$GET1^DIQ(430,APIEN_",",9,"I")=""       ; Quit if no DEBTOR information
"RTN","PRCABJ2",44,0)
 . Q:$$GET1^DIQ(430,APIEN_",",239,"I")=""     ; quit if no subscriber name stored
"RTN","PRCABJ2",45,0)
 . Q:$$GET1^DIQ(430,APIEN_",",243,"I")=""     ; quit if no group name stored
"RTN","PRCABJ2",46,0)
 . Q:$$GET1^DIQ(430,APIEN_",",244,"I")=""     ; quit if no group number stored
"RTN","PRCABJ2",47,0)
 . Q:$$BILLREJ^PRCAUDT(APIEN)  ; PRCA*4.5*321 - claim has reject messages, do not audit
"RTN","PRCABJ2",48,0)
 . ;
"RTN","PRCABJ2",49,0)
 . S RATEIEN=$$GET1^DIQ(399,APIEN_",",.07,"I") ; Get bill's rate type ; IA 4118
"RTN","PRCABJ2",50,0)
 . Q:'RATEIEN
"RTN","PRCABJ2",51,0)
 . ; A rate type is auto-audited if BILL RESULTING FROM field is non-null
"RTN","PRCABJ2",52,0)
 . Q:'$$GET1^DIQ(399.3,RATEIEN_",",.11,"I")  ; Quit if not an auto-audit rate type
"RTN","PRCABJ2",53,0)
 . ;Read on IB file #399 field #27 covered by ICR #3820
"RTN","PRCABJ2",54,0)
 . S RCPAPER=$$GET1^DIQ(399,APIEN_",",27,"I") ; 0 - is electronic, 1 - is paper
"RTN","PRCABJ2",55,0)
 . ;Get the Bill number to check if it is a Pharmacy bill
"RTN","PRCABJ2",56,0)
 . S PRCABLNO=$$GET1^DIQ(430,APIEN_",",.01,"I")
"RTN","PRCABJ2",57,0)
 . S PRCAECME=$$GETECME^RCDPENR1(PRCABLNO)
"RTN","PRCABJ2",58,0)
 . I PRCAECME="",'FLG1,RCPAPER Q     ;Skip this paper bill if No Medical processing
"RTN","PRCABJ2",59,0)
 . I PRCAECME'="",'FLG2,RCPAPER Q    ;Skip this paper bill if No Pharmacy processing
"RTN","PRCABJ2",60,0)
 . I PRCAECME="",'FLG1E,'RCPAPER Q     ;Skip this EDI bill if No Medical processing
"RTN","PRCABJ2",61,0)
 . I PRCAECME'="",'FLG2E,'RCPAPER Q    ;Skip this EDI bill if No Pharmacy processing
"RTN","PRCABJ2",62,0)
 . ;
"RTN","PRCABJ2",63,0)
 . ; Bill Passed all checks now call auto-audit for this Bill number
"RTN","PRCABJ2",64,0)
 . D AUDITX^PRCAUDT(APIEN)
"RTN","PRCABJ2",65,0)
 Q
"RTN","PRCAUDT")
0^61^B53225243
"RTN","PRCAUDT",1,0)
PRCAUDT ;SF-ISC/YJK-AUDIT A NEW BILL/EDIT INCOMPLETE AR ;10/17/96  5:33 PM
"RTN","PRCAUDT",2,0)
V ;;4.5;Accounts Receivable;**1,21,57,97,143,107,173,321**;Mar 20, 1995;Build 48
"RTN","PRCAUDT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCAUDT",4,0)
 NEW X,Y,LOOP,DIR
"RTN","PRCAUDT",5,0)
 W ! S DIR("B")="YES",DIR("A")="Do you want to loop thru 'NEW BILLS'",DIR(0)="Y" D ^DIR K DIR G:$D(DIRUT) END S LOOP=+Y
"RTN","PRCAUDT",6,0)
 D AUDITB(0,0,LOOP)
"RTN","PRCAUDT",7,0)
 Q
"RTN","PRCAUDT",8,0)
 ;
"RTN","PRCAUDT",9,0)
AUDITB(PRCABN,PRAUTOA,LOOP) ;
"RTN","PRCAUDT",10,0)
 ; PRCABN = the ien of the entry to audit or 0 for batch entry above
"RTN","PRCAUDT",11,0)
 ; PRAUTOA = 1 for auto-audit
"RTN","PRCAUDT",12,0)
 ; LOOP = 1 if looping through bills, 0 if not
"RTN","PRCAUDT",13,0)
 N PRCA,PRCASEG,PREND,PRQUIT,X,XX,Y ; PRCA*4.5*321
"RTN","PRCAUDT",14,0)
 S PREND=0,PRCA("AUTO_AUDIT")=PRAUTOA
"RTN","PRCAUDT",15,0)
 F  D  Q:$S(PREND:1,PRAUTOA:1,1:0)
"RTN","PRCAUDT",16,0)
 . K PRCABT
"RTN","PRCAUDT",17,0)
 . S PRQUIT=0 ; PRCA*4.5*321
"RTN","PRCAUDT",18,0)
 . S PRCA("MESG")="*** AUDITED AND RELEASED ***"
"RTN","PRCAUDT",19,0)
 . I LOOP,'$O(^PRCA(430,"AC",18,PRCABN)) W !!,"*** Loop Done ***",!! S PREND=1 Q
"RTN","PRCAUDT",20,0)
 . I PRAUTOA S PRCA("CKSITE")="",PRCA("SITE")=$P($$BILL(PRCABN),"-") K PRCAT
"RTN","PRCAUDT",21,0)
 . I '$D(PRCA("CKSITE")) D CKSITE K:$D(PRCA("CKSITE")) PRCAT I '$D(PRCA("CKSITE")) S PREND=1 Q
"RTN","PRCAUDT",22,0)
 . I LOOP S PRCABN=$O(^PRCA(430,"AC",18,PRCABN)) I 'PRCABN S PREND=1 Q
"RTN","PRCAUDT",23,0)
 . I LOOP!PRAUTOA D  Q:PRQUIT
"RTN","PRCAUDT",24,0)
 .. I $$BILLREJ(PRCABN) S PRQUIT=1 Q   ; PRCA*4.5*321 - claim has reject messages, do not audit
"RTN","PRCAUDT",25,0)
 .. S PRCATY=$P(^PRCA(430,PRCABN,0),U,2),PRCA("SEG")=$S(+$P(^(0),U,21)>240:$P(^(0),U,21),1:"")
"RTN","PRCAUDT",26,0)
 .. S PRCA("STATUS")=$P(^PRCA(430,PRCABN,0),U,8),PRCA("APPR")=$P(^(0),U,18)
"RTN","PRCAUDT",27,0)
 . E  D  Q:PREND!PRQUIT
"RTN","PRCAUDT",28,0)
 .. S DIC("S")="S Z0=$S($D(^PRCA(430.3,+$P(^(0),U,8),0)):$P(^(0),U,3),1:0) I Z0=104"
"RTN","PRCAUDT",29,0)
 .. D DIC I '$G(PRCABN) S PREND=1 Q
"RTN","PRCAUDT",30,0)
 .. I $$BILLREJ(PRCABN) D  S PRQUIT=1 Q   ; PRCA*4.5*321
"RTN","PRCAUDT",31,0)
 ... D PAUSE("Claim has reject messages, can not be audited")
"RTN","PRCAUDT",32,0)
 . ;
"RTN","PRCAUDT",33,0)
 . S PRCAKT=$S($P(^PRCA(430,PRCABN,0),U,2)]"":$P(^(0),U,2),1:"")
"RTN","PRCAUDT",34,0)
 . I +PRCAKT'>0 D:$G(PRAUTOA) SETERR("NO CATEGORY DEFINED FOR BILL "_$$BILL(PRCABN)) D END Q
"RTN","PRCAUDT",35,0)
 . S PRCARI=$O(^PRCA(430.2,"AC",21,0))
"RTN","PRCAUDT",36,0)
 . I $P(^PRCA(430,PRCABN,0),U,21)="" S X=PRCABN D:PRCARI=PRCAKT SEGMT S:'$D(Y) Y=-1 S PRCASEG=$S(PRCARI=PRCAKT&(Y<1):"",PRCARI=PRCAKT:Y,$D(^PRCA(430.2,PRCAKT,0)):$P(^(0),U,3),1:""),$P(^PRCA(430,PRCABN,0),U,21)=PRCASEG
"RTN","PRCAUDT",37,0)
 . S PRCAT=$S($D(^PRCA(430.2,PRCAKT,0)):$P(^(0),U,6),1:"") I PRCAT="" D:$G(PRAUTOA) SETERR("NO CATEGORY TYPE DEFINED FOR BILL "_$$BILL(PRCABN)) D END Q
"RTN","PRCAUDT",38,0)
 . I $P(^PRCA(430.2,PRCAKT,0),U,7)=24 S PRCAT("C")=1,Z0=$P(^PRCA(430,PRCABN,0),U,16) S:+Z0'>0 Z0=PRCAKT S $P(^PRCA(430,PRCABN,0),U,21)=$S($D(^PRCA(430.2,+Z0,0)):$P(^(0),U,3),1:0) K Z0,PRCAKT
"RTN","PRCAUDT",39,0)
 . ;
"RTN","PRCAUDT",40,0)
 . I '$G(PRAUTOA) D DISPL,DISPLACC^PRCAFUT D  Q:PREND
"RTN","PRCAUDT",41,0)
 .. I $D(PRCA("EXIT")) S PREND=1 Q 
"RTN","PRCAUDT",42,0)
 .. D MESSG
"RTN","PRCAUDT",43,0)
 . S PRCARETN=0,PRCAOK=$G(PRAUTOA)
"RTN","PRCAUDT",44,0)
 . I '$G(PRAUTOA) D ASK I $D(PRCA("EXIT")) D END S PREND=1 Q
"RTN","PRCAUDT",45,0)
 . I PRCAOK=1 D  D:$D(PRCA("EXIT")) END Q
"RTN","PRCAUDT",46,0)
 .. K PRCA("EXIT") D MTCHK I $D(PRCA("EXIT")) Q
"RTN","PRCAUDT",47,0)
 .. D:PRCAT="T" THIRD^PRCAUDT1
"RTN","PRCAUDT",48,0)
 .. I +$P(^PRCA(430,PRCABN,0),U,5)'>0 D CAUSED^PRCAUDT1 Q:PRCAOK=0
"RTN","PRCAUDT",49,0)
 .. D COMMENTS^PRCAUT3 Q:$D(PRCA("EXIT"))
"RTN","PRCAUDT",50,0)
 .. S PRCASIG=0 D SIG K PRCA("EXIT") Q:PRCASIG=0
"RTN","PRCAUDT",51,0)
 .. D UPBALN^PRCAUDT1,UPSEG
"RTN","PRCAUDT",52,0)
 .. I '$$ACCK^PRCAACC(PRCABN),("^28^29^"'[("^"_$G(PRCAKT)_"^")) D EN^PRCAFBD(PRCABN,.ERR)
"RTN","PRCAUDT",53,0)
 .. I $G(PRCAKT)=28 D EN^PRCACPV(PRCABN,.ERR) S:ERR<0 PRCA("MESG")="FMS document created . . . "
"RTN","PRCAUDT",54,0)
 .. K PRCA("EXIT")
"RTN","PRCAUDT",55,0)
 .. I +$G(ERR)>0 D  D END Q
"RTN","PRCAUDT",56,0)
 ... N Z,Z0,Z1
"RTN","PRCAUDT",57,0)
 ... S Z="Unable to create FMS Billing Document: ",Z0=$P(ERR,U,2),Z1="Status remains NEW BILL."
"RTN","PRCAUDT",58,0)
 ... I '$G(PRAUTOA) D
"RTN","PRCAUDT",59,0)
 .... W *7,!!,Z,!,?10,Z0,!!,Z1,!! H 3
"RTN","PRCAUDT",60,0)
 ... E  D
"RTN","PRCAUDT",61,0)
 .... D SETERR(Z),SETERR(Z0),SETERR(Z1)
"RTN","PRCAUDT",62,0)
 ... S PRCA("STATUS")=18 D UPSTATS^PRCAUT2
"RTN","PRCAUDT",63,0)
 ... ;
"RTN","PRCAUDT",64,0)
 .. I '$G(PRAUTOA) D SIG1 W !,PRCA("MESG")
"RTN","PRCAUDT",65,0)
 .. D END
"RTN","PRCAUDT",66,0)
 . I PRCARETN=1,'$G(PRAUTOA) D RETN^PRCAUDT1 Q
"RTN","PRCAUDT",67,0)
 . D END
"RTN","PRCAUDT",68,0)
 D END
"RTN","PRCAUDT",69,0)
 Q
"RTN","PRCAUDT",70,0)
 ;
"RTN","PRCAUDT",71,0)
END L -^PRCA(430,+$G(PRCABN)) K %,DA,PRCAKT,PRCATY,PRCANM,PRCARETN,PRCAOK,PRCAT,DIC,DIE,DR,ERR,PRCASIG,J,Z0,D0,DI,PRC,PRCARI,DIR,DIRUT,DIROUT,DUOUT
"RTN","PRCAUDT",72,0)
 D CLEAN^DILF
"RTN","PRCAUDT",73,0)
 Q
"RTN","PRCAUDT",74,0)
 ;
"RTN","PRCAUDT",75,0)
 ;======================== SUBROUTINES ==========================
"RTN","PRCAUDT",76,0)
BULL(PRCABN) ; Send a bulletin for auto audit errors
"RTN","PRCAUDT",77,0)
 ; PRCABN = ien of bill in file 430
"RTN","PRCAUDT",78,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,PRCAE,CT,Z
"RTN","PRCAUDT",79,0)
 S XMTO("I:G.RCDPE PAYMENTS")="",CT=0
"RTN","PRCAUDT",80,0)
 S CT=CT+1,PRCAE(CT)="The following problem(s) were encountered when attempting to auto-audit a bill",CT=CT+1,PRCAE(CT)="from IB's electronic return messages"
"RTN","PRCAUDT",81,0)
 S CT=CT+1,PRCAE(CT)=" ",Z=0
"RTN","PRCAUDT",82,0)
 F  S Z=$O(^TMP($J,"PRCA_AUTO_AUDIT_ERROR",Z)) Q:'Z  S CT=CT+1,PRCAE(CT)=$G(^(Z))
"RTN","PRCAUDT",83,0)
 S XMBODY="PRCAE"
"RTN","PRCAUDT",84,0)
 D SENDMSG^XMXAPI("","AUTO AUDIT FAILED FOR BILL "_$$BILL(PRCABN),XMBODY,.XMTO)
"RTN","PRCAUDT",85,0)
 Q
"RTN","PRCAUDT",86,0)
 ;
"RTN","PRCAUDT",87,0)
DIC S DIC="^PRCA(430,",DIC(0)="AEQM" D BILLN^PRCAUTL Q
"RTN","PRCAUDT",88,0)
DIE W ! S DA=PRCABN,DIC="^PRCA(430,",PRCA("LOCK")=0 D LOCKF^PRCAWO1 Q:PRCA("LOCK")=1  S DIE=DIC
"RTN","PRCAUDT",89,0)
 I '$$ACCK^PRCAACC(PRCABN),("^27^28^"'[("^"_PRCAKT_"^")) D CPLK^PRCAFUT(PRCABN)
"RTN","PRCAUDT",90,0)
 Q:$D(PRCA("EXIT"))  S DR="[PRCAE AUDIT]" D ^DIE K DIE,DR Q
"RTN","PRCAUDT",91,0)
DISPL ;display the accounts receivable data user has entered.
"RTN","PRCAUDT",92,0)
 Q:'$D(PRCABN)  NEW DIC,L,FR,TO,FLDS,IOP,BY
"RTN","PRCAUDT",93,0)
 S IOP=IO(0),DIC="^PRCA(430,",FLDS="[PRCA DISP AUDIT]",(FR,TO)=PRCABN,L=0,BY="@NUMBER" D EN1^DIP,WOBIL^PRCAUDT1 Q
"RTN","PRCAUDT",94,0)
ASK S %=2 W !,"IS THIS DATA CORRECT" D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUDT",95,0)
 I %=0 D M1^PRCAMESG G ASK
"RTN","PRCAUDT",96,0)
 I %=1 S PRCAOK=1 Q
"RTN","PRCAUDT",97,0)
ASK1 S %=2 W !!,"Do you want to edit this information " D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUDT",98,0)
 I %=0 D M2^PRCAMESG G ASK1
"RTN","PRCAUDT",99,0)
 I %=1 D DIE,DISPL,DISPLACC^PRCAFUT G ASK
"RTN","PRCAUDT",100,0)
ASK2 S %=2 W !!,"Then do you want to return this bill to the service" D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUDT",101,0)
 Q:%=2  I %=0 W !,"Answer 'Y' (YES) or 'N' (NO)" G ASK2
"RTN","PRCAUDT",102,0)
ASK3 S %=2 W !,"Are you sure you want to return" D YN^DICN I %<0 S PRCA("EXIT")="" Q
"RTN","PRCAUDT",103,0)
 I %=0 W "Answer 'Y' (YES) if you want to return this bill to the service that originated it.  If not, answer 'N' (NO)." G ASK3
"RTN","PRCAUDT",104,0)
 I %=1 S PRCARETN=1 Q
"RTN","PRCAUDT",105,0)
 Q  ;end of ASK
"RTN","PRCAUDT",106,0)
SIG N PRCADUZ
"RTN","PRCAUDT",107,0)
 I $G(PRAUTOA) S PRCADUZ=+$O(^VA(200,"B","PRCA,AUTOAUDIT",0)),PRCANM="AUTO-AUDIT"
"RTN","PRCAUDT",108,0)
 I '$G(PRAUTOA) S DA=PRCABN D SIG^PRCASIG
"RTN","PRCAUDT",109,0)
 D NOW^%DTC I $D(PRCANM) S $P(^PRCA(430,PRCABN,9),U,1,3)=$S('$G(PRAUTOA):+DUZ,1:PRCADUZ)_U_PRCANM_U_%,PRCASIG=1
"RTN","PRCAUDT",110,0)
 Q
"RTN","PRCAUDT",111,0)
SIG1 S PRCANM=$P($G(^VA(200,DUZ,20)),U,2) I PRCANM]"" D EN^PRCASIG(.PRCANM,DUZ,PRCABN_+$P(^PRCA(430,PRCABN,0),U,3)) S $P(^PRCA(430,PRCABN,9),U,2)=PRCANM
"RTN","PRCAUDT",112,0)
 Q
"RTN","PRCAUDT",113,0)
MESSG Q
"RTN","PRCAUDT",114,0)
SEGMT D:$D(^DGCR(399,PRCABN)) ^IBCAMS S:'$D(^DGCR(399,PRCABN)) Y=297 Q
"RTN","PRCAUDT",115,0)
UPSEG ;
"RTN","PRCAUDT",116,0)
 S PRCAT=$P(^PRCA(430,PRCABN,0),U,2),$P(^(0),U,21)=""
"RTN","PRCAUDT",117,0)
 D SEGMT^PRCAEOL
"RTN","PRCAUDT",118,0)
 Q
"RTN","PRCAUDT",119,0)
CKSITE ;check site parameter and user number.
"RTN","PRCAUDT",120,0)
 NEW DIC
"RTN","PRCAUDT",121,0)
 S DIC="^DIC(4,",DIC(0)="QEAM",DIC("B")=$P($G(^RC(342,1,0)),"^"),DIC("A")="SITE: " D ^DIC Q:Y<0  S PRCA("SITE")=+$$GET1^DIQ(4,+Y,99) Q:'PRCA("SITE")
"RTN","PRCAUDT",122,0)
 S PRCA("CKSITE")="" Q
"RTN","PRCAUDT",123,0)
MTCHK N PRCAI,PRCAMT,PRCAMT1,Z,Z0
"RTN","PRCAUDT",124,0)
 S PRCAMT1=0 F PRCAI=0:0 S PRCAI=$O(^PRCA(430,PRCABN,2,PRCAI)) Q:'PRCAI  S PRCAMT=+$P($G(^(PRCAI,0)),"^",8) I PRCAMT S PRCAMT1=PRCAMT1+1
"RTN","PRCAUDT",125,0)
 I PRCAMT1=1 Q
"RTN","PRCAUDT",126,0)
 S Z="Currently, just one Fiscal Year amount is sent to FMS.",Z0="This bill has "_PRCAMT1_" entered and should be returned to the service."
"RTN","PRCAUDT",127,0)
 I '$G(PRAUTOA) D
"RTN","PRCAUDT",128,0)
 . W !!,?3,Z,?3,Z0,!
"RTN","PRCAUDT",129,0)
 E  D
"RTN","PRCAUDT",130,0)
 . D SETERR("BILL: "_$$BILL(PRCABN)),SETERR(Z),SETERR(Z0)
"RTN","PRCAUDT",131,0)
 S PRCA("EXIT")=""
"RTN","PRCAUDT",132,0)
 Q
"RTN","PRCAUDT",133,0)
 ;ZZPJH WIP 8/21/17
"RTN","PRCAUDT",134,0)
AUDITX(PRCABN) ; Auto audit a bill
"RTN","PRCAUDT",135,0)
 N PRAUTOA
"RTN","PRCAUDT",136,0)
 K ^TMP($J,"PRCA_AUTO_AUDIT_ERROR")
"RTN","PRCAUDT",137,0)
 L +^PRCA(430,+$G(PRCABN)):5 I '$T D SETERR(PRCABN,"ANOTHER USER HAS LOCKED BILL "_$$BILL(PRCABN))
"RTN","PRCAUDT",138,0)
 I '$D(^TMP($J,"PRCA_AUTO_AUDIT_ERROR")) D AUDITB(PRCABN,1,0)
"RTN","PRCAUDT",139,0)
 ;
"RTN","PRCAUDT",140,0)
 I $D(^TMP($J,"PRCA_AUTO_AUDIT_ERROR")) D BULL(PRCABN)
"RTN","PRCAUDT",141,0)
 K ^TMP($J,"PRCA_AUTO_AUDIT_ERROR")
"RTN","PRCAUDT",142,0)
 Q
"RTN","PRCAUDT",143,0)
 ;
"RTN","PRCAUDT",144,0)
SETERR(TEXT) ;
"RTN","PRCAUDT",145,0)
 S ^TMP($J,"PRCA_AUTO_AUDIT_ERROR",+$O(^TMP($J,"PRCA_AUTO_AUDIT_ERROR",""),-1)+1)=TEXT
"RTN","PRCAUDT",146,0)
 Q
"RTN","PRCAUDT",147,0)
 ;
"RTN","PRCAUDT",148,0)
BILL(PRCABN) ; Returns AR bill number in external format
"RTN","PRCAUDT",149,0)
 Q $P($G(^PRCA(430,+$G(PRCABN),0)),U)
"RTN","PRCAUDT",150,0)
 ;
"RTN","PRCAUDT",151,0)
BILLREJ(PRCABN) ; EP Check if bill has reject messages. Added for PRCA*4.5*321
"RTN","PRCAUDT",152,0)
 ; Input - PRCABN - Internal Entry number from ACCOUNTS RECEIVABLE file [#430]
"RTN","PRCAUDT",153,0)
 ; (Note - file #399 has same IEN as file #430)
"RTN","PRCAUDT",154,0)
 ; Output - 1 - Reject messages 0 - No Reject messages
"RTN","PRCAUDT",155,0)
 N BILLNO,RETURN
"RTN","PRCAUDT",156,0)
 S BILLNO=$$GET1^DIQ(399,PRCABN_",",.01,"I")
"RTN","PRCAUDT",157,0)
 S RETURN=$$BILLREJ^IBJTU6(BILLNO) ; API call covered by IA 6060
"RTN","PRCAUDT",158,0)
 Q RETURN
"RTN","PRCAUDT",159,0)
 ;
"RTN","PRCAUDT",160,0)
PAUSE(MSG) ; Display message and pause till user responds
"RTN","PRCAUDT",161,0)
 ; INPUT - MSG - Message to display to user
"RTN","PRCAUDT",162,0)
 ; Output - None
"RTN","PRCAUDT",163,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","PRCAUDT",164,0)
 W !!,MSG,!
"RTN","PRCAUDT",165,0)
 S DIR(0)="EA"
"RTN","PRCAUDT",166,0)
 S DIR("A")="Type <Enter> to continue: "
"RTN","PRCAUDT",167,0)
 D ^DIR
"RTN","PRCAUDT",168,0)
 Q
"RTN","RCDPARC")
0^69^B238304719
"RTN","RCDPARC",1,0)
RCDPARC ;ALB/TJB - CARC REPORT ON PAYER OR CARC CODE ;9/15/14 3:00pm
"RTN","RCDPARC",2,0)
 ;;4.5;Accounts Receivable;**303,321**;Mar 20, 1995;Build 48
"RTN","RCDPARC",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPARC",4,0)
 Q
"RTN","RCDPARC",5,0)
 ; PRCA*4.5*303 - CARC and Payer report
"RTN","RCDPARC",6,0)
 ; DESCRIPTION :
"RTN","RCDPARC",7,0)
 ;   The following generates a report that displays selected or all
"RTN","RCDPARC",8,0)
 ;   CARC Codes and Payers and totals the amounts for each CARC code.
"RTN","RCDPARC",9,0)
 ;   several filters may be used to limit the CARC codes or Payer information
"RTN","RCDPARC",10,0)
 ;   to be displayed:
"RTN","RCDPARC",11,0)
EN ; Entry point for Report
"RTN","RCDPARC",12,0)
 N DUOUT,DTOUT,DIR,X,Y,RCDT1,RCDT2,RCDET,ZTRTN,ZTSK,ZTDESC,ZTSAVE,ZTSTOP,%ZIS,POP,DTOK,DIVHDR,CRHDR
"RTN","RCDPARC",13,0)
 N RCDIV,RCINC,VAUTD,RCRANGE,RCNP,RCJOB,RCNP1,RCPG,RCNOW,RCHR,RCODE,RCRARC,RCSTOP,EX
"RTN","RCDPARC",14,0)
 S RCRARC=0,RCSTOP=0
"RTN","RCDPARC",15,0)
 ; ICR 1077 - Get division/station
"RTN","RCDPARC",16,0)
 D DIVISION^VAUTOMA
"RTN","RCDPARC",17,0)
 I 'VAUTD&($D(VAUTD)'=11) G ARCQ
"RTN","RCDPARC",18,0)
 ;
"RTN","RCDPARC",19,0)
 S DIR("A")="(S)ummary or(D)etail Report format?: ",DIR(0)="SA^S:Summary Information only;D:Detail and Totals"
"RTN","RCDPARC",20,0)
 S DIR("B")="SUMMARY" D ^DIR K DIR
"RTN","RCDPARC",21,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G ARCQ
"RTN","RCDPARC",22,0)
 S RCDET=($E(Y,1)="D")
"RTN","RCDPARC",23,0)
 ; Get CARC Codes for report
"RTN","RCDPARC",24,0)
 D GCARC^RCDPCRR(.RCODE) G:RCSTOP ARCQ
"RTN","RCDPARC",25,0)
 ;
"RTN","RCDPARC",26,0)
 ;I RCDET D  G:$D(DTOUT)!$D(DUOUT)!(Y="") ARCQ ; See if User wants RARCs displayed on Detailed report 
"RTN","RCDPARC",27,0)
 ;. S DIR(0)="YA",DIR("A")="Display available RARCs on Detailed Report? (Y/N): ",DIR("B")="No"
"RTN","RCDPARC",28,0)
 ;. D ^DIR K DIR
"RTN","RCDPARC",29,0)
 ;. I $D(DTOUT)!$D(DUOUT)!(Y="") Q 
"RTN","RCDPARC",30,0)
 ;. S RCRARC=(Y=1)
"RTN","RCDPARC",31,0)
 S RCRARC=0 ; Set RARCs not to display on report, but keep around just in case Susan changes her mind.
"RTN","RCDPARC",32,0)
 ;
"RTN","RCDPARC",33,0)
 ; Get Payer information
"RTN","RCDPARC",34,0)
 S EX=$$GETPAY^RCDPRU(.RCPAY)
"RTN","RCDPARC",35,0)
 G:EX=0 ARCQ
"RTN","RCDPARC",36,0)
 ;
"RTN","RCDPARC",37,0)
 ; Get Payer TIN information
"RTN","RCDPARC",38,0)
 S EX=$$GETTIN^RCDPRU(.RCTIN)
"RTN","RCDPARC",39,0)
 G:EX=0 ARCQ
"RTN","RCDPARC",40,0)
 ;
"RTN","RCDPARC",41,0)
 S DIR("A")="Sort Report by (C)ARC or (P)ayer?: ",DIR(0)="SA^P:Payer Name;CARC: CARC Codes;C:CARC Codes"
"RTN","RCDPARC",42,0)
 S DIR("B")="CARC" D ^DIR K DIR
"RTN","RCDPARC",43,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G ARCQ
"RTN","RCDPARC",44,0)
 S RCSORT=$E(Y,1)
"RTN","RCDPARC",45,0)
 ;
"RTN","RCDPARC",46,0)
 S DIR("?")="Enter the Beginning date for the report"
"RTN","RCDPARC",47,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: ",DIR("B")="T" D ^DIR K DIR
"RTN","RCDPARC",48,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G ARCQ
"RTN","RCDPARC",49,0)
 S RCDT1=Y
"RTN","RCDPARC",50,0)
 S DIR("?")="Enter the end date for the report"
"RTN","RCDPARC",51,0)
 S DIR("B")=$$DATE^RCDPRU($P($$NOW^XLFDT,"."),"2Z")
"RTN","RCDPARC",52,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")="T" D ^DIR K DIR
"RTN","RCDPARC",53,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G ARCQ
"RTN","RCDPARC",54,0)
 S RCDT2=Y
"RTN","RCDPARC",55,0)
 S DTOK=$$CHECKDT^RCDPRU(RCDT1,RCDT2,361.1)
"RTN","RCDPARC",56,0)
 I 'DTOK W !!,"*** Note: Date Range "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2)," ***",! W "*** No Records found ***",! D ASK^RCDPRU(.RCSTOP) G ARCQ
"RTN","RCDPARC",57,0)
 ; Get input to export to excel. Removed per Susan (03/24/2015)
"RTN","RCDPARC",58,0)
 S RCEXCEL=0
"RTN","RCDPARC",59,0)
 ;S RCEXCEL=$$DISPTY^RCDPRU()
"RTN","RCDPARC",60,0)
 ;D:RCEXCEL INFO^RCDPRU
"RTN","RCDPARC",61,0)
 ;
"RTN","RCDPARC",62,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPARC",63,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPARC",64,0)
 . S ZTRTN="ENQ^RCDPARC",ZTDESC="AR - 835 CARC & PAYER DATA REPORT",ZTSAVE("*")=""
"RTN","RCDPARC",65,0)
 . D ^%ZTLOAD
"RTN","RCDPARC",66,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPARC",67,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPARC",68,0)
 U IO
"RTN","RCDPARC",69,0)
 ;
"RTN","RCDPARC",70,0)
ENQ ; Queue point for report.
"RTN","RCDPARC",71,0)
 S RCNOW=$$NOW^RCDPRU(),RCPG=0,$P(RCHR,"=",IOM)=""
"RTN","RCDPARC",72,0)
 ;
"RTN","RCDPARC",73,0)
 K ^TMP("RCDPARC_REPORT",$J)
"RTN","RCDPARC",74,0)
 ; Collect the data and put it into the ^TMP global
"RTN","RCDPARC",75,0)
 D GETDATA($G(RCODE("CARC")),.RCPAY,.RCTIN,$G(RCSORT),$G(RCRARC),RCDT1,RCDT2,$NA(^TMP("RCDPARC_REPORT",$J)),.VAUTD)
"RTN","RCDPARC",76,0)
 ;
"RTN","RCDPARC",77,0)
REPORT ; Print out the report
"RTN","RCDPARC",78,0)
 ; Set up Division Header Text and CARC Header Text
"RTN","RCDPARC",79,0)
 S:VAUTD=1 DIVHDR="ALL" D:VAUTD=0
"RTN","RCDPARC",80,0)
 . N I S DIVHDR="",I="" F  S I=$O(VAUTD(I)) Q:I=""  S:DIVHDR'="" DIVHDR=DIVHDR_", "_VAUTD(I) S:DIVHDR="" DIVHDR=VAUTD(I)
"RTN","RCDPARC",81,0)
 I RCODE("CARC")="ALL" S CRHDR="ALL"
"RTN","RCDPARC",82,0)
 E  S CRHDR=RCODE("CARC")
"RTN","RCDPARC",83,0)
 ; Trim information so it will fit on an 80 or IOM character line
"RTN","RCDPARC",84,0)
 D:($L(DIVHDR)+$L(CRHDR))>(IOM-25)
"RTN","RCDPARC",85,0)
 . N VAL,DH,CH,R1,R2 S DH=0,CH=0,R1=0,R2=0,VAL=(IOM-25)\2 ; get half of the screen length
"RTN","RCDPARC",86,0)
 . S:$L(DIVHDR)>VAL DH=1 S:$L(CRHDR)>VAL CH=1 S:DH=0 R1=VAL-$L(DIVHDR) S:CH=0 R2=VAL-$L(CRHDR)
"RTN","RCDPARC",87,0)
 . I $L(DIVHDR)>(VAL+R2) S DIVHDR=$E(DIVHDR,1,(VAL+R2))_"..."
"RTN","RCDPARC",88,0)
 . I $L(CRHDR)>(VAL+R1) S CRHDR=$E(CRHDR,1,(VAL+R2))_"..."
"RTN","RCDPARC",89,0)
 ;
"RTN","RCDPARC",90,0)
 I 'RCEXCEL D
"RTN","RCDPARC",91,0)
 . S RCPG=RCPG+1 W @IOF
"RTN","RCDPARC",92,0)
 . D HDRP($$HDR(RCDET,RCRARC),1,"Page: "_RCPG_" ")
"RTN","RCDPARC",93,0)
 . D HDRP("SORT BY: "_$S($E(RCSORT,1)="C":"CARC",1:"Payer")_"  RUN DATE: "_RCNOW,1)
"RTN","RCDPARC",94,0)
 . D HDRP("DIVISIONS: "_DIVHDR_" CARCs: "_CRHDR,1)
"RTN","RCDPARC",95,0)
 . D HDRP("835 PAYERS: "_$S($E(RCPAY)="A":"ALL",1:"Selected")_" 835 PAYER TINs: "_$S($E(RCTIN)="A":"ALL",1:"Selected"),1)
"RTN","RCDPARC",96,0)
 . D HDRP("EOB PAID DATE RANGE: "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2),1)
"RTN","RCDPARC",97,0)
 . W !,RCHR,!
"RTN","RCDPARC",98,0)
 E  D
"RTN","RCDPARC",99,0)
 . ; Excel Report
"RTN","RCDPARC",100,0)
 . W "CARC^PAYER^TIN^REP_DATE^AMOUNT",!
"RTN","RCDPARC",101,0)
 ;
"RTN","RCDPARC",102,0)
 D PRTREP($NA(^TMP("RCDPARC_REPORT",$J,"REPORT")),$NA(^TMP("RCDPARC_REPORT",$J,"~~SUM")),RCSORT,RCDET,$G(RCRARC),.RCSTOP) G:RCSTOP ARCQ
"RTN","RCDPARC",103,0)
 D ASK^RCDPRU(.RCSTOP)
"RTN","RCDPARC",104,0)
 ;
"RTN","RCDPARC",105,0)
ARCQ ; Clean-up and quit
"RTN","RCDPARC",106,0)
 K DHDR,RCEXCEL,RCLIST,RCLPAY,RCODE,RCPAY,RCSORT,RCRARC,RCTIN,RCTLIST
"RTN","RCDPARC",107,0)
 ;K ^TMP("RCDPARC_REPORT",$J)
"RTN","RCDPARC",108,0)
 Q
"RTN","RCDPARC",109,0)
 ;
"RTN","RCDPARC",110,0)
PRTREP(DATA,SUMM,SORT,CD,RA,RCSTOP) ; Print report data out of the "REPORT" subarray
"RTN","RCDPARC",111,0)
 ; Input:   DATA        - Compiled report data in ^TMP("RCDPARC_REPORT",$J)
"RTN","RCDPARC",112,0)
 ;          SUM         - Compiled grand totals in ^TMP("RCDPARC_REPORT",$J,"~~SUM")
"RTN","RCDPARC",113,0)
 ;          SORT        - Selected Sort Option
"RTN","RCDPARC",114,0)
 ;          CD          - 'D' - Detail report, 'S' - Summary report
"RTN","RCDPARC",115,0)
 ;          RA          - Always 0 for now to not display CARCS on report
"RTN","RCDPARC",116,0)
 ; Output:  RCSTOP      - 1 if user quit out of the display, 0 otherwise
"RTN","RCDPARC",117,0)
 N AMTA,AMTB,AMTP,CL,CZ,DESC,DIWL,DIWR,DLN,DX0,DZ,IX,IY,LN,LN2,PAY,PCT,PYRTINS,PYZ,RCSL
"RTN","RCDPARC",118,0)
 N TIN,TIX,TIY,X,XX,YY,ZZ
"RTN","RCDPARC",119,0)
 S $P(LN,"-",80)="",$P(DLN,"=",80)="",$P(LN2,"-",78)="",LN2="  "_LN2,RCSL=8
"RTN","RCDPARC",120,0)
 ; Do Grand totals - moved to top of report per Susan on 7/16/2015
"RTN","RCDPARC",121,0)
 S DX0=$G(@SUMM@("CLAIMS")),PCT=0
"RTN","RCDPARC",122,0)
 S:+$P(DX0,U,2)'=0 PCT=$J(($P(DX0,U,4)/$P(DX0,U,2))*100,3,0)
"RTN","RCDPARC",123,0)
 S:+$P(DX0,U,2)=0 PCT="ERR"
"RTN","RCDPARC",124,0)
 I RCSL'<(IOSL-4) S RCSTOP=$$NEWPG(.RCPG,1,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",125,0)
 W !
"RTN","RCDPARC",126,0)
 W "GRAND TOTAL ALL CARCS / ALL PAYERS ON REPORT",!
"RTN","RCDPARC",127,0)
 W "   TOTAL #CLAIMS:  ",$J($P(DX0,U,1),6,0),"  ADJ: ",PCT,"% [TOT AMT ADJUSTED / TOT AMT BILLED]",!
"RTN","RCDPARC",128,0)
 W "   AMT ADJUST: $",$J($P(DX0,U,4),11,2),"  AMT BILLED: $",$J($P(DX0,U,2),11,2),"  AMT PAID: $",$J($P(DX0,U,3),11,2),!
"RTN","RCDPARC",129,0)
 W !,DLN,!! S RCSL=RCSL+5
"RTN","RCDPARC",130,0)
 ;
"RTN","RCDPARC",131,0)
 S IX="",IEN="",CL=0,AMTB=0,AMTP=0,DESC="Empty Description"
"RTN","RCDPARC",132,0)
 F  S IX=$O(@DATA@(IX)) Q:IX=""!RCSTOP  S TIX=$G(@DATA@(IX)),IY="" D  Q:RCSTOP 
"RTN","RCDPARC",133,0)
 . D:SORT="C"  Q:RCSTOP  ; CARC Sorted output IX => CARC; IY => Payer Name
"RTN","RCDPARC",134,0)
 .. S DX0=$G(@DATA@(IX,"~~SUM")),CL=$P(DX0,U,1),AMTB=$P(DX0,U,2),AMTP=$P(DX0,U,3),AMTA=$P(DX0,U,4),DESC=$P(DX0,U,5),PCT=(AMTA/AMTB)*100
"RTN","RCDPARC",135,0)
 .. W "CARC: ",$J(IX,4)," TOTAL #CLAIMS: ",$J(CL,5,0)," ADJ:",$J(PCT,3,0),"% [TOT AMT ADJUSTED / TOT AMT BILLED]",! S RCSL=RCSL+1
"RTN","RCDPARC",136,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",137,0)
 .. W "  AMT ADJUST: ",$J(AMTA,11,2),"  AMT BILLED: ",$J(AMTB,12,2),"  AMT PAID: ",$J(AMTP,12,2),! S RCSL=RCSL+1
"RTN","RCDPARC",138,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",139,0)
 .. S X="Desc: "_$E(DESC,1,73),DIWL=1,DIWR=80 K ^UTILITY($J,"W") D ^DIWP,^DIWW S RCSL=RCSL+1
"RTN","RCDPARC",140,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",141,0)
 .. W LN,! S RCSL=RCSL+1
"RTN","RCDPARC",142,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",143,0)
 .. S CZ=0,PAY="" F  S PAY=$O(@DATA@(IX,"~~SUM",PAY)) Q:PAY=""!RCSTOP  S CZ=CZ+1 D  Q:RCSTOP
"RTN","RCDPARC",144,0)
 ... S DZ=@DATA@(IX,"~~SUM",PAY),PCT=$S((+$P(DZ,U,2)'=0):($P(DZ,U,4)/$P(DZ,U,2)*100),1:"ERROR")
"RTN","RCDPARC",145,0)
 ... I CZ>1 W LN2,! S RCSL=RCSL+1
"RTN","RCDPARC",146,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",147,0)
 ... ; PRCA*4.5*321 Start modified code block
"RTN","RCDPARC",148,0)
 ... D PAYTINS^RCDPRU2(PAY,.PYRTINS)
"RTN","RCDPARC",149,0)
 ... W " PAYER NAME/TIN",!
"RTN","RCDPARC",150,0)
 ... S RCSL=RCSL+1
"RTN","RCDPARC",151,0)
 ... S PYZ="" F  S PYZ=$O(PYRTINS(PYZ)) Q:PYZ=""  D  Q:RCSTOP
"RTN","RCDPARC",152,0)
 .... W " ",$$PAYTIN^RCDPRU2(PYRTINS(PYZ),76),!
"RTN","RCDPARC",153,0)
 .... S RCSL=RCSL+1
"RTN","RCDPARC",154,0)
 .... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA)
"RTN","RCDPARC",155,0)
 ... ; PRCA*4.5*321 End modified code block
"RTN","RCDPARC",156,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",157,0)
 ... W "  #CLAIMS: ",$J($P(DZ,U,1),4,0)," ADJ:",$J(PCT,3,0),"% [ADJ: ",$J($P(DZ,U,4),10,2),"/BILLED: ",$J($P(DZ,U,2),10,2),"] PAID: ",$J($P(DZ,U,3),10,2),! S RCSL=RCSL+1
"RTN","RCDPARC",158,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",159,0)
 ... D:RCDET DETAIL(DATA,IX,PAY,.RCSL,.RCSTOP) Q:RCSTOP  ; Data array, CARC, Payer/TIN
"RTN","RCDPARC",160,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",161,0)
 .. Q:RCSTOP  W LN,! S RCSL=RCSL+1 ; Removed "!," in front of "LN"
"RTN","RCDPARC",162,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",163,0)
 . Q:RCSTOP
"RTN","RCDPARC",164,0)
 . D:SORT="P"  Q:RCSTOP  ; Payer Sorted output IX => Payer Name; IY => CARC
"RTN","RCDPARC",165,0)
 .. ; PRCA*4.5*321 Start modified code block
"RTN","RCDPARC",166,0)
 .. D PAYTINS^RCDPRU2(IX,.PYRTINS)
"RTN","RCDPARC",167,0)
 .. W " PAYER NAME/TIN",!
"RTN","RCDPARC",168,0)
 .. S RCSL=RCSL+1
"RTN","RCDPARC",169,0)
 .. S PYZ="" F  S PYZ=$O(PYRTINS(PYZ)) Q:PYZ=""  D  Q:RCSTOP
"RTN","RCDPARC",170,0)
 ... W " ",$$PAYTIN^RCDPRU2(PYRTINS(PYZ),76),!
"RTN","RCDPARC",171,0)
 ... S RCSL=RCSL+1
"RTN","RCDPARC",172,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA)
"RTN","RCDPARC",173,0)
 .. ; PRCA*4.5*321 End modified code block
"RTN","RCDPARC",174,0)
 .. S DX0=$G(@DATA@(IX,"~~SUM")),CL=$P(DX0,U,1),AMTB=$P(DX0,U,2),AMTP=$P(DX0,U,3),AMTA=$P(DX0,U,4),PCT=(AMTA/AMTB)*100
"RTN","RCDPARC",175,0)
 .. W "#CLAIMS: ",$J(CL,4,0)," ADJ: ",$J(PCT,3,0),"% [ADJ:",$J(AMTA,10,2),"/BILLED:",$J(AMTB,11,2),"] PAID:",$J(AMTP,11,2),! S RCSL=RCSL+1
"RTN","RCDPARC",176,0)
 .. W LN,!! S RCSL=RCSL+2
"RTN","RCDPARC",177,0)
 .. S CZ=0,IY="" F  S IY=$O(@DATA@(IX,"~~SUM",IY)) Q:IY=""  S CZ=CZ+1 D  Q:RCSTOP
"RTN","RCDPARC",178,0)
 ... S DZ=@DATA@(IX,"~~SUM",IY)
"RTN","RCDPARC",179,0)
 ... I CZ>1 W LN2,! S RCSL=RCSL+1
"RTN","RCDPARC",180,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",181,0)
 ... S PCT=$S((+$P(DZ,U,2)'=0):($P(DZ,U,4)/$P(DZ,U,2)*100),1:"ERROR")
"RTN","RCDPARC",182,0)
 ... W ?2,"CARC: ",$J(IY,4),?14,"#CLAIMS: ",$J($P(DZ,U,1),5,0),?30,"ADJ: ",$J(PCT,3,0),"% [AMT ADJUSTED / AMT BILLED]",! S RCSL=RCSL+1
"RTN","RCDPARC",183,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",184,0)
 ... W ?2,"AMT ADJUST: ",$J($P(DZ,U,4),11,2),?26,"  BILLED: ",$J($P(DZ,U,2),12,2),?56," PAID: ",$J($P(DZ,U,3),12,2),! S RCSL=RCSL+1
"RTN","RCDPARC",185,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",186,0)
 ... S X="Desc: "_$E($P(DZ,U,5),1,68),DIWL=3,DIWR=80 K ^UTILITY($J,"W") D ^DIWP,^DIWW S RCSL=RCSL+1
"RTN","RCDPARC",187,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",188,0)
 ... D:RCDET DETAIL(DATA,IX,IY,.RCSL,.RCSTOP) Q:RCSTOP  ; Data array, Payer/TIN, CARC
"RTN","RCDPARC",189,0)
 ... I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",190,0)
 .. Q:RCSTOP  W LN,! S RCSL=RCSL+1 ; Removed "!," in front of LN
"RTN","RCDPARC",191,0)
 .. I RCSL'<(IOSL-2) S RCSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:RCSTOP
"RTN","RCDPARC",192,0)
 Q
"RTN","RCDPARC",193,0)
 ;
"RTN","RCDPARC",194,0)
DETAIL(DATA,L1,L2,RCSL,DSTOP) ; Print detail information for this entry
"RTN","RCDPARC",195,0)
 N IEN,DOS,DX,DY,HDR,PCT,PAT,SSN
"RTN","RCDPARC",196,0)
 S HDR=0
"RTN","RCDPARC",197,0)
 S IEN="" F  S IEN=$O(@DATA@(L1,L2,IEN)) Q:IEN=""!DSTOP  S HDR=HDR+1 D  Q:DSTOP 
"RTN","RCDPARC",198,0)
 . ; Print out Detail
"RTN","RCDPARC",199,0)
 . D:HDR=1  Q:DSTOP
"RTN","RCDPARC",200,0)
 .. W "  ------------------------------------------------------------------------------",! S RCSL=RCSL+1
"RTN","RCDPARC",201,0)
 .. W "  CLAIM#    DOS    %ADJ  [AMT ADJ/AMT BILLED]  PAID   PATIENT NAME          SSN",! S RCSL=RCSL+1
"RTN","RCDPARC",202,0)
 .. W "  ==============================================================================",! S RCSL=RCSL+1
"RTN","RCDPARC",203,0)
 .. I RCSL'<(IOSL-2) S DSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:DSTOP
"RTN","RCDPARC",204,0)
 . S DX=@DATA@(L1,L2,IEN,0),DY=@DATA@(L1,L2,IEN,1),DOS=$$DATE^RCDPRU($$GET1^DIQ(399,$P(DX,U,1)_",",.03,"I")),PCT=($P(DY,U,2)/$P(DX,U,6))*100
"RTN","RCDPARC",205,0)
 . ;S $P(DX,U,6)=654321.99,$P(DX,U,7)=123456.99
"RTN","RCDPARC",206,0)
 . S PAT=$$GET1^DIQ(2,$P(DX,U,3)_",",.01,"E"),SSN="("_$E($$GET1^DIQ(2,$P(DX,U,3)_",",.09,"E"),*-3,*)_")"
"RTN","RCDPARC",207,0)
 . W ?2,$P(DX,U,2),?10,DOS,?19,$J(PCT,3,0),?24,$J($P(DY,U,2),9,2),?34,$J($P(DX,U,6),9,2),?44,$J($P(DX,U,7),9,2),?54,$E(PAT,1,19),?74,SSN,! S RCSL=RCSL+1
"RTN","RCDPARC",208,0)
 . I RCSL'<(IOSL-2) S DSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:DSTOP
"RTN","RCDPARC",209,0)
 . ;W "RCRARC = ",RCRARC,"   DY=",DY,!
"RTN","RCDPARC",210,0)
 . ; Write out RARC if we have one
"RTN","RCDPARC",211,0)
 . I RCRARC=1&($P(DY,U,5)'="") S X="RARC: "_$P(DY,U,5)_"  "_$P(DY,U,6),DIWL=5,DIWR=80 K ^UTILITY($J,"W") D ^DIWP,^DIWW S RCSL=RCSL+1
"RTN","RCDPARC",212,0)
 . I RCSL'<(IOSL-2) S DSTOP=$$NEWPG(.RCPG,0,.RCSL,CD,RA) Q:DSTOP
"RTN","RCDPARC",213,0)
 W ! S RCSL=RCSL+1
"RTN","RCDPARC",214,0)
 Q
"RTN","RCDPARC",215,0)
HDR(CD,RA) ; Report header
"RTN","RCDPARC",216,0)
 N ZZ S ZZ=$S($G(RA)=1:" & RARC",1:"")
"RTN","RCDPARC",217,0)
 Q:CD "EDI LOCKBOX 835 CARC"_ZZ_" DATA REPORT - DETAIL FORMAT"
"RTN","RCDPARC",218,0)
 Q "EDI LOCKBOX 835 CARC DATA REPORT - SUMMARY FORMAT"
"RTN","RCDPARC",219,0)
 ;
"RTN","RCDPARC",220,0)
HDRP(Z,X,Z1) ; Print Header (Z=String, X=1 (line feed) X=0 (no LF), Z1 (page number right justified)
"RTN","RCDPARC",221,0)
 I $G(X)=1 W !
"RTN","RCDPARC",222,0)
 W ?(IOM-$L(Z)\2),Z W:$G(Z1)]"" ?(IOM-$L(Z1)),Z1
"RTN","RCDPARC",223,0)
 Q
"RTN","RCDPARC",224,0)
NEWPG(RCPG,RCNEW,RCSL,CD,RA) ; Check for new page needed, output header
"RTN","RCDPARC",225,0)
 ; RCPG = Page number passwd by referece
"RTN","RCDPARC",226,0)
 ; RCNEW = 1 to force new page
"RTN","RCDPARC",227,0)
 ; RCSL = page length passed by reference
"RTN","RCDPARC",228,0)
 ; Function returns 1 if user chooses to stop output
"RTN","RCDPARC",229,0)
 N ZSTOP S ZSTOP=0
"RTN","RCDPARC",230,0)
 I RCNEW!'RCPG!(($Y+5)>IOSL) D
"RTN","RCDPARC",231,0)
 . D:RCPG ASK^RCDPRU(.ZSTOP) Q:ZSTOP
"RTN","RCDPARC",232,0)
 . S RCPG=RCPG+1 W @IOF
"RTN","RCDPARC",233,0)
 . D HDRP($$HDR(CD,RA),1,"Page: "_RCPG)
"RTN","RCDPARC",234,0)
 . D HDRP("SORT BY: "_$S($E(RCSORT,1)="C":"CARC",1:"Payer")_"  RUN DATE: "_RCNOW,1)
"RTN","RCDPARC",235,0)
 . D HDRP("Divisions: "_DIVHDR_" CARCs: "_CRHDR,1)
"RTN","RCDPARC",236,0)
 . D HDRP("835 PAYERS: "_$S($E(RCPAY)="A":"ALL",1:"Selected")_" 835 PAYER TINs: "_$S($E(RCTIN)="A":"ALL",1:"Selected"),1)
"RTN","RCDPARC",237,0)
 . D HDRP("EOB PAID DATE RANGE: "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2),1)
"RTN","RCDPARC",238,0)
 . W !,RCHR,! S RCSL=7
"RTN","RCDPARC",239,0)
 Q ZSTOP
"RTN","RCDPARC",240,0)
 ;
"RTN","RCDPARC",241,0)
 ;
"RTN","RCDPARC",242,0)
 ; Select Range or list of CARC Codes
"RTN","RCDPARC",243,0)
CARC ;
"RTN","RCDPARC",244,0)
 N DIR,OKAY
"RTN","RCDPARC",245,0)
 S DIR("A")="Enter a List or Range of CARC codes: ",DIR(0)="F^1:200"
"RTN","RCDPARC",246,0)
 S DIR("?")="Codes can be entered as: 1,2,4:15,A1:B6"
"RTN","RCDPARC",247,0)
 S DIR("?",1)="Please enter a list or range of CARC Codes, use a comma "
"RTN","RCDPARC",248,0)
 S DIR("?",2)="and a colon ':' to delimit ranges of codes."
"RTN","RCDPARC",249,0)
 D ^DIR K DIR
"RTN","RCDPARC",250,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCSTOP=1 Q
"RTN","RCDPARC",251,0)
 S RCODE=X,OKAY=$$VAL^RCDPRU(345,.RCODE)
"RTN","RCDPARC",252,0)
 I 'OKAY S DIR("A",1)="Invalid Range/List of CARC Codes, Please reenter.." G CARC
"RTN","RCDPARC",253,0)
 K DIR("A",1) ; Clean up DIR
"RTN","RCDPARC",254,0)
 Q RCODE
"RTN","RCDPARC",255,0)
 ; Get data for report and apply filters if necessary
"RTN","RCDPARC",256,0)
GETDATA(GCARC,GPAYER,GTIN,GSORT,GRARC,GSTART,GSTOP,GARRAY,GDIV) ;
"RTN","RCDPARC",257,0)
 ; Input: GCCARC - Range of CARC codes to include
"RTN","RCDPARC",258,0)
 ;        GPAYER - Range of payers to include 
"RTN","RCDPARC",259,0)
 ;        GTIN   - Range of TINs to include
"RTN","RCDPARC",260,0)
 ;        GSORT  - Sort order 
"RTN","RCDPARC",261,0)
 ;        GRARC  - Flag to display RARC codes on the report (0 = No)
"RTN","RCDPARC",262,0)
 ;        GSTART - Start date
"RTN","RCDPARC",263,0)
 ;        GSTOP  - End date
"RTN","RCDPARC",264,0)
 ;        GARRAY - Root of the array in which to store the output data
"RTN","RCDPARC",265,0)
 ;        GDIV   - Range of Divisions to include
"RTN","RCDPARC",266,0)
 ; Output: @GARRAY("BILLS",IEN,0)=A1^A2^A3^A4^A5^A6^A7
"RTN","RCDPARC",267,0)
 ;           A1=Pointer to BILL/CLAIM file (#399)
"RTN","RCDPARC",268,0)
 ;           A2=Bill Number
"RTN","RCDPARC",269,0)
 ;           A3=Pointer to patient file (#2)
"RTN","RCDPARC",270,0)
 ;           A4=Payer Name from EOB, pointer to Insurance file (#36)
"RTN","RCDPARC",271,0)
 ;           A5=TIN from EOB
"RTN","RCDPARC",272,0)
 ;           A6=Total Charges
"RTN","RCDPARC",273,0)
 ;           A7=Paid amount
"RTN","RCDPARC",274,0)
 ;
"RTN","RCDPARC",275,0)
 N SDT,IEN,CNT,ZX,RM,ZND,CARR,PNARR,PTARR,RCSET,GLINE,DZN,PTR,ZPAY,RCERR,RCDEN
"RTN","RCDPARC",276,0)
 S SDT=$O(^IBM(361.1,"E",GSTART),-1)
"RTN","RCDPARC",277,0)
 ; Set up the arrays for filtering on CARC, PAYER name and Payer TINs
"RTN","RCDPARC",278,0)
 D RNG^RCDPRU("CARC",GCARC,.CARR)
"RTN","RCDPARC",279,0)
 D RNG^RCDPRU("PAYER",GPAYER("DATA"),.PNARR)
"RTN","RCDPARC",280,0)
 I $G(PNARR("PAYER"))'="ALL" D  ;
"RTN","RCDPARC",281,0)
 . N XARR,ZARR
"RTN","RCDPARC",282,0)
 . MERGE XARR=PNARR("PAYER")
"RTN","RCDPARC",283,0)
 . D PAYLIST^RCDPRU2(.XARR,"E",.ZARR) ; PRCA*4.5*321 - Expand payer list to include all with same TIN
"RTN","RCDPARC",284,0)
 . MERGE PNARR("PAYER")=ZARR
"RTN","RCDPARC",285,0)
 D RNG^RCDPRU("TIN",GTIN("DATA"),.PTARR)
"RTN","RCDPARC",286,0)
 ;Get possible bills to work on from ^IBM(361.1,"E") index
"RTN","RCDPARC",287,0)
 F  S SDT=$O(^IBM(361.1,"E",SDT)) Q:SDT=""!(SDT>GSTOP)  D
"RTN","RCDPARC",288,0)
 . S IEN="" F  S IEN=$O(^IBM(361.1,"E",SDT,IEN)) Q:IEN=""  D
"RTN","RCDPARC",289,0)
 .. S RM=$$GET1^DIQ(361.1,IEN_",",102,"I") Q:$G(RM)=1  ; Quit looking if this EOB is removed
"RTN","RCDPARC",290,0)
 .. ; If not all divisions then check to see if this EOB should be included
"RTN","RCDPARC",291,0)
 .. I GDIV=0 S RCDIV="",RCDEN=$$GET1^DIQ(361.1,IEN_",",.01,"I") S:RCDEN'="" RCDIV=$$GET1^DIQ(399,RCDEN_",",.22,"I") Q:RCDIV=""  Q:$G(GDIV(RCDIV))=""
"RTN","RCDPARC",292,0)
 .. ; Get the data for this claim and 835 Payer
"RTN","RCDPARC",293,0)
 .. S ZND=^IBM(361.1,IEN,0),PTR=$P(ZND,U,1),ZPAY=$$GPAYR^RCDPRU2($P(ZND,U,3))
"RTN","RCDPARC",294,0)
 .. S RCSET=1
"RTN","RCDPARC",295,0)
 .. ; Are there CARC codes for this record
"RTN","RCDPARC",296,0)
 .. S:($G(^IBM(361.1,IEN,10,0))']"")&($G(^IBM(361.1,IEN,15,0))']"") RCSET=0
"RTN","RCDPARC",297,0)
 .. ; Is the PAYER included in the list
"RTN","RCDPARC",298,0)
 .. S:'$$CHK^RCDPRU2("PAYER",ZPAY,.PNARR) RCSET=0
"RTN","RCDPARC",299,0)
 .. ; Is the payer TIN included in the list
"RTN","RCDPARC",300,0)
 .. S:'$$CHK^RCDPRU2("TIN",$P(ZND,U,3)_" ",.PTARR) RCSET=0
"RTN","RCDPARC",301,0)
 .. Q:RCSET=0  ; No need to check further get next IEN
"RTN","RCDPARC",302,0)
 .. ; Pointer to the bill (^DGCR(399,))^KBill #^Patient pointer^Payer Pointer [^DIC(36)]^Payer ID/TIN^Total Charges^Paid Amount
"RTN","RCDPARC",303,0)
 .. S DZN=$G(^DGCR(399,PTR,0))
"RTN","RCDPARC",304,0)
 .. S:($G(^IBM(361.1,IEN,10,0))]"")!($G(^IBM(361.1,IEN,15,0))]"") @GARRAY@("BILLS",IEN,0)=PTR_U_$P(DZN,U,1)_U_$P(DZN,U,2)_U_$P(ZND,U,2)_U_$P(ZND,U,3)_U_$G(^DGCR(399,PTR,"U1"))_U_$P($G(^IBM(361.1,IEN,1)),U,1)
"RTN","RCDPARC",305,0)
 .. S CNT=0
"RTN","RCDPARC",306,0)
 .. ; Get Claim Level CARC Data
"RTN","RCDPARC",307,0)
 .. D:$G(^IBM(361.1,IEN,10,0))]""
"RTN","RCDPARC",308,0)
 ... ; Get CARC information, CARC is in 361.11
"RTN","RCDPARC",309,0)
 ... N IX,RCGX S IX="" D GETS^DIQ(361.1,IEN_",","10*;","E","RCGX")
"RTN","RCDPARC",310,0)
 ... ; CARC^AMOUNT^QUANTITY^DESCRIPTION
"RTN","RCDPARC",311,0)
 ... S IX="" F  S IX=$O(RCGX("361.111",IX)) Q:IX=""  D
"RTN","RCDPARC",312,0)
 .... ; Quit if this CARC is not in the list
"RTN","RCDPARC",313,0)
 .... Q:'$$CHK^RCDPRU2("CARC",RCGX("361.111",IX,.01,"E"),.CARR)
"RTN","RCDPARC",314,0)
 .... S CNT=CNT+1
"RTN","RCDPARC",315,0)
 .... S @GARRAY@("BILLS",IEN,"C",CNT)=RCGX("361.111",IX,.01,"E")_U_RCGX("361.111",IX,.02,"E")_U_RCGX("361.111",IX,.03,"E")_U_RCGX("361.111",IX,.04,"E")
"RTN","RCDPARC",316,0)
 .. ; Get Line level CARC Data
"RTN","RCDPARC",317,0)
 .. D:$G(^IBM(361.1,IEN,15,0))]""
"RTN","RCDPARC",318,0)
 ... ; Get CARC and RARC information. CARC is in 361.11511 and RARC is in 361.1154
"RTN","RCDPARC",319,0)
 ... N IX,RCGX S IX="" D GETS^DIQ(361.1,IEN_",","15*;","IE","RCGX")
"RTN","RCDPARC",320,0)
 ... ; CARC^AMOUNT^QUANTITY^DESCRIPTION
"RTN","RCDPARC",321,0)
 ... S IX="" F  S IX=$O(RCGX("361.11511",IX)) Q:IX=""  D
"RTN","RCDPARC",322,0)
 .... ; Quit if this CARC is not on the list
"RTN","RCDPARC",323,0)
 .... Q:'$$CHK^RCDPRU2("CARC",RCGX("361.11511",IX,.01,"E"),.CARR)
"RTN","RCDPARC",324,0)
 .... S CNT=CNT+1
"RTN","RCDPARC",325,0)
 .... S @GARRAY@("BILLS",IEN,"C",CNT)=RCGX("361.11511",IX,.01,"E")_U_RCGX("361.11511",IX,.02,"E")_U_RCGX("361.11511",IX,.03,"E")_U_RCGX("361.11511",IX,.04,"E")
"RTN","RCDPARC",326,0)
 ... ; RARC^DESCRIPTION
"RTN","RCDPARC",327,0)
 ... S IX="" F ZX=1:1 S IX=$O(RCGX("361.1154",IX)) Q:IX=""  S @GARRAY@("BILLS",IEN,"R",ZX)=RCGX("361.1154",IX,.02,"E")_U_RCGX("361.1154",IX,.03,"E")
"RTN","RCDPARC",328,0)
 ; Possible bills have been accumulated in "BILLS" sub-array, Apply filters and accumulate data in "REPORT" sub-array
"RTN","RCDPARC",329,0)
 D SORT(GARRAY,GSORT)
"RTN","RCDPARC",330,0)
 Q
"RTN","RCDPARC",331,0)
 ;
"RTN","RCDPARC",332,0)
SORT(ARRAY,SORT) ; Sort and summarize data based on SORT variable
"RTN","RCDPARC",333,0)
 N CARC,IEN,D1,D2,PIEN,PAYER,Z,TIN,DESC,R1,BILL S IEN=""
"RTN","RCDPARC",334,0)
 ; IEN= IEN from file 361.1; PIEN= 835 Payer IEN from file 344.6
"RTN","RCDPARC",335,0)
 F  S IEN=$O(@ARRAY@("BILLS",IEN)) Q:IEN=""  D
"RTN","RCDPARC",336,0)
 . S D1=@ARRAY@("BILLS",IEN,0),TIN=$P(D1,U,5),BILL=$P(D1,U,2)
"RTN","RCDPARC",337,0)
 . S PAYER=$$GPAYR^RCDPRU2(TIN) Q:$G(PAYER)=""  ; couldn't find a payer to match TIN, quit
"RTN","RCDPARC",338,0)
 . S CARC="",Z="",R1=""
"RTN","RCDPARC",339,0)
 . F  S Z=$O(@ARRAY@("BILLS",IEN,"C",Z)) Q:Z=""  S D2=@ARRAY@("BILLS",IEN,"C",Z),CARC=$P(D2,U,1),DESC=$P(D2,U,4) D
"RTN","RCDPARC",340,0)
 .. ; If RARC exists append to CARC Information
"RTN","RCDPARC",341,0)
 .. S:$G(@ARRAY@("BILLS",IEN,"R",Z))'="" R1=@ARRAY@("BILLS",IEN,"R",Z)
"RTN","RCDPARC",342,0)
 .. ;W "RARC: |",$G(@ARRAY@("BILLS",IEN,"R",Z)),"|",!
"RTN","RCDPARC",343,0)
 .. D:SORT="C"  ; Sort by CARC, group by Payer
"RTN","RCDPARC",344,0)
 ... S @ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,0)=D1
"RTN","RCDPARC",345,0)
 ... ; First time through set the "BILLS" D2 into report, otherwise add adjustment amt to the existing for this CARC
"RTN","RCDPARC",346,0)
 ... I $G(@ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,1))="" S @ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,1)=D2_U_R1
"RTN","RCDPARC",347,0)
 ... E  S $P(@ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,1),U,2)=$P(@ARRAY@("REPORT",CARC,PAYER_"/"_TIN,IEN,1),U,2)+$P(D2,U,2) ;W "CARC: ",CARC," Bill: ",BILL," D2: ",D2,!
"RTN","RCDPARC",348,0)
 .. D:SORT="P"  ; Sort by Payer, group by CARC
"RTN","RCDPARC",349,0)
 ... S @ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,0)=D1
"RTN","RCDPARC",350,0)
 ... ; First time through set the "BILLS" D2 into report, otherwise add adjustment amt to the existing for this CARC
"RTN","RCDPARC",351,0)
 ... I $G(@ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,1))="" S @ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,1)=D2_U_R1
"RTN","RCDPARC",352,0)
 ... E  S $P(@ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,1),U,2)=$P(@ARRAY@("REPORT",PAYER_"/"_TIN,CARC,IEN,1),U,2)+$P(D2,U,2)
"RTN","RCDPARC",353,0)
 .. ;I CARC=1 W ARRAY," BILL:",BILL," CARC:",CARC,"  ",PAYER_"/"_TIN,"  ",$P(D1,U,6),"  ",$P(D1,U,7),"  ",DESC,"  ",$P(D2,U,2),"  ",SORT,!
"RTN","RCDPARC",354,0)
 .. D SUM^RCDPRU2(ARRAY,IEN,BILL,CARC,PAYER_"/"_TIN,$P(D1,U,6),$P(D1,U,7),DESC,$P(D2,U,2),SORT)
"RTN","RCDPARC",355,0)
 Q
"RTN","RCDPE215")
0^10^B89764235
"RTN","RCDPE215",1,0)
RCDPE215 ;ALB/TMK- SF215 EDI Lockbox Summary Report ;1 Jun 99
"RTN","RCDPE215",2,0)
 ;;4.5;Accounts Receivable;**114,173,220,321**;Mar 20, 1995;Build 48
"RTN","RCDPE215",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPE215",4,0)
 Q
"RTN","RCDPE215",5,0)
 ;
"RTN","RCDPE215",6,0)
SUMM215 ;  summary 215
"RTN","RCDPE215",7,0)
 D FULL^VALM1
"RTN","RCDPE215",8,0)
 S VALMBCK="R"
"RTN","RCDPE215",9,0)
 ;
"RTN","RCDPE215",10,0)
 N %,%ZIS,POP,RCDEPTDA,RCTYPE,DIC,X,Y,ZTSAVE,ZTDESC,ZTSK,ZTRTN
"RTN","RCDPE215",11,0)
 ;
"RTN","RCDPE215",12,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.1,",DIC("A")="Select DEPOSIT: "
"RTN","RCDPE215",13,0)
 D ^DIC K DIC
"RTN","RCDPE215",14,0)
 I Y'>0 Q
"RTN","RCDPE215",15,0)
 S RCDEPTDA=+Y
"RTN","RCDPE215",16,0)
 S RCTYPE=$$GETTYPE^RCDPR215
"RTN","RCDPE215",17,0)
 I RCTYPE="" Q
"RTN","RCDPE215",18,0)
 ;
"RTN","RCDPE215",19,0)
 ; device
"RTN","RCDPE215",20,0)
 W ! S %ZIS="Q" D ^%ZIS Q:POP
"RTN","RCDPE215",21,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK D ^%ZISC Q
"RTN","RCDPE215",22,0)
 .   S ZTDESC="Print Summary 215 Report",ZTRTN="DQ^RCDPE215"
"RTN","RCDPE215",23,0)
 .   S ZTSAVE("RCDEPTDA")="",ZTSAVE("RCTYPE")="",ZTSAVE("ZTREQ")="@"
"RTN","RCDPE215",24,0)
 W !!,"<*> please wait <*>"
"RTN","RCDPE215",25,0)
 D DQ
"RTN","RCDPE215",26,0)
 Q
"RTN","RCDPE215",27,0)
 ;
"RTN","RCDPE215",28,0)
DQ ;  queued report entrypoint
"RTN","RCDPE215",29,0)
 ;  RCDEPTDA = ien of the deposit to summarize
"RTN","RCDPE215",30,0)
 ;  RCTYPE="D"etail or "A"ccrual
"RTN","RCDPE215",31,0)
 N %I,AMOUNT,BILL,BILLDA,COMMENTS,COUNT,DA,DATA,DEPOSIT,FMSDOCNO,FUND,NOW,PAGE,PIECE,PRINTOTL,RCSTFLAG,RCYLINE,RECEIPT,SCREEN,TOTAL,TOTLAMT,UNAPPLY,X,Y,RCDETAIL,PCT,RECEIPDA,TOT,EDITOT,DETAIL,Z,EFTFUND
"RTN","RCDPE215",32,0)
 ;
"RTN","RCDPE215",33,0)
 ;  calculate report
"RTN","RCDPE215",34,0)
 K ^TMP($J,"RCFMSCR"),^TMP($J,"RCFMSCR_SUM"),^TMP($J,"RCDPR215"),^TMP($J,"RCDET")
"RTN","RCDPE215",35,0)
 S EFTFUND=$S(DT<$$ADDPTEDT^PRCAACC():"5287.4/8NZZ",1:"528704/8NZZ")
"RTN","RCDPE215",36,0)
 S DEPOSIT=$P($G(^RCY(344.1,RCDEPTDA,0)),U)
"RTN","RCDPE215",37,0)
 S RECEIPDA=0 F  S RECEIPDA=$O(^RCY(344,"AD",RCDEPTDA,RECEIPDA)) Q:'RECEIPDA  D
"RTN","RCDPE215",38,0)
 . D FMSLINES^RCXFMSC1(RECEIPDA)
"RTN","RCDPE215",39,0)
 . ; sort by Receipt #
"RTN","RCDPE215",40,0)
 . S ^TMP($J,"RCFMSCR_SUM",RECEIPDA)=""
"RTN","RCDPE215",41,0)
 . M ^TMP($J,"RCFMSCR_SUM",RECEIPDA)=^TMP($J,"RCFMSCR")
"RTN","RCDPE215",42,0)
 . K ^TMP($J,"RCFMSCR")
"RTN","RCDPE215",43,0)
 . I $$EDILB^RCDPEU(RECEIPDA)=1 D  ; EFT dep receipt
"RTN","RCDPE215",44,0)
 .. S TOT=0
"RTN","RCDPE215",45,0)
 .. S Z=0 F  S Z=$O(^RCY(344,RECEIPDA,1,Z)) Q:'Z  S TOT=TOT+$P($G(^(Z,0)),U,4)
"RTN","RCDPE215",46,0)
 .. S (^TMP($J,"RCFMSCR_SUM",RECEIPDA,EFTFUND),^TMP($J,"RCTOT","EDILBOX"))=TOT
"RTN","RCDPE215",47,0)
 ;
"RTN","RCDPE215",48,0)
 ;  summary rep for a deposit
"RTN","RCDPE215",49,0)
 S PAGE=0,RCYLINE="",$P(RCYLINE,"-",81)=""
"RTN","RCDPE215",50,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCDPE215",51,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPE215",52,0)
 U IO
"RTN","RCDPE215",53,0)
 K ^TMP($J,"RCTOT")
"RTN","RCDPE215",54,0)
 S RCDETAIL=1,PCT=0,EDITOT=0
"RTN","RCDPE215",55,0)
 S RECEIPDA=0 F  S RECEIPDA=$O(^TMP($J,"RCFMSCR_SUM",RECEIPDA)) Q:'RECEIPDA  D
"RTN","RCDPE215",56,0)
 . S DATA=$G(^RCY(344,RECEIPDA,0))
"RTN","RCDPE215",57,0)
 . S RECEIPT=$P(DATA,"^")
"RTN","RCDPE215",58,0)
 . S FMSDOCNO=$P($G(^RCY(344.1,+$P(DATA,"^",6),2)),"^")
"RTN","RCDPE215",59,0)
 . D SET("<NP>",RECEIPT_"@"_FMSDOCNO_"@"_RECEIPDA,.PCT)
"RTN","RCDPE215",60,0)
 . ;
"RTN","RCDPE215",61,0)
 . S TOTAL=""  ;  stores printotal^inttotal^admintotal^marshtotal^cctotal
"RTN","RCDPE215",62,0)
 . ;
"RTN","RCDPE215",63,0)
 . S FUND="" F  S FUND=$O(^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND)) Q:'FUND  D
"RTN","RCDPE215",64,0)
 ..   D SET("!!?5","Appropriation: "_FUND,.PCT)
"RTN","RCDPE215",65,0)
 ..   I RCTYPE="D" D SET("!","",.PCT)
"RTN","RCDPE215",66,0)
 ..   ;
"RTN","RCDPE215",67,0)
 ..   S PRINTOTL=0
"RTN","RCDPE215",68,0)
 ..   S COUNT=0
"RTN","RCDPE215",69,0)
 ..   I FUND=EFTFUND S PRINTOTL=PRINTOTL+$G(^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND)),EDITOT=EDITOT+$G(^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND))
"RTN","RCDPE215",70,0)
 ..   S BILLDA=0 F  S BILLDA=$O(^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND,BILLDA)) Q:'BILLDA  D
"RTN","RCDPE215",71,0)
 ...   S COUNT=COUNT+1
"RTN","RCDPE215",72,0)
 ...   S BILL=$P($G(^PRCA(430,BILLDA,0)),"^")
"RTN","RCDPE215",73,0)
 ...   S DATA=^TMP($J,"RCFMSCR_SUM",RECEIPDA,FUND,BILLDA)
"RTN","RCDPE215",74,0)
 ...   S PRINTOTL=PRINTOTL+$P(DATA,"^")
"RTN","RCDPE215",75,0)
 ...   F PIECE=1:1:5 S $P(TOTAL,"^",PIECE)=$P(TOTAL,"^",PIECE)+$P(DATA,"^",PIECE),$P(^TMP($J,"RCTOT","TOTAL"),"^",PIECE)=$P($G(^TMP($J,"RCTOT","TOTAL")),"^",PIECE)+$P(DATA,"^",PIECE)
"RTN","RCDPE215",76,0)
 ...   ;  if accrued report,no detail
"RTN","RCDPE215",77,0)
 ...   I RCTYPE="A" Q
"RTN","RCDPE215",78,0)
 ...   ;
"RTN","RCDPE215",79,0)
 ...   D SET("!?5",COUNT_")",.PCT),SET("?10",BILL,.PCT),SET("?30",$J($P(DATA,"^"),10,2),.PCT),SET("?45","DEBTOR: "_$E($$DEBTOR^RCDPR215(BILLDA),1,25),.PCT)
"RTN","RCDPE215",80,0)
 ...   D SET("!?15","INT:"_$J($P(DATA,"^",2),10,2)_" ADMIN:"_$J($P(DATA,"^",3),10,2)_" MARS: "_$J($P(DATA,"^",4),10,2)_" CC: "_$J($P(DATA,"^",5),10,2),.PCT,1)
"RTN","RCDPE215",81,0)
 ..   ;
"RTN","RCDPE215",82,0)
 ..   I RCTYPE="D" D SET("!?30","----------",.PCT),SET("!?5","TOTAL for "_FUND,.PCT)
"RTN","RCDPE215",83,0)
 ..   D SET("?30",$J(PRINTOTL,10,2),.PCT)
"RTN","RCDPE215",84,0)
 ..   I FUND="0160a1" D SET("?45","0160a1 sub-totals Champva receipts",.PCT),SET("!?45","not sent to FMS on the CR document.",.PCT)
"RTN","RCDPE215",85,0)
 ..   S ^TMP($J,"RCTOT","PRINTOTL",FUND)=$G(^TMP($J,"RCTOT","PRINTOTL",FUND))+PRINTOTL
"RTN","RCDPE215",86,0)
 ..   I FUND=EFTFUND S $P(^TMP($J,"RCTOT","TOTAL"),U)=$P($G(^TMP($J,"RCTOT","TOTAL")),U)+PRINTOTL
"RTN","RCDPE215",87,0)
 . ;
"RTN","RCDPE215",88,0)
 . ;  show int, admin, etc receipt totals
"RTN","RCDPE215",89,0)
 . D SET("!","",.PCT)
"RTN","RCDPE215",90,0)
 . D SET("!?5","INTEREST : (APP: 1435)",.PCT),SET("?30",$J($P(TOTAL,"^",2),10,2),.PCT)
"RTN","RCDPE215",91,0)
 . D SET("!?5","ADMIN    : (APP: 3220)",.PCT),SET("?30",$J($P(TOTAL,"^",3),10,2),.PCT)
"RTN","RCDPE215",92,0)
 . D SET("!?5","MARSHALL : (APP: 0869)",.PCT),SET("?30",$J($P(TOTAL,"^",4),10,2),.PCT)
"RTN","RCDPE215",93,0)
 . D SET("!?5","COURTCOST: (APP: 0869)",.PCT),SET("?30",$J($P(TOTAL,"^",5),10,2),.PCT)
"RTN","RCDPE215",94,0)
 . D SET("!?30","----------",.PCT)
"RTN","RCDPE215",95,0)
 . D SET("!?30",$J($P(TOTAL,"^",2)+$P(TOTAL,"^",3)+$P(TOTAL,"^",4)+$P(TOTAL,"^",5),10,2),.PCT)
"RTN","RCDPE215",96,0)
 . ;
"RTN","RCDPE215",97,0)
 . I $G(^TMP($J,"RCFMSCR_SUM",RECEIPDA,EFTFUND)) S $P(TOTAL,U)=$P(TOTAL,U)+^TMP($J,"RCFMSCR_SUM",RECEIPDA,EFTFUND)
"RTN","RCDPE215",98,0)
 . D SUSP(RECEIPDA,RCTYPE,.TOTAL,.PCT)
"RTN","RCDPE215",99,0)
 . ;
"RTN","RCDPE215",100,0)
 . S TOTLAMT=0 F PIECE=1:1:5 S TOTLAMT=TOTLAMT+$P(TOTAL,"^",PIECE)
"RTN","RCDPE215",101,0)
 . D SET("!!","TOTALS: ",.PCT)
"RTN","RCDPE215",102,0)
 . D SET("!?5","TOTAL AMT POSTED FOR RECEIPT:",.PCT),SET("?30",$J(TOTLAMT,10,2),.PCT,1)
"RTN","RCDPE215",103,0)
 ;
"RTN","RCDPE215",104,0)
 D H
"RTN","RCDPE215",105,0)
 W !!,"**** GRAND TOTALS FOR DEPOSIT: "_$P($G(^RCY(344.1,+RCDEPTDA,0)),U)
"RTN","RCDPE215",106,0)
 S TOT=0
"RTN","RCDPE215",107,0)
 S FUND="" F  S FUND=$O(^TMP($J,"RCTOT","PRINTOTL",FUND)) Q:FUND=""  D
"RTN","RCDPE215",108,0)
 . W !!?5,"Appropriation: ",FUND,": ",?35,$J($G(^TMP($J,"RCTOT","PRINTOTL",FUND)),10,2)
"RTN","RCDPE215",109,0)
 . S TOT=TOT+$G(^TMP($J,"RCTOT","PRINTOTL",FUND))
"RTN","RCDPE215",110,0)
 W !,?35,"=============",!,"Total Appropriation: ",?35,$J(+TOT,10,2)
"RTN","RCDPE215",111,0)
 I FUND="0160a1" W ?47,"0160a1 sub-totals Champva receipts",!?47,"not sent to FMS on the CR doc."
"RTN","RCDPE215",112,0)
 ;
"RTN","RCDPE215",113,0)
 S TOTAL=$G(^TMP($J,"RCTOT","TOTAL"))
"RTN","RCDPE215",114,0)
 W !
"RTN","RCDPE215",115,0)
 W !?5,"INTEREST : (APP: 1435)",?35,$J($P(TOTAL,"^",2),10,2)
"RTN","RCDPE215",116,0)
 W !?5,"ADMIN    : (APP: 3220)",?35,$J($P(TOTAL,"^",3),10,2)
"RTN","RCDPE215",117,0)
 W !?5,"MARSHALL : (APP: 0869)",?35,$J($P(TOTAL,"^",4),10,2)
"RTN","RCDPE215",118,0)
 W !?5,"COURTCOST: (APP: 0869)",?35,$J($P(TOTAL,"^",5),10,2)
"RTN","RCDPE215",119,0)
 W !?35,"----------"
"RTN","RCDPE215",120,0)
 W !?35,$J($P(TOTAL,"^",2)+$P(TOTAL,"^",3)+$P(TOTAL,"^",4)+$P(TOTAL,"^",5),10,2)
"RTN","RCDPE215",121,0)
 I $G(^TMP($J,"RCTOT","SUSPENSE")) W !!?5,"Total Appropriation: 3875",?35,$J(^TMP($J,"RCTOT","SUSPENSE"),10,2)
"RTN","RCDPE215",122,0)
 ;
"RTN","RCDPE215",123,0)
 S TOTLAMT=0 F PIECE=1:1:5 S TOTLAMT=TOTLAMT+$P(TOTAL,"^",PIECE)
"RTN","RCDPE215",124,0)
 I $G(^TMP($J,"RCTOT","EDILBOX")) S TOTLAMT=TOTLAMT+^TMP($J,"RCTOT","EDILBOX")
"RTN","RCDPE215",125,0)
 W !!,"TOTALS: "
"RTN","RCDPE215",126,0)
 W !?5,"TOT AMT POSTED FOR DEPOSIT: ",?35,$J(+TOTLAMT,10,2)
"RTN","RCDPE215",127,0)
 I SCREEN D PAUSE G:$G(RCSTFLAG) Q
"RTN","RCDPE215",128,0)
 N Q,W,T,NS
"RTN","RCDPE215",129,0)
 S W=""
"RTN","RCDPE215",130,0)
 S PCT=0 F  S PCT=$O(^TMP($J,"RCDET",PCT)) Q:'PCT  D  G:$G(RCSTFLAG) Q
"RTN","RCDPE215",131,0)
 . S Q=$P($G(^TMP($J,"RCDET",PCT)),U),T=$P($G(^(PCT)),U,2),NS=$P($G(^(PCT)),U,3)
"RTN","RCDPE215",132,0)
 . I Q="<NP>" D  Q
"RTN","RCDPE215",133,0)
 .. I W'="" W @W S W="" D:SCREEN PAUSE Q:$G(RCSTFLAG)
"RTN","RCDPE215",134,0)
 .. S RECEIPT=$P(T,"@"),FMSDOCNO=$P(T,"@",2),RECEIPDA=$P(T,"@",3)
"RTN","RCDPE215",135,0)
 .. D H,H1(0)
"RTN","RCDPE215",136,0)
 . I $E(Q)="!" W:W'="" @W S W=""
"RTN","RCDPE215",137,0)
 . S W=W_$S(W="":"",1:",")_Q_$S(Q'="":",",1:"")_""""_T_""""
"RTN","RCDPE215",138,0)
 . I 'NS,$Y>(IOSL-6) D:SCREEN PAUSE I '$G(RCSTFLAG) D H,H1(1)
"RTN","RCDPE215",139,0)
 I W'="" W @W S W=""
"RTN","RCDPE215",140,0)
 I SCREEN W !,"Press RETURN to continue: " R X:DTIME
"RTN","RCDPE215",141,0)
 ;
"RTN","RCDPE215",142,0)
Q D ^%ZISC
"RTN","RCDPE215",143,0)
 K ^TMP($J,"RCFMSCR"),^TMP($J,"RCDPR215"),^TMP($J,"RCTOT"),^TMP($J,"RCFMSCR_SUM"),^TMP($J,"RCDET")
"RTN","RCDPE215",144,0)
 Q
"RTN","RCDPE215",145,0)
 ;
"RTN","RCDPE215",146,0)
 ;
"RTN","RCDPE215",147,0)
SUSP(RECEIPDA,RCTYPE,TOTAL,PCT) ;  unapplied amts for suspense
"RTN","RCDPE215",148,0)
 ; RCTYPE = see explanation at DQ above
"RTN","RCDPE215",149,0)
 ; Returns PCT,TOTAL if passed by reference
"RTN","RCDPE215",150,0)
 ;
"RTN","RCDPE215",151,0)
 N DA,AMOUNT,UNAPPLY,COUNT,PRINTOTL,COMMENTS
"RTN","RCDPE215",152,0)
 K ^TMP($J,"RCDPR215")
"RTN","RCDPE215",153,0)
 S DA=0 F  S DA=$O(^RCY(344,RECEIPDA,1,DA)) Q:'DA  D
"RTN","RCDPE215",154,0)
 .   S AMOUNT=$P($G(^RCY(344,RECEIPDA,1,DA,0)),"^",4) I 'AMOUNT Q
"RTN","RCDPE215",155,0)
 .   S UNAPPLY=$P($G(^RCY(344,RECEIPDA,1,DA,2)),"^",5) I UNAPPLY="" Q
"RTN","RCDPE215",156,0)
 .   ;  if amount has not been processed, show it in suspense
"RTN","RCDPE215",157,0)
 .   I '$P(^RCY(344,RECEIPDA,1,DA,0),"^",5) S ^TMP($J,"RCDPR215",DA)=UNAPPLY_"^"_AMOUNT_"^"_$P($G(^RCY(344,RECEIPDA,1,DA,1)),"^",2)
"RTN","RCDPE215",158,0)
 ;
"RTN","RCDPE215",159,0)
 I $O(^TMP($J,"RCDPR215",0)) D
"RTN","RCDPE215",160,0)
 .   D SET("!!?5","Appropriation: 3875",.PCT)
"RTN","RCDPE215",161,0)
 .   I RCTYPE="D" D SET("!","",.PCT)
"RTN","RCDPE215",162,0)
 .   ;
"RTN","RCDPE215",163,0)
 .   S COUNT=0,PRINTOTL=0
"RTN","RCDPE215",164,0)
 .   S DA=0 F  S DA=$O(^TMP($J,"RCDPR215",DA)) Q:'DA!($G(RCSTFLAG))  D
"RTN","RCDPE215",165,0)
 .   .   ;
"RTN","RCDPE215",166,0)
 .   .   S UNAPPLY=$P(^TMP($J,"RCDPR215",DA),"^"),AMOUNT=$P(^(DA),"^",2),COMMENTS=$P(^(DA),"^",3)
"RTN","RCDPE215",167,0)
 .   .   S PRINTOTL=PRINTOTL+AMOUNT
"RTN","RCDPE215",168,0)
 .   .   S $P(TOTAL,"^")=$P(TOTAL,"^")+AMOUNT
"RTN","RCDPE215",169,0)
 .   .   ;  no detail if accrued report
"RTN","RCDPE215",170,0)
 .   .   I RCTYPE="A" Q
"RTN","RCDPE215",171,0)
 .   .   ;
"RTN","RCDPE215",172,0)
 .   .   S COUNT=COUNT+1
"RTN","RCDPE215",173,0)
 .   .   D SET("!?5",COUNT_")",.PCT),SET("?10",UNAPPLY,.PCT),SET("?30",$J(AMOUNT,10,2),.PCT),SET("?45","COMMENTS: "_$E(COMMENTS,1,25),.PCT)
"RTN","RCDPE215",174,0)
 .   .   I $TR($E(COMMENTS,26,80)," ")'="" D SET("!?25",$E(COMMENTS,26,80),.PCT)
"RTN","RCDPE215",175,0)
 .   .   ;PRCA*4.5*321 - BEGIN
"RTN","RCDPE215",176,0)
 .   .   ; Get comment history from RCDPE COMMENT HISTORY file #344.73
"RTN","RCDPE215",177,0)
 .   .   N RCCHIS,RCCOM,RCSUB
"RTN","RCDPE215",178,0)
 .   .   D GET^RCDPECH(.RCCHIS,RECEIPDA,DA)
"RTN","RCDPE215",179,0)
 .   .   S RCSUB=0
"RTN","RCDPE215",180,0)
 .   .   F  S RCSUB=$O(RCCHIS(RCSUB)) Q:'RCSUB  D
"RTN","RCDPE215",181,0)
 .   .   .  I RCSUB>1 D
"RTN","RCDPE215",182,0)
 .   .   .   .  S RCCOM=$P(RCCHIS(RCSUB),U,3)
"RTN","RCDPE215",183,0)
 .   .   .   .  D SET("!?45","COMMENTS: "_$E(RCCOM,1,25),.PCT)
"RTN","RCDPE215",184,0)
 .   .   .   .  I $TR($E(RCCOM,26,80)," ")'="" D SET("!?25",$E(RCCOM,26,80),.PCT)
"RTN","RCDPE215",185,0)
 .   .   .  D SET("!?45","ADDED BY USER: "_$P(RCCHIS(RCSUB),U,2),.PCT)
"RTN","RCDPE215",186,0)
 .   .   .  D SET("!?45","ADDED: "_$P(RCCHIS(RCSUB),U,1),.PCT)
"RTN","RCDPE215",187,0)
 .   .   ;PRCA*4.5*321 - END
"RTN","RCDPE215",188,0)
 .   ;
"RTN","RCDPE215",189,0)
 .   S $P(^TMP($J,"RCTOT","TOTAL"),U)=($P($G(^TMP($J,"RCTOT","TOTAL")),U)+PRINTOTL)
"RTN","RCDPE215",190,0)
 .   I RCTYPE="D" D SET("!?30","----------",.PCT),SET("!?5","TOTAL for 3875",.PCT)
"RTN","RCDPE215",191,0)
 .   D SET("?30",$J(PRINTOTL,10,2),.PCT)
"RTN","RCDPE215",192,0)
 .   S ^TMP($J,"RCTOT","SUSPENSE")=$G(^TMP($J,"RCTOT","SUSPENSE"))+PRINTOTL
"RTN","RCDPE215",193,0)
 Q
"RTN","RCDPE215",194,0)
 ;
"RTN","RCDPE215",195,0)
 ;
"RTN","RCDPE215",196,0)
GETTYPE() ;  ask type of report to print
"RTN","RCDPE215",197,0)
 N DIR,X,Y
"RTN","RCDPE215",198,0)
 S DIR(0)="S^A:ACCRUED;D:DETAILED",DIR("A")="ACCRUED OR DETAILED REPORT",DIR("B")="ACCRUED",DIR("?")="A DETAILED Report will list out accrued bills separately"
"RTN","RCDPE215",199,0)
 S DIR("?",1)="An ACCRUED Report will list just the accrued total under each appropriation"
"RTN","RCDPE215",200,0)
 D ^DIR
"RTN","RCDPE215",201,0)
 I Y'="A",Y'="D" Q ""
"RTN","RCDPE215",202,0)
 Q Y
"RTN","RCDPE215",203,0)
 ;
"RTN","RCDPE215",204,0)
 ;
"RTN","RCDPE215",205,0)
H ;  Deposit hdr
"RTN","RCDPE215",206,0)
 N Z
"RTN","RCDPE215",207,0)
 S PAGE=PAGE+1 I PAGE'=1!(SCREEN) W @IOF
"RTN","RCDPE215",208,0)
 W $C(13),"Page ",PAGE,?(80-$L(NOW)),NOW
"RTN","RCDPE215",209,0)
 W !,$E($TR(RCYLINE,"-","*"),1,26)," 215 DEPOSIT SUMMARY REPORT ",$E($TR(RCYLINE,"-","*"),1,26)
"RTN","RCDPE215",210,0)
 W !!,"DEPOSIT #: ",DEPOSIT
"RTN","RCDPE215",211,0)
 W !,RCYLINE
"RTN","RCDPE215",212,0)
 Q
"RTN","RCDPE215",213,0)
 ;
"RTN","RCDPE215",214,0)
H1(CONT) ; Receipt Hdr
"RTN","RCDPE215",215,0)
 ; CONT = 1 if continuation from previous page
"RTN","RCDPE215",216,0)
 ;
"RTN","RCDPE215",217,0)
 N Z
"RTN","RCDPE215",218,0)
 W !!,"RECEIPT #: "_RECEIPT_$S($G(CONT):" (continued)",1:"")
"RTN","RCDPE215",219,0)
 I FMSDOCNO'="" W ?51,"FMS Document #: ",FMSDOCNO
"RTN","RCDPE215",220,0)
 S Z="",$P(Z,"-",$L(RECEIPT)+1)=""
"RTN","RCDPE215",221,0)
 W !,?11,Z
"RTN","RCDPE215",222,0)
 S Z=""
"RTN","RCDPE215",223,0)
 I $P($G(^RCY(344,RECEIPDA,0)),U,18) S Z=$E(" REFERENCE ERA #: "_$P($G(^RCY(344.4,+$P($G(^RCY(344,RECEIPDA,0)),U,18),0)),U)_" ("_$P($G(^RCY(344.4,+$P($G(^RCY(344,RECEIPDA,0)),U,18),0)),U,2)_")"_$J("",51),1,51)
"RTN","RCDPE215",224,0)
 I Z'="" W !,Z
"RTN","RCDPE215",225,0)
 W !
"RTN","RCDPE215",226,0)
 Q
"RTN","RCDPE215",227,0)
 ;
"RTN","RCDPE215",228,0)
 ;
"RTN","RCDPE215",229,0)
PAUSE ;
"RTN","RCDPE215",230,0)
 D PAUSE^RCDPR215
"RTN","RCDPE215",231,0)
 Q
"RTN","RCDPE215",232,0)
 ;
"RTN","RCDPE215",233,0)
SET(CTRL,TXT,PCT,NOSP) ; Sets print array for detail
"RTN","RCDPE215",234,0)
 ;PCT = count of lines
"RTN","RCDPE215",235,0)
 ;CTRL = Control characters
"RTN","RCDPE215",236,0)
 ;TXT = text to print
"RTN","RCDPE215",237,0)
 ;NOSP = 1 if line should always print with the previous line
"RTN","RCDPE215",238,0)
 S PCT=PCT+1,^TMP($J,"RCDET",PCT)=CTRL_U_TXT_U_+$G(NOSP)
"RTN","RCDPE215",239,0)
 Q
"RTN","RCDPE215",240,0)
 ;
"RTN","RCDPEAA1")
0^44^B162348483
"RTN","RCDPEAA1",1,0)
RCDPEAA1 ;ALB/KML - AUTO POST AWAITING RESOLUTION (APAR) - LIST OF UNPOSTED EEOBS ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA1",2,0)
 ;;4.5;Accounts Receivable;**298,304,317,321**;Mar 20, 1995;Build 48
"RTN","RCDPEAA1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA1",4,0)
 Q
"RTN","RCDPEAA1",5,0)
 ;
"RTN","RCDPEAA1",6,0)
EN ; Main entry point
"RTN","RCDPEAA1",7,0)
 N RCQUIT,RCPROG
"RTN","RCDPEAA1",8,0)
 S RCQUIT=0
"RTN","RCDPEAA1",9,0)
 S RCPROG="RCDPEAA1"
"RTN","RCDPEAA1",10,0)
 ; Calling Change View API in Menu Option Mode
"RTN","RCDPEAA1",11,0)
 S RCQUIT=$$PARAMS("MO") ; PRCA*4.5*321
"RTN","RCDPEAA1",12,0)
 Q:RCQUIT
"RTN","RCDPEAA1",13,0)
 D EN^VALM("RCDPE APAR EEOB LIST")
"RTN","RCDPEAA1",14,0)
 ;
"RTN","RCDPEAA1",15,0)
ENQ Q
"RTN","RCDPEAA1",16,0)
 ;
"RTN","RCDPEAA1",17,0)
INIT ; EP Listman Template - RCDPE APAR EEOB LIST
"RTN","RCDPEAA1",18,0)
 ;
"RTN","RCDPEAA1",19,0)
 ; Parameters for selecting EEOBs to be included in the list are
"RTN","RCDPEAA1",20,0)
 ; contained in the global ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,parameter name)
"RTN","RCDPEAA1",21,0)
 ;
"RTN","RCDPEAA1",22,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",23,0)
 N FDTTM,P1,P2,RCAPAR,RCDA,RCPROG
"RTN","RCDPEAA1",24,0)
 S RCAPAR=1,P1="RCDPE_APAR_EEOB_PASS1",P2="RCDPE_APAR_EEOB_PASS2"
"RTN","RCDPEAA1",25,0)
 S RCPROG="RCDPE-APAR_EEOB_WL"
"RTN","RCDPEAA1",26,0)
 D FULL^VALM1,CLEAN^VALM10
"RTN","RCDPEAA1",27,0)
 K ^TMP($J,RCPROG),^TMP($J,P1),^TMP($J,P2)
"RTN","RCDPEAA1",28,0)
 K ^TMP(RCPROG,$J),^TMP("RCDPE-APAR_EEOB_WLDX",$J)
"RTN","RCDPEAA1",29,0)
 ; First Pass - Get ERAs that are in a 'partial' auto-post status
"RTN","RCDPEAA1",30,0)
 S RCDA=0
"RTN","RCDPEAA1",31,0)
 F  D  Q:'RCDA
"RTN","RCDPEAA1",32,0)
 . S RCDA=$O(^RCY(344.4,"E",1,RCDA))
"RTN","RCDPEAA1",33,0)
 . Q:'RCDA
"RTN","RCDPEAA1",34,0)
 . Q:'$$FILTER(RCDA)  ; Record didn't pass filter criteria
"RTN","RCDPEAA1",35,0)
 . S ^TMP($J,P1,RCDA)=""
"RTN","RCDPEAA1",36,0)
 ;
"RTN","RCDPEAA1",37,0)
 D:$D(^TMP($J,P1)) BLD^RCDPEAA4(P1,P2,RCPROG) ; Build, Sort and Output the list
"RTN","RCDPEAA1",38,0)
 ;
"RTN","RCDPEAA1",39,0)
 ; If no EEOBs found display the message below in the list area
"RTN","RCDPEAA1",40,0)
 I '$O(^TMP(RCPROG,$J,0)) D
"RTN","RCDPEAA1",41,0)
 . S ^TMP(RCPROG,$J,1,0)="THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA"
"RTN","RCDPEAA1",42,0)
 . S VALMCNT=1
"RTN","RCDPEAA1",43,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",44,0)
 Q
"RTN","RCDPEAA1",45,0)
 ;
"RTN","RCDPEAA1",46,0)
HDR ;
"RTN","RCDPEAA1",47,0)
 N LINE,RCMDRX,RCPAYR,SORT,X,Y
"RTN","RCDPEAA1",48,0)
 S RCPAYR=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEAA1",49,0)
 S RCMDRX=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",50,0)
 S Y=$S(RCMDRX="M":"MEDICAL",RCMDRX="P":"PHARMACY",1:"MEDICAL + PHARMACY")_" CLAIMS"
"RTN","RCDPEAA1",51,0)
 S X=$S(($P(RCPAYR,U)="A")!(RCPAYR=""):"ALL PAYERS",1:"PAYERS: "_$P(RCPAYR,U,2)_"-"_$P(RCPAYR,U,3))
"RTN","RCDPEAA1",52,0)
 S VALMHDR(1)="Current View:"_$J("",4)_Y_" for "_X
"RTN","RCDPEAA1",53,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",54,0)
 S SORT=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",1)
"RTN","RCDPEAA1",55,0)
 S X=$S(SORT="N":"Payer Name",SORT="R":"Reason",SORT="D":"Date",SORT="U":"Unposted",1:"Posted")
"RTN","RCDPEAA1",56,0)
 S Y=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",2)
"RTN","RCDPEAA1",57,0)
 I SORT="D" S X=X_$S(Y="H":" - Descending",1:" - Ascending")
"RTN","RCDPEAA1",58,0)
 E  S X=X_$S(Y="H":" - Highest to Lowest",Y="L":" - Lowest to Highest",1:"")
"RTN","RCDPEAA1",59,0)
 S VALMHDR(2)="   Sorted By:"_$J("",4)_X
"RTN","RCDPEAA1",60,0)
 S LINE=$J("",10)_$$LJ^XLFSTR("ERA #.Sequence",17)
"RTN","RCDPEAA1",61,0)
 S LINE=LINE_$$LJ^XLFSTR("Claim #",14)
"RTN","RCDPEAA1",62,0)
 S LINE=LINE_$$RJ^XLFSTR("Posted",13)_" "
"RTN","RCDPEAA1",63,0)
 ; S LINE=LINE_$$LJ^XLFSTR("Post Dt",11)
"RTN","RCDPEAA1",64,0)
 S LINE=LINE_$$LJ^XLFSTR("Created Dt",11) ; PRCA*4.5*321
"RTN","RCDPEAA1",65,0)
 S LINE=LINE_$$RJ^XLFSTR("Unposted",13)
"RTN","RCDPEAA1",66,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",67,0)
 S VALMHDR(3)=LINE
"RTN","RCDPEAA1",68,0)
 Q
"RTN","RCDPEAA1",69,0)
 ;
"RTN","RCDPEAA1",70,0)
EXIT ; -- Clean up list
"RTN","RCDPEAA1",71,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",72,0)
 K ^TMP("RCDPE_APAR_PVW",$J)
"RTN","RCDPEAA1",73,0)
 K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",74,0)
 K ^TMP("RCDPE-APAR_EEOB_WL",$J),^TMP("RCDPE-APAR_EEOB_WLDX",$J)
"RTN","RCDPEAA1",75,0)
 K ^TMP($J,"RCDPE_APAR_EEOB_PASS1"),^TMP($J,"RCDPE_APAR_EEOB_PASS2")
"RTN","RCDPEAA1",76,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",77,0)
 K RCAPAR
"RTN","RCDPEAA1",78,0)
 Q
"RTN","RCDPEAA1",79,0)
 ;
"RTN","RCDPEAA1",80,0)
PARAMS(SOURCE) ; Retrieve/Edit/Save View Parameters for APAR EEOB Worklist
"RTN","RCDPEAA1",81,0)
 ; Input:   SOURCE      - "MO" - Called from Menu Option 
"RTN","RCDPEAA1",82,0)
 ;                        "CV" - Called from Change View action
"RTN","RCDPEAA1",83,0)
 ; Output: ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR") - P1^P2^P3 Where:
"RTN","RCDPEAA1",84,0)
 ;                                                      P1- All Payers/Range of Payers
"RTN","RCDPEAA1",85,0)
 ;                                                          ("A": All/"R":Range of Payers)
"RTN","RCDPEAA1",86,0)
 ;                                                      P2- START WITH PAYER (e.g.,'AET')
"RTN","RCDPEAA1",87,0)
 ;                                                          (Range Limited Only)
"RTN","RCDPEAA1",88,0)
 ;                                                      P3- GO TO PAYER (e.g.,'AETZ')
"RTN","RCDPEAA1",89,0)
 ;                                                         (Range Limited Only)
"RTN","RCDPEAA1",90,0)
 ;         ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")-  (M)edical, (P)harmacy, or (B)
"RTN","RCDPEAA1",91,0)
 ;        
"RTN","RCDPEAA1",92,0)
 ;         ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT") - P1^P2 Where
"RTN","RCDPEAA1",93,0)
 ;                                                    P1 - Sort Type
"RTN","RCDPEAA1",94,0)
 ;                                                         "N" - Payer Name
"RTN","RCDPEAA1",95,0)
 ;                                                         "P" - Posted Amount
"RTN","RCDPEAA1",96,0)
 ;                                                         "R" - Auto-Post Reject Reason
"RTN","RCDPEAA1",97,0)
 ;                                                         "U" - Unposted Amount
"RTN","RCDPEAA1",98,0)
 ;                                                    P2 - H - Highest to Lowest Amount
"RTN","RCDPEAA1",99,0)
 ;                                                         L - Lowest to Highest Amount
"RTN","RCDPEAA1",100,0)
 ;                                                         ""- If P1="N" or "P"
"RTN","RCDPEAA1",101,0)
 ; Returns: 1 if user ^ arrowed or timed out, 0 otherwise
"RTN","RCDPEAA1",102,0)
 N RCQUIT,RCXPAR,USEPVW,XX    ;PRCA*4.5*321 added RCQUIT
"RTN","RCDPEAA1",103,0)
 S (RCQUIT,USEPVW)=0          ;PRCA*4.5*321 initialise USEPW
"RTN","RCDPEAA1",104,0)
 ; Retrieve user's saved preferred view (if any)
"RTN","RCDPEAA1",105,0)
 D:SOURCE="MO" GETWLPVW(.RCXPAR)
"RTN","RCDPEAA1",106,0)
 ;
"RTN","RCDPEAA1",107,0)
 ;Only ask user if they want to use their preferred view in the following scenarios:
"RTN","RCDPEAA1",108,0)
 ; a) Source is "MO" and user has a preferred view on file
"RTN","RCDPEAA1",109,0)
 ; b) Source is "CV" (change view action), user has a preferred view but is
"RTN","RCDPEAA1",110,0)
 ;    not using the preferred view criteria at this time.
"RTN","RCDPEAA1",111,0)
 S XX=$$PREFVW(SOURCE)
"RTN","RCDPEAA1",112,0)
 I ((XX=1)&(SOURCE="MO"))!((XX=0)&(SOURCE="CV")) D  ; PRCA*4.5*321 - move Q:USEPVW
"RTN","RCDPEAA1",113,0)
 . ;
"RTN","RCDPEAA1",114,0)
 . ; Ask the user if they want to use the preferred view
"RTN","RCDPEAA1",115,0)
 . S USEPVW=$$ASKUVW^RCDPEWL0()
"RTN","RCDPEAA1",116,0)
 . I USEPVW=-1 S RCQUIT=1 Q
"RTN","RCDPEAA1",117,0)
 . Q:'USEPVW
"RTN","RCDPEAA1",118,0)
 . ;
"RTN","RCDPEAA1",119,0)
 . ; Set the Sort/Filtering Criteria from the preferred view 
"RTN","RCDPEAA1",120,0)
 . M ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)=^TMP("RCDPE_APAR_PVW",$J)
"RTN","RCDPEAA1",121,0)
 ;
"RTN","RCDPEAA1",122,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",123,0)
 Q:USEPVW 0
"RTN","RCDPEAA1",124,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",125,0)
 S RCQUIT=$$PAYR() ; Select Payer(s)
"RTN","RCDPEAA1",126,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",127,0)
 S RCQUIT=$$MORP() ; Select Medical or Pharmacy
"RTN","RCDPEAA1",128,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",129,0)
 S RCQUIT=$$SORT() ; Select Sort
"RTN","RCDPEAA1",130,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",131,0)
 S RCQUIT=$$SAVEPVW() ; Save Preferred View
"RTN","RCDPEAA1",132,0)
 Q:RCQUIT 1
"RTN","RCDPEAA1",133,0)
 Q 0
"RTN","RCDPEAA1",134,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",135,0)
 ;
"RTN","RCDPEAA1",136,0)
GETWLPVW(RCXPAR)  ; Retrieves the preferred view settings for the APAR worklist
"RTN","RCDPEAA1",137,0)
 ; for the user
"RTN","RCDPEAA1",138,0)
 ; PRCA*4.5*317 - Added subroutine
"RTN","RCDPEAA1",139,0)
 ; Input:   None
"RTN","RCDPEAA1",140,0)
 ; Output:  RCXPAR()                        - Array of preferred view sort/filter criteria
"RTN","RCDPEAA1",141,0)
 ;          ^TMP("RCDPE_APAR_EEOB_PARAMS",$)- Global array of preferred view settings
"RTN","RCDPEAA1",142,0)
 N XX
"RTN","RCDPEAA1",143,0)
 K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",144,0)
 D GETLST^XPAR(.RCXPAR,"USR","RCDPE APAR","I")
"RTN","RCDPEAA1",145,0)
 D:$D(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS")) PVWSAVE(.RCXPAR)
"RTN","RCDPEAA1",146,0)
 ;
"RTN","RCDPEAA1",147,0)
 S XX=$G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))
"RTN","RCDPEAA1",148,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=$S(XX'="":$TR(XX,";","^"),1:"A")
"RTN","RCDPEAA1",149,0)
 S XX=$G(RCXPAR("MEDICAL/PHARMACY"))
"RTN","RCDPEAA1",150,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")=$S(XX'="":$TR(XX,";","^"),1:"B")
"RTN","RCDPEAA1",151,0)
 ; PRCA&4.5*321 - add sort to preferened view
"RTN","RCDPEAA1",152,0)
 S XX=$G(RCXPAR("SORT"))
"RTN","RCDPEAA1",153,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")=$S(XX'="":$TR(XX,";","^"),1:"N")
"RTN","RCDPEAA1",154,0)
 Q
"RTN","RCDPEAA1",155,0)
 ;
"RTN","RCDPEAA1",156,0)
PVWSAVE(RCXPAR) ; Save a copy of the preferred view on file
"RTN","RCDPEAA1",157,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEAA1",158,0)
 ; Input: RCXPAR - array of preferred view setting for the user
"RTN","RCDPEAA1",159,0)
 ; Output: ^TMP("RCERA_PVW") - a copy of the preferred settings
"RTN","RCDPEAA1",160,0)
 ;
"RTN","RCDPEAA1",161,0)
 K ^TMP("RCDPE_APAR_PVW",$J)
"RTN","RCDPEAA1",162,0)
 ; only continue if we have answers to all APAR related preferred view prompts
"RTN","RCDPEAA1",163,0)
 Q:'$D(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))
"RTN","RCDPEAA1",164,0)
 Q:'$D(RCXPAR("MEDICAL/PHARMACY"))
"RTN","RCDPEAA1",165,0)
 Q:'$D(RCXPAR("SORT"))  ; PRCA*4.5*321
"RTN","RCDPEAA1",166,0)
 ;
"RTN","RCDPEAA1",167,0)
 S ^TMP("RCDPE_APAR_PVW",$J,"RCPAYR")=$TR(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"),";","^")
"RTN","RCDPEAA1",168,0)
 S ^TMP("RCDPE_APAR_PVW",$J,"RCMEDRX")=$TR(RCXPAR("MEDICAL/PHARMACY"),";","^")
"RTN","RCDPEAA1",169,0)
 S ^TMP("RCDPE_APAR_PVW",$J,"SORT")=$TR(RCXPAR("SORT"),";","^") ; PRCA*4.5*321
"RTN","RCDPEAA1",170,0)
 Q
"RTN","RCDPEAA1",171,0)
 ;
"RTN","RCDPEAA1",172,0)
PREFVW(SOURCE,RCXPAR) ; Checks to see if the user has a preferred view
"RTN","RCDPEAA1",173,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEAA1",174,0)
 ; When source is 'CV', checks to see if the preferred view is being used
"RTN","RCDPEAA1",175,0)
 ; Input:   SOURCE                         - 'MO' - When called from the Lockbox menu
"RTN","RCDPEAA1",176,0)
 ;                                                  option
"RTN","RCDPEAA1",177,0)
 ;                                           'CV' - When called from the Change View
"RTN","RCDPEAA1",178,0)
 ;                                                  action
"RTN","RCDPEAA1",179,0)
 ;          RCXPAR                        - Array of preferred view values
"RTN","RCDPEAA1",180,0)
 ;          ^TMP("RCDPE_APAR_EEOB_PARAMS")- Global array of currently in use defaults
"RTN","RCDPEAA1",181,0)
 ;          ^TMP("RCDPE_APAR_PVW",$J)     - Global array of preferred view settings
"RTN","RCDPEAA1",182,0)
 ;
"RTN","RCDPEAA1",183,0)
 ; Returns: 1 - User has preferred view if SOURCE is 'MO' or is using
"RTN","RCDPEAA1",184,0)
 ;              their preferred view if SOURCE is 'CV'
"RTN","RCDPEAA1",185,0)
 ;          0 - User is not using their preferred view
"RTN","RCDPEAA1",186,0)
 ;         -1 - User does not have a preferred view
"RTN","RCDPEAA1",187,0)
 ;
"RTN","RCDPEAA1",188,0)
 I SOURCE="MO" Q $S($D(^TMP("RCDPE_APAR_PVW",$J)):1,1:-1)
"RTN","RCDPEAA1",189,0)
 Q:'$D(^TMP("RCDPE_APAR_PVW",$J)) -1      ; No stored preferred view
"RTN","RCDPEAA1",190,0)
 Q:$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"))'=$G(^TMP("RCDPE_APAR_PVW",$J,"RCPAYR")) 0
"RTN","RCDPEAA1",191,0)
 Q:$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))'=$G(^TMP("RCDPE_APAR_PVW",$J,"RCMEDRX")) 0
"RTN","RCDPEAA1",192,0)
 Q:$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT"))'=$G(^TMP("RCDPE_APAR_PVW",$J,"SORT")) 0 ; PRCA*4.5*321
"RTN","RCDPEAA1",193,0)
 Q 1
"RTN","RCDPEAA1",194,0)
 ;
"RTN","RCDPEAA1",195,0)
PAYR() ; Payer Selection
"RTN","RCDPEAA1",196,0)
 ; Input:   ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR") - Current payer selection setting
"RTN","RCDPEAA1",197,0)
 ; Output:  ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR") - Updated  payer selection setting
"RTN","RCDPEAA1",198,0)
 ;          RCQUIT=1 if user ^ or timed out
"RTN","RCDPEAA1",199,0)
 ; Returns: 1 if user ^ arrowed or time out
"RTN","RCDPEAA1",200,0)
 N DIR,DIRUT,DIROUT,DUOUT,DTOUT,RCPAYR,RCPAYRDF,RCXPAR,RCDRLIM,RCERROR,RCAUTOPDF
"RTN","RCDPEAA1",201,0)
 N RCTYPEDF,RCQ,X,XX,Y
"RTN","RCDPEAA1",202,0)
 S RCPAYRDF=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEAA1",203,0)
 S RCQUIT=0
"RTN","RCDPEAA1",204,0)
 K DIR
"RTN","RCDPEAA1",205,0)
 S DIR(0)="SA^A:ALL;R:RANGE"
"RTN","RCDPEAA1",206,0)
 S DIR("A")="(A)LL payers, (R)ANGE of payer names: "
"RTN","RCDPEAA1",207,0)
 S DIR("B")="ALL"
"RTN","RCDPEAA1",208,0)
 S DIR("?",1)="Entering ALL will select all payers."
"RTN","RCDPEAA1",209,0)
 S DIR("?")="If RANGE is entered, you will be prompted for a payer range."
"RTN","RCDPEAA1",210,0)
 S:$P(RCPAYRDF,"^")'="" DIR("B")=$P(RCPAYRDF,"^")  ;Stored preferred view, use as default
"RTN","RCDPEAA1",211,0)
 W !
"RTN","RCDPEAA1",212,0)
 D ^DIR
"RTN","RCDPEAA1",213,0)
 I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q 1
"RTN","RCDPEAA1",214,0)
 S RCPAYR=Y
"RTN","RCDPEAA1",215,0)
 I RCPAYR="A" S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=Y Q 0
"RTN","RCDPEAA1",216,0)
 I RCPAYR="R" D  Q:RCQUIT RCQUIT
"RTN","RCDPEAA1",217,0)
 . W !,"Names you select here will be the payer names from the ERA, NOT the INS File"
"RTN","RCDPEAA1",218,0)
 . K DIR
"RTN","RCDPEAA1",219,0)
 . S DIR("?")="Enter a name between 1 and 30 characters in UPPERCASE"
"RTN","RCDPEAA1",220,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="Start with payer name: "
"RTN","RCDPEAA1",221,0)
 . S:$P(RCPAYRDF,"^",2)'="" DIR("B")=$P(RCPAYRDF,"^",2)  ;Stored preferred view, use as default
"RTN","RCDPEAA1",222,0)
 . W !
"RTN","RCDPEAA1",223,0)
 . D ^DIR
"RTN","RCDPEAA1",224,0)
 . I $D(DTOUT)!$D(DUOUT) D  Q
"RTN","RCDPEAA1",225,0)
 . . S RCQUIT=1 Q
"RTN","RCDPEAA1",226,0)
 . . K ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")
"RTN","RCDPEAA1",227,0)
 . S RCPAYR("FROM")=Y
"RTN","RCDPEAA1",228,0)
 . K DIR
"RTN","RCDPEAA1",229,0)
 . S DIR("?")="Enter a name between 1 and 30 characters in UPPERCASE"
"RTN","RCDPEAA1",230,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="Go to payer name: "
"RTN","RCDPEAA1",231,0)
 . S DIR("B")=$E(RCPAYR("FROM"),1,27)_"ZZZ"
"RTN","RCDPEAA1",232,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEAA1",233,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEAA1",234,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")=RCPAYR_"^"_RCPAYR("FROM")_"^"_Y
"RTN","RCDPEAA1",235,0)
 Q 0
"RTN","RCDPEAA1",236,0)
 ;
"RTN","RCDPEAA1",237,0)
MORP() ; Ask for Medical or Pharmacy (Or Both)
"RTN","RCDPEAA1",238,0)
 ; Input: None
"RTN","RCDPEAA1",239,0)
 ; Returns: 1 if user ^ arrowed or timed out, 0 otherwise
"RTN","RCDPEAA1",240,0)
 N DEF
"RTN","RCDPEAA1",241,0)
 S DEF=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",242,0)
 S DEF=$S(DEF="P":"PHARMACY",DEF="M":"MEDICAL",1:"BOTH")
"RTN","RCDPEAA1",243,0)
 S RCQ=$$RTYPE^RCDPESP2(DEF)
"RTN","RCDPEAA1",244,0)
 I RCQ=-1 Q 1
"RTN","RCDPEAA1",245,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")=RCQ
"RTN","RCDPEAA1",246,0)
 Q 0
"RTN","RCDPEAA1",247,0)
 ;
"RTN","RCDPEAA1",248,0)
SORT() ; Ask for Sort - Payer, Dollar, Date, Trace Number
"RTN","RCDPEAA1",249,0)
 ; Input: None
"RTN","RCDPEAA1",250,0)
 ; Returns: 1 if user ^ arrowed or timed out, 0 otherwise
"RTN","RCDPEAA1",251,0)
 N DEF,DIR,DIRUT,DTOUT,DUOUT,P1,X,XX,Y
"RTN","RCDPEAA1",252,0)
 S DEF=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",1)
"RTN","RCDPEAA1",253,0)
 S DEF=$S(DEF="D":"DATE",DEF="N":"PAYER NAME",DEF="P":"POSTED",DEF="R":"REASON",DEF="U":"UNPOSTED",1:"")
"RTN","RCDPEAA1",254,0)
 S DIR(0)="SA^D:DATE;N:PAYER NAME;P:POSTED;R:REASON;U:UNPOSTED"
"RTN","RCDPEAA1",255,0)
 S DIR("A")="Sort By (D)ATE, PAYER (N)AME, (R)EASON, (P)OSTED, (U)NPOSTED: "
"RTN","RCDPEAA1",256,0)
 S DIR("B")=$S(DEF'="":DEF,1:"DATE")
"RTN","RCDPEAA1",257,0)
 S DIR("?",1)="Enter 'DATE' to sort by date created."
"RTN","RCDPEAA1",258,0)
 S DIR("?",2)="Enter 'PAYER NAME' to sort by payer name."
"RTN","RCDPEAA1",259,0)
 S DIR("?",3)="Enter 'REASON' to sort by auto-post reject reason."
"RTN","RCDPEAA1",260,0)
 S DIR("?",4)="Enter 'POSTED' to sort by the posted amount."
"RTN","RCDPEAA1",261,0)
 S DIR("?")="Enter 'UNPOSTED' to sort by the unposted amount."
"RTN","RCDPEAA1",262,0)
 W !
"RTN","RCDPEAA1",263,0)
 D ^DIR
"RTN","RCDPEAA1",264,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEAA1",265,0)
 I Y="N"!(Y="R") D  Q 0
"RTN","RCDPEAA1",266,0)
 . S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")=Y
"RTN","RCDPEAA1",267,0)
 ;
"RTN","RCDPEAA1",268,0)
 S P1=Y,XX=""
"RTN","RCDPEAA1",269,0)
 I P1="P"!(P1="U") S XX=$$HTOL() I XX=-1 Q 1
"RTN","RCDPEAA1",270,0)
 I P1="D" S XX=$$DATEORD() I XX=-1 Q 1
"RTN","RCDPEAA1",271,0)
 S ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")=P1_"^"_XX
"RTN","RCDPEAA1",272,0)
 Q 0
"RTN","RCDPEAA1",273,0)
 ;
"RTN","RCDPEAA1",274,0)
HTOL() ; Ask for how dollar amounts should be sorted - either highest to
"RTN","RCDPEAA1",275,0)
 ; lowest amount or lowest to highest amount
"RTN","RCDPEAA1",276,0)
 ; Input: None
"RTN","RCDPEAA1",277,0)
 ; Returns: -1 - if user ^ arrowed or timed out
"RTN","RCDPEAA1",278,0)
 ; H - Highest to Lowest
"RTN","RCDPEAA1",279,0)
 ; L - Lowest to Highest
"RTN","RCDPEAA1",280,0)
 N DEF,DIR,DIRUT,DTOUT,DUOUT,P1,X,Y
"RTN","RCDPEAA1",281,0)
 S DEF=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",2)
"RTN","RCDPEAA1",282,0)
 S DEF=$S(DEF="H":"HIGHEST TO LOWEST",DEF="L":"LOWEST TO HIGHEST",1:"")
"RTN","RCDPEAA1",283,0)
 S DIR(0)="SA^H:HIGHEST TO LOWEST;L:LOWEST TO HIGHEST"
"RTN","RCDPEAA1",284,0)
 S DIR("A")="Sort By (H)IGHEST TO LOWEST or (L)OWEST TO HIGHEST: "
"RTN","RCDPEAA1",285,0)
 S DIR("B")=$S(DEF'="":DEF,1:"HIGHEST TO LOWEST")
"RTN","RCDPEAA1",286,0)
 S DIR("?",1)="Enter 'HIGHEST TO LOWEST' to sort amounts in decreasing order."
"RTN","RCDPEAA1",287,0)
 S DIR("?")="Enter 'LOWEST TO HIGHEST' to sort amounts in increasing order."
"RTN","RCDPEAA1",288,0)
 W !
"RTN","RCDPEAA1",289,0)
 D ^DIR
"RTN","RCDPEAA1",290,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPEAA1",291,0)
 Q Y
"RTN","RCDPEAA1",292,0)
DATEORD() ; Ask how creation date should be sorted - ascending or descending
"RTN","RCDPEAA1",293,0)
 ; Input: None
"RTN","RCDPEAA1",294,0)
 ; Returns: -1 - if user ^ arrowed or timed out
"RTN","RCDPEAA1",295,0)
 ; H - Descending (Highest to lowest)
"RTN","RCDPEAA1",296,0)
 ; L - Ascending (Lowest to Highest)
"RTN","RCDPEAA1",297,0)
 N DEF,DIR,DIRUT,DTOUT,DUOUT,P1,X,Y
"RTN","RCDPEAA1",298,0)
 S DEF=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")),"^",2)
"RTN","RCDPEAA1",299,0)
 S DEF=$S(DEF="H":"DESCENDING",DEF="L":"ASCENDING",1:"")
"RTN","RCDPEAA1",300,0)
 S DIR(0)="SA^A:ASCENDING;D:DESCENDING"
"RTN","RCDPEAA1",301,0)
 S DIR("A")="Sort in (A)SCENDING or (D)ESCENDING order: "
"RTN","RCDPEAA1",302,0)
 S DIR("B")=$S(DEF'="":DEF,1:"ASCENDING")
"RTN","RCDPEAA1",303,0)
 S DIR("?",1)="Enter 'ASCENDING' to see oldest EEOBs first."
"RTN","RCDPEAA1",304,0)
 S DIR("?")="Enter 'DESCENDING' to see newest EEOBs first."
"RTN","RCDPEAA1",305,0)
 W !
"RTN","RCDPEAA1",306,0)
 D ^DIR
"RTN","RCDPEAA1",307,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPEAA1",308,0)
 S Y=$S(Y="D":"H",1:"L")
"RTN","RCDPEAA1",309,0)
 Q Y
"RTN","RCDPEAA1",310,0)
SAVEPVW() ; Option to save as User Preferred View
"RTN","RCDPEAA1",311,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEAA1",312,0)
 ; Input: ^TMP("RCDPE_APAR_EEOB_PARAMS",$J) - Global array of current worklist settings
"RTN","RCDPEAA1",313,0)
 ; Output Current worklist settings set as preferred view (potentially)
"RTN","RCDPEAA1",314,0)
 ;        ^TMP("RCDPE_APAR_PVW",$J)         - Global array of preferred view settings
"RTN","RCDPEAA1",315,0)
 ; Returns: 1 - User ^ arrowed or timed out, 0 otherwise
"RTN","RCDPEAA1",316,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,X,XX,Y
"RTN","RCDPEAA1",317,0)
 K DIR
"RTN","RCDPEAA1",318,0)
 W !
"RTN","RCDPEAA1",319,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEAA1",320,0)
 S DIR("A")="Do you want to save this as your preferred view (Y/N)? "
"RTN","RCDPEAA1",321,0)
 D ^DIR
"RTN","RCDPEAA1",322,0)
 ; PRCA*4.5*321 ; Start modified code block
"RTN","RCDPEAA1",323,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEAA1",324,0)
 I Y=1 D
"RTN","RCDPEAA1",325,0)
 . S XX=^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")
"RTN","RCDPEAA1",326,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","ALL_PAYERS/RANGE_OF_PAYERS",$TR(XX,"^",";"),.RCERROR)
"RTN","RCDPEAA1",327,0)
 . S XX=^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX")
"RTN","RCDPEAA1",328,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","MEDICAL/PHARMACY",XX,.RCERROR)
"RTN","RCDPEAA1",329,0)
 . S XX=^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")
"RTN","RCDPEAA1",330,0)
 . D EN^XPAR(DUZ_";VA(200,","RCDPE APAR","SORT",$TR(XX,"^",";"),.RCERROR)
"RTN","RCDPEAA1",331,0)
 . ;
"RTN","RCDPEAA1",332,0)
 . ;Capture new preferred settings for comparison
"RTN","RCDPEAA1",333,0)
 . K ^TMP("RCDPE_APAR_PVW",$J)
"RTN","RCDPEAA1",334,0)
 . M ^TMP("RCDPE_APAR_PVW",$J)=^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",335,0)
 Q 0
"RTN","RCDPEAA1",336,0)
 ; PRCA*4.5*321 ; End modified code block
"RTN","RCDPEAA1",337,0)
 ;
"RTN","RCDPEAA1",338,0)
FILTER(RCDA) ; Returns 1 if record in entry 344.4 passes
"RTN","RCDPEAA1",339,0)
 ; the edits for the APAR worklist selection of EEOBs
"RTN","RCDPEAA1",340,0)
 ; Parameters found in ^TMP("RCDPE_APAR_EEOB_PARAMS",$J)
"RTN","RCDPEAA1",341,0)
 ; 
"RTN","RCDPEAA1",342,0)
 ; Input: RCDA - Internal IEN OF 344.4
"RTN","RCDPEAA1",343,0)
 ; Returns: 1 if the ERA Record passes filters, 0 otherwise
"RTN","RCDPEAA1",344,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEAA1",345,0)
 N OK,RCECME,RCERATYP,RCIEN,RCPAYR,RCPAYFR,RCPAYTO,XX
"RTN","RCDPEAA1",346,0)
 S OK=1
"RTN","RCDPEAA1",347,0)
 ;
"RTN","RCDPEAA1",348,0)
 S RCPAYR=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,1)
"RTN","RCDPEAA1",349,0)
 S RCPAYFR=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,2)
"RTN","RCDPEAA1",350,0)
 S RCPAYTO=$P($G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCPAYR")),U,3)
"RTN","RCDPEAA1",351,0)
 S RCERATYP=$G(^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"RCMEDRX"))
"RTN","RCDPEAA1",352,0)
 ; Payer name filter
"RTN","RCDPEAA1",353,0)
 I RCPAYR'="A" D  Q:'OK OK
"RTN","RCDPEAA1",354,0)
 . S XX=$$GET1^DIQ(344.4,RCDA,.06,"I") ; Payer Name
"RTN","RCDPEAA1",355,0)
 . S XX=$$UP^XLFSTR(XX)
"RTN","RCDPEAA1",356,0)
 . ;
"RTN","RCDPEAA1",357,0)
 . ; Make sure the Payer is in the selected Payer range
"RTN","RCDPEAA1",358,0)
 . I $S(XX=RCPAYFR:1,XX=RCPAYTO:1,XX]RCPAYFR:RCPAYTO]XX,1:0) Q
"RTN","RCDPEAA1",359,0)
 . S OK=0
"RTN","RCDPEAA1",360,0)
 ;
"RTN","RCDPEAA1",361,0)
 ; ERA Type (Medical/Pharmacy) filter
"RTN","RCDPEAA1",362,0)
 I RCERATYP'="B" D
"RTN","RCDPEAA1",363,0)
 . ;
"RTN","RCDPEAA1",364,0)
 . ; Check the first EOB in the ERA to see if it is a Pharmacy or Medical ERA
"RTN","RCDPEAA1",365,0)
 . S RCIEN=$O(^RCY(344.4,RCDA,1,0))
"RTN","RCDPEAA1",366,0)
 . I RCIEN="" S OK=0 Q
"RTN","RCDPEAA1",367,0)
 . S RCECME=$$GET1^DIQ(344.41,RCIEN_","_RCDA_",",.24,"I") ; ECME #
"RTN","RCDPEAA1",368,0)
 . ;
"RTN","RCDPEAA1",369,0)
 . ; If requested filter is Pharmacy and there is an ECME #, display
"RTN","RCDPEAA1",370,0)
 . I RCECME="",RCERATYP="M" Q
"RTN","RCDPEAA1",371,0)
 . ;
"RTN","RCDPEAA1",372,0)
 . ; If requested filter is Medical and there is no ECME #, display
"RTN","RCDPEAA1",373,0)
 . I RCECME'="",RCERATYP="P" Q
"RTN","RCDPEAA1",374,0)
 . ;
"RTN","RCDPEAA1",375,0)
 . ; Otherwise, not valid on the filter, don't display
"RTN","RCDPEAA1",376,0)
 . S OK=0
"RTN","RCDPEAA1",377,0)
 Q OK
"RTN","RCDPEAA1",378,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEAA1",379,0)
 ;
"RTN","RCDPEAA1",380,0)
ENTEREOB ; EP Protocol action - RCDPE APAR SELECT EEOB
"RTN","RCDPEAA1",381,0)
 ; Enter the APAR EEOB SCRATCHPAD
"RTN","RCDPEAA1",382,0)
 N RCDA,RCDA1,RCIENS,X,XQORM
"RTN","RCDPEAA1",383,0)
 S VALMBCK="R"
"RTN","RCDPEAA1",384,0)
 S RCIENS=$$SEL()
"RTN","RCDPEAA1",385,0)
 I 'RCIENS D INIT Q
"RTN","RCDPEAA1",386,0)
 D EN^VALM("RCDPE APAR SELECTED EEOB")
"RTN","RCDPEAA1",387,0)
 D INIT
"RTN","RCDPEAA1",388,0)
 Q
"RTN","RCDPEAA1",389,0)
 ;
"RTN","RCDPEAA1",390,0)
SEL() ; Select an item from the APAR list of EEOBs
"RTN","RCDPEAA1",391,0)
 ; Input: None
"RTN","RCDPEAA1",392,0)
 ; Returns: RCIENS - Internal IENs A1^A2^A3 Where:
"RTN","RCDPEAA1",393,0)
 ; A1 - IEN for in file 344.49
"RTN","RCDPEAA1",394,0)
 ; A2 - IEN for subfile 344.491
"RTN","RCDPEAA1",395,0)
 ; A3 - Selectable line item from listman screen
"RTN","RCDPEAA1",396,0)
 N RCDA,RCITEMS,RCSEQ,VALMY
"RTN","RCDPEAA1",397,0)
 D FULL^VALM1
"RTN","RCDPEAA1",398,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEAA1",399,0)
 S (RCSEQ,RCDA,RCITEMS)=0
"RTN","RCDPEAA1",400,0)
 F  D  Q:'RCSEQ
"RTN","RCDPEAA1",401,0)
 . S RCSEQ=$O(VALMY(RCSEQ))
"RTN","RCDPEAA1",402,0)
 . Q:'RCSEQ
"RTN","RCDPEAA1",403,0)
 . S RCITEMS=$P($G(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ)),U,2,3)_U_RCSEQ
"RTN","RCDPEAA1",404,0)
 Q RCITEMS
"RTN","RCDPEAA1",405,0)
 ;
"RTN","RCDPEAA1",406,0)
CV ;
"RTN","RCDPEAA1",407,0)
 ; Change View action for APAR pick list
"RTN","RCDPEAA1",408,0)
 D FULL^VALM1 D PARAMS("CV")
"RTN","RCDPEAA1",409,0)
 D HDR,INIT S VALMBCK="R",VALMBG=1
"RTN","RCDPEAA1",410,0)
 Q
"RTN","RCDPEAA2")
0^9^B122312525
"RTN","RCDPEAA2",1,0)
RCDPEAA2 ;ALB/KML - APAR Screen - SELECTED EOB ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA2",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEAA2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA2",4,0)
 Q
"RTN","RCDPEAA2",5,0)
 ;
"RTN","RCDPEAA2",6,0)
INIT(RCIENS) ; Entry point for List template to build the display of the EEOB on APAR
"RTN","RCDPEAA2",7,0)
 ;  
"RTN","RCDPEAA2",8,0)
 ;    Input - RCIENS = ien of entry in file 344.49^ien of 344.491^selectable line item from listman screen
"RTN","RCDPEAA2",9,0)
 ;
"RTN","RCDPEAA2",10,0)
 N FDTTM
"RTN","RCDPEAA2",11,0)
 D CLEAN^VALM10
"RTN","RCDPEAA2",12,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP("RCS",$J)
"RTN","RCDPEAA2",13,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEAA2",14,0)
 D BLD(RCIENS)
"RTN","RCDPEAA2",15,0)
 Q
"RTN","RCDPEAA2",16,0)
 ;
"RTN","RCDPEAA2",17,0)
 ;
"RTN","RCDPEAA2",18,0)
BLD(RCIENS) ; Display selected EEOB  on APAR screen
"RTN","RCDPEAA2",19,0)
 N RCZ0,RCECME,REASON,V1,RCLI1,TLINE,RCSCR,Z,ZZ,Z0,ZZ1,RC0,RCTL,RCTS,RCCL,RCCL1
"RTN","RCDPEAA2",20,0)
 S RCSCR=$P(RCIENS,U),Z=$P(^RCY(344.49,RCSCR,1,$P(RCIENS,U,2),0),U),RCPROG="RCDPEAA2"
"RTN","RCDPEAA2",21,0)
 I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEAA2",22,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEAA2",23,0)
 .. S ^TMP("RCS",$J,ZZ,ZZ1)=""
"RTN","RCDPEAA2",24,0)
 . S ^TMP("RCS",$J,ZZ)=""
"RTN","RCDPEAA2",25,0)
 S (RCTS,ZZ)=0
"RTN","RCDPEAA2",26,0)
 F  S ZZ=$O(^TMP("RCS",$J,ZZ)) Q:'ZZ  D
"RTN","RCDPEAA2",27,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0))
"RTN","RCDPEAA2",28,0)
 . S RCECME=$P($G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),4)),U,2)  ; ECME # (344.41,.24)
"RTN","RCDPEAA2",29,0)
 . S REASON=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",5)  ; AUTOPOST REJECTION REASON (344.41,5)
"RTN","RCDPEAA2",30,0)
 . S TLINE=$$TOPLINE(RCZ0)
"RTN","RCDPEAA2",31,0)
 . D SET(TLINE,$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",32,0)
 . ; PRCA*4.5*304 - Add claim comment to screen if it exists for this ERA EEOB detail line
"RTN","RCDPEAA2",33,0)
 . S:$P(RCZ0,U,9)'="" RCCL=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",4)
"RTN","RCDPEAA2",34,0)
 . D:$G(RCCL)'=""  ; If we have a ERA Detail line comment, display it
"RTN","RCDPEAA2",35,0)
 . . D SLINE(RCCL,"RCCL1",58,76)
"RTN","RCDPEAA2",36,0)
 . . S TLINE=$J("",4)_"Claim Comment: "_RCCL1(1)
"RTN","RCDPEAA2",37,0)
 . . D SET(TLINE,$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",38,0)
 . . ; If we have a second line for the comment then put it on the screen
"RTN","RCDPEAA2",39,0)
 . . I RCCL1>1 D SET($J("",4)_RCCL1(2),$P(RCZ0,U),$P(RCZ0,U),ZZ) I RCCL1=3 D SET($J("",4)_RCCL1(3),$P(RCZ0,U),$P(RCZ0,U),ZZ)
"RTN","RCDPEAA2",40,0)
 . ; **End of *304 modifications**
"RTN","RCDPEAA2",41,0)
 . ; sub-line info (e.g., "n.001")
"RTN","RCDPEAA2",42,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP("RCS",$J,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEAA2",43,0)
 . . S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEAA2",44,0)
 . . S RCT=$P(RCZZ0,U),RCTL=$L(RCT)
"RTN","RCDPEAA2",45,0)
 . . S V1=$S($P(RCZZ0,U,2)'["**ADJ":"",$P($P(RCZZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEAA2",46,0)
 . . S RCLI1=$S(V1="":" Claim #: "_$P(RCZZ0,U,2)_" Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),ZZ1),1:"??"),1:V1)
"RTN","RCDPEAA2",47,0)
 . . D SET($J("",4)_$P("   ^(V)",U,$P(RCZZ0,U,13)+1)_RCT_RCLI1,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",48,0)
 . . I $P(RCZZ0,U,7) D CLINES(RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",49,0)
 . . ;
"RTN","RCDPEAA2",50,0)
 . . D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCT,RCT,ZZ1)
"RTN","RCDPEAA2",51,0)
 . . ; display pharmacy EEOB data  
"RTN","RCDPEAA2",52,0)
 . . I RCECME]"" D RXLINES(RCZZ0,RCECME,RCT,ZZ1)
"RTN","RCDPEAA2",53,0)
 . . ; PRCA*4.5*321 BEGIN
"RTN","RCDPEAA2",54,0)
 . . I $P(RCZZ0,U,10)'="" D
"RTN","RCDPEAA2",55,0)
 . . . D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",56,0)
 . . . D SET($J("",9)_"Added By User: "_$$GET1^DIQ(344.491,ZZ1_","_RCSCR_",",2.03),RCTS,RCT,ZZ1)
"RTN","RCDPEAA2",57,0)
 . . . D SET($J("",9)_"Date/Time Added: "_$$GET1^DIQ(344.491,ZZ1_","_RCSCR_",",2.04),RCTS,RCT,ZZ1)
"RTN","RCDPEAA2",58,0)
 . . ; PRCA*4.5*321 END
"RTN","RCDPEAA2",59,0)
 . . I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D ADJLINES(RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",60,0)
 . . I $G(^TMP($J,"RC_REVIEW")) D REVLINES(RCSCR,RCZZ0,RCT,ZZ1)
"RTN","RCDPEAA2",61,0)
 . . D SET($J("",7)_"APAR Reason: "_REASON,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",62,0)
 . . S A="",$P(A,".",79)="" D SET(A,RCT,RCT,ZZ1)
"RTN","RCDPEAA2",63,0)
 I VALMCNT=0 D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEAA2",64,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEAA2",65,0)
 Q
"RTN","RCDPEAA2",66,0)
 ;
"RTN","RCDPEAA2",67,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set ListManager arrays
"RTN","RCDPEAA2",68,0)
 ; X = the data to set into the global
"RTN","RCDPEAA2",69,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEAA2",70,0)
 ; RCSEQ1 = = the sub line #
"RTN","RCDPEAA2",71,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEAA2",72,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",73,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEAA2",74,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEAA2",75,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEAA2",76,0)
 Q
"RTN","RCDPEAA2",77,0)
 ;
"RTN","RCDPEAA2",78,0)
TOPLINE(RCZ0) ; Function returns the top line of the EEOB display
"RTN","RCDPEAA2",79,0)
 ; RCZ0 = the 0-node of the whole number entry line for the EEOB
"RTN","RCDPEAA2",80,0)
 N A
"RTN","RCDPEAA2",81,0)
 S A=" "_$S($P(RCZ0,U,13):"(V)",1:"   ")_"EEOB: ERA Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+$P(RCZ0,U,6),"",2)
"RTN","RCDPEAA2",82,0)
 I $G(^TMP($J,"RC_REVIEW")) S A=A_"  Reviewed?: "_$S($P(RCZ0,U,11)="":"NO",1:$$EXTERNAL^DILFD(344.491,.11,,$P(RCZ0,U,11)))
"RTN","RCDPEAA2",83,0)
 Q A
"RTN","RCDPEAA2",84,0)
 ;
"RTN","RCDPEAA2",85,0)
 ;PRCA*4.5*304 - Split long line into printable lengths
"RTN","RCDPEAA2",86,0)
SLINE(ZIN,ZARR,FLN,SLN) ;
"RTN","RCDPEAA2",87,0)
 ; ZIN - Input string; ZARR - Array output of lines ; FLN - First line length ; SLN - Subsequent line lengths
"RTN","RCDPEAA2",88,0)
 ; Assumes ZIN max length is 132 characters and FLN and SLN variables will make ZIN fit in 3 lines.
"RTN","RCDPEAA2",89,0)
 N ZL,ZI,ZM
"RTN","RCDPEAA2",90,0)
 I $L(ZIN)<(FLN+1) S @ZARR@(1)=ZIN,@ZARR=1 Q
"RTN","RCDPEAA2",91,0)
 ; Otherwise we are spanning more than 1 line
"RTN","RCDPEAA2",92,0)
 S ZL="" F ZI=1:1 Q:($L(ZL)+$L($P(ZIN," ",ZI)))>FLN  S ZL=ZL_$S($L(ZL)>0:" ",1:"")_$P(ZIN," ",ZI)
"RTN","RCDPEAA2",93,0)
 S @ZARR@(1)=ZL,ZL=$P(ZIN," ",ZI,9999)
"RTN","RCDPEAA2",94,0)
 I $L(ZL)<(SLN+1) S @ZARR@(2)=ZL,@ZARR=2 Q
"RTN","RCDPEAA2",95,0)
 ; Spilling onto a third line.
"RTN","RCDPEAA2",96,0)
 S ZM="" F ZI=1:1 Q:($L(ZM)+$L($P(ZL," ",ZI)))>SLN  S ZM=ZM_$S($L(ZM)>0:" ",1:"")_$P(ZL," ",ZI)
"RTN","RCDPEAA2",97,0)
 S @ZARR@(2)=ZM,ZM=$P(ZL," ",ZI,9999)
"RTN","RCDPEAA2",98,0)
 S @ZARR@(3)=ZM,@ZARR=3
"RTN","RCDPEAA2",99,0)
 Q
"RTN","RCDPEAA2",100,0)
 ; **END of *304 changes**
"RTN","RCDPEAA2",101,0)
 ;
"RTN","RCDPEAA2",102,0)
CLINES(RCZZ0,RCT,ZZ1) ;  called from BLD ; set up the claim information lines
"RTN","RCDPEAA2",103,0)
 ; 
"RTN","RCDPEAA2",104,0)
 ;  Input -   RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",105,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",106,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",107,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",108,0)
 N A,RCX,Q,QQ
"RTN","RCDPEAA2",109,0)
 S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEAA2",110,0)
 ; Find Rx copay status
"RTN","RCDPEAA2",111,0)
 S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEAA2",112,0)
 ; Find M/T status
"RTN","RCDPEAA2",113,0)
 S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEAA2",114,0)
 S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEAA2",115,0)
 S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEAA2",116,0)
 D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",117,0)
 S ^TMP("RC_BILL",$J,$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEAA2",118,0)
 S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEAA2",119,0)
 S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEAA2",120,0)
 D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",121,0)
 Q
"RTN","RCDPEAA2",122,0)
 ;
"RTN","RCDPEAA2",123,0)
REVLINES(RCSCR,RCZZ0,RCT,ZZ1) ;called from BLD; set up the reviewed lines
"RTN","RCDPEAA2",124,0)
 ; 
"RTN","RCDPEAA2",125,0)
 ;    Input - RCSCR = ien of 344.49 (and 344.4)
"RTN","RCDPEAA2",126,0)
 ;            RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",127,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",128,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",129,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",130,0)
 N A,A0,B,B0
"RTN","RCDPEAA2",131,0)
 S A=$J("",10)_"REVIEW STATUS: ("_$S($P(RCZZ0,U,11)="I":"REVIEW IN PROCESS",$P(RCZZ0,U,11)=1:"REVIEWED",1:"NOT REVIEWED")
"RTN","RCDPEAA2",132,0)
 I $P(RCZZ0,U,12) S A=A_"   SET BY: "_$E($P($G(^VA(200,$P(RCZZ0,U,12),0)),U),1,20)
"RTN","RCDPEAA2",133,0)
 D SET(A_")",+$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",134,0)
 S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ1,4,A)) Q:'A  S A0=$G(^(A,0)) D
"RTN","RCDPEAA2",135,0)
 . D SET($J("",12)_$$FMTE^XLFDT($P(A0,U),2)_"  "_$P($G(^VA(200,+$P(A0,U,2),0)),U)_$S($P(A0,U,4):"  LAST EDIT: "_$$FMTE^XLFDT($P(A0,U,4),2),1:""),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",136,0)
 . S B=0 F  S B=$O(^RCY(344.49,RCSCR,1,ZZ1,4,A,1,B)) Q:'B  S B0=$G(^(B,0)) D
"RTN","RCDPEAA2",137,0)
 . . I $L(B0)>64 D SET($J("",15)_$E(B0,1,64),$P(RCZZ0,U),RCT,ZZ1) S B0="  "_$E(B0,65,$L(B0)) ; Split line if > 64 characters in comment line
"RTN","RCDPEAA2",138,0)
 . . D SET($J("",15)_B0,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",139,0)
 Q
"RTN","RCDPEAA2",140,0)
 ;
"RTN","RCDPEAA2",141,0)
ADJLINES(RCZZ0,RCT,ZZ1) ; called from BLD;  set up the adjustment lines
"RTN","RCDPEAA2",142,0)
 ; 
"RTN","RCDPEAA2",143,0)
 ;  Input -   RCZZ0 = zero node data at 344.491
"RTN","RCDPEAA2",144,0)
 ;            RCT   = sub line #
"RTN","RCDPEAA2",145,0)
 ;            ZZ1   = reference to the to the subline in
"RTN","RCDPEAA2",146,0)
 ;                    file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",147,0)
 N RCAZ,RCAZ0,Z3
"RTN","RCDPEAA2",148,0)
 S Z3=""
"RTN","RCDPEAA2",149,0)
 D SET($J("",4+RCTL)_"ADJUSTMENTS:",$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",150,0)
 S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEAA2",151,0)
 . S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEAA2",152,0)
 . I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",153,0)
 . I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",154,0)
 . I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEAA2",155,0)
 . . S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEAA2",156,0)
 . I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",157,0)
 . I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEAA2",158,0)
 . D SET(Z3,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",159,0)
 . I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",160,0)
 Q
"RTN","RCDPEAA2",161,0)
 ;
"RTN","RCDPEAA2",162,0)
 ;
"RTN","RCDPEAA2",163,0)
RXLINES(RCZZ0,RCECME,RCT,ZZ1) ; called from BLD ; set up the Pharmacy lines
"RTN","RCDPEAA2",164,0)
 ;
"RTN","RCDPEAA2",165,0)
 ;  Input -   RCZZ0   = zero node data at 344.491
"RTN","RCDPEAA2",166,0)
 ;            RCECME  = ECME # for Pharmacy claims
"RTN","RCDPEAA2",167,0)
 ;            RCT     = sub line #
"RTN","RCDPEAA2",168,0)
 ;            ZZ1     = reference to the to the subline in
"RTN","RCDPEAA2",169,0)
 ;                      file 344.49 for RCSEQ having a decimal
"RTN","RCDPEAA2",170,0)
 N RXARRAY
"RTN","RCDPEAA2",171,0)
 D GETPHARM^RCDPEWLP($P(RCZZ0,U,7),.RXARRAY)
"RTN","RCDPEAA2",172,0)
 D SET($J("",9)_"ECME #: "_RCECME,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",173,0)
 I '$D(RXARRAY) D SET($J("",9)_" Pharmacy data does not exist for this claim",$P(RCZZ0,U),RCT,ZZ1) Q
"RTN","RCDPEAA2",174,0)
 D SET($J("",9)_"Rx/Fill/Release Status: "_RXARRAY("RX")_"/"_RXARRAY("FILL")_"/"_RXARRAY("RELEASED STATUS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",175,0)
 D SET($J("",9)_"DOS: "_RXARRAY("DOS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEAA2",176,0)
 Q
"RTN","RCDPEAA2",177,0)
 ;
"RTN","RCDPEAA2",178,0)
HDR ; Creates header lines for the selected EEOB display
"RTN","RCDPEAA2",179,0)
 N RC0,RC4,RC5,Z,RCDA,RCSEQ
"RTN","RCDPEAA2",180,0)
 I '$G(RCIENS) S VALMQUIT=1 Q
"RTN","RCDPEAA2",181,0)
 S RCDA=$P(RCIENS,U),RCSEQ=$P(RCIENS,U,3)
"RTN","RCDPEAA2",182,0)
 S RC0=$G(^RCY(344.4,RCDA,0)),RC4=$G(^RCY(344.4,RCDA,4)),RC5=$G(^RCY(344.4,RCDA,5))
"RTN","RCDPEAA2",183,0)
 S VALMHDR(1)=$E("ERA Entry #: "_$P(RC0,U)_$J("",31),1,31)_"Total Amt Pd: "_$J(+$P(RC0,U,5),"",2)
"RTN","RCDPEAA2",184,0)
 I +RCSEQ S VALMHDR(2)=$E("Posted Amt: "_$J($P(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ),U,5),"",2)_$J("",31),1,31)
"RTN","RCDPEAA2",185,0)
 S VALMHDR(2)=$G(VALMHDR(2))_"Un-posted balance: "_$J($P(^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ),U,4),"",2)
"RTN","RCDPEAA2",186,0)
 S VALMHDR(3)="Payer Name/ID: "_$P(RC0,U,6)_"/"_$P(RC0,U,3)
"RTN","RCDPEAA2",187,0)
 S Z=+$O(^RCY(344.31,"AERA",RCDA,0))
"RTN","RCDPEAA2",188,0)
 I Z S VALMHDR(4)="EFT #/TRACE #: "_$P($G(^RCY(344.3,+$G(^RCY(344.31,Z,0)),0)),U)_"/"_$P(RC0,U,2)
"RTN","RCDPEAA2",189,0)
 I 'Z,$P(RC5,U,2)'="" S VALMHDR(4)="PAPER CHECK #: "_$P(RC5,U,2)
"RTN","RCDPEAA2",190,0)
 S VALMHDR(5)="Posted Receipt #(s): "_$$RCPTS(RCDA,RC0)
"RTN","RCDPEAA2",191,0)
 Q
"RTN","RCDPEAA2",192,0)
 ;
"RTN","RCDPEAA2",193,0)
RCPTS(RCDA,RC0) ; pull list of 'other receipt #s
"RTN","RCDPEAA2",194,0)
 ;  input  - RCDA  = ien of entry in 344.4
"RTN","RCDPEAA2",195,0)
 ;           RC0   = data string at zero node of entry in 344.4
"RTN","RCDPEAA2",196,0)
 ;  output - RCPTS = returns list of receipts stored at 344.4,.08 and 344.48 multiple
"RTN","RCDPEAA2",197,0)
 N X,RIEN,RCPTS
"RTN","RCDPEAA2",198,0)
 S X=0
"RTN","RCDPEAA2",199,0)
 S RCPTS=$P($G(^RCY(344,+$P(RC0,U,8),0)),U)
"RTN","RCDPEAA2",200,0)
 I RCPTS="" G RCPTSQ  ; receipt not posted to any of EEOB items
"RTN","RCDPEAA2",201,0)
 S RCPTS=RCPTS_","
"RTN","RCDPEAA2",202,0)
 F  S X=$O(^RCY(344.4,RCDA,8,X)) Q:'X  S RIEN=+^(X,0) S RCPTS=RCPTS_$P($G(^RCY(344,RIEN,0)),U)_","
"RTN","RCDPEAA2",203,0)
 S RCPTS=$$TRIM^XLFSTR(RCPTS,"R",",")  ; remove orphan comma from last receipt number
"RTN","RCDPEAA2",204,0)
RCPTSQ ;
"RTN","RCDPEAA2",205,0)
 Q RCPTS
"RTN","RCDPEAA2",206,0)
 ;
"RTN","RCDPEAA2",207,0)
EXIT ; -- Clean up list
"RTN","RCDPEAA2",208,0)
 K RCFASTXT
"RTN","RCDPEAA2",209,0)
 Q
"RTN","RCDPEAA2",210,0)
 ;
"RTN","RCDPEAA2",211,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEAA2",212,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEAA2",213,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEAA2",214,0)
 ; RC = the ien of file 430
"RTN","RCDPEAA2",215,0)
 N Z,Z0,Q
"RTN","RCDPEAA2",216,0)
 S Z=""
"RTN","RCDPEAA2",217,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEAA2",218,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEAA2",219,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEAA2",220,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEAA2",221,0)
 I $G(RC)'="" D
"RTN","RCDPEAA2",222,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEAA2",223,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEAA2",224,0)
 Q Z
"RTN","RCDPEAA2",225,0)
 ;
"RTN","RCDPEAA2",226,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEAA2",227,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEAA2",228,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEAA2",229,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEAA2",230,0)
 Q A
"RTN","RCDPEAA2",231,0)
 ;
"RTN","RCDPEAA2",232,0)
COPAY(RCIFN)       ; Returns 1 if any not cancelled 1st party bills exist for
"RTN","RCDPEAA2",233,0)
 ; a 3rd party bill or any bills related to this 3rd party bill
"RTN","RCDPEAA2",234,0)
 ; RCIFN = the 3rd party bill #
"RTN","RCDPEAA2",235,0)
 N FIRST,RCTP0,RCTP1,RCTP2
"RTN","RCDPEAA2",236,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEAA2",237,0)
 D RELBILL^IBRFN(RCIFN) ; DBIA 3124
"RTN","RCDPEAA2",238,0)
 S RCTP0=0 F  S RCTP0=$O(^TMP("IBRBF",$J,RCIFN,RCTP0)) Q:RCTP0=""  S RCTP1=$G(^(RCTP0)) D
"RTN","RCDPEAA2",239,0)
 . I $P(RCTP1,U,3) K ^TMP("IBRBF",$J,RCIFN,RCTP0) Q  ; IB cancelled
"RTN","RCDPEAA2",240,0)
 . S RCTP2=$O(^PRCA(430,"B",+$P(RCTP1,U,4),0)) I $P($G(^PRCA(430,+RCTP2,0)),U,8)=39 K ^TMP("IBRBF",$J,RCIFN,RCTP0) ; AR cancelled
"RTN","RCDPEAA2",241,0)
 S FIRST=$S($O(^TMP("IBRBF",$J,RCIFN,0)):1,1:0)
"RTN","RCDPEAA2",242,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEAA2",243,0)
 Q FIRST
"RTN","RCDPEAA2",244,0)
 ;
"RTN","RCDPEAA2",245,0)
MARK(RCIENS) ;EP - Protocol action - RCDPE MARK FOR AUTO POST
"RTN","RCDPEAA2",246,0)
 ; Mark for Auto-Post - EEOB on APAR gets marked for auto-post if it passes
"RTN","RCDPEAA2",247,0)
 ; autoposting validation
"RTN","RCDPEAA2",248,0)
 ; Input:   RCIENS  - Internal IEN of entry in file 344.49^ien of 
"RTN","RCDPEAA2",249,0)
 ;                    344.491^selectable line item from listman screen
"RTN","RCDPEAA2",250,0)
 ;
"RTN","RCDPEAA2",251,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEAA2",252,0)
 . D FULL^VALM1
"RTN","RCDPEAA2",253,0)
 . S VALMBCK="R"
"RTN","RCDPEAA2",254,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEAA2",255,0)
 . D PAUSE^VALM1
"RTN","RCDPEAA2",256,0)
 ;
"RTN","RCDPEAA2",257,0)
 N RESULT,REASON,LINE,DIR,X,Y,RCERROR,XX,ERADA1,RCDFDA
"RTN","RCDPEAA2",258,0)
 S:$G(RCIENS)="" RCIENS=+$$SEL^RCDPEAA1()
"RTN","RCDPEAA2",259,0)
 Q:'RCIENS
"RTN","RCDPEAA2",260,0)
 I '$$VALID^RCDPEAP($P(RCIENS,U),$P(RCIENS,U,2),.RESULT) D  G MARKQ
"RTN","RCDPEAA2",261,0)
 . S LINE=$O(RESULT(""))
"RTN","RCDPEAA2",262,0)
 . S REASON=$TR(RESULT(LINE),U,"-")
"RTN","RCDPEAA2",263,0)
 . S DIR(0)="EA",DIR("A",1)="EEOB cannot be marked for Auto-Post for the following reason:"
"RTN","RCDPEAA2",264,0)
 . S DIR("A",2)=REASON
"RTN","RCDPEAA2",265,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEAA2",266,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEAA2",267,0)
 ; EEOB passed validation; ready for Autopost
"RTN","RCDPEAA2",268,0)
 L +^RCY(344.4,$P(RCIENS,U),0):5 I '$T D NOLOCK G MARKQ
"RTN","RCDPEAA2",269,0)
 S ERADA1=$P($G(^RCY(344.49,$P(RCIENS,U),1,$P(RCIENS,U,2),0)),U,9)  ; get 344.41 ien (344.491,.09)
"RTN","RCDPEAA2",270,0)
 S RCDFDA(344.41,ERADA1_","_$P(RCIENS,U)_",",6)=1
"RTN","RCDPEAA2",271,0)
 D FILE^DIE("","RCDFDA")
"RTN","RCDPEAA2",272,0)
 S DIR(0)="EA",DIR("A",1)=$P(RCIENS,U)_"."_ERADA1_" has been marked for auto-post and has been removed from the APAR List."
"RTN","RCDPEAA2",273,0)
 S DIR("A")="PRESS RETURN TO CONTINUE "
"RTN","RCDPEAA2",274,0)
 W ! D ^DIR K DIR W !
"RTN","RCDPEAA2",275,0)
 L -^RCY(344.4,$P(RCIENS,U),0)
"RTN","RCDPEAA2",276,0)
MARKQ ;
"RTN","RCDPEAA2",277,0)
 Q
"RTN","RCDPEAA2",278,0)
 ;
"RTN","RCDPEAA2",279,0)
NOLOCK ; entry cannot be locked
"RTN","RCDPEAA2",280,0)
 N DIR
"RTN","RCDPEAA2",281,0)
 S DIR(0)="EA"
"RTN","RCDPEAA2",282,0)
 S DIR("A",1)="Sorry, another user is editing this ERA entry."
"RTN","RCDPEAA2",283,0)
 S DIR("A",2)="Try again later."
"RTN","RCDPEAA2",284,0)
 S DIR("A",3)=""
"RTN","RCDPEAA2",285,0)
 S DIR("A")="PRESS ENTER TO CONTINUE "
"RTN","RCDPEAA2",286,0)
 D ^DIR
"RTN","RCDPEAA2",287,0)
 Q
"RTN","RCDPEAA2",288,0)
 ;
"RTN","RCDPEAA2",289,0)
VIEWERA(RCIENS) ; View/Print ERA - protocol entry from APAR EEOB List screen and APAR - EEOB ITEM - SCRATCHPAD screen
"RTN","RCDPEAA2",290,0)
 N RCSCR
"RTN","RCDPEAA2",291,0)
 I RCPROG="RCDPEAA2" S RCSCR=$P(RCIENS,U)
"RTN","RCDPEAA2",292,0)
 I RCPROG="RCDPEAA1" S RCSCR=+$$SEL^RCDPEAA1()
"RTN","RCDPEAA2",293,0)
 I RCSCR>0 D PRERA^RCDPEWL0
"RTN","RCDPEAA2",294,0)
 Q
"RTN","RCDPEAA4")
0^45^B51754176
"RTN","RCDPEAA4",1,0)
RCDPEAA4 ;AITC/CJE - AUTO POST AWAITING RESOLUTION (APAR) - LIST OF UNPOSTED EEOBS ;Jun 06, 2014@19:11:19
"RTN","RCDPEAA4",2,0)
 ;;4.5;Accounts Receivable;**321**;;Build 48;Build 99
"RTN","RCDPEAA4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAA4",4,0)
 Q
"RTN","RCDPEAA4",5,0)
 ;
"RTN","RCDPEAA4",6,0)
BLD(P1,P2,RCPROG) ;EP from RCDPEAA1
"RTN","RCDPEAA4",7,0)
 ; Build,SORT and output the EEOB list to be displayed on APAR
"RTN","RCDPEAA4",8,0)
 ; screen
"RTN","RCDPEAA4",9,0)
 ; Input: P1 - "RCDPE_APAR_EEOB_PASS1"
"RTN","RCDPEAA4",10,0)
 ; P2 - "RCDPE_APAR_EEOB_PASS2"
"RTN","RCDPEAA4",11,0)
 ; RCPROG - "RCDPE-APAR_EEOB_WL"
"RTN","RCDPEAA4",12,0)
 ; ^TMP($J,P1,ERAIEN) - Global array of all the ERA records that
"RTN","RCDPEAA4",13,0)
 ; passed the filter criteria
"RTN","RCDPEAA4",14,0)
 ; Output: ^TMP($J,P2,A1,A2) - B1^B2^B3^B4^B5^B6^B7^B8^B9
"RTN","RCDPEAA4",15,0)
 ; See ERALINES for detail
"RTN","RCDPEAA4",16,0)
 ; VALMCNT - Total number of lines in the listman body
"RTN","RCDPEAA4",17,0)
 N AMTPST,AUTOPDT,BALANCE,ERAIEN,I34441,I344491,IENS,OSEQ,RCDA1,RCDT,RCPT,RCSEQ,RCT,REASON
"RTN","RCDPEAA4",18,0)
 N TOTPOSTD,XX,YY
"RTN","RCDPEAA4",19,0)
 S (RCT,TOTPOSTD,BALANCE,VALMCNT)=0
"RTN","RCDPEAA4",20,0)
 S ERAIEN=0
"RTN","RCDPEAA4",21,0)
 ;
"RTN","RCDPEAA4",22,0)
 ; 2nd Pass get the data and sort the lines EEOB data lines to be displayed
"RTN","RCDPEAA4",23,0)
 F  D  Q:'ERAIEN
"RTN","RCDPEAA4",24,0)
 . S ERAIEN=$O(^TMP($J,P1,ERAIEN))
"RTN","RCDPEAA4",25,0)
 . Q:'ERAIEN
"RTN","RCDPEAA4",26,0)
 . S RCSEQ=0
"RTN","RCDPEAA4",27,0)
 . F  D  Q:'RCSEQ
"RTN","RCDPEAA4",28,0)
 . . S RCSEQ=$O(^RCY(344.49,ERAIEN,1,"B",RCSEQ))
"RTN","RCDPEAA4",29,0)
 . . Q:'RCSEQ
"RTN","RCDPEAA4",30,0)
 . . Q:RCSEQ#1'=0
"RTN","RCDPEAA4",31,0)
 . . S RCDA1=+$O(^RCY(344.49,ERAIEN,1,"B",RCSEQ,0))
"RTN","RCDPEAA4",32,0)
 . . Q:'RCDA1
"RTN","RCDPEAA4",33,0)
 . . S I344491=RCDA1_","_ERAIEN_","                 ; IENS for subfile 344.491
"RTN","RCDPEAA4",34,0)
 . . S AMTPST=$$GET1^DIQ(344.491,I344491,.03,"I") ; Amount to post on Receipt
"RTN","RCDPEAA4",35,0)
 . . Q:+AMTPST=0  ; Ignore zero value lines
"RTN","RCDPEAA4",36,0)
 . . S OSEQ=$$GET1^DIQ(344.491,I344491,.09,"E") ; Original ERA sequence #s
"RTN","RCDPEAA4",37,0)
 . . S I34441=+OSEQ_","_ERAIEN_","                  ; IENS for subfile 344.41
"RTN","RCDPEAA4",38,0)
 . . S RCPT=$$GET1^DIQ(344.41,I34441,.25,"I") ; Internal Receipt IEN (file 344)
"RTN","RCDPEAA4",39,0)
 . . S REASON=$$GET1^DIQ(344.41,I34441,5) ; External Auto-Post Reject Reason
"RTN","RCDPEAA4",40,0)
 . . ;
"RTN","RCDPEAA4",41,0)
 . . ; If we have a receipt, add the Amount to Post to the total posted amount
"RTN","RCDPEAA4",42,0)
 . . S:RCPT'="" TOTPOSTD=TOTPOSTD+AMTPST
"RTN","RCDPEAA4",43,0)
 . . ;
"RTN","RCDPEAA4",44,0)
 . . ; If we have don't have a receipt, calculate the unposted balance
"RTN","RCDPEAA4",45,0)
 . . I RCPT="" D
"RTN","RCDPEAA4",46,0)
 . . . S XX=$$GET1^DIQ(344.49,ERAIEN_",",.03,"I") ; Total Payment Received
"RTN","RCDPEAA4",47,0)
 . . . S BALANCE=XX-TOTPOSTD
"RTN","RCDPEAA4",48,0)
 . . ;
"RTN","RCDPEAA4",49,0)
 . . ; Only display EEOBs that do not have a receipt and aren't marked for auto-post
"RTN","RCDPEAA4",50,0)
 . . S YY=$$GET1^DIQ(344.41,I34441,6,"I") ; Mark for Auto-Post flag of the ERA detail ln
"RTN","RCDPEAA4",51,0)
 . . I RCPT="",'YY D
"RTN","RCDPEAA4",52,0)
 . . . S RCT=RCT+1
"RTN","RCDPEAA4",53,0)
 . . . S XX=$$GET1^DIQ(344.4,ERAIEN_",",.01,"I") ; ERA Number
"RTN","RCDPEAA4",54,0)
 . . . S $P(RCARRY(RCT),"^",1)=XX
"RTN","RCDPEAA4",55,0)
 . . . S $P(RCARRY(RCT),"^",2)=+OSEQ                ; Original ERA Detail Sequence Numbers
"RTN","RCDPEAA4",56,0)
 . . . S XX=$$GET1^DIQ(344.491,I344491,.02,"E")     ; Claim Number
"RTN","RCDPEAA4",57,0)
 . . . S $P(RCARRY(RCT),"^",3)=XX
"RTN","RCDPEAA4",58,0)
 . . . S $P(RCARRY(RCT),"^",4)=RCDA1                ; Internal IEN for subfile 344.491
"RTN","RCDPEAA4",59,0)
 . . . S $P(RCARRY(RCT),"^",5)=REASON               ; Reason on APAR
"RTN","RCDPEAA4",60,0)
 . I $D(RCARRY) D
"RTN","RCDPEAA4",61,0)
 . . S RCDT=$$GET1^DIQ(344.4,ERAIEN_",",.07,"I") ; ERA File Date/Time for sort
"RTN","RCDPEAA4",62,0)
 . . S AUTOPDT=$$GET1^DIQ(344.4,ERAIEN_",",4.01,"I") ; Internal Auto-Post Date
"RTN","RCDPEAA4",63,0)
 . . S XX=$$GET1^DIQ(344.4,ERAIEN_",",.03,"I") ; Payer ID
"RTN","RCDPEAA4",64,0)
 . . S YY=$$GET1^DIQ(344.4,ERAIEN_",",.06,"I") ; Payer Name
"RTN","RCDPEAA4",65,0)
 . . D ERALINES(ERAIEN,.RCARRY,BALANCE,TOTPOSTD,AUTOPDT,RCDT,XX,YY,P2)
"RTN","RCDPEAA4",66,0)
 . . K RCARRY
"RTN","RCDPEAA4",67,0)
 . S (BALANCE,TOTPOSTD)=0 ; Reset posted and unposted balances
"RTN","RCDPEAA4",68,0)
 ;
"RTN","RCDPEAA4",69,0)
 ; Final Pass - build the display lines and load the listman template
"RTN","RCDPEAA4",70,0)
 D BOUT(P2,.VALMCNT)
"RTN","RCDPEAA4",71,0)
 Q
"RTN","RCDPEAA4",72,0)
 ;
"RTN","RCDPEAA4",73,0)
ERALINES(RCDA,RCARRY,BALANCE,TOTPOSTD,POSTDT,FILEDT,PAYID,PAYNM,P2) ; Build sorted list
"RTN","RCDPEAA4",74,0)
 ; Input: RCDA - Top file ien for files 344.4 and 344.49
"RTN","RCDPEAA4",75,0)
 ; RCARRY(CTR) - A1^A2^A3^A4 Where:
"RTN","RCDPEAA4",76,0)
 ; A1 - ERA Number
"RTN","RCDPEAA4",77,0)
 ; A2 - Original Sequence Numbers
"RTN","RCDPEAA4",78,0)
 ; A3 - Claim Number
"RTN","RCDPEAA4",79,0)
 ; A4 - Internal IEN for subfile 344.491
"RTN","RCDPEAA4",80,0)
 ; A5 - Reason on APAR
"RTN","RCDPEAA4",81,0)
 ; BALANCE - Amount that is left to be posted 
"RTN","RCDPEAA4",82,0)
 ; TOTPOSTD - Total amount posted thus far against the ERA
"RTN","RCDPEAA4",83,0)
 ; POSTDT - Latest auto-posted date
"RTN","RCDPEAA4",84,0)
 ; FILEDT - Date/Time the ERA was filed
"RTN","RCDPEAA4",85,0)
 ; PAYID - Payer id
"RTN","RCDPEAA4",86,0)
 ; PAYNM - Payer name
"RTN","RCDPEAA4",87,0)
 ; P2 - "RCDPE_APAR_EEOB_PASS2"
"RTN","RCDPEAA4",88,0)
 ; REASON - External Auto-Post Reject Reason
"RTN","RCDPEAA4",89,0)
 ; Output: ^TMP($J,P2,A1,A2) = B1^B2^B3^B4^B5^B6^B7^B8^B9 Where:
"RTN","RCDPEAA4",90,0)
 ; A1 - Uppercased value of the selected sort field
"RTN","RCDPEAA4",91,0)
 ; A2 - Internal IEN of the ERA record
"RTN","RCDPEAA4",92,0)
 ; B1 - Line Number
"RTN","RCDPEAA4",93,0)
 ; B2 - ERA #.Sequence # (max 19 10+"."+8 characters)
"RTN","RCDPEAA4",94,0)
 ; B3 - Claim # (max 15 characters)
"RTN","RCDPEAA4",95,0)
 ; B4 - Posted Amount (max 15 characters)
"RTN","RCDPEAA4",96,0)
 ; B5 - External Post Date (8 characters)
"RTN","RCDPEAA4",97,0)
 ; B6 - Unposted Balance (max 15 characters)
"RTN","RCDPEAA4",98,0)
 ; B7 - Payer Name/Payer ID (max 76 characters)
"RTN","RCDPEAA4",99,0)
 ; B8 - Internal IEN for subfile 344.491
"RTN","RCDPEAA4",100,0)
 ; B9 - Auto-Post Reject Reason
"RTN","RCDPEAA4",101,0)
 ; B10 - Date ERA Filed
"RTN","RCDPEAA4",102,0)
 N A1,DLINE,RCT,REASON,X,XX
"RTN","RCDPEAA4",103,0)
 S RCT=""
"RTN","RCDPEAA4",104,0)
 F  D  Q:RCT=""
"RTN","RCDPEAA4",105,0)
 . S RCT=$O(RCARRY(RCT))
"RTN","RCDPEAA4",106,0)
 . Q:RCT=""
"RTN","RCDPEAA4",107,0)
 . S REASON=$P(RCARRY(RCT),"^",5)
"RTN","RCDPEAA4",108,0)
 . S A1=$$SORTP(BALANCE,TOTPOSTD,PAYNM,REASON,FILEDT) ; Get Sort Value
"RTN","RCDPEAA4",109,0)
 . I A1="" S A1=" " ; Set null sort value to space to avoid subscript error 
"RTN","RCDPEAA4",110,0)
 . S DLINE=RCT                                      ; Line Number
"RTN","RCDPEAA4",111,0)
 . S XX=$P(RCARRY(RCT),U,1)_"."_$P(RCARRY(RCT),U,2) ; ERA #.Sequence #
"RTN","RCDPEAA4",112,0)
 . S $P(DLINE,"^",2)=XX
"RTN","RCDPEAA4",113,0)
 . S $P(DLINE,"^",3)=$P(RCARRY(RCT),U,3)            ; Claim #
"RTN","RCDPEAA4",114,0)
 . S $P(DLINE,"^",4)=TOTPOSTD                       ; Posted Amount
"RTN","RCDPEAA4",115,0)
 . S $P(DLINE,"^",5)=$$FMTE^XLFDT(POSTDT,"2ZD")     ; External Post Date
"RTN","RCDPEAA4",116,0)
 . S $P(DLINE,"^",6)=BALANCE                        ; Unposted Balance
"RTN","RCDPEAA4",117,0)
 . S $P(DLINE,"^",7)=PAYNM_"/"_PAYID                ; Payer Name/ID
"RTN","RCDPEAA4",118,0)
 . S $P(DLINE,"^",8)=$P(RCARRY(RCT),"^",4)          ; Internal IEN for subfile 344.491
"RTN","RCDPEAA4",119,0)
 . S $P(DLINE,"^",9)=REASON                         ; Auto-Post Reject Reason
"RTN","RCDPEAA4",120,0)
 . S $P(DLINE,"^",10)=$$FMTE^XLFDT($P(FILEDT,".",1),"2ZD") ; External Date ERA Filed
"RTN","RCDPEAA4",121,0)
 . S ^TMP($J,P2,A1,RCDA,RCT)=DLINE
"RTN","RCDPEAA4",122,0)
 Q
"RTN","RCDPEAA4",123,0)
 ;
"RTN","RCDPEAA4",124,0)
BOUT(P2,VALMCNT) ; Build the display lines and load into the listman template
"RTN","RCDPEAA4",125,0)
 ; Input: P2 - "RCDPE_APAR_EEOB_PASS2"
"RTN","RCDPEAA4",126,0)
 ; ^TMP($J,P2,A1,A2) - B1^B2^B3^B4^B5^B6^B7^B8
"RTN","RCDPEAA4",127,0)
 ; See ERALINES for detail
"RTN","RCDPEAA4",128,0)
 ; Output: VALMCNT - Total # of body lines
"RTN","RCDPEAA4",129,0)
 ; ^TMP("RCDPE-APAR_EEOB_WL",$J,VALMCNT,0) - Listman Body line
"RTN","RCDPEAA4",130,0)
 ; ^TMP("RCDPE-APAR_EEOB_WL",$J,"IDX",VALMCNT,RCSEQ) - Line selection index
"RTN","RCDPEAA4",131,0)
 ; ^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ) - A1^A2^A3^...An Where
"RTN","RCDPEAA4",132,0)
 ; A1 - Line selection #
"RTN","RCDPEAA4",133,0)
 ; A2 - Internal IEN for 344.4
"RTN","RCDPEAA4",134,0)
 ; A3 - Internal IEN for 344.491
"RTN","RCDPEAA4",135,0)
 ; A4 - Unposted Balance
"RTN","RCDPEAA4",136,0)
 ; A5 - Posted Amount
"RTN","RCDPEAA4",137,0)
 N A1,BALANCE,COUNT,DLINE,ERAIEN,RCT,TOTPOSTDX,XX
"RTN","RCDPEAA4",138,0)
 S A1="",COUNT=0
"RTN","RCDPEAA4",139,0)
 F  D  Q:A1=""
"RTN","RCDPEAA4",140,0)
 . S A1=$O(^TMP($J,P2,A1))
"RTN","RCDPEAA4",141,0)
 . Q:A1=""
"RTN","RCDPEAA4",142,0)
 . S ERAIEN=""
"RTN","RCDPEAA4",143,0)
 . F  D  Q:ERAIEN=""
"RTN","RCDPEAA4",144,0)
 . . S ERAIEN=$O(^TMP($J,P2,A1,ERAIEN))
"RTN","RCDPEAA4",145,0)
 . . Q:ERAIEN=""
"RTN","RCDPEAA4",146,0)
 . . S RCT=""
"RTN","RCDPEAA4",147,0)
 . . F  D  Q:RCT=""
"RTN","RCDPEAA4",148,0)
 . . . S RCT=$O(^TMP($J,P2,A1,ERAIEN,RCT))
"RTN","RCDPEAA4",149,0)
 . . . Q:RCT=""
"RTN","RCDPEAA4",150,0)
 . . . S XX=^TMP($J,P2,A1,ERAIEN,RCT)
"RTN","RCDPEAA4",151,0)
 . . . S COUNT=COUNT+1 ; Selection #
"RTN","RCDPEAA4",152,0)
 . . . S DLINE=$J(COUNT,3)
"RTN","RCDPEAA4",153,0)
 . . . S DLINE=DLINE_$J("",7)_$$LJ^XLFSTR($P(XX,"^",2),17) ; ERA #.Sequence #
"RTN","RCDPEAA4",154,0)
 . . . S DLINE=DLINE_$$LJ^XLFSTR($P(XX,"^",3),14)          ; Claim #
"RTN","RCDPEAA4",155,0)
 . . . S TOTPOSTD=$P(XX,"^",4)
"RTN","RCDPEAA4",156,0)
 . . . S DLINE=DLINE_$J(TOTPOSTD,13,2)_" "                 ; Posted Amount
"RTN","RCDPEAA4",157,0)
 . . . ; S DLINE=DLINE_$P(XX,"^",5)_"   "                    ; Posted Date
"RTN","RCDPEAA4",158,0)
 . . . S DLINE=DLINE_$P(XX,"^",10)_"   "                   ; Date ERA filed
"RTN","RCDPEAA4",159,0)
 . . . S BALANCE=$P(XX,"^",6)
"RTN","RCDPEAA4",160,0)
 . . . S DLINE=DLINE_$J(BALANCE,13,2)_" "                  ; Unpaid Balance
"RTN","RCDPEAA4",161,0)
 . . . ; S DLINE=DLINE_$P(XX,"^",10)                         ; Date ERA filed
"RTN","RCDPEAA4",162,0)
 . . . S DLINE=DLINE_$P(XX,"^",5)                          ; Posted Date
"RTN","RCDPEAA4",163,0)
 . . . ;
"RTN","RCDPEAA4",164,0)
 . . . ; Line 1 of displayed EEOB item
"RTN","RCDPEAA4",165,0)
 . . . D SET(DLINE,COUNT,ERAIEN,$P(XX,"^",8),BALANCE,TOTPOSTD,.VALMCNT)
"RTN","RCDPEAA4",166,0)
 . . . ;
"RTN","RCDPEAA4",167,0)
 . . . ; Line 2 of displayed EEOB item: payer name/payer id
"RTN","RCDPEAA4",168,0)
 . . . S DLINE=$J("",5)_$$PAYTIN^RCDPRU2($P(XX,"^",7),75)
"RTN","RCDPEAA4",169,0)
 . . . D SET(DLINE,COUNT,ERAIEN,$P(XX,"^",8),BALANCE,TOTPOSTD,.VALMCNT)
"RTN","RCDPEAA4",170,0)
 . . . ;
"RTN","RCDPEAA4",171,0)
 . . . ; Line 3 of displayed EEOB item: Auto-Post Reject Reason
"RTN","RCDPEAA4",172,0)
 . . . S DLINE=$J("",5)_$P(XX,"^",9)
"RTN","RCDPEAA4",173,0)
 . . . D SET(DLINE,COUNT,ERAIEN,$P(XX,"^",8),BALANCE,TOTPOSTD,.VALMCNT)
"RTN","RCDPEAA4",174,0)
 Q
"RTN","RCDPEAA4",175,0)
 ;
"RTN","RCDPEAA4",176,0)
SORTP(BALANCE,TOTPOSTD,PAYNM,REASON,FILEDT) ; Get the value for the selected sort
"RTN","RCDPEAA4",177,0)
 ; Input: BALANCE - Unpaid Balance
"RTN","RCDPEAA4",178,0)
 ; TOTPOSTD - Posted Amount
"RTN","RCDPEAA4",179,0)
 ; POSTDT - Internal Posted Datge
"RTN","RCDPEAA4",180,0)
 ; PAYNM - Payer Name
"RTN","RCDPEAA4",181,0)
 ; REASON - External Auto-Post Reject Reason
"RTN","RCDPEAA4",182,0)
 ; FILEDT - Internal Date/Time the ERA was filed
"RTN","RCDPEAA4",183,0)
 ; ^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")- Selected sort (P/D/A/T)
"RTN","RCDPEAA4",184,0)
 ; Returns: External value for the selected sort type
"RTN","RCDPEAA4",185,0)
 N VALUE,XX,YY
"RTN","RCDPEAA4",186,0)
 S XX=^TMP("RCDPE_APAR_EEOB_PARAMS",$J,"SORT")
"RTN","RCDPEAA4",187,0)
 S YY=$P(XX,"^",2),XX=$P(XX,"^",1)
"RTN","RCDPEAA4",188,0)
 S YY=$S(YY="H":-1,1:1)
"RTN","RCDPEAA4",189,0)
 I XX="N" Q $$UP^XLFSTR(PAYNM)  ; Sort by Payer Name
"RTN","RCDPEAA4",190,0)
 I XX="R" Q $$UP^XLFSTR(REASON) ; Sort by Auto-post Reject Reason
"RTN","RCDPEAA4",191,0)
 I XX="D" Q FILEDT*YY           ; Sort by Date/Time ERA filed
"RTN","RCDPEAA4",192,0)
 I XX="U" Q BALANCE*YY          ; Sort by Unposted Balance
"RTN","RCDPEAA4",193,0)
 Q TOTPOSTD*YY                  ; Sort by Posted Amount
"RTN","RCDPEAA4",194,0)
 ;
"RTN","RCDPEAA4",195,0)
SET(DLINE,RCSEQ,ERAIEN,RCDA1,BALANCE,TOTPOSTD,VALMCNT) ; Set ListManager arrays
"RTN","RCDPEAA4",196,0)
 ; Input: DLINE - Line to be displayed in the listman body
"RTN","RCDPEAA4",197,0)
 ; RCSEQ - Line Selection number
"RTN","RCDPEAA4",198,0)
 ; ERAIEN - Internal IEN for 344.4 or 344.49
"RTN","RCDPEAA4",199,0)
 ; RCDA1 - Inernal IEN for subfile 344.491
"RTN","RCDPEAA4",200,0)
 ; BALANCE - Unposted Balance
"RTN","RCDPEAA4",201,0)
 ; TOTPOSTD - Posted Amount
"RTN","RCDPEAA4",202,0)
 ; VALMCNT - Current listman body line count
"RTN","RCDPEAA4",203,0)
 ; Output: VALMCNT - Updated listman body line count
"RTN","RCDPEAA4",204,0)
 ; ^TMP("RCDPE-APAR_EEOB_WL",$J,VALMCNT,0) - Listman Body line
"RTN","RCDPEAA4",205,0)
 ; ^TMP("RCDPE-APAR_EEOB_WL",$J,"IDX",VALMCNT,RCSEQ) - Line selection index
"RTN","RCDPEAA4",206,0)
 ; ^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ) - A1^A2^A3^...An Where
"RTN","RCDPEAA4",207,0)
 ; A1 - Line selection #
"RTN","RCDPEAA4",208,0)
 ; A2 - Internal IEN for 344.4
"RTN","RCDPEAA4",209,0)
 ; A3 - Internal IEN for 344.491
"RTN","RCDPEAA4",210,0)
 ; A4 - Unposted Balance
"RTN","RCDPEAA4",211,0)
 ; A5 - Posted Amount
"RTN","RCDPEAA4",212,0)
 S VALMCNT=VALMCNT+1
"RTN","RCDPEAA4",213,0)
 S ^TMP("RCDPE-APAR_EEOB_WL",$J,VALMCNT,0)=DLINE
"RTN","RCDPEAA4",214,0)
 S ^TMP("RCDPE-APAR_EEOB_WL",$J,"IDX",VALMCNT,RCSEQ)=ERAIEN
"RTN","RCDPEAA4",215,0)
 S ^TMP("RCDPE-APAR_EEOB_WLDX",$J,RCSEQ)=VALMCNT_U_ERAIEN_U_RCDA1_U_$G(BALANCE)_U_$G(TOTPOSTD)
"RTN","RCDPEAA4",216,0)
 Q
"RTN","RCDPEAA4",217,0)
 ;
"RTN","RCDPEAP")
0^48^B228321394
"RTN","RCDPEAP",1,0)
RCDPEAP ;ALB/PJH - AUTO POST MATCHING EFT ERA PAIR ;Oct 15, 2014@12:36:51
"RTN","RCDPEAP",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEAP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAP",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAP",5,0)
 ;
"RTN","RCDPEAP",6,0)
EN ;Auto-post ERA Receipts
"RTN","RCDPEAP",7,0)
 ;Process newly matched and matched but unprocessed ERAs
"RTN","RCDPEAP",8,0)
 D EN1
"RTN","RCDPEAP",9,0)
 ;Process previously processed ERA's
"RTN","RCDPEAP",10,0)
 D EN2
"RTN","RCDPEAP",11,0)
 Q
"RTN","RCDPEAP",12,0)
 ;
"RTN","RCDPEAP",13,0)
EN1 ;Auto-post newly matched and matched but unprocessed ERA
"RTN","RCDPEAP",14,0)
 N RCRZ,RCEFTDA
"RTN","RCDPEAP",15,0)
 S RCRZ=0
"RTN","RCDPEAP",16,0)
 ;Scan ERA file for auto-post candidates with AUTO-POST STATUS = UNPOSTED
"RTN","RCDPEAP",17,0)
 F  S RCRZ=$O(^RCY(344.4,"E",0,RCRZ)) Q:'RCRZ  D
"RTN","RCDPEAP",18,0)
 .;Get EFT reference
"RTN","RCDPEAP",19,0)
 .S RCEFTDA=$O(^RCY(344.31,"AERA",RCRZ,"")) Q:'RCEFTDA
"RTN","RCDPEAP",20,0)
 .;Check that EFT funds were posted to FMS and Accepted by FMS.  If not, quit and go to next unposted ERA
"RTN","RCDPEAP",21,0)
 .N RCOK,RCDEPTDA,RCRECTDA
"RTN","RCDPEAP",22,0)
 .S RCOK=1
"RTN","RCDPEAP",23,0)
 .I $P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,8),$P($G(^RCY(344.31,+RCEFTDA,0)),U,7) D  Q:'RCOK
"RTN","RCDPEAP",24,0)
 ..S RCDEPTDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPTDA,0)) ; Get deposit ticket and EFT receipt (CR - 8NZZ)
"RTN","RCDPEAP",25,0)
 ..I RCRECTDA N Z S Z=$P($$FMSSTAT^RCDPUREC(RCRECTDA),U,2) I $E(Z)="A" Q  ; EFT Accepted by FMS
"RTN","RCDPEAP",26,0)
 ..S RCOK=0
"RTN","RCDPEAP",27,0)
 .;
"RTN","RCDPEAP",28,0)
 .;Auto-Post
"RTN","RCDPEAP",29,0)
 .D AUTOPOST(RCEFTDA,RCRZ)
"RTN","RCDPEAP",30,0)
 Q
"RTN","RCDPEAP",31,0)
 ;
"RTN","RCDPEAP",32,0)
 ; Process ERA
"RTN","RCDPEAP",33,0)
AUTOPOST(RCEFTDA,RCERA) ; 
"RTN","RCDPEAP",34,0)
 ; RCEFTDA = ien of file #344.31
"RTN","RCDPEAP",35,0)
 ; RCERA = ien of file #344.4
"RTN","RCDPEAP",36,0)
 ;
"RTN","RCDPEAP",37,0)
 ;Lock ERA
"RTN","RCDPEAP",38,0)
 L +^RCY(344.4,RCERA):5 Q:'$T
"RTN","RCDPEAP",39,0)
 ;
"RTN","RCDPEAP",40,0)
 ;Build Scratchpad and Verify Lines
"RTN","RCDPEAP",41,0)
 N ALLOK,RCERR,RCLINES,RCRCPTDA,RCSCR,RCTRDA,ZEROBAL ; PRCA*4.5*318 Variables placed in alpha order
"RTN","RCDPEAP",42,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP",43,0)
 S RCSCR=$$SCRPAD(RCERA)
"RTN","RCDPEAP",44,0)
 ; Re-set AUTO-POST STATUS  if unable to create scratchpad
"RTN","RCDPEAP",45,0)
 I 'RCSCR D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create scratchpad") G AUTOQ
"RTN","RCDPEAP",46,0)
 ;
"RTN","RCDPEAP",47,0)
 ; ERA cannot be autoposted; remove any pre-existing value to the AUTO-POST STATUS so ERA can be processed manually in the Worklist
"RTN","RCDPEAP",48,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-ERA level Adjustment(s)") G AUTOQ
"RTN","RCDPEAP",49,0)
 ;
"RTN","RCDPEAP",50,0)
 ; If ERA is unbalanced, do not auto-post
"RTN","RCDPEAP",51,0)
 I $$UNBAL^RCDPEAP1(RCERA) D  Q  ; PRCA*4.5*318 Added line
"RTN","RCDPEAP",52,0)
 .D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unbalanced ERA") ; PRCA*4.5*321
"RTN","RCDPEAP",53,0)
 ;
"RTN","RCDPEAP",54,0)
 ;Check if all lines can be posted
"RTN","RCDPEAP",55,0)
 S ALLOK=$$ALLOK(RCERA,RCSCR,.ZEROBAL,.RCLINES)
"RTN","RCDPEAP",56,0)
 ;
"RTN","RCDPEAP",57,0)
 ;If $$ALLOK post entire ERA and reset AUTO-POST STATUS = COMPLETE
"RTN","RCDPEAP",58,0)
 I ALLOK D POSTALL(RCERA)
"RTN","RCDPEAP",59,0)
 ;
"RTN","RCDPEAP",60,0)
 ; If 'ALLOK and 'ZEROBAL(matching positive/negative pairs to not balance out to zero), then ERA needs to go to the standard worklist for manual receipt processing
"RTN","RCDPEAP",61,0)
 I 'ALLOK,'ZEROBAL D SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-+/- pairs do not balance") G AUTOQ
"RTN","RCDPEAP",62,0)
 ;
"RTN","RCDPEAP",63,0)
 ;If 'ALLOK and some of the lines passed validation then post receipt to summary ERA and set AUTO-POST STATUS = PARTIAL
"RTN","RCDPEAP",64,0)
 ;Un-posted lines fall to APAR list for processing.
"RTN","RCDPEAP",65,0)
 I 'ALLOK D POSTERA(RCERA,.RCLINES)
"RTN","RCDPEAP",66,0)
 ;Unlock ERA
"RTN","RCDPEAP",67,0)
AUTOQ D UNLOCKE
"RTN","RCDPEAP",68,0)
 Q
"RTN","RCDPEAP",69,0)
 ;
"RTN","RCDPEAP",70,0)
EN2 ;Auto-Post Previously Processed ERA
"RTN","RCDPEAP",71,0)
 N AUTORCPT,CLAIM,COMPLETE,EOBIEN,RCERA,RCIFN,RCRCPTDA,RCLINES
"RTN","RCDPEAP",72,0)
 S RCERA=0,AUTORCPT=1 ;Variable AUTORCPT suppresses #344 trigger update to ERA receipt field
"RTN","RCDPEAP",73,0)
 ;Scan ERA file for auto-post candidates with AUTO-POST STATUS = PARTIAL
"RTN","RCDPEAP",74,0)
 F  S RCERA=$O(^RCY(344.4,"E",1,RCERA)) Q:'RCERA  D
"RTN","RCDPEAP",75,0)
 . ;Ignore if it was just partially posted in POSTLNS so we do not process again
"RTN","RCDPEAP",76,0)
 . Q:$D(^TMP("RCDPEAP",$J,RCERA))
"RTN","RCDPEAP",77,0)
 . ;Set receipt variable to null for each ERA so that the receipt number from the previous ERA is not hanging around
"RTN","RCDPEAP",78,0)
 . S RCRCPTDA=""
"RTN","RCDPEAP",79,0)
 . ;Check if there are lines that are set for auto-posting and if they can be posted or have errors.
"RTN","RCDPEAP",80,0)
 . K RCLINES
"RTN","RCDPEAP",81,0)
 . S RCLINES=0
"RTN","RCDPEAP",82,0)
 . D VALID^RCDPEAP1(RCERA,.RCLINES)
"RTN","RCDPEAP",83,0)
 . ;If valid lines found create receipt for those lines (Variable RCLINES is only incremented for valid lines)
"RTN","RCDPEAP",84,0)
 . I RCLINES D
"RTN","RCDPEAP",85,0)
 . . N RCEFTDA,RCDEPTDA,RCRECTDA
"RTN","RCDPEAP",86,0)
 . . ;Get EFT reference
"RTN","RCDPEAP",87,0)
 . . S RCEFTDA=$O(^RCY(344.31,"AERA",RCERA,"")) Q:'RCEFTDA
"RTN","RCDPEAP",88,0)
 . . ;Get deposit ticket and EFT receipt
"RTN","RCDPEAP",89,0)
 . . S RCDEPTDA=+$P($G(^RCY(344.3,+$G(^RCY(344.31,+RCEFTDA,0)),0)),U,3),RCRECTDA=+$O(^RCY(344,"AD",+RCDEPTDA,0))
"RTN","RCDPEAP",90,0)
 . . ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",91,0)
 . . S RCRCPTDA=$$BLDRCPT^RCDPEMA(RCERA) ; Creates basic receipt for ERA of payment type EDI LOCKBOX; 2nd parameter means an alpha suffix on receipt number
"RTN","RCDPEAP",92,0)
 . . I 'RCRCPTDA Q  ;PRCA*4.5*318 - Problem building receipt header
"RTN","RCDPEAP",93,0)
 . . K RCERR
"RTN","RCDPEAP",94,0)
 . . D RCPTDET^RCDPEMA(RCERA,RCRCPTDA,.RCLINES,.RCERR) ; Adds detail to a receipt based on file 344.49 and RCLINES array
"RTN","RCDPEAP",95,0)
 . . ;;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL - PRCA*4.5*318 - replaced following line
"RTN","RCDPEAP",96,0)
 . . ;;I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",97,0)
 . . I $O(RCERR("")) Q  ; PRCA*4.5*318 - Do not attempt to process partially filed receipt
"RTN","RCDPEAP",98,0)
 . . ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",99,0)
 . . I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",100,0)
 . . I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",101,0)
 . . ;Process Receipt to FMS
"RTN","RCDPEAP",102,0)
 . . D PROCESS^RCDPURE1(RCRCPTDA,2) I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D UNLOCKR Q
"RTN","RCDPEAP",103,0)
 . . ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",104,0)
 . . D ERAREF(RCERA,RCRCPTDA)
"RTN","RCDPEAP",105,0)
 . . ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",106,0)
 . . D UNLOCKR
"RTN","RCDPEAP",107,0)
 . ;Update ERA and ERA detail lines with receipt # or auto-post rejection reason
"RTN","RCDPEAP",108,0)
 . D ERADET^RCDPEAP1(RCERA,RCRCPTDA,.RCLINES)
"RTN","RCDPEAP",109,0)
 . ;Determine if posting complete for this ERA
"RTN","RCDPEAP",110,0)
 . S COMPLETE=$$COMPLETE(RCERA)
"RTN","RCDPEAP",111,0)
 . ;If complete update ERA detail post status to POSTED
"RTN","RCDPEAP",112,0)
 . I COMPLETE S DIE="^RCY(344.4,",DR=".14////1",DA=RCERA D ^DIE
"RTN","RCDPEAP",113,0)
 . ;Update the audit log
"RTN","RCDPEAP",114,0)
 . D AUDITLOG(RCERA,$S(COMPLETE:2,1:1),"Auto Posting: Previously processed ERA posting attempt")
"RTN","RCDPEAP",115,0)
 . ;Set ERA auto-post status and update latest auto-post date
"RTN","RCDPEAP",116,0)
 . S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////"_$S(COMPLETE:2,1:1),DA=RCERA D ^DIE
"RTN","RCDPEAP",117,0)
 ;Unlock ERA
"RTN","RCDPEAP",118,0)
 D UNLOCKE
"RTN","RCDPEAP",119,0)
 Q
"RTN","RCDPEAP",120,0)
 ;
"RTN","RCDPEAP",121,0)
 ;Functions/Sub-routines in alpha order
"RTN","RCDPEAP",122,0)
 ;
"RTN","RCDPEAP",123,0)
ACTIVE(EOBIEN) ;Verify claim is active
"RTN","RCDPEAP",124,0)
 ; EOBIEN - IEN of file 361.1
"RTN","RCDPEAP",125,0)
 N RCIFN,RCBILL,RCSTATUS
"RTN","RCDPEAP",126,0)
 ;Get EOB number (implies this is 3rd Party claim)
"RTN","RCDPEAP",127,0)
 I 'EOBIEN Q 0
"RTN","RCDPEAP",128,0)
 ;Get #399 claim number from EOB
"RTN","RCDPEAP",129,0)
 S RCIFN=$P($G(^IBM(361.1,EOBIEN,0)),U) Q:'RCIFN 0
"RTN","RCDPEAP",130,0)
 S RCBILL=$P($G(^DGCR(399,RCIFN,0)),U) Q:RCBILL="" 0  ; IA 4051
"RTN","RCDPEAP",131,0)
 ;Check if bill is cancelled or closed
"RTN","RCDPEAP",132,0)
 S RCSTATUS=$P($G(^DGCR(399,RCIFN,0)),U,13)
"RTN","RCDPEAP",133,0)
 Q $S(RCSTATUS=0:0,RCSTATUS=7:0,1:1)
"RTN","RCDPEAP",134,0)
 ; 
"RTN","RCDPEAP",135,0)
ALLOK(RCERA,RCSCR,ZEROBAL,RCLINES) ;Verify which scratchpad lines are able to auto-post
"RTN","RCDPEAP",136,0)
 ; RCERA - 344.4 ien
"RTN","RCDPEAP",137,0)
 ; RCSCR - 344.49 ien
"RTN","RCDPEAP",138,0)
 ; ZEROBAL - flag that represents if ERA has zero payment balance after processing matched positive/negative pairs, passed by reference
"RTN","RCDPEAP",139,0)
 ; RCLINES - array of ERA line references (passed in by reference)
"RTN","RCDPEAP",140,0)
 ;           NOTE:  ORIGINAL ERA SEQUENCES (344.491, .09) can have multiple ERA line references separated by commas (e.g., 3,4)
"RTN","RCDPEAP",141,0)
 ; returns 0 or 1 (ALLOK)
"RTN","RCDPEAP",142,0)
 N ALLOK,AMT,ERALINE,STATUS,SUB,SUB1,CLAIM,WLINE,VERIFY
"RTN","RCDPEAP",143,0)
 K CLARRAY
"RTN","RCDPEAP",144,0)
 S (ZEROBAL,ALLOK)=1
"RTN","RCDPEAP",145,0)
 S (SUB,RCLINES)=0
"RTN","RCDPEAP",146,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP",147,0)
 . ;Get scratchpad line and data
"RTN","RCDPEAP",148,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1  S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0)),AMT=$P(WLINE,U,3)
"RTN","RCDPEAP",149,0)
 . ;If integer sequence, get ERA line reference and verify flag and then quit for this sequence and go on to the non-integer sequence to finish validation
"RTN","RCDPEAP",150,0)
 . I $P(WLINE,U)?1N.N S VERIFY=1 S ERALINE=$P(WLINE,U,9) S:'$P(WLINE,U,13) ALLOK=0,RCLINES(ERALINE)="0^^1",VERIFY=0 Q
"RTN","RCDPEAP",151,0)
 . ; ignore zero valued lines
"RTN","RCDPEAP",152,0)
 . Q:AMT=0  Q:AMT="0.00"
"RTN","RCDPEAP",153,0)
 . ;Get claim number from N.001 line - if not found treat as inactive
"RTN","RCDPEAP",154,0)
 . S CLAIM=$P(WLINE,U,7) I 'CLAIM S ALLOK=0,$P(RCLINES(ERALINE),U,3)=2 Q
"RTN","RCDPEAP",155,0)
 . ;Save claim number
"RTN","RCDPEAP",156,0)
 . S $P(RCLINES(ERALINE),U,2)=$P($G(^PRCA(430,CLAIM,0)),U) Q:'VERIFY
"RTN","RCDPEAP",157,0)
 . ;Claim must be OPEN or ACTIVE
"RTN","RCDPEAP",158,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8) I STATUS'=42,STATUS'=16 S ALLOK=0,$P(RCLINES(ERALINE),U,3)=2 Q
"RTN","RCDPEAP",159,0)
 . ;Check that payment does not exceed balance and no pending payments (at the time of auto posting)
"RTN","RCDPEAP",160,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3) I '$$CHECKPAY(.CLARRAY,CLAIM) S ALLOK=0,$P(RCLINES(ERALINE),U,3)=3 Q
"RTN","RCDPEAP",161,0)
 . ;Check if referred to general council
"RTN","RCDPEAP",162,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S ALLOK=0,$P(RCLINES(ERALINE),U,3)=4 Q
"RTN","RCDPEAP",163,0)
 . ;Line is potentially postable
"RTN","RCDPEAP",164,0)
 . S $P(RCLINES(ERALINE),U)=1,$P(RCLINES(ERALINE),U,3)=$P(WLINE,U,6),RCLINES=$G(RCLINES)+1
"RTN","RCDPEAP",165,0)
 Q ALLOK
"RTN","RCDPEAP",166,0)
 ;
"RTN","RCDPEAP",167,0)
AUDITLOG(DA,RCNEWST,RCREASON) ;
"RTN","RCDPEAP",168,0)
 ; Update the Auto-post Audit Log
"RTN","RCDPEAP",169,0)
 ;
"RTN","RCDPEAP",170,0)
 I '$G(DA) Q
"RTN","RCDPEAP",171,0)
 I $G(RCREASON)="" Q
"RTN","RCDPEAP",172,0)
 ;
"RTN","RCDPEAP",173,0)
 N RCAUDIT,RCOLDST,DIE,DR,X,Y,DTOUT,DUOUT,DROUT,DIRUT
"RTN","RCDPEAP",174,0)
 ; Get the current status
"RTN","RCDPEAP",175,0)
 S RCOLDST=$$GET1^DIQ(344.4,DA_",",4.02,"I")
"RTN","RCDPEAP",176,0)
 ; If the new status is null, set to old status (no change)
"RTN","RCDPEAP",177,0)
 I $G(RCNEWST)="" S RCNEWST=RCOLDST
"RTN","RCDPEAP",178,0)
 ; File
"RTN","RCDPEAP",179,0)
 S RCAUDIT(344.72,"+1,",.01)=$$NOW^XLFDT ;Date/Time Stamp
"RTN","RCDPEAP",180,0)
 S RCAUDIT(344.72,"+1,",.02)=DUZ         ;User
"RTN","RCDPEAP",181,0)
 S RCAUDIT(344.72,"+1,",.03)=DA          ;ERA #
"RTN","RCDPEAP",182,0)
 S RCAUDIT(344.72,"+1,",.04)=RCOLDST     ;Old Status
"RTN","RCDPEAP",183,0)
 I RCNEWST'="@" S RCAUDIT(344.72,"+1,",.05)=RCNEWST ;New status
"RTN","RCDPEAP",184,0)
 S RCAUDIT(344.72,"+1,",.06)=$E(RCREASON,1,80) ;Reason text
"RTN","RCDPEAP",185,0)
 D UPDATE^DIE(,"RCAUDIT")
"RTN","RCDPEAP",186,0)
 Q
"RTN","RCDPEAP",187,0)
 ;
"RTN","RCDPEAP",188,0)
BUILD(RCSCR,ARRAY) ;Build list of ERA lines
"RTN","RCDPEAP",189,0)
 ;
"RTN","RCDPEAP",190,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",191,0)
 ; ARRAY = the array that will hold the list of ERA lines, passed by reference
"RTN","RCDPEAP",192,0)
 ;
"RTN","RCDPEAP",193,0)
 N FOUND,SCRLINE,SUB,SUB1
"RTN","RCDPEAP",194,0)
 K ARRAY
"RTN","RCDPEAP",195,0)
 S SUB=0,ARRAY=0
"RTN","RCDPEAP",196,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D:SUB'["."
"RTN","RCDPEAP",197,0)
 . ;Get actual scratchpad ^RCY(344.49,RCSCR,1) node
"RTN","RCDPEAP",198,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1
"RTN","RCDPEAP",199,0)
 . ;Ignore zero lines
"RTN","RCDPEAP",200,0)
 . Q:'$P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,3)
"RTN","RCDPEAP",201,0)
 . ;Index scratchpad line by ERA sequence
"RTN","RCDPEAP",202,0)
 . S ARRAY($P($G(^RCY(344.49,RCSCR,1,SUB1,0)),U,9))=SUB1,ARRAY=$G(ARRAY)+1
"RTN","RCDPEAP",203,0)
 Q
"RTN","RCDPEAP",204,0)
 ;
"RTN","RCDPEAP",205,0)
CHECKPAY(ARRAY,CLAIM) ;Check balance versus payments
"RTN","RCDPEAP",206,0)
 ; ARRAY = array of claim numbers and respective payment amounts
"RTN","RCDPEAP",207,0)
 ;         e.g. ARRAY(430 ien) = 123.04
"RTN","RCDPEAP",208,0)
 ; CLAIM = AR BILL (344.491, .07) - IEN of file 430
"RTN","RCDPEAP",209,0)
 Q:'CLAIM 0
"RTN","RCDPEAP",210,0)
 ; get the payment amount to be posted to the claim
"RTN","RCDPEAP",211,0)
 S AMT=ARRAY(CLAIM)
"RTN","RCDPEAP",212,0)
 ;Payment exceeds principle balance
"RTN","RCDPEAP",213,0)
 Q:AMT>$P($G(^PRCA(430,CLAIM,7)),U) 0
"RTN","RCDPEAP",214,0)
 ;Check pending payments for claim
"RTN","RCDPEAP",215,0)
 N PENDING S PENDING=$$PENDPAY^RCDPURET(CLAIM) K ^TMP($J,"RCDPUREC","PP")
"RTN","RCDPEAP",216,0)
 ;Pending payments is > billed
"RTN","RCDPEAP",217,0)
 I PENDING>AMT Q 0
"RTN","RCDPEAP",218,0)
 ;otherwise OK to post payment
"RTN","RCDPEAP",219,0)
 Q 1
"RTN","RCDPEAP",220,0)
 ; 
"RTN","RCDPEAP",221,0)
CLEAR(DA) ;Clear scratchpad
"RTN","RCDPEAP",222,0)
 N DIK S DIK="^RCY(344.49," D ^DIK
"RTN","RCDPEAP",223,0)
 Q
"RTN","RCDPEAP",224,0)
 ;
"RTN","RCDPEAP",225,0)
COMPLETE(RCSCR) ;Check for non-zero lines without a receipt
"RTN","RCDPEAP",226,0)
 ;
"RTN","RCDPEAP",227,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",228,0)
 ; Returns status of check (1 or 0)
"RTN","RCDPEAP",229,0)
 N RCSUB,SCRSUB,COMPLETE,SCRLINE,RCERA
"RTN","RCDPEAP",230,0)
 ;Default to complete
"RTN","RCDPEAP",231,0)
 S SCRSUB=0,COMPLETE=1,RCERA=RCSCR
"RTN","RCDPEAP",232,0)
 ;Scan scratchpad
"RTN","RCDPEAP",233,0)
 F  S SCRSUB=$O(^RCY(344.49,RCSCR,1,SCRSUB)) Q:'SCRSUB  D  Q:'COMPLETE
"RTN","RCDPEAP",234,0)
 . ;Ignore zero and split lines (splitting line should not change balance)
"RTN","RCDPEAP",235,0)
 . S SCRLINE=$G(^RCY(344.49,RCSCR,1,SCRSUB,0)) Q:$P(SCRLINE,U)'?1N.N  Q:$P(SCRLINE,U,3)=0  Q:$P(SCRLINE,U,3)="0.00"
"RTN","RCDPEAP",236,0)
 . ;Check if non-zero line has receipt on ERA, DETAIL line
"RTN","RCDPEAP",237,0)
 . S RCSUB=$P(SCRLINE,U,9) I RCSUB,$P($G(^RCY(344.4,RCERA,1,RCSUB,4)),U,3)]"" Q
"RTN","RCDPEAP",238,0)
 . ;Otherwise more AUTO-posting to do
"RTN","RCDPEAP",239,0)
 . S COMPLETE=0
"RTN","RCDPEAP",240,0)
 Q COMPLETE
"RTN","RCDPEAP",241,0)
 ;
"RTN","RCDPEAP",242,0)
ERAREF(RCSCR,RCRCPTDA) ; update ERA reference and EFT record IEN in file 344
"RTN","RCDPEAP",243,0)
 ; RCSCR - IEN of record in file 344.49
"RTN","RCDPEAP",244,0)
 ; RCRCPTDA - ien of record in file 344 (receipt ien)
"RTN","RCDPEAP",245,0)
 N Z,DR,DIE,DA
"RTN","RCDPEAP",246,0)
 S Z=+$O(^RCY(344.31,"AERA",RCSCR,0))
"RTN","RCDPEAP",247,0)
 S DIE="^RCY(344,",DA=RCRCPTDA,DR=".18////"_RCSCR_$S(Z:";.17////"_Z,1:"") D ^DIE
"RTN","RCDPEAP",248,0)
 Q
"RTN","RCDPEAP",249,0)
 ;
"RTN","RCDPEAP",250,0)
NOTOK(RCSCR) ;Verify all scratchpad lines passed auto verify (V)
"RTN","RCDPEAP",251,0)
 ;
"RTN","RCDPEAP",252,0)
 ; RCSCR = ien of file 344.49
"RTN","RCDPEAP",253,0)
 ; Returns status of check (1 or 0)
"RTN","RCDPEAP",254,0)
 N NOTOK,SUB
"RTN","RCDPEAP",255,0)
 S SUB=0,NOTOK=0
"RTN","RCDPEAP",256,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,SUB)) Q:'SUB  D  Q:NOTOK
"RTN","RCDPEAP",257,0)
 . ;Set NOTOK if any single line is unverified
"RTN","RCDPEAP",258,0)
 . S:$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U,13)'=1 NOTOK=1
"RTN","RCDPEAP",259,0)
 Q NOTOK
"RTN","RCDPEAP",260,0)
 ;
"RTN","RCDPEAP",261,0)
POSTALL(RCERA) ; all lines in ERA get posted on first attempt of auto-post
"RTN","RCDPEAP",262,0)
 ;
"RTN","RCDPEAP",263,0)
 ; RCERA = ien of 344.4
"RTN","RCDPEAP",264,0)
 ;
"RTN","RCDPEAP",265,0)
 ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",266,0)
 S RCRCPTDA=$$BLDRCPT^RCDPUREC(DT,"",+$O(^RC(341.1,"AC",14,0)))  ; Creates basic receipt for ERA of payment type EDI LOCKBOX; 2nd parameter means no alpha suffix on receipt number
"RTN","RCDPEAP",267,0)
 D RCPTDET^RCDPEM(RCSCR,RCRCPTDA,.RCERR) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEAP",268,0)
 ;
"RTN","RCDPEAP",269,0)
 ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",270,0)
 I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",271,0)
 ;
"RTN","RCDPEAP",272,0)
 ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",273,0)
 I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",274,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",275,0)
 ;
"RTN","RCDPEAP",276,0)
 ;Process Receipt to FMS
"RTN","RCDPEAP",277,0)
 D PROCESS^RCDPURE1(RCRCPTDA,2)
"RTN","RCDPEAP",278,0)
 I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Error in receipt processing"),UNLOCKR Q
"RTN","RCDPEAP",279,0)
 ;
"RTN","RCDPEAP",280,0)
 ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",281,0)
 D ERAREF(RCSCR,RCRCPTDA)
"RTN","RCDPEAP",282,0)
 ;
"RTN","RCDPEAP",283,0)
 ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",284,0)
 D UNLOCKR
"RTN","RCDPEAP",285,0)
 ;
"RTN","RCDPEAP",286,0)
 ;Update the audit log
"RTN","RCDPEAP",287,0)
 D AUDITLOG(RCERA,2,"Auto Posting: ERA posted successfully")
"RTN","RCDPEAP",288,0)
 ;Update ERA receipt and detail post status
"RTN","RCDPEAP",289,0)
 S DIE="^RCY(344.4,",DR=".14////1;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP",290,0)
 ;Set ERA auto-post status to 'complete' and update latest auto-post date
"RTN","RCDPEAP",291,0)
 S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////2",DA=RCERA D ^DIE
"RTN","RCDPEAP",292,0)
 ;Update auto-post date for each claim line
"RTN","RCDPEAP",293,0)
 N RCLINE,RCSCSUB,RCSCD0
"RTN","RCDPEAP",294,0)
 S RCSCSUB=0
"RTN","RCDPEAP",295,0)
 F  S RCSCSUB=$O(^RCY(344.49,RCERA,1,RCSCSUB)) Q:'RCSCSUB  D
"RTN","RCDPEAP",296,0)
 . S RCSCD0=$G(^RCY(344.49,RCERA,1,RCSCSUB,0))
"RTN","RCDPEAP",297,0)
 . ;Ignore if zero value (line not on receipt) otherwise get original ERA line sequence
"RTN","RCDPEAP",298,0)
 . Q:'+$P(RCSCD0,U,3)  S RCLINE=$P(RCSCD0,U,9) Q:'RCLINE
"RTN","RCDPEAP",299,0)
 . ;Update ERA line with receipt number and auto-post date
"RTN","RCDPEAP",300,0)
 . N DA,DIE,DR S DA(1)=RCERA,DA=RCLINE,DIE="^RCY(344.4,"_DA(1)_",1,",DR=".25////"_RCRCPTDA_";9////"_DT D ^DIE
"RTN","RCDPEAP",301,0)
 Q
"RTN","RCDPEAP",302,0)
 ;
"RTN","RCDPEAP",303,0)
POSTERA(RCERA,RCLINES) ; only some of the EEOB lines passed validation on first attempt (DAY 1) of auto-post
"RTN","RCDPEAP",304,0)
 ; therefore assign the receipt number and 'partial' post status to ERA summary
"RTN","RCDPEAP",305,0)
 ;
"RTN","RCDPEAP",306,0)
 ; RCERA = ien of 344.4
"RTN","RCDPEAP",307,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP",308,0)
 ;
"RTN","RCDPEAP",309,0)
 ; no lines passed validation;  at lease 1 EEOB line needs to pass validation before assigning a receipt to the ERA
"RTN","RCDPEAP",310,0)
 I RCLINES=0 S RCRCPTDA="" G POSTERAQ
"RTN","RCDPEAP",311,0)
 ;ERA Receipt is created from scratchpad entry - type 14 is EDI Lockbox payment
"RTN","RCDPEAP",312,0)
 S RCRCPTDA=$$BLDRCPT^RCDPEMA(RCERA) ; Creates basic receipt for ERA of payment type EDI LOCKBOXA
"RTN","RCDPEAP",313,0)
 D RCPTDET^RCDPEMA(RCSCR,RCRCPTDA,.RCLINES,.RCERR) ; Adds detail to a receipt based on file 344.49 and RCLINES array
"RTN","RCDPEAP",314,0)
 ;
"RTN","RCDPEAP",315,0)
 ;Unable to create receipt - clear scratchpad, reset AUTO-POST STATUS = NULL
"RTN","RCDPEAP",316,0)
 I $O(RCERR("")) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Unable to create receipt") Q
"RTN","RCDPEAP",317,0)
 ;
"RTN","RCDPEAP",318,0)
 ;Lock ERA receipt and deposit ticket
"RTN","RCDPEAP",319,0)
 I '$$LOCKREC^RCDPRPLU(RCRCPTDA) Q
"RTN","RCDPEAP",320,0)
 I '$$LOCKDEP^RCDPDPLU(RCDEPTDA) D UNLOCKR Q
"RTN","RCDPEAP",321,0)
 ;
"RTN","RCDPEAP",322,0)
 ;Process Receipt to FMS
"RTN","RCDPEAP",323,0)
 D PROCESS^RCDPURE1(RCRCPTDA,2)
"RTN","RCDPEAP",324,0)
 I $D(^TMP("RCDPE-RECEIPT-ERROR",$J)) D CLEAR(RCSCR),SETSTA(RCERA,"@","Auto Posting: Removed from Auto Posting-Error in receipt processing"),UNLOCKR Q
"RTN","RCDPEAP",325,0)
 ;
"RTN","RCDPEAP",326,0)
 ; update 344, .18 ERA REFERENCE field
"RTN","RCDPEAP",327,0)
 D ERAREF(RCSCR,RCRCPTDA)
"RTN","RCDPEAP",328,0)
 ;
"RTN","RCDPEAP",329,0)
 ;Unlock deposit ticket and receipt
"RTN","RCDPEAP",330,0)
 D UNLOCKR
"RTN","RCDPEAP",331,0)
 ;Update ERA receipt and detail post status
"RTN","RCDPEAP",332,0)
 S DIE="^RCY(344.4,",DR=".14////5;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP",333,0)
POSTERAQ ;
"RTN","RCDPEAP",334,0)
 D POSTLNS(RCERA,RCRCPTDA,.RCLINES)
"RTN","RCDPEAP",335,0)
 Q
"RTN","RCDPEAP",336,0)
 ;
"RTN","RCDPEAP",337,0)
POSTLNS(RCERA,RCRCPTDA,RCLINES) ; this subroutine should only be called when some of the EEOB lines
"RTN","RCDPEAP",338,0)
 ;                                passed validation on FIRST attempt (DAY 1) of auto-post
"RTN","RCDPEAP",339,0)
 ;
"RTN","RCDPEAP",340,0)
 ; RCERA = ien of ERA entry in 344.4
"RTN","RCDPEAP",341,0)
 ; RCRCPTDA = ien of receipt entry in 344 or undefined if receipt not created since none of the lines passed validation
"RTN","RCDPEAP",342,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP",343,0)
 ;
"RTN","RCDPEAP",344,0)
 ;Mark ERA as processed to prevent reprocessing in EN2^RCDPEAP which runs next
"RTN","RCDPEAP",345,0)
 S ^TMP("RCDPEAP",$J,RCERA)=""
"RTN","RCDPEAP",346,0)
 S RCRCPTDA=$G(RCRCPTDA)
"RTN","RCDPEAP",347,0)
 ;Update individual claim lines on ERA
"RTN","RCDPEAP",348,0)
 N RCLIN,DA,DIE,DR,LNUM,RCI,REJECT
"RTN","RCDPEAP",349,0)
 S RCLIN=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP",350,0)
 . ; flag the line if it was rejected during validation
"RTN","RCDPEAP",351,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP",352,0)
 . ;get all ERA line references (e.g. RCLINES(RCLIN) could have multiple line # references)
"RTN","RCDPEAP",353,0)
 . ;Need to parse out each line reference so that the necessary fields can be updated for the specific line
"RTN","RCDPEAP",354,0)
 . F RCI=1:1 S LNUM=$P(RCLIN,",",RCI) Q:LNUM=""  D
"RTN","RCDPEAP",355,0)
 . . S DA(1)=RCERA,DA=LNUM,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP",356,0)
 . . ;If not posted then the AUTO-POST REJECTION REASON (344.41,5) needs to be updated ;otherwise update line with receipt number and auto-post date
"RTN","RCDPEAP",357,0)
 . . I REJECT S DR="5////"_$P(RCLINES(RCLIN),U,3)
"RTN","RCDPEAP",358,0)
 . . E  S DR=".25////"_RCRCPTDA_";9////"_DT
"RTN","RCDPEAP",359,0)
 . . D ^DIE
"RTN","RCDPEAP",360,0)
 ;Update the Audit Log
"RTN","RCDPEAP",361,0)
 D AUDITLOG(RCERA,1,"Auto Posting: Some of the ERA lines went to APAR")
"RTN","RCDPEAP",362,0)
 ;Set ERA AUTO-POST STATUS = PARTIAL and update auto-post date
"RTN","RCDPEAP",363,0)
 S DIE="^RCY(344.4,",DR="4.01////"_DT_";4.02////1",DA=RCERA D ^DIE
"RTN","RCDPEAP",364,0)
 Q
"RTN","RCDPEAP",365,0)
 ;
"RTN","RCDPEAP",366,0)
SCRPAD(RCERA) ;Build Scratchpad entry in #344.49 for the ERA
"RTN","RCDPEAP",367,0)
 ;
"RTN","RCDPEAP",368,0)
 ; Input - RCERA - IEN for #344.4
"RTN","RCDPEAP",369,0)
 ;
"RTN","RCDPEAP",370,0)
 ; Output - RCSCR = Scratchpad IEN (Success) or 0 (Fail)
"RTN","RCDPEAP",371,0)
 ;
"RTN","RCDPEAP",372,0)
 N RC0,RC5,RCSCR,RCDAT,X
"RTN","RCDPEAP",373,0)
 S RC0=$G(^RCY(344.4,RCERA,0)),RC5=$G(^RCY(344.4,RCERA,5))
"RTN","RCDPEAP",374,0)
 ;Ignore is this ERA already has a receipt
"RTN","RCDPEAP",375,0)
 I +$P(RC0,U,8) Q 0
"RTN","RCDPEAP",376,0)
 ;Ignore if this is zero ERA
"RTN","RCDPEAP",377,0)
 I +$P(RC0,U,5)=0 Q 0
"RTN","RCDPEAP",378,0)
 ;Ignore if this is not a valid auto-post ERA type 
"RTN","RCDPEAP",379,0)
 I "^ACH^CHK^"'[(U_$P(RC0,U,15)_U) Q 0 ; added CHK - PRCA*4.5*321
"RTN","RCDPEAP",380,0)
 ; Scratchpad already exists
"RTN","RCDPEAP",381,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0)) I RCSCR G SCRPADX
"RTN","RCDPEAP",382,0)
 ;Create new Scratchpad
"RTN","RCDPEAP",383,0)
 S RCSCR=+$$ADDREC^RCDPEWL(RCERA,.RCDAT) I 'RCSCR Q 0
"RTN","RCDPEAP",384,0)
 ;Add all the ERA lines to the Scratchpad entry
"RTN","RCDPEAP",385,0)
 D ADDLINES^RCDPEWLA(RCSCR)
"RTN","RCDPEAP",386,0)
SCRPADX ;Return Scratchpad IEN
"RTN","RCDPEAP",387,0)
 Q RCSCR
"RTN","RCDPEAP",388,0)
 ;
"RTN","RCDPEAP",389,0)
SETSTA(DA,STATUS,RCREASON) ;Set ERA auto-post status
"RTN","RCDPEAP",390,0)
 ; Log status change
"RTN","RCDPEAP",391,0)
 I '$G(DA) Q
"RTN","RCDPEAP",392,0)
 I $G(STATUS)="" Q
"RTN","RCDPEAP",393,0)
 ;
"RTN","RCDPEAP",394,0)
 D AUDITLOG(DA,STATUS,$G(RCREASON))
"RTN","RCDPEAP",395,0)
 ; Update status
"RTN","RCDPEAP",396,0)
 N DIE,DR
"RTN","RCDPEAP",397,0)
 S DIE="^RCY(344.4,",DR="4.02////"_STATUS D ^DIE
"RTN","RCDPEAP",398,0)
 Q
"RTN","RCDPEAP",399,0)
 ;
"RTN","RCDPEAP",400,0)
 ;
"RTN","RCDPEAP",401,0)
UNLOCKR ;Unlock ERA receipt and deposit ticket
"RTN","RCDPEAP",402,0)
 L -^RCY(344,RCRCPTDA)
"RTN","RCDPEAP",403,0)
 L -^RCY(344.1,RCDEPTDA)
"RTN","RCDPEAP",404,0)
 Q
"RTN","RCDPEAP",405,0)
 ;
"RTN","RCDPEAP",406,0)
UNLOCKE ;Unlock ERA
"RTN","RCDPEAP",407,0)
 L -^RCY(344.4,RCERA)
"RTN","RCDPEAP",408,0)
 Q
"RTN","RCDPEAP",409,0)
 ;
"RTN","RCDPEAP",410,0)
VALID(RCSCR,SCRLINE,RCARRAY) ;Validates Scratchpad line - Used by APAR/Mark for Auto-post
"RTN","RCDPEAP",411,0)
 ;Input
"RTN","RCDPEAP",412,0)
 ;  RCSCR   - #344.4/#344.49 file IEN
"RTN","RCDPEAP",413,0)
 ;  SCRLINE - Subscript of first scratchpad entry for the ERA line
"RTN","RCDPEAP",414,0)
 ;  RCARRAY - Passed reference to result array
"RTN","RCDPEAP",415,0)
 ;Output
"RTN","RCDPEAP",416,0)
 ;  OK      - Boolean 1 or 0
"RTN","RCDPEAP",417,0)
 ;  RCARRAY - Array of claim(s) which fail validation
"RTN","RCDPEAP",418,0)
 ;
"RTN","RCDPEAP",419,0)
 ;            e.g  line number 2
"RTN","RCDPEAP",420,0)
 ;                 RCARRAY(2.001)="K800001^NOT AN ACTIVE CLAIM"
"RTN","RCDPEAP",421,0)
 ;
"RTN","RCDPEAP",422,0)
 ;            e.g. split line number 2
"RTN","RCDPEAP",423,0)
 ;                 RCARRAY(2.001)="K800002^CLAIM REFERRED TO GENERAL COUNCIL"
"RTN","RCDPEAP",424,0)
 ;                 RCARRAY(2.006)="K800003^PAYMENT EXCEEDS CLAIM BALANCE"
"RTN","RCDPEAP",425,0)
 ;
"RTN","RCDPEAP",426,0)
 N CLAIM,DONE,SEQ,SEQ1,SUB,STATUS,WLINE
"RTN","RCDPEAP",427,0)
 K RCARRAY,CLARRAY
"RTN","RCDPEAP",428,0)
 S SUB=SCRLINE,SEQ=$P($G(^RCY(344.49,RCSCR,1,SUB,0)),U),DONE=0
"RTN","RCDPEAP",429,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,SUB)) Q:SUB=""  D  Q:DONE
"RTN","RCDPEAP",430,0)
 . ;Get scratchpad N.001 line and data
"RTN","RCDPEAP",431,0)
 . S WLINE=$G(^RCY(344.49,RCSCR,1,SUB,0)),SEQ1=$P(WLINE,".") I SEQ1'=SEQ S DONE=1 Q
"RTN","RCDPEAP",432,0)
 . ;Get claim number from N.00N line - ignore suspense lines
"RTN","RCDPEAP",433,0)
 . S CLAIM=$P(WLINE,U,7) I 'CLAIM Q
"RTN","RCDPEAP",434,0)
 . ;Claim must be OPEN or ACTIVE
"RTN","RCDPEAP",435,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8) I STATUS'=42,STATUS'=16 S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^NOT AN ACTIVE CLAIM" Q
"RTN","RCDPEAP",436,0)
 . ;Check that payment does not exceed balance and no pending payments (at the time of auto posting)
"RTN","RCDPEAP",437,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3) I '$$CHECKPAY(.CLARRAY,CLAIM) S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^PAYMENT EXCEEDS CLAIM BALANCE" Q
"RTN","RCDPEAP",438,0)
 . ;Check if referred to general council
"RTN","RCDPEAP",439,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^CLAIM REFERRED TO GENERAL COUNCIL" Q
"RTN","RCDPEAP",440,0)
 . ;Check that payment is not negative
"RTN","RCDPEAP",441,0)
 . I $P(WLINE,U,6)<0 S RCARRAY(SEQ1)=$P(WLINE,U,2)_"^PAYMENT AMOUNT IS NEGATIVE" Q
"RTN","RCDPEAP",442,0)
 ;Returns 1 if line is OK
"RTN","RCDPEAP",443,0)
 Q $S($O(RCARRAY(""))]"":0,1:1)
"RTN","RCDPEAP1")
0^49^B105684443
"RTN","RCDPEAP1",1,0)
RCDPEAP1 ;ALB/KML - AUTO POST MATCHING EFT ERA PAIR - CONT. ;Jun 06, 2014@19:11:19
"RTN","RCDPEAP1",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEAP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAP1",4,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPEAP1",5,0)
 ;
"RTN","RCDPEAP1",6,0)
 ;-------------------------------
"RTN","RCDPEAP1",7,0)
 ;RCDPEM0 and RCDPEAP SUBROUTINES
"RTN","RCDPEAP1",8,0)
 ;-------------------------------
"RTN","RCDPEAP1",9,0)
AUTOCHK(RCERA) ;Verify if ERA can be auto-posted - PRE-CHECK USED IN RCDPEM0
"RTN","RCDPEAP1",10,0)
 ; Many checks done by this are also done AUTOCHK2 below so if these are changed, may also need to be changed
"RTN","RCDPEAP1",11,0)
 N NOTOK,RCDSUB,RCD0,RCSCR
"RTN","RCDPEAP1",12,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP1",13,0)
 ;Check for exceptions
"RTN","RCDPEAP1",14,0)
 S RCDSUB=0,NOTOK=0
"RTN","RCDPEAP1",15,0)
 F  S RCDSUB=$O(^RCY(344.4,RCERA,1,RCDSUB)) Q:'RCDSUB  D  Q:NOTOK
"RTN","RCDPEAP1",16,0)
 . ;Exception exists if INVALID BILL NUMBER field is populated in #344.41
"RTN","RCDPEAP1",17,0)
 . S RCD0=$G(^RCY(344.4,RCERA,1,RCDSUB,0)) S:($P(RCD0,U,5)]"") NOTOK=1
"RTN","RCDPEAP1",18,0)
 ;Cannot auto-post if exceptions exist
"RTN","RCDPEAP1",19,0)
 Q:NOTOK 0
"RTN","RCDPEAP1",20,0)
 ; Ignore ERA if ERA level Adjustments exist
"RTN","RCDPEAP1",21,0)
 I $O(^RCY(344.4,RCERA,2,0)) Q 0
"RTN","RCDPEAP1",22,0)
 ; Ignore non-ACH type ERA to prevent CHK type ERA from automatically auto-posting in nightly job - PRCA*4.5*321
"RTN","RCDPEAP1",23,0)
 I $$GET1^DIQ(344.4,RCERA_",",.15)'="ACH" Q 0
"RTN","RCDPEAP1",24,0)
 ;Create scratchpad
"RTN","RCDPEAP1",25,0)
 S RCSCR=$$SCRPAD^RCDPEAP(RCERA) Q:'RCSCR 0
"RTN","RCDPEAP1",26,0)
 ;Ignore ERA if claim level adjustments without payment exist
"RTN","RCDPEAP1",27,0)
 ;This will only get set if the scratchpad is created, not if it already exists.  Looking at the code, it
"RTN","RCDPEAP1",28,0)
 ;will mainly set if there are ERA level adjustments and may get set for unbalanced pairs, which is found
"RTN","RCDPEAP1",29,0)
 ;by the ZEROBAL function.  So, I think this does not have a real purpose but was not 100% sure.
"RTN","RCDPEAP1",30,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D CLEAR^RCDPEAP(RCSCR) Q 0
"RTN","RCDPEAP1",31,0)
 ; ERA needs to drop to standard worklist if adjustment between matching 
"RTN","RCDPEAP1",32,0)
 ;positive/negative does not create a zero balance
"RTN","RCDPEAP1",33,0)
 I '$$ZEROBAL(RCSCR) D CLEAR^RCDPEAP(RCSCR) Q 0
"RTN","RCDPEAP1",34,0)
 ;Clear scratchpad
"RTN","RCDPEAP1",35,0)
 D CLEAR^RCDPEAP(RCSCR)
"RTN","RCDPEAP1",36,0)
 ;This is valid auto-post - return to MATCH^RCPDEM0
"RTN","RCDPEAP1",37,0)
 Q 1
"RTN","RCDPEAP1",38,0)
 ;
"RTN","RCDPEAP1",39,0)
AUTOCHK2(RCERA,RCTYP) ; RCTYP added PRCA*4.5*321
"RTN","RCDPEAP1",40,0)
 ;Check if this entry is an auto-post candidate
"RTN","RCDPEAP1",41,0)
 ;This has the same/similar checks as MATCH^RCDPEM0 and AUTOCHK above.  If those procedures are
"RTN","RCDPEAP1",42,0)
 ;  changed, this may need to updated as well.
"RTN","RCDPEAP1",43,0)
 ;
"RTN","RCDPEAP1",44,0)
 ;Input
"RTN","RCDPEAP1",45,0)
 ;  RCERA: IEN from Electronic Remittance Advice file (#344.4)
"RTN","RCDPEAP1",46,0)
 ;  RCTYP: Call type 0 = Worklist/Mark for autopost  1 = Manual match ; PRCA*4.5*321
"RTN","RCDPEAP1",47,0)
 ;Output
"RTN","RCDPEAP1",48,0)
 ;  1: Auto-Post candidate
"RTN","RCDPEAP1",49,0)
 ;  0^Reason: Not a auto-post candidate and reason
"RTN","RCDPEAP1",50,0)
 ;
"RTN","RCDPEAP1",51,0)
 ; Validate Parameter
"RTN","RCDPEAP1",52,0)
 I '$G(RCERA) Q "0^Invalid Parameter"
"RTN","RCDPEAP1",53,0)
 I $G(RCTYP)="" Q "0^Invalid Parameter" ; PRCA*4.5*321
"RTN","RCDPEAP1",54,0)
 I (RCTYP>1)!(RCTYP<0) Q "0^Invalid Parameter" ; PRCA*4.5*321
"RTN","RCDPEAP1",55,0)
 ;
"RTN","RCDPEAP1",56,0)
 N STATUS,RC0,RCERATYP,RCXCLDE,RCDSUB,NOTOK,RCCREATE,RCSCR
"RTN","RCDPEAP1",57,0)
 K ^TMP($J,"RCDPEWLA")
"RTN","RCDPEAP1",58,0)
 ;
"RTN","RCDPEAP1",59,0)
 ; Check if record exists
"RTN","RCDPEAP1",60,0)
 I '$D(^RCY(344.4,RCERA,0)) Q "0^Invalid ERA record"
"RTN","RCDPEAP1",61,0)
 ;
"RTN","RCDPEAP1",62,0)
 ; Check current status
"RTN","RCDPEAP1",63,0)
 S STATUS=$$GET1^DIQ(344.4,RCERA_",",4.02,"I")
"RTN","RCDPEAP1",64,0)
 I STATUS=0 Q "0^Already marked for Auto-Posting"
"RTN","RCDPEAP1",65,0)
 I STATUS=1 Q "0^Already partially Auto-Posted"
"RTN","RCDPEAP1",66,0)
 I STATUS=2 Q "0^Already completely Auto-Posted"
"RTN","RCDPEAP1",67,0)
 ;
"RTN","RCDPEAP1",68,0)
 ; Check for matching
"RTN","RCDPEAP1",69,0)
 I '$$GET1^DIQ(344.4,RCERA_",",.09,"I") Q "0^ERA not matched"
"RTN","RCDPEAP1",70,0)
 ;
"RTN","RCDPEAP1",71,0)
 ; Check for zero value ERA
"RTN","RCDPEAP1",72,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEAP1",73,0)
 I +$P(RC0,U,5)=0 Q "0^Zero value ERA"
"RTN","RCDPEAP1",74,0)
 ;
"RTN","RCDPEAP1",75,0)
 ; Determine if ERA should be excluded using the site parameters
"RTN","RCDPEAP1",76,0)
 S RCERATYP=$$PHARM(RCERA)
"RTN","RCDPEAP1",77,0)
 ;
"RTN","RCDPEAP1",78,0)
 ; Check if medical claim and auto-posting is turned off
"RTN","RCDPEAP1",79,0)
 I 'RCERATYP,'$P($G(^RCY(344.61,1,0)),U,2) Q "0^Medical auto-posting off"
"RTN","RCDPEAP1",80,0)
 ;
"RTN","RCDPEAP1",81,0)
 ; Check if pharmacy claim and auto-posting is turned off
"RTN","RCDPEAP1",82,0)
 I RCERATYP,'$P($G(^RCY(344.61,1,1)),U,1) Q "0^Pharmacy auto-posting off"
"RTN","RCDPEAP1",83,0)
 ;
"RTN","RCDPEAP1",84,0)
 ; Check if ERA payer is excluded from autopost
"RTN","RCDPEAP1",85,0)
 S RCXCLDE=0
"RTN","RCDPEAP1",86,0)
 S:'RCERATYP RCXCLDE=$$EXCLUDE(RCERA)
"RTN","RCDPEAP1",87,0)
 S:RCERATYP RCXCLDE=$$EXCLDRX(RCERA)
"RTN","RCDPEAP1",88,0)
 I RCXCLDE Q "0^"_$S(RCERATYP:"Pharmacy",1:"Medical")_" payer excluded"
"RTN","RCDPEAP1",89,0)
 ;
"RTN","RCDPEAP1",90,0)
 ; Check for invalid bill number exception
"RTN","RCDPEAP1",91,0)
 S RCDSUB=0,NOTOK=0
"RTN","RCDPEAP1",92,0)
 F  S RCDSUB=$O(^RCY(344.4,RCERA,1,RCDSUB)) Q:'RCDSUB  D  Q:NOTOK
"RTN","RCDPEAP1",93,0)
 . S RCD0=$G(^RCY(344.4,RCERA,1,RCDSUB,0))
"RTN","RCDPEAP1",94,0)
 . I $P(RCD0,U,5)]"" S NOTOK=1
"RTN","RCDPEAP1",95,0)
 I NOTOK Q "0^Invalid Bill Number Exception(s)"
"RTN","RCDPEAP1",96,0)
 ;
"RTN","RCDPEAP1",97,0)
 ; Check for ERA level Adjustments
"RTN","RCDPEAP1",98,0)
 I $O(^RCY(344.4,RCERA,2,0)) Q "0^ERA level Adjustment(s)"
"RTN","RCDPEAP1",99,0)
 ;
"RTN","RCDPEAP1",100,0)
 ; Check if receipt already created
"RTN","RCDPEAP1",101,0)
 I +$P(RC0,U,8) Q "0^ERA has a receipt"
"RTN","RCDPEAP1",102,0)
 ;
"RTN","RCDPEAP1",103,0)
 ; Check payment type of ERA - CHK type is allowed for a manual match
"RTN","RCDPEAP1",104,0)
 I "^ACH^CHK^"'[(U_$P(RC0,U,15)_U) Q "0^Payment Type is not ACH or CHK" ; PRCA*4.5*321
"RTN","RCDPEAP1",105,0)
 ;
"RTN","RCDPEAP1",106,0)
 ; CHK type ERA must be matched to an EFT to be eligible for mark for autopost
"RTN","RCDPEAP1",107,0)
 I $P(RC0,U,15)="CHK",'$O(^RCY(344.31,"AERA",RCERA,"")) Q "0^ERA is not matched to an EFT" ; PRCA*4.5*321
"RTN","RCDPEAP1",108,0)
 ;
"RTN","RCDPEAP1",109,0)
 ; Create scratchpad if needed
"RTN","RCDPEAP1",110,0)
 S RCCREATE=0
"RTN","RCDPEAP1",111,0)
 S RCSCR=+$O(^RCY(344.49,"B",RCERA,0))
"RTN","RCDPEAP1",112,0)
 I 'RCSCR S RCSCR=$$SCRPAD^RCDPEAP(RCERA) S RCCREATE=1
"RTN","RCDPEAP1",113,0)
 I 'RCSCR Q "0^Unable to create scratchpad"
"RTN","RCDPEAP1",114,0)
 ;
"RTN","RCDPEAP1",115,0)
 ; Check if claim level adjustments without payment exist
"RTN","RCDPEAP1",116,0)
 ; Note that PRCA*298 sets this temp global only if the scratchpad is created by the call above ($$SCRPAD^RCDPEAP). If the
"RTN","RCDPEAP1",117,0)
 ;   scratchpad already exists, the TMP global will never get set.   Looking at the code, it will mainly set if there
"RTN","RCDPEAP1",118,0)
 ;   are ERA level adjustments and may get set for unbalanced pairs, which is found by the ZEROBAL function.  So, I think
"RTN","RCDPEAP1",119,0)
 ;   this does not have a real purpose but was not 100% sure and wanted to mimic what AUTOCHK does.
"RTN","RCDPEAP1",120,0)
 I $D(^TMP($J,"RCDPEWLA","ERA LEVEL ADJUSTMENT EXISTS")) D:RCCREATE CLEAR^RCDPEAP(RCSCR) Q "0^Claim Level Adjustments w/o payment"
"RTN","RCDPEAP1",121,0)
 ;
"RTN","RCDPEAP1",122,0)
 ; Check if adjustment between matching positive/negative does not create a zero balance
"RTN","RCDPEAP1",123,0)
 I '$$ZEROBAL(RCSCR) D:RCCREATE CLEAR^RCDPEAP(RCSCR) Q "0^+/- pairs do not balance"
"RTN","RCDPEAP1",124,0)
 ;
"RTN","RCDPEAP1",125,0)
 ; Clear scratchpad if it was created by this function
"RTN","RCDPEAP1",126,0)
 D:RCCREATE CLEAR^RCDPEAP(RCSCR)
"RTN","RCDPEAP1",127,0)
 ;
"RTN","RCDPEAP1",128,0)
 ;If we got this far, this is an autopost candidate so quit with 1
"RTN","RCDPEAP1",129,0)
 Q 1
"RTN","RCDPEAP1",130,0)
 ;
"RTN","RCDPEAP1",131,0)
EXCLUDE(RCERA) ;Verify if auto-posting is allowed for this Payer - PRECHECK USED IN RCDPEM0
"RTN","RCDPEAP1",132,0)
 ;Not allowed if medical auto-posting is switched off
"RTN","RCDPEAP1",133,0)
 Q:'$P($G(^RCY(344.61,1,0)),U,2) 1
"RTN","RCDPEAP1",134,0)
 ;Check if Payer Name and Payer ID from ERA are in auto-posting payer table
"RTN","RCDPEAP1",135,0)
 N RCPNM,RCPID,RCPXDA
"RTN","RCDPEAP1",136,0)
 S RCPNM=$P($G(^RCY(344.4,RCERA,0)),U,6) Q:RCPNM="" 1
"RTN","RCDPEAP1",137,0)
 S RCPID=$P($G(^RCY(344.4,RCERA,0)),U,3) Q:RCPID="" 1
"RTN","RCDPEAP1",138,0)
 ;Auto-post is allowed if this is a new payer (not in table)
"RTN","RCDPEAP1",139,0)
 S RCPXDA=$O(^RCY(344.6,"CPID",RCPNM,RCPID,"")) Q:RCPXDA="" 0
"RTN","RCDPEAP1",140,0)
 ;If payer table entry found check if payer is excluded from medical auto-post
"RTN","RCDPEAP1",141,0)
 Q:$P($G(^RCY(344.6,RCPXDA,0)),U,6)=1 1
"RTN","RCDPEAP1",142,0)
 ;Otherwise it is OK to auto-post
"RTN","RCDPEAP1",143,0)
 Q 0
"RTN","RCDPEAP1",144,0)
 ;
"RTN","RCDPEAP1",145,0)
PHARM(RCERA) ;Check if ERA is for Pharmacy only (ECME number on first line) - CALLED FROM RCDPEM0
"RTN","RCDPEAP1",146,0)
 N SUB S SUB=$O(^RCY(344.4,RCERA,1,0)) Q:'SUB 0
"RTN","RCDPEAP1",147,0)
 Q:$P($G(^RCY(344.4,RCERA,1,SUB,4)),U,2)]"" 1
"RTN","RCDPEAP1",148,0)
 Q 0
"RTN","RCDPEAP1",149,0)
 ;
"RTN","RCDPEAP1",150,0)
ERADET(RCERA,RCRCPTDA,RCLINES) ; called on subsequent attempts of auto-post for a given ERA (DAY 2, DAY 3, ex.)
"RTN","RCDPEAP1",151,0)
 ;  update ERA with receipt or if not posted then update the AUTO-POST REJECTION REASON (#5)
"RTN","RCDPEAP1",152,0)
 ;
"RTN","RCDPEAP1",153,0)
 ; RCERA = ien of entry in file 344.4
"RTN","RCDPEAP1",154,0)
 ; RCRCPTDA = ien of receipt number (344, .01) - optional
"RTN","RCDPEAP1",155,0)
 ; RCLINES = array of ERA line references
"RTN","RCDPEAP1",156,0)
 ;
"RTN","RCDPEAP1",157,0)
 I '$G(RCERA) Q
"RTN","RCDPEAP1",158,0)
 S RCRCPTDA=$G(RCRCPTDA)
"RTN","RCDPEAP1",159,0)
 ;
"RTN","RCDPEAP1",160,0)
 N DA,DIC,DIE,DLAYGO,DO,DR,X
"RTN","RCDPEAP1",161,0)
 ; Update receipt.  If this is the first receipt, put it in the RECEIPT (#08) field.  If not, put in OTHER RECEIPTS multiple (#344.48)
"RTN","RCDPEAP1",162,0)
 I RCRCPTDA D
"RTN","RCDPEAP1",163,0)
 . I $P($G(^RCY(344.4,RCERA,0)),U,8)]"" S DA(1)=RCERA,DIC="^RCY(344.4,"_DA(1)_",8,",DIC(0)="L",X=RCRCPTDA D FILE^DICN I 1
"RTN","RCDPEAP1",164,0)
 . E  S DIE="^RCY(344.4,",DR=".14////1;.08////"_RCRCPTDA,DA=RCERA D ^DIE
"RTN","RCDPEAP1",165,0)
 ;
"RTN","RCDPEAP1",166,0)
 ; Update ERA detail line with Receipt or reject reason as appropriate
"RTN","RCDPEAP1",167,0)
 ; PRCA*4.5*318 begins
"RTN","RCDPEAP1",168,0)
 N RCLIN,REJECT
"RTN","RCDPEAP1",169,0)
 S RCLIN=0
"RTN","RCDPEAP1",170,0)
 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP1",171,0)
 . ; Set REJECT to true if the line was rejected during validation
"RTN","RCDPEAP1",172,0)
 . S REJECT=0 I '$P(RCLINES(RCLIN),U) S REJECT=1
"RTN","RCDPEAP1",173,0)
 . ;If not posted then update the AUTO-POST REJECTION REASON (#5)
"RTN","RCDPEAP1",174,0)
 . ;Otherwise update line with receipt number and autopost date
"RTN","RCDPEAP1",175,0)
 . S DA(1)=RCERA,DA=RCLIN,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP1",176,0)
 . I 'REJECT,'RCRCPTDA Q
"RTN","RCDPEAP1",177,0)
 . I REJECT S DR="5///"_$P(RCLINES(RCLIN),U,3)
"RTN","RCDPEAP1",178,0)
 . E  S DR=".25///"_RCRCPTDA_";9///"_DT
"RTN","RCDPEAP1",179,0)
 . D ^DIE
"RTN","RCDPEAP1",180,0)
 ; PRCA*4.5*318 ends
"RTN","RCDPEAP1",181,0)
 Q
"RTN","RCDPEAP1",182,0)
 ;
"RTN","RCDPEAP1",183,0)
ZEROBAL(RCSCR) ;
"RTN","RCDPEAP1",184,0)
 ; per requirements, only positive/negative payment pairs where payment 
"RTN","RCDPEAP1",185,0)
 ; calculates to zero are allowed for auto-post
"RTN","RCDPEAP1",186,0)
 ; if payment ends up less than zero or greater than zero then ERA cannot
"RTN","RCDPEAP1",187,0)
 ;be autoposted.  
"RTN","RCDPEAP1",188,0)
 ; ERA gets sent to the standard worklist for manual receipt processing
"RTN","RCDPEAP1",189,0)
 ; note:  a payment pair represents 2 EEOB sequences with the same claim
"RTN","RCDPEAP1",190,0)
 ;         RCSCR - 344.49 ien
"RTN","RCDPEAP1",191,0)
 ;         X - returns 1 or 0
"RTN","RCDPEAP1",192,0)
 ; 
"RTN","RCDPEAP1",193,0)
 N SUB,SUB1,WLINE,X,ERALINE
"RTN","RCDPEAP1",194,0)
 S SUB=0,X=1,ERALINE=""
"RTN","RCDPEAP1",195,0)
 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP1",196,0)
 . ;Get scratchpad line and data 
"RTN","RCDPEAP1",197,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,"")) Q:'SUB1  S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAP1",198,0)
 . ;If integer sequence, get ERA line reference then quit for this sequence and go on to the non-integer sequence to finish validation
"RTN","RCDPEAP1",199,0)
 . I $P(WLINE,U)?1N.N S ERALINE=$P(WLINE,U,9) Q 
"RTN","RCDPEAP1",200,0)
 . ; there are multiple EEOB sequences for the specific bill number so an adjustment took place; 
"RTN","RCDPEAP1",201,0)
 . ; if payment adjustment doesn't generate a zero payment balance at 344.491,.06 then this ERA needs to drop to standard worklist
"RTN","RCDPEAP1",202,0)
 . I ERALINE[",",+$P(WLINE,U,6)'=0 S X=0 Q
"RTN","RCDPEAP1",203,0)
 . ;do not autopost ERA if one of payments is negative amount
"RTN","RCDPEAP1",204,0)
 . I $P(WLINE,U,6)<0 S X=0
"RTN","RCDPEAP1",205,0)
 Q X
"RTN","RCDPEAP1",206,0)
 ;
"RTN","RCDPEAP1",207,0)
 ; Verify if auto-posting is allowed for Pharmacy claims and for the Payer - PRECHECK USED IN RCDPEM0
"RTN","RCDPEAP1",208,0)
EXCLDRX(RCERA) ;
"RTN","RCDPEAP1",209,0)
 ;Not allowed if pharmacy auto-posting is switched off
"RTN","RCDPEAP1",210,0)
 Q:'$P($G(^RCY(344.61,1,1)),U,1) 1
"RTN","RCDPEAP1",211,0)
 ;Check if Payer Name and Payer ID from ERA are in auto-posting payer table
"RTN","RCDPEAP1",212,0)
 N RCPNM,RCPID,RCPXDA
"RTN","RCDPEAP1",213,0)
 S RCPNM=$P($G(^RCY(344.4,RCERA,0)),U,6) Q:RCPNM="" 1
"RTN","RCDPEAP1",214,0)
 S RCPID=$P($G(^RCY(344.4,RCERA,0)),U,3) Q:RCPID="" 1
"RTN","RCDPEAP1",215,0)
 ;Auto-post is allowed if this is a new payer (not in table)
"RTN","RCDPEAP1",216,0)
 S RCPXDA=$O(^RCY(344.6,"CPID",RCPNM,RCPID,"")) Q:RCPXDA="" 0
"RTN","RCDPEAP1",217,0)
 ;If payer table entry found check if payer is excluded from pharmacy auto-post
"RTN","RCDPEAP1",218,0)
 Q:$P($G(^RCY(344.6,RCPXDA,0)),U,8)=1 1
"RTN","RCDPEAP1",219,0)
 ;Otherwise it is OK to auto-post
"RTN","RCDPEAP1",220,0)
 Q 0
"RTN","RCDPEAP1",221,0)
 ;
"RTN","RCDPEAP1",222,0)
VALID(RCERA,RCLINES) ;
"RTN","RCDPEAP1",223,0)
 ;Verify which scratchpad lines are able to auto-post - called by EN2^RCDPEAP
"RTN","RCDPEAP1",224,0)
 ;
"RTN","RCDPEAP1",225,0)
 ; RCERA - Electronic Remittance Advice (#344.4) IEN
"RTN","RCDPEAP1",226,0)
 ; RCLINES - Array of ERA line references (passed in by reference)
"RTN","RCDPEAP1",227,0)
 ;           RCLINES(ERALINE)=1  - ERA line(s) are postable.  Also RCLINES counter is incremented.
"RTN","RCDPEAP1",228,0)
 ;           RCLINES(ERALINE)=0^^Reject Reason Code - ERA line(s) are not postable
"RTN","RCDPEAP1",229,0)
 ;           NOTE: ORIGINAL ERA SEQUENCES (#.09) can have multiple ERA line references separated by commas (e.g.,"3,4")
"RTN","RCDPEAP1",230,0)
 ;
"RTN","RCDPEAP1",231,0)
 ;Check for ScratchPad entry.  If missing (should not happen), quit
"RTN","RCDPEAP1",232,0)
 N RCSCR
"RTN","RCDPEAP1",233,0)
 S RCSCR=$O(^RCY(344.49,"B",+$G(RCERA),""))
"RTN","RCDPEAP1",234,0)
 I RCSCR="" S RCLINES=0 Q
"RTN","RCDPEAP1",235,0)
 ;Loop through scratchpad for this ERA
"RTN","RCDPEAP1",236,0)
 N SUB,SUB1,WLINE,ERALINE,PIECE,SEQ,CLAIM,STATUS,CLARRAY,AUTOPOST
"RTN","RCDPEAP1",237,0)
 S SUB=0 F  S SUB=$O(^RCY(344.49,RCSCR,1,"B",SUB)) Q:SUB=""  D
"RTN","RCDPEAP1",238,0)
 . ;Get scratchpad line and data
"RTN","RCDPEAP1",239,0)
 . S SUB1=$O(^RCY(344.49,RCSCR,1,"B",SUB,""))
"RTN","RCDPEAP1",240,0)
 . I 'SUB1 Q
"RTN","RCDPEAP1",241,0)
 . S WLINE=$G(^RCY(344.49,RCSCR,1,SUB1,0))
"RTN","RCDPEAP1",242,0)
 . ;If integer sequence, get ERA line reference and check for auto-post flag
"RTN","RCDPEAP1",243,0)
 . I $P(WLINE,U)?1N.N D  Q
"RTN","RCDPEAP1",244,0)
 .. S ERALINE=$P(WLINE,U,9)
"RTN","RCDPEAP1",245,0)
 .. ; If ERA reference is missing (should not happen), skip ahead to next integer sequence
"RTN","RCDPEAP1",246,0)
 .. I ERALINE="" S SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",247,0)
 .. ; Check for receipt - PRCA*4.5*318 
"RTN","RCDPEAP1",248,0)
 .. I $$GET1^DIQ(344.41,ERALINE_","_RCERA_",",.25)]"" S SUB=SUB\1_".999" Q  ; PRCA*4.5*318
"RTN","RCDPEAP1",249,0)
 .. S AUTOPOST=1
"RTN","RCDPEAP1",250,0)
 .. F PIECE=1:1 S SEQ=$P(ERALINE,",",PIECE) Q:'SEQ  I '$P($G(^RCY(344.4,RCERA,1,SEQ,5)),U,2) S AUTOPOST=0 Q
"RTN","RCDPEAP1",251,0)
 .. ; Unless all of the associated ERA detail lines are set for auto-post, skip ahead to next integer sequence
"RTN","RCDPEAP1",252,0)
 .. I 'AUTOPOST S SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",253,0)
 . ;If no claim number (suspense), set to autopost but check the rest of the lines for the ERA reference
"RTN","RCDPEAP1",254,0)
 . S CLAIM=$P(WLINE,U,7)
"RTN","RCDPEAP1",255,0)
 . I 'CLAIM S RCLINES(ERALINE)=1 Q
"RTN","RCDPEAP1",256,0)
 . ;Quit with error if claim is not OPEN or ACTIVE
"RTN","RCDPEAP1",257,0)
 . S STATUS=$P($G(^PRCA(430,CLAIM,0)),"^",8)
"RTN","RCDPEAP1",258,0)
 . I STATUS'=42,STATUS'=16 S RCLINES(ERALINE)="0^^5",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",259,0)
 . ;Quit with error if referred to general council
"RTN","RCDPEAP1",260,0)
 . I $P($G(^PRCA(430,CLAIM,6)),U,4)]"" S RCLINES(ERALINE)="0^^7",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",261,0)
 . ;Check for negative payment amount
"RTN","RCDPEAP1",262,0)
 . I $P(WLINE,U,6)<0 S RCLINES(ERALINE)="0^^6",SUB=SUB\1_".999" Q
"RTN","RCDPEAP1",263,0)
 . ;Increment claim balance.  If payment exceeds claim balance and no pending payments (at the time of auto posting), quit
"RTN","RCDPEAP1",264,0)
 . ;  with error.  Also deduct the amount from the balance so subsequent, smaller amounts may get posted
"RTN","RCDPEAP1",265,0)
 . S CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))+$P(WLINE,U,3)
"RTN","RCDPEAP1",266,0)
 . I '$$CHECKPAY^RCDPEAP(.CLARRAY,CLAIM) S RCLINES(ERALINE)="0^^3",SUB=SUB\1_".999",CLARRAY(CLAIM)=+$G(CLARRAY(CLAIM))-$P(WLINE,U,3) Q
"RTN","RCDPEAP1",267,0)
 . ;Line is potentially postable - update flag
"RTN","RCDPEAP1",268,0)
 . S RCLINES(ERALINE)=1
"RTN","RCDPEAP1",269,0)
 ;
"RTN","RCDPEAP1",270,0)
 ;Reset the MARK FOR AUTOPOST flag on ERA lines and return count of auto-postable lines - PRCA*4.5*318
"RTN","RCDPEAP1",271,0)
 N DA,DIE,DR,RCLIN,RCI
"RTN","RCDPEAP1",272,0)
 S RCLIN=0,RCLINES=0 F  S RCLIN=$O(RCLINES(RCLIN)) Q:'RCLIN  D
"RTN","RCDPEAP1",273,0)
 . I +RCLINES(RCLIN) S RCLINES=RCLINES+1
"RTN","RCDPEAP1",274,0)
 . ;Set MARK FOR AUTO-POST (#6) to NO for every line
"RTN","RCDPEAP1",275,0)
 . S DA(1)=RCERA,DA=RCLIN,DIE="^RCY(344.4,"_DA(1)_",1,"
"RTN","RCDPEAP1",276,0)
 . S DR="6///0"
"RTN","RCDPEAP1",277,0)
 . D ^DIE
"RTN","RCDPEAP1",278,0)
 Q
"RTN","RCDPEAP1",279,0)
 ;
"RTN","RCDPEAP1",280,0)
UNBAL(RCERA) ; PRCA*4.5*318 added method
"RTN","RCDPEAP1",281,0)
 ; Determine if the ERA total matches the EFT total for the selected ERA
"RTN","RCDPEAP1",282,0)
 ; Input:   RCERA    - Internal IEN of the selected ERA
"RTN","RCDPEAP1",283,0)
 ; Returns: 1 - ERA is unbalanced, 0 otherwise
"RTN","RCDPEAP1",284,0)
 N RCLTOT,RCSUB,RCTOT
"RTN","RCDPEAP1",285,0)
 ;ERA total balance - on matched ERAs the ERA total balance is the same as the EFT total
"RTN","RCDPEAP1",286,0)
 S RCTOT=+$$GET1^DIQ(344.4,RCERA_",",.05)
"RTN","RCDPEAP1",287,0)
 ;Sum of ERA claim line payments
"RTN","RCDPEAP1",288,0)
 S RCSUB=0,RCLTOT=0
"RTN","RCDPEAP1",289,0)
 F  S RCSUB=$O(^RCY(344.4,RCERA,1,RCSUB)) Q:'RCSUB  D
"RTN","RCDPEAP1",290,0)
 . S RCLTOT=RCLTOT+$$GET1^DIQ(344.41,RCSUB_","_RCERA_",",.03)
"RTN","RCDPEAP1",291,0)
 ;Plus sum of ERA adjustment lines
"RTN","RCDPEAP1",292,0)
 S RCSUB=0
"RTN","RCDPEAP1",293,0)
 F  S RCSUB=$O(^RCY(344.4,RCERA,2,RCSUB)) Q:'RCSUB  D
"RTN","RCDPEAP1",294,0)
 . S RCLTOT=RCLTOT+$$GET1^DIQ(344.42,RCSUB_","_RCERA_",",.03)
"RTN","RCDPEAP1",295,0)
 ;Return 1 if total of ERA lines does not match EFT
"RTN","RCDPEAP1",296,0)
 Q $S(RCTOT=RCLTOT:0,1:1)
"RTN","RCDPEAR1")
0^26^B207394984
"RTN","RCDPEAR1",1,0)
RCDPEAR1 ;ALB/TMK/PJH - ERA Unmatched Aging Report (file #344.4) ;Dec 20, 2014@18:41:35
"RTN","RCDPEAR1",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,293,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPEAR1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAR1",4,0)
 Q
"RTN","RCDPEAR1",5,0)
 ;
"RTN","RCDPEAR1",6,0)
 ; PRCA*4.5*298 routine completely refactored
"RTN","RCDPEAR1",7,0)
EN1 ; entry point - ERA Unmatched Aging Report [RCDPE ERA AGING REPORT]
"RTN","RCDPEAR1",8,0)
 ; data from ELECTRONIC REMITTANCE ADVICE file (#344.4)
"RTN","RCDPEAR1",9,0)
 N RCDISPTY,RCDT,RCDTRNG,RCHDR,RCJOB,RCLNCNT,RCLSTMGR,RCOUT,RCPGNUM,RCPYRLST,RCRESPYR
"RTN","RCDPEAR1",10,0)
 N RCSTOP,RCTMPND,RCXCLUDE,RCZROBAL,VAUTD,Y
"RTN","RCDPEAR1",11,0)
 ; RCDISPTY - display type (Excel)
"RTN","RCDPEAR1",12,0)
 ; RCDTRNG - selected date range
"RTN","RCDPEAR1",13,0)
 ; RCDT("BEG") - start date, RCDT("END") - end date
"RTN","RCDPEAR1",14,0)
 ; RCHDR - header array
"RTN","RCDPEAR1",15,0)
 ; RCLSTMGR - list manager flag
"RTN","RCDPEAR1",16,0)
 ; RCRESPYR - payer info response: "1^first payer^last payer" or "2^^" (for all) or "3^^" (for specific)
"RTN","RCDPEAR1",17,0)
 ; RCDTRNG - "1^start date^end date"
"RTN","RCDPEAR1",18,0)
 ; RCPYRLST - payer list for selected payers
"RTN","RCDPEAR1",19,0)
 ; RCXCLUDE("CHAMPVA") - boolean, exclude CHAMPVA
"RTN","RCDPEAR1",20,0)
 ; RCXCLUDE("TRICARE") - boolean, exclude TriCare
"RTN","RCDPEAR1",21,0)
 ; RCZROBAL - zero balance flag
"RTN","RCDPEAR1",22,0)
 ; VAUTD - division information
"RTN","RCDPEAR1",23,0)
 ;
"RTN","RCDPEAR1",24,0)
 K ^TMP($J,"RC TOTAL")  ; clear old totals
"RTN","RCDPEAR1",25,0)
 W !,$$HDRNM D DIVISION^VAUTOMA  ; returns VAUTD
"RTN","RCDPEAR1",26,0)
 I 'VAUTD&($D(VAUTD)'=11) G EN1Q
"RTN","RCDPEAR1",27,0)
 S RCLSTMGR=""  ; initial value, won't be asked if non-null
"RTN","RCDPEAR1",28,0)
 S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEAR1",29,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() I 'RCDTRNG G EN1Q
"RTN","RCDPEAR1",30,0)
 S RCDT("BEG")=$P(RCDTRNG,U,2),RCDT("END")=$P(RCDTRNG,U,3)
"RTN","RCDPEAR1",31,0)
 ;Get insurance company to be used as filter
"RTN","RCDPEAR1",32,0)
 ; PRCA*4.5*284 - RCRESPYR (Type of Response(1=Range,2=All,3=Specific)^From name^To name)
"RTN","RCDPEAR1",33,0)
 S RCRESPYR=$$GETPAY^RCDPEM9(344.4) G:RCRESPYR<0 EN1Q
"RTN","RCDPEAR1",34,0)
 ; Get Zero Balance Filter
"RTN","RCDPEAR1",35,0)
 S RCZROBAL=$$ZROBAL() G:RCZROBAL<0 EN1Q
"RTN","RCDPEAR1",36,0)
 ; CHAMPVA exclusion filter
"RTN","RCDPEAR1",37,0)
 S RCXCLUDE("CHAMPVA")=$$INCHMPVA^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEAR1",38,0)
 G:RCXCLUDE("CHAMPVA")<0 EN1Q
"RTN","RCDPEAR1",39,0)
 ; TRICARE exclusion filter
"RTN","RCDPEAR1",40,0)
 S RCXCLUDE("TRICARE")=$$INTRICAR^RCDPEARL  ; user is asked whether to include
"RTN","RCDPEAR1",41,0)
 G:RCXCLUDE("TRICARE")<0 EN1Q
"RTN","RCDPEAR1",42,0)
 ; display type, ask for Excel format
"RTN","RCDPEAR1",43,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() I RCDISPTY=-1 G EN1Q
"RTN","RCDPEAR1",44,0)
 ; display device info about Excel format, set ListMan flag to prevent question
"RTN","RCDPEAR1",45,0)
 I RCDISPTY S RCLSTMGR="^" D INFO^RCDPEM6
"RTN","RCDPEAR1",46,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR1",47,0)
 S RCJOB=$J  ; needed in RPTOUT
"RTN","RCDPEAR1",48,0)
 ;
"RTN","RCDPEAR1",49,0)
 I '(+RCRESPYR=2) D  ; get payer list if not all payers
"RTN","RCDPEAR1",50,0)
 .N J,P S J=0
"RTN","RCDPEAR1",51,0)
 .F  S J=$O(^TMP("RCSELPAY",$J,J)) Q:'J  S P=$G(^(J)) S:P]"" RCPYRLST(P)=""
"RTN","RCDPEAR1",52,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEAR1",53,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EN1Q
"RTN","RCDPEAR1",54,0)
 ; display in ListMan format and exit on return
"RTN","RCDPEAR1",55,0)
 I RCLSTMGR D  G EN1Q
"RTN","RCDPEAR1",56,0)
 .S RCTMPND=$T(+0)_"^ERA UNMATCHED AGING"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEAR1",57,0)
 .D RPTOUT
"RTN","RCDPEAR1",58,0)
 .N H,L,HDR S L=0
"RTN","RCDPEAR1",59,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEAR1",60,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEAR1",61,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEAR1",62,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEAR1",63,0)
 .; invoke ListMan
"RTN","RCDPEAR1",64,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEAR1",65,0)
 ;
"RTN","RCDPEAR1",66,0)
 ; Ask device
"RTN","RCDPEAR1",67,0)
 N %ZIS S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR1",68,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR1",69,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK,ZTSTOP
"RTN","RCDPEAR1",70,0)
 .S ZTRTN="RPTOUT^RCDPEAR1",ZTDESC="AR - EDI LOCKBOX ERA AGING REPORT"
"RTN","RCDPEAR1",71,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEAR1",72,0)
 .; PRCA*4.5*284 - ^TMP may be on another server, save off specific payers in local
"RTN","RCDPEAR1",73,0)
 .;I +RCRESPYR=3 M RCPYRLST=^TMP("RCSELPAY",$J)
"RTN","RCDPEAR1",74,0)
 .D ^%ZTLOAD
"RTN","RCDPEAR1",75,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPEAR1",76,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR1",77,0)
 ;
"RTN","RCDPEAR1",78,0)
 U IO S RCTMPND="" D RPTOUT
"RTN","RCDPEAR1",79,0)
 ;
"RTN","RCDPEAR1",80,0)
EN1Q ; exit and clean up
"RTN","RCDPEAR1",81,0)
 K ^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J)
"RTN","RCDPEAR1",82,0)
 I '$G(RCLSTMGR) D ^%ZISC
"RTN","RCDPEAR1",83,0)
 Q
"RTN","RCDPEAR1",84,0)
 ;
"RTN","RCDPEAR1",85,0)
RPTOUT ; Entry point for listing report
"RTN","RCDPEAR1",86,0)
 ; RCTMPND = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR1",87,0)
 ;        (for bulletin).  If undefined or null, output is printed
"RTN","RCDPEAR1",88,0)
 ; Return global if RCTMPND not null: ^TMP($J,RCTMPND,line#)=line text
"RTN","RCDPEAR1",89,0)
 N ERADT,PYMNTFRM,RC0,RCEDT,RCEXCEP,RCFLIEN,RCITM,RCNT,RCPAY,RCSF0,RCZ,STA,STNAM,STNUM,X,Y,Z,Z0
"RTN","RCDPEAR1",90,0)
 ; ERADT - date of entry
"RTN","RCDPEAR1",91,0)
 ; RCFLIEN - entry number in file #344.4
"RTN","RCDPEAR1",92,0)
 ; RCITM - entry in ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I
"RTN","RCDPEAR1",93,0)
 ; RCSF0 - zero node of sub-file entry
"RTN","RCDPEAR1",94,0)
 ;
"RTN","RCDPEAR1",95,0)
 S RCTMPND=$G(RCTMPND)  I RCTMPND'="" K ^TMP($J,RCTMPND)  ; clear residual data
"RTN","RCDPEAR1",96,0)
 ; RCNT - count of items
"RTN","RCDPEAR1",97,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR1",98,0)
 S RCRESPYR=+RCRESPYR
"RTN","RCDPEAR1",99,0)
 S RCFLIEN=0,RCNT=0
"RTN","RCDPEAR1",100,0)
 F  S RCFLIEN=$O(^RCY(344.4,"AMATCH",0,RCFLIEN)) Q:'RCFLIEN  D
"RTN","RCDPEAR1",101,0)
 .K RCITM M RCITM=^RCY(344.4,RCFLIEN)  ; grab entire entry
"RTN","RCDPEAR1",102,0)
 .Q:$P($G(RCITM(6)),U)  ; who removed the ERA - PRCA*4.5*293
"RTN","RCDPEAR1",103,0)
 .S ERADT=+$P($G(RCITM(0)),U,7)  ; (#.07) FILE DATE/TIME [7D]
"RTN","RCDPEAR1",104,0)
 .Q:'ERADT  ; no date, don't include
"RTN","RCDPEAR1",105,0)
 .; Check date range
"RTN","RCDPEAR1",106,0)
 .Q:(RCDT("BEG")>ERADT\1)!(ERADT\1>RCDT("END"))
"RTN","RCDPEAR1",107,0)
 .; Check Station/Division
"RTN","RCDPEAR1",108,0)
 .;I '$$CHKDIV^RCDPEDAR(RCFLIEN,1,.VAUTD) Q
"RTN","RCDPEAR1",109,0)
 .I 'VAUTD D ERASTA^RCDPEM4(RCFLIEN,.STA,.STNUM,.STNAM) I '$D(VAUTD(STA)) Q
"RTN","RCDPEAR1",110,0)
 .; Check for payer match
"RTN","RCDPEAR1",111,0)
 .S PYMNTFRM=$P($G(RCITM(0)),U,6)  ; PAYMENT FROM field
"RTN","RCDPEAR1",112,0)
 .I '(RCRESPYR=2),PYMNTFRM]"" Q:'$D(RCPYRLST($$UP^XLFSTR(PYMNTFRM)))  ; will include null payers when ALL payers selected
"RTN","RCDPEAR1",113,0)
 .Q:(PYMNTFRM="")&'(RCRESPYR=2)  ; null payers excluded when not ALL selected
"RTN","RCDPEAR1",114,0)
 .; Check for Zero Bal
"RTN","RCDPEAR1",115,0)
 .I 'RCZROBAL,'$P($G(RCITM(0)),U,5) Q  ; (#.05) TOTAL AMOUNT PAID [5N]
"RTN","RCDPEAR1",116,0)
 .; CHAMPVA check
"RTN","RCDPEAR1",117,0)
 .I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("344.4;"_RCFLIEN) D  Q  ; count and quit if true
"RTN","RCDPEAR1",118,0)
 ..N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEAR1",119,0)
 .;
"RTN","RCDPEAR1",120,0)
 .; TRICARE check
"RTN","RCDPEAR1",121,0)
 .I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("344.4;"_RCFLIEN) D  Q  ; count and quit if true
"RTN","RCDPEAR1",122,0)
 ..N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEAR1",123,0)
 .;
"RTN","RCDPEAR1",124,0)
 .; include on report
"RTN","RCDPEAR1",125,0)
 .S ^TMP($J,"RCERA_AGED",$$FMDIFF^XLFDT(ERADT,DT),RCFLIEN)=0,RCNT=RCNT+1
"RTN","RCDPEAR1",126,0)
 ;
"RTN","RCDPEAR1",127,0)
 S ^TMP($J,"RC TOTAL","COUNT")=RCNT  ; save counter
"RTN","RCDPEAR1",128,0)
 ; build local payer array
"RTN","RCDPEAR1",129,0)
 D SELPAY^RCDPEAR3(RCRESPYR,RCJOB,.RCPAY)
"RTN","RCDPEAR1",130,0)
 ; build header, initialize stop flag
"RTN","RCDPEAR1",131,0)
 D:'RCLSTMGR HDRBLD S RCSTOP=0
"RTN","RCDPEAR1",132,0)
 D:RCLSTMGR HDRLM
"RTN","RCDPEAR1",133,0)
 ;
"RTN","RCDPEAR1",134,0)
 ; Excel format, print and exit
"RTN","RCDPEAR1",135,0)
 I RCDISPTY D EXCEL,^%ZISC G EXIT
"RTN","RCDPEAR1",136,0)
 ;
"RTN","RCDPEAR1",137,0)
 D  ;  Calculate total amount for ERA
"RTN","RCDPEAR1",138,0)
 .N T S T=0  ; total
"RTN","RCDPEAR1",139,0)
 .S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D
"RTN","RCDPEAR1",140,0)
 ..S RC0=$G(^RCY(344.4,RCFLIEN,0)),T=T+$P(RC0,U,5)
"RTN","RCDPEAR1",141,0)
 .;
"RTN","RCDPEAR1",142,0)
 .S ^TMP($J,"RC TOTAL","AMOUNT")=T
"RTN","RCDPEAR1",143,0)
 ;
"RTN","RCDPEAR1",144,0)
 S RCLNCNT=0  ; line counter
"RTN","RCDPEAR1",145,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; first header in report
"RTN","RCDPEAR1",146,0)
 ; list totals
"RTN","RCDPEAR1",147,0)
 S Y=" Total NUMBER Aged Electronic ERA messages found: "_$FN(^TMP($J,"RC TOTAL","COUNT"),",")
"RTN","RCDPEAR1",148,0)
 D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",149,0)
 S Y=" Total AMOUNT Aged Electronic ERA messages found: $"_$FN(^TMP($J,"RC TOTAL","AMOUNT"),",",2)
"RTN","RCDPEAR1",150,0)
 D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",151,0)
 ; if filters selected show total excluded
"RTN","RCDPEAR1",152,0)
 F J="CHAMPVA","TRICARE" I $G(RCXCLUDE(J)) S Y=" "_J_" exclusion count: "_(+$G(^TMP($J,"RC TOTAL",J))) D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",153,0)
 D SL^RCDPEARL(" "_$TR($J("",78)," ","="),.RCLNCNT,RCTMPND)  ; row of equal signs
"RTN","RCDPEAR1",154,0)
 ;
"RTN","RCDPEAR1",155,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D  G:RCSTOP EXIT
"RTN","RCDPEAR1",156,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",157,0)
 .I RCPGNUM D SL^RCDPEARL(" ",.RCLNCNT,.RCTMPND) ; On detail list, skip line
"RTN","RCDPEAR1",158,0)
 .I 'RCLSTMGR,'RCPGNUM!(($Y+5)>IOSL) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",159,0)
 .S RC0=$G(^RCY(344.4,RCFLIEN,0))
"RTN","RCDPEAR1",160,0)
 .S RCEXCEP=$$XCEPT^RCDPEWLP(RCFLIEN)  ; PRCA*4.5*298  assignment of ERA exception flag (will either be "" or "x")
"RTN","RCDPEAR1",161,0)
 .S Z=$$SETSTR^VALM1($J(RCEXCEP_-RCZ,4),"",1,5)  ; PRCA*4.5*298 display ERA exception flag
"RTN","RCDPEAR1",162,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U,2),Z,5,50)
"RTN","RCDPEAR1",163,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",164,0)
 .S Z=$$SETSTR^VALM1($$PAYTIN^RCDPRU2($P(RC0,U,6)_"/"_$P(RC0,U,3),78),"",3,78) ; PRCA*4.5*321
"RTN","RCDPEAR1",165,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",166,0)
 .S Z=$$SETSTR^VALM1($J("",16)_$S($P(RC0,U,7):$$FMTE^XLFDT($P(RC0,U,7)\1,2),1:""),"",1,25)
"RTN","RCDPEAR1",167,0)
 .S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,5),15,2),Z,26,17)
"RTN","RCDPEAR1",168,0)
 .S Z=$$SETSTR^VALM1("  "_+$P(RC0,U,11),Z,43,11)
"RTN","RCDPEAR1",169,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U),Z_$S('$$HACERA^RCDPEU(RCFLIEN):"",1:" (HAC ERA)"),54,16) ; PRCA*4.5*321
"RTN","RCDPEAR1",170,0)
 .S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,4),2),Z,70,10)                 ; PRCA*4.5*321
"RTN","RCDPEAR1",171,0)
 .D SL^RCDPEARL(Z,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",172,0)
 .I "23"[$$ADJ^RCDPEU(RCFLIEN) D SL^RCDPEARL($J("",9)_"** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***",.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",173,0)
 .I $O(^RCY(344.4,RCFLIEN,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",174,0)
 ..N Q
"RTN","RCDPEAR1",175,0)
 ..D DISPADJ^RCDPESR8(RCFLIEN,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",176,0)
 ..I $O(^TMP($J,"RCERA_ADJ",0)) D SL^RCDPEARL($J("",9)_"** GENERAL ADJUSTMENT DATA EXIST FOR THIS ERA **",.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",177,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D SL^RCDPEARL($J("",9)_$G(^TMP($J,"RCERA_ADJ",Q)),.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",178,0)
 .;
"RTN","RCDPEAR1",179,0)
 .N D,RCSFIEN S RCSFIEN=0  ; RCSFIEN - sub-file ien, RCSF0 - zero node of sub-file entry
"RTN","RCDPEAR1",180,0)
 .F  S RCSFIEN=$O(^RCY(344.4,RCFLIEN,1,RCSFIEN)) Q:'RCSFIEN  S RCSF0=$G(^(RCSFIEN,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",181,0)
 ..N RCDATA,RCOUT  ; set by RCDPESR0, RCDATA - message data, RCOUT - formatted message display
"RTN","RCDPEAR1",182,0)
 ..I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",183,0)
 ..S D=$J("",7)_" EEOB Seq #: "_$P(RCSF0,U)_$S($D(^RCY(344.4,RCFLIEN,1,"ATB",1,RCSFIEN)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",184,0)
 ..S D=D_$S('$P(RCSF0,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RCSF0,U,2),0)),0)),U))_"  "_$J(+$P(RCSF0,U,3),"",2)
"RTN","RCDPEAR1",185,0)
 ..D SL^RCDPEARL(D,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",186,0)
 ..Q:$P(RCSF0,U,2)
"RTN","RCDPEAR1",187,0)
 ..D DISP^RCDPESR0("^RCY(344.4,"_RCFLIEN_",1,"_RCSFIEN_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",188,0)
 ..I '$O(RCOUT(0)) D SL^RCDPEARL($J("",9)_" NO DETAIL FOUND",.RCLNCNT,RCTMPND) Q
"RTN","RCDPEAR1",189,0)
 ..S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",190,0)
 ...I 'RCDISPTY,'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR1",191,0)
 ...D SL^RCDPEARL($J("",9)_"*"_RCOUT(Z),.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",192,0)
 ;
"RTN","RCDPEAR1",193,0)
 ; PRCA*4.5*298, put end-of-report into SL^RCDPEARL
"RTN","RCDPEAR1",194,0)
 I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEAR1",195,0)
 ;
"RTN","RCDPEAR1",196,0)
EXIT ;
"RTN","RCDPEAR1",197,0)
 ; PRCA*4.5*298, added ListMan check
"RTN","RCDPEAR1",198,0)
 I '$D(ZTQUEUED),'RCLSTMGR D
"RTN","RCDPEAR1",199,0)
 .I 'RCSTOP,RCPGNUM,RCTMPND="" D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR1",200,0)
 .D ^%ZISC
"RTN","RCDPEAR1",201,0)
 ;
"RTN","RCDPEAR1",202,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RCDPEAR1",203,0)
 K ^TMP($J,"RCERA_AGED"),^TMP("RCSELPAY",$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEAR1",204,0)
 Q
"RTN","RCDPEAR1",205,0)
 ;
"RTN","RCDPEAR1",206,0)
HDRBLD ; Create the report header
"RTN","RCDPEAR1",207,0)
 ; Input:   RCDISPTY        - 1 - Output to excel, 0 otherwise
"RTN","RCDPEAR1",208,0)
 ;          RCDTRNG         - Date range selected
"RTN","RCDPEAR1",209,0)
 ;          RCXCLUDE        - TRICARE /CHAMPVA flags
"RTN","RCDPEAR1",210,0)
 ;          VAUTD           - Divisions to include in report (if listed in VAUTD array)
"RTN","RCDPEAR1",211,0)
 ; Output:  RCHDR(0)        - Header text line count
"RTN","RCDPEAR1",212,0)
 ;          RCHDR(1)        - Excel column data (only set If DISPTY=1)
"RTN","RCDPEAR1",213,0)
 ;          RCHDR("XECUTE") - M code for page number
"RTN","RCDPEAR1",214,0)
 ;          RCHDR("RUNDATE")- Date/time report generated, external format
"RTN","RCDPEAR1",215,0)
 ;          RCPGNUM         - Page counter
"RTN","RCDPEAR1",216,0)
 ;          RCSTOP          - Flag to exit
"RTN","RCDPEAR1",217,0)
 ;
"RTN","RCDPEAR1",218,0)
 N CHATRI,DIV,HCNT,XX,Y
"RTN","RCDPEAR1",219,0)
 K RCHDR
"RTN","RCDPEAR1",220,0)
 S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR1",221,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEAR1",222,0)
 . S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEAR1",223,0)
 . S XX="Aged Days^Trace #^Payment From/ID^ERA Date^File Date^Amount Paid"
"RTN","RCDPEAR1",224,0)
 . S XX=XX_"^EEOB Cnt^ERA #^EEOB Detail"
"RTN","RCDPEAR1",225,0)
 . S RCHDR(1)=XX
"RTN","RCDPEAR1",226,0)
 ;
"RTN","RCDPEAR1",227,0)
 S XX="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"
"RTN","RCDPEAR1",228,0)
 S XX=XX_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"_"_""          Page: ""_RCPGNUM"
"RTN","RCDPEAR1",229,0)
 S RCHDR("XECUTE")=XX
"RTN","RCDPEAR1",230,0)
 S HCNT=1
"RTN","RCDPEAR1",231,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1
"RTN","RCDPEAR1",232,0)
 S RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAR1",233,0)
 ;
"RTN","RCDPEAR1",234,0)
 ; divisions
"RTN","RCDPEAR1",235,0)
 S Y="DIVISIONS: "
"RTN","RCDPEAR1",236,0)
 I $D(VAUTD)=1 S Y=Y_"ALL",Y=$J("",80-$L(Y)\2)_Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",237,0)
 I $D(VAUTD)>1 D
"RTN","RCDPEAR1",238,0)
 . N S,X S S=0
"RTN","RCDPEAR1",239,0)
 . F  S S=$O(VAUTD(S)) Q:'S  D
"RTN","RCDPEAR1",240,0)
 . . S X=VAUTD(S)_$S($O(VAUTD(S)):", ",1:"")
"RTN","RCDPEAR1",241,0)
 . . I $L(X)+$L(Y)>80 D
"RTN","RCDPEAR1",242,0)
 . . . S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y,Y=$J(" ",12)
"RTN","RCDPEAR1",243,0)
 . . S Y=Y_X
"RTN","RCDPEAR1",244,0)
 . ;
"RTN","RCDPEAR1",245,0)
 . S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",246,0)
 ;
"RTN","RCDPEAR1",247,0)
 ; Payers
"RTN","RCDPEAR1",248,0)
 S Y="PAYERS: "
"RTN","RCDPEAR1",249,0)
 I $D(RCPAY)=1 D
"RTN","RCDPEAR1",250,0)
 . S Y=Y_RCPAY,Y=Y,HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAR1",251,0)
 I $D(RCPAY)=10 D
"RTN","RCDPEAR1",252,0)
 . N S,X
"RTN","RCDPEAR1",253,0)
 . S S=0
"RTN","RCDPEAR1",254,0)
 . F  S S=$O(RCPAY(S)) Q:'S  D
"RTN","RCDPEAR1",255,0)
 . . S X=RCPAY(S)_$S($O(RCPAY(S)):", ",1:"")
"RTN","RCDPEAR1",256,0)
 . . I $L(X)+$L(Y)>80 D
"RTN","RCDPEAR1",257,0)
 . . . S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y,Y=$J(" ",8)
"RTN","RCDPEAR1",258,0)
 . . S Y=Y_X
"RTN","RCDPEAR1",259,0)
 . ;
"RTN","RCDPEAR1",260,0)
 . S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",261,0)
 ;
"RTN","RCDPEAR1",262,0)
 S Y("1ST")=$P(RCDTRNG,U,2),Y("LST")=$P(RCDTRNG,U,3)
"RTN","RCDPEAR1",263,0)
 F Y="1ST","LST" S Y(Y)=$$FMTE^XLFDT(Y(Y),"2Z")
"RTN","RCDPEAR1",264,0)
 S Y="DATE RANGE: "_Y("1ST")_" - "_Y("LST")_" (ERA FILE DATE)"
"RTN","RCDPEAR1",265,0)
 S CHATRI="" F J="CHAMPVA","TRICARE" S Y=Y_"    "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")
"RTN","RCDPEAR1",266,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEAR1",267,0)
 ;
"RTN","RCDPEAR1",268,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAR1",269,0)
 S Y="AGED"
"RTN","RCDPEAR1",270,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",271,0)
 S Y="DAYS  TRACE #"
"RTN","RCDPEAR1",272,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",273,0)
 S Y="  PAYMENT FROM/ID" ; PRCA*4.5*321 - Allow extra room for 60 character Payer Name
"RTN","RCDPEAR1",274,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",275,0)
 S Y="                FILE DATE      AMOUNT PAID  EEOB CNT   ERA #           ERA DATE"
"RTN","RCDPEAR1",276,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",277,0)
 S Y="",$P(Y,"=",80)="",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",278,0)
 S RCHDR(0)=HCNT  ; total lines in header
"RTN","RCDPEAR1",279,0)
 Q
"RTN","RCDPEAR1",280,0)
 ;
"RTN","RCDPEAR1",281,0)
HDRLM ; Create the list manager version of the report header
"RTN","RCDPEAR1",282,0)
 ; Input:   RCDTRNG     - Date range filter value to be printed as part of the
"RTN","RCDPEAR1",283,0)
 ;                        header
"RTN","RCDPEAR1",284,0)
 ;          RCPAY       - 1 - All Payers
"RTN","RCDPEAR1",285,0)
 ;                        2 - Selected Payers
"RTN","RCDPEAR1",286,0)
 ;          RCPAY()     - Array of selected Payers if RCPAY=2
"RTN","RCDPEAR1",287,0)
 ;          RCLSTMGR    -
"RTN","RCDPEAR1",288,0)
 ;          VAUTD       - 1 - All divisions
"RTN","RCDPEAR1",289,0)
 ;                        2 - Selected divisions
"RTN","RCDPEAR1",290,0)
 ;          VAUTD()     - Array of selected divisions (if VAUTD=2)
"RTN","RCDPEAR1",291,0)
 ; Output:  RCHDR(0)    - Header text line count
"RTN","RCDPEAR1",292,0)
 ;
"RTN","RCDPEAR1",293,0)
 N DATE,DIV,HCNT,MSG,Y,Z0
"RTN","RCDPEAR1",294,0)
 K RCHDR
"RTN","RCDPEAR1",295,0)
 S Z0="",RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR1",296,0)
 S RCHDR(1)="DATE RANGE: "_$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z")
"RTN","RCDPEAR1",297,0)
 S RCHDR(1)=RCHDR(1)_" - "_$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z")_" (ERA FILE DATE)"
"RTN","RCDPEAR1",298,0)
 S RCHDR(1)=RCHDR(1)_"    TRICARE: "_$S($G(RCXCLUDE("TRICARE")):"NO",1:"YES")
"RTN","RCDPEAR1",299,0)
 S RCHDR(1)=RCHDR(1)_"    CHAMPVA: "_$S($G(RCXCLUDE("CHAMPVA")):"NO",1:"YES")
"RTN","RCDPEAR1",300,0)
 S HCNT=1
"RTN","RCDPEAR1",301,0)
 ;
"RTN","RCDPEAR1",302,0)
 S Y="DIVISIONS: "
"RTN","RCDPEAR1",303,0)
 I $D(VAUTD)=1 S Y=Y_"ALL",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",304,0)
 I $D(VAUTD)>1 D
"RTN","RCDPEAR1",305,0)
 . N S,X
"RTN","RCDPEAR1",306,0)
 . S S=0
"RTN","RCDPEAR1",307,0)
 . F  S S=$O(VAUTD(S)) Q:'S  D
"RTN","RCDPEAR1",308,0)
 . . S X=VAUTD(S)_$S($O(VAUTD(S)):", ",1:"")
"RTN","RCDPEAR1",309,0)
 . . I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",12)
"RTN","RCDPEAR1",310,0)
 . . S Y=Y_X
"RTN","RCDPEAR1",311,0)
 .;
"RTN","RCDPEAR1",312,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",313,0)
 ;
"RTN","RCDPEAR1",314,0)
 ; Payers
"RTN","RCDPEAR1",315,0)
 S Y="PAYERS: "
"RTN","RCDPEAR1",316,0)
 I $D(RCPAY)=1 D 
"RTN","RCDPEAR1",317,0)
 . S Y=Y_RCPAY,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",318,0)
 I $D(RCPAY)=10 D
"RTN","RCDPEAR1",319,0)
 . N S,X S S=0 F  S S=$O(RCPAY(S)) Q:'S  D
"RTN","RCDPEAR1",320,0)
 . . S X=RCPAY(S)_$S($O(RCPAY(S)):", ",1:"")
"RTN","RCDPEAR1",321,0)
 . . I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",8)
"RTN","RCDPEAR1",322,0)
 . . S Y=Y_X
"RTN","RCDPEAR1",323,0)
 . ;
"RTN","RCDPEAR1",324,0)
 . S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR1",325,0)
 ;
"RTN","RCDPEAR1",326,0)
 S Y="AGED"
"RTN","RCDPEAR1",327,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",328,0)
 S Y="DAYS  TRACE #"
"RTN","RCDPEAR1",329,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",330,0)
 S Y="  PAYMENT FROM/ID" ; PRCA*4.5*321 - Allow extra room for 60 character Payer Name
"RTN","RCDPEAR1",331,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",332,0)
 S Y="                FILE DATE      AMOUNT PAID  EEOB CNT   ERA #           ERA DATE"
"RTN","RCDPEAR1",333,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR1",334,0)
 S RCHDR(0)=HCNT  ; total lines in header
"RTN","RCDPEAR1",335,0)
 Q
"RTN","RCDPEAR1",336,0)
 ; extrinsic variable, name for header PRCA*4.5*298
"RTN","RCDPEAR1",337,0)
HDRNM() Q "ERA UNMATCHED AGING REPORT"
"RTN","RCDPEAR1",338,0)
 ;
"RTN","RCDPEAR1",339,0)
EXCEL ; Print report to screen, one record per line for export to MS Excel.
"RTN","RCDPEAR1",340,0)
 N D,RCSF0,RC1ST,RCEXCEP,RCFLIEN,RCLN,RCSFIEN,RCZ,Z
"RTN","RCDPEAR1",341,0)
 ; RCSFIEN - sub-file ien
"RTN","RCDPEAR1",342,0)
 D HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEAR1",343,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCERA_AGED",RCZ)) Q:RCZ=""  S RCFLIEN=0 F  S RCFLIEN=$O(^TMP($J,"RCERA_AGED",RCZ,RCFLIEN)) Q:'RCFLIEN  D  G:RCSTOP PRTQ2
"RTN","RCDPEAR1",344,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR1",345,0)
 .S RC0=$G(^RCY(344.4,RCFLIEN,0))
"RTN","RCDPEAR1",346,0)
 .S RCEXCEP=$$XCEPT^RCDPEWLP(RCFLIEN)  ; PRCA*4.5*298  assignment of ERA exception flag (will either be "" or "x")
"RTN","RCDPEAR1",347,0)
 .S Z=$J(RCEXCEP_-RCZ,4)_U_$P(RC0,U,2)_U_$P(RC0,U,6)_"/"_$P(RC0,U,3)_U_$$FMTE^XLFDT($P(RC0,U,4),2)_U_$$FMTE^XLFDT($P(RC0,U,7),2)_U   ;PRCA*4.5*298 display ERA exception flag
"RTN","RCDPEAR1",348,0)
 .S Z=Z_$P(RC0,U,5)_U_$P(RC0,U,11)_U_$P(RC0,U)
"RTN","RCDPEAR1",349,0)
 .W !,Z
"RTN","RCDPEAR1",350,0)
 .S RCLN=Z,RC1ST=0
"RTN","RCDPEAR1",351,0)
 .K Z
"RTN","RCDPEAR1",352,0)
 .I "23"[$$ADJ^RCDPEU(RCFLIEN) D LSTXCEL W "^** CLAIM LEVEL ADJUSTMENTS EXIST FOR THIS ERA ***"
"RTN","RCDPEAR1",353,0)
 .I $O(^RCY(344.4,RCFLIEN,2,0)) D  ; ERA level adjustments exist
"RTN","RCDPEAR1",354,0)
 ..N Q
"RTN","RCDPEAR1",355,0)
 ..D DISPADJ^RCDPESR8(RCFLIEN,"^TMP("_$J_",""RCERA_ADJ"")")
"RTN","RCDPEAR1",356,0)
 ..I $O(^TMP($J,"RCERA_ADJ",0)) D LSTXCEL W "^** GENERAL ADJUSTMENT DATA EXISTS FOR ERA **"
"RTN","RCDPEAR1",357,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCERA_ADJ",Q)) Q:'Q  D LSTXCEL W "^"_$G(^TMP($J,"RCERA_ADJ",Q))
"RTN","RCDPEAR1",358,0)
 .;
"RTN","RCDPEAR1",359,0)
 .S RCSFIEN=0 F  S RCSFIEN=$O(^RCY(344.4,RCFLIEN,1,RCSFIEN)) Q:'RCSFIEN  S RCSF0=$G(^(RCSFIEN,0)) D  Q:RCSTOP
"RTN","RCDPEAR1",360,0)
 ..N D
"RTN","RCDPEAR1",361,0)
 ..K RCOUT
"RTN","RCDPEAR1",362,0)
 ..S D=" EEOB Seq #: "_$P(RCSF0,U)_$S($D(^RCY(344.4,RCFLIEN,1,"ATB",1,RCSFIEN)):" (REVERSAL)",1:"")_"  EEOB "
"RTN","RCDPEAR1",363,0)
 ..S D=D_$S('$P(RCSF0,U,2):"not on file",1:"on file for "_$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(RCSF0,U,2),0)),0)),U))_"  "_$J(+$P(RCSF0,U,3),"",2)
"RTN","RCDPEAR1",364,0)
 ..D LSTXCEL W "^",D
"RTN","RCDPEAR1",365,0)
 ..Q:$P(RCSF0,U,2)
"RTN","RCDPEAR1",366,0)
 ..D DISP^RCDPESR0("^RCY(344.4,"_RCFLIEN_",1,"_RCSFIEN_",1)","RCDATA",1,"RCOUT",68,1)
"RTN","RCDPEAR1",367,0)
 ..I '$O(RCOUT(0)) D LSTXCEL W "^NO DETAIL FOUND" Q
"RTN","RCDPEAR1",368,0)
 ..S Z=0 F  S Z=$O(RCOUT(Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR1",369,0)
 ...D LSTXCEL W "^*"_RCOUT(Z)
"RTN","RCDPEAR1",370,0)
 ;
"RTN","RCDPEAR1",371,0)
 W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPEAR1",372,0)
 Q
"RTN","RCDPEAR1",373,0)
 ;
"RTN","RCDPEAR1",374,0)
LSTXCEL ; Display repeat info line before each EEOB detail section.
"RTN","RCDPEAR1",375,0)
 ; First detail line does not need it
"RTN","RCDPEAR1",376,0)
 I RC1ST W !,RCLN Q
"RTN","RCDPEAR1",377,0)
 S RC1ST=1 Q
"RTN","RCDPEAR1",378,0)
 ;
"RTN","RCDPEAR1",379,0)
PRTQ2 I '$D(ZTQUEUED),'RCSTOP,RCPGNUM,RCTMPND="" D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR1",380,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR1",381,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR1",382,0)
 K ^TMP($J,"RCEFT_AGED")
"RTN","RCDPEAR1",383,0)
 Q
"RTN","RCDPEAR1",384,0)
 ;
"RTN","RCDPEAR1",385,0)
ZROBAL() ; function, Get Zero Payment Filter
"RTN","RCDPEAR1",386,0)
 ; returns 1 for yes, zero for no, -1 on '^' or timeout
"RTN","RCDPEAR1",387,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEAR1",388,0)
 S DIR(0)="YA",DIR("A")="Include Zero payment amounts? (Y/N): ",DIR("B")="YES"
"RTN","RCDPEAR1",389,0)
 D ^DIR
"RTN","RCDPEAR1",390,0)
 I $D(DUOUT)!$D(DIRUT)!$D(DTOUT) S Y=-1
"RTN","RCDPEAR1",391,0)
 Q Y
"RTN","RCDPEAR2")
0^27^B111529501
"RTN","RCDPEAR2",1,0)
RCDPEAR2 ;ALB/TMK/PJH - EFT Unmatched Aging Report - FILE 344.3 ;Nov 24, 2014@18:31:57
"RTN","RCDPEAR2",2,0)
 ;;4.5;Accounts Receivable;**173,269,276,284,283,293,298,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEAR2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAR2",4,0)
 Q
"RTN","RCDPEAR2",5,0)
 ;
"RTN","RCDPEAR2",6,0)
 ; PRCA*4.5*298 notes at bottom
"RTN","RCDPEAR2",7,0)
EN1 ; option: EFT Unmatched Aging Report [RCDPE EFT AGING REPORT]
"RTN","RCDPEAR2",8,0)
 N %ZIS,DIC,DIR,DTOUT,DUOUT,POP,RCDISPTY,RCDTRNG,RCEND,RCHDR,RCJOB
"RTN","RCDPEAR2",9,0)
 N RCJOB1,RCLSTMGR,RCNP,RCPYRLST,RCPGNUM,RCSTART,RCTMPND,X,Y
"RTN","RCDPEAR2",10,0)
 ; RCDISPTY = display type
"RTN","RCDPEAR2",11,0)
 ; RCEND = end date
"RTN","RCDPEAR2",12,0)
 ; RCLSTMGR = list manager flag
"RTN","RCDPEAR2",13,0)
 ; RCNP = payer info: "1^first payer^last payer" or "2^^" (for all)
"RTN","RCDPEAR2",14,0)
 ; RCPYRLST - payer list for selected payers
"RTN","RCDPEAR2",15,0)
 ; RCDTRNG= "1^start date^end date"
"RTN","RCDPEAR2",16,0)
 ; RCSTART = start date
"RTN","RCDPEAR2",17,0)
 ; RCTMPND = name of the subscript for ^TMP to use
"RTN","RCDPEAR2",18,0)
 ;
"RTN","RCDPEAR2",19,0)
 S RCLSTMGR=""  ; initial value
"RTN","RCDPEAR2",20,0)
 S RCDTRNG=$$DTRNG^RCDPEM4() G:'(RCDTRNG>0) EN1Q
"RTN","RCDPEAR2",21,0)
 S RCSTART=$P(RCDTRNG,U,2)-1,RCEND=$P(RCDTRNG,U,3)
"RTN","RCDPEAR2",22,0)
 ;Get insurance company to be used as filter
"RTN","RCDPEAR2",23,0)
 ; PRCA*4.5*284 - RCNP (Type of Response(1=Range,2=All,3=Specific)^From name^To name)
"RTN","RCDPEAR2",24,0)
 S RCNP=$$GETPAY^RCDPEM9(344.31) G:RCNP<0 EN1Q
"RTN","RCDPEAR2",25,0)
 ;Get display type
"RTN","RCDPEAR2",26,0)
 S RCDISPTY=$$DISPTY^RCDPEM3() G:RCDISPTY<0 EN1Q
"RTN","RCDPEAR2",27,0)
 ; display device info about Excel format, set ListMan flag to prevent question
"RTN","RCDPEAR2",28,0)
 I RCDISPTY S RCLSTMGR="^" D INFO^RCDPEM6
"RTN","RCDPEAR2",29,0)
 I $D(DUOUT)!$D(DTOUT) G EN1Q
"RTN","RCDPEAR2",30,0)
 S RCJOB=$J  ; needed in RPTOUT
"RTN","RCDPEAR2",31,0)
 ;
"RTN","RCDPEAR2",32,0)
 ; if not output to Excel ask for ListMan display, exit if timeout or '^' - PRCA*4.5*298
"RTN","RCDPEAR2",33,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL I RCLSTMGR<0 G EN1Q
"RTN","RCDPEAR2",34,0)
 ; display in ListMan format and exit on return
"RTN","RCDPEAR2",35,0)
 I RCLSTMGR D  G EN1Q
"RTN","RCDPEAR2",36,0)
 .S RCTMPND=$T(+0)_"^EFT UNMATCHED AGING"  K ^TMP($J,RCTMPND)  ; clean any residue
"RTN","RCDPEAR2",37,0)
 .D RPTOUT
"RTN","RCDPEAR2",38,0)
 .N H,L,HDR S L=0
"RTN","RCDPEAR2",39,0)
 .S HDR("TITLE")=$$HDRNM
"RTN","RCDPEAR2",40,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 3 lines of report header
"RTN","RCDPEAR2",41,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEAR2",42,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEAR2",43,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEAR2",44,0)
 ;
"RTN","RCDPEAR2",45,0)
 S RCJOB=$J,RCTMPND=""
"RTN","RCDPEAR2",46,0)
 ; Ask device
"RTN","RCDPEAR2",47,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","RCDPEAR2",48,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","RCDPEAR2",49,0)
 .N ZTDESC,ZTRTN,ZTSAVE,ZTSTOP
"RTN","RCDPEAR2",50,0)
 .S ZTRTN="RPTOUT^RCDPEAR2",ZTDESC="EFT AGING REPORT"
"RTN","RCDPEAR2",51,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEAR2",52,0)
 .; PRCA*4.5*284 - Because TMP global may be on another server, save off specific payers in local
"RTN","RCDPEAR2",53,0)
 .I +RCNP=3 M RCPYRLST=^TMP("RCSELPAY",$J)
"RTN","RCDPEAR2",54,0)
 .D ^%ZTLOAD
"RTN","RCDPEAR2",55,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPEAR2",56,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEAR2",57,0)
 ;
"RTN","RCDPEAR2",58,0)
 U IO D RPTOUT
"RTN","RCDPEAR2",59,0)
 ;
"RTN","RCDPEAR2",60,0)
EN1Q ; exit and clean up
"RTN","RCDPEAR2",61,0)
 I 'RCLSTMGR D ^%ZISC
"RTN","RCDPEAR2",62,0)
 K ^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J)
"RTN","RCDPEAR2",63,0)
 Q
"RTN","RCDPEAR2",64,0)
 ;
"RTN","RCDPEAR2",65,0)
RPTOUT ; Entry point for queued job, nightly job
"RTN","RCDPEAR2",66,0)
 ; RCTMPND = name of the subscript for ^TMP to use to return all lines
"RTN","RCDPEAR2",67,0)
 ;         If undefined or null, output is printed
"RTN","RCDPEAR2",68,0)
 ; Return global if RCTMPND not null: ^TMP($J,RCTMPND,line#)=line text
"RTN","RCDPEAR2",69,0)
 N DIC,DUOUT,RC0,RC13,RC3443,RCCT,RCIEN,RCNT,RCOUT,RCPAY,RCPAYER,RCPAYID
"RTN","RCDPEAR2",70,0)
 N RCSTOP,RCTOT,RCZ,X,XX,YY,Z,Z0,ZZ
"RTN","RCDPEAR2",71,0)
 S RCTMPND=$G(RCTMPND)
"RTN","RCDPEAR2",72,0)
 S (RCCT,RCSTOP,RCNT,RCTOT)=0
"RTN","RCDPEAR2",73,0)
 K ^TMP($J,"RCERA_AGED"),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR2",74,0)
 ; PRCA*4.5*284 - Queued job needs to reload payer selection list
"RTN","RCDPEAR2",75,0)
 I $G(RCJOB)'="",RCJOB'=$J D
"RTN","RCDPEAR2",76,0)
 .K ^TMP("RCSELPAY",$J)
"RTN","RCDPEAR2",77,0)
 .D RLOAD^RCDPEAR3(344.31)
"RTN","RCDPEAR2",78,0)
 .S RCJOB=$J
"RTN","RCDPEAR2",79,0)
 ; build local payer array here
"RTN","RCDPEAR2",80,0)
 S RCNP=+RCNP
"RTN","RCDPEAR2",81,0)
 D SELPAY^RCDPEAR3(RCNP,RCJOB,.RCPAY)
"RTN","RCDPEAR2",82,0)
 I RCTMPND'="" K ^TMP($J,RCTMPND)
"RTN","RCDPEAR2",83,0)
 ; cross-ref on file #344.31 field #.08 - MATCH STATUS
"RTN","RCDPEAR2",84,0)
 S RCIEN=0 F  S RCIEN=$O(^RCY(344.31,"AMATCH",0,RCIEN)) Q:'RCIEN  D   ;unmatched entries only
"RTN","RCDPEAR2",85,0)
 .Q:$P($G(^RCY(344.31,RCIEN,3)),U)  ; EFT has been removed
"RTN","RCDPEAR2",86,0)
 .Q:$P($G(^RCY(344.31,RCIEN,0)),U,7)=0  ; payment of zero
"RTN","RCDPEAR2",87,0)
 .;
"RTN","RCDPEAR2",88,0)
 .S RC13=$P($G(^RCY(344.31,RCIEN,0)),U,13)  ; date received
"RTN","RCDPEAR2",89,0)
 .; Check for payer match
"RTN","RCDPEAR2",90,0)
 .I '$$CHKPYR^RCDPEDAR(RCIEN,0,RCJOB,RCNP) Q   ;PRCA*4.5*318 passed existing variable RCNP
"RTN","RCDPEAR2",91,0)
 .; Check date range
"RTN","RCDPEAR2",92,0)
 .Q:(RCSTART>RC13)!(RC13>RCEND)
"RTN","RCDPEAR2",93,0)
 .; Passed all the filters - include on report
"RTN","RCDPEAR2",94,0)
 .S ^TMP($J,"RCEFT_AGED",$$FMDIFF^XLFDT(RC13,DT),RCIEN)=0,RCNT=RCNT+1
"RTN","RCDPEAR2",95,0)
 ;
"RTN","RCDPEAR2",96,0)
 D:'RCLSTMGR HDRBLD  ; create header
"RTN","RCDPEAR2",97,0)
 D:RCLSTMGR HDRLM  ; create Listman header
"RTN","RCDPEAR2",98,0)
 ;
"RTN","RCDPEAR2",99,0)
 I RCDISPTY D EXCEL Q
"RTN","RCDPEAR2",100,0)
 ;
"RTN","RCDPEAR2",101,0)
 ; Find total amount of EFTs
"RTN","RCDPEAR2",102,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",103,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",104,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",105,0)
 .S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",106,0)
 ;
"RTN","RCDPEAR2",107,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)  ; initial report header
"RTN","RCDPEAR2",108,0)
 ;
"RTN","RCDPEAR2",109,0)
 S Z=$$SETSTR^VALM1("Totals:","",1,79)
"RTN","RCDPEAR2",110,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",111,0)
 S Z=$$SETSTR^VALM1(" Number Aged Electronic EFT Messages Found: "_RCNT,"",1,79)
"RTN","RCDPEAR2",112,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",113,0)
 S Z=$$SETSTR^VALM1(" Amount Aged Electronic EFT Messages Found: $"_$FN(+RCTOT,",",2),"",1,79)
"RTN","RCDPEAR2",114,0)
 D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",115,0)
 D SL^RCDPEARL($TR($J("",IOM)," ","="),.RCCT,RCTMPND)
"RTN","RCDPEAR2",116,0)
 ;
"RTN","RCDPEAR2",117,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ
"RTN","RCDPEAR2",118,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPGNUM) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",119,0)
 .I RCPGNUM D SL^RCDPEARL(" ",.RCCT,.RCTMPND) ; On detail list, skip line
"RTN","RCDPEAR2",120,0)
 .I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR2",121,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",122,0)
 .S RCTOT=RCTOT+$P(RC0,U,7)
"RTN","RCDPEAR2",123,0)
 .S Z=$$SETSTR^VALM1($J(-RCZ,4),"",1,4)
"RTN","RCDPEAR2",124,0)
 .; PRCA*4.5*318 moved deposit date up a row to give more room for payer/payer ID
"RTN","RCDPEAR2",125,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC0,U,4),Z,5,52)  ;trace#
"RTN","RCDPEAR2",126,0)
 .S Z=$$SETSTR^VALM1($$FMTE^XLFDT($P(RC0,U,12),2),Z,73,8)  ; deposit date
"RTN","RCDPEAR2",127,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",128,0)
 .N RCPAY S RCPAY=$P(RC0,U,2) S:RCPAY="" RCPAY="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEAR2",129,0)
 .S RCPAYID=$P(RC0,U,3)                          ; Payer ID    ;PRCA*4.5*298
"RTN","RCDPEAR2",130,0)
 .;PRCA*4.5*318 dynamically display payer name/ID based on length
"RTN","RCDPEAR2",131,0)
 .S RCPAYER=RCPAY_"/"_RCPAYID
"RTN","RCDPEAR2",132,0)
 .I $L(RCPAYER)>76 D
"RTN","RCDPEAR2",133,0)
 . . S ZZ=$L(RCPAYER,"/"),XX=$P(RCPAYER,"/",1,ZZ-1),YY=$P(RCPAYER,"/",ZZ)
"RTN","RCDPEAR2",134,0)
 . . S XX=$E(RCPAYER,1,$L(XX)-($L(RCPAYER)-76)),RCPAYER=XX_"/"_YY
"RTN","RCDPEAR2",135,0)
 .S Z=$$SETSTR^VALM1(RCPAYER,"",5,76) ; PRCA*4.5*298            (payer/payer ID)
"RTN","RCDPEAR2",136,0)
 .;S Z=$$SETSTR^VALM1("  "_$$FMTE^XLFDT($P(RC0,U,12),2),Z,70,10)  ; deposit date
"RTN","RCDPEAR2",137,0)
 .;end of PRCA*4.5*318 display change
"RTN","RCDPEAR2",138,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",139,0)
 .S Z=$$SETSTR^VALM1($J("",6)_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:""),"",1,17)
"RTN","RCDPEAR2",140,0)
 .S Z=$$SETSTR^VALM1("  "_$J($P(RC0,U,7),15,2),Z,18,17)
"RTN","RCDPEAR2",141,0)
 .; PRCA*4.5*283 - change length from 8 to 11 to allow for 9 digit DEP #'s
"RTN","RCDPEAR2",142,0)
 .S Z=$$SETSTR^VALM1("  "_$P(RC3443,U,6),Z,35,11)
"RTN","RCDPEAR2",143,0)
 .S Z=$$SETSTR^VALM1("  "_$S($P(RC3443,U,12):"",1:"NOT ")_"Posted to 8NZZ"_$S($P(RC3443,U,12):" "_$$FMTE^XLFDT($P(RC3443,U,11),2),1:""),Z,47,36)
"RTN","RCDPEAR2",144,0)
 .D SL^RCDPEARL(Z,.RCCT,RCTMPND)
"RTN","RCDPEAR2",145,0)
 .K RCOUT
"RTN","RCDPEAR2",146,0)
 .D GETS^DIQ(344.31,RCIEN_",",2,"E","RCOUT")
"RTN","RCDPEAR2",147,0)
 .Q:'$O(RCOUT(344.31,RCIEN_",",2,0))
"RTN","RCDPEAR2",148,0)
 .D SL^RCDPEARL($J("",8)_"--EXCEPTION NOTES--",.RCCT,RCTMPND)
"RTN","RCDPEAR2",149,0)
 .S Z=0 F  S Z=$O(RCOUT(344.31,RCIEN_",",2,Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEAR2",150,0)
 ..I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEAR2",151,0)
 ..D SL^RCDPEARL($J("",8)_" "_RCOUT(344.31,RCIEN_",",2,Z),.RCCT,RCTMPND)
"RTN","RCDPEAR2",152,0)
 ;
"RTN","RCDPEAR2",153,0)
 ;
"RTN","RCDPEAR2",154,0)
 ; PRCA*4.5*298, put end-of-report into SL^RCDPEARL
"RTN","RCDPEAR2",155,0)
 D SL^RCDPEARL(" ",.RCCT,RCTMPND)  ; skip a line
"RTN","RCDPEAR2",156,0)
 D SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCCT,RCTMPND)
"RTN","RCDPEAR2",157,0)
 ;
"RTN","RCDPEAR2",158,0)
PRTQ ;
"RTN","RCDPEAR2",159,0)
 ; PRCA*4.5*298, added ListMan check
"RTN","RCDPEAR2",160,0)
 I '$D(ZTQUEUED),'RCLSTMGR,'RCSTOP D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPEAR2",161,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",162,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",163,0)
 K ^TMP($J,"RCEFT_AGED"),ZTQUEUED
"RTN","RCDPEAR2",164,0)
 Q
"RTN","RCDPEAR2",165,0)
 ;
"RTN","RCDPEAR2",166,0)
 ; extrinsic variable, text for header PRCA*4.5*298
"RTN","RCDPEAR2",167,0)
HDRNM() Q "EFT UNMATCHED AGING REPORT"
"RTN","RCDPEAR2",168,0)
 ;
"RTN","RCDPEAR2",169,0)
HDRBLD ; create the report header
"RTN","RCDPEAR2",170,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEAR2",171,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAR2",172,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEAR2",173,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEAR2",174,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEAR2",175,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEAR2",176,0)
 ;INPUT:
"RTN","RCDPEAR2",177,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAR2",178,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAR2",179,0)
 ; RCLSTMGR
"RTN","RCDPEAR2",180,0)
 ;
"RTN","RCDPEAR2",181,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR2",182,0)
 ;
"RTN","RCDPEAR2",183,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEAR2",184,0)
 .S RCHDR(0)=1,RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEAR2",185,0)
 .S RCHDR(1)="Aged Days^Trace #^Deposit From/ID^File Date^Deposit Amount^Deposit #^Deposit Post Status^Deposit Date"
"RTN","RCDPEAR2",186,0)
 ;
"RTN","RCDPEAR2",187,0)
 N START,END,MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAR2",188,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),2),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),2)
"RTN","RCDPEAR2",189,0)
 ;
"RTN","RCDPEAR2",190,0)
 S Y=$$HDRNM,HCNT=1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEAR2",191,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDRNM^"_$T(+0)_"_$S(RCLSTMGR:"""",1:$J(""Page: ""_RCPGNUM,12)),RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"
"RTN","RCDPEAR2",192,0)
 S Y="RUN DATE: "_RCHDR("RUNDATE"),HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y  ; line 1 will be replaced by XECUTE code below
"RTN","RCDPEAR2",193,0)
 ;
"RTN","RCDPEAR2",194,0)
 ; Payer(s)
"RTN","RCDPEAR2",195,0)
 S Y="PAYERS: " D
"RTN","RCDPEAR2",196,0)
 .I $D(RCPAY)=1 S Y=Y_RCPAY,HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y Q
"RTN","RCDPEAR2",197,0)
 .N S,X S S=0 F  S S=$O(RCPAY(S)) Q:'S  D
"RTN","RCDPEAR2",198,0)
 ..S X=RCPAY(S)_$S($O(RCPAY(S)):", ",1:"")
"RTN","RCDPEAR2",199,0)
 ..I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",8)
"RTN","RCDPEAR2",200,0)
 ..S Y=Y_X
"RTN","RCDPEAR2",201,0)
 .;
"RTN","RCDPEAR2",202,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR2",203,0)
 S Y="DATE RANGE: "_$P($$FMTE^XLFDT(START,2),"@")_" - "_$P($$FMTE^XLFDT(END,2),"@")_" (DATE EFT FILED)"
"RTN","RCDPEAR2",204,0)
 S Y=$J("",80-$L(Y)\2)_Y,HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",205,0)
 ;
"RTN","RCDPEAR2",206,0)
 S Y="AGED",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",207,0)
 ; PRCA*4.5*318 moved deposit date up a row
"RTN","RCDPEAR2",208,0)
 S Y="DAYS  TRACE #                                                           DEP DATE",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",209,0)
 S Y="    DEPOSIT FROM/ID",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",210,0)
 S Y="      FILE DATE     DEPOSIT AMOUNT  DEP #       DEPOSIT POST STATUS",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",211,0)
 S Y="",$P(Y,"=",81)="",HCNT=HCNT+1,RCHDR(HCNT)=Y  ; row of equal signs at bottom
"RTN","RCDPEAR2",212,0)
 ;
"RTN","RCDPEAR2",213,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAR2",214,0)
 ;
"RTN","RCDPEAR2",215,0)
 Q
"RTN","RCDPEAR2",216,0)
 ;
"RTN","RCDPEAR2",217,0)
HDRLM ; create the Listman header section
"RTN","RCDPEAR2",218,0)
 ; returns RCHDR
"RTN","RCDPEAR2",219,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEAR2",220,0)
 ;INPUT:
"RTN","RCDPEAR2",221,0)
 ; RCDTRNG - date range filter value to be printed as part of the header
"RTN","RCDPEAR2",222,0)
 ; RCPAY - Payer filter value(s)
"RTN","RCDPEAR2",223,0)
 ;
"RTN","RCDPEAR2",224,0)
 K RCHDR S RCPGNUM=0,RCSTOP=0
"RTN","RCDPEAR2",225,0)
 ;
"RTN","RCDPEAR2",226,0)
 N START,END,MSG,DATE,Y,DIV,HCNT
"RTN","RCDPEAR2",227,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),2),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),2)
"RTN","RCDPEAR2",228,0)
 S Y="DATE RANGE: "_$P($$FMTE^XLFDT(START,2),"@")_" - "_$P($$FMTE^XLFDT(END,2),"@")_" (DATE EFT FILED)"
"RTN","RCDPEAR2",229,0)
 S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",230,0)
 ; Payer(s)
"RTN","RCDPEAR2",231,0)
 S Y="PAYERS: " D
"RTN","RCDPEAR2",232,0)
 .I $D(RCPAY)=1 S Y=Y_RCPAY,HCNT=HCNT+1,RCHDR(HCNT)=Y Q
"RTN","RCDPEAR2",233,0)
 .N S,X S S=0 F  S S=$O(RCPAY(S)) Q:'S  D
"RTN","RCDPEAR2",234,0)
 ..S X=RCPAY(S)_$S($O(RCPAY(S)):", ",1:"")
"RTN","RCDPEAR2",235,0)
 ..I $L(X)+$L(Y)>80 S HCNT=HCNT+1,RCHDR(HCNT)=Y,Y=$J(" ",8)
"RTN","RCDPEAR2",236,0)
 ..S Y=Y_X
"RTN","RCDPEAR2",237,0)
 .;
"RTN","RCDPEAR2",238,0)
 .S:$TR(Y," ")]"" HCNT=HCNT+1,RCHDR(HCNT)=Y  ; any residual data
"RTN","RCDPEAR2",239,0)
 ;
"RTN","RCDPEAR2",240,0)
 S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEAR2",241,0)
 S Y="AGED",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",242,0)
 ; PRCA*4.5*318 moved deposit date up a row
"RTN","RCDPEAR2",243,0)
 S Y="DAYS TRACE #                                                           DEP DATE",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",244,0)
 S Y="    DEPOSIT FROM/ID",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",245,0)
 S Y="     FILE DATE     DEPOSIT AMOUNT  DEP #       DEPOSIT POST STATUS",HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEAR2",246,0)
 ;
"RTN","RCDPEAR2",247,0)
 S RCHDR(0)=HCNT
"RTN","RCDPEAR2",248,0)
 ;
"RTN","RCDPEAR2",249,0)
 Q
"RTN","RCDPEAR2",250,0)
 ;
"RTN","RCDPEAR2",251,0)
EXCEL ; Print report to screen, one record per line for export to MS Excel.
"RTN","RCDPEAR2",252,0)
 ; RCTMPND = name of the subscript for ^TMP to use
"RTN","RCDPEAR2",253,0)
 W !!,"Aged Days^Trace #^Deposit From/ID^File Date^Deposit Amount^Deposit #^Deposit Post Status^Deposit Date"
"RTN","RCDPEAR2",254,0)
 S RCZ="" F  S RCZ=$O(^TMP($J,"RCEFT_AGED",RCZ)) Q:RCZ=""  S RCIEN=0 F  S RCIEN=$O(^TMP($J,"RCEFT_AGED",RCZ,RCIEN)) Q:'RCIEN  D  G:RCSTOP PRTQ2
"RTN","RCDPEAR2",255,0)
 .I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W:RCTMPND="" !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEAR2",256,0)
 .S RC0=$G(^RCY(344.31,RCIEN,0)),RC3443=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEAR2",257,0)
 .N RCPAY S RCPAY=$P(RC0,U,2) S:RCPAY="" RCPAY="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEAR2",258,0)
 .S Z=$J(-RCZ,4)_"^"_$P(RC0,U,4)_"^"_RCPAY_"/"_$P(RC0,U,3)_"^"_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13),2),1:"")_"^" ; PRCA*4.5*298
"RTN","RCDPEAR2",259,0)
 .S Z=Z_$P(RC0,U,7)_"^"_$P(RC3443,U,6)_"^"_$S($P(RC3443,U,12):"",1:"NOT ")_"Posted to 8NZZ"_$S($P(RC3443,U,12):"^"_$$FMTE^XLFDT($P(RC0,U,12),2),1:"")
"RTN","RCDPEAR2",260,0)
 .W !,Z
"RTN","RCDPEAR2",261,0)
 W !!,"*** END OF REPORT ***",!
"RTN","RCDPEAR2",262,0)
 ;
"RTN","RCDPEAR2",263,0)
PRTQ2 ;
"RTN","RCDPEAR2",264,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEAR2",265,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEAR2",266,0)
 K ^TMP($J,"RCEFT_AGED"),^TMP("RCSELPAY",$J),^TMP("RCPAYER",$J),^TMP($J,"RCERA_ADJ")
"RTN","RCDPEAR2",267,0)
 Q
"RTN","RCDPEAR2",268,0)
 ;
"RTN","RCDPEAR2",269,0)
 ;PRCA*4.5*298
"RTN","RCDPEAR2",270,0)
 ; removed RCIND local variable
"RTN","RCDPEAR2",271,0)
 ; changed RC00 to RC3443
"RTN","RCDPEAR2",272,0)
 ; replaced SETLINE with SL^RCDPEARL
"RTN","RCDPEAR2",273,0)
 ; added $$HDRNM
"RTN","RCDPEAR2",274,0)
 ; added RCLSTMGR in checks for header
"RTN","RCDPEAR2",275,0)
 ; changed upper case text to mixed case throughout
"RTN","RCDPEAR2",276,0)
 ;
"RTN","RCDPEAR3")
0^28^B4337332
"RTN","RCDPEAR3",1,0)
RCDPEAR3 ;AITC/CJE - ERA Unmatched Aging Report ;
"RTN","RCDPEAR3",2,0)
 ;;4.5;Accounts Receivable;**321**;;Build 48
"RTN","RCDPEAR3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEAR3",4,0)
 Q
"RTN","RCDPEAR3",5,0)
 ;
"RTN","RCDPEAR3",6,0)
 ; PRCA*4.5*321 overflow routine for and RCDPEAR2
"RTN","RCDPEAR3",7,0)
 ; SELPAY and RLOAD moved from RCDPEAR1 to meet SAC size limit
"RTN","RCDPEAR3",8,0)
SELPAY(RCRESPYR,RCJOB,RCPAY) ;localize the payer filters for header display
"RTN","RCDPEAR3",9,0)
 ; Input:
"RTN","RCDPEAR3",10,0)
 ;   RCRESPYR (pass-by-val/required) - payer filter response indicator (2=ALL, 3=SPECIFIC)
"RTN","RCDPEAR3",11,0)
 ;   RCJOB - job number to access the populated temporary global array in case report was tasked to run
"RTN","RCDPEAR3",12,0)
 ; Output:
"RTN","RCDPEAR3",13,0)
 ;   RCPAY (pass-by-ref/required) - local array of payers e.g. RCPAY="ALL", RCPAY(1)="Aetna",
"RTN","RCDPEAR3",14,0)
 ;                                  or RCPAY="start payer = end payer"
"RTN","RCDPEAR3",15,0)
 N CNT,I
"RTN","RCDPEAR3",16,0)
 I RCRESPYR=2 S RCPAY="ALL" Q
"RTN","RCDPEAR3",17,0)
 S:RCJOB="" RCJOB=$J   ; RCJOB should not be null
"RTN","RCDPEAR3",18,0)
 I RCRESPYR=3 D  Q
"RTN","RCDPEAR3",19,0)
 .S CNT=0
"RTN","RCDPEAR3",20,0)
 .F  S CNT=$O(^TMP("RCSELPAY",RCJOB,CNT)) Q:'CNT  D
"RTN","RCDPEAR3",21,0)
 ..S RCPAY(CNT)=^TMP("RCSELPAY",RCJOB,CNT)
"RTN","RCDPEAR3",22,0)
 ; RCRESPYR indicates a range of payers
"RTN","RCDPEAR3",23,0)
 S I=$O(^TMP("RCSELPAY",RCJOB,"")),RCPAY=^(I)_" - "
"RTN","RCDPEAR3",24,0)
 S I=$O(^TMP("RCSELPAY",RCJOB,""),-1),RCPAY=RCPAY_^(I)
"RTN","RCDPEAR3",25,0)
 Q
"RTN","RCDPEAR3",26,0)
 ;
"RTN","RCDPEAR3",27,0)
RLOAD(FILE) ; PRCA*4.5*284 - Load Payer temp global AFTER queued job starts
"RTN","RCDPEAR3",28,0)
 ; Load Selected payers from local array end exit
"RTN","RCDPEAR3",29,0)
 ; Input: FILE to load payers from (344.31 passed from RCDPEAR2)
"RTN","RCDPEAR3",30,0)
 ; Output: ^TMP("RCPAYER") and ^TMP("RCSELPAY") arrays
"RTN","RCDPEAR3",31,0)
 ;
"RTN","RCDPEAR3",32,0)
 I +RCRESPYR=3 M ^TMP("RCSELPAY",$J)=RCPYRLST Q
"RTN","RCDPEAR3",33,0)
 N CNT,INDX,NUM,RCINSF,RCINST,RCPAY
"RTN","RCDPEAR3",34,0)
 ;
"RTN","RCDPEAR3",35,0)
 ; Load ALL payers and exit
"RTN","RCDPEAR3",36,0)
 I +RCRESPYR=2 D  Q
"RTN","RCDPEAR3",37,0)
 .S CNT=0,RCPAY="" F  S RCPAY=$O(^RCY(FILE,"C",RCPAY)) Q:RCPAY=""  S CNT=CNT+1,^TMP("RCSELPAY",$J,CNT)=RCPAY
"RTN","RCDPEAR3",38,0)
 ;
"RTN","RCDPEAR3",39,0)
 ; Range of Payers
"RTN","RCDPEAR3",40,0)
 ; Build list of available stations
"RTN","RCDPEAR3",41,0)
 K ^TMP("RCPAYER",$J)  ; Clear residual list data
"RTN","RCDPEAR3",42,0)
 S CNT=0,RCPAY=""
"RTN","RCDPEAR3",43,0)
 F  S RCPAY=$O(^RCY(FILE,"C",RCPAY)) Q:RCPAY=""  S CNT=CNT+1,^TMP("RCPAYER",$J,CNT)=RCPAY,^TMP("RCPAYER",$J,"B",RCPAY,CNT)=""
"RTN","RCDPEAR3",44,0)
 ;
"RTN","RCDPEAR3",45,0)
 S RCINSF=$P(RCRESPYR,"^",2),RCINST=$P(RCRESPYR,"^",3),INDX=1
"RTN","RCDPEAR3",46,0)
 F  S RCINSF=$O(^TMP("RCPAYER",$J,"B",RCINSF)) Q:RCINSF=""  Q:RCINSF]RCINST  D
"RTN","RCDPEAR3",47,0)
 .S NUM=$O(^TMP("RCPAYER",$J,"B",RCINSF,""))
"RTN","RCDPEAR3",48,0)
 .S ^TMP("RCSELPAY",$J,INDX)=$G(^TMP("RCPAYER",$J,NUM)),INDX=INDX+1
"RTN","RCDPEAR3",49,0)
 Q
"RTN","RCDPEAR3",50,0)
 ;
"RTN","RCDPEARL")
0^24^B37930557
"RTN","RCDPEARL",1,0)
RCDPEARL ;ALB/hrubovcak - Misc. Report utilities for ListMan, etc. ;Jun 06, 2014@19:11:19
"RTN","RCDPEARL",2,0)
 ;;4.5;Accounts Receivable;**298,321**;15 April 2014;Build 48
"RTN","RCDPEARL",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEARL",4,0)
 ;
"RTN","RCDPEARL",5,0)
 ; IA 594 - ACCOUNTS RECEIVABLE CATEGORY file (#430.2)
"RTN","RCDPEARL",6,0)
 ; IA 1992 - BILL/CLAIMS file (#399)
"RTN","RCDPEARL",7,0)
 ; IA 3822 - RATE TYPE file (#399.3)
"RTN","RCDPEARL",8,0)
 ; IA 4051 - EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPEARL",9,0)
 ;
"RTN","RCDPEARL",10,0)
 Q
"RTN","RCDPEARL",11,0)
 ;
"RTN","RCDPEARL",12,0)
ASK(STOP) ; Ask to continue
"RTN","RCDPEARL",13,0)
 ; STOP passed by ref., returned as 1 if timeout or user enters '^'
"RTN","RCDPEARL",14,0)
 Q:'($E(IOST,1,2)="C-")  ; must have user
"RTN","RCDPEARL",15,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEARL",16,0)
 S DIR("A")="Press enter to continue, '^' to exit: "
"RTN","RCDPEARL",17,0)
 S DIR(0)="EA" D ^DIR
"RTN","RCDPEARL",18,0)
 I ($D(DTOUT))!($D(DUOUT))!(Y="^") S STOP=1
"RTN","RCDPEARL",19,0)
 Q
"RTN","RCDPEARL",20,0)
 ;
"RTN","RCDPEARL",21,0)
ASKLM() ; extrinsic function, ask for ListMan display using ^DIR
"RTN","RCDPEARL",22,0)
 ; returns zero = No, 1 = yes, -1 on timeout or '^'
"RTN","RCDPEARL",23,0)
 N DIR,RSLT,X,Y S RSLT=0
"RTN","RCDPEARL",24,0)
 S DIR(0)="YA",DIR("A")="Display in List Manager format? (Y/N): ",DIR("B")="NO"
"RTN","RCDPEARL",25,0)
 D ^DIR S RSLT=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","RCDPEARL",26,0)
 Q RSLT
"RTN","RCDPEARL",27,0)
 ;
"RTN","RCDPEARL",28,0)
CLMCHMPV(RCLMIEN) ; boolean function, returns true if CHAMPVA claim, else false
"RTN","RCDPEARL",29,0)
 ; RCLMIEN - file entry, format: 'file #;ien' (see PTR4302 comments)
"RTN","RCDPEARL",30,0)
 Q $$EVALCLM(RCLMIEN,"CHAMPVA")
"RTN","RCDPEARL",31,0)
 ;
"RTN","RCDPEARL",32,0)
CLMTRICR(RCLMIEN) ; boolean function, returns true if TRICARE claim, else false
"RTN","RCDPEARL",33,0)
 ; RCLMIEN - file entry, format: 'file #;ien' (see PTR4302 comments)
"RTN","RCDPEARL",34,0)
 Q $$EVALCLM(RCLMIEN,"TRICARE")
"RTN","RCDPEARL",35,0)
 ;
"RTN","RCDPEARL",36,0)
ENDORPRT() ; extrinsic variable, formatted for 80 column display
"RTN","RCDPEARL",37,0)
 N A S A="***** END OF REPORT *****" Q $J(" ",80-$L(A)\2)_A
"RTN","RCDPEARL",38,0)
 ;
"RTN","RCDPEARL",39,0)
EVALCLM(RCLMIEN,TRGTXT) ; boolean function, case insensitive
"RTN","RCDPEARL",40,0)
 ; returns 1 if claim has target text, else false (error messages evaluate as false)
"RTN","RCDPEARL",41,0)
 ; RCLMIEN (required) - file entry, format: 'file #;ien' (see PTR4302 comments)
"RTN","RCDPEARL",42,0)
 ; TRGTXT (required) - target text
"RTN","RCDPEARL",43,0)
 Q:($G(RCLMIEN)="")!($G(TRGTXT)="") "^invalid"  ; both required
"RTN","RCDPEARL",44,0)
 N RSLT,F,R,T
"RTN","RCDPEARL",45,0)
 S T=$$UP(TRGTXT),RSLT=0  ; text to uppercase, default to false
"RTN","RCDPEARL",46,0)
 S F=$G(RCLMIEN) Q:'($P(F,";")>1)!'($P(F,";",2)>0) RSLT  ; file must be > 1 and entry > zero
"RTN","RCDPEARL",47,0)
 S R=$$PTR4302(RCLMIEN) Q:'R RSLT  ; no text to check
"RTN","RCDPEARL",48,0)
 ;
"RTN","RCDPEARL",49,0)
 S F=$$UP($P(R,";",2,99))  ; text of entry from ACCOUNTS RECEIVABLE CATEGORY (#430.2)
"RTN","RCDPEARL",50,0)
 S RSLT=F[T  ; boolean result
"RTN","RCDPEARL",51,0)
 Q RSLT
"RTN","RCDPEARL",52,0)
 ;
"RTN","RCDPEARL",53,0)
INCHMPVA() ; function, include CHAMPVA question
"RTN","RCDPEARL",54,0)
 ; returns zero = No, 1 = yes, -1 on timeout or '^'
"RTN","RCDPEARL",55,0)
 N DIR,DTOUT,DUOUT,RSLT,X,Y S RSLT=0
"RTN","RCDPEARL",56,0)
 S DIR(0)="YA",DIR("A")="Include CHAMPVA? (Y/N): ",DIR("B")="YES"
"RTN","RCDPEARL",57,0)
 S DIR("?")="Enter 'NO' to exclude entries related to CHAMPVA from the report."
"RTN","RCDPEARL",58,0)
 D ^DIR S RSLT=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","RCDPEARL",59,0)
 Q RSLT
"RTN","RCDPEARL",60,0)
 ;
"RTN","RCDPEARL",61,0)
INTRICAR() ; function, include TRICARE question
"RTN","RCDPEARL",62,0)
 ; returns zero = No, 1 = yes, -1 on timeout or '^'
"RTN","RCDPEARL",63,0)
 N DIR,DTOUT,DUOUT,RSLT,X,Y S RSLT=0
"RTN","RCDPEARL",64,0)
 S DIR(0)="YA",DIR("A")="Include TRICARE? (Y/N): ",DIR("B")="YES"
"RTN","RCDPEARL",65,0)
 S DIR("?")="Enter 'NO' to exclude entries related to TRICARE from the report."
"RTN","RCDPEARL",66,0)
 D ^DIR S RSLT=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","RCDPEARL",67,0)
 Q RSLT
"RTN","RCDPEARL",68,0)
 ; Begin PRCA*4.5*321
"RTN","RCDPEARL",69,0)
 ;
"RTN","RCDPEARL",70,0)
EXCHMPVA() ; function, exclude CHAMPVA question - EP RCDPEM4
"RTN","RCDPEARL",71,0)
 ; returns zero = No, 1 = yes, -1 on timeout or '^'
"RTN","RCDPEARL",72,0)
 N DIR,DTOUT,DUOUT,RSLT,X,Y S RSLT=0
"RTN","RCDPEARL",73,0)
 S DIR(0)="YA",DIR("A")="Exclude CHAMPVA? (Y/N): ",DIR("B")="NO"
"RTN","RCDPEARL",74,0)
 S DIR("?")="Enter 'Y' to exclude entries related to CHAMPVA from the report."
"RTN","RCDPEARL",75,0)
 D ^DIR S RSLT=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","RCDPEARL",76,0)
 Q RSLT
"RTN","RCDPEARL",77,0)
 ;
"RTN","RCDPEARL",78,0)
EXTRICAR() ; function, exclude TRICARE question - EP RCDPEM4
"RTN","RCDPEARL",79,0)
 ; returns zero = No, 1 = yes, -1 on timeout or '^'
"RTN","RCDPEARL",80,0)
 N DIR,DTOUT,DUOUT,RSLT,X,Y S RSLT=0
"RTN","RCDPEARL",81,0)
 S DIR(0)="YA",DIR("A")="Exclude TRICARE? (Y/N): ",DIR("B")="NO"
"RTN","RCDPEARL",82,0)
 S DIR("?")="Enter 'Y' to exclude entries related to TRICARE from the report."
"RTN","RCDPEARL",83,0)
 D ^DIR S RSLT=$S($D(DUOUT)!$D(DTOUT):-1,1:Y)
"RTN","RCDPEARL",84,0)
 Q RSLT
"RTN","RCDPEARL",85,0)
 ; End PRCA*4.5*321
"RTN","RCDPEARL",86,0)
 ;
"RTN","RCDPEARL",87,0)
HDRLST(RCSTOP,RCHDR) ; write the header in RCHDR
"RTN","RCDPEARL",88,0)
 ; RCSTOP, RCHDR passed by ref.
"RTN","RCDPEARL",89,0)
 Q:RCSTOP  ; nothing to do
"RTN","RCDPEARL",90,0)
 ;
"RTN","RCDPEARL",91,0)
 I $E(IOST,1,2)="C-",'RCDISPTY,RCPGNUM D ASK(.RCSTOP)
"RTN","RCDPEARL",92,0)
 Q:RCSTOP  ; no header needed
"RTN","RCDPEARL",93,0)
 I 'RCDISPTY W @IOF
"RTN","RCDPEARL",94,0)
 X RCHDR("XECUTE")  ; increment page count, insert into header
"RTN","RCDPEARL",95,0)
 N J F J=1:1:RCHDR(0) W !,RCHDR(J)
"RTN","RCDPEARL",96,0)
 Q
"RTN","RCDPEARL",97,0)
 ;
"RTN","RCDPEARL",98,0)
LMEN ; invoke ListMan for RCDPE MISC REPORTS list template
"RTN","RCDPEARL",99,0)
 ; external routines should call LMRPT
"RTN","RCDPEARL",100,0)
 D EN^VALM("RCDPE MISC REPORTS")
"RTN","RCDPEARL",101,0)
 Q
"RTN","RCDPEARL",102,0)
 ;
"RTN","RCDPEARL",103,0)
LMHDR ; ListMan header
"RTN","RCDPEARL",104,0)
 N J S J=0
"RTN","RCDPEARL",105,0)
 F J=1:1 Q:'$D(RCLMHDR(J))  S VALMHDR(J)=RCLMHDR(J)
"RTN","RCDPEARL",106,0)
 S:$G(RCLMHDR("TITLE"))'="" VALM("TITLE")=RCLMHDR("TITLE")
"RTN","RCDPEARL",107,0)
 Q
"RTN","RCDPEARL",108,0)
 ;
"RTN","RCDPEARL",109,0)
LMINIT ; set up ListMan array, invoked from inside List Template
"RTN","RCDPEARL",110,0)
 ;
"RTN","RCDPEARL",111,0)
 N C,J,Y S (J,C)=0
"RTN","RCDPEARL",112,0)
 F  S J=$O(@RCLMND@(J)) Q:'J  S Y=$G(@RCLMND@(J)),C=C+1 D SET^VALM10(C,Y)
"RTN","RCDPEARL",113,0)
 S VALMCNT=C
"RTN","RCDPEARL",114,0)
 Q
"RTN","RCDPEARL",115,0)
 ;
"RTN","RCDPEARL",116,0)
LMHLP ; ListMan help
"RTN","RCDPEARL",117,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RCDPEARL",118,0)
 Q
"RTN","RCDPEARL",119,0)
 ;
"RTN","RCDPEARL",120,0)
LMEXIT ; performed on exiting ListMan screen
"RTN","RCDPEARL",121,0)
 K @RCLMND  ; delete ListMan data
"RTN","RCDPEARL",122,0)
 D FULL^VALM1  ; reset terminal display
"RTN","RCDPEARL",123,0)
 Q
"RTN","RCDPEARL",124,0)
 ;
"RTN","RCDPEARL",125,0)
LMEXPND ; expand code for ListMan
"RTN","RCDPEARL",126,0)
 Q
"RTN","RCDPEARL",127,0)
 ;
"RTN","RCDPEARL",128,0)
LMRPT(RCLMHDR,RCLMND) ; generate ListMan display
"RTN","RCDPEARL",129,0)
 ; RCLMHDR = header text, passed by ref. (required)
"RTN","RCDPEARL",130,0)
 ; RCLMND = storage node for ListMan data (required)
"RTN","RCDPEARL",131,0)
 Q:'$D(RCLMHDR)  Q:($G(RCLMND)="")  ; both required
"RTN","RCDPEARL",132,0)
 D LMEN
"RTN","RCDPEARL",133,0)
 Q
"RTN","RCDPEARL",134,0)
 ;
"RTN","RCDPEARL",135,0)
NOW() Q $$FMTE^XLFDT($$NOW^XLFDT,2)  ; extrinsic variable, now as MM/DD/YY@HH:MM:SS
"RTN","RCDPEARL",136,0)
 ;
"RTN","RCDPEARL",137,0)
PAD(TXT,LNGTH) ; function, pad TXT with spaces to LNGTH
"RTN","RCDPEARL",138,0)
 Q $$LJ^XLFSTR(TXT,LNGTH)
"RTN","RCDPEARL",139,0)
 ;
"RTN","RCDPEARL",140,0)
PTR4302(FLNTRY) ; function, returns entry from 430.2 or error message
"RTN","RCDPEARL",141,0)
 ; FLNTRY - file entry (required), format: 'file #;ien'
"RTN","RCDPEARL",142,0)
 ; on success returns 'ien^name' else '^error message'
"RTN","RCDPEARL",143,0)
 ; file number and ien can be from:
"RTN","RCDPEARL",144,0)
 ;  ^PRCA(430.2,0) = ACCOUNTS RECEIVABLE CATEGORY^430.2I
"RTN","RCDPEARL",145,0)
 ;  ^DGCR(399.3,0) = RATE TYPE^399.3I^
"RTN","RCDPEARL",146,0)
 ;  ^DGCR(399,0) = BILL/CLAIMS^399I
"RTN","RCDPEARL",147,0)
 ;  ^IBM(361.1,0) = EXPLANATION OF BENEFITS^361.1PI^
"RTN","RCDPEARL",148,0)
 ;  ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I
"RTN","RCDPEARL",149,0)
 ;  ^RCY(344,0) = AR BATCH PAYMENT^344I
"RTN","RCDPEARL",150,0)
 ;
"RTN","RCDPEARL",151,0)
 N F,PF,RCFLNUM,RCIEN,RSLT,X,Y
"RTN","RCDPEARL",152,0)
 ; PF - parent file
"RTN","RCDPEARL",153,0)
 ; RCFLNUM - file number
"RTN","RCDPEARL",154,0)
 ; RCIEN - internal entry number
"RTN","RCDPEARL",155,0)
 ; RSLT - result
"RTN","RCDPEARL",156,0)
 ;
"RTN","RCDPEARL",157,0)
 S RSLT=U,F=$G(FLNTRY),RCFLNUM=+$P(F,";"),RCIEN=+$P(F,";",2)
"RTN","RCDPEARL",158,0)
 Q:'(RCFLNUM>1) U_"invalid file #"
"RTN","RCDPEARL",159,0)
 Q:'(RCIEN>0) U_"invalid IEN"
"RTN","RCDPEARL",160,0)
 ;
"RTN","RCDPEARL",161,0)
 ; default result
"RTN","RCDPEARL",162,0)
 S RSLT="^file "_RCFLNUM_" no entry #"_RCIEN
"RTN","RCDPEARL",163,0)
 ;
"RTN","RCDPEARL",164,0)
 ; ACCOUNTS RECEIVABLE CATEGORY file #430.2
"RTN","RCDPEARL",165,0)
 I RCFLNUM=430.2 D  Q RSLT
"RTN","RCDPEARL",166,0)
 .S X=$G(^PRCA(430.2,RCIEN,0)),Y=$P(X,U) S:Y]"" RSLT=RCIEN_";"_Y
"RTN","RCDPEARL",167,0)
 ;
"RTN","RCDPEARL",168,0)
 ; RATE TYPE file #399.3, (#.06) ACCOUNTS RECEIVABLE CATEGORY [6P:430.2]
"RTN","RCDPEARL",169,0)
 I RCFLNUM=399.3 D  Q RSLT
"RTN","RCDPEARL",170,0)
 .S X=$G(^DGCR(399.3,RCIEN,0)),Y=+$P(X,U,6) Q:'(Y>0)
"RTN","RCDPEARL",171,0)
 .S RSLT=$$PTR4302("430.2;"_Y)
"RTN","RCDPEARL",172,0)
 ;
"RTN","RCDPEARL",173,0)
 ; BILL/CLAIMS file #399, (#.07) RATE TYPE [7P:399.3]
"RTN","RCDPEARL",174,0)
 I RCFLNUM=399 D  Q RSLT
"RTN","RCDPEARL",175,0)
 .S X=$G(^DGCR(399,RCIEN,0)) Q:X=""
"RTN","RCDPEARL",176,0)
 .S PF=399.3,RSLT="^no pointer to "_PF,Y=+$P(X,U,7) Q:'(Y>0)
"RTN","RCDPEARL",177,0)
 .S RSLT=$$PTR4302(PF_";"_Y)
"RTN","RCDPEARL",178,0)
 ;
"RTN","RCDPEARL",179,0)
 ; EXPLANATION OF BENEFITS file #361.1, (#.01) BILL [1P:399]
"RTN","RCDPEARL",180,0)
 I RCFLNUM=361.1 D  Q RSLT
"RTN","RCDPEARL",181,0)
 .S X=$G(^IBM(361.1,RCIEN,0)) Q:X=""
"RTN","RCDPEARL",182,0)
 .S PF=399,RSLT="^no pointer to "_PF,Y=+$P(X,U) Q:'(Y>0)
"RTN","RCDPEARL",183,0)
 .S RSLT=$$PTR4302(PF_";"_Y)
"RTN","RCDPEARL",184,0)
 ;
"RTN","RCDPEARL",185,0)
 ; ELECTRONIC REMITTANCE ADVICE file #344.4
"RTN","RCDPEARL",186,0)
 ;  ERA DETAIL sub-file #344.41, (#.02) EOB DETAIL [2P:361.1]
"RTN","RCDPEARL",187,0)
 I RCFLNUM=344.4 D  Q RSLT
"RTN","RCDPEARL",188,0)
 .S X=$G(^RCY(344.4,RCIEN,0)) Q:X=""  ; top level entry not found
"RTN","RCDPEARL",189,0)
 .S RSLT="^sub-file 344.41 no entries"
"RTN","RCDPEARL",190,0)
 .; take first entry that gives result from file #430.2
"RTN","RCDPEARL",191,0)
 .N J,C S (J,C)=0 F  S J=$O(^RCY(344.4,RCIEN,1,J)) Q:'J!RSLT  S X=$G(^(J,0)) D
"RTN","RCDPEARL",192,0)
 ..S PF=361.1,RSLT="^no pointer to "_PF
"RTN","RCDPEARL",193,0)
 ..S Y=+$P(X,U,2) Q:'(Y>0)  S C=C+1
"RTN","RCDPEARL",194,0)
 ..S RSLT="^sub-file 344.41 total checked "_C,F=$$PTR4302(PF_";"_Y) S:F RSLT=F
"RTN","RCDPEARL",195,0)
 ;
"RTN","RCDPEARL",196,0)
 ; AR BATCH PAYMENT file #344, (#.18) ERA REFERENCE [18P:344.4]
"RTN","RCDPEARL",197,0)
 I RCFLNUM=344 D  Q RSLT
"RTN","RCDPEARL",198,0)
 .S X=$G(^RCY(344,RCIEN,0)) Q:X=""
"RTN","RCDPEARL",199,0)
 .S PF=344.4,Y=+$P(X,U,18),RSLT="^no pointer to "_PF Q:'(Y>0)
"RTN","RCDPEARL",200,0)
 .S RSLT=$$PTR4302(PF_";"_Y)
"RTN","RCDPEARL",201,0)
 ;
"RTN","RCDPEARL",202,0)
 ; finished all checks, valid file number not found
"RTN","RCDPEARL",203,0)
 S RSLT=U_"invalid file #"_RCFLNUM
"RTN","RCDPEARL",204,0)
 ;
"RTN","RCDPEARL",205,0)
 Q RSLT
"RTN","RCDPEARL",206,0)
 ;
"RTN","RCDPEARL",207,0)
SL(T,RCLNCNT,RC2GLBL) ; Set text into global or write line
"RTN","RCDPEARL",208,0)
 ; T = text to output
"RTN","RCDPEARL",209,0)
 ; RCLNCNT = line counter, passed by ref. (optional)
"RTN","RCDPEARL",210,0)
 ; RC2GLBL = if non-null indicates output to global, no writes
"RTN","RCDPEARL",211,0)
 I $G(RC2GLBL)="" W !,T Q
"RTN","RCDPEARL",212,0)
 S RCLNCNT=RCLNCNT+1,^TMP($J,RC2GLBL,RCLNCNT)=T
"RTN","RCDPEARL",213,0)
 Q
"RTN","RCDPEARL",214,0)
 ;
"RTN","RCDPEARL",215,0)
UP(A) ; Returns UPPERCASE
"RTN","RCDPEARL",216,0)
 Q $$UP^XLFSTR(A)
"RTN","RCDPECH")
0^1^B9924260
"RTN","RCDPECH",1,0)
RCDPECH ;ALB/PJH - RECEIPT COMMENT HISTORY ;24-FEB-03
"RTN","RCDPECH",2,0)
 ;;4.5;Accounts Receivable;**173,276,321**;Mar 20, 1995;Build 48
"RTN","RCDPECH",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPECH",4,0)
 Q
"RTN","RCDPECH",5,0)
 ;
"RTN","RCDPECH",6,0)
AUDIT(RCRCPT,RCLINE,RCZ,RCR) ;EP store entry in RCDPE COMMENT HISTORY
"RTN","RCDPECH",7,0)
 ;Input
"RTN","RCDPECH",8,0)
 ; RCRCPT - Receipt IEN #344
"RTN","RCDPECH",9,0)
 ; RCLINE - Receipt line number
"RTN","RCDPECH",10,0)
 ; RCZ    - Scratchpad IEN (optional)
"RTN","RCDPECH",11,0)
 ; RCR    - Scratchpad line number (optional)
"RTN","RCDPECH",12,0)
 ;Output
"RTN","RCDPECH",13,0)
 ; Write record to #344.73 - RCDPE COMMENT HISTORY
"RTN","RCDPECH",14,0)
 ;
"RTN","RCDPECH",15,0)
 Q:'$G(RCRCPT)
"RTN","RCDPECH",16,0)
 Q:'$G(RCLINE)
"RTN","RCDPECH",17,0)
 ;
"RTN","RCDPECH",18,0)
 N RCCOM,RCDATE,RCUSER
"RTN","RCDPECH",19,0)
 ; Use scratchpad as data source if passed
"RTN","RCDPECH",20,0)
 I $G(RCZ),$G(RCR) D  Q:RCCOM=""
"RTN","RCDPECH",21,0)
 . S RCCOM=$$GET1^DIQ(344.491,RCR_","_RCZ_",",.1)
"RTN","RCDPECH",22,0)
 . S RCUSER=$$GET1^DIQ(344.491,RCR_","_RCZ_",",2.03,"I")
"RTN","RCDPECH",23,0)
 . S RCDATE=$$GET1^DIQ(344.491,RCR_","_RCZ_",",2.04,"I")
"RTN","RCDPECH",24,0)
 ; Otherwise use receipt fields and current user/time
"RTN","RCDPECH",25,0)
 E  D  Q:RCCOM=""
"RTN","RCDPECH",26,0)
 . S RCDATE=$$NOW^XLFDT
"RTN","RCDPECH",27,0)
 . S RCCOM=$$GET1^DIQ(344.01,RCLINE_","_RCRCPT_",",1.02)
"RTN","RCDPECH",28,0)
 . S RCUSER=DUZ
"RTN","RCDPECH",29,0)
 ; Use current date if original date is not found
"RTN","RCDPECH",30,0)
 I 'RCDATE S RCDATE=$$NOW^XLFDT
"RTN","RCDPECH",31,0)
 ; Use current user if original user not found
"RTN","RCDPECH",32,0)
 I 'RCUSER S RCUSER=DUZ
"RTN","RCDPECH",33,0)
 ;
"RTN","RCDPECH",34,0)
 N RCAUDIT
"RTN","RCDPECH",35,0)
 ;
"RTN","RCDPECH",36,0)
 ; Set up array for UPDATE^DIE
"RTN","RCDPECH",37,0)
 S RCAUDIT(344.73,"+1,",.01)=RCRCPT ;Receipt
"RTN","RCDPECH",38,0)
 S RCAUDIT(344.73,"+1,",1)=RCLINE   ;Receipt line number
"RTN","RCDPECH",39,0)
 S RCAUDIT(344.73,"+1,",2)=RCUSER   ;User
"RTN","RCDPECH",40,0)
 S RCAUDIT(344.73,"+1,",3)=RCDATE   ;Date
"RTN","RCDPECH",41,0)
 S RCAUDIT(344.73,"+1,",4)=RCCOM    ;Comment
"RTN","RCDPECH",42,0)
 ;
"RTN","RCDPECH",43,0)
 ; Update file
"RTN","RCDPECH",44,0)
 D UPDATE^DIE(,"RCAUDIT")
"RTN","RCDPECH",45,0)
 Q
"RTN","RCDPECH",46,0)
 ;
"RTN","RCDPECH",47,0)
GET(RETURN,RCRCPT,RCLINE) ;EP Get comment history for a receipt
"RTN","RCDPECH",48,0)
 ;Input
"RTN","RCDPECH",49,0)
 ; RCRCPT - Receipt IEN
"RTN","RCDPECH",50,0)
 ; RCLINE - Receipt line number
"RTN","RCDPECH",51,0)
 ;Output
"RTN","RCDPECH",52,0)
 ; RETURN(N) = Date ^ User Name ^ Comment text
"RTN","RCDPECH",53,0)
 ;
"RTN","RCDPECH",54,0)
 Q:'$G(RCRCPT)  Q:'$G(RCLINE)
"RTN","RCDPECH",55,0)
 ;
"RTN","RCDPECH",56,0)
 N RCCOMM,RCDA,RCDATE,RCCDT,RCUSER
"RTN","RCDPECH",57,0)
 ; Return comments - most recent first in return array
"RTN","RCDPECH",58,0)
 S RETURN=0,RCCDT=9999999
"RTN","RCDPECH",59,0)
 F  S RCCDT=$O(^RCY(344.73,"AC",RCRCPT,RCLINE,RCCDT),-1) Q:'RCCDT  D
"RTN","RCDPECH",60,0)
 . S RCDA=$G(^RCY(344.73,"AC",RCRCPT,RCLINE,RCCDT)) Q:'RCDA
"RTN","RCDPECH",61,0)
 . ; Get comments and user details
"RTN","RCDPECH",62,0)
 . S RCCOM=$$GET1^DIQ(344.73,RCDA_",",4)
"RTN","RCDPECH",63,0)
 . S RCUSER=$$GET1^DIQ(344.73,RCDA_",",2,"E")
"RTN","RCDPECH",64,0)
 . S RCDATE=$$GET1^DIQ(344.73,RCDA_",",3,"E")
"RTN","RCDPECH",65,0)
 . S RETURN=RETURN+1,RETURN(RETURN)=RCDATE_U_RCUSER_U_RCCOM
"RTN","RCDPECH",66,0)
 Q
"RTN","RCDPECH",67,0)
 ;
"RTN","RCDPECH",68,0)
COM() ;EP Receipt line comment entry
"RTN","RCDPECH",69,0)
 ;
"RTN","RCDPECH",70,0)
 ;Output
"RTN","RCDPECH",71,0)
 ; Y - Comment text (3 - 60 characters)
"RTN","RCDPECH",72,0)
 ;     or -1 = abort/timeout
"RTN","RCDPECH",73,0)
 ;
"RTN","RCDPECH",74,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPECH",75,0)
 S DIR("A")="COMMENT: "
"RTN","RCDPECH",76,0)
 S DIR(0)="SA^1:Collected/Closed;2:Cancelled;3:Returned refund;4:Overpayment;5:Inactive bill;"
"RTN","RCDPECH",77,0)
 S DIR(0)=DIR(0)_"6:Duplicate payment;7:Policy termed;8:Service connected;9:Other"
"RTN","RCDPECH",78,0)
 D ^DIR Q:$D(DTOUT)!$D(DUOUT) -1
"RTN","RCDPECH",79,0)
 ; If selection is not 'Other' use selection as comment text
"RTN","RCDPECH",80,0)
 I Y'=9 S Y=Y(0) Q Y
"RTN","RCDPECH",81,0)
 ; Otherwise force entry of free text comment of 3 to 60 characters 
"RTN","RCDPECH",82,0)
 F  D  Q:Y'=""
"RTN","RCDPECH",83,0)
 . S DIR(0)="344.491,.1A",DIR("A")=" COMMENT TEXT: "
"RTN","RCDPECH",84,0)
 . D ^DIR
"RTN","RCDPECH",85,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-1 Q
"RTN","RCDPECH",86,0)
 . ; Remove leading or trailing spaces
"RTN","RCDPECH",87,0)
 . S Y=$$TRIM^XLFSTR(X)
"RTN","RCDPECH",88,0)
 . I (Y="")!(Y="@") D
"RTN","RCDPECH",89,0)
 . . W !,"A comment is required when changing the status of an item in suspense, Please"
"RTN","RCDPECH",90,0)
 . . W !,"try again"
"RTN","RCDPECH",91,0)
 . . S:Y="@" Y=""
"RTN","RCDPECH",92,0)
 Q Y
"RTN","RCDPEDA2")
0^4^B142498917
"RTN","RCDPEDA2",1,0)
RCDPEDA2 ;AITC/DW - ACTIVITY REPORT ;Feb 17, 2017@10:37:00
"RTN","RCDPEDA2",2,0)
 ;;4.5;Accounts Receivable;**318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEDA2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDA2",4,0)
 Q
"RTN","RCDPEDA2",5,0)
 ;
"RTN","RCDPEDA2",6,0)
RPT2(INPUT) ;EP from RCDPEDAR
"RTN","RCDPEDA2",7,0)
 ; Loop through EDI LOCKBOX DEPOSIT entries
"RTN","RCDPEDA2",8,0)
 ; Input:   INPUT                           - A1^A2^A3^...^An Where:
"RTN","RCDPEDA2",9,0)
 ;                                             A1 - 1 - Called by nightly job, 0 otherwise
"RTN","RCDPEDA2",10,0)
 ;                                             A2 - 1 - Display to list manager, 0 otherwise
"RTN","RCDPEDA2",11,0)
 ;                                             A3 - 1 - Detail report, 0 - Summary report
"RTN","RCDPEDA2",12,0)
 ;                                             A4 - Current Page Number
"RTN","RCDPEDA2",13,0)
 ;                                             A5 - Stop Flag
"RTN","RCDPEDA2",14,0)
 ;                                             A6 - Start of Date Range
"RTN","RCDPEDA2",15,0)
 ;                                             A7 - End of Date Range
"RTN","RCDPEDA2",16,0)
 ;                                             A8 - Current Line Number
"RTN","RCDPEDA2",17,0)
 ;                                             A9 - Internal Date being processed
"RTN","RCDPEDA2",18,0)
 ;                                             A10- 1 - Only Display EFTs with a debit flag of 'D'
"RTN","RCDPEDA2",19,0)
 ;                                                  0 - Display all EFTs
"RTN","RCDPEDA2",20,0)
 ;          ^TMP(B1,$J,B2,B3)               = ""
"RTN","RCDPEDA2",21,0)
 ;          ^TMP(B1,$J,B2,B3,"EFT",B4)      = "" Where:
"RTN","RCDPEDA2",22,0)
 ;                                            B1 - "RCDAILYACT"
"RTN","RCDPEDA2",23,0)
 ;                                            B2 - Internal Date from DATE/TIME ADDED
"RTN","RCDPEDA2",24,0)
 ;                                                 (344.3, .13)
"RTN","RCDPEDA2",25,0)
 ;                                            B3 - Internal IEN for 344.3
"RTN","RCDPEDA2",26,0)
 ;                                            B4 - Internal IEN for file 344.31
"RTN","RCDPEDA2",27,0)
 ; Output:  INPUT                           - A1^A2^A3^...^An - The following pieces 
"RTN","RCDPEDA2",28,0)
 ;                                                              may be updated
"RTN","RCDPEDA2",29,0)
 ;                                             A4 - Updated Page Number
"RTN","RCDPEDA2",30,0)
 ;                                             A5 - Stop Flag
"RTN","RCDPEDA2",31,0)
 ;                                             A6 - Updated Line number
"RTN","RCDPEDA2",32,0)
 ;          ^TMP($J,"TOTALS","DEBIT")       - Current Total # of debits for date range
"RTN","RCDPEDA2",33,0)
 ;          ^TMP($J,"TOTALS","DEBIT","D")   - Total # of debits for Internal date (C1)
"RTN","RCDPEDA2",34,0)
 ;          ^TMP($J,"TOTALS","DEBITA")      - Current Total Debit Amount for date range
"RTN","RCDPEDA2",35,0)
 ;          ^TMP($J,"TOTALS","DEBITA","D")  - Total Debit Amount for Internal date (C1)
"RTN","RCDPEDA2",36,0)
 ;          ^TMP($J,"TOTALS","DEP",C1)      - Total # of deposits by Internal date (C1)
"RTN","RCDPEDA2",37,0)
 ;          ^TMP($J,"TOTALS","DEPA",C1)     - Total Deposit Amount by Internal date (C1)
"RTN","RCDPEDA2",38,0)
 ;          ^TMP($J,"TOTALS","EFT","D")     - Total Deposit Amount by EFTs for date
"RTN","RCDPEDA2",39,0)
 ;          ^TMP($J,"TOTALS","FMS")         - FMS Document Status or "NO FMS DOC"
"RTN","RCDPEDA2",40,0)
 ;          ^TMP($J,"TOTALS","FMS","D",-1)  - Total Deposit Amount by FMS Document
"RTN","RCDPEDA2",41,0)
 ;          ^TMP($J,"TOTALS","FMS","D",0)   - Total Amount for Error/Rejected documents
"RTN","RCDPEDA2",42,0)
 ;          ^TMP($J,"TOTALS","FMS","D",1")  - Total Amount for 'A','M',"F' or 'T' docs
"RTN","RCDPEDA2",43,0)
 ;          ^TMP($J,"TOTALS","FMS","D",2")  - Total Amount for queued docs
"RTN","RCDPEDA2",44,0)
 ;          ^TMP($J,"TOTALS","FMSTOT")      - Updated Total Deposit Amount for date range
"RTN","RCDPEDA2",45,0)
 ;          ^TMP($J,"TOTALS","MATCH","D")   - Current Total matched EFTs for date
"RTN","RCDPEDA2",46,0)
 N CRDOC,DETL,DLNCT,DTADD,IEN344,IEN3443,IEN34431,TOTDEP,Q,X,XX,YY
"RTN","RCDPEDA2",47,0)
 S DETL=$P(INPUT,"^",3),DTADD=$P(INPUT,"^",9)
"RTN","RCDPEDA2",48,0)
 ;
"RTN","RCDPEDA2",49,0)
 ; Clear the following daily totals
"RTN","RCDPEDA2",50,0)
 K ^TMP($J,"TOTALS","EFT","D")
"RTN","RCDPEDA2",51,0)
 K ^TMP($J,"TOTALS","FMS","D")
"RTN","RCDPEDA2",52,0)
 K ^TMP($J,"TOTALS","MATCH","D")
"RTN","RCDPEDA2",53,0)
 K ^TMP($J,"TOTALS","DEBIT","D")            ;PRCA*4.5*321 Add Debit flag logic
"RTN","RCDPEDA2",54,0)
 K ^TMP($J,"TOTALS","DEBITA","D")
"RTN","RCDPEDA2",55,0)
 K ^TMP($J,"ONEDEP"),^TMP($J,"DEPERRS")     ;PRCA*4.5*321
"RTN","RCDPEDA2",56,0)
 S IEN3443="",DLNCT=0                       ;PRCA*4.5*321 Add DLNCT
"RTN","RCDPEDA2",57,0)
 F  D  Q:IEN3443=""  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",58,0)
 . S IEN3443=$O(^TMP("RCDAILYACT",$J,DTADD,IEN3443))
"RTN","RCDPEDA2",59,0)
 . Q:IEN3443=""
"RTN","RCDPEDA2",60,0)
 . S XX=$$GET1^DIQ(344.3,IEN3443,.03,"I")       ; IEN for 344.1
"RTN","RCDPEDA2",61,0)
 . S IEN344=+$O(^RCY(344,"AD",+XX,0))           ; IEN for 344
"RTN","RCDPEDA2",62,0)
 . S XX=$G(^TMP($J,"TOTALS","DEP",DTADD))
"RTN","RCDPEDA2",63,0)
 . S ^TMP($J,"TOTALS","DEP",DTADD)=XX+1         ; # of deposits for day
"RTN","RCDPEDA2",64,0)
 . S TOTDEP=$$GET1^DIQ(344.3,IEN3443,.08,"I")   ; Total Deposit Amount
"RTN","RCDPEDA2",65,0)
 . S XX=$G(^TMP($J,"TOTALS","DEPA",DTADD))
"RTN","RCDPEDA2",66,0)
 . S ^TMP($J,"TOTALS","DEPA",DTADD)=XX+TOTDEP   ; Total Deposit Amount for day
"RTN","RCDPEDA2",67,0)
 . S CRDOC=$$GET1^DIQ(344,IEN344,200,"I")       ; FMS Document Number
"RTN","RCDPEDA2",68,0)
 . S ^TMP($J,"TOTALS","CRDOC",IEN3443)=CRDOC
"RTN","RCDPEDA2",69,0)
 . I CRDOC="" D                                 ; No FMS Document Number
"RTN","RCDPEDA2",70,0)
 . . S YY=$G(^TMP($J,"TOTALS","FMS","D",-1))
"RTN","RCDPEDA2",71,0)
 . . S ^TMP($J,"TOTALS","FMS","D",-1)=YY+TOTDEP
"RTN","RCDPEDA2",72,0)
 . . S ^TMP($J,"TOTALS","FMS")="NO FMS DOC"
"RTN","RCDPEDA2",73,0)
 . I CRDOC'="" D                                ; FMS Document Number found
"RTN","RCDPEDA2",74,0)
 . . S YY=$$STATUS^GECSSGET(CRDOC)              ; Get the status of the doc
"RTN","RCDPEDA2",75,0)
 . . I YY=-1 D  Q                               ; Document wasn't found
"RTN","RCDPEDA2",76,0)
 . . . S XX=$G(^TMP($J,"TOTALS","FMS","D",-1))
"RTN","RCDPEDA2",77,0)
 . . . S ^TMP($J,"TOTALS","FMS","D",-1)=XX+TOTDEP
"RTN","RCDPEDA2",78,0)
 . . . S ^TMP($J,"TOTALS","FMS")="STATUS MISSING"
"RTN","RCDPEDA2",79,0)
 . . S XX=$E($P(YY," "),1,10)                   ; First Word of the status
"RTN","RCDPEDA2",80,0)
 . . S ^TMP($J,"TOTALS","FMS")=XX               ; First Word of the status
"RTN","RCDPEDA2",81,0)
 . . S Q=$E(YY,1)                               ; First Character of the status
"RTN","RCDPEDA2",82,0)
 . . S Q=$S(Q="E"!(Q="R"):0,Q="Q":2,1:1)        ; Q=0 - Reject or Error, 2 - Queued, 1 - good
"RTN","RCDPEDA2",83,0)
 . . S XX=$G(^TMP($J,"TOTALS","FMS","D",Q))
"RTN","RCDPEDA2",84,0)
 . . S ^TMP($J,"TOTALS","FMS","D",Q)=XX+TOTDEP  ; Rej/Err, Queued OR good Amount for day
"RTN","RCDPEDA2",85,0)
 . ;
"RTN","RCDPEDA2",86,0)
 . D ONEDEP(.INPUT,IEN3443,TOTDEP,.DLNCT)       ;PRCA*4.5*321 Gather and display one deposit
"RTN","RCDPEDA2",87,0)
 Q
"RTN","RCDPEDA2",88,0)
 ;
"RTN","RCDPEDA2",89,0)
ONEDEP(INPUT,IEN3443,TOTDEP,DLNCT) ; Gather and display lines for one Deposit
"RTN","RCDPEDA2",90,0)
 ; PRCA*4.5*321 new method to first gather all the lines before displaying them
"RTN","RCDPEDA2",91,0)
 ; Input:   INPUT                       - See RPT2 for details
"RTN","RCDPEDA2",92,0)
 ;          ^TMP(B1,$J,B2,B3)           - See RPT2 for details
"RTN","RCDPEDA2",93,0)
 ;          IEN3443                     - Internal IEN for file 344.3
"RTN","RCDPEDA2",94,0)
 ;          TOTDEP                      - Total Deposit Amount (344.3, .08)
"RTN","RCDPEDA2",95,0)
 ;          DLNCT                       - Current # of deposit lines displayed
"RTN","RCDPEDA2",96,0)
 ;          ^TMP($J,"DEPERRS")          - Current Line Count
"RTN","RCDPEDA2",97,0)
 ;                                        Note: Only passed if not in detail mode
"RTN","RCDPEDA2",98,0)
 ;          ^TMP($J,"DEPERRS,X) - Error line(s)
"RTN","RCDPEDA2",99,0)
 ; Output:  INPUT                       - See RPT2 for details
"RTN","RCDPEDA2",100,0)
 ;          DLNCT                       - Updated # of deposit lines displayed
"RTN","RCDPEDA2",101,0)
 ;          ^TMP(B1,$J,B2,B3,"EFT",B4)  - See RPT2 for details
"RTN","RCDPEDA2",102,0)
 ;          ^TMP($J,"TOTALS","DEP",C1)  - See RPT2 for details
"RTN","RCDPEDA2",103,0)
 ;          ^TMP($J,"DEPERRS")          - Updated Line Count
"RTN","RCDPEDA2",104,0)
 ;                                        Note: Only passed if not in detail mode
"RTN","RCDPEDA2",105,0)
 N CURLNS,DEPLNS,DETL,DTADD,EFTCTR,EFTLN,EFTLNS,LSTMAN,XX,YY,ZZ
"RTN","RCDPEDA2",106,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA2",107,0)
 S DTADD=$P(INPUT,"^",9)
"RTN","RCDPEDA2",108,0)
 K:DETL ^TMP($J,"ONEDEP"),^TMP($J,"DEPERRS")
"RTN","RCDPEDA2",109,0)
 S LSTMAN=$P(INPUT,"^",2)
"RTN","RCDPEDA2",110,0)
 I DETL D                                   ; Gather Detail Line
"RTN","RCDPEDA2",111,0)
 . D DETLN(.INPUT,IEN3443,TOTDEP)
"RTN","RCDPEDA2",112,0)
 S ^TMP($J,"TOTALS","FMSTOT")=0             ; Initialize FMS total for range
"RTN","RCDPEDA2",113,0)
 D ERRMSGS^RCDPEDA4(.INPUT,IEN3443)         ; Gather any error message lines
"RTN","RCDPEDA2",114,0)
 D PROCEFT(.INPUT,IEN3443)                  ; Gather lines for EFT records
"RTN","RCDPEDA2",115,0)
 Q:'DETL
"RTN","RCDPEDA2",116,0)
 ;
"RTN","RCDPEDA2",117,0)
 ; Determine overall line count for deposit
"RTN","RCDPEDA2",118,0)
 S ZZ=1                          ; deposit line (1st line per record)                 
"RTN","RCDPEDA2",119,0)
 S ZZ=ZZ+$G(^TMP($J,"DEPERRS"))  ; deposit errors line cnt
"RTN","RCDPEDA2",120,0)
 S XX=0 F XX=$O(^TMP($J,"ONEDEP",XX)) D  Q:XX=""
"RTN","RCDPEDA2",121,0)
 . S ZZ=ZZ+$G(^TMP($J,"ONEDEP",XX))
"RTN","RCDPEDA2",122,0)
 S DEPLNS=ZZ
"RTN","RCDPEDA2",123,0)
 ;
"RTN","RCDPEDA2",124,0)
 ; If not outputting to listman and at least 1 deposit is already displayed
"RTN","RCDPEDA2",125,0)
 ; on the page, check to see if we have don't have room to display the 
"RTN","RCDPEDA2",126,0)
 ; deposit detail line
"RTN","RCDPEDA2",127,0)
 I 'LSTMAN,DLNCT,(DLNCT+DEPLNS+2)>IOSL D  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",128,0)
 . S DLNCT=0
"RTN","RCDPEDA2",129,0)
 . D NEWDHDR(.INPUT,DTADD)
"RTN","RCDPEDA2",130,0)
 . Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",131,0)
 ; Display first deposit line
"RTN","RCDPEDA2",132,0)
 S DLNCT=DLNCT+1
"RTN","RCDPEDA2",133,0)
 S XX=^TMP($J,"ONEDEP",0,1)
"RTN","RCDPEDA2",134,0)
 D SL^RCDPEDA3(.INPUT,XX)
"RTN","RCDPEDA2",135,0)
 ;
"RTN","RCDPEDA2",136,0)
 ; If not outputting to listman, check to see if we have don't have room to
"RTN","RCDPEDA2",137,0)
 ; display any deposit error info
"RTN","RCDPEDA2",138,0)
 S XX=$G(^TMP($J,"DEPERRS"))
"RTN","RCDPEDA2",139,0)
 I 'LSTMAN,XX,XX<IOSL,(DLNCT+XX)>IOSL D  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",140,0)
 . S DLNCT=0
"RTN","RCDPEDA2",141,0)
 . D NEWDHDR(.INPUT,DTADD)
"RTN","RCDPEDA2",142,0)
 . Q:$P(INPUT,"^",5)=1 
"RTN","RCDPEDA2",143,0)
 S DLNCT=DLNCT+XX
"RTN","RCDPEDA2",144,0)
 ;
"RTN","RCDPEDA2",145,0)
 ; Display Deposit Error (if any)
"RTN","RCDPEDA2",146,0)
 S XX=""
"RTN","RCDPEDA2",147,0)
 F  D  Q:XX=""
"RTN","RCDPEDA2",148,0)
 . S XX=$O(^TMP($J,"DEPERRS",XX))
"RTN","RCDPEDA2",149,0)
 . Q:XX=""
"RTN","RCDPEDA2",150,0)
 . S YY=^TMP($J,"DEPERRS",XX)
"RTN","RCDPEDA2",151,0)
 . D SL^RCDPEDA3(.INPUT,YY)
"RTN","RCDPEDA2",152,0)
 ;
"RTN","RCDPEDA2",153,0)
 ; Display Remaining Deposit lines one EFT at a time
"RTN","RCDPEDA2",154,0)
 S EFTCTR=0
"RTN","RCDPEDA2",155,0)
 F  D  Q:EFTCTR=""  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",156,0)
 . S EFTCTR=$O(^TMP($J,"ONEDEP",EFTCTR))
"RTN","RCDPEDA2",157,0)
 . Q:EFTCTR=""
"RTN","RCDPEDA2",158,0)
 . ;
"RTN","RCDPEDA2",159,0)
 . ; If not outputting to listman, check to see if we have don't have room to
"RTN","RCDPEDA2",160,0)
 . ; display any EFT
"RTN","RCDPEDA2",161,0)
 . S EFTLNS=$G(^TMP($J,"ONEDEP",EFTCTR))
"RTN","RCDPEDA2",162,0)
 . I 'LSTMAN,EFTLNS<IOSL,(DLNCT+EFTLNS)>IOSL D  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",163,0)
 . . D NEWDHDR(.INPUT,DTADD)
"RTN","RCDPEDA2",164,0)
 . . Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",165,0)
 . . S XX=^TMP($J,"ONEDEP",0,1)
"RTN","RCDPEDA2",166,0)
 . . D SL^RCDPEDA3(.INPUT,XX)
"RTN","RCDPEDA2",167,0)
 . . S DLNCT=1
"RTN","RCDPEDA2",168,0)
 . S EFTLN=""
"RTN","RCDPEDA2",169,0)
 . F  D  Q:EFTLN=""
"RTN","RCDPEDA2",170,0)
 . . S EFTLN=$O(^TMP($J,"ONEDEP",EFTCTR,EFTLN))
"RTN","RCDPEDA2",171,0)
 . . Q:EFTLN=""
"RTN","RCDPEDA2",172,0)
 . . S ZZ=^TMP($J,"ONEDEP",EFTCTR,EFTLN)
"RTN","RCDPEDA2",173,0)
 . . D SL^RCDPEDA3(.INPUT,ZZ)
"RTN","RCDPEDA2",174,0)
 . . S DLNCT=DLNCT+1
"RTN","RCDPEDA2",175,0)
 Q
"RTN","RCDPEDA2",176,0)
 ;
"RTN","RCDPEDA2",177,0)
NEWDHDR(INPUT,DTADD) ; display a new deposit header for the specified date
"RTN","RCDPEDA2",178,0)
 ; Input:   INPUT   - See RPT2 for details
"RTN","RCDPEDA2",179,0)
 ;          DTADD   - Internal Date deposit are being displayed for
"RTN","RCDPEDA2",180,0)
 N XX
"RTN","RCDPEDA2",181,0)
 D HDR^RCDPEDA3(.INPUT)
"RTN","RCDPEDA2",182,0)
 Q:$P(INPUT,"^",5)=1   ; user quit or timed out
"RTN","RCDPEDA2",183,0)
 S XX="DATE EFT DEPOSIT RECEIVED: "_$$FMTE^XLFDT(DTADD,"2Z")
"RTN","RCDPEDA2",184,0)
 S XX=$J("",80-$L(XX)\2)_XX              ; Center it
"RTN","RCDPEDA2",185,0)
 D SL^RCDPEDA3(.INPUT,XX)
"RTN","RCDPEDA2",186,0)
 D SL^RCDPEDA3(.INPUT," ")
"RTN","RCDPEDA2",187,0)
 Q
"RTN","RCDPEDA2",188,0)
 ;
"RTN","RCDPEDA2",189,0)
DETLN(INPUT,IEN3443,TOTDEP) ; Display detail line
"RTN","RCDPEDA2",190,0)
 ; Input:   INPUT                   - See RPT2 for details
"RTN","RCDPEDA2",191,0)
 ;          IEN3443                 - Internal IEN for file 344.3
"RTN","RCDPEDA2",192,0)
 ;          TOTDEP                  - Total Deposit Amount (344.3, .08)
"RTN","RCDPEDA2",193,0)
 ;          ^TMP($J,"TOTALS","FMS") - FMS Document # or "NO FMS DOC"
"RTN","RCDPEDA2",194,0)
 ; Output:  INPUT                   - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA2",195,0)
 ;                                      A5 - Updated Page Number
"RTN","RCDPEDA2",196,0)
 ;                                      A6 - Stop Flag
"RTN","RCDPEDA2",197,0)
 ;                                      A8 - Updated Line Counter
"RTN","RCDPEDA2",198,0)
 ;
"RTN","RCDPEDA2",199,0)
 N DTADD,DETL,LSTMAN,NJ,X,XX,YY
"RTN","RCDPEDA2",200,0)
 S LSTMAN=$P(INPUT,"^",2),NJ=$P(INPUT,"^",1)
"RTN","RCDPEDA2",201,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA2",202,0)
 S XX=$$GET1^DIQ(344.3,IEN3443,.06,"I")         ; Deposit Number
"RTN","RCDPEDA2",203,0)
 ;
"RTN","RCDPEDA2",204,0)
 ; PRCA*4.5*283 - change length of DEP # from 6 to 9 to allow for 9 digit DEP #'s
"RTN","RCDPEDA2",205,0)
 S X=$$SETSTR^VALM1(XX,"",1,9)
"RTN","RCDPEDA2",206,0)
 ;
"RTN","RCDPEDA2",207,0)
 ; Change DEPOSIT DT's starting position from 9 to 12
"RTN","RCDPEDA2",208,0)
 S YY=$$GET1^DIQ(344.3,IEN3443,.07,"I")         ; Deposit Date
"RTN","RCDPEDA2",209,0)
 S X=$$SETSTR^VALM1($$FMTE^XLFDT(YY\1,"2Z"),X,12,10)
"RTN","RCDPEDA2",210,0)
 ;
"RTN","RCDPEDA2",211,0)
 ; Change starting position from 21 to 23 & reduce length of spaces from 10 to 8.
"RTN","RCDPEDA2",212,0)
 S X=$$SETSTR^VALM1("",X,23,8)
"RTN","RCDPEDA2",213,0)
 S X=$$SETSTR^VALM1("",X,32,10)
"RTN","RCDPEDA2",214,0)
 S XX=^TMP($J,"TOTALS","FMS")
"RTN","RCDPEDA2",215,0)
 S X=$$SETSTR^VALM1($E($J(TOTDEP,"",2)_$J("",20),1,20)_XX,X,43,37)
"RTN","RCDPEDA2",216,0)
 S ^TMP($J,"ONEDEP",0,1)=X    ; PRCA*4.5*321
"RTN","RCDPEDA2",217,0)
 Q
"RTN","RCDPEDA2",218,0)
 ;
"RTN","RCDPEDA2",219,0)
PROCEFT(INPUT,IEN3443)  ; Process EFT records
"RTN","RCDPEDA2",220,0)
 ; Input:   INPUT                           - See RPT2 for details
"RTN","RCDPEDA2",221,0)
 ;          IEN3443                         - Internal IEN for file 344.3
"RTN","RCDPEDA2",222,0)
 ;          ^TMP($J,"ONEDEP",0,1)           - Deposit Detail line
"RTN","RCDPEDA2",223,0)
 ;          ^TMP($J,"TOTALS","DEBIT","D")   - Current Total # of Debit EFTs for date
"RTN","RCDPEDA2",224,0)
 ;          ^TMP($J,"TOTALS","DEBITA","D")  - Current Total Amount of Debit EFTs for date
"RTN","RCDPEDA2",225,0)
 ;          ^TMP($J,"TOTALS","EFT","D")     - Current Total Deposit Amount by EFTs for date
"RTN","RCDPEDA2",226,0)
 ;          ^TMP($J,"TOTALS","MATCH","D")   - Current Total matched EFTs for date
"RTN","RCDPEDA2",227,0)
 ;          ^TMP($J,"TOTALS","FMSTOT")      - Current Total Deposit Amount for date range
"RTN","RCDPEDA2",228,0)
 ; Output:  INPUT                           - A1^A2^A3^...^An - The following pieces
"RTN","RCDPEDA2",229,0)
 ;                                                              may be updated
"RTN","RCDPEDA2",230,0)
 ;                                              A5 - Updated Page Number
"RTN","RCDPEDA2",231,0)
 ;                                              A6 - Stop Flag
"RTN","RCDPEDA2",232,0)
 ;                                              A8 - Updated Line Counter
"RTN","RCDPEDA2",233,0)
 ;       ^TMP($J,"ONEDEP",0,1)               - Deposit Detail line
"RTN","RCDPEDA2",234,0)
 ;       ^TMP($J,"ONEDEP","EFTCTR")          - # of lines for This EFT
"RTN","RCDPEDA2",235,0)
 ;       ^TMP($J,"ONEDEP","EFTCTR",xx)=LINE  - EFT Lines
"RTN","RCDPEDA2",236,0)
 ;       ^TMP($J,"TOTALS","DEBIT","D")   - Updated Total # of Debit EFTs for date
"RTN","RCDPEDA2",237,0)
 ;       ^TMP($J,"TOTALS","DEBITA","D")  - Updated Total Amount of Debit EFTs for date
"RTN","RCDPEDA2",238,0)
 ;       ^TMP($J,"TOTALS","DEBIT")       - Updated Total # of Debit EFTs for date range
"RTN","RCDPEDA2",239,0)
 ;       ^TMP($J,"TOTALS","DEBITA")      - Updated Total Amount of Debit EFTs for date range
"RTN","RCDPEDA2",240,0)
 ;       ^TMP($J,"TOTALS","FMSTOT")      - Updated Total Deposit Amount for date range
"RTN","RCDPEDA2",241,0)
 ;       ^TMP($J,"TOTALS","EFT","D")     - Updated Total Deposit Amount by EFTs for date
"RTN","RCDPEDA2",242,0)
 ;       ^TMP($J,"TOTALS","MATCH","D")   - Updated Total matched EFTs for date
"RTN","RCDPEDA2",243,0)
 N DETL,DFLG,DTADD,EFTCTR,IEN34431,PAMT,RCFMS1,TRDOC,X,XX,YY    ; PRCA*4.5*321 Added DFLG
"RTN","RCDPEDA2",244,0)
 ; PRCA*4.5*321 capture display and line cnt to ^TMP($J,"ONEDEP")
"RTN","RCDPEDA2",245,0)
 S ^TMP($J,"TOTALS","FMSTOT")=0,EFTCTR=0
"RTN","RCDPEDA2",246,0)
 S DTADD=$P(INPUT,"^",9)
"RTN","RCDPEDA2",247,0)
 S RCFMS1="NO FMS DOC"
"RTN","RCDPEDA2",248,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA2",249,0)
 S IEN34431=""
"RTN","RCDPEDA2",250,0)
 F  D  Q:IEN34431=""  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA2",251,0)
 . S IEN34431=$O(^TMP("RCDAILYACT",$J,DTADD,IEN3443,"EFT",IEN34431))
"RTN","RCDPEDA2",252,0)
 . Q:IEN34431=""
"RTN","RCDPEDA2",253,0)
 . S XX=$G(^TMP($J,"TOTALS","EFT","D"))+1
"RTN","RCDPEDA2",254,0)
 . S ^TMP($J,"TOTALS","EFT","D")=XX                ; Total # EFTs for date
"RTN","RCDPEDA2",255,0)
 . ;
"RTN","RCDPEDA2",256,0)
 . S YY=$$GET1^DIQ(344.31,IEN34431,3,"E")          ; Debit/Credit flag ; PRCA*4.5*321 added line
"RTN","RCDPEDA2",257,0)
 . S DFLG=$S(YY="D":1,1:0)                         ; PRCA*4.5*321 added line
"RTN","RCDPEDA2",258,0)
 . S PAMT=$$GET1^DIQ(344.31,IEN34431,.07,"I")      ; Amount of Payment
"RTN","RCDPEDA2",259,0)
 . I DFLG D                                        ; PRCA*4.5*321 added if Statement
"RTN","RCDPEDA2",260,0)
 . . S XX=$G(^TMP($J,"TOTALS","DEBIT","D"))+1
"RTN","RCDPEDA2",261,0)
 . . S ^TMP($J,"TOTALS","DEBIT","D")=XX            ; Total # Debit EFTs for date
"RTN","RCDPEDA2",262,0)
 . . S XX=$G(^TMP($J,"TOTALS","DEBITA","D"))       ; Total Debit Amounts for date
"RTN","RCDPEDA2",263,0)
 . . S ^TMP($J,"TOTALS","DEBITA","D")=XX+PAMT
"RTN","RCDPEDA2",264,0)
 . ;
"RTN","RCDPEDA2",265,0)
 . S XX=+$$GET1^DIQ(344.31,IEN34431,.09,"I")       ; Receipt # from 344.31
"RTN","RCDPEDA2",266,0)
 . S TRDOC=$$GET1^DIQ(344,XX,200,"I")              ; FMS Document #
"RTN","RCDPEDA2",267,0)
 . S X=$S(TRDOC'="":$$STATUS^GECSSGET(TRDOC),1:"")
"RTN","RCDPEDA2",268,0)
 . I X'="",X'=-1,$E(X,1)'="R",$E(X,1)'="E" D
"RTN","RCDPEDA2",269,0)
 . . S XX=$G(^TMP($J,"TOTALS","FMSTOT"))
"RTN","RCDPEDA2",270,0)
 . . S ^TMP($J,"TOTALS","FMSTOT")=XX+PAMT          ; Total Amount of Payment
"RTN","RCDPEDA2",271,0)
 . . S RCFMS1=$S($E(X,1)="Q":"QUEUED TO POST",1:"POSTED")
"RTN","RCDPEDA2",272,0)
 . S XX=$S(X="":"",X=-1:"NO FMS DOC",1:$E($P(X," ",1),1,10))
"RTN","RCDPEDA2",273,0)
 . S RCFMS1(IEN34431)=XX                           ; FMS Document Status for EFT
"RTN","RCDPEDA2",274,0)
 . S XX=$$GET1^DIQ(344.31,IEN34431,.08,"I")        ; Match Status
"RTN","RCDPEDA2",275,0)
 . I XX D
"RTN","RCDPEDA2",276,0)
 . . S XX=$G(^TMP($J,"TOTALS","MATCH","D"))
"RTN","RCDPEDA2",277,0)
 . . S ^TMP($J,"TOTALS","MATCH","D")=XX+1          ; Total Matched EFTS by date
"RTN","RCDPEDA2",278,0)
 . I DETL D                            ;PRCA*4.5*321
"RTN","RCDPEDA2",279,0)
 . . S EFTCTR=EFTCTR+1
"RTN","RCDPEDA2",280,0)
 . . D EFTDTL(.INPUT,IEN3443,IEN34431,.RCFMS1,EFTCTR)
"RTN","RCDPEDA2",281,0)
 . . S YY=$G(^TMP($J,"ONEDEP",EFTCTR))+1
"RTN","RCDPEDA2",282,0)
 . . S ^TMP($J,"ONEDEP",EFTCTR)=YY
"RTN","RCDPEDA2",283,0)
 . . S ^TMP($J,"ONEDEP",EFTCTR,YY)=" "
"RTN","RCDPEDA2",284,0)
 Q
"RTN","RCDPEDA2",285,0)
 ;
"RTN","RCDPEDA2",286,0)
EFTDTL(INPUT,IEN3443,IEN34431,RCFMS1,EFTCTR)   ; Display EFT Detail
"RTN","RCDPEDA2",287,0)
 ; Input:   INPUT                   - See RPT2 for details
"RTN","RCDPEDA2",288,0)
 ;          IEN3443                 - Internal IEN for file 344.3
"RTN","RCDPEDA2",289,0)
 ;          IEN34431                - Internal IEN for file 344.31
"RTN","RCDPEDA2",290,0)
 ;          RCFMS1(IEN34431)        - FMS Document Status for EFT IEN
"RTN","RCDPEDA2",291,0)
 ;          EFTCTR                  - Used to store lines for an EFT
"RTN","RCDPEDA2",292,0)
 ;          ^TMP($J,ONEDEP,0,1)     - Deposit Detail line
"RTN","RCDPEDA2",293,0)
 ; Output:  INPUT                   - See RPT2 for details
"RTN","RCDPEDA2",294,0)
 ;          ^TMP($J,ONEDEP,0,1)     - Deposit Detail line
"RTN","RCDPEDA2",295,0)
 ;          ^TMP($J,ONEDEP,EFTCTR)  - # of lines for EFT
"RTN","RCDPEDA2",296,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- EFT Deposit Lines ;PRCA*4.5*321 capture display to ^TMP($J,"ONEDEP",EFTRCR) including line cnt
"RTN","RCDPEDA2",297,0)
 N EFTLN,PAY,PAYER,PAYID,X,XX,YY,ZZ
"RTN","RCDPEDA2",298,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.01,"I")       ; EFT Transaction IEN
"RTN","RCDPEDA2",299,0)
 S X=$$SETSTR^VALM1(XX,"",3,6)
"RTN","RCDPEDA2",300,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.12,"I")       ; Date Claims Paid
"RTN","RCDPEDA2",301,0)
 S X=$$SETSTR^VALM1($$FMTE^XLFDT(XX\1,"2Z"),X,31,8)
"RTN","RCDPEDA2",302,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.07,"I")       ; Amount of Payment
"RTN","RCDPEDA2",303,0)
 S X=$$SETSTR^VALM1($J(XX,"",2),X,41,18)
"RTN","RCDPEDA2",304,0)
 ;
"RTN","RCDPEDA2",305,0)
 ; PRCA*4.5*284, Move to left 3 space (61 to 58) to allow for 10 digit ERA #'s
"RTN","RCDPEDA2",306,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.08,"I")       ; Match Status
"RTN","RCDPEDA2",307,0)
 S YY=$$GET1^DIQ(344.31,IEN34431,.1,"I")        ; ERA IEN
"RTN","RCDPEDA2",308,0)
 S X=$$SETSTR^VALM1($$EXTERNAL^DILFD(344.31,.08,"",+XX)_$S(XX=1:"/ERA #"_YY,1:""),X,57,20)
"RTN","RCDPEDA2",309,0)
 S ^TMP($J,"ONEDEP",EFTCTR,1)=X
"RTN","RCDPEDA2",310,0)
 ;
"RTN","RCDPEDA2",311,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.04,"I")       ; Trace Number
"RTN","RCDPEDA2",312,0)
 S X=$$SETSTR^VALM1(XX,"",5,$L(XX))
"RTN","RCDPEDA2",313,0)
 S XX=$G(^TMP($J,"TOTALS","CRDOC",IEN3443))
"RTN","RCDPEDA2",314,0)
 S X=$$SETSTR^VALM1(XX,X,59,$L(XX))             ; CR Document Number  ; PRCA*4.5*318 add
"RTN","RCDPEDA2",315,0)
 S ^TMP($J,"ONEDEP",EFTCTR,2)=X
"RTN","RCDPEDA2",316,0)
 ;
"RTN","RCDPEDA2",317,0)
 S PAYER=$$GET1^DIQ(344.31,IEN34431,.02,"I")    ; Payer Name
"RTN","RCDPEDA2",318,0)
 S:PAYER="" PAYER="NO PAYER NAME RECEIVED"      ; PRCA*4.5*298
"RTN","RCDPEDA2",319,0)
 S PAYID=$$GET1^DIQ(344.31,IEN34431,.03,"I")    ; Payer ID
"RTN","RCDPEDA2",320,0)
 S PAY=PAYER_"/"_PAYID
"RTN","RCDPEDA2",321,0)
 I $L(PAY)>74 D                                 ; PRCA*4.5*318 added if statement
"RTN","RCDPEDA2",322,0)
 . S ZZ=$L(PAY,"/"),XX=$P(PAY,"/",1,ZZ-1),YY=$P(PAY,"/",ZZ)
"RTN","RCDPEDA2",323,0)
 . S XX=$E(XX,1,$L(XX)-($L(PAY)-74)),PAY=XX_"/"_YY
"RTN","RCDPEDA2",324,0)
 S X=$$SETSTR^VALM1(PAY,"",7,74)
"RTN","RCDPEDA2",325,0)
 S ^TMP($J,"ONEDEP",EFTCTR,3)=X
"RTN","RCDPEDA2",326,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=3
"RTN","RCDPEDA2",327,0)
 ;
"RTN","RCDPEDA2",328,0)
 ; PRCA*4.5*318 add TR #s to detail rpt
"RTN","RCDPEDA2",329,0)
 ; Gather & display all TR Doc #s for EFT detail record           
"RTN","RCDPEDA2",330,0)
 D GETTR^RCDPEDA4(IEN34431,.INPUT)              ; PRCA*4.5*321 moved for routine size
"RTN","RCDPEDA2",331,0)
 S X=""
"RTN","RCDPEDA2",332,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,3,"E")         ; Debit Flag ; PRCA 4.5*321 Added line
"RTN","RCDPEDA2",333,0)
 S XX=$S(XX="D":"DEBIT",1:"     ")              ; PRCA*4.5*321 Added line
"RTN","RCDPEDA2",334,0)
 S X=$$SETSTR^VALM1(XX,X,37,5)
"RTN","RCDPEDA2",335,0)
 ;
"RTN","RCDPEDA2",336,0)
 ; PRCA*4.5*304 - lengthen receipt number display to 12
"RTN","RCDPEDA2",337,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.09,"I")       ; Receipt IEN
"RTN","RCDPEDA2",338,0)
 I XX'="" D
"RTN","RCDPEDA2",339,0)
 . S YY=$$GET1^DIQ(344,XX,.01,"I")              ; Receipt Number
"RTN","RCDPEDA2",340,0)
 . S X=$$SETSTR^VALM1(YY,X,45,12)               ; PRCA*4.5*321 changed 46 to 45
"RTN","RCDPEDA2",341,0)
 S X=$$SETSTR^VALM1($G(RCFMS1(IEN34431)),X,61,19)
"RTN","RCDPEDA2",342,0)
 S EFTLN=$G(^TMP($J,"ONEDEP",EFTCTR))+1
"RTN","RCDPEDA2",343,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA2",344,0)
 S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=X
"RTN","RCDPEDA2",345,0)
 D EFTERRS^RCDPEDA4(.INPUT,IEN34431,EFTCTR)     ; Display any EFT Errors
"RTN","RCDPEDA2",346,0)
 D DUP(.INPUT,IEN34431,EFTCTR)                  ; Display any Duplicate Errors
"RTN","RCDPEDA2",347,0)
 Q
"RTN","RCDPEDA2",348,0)
 ;
"RTN","RCDPEDA2",349,0)
DUP(INPUT,IEN34431,EFTCTR) ; Check to see if the EFT was a duplicate
"RTN","RCDPEDA2",350,0)
 ; Input:   IEN34431                - Internal IEN for file 344.31
"RTN","RCDPEDA2",351,0)
 ;          INPUT                   - See RPT2 for details
"RTN","RCDPEDA2",352,0)
 ;          EFTCTR                  - Used to store lines for EFT
"RTN","RCDPEDA2",353,0)
 ;          ^TMP($J,ONEDEP,EFTCTE)  - Current # of lines for EFT
"RTN","RCDPEDA2",354,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- Current Deposit Lines
"RTN","RCDPEDA2",355,0)
 ; Output:  ^TMP($J,ONEDEP,EFTCTR)  - Updated # of lines for EFT
"RTN","RCDPEDA2",356,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- Updated EFT Lines
"RTN","RCDPEDA2",357,0)
 ;
"RTN","RCDPEDA2",358,0)
 ;PRCA*4.5*321 capture display to ^TMP($J,"ONEDEP",EFTRCR) including line cnt
"RTN","RCDPEDA2",359,0)
 N EFTLN,XX,YY
"RTN","RCDPEDA2",360,0)
 Q:'$D(^RCY(344.31,IEN34431,3))                 ; Not a duplicate
"RTN","RCDPEDA2",361,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,.18,"I")       ; Date/Time Removed
"RTN","RCDPEDA2",362,0)
 S YY=$$GET1^DIQ(344.31,IEN34431,.17,"I")       ; User who removed it
"RTN","RCDPEDA2",363,0)
 S X="   MARKED AS DUPLICATE: "_$$FMTE^XLFDT(XX)_" "_$$EXTERNAL^DILFD(344.31,.17,,YY)
"RTN","RCDPEDA2",364,0)
 S EFTLN=$G(^TMP($J,"ONEDEP",EFTCTR))+1
"RTN","RCDPEDA2",365,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA2",366,0)
 S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=X
"RTN","RCDPEDA2",367,0)
 S EFTLN=EFTLN+1
"RTN","RCDPEDA2",368,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA2",369,0)
 S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=" "
"RTN","RCDPEDA2",370,0)
 Q
"RTN","RCDPEDA2",371,0)
 ;
"RTN","RCDPEDA3")
0^5^B113392851
"RTN","RCDPEDA3",1,0)
RCDPEDA3 ;AITC/DW - ACTIVITY REPORT ;Feb 17, 2017@10:37:00
"RTN","RCDPEDA3",2,0)
 ;;4.5;Accounts Receivable;**318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEDA3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDA3",4,0)
 Q
"RTN","RCDPEDA3",5,0)
 ;
"RTN","RCDPEDA3",6,0)
HDR(INPUT) ;EP from RCDPEDAR
"RTN","RCDPEDA3",7,0)
 ; Displays report header
"RTN","RCDPEDA3",8,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDA3",9,0)
 ;                         A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA3",10,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA3",11,0)
 ;                         A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA3",12,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDA3",13,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",14,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDA3",15,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDA3",16,0)
 ;                         A9 - Current line count
"RTN","RCDPEDA3",17,0)
 ;                         A10- 1 - Only Display EFTs with a debit flag of 'D'
"RTN","RCDPEDA3",18,0)
 ;                              0 - Display all EFTs
"RTN","RCDPEDA3",19,0)
 ; Output:  INPUT       - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA3",20,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDA3",21,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",22,0)
 ;                         A8 - Updated line count
"RTN","RCDPEDA3",23,0)
 N CTR,CURPG,DETL,DONLY,DTST,DTEND,NJ,NOJUST,PLN,STOP,X,XX,Y,Z,Z0,Z1
"RTN","RCDPEDA3",24,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA3",25,0)
 S CURPG=$P(INPUT,"^",4)
"RTN","RCDPEDA3",26,0)
 S STOP=$P(INPUT,"^",5)
"RTN","RCDPEDA3",27,0)
 S DTST=$P(INPUT,"^",6)                     ; Date Range Start
"RTN","RCDPEDA3",28,0)
 S DTEND=$P(INPUT,"^",7)                    ; Date Range Ends
"RTN","RCDPEDA3",29,0)
 S DONLY=$P(INPUT,"^",10)                   ; EFTs with Debits Only  ;PRCA*4.5*321 add debit logic
"RTN","RCDPEDA3",30,0)
 S NJ=$P(INPUT,"^",1)
"RTN","RCDPEDA3",31,0)
 Q:NJ&(CURPG)
"RTN","RCDPEDA3",32,0)
 I CURPG!($E(IOST,1,2)="C-") D
"RTN","RCDPEDA3",33,0)
 . Q:NJ
"RTN","RCDPEDA3",34,0)
 . I CURPG,($E(IOST,1,2)="C-") D  Q:STOP
"RTN","RCDPEDA3",35,0)
 . . S STOP=$$ASK()
"RTN","RCDPEDA3",36,0)
 . W @IOF ; Write form feed
"RTN","RCDPEDA3",37,0)
 I STOP S $P(INPUT,"^",5)=1 Q
"RTN","RCDPEDA3",38,0)
 S CURPG=CURPG+1,$P(INPUT,"^",4)=CURPG
"RTN","RCDPEDA3",39,0)
 ;
"RTN","RCDPEDA3",40,0)
 ; PRCA276 if coming from nightly job need to define payer selection variable
"RTN","RCDPEDA3",41,0)
 I NJ N RCNP S RCNP=2
"RTN","RCDPEDA3",42,0)
 ;
"RTN","RCDPEDA3",43,0)
 ; PRCA276 if coming from nightly job need to define division selection variable
"RTN","RCDPEDA3",44,0)
 I NJ N VAUTD S VAUTD=1
"RTN","RCDPEDA3",45,0)
 S Z0="EDI LOCKBOX EFT DAILY ACTIVITY "_$S(DETL:"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDA3",46,0)
 S Z=$$SETSTR^VALM1($J("",80-$L(Z0)\2)_Z0,"",1,79)
"RTN","RCDPEDA3",47,0)
 S Z=$$SETSTR^VALM1("Page: "_CURPG,Z,70,10)
"RTN","RCDPEDA3",48,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",49,0)
 S Z="RUN DATE: "_$$FMTE^XLFDT($$NOW^XLFDT(),"2Z"),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDA3",50,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",51,0)
 ;
"RTN","RCDPEDA3",52,0)
 ; PRCA276 add divisions to header
"RTN","RCDPEDA3",53,0)
 S Z1=""
"RTN","RCDPEDA3",54,0)
 I 'VAUTD D
"RTN","RCDPEDA3",55,0)
 . S Z0=0
"RTN","RCDPEDA3",56,0)
 . F  D  Q:'Z0
"RTN","RCDPEDA3",57,0)
 .. S Z0=$O(VAUTD(Z0))
"RTN","RCDPEDA3",58,0)
 .. Q:'Z0
"RTN","RCDPEDA3",59,0)
 .. S XX=$$GET1^DIQ(40.8,Z0,1,"I") ;Facility Number   ;PRCA*4.5*321
"RTN","RCDPEDA3",60,0)
 .. ;S Z1=Z1_VAUTD(Z0)_", "
"RTN","RCDPEDA3",61,0)
 .. S Z1=Z1_XX_", "
"RTN","RCDPEDA3",62,0)
 S Z="DIVISIONS: "_$S(VAUTD:"ALL",1:$E(Z1,1,$L(Z1)-2)),Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDA3",63,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",64,0)
 ;
"RTN","RCDPEDA3",65,0)
 ; PRCA276 add payer selection list to header
"RTN","RCDPEDA3",66,0)
 S NOJUST=0
"RTN","RCDPEDA3",67,0)
 I RCNP'=2 D
"RTN","RCDPEDA3",68,0)
 . S CTR=1,Z0=0,PLN(CTR)=""
"RTN","RCDPEDA3",69,0)
 . F  D  Q:'Z0
"RTN","RCDPEDA3",70,0)
 . . S Z0=$O(^TMP("RCSELPAY",$J,Z0))
"RTN","RCDPEDA3",71,0)
 . . Q:'Z0
"RTN","RCDPEDA3",72,0)
 . . S XX=^TMP("RCSELPAY",$J,Z0)
"RTN","RCDPEDA3",73,0)
 . . I ($L(XX)+$L(PLN(CTR))+10)>80 D
"RTN","RCDPEDA3",74,0)
 . . . S CTR=CTR+1,PLN(CTR)=" "_XX,NOJUST=1
"RTN","RCDPEDA3",75,0)
 . . E  S PLN(CTR)=PLN(CTR)_$S(PLN(CTR)="":XX,1:", "_XX)
"RTN","RCDPEDA3",76,0)
 S Z="PAYERS: "_$S(RCNP=2:"ALL",1:PLN(1))
"RTN","RCDPEDA3",77,0)
 S:'NOJUST Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDA3",78,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",79,0)
 S CTR=1
"RTN","RCDPEDA3",80,0)
 F  D  Q:CTR=""
"RTN","RCDPEDA3",81,0)
 . S CTR=$O(PLN(CTR))
"RTN","RCDPEDA3",82,0)
 . Q:CTR=""
"RTN","RCDPEDA3",83,0)
 . D SL(.INPUT,PLN(CTR))
"RTN","RCDPEDA3",84,0)
 ;
"RTN","RCDPEDA3",85,0)
 ; PRCA276  add date filter to header
"RTN","RCDPEDA3",86,0)
 S Z="DATE RANGE: "_$$FMTE^XLFDT(DTST,"2Z")_" - "_$$FMTE^XLFDT(DTEND,"2Z")
"RTN","RCDPEDA3",87,0)
 S Z=Z_" (DATE DEPOSIT ADDED)        DEBIT ONLY EFTs: "   ; PRCA*4.5*321 debit info
"RTN","RCDPEDA3",88,0)
 S Z=Z_$S(DONLY:"YES",1:"NO")
"RTN","RCDPEDA3",89,0)
 S Z=$J("",80-$L(Z)\2)_Z
"RTN","RCDPEDA3",90,0)
 D SL(.INPUT,Z)
"RTN","RCDPEDA3",91,0)
 I DETL D
"RTN","RCDPEDA3",92,0)
 . ;
"RTN","RCDPEDA3",93,0)
 . ; PRCA*4.5*283 - Add 3 more spaces between DEP # and DEPOSIT DT 
"RTN","RCDPEDA3",94,0)
 . ; and remove 3 spaces between DEPOSIT DT and DEP AMOUNT to allow for 9 digit DEP #'s
"RTN","RCDPEDA3",95,0)
 . D SL(.INPUT,"")
"RTN","RCDPEDA3",96,0)
 . S XX="DEP #      DEPOSIT DT  "_$J("",19)_"DEP AMOUNT          FMS DEPOSIT STAT"
"RTN","RCDPEDA3",97,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",98,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",99,0)
 . ;
"RTN","RCDPEDA3",100,0)
 . ; PRCA*4.5*318, Move entire EFT # row to left 1 space to adjust for other rows needing space
"RTN","RCDPEDA3",101,0)
 . ; PRCA*4.5*284, Move Match Status to left 3 space to allow for 10 digit ERA #'s
"RTN","RCDPEDA3",102,0)
 . S XX=$J("",2)_"EFT #"_$J("",22)_"DATE PD   PAYMENT AMOUNT  ERA MATCH STATUS"
"RTN","RCDPEDA3",103,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",104,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",105,0)
 . ; PRCA*4.5*318, Move entire EFT Payer Trace # row to left 6 spaces to adjust for other rows needing space
"RTN","RCDPEDA3",106,0)
 . S Z=$$SETSTR^VALM1($J("",4)_"EFT PAYER TRACE #","",1,52)
"RTN","RCDPEDA3",107,0)
 . S Z=$$SETSTR^VALM1("CR #",Z,59,4)     ;PRCA*4.5*318 add CR #
"RTN","RCDPEDA3",108,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",109,0)
 . ; PRCA*4.5*318, Move entire Payment From row to left 8 spaces to adjust 
"RTN","RCDPEDA3",110,0)
 . ; a possible 60 character Payer Name and 20 character Payer ID
"RTN","RCDPEDA3",111,0)
 . S XX=$J("",6)_"PAYMENT FROM"
"RTN","RCDPEDA3",112,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",113,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",114,0)
 . S XX=$J("",3)_"TR #"                    ;PRCA*4.5*318 add TR #
"RTN","RCDPEDA3",115,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",116,0)
 . D SL(.INPUT,Z)                          ; TR DOC header
"RTN","RCDPEDA3",117,0)
 . S XX=$J("",36)_"DEBIT   DEP RECEIPT #"  ;PRCA*4.5*321
"RTN","RCDPEDA3",118,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,$L(XX))
"RTN","RCDPEDA3",119,0)
 . S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDA3",120,0)
 . D SL(.INPUT,Z)
"RTN","RCDPEDA3",121,0)
 D SL(.INPUT,$TR($J("",IOM-1)," ","="))
"RTN","RCDPEDA3",122,0)
 Q
"RTN","RCDPEDA3",123,0)
 ;
"RTN","RCDPEDA3",124,0)
TOTSDAY(INPUT) ;EP from RCDPEDAR
"RTN","RCDPEDA3",125,0)
 ;               Display the totals for the specified date
"RTN","RCDPEDA3",126,0)
 ;
"RTN","RCDPEDA3",127,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDA3",128,0)
 ;                         A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA3",129,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA3",130,0)
 ;                         A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA3",131,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDA3",132,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",133,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDA3",134,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDA3",135,0)
 ;                         A8 - Current Line Counter
"RTN","RCDPEDA3",136,0)
 ;                         A9 - Internal Date being processed
"RTN","RCDPEDA3",137,0)
 ;          ^TMP($J,"TOTALS","DEBIT")       - Current Total # of debits for date range
"RTN","RCDPEDA3",138,0)
 ;          ^TMP($J,"TOTALS","DEBIT","D")   - Total # of debits for Internal date (C1)
"RTN","RCDPEDA3",139,0)
 ;          ^TMP($J,"TOTALS","DEBITA")      - Current Total Debit Amount for date range
"RTN","RCDPEDA3",140,0)
 ;          ^TMP($J,"TOTALS","DEBITA","D")  - Total Debit Amount for Internal date (C1)
"RTN","RCDPEDA3",141,0)
 ;          ^TMP($J,"TOTALS","DEP")         - Current Total # of deposits for date range
"RTN","RCDPEDA3",142,0)
 ;          ^TMP($J,"TOTALS","DEP",C1)      - Total # of deposits for Internal date (C1)
"RTN","RCDPEDA3",143,0)
 ;          ^TMP($J,"TOTALS","DEPA")        - Current Total Deposit Amount for date range
"RTN","RCDPEDA3",144,0)
 ;          ^TMP($J,"TOTALS","DEPA",C1)     - Total Deposit Amount for Internal date (C1)
"RTN","RCDPEDA3",145,0)
 ;          ^TMP($J,"TOTALS","EFT","D")     - Total Deposit Amount by EFTs for date
"RTN","RCDPEDA3",146,0)
 ;          ^TMP($J,"TOTALS","EFT","T")     - Current Total Deposit Amount by EFTs for range
"RTN","RCDPEDA3",147,0)
 ;          ^TMP($J,"TOTALS","FMS")         - FMS Document Status or "NO FMS DOC"
"RTN","RCDPEDA3",148,0)
 ;          ^TMP($J,"TOTALS","FMS","D",-1)  - Total Deposit Amount by FMS Document
"RTN","RCDPEDA3",149,0)
 ;          ^TMP($J,"TOTALS","FMS","D",0)   - Total Amount for Error/Rejected documents
"RTN","RCDPEDA3",150,0)
 ;          ^TMP($J,"TOTALS","FMS","D",1")  - Total Amount for 'A','M',"F' or 'T' docs
"RTN","RCDPEDA3",151,0)
 ;          ^TMP($J,"TOTALS","FMS","D",2")  - Total Amount for queued docs
"RTN","RCDPEDA3",152,0)
 ;          ^TMP($J,"TOTALS","FMS","T",-1)  - Total Deposit Amount by FMS Document for range
"RTN","RCDPEDA3",153,0)
 ;          ^TMP($J,"TOTALS","FMS","T",0)   - Total Amount for Error/Rejected docs for range
"RTN","RCDPEDA3",154,0)
 ;          ^TMP($J,"TOTALS","FMS","T",1")  - Total Amount for 'A','M',"F' or 'T' docs range
"RTN","RCDPEDA3",155,0)
 ;          ^TMP($J,"TOTALS","FMS","T",2")  - Total Amount for queued docs for range
"RTN","RCDPEDA3",156,0)
 ;          ^TMP($J,"TOTALS","FMSTOT")      - Updated Total Deposit Amount for date range
"RTN","RCDPEDA3",157,0)
 ;          ^TMP($J,"TOTALS","MATCH","D")   - Current Total matched EFTs for date
"RTN","RCDPEDA3",158,0)
 ;          ^TMP($J,"TOTALS","MATCH","T")   - Current Total matched EFTs for date range
"RTN","RCDPEDA3",159,0)
 ; Output:  INPUT       - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA3",160,0)
 ;                         A4 - Updated Page Number
"RTN","RCDPEDA3",161,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",162,0)
 ;                         A8 - Updated Line Counter
"RTN","RCDPEDA3",163,0)
 ;          ^TMP($J,"TOTALS","DEBIT")       - Updated Total # of debits for date range
"RTN","RCDPEDA3",164,0)
 ;          ^TMP($J,"TOTALS","DEBIT","D")   - Updated Total # of debits for Internal date (C1)
"RTN","RCDPEDA3",165,0)
 ;          ^TMP($J,"TOTALS","DEBITA")      - Updated Total Debit Amount for date range
"RTN","RCDPEDA3",166,0)
 ;          ^TMP($J,"TOTALS","DEBITA","D")  - Updated Total Debit Amount for Internal date (C1)
"RTN","RCDPEDA3",167,0)
 ;          ^TMP($J,"TOTALS","DEP")         - Updated Total # of deposits for date range
"RTN","RCDPEDA3",168,0)
 ;          ^TMP($J,"TOTALS","DEPA")        - Updated Total Deposit Amount for date range
"RTN","RCDPEDA3",169,0)
 ;          ^TMP($J,"TOTALS","EFT","T")     - Updated Total Deposit Amount by EFTs for range
"RTN","RCDPEDA3",170,0)
 ;          ^TMP($J,"TOTALS","FMS","T",-1)  - Updated Deposit Amount by FMS Document for range
"RTN","RCDPEDA3",171,0)
 ;          ^TMP($J,"TOTALS","FMS","T",0)   - Updated Amount for Error/Rejected docs for range
"RTN","RCDPEDA3",172,0)
 ;          ^TMP($J,"TOTALS","FMS","T",1")  - Updated Amount for 'A','M',"F' or 'T' docs range
"RTN","RCDPEDA3",173,0)
 ;          ^TMP($J,"TOTALS","FMS","T",2")  - Updated Amount for queued docs for range
"RTN","RCDPEDA3",174,0)
 ;          ^TMP($J,"TOTALS","MATCH","T")   - Updated Total Matched EFTs for date range
"RTN","RCDPEDA3",175,0)
 N CURPG,DETL,DTADD,LSTMAN,NL,Q,XX,YY
"RTN","RCDPEDA3",176,0)
 S LSTMAN=$P(INPUT,"^",2)                   ; Display to Listman flag
"RTN","RCDPEDA3",177,0)
 S NJ=$P(INPUT,"^",1)                       ; Called from Nightly Process flag
"RTN","RCDPEDA3",178,0)
 S DETL=$P(INPUT,"^",3)                     ; Detail Report flag
"RTN","RCDPEDA3",179,0)
 S CURPG=$P(INPUT,"^",4)                    ; Current Page Counter
"RTN","RCDPEDA3",180,0)
 S DTADD=$P(INPUT,"^",9)                    ; Date to display totals for
"RTN","RCDPEDA3",181,0)
 S XX=$G(^TMP($J,"TOTALS","DEPA"))          ; Current Total Deposit Amount for date range
"RTN","RCDPEDA3",182,0)
 S YY=$G(^TMP($J,"TOTALS","DEPA",DTADD))    ; Total Deposit Amount for date
"RTN","RCDPEDA3",183,0)
 S ^TMP($J,"TOTALS","DEPA")=XX+YY           ; Updated Total for range
"RTN","RCDPEDA3",184,0)
 S XX=$G(^TMP($J,"TOTALS","DEP"))           ; Current Total # of Deposits for date range
"RTN","RCDPEDA3",185,0)
 S YY=$G(^TMP($J,"TOTALS","DEP",DTADD))     ; Total # of Deposits for date
"RTN","RCDPEDA3",186,0)
 S ^TMP($J,"TOTALS","DEP")=XX+YY            ; Updated Total # for range
"RTN","RCDPEDA3",187,0)
 ;
"RTN","RCDPEDA3",188,0)
 S XX=$G(^TMP($J,"TOTALS","EFT","T"))       ; Current Total Amount by EFTs for date range
"RTN","RCDPEDA3",189,0)
 S YY=$G(^TMP($J,"TOTALS","EFT","D"))       ; Total Amount by EFTs for date
"RTN","RCDPEDA3",190,0)
 S ^TMP($J,"TOTALS","EFT","T")=XX+YY        ; Updated Total Amount for range
"RTN","RCDPEDA3",191,0)
 ;
"RTN","RCDPEDA3",192,0)
 S XX=$G(^TMP($J,"TOTALS","MATCH","T"))     ; Current Total # Matched EFTs for date range
"RTN","RCDPEDA3",193,0)
 S YY=$G(^TMP($J,"TOTALS","MATCH","D"))     ; # Matched EFTs for date
"RTN","RCDPEDA3",194,0)
 S ^TMP($J,"TOTALS","MATCH","T")=XX+YY      ; Updated Total # Matched EFTs for date range
"RTN","RCDPEDA3",195,0)
 ;
"RTN","RCDPEDA3",196,0)
 ; Update document status totals for range
"RTN","RCDPEDA3",197,0)
 F Q=-1,0,1,2 D
"RTN","RCDPEDA3",198,0)
 . S XX=$G(^TMP($J,"TOTALS","FMS","T",Q))   ; Current Total # of Q status for date range
"RTN","RCDPEDA3",199,0)
 . S YY=$G(^TMP($J,"TOTALS","FMS","D",Q))   ; # of Q status for date
"RTN","RCDPEDA3",200,0)
 . S ^TMP($J,"TOTALS","FMS","T",Q)=XX+YY    ; Updated Total # of Q status for date range
"RTN","RCDPEDA3",201,0)
 ;
"RTN","RCDPEDA3",202,0)
 ; daily totals
"RTN","RCDPEDA3",203,0)
 ;I $S('NJ:($Y+5)>IOSL,1:0)!'CURPG D  Q:$P(INPUT,"^",5)=1  ; PRCA*4.5*321 changed
"RTN","RCDPEDA3",204,0)
 I $S('NJ:1,1:0)!'CURPG D  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",205,0)
 . D:'LSTMAN HDR(.INPUT)
"RTN","RCDPEDA3",206,0)
 S XX=$E("**TOTALS FOR DATE: "_$$FMTE^XLFDT(DTADD\1,"2Z")_$J("",30),1,30)
"RTN","RCDPEDA3",207,0)
 S YY=$G(^TMP($J,"TOTALS","DEP",DTADD))
"RTN","RCDPEDA3",208,0)
 S XX=XX_"   # OF DEPOSIT TICKETS RECEIVED: "_+YY_$J("",5)
"RTN","RCDPEDA3",209,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",210,0)
 S YY=$G(^TMP($J,"TOTALS","DEPA",DTADD))
"RTN","RCDPEDA3",211,0)
 S XX=$J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",212,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",213,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",214,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",215,0)
 D SL(.INPUT,$J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:")
"RTN","RCDPEDA3",216,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",217,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","D",1))
"RTN","RCDPEDA3",218,0)
 S XX=$J("",39)_"ACCEPTED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",219,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",220,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",221,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","D",2))
"RTN","RCDPEDA3",222,0)
 S XX=$J("",41)_"QUEUED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",223,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",224,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",225,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","D",0))
"RTN","RCDPEDA3",226,0)
 S XX=$J("",35)_"ERROR/REJECT: $"_$J(YY,"",2)
"RTN","RCDPEDA3",227,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",228,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",229,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","D",-1))
"RTN","RCDPEDA3",230,0)
 S XX=$J("",37)_"NOT IN FMS: $"_$J(YY,"",2)
"RTN","RCDPEDA3",231,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",232,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",233,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",234,0)
 ;
"RTN","RCDPEDA3",235,0)
 ; PRCA*4.5*321 add all debit logic
"RTN","RCDPEDA3",236,0)
 S XX=$G(^TMP($J,"TOTALS","DEBIT"))         ; Current Total # of debit EFTs for date range
"RTN","RCDPEDA3",237,0)
 S YY=$G(^TMP($J,"TOTALS","DEBIT","D"))     ; Total # of debit EFTs for date
"RTN","RCDPEDA3",238,0)
 S ^TMP($J,"TOTALS","DEBIT")=XX+YY          ; Updated Total # of debit EFTs for range
"RTN","RCDPEDA3",239,0)
 S XX=$G(^TMP($J,"TOTALS","DEBITA"))        ; Current Total amount of debit EFTs for date range
"RTN","RCDPEDA3",240,0)
 S YY=$G(^TMP($J,"TOTALS","DEBITA","D"))    ; Total amount of debit EFTs for date
"RTN","RCDPEDA3",241,0)
 S ^TMP($J,"TOTALS","DEBITA")=XX+YY         ; Updated Total amount of debit EFTs for range
"RTN","RCDPEDA3",242,0)
 S YY=+$G(^TMP($J,"TOTALS","DEBIT","D"))
"RTN","RCDPEDA3",243,0)
 S XX=$J("",27)_"# EFT DEBIT VOUCHERS: "_YY
"RTN","RCDPEDA3",244,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",245,0)
 S YY=+$G(^TMP($J,"TOTALS","DEBITA","D"))
"RTN","RCDPEDA3",246,0)
 S XX=$J("",33)_"DEBIT VOUCHERS: $"_$J(YY,"",2)
"RTN","RCDPEDA3",247,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",248,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",249,0)
 ;
"RTN","RCDPEDA3",250,0)
 S YY=+$G(^TMP($J,"TOTALS","EFT","D"))
"RTN","RCDPEDA3",251,0)
 S XX=$J("",26)_"# EFT PAYMENT RECORDS: "_YY
"RTN","RCDPEDA3",252,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",253,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",254,0)
 S YY=+$G(^TMP($J,"TOTALS","MATCH","D"))
"RTN","RCDPEDA3",255,0)
 S XX=$J("",25)_"# EFT PAYMENTS MATCHED: "_YY
"RTN","RCDPEDA3",256,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",257,0)
 Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDA3",258,0)
 ; PRCA*4.5*321 remove Matched payment amt posted
"RTN","RCDPEDA3",259,0)
 ;S YY=+$G(^TMP($J,"TOTALS","DEPAP",DTADD))
"RTN","RCDPEDA3",260,0)
 ;S XX=$J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",261,0)
 ;D SL(.INPUT,XX)
"RTN","RCDPEDA3",262,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",263,0)
 Q
"RTN","RCDPEDA3",264,0)
 ;
"RTN","RCDPEDA3",265,0)
TOTSF(INPUT) ; EP from RCDPEDAR
"RTN","RCDPEDA3",266,0)
 ;             Display Final Totals
"RTN","RCDPEDA3",267,0)
 ;
"RTN","RCDPEDA3",268,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDA3",269,0)
 ;                         A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA3",270,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA3",271,0)
 ;                         A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA3",272,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDA3",273,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDA3",274,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDA3",275,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDA3",276,0)
 ;                         A8 - Current Line Counter
"RTN","RCDPEDA3",277,0)
 ;                         A9 - Internal Date being processed
"RTN","RCDPEDA3",278,0)
 ;          ^TMP($J,"TOTALS","DEP")         - Total # of deposits for date range
"RTN","RCDPEDA3",279,0)
 ;          ^TMP($J,"TOTALS","DEPA")        - Total Deposit Amount for date range
"RTN","RCDPEDA3",280,0)
 ;          ^TMP($J,"TOTALS","EFT","T")     - Total Deposit Amount by EFTs for range
"RTN","RCDPEDA3",281,0)
 ;          ^TMP($J,"TOTALS","FMS","T",-1)  - Total Deposit Amount by FMS Document for range
"RTN","RCDPEDA3",282,0)
 ;          ^TMP($J,"TOTALS","FMS","T",0)   - Total Amount for Error/Rejected docs for range
"RTN","RCDPEDA3",283,0)
 ;          ^TMP($J,"TOTALS","FMS","T",1")  - Total Amount for 'A','M',"F' or 'T' docs range
"RTN","RCDPEDA3",284,0)
 ;          ^TMP($J,"TOTALS","FMS","T",2")  - Total Amount for queued docs for range
"RTN","RCDPEDA3",285,0)
 ;          ^TMP($J,"TOTALS","MATCH","T")   - Total Matched EFTs for date range
"RTN","RCDPEDA3",286,0)
 ; Output:  INPUT       - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA3",287,0)
 ;                         A5 - Updated Page Number
"RTN","RCDPEDA3",288,0)
 ;                         A6 - Stop Flag
"RTN","RCDPEDA3",289,0)
 ;                         A8 - Updated Line Counter
"RTN","RCDPEDA3",290,0)
 N LSTMAN,NJ,XX,YY
"RTN","RCDPEDA3",291,0)
 S LSTMAN=$P(INPUT,"^",2),NJ=$P(INPUT,"^",1)
"RTN","RCDPEDA3",292,0)
 ;
"RTN","RCDPEDA3",293,0)
 ; header if no output was displayed and not being displayed in listman
"RTN","RCDPEDA3",294,0)
 ;I '$O(^TMP("RCDAILYACT",$J,0)),'LSTMAN D HDR(.INPUT)  ; PRCA*4.5*321 hdr regardless if no output
"RTN","RCDPEDA3",295,0)
 I 'LSTMAN D HDR(.INPUT)
"RTN","RCDPEDA3",296,0)
 ;
"RTN","RCDPEDA3",297,0)
 ; If user quit or (Nightly process flag AND not display to listman) - end here
"RTN","RCDPEDA3",298,0)
 I $P(INPUT,"^",5)=1!(NJ&'LSTMAN) Q
"RTN","RCDPEDA3",299,0)
 ;D SL(.INPUT," ")                                        ; PRCA*4.5*321 removed
"RTN","RCDPEDA3",300,0)
 S XX=$E("**** TOTALS FOR DATE RANGE:"_$J("",30),1,30)
"RTN","RCDPEDA3",301,0)
 S YY=+$G(^TMP($J,"TOTALS","DEP"))
"RTN","RCDPEDA3",302,0)
 S XX=XX_"   # OF DEPOSIT TICKETS RECEIVED: "_YY_$J("",5)
"RTN","RCDPEDA3",303,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",304,0)
 S YY=+$G(^TMP($J,"TOTALS","DEPA"))
"RTN","RCDPEDA3",305,0)
 S XX=$J("",29)_"TOTAL AMOUNT OF DEPOSITS RECEIVED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",306,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",307,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",308,0)
 D SL(.INPUT,$J("",20)_"DEPOSIT AMOUNTS SENT TO FMS:")
"RTN","RCDPEDA3",309,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","T",1))
"RTN","RCDPEDA3",310,0)
 S XX=$J("",39)_"ACCEPTED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",311,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",312,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","T",2))
"RTN","RCDPEDA3",313,0)
 S XX=$J("",41)_"QUEUED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",314,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",315,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","T",0))
"RTN","RCDPEDA3",316,0)
 S XX=$J("",35)_"ERROR/REJECT: $"_$J(YY,"",2)
"RTN","RCDPEDA3",317,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",318,0)
 S YY=+$G(^TMP($J,"TOTALS","FMS","T",-1))
"RTN","RCDPEDA3",319,0)
 S XX=$J("",37)_"NOT IN FMS: $"_$J(YY,"",2)
"RTN","RCDPEDA3",320,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",321,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",322,0)
 ;
"RTN","RCDPEDA3",323,0)
 S YY=+$G(^TMP($J,"TOTALS","DEBIT"))
"RTN","RCDPEDA3",324,0)
 S XX=$J("",21)_"TOTAL # EFT DEBIT VOUCHERS: "_YY
"RTN","RCDPEDA3",325,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",326,0)
 S YY=+$G(^TMP($J,"TOTALS","DEBITA"))
"RTN","RCDPEDA3",327,0)
 S XX=$J("",27)_"TOTAL DEBIT VOUCHERS: $"_$J(YY,"",2)
"RTN","RCDPEDA3",328,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",329,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",330,0)
 ;
"RTN","RCDPEDA3",331,0)
 S YY=+$G(^TMP($J,"TOTALS","EFT","T"))
"RTN","RCDPEDA3",332,0)
 S XX=$J("",26)_"# EFT PAYMENT RECORDS: "_YY
"RTN","RCDPEDA3",333,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",334,0)
 S YY=+$G(^TMP($J,"TOTALS","MATCH","T"))
"RTN","RCDPEDA3",335,0)
 S XX=$J("",25)_"# EFT PAYMENTS MATCHED: "_YY
"RTN","RCDPEDA3",336,0)
 D SL(.INPUT,XX)
"RTN","RCDPEDA3",337,0)
 ; PRCA*4.5*321 remove Matched payment amt posted
"RTN","RCDPEDA3",338,0)
 ;S YY=+$G(^TMP($J,"TOTALS","DEPAP"))
"RTN","RCDPEDA3",339,0)
 ;S XX=$J("",18)_"MATCHED PAYMENT AMOUNT POSTED: $"_$J(YY,"",2)
"RTN","RCDPEDA3",340,0)
 ;D SL(.INPUT,XX)
"RTN","RCDPEDA3",341,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",342,0)
 D SL(.INPUT," ")
"RTN","RCDPEDA3",343,0)
 Q
"RTN","RCDPEDA3",344,0)
 ;
"RTN","RCDPEDA3",345,0)
ASK() ; Ask to continue
"RTN","RCDPEDA3",346,0)
 ; PRCA*4.5*321 changed to extrinsic function
"RTN","RCDPEDA3",347,0)
 ; Input: None
"RTN","RCDPEDA3",348,0)
 ; Returns: 1 if user wants to stop, 0 otherwise
"RTN","RCDPEDA3",349,0)
 I $E(IOST,1,2)'["C-" Q 0
"RTN","RCDPEDA3",350,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDA3",351,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEDA3",352,0)
 I ($D(DIRUT))!($D(DUOUT)) Q 1
"RTN","RCDPEDA3",353,0)
 Q 0
"RTN","RCDPEDA3",354,0)
 ;
"RTN","RCDPEDA3",355,0)
SL(INPUT,Z) ;EP from RCDPEDAR & RCDEPA2
"RTN","RCDPEDA3",356,0)
 ;            Writes or stores line
"RTN","RCDPEDA3",357,0)
 ;
"RTN","RCDPEDA3",358,0)
 ; Input:   INPUT                   - A1^A2^A3^...^An Where:
"RTN","RCDPEDA3",359,0)
 ;                                      A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA3",360,0)
 ;                                      A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA3",361,0)
 ;                                      A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA3",362,0)
 ;                                      A4 - Current Page Number
"RTN","RCDPEDA3",363,0)
 ;                                      A5 - Stop Flag
"RTN","RCDPEDA3",364,0)
 ;                                      A6 - Start of Date Range
"RTN","RCDPEDA3",365,0)
 ;                                      A7 - End of Date Range
"RTN","RCDPEDA3",366,0)
 ;                                      A8 - Current Line Number
"RTN","RCDPEDA3",367,0)
 ;          Z                       - Data line to write or store
"RTN","RCDPEDA3",368,0)
 ;          RCCT                    - Current line counter
"RTN","RCDPEDA3",369,0)
 ;          RCNJ                    - 1 to set array, 0 to write line
"RTN","RCDPEDA3",370,0)
 ;          ^TMP($J,"RCDPE_DAR")    - Current array of stored lines (if RCNJ=1)
"RTN","RCDPEDA3",371,0)
 ; Output:  INPUT                   - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDA3",372,0)
 ;                                      A11 - Updated Line Number
"RTN","RCDPEDA3",373,0)
 ; Output:  
"RTN","RCDPEDA3",374,0)
 ;          ^TMP($J,"RCDPE_DAR")    - Updated array of stored lines (if RCNJ=1)
"RTN","RCDPEDA3",375,0)
 N XX
"RTN","RCDPEDA3",376,0)
 S XX=$P(INPUT,"^",8)+1
"RTN","RCDPEDA3",377,0)
 S $P(INPUT,"^",8)=XX
"RTN","RCDPEDA3",378,0)
 ;
"RTN","RCDPEDA3",379,0)
 ; Called from nightly process
"RTN","RCDPEDA3",380,0)
 I $P(INPUT,"^",1) S ^TMP($J,"RCDPE_DAR",XX)=Z Q
"RTN","RCDPEDA3",381,0)
 W !,Z
"RTN","RCDPEDA3",382,0)
 Q
"RTN","RCDPEDA4")
0^15^B36841110
"RTN","RCDPEDA4",1,0)
RCDPEDA4 ;AITC/DW - ACTIVITY REPORT ;Feb 17, 2017@10:37:00
"RTN","RCDPEDA4",2,0)
 ;;4.5;Accounts Receivable;**318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEDA4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDA4",4,0)
 ; Continuation of RCDPEDAR - Daily activity Report
"RTN","RCDPEDA4",5,0)
 Q
"RTN","RCDPEDA4",6,0)
 ;
"RTN","RCDPEDA4",7,0)
ERRMSGS(INPUT,IEN3443) ;EP from RCDPEDA2
"RTN","RCDPEDA4",8,0)
 ; Display any EFT error messages
"RTN","RCDPEDA4",9,0)
 ; Input:   INPUT               - See EFTERRS for details
"RTN","RCDPEDA4",10,0)
 ;          IEN3443             - Internal IEN for file 344.3
"RTN","RCDPEDA4",11,0)
 ;          ^TMP($J,"DEPERRS")  - Current Line Count
"RTN","RCDPEDA4",12,0)
 ;                                Note: Only passed if not in detail mode
"RTN","RCDPEDA4",13,0)
 ;          ^TMP($J,"DEPERRS,X) - Error line(s)
"RTN","RCDPEDA4",14,0)
 ; Output:  ^TMP($J,"DEPERRS")  - Current Line Count
"RTN","RCDPEDA4",15,0)
 ;                                Note: Only passed if not in detail mode
"RTN","RCDPEDA4",16,0)
 ;
"RTN","RCDPEDA4",17,0)
 ; PRCA*4.5*321 capture display and line cnt to ^TMP($J,"DEPERRS")
"RTN","RCDPEDA4",18,0)
 N DETL,ERRS,LNCT,XX,ZZ
"RTN","RCDPEDA4",19,0)
 S DETL=$P(INPUT,"^",3)
"RTN","RCDPEDA4",20,0)
 S XX=$$GET1^DIQ(344.3,IEN3443,2,"I","ERRS")    ; Error Message WP field
"RTN","RCDPEDA4",21,0)
 Q:'$D(ERRS)                                    ; No errors
"RTN","RCDPEDA4",22,0)
 S XX=$J("",3)_"ERROR MESSAGES FOR EFT:"
"RTN","RCDPEDA4",23,0)
 S LNCT=$G(^TMP($J,"DEPERRS"))+1
"RTN","RCDPEDA4",24,0)
 S ^TMP($J,"DEPERRS")=LNCT
"RTN","RCDPEDA4",25,0)
 S ^TMP($J,"DEPERRS",LNCT)=XX
"RTN","RCDPEDA4",26,0)
 S XX=""
"RTN","RCDPEDA4",27,0)
 F  D  Q:XX=""
"RTN","RCDPEDA4",28,0)
 . S XX=$O(ERRS(XX))
"RTN","RCDPEDA4",29,0)
 . Q:XX=""
"RTN","RCDPEDA4",30,0)
 . S ZZ=$J("",5)_ERRS(XX)
"RTN","RCDPEDA4",31,0)
 . S LNCT=$G(^TMP($J,"DEPERRS"))+1
"RTN","RCDPEDA4",32,0)
 . S ^TMP($J,"DEPERRS")=LNCT
"RTN","RCDPEDA4",33,0)
 . S ^TMP($J,"DEPERRS",LNCT)=ZZ
"RTN","RCDPEDA4",34,0)
 Q
"RTN","RCDPEDA4",35,0)
 ; 
"RTN","RCDPEDA4",36,0)
EFTERRS(INPUT,IEN34431,EFTCTR) ;EP from RCDPEDA2
"RTN","RCDPEDA4",37,0)
 ; Output any EFT Detail errors
"RTN","RCDPEDA4",38,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDA4",39,0)
 ;                          A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDA4",40,0)
 ;                          A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDA4",41,0)
 ;                          A3 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDA4",42,0)
 ;                          A4 - Current Page Number
"RTN","RCDPEDA4",43,0)
 ;                          A5 - Stop Flag
"RTN","RCDPEDA4",44,0)
 ;                          A6 - Start of Date Range
"RTN","RCDPEDA4",45,0)
 ;                          A7 - End of Date Range
"RTN","RCDPEDA4",46,0)
 ;                          A8 - Current Line Counter
"RTN","RCDPEDA4",47,0)
 ;                          A9 - Internal Date being processed
"RTN","RCDPEDA4",48,0)
 ;                          A10- 1 - Only Display EFTs with a debit flag of 'D'
"RTN","RCDPEDA4",49,0)
 ;                               0 - Display all EFTs
"RTN","RCDPEDA4",50,0)
 ;          IEN34431    - Internal IEN for file 344.31
"RTN","RCDPEDA4",51,0)
 ;          EFTCTR                  - Used to store lines for EFT
"RTN","RCDPEDA4",52,0)
 ;          ^TMP($J,ONEDEP,0,1)     - Deposit Detail line
"RTN","RCDPEDA4",53,0)
 ;          ^TMP($J,ONEDEP,EFTCTR)  - Current # of lines for EFT
"RTN","RCDPEDA4",54,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- EFT Deposit Lines
"RTN","RCDPEDA4",55,0)
 ; Output   ^TMP($J,ONEDEP,EFTCTR)  - Updated # of lines for EFT
"RTN","RCDPEDA4",56,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- Updated EFT Deposit Lines
"RTN","RCDPEDA4",57,0)
 Q:'$O(^RCY(344.31,IEN34431,2,0))           ; No error message
"RTN","RCDPEDA4",58,0)
 N EFTLN,ERRS,V,XX,YY
"RTN","RCDPEDA4",59,0)
 S XX=$J("",3)_"ERROR MESSAGES FOR EFT DETAIL:"
"RTN","RCDPEDA4",60,0)
 S EFTLN=$G(^TMP($J,"ONEDEP",EFTCTR))+1
"RTN","RCDPEDA4",61,0)
 S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA4",62,0)
 S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=XX
"RTN","RCDPEDA4",63,0)
 S XX=$$GET1^DIQ(344.31,IEN34431,2,"I","ERRS")
"RTN","RCDPEDA4",64,0)
 S V=""
"RTN","RCDPEDA4",65,0)
 F  D  Q:V=""
"RTN","RCDPEDA4",66,0)
 . S V=$O(ERRS(V))
"RTN","RCDPEDA4",67,0)
 . Q:V=""
"RTN","RCDPEDA4",68,0)
 . S XX=$J("",5)_ERRS(V)
"RTN","RCDPEDA4",69,0)
 . S EFTLN=EFTLN+1
"RTN","RCDPEDA4",70,0)
 . S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA4",71,0)
 . S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=XX
"RTN","RCDPEDA4",72,0)
 Q
"RTN","RCDPEDA4",73,0)
 ;
"RTN","RCDPEDA4",74,0)
LMHDR(RCSTOP,RCDET,RCNJ,RCDT1,RCDT2,RCHDR,DONLY) ;EP from RCDPEDAR      
"RTN","RCDPEDA4",75,0)
 ; ListMan report heading
"RTN","RCDPEDA4",76,0)
 ; Input:   RCDET       - 1 to display detail, 0 otherwise
"RTN","RCDPEDA4",77,0)
 ;          RCNJ        - Set 1, indicates report was called from the nightly
"RTN","RCDPEDA4",78,0)
 ;                        process OR displaying to listman.  Used to set lines
"RTN","RCDPEDA4",79,0)
 ;                        into a ^TMP array instead of displaying them.
"RTN","RCDPEDA4",80,0)
 ;          RCDT1       - Internal Start Date of date range
"RTN","RCDPEDA4",81,0)
 ;          RCDT2       - Internal End Date of date range
"RTN","RCDPEDA4",82,0)
 ;          DONLY       - 1 - Only EFTs with debits, 0 - display all EFTs
"RTN","RCDPEDA4",83,0)
 ;          RCNP        - Payer Selection flag A1^A2^A3 Where:
"RTN","RCDPEDA4",84,0)
 ;                         A1 - 1 - Range,2 - All,3 -Specific
"RTN","RCDPEDA4",85,0)
 ;                         A2 - From Payer text (only set if A1=1)
"RTN","RCDPEDA4",86,0)
 ;                         A3 - Through text (only set if A1=1)
"RTN","RCDPEDA4",87,0)
 ;          ^TMP("RCSELPAY",$J,B1) - Selected payers to be displayed
"RTN","RCDPEDA4",88,0)
 ; Output:  RCHDR       - Array of listman header lines
"RTN","RCDPEDA4",89,0)
 ;          RCSTOP      - 1 if user stopped 
"RTN","RCDPEDA4",90,0)
 ;
"RTN","RCDPEDA4",91,0)
 N RCCT,X,XX,Y,Z,Z0,Z1
"RTN","RCDPEDA4",92,0)
 S RCCT=0
"RTN","RCDPEDA4",93,0)
 S XX=$S(RCDET:"DETAIL",1:"SUMMARY")_" REPORT"
"RTN","RCDPEDA4",94,0)
 S RCHDR("TITLE")="EDI LOCKBOX EFT DAILY ACTIVITY "_XX
"RTN","RCDPEDA4",95,0)
 S Z1=""
"RTN","RCDPEDA4",96,0)
 I 'VAUTD D
"RTN","RCDPEDA4",97,0)
 . S Z0=0
"RTN","RCDPEDA4",98,0)
 . F  D  Q:'Z0
"RTN","RCDPEDA4",99,0)
 . . S Z0=$O(VAUTD(Z0))
"RTN","RCDPEDA4",100,0)
 . . Q:'Z0
"RTN","RCDPEDA4",101,0)
 . . S XX=$$GET1^DIQ(40.8,Z0,1,"I")  ; Facility Number  ;PRCA*4.5*321
"RTN","RCDPEDA4",102,0)
 . . ;S Z1=Z1_VAUTD(Z0)_", "
"RTN","RCDPEDA4",103,0)
 . . S Z1=Z1_XX_", "
"RTN","RCDPEDA4",104,0)
 S Z="DIVISIONS: "_$S(VAUTD:"ALL",1:$E(Z1,1,$L(Z1)-2))
"RTN","RCDPEDA4",105,0)
 I 'RCDET D
"RTN","RCDPEDA4",106,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=""
"RTN","RCDPEDA4",107,0)
 S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",108,0)
 ;
"RTN","RCDPEDA4",109,0)
 I 'RCDET D
"RTN","RCDPEDA4",110,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=""
"RTN","RCDPEDA4",111,0)
 S Z="DATE RANGE: "_$$FMTE^XLFDT(RCDT1,"2Z")_" - "
"RTN","RCDPEDA4",112,0)
 S Z=Z_$$FMTE^XLFDT(RCDT2,"2Z")_" (DATE DEPOSIT ADDED)"
"RTN","RCDPEDA4",113,0)
 S Z=Z_"        DEBIT ONLY EFTs: "_$S(DONLY=1:"YES",1:"NO") ; PRCA*4.5*321 Added line
"RTN","RCDPEDA4",114,0)
 I 'RCDET D
"RTN","RCDPEDA4",115,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=""
"RTN","RCDPEDA4",116,0)
 S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",117,0)
 I RCDET D
"RTN","RCDPEDA4",118,0)
 . S XX="DEP #      DEPOSIT DT  "_$J("",19)
"RTN","RCDPEDA4",119,0)
 . S XX=XX_"DEP AMOUNT          FMS DEPOSIT STAT"
"RTN","RCDPEDA4",120,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,80)
"RTN","RCDPEDA4",121,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",122,0)
 . ; PRCA*4.5*318, Move entire EFT # row to left 1 space to adjust for other rows needing space
"RTN","RCDPEDA4",123,0)
 . S XX=$J("",2)_"EFT #"_$J("",22)_"DATE PD   PAYMENT AMOUNT  ERA MATCH STATUS"
"RTN","RCDPEDA4",124,0)
 . S Z=$$SETSTR^VALM1(XX,"",1,80)
"RTN","RCDPEDA4",125,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",126,0)
 . ; PRCA*4.5*318, Move entire EFT Payer Trace # row to left 6 spaces to adjust for other rows needing space
"RTN","RCDPEDA4",127,0)
 . S Z=$$SETSTR^VALM1($J("",4)_"EFT PAYER TRACE #","",1,30)
"RTN","RCDPEDA4",128,0)
 . ;PRCA*4.5*318 add CR #
"RTN","RCDPEDA4",129,0)
 . S Z=$$SETSTR^VALM1("CR #",Z,59,80)
"RTN","RCDPEDA4",130,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",131,0)
 . ; PRCA*4.5*318, Move entire Payment From row to left 8 spaces to adjust 
"RTN","RCDPEDA4",132,0)
 . ; a possible 60 character Payer Name and 20 character Payer ID
"RTN","RCDPEDA4",133,0)
 . S Z=$$SETSTR^VALM1($J("",6)_"PAYMENT FROM","",1,30)
"RTN","RCDPEDA4",134,0)
 . S Z=$$SETSTR^VALM1("DEBIT",Z,37,5)            ; PRCA*4.5*321 Added line
"RTN","RCDPEDA4",135,0)
 . S Z=$$SETSTR^VALM1("DEP RECEIPT #",Z,45,30)   ; PRCA*4.5*321 used to be 31,30
"RTN","RCDPEDA4",136,0)
 . S Z=$$SETSTR^VALM1("DEP RECEIPT STATUS",Z,61,19)
"RTN","RCDPEDA4",137,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",138,0)
 . ;PRCA*4.5*318 add TR #s
"RTN","RCDPEDA4",139,0)
 . S Z=$$SETSTR^VALM1("TR #","",4,30)
"RTN","RCDPEDA4",140,0)
 . S RCCT=RCCT+1,RCHDR(RCCT)=Z
"RTN","RCDPEDA4",141,0)
 Q
"RTN","RCDPEDA4",142,0)
 ;
"RTN","RCDPEDA4",143,0)
GETTR(IEN34431,INPUT)   ;EP from RCDPEDA2
"RTN","RCDPEDA4",144,0)
 ; Gathers and Displays all TR Doc #s for a specified EFT detail record
"RTN","RCDPEDA4",145,0)
 ; PRCA*4.5*318 add TR #s to detail rpt
"RTN","RCDPEDA4",146,0)
 ; Input:   IEN34431                - Internal IEN for file #344.31
"RTN","RCDPEDA4",147,0)
 ;          INPUT                   - See EFTERRS for details
"RTN","RCDPEDA4",148,0)
 ;          EFTCTR                  - Used to store lines for EFT
"RTN","RCDPEDA4",149,0)
 ;          ^TMP($J,ONEDEP,0,1)     - Deposit Detail line
"RTN","RCDPEDA4",150,0)
 ;          ^TMP($J,ONEDEP,EFTCTR)  - Current # of lines for EFT
"RTN","RCDPEDA4",151,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- EFT Deposit Lines
"RTN","RCDPEDA4",152,0)
 ; Output   ^TMP($J,ONEDEP,0,1)     - Updated Detail line
"RTN","RCDPEDA4",153,0)
 ;          ^TMP($J,ONEDEP,EFTCTR)  - Updated # of lines for EFT
"RTN","RCDPEDA4",154,0)
 ;          ^TMP($J,ONEDEP,EFTCTR,xx)- EFT Deposit Lines
"RTN","RCDPEDA4",155,0)
 ;
"RTN","RCDPEDA4",156,0)
 ; PRCA*4.5*321 capture display to ^TMP($J,"ONEDEP",EFTRCR) including line cnt
"RTN","RCDPEDA4",157,0)
 N CTR,EFTLN,IEN3444,IENS,LNCT,RECEIPT,TRDOC,TRDOCS,XX,ZZ
"RTN","RCDPEDA4",158,0)
 ;
"RTN","RCDPEDA4",159,0)
 ; First gather up all the TR Document numbers into as many lines as needed
"RTN","RCDPEDA4",160,0)
 S CTR=1,LNCT=$G(^TMP($J,"ONEDEP"))
"RTN","RCDPEDA4",161,0)
 S EFTLN=$G(^TMP($J,"ONEDEP",EFTCTR))
"RTN","RCDPEDA4",162,0)
 S IEN3444=$$GET1^DIQ(344.31,IEN34431,.1,"I") ; Internal IEN for for 344.4
"RTN","RCDPEDA4",163,0)
 S RECEIPT=$$GET1^DIQ(344.4,IEN3444,.08,"I")  ; Receipt # from 344.4
"RTN","RCDPEDA4",164,0)
 I RECEIPT'="" D
"RTN","RCDPEDA4",165,0)
 . S TRDOC=$TR($$GET1^DIQ(344,RECEIPT,200,"I")," ")    ; FMS Document #
"RTN","RCDPEDA4",166,0)
 . I TRDOC="" Q
"RTN","RCDPEDA4",167,0)
 . S TRDOCS(CTR)=TRDOC
"RTN","RCDPEDA4",168,0)
 . S XX=""
"RTN","RCDPEDA4",169,0)
 . F  D  Q:XX=""
"RTN","RCDPEDA4",170,0)
 . . S XX=$O(^RCY(344.4,IEN3444,8,XX))
"RTN","RCDPEDA4",171,0)
 . . Q:XX=""
"RTN","RCDPEDA4",172,0)
 . . S IENS=XX_","_IEN3444_","
"RTN","RCDPEDA4",173,0)
 . . S RECEIPT=$$GET1^DIQ(344.48,IENS,.01,"I")  ; Other receipt numbers
"RTN","RCDPEDA4",174,0)
 . . I RECEIPT="" Q
"RTN","RCDPEDA4",175,0)
 . . S TRDOC=$TR($$GET1^DIQ(344,RECEIPT,200,"I")," ")   ; FMS Document #
"RTN","RCDPEDA4",176,0)
 . . Q:TRDOC=""
"RTN","RCDPEDA4",177,0)
 . . I $L(TRDOC)+$L($G(TRDOCS(CTR)))+1>73 D  Q
"RTN","RCDPEDA4",178,0)
 . . . S CTR=CTR+1,TRDOCS(CTR)=TRDOC
"RTN","RCDPEDA4",179,0)
 . . S TRDOCS(CTR)=TRDOCS(CTR)_", "_TRDOC
"RTN","RCDPEDA4",180,0)
 ;
"RTN","RCDPEDA4",181,0)
 ; Now display the TR Document numbers
"RTN","RCDPEDA4",182,0)
 I '$D(TRDOCS) D  Q    ; blank line for TR#s
"RTN","RCDPEDA4",183,0)
 . S EFTLN=EFTLN+1
"RTN","RCDPEDA4",184,0)
 . S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA4",185,0)
 . S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=" "
"RTN","RCDPEDA4",186,0)
 S XX=""
"RTN","RCDPEDA4",187,0)
 F  D  Q:XX=""
"RTN","RCDPEDA4",188,0)
 . S XX=$O(TRDOCS(XX))
"RTN","RCDPEDA4",189,0)
 . Q:XX=""
"RTN","RCDPEDA4",190,0)
 . S EFTLN=EFTLN+1
"RTN","RCDPEDA4",191,0)
 . S ^TMP($J,"ONEDEP",EFTCTR)=EFTLN
"RTN","RCDPEDA4",192,0)
 . S ^TMP($J,"ONEDEP",EFTCTR,EFTLN)=$J("",3)_TRDOCS(XX)
"RTN","RCDPEDA4",193,0)
 Q
"RTN","RCDPEDA4",194,0)
 ;
"RTN","RCDPEDAR")
0^3^B81987477
"RTN","RCDPEDAR",1,0)
RCDPEDAR ;ALB/TMK - ACTIVITY REPORT ;Jun 06, 2014@19:11:19
"RTN","RCDPEDAR",2,0)
 ;;4.5;Accounts Receivable;**173,276,284,283,298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEDAR",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEDAR",4,0)
 Q
"RTN","RCDPEDAR",5,0)
 ;
"RTN","RCDPEDAR",6,0)
RPT ; Daily Activity Rpt On Demand
"RTN","RCDPEDAR",7,0)
 N POP,RCDET,RCDIV,RCDONLY,RCDT1,RCDT2,RCHDR,RCINC,RCLSTMGR,RCNP,RCNJ
"RTN","RCDPEDAR",8,0)
 N RCPYRSEL,RCRANGE,RCSTOP,RCTMPND,VAUTD,X,XX,Y,%ZIS
"RTN","RCDPEDAR",9,0)
 S RCNJ=0                                   ; Not the nightly job, user interactions
"RTN","RCDPEDAR",10,0)
 D DIVISION^VAUTOMA                         ; IA 664 Select Division/Station - sets VAUTD
"RTN","RCDPEDAR",11,0)
 I 'VAUTD,($D(VAUTD)'=11) Q
"RTN","RCDPEDAR",12,0)
 S RCDET=$$RTYPE()                          ; Select Report Type (Summary/Detail)
"RTN","RCDPEDAR",13,0)
 Q:RCDET=-1
"RTN","RCDPEDAR",14,0)
 S XX=$$DTRANGE(.RCDT1,.RCDT2)              ; Select Date Range to be used
"RTN","RCDPEDAR",15,0)
 Q:'XX
"RTN","RCDPEDAR",16,0)
 ;
"RTN","RCDPEDAR",17,0)
 ; Get insurance company to be used as filter
"RTN","RCDPEDAR",18,0)
 ; PRCA*4.5*284 - RCNP is Type of Response (1=Range,2=All,3=Specific) ^ From Range^ Thru Range
"RTN","RCDPEDAR",19,0)
 S RCNP=$$GETPAY^RCDPEM9(344.31)
"RTN","RCDPEDAR",20,0)
 Q:+RCNP=-1                                 ; No Insurance Company selected
"RTN","RCDPEDAR",21,0)
 ;
"RTN","RCDPEDAR",22,0)
 S RCDONLY=$$DBTONLY()                      ; Debit only filter   ;PRCA*4.5*321
"RTN","RCDPEDAR",23,0)
 Q:RCDONLY=-1                               ; '^' or timeout
"RTN","RCDPEDAR",24,0)
 S RCLSTMGR=$$ASKLM^RCDPEARL                ; Ask to Display in Listman Template
"RTN","RCDPEDAR",25,0)
 Q:RCLSTMGR<0                               ; '^' or timeout
"RTN","RCDPEDAR",26,0)
 ;
"RTN","RCDPEDAR",27,0)
 I RCLSTMGR=1 D  Q                          ; ListMan Template format, put in array
"RTN","RCDPEDAR",28,0)
 . S RCTMPND="RCDPE_DAR"
"RTN","RCDPEDAR",29,0)
 . K ^TMP($J,RCTMPND)
"RTN","RCDPEDAR",30,0)
 . D EN(RCDET,RCDT1,RCDT2,RCLSTMGR,RCDONLY)
"RTN","RCDPEDAR",31,0)
 . D LMHDR^RCDPEDA4(.RCSTOP,RCDET,1,RCDT1,RCDT2,.RCHDR,RCDONLY)
"RTN","RCDPEDAR",32,0)
 . D LMRPT^RCDPEARL(.RCHDR,$NA(^TMP($J,RCTMPND))) ; Generate ListMan display
"RTN","RCDPEDAR",33,0)
 . K ^TMP($J,RCTMPND)
"RTN","RCDPEDAR",34,0)
 ;
"RTN","RCDPEDAR",35,0)
 ; Ask device
"RTN","RCDPEDAR",36,0)
 S %ZIS="QM"
"RTN","RCDPEDAR",37,0)
 D ^%ZIS
"RTN","RCDPEDAR",38,0)
 Q:POP
"RTN","RCDPEDAR",39,0)
 ;
"RTN","RCDPEDAR",40,0)
 I $D(IO("Q")) D  Q                         ; Queued Report
"RTN","RCDPEDAR",41,0)
 . N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPEDAR",42,0)
 . S ZTRTN="EN^RCDPEDAR("_RCDET_","_RCDT1_","_RCDT2_",0,"_RCDONLY_")" ;PRCA*4.5*321 added RCDONLY
"RTN","RCDPEDAR",43,0)
 . S ZTDESC="AR - EDI LOCKBOX EFT DAILY ACTIVITY REPORT"
"RTN","RCDPEDAR",44,0)
 . S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEDAR",45,0)
 . ;
"RTN","RCDPEDAR",46,0)
 . ; PRCA*4.5*284 - Because TMP global may be on another server, save off specific payers in local
"RTN","RCDPEDAR",47,0)
 . M RCPYRSEL=^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",48,0)
 . D ^%ZTLOAD
"RTN","RCDPEDAR",49,0)
 . W !!,$S($D(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task.")
"RTN","RCDPEDAR",50,0)
 . K ZTSK,IO("Q")
"RTN","RCDPEDAR",51,0)
 . D HOME^%ZIS
"RTN","RCDPEDAR",52,0)
 ;
"RTN","RCDPEDAR",53,0)
 U IO
"RTN","RCDPEDAR",54,0)
 D EN(RCDET,RCDT1,RCDT2,RCLSTMGR,RCDONLY)
"RTN","RCDPEDAR",55,0)
 Q
"RTN","RCDPEDAR",56,0)
 ;
"RTN","RCDPEDAR",57,0)
DBTONLY() ; Allows the user to select filter to only show EFTs with debits
"RTN","RCDPEDAR",58,0)
 ; PRCA*4.5*321 Added subroutine
"RTN","RCDPEDAR",59,0)
 ; Input:   None
"RTN","RCDPEDAR",60,0)
 ; Returns: 0       - All EFTs to display
"RTN","RCDPEDAR",61,0)
 ;          1       - Only EFTs with debits to be displayed
"RTN","RCDPEDAR",62,0)
 ;         -1       - User up-arrowed or timed out
"RTN","RCDPEDAR",63,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDAR",64,0)
 S DIR("A")="Show EFTs with debits only? "
"RTN","RCDPEDAR",65,0)
 S DIR(0)="SA^Y:YES;N:NO"
"RTN","RCDPEDAR",66,0)
 S DIR("B")="NO"
"RTN","RCDPEDAR",67,0)
 S DIR("?",1)="Enter 'YES' to only show EFTs with a debit flag of 'D'."
"RTN","RCDPEDAR",68,0)
 S DIR("?")="Enter 'NO' to show all EFTs."
"RTN","RCDPEDAR",69,0)
 D ^DIR
"RTN","RCDPEDAR",70,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPEDAR",71,0)
 Q $E(Y,1)="Y"
"RTN","RCDPEDAR",72,0)
 ;
"RTN","RCDPEDAR",73,0)
RTYPE() ; Allows the user to select the report type (Summary/Detail)
"RTN","RCDPEDAR",74,0)
 ; Input:   None
"RTN","RCDPEDAR",75,0)
 ; Returns: 0       - Summary Display
"RTN","RCDPEDAR",76,0)
 ;          1       - Detail Display
"RTN","RCDPEDAR",77,0)
 ;         -1       - User up-arrowed or timed out
"RTN","RCDPEDAR",78,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDAR",79,0)
 S DIR("A")="(S)UMMARY OR (D)ETAIL?: "
"RTN","RCDPEDAR",80,0)
 S DIR(0)="SA^S:SUMMARY TOTALS ONLY;D:DETAIL AND TOTALS"
"RTN","RCDPEDAR",81,0)
 S DIR("B")="D"
"RTN","RCDPEDAR",82,0)
 D ^DIR
"RTN","RCDPEDAR",83,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPEDAR",84,0)
 Q Y="D"
"RTN","RCDPEDAR",85,0)
 ;
"RTN","RCDPEDAR",86,0)
DTRANGE(STDATE,ENDDATE) ; Allows the user to select the date range to by used
"RTN","RCDPEDAR",87,0)
 ; Input:   None
"RTN","RCDPEDAR",88,0)
 ; Output:  STDATE  = Internal Fileman Date to start at
"RTN","RCDPEDAR",89,0)
 ;          ENDDATE - Internal Fileman Date to end at
"RTN","RCDPEDAR",90,0)
 ; Returns: 0 - User up-arrowed or timed out, 1 otherwise
"RTN","RCDPEDAR",91,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEDAR",92,0)
 S DIR("?")="Enter the earliest date of receipt of deposit to include on the report."
"RTN","RCDPEDAR",93,0)
 S DIR(0)="DAO^:"_DT_":APE"
"RTN","RCDPEDAR",94,0)
 S DIR("A")="START DATE: "
"RTN","RCDPEDAR",95,0)
 D ^DIR
"RTN","RCDPEDAR",96,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y="") 0
"RTN","RCDPEDAR",97,0)
 S STDATE=Y
"RTN","RCDPEDAR",98,0)
 K DIR
"RTN","RCDPEDAR",99,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEDAR",100,0)
 S DIR("B")=Y(0)
"RTN","RCDPEDAR",101,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="END DATE: "
"RTN","RCDPEDAR",102,0)
 D ^DIR
"RTN","RCDPEDAR",103,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y="") 0
"RTN","RCDPEDAR",104,0)
 S ENDDATE=Y
"RTN","RCDPEDAR",105,0)
 Q 1
"RTN","RCDPEDAR",106,0)
 ;
"RTN","RCDPEDAR",107,0)
EN(RCDET,RCDT1,RCDT2,RCLSTMGR,DONLY) ; Entry point for report, might be queued
"RTN","RCDPEDAR",108,0)
 ; Input:   RCDET       - 1 - Detail Report, 0 - Summary
"RTN","RCDPEDAR",109,0)
 ;          RCDT1       - Internal Fileman Start date
"RTN","RCDPEDAR",110,0)
 ;          RCDT2       - Internal Fileman End date
"RTN","RCDPEDAR",111,0)
 ;          RCLSTMGR    - 1 display in list manager, 0 otherwise
"RTN","RCDPEDAR",112,0)
 ;                        Optional, defaults to 0
"RTN","RCDPEDAR",113,0)
 ;          DONLY       - 1 only display EFTs with a debit flag of 'D'
"RTN","RCDPEDAR",114,0)
 ;                        0 display all EFTs
"RTN","RCDPEDAR",115,0)
 ;          RCNP        - A1^A2^A3 Where:
"RTN","RCDPEDAR",116,0)
 ;                           A1 - 1 - Range of Payers
"RTN","RCDPEDAR",117,0)
 ;                                2 - All Payers selected
"RTN","RCDPEDAR",118,0)
 ;                                3 - Specific payers
"RTN","RCDPEDAR",119,0)
 ;                           A2 - From Range (When a from/thru range is selected by user)
"RTN","RCDPEDAR",120,0)
 ;                           A3 - Thru Range (When a from/thru range is selected by user)
"RTN","RCDPEDAR",121,0)
 ;          RCPYRSEL    - Array of selected payers (Only present if A1=3 above
"RTN","RCDPEDAR",122,0)
 ;          VAUTD       - 1 - All selected divisions OR an array of selected divisions
"RTN","RCDPEDAR",123,0)
 N DFLG,DTADD,IEN3443,IEN34431,INPUT,RCFLG,RCJOB,RCT,XX,Z   ; PRCA*4.5*321 Added DFLG
"RTN","RCDPEDAR",124,0)
 N:$G(ZTSK) ZTSTOP                          ; Job was tasked, ZTSTOP = flag to stop
"RTN","RCDPEDAR",125,0)
 S:'$D(RCLSTMGR) RCLSTMGR=0
"RTN","RCDPEDAR",126,0)
 ;
"RTN","RCDPEDAR",127,0)
 ; PRCA*4.5*284 - Queued job needs to reload payer selection list
"RTN","RCDPEDAR",128,0)
 I $D(RCPYRSEL) D
"RTN","RCDPEDAR",129,0)
 . K ^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",130,0)
 . M ^TMP("RCSELPAY",$J)=RCPYRSEL
"RTN","RCDPEDAR",131,0)
 ;
"RTN","RCDPEDAR",132,0)
 S XX=$S(RCLSTMGR:1,1:0)
"RTN","RCDPEDAR",133,0)
 S INPUT=XX_"^"_RCLSTMGR_"^"_+RCDET
"RTN","RCDPEDAR",134,0)
 S RCNP=+RCNP,RCJOB=$J
"RTN","RCDPEDAR",135,0)
 K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEDAR",136,0)
 K ^TMP($J,"TOTALS")                        ; Initialize Totals temp workspace
"RTN","RCDPEDAR",137,0)
 ;
"RTN","RCDPEDAR",138,0)
 ; Loop through all of the EDI LOCKBOX DEPOSIT records in the selected date
"RTN","RCDPEDAR",139,0)
 ; range and add any that pass the payer and division filters into ^TMP
"RTN","RCDPEDAR",140,0)
 ; by the internal date added
"RTN","RCDPEDAR",141,0)
 S DTADD=RCDT1-.0001,RCT=0
"RTN","RCDPEDAR",142,0)
 S $P(INPUT,"^",4)=0                        ; Current Page Number
"RTN","RCDPEDAR",143,0)
 S $P(INPUT,"^",5)=0                        ; Stop Flag
"RTN","RCDPEDAR",144,0)
 S $P(INPUT,"^",10)=DONLY
"RTN","RCDPEDAR",145,0)
 F  D  Q:'DTADD  Q:DTADD>(RCDT2_".9999")  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDAR",146,0)
 . S DTADD=$O(^RCY(344.3,"ARECDT",DTADD))
"RTN","RCDPEDAR",147,0)
 . Q:'DTADD
"RTN","RCDPEDAR",148,0)
 . Q:DTADD>(RCDT2_".9999")
"RTN","RCDPEDAR",149,0)
 . S IEN3443=0
"RTN","RCDPEDAR",150,0)
 . F  D  Q:'IEN3443  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDAR",151,0)
 . . S IEN3443=$O(^RCY(344.3,"ARECDT",DTADD,IEN3443))
"RTN","RCDPEDAR",152,0)
 . . Q:'IEN3443
"RTN","RCDPEDAR",153,0)
 . . S IEN34431="",RCFLG=0
"RTN","RCDPEDAR",154,0)
 . . F  D  Q:IEN34431=""
"RTN","RCDPEDAR",155,0)
 . . . S IEN34431=$O(^RCY(344.31,"B",IEN3443,IEN34431))
"RTN","RCDPEDAR",156,0)
 . . . Q:IEN34431=""
"RTN","RCDPEDAR",157,0)
 . . . Q:'$$CHKPYR(IEN34431,0,RCJOB,RCNP)   ; Not a selected payer    PRCA*4.5*318 added ,RCNP
"RTN","RCDPEDAR",158,0)
 . . . Q:'$$CHKDIV(IEN34431,0,.VAUTD)       ; Not a selected station/division
"RTN","RCDPEDAR",159,0)
 . . . ;
"RTN","RCDPEDAR",160,0)
 . . . ; PRCA*4.5*321 Added filter for Debit EFTs Only below
"RTN","RCDPEDAR",161,0)
 . . . I DONLY D  Q:DFLG'="D"               ; Not an EFT with a debit flag of 'D'
"RTN","RCDPEDAR",162,0)
 . . . . S DFLG=$$GET1^DIQ(344.31,IEN34431,3,"E")
"RTN","RCDPEDAR",163,0)
 . . . S RCFLG=1
"RTN","RCDPEDAR",164,0)
 . . . S ^TMP("RCDAILYACT",$J,DTADD\1,IEN3443,"EFT",IEN34431)=""
"RTN","RCDPEDAR",165,0)
 . . ;
"RTN","RCDPEDAR",166,0)
 . . S:RCFLG ^TMP("RCDAILYACT",$J,DTADD\1,IEN3443)=""
"RTN","RCDPEDAR",167,0)
 . . S RCT=RCT+1                            ; Current Record Count
"RTN","RCDPEDAR",168,0)
 . . ;
"RTN","RCDPEDAR",169,0)
 . . ; Check for user stopped every 100 records
"RTN","RCDPEDAR",170,0)
 . . I '(RCT#100),$D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","RCDPEDAR",171,0)
 . . . S ZTSTOP=1
"RTN","RCDPEDAR",172,0)
 . . . S $P(INPUT,"^",5)=1                  ; Stop now
"RTN","RCDPEDAR",173,0)
 . . . K ZTREQ
"RTN","RCDPEDAR",174,0)
 ;
"RTN","RCDPEDAR",175,0)
 I '$P(INPUT,"^",5) D
"RTN","RCDPEDAR",176,0)
 . S $P(INPUT,"^",6)=RCDT1                  ; Start of Date Range
"RTN","RCDPEDAR",177,0)
 . S $P(INPUT,"^",7)=RCDT2                  ; End of Date Range
"RTN","RCDPEDAR",178,0)
 . D RPT1(.INPUT)
"RTN","RCDPEDAR",179,0)
 D ENQ(INPUT)
"RTN","RCDPEDAR",180,0)
 Q
"RTN","RCDPEDAR",181,0)
 ;
"RTN","RCDPEDAR",182,0)
ENQ(INPUT) ; Clean up
"RTN","RCDPEDAR",183,0)
 ; Input:   INPUT       - A1^A2^A3^...^A8 Where:
"RTN","RCDPEDAR",184,0)
 ;                         A1 - 1 if Detail report, 0 if summary report
"RTN","RCDPEDAR",185,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDAR",186,0)
 ;                         A3 - 0 if NOT called from Nightly Process, 1 otherwise
"RTN","RCDPEDAR",187,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDAR",188,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDAR",189,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDAR",190,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDAR",191,0)
 ;          ZTQUEUED    - Defined if Joh was queued
"RTN","RCDPEDAR",192,0)
 ; Output:  ZTREQ       - "@" Only returned if ZTQUEUED is defined
"RTN","RCDPEDAR",193,0)
 N XX,YY,ZZ
"RTN","RCDPEDAR",194,0)
 K ^TMP($J,"DEPERRS"),^TMP($J,"ONEDEP")  ; PRCA*4.5*321
"RTN","RCDPEDAR",195,0)
 K ^TMP("RCDAILYACT",$J),^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",196,0)
 K ^TMP($J,"TOTALS")
"RTN","RCDPEDAR",197,0)
 I '$D(ZTQUEUED) D
"RTN","RCDPEDAR",198,0)
 . D ^%ZISC
"RTN","RCDPEDAR",199,0)
 . S XX=$P(INPUT,"^",1)                     ; Nightly Process Flag
"RTN","RCDPEDAR",200,0)
 . S YY=$P(INPUT,"^",5)                     ; Stop Flag
"RTN","RCDPEDAR",201,0)
 . S ZZ=$P(INPUT,"^",4)                     ; Current Page Number
"RTN","RCDPEDAR",202,0)
 . I 'XX,'YY,ZZ D
"RTN","RCDPEDAR",203,0)
 . . S XX=""
"RTN","RCDPEDAR",204,0)
 . . D ASK^RCDPEARL(.XX)
"RTN","RCDPEDAR",205,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEDAR",206,0)
 Q
"RTN","RCDPEDAR",207,0)
 ;
"RTN","RCDPEDAR",208,0)
RPT1(INPUT) ;EP from RCDPEM1 (Nightly Process)
"RTN","RCDPEDAR",209,0)
 ; Output the report
"RTN","RCDPEDAR",210,0)
 ; Input:   INPUT       - A1^A2^A3^...^An Where:
"RTN","RCDPEDAR",211,0)
 ;                         A1 - 1 if called from Nightly Process, 0 otherwise
"RTN","RCDPEDAR",212,0)
 ;                         A2 - 1 if displaying to Listman, 0 otherwise
"RTN","RCDPEDAR",213,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDAR",214,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDAR",215,0)
 ;                         A6 - Start of Date Range
"RTN","RCDPEDAR",216,0)
 ;                         A7 - End of Date Range
"RTN","RCDPEDAR",217,0)
 ;          ^TMP(B1,$J,B2,B3)          = "" - Array of record IENs in 344.3 in date range
"RTN","RCDPEDAR",218,0)
 ;                                            and for selected payer(s) and division(s)
"RTN","RCDPEDAR",219,0)
 ;          ^TMP(B1,$J,B2,B3,"EFT",B4) = "" - Array of record IENS in 344.31 for above Where:
"RTN","RCDPEDAR",220,0)
 ;                        B1 - "RCDAILYACT"
"RTN","RCDPEDAR",221,0)
 ;                        B2 - Internal Date from DATE/TIME ADDED (344.3, .13)
"RTN","RCDPEDAR",222,0)
 ;                        B3 - Internal IEN for 344.3
"RTN","RCDPEDAR",223,0)
 ;                        B4 - Internal IEN for file 344.31
"RTN","RCDPEDAR",224,0)
 ; Output:  INPUT       - A1^A2^A3^...^An - The following pieces may be updated
"RTN","RCDPEDAR",225,0)
 ;                         A4 - Current Page Number
"RTN","RCDPEDAR",226,0)
 ;                         A5 - Stop Flag
"RTN","RCDPEDAR",227,0)
 ;
"RTN","RCDPEDAR",228,0)
 N CURPG,DETL,DTADD,DTEND,DTST,HDR1,LSTMAN,NJ
"RTN","RCDPEDAR",229,0)
 S DETL=$P(INPUT,"^",3)                     ; Detail Report flag
"RTN","RCDPEDAR",230,0)
 S LSTMAN=$P(INPUT,"^",2)                   ; Listman flag
"RTN","RCDPEDAR",231,0)
 S NJ=$P(INPUT,"^",1)                       ; Nightly Process flag
"RTN","RCDPEDAR",232,0)
 S CURPG=$P(INPUT,"^",4)                    ; Current Page Number
"RTN","RCDPEDAR",233,0)
 S DTST=$P(INPUT,"^",6)                     ; Date Range Start
"RTN","RCDPEDAR",234,0)
 S DTEND=$P(INPUT,"^",7)                    ; Date Range End
"RTN","RCDPEDAR",235,0)
 S $P(INPUT,"^",8)=0                        ; Current line counter
"RTN","RCDPEDAR",236,0)
 S DTADD=""
"RTN","RCDPEDAR",237,0)
 F  D  Q:DTADD=""  Q:$P(INPUT,"^",5)=1
"RTN","RCDPEDAR",238,0)
 . S DTADD=$O(^TMP("RCDAILYACT",$J,DTADD))
"RTN","RCDPEDAR",239,0)
 . Q:DTADD=""
"RTN","RCDPEDAR",240,0)
 . ;
"RTN","RCDPEDAR",241,0)
 . I 'LSTMAN,DETL D  Q:$P(INPUT,"^",5)=1               ; PRCA*4.5*321
"RTN","RCDPEDAR",242,0)
 . . D HDR^RCDPEDA3(.INPUT)
"RTN","RCDPEDAR",243,0)
 . ;
"RTN","RCDPEDAR",244,0)
 . I DETL D                                   ; Detail Report
"RTN","RCDPEDAR",245,0)
 . . S HDR1="DATE EFT DEPOSIT RECEIVED: "_$$FMTE^XLFDT(DTADD,"2Z")  ; PRCA*4.5*321 moved location
"RTN","RCDPEDAR",246,0)
 . . S HDR1=$J("",80-$L(HDR1)\2)_HDR1         ; Center it
"RTN","RCDPEDAR",247,0)
 . . D SL^RCDPEDA3(.INPUT,HDR1)
"RTN","RCDPEDAR",248,0)
 . . D SL^RCDPEDA3(.INPUT," ")
"RTN","RCDPEDAR",249,0)
 . S $P(INPUT,"^",9)=DTADD
"RTN","RCDPEDAR",250,0)
 . D RPT2^RCDPEDA2(.INPUT)                  ; Process all 344.3 records found
"RTN","RCDPEDAR",251,0)
 . Q:$P(INPUT,"^",5)=1                      ; User quit
"RTN","RCDPEDAR",252,0)
 . D TOTSDAY^RCDPEDA3(.INPUT)               ; Display Totals for Date
"RTN","RCDPEDAR",253,0)
 ;
"RTN","RCDPEDAR",254,0)
 Q:$P(INPUT,"^",5)=1                        ; User quit
"RTN","RCDPEDAR",255,0)
 D TOTSF^RCDPEDA3(.INPUT)                   ; Display Final Totals
"RTN","RCDPEDAR",256,0)
 D SL^RCDPEDA3(.INPUT,$$ENDORPRT^RCDPEARL)  ; Display End of Report
"RTN","RCDPEDAR",257,0)
 Q
"RTN","RCDPEDAR",258,0)
 ;
"RTN","RCDPEDAR",259,0)
CHKPYR(IEN,FLG,RCJOB,RCNP) ;EP from RCDPEAR2 PRCA*4.5*318 added RCNP parameter
"RTN","RCDPEDAR",260,0)
 ; Checks to be sure the specified payer has been selected
"RTN","RCDPEDAR",261,0)
 ; Input:   IEN     - Internal IEN into file 344.31 (EDI THIRD PARTY EFT DETAI) OR
"RTN","RCDPEDAR",262,0)
 ;                                      file 344.4  (ELECTRONIC REMITTANCE ADVICE)
"RTN","RCDPEDAR",263,0)
 ;                    Used to retrieve the payer
"RTN","RCDPEDAR",264,0)
 ;          FLG     - 0 if IEN contains ien in file 344.31
"RTN","RCDPEDAR",265,0)
 ;                    1 if IEN contains ien in file 344.4
"RTN","RCDPEDAR",266,0)
 ;          RCJOB   - $J
"RTN","RCDPEDAR",267,0)
 ;          RCNP    - 0 - Not passed
"RTN","RCDPEDAR",268,0)
 ;                    1 - Range of Payers
"RTN","RCDPEDAR",269,0)
 ;                    2 - All Payers selected
"RTN","RCDPEDAR",270,0)
 ;                    3 - Specific payers
"RTN","RCDPEDAR",271,0)
 ;                    Optional, defaults to 0
"RTN","RCDPEDAR",272,0)
 ;          ^TMP("RCSELPAY",$J,CNT)=A1 Where:
"RTN","RCDPEDAR",273,0)
 ;                                   CNT - Counter of the number of payers 1-n
"RTN","RCDPEDAR",274,0)
 ;                                   A1  - Payer Name
"RTN","RCDPEDAR",275,0)
 ; Returns: 1 if payer in 344.31/.02 or 344.4/.06 is in the list of selected payers
"RTN","RCDPEDAR",276,0)
 ;            ^TMP("RCSELPAY",$J)
"RTN","RCDPEDAR",277,0)
 ;          0 otherwise
"RTN","RCDPEDAR",278,0)
 N RCPAY,RES,Z
"RTN","RCDPEDAR",279,0)
 S:'$D(RCNP) RCNP=0                                 ; PRCA*4.5*318 added line
"RTN","RCDPEDAR",280,0)
 S RCPAY=""
"RTN","RCDPEDAR",281,0)
 I IEN D
"RTN","RCDPEDAR",282,0)
 . I FLG S RCPAY=$$GET1^DIQ(344.4,IEN,.06,"I") Q    ; PAYMENT FROM field
"RTN","RCDPEDAR",283,0)
 . S RCPAY=$$GET1^DIQ(344.31,IEN,.02,"I")           ; PAYER NAME field
"RTN","RCDPEDAR",284,0)
 ;
"RTN","RCDPEDAR",285,0)
 ; Include EFT with null Payer Names in reports for ALL payers - PRCA*4.5*298 
"RTN","RCDPEDAR",286,0)
 I FLG=0,RCNP=2,RCPAY="" Q 1
"RTN","RCDPEDAR",287,0)
 Q:RCPAY="" 0                                       ; No Payer to compare, invalid
"RTN","RCDPEDAR",288,0)
 S Z=0,RES=0
"RTN","RCDPEDAR",289,0)
 F  D  Q:Z=""  Q:RES
"RTN","RCDPEDAR",290,0)
 . S Z=$O(^TMP("RCSELPAY",RCJOB,Z))
"RTN","RCDPEDAR",291,0)
 . Q:Z=""
"RTN","RCDPEDAR",292,0)
 . S:RCPAY=$G(^TMP("RCSELPAY",RCJOB,Z)) RES=1
"RTN","RCDPEDAR",293,0)
 Q RES
"RTN","RCDPEDAR",294,0)
 ;
"RTN","RCDPEDAR",295,0)
CHKDIV(IEN,FLG,VAUTD) ;
"RTN","RCDPEDAR",296,0)
 ; IEN - ien in file 344.31 or 344.4
"RTN","RCDPEDAR",297,0)
 ; FLG - 0 if IEN contains ien in file 344.31, 1 if IEN contains ien in file 344.4
"RTN","RCDPEDAR",298,0)
 ; VAUTD - array of selected divisions from DIVISION^VAUTOMA API call
"RTN","RCDPEDAR",299,0)
 ; returns 1 if division associated with an entry in 344.31 is on the list in VAUTD
"RTN","RCDPEDAR",300,0)
 ; returns 0 otherwise
"RTN","RCDPEDAR",301,0)
 N ERA,I,NAME,RCSTA,RES
"RTN","RCDPEDAR",302,0)
 S RES=0
"RTN","RCDPEDAR",303,0)
 I VAUTD=1 S RES=1 G CHKDIVX
"RTN","RCDPEDAR",304,0)
 I 'IEN G CHKDIVX
"RTN","RCDPEDAR",305,0)
 S ERA=$S(FLG:IEN,1:$P($G(^RCY(344.31,IEN,0)),U,10))
"RTN","RCDPEDAR",306,0)
 S RCSTA=$$ERASTA^RCDPEM3(ERA),NAME=$P(RCSTA,U)
"RTN","RCDPEDAR",307,0)
 I NAME="UNKNOWN" G CHKDIVX
"RTN","RCDPEDAR",308,0)
 S I=0 I 'VAUTD F  S I=$O(VAUTD(I)) Q:'I!RES  I NAME=VAUTD(I) S RES=1
"RTN","RCDPEDAR",309,0)
CHKDIVX ;
"RTN","RCDPEDAR",310,0)
 Q RES
"RTN","RCDPELAR")
0^39^B126615293
"RTN","RCDPELAR",1,0)
RCDPELAR ;EDE/FA - LIST ALL AUTO-POSTED RECEIPTS REPORT ;Nov 17, 2016
"RTN","RCDPELAR",2,0)
 ;;4.5;Accounts Receivable;**318,321**;Mar 20, 1995;Build 48
"RTN","RCDPELAR",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPELAR",4,0)
 ;
"RTN","RCDPELAR",5,0)
EN ; Main entry point
"RTN","RCDPELAR",6,0)
 N INPUT,RCVAUTD,XX,YY
"RTN","RCDPELAR",7,0)
 K ^TMP($J,"RCDPE_LAR"),^TMP("RCDPE_LAR",$J)
"RTN","RCDPELAR",8,0)
 K ^TMP("RCSELPAY",$J),^TMP($J,"SELPAYER")
"RTN","RCDPELAR",9,0)
 ;
"RTN","RCDPELAR",10,0)
 S INPUT=$$STADIV(.RCVAUTD)                     ; Division filter
"RTN","RCDPELAR",11,0)
 Q:'INPUT                                       ; '^' or timeout
"RTN","RCDPELAR",12,0)
 S $P(INPUT,"^",2)=$$APORERA()                  ; Filter by Auto-Post Date or ERA Date Received
"RTN","RCDPELAR",13,0)
 Q:'$P(INPUT,"^",2)                             ; '^' or timeout
"RTN","RCDPELAR",14,0)
 S $P(INPUT,"^",3)=$$DTRNG(0)                   ; Start Date|End date
"RTN","RCDPELAR",15,0)
 Q:'$P(INPUT,"^",3)                             ; '^' or timeout
"RTN","RCDPELAR",16,0)
 S $P(INPUT,"^",4)=$$SELERA()                   ; Select type of ERAS to be displayed
"RTN","RCDPELAR",17,0)
 Q:'$P(INPUT,"^",4)                             ; '^' or timeout
"RTN","RCDPELAR",18,0)
 S XX=+$$GETPAY^RCDPEM9(344.4,1,0)              ; Insurance Company filter
"RTN","RCDPELAR",19,0)
 S XX=$S(XX=-1:-1,XX=2:1,1:2)
"RTN","RCDPELAR",20,0)
 S $P(INPUT,"^",5)=XX                           ; Insurance Company filter
"RTN","RCDPELAR",21,0)
 Q:$P(INPUT,"^",5)<0                            ; '^' or timeout
"RTN","RCDPELAR",22,0)
 S XX=$P(INPUT,"^",2),YY=$P(INPUT,"^",4)
"RTN","RCDPELAR",23,0)
 S $P(INPUT,"^",6)=$$RPTSORT(XX,YY)             ; Select Secondary sort
"RTN","RCDPELAR",24,0)
 Q:'$P(INPUT,"^",6)                             ; '^' or timeout
"RTN","RCDPELAR",25,0)
 S $P(INPUT,"^",7)=$$ASKLM^RCDPEARL             ; Ask to Display in Listman Template
"RTN","RCDPELAR",26,0)
 Q:$P(INPUT,"^",7)<0                            ; '^' or timeout
"RTN","RCDPELAR",27,0)
 I $P(INPUT,"^",7)=1 D  Q                       ; Compile data and call listman to display
"RTN","RCDPELAR",28,0)
 . D LMOUT(INPUT,.RCVAUTD,.IO)
"RTN","RCDPELAR",29,0)
 S $P(INPUT,"^",8)=$$EXCEL()                    ; Ask to output to Excel
"RTN","RCDPELAR",30,0)
 Q:$P(INPUT,"^",8)=-1                           ; '^' or timeout
"RTN","RCDPELAR",31,0)
 D:$P(INPUT,"^",8)=1 INFO^RCDPEM6               ; Display capture information for Excel
"RTN","RCDPELAR",32,0)
 S $P(INPUT,"^",9)=$$DEVICE($P(INPUT,"^",8),.IO)    ; Ask output device
"RTN","RCDPELAR",33,0)
 Q:'$P(INPUT,"^",9)
"RTN","RCDPELAR",34,0)
 ;
"RTN","RCDPELAR",35,0)
 ; Option to queue
"RTN","RCDPELAR",36,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPELAR",37,0)
 . N JOB S JOB=$J
"RTN","RCDPELAR",38,0)
 . N ZTDESC,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPELAR",39,0)
 . S ZTRTN="REPORT^RCDPELAR(INPUT,.RCVAUTD,.IO,JOB)"
"RTN","RCDPELAR",40,0)
 . S ZTDESC="LIST ALL AUTO-POSTED RECEIPTS REPORT"
"RTN","RCDPELAR",41,0)
 . M RCPYRSEL=^TMP("RCSELPAY",$J)
"RTN","RCDPELAR",42,0)
 . S ZTSAVE("RC*")="",ZTSAVE("VAUTD")="",ZTSAVE("IO*")=""
"RTN","RCDPELAR",43,0)
 . S ZTSAVE("INPUT")="",ZTSAVE("JOB")=""
"RTN","RCDPELAR",44,0)
 . D ^%ZTLOAD
"RTN","RCDPELAR",45,0)
 . W !!,$S($D(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task.")
"RTN","RCDPELAR",46,0)
 . K ZTSK,IO("Q")
"RTN","RCDPELAR",47,0)
 . D HOME^%ZIS
"RTN","RCDPELAR",48,0)
 ;
"RTN","RCDPELAR",49,0)
 D REPORT(INPUT,.RCVAUTD,.IO)           ; Compile and Display Report data
"RTN","RCDPELAR",50,0)
 Q
"RTN","RCDPELAR",51,0)
 ;
"RTN","RCDPELAR",52,0)
LMOUT(INPUT,RCVAUTD,IO) ; Output report to Listman
"RTN","RCDPELAR",53,0)
 ; Input:   INPUT       - See REPORT for a complete description
"RTN","RCDPELAR",54,0)
 ;          RCVAUTD     -  Array of selected Divisions
"RTN","RCDPELAR",55,0)
 ;                         Only passed if A1=2
"RTN","RCDPELAR",56,0)
 ; Output:  ^TMP("RCDPE_LAR",$J,CTR)=Line - Array of display lines (no headers)
"RTN","RCDPELAR",57,0)
 ;                                           for output to Listman
"RTN","RCDPELAR",58,0)
 ;                                           Only set when A7-1
"RTN","RCDPELAR",59,0)
 N HDR
"RTN","RCDPELAR",60,0)
 S $P(INPUT,"^",9)=0                             ; Initial listman line counter
"RTN","RCDPELAR",61,0)
 D REPORT(INPUT,.RCVAUTD,.IO)                    ; Get the lines to be displayed
"RTN","RCDPELAR",62,0)
 S HDR("TITLE")="AUTO-POSTED RECEIPT REPORT"
"RTN","RCDPELAR",63,0)
 S HDR(1)=$$HDRLN2^RCDPELA1(INPUT)
"RTN","RCDPELAR",64,0)
 S HDR(2)=$$HDRLN3^RCDPELA1(INPUT)
"RTN","RCDPELAR",65,0)
 S HDR(3)=""
"RTN","RCDPELAR",66,0)
 S HDR(4)=""
"RTN","RCDPELAR",67,0)
 S HDR(5)="PAYER"
"RTN","RCDPELAR",68,0)
 S HDR(6)="        DATE      DATE"
"RTN","RCDPELAR",69,0)
 S HDR(7)=$$ERAHDR2^RCDPELA1()
"RTN","RCDPELAR",70,0)
 D LMRPT^RCDPEARL(.HDR,$NA(^TMP("RCDPE_LAR",$J))) ; Generate ListMan display
"RTN","RCDPELAR",71,0)
 ;
"RTN","RCDPELAR",72,0)
 D ^%ZISC                                       ; Close the device
"RTN","RCDPELAR",73,0)
 K ^TMP("RCDPE_LAR",$J),^TMP($J,"RCDPE_LAR")
"RTN","RCDPELAR",74,0)
 K ^TMP("RCSELPAY",$J),^TMP($J,"SELPAYER")
"RTN","RCDPELAR",75,0)
 Q
"RTN","RCDPELAR",76,0)
 ;
"RTN","RCDPELAR",77,0)
STADIV(RCVAUTD) ; Division/Station Filter
"RTN","RCDPELAR",78,0)
 ; Input:   None
"RTN","RCDPELAR",79,0)
 ; Output:  RCVAUTD     - Array of selected divisions, if 1 is returned
"RTN","RCDPELAR",80,0)
 ; Returns: 0           - User up-arrowed or timed out
"RTN","RCDPELAR",81,0)
 ;          1           - All divisions selected
"RTN","RCDPELAR",82,0)
 ;          2           - Selected Divisions
"RTN","RCDPELAR",83,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,VAUTD,X,Y
"RTN","RCDPELAR",84,0)
 D DIVISION^VAUTOMA                         ; IA #664 allows this
"RTN","RCDPELAR",85,0)
 Q:Y<0 0                                    ; User up-arrowed or timed out
"RTN","RCDPELAR",86,0)
 Q:VAUTD=1 1                                ; All divisions selected
"RTN","RCDPELAR",87,0)
 M RCVAUTD=VAUTD                            ; Save selected divisions (if any)
"RTN","RCDPELAR",88,0)
 Q 2
"RTN","RCDPELAR",89,0)
 ;
"RTN","RCDPELAR",90,0)
APORERA() ; Ask the user if they want to filter by Auto-Post Date or ERA Date
"RTN","RCDPELAR",91,0)
 ; received
"RTN","RCDPELAR",92,0)
 ; Input:   None
"RTN","RCDPELAR",93,0)
 ; Returns: 0       - User up-arrowed or timed out
"RTN","RCDPELAR",94,0)
 ;          1       - Filter by Auto-Post date range
"RTN","RCDPELAR",95,0)
 ;          2       - Filter by ERA Date Received
"RTN","RCDPELAR",96,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPELAR",97,0)
 S DIR("A")="(A)uto-Post Date or (E)RA Date Received? (A/E): "
"RTN","RCDPELAR",98,0)
 S DIR(0)="SA^A:Auto-Post Date;E:ERA Date Received"
"RTN","RCDPELAR",99,0)
 S DIR("?",1)="Enter 'A' to filter by an Auto-Post Date Range."
"RTN","RCDPELAR",100,0)
 S DIR("?")="Enter 'E' to filter by an ERA Date Received Date Range."
"RTN","RCDPELAR",101,0)
 S DIR("B")="A"
"RTN","RCDPELAR",102,0)
 D ^DIR
"RTN","RCDPELAR",103,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 0
"RTN","RCDPELAR",104,0)
 Q:Y="A" 1
"RTN","RCDPELAR",105,0)
 Q 2
"RTN","RCDPELAR",106,0)
 ;
"RTN","RCDPELAR",107,0)
DTRNG(WHICH) ; Allows the user to select the Auto-Post OR ERA Received
"RTN","RCDPELAR",108,0)
 ; date range to be used
"RTN","RCDPELAR",109,0)
 ; Input:   WHICH   - 0 - Auto-Post Date Range
"RTN","RCDPELAR",110,0)
 ;                    1 - ERA Date Received Date Range
"RTN","RCDPELAR",111,0)
 ; Returns: 0       - User up-arrowed or timed out, 1 otherwise
"RTN","RCDPELAR",112,0)
 ;          A1^A2   - Where:
"RTN","RCDPELAR",113,0)
 ;                    A1 - Aut-Post Start Date
"RTN","RCDPELAR",114,0)
 ;                    A2 - Auto-Post End Date
"RTN","RCDPELAR",115,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,RANGE,START,X,XX,Y
"RTN","RCDPELAR",116,0)
 S DIR(0)="DAO^:"_DT_":APE"
"RTN","RCDPELAR",117,0)
 S DIR("A")="Start Date: "
"RTN","RCDPELAR",118,0)
 S XX="Enter the earliest "_$S(WHICH=0:"Auto-Post date",1:"ERA Date Received")
"RTN","RCDPELAR",119,0)
 S XX=XX_" for receipts to include on the report"
"RTN","RCDPELAR",120,0)
 S DIR("?")=XX
"RTN","RCDPELAR",121,0)
 D ^DIR
"RTN","RCDPELAR",122,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y="") 0
"RTN","RCDPELAR",123,0)
 S START=Y
"RTN","RCDPELAR",124,0)
ENDDT ; Prompt for end date
"RTN","RCDPELAR",125,0)
 K DIR
"RTN","RCDPELAR",126,0)
 S DIR("B")=Y(0)
"RTN","RCDPELAR",127,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE"
"RTN","RCDPELAR",128,0)
 S DIR("A")="End Date: "
"RTN","RCDPELAR",129,0)
 S XX="Enter the latest "_$S(WHICH=0:"Auto-Post date",1:"ERA Date Received")
"RTN","RCDPELAR",130,0)
 S XX=XX_" for receipts to include on the report"
"RTN","RCDPELAR",131,0)
 S DIR("?")=XX
"RTN","RCDPELAR",132,0)
 D ^DIR
"RTN","RCDPELAR",133,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y="") 0
"RTN","RCDPELAR",134,0)
 I Y<START D  G ENDDT
"RTN","RCDPELAR",135,0)
 . S XX=$$FMTE^XLFDT(START,"2ZD") ;****
"RTN","RCDPELAR",136,0)
 . W !,*7,"Enter an End date that is not less than "_XX
"RTN","RCDPELAR",137,0)
 S RANGE=START_"|"_Y
"RTN","RCDPELAR",138,0)
 Q RANGE
"RTN","RCDPELAR",139,0)
 ;
"RTN","RCDPELAR",140,0)
SELERA() ; Ask the user which types of ERA the want to see on the report
"RTN","RCDPELAR",141,0)
 ; Input:   None
"RTN","RCDPELAR",142,0)
 ; Returns: 0       - User up-arrowed or timed out
"RTN","RCDPELAR",143,0)
 ;          1       - Posted/Completed Receipts
"RTN","RCDPELAR",144,0)
 ;          2       - Only ERAs with Missing Receipts
"RTN","RCDPELAR",145,0)
 ;          3       - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",146,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPELAR",147,0)
 S DIR("A")="Select ERAs to be Displayed: "
"RTN","RCDPELAR",148,0)
 S DIR(0)="SA^1:Posted/Completed Receipts;2:Missing Receipts;3:Both"
"RTN","RCDPELAR",149,0)
 S DIR("B")="Both"
"RTN","RCDPELAR",150,0)
 S DIR("?",1)="Enter 1 to only display Posted Receipts."
"RTN","RCDPELAR",151,0)
 S DIR("?",2)="Enter 2 to only display ERAs with missing receipts."
"RTN","RCDPELAR",152,0)
 S DIR("?")="Enter 3 to display all receipts."
"RTN","RCDPELAR",153,0)
 D ^DIR
"RTN","RCDPELAR",154,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 0
"RTN","RCDPELAR",155,0)
 Q Y
"RTN","RCDPELAR",156,0)
 ;
"RTN","RCDPELAR",157,0)
RPTSORT(WHICH,ERASEL) ; Ask the user how they want to sort the data
"RTN","RCDPELAR",158,0)
 ; Input:   WHICH   - 1- Filtering by Auto-Post Date
"RTN","RCDPELAR",159,0)
 ;                    2 - Filtering by ERA Date Received 
"RTN","RCDPELAR",160,0)
 ;          ERASEL  - ERA Filter          
"RTN","RCDPELAR",161,0)
 ;                    1 - Posted/Completed Receipts
"RTN","RCDPELAR",162,0)
 ;                    2 - Only ERAs with Missing Receipts
"RTN","RCDPELAR",163,0)
 ;                    3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",164,0)
 ; Returns: 0       - User up-arrowed or timed out
"RTN","RCDPELAR",165,0)
 ;          1       - Auto-Post Date sort
"RTN","RCDPELAR",166,0)
 ;          2       - Missing Receipts
"RTN","RCDPELAR",167,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,XX,Y
"RTN","RCDPELAR",168,0)
 ;
"RTN","RCDPELAR",169,0)
 ; If the user is only showing Posted/Completed Receipts OR 
"RTN","RCDPELAR",170,0)
 ; Missing Receipts then the only possible sort value is by date
"RTN","RCDPELAR",171,0)
 I ERASEL'=3 Q 1
"RTN","RCDPELAR",172,0)
 S DIR("A")="Sort by (D)ate or (M)issing Receipts: "
"RTN","RCDPELAR",173,0)
 S DIR(0)="SA^D:Date;M:Missing Receipts"
"RTN","RCDPELAR",174,0)
 S DIR("B")="D"
"RTN","RCDPELAR",175,0)
 S XX=$S(WHICH=1:"Auto-Post date.",1:"ERA Date Received.")
"RTN","RCDPELAR",176,0)
 S DIR("?",1)="Enter 'D' to sort by "_XX
"RTN","RCDPELAR",177,0)
 S DIR("?")="Enter 'M' to display Missing Receipts first."
"RTN","RCDPELAR",178,0)
 D ^DIR
"RTN","RCDPELAR",179,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 0
"RTN","RCDPELAR",180,0)
 S XX=$S(Y="D":1,Y="P":2,1:3)
"RTN","RCDPELAR",181,0)
 Q XX
"RTN","RCDPELAR",182,0)
 ;
"RTN","RCDPELAR",183,0)
EXCEL() ; Ask the user if they want to export to Excel
"RTN","RCDPELAR",184,0)
 ; Input:   None
"RTN","RCDPELAR",185,0)
 ; Returns: -1      - User up-arrowed or timed out
"RTN","RCDPELAR",186,0)
 ;           0      - Output to paper
"RTN","RCDPELAR",187,0)
 ;           1      - Output to Excel
"RTN","RCDPELAR",188,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPELAR",189,0)
 S DIR(0)="Y"
"RTN","RCDPELAR",190,0)
 S DIR("A")="Export the report to Microsoft Excel"
"RTN","RCDPELAR",191,0)
 S DIR("B")="NO"
"RTN","RCDPELAR",192,0)
 S DIR("?")="Enter 'YES' to output to Excel. Otherwise enter 'NO'"
"RTN","RCDPELAR",193,0)
 D ^DIR
"RTN","RCDPELAR",194,0)
 I $G(DUOUT) Q -1
"RTN","RCDPELAR",195,0)
 Q Y
"RTN","RCDPELAR",196,0)
 ;
"RTN","RCDPELAR",197,0)
DEVICE(EXCEL,IO) ; Select the output device
"RTN","RCDPELAR",198,0)
 ; Input:   EXCEL   - 1 - Ouput to Excel, 0 otherwise
"RTN","RCDPELAR",199,0)
 ; Output:  %ZIS    - Selected device
"RTN","RCDPELAR",200,0)
 ;          IO      - Array of selected output info
"RTN","RCDPELAR",201,0)
 ; Returns: 0       - No device selected, 1 otherwise
"RTN","RCDPELAR",202,0)
 N POP,RCPYRSEL,%ZIS
"RTN","RCDPELAR",203,0)
 S %ZIS="QM"
"RTN","RCDPELAR",204,0)
 D ^%ZIS
"RTN","RCDPELAR",205,0)
 Q:POP 0
"RTN","RCDPELAR",206,0)
 Q:EXCEL 1                  ; Output to Excel, no queueing
"RTN","RCDPELAR",207,0)
 ;
"RTN","RCDPELAR",208,0)
 Q 1
"RTN","RCDPELAR",209,0)
 ;
"RTN","RCDPELAR",210,0)
REPORT(INPUT,RCVAUTD,IO,JOB) ; Compile and run the report
"RTN","RCDPELAR",211,0)
 ; Expects ZTQUEUED to be defined already if queued
"RTN","RCDPELAR",212,0)
 ; Input:   INPUT   - A1^A2^A3^...^An Where:
"RTN","RCDPELAR",213,0)
 ;                       A1 - 1 - All divisions selected
"RTN","RCDPELAR",214,0)
 ;                            2 - Selected divisions
"RTN","RCDPELAR",215,0)
 ;                       A2 - 1 - Filter by Auto-Post date range
"RTN","RCDPELAR",216,0)
 ;                            2 - Filter by ERA Date Received date range
"RTN","RCDPELAR",217,0)
 ;                       A3 - B1|B2   - Where:
"RTN","RCDPELAR",218,0)
 ;                             B1 - ERA Date Received Start Date if A2=2
"RTN","RCDPELAR",219,0)
 ;                                  Auto-Post Start Date of A2=1
"RTN","RCDPELAR",220,0)
 ;                             B2 - ERA Date Received End Date if A2=2
"RTN","RCDPELAR",221,0)
 ;                                  Auto-Post End Date of A2=1
"RTN","RCDPELAR",222,0)
 ;                       A4 - 1 - Posted/Completed Receipts
"RTN","RCDPELAR",223,0)
 ;                            2 - Only ERAs with Missing Receipts
"RTN","RCDPELAR",224,0)
 ;                            3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",225,0)
 ;                       A5 - 1 - All insurance companies selected
"RTN","RCDPELAR",226,0)
 ;                            2 - Selected insurance companies chosen
"RTN","RCDPELAR",227,0)
 ;                       A6 - 1 - Auto-Post Date/ERA Date Received Sort
"RTN","RCDPELAR",228,0)
 ;                            2 - Payer sort
"RTN","RCDPELAR",229,0)
 ;                            3 - Missing Receipts
"RTN","RCDPELAR",230,0)
 ;                       A7 - 0 - Do not display in a listman template
"RTN","RCDPELAR",231,0)
 ;                            1 - Display in a listman template
"RTN","RCDPELAR",232,0)
 ;                       A8 - 0 - Output to paper
"RTN","RCDPELAR",233,0)
 ;                            1 - Output to Excel
"RTN","RCDPELAR",234,0)
 ;                       A9 - Line counter for Listman output  
"RTN","RCDPELAR",235,0)
 ;           RCVAUTD -  Array of selected Divisions
"RTN","RCDPELAR",236,0)
 ;                      Only passed if A1=2
"RTN","RCDPELAR",237,0)
 ;           IO      - Interface device
"RTN","RCDPELAR",238,0)
 ;           JOB     - $J (optional, only passed in when report is queued)
"RTN","RCDPELAR",239,0)
 ;           ^TMP("RCSELPAY",$J)- Global Array of selected insurance companies
"RTN","RCDPELAR",240,0)
 ; Output:   ^TMP("RCDPE_LAR",$J,CTR)=Line - Array of display lines (no headers)
"RTN","RCDPELAR",241,0)
 ;                                           for output to Listman
"RTN","RCDPELAR",242,0)
 ;                                           Only set when A7-1
"RTN","RCDPELAR",243,0)
 N CURDT,DIVFLT,DTEND,DTSTART,ERAFILT,WHICH,XX,SORT,STOP
"RTN","RCDPELAR",244,0)
 K ^TMP("RCDPE_LAR",$J),^TMP($J,"RCDPE_LAR")
"RTN","RCDPELAR",245,0)
 I '$G(JOB) S JOB=""
"RTN","RCDPELAR",246,0)
 U IO
"RTN","RCDPELAR",247,0)
 D PAYERS(JOB)                              ; Rearrange payer global for easier use
"RTN","RCDPELAR",248,0)
 S DIVFLT=$P(INPUT,"^",1)                   ; Division filter
"RTN","RCDPELAR",249,0)
 S WHICH=$P(INPUT,"^",2)                    ; 1 - Auto-Post date, 2 - ERA Date Received
"RTN","RCDPELAR",250,0)
 S SORT=$P(INPUT,"^",6)                     ; Type of secondary sort
"RTN","RCDPELAR",251,0)
 S DTEND=$P($P(INPUT,"^",3),"|",2)_".9999"  ; End of Date Range
"RTN","RCDPELAR",252,0)
 S DTSTART=$P($P(INPUT,"^",3),"|",1)        ; End of Date Range
"RTN","RCDPELAR",253,0)
 S ERAFILT=$P(INPUT,"^",4)                  ; ERA Filter
"RTN","RCDPELAR",254,0)
 ;
"RTN","RCDPELAR",255,0)
 ; First filter and sort the report
"RTN","RCDPELAR",256,0)
 S CURDT=(DTSTART-1)_.9999                  ;PRCA*4.5*321 Added '_.9999'
"RTN","RCDPELAR",257,0)
 F  D  Q:'CURDT  Q:CURDT>(DTEND)
"RTN","RCDPELAR",258,0)
 . S:WHICH=1 CURDT=$O(^RCY(344.4,"F",CURDT))
"RTN","RCDPELAR",259,0)
 . S:WHICH=2 CURDT=$O(^RCY(344.4,"AFD",CURDT))
"RTN","RCDPELAR",260,0)
 . Q:'CURDT
"RTN","RCDPELAR",261,0)
 . Q:CURDT>(DTEND)
"RTN","RCDPELAR",262,0)
 . I WHICH=2 D RPTE(DIVFLT,CURDT,SORT,ERAFILT,.RCVAUTD) Q
"RTN","RCDPELAR",263,0)
 . D RPTA(DIVFLT,CURDT,SORT,ERAFILT,.RCVAUTD)
"RTN","RCDPELAR",264,0)
 ;
"RTN","RCDPELAR",265,0)
 D RPTOUT^RCDPELA1(INPUT)                ; Output the report
"RTN","RCDPELAR",266,0)
 ;
"RTN","RCDPELAR",267,0)
 ; Quit if Listman - clean up of ^TMP & device is handled in LMOUT^RCDPELAR
"RTN","RCDPELAR",268,0)
 I $P(INPUT,"^",7)=1 Q
"RTN","RCDPELAR",269,0)
 ;
"RTN","RCDPELAR",270,0)
 ; Close device
"RTN","RCDPELAR",271,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPELAR",272,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPELAR",273,0)
 K ^TMP("RCDPE_LAR",$J),^TMP($J,"RCDPE_LAR")
"RTN","RCDPELAR",274,0)
 K ^TMP("RCSELPAY",$J),^TMP($J,"SELPAYER")
"RTN","RCDPELAR",275,0)
 K ZTQUEUED
"RTN","RCDPELAR",276,0)
 Q
"RTN","RCDPELAR",277,0)
 ;
"RTN","RCDPELAR",278,0)
PAYERS(JOB) ; Rearrange payer global for easier use
"RTN","RCDPELAR",279,0)
 ; Input:   ^TMP("RCSELPAY",$J,nn)=Payer Name - Global Array of selected
"RTN","RCDPELAR",280,0)
 ;                                              insurance companies
"RTN","RCDPELAR",281,0)
 ; Output   ^TMP($J,"SELPAYER",Payer Name)="" - Global Array of selected
"RTN","RCDPELAR",282,0)
 ;                                    insurance rearranged for easier checks
"RTN","RCDPELAR",283,0)
 I JOB="" S JOB=$J
"RTN","RCDPELAR",284,0)
 N PAYER,XX
"RTN","RCDPELAR",285,0)
 K ^TMP($J,"SELPAYER")
"RTN","RCDPELAR",286,0)
 S XX=""
"RTN","RCDPELAR",287,0)
 F  D  Q:XX=""
"RTN","RCDPELAR",288,0)
 . S XX=$O(^TMP("RCSELPAY",JOB,XX))
"RTN","RCDPELAR",289,0)
 . Q:XX=""
"RTN","RCDPELAR",290,0)
 . S PAYER=$$UP^XLFSTR(^TMP("RCSELPAY",JOB,XX))
"RTN","RCDPELAR",291,0)
 . S ^TMP($J,"SELPAYER",PAYER)=""
"RTN","RCDPELAR",292,0)
 K ^TMP("RCSELPAY",JOB)
"RTN","RCDPELAR",293,0)
 Q
"RTN","RCDPELAR",294,0)
 ;
"RTN","RCDPELAR",295,0)
RPTE(DIVFLT,CURDT,SORT,ERAFILT,VAUTD) ; Use the ERA Date Received index and filter out
"RTN","RCDPELAR",296,0)
 ; divisions, payers that weren't selected
"RTN","RCDPELAR",297,0)
 ; Input:   DIVFLT              - 1 - All Divisions selected, 2 otherwise
"RTN","RCDPELAR",298,0)
 ;          CURDT               - Date being processed
"RTN","RCDPELAR",299,0)
 ;          SORT                - 1 - Auto-Post Date Sort
"RTN","RCDPELAR",300,0)
 ;                                2 - Missing Receipts
"RTN","RCDPELAR",301,0)
 ;          ERAFILT             - 1 - Posted/Completed Receipts
"RTN","RCDPELAR",302,0)
 ;                                2 - Only ERAs with Missing Receipts
"RTN","RCDPELAR",303,0)
 ;                                3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",304,0)
 ;          VAUTD               - Array of selected divisions
"RTN","RCDPELAR",305,0)
 ;         ^TMP("RCSELPAY",$J)  - Global Array of selected insurance companies
"RTN","RCDPELAR",306,0)
 ; Output: ^TMP($J,A1,"SEL",A2,A3,A4,A5)="" - if record passed filters Where:
"RTN","RCDPELAR",307,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELAR",308,0)
 ;                                 A2 - Uppercased Payer Name (primary sort)
"RTN","RCDPELAR",309,0)
 ;                                 A3 - Secondary Sort Value
"RTN","RCDPELAR",310,0)
 ;                                 A4 - Internal IEN for file 344.4
"RTN","RCDPELAR",311,0)
 ;                                 A5 - Internal IEN for sub file 344.41
"RTN","RCDPELAR",312,0)
 N COMPLETE,IEN3444,IEN34441,IENS,PAYER,RECEIPT,SVAL,XX
"RTN","RCDPELAR",313,0)
 S IEN3444=0
"RTN","RCDPELAR",314,0)
 F  D  Q:'IEN3444
"RTN","RCDPELAR",315,0)
 . S IEN3444=$O(^RCY(344.4,"AFD",CURDT,IEN3444))
"RTN","RCDPELAR",316,0)
 . Q:'IEN3444
"RTN","RCDPELAR",317,0)
 . S PAYER=$$GET1^DIQ(344.4,IEN3444,.06,"I")            ; Payment From field
"RTN","RCDPELAR",318,0)
 . S PAYER=$$UP^XLFSTR(PAYER)
"RTN","RCDPELAR",319,0)
 . Q:'$D(^TMP($J,"SELPAYER",PAYER))                     ; Not a selected payer
"RTN","RCDPELAR",320,0)
 . I DIVFLT'=1 Q:'$$CHKDIV^RCDPEDAR(IEN3444,1,.VAUTD)   ; Not a selected Division
"RTN","RCDPELAR",321,0)
 . S XX=$$GET1^DIQ(344.4,IEN3444,4.01,"I")              ; Auto-Post date on ERA
"RTN","RCDPELAR",322,0)
 . Q:'XX                                                ; skip if not auto-posted ERA
"RTN","RCDPELAR",323,0)
 . S COMPLETE=$$COMPLETE(IEN3444)                       ; Check for missing receipts
"RTN","RCDPELAR",324,0)
 . I ERAFILT=1,'COMPLETE Q                              ; Missing Receipt
"RTN","RCDPELAR",325,0)
 . I ERAFILT=2,COMPLETE Q                               ; Not a Missing Receipt
"RTN","RCDPELAR",326,0)
 . ;
"RTN","RCDPELAR",327,0)
 . ; Just showing missing receipts and this ERA doesn't have any
"RTN","RCDPELAR",328,0)
 . I ERAFILT=2,COMPLETE Q
"RTN","RCDPELAR",329,0)
 . S IEN34441=0
"RTN","RCDPELAR",330,0)
 . F  D  Q:'IEN34441
"RTN","RCDPELAR",331,0)
 . . S IEN34441=$O(^RCY(344.4,IEN3444,1,IEN34441))
"RTN","RCDPELAR",332,0)
 . . Q:'IEN34441
"RTN","RCDPELAR",333,0)
 . . S IENS=IEN34441_","_IEN3444_","
"RTN","RCDPELAR",334,0)
 . . S SVAL=$S(SORT=1:CURDT,1:COMPLETE)                 ; Get the sort value
"RTN","RCDPELAR",335,0)
 . . S ^TMP($J,"RCDPE_LAR","SEL",PAYER,SVAL,IEN3444,IEN34441)=""
"RTN","RCDPELAR",336,0)
 Q
"RTN","RCDPELAR",337,0)
 ;
"RTN","RCDPELAR",338,0)
RPTA(DIVFLT,CURDT,SORT,ERAFILT,VAUTD) ; Use the Auto-Post Date index and filter out
"RTN","RCDPELAR",339,0)
 ; divisions, payers that weren't selected
"RTN","RCDPELAR",340,0)
 ; Input:   DIVFLT              - 1 - All Divisions selected, 2 otherwise
"RTN","RCDPELAR",341,0)
 ;          CURDT               - Date being processed
"RTN","RCDPELAR",342,0)
 ;          SORT                - 1 - Auto-Post Date Sort
"RTN","RCDPELAR",343,0)
 ;                                2 - Missing Receipts
"RTN","RCDPELAR",344,0)
 ;          ERAFILT             - 1 - Posted/Completed Receipts
"RTN","RCDPELAR",345,0)
 ;                                2 - Only ERAs with Missing Receipts
"RTN","RCDPELAR",346,0)
 ;                                3 - Both Posted/Completed and Missing Receipts
"RTN","RCDPELAR",347,0)
 ;          VAUTD               - Array of selected divisions
"RTN","RCDPELAR",348,0)
 ;         ^TMP("RCSELPAY",$J)  - Global Array of selected insurance companies
"RTN","RCDPELAR",349,0)
 ;         ^TMP($J,"RCDPE_LAR","ERA") - see output for definition
"RTN","RCDPELAR",350,0)
 ; Output: ^TMP($J,A1,"SEL",A2,A3,A4,A5)="" - if record passed filters Where:
"RTN","RCDPELAR",351,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELAR",352,0)
 ;                                 A2 - Uppercased Payer Name (primary sort)
"RTN","RCDPELAR",353,0)
 ;                                 A3 - Secondary Sort Value
"RTN","RCDPELAR",354,0)
 ;                                 A4 - Internal IEN for file 344.4
"RTN","RCDPELAR",355,0)
 ;                                 A5 - Internal IEN for sub file 344.41
"RTN","RCDPELAR",356,0)
 ;        ^TMP($J,A1,"ERA",A2)="" - List of ERAs that were already pulled Where:
"RTN","RCDPELAR",357,0)
 ;                                 A1 - "RCDPE_LAR"
"RTN","RCDPELAR",358,0)
 ;                                 A2 - IEN of #344.4 (ERA #)
"RTN","RCDPELAR",359,0)
 ;
"RTN","RCDPELAR",360,0)
 N COMPLETE,IEN3444,IEN3441,PAYER,SVAL
"RTN","RCDPELAR",361,0)
 S IEN3444=0
"RTN","RCDPELAR",362,0)
 F  D  Q:'IEN3444
"RTN","RCDPELAR",363,0)
 . S IEN3444=$O(^RCY(344.4,"F",CURDT,IEN3444))
"RTN","RCDPELAR",364,0)
 . Q:'IEN3444
"RTN","RCDPELAR",365,0)
 . I DIVFLT'=1 Q:'$$CHKDIV^RCDPEDAR(IEN3444,1,.VAUTD)  ; Not a selected Division
"RTN","RCDPELAR",366,0)
 . S COMPLETE=$$COMPLETE(IEN3444)
"RTN","RCDPELAR",367,0)
 . I ERAFILT=1,'COMPLETE Q                             ; Missing Receipt
"RTN","RCDPELAR",368,0)
 . I ERAFILT=2,COMPLETE Q                              ; Not a Missing Receipt
"RTN","RCDPELAR",369,0)
 . S PAYER=$$GET1^DIQ(344.4,IEN3444,.06,"I")           ; Payment From field
"RTN","RCDPELAR",370,0)
 . S PAYER=$$UP^XLFSTR(PAYER)
"RTN","RCDPELAR",371,0)
 . Q:'$D(^TMP($J,"SELPAYER",PAYER))                    ; Not a selected payer
"RTN","RCDPELAR",372,0)
 . Q:$D(^TMP($J,"RCDPE_LAR","ERA",IEN3444))            ; Already pulled this ERA
"RTN","RCDPELAR",373,0)
 . ;
"RTN","RCDPELAR",374,0)
 . S ^TMP($J,"RCDPE_LAR","ERA",IEN3444)=""
"RTN","RCDPELAR",375,0)
 . S IEN34441=0
"RTN","RCDPELAR",376,0)
 . F  D  Q:'IEN34441
"RTN","RCDPELAR",377,0)
 . . S IEN34441=$O(^RCY(344.4,IEN3444,1,IEN34441))
"RTN","RCDPELAR",378,0)
 . . Q:'IEN34441
"RTN","RCDPELAR",379,0)
 . . S SVAL=$S(SORT=1:CURDT,1:COMPLETE)                ; Get the sort value
"RTN","RCDPELAR",380,0)
 . . S ^TMP($J,"RCDPE_LAR","SEL",PAYER,SVAL,IEN3444,IEN34441)=""
"RTN","RCDPELAR",381,0)
 Q
"RTN","RCDPELAR",382,0)
 ;
"RTN","RCDPELAR",383,0)
COMPLETE(IEN3444) ; Checks an ERA for missing receipts
"RTN","RCDPELAR",384,0)
 ; Input:   IEN3444   - ERA to be checked
"RTN","RCDPELAR",385,0)
 ; Returns: 0 if at least one detail line of the ERA has a missing receipt
"RTN","RCDPELAR",386,0)
 ;          1 otherwise
"RTN","RCDPELAR",387,0)
 N XX
"RTN","RCDPELAR",388,0)
 S XX=$$GET1^DIQ(344.4,IEN3444,4.02,"I")    ; Auto-Post Status field
"RTN","RCDPELAR",389,0)
 I XX=2 Q 1                                 ; Complete ERA
"RTN","RCDPELAR",390,0)
 Q 0
"RTN","RCDPELAR",391,0)
 ;
"RTN","RCDPELAR",392,0)
ASKSTOP() ; Ask to continue
"RTN","RCDPELAR",393,0)
 ; Input:   IOST    - Device Type 
"RTN","RCDPELAR",394,0)
 ; Returns: 1 - User wants to quit, 0 otherwise
"RTN","RCDPELAR",395,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPELAR",396,0)
 Q:$E(IOST,1,2)'["C-" 0                     ; Not a terminal
"RTN","RCDPELAR",397,0)
 S DIR(0)="E"
"RTN","RCDPELAR",398,0)
 W ! D ^DIR
"RTN","RCDPELAR",399,0)
 I ($D(DIRUT))!($D(DUOUT)) Q 1
"RTN","RCDPELAR",400,0)
 Q 0
"RTN","RCDPELAR",401,0)
 ;
"RTN","RCDPEM")
0^17^B74838117
"RTN","RCDPEM",1,0)
RCDPEM ;ALB/TMK/PJH - POST EFT, ERA MATCHING TO EFT ;Jun 06, 2014@19:11:19
"RTN","RCDPEM",2,0)
 ;;4.5;Accounts Receivable;**173,255,269,276,283,298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEM",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM",4,0)
 ; IA 4050 covers call to SPL1^IBCEOBAR
"RTN","RCDPEM",5,0)
 ; Note - keep processing in line with RCDPXPAP
"RTN","RCDPEM",6,0)
 ;
"RTN","RCDPEM",7,0)
EN ; Post EFT deposits, auto-match EFT's and ERA's 
"RTN","RCDPEM",8,0)
 ;
"RTN","RCDPEM",9,0)
 K ^TMP($J,"RCDPETOT"),^TMP("RCDPEAP",$J)
"RTN","RCDPEM",10,0)
 ; ^TMP($J,"RCDPETOT",344.3 or 344.31,file ien)=
"RTN","RCDPEM",11,0)
 ;  (1) match (0/1/-1)   (2) total $   (3) posted (0/1)  (4) error ref
"RTN","RCDPEM",12,0)
 ;  (5) EFT deposit ien 344.1 if added for EFT
"RTN","RCDPEM",13,0)
 ;
"RTN","RCDPEM",14,0)
 N RCZ,RCSUM,RCDEP,RECTDA,RC0,RCER,RCDUZ,Z,Z0,Z1,DA,X,Y,DIE,DR
"RTN","RCDPEM",15,0)
 M RCDUZ=DUZ
"RTN","RCDPEM",16,0)
 N DUZ S DUZ=+$O(^VA(200,"B","EDILOCKBOX,AUTOMATIC",0)),DUZ(0)="" S:'DUZ DUZ=.5
"RTN","RCDPEM",17,0)
 K ^TMP($J,"RCXM"),^TMP($J,"RCTOT")
"RTN","RCDPEM",18,0)
 S ZTREQ="@"
"RTN","RCDPEM",19,0)
 L +^RCY(344.3,"ALOCK"):5 I '$T D  G ENQ ; Lock record
"RTN","RCDPEM",20,0)
 . ; Send bulletin that job could not be run
"RTN","RCDPEM",21,0)
 . S ^TMP($J,"RCXM",1)="The nightly job to post EFT deposits and match EFTs to ERAs could not be run",^TMP($J,"RCXM",2)="Another match process was already running (lock on ^RCY(344.3,""ALOCK"") )"
"RTN","RCDPEM",22,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",23,0)
 ;
"RTN","RCDPEM",24,0)
 ; Post deposits for any unposted EFTs in file 344.3
"RTN","RCDPEM",25,0)
 ; 'Unposted' EFTs have a 0 in AMOUNT POSTED field
"RTN","RCDPEM",26,0)
 S ^TMP($J,"RCTOT","EFT_DEP")=0
"RTN","RCDPEM",27,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.3,"APOST",0,RCZ)) Q:'RCZ  S RC0=$G(^RCY(344.3,RCZ,0))  I RC0'="",$P(RC0,U,8) D
"RTN","RCDPEM",28,0)
 . S ^TMP($J,"RCTOT","EFT_DEP")=^TMP($J,"RCTOT","EFT_DEP")+1
"RTN","RCDPEM",29,0)
 . ; Verify check sums
"RTN","RCDPEM",30,0)
 . S RCSUM=$$CHKSUM^RCDPESR3(RCZ)
"RTN","RCDPEM",31,0)
 . I RCSUM'=$P(RC0,U,9) D  Q
"RTN","RCDPEM",32,0)
 .. ; Bulletin that check sums do not match
"RTN","RCDPEM",33,0)
 .. ; Update record error list and checksum error field
"RTN","RCDPEM",34,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2)
"RTN","RCDPEM",35,0)
 .. S RCER(2)="  Checksum is invalid and the EFT deposit record is corrupted.",RCER(3)="  Stored Checksum = "_$P(RC0,U,9)_" Calculated Checksum: "_RCSUM,RCER(4)="  This EFT deposit cannot be sent to FMS.  You must ask for it to be"
"RTN","RCDPEM",36,0)
 .. S RCER(5)="   retransmitted to your site."
"RTN","RCDPEM",37,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",38,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",39,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",40,0)
 .. S DIE="^RCY(344.3,",DA=RCZ,DR=".1////1" D ^DIE
"RTN","RCDPEM",41,0)
 .. S ^TMP($J,"RCTOT","CSUM")=$G(^TMP($J,"RCTOT","CSUM"))+1
"RTN","RCDPEM",42,0)
 . ;
"RTN","RCDPEM",43,0)
 . S RCDEP=+$P(RC0,U,3),RECTDA=+$O(^RCY(344,"AD",RCDEP,0))
"RTN","RCDPEM",44,0)
 . I RCDEP D LOCKDEP(RCDEP,1)
"RTN","RCDPEM",45,0)
 . I 'RCDEP!'RECTDA D  ;  Add deposit and/or receipt to files 344.1, 344
"RTN","RCDPEM",46,0)
 .. I 'RCDEP D  ; Add dep record RCDEP, update field .03 with the pointer
"RTN","RCDPEM",47,0)
 ... S RCDEP=+$$ADDDEP^RCDPEM0($P(RC0,U,6),$P(RC0,U,7),RCZ)
"RTN","RCDPEM",48,0)
 ... S ^TMP($J,"RCTOT","DEPOSIT")=$G(^TMP($J,"RCTOT","DEPOSIT"))+1
"RTN","RCDPEM",49,0)
 .. ;
"RTN","RCDPEM",50,0)
 .. I 'RECTDA,RCDEP D  ; Add receipt record, post to rev source cd 8NZZ
"RTN","RCDPEM",51,0)
 ... S RECTDA=+$$ADDREC^RCDPEM0(RCDEP,RCZ)
"RTN","RCDPEM",52,0)
 .. ;
"RTN","RCDPEM",53,0)
 . I RCDEP D LOCKDEP(RCDEP,0)
"RTN","RCDPEM",54,0)
 . ;
"RTN","RCDPEM",55,0)
 . I 'RCDEP!'RECTDA D  Q  ; Could not add entry to file 344.1 or 344 
"RTN","RCDPEM",56,0)
 .. ; Send a bulletin, update error text
"RTN","RCDPEM",57,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(2),RCER(2)="  "_$S('RCDEP:"Neither a deposit nor a receipt were able",1:"A receipt was not able")_" to be added - no match attempted"
"RTN","RCDPEM",58,0)
 .. I RCDEP,'RECTDA S RCER(3)="  Deposit Ticket # created: "_$P($G(^RCY(344.1,+$P(RC0,U,3),0)),U)
"RTN","RCDPEM",59,0)
 .. S RCER($O(RCER(""),-1)+1)="This EFT deposit can't be sent to FMS.  You must ask Austin to retransmit"
"RTN","RCDPEM",60,0)
 .. D BULL^RCDPEM1(344.3,RC0,.RCER)
"RTN","RCDPEM",61,0)
 .. S $P(^TMP($J,"RCDPETOT",344.3,RCZ),U,4)=+$G(^TMP($J,"RCXM",0))
"RTN","RCDPEM",62,0)
 .. D STORERR^RCDPEM0(RCZ,.RCER)
"RTN","RCDPEM",63,0)
 .. S ^TMP($J,"RCTOT","ERR")=$G(^TMP($J,"RCTOT","ERR"))+1
"RTN","RCDPEM",64,0)
 . ;
"RTN","RCDPEM",65,0)
 . S DIE="^RCY(344.31," S Z=0 F  S Z=$O(^RCY(344.31,"B",RCZ,Z)) Q:'Z  S DA=Z,DR=".11////1" D ^DIE
"RTN","RCDPEM",66,0)
 ;
"RTN","RCDPEM",67,0)
 ;Update payer table for new payers - PRCA*4.5*298
"RTN","RCDPEM",68,0)
 D NEWPYR^RCDPESP
"RTN","RCDPEM",69,0)
 ;Scan Non-Released Rx Exceptions for released Rx - PRCA*4.5*298
"RTN","RCDPEM",70,0)
 D EN^RCDPEX4
"RTN","RCDPEM",71,0)
 ;
"RTN","RCDPEM",72,0)
 D MATCH(0,1)
"RTN","RCDPEM",73,0)
 ;
"RTN","RCDPEM",74,0)
 ;Auto Post - PRCA*4.5*298
"RTN","RCDPEM",75,0)
 D EN^RCDPEAP
"RTN","RCDPEM",76,0)
 ;Auto Decrease - PRCA*4.5*298
"RTN","RCDPEM",77,0)
 D EN^RCDPEAD
"RTN","RCDPEM",78,0)
 ;
"RTN","RCDPEM",79,0)
 ;Workload Notifications - PRCA*4.5*321
"RTN","RCDPEM",80,0)
 D EN^RCDPEM7
"RTN","RCDPEM",81,0)
 ;
"RTN","RCDPEM",82,0)
 L -^RCY(344.3,"ALOCK")
"RTN","RCDPEM",83,0)
ENQ K ^TMP($J,"RCDPETOT"),^TMP("RCDPEAP",$J)
"RTN","RCDPEM",84,0)
 ;
"RTN","RCDPEM",85,0)
 ;ePayments 5010 part II enhancements
"RTN","RCDPEM",86,0)
 ;Create Bulletins of EEOB Moved or Copied today
"RTN","RCDPEM",87,0)
 D EN^RCDPEM8
"RTN","RCDPEM",88,0)
 Q
"RTN","RCDPEM",89,0)
 ;
"RTN","RCDPEM",90,0)
MATCH(RCMAN,RCPROC) ; match unmatched EFTs with ERAs
"RTN","RCDPEM",91,0)
 ; RCMAN = 1 if job run manually, outside of nightly processing
"RTN","RCDPEM",92,0)
 ; RCPROC = 1 if called from EFT-EOB automatch, 0 if from manual match
"RTN","RCDPEM",93,0)
 ;
"RTN","RCDPEM",94,0)
 N RC0,RCER,RCZ,RCHAC
"RTN","RCDPEM",95,0)
 I '$O(^RCY(344.31,"AMATCH",0,0)) D  G MATCHQ
"RTN","RCDPEM",96,0)
 . ; Send bulletin - no unmatched EFTs found
"RTN","RCDPEM",97,0)
 . N RCT
"RTN","RCDPEM",98,0)
 . S RCT=+$O(^TMP($J,"RCXM"," "),-1)+1
"RTN","RCDPEM",99,0)
 . S ^TMP($J,"RCXM",RCT)=$S('$G(RCMAN):"The nightly job",1:"The manual option")_" to match EFTs has found no EFTs are currently unmatched on your system"
"RTN","RCDPEM",100,0)
 . I $G(RCMAN) S ^TMP($J,"RCXM",RCT+1)="The action was initiated by "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPEM",101,0)
 . D SENDBULL^RCDPEM1
"RTN","RCDPEM",102,0)
 ;
"RTN","RCDPEM",103,0)
 S RCZ=0 F  S RCZ=$O(^RCY(344.31,"AMATCH",0,RCZ)) Q:'RCZ  D
"RTN","RCDPEM",104,0)
 . K RCER
"RTN","RCDPEM",105,0)
 . S RC0=$G(^RCY(344.31,RCZ,0)),RCHAC=($E($P($G(^RCY(344.3,+RC0,0)),U,6),1,3)="HAC")
"RTN","RCDPEM",106,0)
 . Q:RC0=""  ; Bad xref
"RTN","RCDPEM",107,0)
 . Q:$S('RCHAC:'$P(RC0,U,11),1:0)  ; EFT deposit must have been recorded
"RTN","RCDPEM",108,0)
 . S ^TMP($J,"RCTOT","EFT")=$G(^TMP($J,"RCTOT","EFT"))+1
"RTN","RCDPEM",109,0)
 . I RCHAC S ^TMP($J,"RCTOT","EFT_HAC")=$G(^TMP($J,"RCTOT","EFT_HAC"))+1
"RTN","RCDPEM",110,0)
 . S ^TMP($J,"RCDPETOT",344.31,RCZ)=""
"RTN","RCDPEM",111,0)
 . ;
"RTN","RCDPEM",112,0)
 . D MATCH^RCDPEM0(RCZ,RCPROC)
"RTN","RCDPEM",113,0)
 ;
"RTN","RCDPEM",114,0)
 I '$O(^TMP($J,"RCXM",0)) K RCER S RCER(1)="",RCER(2)="NO EXCEPTIONS WHILE MATCHING EFTs-ERAs OR IN RECORDING THE DEPOSITS TO FMS" D BULL^RCDPEM1("","",.RCER) K RCER
"RTN","RCDPEM",115,0)
 D EN2^RCDPEM1,BULL^RCDPEM1("","",.RCER)
"RTN","RCDPEM",116,0)
 D SENDBULL^RCDPEM1
"RTN","RCDPEM",117,0)
 ;
"RTN","RCDPEM",118,0)
MATCHQ K ^TMP($J,"RCDPETOT"),^TMP($J,"RCTOT")
"RTN","RCDPEM",119,0)
 Q
"RTN","RCDPEM",120,0)
 ;
"RTN","RCDPEM",121,0)
LOCKDEP(RCDEP,LOCK) ; Lock/confirm deposit ien RCDEP file 341.1
"RTN","RCDPEM",122,0)
 ; If LOCK = 1 lock deposit
"RTN","RCDPEM",123,0)
 ; If LOCK = 0 unlock deposit
"RTN","RCDPEM",124,0)
 I $G(LOCK) D
"RTN","RCDPEM",125,0)
 . L +^RCY(344.1,RCDEP,0):DILOCKTM
"RTN","RCDPEM",126,0)
 . D CONFIRM^RCDPUDEP(RCDEP) ; confirm to prevent changes
"RTN","RCDPEM",127,0)
 I '$G(LOCK) L -^RCY(344.1,RCDEP,0)
"RTN","RCDPEM",128,0)
 Q
"RTN","RCDPEM",129,0)
 ;
"RTN","RCDPEM",130,0)
RCPTDET(RCRZ,RECTDA1,RCER) ; Adds detail to a receipt based on file 344.49
"RTN","RCDPEM",131,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEM",132,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEM",133,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEM",134,0)
 ;
"RTN","RCDPEM",135,0)
 N DA,DIE,DR,Q,RCR,RCSPL,RCZ0,RCTRANDA,RCQ,X,Y,Z0,Z1,Z ; PRCA*4.5*318
"RTN","RCDPEM",136,0)
 ;
"RTN","RCDPEM",137,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEM",138,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0))
"RTN","RCDPEM",139,0)
 . I $P(RCZ0,U)'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEM",140,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEM",141,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1)
"RTN","RCDPEM",142,0)
 . ;
"RTN","RCDPEM",143,0)
 . I RCTRANDA'>0 D  Q  ; Error adding receipt detail - PRCA*4.5*318
"RTN","RCDPEM",144,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(1) ; PRCA*4.5*318 - pass RCPROC value to $$SETERR
"RTN","RCDPEM",145,0)
 .. S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEM",146,0)
 . ;
"RTN","RCDPEM",147,0)
 . ;Store receipt line detail
"RTN","RCDPEM",148,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEM",149,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEM",150,0)
 ;
"RTN","RCDPEM",151,0)
 ; Update A/R CORRECTED PAYMENT multiple with apportionment for split lines
"RTN","RCDPEM",152,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEM",153,0)
 . S Z1=$O(RCSPL(Z,"")) Q:Z1=""
"RTN","RCDPEM",154,0)
 . I $O(RCSPL(Z,""),-1)=Z1,'$$SPLIT(Z,Z1,RCERA) Q  ; No split occurred
"RTN","RCDPEM",155,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEM",156,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEM",157,0)
 .. Q:'Q
"RTN","RCDPEM",158,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspensed
"RTN","RCDPEM",159,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEM",160,0)
 .. E  D
"RTN","RCDPEM",161,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEM",162,0)
 . ; BEGIN - PRCA*4.5*321
"RTN","RCDPEM",163,0)
 . ;Move/Copy/Remove EEOB detail for split line
"RTN","RCDPEM",164,0)
 . N CLAIM,IEN3611,RCSPLIT,RCSUB,RCZSAV
"RTN","RCDPEM",165,0)
 . ; Sub-array of split claim detail for individual line
"RTN","RCDPEM",166,0)
 . M RCSPLIT=RCSPL(Z)
"RTN","RCDPEM",167,0)
 . ; Protect Z subscript variable from overwrite by triggers
"RTN","RCDPEM",168,0)
 . S RCZSAV=Z
"RTN","RCDPEM",169,0)
 . ; Get scratchpad line number for this ERA line
"RTN","RCDPEM",170,0)
 . S RCSUB=$O(^RCY(344.49,RCRZ,1,"ASEQ",Z,""))
"RTN","RCDPEM",171,0)
 . ; Original claim number from Scratchpad line
"RTN","RCDPEM",172,0)
 . S CLAIM=$$GET1^DIQ(344.491,RCSUB_","_RCRZ_",",.02)
"RTN","RCDPEM",173,0)
 . ; EOB for original claim from ERA line
"RTN","RCDPEM",174,0)
 . S IEN3611=$$GET1^DIQ(344.41,RCQ_","_RCRZ_",",.02,"I")
"RTN","RCDPEM",175,0)
 . ; Automatic Move/Copy/Remove EOB
"RTN","RCDPEM",176,0)
 . I $$AUTO^RCDPEM5(CLAIM,.RCSPLIT,RCERA,"W",IEN3611)
"RTN","RCDPEM",177,0)
 . ; Restore Z
"RTN","RCDPEM",178,0)
 . S Z=RCZSAV
"RTN","RCDPEM",179,0)
 . ; END  - PRCA*4.5*321
"RTN","RCDPEM",180,0)
 ;
"RTN","RCDPEM",181,0)
 Q
"RTN","RCDPEM",182,0)
SPLIT(Z,Z1,RCERA) ;Check if worklist was split but to to single claim
"RTN","RCDPEM",183,0)
 N SUB,NBILL,OBILL
"RTN","RCDPEM",184,0)
 ;Find split line in scratchpad
"RTN","RCDPEM",185,0)
 S SUB=$O(^RCY(344.49,RCERA,1,"B",Z1,"")) Q:'SUB 0
"RTN","RCDPEM",186,0)
 ;Get original claim number from scratchpad
"RTN","RCDPEM",187,0)
 S OBILL=$P($G(^RCY(344.49,RCERA,1,SUB-1,0)),U,2)
"RTN","RCDPEM",188,0)
 ;New claim number
"RTN","RCDPEM",189,0)
 S NBILL=$P(RCSPL(Z,Z1),U,2)
"RTN","RCDPEM",190,0)
 ;If new and old claim are not the same this is a move via split
"RTN","RCDPEM",191,0)
 I OBILL'="",OBILL'=NBILL Q 1
"RTN","RCDPEM",192,0)
 ;Otherwise this is not a split
"RTN","RCDPEM",193,0)
 Q 0
"RTN","RCDPEM",194,0)
 ;
"RTN","RCDPEM",195,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEM",196,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEM",197,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEM",198,0)
 ; RCPROC = Function calling this subroutine
"RTN","RCDPEM",199,0)
 ;        = 1 EFT match to ERA   = 0 manual add receipt
"RTN","RCDPEM",200,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEM",201,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEM",202,0)
 ;
"RTN","RCDPEM",203,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEM",204,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEM",205,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEM",206,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEM",207,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEM",208,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";.27////"_RCR_";"
"RTN","RCDPEM",209,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEM",210,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEM",211,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEM",212,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEM",213,0)
 I $P(RCUP,U,2)["**ADJ" S RCCOM=RCCOM_$S(RCCOM'="":"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA")
"RTN","RCDPEM",214,0)
 I RCCOM]"" S DR=DR_"1.02////"_$E(RCCOM,1,60)_";"
"RTN","RCDPEM",215,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEM",216,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEM",217,0)
 D ^DIE
"RTN","RCDPEM",218,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPEM",219,0)
 D:RCCOM]"" AUDIT^RCDPECH(RECTDA1,RCTRANDA,RCZ,RCR)
"RTN","RCDPEM",220,0)
 Q
"RTN","RCDPEM",221,0)
 ;
"RTN","RCDPEM1")
0^18^B45189971
"RTN","RCDPEM1",1,0)
RCDPEM1 ;ALB/TMK,DWA,PJH - ERA MATCH TO EFT (cont) ; 5/5/11 1:25pm
"RTN","RCDPEM1",2,0)
 ;;4.5;Accounts Receivable;**173,269,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEM1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM1",4,0)
 Q
"RTN","RCDPEM1",5,0)
 ;
"RTN","RCDPEM1",6,0)
BULL(RCFILE,RC0,RCER) ; Add the error to the bulletin text array
"RTN","RCDPEM1",7,0)
 ; RCFILE = null, 344.3 or 344.31, depending on the file being worked
"RTN","RCDPEM1",8,0)
 ; RC0 = the 0-node of the RCFILE entry
"RTN","RCDPEM1",9,0)
 ; RCER = the error text to be placed in the bulletin (passed by ref)
"RTN","RCDPEM1",10,0)
 ;
"RTN","RCDPEM1",11,0)
 N RCHCT,CT,Z
"RTN","RCDPEM1",12,0)
 I '$O(^TMP($J,"RCXM",0)) S ^TMP($J,"RCXM",1)="The following exceptions were encountered attempting",^TMP($J,"RCXM",2)="to post EFT deposits OR to match EFT's with ERA's:",^TMP($J,"RCXM",3)=" "
"RTN","RCDPEM1",13,0)
 S (RCHCT,CT)=+$O(^TMP($J,"RCXM",""),-1)
"RTN","RCDPEM1",14,0)
 S ^TMP($J,"RCXM",0)=$G(^TMP($J,"RCXM",0))+1
"RTN","RCDPEM1",15,0)
 I RC0'="" D
"RTN","RCDPEM1",16,0)
 . D BLD("^TMP($J,""RCXM"")",.CT,RCFILE,RC0)
"RTN","RCDPEM1",17,0)
 . S RCER=$G(RCER)+1,RCHCT=RCHCT+1
"RTN","RCDPEM1",18,0)
 . S ^TMP($J,"RCXM",RCHCT)=$E(^TMP($J,"RCXM",0)_$J("",4),1,4)_$G(^TMP($J,"RCXM",RCHCT))
"RTN","RCDPEM1",19,0)
 S Z=1 F  S Z=$O(RCER(Z)) Q:'Z  S CT=CT+1,^TMP($J,"RCXM",CT)="  "_RCER(Z)
"RTN","RCDPEM1",20,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  "
"RTN","RCDPEM1",21,0)
 Q
"RTN","RCDPEM1",22,0)
 ;
"RTN","RCDPEM1",23,0)
SENDBULL ; Sends the bulletin when all processing is complete
"RTN","RCDPEM1",24,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,XMSUBJ
"RTN","RCDPEM1",25,0)
 S XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEM1",26,0)
 S XMBODY="^TMP($J,""RCXM"")"
"RTN","RCDPEM1",27,0)
 S XMSUBJ="EDI LBOX "_$$FMTE^XLFDT(DT,2)_" EXCEPTIONS EFT DEP/MATCH EFTs TO ERAs"
"RTN","RCDPEM1",28,0)
 D  ;
"RTN","RCDPEM1",29,0)
 . N DUZ
"RTN","RCDPEM1",30,0)
 . S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEM1",31,0)
 . D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEM1",32,0)
 K ^TMP($J,"RCXM")
"RTN","RCDPEM1",33,0)
 Q
"RTN","RCDPEM1",34,0)
 ;
"RTN","RCDPEM1",35,0)
BLD(RCARRAY,RCT,RCFILE,RC0) ; Build the array for entry 344.31 detail
"RTN","RCDPEM1",36,0)
 ; RCARRAY = the name of the array to be set
"RTN","RCDPEM1",37,0)
 ; RCT = the # of lines already output into this array
"RTN","RCDPEM1",38,0)
 ; RCFILE = 344.3 or 344.31
"RTN","RCDPEM1",39,0)
 ; RC0 = the 0-node of the entry in RCFILE
"RTN","RCDPEM1",40,0)
 ;
"RTN","RCDPEM1",41,0)
 N Z,RC00
"RTN","RCDPEM1",42,0)
 I RCFILE=344.31 D
"RTN","RCDPEM1",43,0)
 . S RC00=$G(^RCY(344.3,+RC0,0))
"RTN","RCDPEM1",44,0)
 . S Z=$$SETSTR^VALM1("  TRACE #: "_$P(RC0,U,4),"",1,61) ; Expand Trace # to 50 characters
"RTN","RCDPEM1",45,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z ; for Ins. Co. below
"RTN","RCDPEM1",46,0)
 . S Z=$$SETSTR^VALM1("  INS CO: "_$E($P(RC0,U,2),1,22)_"/"_$P(RC0,U,3),"",1,76)
"RTN","RCDPEM1",47,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z
"RTN","RCDPEM1",48,0)
 . S Z=$$SETSTR^VALM1("  DEPOSIT DATE: "_$$FMTE^XLFDT($P(RC00,U,7),2),"",1,24)
"RTN","RCDPEM1",49,0)
 . S Z=$$SETSTR^VALM1("  DATE REC'D: "_$S($P(RC00,U,13):$$FMTE^XLFDT($P(RC00,U,13)\1,2),1:""),Z,25,22)
"RTN","RCDPEM1",50,0)
 . S Z=$$SETSTR^VALM1("  PAYMENT AMT: "_$TR($J($P(RC0,U,7),15,2)," "),Z,47,30)
"RTN","RCDPEM1",51,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z
"RTN","RCDPEM1",52,0)
 ;
"RTN","RCDPEM1",53,0)
 I RCFILE=344.3 D
"RTN","RCDPEM1",54,0)
 . S Z=$$SETSTR^VALM1("  DEPOSIT #: "_$P(RC0,U,6),"",1,13)
"RTN","RCDPEM1",55,0)
 . S Z=$$SETSTR^VALM1("  DEPOSIT DATE: "_$$FMTE^XLFDT($P(RC0,U,7),2),Z,16,24)
"RTN","RCDPEM1",56,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z
"RTN","RCDPEM1",57,0)
 . S Z=$$SETSTR^VALM1("  DATE REC'D: "_$S($P(RC0,U,13):$$FMTE^XLFDT($P(RC0,U,13)\1,2),1:""),"",25,22)
"RTN","RCDPEM1",58,0)
 . S Z=$$SETSTR^VALM1("  DEPOSIT AMT: "_$TR($J($P(RC0,U,8),15,2)," "),Z,47,30)
"RTN","RCDPEM1",59,0)
 . S RCT=RCT+1,@RCARRAY@(RCT)=Z
"RTN","RCDPEM1",60,0)
 ;
"RTN","RCDPEM1",61,0)
 Q
"RTN","RCDPEM1",62,0)
 ;
"RTN","RCDPEM1",63,0)
EN1 ; Queue match job for run on demand
"RTN","RCDPEM1",64,0)
 N DIR,X,Y,ZTIO,ZTRTN,ZTSK,ZTDESC,ZTDTH
"RTN","RCDPEM1",65,0)
 S DIR(0)="YA",DIR("A",1)="THIS OPTION QUEUES THE JOB TO MATCH EFTs TO ELECTRONIC ERAs"
"RTN","RCDPEM1",66,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO RUN THIS JOB?: ",DIR("B")="NO"
"RTN","RCDPEM1",67,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM1",68,0)
 I Y'=1 G EN1Q
"RTN","RCDPEM1",69,0)
 L +^RCY(344.3,"ALOCK"):5 I '$T D  G EN1Q
"RTN","RCDPEM1",70,0)
 . S DIR(0)="EA",DIR("A",1)="This job is currently running ... try again later",DIR("A")="Press ENTER to continue: " D ^DIR K DIR
"RTN","RCDPEM1",71,0)
 S ZTIO="",ZTDTH=$$NOW^XLFDT()
"RTN","RCDPEM1",72,0)
 S ZTRTN="MATCH^RCDPEM(1,1)",ZTDESC="AR - MANUAL EFT-ERA MATCH EDI LOCKBOX"
"RTN","RCDPEM1",73,0)
 D ^%ZTLOAD
"RTN","RCDPEM1",74,0)
 W !!,$S($D(ZTSK):"Your job has been queued - task number "_ZTSK,1:"Unable to queue this job.")
"RTN","RCDPEM1",75,0)
 U IO
"RTN","RCDPEM1",76,0)
EN1Q L -^RCY(344.3,"ALOCK")
"RTN","RCDPEM1",77,0)
 Q
"RTN","RCDPEM1",78,0)
 ;
"RTN","RCDPEM1",79,0)
EN2 ; Entrypoint from nightly job to put Nightly data into the nightly job's status bulletin
"RTN","RCDPEM1",80,0)
 ; PRCA*4.5*321 dropped call to the Daily Activity Report
"RTN","RCDPEM1",81,0)
 ; data into the nightly job's status bulletin
"RTN","RCDPEM1",82,0)
 N CT,DATA,Z,Z0,RCHD,T,T0
"RTN","RCDPEM1",83,0)
 S CT=+$O(^TMP($J,"RCXM",""),-1)
"RTN","RCDPEM1",84,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=""
"RTN","RCDPEM1",85,0)
 I $D(^TMP($J,"RCTOT","EFT_DEP")) D
"RTN","RCDPEM1",86,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)=$J("",12)_"********** TOTALS **********"
"RTN","RCDPEM1",87,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="DEPOSITS"
"RTN","RCDPEM1",88,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # UNPOSTED EFT DEPOSITS FOUND: "_+$G(^TMP($J,"RCTOT","EFT_DEP"))
"RTN","RCDPEM1",89,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # NEW EFT DEPOSITS CREATED: "_+$G(^TMP($J,"RCTOT","DEPOSIT"))
"RTN","RCDPEM1",90,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # NEW EFT DEPOSIT RECEIPTS CREATED: "_+$G(^TMP($J,"RCTOT","EFT_RECPT"))
"RTN","RCDPEM1",91,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # EFT DEPOSITS WITH CHECK SUM ERRORS: "_+$G(^TMP($J,"RCTOT","CSUM"))
"RTN","RCDPEM1",92,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # EFT DEPOSITS WITH OTHER ERRORS: "_+$G(^TMP($J,"RCTOT","ERR"))
"RTN","RCDPEM1",93,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL EFT DEPOSIT AMOUNT POSTED TO REV SRC CD 8NZZ: "_$J(+$G(^TMP($J,"RCTOT","SUSPAMT")),"",2)
"RTN","RCDPEM1",94,0)
 . S CT=CT+1,^TMP($J,"RCXM",CT)=""
"RTN","RCDPEM1",95,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="EFT-ERA MATCHES"
"RTN","RCDPEM1",96,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # UNMATCHED ERAs CHECKED: "_+$G(^TMP($J,"RCTOT","EFT"))
"RTN","RCDPEM1",97,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # ERAs MATCHED TO EFTs: "_+$G(^TMP($J,"RCTOT","MATCH"))_$S($G(^TMP($J,"RCTOT","MATCH"))&$G(^TMP($J,"RCTOT","TOTMIS")):" INCLUDING "_+$G(^TMP($J,"RCTOT","TOTMIS"))_" WITH MISMATCHED TOTALS",1:"")
"RTN","RCDPEM1",98,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  TOTAL # ERAs STILL UNMATCHED: "_+$G(^TMP($J,"RCTOT","NO_MATCH"))
"RTN","RCDPEM1",99,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=""
"RTN","RCDPEM1",100,0)
 ;K ^TMP("RCDAILYACT",$J)  ; PRCA*4.5*321 don't need - related to Daily Activity Report
"RTN","RCDPEM1",101,0)
 K ^TMP($J,"RC1")
"RTN","RCDPEM1",102,0)
 ;
"RTN","RCDPEM1",103,0)
 S Z=0 F  S Z=$O(^TMP($J,"RCDPETOT",344.31,Z)) Q:'Z  S Z0=$G(^RCY(344.31,Z,0)) I Z0 S ^TMP($J,"RC1",+Z0,Z)=Z0
"RTN","RCDPEM1",104,0)
 ;
"RTN","RCDPEM1",105,0)
 S (RCHD,Z)=0 F  S Z=$O(^TMP($J,"RCDPETOT",344.3,Z)) Q:'Z  S DATA=$G(^(Z)) D
"RTN","RCDPEM1",106,0)
 . I 'RCHD D HDR(.CT,.RCHD) ; Add headers
"RTN","RCDPEM1",107,0)
 . S Z0=$G(^RCY(344.3,Z,0))
"RTN","RCDPEM1",108,0)
 . S CT=CT+1
"RTN","RCDPEM1",109,0)
 . S ^TMP($J,"RCXM",CT)=""
"RTN","RCDPEM1",110,0)
 . I '$G(DATA) D
"RTN","RCDPEM1",111,0)
 .. S CT=CT+1
"RTN","RCDPEM1",112,0)
 .. S ^TMP($J,"RCXM",CT)=^TMP($J,"RCXM",CT)_"  "_$E($P($G(^RCY(344.1,+$P(Z0,U,3),0)),U)_$J("",15),1,15)_"  "_$E($P($G(^RCY(344,+$O(^RCY(344,"AD",+$P(Z0,U,3),0)),0)),U)_$J("",15),1,15)_"  "
"RTN","RCDPEM1",113,0)
 .. S ^TMP($J,"RCXM",CT)=^TMP($J,"RCXM",CT)_$J(+$P(Z0,U,12),"",2)
"RTN","RCDPEM1",114,0)
 . I $G(DATA) D
"RTN","RCDPEM1",115,0)
 .. S ^TMP($J,"RCXM",CT)=^TMP($J,"RCXM",CT)_"  "_$E($P($G(^RCY(344.1,+$P(DATA,U,5),0)),U)_$J("",15),1,15)_"  "_$E($S($P(DATA,U,5):$P($G(^RCY(344,+DATA,0)),U),1:"")_$J("",15),1,15)_"  "
"RTN","RCDPEM1",116,0)
 .. S ^TMP($J,"RCXM",CT)=^TMP($J,"RCXM",CT)_$J($S($P(DATA,U,3):+$P(DATA,U,2),1:0),"",2)
"RTN","RCDPEM1",117,0)
 . I $P(DATA,U,4) S CT=CT+1,^TMP($J,"RCXM",CT)="    ERROR # REFERENCED ABOVE : "_$P(DATA,U,4)
"RTN","RCDPEM1",118,0)
 . S T=0 F  S T=$O(^TMP($J,"RC1",Z,T)) Q:'T  S T0=$G(^(T)) D
"RTN","RCDPEM1",119,0)
 .. S CT=CT+1
"RTN","RCDPEM1",120,0)
 .. S ^TMP($J,"RCXM",CT)=$J("",5)_$P(T0,U,4)
"RTN","RCDPEM1",121,0)
 .. S CT=CT+1 ; separate TRACE # above from PAYER NAME/ID below
"RTN","RCDPEM1",122,0)
 .. S ^TMP($J,"RCXM",CT)=$J("",5)_$P(T0,U,2)_"/"_$P(T0,U,3)
"RTN","RCDPEM1",123,0)
 .. S CT=CT+1,^TMP($J,"RCXM",CT)=$J("",10)_"PAYMENT AMOUNT: "_$J(+$P(T0,U,7),"",2)_"  MATCH STATUS: "_$$EXTERNAL^DILFD(344.31,.08,,$P(T0,U,8))
"RTN","RCDPEM1",124,0)
 .. S:$O(^TMP($J,"RCDPETOT",344.3,Z)) CT=CT+1,^TMP($J,"RCXM",CT)=" "
"RTN","RCDPEM1",125,0)
 ;. I $P(DATA,U,3) S ^TMP("RCDAILYACT",$J,DT,Z)=Z0  ;PRCA*4.5*321 remove
"RTN","RCDPEM1",126,0)
 ;
"RTN","RCDPEM1",127,0)
 K ^TMP($J,"RC1")
"RTN","RCDPEM1",128,0)
 ;I $O(^TMP("RCDAILYACT",$J,0)) D  ; Daily activity rep automatic bulletin ;PRCA*4.5*321 remove
"RTN","RCDPEM1",129,0)
 ;. N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,XMZ,XMERR,XMSUBJ
"RTN","RCDPEM1",130,0)
 ;. K ^TMP($J,"RCDPE_DAR")
"RTN","RCDPEM1",131,0)
 ;. D RPT1^RCDPEDAR("1^0^0^0^0^"_DT_"^"_DT)  ;PRCA*4.5*318, changed the parameters
"RTN","RCDPEM1",132,0)
 ;. K ^TMP("RCDAILYACT",$J)
"RTN","RCDPEM1",133,0)
 ;. Q:'$O(^TMP($J,"RCDPE_DAR",0))
"RTN","RCDPEM1",134,0)
 ;. S XMTO("I:G.RCDPE PAYMENTS")=""
"RTN","RCDPEM1",135,0)
 ;. S XMBODY="^TMP($J,""RCDPE_DAR"")"
"RTN","RCDPEM1",136,0)
 ;. S XMSUBJ="EDI LBOX - AUTO DAILY ACTIVITY SUMMARY - "_$$FMTE^XLFDT(DT,2)
"RTN","RCDPEM1",137,0)
 ;. D  ;
"RTN","RCDPEM1",138,0)
 ;.. N DUZ
"RTN","RCDPEM1",139,0)
 ;.. S DUZ=.5,DUZ(0)="@"
"RTN","RCDPEM1",140,0)
 ;.. D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEM1",141,0)
 ;. K ^TMP($J,"RCDPE_DAR")
"RTN","RCDPEM1",142,0)
 Q
"RTN","RCDPEM1",143,0)
 ;
"RTN","RCDPEM1",144,0)
HDR(CT,HD) ; Header array set
"RTN","RCDPEM1",145,0)
 ; CT = line count, passed by reference
"RTN","RCDPEM1",146,0)
 ; HD = flag returned as 1 so the header is only output once
"RTN","RCDPEM1",147,0)
 N Q
"RTN","RCDPEM1",148,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=" "
"RTN","RCDPEM1",149,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=$J("",20)_"********** EFT DEPOSIT RECORDS **********"
"RTN","RCDPEM1",150,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="  EFT DEPOSIT      EFT RECEIPT      POSTED AMOUNT"
"RTN","RCDPEM1",151,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)=" "
"RTN","RCDPEM1",152,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="     TRACE #"
"RTN","RCDPEM1",153,0)
 S CT=CT+1,^TMP($J,"RCXM",CT)="     PAYER NAME/ID"
"RTN","RCDPEM1",154,0)
 S CT=CT+1,Q="",$P(Q,"=",79)="",^TMP($J,"RCXM",CT)=Q
"RTN","RCDPEM1",155,0)
 S HD=1
"RTN","RCDPEM1",156,0)
 Q
"RTN","RCDPEM1",157,0)
 ;
"RTN","RCDPEM2")
0^50^B247276843
"RTN","RCDPEM2",1,0)
RCDPEM2 ;ALB/TMK/PJH - MANUAL ERA AND EFT MATCHING ;Jun 11, 2014@13:24:36
"RTN","RCDPEM2",2,0)
 ;;4.5;Accounts Receivable;**173,208,276,284,293,298,303,304,321**;Mar 20, 1995;Build 48
"RTN","RCDPEM2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM2",4,0)
 Q
"RTN","RCDPEM2",5,0)
 ;
"RTN","RCDPEM2",6,0)
 ; PRCA*4.5*303 - Manually Match EFT from Worklist screen
"RTN","RCDPEM2",7,0)
MATCHWL ; Manually 'match' ERA to an EFT that originates from [RCDPE WORKLIST ERA LIST]
"RTN","RCDPEM2",8,0)
 N DA,DIC,DIE,DIR,DR,DTRNG,DTOUT,DUOUT,END,RCEFT,RCERA,RCMBG,RCMATCH,RCNAME,RCQUIT,START,X,Y
"RTN","RCDPEM2",9,0)
 D FULL^VALM1
"RTN","RCDPEM2",10,0)
 ;
"RTN","RCDPEM2",11,0)
 ; PRCA*4.5*303 moved code out because this routine grew too large
"RTN","RCDPEM2",12,0)
 I $$ML0^RCDPRU() G MWQ ; if true then quit, othewise continue
"RTN","RCDPEM2",13,0)
 ;
"RTN","RCDPEM2",14,0)
ML1 ; Select EFT to Match to this ERA
"RTN","RCDPEM2",15,0)
 S DIR("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",16,0)
 ;
"RTN","RCDPEM2",17,0)
 ; See comment in Tag M1 for PRCA*4.5*293.
"RTN","RCDPEM2",18,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPEM2",19,0)
 I $G(DTRNG) S DIR("S")=DIR("S")_"&'($P($G(^(0)),U,13)<START)&'($P($G(^(0)),U,13)>END)"
"RTN","RCDPEM2",20,0)
 ; ** end PRCA*4.5*293
"RTN","RCDPEM2",21,0)
 ;
"RTN","RCDPEM2",22,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",23,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G MWQ
"RTN","RCDPEM2",24,0)
 S RCEFT=+Y,RCEFT(0)=$G(^RCY(344.31,+Y,0))
"RTN","RCDPEM2",25,0)
 W !
"RTN","RCDPEM2",26,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",27,0)
 W !
"RTN","RCDPEM2",28,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",29,0)
 I $D(DUOUT)!$D(DTOUT) G MWQ
"RTN","RCDPEM2",30,0)
 I Y'=1 G ML1
"RTN","RCDPEM2",31,0)
 ;
"RTN","RCDPEM2",32,0)
 D M12A ; Go to the Manual match, we have the ERA and EFT
"RTN","RCDPEM2",33,0)
 ;
"RTN","RCDPEM2",34,0)
MWQ ; Quit back to the worklist VALMBCK will be killed by List Manager.
"RTN","RCDPEM2",35,0)
 D INIT^RCDPEWL7 ; Rebuild the screen because we may have changed it.
"RTN","RCDPEM2",36,0)
 S VALMBCK="R",VALMBG=RCMBG
"RTN","RCDPEM2",37,0)
 Q
"RTN","RCDPEM2",38,0)
 ;
"RTN","RCDPEM2",39,0)
MATCH1 ; Manually 'match' an ERA to an EFT
"RTN","RCDPEM2",40,0)
 N DA,DIC,DIE,DIR,DR,DTRNG,DTOUT,DUOUT,END,RCEFT,RCERA,RCMATCH,RCNAME,RCQUIT,START,X,Y,RCMTFLG
"RTN","RCDPEM2",41,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MATCH AN EFT DETAIL RECORD",!,"WITH AN ERA RECORD."
"RTN","RCDPEM2",42,0)
 ; PRCA*4.5*298 - Add ability to specify a date range
"RTN","RCDPEM2",43,0)
 S DIR("A")="Select by date Range? (Y/N) ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR
"RTN","RCDPEM2",44,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",45,0)
 I Y<1 G M1
"RTN","RCDPEM2",46,0)
 S DTRNG=Y  ; flag indicating date range selected
"RTN","RCDPEM2",47,0)
 K DIR S DIR("?")="Enter the earliest date for the selection range."
"RTN","RCDPEM2",48,0)
 ; value in DIR(0) for %DT = APE: ask date, past assumed, echo answer
"RTN","RCDPEM2",49,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: " D ^DIR K DIR
"RTN","RCDPEM2",50,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G M1Q
"RTN","RCDPEM2",51,0)
 S START=Y K DIR,X,Y
"RTN","RCDPEM2",52,0)
 S DIR("?")="Enter the latest date for the selection range."
"RTN","RCDPEM2",53,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPEM2",54,0)
 D ^DIR K DIR
"RTN","RCDPEM2",55,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G M1Q
"RTN","RCDPEM2",56,0)
 S END=Y
"RTN","RCDPEM2",57,0)
 ;
"RTN","RCDPEM2",58,0)
M1 ; come here if no date range slection 
"RTN","RCDPEM2",59,0)
 S DIR("A")="SELECT THE UNMATCHED EFT TO MATCH TO AN ERA: "
"RTN","RCDPEM2",60,0)
 ;
"RTN","RCDPEM2",61,0)
 ; ** start PRCA*4.5*293 Add extra checks to filter out EFTs that have 
"RTN","RCDPEM2",62,0)
 ;      a payment amount of zero or EFTs that have been removed.
"RTN","RCDPEM2",63,0)
 ;      Only UNMATCHED EFTs with payment amt >0 and not removed should
"RTN","RCDPEM2",64,0)
 ;      be selectable by the user.
"RTN","RCDPEM2",65,0)
 ;
"RTN","RCDPEM2",66,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I ('$P(^(0),U,8))&($P($G(^(0)),U,7))&('$P($G(^(3)),U))"
"RTN","RCDPEM2",67,0)
 I $G(DTRNG) S DIR("S")=DIR("S")_"&'($P($G(^(0)),U,13)<START)&'($P($G(^(0)),U,13)>END)"
"RTN","RCDPEM2",68,0)
 ; ** end PRCA*4.5*293
"RTN","RCDPEM2",69,0)
 ;
"RTN","RCDPEM2",70,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",71,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",72,0)
 S RCEFT=+Y,RCEFT(0)=$G(^RCY(344.31,+Y,0))
"RTN","RCDPEM2",73,0)
 W !
"RTN","RCDPEM2",74,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",75,0)
 W !
"RTN","RCDPEM2",76,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MATCH?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",77,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",78,0)
 I Y'=1 G M1
"RTN","RCDPEM2",79,0)
M12 S DIR("A")="SELECT THE UNMATCHED ERA TO MATCH TO EFT #"_RCEFT_": "
"RTN","RCDPEM2",80,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,8)"
"RTN","RCDPEM2",81,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",82,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) G M1Q
"RTN","RCDPEM2",83,0)
 S RCERA=+Y,RCERA(0)=$G(^RCY(344.4,+Y,0))
"RTN","RCDPEM2",84,0)
 W !
"RTN","RCDPEM2",85,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",86,0)
 W !
"RTN","RCDPEM2",87,0)
 S DIR("A")="ARE YOU SURE THIS IS THE CORRECT ERA TO MATCH TO?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",88,0)
 I $D(DUOUT)!$D(DTOUT) G M1Q
"RTN","RCDPEM2",89,0)
 I Y'=1 G M12
"RTN","RCDPEM2",90,0)
 ;
"RTN","RCDPEM2",91,0)
M12A ; PRCA*4.5*303 - MATCH WL jumps here to complete the manual match
"RTN","RCDPEM2",92,0)
 S RCMATCH=(+$P(RCERA(0),U,5)=+$P(RCEFT(0),U,7))
"RTN","RCDPEM2",93,0)
 S RCNAME=($P(RCERA(0),U,6)=$P(RCEFT(0),U,2))
"RTN","RCDPEM2",94,0)
 I 'RCMATCH!'RCNAME D  G:RCQUIT M1Q
"RTN","RCDPEM2",95,0)
 . N Z
"RTN","RCDPEM2",96,0)
 . S RCQUIT=0,Z=1
"RTN","RCDPEM2",97,0)
 . S DIR("A",1)="***WARNING***"
"RTN","RCDPEM2",98,0)
 . I 'RCNAME S Z=Z+1,DIR("A",Z)=$J("",3)_"> The payer names on these two records do not agree"
"RTN","RCDPEM2",99,0)
 . I 'RCMATCH S Z=Z+1,DIR("A",Z)=$J("",3)_"> The amount of payment on these two records do not agree"
"RTN","RCDPEM2",100,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE YOU SURE YOU WANT TO MATCH THESE 2 RECORDS?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",101,0)
 . I $S($D(DUOUT)!$D(DTOUT):1,Y'=1:1,1:0) S RCQUIT=1 Q
"RTN","RCDPEM2",102,0)
 S DIE="^RCY(344.4,",DR=".09////1",DA=RCERA D ^DIE
"RTN","RCDPEM2",103,0)
 I '$D(Y) S DIE="^RCY(344.31,",DR=".08////1;.1////"_RCERA,DA=RCEFT D ^DIE
"RTN","RCDPEM2",104,0)
 S RCMTFLG=$S('$D(Y):1,1:0)
"RTN","RCDPEM2",105,0)
 W !,"EFT #"_RCEFT_" WAS "_$S(RCMTFLG:"SUCCESSFULLY",1:"NOT")_" MATCHED TO ERA #"_RCERA
"RTN","RCDPEM2",106,0)
 I 'RCMTFLG S DIR(0)="E" D ^DIR K DIR G M1Q
"RTN","RCDPEM2",107,0)
 ;PRCA*4.5*304 add ability to use auto-posting for a manually matched item
"RTN","RCDPEM2",108,0)
 ;  Only if the amount of payments match.
"RTN","RCDPEM2",109,0)
 I 'RCMATCH D  G M1Q    ;if payment amounts don't match, don't allow for auto-posting.
"RTN","RCDPEM2",110,0)
 . W !,"ERA/EFT balances do not match - cannot Mark for Auto-Post. Press any key." S DIR(0)="E" D ^DIR K DIR
"RTN","RCDPEM2",111,0)
 W !
"RTN","RCDPEM2",112,0)
 K DIR
"RTN","RCDPEM2",113,0)
 S DIR("A")="Do you wish to mark this entry for Auto Posting (Y/N)? "
"RTN","RCDPEM2",114,0)
 S DIR(0)="YA"
"RTN","RCDPEM2",115,0)
 D ^DIR
"RTN","RCDPEM2",116,0)
 I 'Y K DIR S DIR(0)="E" D ^DIR G M1Q
"RTN","RCDPEM2",117,0)
 N AUTOPOST
"RTN","RCDPEM2",118,0)
 S AUTOPOST=$$AUTOCHK2^RCDPEAP1(RCERA,1) ; Allow auto-post for CHK and ACH type ERA - PRCA*4.5*321
"RTN","RCDPEM2",119,0)
 I AUTOPOST D
"RTN","RCDPEM2",120,0)
 . D SETSTA^RCDPEAP(RCERA,0,"Manual Match: Marked as Auto-Post Candidate")
"RTN","RCDPEM2",121,0)
 . W !,"ERA has been successfully Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEM2",122,0)
 I 'AUTOPOST D
"RTN","RCDPEM2",123,0)
 . D AUDITLOG^RCDPEAP(RCERA,"","Manual Match: Not Marked as Auto-Post Candidate-"_$P(AUTOPOST,U,2))
"RTN","RCDPEM2",124,0)
 . W !,"ERA was NOT Marked as an Auto-Post CANDIDATE - ",$P(AUTOPOST,U,2)
"RTN","RCDPEM2",125,0)
 K DIR S DIR(0)="E" D ^DIR
"RTN","RCDPEM2",126,0)
M1Q Q
"RTN","RCDPEM2",127,0)
 ;
"RTN","RCDPEM2",128,0)
MATCH2 ; Manually 'match' a 0-balance EFT to a paper EOB
"RTN","RCDPEM2",129,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCEFT,RCRCPT
"RTN","RCDPEM2",130,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE EFT DETAIL RECORD",!,"AS MATCHED TO A PAPER EOB"
"RTN","RCDPEM2",131,0)
M2 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE EFT TO MARK AS MATCHED TO PAPER EOB: "
"RTN","RCDPEM2",132,0)
 S DIR(0)="PAO^RCY(344.31,:AEMQ",DIR("S")="I '$P(^(0),U,8),'$P(^(0),U,7)"
"RTN","RCDPEM2",133,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",134,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M2Q
"RTN","RCDPEM2",135,0)
 S RCEFT=+Y
"RTN","RCDPEM2",136,0)
 W !
"RTN","RCDPEM2",137,0)
 S DIC="^RCY(344.31,",DR="0",DA=RCEFT D EN^DIQ
"RTN","RCDPEM2",138,0)
 W !
"RTN","RCDPEM2",139,0)
 S DIR("A")="ARE YOU SURE THIS IS THE EFT YOU WANT TO MARK AS MATCHED?: ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",140,0)
 I $D(DUOUT)!$D(DTOUT) G M2Q
"RTN","RCDPEM2",141,0)
 I Y'=1 G M2
"RTN","RCDPEM2",142,0)
 S DIE="^RCY(344.31,",DR=".08////2",DA=RCEFT D ^DIE
"RTN","RCDPEM2",143,0)
 S DIR(0)="EA",DIR("A")="EFT #"_RCEFT_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCHED TO PAPER EOB" D ^DIR K DIR
"RTN","RCDPEM2",144,0)
M2Q Q
"RTN","RCDPEM2",145,0)
 ;
"RTN","RCDPEM2",146,0)
MANTR ; Mark an EFT detail record as 'TR' posted manually
"RTN","RCDPEM2",147,0)
 N DA,DR,DIC,DIE,DIR,X,Y,RCEFT,DUOUT,DTOUT,RCZ0,RCTR,RCHOW
"RTN","RCDPEM2",148,0)
 ; EFT detail cannot be associated with a receipt or TR document
"RTN","RCDPEM2",149,0)
 ;
"RTN","RCDPEM2",150,0)
 W !,"*****",!," YOU SHOULD ONLY USE THIS OPTION IF YOU HAVE AN EFT DETAIL RECORD ON YOUR",!," UNAPPLIED DEPOSIT REPORT WHOSE DETAIL WAS ENTERED ON LINE VIA A TR DOCUMENT",!,"*****",!
"RTN","RCDPEM2",151,0)
 S DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,16)="""",$P(^(0),U,11)",DIC("A")="SELECT THE EFT DETAIL WHOSE 'TR' DOC WAS MANUALLY ENTERED ON LINE: ",DIC="^RCY(344.31,"
"RTN","RCDPEM2",152,0)
 W ! D ^DIC K DIC
"RTN","RCDPEM2",153,0)
 I Y'>0 G MANTRQ
"RTN","RCDPEM2",154,0)
 S RCEFT=+Y,RCZ0=$G(^RCY(344.31,RCEFT,0))
"RTN","RCDPEM2",155,0)
 S DIR(0)="FA^2:30^K:X'?1""TR"".E X",DIR("A")="ENTER THE TR DOC # THAT WAS ENTERED ON-LINE FOR THE EFT DETAIL: "
"RTN","RCDPEM2",156,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",157,0)
 I $D(DTOUT)!$D(DUOUT) G MANTRQ
"RTN","RCDPEM2",158,0)
 S RCTR=Y,DR=""
"RTN","RCDPEM2",159,0)
 ;
"RTN","RCDPEM2",160,0)
 I '$P(RCZ0,U,8) D  G:RCQUIT MANTRQ  ;Unmatched
"RTN","RCDPEM2",161,0)
 . S DIR(0)="SA^E:ELECTRONIC ERA;P:PAPER EOB",DIR("A")="WAS THE EFT DETAIL RECEIVED BY (E)RA or (P)APER EOB?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",162,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1 Q
"RTN","RCDPEM2",163,0)
 . S RCHOW=Y,DR=""
"RTN","RCDPEM2",164,0)
 . I RCHOW="E" D
"RTN","RCDPEM2",165,0)
 .. S DR=";.09R;.08////1"
"RTN","RCDPEM2",166,0)
 . I RCHOW="P" D
"RTN","RCDPEM2",167,0)
 .. S DR=";.08////2"
"RTN","RCDPEM2",168,0)
 ;
"RTN","RCDPEM2",169,0)
 S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="THIS WILL MARK EFT DETAIL #: "_RCEFT_" AS MANUALLY POSTED",DIR("A",2)="  USING TR DOC: "_RCTR
"RTN","RCDPEM2",170,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE?: " W ! D ^DIR K DIR
"RTN","RCDPEM2",171,0)
 I Y'=1 D  G MANTRQ
"RTN","RCDPEM2",172,0)
 . S DIR(0)="EA",DIR("A")="EFT NOT UPDATED - Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEM2",173,0)
 S DIE="^RCY(344.31,",DA=RCEFT,DR=".16R"_DR D ^DIE
"RTN","RCDPEM2",174,0)
 I $D(Y) D
"RTN","RCDPEM2",175,0)
 . S DIE="^RCY(344.31,",DA=RCEFT,DR=".16///@;.08///"_$S($P(RCZ0,U,8)'="":$P(RCZ0,U,8),1:"@") D ^DIE
"RTN","RCDPEM2",176,0)
 . S DIR("A")="EFT NOT UPDATED - Press ENTER to continue: "
"RTN","RCDPEM2",177,0)
 E  D
"RTN","RCDPEM2",178,0)
 . S DIR("A")="STATUS UPDATED FOR EFT DETAIL #: "_RCEFT_" - Press ENTER to continue: "
"RTN","RCDPEM2",179,0)
 S DIR(0)="EA"
"RTN","RCDPEM2",180,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",181,0)
 ;
"RTN","RCDPEM2",182,0)
MANTRQ Q
"RTN","RCDPEM2",183,0)
 ;
"RTN","RCDPEM2",184,0)
CHK() ; Function returns the ien of CHECK/MO payment type
"RTN","RCDPEM2",185,0)
 Q +$O(^RC(341.1,"AC",4,0))
"RTN","RCDPEM2",186,0)
 ;
"RTN","RCDPEM2",187,0)
 ;; Begin PRCA*4.5*276 - PJH
"RTN","RCDPEM2",188,0)
POSTED ;
"RTN","RCDPEM2",189,0)
 N DIR,X,Y
"RTN","RCDPEM2",190,0)
 S DIR("A")="Select type of receipt to ERA link"
"RTN","RCDPEM2",191,0)
 S DIR("B")="M"
"RTN","RCDPEM2",192,0)
 S DIR(0)="S^M:Manually select receipt to post;"
"RTN","RCDPEM2",193,0)
 S DIR(0)=DIR(0)_"A:Automatic search for receipt to post"
"RTN","RCDPEM2",194,0)
 D ^DIR K DIR
"RTN","RCDPEM2",195,0)
 I Y="M" D MANUAL Q
"RTN","RCDPEM2",196,0)
 I Y="A" D AUTO
"RTN","RCDPEM2",197,0)
 Q
"RTN","RCDPEM2",198,0)
 ;
"RTN","RCDPEM2",199,0)
MANUAL ; Mark an ERA as posted when the data was previously posted using
"RTN","RCDPEM2",200,0)
 ; paper EOB information
"RTN","RCDPEM2",201,0)
 N DIC,DIE,DIR,DA,DR,ERA,RCPT,X,Y,%
"RTN","RCDPEM2",202,0)
 ; Must be unmatched or matched to paper check, must be accepted by FMS, must not be posted yet
"RTN","RCDPEM2",203,0)
 W !!,"THIS OPTION IS USED WHEN YOU HAVE POSTED AN ERA PAID WITH A PAPER CHECK",!,"BY USING THE PAPER EOB AND YOU DID NOT REFERENCE THE ERA IN THE RECEIPT",!!
"RTN","RCDPEM2",204,0)
MAN1 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0",DIC="^RCY(344.4,",DIC(0)="AEMQ"
"RTN","RCDPEM2",205,0)
 D ^DIC K DIC
"RTN","RCDPEM2",206,0)
 ;
"RTN","RCDPEM2",207,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM2",208,0)
 ;
"RTN","RCDPEM2",209,0)
 ;Check if ERA is already linked to a receipt
"RTN","RCDPEM2",210,0)
 I $$RCHECK(+Y) G MAN1
"RTN","RCDPEM2",211,0)
 S ERA=+Y
"RTN","RCDPEM2",212,0)
 ;
"RTN","RCDPEM2",213,0)
 S DIC="^RCY(344,",DIC(0)="AEMQ",DIC("A")="RECEIPT: ",DIC("S")="I $$FMS^RCDPEM2(Y,0)"
"RTN","RCDPEM2",214,0)
 D ^DIC K DIC
"RTN","RCDPEM2",215,0)
 I Y'>0 G MANUALQ
"RTN","RCDPEM2",216,0)
 S RCPT=+Y
"RTN","RCDPEM2",217,0)
 ;
"RTN","RCDPEM2",218,0)
 D NOW^%DTC
"RTN","RCDPEM2",219,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPEM2",220,0)
 S DIE="^RCY(344.4,",DR=".08////"_RCPT_";.09////2;.14////2;20.03////1",DA=ERA
"RTN","RCDPEM2",221,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPEM2",222,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPEM2",223,0)
 D ^DIE
"RTN","RCDPEM2",224,0)
 I '$D(Y) D
"RTN","RCDPEM2",225,0)
 . S DIR(0)="EA",DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB",DIR("A")="Press ENTER to continue: " D ^DIR K DIR
"RTN","RCDPEM2",226,0)
 ;
"RTN","RCDPEM2",227,0)
MANUALQ Q
"RTN","RCDPEM2",228,0)
 ;
"RTN","RCDPEM2",229,0)
 ;VISN 15 software - created by Karen Flores
"RTN","RCDPEM2",230,0)
 ;
"RTN","RCDPEM2",231,0)
AUTO ;Select ERA's for linking to receipt
"RTN","RCDPEM2",232,0)
 N EXIT
"RTN","RCDPEM2",233,0)
 S EXIT=0 F  D LNKERA Q:EXIT
"RTN","RCDPEM2",234,0)
 Q
"RTN","RCDPEM2",235,0)
 ;
"RTN","RCDPEM2",236,0)
RCHECK(RCSCR) ;Check if already linked to a receipt
"RTN","RCDPEM2",237,0)
 N REC,RNUM,RNAM,AMT
"RTN","RCDPEM2",238,0)
 S REC=$G(^RCY(344.4,RCSCR,0)),RNUM=$P(REC,U,8)
"RTN","RCDPEM2",239,0)
 ;Ignore check if zero amount ERA
"RTN","RCDPEM2",240,0)
 Q:'$P(REC,U,5) 0
"RTN","RCDPEM2",241,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM2",242,0)
 Q:'RNUM 0
"RTN","RCDPEM2",243,0)
 S RNAM=$P($G(^RCY(344,RNUM,0)),U)
"RTN","RCDPEM2",244,0)
 W !!,"ERA ",RCSCR," is already linked to receipt ",RNAM,!
"RTN","RCDPEM2",245,0)
 Q 1
"RTN","RCDPEM2",246,0)
 ;
"RTN","RCDPEM2",247,0)
LNKERA ;Select ERA
"RTN","RCDPEM2",248,0)
 N ABORT,DIC,DUOUT,DTOUT,REC,RCSCR,X,Y
"RTN","RCDPEM2",249,0)
 ;Must be unposted and either unmatched or matched to paper check
"RTN","RCDPEM2",250,0)
 S DIC("S")="I ""02""[+$P(^(0),U,9),$P(^(0),U,14)=0"
"RTN","RCDPEM2",251,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" W ! D ^DIC K DIC
"RTN","RCDPEM2",252,0)
 S RCSCR=+Y I RCSCR'>0 S EXIT=1 Q
"RTN","RCDPEM2",253,0)
 ;Check if already linked to a different receipt
"RTN","RCDPEM2",254,0)
 Q:$$RCHECK(RCSCR)
"RTN","RCDPEM2",255,0)
 ;
"RTN","RCDPEM2",256,0)
 ;Finds receipt automatically from AR TRANSACTION file #433 
"RTN","RCDPEM2",257,0)
 N AMT,ART,ARTND1,ATTY,BILL,EOB,EOBND,FOUND,RCND,RCSCR1,RECEPT,TAMT
"RTN","RCDPEM2",258,0)
 N TRACE
"RTN","RCDPEM2",259,0)
 ;Trace# from ERA
"RTN","RCDPEM2",260,0)
 S TRACE=$P($G(^RCY(344.4,RCSCR,0)),U,2)
"RTN","RCDPEM2",261,0)
 ;Clear workfile
"RTN","RCDPEM2",262,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM2",263,0)
 ;
"RTN","RCDPEM2",264,0)
 S (FOUND,ABORT,RCSCR1)=0
"RTN","RCDPEM2",265,0)
 ;Scan claim lines in ERA for non zero bills
"RTN","RCDPEM2",266,0)
 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:+RCSCR1=0!(FOUND)  D
"RTN","RCDPEM2",267,0)
 .S RCND=$G(^RCY(344.4,RCSCR,1,RCSCR1,0))
"RTN","RCDPEM2",268,0)
 .;Ignore bill if AMOUNT PAID is zero
"RTN","RCDPEM2",269,0)
 .S AMT=$P(RCND,"^",3) Q:+AMT=0
"RTN","RCDPEM2",270,0)
 .;Ignore if EOB has no EOB detail record
"RTN","RCDPEM2",271,0)
 .S EOB=+$P(RCND,"^",2) Q:'EOB
"RTN","RCDPEM2",272,0)
 .;Get EOB detail record
"RTN","RCDPEM2",273,0)
 .S EOBND=$G(^IBM(361.1,EOB,0))
"RTN","RCDPEM2",274,0)
 .;Extract Bill number from EOB detail
"RTN","RCDPEM2",275,0)
 .S BILL=$P(EOBND,"^",1) Q:BILL=""
"RTN","RCDPEM2",276,0)
 .;Ignore duplicate bills on ERA
"RTN","RCDPEM2",277,0)
 .Q:$D(^TMP("RCDPEM2",$J,BILL))
"RTN","RCDPEM2",278,0)
 .S ^TMP("RCDPEM2",$J,BILL)=""
"RTN","RCDPEM2",279,0)
 .;Search AR TRANSACTION file #433 for the bill - newest first
"RTN","RCDPEM2",280,0)
 .S ART=""
"RTN","RCDPEM2",281,0)
 .F  S ART=$O(^PRCA(433,"C",BILL,ART),-1) Q:+ART=0!(FOUND)  D
"RTN","RCDPEM2",282,0)
 ..S ARTND1=$G(^PRCA(433,ART,1))
"RTN","RCDPEM2",283,0)
 ..;Get transaction type
"RTN","RCDPEM2",284,0)
 ..S ATTY=$P(ARTND1,"^",2) Q:'ATTY
"RTN","RCDPEM2",285,0)
 ..;Ignore if not a payment
"RTN","RCDPEM2",286,0)
 ..S ATTY=$P($G(^PRCA(430.3,ATTY,0)),"^",1) Q:ATTY'["PAYMENT"
"RTN","RCDPEM2",287,0)
 ..;Get receipt number
"RTN","RCDPEM2",288,0)
 ..S RECEPT=$P(ARTND1,"^",3) Q:RECEPT=""
"RTN","RCDPEM2",289,0)
 ..;Ignore receipt if status is not 'ACCEPTED BY FMS'
"RTN","RCDPEM2",290,0)
 ..Q:'$$FMS(RECEPT,1)
"RTN","RCDPEM2",291,0)
 ..W !!,"PATIENT: "_$$PNM4^RCDPEWL1(RCSCR,RCSCR1)
"RTN","RCDPEM2",292,0)
 ..W !,"Bill number: ",$P($G(^DGCR(399,BILL,0)),U)
"RTN","RCDPEM2",293,0)
 ..W !,"Check #: ",$$CHQ(RECEPT,BILL)
"RTN","RCDPEM2",294,0)
 ..W !,"Trace #: ",TRACE
"RTN","RCDPEM2",295,0)
 ..W !,"DOS: ",$$FMTE^XLFDT($P($G(^DGCR(399,BILL,0)),U,3))
"RTN","RCDPEM2",296,0)
 ..S TAMT=+$P(ARTND1,"^",5)
"RTN","RCDPEM2",297,0)
 ..W !,"AR Transaction amount: ",TAMT
"RTN","RCDPEM2",298,0)
 ..W !,"RECEIPT#: ",RECEPT
"RTN","RCDPEM2",299,0)
 ..W !,"Date of Receipt: ",$$FMTE^XLFDT($$RCDATE^RCDPRU(RECEPT))
"RTN","RCDPEM2",300,0)
 ..W !,"Total Receipt AMOUNT: ",$J($$AMT^RCDPRU(RECEPT),2,2),!
"RTN","RCDPEM2",301,0)
 .. ; PRCA*4.5*284 Change default response from YES to NO
"RTN","RCDPEM2",302,0)
 ..S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPEM2",303,0)
 ..S DIR("A")="Link to update Remittance entry # "_RCSCR
"RTN","RCDPEM2",304,0)
 ..S DIR("A")=DIR("A")_" with receipt "_RECEPT
"RTN","RCDPEM2",305,0)
 ..D ^DIR K DIR
"RTN","RCDPEM2",306,0)
 ..;Aborted
"RTN","RCDPEM2",307,0)
 ..I $D(DUOUT)!$D(DTOUT) S ABORT=1,FOUND=1 Q
"RTN","RCDPEM2",308,0)
 ..;Attempt to update ERA - finish if successful
"RTN","RCDPEM2",309,0)
 ..I +Y>0 D UPDERA(RCSCR,RECEPT,.FOUND)
"RTN","RCDPEM2",310,0)
 ;Update failed
"RTN","RCDPEM2",311,0)
 I FOUND=0 W !!,"No matching payment transactions found for this ERA"
"RTN","RCDPEM2",312,0)
 ;Clear workfile
"RTN","RCDPEM2",313,0)
 K ^TMP("RCDPEM2",$J)
"RTN","RCDPEM2",314,0)
 Q
"RTN","RCDPEM2",315,0)
 ;
"RTN","RCDPEM2",316,0)
 ; Moved to RCDPRU because of size issues PRCA*4.5*303
"RTN","RCDPEM2",317,0)
UPDERA(DA,RECEPT,FOUND) ;Mark ERA as posted to paper EOB
"RTN","RCDPEM2",318,0)
 D UPDERA^RCDPRU(DA,RECEPT,.FOUND)
"RTN","RCDPEM2",319,0)
 Q FOUND
"RTN","RCDPEM2",320,0)
 ;
"RTN","RCDPEM2",321,0)
 ;Check FMS status
"RTN","RCDPEM2",322,0)
FMS(RECEPT,FLG) ;
"RTN","RCDPEM2",323,0)
 ; FLG = 1 if RECEPT contains receipt number
"RTN","RCDPEM2",324,0)
 ; FLG = 0 if RECEPT contains ien of the receipt
"RTN","RCDPEM2",325,0)
 N FMSDOCNO,RCRECTDA,RES
"RTN","RCDPEM2",326,0)
 S RES=0 I $G(RECEPT)="" G FMSX
"RTN","RCDPEM2",327,0)
 ;Get receipt IEN
"RTN","RCDPEM2",328,0)
 I 'FLG S RCRECTDA=RECEPT
"RTN","RCDPEM2",329,0)
 I FLG S RCRECTDA=$O(^RCY(344,"B",RECEPT,0))
"RTN","RCDPEM2",330,0)
 I 'RCRECTDA G FMSX
"RTN","RCDPEM2",331,0)
 ;Get FMS document number
"RTN","RCDPEM2",332,0)
 S FMSDOCNO=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPEM2",333,0)
 ;Ignore if not accepted
"RTN","RCDPEM2",334,0)
 I $P(FMSDOCNO,U,2)'="ACCEPTED BY FMS" G FMSX
"RTN","RCDPEM2",335,0)
 ;Otherwise can be linked
"RTN","RCDPEM2",336,0)
 S RES=1
"RTN","RCDPEM2",337,0)
FMSX ;
"RTN","RCDPEM2",338,0)
 Q RES
"RTN","RCDPEM2",339,0)
 ;
"RTN","RCDPEM2",340,0)
CHQ(RECEPT,BILL) ;Get check number for this bill
"RTN","RCDPEM2",341,0)
 N RCRECTDA,RCTRAN,RCCHK,PATBILL
"RTN","RCDPEM2",342,0)
 ;Get receipt IEN
"RTN","RCDPEM2",343,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA ""
"RTN","RCDPEM2",344,0)
 ;Scan Receipt looking for this bill IEN
"RTN","RCDPEM2",345,0)
 S RCTRAN=0,RCCHK=""
"RTN","RCDPEM2",346,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D  Q:RCCHK]""
"RTN","RCDPEM2",347,0)
 .;Check for match on bill IEN
"RTN","RCDPEM2",348,0)
 .S PATBILL=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,3)
"RTN","RCDPEM2",349,0)
 .;Ignore Patient pointers or null field
"RTN","RCDPEM2",350,0)
 .Q:$P(PATBILL,";",2)'="PRCA(430,"
"RTN","RCDPEM2",351,0)
 .;Compare bill IEN399 to IEN430
"RTN","RCDPEM2",352,0)
 .Q:$P(PATBILL,";")'=BILL
"RTN","RCDPEM2",353,0)
 .;Get check number for this line
"RTN","RCDPEM2",354,0)
 .S RCCHK=$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,7)
"RTN","RCDPEM2",355,0)
 Q RCCHK
"RTN","RCDPEM2",356,0)
 ;
"RTN","RCDPEM2",357,0)
 ;; End PRCA*4.5*276 - PJH
"RTN","RCDPEM2",358,0)
 ;
"RTN","RCDPEM2",359,0)
MATCH3 ; Manually 'match' a 0-balance ERA that has no check or EFT
"RTN","RCDPEM2",360,0)
 N DUOUT,DTOUT,DA,DR,DIE,DIC,DIR,X,Y,RCERA,RCRCPT
"RTN","RCDPEM2",361,0)
 W !,"THIS OPTION WILL ALLOW YOU TO MANUALLY MARK A 0-BALANCE ERA WITH NO",!,"CHECK OR EFT AS 'MATCH-0 PAYMENT' TO REMOVE IT FROM THE ERA AGING REPORT"
"RTN","RCDPEM2",362,0)
M3 S DIR("A")="SELECT THE UNMATCHED 0-BALANCE ERA TO MARK AS MATCHED: "
"RTN","RCDPEM2",363,0)
 S DIR(0)="PAO^RCY(344.4,:AEMQ",DIR("S")="I '$P(^(0),U,9),'$P(^(0),U,5)"
"RTN","RCDPEM2",364,0)
 W ! D ^DIR K DIR
"RTN","RCDPEM2",365,0)
 I $D(DUOUT)!$D(DTOUT)!(Y'>0) G M3Q
"RTN","RCDPEM2",366,0)
 S RCERA=+Y
"RTN","RCDPEM2",367,0)
 W !
"RTN","RCDPEM2",368,0)
 S DIC="^RCY(344.4,",DR="0",DA=RCERA D EN^DIQ
"RTN","RCDPEM2",369,0)
 W !
"RTN","RCDPEM2",370,0)
 S DIR("A")="ARE YOU SURE THIS IS THE ERA YOU WANT TO MARK AS MATCH-0 PAYMENT? (Y/N) ",DIR(0)="YA",DIR("B")="YES" D ^DIR K DIR
"RTN","RCDPEM2",371,0)
 I $D(DUOUT)!$D(DTOUT) G M3Q
"RTN","RCDPEM2",372,0)
 I Y'=1 G M3
"RTN","RCDPEM2",373,0)
 S DIE="^RCY(344.4,",DR=".09////3",DA=RCERA D ^DIE
"RTN","RCDPEM2",374,0)
 S DIR(0)="EA",DIR("A")="ERA #"_RCERA_" WAS "_$S('$D(Y):"SUCCESSFULLY",1:"NOT")_" MARKED AS MATCH-0 PAYMENT" D ^DIR K DIR
"RTN","RCDPEM2",375,0)
M3Q Q
"RTN","RCDPEM2",376,0)
 ;
"RTN","RCDPEM2",377,0)
UNMATCH ; Used to 'unmatch' an ERA matched in error
"RTN","RCDPEM2",378,0)
 N X,Y,DIR,DIC,DIE,DIK,DA,DR,RCWL,RCEFT,RCQUIT,AUTOPOST
"RTN","RCDPEM2",379,0)
 S DIC(0)="AEMQ",DIC="^RCY(344.4,",DIC("S")="I '$P(^(0),U,8),$S('$P(^(0),U,14):1,1:$P(^(0),U,9)=3),$P(^(0),U,9)" D ^DIC K DIC
"RTN","RCDPEM2",380,0)
 Q:Y'>0
"RTN","RCDPEM2",381,0)
 S RCWL=+Y,RCQUIT=0
"RTN","RCDPEM2",382,0)
 I $D(^RCY(344.49,RCWL,0)) D  Q:RCQUIT
"RTN","RCDPEM2",383,0)
 . S DIR(0)="YA",DIR("A",1)="THIS ERA ALREADY HAS A WORKLIST ENTRY AND MUST BE DELETED BEFORE IT CAN BE UNMATCHED",DIR("A")="DO YOU WANT TO DELETE THE WORKLIST ENTRY FOR THIS ERA NOW? "
"RTN","RCDPEM2",384,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEM2",385,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",386,0)
 . S DIK="^RCY(344.49,",DA=RCWL D ^DIK
"RTN","RCDPEM2",387,0)
 S AUTOPOST=""
"RTN","RCDPEM2",388,0)
 I $O(^RCY(344.31,"AERA",RCWL,0)) S RCEFT=+$O(^(0)) D  Q:RCQUIT
"RTN","RCDPEM2",389,0)
 . S AUTOPOST=$$GET1^DIQ(344.4,RCWL_",",4.02,"I")
"RTN","RCDPEM2",390,0)
 . W !!,"THIS ERA IS MATCHED TO EFT #"_RCEFT
"RTN","RCDPEM2",391,0)
 . I AUTOPOST=0 W !,"* WARNING: This ERA will be Un-Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEM2",392,0)
 . S DIR("A")="ARE YOU SURE YOU WANT TO UNMATCH THEM? ",DIR(0)="YA"
"RTN","RCDPEM2",393,0)
 . D ^DIR K DIR
"RTN","RCDPEM2",394,0)
 . I Y'=1 S RCQUIT=1 Q
"RTN","RCDPEM2",395,0)
 . S DIE="^RCY(344.31,",DR=".1///@;.08////0",DA=RCEFT D ^DIE
"RTN","RCDPEM2",396,0)
 . W !,"EFT #"_RCEFT_" IS NOW UNMATCHED",!
"RTN","RCDPEM2",397,0)
 S DIE="^RCY(344.4,",DR=".09////0;.13///@;.14////0",DA=RCWL D ^DIE
"RTN","RCDPEM2",398,0)
 I AUTOPOST=0 D SETSTA^RCDPEAP(RCWL,"@","Unmatch: Removed as Auto-Post Candidate")
"RTN","RCDPEM2",399,0)
 S DIR("A")="ERA HAS BEEN SUCCESSFULLY UNMATCHED - Press ENTER to continue: "
"RTN","RCDPEM2",400,0)
 S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEM2",401,0)
 Q
"RTN","RCDPEM2",402,0)
 ;
"RTN","RCDPEM2",403,0)
 ;
"RTN","RCDPEM2",404,0)
 ; PRCA*4.5*284 - Changed option name from 'Mark ERA Return to Payer' to 'Remove ERA from Active Worklist'
"RTN","RCDPEM2",405,0)
RETN ; Entrypoint for Remove ERA from Active Worklist
"RTN","RCDPEM2",406,0)
 N DIR,X,Y,DTOUT,DUOUT,DIC,RCY,DIE,DA,DR,MSG,%
"RTN","RCDPEM2",407,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPE MARK ERA",DUZ)
"RTN","RCDPEM2",408,0)
 I 'MSG(0) W !!,"SORRY, YOU ARE NOT AUTHORIZED TO USE THIS OPTION",!,"This option is locked with RCDPE MARK ERA key.",! S DIR(0)="E" D ^DIR K DIR Q
"RTN","RCDPEM2",409,0)
 ; PRCA*4.5*284 - Changed description
"RTN","RCDPEM2",410,0)
 W !!,"Use this option to remove an ERA from the EEOB Worklist that should not have"
"RTN","RCDPEM2",411,0)
 W !,"been sent to your site by the payer; or the ERA cannot be removed off the"
"RTN","RCDPEM2",412,0)
 W !,"Worklist using the 'Update ERA Posted Using Paper EOB' option."
"RTN","RCDPEM2",413,0)
 W !!,"This option is only to be used if the paper check has been sent back to the"
"RTN","RCDPEM2",414,0)
 W !,"payer without being deposited.  Once removed, the ERA can no longer be"
"RTN","RCDPEM2",415,0)
 W !,"accessed for processing, but can be viewed under the posted Worklist. For"
"RTN","RCDPEM2",416,0)
 W !,"auditing purposes, this option requires the user to enter a reason for"
"RTN","RCDPEM2",417,0)
 W !,"removing the ERA.",!
"RTN","RCDPEM2",418,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ",DIC("S")="I '$P(^(0),U,9),'$P(^(0),U,14)" D ^DIC K DIC
"RTN","RCDPEM2",419,0)
 Q:Y'>0
"RTN","RCDPEM2",420,0)
 S RCY=+Y
"RTN","RCDPEM2",421,0)
 S DIR(0)="YA",DIR("A",1)="THIS WILL REMOVE THE ERA # "_+Y_" FROM THE ACTIVE WORKLIST",DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? " W ! D ^DIR K DIR
"RTN","RCDPEM2",422,0)
 W !
"RTN","RCDPEM2",423,0)
 I $D(DUOUT)!$D(DTOUT)!(Y=0) D NOCHNG Q
"RTN","RCDPEM2",424,0)
 S DIE="^RCY(344.4,",DA=RCY,DR=".18" D ^DIE
"RTN","RCDPEM2",425,0)
 I $D(Y) D NOCHNG Q
"RTN","RCDPEM2",426,0)
 ; PRCA*4.5*284 Set EFT MATCH STATUS (#344.4,.09) as '4' FOR REMOVED rather than '2' FOR MATCHED TO PAPER CHECK
"RTN","RCDPEM2",427,0)
 D NOW^%DTC S DR=".14////4;.09////4;.16////"_DUZ_";.17////"_% D ^DIE
"RTN","RCDPEM2",428,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEM2",429,0)
 W ! D ^DIR
"RTN","RCDPEM2",430,0)
 Q
"RTN","RCDPEM2",431,0)
 ;
"RTN","RCDPEM2",432,0)
NOCHNG ;
"RTN","RCDPEM2",433,0)
 N DIR,X,Y,DTOUT,DUOUT
"RTN","RCDPEM2",434,0)
 D EN^DDIOL("NO CHANGES HAVE BEEN MADE.","","!")
"RTN","RCDPEM2",435,0)
 S DIR(0)="EA",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEM2",436,0)
 W !! D ^DIR
"RTN","RCDPEM2",437,0)
 Q
"RTN","RCDPEM4")
0^23^B228006558
"RTN","RCDPEM4",1,0)
RCDPEM4 ;OIFO-BAYPINES/PJH - EPAYMENTS AUDIT REPORTS ;Nov 17, 2014@17:00:41
"RTN","RCDPEM4",2,0)
 ;;4.5;Accounts Receivable;**276,284,298,304,321**;Mar 20, 1995;Build 48
"RTN","RCDPEM4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM4",4,0)
 ;
"RTN","RCDPEM4",5,0)
EOB ; EEOB Move/Copy/Rmove Audit Report [RCDPE EEOB MOVE/COPY/RMOVE RPT]
"RTN","RCDPEM4",6,0)
 N RCRTYP S RCRTYP="EOB"  ; record type
"RTN","RCDPEM4",7,0)
 D ASKUSR
"RTN","RCDPEM4",8,0)
 Q
"RTN","RCDPEM4",9,0)
 ;
"RTN","RCDPEM4",10,0)
POST ; ERAs Posted with Paper EOB Audit Report [RCDPE ERA W/PAPER EOB REPORT]
"RTN","RCDPEM4",11,0)
 N RCRTYP S RCRTYP="ERA"  ; record type
"RTN","RCDPEM4",12,0)
 D ASKUSR
"RTN","RCDPEM4",13,0)
 Q
"RTN","RCDPEM4",14,0)
 ;
"RTN","RCDPEM4",15,0)
ASKUSR ;collect filter and device options
"RTN","RCDPEM4",16,0)
 Q:$G(RCRTYP)=""  ; must have record type
"RTN","RCDPEM4",17,0)
 N %ZIS,POP,RCACT,RCDISPTY,RCDIV,RCDTRNG,RCHDR,RCLSTMGR,RCLNCNT,RCPGNUM,RCPROG,RCSTA,RCSTOP,RCTMPND,RCXCLUDE,VAUTD,X,Y
"RTN","RCDPEM4",18,0)
 ; RCACT - selected actions for EOB
"RTN","RCDPEM4",19,0)
 ; RCDISPTY - display type
"RTN","RCDPEM4",20,0)
 ; RCDIV - selected divs.
"RTN","RCDPEM4",21,0)
 ; RCDTRNG - date range for report
"RTN","RCDPEM4",22,0)
 ; RCHDR - header array
"RTN","RCDPEM4",23,0)
 ; RCLSTMGR - ListMan output flag
"RTN","RCDPEM4",24,0)
 ; RCPGNUM - report page count
"RTN","RCDPEM4",25,0)
 ; RCPROG - ^TMP storage node for entries
"RTN","RCDPEM4",26,0)
 ; RCSTA - station
"RTN","RCDPEM4",27,0)
 ; RCSTOP - flag to stop report
"RTN","RCDPEM4",28,0)
 ; RCTMPND - ListMan storage node
"RTN","RCDPEM4",29,0)
 ; RCXCLUDE("CHAMPVA") - boolean, exclude CHAMPVA
"RTN","RCDPEM4",30,0)
 ; RCXCLUDE("TRICARE") - boolean, exclude TriCare
"RTN","RCDPEM4",31,0)
 ;
"RTN","RCDPEM4",32,0)
 S RCPROG=$T(+0),RCLSTMGR="",RCACT="",(RCLNCNT,RCSTOP)=0,RCTMPND=""
"RTN","RCDPEM4",33,0)
 S (RCXCLUDE("CHAMPVA"),RCXCLUDE("TRICARE"))=0  ; default to false
"RTN","RCDPEM4",34,0)
 ;Select Date Range for Report
"RTN","RCDPEM4",35,0)
 S RCDTRNG=$$DTRNG() G:'RCDTRNG EXIT
"RTN","RCDPEM4",36,0)
 ;Select Filter for Action Type (Move,Copy,Remove or All)
"RTN","RCDPEM4",37,0)
 I RCRTYP="EOB" S RCACT=$$ACTION G:RCACT<0 EXIT
"RTN","RCDPEM4",38,0)
 ;Select Filter/Sort by Division
"RTN","RCDPEM4",39,0)
 D STADIV G:'RCDIV EXIT
"RTN","RCDPEM4",40,0)
 ; Begin PRCA*4.5*321
"RTN","RCDPEM4",41,0)
 ; CHAMPVA exclusion filter
"RTN","RCDPEM4",42,0)
 S RCXCLUDE("CHAMPVA")=$$EXCHMPVA^RCDPEARL  ; user is asked whether to exclude
"RTN","RCDPEM4",43,0)
 G:RCXCLUDE("CHAMPVA")<0 EXIT
"RTN","RCDPEM4",44,0)
 ; TRICARE exclusion filter
"RTN","RCDPEM4",45,0)
 S RCXCLUDE("TRICARE")=$$EXTRICAR^RCDPEARL  ; user is asked whether to exclude
"RTN","RCDPEM4",46,0)
 G:RCXCLUDE("TRICARE")<0 EXIT
"RTN","RCDPEM4",47,0)
 ; End PRCA*4.5*321
"RTN","RCDPEM4",48,0)
 ; Select Display Type , exit if indicated
"RTN","RCDPEM4",49,0)
 S RCDISPTY=$$DISPTY() G:RCDISPTY<0 EXIT
"RTN","RCDPEM4",50,0)
 ;Display capture information for Excel, set RCLSTMGR to prevent question
"RTN","RCDPEM4",51,0)
 I RCDISPTY D INFO^RCDPEM6 S RCLSTMGR="^"
"RTN","RCDPEM4",52,0)
 I RCLSTMGR="" S RCLSTMGR=$$ASKLM^RCDPEARL G:RCLSTMGR<0 EXIT
"RTN","RCDPEM4",53,0)
 I RCLSTMGR D  G EXIT
"RTN","RCDPEM4",54,0)
 .X "S RCTMPND=$T(+0)_U_$$HDR"_RCRTYP K ^TMP($J,RCTMPND)  ; ^TMP storage node, clean any residue
"RTN","RCDPEM4",55,0)
 .D RPRTCMPL
"RTN","RCDPEM4",56,0)
 .N H,L,HDR S L=0
"RTN","RCDPEM4",57,0)
 .X "S HDR(""TITLE"")=$$HDR"_RCRTYP
"RTN","RCDPEM4",58,0)
 .F H=1:1:7 I $D(RCHDR(H)) S L=H,HDR(H)=RCHDR(H)  ; take first 7 lines of report header
"RTN","RCDPEM4",59,0)
 .I $O(RCHDR(L)) D  ; any remaining header lines at top of report
"RTN","RCDPEM4",60,0)
 ..N N S N=0,H=L F  S H=$O(RCHDR(H)) Q:'H  S N=N+.001,^TMP($J,RCTMPND,N)=RCHDR(H)
"RTN","RCDPEM4",61,0)
 .; invoke ListMan
"RTN","RCDPEM4",62,0)
 .D LMRPT^RCDPEARL(.HDR,$NA(^TMP($J,RCTMPND))) ; generate ListMan display
"RTN","RCDPEM4",63,0)
 ;
"RTN","RCDPEM4",64,0)
 ;Select output device
"RTN","RCDPEM4",65,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPEM4",66,0)
 ;Option to queue
"RTN","RCDPEM4",67,0)
 I 'RCDISPTY,$D(IO("Q")) D  Q
"RTN","RCDPEM4",68,0)
 .N ZTSK,ZTDESC,ZTSAVE,ZTQUEUED,ZTRTN
"RTN","RCDPEM4",69,0)
 .S ZTRTN="RPRTCMPL^RCDPEM4"
"RTN","RCDPEM4",70,0)
 .S ZTDESC="EDI LOCKBOX PAPER EOB AUDIT REPORT"
"RTN","RCDPEM4",71,0)
 .S ZTSAVE("RC*")="",ZTSAVE("VAUTD")=""
"RTN","RCDPEM4",72,0)
 .D ^%ZTLOAD
"RTN","RCDPEM4",73,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" was queued.",1:"Unable to queue this task."),!
"RTN","RCDPEM4",74,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEM4",75,0)
 ;
"RTN","RCDPEM4",76,0)
 ;Compile and Print Report
"RTN","RCDPEM4",77,0)
 D RPRTCMPL
"RTN","RCDPEM4",78,0)
 Q
"RTN","RCDPEM4",79,0)
 ;
"RTN","RCDPEM4",80,0)
RPRTCMPL ;Compile and print report
"RTN","RCDPEM4",81,0)
 K ^TMP(RCPROG,$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEM4",82,0)
 ;Scan ERA file for entries in date range
"RTN","RCDPEM4",83,0)
 I RCRTYP="ERA" D CMPLERA
"RTN","RCDPEM4",84,0)
 ;Scan EOB file for entries in date range
"RTN","RCDPEM4",85,0)
 I RCRTYP="EOB" D CMPLEOB
"RTN","RCDPEM4",86,0)
 ;Display Report
"RTN","RCDPEM4",87,0)
 D DISP
"RTN","RCDPEM4",88,0)
 ;
"RTN","RCDPEM4",89,0)
EXIT ;
"RTN","RCDPEM4",90,0)
 ;Clear old data
"RTN","RCDPEM4",91,0)
 K ^TMP(RCPROG,$J),^TMP($J,"RC TOTAL")
"RTN","RCDPEM4",92,0)
 Q
"RTN","RCDPEM4",93,0)
 ;
"RTN","RCDPEM4",94,0)
CMPLERA ;Generate the ERA posted with paper EOB report ^TMP array
"RTN","RCDPEM4",95,0)
 ; ^RCY(344.4,0) = ELECTRONIC REMITTANCE ADVICE^344.4I^
"RTN","RCDPEM4",96,0)
 N START,END,ERAIEN,STA,STNAM,STNUM
"RTN","RCDPEM4",97,0)
 ;Date Range
"RTN","RCDPEM4",98,0)
 S START=0,END="9999999",SUB=0
"RTN","RCDPEM4",99,0)
 S:$P(RCDTRNG,U) START=$P(RCDTRNG,U,2),END=$P(RCDTRNG,U,3)
"RTN","RCDPEM4",100,0)
 ;Selected division or All
"RTN","RCDPEM4",101,0)
 ;Scan AFL index for ERA within date range
"RTN","RCDPEM4",102,0)
 F  S START=$O(^RCY(344.4,"AFL",START)) Q:'START  Q:START>END  D
"RTN","RCDPEM4",103,0)
 .S ERAIEN=""
"RTN","RCDPEM4",104,0)
 .F  S ERAIEN=$O(^RCY(344.4,"AFL",START,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM4",105,0)
 ..;Ignore if not posted with paper EOB
"RTN","RCDPEM4",106,0)
 ..Q:'$D(^RCY(344.4,ERAIEN,7))
"RTN","RCDPEM4",107,0)
 ..;Check division
"RTN","RCDPEM4",108,0)
 ..D ERASTA(ERAIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEM4",109,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEM4",110,0)
 ..; CHAMPVA check
"RTN","RCDPEM4",111,0)
 ..I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",112,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEM4",113,0)
 ..;
"RTN","RCDPEM4",114,0)
 ..; TRICARE check
"RTN","RCDPEM4",115,0)
 ..I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("344.4;"_ERAIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",116,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM4",117,0)
 ..;
"RTN","RCDPEM4",118,0)
 ..D SVERA^RCDPEM41(ERAIEN,STA,STNUM,STNAM)
"RTN","RCDPEM4",119,0)
 ;
"RTN","RCDPEM4",120,0)
 Q
"RTN","RCDPEM4",121,0)
 ;
"RTN","RCDPEM4",122,0)
CMPLEOB ;Generate the EOB Moved/Copy/Remove report ^TMP array
"RTN","RCDPEM4",123,0)
 N DTSUB,START,END,EOBIEN,IEN101,STA,STNAM,STNUM
"RTN","RCDPEM4",124,0)
 ;Date Range
"RTN","RCDPEM4",125,0)
 S START=$P(RCDTRNG,U,2),END=$P(RCDTRNG,U,3)
"RTN","RCDPEM4",126,0)
 ;Selected division or All
"RTN","RCDPEM4",127,0)
 ;Scan AEOB index for EOB within date range
"RTN","RCDPEM4",128,0)
 F  S START=$O(^IBM(361.1,"AEOB",START)) Q:'START  Q:(START\1)>END  D
"RTN","RCDPEM4",129,0)
 .S EOBIEN=""
"RTN","RCDPEM4",130,0)
 .F  S EOBIEN=$O(^IBM(361.1,"AEOB",START,EOBIEN)) Q:'EOBIEN  D
"RTN","RCDPEM4",131,0)
 ..; Ignore if not MOVED/COPIED
"RTN","RCDPEM4",132,0)
 ..S IEN101=$O(^IBM(361.1,"AEOB",START,EOBIEN,"")) Q:'IEN101
"RTN","RCDPEM4",133,0)
 ..; Check division
"RTN","RCDPEM4",134,0)
 ..D EOBSTA(EOBIEN,.STA,.STNUM,.STNAM)
"RTN","RCDPEM4",135,0)
 ..I RCDIV=2,'$D(VAUTD(STA)) Q
"RTN","RCDPEM4",136,0)
 ..; CHAMPVA check
"RTN","RCDPEM4",137,0)
 ..I $G(RCXCLUDE("CHAMPVA")),$$CLMCHMPV^RCDPEARL("361.1;"_EOBIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",138,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","CHAMPVA"))+1,^("CHAMPVA")=N  ; total can be listed
"RTN","RCDPEM4",139,0)
 ..; TRICARE check
"RTN","RCDPEM4",140,0)
 ..I $G(RCXCLUDE("TRICARE")),$$CLMTRICR^RCDPEARL("361.1;"_EOBIEN) D  Q  ; count and quit if true
"RTN","RCDPEM4",141,0)
 ...N N S N=$G(^TMP($J,"RC TOTAL","TRICARE"))+1,^("TRICARE")=N  ; total can be listed
"RTN","RCDPEM4",142,0)
 ..;
"RTN","RCDPEM4",143,0)
 ..;
"RTN","RCDPEM4",144,0)
 ..D SVEOB^RCDPEM41(EOBIEN,IEN101,STA,STNUM,STNAM)
"RTN","RCDPEM4",145,0)
 ;
"RTN","RCDPEM4",146,0)
 Q
"RTN","RCDPEM4",147,0)
 ;
"RTN","RCDPEM4",148,0)
DISP ; Format the display for screen/printer or MS Excel
"RTN","RCDPEM4",149,0)
 N DVFLTR,IEN,RCNTRY,SUB,Y
"RTN","RCDPEM4",150,0)
 ;Format Division Filter
"RTN","RCDPEM4",151,0)
 S DVFLTR=$S(RCRTYP="EOB":"ALL STATIONS/DIVISIONS",1:"ALL") I RCDIV=2 S DVFLTR=$$LINE(.VAUTD)
"RTN","RCDPEM4",152,0)
 D:'RCLSTMGR HDRBLD  ; Report header
"RTN","RCDPEM4",153,0)
 D:RCLSTMGR HDRLM  ; Listman header
"RTN","RCDPEM4",154,0)
 ; RCNTRY - entry from ^TMP(RCPROG,$J)
"RTN","RCDPEM4",155,0)
 ;
"RTN","RCDPEM4",156,0)
 U IO
"RTN","RCDPEM4",157,0)
 ;
"RTN","RCDPEM4",158,0)
 ; Display Header for first time
"RTN","RCDPEM4",159,0)
 D:'RCLSTMGR HDRLST^RCDPEARL(.RCSTOP,.RCHDR)
"RTN","RCDPEM4",160,0)
 ;Report by division or 'ALL'
"RTN","RCDPEM4",161,0)
 S SUB=0,RCSTOP=0
"RTN","RCDPEM4",162,0)
 F  S SUB=$O(^TMP(RCPROG,$J,SUB)) Q:SUB=""!RCSTOP  D
"RTN","RCDPEM4",163,0)
 .S IEN=0 F  S IEN=$O(^TMP(RCPROG,$J,SUB,IEN)) Q:'IEN!RCSTOP  S RCNTRY=^(IEN) D
"RTN","RCDPEM4",164,0)
 ..I RCDISPTY W !,RCNTRY Q  ; spreadsheet format
"RTN","RCDPEM4",165,0)
 ..I RCRTYP="ERA" D  ; ERA posted with paper EOB
"RTN","RCDPEM4",166,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM4",167,0)
 ...S Y=$$PAD^RCDPEARL($P(RCNTRY,U,5),11)  ; ERA#
"RTN","RCDPEM4",168,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,6),13) ;RECEIPT#
"RTN","RCDPEM4",169,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,3),18) ;DATE/TIME
"RTN","RCDPEM4",170,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,4),16) ;USER LASTNAME,FIRSTNAME
"RTN","RCDPEM4",171,0)
 ...S Y=Y_$P(RCNTRY,U,7) ;MATCH STATUS
"RTN","RCDPEM4",172,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",173,0)
 ...D SL^RCDPEARL($J("",61)_$P(RCNTRY,U,8),.RCLNCNT,RCTMPND) ;POST STATUS
"RTN","RCDPEM4",174,0)
 ..;
"RTN","RCDPEM4",175,0)
 ..I RCRTYP="EOB" D  ; EOB Moved/Copied
"RTN","RCDPEM4",176,0)
 ...I 'RCLSTMGR,$Y>(IOSL-RCHDR(0)) D HDRLST^RCDPEARL(.RCSTOP,.RCHDR) Q:RCSTOP
"RTN","RCDPEM4",177,0)
 ...S Y=$$PAD^RCDPEARL($P(RCNTRY,U,5),20) ; ORIGINAL BILL
"RTN","RCDPEM4",178,0)
 ...S Y=Y_$P(RCNTRY,U,8) ; TRACE #
"RTN","RCDPEM4",179,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",180,0)
 ...S Y=$$PAD^RCDPEARL($J("",6)_$P(RCNTRY,U,7),15) ;ERA
"RTN","RCDPEM4",181,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,3),20) ;DATE/TIME
"RTN","RCDPEM4",182,0)
 ...S Y=Y_$$PAD^RCDPEARL($P(RCNTRY,U,12),15) ;MOVED/COPIED/REMOVED
"RTN","RCDPEM4",183,0)
 ...S Y=Y_$$PAD^RCDPEARL("$"_$P(RCNTRY,U,9),11) ;PAYMENT AMOUNT
"RTN","RCDPEM4",184,0)
 ...S Y=Y_$P(RCNTRY,U,4) ; USER LASTNAME,FIRSTNAME
"RTN","RCDPEM4",185,0)
 ...D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",186,0)
 ...D:$P(RCNTRY,U,12)'="REMOVED"
"RTN","RCDPEM4",187,0)
 ....S Y=$$PAD^RCDPEARL("New Bill: "_$P(RCNTRY,U,6),25) ;NEW BILL
"RTN","RCDPEM4",188,0)
 ....S Y=Y_"Other Bill Number(s): "_$P(RCNTRY,U,11) ;OTHER BILLS
"RTN","RCDPEM4",189,0)
 ....D SL^RCDPEARL(Y,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",190,0)
 ...;
"RTN","RCDPEM4",191,0)
 ...D WP($P(RCNTRY,U,10))  ; Justification comments
"RTN","RCDPEM4",192,0)
 ...D SL^RCDPEARL("",.RCLNCNT,RCTMPND)  ; skip a line
"RTN","RCDPEM4",193,0)
 .;
"RTN","RCDPEM4",194,0)
 .; end of report
"RTN","RCDPEM4",195,0)
 .I 'RCSTOP D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND),SL^RCDPEARL($$ENDORPRT^RCDPEARL,.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",196,0)
 ;
"RTN","RCDPEM4",197,0)
 D:'$D(^TMP(RCPROG,$J))
"RTN","RCDPEM4",198,0)
 .D SL^RCDPEARL(" ",.RCLNCNT,RCTMPND)  ; skip line
"RTN","RCDPEM4",199,0)
 .D SL^RCDPEARL("     *** NO RECORDS TO PRINT ***",.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",200,0)
 ;
"RTN","RCDPEM4",201,0)
 ;Close device
"RTN","RCDPEM4",202,0)
 I '$D(ZTQUEUED),'RCLSTMGR D ^%ZISC
"RTN","RCDPEM4",203,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","RCDPEM4",204,0)
 Q
"RTN","RCDPEM4",205,0)
 ;
"RTN","RCDPEM4",206,0)
LINE(VAUTD) ;List selected stations
"RTN","RCDPEM4",207,0)
 N LINE,SUB
"RTN","RCDPEM4",208,0)
 S LINE="",SUB=""
"RTN","RCDPEM4",209,0)
 F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEM4",210,0)
 .S LINE=LINE_$G(VAUTD(SUB))_", "
"RTN","RCDPEM4",211,0)
 Q $E(LINE,1,$L(LINE)-2)
"RTN","RCDPEM4",212,0)
 ;
"RTN","RCDPEM4",213,0)
SELDIV(VAUTD,Z) ;Devisions are organized as Z(1)="DIV1,DIV2,..., Z(2)="DIVN,DIVN+1,... etc.
"RTN","RCDPEM4",214,0)
 ; Input:
"RTN","RCDPEM4",215,0)
 ;   VAUTD (required/pass-by-ref) - Division(s) array; result of call to DIVISION^VAUTOMA
"RTN","RCDPEM4",216,0)
 ; Output:
"RTN","RCDPEM4",217,0)
 ;   Z (required/pass-by-ref) - reformatted array of divisions
"RTN","RCDPEM4",218,0)
 ;
"RTN","RCDPEM4",219,0)
 N SUB,CNT
"RTN","RCDPEM4",220,0)
 S CNT=1,Z(CNT)="DIVISIONS: "
"RTN","RCDPEM4",221,0)
 I $D(VAUTD)=1 D  Q
"RTN","RCDPEM4",222,0)
 . S Z(CNT)=Z(CNT)_"ALL"
"RTN","RCDPEM4",223,0)
 .S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEM4",224,0)
 I $D(VAUTD)>1,'VAUTD D
"RTN","RCDPEM4",225,0)
 .S SUB=VAUTD
"RTN","RCDPEM4",226,0)
 .F  S SUB=$O(VAUTD(SUB)) Q:'SUB  D
"RTN","RCDPEM4",227,0)
 ..I Z(CNT)="DIVISIONS: " S Z(CNT)=Z(CNT)_VAUTD(SUB) Q
"RTN","RCDPEM4",228,0)
 ..S Z(CNT)=Z(CNT)_$S(Z(CNT)]"":",",1:"")_VAUTD(SUB)
"RTN","RCDPEM4",229,0)
 ..I $L(Z(CNT))>50 S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT),CNT=CNT+1,Z(CNT)=""
"RTN","RCDPEM4",230,0)
 ;
"RTN","RCDPEM4",231,0)
 I Z(CNT)]"" S Z(CNT)=$J("",80-$L(Z(CNT))\2)_Z(CNT)
"RTN","RCDPEM4",232,0)
 I Z(CNT)="" K Z(CNT)
"RTN","RCDPEM4",233,0)
 Q
"RTN","RCDPEM4",234,0)
 ;
"RTN","RCDPEM4",235,0)
HDRBLD ; create the report header
"RTN","RCDPEM4",236,0)
 ; returns RCHDR, RCPGNUM, RCSTOP
"RTN","RCDPEM4",237,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM4",238,0)
 ;   RCHDR("XECUTE") = M code for page number
"RTN","RCDPEM4",239,0)
 ;   RCHDR("RUNDATE") = date/time report generated, external format
"RTN","RCDPEM4",240,0)
 ;   RCPGNUM - page counter
"RTN","RCDPEM4",241,0)
 ;   RCSTOP - flag to exit
"RTN","RCDPEM4",242,0)
 ; INPUT: 
"RTN","RCDPEM4",243,0)
 ;   RCDISPTY - Display/print/Excel flag
"RTN","RCDPEM4",244,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM4",245,0)
 ;   RCRTYP - Report Type (EOB or ERA)
"RTN","RCDPEM4",246,0)
 ;   VAUTD
"RTN","RCDPEM4",247,0)
 K RCHDR S RCHDR("RUNDATE")=$$NOW^RCDPEARL,RCPGNUM=0,RCSTOP=0
"RTN","RCDPEM4",248,0)
 ;
"RTN","RCDPEM4",249,0)
 I RCDISPTY D  Q  ; Excel format, xecute code is QUIT, null page number
"RTN","RCDPEM4",250,0)
 .S RCHDR(0)=1,RCHDR(1)="^^^",RCHDR("XECUTE")="Q",RCPGNUM=""
"RTN","RCDPEM4",251,0)
 .S:RCRTYP="ERA" RCHDR(1)="STATION^STATION NUMBER^DATE/TIME^USER^ERA^RECEIPT^MATCH STATUS^POSTED STATUS"
"RTN","RCDPEM4",252,0)
 .S:RCRTYP="EOB" RCHDR(1)="STATION^STATION NUMBER^DATE/TIME^USER^ORIGINAL BILL^NEW BILL^ERA#^TRACE#^PAYMENT AMOUNT^JUSTIFICATION^OTHER BILLS^MOVED/COPIED"
"RTN","RCDPEM4",253,0)
 ;
"RTN","RCDPEM4",254,0)
 N START,END,MSG,DATE,Y,DIV,HCNT,J
"RTN","RCDPEM4",255,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z"),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z"),HCNT=0
"RTN","RCDPEM4",256,0)
 ;
"RTN","RCDPEM4",257,0)
 S RCHDR(0)=0  ; header line count
"RTN","RCDPEM4",258,0)
 X "S Y=$$HDR"_RCRTYP S HCNT=1
"RTN","RCDPEM4",259,0)
 ;
"RTN","RCDPEM4",260,0)
 I RCRTYP="ERA" D
"RTN","RCDPEM4",261,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",262,0)
 .S Y="Run Date/Time: "_RCHDR("RUNDATE")
"RTN","RCDPEM4",263,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",264,0)
 .S Y="DIVISIONS: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",265,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",266,0)
 .S Y="Date Range: "_START_" - "_END_" (DATE ERA UPDATED)"
"RTN","RCDPEM4",267,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",268,0)
 .S Y="" F J="CHAMPVA","TRICARE" S Y=Y_" "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"    "
"RTN","RCDPEM4",269,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",270,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",271,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                        Date/Time         User Who        EFT Match Status"
"RTN","RCDPEM4",272,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="ERA #      Receipt #    ERA Updated       Updated             Detail Post Status"
"RTN","RCDPEM4",273,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",274,0)
 ;
"RTN","RCDPEM4",275,0)
 I RCRTYP="EOB" D
"RTN","RCDPEM4",276,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",277,0)
 .S Y="Run Date/Time: "_RCHDR("RUNDATE")
"RTN","RCDPEM4",278,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",279,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",280,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",281,0)
 .S Y="Date Range: "_START_" - "_END_" (Date EEOB was Moved/Copied/Removed)"
"RTN","RCDPEM4",282,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",283,0)
 .S Y="" F J="CHAMPVA","TRICARE" S Y=Y_"    "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"    "
"RTN","RCDPEM4",284,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",285,0)
 .S Y=" Action(s) Selected: "_$S(RCACT="M":"MOVE",RCACT="C":"COPY",RCACT="R":"REMOVE",1:"ALL")
"RTN","RCDPEM4",286,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=$J("",80-$L(Y)\2)_Y
"RTN","RCDPEM4",287,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",288,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="Orig Bill#          Trace #"
"RTN","RCDPEM4",289,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                                  Moved/Copied/   Total Amt  User Who Moved/"
"RTN","RCDPEM4",290,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="     ERA #     Date/Time          Removed         Paid       Copied/Removed"
"RTN","RCDPEM4",291,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",292,0)
 ;
"RTN","RCDPEM4",293,0)
 ; add row of equal signs, not for ListMan
"RTN","RCDPEM4",294,0)
 S Y=RCHDR(0)+1,RCHDR(0)=Y,RCHDR(Y)=$TR($J("",80)," ","=")
"RTN","RCDPEM4",295,0)
 Q
"RTN","RCDPEM4",296,0)
 ;
"RTN","RCDPEM4",297,0)
HDRLM ; create the Listman header
"RTN","RCDPEM4",298,0)
 ; returns RCHDR
"RTN","RCDPEM4",299,0)
 ;   RCHDR(0) = header text line count
"RTN","RCDPEM4",300,0)
 ; INPUT: 
"RTN","RCDPEM4",301,0)
 ;   RCDTRNG - date range
"RTN","RCDPEM4",302,0)
 ;   VAUTD - Division  filter value(s)
"RTN","RCDPEM4",303,0)
 N START,END,MSG,DATE,Y,DIV,HCNT,J
"RTN","RCDPEM4",304,0)
 S START=$$FMTE^XLFDT($P(RCDTRNG,U,2),"2Z"),END=$$FMTE^XLFDT($P(RCDTRNG,U,3),"2Z"),HCNT=0
"RTN","RCDPEM4",305,0)
 ;
"RTN","RCDPEM4",306,0)
 S RCHDR(0)=0  ; header line count
"RTN","RCDPEM4",307,0)
 X "S Y=$$HDR"_RCRTYP
"RTN","RCDPEM4",308,0)
 I RCRTYP="ERA" D
"RTN","RCDPEM4",309,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",310,0)
 .S HCNT=1,RCHDR(HCNT)=""
"RTN","RCDPEM4",311,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)
"RTN","RCDPEM4",312,0)
 .F J="CHAMPVA","TRICARE" S Y=Y_"     "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"     "
"RTN","RCDPEM4",313,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",314,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",315,0)
 .S Y="Date Range: "_START_" - "_END_" (DATE ERA UPDATED)"
"RTN","RCDPEM4",316,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",317,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)=""
"RTN","RCDPEM4",318,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="                        Date/Time         User Who        EFT Match Status"
"RTN","RCDPEM4",319,0)
 .S HCNT=HCNT+1,RCHDR(HCNT)="ERA #      Receipt #    ERA Updated       Updated             Detail Post Status"
"RTN","RCDPEM4",320,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",321,0)
 ;
"RTN","RCDPEM4",322,0)
 I RCRTYP="EOB" D
"RTN","RCDPEM4",323,0)
 .D HDRXEC(RCRTYP)  ; xecute code for line 1
"RTN","RCDPEM4",324,0)
 .S Y="Divisions: "_$S(VAUTD=1:"ALL",1:DVFLTR)_"     "
"RTN","RCDPEM4",325,0)
 .F J="CHAMPVA","TRICARE" S Y=Y_"     "_J_": "_$S($G(RCXCLUDE(J)):"NO",1:"YES")_"     "
"RTN","RCDPEM4",326,0)
 .S HCNT=1,RCHDR(HCNT)=Y
"RTN","RCDPEM4",327,0)
 .S Y="Date Range: "_START_" - "_END_" (Date EEOB was Moved/Copied/Removed)"
"RTN","RCDPEM4",328,0)
 .S HCNT=2,RCHDR(HCNT)=Y
"RTN","RCDPEM4",329,0)
 .S Y="Action(s) Selected: "_$S(RCACT="M":"MOVE",RCACT="C":"COPY",RCACT="R":"REMOVE",1:"ALL")
"RTN","RCDPEM4",330,0)
 .S HCNT=3,RCHDR(HCNT)=Y
"RTN","RCDPEM4",331,0)
 .S HCNT=4,RCHDR(HCNT)=""
"RTN","RCDPEM4",332,0)
 .S HCNT=5,RCHDR(HCNT)="Orig Bill#          Trace #"
"RTN","RCDPEM4",333,0)
 .S HCNT=6,RCHDR(HCNT)="                                  Moved/Copied/   Total Amt  User Who Moved/"
"RTN","RCDPEM4",334,0)
 .S HCNT=7,RCHDR(HCNT)="     ERA #     Date/Time          Removed         Paid       Copied/Removed"
"RTN","RCDPEM4",335,0)
 .S RCHDR(0)=HCNT  ; header line count
"RTN","RCDPEM4",336,0)
 ;
"RTN","RCDPEM4",337,0)
 ; add row of equal signs, not for ListMan
"RTN","RCDPEM4",338,0)
 S:'RCLSTMGR Y=RCHDR(0)+1,RCHDR(0)=Y,RCHDR(Y)=" "_$TR($J("",78)," ","=")
"RTN","RCDPEM4",339,0)
 Q
"RTN","RCDPEM4",340,0)
 ;
"RTN","RCDPEM4",341,0)
HDREOB() ; extrinsic variable, header for EOB report
"RTN","RCDPEM4",342,0)
 Q "EEOB Move/Copy/Remove - Audit Report"
"RTN","RCDPEM4",343,0)
 ;
"RTN","RCDPEM4",344,0)
HDRERA() ; extrinsic variable, header for ERA report
"RTN","RCDPEM4",345,0)
 Q "ERAs Posted with Paper EOB - Audit Report"
"RTN","RCDPEM4",346,0)
 ;
"RTN","RCDPEM4",347,0)
HDRXEC(TYP) ; create xecute code for header
"RTN","RCDPEM4",348,0)
 S RCHDR("XECUTE")="N Y S RCPGNUM=RCPGNUM+1,Y=$$HDR"_TYP_"^"_$T(+0)_",RCHDR(1)=$J("" "",80-$L(Y)\2)_Y"_"_""          Page: ""_RCPGNUM"
"RTN","RCDPEM4",349,0)
 Q
"RTN","RCDPEM4",350,0)
 ;
"RTN","RCDPEM4",351,0)
DTRNG() ; function, return date range for a report
"RTN","RCDPEM4",352,0)
 N DIR,DUOUT,X,Y,RCSTART,RCEND
"RTN","RCDPEM4",353,0)
 D DATES(.RCSTART,.RCEND)
"RTN","RCDPEM4",354,0)
 Q:RCSTART=-1 0
"RTN","RCDPEM4",355,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPEM4",356,0)
 Q:'RCSTART "0^^"
"RTN","RCDPEM4",357,0)
 Q 0
"RTN","RCDPEM4",358,0)
 ;
"RTN","RCDPEM4",359,0)
DATES(BDATE,EDATE) ;Get a date range.
"RTN","RCDPEM4",360,0)
 S (BDATE,EDATE)=0
"RTN","RCDPEM4",361,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEM4",362,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start date: " D ^DIR K DIR
"RTN","RCDPEM4",363,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEM4",364,0)
 S BDATE=Y
"RTN","RCDPEM4",365,0)
 S DIR("?")="Enter the latest date of receipt of deposit to include on the report."
"RTN","RCDPEM4",366,0)
 S DIR("B")=Y(0)
"RTN","RCDPEM4",367,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="  End date: " D ^DIR K DIR
"RTN","RCDPEM4",368,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPEM4",369,0)
 S EDATE=Y
"RTN","RCDPEM4",370,0)
 Q
"RTN","RCDPEM4",371,0)
 ;
"RTN","RCDPEM4",372,0)
STADIV ;Division/Station Filter/Sort
"RTN","RCDPEM4",373,0)
 ;
"RTN","RCDPEM4",374,0)
 ;Sort selection
"RTN","RCDPEM4",375,0)
 N DIR,DUOUT,Y
"RTN","RCDPEM4",376,0)
 S RCDIV=0
"RTN","RCDPEM4",377,0)
 ;
"RTN","RCDPEM4",378,0)
 ;Division selection - IA 664
"RTN","RCDPEM4",379,0)
 ;RETURNS Y=-1 (quit), VAUTD=1 (for all),VAUTD=0 (selected divisions in VAUTD)
"RTN","RCDPEM4",380,0)
 D DIVISION^VAUTOMA Q:Y<0
"RTN","RCDPEM4",381,0)
 ;
"RTN","RCDPEM4",382,0)
 ;If ALL selected
"RTN","RCDPEM4",383,0)
 I VAUTD=1 S RCDIV=1 Q
"RTN","RCDPEM4",384,0)
 ;If some DIVISIONS selected
"RTN","RCDPEM4",385,0)
 S RCDIV=2
"RTN","RCDPEM4",386,0)
 Q
"RTN","RCDPEM4",387,0)
 ;
"RTN","RCDPEM4",388,0)
ACTION() ; Get action type
"RTN","RCDPEM4",389,0)
 N DIR,X,Y,DIROUT,DUOUT
"RTN","RCDPEM4",390,0)
 S DIR("A")="Move/Copy/Remove or All (M/C/R/A): "
"RTN","RCDPEM4",391,0)
 S DIR("B")="All"  ; default to ALL
"RTN","RCDPEM4",392,0)
 S DIR(0)="SAB^M:Move;C:Copy;R:Remove;A:All"
"RTN","RCDPEM4",393,0)
 D ^DIR Q:$G(DIROUT)!$G(DUOUT) -1
"RTN","RCDPEM4",394,0)
 ;
"RTN","RCDPEM4",395,0)
 Q Y
"RTN","RCDPEM4",396,0)
 ;
"RTN","RCDPEM4",397,0)
DISPTY() ; Get display/output type
"RTN","RCDPEM4",398,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPEM4",399,0)
 S DIR(0)="YA"
"RTN","RCDPEM4",400,0)
 S DIR("A")="Export the report to Microsoft Excel? "
"RTN","RCDPEM4",401,0)
 S DIR("B")="NO"
"RTN","RCDPEM4",402,0)
 D ^DIR I $G(DUOUT) Q -1
"RTN","RCDPEM4",403,0)
 Q Y
"RTN","RCDPEM4",404,0)
 ;
"RTN","RCDPEM4",405,0)
ERASTA(ERAIEN,STA,STNUM,STNAM) ; Get the station for this ERA
"RTN","RCDPEM4",406,0)
 ; read allowed on BILL/CLAIMS file (#399) via IA 3820
"RTN","RCDPEM4",407,0)
 ; returns STA: station IEN, STNAM: station name, STNUM: station number
"RTN","RCDPEM4",408,0)
 N ERAEOB,ERABILL,STAIEN
"RTN","RCDPEM4",409,0)
 S (ERAEOB,ERABILL)=""
"RTN","RCDPEM4",410,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEM4",411,0)
 D
"RTN","RCDPEM4",412,0)
 .S ERAEOB=$P($G(^RCY(344.4,ERAIEN,1,1,0)),U,2) Q:'ERAEOB  ; if EOB pointer not on first sub-file entry then stop
"RTN","RCDPEM4",413,0)
 .S ERABILL=$P($G(^IBM(361.1,ERAEOB,0)),U,1) Q:'ERABILL  ; EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPEM4",414,0)
 .S STAIEN=$P($G(^DGCR(399,ERABILL,0)),U,22) Q:'STAIEN  ;(#.22) DEFAULT DIVISION [22P:40.8]
"RTN","RCDPEM4",415,0)
 .S STA=STAIEN
"RTN","RCDPEM4",416,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEM4",417,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2) ;IA 417
"RTN","RCDPEM4",418,0)
 ;
"RTN","RCDPEM4",419,0)
 Q
"RTN","RCDPEM4",420,0)
 ;
"RTN","RCDPEM4",421,0)
EOBSTA(EOBIEN,STA,STNUM,STNAM) ; Get the station for this EOB
"RTN","RCDPEM4",422,0)
 ;Allowed read on 399 via IA 3820
"RTN","RCDPEM4",423,0)
 N BILL,STAIEN
"RTN","RCDPEM4",424,0)
 S (BILL)=""
"RTN","RCDPEM4",425,0)
 S (STA,STNUM,STNAM)="UNKNOWN"
"RTN","RCDPEM4",426,0)
 D
"RTN","RCDPEM4",427,0)
 .S BILL=$P(^IBM(361.1,EOBIEN,0),U,1) Q:'BILL
"RTN","RCDPEM4",428,0)
 .S STAIEN=$P($G(^DGCR(399,BILL,0)),U,22) Q:'STAIEN
"RTN","RCDPEM4",429,0)
 .S STA=STAIEN
"RTN","RCDPEM4",430,0)
 .S STNAM=$$EXTERNAL^DILFD(399,.22,,STA)
"RTN","RCDPEM4",431,0)
 .S STNUM=$P($G(^DG(40.8,STAIEN,0)),U,2) ;IA 417
"RTN","RCDPEM4",432,0)
 Q
"RTN","RCDPEM4",433,0)
 ;
"RTN","RCDPEM4",434,0)
DTPRB() ; Get the Start Date type
"RTN","RCDPEM4",435,0)
 N DIR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
"RTN","RCDPEM4",436,0)
 S DIR(0)="SABO^W:Date Removed from Worklist;R:Date ERA Received;B:Both Dates"
"RTN","RCDPEM4",437,0)
 S DIR("A")="Select Start Date Type: "
"RTN","RCDPEM4",438,0)
 D ^DIR K DIR
"RTN","RCDPEM4",439,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S Y=0
"RTN","RCDPEM4",440,0)
 Q Y
"RTN","RCDPEM4",441,0)
 ;
"RTN","RCDPEM4",442,0)
WP(JC) ; format justification comments
"RTN","RCDPEM4",443,0)
 ; JC - Justification Comment
"RTN","RCDPEM4",444,0)
 I JC="" Q
"RTN","RCDPEM4",445,0)
 N PCS,I,CNTR,CMNT,Y
"RTN","RCDPEM4",446,0)
 ; PCS - Number of " " $pieces in the comment
"RTN","RCDPEM4",447,0)
 ; CNTR - CMNT line counter
"RTN","RCDPEM4",448,0)
 ; CMNT - comment text to be displayed
"RTN","RCDPEM4",449,0)
 S PCS=$L(JC," "),CNTR=1,CMNT(CNTR)=" Justification Comments: "
"RTN","RCDPEM4",450,0)
 F I=1:1:PCS D
"RTN","RCDPEM4",451,0)
 .S Y=$P(JC," ",I)
"RTN","RCDPEM4",452,0)
 .S:$L(CMNT(CNTR))+$L(Y)>72 CNTR=CNTR+1,CMNT(CNTR)=$J(" ",25)
"RTN","RCDPEM4",453,0)
 .S CMNT(CNTR)=CMNT(CNTR)_" "_Y
"RTN","RCDPEM4",454,0)
 ;
"RTN","RCDPEM4",455,0)
 F I=1:1:CNTR D SL^RCDPEARL(CMNT(I),.RCLNCNT,RCTMPND)
"RTN","RCDPEM4",456,0)
 Q
"RTN","RCDPEM4",457,0)
 ;
"RTN","RCDPEM5")
0^21^B154473324
"RTN","RCDPEM5",1,0)
RCDPEM5 ;ALB/PJH - EPAYMENTS MOVE EEOB TO NEW CLAIM ;Oct 29, 2014@16:43:51
"RTN","RCDPEM5",2,0)
 ;;4.5;Accounts Receivable;**173,208,276,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPEM5",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM5",4,0)
 Q
"RTN","RCDPEM5",5,0)
 ;
"RTN","RCDPEM5",6,0)
EN ;Entry point for EEOB Move/Copy/Remove [RCDPE EEOB MOVE/COPY/REMOVE] option
"RTN","RCDPEM5",7,0)
 ;
"RTN","RCDPEM5",8,0)
 N DIR,X,Y,DIROUT,DUOUT,MODE
"RTN","RCDPEM5",9,0)
 S DIR("A")="Select action"
"RTN","RCDPEM5",10,0)
 S DIR("B")="M"
"RTN","RCDPEM5",11,0)
 S DIR(0)="S^M:Move EEOB to different claim;"
"RTN","RCDPEM5",12,0)
 S DIR(0)=DIR(0)_"C:Copy EEOB to multiple claims;"
"RTN","RCDPEM5",13,0)
 S DIR(0)=DIR(0)_"R:Remove EEOB from claim"
"RTN","RCDPEM5",14,0)
 D ^DIR Q:$G(DIROUT)!$G(DUOUT)
"RTN","RCDPEM5",15,0)
 S MODE=Y
"RTN","RCDPEM5",16,0)
 ;
"RTN","RCDPEM5",17,0)
 ; - PRCA*4.5*298 - OWNSKEY^XUSRB - Supported IA 3277  
"RTN","RCDPEM5",18,0)
 I MODE="R" N MSG D OWNSKEY^XUSRB(.MSG,"RCDPE REMOVE EEOB",DUZ) I 'MSG(0) D  Q
"RTN","RCDPEM5",19,0)
 .W !!,"SORRY, YOU ARE NOT AUTHORIZED TO USE THIS ACTION"
"RTN","RCDPEM5",20,0)
 .W !,"This action is locked with RCDPE REMOVE EEOB key.",!
"RTN","RCDPEM5",21,0)
 .N DIR S DIR(0)="E" D ^DIR
"RTN","RCDPEM5",22,0)
 ;
"RTN","RCDPEM5",23,0)
 ;Read access to file #361.1 under IA 4051
"RTN","RCDPEM5",24,0)
 ;
"RTN","RCDPEM5",25,0)
 N DA,DIC,DIE,DIR,DR,NCLAIM,ORIG,ORIGNAM,X,Y
"RTN","RCDPEM5",26,0)
 ;
"RTN","RCDPEM5",27,0)
 ;Allow selection of a original third party EOB
"RTN","RCDPEM5",28,0)
 S DIC("A")="Select EXPLANATION OF BENEFIT (EEOB) to "_$S(MODE="M":"MOVE",MODE="R":"REMOVE",1:"COPY")_": "
"RTN","RCDPEM5",29,0)
 ; screen to only allow selection of an active EEOB (not marked as deleted) and non-MRA type EOB
"RTN","RCDPEM5",30,0)
 S DIC("S")="I ($P(^(0),U,4)=0)&('$P($G(^(102)),U))",DIC="^IBM(361.1,",DIC(0)="AEMQ"
"RTN","RCDPEM5",31,0)
 W ! D ^DIC K DIC
"RTN","RCDPEM5",32,0)
 ;
"RTN","RCDPEM5",33,0)
 I Y'>0 Q
"RTN","RCDPEM5",34,0)
 ; controlled subscription IA 1992
"RTN","RCDPEM5",35,0)
 S ORIG=+Y,ORIGNAM=$$GET1^DIQ(399,$P(Y,U,2),.01)
"RTN","RCDPEM5",36,0)
 ;
"RTN","RCDPEM5",37,0)
 ;Get current bill payer sequence from claim - IA 3820
"RTN","RCDPEM5",38,0)
 D
"RTN","RCDPEM5",39,0)
 .N CURR,IEN399
"RTN","RCDPEM5",40,0)
 .S IEN399=$P($G(^IBM(361.1,ORIG,0)),U) Q:'IEN399
"RTN","RCDPEM5",41,0)
 .S CURR=$P($G(^DGCR(399,IEN399,0)),U,21) I (CURR'="T")&(CURR'="S") Q
"RTN","RCDPEM5",42,0)
 .W !!,"Warning - selected EEOB has secondary claims and may have tertiary claims"
"RTN","RCDPEM5",43,0)
 ;
"RTN","RCDPEM5",44,0)
 ;Lock Original EOB
"RTN","RCDPEM5",45,0)
 Q:'$$LOCK^IBCEOB4(ORIG)
"RTN","RCDPEM5",46,0)
 ;
"RTN","RCDPEM5",47,0)
 ;Remove Option
"RTN","RCDPEM5",48,0)
 I MODE="R" D REMOVE(ORIG,MODE),EXIT Q
"RTN","RCDPEM5",49,0)
 ;
"RTN","RCDPEM5",50,0)
 ;Select Claim(s) to Move/Copy to
"RTN","RCDPEM5",51,0)
 N RCBILL,RCBILLNM,NCLAIM,NCLAIMX,QUIT,SUB,LIT
"RTN","RCDPEM5",52,0)
 S SUB=0,QUIT=0,LIT=""
"RTN","RCDPEM5",53,0)
 W !
"RTN","RCDPEM5",54,0)
 F  D  Q:QUIT  Q:SUB&(MODE="M")
"RTN","RCDPEM5",55,0)
 .;Allow selection of a third party claim
"RTN","RCDPEM5",56,0)
 .I MODE="M" S DIC("A")="Select A/R Bill to MOVE to: "
"RTN","RCDPEM5",57,0)
 .I MODE="C" S DIC("A")="Select "_LIT_"A/R Bill to COPY to: "
"RTN","RCDPEM5",58,0)
 .S DIC="^PRCA(430,",DIC(0)="AEMQ",DIC("S")="I $D(^DGCR(399,+Y,0))&($$VALSTAT^RCDPEM5(+Y))"
"RTN","RCDPEM5",59,0)
 .D ^DIC K DIC
"RTN","RCDPEM5",60,0)
 .I Y'>0 S QUIT=1 Q
"RTN","RCDPEM5",61,0)
 .S RCBILL=+Y,RCBILLNM=$P($P(Y,U,2),"-",2)
"RTN","RCDPEM5",62,0)
 .I ORIGNAM=RCBILLNM,MODE="M" W !,"Cannot move EEOB to same claim" Q
"RTN","RCDPEM5",63,0)
 .I $D(NCLAIMX(RCBILL)) W !,"Claim already entered" Q
"RTN","RCDPEM5",64,0)
 .S SUB=SUB+1,NCLAIM(SUB)=RCBILL,NCLAIMX(RCBILL)=""
"RTN","RCDPEM5",65,0)
 .S:MODE="C" LIT="another "
"RTN","RCDPEM5",66,0)
 ;
"RTN","RCDPEM5",67,0)
 I $G(DUOUT)!$G(DIROUT) D EXIT Q
"RTN","RCDPEM5",68,0)
 ;
"RTN","RCDPEM5",69,0)
 ;User Exit or no claims selected
"RTN","RCDPEM5",70,0)
 I '$O(NCLAIM("")) D EXIT Q
"RTN","RCDPEM5",71,0)
 ;
"RTN","RCDPEM5",72,0)
 ;Prompt user to continue
"RTN","RCDPEM5",73,0)
 N DIR,X,Y,DIROUT
"RTN","RCDPEM5",74,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","RCDPEM5",75,0)
 S DIR("A")=$$PROMPT(ORIG,.NCLAIM,MODE)
"RTN","RCDPEM5",76,0)
 W ! D ^DIR
"RTN","RCDPEM5",77,0)
 ;
"RTN","RCDPEM5",78,0)
 I $G(DIROUT)!$G(DUOUT)!(Y=0) D EXIT Q
"RTN","RCDPEM5",79,0)
 ;
"RTN","RCDPEM5",80,0)
 ;Enter Justification Comment
"RTN","RCDPEM5",81,0)
 N DIR,DIROUT,DUOUT,JCOM,X,Y
"RTN","RCDPEM5",82,0)
 S DIR(0)="FA^1:100^K:$TR(X,"" "","""")="""" X",DIR("A")="Enter JUSTIFICATION COMMENT: "
"RTN","RCDPEM5",83,0)
 W ! D ^DIR I $G(DIROUT)!$G(DUOUT) W !!,"Update not performed" D EXIT Q
"RTN","RCDPEM5",84,0)
 S JCOM=Y
"RTN","RCDPEM5",85,0)
 ;
"RTN","RCDPEM5",86,0)
 ;Update EOB
"RTN","RCDPEM5",87,0)
 D UPDATE(ORIG,.NCLAIM,MODE,JCOM),EXIT
"RTN","RCDPEM5",88,0)
 ;
"RTN","RCDPEM5",89,0)
 Q
"RTN","RCDPEM5",90,0)
 ;
"RTN","RCDPEM5",91,0)
 ;Unlock original EOB
"RTN","RCDPEM5",92,0)
EXIT D UNLOCK^IBCEOB4(ORIG)
"RTN","RCDPEM5",93,0)
 Q
"RTN","RCDPEM5",94,0)
 ;
"RTN","RCDPEM5",95,0)
 ;File EOB #361.1 changes - Integration Agreement 5671 for IBCEOB4
"RTN","RCDPEM5",96,0)
UPDATE(ORIG,NCLAIM,MODE,JUST) ;
"RTN","RCDPEM5",97,0)
 ; Input - ORIG - Original EOB
"RTN","RCDPEM5",98,0)
 ;       - NCLAIM - New claim (s)
"RTN","RCDPEM5",99,0)
 ;       - MODE M=Move C=Copy
"RTN","RCDPEM5",100,0)
 ;       - JUST = User input justification text
"RTN","RCDPEM5",101,0)
 ; Output -  Updates EOB and Audit log
"RTN","RCDPEM5",102,0)
 N JUST1
"RTN","RCDPEM5",103,0)
 ;Move EOB
"RTN","RCDPEM5",104,0)
 I MODE="M" D
"RTN","RCDPEM5",105,0)
 .;Auto generate text for AR comments on original claim
"RTN","RCDPEM5",106,0)
 .S JUST1=$$JUST1(ORIG,.NCLAIM,"M",0)
"RTN","RCDPEM5",107,0)
 .;Update AR Comments on the 'from bill'
"RTN","RCDPEM5",108,0)
 .D AUDIT^RCDPAYER(ORIG,JUST_"^"_JUST1,MODE)
"RTN","RCDPEM5",109,0)
 .;Change claim number on EEOB
"RTN","RCDPEM5",110,0)
 .D MOVE^IBCEOB4(ORIG,NCLAIM(1),DUZ,$$NOW^XLFDT,JUST,MODE)
"RTN","RCDPEM5",111,0)
 .;Update AR Comments on 'to bill'
"RTN","RCDPEM5",112,0)
 .D AUDIT^RCDPAYER(ORIG,JUST_"^"_JUST1,MODE)
"RTN","RCDPEM5",113,0)
 ;Copy EOB
"RTN","RCDPEM5",114,0)
 I MODE="C" D
"RTN","RCDPEM5",115,0)
 .D COPY^IBCEOB4(ORIG,.NCLAIM,DUZ,$$NOW^XLFDT,JUST,MODE)
"RTN","RCDPEM5",116,0)
 .;Auto generate text for AR comments on original claim
"RTN","RCDPEM5",117,0)
 .S JUST1=$$JUST1(ORIG,.NCLAIM,"C",0)
"RTN","RCDPEM5",118,0)
 .;Update AR Comments on original claim
"RTN","RCDPEM5",119,0)
 .D AUDIT^RCDPAYER(ORIG,JUST_"^"_JUST1,MODE)
"RTN","RCDPEM5",120,0)
 .;Auto generate text for AR comments on new claim
"RTN","RCDPEM5",121,0)
 .S JUST1=$$JUST1(ORIG,.NCLAIM,"C",1)
"RTN","RCDPEM5",122,0)
 .;Update AR Comments on new claims
"RTN","RCDPEM5",123,0)
 .N SUB,NEWEOB
"RTN","RCDPEM5",124,0)
 .S SUB=0
"RTN","RCDPEM5",125,0)
 .F  S SUB=$O(NCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",126,0)
 ..;Convert Claim pointer to EOB pointer
"RTN","RCDPEM5",127,0)
 ..S NEWEOB=$O(^IBM(361.1,"B",NCLAIM(SUB),0)) Q:'NEWEOB
"RTN","RCDPEM5",128,0)
 ..D AUDIT^RCDPAYER(NEWEOB,JUST_"^"_JUST1,MODE)
"RTN","RCDPEM5",129,0)
 W !!,"EEOB Update Complete" H 1
"RTN","RCDPEM5",130,0)
 Q
"RTN","RCDPEM5",131,0)
 ;
"RTN","RCDPEM5",132,0)
PROMPT(ORIG,NCLAIM,MODE) ;Construct prompt text
"RTN","RCDPEM5",133,0)
 ; Input - ORIG - Original EOB
"RTN","RCDPEM5",134,0)
 ;       - NCLAIM - New claim (s)
"RTN","RCDPEM5",135,0)
 ;       - MODE M=Move C=Copy 
"RTN","RCDPEM5",136,0)
 ; Output - Justification text
"RTN","RCDPEM5",137,0)
 ;
"RTN","RCDPEM5",138,0)
 N FIRST,STR,STR1,SUB,TEXT
"RTN","RCDPEM5",139,0)
 ;Move or copy text
"RTN","RCDPEM5",140,0)
 S TEXT=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,ORIG,0)),U))
"RTN","RCDPEM5",141,0)
 I MODE="M" S STR="Move EEOB from claim "_TEXT_" to claim "
"RTN","RCDPEM5",142,0)
 E  S STR="Copy EEOB from claim "_TEXT_" to claim(s) "
"RTN","RCDPEM5",143,0)
 ;Build list of claims
"RTN","RCDPEM5",144,0)
 S STR1="",SUB="",FIRST=1
"RTN","RCDPEM5",145,0)
 F  S SUB=$O(NCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",146,0)
 .S TEXT=$P($G(^PRCA(430,NCLAIM(SUB),0)),U)
"RTN","RCDPEM5",147,0)
 .I FIRST S STR1=STR1_$P(TEXT,"-",2),FIRST=0 Q
"RTN","RCDPEM5",148,0)
 .S STR1=STR1_", "_$P(TEXT,"-",2)
"RTN","RCDPEM5",149,0)
 ;Return full prompt text
"RTN","RCDPEM5",150,0)
 Q STR_STR1_" "
"RTN","RCDPEM5",151,0)
 ;
"RTN","RCDPEM5",152,0)
JUST(ORIG,NCLAIM,MODE,TYPE,SRC) ;Construct justification text for automatic updates
"RTN","RCDPEM5",153,0)
 ; Input - ORIG - Original EOB
"RTN","RCDPEM5",154,0)
 ;       - NCLAIM - New claim (s)
"RTN","RCDPEM5",155,0)
 ;       - MODE - "M" = Move "C" =Copy "R" = Remove
"RTN","RCDPEM5",156,0)
 ;       - TYPE - 0 = old EOB 1 = new EOB
"RTN","RCDPEM5",157,0)
 ;       - SRC - "W" = Worklist "A" = Auto-post  
"RTN","RCDPEM5",158,0)
 ; Output - Justification text
"RTN","RCDPEM5",159,0)
 N FIRST,STR,STR1,SUB,TEXT
"RTN","RCDPEM5",160,0)
 ;Original bill number
"RTN","RCDPEM5",161,0)
 S TEXT=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,ORIG,0)),U))
"RTN","RCDPEM5",162,0)
 ;Justification comment for original EOB
"RTN","RCDPEM5",163,0)
 I TYPE=0 D
"RTN","RCDPEM5",164,0)
 .I MODE="R" S STR="EEOB removed from claim "_TEXT,STR1="" Q  ;PRCA*4.5*321
"RTN","RCDPEM5",165,0)
 .I MODE="M" S STR="EEOB from claim "_TEXT_" moved to claim "
"RTN","RCDPEM5",166,0)
 .I MODE="C" S STR="EEOB from claim "_TEXT_" copied to claim(s) "
"RTN","RCDPEM5",167,0)
 .;Build list of claims
"RTN","RCDPEM5",168,0)
 .S STR1="",SUB="",FIRST=1
"RTN","RCDPEM5",169,0)
 .F  S SUB=$O(NCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",170,0)
 ..S TEXT=$P($G(^PRCA(430,NCLAIM(SUB),0)),U)
"RTN","RCDPEM5",171,0)
 ..I FIRST S STR1=STR1_$P(TEXT,"-",2),FIRST=0 Q
"RTN","RCDPEM5",172,0)
 ..S STR1=STR1_", "_$P(TEXT,"-",2)
"RTN","RCDPEM5",173,0)
 ;Justification comment for new EOB's
"RTN","RCDPEM5",174,0)
 I TYPE=1 D
"RTN","RCDPEM5",175,0)
 .I MODE="M" S STR="EEOB moved from EEOB for claim "_TEXT,STR1=""
"RTN","RCDPEM5",176,0)
 .I MODE="C" S STR="EEOB copied from EEOB for claim "_TEXT,STR1=""
"RTN","RCDPEM5",177,0)
 ;Return full justification text
"RTN","RCDPEM5",178,0)
 Q STR_STR1_" automatically by "_$S(SRC="A":"Auto-post",1:"Worklist")
"RTN","RCDPEM5",179,0)
 ;
"RTN","RCDPEM5",180,0)
 ;
"RTN","RCDPEM5",181,0)
JUST1(ORIG,NCLAIM,MODE,TYPE) ;Construct AR comment for stand-alone MCR option
"RTN","RCDPEM5",182,0)
 ; Input - ORIG - Original EOB
"RTN","RCDPEM5",183,0)
 ;       - NCLAIM - New claim (s)
"RTN","RCDPEM5",184,0)
 ;       - MODE M=Move C=Copy
"RTN","RCDPEM5",185,0)
 ;       - TYPE = 0 - original EOB 1 - new EOB(s) 
"RTN","RCDPEM5",186,0)
 ; Output - Justification text
"RTN","RCDPEM5",187,0)
 N FIRST,STR,STR1,SUB,TEXT
"RTN","RCDPEM5",188,0)
 ;Original bill number
"RTN","RCDPEM5",189,0)
 S TEXT=$$EXTERNAL^DILFD(361.1,.01,,$P($G(^IBM(361.1,ORIG,0)),U))
"RTN","RCDPEM5",190,0)
 ;Justification comment for original EOB
"RTN","RCDPEM5",191,0)
 I TYPE=0 D
"RTN","RCDPEM5",192,0)
 .I MODE="M" S STR="EEOB from claim "_TEXT_" moved to claim "
"RTN","RCDPEM5",193,0)
 .I MODE="C" S STR="EEOB from claim "_TEXT_" copied to claim(s) "
"RTN","RCDPEM5",194,0)
 .;Build list of claims
"RTN","RCDPEM5",195,0)
 .S STR1="",SUB="",FIRST=1
"RTN","RCDPEM5",196,0)
 .F  S SUB=$O(NCLAIM(SUB)) Q:'SUB  D
"RTN","RCDPEM5",197,0)
 ..S TEXT=$P($G(^PRCA(430,NCLAIM(SUB),0)),U)
"RTN","RCDPEM5",198,0)
 ..I FIRST S STR1=STR1_$P(TEXT,"-",2),FIRST=0 Q
"RTN","RCDPEM5",199,0)
 ..S STR1=STR1_", "_$P(TEXT,"-",2)
"RTN","RCDPEM5",200,0)
 ;Justification comment for new EOB's
"RTN","RCDPEM5",201,0)
 I TYPE=1 D
"RTN","RCDPEM5",202,0)
 .I MODE="M" S STR="EEOB moved from EEOB for claim "_TEXT,STR1=""
"RTN","RCDPEM5",203,0)
 .I MODE="C" S STR="EEOB copied from EEOB for claim "_TEXT,STR1=""
"RTN","RCDPEM5",204,0)
 ;Return comment text
"RTN","RCDPEM5",205,0)
 Q STR_STR1
"RTN","RCDPEM5",206,0)
 ;
"RTN","RCDPEM5",207,0)
FINDEOB(IEN3444,BILL) ;Find EOB for a claim within an ERA
"RTN","RCDPEM5",208,0)
 ; Input - IEN3444 = ERA ien
"RTN","RCDPEM5",209,0)
 ;         BILL = Bill number
"RTN","RCDPEM5",210,0)
 ; Output - IEN of EOB in #361.1
"RTN","RCDPEM5",211,0)
 N IEN3611,SUB
"RTN","RCDPEM5",212,0)
 S (SUB,IEN3611)=0
"RTN","RCDPEM5",213,0)
 F  S SUB=$O(^RCY(344.4,IEN3444,1,"AC",SUB)) Q:'SUB  D  Q:IEN3611
"RTN","RCDPEM5",214,0)
 .I $$EXTERNAL^DILFD(344.41,.02,,SUB)=BILL S IEN3611=SUB
"RTN","RCDPEM5",215,0)
 Q IEN3611
"RTN","RCDPEM5",216,0)
 ;
"RTN","RCDPEM5",217,0)
REMOVE(ORIG,MODE) ; Interactive option to Remove EEOB - PRCA*4.5*298
"RTN","RCDPEM5",218,0)
 ; Input - ORIG = original EOB in #361.1
"RTN","RCDPEM5",219,0)
 ; Output - mode = "R"
"RTN","RCDPEM5",220,0)
 ;
"RTN","RCDPEM5",221,0)
 ;Prompt user to continue
"RTN","RCDPEM5",222,0)
 N DIR,X,Y,DIROUT
"RTN","RCDPEM5",223,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","RCDPEM5",224,0)
 S DIR("A")="Are you sure you want to remove EEOB from claim "_ORIGNAM_" (Y/N)?"
"RTN","RCDPEM5",225,0)
 W ! D ^DIR
"RTN","RCDPEM5",226,0)
 ;
"RTN","RCDPEM5",227,0)
 I $G(DIROUT)!$G(DUOUT)!(Y=0) Q
"RTN","RCDPEM5",228,0)
 ;
"RTN","RCDPEM5",229,0)
 ;Enter Justification Comment
"RTN","RCDPEM5",230,0)
 N DIR,DIROUT,DUOUT,JUST,X,Y
"RTN","RCDPEM5",231,0)
 S DIR(0)="FA^1:100^K:$TR(X,"" "","""")="""" X",DIR("A")="Enter JUSTIFICATION COMMENT: "
"RTN","RCDPEM5",232,0)
 W ! D ^DIR I $G(DIROUT)!$G(DUOUT) W !!,"Update not performed" D EXIT Q
"RTN","RCDPEM5",233,0)
 S JUST=Y
"RTN","RCDPEM5",234,0)
 ;
"RTN","RCDPEM5",235,0)
 ;Update EEOB
"RTN","RCDPEM5",236,0)
 D REMOVE^IBCEOB4(ORIG,DUZ,JUST)
"RTN","RCDPEM5",237,0)
 ;Update AR Comments for removed claim
"RTN","RCDPEM5",238,0)
 D AUDIT^RCDPAYER(ORIG,JUST,MODE)
"RTN","RCDPEM5",239,0)
 ;
"RTN","RCDPEM5",240,0)
 W !!,"EEOB Update Complete" H 1
"RTN","RCDPEM5",241,0)
 Q
"RTN","RCDPEM5",242,0)
 ; 
"RTN","RCDPEM5",243,0)
VALSTAT(CLIEN) ; validation on current status of the AR claim selected for the move/copy event  
"RTN","RCDPEM5",244,0)
 ; Claims that are in a incomplete state cannot be selected
"RTN","RCDPEM5",245,0)
 ; incomplete states are determined at CURRENT STATUS (8,430) of the AR claim
"RTN","RCDPEM5",246,0)
 ; AR claims with 'BILL INCOMPLETE', 'INCOMPLETE', 'NEW BILL' statuses cannot be selected 
"RTN","RCDPEM5",247,0)
 ; CLIEN=430 ien
"RTN","RCDPEM5",248,0)
 ; returns 0 or 1
"RTN","RCDPEM5",249,0)
 N CSTAT,FLAG
"RTN","RCDPEM5",250,0)
 S CSTAT=$$GET1^DIQ(430,CLIEN,8)
"RTN","RCDPEM5",251,0)
 S FLAG=$S(CSTAT="BILL INCOMPLETE":0,CSTAT="INCOMPLETE":0,CSTAT="NEW BILL":0,1:1)
"RTN","RCDPEM5",252,0)
 Q FLAG
"RTN","RCDPEM5",253,0)
 ;
"RTN","RCDPEM5",254,0)
 ; BEGIN - PRCA*4.5*321
"RTN","RCDPEM5",255,0)
AUTO(OBILL,RCSPLIT,RCERA,SRC,ORIG) ;  Automatic move copy of EOB - EP for RCDPEM and RCDPEMA
"RTN","RCDPEM5",256,0)
 ; Input - OBILL - Original Bill number in #399 
"RTN","RCDPEM5",257,0)
 ;       - RCSPLIT - Array of split lines
"RTN","RCDPEM5",258,0)
 ;       - RCERA - ERA ien #344.4
"RTN","RCDPEM5",259,0)
 ;       - SRC - "W" = Worklist "A" = APAR/Autopost
"RTN","RCDPEM5",260,0)
 ;       - ORIG - IEN of EOB in file #361.1
"RTN","RCDPEM5",261,0)
 ; Output - Update EOBs and audit trail
"RTN","RCDPEM5",262,0)
 N CCLAIM,IFN,NCLAIM,SUB,SUB1,NBILL,MOVE,JUST,JUST1,VALID
"RTN","RCDPEM5",263,0)
 ; EOB for the original claim must be present
"RTN","RCDPEM5",264,0)
 I 'ORIG Q 1
"RTN","RCDPEM5",265,0)
 ; Default operation is move
"RTN","RCDPEM5",266,0)
 S (SUB,SUB1)=0,MOVE=1,VALID=1
"RTN","RCDPEM5",267,0)
 ; Loop through split lines 
"RTN","RCDPEM5",268,0)
 F  S SUB=$O(RCSPLIT(SUB)) Q:'SUB  D
"RTN","RCDPEM5",269,0)
 .; Bill Number on split line
"RTN","RCDPEM5",270,0)
 .S NBILL=$P(RCSPLIT(SUB),U,2)
"RTN","RCDPEM5",271,0)
 .; Ignore suspense claims, piece 7 is pointer to AR claim file 430
"RTN","RCDPEM5",272,0)
 .S IFN=$P(RCSPLIT(SUB),U,7) Q:'IFN
"RTN","RCDPEM5",273,0)
 .; Ignore split lines with zero value
"RTN","RCDPEM5",274,0)
 .Q:+$P(RCSPLIT(SUB),U,3)=0
"RTN","RCDPEM5",275,0)
 .; If original bill is in the array then default operation is copy
"RTN","RCDPEM5",276,0)
 .I OBILL=NBILL S MOVE=0
"RTN","RCDPEM5",277,0)
 .; Save POINTER to AR Claim file 430 (DINUM to 399)
"RTN","RCDPEM5",278,0)
 .S SUB1=SUB1+1,NCLAIM(SUB1)=IFN
"RTN","RCDPEM5",279,0)
 .; Build list of new claims to copy
"RTN","RCDPEM5",280,0)
 .S:OBILL'=NBILL CCLAIM(IFN)=IFN
"RTN","RCDPEM5",281,0)
 ;
"RTN","RCDPEM5",282,0)
 ; If split is between original claim and suspense (and no other claims) -  do nothing
"RTN","RCDPEM5",283,0)
 I SUB1=1,MOVE=0 Q 1
"RTN","RCDPEM5",284,0)
 ; If split was to move entire claim payment to suspense - mark EOB as removed
"RTN","RCDPEM5",285,0)
 I SUB1=0 D AUTOREM(ORIG,$$JUST(ORIG,"","R",0,SRC)) Q 1
"RTN","RCDPEM5",286,0)
 ;
"RTN","RCDPEM5",287,0)
 ; Lock Original EOB
"RTN","RCDPEM5",288,0)
 I '$$LOCK(ORIG) Q 0
"RTN","RCDPEM5",289,0)
 ;
"RTN","RCDPEM5",290,0)
 ; If split to single new claim move EOB - i.e. change claim number on EOB
"RTN","RCDPEM5",291,0)
 I MOVE,SUB1=1 D  Q 1
"RTN","RCDPEM5",292,0)
 .S JUST=$$JUST(ORIG,.NCLAIM,"C",0,SRC) ;Just. Text for original EOB
"RTN","RCDPEM5",293,0)
 .; Change claim number on original EOB attached to ERA
"RTN","RCDPEM5",294,0)
 .D MOVE^IBCEOB4(ORIG,NCLAIM(1),DUZ,$$NOW^XLFDT,JUST,"M")
"RTN","RCDPEM5",295,0)
 .; Update AR Transaction for original claim
"RTN","RCDPEM5",296,0)
 .D AUDIT^RCDPAYER(ORIG,JUST,"W")
"RTN","RCDPEM5",297,0)
 ;
"RTN","RCDPEM5",298,0)
 ; If split was to new claims - copy original EOB to new claims and then mark original EOB as removed
"RTN","RCDPEM5",299,0)
 I MOVE,SUB1>1 D
"RTN","RCDPEM5",300,0)
 .S JUST=$$JUST(ORIG,.NCLAIM,"C",0,SRC) ;Just. Text for original EEOB (copied to claims x,y,z - then removed)
"RTN","RCDPEM5",301,0)
 .S JUST1=$$JUST(ORIG,.NCLAIM,"C",1,SRC) ;Just. Text for copied to EEOB (copied from claim w)
"RTN","RCDPEM5",302,0)
 .; Copy EOB to new EOBs for "to" claims
"RTN","RCDPEM5",303,0)
 .;;D AUTOCOPY^IBCEOB5(ORIG,.CCLAIM,DUZ,$$NOW^XLFDT,JUST1,"C")
"RTN","RCDPEM5",304,0)
 .D COPY^IBCEOB4(ORIG,.CCLAIM,DUZ,$$NOW^XLFDT,JUST1,"C")
"RTN","RCDPEM5",305,0)
 .; Mark original EOB removed but with text of 'copied to claims....'
"RTN","RCDPEM5",306,0)
 .D AUTOREM(ORIG,JUST)
"RTN","RCDPEM5",307,0)
 ;
"RTN","RCDPEM5",308,0)
 ; If split was between original claim and other claims - copy all new claims to new EOBs
"RTN","RCDPEM5",309,0)
 I 'MOVE D
"RTN","RCDPEM5",310,0)
 .S JUST=$$JUST(ORIG,.NCLAIM,"C",0,SRC) ;Just. Text for original EEOB
"RTN","RCDPEM5",311,0)
 .S JUST1=$$JUST(ORIG,.NCLAIM,"C",1,SRC) ;Just. Text for copied to EEOB
"RTN","RCDPEM5",312,0)
 .D COPY^IBCEOB4(ORIG,.CCLAIM,DUZ,$$NOW^XLFDT,JUST,"C")
"RTN","RCDPEM5",313,0)
 .; Update AR Transaction for 'from claim'
"RTN","RCDPEM5",314,0)
 .D AUDIT^RCDPAYER(ORIG,JUST,"W")
"RTN","RCDPEM5",315,0)
 ;
"RTN","RCDPEM5",316,0)
 D UNLOCK(ORIG)
"RTN","RCDPEM5",317,0)
 Q 1
"RTN","RCDPEM5",318,0)
 ;
"RTN","RCDPEM5",319,0)
AUTOREM(ORIG,JUST) ;Silent remove of EEOB where entire payment is suspensed or moved to other claims
"RTN","RCDPEM5",320,0)
 ; Input - ORIG = EOB in #361.1
"RTN","RCDPEM5",321,0)
 ;         JUST = Justification text
"RTN","RCDPEM5",322,0)
 ; Output - Update EOB in #361.1 and audit trail
"RTN","RCDPEM5",323,0)
 ;
"RTN","RCDPEM5",324,0)
 ;Lock Original EOB
"RTN","RCDPEM5",325,0)
 I '$$LOCK(ORIG) Q
"RTN","RCDPEM5",326,0)
 ;Update EEOB
"RTN","RCDPEM5",327,0)
 D REMOVE^IBCEOB4(ORIG,DUZ,JUST)
"RTN","RCDPEM5",328,0)
 ;Update AR Comments for removed claim
"RTN","RCDPEM5",329,0)
 D AUDIT^RCDPAYER(ORIG,JUST,"R")
"RTN","RCDPEM5",330,0)
 ;Unlock original EOB
"RTN","RCDPEM5",331,0)
 D UNLOCK(ORIG)
"RTN","RCDPEM5",332,0)
 ;
"RTN","RCDPEM5",333,0)
 Q
"RTN","RCDPEM5",334,0)
 ;
"RTN","RCDPEM5",335,0)
 ;Read access to file #361.1 under IA 4051
"RTN","RCDPEM5",336,0)
LOCK(EOBIEN) ;Lock Original EOB
"RTN","RCDPEM5",337,0)
 L +^IBM(361.1,EOBIEN):5 I  Q 1
"RTN","RCDPEM5",338,0)
 Q 0
"RTN","RCDPEM5",339,0)
 ;
"RTN","RCDPEM5",340,0)
UNLOCK(EOBIEN) ;Release EOB
"RTN","RCDPEM5",341,0)
 L -^IBM(361.1,EOBIEN)
"RTN","RCDPEM5",342,0)
 Q
"RTN","RCDPEM5",343,0)
 ; END PRCA*4.5*321
"RTN","RCDPEM5",344,0)
 ;
"RTN","RCDPEM5",345,0)
 ;US1394 ADDITIONS - EP RCDPRPL1 and RCDPLPL3
"RTN","RCDPEM5",346,0)
EEOB(RCRCPT,RCTRANDA) ; Option to restore associated suspended/removed EEOB
"RTN","RCDPEM5",347,0)
 ;
"RTN","RCDPEM5",348,0)
 ; INPUT  - RCRCPT - Receipt ien #344
"RTN","RCDPEM5",349,0)
 ;        - RCTRANDA - Receipt line #344.01
"RTN","RCDPEM5",350,0)
 ;
"RTN","RCDPEM5",351,0)
 ; OUTPUT - RCEEOB - selected EEOB ien #361.1 
"RTN","RCDPEM5",352,0)
 ; or 0 if no EEOB
"RTN","RCDPEM5",353,0)
 ; or -1 if ^ abort 
"RTN","RCDPEM5",354,0)
 ;
"RTN","RCDPEM5",355,0)
 N CLAIM,DIROUT,DTOUT,DUOUT,RCEEOB,RCEEOBH,RCERA,RCLINE
"RTN","RCDPEM5",356,0)
 ; Get new claim IEN from receipt line
"RTN","RCDPEM5",357,0)
 S CLAIM=$$GET1^DIQ(344.01,RCTRANDA_","_RCRCPT_",",.09,"I")
"RTN","RCDPEM5",358,0)
 ; Quit if this is not a third party claim payment
"RTN","RCDPEM5",359,0)
 Q:CLAIM'["PRCA" 0
"RTN","RCDPEM5",360,0)
 ; Check if ERA has a suspended EEOB for this line
"RTN","RCDPEM5",361,0)
 S RCEEOB=$$SUSP(RCRCPT,RCTRANDA,.RCERA,.RCLINE)
"RTN","RCDPEM5",362,0)
 ; If no suspended EEOB skip prompt
"RTN","RCDPEM5",363,0)
 Q:'RCEEOB 0
"RTN","RCDPEM5",364,0)
 ;
"RTN","RCDPEM5",365,0)
 ; Get last move/copy history record - Read access to file #361.1 under IA 4051
"RTN","RCDPEM5",366,0)
 S RCEEOBH=$O(^IBM(361.1,RCEEOB,101,"A"),-1)
"RTN","RCDPEM5",367,0)
 ; Quit if EEOB if no history found - should not occur since EEOB is suspended
"RTN","RCDPEM5",368,0)
 Q:'RCEEOBH 0
"RTN","RCDPEM5",369,0)
 ; Display EOB detail
"RTN","RCDPEM5",370,0)
 W !!,"This claim has an associated EEOB on ERA "_RCERA
"RTN","RCDPEM5",371,0)
 W !!,"Claim Number     : ",$$GET1^DIQ(344.41,RCLINE_","_RCERA,.02,"E")
"RTN","RCDPEM5",372,0)
 W !,"Trace Number     : ",$$GET1^DIQ(344.4,RCERA,.02,"E")
"RTN","RCDPEM5",373,0)
 W !,"Total Amount Paid: ",$$GET1^DIQ(361.1,RCEEOB,1.01,"E")
"RTN","RCDPEM5",374,0)
 W !,"Date/Time Removed: ",$$GET1^DIQ(361.1101,RCEEOBH_","_RCEEOB,.01,"E")
"RTN","RCDPEM5",375,0)
 W !,"Removed by       : ",$$GET1^DIQ(361.1101,RCEEOBH_","_RCEEOB,.02,"E")
"RTN","RCDPEM5",376,0)
 W !,"Justification    : ",$$GET1^DIQ(361.1101,RCEEOBH_","_RCEEOB,.03,"E"),!
"RTN","RCDPEM5",377,0)
 ;
"RTN","RCDPEM5",378,0)
 ; Confirm that this is the correct EEOB
"RTN","RCDPEM5",379,0)
 K DIR
"RTN","RCDPEM5",380,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPEM5",381,0)
 S DIR("A")="Is this the correct EEOB to associate with this claim"
"RTN","RCDPEM5",382,0)
 D ^DIR
"RTN","RCDPEM5",383,0)
 I $G(DTOUT)!($G(DUOUT)) Q -1
"RTN","RCDPEM5",384,0)
 Q:Y'=1 0
"RTN","RCDPEM5",385,0)
 ;
"RTN","RCDPEM5",386,0)
 ;Return selected EEOB
"RTN","RCDPEM5",387,0)
 Q RCEEOB
"RTN","RCDPEM5",388,0)
 ;
"RTN","RCDPEM5",389,0)
SUSP(RCRCPT,RCTRANDA,RCERA,RCLINE) ; Identify suspended EEOB
"RTN","RCDPEM5",390,0)
 ;
"RTN","RCDPEM5",391,0)
 ; INPUT - RCRCPT - Receipt ien #344
"RTN","RCDPEM5",392,0)
 ;       - RCTRANDA - Receipt line #344.01
"RTN","RCDPEM5",393,0)
 ;
"RTN","RCDPEM5",394,0)
 ; OUTPUT - RCEEOB - selected EEOB ien #361.1 
"RTN","RCDPEM5",395,0)
 ;        - RCERA - ERA ien #344.4
"RTN","RCDPEM5",396,0)
 ;        - RCLINE - ERA line #344.41;
"RTN","RCDPEM5",397,0)
 ;
"RTN","RCDPEM5",398,0)
 N RCEEOB,RCORIG,RCRCZ,RCSPLIT
"RTN","RCDPEM5",399,0)
 ; Get ERA from receipt
"RTN","RCDPEM5",400,0)
 S RCERA=$$GET1^DIQ(344,RCRCPT_",",.18,"I")
"RTN","RCDPEM5",401,0)
 ; Quit if no ERA
"RTN","RCDPEM5",402,0)
 Q:'RCERA 0
"RTN","RCDPEM5",403,0)
 ; Get ERA Scratchpad line
"RTN","RCDPEM5",404,0)
 S RCRCZ=$$GET1^DIQ(344.01,RCTRANDA_","_RCRCPT_",",.27,"I")
"RTN","RCDPEM5",405,0)
 ; Quit if ERA scratchpad line missing
"RTN","RCDPEM5",406,0)
 Q:'RCRCZ 0
"RTN","RCDPEM5",407,0)
 ; Get the original line sequence number from before the split was performed
"RTN","RCDPEM5",408,0)
 S RCSPLIT=$$GET1^DIQ(344.491,RCRCZ_","_RCERA_",",.01),RCORIG=RCSPLIT\1
"RTN","RCDPEM5",409,0)
 ; Convert sequence number into original line IEN
"RTN","RCDPEM5",410,0)
 S RCORIG=$O(^RCY(344.49,RCERA,1,"ASEQ",RCORIG,""))
"RTN","RCDPEM5",411,0)
 ; Quit if original scratchpad line not found
"RTN","RCDPEM5",412,0)
 Q:'RCORIG 0
"RTN","RCDPEM5",413,0)
 ; Get ERA line from original scratchpad line
"RTN","RCDPEM5",414,0)
 S RCLINE=$$GET1^DIQ(344.491,RCORIG_","_RCERA_",",.09,"I")
"RTN","RCDPEM5",415,0)
 ; Quit if ERA line not found
"RTN","RCDPEM5",416,0)
 Q:'RCLINE 0
"RTN","RCDPEM5",417,0)
 ; Get EEOB from ERA line
"RTN","RCDPEM5",418,0)
 S RCEEOB=$$GET1^DIQ(344.41,RCLINE_","_RCERA_",",.02,"I")
"RTN","RCDPEM5",419,0)
 ; Quit if ERA line pointer to EEOB is missing
"RTN","RCDPEM5",420,0)
 Q:'RCEEOB 0
"RTN","RCDPEM5",421,0)
 ; Ignore EEOB if status is not removed - read access to file #361.1 under IA 4051
"RTN","RCDPEM5",422,0)
 Q:$$GET1^DIQ(361.1,RCEEOB_",",102,"I")'=1 0
"RTN","RCDPEM5",423,0)
 ; Return suspended EEOB IEN
"RTN","RCDPEM5",424,0)
 Q RCEEOB
"RTN","RCDPEM5",425,0)
 ;
"RTN","RCDPEM5",426,0)
 ; EP RCDPRPL1 and RCDPLPL3
"RTN","RCDPEM5",427,0)
RESTORE(RCPTDA,RCTRANDA,ORIG,SRC) ; Change bill number on EOB and clear 'removed' status
"RTN","RCDPEM5",428,0)
 ;
"RTN","RCDPEM5",429,0)
 ; INPUT - RCPTDA   - Receipt ien #344
"RTN","RCDPEM5",430,0)
 ;       - RCTRANDA - Receipt line #344.01
"RTN","RCDPEM5",431,0)
 ;       - ORIG     - EOB ien #361.1
"RTN","RCDPEM5",432,0)
 ;       - SRC      - 'L' - Link Payments 'R' - Receipt Porcessing
"RTN","RCDPEM5",433,0)
 ;
"RTN","RCDPEM5",434,0)
 Q:'$$LOCK^IBCEOB4(ORIG)
"RTN","RCDPEM5",435,0)
 ;
"RTN","RCDPEM5",436,0)
 W !,"Updating EEOB...."
"RTN","RCDPEM5",437,0)
 ;
"RTN","RCDPEM5",438,0)
 N NCLAIM,JUST
"RTN","RCDPEM5",439,0)
 ; Get new claim IEN from receipt line
"RTN","RCDPEM5",440,0)
 S NCLAIM=$P($$GET1^DIQ(344.01,RCTRANDA_","_RCPTDA_",",.09,"I"),";")
"RTN","RCDPEM5",441,0)
 ; Set up justification text
"RTN","RCDPEM5",442,0)
 S JUST="EEOB restored from suspense in "_$S(SRC="L":"Link Payments",SRC="R":"Edit Payments",1:"Other")
"RTN","RCDPEM5",443,0)
 ; Update AR comments on 'from claim'
"RTN","RCDPEM5",444,0)
 D AUDIT^RCDPAYER(ORIG,JUST,"W")
"RTN","RCDPEM5",445,0)
 ; Change claim number on EOB
"RTN","RCDPEM5",446,0)
 D MOVE^IBCEOB4(ORIG,NCLAIM,DUZ,$$NOW^XLFDT,JUST,"M")
"RTN","RCDPEM5",447,0)
 ; Reset EEOB REMOVED status
"RTN","RCDPEM5",448,0)
 D RESTORE^IBCEOB4(ORIG)
"RTN","RCDPEM5",449,0)
 ;Unlock EOB
"RTN","RCDPEM5",450,0)
 D UNLOCK^IBCEOB4(ORIG)
"RTN","RCDPEM5",451,0)
 ;
"RTN","RCDPEM5",452,0)
 H 1 W "done"
"RTN","RCDPEM5",453,0)
 Q
"RTN","RCDPEM7")
0^64^B147289800
"RTN","RCDPEM7",1,0)
RCDPEM7 ;OIFO-BAYPINES/PJH - OVERDUE EFT AND ERA BULLETINS ;Jun 06, 2014@19:11:19
"RTN","RCDPEM7",2,0)
 ;;4.5;Accounts Receivable;**276,298,303,304,321**;Mar 20, 1995;Build 48
"RTN","RCDPEM7",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEM7",4,0)
 ;
"RTN","RCDPEM7",5,0)
EN ; Main entry point for overdue EFT/ERA bulletins
"RTN","RCDPEM7",6,0)
 ;
"RTN","RCDPEM7",7,0)
 N TODAY,ERACNT,ERATOT,ERA1CNT,ERA2CNT,ERA1TOT,ERA2TOT,EFTCNT,EFTTOT,RCPROG,RCSUSCNT,RCSUSAMT,RCMXDYS
"RTN","RCDPEM7",8,0)
 ;Clear workfiles
"RTN","RCDPEM7",9,0)
 S RCPROG="RCDPEM7" K ^TMP(RCPROG,$J)
"RTN","RCDPEM7",10,0)
 ;Set counters and totals
"RTN","RCDPEM7",11,0)
 S (EFTCNT,ERACNT,ERA1CNT,ERA2CNT,EFTTOT,ERATOT,ERA1TOT,ERA2TOT,RCSUSCNT,RCSUSAMT)=0
"RTN","RCDPEM7",12,0)
 ;Cuttoff of 12:00 am today
"RTN","RCDPEM7",13,0)
 S TODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPEM7",14,0)
 ;
"RTN","RCDPEM7",15,0)
 ;Verify this is correct day for bulletins - PRCA*4.5*321
"RTN","RCDPEM7",16,0)
 N X
"RTN","RCDPEM7",17,0)
 S X=TODAY
"RTN","RCDPEM7",18,0)
 D DW^%DTC
"RTN","RCDPEM7",19,0)
 I $$GET1^DIQ(344.61,"1,",.1)'=X Q
"RTN","RCDPEM7",20,0)
 ;
"RTN","RCDPEM7",21,0)
 ;Retrieve the max days allowed in suspense parameter
"RTN","RCDPEM7",22,0)
 S RCMXDYS=$$GET1^DIQ(342,"1,",7.04)
"RTN","RCDPEM7",23,0)
 ;
"RTN","RCDPEM7",24,0)
 ;Scan for overdue ERA and unposted ERA
"RTN","RCDPEM7",25,0)
 D ERASCAN
"RTN","RCDPEM7",26,0)
 ;Scan for overdue EFT
"RTN","RCDPEM7",27,0)
 D EFTSCAN
"RTN","RCDPEM7",28,0)
 ;Scan for overdue Suspended ERA's - PRCA*4.5*304
"RTN","RCDPEM7",29,0)
 D SUSPSCAN
"RTN","RCDPEM7",30,0)
 ;Bulletins
"RTN","RCDPEM7",31,0)
 D BULLETIN
"RTN","RCDPEM7",32,0)
 ;Clear workfiles
"RTN","RCDPEM7",33,0)
 K ^TMP(RCPROG,$J)
"RTN","RCDPEM7",34,0)
 Q
"RTN","RCDPEM7",35,0)
 ;
"RTN","RCDPEM7",36,0)
ERASCAN ;Scan ERA
"RTN","RCDPEM7",37,0)
 N AMT,ERAIEN,REC0,SUB,STATUS,FDATE,PNAME
"RTN","RCDPEM7",38,0)
 ;Scan for unmatched ERA
"RTN","RCDPEM7",39,0)
 S ERAIEN=0,STATUS=0,SUB="ERA"
"RTN","RCDPEM7",40,0)
 F  S ERAIEN=$O(^RCY(344.4,"AMATCH",STATUS,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM7",41,0)
 .S REC0=$G(^RCY(344.4,ERAIEN,0))
"RTN","RCDPEM7",42,0)
 .;Get ERA file date/time
"RTN","RCDPEM7",43,0)
 .S FDATE=$P(REC0,U,7) Q:'FDATE
"RTN","RCDPEM7",44,0)
 .;Ignore if <31 days overdue
"RTN","RCDPEM7",45,0)
 .Q:$$FMDIFF^XLFDT(TODAY,FDATE,1)<31
"RTN","RCDPEM7",46,0)
 .;Trace, Payer Name and Amount
"RTN","RCDPEM7",47,0)
 .S PNAME=$P(REC0,U,6),AMT=$P(REC0,U,5)
"RTN","RCDPEM7",48,0)
 .I $L(PNAME)>35 S PNAME=$E(PNAME,1,35) ; limit size of the name
"RTN","RCDPEM7",49,0)
 .;Update count and totals
"RTN","RCDPEM7",50,0)
 .S ERACNT=ERACNT+1,ERATOT=ERATOT+AMT
"RTN","RCDPEM7",51,0)
 . ; PRCA*4.5*303 added the FDATE subscript to the global so that the line
"RTN","RCDPEM7",52,0)
 . ; items collate in date ascending order.
"RTN","RCDPEM7",53,0)
 . ;Save ERA#, Payer Name, File Date and Amount Paid
"RTN","RCDPEM7",54,0)
 .S ^TMP(RCPROG,$J,"ERA",FDATE,ERACNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",55,0)
 ;
"RTN","RCDPEM7",56,0)
 ;Scan for Matched/Unposted ERA
"RTN","RCDPEM7",57,0)
 S SUB="ERA1"
"RTN","RCDPEM7",58,0)
 F STATUS=-1,1,2,3 D
"RTN","RCDPEM7",59,0)
 . S ERAIEN=0 F  S ERAIEN=$O(^RCY(344.4,"AMATCH",STATUS,ERAIEN)) Q:'ERAIEN  D
"RTN","RCDPEM7",60,0)
 .. S REC0=$G(^RCY(344.4,ERAIEN,0))
"RTN","RCDPEM7",61,0)
 .. ;Get ERA file date/time
"RTN","RCDPEM7",62,0)
 .. S FDATE=$P(REC0,U,7) Q:'FDATE
"RTN","RCDPEM7",63,0)
 .. ;Ignore if <31 days overdue
"RTN","RCDPEM7",64,0)
 .. Q:$$FMDIFF^XLFDT(TODAY,FDATE,1)<31
"RTN","RCDPEM7",65,0)
 .. ;Ignore if not unposted posted
"RTN","RCDPEM7",66,0)
 .. Q:$P($G(^RCY(344.4,ERAIEN,0)),U,14)>0
"RTN","RCDPEM7",67,0)
 .. ;Payer Name and Amount
"RTN","RCDPEM7",68,0)
 .. S PNAME=$P(REC0,U,6),AMT=$P(REC0,U,5)
"RTN","RCDPEM7",69,0)
 .. I $L(PNAME)>35 S PNAME=$E(PNAME,1,35) ; limit size of the name
"RTN","RCDPEM7",70,0)
 .. ; PRCA*4.5*303 Split into "ACH" and not "ACH"
"RTN","RCDPEM7",71,0)
 .. ;Update count and totals
"RTN","RCDPEM7",72,0)
 .. S:$P(REC0,U,15)="ACH" ERA1CNT=ERA1CNT+1,ERA1TOT=ERA1TOT+AMT
"RTN","RCDPEM7",73,0)
 .. S:$P(REC0,U,15)'="ACH" ERA2CNT=ERA2CNT+1,ERA2TOT=ERA2TOT+AMT
"RTN","RCDPEM7",74,0)
 .. ;PRCA*4.5*303 added the FDATE subscript to the global so that the line
"RTN","RCDPEM7",75,0)
 .. ;items collate in date ascending order.
"RTN","RCDPEM7",76,0)
 .. ;Save ERA#, Payer Name, File Date and Amount Paid
"RTN","RCDPEM7",77,0)
 .. S:$P(REC0,U,15)="ACH" ^TMP(RCPROG,$J,"ERA1",FDATE,ERA1CNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",78,0)
 .. S:$P(REC0,U,15)'="ACH" ^TMP(RCPROG,$J,"ERA2",FDATE,ERA2CNT)=$$ERAL(ERAIEN,PNAME,FDATE,AMT)
"RTN","RCDPEM7",79,0)
 .. Q
"RTN","RCDPEM7",80,0)
 . Q
"RTN","RCDPEM7",81,0)
 Q
"RTN","RCDPEM7",82,0)
 ;
"RTN","RCDPEM7",83,0)
EFTSCAN ;Scan EFT
"RTN","RCDPEM7",84,0)
 N DEPN,EFTIEN,IEN3443,EFTDATE,TRACE,REC0,REC31,REC4,STATUS,PAYER,DEPAMT
"RTN","RCDPEM7",85,0)
 ;Scan for unmatched EFT
"RTN","RCDPEM7",86,0)
 S EFTIEN=0,STATUS=0
"RTN","RCDPEM7",87,0)
 ; PRCA*4.5*303 Check all statuses report on unmatched EFTs, Matched EFTs with unposted ERAs
"RTN","RCDPEM7",88,0)
 ; 4-7-2016 Removed F STATUS=-1,0,1 per issue identifying duplicate EFTs this will need to be
"RTN","RCDPEM7",89,0)
 ; addressed in another project
"RTN","RCDPEM7",90,0)
 S STATUS=0 F  S EFTIEN=$O(^RCY(344.31,"AMATCH",STATUS,EFTIEN)) Q:'EFTIEN  D
"RTN","RCDPEM7",91,0)
 .S REC31=$G(^RCY(344.31,EFTIEN,0))
"RTN","RCDPEM7",92,0)
 .;PRCA*4.5*303 Get zero node of the associated ERA if matched
"RTN","RCDPEM7",93,0)
 .S REC4=$S($P(REC31,U,10)'="":$G(^RCY(344.4,$P(REC31,U,10),0)),1:"")
"RTN","RCDPEM7",94,0)
 .;Get pointer to EFT file
"RTN","RCDPEM7",95,0)
 .S IEN3443=$P(REC31,U) Q:'IEN3443
"RTN","RCDPEM7",96,0)
 .S REC0=$G(^RCY(344.3,IEN3443,0))
"RTN","RCDPEM7",97,0)
 .;Get EFT file date
"RTN","RCDPEM7",98,0)
 .S EFTDATE=$P(REC0,U,2) Q:'EFTDATE
"RTN","RCDPEM7",99,0)
 .;Ignore if <15 days overdue
"RTN","RCDPEM7",100,0)
 .Q:$$FMDIFF^XLFDT(TODAY,EFTDATE,1)<15
"RTN","RCDPEM7",101,0)
 .;PRCA*4.5*303 - if we have a ERA check to see if we include this record or quit
"RTN","RCDPEM7",102,0)
 .I REC4'="" Q:$P(REC4,U,14)'=0  ; Not posted status is 0 - everything else is ignored
"RTN","RCDPEM7",103,0)
 .;Deposit number and payment amount
"RTN","RCDPEM7",104,0)
 .S DEPN=$P(REC0,U,6),DEPAMT=$P(REC31,U,7)
"RTN","RCDPEM7",105,0)
 .;Payer ID and Trace from EFT detail file
"RTN","RCDPEM7",106,0)
 .S PAYER=$P(REC31,U,2),TRACE=$P(REC31,U,4) S:PAYER="" PAYER="NO PAYER NAME RECEIVED" ; PRCA*4.5*298
"RTN","RCDPEM7",107,0)
 .;If payer and trace combined are >40 truncate payer name first
"RTN","RCDPEM7",108,0)
 .I $L(PAYER_TRACE)>40 D
"RTN","RCDPEM7",109,0)
 ..I $L(PAYER)>20 S PAYER=$E(PAYER,1,20) ; limit size of the name
"RTN","RCDPEM7",110,0)
 ..Q:$L(PAYER_TRACE)<41
"RTN","RCDPEM7",111,0)
 ..S TRACE=$E(TRACE,1,20) ; limit size of the trace
"RTN","RCDPEM7",112,0)
 .;Update count and totals
"RTN","RCDPEM7",113,0)
 .S EFTCNT=EFTCNT+1,EFTTOT=EFTTOT+DEPAMT
"RTN","RCDPEM7",114,0)
 .; PRCA*4.5*303 added EFTDATE to the subscripts before EFTCNT so report will sort in
"RTN","RCDPEM7",115,0)
 .; date ascending order.
"RTN","RCDPEM7",116,0)
 .;Save Deposit No, Receipt, Payer ID, EFT Date and Deposit Amount
"RTN","RCDPEM7",117,0)
 .S ^TMP(RCPROG,$J,"EFT",EFTDATE,EFTCNT)=$$EFTL(DEPN,TRACE,PAYER,EFTDATE,DEPAMT)
"RTN","RCDPEM7",118,0)
 Q
"RTN","RCDPEM7",119,0)
 ;
"RTN","RCDPEM7",120,0)
 ; PRCA*4.5*304
"RTN","RCDPEM7",121,0)
 ; Scan for ERA's older than allowed by parameter
"RTN","RCDPEM7",122,0)
SUSPSCAN ;
"RTN","RCDPEM7",123,0)
 N RCCT,RCDATA,RCSDATE,RCDATA0,RCDATA2,RCDATA3,RCMAXDAY,RCRECTDA,RCTRANDA
"RTN","RCDPEM7",124,0)
 N RCDEP,RCTRACE,RCPAYER,RCEFTDT,RCDEPAMT,RCDAYS,RCUSER,RCREC,RCDISP,RCRSN,RCSREC
"RTN","RCDPEM7",125,0)
 ;
"RTN","RCDPEM7",126,0)
 ;initialize counters
"RTN","RCDPEM7",127,0)
 S (RCSUSAMT,RCSUSCNT)=0
"RTN","RCDPEM7",128,0)
 ;
"RTN","RCDPEM7",129,0)
 ;calculate the last date to stop gathering entries on
"RTN","RCDPEM7",130,0)
 S RCMAXDAY=TODAY-RCMXDYS
"RTN","RCDPEM7",131,0)
 ;
"RTN","RCDPEM7",132,0)
 ;Loop through the In Suspense index
"RTN","RCDPEM7",133,0)
 S (RCRECTDA,RCCT)=0
"RTN","RCDPEM7",134,0)
 F  S RCRECTDA=$O(^RCY(344,"AN",RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPEM7",135,0)
 . S RCDATA=$G(^RCY(344,RCRECTDA,0))
"RTN","RCDPEM7",136,0)
 . S RCREC=$P(RCDATA,U)
"RTN","RCDPEM7",137,0)
 . S RCTRANDA=0 F  S RCTRANDA=$O(^RCY(344,"AN",RCRECTDA,RCTRANDA)) Q:'RCTRANDA  D
"RTN","RCDPEM7",138,0)
 . . S RCDATA0=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPEM7",139,0)
 . . S RCDATA2=$G(^RCY(344,RCRECTDA,1,RCTRANDA,2))
"RTN","RCDPEM7",140,0)
 . . S RCDATA3=$G(^RCY(344,RCRECTDA,1,RCTRANDA,3))
"RTN","RCDPEM7",141,0)
 . . ;get date into suspense
"RTN","RCDPEM7",142,0)
 . . S RCSDATE=$P(RCDATA3,U,2)
"RTN","RCDPEM7",143,0)
 . . S RCDAYS=$$FMTH^XLFDT(TODAY,1)-$$FMTH^XLFDT(RCSDATE,1)
"RTN","RCDPEM7",144,0)
 . . Q:RCSDATE=""
"RTN","RCDPEM7",145,0)
 . . ;
"RTN","RCDPEM7",146,0)
 . . ;if younger than the cutoff date, quit
"RTN","RCDPEM7",147,0)
 . . Q:RCDAYS'>RCMXDYS
"RTN","RCDPEM7",148,0)
 . . ;
"RTN","RCDPEM7",149,0)
 . . ; get the user and disposition
"RTN","RCDPEM7",150,0)
 . . S RCUSER=$$GET1^DIQ(200,$P(RCDATA3,U,3)_",",1,"E")
"RTN","RCDPEM7",151,0)
 . . S RCDISP=$$UP^XLFSTR($$GET1^DIQ(344.01,RCTRANDA_","_RCRECTDA_",",3.01))
"RTN","RCDPEM7",152,0)
 . . ;
"RTN","RCDPEM7",153,0)
 . . ;Suspense status has been cleared quit
"RTN","RCDPEM7",154,0)
 . . Q:$P(RCDATA2,U,6)'="" 
"RTN","RCDPEM7",155,0)
 . . ;
"RTN","RCDPEM7",156,0)
 . . ;Extract needed info for report
"RTN","RCDPEM7",157,0)
 . . S RCEFTDT=$P(RCDATA0,U,6),RCDEPAMT=$P(RCDATA0,U,4)
"RTN","RCDPEM7",158,0)
 . . ;
"RTN","RCDPEM7",159,0)
 . . ;update counter and amount info
"RTN","RCDPEM7",160,0)
 . . S RCSUSCNT=RCSUSCNT+1
"RTN","RCDPEM7",161,0)
 . . S RCSUSAMT=RCSUSAMT+RCDEPAMT
"RTN","RCDPEM7",162,0)
 . . S RCRSN=$E($P($G(^RCY(344,RCRECTDA,1,RCTRANDA,1)),U,2),1,12)
"RTN","RCDPEM7",163,0)
 . . S RCSREC=RCREC_"@"_RCTRANDA
"RTN","RCDPEM7",164,0)
 . . ;
"RTN","RCDPEM7",165,0)
 . . ;update temporary array
"RTN","RCDPEM7",166,0)
 . . S ^TMP(RCPROG,$J,"SUSPENSE",RCSDATE,RCSUSCNT)=$$ESUSPL(RCSDATE,RCDAYS,RCUSER,RCSREC,RCDEPAMT,RCDISP,RCRSN)
"RTN","RCDPEM7",167,0)
 ;
"RTN","RCDPEM7",168,0)
 Q
"RTN","RCDPEM7",169,0)
 ;
"RTN","RCDPEM7",170,0)
BULLETIN ;Create bulletins only if overdue EFT/ERA found
"RTN","RCDPEM7",171,0)
 ;
"RTN","RCDPEM7",172,0)
 N ARRAY,SBJ,SUB,CNT,CNT1,RCPROG1,GLB,RCMXDYS,IDX
"RTN","RCDPEM7",173,0)
 S RCPROG1="RCDPEM7A",GLB=$NA(^TMP(RCPROG1,$J,"XMTEXT"))
"RTN","RCDPEM7",174,0)
 ;
"RTN","RCDPEM7",175,0)
 ;Unmatched ERA bulletins
"RTN","RCDPEM7",176,0)
 I ERACNT D
"RTN","RCDPEM7",177,0)
 .;Build header
"RTN","RCDPEM7",178,0)
 .S SUB="ERA" K @GLB
"RTN","RCDPEM7",179,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-Unmatched ERAs > 30 days"
"RTN","RCDPEM7",180,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have not yet been"
"RTN","RCDPEM7",181,0)
 .S @GLB@(2)="matched."
"RTN","RCDPEM7",182,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",183,0)
 .S @GLB@(4)="Total # of ERAs - "_ERACNT
"RTN","RCDPEM7",184,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERATOT,",",2)
"RTN","RCDPEM7",185,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",186,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",187,0)
 .;
"RTN","RCDPEM7",188,0)
 .;Move unmatched ERA search findings into message
"RTN","RCDPEM7",189,0)
 .S CNT=0,CNT1=8,SUB="ERA"
"RTN","RCDPEM7",190,0)
 .S IDX="" F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",191,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",192,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",193,0)
 .D SEND
"RTN","RCDPEM7",194,0)
 .K @GLB
"RTN","RCDPEM7",195,0)
 ;
"RTN","RCDPEM7",196,0)
 ;Unposted "ACH" ERA bulletins
"RTN","RCDPEM7",197,0)
 ; PRCA*4.5*303 - modified this bulletin to show only "ACH" expected payments
"RTN","RCDPEM7",198,0)
 I ERA1CNT D
"RTN","RCDPEM7",199,0)
 .;Build header
"RTN","RCDPEM7",200,0)
 .S SUB="ERA1" K @GLB
"RTN","RCDPEM7",201,0)
 .; PRCA*4.5*303 - Changed SBJ to make sure it was less than 65 characters
"RTN","RCDPEM7",202,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-EFT:Matched/Not Posted ERA>30 days"
"RTN","RCDPEM7",203,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have been matched but"
"RTN","RCDPEM7",204,0)
 .S @GLB@(2)="have not been posted"
"RTN","RCDPEM7",205,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",206,0)
 .S @GLB@(4)="Total # of ERAs - ""MATCHED TO EFT"" - "_ERA1CNT
"RTN","RCDPEM7",207,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERA1TOT,",",2)
"RTN","RCDPEM7",208,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",209,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",210,0)
 .;
"RTN","RCDPEM7",211,0)
 .;Move unposted ERA search findings into message
"RTN","RCDPEM7",212,0)
 .S CNT=0,CNT1=8,IDX=""
"RTN","RCDPEM7",213,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",214,0)
 ..S CNT1=CNT1+1
"RTN","RCDPEM7",215,0)
 ..S @GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",216,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",217,0)
 .D SEND
"RTN","RCDPEM7",218,0)
 .K @GLB
"RTN","RCDPEM7",219,0)
 ;
"RTN","RCDPEM7",220,0)
 ;Unposted "CHK" ERA bulletins or ERAs, that don't match "ACH"
"RTN","RCDPEM7",221,0)
 ; PRCA*4.5*303 - modified this bulletin to show "CHK" expected payments (or don't match "ACH")
"RTN","RCDPEM7",222,0)
 I ERA2CNT D
"RTN","RCDPEM7",223,0)
 .;Build header
"RTN","RCDPEM7",224,0)
 .S SUB="ERA2" K @GLB
"RTN","RCDPEM7",225,0)
 .; PRCA*4.5*303 - Changed SBJ to make sure it was less than 65 characters
"RTN","RCDPEM7",226,0)
 .S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-PAPER:Matched/Not Posted ERA>30 days"
"RTN","RCDPEM7",227,0)
 .S @GLB@(1)="The listed ERAs were received more than 30 days ago and have been matched but"
"RTN","RCDPEM7",228,0)
 .S @GLB@(2)="have not been posted"
"RTN","RCDPEM7",229,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",230,0)
 .S @GLB@(4)="Total # of ERAs - ""MATCHED TO PAPER CHECK"" - "_ERA2CNT
"RTN","RCDPEM7",231,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(ERA2TOT,",",2)
"RTN","RCDPEM7",232,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",233,0)
 .S @GLB@(7)="ERA#        PAYER NAME                                FILE DATE    AMOUNT PAID"
"RTN","RCDPEM7",234,0)
 .;
"RTN","RCDPEM7",235,0)
 .;Move unposted ERA search findings into message
"RTN","RCDPEM7",236,0)
 .S CNT=0,CNT1=8,IDX=""
"RTN","RCDPEM7",237,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",238,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",239,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",240,0)
 .D SEND
"RTN","RCDPEM7",241,0)
 .K @GLB
"RTN","RCDPEM7",242,0)
 ;
"RTN","RCDPEM7",243,0)
 ;Unmatched EFT bulletins
"RTN","RCDPEM7",244,0)
 ; PRCA*4.5*303 - Changed logic to send "No EFTs more than 14 days..." message if no EFTs
"RTN","RCDPEM7",245,0)
 ;I EFTCNT D
"RTN","RCDPEM7",246,0)
 ;Build header
"RTN","RCDPEM7",247,0)
 S SUB="EFT" K @GLB
"RTN","RCDPEM7",248,0)
 S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-ACTION REQ-EFTs > 14 days"
"RTN","RCDPEM7",249,0)
 I EFTCNT=0 D  G B1
"RTN","RCDPEM7",250,0)
 . S @GLB@(1)="**** There are NO EFTs more than 14 days old that have not yet been matched."
"RTN","RCDPEM7",251,0)
 . S @GLB@(2)=" "
"RTN","RCDPEM7",252,0)
 . S @GLB@(3)="Total # of EFTs - "_EFTCNT
"RTN","RCDPEM7",253,0)
 . S @GLB@(4)="Total Dollar Amount - $"_$FN(0,",",2)
"RTN","RCDPEM7",254,0)
 . S @GLB@(5)=" "
"RTN","RCDPEM7",255,0)
 . S @GLB@(6)="** END OF REPORT **"
"RTN","RCDPEM7",256,0)
 ;
"RTN","RCDPEM7",257,0)
 I EFTCNT>0 D
"RTN","RCDPEM7",258,0)
 .S @GLB@(1)="The following EFTs were received more than 14 days ago and have not yet"
"RTN","RCDPEM7",259,0)
 .S @GLB@(2)="been matched."
"RTN","RCDPEM7",260,0)
 .S @GLB@(3)=" "
"RTN","RCDPEM7",261,0)
 .S @GLB@(4)="Total # of EFTs - "_EFTCNT
"RTN","RCDPEM7",262,0)
 .S @GLB@(5)="Total Dollar Amount - "_"$"_$FN(EFTTOT,",",2)
"RTN","RCDPEM7",263,0)
 .S @GLB@(6)=" "
"RTN","RCDPEM7",264,0)
 .S @GLB@(7)="DEPOSIT#   PAYER NAME/TRACE#                         EFT DATE    DEPOSIT AMT"
"RTN","RCDPEM7",265,0)
 .;
"RTN","RCDPEM7",266,0)
 .;Move EFT search findings into message
"RTN","RCDPEM7",267,0)
 .S CNT=0,CNT1=8,SUB="EFT",IDX=""
"RTN","RCDPEM7",268,0)
 .F  S IDX=$O(^TMP(RCPROG,$J,SUB,IDX)) Q:'IDX  F  S CNT=$O(^TMP(RCPROG,$J,SUB,IDX,CNT)) Q:'CNT  D
"RTN","RCDPEM7",269,0)
 ..S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,IDX,CNT)
"RTN","RCDPEM7",270,0)
 .S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",271,0)
B1 ;
"RTN","RCDPEM7",272,0)
 D SEND
"RTN","RCDPEM7",273,0)
 K @GLB
"RTN","RCDPEM7",274,0)
 ;
"RTN","RCDPEM7",275,0)
 ;PRCA*4.5*304 - Add suspense bulletin
"RTN","RCDPEM7",276,0)
 ; Suspense bulletins
"RTN","RCDPEM7",277,0)
 ;
"RTN","RCDPEM7",278,0)
 ; Send bulletin if items in suspense
"RTN","RCDPEM7",279,0)
 I RCSUSCNT D
"RTN","RCDPEM7",280,0)
 . ;
"RTN","RCDPEM7",281,0)
 . N DT
"RTN","RCDPEM7",282,0)
 . ;Retrieve the parameter
"RTN","RCDPEM7",283,0)
 . S RCMXDYS=$$GET1^DIQ(342,"1,",7.04)
"RTN","RCDPEM7",284,0)
 . ;
"RTN","RCDPEM7",285,0)
 . ;Build header
"RTN","RCDPEM7",286,0)
 . S SUB="SUSPENSE" K @GLB
"RTN","RCDPEM7",287,0)
 . S SBJ="EDI LBOX-STA# "_$P($$SITE^VASITE,"^",3)_"-SUSPENSE ENTRIES OVERDUE FOR PROCESSING"
"RTN","RCDPEM7",288,0)
 . S @GLB@(1)="The following entries have been in Suspense past the #days allowed by site"
"RTN","RCDPEM7",289,0)
 . S @GLB@(2)="parameter - which is currently set at "_RCMXDYS_" days."
"RTN","RCDPEM7",290,0)
 . S @GLB@(3)=" "
"RTN","RCDPEM7",291,0)
 . S @GLB@(4)="Total # of Overdue Entries in Suspense  - "_RCSUSCNT
"RTN","RCDPEM7",292,0)
 . S @GLB@(5)="Total Dollar Amount Overdue in Suspense - "_"$"_$FN(RCSUSAMT,",",2)
"RTN","RCDPEM7",293,0)
 . S @GLB@(6)=" "
"RTN","RCDPEM7",294,0)
 . S @GLB@(7)="SUSP DATE  #DAYS USER RECEIPT#               AMOUNT DISP        REASON"
"RTN","RCDPEM7",295,0)
 . ;
"RTN","RCDPEM7",296,0)
 . ;Move Suspense search findings into message
"RTN","RCDPEM7",297,0)
 . S CNT=0,CNT1=8,SUB="SUSPENSE",DT=0
"RTN","RCDPEM7",298,0)
 . F  S DT=$O(^TMP(RCPROG,$J,SUB,DT)) Q:'DT  D
"RTN","RCDPEM7",299,0)
 . . F  S CNT=$O(^TMP(RCPROG,$J,SUB,DT,CNT)) Q:'CNT  D
"RTN","RCDPEM7",300,0)
 . . . S CNT1=CNT1+1,@GLB@(CNT1)=^TMP(RCPROG,$J,SUB,DT,CNT)
"RTN","RCDPEM7",301,0)
 . S @GLB@(CNT1+1)="** END OF REPORT **"
"RTN","RCDPEM7",302,0)
 . D SEND
"RTN","RCDPEM7",303,0)
 . K @GLB
"RTN","RCDPEM7",304,0)
 Q
"RTN","RCDPEM7",305,0)
 ;
"RTN","RCDPEM7",306,0)
SEND ;Transmit mail message
"RTN","RCDPEM7",307,0)
 N XMDUZ,XMTEXT,XMSUB,XMY,XMINSTR
"RTN","RCDPEM7",308,0)
 S XMDUZ=DUZ,XMTEXT=GLB,XMSUB=SBJ,XMY("I:G.RCDPE AUDIT")=""
"RTN","RCDPEM7",309,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEM7",310,0)
 S XMINSTR("FLAGS")="P"
"RTN","RCDPEM7",311,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUB,XMTEXT,.XMY,.XMINSTR)
"RTN","RCDPEM7",312,0)
 Q
"RTN","RCDPEM7",313,0)
 ;
"RTN","RCDPEM7",314,0)
ERAL(X1,X2,X3,X4) ;Format ERA Message line
"RTN","RCDPEM7",315,0)
 N SPACE
"RTN","RCDPEM7",316,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",317,0)
 S X1=X1_$E(SPACE,1,12-$L(X1))
"RTN","RCDPEM7",318,0)
 S X2=X1_$E(X2,1,43)_$E(SPACE,1,43-$L(X2))
"RTN","RCDPEM7",319,0)
 S X3=$$FMTE^XLFDT(X3,"2D")
"RTN","RCDPEM7",320,0)
 S X4="$"_$FN(X4,",",2)
"RTN","RCDPEM7",321,0)
 Q X2_$J(X3,8)_$J(X4,15)
"RTN","RCDPEM7",322,0)
 ;
"RTN","RCDPEM7",323,0)
EFTL(X1,X2,X3,X4,X5) ;Format EFT Message line
"RTN","RCDPEM7",324,0)
 N SPACE
"RTN","RCDPEM7",325,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",326,0)
 S X1=X1_$E(SPACE,1,10-$L(X1))_" "
"RTN","RCDPEM7",327,0)
 S X2=X3_"/"_X2 ;Payer and Trace
"RTN","RCDPEM7",328,0)
 S X2=X1_$E(X2,1,41)_$E(SPACE,1,42-$L(X2))
"RTN","RCDPEM7",329,0)
 S X4=$$FMTE^XLFDT(X4,"2D")
"RTN","RCDPEM7",330,0)
 S X5="$"_$FN(X5,",",2)
"RTN","RCDPEM7",331,0)
 Q X2_$J(X4,8)_$J(X5,15)
"RTN","RCDPEM7",332,0)
 ;
"RTN","RCDPEM7",333,0)
 ;PRCA*4.5*304
"RTN","RCDPEM7",334,0)
ESUSPL(X1,X2,X3,X4,X5,X6,X7) ;Format Suspense Message line
"RTN","RCDPEM7",335,0)
 N SPACE
"RTN","RCDPEM7",336,0)
 S SPACE=$J("",80)
"RTN","RCDPEM7",337,0)
 ;spacing for Suspense Date
"RTN","RCDPEM7",338,0)
 S X1=$$FMTE^XLFDT(X1,"2D")
"RTN","RCDPEM7",339,0)
 S X1=X1_$E(SPACE,1,10-$L(X1))
"RTN","RCDPEM7",340,0)
 ;spacing for # days in suspense
"RTN","RCDPEM7",341,0)
 S X2=$E(SPACE,1,6-$L(X2))_X2
"RTN","RCDPEM7",342,0)
 ;spacing for USER
"RTN","RCDPEM7",343,0)
 S X3=" "_X3_$E(SPACE,1,5-$L(X3))
"RTN","RCDPEM7",344,0)
 ;spacing for RECEIPT NUMBER_TRANS #
"RTN","RCDPEM7",345,0)
 S X4=$E(X4_SPACE,1,16)
"RTN","RCDPEM7",346,0)
 ;spacing for amount in suspense
"RTN","RCDPEM7",347,0)
 S X5=$J("$"_$FN(X5,",",2),13)_" "
"RTN","RCDPEM7",348,0)
 ;spacing for STATUS
"RTN","RCDPEM7",349,0)
 S X6=X6_$E(SPACE,1,12-$L(X6))
"RTN","RCDPEM7",350,0)
 ;spacing for REASON
"RTN","RCDPEM7",351,0)
 S X7=X7_$E(SPACE,1,12-$L(X7))
"RTN","RCDPEM7",352,0)
 ;return concatenated string
"RTN","RCDPEM7",353,0)
 Q X1_X2_X3_X4_X5_X6_X7
"RTN","RCDPEM7",354,0)
 ;
"RTN","RCDPEMA")
0^20^B29986515
"RTN","RCDPEMA",1,0)
RCDPEMA ;ALB/PJH - AUTO-POSTING RECEIPT CREATION ;Oct 15, 2014@12:37:52
"RTN","RCDPEMA",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEMA",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEMA",4,0)
 ;
"RTN","RCDPEMA",5,0)
RCPTDET(RCRZ,RECTDA1,RCLINES,RCER) ; Adds detail to a receipt based on file 344.49 and exceptions in array RCLINES
"RTN","RCDPEMA",6,0)
 ; RCRZ = ien of ERA entry in file 344.49
"RTN","RCDPEMA",7,0)
 ; RECTDA1 = ien of receipt entry in file 344
"RTN","RCDPEMA",8,0)
 ; RCER = error array returned if passed by reference
"RTN","RCDPEMA",9,0)
 ; RCLINES = array to indicate which scratchpad lines can be posted (assigned a receipt)
"RTN","RCDPEMA",10,0)
 ;
"RTN","RCDPEMA",11,0)
 N DA,DIE,DR,Q,RCLINE,RCQ,RCR,RCSPL,RCTRANDA,RCZ0,SEQLINES,RCSEQ,X,Y,Z,Z0,Z1
"RTN","RCDPEMA",12,0)
 ;
"RTN","RCDPEMA",13,0)
 S RCR=0 F  S RCR=$O(^RCY(344.49,RCRZ,1,RCR)) Q:'RCR  D
"RTN","RCDPEMA",14,0)
 . S RCZ0=$G(^RCY(344.49,RCRZ,1,RCR,0)),RCSEQ=$P(RCZ0,U)
"RTN","RCDPEMA",15,0)
 . ;Check first line for prefix to see if ERA line is valid for auto-post
"RTN","RCDPEMA",16,0)
 . I RCSEQ?1N.N,$P(RCZ0,U,9),$P($G(RCLINES($P(RCZ0,U,9))),U) S SEQLINES(RCSEQ)=""
"RTN","RCDPEMA",17,0)
 . ;Skip WORKLIST lines that do not need associated receipt detail
"RTN","RCDPEMA",18,0)
 . Q:'$D(SEQLINES(RCSEQ\1))
"RTN","RCDPEMA",19,0)
 . I RCSEQ'["." S RCSPL(+RCZ0)=$P(RCZ0,U,9) Q
"RTN","RCDPEMA",20,0)
 . I $S(+$P(RCZ0,U,3)=0:$P($G(^RCY(344.49,RCRZ,0)),U,3),1:$P(RCZ0,U,3)<0) S RCSPL(RCZ0\1,+RCZ0)=RCZ0 Q
"RTN","RCDPEMA",21,0)
 . S RCTRANDA=$$ADDTRAN^RCDPURET(RECTDA1)
"RTN","RCDPEMA",22,0)
 . ;
"RTN","RCDPEMA",23,0)
 . I RCTRANDA'>0 D  Q  ; Error adding receipt detail - PRCA*4.5*318
"RTN","RCDPEMA",24,0)
 .. S RCER(1)=$$SETERR^RCDPEM0(1) ; PRCA*4.5*318 - pass RCPROC value to $$SETERR 
"RTN","RCDPEMA",25,0)
 .. S RCER($O(RCER(""),-1)+1)="  NO DETAIL LINE ADDED TO RECEIPT "_$P($G(^RCY(344,RECTDA1,0)),U)_" FOR LINE #"_$P(RCZ0,U)_" IN EEOB WORKLIST SCRATCH PAD"
"RTN","RCDPEMA",26,0)
 . ;
"RTN","RCDPEMA",27,0)
 . ;Store receipt line detail
"RTN","RCDPEMA",28,0)
 . D DET(RCRZ,RCR,RECTDA1,RCTRANDA)
"RTN","RCDPEMA",29,0)
 . S RCSPL(RCZ0\1,+RCZ0)=RCZ0
"RTN","RCDPEMA",30,0)
 ;
"RTN","RCDPEMA",31,0)
 ; Update A/R CORRECTED PAYMENT multiple with apportionment for split lines
"RTN","RCDPEMA",32,0)
 S Z=0 F  S Z=$O(RCSPL(Z)) Q:'Z  S RCQ=+$G(RCSPL(Z)) I RCQ D
"RTN","RCDPEMA",33,0)
 .; Move EEOB if one claim entered-changed 10/19/11-see +25^RCDPEWL8
"RTN","RCDPEMA",34,0)
 . S Z1=$O(RCSPL(Z,"")) Q:Z1=""
"RTN","RCDPEMA",35,0)
 . I $O(RCSPL(Z,""),-1)=Z1,'$$SPLIT(Z,Z1,RCERA) Q  ; No split occurred
"RTN","RCDPEMA",36,0)
 . S Z1=0 F  S Z1=$O(RCSPL(Z,Z1)) Q:'Z1  S Z0=$G(RCSPL(Z,Z1)) D
"RTN","RCDPEMA",37,0)
 .. S Q=+$P($G(^RCY(344.4,RCRZ,1,RCQ,0)),U,2) ; EOB detail rec
"RTN","RCDPEMA",38,0)
 .. Q:'Q
"RTN","RCDPEMA",39,0)
 .. I '$P(Z0,U,7)!($P(Z0,U,2)="") D  ; Suspense
"RTN","RCDPEMA",40,0)
 ... D SPL1^IBCEOBAR(Q,$S($P(Z0,U,2)="":"NO BILL",1:$P(Z0,U,2)),"",$P(Z0,U,6)) ; IA 4050
"RTN","RCDPEMA",41,0)
 .. E  D
"RTN","RCDPEMA",42,0)
 ... D SPL1^IBCEOBAR(Q,$P(Z0,U,2),$P(Z0,U,7),$P(Z0,U,6)) ; Add the split bill # ; IA 4050
"RTN","RCDPEMA",43,0)
 . ; BEGIN - PRCA*4.5*321
"RTN","RCDPEMA",44,0)
 . ;Move/Copy/Remove EEOB detail for split line
"RTN","RCDPEMA",45,0)
 . N CLAIM,IEN3611,RCSPLIT,RCSUB,RCZSAV
"RTN","RCDPEMA",46,0)
 . ; Sub-array of split claim detail for individual line
"RTN","RCDPEMA",47,0)
 . M RCSPLIT=RCSPL(Z)
"RTN","RCDPEMA",48,0)
 . ; Protect Z subscript variable from overwrite by triggers
"RTN","RCDPEMA",49,0)
 . S RCZSAV=Z
"RTN","RCDPEMA",50,0)
 . ; Get scratchpad line number for this ERA line
"RTN","RCDPEMA",51,0)
 . S RCSUB=$O(^RCY(344.49,RCRZ,1,"ASEQ",Z,""))
"RTN","RCDPEMA",52,0)
 . ; Original claim number from Scratchpad line
"RTN","RCDPEMA",53,0)
 . S CLAIM=$$GET1^DIQ(344.491,RCSUB_","_RCRZ_",",.02)
"RTN","RCDPEMA",54,0)
 . ; EOB for original claim from ERA line
"RTN","RCDPEMA",55,0)
 . S IEN3611=$$GET1^DIQ(344.41,RCQ_","_RCRZ_",",.02,"I")
"RTN","RCDPEMA",56,0)
 . ; Automatic Move/Copy/Remove EOB
"RTN","RCDPEMA",57,0)
 . I $$AUTO^RCDPEM5(CLAIM,.RCSPLIT,RCERA,"A",IEN3611)
"RTN","RCDPEMA",58,0)
 . ; Restore Z
"RTN","RCDPEMA",59,0)
 . S Z=RCZSAV
"RTN","RCDPEMA",60,0)
 . ; END  - PRCA*4.5*321 ;
"RTN","RCDPEMA",61,0)
 Q
"RTN","RCDPEMA",62,0)
 ;
"RTN","RCDPEMA",63,0)
SPLIT(Z,Z1,RCERA) ;Check if worklist was split to single claim
"RTN","RCDPEMA",64,0)
 N SUB,NBILL,OBILL
"RTN","RCDPEMA",65,0)
 ;Find split line in scratchpad
"RTN","RCDPEMA",66,0)
 S SUB=$O(^RCY(344.49,RCERA,1,"B",Z1,"")) Q:'SUB 0
"RTN","RCDPEMA",67,0)
 ;Get original claim number from scratchpad
"RTN","RCDPEMA",68,0)
 S OBILL=$P($G(^RCY(344.49,RCERA,1,SUB-1,0)),U,2)
"RTN","RCDPEMA",69,0)
 ;New claim number
"RTN","RCDPEMA",70,0)
 S NBILL=$P(RCSPL(Z,Z1),U,2)
"RTN","RCDPEMA",71,0)
 ;If new and old claim are not the same this is a move via split
"RTN","RCDPEMA",72,0)
 I OBILL'="",OBILL'=NBILL Q 1
"RTN","RCDPEMA",73,0)
 ;Otherwise this is not a split
"RTN","RCDPEMA",74,0)
 Q 0
"RTN","RCDPEMA",75,0)
 ;
"RTN","RCDPEMA",76,0)
DET(RCZ,RCR,RECTDA1,RCTRANDA) ; Store receipt detail
"RTN","RCDPEMA",77,0)
 ; RCZ = ien of entry file 344.49
"RTN","RCDPEMA",78,0)
 ; RCR = ien of entry in file 344.491
"RTN","RCDPEMA",79,0)
 ; RECTDA1 = ien of entry in file 344
"RTN","RCDPEMA",80,0)
 ; RCTRANDA = ien of entry in subfile 344.01
"RTN","RCDPEMA",81,0)
 ;
"RTN","RCDPEMA",82,0)
 N DIE,DA,DR,X,Y,Z,RCUP,RCCOM,RCZ0,RC0
"RTN","RCDPEMA",83,0)
 S RC0=$G(^RCY(344.49,RCZ,0))
"RTN","RCDPEMA",84,0)
 S RCZ0=$G(^RCY(344.49,RCZ,1,RCR,0))
"RTN","RCDPEMA",85,0)
 S DR="",RCUP=+$O(^RCY(344.49,RCZ,1,"B",+RCZ0/1,0)),RCUP=$G(^RCY(344.49,RCZ,1,RCUP,0))
"RTN","RCDPEMA",86,0)
 I $P(RCZ0,U,7) S DR=".09////^S X="_+$P(RCZ0,U,7)_"_$C(59)_""PRCA(430,"";"
"RTN","RCDPEMA",87,0)
 S DR=DR_".04////"_(+$P(RCZ0,U,3))_";.27////"_RCR_";"
"RTN","RCDPEMA",88,0)
 I $P(RC0,U,5)'="" S DR=DR_".1////"_$P(RC0,U,5)_";"
"RTN","RCDPEMA",89,0)
 I $P(RC0,U,6)'="" S DR=DR_".08////"_$P(RC0,U,6)_";"
"RTN","RCDPEMA",90,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCZ,1,RCR,1,Z)) Q:'Z  I $P($G(^(Z,0)),U,5)=1 S DR=DR_".28////1;" Q  ; Update receipt line with dec adj flag
"RTN","RCDPEMA",91,0)
 S RCCOM=$P(RCZ0,U,10)
"RTN","RCDPEMA",92,0)
 I $P(RCUP,U,2)["**ADJ" S RCCOM=RCCOM_$S(RCCOM'="":"/",1:"")_$S($P($P(RCUP,U,2),"ADJ",2):"ERA adjustment - no bill referenced",1:"Total of EFT mismatched to ERA")
"RTN","RCDPEMA",93,0)
 I RCCOM]"" S DR=DR_"1.02////"_$E(RCCOM,1,60)_";"
"RTN","RCDPEMA",94,0)
 I $P($G(^RCY(344.49,RCZ,0)),U,4)'="" S DR=DR_".07////"_$P($G(^RCY(344.49,RCZ,0)),U,4)_";"
"RTN","RCDPEMA",95,0)
 S DA(1)=RECTDA1,DA=RCTRANDA,DIE="^RCY(344,"_DA(1)_",1,"
"RTN","RCDPEMA",96,0)
 D ^DIE
"RTN","RCDPEMA",97,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPEMA",98,0)
 D:RCCOM]"" AUDIT^RCDPECH(RECTDA1,RCTRANDA,RCZ,RCR)
"RTN","RCDPEMA",99,0)
 Q
"RTN","RCDPEMA",100,0)
 ;
"RTN","RCDPEMA",101,0)
BLDRCPT(RCERA) ; Create a receipt for Auto Posting ERA with multiple Receipts - alpha char at the 10th character
"RTN","RCDPEMA",102,0)
 ; LAYGO new entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPEMA",103,0)
 ; input - RCERA = Pointer to 344.4
"RTN","RCDPEMA",104,0)
 ; returns new IEN on success, else zero
"RTN","RCDPEMA",105,0)
 ; called by auto-post process (RCDPEAP)
"RTN","RCDPEMA",106,0)
 ;
"RTN","RCDPEMA",107,0)
 N RECEIPT,TYPE,LASTREC
"RTN","RCDPEMA",108,0)
 S TYPE=$E($G(^RC(341.1,+$O(^RC(341.1,"AC",14,0)),0)))  ; ^RC(341.1,0) = AR EVENT TYPE
"RTN","RCDPEMA",109,0)
 ; retrieve the last receipt recorded on the ERA (if it exists)
"RTN","RCDPEMA",110,0)
 S LASTREC=$$GETREC(RCERA)
"RTN","RCDPEMA",111,0)
 ; Make sure last receipt for the ERA is 10-chars long and the last char is between A - Y (can't be Z),
"RTN","RCDPEMA",112,0)
 ; Otherwise grab a new number and append "A"
"RTN","RCDPEMA",113,0)
 I LASTREC'="",$L(LASTREC)=10,$A($E(LASTREC,10))>64,$A($E(LASTREC,10))<90 D
"RTN","RCDPEMA",114,0)
 . S RECEIPT=$E(LASTREC,1,9)_$C($A($E(LASTREC,10))+1)
"RTN","RCDPEMA",115,0)
 E  D
"RTN","RCDPEMA",116,0)
 . S RECEIPT=$$NEXT^RCDPUREC(TYPE_$E(DT,2,7))_"A"
"RTN","RCDPEMA",117,0)
 ;
"RTN","RCDPEMA",118,0)
 ; Prevents duplicate Receipt # entries from being filed
"RTN","RCDPEMA",119,0)
 F  Q:'$D(^RCY(344,"B",RECEIPT))  D
"RTN","RCDPEMA",120,0)
 . S RECEIPT=$E(RECEIPT,1)_$E(1000001+$E(RECEIPT,2,7),2,7)_$E(RECEIPT,8,9)_"A"
"RTN","RCDPEMA",121,0)
 ;
"RTN","RCDPEMA",122,0)
 L +^RCY(344,"B",RECEIPT):DILOCKTM E  Q 0  ; if LOCK timeout return zero
"RTN","RCDPEMA",123,0)
 ;
"RTN","RCDPEMA",124,0)
 ; add entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPEMA",125,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPEMA",126,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPEMA",127,0)
 ;  .02 = opened by                  .03 = date opened = transmission date
"RTN","RCDPEMA",128,0)
 ;  .04 = type of payment           
"RTN","RCDPEMA",129,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPEMA",130,0)
 S DIC("DR")=".02////"_DUZ_";.03///"_DT_";.04////14;.14////1;"
"RTN","RCDPEMA",131,0)
 S X=RECEIPT
"RTN","RCDPEMA",132,0)
 D FILE^DICN
"RTN","RCDPEMA",133,0)
 L -^RCY(344,"B",RECEIPT)
"RTN","RCDPEMA",134,0)
 I Y>0 Q +Y  ; Y set by DICN, return new IEN
"RTN","RCDPEMA",135,0)
 Q 0  ; entry not created
"RTN","RCDPEMA",136,0)
 ;
"RTN","RCDPEMA",137,0)
GETREC(RCERA) ; returns the receipt number
"RTN","RCDPEMA",138,0)
 ; input - RCERA = ien of entry in 344.4
"RTN","RCDPEMA",139,0)
 ; output - returns the receipt number in external form
"RTN","RCDPEMA",140,0)
 N X,RECEIPT
"RTN","RCDPEMA",141,0)
 S RECEIPT=""
"RTN","RCDPEMA",142,0)
 S X=$O(^RCY(344.4,RCERA,1,"RECEIPT",""),-1)  ; get last RECEIPT ien from 344.41 subfile
"RTN","RCDPEMA",143,0)
 S:X RECEIPT=$P($G(^RCY(344,X,0)),U)  ; get external form of receipt  
"RTN","RCDPEMA",144,0)
 Q RECEIPT
"RTN","RCDPENR2")
0^29^B257719505
"RTN","RCDPENR2",1,0)
RCDPENR2 ;ALB/SAB - EPay National Reports - ERA/EFT Trending Report ;12/10/14
"RTN","RCDPENR2",2,0)
 ;;4.5;Accounts Receivable;**304,321**;Mar 20, 1995;Build 48
"RTN","RCDPENR2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR2",4,0)
 ;
"RTN","RCDPENR2",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR2",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR2",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR2",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR2",9,0)
 ;Use DIVISION^VAUTOMA via Controlled IA 664
"RTN","RCDPENR2",10,0)
 ;
"RTN","RCDPENR2",11,0)
 Q
"RTN","RCDPENR2",12,0)
 ;
"RTN","RCDPENR2",13,0)
 ;
"RTN","RCDPENR2",14,0)
EFTERA()  ;  EFT/ERA TRENDING REPORT
"RTN","RCDPENR2",15,0)
 ;
"RTN","RCDPENR2",16,0)
 N DIRUT,DIROUT,DTOUT,DUOUT,X,Y,POP
"RTN","RCDPENR2",17,0)
 N RCBGDT,RCDATA,RCDATE,RCDISP,RCENDDT,RCPYRLST,RCSDT,RCEDT,RCRQDIV,RCRPT
"RTN","RCDPENR2",18,0)
 N RCTIN,RCDIV,RCEXCEL,RCEX,RCPAYR,RCTINR
"RTN","RCDPENR2",19,0)
 ;
"RTN","RCDPENR2",20,0)
 ; Alert software to display to screen
"RTN","RCDPENR2",21,0)
 S RCDISP=1
"RTN","RCDPENR2",22,0)
 ;
"RTN","RCDPENR2",23,0)
 ; Ask for Division
"RTN","RCDPENR2",24,0)
 S RCRQDIV=$$GETDIV(.RCDIV)
"RTN","RCDPENR2",25,0)
 Q:RCRQDIV=-1
"RTN","RCDPENR2",26,0)
 ;
"RTN","RCDPENR2",27,0)
 ; Ask the user for all payers or range of payers
"RTN","RCDPENR2",28,0)
 S RCEX=$$GETPAY^RCDPRU(.RCPAYR) Q:'RCEX
"RTN","RCDPENR2",29,0)
 Q:'RCEX
"RTN","RCDPENR2",30,0)
 S RCPYRLST("START")=$P($G(RCPAYR("START")),U,4),RCPYRLST("END")=$P($G(RCPAYR("END")),U,4)
"RTN","RCDPENR2",31,0)
 ;
"RTN","RCDPENR2",32,0)
 ; Ask the user for all payers or range of payers by Tin
"RTN","RCDPENR2",33,0)
 S RCEX=$$GETTIN^RCDPRU(.RCTINR)   ;Get the list of payers using their TIN's
"RTN","RCDPENR2",34,0)
 Q:'RCEX
"RTN","RCDPENR2",35,0)
 S RCPYRLST("TIN","START")=$P($G(RCTINR("START")),U,2),RCPYRLST("TIN","END")=$P($G(RCTINR("END")),U,2)
"RTN","RCDPENR2",36,0)
 Q:$D(RCPYRLST("QUIT"))
"RTN","RCDPENR2",37,0)
 ;
"RTN","RCDPENR2",38,0)
 ; Ask the user for rate type
"RTN","RCDPENR2",39,0)
 S RCRATE=$$GETRATE()
"RTN","RCDPENR2",40,0)
 Q:RCRATE=-1
"RTN","RCDPENR2",41,0)
 ;
"RTN","RCDPENR2",42,0)
 ; Ask the user for report type, with a prompt for the main report.
"RTN","RCDPENR2",43,0)
 S RCRPT=$$GETRPT(1)
"RTN","RCDPENR2",44,0)
 Q:RCRPT=-1
"RTN","RCDPENR2",45,0)
 ;
"RTN","RCDPENR2",46,0)
 ; Retrieve start date
"RTN","RCDPENR2",47,0)
 S RCBGDT=$$GETSDATE()
"RTN","RCDPENR2",48,0)
 Q:RCBGDT=-1
"RTN","RCDPENR2",49,0)
 ;
"RTN","RCDPENR2",50,0)
 ; Retrieve end date.  Send user start date as the lower bound.
"RTN","RCDPENR2",51,0)
 S RCENDDT=$$GETEDATE(RCBGDT)
"RTN","RCDPENR2",52,0)
 Q:RCENDDT=-1
"RTN","RCDPENR2",53,0)
 ;
"RTN","RCDPENR2",54,0)
 ;If the user is running the main report, ask if they wish to export to Excel
"RTN","RCDPENR2",55,0)
 S RCEXCEL=0
"RTN","RCDPENR2",56,0)
 S:RCRPT="M" RCEXCEL=$$DISPTY^RCDPRU()
"RTN","RCDPENR2",57,0)
 D:RCEXCEL INFO^RCDPRU
"RTN","RCDPENR2",58,0)
 I 'RCEXCEL,(RCRPT="M") W !!,"This report requires 132 columns.",!!
"RTN","RCDPENR2",59,0)
 D AUTO(1,RCBGDT,RCENDDT,.RCPYRLST,RCRQDIV,RCRPT,RCEXCEL,RCRATE,.RCDIV)
"RTN","RCDPENR2",60,0)
 Q
"RTN","RCDPENR2",61,0)
 ;
"RTN","RCDPENR2",62,0)
AUTO(RCDISP,RCBGDT,RCENDDT,RCPYRLST,RCRQDIV,RCRPT,RCEXCEL,RCRATE,RCDIV) ;
"RTN","RCDPENR2",63,0)
 ; RCDISP - Display results to screen or archive file flag
"RTN","RCDPENR2",64,0)
 ; RCBGDT - begin date of the report
"RTN","RCDPENR2",65,0)
 ; RCENDDT - End date of the report
"RTN","RCDPENR2",66,0)
 ; RCPYRLST - Payers to report on (All, range, or single payer)
"RTN","RCDPENR2",67,0)
 ; RCRQDIV - Division to report on - (A)ll or a single division
"RTN","RCDPENR2",68,0)
 ; RCRPT - (M)ain, (S)ummary or (G)rand Total Report
"RTN","RCDPENR2",69,0)
 ; RCEXCEL - Flag to indicate output in "^" delimited format
"RTN","RCDPENR2",70,0)
 ; RCRATE - Billing Rate Type flag
"RTN","RCDPENR2",71,0)
 ; RCDIV - Divisions to report on.
"RTN","RCDPENR2",72,0)
 ;
"RTN","RCDPENR2",73,0)
 ;Select output device
"RTN","RCDPENR2",74,0)
 W !
"RTN","RCDPENR2",75,0)
 I RCDISP S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPENR2",76,0)
 ;Option to queue
"RTN","RCDPENR2",77,0)
 I 'RCDISP,$D(IO("Q")) D  Q
"RTN","RCDPENR2",78,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPENR2",79,0)
 .S ZTRTN="REPORT^RCDPENR2"
"RTN","RCDPENR2",80,0)
 .S ZTDESC="EFT/ERA Trending Report"
"RTN","RCDPENR2",81,0)
 .S ZTSAVE("RC*")=""
"RTN","RCDPENR2",82,0)
 .D ^%ZTLOAD
"RTN","RCDPENR2",83,0)
 .I $D(ZTSK) W !!,"Task number "_ZTSK_" has been queued."
"RTN","RCDPENR2",84,0)
 .E  W !!,"Unable to queue this job."
"RTN","RCDPENR2",85,0)
 .K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPENR2",86,0)
 ;
"RTN","RCDPENR2",87,0)
 ;Compile and Print Report
"RTN","RCDPENR2",88,0)
 D REPORT
"RTN","RCDPENR2",89,0)
 Q
"RTN","RCDPENR2",90,0)
 ;
"RTN","RCDPENR2",91,0)
REPORT   ; Trace the ERA file for the given date range
"RTN","RCDPENR2",92,0)
 ;
"RTN","RCDPENR2",93,0)
 N RCPYRS,RCINS,RCDATA,RCDTLDT,RCDTLIEN,RCIEN,RCEOB,RCBILLNO,RCBATCH,RCTYPE,RCPHARM,RCPYRFLG,RCPYALL,RCTINALL
"RTN","RCDPENR2",94,0)
 ;
"RTN","RCDPENR2",95,0)
 ;Note: RCPYALL an RCTINALL are used in tag HEADER to determine header output.
"RTN","RCDPENR2",96,0)
 ;
"RTN","RCDPENR2",97,0)
 ; Clear temp arrays
"RTN","RCDPENR2",98,0)
 K ^TMP("RCDPEADP",$J),^TMP("RCDPENR2",$J)
"RTN","RCDPENR2",99,0)
 ;
"RTN","RCDPENR2",100,0)
 ; Compile list of divisions
"RTN","RCDPENR2",101,0)
 D DIV(.RCDIV)
"RTN","RCDPENR2",102,0)
 ;
"RTN","RCDPENR2",103,0)
 ; Compile the list of payers
"RTN","RCDPENR2",104,0)
 ; by name
"RTN","RCDPENR2",105,0)
 D PYRARY^RCDPENRU(RCPYRLST("START"),RCPYRLST("END"),1)  ; use insurance file payer list
"RTN","RCDPENR2",106,0)
 ;
"RTN","RCDPENR2",107,0)
 ; and by TIN
"RTN","RCDPENR2",108,0)
 D TINARY^RCDPENR4(RCPYRLST("TIN","START"),RCPYRLST("TIN","END"))  ; use insurance file payer list
"RTN","RCDPENR2",109,0)
 ;
"RTN","RCDPENR2",110,0)
 ; Set printout parameters
"RTN","RCDPENR2",111,0)
 I $D(^TMP("RCDPEADP",$J,"INS","A")) S RCPYALL=1
"RTN","RCDPENR2",112,0)
 I $D(^TMP("RCDPEADP",$J,"TIN","A")) S RCTINALL=1
"RTN","RCDPENR2",113,0)
 ;
"RTN","RCDPENR2",114,0)
 ; Now find only those payers in both lists
"RTN","RCDPENR2",115,0)
 S RCPYRFLG=$$INTRSCT^RCDPENR4()
"RTN","RCDPENR2",116,0)
 ;
"RTN","RCDPENR2",117,0)
 ; If no payers, quit.
"RTN","RCDPENR2",118,0)
 Q:'RCPYRFLG 
"RTN","RCDPENR2",119,0)
 ;
"RTN","RCDPENR2",120,0)
 ; Gather raw data
"RTN","RCDPENR2",121,0)
 D GETEFT^RCDPENR3(RCBGDT,RCENDDT,RCRATE)
"RTN","RCDPENR2",122,0)
 D GETERA^RCDPENR4(RCBGDT,RCENDDT,RCRATE)
"RTN","RCDPENR2",123,0)
 ;
"RTN","RCDPENR2",124,0)
 ;Check for data captures
"RTN","RCDPENR2",125,0)
 I '$D(^TMP("RCDPENR2",$J,"MAIN")) D  Q
"RTN","RCDPENR2",126,0)
 .  W !!,"There was no data available for the requested report.  Please try again."
"RTN","RCDPENR2",127,0)
 ;
"RTN","RCDPENR2",128,0)
 ;Generate the statistics if any data captured
"RTN","RCDPENR2",129,0)
 D COMPILE^RCDPENR3
"RTN","RCDPENR2",130,0)
 ;
"RTN","RCDPENR2",131,0)
 ; Print out the results
"RTN","RCDPENR2",132,0)
 D PRINT(RCRPT)
"RTN","RCDPENR2",133,0)
 ;
"RTN","RCDPENR2",134,0)
 ;Clean up temp array afterwards
"RTN","RCDPENR2",135,0)
 K ^TMP("RCDPENR2",$J)
"RTN","RCDPENR2",136,0)
 Q 
"RTN","RCDPENR2",137,0)
 ;
"RTN","RCDPENR2",138,0)
 ;Print the results.
"RTN","RCDPENR2",139,0)
PRINT(RCSUMFLG) ;Print the results
"RTN","RCDPENR2",140,0)
 ;
"RTN","RCDPENR2",141,0)
 ; Temp Array format
"RTN","RCDPENR2",142,0)
 ;   ^TMP("RCDPENR1",$J,"TOT")=# Medical 835's ^ # Pharmacy 835's ^
"RTN","RCDPENR2",143,0)
 N RCSTOP,RCPAGE,RCLINE,RCRUNDT,RCRPIEN,RCSUBJ,RCXMZ
"RTN","RCDPENR2",144,0)
 ;
"RTN","RCDPENR2",145,0)
 ;set separator print line.
"RTN","RCDPENR2",146,0)
 S RCLINE="",$P(RCLINE,"-",IOM)=""
"RTN","RCDPENR2",147,0)
 ;
"RTN","RCDPENR2",148,0)
 ; Init the stop flag, page count
"RTN","RCDPENR2",149,0)
 S RCSTOP=0,RCPAGE=0
"RTN","RCDPENR2",150,0)
 ;
"RTN","RCDPENR2",151,0)
 ; Set the Run date for the report
"RTN","RCDPENR2",152,0)
 S RCRUNDT=$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPENR2",153,0)
 ;
"RTN","RCDPENR2",154,0)
 ; Open the device
"RTN","RCDPENR2",155,0)
 I RCDISP U IO
"RTN","RCDPENR2",156,0)
 ;
"RTN","RCDPENR2",157,0)
 I 'RCDISP D  Q:'RCRPIEN
"RTN","RCDPENR2",158,0)
 . S RCRPIEN=$$INITARCH^RCDPENR1("EFT/ERA TRENDING")
"RTN","RCDPENR2",159,0)
 ;
"RTN","RCDPENR2",160,0)
 ; Display Header
"RTN","RCDPENR2",161,0)
 D HEADER
"RTN","RCDPENR2",162,0)
 ;
"RTN","RCDPENR2",163,0)
 ; Display the Main Level report 
"RTN","RCDPENR2",164,0)
 I RCSUMFLG="M" D
"RTN","RCDPENR2",165,0)
 .  S RCSTOP=$$MAIN()
"RTN","RCDPENR2",166,0)
 Q:RCSTOP
"RTN","RCDPENR2",167,0)
 ;
"RTN","RCDPENR2",168,0)
 S:RCSUMFLG="M" RCSUMFLG="S"   ; Reset summary flag to prevent Main Column headers from appearing.
"RTN","RCDPENR2",169,0)
 ;
"RTN","RCDPENR2",170,0)
 ; Display the Payer/TIN summary information
"RTN","RCDPENR2",171,0)
 I RCSUMFLG'="G" S RCSTOP=$$SUMMARY()
"RTN","RCDPENR2",172,0)
 Q:RCSTOP
"RTN","RCDPENR2",173,0)
 ;
"RTN","RCDPENR2",174,0)
 ; Display the grand total at the end
"RTN","RCDPENR2",175,0)
 S RCSTOP=$$GRAND()
"RTN","RCDPENR2",176,0)
 Q:RCSTOP
"RTN","RCDPENR2",177,0)
 ;
"RTN","RCDPENR2",178,0)
 ; If not displaying to screen, send
"RTN","RCDPENR2",179,0)
 I 'RCDISP D
"RTN","RCDPENR2",180,0)
 . S RCSUBJ="ERA/EFT TRENDING REPORT"
"RTN","RCDPENR2",181,0)
 . S RCXMZ=$$XM^RCDPENRU(RCRPIEN,RCBGDT,RCENDDT,RCSUBJ)
"RTN","RCDPENR2",182,0)
 ;
"RTN","RCDPENR2",183,0)
 ;Report finished
"RTN","RCDPENR2",184,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",185,0)
 I RCDISP W !,$$ENDORPRT^RCDPEARL
"RTN","RCDPENR2",186,0)
 W !
"RTN","RCDPENR2",187,0)
 ;
"RTN","RCDPENR2",188,0)
 ;Close device
"RTN","RCDPENR2",189,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPENR2",190,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPENR2",191,0)
 Q
"RTN","RCDPENR2",192,0)
 ;
"RTN","RCDPENR2",193,0)
HEADER ;Print the results
"RTN","RCDPENR2",194,0)
 ;
"RTN","RCDPENR2",195,0)
 ; Undeclared Parameters - RCDISP and RCRPIEN
"RTN","RCDPENR2",196,0)
 ;
"RTN","RCDPENR2",197,0)
 N RCDIVTXT,RCPYRTXT,RCTINTXT,RCSTR
"RTN","RCDPENR2",198,0)
 ;
"RTN","RCDPENR2",199,0)
 S RCDIVTXT=$$DIVTXT^RCDPENR1()
"RTN","RCDPENR2",200,0)
 S RCPYRTXT="ALL PAYERS" S:$G(RCPYALL)'=1 RCPYRTXT=$$PAYERTXT^RCDPENR1(344.6)
"RTN","RCDPENR2",201,0)
 S RCTINTXT="ALL TINS" S:$G(RCTINALL)'=1 RCTINTXT=$$TINTXT()
"RTN","RCDPENR2",202,0)
 ;
"RTN","RCDPENR2",203,0)
 S RCPAGE=RCPAGE+1
"RTN","RCDPENR2",204,0)
 I '+RCDISP D  Q
"RTN","RCDPENR2",205,0)
 . S RCSTR="EFT/ERA TRENDING REPORT^PAGE "_$J(RCPAGE,5)
"RTN","RCDPENR2",206,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",207,0)
 . S RCSTR="^"_RCDIVTXT_"^"_RCPYRTXT_"^"_RCTINTXT
"RTN","RCDPENR2",208,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",209,0)
 . S RCSTR="^"_"DATE RANGE: "_$$FMTE^XLFDT(RCBGDT,2)_" - "_$$FMTE^XLFDT(RCENDDT,2)_"^"_"RUN DATE: "_RCRUNDT
"RTN","RCDPENR2",210,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",211,0)
 . D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR2",212,0)
 W @IOF,"EFT/ERA TRENDING REPORT"
"RTN","RCDPENR2",213,0)
 I '+$G(RCEXCEL) D  Q
"RTN","RCDPENR2",214,0)
 . W ?70,"PAGE ",$J(RCPAGE,5),!
"RTN","RCDPENR2",215,0)
 . W ?5,$E(RCDIVTXT,1,23),?30,$E(RCPYRTXT,1,28),?60,$E(RCTINTXT,1,20),!
"RTN","RCDPENR2",216,0)
 . W ?5,"DATE RANGE: ",$$FMTE^XLFDT(RCBGDT,2)," - ",$$FMTE^XLFDT(RCENDDT,2)
"RTN","RCDPENR2",217,0)
 . W ?51,"RUN DATE: ",RCRUNDT,!
"RTN","RCDPENR2",218,0)
 . W RCLINE,!
"RTN","RCDPENR2",219,0)
 I +$G(RCEXCEL) D
"RTN","RCDPENR2",220,0)
 . W "^PAGE ",$J(RCPAGE,5),!
"RTN","RCDPENR2",221,0)
 . W "^",RCDIVTXT,"^",RCPYRTXT,"^",RCTINTXT,!
"RTN","RCDPENR2",222,0)
 . W "^","DATE RANGE: ",$$FMTE^XLFDT(RCBGDT,2)," - ",$$FMTE^XLFDT(RCENDDT,2)
"RTN","RCDPENR2",223,0)
 . W "^","RUN DATE: ",RCRUNDT,!
"RTN","RCDPENR2",224,0)
 . W RCLINE,!
"RTN","RCDPENR2",225,0)
 ;
"RTN","RCDPENR2",226,0)
 ;Re-display the column headers
"RTN","RCDPENR2",227,0)
 I (RCSUMFLG="M"),(RCPAGE'=1) D COLHEAD
"RTN","RCDPENR2",228,0)
 Q
"RTN","RCDPENR2",229,0)
 ;
"RTN","RCDPENR2",230,0)
 ;Print the Detailed portion of the report
"RTN","RCDPENR2",231,0)
MAIN() ;
"RTN","RCDPENR2",232,0)
 ;
"RTN","RCDPENR2",233,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCINSTIN,RCCLAIM,RCBILL
"RTN","RCDPENR2",234,0)
 N RCAMTBL,RCPAID,RCBILLDT,RCERADT,RCEFTDT,RCPOSTDT,RCTRACE,RCATPST,RCIDX,RCAMTPD
"RTN","RCDPENR2",235,0)
 N RCETRAN,RCERA,RCEOB,RCEFTNO,RCBEDY,RCEEDY,RCEPDY,RCBPDY,RCTOTDY,RCTMP,RCSTOP,RCIDX
"RTN","RCDPENR2",236,0)
 ;
"RTN","RCDPENR2",237,0)
 ; Print ERA/EFT combinations for each Insurance Company/Tin combination
"RTN","RCDPENR2",238,0)
 S RCINSTIN="",RCSTOP=0
"RTN","RCDPENR2",239,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN)) Q:RCINSTIN=""  D  Q:RCSTOP
"RTN","RCDPENR2",240,0)
 . S RCSTOP=$$PRINTINS(RCINSTIN)
"RTN","RCDPENR2",241,0)
 . Q:RCSTOP
"RTN","RCDPENR2",242,0)
 . F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",243,0)
 . . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",244,0)
 . . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",245,0)
 . . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",246,0)
 . . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",247,0)
 . . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",248,0)
 . . S RCSTOP=$$PRINTHDR(RCSTRING)
"RTN","RCDPENR2",249,0)
 . . Q:RCSTOP
"RTN","RCDPENR2",250,0)
 . . S RCCLAIM=""
"RTN","RCDPENR2",251,0)
 . . F  S RCCLAIM=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,I,RCCLAIM)) Q:RCCLAIM=""  D  Q:RCSTOP
"RTN","RCDPENR2",252,0)
 . . . I $Y>(IOSL-7) D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",253,0)
 . . . S RCDATA=$G(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,I,RCCLAIM))
"RTN","RCDPENR2",254,0)
 . . . I RCDATA="" D  Q
"RTN","RCDPENR2",255,0)
 . . . . W !,"No data captured for this section during the specified time period.",!
"RTN","RCDPENR2",256,0)
 . . . ;
"RTN","RCDPENR2",257,0)
 . . . ;Init display values for the days
"RTN","RCDPENR2",258,0)
 . . . S (RCBEDY,RCEEDY,RCEPDY,RCBPDY)=""
"RTN","RCDPENR2",259,0)
 . . . S RCBILL=$$GET1^DIQ(399,+RCCLAIM_",",".01","E")
"RTN","RCDPENR2",260,0)
 . . . I $P(RCDATA,U,9),$P(RCDATA,U,8) S RCBEDY=$$FMTH^XLFDT($P(RCDATA,U,9),1)-$$FMTH^XLFDT($P(RCDATA,U,8),1)
"RTN","RCDPENR2",261,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9) S RCEEDY=$$FMTH^XLFDT($P(RCDATA,U,10),1)-$$FMTH^XLFDT($P(RCDATA,U,9),1)
"RTN","RCDPENR2",262,0)
 . . . S RCIDX=$S($$FMTH^XLFDT($P(RCDATA,U,10),1)>$$FMTH^XLFDT($P(RCDATA,U,10),1):10,1:9)  ; Find the latest date between ERA and EFT
"RTN","RCDPENR2",263,0)
 . . . I $P(RCDATA,U,11),$P(RCDATA,U,RCIDX) S RCEPDY=$$FMTH^XLFDT($P(RCDATA,U,11),1)-$$FMTH^XLFDT($P(RCDATA,U,RCIDX),1)  ; Use latest date to determ days btw ERA/EFT and Posting
"RTN","RCDPENR2",264,0)
 . . . I $P(RCDATA,U,11),$P(RCDATA,U,8) S RCBPDY=$$FMTH^XLFDT($P(RCDATA,U,11),1)-$$FMTH^XLFDT($P(RCDATA,U,8),1)
"RTN","RCDPENR2",265,0)
 . . . I RCEXCEL D
"RTN","RCDPENR2",266,0)
 . . . . S RCTMP=RCBILL_"^"_$$FMTE^XLFDT($P(RCDATA,U,5),2)_"^"_$P(RCDATA,U,6)_"^"_$P(RCDATA,U,7)_"^"_$$FMTE^XLFDT($P(RCDATA,U,8),2)
"RTN","RCDPENR2",267,0)
 . . . . S RCTMP=RCTMP_"^"_$$FMTE^XLFDT($P(RCDATA,U,9),2)_"^"_$$FMTE^XLFDT($P(RCDATA,U,10),2)_"^"_$$FMTE^XLFDT($P(RCDATA,U,11),2)_"^"_$P(RCDATA,U,12)_"^"_$P(RCDATA,U,13)
"RTN","RCDPENR2",268,0)
 . . . . S RCTMP=RCTMP_"^"_$P(RCDATA,U,14)_"^"_$P(RCDATA,U,2)_"^"_$P(RCDATA,U,15)_"^"_$P(RCDATA,U,3)_"^"
"RTN","RCDPENR2",269,0)
 . . . . S RCTMP=RCTMP_RCBEDY_"^"_RCEEDY_"^"_RCEPDY_"^"_RCBPDY
"RTN","RCDPENR2",270,0)
 . . . . W RCTMP,!
"RTN","RCDPENR2",271,0)
 . . . I 'RCEXCEL D
"RTN","RCDPENR2",272,0)
 . . . . W RCBILL,?21,$$FMTE^XLFDT($P(RCDATA,U,5),2),?30,$J($P(RCDATA,U,6),10,2),?41,$J($P(RCDATA,U,7),10,2),?52,$$FMTE^XLFDT($P(RCDATA,U,8),2)
"RTN","RCDPENR2",273,0)
 . . . . W ?61,$$FMTE^XLFDT($P(RCDATA,U,9),2),?75,$$FMTE^XLFDT($P(RCDATA,U,10),2),?89,$$FMTE^XLFDT($P(RCDATA,U,11),2),?98,$P(RCDATA,U,12),?109,$P(RCDATA,U,13),!
"RTN","RCDPENR2",274,0)
 . . . . W ?5,$P(RCDATA,U,14),?17,$P(RCDATA,U,2),?28,$J($P(RCDATA,U,15),6),?39,$P(RCDATA,U,3),?50,$J(RCBEDY,8)
"RTN","RCDPENR2",275,0)
 . . . . W ?67,$J(RCEEDY,8),?83,$J(RCEPDY,8),?106,$J(RCBPDY,8),!
"RTN","RCDPENR2",276,0)
 . . W RCLINE,!
"RTN","RCDPENR2",277,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",278,0)
 ; Section break - ask user if they wish to continue...
"RTN","RCDPENR2",279,0)
 I +$G(RCEXCEL)=0 D
"RTN","RCDPENR2",280,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",281,0)
 . Q:RCSTOP
"RTN","RCDPENR2",282,0)
 . D HEADER
"RTN","RCDPENR2",283,0)
 ;
"RTN","RCDPENR2",284,0)
 Q RCSTOP
"RTN","RCDPENR2",285,0)
 ;
"RTN","RCDPENR2",286,0)
SUMMARY() ;Print the Payer Summary portion of the report
"RTN","RCDPENR2",287,0)
 ;
"RTN","RCDPENR2",288,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCSTOP,RCERAFLG,I
"RTN","RCDPENR2",289,0)
 ;
"RTN","RCDPENR2",290,0)
 ; Print ERA/EFT combinations for each Insurance Company/Tin combination
"RTN","RCDPENR2",291,0)
 S RCINSTIN="",RCSTOP=0
"RTN","RCDPENR2",292,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN)) Q:RCINSTIN=""  D  Q:RCSTOP
"RTN","RCDPENR2",293,0)
 . I $Y>(IOSL-7) D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",294,0)
 . D PRINTINS(RCINSTIN)
"RTN","RCDPENR2",295,0)
 . ; Print all 3 combinations
"RTN","RCDPENR2",296,0)
 . F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",297,0)
 . . S RCDATA=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I))
"RTN","RCDPENR2",298,0)
 . . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",299,0)
 . . S RCERAFLG=0
"RTN","RCDPENR2",300,0)
 . . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",301,0)
 . . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",302,0)
 . . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",303,0)
 . . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",304,0)
 . . I (RCEFTTXT="EFT"),(RCERATXT["ERA") S RCERAFLG=1
"RTN","RCDPENR2",305,0)
 . . D PRINTGT^RCDPENR3(RCSTRING,RCDATA,RCDISP,RCERAFLG,RCEXCEL)
"RTN","RCDPENR2",306,0)
 ;
"RTN","RCDPENR2",307,0)
 Q RCSTOP
"RTN","RCDPENR2",308,0)
 ;
"RTN","RCDPENR2",309,0)
 ;Total for all payers in report
"RTN","RCDPENR2",310,0)
GRAND() ;
"RTN","RCDPENR2",311,0)
 ;
"RTN","RCDPENR2",312,0)
 N RCERATYP,RCDATA,RCERATXT,RCSTRING,RCEFTTXT,RCEFT,RCERA,RCSTOP,RCERAFLG,I
"RTN","RCDPENR2",313,0)
 ;
"RTN","RCDPENR2",314,0)
 S RCSTOP=0
"RTN","RCDPENR2",315,0)
 ; Print the Grand Total Banner
"RTN","RCDPENR2",316,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER
"RTN","RCDPENR2",317,0)
 I RCSUMFLG'="G",RCDISP D
"RTN","RCDPENR2",318,0)
 . W !,"GRAND TOTALS ALL PAYERS",!!
"RTN","RCDPENR2",319,0)
 . W RCLINE,!
"RTN","RCDPENR2",320,0)
 ;
"RTN","RCDPENR2",321,0)
 ; Print all 3 EOB/Payment combinations
"RTN","RCDPENR2",322,0)
 F I=1:1:3 D  Q:RCSTOP
"RTN","RCDPENR2",323,0)
 . S RCDATA=$G(^TMP("RCDPENR2",$J,"GTOT",I))
"RTN","RCDPENR2",324,0)
 . S RCERATYP=$S(I=1:"EFT/ERA",I=2:"PAPER CHECK/ERA",1:"EFT/PAPER EOB")
"RTN","RCDPENR2",325,0)
 . S RCERAFLG=0
"RTN","RCDPENR2",326,0)
 . S RCEFTTXT=$P(RCERATYP,"/")
"RTN","RCDPENR2",327,0)
 . S RCERATXT=$P(RCERATYP,"/",2)
"RTN","RCDPENR2",328,0)
 . S RCEFT=$S(RCEFTTXT="EFT":"AN EFT",1:"A PAPER CHECK")
"RTN","RCDPENR2",329,0)
 . S RCSTRING=RCERATXT_" MATCHED TO "_RCEFT
"RTN","RCDPENR2",330,0)
 . I (RCEFTTXT="EFT"),(RCERATXT["ERA") S RCERAFLG=1
"RTN","RCDPENR2",331,0)
 . D PRINTGT^RCDPENR3(RCSTRING,RCDATA,RCDISP,RCERAFLG,RCEXCEL)
"RTN","RCDPENR2",332,0)
 ;
"RTN","RCDPENR2",333,0)
 Q RCSTOP
"RTN","RCDPENR2",334,0)
 ;
"RTN","RCDPENR2",335,0)
PRINTINS(RCINS) ; Print the insurance header line
"RTN","RCDPENR2",336,0)
 ; Input:   RCINS   - Payer Name/TIN to be displayed
"RTN","RCDPENR2",337,0)
 ;          RCLINE  - line of dashes used for separation
"RTN","RCDPENR2",338,0)
 ; Returns 1 - User quit out of report, 0 otherwise
"RTN","RCDPENR2",339,0)
 N RCSTOP,XX,YY,ZZ
"RTN","RCDPENR2",340,0)
 ;
"RTN","RCDPENR2",341,0)
 S RCSTOP=0
"RTN","RCDPENR2",342,0)
 I $Y>(IOSL-7) D
"RTN","RCDPENR2",343,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",344,0)
 . Q:RCSTOP
"RTN","RCDPENR2",345,0)
 . D HEADER
"RTN","RCDPENR2",346,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",347,0)
 W "PAYER NAME/TIN",!                       ; PRCA*4.5*321
"RTN","RCDPENR2",348,0)
 W " ",$$PAYTIN^RCDPRU2(RCINS,78),!         ; PRCA*4.5*321
"RTN","RCDPENR2",349,0)
 W RCLINE,!
"RTN","RCDPENR2",350,0)
 Q RCSTOP
"RTN","RCDPENR2",351,0)
 ;
"RTN","RCDPENR2",352,0)
 ;Print the Payment Method header lines
"RTN","RCDPENR2",353,0)
PRINTHDR(RCTITLE) ;
"RTN","RCDPENR2",354,0)
 ; Undeclared parameters
"RTN","RCDPENR2",355,0)
 ;   RCLINE - line of "-" for report formating
"RTN","RCDPENR2",356,0)
 ;   RCSUMFLG - Type of report (M=Main,S=Summary,G=Grand Total)
"RTN","RCDPENR2",357,0)
 ;   RCDISP - Is the report being email (0) or Printed (1)
"RTN","RCDPENR2",358,0)
 ;   RCRPIEN - IEN to store the report if emailing
"RTN","RCDPENR2",359,0)
 ;
"RTN","RCDPENR2",360,0)
 N RCBORDER,RCSTOP,RCSTR
"RTN","RCDPENR2",361,0)
 ;
"RTN","RCDPENR2",362,0)
 S RCBORDER="",$P(RCBORDER,"*",20)="",RCSTOP=0
"RTN","RCDPENR2",363,0)
 I $Y>(IOSL-7),RCDISP D
"RTN","RCDPENR2",364,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",365,0)
 . Q:RCSTOP
"RTN","RCDPENR2",366,0)
 . D HEADER
"RTN","RCDPENR2",367,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR2",368,0)
 ;
"RTN","RCDPENR2",369,0)
 ; Display report type being displayed
"RTN","RCDPENR2",370,0)
 I 'RCDISP D  Q
"RTN","RCDPENR2",371,0)
 . S RCSTR=RCBORDER_"     "_RCTITLE_"     "_RCBORDER
"RTN","RCDPENR2",372,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR2",373,0)
 . D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR2",374,0)
 I RCDISP D
"RTN","RCDPENR2",375,0)
 . W RCBORDER,"     ",RCTITLE,"     ",RCBORDER,!
"RTN","RCDPENR2",376,0)
 . W RCLINE,!
"RTN","RCDPENR2",377,0)
 ;
"RTN","RCDPENR2",378,0)
 D:RCSUMFLG="M" COLHEAD    ;display column headers
"RTN","RCDPENR2",379,0)
 ;
"RTN","RCDPENR2",380,0)
 Q RCSTOP
"RTN","RCDPENR2",381,0)
 ;
"RTN","RCDPENR2",382,0)
 ; Retrieve the Division
"RTN","RCDPENR2",383,0)
GETDIV(RCDIV) ;
"RTN","RCDPENR2",384,0)
 ;
"RTN","RCDPENR2",385,0)
 ; The use of DIVISION^VAUTOMA Supported by IA 1077
"RTN","RCDPENR2",386,0)
 ;
"RTN","RCDPENR2",387,0)
 N VAUTD
"RTN","RCDPENR2",388,0)
 D DIVISION^VAUTOMA
"RTN","RCDPENR2",389,0)
 I VAUTD=1 S RCDIV("A")="" Q 1
"RTN","RCDPENR2",390,0)
 I 'VAUTD&($D(VAUTD)'=11) Q -1
"RTN","RCDPENR2",391,0)
 M RCDIV=VAUTD
"RTN","RCDPENR2",392,0)
 Q 1
"RTN","RCDPENR2",393,0)
 ;
"RTN","RCDPENR2",394,0)
 ;Retrieve the Report Type
"RTN","RCDPENR2",395,0)
GETRATE() ;
"RTN","RCDPENR2",396,0)
 ;
"RTN","RCDPENR2",397,0)
 ;RCMNFLG - Ask to print the Main report (Detailed) report.  0=No, 1=Yes
"RTN","RCDPENR2",398,0)
 N X,Y,DIC,DTOUT,DUOUT
"RTN","RCDPENR2",399,0)
 ;
"RTN","RCDPENR2",400,0)
 S DIC="^DGCR(399.3,",DIC(0)="AEQMN"
"RTN","RCDPENR2",401,0)
 S DIC("S")="I $P(^(0),U,7)=""i"""
"RTN","RCDPENR2",402,0)
 D ^DIC K DIC
"RTN","RCDPENR2",403,0)
 Q +Y
"RTN","RCDPENR2",404,0)
 ;
"RTN","RCDPENR2",405,0)
 ;Retrieve the Report Type
"RTN","RCDPENR2",406,0)
GETRPT(RCMNFLG) ;
"RTN","RCDPENR2",407,0)
 ;
"RTN","RCDPENR2",408,0)
 ;RCMNFLG - Ask to print the Main report (Detailed) report.  0=No, 1=Yes
"RTN","RCDPENR2",409,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPENR2",410,0)
 ;
"RTN","RCDPENR2",411,0)
 ; Prompt with Main (EFT/ERA Trending report (from RCDPENR2))
"RTN","RCDPENR2",412,0)
 I $G(RCMNFLG) D
"RTN","RCDPENR2",413,0)
 . S DIR("A")="Print (M)AIN Report, (S)UMMARY by Payer or (G)RAND TOTALS ONLY: "
"RTN","RCDPENR2",414,0)
 . S DIR(0)="SA^M:MAIN;S:SUMMARY;G:GRAND TOTAL"
"RTN","RCDPENR2",415,0)
 ;
"RTN","RCDPENR2",416,0)
 ; Prompt w/o main (Volume Statistics report (from RCDPENR1))
"RTN","RCDPENR2",417,0)
 I '$G(RCMNFLG) D
"RTN","RCDPENR2",418,0)
 . S DIR("A")="(S)UMMARY by Payer or (G)RAND TOTALS ONLY: "
"RTN","RCDPENR2",419,0)
 . S DIR(0)="SA^S:SUMMARY;G:GRAND TOTAL"
"RTN","RCDPENR2",420,0)
 ;
"RTN","RCDPENR2",421,0)
 S DIR("?")="Select the type of report to Generate."
"RTN","RCDPENR2",422,0)
 S DIR("B")="G"
"RTN","RCDPENR2",423,0)
 D ^DIR K DIR
"RTN","RCDPENR2",424,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPENR2",425,0)
 Q Y
"RTN","RCDPENR2",426,0)
 ;
"RTN","RCDPENR2",427,0)
 ;
"RTN","RCDPENR2",428,0)
GETSDATE()  ;
"RTN","RCDPENR2",429,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCTODAY
"RTN","RCDPENR2",430,0)
 ;
"RTN","RCDPENR2",431,0)
 ;Assume the start date is 45 days prior to the end date
"RTN","RCDPENR2",432,0)
 ;
"RTN","RCDPENR2",433,0)
 ;Get the start date.  
"RTN","RCDPENR2",434,0)
 S RCTODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPENR2",435,0)
 S DIR("?")="ENTER THE EARLIEST DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPENR2",436,0)
 S DIR(0)="DA^:"_RCTODAY_":APE",DIR("A")="Start with DATE: "
"RTN","RCDPENR2",437,0)
 D ^DIR K DIR
"RTN","RCDPENR2",438,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPENR2",439,0)
 Q Y
"RTN","RCDPENR2",440,0)
 ;
"RTN","RCDPENR2",441,0)
 ; Retrieve the end date of the report from the user.
"RTN","RCDPENR2",442,0)
GETEDATE(RCBDATE)  ;
"RTN","RCDPENR2",443,0)
 ; RCBDATE - Begin date of the report.  Used as a lower bound
"RTN","RCDPENR2",444,0)
 ;
"RTN","RCDPENR2",445,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,RCTODAY
"RTN","RCDPENR2",446,0)
 ;
"RTN","RCDPENR2",447,0)
 ; Get the End date first.  Assume the end date is today.
"RTN","RCDPENR2",448,0)
 S RCTODAY=$P($$NOW^XLFDT,".")
"RTN","RCDPENR2",449,0)
 S DIR("?")="ENTER THE LATEST DATE TO INCLUDE ON THE REPORT"
"RTN","RCDPENR2",450,0)
 S DIR("B")=$$FMTE^XLFDT(RCTODAY,2)
"RTN","RCDPENR2",451,0)
 S DIR(0)="DAO^"_$G(RCBDATE)_":"_RCTODAY_":APE",DIR("A")="Go to DATE: " D ^DIR K DIR
"RTN","RCDPENR2",452,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPENR2",453,0)
 Q Y
"RTN","RCDPENR2",454,0)
 ; 
"RTN","RCDPENR2",455,0)
GETARPYR(RCTIN,RCPAY) ; Retrieve the Payer IEN from the RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPENR2",456,0)
 ; Input: RCTIN - Payer ID
"RTN","RCDPENR2",457,0)
 ;        RCPAY - Payer Name (optional)
"RTN","RCDPENR2",458,0)
 ; Return: Payer IEN (#344.6)
"RTN","RCDPENR2",459,0)
 ;
"RTN","RCDPENR2",460,0)
 N RCIEN,QUIT,ZZ
"RTN","RCDPENR2",461,0)
 S RCPAY=$G(RCPAY)
"RTN","RCDPENR2",462,0)
 ;
"RTN","RCDPENR2",463,0)
 ; Send the IEN entry in the file if the Payer is in it.  Otherwise, send 0.
"RTN","RCDPENR2",464,0)
 S RCIEN=0
"RTN","RCDPENR2",465,0)
 ;
"RTN","RCDPENR2",466,0)
 ; PRCA*4.5*321 - Add optional payer name to search to narrow down payer
"RTN","RCDPENR2",467,0)
 I RCPAY'="" D  ;
"RTN","RCDPENR2",468,0)
 . S ZZ="",QUIT=0
"RTN","RCDPENR2",469,0)
 . F  S ZZ=$O(^RCY(344.6,"C",RCTIN_" ",ZZ)) Q:ZZ=""  D  I RCIEN Q  ;
"RTN","RCDPENR2",470,0)
 . . I $$GET1^DIQ(344.6,ZZ_",",.01,"E")=RCPAY S RCIEN=ZZ
"RTN","RCDPENR2",471,0)
 ;
"RTN","RCDPENR2",472,0)
 I 'RCIEN D  ;
"RTN","RCDPENR2",473,0)
 . S RCIEN=$O(^RCY(344.6,"C",RCTIN_" ",""))
"RTN","RCDPENR2",474,0)
 ;
"RTN","RCDPENR2",475,0)
 Q +RCIEN
"RTN","RCDPENR2",476,0)
 ;
"RTN","RCDPENR2",477,0)
 ; Determine if the payer in the ERA or EFT should be included in the report.
"RTN","RCDPENR2",478,0)
INSCHK(RCINS) ;
"RTN","RCDPENR2",479,0)
 ;
"RTN","RCDPENR2",480,0)
 ;Send yes if all payers are being reported on.
"RTN","RCDPENR2",481,0)
 Q:$D(^TMP("RCDPENR2",$J,"INS","A")) 1
"RTN","RCDPENR2",482,0)
 ;
"RTN","RCDPENR2",483,0)
 ; Send yes if Payer is in the list to report on
"RTN","RCDPENR2",484,0)
 Q:$D(^TMP("RCDPENR2",$J,"INS",RCINS)) 1
"RTN","RCDPENR2",485,0)
 ;
"RTN","RCDPENR2",486,0)
 ; Otherwise, send no
"RTN","RCDPENR2",487,0)
 Q 0
"RTN","RCDPENR2",488,0)
 ;
"RTN","RCDPENR2",489,0)
 ; build the list of divisions to report on.
"RTN","RCDPENR2",490,0)
DIV(RCDIV) ;
"RTN","RCDPENR2",491,0)
 ;
"RTN","RCDPENR2",492,0)
 N RCI
"RTN","RCDPENR2",493,0)
 ;
"RTN","RCDPENR2",494,0)
 ; If all divisions selected, set the all division flag
"RTN","RCDPENR2",495,0)
 I $D(RCDIV("A")) S ^TMP("RCDPENR2",$J,"DIVALL")="" Q
"RTN","RCDPENR2",496,0)
 ;
"RTN","RCDPENR2",497,0)
 ; Loop through division list and build temp array for it.
"RTN","RCDPENR2",498,0)
 S RCI=0
"RTN","RCDPENR2",499,0)
 F  S RCI=$O(RCDIV(RCI)) Q:'RCI  S ^TMP("RCDPENR2",$J,"DIV",RCDIV(RCI))=""
"RTN","RCDPENR2",500,0)
 Q
"RTN","RCDPENR2",501,0)
 ;Determine the text to display for the Payer TINs
"RTN","RCDPENR2",502,0)
TINTXT() ;
"RTN","RCDPENR2",503,0)
 ;
"RTN","RCDPENR2",504,0)
 N RCTIN,RCTXT,RCTNTXT
"RTN","RCDPENR2",505,0)
 ; 
"RTN","RCDPENR2",506,0)
 Q:$D(^TMP("RCDPEADP",$J,"TIN","A")) "ALL PAYER TINS"
"RTN","RCDPENR2",507,0)
 ;
"RTN","RCDPENR2",508,0)
 ;Build list of Payer Tins
"RTN","RCDPENR2",509,0)
 ;
"RTN","RCDPENR2",510,0)
 S RCTIN="",RCTXT=""
"RTN","RCDPENR2",511,0)
 F  S RCTIN=$O(^TMP("RCDPEADP",$J,"TIN",RCTIN)) Q:RCTIN=""  D
"RTN","RCDPENR2",512,0)
 . S RCTNTXT=$$GET1^DIQ(344.6,+RCTIN_",",".02","I")
"RTN","RCDPENR2",513,0)
 . S RCTXT=RCTXT_RCTNTXT_","
"RTN","RCDPENR2",514,0)
 ;
"RTN","RCDPENR2",515,0)
 ; Remove comma at the end. 
"RTN","RCDPENR2",516,0)
 S RCTXT=$E(RCTXT,1,$L(RCTXT)-1)
"RTN","RCDPENR2",517,0)
 ;
"RTN","RCDPENR2",518,0)
 ; Display the first 35 characters of the division text list,
"RTN","RCDPENR2",519,0)
 Q $E(RCTXT,1,35)
"RTN","RCDPENR2",520,0)
 ;
"RTN","RCDPENR2",521,0)
COLHEAD ;
"RTN","RCDPENR2",522,0)
 ;
"RTN","RCDPENR2",523,0)
 N RCTMP
"RTN","RCDPENR2",524,0)
 ;
"RTN","RCDPENR2",525,0)
 ;Display the column headers
"RTN","RCDPENR2",526,0)
 I RCEXCEL D
"RTN","RCDPENR2",527,0)
 . S RCTMP="CLAIM#^DOS^AMT BILLED^AMT PAID^BILLED^ERA/EOB REC'D^EFT/PMT REC'D^POSTED^TRACE #"
"RTN","RCDPENR2",528,0)
 . S RCTMP=RCTMP_"^ETRANS TYPE^ERA#^#EEOBS^EFT#^#DAYS:(BILL/ERA)^#DAYS:(ERA/EFT)^#DAYS:(ERA+EFT/POSTED)^TOTAL #DAYS(BILL/POSTED)"
"RTN","RCDPENR2",529,0)
 . W RCTMP,!
"RTN","RCDPENR2",530,0)
 I 'RCEXCEL D
"RTN","RCDPENR2",531,0)
 . W "CLAIM#",?21,"DOS",?30,"AMT BILLED",?41,"AMT PAID",?52,"BILLED",?61,"ERA/EOB REC'D",?75,"EFT/PMT REC'D",?89,"POSTED",?98,"TRACE #",?109,"AUTOPOST/MANUAL",!
"RTN","RCDPENR2",532,0)
 . W ?5,"ETRANS TYPE",?17,"ERA#",?28,"#EEOBS",?39,"EFT#",?50,"#DAYS:(BILL/ERA)",?67,"#DAYS:(ERA/EFT)",?83,"#DAYS:(ERA+EFT/POSTED)",?106,"TOTAL #DAYS(BILL/POSTED)",!
"RTN","RCDPENR2",533,0)
 . W RCLINE,!
"RTN","RCDPENR2",534,0)
 Q
"RTN","RCDPENR2",535,0)
 ;
"RTN","RCDPENR2",536,0)
 ;Entry point for reprinting the header.
"RTN","RCDPENR2",537,0)
REPRINT(RCIEN) ;
"RTN","RCDPENR2",538,0)
 ;
"RTN","RCDPENR2",539,0)
 N I,RCDATA,J,RCSTOP,PAGE
"RTN","RCDPENR2",540,0)
 ;
"RTN","RCDPENR2",541,0)
 ;
"RTN","RCDPENR2",542,0)
 S PAGE=1
"RTN","RCDPENR2",543,0)
 D RPTHDR(RCIEN,PAGE)
"RTN","RCDPENR2",544,0)
 ;
"RTN","RCDPENR2",545,0)
 S I=4,RCSTOP=0  ;loop through the main body
"RTN","RCDPENR2",546,0)
 F  S I=$O(^RCDM(344.91,RCIEN,1,I)) Q:'I  D  Q:RCSTOP
"RTN","RCDPENR2",547,0)
 .  S RCDATA=$G(^RCDM(344.91,RCIEN,1,I,0))
"RTN","RCDPENR2",548,0)
 .  ;
"RTN","RCDPENR2",549,0)
 .  I $Y>(IOSL-4) D  Q:RCSTOP
"RTN","RCDPENR2",550,0)
 .  . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR2",551,0)
 .  . Q:RCSTOP
"RTN","RCDPENR2",552,0)
 .  . S PAGE=PAGE+1
"RTN","RCDPENR2",553,0)
 .  . D RPTHDR(RCIEN,PAGE)
"RTN","RCDPENR2",554,0)
 .  ; main body of report
"RTN","RCDPENR2",555,0)
 .  W $P(RCDATA,U)
"RTN","RCDPENR2",556,0)
 .  I RCDATA["^" W ?65,$P(RCDATA,U,2)
"RTN","RCDPENR2",557,0)
 .  W !      ;Add <CRLF>
"RTN","RCDPENR2",558,0)
 Q
"RTN","RCDPENR2",559,0)
 ;
"RTN","RCDPENR2",560,0)
RPTHDR(RCIEN,PAGE) ; Reprint the header
"RTN","RCDPENR2",561,0)
 ;
"RTN","RCDPENR2",562,0)
 N I,RCDATA
"RTN","RCDPENR2",563,0)
 ;
"RTN","RCDPENR2",564,0)
 W @IOF   ; Create new page
"RTN","RCDPENR2",565,0)
 ;
"RTN","RCDPENR2",566,0)
 F I=1:1:4 D
"RTN","RCDPENR2",567,0)
 . S RCDATA=$G(^RCDM(344.91,RCIEN,1,I,0))
"RTN","RCDPENR2",568,0)
 . ; header lines formatting
"RTN","RCDPENR2",569,0)
 . I I=1 W ?15,$P(RCDATA,U),?70,PAGE,! Q
"RTN","RCDPENR2",570,0)
 . I I=2 W ?5,$P(RCDATA,U,2),! Q
"RTN","RCDPENR2",571,0)
 . I I=3!(I=4) W ?5,$P(RCDATA,U,2),?45,$P(RCDATA,U,3),! Q
"RTN","RCDPENR2",572,0)
 Q
"RTN","RCDPENR3")
0^34^B198455458
"RTN","RCDPENR3",1,0)
RCDPENR3 ;ALB/SAB - EPay National Reports - ERA/EFT Trending Report, part 2 ;06/30/15
"RTN","RCDPENR3",2,0)
 ;;4.5;Accounts Receivable;**304,321**;Mar 20, 1995;Build 48
"RTN","RCDPENR3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR3",4,0)
 ;
"RTN","RCDPENR3",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR3",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR3",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR3",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR3",9,0)
 ;
"RTN","RCDPENR3",10,0)
 Q
"RTN","RCDPENR3",11,0)
 ;
"RTN","RCDPENR3",12,0)
 ;
"RTN","RCDPENR3",13,0)
 ;Generate the needed statistics for the report
"RTN","RCDPENR3",14,0)
COMPILE ;
"RTN","RCDPENR3",15,0)
 ;
"RTN","RCDPENR3",16,0)
 ;RCERATYP values 1="ERA/EFT"  2="ERA/PAPER CHECK"  3="PAPER EOB/EFT"
"RTN","RCDPENR3",17,0)
 ;     needed for the correct report sort order
"RTN","RCDPENR3",18,0)
 N I,RCINSTIN,RCERATYP,RCCLAIM,RCDATA,RCDAYS,RCEFTPD,RCEPDT,RCERAIEN,RCERANUM,RCEFTIEN  ; Looping variable
"RTN","RCDPENR3",19,0)
 N RCGPDATA,RCGPCT,RCGPBILL,RCGPPD,RCGPBECT,RCGPBEDY,RCGPEECT,RCGPEEDY,RCGPEPCT,RCGPEPDY,RCGPBPCT,RCGPBPDY,RCGPECT,RCGPENM,RCGPFCT,RCGPFPD  ; Grand Total W/Payment method variables 
"RTN","RCDPENR3",20,0)
 N RCPPDATA,RCPPCT,RCPPBILL,RCPPPD,RCPPBECT,RCPPBEDY,RCPPEECT,RCPPEEDY,RCPPEPCT,RCPPEPDY,RCPPBPCT,RCPPBPDY,RCPPECT,RCPPENM,RCPPFCT,RCPPFPD  ; Payer W/Payment method variables 
"RTN","RCDPENR3",21,0)
 ;
"RTN","RCDPENR3",22,0)
 ;Initialize all valid ERA/EFT combinations to report on.
"RTN","RCDPENR3",23,0)
 ; init grand total
"RTN","RCDPENR3",24,0)
 F I=1:1:3 I '$D(^TMP("RCDPENR2",$J,"GTOT",I)) S ^TMP("RCDPENR2",$J,"GTOT",I)=0
"RTN","RCDPENR3",25,0)
 ;
"RTN","RCDPENR3",26,0)
 ; init insurance grand totals
"RTN","RCDPENR3",27,0)
 S RCINSTIN=""
"RTN","RCDPENR3",28,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN)) Q:RCINSTIN=""  D
"RTN","RCDPENR3",29,0)
 . F I=1:1:3 I '$D(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I)) S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,I)=0
"RTN","RCDPENR3",30,0)
 ;
"RTN","RCDPENR3",31,0)
 ; Compile results
"RTN","RCDPENR3",32,0)
 S RCINSTIN=""
"RTN","RCDPENR3",33,0)
 F  S RCINSTIN=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN)) Q:RCINSTIN=""  D
"RTN","RCDPENR3",34,0)
 . S RCERATYP=""
"RTN","RCDPENR3",35,0)
 . F  S RCERATYP=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP)) Q:RCERATYP=""  D
"RTN","RCDPENR3",36,0)
 . . S RCCLAIM=""
"RTN","RCDPENR3",37,0)
 . . F  S RCCLAIM=$O(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP,RCCLAIM)) Q:RCCLAIM=""  D
"RTN","RCDPENR3",38,0)
 . . . S RCDATA=$G(^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERATYP,RCCLAIM))
"RTN","RCDPENR3",39,0)
 . . . Q:RCDATA=""
"RTN","RCDPENR3",40,0)
 . . . ;
"RTN","RCDPENR3",41,0)
 . . . ; Extract the Grand Total by EFT/ERA type
"RTN","RCDPENR3",42,0)
 . . . S RCGPDATA=$G(^TMP("RCDPENR2",$J,"GTOT",RCERATYP))
"RTN","RCDPENR3",43,0)
 . . . S RCGPCT=$P(RCGPDATA,U)
"RTN","RCDPENR3",44,0)
 . . . S RCGPBILL=$P(RCGPDATA,U,2)
"RTN","RCDPENR3",45,0)
 . . . S RCGPPD=$P(RCGPDATA,U,3)
"RTN","RCDPENR3",46,0)
 . . . S RCGPBECT=$P(RCGPDATA,U,4)
"RTN","RCDPENR3",47,0)
 . . . S RCGPBEDY=$P(RCGPDATA,U,5)
"RTN","RCDPENR3",48,0)
 . . . S RCGPEECT=$P(RCGPDATA,U,6)
"RTN","RCDPENR3",49,0)
 . . . S RCGPEEDY=$P(RCGPDATA,U,7)
"RTN","RCDPENR3",50,0)
 . . . S RCGPEPCT=$P(RCGPDATA,U,8)
"RTN","RCDPENR3",51,0)
 . . . S RCGPEPDY=$P(RCGPDATA,U,9)
"RTN","RCDPENR3",52,0)
 . . . S RCGPBPCT=$P(RCGPDATA,U,10)
"RTN","RCDPENR3",53,0)
 . . . S RCGPBPDY=$P(RCGPDATA,U,11)
"RTN","RCDPENR3",54,0)
 . . . S RCGPECT=$P(RCGPDATA,U,12)
"RTN","RCDPENR3",55,0)
 . . . S RCGPENM=$P(RCGPDATA,U,13)
"RTN","RCDPENR3",56,0)
 . . . S RCGPFCT=$P(RCGPDATA,U,14)
"RTN","RCDPENR3",57,0)
 . . . S RCGPFPD=$P(RCGPDATA,U,15)
"RTN","RCDPENR3",58,0)
 . . . ;
"RTN","RCDPENR3",59,0)
 . . . ; Extract the Payer specific information by EFT/ERA type
"RTN","RCDPENR3",60,0)
 . . . S RCPPDATA=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,RCERATYP))
"RTN","RCDPENR3",61,0)
 . . . S RCPPCT=$P(RCPPDATA,U)
"RTN","RCDPENR3",62,0)
 . . . S RCPPBILL=$P(RCPPDATA,U,2)
"RTN","RCDPENR3",63,0)
 . . . S RCPPPD=$P(RCPPDATA,U,3)
"RTN","RCDPENR3",64,0)
 . . . S RCPPBECT=$P(RCPPDATA,U,4)
"RTN","RCDPENR3",65,0)
 . . . S RCPPBEDY=$P(RCPPDATA,U,5)
"RTN","RCDPENR3",66,0)
 . . . S RCPPEECT=$P(RCPPDATA,U,6)
"RTN","RCDPENR3",67,0)
 . . . S RCPPEEDY=$P(RCPPDATA,U,7)
"RTN","RCDPENR3",68,0)
 . . . S RCPPEPCT=$P(RCPPDATA,U,8)
"RTN","RCDPENR3",69,0)
 . . . S RCPPEPDY=$P(RCPPDATA,U,9)
"RTN","RCDPENR3",70,0)
 . . . S RCPPBPCT=$P(RCPPDATA,U,10)
"RTN","RCDPENR3",71,0)
 . . . S RCPPBPDY=$P(RCPPDATA,U,11)
"RTN","RCDPENR3",72,0)
 . . . S RCPPECT=$P(RCPPDATA,U,12)
"RTN","RCDPENR3",73,0)
 . . . S RCPPENM=$P(RCPPDATA,U,13)
"RTN","RCDPENR3",74,0)
 . . . S RCPPFCT=$P(RCPPDATA,U,14)
"RTN","RCDPENR3",75,0)
 . . . S RCPPFPD=$P(RCPPDATA,U,15)
"RTN","RCDPENR3",76,0)
 . . . ;
"RTN","RCDPENR3",77,0)
 . . . ; Total counts - Grand/Payment Method
"RTN","RCDPENR3",78,0)
 . . . S RCGPCT=RCGPCT+1
"RTN","RCDPENR3",79,0)
 . . . S RCGPBILL=RCGPBILL+$P(RCDATA,U,6)
"RTN","RCDPENR3",80,0)
 . . . S RCGPPD=RCGPPD+$P(RCDATA,U,7)
"RTN","RCDPENR3",81,0)
 . . . ;
"RTN","RCDPENR3",82,0)
 . . . ; Total counts - Payer/Payment method
"RTN","RCDPENR3",83,0)
 . . . S RCPPCT=RCPPCT+1
"RTN","RCDPENR3",84,0)
 . . . S RCPPBILL=RCPPBILL+$P(RCDATA,U,6)
"RTN","RCDPENR3",85,0)
 . . . S RCPPPD=RCPPPD+$P(RCDATA,U,7)
"RTN","RCDPENR3",86,0)
 . . . ;
"RTN","RCDPENR3",87,0)
 . . . ; Billed to ERA received
"RTN","RCDPENR3",88,0)
 . . . I $P(RCDATA,U,8),$P(RCDATA,U,9) D
"RTN","RCDPENR3",89,0)
 . . . . S RCGPBECT=RCGPBECT+1
"RTN","RCDPENR3",90,0)
 . . . . S RCPPBECT=RCPPBECT+1
"RTN","RCDPENR3",91,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,9),$P(RCDATA,U,8),1)
"RTN","RCDPENR3",92,0)
 . . . . S RCGPBEDY=RCGPBEDY+RCDAYS
"RTN","RCDPENR3",93,0)
 . . . . S RCPPBEDY=RCPPBEDY+RCDAYS
"RTN","RCDPENR3",94,0)
 . . . ;
"RTN","RCDPENR3",95,0)
 . . . ; ERA to EFT received
"RTN","RCDPENR3",96,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9) D
"RTN","RCDPENR3",97,0)
 . . . . S RCGPEECT=RCGPEECT+1
"RTN","RCDPENR3",98,0)
 . . . . S RCPPEECT=RCPPEECT+1
"RTN","RCDPENR3",99,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,10),$P(RCDATA,U,9),1)
"RTN","RCDPENR3",100,0)
 . . . . S RCGPEEDY=RCGPEEDY+RCDAYS
"RTN","RCDPENR3",101,0)
 . . . . S RCPPEEDY=RCPPEEDY+RCDAYS
"RTN","RCDPENR3",102,0)
 . . . ;
"RTN","RCDPENR3",103,0)
 . . . ; ERA and EFT received, and payment Posted
"RTN","RCDPENR3",104,0)
 . . . I $P(RCDATA,U,10),$P(RCDATA,U,9),$P(RCDATA,U,11) D
"RTN","RCDPENR3",105,0)
 . . . . S RCGPEPCT=RCGPEPCT+1
"RTN","RCDPENR3",106,0)
 . . . . S RCPPEPCT=RCPPEPCT+1
"RTN","RCDPENR3",107,0)
 . . . . S RCEPDT=$S($P(RCDATA,U,9)>$P(RCDATA,U,10):9,1:10)  ;determine which date is later
"RTN","RCDPENR3",108,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,11),$P(RCDATA,U,RCEPDT),1)
"RTN","RCDPENR3",109,0)
 . . . . S RCGPEPDY=RCGPEPDY+RCDAYS
"RTN","RCDPENR3",110,0)
 . . . . S RCPPEPDY=RCPPEPDY+RCDAYS
"RTN","RCDPENR3",111,0)
 . . . ;
"RTN","RCDPENR3",112,0)
 . . . ; Bill to Payment Posted
"RTN","RCDPENR3",113,0)
 . . . I $P(RCDATA,U,8),$P(RCDATA,U,11) D
"RTN","RCDPENR3",114,0)
 . . . . S RCGPBPCT=RCGPBPCT+1
"RTN","RCDPENR3",115,0)
 . . . . S RCPPBPCT=RCPPBPCT+1
"RTN","RCDPENR3",116,0)
 . . . . S RCDAYS=$$FMDIFF^XLFDT($P(RCDATA,U,11),$P(RCDATA,U,8),1)
"RTN","RCDPENR3",117,0)
 . . . . S RCGPBPDY=RCGPBPDY+RCDAYS
"RTN","RCDPENR3",118,0)
 . . . . S RCPPBPDY=RCPPBPDY+RCDAYS
"RTN","RCDPENR3",119,0)
 . . . ;
"RTN","RCDPENR3",120,0)
 . . . ; If the ERA hasn't already been counted, add it to the totals
"RTN","RCDPENR3",121,0)
 . . . S RCERAIEN=$P(RCDATA,U,2)
"RTN","RCDPENR3",122,0)
 . . . I RCERAIEN,'$D(^TMP("RCDPENR2",$J,"ERA",RCERAIEN)) D
"RTN","RCDPENR3",123,0)
 . . . . S ^TMP("RCDPENR2",$J,"ERA",RCERAIEN)=""
"RTN","RCDPENR3",124,0)
 . . . . S RCERANUM=$P(RCDATA,U,15)
"RTN","RCDPENR3",125,0)
 . . . . S RCGPECT=RCGPECT+1,RCPPECT=RCPPECT+1
"RTN","RCDPENR3",126,0)
 . . . . S RCGPENM=RCGPENM+RCERANUM,RCPPENM=RCPPENM+RCERANUM
"RTN","RCDPENR3",127,0)
 . . . ;
"RTN","RCDPENR3",128,0)
 . . . ; If the EFT hasn't already been counted, add it to the totals
"RTN","RCDPENR3",129,0)
 . . . S RCEFTIEN=$P(RCDATA,U,3)
"RTN","RCDPENR3",130,0)
 . . . I (RCEFTIEN),('$D(^TMP("RCDPENR2",$J,"EFT",RCEFTIEN))) D
"RTN","RCDPENR3",131,0)
 . . . . S ^TMP("RCDPENR2",$J,"EFT",RCEFTIEN)=""
"RTN","RCDPENR3",132,0)
 . . . . S RCEFTPD=$P(RCDATA,U,18)
"RTN","RCDPENR3",133,0)
 . . . . S RCGPFCT=RCGPFCT+1,RCPPFCT=RCPPFCT+1
"RTN","RCDPENR3",134,0)
 . . . . S RCGPFPD=RCGPFPD+RCEFTPD,RCPPFPD=RCPPFPD+RCEFTPD
"RTN","RCDPENR3",135,0)
 . . . ;
"RTN","RCDPENR3",136,0)
 . . . ; Update the payer specific information By Payment Method
"RTN","RCDPENR3",137,0)
 . . . S $P(RCPPDATA,U)=RCPPCT
"RTN","RCDPENR3",138,0)
 . . . S $P(RCPPDATA,U,2)=RCPPBILL
"RTN","RCDPENR3",139,0)
 . . . S $P(RCPPDATA,U,3)=RCPPPD
"RTN","RCDPENR3",140,0)
 . . . S $P(RCPPDATA,U,4)=RCPPBECT
"RTN","RCDPENR3",141,0)
 . . . S $P(RCPPDATA,U,5)=RCPPBEDY
"RTN","RCDPENR3",142,0)
 . . . S $P(RCPPDATA,U,6)=RCPPEECT
"RTN","RCDPENR3",143,0)
 . . . S $P(RCPPDATA,U,7)=RCPPEEDY
"RTN","RCDPENR3",144,0)
 . . . S $P(RCPPDATA,U,8)=RCPPEPCT
"RTN","RCDPENR3",145,0)
 . . . S $P(RCPPDATA,U,9)=RCPPEPDY
"RTN","RCDPENR3",146,0)
 . . . S $P(RCPPDATA,U,10)=RCPPBPCT
"RTN","RCDPENR3",147,0)
 . . . S $P(RCPPDATA,U,11)=RCPPBPDY
"RTN","RCDPENR3",148,0)
 . . . S $P(RCPPDATA,U,12)=RCPPECT
"RTN","RCDPENR3",149,0)
 . . . S $P(RCPPDATA,U,13)=RCPPENM
"RTN","RCDPENR3",150,0)
 . . . S $P(RCPPDATA,U,14)=RCPPFCT
"RTN","RCDPENR3",151,0)
 . . . S $P(RCPPDATA,U,15)=RCPPFPD
"RTN","RCDPENR3",152,0)
 . . . S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,RCERATYP)=RCPPDATA
"RTN","RCDPENR3",153,0)
 . . . ;
"RTN","RCDPENR3",154,0)
 . . . ; Update the Grand Total specific information By Payment Method
"RTN","RCDPENR3",155,0)
 . . . S $P(RCGPDATA,U)=RCGPCT
"RTN","RCDPENR3",156,0)
 . . . S $P(RCGPDATA,U,2)=RCGPBILL
"RTN","RCDPENR3",157,0)
 . . . S $P(RCGPDATA,U,3)=RCGPPD
"RTN","RCDPENR3",158,0)
 . . . S $P(RCGPDATA,U,4)=RCGPBECT
"RTN","RCDPENR3",159,0)
 . . . S $P(RCGPDATA,U,5)=RCGPBEDY
"RTN","RCDPENR3",160,0)
 . . . S $P(RCGPDATA,U,6)=RCGPEECT
"RTN","RCDPENR3",161,0)
 . . . S $P(RCGPDATA,U,7)=RCGPEEDY
"RTN","RCDPENR3",162,0)
 . . . S $P(RCGPDATA,U,8)=RCGPEPCT
"RTN","RCDPENR3",163,0)
 . . . S $P(RCGPDATA,U,9)=RCGPEPDY
"RTN","RCDPENR3",164,0)
 . . . S $P(RCGPDATA,U,10)=RCGPBPCT
"RTN","RCDPENR3",165,0)
 . . . S $P(RCGPDATA,U,11)=RCGPBPDY
"RTN","RCDPENR3",166,0)
 . . . S $P(RCGPDATA,U,12)=RCGPECT
"RTN","RCDPENR3",167,0)
 . . . S $P(RCGPDATA,U,13)=RCGPENM
"RTN","RCDPENR3",168,0)
 . . . S $P(RCGPDATA,U,14)=RCGPFCT
"RTN","RCDPENR3",169,0)
 . . . S $P(RCGPDATA,U,15)=RCGPFPD
"RTN","RCDPENR3",170,0)
 . . . S ^TMP("RCDPENR2",$J,"GTOT",RCERATYP)=RCGPDATA
"RTN","RCDPENR3",171,0)
 Q
"RTN","RCDPENR3",172,0)
 ;
"RTN","RCDPENR3",173,0)
 ;Retrieve all necessary information for the EFTs sent during the requested period.
"RTN","RCDPENR3",174,0)
GETEFT(RCSDATE,RCEDATE,RCRATE) ;
"RTN","RCDPENR3",175,0)
 ;RCSDATE - Start date of extraction
"RTN","RCDPENR3",176,0)
 ;RCEDATE - End date of extraction
"RTN","RCDPENR3",177,0)
 ;
"RTN","RCDPENR3",178,0)
 ;^TMP("RCDPENR2",$J,"MAIN",IEN of Claim/Bill #) =
"RTN","RCDPENR3",179,0)
 ; Where:
"RTN","RCDPENR3",180,0)
 ; Piece  Variable
"RTN","RCDPENR3",181,0)
 ; 1      RCBILL   - IEN of Bill/Claim #
"RTN","RCDPENR3",182,0)
 ; 2      RCERA    - IEN of the ERA the bill was paid on.
"RTN","RCDPENR3",183,0)
 ; 3      RCIEN    - IEN of the EFT the money for the bill arrived on
"RTN","RCDPENR3",184,0)
 ; 4      RCEOB    - IEN of the EOB within the ERA 
"RTN","RCDPENR3",185,0)
 ; 5      RCDOS    - Date of Service
"RTN","RCDPENR3",186,0)
 ; 6      RCAMTBL  - Amount Billed
"RTN","RCDPENR3",187,0)
 ; 7      RCAMTPD  - Amount Paid
"RTN","RCDPENR3",188,0)
 ; 8      RCDTBILL - Date of Bill
"RTN","RCDPENR3",189,0)
 ; 9      RCERARCD - Date ERA received
"RTN","RCDPENR3",190,0)
 ; 10     RCEFTRCD - Date EFT received
"RTN","RCDPENR3",191,0)
 ; 11     RCPOSTED - Date Payment Posted to claim
"RTN","RCDPENR3",192,0)
 ; 12     RCTRACE  - ERA Trace number for EOB
"RTN","RCDPENR3",193,0)
 ; 13     RCMETHOD - Method of Payment transmittal
"RTN","RCDPENR3",194,0)
 ; 14     RCTRNTYP - Was payment EFT or Paper Check / Was the ERA Paper or EDI Lockbox
"RTN","RCDPENR3",195,0)
 ; 15     RCERANUM - # EOB'S in ERA
"RTN","RCDPENR3",196,0)
 ; 16     RCDIV    - Division of the bill
"RTN","RCDPENR3",197,0)
 ; 17     RCINSTIN - Insurance/Insurance TIN
"RTN","RCDPENR3",198,0)
 ; 18     RCEFTPD  - Amount paid as an EFT, not as a check.
"RTN","RCDPENR3",199,0)
 ;
"RTN","RCDPENR3",200,0)
 N RCLDATE,RCINS,RCIEN,RCEFTDT,RCERA,RCEFT,RCRCPT,RCPOSTED,RCPAYTYP,RCERADT,RCTRACE,RCERAIDX
"RTN","RCDPENR3",201,0)
 N RCTRLN,RCTRBD,RCERANUM,RCTIN,RCPAYER,RCINSTIN,RCLPIEN,RCDTDATA,RCEOB,RCBILL,RCDIV,RCDOS,RCAMTBL
"RTN","RCDPENR3",202,0)
 N RCDTBILL,RCMETHOD,RCPAPER,RCEFTTYP,RCEFTPD,RCTRNTYP,RCDATA,RCAMTPD,RCEFTRCD,RCERARCD,RCRATETP
"RTN","RCDPENR3",203,0)
 N RCMSTAT,RCESUMDT,RCPSUMDT,ZZPNAME
"RTN","RCDPENR3",204,0)
 ;
"RTN","RCDPENR3",205,0)
 ;Get the EFT Detail information for the report batches sent within the given date range.
"RTN","RCDPENR3",206,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR3",207,0)
 F  S RCLDATE=$O(^RCY(344.31,"ADR",RCLDATE)) Q:RCLDATE=""  Q:RCLDATE>RCEDATE  D
"RTN","RCDPENR3",208,0)
 . S RCIEN=0
"RTN","RCDPENR3",209,0)
 . F  S RCIEN=$O(^RCY(344.31,"ADR",RCLDATE,RCIEN)) Q:'RCIEN  D
"RTN","RCDPENR3",210,0)
 . . S RCEFTDT=$G(^RCY(344.31,RCIEN,0))
"RTN","RCDPENR3",211,0)
 . . Q:RCEFTDT=""
"RTN","RCDPENR3",212,0)
 . . S RCERA=$P(RCEFTDT,U,10)            ; ERA IEN
"RTN","RCDPENR3",213,0)
 . . S RCEFTRCD=$P(RCEFTDT,U,13)
"RTN","RCDPENR3",214,0)
 . . S RCEFT=$P(RCEFTDT,U)
"RTN","RCDPENR3",215,0)
 . . S ZZPNAME=$P(RCEFTDT,U,2)
"RTN","RCDPENR3",216,0)
 . . S RCMSTAT=$P(RCEFTDT,U,8)
"RTN","RCDPENR3",217,0)
 . . S RCRCPT=$P(RCEFTDT,U,9)
"RTN","RCDPENR3",218,0)
 . . S RCEFTPD=$P(RCEFTDT,U,7)
"RTN","RCDPENR3",219,0)
 . . S RCPOSTED=$$GET1^DIQ(344.3,RCEFT_",",.11,"I")
"RTN","RCDPENR3",220,0)
 . . S RCPAYTYP=$$GET1^DIQ(344,RCRCPT_",",.04,"I")
"RTN","RCDPENR3",221,0)
 . . I RCERA D  Q
"RTN","RCDPENR3",222,0)
 . . . S RCERADT=$G(^RCY(344.4,RCERA,0)) ; ERA Data extracted
"RTN","RCDPENR3",223,0)
 . . . Q:'RCERADT
"RTN","RCDPENR3",224,0)
 . . . S RCTRACE=$P(RCERADT,U,2)         ; Trace #
"RTN","RCDPENR3",225,0)
 . . . S RCTRLN=$L(RCTRACE),RCTRBD=$S(RCTRLN<11:1,1:RCTRLN-9)
"RTN","RCDPENR3",226,0)
 . . . S RCTRACE=$E(RCTRACE,RCTRBD,RCTRLN)  ; get the last 10 digits of Trace #
"RTN","RCDPENR3",227,0)
 . . . S RCERARCD=$P($P(RCERADT,U,7),".",1)  ;get the date of the ERA
"RTN","RCDPENR3",228,0)
 . . . S RCERANUM=$P(RCERADT,U,11)
"RTN","RCDPENR3",229,0)
 . . . S RCTIN=$P(RCERADT,U,3)
"RTN","RCDPENR3",230,0)
 . . . S RCINS=$P(RCERADT,U,6)
"RTN","RCDPENR3",231,0)
 . . . S RCPAYER=$$GETARPYR^RCDPENR2(RCTIN,ZZPNAME) ; find the AR Payer IEN
"RTN","RCDPENR3",232,0)
 . . . Q:'RCPAYER                  ; Quit if Payer/TIN not found
"RTN","RCDPENR3",233,0)
 . . . Q:'$$INSCHK^RCDPENR2(RCPAYER)    ; Payer is not in the included list for the report
"RTN","RCDPENR3",234,0)
 . . . S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR3",235,0)
 . . . S RCLPIEN=0
"RTN","RCDPENR3",236,0)
 . . . F  S RCLPIEN=$O(^RCY(344.4,RCERA,1,RCLPIEN)) Q:'RCLPIEN  D
"RTN","RCDPENR3",237,0)
 . . . . S RCDTDATA=$G(^RCY(344.4,RCERA,1,RCLPIEN,0))
"RTN","RCDPENR3",238,0)
 . . . . S RCEOB=$P(RCDTDATA,U,2)
"RTN","RCDPENR3",239,0)
 . . . . S RCBILL=$$BILLIEN^RCDPENR1(RCEOB)
"RTN","RCDPENR3",240,0)
 . . . . Q:RCBILL=""   ; no billing information
"RTN","RCDPENR3",241,0)
 . . . . Q:$D(^TMP("RCDPENR2",$J,"MAIN",RCBILL))  ;already captured.
"RTN","RCDPENR3",242,0)
 . . . . S RCDIV=$$DIV^IBJDF2(RCBILL)
"RTN","RCDPENR3",243,0)
 . . . . S RCDIV=$$GET1^DIQ(40.8,RCDIV_",",".01","E")
"RTN","RCDPENR3",244,0)
 . . . . ;
"RTN","RCDPENR3",245,0)
 . . . . S RCRATETP=$$GET1^DIQ(399,RCBILL_",",.07,"I")
"RTN","RCDPENR3",246,0)
 . . . . Q:RCRATETP'=RCRATE
"RTN","RCDPENR3",247,0)
 . . . . ; Quit if user specified a specific division and bill is not in that Division
"RTN","RCDPENR3",248,0)
 . . . . I '$D(^TMP("RCDPENR2",$J,"DIVALL"))&'$D(^TMP("RCDPENR2",$J,"DIV",RCDIV)) Q 
"RTN","RCDPENR3",249,0)
 . . . . S RCDOS=$$GET1^DIQ(399,RCBILL_",",.03,"I")
"RTN","RCDPENR3",250,0)
 . . . . S RCAMTBL=$$GET1^DIQ(361.1,RCEOB_",",2.04,"I")
"RTN","RCDPENR3",251,0)
 . . . . S RCAMTPD=$$GET1^DIQ(361.1,RCEOB_",",1.01,"I")
"RTN","RCDPENR3",252,0)
 . . . . S RCDTBILL=$$GET1^DIQ(399,RCBILL_",",12,"I")
"RTN","RCDPENR3",253,0)
 . . . . Q:RCDTBILL=""   ;cant calculate if date first printed is NULL
"RTN","RCDPENR3",254,0)
 . . . . ;
"RTN","RCDPENR3",255,0)
 . . . . S RCMETHOD=$S($$GET1^DIQ(344,RCERA_",",4.02,"I")="":"MANUAL",1:"AUTOPOST")
"RTN","RCDPENR3",256,0)
 . . . . S RCPAPER=$P($G(^RCY(344.4,RCERA,20)),U,3)  ; Paper EOB ERA?
"RTN","RCDPENR3",257,0)
 . . . . ;ERA not a paper ERA, is the EOB a Paper EOB
"RTN","RCDPENR3",258,0)
 . . . . S:'RCPAPER RCPAPER=$S($$GET1^DIQ(361.1,RCEOB_",",.17,"I")=0:"ERA",1:"PAPER")
"RTN","RCDPENR3",259,0)
 . . . . S RCEFTTYP=$S(RCPAYTYP=4:"PAPER",1:"EFT")
"RTN","RCDPENR3",260,0)
 . . . . S RCTRNTYP=RCPAPER_"/"_RCEFTTYP
"RTN","RCDPENR3",261,0)
 . . . . S RCERAIDX=$S(RCTRNTYP="ERA/EFT":1,RCTRNTYP="ERA/PAPER":2,RCTRNTYP="PAPER/EFT":3,1:4)
"RTN","RCDPENR3",262,0)
 . . . . Q:RCERAIDX=4   ;Paper Check Paper EOB not supported
"RTN","RCDPENR3",263,0)
 . . . . S RCDATA=RCBILL_U_RCERA_U_RCIEN_U_RCEOB_U_RCDOS_U_RCAMTBL_U_RCAMTPD_U_RCDTBILL_U_RCERARCD
"RTN","RCDPENR3",264,0)
 . . . . S RCDATA=RCDATA_U_RCEFTRCD_U_RCPOSTED_U_RCTRACE_U_RCMETHOD_U
"RTN","RCDPENR3",265,0)
 . . . . S RCDATA=RCDATA_RCTRNTYP_U_RCERANUM_U_RCDIV_U_RCINSTIN_U_RCEFTPD
"RTN","RCDPENR3",266,0)
 . . . . S ^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERAIDX,RCBILL)=RCDATA
"RTN","RCDPENR3",267,0)
 . . I (RCMSTAT=2),(RCIEN),('$D(^TMP("RCDPENR2",$J,"EFT",RCIEN))) D
"RTN","RCDPENR3",268,0)
 . . . S RCTIN=$P(RCEFTDT,U,3)
"RTN","RCDPENR3",269,0)
 . . . S RCINS=$P(RCEFTDT,U,2)
"RTN","RCDPENR3",270,0)
 . . . S RCPAYER=$$GETARPYR^RCDPENR2(RCTIN,ZZPNAME) ; find the AR Payer IEN
"RTN","RCDPENR3",271,0)
 . . . Q:'RCPAYER                  ; Quit if Payer/TIN not found
"RTN","RCDPENR3",272,0)
 . . . Q:'$$INSCHK^RCDPENR2(RCPAYER)    ; Payer is not in the included list for the report
"RTN","RCDPENR3",273,0)
 . . . S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR3",274,0)
 . . . S RCESUMDT=$G(^TMP("RCDPENR2",$J,"GTOT",3))
"RTN","RCDPENR3",275,0)
 . . . S RCPSUMDT=$G(^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,3))
"RTN","RCDPENR3",276,0)
 . . . S $P(RCESUMDT,U,14)=$P(RCESUMDT,U,14)+1
"RTN","RCDPENR3",277,0)
 . . . S $P(RCPSUMDT,U,14)=$P(RCPSUMDT,U,14)+1
"RTN","RCDPENR3",278,0)
 . . . S $P(RCESUMDT,U,15)=$P(RCESUMDT,U,15)+RCEFTPD
"RTN","RCDPENR3",279,0)
 . . . S $P(RCPSUMDT,U,15)=$P(RCPSUMDT,U,15)+RCEFTPD
"RTN","RCDPENR3",280,0)
 . . . S ^TMP("RCDPENR2",$J,"GTOT",3)=RCESUMDT
"RTN","RCDPENR3",281,0)
 . . . S ^TMP("RCDPENR2",$J,"PAYER",RCINSTIN,3)=RCPSUMDT
"RTN","RCDPENR3",282,0)
 Q
"RTN","RCDPENR3",283,0)
 ;
"RTN","RCDPENR3",284,0)
 ;Print the Grand Total/Summary data for the EFT/ERA Trending Report
"RTN","RCDPENR3",285,0)
PRINTGT(RCTITLE,RCDATA,RCDISP,RCERAFLG,RCEXCEL) ;
"RTN","RCDPENR3",286,0)
 ;
"RTN","RCDPENR3",287,0)
 ; Undeclared Parameter(s) - RCRPIEN,RCLINE,RCSTOP
"RTN","RCDPENR3",288,0)
 ;
"RTN","RCDPENR3",289,0)
 N RCCOUNT,RCBILL,RCPAID,RCPCT,RCBECT,RCBEDY,RCAVGBE,RCEECT,RCEEDY
"RTN","RCDPENR3",290,0)
 N RCEPCT,RCEPDY,RCAVGEP,RCBPCT,RCBPDY,RCAVGBP,RCBORDER,RCSCDATA
"RTN","RCDPENR3",291,0)
 N RCC,RCB,RCAVGEE,RCLTXT,I,RCSTRDTA,RCSTRNG,RCDTXT
"RTN","RCDPENR3",292,0)
 ;
"RTN","RCDPENR3",293,0)
 S RCERAFLG=+$G(RCERAFLG),RCDISP=$G(RCDISP)
"RTN","RCDPENR3",294,0)
 I $Y>(IOSL-7),RCDISP D ASK^RCDPEADP(.RCSTOP,0) Q:RCSTOP  D HEADER^RCDPENR2
"RTN","RCDPENR3",295,0)
 ;
"RTN","RCDPENR3",296,0)
 ; Display report type being displayed
"RTN","RCDPENR3",297,0)
 D PRINTHDR^RCDPENR2(RCTITLE)
"RTN","RCDPENR3",298,0)
 ;
"RTN","RCDPENR3",299,0)
 ; Extract data from string and build string for output
"RTN","RCDPENR3",300,0)
 S $P(RCSCDATA,U,1)=+$P(RCDATA,U)
"RTN","RCDPENR3",301,0)
 S RCBILL=+$P(RCDATA,U,2)
"RTN","RCDPENR3",302,0)
 S RCPAID=+$P(RCDATA,U,3)
"RTN","RCDPENR3",303,0)
 S $P(RCSCDATA,U,2)=RCBILL
"RTN","RCDPENR3",304,0)
 S $P(RCSCDATA,U,3)=RCPAID
"RTN","RCDPENR3",305,0)
 S $P(RCSCDATA,U,4)=$S(+RCBILL=0:0,1:RCPAID/RCBILL)*100  ; Convert to percent format
"RTN","RCDPENR3",306,0)
 S RCBECT=+$P(RCDATA,U,4)
"RTN","RCDPENR3",307,0)
 S RCBEDY=+$P(RCDATA,U,5)
"RTN","RCDPENR3",308,0)
 S $P(RCSCDATA,U,6)=$FN($S(+RCBECT=0:0,1:RCBEDY/RCBECT),"",0)
"RTN","RCDPENR3",309,0)
 S RCEECT=+$P(RCDATA,U,6)
"RTN","RCDPENR3",310,0)
 S RCEEDY=+$P(RCDATA,U,7)
"RTN","RCDPENR3",311,0)
 S $P(RCSCDATA,U,7)=$FN($S(+RCEECT=0:0,1:RCEEDY/RCEECT),"",0)
"RTN","RCDPENR3",312,0)
 S RCEPCT=+$P(RCDATA,U,8)
"RTN","RCDPENR3",313,0)
 S RCEPDY=+$P(RCDATA,U,9)
"RTN","RCDPENR3",314,0)
 S $P(RCSCDATA,U,8)=$FN($S(+RCEPCT=0:0,1:RCEPDY/RCEPCT),"",0)
"RTN","RCDPENR3",315,0)
 S RCBPCT=+$P(RCDATA,U,10)
"RTN","RCDPENR3",316,0)
 S RCBPDY=+$P(RCDATA,U,11)
"RTN","RCDPENR3",317,0)
 S $P(RCSCDATA,U,9)=$FN($S(+RCBPCT=0:0,1:RCBPDY/RCBPCT),"",0)
"RTN","RCDPENR3",318,0)
 S $P(RCSCDATA,U,11)=+$P(RCDATA,U,12)
"RTN","RCDPENR3",319,0)
 S $P(RCSCDATA,U,12)=+$P(RCDATA,U,13)
"RTN","RCDPENR3",320,0)
 S $P(RCSCDATA,U,14)=+$P(RCDATA,U,14)
"RTN","RCDPENR3",321,0)
 S $P(RCSCDATA,U,15)=+$P(RCDATA,U,15)
"RTN","RCDPENR3",322,0)
 S $P(RCSCDATA,U,16)=RCPAID-$P(RCDATA,U,15)
"RTN","RCDPENR3",323,0)
 F I=1:1:16 D  Q:RCSTOP
"RTN","RCDPENR3",324,0)
 . I RCDISP,($Y>(IOSL-4)) D  Q:RCSTOP
"RTN","RCDPENR3",325,0)
 . .  D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR3",326,0)
 . .  Q:RCSTOP
"RTN","RCDPENR3",327,0)
 . .  D HEADER^RCDPENR2
"RTN","RCDPENR3",328,0)
 . ;if printing from monthly background job save in file and quit
"RTN","RCDPENR3",329,0)
 . ;Otherwise print to screen
"RTN","RCDPENR3",330,0)
 . S (RCLTXT,RCDTXT)=$P($T(GDTXT+I),";;",2)
"RTN","RCDPENR3",331,0)
 . I RCTITLE["PAPER" D
"RTN","RCDPENR3",332,0)
 . . I (I>5),(I<9) D      ; correct display for lines 6,7,8,16
"RTN","RCDPENR3",333,0)
 . . . I (I=6),RCTITLE["CHECK" Q     ;Dont change line 6 if Paper check section
"RTN","RCDPENR3",334,0)
 . . . S RCB="EFT",RCC="CHK"  ; Correct display for Paper check section
"RTN","RCDPENR3",335,0)
 . . . I RCTITLE["EOB" S RCB="ERA",RCC="EOB"   ;correct display for paper eob
"RTN","RCDPENR3",336,0)
 . . . S RCDTXT=$P(RCLTXT,RCB,1)_RCC_$P(RCLTXT,RCB,2)
"RTN","RCDPENR3",337,0)
 . I 'RCDISP!RCEXCEL D  Q
"RTN","RCDPENR3",338,0)
 . . S RCSTRDTA=$P(RCSCDATA,U,I)
"RTN","RCDPENR3",339,0)
 . . ;Format lines: lines 2&3 are amounts, 4 is a percentage, remainder are integers.
"RTN","RCDPENR3",340,0)
 . . S RCSTRNG=RCDTXT_"^"_$S(I=4:$J($P(RCSTRDTA,"."),2)_"%",1:RCSTRDTA)
"RTN","RCDPENR3",341,0)
 . . I 'RCDISP D SAVEDATA^RCDPENR1(RCSTRNG,RCRPIEN) Q
"RTN","RCDPENR3",342,0)
 . .;if printing in an EXCEL format, print "^" delimited and quit
"RTN","RCDPENR3",343,0)
 . . I RCEXCEL W RCSTRNG,! Q
"RTN","RCDPENR3",344,0)
 . ;Output to screen
"RTN","RCDPENR3",345,0)
 . ;currency format
"RTN","RCDPENR3",346,0)
 . I (I=2)!(I=3)!(I=15) W RCDTXT,?65,$J($P(RCSCDATA,U,I),13,2),! Q
"RTN","RCDPENR3",347,0)
 . ; For the line items that are percentages.  Not using $J formatting due to rounding errors.
"RTN","RCDPENR3",348,0)
 . I I=4 W RCDTXT,?65,$J($P($P(RCSCDATA,U,I),"."),12),"%",! Q
"RTN","RCDPENR3",349,0)
 . ;Otherwise print Number format
"RTN","RCDPENR3",350,0)
 . I (I=16) D  Q
"RTN","RCDPENR3",351,0)
 . . W:RCERAFLG RCDTXT,?65,$J($P(RCSCDATA,U,I),13,2),!
"RTN","RCDPENR3",352,0)
 . W RCDTXT,?65,$J($P(RCSCDATA,U,I),13),!
"RTN","RCDPENR3",353,0)
 I RCSTOP Q RCSTOP
"RTN","RCDPENR3",354,0)
 I RCDISP W RCLINE,! ;Otherwise print Number format
"RTN","RCDPENR3",355,0)
 I 'RCDISP D SAVEDATA^RCDPENR1(RCLINE,RCRPIEN)
"RTN","RCDPENR3",356,0)
 Q RCSTOP
"RTN","RCDPENR3",357,0)
 ;
"RTN","RCDPENR3",358,0)
GDTXT ;
"RTN","RCDPENR3",359,0)
 ;;TOTAL NUMBER OF CLAIMS
"RTN","RCDPENR3",360,0)
 ;;TOTAL AMOUNT BILLED
"RTN","RCDPENR3",361,0)
 ;;TOTAL AMOUNT PAID
"RTN","RCDPENR3",362,0)
 ;;PERCENTAGE AMOUNT PAID: (%Total Paid/Billed)
"RTN","RCDPENR3",363,0)
 ;;
"RTN","RCDPENR3",364,0)
 ;;AVG #DAYS BETWEEN BILLED/ERA
"RTN","RCDPENR3",365,0)
 ;;AVG #DAYS BETWEEN ERA/EFT
"RTN","RCDPENR3",366,0)
 ;;AVG #DAYS BETWEEN ERA+EFT REC'D/PMT POSTED
"RTN","RCDPENR3",367,0)
 ;;AVG #DAYS BETWEEN BILLED/PMT POSTED
"RTN","RCDPENR3",368,0)
 ;;
"RTN","RCDPENR3",369,0)
 ;;TOTAL NUMBER OF ERAs
"RTN","RCDPENR3",370,0)
 ;;TOTAL NUMBER OF EEOBs
"RTN","RCDPENR3",371,0)
 ;;
"RTN","RCDPENR3",372,0)
 ;;TOTAL NUMBER OF EFTs
"RTN","RCDPENR3",373,0)
 ;;TOTAL AMOUNT COLLECTED
"RTN","RCDPENR3",374,0)
 ;;TOTAL DIFFERENCE BETWEEN ERAs (PAID) - EFTs (COLLECTED):
"RTN","RCDPENR3",375,0)
 Q
"RTN","RCDPENR4")
0^35^B69598566
"RTN","RCDPENR4",1,0)
RCDPENR4 ;ALB/SAB - EPay National Reports - ERA/EFT Report Utilities ;12/14/15
"RTN","RCDPENR4",2,0)
 ;;4.5;Accounts Receivable;**304,321**;Mar 20, 1995;Build 48
"RTN","RCDPENR4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPENR4",4,0)
 ;
"RTN","RCDPENR4",5,0)
 ;Read ^DGCR(399) via Private IA 3820
"RTN","RCDPENR4",6,0)
 ;Read ^DG(40.8) via Controlled IA 417
"RTN","RCDPENR4",7,0)
 ;Read ^IBM(361.1) via Private IA 4051
"RTN","RCDPENR4",8,0)
 ;Use DIV^IBJDF2 via Private IA 3130
"RTN","RCDPENR4",9,0)
 Q
"RTN","RCDPENR4",10,0)
 ;
"RTN","RCDPENR4",11,0)
 ; Retrieve a single payer from the 
"RTN","RCDPENR4",12,0)
SPAY() ;
"RTN","RCDPENR4",13,0)
 ;
"RTN","RCDPENR4",14,0)
 N DIC,X,Y,DTOUT,DUOUT,DINUM,DLAYGO,NAME
"RTN","RCDPENR4",15,0)
 ;
"RTN","RCDPENR4",16,0)
 S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","RCDPENR4",17,0)
 S DIC("?")="Enter the Payer name to run this report on."
"RTN","RCDPENR4",18,0)
 S DIC("A")="Select Payer: "
"RTN","RCDPENR4",19,0)
 D ^DIC K DIC
"RTN","RCDPENR4",20,0)
 ; timeout or user requested exit
"RTN","RCDPENR4",21,0)
 I $G(DUOUT)!$G(DTOUT) Q -1
"RTN","RCDPENR4",22,0)
 ;
"RTN","RCDPENR4",23,0)
 ;Return the name instead of the IEN
"RTN","RCDPENR4",24,0)
 Q $P(Y,U,2)
"RTN","RCDPENR4",25,0)
 ;
"RTN","RCDPENR4",26,0)
 ; - Return first/last day of month (if Y=0), previous month (if Y=1),
"RTN","RCDPENR4",27,0)
M1(X,Y) ;
"RTN","RCDPENR4",28,0)
 ;   first/last day of month in MMDDYYYY format (if Y=2), or date in
"RTN","RCDPENR4",29,0)
 ;   external format (if Y=3).
"RTN","RCDPENR4",30,0)
 N X1,X2 S:'$G(X)!(X'?7N.1".".6N) X=DT S:'$G(Y) Y=0
"RTN","RCDPENR4",31,0)
 S X2="31^"_$S($E(X,1,3)#4=0:29,1:28)_"^31^30^31^30^31^31^30^31^30^31"
"RTN","RCDPENR4",32,0)
 I 'Y S X=$E(X,1,5),X=X_"01"_U_X_$P(X2,U,+$E(X,4,5)) Q X
"RTN","RCDPENR4",33,0)
 I Y=1 S X=($E(X,1,5)_"00")-$S(+$E(X,4,5)=1:8900,1:100) Q X
"RTN","RCDPENR4",34,0)
 I Y=2 D  Q X
"RTN","RCDPENR4",35,0)
 .S X1=1700+$E(X,1,3),X=$E(X,4,5),X=X_"01"_X1_U_X_$P(X2,U,+X)_X1
"RTN","RCDPENR4",36,0)
 S Y=X X ^DD("DD") S X=Y
"RTN","RCDPENR4",37,0)
 Q X
"RTN","RCDPENR4",38,0)
 ;
"RTN","RCDPENR4",39,0)
 ; Retrieve the needed 835 information.
"RTN","RCDPENR4",40,0)
GETERA(RCSDATE,RCEDATE,RCRATE) ;
"RTN","RCDPENR4",41,0)
 ;
"RTN","RCDPENR4",42,0)
 N RCLDATE,RCBDIV,RCIEN,RCDATA,RCLIEN,RCDTLDT,RCEOB,RCBILL,RCTRACE
"RTN","RCDPENR4",43,0)
 N RCEFTST,RCDOS,RCAMTBL,RCAMTPD,RCDTBILL,RCTIN,RCINS,RCERARCD,RCINS
"RTN","RCDPENR4",44,0)
 N RCPAPER,RCMETHOD,RCEFTTYP,RCTRNTYP,RCINSTIN,RCERAIDX,RCEFTST
"RTN","RCDPENR4",45,0)
 N RCEFTPD,RCDIV,RCERANUM,RCRATETP,RCPAYER,RCTRLN,RCTRBD,RCPOSTED
"RTN","RCDPENR4",46,0)
 ;
"RTN","RCDPENR4",47,0)
 S RCLDATE=RCSDATE-.001
"RTN","RCDPENR4",48,0)
 ;
"RTN","RCDPENR4",49,0)
 F  S RCLDATE=$O(^RCY(344.4,"AFD",RCLDATE)) Q:RCLDATE>RCEDATE  Q:RCLDATE=""  D
"RTN","RCDPENR4",50,0)
 . S RCIEN=""
"RTN","RCDPENR4",51,0)
 . F  S RCIEN=$O(^RCY(344.4,"AFD",RCLDATE,RCIEN)) Q:'RCIEN  D  Q
"RTN","RCDPENR4",52,0)
 .. S RCDATA=$G(^RCY(344.4,RCIEN,0))
"RTN","RCDPENR4",53,0)
 .. Q:RCDATA=""         ;No data defined in the transaction
"RTN","RCDPENR4",54,0)
 .. Q:'$P(RCDATA,U,10)  ;Transaction is an MRA
"RTN","RCDPENR4",55,0)
 .. ;
"RTN","RCDPENR4",56,0)
 .. ; Only calculate if status is NULL, Unmatched or Matched to Paper Check
"RTN","RCDPENR4",57,0)
 .. ; GETEFT will have grabbed there rest
"RTN","RCDPENR4",58,0)
 .. S RCEFTST=$P(RCDATA,U,9)
"RTN","RCDPENR4",59,0)
 .. I (RCEFTST=1)!(RCEFTST>2) Q
"RTN","RCDPENR4",60,0)
 .. ;
"RTN","RCDPENR4",61,0)
 .. S RCERARCD=$P($P(RCDATA,U,7),".",1)  ;get the date of the ERA
"RTN","RCDPENR4",62,0)
 .. S RCTRACE=$P(RCDATA,U,2)             ;get the trace number
"RTN","RCDPENR4",63,0)
 .. S RCTRLN=$L(RCTRACE),RCTRBD=$S(RCTRLN<11:1,1:RCTRLN-9)
"RTN","RCDPENR4",64,0)
 .. S RCTRACE=$E(RCTRACE,RCTRBD,RCTRLN)  ; get the last 10 digits of Trace #
"RTN","RCDPENR4",65,0)
 .. S RCTIN=$P(RCDATA,U,3)               ;Payer TIN
"RTN","RCDPENR4",66,0)
 .. S RCINS=$P(RCDATA,U,6)               ;Insurance free text
"RTN","RCDPENR4",67,0)
 .. S RCPAYER=$$GETARPYR^RCDPENR2(RCTIN,RCINS) ; find the AR Payer IEN PRCA*4.5*321
"RTN","RCDPENR4",68,0)
 .. Q:'RCPAYER                           ; Quit if Payer/TIN not found
"RTN","RCDPENR4",69,0)
 .. Q:'$$INSCHK^RCDPENR2(RCPAYER)        ; Payer is not in the included list for the report
"RTN","RCDPENR4",70,0)
 .. S RCERANUM=$P(RCDATA,U,11)           ;# EOBs in ERA
"RTN","RCDPENR4",71,0)
 .. ;
"RTN","RCDPENR4",72,0)
 .. S RCLIEN=0
"RTN","RCDPENR4",73,0)
 .. F  S RCLIEN=$O(^RCY(344.4,RCIEN,1,RCLIEN)) Q:RCLIEN=""  D  Q
"RTN","RCDPENR4",74,0)
 ... S RCDTLDT=$G(^RCY(344.4,RCIEN,1,RCLIEN,0))   ;Get the ERA Detail
"RTN","RCDPENR4",75,0)
 ... Q:RCDTLDT=""             ;Quit if no ERA Detail
"RTN","RCDPENR4",76,0)
 ... ;
"RTN","RCDPENR4",77,0)
 ... S RCEOB=$P(RCDTLDT,U,2)  ;Get the EOB info
"RTN","RCDPENR4",78,0)
 ... Q:'RCEOB                 ;quit if no info
"RTN","RCDPENR4",79,0)
 ... ;
"RTN","RCDPENR4",80,0)
 ... ; Get the BILL/CLAIM IEN from the #399 file
"RTN","RCDPENR4",81,0)
 ... S RCBILL=$$BILLIEN^RCDPENR1(RCEOB)
"RTN","RCDPENR4",82,0)
 ... Q:RCBILL=""    ;EEOB corrupted, quit
"RTN","RCDPENR4",83,0)
 ... ;
"RTN","RCDPENR4",84,0)
 ... S RCDIV=$$DIV^IBJDF2(RCBILL)
"RTN","RCDPENR4",85,0)
 ... S RCDIV=$$GET1^DIQ(40.8,RCDIV_",",".01","E")
"RTN","RCDPENR4",86,0)
 ... ;
"RTN","RCDPENR4",87,0)
 ... S RCRATETP=$$GET1^DIQ(399,RCBILL_",",.07,"I")
"RTN","RCDPENR4",88,0)
 ... Q:RCRATETP'=RCRATE       ;Not requested Rate Type
"RTN","RCDPENR4",89,0)
 ... ;
"RTN","RCDPENR4",90,0)
 ... S RCDOS=$$GET1^DIQ(399,RCBILL_",",.03,"I")
"RTN","RCDPENR4",91,0)
 ... S RCAMTBL=$$GET1^DIQ(361.1,RCEOB_",",2.04,"I")
"RTN","RCDPENR4",92,0)
 ... S RCAMTPD=$$GET1^DIQ(361.1,RCEOB_",",1.01,"I")
"RTN","RCDPENR4",93,0)
 ... S RCDTBILL=$$GET1^DIQ(399,RCBILL_",",12,"I")
"RTN","RCDPENR4",94,0)
 ... Q:RCDTBILL=""   ;cant calculate if date first printed is NULL
"RTN","RCDPENR4",95,0)
 ... S RCMETHOD=$S($P($G(^RCY(344.4,RCIEN,1,RCLIEN,4)),U)="":"MANUAL",1:"AUTOPOST")
"RTN","RCDPENR4",96,0)
 ... S RCPAPER=$P($G(^RCY(344.4,RCLIEN,20)),U,3)  ; Paper EOB ERA?
"RTN","RCDPENR4",97,0)
 ... ;ERA not a paper ERA, is the EOB a Paper EOB
"RTN","RCDPENR4",98,0)
 ... S:'RCPAPER RCPAPER=$S($$GET1^DIQ(361.1,RCEOB_",",.17,"I")=0:"ERA",1:"PAPER")
"RTN","RCDPENR4",99,0)
 ... S RCEFTTYP=$S(RCEFTST=2:"PAPER",1:"EFT")
"RTN","RCDPENR4",100,0)
 ... S RCTRNTYP=RCPAPER_"/"_RCEFTTYP
"RTN","RCDPENR4",101,0)
 ... S RCERAIDX=$S(RCTRNTYP="ERA/EFT":1,RCTRNTYP="ERA/PAPER":2,RCTRNTYP="PAPER/EFT":3,1:4)
"RTN","RCDPENR4",102,0)
 ... Q:RCERAIDX=4   ;Paper Check Paper EOB not supported
"RTN","RCDPENR4",103,0)
 ... ;
"RTN","RCDPENR4",104,0)
 ... S RCPOSTED=$P($G(^RCY(344.4,RCIEN,7)),U)
"RTN","RCDPENR4",105,0)
 ... S RCINSTIN=RCINS_"/"_RCTIN
"RTN","RCDPENR4",106,0)
 ... ;
"RTN","RCDPENR4",107,0)
 ... S RCDATA=RCBILL_U_RCIEN_U_U_RCEOB_U_RCDOS_U_RCAMTBL_U_RCAMTPD_U_RCDTBILL_U_RCERARCD
"RTN","RCDPENR4",108,0)
 ... S RCDATA=RCDATA_U_U_RCPOSTED_U_RCTRACE_U_RCMETHOD_U
"RTN","RCDPENR4",109,0)
 ... S RCDATA=RCDATA_RCTRNTYP_U_RCERANUM_U_RCDIV_U_RCINSTIN_U
"RTN","RCDPENR4",110,0)
 ... S ^TMP("RCDPENR2",$J,"MAIN",RCINSTIN,RCERAIDX,RCBILL)=RCDATA
"RTN","RCDPENR4",111,0)
 ;
"RTN","RCDPENR4",112,0)
 ; Compile the list of payers using the payer TIN.  The Payer IENS are extracted
"RTN","RCDPENR4",113,0)
TINARY(RCSTART,RCEND) ;
"RTN","RCDPENR4",114,0)
 ;
"RTN","RCDPENR4",115,0)
 ;RCSTART - The text to start the search for insurance companies
"RTN","RCDPENR4",116,0)
 ;RCEND - The text to end the search for insurance companies,
"RTN","RCDPENR4",117,0)
 ;
"RTN","RCDPENR4",118,0)
 N RCI,RCJ,RCFILE
"RTN","RCDPENR4",119,0)
 ;
"RTN","RCDPENR4",120,0)
 ; Clear old data out
"RTN","RCDPENR4",121,0)
 K ^TMP("RCDPEADP",$J,"TIN")
"RTN","RCDPENR4",122,0)
 ;
"RTN","RCDPENR4",123,0)
 ; If start and end are NULL, then User wishes all payers, set flag and quit
"RTN","RCDPENR4",124,0)
 I (RCSTART=""),(RCEND="") S ^TMP("RCDPEADP",$J,"TIN","A")="" Q
"RTN","RCDPENR4",125,0)
 ;
"RTN","RCDPENR4",126,0)
 ; If single payer, find the IEN if it exists and post it.
"RTN","RCDPENR4",127,0)
 I RCSTART=RCEND D  Q
"RTN","RCDPENR4",128,0)
 . S RCJ=""
"RTN","RCDPENR4",129,0)
 . F  S RCJ=$O(^RCY(344.6,"C",RCSTART,RCJ)) Q:RCJ=""  D
"RTN","RCDPENR4",130,0)
 . . S ^TMP("RCDPEADP",$J,"TIN",RCJ)=""
"RTN","RCDPENR4",131,0)
 ;
"RTN","RCDPENR4",132,0)
 ; For a range of payers, loop through the Payer name list until 
"RTN","RCDPENR4",133,0)
 ; you reach the last payer in the range (RCEND)
"RTN","RCDPENR4",134,0)
 ;
"RTN","RCDPENR4",135,0)
 S RCI=$O(^RCY(344.6,"C",RCSTART),-1)    ; Set the starting location for the loop
"RTN","RCDPENR4",136,0)
 ; Loop through the index to find the correct entries.  Append a space
"RTN","RCDPENR4",137,0)
 F  S RCI=$O(^RCY(344.6,"C",RCI)) Q:RCI=""  Q:RCI]RCEND  D
"RTN","RCDPENR4",138,0)
 . S RCJ=""
"RTN","RCDPENR4",139,0)
 . F  S RCJ=$O(^RCY(344.6,"C",RCI,RCJ)) Q:RCJ=""  D
"RTN","RCDPENR4",140,0)
 . . S ^TMP("RCDPEADP",$J,"TIN",RCJ)=""
"RTN","RCDPENR4",141,0)
 ;
"RTN","RCDPENR4",142,0)
 Q
"RTN","RCDPENR4",143,0)
 ;
"RTN","RCDPENR4",144,0)
 ;Look at both Payer and Payer Tin lists and find insurance companies on both lists to report on.
"RTN","RCDPENR4",145,0)
INTRSCT() ;
"RTN","RCDPENR4",146,0)
 ;
"RTN","RCDPENR4",147,0)
 N RCLPIEN,RCPYRFLG
"RTN","RCDPENR4",148,0)
 ;
"RTN","RCDPENR4",149,0)
 ; If ALL payers was selected for both the Payer Name and Payer TIN parameters, set the all flag and quit.
"RTN","RCDPENR4",150,0)
 I $D(^TMP("RCDPEADP",$J,"TIN","A"))&$D(^TMP("RCDPEADP",$J,"INS","A")) S ^TMP("RCDPENR2",$J,"INS","A")="" Q 1
"RTN","RCDPENR4",151,0)
 ;
"RTN","RCDPENR4",152,0)
 ; If All payers was elected for Payer Name and Payer TIN had entries
"RTN","RCDPENR4",153,0)
 ; Loop through the Payer TIN array and update valid report array and quit
"RTN","RCDPENR4",154,0)
 I $D(^TMP("RCDPEADP",$J,"INS","A")) D  Q 1
"RTN","RCDPENR4",155,0)
 . M ^TMP("RCDPENR2",$J,"INS")=^TMP("RCDPEADP",$J,"TIN")
"RTN","RCDPENR4",156,0)
 . K ^TMP("RCDPEADP",$J,"INS","A")  ;remove the all flag from the list
"RTN","RCDPENR4",157,0)
 ;
"RTN","RCDPENR4",158,0)
 ; If All payers was elected for Payer TIN and Payer NAME had entries
"RTN","RCDPENR4",159,0)
 ; Loop through the Payer TIN array and update valid report array and quit
"RTN","RCDPENR4",160,0)
 I $D(^TMP("RCDPEADP",$J,"TIN","A")) D  Q 1
"RTN","RCDPENR4",161,0)
 . M ^TMP("RCDPENR2",$J,"INS")=^TMP("RCDPEADP",$J,"INS")
"RTN","RCDPENR4",162,0)
 . K ^TMP("RCDPENR2",$J,"TIN","A")  ;remove the all flag from the list
"RTN","RCDPENR4",163,0)
 ;
"RTN","RCDPENR4",164,0)
 ; A range of payers (1 or more) were selected for both Payer lists (Name and TIN)
"RTN","RCDPENR4",165,0)
 ; Loop through the TIN array and see if the Payer Name IEN is in the TIN array.
"RTN","RCDPENR4",166,0)
 ; If so, update the valid report array and quit.
"RTN","RCDPENR4",167,0)
 S RCPYRFLG=0,RCLPIEN=""
"RTN","RCDPENR4",168,0)
 F  S RCLPIEN=$O(^TMP("RCDPEADP",$J,"TIN",RCLPIEN)) Q:'RCLPIEN  D
"RTN","RCDPENR4",169,0)
 . I $D(^TMP("RCDPEADP",$J,"INS",RCLPIEN)) D
"RTN","RCDPENR4",170,0)
 . . S ^TMP("RCDPENR2",$J,"INS",RCLPIEN)=""
"RTN","RCDPENR4",171,0)
 . . S:'RCPYRFLG RCPYRFLG=1
"RTN","RCDPENR4",172,0)
 ;
"RTN","RCDPENR4",173,0)
 ; No payers found
"RTN","RCDPENR4",174,0)
 Q RCPYRFLG
"RTN","RCDPENR4",175,0)
 ;
"RTN","RCDPENR4",176,0)
 ;Print the data requested (Volume Statistics Report)
"RTN","RCDPENR4",177,0)
PRINTRP(RCTITLE,RCDATA,RCRPIEN,RCDISP,RCTFLG) ;
"RTN","RCDPENR4",178,0)
 ;
"RTN","RCDPENR4",179,0)
 ;Expected "^" delimeted format of RCDATA is:
"RTN","RCDPENR4",180,0)
 ; Piece 1 - # 837s
"RTN","RCDPENR4",181,0)
 ; Piece 2 - # NCPDPs
"RTN","RCDPENR4",182,0)
 ; Piece 3 - # 835s
"RTN","RCDPENR4",183,0)
 ; Piece 4 - # 837s with 835s
"RTN","RCDPENR4",184,0)
 ; Piece 5 - # NCPDPs with 835s
"RTN","RCDPENR4",185,0)
 ; Piece 6 - Avg days from 837 send to 835 receipt
"RTN","RCDPENR4",186,0)
 ; Piece 7 - Avg days from NCPDP send to 835 receipt
"RTN","RCDPENR4",187,0)
 ;
"RTN","RCDPENR4",188,0)
 ; Undeclared parameters RCLINE (line of "-" characters) RCSTOP (user requested stop flag)
"RTN","RCDPENR4",189,0)
 ;
"RTN","RCDPENR4",190,0)
 N RC835,RCNCPDP,RC837,RCNO837,RCNNCPDP,RCANCPDP,RCAVG837,RCSPACE,RCSTR,RCFLG
"RTN","RCDPENR4",191,0)
 ;
"RTN","RCDPENR4",192,0)
 I $Y>(IOSL-12),RCDISP D  Q:RCSTOP RCFLG
"RTN","RCDPENR4",193,0)
 . D ASK^RCDPEADP(.RCSTOP,0)
"RTN","RCDPENR4",194,0)
 . I RCSTOP S RCFLG=-1 Q
"RTN","RCDPENR4",195,0)
 . D HEADER^RCDPENR1
"RTN","RCDPENR4",196,0)
 ;
"RTN","RCDPENR4",197,0)
 S RCDISP=$G(RCDISP),RCTFLG=$G(RCTFLG)
"RTN","RCDPENR4",198,0)
 I RCDISP,RCTFLG D
"RTN","RCDPENR4",199,0)
 . W !,RCTITLE,!!
"RTN","RCDPENR4",200,0)
 . W RCLINE,!
"RTN","RCDPENR4",201,0)
 ;
"RTN","RCDPENR4",202,0)
 S RCSPACE=""
"RTN","RCDPENR4",203,0)
 S $P(RCSPACE," ",80)=""
"RTN","RCDPENR4",204,0)
 ;
"RTN","RCDPENR4",205,0)
 I RCDISP D  Q 1
"RTN","RCDPENR4",206,0)
 . W "NUMBER OF 837s TRANSMITTED TO MEDICAL PAYERS",?65,$J(+$P(RCDATA,U),10)
"RTN","RCDPENR4",207,0)
 . W !,"NUMBER OF NCPDP CLAIMS TRANSMITTED TO PHARMACY PBMs",?65,$J(+$P(RCDATA,U,2),10)
"RTN","RCDPENR4",208,0)
 . W !,"NUMBER OF 835s RECEIVED FROM MEDICAL PAYERS",?65,$J(+$P(RCDATA,U,3),10)
"RTN","RCDPENR4",209,0)
 . W !,"NUMBER OF 835s RECEIVED FROM PHARMACY PBMS",?65,$J(+$P(RCDATA,U,4),10)
"RTN","RCDPENR4",210,0)
 . W !,"NUMBER OF 837s WITH A CORRESPONDING 835 (MRA Excluded)",?65,$J(+$P(RCDATA,U,5),10)
"RTN","RCDPENR4",211,0)
 . W !,"NUMBER OF NCPDP CLAIM WITH A CORRESPONDING 835",?65,$J(+$P(RCDATA,U,6),10)
"RTN","RCDPENR4",212,0)
 . W !,"AVG #DAYS BETWEEN 837 TRANSMIT AND 835 RECEIVED",?65,$J(+$P(RCDATA,U,7),10,1)
"RTN","RCDPENR4",213,0)
 . W !,"AVG #DAYS BETWEEN NCPDP CLAIM TRANSMIT AND 835 RCVD",?65,$J(+$P(RCDATA,U,8),10,1)
"RTN","RCDPENR4",214,0)
 . W !,RCLINE,!
"RTN","RCDPENR4",215,0)
 I 'RCDISP D
"RTN","RCDPENR4",216,0)
 . S RCSTR="NUMBER OF 837s TRANSMITTED TO MEDICAL PAYERS^"_+$P(RCDATA,U)
"RTN","RCDPENR4",217,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",218,0)
 . S RCSTR="NUMBER OF NCPDP CLAIMS TRANSMITTED TO PHARMACY PBMs^"_+$P(RCDATA,U,2)
"RTN","RCDPENR4",219,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",220,0)
 . S RCSTR="NUMBER OF 835s RECEIVED FROM MEDICAL PAYERS^"_+$P(RCDATA,U,3)
"RTN","RCDPENR4",221,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",222,0)
 . S RCSTR="NUMBER OF 835s RECEIVED FROM PHARMACY PBMS^"_+$P(RCDATA,U,4)
"RTN","RCDPENR4",223,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",224,0)
 . S RCSTR="NUMBER OF 837s WITH A CORRESPONDING 835 (MRA Excluded)^"_+$P(RCDATA,U,5)
"RTN","RCDPENR4",225,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",226,0)
 . S RCSTR="NUMBER OF NCPDP CLAIM WITH A CORRESPONDING 835^"_+$P(RCDATA,U,6)
"RTN","RCDPENR4",227,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",228,0)
 . S RCSTR="AVG #DAYS BETWEEN 837 TRANSMIT AND 835 RECEIVED^"_+$P(RCDATA,U,7)
"RTN","RCDPENR4",229,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",230,0)
 . S RCSTR="AVG #DAYS BETWEEN NCPDP CLAIM TRANSMIT AND 835 RCVD^"_+$P(RCDATA,U,8)
"RTN","RCDPENR4",231,0)
 . D SAVEDATA^RCDPENR1(RCSTR,RCRPIEN)
"RTN","RCDPENR4",232,0)
 Q 1
"RTN","RCDPEP")
0^57^B147639796
"RTN","RCDPEP",1,0)
RCDPEP ;AITC/CJE - FLAG PAYERS AS PHARMACY/TRICARE ; 19-APR-2017
"RTN","RCDPEP",2,0)
 ;;4.5;Accounts Receivable;**321**;;Build 48
"RTN","RCDPEP",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEP",4,0)
 ;
"RTN","RCDPEP",5,0)
EN(FILTER,DATEFILT) ; -- main entry point for RCDPE PAYER FLAGS template
"RTN","RCDPEP",6,0)
 ; Input: FILTER - A=All payers, P=Pharmacy payers, T=Tricare payers,
"RTN","RCDPEP",7,0)
 ; M=Medical (Neither Pharmacy nor Tricare)
"RTN","RCDPEP",8,0)
 ; DATEFILT - Additional Filter by Date. Has 3 pieces by '^'
"RTN","RCDPEP",9,0)
 ;            Piece 1 - 1=Filter by date, 0=Don't
"RTN","RCDPEP",10,0)
 ;            Piece 2 - START - First DATE ADDED to include(FM format)
"RTN","RCDPEP",11,0)
 ;            Piece 3 - END - Last DATE ADDED to include (FM format)
"RTN","RCDPEP",12,0)
 ; 
"RTN","RCDPEP",13,0)
 I '$D(DATEFILT) S DATEFILT=$$GETDATE()
"RTN","RCDPEP",14,0)
 I DATEFILT=-1 Q  ;
"RTN","RCDPEP",15,0)
 I '$D(FILTER) S FILTER=$$GETFILT()
"RTN","RCDPEP",16,0)
 I FILTER=-1 Q  ;
"RTN","RCDPEP",17,0)
 ;
"RTN","RCDPEP",18,0)
 D EN^VALM("RCDPE PAYER FLAGS")
"RTN","RCDPEP",19,0)
 Q
"RTN","RCDPEP",20,0)
 ;
"RTN","RCDPEP",21,0)
GETDATE() ; Ask if the user wants to filter by date. If so prompt for start
"RTN","RCDPEP",22,0)
          ; and end dates.
"RTN","RCDPEP",23,0)
 ; Input: None
"RTN","RCDPEP",24,0)
 ; Output: Return value=date filter parameters delimiter by '^'
"RTN","RCDPEP",25,0)
 ;         Piece 1 - 1=Filter by date, 0=Don't
"RTN","RCDPEP",26,0)
 ;         Piece 2 - START - First DATE ADDED to include(FM format)
"RTN","RCDPEP",27,0)
 ;         Piece 3 - END - Last DATE ADDED to include (FM format)
"RTN","RCDPEP",28,0)
 ; 
"RTN","RCDPEP",29,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FD1,FD2,FILTER,OLDDATE,OD1,OD2,RETURN,X,XX,Y
"RTN","RCDPEP",30,0)
 D FULL^VALM1
"RTN","RCDPEP",31,0)
 S VALMBCK="R"
"RTN","RCDPEP",32,0)
 S RETURN="0"
"RTN","RCDPEP",33,0)
 ;
"RTN","RCDPEP",34,0)
 S XX=$P($P($G(XQORNOD(0)),"^",4),"=",2) ; User selection with action
"RTN","RCDPEP",35,0)
 S FD1=$P(XX,";",2),FD2=$P(XX,";",3)
"RTN","RCDPEP",36,0)
 ; See if user selection is valid (must be T + or - N days)
"RTN","RCDPEP",37,0)
 S FD1=$$PARSED(FD1)
"RTN","RCDPEP",38,0)
 S FD2=$$PARSED(FD2)
"RTN","RCDPEP",39,0)
 I FD1,FD2 Q 1_"^"_FD1_"^"_FD2
"RTN","RCDPEP",40,0)
 ;
"RTN","RCDPEP",41,0)
 S OLDDATE=$G(DATEFILT,0)
"RTN","RCDPEP",42,0)
 S OD1=$P(OLDDATE,"^",2),OD2=$P(OLDDATE,"^",3)
"RTN","RCDPEP",43,0)
 ;
"RTN","RCDPEP",44,0)
 S DIR(0)="YA"
"RTN","RCDPEP",45,0)
 S DIR("A")="Filter by Date Added? "
"RTN","RCDPEP",46,0)
 S DIR("B")=$S(OLDDATE:"YES",1:"NO")
"RTN","RCDPEP",47,0)
 S DIR("?",1)="Enter 'Y' or 'Yes' to filter the list by DATE ADDED"
"RTN","RCDPEP",48,0)
 S DIR("?")="Enter 'N' or 'No' if you do not wish to filter the list by date"
"RTN","RCDPEP",49,0)
 D ^DIR
"RTN","RCDPEP",50,0)
 I $D(DIRUT) Q -1
"RTN","RCDPEP",51,0)
 I Y=0 Q 0
"RTN","RCDPEP",52,0)
 S RETURN=1
"RTN","RCDPEP",53,0)
 ;
"RTN","RCDPEP",54,0)
 ; Prompt for start and end date
"RTN","RCDPEP",55,0)
 K DIR
"RTN","RCDPEP",56,0)
 S DIR(0)="DA^"
"RTN","RCDPEP",57,0)
 S DIR("A")="Filter start date: "
"RTN","RCDPEP",58,0)
 ; set default to existing filter start date if it is set.
"RTN","RCDPEP",59,0)
 I OD1'="" S DIR("B")=$$FMTE^XLFDT(OD1,"2DZ")
"RTN","RCDPEP",60,0)
 D ^DIR
"RTN","RCDPEP",61,0)
 I $D(DIRUT) Q -1
"RTN","RCDPEP",62,0)
 S (FD1,$P(RETURN,"^",2))=Y
"RTN","RCDPEP",63,0)
 ;
"RTN","RCDPEP",64,0)
 K DIR
"RTN","RCDPEP",65,0)
 S DIR(0)="DA^"_FD1_":"_DT
"RTN","RCDPEP",66,0)
 S DIR("A")="Filter end date ("
"RTN","RCDPEP",67,0)
 S DIR("A")=DIR("A")_$$FMTE^XLFDT(FD1,"2DZ")_"-"
"RTN","RCDPEP",68,0)
 S DIR("A")=DIR("A")_$$FMTE^XLFDT(DT,"2DZ")_"): "
"RTN","RCDPEP",69,0)
 ; Set default to existing filter end date if it is valid.
"RTN","RCDPEP",70,0)
 ; (it must follow the selected start date). Otherwise default to today.
"RTN","RCDPEP",71,0)
 I OD2'="",OD2'<FD1 S DIR("B")=$$FMTE^XLFDT(OD2,"2DZ")
"RTN","RCDPEP",72,0)
 I '$D(DIR("B")) S DIR("B")="T"
"RTN","RCDPEP",73,0)
 D ^DIR
"RTN","RCDPEP",74,0)
 I $D(DIRUT) Q -1
"RTN","RCDPEP",75,0)
 S (FD2,$P(RETURN,"^",3))=Y
"RTN","RCDPEP",76,0)
 ;
"RTN","RCDPEP",77,0)
 Q RETURN
"RTN","RCDPEP",78,0)
 ;
"RTN","RCDPEP",79,0)
GETFILT() ; Get filter on payer type
"RTN","RCDPEP",80,0)
 ; Input: None
"RTN","RCDPEP",81,0)
 ; Return: Filter type.
"RTN","RCDPEP",82,0)
 ;         A=All payers, P=Pharmacy payers, T=Tricare payers,
"RTN","RCDPEP",83,0)
 ;         M=Medical (Neither Pharmacy nor Tricare)
"RTN","RCDPEP",84,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FILTER,X,XX,Y
"RTN","RCDPEP",85,0)
 ; Check for value specified on protocol
"RTN","RCDPEP",86,0)
 S XX=$P($P($G(XQORNOD(0)),"^",4),"=",2) ; User selection with action
"RTN","RCDPEP",87,0)
 S XX=$E(XX)
"RTN","RCDPEP",88,0)
 I XX'="","APTM"[XX Q XX
"RTN","RCDPEP",89,0)
 ;
"RTN","RCDPEP",90,0)
 S DIR(0)="SA^A:All;P:Pharmacy only;T:Tricare only;M:Medical"
"RTN","RCDPEP",91,0)
 S DIR("A")="Select payers to show. (A)ll, (P)harmacy, (T)ricare, (M)edical: "
"RTN","RCDPEP",92,0)
 S DIR("B")="A"
"RTN","RCDPEP",93,0)
 S DIR("?",1)="Select the type of filter to determine what payers will"
"RTN","RCDPEP",94,0)
 S DIR("?",2)="be displayed as follows:"
"RTN","RCDPEP",95,0)
 S DIR("?",3)=" A - All payers including those with and without a flag"
"RTN","RCDPEP",96,0)
 S DIR("?",4)=" P - Only payers flagged for Pharmacy"
"RTN","RCDPEP",97,0)
 S DIR("?",5)=" T - Only payers flagged for Tricare"
"RTN","RCDPEP",98,0)
 S DIR("?")=" M - Payers NOT flagged for Pharmacy or Tricare"
"RTN","RCDPEP",99,0)
 ; S DIR("??")="RCDPE PAYER FLAGS FILTER"
"RTN","RCDPEP",100,0)
 ;
"RTN","RCDPEP",101,0)
 D ^DIR
"RTN","RCDPEP",102,0)
 I $D(DIRUT) Q -1
"RTN","RCDPEP",103,0)
 Q Y
"RTN","RCDPEP",104,0)
 ;
"RTN","RCDPEP",105,0)
HDR ; EP - header code for RCDPE PAYER FLAGS template
"RTN","RCDPEP",106,0)
 ; Input: Variables FILTER and DATEFILT are assumed to exist
"RTN","RCDPEP",107,0)
 ; Output: ListMan template header in VALMHDR array
"RTN","RCDPEP",108,0)
 ;
"RTN","RCDPEP",109,0)
 ; Show active filters in the template header
"RTN","RCDPEP",110,0)
 N FTEXT
"RTN","RCDPEP",111,0)
 S FTEXT=$S(FILTER="P":"Pharmacy",FILTER="T":"Tricare",FILTER="M":"Medical",1:"All")
"RTN","RCDPEP",112,0)
 S FTEXT=$$UP^XLFSTR(FTEXT)
"RTN","RCDPEP",113,0)
 S FTEXT=FTEXT_" Payers"
"RTN","RCDPEP",114,0)
 I DATEFILT D  ;
"RTN","RCDPEP",115,0)
 . S FTEXT=FTEXT_" added between "
"RTN","RCDPEP",116,0)
 . S FTEXT=FTEXT_$$FMTE^XLFDT($P(DATEFILT,"^",2),"2DZ")
"RTN","RCDPEP",117,0)
 . S FTEXT=FTEXT_" and "_$$FMTE^XLFDT($P(DATEFILT,"^",3),"2DZ")
"RTN","RCDPEP",118,0)
 S VALMHDR(1)="Current Filter: "_FTEXT
"RTN","RCDPEP",119,0)
 Q
"RTN","RCDPEP",120,0)
 ;
"RTN","RCDPEP",121,0)
INIT ; EP - init variables and list array for RCDPE PAYER FLAGS template
"RTN","RCDPEP",122,0)
 ; Input: Variables FILTER and DATEFILT are assumed to exist
"RTN","RCDPEP",123,0)
 ; Output: ^TMP("RCDPEP",$J) - Body lines to display for selected template
"RTN","RCDPEP",124,0)
 ;                             ^TMP($J,"RCDPEPIX") - Index of displayed payers
"RTN","RCDPEP",125,0)
 S SORT="B"
"RTN","RCDPEP",126,0)
 I $G(FILTER)="" S FILTER="A"
"RTN","RCDPEP",127,0)
 I $G(DATEFILT)="" S DATEFILT=0
"RTN","RCDPEP",128,0)
 K ^TMP("RCDPEP",$J),^TMP($J,"RCDPEPIX")
"RTN","RCDPEP",129,0)
 D BLD(SORT,FILTER,DATEFILT)
"RTN","RCDPEP",130,0)
 Q  ;
"RTN","RCDPEP",131,0)
 ;
"RTN","RCDPEP",132,0)
BLD(SORT,FILTER,DATEFILT) ; - Build the listman body template
"RTN","RCDPEP",133,0)
 ; Input: SORT=Index on 344.6 to use for display order
"RTN","RCDPEP",134,0)
 ; FILTER=Filter based on FLAG (see EN subroutine for detail)
"RTN","RCDPEP",135,0)
 ; DATEFILT=Filter based on date added.
"RTN","RCDPEP",136,0)
 N CNT,LINE,LN,XX
"RTN","RCDPEP",137,0)
 D GETPAY(FILTER,DATEFILT) ; get the list of payers sorted and filtered.
"RTN","RCDPEP",138,0)
 S VALMBG=1,VALMCNT=0,LINE="",CNT=""
"RTN","RCDPEP",139,0)
 ;
"RTN","RCDPEP",140,0)
 F  D  Q:CNT=""  ;
"RTN","RCDPEP",141,0)
 . S CNT=$O(^TMP($J,"RCDPEPIX",CNT))
"RTN","RCDPEP",142,0)
 . Q:CNT=""  ;
"RTN","RCDPEP",143,0)
 . S VALMCNT=VALMCNT+1
"RTN","RCDPEP",144,0)
 . D BLD1PAY(CNT)
"RTN","RCDPEP",145,0)
 Q
"RTN","RCDPEP",146,0)
 ;
"RTN","RCDPEP",147,0)
BLD1PAY(PAYCNT) ; (Re)build one payor line into the listman array
"RTN","RCDPEP",148,0)
 ; Input PAYCNT - The sequence number of the payer being built
"RTN","RCDPEP",149,0)
 ; Output - Lines set into template array (^TMP("RCDPEP",$J)).
"RTN","RCDPEP",150,0)
 N DATALN,LINE,XX
"RTN","RCDPEP",151,0)
 S LINE=$$SETSTR^VALM1(" "_PAYCNT,"",1,4)
"RTN","RCDPEP",152,0)
 S DATALN=^TMP($J,"RCDPEPIX",PAYCNT)
"RTN","RCDPEP",153,0)
 S XX=$P(DATALN,"^",2) ; Name
"RTN","RCDPEP",154,0)
 S XX=$E(XX,1,55) ; Truncate name to 55 characters to fit
"RTN","RCDPEP",155,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,6,55)
"RTN","RCDPEP",156,0)
 S XX=$P(DATALN,"^",3) ; Payer ID
"RTN","RCDPEP",157,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,63,10)
"RTN","RCDPEP",158,0)
 S XX=$P(DATALN,"^",5) ; Phamacy payer flag
"RTN","RCDPEP",159,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,75,2)
"RTN","RCDPEP",160,0)
 S XX=$P(DATALN,"^",6) ; Tricare payer flag
"RTN","RCDPEP",161,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,79,2)
"RTN","RCDPEP",162,0)
 S XX=$P(DATALN,"^",4) ; Date added
"RTN","RCDPEP",163,0)
 S LINE=$$SETSTR^VALM1(XX,LINE,82,10)
"RTN","RCDPEP",164,0)
 D SET^VALM10(PAYCNT,LINE,PAYCNT)
"RTN","RCDPEP",165,0)
 Q
"RTN","RCDPEP",166,0)
 ;
"RTN","RCDPEP",167,0)
GETPAY(FILTER,DATEFILT) ; Retrieve the payors sorted and filtered
"RTN","RCDPEP",168,0)
 ; Input: FILTER=Type of filter by Pharmacy or Tricare flag
"RTN","RCDPEP",169,0)
 ; DATEFILT=Filter by date added
"RTN","RCDPEP",170,0)
 ; Output: ^TMP($J,"RCDPEPIX")=PIEN^NAME^PHARMACY_FLAG^TRICARE_FLAG
"RTN","RCDPEP",171,0)
 N CNT,NAME,PIEN
"RTN","RCDPEP",172,0)
 S CNT=0,NAME=""
"RTN","RCDPEP",173,0)
 I $G(SORT)="" S SORT="B"
"RTN","RCDPEP",174,0)
 S FILTER=$G(FILTER)
"RTN","RCDPEP",175,0)
 F  D  Q:NAME=""  ;
"RTN","RCDPEP",176,0)
 . S NAME=$O(^RCY(344.6,SORT,NAME))
"RTN","RCDPEP",177,0)
 . Q:NAME=""
"RTN","RCDPEP",178,0)
 . S PIEN=""
"RTN","RCDPEP",179,0)
 . S PIEN=$O(^RCY(344.6,SORT,NAME,PIEN))
"RTN","RCDPEP",180,0)
 . Q:PIEN=""
"RTN","RCDPEP",181,0)
 . I '$$CHKPAY(PIEN,FILTER,DATEFILT) Q  ;
"RTN","RCDPEP",182,0)
 . S CNT=CNT+1 D GET1PAY(PIEN,CNT)
"RTN","RCDPEP",183,0)
 Q  ;
"RTN","RCDPEP",184,0)
 ;
"RTN","RCDPEP",185,0)
GET1PAY(PIEN,CNT) ; Get the data for one payer and add it to the list
"RTN","RCDPEP",186,0)
 ; Input: PIEN - Internal entry number to file 344.6
"RTN","RCDPEP",187,0)
 ; CNT - Incremental counter
"RTN","RCDPEP",188,0)
 ; Output: ^TMP($J,"RCDPEPIX",CNT)=A1^A2^A3^A4^A5^A6
"RTN","RCDPEP",189,0)
 ; Where A1=PIEN - The payer internal entry number on file 344.6
"RTN","RCDPEP",190,0)
 ;       A2=NAME - The payer name
"RTN","RCDPEP",191,0)
 ;       A3=PAYER ID (also known as TIN)
"RTN","RCDPEP",192,0)
 ;       A4=DATE ADDED
"RTN","RCDPEP",193,0)
 ;       A5=PHARMACY PAYER - A Yes/No/Null field to flag a payer as pharmacy
"RTN","RCDPEP",194,0)
 ;       A6=TRICARE PAYER - A Yes/No/Null filed to flag a payer as tricare
"RTN","RCDPEP",195,0)
 ;
"RTN","RCDPEP",196,0)
 N DATAOUT,DATEA,OUTARR,RCPF,RCTF
"RTN","RCDPEP",197,0)
 D GETS^DIQ(344.6,PIEN_",",".01;.02;.03;.09;.1","EI","OUTARR")
"RTN","RCDPEP",198,0)
 S DATAOUT=PIEN
"RTN","RCDPEP",199,0)
 S DATAOUT=DATAOUT_"^"_OUTARR(344.6,PIEN_",",.01,"E") ; Name
"RTN","RCDPEP",200,0)
 S DATAOUT=DATAOUT_"^"_OUTARR(344.6,PIEN_",",.02,"E") ; Payer ID
"RTN","RCDPEP",201,0)
 S DATEA=OUTARR(344.6,PIEN_",",.03,"I") ; Date added
"RTN","RCDPEP",202,0)
 S DATEA=$$FMTE^XLFDT(DATEA,"2DZ") ; Format as MM/DD/YY
"RTN","RCDPEP",203,0)
 S DATAOUT=DATAOUT_"^"_DATEA
"RTN","RCDPEP",204,0)
 S RCPF=$S(OUTARR(344.6,PIEN_",",.09,"I"):"Y",1:"")
"RTN","RCDPEP",205,0)
 S DATAOUT=DATAOUT_"^"_RCPF ; Pharmacy payer flag
"RTN","RCDPEP",206,0)
 S RCTF=$S(OUTARR(344.6,PIEN_",",.1,"I"):"Y",1:"")
"RTN","RCDPEP",207,0)
 S DATAOUT=DATAOUT_"^"_RCTF ; Tricare payer flag
"RTN","RCDPEP",208,0)
 S ^TMP($J,"RCDPEPIX",CNT)=DATAOUT
"RTN","RCDPEP",209,0)
 Q
"RTN","RCDPEP",210,0)
 ;
"RTN","RCDPEP",211,0)
CHKPAY(PIEN,FILTER,DATEFILT) ; Apply selected filters to a payer
"RTN","RCDPEP",212,0)
 ; Input: PIEN - Internal entry number to file 344.6
"RTN","RCDPEP",213,0)
 ; FILTER - A=All payers, P=Pharmacy payers, T=Tricare payers,
"RTN","RCDPEP",214,0)
 ;          M=Medical (Neither Pharmacy nor Tricare)
"RTN","RCDPEP",215,0)
 ; DATEFILT - Additional Filter by Date. Has 3 pieces by '^'
"RTN","RCDPEP",216,0)
 ;            Piece 1 - 1=Filter by date, 0=Don't
"RTN","RCDPEP",217,0)
 ;            Piece 2 - START - First DATE ADDED to include(FM format)
"RTN","RCDPEP",218,0)
 ;            Piece 3 - END - Last DATE ADDED to include (FM format)
"RTN","RCDPEP",219,0)
 ; Returns: 1 if record matches filter, otherwise 0.
"RTN","RCDPEP",220,0)
 N D1,D2,DC,CREATED,MATCHT,MATCHD,PFLAG,TFLAG
"RTN","RCDPEP",221,0)
 S (MATCHT,MATCHD)=0
"RTN","RCDPEP",222,0)
 I FILTER="A" D  ;
"RTN","RCDPEP",223,0)
 . S MATCHT=1
"RTN","RCDPEP",224,0)
 E  D  ;
"RTN","RCDPEP",225,0)
 . S PFLAG=$$GET1^DIQ(344.6,PIEN_",",.09,"I")
"RTN","RCDPEP",226,0)
 . S TFLAG=$$GET1^DIQ(344.6,PIEN_",",.1,"I")
"RTN","RCDPEP",227,0)
 . I FILTER="P",PFLAG S MATCHT=1
"RTN","RCDPEP",228,0)
 . I FILTER="T",TFLAG S MATCHT=1
"RTN","RCDPEP",229,0)
 . I FILTER="M",'PFLAG,'TFLAG S MATCHT=1
"RTN","RCDPEP",230,0)
 ;
"RTN","RCDPEP",231,0)
 I 'DATEFILT D  ;
"RTN","RCDPEP",232,0)
 . S MATCHD=1
"RTN","RCDPEP",233,0)
 E  D  ;
"RTN","RCDPEP",234,0)
 . S D1=$P(DATEFILT,"^",2)
"RTN","RCDPEP",235,0)
 . S D2=$P(DATEFILT,"^",3)
"RTN","RCDPEP",236,0)
 . S DC=$$GET1^DIQ(344.6,PIEN_",",.03,"I")
"RTN","RCDPEP",237,0)
 . S DC=$P(DC,".",1) ; strip off the time portion for comparison
"RTN","RCDPEP",238,0)
 . I DC=D1!(DC=D2)!(DC>D1&(DC<D2)) S MATCHD=1
"RTN","RCDPEP",239,0)
 ; 
"RTN","RCDPEP",240,0)
 Q MATCHT&MATCHD
"RTN","RCDPEP",241,0)
 ;
"RTN","RCDPEP",242,0)
CHKKEY() ; Check security key for editing
"RTN","RCDPEP",243,0)
 ; Inputs: None
"RTN","RCDPEP",244,0)
 ; Returns: 1 - User has security key editing, 0 - User does not have key
"RTN","RCDPEP",245,0)
 ;
"RTN","RCDPEP",246,0)
 Q 1 ; Always return 1 since security key is no longer required.
"RTN","RCDPEP",247,0)
 N RET
"RTN","RCDPEP",248,0)
 D OWNSKEY^XUSRB(.RET,"RCDPE PAYER IDENTIFY")
"RTN","RCDPEP",249,0)
 I 'RET(0) D  ;
"RTN","RCDPEP",250,0)
 . W !!,*7,">>>> Security key RCDPE PAYER IDENTIFY is required for this action"
"RTN","RCDPEP",251,0)
 . D PAUSE^VALM1
"RTN","RCDPEP",252,0)
 Q RET(0)
"RTN","RCDPEP",253,0)
 ;
"RTN","RCDPEP",254,0)
EDIT ; EP - for RCDPE PAYER FLAGS EDIT protocol
"RTN","RCDPEP",255,0)
 ; Input: None
"RTN","RCDPEP",256,0)
 ; Output: File 344.6 is updated
"RTN","RCDPEP",257,0)
 ;         Listman array is updated
"RTN","RCDPEP",258,0)
 ;
"RTN","RCDPEP",259,0)
 N DA,DIC,DIE,DO,DR,DTOUT,EDT,LINE,PCNT,PIEN,PROMPT,RET,SEL,X,XX,Y
"RTN","RCDPEP",260,0)
 S VALMBCK="R"
"RTN","RCDPEP",261,0)
 D FULL^VALM1
"RTN","RCDPEP",262,0)
 ; Check security key for edit access
"RTN","RCDPEP",263,0)
 I '$$CHKKEY() Q  ;
"RTN","RCDPEP",264,0)
 ;
"RTN","RCDPEP",265,0)
 S PROMPT="Select a Payer Entry to edit: "
"RTN","RCDPEP",266,0)
 S PIEN=$$SELENT(1,PROMPT,VALMBG,VALMLST,.SEL,"RCDPEPIX",0)
"RTN","RCDPEP",267,0)
 Q:'PIEN
"RTN","RCDPEP",268,0)
 ;
"RTN","RCDPEP",269,0)
 ; Lock Editing of this payer entry
"RTN","RCDPEP",270,0)
 L +^RCY(344.6,PIEN):3 I '$T D  Q
"RTN","RCDPEP",271,0)
  . W !!,*7,"Someone else is editing this Payer Entry."
"RTN","RCDPEP",272,0)
  . W !,"Try again later."
"RTN","RCDPEP",273,0)
  . D PAUSE^VALM1
"RTN","RCDPEP",274,0)
 ;
"RTN","RCDPEP",275,0)
 ; Let the user edit the payer entry
"RTN","RCDPEP",276,0)
 S DIE="^RCY(344.6,"
"RTN","RCDPEP",277,0)
 W !!,"Edit flags for payer : "_$$GET1^DIQ(344.6,PIEN_",",.01,"E"),!
"RTN","RCDPEP",278,0)
 S DA=PIEN
"RTN","RCDPEP",279,0)
 S DR=".09Pharmacy Flag;.1Tricare Flag"
"RTN","RCDPEP",280,0)
 D ^DIE
"RTN","RCDPEP",281,0)
 ;
"RTN","RCDPEP",282,0)
 L -^RCY(344.6,PIEN)
"RTN","RCDPEP",283,0)
 D GET1PAY(PIEN,+SEL)
"RTN","RCDPEP",284,0)
 D BLD1PAY(+SEL)
"RTN","RCDPEP",285,0)
 Q
"RTN","RCDPEP",286,0)
 ;
"RTN","RCDPEP",287,0)
SELENT(FULL,PROMPT,START,END,PCNT,WLIST,MULT) ; EP - Protocol Action
"RTN","RCDPEP",288,0)
 ; Select Entry(s) to perform an action upon
"RTN","RCDPEP",289,0)
 ; Called from protocols : RCDPE PAYER FLAGS EDIT
"RTN","RCDPEP",290,0)
 ; RCDPE PAYER FLAG PHARM
"RTN","RCDPEP",291,0)
 ; RCDPE PAYER FLAG TRIC
"RTN","RCDPEP",292,0)
 ; Input: FULL - 1 - full screen mode, 0 otherwise
"RTN","RCDPEP",293,0)
 ;        PROMPT - Prompt to be displayed to the user
"RTN","RCDPEP",294,0)
 ;        START - Starting selection value
"RTN","RCDPEP",295,0)
 ;        END - Ending selection value
"RTN","RCDPEP",296,0)
 ;        WLIST - Worklist, the user is selecting from
"RTN","RCDPEP",297,0)
 ;                Optional, defaults to 'RCDPEPIX'
"RTN","RCDPEP",298,0)
 ;        MULT - 1 to allow multiple selection,
"RTN","RCDPEP",299,0)
 ;               0 or null otherwise
"RTN","RCDPEP",300,0)
 ;               Optional defaults to 0
"RTN","RCDPEP",301,0)
 ; Output: PCNT - Selected Phone Book Entry line(s)
"RTN","RCDPEP",302,0)
 ; Returns: Selected Payer Entry IEN(s)
"RTN","RCDPEP",303,0)
 ;          Error message if invalid selection
"RTN","RCDPEP",304,0)
 N CTR,DIROUT,DIRUT,DLINE,DTOUT,DUOUT,PIEN,PIENS,X,XX,Y,YY
"RTN","RCDPEP",305,0)
 S:'$D(WLIST) WLIST="RCDPEPIX"
"RTN","RCDPEP",306,0)
 S:'$D(MULT) MULT=0
"RTN","RCDPEP",307,0)
 D:FULL FULL^VALM1
"RTN","RCDPEP",308,0)
 ; Check for multi-selection
"RTN","RCDPEP",309,0)
 S PCNT=$$PARSEL($G(XQORNOD(0)),START,END)
"RTN","RCDPEP",310,0)
 ;
"RTN","RCDPEP",311,0)
 ; W !!!,"PCNT="_PCNT_" MULT="_MULT H 10
"RTN","RCDPEP",312,0)
 I 'MULT,$P(PCNT,",",2) D  Q ""                      ; Invalid multi-selection
"RTN","RCDPEP",313,0)
 . W !,*7,">>>> Only single entry selection is allowed"
"RTN","RCDPEP",314,0)
 . K DIR
"RTN","RCDPEP",315,0)
 . D PAUSE^VALM1
"RTN","RCDPEP",316,0)
 S:PCNT="" PCNT=$$SELENTRY(PROMPT,START,END,MULT)
"RTN","RCDPEP",317,0)
 Q:'PCNT ""
"RTN","RCDPEP",318,0)
 ;
"RTN","RCDPEP",319,0)
 S PIENS=""
"RTN","RCDPEP",320,0)
 F CTR=1:1:$L(PCNT,",") D
"RTN","RCDPEP",321,0)
 . S XX=$P(PCNT,",",CTR)
"RTN","RCDPEP",322,0)
 . I XX'="" D  ;
"RTN","RCDPEP",323,0)
 . . S YY=$P(^TMP($J,WLIST,XX),"^",1)
"RTN","RCDPEP",324,0)
 . . S PIENS=$S(PIENS="":YY,1:PIENS_","_YY)
"RTN","RCDPEP",325,0)
 Q PIENS
"RTN","RCDPEP",326,0)
 ;
"RTN","RCDPEP",327,0)
SELENTRY(PROMPT,START,END,MULT) ; Select a line 
"RTN","RCDPEP",328,0)
 ; Input: PROMPT - Prompt to be displayed to the user
"RTN","RCDPEP",329,0)
 ; START - Start comment # that can be selected
"RTN","RCDPEP",330,0)
 ; END - Ending comment # that can be selected
"RTN","RCDPEP",331,0)
 ; MULT - 1=Multiple selection allowed, 0=otherwise
"RTN","RCDPEP",332,0)
 ; Returns: Selected Comment # or "" if not selected
"RTN","RCDPEP",333,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEP",334,0)
 S MULT=+$G(MULT)
"RTN","RCDPEP",335,0)
 S DIR(0)=$S(MULT:"L",1:"N")_"O^"_START_":"_END_":0"
"RTN","RCDPEP",336,0)
 S DIR("A")=PROMPT
"RTN","RCDPEP",337,0)
 D ^DIR K DIR
"RTN","RCDPEP",338,0)
 Q X
"RTN","RCDPEP",339,0)
 ;
"RTN","RCDPEP",340,0)
FLAGP ; EP - for RCDPE PAYER FLAG PHARM protocol
"RTN","RCDPEP",341,0)
 ; Toggle pharmacy flag on selected lines
"RTN","RCDPEP",342,0)
 ; Input: None
"RTN","RCDPEP",343,0)
 ; Output: None 
"RTN","RCDPEP",344,0)
 D FLAG("P")
"RTN","RCDPEP",345,0)
 Q
"RTN","RCDPEP",346,0)
 ;
"RTN","RCDPEP",347,0)
FLAGT ; EP - for RCDPE PAYER FLAG TRIC protocol
"RTN","RCDPEP",348,0)
 ; Toggle Tricare flag on selected lines
"RTN","RCDPEP",349,0)
 ; Input: None
"RTN","RCDPEP",350,0)
 ; Output: None 
"RTN","RCDPEP",351,0)
 D FLAG("T")
"RTN","RCDPEP",352,0)
 Q
"RTN","RCDPEP",353,0)
 ;
"RTN","RCDPEP",354,0)
FLAG(TYPE) ; Flag a list of entries as Pharmacy or Tricare
"RTN","RCDPEP",355,0)
 ; Input: TYPE - P=Pharmacy, T=Tricare
"RTN","RCDPEP",356,0)
 ; Output: File 344.6 is updated
"RTN","RCDPEP",357,0)
 ; ListMan array is updated
"RTN","RCDPEP",358,0)
 N CONTINUE,CTR,FIELD,PERR,PIEN,PIENS,PROMPT,SELS,STOP,XX,ZS,ZZ
"RTN","RCDPEP",359,0)
 S FIELD=$S(TYPE="P":.09,1:.1)
"RTN","RCDPEP",360,0)
 S VALMBCK="R"
"RTN","RCDPEP",361,0)
 ; Check security key for edit access
"RTN","RCDPEP",362,0)
 I '$$CHKKEY() Q  ;
"RTN","RCDPEP",363,0)
 ;
"RTN","RCDPEP",364,0)
 S PROMPT="Select lines on which to toggle "
"RTN","RCDPEP",365,0)
 S PROMPT=PROMPT_$S(TYPE="P":"Pharmacy",1:"Tricare")_" Flag"
"RTN","RCDPEP",366,0)
 S PIENS=$$SELENT(1,PROMPT,VALMBG,VALMLST,.SELS,"RCDPEPIX",1)
"RTN","RCDPEP",367,0)
 Q:PIENS=""  ;
"RTN","RCDPEP",368,0)
 S (PERR,PIEN,ZZ,ZS)=""
"RTN","RCDPEP",369,0)
 ;
"RTN","RCDPEP",370,0)
 ; First lock all entries to be deleted
"RTN","RCDPEP",371,0)
 F CTR=1:1:$L(PIENS,",") D
"RTN","RCDPEP",372,0)
 . S PIEN=$P(PIENS,",",CTR) I PIEN="" Q  ;
"RTN","RCDPEP",373,0)
 . S XX=$P(SELS,",",CTR)
"RTN","RCDPEP",374,0)
 . ;
"RTN","RCDPEP",375,0)
 . ; Lock this payer exclusion for editing 
"RTN","RCDPEP",376,0)
 . L +^RCY(344.6,PIEN):3 I '$T D  Q
"RTN","RCDPEP",377,0)
 . . S PERR=$S(PERR="":XX,1:PERR_","_XX)
"RTN","RCDPEP",378,0)
 . S ZZ=$S(ZZ="":PIEN,1:ZZ_","_PIEN)
"RTN","RCDPEP",379,0)
 . S ZS=$S(ZS="":XX,1:ZS_","_XX)
"RTN","RCDPEP",380,0)
 S PIENS=ZZ                                ; Entry(s) that can be deleted
"RTN","RCDPEP",381,0)
 S SELS=ZS
"RTN","RCDPEP",382,0)
 ;
"RTN","RCDPEP",383,0)
 ; Did we lock at least one entry?
"RTN","RCDPEP",384,0)
 I PIENS="" D  Q
"RTN","RCDPEP",385,0)
 . W !!,*7,"All entries are being edited by another user - Nothing done."
"RTN","RCDPEP",386,0)
 . D PAUSE^VALM1
"RTN","RCDPEP",387,0)
 ;
"RTN","RCDPEP",388,0)
 ; Next warn the user if we couldn't lock them all
"RTN","RCDPEP",389,0)
 I PERR'="" D  Q:STOP
"RTN","RCDPEP",390,0)
 . S STOP=0
"RTN","RCDPEP",391,0)
 . W !!,*7,"Warning: The following entries: ",PERR," are being edited by another user"
"RTN","RCDPEP",392,0)
 . W !,"These entries will not be updated."
"RTN","RCDPEP",393,0)
 . S CONTINUE=$$ASKYN("Continue with update of other payers?")
"RTN","RCDPEP",394,0)
 . I 'CONTINUE D
"RTN","RCDPEP",395,0)
 . . S STOP=1
"RTN","RCDPEP",396,0)
 . . F CTR=1:1:$L(PIENS,",") D
"RTN","RCDPEP",397,0)
 . . . S PIEN=$P(PIENS,",",CTR)
"RTN","RCDPEP",398,0)
 . . . L -^RCY(344.6,PIEN)
"RTN","RCDPEP",399,0)
 ;
"RTN","RCDPEP",400,0)
 ; Flag selected entries
"RTN","RCDPEP",401,0)
 F CTR=1:1:$L(PIENS,",") D  ;
"RTN","RCDPEP",402,0)
 . N FDA,IENS,OLDVAL,VALUE
"RTN","RCDPEP",403,0)
 . S PIEN=$P(PIENS,",",CTR)
"RTN","RCDPEP",404,0)
 . S IENS=PIEN_","
"RTN","RCDPEP",405,0)
 . S SEL=$P(SELS,",",CTR)
"RTN","RCDPEP",406,0)
 . S OLDVAL=$$GET1^DIQ(344.6,IENS,FIELD,"I")
"RTN","RCDPEP",407,0)
 . S VALUE=$S('OLDVAL:1,1:0)
"RTN","RCDPEP",408,0)
 . S FDA(344.6,IENS,FIELD)=VALUE
"RTN","RCDPEP",409,0)
 . L -^RCY(344.6,PIEN)
"RTN","RCDPEP",410,0)
 . D FILE^DIE("","FDA")
"RTN","RCDPEP",411,0)
 . D GET1PAY(PIEN,SEL)
"RTN","RCDPEP",412,0)
 . D BLD1PAY(SEL)
"RTN","RCDPEP",413,0)
 Q
"RTN","RCDPEP",414,0)
 ;
"RTN","RCDPEP",415,0)
FILTER ; EP - for RCDPE PAYER FLAGS FILTER protocol
"RTN","RCDPEP",416,0)
 ; Change the filter from a protocol
"RTN","RCDPEP",417,0)
 ; Inputs - None
"RTN","RCDPEP",418,0)
 ; Output - Sets variables FILTER and DATEFILT
"RTN","RCDPEP",419,0)
 N NEWDATE,NEWFILT
"RTN","RCDPEP",420,0)
 S VALMBCK="R"
"RTN","RCDPEP",421,0)
 D FULL^VALM1
"RTN","RCDPEP",422,0)
 S NEWDATE=$$GETDATE()
"RTN","RCDPEP",423,0)
 I NEWDATE=-1 Q  ;
"RTN","RCDPEP",424,0)
 S NEWFILT=$$GETFILT()
"RTN","RCDPEP",425,0)
 I NEWFILT=-1 Q  ;
"RTN","RCDPEP",426,0)
 S DATEFILT=NEWDATE
"RTN","RCDPEP",427,0)
 S FILTER=NEWFILT
"RTN","RCDPEP",428,0)
 D HDR,INIT
"RTN","RCDPEP",429,0)
 Q
"RTN","RCDPEP",430,0)
 ;
"RTN","RCDPEP",431,0)
PARSEL(VALMNOD,BEG,END) ; -- split out pre-answers from user
"RTN","RCDPEP",432,0)
 ; Inputs - VALMNOD= User input from protocol menu including pre-answers
"RTN","RCDPEP",433,0)
 ;          BEG=Begining of the valid numeric range
"RTN","RCDPEP",434,0)
 ;          END=End of the valid numeric range
"RTN","RCDPEP",435,0)
 ; Returns - Y=Comma separated list of valid numeric entries
"RTN","RCDPEP",436,0)
 ;
"RTN","RCDPEP",437,0)
 ; This code is adapted from VALM2. 
"RTN","RCDPEP",438,0)
 N I,J,L,X,Y
"RTN","RCDPEP",439,0)
 S Y=$TR($P($P(VALMNOD,U,4),"=",2),"/\; .",",,,,,")
"RTN","RCDPEP",440,0)
 ; Run through the list, skip invalid selections and expand ranges
"RTN","RCDPEP",441,0)
 S X=Y,Y=""
"RTN","RCDPEP",442,0)
 F I=1:1 S J=$P(X,",",I) Q:J=""  D  ;
"RTN","RCDPEP",443,0)
 . I J'["-",J>(BEG-1),J<(END+1) S Y=Y_J_"," ; single valid selection 
"RTN","RCDPEP",444,0)
 . I J["-",J,J<$P(J,"-",2) D  ;
"RTN","RCDPEP",445,0)
 . . F L=+J:1:+$P(J,"-",2) D  ;
"RTN","RCDPEP",446,0)
 . . . I L>(BEG-1),L<(END+1) S Y=Y_L_"," ; valid selection from expanded range
"RTN","RCDPEP",447,0)
 Q Y
"RTN","RCDPEP",448,0)
 ;
"RTN","RCDPEP",449,0)
PARSED(X) ; Take a date in external format and check if it is a valid
"RTN","RCDPEP",450,0)
          ; DATE ADDED (.03) in file 344.6
"RTN","RCDPEP",451,0)
 ; Input - Date in External format
"RTN","RCDPEP",452,0)
 ; Output - Date in Fileman format or 0 if the input was invalid
"RTN","RCDPEP",453,0)
 D VAL^DIE(344.6,"+1,",.03,"",X,.RET)
"RTN","RCDPEP",454,0)
 Q RET
"RTN","RCDPEP",455,0)
 ;
"RTN","RCDPEP",456,0)
ASKYN(PROMPT,DEFAULT) ; Ask a yes/no question
"RTN","RCDPEP",457,0)
 ; Input: PROMPT - Question to be asked
"RTN","RCDPEP",458,0)
 ;        DEFAULT - Default Answer
"RTN","RCDPEP",459,0)
 ;        1 - YES, 0 - NO
"RTN","RCDPEP",460,0)
 ;        Optional, defaults to 0
"RTN","RCDPEP",461,0)
 ; Returns: 1 - User answered YES, 0 othewise
"RTN","RCDPEP",462,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPEP",463,0)
 S:$G(DEFAULT)'=1 DEFAULT=0
"RTN","RCDPEP",464,0)
 S DIR(0)="Y",DIR("A")=PROMPT
"RTN","RCDPEP",465,0)
 S DIR("B")=$S(DEFAULT:"YES",1:"NO")
"RTN","RCDPEP",466,0)
 D ^DIR
"RTN","RCDPEP",467,0)
 Q Y
"RTN","RCDPEP",468,0)
 ;
"RTN","RCDPEP",469,0)
HELP ; EP - for template RCDPE PAYER FLAGS help
"RTN","RCDPEP",470,0)
 ; Input: None
"RTN","RCDPEP",471,0)
 ; Output: Text from a help frame displayed to the screen
"RTN","RCDPEP",472,0)
 N FILTER,DATEFILT,XQH
"RTN","RCDPEP",473,0)
 S VALMBCK="R"
"RTN","RCDPEP",474,0)
 S XQH="RCDPE PAYER FLAGS GENERAL"
"RTN","RCDPEP",475,0)
 D EN^XQH
"RTN","RCDPEP",476,0)
 Q
"RTN","RCDPEP",477,0)
 ;
"RTN","RCDPEP",478,0)
EXIT ; -- exit code
"RTN","RCDPEP",479,0)
 D FULL^VALM1
"RTN","RCDPEP",480,0)
 Q
"RTN","RCDPESP")
0^55^B166335480
"RTN","RCDPESP",1,0)
RCDPESP ;BIRM/EWL - ePayment Lockbox Site Parameters Definition - Files 344.61 & 344.6 ;Nov 19, 2014@15:26:16
"RTN","RCDPESP",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPESP",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP",4,0)
 ;
"RTN","RCDPESP",5,0)
EN ; entry point for EDI Lockbox Parameters [RCDPE EDI LOCKBOX PARAMETERS]
"RTN","RCDPESP",6,0)
 N DA,DIC,DIE,DIR,DIRUT,DLAYGO,DR,DTOUT,DUOUT,X,Y  ; FileMan variables
"RTN","RCDPESP",7,0)
 ;
"RTN","RCDPESP",8,0)
 W !," Update AR Site Parameters",!
"RTN","RCDPESP",9,0)
 ;
"RTN","RCDPESP",10,0)
 S X="RCDPE AUTO DEC" I '$D(^XUSEC(X,DUZ)) W !!,"You do not hold the "_X_" security key." Q
"RTN","RCDPESP",11,0)
 ; Lock the parameter file
"RTN","RCDPESP",12,0)
 L +^RCY(344.61,1):DILOCKTM E  D  Q
"RTN","RCDPESP",13,0)
 .W !!," Another user is currently using the AR Site Parameters option."
"RTN","RCDPESP",14,0)
 .W !," Please try again later."
"RTN","RCDPESP",15,0)
 ;
"RTN","RCDPESP",16,0)
 ; Check parameter file
"RTN","RCDPESP",17,0)
 N FDAEDI,FDAPAYER,IEN,IENS,RCQUIT
"RTN","RCDPESP",18,0)
 ; FDAPAYER - FDA array for RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP",19,0)
 ; FDAEDI - FDA array for RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP",20,0)
 ; RCAUDVAL - audit data for RCDPE PARAMETER AUDIT file (#344.7)
"RTN","RCDPESP",21,0)
 ; IEN - entry #
"RTN","RCDPESP",22,0)
 ; IENS - IEN_comma
"RTN","RCDPESP",23,0)
 ; RCQUIT - exit flag
"RTN","RCDPESP",24,0)
 ;
"RTN","RCDPESP",25,0)
 ; function returns 1 on success
"RTN","RCDPESP",26,0)
 S Y=$$EDILOCK^RCMSITE  ; Update EDI Lockbox site parameters
"RTN","RCDPESP",27,0)
 I 'Y G ABORT  ; user entered '^'
"RTN","RCDPESP",28,0)
 ;
"RTN","RCDPESP",29,0)
 ;----------------------------------------------
"RTN","RCDPESP",30,0)
 ; prca*4.5*304
"RTN","RCDPESP",31,0)
 ; Enable/disable auto-auditing of paper bills
"RTN","RCDPESP",32,0)
 ;----------------------------------------------
"RTN","RCDPESP",33,0)
 ;
"RTN","RCDPESP",34,0)
 S RCQUIT=0 W !
"RTN","RCDPESP",35,0)
 S RCQUIT=$$AUDIT^RCDPESP5
"RTN","RCDPESP",36,0)
 Q:RCQUIT
"RTN","RCDPESP",37,0)
 ;
"RTN","RCDPESP",38,0)
 W !
"RTN","RCDPESP",39,0)
 I '$D(^RCY(344.61,1,0)) W !,"There is a problem with the RCDPE PARAMETER file (#344.61)." G EXIT
"RTN","RCDPESP",40,0)
 ;
"RTN","RCDPESP",41,0)
 ;----------------------------------------------
"RTN","RCDPESP",42,0)
 ; prca*4.5*321
"RTN","RCDPESP",43,0)
 ; WORKLOAD NOTIFICATION BULLETIN DAYS
"RTN","RCDPESP",44,0)
 ;----------------------------------------------
"RTN","RCDPESP",45,0)
 N BULL S BULL=$$GET1^DIQ(344.61,"1,",.1,"I")
"RTN","RCDPESP",46,0)
 K DIR S:BULL]"" DIR("B")=$$GET1^DIQ(344.61,"1,",.1,"E")
"RTN","RCDPESP",47,0)
 S DIR("?")=$$GET1^DID(344.61,.1,,"HELP-PROMPT")
"RTN","RCDPESP",48,0)
 S DIR("A")=$$GET1^DID(344.61,.1,,"TITLE")
"RTN","RCDPESP",49,0)
 S DIR(0)="344.61,.1"
"RTN","RCDPESP",50,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",51,0)
 I BULL'=Y D  ; update and audit
"RTN","RCDPESP",52,0)
 .S RCAUDVAL(1)="344.61^.1^1^"_Y_U_BULL
"RTN","RCDPESP",53,0)
 .S FDAEDI(344.61,"1,",.1)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",54,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",55,0)
 W !
"RTN","RCDPESP",56,0)
 ;
"RTN","RCDPESP",57,0)
 ;----------------------------------------------
"RTN","RCDPESP",58,0)
 ; Enable/disable auto-posting of medical claims
"RTN","RCDPESP",59,0)
 ;----------------------------------------------
"RTN","RCDPESP",60,0)
 N APMC,APMCT
"RTN","RCDPESP",61,0)
 ;PRCA*4.5*304 Move from Medical Auto decrease section below
"RTN","RCDPESP",62,0)
 N ADMC  ; ^DD(344.61,.03,0)="AUTO-DECREASE MED ENABLED^S^0:No;1:Yes;^0;3^Q"
"RTN","RCDPESP",63,0)
 S ADMC=""  ; Init in case Medical Auto Posting is turned off.
"RTN","RCDPESP",64,0)
 ;end PRCA*4.5*304
"RTN","RCDPESP",65,0)
 ; APMC=AUTO POSTING OF MEDICAL CLAIMS ENABLED
"RTN","RCDPESP",66,0)
 ; APMCT=TEMP APMC
"RTN","RCDPESP",67,0)
 S APMCT=$$GET1^DIQ(344.61,"1,",.02,"I"),APMC=$S(APMCT=1:"Yes",APMCT=0:"No",1:"")
"RTN","RCDPESP",68,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(APMC="":"Y",1:APMC)
"RTN","RCDPESP",69,0)
 S DIR("A")=$$GET1^DID(344.61,.02,,"TITLE")
"RTN","RCDPESP",70,0)
 S DIR("?")=$$GET1^DID(344.61,.02,,"HELP-PROMPT")
"RTN","RCDPESP",71,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",72,0)
 I APMCT'=Y D  ; user updated value
"RTN","RCDPESP",73,0)
 .S FDAEDI(344.61,"1,",.02)=Y D FILE^DIE(,"FDAEDI") K FDAEDI
"RTN","RCDPESP",74,0)
 .D NOTIFY($S(Y=1:"Yes",Y=0:"No",1:"*missing*"))
"RTN","RCDPESP",75,0)
 .S RCAUDVAL(1)="344.61^.02^1^"_Y_U_('Y) D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",76,0)
 ;
"RTN","RCDPESP",77,0)
 I Y=0 G RXPARMS
"RTN","RCDPESP",78,0)
 ;
"RTN","RCDPESP",79,0)
 ; Set/Reset payer exclusions for medical claim posting
"RTN","RCDPESP",80,0)
 D EXCLLIST(1) ; Display the exclusion list
"RTN","RCDPESP",81,0)
 D SETEXCL(1) I $G(RCQUIT) G ABORT ; SET/RESET exclusions
"RTN","RCDPESP",82,0)
 D EXCLLIST(1) ; Display the exclusion list
"RTN","RCDPESP",83,0)
 W !
"RTN","RCDPESP",84,0)
 ;
"RTN","RCDPESP",85,0)
 ; Enable/disable auto-decrease of medical claims
"RTN","RCDPESP",86,0)
 K FDAEDI  ; used for FILE^DIE call
"RTN","RCDPESP",87,0)
 S ADMC=$$GET1^DIQ(344.61,"1,",.03,"I") ; get current value
"RTN","RCDPESP",88,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(ADMC=""!(ADMC=1):"Yes",1:"No")
"RTN","RCDPESP",89,0)
 S DIR("A")=$$GET1^DID(344.61,.03,,"TITLE")
"RTN","RCDPESP",90,0)
 S DIR("?")=$$GET1^DID(344.61,.03,,"HELP-PROMPT")
"RTN","RCDPESP",91,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",92,0)
 ; if user changed value, update and audit
"RTN","RCDPESP",93,0)
 S:ADMC'=Y FDAEDI(344.61,"1,",.03)=Y,RCAUDVAL(1)="344.61^.03^1^"_Y_U_ADMC
"RTN","RCDPESP",94,0)
 I Y=0 D  G RXPARMS  ; value set to No, update (if needed), go to Pharmacy params.
"RTN","RCDPESP",95,0)
 . D:$D(FDAEDI) FILE^DIE(,"FDAEDI"),AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",96,0)
 ;
"RTN","RCDPESP",97,0)
 ; If auto-decrease (medical for now) on, ask about CARC/RARC auto-decrease setup
"RTN","RCDPESP",98,0)
 W !
"RTN","RCDPESP",99,0)
 S RCQUIT=0
"RTN","RCDPESP",100,0)
 D CARC^RCDPESP5(.RCQUIT) ; pass RCQUIT by reference - PRCA*4.5*321
"RTN","RCDPESP",101,0)
 W !
"RTN","RCDPESP",102,0)
 ; If no active CARCs Turn medical auto-decrease off, Then go to Pharacy params
"RTN","RCDPESP",103,0)
 I ($$COUNT(1)=0)&($$GET1^DIQ(344.61,"1,",.03,"I")=1) D  G RXPARMS
"RTN","RCDPESP",104,0)
 . K FDAEDI,RCAUDVAL
"RTN","RCDPESP",105,0)
 . S ADMC=$$GET1^DIQ(344.61,"1,",.03,"I")
"RTN","RCDPESP",106,0)
 . S FDAEDI(344.61,"1,",.03)=0,RCAUDVAL(1)="344.61^.03^1^"_0_U_ADMC_U_"SYSTEM disabled Medical Auto-decrease, there are NO active CARCs"
"RTN","RCDPESP",107,0)
 . D FILE^DIE(,"FDAEDI"),AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",108,0)
 . W !,"*** System has DISABLED Medical Auto-decrease, there are NO active CARCs.",!
"RTN","RCDPESP",109,0)
 . D PAUSE
"RTN","RCDPESP",110,0)
 Q:RCQUIT
"RTN","RCDPESP",111,0)
 ;
"RTN","RCDPESP",112,0)
 ; Set number of days to wait before auto-decrease amount
"RTN","RCDPESP",113,0)
 N ADMT ; ^DD(344.61,.04,0) = AUTO-DECREASE MED DAYS DEFAULT
"RTN","RCDPESP",114,0)
 S ADMT=$$GET1^DIQ(344.61,"1,",.04)
"RTN","RCDPESP",115,0)
 K DIR S:ADMT]"" DIR("B")=ADMT
"RTN","RCDPESP",116,0)
 S (DIR("?"),DIR("??"))=$$GET1^DID(344.61,.04,,"HELP-PROMPT")
"RTN","RCDPESP",117,0)
 S DIR(0)="NA^0:7:0",DIR("A")=$$GET1^DID(344.61,.04,,"TITLE")
"RTN","RCDPESP",118,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",119,0)
 S:ADMT'=Y FDAEDI(344.61,"1,",.04)=Y,RCAUDVAL(2)="344.61^.04^1^"_Y_U_ADMT
"RTN","RCDPESP",120,0)
 ;
"RTN","RCDPESP",121,0)
 ; PRCA*4.5*304 - removed general auto-decrease amount in favor of auto-decrease by CARC
"RTN","RCDPESP",122,0)
 ;
"RTN","RCDPESP",123,0)
 ; file changes to medical auto-post and auto-decrease parameters
"RTN","RCDPESP",124,0)
 D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",125,0)
 D:$D(RCAUDVAL) AUDIT(.RCAUDVAL)
"RTN","RCDPESP",126,0)
 K RCAUDVAL
"RTN","RCDPESP",127,0)
 ;
"RTN","RCDPESP",128,0)
 ; Set/Reset payer exclusions for medical claim decrease
"RTN","RCDPESP",129,0)
 D EXCLLIST(2) ; Display the exclusion list
"RTN","RCDPESP",130,0)
 D SETEXCL(2) I $G(RCQUIT) G ABORT ; SET/RESET exclusions
"RTN","RCDPESP",131,0)
 D EXCLLIST(2) ; Display the exclusion list
"RTN","RCDPESP",132,0)
 W !
"RTN","RCDPESP",133,0)
 ;
"RTN","RCDPESP",134,0)
 ; code falls through
"RTN","RCDPESP",135,0)
 ;
"RTN","RCDPESP",136,0)
RXPARMS ; branch here from above
"RTN","RCDPESP",137,0)
 ;----------------------------------------------
"RTN","RCDPESP",138,0)
 ; Enable/disable auto-posting of pharmacy claims
"RTN","RCDPESP",139,0)
 ;----------------------------------------------
"RTN","RCDPESP",140,0)
 N APPC,APPCT
"RTN","RCDPESP",141,0)
 ; APPC=AUTO POSTING OF PHARMACY CLAIMS ENABLED
"RTN","RCDPESP",142,0)
 ; APPCT=TEMP APMC
"RTN","RCDPESP",143,0)
 S APPCT=$$GET1^DIQ(344.61,"1,",1.01,"I"),APPC=$S(APPCT=1:"Yes",APPCT=0:"No",1:"")
"RTN","RCDPESP",144,0)
 K DIR S DIR(0)="YA",DIR("B")=$S(APPC="":"Yes",1:APPC)
"RTN","RCDPESP",145,0)
 S DIR("A")=$$GET1^DID(344.61,1.01,,"TITLE")
"RTN","RCDPESP",146,0)
 S DIR("?")=$$GET1^DID(344.61,1.01,,"HELP-PROMPT")
"RTN","RCDPESP",147,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",148,0)
 I APPCT'=Y D  ; user updated value
"RTN","RCDPESP",149,0)
 .S FDAEDI(344.61,"1,",1.01)=Y D FILE^DIE(,"FDAEDI") K FDAEDI
"RTN","RCDPESP",150,0)
 .D NOTIFY($S(Y=1:"Yes",Y=0:"No",1:"*missing*"),1)
"RTN","RCDPESP",151,0)
 .S RCAUDVAL(1)="344.61^1.01^1^"_Y_U_('Y) D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",152,0)
 ;
"RTN","RCDPESP",153,0)
 ; If yes, set/Reset payer exclusions for pharmacy claims posting
"RTN","RCDPESP",154,0)
 I Y=1 D  G:$G(RCQUIT)=1 ABORT
"RTN","RCDPESP",155,0)
 . D EXCLLIST(3) ; Display the exclusion list
"RTN","RCDPESP",156,0)
 . D SETEXCL(3) Q:$G(RCQUIT)  ; SET/RESET exclusions
"RTN","RCDPESP",157,0)
 . D EXCLLIST(3) ; Display the exclusion list
"RTN","RCDPESP",158,0)
 . W !
"RTN","RCDPESP",159,0)
 . ;
"RTN","RCDPESP",160,0)
 ;
"RTN","RCDPESP",161,0)
 ; Show Pharmacy prompt but don't allow change
"RTN","RCDPESP",162,0)
 D:$$GET1^DIQ(344.61,"1,",1.01,"I")=1  G:$G(RCQUIT)=1 ABORT
"RTN","RCDPESP",163,0)
 . W !,"ENABLE AUTO-DECREASE OF PHARMACY CLAIMS (Y/N): NO//"
"RTN","RCDPESP",164,0)
 . W !,"   Determines if auto-decrease of pharmacy claims are enabled for this site."
"RTN","RCDPESP",165,0)
 . W !,"   NOTE:  Not editable and set to Disabled until further notice.",!
"RTN","RCDPESP",166,0)
 . K DIR S DIR(0)="EA"
"RTN","RCDPESP",167,0)
 . S DIR("A")="Press Enter to continue: "
"RTN","RCDPESP",168,0)
 . D ^DIR I $D(DTOUT)!$D(DUOUT) S RCQUIT=1
"RTN","RCDPESP",169,0)
 . W !
"RTN","RCDPESP",170,0)
 ;
"RTN","RCDPESP",171,0)
 ; set MEDICAL EFT OVERRIDE ^DD(344.61,.06,0) = MEDICAL EFT POST PREVENT DAYS
"RTN","RCDPESP",172,0)
 N MEO S MEO=$$GET1^DIQ(344.61,"1,",.06)
"RTN","RCDPESP",173,0)
 K DIR S:MEO]"" DIR("B")=MEO
"RTN","RCDPESP",174,0)
 S DIR("?")=$$GET1^DID(344.61,.06,,"HELP-PROMPT")
"RTN","RCDPESP",175,0)
 S DIR(0)="NA^14:60:0",DIR("A")=$$GET1^DID(344.61,.06,,"TITLE") ; PRCA*4.5*321 Change max from 99 to 60
"RTN","RCDPESP",176,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",177,0)
 I MEO'=Y D  ; update and audit
"RTN","RCDPESP",178,0)
 .S RCAUDVAL(1)="344.61^.06^1^"_Y_U_MEO
"RTN","RCDPESP",179,0)
 .S FDAEDI(344.61,"1,",.06)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",180,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",181,0)
 ;
"RTN","RCDPESP",182,0)
 ;----------------------------------------------
"RTN","RCDPESP",183,0)
 ; Set PHARMACY EFT OVERRIDE
"RTN","RCDPESP",184,0)
 ;----------------------------------------------
"RTN","RCDPESP",185,0)
 N PEO S PEO=$$GET1^DIQ(344.61,"1,",.07)
"RTN","RCDPESP",186,0)
 K DIR S:PEO]"" DIR("B")=PEO
"RTN","RCDPESP",187,0)
 S DIR("?")=$$GET1^DID(344.61,.07,,"HELP-PROMPT")
"RTN","RCDPESP",188,0)
 S DIR(0)="NA^21:365:0",DIR("A")=$$GET1^DID(344.61,.07,,"TITLE") ; PRCA*4.5*321 Change max from 999 to 365
"RTN","RCDPESP",189,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) G ABORT
"RTN","RCDPESP",190,0)
 I PEO'=Y D  ; update and audit
"RTN","RCDPESP",191,0)
 .S RCAUDVAL(1)="344.61^.07^1^"_Y_U_PEO
"RTN","RCDPESP",192,0)
 .S FDAEDI(344.61,"1,",.07)=Y D FILE^DIE(,"FDAEDI")
"RTN","RCDPESP",193,0)
 .D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",194,0)
 ;
"RTN","RCDPESP",195,0)
 G EXIT
"RTN","RCDPESP",196,0)
 ;
"RTN","RCDPESP",197,0)
ABORT ; Called when user enters a '^' or times out
"RTN","RCDPESP",198,0)
 ; fall through to EXIT
"RTN","RCDPESP",199,0)
 ;
"RTN","RCDPESP",200,0)
EXIT ; Unlock, ask user to press return, exit
"RTN","RCDPESP",201,0)
 L -^RCY(344.61,1)
"RTN","RCDPESP",202,0)
 D PAUSE
"RTN","RCDPESP",203,0)
 Q
"RTN","RCDPESP",204,0)
 ;
"RTN","RCDPESP",205,0)
PAUSE ; prompt user to press return
"RTN","RCDPESP",206,0)
 W ! N DIR
"RTN","RCDPESP",207,0)
 S DIR("T")=3,DIR(0)="E",DIR("A")="Press RETURN to continue" D ^DIR
"RTN","RCDPESP",208,0)
 Q
"RTN","RCDPESP",209,0)
 ;
"RTN","RCDPESP",210,0)
COUNT(TYPE) ; Count active CARCs in file 344.62 (RCDPE CARC-RARC AUTO DEC)
"RTN","RCDPESP",211,0)
 N NUM,I
"RTN","RCDPESP",212,0)
 I (TYPE'=1)&(TYPE'=0) Q 0  ; If TYPE is not active (1) or in-active (0) quit with count = 0
"RTN","RCDPESP",213,0)
 S NUM=0
"RTN","RCDPESP",214,0)
 S I="" F  S I=$O(^RCY(344.62,"ACTV",TYPE,I)) Q:I=""  S NUM=NUM+1
"RTN","RCDPESP",215,0)
 Q NUM
"RTN","RCDPESP",216,0)
 ;
"RTN","RCDPESP",217,0)
EXCLLIST(TYP) ; CHOICE determines which exclusions to list
"RTN","RCDPESP",218,0)
 ; TYP - TYPE OF EXLUSION - REQUIRED
"RTN","RCDPESP",219,0)
 ; IX - which index to use
"RTN","RCDPESP",220,0)
 ; IEN - points to an excluded payer for the selected choice
"RTN","RCDPESP",221,0)
 Q:'("^1^2^3^"[(U_$G(TYP)_U))  ; one or two only
"RTN","RCDPESP",222,0)
 N IX,IEN,CT,LIST S (IEN,CT)=0 W !
"RTN","RCDPESP",223,0)
 S IX=$S(TYP=1:"EXMDPOST",TYP=2:"EXMDDECR",TYP=3:"EXRXPOST",1:"") ;,TYP=4:"EXRXDECR",1:"")
"RTN","RCDPESP",224,0)
 S LIST=$S(TYP=1:"",TYP=3:"",1:"** Additional ")_"Payers excluded from "_$S(TYP=1:"Medical Auto-Posting:",TYP=3:"Pharmacy Auto-Posting",1:"Medical Auto-Decrease:")
"RTN","RCDPESP",225,0)
 F  S IEN=$O(^RCY(344.6,IX,1,IEN)) Q:'IEN  D
"RTN","RCDPESP",226,0)
 . S CT=CT+1
"RTN","RCDPESP",227,0)
 . W:CT=1 !,LIST
"RTN","RCDPESP",228,0)
 . W !,"  "_$P(^RCY(344.6,IEN,0),U,1)_" "_$P(^RCY(344.6,IEN,0),U,2)
"RTN","RCDPESP",229,0)
 ;
"RTN","RCDPESP",230,0)
 I TYP=2 W !,"All payers excluded from Auto-Posting are also excluded from Auto-Decrease."
"RTN","RCDPESP",231,0)
 W:CT=0 !,"   No "_$S(TYP=2:"additional ",1:"")_"payers excluded from "_$S(TYP=1:"Medical Auto-Posting:",TYP=3:"Pharmacy Auto-Posting",1:"Medical Auto-Decrease:")
"RTN","RCDPESP",232,0)
 ; if list is for auto-decrease and there are exclusions write a message
"RTN","RCDPESP",233,0)
 Q
"RTN","RCDPESP",234,0)
 ;
"RTN","RCDPESP",235,0)
SETEXCL(TYP) ; LOOP FOR SETTING PAYER EXCLUSIONS
"RTN","RCDPESP",236,0)
 ; TYP - TYPE OF EXLUSION - REQUIRED
"RTN","RCDPESP",237,0)
 N FDAPAYER,IEN,DONE,CT,X,Y,FLD,RTYP,DIC,DIR,RCAUDVAL,PREC,CMT
"RTN","RCDPESP",238,0)
 ; FDAPAYER - FDA FOR FILE 344.6
"RTN","RCDPESP",239,0)
 ; FLD - FIELD BEING MODIFIED
"RTN","RCDPESP",240,0)
 ; RTYP - STRING REPRESENTING FIELD
"RTN","RCDPESP",241,0)
 ; DONE - INDICATOR TO LEAVE LOOP
"RTN","RCDPESP",242,0)
 ; RCAUDVAL - ARRAY FOR AUDITING
"RTN","RCDPESP",243,0)
 ; PREC - HOLDER FOR Y(0) AFTER ^DIC CALL
"RTN","RCDPESP",244,0)
 ;         FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE,COMMENT
"RTN","RCDPESP",245,0)
 I $G(TYP)=1 S FLD=.06,CMT=1,RTYP="MEDICAL CLAIMS POSTING"
"RTN","RCDPESP",246,0)
 I $G(TYP)=2 S FLD=.07,CMT=2,RTYP="MEDICAL CLAIMS DECREASE"
"RTN","RCDPESP",247,0)
 I $G(TYP)=3 S FLD=.08,CMT=3,RTYP="PHARMACY CLAIMS POSTING"
"RTN","RCDPESP",248,0)
 I '$D(FLD) Q 
"RTN","RCDPESP",249,0)
 ;
"RTN","RCDPESP",250,0)
 W !!,"Select a Payer to add or remove from the exclusion list.",!
"RTN","RCDPESP",251,0)
 S (RCQUIT,CT,DONE)=0 F  Q:DONE!RCQUIT  D
"RTN","RCDPESP",252,0)
 . S DIC="^RCY(344.6,",DIC(0)="AEMQZ",DIC("A")="Payer: " D ^DIC I X="^" S RCQUIT=1 Q
"RTN","RCDPESP",253,0)
 . I +$G(Y)<1 S DONE=1 Q
"RTN","RCDPESP",254,0)
 . S CT=CT+1,IEN=+Y,IENS=IEN_",",PREC=Y(0)
"RTN","RCDPESP",255,0)
 . K FDAPAYER
"RTN","RCDPESP",256,0)
 . N COMMENT,STAT
"RTN","RCDPESP",257,0)
 . S COMMENT=""
"RTN","RCDPESP",258,0)
 . S STAT='$$GET1^DIQ(344.6,IENS,FLD,"I")
"RTN","RCDPESP",259,0)
 . S FDAPAYER(344.6,IENS,FLD)=STAT
"RTN","RCDPESP",260,0)
 . ; GET COMMENT HERE
"RTN","RCDPESP",261,0)
 . K Y S DIR("A")="COMMENT: ",DIR(0)="FA^3:72"
"RTN","RCDPESP",262,0)
 . S DIR("PRE")="S X=$$TRIM^XLFSTR(X,""LR"")" ; comment required and should be significant
"RTN","RCDPESP",263,0)
 . S DIR("?")="Enter an explanation for "_$S(STAT:"adding the payer to",1:"removing the payer from")_" the list of Excluded Payers."
"RTN","RCDPESP",264,0)
 . D ^DIR I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPESP",265,0)
 . S COMMENT=Y
"RTN","RCDPESP",266,0)
 . I COMMENT]"" D
"RTN","RCDPESP",267,0)
 . . I STAT S FDAPAYER(344.6,IENS,CMT)=COMMENT
"RTN","RCDPESP",268,0)
 . . E  S FDAPAYER(344.6,IENS,CMT)=""
"RTN","RCDPESP",269,0)
 . . W !,$P(PREC,U,1)_" "_$P(PREC,U,2)_" has been "
"RTN","RCDPESP",270,0)
 . . W $S(STAT:"added to",1:"removed from")_" the list of Excluded Payers"
"RTN","RCDPESP",271,0)
 . . I TYP=1 D
"RTN","RCDPESP",272,0)
 . . . W !,"If medical auto-decrease is turned on, "
"RTN","RCDPESP",273,0)
 . . . I STAT W "this payer will be excluded from medical auto-decrease too."
"RTN","RCDPESP",274,0)
 . . . I 'STAT,'$$GET1^DIQ(344.6,IEN_",",.07,"I") W "this payer will no longer be excluded from Medical Auto-Decrease."
"RTN","RCDPESP",275,0)
 . . . I 'STAT,$$GET1^DIQ(344.6,IEN_",",.07,"I") W "Medical Auto-Decrease is set to be excluded for this payer."
"RTN","RCDPESP",276,0)
 . . K RCAUDVAL
"RTN","RCDPESP",277,0)
 . . D FILE^DIE(,"FDAPAYER")
"RTN","RCDPESP",278,0)
 . . S RCAUDVAL(1)="344.6"_U_FLD_U_IEN_U_STAT_U_('STAT)_U_COMMENT
"RTN","RCDPESP",279,0)
 . . D AUDIT(.RCAUDVAL) K RCAUDVAL
"RTN","RCDPESP",280,0)
 Q
"RTN","RCDPESP",281,0)
 ;
"RTN","RCDPESP",282,0)
NOTIFY(VAL,TYPE) ; Notify CBO team of change to Site Parameters
"RTN","RCDPESP",283,0)
 N GLB,GLO,MSG,SITE,SUBJ,XMINSTR,XMTO
"RTN","RCDPESP",284,0)
 S SITE=$$SITE^VASITE
"RTN","RCDPESP",285,0)
 S TYPE=+$G(TYPE)  ;init optional parameter
"RTN","RCDPESP",286,0)
 ; limit subject to 65 chars.
"RTN","RCDPESP",287,0)
 S SUBJ=$E("Site Parameter edit, Station #"_$P(SITE,U,3)_" - "_$P(SITE,U,2),1,65)
"RTN","RCDPESP",288,0)
 S MSG(1)=" "
"RTN","RCDPESP",289,0)
 S MSG(2)="        Site: "_$P(SITE,U,2)
"RTN","RCDPESP",290,0)
 S MSG(3)="   Station #: "_$P(SITE,U,3)
"RTN","RCDPESP",291,0)
 S MSG(4)="      Domain: "_$G(^XMB("NETNAME"))
"RTN","RCDPESP",292,0)
 S MSG(5)="   Date/Time: "_$$FMTE^XLFDT($$NOW^XLFDT,"5ZPM")
"RTN","RCDPESP",293,0)
 S MSG(6)="  Changed by: "_$P($G(^VA(200,DUZ,0)),U)
"RTN","RCDPESP",294,0)
 S MSG(7)=" "
"RTN","RCDPESP",295,0)
 S MSG(8)="  ENABLE AUTO-POSTING OF "_$S(TYPE=1:"PHARMACY",1:"MEDICAL")_" CLAIMS = "_VAL
"RTN","RCDPESP",296,0)
 S MSG(9)=" "
"RTN","RCDPESP",297,0)
 ;Copy message to ePayments CBO team
"RTN","RCDPESP",298,0)
 S XMTO(DUZ)=""
"RTN","RCDPESP",299,0)
 S:$$PROD^XUPROD XMTO("VHAEPAYMENTS@VA.GOV")=""
"RTN","RCDPESP",300,0)
 ;
"RTN","RCDPESP",301,0)
 K ^TMP("XMERR",$J)
"RTN","RCDPESP",302,0)
 D SENDMSG^XMXAPI(DUZ,SUBJ,"MSG",.XMTO,.XMINSTR)
"RTN","RCDPESP",303,0)
 ;
"RTN","RCDPESP",304,0)
 I $D(^TMP("XMERR",$J)) D
"RTN","RCDPESP",305,0)
 .D MES^XPDUTL("MailMan reported a problem trying to send the notification message.")
"RTN","RCDPESP",306,0)
 .D MES^XPDUTL("  ")
"RTN","RCDPESP",307,0)
 .S (GLO,GLB)="^TMP(""XMERR"","_$J
"RTN","RCDPESP",308,0)
 .S GLO=GLO_")"
"RTN","RCDPESP",309,0)
 .F  S GLO=$Q(@GLO) Q:GLO'[GLB  D MES^XPDUTL("   "_GLO_" = "_$G(@GLO))
"RTN","RCDPESP",310,0)
 .D MES^XPDUTL("  ")
"RTN","RCDPESP",311,0)
 Q
"RTN","RCDPESP",312,0)
 ;
"RTN","RCDPESP",313,0)
AUDIT(INP) ; WRITE AUDIT RECORD(S)
"RTN","RCDPESP",314,0)
 ; INP = audit value in this format:
"RTN","RCDPESP",315,0)
 ;       FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP",316,0)
 Q:'$O(INP(0))   ; nothing to audit
"RTN","RCDPESP",317,0)
 N FDAUDT  ; FileMan FDA array for audits
"RTN","RCDPESP",318,0)
 N IDX S IDX=0
"RTN","RCDPESP",319,0)
 F  S IDX=$O(INP(IDX)) Q:'IDX  D
"RTN","RCDPESP",320,0)
 . K FDAUDT
"RTN","RCDPESP",321,0)
 . S FDAUDT(344.7,"+1,",.01)=$$NOW^XLFDT
"RTN","RCDPESP",322,0)
 . S FDAUDT(344.7,"+1,",.02)=$P(INP(IDX),U,3) ; IEN
"RTN","RCDPESP",323,0)
 . S FDAUDT(344.7,"+1,",.03)=DUZ  ; user
"RTN","RCDPESP",324,0)
 . S FDAUDT(344.7,"+1,",.04)=$P(INP(IDX),U,2) ; FIELD NUMBER
"RTN","RCDPESP",325,0)
 . S FDAUDT(344.7,"+1,",.05)=$P(INP(IDX),U,1) ; FILE NUMBER
"RTN","RCDPESP",326,0)
 . S FDAUDT(344.7,"+1,",.06)=$P(INP(IDX),U,4) ; NEW VALUE
"RTN","RCDPESP",327,0)
 . S FDAUDT(344.7,"+1,",.07)=$P(INP(IDX),U,5) ; OLD VALUE
"RTN","RCDPESP",328,0)
 . S FDAUDT(344.7,"+1,",.08)=$P(INP(IDX),U,6) ; COMMENT
"RTN","RCDPESP",329,0)
 . D UPDATE^DIE(,"FDAUDT")
"RTN","RCDPESP",330,0)
 Q
"RTN","RCDPESP",331,0)
 ;
"RTN","RCDPESP",332,0)
 ; *************************************************************
"RTN","RCDPESP",333,0)
 ; CALLS RELATED TO CREATING EPAYMENT PAYER EXCLUSION PARAMETERS
"RTN","RCDPESP",334,0)
 ; *************************************************************
"RTN","RCDPESP",335,0)
 ;
"RTN","RCDPESP",336,0)
NEWPYR ;Add new payers to payer table - called from AR Nightly Job (EN^RCDPEM)
"RTN","RCDPESP",337,0)
 N RCDATE,RCERA,RCUPD
"RTN","RCDPESP",338,0)
 ;Get date/time of last run otherwise start at previous day
"RTN","RCDPESP",339,0)
 S RCDATE=$P($G(^RCY(344.61,1,0)),U,8) S:RCDATE="" RCDATE=$$FMADD^XLFDT($$NOW^XLFDT\1,-1)
"RTN","RCDPESP",340,0)
 F  S RCDATE=$O(^RCY(344.4,"AFD",RCDATE)) Q:'RCDATE  D
"RTN","RCDPESP",341,0)
 .S RCERA="" F  S RCERA=$O(^RCY(344.4,"AFD",RCDATE,RCERA)) Q:'RCERA  S RCUPD=$$PAYRINIT(RCERA)
"RTN","RCDPESP",342,0)
 ;Update last run date
"RTN","RCDPESP",343,0)
 S $P(^RCY(344.61,1,0),U,8)=$$NOW^XLFDT
"RTN","RCDPESP",344,0)
 Q
"RTN","RCDPESP",345,0)
 ;
"RTN","RCDPESP",346,0)
PAYERPRM(IEN,EXMDPOST,EXMDDECR) ; USED TO UPDATE A NEW PAYER
"RTN","RCDPESP",347,0)
 ; CHECK IEN FOR VALID INPUT
"RTN","RCDPESP",348,0)
 Q:'$G(IEN)!('$D(^RCY(344.4,+$G(IEN),0))) 0
"RTN","RCDPESP",349,0)
 N PFDA,PAYER,ID,CPAYERID,PIENS
"RTN","RCDPESP",350,0)
 S PAYER=$E($$GET1^DIQ(344.4,IEN_",",.06),1,35)
"RTN","RCDPESP",351,0)
 Q:PAYER="" 0
"RTN","RCDPESP",352,0)
 S ID=$E($$GET1^DIQ(344.4,IEN_",",.03),1,30)
"RTN","RCDPESP",353,0)
 I '$D(^RCY(344.6,"CPID",PAYER,ID)) Q 0
"RTN","RCDPESP",354,0)
 ; FILE CURRENT SETTINGS
"RTN","RCDPESP",355,0)
 S PIENS=$O(^RCY(344.6,"CPID",PAYER,ID,0))_","
"RTN","RCDPESP",356,0)
 S PFDA(344.6,PIENS,.04)=DUZ
"RTN","RCDPESP",357,0)
 S PFDA(344.6,PIENS,.05)=$$NOW^XLFDT
"RTN","RCDPESP",358,0)
 S PFDA(344.6,PIENS,.06)=+$G(EXMDPOST)
"RTN","RCDPESP",359,0)
 S PFDA(344.6,PIENS,.07)=+$G(EXMDDECR)
"RTN","RCDPESP",360,0)
 D FILE^DIE(,"PFDA")
"RTN","RCDPESP",361,0)
 Q 1
"RTN","RCDPESP",362,0)
 ;
"RTN","RCDPESP",363,0)
PAYRINIT(IEN) ; Add Payer Name and Payer ID to Payer table #344.6 
"RTN","RCDPESP",364,0)
 ;
"RTN","RCDPESP",365,0)
 N PFDA,PAYER,ID,PIENS,ERADATE
"RTN","RCDPESP",366,0)
 ;
"RTN","RCDPESP",367,0)
 Q:'$G(IEN)!('$D(^RCY(344.4,+$G(IEN)))) 0
"RTN","RCDPESP",368,0)
 S PAYER=$P($G(^RCY(344.4,IEN,0)),U,6) Q:PAYER="" 0
"RTN","RCDPESP",369,0)
 S ID=$P($G(^RCY(344.4,IEN,0)),U,3) Q:ID="" 0
"RTN","RCDPESP",370,0)
 I $D(^RCY(344.6,"CPID",PAYER,ID)) Q 1
"RTN","RCDPESP",371,0)
 S ERADATE=$P($G(^RCY(344.4,IEN,0)),U,7)
"RTN","RCDPESP",372,0)
 ; UPDATE PAYER PARAMETERS
"RTN","RCDPESP",373,0)
 S PIENS="+1,"
"RTN","RCDPESP",374,0)
 S PFDA(344.6,PIENS,.01)=PAYER
"RTN","RCDPESP",375,0)
 S PFDA(344.6,PIENS,.02)=ID
"RTN","RCDPESP",376,0)
 S PFDA(344.6,PIENS,.03)=ERADATE
"RTN","RCDPESP",377,0)
 S PFDA(344.6,PIENS,.04)=.5
"RTN","RCDPESP",378,0)
 S PFDA(344.6,PIENS,.05)=$$NOW^XLFDT
"RTN","RCDPESP",379,0)
 S PFDA(344.6,PIENS,.06)=0
"RTN","RCDPESP",380,0)
 S PFDA(344.6,PIENS,.07)=0
"RTN","RCDPESP",381,0)
 D UPDATE^DIE(,"PFDA")
"RTN","RCDPESP",382,0)
 Q 1
"RTN","RCDPESP1")
0^68^B106087451
"RTN","RCDPESP1",1,0)
RCDPESP1 ;BIRM/SAB,hrubovcak - ePayment Lockbox Site Parameter Reports ;7/1/15
"RTN","RCDPESP1",2,0)
 ;;4.5;Accounts Receivable;**298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPESP1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP1",4,0)
 ;
"RTN","RCDPESP1",5,0)
 Q
"RTN","RCDPESP1",6,0)
 ;
"RTN","RCDPESP1",7,0)
RPT ; EDI Lockbox Parameters Report [RCDPE SITE PARAMETER REPORT]
"RTN","RCDPESP1",8,0)
 ; report data from:
"RTN","RCDPESP1",9,0)
 ;    AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",10,0)
 ;    RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",11,0)
 ;    RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",12,0)
 ;
"RTN","RCDPESP1",13,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP1",14,0)
 ;    RTYPE - Type of Report to run (Medical, Pharmacy, or Both)
"RTN","RCDPESP1",15,0)
 ;
"RTN","RCDPESP1",16,0)
 N RCTYPE
"RTN","RCDPESP1",17,0)
 W !,$$HDRLN,!
"RTN","RCDPESP1",18,0)
 ;
"RTN","RCDPESP1",19,0)
 S RCTYPE=$$RTYPE^RCDPESP2() G:RCTYPE=-1 RPTQ
"RTN","RCDPESP1",20,0)
 W !!   ;Spacing before the next prompt
"RTN","RCDPESP1",21,0)
 ;
"RTN","RCDPESP1",22,0)
 N %ZIS,POP S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPESP1",23,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPESP1",24,0)
 .N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPESP1",25,0)
 .S ZTRTN="SPRPT^RCDPESP1",ZTDESC=$$HDRLN,ZTSAVE("RC*")=""
"RTN","RCDPESP1",26,0)
 .D ^%ZTLOAD
"RTN","RCDPESP1",27,0)
 .W !!,$S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task.")
"RTN","RCDPESP1",28,0)
 .K IO("Q") D HOME^%ZIS
"RTN","RCDPESP1",29,0)
 ;
"RTN","RCDPESP1",30,0)
 D SPRPT
"RTN","RCDPESP1",31,0)
RPTQ Q
"RTN","RCDPESP1",32,0)
 ;
"RTN","RCDPESP1",33,0)
SPRPT ; site parameter report entry point
"RTN","RCDPESP1",34,0)
 ; RCNTR - counter
"RTN","RCDPESP1",35,0)
 ; RCFLD - DD field number
"RTN","RCDPESP1",36,0)
 ; RCHDR - header information
"RTN","RCDPESP1",37,0)
 ; RCPARM - parameters
"RTN","RCDPESP1",38,0)
 ; RCSTOP - exit flag
"RTN","RCDPESP1",39,0)
 N J,RCNTR,RCFLD,RCGLB,RCHDR,RCPARM,RCSTOP,V,X,Y,RCSTRING
"RTN","RCDPESP1",40,0)
 N RCDATA,RCCODE,RCDESC,RCSTAT,RCI,RCCARCD,RCCIEN,RCITEM,RCACTV
"RTN","RCDPESP1",41,0)
 ;
"RTN","RCDPESP1",42,0)
 S X="RC" F  S X=$O(^TMP($J,X)) Q:'($E(X,1,2)="RC")  K ^TMP($J,X) ; clear out old data
"RTN","RCDPESP1",43,0)
 ;
"RTN","RCDPESP1",44,0)
 ; RCGLB - ^TMP global storage locations
"RTN","RCDPESP1",45,0)
 ;     ^TMP($J,"RC342") - AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",46,0)
 ;   ^TMP($J,"RC344.6") - RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",47,0)
 ;  ^TMP($J,"RC344.61") - RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",48,0)
 F J=342,344.6,344.61 S RCGLB(J)=$NA(^TMP($J,"RC"_J)) K @RCGLB(J)
"RTN","RCDPESP1",49,0)
 ;
"RTN","RCDPESP1",50,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"10S")
"RTN","RCDPESP1",51,0)
 S RCHDR("PGNMBR")=0  ; page number
"RTN","RCDPESP1",52,0)
 ;
"RTN","RCDPESP1",53,0)
 ; AR SITE PARAMETER file (#342)
"RTN","RCDPESP1",54,0)
 D GETS^DIQ(342,"1,",".01;7.02;7.03;7.04;7.05;7.06;7.07;7.08;","E",RCGLB(342))
"RTN","RCDPESP1",55,0)
 ; add site to header data
"RTN","RCDPESP1",56,0)
 S RCHDR("SITE")="Site: "_@RCGLB(342)@(342,"1,",.01,"E")
"RTN","RCDPESP1",57,0)
 ;
"RTN","RCDPESP1",58,0)
 F RCFLD=7.02,7.03,7.04,7.05,7.06,7.07,7.08 S RCITEM=$S(RCFLD>7.04:"TITLE",1:"LABEL") D  ; EFT and ERA days unmatched  - PRCA*4.5*321
"RTN","RCDPESP1",59,0)
 . I RCTYPE="P",(RCFLD=7.05)!(RCFLD=7.07) Q  ; Dont display if only showing Pharmacy parameters - PRCA*4.5*321
"RTN","RCDPESP1",60,0)
 . I RCTYPE="M",(RCFLD=7.06)!(RCFLD=7.08) Q  ; Dont display if only showing medical parameters - PRCA*4.5*321
"RTN","RCDPESP1",61,0)
 . S Y=$$GET1^DID(342,RCFLD,,RCITEM)_": "_@RCGLB(342)@(342,"1,",RCFLD,"E")
"RTN","RCDPESP1",62,0)
 . I RCFLD=7.05 D AD2RPT(" ")
"RTN","RCDPESP1",63,0)
 . I (RCFLD=7.06)&(RCTYPE="P") D AD2RPT(" ")
"RTN","RCDPESP1",64,0)
 . D AD2RPT(Y)
"RTN","RCDPESP1",65,0)
 ;
"RTN","RCDPESP1",66,0)
 D AD2RPT(" ")
"RTN","RCDPESP1",67,0)
 ;
"RTN","RCDPESP1",68,0)
 ; Display Medical Parameters
"RTN","RCDPESP1",69,0)
 ; RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",70,0)
 D GETS^DIQ(344.61,"1,",".02;.03;.04;.05;.06;.07;.1;1.01;1.02","E",RCGLB(344.61)) ; PRCA*4.5*321
"RTN","RCDPESP1",71,0)
 ;
"RTN","RCDPESP1",72,0)
 S Y=$$GET1^DID(344.61,.1,,"LABEL")_": "_@RCGLB(344.61)@(344.61,"1,",.1,"E") ; PRCA*4.5*321
"RTN","RCDPESP1",73,0)
 D AD2RPT(Y) ; PRCA*4.5*321
"RTN","RCDPESP1",74,0)
 D AD2RPT(" ") ;  PRCA*4.5*321
"RTN","RCDPESP1",75,0)
 ;
"RTN","RCDPESP1",76,0)
 ; get auto-post and auto-decrease settings, save zero node
"RTN","RCDPESP1",77,0)
 S X=$G(^RCY(344.61,1,0)),RCPARM("AUTO-POST")=$P(X,U,2),RCPARM("AUTO-DECREASE")=$P(X,U,3),RCPARM(344.61,0)=X
"RTN","RCDPESP1",78,0)
 S RCPARM("RX AUTO-POST")=$P($G(^RCY(344.61,1,1)),U)
"RTN","RCDPESP1",79,0)
 ;
"RTN","RCDPESP1",80,0)
 ; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",81,0)
 ;   screening logic: ^DD(344.6,.06,0)="EXCLUDE MED CLAIMS POSTING^S^0:No;1:Yes;^0;6^Q"
"RTN","RCDPESP1",82,0)
 D LIST^DIC(344.6,,"@;.01;.02;.06;1","P",,,,,"I $P(^(0),U,6)=1",,RCGLB(344.6))
"RTN","RCDPESP1",83,0)
 ;
"RTN","RCDPESP1",84,0)
 ; PRCA*4.5*304 - Print Medical Claim Parameters
"RTN","RCDPESP1",85,0)
 I RCTYPE'="P" D
"RTN","RCDPESP1",86,0)
 .; RCDPE PARAMETER file (#344.61), auto-posting of medical claims
"RTN","RCDPESP1",87,0)
 .S X=$$GET1^DID(344.61,.02,,"TITLE"),V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",88,0)
 .S Y=X_" "_@RCGLB(344.61)@(344.61,"1,",.02,"E")
"RTN","RCDPESP1",89,0)
 .D AD2RPT(Y)
"RTN","RCDPESP1",90,0)
 .;
"RTN","RCDPESP1",91,0)
 .I (RCPARM("AUTO-POST")!RCPARM("AUTO-DECREASE")) D  ; list auto-post excluded payers
"RTN","RCDPESP1",92,0)
 ..I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",93,0)
 ...S X="     No payers excluded from medical auto-posting." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",94,0)
 ..;
"RTN","RCDPESP1",95,0)
 ..D AD2RPT("   Excluded Payer                      Comment")
"RTN","RCDPESP1",96,0)
 ..S RCNTR=0
"RTN","RCDPESP1",97,0)
 ..F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",98,0)
 ...S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",99,0)
 ...S Y="   "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",100,0)
 ...D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",101,0)
 .;
"RTN","RCDPESP1",102,0)
 .I RCPARM("AUTO-POST") D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",103,0)
 .;
"RTN","RCDPESP1",104,0)
 .K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",105,0)
 .; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",106,0)
 .;   screening logic: ^DD(344.6,.07,0)="EXCLUDE MED CLAIMS DECREASE^S^0:No;1:Yes;^0;7^Q"
"RTN","RCDPESP1",107,0)
 .D LIST^DIC(344.6,,"@;.01;.02;.07;2","P",,,,,"I $P(^(0),U,7)=1",,RCGLB(344.6))
"RTN","RCDPESP1",108,0)
 .;
"RTN","RCDPESP1",109,0)
 .; RCDPE PARAMETER file (#344.61), auto-decrease of medical claims
"RTN","RCDPESP1",110,0)
 .S X=$$GET1^DID(344.61,.03,,"TITLE"),V=" (Y/N): ",V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",111,0)
 .S Y=$J(X,45)_@RCGLB(344.61)@(344.61,"1,",.03,"E")
"RTN","RCDPESP1",112,0)
 .D AD2RPT(Y) ; ,AD2RPT(" ")
"RTN","RCDPESP1",113,0)
 .; PRCA*4.5*304 - Removed because auto-decrease amounts are based on CARCs
"RTN","RCDPESP1",114,0)
 .;I RCPARM("AUTO-DECREASE") D  ; list these 2 fields only if auto-decrease enabled
"RTN","RCDPESP1",115,0)
 .;.D AD2RPT("NUMBER OF DAYS TO WAIT BEFORE AUTO-DECREASE: "_(+$P(RCPARM(344.61,0),U,4)))
"RTN","RCDPESP1",116,0)
 .;.D AD2RPT("     MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE: "_"$"_(+$P(RCPARM(344.61,0),U,5)))
"RTN","RCDPESP1",117,0)
 .;
"RTN","RCDPESP1",118,0)
 .; PRCA*4.5*304 - Print the CARC Auto-decrease parameters
"RTN","RCDPESP1",119,0)
 . I $$CARCCHK(RCTYPE,"M") D
"RTN","RCDPESP1",120,0)
 .. D AD2RPT(" "),AD2RPT("     AUTO-DECREASE MEDICAL CLAIMS FOR THE FOLLOWING CARC/AMOUNTS ONLY:"),AD2RPT(" ")
"RTN","RCDPESP1",121,0)
 .. S RCSTRING=$TR($J("",70)," ","-"),RCI=0
"RTN","RCDPESP1",122,0)
 .. D AD2RPT("     CARC  Description                                             Max. Amt")
"RTN","RCDPESP1",123,0)
 .. D AD2RPT("     "_RCSTRING)
"RTN","RCDPESP1",124,0)
 .. ;
"RTN","RCDPESP1",125,0)
 .. ; Loop and print entries
"RTN","RCDPESP1",126,0)
 .. F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP1",127,0)
 .. . S RCDATA=$G(^RCY(344.62,RCI,0)),Y=""
"RTN","RCDPESP1",128,0)
 .. . Q:RCDATA=""
"RTN","RCDPESP1",129,0)
 .. . S RCCODE=$P(RCDATA,U),RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP1",130,0)
 .. . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP1",131,0)
 .. . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPESP1",132,0)
 .. . Q:RCSTAT'=1
"RTN","RCDPESP1",133,0)
 .. . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP1",134,0)
 .. . D GETCODES^RCDPCRR(RCCODE,"","A",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP1",135,0)
 .. . S Y="     "_$J(RCCODE,4)_"  "
"RTN","RCDPESP1",136,0)
 .. . S Y=Y_$E(RCDESC,1,53) S:$L(RCDESC)<53 Y=Y_$J("",(53-$L(RCDESC))) S Y=Y_$J($P(RCDATA,U,6),10,0)
"RTN","RCDPESP1",137,0)
 .. . I '$$ACT^RCDPRU(345,RCCODE,) S Y=Y_" (I)"  ; if inactive, display (i)
"RTN","RCDPESP1",138,0)
 .. . D AD2RPT(Y)
"RTN","RCDPESP1",139,0)
 .. ;
"RTN","RCDPESP1",140,0)
 ..D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",141,0)
 .I (RCPARM("AUTO-POST")!RCPARM("AUTO-DECREASE")) D  ; list excluded auto-decrease payers
"RTN","RCDPESP1",142,0)
 .. S X=$P($$GET1^DID(344.61,.04,,"TITLE")," (",1)_": "
"RTN","RCDPESP1",143,0)
 .. S Y=$J(X,50)_@RCGLB(344.61)@(344.61,"1,",.04,"E")
"RTN","RCDPESP1",144,0)
 .. D AD2RPT(Y),AD2RPT(" ")
"RTN","RCDPESP1",145,0)
 .. D AD2RPT("     All payers excluded from Auto-Posting are excluded from Auto-Decrease.")
"RTN","RCDPESP1",146,0)
 .. Q:'RCPARM("AUTO-DECREASE")
"RTN","RCDPESP1",147,0)
 .. I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",148,0)
 ... S X="       No additional payers excluded from Medical Auto-Decrease." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",149,0)
 ..;
"RTN","RCDPESP1",150,0)
 .. D AD2RPT("     Additional Excluded Payer           Comment")
"RTN","RCDPESP1",151,0)
 .. S RCNTR=0
"RTN","RCDPESP1",152,0)
 .. F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",153,0)
 ... S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",154,0)
 ... S Y="     "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",155,0)
 ... D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",156,0)
 .;
"RTN","RCDPESP1",157,0)
 .D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",158,0)
 ;
"RTN","RCDPESP1",159,0)
 K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",160,0)
 ; RCDPE AUTO-PAY EXCLUSION file (#344.6)
"RTN","RCDPESP1",161,0)
 ;   screening logic: ^DD(344.6,.06,0)="EXCLUDE MED CLAIMS POSTING^S^0:No;1:Yes;^0;6^Q"
"RTN","RCDPESP1",162,0)
 D LIST^DIC(344.6,,"@;.01;.02;.08;3","P",,,,,"I $P(^(0),U,8)=1",,RCGLB(344.6))
"RTN","RCDPESP1",163,0)
 ;
"RTN","RCDPESP1",164,0)
 ; PRCA*4.5*304 - Print Pharmacy Claim Parameters
"RTN","RCDPESP1",165,0)
 I RCTYPE'="M" D
"RTN","RCDPESP1",166,0)
 .; RCDPE PARAMETER file (#344.61), auto-posting of pharmacy claims
"RTN","RCDPESP1",167,0)
 .S X=$$GET1^DID(344.61,1.01,,"TITLE"),V=" (Y/N)" S:X[V X=$P(X,V)_$P(X,V,2)  ; remove yes/no prompt
"RTN","RCDPESP1",168,0)
 .S Y=X_" "_@RCGLB(344.61)@(344.61,"1,",1.01,"E")
"RTN","RCDPESP1",169,0)
 .D AD2RPT(Y)
"RTN","RCDPESP1",170,0)
 .;
"RTN","RCDPESP1",171,0)
 . I RCPARM("RX AUTO-POST") D  ; list auto-post excluded payers
"RTN","RCDPESP1",172,0)
 .. I '$D(@RCGLB(344.6)@("DILIST",1,0)) D  Q
"RTN","RCDPESP1",173,0)
 ... S X="     No payers excluded from pharmacy auto-posting." D AD2RPT($J(" ",80-$L(X)\2)_X)
"RTN","RCDPESP1",174,0)
 ..;
"RTN","RCDPESP1",175,0)
 .. D AD2RPT("   Excluded Payer                      Comment")
"RTN","RCDPESP1",176,0)
 .. S RCNTR=0
"RTN","RCDPESP1",177,0)
 .. F  S RCNTR=$O(@RCGLB(344.6)@("DILIST",RCNTR)) Q:'RCNTR  D
"RTN","RCDPESP1",178,0)
 ... S V=@RCGLB(344.6)@("DILIST",RCNTR,0),X=$E($P(V,U,2),1,35)
"RTN","RCDPESP1",179,0)
 ... S Y="   "_X_$J(" ",36-$L(X))_$P(V,U,5)
"RTN","RCDPESP1",180,0)
 ... D AD2RPT($E(Y,1,IOM))
"RTN","RCDPESP1",181,0)
 .. S X=$P($$GET1^DID(344.61,1.02,,"TITLE")," (",1)_": "  ; remove yes/no prompt
"RTN","RCDPESP1",182,0)
 .. S Y="     "_X_" "_$S(@RCGLB(344.61)@(344.61,"1,",1.02,"E")="":"No",1:@RCGLB(344.61)@(344.61,"1,",1.02,"E"))
"RTN","RCDPESP1",183,0)
 .. D AD2RPT(" "),AD2RPT(Y)
"RTN","RCDPESP1",184,0)
 .;
"RTN","RCDPESP1",185,0)
 .I RCPARM("RX AUTO-POST") D AD2RPT(" ")  ; blank line
"RTN","RCDPESP1",186,0)
 .;
"RTN","RCDPESP1",187,0)
 .K @RCGLB(344.6)  ; delete old data
"RTN","RCDPESP1",188,0)
 .;
"RTN","RCDPESP1",189,0)
 .; PRCA*4.5*304 - Print the CARC Auto-decrease parameters
"RTN","RCDPESP1",190,0)
 . I $$CARCCHK(RCTYPE,"P") D
"RTN","RCDPESP1",191,0)
 .. S RCSTRING=$TR($J("",73)," ","-"),RCI=0
"RTN","RCDPESP1",192,0)
 .. D AD2RPT("  CARC  Description                                             Max. Amt")
"RTN","RCDPESP1",193,0)
 .. D AD2RPT(RCSTRING)
"RTN","RCDPESP1",194,0)
 .. ;
"RTN","RCDPESP1",195,0)
 .. ; Loop and print entries
"RTN","RCDPESP1",196,0)
 .. F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP1",197,0)
 .. . S RCDATA=$G(^RCY(344.62,RCI,0)),Y=""
"RTN","RCDPESP1",198,0)
 .. . Q:RCDATA=""
"RTN","RCDPESP1",199,0)
 .. . S RCCODE=$P(RCDATA,U),RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP1",200,0)
 .. . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP1",201,0)
 .. . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPESP1",202,0)
 .. . Q:RCSTAT'=1
"RTN","RCDPESP1",203,0)
 .. . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP1",204,0)
 .. . D GETCODES^RCDPCRR(RCCODE,"","A",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP1",205,0)
 .. . S Y="  "_$E(RCCODE,1,4)_"  "
"RTN","RCDPESP1",206,0)
 .. . S Y=Y_$E(RCDESC,1,55)_$J($P(RCDATA,U,6),10,0)
"RTN","RCDPESP1",207,0)
 .. . I '$$ACT^RCDPRU(345,RCCODE,) S Y=Y_" (I)"  ; if inactive, display (i)
"RTN","RCDPESP1",208,0)
 .. . D AD2RPT(Y)
"RTN","RCDPESP1",209,0)
 ;
"RTN","RCDPESP1",210,0)
 ; RCDPE PARAMETER file (#344.61)
"RTN","RCDPESP1",211,0)
 F RCFLD=.06,.07 D
"RTN","RCDPESP1",212,0)
 . Q:(RCFLD=.06)&(RCTYPE="P")  ; Dont display if only showing Pharmacy parameters
"RTN","RCDPESP1",213,0)
 . Q:(RCFLD=.07)&(RCTYPE="M")  ; Dont display if only showing medical parameters
"RTN","RCDPESP1",214,0)
 . S Y=$$GET1^DID(344.61,RCFLD,,"TITLE")_" "_@RCGLB(344.61)@(344.61,"1,",RCFLD,"E")
"RTN","RCDPESP1",215,0)
 . D AD2RPT(Y)
"RTN","RCDPESP1",216,0)
 ;
"RTN","RCDPESP1",217,0)
 D AD2RPT(" "),AD2RPT($$ENDORPRT^RCDPEARL)
"RTN","RCDPESP1",218,0)
 ;
"RTN","RCDPESP1",219,0)
 S RCSTOP=0 U IO D SPHDR(.RCHDR)
"RTN","RCDPESP1",220,0)
 S J=0 F  S J=$O(^TMP($J,"RC SP REPORT",J)) Q:'J!RCSTOP  S Y=^TMP($J,"RC SP REPORT",J,0) D
"RTN","RCDPESP1",221,0)
 .W !,Y Q:'$O(^TMP($J,"RC SP REPORT",J))  ; quit if last line
"RTN","RCDPESP1",222,0)
 .I '$G(ZTSK),$E(IOST,1,2)="C-",$Y+3>IOSL D ASK^RCDPEARL(.RCSTOP) I 'RCSTOP D SPHDR(.RCHDR) Q
"RTN","RCDPESP1",223,0)
 .Q:RCSTOP  Q:$Y+2<IOSL
"RTN","RCDPESP1",224,0)
 .D SPHDR(.RCHDR)
"RTN","RCDPESP1",225,0)
 ;
"RTN","RCDPESP1",226,0)
 I '$G(ZTSK),$E(IOST,1,2)="C-",'RCSTOP D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP1",227,0)
 ;
"RTN","RCDPESP1",228,0)
 ; close device
"RTN","RCDPESP1",229,0)
 U IO(0) D ^%ZISC
"RTN","RCDPESP1",230,0)
 ;
"RTN","RCDPESP1",231,0)
 S X="RC" F  S X=$O(^TMP($J,X)) Q:'($E(X,1,2)="RC")  K ^TMP($J,X) ; clean up
"RTN","RCDPESP1",232,0)
 ;
"RTN","RCDPESP1",233,0)
 Q
"RTN","RCDPESP1",234,0)
 ;
"RTN","RCDPESP1",235,0)
SPHDR(HDR) ; HDR passed by ref.
"RTN","RCDPESP1",236,0)
 ; HDR("RUNDATE") - run date, external format
"RTN","RCDPESP1",237,0)
 ;  HDR("PGNMBR") - page number
"RTN","RCDPESP1",238,0)
 ;    HDR("SITE") - site name
"RTN","RCDPESP1",239,0)
 N P,X,Y
"RTN","RCDPESP1",240,0)
 S P=$G(HDR("PGNMBR"))+1,HDR("PGNMBR")=P  ; increment page count
"RTN","RCDPESP1",241,0)
 ; 
"RTN","RCDPESP1",242,0)
 S X=$$HDRLN
"RTN","RCDPESP1",243,0)
 S P=IOM-($L(X)+10)\2,Y=$J(" ",P)_X_$J(" ",P)_" Page: "_HDR("PGNMBR")
"RTN","RCDPESP1",244,0)
 W @IOF,Y
"RTN","RCDPESP1",245,0)
 S X="   Run Date: "_HDR("RUNDATE"),Y=X_$J(HDR("SITE"),IOM-($L(X)+1))
"RTN","RCDPESP1",246,0)
 W !,Y
"RTN","RCDPESP1",247,0)
 S Y=" "_$TR($J("",IOM-2)," ","-")  ; space_row of hyphens
"RTN","RCDPESP1",248,0)
 W !,Y
"RTN","RCDPESP1",249,0)
 Q
"RTN","RCDPESP1",250,0)
 ;
"RTN","RCDPESP1",251,0)
AD2RPT(A) ; add line to report
"RTN","RCDPESP1",252,0)
 Q:$G(A)=""
"RTN","RCDPESP1",253,0)
 N C S C=$G(^TMP($J,"RC SP REPORT",0))+1,^TMP($J,"RC SP REPORT",0)=C
"RTN","RCDPESP1",254,0)
 S ^TMP($J,"RC SP REPORT",C,0)=A Q
"RTN","RCDPESP1",255,0)
 ;
"RTN","RCDPESP1",256,0)
HDRLN() Q "EDI Lockbox Parameters Report"_$S($G(RCTYPE)="B":" - ALL",$G(RCTYPE)="M":" - MEDICAL",$G(RCTYPE)="P":" - PHARMACY",1:"")  ; extrinsic variable
"RTN","RCDPESP1",257,0)
 ;
"RTN","RCDPESP1",258,0)
 ;Function to check to see if the CARC parameters are to appear on the report
"RTN","RCDPESP1",259,0)
CARCCHK(RCTYPE,TYPE) ;
"RTN","RCDPESP1",260,0)
 ;
"RTN","RCDPESP1",261,0)
 N RCMEN,RCREN
"RTN","RCDPESP1",262,0)
 ;
"RTN","RCDPESP1",263,0)
 ; Return 1 if valid to print, 0 otherwise
"RTN","RCDPESP1",264,0)
 ;
"RTN","RCDPESP1",265,0)
 Q:RCTYPE="B"&($G(TYPE)="M") +$P($G(^RCY(344.61,1,0)),U,3)  ;User wants all parameters and we are checking for medical auto decrease
"RTN","RCDPESP1",266,0)
 ;
"RTN","RCDPESP1",267,0)
 Q:RCTYPE="B"&($G(TYPE)="P") +$P($G(^RCY(344.61,1,1)),U,2)  ;User wants all parameters and we are checking for Pharmacy auto decrease
"RTN","RCDPESP1",268,0)
 ;
"RTN","RCDPESP1",269,0)
 S (RCMEN,RCREN)=""
"RTN","RCDPESP1",270,0)
 ;
"RTN","RCDPESP1",271,0)
 ;Print if Report type is medical and auto-decrease for medical is on
"RTN","RCDPESP1",272,0)
 I RCTYPE="M" S RCMEN=+$P($G(^RCY(344.61,1,0)),U,3) Q RCMEN
"RTN","RCDPESP1",273,0)
 ;
"RTN","RCDPESP1",274,0)
 ;Print if Report type is pharmacy and auto-decrease for pharmacy is on
"RTN","RCDPESP1",275,0)
 I RCTYPE="P" S RCREN=+$P($G(^RCY(344.61,1,1)),U,2) Q RCREN
"RTN","RCDPESP1",276,0)
 ;
"RTN","RCDPESP1",277,0)
 Q 0  ;Don't print the CARCs
"RTN","RCDPESP1",278,0)
 ;
"RTN","RCDPESP2")
0^58^B176714545
"RTN","RCDPESP2",1,0)
RCDPESP2 ;BIRM/SAB - ePayment Lockbox Parameter Audit and Exclusion Reports ;07/01/15
"RTN","RCDPESP2",2,0)
 ;;4.5;Accounts Receivable;**298,304,317,321**;Mar 20, 1995;Build 48
"RTN","RCDPESP2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP2",4,0)
 ;
"RTN","RCDPESP2",5,0)
 Q
"RTN","RCDPESP2",6,0)
 ;
"RTN","RCDPESP2",7,0)
RPT1 ; EDI Lockbox Parameters Report [RCDPE SITE PARAMETER REPORT]
"RTN","RCDPESP2",8,0)
 ;
"RTN","RCDPESP2",9,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP2",10,0)
 ;              including data concerning changes to the RCDPE PPARAMETER file.
"RTN","RCDPESP2",11,0)
 ;
"RTN","RCDPESP2",12,0)
 ; Input:       None
"RTN","RCDPESP2",13,0)
 ;
"RTN","RCDPESP2",14,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",15,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST^DIC OUTPUT
"RTN","RCDPESP2",16,0)
 ;
"RTN","RCDPESP2",17,0)
 ; GLOBALS:     ^RCY(344.7, - RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",18,0)
 ;
"RTN","RCDPESP2",19,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP2",20,0)
 ;
"RTN","RCDPESP2",21,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP2",22,0)
 ;    RCRANGE - RETURN VALUE FOR DATE RANGE FOR THE REPORT
"RTN","RCDPESP2",23,0)
 ;    RCSTDT  - STARTING DATE FOR THE REPORT
"RTN","RCDPESP2",24,0)
 ;    RCENDT  - END DATE FOR THE REPORT
"RTN","RCDPESP2",25,0)
 ;    RCEXCEL - INDIATES IF OUTPUT IS GOING TO EXCEL
"RTN","RCDPESP2",26,0)
 ;    RCSCR   - SCREEN FOR LIST^DIC CALL
"RTN","RCDPESP2",27,0)
 ;    RCFLDS  - FIELDS TO BE CAPTURED IN LIST^DIC CALL
"RTN","RCDPESP2",28,0)
 ;    RCDIGET   - ^TMP GLOBAL RESULTS FROM LIST^DIC CALL
"RTN","RCDPESP2",29,0)
 ;    RCDIERR   - HOLDS ERRORS FROM LIST^DIC
"RTN","RCDPESP2",30,0)
 ;    RCHDR("RUNDATE")   - DATE THE REPORT RAN
"RTN","RCDPESP2",31,0)
 ;    RCHDR("PAGE")  - PAGE COUNTER
"RTN","RCDPESP2",32,0)
 ;    RCSTOP  - STOP DISPLAYING THE REPORT
"RTN","RCDPESP2",33,0)
 ;    RCPARAM - PARAMETER THAT WAS CHANGED
"RTN","RCDPESP2",34,0)
 ;    RCPARAM("OLDVAL")   - OLD PARAMETER VALUE
"RTN","RCDPESP2",35,0)
 ;    RCPARAM("TIME")  - TIME PARAMETER WAS CHANGED
"RTN","RCDPESP2",36,0)
 ;    RCPARAM("NEWVAL")   - NEW PARAMETER VALUE
"RTN","RCDPESP2",37,0)
 ;    RCPARAM("USER")  - USER WHO CHANGED A PARAMETER
"RTN","RCDPESP2",38,0)
 ;    RCTMP   - HOLDS ONE LINE OF DATA FROM LIST^DIC OUTPUT
"RTN","RCDPESP2",39,0)
 ;    RCTYPE  - TYPE OF REPORT TO RUN (MEDICAL, PHARMACY, OR BOTH)
"RTN","RCDPESP2",40,0)
 ;
"RTN","RCDPESP2",41,0)
 N RCDIERR,RCDIGET,RCENDT,RCEXCEL,RCFLDS,RCHDR,RCIEN,RCPARAM,RCRANGE,RCSCR,RCSTDT,RCSTOP,RCTMP,RCTYPE,RCFILE,RCSL
"RTN","RCDPESP2",42,0)
 ; Kernel variables
"RTN","RCDPESP2",43,0)
 N X1,X2,X,Y,%ZIS,POP
"RTN","RCDPESP2",44,0)
 S RCSTOP=0,RCSL=0
"RTN","RCDPESP2",45,0)
 W !!,"EDI Lockbox Parameters Audit Report",!
"RTN","RCDPESP2",46,0)
 ;
"RTN","RCDPESP2",47,0)
 S (RCHDR("PAGE"),RCSTOP,RCHDR,RCEXCEL)=0
"RTN","RCDPESP2",48,0)
 ;
"RTN","RCDPESP2",49,0)
 ; retrieve report type (Medical, Pharmacy, or Both)
"RTN","RCDPESP2",50,0)
 S RCTYPE=$$RTYPE()
"RTN","RCDPESP2",51,0)
 Q:RCTYPE=-1
"RTN","RCDPESP2",52,0)
 S RCHDR("REPORTTYPE")=RCTYPE
"RTN","RCDPESP2",53,0)
 ;
"RTN","RCDPESP2",54,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPESP2",55,0)
 Q:RCRANGE=0
"RTN","RCDPESP2",56,0)
 S RCSTDT=$P(RCRANGE,U,2),RCENDT=$P(RCRANGE,U,3)
"RTN","RCDPESP2",57,0)
 S RCEXCEL=$$DISPTY^RCDPEM3() Q:+RCEXCEL=-1
"RTN","RCDPESP2",58,0)
 ; Display capture information for Excel
"RTN","RCDPESP2",59,0)
 I RCEXCEL D INFO^RCDPEM6
"RTN","RCDPESP2",60,0)
 ;Select output device
"RTN","RCDPESP2",61,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP2",62,0)
 ; INPUT PARAMETER:
"RTN","RCDPESP2",63,0)
 ;   RCEXCEL - IF 1 THEN OUTPUT FOR EXCEL
"RTN","RCDPESP2",64,0)
 ;
"RTN","RCDPESP2",65,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5S")
"RTN","RCDPESP2",66,0)
 S RCHDR("DATERANGE")=$$FMTE^XLFDT(RCSTDT,"5D")_" - "_$$FMTE^XLFDT(RCENDT,"5D")
"RTN","RCDPESP2",67,0)
 ;
"RTN","RCDPESP2",68,0)
 S RCENDT=RCENDT+.999999
"RTN","RCDPESP2",69,0)
 ;S RCSCR="I ($P(^(0),U,5)=344.61)&($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",70,0)
 S RCSCR="I ($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",71,0)
 S RCFLDS="@;.04;.01I;.07;.06;.03;.05I;.02"
"RTN","RCDPESP2",72,0)
 S RCDIGET=$NA(^TMP("RCDPESP2",$J)) K @RCDIGET
"RTN","RCDPESP2",73,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR,,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",74,0)
 I $D(RCDIERR) W !!,"ERROR COLLECTING THE REPORT DATA" D ASK^RCDPEARL() Q
"RTN","RCDPESP2",75,0)
 I '$D(@RCDIGET@("DILIST",1)) D  Q
"RTN","RCDPESP2",76,0)
 . D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) S RCSL=9
"RTN","RCDPESP2",77,0)
 . W !,"NO PARAMETER AUDIT ENTRIES TO REPORT",!
"RTN","RCDPESP2",78,0)
 . D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",79,0)
 S RCIEN=0 F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",80,0)
 . I 'RCHDR("PAGE") D
"RTN","RCDPESP2",81,0)
 . . D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) S RCSL=9
"RTN","RCDPESP2",82,0)
 . Q:RCSTOP
"RTN","RCDPESP2",83,0)
 . K RCPARAM
"RTN","RCDPESP2",84,0)
 . S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,8)
"RTN","RCDPESP2",85,0)
 . S RCFILE=$P(RCTMP,U,6)
"RTN","RCDPESP2",86,0)
 . ;
"RTN","RCDPESP2",87,0)
 . Q:RCFILE=344.6  ; Excluded payers reported elswhere
"RTN","RCDPESP2",88,0)
 . ;
"RTN","RCDPESP2",89,0)
 . S RCPARAM=$$GET1^DID(RCFILE,$P(RCTMP,U,1),,"LABEL")
"RTN","RCDPESP2",90,0)
 . ;
"RTN","RCDPESP2",91,0)
 . Q:'$$RPTYPE(RCTYPE,RCPARAM)
"RTN","RCDPESP2",92,0)
 . S RCPARAM("TIME")=$$FMTE^XLFDT($P(RCTMP,U,2),"2")
"RTN","RCDPESP2",93,0)
 . S RCPARAM("USER")=$P(RCTMP,U,5)
"RTN","RCDPESP2",94,0)
 . I ($P(RCTMP,U,1)=.02)!($P(RCTMP,U,1)=1.01) D
"RTN","RCDPESP2",95,0)
 . . I RCFILE=344.62 S RCPARAM=RCPARAM_" ("_$S($P(RCTMP,U,7)'="":$P($G(^RCY(RCFILE,$P(RCTMP,U,7),0)),U,1),1:"ERR")_")"
"RTN","RCDPESP2",96,0)
 . . S RCPARAM("OLDVAL")=$S(+$P(RCTMP,U,3)=0:"No",+$P(RCTMP,U,3)=1:"Yes",1:"Err")
"RTN","RCDPESP2",97,0)
 . . S RCPARAM("NEWVAL")=$S(+$P(RCTMP,U,4)=0:"No",+$P(RCTMP,U,4)=1:"Yes",1:"Err")
"RTN","RCDPESP2",98,0)
 . ; Next line - added EDI claim auto-audit parameter fields - PRCA*4.5*321
"RTN","RCDPESP2",99,0)
 . I ($P(RCTMP,U,1)=.03)!($P(RCTMP,U,1)=7.05)!($P(RCTMP,U,1)=7.06)!($P(RCTMP,U,1)=7.07)!($P(RCTMP,U,1)=7.08) D
"RTN","RCDPESP2",100,0)
 . . S RCPARAM("OLDVAL")=$S($P(RCTMP,U,3):"Yes",1:"No")
"RTN","RCDPESP2",101,0)
 . . S RCPARAM("NEWVAL")=$S($P(RCTMP,U,4):"Yes",1:"No")
"RTN","RCDPESP2",102,0)
 . I (RCFILE=344.62)&($P(RCTMP,U,1)=.06) D
"RTN","RCDPESP2",103,0)
 . . S RCPARAM=RCPARAM_" ("_$S($P(RCTMP,U,7)'="":$P($G(^RCY(RCFILE,$P(RCTMP,U,7),0)),U,1),1:"ERR")_")"
"RTN","RCDPESP2",104,0)
 . ; Next line - added EDI claim auto-audit parameter fields - PRCA*4.5*321
"RTN","RCDPESP2",105,0)
 . I ($P(RCTMP,U,1)'=.02),($P(RCTMP,U,1)'=.03),($P(RCTMP,U,1)'=1.01),($P(RCTMP,U,1)'=7.05),($P(RCTMP,U,1)'=7.06),($P(RCTMP,U,1)'=7.07),($P(RCTMP,U,1)'=7.08) D
"RTN","RCDPESP2",106,0)
 . . S RCPARAM("OLDVAL")=$P(RCTMP,U,3)
"RTN","RCDPESP2",107,0)
 . . S RCPARAM("NEWVAL")=$P(RCTMP,U,4)
"RTN","RCDPESP2",108,0)
 . I 'RCEXCEL D
"RTN","RCDPESP2",109,0)
 . . W !,RCPARAM,?32,RCPARAM("TIME"),?51,RCPARAM("OLDVAL"),?56,RCPARAM("NEWVAL"),?61,$E(RCPARAM("USER"),1,IOM-61) S RCSL=RCSL+1
"RTN","RCDPESP2",110,0)
 . . I RCSL>=(IOSL-2) D HDRLPR(RCEXCEL,.RCHDR,.RCSTOP) Q:RCSTOP  S RCSL=9
"RTN","RCDPESP2",111,0)
 . I RCEXCEL W !,RCPARAM_U_RCPARAM("TIME")_U_RCPARAM("OLDVAL")_U_RCPARAM("NEWVAL")_U_RCPARAM("USER")
"RTN","RCDPESP2",112,0)
 ;
"RTN","RCDPESP2",113,0)
 ; end of report
"RTN","RCDPESP2",114,0)
 I 'RCSTOP W !!,$$ENDORPRT^RCDPEARL D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",115,0)
RPT1Q K @RCDIGET
"RTN","RCDPESP2",116,0)
 Q
"RTN","RCDPESP2",117,0)
 ;
"RTN","RCDPESP2",118,0)
HDRLPR(RCEXCEL,RCHDR,RCSTOP) ; Report header Lockbox Parameter Report
"RTN","RCDPESP2",119,0)
 ;   RCEXCEL - if true output for Excel
"RTN","RCDPESP2",120,0)
 ;   RCHDR("PAGE") - page count, passed by ref.
"RTN","RCDPESP2",121,0)
 ;   RCSTOP  - report exit flag
"RTN","RCDPESP2",122,0)
 ;   RCTYPE  - Type of report to run
"RTN","RCDPESP2",123,0)
 ;
"RTN","RCDPESP2",124,0)
 N RCTYPED
"RTN","RCDPESP2",125,0)
 S RCTYPED=$S(RCHDR("REPORTTYPE")="M":"MEDICAL",RCHDR("REPORTTYPE")="P":"PHARMACY",1:"ALL")
"RTN","RCDPESP2",126,0)
 ;
"RTN","RCDPESP2",127,0)
 I RCEXCEL D  Q  ; Excel header for PARAMETER AUDITS
"RTN","RCDPESP2",128,0)
 .Q:RCHDR("PAGE")
"RTN","RCDPESP2",129,0)
 .W !,"PARAMETER^DATE/TIME EDITED^OLD VALUE^NEW VALUE^USER"
"RTN","RCDPESP2",130,0)
 .S RCHDR("PAGE")=1  ; only print once
"RTN","RCDPESP2",131,0)
 ;
"RTN","RCDPESP2",132,0)
 I 'RCEXCEL D
"RTN","RCDPESP2",133,0)
 .I RCHDR("PAGE") D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP2",134,0)
 .W @IOF
"RTN","RCDPESP2",135,0)
 .S RCHDR("PAGE")=RCHDR("PAGE")+1
"RTN","RCDPESP2",136,0)
 . W $$CNTR("EDI Lockbox Parameter Audit Report"),?IOM-8,"Page: "_RCHDR("PAGE")
"RTN","RCDPESP2",137,0)
 . W !,$$CNTR("RUN DATE: "_RCHDR("RUNDATE"))
"RTN","RCDPESP2",138,0)
 . W !,$$CNTR("DATE RANGE: "_RCHDR("DATERANGE"))
"RTN","RCDPESP2",139,0)
 . W !,$$CNTR("REPORT TYPE: "_RCTYPED)
"RTN","RCDPESP2",140,0)
 . W !!,"LOCKBOX PARAMETER UPDATES"
"RTN","RCDPESP2",141,0)
 . W !,"-------------------------                           Values"
"RTN","RCDPESP2",142,0)
 . W !,"Parameter                       Date/Time Edited   Old  New  User"
"RTN","RCDPESP2",143,0)
 . N I S $P(I,"=",IOM+1)="" W !,I
"RTN","RCDPESP2",144,0)
 Q
"RTN","RCDPESP2",145,0)
 ;
"RTN","RCDPESP2",146,0)
RPT2 ; EDI Lockbox Exclusion Audit Report [RCDPE EXCLUSION AUDIT REPORT]
"RTN","RCDPESP2",147,0)
 ;
"RTN","RCDPESP2",148,0)
 ; DESCRIPTION: This report is a simple listing of the RCDPE PARAMETER AUDIT file
"RTN","RCDPESP2",149,0)
 ;              including data concerning changes to the RCDPE AUTO-PAY EXCLUSION file.
"RTN","RCDPESP2",150,0)
 ;
"RTN","RCDPESP2",151,0)
 ; GLOBALS:     ^RCY(344.7,              RCDPE PARAMETER AUDIT
"RTN","RCDPESP2",152,0)
 ;              ^RCY(344.6,              RCDPE AUTO-PAY EXCLUSION
"RTN","RCDPESP2",153,0)
 ;              ^TMP("RCDPESP2",$J,      TMP FILE FOR LIST DIC OUTPUT
"RTN","RCDPESP2",154,0)
 ;
"RTN","RCDPESP2",155,0)
 ; INPUT PARAMETERS: NONE
"RTN","RCDPESP2",156,0)
 ;
"RTN","RCDPESP2",157,0)
 ; LOCAL VARIABLES:
"RTN","RCDPESP2",158,0)
 ;    RCRANGE - date range for report
"RTN","RCDPESP2",159,0)
 ;    RCSTDT  - report start date
"RTN","RCDPESP2",160,0)
 ;    RCENDT  - report end date
"RTN","RCDPESP2",161,0)
 ;    RCEXCEL - true if report in Excel format
"RTN","RCDPESP2",162,0)
 ;    RCSCR - screening logic for LIST^DIC
"RTN","RCDPESP2",163,0)
 ;    RCFLDS  - fields for LIST^DIC
"RTN","RCDPESP2",164,0)
 ;    RCDIGET - storage for results from LIST^DIC
"RTN","RCDPESP2",165,0)
 ;    RCDIERR - errors from LIST^DIC
"RTN","RCDPESP2",166,0)
 ;    RCHDR("PAGE")  - page counter
"RTN","RCDPESP2",167,0)
 ;    RCHDR("RUNDATE") - date/time report was run 
"RTN","RCDPESP2",168,0)
 ;    RCSTOP  - report exit flag
"RTN","RCDPESP2",169,0)
 ;    RCPARAM - parameter that was changed
"RTN","RCDPESP2",170,0)
 ;    RCPARAM("TIME")   - time parameter changed
"RTN","RCDPESP2",171,0)
 ;    RCPARAM("OLDVAL") - old parameter value
"RTN","RCDPESP2",172,0)
 ;    RCPARAM("NEWVAL") - new parameter value
"RTN","RCDPESP2",173,0)
 ;    RCPARAM("USER")  - USER WHO CHANGED A PARAMETER
"RTN","RCDPESP2",174,0)
 ;    RCTMP - one record from LIST^DIC
"RTN","RCDPESP2",175,0)
 ;    RCFND - flag indicating records returned
"RTN","RCDPESP2",176,0)
 ;    RCTYPE  - TYPE OF REPORT TO RUN (MEDICAL, PHARMACY, OR BOTH)
"RTN","RCDPESP2",177,0)
 ;
"RTN","RCDPESP2",178,0)
 W !!,"   EDI Lockbox Exclusion Audit Report",!
"RTN","RCDPESP2",179,0)
 ;
"RTN","RCDPESP2",180,0)
 N RCENDT,RCEXCEL,RCFLDS,RCFND,RCDIGET,RCHDR,RCIEN,RCDIERR,RCPARAM,RCRANGE,RCSCR,RCSTDT,RCSTOP,RCTMP,RCTYPE,RCSCRTYP,RCDIMED,RCDIRX
"RTN","RCDPESP2",181,0)
 ; Kernel variables
"RTN","RCDPESP2",182,0)
 N X1,X2,X,Y,%ZIS,POP
"RTN","RCDPESP2",183,0)
 ; initialize values
"RTN","RCDPESP2",184,0)
 S (RCHDR("PAGE"),RCSTOP,RCIEN,RCEXCEL,RCFND)=0
"RTN","RCDPESP2",185,0)
 S RCDIGET=$NA(^TMP("RCDPESP2",$J)) K @RCDIGET
"RTN","RCDPESP2",186,0)
 ; PRCA*4.5*304 - Medical and RX audit entries
"RTN","RCDPESP2",187,0)
 S RCDIMED=$NA(^TMP("RCDPESP2-MED",$J)) K @RCDIMED
"RTN","RCDPESP2",188,0)
 S RCDIRX=$NA(^TMP("RCDPESP2-RX",$J)) K @RCDIRX
"RTN","RCDPESP2",189,0)
 ;
"RTN","RCDPESP2",190,0)
 S RCTYPE=$$RTYPE()
"RTN","RCDPESP2",191,0)
 Q:RCTYPE=-1
"RTN","RCDPESP2",192,0)
 S RCHDR("REPORTTYPE")=RCTYPE
"RTN","RCDPESP2",193,0)
 ;
"RTN","RCDPESP2",194,0)
 ; GET DATE RANGES
"RTN","RCDPESP2",195,0)
 S RCRANGE=$$DTRNG()
"RTN","RCDPESP2",196,0)
 Q:RCRANGE=0
"RTN","RCDPESP2",197,0)
 S RCSTDT=$P(RCRANGE,U,2)-.0000001,RCENDT=$P(RCRANGE,U,3)+.9999999
"RTN","RCDPESP2",198,0)
 ;
"RTN","RCDPESP2",199,0)
 ; output fields for LIST^DIC
"RTN","RCDPESP2",200,0)
 S RCFLDS="@;.04;.01I;.06;.03;.08;.02"
"RTN","RCDPESP2",201,0)
 ; .04 - CHANGED FIELD  .01 - TIMESTAMP      .06 - NEW VALUE
"RTN","RCDPESP2",202,0)
 ; .03 - CHANGED BY     .08 - COMMENT        .02 - MODIFIED IEN
"RTN","RCDPESP2",203,0)
 ;
"RTN","RCDPESP2",204,0)
 ; first part of LIST^DIC screening logic
"RTN","RCDPESP2",205,0)
 S RCSCR="I ($P(^(0),U,5)=344.6)&($P(^(0),U,1)>"_RCSTDT_")&($P(^(0),U,1)<"_RCENDT_")"
"RTN","RCDPESP2",206,0)
 ;
"RTN","RCDPESP2",207,0)
 ; OUTPUT TO EXCEL?
"RTN","RCDPESP2",208,0)
 S RCEXCEL=$$DISPTY^RCDPEM3() Q:+RCEXCEL=-1
"RTN","RCDPESP2",209,0)
 I RCEXCEL D INFO^RCDPEM6
"RTN","RCDPESP2",210,0)
 ;
"RTN","RCDPESP2",211,0)
 ;Select output device
"RTN","RCDPESP2",212,0)
 S %ZIS="M" D ^%ZIS Q:POP  U IO
"RTN","RCDPESP2",213,0)
 ;
"RTN","RCDPESP2",214,0)
 S RCHDR("RUNDATE")=$$FMTE^XLFDT($$NOW^XLFDT,"5S")
"RTN","RCDPESP2",215,0)
 ;
"RTN","RCDPESP2",216,0)
 ; PROCESS AUTO-POST EXCLUSIONS
"RTN","RCDPESP2",217,0)
 ;
"RTN","RCDPESP2",218,0)
 ; PRCA*4.5*304 - Get the correct screening logic, based on the type of audit reeport to run
"RTN","RCDPESP2",219,0)
 S RCSCR(.06)=RCSCR_"&($P(^(0),U,4)=.06)" ; screening logic for medical auto-post
"RTN","RCDPESP2",220,0)
 S RCSCR(.07)=RCSCR_"&($P(^(0),U,4)=.07)" ; screening logic for medical auto-decrease
"RTN","RCDPESP2",221,0)
 S RCSCR(.08)=RCSCR_"&($P(^(0),U,4)=.08)" ; screening logic for pharmacy auto-post
"RTN","RCDPESP2",222,0)
 ;
"RTN","RCDPESP2",223,0)
 ;PRCA*4.5*304 - Get the medical and RX audit entries for Auto-Post exclusions
"RTN","RCDPESP2",224,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.06),,RCDIMED,"RCDIERR")
"RTN","RCDPESP2",225,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",226,0)
 I $D(RCDIERR) W !!,"Error collecting auto-post report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",227,0)
 ;
"RTN","RCDPESP2",228,0)
 ; Get the correct screening logic, based on the type of audit to run
"RTN","RCDPESP2",229,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.07),,RCDIGET,"RCDIERR")
"RTN","RCDPESP2",230,0)
 ;
"RTN","RCDPESP2",231,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",232,0)
 I $D(RCDIERR) W !!,"Error collecting auto-decrease report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",233,0)
 ;
"RTN","RCDPESP2",234,0)
 D LIST^DIC(344.7,,RCFLDS,"P",,,,,RCSCR(.08),,RCDIRX,"RCDIERR")
"RTN","RCDPESP2",235,0)
 ; CHECK FOR AN ERROR
"RTN","RCDPESP2",236,0)
 I $D(RCDIERR) W !!,"Error collecting auto-post report data." D ASK^RCDPEARL(.RCSTOP) Q
"RTN","RCDPESP2",237,0)
 ;
"RTN","RCDPESP2",238,0)
 I (RCTYPE="B")!(RCTYPE="M") D  G:RCSTOP RPT2Q
"RTN","RCDPESP2",239,0)
 . D HDRXAR(.06,RCTYPE)  ; complete header
"RTN","RCDPESP2",240,0)
 . ;
"RTN","RCDPESP2",241,0)
 . S RCFND=$D(@RCDIMED@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",242,0)
 . I 'RCFND W !,"No Auto-post Exclusions to Display",!
"RTN","RCDPESP2",243,0)
 . ;
"RTN","RCDPESP2",244,0)
 . I RCFND S RCIEN=0 D
"RTN","RCDPESP2",245,0)
 .. F  S RCIEN=$O(@RCDIMED@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",246,0)
 ... S RCTMP=$P(@RCDIMED@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",247,0)
 ... I 'RCEXCEL,$Y+4>IOSL D HDRXAR(.06,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",248,0)
 ... D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",249,0)
 . ; PROCESS MEDICAL AUTO-DECREASE EXCLUSIONS
"RTN","RCDPESP2",250,0)
 . D  ; complete header or just the section
"RTN","RCDPESP2",251,0)
 .. I $Y+11<IOSL D SECTHDR(.07)  Q  ; just section header
"RTN","RCDPESP2",252,0)
 .. D HDRXAR(.07,RCTYPE)  ; complete header
"RTN","RCDPESP2",253,0)
 . ;
"RTN","RCDPESP2",254,0)
 . S RCFND=$D(@RCDIGET@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",255,0)
 . I 'RCFND W !,"No Auto-decrease Exclusions to Display",!
"RTN","RCDPESP2",256,0)
 . ; RECORDS RETURNED
"RTN","RCDPESP2",257,0)
 . I RCFND S RCIEN=0 F  S RCIEN=$O(@RCDIGET@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",258,0)
 .. S RCTMP=$P(@RCDIGET@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",259,0)
 .. I $Y+4>IOSL D HDRXAR(.07,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",260,0)
 .. D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",261,0)
 ;
"RTN","RCDPESP2",262,0)
 I (RCTYPE="B")!(RCTYPE="P") D  G:RCSTOP RPT2Q
"RTN","RCDPESP2",263,0)
 . I RCTYPE="P" D HDRXAR(.08,RCTYPE)  ; complete header
"RTN","RCDPESP2",264,0)
 . I RCTYPE'="P" D  ; complete header or just the section
"RTN","RCDPESP2",265,0)
 .. I $Y+11<IOSL D SECTHDR(.08)  Q  ; just section header
"RTN","RCDPESP2",266,0)
 .. D HDRXAR(.08,RCTYPE)  ; complete header
"RTN","RCDPESP2",267,0)
 . ;
"RTN","RCDPESP2",268,0)
 . S RCFND=$D(@RCDIRX@("DILIST",1))  ; CHECK FOR RECORDS RETURNED
"RTN","RCDPESP2",269,0)
 . I 'RCFND W !,"No Auto-decrease Exclusions to Display",!
"RTN","RCDPESP2",270,0)
 . ; RECORDS RETURNED
"RTN","RCDPESP2",271,0)
 . I RCFND S RCIEN=0 F  S RCIEN=$O(@RCDIRX@("DILIST",RCIEN)) Q:RCSTOP!('RCIEN)  D
"RTN","RCDPESP2",272,0)
 .. S RCTMP=$P(@RCDIRX@("DILIST",RCIEN,0),U,2,7)
"RTN","RCDPESP2",273,0)
 .. I $Y+4>IOSL D HDRXAR(.08,RCTYPE) Q:RCSTOP
"RTN","RCDPESP2",274,0)
 .. D DSPXCLSN(RCTMP)
"RTN","RCDPESP2",275,0)
 ;
"RTN","RCDPESP2",276,0)
 ; end of report
"RTN","RCDPESP2",277,0)
 W !!,$$ENDORPRT^RCDPEARL
"RTN","RCDPESP2",278,0)
 D ASK^RCDPEARL(.RCSTOP)
"RTN","RCDPESP2",279,0)
 ;
"RTN","RCDPESP2",280,0)
RPT2Q ;
"RTN","RCDPESP2",281,0)
 K @RCDIGET,@RCDIMED,@RCDIRX  ; clean up
"RTN","RCDPESP2",282,0)
 Q
"RTN","RCDPESP2",283,0)
 ;
"RTN","RCDPESP2",284,0)
GETPAYER() ; GET THE PAYER NAME + PAYER ID
"RTN","RCDPESP2",285,0)
 N RCIEN,RCPAYR
"RTN","RCDPESP2",286,0)
 S RCIEN=$P(RCTMP,U,6)
"RTN","RCDPESP2",287,0)
 I '$D(^RCY(344.6,RCIEN)) Q ""
"RTN","RCDPESP2",288,0)
 S RCPAYR=$$GET1^DIQ(344.6,RCIEN_",",.01)_" "_$$GET1^DIQ(344.6,RCIEN_",",.02)
"RTN","RCDPESP2",289,0)
 Q RCPAYR
"RTN","RCDPESP2",290,0)
 ;
"RTN","RCDPESP2",291,0)
HDRXAR(RCTYP,RCTYPD) ; Report header for exclusin auto report
"RTN","RCDPESP2",292,0)
 ;   RCTYP -   .06 = AUTO-POSTING EXCLUSION (medical)
"RTN","RCDPESP2",293,0)
 ;             .07 = AUTO-DECREASE EXCLUSION (medical)
"RTN","RCDPESP2",294,0)
 ;             .08 = AUTO-POSTING EXCLUSION (pharmacy)
"RTN","RCDPESP2",295,0)
 ;   RCTYPD  - M = Medical
"RTN","RCDPESP2",296,0)
 ;             P = Pharmacy
"RTN","RCDPESP2",297,0)
 ;             B = Both
"RTN","RCDPESP2",298,0)
 ;
"RTN","RCDPESP2",299,0)
 N RCTYPED
"RTN","RCDPESP2",300,0)
 S RCTYPED=$S(RCTYPD="M":"MEDICAL",RCTYPD="P":"PHARMACY",1:"ALL")
"RTN","RCDPESP2",301,0)
 ;
"RTN","RCDPESP2",302,0)
 I RCEXCEL D  Q
"RTN","RCDPESP2",303,0)
 .Q:RCHDR("PAGE")
"RTN","RCDPESP2",304,0)
 .; Excel header for parameter audits
"RTN","RCDPESP2",305,0)
 .W !!,"TYPE^CHANGE^PAYER^TIMESTAMP^USER^COMMENT"
"RTN","RCDPESP2",306,0)
 .S RCHDR("PAGE")=1  ; only print it once
"RTN","RCDPESP2",307,0)
 ;
"RTN","RCDPESP2",308,0)
 I RCHDR("PAGE") D ASK^RCDPEARL(.RCSTOP) Q:RCSTOP
"RTN","RCDPESP2",309,0)
 W @IOF
"RTN","RCDPESP2",310,0)
 S RCHDR("PAGE")=RCHDR("PAGE")+1
"RTN","RCDPESP2",311,0)
 ; report header for parameter audits
"RTN","RCDPESP2",312,0)
 W $$CNTR("EDI Lockbox Exclusion Audit Report"),?IOM-8,"Page: "_RCHDR("PAGE")
"RTN","RCDPESP2",313,0)
 W !,$$CNTR("DIVISIONS: ALL")
"RTN","RCDPESP2",314,0)
 W !,$$CNTR("RUN DATE: "_$G(RCHDR("RUNDATE")))
"RTN","RCDPESP2",315,0)
 W !,$$CNTR("DATE RANGE: "_$$FMTE^XLFDT($P(RCRANGE,U,2),"5D")_" - "_$$FMTE^XLFDT($P(RCRANGE,U,3),"5D"))
"RTN","RCDPESP2",316,0)
 W !,$$CNTR("REPORT TYPE: "_RCTYPED)
"RTN","RCDPESP2",317,0)
 D SECTHDR(RCTYP,RCTYPD)
"RTN","RCDPESP2",318,0)
 Q
"RTN","RCDPESP2",319,0)
 ;
"RTN","RCDPESP2",320,0)
SECTHDR(RCTYPE,RCREPT) ; SECTION HEADER
"RTN","RCDPESP2",321,0)
 ;   RCTYP - .06 = AUTO-POSTING EXCLUSION (medical)
"RTN","RCDPESP2",322,0)
 ;           .07 = AUTO-DECREASE EXCLUSION (medical)
"RTN","RCDPESP2",323,0)
 ;           .08 = AUTO-POSTING EXCLUSION (pharmacy)
"RTN","RCDPESP2",324,0)
 ;   RCREPT - "M" = "MEDICAL"
"RTN","RCDPESP2",325,0)
 ;            "P" = "PHARMACY"
"RTN","RCDPESP2",326,0)
 Q:$G(RCEXCEL)
"RTN","RCDPESP2",327,0)
 ;
"RTN","RCDPESP2",328,0)
 I RCTYPE=.06 D
"RTN","RCDPESP2",329,0)
 .W !!,"MEDICAL AUTO-POSTING PAYER EXCLUSION LIST"
"RTN","RCDPESP2",330,0)
 .W !,"-----------------------------------------"
"RTN","RCDPESP2",331,0)
 ;
"RTN","RCDPESP2",332,0)
 I RCTYPE=.07 D
"RTN","RCDPESP2",333,0)
 .W !!,"MEDICAL AUTO-DECREASE PAYER EXCLUSION LIST"
"RTN","RCDPESP2",334,0)
 .W !,"------------------------------------------"
"RTN","RCDPESP2",335,0)
 ;
"RTN","RCDPESP2",336,0)
  I RCTYPE=.08 D
"RTN","RCDPESP2",337,0)
 .W !!,"PHARMACY AUTO-POSTING PAYER EXCLUSION LIST"
"RTN","RCDPESP2",338,0)
 .W !,"------------------------------------------"
"RTN","RCDPESP2",339,0)
 ;
"RTN","RCDPESP2",340,0)
 W !,"Change Payer                            Date/Time Edited   User"
"RTN","RCDPESP2",341,0)
 W !,$TR($J("",IOM-1)," ","=")  ; row of equal signs
"RTN","RCDPESP2",342,0)
 Q
"RTN","RCDPESP2",343,0)
 ;
"RTN","RCDPESP2",344,0)
CNTR(TXT) ; center TXT
"RTN","RCDPESP2",345,0)
 Q $J("",IOM-$L(TXT)\2)_TXT
"RTN","RCDPESP2",346,0)
 ;
"RTN","RCDPESP2",347,0)
DTRNG() ; function, returns date range for the report
"RTN","RCDPESP2",348,0)
 N DIR,DUOUT,RNGFLG,X,Y,RCSTART,RCEND
"RTN","RCDPESP2",349,0)
 S (RCSTART,RCEND)=0 D DATES(.RCSTART,.RCEND)
"RTN","RCDPESP2",350,0)
 Q:RCSTART=-1 0
"RTN","RCDPESP2",351,0)
 Q:RCSTART "1^"_RCSTART_"^"_RCEND
"RTN","RCDPESP2",352,0)
 Q:'RCSTART "0^^"
"RTN","RCDPESP2",353,0)
 Q 0
"RTN","RCDPESP2",354,0)
 ;
"RTN","RCDPESP2",355,0)
DATES(BDATE,EDATE) ; Get a date range, both values passed by ref.
"RTN","RCDPESP2",356,0)
 N DIR,DTOUT,DUOUT,X,Y
"RTN","RCDPESP2",357,0)
 S (BDATE,EDATE)=0
"RTN","RCDPESP2",358,0)
 S DIR("?")="Enter the earliest AUDIT DATE to include on the report"
"RTN","RCDPESP2",359,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Report start date: " D ^DIR K DIR
"RTN","RCDPESP2",360,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPESP2",361,0)
 S BDATE=Y K DIR,X,Y
"RTN","RCDPESP2",362,0)
 S DIR("?")="Enter the latest AUDIT DATE to include on the report"
"RTN","RCDPESP2",363,0)
 S DIR(0)="DAO^"_BDATE_":"_DT_":APE",DIR("A")="Report end date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPESP2",364,0)
 D ^DIR K DIR
"RTN","RCDPESP2",365,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S BDATE=-1 Q
"RTN","RCDPESP2",366,0)
 S EDATE=Y
"RTN","RCDPESP2",367,0)
 Q
"RTN","RCDPESP2",368,0)
 ;
"RTN","RCDPESP2",369,0)
DSPXCLSN(RCX) ; display exclusion
"RTN","RCDPESP2",370,0)
 ; RCX - exclusion value from ^DIC call
"RTN","RCDPESP2",371,0)
 N RCXCLSN
"RTN","RCDPESP2",372,0)
 S RCXCLSN("CHANGE")=$S($P(RCX,U,3):"Added",1:"Removed")
"RTN","RCDPESP2",373,0)
 S RCXCLSN("TIME")=$$FMTE^XLFDT($P(RCX,U,2),"2")
"RTN","RCDPESP2",374,0)
 S RCXCLSN("USER")=$P(RCX,U,4)
"RTN","RCDPESP2",375,0)
 S RCXCLSN("PAYER")=$$GETPAYER
"RTN","RCDPESP2",376,0)
 S RCXCLSN("COMMENT")=$P(RCX,U,5)
"RTN","RCDPESP2",377,0)
 ;
"RTN","RCDPESP2",378,0)
 I 'RCEXCEL D  Q
"RTN","RCDPESP2",379,0)
 .N Y S Y=RCXCLSN("CHANGE"),$E(Y,9)=$E(RCXCLSN("PAYER"),1,30),$E(Y,41)=" "_RCXCLSN("TIME"),Y=Y_" "_RCXCLSN("USER")
"RTN","RCDPESP2",380,0)
 .W !,Y,!,"  Comment: "_RCXCLSN("COMMENT")
"RTN","RCDPESP2",381,0)
 ; Excel format
"RTN","RCDPESP2",382,0)
 S RCXCLSN("LABEL")=$$GET1^DID(344.6,$P(RCX,U,1),,"LABEL")
"RTN","RCDPESP2",383,0)
 W !,RCXCLSN("LABEL")_U_RCXCLSN("CHANGE")_U_RCXCLSN("PAYER")_U_RCXCLSN("TIME")_U_RCXCLSN("USER")_U_RCXCLSN("COMMENT")
"RTN","RCDPESP2",384,0)
 ;
"RTN","RCDPESP2",385,0)
 Q
"RTN","RCDPESP2",386,0)
 ;
"RTN","RCDPESP2",387,0)
 ;Retrieve the parameter for the type of information to display
"RTN","RCDPESP2",388,0)
RTYPE(DEF) ;EP from RCDPEAA1
"RTN","RCDPESP2",389,0)
 ; Input:   DEF     - Value to use a default
"RTN","RCDPESP2",390,0)
 ; Returns: -1      - User ^ or timed out
"RTN","RCDPESP2",391,0)
 ;           M      - User selected MEDICAL
"RTN","RCDPESP2",392,0)
 ;           P      - User selected PHARMACY
"RTN","RCDPESP2",393,0)
 ;           B      - User selected BOTH
"RTN","RCDPESP2",394,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT,RCTYPE
"RTN","RCDPESP2",395,0)
 S RCTYPE=""
"RTN","RCDPESP2",396,0)
 S DIR("?")="Enter the type of information to display on the report"
"RTN","RCDPESP2",397,0)
 S DIR(0)="SA^M:MEDICAL;P:PHARMACY;B:BOTH"
"RTN","RCDPESP2",398,0)
 S DIR("A")="(M)EDICAL, (P)HARMACY, or (B)OTH: "    ; PRCA*4.5*317 changed 'OR' to 'or'
"RTN","RCDPESP2",399,0)
 S DIR("B")=$S($G(DEF)'="":DEF,1:"BOTH")
"RTN","RCDPESP2",400,0)
 D ^DIR
"RTN","RCDPESP2",401,0)
 K DIR
"RTN","RCDPESP2",402,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPESP2",403,0)
 Q:Y="" "B"
"RTN","RCDPESP2",404,0)
 Q $E(Y)
"RTN","RCDPESP2",405,0)
 ;
"RTN","RCDPESP2",406,0)
 ;Check to see if the Data element matches the report type
"RTN","RCDPESP2",407,0)
RPTYPE(RCTYPE,RCPARAM) ;
"RTN","RCDPESP2",408,0)
 ; Return 1 if valid to print, 0 otherwise
"RTN","RCDPESP2",409,0)
 N RCDATA,RCMEN,RCREN
"RTN","RCDPESP2",410,0)
 ;
"RTN","RCDPESP2",411,0)
 S (RCMEN,RCREN)=""
"RTN","RCDPESP2",412,0)
 ; Get Auto Decrease parameters
"RTN","RCDPESP2",413,0)
 I RCTYPE="M" S RCMEN=$P($G(^RCY(344.61,1,0)),U,3)
"RTN","RCDPESP2",414,0)
 I RCTYPE="P" S RCREN=$P($G(^RCY(344.61,1,1)),U,2)
"RTN","RCDPESP2",415,0)
 ;
"RTN","RCDPESP2",416,0)
 Q:RCTYPE="B" 1
"RTN","RCDPESP2",417,0)
 Q:(RCTYPE="M")&(RCPARAM["MED") 1       ; Medical Parameters
"RTN","RCDPESP2",418,0)
 Q:(RCTYPE="P")&(RCPARAM["RX") 1        ; Pharmacy parameters
"RTN","RCDPESP2",419,0)
 Q:(RCTYPE="P")&(RCPARAM["PHARM") 1        ; Pharmacy parameters
"RTN","RCDPESP2",420,0)
 Q:(RCTYPE="M")&(RCMEN)&(RCPARAM["DECREASE") 1         ; Auto-decrease for med is on
"RTN","RCDPESP2",421,0)
 Q:(RCTYPE="P")&(RCREN)&(RCPARAM["DECREASE") 1         ; Auto-decrease for pharmacy
"RTN","RCDPESP2",422,0)
 Q 0
"RTN","RCDPESP5")
0^56^B147639025
"RTN","RCDPESP5",1,0)
RCDPESP5 ;ALB/SAB - ePayment Lockbox Site Parameters Definition - Files 344.71 ;03/19/2015
"RTN","RCDPESP5",2,0)
 ;;4.5;Accounts Receivable;**304,321**;Mar 20, 1995;Build 48
"RTN","RCDPESP5",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESP5",4,0)
 ;
"RTN","RCDPESP5",5,0)
 Q
"RTN","RCDPESP5",6,0)
 ;
"RTN","RCDPESP5",7,0)
CARC(RCQUIT) ;Update the CARC/RARC inclusion table - added RCQUIT as input parameter - PRCA*4.5*321
"RTN","RCDPESP5",8,0)
 ;
"RTN","RCDPESP5",9,0)
 ;initialize
"RTN","RCDPESP5",10,0)
 N RCANS,RCCARC,RCCHG,RCCDATA,RCCIEN,RCEDIT,RCRSN,RCSTAT
"RTN","RCDPESP5",11,0)
 N RCAMT,RCNAMT,RCAUDARY,RCCARCDS,RCYN,RCVAL,RCINACT,RCACTV
"RTN","RCDPESP5",12,0)
 S RCEDIT="",RCANS=""
"RTN","RCDPESP5",13,0)
 ;
"RTN","RCDPESP5",14,0)
 ;Display initial entry line.
"RTN","RCDPESP5",15,0)
 W !,"AUTO-DECREASE MEDICAL CLAIMS FOR THE FOLLOWING CARC/AMOUNTS ONLY:",!
"RTN","RCDPESP5",16,0)
 ;
"RTN","RCDPESP5",17,0)
 ;
"RTN","RCDPESP5",18,0)
 ;Loop until the user quits
"RTN","RCDPESP5",19,0)
 F  D  Q:RCANS="Q"
"RTN","RCDPESP5",20,0)
 . ;
"RTN","RCDPESP5",21,0)
 . ;display list of currently enabled/disabled CARCs/RARCs
"RTN","RCDPESP5",22,0)
 . D PRTCARC()
"RTN","RCDPESP5",23,0)
 . ;
"RTN","RCDPESP5",24,0)
 . ; add some spacing
"RTN","RCDPESP5",25,0)
 . W !!
"RTN","RCDPESP5",26,0)
 . ;
"RTN","RCDPESP5",27,0)
 . ;Ask user for the CARC/RARC to enable/disable (QUIT) [default] to exit
"RTN","RCDPESP5",28,0)
 . ;
"RTN","RCDPESP5",29,0)
 . S RCCARC=$$GETCARC()
"RTN","RCDPESP5",30,0)
 . I RCCARC=-1 S RCQUIT=1,RCANS="Q" Q
"RTN","RCDPESP5",31,0)
 . I RCCARC=0 S RCANS="Q" Q
"RTN","RCDPESP5",32,0)
 . ;
"RTN","RCDPESP5",33,0)
 . ;Validate CARC entered
"RTN","RCDPESP5",34,0)
 . S RCVAL=$$VAL^RCDPCRR(345,RCCARC)  ; Validate the CARC against File 345
"RTN","RCDPESP5",35,0)
 . S RCACTV=$$ACT^RCDPRU(345,RCCARC,)  ; Check if CARC is an active code
"RTN","RCDPESP5",36,0)
 . ;
"RTN","RCDPESP5",37,0)
 . ;If the CARC is invalid, warn user and exit back to the CARC prompt
"RTN","RCDPESP5",38,0)
 . I 'RCVAL W !,"The CARC code you have entered is not a valid CARC code.  Please try again" Q
"RTN","RCDPESP5",39,0)
 . ;
"RTN","RCDPESP5",40,0)
 . ; Print CARC and description and initialize inactive variable
"RTN","RCDPESP5",41,0)
 . S RCCARCDS="",RCINACT=""
"RTN","RCDPESP5",42,0)
 . D GETCODES^RCDPCRR(RCCARC,"","A",$$DT^XLFDT,"RCCARCDS","1^70")
"RTN","RCDPESP5",43,0)
 . I $D(RCCARCDS("CARC",RCCARC))'=10 D
"RTN","RCDPESP5",44,0)
 . . S RCINACT=1
"RTN","RCDPESP5",45,0)
 . . D GETCODES^RCDPCRR(RCCARC,"","I",$$DT^XLFDT,"RCCARCDS","1^70")
"RTN","RCDPESP5",46,0)
 . S RCCIEN=$O(RCCARCDS("CARC",RCCARC,""))
"RTN","RCDPESP5",47,0)
 . S RCDESC=$P(RCCARCDS("CARC",RCCARC,RCCIEN),U,6)
"RTN","RCDPESP5",48,0)
 . ;
"RTN","RCDPESP5",49,0)
 . ; If the description is 70 characters, add ellipsis to the string to indicate there is more to the description
"RTN","RCDPESP5",50,0)
 . S:$E(RCDESC)=70 RCDESC=RCDESC_" ..."
"RTN","RCDPESP5",51,0)
 . W !,?3,RCDESC,!
"RTN","RCDPESP5",52,0)
 . I 'RCACTV W "   *** WARNING: CARC code "_RCCARC_" is no longer active.",!
"RTN","RCDPESP5",53,0)
 . ;
"RTN","RCDPESP5",54,0)
 . ; Look up CARC/RARC in table.
"RTN","RCDPESP5",55,0)
 . S RCCIEN=$O(^RCY(344.62,"B",RCCARC,""))
"RTN","RCDPESP5",56,0)
 . S (RCAMT,RCSTAT)=0  ; Initialize if new code entry for table
"RTN","RCDPESP5",57,0)
 . I RCCIEN D         ; Code exists in table
"RTN","RCDPESP5",58,0)
 . . S RCCDATA=$G(^RCY(344.62,RCCIEN,0))
"RTN","RCDPESP5",59,0)
 . . ;
"RTN","RCDPESP5",60,0)
 . . ; Get current Auto-decrease status and Max decrease amount
"RTN","RCDPESP5",61,0)
 . . S RCSTAT=$P(RCCDATA,U,2)
"RTN","RCDPESP5",62,0)
 . . S RCAMT=$P(RCCDATA,U,6)
"RTN","RCDPESP5",63,0)
 . ;
"RTN","RCDPESP5",64,0)
 . ; Init Audit array to send each update individually
"RTN","RCDPESP5",65,0)
 . S RCAUDARY(1)=""
"RTN","RCDPESP5",66,0)
 . S RCAUDARY(2)=""
"RTN","RCDPESP5",67,0)
 . ;
"RTN","RCDPESP5",68,0)
 . ; If present and enabled
"RTN","RCDPESP5",69,0)
 . I RCCIEN,RCSTAT D  Q
"RTN","RCDPESP5",70,0)
 . . ;
"RTN","RCDPESP5",71,0)
 . . S RCNAMT=0,RCRSN=""  ;Initialize variables
"RTN","RCDPESP5",72,0)
 . . ;
"RTN","RCDPESP5",73,0)
 . . ; Confirm that this is the correct CARC
"RTN","RCDPESP5",74,0)
 . . S RCYN=$$CONFIRM(4)
"RTN","RCDPESP5",75,0)
 . . Q:RCYN=-1
"RTN","RCDPESP5",76,0)
 . . ;
"RTN","RCDPESP5",77,0)
 . . ; Ask for reason
"RTN","RCDPESP5",78,0)
 . . S RCRSN=$$GETREASN(RCCARC)
"RTN","RCDPESP5",79,0)
 . . Q:RCRSN=-1   ; User requested to quit
"RTN","RCDPESP5",80,0)
 . . ;
"RTN","RCDPESP5",81,0)
 . . ; Confirm the disabling
"RTN","RCDPESP5",82,0)
 . . S RCYN=$$CONFIRM(3)
"RTN","RCDPESP5",83,0)
 . . Q:RCYN=-1
"RTN","RCDPESP5",84,0)
 . . ;
"RTN","RCDPESP5",85,0)
 . . D UPDDATA(RCCIEN,0,RCAMT,RCRSN) ; If disabling
"RTN","RCDPESP5",86,0)
 . . ;
"RTN","RCDPESP5",87,0)
 . . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",88,0)
 . . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",89,0)
 . . ;
"RTN","RCDPESP5",90,0)
 . . ;Don't need a second entry in the audit file so kill it to prevent audit logging from crashing
"RTN","RCDPESP5",91,0)
 . . K RCAUDARY(2)
"RTN","RCDPESP5",92,0)
 . . ;
"RTN","RCDPESP5",93,0)
 . . ; Update audit log for disable CARC
"RTN","RCDPESP5",94,0)
 . . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",95,0)
 . . S RCAUDARY(1)="344.62^.02^"_RCCIEN_"^0^1^"_RCRSN
"RTN","RCDPESP5",96,0)
 . . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",97,0)
 . ;
"RTN","RCDPESP5",98,0)
 . ; Confirm that this is the correct CARC to Enable
"RTN","RCDPESP5",99,0)
 . S RCYN=$$CONFIRM(1)
"RTN","RCDPESP5",100,0)
 . Q:RCYN=-1
"RTN","RCDPESP5",101,0)
 . ;
"RTN","RCDPESP5",102,0)
 . ; Ask for new amount
"RTN","RCDPESP5",103,0)
 . S RCNAMT=$$GETAMT()
"RTN","RCDPESP5",104,0)
 . Q:RCNAMT=-1   ; User requested to quit
"RTN","RCDPESP5",105,0)
 . ;
"RTN","RCDPESP5",106,0)
 . ; Ask for reason
"RTN","RCDPESP5",107,0)
 . S RCRSN=$$GETREASN(RCCARC)
"RTN","RCDPESP5",108,0)
 . Q:RCRSN=-1   ; User requested to quit
"RTN","RCDPESP5",109,0)
 . ;
"RTN","RCDPESP5",110,0)
 . ; Confirm save
"RTN","RCDPESP5",111,0)
 . S RCYN=$$CONFIRM(2)
"RTN","RCDPESP5",112,0)
 . I (RCYN="N")!(RCYN=-1) W !,"NOT SAVED",!! Q
"RTN","RCDPESP5",113,0)
 . ;   
"RTN","RCDPESP5",114,0)
 . ; Re-enable if disabled and quit
"RTN","RCDPESP5",115,0)
 . I RCCIEN D  Q
"RTN","RCDPESP5",116,0)
 . . D UPDDATA(RCCIEN,1,RCNAMT,RCRSN)  ; Renable and update amount
"RTN","RCDPESP5",117,0)
 . . ;
"RTN","RCDPESP5",118,0)
 . . ;Update audit file with reason and amount changes.
"RTN","RCDPESP5",119,0)
 . . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",120,0)
 . . S RCAUDARY(1)="344.62^.02^"_RCCIEN_"^1^"_RCSTAT_"^"_RCRSN
"RTN","RCDPESP5",121,0)
 . . S RCAUDARY(2)="344.62^.06^"_RCCIEN_"^"_RCNAMT_"^"_RCAMT_"^"_RCRSN
"RTN","RCDPESP5",122,0)
 . . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",123,0)
 . . ;
"RTN","RCDPESP5",124,0)
 . . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",125,0)
 . . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",126,0)
 . ;
"RTN","RCDPESP5",127,0)
 . ; Store new entry
"RTN","RCDPESP5",128,0)
 . D ADDDATA(RCCARC,RCNAMT,RCRSN)
"RTN","RCDPESP5",129,0)
 . ;
"RTN","RCDPESP5",130,0)
 . ;Update audit file with reason and amount changes.
"RTN","RCDPESP5",131,0)
 . S RCCIEN=$$FIND1^DIC(344.62,"","",RCCARC,"","","RCERR") I RCCIEN="" S RCCIEN="ERROR"
"RTN","RCDPESP5",132,0)
 . ;
"RTN","RCDPESP5",133,0)
 . ; Order - File ; Field ; IEN ; New Value ; Old Value ; Comment
"RTN","RCDPESP5",134,0)
 . S RCAUDARY(1)="344.62^.02^"_RCCIEN_"^1^0^"_RCRSN
"RTN","RCDPESP5",135,0)
 . S RCAUDARY(2)="344.62^.06^"_RCCIEN_"^"_RCNAMT_"^0^"_RCRSN
"RTN","RCDPESP5",136,0)
 . D AUDIT^RCDPESP(.RCAUDARY)
"RTN","RCDPESP5",137,0)
 . ;
"RTN","RCDPESP5",138,0)
 . ;At least 1 item was change/updated/added so set flag for reprint
"RTN","RCDPESP5",139,0)
 . I 'RCEDIT S RCEDIT=1
"RTN","RCDPESP5",140,0)
 ;
"RTN","RCDPESP5",141,0)
 Q
"RTN","RCDPESP5",142,0)
 ;
"RTN","RCDPESP5",143,0)
PRTCARC() ;Display current entries that have been defined for inclusion or exclusion into 
"RTN","RCDPESP5",144,0)
 ;
"RTN","RCDPESP5",145,0)
 N RCI,RCCT,RCSTRING,RCDATA,RCINACT,RCCARCD,RCDESC,RCCIEN,RCSTAT,RCCODE
"RTN","RCDPESP5",146,0)
 ;
"RTN","RCDPESP5",147,0)
 S RCI=0,RCCT=0,RCSTRING=""
"RTN","RCDPESP5",148,0)
 S RCSTRING=$TR($J("",73)," ","-")
"RTN","RCDPESP5",149,0)
 ;
"RTN","RCDPESP5",150,0)
 ; Print Header
"RTN","RCDPESP5",151,0)
 ;
"RTN","RCDPESP5",152,0)
 W !!,?3,"CARC ",?9,"Description",?65,"Max. Amt"
"RTN","RCDPESP5",153,0)
 W !,?3,RCSTRING
"RTN","RCDPESP5",154,0)
 ;
"RTN","RCDPESP5",155,0)
 ; Loop and print entries
"RTN","RCDPESP5",156,0)
 F  S RCI=$O(^RCY(344.62,RCI)) Q:'RCI  D
"RTN","RCDPESP5",157,0)
 . S RCDATA=$G(^RCY(344.62,RCI,0))
"RTN","RCDPESP5",158,0)
 . Q:RCDATA=""
"RTN","RCDPESP5",159,0)
 . S RCCODE=$P(RCDATA,U),RCCIEN=$O(^RC(345,"B",RCCODE,""))
"RTN","RCDPESP5",160,0)
 . S RCDESC=$G(^RC(345,RCCIEN,1,1,0))
"RTN","RCDPESP5",161,0)
 . S RCSTAT=$P(RCDATA,U,2)
"RTN","RCDPESP5",162,0)
 . Q:RCSTAT'=1
"RTN","RCDPESP5",163,0)
 . S RCCT=RCCT+1
"RTN","RCDPESP5",164,0)
 . I $L(RCDESC)>50 S RCDESC=$E(RCDESC,1,50)_" ..."
"RTN","RCDPESP5",165,0)
 . D GETCODES^RCDPCRR(RCCODE,"","B",$$DT^XLFDT,"RCCARCD","1^70")
"RTN","RCDPESP5",166,0)
 . W !,?3,RCCODE,?9,$E(RCDESC,1,55),?63,$J($P(RCDATA,U,6),10,0)
"RTN","RCDPESP5",167,0)
 . I $P(RCCARCD("CARC",RCCODE,RCCIEN),U,3)'="" W " (I)"  ; if inactive, display (I)
"RTN","RCDPESP5",168,0)
 . K RCCARCD
"RTN","RCDPESP5",169,0)
 ;
"RTN","RCDPESP5",170,0)
 I RCCT=0 W !,?5,"NO CARC/AMOUNTS ENTERED"
"RTN","RCDPESP5",171,0)
 Q
"RTN","RCDPESP5",172,0)
 ;
"RTN","RCDPESP5",173,0)
 ;Retrieve the next CARC code to enable/disable
"RTN","RCDPESP5",174,0)
GETCARC() ;
"RTN","RCDPESP5",175,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",176,0)
 S DIR("?")="Enter a CARC code to enable/disable or Q to Quit."
"RTN","RCDPESP5",177,0)
 S DIR(0)="FAO"
"RTN","RCDPESP5",178,0)
 S DIR("??")="^D LIST^RCDPCRR(345)"
"RTN","RCDPESP5",179,0)
 S DIR("A")="CARC: "
"RTN","RCDPESP5",180,0)
 D ^DIR
"RTN","RCDPESP5",181,0)
 K DIR
"RTN","RCDPESP5",182,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPESP5",183,0)
 I Y="" Q 0
"RTN","RCDPESP5",184,0)
 Q Y
"RTN","RCDPESP5",185,0)
 ;
"RTN","RCDPESP5",186,0)
 ;Ask user to change or disable an enabled CARC auto-decrement
"RTN","RCDPESP5",187,0)
CHGDIS() ;
"RTN","RCDPESP5",188,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",189,0)
 S DIR("?")="Either (D)isable the CARC from Auto-Decrease or (C)hange the maximum amount of Auto-Decrease."
"RTN","RCDPESP5",190,0)
 S DIR(0)="FA"
"RTN","RCDPESP5",191,0)
 S DIR("A")="(C)hange or (D)isable: "
"RTN","RCDPESP5",192,0)
 S DIR("S")="C:Change;D:Disable"
"RTN","RCDPESP5",193,0)
 D ^DIR
"RTN","RCDPESP5",194,0)
 K DIR
"RTN","RCDPESP5",195,0)
 Q Y
"RTN","RCDPESP5",196,0)
 ;
"RTN","RCDPESP5",197,0)
 ;Ask user to change or disable an enabled CARC auto-decrement
"RTN","RCDPESP5",198,0)
CONFIRM(RCIDX) ;
"RTN","RCDPESP5",199,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",200,0)
 ;
"RTN","RCDPESP5",201,0)
 ; Confirm if the CARC code is correct
"RTN","RCDPESP5",202,0)
 I RCIDX=1 D
"RTN","RCDPESP5",203,0)
 . S DIR("?")="Either (Y)es to confirm that this is the correct code or (N)o to enter a different code."
"RTN","RCDPESP5",204,0)
 . S DIR("A")="ENABLE this CARC for Auto-Decrease of Medical Claims (Y/N)? "
"RTN","RCDPESP5",205,0)
 ;
"RTN","RCDPESP5",206,0)
 ; Confirm if the user wishes to Enable the changes
"RTN","RCDPESP5",207,0)
 I RCIDX=2 D
"RTN","RCDPESP5",208,0)
 . S DIR("?")="Either (Y)es to confirm changes or (N)o to exit without saving."
"RTN","RCDPESP5",209,0)
 . S DIR("A")="Save this CARC? (Y)es or (N)o: "
"RTN","RCDPESP5",210,0)
 ;
"RTN","RCDPESP5",211,0)
 ; Confirm if the user wishes to Disable the changes
"RTN","RCDPESP5",212,0)
 I RCIDX=3 D
"RTN","RCDPESP5",213,0)
 . S DIR("?")="Either (Y)es to confirm changes or (N)o to exit without saving."
"RTN","RCDPESP5",214,0)
 . S DIR("A")="Remove this CARC? (Y)es or (N)o: "
"RTN","RCDPESP5",215,0)
 ;
"RTN","RCDPESP5",216,0)
 ; Confirm if the CARC code is correct
"RTN","RCDPESP5",217,0)
 I RCIDX=4 D
"RTN","RCDPESP5",218,0)
 . S DIR("?")="Either (Y)es to confirm that this is the correct code or (N)o to enter a different code."
"RTN","RCDPESP5",219,0)
 . S DIR("A")="DISABLE this CARC for Auto-Decrease of Medical Claims (Y/N)? "
"RTN","RCDPESP5",220,0)
 ;
"RTN","RCDPESP5",221,0)
 S DIR(0)="YA"
"RTN","RCDPESP5",222,0)
 S DIR("S")="Y:Yes;N:No"
"RTN","RCDPESP5",223,0)
 D ^DIR
"RTN","RCDPESP5",224,0)
 K DIR
"RTN","RCDPESP5",225,0)
 I $G(DTOUT)!$G(DUOUT) S Y=-1
"RTN","RCDPESP5",226,0)
 I Y="0" S Y=-1
"RTN","RCDPESP5",227,0)
 Q Y
"RTN","RCDPESP5",228,0)
 ;
"RTN","RCDPESP5",229,0)
 ;Ask user the maximum amount to allow for auto-decrease
"RTN","RCDPESP5",230,0)
GETAMT() ;
"RTN","RCDPESP5",231,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",232,0)
 S DIR("?")="Enter the maximum amount the CARC can be auto-decreased between $1 and $1500"
"RTN","RCDPESP5",233,0)
 S DIR(0)="NA^1:1500:0"
"RTN","RCDPESP5",234,0)
 S DIR("A")="MAXIMUM DOLLAR AMOUNT TO AUTO-DECREASE (1-1500): "
"RTN","RCDPESP5",235,0)
 D ^DIR
"RTN","RCDPESP5",236,0)
 K DIR
"RTN","RCDPESP5",237,0)
 I $G(DUOUT) S Y=-1
"RTN","RCDPESP5",238,0)
 Q Y
"RTN","RCDPESP5",239,0)
 ;
"RTN","RCDPESP5",240,0)
 ;Get the reason for modification
"RTN","RCDPESP5",241,0)
GETREASN(RCCARC) ;
"RTN","RCDPESP5",242,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPESP5",243,0)
 S DIR("?")="Enter reason for enabling/disabling, or changing the Maximum Dollar decrease amount for CARC "_RCCARC_" (3-50 chars)."
"RTN","RCDPESP5",244,0)
 S DIR(0)="FA^3:50"
"RTN","RCDPESP5",245,0)
 S DIR("A")="COMMENT: "
"RTN","RCDPESP5",246,0)
 S DIR("PRE")="S X=$$TRIM^XLFSTR(X,""LR"")" ; comment required and should be significant
"RTN","RCDPESP5",247,0)
 D ^DIR
"RTN","RCDPESP5",248,0)
 K DIR
"RTN","RCDPESP5",249,0)
 I $G(DUOUT) S Y=-1
"RTN","RCDPESP5",250,0)
 Q Y
"RTN","RCDPESP5",251,0)
 ;
"RTN","RCDPESP5",252,0)
 ;Update the database and audit log
"RTN","RCDPESP5",253,0)
UPDDATA(RCCIEN,RCSTAT,RCAMT,RCRSN) ;
"RTN","RCDPESP5",254,0)
 N DA,DR,DIE,DTOUT,X,Y,DIC
"RTN","RCDPESP5",255,0)
 ; replaced //// with /// in following 5 lines - PRCA*4.5*321
"RTN","RCDPESP5",256,0)
 S DA=RCCIEN,(DIC,DIE)="^RCY(344.62,"
"RTN","RCDPESP5",257,0)
 S DR=".02///"_RCSTAT_";"
"RTN","RCDPESP5",258,0)
 S DR=DR_".05///"_$$DT^XLFDT_";"
"RTN","RCDPESP5",259,0)
 S DR=DR_".04///"_DUZ_";"
"RTN","RCDPESP5",260,0)
 S DR=DR_".06///"_RCAMT_";"
"RTN","RCDPESP5",261,0)
 S DR=DR_".07///"_RCRSN_";"
"RTN","RCDPESP5",262,0)
 ;
"RTN","RCDPESP5",263,0)
 L +^RCY(344.62,RCCIEN):10
"RTN","RCDPESP5",264,0)
 D ^DIE
"RTN","RCDPESP5",265,0)
 L -^RCY(344.62,RCCIEN)
"RTN","RCDPESP5",266,0)
 Q $D(Y)=0
"RTN","RCDPESP5",267,0)
 ;
"RTN","RCDPESP5",268,0)
 ;Add new entry to the table
"RTN","RCDPESP5",269,0)
ADDDATA(RCCARC,RCAMT,RCRSN) ;
"RTN","RCDPESP5",270,0)
 N RCENTRY,RCROOT,MSGROOT
"RTN","RCDPESP5",271,0)
 ;
"RTN","RCDPESP5",272,0)
 ; set up array
"RTN","RCDPESP5",273,0)
 S RCENTRY(344.62,"+1,",.01)=RCCARC        ;CARC Code
"RTN","RCDPESP5",274,0)
 S RCENTRY(344.62,"+1,",.02)=1             ;Enabled status
"RTN","RCDPESP5",275,0)
 S RCENTRY(344.62,"+1,",.03)=$$DT^XLFDT    ;Date added
"RTN","RCDPESP5",276,0)
 S RCENTRY(344.62,"+1,",.04)=DUZ           ;User
"RTN","RCDPESP5",277,0)
 S RCENTRY(344.62,"+1,",.06)=RCAMT         ;Max amount
"RTN","RCDPESP5",278,0)
 S RCENTRY(344.62,"+1,",.07)=RCRSN         ;Comment
"RTN","RCDPESP5",279,0)
 ;
"RTN","RCDPESP5",280,0)
 ;file entry
"RTN","RCDPESP5",281,0)
 D UPDATE^DIE(,"RCENTRY","RCROOT","MSGROOT")
"RTN","RCDPESP5",282,0)
 Q
"RTN","RCDPESP5",283,0)
AUDIT() ;
"RTN","RCDPESP5",284,0)
 ;
"RTN","RCDPESP5",285,0)
 N EMEDANS,EOLDMED,EOLDRX,ERXANS,MEDANS,OLDMED,OLDRX,RXANS ; PRCA*4.5*321
"RTN","RCDPESP5",286,0)
 ;
"RTN","RCDPESP5",287,0)
 ; Get existing answers for Medical and Pharmacy paper bills
"RTN","RCDPESP5",288,0)
 S OLDMED=$$GET1^DIQ(342,"1,",7.05,"I")
"RTN","RCDPESP5",289,0)
 S OLDRX=$$GET1^DIQ(342,"1,",7.06,"I")
"RTN","RCDPESP5",290,0)
 ;
"RTN","RCDPESP5",291,0)
 ; Get existing answers for Medical and Pharmacy EDI (electronic) bills ; PRCA*4.5*321
"RTN","RCDPESP5",292,0)
 S EOLDMED=$$GET1^DIQ(342,"1,",7.07,"I") ; PRCA*4.5*321
"RTN","RCDPESP5",293,0)
 S EOLDRX=$$GET1^DIQ(342,"1,",7.08,"I") ; PRCA*4.5*321
"RTN","RCDPESP5",294,0)
 ;
"RTN","RCDPESP5",295,0)
 ; Get Medical paper bills
"RTN","RCDPESP5",296,0)
 S MEDANS=$$GETAUDIT(1)
"RTN","RCDPESP5",297,0)
 Q:MEDANS=-1 1
"RTN","RCDPESP5",298,0)
 ; File Medical paper bills
"RTN","RCDPESP5",299,0)
 I MEDANS'=OLDMED D
"RTN","RCDPESP5",300,0)
 . N RCAUDVAL
"RTN","RCDPESP5",301,0)
 . D FILEANS(7.05,MEDANS)
"RTN","RCDPESP5",302,0)
 . ; FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP5",303,0)
 . S RCAUDVAL(1)="342^7.05^1^"_MEDANS_U_OLDMED_U_"Updating the Medical Auto-Audit of paper bills"
"RTN","RCDPESP5",304,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",305,0)
 ;
"RTN","RCDPESP5",306,0)
 ; Get Pharmacy paper bills
"RTN","RCDPESP5",307,0)
 S RXANS=$$GETAUDIT(2)
"RTN","RCDPESP5",308,0)
 Q:RXANS=-1 1
"RTN","RCDPESP5",309,0)
 ;
"RTN","RCDPESP5",310,0)
 ; File Pharmacy paper bills
"RTN","RCDPESP5",311,0)
 I RXANS'=OLDRX D
"RTN","RCDPESP5",312,0)
 . N RCAUDVAL
"RTN","RCDPESP5",313,0)
 . D FILEANS(7.06,RXANS)
"RTN","RCDPESP5",314,0)
 . S RCAUDVAL(1)="342^7.06^1^"_RXANS_U_OLDRX_U_"Updating the Pharmacy Auto-Audit of paper bills"
"RTN","RCDPESP5",315,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",316,0)
 ; 
"RTN","RCDPESP5",317,0)
 ; BEGIN PRCA*4.5*321
"RTN","RCDPESP5",318,0)
 ; Get Medical electronic bills
"RTN","RCDPESP5",319,0)
 S EMEDANS=$$GETAUDIT(3)
"RTN","RCDPESP5",320,0)
 Q:EMEDANS=-1 1
"RTN","RCDPESP5",321,0)
 ; File Medical electronic bills
"RTN","RCDPESP5",322,0)
 I EMEDANS'=EOLDMED D
"RTN","RCDPESP5",323,0)
 . N RCAUDVAL
"RTN","RCDPESP5",324,0)
 . D FILEANS(7.07,EMEDANS)
"RTN","RCDPESP5",325,0)
 . ; FILE NUMBER^FIELD NUMBER^IEN^NEW VALUE^OLD VALUE^COMMENT
"RTN","RCDPESP5",326,0)
 . S RCAUDVAL(1)="342^7.07^1^"_EMEDANS_U_EOLDMED_U_"Updating the Medical Auto-Audit of electronic bills"
"RTN","RCDPESP5",327,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",328,0)
 ;
"RTN","RCDPESP5",329,0)
 ; Get Pharmacy electronic bills
"RTN","RCDPESP5",330,0)
 S ERXANS=$$GETAUDIT(4)
"RTN","RCDPESP5",331,0)
 Q:ERXANS=-1 1
"RTN","RCDPESP5",332,0)
 ;
"RTN","RCDPESP5",333,0)
 ; File Pharmacy electronic bills
"RTN","RCDPESP5",334,0)
 I ERXANS'=EOLDRX D
"RTN","RCDPESP5",335,0)
 . N RCAUDVAL
"RTN","RCDPESP5",336,0)
 . D FILEANS(7.08,ERXANS)
"RTN","RCDPESP5",337,0)
 . S RCAUDVAL(1)="342^7.08^1^"_ERXANS_U_EOLDRX_U_"Updating the Pharmacy Auto-Audit of electronic bills"
"RTN","RCDPESP5",338,0)
 . D AUDIT^RCDPESP(.RCAUDVAL)
"RTN","RCDPESP5",339,0)
 ; END PRCA*4.5*321
"RTN","RCDPESP5",340,0)
 ;
"RTN","RCDPESP5",341,0)
 Q 0
"RTN","RCDPESP5",342,0)
 ;
"RTN","RCDPESP5",343,0)
 ;Retrieve the parameter for the bill type
"RTN","RCDPESP5",344,0)
GETAUDIT(FLAG) ;
"RTN","RCDPESP5",345,0)
 ; BEGIN PRCA*4.5*321
"RTN","RCDPESP5",346,0)
 ;FLAG - What audit type (1=Med Paper, 2=RX Paper, 3=Med EDI, 4=Rx EDI)
"RTN","RCDPESP5",347,0)
 Q:'$G(FLAG) -1
"RTN","RCDPESP5",348,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,FLDNO,RCANS,TYPL,TYPU,X,Y
"RTN","RCDPESP5",349,0)
 S TYPL=$S(FLAG>2:"electronic",1:"paper")
"RTN","RCDPESP5",350,0)
 S TYPU=$S(FLAG>2:"ELECTRONIC",1:"PAPER")
"RTN","RCDPESP5",351,0)
 S FLDNO=$S(FLAG=1:7.05,FLAG=2:7.06,FLAG=3:7.07,FLAG=4:7.08,1:0)
"RTN","RCDPESP5",352,0)
 Q:'FLDNO -1
"RTN","RCDPESP5",353,0)
 ;
"RTN","RCDPESP5",354,0)
 ; Prompt for Medical Auto-audit
"RTN","RCDPESP5",355,0)
 D:$G(FLAG)#2=1
"RTN","RCDPESP5",356,0)
 . S DIR("A")="ENABLE AUTO-AUDIT FOR MEDICAL "_TYPU_" BILLS (Y/N): "
"RTN","RCDPESP5",357,0)
 . S DIR("?",1)="Allow a site to automatically audit their Medical "_TYPL_" Bills"
"RTN","RCDPESP5",358,0)
 . S DIR("?",2)="during the AR Nightly Process."
"RTN","RCDPESP5",359,0)
 . S DIR("?",3)=" "
"RTN","RCDPESP5",360,0)
 . S RCANS=$$GET1^DIQ(342,"1,",FLDNO)
"RTN","RCDPESP5",361,0)
 ;
"RTN","RCDPESP5",362,0)
 ; Prompt for Pharmacy Auto-audit
"RTN","RCDPESP5",363,0)
 D:$G(FLAG)#2=0
"RTN","RCDPESP5",364,0)
 . S DIR("A")="ENABLE AUTO-AUDIT FOR PHARMACY "_TYPU_" BILLS (Y/N): "
"RTN","RCDPESP5",365,0)
 . S DIR("?",1)="Allow a site to automatically audit their Pharmacy "_TYPL_" Bills"
"RTN","RCDPESP5",366,0)
 . S DIR("?",2)="during the AR Nightly Process."
"RTN","RCDPESP5",367,0)
 . S DIR("?",3)=" "
"RTN","RCDPESP5",368,0)
 . S RCANS=$$GET1^DIQ(342,"1,",FLDNO)
"RTN","RCDPESP5",369,0)
 ; END PRCA*4.5*321
"RTN","RCDPESP5",370,0)
 ;
"RTN","RCDPESP5",371,0)
 S DIR(0)="YAO"
"RTN","RCDPESP5",372,0)
 S DIR("?")="Enter Yes or No to select automatic processing of "_TYPL_" bills." ; PRCA*4.5*321
"RTN","RCDPESP5",373,0)
 S DIR("B")=$S($G(RCANS)'="":RCANS,1:"No")
"RTN","RCDPESP5",374,0)
 D ^DIR K DIR
"RTN","RCDPESP5",375,0)
 I Y="" Q ""
"RTN","RCDPESP5",376,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPESP5",377,0)
 Q Y
"RTN","RCDPESP5",378,0)
 ;
"RTN","RCDPESP5",379,0)
 ;File the answer
"RTN","RCDPESP5",380,0)
FILEANS(FIELD,ANS) ;
"RTN","RCDPESP5",381,0)
 ;
"RTN","RCDPESP5",382,0)
 N DR,DIE,DA,DTOUT,DIDEL,X,Y
"RTN","RCDPESP5",383,0)
 ;
"RTN","RCDPESP5",384,0)
 ;Update Transaction
"RTN","RCDPESP5",385,0)
 S DR=FIELD_"///"_ANS           ;Original Confirmation #
"RTN","RCDPESP5",386,0)
 S DIE="^RC(342,"
"RTN","RCDPESP5",387,0)
 S DA=1
"RTN","RCDPESP5",388,0)
 D ^DIE
"RTN","RCDPESP5",389,0)
 ;
"RTN","RCDPESP5",390,0)
 Q
"RTN","RCDPESR1")
0^70^B51294022
"RTN","RCDPESR1",1,0)
RCDPESR1 ;ALB/TMP - Server interface to AR from Austin ;Jun 06, 2014@19:11:19
"RTN","RCDPESR1",2,0)
 ;;4.5;Accounts Receivable;**173,214,208,202,271,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPESR1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR1",4,0)
 ;
"RTN","RCDPESR1",5,0)
 ;Reference to $$RXBIL^IBNCPDPU supported by DBIA 4435
"RTN","RCDPESR1",6,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","RCDPESR1",7,0)
 ;
"RTN","RCDPESR1",8,0)
 Q
"RTN","RCDPESR1",9,0)
 ;
"RTN","RCDPESR1",10,0)
PERROR(RCERR,RCEMG,RCXMZ) ; Process Errors - Send bulletin to mail group
"RTN","RCDPESR1",11,0)
 ; RCERR = Error text array
"RTN","RCDPESR1",12,0)
 ; RCEMG = name of the mail group to which these errors should be sent
"RTN","RCDPESR1",13,0)
 ; RCXMZ = internal entry # of the mailman msg
"RTN","RCDPESR1",14,0)
 ; RCTYPE = msg type, if known
"RTN","RCDPESR1",15,0)
 N CT,XMDUZ,XMSUBJ,XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCXM,XMZ,XMERR,Z
"RTN","RCDPESR1",16,0)
 ;
"RTN","RCDPESR1",17,0)
 S CT=0
"RTN","RCDPESR1",18,0)
 ;
"RTN","RCDPESR1",19,0)
 I $G(RCEMG)="" S CT=CT+1,RCXM(CT)=$P($T(ERROR+2),";;",2),XMTO(.5)=""
"RTN","RCDPESR1",20,0)
 ;
"RTN","RCDPESR1",21,0)
 I $D(RCEMG) D
"RTN","RCDPESR1",22,0)
 . S:RCEMG="" RCEMG="RCDPE PAYMENTS EXCEPTIONS"
"RTN","RCDPESR1",23,0)
 . S:$E(RCEMG,1,2)'="G." RCEMG="G."_RCEMG
"RTN","RCDPESR1",24,0)
 . S XMTO("I:"_RCEMG)=""
"RTN","RCDPESR1",25,0)
 ;
"RTN","RCDPESR1",26,0)
 S Z=$O(XMTO("")) I Z=.5,'$O(XMTO(.5)) S XMTO("I:G.RCDPE PAYMENTS EXCEPTIONS")=""
"RTN","RCDPESR1",27,0)
 D EMFORM(CT,.RCERR,.RCXM,RCXMZ)
"RTN","RCDPESR1",28,0)
 ;
"RTN","RCDPESR1",29,0)
 S XMDUZ=""
"RTN","RCDPESR1",30,0)
 S XMSUBJ="EDI LBOX SERVER OPTION ERROR",XMBODY="RCXM"
"RTN","RCDPESR1",31,0)
 D
"RTN","RCDPESR1",32,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR1",33,0)
 . D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR1",34,0)
 K ^TMP("RCRAW",$J)
"RTN","RCDPESR1",35,0)
 Q
"RTN","RCDPESR1",36,0)
 ;
"RTN","RCDPESR1",37,0)
EMFORM(CT,RCERR,RCXM,RCXMZ) ; Format error msgs
"RTN","RCDPESR1",38,0)
 ; INPUT:
"RTN","RCDPESR1",39,0)
 ;   CT = # of lines previously populated in error msg
"RTN","RCDPESR1",40,0)
 ;   RCERR = array of errors
"RTN","RCDPESR1",41,0)
 ;   RCXMZ = internal entry # of mailman msg
"RTN","RCDPESR1",42,0)
 ;
"RTN","RCDPESR1",43,0)
 ; OUTPUT:
"RTN","RCDPESR1",44,0)
 ;   RCXM = array containing the complete error msg text
"RTN","RCDPESR1",45,0)
 ;
"RTN","RCDPESR1",46,0)
 N TTYPE,TDATE,TTIME,Z
"RTN","RCDPESR1",47,0)
 ;
"RTN","RCDPESR1",48,0)
 S TDATE=$G(^TMP("RCERR",$J,"DATE")),TTIME=$P(TDATE,".",2)_"000000",TDATE=$$FMTE^XLFDT($P(TDATE,"."),"2D")
"RTN","RCDPESR1",49,0)
 S TTYPE=$G(^TMP("RCMSG",$J))
"RTN","RCDPESR1",50,0)
 ;
"RTN","RCDPESR1",51,0)
 S CT=CT+1
"RTN","RCDPESR1",52,0)
 S RCXM(CT)="** AN EXCEPTION HAS BEEN DETECTED FOR AN EDI LOCKBOX RETURN MESSAGE **",CT=CT+1,RCXM(CT)=" "
"RTN","RCDPESR1",53,0)
 S CT=CT+1
"RTN","RCDPESR1",54,0)
 S RCXM(CT)="             Return Message Code: "_$S(TTYPE="":$S($G(^TMP("RCERR",$J,"TYPE"))'="":^("TYPE"),1:"Cannot be determined"),1:TTYPE)
"RTN","RCDPESR1",55,0)
 ;
"RTN","RCDPESR1",56,0)
 S CT=CT+2
"RTN","RCDPESR1",57,0)
 S RCXM(CT-1)=" ",RCXM(CT)=$J("",13)_"Return Message Date: "_TDATE_"    Message Time: "_$E(TTIME,1,2)_":"_$E(TTIME,3,4)_":"_$E(TTIME,5,6),CT=CT+1
"RTN","RCDPESR1",58,0)
 ;
"RTN","RCDPESR1",59,0)
 S CT=CT+2,RCXM(CT-1)=" ",RCXM(CT)=$J("",15)_"Mailman Message #: "_$G(RCXMZ)
"RTN","RCDPESR1",60,0)
 ;
"RTN","RCDPESR1",61,0)
 I $G(RCERR)'="",RCERR?1A.E S CT=CT+2,RCXM(CT-1)=" ",RCXM(CT)=RCERR
"RTN","RCDPESR1",62,0)
 I $G(^TMP("RCERR",$J,"TEXT"))'="" S CT=CT+2,RCXM(CT)=^("TEXT"),RCXM(CT-1)=" "
"RTN","RCDPESR1",63,0)
 ;
"RTN","RCDPESR1",64,0)
 S Z="" F  S Z=$O(RCERR(Z)) Q:Z=""  S:$G(^TMP("RCERR",$J,"TEXT"))="" CT=CT+1,RCXM(CT)=" " I $G(RCERR(Z))'="",RCERR(Z)'=" " S CT=CT+1,RCXM(CT)=RCERR(Z)
"RTN","RCDPESR1",65,0)
 S Z=0 F  S Z=$O(^TMP("RCERR",$J,"MSG",Z)) Q:'Z  S CT=CT+1,RCXM(CT)=^(Z)
"RTN","RCDPESR1",66,0)
 ;
"RTN","RCDPESR1",67,0)
 Q
"RTN","RCDPESR1",68,0)
 ;
"RTN","RCDPESR1",69,0)
EXTERR(RCERR,RCE) ; Put error into error array
"RTN","RCDPESR1",70,0)
 ; Returns: (must be passed by reference)
"RTN","RCDPESR1",71,0)
 ;   RCERR = specific error encountered, returned as 4
"RTN","RCDPESR1",72,0)
 ;   RCE = error text from the word processing field update error global
"RTN","RCDPESR1",73,0)
 N RCZ,Q
"RTN","RCDPESR1",74,0)
 S RCE="",RCERR=4 ; error reported as 'record was partially stored'
"RTN","RCDPESR1",75,0)
 S RCZ=0 F  S RCZ=$O(RCE("DIERR",RCZ)) Q:'RCZ  S Q=$G(RCE("DIERR",RCZ,"TEXT",1)) I $L(Q),$L(Q)+$L(RCE)<99 S RCE=RCE_Q_";;"
"RTN","RCDPESR1",76,0)
 Q
"RTN","RCDPESR1",77,0)
 ;
"RTN","RCDPESR1",78,0)
ERRUPD(RCGBL,RCD,RCTYPE,RCERR) ; Set up global array to hold msg data
"RTN","RCDPESR1",79,0)
 ; RCGBL = name of the global or array where msg data is found
"RTN","RCDPESR1",80,0)
 ; RCD = array containing mail header data for the msg
"RTN","RCDPESR1",81,0)
 ; RCTYPE = type of msg (835ERA/835XFR/etc)
"RTN","RCDPESR1",82,0)
 ; RCERR = error array - text or reference to error tables below
"RTN","RCDPESR1",83,0)
 ;
"RTN","RCDPESR1",84,0)
 ; Returns ^TMP("RCERR",$J,"MSG" array with formatted error text
"RTN","RCDPESR1",85,0)
 ;
"RTN","RCDPESR1",86,0)
 N Z,Z0,Z1,Z2,CT,RCE
"RTN","RCDPESR1",87,0)
 ;
"RTN","RCDPESR1",88,0)
 Q:$G(RCERR)<0
"RTN","RCDPESR1",89,0)
 K ^TMP("RCERR",$J)
"RTN","RCDPESR1",90,0)
 S CT=0
"RTN","RCDPESR1",91,0)
 ;
"RTN","RCDPESR1",92,0)
 S ^TMP("RCERR",$J,"DATE")=$G(RCD("DATE"))
"RTN","RCDPESR1",93,0)
 S ^TMP("RCERR",$J,"TYPE")=$G(RCTYPE)
"RTN","RCDPESR1",94,0)
 S ^TMP("RCERR",$J,"SUBJ")=$G(RCD("SUBJ"))
"RTN","RCDPESR1",95,0)
 ;
"RTN","RCDPESR1",96,0)
 I $G(RCERR)>0,RCERR<20 D
"RTN","RCDPESR1",97,0)
 . S Z="ERROR2+"_RCERR
"RTN","RCDPESR1",98,0)
 . S RCE=$P($T(@Z),";;",2)
"RTN","RCDPESR1",99,0)
 . I RCE'="" S ^TMP("RCERR",$J,"TEXT")=RCE
"RTN","RCDPESR1",100,0)
 ;
"RTN","RCDPESR1",101,0)
 S Z="" F  S Z=$O(RCERR(Z)) Q:Z=""  S Z0="" F  S Z0=$O(RCERR(Z,Z0)) Q:Z0=""  S RCE=$G(RCERR(Z,Z0)) D
"RTN","RCDPESR1",102,0)
 . I $L(RCE) S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$S(RCE:$P($T(ERROR+RCE),";;",2),1:RCE)
"RTN","RCDPESR1",103,0)
 . S RCTYPE=$P($G(@RCGBL@(0)),U)
"RTN","RCDPESR1",104,0)
 . S:$G(^TMP("RCERR",$J,"TYPE"))="" ^("TYPE")=RCTYPE
"RTN","RCDPESR1",105,0)
 . S Z1=""
"RTN","RCDPESR1",106,0)
 . F  S Z1=$O(@RCGBL@(1,"D",Z1)) Q:Z1=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(@RCGBL@(1,"D",Z1))
"RTN","RCDPESR1",107,0)
 ;
"RTN","RCDPESR1",108,0)
 I $D(@RCGBL@(2,"D")) D
"RTN","RCDPESR1",109,0)
 . S CT=CT+2,^TMP("RCERR",$J,"MSG",CT-1)=" ",^TMP("RCERR",$J,"MSG",CT)="**** RAW MESSAGE DATA ****:"
"RTN","RCDPESR1",110,0)
 . I $G(^TMP("RCMSGH",$J,0))'="" S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=^TMP("RCMSGH",$J,0)
"RTN","RCDPESR1",111,0)
 . S Z2="" F  S Z2=$O(@RCGBL@(2,"D",Z2)) Q:Z2=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(@RCGBL@(2,"D",Z2))
"RTN","RCDPESR1",112,0)
 E  D
"RTN","RCDPESR1",113,0)
 . Q:'$D(^TMP("RCRAW",$J))
"RTN","RCDPESR1",114,0)
 . S CT=CT+2,^TMP("RCERR",$J,"MSG",CT-1)=" ",^TMP("RCERR",$J,"MSG",CT)="**** RAW MESSAGE DATA ****:"
"RTN","RCDPESR1",115,0)
 . I $G(^TMP("RCMSGH",$J,0))'="" S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=^TMP("RCMSGH",$J,0)
"RTN","RCDPESR1",116,0)
 . S Z2="" F  S Z2=$O(^TMP("RCRAW",$J,Z2)) Q:Z2=""  S CT=CT+1,^TMP("RCERR",$J,"MSG",CT)=$G(^TMP("RCRAW",$J,Z2))
"RTN","RCDPESR1",117,0)
 ;
"RTN","RCDPESR1",118,0)
 Q
"RTN","RCDPESR1",119,0)
 ;
"RTN","RCDPESR1",120,0)
DKILL(RCXMZ) ; Delete server mail msg from postmaster mailbox
"RTN","RCDPESR1",121,0)
 ; RCXMZ = ien of mailman msg
"RTN","RCDPESR1",122,0)
 ;
"RTN","RCDPESR1",123,0)
 D ZAPSERV^XMXAPI("S.RCDPE EDI LOCKBOX SERVER",RCXMZ)
"RTN","RCDPESR1",124,0)
 Q
"RTN","RCDPESR1",125,0)
 ;
"RTN","RCDPESR1",126,0)
TEMPDEL(DA) ; Delete msg from temporary msg file
"RTN","RCDPESR1",127,0)
 ; DA = ien of the entry in file 344.5
"RTN","RCDPESR1",128,0)
 ;
"RTN","RCDPESR1",129,0)
 N DIK,Y,X
"RTN","RCDPESR1",130,0)
 S DIK="^RCY(344.5," D ^DIK
"RTN","RCDPESR1",131,0)
 L -^RCY(344.5,DA,0)
"RTN","RCDPESR1",132,0)
 Q
"RTN","RCDPESR1",133,0)
 ;
"RTN","RCDPESR1",134,0)
RESTMSG(RCD,RCARRAY,XMZ) ; Read rest of msg, store in array
"RTN","RCDPESR1",135,0)
 ; RCD = last line # already in the msg
"RTN","RCDPESR1",136,0)
 ; RCARRAY = name of the array to store the data in
"RTN","RCDPESR1",137,0)
 ; XMZ = ien of the mailman msg
"RTN","RCDPESR1",138,0)
 ;
"RTN","RCDPESR1",139,0)
 F  X XMREC Q:XMER<0  S RCD=RCD+1,@RCARRAY@(RCD)=XMRG
"RTN","RCDPESR1",140,0)
 Q
"RTN","RCDPESR1",141,0)
 ;
"RTN","RCDPESR1",142,0)
TAXERR(RCTYPE,RCINS,RCTID,RCCHG) ; Send a bulletin for a bad tax id
"RTN","RCDPESR1",143,0)
 ; RCTYPE = "ERA" for an ERA record,  "EFT" for an EFT record
"RTN","RCDPESR1",144,0)
 ; RCINS = name and id to identify the ins co
"RTN","RCDPESR1",145,0)
 ; RCTID = tax id sent in error
"RTN","RCDPESR1",146,0)
 ; RCCHG = code describing how correction was made
"RTN","RCDPESR1",147,0)
 ;         'E'=EPHRA, 'C'=Changed by looking at claim #'s
"RTN","RCDPESR1",148,0)
 ;
"RTN","RCDPESR1",149,0)
 N XMBODY,XMB,XMINSTR,XMTYPE,XMFULL,XMTO,RCDXM,XMZ,XMERR,RCCT,RCDXM,RCCT
"RTN","RCDPESR1",150,0)
 S RCCT=0
"RTN","RCDPESR1",151,0)
 S RCCT=RCCT+1,RCDXM(RCCT)="An "_RCTYPE_" was received at your site "_$$FMTE^XLFDT($$NOW^XLFDT(),2)_" with an invalid tax id.",RCCT=RCCT+1,RCDXM(RCCT)=" From: "_RCINS
"RTN","RCDPESR1",152,0)
 S RCCT=RCCT+1,RCDXM(RCCT)=" The tax id sent was: "_RCTID_" and it was corrected by: "
"RTN","RCDPESR1",153,0)
 S RCCT=RCCT+1,RCDXM(RCCT)=" "_$S(RCCHG="E":"EPHRA",1:"Extracting it based on bill numbers in the ERA")
"RTN","RCDPESR1",154,0)
 S RCCT=RCCT+2,RCDXM(RCCT-1)=" ",RCDXM(RCCT)="If your site continues to receive these bulletins for this payer,",RCCT=RCCT+1,RCDXM(RCCT)="contact the payer and request they correct their tax id for your site"
"RTN","RCDPESR1",155,0)
 ;
"RTN","RCDPESR1",156,0)
 S XMTO("I:G.RCDPE PAYMENTS")="",XMBODY="RCDXM"
"RTN","RCDPESR1",157,0)
 D
"RTN","RCDPESR1",158,0)
 . N DUZ S DUZ=.5,DUZ(0)="@"
"RTN","RCDPESR1",159,0)
 . D SENDMSG^XMXAPI(.5,"EDI LBOX ERRONEOUS TAX ID ON "_RCTYPE,XMBODY,.XMTO,,.XMZ)
"RTN","RCDPESR1",160,0)
 Q
"RTN","RCDPESR1",161,0)
 ;
"RTN","RCDPESR1",162,0)
BILL(X,RCDT,RCIB) ; Returns ien of bill in X or -1 if not valid
"RTN","RCDPESR1",163,0)
 ; RCDT = the Statement from date (used for Rx bills)
"RTN","RCDPESR1",164,0)
 ; and, if passed by reference, RCIB = 1 if an insurance bill
"RTN","RCDPESR1",165,0)
 N DIC,Y,Z ; Z added PRCA*4.5*321
"RTN","RCDPESR1",166,0)
 S RCIB=0
"RTN","RCDPESR1",167,0)
 S X=$TR(X," "),(X,Z)=$TR(X,"O","0") ; Remove spaces, change ohs to zeroes - Z added PRCA*4.5*321
"RTN","RCDPESR1",168,0)
 I X'["-",$E(X,1,3)?3N,+$E(X,1,3),$L(X)>7,$L(X)<12 S X=$E(X,1,3)_"-"_$E(X,4,$L(X))
"RTN","RCDPESR1",169,0)
 S DIC="^PRCA(430,",DIC(0)="MZ" D ^DIC
"RTN","RCDPESR1",170,0)
 ; Checks if the ECME# is valid
"RTN","RCDPESR1",171,0)
 I Y<0,$$VALECME^BPSUTIL2(Z) D  ; Uses Z - PRCA*4.5*321
"RTN","RCDPESR1",172,0)
 . S ARRAY("ECME")=Z,ARRAY("FILLDT")=$G(RCDT) ; Uses Z - PRCA*4.5*321
"RTN","RCDPESR1",173,0)
 . S Y=$$RXBIL^IBNCPDPU(.ARRAY)     ; DBIA 4435
"RTN","RCDPESR1",174,0)
 . I Y>0 S Y(0)=$G(^PRCA(430,+Y,0))
"RTN","RCDPESR1",175,0)
 I Y>0 S RCIB=($P($G(^RCD(340,+$P(Y(0),U,9),0)),U)["DIC(36,")
"RTN","RCDPESR1",176,0)
 Q +Y
"RTN","RCDPESR1",177,0)
 ;
"RTN","RCDPESR1",178,0)
FMDT(X) ; Format date (X) in YYYYMMDD to Fileman format
"RTN","RCDPESR1",179,0)
 I $L(X)=8 D
"RTN","RCDPESR1",180,0)
 . S X=$E(X,1,4)-1700_$E(X,5,8)
"RTN","RCDPESR1",181,0)
 Q X
"RTN","RCDPESR1",182,0)
 ;
"RTN","RCDPESR1",183,0)
ERROR ; Top level error msgs for msgs
"RTN","RCDPESR1",184,0)
 ;;Invalid mailgroup designated for EDI Lockbox errors
"RTN","RCDPESR1",185,0)
 ;;Message header error
"RTN","RCDPESR1",186,0)
 ;
"RTN","RCDPESR1",187,0)
ERROR2 ; Error condition msgs for msgs
"RTN","RCDPESR1",188,0)
 ;;Message code is invalid for EDI Lockbox.
"RTN","RCDPESR1",189,0)
 ;;This message has no ending $ or 99 record.
"RTN","RCDPESR1",190,0)
 ;;Message file problem - no message stored.
"RTN","RCDPESR1",191,0)
 ;;Message file problem - message partially stored.
"RTN","RCDPESR1",192,0)
 ;;No valid claims for the site found on the ERA.
"RTN","RCDPESR1",193,0)
 ;
"RTN","RCDPESR2")
0^46^B91233703
"RTN","RCDPESR2",1,0)
RCDPESR2 ;ALB/TMK/DWA - Server auto-upd - EDI Lockbox ;Jun 06, 2014@19:11:19
"RTN","RCDPESR2",2,0)
 ;;4.5;Accounts Receivable;**173,216,208,230,252,264,269,271,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPESR2",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR2",4,0)
 ; IA 4042 (IBCEOB)
"RTN","RCDPESR2",5,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","RCDPESR2",6,0)
 ;
"RTN","RCDPESR2",7,0)
TASKERA(RCTDA) ; Task to upd ERA
"RTN","RCDPESR2",8,0)
 ; RCTDA = ien 344.5
"RTN","RCDPESR2",9,0)
 N ZTDTH,ZTUCI,ZTSAVE,ZTIO,ZTDESC,ZTRTN,ZTSK,DIE,DR,DA
"RTN","RCDPESR2",10,0)
 S (ZTSAVE("DT"),ZTSAVE("U"),ZTSAVE("DUZ"))="",ZTSAVE("ZTREQ")="@",ZTRTN="NEWERA^RCDPESR2("_RCTDA_",0)",ZTDTH=$H,ZTIO=""
"RTN","RCDPESR2",11,0)
 D ^%ZTLOAD
"RTN","RCDPESR2",12,0)
 Q
"RTN","RCDPESR2",13,0)
 ;
"RTN","RCDPESR2",14,0)
NEWERA(RCTDA,RCREFILE) ;Tasked
"RTN","RCDPESR2",15,0)
 ; Add new EOB's to IB & ERA tot rec to AR
"RTN","RCDPESR2",16,0)
 ; RCTDA = ien 344.5
"RTN","RCDPESR2",17,0)
 ; RCREFILE = 1: re-filing rec via exc proc
"RTN","RCDPESR2",18,0)
 N RCDUPERR,RCPAYER,RCRTOT,RCE,RCEC,RCERR,RCR1,RCADJ,DIE,DR,DA,Z,Q
"RTN","RCDPESR2",19,0)
 S ZTREQ="@"
"RTN","RCDPESR2",20,0)
 K ^TMP($J,"RCDPERA")
"RTN","RCDPESR2",21,0)
 L +^RCY(344.5,RCTDA):5
"RTN","RCDPESR2",22,0)
 I $D(ZTQUEUED) S DIE="^RCY(344.5,",DA=RCTDA,DR=".05////"_ZTSK_";.04////1" D ^DIE
"RTN","RCDPESR2",23,0)
 I $P($G(^RCY(344.5,RCTDA,0)),U,5),'$G(RCREFILE) S DIE="^RCY(344.5,",DA=RCTDA,DR=".1////4;.08///1" D ^DIE
"RTN","RCDPESR2",24,0)
 S RCR1=$P($G(^RCY(344.5,RCTDA,0)),U,7),RCPAYER=$P($G(^RCY(344.5,RCTDA,3)),U)
"RTN","RCDPESR2",25,0)
 S RCRTOT=$S(RCR1:RCR1,1:$$ERATOT^RCDPESR6(RCTDA,.RCERR)) ; ERA rec
"RTN","RCDPESR2",26,0)
 S RCDUPERR=$S($G(RCERR)="DUP"!($G(RCERR(1))=-2):$G(RCERR(1)),1:0) K RCERR(1)
"RTN","RCDPESR2",27,0)
 I RCRTOT,'RCR1 S DIE="^RCY(344.5,",DR=".07////"_RCRTOT,DA=RCTDA D ^DIE
"RTN","RCDPESR2",28,0)
 D:RCDUPERR'=-2 UPDEOB(RCTDA,5,$S('$G(RCREFILE):RCDUPERR,1:-1)) ; Add EOB det to IB
"RTN","RCDPESR2",29,0)
 I RCRTOT D UPDCON^RCDPESR6(RCRTOT),UPDADJ^RCDPESR6(RCRTOT),UPD3444^RCDPESR6(.RCRTOT) ; Bills added 344.41
"RTN","RCDPESR2",30,0)
 I RCRTOT,RCTDA S DIE="^RCY(344.5,",DR=".08////0;.1///@",DA=RCTDA D ^DIE
"RTN","RCDPESR2",31,0)
 I 'RCRTOT D  G QNEW
"RTN","RCDPESR2",32,0)
 .I RCDUPERR Q:'RCTDA  D  S RCTDA="" Q
"RTN","RCDPESR2",33,0)
 ..I RCDUPERR=-2 D BULLERA^RCDPESR0("D",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX - DUPLICATE ERA NOT FILED "_$E(RCPAYER,1,20),.RCERR,0)
"RTN","RCDPESR2",34,0)
 ..D TEMPDEL^RCDPESR1(RCTDA)
"RTN","RCDPESR2",35,0)
 .S RCE(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" An error occurred while storing ERA data.",RCE(2)="No totals data was stored for this ERA record"_$S('$G(RCREFILE):" and an",1:" on this re-file attempt.")
"RTN","RCDPESR2",36,0)
 .S RCE(3)=$S('$G(RCREFILE):"ERA transmission exception was created.",1:"")
"RTN","RCDPESR2",37,0)
 .D WP^DIE(344.5,RCTDA_",",5,"A","RCE")
"RTN","RCDPESR2",38,0)
 .S DIE="^RCY(344.5,",DA=RCTDA,DR=".07///@;.08////1;.1////1" D ^DIE
"RTN","RCDPESR2",39,0)
 .K RCERR
"RTN","RCDPESR2",40,0)
 .S RCERR(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" The ERA data could not be stored. The AR receipt",RCERR(2)=" for this data must be created/processed manually for the bills included"
"RTN","RCDPESR2",41,0)
 .S RCERR(3)=" in this ERA."_$S('$G(RCREFILE):"",1:"  This error occurred during a refile attempt."),RCERR(4)=" "
"RTN","RCDPESR2",42,0)
 .D BULLERA^RCDPESR0("DF",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX - TOTALS FILE EXCEPTION "_$E(RCPAYER,1,20),.RCERR,0)
"RTN","RCDPESR2",43,0)
 .K RCERR
"RTN","RCDPESR2",44,0)
 ;-----
"RTN","RCDPESR2",45,0)
 ; PRCA*4.5*298 - MailMan message disabled, logic retained - 14 Feb 2014
"RTN","RCDPESR2",46,0)
 ;I $$ADJ^RCDPEU(RCRTOT,.RCADJ) D  ;Bulletin adjs
"RTN","RCDPESR2",47,0)
 ;.S RCEC=$$ADJERR^RCDPESR3(.RCERR)
"RTN","RCDPESR2",48,0)
 ;.I RCADJ'=2 S RCEC=RCEC+1,RCERR(RCEC)=" THERE ARE ERA LEVEL ADJUSTMENT(S)",RCEC=RCEC+1,RCERR(RCEC)=" "
"RTN","RCDPESR2",49,0)
 ;.I RCADJ'=1 S RCEC=RCEC+1,RCERR(RCEC)=" THE FOLLOWING BILL(S) HAVE RETRACTIONS:" D
"RTN","RCDPESR2",50,0)
 ;..S (Q,Z)=0 S Z=0 F  S Z=$O(RCADJ(RCRTOT,Z)) Q:'Z  S:'Q RCEC=RCEC+1,RCERR(RCEC)="  " S Q=Q+1,RCERR(RCEC)=RCERR(RCEC)_"  "_RCADJ(RCRTOT,Z) S:Q=4 Q=0
"RTN","RCDPESR2",51,0)
 ;..S RCEC=RCEC+1,RCERR(RCEC)=" "
"RTN","RCDPESR2",52,0)
 ;.D BULLERA^RCDPESR0("D",RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U,11),"EDI LBOX - ERA HAS ADJ/TAKEBACKS "_$E(RCPAYER,1,20),.RCERR,0)
"RTN","RCDPESR2",53,0)
 ;-----
"RTN","RCDPESR2",54,0)
 ;
"RTN","RCDPESR2",55,0)
QNEW I RCTDA,'$P($G(^RCY(344.5,RCTDA,0)),U,8) D TEMPDEL^RCDPESR1(RCTDA) S RCTDA=""
"RTN","RCDPESR2",56,0)
 I RCTDA,$P($G(^RCY(344.5,RCTDA,0)),U)'="" S DIE="^RCY(344.5,",DR=".04////0;.05///@"_$S('$G(RCR1)&$G(RCRTOT):";.07////"_RCRTOT,1:""),DA=RCTDA D ^DIE
"RTN","RCDPESR2",57,0)
 K ^TMP($J,"RCDPERA")
"RTN","RCDPESR2",58,0)
 I RCTDA L -^RCY(344.5,RCTDA)
"RTN","RCDPESR2",59,0)
 Q
"RTN","RCDPESR2",60,0)
 ;
"RTN","RCDPESR2",61,0)
UPDEOB(RCTDA,RCFILE,DUP) ;Upd 361.1 from ERA msg in 344.5 or .4
"RTN","RCDPESR2",62,0)
 ;RCTDA = ien ERA msg in 344.5 or ;subfile in 344.4
"RTN","RCDPESR2",63,0)
 ;RCFILE = 4 file 344.4, 5 if 344.5
"RTN","RCDPESR2",64,0)
 ;DUP = msg # if dup msg, but not same # or -1 if same msg #
"RTN","RCDPESR2",65,0)
 ;Returned for each bill in ERA:
"RTN","RCDPESR2",66,0)
 ;^TMP($J,"RCDPEOB",n)=Bill ien^AR bill#^SrvDt^ECME#
"RTN","RCDPESR2",67,0)
 ;^TMP($J,"RCDPEOB",n,"EOB")=EOB ien^amt pd^ins co ptr^rev flg^EEOB pn^amtbld^^^^BPNPI^RNPI^ETQual^LN^FN
"RTN","RCDPESR2",68,0)
 ;^TMP($J,"RCDPEOB","ADJ",x)=adj rec ('02')
"RTN","RCDPESR2",69,0)
 ;Also:
"RTN","RCDPESR2",70,0)
 ;^TMP($J,"RCDPEOB","HDR")=hdr rec from txmn
"RTN","RCDPESR2",71,0)
 ;^TMP($J,"RCDPEOB","CONTACT")=ERA contact rec ('01')
"RTN","RCDPESR2",72,0)
 ;
"RTN","RCDPESR2",73,0)
 ;N RCGBL,RC,RC0,RCCT,RCCT1,RCEOB,RCBILL,RCDPBNPI,RCMNUM,RCIFN,RCIB,RCERR,RCSTAR,RCET,RCX,RCXMG,Z,Q,DA,DR,DIE
"RTN","RCDPESR2",74,0)
 ;N RCPAYER,RCFILED,RCEOBD,RCNOUPD,REFORM,RCSD,RCERR1,C5,ECMENUM
"RTN","RCDPESR2",75,0)
 ; PRCA*4.5*321 - re-ordered newed fields and added RCSTART
"RTN","RCDPESR2",76,0)
 N C5,DA,DIE,DR,ECMENUM,N,Q,RC,RC0,RCBILL,RCCT,RCCT1,RCDPBNPI,RCEOB,RCEOBD,RCERR
"RTN","RCDPESR2",77,0)
 N RCERR1,RCET,RCFILED,RCGBL,RCIB,RCIFN,RCMNUM,RCNOUPD,RCPAYER,RCSD,RCSTAR,RCSTART
"RTN","RCDPESR2",78,0)
 N RCX,RCXMG,REFORM,X,Y,Z
"RTN","RCDPESR2",79,0)
 K ^TMP($J,"RCDP-EOB"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPESR2",80,0)
 ;
"RTN","RCDPESR2",81,0)
 S RCPAYER="",RCFILED=1,RCNOUPD=0
"RTN","RCDPESR2",82,0)
 I RCFILE=5 D
"RTN","RCDPESR2",83,0)
 .S RCGBL=$NA(^RCY(344.5,RCTDA,2))
"RTN","RCDPESR2",84,0)
 .S RCMNUM=+$G(^RCY(344.5,RCTDA,0)),RCXMG=$P($G(^(0)),U,11)
"RTN","RCDPESR2",85,0)
 .I $G(DUP) S RCNOUPD=$S(DUP>0:+DUP,1:RCXMG)
"RTN","RCDPESR2",86,0)
 .S ^TMP($J,"RCDPEOB","HDR")=$G(^RCY(344.5,RCTDA,2,1,0))
"RTN","RCDPESR2",87,0)
 .I $P(^TMP($J,"RCDPEOB","HDR"),U)["XFR",'$P($G(^RCY(344.5,RCTDA,0)),U,14) D
"RTN","RCDPESR2",88,0)
 ..D SENDACK^RCDPESR5(RCTDA,1)
"RTN","RCDPESR2",89,0)
 ..S DR=".14////1",DIE="^RCY(344.5,",DA=RCTDA D ^DIE
"RTN","RCDPESR2",90,0)
 ;
"RTN","RCDPESR2",91,0)
 I RCFILE=4 D
"RTN","RCDPESR2",92,0)
 .S RCGBL=$NA(^RCY(344.4,+RCTDA,1,+$P(RCTDA,";",2),1))
"RTN","RCDPESR2",93,0)
 .S RCMNUM=$P($G(^RCY(344.4,+RCTDA,0)),U,12),RCXMG=$P($G(^(0)),U,12)
"RTN","RCDPESR2",94,0)
 .S ^TMP($J,"RCDPEOB","HDR")=$G(^RCY(344.4,+RCTDA,1,+$P(RCTDA,";",2),1,1,0))
"RTN","RCDPESR2",95,0)
 ;
"RTN","RCDPESR2",96,0)
 S RCPAYER=$P($G(^TMP($J,"RCDPEOB","HDR")),U,6)
"RTN","RCDPESR2",97,0)
 S RCDPBNPI=$P($G(^TMP($J,"RCDPEOB","HDR")),U,18)
"RTN","RCDPESR2",98,0)
 ;
"RTN","RCDPESR2",99,0)
 ;srv dates
"RTN","RCDPESR2",100,0)
 S RCSD=$NA(^TMP($J,"RCSRVDT")) K @RCSD
"RTN","RCDPESR2",101,0)
 S RCSTART=0 ; PRCA*4.5*321
"RTN","RCDPESR2",102,0)
 N CP5 S CP5="",RC=1,C5=0 ;retrofit 264 into 269
"RTN","RCDPESR2",103,0)
 F  S RC=$O(@RCGBL@(RC)) Q:'RC  S RC0=$G(^(RC,0)) D
"RTN","RCDPESR2",104,0)
 .I RC0<5 Q
"RTN","RCDPESR2",105,0)
 .;Statement Start Date - 05 Record is mandatory
"RTN","RCDPESR2",106,0)
 .I +RC0=5 S RCSTART=+$P(RC0,U,9) ; PRCA*4.5*321
"RTN","RCDPESR2",107,0)
 .I +RC0=5 S C5=RC,CP5=$P(RC0,U,2) Q  ;retrofit 264 into 269
"RTN","RCDPESR2",108,0)
 .; service date for possible ECME# matching
"RTN","RCDPESR2",109,0)
 .; PRCA*4.3*321 BEGIN
"RTN","RCDPESR2",110,0)
 .I +RC0=40,$$VALECME^BPSUTIL2(CP5),C5,'$D(@RCSD@(C5)) D
"RTN","RCDPESR2",111,0)
 . I $P(RC0,U,19) S @RCSD@(C5)=+$P(RC0,U,19) Q
"RTN","RCDPESR2",112,0)
 . ; If service date not present use statement start date instead
"RTN","RCDPESR2",113,0)
 . S:RCSTART @RCSD@(C5)=RCSTART
"RTN","RCDPESR2",114,0)
 ; PRCA*4.5*321 END
"RTN","RCDPESR2",115,0)
 ;
"RTN","RCDPESR2",116,0)
 S RC=1,(RCCT,RCCT1,RCX,REFORM)=0,RCBILL=""
"RTN","RCDPESR2",117,0)
 S RCERR1=$NA(^TMP("RCERR1",$J)) K @RCERR1
"RTN","RCDPESR2",118,0)
 F  S RC=$O(@RCGBL@(RC)) Q:'RC  S RC0=$G(^(RC,0)) D
"RTN","RCDPESR2",119,0)
 .I RCFILE=5,+RC0=1 D  Q
"RTN","RCDPESR2",120,0)
 ..S ^TMP($J,"RCDPEOB","CONTACT")=RC0
"RTN","RCDPESR2",121,0)
 .;
"RTN","RCDPESR2",122,0)
 .I RCFILE=5,+RC0=2 D  Q
"RTN","RCDPESR2",123,0)
 ..S RCX=RCX+1,^TMP($J,"RCDPEOB","ADJ",RCX)=RC0
"RTN","RCDPESR2",124,0)
 .I RCFILE=5,+RC0=3 D  Q  ; Adding logic for line type 03,Patch 269,DWA
"RTN","RCDPESR2",125,0)
 ..S $P(^TMP($J,"RCDPEOB","ADJ",RCX),U,5)=$P(RC0,U,2)
"RTN","RCDPESR2",126,0)
 .;
"RTN","RCDPESR2",127,0)
 .I +RC0=5 S RCCT=RCCT+1,RCCT1=0 D
"RTN","RCDPESR2",128,0)
 ..S REFORM=0,ECMENUM="" I $$VALECME^BPSUTIL2($P(RC0,U,2)) S ECMENUM=$P(RC0,U,2)
"RTN","RCDPESR2",129,0)
 ..S Z=$$BILL^RCDPESR1($P(RC0,U,2),$G(@RCSD@(RC)),.RCIB)   ; look up claim ien by claim# or by ECME#
"RTN","RCDPESR2",130,0)
 ..I Z S RCBILL=$P($G(^PRCA(430,Z,0)),U) I RCBILL'="",RCBILL'=$P(RC0,U,2) S REFORM=1,$P(RC0,U,2)=RCBILL
"RTN","RCDPESR2",131,0)
 ..S RCBILL=$P(RC0,U,2)
"RTN","RCDPESR2",132,0)
 ..S Z=$S(Z>0:$S($G(RCIB):Z,1:-1),1:-1)
"RTN","RCDPESR2",133,0)
 ..S ^TMP($J,"RCDP-EOB",RCCT,0)=Z_U_RCBILL_U_$G(@RCSD@(RC))_U_ECMENUM
"RTN","RCDPESR2",134,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,5)=$P(RC0,U,3)_","_$P(RC0,U,4)_" "_$P(RC0,U,5) ;Save pt nm
"RTN","RCDPESR2",135,0)
 ..I Z>0 S Q=+$P($G(^PRCA(430,Z,0)),U,9) I $P($G(^RCD(340,Q,0)),U)["DIC(36," S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,3)=+^RCD(340,Q,0) ;Save ins co
"RTN","RCDPESR2",136,0)
 .;
"RTN","RCDPESR2",137,0)
 .I +RC0>5,REFORM S $P(RC0,U,2)=RCBILL ;
"RTN","RCDPESR2",138,0)
 .I +RC0=10 D  ;Save amt pd/billed, rev flg
"RTN","RCDPESR2",139,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,2)=$S(+$P(RC0,U,11):$J($P(RC0,U,11)/100,"",2),1:0),$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,6)=$J($P(RC0,U,11),"",2)
"RTN","RCDPESR2",140,0)
 ..I $P(RC0,U,6)="Y"!($P(RC0,U,7)=22) S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,4)=1
"RTN","RCDPESR2",141,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,10,14)=RCDPBNPI_U_$P(RC0,U,16,19)
"RTN","RCDPESR2",142,0)
 .I +RC0=11 D  ; Save Rendering Provider information from new style message
"RTN","RCDPESR2",143,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,10,14)=RCDPBNPI_U_$P(RC0,U,3,6)
"RTN","RCDPESR2",144,0)
 ..; End save of Rendering Provider
"RTN","RCDPESR2",145,0)
 .I RCBILL=$P(RC0,U,2) S RCCT1=RCCT1+1,^TMP($J,"RCDP-EOB",RCCT,RCCT1,0)=RC0
"RTN","RCDPESR2",146,0)
 ;
"RTN","RCDPESR2",147,0)
 S RCSTAR=$TR($J("",15)," ","*"),RCET=RCSTAR_"ERROR/WARNING EEOB DETAIL SEQ #"
"RTN","RCDPESR2",148,0)
 S RCCT=0 F  S RCCT=$O(^TMP($J,"RCDP-EOB",RCCT)) Q:'RCCT  S RCIFN=+$G(^(RCCT,0)),RCBILL=$P($G(^(0)),U,2),^TMP($J,"RCDPEOB",RCCT)=$G(^TMP($J,"RCDP-EOB",RCCT,0)) D
"RTN","RCDPESR2",149,0)
 .S RCEOB=-1,RCEOBD=""
"RTN","RCDPESR2",150,0)
 .I $S(RCIFN>0:$P(^PRCA(430.3,+$P($G(^PRCA(430,+RCIFN,0)),U,8),0),U,3)'=102,RCIFN'>0&($G(DUP)'>0):1,1:0) D
"RTN","RCDPESR2",151,0)
 ..S @RCERR1@(RCCT)=" ",@RCERR1@(RCCT,1)=RCET_RCCT_RCSTAR
"RTN","RCDPESR2",152,0)
 ..S @RCERR1@(RCCT,2)="Bill "_RCBILL_" is"_$S(RCIFN>0:" not in an ACTIVE status in your A/R",1:"n't valid/wasn't found so its detail wasn't stored in IB")
"RTN","RCDPESR2",153,0)
 ..S:RCFILE=5 @RCERR1@(RCCT,"*")=@RCERR1@(RCCT,2)
"RTN","RCDPESR2",154,0)
 ..S @RCERR1@(RCCT,3)="  The reported amount paid on this bill was: "_$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U,2)
"RTN","RCDPESR2",155,0)
 ..I RCIFN'>0 D
"RTN","RCDPESR2",156,0)
 ...S @RCERR1@(RCCT,4)="  If the bill is not for your site, it must be transferred to the"
"RTN","RCDPESR2",157,0)
 ...S @RCERR1@(RCCT,5)="   correct site and manually adjusted in your AR."
"RTN","RCDPESR2",158,0)
 ...S @RCERR1@(RCCT,6)="  You can perform this transfer using EDI Lockbox ERA/EEOB exception process."
"RTN","RCDPESR2",159,0)
 ...S @RCERR1@(RCCT,7)=" "
"RTN","RCDPESR2",160,0)
 ..D DISP1^RCDPESR5(RCCT,1)
"RTN","RCDPESR2",161,0)
 ..S Q=0 F  S Q=$O(^TMP($J,"RCDP-EOB",RCCT,Q)) Q:'Q  S ^TMP($J,"RCDPEOB",RCCT,Q)=$G(^TMP($J,"RCDP-EOB",RCCT,Q,0))
"RTN","RCDPESR2",162,0)
 ..S ^TMP($J,"RCDPEOB",RCCT)=^TMP($J,"RCDP-EOB",RCCT,0) M ^TMP($J,"RCDPEOB",RCCT,"ERR")=@RCERR1@(RCCT)
"RTN","RCDPESR2",163,0)
 ..I RCFILE=5 D  ;Store err if trans-in failed
"RTN","RCDPESR2",164,0)
 ...N RCE,RC,DIE,X,Y,DA,DR
"RTN","RCDPESR2",165,0)
 ...S RCE(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" "_$G(@RCERR1@(RCCT,"*"))
"RTN","RCDPESR2",166,0)
 ...S RCE(2)=" ",RCFILED=0
"RTN","RCDPESR2",167,0)
 ...D WP^DIE(344.5,RCTDA_",",5,"A","RCE")
"RTN","RCDPESR2",168,0)
 .I RCIFN>0 D
"RTN","RCDPESR2",169,0)
 ..N RCDUPEOB,RCALLDUP
"RTN","RCDPESR2",170,0)
 ..;Chk rec exists
"RTN","RCDPESR2",171,0)
 ..S RCDUPEOB=0
"RTN","RCDPESR2",172,0)
 ..S RCEOB=$$DUP^RCDPESR3(RCMNUM,RCIFN,$P($G(^TMP($J,"RCDPEOB",RCCT,"EOB")),U,2),$P($G(^TMP($J,"RCDPEOB",RCCT,"EOB")),U,6)) ;Same msg for update?
"RTN","RCDPESR2",173,0)
 ..I RCEOB,$P(RCEOB,U,2) S RCEOB=0  ;If chksum exists, let below check it
"RTN","RCDPESR2",174,0)
 ..S ^TMP($J,"RCDP-EOB",RCCT,.5,0)="835ERA" ;Needed - checksum
"RTN","RCDPESR2",175,0)
 ..S RCALLDUP=$$DUP^IBCEOB("^TMP("_$J_",""RCDP-EOB"","_RCCT_")",RCIFN)
"RTN","RCDPESR2",176,0)
 ..I $S(RCALLDUP:1,RCEOB:$G(DUP)'>0,1:0) D
"RTN","RCDPESR2",177,0)
 ...S RCDUPEOB=1
"RTN","RCDPESR2",178,0)
 ...D DUPREC^RCDPESR6(RCET,RCCT,RCSTAR,RCFILE,RCALLDUP,RCEOB,RCBILL,.RCDUPEOB)
"RTN","RCDPESR2",179,0)
 ...S:RCALLDUP RCEOBD=RCALLDUP
"RTN","RCDPESR2",180,0)
 ..;Add stub to 361.1
"RTN","RCDPESR2",181,0)
 ..I 'RCDUPEOB S RCEOB=+$$ADD3611^IBCEOB(RCMNUM,"","",RCIFN,1,"^TMP("_$J_",""RCDP-EOB"","_RCCT_")") ;IA 4042
"RTN","RCDPESR2",182,0)
 ..K ^TMP($J,"RCDP-EOB",RCCT,.5,0)
"RTN","RCDPESR2",183,0)
 ..I RCEOB<0 D:$G(DUP)'>0  Q
"RTN","RCDPESR2",184,0)
 ...S @RCERR1@(RCCT)=" ",^(RCCT,1)=RCET_RCCT_RCSTAR,RCFILED=0
"RTN","RCDPESR2",185,0)
 ...S @RCERR1@(RCCT,2)="Error - EEOB detail not added to IB for bill "_RCBILL,$P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)=""
"RTN","RCDPESR2",186,0)
 ...S:RCFILE=5 @RCERR1@(RCCT,"*")=@RCERR1@(RCCT,2)
"RTN","RCDPESR2",187,0)
 ...D DISP1^RCDPESR5(RCCT,1)
"RTN","RCDPESR2",188,0)
 ...S Q=0 F  S Q=$O(^TMP($J,"RCDP-EOB",RCCT,Q)) Q:'Q  S ^TMP($J,"RCDPEOB",RCCT,Q)=$G(^TMP($J,"RCDP-EOB",RCCT,Q,0))
"RTN","RCDPESR2",189,0)
 ...S ^TMP($J,"RCDPEOB",RCCT)=^TMP($J,"RCDP-EOB",RCCT,0) M ^TMP($J,"RCDPEOB",RCCT,"ERR")=@RCERR1@(RCCT)
"RTN","RCDPESR2",190,0)
 ..;Upd 361.1, needs ^TMP($J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPESR2",191,0)
 ..I RCDUPEOB'<0 S RCNOUPD=0 D UPD3611^IBCEOB(RCEOB,RCCT,1)
"RTN","RCDPESR2",192,0)
 ..;errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPESR2",193,0)
 ..I $O(^TMP("RCDPERR-EOB",$J,0)) D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB")
"RTN","RCDPESR2",194,0)
 ..S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)=$S('$G(RCEOBD):RCEOB,1:RCEOBD)
"RTN","RCDPESR2",195,0)
 .K ^TMP("RCDPERR-EOB",$J)
"RTN","RCDPESR2",196,0)
 ;
"RTN","RCDPESR2",197,0)
 I RCNOUPD D DUPERA^RCDPESR3($G(DUP),RCNOUPD)
"RTN","RCDPESR2",198,0)
 I $O(@RCERR1@("")) D BULLS^RCDPESR3(RCFILE,RCTDA,$S(RCNOUPD:RCNOUPD,1:$G(DUP)),$G(RCXMG))
"RTN","RCDPESR2",199,0)
 K ^TMP("RCDPERR-EOB",$J),^TMP($J,"RCDP-EOB"),@RCERR1,@RCSD
"RTN","RCDPESR2",200,0)
 D CLEAN^DILF
"RTN","RCDPESR2",201,0)
 Q
"RTN","RCDPESR3")
0^16^B55320528
"RTN","RCDPESR3",1,0)
RCDPESR3 ;ALB/TMK/PJH - Server auto-update utilities - EDI Lockbox ;Jun 06, 2014@19:11:19
"RTN","RCDPESR3",2,0)
 ;;4.5;Accounts Receivable;**173,214,208,255,269,283,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPESR3",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR3",4,0)
 Q
"RTN","RCDPESR3",5,0)
 ;
"RTN","RCDPESR3",6,0)
EFTIN(RCTXN,RCD,XMZ,RCGBL,RCEFLG) ; Adds a new EFT record to AR file 344.3
"RTN","RCDPESR3",7,0)
 ;  from Lockbox EFT msg
"RTN","RCDPESR3",8,0)
 ; Input:   RCTXN   - Data on the header record of the message text
"RTN","RCDPESR3",9,0)
 ;          RCD     - Array containing formatted mail message header data
"RTN","RCDPESR3",10,0)
 ;          XMZ     - Mail message number
"RTN","RCDPESR3",11,0)
 ;          RCGBL   - Name of the array or global where the message is stored
"RTN","RCDPESR3",12,0)
 ; Output:  RCEFLG  - Error flag returned if passed by reference
"RTN","RCDPESR3",13,0)
 ;
"RTN","RCDPESR3",14,0)
 N CT,DA,DIK,DLAYGO,RC,RC1,RCLAST,RCEFT,RCTDA,RCERR,RCTYP1,RCZ,XX,Z,Z0
"RTN","RCDPESR3",15,0)
 ;
"RTN","RCDPESR3",16,0)
 ; Take data out of mail message
"RTN","RCDPESR3",17,0)
 S (RCEFLG,RCLAST)=0,CT=0,RCTYP1="835EFT"
"RTN","RCDPESR3",18,0)
 F  X XMREC Q:XMER<0  D  Q:RCLAST
"RTN","RCDPESR3",19,0)
 . I +XMRG=99,$P(XMRG,U,2)="$" S RCLAST=1 Q
"RTN","RCDPESR3",20,0)
 . S:XMRG'="" CT=CT+1,@RCGBL@(2,"D",CT)=XMRG
"RTN","RCDPESR3",21,0)
 ;
"RTN","RCDPESR3",22,0)
 I 'RCLAST,'$G(RCERR) K @RCGBL S RCERR=2    ; No $ as last character of msg
"RTN","RCDPESR3",23,0)
 ;
"RTN","RCDPESR3",24,0)
 I $G(RCERR)>0 D  G EFTQ
"RTN","RCDPESR3",25,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,.RCERR)
"RTN","RCDPESR3",26,0)
 . S RCEFLG=1
"RTN","RCDPESR3",27,0)
 ;
"RTN","RCDPESR3",28,0)
 ; Add top-level entry to file 344.3
"RTN","RCDPESR3",29,0)
 S RCEFT=$$ADDEFT(RCTXN,XMZ,RCGBL,.RCERR)
"RTN","RCDPESR3",30,0)
 ;
"RTN","RCDPESR3",31,0)
 I $G(RCERR) D  G EFTQ                      ; 'BAD' EFT's
"RTN","RCDPESR3",32,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,.RCERR)
"RTN","RCDPESR3",33,0)
 . S RCEFLG=1
"RTN","RCDPESR3",34,0)
 ;
"RTN","RCDPESR3",35,0)
 G:'RCEFT EFTQ
"RTN","RCDPESR3",36,0)
 ;
"RTN","RCDPESR3",37,0)
 ; Add the detail data to file 344.31 for this EFT record
"RTN","RCDPESR3",38,0)
 S Z=0
"RTN","RCDPESR3",39,0)
 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  D
"RTN","RCDPESR3",40,0)
 . S DA=Z,DIK="^RCY(344.31,"
"RTN","RCDPESR3",41,0)
 . D ^DIK                                   ; Delete any detail data already there
"RTN","RCDPESR3",42,0)
 ;
"RTN","RCDPESR3",43,0)
 S (RC,RC1,RCZ)=0
"RTN","RCDPESR3",44,0)
 F  S RCZ=$O(@RCGBL@(2,"D",RCZ)) Q:'RCZ  S Z0=$G(^(RCZ)) I Z0'="" D  Q:$G(RCERR)
"RTN","RCDPESR3",45,0)
 . I $P(Z0,U)="01" D  ; Each payer's data
"RTN","RCDPESR3",46,0)
 . . N DA,DD,DIC,DIE,DO,DR,X,Y
"RTN","RCDPESR3",47,0)
 . . S X=RCEFT
"RTN","RCDPESR3",48,0)
 . . S DIC("DR")=".11////0;.04////"_$P(Z0,U,2)_";.08////0"
"RTN","RCDPESR3",49,0)
 . . S DIC("DR")=DIC("DR")_$S($P(Z0,U,5)'="":";.02////"_$P(Z0,U,5),1:"")
"RTN","RCDPESR3",50,0)
 . . S DIC("DR")=DIC("DR")_$S($P(Z0,U,6)'="":";.03////"_$P(Z0,U,6),1:"")
"RTN","RCDPESR3",51,0)
 . . S DIC("DR")=DIC("DR")_";.07////"_$J(+$P(Z0,U,4)/100,"",2)
"RTN","RCDPESR3",52,0)
 . . S DIC("DR")=DIC("DR")_";.06////"_$S($P(Z0,U,8)'="":1,1:0)
"RTN","RCDPESR3",53,0)
 . . S DIC("DR")=DIC("DR")_";.12///"_$$FDT^RCDPESR9($P(Z0,U,3))
"RTN","RCDPESR3",54,0)
 . . S DIC("DR")=DIC("DR")_";.13////"_DT_$S($P(Z0,U,7)'="":";.05////"_$P(Z0,U,7),1:"")
"RTN","RCDPESR3",55,0)
 . . S DIC("DR")=DIC("DR")_$S($P(Z0,U,9)'="":";.15////"_$P(Z0,U,9),1:"")
"RTN","RCDPESR3",56,0)
 . . S XX=$S($P(Z0,U,10)="D":"D",$P(Z0,U,10)="-":"D",1:"")
"RTN","RCDPESR3",57,0)
 . . S DIC("DR")=DIC("DR")_";3////"_XX      ; PRCA*4.5*321 added filing of this field
"RTN","RCDPESR3",58,0)
 . . ;
"RTN","RCDPESR3",59,0)
 . . I $P(Z0,U,8)'="" D                     ; Tax id error
"RTN","RCDPESR3",60,0)
 . . . S XX=$P(Z0,U,5)_"  Payer ID: "_$P(RCTXN,U,6)
"RTN","RCDPESR3",61,0)
 . . . D TAXERR^RCDPESR1("EFT",XX,$P(RCTXN,U,7),$P(RCTXN,U,8)) ; Send bad tax id bulletin
"RTN","RCDPESR3",62,0)
 . . ;
"RTN","RCDPESR3",63,0)
 . . S DIC(0)="L",DIC="^RCY(344.31,",DLAYGO=344.31
"RTN","RCDPESR3",64,0)
 . . D FILE^DICN
"RTN","RCDPESR3",65,0)
 . . K DIC,DLAYGO,DO,DD
"RTN","RCDPESR3",66,0)
 . . I Y'>0 D  ; Error filing data
"RTN","RCDPESR3",67,0)
 . . . S DIK="^RCY(344.3,",DA=RCEFT D ^DIK
"RTN","RCDPESR3",68,0)
 . . . S Z=0 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  S DIK="^RCY(344.31,",DA=Z D ^DIK
"RTN","RCDPESR3",69,0)
 . . . S RCEFLG=1,RCERR=3
"RTN","RCDPESR3",70,0)
 . . . D ERRUPD^RCDPESR1(RCGBL,.RCD,RCTYP1,RCERR)
"RTN","RCDPESR3",71,0)
 ;
"RTN","RCDPESR3",72,0)
 I '$G(RCEFLG) D
"RTN","RCDPESR3",73,0)
 . S DIE="^RCY(344.3,",DA=RCEFT,DR=".09////"_$$CHKSUM(RCEFT) D ^DIE
"RTN","RCDPESR3",74,0)
 ;
"RTN","RCDPESR3",75,0)
EFTQ ;
"RTN","RCDPESR3",76,0)
 D CLEAN^DILF
"RTN","RCDPESR3",77,0)
 Q
"RTN","RCDPESR3",78,0)
 ;
"RTN","RCDPESR3",79,0)
ADDEFT(RCTXN,RCXMZ,RCGBL,RCERR) ; File EFT TOTAL record in file 344.3
"RTN","RCDPESR3",80,0)
 ; RCTXN = the data on the header record of the message text
"RTN","RCDPESR3",81,0)
 ; RCXMZ = the mail message number
"RTN","RCDPESR3",82,0)
 ; RCGBL = the name of the array or global where the message is stored
"RTN","RCDPESR3",83,0)
 ; Function returns the ien of the total record found/added
"RTN","RCDPESR3",84,0)
 ;    and also returns RCERR if passed by reference
"RTN","RCDPESR3",85,0)
 ;
"RTN","RCDPESR3",86,0)
 N RCTDA,RCRCPT,RCDUP,RCHAC,Z,Z0
"RTN","RCDPESR3",87,0)
 S (RCERR,RCTDA)=""
"RTN","RCDPESR3",88,0)
 ;
"RTN","RCDPESR3",89,0)
 ;----- changed for PRCA*4.5*283
"RTN","RCDPESR3",90,0)
 ;I $E($P(RCTXN,U,6),1,3)'="469",$E($P(RCTXN,U,6),1,3)'="569",$E($P(RCTXN,U,6),1,3)'="HAC" D  G ADDQ ; Invalid EFT deposit number
"RTN","RCDPESR3",91,0)
 ;. N RCDXM,RCCT
"RTN","RCDPESR3",92,0)
 ;. S RCCT=0
"RTN","RCDPESR3",93,0)
 ;. S RCCT=RCCT+1,RCDXM(RCCT)="This EFT has an invalid deposit number for EDI Lockbox and has been rejected.",RCCT=RCCT+1,RCDXM(RCCT)=" "
"RTN","RCDPESR3",94,0)
 ;. S RCCT=RCCT+1,RCDXM(RCCT)=" ",RCCT=RCCT+1,RCDXM(RCCT)="Here are the contents of this message:"
"RTN","RCDPESR3",95,0)
 ;. D DISP("EDI LBOX INVALID EFT DEPOSIT #",RCCT,.RCDXM,RCXMZ)
"RTN","RCDPESR3",96,0)
 ;-----
"RTN","RCDPESR3",97,0)
 ;
"RTN","RCDPESR3",98,0)
 ; Make sure it's not already there or if so, it has no ptr to a deposit
"RTN","RCDPESR3",99,0)
 ; or if a deposit exists, that the deposit does not yet have a receipt
"RTN","RCDPESR3",100,0)
 S RCDUP=0,RCHAC=$E($P(RCTXN,U,6),1,3)="HAC" ; This is a HAC deposit
"RTN","RCDPESR3",101,0)
 I $P(RCTXN,U,6)'="" D
"RTN","RCDPESR3",102,0)
 . ;Format Deposit Date as FM date
"RTN","RCDPESR3",103,0)
 . N RCDDAT
"RTN","RCDPESR3",104,0)
 . S X=$$FDT^RCDPESR9($P(RCTXN,U,7))
"RTN","RCDPESR3",105,0)
 . S RCDDAT=0,%DT="X" D ^%DT S:Y>0 RCDDAT=Y
"RTN","RCDPESR3",106,0)
 . S Z=0 ; Lookup deposit by deposit #
"RTN","RCDPESR3",107,0)
 . F  S Z=$O(^RCY(344.3,"ADEP",RCDDAT,$P(RCTXN,U,6),Z)) Q:'Z  S Z0=$G(^RCY(344.3,Z,0)) S:'$P(Z0,U,3) RCTDA=Z Q:RCTDA  D  Q
"RTN","RCDPESR3",108,0)
 .. ; Deposit found - find receipt
"RTN","RCDPESR3",109,0)
 .. I $O(^RCY(344,"AD",$P(Z0,U,3),0)) S RCDUP=Z Q
"RTN","RCDPESR3",110,0)
 .. S RCTDA=Z
"RTN","RCDPESR3",111,0)
 ;
"RTN","RCDPESR3",112,0)
 ;-----
"RTN","RCDPESR3",113,0)
 ; PRCA*4.5*298 - MailMan message disabled, logic retained - 14 Feb 2014
"RTN","RCDPESR3",114,0)
 ;I RCDUP D  ; Send bulletin that duplicate EFT received
"RTN","RCDPESR3",115,0)
 ;. N RCDXM,RCCT
"RTN","RCDPESR3",116,0)
 ;. S RCCT=0
"RTN","RCDPESR3",117,0)
 ;. S RCCT=RCCT+1,RCDXM(RCCT)="This EFT appears to be a duplicate transaction and has been rejected.",RCCT=RCCT+1,RCDXM(RCCT)=" "
"RTN","RCDPESR3",118,0)
 ;. S RCCT=RCCT+1,RCDXM(RCCT)=" ",RCCT=RCCT+1,RCDXM(RCCT)="Here are the contents of this message:"
"RTN","RCDPESR3",119,0)
 ;. D DISP("EDI LBOX DUP EFT DEPOSIT RECEIVED",RCCT,.RCDXM,RCXMZ)
"RTN","RCDPESR3",120,0)
 ;-----
"RTN","RCDPESR3",121,0)
 ;
"RTN","RCDPESR3",122,0)
 I 'RCDUP D  ; Add or update the record
"RTN","RCDPESR3",123,0)
 . N RCX,RCDTTM,DIE,DIC,DLAYGO,DD,DA,DO,DR,X,Y,%DT,DINUM
"RTN","RCDPESR3",124,0)
 . ;
"RTN","RCDPESR3",125,0)
 . S X=$$FDT^RCDPESR9($P(RCTXN,U,3))_"@"_$P(RCTXN,U,4)
"RTN","RCDPESR3",126,0)
 . S %DT="XTS" D ^%DT S:Y>0 RCDTTM=Y
"RTN","RCDPESR3",127,0)
 . ;
"RTN","RCDPESR3",128,0)
 . S DIC("DR")=""
"RTN","RCDPESR3",129,0)
 . S DIC("DR")=$S(RCDTTM'="":".02////"_RCDTTM,1:"")
"RTN","RCDPESR3",130,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_".06////"_$P(RCTXN,U,6)_";.07///"_$$FDT^RCDPESR9($P(RCTXN,U,7))
"RTN","RCDPESR3",131,0)
 . S DIC("DR")=DIC("DR")_";.08////"_$$ZERO^RCDPESR9($P(RCTXN,U,8),1)_";.13////"_$$NOW^XLFDT()_";.05////"_RCXMZ_";.14////0;.12////0"
"RTN","RCDPESR3",132,0)
 . ;
"RTN","RCDPESR3",133,0)
 . I RCTDA D  ; Overwrite the data already there
"RTN","RCDPESR3",134,0)
 .. L +^RCY(344.3,RCTDA):1 I '$T S RCTDA=-1 Q
"RTN","RCDPESR3",135,0)
 .. S DIE="^RCY(344.3,",DA=RCTDA,DR=DIC("DR") K DIC D ^DIE
"RTN","RCDPESR3",136,0)
 .. L -^RCY(344.3,RCTDA)
"RTN","RCDPESR3",137,0)
 . ;
"RTN","RCDPESR3",138,0)
 . I 'RCTDA D
"RTN","RCDPESR3",139,0)
 .. S RCX=+$O(^RCY(344.3," "),-1)
"RTN","RCDPESR3",140,0)
 .. F RCX=RCX+1:1 I '$D(^RCY(344.3,RCX,0)) L +^RCY(344.3,RCX,0):1 I $T S X=RCX Q
"RTN","RCDPESR3",141,0)
 .. S DIC(0)="L",DIC="^RCY(344.3,",DLAYGO=344.3,DINUM=RCX
"RTN","RCDPESR3",142,0)
 .. D FILE^DICN K DO,DD,DLAYGO,DIC,DINUM
"RTN","RCDPESR3",143,0)
 .. L -^RCY(344.3,RCX,0)
"RTN","RCDPESR3",144,0)
 .. S RCTDA=$S(Y<0:"",1:+Y)
"RTN","RCDPESR3",145,0)
 . ;
"RTN","RCDPESR3",146,0)
 . I 'RCTDA S RCERR=3 ; Error in add of EFT record to file 344.3 
"RTN","RCDPESR3",147,0)
 ;
"RTN","RCDPESR3",148,0)
ADDQ Q $S(RCTDA>0:RCTDA,1:"")
"RTN","RCDPESR3",149,0)
 ;
"RTN","RCDPESR3",150,0)
CHKSUM(RCTDA) ; Calc the checksum for EFT record stored in RCTDA in 344.3
"RTN","RCDPESR3",151,0)
 ;
"RTN","RCDPESR3",152,0)
 N RCDPCSUM,RCDPDATA,X,Y,Z,Z0
"RTN","RCDPESR3",153,0)
 ;
"RTN","RCDPESR3",154,0)
 S (RCDPCSUM,X)=0,Z0=$G(^RCY(344.3,RCTDA,0))
"RTN","RCDPESR3",155,0)
 ; Use pcs 1-8, leaving out piece 3
"RTN","RCDPESR3",156,0)
 S RCDPDATA=$P(Z0,U,1,8),$P(RCDPDATA,U,3)=""
"RTN","RCDPESR3",157,0)
 S X=RCDPCSUM_RCDPDATA X $S($G(^%ZOSF("LPC"))'="":^("LPC"),1:"S Y=""""") S RCDPCSUM=Y
"RTN","RCDPESR3",158,0)
 ; Use detail iens and pieces 3,4,7 to complete the checksum
"RTN","RCDPESR3",159,0)
 S Z=0 F  S Z=$O(^RCY(344.31,"B",RCTDA,Z)) Q:'Z  S Z0=$G(^RCY(344.31,Z,0)),RCDPDATA=Z_U_$P(Z0,U,3,4)_U_$P(Z0,U,7),X=RCDPCSUM_RCDPDATA X $S($G(^%ZOSF("LPC"))'="":^("LPC"),1:"S Y=""""") S RCDPCSUM=Y
"RTN","RCDPESR3",160,0)
 Q RCDPCSUM
"RTN","RCDPESR3",161,0)
 ;
"RTN","RCDPESR3",162,0)
DISP(RCTIT,RCCT,RCDXM,RCXMZ) ; Sends bulletin with formatted data from message
"RTN","RCDPESR3",163,0)
 ; RCTIT = title of bulletin
"RTN","RCDPESR3",164,0)
 ; RCCT = # of lines previously populated
"RTN","RCDPESR3",165,0)
 ; RCXDM = array containing the text of the bulletin
"RTN","RCDPESR3",166,0)
 N RC,Z
"RTN","RCDPESR3",167,0)
 K ^TMP("RC1",$J),^TMP("RC",$J),^TMP("RCTEMP",$J)
"RTN","RCDPESR3",168,0)
 S RC=1,^TMP("RCTEMP",$J,RC)=$G(^TMP("RCMSGH",$J,0))
"RTN","RCDPESR3",169,0)
 S Z=0 F  S Z=$O(^TMP("RCMSG",$J,2,"D",Z)) Q:'Z  S RC=RC+1,^TMP("RCTEMP",$J,RC)=$G(^TMP("RCMSG",$J,2,"D",Z))
"RTN","RCDPESR3",170,0)
 D DISP^RCDPESR8("^TMP(""RCTEMP"",$J)","^TMP(""RC1"",$J)",1,"^TMP(""RC"",$J)",75)
"RTN","RCDPESR3",171,0)
 S Z=0 F  S Z=$O(^TMP("RC",$J,Z)) Q:'Z  S RCCT=RCCT+1,RCDXM(RCCT)=$G(^TMP("RC",$J,Z))
"RTN","RCDPESR3",172,0)
 D BULLEFT^RCDPESR0("",RCXMZ,RCTIT,.RCDXM)
"RTN","RCDPESR3",173,0)
 K ^TMP("RC1",$J),^TMP("RC",$J),^TMP("RCTEMP",$J)
"RTN","RCDPESR3",174,0)
 Q
"RTN","RCDPESR3",175,0)
 ;
"RTN","RCDPESR3",176,0)
DUP(RCM,RCIFN,RCAMT,RCAMT1) ; EOB in mail message already stored in 361.1?
"RTN","RCDPESR3",177,0)
 ; RCM = msg # EOB was received in
"RTN","RCDPESR3",178,0)
 ; RCIFN = bill ien
"RTN","RCDPESR3",179,0)
 ; RCAMT = amt pd
"RTN","RCDPESR3",180,0)
 ; RCAMT1 = amt reported billed
"RTN","RCDPESR3",181,0)
 ; Returns 0 if none found, entry #^message checksum on file if found
"RTN","RCDPESR3",182,0)
 N Z,DUP,DUP1
"RTN","RCDPESR3",183,0)
 S (DUP,DUP1,Z)=0
"RTN","RCDPESR3",184,0)
 F  S Z=$O(^IBM(361.1,"AC",RCM,Z)) Q:'Z  I +$G(^IBM(361.1,Z,0))=RCIFN D  Q:DUP
"RTN","RCDPESR3",185,0)
 . I '$P($G(^IBM(361.1,Z,100)),U,5) S DUP1=Z Q  ; Partially filed before
"RTN","RCDPESR3",186,0)
 . I +$G(^IBM(361.1,Z,1))=+RCAMT,+$P($G(^IBM(361.1,1,Z,2)),U,4)=+RCAMT1 S DUP=Z_U_+$P($G(^IBM(361.1,Z,100)),U,5) Q
"RTN","RCDPESR3",187,0)
 I 'DUP,DUP1 S DUP=DUP1_"^0"
"RTN","RCDPESR3",188,0)
 Q DUP
"RTN","RCDPESR3",189,0)
 ;
"RTN","RCDPESR3",190,0)
DUPERA(DUP,RCNOUPD) ; Msg for duplicate ERA
"RTN","RCDPESR3",191,0)
 ; RCNOUPD = # of message with duplicate data
"RTN","RCDPESR3",192,0)
 ; DUP = flag = -1 if duplicate message received in same mail msg #
"RTN","RCDPESR3",193,0)
 K ^TMP("RCERR1",$J)
"RTN","RCDPESR3",194,0)
 S ^TMP("RCERR1",$J,1)=$S(DUP>0:"This an exact duplicate of an ERA received previously in mail msg "_RCNOUPD,1:"This ERA message was already fully processed - message was ignored")
"RTN","RCDPESR3",195,0)
 Q
"RTN","RCDPESR3",196,0)
 ;
"RTN","RCDPESR3",197,0)
BULLS(RCFILE,RCTDA,DUP,RCXMSG) ; Error bulletins for ERA
"RTN","RCDPESR3",198,0)
 ; PRCA*4.5*298 - DUPLICATE TRANSMISSION MSG AND EEOB - EXCEPTIONS message disabled - 14 Feb 2014
"RTN","RCDPESR3",199,0)
 ;I RCFILE=5 D BULL1^RCDPESR5(RCTDA,"^TMP(""RCERR1"",$J)",$S($G(DUP)>0:$G(DUP),1:""))
"RTN","RCDPESR3",200,0)
 I RCFILE=4 D BULL2^RCDPESR5(RCTDA,"^TMP(""RCERR1"",$J)",RCXMSG)
"RTN","RCDPESR3",201,0)
 Q
"RTN","RCDPESR3",202,0)
 ;
"RTN","RCDPESR3",203,0)
ADJERR(RCERR) ; Set up adj error text in RCERR(n) - pass by ref
"RTN","RCDPESR3",204,0)
 ; Function returns # of lines for error text
"RTN","RCDPESR3",205,0)
 S RCERR(1)="At least 1 adjustment transaction has been found on this ERA.  Before the",RCERR(2)="   receipt for this ERA can be processed, the appropriate adjustments",RCERR(3)="   must be made using the EEOB Worklist",RCERR(4)=" "
"RTN","RCDPESR3",206,0)
 Q 4
"RTN","RCDPESR3",207,0)
 ;
"RTN","RCDPESR4")
0^47^B85709407
"RTN","RCDPESR4",1,0)
RCDPESR4 ;ALB/TMK/PJH - Server interface 835ERA processing ;Jun 06, 2014@19:11:19
"RTN","RCDPESR4",2,0)
 ;;4.5;Accounts Receivable;**173,216,208,230,269,271,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPESR4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR4",4,0)
 ;
"RTN","RCDPESR4",5,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","RCDPESR4",6,0)
 ;
"RTN","RCDPESR4",7,0)
ERAEOBIN(RCTXN,RCD,RCGBL,RCEFLG) ; Store/process 835ERA or 835XFR
"RTN","RCDPESR4",8,0)
 ;  transaction coming into the site
"RTN","RCDPESR4",9,0)
 ; RCTXN = data on the hdr record of the msg text
"RTN","RCDPESR4",10,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",11,0)
 ; RCGBL = name of the array or global where the msg is stored
"RTN","RCDPESR4",12,0)
 ; RCEFLG = error flag returned if passed by REF
"RTN","RCDPESR4",13,0)
 ;
"RTN","RCDPESR4",14,0)
 N RCLAST,RCBILL,RCTDA,RCMSG,RCERR
"RTN","RCDPESR4",15,0)
 S (RCTDA,RCEFLG)=0
"RTN","RCDPESR4",16,0)
 ;
"RTN","RCDPESR4",17,0)
 ;
"RTN","RCDPESR4",18,0)
 F  L +^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13)):30 Q:$T
"RTN","RCDPESR4",19,0)
 S RCMSG=$$EXTERA(RCTXN,.RCLAST,.RCBILL) ; Extract from mail msg
"RTN","RCDPESR4",20,0)
 ;
"RTN","RCDPESR4",21,0)
 ; If full msg received (99^$ record exists), file it
"RTN","RCDPESR4",22,0)
 I 'RCLAST,'$G(RCERR) D  ;No $ as last character of msg
"RTN","RCDPESR4",23,0)
 . S RCERR=2
"RTN","RCDPESR4",24,0)
 ;
"RTN","RCDPESR4",25,0)
 I RCLAST S RCTDA=+$$ADD(RCGBL,RCD("MSG#"),RCMSG,.RCBILL,.RCERR,.RCD)
"RTN","RCDPESR4",26,0)
 ;
"RTN","RCDPESR4",27,0)
 I $G(RCERR)>0 D
"RTN","RCDPESR4",28,0)
 . D ERRUPD^RCDPESR1(RCGBL,.RCD,$P(RCTXN,U),.RCERR)
"RTN","RCDPESR4",29,0)
 . I RCTDA D  ; Store exception msgs in file 344.5
"RTN","RCDPESR4",30,0)
 .. N A,C,Z
"RTN","RCDPESR4",31,0)
 .. S C=1,A(1)="Date: "_$$FMTE^XLFDT($$NOW^XLFDT(),2)
"RTN","RCDPESR4",32,0)
 .. I $G(^TMP("RCERR",$J,"TEXT"))'="" S C=C+1,A(C)=^TMP("RCERR",$J,"TEXT"),C=C+1,A(C)=" "
"RTN","RCDPESR4",33,0)
 .. S Z=0 F  S Z=$O(^TMP("RCERR",$J,"MSG",Z)) Q:'Z  S C=C+1,A(C)=^(Z)
"RTN","RCDPESR4",34,0)
 .. I $O(A(0)) D WP^DIE(344.5,RCTDA_",",5,"A","A")
"RTN","RCDPESR4",35,0)
 . S RCEFLG=1
"RTN","RCDPESR4",36,0)
 ;
"RTN","RCDPESR4",37,0)
 L -^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13))
"RTN","RCDPESR4",38,0)
 I $P(RCTXN,U)'["XFR",$P(RCTXN,U,12)'="" D TAXERR^RCDPESR1("ERA",$P(RCTXN,U,6)_"  Payer ID: "_$P(RCTXN,U,7),$P(RCTXN,U,11),$P(RCTXN,U,12)) ; Send bad tax id bulletin
"RTN","RCDPESR4",39,0)
 ;
"RTN","RCDPESR4",40,0)
 Q
"RTN","RCDPESR4",41,0)
 ;
"RTN","RCDPESR4",42,0)
EXTERA(RCTXN,RCLAST,RCBILL) ;Extract 835ERA or 835XFR transaction
"RTN","RCDPESR4",43,0)
 ;INPUT:
"RTN","RCDPESR4",44,0)
 ; RCTXN = data on 835ERA/835XFR hdr record
"RTN","RCDPESR4",45,0)
 ; RCLAST = passed by REF and returned=1 if entire record exists
"RTN","RCDPESR4",46,0)
 ;
"RTN","RCDPESR4",47,0)
 ;OUTPUT:
"RTN","RCDPESR4",48,0)
 ; ^TMP("RCMSG",$J,1,"D",line #)=formatted hdr data
"RTN","RCDPESR4",49,0)
 ; ^TMP("RCMSG",$J,2,"D",line #)=raw msg data
"RTN","RCDPESR4",50,0)
 ;  if passed by ref, RCLAST = 1 if '99' record found
"RTN","RCDPESR4",51,0)
 ;  if passed by ref, RCBILL(AR bill number) is returned
"RTN","RCDPESR4",52,0)
 ;    with a 'list' of bills included in the ERA.  If an
"RTN","RCDPESR4",53,0)
 ;    entry = 1, 3rd party bill was found in file 430.
"RTN","RCDPESR4",54,0)
 ;    If the entry = 2, the 3rd party bill found was not active
"RTN","RCDPESR4",55,0)
 ; Function returns existing ien in file 344.5 for multi part ERAs
"RTN","RCDPESR4",56,0)
 ;
"RTN","RCDPESR4",57,0)
 ;N CT,CT1,LINE,HCT,RCH,RCMSG,RCREFORM,RCINS,RCSTAT,B,RCSD,C5
"RTN","RCDPESR4",58,0)
 N B,C5,CT,CT1,HCT,LINE,RCH,RCINS,RCMSG,RCREFORM,RCSD,RCSTART,RCSTAT  ;PRCA*4.5*321 reordered and RCSTART added
"RTN","RCDPESR4",59,0)
 S (HCT,RCH)=0
"RTN","RCDPESR4",60,0)
 ;
"RTN","RCDPESR4",61,0)
 ;
"RTN","RCDPESR4",62,0)
 ; Check if sequence control # already exists or if a new record needed
"RTN","RCDPESR4",63,0)
 S RCMSG=+$O(^RCY(344.5,"AMSEQ",+$P(RCTXN,U,13),0))
"RTN","RCDPESR4",64,0)
 S CT=0
"RTN","RCDPESR4",65,0)
 I 'RCMSG D  ; Build display data for the first sequence only
"RTN","RCDPESR4",66,0)
 . S HCT=HCT+1 S LINE(HCT)="Payer Name: "_$P(RCTXN,U,6)
"RTN","RCDPESR4",67,0)
 . S HCT=HCT+1 S LINE(HCT)="Payer ID: "_$P(RCTXN,U,7)
"RTN","RCDPESR4",68,0)
 . S HCT=HCT+1,LINE(HCT)="Trace #: "_$P(RCTXN,U,8)
"RTN","RCDPESR4",69,0)
 . S HCT=HCT+1,LINE(HCT)="Date Paid: "_$$FDT^RCDPESR9($P(RCTXN,U,9))_"    Total Amt Paid: "_$J($P(RCTXN,U,10)/100,0,2)
"RTN","RCDPESR4",70,0)
 . I $P(RCTXN,U)["XFR",$P(RCTXN,U,19)'="" S HCT=HCT+1,LINE(HCT)="Contact Info: "_$P(RCTXN,U,19)
"RTN","RCDPESR4",71,0)
 . M ^TMP("RCMSG",$J,1,"D")=LINE
"RTN","RCDPESR4",72,0)
 . S CT=CT+1,^TMP("RCMSG",$J,2,"D",CT)=RCTXN
"RTN","RCDPESR4",73,0)
 ;
"RTN","RCDPESR4",74,0)
 S CT1=CT
"RTN","RCDPESR4",75,0)
 S ^TMP("RCMSG",$J,0)=RCTXN
"RTN","RCDPESR4",76,0)
 ;
"RTN","RCDPESR4",77,0)
 S RCSD=$NA(^TMP($J,"RCSRVDT")) K @RCSD ;service dates
"RTN","RCDPESR4",78,0)
 S C5=0
"RTN","RCDPESR4",79,0)
 S RCLAST=0,RCSTART=0 ; PRCA*4.5*321
"RTN","RCDPESR4",80,0)
 F  X XMREC Q:XMER<0  D  Q:RCLAST
"RTN","RCDPESR4",81,0)
 . Q:XMRG=""
"RTN","RCDPESR4",82,0)
 . I +XMRG=99,$P(XMRG,U,2)="$" S RCLAST=1 Q
"RTN","RCDPESR4",83,0)
 . S CT=CT+1
"RTN","RCDPESR4",84,0)
 . I +XMRG=5,$P(XMRG,U,2)'="" S C5=CT
"RTN","RCDPESR4",85,0)
 . ;Statement Start Date - 05 Record is mandatory
"RTN","RCDPESR4",86,0)
 . I +XMRG=5 S RCSTART=+$P(XMRG,U,9) ;PRCA*4.5*321
"RTN","RCDPESR4",87,0)
 . ; save the service date for possible ECME# look up
"RTN","RCDPESR4",88,0)
 . ;PRCA*4.5*321 BEGIN
"RTN","RCDPESR4",89,0)
 . I +XMRG=40,$$VALECME^BPSUTIL2($P(XMRG,U,2)),C5,'$D(@RCSD@(C5)) D
"RTN","RCDPESR4",90,0)
 . . I $P(XMRG,U,19) S @RCSD@(C5)=+$P(XMRG,U,19) Q
"RTN","RCDPESR4",91,0)
 . . ; If service date not present use statement start date instead
"RTN","RCDPESR4",92,0)
 . . S:RCSTART @RCSD@(C5)=RCSTART
"RTN","RCDPESR4",93,0)
 . ; PRCA*4.5*321 END
"RTN","RCDPESR4",94,0)
 . S ^TMP("RCMSG",$J,2,"D",CT)=XMRG
"RTN","RCDPESR4",95,0)
 ;
"RTN","RCDPESR4",96,0)
 ; reformat bill# if needed
"RTN","RCDPESR4",97,0)
 S RCREFORM=""
"RTN","RCDPESR4",98,0)
 S CT=CT1
"RTN","RCDPESR4",99,0)
 F  S CT=$O(^TMP("RCMSG",$J,2,"D",CT)) Q:'CT  S XMRG=$G(^(CT)) D
"RTN","RCDPESR4",100,0)
 . Q:XMRG=""
"RTN","RCDPESR4",101,0)
 . I +XMRG=5,$P(XMRG,U,2)'="" D
"RTN","RCDPESR4",102,0)
 .. S RCREFORM="",RCSTAT=1
"RTN","RCDPESR4",103,0)
 .. ; Check if bill is in AR & is a 3rd party bill
"RTN","RCDPESR4",104,0)
 .. S RCBILL=$$BILL^RCDPESR1($P(XMRG,U,2),$G(@RCSD@(CT)),.RCINS)    ; look up claim ien by claim# or ECME#
"RTN","RCDPESR4",105,0)
 .. I '$G(RCINS)!(RCBILL<0) S (RCBILL,RCSTAT)=0
"RTN","RCDPESR4",106,0)
 .. I RCBILL S B=$P($G(^PRCA(430,RCBILL,0)),U) I B'=$P(XMRG,U,2) S $P(XMRG,U,2)=B,RCREFORM=B
"RTN","RCDPESR4",107,0)
 .. I RCBILL,$P(^PRCA(430.3,+$P($G(^PRCA(430,+RCBILL,0)),U,8),0),U,3)'=102 S RCSTAT=2
"RTN","RCDPESR4",108,0)
 .. S RCBILL($P(XMRG,U,2))=RCSTAT
"RTN","RCDPESR4",109,0)
 . I RCREFORM'="",+XMRG>5 S $P(XMRG,U,2)=RCREFORM,^TMP("RCMSG",$J,2,"D",CT)=XMRG
"RTN","RCDPESR4",110,0)
 ;
"RTN","RCDPESR4",111,0)
 K @RCSD
"RTN","RCDPESR4",112,0)
 Q RCMSG
"RTN","RCDPESR4",113,0)
 ;
"RTN","RCDPESR4",114,0)
ADD(RCGBL,RCDMSG,RCMSG,RCBILL,RCERR,RCD) ; Add msg(s) in @RCGBL to
"RTN","RCDPESR4",115,0)
 ;  file 344.5
"RTN","RCDPESR4",116,0)
 ; RCGBL = name of the global used to store the msg data
"RTN","RCDPESR4",117,0)
 ; RCDMSG = Mailman msg number the ERA arrived in.
"RTN","RCDPESR4",118,0)
 ; RCMSG = ien of the existing entry in file 344.5 for multipart ERAs
"RTN","RCDPESR4",119,0)
 ; RCBILL(AR bill number) = list of bills included, pass by REF
"RTN","RCDPESR4",120,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",121,0)
 ;
"RTN","RCDPESR4",122,0)
 ; Errors returned in RCERR and RCERR(n)
"RTN","RCDPESR4",123,0)
 ; Function returns entry # of msg added or "" if none added
"RTN","RCDPESR4",124,0)
 ;
"RTN","RCDPESR4",125,0)
 ;
"RTN","RCDPESR4",126,0)
 N RCHDR,RCTYP,RCIEN
"RTN","RCDPESR4",127,0)
 S RCHDR=$G(^TMP("RCMSGH",$J,0))
"RTN","RCDPESR4",128,0)
 S RCTYP=$P(RCHDR,U)
"RTN","RCDPESR4",129,0)
 S RCIEN=$S($G(RCMSG):RCMSG,1:$$ADDTXN(RCHDR,RCDMSG)) ;File msg hdr
"RTN","RCDPESR4",130,0)
 I RCIEN'>0 S RCERR=3 ;msg hdr can't be filed
"RTN","RCDPESR4",131,0)
 I '$G(RCERR) D LOADDET(RCIEN,RCGBL,RCHDR,.RCBILL,.RCD,.RCERR)
"RTN","RCDPESR4",132,0)
 I '$G(RCERR),'$O(RCERR(0)),RCTYP["835ERA",'$P($G(^RCY(344.5,RCIEN,0)),U,8) D TASKERA^RCDPESR2(RCIEN) ;Task to upd VistA for complete 835ERA only
"RTN","RCDPESR4",133,0)
 ;
"RTN","RCDPESR4",134,0)
 Q $S($G(RCIEN)>0&'$G(RCERR):RCIEN,1:"")
"RTN","RCDPESR4",135,0)
 ;
"RTN","RCDPESR4",136,0)
ADDTXN(RCDATA,RCDMSG) ; Add a trxn for msg in RCDATA to file 344.5
"RTN","RCDPESR4",137,0)
 ; RCDATA = data on the msg hdr record
"RTN","RCDPESR4",138,0)
 ; RCDMSG = Mailman msg number the ERA arrived in
"RTN","RCDPESR4",139,0)
 ;Function returns ien of the new entry in file 344.5 or "" if an error
"RTN","RCDPESR4",140,0)
 ;
"RTN","RCDPESR4",141,0)
 N A,RCY,DLAYGO,DIC,DD,DO,DA,X,Y,Z
"RTN","RCDPESR4",142,0)
 ;
"RTN","RCDPESR4",143,0)
 ;
"RTN","RCDPESR4",144,0)
 S (X,A)=RCDMSG ;Use msg ID as basis for the .01 field
"RTN","RCDPESR4",145,0)
 F Z=1:1 Q:'$D(^RCY(344.5,"B",A))  S A=X_"."_Z
"RTN","RCDPESR4",146,0)
 S X=A
"RTN","RCDPESR4",147,0)
 S DIC(0)="L",DIC="^RCY(344.5,",DLAYGO=344.5
"RTN","RCDPESR4",148,0)
 S DIC("DR")=".02////"_$E($P(RCDATA,U),1,6)_";.03///^S X=""NOW"";.04////0;.06////"_$S($P(RCDATA,U)'["XFR":1,1:0)_$S($P(RCDATA,U,13)'="":";.09////"_+$P(RCDATA,U,13)_";.08////1",1:"")_";.1////2;.11////"_RCDMSG
"RTN","RCDPESR4",149,0)
 I $P(RCDATA,U,6)'="" S DIC("DR")=DIC("DR")_";3.01////"_$P(RCDATA,U,6)
"RTN","RCDPESR4",150,0)
 D FILE^DICN K DO,DD,DLAYGO,DA,DIC
"RTN","RCDPESR4",151,0)
 S RCY=+Y
"RTN","RCDPESR4",152,0)
 ;
"RTN","RCDPESR4",153,0)
 ;
"RTN","RCDPESR4",154,0)
 Q $S(RCY>0:+RCY,1:"")
"RTN","RCDPESR4",155,0)
 ;
"RTN","RCDPESR4",156,0)
LOADDET(RCTDA,RCGBL,RCHDR,RCBILL,RCD,RCERR) ; Load the rest of the text
"RTN","RCDPESR4",157,0)
 ; into the msg
"RTN","RCDPESR4",158,0)
 ; RCTDA = ien in file 344.5
"RTN","RCDPESR4",159,0)
 ; RCGBL = name of the array holding the detail msg text to be loaded
"RTN","RCDPESR4",160,0)
 ; RCHDR = data on ERA hdr record
"RTN","RCDPESR4",161,0)
 ; RCBILL(AR bill number) = list of bills included, pass by REF
"RTN","RCDPESR4",162,0)
 ; RCD = array with formatted hdr data
"RTN","RCDPESR4",163,0)
 ;
"RTN","RCDPESR4",164,0)
 ; OUTPUT: RCERR if any errors found, pass by REF
"RTN","RCDPESR4",165,0)
 ;
"RTN","RCDPESR4",166,0)
 ;
"RTN","RCDPESR4",167,0)
 N RCE,RCDATA,RCMSG,RCFROM,Z,Z0
"RTN","RCDPESR4",168,0)
 K ^TMP("RCTEXT",$J),^TMP("RCRAW",$J)
"RTN","RCDPESR4",169,0)
 M ^TMP("RCTEXT",$J)=@RCGBL@(1,"D")
"RTN","RCDPESR4",170,0)
 M ^TMP("RCRAW",$J)=@RCGBL@(2,"D")
"RTN","RCDPESR4",171,0)
 ;
"RTN","RCDPESR4",172,0)
 S RCDATA=$G(^RCY(344.5,RCTDA,0)),RCMSG=$G(RCD("MSG#")),RCFROM=$G(RCD("FROM"))
"RTN","RCDPESR4",173,0)
 ;
"RTN","RCDPESR4",174,0)
 ; For multi-part ERA, don't update if sequence already filed
"RTN","RCDPESR4",175,0)
 ; Add seq # if not already there
"RTN","RCDPESR4",176,0)
 I $P(RCHDR,U)'["XFR",$P(RCHDR,U,13) Q:$D(^RCY(344.5,RCTDA,"S","B",+$P(RCHDR,U,14)))
"RTN","RCDPESR4",177,0)
 ;
"RTN","RCDPESR4",178,0)
 D STOREM(+$G(RCTDA),"^TMP(""RCTEXT"",$J)","^TMP(""RCRAW"",$J)",.RCE)
"RTN","RCDPESR4",179,0)
 ;
"RTN","RCDPESR4",180,0)
 I $D(RCE("DIERR")) D  ; Extract error
"RTN","RCDPESR4",181,0)
 . N DIE,DA,DR,X,Y
"RTN","RCDPESR4",182,0)
 . D EXTERR^RCDPESR1(.RCERR,.RCE)
"RTN","RCDPESR4",183,0)
 . S:$L($G(RCE)) RCERR(+$O(RCERR(""),-1)+1)=RCE
"RTN","RCDPESR4",184,0)
 . I $D(^RCY(344.5,RCTDA,0)) S DIE="^RCY(344.5,",DR=".1////4",DA=RCTDA D ^DIE
"RTN","RCDPESR4",185,0)
 E  D  ; No error - store rest of data
"RTN","RCDPESR4",186,0)
 . N Z,RCT,RCCT,RCX,RCB ; Add bills included in ERA
"RTN","RCDPESR4",187,0)
 . S RCT=0,RCCT=0,RCX=$J("",4)
"RTN","RCDPESR4",188,0)
 . S Z="" F  S Z=$O(RCBILL(Z)) Q:Z=""  D
"RTN","RCDPESR4",189,0)
 .. N DO,DD,DIC,DLAYGO,X,Y
"RTN","RCDPESR4",190,0)
 .. S:RCT=4 RCCT=RCCT+1,RCB(RCCT)=RCX,RCT=0,RCX=$J("",4) S RCX=RCX_$E($S(+RCBILL(Z):"",1:"*")_Z_$J("",15),1,15),RCT=RCT+1
"RTN","RCDPESR4",191,0)
 .. S DIC(0)="L",DIC("DR")=".02////"_$S($G(RCBILL(Z)):1,1:0),X=Z,DA(1)=RCTDA,DIC="^RCY(344.5,"_DA(1)_",""B"",",DLAYGO=344.54 D FILE^DICN K DO,DD,DLAYGO,DIC
"RTN","RCDPESR4",192,0)
 .. ;
"RTN","RCDPESR4",193,0)
 . I $L(RCX)>4 S RCCT=RCCT+1,RCB(RCCT)=RCX
"RTN","RCDPESR4",194,0)
 . ; Add list of bills to display data
"RTN","RCDPESR4",195,0)
 . I $O(RCB(0)) D WP^DIE(344.5,RCTDA_",",1,"A","RCB")
"RTN","RCDPESR4",196,0)
 . ; Add seq #
"RTN","RCDPESR4",197,0)
 . S DA(1)=RCTDA,DIC="^RCY(344.5,"_DA(1)_",""S"",",DIC(0)="L",X=$P(RCHDR,U,14),DIC("DR")=".02////"_$S($P(RCHDR,U,15)="Y":1,1:0)_";.03///^S X=""NOW"";.04////"_RCMSG,X=+$P(RCHDR,U,14),DLAYGO=344.53
"RTN","RCDPESR4",198,0)
 . D FILE^DICN K DO,DD,DLAYGO,DIC
"RTN","RCDPESR4",199,0)
 . ;
"RTN","RCDPESR4",200,0)
 . I $P(RCHDR,U)["835XFR" D XFR^RCDPESR5(RCTDA,RCFROM,RCMSG,.RCD) Q
"RTN","RCDPESR4",201,0)
 . ;
"RTN","RCDPESR4",202,0)
 . ; Proceed only if not a transfer record
"RTN","RCDPESR4",203,0)
 . I $P(RCDATA,U,9)'="" D  ; Determine if all sequences received yet
"RTN","RCDPESR4",204,0)
 .. N RCOK,RCLAST
"RTN","RCDPESR4",205,0)
 .. S RCOK=1,RCLAST=0
"RTN","RCDPESR4",206,0)
 .. F Z=1:1 Q:'RCOK!RCLAST  D
"RTN","RCDPESR4",207,0)
 ... I 'RCLAST,'$D(^RCY(344.5,RCTDA,"S","B",Z)) S RCOK=0 Q
"RTN","RCDPESR4",208,0)
 ... S Z0=+$O(^RCY(344.5,RCTDA,"S","B",Z,0)),Z0=$G(^RCY(344.5,RCTDA,"S",Z0,0))
"RTN","RCDPESR4",209,0)
 ... I Z0="" S RCOK=0 Q
"RTN","RCDPESR4",210,0)
 ... I $P(Z0,U,2) S RCLAST=1 ; Last sequence received and all before it
"RTN","RCDPESR4",211,0)
 .. ;
"RTN","RCDPESR4",212,0)
 .. I RCOK D
"RTN","RCDPESR4",213,0)
 ... N DA,DIE,DR,X,Y
"RTN","RCDPESR4",214,0)
 ... S DA=RCTDA,DR=".08////0;.1///@",DIE="^RCY(344.5," D ^DIE
"RTN","RCDPESR4",215,0)
 ... I '$O(^RCY(344.5,RCTDA,"B","AV",1,0)) D  ; No valid bills found
"RTN","RCDPESR4",216,0)
 ....;-----
"RTN","RCDPESR4",217,0)
 ....; PRCA*4.5*298 - MailMan message disabled, logic retained - 14 Feb 2014
"RTN","RCDPESR4",218,0)
 ....;N RCE
"RTN","RCDPESR4",219,0)
 ....;S RCE(1)="No valid bills for this site were found in this ERA"
"RTN","RCDPESR4",220,0)
 ....;S RCE(2)="Review/correct the bill #'s on this ERA in your transmission exceptions"
"RTN","RCDPESR4",221,0)
 ....;S RCE(3)="Please contact the Implementation Manager group to report this situation",RCE(4)=" "
"RTN","RCDPESR4",222,0)
 ....;D BULLERA^RCDPESR0("D"_$S($O(^RCY(344.5,RCTDA,2,0)):"F",1:""),RCTDA,$G(RCD("MSG#")),"EDI LBOX - NO VALID BILLS ON ERA "_$E($G(RCD("PAYFROM")),1,20),.RCE,0)
"RTN","RCDPESR4",223,0)
 ....;-----
"RTN","RCDPESR4",224,0)
 .... S DA=RCTDA,DR=".08////1;.1////6",DIE="^RCY(344.5," D ^DIE
"RTN","RCDPESR4",225,0)
 ;
"RTN","RCDPESR4",226,0)
 ;
"RTN","RCDPESR4",227,0)
 K ^TMP("RCTEXT",$J),^TMP("RCRAW",$J)
"RTN","RCDPESR4",228,0)
 Q
"RTN","RCDPESR4",229,0)
 ;
"RTN","RCDPESR4",230,0)
STOREM(RCTDA,RCDISP,RCTEXT,RCE) ;Store msg text in file 344.5
"RTN","RCDPESR4",231,0)
 ;INPUT:
"RTN","RCDPESR4",232,0)
 ; RCTDA = ien of the entry in file 344.5
"RTN","RCDPESR4",233,0)
 ; RCDISP = name of the array where display msg text is retrieved from
"RTN","RCDPESR4",234,0)
 ;   or "@" to delete the text from the display text field
"RTN","RCDPESR4",235,0)
 ; RCTEXT = name of the array where raw msg text is retrieved from
"RTN","RCDPESR4",236,0)
 ;   or "@" to delete the text from the raw msg field
"RTN","RCDPESR4",237,0)
 ;OUTPUT:
"RTN","RCDPESR4",238,0)
 ; RCE = array of errors (RCE("DIERR")) returned, pass by REF
"RTN","RCDPESR4",239,0)
 ;
"RTN","RCDPESR4",240,0)
 N RCZ,X,Y,DIE
"RTN","RCDPESR4",241,0)
 K RCE("DIERR")
"RTN","RCDPESR4",242,0)
 ;
"RTN","RCDPESR4",243,0)
 I $S($G(RCDISP)="@":1,1:$D(@RCDISP)'<10) D
"RTN","RCDPESR4",244,0)
 . F RCZ=1:1:20 D WP^DIE(344.5,RCTDA_",",1,"AK",""_RCDISP_"","RCE") Q:$S('$D(RCE("DIERR")):1,+RCE("DIERR")=1:$G(RCE("DIERR",1))'=110,1:1)  K:RCZ<20 RCE("DIERR") ; On lock error, retry up to 20 times
"RTN","RCDPESR4",245,0)
 ;
"RTN","RCDPESR4",246,0)
 I '$O(RCE("DIERR",0)),$S($G(RCTEXT)="@":1,1:$D(@RCTEXT)'<10) D
"RTN","RCDPESR4",247,0)
 . F RCZ=1:1:20 D WP^DIE(344.5,RCTDA_",",2,"AK",""_RCTEXT_"","RCE") Q:$S('$D(RCE("DIERR")):1,+RCE("DIERR")=1:$G(RCE("DIERR",1))'=110,1:1)  K:RCZ<20 RCE("DIERR") ; On lock error, retry up to 20 times
"RTN","RCDPESR4",248,0)
 Q
"RTN","RCDPESR6")
0^41^B47026238
"RTN","RCDPESR6",1,0)
RCDPESR6 ;ALB/TMK/DWA - Server auto-update file 344.4 - EDI Lockbox ;Jun 06, 2014@19:11:19
"RTN","RCDPESR6",2,0)
 ;;4.5;Accounts Receivable;**173,214,208,230,252,269,271,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPESR6",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPESR6",4,0)
 ;
"RTN","RCDPESR6",5,0)
 ;Reference to $$VALECME^BPSUTIL2 supported by IA# 6139
"RTN","RCDPESR6",6,0)
 ;
"RTN","RCDPESR6",7,0)
UPD3444(RCRTOT) ; Add EOB detail to list in 344.41 for file 344.4 entry RCRTOT
"RTN","RCDPESR6",8,0)
 ; If passed by reference, RCRTOT is returned = "" if errors
"RTN","RCDPESR6",9,0)
 ;
"RTN","RCDPESR6",10,0)
 N RC,RCCOM1,RCCOM2,RCCT,RC1,RC2,RCDPNM,RCEOB,RCNPI1,RCNPI2,DA,DR,DO,DD,DLAYGO,DIC,DIK,X,Y,Z
"RTN","RCDPESR6",11,0)
 S RC=0 F  S RC=$O(^TMP($J,"RCDPEOB",RC)) Q:'RC  S RC1=$G(^(RC)),RC2=$G(^(RC,"EOB")),RCEOB=+RC2 D  Q:'RCRTOT
"RTN","RCDPESR6",12,0)
 . ; Update 344.41 with reference to this record if it doesn't already exist
"RTN","RCDPESR6",13,0)
 . I RCEOB>0 Q:$D(^RCY(344.4,RCRTOT,1,"AC",RCEOB,RC))
"RTN","RCDPESR6",14,0)
 . I RCEOB'>0,$S($P(RC1,U,2)'="":$D(^RCY(344.4,RCRTOT,1,"AD",$P(RC1,U,2),RC)),1:0) Q
"RTN","RCDPESR6",15,0)
 . ; Disregard ECME reject related EEOBs; ECME# can be 7 digits or 12 digits
"RTN","RCDPESR6",16,0)
 . I RCEOB'>0,'$P(RC2,U,2),$$VALECME^BPSUTIL2($P(RC1,U,2)),$$REJECT^IBNCPDPU($P(RC1,U,2),$P(RC1,U,3)) Q
"RTN","RCDPESR6",17,0)
 . ;
"RTN","RCDPESR6",18,0)
 . S DA(1)=RCRTOT,X=RC,DIC="^RCY(344.4,"_DA(1)_",1,",DIC(0)="L",DLAYGO=344.41
"RTN","RCDPESR6",19,0)
 . S DIC("DR")=$S($G(RCEOB)>0:".02////"_RCEOB,1:".05////"_$P(RC1,U,2)_";.07////1")
"RTN","RCDPESR6",20,0)
 . I $P(RC2,U,2)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".03///"_$P(RC2,U,2) ; amt
"RTN","RCDPESR6",21,0)
 . I $P(RC2,U,3)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".04////"_$P(RC2,U,3) ; ins co
"RTN","RCDPESR6",22,0)
 . I $P(RC2,U,4) S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".14////1" ; reversal
"RTN","RCDPESR6",23,0)
 . I $P(RC2,U,5)'="" S DIC("DR")=DIC("DR")_$S($L(DIC("DR")):";",1:"")_".15////^S X=$E($P(RC2,U,5),1,30)" ; Patient name
"RTN","RCDPESR6",24,0)
 . ; Process Billing Prov NPI, Rendering/Servicing NPI & name
"RTN","RCDPESR6",25,0)
 . S (RCCOM1,RCCOM2)=""
"RTN","RCDPESR6",26,0)
 . S RCNPI1=$P(RC2,U,10),RCNPI2=$P(RC2,U,11)
"RTN","RCDPESR6",27,0)
 . I RCNPI1'="",'$$CHKDGT^XUSNPI(RCNPI1) S RCCOM1="The Billing Provider NPI received on the 835 ("_$E(RCNPI1,1,10)_") is not a valid format."
"RTN","RCDPESR6",28,0)
 . I RCNPI2'="",'$$CHKDGT^XUSNPI(RCNPI2) S RCCOM2="The "_$S($P(RC2,U,12)=1:"Rendering",1:"Servicing")_" NPI received on the 835 ("_$E(RCNPI2,1,10)_") is not a valid format."
"RTN","RCDPESR6",29,0)
 . I RCCOM1="" S DIC("DR")=DIC("DR")_";.18////^S X=$P(RC2,U,10)"  ;Billing Provider NPI
"RTN","RCDPESR6",30,0)
 . I RCCOM2="" S DIC("DR")=DIC("DR")_";.19////^S X=$P(RC2,U,11)"  ;Rendering Provider NPI
"RTN","RCDPESR6",31,0)
 . S RCDPNM=$P(RC2,U,13) I $P(RC2,U,14)]"" S RCDPNM=RCDPNM_$S(RCDPNM]"":",",1:"")_$P(RC2,U,14)
"RTN","RCDPESR6",32,0)
 . S DIC("DR")=DIC("DR")_";.2////^S X=$P(RC2,U,12);.21////^S X=RCDPNM"  ; Entity Type Qualifier ^ Last name,First Name
"RTN","RCDPESR6",33,0)
 . S DIC("DR")=DIC("DR")_";.22////^S X=RCCOM1;.23////^S X=RCCOM2"  ;Comment on Billing provider^comment on rendering/servicing provider NPI
"RTN","RCDPESR6",34,0)
 . I $$VALECME^BPSUTIL2($P(RC1,U,4)) D
"RTN","RCDPESR6",35,0)
 .. S DIC("DR")=DIC("DR")_";.24////^S X=$P(RC1,U,4)"  ;Add ECME number (if valid) PRCA*4.5*298
"RTN","RCDPESR6",36,0)
 . D FILE^DICN K DO,DD,DLAYGO,DIC,DIK
"RTN","RCDPESR6",37,0)
 . S RCCT=+Y
"RTN","RCDPESR6",38,0)
 . I RCCT<0 D  Q
"RTN","RCDPESR6",39,0)
 .. S DA=RCRTOT,DIK="^RCY(344.4," D ^DIK
"RTN","RCDPESR6",40,0)
 .. S RCRTOT=0
"RTN","RCDPESR6",41,0)
 . ; If there is no IB EOB record, store the raw data in 344.411
"RTN","RCDPESR6",42,0)
 . I RC1'>0!(RCEOB'>0) D
"RTN","RCDPESR6",43,0)
 .. N RCDATA,RCC,RCDA
"RTN","RCDPESR6",44,0)
 .. S RCC=2,RCDATA(1)=$G(^TMP($J,"RCDPEOB","HDR"))
"RTN","RCDPESR6",45,0)
 .. ; PRCA*4.5*321 - use RC in place of RCCT to allow for gaps in ERA sequence numbers (due to ECME rejects)
"RTN","RCDPESR6",46,0)
 .. S Z=0 F  S Z=$O(^TMP($J,"RCDPEOB",RC,Z)) Q:'Z  S RCC=RCC+1,RCDATA(RCC)=$G(^TMP($J,"RCDPEOB",RC,Z))
"RTN","RCDPESR6",47,0)
 .. S RCDA(1)=RCRTOT,RCDA=RCCT
"RTN","RCDPESR6",48,0)
 .. D WP^DIE(344.41,$$IENS^DILF(.RCDA),1,"A","RCDATA")
"RTN","RCDPESR6",49,0)
 Q
"RTN","RCDPESR6",50,0)
 ;
"RTN","RCDPESR6",51,0)
 ;
"RTN","RCDPESR6",52,0)
ERATOT(RCTDA,RCERR) ; File ERA TOTAL rec in 344.4 from entry RCTDA in 344.5
"RTN","RCDPESR6",53,0)
 ; RCTDA = ien file 344.5
"RTN","RCDPESR6",54,0)
 ; Returns: the ien file 344.4
"RTN","RCDPESR6",55,0)
 ;          RCERR if passed by reference, with error text
"RTN","RCDPESR6",56,0)
 ;          RCERR(1)=duplicated message
"RTN","RCDPESR6",57,0)
 N RCTYPE,RCDA,RCMETH,RCTRACE,RCID,RCDT,RCAMT,RCDUP,RCZ,RCX,RCPAYER,DIE,DIK,DIC,DLAYGO,DD,DO,DR,DA,X,Y,Z0,Z1
"RTN","RCDPESR6",58,0)
 S (RCERR,RCDA)=""
"RTN","RCDPESR6",59,0)
 S RCZ=$G(^RCY(344.5,RCTDA,2,1,0))
"RTN","RCDPESR6",60,0)
 S RCTYPE=$P(RCZ,U),RCTRACE=$P(RCZ,U,8),RCID=$P(RCZ,U,7),RCPAYER=$P(RCZ,U,6),RCMETH=$P(RCZ,U,17)
"RTN","RCDPESR6",61,0)
 ; Need header record as first entry in field
"RTN","RCDPESR6",62,0)
 I RCTYPE'["835ERA" S RCERR="No header record found in message.  An EEOB exception record was created" G ERATOTQ
"RTN","RCDPESR6",63,0)
 ;
"RTN","RCDPESR6",64,0)
 S RCDT=$$FMDT^RCDPESR1($P(RCZ,U,9)),RCAMT=$J(($P(RCZ,U,10)/100),0,2)
"RTN","RCDPESR6",65,0)
 ;Elec ERA's must have a trace # and an ins co id
"RTN","RCDPESR6",66,0)
 I RCTRACE=""!(RCID="") S RCERR="Trace # or ins ID missing on ERA transaction.  An EEOB exception record was created." G ERATOTQ
"RTN","RCDPESR6",67,0)
 ; Make sure it's not already there
"RTN","RCDPESR6",68,0)
 S (RCDUP,Z1)=0
"RTN","RCDPESR6",69,0)
 F  S Z1=$O(^RCY(344.4,"ATRIDUP",$$UP^XLFSTR(RCTRACE),$$UP^XLFSTR(RCID),Z1)) Q:'Z1  S Z0=$G(^RCY(344.4,Z1,0)) I $P(Z0,U,4)=RCDT,+$P(Z0,U,5)=+RCAMT S RCDUP=1 Q
"RTN","RCDPESR6",70,0)
 ;
"RTN","RCDPESR6",71,0)
 I RCDUP,$P(Z0,U,8) D  G ERATOTQ ; Receipt already exists - no update
"RTN","RCDPESR6",72,0)
 . S RCERR="This is a duplicate ERA and has already been posted",RCERR(1)=-2
"RTN","RCDPESR6",73,0)
 I RCDUP S RCERR="DUP",RCERR(1)=$S($P(Z0,U,12)'=$P($G(^RCY(344.5,RCTDA,0)),U,11):$P(Z0,U,12),1:-1) G ERATOTQ
"RTN","RCDPESR6",74,0)
 ;
"RTN","RCDPESR6",75,0)
 S RCX=+$O(^RCY(344.4," "),-1)
"RTN","RCDPESR6",76,0)
 S DIC(0)="L",DIC="^RCY(344.4,",DLAYGO=344.4
"RTN","RCDPESR6",77,0)
 S DIC("DR")=".02////"_RCTRACE_";.03////"_RCID_";.04////"_RCDT_";.05////"_RCAMT_";.06////"_$P(RCZ,U,6)_";.09////0;.12////"_$P($G(^RCY(344.5,RCTDA,0)),U,11)_";.07////"_$$NOW^XLFDT()_";.1////1"
"RTN","RCDPESR6",78,0)
 I RCMETH'="" S DIC("DR")=DIC("DR")_";.15////"_RCMETH
"RTN","RCDPESR6",79,0)
 F RCX=RCX+1:1 L +^RCY(344.4,RCX,0):1 I $T,'$D(^RCY(344.4,RCX,0)) S X=RCX Q
"RTN","RCDPESR6",80,0)
 D FILE^DICN K DO,DLAYGO,DD,DIC
"RTN","RCDPESR6",81,0)
 L -^RCY(344.4,RCX,0)
"RTN","RCDPESR6",82,0)
 S RCDA=$S(Y<0:"",1:+Y)
"RTN","RCDPESR6",83,0)
 I 'RCDA D
"RTN","RCDPESR6",84,0)
 . S RCERR="An error was encountered that prevented the adding of an ERA totals record.  An EEOB exception record was created."
"RTN","RCDPESR6",85,0)
 ;
"RTN","RCDPESR6",86,0)
ERATOTQ Q RCDA
"RTN","RCDPESR6",87,0)
 ;
"RTN","RCDPESR6",88,0)
UPDCON(RCRTOT) ; Add contact information to file 344.4 for an ERA
"RTN","RCDPESR6",89,0)
 N DIE,DA,DR,Z,Q,X,Y,A,TYPE
"RTN","RCDPESR6",90,0)
 S Z=$G(^TMP($J,"RCDPEOB","CONTACT"))
"RTN","RCDPESR6",91,0)
 Q:$TR($P(Z,U,3,9),U)=""
"RTN","RCDPESR6",92,0)
 S DA=RCRTOT,DIE="^RCY(344.4,",DR=""
"RTN","RCDPESR6",93,0)
 ;
"RTN","RCDPESR6",94,0)
 ; If old format do
"RTN","RCDPESR6",95,0)
 I +$P($G(^TMP($J,"RCDPEOB","HDR")),U,16)'>0 D
"RTN","RCDPESR6",96,0)
 . F Q=2:1:8 S DR=DR_$S(DR'="":";3.0",1:"3.0")_(Q-1)_"///"_$S($P(Z,U,Q)="":"@",1:"/"_$P(Z,U,Q))
"RTN","RCDPESR6",97,0)
 ;
"RTN","RCDPESR6",98,0)
 ; If new format (5010) do
"RTN","RCDPESR6",99,0)
 I +$P($G(^TMP($J,"RCDPEOB","HDR")),U,16)>0 D
"RTN","RCDPESR6",100,0)
 . N CNT S CNT=0
"RTN","RCDPESR6",101,0)
 . I $P(Z,U,2)'="" S DR="3.01////"_$P(Z,U,2)
"RTN","RCDPESR6",102,0)
 .I $P(Z,U,3)'="" S DR=DR_$S(DR'="":";3.02",1:"3.02")_"////"_$P(Z,U,3)_";3.03////TE",CNT=CNT+1
"RTN","RCDPESR6",103,0)
 .I $P(Z,U,4)'="" D
"RTN","RCDPESR6",104,0)
 ..S:CNT=1 DR=DR_$S(DR'="":";3.04",1:"3.04")_"////"_$P(Z,U,4)_";3.05////FX"
"RTN","RCDPESR6",105,0)
 ..S:CNT=0 DR=DR_$S(DR'="":";3.02",1:"3.02")_"////"_$P(Z,U,4)_";3.03////FX"
"RTN","RCDPESR6",106,0)
 ..S CNT=CNT+1
"RTN","RCDPESR6",107,0)
 .I $P(Z,U,5)'="" D
"RTN","RCDPESR6",108,0)
 ..S:CNT=2 DR=DR_$S(DR'="":";3.06",1:"3.06")_"////"_$P(Z,U,5)_";3.07////EM"
"RTN","RCDPESR6",109,0)
 ..S:CNT=1 DR=DR_$S(DR'="":";3.04",1:"3.04")_"////"_$P(Z,U,5)_";3.05////EM"
"RTN","RCDPESR6",110,0)
 ..S:CNT=0 DR=DR_$S(DR'="":";3.02",1:"3.02")_"////"_$P(Z,U,5)_";3.03////EM"
"RTN","RCDPESR6",111,0)
 . I $P(Z,U,6)'="" S DR=DR_$S(DR'="":";5.01",1:"5.01")_"////"_$P(Z,U,6)
"RTN","RCDPESR6",112,0)
 D ^DIE
"RTN","RCDPESR6",113,0)
 Q
"RTN","RCDPESR6",114,0)
 ;
"RTN","RCDPESR6",115,0)
UPDADJ(RCRTOT) ; Add ERA level adj data to file 344.4
"RTN","RCDPESR6",116,0)
 N Z,Z0,DA,DIC,DLAYGO,DR,X,Y,DO,DD
"RTN","RCDPESR6",117,0)
 ; Remove any already there
"RTN","RCDPESR6",118,0)
 S Z=0 F  S Z=$O(^RCY(344.4,RCRTOT,2,Z)) Q:'Z  S DA(1)=RCRTOT,DA=Z D ^DIK
"RTN","RCDPESR6",119,0)
 ;
"RTN","RCDPESR6",120,0)
 S Z=0 F  S Z=$O(^TMP($J,"RCDPEOB","ADJ",Z)) Q:'Z  S Z0=$G(^(Z)) D
"RTN","RCDPESR6",121,0)
 . S DIC(0)="L",X=$P(Z0,U,3)_" ",DA(1)=RCRTOT,DIC="^RCY(344.4,"_DA(1)_",2,",DIC("DR")=$S($P(Z0,U,2)'="":".02////"_$P(Z0,U,2),1:"")
"RTN","RCDPESR6",122,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_$S($P(Z0,U,4)'="":".03////"_$J(-$P(Z0,U,4)/100,"",2),1:"")
"RTN","RCDPESR6",123,0)
 . S DIC("DR")=DIC("DR")_$S(DIC("DR")'="":";",1:"")_$S($P(Z0,U,5)'="":".04////"_$P(Z0,U,5),1:""),DLAYGO=344.42
"RTN","RCDPESR6",124,0)
 . S:$O(^RCY(344.4,RCRTOT,2,"B",X,0)) X=""""_X_""""
"RTN","RCDPESR6",125,0)
 . D FILE^DICN K DIC,DO,DD
"RTN","RCDPESR6",126,0)
 Q
"RTN","RCDPESR6",127,0)
 ;
"RTN","RCDPESR6",128,0)
DUPREC(RCET,RCCT,RCSTAR,RCFILE,RCALLDUP,RCEOB,RCBILL,RCDUPEOB) ; Overflow from RCDPESR2
"RTN","RCDPESR6",129,0)
 S ^TMP("RCERR1",$J,RCCT)=" ",^TMP("RCERR1",$J,RCCT,1)=RCET_RCCT_RCSTAR
"RTN","RCDPESR6",130,0)
 S ^TMP("RCERR1",$J,RCCT,2)="(Warning): EEOB detail already filed for "_RCBILL_" - "_$S(RCALLDUP:"Duplicate not stored",1:"EEOB updated"),^TMP("RCERR1",$J,RCCT,3)=" " S:RCFILE=5 ^TMP("RCERR1",$J,RCCT,"*")=^TMP("RCERR1",$J,RCCT,2)
"RTN","RCDPESR6",131,0)
 I RCALLDUP S RCEOB="",RCDUPEOB=-1 Q
"RTN","RCDPESR6",132,0)
 S $P(^TMP($J,"RCDPEOB",RCCT,"EOB"),U)=RCEOB
"RTN","RCDPESR6",133,0)
 Q
"RTN","RCDPESR6",134,0)
 ;
"RTN","RCDPEWL0")
0^65^B242411211
"RTN","RCDPEWL0",1,0)
RCDPEWL0 ;ALB/TMK/PJH - ELECTRONIC EOB WORKLIST ACTIONS ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL0",2,0)
 ;;4.5;Accounts Receivable;**173,208,252,269,298,317,321**;Mar 20, 1995;Build 48
"RTN","RCDPEWL0",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL0",4,0)
 Q
"RTN","RCDPEWL0",5,0)
 ;
"RTN","RCDPEWL0",6,0)
PARAMS(SOURCE) ; Retrieve/Edit/Save View Parameters for ERA Worklist
"RTN","RCDPEWL0",7,0)
 ; Input:   SOURCE      - "MO" - Menu Option
"RTN","RCDPEWL0",8,0)
 ;                        "CV" - Change View Action
"RTN","RCDPEWL0",9,0)
 ; Output: Sort/Filtering Criteria for the worklist sent into ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWL0",10,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCPOST") - ERA Posting Status ("P":Posted/"U":Unposted)
"RTN","RCDPEWL0",11,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCAUTOP")- Auto-Posting Status
"RTN","RCDPEWL0",12,0)
 ;                                            ("A":Auto-Posting/"N":Non Auto-Posting/"B":Both)
"RTN","RCDPEWL0",13,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCMATCH")- ERA Matching Status ("M":Matched/"U":Unmatched)
"RTN","RCDPEWL0",14,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCTYPE") - ERA Claim Type ("M":Medical/"P":Pharmacy/"B":Both)
"RTN","RCDPEWL0",15,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCDT")   - A1^A2 Where:
"RTN","RCDPEWL0",16,0)
 ;                                            A1 - ERA Received EARLIEST DATE (Range Limited Only)
"RTN","RCDPEWL0",17,0)
 ;                                            A2 - ERA Received LATEST DATE (Range Limited Only)
"RTN","RCDPEWL0",18,0)
 ;         ^TMP("RCERA_PARAMS",$J,"RCPAYR") - B1^B2^B3 Where:
"RTN","RCDPEWL0",19,0)
 ;                                            B1 - All Payers/Range of Payers
"RTN","RCDPEWL0",20,0)
 ;                                                 ("A": All/"R":Range of Payers)
"RTN","RCDPEWL0",21,0)
 ;                                            B2 - START WITH PAYER (e.g.,'AET')
"RTN","RCDPEWL0",22,0)
 ;                                                 (Range Limited Only)
"RTN","RCDPEWL0",23,0)
 ;                                            B3 - GO TO PAYER (e.g.,'AETZ') (Range Limited Only)
"RTN","RCDPEWL0",24,0)
 ;
"RTN","RCDPEWL0",25,0)
 ;         ^TMP("RCERA_PVW",$J) - Same layout as ^TMP("RCERA_PARAMS",$J).  This global contains
"RTN","RCDPEWL0",26,0)
 ;                                the sort/filters of the user's preferred view (for ERA main page)
"RTN","RCDPEWL0",27,0)
 ;                                while ^TMP("RCERA_PARAMS",$J) contains the sort/filters of what is
"RTN","RCDPEWL0",28,0)
 ;                                currently displayed.  They may or may not be the same values.
"RTN","RCDPEWL0",29,0)
 ;
"RTN","RCDPEWL0",30,0)
 ;          ^TMP("RCSCRATCH_PVW",$J)   - This global contains the sort/filters of the user's preferred view
"RTN","RCDPEWL0",31,0)
 ;                                for the Scratch Pad.  See PARAMS^RCDPEWLA for the layout.
"RTN","RCDPEWL0",32,0)
 ;
"RTN","RCDPEWL0",33,0)
 ;         RCQUIT=1 if the user exited out, 0 otherwise
"RTN","RCDPEWL0",34,0)
 ;
"RTN","RCDPEWL0",35,0)
 N RCXPAR,USEPVW,X,XX,Y                ; PRCA*4.5*317 Added USEPVW,XX
"RTN","RCDPEWL0",36,0)
 S RCQUIT=0
"RTN","RCDPEWL0",37,0)
 ;
"RTN","RCDPEWL0",38,0)
 ; Ask Date Range Selection when coming straight from the menu option
"RTN","RCDPEWL0",39,0)
 I SOURCE="MO" D  Q:RCQUIT
"RTN","RCDPEWL0",40,0)
 . K ^TMP("RCERA_PARAMS",$J),^TMP("RCERA_PVW",$J),^TMP("RCSCRATCH_PVW",$J)
"RTN","RCDPEWL0",41,0)
 . S RCQUIT=$$DTR()  ; Set date range filter
"RTN","RCDPEWL0",42,0)
 . Q:RCQUIT
"RTN","RCDPEWL0",43,0)
 . ;
"RTN","RCDPEWL0",44,0)
 . ;Retrieve user's saved preferred view (if any)
"RTN","RCDPEWL0",45,0)
 . D GETWLPVW(.RCXPAR)
"RTN","RCDPEWL0",46,0)
 ;
"RTN","RCDPEWL0",47,0)
 ;Only ask user if they want to use their preferred view in the following scenarios:
"RTN","RCDPEWL0",48,0)
 ; a) Source is "MO" and user has a preferred view on file
"RTN","RCDPEWL0",49,0)
 ; b) Source is "CV" (change view action), user has a preferred view but is
"RTN","RCDPEWL0",50,0)
 ;    not using the preferred view criteria at this time.
"RTN","RCDPEWL0",51,0)
 S XX=$$PREFVW(SOURCE)
"RTN","RCDPEWL0",52,0)
 I ((XX=1)&(SOURCE="MO"))!((XX=0)&(SOURCE="CV")) D  Q:USEPVW
"RTN","RCDPEWL0",53,0)
 . ;
"RTN","RCDPEWL0",54,0)
 . ; Ask the user if they want to use the preferred view
"RTN","RCDPEWL0",55,0)
 . S USEPVW=$$ASKUVW()
"RTN","RCDPEWL0",56,0)
 . I USEPVW=-1 S RCQUIT=1 Q
"RTN","RCDPEWL0",57,0)
 . Q:'USEPVW
"RTN","RCDPEWL0",58,0)
 . ;
"RTN","RCDPEWL0",59,0)
 . ; Set the Sort/Filtering Criteria from the preferred view 
"RTN","RCDPEWL0",60,0)
 . M ^TMP("RCERA_PARAMS",$J)=^TMP("RCERA_PVW",$J)
"RTN","RCDPEWL0",61,0)
 ;
"RTN","RCDPEWL0",62,0)
 W !!,"Select parameters for displaying the list of ERAs"
"RTN","RCDPEWL0",63,0)
 S RCQUIT=$$PARAMS2^RCDPEWLD()
"RTN","RCDPEWL0",64,0)
 Q:RCQUIT
"RTN","RCDPEWL0",65,0)
 D SAVEPVW                                  ; Ask if they want to save as preferred view
"RTN","RCDPEWL0",66,0)
 Q
"RTN","RCDPEWL0",67,0)
 ;
"RTN","RCDPEWL0",68,0)
GETWLPVW(RCXPAR) ;  Retrieves the preferred view settings for the ERA worklist
"RTN","RCDPEWL0",69,0)
 ; for the user
"RTN","RCDPEWL0",70,0)
 ; Input:   None
"RTN","RCDPEWL0",71,0)
 ; Output:  RCXPAR()               - Array of preferred view sort/filter criteria
"RTN","RCDPEWL0",72,0)
 ;          ^TMP("RCERA_PARAMS",$J)- Global array of preferred view settings
"RTN","RCDPEWL0",73,0)
 ;          ^TMP("RCERA_PVW")      - A copy of the preferred settings (if any)
"RTN","RCDPEWL0",74,0)
 N XX
"RTN","RCDPEWL0",75,0)
 K RCXPAR
"RTN","RCDPEWL0",76,0)
 D GETLST^XPAR(.RCXPAR,"USR","RCDPE EDI LOCKBOX WORKLIST","I")
"RTN","RCDPEWL0",77,0)
 D:$D(RCXPAR("ERA_POSTING_STATUS")) PVWSAVE(.RCXPAR)
"RTN","RCDPEWL0",78,0)
 ;
"RTN","RCDPEWL0",79,0)
 S XX=$G(RCXPAR("ERA_POSTING_STATUS"))
"RTN","RCDPEWL0",80,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPOST")=$S(XX'="":XX,1:"U")
"RTN","RCDPEWL0",81,0)
 S XX=$G(RCXPAR("ERA_AUTO_POSTING"))
"RTN","RCDPEWL0",82,0)
 S ^TMP("RCERA_PARAMS",$J,"RCAUTOP")=$S(XX'="":XX,1:"B")
"RTN","RCDPEWL0",83,0)
 S XX=$G(RCXPAR("ERA-EFT_MATCH_STATUS"))
"RTN","RCDPEWL0",84,0)
 S ^TMP("RCERA_PARAMS",$J,"RCMATCH")=$S(XX'="":XX,1:"B")
"RTN","RCDPEWL0",85,0)
 S XX=$G(RCXPAR("ERA_CLAIM_TYPE"))
"RTN","RCDPEWL0",86,0)
 ; S ^TMP("RCERA_PARAMS",$J,"RCTYPE")=$S(XX'="":XX,1:"B")     ; PRCA*4.5*321
"RTN","RCDPEWL0",87,0)
 S ^TMP("RCERA_PARAMS",$J,"RCTYPE")=$S(XX'="":XX,1:"A")       ; PRCA*4.5*321 change default to (A)LL
"RTN","RCDPEWL0",88,0)
 S XX=$G(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))
"RTN","RCDPEWL0",89,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=$S(XX'="":$TR(XX,";","^"),1:"A")
"RTN","RCDPEWL0",90,0)
 S XX=$G(RCXPAR("ERA_PAYMENT_TYPE"))                                 ; PRCA*4.5*321 new filter
"RTN","RCDPEWL0",91,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPAYMNT")=$S(XX'="":XX,1:"B")            ; PRCA*4.5*321
"RTN","RCDPEWL0",92,0)
 Q
"RTN","RCDPEWL0",93,0)
 ;
"RTN","RCDPEWL0",94,0)
PVWSAVE(RCXPAR) ; Save a copy of the preferred view on file
"RTN","RCDPEWL0",95,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEWL0",96,0)
 ; Input:   RCXPAR            - array of preferred view setting for the user
"RTN","RCDPEWL0",97,0)
 ; Output:  ^TMP("RCERA_PVW") - a copy of the preferred settings
"RTN","RCDPEWL0",98,0)
 ;
"RTN","RCDPEWL0",99,0)
 K ^TMP("RCERA_PVW",$J)
"RTN","RCDPEWL0",100,0)
 ; only continue if we have answers to all ERA Worklist related preferred view prompts
"RTN","RCDPEWL0",101,0)
 Q:'$D(RCXPAR("ERA_POSTING_STATUS"))
"RTN","RCDPEWL0",102,0)
 Q:'$D(RCXPAR("ERA_AUTO_POSTING"))
"RTN","RCDPEWL0",103,0)
 Q:'$D(RCXPAR("ERA-EFT_MATCH_STATUS"))
"RTN","RCDPEWL0",104,0)
 Q:'$D(RCXPAR("ERA_CLAIM_TYPE"))
"RTN","RCDPEWL0",105,0)
 Q:'$D(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"))
"RTN","RCDPEWL0",106,0)
 Q:'$D(RCXPAR("ERA_PAYMENT_TYPE"))  ; PRCA*4.5*321
"RTN","RCDPEWL0",107,0)
 ;
"RTN","RCDPEWL0",108,0)
 S ^TMP("RCERA_PVW",$J,"RCPOST")=RCXPAR("ERA_POSTING_STATUS")
"RTN","RCDPEWL0",109,0)
 S ^TMP("RCERA_PVW",$J,"RCAUTOP")=RCXPAR("ERA_AUTO_POSTING")
"RTN","RCDPEWL0",110,0)
 S ^TMP("RCERA_PVW",$J,"RCMATCH")=RCXPAR("ERA-EFT_MATCH_STATUS")
"RTN","RCDPEWL0",111,0)
 S ^TMP("RCERA_PVW",$J,"RCTYPE")=RCXPAR("ERA_CLAIM_TYPE")
"RTN","RCDPEWL0",112,0)
 S ^TMP("RCERA_PVW",$J,"RCPAYR")=$TR(RCXPAR("ALL_PAYERS/RANGE_OF_PAYERS"),";","^")
"RTN","RCDPEWL0",113,0)
 S ^TMP("RCERA_PVW",$J,"RCPAYMNT")=RCXPAR("ERA_PAYMENT_TYPE") ; PRCA*4.5*321 new filter
"RTN","RCDPEWL0",114,0)
 Q
"RTN","RCDPEWL0",115,0)
 ;
"RTN","RCDPEWL0",116,0)
PREFVW(SOURCE) ; Checks to see if the user has a preferred view
"RTN","RCDPEWL0",117,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEWL0",118,0)
 ; When source is 'CV', checks to see if the preferred view is being used
"RTN","RCDPEWL0",119,0)
 ; Input:   SOURCE                  - 'MO' - When called from the Worklist menu
"RTN","RCDPEWL0",120,0)
 ;                                           option
"RTN","RCDPEWL0",121,0)
 ;                                    'CV' - When called from the Change View
"RTN","RCDPEWL0",122,0)
 ;                                           action
"RTN","RCDPEWL0",123,0)
 ;
"RTN","RCDPEWL0",124,0)
 ;          ^TMP("RCERA_PVW")       - Global array of preferred view settings
"RTN","RCDPEWL0",125,0)
 ;          ^TMP("RCERA_PARAMS")    - Global array of currently in use defaults
"RTN","RCDPEWL0",126,0)
 ; Returns: 1 - User has preferred view if SOURCE is 'MO' or is using
"RTN","RCDPEWL0",127,0)
 ;              their preferred view if SOURCE is 'CV'
"RTN","RCDPEWL0",128,0)
 ;          0 - User is not using their preferred view
"RTN","RCDPEWL0",129,0)
 ;         -1 - User does not have a preferred view 
"RTN","RCDPEWL0",130,0)
 I SOURCE="MO" Q $S($D(^TMP("RCERA_PVW",$J)):1,1:-1)
"RTN","RCDPEWL0",131,0)
 Q:'$D(^TMP("RCERA_PVW",$J)) -1  ; No stored preferred view
"RTN","RCDPEWL0",132,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))'=$G(^TMP("RCERA_PVW",$J,"RCPOST")) 0
"RTN","RCDPEWL0",133,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))'=$G(^TMP("RCERA_PVW",$J,"RCAUTOP")) 0
"RTN","RCDPEWL0",134,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCMATCH"))'=$G(^TMP("RCERA_PVW",$J,"RCMATCH")) 0
"RTN","RCDPEWL0",135,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))'=$G(^TMP("RCERA_PVW",$J,"RCTYPE")) 0
"RTN","RCDPEWL0",136,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))'=$G(^TMP("RCERA_PVW",$J,"RCPAYR")) 0
"RTN","RCDPEWL0",137,0)
 Q:$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))'=$G(^TMP("RCERA_PVW",$J,"RCPAYMNT")) 0  ; PRCA*4.5*321
"RTN","RCDPEWL0",138,0)
 Q 1
"RTN","RCDPEWL0",139,0)
 ;
"RTN","RCDPEWL0",140,0)
ASKUVW() ;EP from PARAMS^RCDPEWLA, PARAMS^RCDPEAA1
"RTN","RCDPEWL0",141,0)
 ; Prompts the user to see if they want to use their preferred view
"RTN","RCDPEWL0",142,0)
 ; PRCA*4.5*317 added function
"RTN","RCDPEWL0",143,0)
 ; Input:   None
"RTN","RCDPEWL0",144,0)
 ; Returns: 1 - User wants to use their preferred view
"RTN","RCDPEWL0",145,0)
 ;          0 - User does not want to use their preferred view
"RTN","RCDPEWL0",146,0)
 ;         -1 - User typed '^'
"RTN","RCDPEWL0",147,0)
 N DIR,DTOUT,DUOUT
"RTN","RCDPEWL0",148,0)
 S DIR(0)="Y"
"RTN","RCDPEWL0",149,0)
 S DIR("A")="Use preferred view"
"RTN","RCDPEWL0",150,0)
 S DIR("B")="N"
"RTN","RCDPEWL0",151,0)
 W !
"RTN","RCDPEWL0",152,0)
 D ^DIR
"RTN","RCDPEWL0",153,0)
 I $D(DTOUT)!$D(DUOUT) Q -1
"RTN","RCDPEWL0",154,0)
 Q:Y 1   ; response is YES
"RTN","RCDPEWL0",155,0)
 Q 0
"RTN","RCDPEWL0",156,0)
 ;
"RTN","RCDPEWL0",157,0)
SAVEPVW ; Option to save as User Preferred View
"RTN","RCDPEWL0",158,0)
 ; PRCA*4.5*317 added subroutine
"RTN","RCDPEWL0",159,0)
 ; Input:   ^TMP("RCERA_PARAMS")    - Global array of current worklist settings
"RTN","RCDPEWL0",160,0)
 ; Output   Current worklist settings set as preferred view (potentially)
"RTN","RCDPEWL0",161,0)
 N DIR,DTOUT,DUOUT,RCERROR,XX
"RTN","RCDPEWL0",162,0)
 K DIR
"RTN","RCDPEWL0",163,0)
 S DIR(0)="YA",DIR("B")="NO"
"RTN","RCDPEWL0",164,0)
 S DIR("A")="Do you want to save this as your preferred view (Y/N)? "
"RTN","RCDPEWL0",165,0)
 W !
"RTN","RCDPEWL0",166,0)
 D ^DIR
"RTN","RCDPEWL0",167,0)
 Q:Y'=1
"RTN","RCDPEWL0",168,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCPOST")
"RTN","RCDPEWL0",169,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_POSTING_STATUS",XX,.RCERROR)
"RTN","RCDPEWL0",170,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCAUTOP")
"RTN","RCDPEWL0",171,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_AUTO_POSTING",XX,.RCERROR)
"RTN","RCDPEWL0",172,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCMATCH")
"RTN","RCDPEWL0",173,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA-EFT_MATCH_STATUS",XX,.RCERROR)
"RTN","RCDPEWL0",174,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCTYPE")
"RTN","RCDPEWL0",175,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_CLAIM_TYPE",XX,.RCERROR)
"RTN","RCDPEWL0",176,0)
 S XX=$TR(^TMP("RCERA_PARAMS",$J,"RCPAYR"),"^",";")
"RTN","RCDPEWL0",177,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ALL_PAYERS/RANGE_OF_PAYERS",XX,.RCERROR)
"RTN","RCDPEWL0",178,0)
 S XX=^TMP("RCERA_PARAMS",$J,"RCPAYMNT")                                               ; PRCA*4.5*321
"RTN","RCDPEWL0",179,0)
 D EN^XPAR(DUZ_";VA(200,","RCDPE EDI LOCKBOX WORKLIST","ERA_PAYMENT_TYPE",XX,.RCERROR) ; PRCA*4.5*321
"RTN","RCDPEWL0",180,0)
 ;
"RTN","RCDPEWL0",181,0)
 K ^TMP("RCERA_PVW",$J)
"RTN","RCDPEWL0",182,0)
 M ^TMP("RCERA_PVW",$J)=^TMP("RCERA_PARAMS",$J)  ; capture new preferred settings for comparison
"RTN","RCDPEWL0",183,0)
 Q
"RTN","RCDPEWL0",184,0)
 ;
"RTN","RCDPEWL0",185,0)
DTR() ; Date Range Selection
"RTN","RCDPEWL0",186,0)
 ; Input:   ^TMP("RCERA_PARAMS",$J,"RCDT") - Current selected Date Range (if any)
"RTN","RCDPEWL0",187,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCDT") - Updated Selected Date Range
"RTN","RCDPEWL0",188,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWL0",189,0)
DTR1 ;
"RTN","RCDPEWL0",190,0)
 N DIR,DTOUT,DTQUIT,DUOUT,Y,FROM,TO,RCDTRNG
"RTN","RCDPEWL0",191,0)
 S ^TMP("RCERA_PARAMS",$J,"RCDT")="0^"_DT
"RTN","RCDPEWL0",192,0)
 K DIR S DIR(0)="YA"
"RTN","RCDPEWL0",193,0)
 S DIR("A")="Limit the selection to a date range when the ERA was received?: "
"RTN","RCDPEWL0",194,0)
 S DIR("B")="NO"
"RTN","RCDPEWL0",195,0)
 S DIR("?")="Enter YES to specify a date range filter."
"RTN","RCDPEWL0",196,0)
 W !
"RTN","RCDPEWL0",197,0)
 D ^DIR
"RTN","RCDPEWL0",198,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWL0",199,0)
 I Y D  G:DTQUIT DTR1
"RTN","RCDPEWL0",200,0)
 . S DTQUIT=0
"RTN","RCDPEWL0",201,0)
 . S FROM=$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),"^",1)
"RTN","RCDPEWL0",202,0)
 . S TO=$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),"^",2)
"RTN","RCDPEWL0",203,0)
 . W !
"RTN","RCDPEWL0",204,0)
 . S RCDTRNG=$$DTRANGE(FROM,TO)
"RTN","RCDPEWL0",205,0)
 . I RCDTRNG="^" S DTQUIT=1 Q
"RTN","RCDPEWL0",206,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCDT")=RCDTRNG
"RTN","RCDPEWL0",207,0)
 Q 0
"RTN","RCDPEWL0",208,0)
 ;
"RTN","RCDPEWL0",209,0)
DTRANGE(DEFFROM,DEFTO) ; Asks for and returns a Date Range
"RTN","RCDPEWL0",210,0)
 ; Input: DEFFROM - Default FROM date
"RTN","RCDPEWL0",211,0)
 ;        DEFTO   - Default TO date
"RTN","RCDPEWL0",212,0)
 ;Output: From_Date^To_Date (YYYMMDD^YYYDDMM) or "^" (timeout or ^ entered)
"RTN","RCDPEWL0",213,0)
 ;
"RTN","RCDPEWL0",214,0)
 N DIR,Y,DTOUT,DUOUT,RCDFR,START
"RTN","RCDPEWL0",215,0)
 S RCQUIT=0
"RTN","RCDPEWL0",216,0)
 S DIR(0)="DAE^:"_DT_":E"
"RTN","RCDPEWL0",217,0)
 S DIR("A")="Earliest date: "
"RTN","RCDPEWL0",218,0)
 S DIR("?")="Enter the start of the date range."
"RTN","RCDPEWL0",219,0)
 S:($G(DEFFROM)) DIR("B")=$$FMTE^XLFDT(DEFFROM,2)
"RTN","RCDPEWL0",220,0)
 D ^DIR
"RTN","RCDPEWL0",221,0)
 I $D(DTOUT)!$D(DUOUT) Q "^"
"RTN","RCDPEWL0",222,0)
 S RCDFR=Y,START=$$FMTE^XLFDT(RCDFR,"2DZ")
"RTN","RCDPEWL0",223,0)
 K DIR
"RTN","RCDPEWL0",224,0)
 S DIR(0)="DAE^"_RCDFR_":"_DT_":E"
"RTN","RCDPEWL0",225,0)
 S DIR("A")="Latest date: "
"RTN","RCDPEWL0",226,0)
 S DIR("?",1)="Enter the end of the date range. The ending date must be greater than "
"RTN","RCDPEWL0",227,0)
 S DIR("?")="or equal to "_START_"."
"RTN","RCDPEWL0",228,0)
 S:($G(DEFTO)) DIR("B")=$$FMTE^XLFDT(DEFTO,2)
"RTN","RCDPEWL0",229,0)
 D ^DIR
"RTN","RCDPEWL0",230,0)
 I $D(DTOUT)!$D(DUOUT) Q "^"
"RTN","RCDPEWL0",231,0)
 Q (RCDFR_"^"_Y)
"RTN","RCDPEWL0",232,0)
 ;
"RTN","RCDPEWL0",233,0)
FILTER(IEN344P4) ; Returns 1 if record in entry IEN344P4 in 344.4 passes
"RTN","RCDPEWL0",234,0)
 ; the edits for the worklist selection of ERAs
"RTN","RCDPEWL0",235,0)
 ; Parameters found in ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWL0",236,0)
 N OK,RCPOST,RCAUTOP,RCMATCH,RCTYPE,RCDFR,RCDTO,RCPAYFR,RCPAYMNT,RCPAYTO,RCPAYR,RC0,RC4
"RTN","RCDPEWL0",237,0)
 S OK=1,RC0=$G(^RCY(344.4,IEN344P4,0)),RC4=$G(^RCY(344.4,IEN344P4,4))
"RTN","RCDPEWL0",238,0)
 ;
"RTN","RCDPEWL0",239,0)
 S RCMATCH=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH")),RCPOST=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWL0",240,0)
 S RCAUTOP=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP")),RCTYPE=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWL0",241,0)
 S RCDFR=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U),RCDTO=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U,2)
"RTN","RCDPEWL0",242,0)
 S RCPAYR=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U),RCPAYFR=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U,2),RCPAYTO=$P($G(^TMP("RCERA_PARAMS",$J,"RCPAYR")),U,3)
"RTN","RCDPEWL0",243,0)
 S RCPAYMNT=$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))    ; PRCA*4.5*321
"RTN","RCDPEWL0",244,0)
 ;
"RTN","RCDPEWL0",245,0)
 ; Post status
"RTN","RCDPEWL0",246,0)
 I $S(RCPOST="B":0,RCPOST="U":$P(RC0,U,14),1:'$P(RC0,U,14)) S OK=0 G FQ
"RTN","RCDPEWL0",247,0)
 ; Auto-Posting status
"RTN","RCDPEWL0",248,0)
 I $S(RCAUTOP="B":0,RCAUTOP="A":($P(RC4,U,2)=""),1:($P(RC4,U,2)'="")) S OK=0 G FQ
"RTN","RCDPEWL0",249,0)
 ; Match status
"RTN","RCDPEWL0",250,0)
 I $S(RCMATCH="B":0,RCMATCH="N":$P(RC0,U,9),1:'$P(RC0,U,9)) S OK=0 G FQ
"RTN","RCDPEWL0",251,0)
 ; Medical/Pharmacy/Tricare Claim
"RTN","RCDPEWL0",252,0)
 ; I $S(RCTYPE="B":0,RCTYPE="M":$$PHARM^RCDPEWLP(IEN344P4),1:'$$PHARM^RCDPEWLP(IEN344P4)) S OK=0 G FQ
"RTN","RCDPEWL0",253,0)
 I RCTYPE'="A" D  I 'OK G FQ
"RTN","RCDPEWL0",254,0)
 . N RCFLAG
"RTN","RCDPEWL0",255,0)
 . I '$$PAYFLAGS^RCDPEWL7(IEN344P4,.RCFLAG) S OK=0 Q
"RTN","RCDPEWL0",256,0)
 . I RCTYPE="P",'RCFLAG("P") S OK=0 Q
"RTN","RCDPEWL0",257,0)
 . I RCTYPE="T",'RCFLAG("T") S OK=0 Q
"RTN","RCDPEWL0",258,0)
 . I RCTYPE="M",(RCFLAG("P")!RCFLAG("T")) S OK=0
"RTN","RCDPEWL0",259,0)
 ; dt rec'd range
"RTN","RCDPEWL0",260,0)
 I $S(RCDFR=0:0,1:$P(RC0,U,7)\1<RCDFR) S OK=0 G FQ
"RTN","RCDPEWL0",261,0)
 I $S(RCDTO=DT:0,1:$P(RC0,U,7)\1>RCDTO) S OK=0 G FQ
"RTN","RCDPEWL0",262,0)
 ; Payer name
"RTN","RCDPEWL0",263,0)
 I RCPAYR'="A" D  G:'OK FQ
"RTN","RCDPEWL0",264,0)
 . N Q
"RTN","RCDPEWL0",265,0)
 . S Q=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEWL0",266,0)
 . I $S(Q=RCPAYFR:1,Q=RCPAYTO:1,Q]RCPAYFR:RCPAYTO]Q,1:0) Q
"RTN","RCDPEWL0",267,0)
 . S OK=0
"RTN","RCDPEWL0",268,0)
 ; PRCA*4.5*321 - Start modified code block
"RTN","RCDPEWL0",269,0)
 ; Zero amount or payment
"RTN","RCDPEWL0",270,0)
 I RCPAYMNT'="B" D  ;
"RTN","RCDPEWL0",271,0)
 . I RCPAYMNT="Z",$P(RC0,U,5) S OK=0 Q
"RTN","RCDPEWL0",272,0)
 . I RCPAYMNT="P",'$P(RC0,U,5) S OK=0
"RTN","RCDPEWL0",273,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEWL0",274,0)
 ;
"RTN","RCDPEWL0",275,0)
FQ Q OK
"RTN","RCDPEWL0",276,0)
 ;
"RTN","RCDPEWL0",277,0)
SPLIT ; Split line in ERA list
"RTN","RCDPEWL0",278,0)
 ; input - RCSCR = ien of 344.49 and 344.4
"RTN","RCDPEWL0",279,0)
 N RCLINE,RCZ,RCDA,Q,Q0,Z,Z0,DIR,X,Y,CT,L,L1,RCONE,RCQUIT
"RTN","RCDPEWL0",280,0)
 D FULL^VALM1
"RTN","RCDPEWL0",281,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G SPLITQ   ;prca*4.5*298  auto-posted ERAs cannot enter Split/Edit action
"RTN","RCDPEWL0",282,0)
 I $G(RCSCR("NOEDIT")) D NOEDIT^RCDPEWL G SPLITQ
"RTN","RCDPEWL0",283,0)
 W !!,"Select the entry that has a line you need to Split/Edit",!
"RTN","RCDPEWL0",284,0)
 D SEL^RCDPEWL(.RCDA)
"RTN","RCDPEWL0",285,0)
 S Z=+$O(RCDA(0)) G:'$G(RCDA(Z)) SPLITQ
"RTN","RCDPEWL0",286,0)
 S RCLINE=+RCDA(Z),Z0=+$O(^TMP("RCDPE-EOB_WLDX",$J,Z_".999"),-1)
"RTN","RCDPEWL0",287,0)
 S RCZ=Z F  S RCZ=$O(^TMP("RCDPE-EOB_WLDX",$J,RCZ)) Q:'RCZ!(RCZ\1'=Z)  D
"RTN","RCDPEWL0",288,0)
 . S Q=$P($G(^TMP("RCDPE-EOB_WLDX",$J,RCZ)),U,2)
"RTN","RCDPEWL0",289,0)
 . Q:'Q
"RTN","RCDPEWL0",290,0)
 . S RCZ(RCZ)=Q
"RTN","RCDPEWL0",291,0)
 . S Q0=0 F  S Q0=$O(^RCY(344.49,RCSCR,1,Q,1,Q0)) Q:'Q0  I "01"[$P($G(^(Q0,0)),U,2) K RCZ(RCZ) Q
"RTN","RCDPEWL0",292,0)
 I '$O(RCZ(0)) D  G SPLITQ
"RTN","RCDPEWL0",293,0)
 . S DIR(0)="EA",DIR("A",1)="This entry has no lines available to Edit/Split",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL0",294,0)
 S RCQUIT=0
"RTN","RCDPEWL0",295,0)
 I $P($G(^RCY(344.49,RCSCR,1,RCLINE,0)),U,13) D  G:RCQUIT SPLITQ
"RTN","RCDPEWL0",296,0)
 . S DIR("A",1)="WARNING!  This line has already been VERIFIED",DIR("A")="Are you sure you want to continue?: ",DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL0",297,0)
 . I Y'=1 S RCQUIT=1
"RTN","RCDPEWL0",298,0)
 S CT=0,CT=CT+1,DIR("?",CT)="Enter the line # that you want to split or edit:",RCONE=1
"RTN","RCDPEWL0",299,0)
 S L=Z F  S L=$O(RCZ(L)) Q:'L  D
"RTN","RCDPEWL0",300,0)
 . S L1=+$G(^TMP("RCDPE-EOB_WLDX",$J,L))
"RTN","RCDPEWL0",301,0)
 . S CT=CT+1
"RTN","RCDPEWL0",302,0)
 . S DIR("?",CT)=$G(^TMP("RCDPE-EOB_WL",$J,L1,0)),CT=CT+1,DIR("?",CT)=$G(^TMP("RCDPE-EOB_WL",$J,L1+1,0)) S RCONE(1)=$S(RCONE:L,1:"") S RCONE=0
"RTN","RCDPEWL0",303,0)
 S DIR("?")=" ",Y=-1
"RTN","RCDPEWL0",304,0)
 I $G(RCONE(1)) S Y=+RCONE(1) K DIR G:'Y SPLITQ
"RTN","RCDPEWL0",305,0)
 I '$G(RCONE(1)) D  K DIR I $D(DTOUT)!$D(DUOUT)!(Y\1'=Z) G SPLITQ
"RTN","RCDPEWL0",306,0)
 . F  S DIR(0)="NAO^"_(Z+.001)_":"_Z0_":3",DIR("A")="Which line of entry "_Z_" do you want to Split/Edit?: " S:$G(RCONE(1))'="" DIR("B")=RCONE(1) D ^DIR Q:'Y!$D(DUOUT)!$D(DTOUT)  D  Q:Y>0
"RTN","RCDPEWL0",307,0)
 .. I '$D(^TMP("RCDPE-EOB_WLDX",$J,Y)) W !!,"Line "_Y_" does NOT exist - TRY AGAIN",! S Y=-1 Q
"RTN","RCDPEWL0",308,0)
 .. I '$D(RCZ(Y)) W !!,"Line "_Y_" has been used in a DISTRIBUTE ADJ action and can't be edited",! S Y=-1 Q
"RTN","RCDPEWL0",309,0)
 .. S Q=+$O(^RCY(344.49,RCSCR,1,"B",Y,0))
"RTN","RCDPEWL0",310,0)
 ;
"RTN","RCDPEWL0",311,0)
 K ^TMP("RCDPE_SPLIT_REBLD",$J)
"RTN","RCDPEWL0",312,0)
 D SPLIT^RCDPEWL3(RCSCR,+Y)
"RTN","RCDPEWL0",313,0)
 I $G(^TMP("RCDPE_SPLIT_REBLD",$J)) K ^TMP("RCDPE_SPLIT_REBLD",$J) D BLD^RCDPEWL1($G(^TMP($J,"RC_SORTPARM")))
"RTN","RCDPEWL0",314,0)
 ;
"RTN","RCDPEWL0",315,0)
SPLITQ S VALMBCK="R"
"RTN","RCDPEWL0",316,0)
 Q
"RTN","RCDPEWL0",317,0)
 ;
"RTN","RCDPEWL0",318,0)
PRTERA ; View/prt
"RTN","RCDPEWL0",319,0)
 N DIC,X,Y,RCSCR
"RTN","RCDPEWL0",320,0)
 S DIC="^RCY(344.4,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL0",321,0)
 Q:Y'>0
"RTN","RCDPEWL0",322,0)
 S RCSCR=+Y
"RTN","RCDPEWL0",323,0)
 D PRERA1
"RTN","RCDPEWL0",324,0)
 Q
"RTN","RCDPEWL0",325,0)
 ;
"RTN","RCDPEWL0",326,0)
PRERA ; RCSCR is assumed to be defined
"RTN","RCDPEWL0",327,0)
 D FULL^VALM1 ; Protocol entry
"RTN","RCDPEWL0",328,0)
PRERA1 ; Option entry
"RTN","RCDPEWL0",329,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC,POP,DIR,X,Y,RCERADET
"RTN","RCDPEWL0",330,0)
 D EXCWARN^RCDPEWLP(RCSCR)
"RTN","RCDPEWL0",331,0)
 S DIR("?",1)="Including expanded detail will significantly increase the size of this report",DIR("?",2)="IF YOU CHOOSE TO INCLUDE IT, ALL PAYMENT DETAILS FOR EACH EEOB WILL BE"
"RTN","RCDPEWL0",332,0)
 S DIR("?")="listed.  If you want just summary data for each EEOB, do NOT include it."
"RTN","RCDPEWL0",333,0)
 S DIR(0)="YA",DIR("A")="Do you want to include expanded EEOB detail?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEWL0",334,0)
 I $D(DUOUT)!$D(DTOUT) G PRERAQ
"RTN","RCDPEWL0",335,0)
 S RCERADET=+Y
"RTN","RCDPEWL0",336,0)
 S %ZIS="QM" D ^%ZIS G:POP PRERAQ
"RTN","RCDPEWL0",337,0)
 I $D(IO("Q")) D  G PRERAQ
"RTN","RCDPEWL0",338,0)
 . S ZTRTN="VPERA^RCDPEWL0("_RCSCR_","_RCERADET_")",ZTDESC="AR - Print ERA From Worklist"
"RTN","RCDPEWL0",339,0)
 . D ^%ZTLOAD
"RTN","RCDPEWL0",340,0)
 . W !!,$S($D(ZTSK):"Your task # "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEWL0",341,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEWL0",342,0)
 U IO
"RTN","RCDPEWL0",343,0)
 D VPERA(RCSCR,RCERADET)
"RTN","RCDPEWL0",344,0)
 Q
"RTN","RCDPEWL0",345,0)
 ;
"RTN","RCDPEWL0",346,0)
VPERA(RCSCR,RCERADET) ; Queued entry
"RTN","RCDPEWL0",347,0)
 ; RCSCR = ien of entry in file 344.4
"RTN","RCDPEWL0",348,0)
 ; RCERADET = 1 if inclusion of all EOB details from file 361.1 is
"RTN","RCDPEWL0",349,0)
 ;  desired, 0 if not
"RTN","RCDPEWL0",350,0)
 N Z,Z0,RCSTOP,RCZ,RCPG,RCDOT,RCDIQ,RCDIQ1,RCDIQ2,RCXM1,RC,RCSCR1,RC3611
"RTN","RCDPEWL0",351,0)
 K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT"),^TMP($J,"RC_SUMALL")
"RTN","RCDPEWL0",352,0)
 S (RCSTOP,RCPG)=0,RCDOT="",$P(RCDOT,".",79)=""
"RTN","RCDPEWL0",353,0)
 D GETS^DIQ(344.4,RCSCR_",","*","IEN","RCDIQ")
"RTN","RCDPEWL0",354,0)
 D TXT0^RCDPEX31(RCSCR,.RCDIQ,.RCXM1,.RC) ; Get top level 0-node captioned flds
"RTN","RCDPEWL0",355,0)
 I $O(^RCY(344.4,RCSCR,2,0)) S RC=RC+1,RCXM1(RC)="  **ERA LEVEL ADJUSTMENTS**"
"RTN","RCDPEWL0",356,0)
 S RCSCR1=0 F  S RCSCR1=$O(^RCY(344.4,RCSCR,2,RCSCR1)) Q:'RCSCR1  D
"RTN","RCDPEWL0",357,0)
 . K RCDIQ2
"RTN","RCDPEWL0",358,0)
 . D GETS^DIQ(344.42,RCSCR1_","_RCSCR_",","*","IEN","RCDIQ2")
"RTN","RCDPEWL0",359,0)
 . D TXT2^RCDPEX31(RCSCR,RCSCR1,.RCDIQ2,.RCXM1,.RC) ; Get top level ERA adjs
"RTN","RCDPEWL0",360,0)
 S RCSCR1=0 F  S RCSCR1=$O(^RCY(344.4,RCSCR,1,RCSCR1)) Q:'RCSCR1  D
"RTN","RCDPEWL0",361,0)
 . K RCDIQ1
"RTN","RCDPEWL0",362,0)
 . D GETS^DIQ(344.41,RCSCR1_","_RCSCR_",","*","IE","RCDIQ1")  ;PRCA*4.5*298  need to retrieve all fields even if null  (changed "IEN" to "IE")
"RTN","RCDPEWL0",363,0)
 . D TXT00^RCDPEX31(RCSCR,RCSCR1,.RCDIQ1,.RCXM1,.RC)
"RTN","RCDPEWL0",364,0)
 . ;HIPAA 5010
"RTN","RCDPEWL0",365,0)
 . N PNAME4
"RTN","RCDPEWL0",366,0)
 . S PNAME4=$$PNM4^RCDPEWL1(RCSCR,RCSCR1)
"RTN","RCDPEWL0",367,0)
 . I $L(PNAME4)<32 D
"RTN","RCDPEWL0",368,0)
 . .S RC=RC+1,RCXM1(RC-1)=$E("PATIENT: "_PNAME4_$J("",41),1,41)_"CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,RCSCR1),RCXM1(RC)=" "
"RTN","RCDPEWL0",369,0)
 . I $L(PNAME4)>31 D
"RTN","RCDPEWL0",370,0)
 . .S RC=RC+1,RCXM1(RC-1)=$J("",41)_"CLAIM #: "_$$BILLREF^RCDPESR0(RCSCR,RCSCR1)
"RTN","RCDPEWL0",371,0)
 . .S RC=RC+1,RCXM1(RC-1)=$E("PATIENT: "_PNAME4,1,78),RCXM1(RC)=" "
"RTN","RCDPEWL0",372,0)
 . D PROV^RCDPEWLD(RCSCR,RCSCR1,.RCXM1,.RC)
"RTN","RCDPEWL0",373,0)
 . S RC3611=$P($G(^RCY(344.4,RCSCR,1,RCSCR1,0)),U,2)
"RTN","RCDPEWL0",374,0)
 . I RCERADET D
"RTN","RCDPEWL0",375,0)
 .. I 'RC3611 D  Q
"RTN","RCDPEWL0",376,0)
 ... D DISP^RCDPESR0("^RCY(344.4,"_RCSCR_",1,"_RCSCR1_",1)","^TMP($J,""RC_SUMRAW"")",1,"^TMP($J,""RC_SUMOUT"")",75,1)
"RTN","RCDPEWL0",377,0)
 ..;
"RTN","RCDPEWL0",378,0)
 .. E  D  ; Detail record is in 361.1
"RTN","RCDPEWL0",379,0)
 ... K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEWL0",380,0)
 ... D GETEOB^IBCECSA6(RC3611,2)
"RTN","RCDPEWL0",381,0)
 ... I $O(^IBM(361.1,RC3611,"ERR",0)) D GETERR^RCDPEDS(RC3611,+$O(^TMP("PRCA_EOB",$J,RC3611," "),-1)) ; get filing errors
"RTN","RCDPEWL0",382,0)
 ... S Z=0 F  S Z=$O(^TMP("PRCA_EOB",$J,RC3611,Z)) Q:'Z  S RC=RC+1,^TMP($J,"RC_SUMOUT",RC)=$G(^TMP("PRCA_EOB",$J,RC3611,Z))
"RTN","RCDPEWL0",383,0)
 ... S RC=RC+2,^TMP($J,"RC_SUMOUT",RC-1)=" ",^TMP($J,"RC_SUMOUT",RC)=" "
"RTN","RCDPEWL0",384,0)
 ... K ^TMP("PRCA_EOB",$J)
"RTN","RCDPEWL0",385,0)
 . I $D(RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2)) D
"RTN","RCDPEWL0",386,0)
 .. S RC=RC+1,RCXM1(RC)="  **EXCEPTION RESOLUTION LOG DATA**"
"RTN","RCDPEWL0",387,0)
 .. S Z=0 F  S Z=$O(RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2,Z)) Q:'Z  S RC=RC+1,RCXM1(RC)=RCDIQ1(344.41,RCSCR1_","_RCSCR_",",2,Z)
"RTN","RCDPEWL0",388,0)
 . S RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEWL0",389,0)
 . S Z0=+$O(^TMP($J,"RC_SUMALL"," "),-1)
"RTN","RCDPEWL0",390,0)
 . S Z=0 F  S Z=$O(RCXM1(Z)) Q:'Z  S Z0=Z0+1,^TMP($J,"RC_SUMALL",Z0)=RCXM1(Z)
"RTN","RCDPEWL0",391,0)
 . K RCXM1 S RC=0
"RTN","RCDPEWL0",392,0)
 . S Z=0 F  S Z=$O(^TMP($J,"RC_SUMOUT",Z)) Q:'Z  S Z0=Z0+1,^TMP($J,"RC_SUMALL",Z0)=$G(^TMP($J,"RC_SUMOUT",Z))
"RTN","RCDPEWL0",393,0)
 S RCSTOP=0,Z=""
"RTN","RCDPEWL0",394,0)
 F  S Z=$O(^TMP($J,"RC_SUMALL",Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEWL0",395,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEWL0",396,0)
 . I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEWL0",397,0)
 .. D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEWL0",398,0)
 .. D HDR(.RCPG)
"RTN","RCDPEWL0",399,0)
 . W !,$G(^TMP($J,"RC_SUMALL",Z))
"RTN","RCDPEWL0",400,0)
 ;
"RTN","RCDPEWL0",401,0)
 I 'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEWL0",402,0)
 ;
"RTN","RCDPEWL0",403,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEWL0",404,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEWL0",405,0)
 ;
"RTN","RCDPEWL0",406,0)
PRERAQ K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT"),^TMP($J,"SUMALL")
"RTN","RCDPEWL0",407,0)
 S VALMBCK="R"
"RTN","RCDPEWL0",408,0)
 Q
"RTN","RCDPEWL0",409,0)
 ;
"RTN","RCDPEWL0",410,0)
HDR(RCPG) ;Report hdr
"RTN","RCDPEWL0",411,0)
 ; RCPG = last page #
"RTN","RCDPEWL0",412,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEWL0",413,0)
 S RCPG=$G(RCPG)+1
"RTN","RCDPEWL0",414,0)
 W !,?5,"EDI LOCKBOX WORKLIST - ERA DETAIL",?55,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!,$TR($J("",IOM)," ","=")
"RTN","RCDPEWL0",415,0)
 Q
"RTN","RCDPEWL0",416,0)
 ;
"RTN","RCDPEWL0",417,0)
ASK(RCSTOP) ;
"RTN","RCDPEWL0",418,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEWL0",419,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEWL0",420,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEWL0",421,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEWL0",422,0)
 Q
"RTN","RCDPEWL0",423,0)
 ;
"RTN","RCDPEWL1")
0^8^B78442494
"RTN","RCDPEWL1",1,0)
RCDPEWL1 ;ALB/TMK - ELECTRONIC EOB WORKLIST SCREEN ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL1",2,0)
 ;;4.5;Accounts Receivable;**173,208,222,298,304,321**;Mar 20, 1995;Build 48
"RTN","RCDPEWL1",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL1",4,0)
 ; IA for read access to ^IBM(361.1 = 4051
"RTN","RCDPEWL1",5,0)
 ; IA for call to ^DGENA = 3812
"RTN","RCDPEWL1",6,0)
 Q
"RTN","RCDPEWL1",7,0)
 ;
"RTN","RCDPEWL1",8,0)
BLD(RCSORT) ; Build the detail display record for the WL scratch pad record
"RTN","RCDPEWL1",9,0)
 ; Assume RCSCR = ien from file 344.49
"RTN","RCDPEWL1",10,0)
 ; RCSORT = "" or 'N' for no sort  'F' for 0-pays first, 'L' for last
"RTN","RCDPEWL1",11,0)
 ;
"RTN","RCDPEWL1",12,0)
 N A,A0,B,B0,Q,Q0,Q1,QQ,V1,X,Y,Z,Z0,Z3,ZZ,ZZ1,RCT,RCZ,RCZ0,RCZZ0,RCSA,RCAZ,RCAZ0,RCSCT,RCS1,RCLI1,RCY34441,RCZERO,RCTS,RCTL,RCCL,RCCL1
"RTN","RCDPEWL1",13,0)
 N RCECME,RXARRAY,RC4,RECEIPT,AUTOERA  ;prca*4.5*298
"RTN","RCDPEWL1",14,0)
 S RCSORT=$P($G(RCSORT),U),RCSORT=$S(RCSORT="":"N",1:RCSORT)
"RTN","RCDPEWL1",15,0)
 K ^TMP("RCDPE-EOB_WL",$J),^TMP("RCDPE-EOB_WLDX",$J),^TMP($J,"RCS"),^TMP("RC_BILL",$J)
"RTN","RCDPEWL1",16,0)
 ;
"RTN","RCDPEWL1",17,0)
 S VALMCNT=0
"RTN","RCDPEWL1",18,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,"B",Z)) Q:'Z  I Z#1=0 S ZZ=+$O(^RCY(344.49,RCSCR,1,"B",Z,0)) I ZZ D
"RTN","RCDPEWL1",19,0)
 . S RCZ=ZZ,RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCS1=$P(RCZ0,U,6)
"RTN","RCDPEWL1",20,0)
 . ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL1",21,0)
 . ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL1",22,0)
 . ;Q:$S('$G(^TMP("RCBATCH_SELECTED",$J)):0,1:$P(RCZ0,U,14)'=+^TMP("RCBATCH_SELECTED",$J))  ; Must be entire ERA or match the selected batch to continue
"RTN","RCDPEWL1",23,0)
 . S RCZERO=$S($P(RCZ0,U,2)["**ADJ":"-1",RCSORT="N":1,RCSORT="F":+RCS1'=0,1:+RCS1=0)
"RTN","RCDPEWL1",24,0)
 . ;
"RTN","RCDPEWL1",25,0)
 . ; This is a top-level entry - find the sublines
"RTN","RCDPEWL1",26,0)
 . S Z0=Z F  S Z0=$O(^RCY(344.49,RCSCR,1,"B",Z0)) Q:((Z0\1)'=(Z\1))  S Z=Z0,ZZ1=+$O(^RCY(344.49,RCSCR,1,"B",Z0,0)) I ZZ1 D
"RTN","RCDPEWL1",27,0)
 .. S ^TMP($J,"RCS",RCZERO,ZZ,ZZ1)=""
"RTN","RCDPEWL1",28,0)
 . S ^TMP($J,"RCS",RCZERO,ZZ)=""
"RTN","RCDPEWL1",29,0)
 ;
"RTN","RCDPEWL1",30,0)
 S RCZERO="",RCTS=0 F  S RCZERO=$O(^TMP($J,"RCS",RCZERO)) Q:RCZERO=""  S ZZ=0 F  S ZZ=$O(^TMP($J,"RCS",RCZERO,ZZ)) Q:'ZZ  D
"RTN","RCDPEWL1",31,0)
 . N A
"RTN","RCDPEWL1",32,0)
 . S RCZ0=$G(^RCY(344.49,RCSCR,1,ZZ,0)),RCY34441=$G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),0))
"RTN","RCDPEWL1",33,0)
 .;  get ECME# and Receipt from EEOB
"RTN","RCDPEWL1",34,0)
 . S RC4=$P($G(^RCY(344.4,RCSCR,1,+$P(RCZ0,U,9),4)),U,2,3)
"RTN","RCDPEWL1",35,0)
 . S RCECME=$P(RC4,U)
"RTN","RCDPEWL1",36,0)
 . S RECEIPT=$S(+$P(RC4,U,2):$P($G(^RCY(344,$P(RC4,U,2),0)),U),1:"")
"RTN","RCDPEWL1",37,0)
 . ; get auto-post status
"RTN","RCDPEWL1",38,0)
 . S AUTOERA=$S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0)
"RTN","RCDPEWL1",39,0)
 . ;Filtering Posted/Unposted EEOBs (Auto-Posting ERAs only)
"RTN","RCDPEWL1",40,0)
 . I $G(^TMP($J,"RC_EEOBPOST"))="P",RECEIPT="" Q
"RTN","RCDPEWL1",41,0)
 . I $G(^TMP($J,"RC_EEOBPOST"))="U",RECEIPT'="" Q
"RTN","RCDPEWL1",42,0)
 . S RCTS=RCTS+1,A=$$TOPLINE(RCZ0,RCTS)
"RTN","RCDPEWL1",43,0)
 . D SET(A,RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",44,0)
 . ; PRCA*4.5*304 - Add claim comment to screen if it exists for this ERA EEOB detail line
"RTN","RCDPEWL1",45,0)
 . S:$P(RCZ0,U,9)'="" RCCL=$$GET1^DIQ(344.41,$P(RCZ0,U,9)_","_RCSCR_",",4)
"RTN","RCDPEWL1",46,0)
 . D:$G(RCCL)'=""  ; If we have a ERA Detail line comment, display it
"RTN","RCDPEWL1",47,0)
 . . D SLINE^RCDPEAA2(RCCL,"RCCL1",56,74)
"RTN","RCDPEWL1",48,0)
 . . N TLINE S TLINE=$J("",8)_"Claim Comment: "_RCCL1(1)
"RTN","RCDPEWL1",49,0)
 . . D SET(TLINE,RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",50,0)
 . . ; If we have a second or third line for the comment then put it on the screen
"RTN","RCDPEWL1",51,0)
 . . I RCCL1>1 D SET($J("",8)_RCCL1(2),RCTS,RCTS,ZZ) I RCCL1=3 D SET($J("",8)_RCCL1(3),RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",52,0)
 . ; **End of *304 modifications**
"RTN","RCDPEWL1",53,0)
 . I $P(RCY34441,U,11) D
"RTN","RCDPEWL1",54,0)
 .. D SET("EEOB TRANSFERRED TO "_$E($P($G(^DIC(4,+$P(RCY34441,U,11),0)),U),1,20)_" "_$$FMTE^XLFDT($P(RCY34441,U,12),"2D")_" STATUS: "_$$EXTERNAL^DILFD(344.41,.1,"",+$P(RCY34441,U,10)),RCTS,RCTS,ZZ)
"RTN","RCDPEWL1",55,0)
 . ;
"RTN","RCDPEWL1",56,0)
 . S RCT=RCTS
"RTN","RCDPEWL1",57,0)
 . S ZZ1=0 F  S ZZ1=$O(^TMP($J,"RCS",RCZERO,ZZ,ZZ1)) Q:'ZZ1  D
"RTN","RCDPEWL1",58,0)
 .. S RCT=RCT+.001
"RTN","RCDPEWL1",59,0)
 .. S RCTL=$L(RCT)
"RTN","RCDPEWL1",60,0)
 .. S RCZZ0=$G(^RCY(344.49,RCSCR,1,ZZ1,0))
"RTN","RCDPEWL1",61,0)
 .. S V1=$S($P(RCZ0,U,2)'["**ADJ":"",$P($P(RCZ0,U,2),"ADJ",2):"***ADJUSTMENT AT ERA LEVEL",1:"*** ADJUSTMENT LINE FOR TOTALS MISMATCH")
"RTN","RCDPEWL1",62,0)
 .. S RCLI1=$S(V1="":" Claim #: "_$P(RCZZ0,U,2)_" Patient/Last 4: "_$S($P(RCZZ0,U,7):$$PNM4("","",$P(RCZZ0,U,7)),'$P($G(^RCY(344.49,RCSCR,1,ZZ1,2)),U,3):$$PNM4(+$G(^RCY(344.49,RCSCR,0)),RCZ),1:"??"),1:V1)
"RTN","RCDPEWL1",63,0)
 .. D SET($J("",4)_$P("   ^(V)",U,$P(RCZZ0,U,13)+1)_RCT_RCLI1,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",64,0)
 .. I '$P(RCZZ0,U,7),$P(RCZ0,U,2)'["**ADJ" D SET($J("",4+RCTL)_"***CLAIM NOT FOUND IN YOUR AR ***",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",65,0)
 .. I $P(RCZZ0,U,7) D
"RTN","RCDPEWL1",66,0)
 ... N A,RCX,Q
"RTN","RCDPEWL1",67,0)
 ... S A("OA")=$$ORI^PRCAFN(+$P(RCZZ0,U,7)),A("SDT")=$P($G(^DGCR(399,+$P(RCZZ0,U,7),"U")),U),A("DFN")=+$P($G(^(0)),U,2),A("ENRPR")=""
"RTN","RCDPEWL1",68,0)
 ... ; Find Rx copay status
"RTN","RCDPEWL1",69,0)
 ... S A("RXCP")=$S('A("SDT"):"",1:$$RXST^IBARXEU(A("DFN"),A("SDT"))),A("RXCP")=$S($P(A("RXCP"),U)'="":$P(A("RXCP"),U,2),1:"UNKNOWN") ;IA #10147
"RTN","RCDPEWL1",70,0)
 ... ; Find M/T status
"RTN","RCDPEWL1",71,0)
 ... S RCX=$$LST^DGMTU(A("DFN"),A("SDT")),A("M/T")=$P(RCX,U,4)
"RTN","RCDPEWL1",72,0)
 ... S A("M/T")=$S('RCX:"??",A("M/T")="P":"PEN",A("M/T")="C":"YES",A("M/T")="G":"GMT",A("M/T")="R":"REQ",1:"NO")
"RTN","RCDPEWL1",73,0)
 ... ;
"RTN","RCDPEWL1",74,0)
 ... S QQ="   Billed Amt: "_$J(A("OA"),"",2)_"   Amt To Post: "_$J(+$P(RCZZ0,U,3),"",2)
"RTN","RCDPEWL1",75,0)
 ... D SET($J("",4+RCTL)_"Claim Bal: "_$J(+$P($$BILL^RCJIBFN2(+$P(RCZZ0,U,7)),U,3),"",2)_QQ,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",76,0)
 ... S ^TMP("RC_BILL",$J,$P(RCZZ0,U,7),RCT)=QQ
"RTN","RCDPEWL1",77,0)
 ... S Z3=$J("",4+RCTL)_"Svc Dt: "_$S(A("SDT")'="":$$FMTE^XLFDT(A("SDT"),2),1:"UNKNOWN")
"RTN","RCDPEWL1",78,0)
 ... S Z3=Z3_"  COB: "_$S($D(^DGCR(399,+$P(RCZZ0,U,7),"I"_($$COBN(+$P(RCZZ0,U,7))+1))):"YES",1:"NO ")
"RTN","RCDPEWL1",79,0)
 ... D SET(Z3_"  Rx Copay: "_$E(A("RXCP"),1,17)_"  Means Tst: "_A("M/T"),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",80,0)
 .. ;
"RTN","RCDPEWL1",81,0)
 .. D SET($J("",4+RCTL)_"Payment Amt: "_$J(+$P(RCZZ0,U,5),"",2)_"   Total Adjustments: "_$J(+$P(RCZZ0,U,8),"",2)_"  Net: "_$J($P(RCZZ0,U,5)+$P(RCZZ0,U,8),"",2),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",82,0)
 .. I AUTOERA,$P(RCZZ0,U,3)>0 D SET($J("",9)_"Receipt: "_RECEIPT,RCTS,RCT,ZZ1)   ; if auto-posted ERA display EEOB level receipt number
"RTN","RCDPEWL1",83,0)
 .. ; display pharmacy EEOB data  
"RTN","RCDPEWL1",84,0)
 .. I RCECME]"" D PHARM(RCZZ0,RCECME,RCT,ZZ1)
"RTN","RCDPEWL1",85,0)
 .. ; PRCA*4.5*321 BEGIN
"RTN","RCDPEWL1",86,0)
 .. I $P(RCZZ0,U,10)'="" D
"RTN","RCDPEWL1",87,0)
 ... D SET($J("",9)_"Receipt Comment: "_$P(RCZZ0,U,10),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",88,0)
 ... D SET($J("",9)_"Added By User: "_$$GET1^DIQ(344.491,ZZ1_","_RCSCR_",",2.03),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",89,0)
 ... D SET($J("",9)_"Date/Time Added: "_$$GET1^DIQ(344.491,ZZ1_","_RCSCR_",",2.04),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",90,0)
 .. ; PRCA*4.5*321 END
"RTN","RCDPEWL1",91,0)
 .. I $O(^RCY(344.49,RCSCR,1,ZZ1,1,0)) D
"RTN","RCDPEWL1",92,0)
 ... S Z3=""
"RTN","RCDPEWL1",93,0)
 ... D SET($J("",4+RCTL)_"ADJUSTMENTS:",RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",94,0)
 ... S RCAZ=0 F  S RCAZ=$O(^RCY(344.49,RCSCR,1,ZZ1,1,RCAZ)) Q:'RCAZ  S RCAZ0=$G(^(RCAZ,0)) D
"RTN","RCDPEWL1",95,0)
 .... S Z3=$J("",6+RCTL)_+RCAZ0_".  ",Q=$L(Z3)
"RTN","RCDPEWL1",96,0)
 .... ;
"RTN","RCDPEWL1",97,0)
 .... I $P(RCAZ0,U,2)=0 S Z3=Z3_"Distributed adj dec for retraction "_$P(RCAZ0,U,4)_": "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",98,0)
 .... I $P(RCAZ0,U,2)=1 S Z3=Z3_"Adjustment distribution to balance receipt: "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",99,0)
 .... ;
"RTN","RCDPEWL1",100,0)
 .... I $P(RCAZ0,U,2)=2!($P(RCAZ0,U,2)=4) D
"RTN","RCDPEWL1",101,0)
 ..... S Z3=Z3_"ERA payment adjusted from "_$J($P(RCZZ0,U,5)-$P(RCZZ0,U,6),"",2)_" to "_$J(+$P(RCZZ0,U,5),"",2)_"  NET: "_$J($P(RCZZ0,U,5)+$P(RCAZ0,U,3),"",2)
"RTN","RCDPEWL1",102,0)
 .... I $P(RCAZ0,U,2)=5 S Z3=Z3_"Non-specific payment (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",103,0)
 .... I $P(RCAZ0,U,2)=3 S Z3=Z3_"Non-specific retraction (ref# "_$P(RCAZ0,U,4)_"): "_$P(RCAZ0,U,3)
"RTN","RCDPEWL1",104,0)
 .... D SET(Z3,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",105,0)
 .... I $P(RCAZ0,U,9)'="" D SET($J("",Q)_$P(RCAZ0,U,9),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",106,0)
 .. ;
"RTN","RCDPEWL1",107,0)
 .. I $P($G(^TMP($J,"RC_SORTPARM")),U,2) D
"RTN","RCDPEWL1",108,0)
 ... S A=$J("",10)_"REVIEW STATUS: ("_$S($P(RCZ0,U,11)="I":"REVIEW IN PROCESS",$P(RCZ0,U,11)=1:"REVIEWED",1:"NOT REVIEWED")
"RTN","RCDPEWL1",109,0)
 ... I $P(RCZ0,U,12) S A=A_"   SET BY: "_$E($P($G(^VA(200,$P(RCZ0,U,12),0)),U),1,20)
"RTN","RCDPEWL1",110,0)
 ... D SET(A_")",+RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",111,0)
 ... S A=0 F  S A=$O(^RCY(344.49,RCSCR,1,ZZ,4,A)) Q:'A  S A0=$G(^(A,0)) D
"RTN","RCDPEWL1",112,0)
 .... D SET($J("",12)_$$FMTE^XLFDT($P(A0,U),2)_"  "_$P($G(^VA(200,+$P(A0,U,2),0)),U)_$S($P(A0,U,4):"  LAST EDIT: "_$$FMTE^XLFDT($P(A0,U,4),2),1:""),RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",113,0)
 .... S B=0 F  S B=$O(^RCY(344.49,RCSCR,1,ZZ,4,A,1,B)) Q:'B  S B0=$G(^(B,0)) D
"RTN","RCDPEWL1",114,0)
 ..... I $L(B0)>64 D SET($J("",15)_$E(B0,1,64),RCTS,RCT,ZZ1) S B0="  "_$E(B0,65,$L(B0)) ; Split line if > 64 characters in comment line
"RTN","RCDPEWL1",115,0)
 ..... D SET($J("",15)_B0,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",116,0)
 .. S A="",$P(A,".",79)="" D SET(A,RCTS,RCT,ZZ1)
"RTN","RCDPEWL1",117,0)
 ; prca*4.5*298  per patch requirements, keep code related to creating/maintaining
"RTN","RCDPEWL1",118,0)
 ; batches but just remove from execution.
"RTN","RCDPEWL1",119,0)
 ; I VALMCNT=0 D
"RTN","RCDPEWL1",120,0)
 ;. I $G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL1",121,0)
 ;. . D SET("THERE ARE NO EEOBs ASSIGNED TO THIS BATCH")
"RTN","RCDPEWL1",122,0)
 ;. E  D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEWL1",123,0)
 I VALMCNT=0 D SET("THERE ARE NO EEOBs MATCHING YOUR SELECTION CRITERIA")
"RTN","RCDPEWL1",124,0)
 K ^TMP($J,"RCS")
"RTN","RCDPEWL1",125,0)
 Q
"RTN","RCDPEWL1",126,0)
 ;
"RTN","RCDPEWL1",127,0)
TOPLINE(RCZ0,RCTS) ; Function returns the top line of the EEOB display
"RTN","RCDPEWL1",128,0)
 ; RCZ0 = the 0-node of the whole number entry line for the EEOB
"RTN","RCDPEWL1",129,0)
 ; RCTS = the selectable line #
"RTN","RCDPEWL1",130,0)
 N A
"RTN","RCDPEWL1",131,0)
 S A=" "_$S($P(RCZ0,U,13):"(V)",1:"   ")_"EEOB Seq #"_$S($P(RCZ0,U,9)[",":"'s",1:"")_" On ERA: "_$S($P(RCZ0,U,9)'="":$P(RCZ0,U,9),1:"None")_"   Net Payment Amt: "_$J(+$P(RCZ0,U,6),"",2)
"RTN","RCDPEWL1",132,0)
 I $P($G(^TMP($J,"RC_SORTPARM")),U,2) S A=A_"  Reviewed?: "_$S($P(RCZ0,U,11)="":"NO",1:$$EXTERNAL^DILFD(344.491,.11,,$P(RCZ0,U,11)))
"RTN","RCDPEWL1",133,0)
 S A=$E(RCTS_$J("",4),1,4)_A
"RTN","RCDPEWL1",134,0)
 Q A
"RTN","RCDPEWL1",135,0)
 ;
"RTN","RCDPEWL1",136,0)
PHARM(RCZZ0,RCECME,RCT,ZZ1) ;
"RTN","RCDPEWL1",137,0)
 N RXARRAY
"RTN","RCDPEWL1",138,0)
 D GETPHARM^RCDPEWLP($P(RCZZ0,U,7),.RXARRAY)
"RTN","RCDPEWL1",139,0)
 D SET($J("",9)_"ECME #: "_RCECME,$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",140,0)
 I '$D(RXARRAY) D SET($J("",9)_" Pharmacy data does not exist for this claim",$P(RCZZ0,U),RCT,ZZ1) Q
"RTN","RCDPEWL1",141,0)
 D SET($J("",9)_"Rx/Fill/Release Status: "_RXARRAY("RX")_"/"_RXARRAY("FILL")_"/"_RXARRAY("RELEASED STATUS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",142,0)
 D SET($J("",9)_"DOS: "_RXARRAY("DOS"),$P(RCZZ0,U),RCT,ZZ1)
"RTN","RCDPEWL1",143,0)
 Q
"RTN","RCDPEWL1",144,0)
 ;
"RTN","RCDPEWL1",145,0)
INIT ;
"RTN","RCDPEWL1",146,0)
 S VALMBG=$G(^TMP($J,"RC_VALMBG"))
"RTN","RCDPEWL1",147,0)
 Q
"RTN","RCDPEWL1",148,0)
 ;
"RTN","RCDPEWL1",149,0)
HDR ;
"RTN","RCDPEWL1",150,0)
 D HDR^RCDPEWL
"RTN","RCDPEWL1",151,0)
 Q
"RTN","RCDPEWL1",152,0)
 ;
"RTN","RCDPEWL1",153,0)
FNL ; -- Clean up list
"RTN","RCDPEWL1",154,0)
 K RCFASTXT
"RTN","RCDPEWL1",155,0)
 Q
"RTN","RCDPEWL1",156,0)
 ;
"RTN","RCDPEWL1",157,0)
SET(X,RCSEQ,RCSEQ1,RCZ9) ; -- set arrays
"RTN","RCDPEWL1",158,0)
 ; X = the data to set into the global
"RTN","RCDPEWL1",159,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL1",160,0)
 ; RCSEQ1 = the sub line #
"RTN","RCDPEWL1",161,0)
 ; RCZ9 = reference to the line(s) in file 344.41 or to the subline in
"RTN","RCDPEWL1",162,0)
 ;        file 344.49 for RCSEQ having a decimal
"RTN","RCDPEWL1",163,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-EOB_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL1",164,0)
 I $G(RCSEQ) S ^TMP("RCDPE-EOB_WL",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEWL1",165,0)
 I $G(RCSEQ1),'$D(^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)) S ^TMP("RCDPE-EOB_WLDX",$J,RCSEQ1)=VALMCNT_U_$G(RCZ9)
"RTN","RCDPEWL1",166,0)
 Q
"RTN","RCDPEWL1",167,0)
 ;
"RTN","RCDPEWL1",168,0)
PNM4(RCIFN,RCDA,RC) ; Returns either the patient name or patient name/last 4
"RTN","RCDPEWL1",169,0)
 ; RCIFN = ien of file 344.4
"RTN","RCDPEWL1",170,0)
 ; RCDA = ien of file 344.41
"RTN","RCDPEWL1",171,0)
 ; RC = the ien of file 430
"RTN","RCDPEWL1",172,0)
 N Z,Z0,Q
"RTN","RCDPEWL1",173,0)
 S Z=""
"RTN","RCDPEWL1",174,0)
 I $G(RCIFN)'="" D
"RTN","RCDPEWL1",175,0)
 . S Z0=$G(^RCY(344.4,RCIFN,1,RCDA,0)),Z=""
"RTN","RCDPEWL1",176,0)
 . I $P(Z0,U,2) S Q=+$P($G(^DGCR(399,+$G(^IBM(361.1,+$P(Z0,U,2),0)),0)),U,2),Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9) ; IA 4051
"RTN","RCDPEWL1",177,0)
 . I $TR(Z,"/")="" S Z=$P(Z0,U,15)
"RTN","RCDPEWL1",178,0)
 I $G(RC)'="" D
"RTN","RCDPEWL1",179,0)
 . S Q=+$P($G(^PRCA(430,RC,0)),U,7)
"RTN","RCDPEWL1",180,0)
 . I Q S Z=$P($G(^DPT(Q,0)),U)_"/"_$E($P($G(^(0)),U,9),6,9)
"RTN","RCDPEWL1",181,0)
 Q Z
"RTN","RCDPEWL1",182,0)
 ;
"RTN","RCDPEWL1",183,0)
COBN(RC,A) ; Return seq # of selected payer
"RTN","RCDPEWL1",184,0)
 ; A = 'PST' or null to get current bill payer seq #
"RTN","RCDPEWL1",185,0)
 I $G(A)="" S A=$P($G(^DGCR(399,RC,0)),U,21) S:A="" A="P" S:"PST"'[A A="P"
"RTN","RCDPEWL1",186,0)
 I 'A S A=$F("PST",A)-1 S:A<1 A=1
"RTN","RCDPEWL1",187,0)
 Q A
"RTN","RCDPEWL1",188,0)
 ;
"RTN","RCDPEWL1",189,0)
COPAY(RCIFN)       ; Returns 1 if any not cancelled 1st party bills exist for
"RTN","RCDPEWL1",190,0)
 ; a 3rd party bill or any bills related to this 3rd party bill
"RTN","RCDPEWL1",191,0)
 ; RCIFN = the 3rd party bill #
"RTN","RCDPEWL1",192,0)
 N FIRST,RCTP0,RCTP1,RCTP2
"RTN","RCDPEWL1",193,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEWL1",194,0)
 D RELBILL^IBRFN(RCIFN) ; DBIA 3124
"RTN","RCDPEWL1",195,0)
 S RCTP0=0 F  S RCTP0=$O(^TMP("IBRBF",$J,RCIFN,RCTP0)) Q:RCTP0=""  S RCTP1=$G(^(RCTP0)) D
"RTN","RCDPEWL1",196,0)
 . I $P(RCTP1,U,3) K ^TMP("IBRBF",$J,RCIFN,RCTP0) Q  ; IB cancelled
"RTN","RCDPEWL1",197,0)
 . S RCTP2=$O(^PRCA(430,"B",+$P(RCTP1,U,4),0)) I $P($G(^PRCA(430,+RCTP2,0)),U,8)=39 K ^TMP("IBRBF",$J,RCIFN,RCTP0) ; AR cancelled
"RTN","RCDPEWL1",198,0)
 S FIRST=$S($O(^TMP("IBRBF",$J,RCIFN,0)):1,1:0)
"RTN","RCDPEWL1",199,0)
 K ^TMP("IBRBF",$J),^TMP($J,"IBRBF")
"RTN","RCDPEWL1",200,0)
 Q FIRST
"RTN","RCDPEWL1",201,0)
 ;
"RTN","RCDPEWL3")
0^7^B88451997
"RTN","RCDPEWL3",1,0)
RCDPEWL3 ;ALB/TMK/KML - ELECTRONIC EOB WORKLIST ACTIONS ;24-FEB-03
"RTN","RCDPEWL3",2,0)
 ;;4.5;Accounts Receivable;**173,276,321**;Mar 20, 1995;Build 48
"RTN","RCDPEWL3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPEWL3",4,0)
 Q
"RTN","RCDPEWL3",5,0)
 ;
"RTN","RCDPEWL3",6,0)
SPLIT(RCSCR,RCL) ; Perform line splits
"RTN","RCDPEWL3",7,0)
 N Z,Z0,DIR,X,Y,RCL1,DA,DR,DIE,DIC,RCDONE,RCDIR,RCSPLIT,RCTOT,RCOK,RCLINE
"RTN","RCDPEWL3",8,0)
 ;
"RTN","RCDPEWL3",9,0)
 D CLEAR^VALM1
"RTN","RCDPEWL3",10,0)
 S ^TMP($J,"RCDPE_SPLIT")=""
"RTN","RCDPEWL3",11,0)
 S RCLINE=$G(^TMP("RCDPE-EOB_WLDX",$J,RCL)),RCL1=$G(^TMP("RCDPE-EOB_WLDX",$J,RCL\1))
"RTN","RCDPEWL3",12,0)
 ;
"RTN","RCDPEWL3",13,0)
 S Z=+$O(^TMP("RCDPE-EOB_WLDX",$J,RCL)),Z0=+$G(^TMP("RCDPE-EOB_WLDX",$J,Z)) S:'Z0 Z0=999
"RTN","RCDPEWL3",14,0)
 W !
"RTN","RCDPEWL3",15,0)
 F Z=+RCLINE:1:Z0 Q:'$D(^TMP("RCDPE-EOB_WL",$J,Z,0))!(Z'<Z0)  W !,^TMP("RCDPE-EOB_WL",$J,Z,0)
"RTN","RCDPEWL3",16,0)
 ;
"RTN","RCDPEWL3",17,0)
 I $E($P(RCL1,U,2),1,3)["ADJ" D  G SPLITQ
"RTN","RCDPEWL3",18,0)
 . W !,"THIS IS AN ERA-LEVEL ADJUSTMENT - ONLY THE ADJUSTMENT COMMENT CAN BE EDITED"
"RTN","RCDPEWL3",19,0)
 . S DIR(0)="A" D ^DIR K DIR
"RTN","RCDPEWL3",20,0)
 . S DA(2)=RCSCR,DA(1)=+$P(RCLINE,U,2),DA=+$P($P(RCL1,U,2),"ADJ",2)
"RTN","RCDPEWL3",21,0)
 . Q:'DA
"RTN","RCDPEWL3",22,0)
 . D EDITCOM(.DA)
"RTN","RCDPEWL3",23,0)
 ;
"RTN","RCDPEWL3",24,0)
 S RCDONE=0,RCDIR(1)=$P($G(^RCY(344.49,RCSCR,1,+$P(RCLINE,U,2),0)),U,2),RCDIR(2)=$P($G(^RCY(344.49,RCSCR,1,+$P(RCLINE,U,2),0)),U,5),RCDIR(3)=$P($G(^RCY(344.49,RCSCR,1,+$P(RCLINE,U,2),0)),U,8),RCDIR(6)=+$P(RCLINE,U,2)
"RTN","RCDPEWL3",25,0)
 S RCDIR=RCDIR(1)_U_RCDIR(2)_U_RCDIR(3)
"RTN","RCDPEWL3",26,0)
 ;
"RTN","RCDPEWL3",27,0)
 S RCSPLIT=0
"RTN","RCDPEWL3",28,0)
 I $P(RCDIR,U,3) W !!,"NOTE: THIS LINE HAS AN ADJUSTMENT RECORD ASSOCIATED WITH IT",!
"RTN","RCDPEWL3",29,0)
 F  D  Q:RCDONE
"RTN","RCDPEWL3",30,0)
 . S RCSPLIT=RCSPLIT+1
"RTN","RCDPEWL3",31,0)
 . D EDIT(RCSCR,RCLINE,.RCDIR,.RCSPLIT,"",.RCDONE)
"RTN","RCDPEWL3",32,0)
 . I '$D(RCSPLIT(RCSPLIT)) S RCSPLIT=RCSPLIT-1
"RTN","RCDPEWL3",33,0)
 ;
"RTN","RCDPEWL3",34,0)
 G:'$O(RCSPLIT(0)) SPLITQ
"RTN","RCDPEWL3",35,0)
 N VALMCNT,VALMBG
"RTN","RCDPEWL3",36,0)
 S VALMCNT=0,VALMBG=1
"RTN","RCDPEWL3",37,0)
 S ^TMP($J,"RCDPE_SPLIT_FILE")=1
"RTN","RCDPEWL3",38,0)
 D EN^VALM("RCDPE EOB WORKLIST SPLIT")
"RTN","RCDPEWL3",39,0)
 ;
"RTN","RCDPEWL3",40,0)
SPLITQ Q
"RTN","RCDPEWL3",41,0)
 ;
"RTN","RCDPEWL3",42,0)
TOT(N,RCSPLIT,RCLINE) ; CALCULATE TOTAL OF PAY (N=2) or ADJ (N=3)
"RTN","RCDPEWL3",43,0)
 ; RCSPLIT = the array (passed by ref) where the amounts are stored
"RTN","RCDPEWL3",44,0)
 ; RCLINE = if editing, this is the line # NOT to add in when
"RTN","RCDPEWL3",45,0)
 ;          determining previous amounts entered
"RTN","RCDPEWL3",46,0)
 N Z,Z0
"RTN","RCDPEWL3",47,0)
 S (Z,Z0)=0
"RTN","RCDPEWL3",48,0)
 F  S Z=$O(RCSPLIT(Z)) Q:'Z  I $S('$G(RCLINE):1,1:RCLINE'=Z) S Z0=Z0+$P(RCSPLIT(Z),U,N)
"RTN","RCDPEWL3",49,0)
 Q $J(Z0,"",2)
"RTN","RCDPEWL3",50,0)
 ;
"RTN","RCDPEWL3",51,0)
UPD(Q,Q1) ;
"RTN","RCDPEWL3",52,0)
 N DA,DIE,DR,X,Y
"RTN","RCDPEWL3",53,0)
 S DA(1)=Q,DA=Q1
"RTN","RCDPEWL3",54,0)
 S DIE="^RCY(344.49,"_DA(1)_",1,",DR="2.03////"_DUZ_";2.04////"_$$NOW^XLFDT() D ^DIE
"RTN","RCDPEWL3",55,0)
 S ^TMP("RCDPE_SPLIT_REBLD",$J)=1
"RTN","RCDPEWL3",56,0)
 Q
"RTN","RCDPEWL3",57,0)
 ;
"RTN","RCDPEWL3",58,0)
HDR ;
"RTN","RCDPEWL3",59,0)
 N Z,Z0,ZCT
"RTN","RCDPEWL3",60,0)
 S ZCT=0
"RTN","RCDPEWL3",61,0)
 S Z=+$O(^TMP("RCDPE-EOB_WLDX",$J,RCL)),Z0=+$G(^TMP("RCDPE-EOB_WLDX",$J,Z)) S:'Z0 Z0=999
"RTN","RCDPEWL3",62,0)
 F Z=+RCLINE:1:Z0 Q:'$D(^TMP("RCDPE-EOB_WL",$J,Z,0))!(Z'<Z0)!(ZCT'<6)  S ZCT=ZCT+1,VALMHDR(ZCT)=^TMP("RCDPE-EOB_WL",$J,Z,0)
"RTN","RCDPEWL3",63,0)
 S ZCT=ZCT+1,VALMHDR(ZCT)=" "
"RTN","RCDPEWL3",64,0)
 Q
"RTN","RCDPEWL3",65,0)
 ;
"RTN","RCDPEWL3",66,0)
FNL ;
"RTN","RCDPEWL3",67,0)
 K ^TMP("RCDPE_EOB_SPLIT",$J),^TMP("RCDPE_EOB_SPLIT_OK",$J),^TMP("RCDPE_EOB_SPLITDX",$J)
"RTN","RCDPEWL3",68,0)
 Q
"RTN","RCDPEWL3",69,0)
 ;
"RTN","RCDPEWL3",70,0)
INIT ; Build screen for display
"RTN","RCDPEWL3",71,0)
 ; RCSCR, RCDIR, RCSPLIT must already exist
"RTN","RCDPEWL3",72,0)
 N Z,RCTOT,DIR,X,Y,RCNT,RCCT,Q,RCT
"RTN","RCDPEWL3",73,0)
 K ^TMP("RCDPE_EOB_SPLIT",$J)
"RTN","RCDPEWL3",74,0)
 S (VALMCNT,RCNT)=0
"RTN","RCDPEWL3",75,0)
 S ^TMP("RCDPE_EOB_SPLIT_OK",$J)=1
"RTN","RCDPEWL3",76,0)
 F Z=2,3 S RCTOT(Z)=$$TOT(Z,.RCSPLIT)
"RTN","RCDPEWL3",77,0)
 I +RCTOT(2)'=+$P(RCDIR,U,2)!(+RCTOT(3)'=+$P(RCDIR,U,3)) D
"RTN","RCDPEWL3",78,0)
 . D SET("**** TOTAL AMOUNTS ENTERED DO NOT MATCH THE ORIGINAL AMOUNTS ****",1),SET(" ",1)
"RTN","RCDPEWL3",79,0)
 . S ^TMP("RCDPE_EOB_SPLIT_OK",$J)=0
"RTN","RCDPEWL3",80,0)
 ;
"RTN","RCDPEWL3",81,0)
 S (RCCT,Z,RCT(1),RCT(2),RCT(3))=0
"RTN","RCDPEWL3",82,0)
 F  S Z=$O(RCSPLIT(Z)) Q:'Z  D
"RTN","RCDPEWL3",83,0)
 . S X="",RCCT=RCCT+1
"RTN","RCDPEWL3",84,0)
 . S X=$$SETFLD^VALM1(RCCT,X,"NUM")
"RTN","RCDPEWL3",85,0)
 . S X=$$SETFLD^VALM1($P(RCSPLIT(Z),U)_$S('$P(RCSPLIT(Z),U,5):" (NOT IN A/R)",1:""),X,"CLAIM")
"RTN","RCDPEWL3",86,0)
 . S X=$$SETFLD^VALM1($J(+$P(RCSPLIT(Z),U,2),15,2),X,"PAYMENT"),RCT(1)=RCT(1)+$P(RCSPLIT(Z),U,2)
"RTN","RCDPEWL3",87,0)
 . S X=$$SETFLD^VALM1($J(+$P(RCSPLIT(Z),U,3),15,2),X,"ADJUSTMENT"),RCT(2)=RCT(2)+$P(RCSPLIT(Z),U,3)
"RTN","RCDPEWL3",88,0)
 . S X=$$SETFLD^VALM1($J($P(RCSPLIT(Z),U,2)+$P(RCSPLIT(Z),U,3),15,2),X,"NET"),RCT(3)=RCT(3)+$P(RCSPLIT(Z),U,2)+$P(RCSPLIT(Z),U,3)
"RTN","RCDPEWL3",89,0)
 . D SET(X,RCCT)
"RTN","RCDPEWL3",90,0)
 . I $P(RCSPLIT(Z),U,6)'="",$P(RCSPLIT(Z),U,6)'="@" S X=$$SETSTR^VALM1($J("",10)_$P(RCSPLIT(Z),U,6),"",1,70) D SET(X,RCCT)
"RTN","RCDPEWL3",91,0)
 S Q="",$P(Q,"=",15)=""
"RTN","RCDPEWL3",92,0)
 D SET($J("",32)_Q_"   "_Q_"   "_Q,RCCT),SET($E("    TOTALS: "_$J("",31),1,31)_$E($J(+RCT(1),15,2)_$J("",17),1,17)_$E($J(+RCT(2),15,2)_$J("",17),1,17)_$E($J(+RCT(3),15,2)_$J("",17),1,17),RCCT)
"RTN","RCDPEWL3",93,0)
 ;
"RTN","RCDPEWL3",94,0)
 Q
"RTN","RCDPEWL3",95,0)
 ;
"RTN","RCDPEWL3",96,0)
SET(X,RCSEQ) ;
"RTN","RCDPEWL3",97,0)
 S VALMCNT=VALMCNT+1
"RTN","RCDPEWL3",98,0)
 S ^TMP("RCDPE_EOB_SPLIT",$J,VALMCNT,0)=X
"RTN","RCDPEWL3",99,0)
 S ^TMP("RCDPE_EOB_SPLIT",$J,"IDX",VALMCNT,RCSEQ)=""
"RTN","RCDPEWL3",100,0)
 S ^TMP("RCDPE_EOB_SPLITDX",$J,RCSEQ)=VALMCNT
"RTN","RCDPEWL3",101,0)
 Q
"RTN","RCDPEWL3",102,0)
 ;
"RTN","RCDPEWL3",103,0)
EDITCOM(DA) ; Edit the comment for an adjustment entry
"RTN","RCDPEWL3",104,0)
 N RCX,DIE,X,Y,DR
"RTN","RCDPEWL3",105,0)
 S RCX=$P($G(^RCY(344.49,DA(2),1,DA(1),1,DA,0)),U,9)
"RTN","RCDPEWL3",106,0)
 S DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,",DR=".09"
"RTN","RCDPEWL3",107,0)
 D ^DIE
"RTN","RCDPEWL3",108,0)
 Q:$P($G(^RCY(344.49,DA(2),1,DA(1),1,DA,0)),U,9)=RCX
"RTN","RCDPEWL3",109,0)
 D UPD(DA(2),DA(1))
"RTN","RCDPEWL3",110,0)
 Q
"RTN","RCDPEWL3",111,0)
 ;
"RTN","RCDPEWL3",112,0)
EDIT(RCSCR,RCLINE,RCDIR,RCSPLIT,RCDEF,RCDONE) ; Edit a split line
"RTN","RCDPEWL3",113,0)
 ;
"RTN","RCDPEWL3",114,0)
 N CT,DIC,DIR,DIRUT,DTOUT,DUOUT,RCOK,RCL,X,Y,Z
"RTN","RCDPEWL3",115,0)
 ; Enter claim #
"RTN","RCDPEWL3",116,0)
 S RCL=$G(RCDIR(6))
"RTN","RCDPEWL3",117,0)
EDCL ;
"RTN","RCDPEWL3",118,0)
 S DIR("?",1)="ENTER THE CLAIM # TO WHICH THE PAYMENT OR ADJUSTMENT WILL BE APPLIED."
"RTN","RCDPEWL3",119,0)
 S DIR("?",2)="THE CLAIM # DOES NOT HAVE TO EXIST IN YOUR AR IF THE PAYMENT/ADJUSTMENT"
"RTN","RCDPEWL3",120,0)
 S DIR("?")="BELONGS TO ANOTHER SITE."
"RTN","RCDPEWL3",121,0)
 S DIR(0)="FAO^1:15",DIR("A")="CLAIM #: "
"RTN","RCDPEWL3",122,0)
 S:$P($G(RCDEF),U)'="" DIR("B")=$P(RCDEF,U)
"RTN","RCDPEWL3",123,0)
 S:$G(RCDIR(1))'=""&($G(DIR("B"))="") DIR("B")=RCDIR(1)
"RTN","RCDPEWL3",124,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL3",125,0)
 I $D(DTOUT)!$D(DUOUT) D ABORT Q
"RTN","RCDPEWL3",126,0)
 I Y="" D  G:'RCDONE EDCL Q
"RTN","RCDPEWL3",127,0)
 . S DIR(0)="YA",DIR("A",1)="YOU MUST SPLIT THE ENTIRE AMOUNT OF THE LINE."
"RTN","RCDPEWL3",128,0)
 . S DIR("A",2)=" $"_$J(+RCDIR(2),"",2)_" PAYMENT IS LEFT"_$S($P(RCDIR,U,3)&$G(RCDIR(3)):" AND $"_$J(+RCDIR(3),"",2)_" ADJ IS LEFT",1:"")
"RTN","RCDPEWL3",129,0)
 . S DIR("A")="DO YOU WANT TO ABORT THIS SPLIT NOW?: ",DIR("B")="NO"
"RTN","RCDPEWL3",130,0)
 . W ! D ^DIR K DIR
"RTN","RCDPEWL3",131,0)
 . I Y'=0 D ABORT Q
"RTN","RCDPEWL3",132,0)
 S $P(RCSPLIT(RCSPLIT),U)=Y
"RTN","RCDPEWL3",133,0)
 ;
"RTN","RCDPEWL3",134,0)
 I $E(Y,1,3)?3N,$L(Y)>7,Y'["-" S Y=$E(Y,1,3)_"-"_$E(Y,4,$L(Y))
"RTN","RCDPEWL3",135,0)
 I $TR(Y," ")="" S Y=-1
"RTN","RCDPEWL3",136,0)
 I Y'=-1 S DIC="^PRCA(430,",DIC(0)="M" D ^DIC K DIC
"RTN","RCDPEWL3",137,0)
 I +Y>0 D  I 'RCOK K RCSPLIT(RCSPLIT) G EDCL
"RTN","RCDPEWL3",138,0)
 . S RCOK=1
"RTN","RCDPEWL3",139,0)
 . I '$D(^DGCR(399,+Y,0)) D  Q    ; prca276 place screen to only allow selection of third party claims
"RTN","RCDPEWL3",140,0)
 . . W !,"   THIS IS NOT A 3RD PARTY CLAIM. CLAIMS NEED TO BE 3RD PARTY."
"RTN","RCDPEWL3",141,0)
 . . S RCOK=0
"RTN","RCDPEWL3",142,0)
 . I '$$VALSTAT^RCDPEM5(+Y) W !,"  CLAIM IS IN AN INCOMPLETE STATUS. ENTER ANOTHER CLAIM." S RCOK=0  ; prca276 do not allow incomplete claims
"RTN","RCDPEWL3",143,0)
 I Y<0 D  G:'RCOK EDCL
"RTN","RCDPEWL3",144,0)
 . S RCOK=1
"RTN","RCDPEWL3",145,0)
 . S DIR("A")="   THIS CLAIM WAS NOT FOUND IN YOUR AR.  DO YOU WANT TO CONTINUE?: ",DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR W ! I Y'=1 K RCSPLIT(RCSPLIT) S RCOK=0
"RTN","RCDPEWL3",146,0)
 E  D
"RTN","RCDPEWL3",147,0)
 . S $P(RCSPLIT(RCSPLIT),U,5)=+Y
"RTN","RCDPEWL3",148,0)
 . W "  >>Current claim balance is: ",$J(+$P($$BILL^RCJIBFN2(+Y),U,3),"",2)
"RTN","RCDPEWL3",149,0)
 ; Enter payment
"RTN","RCDPEWL3",150,0)
 S RCDIR(1)=""
"RTN","RCDPEWL3",151,0)
 S DIR("?",1)="**************"
"RTN","RCDPEWL3",152,0)
 S CT=1
"RTN","RCDPEWL3",153,0)
 I $P(RCDIR,U,3) D
"RTN","RCDPEWL3",154,0)
 . S DIR("?",CT+1)="SINCE THIS LINE HAS AN ADJUSTMENT, THE AMOUNT ENTERED HERE SHOULD BE THE",DIR("?",CT+2)="CORRECTED AMOUNT THE PAYER INDICATED THEY SHOULD HAVE PAID FOR THE CLAIM",DIR("?",CT+3)=" ",CT=CT+3
"RTN","RCDPEWL3",155,0)
 S CT=CT+1,DIR("?",CT)="ENTER THE AMT FROM THE PAYMENT TOTAL FOR THIS LINE ("_$J(+$P(RCDIR,U,2),"",2)_")"
"RTN","RCDPEWL3",156,0)
 I $G(RCDEF)="" D
"RTN","RCDPEWL3",157,0)
 . S CT=CT+1,DIR("?",CT)=" THAT APPLIES TO THIS CLAIM.  THE PAYMENT AMOUNT ALREADY USED FOR THIS"
"RTN","RCDPEWL3",158,0)
 . S CT=CT+1,DIR("?",CT)=" LINE SPLIT IS: "_$J(+$$TOT(2,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)_" LEAVING A BALANCE TO DISTRIBUTE OF: "_$J($P(RCDIR,U,2)-$$TOT(2,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)
"RTN","RCDPEWL3",159,0)
 S CT=CT+1,DIR("?",CT)="THE TOTAL PAYMENTS ENTERED DURING THIS SPLIT MUST EQUAL THE ORIGINAL LINE",DIR("?")=" PAYMENT AMOUNT OF $"_$J(+$P(RCDIR,U,2),"",2)
"RTN","RCDPEWL3",160,0)
 S DIR(0)="NAO^0:"_$S(RCDEF="":$P(RCDIR,U,2)-$$TOT(2,.RCSPLIT,RCSPLIT),1:$P(RCDIR,U,2))_":2"
"RTN","RCDPEWL3",161,0)
 S DIR("A")="PAYMENT AMOUNT TO APPLY TO THIS CLAIM: " S:$P($G(RCDEF),U,2)'="" DIR("B")=$J(+$P(RCDEF,U,2),"",2) S:$G(RCDIR(2))'=""&($G(DIR("B"))="") DIR("B")=RCDIR(2) D ^DIR K DIR
"RTN","RCDPEWL3",162,0)
 I $D(DTOUT)!$D(DUOUT) K RCSPLIT(RCSPLIT) G EDCL
"RTN","RCDPEWL3",163,0)
 S $P(RCSPLIT(RCSPLIT),U,2)=Y,RCDIR(2)=$J($P(RCDIR,U,2)-$$TOT(2,.RCSPLIT),"",2)
"RTN","RCDPEWL3",164,0)
 ; Enter adj
"RTN","RCDPEWL3",165,0)
 I $O(^RCY(344.49,RCSCR,1,+$P(RCLINE,U,2),1,0)) D  G:'RCOK EDCL
"RTN","RCDPEWL3",166,0)
 . S RCOK=1
"RTN","RCDPEWL3",167,0)
 . W !!,$J("",5)_"THIS LINE CONTAINS AN ADJUSTMENT AMOUNT OF $"_$J(+$P(RCDIR,U,3),"",2),!,$J("",5)_"THIS AMT IS USUALLY THE AMT THE PAYER PREVIOUSLY PAID",!,$J("",5),"ON A CLAIM WHICH THEY HAVE NOW AMENDED.  IF THERE WAS"
"RTN","RCDPEWL3",168,0)
 . W !,$J("",5)_"AN AMT PREVIOUSLY PAID FOR THIS CLAIM, ENTER THAT AMOUNT",!,$J("",5),"AS A NEGATIVE AMOUNT HERE.",!
"RTN","RCDPEWL3",169,0)
 . S DIR("?",1)="**************"
"RTN","RCDPEWL3",170,0)
 . S DIR("?",2)="ENTER THE AMT FROM THE ADJUSTMENT TOTAL FOR THIS LINE ("_$J(+$P(RCDIR,U,3),"",2)_")",DIR("?",3)=" THAT APPLIES TO THIS CLAIM.  THE ADJUSTMENT AMOUNT ALREADY USED FOR THIS"
"RTN","RCDPEWL3",171,0)
 . S DIR("?",4)=" LINE SPLIT IS "_$J(+$$TOT(3,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)_" LEAVING A BALANCE OF "_$J($P(RCDIR,U,3)-$$TOT(3,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)_" TO DISTRIBUTE"
"RTN","RCDPEWL3",172,0)
 . S DIR("?",5)=" ENTER IT AS THE NEGATIVE OF THE AMT THE PAYER PREVIOUSLY PAID ON THIS CLAIM"
"RTN","RCDPEWL3",173,0)
 . S DIR("?",6)="THE TOTAL ADJUSTMENTS ENTERED DURING THIS SPLIT MUST EQUAL THE ORIGINAL LINE",DIR("?")=" ADJUSTMENT AMOUNT OF $"_$J(+$P(RCDIR,U,3),"",2)
"RTN","RCDPEWL3",174,0)
 . S DIR(0)="NAO^"_$J($P(RCDIR,U,3)-$$TOT(3,.RCSPLIT,$S(RCDEF="":"",1:RCSPLIT)),"",2)_":0:2",DIR("A")="ADJUSTMENT AMOUNT: " S:$P($G(RCDEF),U,3)'="" DIR("B")=$J(+$P(RCDEF,U,3),"",2) S:$G(RCDIR(3))'=""&($G(DIR("B"))="") DIR("B")=RCDIR(3)
"RTN","RCDPEWL3",175,0)
 . D ^DIR K DIR
"RTN","RCDPEWL3",176,0)
 . I $D(DTOUT)!$D(DUOUT) S RCOK=0 K RCSPLIT(RCSPLIT) Q
"RTN","RCDPEWL3",177,0)
 . S $P(RCSPLIT(RCSPLIT),U,3)=Y,RCDIR(3)=$J($P(RCDIR,U,3)-$$TOT(3,.RCSPLIT),"",2)
"RTN","RCDPEWL3",178,0)
 I +RCDIR(2)=0,+RCDIR(3)=0 S RCDONE=1
"RTN","RCDPEWL3",179,0)
 ; PRCA*4.5*321 - BEGIN
"RTN","RCDPEWL3",180,0)
 S DIR("A")="RECEIPT LINE COMMENT: "
"RTN","RCDPEWL3",181,0)
 ;Retrieve comment previously entered from RCSPLIT if present
"RTN","RCDPEWL3",182,0)
 I $P($G(RCSPLIT(RCSPLIT)),U,6)'="" D
"RTN","RCDPEWL3",183,0)
 . I $P(RCSPLIT(RCSPLIT),U,6)'="@" S DIR("B")=$P(RCSPLIT(RCSPLIT),U,6)
"RTN","RCDPEWL3",184,0)
 ;Otherwise retrieve comment previously filed in scratchpad
"RTN","RCDPEWL3",185,0)
 E  D
"RTN","RCDPEWL3",186,0)
 . I $P($G(^RCY(344.49,RCSCR,1,+RCL,0)),U,10)'="" S DIR("B")=$P(^(0),U,10)
"RTN","RCDPEWL3",187,0)
 ;If non-suspensed line allow optional free text entry
"RTN","RCDPEWL3",188,0)
 I $P(RCSPLIT(RCSPLIT),U,5) D
"RTN","RCDPEWL3",189,0)
 . S DIR(0)="344.491,.1AO"
"RTN","RCDPEWL3",190,0)
 . D ^DIR
"RTN","RCDPEWL3",191,0)
 ;if suspense force selection from drop down list
"RTN","RCDPEWL3",192,0)
 I '$P(RCSPLIT(RCSPLIT),U,5) S Y=$$COM^RCDPECH I Y=-1 K RCSPLIT(RCSPLIT) G EDCL
"RTN","RCDPEWL3",193,0)
 ; PRCA*4.5*321 - END
"RTN","RCDPEWL3",194,0)
 ;
"RTN","RCDPEWL3",195,0)
 I Y="",$G(DIR("B"))'="" W "   Comment will be deleted"
"RTN","RCDPEWL3",196,0)
 K DIR
"RTN","RCDPEWL3",197,0)
 I $D(DTOUT)!$D(DUOUT) K RCSPLIT(RCSPLIT) G EDCL
"RTN","RCDPEWL3",198,0)
 S $P(RCSPLIT(RCSPLIT),U,6)=$S(Y="":"@",1:Y)
"RTN","RCDPEWL3",199,0)
 Q
"RTN","RCDPEWL3",200,0)
 ;
"RTN","RCDPEWL3",201,0)
ABORT ; User aborted split - kill split array
"RTN","RCDPEWL3",202,0)
 N Z
"RTN","RCDPEWL3",203,0)
 S Z=RCSPLIT K RCSPLIT S RCSPLIT=Z,RCDONE=1
"RTN","RCDPEWL3",204,0)
 Q
"RTN","RCDPEWL3",205,0)
 ;
"RTN","RCDPEWL7")
0^66^B123991907
"RTN","RCDPEWL7",1,0)
RCDPEWL7 ;ALB/TMK/KML - EDI LOCKBOX WORKLIST ERA DISPLAY SCREEN ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL7",2,0)
 ;;4.5;Accounts Receivable;**208,222,269,276,298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEWL7",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL7",4,0)
 Q
"RTN","RCDPEWL7",5,0)
 ;
"RTN","RCDPEWL7",6,0)
BLD(RCSORT) ; Build list with sort criteria
"RTN","RCDPEWL7",7,0)
 ; RCSORT = the sort levels to use to display the data in ^ pieces
"RTN","RCDPEWL7",8,0)
 ;  piece 1 = the codes for the first level sort (sort code;null or -)
"RTN","RCDPEWL7",9,0)
 ;  piece 2 = the codes for the second level sort
"RTN","RCDPEWL7",10,0)
 ;     sort code is the type of data to sort by;- indicates reverse order
"RTN","RCDPEWL7",11,0)
 N Z,Z1,RCT,RCZ
"RTN","RCDPEWL7",12,0)
 S (RCT,VALMCNT)=0
"RTN","RCDPEWL7",13,0)
 I '$D(^TMP($J,"RCERA_LIST")) D
"RTN","RCDPEWL7",14,0)
 . S Z=0 F  S Z=$O(^TMP("RCDPE-ERA_WLDX",$J,Z)) Q:'Z  S RCZ=$P($G(^(Z)),U,2) D
"RTN","RCDPEWL7",15,0)
 .. I $$FILTER^RCDPEWL0(RCZ) S ^TMP($J,"RCERA_LIST",$$SL(RCZ,$P(RCSORT,U)),$$SL(RCZ,$P(RCSORT,U,2)),RCZ)=""
"RTN","RCDPEWL7",16,0)
 . K ^TMP("RCDPE-ERA_WLDX",$J),^TMP("RCDPE-ERA_WL",$J)
"RTN","RCDPEWL7",17,0)
 ;
"RTN","RCDPEWL7",18,0)
 S Z=""
"RTN","RCDPEWL7",19,0)
 I RCSORT'["PN;-" D
"RTN","RCDPEWL7",20,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z)) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1)) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",21,0)
 ;
"RTN","RCDPEWL7",22,0)
 I $P(RCSORT,U)["PN;-" D
"RTN","RCDPEWL7",23,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z),-1) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1)) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",24,0)
 ;
"RTN","RCDPEWL7",25,0)
 I $P(RCSORT,U,2)["PN;-" D
"RTN","RCDPEWL7",26,0)
 . F  S Z=$O(^TMP($J,"RCERA_LIST",Z)) Q:Z=""  S Z1="" F  S Z1=$O(^TMP($J,"RCERA_LIST",Z,Z1),-1) Q:Z1=""  D EXTRACT(Z,Z1,.RCT)
"RTN","RCDPEWL7",27,0)
 ;
"RTN","RCDPEWL7",28,0)
 I '$O(^TMP($J,"RCERA_LIST",0)) D SET("No ERAs left for your selection criteria")
"RTN","RCDPEWL7",29,0)
 K ^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",30,0)
 S ^TMP("RCERA_PARAMS",$J,"SORT")=RCSORT
"RTN","RCDPEWL7",31,0)
 Q
"RTN","RCDPEWL7",32,0)
 ;
"RTN","RCDPEWL7",33,0)
EXTRACT(RCSRT1,RCSRT2,RCT) ; Extract the data
"RTN","RCDPEWL7",34,0)
 ; RCSRT1 = data value at 1st sort level
"RTN","RCDPEWL7",35,0)
 ; RCSRT2 = data value at 2nd sort level
"RTN","RCDPEWL7",36,0)
 ; RCT = running entry counter - returned if passed by ref
"RTN","RCDPEWL7",37,0)
 N AUTOCOMP,FIRST,RC0,RCEFT,RCEXCEP,RCPOST,RCSTAT,RCZ,X,XX,Z,Z0 ;PRCA*4.5*318 Variable XX added
"RTN","RCDPEWL7",38,0)
 S RCZ=0 F  S RCZ=$O(^TMP($J,"RCERA_LIST",RCSRT1,RCSRT2,RCZ)) Q:'RCZ  D
"RTN","RCDPEWL7",39,0)
 . S RCT=RCT+1,RC0=$G(^RCY(344.4,RCZ,0))
"RTN","RCDPEWL7",40,0)
 . S RCEFT=+$O(^RCY(344.31,"AERA",RCZ,0))
"RTN","RCDPEWL7",41,0)
 . S RCEXCEP=$$XCEPT^RCDPEWLP(RCZ)  ; prca*4.5*298  assignment of ERA exception flag
"RTN","RCDPEWL7",42,0)
 . S AUTOCOMP=$S($P($G(^RCY(344.4,RCZ,4)),U,2)=2:"A",1:"")   ;prca*4.5*298  AUTO-POSTED COMPLETE indicator ("A")
"RTN","RCDPEWL7",43,0)
 . S RCSTAT=$S('RCEFT:U_$S($P(RC0,U,15)="CHK":"(CHECK PAYMENT EXPECTED)",$P(RC0,U,15)="NON":"(NO PAYMENT EXPECTED)",$P(RC0,U,9)=2:"(CHECK PAYMENT CHOSEN)",1:"N/A"),1:$$FMSSTAT^RCDPUREC(+$P($G(^RCY(344.31,RCEFT,0)),U,9)))
"RTN","RCDPEWL7",44,0)
 . S RCPOST=$S(RCEFT:"EFT RECEIPT STATUS: ",1:"")_$P(RCSTAT,U,2)
"RTN","RCDPEWL7",45,0)
 . ;prca*4.5*298 include Auto-Post Complete indicator and ERA exception flag in $SELECT statement
"RTN","RCDPEWL7",46,0)
 . S X=$E(RCT_$J("",5),1,5)_"  "_$S(RCEXCEP]"":RCEXCEP,AUTOCOMP]"":AUTOCOMP,$D(^RCY(344.49,RCZ)):" ",1:"-")_$E($P(RC0,U)_$J("",10),1,10)_"  "_$E($P(RC0,U,2)_$J("",50),1,50)
"RTN","RCDPEWL7",47,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",48,0)
 . S X=$J("",40)_$J($$FMTE^XLFDT($P(RC0,U,7),"2D"),8)_$J("",5)_$J(+$P(RC0,U,5),12,2)
"RTN","RCDPEWL7",49,0)
 . S $E(X,73,80)=$$FMTE^XLFDT($P(RC0,U,7),"2D")
"RTN","RCDPEWL7",50,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",51,0)
 . S X=$J("",12)_$E($P(RC0,U,6)_$J("",30),1,30)_"  APPROX # EEOBs: "_+$$CTEEOB^RCDPEWLB(RCZ)
"RTN","RCDPEWL7",52,0)
 . D SET(X,RCT,RCZ)
"RTN","RCDPEWL7",53,0)
 . S XX=$$EXTERNAL^DILFD(344.4,.09,"",$P(RC0,U,9))
"RTN","RCDPEWL7",54,0)
 . S:$$UNBAL^RCDPEAP1(RCZ) XX=XX_" - UNBALANCED" ;PRCA*4.5*318 added line 
"RTN","RCDPEWL7",55,0)
 . S X=$J("",12)_$E(XX_$J("",30),1,30)_"  "_RCPOST ;PRCA*4.5*318 modified line 
"RTN","RCDPEWL7",56,0)
 . D SET(X,RCT)
"RTN","RCDPEWL7",57,0)
 . D SET(" ",RCT)
"RTN","RCDPEWL7",58,0)
 ;.; prca*4.5*298  per patch requirements, keep code related to
"RTN","RCDPEWL7",59,0)
 ;. ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL7",60,0)
 ;. ;I $G(^TMP("RCERA_PARAMS",$J,"BATCHON")) D
"RTN","RCDPEWL7",61,0)
 ;.. ;S Z=0 F  S Z=$O(^RCY(344.49,RCZ,3,Z)) Q:'Z  S Z0=$G(^(Z,0)) I Z0'="" D
"RTN","RCDPEWL7",62,0)
 ;...; S X=$J("",12)_$E("- BATCH #"_$P(Z0,U)_$J("",4),1,13)_" "_$E($P(Z0,U,2)_$J("",30),1,30)_"  "_$S('$P(Z0,U,3):"NOT ",1:"")_"READY TO POST"
"RTN","RCDPEWL7",63,0)
 ;... ;D SET(X,RCT)
"RTN","RCDPEWL7",64,0)
 ;
"RTN","RCDPEWL7",65,0)
 S VALMSG="|'-' No scratchpad|'x' EXC |'A' autopost complete"
"RTN","RCDPEWL7",66,0)
 ;
"RTN","RCDPEWL7",67,0)
 Q
"RTN","RCDPEWL7",68,0)
 ;
"RTN","RCDPEWL7",69,0)
SL(Y,SORT) ; Returns data for sort level from entry Y in file 344.4
"RTN","RCDPEWL7",70,0)
 ; SORT = the sort data in ';' delimited pieces
"RTN","RCDPEWL7",71,0)
 ;    pc 1 = code for sort data
"RTN","RCDPEWL7",72,0)
 ;    pc 2 = the order requested (- or null)
"RTN","RCDPEWL7",73,0)
 ;
"RTN","RCDPEWL7",74,0)
 N RC0,DAT,SORT1,SORT2
"RTN","RCDPEWL7",75,0)
 S SORT1=$P(SORT,";"),SORT2=$P(SORT,";",2)
"RTN","RCDPEWL7",76,0)
 S RC0=$G(^RCY(344.4,Y,0)),DAT=" "
"RTN","RCDPEWL7",77,0)
 ; No sort
"RTN","RCDPEWL7",78,0)
 I SORT="" G SLQ
"RTN","RCDPEWL7",79,0)
 ; Amt paid
"RTN","RCDPEWL7",80,0)
 I SORT1="AP" D  G SLQ
"RTN","RCDPEWL7",81,0)
 . S DAT=SORT2_+$P(RC0,U,5)
"RTN","RCDPEWL7",82,0)
 ; ERA date pd
"RTN","RCDPEWL7",83,0)
 I SORT1="DP" D  G SLQ
"RTN","RCDPEWL7",84,0)
 . S DAT=SORT2_($P(RC0,U,4)\1)
"RTN","RCDPEWL7",85,0)
 ; Payer name
"RTN","RCDPEWL7",86,0)
 I SORT1="PN" D  G SLQ
"RTN","RCDPEWL7",87,0)
 . S DAT=$$UP^RCDPEARL($P(RC0,U,6))
"RTN","RCDPEWL7",88,0)
 ; ERA date received
"RTN","RCDPEWL7",89,0)
 I SORT1="DR" D  G SLQ
"RTN","RCDPEWL7",90,0)
 . S DAT=SORT2_($P(RC0,U,7)\1)
"RTN","RCDPEWL7",91,0)
 ;
"RTN","RCDPEWL7",92,0)
SLQ Q $S(DAT'="":DAT,1:" ")
"RTN","RCDPEWL7",93,0)
 ;
"RTN","RCDPEWL7",94,0)
INIT ; Entry point for List template to build the display of ERAs
"RTN","RCDPEWL7",95,0)
 ;
"RTN","RCDPEWL7",96,0)
 ; Parameters for selecting ERAs to be included in the list are
"RTN","RCDPEWL7",97,0)
 ; contained in the global ^TMP("RCERA_PARAMS",$J,parameter name)
"RTN","RCDPEWL7",98,0)
 ;
"RTN","RCDPEWL7",99,0)
 N RCZ,RC0,RCT,RCTT,RCQUIT,RCDTFR,RCDTTO,DTOUT,DUOUT,DIR,X,Y,Z,Z1,RCPOST,RCEFT,RCINDX,QFLG
"RTN","RCDPEWL7",100,0)
 D CLEAN^VALM10
"RTN","RCDPEWL7",101,0)
 K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",102,0)
 ;
"RTN","RCDPEWL7",103,0)
 S (RCT,RCTT,RCQUIT)=0
"RTN","RCDPEWL7",104,0)
 ;
"RTN","RCDPEWL7",105,0)
 S RCDTFR=+$P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U),RCDTTO=$S($P($G(^TMP("RCERA_PARAMS",$J,"RCDT")),U,2):$P(^("RCDT"),U,2),1:DT)
"RTN","RCDPEWL7",106,0)
 ;
"RTN","RCDPEWL7",107,0)
 S RCINDX=$S(RCDTFR:RCDTFR-.00000001,1:0)
"RTN","RCDPEWL7",108,0)
 W !!,"SEARCHING, PLEASE STANDBY (PRESS '^' TO QUIT SEARCH)",!!
"RTN","RCDPEWL7",109,0)
 F  S RCINDX=$O(^RCY(344.4,"AFD",RCINDX)) Q:'RCINDX!(RCINDX\1>RCDTTO)!RCQUIT  S RCZ=0 F  S RCZ=$O(^RCY(344.4,"AFD",RCINDX,RCZ)) Q:'RCZ  D  Q:RCQUIT
"RTN","RCDPEWL7",110,0)
 . S RCTT=RCTT+1
"RTN","RCDPEWL7",111,0)
 . I (RCTT#10000=0) D  Q:RCQUIT=1
"RTN","RCDPEWL7",112,0)
 . . S RCTT=0
"RTN","RCDPEWL7",113,0)
 . . D WAIT^DICD
"RTN","RCDPEWL7",114,0)
 . . D INITKB^XGF ; supported by DBIA 3173
"RTN","RCDPEWL7",115,0)
 . . S QFLG=$$READ^XGF(1,1)
"RTN","RCDPEWL7",116,0)
 . . Q:$G(DTOUT)
"RTN","RCDPEWL7",117,0)
 . . S:QFLG="^" RCQUIT=1 Q
"RTN","RCDPEWL7",118,0)
 . . I $D(DUOUT)!(Y=0) S RCQUIT=1 Q
"RTN","RCDPEWL7",119,0)
 . . D RESETKB^XGF
"RTN","RCDPEWL7",120,0)
 . ;
"RTN","RCDPEWL7",121,0)
 . S RC0=$G(^RCY(344.4,RCZ,0))
"RTN","RCDPEWL7",122,0)
 . I $$FILTER^RCDPEWL0(RCZ) S ^TMP($J,"RCERA_LIST",$$SL(RCZ,"DR"),$$SL(RCZ,""),RCZ)=""
"RTN","RCDPEWL7",123,0)
 ;
"RTN","RCDPEWL7",124,0)
 ; Output the list
"RTN","RCDPEWL7",125,0)
 I 'RCQUIT D
"RTN","RCDPEWL7",126,0)
 . D:$D(^TMP($J,"RCERA_LIST")) BLD("DR^N")
"RTN","RCDPEWL7",127,0)
 . ; If no ERAs found display the message below in the list area
"RTN","RCDPEWL7",128,0)
 . I '$O(^TMP("RCDPE-ERA_WL",$J,0)) D
"RTN","RCDPEWL7",129,0)
 . . S ^TMP("RCDPE-ERA_WL",$J,1,0)="THERE ARE NO ERAs MATCHING YOUR SELECTION CRITERIA" S VALMCNT=2
"RTN","RCDPEWL7",130,0)
 I RCQUIT K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP($J,"RCERA_LIST") S VALMQUIT=""
"RTN","RCDPEWL7",131,0)
 Q
"RTN","RCDPEWL7",132,0)
 ;
"RTN","RCDPEWL7",133,0)
HDR ; Header for ERA Worklist (List user Current Screen View selections)
"RTN","RCDPEWL7",134,0)
 ; Input: ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWL7",135,0)
 ; Output: VALMHDR
"RTN","RCDPEWL7",136,0)
 N X,XX,XX2
"RTN","RCDPEWL7",137,0)
 ;
"RTN","RCDPEWL7",138,0)
 ; PRCA*4.5*321 - Total re-write of header subroutine to add new filters and shorten lines etc.
"RTN","RCDPEWL7",139,0)
 ; First header line. Date range and Pharmacy/Tricare/Medical
"RTN","RCDPEWL7",140,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCDT"))
"RTN","RCDPEWL7",141,0)
 S XX="DATE RANGE  : "
"RTN","RCDPEWL7",142,0)
 I $P(X,U) D  ;
"RTN","RCDPEWL7",143,0)
 . S XX=XX_$$FMTE^XLFDT($P(X,U),2)
"RTN","RCDPEWL7",144,0)
 . I $P(X,U,2) S XX=XX_"-"_$$FMTE^XLFDT($P(X,U,2),2)
"RTN","RCDPEWL7",145,0)
 E  S XX=XX_"NONE SELECTED"
"RTN","RCDPEWL7",146,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWL7",147,0)
 S XX2="PHARM/TRIC/MEDICAL: "
"RTN","RCDPEWL7",148,0)
 S XX2=XX2_$S(X="M":"MEDICAL ONLY",X="P":"PHARMACY ONLY",X="T":"TRICARE ONLY",1:"ALL")
"RTN","RCDPEWL7",149,0)
 S XX=$$SETSTR^VALM1(XX2,XX,40,41)
"RTN","RCDPEWL7",150,0)
 S VALMHDR(1)=XX
"RTN","RCDPEWL7",151,0)
 ;
"RTN","RCDPEWL7",152,0)
 ; Second header line. Match/Unmatched and Auto-posting/Non Autoposting
"RTN","RCDPEWL7",153,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH"))
"RTN","RCDPEWL7",154,0)
 S XX="MATCH STATUS: "_$S(X="N":"NOT MATCHED",X="M":"MATCHED",1:"BOTH")
"RTN","RCDPEWL7",155,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))
"RTN","RCDPEWL7",156,0)
 S XX2="AUTO-POSTING: "
"RTN","RCDPEWL7",157,0)
 S XX2=XX2_$S(X="A":"AUTO-POSTING ONLY",X="N":"NON AUTO-POSTING ONLY",1:"BOTH")
"RTN","RCDPEWL7",158,0)
 S XX=$$SETSTR^VALM1(XX2,XX,46,35)
"RTN","RCDPEWL7",159,0)
 S VALMHDR(2)=XX
"RTN","RCDPEWL7",160,0)
 ;
"RTN","RCDPEWL7",161,0)
 ; Third header line. Post status, payer name range and zero payment/payment
"RTN","RCDPEWL7",162,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWL7",163,0)
 S XX="POST STATUS : "_$S(X="U":"UNPOSTED",X="P":"POSTED",1:"BOTH")
"RTN","RCDPEWL7",164,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEWL7",165,0)
 I $P(X,U)="A"!(X="") D  ;
"RTN","RCDPEWL7",166,0)
 . S XX2="ALL PAYERS"
"RTN","RCDPEWL7",167,0)
 E  D  ;
"RTN","RCDPEWL7",168,0)
 . S XX2=$P(X,U,2)_"-"_$P(X,U,3)
"RTN","RCDPEWL7",169,0)
 . I $L(XX2)>11 S XX2="RANGE"
"RTN","RCDPEWL7",170,0)
 S XX2="PAYERS: "_XX2
"RTN","RCDPEWL7",171,0)
 S XX=$$SETSTR^VALM1(XX2,XX,26,20)
"RTN","RCDPEWL7",172,0)
 S X=$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))
"RTN","RCDPEWL7",173,0)
 S XX2="PAYMENT TYPE: "
"RTN","RCDPEWL7",174,0)
 S XX2=XX2_$S(X="Z":"ZERO PAYMENTS ONLY",X="P":"PAYMENTS ONLY",1:"BOTH")
"RTN","RCDPEWL7",175,0)
 S XX=$$SETSTR^VALM1(XX2,XX,46,35)
"RTN","RCDPEWL7",176,0)
 S VALMHDR(3)=XX
"RTN","RCDPEWL7",177,0)
 ;
"RTN","RCDPEWL7",178,0)
 S VALMHDR(4)="#       ERA #            Trace#"
"RTN","RCDPEWL7",179,0)
 Q
"RTN","RCDPEWL7",180,0)
 ;
"RTN","RCDPEWL7",181,0)
FNL ; -- Clean up list
"RTN","RCDPEWL7",182,0)
 K ^TMP("RCDPE-ERA_WL",$J),^TMP("RCDPE-ERA_WLDX",$J),^TMP("RCERA_PARAMS",$J),^TMP($J,"RCERA_LIST")
"RTN","RCDPEWL7",183,0)
 Q
"RTN","RCDPEWL7",184,0)
 ;
"RTN","RCDPEWL7",185,0)
SET(X,RCSEQ,RCSEQ1) ; -- set arrays
"RTN","RCDPEWL7",186,0)
 ; X = the data to set into the global
"RTN","RCDPEWL7",187,0)
 ; RCSEQ = the selectable line #
"RTN","RCDPEWL7",188,0)
 ; RCSEQ1 = the ien of the entry in file 344.4
"RTN","RCDPEWL7",189,0)
 S VALMCNT=VALMCNT+1,^TMP("RCDPE-ERA_WL",$J,VALMCNT,0)=X
"RTN","RCDPEWL7",190,0)
 I $G(RCSEQ) S ^TMP("RCDPE-ERA_WL",$J,"IDX",VALMCNT,RCSEQ)=$G(RCSEQ1)
"RTN","RCDPEWL7",191,0)
 I $G(RCSEQ1) S ^TMP("RCDPE-ERA_WLDX",$J,RCSEQ)=VALMCNT_U_RCSEQ1
"RTN","RCDPEWL7",192,0)
 Q
"RTN","RCDPEWL7",193,0)
 ;
"RTN","RCDPEWL7",194,0)
ENTERWL ; Enter the worklist with an ERA
"RTN","RCDPEWL7",195,0)
 D WL($$SEL())
"RTN","RCDPEWL7",196,0)
 D BLD($G(^TMP("RCERA_PARAMS",$J,"SORT")))
"RTN","RCDPEWL7",197,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",198,0)
 Q
"RTN","RCDPEWL7",199,0)
 ;
"RTN","RCDPEWL7",200,0)
SEL() ; Select an ERA from the ERA list
"RTN","RCDPEWL7",201,0)
 N RCDA,VALMY
"RTN","RCDPEWL7",202,0)
 D FULL^VALM1
"RTN","RCDPEWL7",203,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPEWL7",204,0)
 S RCERA=0
"RTN","RCDPEWL7",205,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RCERA=+$P($G(^TMP("RCDPE-ERA_WLDX",$J,RCDA)),U,2)
"RTN","RCDPEWL7",206,0)
 ;
"RTN","RCDPEWL7",207,0)
 Q RCERA
"RTN","RCDPEWL7",208,0)
 ;
"RTN","RCDPEWL7",209,0)
WL(RCERA) ; Enter worklist
"RTN","RCDPEWL7",210,0)
 ;
"RTN","RCDPEWL7",211,0)
 ;             input - RCERA = ien of the ERA entry in file 344.4
"RTN","RCDPEWL7",212,0)
 ;
"RTN","RCDPEWL7",213,0)
 N DA,DIE,DIR,DR,DTOUT,DUOUT,I,PREVENT,RC0,RCNOED,RCQUIT,RCSORT,RCEXC,RETCODES,STATE,TYPE,X,Y
"RTN","RCDPEWL7",214,0)
 Q:RCERA'>0
"RTN","RCDPEWL7",215,0)
 ; PRCA*4.5*304 - Reentry if we cleared exceptions
"RTN","RCDPEWL7",216,0)
WL1 ; retest to make sure this ERA does not have an exception
"RTN","RCDPEWL7",217,0)
 S TYPE=$S($$PAYTYPE("P"):"P",1:"M"),RCEXC=0 ; PRCA*4.5*321
"RTN","RCDPEWL7",218,0)
 ; PRCA*4.5*304 - see if we have the ERA and go to WL1 to retest.
"RTN","RCDPEWL7",219,0)
 I ($$XCEPT^RCDPEWLP(RCERA)]"")&(TYPE="M") D EXCDENY^RCDPEWLP Q  ;cannot process MEDICAL ERA if exception exists then fall back to Worklist.
"RTN","RCDPEWL7",220,0)
 ; PRCA*4.5*304 - Removed the G:($G(RCERA)'="")&&($G(RCEXC)=1) WL1 from above so it falls back to the worklist instead of going forward to the "Select ERA"
"RTN","RCDPEWL7",221,0)
 ; I ($$XCEPT^RCDPEWLP(RCERA)]"")&(TYPE="M") D EXCDENY^RCDPEWLP G:($G(RCERA)'="")&&($G(RCEXC)=1) WL1 Q
"RTN","RCDPEWL7",222,0)
 S (RCQUIT,RCNOED,PREVENT)=0,RC0=$G(^RCY(344.4,RCERA,0)),RCSORT=""
"RTN","RCDPEWL7",223,0)
 I $P(RC0,U,8) D
"RTN","RCDPEWL7",224,0)
 . I '$D(^RCY(344.49,RCERA,0)) D  Q
"RTN","RCDPEWL7",225,0)
 .. S RCQUIT=1
"RTN","RCDPEWL7",226,0)
 .. W ! S DIR(0)="EA",DIR("A",1)="A SCRATCH PAD WAS NOT CREATED FOR THIS ERA BEFORE POSTING",DIR("A",2)="USE THE VIEW/PRINT ERA OPTION TO SEE ITS DETAIL",DIR("A")="Press ENTER to continue: " D ^DIR K DIR Q
"RTN","RCDPEWL7",227,0)
 . ;
"RTN","RCDPEWL7",228,0)
 . S RCNOED=+$P(RC0,U,8)
"RTN","RCDPEWL7",229,0)
 . S DIR(0)="EA",DIR("A",1)="THIS ERA ALREADY HAS A RECEIPT - YOU MAY ONLY VIEW ITS SCRATCH PAD",DIR("A")="Press ENTER to continue: "
"RTN","RCDPEWL7",230,0)
 . W ! D ^DIR K DIR W !
"RTN","RCDPEWL7",231,0)
 G:RCQUIT WLQ
"RTN","RCDPEWL7",232,0)
 G:RCNOED WLD   ; already has a receipt so no need to check for older unposted EFTs
"RTN","RCDPEWL7",233,0)
 ; function $$AGEDEFTS - search for any UNPOSTED EFTs older than 14 days (medical) or 30 days (pharmacy)
"RTN","RCDPEWL7",234,0)
 ; return value of 0, 2, or 3 represent that entry into scratchpad can occur
"RTN","RCDPEWL7",235,0)
 S RETCODES=$$AGEDEFTS^RCDPEWLP(RCERA,TYPE)
"RTN","RCDPEWL7",236,0)
 F I=1:1 S STATE=$P(RETCODES,U,I) Q:STATE=""  S PREVENT=$S($E(STATE,1)=1:1,1:0)
"RTN","RCDPEWL7",237,0)
 Q:PREVENT   ; prevent user from entering scratchpad; there are older EFTs on the system that need to be worked.
"RTN","RCDPEWL7",238,0)
WLD ;
"RTN","RCDPEWL7",239,0)
 D DISP^RCDPEWL(RCERA,RCNOED)
"RTN","RCDPEWL7",240,0)
 ;
"RTN","RCDPEWL7",241,0)
 ; prca*4.5*298  per patch requirements, keep code related to 
"RTN","RCDPEWL7",242,0)
 ; creating/maintaining batches but just remove from execution.
"RTN","RCDPEWL7",243,0)
 ;I 'RCQUIT,$G(^TMP("RCBATCH_SELECTED",$J)) D
"RTN","RCDPEWL7",244,0)
 ;. S DA(1)=RCERA,DA=+$G(^TMP("RCBATCH_SELECTED",$J)),DR=".05////0",DIE="^RCY(344.49,"_DA(1)_",3," D ^DIE
"RTN","RCDPEWL7",245,0)
 ;. L -^RCY(344.49,DA(1),3,DA,0)
"RTN","RCDPEWL7",246,0)
 ;. K ^TMP("RCBATCH_SELECTED",$J)
"RTN","RCDPEWL7",247,0)
 ;E  D
"RTN","RCDPEWL7",248,0)
 ;L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL7",249,0)
WLQ ;
"RTN","RCDPEWL7",250,0)
 L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL7",251,0)
 Q
"RTN","RCDPEWL7",252,0)
 ;
"RTN","RCDPEWL7",253,0)
PRERA ; View/Print ERA from ERA list menu
"RTN","RCDPEWL7",254,0)
 N RCSCR
"RTN","RCDPEWL7",255,0)
 S RCSCR=$$SEL()
"RTN","RCDPEWL7",256,0)
 I RCSCR>0 D PRERA^RCDPEWL0
"RTN","RCDPEWL7",257,0)
 S VALMBCK="R"
"RTN","RCDPEWL7",258,0)
 Q
"RTN","RCDPEWL7",259,0)
 ;
"RTN","RCDPEWL7",260,0)
BAT(RCERA) ; Select batch, if needed
"RTN","RCDPEWL7",261,0)
 ; Returns 1 if batch selected OK or no batch needed
"RTN","RCDPEWL7",262,0)
 ; RCERA = ien of entry in file 344.49
"RTN","RCDPEWL7",263,0)
 N RCINUSE,RCQUIT,RCADJ,RC0,RCOK,DIR,DTOUT,DUOUT,X,Y,Z
"RTN","RCDPEWL7",264,0)
 K ^TMP("RCBATCH_SELECTED",$J)
"RTN","RCDPEWL7",265,0)
 S RCOK=1
"RTN","RCDPEWL7",266,0)
 I '$O(^RCY(344.49,RCERA,3,0)) G BATQ
"RTN","RCDPEWL7",267,0)
 S RC0=$G(^RCY(344.4,RCERA,0))
"RTN","RCDPEWL7",268,0)
 S (RCQUIT,RCADJ)=0
"RTN","RCDPEWL7",269,0)
 I $$HASADJ^RCDPEWL8(RCERA) D
"RTN","RCDPEWL7",270,0)
 . S RCADJ=1
"RTN","RCDPEWL7",271,0)
 . S DIR("A",1)="THIS ERA HAS NEGATIVE ADJUSTMENTS THAT NEED TO BE DISTRIBUTED TO OTHER",DIR("A",2)="PAYMENTS ON THE ERA.  YOU CANNOT SELECT ANY INDIVIDUAL BATCHES UNTIL",DIR("A",3)="THE DISTRIBUTIONS ARE COMPLETE."
"RTN","RCDPEWL7",272,0)
 . S DIR("A")="Press ENTER to continue: ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEWL7",273,0)
 S RCINUSE=+$O(^RCY(344.49,"AINUSE",1,RCERA,0))
"RTN","RCDPEWL7",274,0)
 I RCINUSE D
"RTN","RCDPEWL7",275,0)
 . N OK,Z
"RTN","RCDPEWL7",276,0)
 . Q:RCADJ!$P(RC0,U,8)
"RTN","RCDPEWL7",277,0)
 . S OK=0 S Z=0 F  S Z=$O(^RCY(344.49,RCERA,3,Z)) Q:'Z  I '$P($G(^RCY(344.49,RCERA,3,Z,0)),U,5) S OK=1 Q
"RTN","RCDPEWL7",278,0)
 . I 'OK D  Q
"RTN","RCDPEWL7",279,0)
 .. S DIR("A",1)="ALL BATCHES WITHIN THIS ERA ARE CURRENTLY IN USE - TRY AGAIN LATER",DIR("A")="Press ENTER to continue: ",DIR(0)="EA" W ! D ^DIR K DIR S RCQUIT=1,RCOK=0 Q
"RTN","RCDPEWL7",280,0)
 . W !!,"AT LEAST 1 BATCH WITHIN THIS ERA IS CURRENTLY IN USE",!,"AT THIS TIME, YOU CAN ONLY ACCESS INDIVIDUAL BATCHES",!
"RTN","RCDPEWL7",281,0)
 . D SELBAT^RCDPEWL8(RCERA,.RCQUIT)
"RTN","RCDPEWL7",282,0)
 . I RCQUIT S RCOK=0
"RTN","RCDPEWL7",283,0)
 E  D
"RTN","RCDPEWL7",284,0)
 . Q:$P(RC0,U,8)!RCADJ  ; Always require the entire ERA be used
"RTN","RCDPEWL7",285,0)
 . S DIR(0)="SA^E:(E)NTIRE ERA;B:(B)ATCH",DIR("A")="DO YOU WANT THE (E)NTIRE ERA OR JUST A (B)ATCH?: " W ! D ^DIR K DIR
"RTN","RCDPEWL7",286,0)
 . I $D(DTOUT)!$D(DUOUT) S RCQUIT=1,RCOK=0 Q
"RTN","RCDPEWL7",287,0)
 . I Y="E" D  Q
"RTN","RCDPEWL7",288,0)
 .. S RCQUIT=1 F Z=1:1:2 L +^RCY(344.4,RCERA,0):5 I $T S RCQUIT=0 Q
"RTN","RCDPEWL7",289,0)
 .. I RCQUIT S RCOK=0,DIR(0)="EA",DIR("A",1)="ANOTHER USER IS CURRENTLY USING THIS ERA, TRY AGAIN LATER",DIR("A")="Press ENTER to continue: " W ! D ^DIR K DIR Q
"RTN","RCDPEWL7",290,0)
 . D SELBAT^RCDPEWL8(RCERA,.RCQUIT)
"RTN","RCDPEWL7",291,0)
 . I RCQUIT S RCOK=0
"RTN","RCDPEWL7",292,0)
 ;
"RTN","RCDPEWL7",293,0)
BATQ Q RCOK
"RTN","RCDPEWL7",294,0)
 ;
"RTN","RCDPEWL7",295,0)
PAYTYPE(IEN,TYPE) ; EP - New way to tell if a payer is pharamcy, Tricare or medical - Added for PRCA*4.5*321
"RTN","RCDPEWL7",296,0)
 ; Input: IEN - Internal entry number of an ERA (#344.4)
"RTN","RCDPEWL7",297,0)
 ;        TYPE="P" - Pharmacy, "T" - Tricare, "M" - Medical
"RTN","RCDPEWL7",298,0)
 ;        ("M" is neither pharmacy nor Tricare)
"RTN","RCDPEWL7",299,0)
 ; Return: 1 - Payer on ERA matches the TYPE
"RTN","RCDPEWL7",300,0)
 ;         0 - Payer on ERA does not match the type. Or can't find payer.
"RTN","RCDPEWL7",301,0)
 ;
"RTN","RCDPEWL7",302,0)
 N FLAG,RETURN
"RTN","RCDPEWL7",303,0)
 S RETURN=0
"RTN","RCDPEWL7",304,0)
 I '$$PAYFLAGS(IEN,.FLAG) Q 0
"RTN","RCDPEWL7",305,0)
 I TYPE="P",FLAG("P") S RETURN=1
"RTN","RCDPEWL7",306,0)
 I TYPE="T",FLAG("T") S RETURN=1
"RTN","RCDPEWL7",307,0)
 I TYPE="M",'FLAG("P"),'FLAG("T") S RETURN=1
"RTN","RCDPEWL7",308,0)
 Q RETURN
"RTN","RCDPEWL7",309,0)
 ;
"RTN","RCDPEWL7",310,0)
PAYFLAGS(IEN,FLAG) ; EP - Return the pharmacy and tricare flags for an ERA
"RTN","RCDPEWL7",311,0)
 ; Input: IEN - Internal entry number of an ERA (#344.4)
"RTN","RCDPEWL7",312,0)
 ; Return: 1 - Payer found
"RTN","RCDPEWL7",313,0)
 ;         0 - Can't find payer.
"RTN","RCDPEWL7",314,0)
 ; Variable FLAG passed by reference to return values of the pharamcy and Tricare flags.
"RTN","RCDPEWL7",315,0)
 ;
"RTN","RCDPEWL7",316,0)
 N RCINS,RCPAYIEN,RCTIN,X
"RTN","RCDPEWL7",317,0)
 S RCTIN=$$GET1^DIQ(344.4,IEN_",",.03)
"RTN","RCDPEWL7",318,0)
 I RCTIN="" Q 0
"RTN","RCDPEWL7",319,0)
 S RCINS=$$GET1^DIQ(344.4,IEN_",",.06)
"RTN","RCDPEWL7",320,0)
 I RCINS="" Q 0
"RTN","RCDPEWL7",321,0)
 ;
"RTN","RCDPEWL7",322,0)
 ; Find a payer that matches both TIN and PAYER NAME from the ERA
"RTN","RCDPEWL7",323,0)
 S RCPAYIEN=""
"RTN","RCDPEWL7",324,0)
 S X=0
"RTN","RCDPEWL7",325,0)
 F  S X=$O(^RCY(344.6,"C",RCTIN_" ",X)) Q:'X  D  Q:RCPAYIEN  ;
"RTN","RCDPEWL7",326,0)
 . N PAYNAME
"RTN","RCDPEWL7",327,0)
 . S PAYNAME=$$GET1^DIQ(344.6,X_",",.01)
"RTN","RCDPEWL7",328,0)
 . I PAYNAME=RCINS S RCPAYIEN=X
"RTN","RCDPEWL7",329,0)
 I 'RCPAYIEN Q 0
"RTN","RCDPEWL7",330,0)
 ;
"RTN","RCDPEWL7",331,0)
 S FLAG("P")=+$$GET1^DIQ(344.6,RCPAYIEN_",",.09,"I")
"RTN","RCDPEWL7",332,0)
 S FLAG("T")=+$$GET1^DIQ(344.6,RCPAYIEN_",",.1,"I")
"RTN","RCDPEWL7",333,0)
 Q 1
"RTN","RCDPEWL7",334,0)
 ;
"RTN","RCDPEWL7",335,0)
HELP ; -- help code
"RTN","RCDPEWL7",336,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RCDPEWL7",337,0)
 Q
"RTN","RCDPEWL7",338,0)
 ;
"RTN","RCDPEWL8")
0^51^B102769103
"RTN","RCDPEWL8",1,0)
RCDPEWL8 ;ALB/TMK/PJH - EDI LOCKBOX WORKLIST ERA LEVEL ;Jun 06, 2014@19:11:19
"RTN","RCDPEWL8",2,0)
 ;;4.5;Accounts Receivable;**208,269,276,298,304,318,321**;Mar 20, 1995;Build 48
"RTN","RCDPEWL8",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWL8",4,0)
 Q
"RTN","RCDPEWL8",5,0)
 ;
"RTN","RCDPEWL8",6,0)
FILESP ; Action that files the split lines
"RTN","RCDPEWL8",7,0)
 ; Assumes RCDIR,RCLINE,RCSCR,RCSPLIT array defined
"RTN","RCDPEWL8",8,0)
 N RCTOT,Z,RCZ0,RCZ1,DTOUT,DUOUT,DIR,X,Y,DIE,DA,DR,DIC,DD,DO,DLAYGO,RCZ,RCZZ,RCZT,VALBCK
"RTN","RCDPEWL8",9,0)
 D FULL^VALM1
"RTN","RCDPEWL8",10,0)
 I '$G(^TMP("RCDPE_EOB_SPLIT_OK",$J)) D  Q
"RTN","RCDPEWL8",11,0)
 . S VALMBCK="R"
"RTN","RCDPEWL8",12,0)
 . F Z=2,3 S RCTOT(Z)=$$TOT^RCDPEWL3(Z,.RCSPLIT)
"RTN","RCDPEWL8",13,0)
 . S DIR(0)="EA"
"RTN","RCDPEWL8",14,0)
 . S DIR("A",1)="TOTAL "_$S(+RCTOT(2)'=+$P(RCDIR,U,2):"PAYMENTS",1:"ADJUSTMENTS")_$S(+RCTOT(3)=+$P(RCDIR,U,3):"",+RCTOT(2)'=+$P(RCDIR,U,2):" AND ADJUSTMENTS",1:"")_" DO NOT MATCH THE ORIGINAL AMOUNT(s):"
"RTN","RCDPEWL8",15,0)
 . S DIR("A",2)=$E("  ORIG PAY AMT: "_$J(+$P(RCDIR,U,2),"",2)_$J("",35),1,35)_" ORIG ADJ AMT: "_$J(+$P(RCDIR,U,3),"",2)
"RTN","RCDPEWL8",16,0)
 . S DIR("A",3)=$E("   AMT ENTERED: "_$J(+RCTOT(2),"",2)_$J("",35),1,35)_"  AMT ENTERED: "_$J(+RCTOT(3),"",2)
"RTN","RCDPEWL8",17,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL8",18,0)
 S DA(1)=RCSCR
"RTN","RCDPEWL8",19,0)
 S RCZ0=+$P(RCLINE,U,2),RCZZ=+$G(^RCY(344.49,DA(1),1,RCZ0,0)),RCZZ(1)=""
"RTN","RCDPEWL8",20,0)
 S RCZ=+$O(RCSPLIT(0))
"RTN","RCDPEWL8",21,0)
 ;
"RTN","RCDPEWL8",22,0)
 ;Option to move/copy EOB
"RTN","RCDPEWL8",23,0)
 I RCZ D  Q:$G(VALMBCK)="Q"
"RTN","RCDPEWL8",24,0)
 .;;Move/Copy removed 10/19/11-now in receipt creation +136^RCDPEM
"RTN","RCDPEWL8",25,0)
 .;;Q:$$UPDWL^RCDPEM5($P(RCDIR,U),.RCSPLIT,RCERA)
"RTN","RCDPEWL8",26,0)
 .;;User abort
"RTN","RCDPEWL8",27,0)
 .;;K ^TMP($J,"RCDPE_SPLIT_FILE") S VALMBCK="Q"
"RTN","RCDPEWL8",28,0)
 ;
"RTN","RCDPEWL8",29,0)
 I RCZ D
"RTN","RCDPEWL8",30,0)
 . S DIE="^RCY(344.49,"_DA(1)_",1,",DA=RCZ0,RCZT=$P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3)
"RTN","RCDPEWL8",31,0)
 . S DR=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.06////"_$J(+RCZT,"",2)_";.08////"_$J($P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL8",32,0)
 . S DR=DR_";.07///"_$S($P(RCSPLIT(RCZ),U,5):"/"_$P(RCSPLIT(RCZ),U,5),1:"@")_";.03////"_$S(RCZT'<0:$J(+RCZT,"",2),1:"0.00")_$S($P(RCSPLIT(RCZ),U,6)'="":";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@"),1:"")
"RTN","RCDPEWL8",33,0)
 . D ^DIE,UPD^RCDPEWL3(DA(1),DA)
"RTN","RCDPEWL8",34,0)
 . I $P(RCDIR,U,3) D
"RTN","RCDPEWL8",35,0)
 .. N DA
"RTN","RCDPEWL8",36,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ0,DA=1,DIE="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL8",37,0)
 .. S RCZZ(1)=$G(^RCY(344.49,DA(2),1,DA(1),1,1,0))
"RTN","RCDPEWL8",38,0)
 .. S DR=".03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":".09////"_$P(RCSPLIT(RCZ),U,4),1:"")
"RTN","RCDPEWL8",39,0)
 .. D ^DIE
"RTN","RCDPEWL8",40,0)
 F  S RCZ=$O(RCSPLIT(RCZ)) Q:'RCZ  D
"RTN","RCDPEWL8",41,0)
 . S DIC(0)="L",DLAYGO=344.491,DIC="^RCY(344.49,"_DA(1)_",1,",X=+$O(^RCY(344.49,RCSCR,1,"B",RCZZ\1+.999),-1)+.001
"RTN","RCDPEWL8",42,0)
 . S DIC("DR")=".02////"_$P(RCSPLIT(RCZ),U)_";.05////"_$J(+$P(RCSPLIT(RCZ),U,2),"",2)_";.08////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_";.06////"_$J($P(RCSPLIT(RCZ),U,2)+$P(RCSPLIT(RCZ),U,3),"",2)
"RTN","RCDPEWL8",43,0)
 . I $P(RCSPLIT(RCZ),U,6)'="" S DIC("DR")=DIC("DR")_";.1///"_$S($P(RCSPLIT(RCZ),U,6)'="@":"/^S X=$P(RCSPLIT(RCZ),U,6)",1:"@")
"RTN","RCDPEWL8",44,0)
 . I $P(RCSPLIT(RCZ),U,5) S DIC("DR")=DIC("DR")_";.07////"_$P(RCSPLIT(RCZ),U,5)
"RTN","RCDPEWL8",45,0)
 . K DD,DO D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL8",46,0)
 . S RCZ1=+Y
"RTN","RCDPEWL8",47,0)
 . I Y D UPD^RCDPEWL3(RCSCR,RCZ1)
"RTN","RCDPEWL8",48,0)
 . I Y,$P(RCDIR,U,3) D
"RTN","RCDPEWL8",49,0)
 .. N DA
"RTN","RCDPEWL8",50,0)
 .. S DA(2)=RCSCR,DA(1)=RCZ1,X=1,DIC(0)="L",DIC="^RCY(344.49,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","RCDPEWL8",51,0)
 .. S DIC("DR")=".02////"_$P(RCZZ(1),U,2)_";.03////"_$J(+$P(RCSPLIT(RCZ),U,3),"",2)_$S($P(RCSPLIT(RCZ),U,4)'="":";.09////"_$P(RCSPLIT(RCZ),U,4),$P(RCZZ(1),U,9)'="":";.09////"_$P(RCZZ(1),U,9),1:"")
"RTN","RCDPEWL8",52,0)
 .. F Z=4:1:8 I $P(RCZZ(1),U,Z)'="" S DIC("DR")=DIC("DR")_";"_(Z/100)_"////"_$P(RCZZ(1),U,Z)
"RTN","RCDPEWL8",53,0)
 .. D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","RCDPEWL8",54,0)
 K ^TMP($J,"RCDPE_SPLIT_FILE")
"RTN","RCDPEWL8",55,0)
 S VALMBCK="Q"
"RTN","RCDPEWL8",56,0)
 Q
"RTN","RCDPEWL8",57,0)
 ;
"RTN","RCDPEWL8",58,0)
SELBAT(RCERA,RCQUIT) ; Select a batch
"RTN","RCDPEWL8",59,0)
 ; If batch is selected, global ^TMP("RCBATCH_SELECTED",$J) is set = 
"RTN","RCDPEWL8",60,0)
 ;   batch ien selected
"RTN","RCDPEWL8",61,0)
 ; RCQUIT = 1 if selection not made
"RTN","RCDPEWL8",62,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",63,0)
 Q  ;prca*4.5*298
"RTN","RCDPEWL8",64,0)
 N DA,DIC,DIE,DIR,DR,DTOUT,DUOUT,RCBAT,X,Y
"RTN","RCDPEWL8",65,0)
 S RCQUIT=0
"RTN","RCDPEWL8",66,0)
 S DA(1)=RCERA,DIC(0)="AEMQ",DIC="^RCY(344.49,"_DA(1)_",3,",DIC("S")="I '$P(^(0),U,5)" D ^DIC
"RTN","RCDPEWL8",67,0)
 I Y'>0 S RCQUIT=1 Q
"RTN","RCDPEWL8",68,0)
 S RCBAT=+Y
"RTN","RCDPEWL8",69,0)
 L +^RCY(344.4,RCERA,0):5 I '$T S DIR("A",1)="ANOTHER USER HAS JUST ACCESSED THE ENTIRE ERA - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)="EA" W ! D ^DIR K DIR S RCQUIT=1 Q
"RTN","RCDPEWL8",70,0)
 L +^RCY(344.49,RCERA,3,RCBAT,0):5 I '$T!$P($G(^(0)),U,5) S DIR("A",1)="ANOTHER USER HAS JUST OPENED THIS BATCH - TRY AGAIN LATER",DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)=-"EA" W ! D ^DIR K DIR S RCQUIT=1 Q
"RTN","RCDPEWL8",71,0)
 S DA=RCBAT,DA(1)=RCERA,DIE="^RCY(344.49,"_DA(1)_",3,",DR=".05////1" D ^DIE L -^RCY(344.49,RCERA,3,RCBAT,0)
"RTN","RCDPEWL8",72,0)
 I $P($G(^RCY(344.49,RCERA,3,RCBAT,0)),U,3) D
"RTN","RCDPEWL8",73,0)
 . S DIR(0)="EA",DIR("A",1)="** WARNING - THIS BATCH HAS BEEN FLAGGED AS READY TO POST",DIR("A")="PRESS RETURN TO CONTINUE " W ! D ^DIR K DIR
"RTN","RCDPEWL8",74,0)
 S ^TMP("RCBATCH_SELECTED",$J)=RCBAT
"RTN","RCDPEWL8",75,0)
 L -^RCY(344.4,RCERA,0)
"RTN","RCDPEWL8",76,0)
 Q
"RTN","RCDPEWL8",77,0)
 ;
"RTN","RCDPEWL8",78,0)
SORT ; Select a new sort for the list of ERAs
"RTN","RCDPEWL8",79,0)
 D FULL^VALM1
"RTN","RCDPEWL8",80,0)
 N RCSORT,DUOUT,DTOUT,DIR,X,Y,RCS1,RCS2,RCORD
"RTN","RCDPEWL8",81,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",82,0)
 S DIR("L",1)="  SELECT A FIRST LEVEL SORT",DIR("L",2)=" "
"RTN","RCDPEWL8",83,0)
 S DIR("L",3)="    A  AMOUNT PAID      E  ERA PAID DATE"
"RTN","RCDPEWL8",84,0)
 S DIR("L")="    P  PAYER NAME       D  DATE ERA RECEIVED"
"RTN","RCDPEWL8",85,0)
 S DIR(0)="S^A:AMOUNT PAID;E:ERA PAID DATE;P:PAYER NAME;D:DATE ERA RECEIVED",DIR("B")=$P($P(DIR(0),"D:",2),";")
"RTN","RCDPEWL8",86,0)
 W ! D ^DIR K DIR
"RTN","RCDPEWL8",87,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",88,0)
 S RCS1=$S(Y="A":"AP",Y="E":"DP",Y="P":"PN",1:"DR")
"RTN","RCDPEWL8",89,0)
 S RCORD=$$ORD(.RCS1)
"RTN","RCDPEWL8",90,0)
 Q:'$D(RCS1)
"RTN","RCDPEWL8",91,0)
 S $P(RCSORT,U)=(RCS1_";"_RCORD)
"RTN","RCDPEWL8",92,0)
 K X
"RTN","RCDPEWL8",93,0)
 S X(1)=$S(RCS1'="AP":"A:AMOUNT PAID",1:"E:ERA PAID DATE")
"RTN","RCDPEWL8",94,0)
 S X(2)=$S(RCS1'="AP"&(RCS1'="DP"):"E:ERA PAID DATE",1:"P:PAYER NAME")
"RTN","RCDPEWL8",95,0)
 S X(3)=$S(RCS1="DR":"P:PAYER NAME",1:"D:DATE ERA RECEIVED")
"RTN","RCDPEWL8",96,0)
 S DIR(0)="S^N:NONE;"_X(1)_";"_X(2)_";"_X(3)
"RTN","RCDPEWL8",97,0)
 S DIR("B")="NONE"
"RTN","RCDPEWL8",98,0)
 S DIR("L",1)="  SELECT A SECOND LEVEL SORT",DIR("L",2)=" "
"RTN","RCDPEWL8",99,0)
 S DIR("L",3)="    N  NONE"_$J("",13)_$P(X(1),":")_"  "_$P(X(1),":",2)
"RTN","RCDPEWL8",100,0)
 S DIR("L")="    "_$E($P(X(2),":")_"  "_$P(X(2),":",2)_$J("",20),1,20)_$P(X(3),":")_"  "_$P(X(3),":",2)
"RTN","RCDPEWL8",101,0)
 K X W ! D ^DIR K DIR
"RTN","RCDPEWL8",102,0)
 I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",103,0)
 S RCS2=$S(Y="N":"N",Y="A":"AP",Y="E":"DP",Y="P":"PN",1:"DR")
"RTN","RCDPEWL8",104,0)
 S RCORD=$$ORD(.RCS2)
"RTN","RCDPEWL8",105,0)
 Q:'$D(RCS2)
"RTN","RCDPEWL8",106,0)
 S $P(RCSORT,U,2)=(RCS2_";"_RCORD)
"RTN","RCDPEWL8",107,0)
 K ^TMP($J,"RCERA_LIST") D BLD^RCDPEWL7(RCSORT)
"RTN","RCDPEWL8",108,0)
 Q
"RTN","RCDPEWL8",109,0)
 ;
"RTN","RCDPEWL8",110,0)
ORD(RCS) ; Select an order for the sorted field code in RCS
"RTN","RCDPEWL8",111,0)
 ; Kill RCS if nothing selected, passed by reference
"RTN","RCDPEWL8",112,0)
 ; Returns '-' if reverse order selected
"RTN","RCDPEWL8",113,0)
 N DIR,X,Y,ORD,RCQUIT
"RTN","RCDPEWL8",114,0)
 S RCQUIT=0,ORD=""
"RTN","RCDPEWL8",115,0)
 I RCS="N" G ORDQ
"RTN","RCDPEWL8",116,0)
 I RCS="PN" D  G ORDQ
"RTN","RCDPEWL8",117,0)
 . S DIR(0)="SA^F:FIRST TO LAST;L:LAST TO FIRST"
"RTN","RCDPEWL8",118,0)
 . S DIR("B")=$P($P(DIR(0),"F:",2),";")
"RTN","RCDPEWL8",119,0)
 . S DIR("A")="  SORT (F)IRST TO LAST OR (L)AST TO FIRST?: "
"RTN","RCDPEWL8",120,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",121,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",122,0)
 . S ORD=$S(Y="F":"",1:"-")
"RTN","RCDPEWL8",123,0)
 ;
"RTN","RCDPEWL8",124,0)
 I RCS="AP" D  G ORDQ
"RTN","RCDPEWL8",125,0)
 . S DIR("A")="  SORT (L)OWEST TO HIGHEST OR (H)IGHEST TO LOWEST?: "
"RTN","RCDPEWL8",126,0)
 . S DIR(0)="SA^L:LOWEST TO HIGHEST;H:HIGHEST TO LOWEST"
"RTN","RCDPEWL8",127,0)
 . S DIR("B")=$P($P(DIR(0),"L:",2),";")
"RTN","RCDPEWL8",128,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",129,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",130,0)
 . S ORD=$S(Y="L":"",1:"-")
"RTN","RCDPEWL8",131,0)
 ;
"RTN","RCDPEWL8",132,0)
 I RCS="DP"!(RCS="DR") D  G ORDQ
"RTN","RCDPEWL8",133,0)
 . S DIR("A")="  SORT (E)ARLIEST TO LATEST OR (L)ATEST TO EARLIEST?: "
"RTN","RCDPEWL8",134,0)
 . S DIR(0)="SA^E:EARLIEST TO LATEST;L:LATEST TO EARLIEST"
"RTN","RCDPEWL8",135,0)
 . S DIR("B")=$P($P(DIR(0),"E:",2),";")
"RTN","RCDPEWL8",136,0)
 . D ^DIR K DIR
"RTN","RCDPEWL8",137,0)
 . I $D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",138,0)
 . S ORD=$S(Y="E":"",1:"-")
"RTN","RCDPEWL8",139,0)
 ;
"RTN","RCDPEWL8",140,0)
 ; Invalid sort code
"RTN","RCDPEWL8",141,0)
 S RCQUIT=1
"RTN","RCDPEWL8",142,0)
 ;
"RTN","RCDPEWL8",143,0)
ORDQ I RCQUIT K RCS
"RTN","RCDPEWL8",144,0)
 Q ORD
"RTN","RCDPEWL8",145,0)
 ;
"RTN","RCDPEWL8",146,0)
BATDSP ; Ask Display/Hide batch info on ERA list screen
"RTN","RCDPEWL8",147,0)
 ; prca*4.5*298 per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",148,0)
 Q  ;prca*4.5*298
"RTN","RCDPEWL8",149,0)
 N DIR,DTOUT,DUOUT,RCZ,X,Y
"RTN","RCDPEWL8",150,0)
 D FULL^VALM1
"RTN","RCDPEWL8",151,0)
 S RCZ=+$G(^TMP("RCERA_PARAMS",$J,"BATCHON"))
"RTN","RCDPEWL8",152,0)
 S DIR("A",1)="BATCH INFO DISPLAY IS CURRENTLY TURNED "_$S('RCZ:"OFF",1:"ON"),DIR("A")="DO YOU WANT TO TURN IT "_$S('RCZ:"ON",1:"OFF")_" NOW?: "
"RTN","RCDPEWL8",153,0)
 S DIR(0)="YA",DIR("B")="YES" W ! D ^DIR K DIR
"RTN","RCDPEWL8",154,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",155,0)
 Q:$D(DUOUT)!$D(DTOUT)!'Y
"RTN","RCDPEWL8",156,0)
 S ^TMP("RCERA_PARAMS",$J,"BATCHON")=$S(RCZ:0,1:1)
"RTN","RCDPEWL8",157,0)
 D BLD^RCDPEWL7($G(^TMP("RCERA_PARAMS",$J,"SORT")))
"RTN","RCDPEWL8",158,0)
 Q
"RTN","RCDPEWL8",159,0)
 ;
"RTN","RCDPEWL8",160,0)
HASADJ(RCSCR,RCOK) ; Function=1 if WL entry has any adj not yet distributed
"RTN","RCDPEWL8",161,0)
 ; RCSCR = ien of entry in file 344.49
"RTN","RCDPEWL8",162,0)
 ; RCOK = if passed by reference, returns 1 if ANY postable lines exist
"RTN","RCDPEWL8",163,0)
 N Z,Z0,RCSTOP
"RTN","RCDPEWL8",164,0)
 S RCSTOP=0,RCOK=0
"RTN","RCDPEWL8",165,0)
 S Z=0 F  S Z=$O(^RCY(344.49,RCSCR,1,Z)) Q:'Z  S Z0=$G(^(Z,0)) D  Q:RCSTOP
"RTN","RCDPEWL8",166,0)
 . ;HIPAA 5010 - negative value now takes precedence over adjustment
"RTN","RCDPEWL8",167,0)
 . I $P(Z0,U,6)>0!$O(^RCY(344.49,RCSCR,1,Z,1,0)) S RCOK=1
"RTN","RCDPEWL8",168,0)
 . I $P(Z0,U,6)<0 S RCSTOP=1
"RTN","RCDPEWL8",169,0)
 Q RCSTOP
"RTN","RCDPEWL8",170,0)
 ;
"RTN","RCDPEWL8",171,0)
VERIF ;EP - Protocol action - RCDPE EOB WORKLIST VERIFY
"RTN","RCDPEWL8",172,0)
 ; Entrypoint to verification options
"RTN","RCDPEWL8",173,0)
 N DIR,X,Y,RCQUIT,DTOUT,DUOUT
"RTN","RCDPEWL8",174,0)
 D FULL^VALM1
"RTN","RCDPEWL8",175,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEWL8",176,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEWL8",177,0)
 . D PAUSE^VALM1
"RTN","RCDPEWL8",178,0)
 . S VALMBCK="R"
"RTN","RCDPEWL8",179,0)
 I $S($P($G(^RCY(344.4,RCSCR,4)),U,2)]"":1,1:0) D NOEDIT^RCDPEWLP G VERIFQ   ;prca*4.5*298  auto-posted ERAs cannot enter VERIFY action        
"RTN","RCDPEWL8",180,0)
 ;
"RTN","RCDPEWL8",181,0)
 W !!!!
"RTN","RCDPEWL8",182,0)
 S RCQUIT=0
"RTN","RCDPEWL8",183,0)
 F  D  Q:RCQUIT
"RTN","RCDPEWL8",184,0)
 . W !,"VERIFY EEOBs:",!,?10,"1",$J("",5),"MANUALLY MARK AS VERIFIED",!,?10,"2",$J("",5),"REPORT OF UNVERIFIED WITH DISCREPANCIES",!,?10,"3",$J("",5),"QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEWL8",185,0)
 . S DIR(0)="SAO^1:MANUAL VERIFICATION;2:REPORT UNVERIFIED DISCREPANCIES;3:QUIT"
"RTN","RCDPEWL8",186,0)
 . S DIR("A")="Select Action: ",DIR("B")="QUIT" W ! D ^DIR K DIR
"RTN","RCDPEWL8",187,0)
 . I Y=3!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",188,0)
 . ;
"RTN","RCDPEWL8",189,0)
 . I Y=1 D MVER^RCDPEV(RCERA) W !! Q
"RTN","RCDPEWL8",190,0)
 . ;
"RTN","RCDPEWL8",191,0)
 . I Y=2 D RPT^RCDPEV0(RCERA) W !! Q
"RTN","RCDPEWL8",192,0)
 ;
"RTN","RCDPEWL8",193,0)
VERIFQ S VALMBCK="R"
"RTN","RCDPEWL8",194,0)
 Q
"RTN","RCDPEWL8",195,0)
 ;
"RTN","RCDPEWL8",196,0)
BATED ; Entry point to batch edit options
"RTN","RCDPEWL8",197,0)
 ; prca*4.5*298  per requirements, keep code for creating/maintaining batches but remove from execution
"RTN","RCDPEWL8",198,0)
 Q  ; prca*4.5*298
"RTN","RCDPEWL8",199,0)
 N DA,DIC,DIR,DTOUT,DUOUT,RCQUIT,X,Y
"RTN","RCDPEWL8",200,0)
 D FULL^VALM1
"RTN","RCDPEWL8",201,0)
 ;
"RTN","RCDPEWL8",202,0)
 W !!!!
"RTN","RCDPEWL8",203,0)
 S RCQUIT=0
"RTN","RCDPEWL8",204,0)
 I '$O(^RCY(344.49,RCERA,3,0)) W !,"***** THERE ARE CURRENTLY NO BATCHES DEFINED FOR THIS ERA *****",!
"RTN","RCDPEWL8",205,0)
 ; No menu if entering from a batch level
"RTN","RCDPEWL8",206,0)
 I $G(^TMP("RCBATCH_SELECTED",$J)) W !,"EDITING BATCH #"_+^TMP("RCBATCH_SELECTED",$J) D EDIT^RCDPEWLB(RCERA,+^TMP("RCBATCH_SELECTED",$J)) G BATEDQ
"RTN","RCDPEWL8",207,0)
 F  D  Q:RCQUIT
"RTN","RCDPEWL8",208,0)
 . I '$D(^XUSEC("PRCA ERA BATCH MAINT",DUZ)) D  Q
"RTN","RCDPEWL8",209,0)
 .. S RCQUIT=1
"RTN","RCDPEWL8",210,0)
 .. S DIR(0)="EA",DIR("A")="YOU DO NOT HAVE SECURITY ACCESS TO THIS ACTION - Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPEWL8",211,0)
 .;
"RTN","RCDPEWL8",212,0)
 . W !,"BATCH MAINTENANCE:",!,?10,"1",$J("",5),"EDIT BATCH",!,?10,"2",$J("",5),"NEW BATCH ASSIGNMENT",!,?10,"3",$J("",5),"MARK ALL READY TO POST",!,?10,"4",$J("",5),"BATCH SUMMARY REPORT",!,?10,"5",$J("",5),"QUIT AND RETURN TO WORKLIST"
"RTN","RCDPEWL8",213,0)
 . S DIR(0)="SAO^1:EDIT BATCH;2:NEW BATCHES;3:MARK ALL;4:BATCH SUMMARY;5:QUIT"
"RTN","RCDPEWL8",214,0)
 . S DIR("A")="Select Action: ",DIR("B")="Quit" W ! D ^DIR K DIR
"RTN","RCDPEWL8",215,0)
 . I Y="5"!(Y="")!$D(DUOUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEWL8",216,0)
 . ;
"RTN","RCDPEWL8",217,0)
 . I Y=1 D  W !! Q
"RTN","RCDPEWL8",218,0)
 .. I '$O(^RCY(344.49,RCERA,3,0)) D NOTSET^RCDPEWLC Q
"RTN","RCDPEWL8",219,0)
 .. S DIR("B")="ONE",DIR(0)="SA^A:ALL;O:ONE",DIR("A")="EDIT(A)LL or (O)NE BATCH?: " W ! D ^DIR K DIR
"RTN","RCDPEWL8",220,0)
 .. I $D(DTOUT)!$D(DUOUT) Q
"RTN","RCDPEWL8",221,0)
 .. I Y="A" D EDITALL^RCDPEWLB(RCERA) Q
"RTN","RCDPEWL8",222,0)
 .. S DA(1)=RCERA,DIC="^RCY(344.49,"_DA(1)_",3,",DIC(0)="AEMQ" D ^DIC
"RTN","RCDPEWL8",223,0)
 .. Q:Y'>0
"RTN","RCDPEWL8",224,0)
 .. D EDIT^RCDPEWLB(RCERA,+Y)
"RTN","RCDPEWL8",225,0)
 . ;
"RTN","RCDPEWL8",226,0)
 . I Y=2 D REBATCH^RCDPEWLB(RCERA) W !! Q
"RTN","RCDPEWL8",227,0)
 . ;
"RTN","RCDPEWL8",228,0)
 . I Y=3 D MARKALL^RCDPEWLB(RCERA) W !! Q
"RTN","RCDPEWL8",229,0)
 . ;
"RTN","RCDPEWL8",230,0)
 . I Y=4 D SUMRPT^RCDPEWLC(RCERA) W !! Q
"RTN","RCDPEWL8",231,0)
 ;
"RTN","RCDPEWL8",232,0)
BATEDQ S VALMBCK="R"
"RTN","RCDPEWL8",233,0)
 Q
"RTN","RCDPEWL8",234,0)
 ;
"RTN","RCDPEWL8",235,0)
AUTOPOST(SOURCE) ;EP Protocol action - RCDPE EOB WORKLIST MARK FOR AUTO POST
"RTN","RCDPEWL8",236,0)
 ; Input:
"RTN","RCDPEWL8",237,0)
 ;   SOURCE
"RTN","RCDPEWL8",238,0)
 ;      1:Called by Worklist (RCDPE WORKLIST ERA MARK FOR AUTO POST)
"RTN","RCDPEWL8",239,0)
 ;      2:Called by Scratchpad (RCDPE WORKLIST EOB MARK FOR AUTO POST)
"RTN","RCDPEWL8",240,0)
 ;   If SOURCE=2, RCSCR will be set to the IEN of 344.4
"RTN","RCDPEWL8",241,0)
 ;
"RTN","RCDPEWL8",242,0)
 D FULL^VALM1
"RTN","RCDPEWL8",243,0)
 I '$D(^XUSEC("RCDPEPP",DUZ)) D  Q  ; PRCA*4.5*318 Added security key check
"RTN","RCDPEWL8",244,0)
 . W !!,"This action can only be taken by users that have the RCDPEPP security key.",!
"RTN","RCDPEWL8",245,0)
 . D PAUSE^VALM1
"RTN","RCDPEWL8",246,0)
 . S VALMBCK="R"
"RTN","RCDPEWL8",247,0)
 ;
"RTN","RCDPEWL8",248,0)
 ; If called by Worklist (SOURCE=1), then ask which ERA
"RTN","RCDPEWL8",249,0)
 ; If called by Scratchpad (SOURCE=2), ERA is already in variable RCSCR
"RTN","RCDPEWL8",250,0)
 N RCERA
"RTN","RCDPEWL8",251,0)
 I SOURCE=1 S RCERA=$$SEL^RCDPEWL7()
"RTN","RCDPEWL8",252,0)
 I SOURCE=2 S RCERA=$G(RCSCR)
"RTN","RCDPEWL8",253,0)
 I 'RCERA S VALMBCK="R" Q
"RTN","RCDPEWL8",254,0)
 ;
"RTN","RCDPEWL8",255,0)
 N AUTOPOST
"RTN","RCDPEWL8",256,0)
 S AUTOPOST=$$AUTOCHK2^RCDPEAP1(RCERA,0) ; added parameter - PRCA*4.5*321
"RTN","RCDPEWL8",257,0)
 I AUTOPOST D
"RTN","RCDPEWL8",258,0)
 . D SETSTA^RCDPEAP(RCERA,0,"Worklist: Marked as Auto-Post Candidate")
"RTN","RCDPEWL8",259,0)
 . W !,"ERA has been successfully Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEWL8",260,0)
 I 'AUTOPOST D
"RTN","RCDPEWL8",261,0)
 . D AUDITLOG^RCDPEAP(RCERA,"","Worklist: Not Marked as Auto-Post Candidate-"_$P(AUTOPOST,U,2))
"RTN","RCDPEWL8",262,0)
 . W !,"ERA was NOT Marked as an Auto-Post CANDIDATE - ",$P(AUTOPOST,U,2)
"RTN","RCDPEWL8",263,0)
 ;
"RTN","RCDPEWL8",264,0)
AUTOPSTQ ;
"RTN","RCDPEWL8",265,0)
 K DIR
"RTN","RCDPEWL8",266,0)
 S DIR(0)="E" D ^DIR
"RTN","RCDPEWL8",267,0)
 S VALMBCK="R"
"RTN","RCDPEWL8",268,0)
 Q
"RTN","RCDPEWLD")
0^67^B101321313
"RTN","RCDPEWLD",1,0)
RCDPEWLD ;ALB/CLT - Continuation of routine RCDPEWL0 ;09 DEC 2016
"RTN","RCDPEWLD",2,0)
 ;;4.5;Accounts Receivable;**252,317,321**;Mar 20, 1995;Build 48
"RTN","RCDPEWLD",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEWLD",4,0)
 Q
"RTN","RCDPEWLD",5,0)
 ;
"RTN","RCDPEWLD",6,0)
PROV(RCSCR,RCSCR1,RCXM1,RC) ;Get prov data from ERA (FILE 344.4) and claim (FILE 399)
"RTN","RCDPEWLD",7,0)
 N RCXXX,RCYYY,RCDPEPV,RCCLAIM,RCIEN,RCBILL,RCID,RCBLANK,RCNPI,DIC,X,Y
"RTN","RCDPEWLD",8,0)
 N RCPROV,RCEXP,XUSNPI,RCRTN,RCBNM,RCCOM1,RCCOM2,RCWARN,RCYNODE3
"RTN","RCDPEWLD",9,0)
 ;
"RTN","RCDPEWLD",10,0)
 S RCBLANK="" F X=1:1:30 S RCBLANK=RCBLANK_" "
"RTN","RCDPEWLD",11,0)
 S RC=RC+1 S RCXM1(RC-1)=RCBLANK
"RTN","RCDPEWLD",12,0)
 S RCYNODE3=$G(^RCY(344.4,RCSCR,1,RCSCR1,3))
"RTN","RCDPEWLD",13,0)
 ;
"RTN","RCDPEWLD",14,0)
LKBOX ;Get provider data from ELECTRONIC REMITTANCE ADVICE file (#344.4)
"RTN","RCDPEWLD",15,0)
 S RC=RC+1,RCXM1(RC-1)=$E("**EOB PROVIDER(S)/NPI"_$J(" ",39),1,39)_"CLAIM PROVIDER(S)/NPI**"  ;setting sub-header for worklist
"RTN","RCDPEWLD",16,0)
 S RC=RC+1,RCXM1(RC-1)=$E("---------------------"_$J(" ",39),1,39)_"-----------------------"
"RTN","RCDPEWLD",17,0)
 ;
"RTN","RCDPEWLD",18,0)
 S RCPROV="BILLING",$P(RCYYY(RCPROV),U,3)=0        ; piece 3 initialize for error msgs
"RTN","RCDPEWLD",19,0)
 I $P(RCYNODE3,U)'="" S RCYYY(RCPROV)="/"_$P(RCYNODE3,U)   ; Billing Prov NPI 
"RTN","RCDPEWLD",20,0)
 ;
"RTN","RCDPEWLD",21,0)
 S RCPROV="RENDERING"
"RTN","RCDPEWLD",22,0)
 I $P(RCYNODE3,U,3)=2 S RCPROV="SERVICING"
"RTN","RCDPEWLD",23,0)
 I $P(RCYNODE3,U,3)="",($P(RCYNODE3,U,4)'[","),($P(RCYNODE3,U,4)'="") S RCPROV="SERVICING"
"RTN","RCDPEWLD",24,0)
 I $P(RCYNODE3,U,2)'=""!($P(RCYNODE3,U,4)'="") S RCYYY(RCPROV)=$E($P(RCYNODE3,U,4),1,20)_"/"_$P(RCYNODE3,U,2)
"RTN","RCDPEWLD",25,0)
 S $P(RCYYY(RCPROV),U,3)=0                          ; initialize for error msgs
"RTN","RCDPEWLD",26,0)
 D NPICHK        ; RCPROV has to be "RENDERING" or "SERVICING" when this tag is called !
"RTN","RCDPEWLD",27,0)
 ;
"RTN","RCDPEWLD",28,0)
CLAIM ;Retrieve provider data from the claim
"RTN","RCDPEWLD",29,0)
 S RCCLAIM=$$GET1^DIQ(361.1,$P(^RCY(344.4,RCSCR,1,RCSCR1,0),U,2),.01) ;determine claim num based on entry in 344.4
"RTN","RCDPEWLD",30,0)
 S DIC="^DGCR(399,",DIC(0)="",X=RCCLAIM D ^DIC S RCCLAIM=+Y      ;find ien for file 399
"RTN","RCDPEWLD",31,0)
 D GETS^DIQ(399,RCCLAIM,"222*","IE","RCXXX")         ;retrieve prov information
"RTN","RCDPEWLD",32,0)
 S RCBILL=$$GET1^DIQ(399,RCCLAIM,.22,"I")            ;retrieve default division
"RTN","RCDPEWLD",33,0)
 S RCBNM=$$GET1^DIQ(4,$$GET1^DIQ(40.8,RCBILL,.07,"I"),.01)  ;get name from institution file
"RTN","RCDPEWLD",34,0)
 S RCBILL=$$GET1^DIQ(4,$$GET1^DIQ(40.8,RCBILL,.07,"I"),41.99)  ;get NPI from institution file
"RTN","RCDPEWLD",35,0)
 ;
"RTN","RCDPEWLD",36,0)
 S $P(RCYYY("BILLING"),U,2)=RCBNM_"/"_RCBILL_"^"_0  ;NPI set into local array
"RTN","RCDPEWLD",37,0)
 I $D(RCXXX) S RCPROV="" F  S RCPROV=$O(RCXXX(399.0222,RCPROV)) Q:RCPROV=""  D  ;loop through claim providers
"RTN","RCDPEWLD",38,0)
 . S RCIEN=$P(RCXXX(399.0222,RCPROV,.02,"I"),";",1)
"RTN","RCDPEWLD",39,0)
 . S RCID=$S($P(RCXXX(399.0222,RCPROV,.02,"I"),";",2)["VA(200":"Individual_ID",1:"Non_VA_Provider_ID")
"RTN","RCDPEWLD",40,0)
 . S RCNPI=$$NPI^XUSNPI(RCID,RCIEN)                  ;retrieve provider NPI
"RTN","RCDPEWLD",41,0)
 . S $P(RCYYY(RCXXX(399.0222,RCPROV,.01,"E")),U,2)=$E(RCXXX(399.0222,RCPROV,.02,"E"),1,20)_"/"_$S(+RCNPI=0:"No NPI on file",+RCNPI=-1:"Can't look up NPI",1:+RCNPI)
"RTN","RCDPEWLD",42,0)
 . S:$P(RCYYY(RCXXX(399.0222,RCPROV,.01,"E")),U,3)="" $P(RCYYY(RCXXX(399.0222,RCPROV,.01,"E")),U,3)=0
"RTN","RCDPEWLD",43,0)
LINESET ;SET THE PRINT LINES
"RTN","RCDPEWLD",44,0)
 S (RCWARN,RCPROV)="" F  S RCPROV=$O(RCYYY(RCPROV)) Q:RCPROV=""  D  ;loop through the found provider types
"RTN","RCDPEWLD",45,0)
 . S RC=RC+1                                          ;increment line counter
"RTN","RCDPEWLD",46,0)
 . ; build display detail line
"RTN","RCDPEWLD",47,0)
 . S RCXM1(RC-1)=RCPROV_": "_$P(RCYYY(RCPROV),U,1)
"RTN","RCDPEWLD",48,0)
 . I $L(RCXM1(RC-1))>39 D
"RTN","RCDPEWLD",49,0)
 .. S RCXM1(RC-1)=$E($P(RCXM1(RC-1),"/"),1,27)_"/"_$P(RCXM1(RC-1),"/",2)
"RTN","RCDPEWLD",50,0)
 . S RCXM1(RC-1)=$E(RCXM1(RC-1)_RCBLANK,1,39)_$P(RCYYY(RCPROV),U,2)
"RTN","RCDPEWLD",51,0)
 . I $P(RCYYY(RCPROV),U,3)'=0 S RCWARN=$P(RCYYY(RCPROV),U,3)
"RTN","RCDPEWLD",52,0)
 I RCWARN'="" D
"RTN","RCDPEWLD",53,0)
 . S RC=RC+1,RCXM1(RC-1)=" "                          ;Blank line for separation
"RTN","RCDPEWLD",54,0)
 . S RC=RC+1,RCXM1(RC-1)="Rendering/Servicing Provider NPI Warning:"
"RTN","RCDPEWLD",55,0)
 . S RC=RC+1,RCXM1(RC-1)=RCWARN
"RTN","RCDPEWLD",56,0)
 S RC=RC+1,RCXM1(RC-1)=" "                            ;Blank line to separate from possible comments
"RTN","RCDPEWLD",57,0)
 S RCCOM1=$P(RCYNODE3,U,5),RCCOM2=$P(RCYNODE3,U,6) D  ;Error in NPI format
"RTN","RCDPEWLD",58,0)
 . I $G(RCCOM1)'="" S RC=RC+1,RCXM1(RC-1)=RCCOM1
"RTN","RCDPEWLD",59,0)
 . I $G(RCCOM2)'="" S RC=RC+1,RCXM1(RC-1)=RCCOM2
"RTN","RCDPEWLD",60,0)
 Q
"RTN","RCDPEWLD",61,0)
 ;
"RTN","RCDPEWLD",62,0)
NPICHK ;CHECK THAT THE NPI RETURNED MATCHES THE ENTITY TYPE QUALIFIER
"RTN","RCDPEWLD",63,0)
 S RCEXP="" Q:$P(RCYNODE3,U,3)=""               ; ENTITY TYPE QUALIFIER
"RTN","RCDPEWLD",64,0)
 ;
"RTN","RCDPEWLD",65,0)
 S RCCOM2=$P(RCYNODE3,U,6) ; Ren/Serv comment
"RTN","RCDPEWLD",66,0)
 S XUSNPI=$P(RCYNODE3,U,2)
"RTN","RCDPEWLD",67,0)
 I RCCOM2="",(XUSNPI="") S RCEXP="**NO SERVICING/RENDERING NPI INCLUDED IN 835**" D EXPSET Q
"RTN","RCDPEWLD",68,0)
 S RCRTN=$$QI^XUSNPI(XUSNPI)
"RTN","RCDPEWLD",69,0)
 I $P(RCRTN,U,1)="Individual_ID" D  Q
"RTN","RCDPEWLD",70,0)
 . I $P(RCYNODE3,U,3)'=1 S RCEXP="**NPI from 835 indicated organizational but is associated with an individual**" D EXPSET Q
"RTN","RCDPEWLD",71,0)
 I $P(RCRTN,U,1)="Organization_ID" D  Q
"RTN","RCDPEWLD",72,0)
 . I $P(RCYNODE3,U,3)'=2 S RCEXP="**NPI from 835 indicated individual but is associated with an organization**" D EXPSET Q
"RTN","RCDPEWLD",73,0)
 I $E($P(RCRTN,U,1),1,3)="Non" D  Q
"RTN","RCDPEWLD",74,0)
 . N RCIEN,RCTYPE S RCIEN=$P(RCRTN,U,2),RCTYPE=$$GET1^DIQ(355.93,RCIEN,.02,"I") Q:$G(RCTYPE)=""
"RTN","RCDPEWLD",75,0)
 . I $P(RCYNODE3,U,3)=1,RCTYPE=1 S RCEXP="**NPI from 835 indicated individual but is associated with an organization**" D EXPSET Q
"RTN","RCDPEWLD",76,0)
 . I $P(RCYNODE3,U,3)=2,RCTYPE=2 S RCEXP="**NPI from 835 indicated organizational but is associated with an individual**" D EXPSET Q
"RTN","RCDPEWLD",77,0)
 I RCCOM2="",(+RCRTN=0) S RCEXP="**The NPI returned on the 835 is not associated with this VistA system**" D EXPSET Q
"RTN","RCDPEWLD",78,0)
 Q
"RTN","RCDPEWLD",79,0)
 ;
"RTN","RCDPEWLD",80,0)
EXPSET ;SET THE PRINT LINE WITH THE ERROR AS DEFINED IN RCEXP
"RTN","RCDPEWLD",81,0)
 S $P(RCYYY(RCPROV),U,3)=RCEXP
"RTN","RCDPEWLD",82,0)
 Q
"RTN","RCDPEWLD",83,0)
 ;
"RTN","RCDPEWLD",84,0)
PARAMS(RCQUIT) ;PARAMETERS ENTRY CONTINUED FROM RCDPEWL0
"RTN","RCDPEWLD",85,0)
 I $G(RCQUIT) K ^TMP("RCERA_PARAMS",$J)
"RTN","RCDPEWLD",86,0)
PARMSQ ;
"RTN","RCDPEWLD",87,0)
 Q
"RTN","RCDPEWLD",88,0)
 ;
"RTN","RCDPEWLD",89,0)
PARAMS2() ;EP from RCDPEWL0
"RTN","RCDPEWLD",90,0)
 ; PRCA*4.5*317 - Moved due to routine size issues
"RTN","RCDPEWLD",91,0)
 ; Input:   None
"RTN","RCDPEWLD",92,0)
 ; Returns: RCQUIT  - 1 if user ^ or timed out, 0 otherwise
"RTN","RCDPEWLD",93,0)
 S RCQUIT=$$PAYMNT()                        ; Ask for zero/payment PRCA*4.5*321
"RTN","RCDPEWLD",94,0)
 Q:RCQUIT 1                                                      ; PRCA*4.5*321
"RTN","RCDPEWLD",95,0)
 S RCQUIT=$$POSTSTAT()                      ; Ask Posting Status
"RTN","RCDPEWLD",96,0)
 Q:RCQUIT 1
"RTN","RCDPEWLD",97,0)
 S RCQUIT=$$POSTMETH                        ; Ask Posting Method
"RTN","RCDPEWLD",98,0)
 Q:RCQUIT 1
"RTN","RCDPEWLD",99,0)
 S RCQUIT=$$MATCHST                         ; Ask ERA-EFT Matching Status
"RTN","RCDPEWLD",100,0)
 Q:RCQUIT 1
"RTN","RCDPEWLD",101,0)
 S RCQUIT=$$CLAIMTYP()                      ; Ask Claim Type
"RTN","RCDPEWLD",102,0)
 Q:RCQUIT 1
"RTN","RCDPEWLD",103,0)
 S RCQUIT=$$PAYR()                          ; Ask for selected payers
"RTN","RCDPEWLD",104,0)
 Q RCQUIT
"RTN","RCDPEWLD",105,0)
 ;
"RTN","RCDPEWLD",106,0)
PAYMNT() ; Payment Type (Zero/Payment or Both) Selection ; PRCA*4.5*321 this whole subroutine
"RTN","RCDPEWLD",107,0)
 ; Input:   ^TMP("RCERA_PARAMS")               - Global array of preferred values (if any)
"RTN","RCDPEWLD",108,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCPAYMNT") - ERA Posting Status filter
"RTN","RCDPEWLD",109,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",110,0)
 N DIR,DTOUT,DUOUT,RCTYPEDF
"RTN","RCDPEWLD",111,0)
 S RCTYPEDF=$G(^TMP("RCERA_PARAMS",$J,"RCPAYMNT"))
"RTN","RCDPEWLD",112,0)
 K DIR S DIR(0)="SA^Z:ZERO;P:PAYMENT;B:BOTH"
"RTN","RCDPEWLD",113,0)
 S DIR("A")="(Z)ERO, (P)AYMENT, or (B)OTH: "
"RTN","RCDPEWLD",114,0)
 S DIR("B")="B"
"RTN","RCDPEWLD",115,0)
 S DIR("?",1)="Select ZERO to only see ERAs with a zero total amount paid."
"RTN","RCDPEWLD",116,0)
 S DIR("?",2)="Select PAYMENT to only see ERAs with a non-zero amount paid."
"RTN","RCDPEWLD",117,0)
 S DIR("?")="Select BOTH to see both zero and non-zero amount ERAs."
"RTN","RCDPEWLD",118,0)
 S:RCTYPEDF'="" DIR("B")=RCTYPEDF     ;Stored preferred value, use as default
"RTN","RCDPEWLD",119,0)
 W !
"RTN","RCDPEWLD",120,0)
 D ^DIR
"RTN","RCDPEWLD",121,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",122,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPAYMNT")=Y
"RTN","RCDPEWLD",123,0)
 Q 0
"RTN","RCDPEWLD",124,0)
 ;
"RTN","RCDPEWLD",125,0)
POSTSTAT() ; ERA Posting Status (Posted/Unposted/Both) Selection
"RTN","RCDPEWLD",126,0)
 ; Input:   ^TMP("RCERA_PARAMS")            - Global array of preferred values (if any)
"RTN","RCDPEWLD",127,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCPOST")- ERA Posting Status filter
"RTN","RCDPEWLD",128,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",129,0)
 N DIR,DTOUT,DUOUT,RCPOSTDF
"RTN","RCDPEWLD",130,0)
 S RCPOSTDF=$G(^TMP("RCERA_PARAMS",$J,"RCPOST"))
"RTN","RCDPEWLD",131,0)
 K DIR S DIR(0)="SA^U:UNPOSTED;P:POSTED;B:BOTH"
"RTN","RCDPEWLD",132,0)
 S DIR("A")="ERA posting status: (U)NPOSTED, (P)OSTED, or (B)OTH: "
"RTN","RCDPEWLD",133,0)
 S DIR("B")="U"
"RTN","RCDPEWLD",134,0)
 S DIR("?",1)="Select UNPOSTED to only see ERAs with a status of UNPOSTED."
"RTN","RCDPEWLD",135,0)
 S DIR("?",2)="Select POSTED to only see ERAs with a status of POSTED."
"RTN","RCDPEWLD",136,0)
 S DIR("?")="Select BOTH to see both unposted and posted ERAs."
"RTN","RCDPEWLD",137,0)
 S:RCPOSTDF'="" DIR("B")=RCPOSTDF    ; Stored preferred value, use as default
"RTN","RCDPEWLD",138,0)
 W !
"RTN","RCDPEWLD",139,0)
 D ^DIR
"RTN","RCDPEWLD",140,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",141,0)
 S ^TMP("RCERA_PARAMS",$J,"RCPOST")=Y
"RTN","RCDPEWLD",142,0)
 Q 0
"RTN","RCDPEWLD",143,0)
 ;
"RTN","RCDPEWLD",144,0)
POSTMETH()  ; PRCA*4.5*317 moved from RCDPEWL0 because of routine size issues
"RTN","RCDPEWLD",145,0)
 ; ERA Posting Method (Auto-Posting/Non Auto-Posting/Both) Selection
"RTN","RCDPEWLD",146,0)
 ; Input:   ^TMP("RCERA_PARAMS")             - Global array of preferred values (if any)
"RTN","RCDPEWLD",147,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCAUTOP")- ERA Posting Status filter
"RTN","RCDPEWLD",148,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",149,0)
 N DIR,DTOUT,DUOUT,RCAUTOPDF
"RTN","RCDPEWLD",150,0)
 S RCAUTOPDF=$G(^TMP("RCERA_PARAMS",$J,"RCAUTOP"))
"RTN","RCDPEWLD",151,0)
 K DIR S DIR(0)="SA^A:AUTO-POSTING;N:NON AUTO-POSTING;B:BOTH"
"RTN","RCDPEWLD",152,0)
 S DIR("A")="Display (A)UTO-POSTING, (N)ON AUTO-POSTING, or (B)OTH: "
"RTN","RCDPEWLD",153,0)
 S DIR("B")="B"
"RTN","RCDPEWLD",154,0)
 S DIR("?",1)="Select AUTO-POSTING to only see auto-posted ERAs."
"RTN","RCDPEWLD",155,0)
 S DIR("?",2)="Select NON AUTO-POSTING to only see ERAs that were NOT auto-posted."
"RTN","RCDPEWLD",156,0)
 S DIR("?")="Select BOTH to see both auto-posted and non auto-posted ERAs."
"RTN","RCDPEWLD",157,0)
 S:RCAUTOPDF'="" DIR("B")=RCAUTOPDF    ;Stored preferred value, use as default
"RTN","RCDPEWLD",158,0)
 W !
"RTN","RCDPEWLD",159,0)
 D ^DIR
"RTN","RCDPEWLD",160,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",161,0)
 S ^TMP("RCERA_PARAMS",$J,"RCAUTOP")=Y
"RTN","RCDPEWLD",162,0)
 Q 0
"RTN","RCDPEWLD",163,0)
 ;
"RTN","RCDPEWLD",164,0)
MATCHST()  ; ERA-EFT Matching Status(Matched/Unmatched/Both) Selection
"RTN","RCDPEWLD",165,0)
 ; Input:   ^TMP("RCERA_PARAMS")             - Global array of preferred values (if any)
"RTN","RCDPEWLD",166,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCMATCH")- ERA Posting Status filter
"RTN","RCDPEWLD",167,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",168,0)
 N DIR,DTOUT,DUOUT,RCMATCHD
"RTN","RCDPEWLD",169,0)
 S RCMATCHD=$G(^TMP("RCERA_PARAMS",$J,"RCMATCH"))
"RTN","RCDPEWLD",170,0)
 K DIR S DIR(0)="SA^N:NOT MATCHED;M:MATCHED;B:BOTH"
"RTN","RCDPEWLD",171,0)
 S DIR("A")="ERA-EFT match status: (N)OT MATCHED, (M)ATCHED, or (B)OTH: "
"RTN","RCDPEWLD",172,0)
 S DIR("B")="B"
"RTN","RCDPEWLD",173,0)
 S DIR("?",1)="Select NOT MATCHED to only see unmatched ERAs."
"RTN","RCDPEWLD",174,0)
 S DIR("?",2)="Select MATCHED to only see matched ERAs."
"RTN","RCDPEWLD",175,0)
 S DIR("?")="Select BOTH to see both matched and unmatched ERAs."
"RTN","RCDPEWLD",176,0)
 S:RCMATCHD'="" DIR("B")=RCMATCHD      ;Stored preferred value, use as default
"RTN","RCDPEWLD",177,0)
 W !
"RTN","RCDPEWLD",178,0)
 D ^DIR
"RTN","RCDPEWLD",179,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",180,0)
 S ^TMP("RCERA_PARAMS",$J,"RCMATCH")=Y
"RTN","RCDPEWLD",181,0)
 Q 0
"RTN","RCDPEWLD",182,0)
 ;
"RTN","RCDPEWLD",183,0)
CLAIMTYP()  ; Claim Type (Medical/Pharmacy/Both) Selection
"RTN","RCDPEWLD",184,0)
 ; Input:   ^TMP("RCERA_PARAMS")             - Global array of preferred values (if any)
"RTN","RCDPEWLD",185,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCTYPE") - ERA Posting Status filter
"RTN","RCDPEWLD",186,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",187,0)
 N DIR,DTOUT,DUOUT,RCTYPEDF
"RTN","RCDPEWLD",188,0)
 S RCTYPEDF=$G(^TMP("RCERA_PARAMS",$J,"RCTYPE"))
"RTN","RCDPEWLD",189,0)
 ; PRCA*4.5*321 - Changed set of codes and help
"RTN","RCDPEWLD",190,0)
 K DIR S DIR(0)="SA^M:MEDICAL;P:PHARMACY;T:TRICARE;A:ALL"
"RTN","RCDPEWLD",191,0)
 S DIR("A")="(M)EDICAL, (P)HARMACY, (T)RICARE or (A)LL: "
"RTN","RCDPEWLD",192,0)
 S DIR("B")="A"
"RTN","RCDPEWLD",193,0)
 S DIR("?",1)="Select MEDICAL to only see ERAs with a payer type of medical."
"RTN","RCDPEWLD",194,0)
 S DIR("?",2)="Select PHARMACY to only see ERAs with a payer type of pharmacy."
"RTN","RCDPEWLD",195,0)
 S DIR("?",3)="Select TRICARE to only see ERAs with a payer type of Tricare."
"RTN","RCDPEWLD",196,0)
 S DIR("?")="Select ALL to see medical, pharmacy and Tricare ERAs."
"RTN","RCDPEWLD",197,0)
 ; PRCA*4.5*321 - End modified code block
"RTN","RCDPEWLD",198,0)
 S:RCTYPEDF'="" DIR("B")=RCTYPEDF     ;Stored preferred value, use as default
"RTN","RCDPEWLD",199,0)
 W !
"RTN","RCDPEWLD",200,0)
 D ^DIR
"RTN","RCDPEWLD",201,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",202,0)
 S ^TMP("RCERA_PARAMS",$J,"RCTYPE")=Y
"RTN","RCDPEWLD",203,0)
 Q 0
"RTN","RCDPEWLD",204,0)
 ;
"RTN","RCDPEWLD",205,0)
PAYR() ; Payer Selection
"RTN","RCDPEWLD",206,0)
 ; Input:   ^TMP("RCERA_PARAMS",$J)          - Global array of preferred values (if any)
"RTN","RCDPEWLD",207,0)
 ; Output:  ^TMP("RCERA_PARAMS",$J,"RCTYPE") - ERA Posting Status filter
"RTN","RCDPEWLD",208,0)
 ; Returns: 1 if user quit or timed out, 0 otherwise
"RTN","RCDPEWLD",209,0)
 N DIR,DTOUT,DUOUT,PQUIT,RCPAYR,RCPAYRDF
"RTN","RCDPEWLD",210,0)
 S RCPAYRDF=$G(^TMP("RCERA_PARAMS",$J,"RCPAYR"))
"RTN","RCDPEWLD",211,0)
 S RCQUIT=0
"RTN","RCDPEWLD",212,0)
 K DIR S DIR(0)="SA^A:ALL;R:RANGE"
"RTN","RCDPEWLD",213,0)
 S DIR("A")="(A)LL payers, (R)ANGE of payer names: "
"RTN","RCDPEWLD",214,0)
 S DIR("B")="ALL"
"RTN","RCDPEWLD",215,0)
 S DIR("?",1)="Entering ALL will select all payers."
"RTN","RCDPEWLD",216,0)
 S DIR("?")="If RANGE is entered, you will be prompted for a payer range."
"RTN","RCDPEWLD",217,0)
 S:$P(RCPAYRDF,"^")'="" DIR("B")=$P(RCPAYRDF,"^",1)      ;Stored preferred value, use as default
"RTN","RCDPEWLD",218,0)
 W !
"RTN","RCDPEWLD",219,0)
 D ^DIR
"RTN","RCDPEWLD",220,0)
 I $D(DTOUT)!$D(DUOUT) Q 1
"RTN","RCDPEWLD",221,0)
 S RCPAYR=Y
"RTN","RCDPEWLD",222,0)
 I RCPAYR="A" S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=Y       ;All payers selected
"RTN","RCDPEWLD",223,0)
 I RCPAYR="R" D  G:PQUIT PAYR
"RTN","RCDPEWLD",224,0)
 . S PQUIT=0
"RTN","RCDPEWLD",225,0)
 . W !,"Names you select here will be the payer names from the ERA, not the ins. file"
"RTN","RCDPEWLD",226,0)
 . K DIR
"RTN","RCDPEWLD",227,0)
 . S DIR("?")="Enter a name from 1 to 30 characters in UPPER CASE."
"RTN","RCDPEWLD",228,0)
 . S DIR(0)="FA^1:30^K:X'?.U X"
"RTN","RCDPEWLD",229,0)
 . S DIR("A")="Start with payer name: "
"RTN","RCDPEWLD",230,0)
 . S:$P(RCPAYRDF,"^",2)'="" DIR("B")=$P(RCPAYRDF,"^",2)  ;Stored preferred value, use as default
"RTN","RCDPEWLD",231,0)
 . W !
"RTN","RCDPEWLD",232,0)
 . D ^DIR
"RTN","RCDPEWLD",233,0)
 . I $D(DTOUT)!$D(DUOUT) D  Q
"RTN","RCDPEWLD",234,0)
 . . S PQUIT=1
"RTN","RCDPEWLD",235,0)
 . . K ^TMP("RCERA_PARAMS",$J,"RCPAYR")
"RTN","RCDPEWLD",236,0)
 . S RCPAYR("FROM")=Y
"RTN","RCDPEWLD",237,0)
 . K DIR
"RTN","RCDPEWLD",238,0)
 . S DIR("?")="Enter a name from 1 to 30 characters in UPPER CASE."
"RTN","RCDPEWLD",239,0)
 . S DIR(0)="FA^1:30^K:X'?.U X",DIR("A")="Go to payer name: "
"RTN","RCDPEWLD",240,0)
 . S DIR("B")=$E(RCPAYR("FROM"),1,27)_"ZZZ"
"RTN","RCDPEWLD",241,0)
 . S:$P(RCPAYRDF,"^",3)'="" DIR("B")=$P(RCPAYRDF,"^",3)   ;Stored preferred value, use as default
"RTN","RCDPEWLD",242,0)
 . W !
"RTN","RCDPEWLD",243,0)
 . D ^DIR
"RTN","RCDPEWLD",244,0)
 . I $D(DTOUT)!$D(DUOUT) S PQUIT=1 Q
"RTN","RCDPEWLD",245,0)
 . S ^TMP("RCERA_PARAMS",$J,"RCPAYR")=RCPAYR_"^"_RCPAYR("FROM")_"^"_Y
"RTN","RCDPEWLD",246,0)
 Q 0
"RTN","RCDPEWLD",247,0)
 ;
"RTN","RCDPEX3")
0^42^B76582678
"RTN","RCDPEX3",1,0)
RCDPEX3 ;ALB/TMK/PJH - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ; 3/30/11 7:19pm
"RTN","RCDPEX3",2,0)
 ;;4.5;Accounts Receivable;**173,208,258,269,321**;Mar 20, 1995;Build 48
"RTN","RCDPEX3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","RCDPEX3",4,0)
 ; IA# 5286 for call to $$PRVPHONE^IBJPS3()
"RTN","RCDPEX3",5,0)
 Q
"RTN","RCDPEX3",6,0)
 ;
"RTN","RCDPEX3",7,0)
VP ; View/Print ERA Msgs - File 344.4
"RTN","RCDPEX3",8,0)
 N X,Y,RCDA,RCTDA,RCALL,DIR,POP
"RTN","RCDPEX3",9,0)
 D FULL^VALM1
"RTN","RCDPEX3",10,0)
 S DIR(0)="SA^A:ALL;S:SELECTED",DIR("A")="PRINT (A)LL or (S)ELECTED RECORDS?: "
"RTN","RCDPEX3",11,0)
 S DIR("B")="ALL"
"RTN","RCDPEX3",12,0)
 D ^DIR K DIR
"RTN","RCDPEX3",13,0)
 G:$D(DUOUT)!$D(DTOUT) VPQ
"RTN","RCDPEX3",14,0)
 S RCALL=(Y="A")
"RTN","RCDPEX3",15,0)
 ;
"RTN","RCDPEX3",16,0)
 I 'RCALL D  G:'$O(RCDA("")) VPQ
"RTN","RCDPEX3",17,0)
 . D SEL(.RCDA)
"RTN","RCDPEX3",18,0)
 ;
"RTN","RCDPEX3",19,0)
 ; device
"RTN","RCDPEX3",20,0)
 N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","RCDPEX3",21,0)
 S %ZIS="QM" D ^%ZIS G:POP VPQ
"RTN","RCDPEX3",22,0)
 I $D(IO("Q")) D  G VPQ
"RTN","RCDPEX3",23,0)
 . S ZTRTN="VPOUT^RCDPEX3",ZTDESC="AR - Print ERA/EEOB Data With Exceptions"
"RTN","RCDPEX3",24,0)
 . S ZTSAVE("RCDA")="",ZTSAVE("RCALL")="",ZTSAVE("^TMP(""RCDPEX_SUM-EOBDX"",$J,")=""
"RTN","RCDPEX3",25,0)
 . D ^%ZTLOAD
"RTN","RCDPEX3",26,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPEX3",27,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEX3",28,0)
 U IO
"RTN","RCDPEX3",29,0)
 ;
"RTN","RCDPEX3",30,0)
VPOUT ; Entrypoint queued job
"RTN","RCDPEX3",31,0)
 ; RCDA, RCALL must be defined
"RTN","RCDPEX3",32,0)
 N Z,RCSTOP,RCZ,RCPG,RCDOT,RCTDA1
"RTN","RCDPEX3",33,0)
 K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT")
"RTN","RCDPEX3",34,0)
 S (RCSTOP,RCPG)=0,RCDOT="",$P(RCDOT,".",79)=""
"RTN","RCDPEX3",35,0)
 I RCALL D
"RTN","RCDPEX3",36,0)
 . S RCZ=0 F  S RCZ=$O(^TMP("RCDPEX_SUM-EOBDX",$J,RCZ)) Q:'RCZ  S RCTDA=$G(^(RCZ)),RCTDA1=+$P(RCTDA,U,3),RCTDA=+$P(RCTDA,U,2) D  Q:RCSTOP
"RTN","RCDPEX3",37,0)
 .. D PRT(RCTDA,RCTDA1,.RCPG,.RCSTOP)
"RTN","RCDPEX3",38,0)
 .. I $O(^TMP("RCDPEX_SUM-EOBDX",$J,RCZ)) D WRTSEP(RCDOT,RCPG)
"RTN","RCDPEX3",39,0)
 I 'RCALL D
"RTN","RCDPEX3",40,0)
 . S RCZ=0 F  S RCZ=$O(RCDA(RCZ)) Q:'RCZ  D
"RTN","RCDPEX3",41,0)
 .. S RCTDA1=+$P(RCDA(RCZ),U,2),RCTDA=+RCDA(RCZ) D PRT(RCTDA,RCTDA1,.RCPG,.RCSTOP) I $O(RCDA(RCZ)) D WRTSEP(RCDOT,RCPG)
"RTN","RCDPEX3",42,0)
 ;
"RTN","RCDPEX3",43,0)
 I '$D(ZTQUEUED),'RCSTOP,RCPG D ASK(.RCSTOP)
"RTN","RCDPEX3",44,0)
 ;
"RTN","RCDPEX3",45,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","RCDPEX3",46,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","RCDPEX3",47,0)
 ;
"RTN","RCDPEX3",48,0)
VPQ K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT")
"RTN","RCDPEX3",49,0)
 S VALMBCK="R"
"RTN","RCDPEX3",50,0)
 Q
"RTN","RCDPEX3",51,0)
 ;
"RTN","RCDPEX3",52,0)
WRTSEP(RCDOT,RCPG) ; Separating lines if more records to print
"RTN","RCDPEX3",53,0)
 W !,RCDOT,!,RCDOT
"RTN","RCDPEX3",54,0)
 I (($Y+5)>IOSL) D HDR(.RCPG) Q
"RTN","RCDPEX3",55,0)
 W !!
"RTN","RCDPEX3",56,0)
 Q
"RTN","RCDPEX3",57,0)
 ;
"RTN","RCDPEX3",58,0)
PRT(RCTDA,RCTDA1,RCPG,RCSTOP) ; Print data from file 344.4 and 344.41
"RTN","RCDPEX3",59,0)
 ; RCTDA = ien file 344.4
"RTN","RCDPEX3",60,0)
 ; RCTDA1 = ien file 344.41
"RTN","RCDPEX3",61,0)
 ; RCPG = last page extracted
"RTN","RCDPEX3",62,0)
 ; RCSTOP = returned 1 if passed by ref and process stopped
"RTN","RCDPEX3",63,0)
 ;
"RTN","RCDPEX3",64,0)
 N RCDIQ,RCDIQ1,RCDIQ2,RCXM1,RC,Z
"RTN","RCDPEX3",65,0)
 D GETS^DIQ(344.4,RCTDA_",","*","IEN","RCDIQ")
"RTN","RCDPEX3",66,0)
 D TXT0^RCDPEX31(RCTDA,.RCDIQ,.RCXM1,.RC) ; Get top level 0-node captioned fields
"RTN","RCDPEX3",67,0)
 ;
"RTN","RCDPEX3",68,0)
 I $O(^RCY(344.4,RCTDA,2,0)) S RC=RC+1,RCXM1(RC)="  **ERA LEVEL ADJUSTMENTS**"
"RTN","RCDPEX3",69,0)
 S Z=0 F  S Z=$O(^RCY(344.4,RCTDA,2,Z)) Q:'Z  D
"RTN","RCDPEX3",70,0)
 . D GETS^DIQ(344.42,Z_","_RCTDA_",","*","IEN","RCDIQ2")
"RTN","RCDPEX3",71,0)
 . D TXT2^RCDPEX31(RCTDA,Z,.RCDIQ2,.RCXM1,.RC) ; Get top level ERA adjs
"RTN","RCDPEX3",72,0)
 ;
"RTN","RCDPEX3",73,0)
 D GETS^DIQ(344.41,RCTDA1_","_RCTDA_",","*","IEN","RCDIQ1")
"RTN","RCDPEX3",74,0)
 D TXT00^RCDPEX31(RCTDA,RCTDA1,.RCDIQ1,.RCXM1,.RC)
"RTN","RCDPEX3",75,0)
 D DISP^RCDPESR0("^RCY(344.4,"_RCTDA_",1,"_RCTDA1_",1)","^TMP($J,""RC_SUMRAW"")",1,"^TMP($J,""RC_SUMOUT"")",75) ; Get formatted 'raw' data
"RTN","RCDPEX3",76,0)
 ;
"RTN","RCDPEX3",77,0)
 I $D(RCDIQ1(344.41,RCTDA1_","_RCTDA_",",2)) D
"RTN","RCDPEX3",78,0)
 . S RC=RC+1,RCXM1(RC)="  **RESOLUTION LOG DATA**"
"RTN","RCDPEX3",79,0)
 . S Z=0 F  S Z=$O(RCDIQ1(344.41,RCTDA1_","_RCTDA_",",2,Z)) Q:'Z  S RC=RC+1,RCXM1(RC)=RCDIQ1(344.41,RCTDA1_","_RCTDA_",",2,Z)
"RTN","RCDPEX3",80,0)
 . S RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX3",81,0)
 S (RCSTOP,Z)=0
"RTN","RCDPEX3",82,0)
 F  S Z=$O(RCXM1(Z)) Q:'Z  S ^TMP($J,"RC_SUMOUT",Z-999)=RCXM1(Z)
"RTN","RCDPEX3",83,0)
 S Z=""
"RTN","RCDPEX3",84,0)
 F  S Z=$O(^TMP($J,"RC_SUMOUT",Z)) Q:'Z  D  Q:RCSTOP
"RTN","RCDPEX3",85,0)
 . I $D(ZTQUEUED),$$S^%ZTLOAD S (RCSTOP,ZTSTOP)=1 K ZTREQ I +$G(RCPG) W !!,"***TASK STOPPED BY USER***" Q
"RTN","RCDPEX3",86,0)
 . I 'RCPG!(($Y+5)>IOSL) D  I RCSTOP Q
"RTN","RCDPEX3",87,0)
 .. D:RCPG ASK(.RCSTOP) I RCSTOP Q
"RTN","RCDPEX3",88,0)
 .. D HDR(.RCPG)
"RTN","RCDPEX3",89,0)
 . W !,$G(^TMP($J,"RC_SUMOUT",Z))
"RTN","RCDPEX3",90,0)
 ;
"RTN","RCDPEX3",91,0)
 K ^TMP($J,"RC_SUMRAW"),^TMP($J,"RC_SUMOUT") ; Clear arrays before next exception - PRCA*4.5*321 
"RTN","RCDPEX3",92,0)
 Q
"RTN","RCDPEX3",93,0)
 ;
"RTN","RCDPEX3",94,0)
XFR ; Transfer EOB(s) to other site
"RTN","RCDPEX3",95,0)
 N RC,RC0,RCCHG,RCOK,RCDOMAIN,RCDEF,RCDA,RCWHY,RCER,RCECT,RCXTO,RCALL,RCCONT,DIR,X,Y,DA,DIE,DR,POP,RCDA,RCXDA,RCXDA1,RCDUZ,XMBODY,XMTO
"RTN","RCDPEX3",96,0)
 D FULL^VALM1
"RTN","RCDPEX3",97,0)
 D SEL(.RCDA)
"RTN","RCDPEX3",98,0)
 ;
"RTN","RCDPEX3",99,0)
 G:'$O(RCDA(0)) XFRQ
"RTN","RCDPEX3",100,0)
 S DIR("S")="I +$G(^DIC(4,+Y,6))",DIR(0)="PA^4:AME",DIR("A")="TRANSFER TO WHICH SITE?: " D ^DIR K DIR
"RTN","RCDPEX3",101,0)
 I $D(DUOUT)!$D(DTOUT) G XFRQ
"RTN","RCDPEX3",102,0)
 S RCXTO=+Y,RCCHG=0
"RTN","RCDPEX3",103,0)
 ;
"RTN","RCDPEX3",104,0)
 S RCDOMAIN=$$EXTERNAL^DILFD(4,60,,+$G(^DIC(4,+RCXTO,6))),RCECT=0
"RTN","RCDPEX3",105,0)
 I RCDOMAIN="" D  G XFRQ
"RTN","RCDPEX3",106,0)
 . S DIR("A",1)="THERE IS NO VALID DOMAIN SET UP FOR THIS SITE. YOU MUST CHOOSE ANOTHER ONE.",DIR("A")="PRESS RETURN TO CONTINUE",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","RCDPEX3",107,0)
 ;
"RTN","RCDPEX3",108,0)
 S RCDEF=$$PRVPHONE^IBJPS3()                  ; IA 5286
"RTN","RCDPEX3",109,0)
 I RCDEF'="" S RCDEF="AGENT CASHIER-"_RCDEF
"RTN","RCDPEX3",110,0)
 ;
"RTN","RCDPEX3",111,0)
 S DIR("A",1)="ENTER THE CONTACT INFORMATION FOR THE PERSON AT YOUR SITE"
"RTN","RCDPEX3",112,0)
 S DIR("A",2)="   WHO MAY BE CONTACTED BY THE OTHER SITE REGARDING THIS EEOB"
"RTN","RCDPEX3",113,0)
 S DIR("A")="   (1-45 CHARACTERS): "_$S(RCDEF'="":RCDEF_"// ",1:"")
"RTN","RCDPEX3",114,0)
 S DIR(0)="FA"_$S(RCDEF'="":"O",1:"")_"^1:45" W ! D ^DIR K DIR
"RTN","RCDPEX3",115,0)
 I $D(DUOUT)!$D(DTOUT) G XFRQ
"RTN","RCDPEX3",116,0)
 I Y="" S Y=RCDEF
"RTN","RCDPEX3",117,0)
 S RCCONT=Y
"RTN","RCDPEX3",118,0)
 ;
"RTN","RCDPEX3",119,0)
 S DIR(0)="YA",DIR("A")="DO YOU WANT TO PRINT THE EEOB(s)?: ",DIR("B")="Y"
"RTN","RCDPEX3",120,0)
 D ^DIR K DIR
"RTN","RCDPEX3",121,0)
 I $D(DUOUT)!$D(DTOUT) G XFRQ
"RTN","RCDPEX3",122,0)
 I Y=1 S RCER=0 D  I RCER G XFRQ
"RTN","RCDPEX3",123,0)
 . N %ZIS,ZTRTN,ZTSAVE,ZTDESC
"RTN","RCDPEX3",124,0)
 . S %ZIS="QM" D ^%ZIS I POP S RCER=1 Q
"RTN","RCDPEX3",125,0)
 . I $D(IO("Q")) D  Q
"RTN","RCDPEX3",126,0)
 .. S RCALL=0
"RTN","RCDPEX3",127,0)
 .. S ZTRTN="VPOUT^RCDPEX3",ZTDESC="AR - Print EEOB Data Before Transfer"
"RTN","RCDPEX3",128,0)
 .. S ZTSAVE("RCDA")="",ZTSAVE("RCALL")="",ZTSAVE("^TMP(""RCDPEX_SUM-EOBDX"",$J)")=""
"RTN","RCDPEX3",129,0)
 .. D ^%ZTLOAD
"RTN","RCDPEX3",130,0)
 .. I '$D(ZTSK) S RCER=1
"RTN","RCDPEX3",131,0)
 .. K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPEX3",132,0)
 . S RCALL=0
"RTN","RCDPEX3",133,0)
 . D VPOUT^RCDPEX3
"RTN","RCDPEX3",134,0)
 ;
"RTN","RCDPEX3",135,0)
 S RCWHY(1)="Transfer EEOB detail to another site"
"RTN","RCDPEX3",136,0)
 S RC=0 F  S RC=$O(RCDA(RC)) Q:'RC  D  L -^RCY(344.4,RCXDA,1,RCXDA1,0)
"RTN","RCDPEX3",137,0)
 . N RCBODY,RCAMT,RCBILL,RCX,XMZ
"RTN","RCDPEX3",138,0)
 . S RCXDA=+RCDA(RC),RCXDA1=+$P(RCDA(RC),U,2),RCWHY(2)=""
"RTN","RCDPEX3",139,0)
 . I '$$LOCK^RCDPEX31(RCXDA,RCXDA1,1) D  Q
"RTN","RCDPEX3",140,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Selection #"_RC_" is being edited by another user - ... please try again later"
"RTN","RCDPEX3",141,0)
 . ;
"RTN","RCDPEX3",142,0)
 . S RC0=$G(^RCY(344.4,RCXDA,1,RCXDA1,0))
"RTN","RCDPEX3",143,0)
 . M RCBODY=^RCY(344.4,RCXDA,1,RCXDA1,1)
"RTN","RCDPEX3",144,0)
 . S RCAMT=$P(RC0,U,3)*100
"RTN","RCDPEX3",145,0)
 . S RCBILL=$P(RC0,U,5)
"RTN","RCDPEX3",146,0)
 . S DIR("A",1)="ONCE THIS EEOB HAS BEEN TRANSFERRED, ITS BILL # CANNOT BE EDITED",DIR("A")="ARE YOU SURE THIS IS NOT A CLAIM FOR YOUR SITE?: ",DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEX3",147,0)
 . Q:Y'=1
"RTN","RCDPEX3",148,0)
 . I $P(RC0,U,11) D  Q:'RCOK
"RTN","RCDPEX3",149,0)
 .. S RCOK=1
"RTN","RCDPEX3",150,0)
 .. S DIR("A",1)="WARNING: EEOB FOR #"_RC_" ("_RCBILL_") HAS ALREADY BEEN TRANSFERRED",DIR("A",2)="   TO "_$P($G(^DIC(4,+$P(RC0,U,11),0)),U)_"   ON: "_$$FMTE^XLFDT($P(RC0,U,12),2)
"RTN","RCDPEX3",151,0)
 .. S DIR("A")="ARE YOU SURE YOU WANT TO TRANSFER IT AGAIN?: "
"RTN","RCDPEX3",152,0)
 .. S DIR(0)="YA",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEX3",153,0)
 .. I Y=1 Q
"RTN","RCDPEX3",154,0)
 .. S RCOK=0
"RTN","RCDPEX3",155,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Selection #"_RC_" already transferred - "_RCBILL_" NOT transferred again"
"RTN","RCDPEX3",156,0)
 . K RCBODY(0)
"RTN","RCDPEX3",157,0)
 . S RCX=$G(RCBODY(1,0))
"RTN","RCDPEX3",158,0)
 . ;
"RTN","RCDPEX3",159,0)
 . I $P($G(^RCY(344.4,RCXDA,1,RCXDA1,0)),U,7)'=1 D  Q
"RTN","RCDPEX3",160,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Selection #"_RC_" is not available for transfer - "_RCBILL_" NOT transferred"
"RTN","RCDPEX3",161,0)
 . ;
"RTN","RCDPEX3",162,0)
 . I $P(RCX,U)'["835ERA"!'$O(RCBODY(1)) D  Q
"RTN","RCDPEX3",163,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Selection #"_RC_" format is not valid for transfer - "_RCBILL_" NOT transferred"
"RTN","RCDPEX3",164,0)
 . ;
"RTN","RCDPEX3",165,0)
 . S $P(RCX,U)="835XFR",$P(RCX,U,10,15)=(RCAMT_"^^^^^")
"RTN","RCDPEX3",166,0)
 . S $P(RCX,U,19)=RCCONT
"RTN","RCDPEX3",167,0)
 . S RCBODY(1,0)=RCX
"RTN","RCDPEX3",168,0)
 . S RCBODY(+$O(RCBODY(""),-1)+1,0)="99^$"
"RTN","RCDPEX3",169,0)
 . S RCBODY(+$O(RCBODY(""),-1)+1,0)="NNNN"
"RTN","RCDPEX3",170,0)
 . S XMTO("S.RCDPE EDI LOCKBOX SERVER@"_RCDOMAIN)=""
"RTN","RCDPEX3",171,0)
 . S XMBODY="RCBODY",RCDUZ=$G(DUZ),DUZ=.5
"RTN","RCDPEX3",172,0)
 . D SENDMSG^XMXAPI(.5,"TRANSFER 3RD PARTY EEOB "_RCBILL_"(REF #"_RCXDA_";"_RCXDA1_"#)",XMBODY,.XMTO,,.XMZ)
"RTN","RCDPEX3",173,0)
 . ;
"RTN","RCDPEX3",174,0)
 . S DUZ=RCDUZ
"RTN","RCDPEX3",175,0)
 . I $G(XMZ) D  ; Report msg #
"RTN","RCDPEX3",176,0)
 .. S RCCHG=1
"RTN","RCDPEX3",177,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="Entry #"_RC_" was successfully transferred - msg # is "_XMZ
"RTN","RCDPEX3",178,0)
 .. S DA(1)=RCXDA,DA=RCXDA1,DIE="^RCY(344.4,"_DA(1)_",1,",DR=".09////"_XMZ_";.11////"_RCXTO_";.12////"_$E($$NOW^XLFDT(),1,12) D ^DIE
"RTN","RCDPEX3",179,0)
 .. S RCWHY(2)=" Transfer to "_$P($G(^DIC(4,+RCXTO,0)),U)_" was successful"
"RTN","RCDPEX3",180,0)
 .. ;
"RTN","RCDPEX3",181,0)
 . E  D  ; error - transfer not done
"RTN","RCDPEX3",182,0)
 .. S RCECT=RCECT+1,RCER(RCECT)="**Entry #"_RC_" was NOT transferred due to a msg build error ("_RCBILL_")"
"RTN","RCDPEX3",183,0)
 .. S RCWHY(2)=" Transfer to "_$P($G(^DIC(4,+RCXTO,0)),U)_" was UNSUCCESSFUL"
"RTN","RCDPEX3",184,0)
 .. ;
"RTN","RCDPEX3",185,0)
 . D STORACT^RCDPEX31(RCXDA,RCXDA1,.RCWHY)
"RTN","RCDPEX3",186,0)
 ;
"RTN","RCDPEX3",187,0)
 I $O(RCER(0)) D
"RTN","RCDPEX3",188,0)
 . ; Write msgs
"RTN","RCDPEX3",189,0)
 . W !!,"TRANSFER OF EEOB TO "_$P($G(^DIC(4,RCXTO,0)),U)_" RESULTS: ",!
"RTN","RCDPEX3",190,0)
 . S RCECT=0 F  S RCECT=$O(RCER(RCECT)) Q:'RCECT  W !,"  ",RCER(RCECT)
"RTN","RCDPEX3",191,0)
 . W !
"RTN","RCDPEX3",192,0)
 ;
"RTN","RCDPEX3",193,0)
 D PAUSE^VALM1
"RTN","RCDPEX3",194,0)
 ;
"RTN","RCDPEX3",195,0)
XFRQ I $G(RCCHG) D BLD^RCDPEX2
"RTN","RCDPEX3",196,0)
 S VALMBCK="R"
"RTN","RCDPEX3",197,0)
 Q
"RTN","RCDPEX3",198,0)
 ;
"RTN","RCDPEX3",199,0)
SEL(RCDA,ONE) ; Select entry(s) from list
"RTN","RCDPEX3",200,0)
 ; RCDA = array returned if selections made
"RTN","RCDPEX3",201,0)
 ;    RCDA(n)=ien of bill selected file 344.4
"RTN","RCDPEX3",202,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","RCDPEX3",203,0)
 N RC
"RTN","RCDPEX3",204,0)
 K RCDA
"RTN","RCDPEX3",205,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","RCDPEX3",206,0)
 S RCDA=0 F  S RCDA=$O(VALMY(RCDA)) Q:'RCDA  S RC=$G(^TMP("RCDPEX_SUM-EOBDX",$J,RCDA)),RCDA(RCDA)=+$P(RC,U,2)_U_+$P(RC,U,3)
"RTN","RCDPEX3",207,0)
 Q
"RTN","RCDPEX3",208,0)
 ;
"RTN","RCDPEX3",209,0)
HDR(RCPG) ;Print report hdr
"RTN","RCDPEX3",210,0)
 ; RCPG = last page #
"RTN","RCDPEX3",211,0)
 I RCPG!($E(IOST,1,2)="C-") W @IOF,*13
"RTN","RCDPEX3",212,0)
 S RCPG=$G(RCPG)+1
"RTN","RCDPEX3",213,0)
 W !,?5,"EDI LOCKBOX EEOB DATA EXCEPTIONS - EEOB DETAIL",?55,$$FMTE^XLFDT(DT,2),?70,"Page: ",RCPG,!,$TR($J("",IOM)," ","=")
"RTN","RCDPEX3",214,0)
 Q
"RTN","RCDPEX3",215,0)
 ;
"RTN","RCDPEX3",216,0)
ASK(RCSTOP) ;
"RTN","RCDPEX3",217,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPEX3",218,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","RCDPEX3",219,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPEX3",220,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPEX3",221,0)
 Q
"RTN","RCDPEX3",222,0)
 ; ***
"RTN","RCDPEX3",223,0)
 ; *** Entrypoints TXT* assume these variable definitions ***
"RTN","RCDPEX3",224,0)
 ; ***
"RTN","RCDPEX3",225,0)
 ; FUNCTIONs returns RCXM1 and RC if passed by reference
"RTN","RCDPEX3",226,0)
 ; RCTDA = ien, file 344.4
"RTN","RCDPEX3",227,0)
 ; RCXM1 = array returned with text, captioned
"RTN","RCDPEX3",228,0)
 ; RC = # of lines already in array (optional)
"RTN","RCDPEX3",229,0)
 ; RCDIQ and RCDIQ1 = arrays returned from GETS^DIQ
"RTN","RCDPEX3",230,0)
 ; ***
"RTN","RCDPEX3",231,0)
 ;
"RTN","RCDPEX3",232,0)
UPD ; Try to update the IB EOB file from exception in 344.41
"RTN","RCDPEX3",233,0)
 D UPD^RCDPEX31 ; Moved for space
"RTN","RCDPEX3",234,0)
 Q
"RTN","RCDPEX3",235,0)
 ;
"RTN","RCDPEX31")
0^43^B42060337
"RTN","RCDPEX31",1,0)
RCDPEX31 ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;Jun 11, 2014@15:50:59
"RTN","RCDPEX31",2,0)
 ;;4.5;Accounts Receivable;**173,208,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPEX31",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX31",4,0)
 ;
"RTN","RCDPEX31",5,0)
UPD ; Try to update the IB EOB file from exception in 344.41
"RTN","RCDPEX31",6,0)
 N RCDA,RCTDA,RCTDA1,RCWHY,Z,DA,DIE,DR
"RTN","RCDPEX31",7,0)
 D FULL^VALM1
"RTN","RCDPEX31",8,0)
 D SEL^RCDPEX3(.RCDA,1)
"RTN","RCDPEX31",9,0)
 S RCDA=$O(RCDA(0)) G:'RCDA UPDQ
"RTN","RCDPEX31",10,0)
 S RCTDA=+RCDA(RCDA),RCTDA1=+$P(RCDA(RCDA),U,2)
"RTN","RCDPEX31",11,0)
 I '$$LOCK(RCTDA,RCTDA1,0) G UPDQ
"RTN","RCDPEX31",12,0)
 I $P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,7)'=2 D  G UPDQ
"RTN","RCDPEX31",13,0)
 . W !,"EEOB cannot be filed in IB"_$S($P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,7)=1:" - the bill # is invalid",1:"")
"RTN","RCDPEX31",14,0)
 . D PAUSE^VALM1
"RTN","RCDPEX31",15,0)
 I RCTDA,RCTDA1 D UPDEOB^RCDPESR2(RCTDA_";"_RCTDA1,4)
"RTN","RCDPEX31",16,0)
 S Z=$P($G(^RCY(344.4,RCTDA,1,RCTDA1,0)),U,2)
"RTN","RCDPEX31",17,0)
 I Z D  ; Update file 344.41 record
"RTN","RCDPEX31",18,0)
 . S DA(1)=RCTDA,DA=RCTDA1,DR=".07///@;.13////1;.02////"_Z,DIE="^RCY(344.4,"_DA(1)_",1," D ^DIE
"RTN","RCDPEX31",19,0)
 W !,"EEOB DETAIL UPDATE ",$S(Z:"WAS SUCCESSFUL",1:"ENCOUNTERED ERRORS")
"RTN","RCDPEX31",20,0)
 S RCWHY(1)="Update IB with EEOB detail",RCWHY(2)="Update EEOB detail was "_$S('Z:"NOT",1:"")_" successful"
"RTN","RCDPEX31",21,0)
 D STORACT(RCTDA,RCTDA1,.RCWHY)
"RTN","RCDPEX31",22,0)
 D PAUSE^VALM1
"RTN","RCDPEX31",23,0)
 D BLD^RCDPEX2
"RTN","RCDPEX31",24,0)
 ;
"RTN","RCDPEX31",25,0)
UPDQ S VALMBCK="R"
"RTN","RCDPEX31",26,0)
 Q
"RTN","RCDPEX31",27,0)
 ;
"RTN","RCDPEX31",28,0)
DEL ; Delete exception conditions from EOB detail list - file 344.4
"RTN","RCDPEX31",29,0)
 N DIR,DA,DIE,DR,DTOUT,DUOUT,RC0,RC00,RCDA,RCDIQ,RCDIQ1,RCE,RCOK,RCT,RCTDA,RCTDA1,RCWHY,RCWHYTXT,RCX,X,Y,Z
"RTN","RCDPEX31",30,0)
 D FULL^VALM1
"RTN","RCDPEX31",31,0)
 D SEL^RCDPEX3(.RCDA,1)
"RTN","RCDPEX31",32,0)
 S RCDA=$O(RCDA(""))
"RTN","RCDPEX31",33,0)
 I RCDA="" G DELQ
"RTN","RCDPEX31",34,0)
 S RCTDA=+RCDA(RCDA),RCTDA1=$P(RCDA(RCDA),U,2)
"RTN","RCDPEX31",35,0)
 I '$$LOCK(RCTDA,RCTDA1,0) G DELQ
"RTN","RCDPEX31",36,0)
 W !
"RTN","RCDPEX31",37,0)
 S DIR(0)="YA",DIR("A",1)="This action will mark this EEOB detail record so it no longer appears as an",DIR("A",2)="exception.  A MailMan message will be sent to report this action.",DIR("A",3)=" "
"RTN","RCDPEX31",38,0)
 S DIR("A")="ARE YOU SURE YOU WANT TO CONTINUE? ",DIR("B")="NO"
"RTN","RCDPEX31",39,0)
 D ^DIR K DIR
"RTN","RCDPEX31",40,0)
 G:Y'=1 DELQ
"RTN","RCDPEX31",41,0)
 S DIR(0)="FA;3:60",DIR("A")="ENTER A REASON FOR THIS ACTION: ",DIR("?",1)="Enter the reason why this EEOB exception is being removed from the",DIR("?")=" exception list (3-60 characters are REQUIRED)"
"RTN","RCDPEX31",42,0)
 D ^DIR K DIR
"RTN","RCDPEX31",43,0)
 I $D(DUOUT)!$D(DTOUT) G DELQ
"RTN","RCDPEX31",44,0)
 S RCWHY(1)="Removal of EEOB detail entry from the exception list",RCWHY(2)="  Reason Entered: "_Y,RCWHYTXT=Y
"RTN","RCDPEX31",45,0)
 S RC0=$G(^RCY(344.4,RCTDA,0)),RC00=$G(^(1,RCTDA1,0))
"RTN","RCDPEX31",46,0)
 ;
"RTN","RCDPEX31",47,0)
 D GETS^DIQ(344.4,RCTDA_",","*","IEN","RCDIQ")
"RTN","RCDPEX31",48,0)
 D GETS^DIQ(344.41,RCTDA1_","_RCTDA_",","*","IEN","RCDIQ1")
"RTN","RCDPEX31",49,0)
 S RCE=0
"RTN","RCDPEX31",50,0)
 D TXT0(RCTDA,.RCDIQ,.RCX,.RCE)
"RTN","RCDPEX31",51,0)
 S RCE=RCE+1,RCX(RCE)="RAW MESSAGE DATA:"
"RTN","RCDPEX31",52,0)
 D TXT00(RCTDA,RCTDA1,.RCDIQ1,.RCX,.RCE)
"RTN","RCDPEX31",53,0)
 S DA=RCTDA1,DA(1)=RCTDA,DR=".07///@;.13////0",DIE="^RCY(344.4,"_DA(1)_",1," D ^DIE
"RTN","RCDPEX31",54,0)
 D STORACT(RCTDA,RCTDA1,.RCWHY)
"RTN","RCDPEX31",55,0)
 ;
"RTN","RCDPEX31",56,0)
 S RCT(1)="The electronic EEOB detail for Trace #: "_$P(RC0,U,2)_" and Seq #"_$P(RC00,U),RCT(2)=" is no longer flagged for an exception condition"
"RTN","RCDPEX31",57,0)
 S RCT(3)="PAYMENT FROM: "_$P(RC0,U,6)_" on "_$$FMTE^XLFDT($P(RC0,U,4),2)
"RTN","RCDPEX31",58,0)
 S RCT(4)=" "
"RTN","RCDPEX31",59,0)
 S RCT(5)="REASON: "_RCWHYTXT
"RTN","RCDPEX31",60,0)
 S RCT(6)="ACTION PERFORMED BY: "_$P($G(^VA(200,+$G(DUZ),0)),U)_"   "_$$FMTE^XLFDT($$NOW^XLFDT,2)
"RTN","RCDPEX31",61,0)
 S RCT(7)=" ",RCE=+$O(RCT(""),-1)
"RTN","RCDPEX31",62,0)
 S Z=0 F  S Z=$O(RCX(Z)) Q:'Z  S RCE=RCE+1,RCT(RCE)=RCX(Z)
"RTN","RCDPEX31",63,0)
 S RCE=RCE+1,RCT(RCE)=" "
"RTN","RCDPEX31",64,0)
 D  ; send MailMan message
"RTN","RCDPEX31",65,0)
 .N XMBODY,XMINSTR,XMSUBJ,XMZ
"RTN","RCDPEX31",66,0)
 .S XMSUBJ="EDI LBOX EEOB DETAIL EXCEPTION REMOVED",XMBODY="RCT",XMTO("G.RCDPE PAYMENTS")="",XMTO(DUZ)="",XMINSTR("FROM")="POSTMASTER"
"RTN","RCDPEX31",67,0)
 .D SENDMSG^XMXAPI(.5,XMSUBJ,XMBODY,.XMTO,.XMINSTR,.XMZ)
"RTN","RCDPEX31",68,0)
 ;
"RTN","RCDPEX31",69,0)
 W !,"A MailMan message has been sent to report this action.",!
"RTN","RCDPEX31",70,0)
 D PAUSE^VALM1
"RTN","RCDPEX31",71,0)
 D BLD^RCDPEX2
"RTN","RCDPEX31",72,0)
 ;
"RTN","RCDPEX31",73,0)
DELQ I $G(RCTDA),$G(RCTDA1) L -^RCY(344.4,RCTDA,1,RCTDA1,0)
"RTN","RCDPEX31",74,0)
 S VALMBCK="R"
"RTN","RCDPEX31",75,0)
 Q
"RTN","RCDPEX31",76,0)
 ;
"RTN","RCDPEX31",77,0)
TXT0(RCTDA,RCDIQ,RCXM1,RC) ; Append 0-node captioned data to array RCXM1
"RTN","RCDPEX31",78,0)
 ;
"RTN","RCDPEX31",79,0)
 N LINE,DAT,Z,Z0,Z1
"RTN","RCDPEX31",80,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",81,0)
 S RC=RC+1,RCXM1(RC)="  **ERA SUMMARY DATA**"
"RTN","RCDPEX31",82,0)
 S Z=0 F  S Z=$O(RCDIQ(344.4,RCTDA_",",Z)) Q:'Z  D   ;prca*4.5*298  need to get additional fields for display
"RTN","RCDPEX31",83,0)
 . I $G(RCDIQ(344.4,RCTDA_",",Z,"E"))="" Q
"RTN","RCDPEX31",84,0)
 . S Z0=$$GET1^DID(344.4,Z,,"LABEL")
"RTN","RCDPEX31",85,0)
 . S DAT=Z0_": "_$G(RCDIQ(344.4,RCTDA_",",Z,"E"))
"RTN","RCDPEX31",86,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",87,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",88,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",89,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",90,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",91,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",92,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",93,0)
 Q
"RTN","RCDPEX31",94,0)
 ;
"RTN","RCDPEX31",95,0)
TXT00(RCTDA,RCTDA1,RCDIQ1,RCXM1,RC) ; Extract 0-node data for file 344.41
"RTN","RCDPEX31",96,0)
 ;
"RTN","RCDPEX31",97,0)
 N RCT,LINE,DAT,Z,Z0,Z1
"RTN","RCDPEX31",98,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",99,0)
 S RC=RC+1,RCXM1(RC)="  **EEOB DETAIL DATA**",RCT=RCTDA1_","_RCTDA_","
"RTN","RCDPEX31",100,0)
 S Z=0 F  S Z=$O(RCDIQ1(344.41,RCT,Z)) Q:'Z  D   ;prca*4.5*298  need to get additional fields for display
"RTN","RCDPEX31",101,0)
 . I (Z'=.25),$G(RCDIQ1(344.41,RCT,Z,"E"))="" Q   ;prca*4.5*298  even if RECEIPT # (.25) is null, display the label
"RTN","RCDPEX31",102,0)
 . I (Z=1)!(Z=2) Q  ; Suppress display of RAW DATA and EXCEPTION LOG field - PRCA*4.5*321
"RTN","RCDPEX31",103,0)
 . S Z0=$$GET1^DID(344.41,Z,,"LABEL")
"RTN","RCDPEX31",104,0)
 . S DAT=Z0_": "_$G(RCDIQ1(344.41,RCT,Z,"E"))
"RTN","RCDPEX31",105,0)
 . ; PRCA*4.5*321 - END
"RTN","RCDPEX31",106,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",107,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",108,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",109,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",110,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",111,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",112,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",113,0)
 Q
"RTN","RCDPEX31",114,0)
 ;
"RTN","RCDPEX31",115,0)
TXT2(RCTDA,RCTDA1,RCDIQ2,RCXM1,RC) ; Extract all data for file 344.42
"RTN","RCDPEX31",116,0)
 ;
"RTN","RCDPEX31",117,0)
 N RCT,LINE,DAT,Z,Z0
"RTN","RCDPEX31",118,0)
 S LINE="",RC=+$G(RC)
"RTN","RCDPEX31",119,0)
 S RCT=RCTDA1_","_RCTDA_","
"RTN","RCDPEX31",120,0)
 S Z=0 F  S Z=$O(RCDIQ2(344.42,RCT,Z)) Q:'Z  D
"RTN","RCDPEX31",121,0)
 . I $G(RCDIQ2(344.42,RCT,Z,"E"))="" Q
"RTN","RCDPEX31",122,0)
 . S Z0=$$GET1^DID(344.42,Z,,"LABEL")
"RTN","RCDPEX31",123,0)
 . S DAT=Z0_": "_$G(RCDIQ2(344.42,RCT,Z,"E"))
"RTN","RCDPEX31",124,0)
 . I $L(DAT)>39 S:$L(LINE) RC=RC+1,RCXM1(RC)=LINE S RC=RC+1,RCXM1(RC)=DAT,LINE="" Q
"RTN","RCDPEX31",125,0)
 . I $L(LINE) D  Q:LINE=""  ; Left side exists
"RTN","RCDPEX31",126,0)
 .. I $L(LINE)+$L(DAT)>75 S RC=RC+1,RCXM1(RC)=LINE,LINE=DAT Q
"RTN","RCDPEX31",127,0)
 .. S LINE=LINE_"  "_DAT,RC=RC+1,RCXM1(RC)=LINE,LINE=""
"RTN","RCDPEX31",128,0)
 . S LINE=$E(DAT_$J("",39),1,39)
"RTN","RCDPEX31",129,0)
 I $L(LINE) S RC=RC+1,RCXM1(RC)=LINE
"RTN","RCDPEX31",130,0)
 S:RC RC=RC+1,RCXM1(RC)=" "
"RTN","RCDPEX31",131,0)
 Q
"RTN","RCDPEX31",132,0)
 ;
"RTN","RCDPEX31",133,0)
LOCK(RCTDA,RCTDA1,RCSHH) ; Attempt to lock file entry in file 344.41
"RTN","RCDPEX31",134,0)
 ; Return 1 if successful, 0 if not able to lock
"RTN","RCDPEX31",135,0)
 ; RCSHH = 1 if there should be no direct writes
"RTN","RCDPEX31",136,0)
 ;
"RTN","RCDPEX31",137,0)
 N OK
"RTN","RCDPEX31",138,0)
 S OK=1
"RTN","RCDPEX31",139,0)
 L +^RCY(344.4,RCTDA,1,RCTDA1,0):5
"RTN","RCDPEX31",140,0)
 I '$T D
"RTN","RCDPEX31",141,0)
 . I '$D(DIQUIET),'$G(RCSHH) W !,*7,"Another user is editing this entry ... please try again later" D PAUSE^VALM1
"RTN","RCDPEX31",142,0)
 . S OK=0
"RTN","RCDPEX31",143,0)
 Q OK
"RTN","RCDPEX31",144,0)
 ;
"RTN","RCDPEX31",145,0)
STORACT(RCTDA,RCTDA1,RCWHY) ; Store the detail for the action taken for
"RTN","RCDPEX31",146,0)
 ; the exception record at ^RCY(344.4,RCTDA,1,RCTDA,0)
"RTN","RCDPEX31",147,0)
 ; RCWHY(#) = lines containing the reason/explanation for the action
"RTN","RCDPEX31",148,0)
 ;   RCWHY(1) should contain the description of the action taken
"RTN","RCDPEX31",149,0)
 ;            It will be appended to the first line of the message after
"RTN","RCDPEX31",150,0)
 ;            the date and user who made the change.
"RTN","RCDPEX31",151,0)
 ;
"RTN","RCDPEX31",152,0)
 N RCDA,RCTXT,RC,Z
"RTN","RCDPEX31",153,0)
 S RCDA(1)=RCTDA,RCDA=RCTDA1
"RTN","RCDPEX31",154,0)
 S RCTXT(1)=$$FMTE^XLFDT($$NOW^XLFDT(),2)_" "_$P($G(^VA(200,+DUZ,0)),U)_" "_$G(RCWHY(1))
"RTN","RCDPEX31",155,0)
 S (RC,Z)=1
"RTN","RCDPEX31",156,0)
 F  S Z=$O(RCWHY(Z)) Q:'Z  S RC=RC+1,RCTXT(RC)=" "_RCWHY(Z)
"RTN","RCDPEX31",157,0)
 D WP^DIE(344.41,$$IENS^DILF(.RCDA),2,"A","RCTXT")
"RTN","RCDPEX31",158,0)
 Q
"RTN","RCDPEX31",159,0)
 ;
"RTN","RCDPEX32")
0^52^B55174770
"RTN","RCDPEX32",1,0)
RCDPEX32 ;ALB/TMK - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;Aug 14, 2014@16:27:32
"RTN","RCDPEX32",2,0)
 ;;4.5;Accounts Receivable;**173,249,298,304,321**;Mar 20, 1995;Build 48
"RTN","RCDPEX32",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX32",4,0)
 ;
"RTN","RCDPEX32",5,0)
EDITNUM ; Edit invalid claim # to valid, refile EOB
"RTN","RCDPEX32",6,0)
 N RC,RC0,RCDA,RCXDA,RCXDA1,RCSAVE,RCEOB,RCWARN,Q,Q0,DA,DR,DIE,DIC,DIR,DTOUT,DIRUT,X,Y,RCBILL,RCCHG,RCSUSP,RCQUIT,RCDONE
"RTN","RCDPEX32",7,0)
 D FULL^VALM1
"RTN","RCDPEX32",8,0)
 D SEL^RCDPEX3(.RCDA)
"RTN","RCDPEX32",9,0)
 G:'$O(RCDA(0)) EDITNQ
"RTN","RCDPEX32",10,0)
 ;
"RTN","RCDPEX32",11,0)
 S RC=0 F  S RC=$O(RCDA(RC)) Q:'RC  D  L -^RCY(344.4,RCXDA1,1,RCXDA,0)
"RTN","RCDPEX32",12,0)
 . S RCXDA1=+RCDA(RC),RCXDA=+$P(RCDA(RC),U,2),RCSAVE=""
"RTN","RCDPEX32",13,0)
 . I '$$LOCK^RCDPEX31(RCXDA1,RCXDA,1) D  Q
"RTN","RCDPEX32",14,0)
 .. S DIR(0)="EA",DIR("A",1)="**Selection #"_RC_" is being edited by another user - ... please try again later",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",15,0)
 . S RC0=$G(^RCY(344.4,RCXDA1,1,RCXDA,0))
"RTN","RCDPEX32",16,0)
 . I $P(RC0,U,5)="" D  Q
"RTN","RCDPEX32",17,0)
 .. S DIR(0)="EA",DIR("A",1)="The claim for selection #"_RC_" can't be edited as the bill # is not invalid",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",18,0)
 . I $P(RC0,U,9) D  Q
"RTN","RCDPEX32",19,0)
 .. S DIR(0)="EA",DIR("A",1)="The claim for selection #"_RC_" can't be edited as the claim has already",DIR("A")="been transferred to another site - PRESS RETURN TO CONTINUE" W ! D ^DIR K DIR
"RTN","RCDPEX32",20,0)
 . ;
"RTN","RCDPEX32",21,0)
 . I $D(^RCY(344.49,RCXDA1)) D
"RTN","RCDPEX32",22,0)
 .. N X
"RTN","RCDPEX32",23,0)
 .. S X=$G(^RCY(344,+$P($G(^RCY(344.49,RCXDA1,0)),U,2),0))
"RTN","RCDPEX32",24,0)
 .. W !!,*7,"Warning: EEOB Worklist entry #"_RCXDA1_$S($P(X,U)'="":" and receipt "_$P(X,U),1:"")_" exist for this EEOB"
"RTN","RCDPEX32",25,0)
 .. I X="" W !,"You should refresh the worklist entry to include the new claim #",!," before creating the receipt",!
"RTN","RCDPEX32",26,0)
 . I $P($G(^RCY(344.4,RCXDA1,0)),U,8) D
"RTN","RCDPEX32",27,0)
 .. W !,"Since the receipt for this EEOB ("_$P($G(^RCY(344,+$P($G(^RCY(344.4,RCXDA1,0)),U,8),0)),U)_") already exists"
"RTN","RCDPEX32",28,0)
 .. I '$P($G(^RCY(344,+$P($G(^RCY(344.4,RCXDA1,0)),U,8),0)),U,14) W !," and is closed, you will need to use link payment to apply the payment",!," to the correct account",! Q
"RTN","RCDPEX32",29,0)
 .. W !," you should edit the receipt and change the claim # so it posts to the",!," correct account",!
"RTN","RCDPEX32",30,0)
 . ;
"RTN","RCDPEX32",31,0)
 . I $P(RC0,U,17)="" S RCSAVE=$P(RC0,U,5)
"RTN","RCDPEX32",32,0)
 . W !,"Selection #: "_RC_$J("",5)_$P(RC0,U,5)
"RTN","RCDPEX32",33,0)
 . S (RCQUIT,RCDONE)=0
"RTN","RCDPEX32",34,0)
 . F  D  Q:RCQUIT!RCDONE
"RTN","RCDPEX32",35,0)
 .. K DIR
"RTN","RCDPEX32",36,0)
 .. S DIR("?",1)="Answer with ACCOUNTS RECEIVABLE BILL NO., or PATIENT, or DEBTOR, or"
"RTN","RCDPEX32",37,0)
 .. S DIR("?")="    TOP REFUND STATUS, or FMS TRANSMISSION DATE"
"RTN","RCDPEX32",38,0)
 .. S DIR(0)="FAO^1:15",DIR("A")="Select A/R Bill this EEOB is actually paying on: "
"RTN","RCDPEX32",39,0)
 .. D ^DIR I $D(DIRUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEX32",40,0)
 .. S DIC="^PRCA(430,",DIC(0)="EM",DIC("S")="I $D(^DGCR(399,+Y,0))" W ! D ^DIC I X="^" S RCQUIT=1 Q
"RTN","RCDPEX32",41,0)
 .. S RCSUSP=X
"RTN","RCDPEX32",42,0)
 .. I '(Y>0) D  Q:RCQUIT
"RTN","RCDPEX32",43,0)
 ... S DIR("A")="   THIS CLAIM WAS NOT FOUND IN YOUR AR.  DO YOU WANT TO CONTINUE?: "
"RTN","RCDPEX32",44,0)
 ... S DIR("B")="NO",DIR(0)="YA" D ^DIR K DIR W ! I $D(DIRUT)!$D(DTOUT) S RCQUIT=1 Q
"RTN","RCDPEX32",45,0)
 ... I Y=1 S RCBILL=0,RCBILL(1)=RCSUSP,RCWARN=0,RCDONE=1
"RTN","RCDPEX32",46,0)
 .. E  D
"RTN","RCDPEX32",47,0)
 ... S RCBILL=+Y,RCBILL(1)=$P($G(^PRCA(430,RCBILL,0)),U),RCWARN=0,RCDONE=1
"RTN","RCDPEX32",48,0)
 . Q:RCQUIT
"RTN","RCDPEX32",49,0)
 . I $P($G(^RCY(344.4,RCXDA1,0)),U,14) S RCWARN=RCWARN+1,DIR("A",RCWARN+1)=$J("",4)_"THE RECEIPT FOR THIS EEOB HAS ALREADY BEEN POSTED."
"RTN","RCDPEX32",50,0)
 . I RCBILL>0,$P($G(^PRCA(430.3,+$P($G(^PRCA(430,RCBILL,0)),U,8),0)),U,3)'=102 S RCWARN=RCWARN+1,DIR("A",RCWARN+1)=$J("",4)_"THIS IS NOT AN ACTIVE ACCOUNTS RECEIVABLE."
"RTN","RCDPEX32",51,0)
 . I RCWARN>0 D  I Y'=1 Q
"RTN","RCDPEX32",52,0)
 .. S DIR("A",1)="** WARNING"_$S(RCWARN>1:"S",1:"")_":"
"RTN","RCDPEX32",53,0)
 .. S DIR("A",RCWARN+2)=" "
"RTN","RCDPEX32",54,0)
 .. S DIR(0)="YA",DIR("A")="ARE YOU SURE YOU WANT TO FILE THIS EEOB FOR CLAIM #: "_RCBILL(1)_"?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","RCDPEX32",55,0)
 .. ;
"RTN","RCDPEX32",56,0)
 . ; File EOB for new claim #
"RTN","RCDPEX32",57,0)
 . K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR")
"RTN","RCDPEX32",58,0)
 . S Q=0 F  S Q=$O(^RCY(344.4,RCXDA1,1,RCXDA,1,Q)) Q:'Q  S Q0=$G(^(Q,0)) D
"RTN","RCDPEX32",59,0)
 .. I $P(Q0,U)["835ERA" S ^TMP($J,"RCDPEOB","HDR")=Q0
"RTN","RCDPEX32",60,0)
 .. I $P(Q0,U,2)=$P(RC0,U,5) S $P(Q0,U,2)=RCBILL(1)
"RTN","RCDPEX32",61,0)
 .. S ^TMP($J,"RCDP-EOB",1,Q,0)=Q0
"RTN","RCDPEX32",62,0)
 . S ^TMP($J,"RCDP-EOB",1,.5,0)="835ERA"
"RTN","RCDPEX32",63,0)
 . S RCEOB=0 I RCBILL>0 S RCEOB=$$DUP^IBCEOB("^TMP("_$J_",""RCDP-EOB"",1)",RCBILL) ; IA 4042
"RTN","RCDPEX32",64,0)
 . K ^TMP($J,"RCDP-EOB",1,.5,0)
"RTN","RCDPEX32",65,0)
 . I RCEOB D  Q
"RTN","RCDPEX32",66,0)
 .. N RCWHY S RCWHY(1)="EEOB already found on file while trying to change claim # and filing into IB"
"RTN","RCDPEX32",67,0)
 .. D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",68,0)
 .. S RCCHG=1,DA(1)=RCXDA1,DA=RCXDA D CHGED(.DA,RCEOB,RCSAVE,.RCBILL)
"RTN","RCDPEX32",69,0)
 .. S DIR(0)="E"
"RTN","RCDPEX32",70,0)
 .. S DIR("A",1)="EEOB detail is already on file for "_RCBILL(1)_" - Exception removed",DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",71,0)
 . ;
"RTN","RCDPEX32",72,0)
 . ; Add stub rec to 361.1 if not there
"RTN","RCDPEX32",73,0)
 . I RCBILL>0 S RCEOB=+$$ADD3611^IBCEOB(+$P($G(^RCY(344.4,RCXDA1,0)),U,12),"","",RCBILL,1,"^TMP("_$J_",""RCDP-EOB"",1)") ; IA 4042
"RTN","RCDPEX32",74,0)
 . ;
"RTN","RCDPEX32",75,0)
 . I RCEOB<0 D  Q
"RTN","RCDPEX32",76,0)
 .. N RCWHY S RCWHY(1)="Error encountered trying to change claim # and file into IB"
"RTN","RCDPEX32",77,0)
 .. D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",78,0)
 .. S DIR("A")="EA",DIR("A",1)="Error - EEOB detail not added to IB for bill "_RCBILL(1),DIR("A")="PRESS RETURN TO CONTINUE" D ^DIR K DIR
"RTN","RCDPEX32",79,0)
 . ;
"RTN","RCDPEX32",80,0)
 . ; Update EOB in file 361.1
"RTN","RCDPEX32",81,0)
 . ; Call needs ^TMP arrays: $J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPEX32",82,0)
 . I RCEOB>0 D
"RTN","RCDPEX32",83,0)
 .. D UPD3611^IBCEOB(RCEOB,1,1) ; IA 4042
"RTN","RCDPEX32",84,0)
 .. ; errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPEX32",85,0)
 .. I $O(^TMP("RCDPERR-EOB",$J,0)) D
"RTN","RCDPEX32",86,0)
 ... D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB") ; Adds error msgs to IB file 361.1 ; IA 4042
"RTN","RCDPEX32",87,0)
 . ;
"RTN","RCDPEX32",88,0)
 . S RCCHG=1
"RTN","RCDPEX32",89,0)
 . N RCWHY S RCWHY(1)="EEOB claim # changed and filed into IB under new claim #"
"RTN","RCDPEX32",90,0)
 . D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX32",91,0)
 . S DA(1)=RCXDA1,DA=RCXDA
"RTN","RCDPEX32",92,0)
 . D CHGED(.DA,RCEOB,RCSAVE,.RCBILL)
"RTN","RCDPEX32",93,0)
 . S DIE="^RCY(344.4,"_DA(1)_",1,",DR="1///@" D ^DIE
"RTN","RCDPEX32",94,0)
 . D ^DIE
"RTN","RCDPEX32",95,0)
 . W !!,"EEOB Filed. "_$S(RCBILL>0:"Its detail may be viewed using Third Party Joint Inquiry.",1:"")
"RTN","RCDPEX32",96,0)
 . ; Check if auto-post candidate
"RTN","RCDPEX32",97,0)
 . N AUTOPOST
"RTN","RCDPEX32",98,0)
 . S AUTOPOST=$$AUTOCHK2^RCDPEAP1(RCXDA1,0) ; added parameter - PRCA*4.5*321
"RTN","RCDPEX32",99,0)
 . I AUTOPOST D
"RTN","RCDPEX32",100,0)
 .. D SETSTA^RCDPEAP(RCXDA1,0,"Exceptions: Marked as Auto-Post Candidate")
"RTN","RCDPEX32",101,0)
 .. W !,"ERA has been successfully Marked as an Auto-Post CANDIDATE"
"RTN","RCDPEX32",102,0)
 . I 'AUTOPOST D
"RTN","RCDPEX32",103,0)
 .. D AUDITLOG^RCDPEAP(RCXDA1,"","Exceptions: Not Marked as Auto-Post Candidate-"_$P(AUTOPOST,U,2))
"RTN","RCDPEX32",104,0)
 .. W !,"ERA was NOT Marked as an Auto-Post CANDIDATE - ",$P(AUTOPOST,U,2)
"RTN","RCDPEX32",105,0)
 . ;
"RTN","RCDPEX32",106,0)
 . K DIR
"RTN","RCDPEX32",107,0)
 . S DIR("A")="PRESS RETURN TO CONTINUE ",DIR(0)="EA"
"RTN","RCDPEX32",108,0)
 . D ^DIR K DIR
"RTN","RCDPEX32",109,0)
 . S VALMBG=1
"RTN","RCDPEX32",110,0)
 ;
"RTN","RCDPEX32",111,0)
EDITNQ I $G(RCCHG) D BLD^RCDPEX2
"RTN","RCDPEX32",112,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX32",113,0)
 S VALMBCK="R"
"RTN","RCDPEX32",114,0)
 Q
"RTN","RCDPEX32",115,0)
 ;
"RTN","RCDPEX32",116,0)
CHGED(DA,RCEOB,RCSAVE,RCBILL) ;  Update Invalid Bill # for EOB
"RTN","RCDPEX32",117,0)
 ; DA = DA and DA(1) to use for DIE call
"RTN","RCDPEX32",118,0)
 ; RCEOB = the ien of the entry in file 361.1
"RTN","RCDPEX32",119,0)
 ; RCSAVE = the free text of the original bill #
"RTN","RCDPEX32",120,0)
 ; RCBILL = Array containing Bill Information
"RTN","RCDPEX32",121,0)
 N DIE,DR,X,Y,INVBILL
"RTN","RCDPEX32",122,0)
 S INVBILL="@" I +$G(RCBILL)=0 S INVBILL=$G(RCBILL(1))
"RTN","RCDPEX32",123,0)
 S DIE="^RCY(344.4,"_DA(1)_",1,",DR=".05///"_INVBILL_";.02////"_RCEOB_";.13////1"_$S(RCSAVE'="":";.17////"_RCSAVE,1:"")_";.07///@" D ^DIE
"RTN","RCDPEX32",124,0)
 Q
"RTN","RCDPEX32",125,0)
 ;
"RTN","RCDPEX32",126,0)
EDITRXC ; Edit pharmacy comment - PRCA*4.5*298
"RTN","RCDPEX32",127,0)
 N DA,DIC,DIE,DIR,DR,Q,Q0,RC,RC0,RCBILL,RCDA,RCDSEL,RCEOB,RCSAVE,RCWARN,RCXDA,RCXDA1,X,Y
"RTN","RCDPEX32",128,0)
 D FULL^VALM1
"RTN","RCDPEX32",129,0)
 ; PRCA*4.5*304 - Pharmacy claim selection based coming from Exception or APAR screen 
"RTN","RCDPEX32",130,0)
 I '$D(RCAPAR) D SEL^RCDPEX3(.RCDA)
"RTN","RCDPEX32",131,0)
 I $D(RCAPAR) D SEL^RCDPEX3(.RCDA,1)
"RTN","RCDPEX32",132,0)
 ;Only allow action if the selected exception has an ECME number
"RTN","RCDPEX32",133,0)
 S RCDSEL=$O(RCDA(0)) D:RCDSEL
"RTN","RCDPEX32",134,0)
 .N IENS,RCRXNO,RCRLSDT   ; IENS for FileMan, Rx number, Rx release date
"RTN","RCDPEX32",135,0)
 .S IENS=$P(RCDA(RCDSEL),U,2)_","_$P(RCDA(RCDSEL),U,1)_","
"RTN","RCDPEX32",136,0)
 .S RCRXNO=$$GET1^DIQ(344.41,IENS,.24) I RCRXNO=""  D  Q
"RTN","RCDPEX32",137,0)
 ..W !,"Comment not allowed. This is not a pharmacy exception." D WAIT^VALM1
"RTN","RCDPEX32",138,0)
 .;
"RTN","RCDPEX32",139,0)
 .; IA #4701, RELEASE DATE for the prescription/fill
"RTN","RCDPEX32",140,0)
 .S RCRLSDT=$$RXRLDT^PSOBPSUT(RCRXNO)   ; get release date
"RTN","RCDPEX32",141,0)
 .I RCRLSDT]"" D  Q
"RTN","RCDPEX32",142,0)
 ..W !!,"Release Date: "_$$FMTE^XLFDT(RCRLSDT)
"RTN","RCDPEX32",143,0)
 ..W !,"Comment not allowed for Rx with Release Date." D WAIT^VALM1
"RTN","RCDPEX32",144,0)
 .;
"RTN","RCDPEX32",145,0)
 .;Display sequence and INVALID BILL NUMBER
"RTN","RCDPEX32",146,0)
 .W !,"Selection #: ",RCDSEL,"     ",$$GET1^DIQ(344.41,IENS,.05)
"RTN","RCDPEX32",147,0)
 .;Allow edit of pharmacy comment
"RTN","RCDPEX32",148,0)
 .S DIE="^RCY(344.4,"_$P(RCDA(RCDSEL),U,1)_",1,",DA=$P(RCDA(RCDSEL),U,2),DA(1)=$P(RCDA(RCDSEL),U,1),DR="9.01Comment" D ^DIE Q:$D(DUOUT)!$D(DTOUT)
"RTN","RCDPEX32",149,0)
 .D WAIT^VALM1,BLD^RCDPEX2
"RTN","RCDPEX32",150,0)
 ;
"RTN","RCDPEX32",151,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX32",152,0)
 S VALMBCK="R"
"RTN","RCDPEX32",153,0)
 Q
"RTN","RCDPEX4")
0^71^B12198277
"RTN","RCDPEX4",1,0)
RCDPEX4 ;ALB/DRF - ELECTRONIC EOB EXCEPTION PROCESSING - FILE 344.4 ;Jun 06, 2014@19:11:19
"RTN","RCDPEX4",2,0)
 ;;4.5;Accounts Receivable;**298,321**;Mar 20, 1995;Build 48
"RTN","RCDPEX4",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPEX4",4,0)
 ;Call to $$RXBIL^IBNCPDPU via private IA #4435
"RTN","RCDPEX4",5,0)
 ;
"RTN","RCDPEX4",6,0)
 ;Cycle through the exception list looking for entries with an ECME number:
"RTN","RCDPEX4",7,0)
EN N ARRAY,ECME,EOB,ERA,RCBILL,RCER
"RTN","RCDPEX4",8,0)
 S RCER=0 F  S RCER=$O(^RCY(344.4,"AEXC",RCER)) Q:'RCER  D
"RTN","RCDPEX4",9,0)
 .S ERA="" F  S ERA=$O(^RCY(344.4,"AEXC",RCER,ERA)) Q:'ERA  D
"RTN","RCDPEX4",10,0)
 ..S EOB="" F  S EOB=$O(^RCY(344.4,"AEXC",RCER,ERA,EOB)) Q:'EOB  D
"RTN","RCDPEX4",11,0)
 ...;Ignore the exception if no ECME number is present
"RTN","RCDPEX4",12,0)
 ...S ECME=$P($G(^RCY(344.4,ERA,1,EOB,4)),U,2) Q:ECME=""
"RTN","RCDPEX4",13,0)
 ...;Lock zero node of ERA DETAIL
"RTN","RCDPEX4",14,0)
 ...L +^RCY(344.4,ERA,1,EOB,0):5 Q:'$T
"RTN","RCDPEX4",15,0)
 ...;Check for a matching bill in #399 (Rx Released) and if found remove error from exception list
"RTN","RCDPEX4",16,0)
 ...K ARRAY S ARRAY("ECME")=ECME,ARRAY("FILLDT")=$$SDATE(ERA,EOB) ; PRCA*4.5*326
"RTN","RCDPEX4",17,0)
 ...S RCBILL=$$RXBIL^IBNCPDPU(.ARRAY)     ; DBIA 4435
"RTN","RCDPEX4",18,0)
 ...I RCBILL>0 S RCBILL(1)=$P($G(^PRCA(430,RCBILL,0)),U) D REMOVE(ERA,EOB,.RCBILL,ECME)
"RTN","RCDPEX4",19,0)
 ...;Unlock zero node of ERA DETAIL
"RTN","RCDPEX4",20,0)
 ...L -^RCY(344.4,ERA,1,EOB,0)
"RTN","RCDPEX4",21,0)
 Q
"RTN","RCDPEX4",22,0)
 ;
"RTN","RCDPEX4",23,0)
REMOVE(RCXDA1,RCXDA,RCBILL,RCSAVE) ;Remove from exception list and file EEOB against matched claim
"RTN","RCDPEX4",24,0)
 ;RCXDA1 - ERA IEN
"RTN","RCDPEX4",25,0)
 ;RCXDA - ERA DETAIL IEN
"RTN","RCDPEX4",26,0)
 ;RCBILL - CLAIM array for released Rx
"RTN","RCDPEX4",27,0)
 ;RCSAVE - ORIGINAL CLAIM from ERA (ECME #)
"RTN","RCDPEX4",28,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR")
"RTN","RCDPEX4",29,0)
 N DA,Q,Q0,RC0,RCEOB,DIE,DR
"RTN","RCDPEX4",30,0)
 S RC0=$G(^RCY(344.4,RCXDA1,1,RCXDA,0))
"RTN","RCDPEX4",31,0)
 S Q=0 F  S Q=$O(^RCY(344.4,RCXDA1,1,RCXDA,1,Q)) Q:'Q  S Q0=$G(^(Q,0)) D
"RTN","RCDPEX4",32,0)
 .I $P(Q0,U)["835ERA" S ^TMP($J,"RCDPEOB","HDR")=Q0
"RTN","RCDPEX4",33,0)
 .I $P(Q0,U,2)=$P(RC0,U,5) S $P(Q0,U,2)=RCBILL(1)
"RTN","RCDPEX4",34,0)
 .S ^TMP($J,"RCDP-EOB",1,Q,0)=Q0
"RTN","RCDPEX4",35,0)
 S ^TMP($J,"RCDP-EOB",1,.5,0)="835ERA"
"RTN","RCDPEX4",36,0)
 S RCEOB=$$DUP^IBCEOB("^TMP("_$J_",""RCDP-EOB"",1)",RCBILL) ; IA 4042
"RTN","RCDPEX4",37,0)
 K ^TMP($J,"RCDP-EOB",1,.5,0)
"RTN","RCDPEX4",38,0)
 I RCEOB D  Q
"RTN","RCDPEX4",39,0)
 .N RCWHY S RCWHY(1)="EEOB already found on file while trying to change claim # and filing into IB"
"RTN","RCDPEX4",40,0)
 .D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX4",41,0)
 .S DA(1)=RCXDA1,DA=RCXDA D CHGED(.DA,RCEOB,RCSAVE)
"RTN","RCDPEX4",42,0)
 ;
"RTN","RCDPEX4",43,0)
 ; Add stub rec to 361.1 if not there
"RTN","RCDPEX4",44,0)
 S RCEOB=+$$ADD3611^IBCEOB(+$P($G(^RCY(344.4,RCXDA1,0)),U,12),"","",RCBILL,1,"^TMP("_$J_",""RCDP-EOB"",1)") ; IA 4042
"RTN","RCDPEX4",45,0)
 ;
"RTN","RCDPEX4",46,0)
 I RCEOB<0 D  Q
"RTN","RCDPEX4",47,0)
 .N RCWHY S RCWHY(1)="Error encountered trying to change claim # and file into IB"
"RTN","RCDPEX4",48,0)
 .D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX4",49,0)
 ;
"RTN","RCDPEX4",50,0)
 ; Update EOB in file 361.1
"RTN","RCDPEX4",51,0)
 ; Call needs ^TMP arrays: $J,"RCDPEOB","HDR" and $J,"RCDP-EOB"
"RTN","RCDPEX4",52,0)
 D UPD3611^IBCEOB(RCEOB,1,1) ; IA 4042
"RTN","RCDPEX4",53,0)
 ; errors in ^TMP("RCDPERR-EOB",$J
"RTN","RCDPEX4",54,0)
 I $O(^TMP("RCDPERR-EOB",$J,0)) D
"RTN","RCDPEX4",55,0)
 .D ERRUPD^IBCEOB(RCEOB,"RCDPERR-EOB") ; Adds error msgs to IB file 361.1 ; IA 4042
"RTN","RCDPEX4",56,0)
 ;
"RTN","RCDPEX4",57,0)
 N RCWHY S RCWHY(1)="EEOB claim # changed and filed into IB under new claim #"
"RTN","RCDPEX4",58,0)
 D STORACT^RCDPEX31(RCXDA1,RCXDA,.RCWHY)
"RTN","RCDPEX4",59,0)
 S DA(1)=RCXDA1,DA=RCXDA
"RTN","RCDPEX4",60,0)
 D CHGED(.DA,RCEOB,RCSAVE)
"RTN","RCDPEX4",61,0)
 S DIE="^RCY(344.4,"_DA(1)_",1,",DR="1///@" D ^DIE
"RTN","RCDPEX4",62,0)
 ;
"RTN","RCDPEX4",63,0)
 K ^TMP($J,"RCDP-EOB"),^TMP($J,"RCDPEOB","HDR"),^TMP("RCDPERR-EOB",$J)
"RTN","RCDPEX4",64,0)
 Q
"RTN","RCDPEX4",65,0)
 ;
"RTN","RCDPEX4",66,0)
CHGED(DA,RCEOB,RCSAVE) ;  Change bad bill # to good one for EOB
"RTN","RCDPEX4",67,0)
 ; DA = DA and DA(1) to use for DIE call
"RTN","RCDPEX4",68,0)
 ; RCEOB = the ien of the entry in file 361.1
"RTN","RCDPEX4",69,0)
 ; RCSAVE = the free text of the original bill #
"RTN","RCDPEX4",70,0)
 N DIE,DR,X,Y
"RTN","RCDPEX4",71,0)
 S DIE="^RCY(344.4,"_DA(1)_",1,",DR=".05///@;.02////"_RCEOB_";.13////1"_$S(RCSAVE'="":";.17////"_RCSAVE,1:"")_";.07///@" D ^DIE
"RTN","RCDPEX4",72,0)
 Q
"RTN","RCDPEX4",73,0)
 ;
"RTN","RCDPEX4",74,0)
 ; BEGIN PRCA*4.5*321
"RTN","RCDPEX4",75,0)
SDATE(ERA,LINE) ;Return Service Date for the ERA
"RTN","RCDPEX4",76,0)
 ; INPUT
"RTN","RCDPEX4",77,0)
 ;       ERA = ERA number
"RTN","RCDPEX4",78,0)
 ;       LINE = ERA line
"RTN","RCDPEX4",79,0)
 ; OUTPUT 
"RTN","RCDPEX4",80,0)
 ;       SDATE = Service date   
"RTN","RCDPEX4",81,0)
 ;Scan RAW DATA multiple SERVICE DATE is piece 19 of record type 40
"RTN","RCDPEX4",82,0)
 N SUB,REC,SDATE,STDAT
"RTN","RCDPEX4",83,0)
 S SUB=0,SDATE="",STDAT=""
"RTN","RCDPEX4",84,0)
 F  S SUB=$O(^RCY(344.4,ERA,1,LINE,1,SUB)) Q:'SUB  D  Q:SDATE]""
"RTN","RCDPEX4",85,0)
 .S REC=$G(^RCY(344.4,ERA,1,LINE,1,SUB,0))
"RTN","RCDPEX4",86,0)
 .I +REC=5 S STDAT=$P(REC,U,9) Q
"RTN","RCDPEX4",87,0)
 .I +REC=40 S SDATE=$P(REC,U,19)
"RTN","RCDPEX4",88,0)
 ;If no service date use statement date
"RTN","RCDPEX4",89,0)
 I 'SDATE,STDAT S SDATE=STDAT
"RTN","RCDPEX4",90,0)
 Q SDATE
"RTN","RCDPEX4",91,0)
 ; END PRCA*4.5*321
"RTN","RCDPLPL1")
0^12^B36617409
"RTN","RCDPLPL1",1,0)
RCDPLPL1 ;WISC/RFJ/PJH - link payments listmanager options ;5/25/11 2:53pm
"RTN","RCDPLPL1",2,0)
 ;;4.5;Accounts Receivable;**114,148,153,208,269,304,321**;Mar 20, 1995;Build 48
"RTN","RCDPLPL1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPL1",4,0)
 Q
"RTN","RCDPLPL1",5,0)
 ;
"RTN","RCDPLPL1",6,0)
CHKTRACE ;EP Protocol action - RCDP LINK PAYMENTS SEARCH CHECK
"RTN","RCDPLPL1",7,0)
 ; Ask to search by check # or trace #
"RTN","RCDPLPL1",8,0)
 N DIR,X,Y
"RTN","RCDPLPL1",9,0)
 D FULL^VALM1
"RTN","RCDPLPL1",10,0)
 S DIR("A")="SEARCH BY (C)HECK OR (T)RACE #?: "
"RTN","RCDPLPL1",11,0)
 S DIR(0)="SA^C:CHECK;T:TRACE",DIR("B")="CHECK"
"RTN","RCDPLPL1",12,0)
 W ! D ^DIR K DIR
"RTN","RCDPLPL1",13,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","RCDPLPL1",14,0)
 I Y="C" D  Q
"RTN","RCDPLPL1",15,0)
 . D FINDCHEK
"RTN","RCDPLPL1",16,0)
 I Y="T" D  Q
"RTN","RCDPLPL1",17,0)
 . D FINDTRAC
"RTN","RCDPLPL1",18,0)
 Q
"RTN","RCDPLPL1",19,0)
 ;
"RTN","RCDPLPL1",20,0)
FINDCHEK ; Find a specific check used for payments
"RTN","RCDPLPL1",21,0)
 D FULL^VALM1
"RTN","RCDPLPL1",22,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",23,0)
 ;
"RTN","RCDPLPL1",24,0)
 N RCCHECK,RCTYPE
"RTN","RCDPLPL1",25,0)
 K RCFCHECK,RCFCREDT,RCFTRACE
"RTN","RCDPLPL1",26,0)
 W !
"RTN","RCDPLPL1",27,0)
 S RCCHECK=$$ASKCHEK I RCCHECK=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",28,0)
 ;
"RTN","RCDPLPL1",29,0)
 S RCTYPE=$$ASKTYPE I RCTYPE=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",30,0)
 S RCFCHECK=RCCHECK_"^"_RCTYPE
"RTN","RCDPLPL1",31,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",32,0)
 Q
"RTN","RCDPLPL1",33,0)
 ;
"RTN","RCDPLPL1",34,0)
FINDTRAC ; Find a specific trace # used for EFT/ERA payments
"RTN","RCDPLPL1",35,0)
 D FULL^VALM1
"RTN","RCDPLPL1",36,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",37,0)
 ;
"RTN","RCDPLPL1",38,0)
 N RCTRACE,RCTYPE
"RTN","RCDPLPL1",39,0)
 K RCFTRACE,RCFCREDT,RCFCHECK
"RTN","RCDPLPL1",40,0)
 W !
"RTN","RCDPLPL1",41,0)
 S RCTRACE=$$ASKTRACE I RCTRACE=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",42,0)
 ;
"RTN","RCDPLPL1",43,0)
 S RCTYPE=$$ASKTYPE I RCTYPE=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",44,0)
 S RCFTRACE=RCTRACE_"^"_RCTYPE
"RTN","RCDPLPL1",45,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",46,0)
 Q
"RTN","RCDPLPL1",47,0)
 ;
"RTN","RCDPLPL1",48,0)
 ;
"RTN","RCDPLPL1",49,0)
FINDCRED ;EP Protocol Action -  RCDP LINK PAYMENTS SEARCH CREDIT
"RTN","RCDPLPL1",50,0)
 ; Find a specific credit card used for payments
"RTN","RCDPLPL1",51,0)
 D FULL^VALM1
"RTN","RCDPLPL1",52,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",53,0)
 ;
"RTN","RCDPLPL1",54,0)
 N RCCREDT,RCTYPE
"RTN","RCDPLPL1",55,0)
 K RCFCHECK,RCFCREDT,RCFTRACE
"RTN","RCDPLPL1",56,0)
 W !
"RTN","RCDPLPL1",57,0)
 S RCCREDT=$$ASKCRED I RCCREDT=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",58,0)
 ;
"RTN","RCDPLPL1",59,0)
 S RCTYPE=$$ASKTYPE I RCTYPE=-1 D INIT^RCDPLPLM Q
"RTN","RCDPLPL1",60,0)
 S RCFCREDT=RCCREDT_"^"_RCTYPE
"RTN","RCDPLPL1",61,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",62,0)
 Q
"RTN","RCDPLPL1",63,0)
 ;
"RTN","RCDPLPL1",64,0)
 ;
"RTN","RCDPLPL1",65,0)
ACCOUNT ;EP Protocol Action - RCDP LINK PAYMENTS ACCOUNT PROFILE
"RTN","RCDPLPL1",66,0)
 ; Account profile
"RTN","RCDPLPL1",67,0)
 D FULL^VALM1
"RTN","RCDPLPL1",68,0)
 D ACCTPROF^RCDPAPLM
"RTN","RCDPLPL1",69,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",70,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",71,0)
 ;  fast exit
"RTN","RCDPLPL1",72,0)
 I $G(RCDPFXIT) S VALMBCK="Q"
"RTN","RCDPLPL1",73,0)
 Q
"RTN","RCDPLPL1",74,0)
 ;
"RTN","RCDPLPL1",75,0)
 ;
"RTN","RCDPLPL1",76,0)
RECEIPT ;EP Protocol Action - RCDP LINK PAYMENTS RECEIPT PROFILE
"RTN","RCDPLPL1",77,0)
 ; Receipt profile
"RTN","RCDPLPL1",78,0)
 D FULL^VALM1
"RTN","RCDPLPL1",79,0)
 D RECTPROF^RCDPRPLM
"RTN","RCDPLPL1",80,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",81,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",82,0)
 I $G(RCDPFXIT) S VALMBCK="Q"
"RTN","RCDPLPL1",83,0)
 Q
"RTN","RCDPLPL1",84,0)
 ;
"RTN","RCDPLPL1",85,0)
CLEARSUS ;EP Protocol action - RCDP LINK PAYMENTS CLEAR SUSPENSE
"RTN","RCDPLPL1",86,0)
 ; Flag a payment as being cleared from suspense
"RTN","RCDPLPL1",87,0)
 D FULL^VALM1
"RTN","RCDPLPL1",88,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",89,0)
 ;
"RTN","RCDPLPL1",90,0)
 W !!,"This option will allow you to enter the FMS Document Number used"
"RTN","RCDPLPL1",91,0)
 W !,"to clear the payment from the suspense account in FMS.  Once an"
"RTN","RCDPLPL1",92,0)
 W !,"FMS Document Number is entered, the payment will no longer appear"
"RTN","RCDPLPL1",93,0)
 W !,"on the list as Unlinked.",!
"RTN","RCDPLPL1",94,0)
 N INDEX,RCPAY,RCRECTDA,RCTRANDA
"RTN","RCDPLPL1",95,0)
 S INDEX=$$SELPAY
"RTN","RCDPLPL1",96,0)
 I INDEX D
"RTN","RCDPLPL1",97,0)
 .   S RCPAY=$G(^TMP("RCDPLPLM",$J,"IDX",INDEX,INDEX))
"RTN","RCDPLPL1",98,0)
 .   S RCRECTDA=+$P(RCPAY,"^"),RCTRANDA=+$P(RCPAY,"^",2)
"RTN","RCDPLPL1",99,0)
 I 'INDEX D
"RTN","RCDPLPL1",100,0)
 .   W ! S RCRECTDA=+$$SELRECT^RCDPUREC(0,0) I RCRECTDA<1 Q
"RTN","RCDPLPL1",101,0)
 .   S RCTRANDA=+$$SELTRAN^RCDPURET(RCRECTDA) I RCTRANDA<1 S RCTRANDA=0
"RTN","RCDPLPL1",102,0)
 I '$G(RCRECTDA)!('$G(RCTRANDA)) S VALMBCK="R" Q
"RTN","RCDPLPL1",103,0)
 ;
"RTN","RCDPLPL1",104,0)
 W !!,"                   Receipt: ",$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCDPLPL1",105,0)
 W !,"               Transaction: ",RCTRANDA
"RTN","RCDPLPL1",106,0)
 W !,"  Unapplied Deposit Number: ",$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),"^",5)
"RTN","RCDPLPL1",107,0)
 D EDITFMS^RCDPURET(RCRECTDA,RCTRANDA,"")
"RTN","RCDPLPL1",108,0)
 ;
"RTN","RCDPLPL1",109,0)
 ;PRCA*4.5*304 Force a comment and update audit Log
"RTN","RCDPLPL1",110,0)
 ;ask for comment
"RTN","RCDPLPL1",111,0)
 D ADDCMT(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL1",112,0)
 ;
"RTN","RCDPLPL1",113,0)
 ;If the CR document was filed, update the Audit Log and suspense status
"RTN","RCDPLPL1",114,0)
 I $P($G(^RCY(344,RCRECTDA,1,RCTRANDA,2)),U,6)'="" D
"RTN","RCDPLPL1",115,0)
 . D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"R")
"RTN","RCDPLPL1",116,0)
 . D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"R")
"RTN","RCDPLPL1",117,0)
 ;end PRCA*4.5*304
"RTN","RCDPLPL1",118,0)
 ;
"RTN","RCDPLPL1",119,0)
 S VALMBCK="R"
"RTN","RCDPLPL1",120,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL1",121,0)
 Q
"RTN","RCDPLPL1",122,0)
 ;
"RTN","RCDPLPL1",123,0)
SELPAY() ; Select a payment from the form list
"RTN","RCDPLPL1",124,0)
 N VALMBG,VALMLST
"RTN","RCDPLPL1",125,0)
 ;  if no payments, quit
"RTN","RCDPLPL1",126,0)
 I '$O(^TMP("RCDPLPLM",$J,"IDX",0)) S VALMSG="There are NO payments on the form to select." Q 0
"RTN","RCDPLPL1",127,0)
 ;
"RTN","RCDPLPL1",128,0)
 ;  if only one payment, select that one automatically
"RTN","RCDPLPL1",129,0)
 I '$O(^TMP("RCDPLPLM",$J,"IDX",1)) Q 1
"RTN","RCDPLPL1",130,0)
 ;
"RTN","RCDPLPL1",131,0)
 ;  select the entry from the list
"RTN","RCDPLPL1",132,0)
 ;  if not on first screen, make sure selection begins with 1
"RTN","RCDPLPL1",133,0)
 S VALMBG=1
"RTN","RCDPLPL1",134,0)
 ;  if not on last screen, make sure selection ends with last
"RTN","RCDPLPL1",135,0)
 S VALMLST=$O(^TMP("RCDPLPLM",$J,"IDX",999999999),-1)
"RTN","RCDPLPL1",136,0)
 D EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","RCDPLPL1",137,0)
 Q $O(VALMY(0))
"RTN","RCDPLPL1",138,0)
 ;
"RTN","RCDPLPL1",139,0)
ASKCHEK() ; Ask the check number
"RTN","RCDPLPL1",140,0)
 N DIR,X,Y
"RTN","RCDPLPL1",141,0)
 S DIR(0)="FAO^1:50"
"RTN","RCDPLPL1",142,0)
 S DIR("A")="Enter the Check Number to Search for: "
"RTN","RCDPLPL1",143,0)
 S DIR("?")="Enter the check number from 1 to 50 characters free text."
"RTN","RCDPLPL1",144,0)
 D ^DIR
"RTN","RCDPLPL1",145,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL1",146,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCDPLPL1",147,0)
 ;
"RTN","RCDPLPL1",148,0)
ASKTRACE() ; Ask the e-payments trace number
"RTN","RCDPLPL1",149,0)
 N DIR,X,Y
"RTN","RCDPLPL1",150,0)
 S DIR(0)="FAO^1:50"
"RTN","RCDPLPL1",151,0)
 S DIR("A")="Enter the e-Payments Trace Number to Search for: "
"RTN","RCDPLPL1",152,0)
 S DIR("?")="Enter the trace number from 1 to 50 characters free text."
"RTN","RCDPLPL1",153,0)
 D ^DIR
"RTN","RCDPLPL1",154,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL1",155,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCDPLPL1",156,0)
 ;
"RTN","RCDPLPL1",157,0)
ASKCRED() ; Ask the credit card number
"RTN","RCDPLPL1",158,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPLPL1",159,0)
 S DIR(0)="NAO^0:9999999999999999"
"RTN","RCDPLPL1",160,0)
 S DIR("A")="Enter the Credit Card Number to Search for: "
"RTN","RCDPLPL1",161,0)
 S DIR("?")="Enter the check card number from 1 to 16 numbers."
"RTN","RCDPLPL1",162,0)
 D ^DIR
"RTN","RCDPLPL1",163,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL1",164,0)
 Q $S(Y'="":Y,1:-1)
"RTN","RCDPLPL1",165,0)
 ;
"RTN","RCDPLPL1",166,0)
ASKTYPE() ; Ask the type of match
"RTN","RCDPLPL1",167,0)
 N DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPLPL1",168,0)
 S DIR(0)="SAO^1:Exact Match;2:Contains;"
"RTN","RCDPLPL1",169,0)
 S DIR("A")="Type of Match: "
"RTN","RCDPLPL1",170,0)
 S DIR("B")="Contains"
"RTN","RCDPLPL1",171,0)
 D ^DIR
"RTN","RCDPLPL1",172,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL1",173,0)
 Q $S(Y=1:"EQUAL TO",Y=2:"CONTAINING",1:-1)
"RTN","RCDPLPL1",174,0)
 ;
"RTN","RCDPLPL1",175,0)
 ;PRCA*4.5*304
"RTN","RCDPLPL1",176,0)
ADDCMT(RCRECTDA,RCTRANDA)   ; Ask for a comment for the suspense entry
"RTN","RCDPLPL1",177,0)
 ;
"RTN","RCDPLPL1",178,0)
 N DA,DIDEL,DIE,DIR,DIRUT,DIROUT,DR,DTOUT,DUOUT,RCDCMT,X,Y
"RTN","RCDPLPL1",179,0)
 S RCDCMT=""
"RTN","RCDPLPL1",180,0)
 F  D  Q:RCDCMT'=""
"RTN","RCDPLPL1",181,0)
 . S Y=$$COM^RCDPECH ; PRCA*4.5*321
"RTN","RCDPLPL1",182,0)
 . ;strip all leading and trailing spaces
"RTN","RCDPLPL1",183,0)
 . S Y=$$TRIM^XLFSTR(Y)
"RTN","RCDPLPL1",184,0)
 . I (Y="")!(Y=-1) D  Q
"RTN","RCDPLPL1",185,0)
 . . W !,"A comment is required when changing the status of an item in Suspense.  Please try again."
"RTN","RCDPLPL1",186,0)
 . S RCDCMT=Y
"RTN","RCDPLPL1",187,0)
 ;
"RTN","RCDPLPL1",188,0)
 ; Update the comment field
"RTN","RCDPLPL1",189,0)
 S DR="1.02////"_RCDCMT
"RTN","RCDPLPL1",190,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL1",191,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL1",192,0)
 D ^DIE
"RTN","RCDPLPL1",193,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL1",194,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPLPL1",195,0)
 D AUDIT^RCDPECH(RCRECTDA,RCTRANDA,"","")
"RTN","RCDPLPL1",196,0)
 Q
"RTN","RCDPLPL3")
0^36^B59761517
"RTN","RCDPLPL3",1,0)
RCDPLPL3 ;WISC/RFJ - link payments listmanager options (link payment) ;1 Jun 00
"RTN","RCDPLPL3",2,0)
 ;;4.5;Accounts Receivable;**153,304,301,321**;Mar 20, 1995;Build 48
"RTN","RCDPLPL3",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPL3",4,0)
 Q
"RTN","RCDPLPL3",5,0)
 ;
"RTN","RCDPLPL3",6,0)
 ;
"RTN","RCDPLPL3",7,0)
LINKPAY ;  link a payment to an account
"RTN","RCDPLPL3",8,0)
 N DA,DIR,DIRUT,DIROUT,DTOUT,DUOUT,RCEEOB,X,Y ; PRCA*4.5*321 - added RCEEOB
"RTN","RCDPLPL3",9,0)
 ;
"RTN","RCDPLPL3",10,0)
 D FULL^VALM1
"RTN","RCDPLPL3",11,0)
 S VALMBCK="R"
"RTN","RCDPLPL3",12,0)
 ;
"RTN","RCDPLPL3",13,0)
 W !!,"This option will allow the account to be entered for an unapplied"
"RTN","RCDPLPL3",14,0)
 W !,"payment transaction selected from the above list.  If the selected"
"RTN","RCDPLPL3",15,0)
 W !,"receipt has been previously processed, the selected account in the"
"RTN","RCDPLPL3",16,0)
 W !,"accounts receivable package will be updated with the payment.",!
"RTN","RCDPLPL3",17,0)
 N INDEX,RCDPFLAG,RCERROR,RCGECSCR,RCPAY,RCRECTDA,RCSTATUS,RCTRANDA,RCDCHKSW,HRCDCKSW,RCDPTYPE
"RTN","RCDPLPL3",18,0)
 S INDEX=$$SELPAY^RCDPLPL1 I 'INDEX Q
"RTN","RCDPLPL3",19,0)
 S RCPAY=$G(^TMP("RCDPLPLM",$J,"IDX",INDEX,INDEX))
"RTN","RCDPLPL3",20,0)
 S RCRECTDA=+$P(RCPAY,"^"),RCTRANDA=+$P(RCPAY,"^",2)
"RTN","RCDPLPL3",21,0)
 ;
"RTN","RCDPLPL3",22,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) Q
"RTN","RCDPLPL3",23,0)
 S RCDPTYPE=$P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",19)
"RTN","RCDPLPL3",24,0)
 ;
"RTN","RCDPLPL3",25,0)
 ;  check to see if the cr document has been sent for the receipt
"RTN","RCDPLPL3",26,0)
 S RCGECSCR=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPLPL3",27,0)
 ;  code sheet already sent once, this is a retransmission, check it
"RTN","RCDPLPL3",28,0)
 I RCGECSCR'="" D
"RTN","RCDPLPL3",29,0)
 .   S RCSTATUS=$$STATUS^GECSSGET(RCGECSCR)
"RTN","RCDPLPL3",30,0)
 .   W !!,"This receipt has been processed to FMS with cash receipt document"
"RTN","RCDPLPL3",31,0)
 .   W !,$TR(RCGECSCR," "),".  The current status for this document in the"
"RTN","RCDPLPL3",32,0)
 .   W !,"Generic Code Sheet Stack file is ",RCSTATUS,"."
"RTN","RCDPLPL3",33,0)
 .   ;
"RTN","RCDPLPL3",34,0)
 .   ;  okay to continue if status is Error, Rejected, or not defined (-1)
"RTN","RCDPLPL3",35,0)
 .   I $E(RCSTATUS)="E"!($E(RCSTATUS)="R")!(RCSTATUS=-1) Q
"RTN","RCDPLPL3",36,0)
 .   ;  okay to continue if status is Accepted
"RTN","RCDPLPL3",37,0)
 .   I $E(RCSTATUS)="A" Q
"RTN","RCDPLPL3",38,0)
 .   ;  okay to continue if document is transmitted for 2 days
"RTN","RCDPLPL3",39,0)
 .   I $E(RCSTATUS)="T",$$FMDIFF^XLFDT(DT,$P(^RCY(344,RCRECTDA,0),"^",8))>1 Q
"RTN","RCDPLPL3",40,0)
 .   ;
"RTN","RCDPLPL3",41,0)
 .   W !!,"You cannot link the payment to an account until the FMS cash receipt"
"RTN","RCDPLPL3",42,0)
 .   W !,"document is either Accepted or Rejected by FMS."
"RTN","RCDPLPL3",43,0)
 .   W !,"  1.  If the FMS cash receipt is Accepted by FMS, you will need to"
"RTN","RCDPLPL3",44,0)
 .   W !,"      remove the payment from the station's suspense account online"
"RTN","RCDPLPL3",45,0)
 .   W !,"      in FMS."
"RTN","RCDPLPL3",46,0)
 .   W !,"  2.  If the FMS cash receipt document is rejected by FMS, you can"
"RTN","RCDPLPL3",47,0)
 .   W !,"      use the option Process Receipt under the Receipt Processing"
"RTN","RCDPLPL3",48,0)
 .   W !,"      listmanager screen to regenerate the document.  The payment"
"RTN","RCDPLPL3",49,0)
 .   W !,"      has not been deposited in the station's suspense account by"
"RTN","RCDPLPL3",50,0)
 .   W !,"      FMS since the cash receipt document rejected.",!
"RTN","RCDPLPL3",51,0)
 .   S VALMSG="Try linking this payment again tomorrow."
"RTN","RCDPLPL3",52,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",53,0)
 .   S RCDPFLAG=1
"RTN","RCDPLPL3",54,0)
 I $G(RCDPFLAG) D QUIT Q
"RTN","RCDPLPL3",55,0)
 ;
"RTN","RCDPLPL3",56,0)
 ;  show payment transaction
"RTN","RCDPLPL3",57,0)
 W !!,"The current payment transaction:",?40,"RECEIPT: ",$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCDPLPL3",58,0)
 W !,"--------------------------------"
"RTN","RCDPLPL3",59,0)
 D SHOWPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",60,0)
 ;
"RTN","RCDPLPL3",61,0)
 ;  transaction has account entered
"RTN","RCDPLPL3",62,0)
 I $P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",3) D  Q
"RTN","RCDPLPL3",63,0)
 .   S VALMSG="An account has been assigned to this payment."
"RTN","RCDPLPL3",64,0)
 .   D QUIT
"RTN","RCDPLPL3",65,0)
 ;
"RTN","RCDPLPL3",66,0)
 ;  transaction is cancelled, cannot edit
"RTN","RCDPLPL3",67,0)
 I '$P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",4),$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,1)),"^")'="" D  Q
"RTN","RCDPLPL3",68,0)
 .   S VALMSG="Payment Transaction "_RCTRANDA_" is CANCELLED."
"RTN","RCDPLPL3",69,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",70,0)
 .   D QUIT
"RTN","RCDPLPL3",71,0)
 ;
"RTN","RCDPLPL3",72,0)
 ;PRCA*4.5*304
"RTN","RCDPLPL3",73,0)
 ; Will this link payment link to multiple bills
"RTN","RCDPLPL3",74,0)
 ; Note:  some of the code and logic below is also in tag PROCESS^RCDPLPL4.  
"RTN","RCDPLPL3",75,0)
 ;        If changes in logic are made below, please review this tag as well.
"RTN","RCDPLPL3",76,0)
 ;    
"RTN","RCDPLPL3",77,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPLPL3",78,0)
 S DIR("A")="  Will this transaction be linked to multiple claims (Y/N)"
"RTN","RCDPLPL3",79,0)
 D ^DIR
"RTN","RCDPLPL3",80,0)
 I $G(DTOUT)!($G(DUOUT)) D QUIT Q
"RTN","RCDPLPL3",81,0)
 I +Y D MULTIPLE^RCDPLPL4(RCRECTDA,RCTRANDA,RCGECSCR,$G(RCSTATUS)) D QUIT Q
"RTN","RCDPLPL3",82,0)
 ;end PRCA*4.5*304
"RTN","RCDPLPL3",83,0)
 ;
"RTN","RCDPLPL3",84,0)
 W !!,"Editing Payment: ",RCTRANDA
"RTN","RCDPLPL3",85,0)
DBTRBIL S RCDCHKSW=1,HRCDCKSW=0 D EDITACCT^RCDPURET(RCRECTDA,RCTRANDA) I RCDCHKSW=0 G DBTRBIL   ;prca*4.5*301
"RTN","RCDPLPL3",86,0)
 W !
"RTN","RCDPLPL3",87,0)
 ;  account not entered
"RTN","RCDPLPL3",88,0)
 I '$P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",3) D  Q
"RTN","RCDPLPL3",89,0)
 .   S VALMSG="Account was not linked."
"RTN","RCDPLPL3",90,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",91,0)
 .   D QUIT
"RTN","RCDPLPL3",92,0)
 ;
"RTN","RCDPLPL3",93,0)
 ;  show payment transaction
"RTN","RCDPLPL3",94,0)
 W !,"The NEW payment transaction:",?40,"RECEIPT: ",$P(^RCY(344,RCRECTDA,0),"^")
"RTN","RCDPLPL3",95,0)
 W !,"-----------------------------"
"RTN","RCDPLPL3",96,0)
 D SHOWPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",97,0)
 ;
"RTN","RCDPLPL3",98,0)
 I $$ASKACCT()'=1 D  Q
"RTN","RCDPLPL3",99,0)
 .   D DELEACCT^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",100,0)
 .   S VALMSG="Account was deleted and not linked."
"RTN","RCDPLPL3",101,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",102,0)
 .   D QUIT
"RTN","RCDPLPL3",103,0)
 ;
"RTN","RCDPLPL3",104,0)
 ; Option to restore suspense EEOB - PRCA*4.5*321
"RTN","RCDPLPL3",105,0)
 S RCEEOB=$$EEOB^RCDPEM5(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",106,0)
 Q:RCEEOB<0
"RTN","RCDPLPL3",107,0)
 ;
"RTN","RCDPLPL3",108,0)
 ;  receipt has been processed since the cash receipt document
"RTN","RCDPLPL3",109,0)
 ;  has been generated.  update the new account with payment
"RTN","RCDPLPL3",110,0)
 W !
"RTN","RCDPLPL3",111,0)
 I RCGECSCR'="" D  I RCERROR Q
"RTN","RCDPLPL3",112,0)
 .   W !,"Updating the Linked Account with the payment ..."
"RTN","RCDPLPL3",113,0)
 .   S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",114,0)
 .   ;  an error occurred during processing a payment
"RTN","RCDPLPL3",115,0)
 .   I RCERROR D  Q
"RTN","RCDPLPL3",116,0)
 .   .   W !
"RTN","RCDPLPL3",117,0)
 .   .   W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL3",118,0)
 .   .   W !,"|  An ERROR has occurred when processing payment ",RCTRANDA," on receipt ",$P(^RCY(344,RCRECTDA,0),"^"),".",?79,"|"
"RTN","RCDPLPL3",119,0)
 .   .   W !,"|  The error message returned during processing is:",?79,"|"
"RTN","RCDPLPL3",120,0)
 .   .   W !,"|",?79,"|"
"RTN","RCDPLPL3",121,0)
 .   .   W !,"|  ",$P(RCERROR,"^",2),?79,"|"
"RTN","RCDPLPL3",122,0)
 .   .   W !,"|",?79,"|"
"RTN","RCDPLPL3",123,0)
 .   .   W !,"|  You will need to correct the error before you can link the payment.",?79,"|"
"RTN","RCDPLPL3",124,0)
 .   .   W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL3",125,0)
 .   .   W !
"RTN","RCDPLPL3",126,0)
 .   .   D DELEACCT^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",127,0)
 .   .   S VALMSG="Account was deleted and not linked."
"RTN","RCDPLPL3",128,0)
 .   .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",129,0)
 .   .   D QUIT
"RTN","RCDPLPL3",130,0)
 .   ;
"RTN","RCDPLPL3",131,0)
 .   ;  payment processed correctly
"RTN","RCDPLPL3",132,0)
 .   W "  done."
"RTN","RCDPLPL3",133,0)
 .   W !
"RTN","RCDPLPL3",134,0)
 .   ;
"RTN","RCDPLPL3",135,0)
 .   ;PRCA*4.5*304
"RTN","RCDPLPL3",136,0)
 .   D REMCMT^RCDPLPL4(RCRECTDA,RCTRANDA)   ; Remove the suspense comment.  No longer needed. 
"RTN","RCDPLPL3",137,0)
 .   ;
"RTN","RCDPLPL3",138,0)
 .   ;File entry in Audit Log
"RTN","RCDPLPL3",139,0)
 .   D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"P")
"RTN","RCDPLPL3",140,0)
 .   ;
"RTN","RCDPLPL3",141,0)
 .   ; Update Suspense Status
"RTN","RCDPLPL3",142,0)
 .   D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"PD")
"RTN","RCDPLPL3",143,0)
 .   ;end PRCA*4.5*304
"RTN","RCDPLPL3",144,0)
 .   ;
"RTN","RCDPLPL3",145,0)
 .   ; Update EEOB claim number and restore to active status - PRCA*4.5*321
"RTN","RCDPLPL3",146,0)
 .   D:RCEEOB RESTORE^RCDPEM5(RCRECTDA,RCTRANDA,RCEEOB,"L")
"RTN","RCDPLPL3",147,0)
 .   ;
"RTN","RCDPLPL3",148,0)
 .   I $E(RCSTATUS)="A" D
"RTN","RCDPLPL3",149,0)
 .   .   W !,"Since the FMS cash receipt document is Accepted in FMS, you need to go"
"RTN","RCDPLPL3",150,0)
 .   .   W !,"online in FMS and transfer the amount paid out of the station's suspense"
"RTN","RCDPLPL3",151,0)
 .   .   W !,"account.",!
"RTN","RCDPLPL3",152,0)
 .   .   ;  send mail message to the RCDP PAYMENTS mail group
"RTN","RCDPLPL3",153,0)
 .   .   W !,"Sending mail message to RCDP PAYMENTS mail group."
"RTN","RCDPLPL3",154,0)
 .   .   D MAILMSG^RCDPLPSR(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL3",155,0)
 .   .   ;  place an x in the fms doc field so it will show on the
"RTN","RCDPLPL3",156,0)
 .   .   ;  suspense report
"RTN","RCDPLPL3",157,0)
 .   .   D EDITFMS^RCDPURET(RCRECTDA,RCTRANDA,"x")
"RTN","RCDPLPL3",158,0)
 .   I $E(RCSTATUS)'="A" D
"RTN","RCDPLPL3",159,0)
 .   .   W !,"Since the FMS cash receipt document is NOT Accepted in FMS, you can use"
"RTN","RCDPLPL3",160,0)
 .   .   W !,"the option Process Receipt located under the Receipt Processing Menu"
"RTN","RCDPLPL3",161,0)
 .   .   W !,"to regenerate the cash receipt document to FMS.",!
"RTN","RCDPLPL3",162,0)
 .   S VALMSG="Payment linked and removed from list."
"RTN","RCDPLPL3",163,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",164,0)
 ;
"RTN","RCDPLPL3",165,0)
 ;  receipt has not been processed
"RTN","RCDPLPL3",166,0)
 I RCGECSCR="" D
"RTN","RCDPLPL3",167,0)
 .   S VALMSG="Since the receipt has not been processed, accounts will not be updated."
"RTN","RCDPLPL3",168,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPLPL3",169,0)
 .   S VALMSG="Payment linked and removed from list."
"RTN","RCDPLPL3",170,0)
 .   ; Update EEOB claim number and restore to active status - PRCA*4.5*321
"RTN","RCDPLPL3",171,0)
 .   D:RCEEOB RESTORE^RCDPEM5(RCRECTDA,RCTRANDA,RCEEOB,"L")
"RTN","RCDPLPL3",172,0)
 ;
"RTN","RCDPLPL3",173,0)
QUIT ;  call here to unlock and rebuild list
"RTN","RCDPLPL3",174,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPLPL3",175,0)
 D INIT^RCDPLPLM
"RTN","RCDPLPL3",176,0)
 Q
"RTN","RCDPLPL3",177,0)
 ;
"RTN","RCDPLPL3",178,0)
 ;
"RTN","RCDPLPL3",179,0)
SHOWPAY(RCRECTDA,RCTRANDA) ;  show the payment transaction
"RTN","RCDPLPL3",180,0)
 N A,D0,DA,DIC,DIQ,DK,DL,DX,S,Y
"RTN","RCDPLPL3",181,0)
 S DIC="^RCY(344,"_RCRECTDA_",1,",DA(1)=RCRECTDA,DA=RCTRANDA,DIQ(0)="C"
"RTN","RCDPLPL3",182,0)
 D EN^DIQ
"RTN","RCDPLPL3",183,0)
 Q
"RTN","RCDPLPL3",184,0)
 ;
"RTN","RCDPLPL3",185,0)
 ;
"RTN","RCDPLPL3",186,0)
ASKACCT() ; ask if its the correct account
"RTN","RCDPLPL3",187,0)
 ;  1 is yes, otherwise no
"RTN","RCDPLPL3",188,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPLPL3",189,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPLPL3",190,0)
 S DIR("A")="  Is this the correct ACCOUNT to apply the payment to"
"RTN","RCDPLPL3",191,0)
 D ^DIR
"RTN","RCDPLPL3",192,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPLPL3",193,0)
 Q Y
"RTN","RCDPLPL4")
0^13^B239990272
"RTN","RCDPLPL4",1,0)
RCDPLPL4 ;ALB/SAB - Multiple Bill Link Payments ;17 Mar 16
"RTN","RCDPLPL4",2,0)
 ;;4.5;Accounts Receivable;**304,301,321**;Mar 20, 1995;Build 48
"RTN","RCDPLPL4",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPLPL4",4,0)
 ;
"RTN","RCDPLPL4",5,0)
 Q
"RTN","RCDPLPL4",6,0)
 ;
"RTN","RCDPLPL4",7,0)
MULTIPLE(RCRECTDA,RCTRANDA,RCGECSCR,RCSTATUS) ; Process multiple bills for the same receipt transaction.
"RTN","RCDPLPL4",8,0)
 ;
"RTN","RCDPLPL4",9,0)
 N RCAMT,RCCT,RCAMTRM,RCEXIT,RCMSG,RCNWTRAN,RCTACCT,RCTAMT,RCTDATA,RCACT,RCARRAY,RCEXT,RCRSP,RCSPRSS
"RTN","RCDPLPL4",10,0)
 N RCDACNO,I,RCNM,RCBLIEN,RCDACNOI,RCUNAPN,RCQTSP,RCANS,RCDACT,RCDATA,RCPIEN,RCTACCTT
"RTN","RCDPLPL4",11,0)
 N RCTAMT,RCTCMT,RCTDNM,RCUNRCN,RCDCHKSW,HRCDCKSW
"RTN","RCDPLPL4",12,0)
 ;
"RTN","RCDPLPL4",13,0)
 S (RCSPRSS,RCEXIT,RCCT)=0
"RTN","RCDPLPL4",14,0)
 S RCTDATA=$G(^RCY(344,RCRECTDA,1,RCTRANDA,0))
"RTN","RCDPLPL4",15,0)
 I RCTDATA="" D  Q
"RTN","RCDPLPL4",16,0)
 .  S RCMSG="The initial receipt transaction data is missing.  Unable to link a claim to this transaction."
"RTN","RCDPLPL4",17,0)
 .  D WRITE^RCDPRPLU(RCMSG)
"RTN","RCDPLPL4",18,0)
 ;
"RTN","RCDPLPL4",19,0)
 ; Retrieve payment amount on the transaction
"RTN","RCDPLPL4",20,0)
 S (RCAMT,RCAMTRM)=+$P(RCTDATA,U,4)
"RTN","RCDPLPL4",21,0)
 ;
"RTN","RCDPLPL4",22,0)
 I RCAMT=0 D  Q
"RTN","RCDPLPL4",23,0)
 .  S RCMSG="The transaction balance is 0.  Unable to link a claim to this transaction."
"RTN","RCDPLPL4",24,0)
 .  D WRITE^RCDPRPLU(RCMSG)
"RTN","RCDPLPL4",25,0)
 ;
"RTN","RCDPLPL4",26,0)
 ;Retrieve list of Bills to link to payment
"RTN","RCDPLPL4",27,0)
 F  D  Q:RCAMTRM=0  Q:RCEXIT
"RTN","RCDPLPL4",28,0)
 . ;
"RTN","RCDPLPL4",29,0)
 . ;Re-init the suspense quit flag
"RTN","RCDPLPL4",30,0)
 . S RCQTSP=0
"RTN","RCDPLPL4",31,0)
 . ;
"RTN","RCDPLPL4",32,0)
 . ;Ask the user for the account
"RTN","RCDPLPL4",33,0)
 . S RCDCHKSW=1,HRCDCKSW=0,RCACCT=$$GETACCT(RCRECTDA) I RCDCHKSW=0 W ! Q    ;prca*4.5*301
"RTN","RCDPLPL4",34,0)
 . I RCACCT=-1 D  Q
"RTN","RCDPLPL4",35,0)
 . . S RCRSP=$$CONQUIT()
"RTN","RCDPLPL4",36,0)
 . . S:RCRSP=1 RCEXIT=1
"RTN","RCDPLPL4",37,0)
 . ;
"RTN","RCDPLPL4",38,0)
 . I RCACCT=0 D  Q
"RTN","RCDPLPL4",39,0)
 . . W !,?6,"Invalid Bill Number, Please try again...."
"RTN","RCDPLPL4",40,0)
 . S:RCACCT="SUSPENSE" RCACCT=""     ;Payment needs to remain in suspense.
"RTN","RCDPLPL4",41,0)
 . ;
"RTN","RCDPLPL4",42,0)
 . ;Ask the user for the amount
"RTN","RCDPLPL4",43,0)
 . S RCAMT=$$GETAMT(RCACCT,RCAMTRM)
"RTN","RCDPLPL4",44,0)
 . Q:RCAMT=-1
"RTN","RCDPLPL4",45,0)
 . ;
"RTN","RCDPLPL4",46,0)
 . ;Ask the user for Comment if no account is entered.
"RTN","RCDPLPL4",47,0)
 . S RCCMT=""
"RTN","RCDPLPL4",48,0)
 . I RCACCT="" S RCCMT=$$GETCMT()
"RTN","RCDPLPL4",49,0)
 . ;timed out or ^ - exit.
"RTN","RCDPLPL4",50,0)
 . I (RCCMT=-1)!(RCCMT="^") Q
"RTN","RCDPLPL4",51,0)
 . ;
"RTN","RCDPLPL4",52,0)
 . ;Update the array and amount remaining.
"RTN","RCDPLPL4",53,0)
 . S RCCT=RCCT+1
"RTN","RCDPLPL4",54,0)
 . S RCARRAY(RCCT)=RCACCT_U_RCAMT_U_RCCMT_U_$$GETACTNM(RCACCT)
"RTN","RCDPLPL4",55,0)
 . S RCAMTRM=RCAMTRM-RCAMT
"RTN","RCDPLPL4",56,0)
 . ;
"RTN","RCDPLPL4",57,0)
 . ;Check to see if user wishes to continue
"RTN","RCDPLPL4",58,0)
 . I RCAMTRM>0 D
"RTN","RCDPLPL4",59,0)
 . . ;
"RTN","RCDPLPL4",60,0)
 . . ;ask if user wishes to continue
"RTN","RCDPLPL4",61,0)
 . . S RCRSP=$$CONTINUE(RCAMTRM)
"RTN","RCDPLPL4",62,0)
 . . ;
"RTN","RCDPLPL4",63,0)
 . . ;User wishes to continue
"RTN","RCDPLPL4",64,0)
 . . Q:RCRSP=1
"RTN","RCDPLPL4",65,0)
 . . ;
"RTN","RCDPLPL4",66,0)
 . . ;if no, ask if user is sure and that all selected payments will not be linked.
"RTN","RCDPLPL4",67,0)
 . . S RCRSP=$$CONQUIT()
"RTN","RCDPLPL4",68,0)
 . . I RCRSP=1 S RCEXIT=1
"RTN","RCDPLPL4",69,0)
 ;
"RTN","RCDPLPL4",70,0)
 ; If the user is exiting before completion, quit.
"RTN","RCDPLPL4",71,0)
 Q:RCEXIT
"RTN","RCDPLPL4",72,0)
 ;
"RTN","RCDPLPL4",73,0)
 ;State all money is disbursed and display all accounts for confirmation
"RTN","RCDPLPL4",74,0)
 W !!,"*** RECEIPT HAS BEEN FULLY DISBURSED ***",!
"RTN","RCDPLPL4",75,0)
 ;
"RTN","RCDPLPL4",76,0)
 ; Ask if user wishes to review the list again
"RTN","RCDPLPL4",77,0)
 S RCANS=$$GETANS(1)
"RTN","RCDPLPL4",78,0)
 ;
"RTN","RCDPLPL4",79,0)
 ;Spacing line
"RTN","RCDPLPL4",80,0)
 W !
"RTN","RCDPLPL4",81,0)
 ;
"RTN","RCDPLPL4",82,0)
 ; Review the list if necessary
"RTN","RCDPLPL4",83,0)
 I RCANS=1 D
"RTN","RCDPLPL4",84,0)
 . S I=0
"RTN","RCDPLPL4",85,0)
 . W !,?5,"PATIENT NAME",?36,"ACCOUNT",?50,"PAYMENT TO APPLY",!
"RTN","RCDPLPL4",86,0)
 . F I=1:1:RCCT D
"RTN","RCDPLPL4",87,0)
 . . S (RCNM,RCDACNO,RCDACNOI)=""
"RTN","RCDPLPL4",88,0)
 . . S RCDATA=$G(RCARRAY(I))
"RTN","RCDPLPL4",89,0)
 . . S RCDACT=$P(RCDATA,U)
"RTN","RCDPLPL4",90,0)
 . . S:RCDACT="" RCNM="SUSPENSE"
"RTN","RCDPLPL4",91,0)
 . . I RCDACT[";DPT" D
"RTN","RCDPLPL4",92,0)
 . . . S RCNM=$P($G(^DPT($P(RCDACT,";"),0)),U)
"RTN","RCDPLPL4",93,0)
 . . . S RCDACNO=""
"RTN","RCDPLPL4",94,0)
 . . I RCDACT[";PRCA" D
"RTN","RCDPLPL4",95,0)
 . . . S RCDACNOI=$P(RCDACT,";")
"RTN","RCDPLPL4",96,0)
 . . . S RCDACNO=$P($G(^PRCA(430,$P(RCDACNOI,U),0)),U)
"RTN","RCDPLPL4",97,0)
 . . . S RCPIEN=$P($G(^DGCR(399,RCDACNOI,0)),U,2)
"RTN","RCDPLPL4",98,0)
 . . . I RCPIEN="" S RCNM="PATIENT NAME NOT FOUND" Q
"RTN","RCDPLPL4",99,0)
 . . . S RCNM=$P($G(^DPT(RCPIEN,0)),U)
"RTN","RCDPLPL4",100,0)
 . . . I RCNM="" S RCNM="PATIENT NAME NOT FOUND"
"RTN","RCDPLPL4",101,0)
 . . W ?5,RCNM,?36,RCDACNO,?50,"$",$J($FN($P(RCDATA,U,2),",",2),15),!
"RTN","RCDPLPL4",102,0)
 ;
"RTN","RCDPLPL4",103,0)
 ; Ask the user if they wish to update.  Quit if they time out, "^" out, or say No to updating.
"RTN","RCDPLPL4",104,0)
 S RCANS=$$GETANS(2)
"RTN","RCDPLPL4",105,0)
 Q:RCANS'=1
"RTN","RCDPLPL4",106,0)
 ;
"RTN","RCDPLPL4",107,0)
 ;Initialize error flag
"RTN","RCDPLPL4",108,0)
 S RCERROR=0
"RTN","RCDPLPL4",109,0)
 ;
"RTN","RCDPLPL4",110,0)
 ;Surpress PNORBILL^RCDPURED output
"RTN","RCDPLPL4",111,0)
 S RCSPRSS=1
"RTN","RCDPLPL4",112,0)
 ;
"RTN","RCDPLPL4",113,0)
 ;create line spacing
"RTN","RCDPLPL4",114,0)
 W !!
"RTN","RCDPLPL4",115,0)
 ;
"RTN","RCDPLPL4",116,0)
 ;Link the payments
"RTN","RCDPLPL4",117,0)
 F RCACT=1:1:RCCT D  Q:RCERROR
"RTN","RCDPLPL4",118,0)
 . ;
"RTN","RCDPLPL4",119,0)
 . ;Extract data to update
"RTN","RCDPLPL4",120,0)
 . S RCTAMT=$P(RCARRAY(RCACT),U,2)   ;Payment Amount
"RTN","RCDPLPL4",121,0)
 . S RCTACCT=$P(RCARRAY(RCACT),U,1)    ;Account to link to.
"RTN","RCDPLPL4",122,0)
 . S RCTCMT=$P(RCARRAY(RCACT),U,3)
"RTN","RCDPLPL4",123,0)
 . S RCTDNM=$P(RCARRAY(RCACT),U,4)
"RTN","RCDPLPL4",124,0)
 . S RCTACCTT=$S(RCTACCT="":"the Suspense Item",1:RCTACCT)
"RTN","RCDPLPL4",125,0)
 . ;
"RTN","RCDPLPL4",126,0)
 . ;If not the first transaction, create a new one
"RTN","RCDPLPL4",127,0)
 . I RCACT'=1 D  Q
"RTN","RCDPLPL4",128,0)
 . . ;
"RTN","RCDPLPL4",129,0)
 . . ; Create new transaction
"RTN","RCDPLPL4",130,0)
 . . S RCNWTRAN=$$COPYTRAN(RCRECTDA,RCTDATA,RCTAMT,RCGECSCR)
"RTN","RCDPLPL4",131,0)
 . . ;
"RTN","RCDPLPL4",132,0)
 . . ; Link the Payment using the display name
"RTN","RCDPLPL4",133,0)
 . . D LINKPAY(RCRECTDA,RCNWTRAN,RCTDNM)
"RTN","RCDPLPL4",134,0)
 . . ;
"RTN","RCDPLPL4",135,0)
 . . ; build unapplied deposit number
"RTN","RCDPLPL4",136,0)
 . . S RCUNRCN=$P($G(^RCY(344,RCRECTDA,0)),U)
"RTN","RCDPLPL4",137,0)
 . . S RCUNAPN=$S($L(RCUNRCN)>9:$E(RCUNRCN,$L(RCUNRCN-9),$L(RCUNRCN)),1:RCUNRCN)
"RTN","RCDPLPL4",138,0)
 . . S RCUNAPN=RCUNAPN_$E("0000",1,4-$L(RCNWTRAN))_RCNWTRAN
"RTN","RCDPLPL4",139,0)
 . . D SETUNAPP^RCDPURET(RCRECTDA,RCNWTRAN,RCUNAPN) ; add new unapplied deposit #
"RTN","RCDPLPL4",140,0)
 . . ;
"RTN","RCDPLPL4",141,0)
 . . ; If creating a new suspense item, update the comment field and audit logs
"RTN","RCDPLPL4",142,0)
 . . I RCTCMT'="" D
"RTN","RCDPLPL4",143,0)
 . . . ;
"RTN","RCDPLPL4",144,0)
 . . . D UPDCMT(RCRECTDA,RCNWTRAN,RCTCMT)  ; add comment
"RTN","RCDPLPL4",145,0)
 . . . I $G(RCGECSCR)'="" D
"RTN","RCDPLPL4",146,0)
 . . . . D AUDIT^RCBEPAY(RCRECTDA,RCNWTRAN,"I")
"RTN","RCDPLPL4",147,0)
 . . . . D SUSPDIS^RCBEPAY(RCRECTDA,RCNWTRAN,"P")
"RTN","RCDPLPL4",148,0)
 . . . W !,"***** PAYMENT AMOUNT LEFT IN SUSPENSE = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",149,0)
 . . ;
"RTN","RCDPLPL4",150,0)
 . . ; If linking an account, process the linking
"RTN","RCDPLPL4",151,0)
 . . I RCTCMT="" D
"RTN","RCDPLPL4",152,0)
 . . . ;
"RTN","RCDPLPL4",153,0)
 . . . ; If the receipt has been processed, process the payment
"RTN","RCDPLPL4",154,0)
 . . . I $G(RCGECSCR)'="" D  Q
"RTN","RCDPLPL4",155,0)
 . . . . W !,RCTDNM," - Updating the Linked Account with PMT = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",156,0)
 . . . . D REMCMT(RCRECTDA,RCNWTRAN)   ; Remove the supense comment.  No longer needed.
"RTN","RCDPLPL4",157,0)
 . . . . D PROCESS(RCRECTDA,RCNWTRAN,RCTDNM)
"RTN","RCDPLPL4",158,0)
 . . . ;
"RTN","RCDPLPL4",159,0)
 . . . ; The receipt has not been processed
"RTN","RCDPLPL4",160,0)
 . . . W !,RCTDNM," - Receipt has not been processed.  Account linked but not"
"RTN","RCDPLPL4",161,0)
 . . . W !,?6,"updated for the PMT = $",$J(RCTAMT,"",2)
"RTN","RCDPLPL4",162,0)
 . ;
"RTN","RCDPLPL4",163,0)
 . ;If this is the first transaction, adjust the payment amount to be the amount not split out.
"RTN","RCDPLPL4",164,0)
 . I RCACT=1 D
"RTN","RCDPLPL4",165,0)
 . . ;
"RTN","RCDPLPL4",166,0)
 . . ; Modify the original payment amount
"RTN","RCDPLPL4",167,0)
 . . D ADJTRAMT(RCRECTDA,RCTRANDA,RCTAMT,RCGECSCR)
"RTN","RCDPLPL4",168,0)
 . . ;
"RTN","RCDPLPL4",169,0)
 . . ; Adjusting the amount in suspense, update the comment field and audit logs
"RTN","RCDPLPL4",170,0)
 . . I RCTCMT'="" D  Q
"RTN","RCDPLPL4",171,0)
 . . . D UPDCMT(RCRECTDA,RCTRANDA,RCTCMT)  ; add comment
"RTN","RCDPLPL4",172,0)
 . . . I $G(RCGECSCR)'="" D
"RTN","RCDPLPL4",173,0)
 . . . . D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"I")
"RTN","RCDPLPL4",174,0)
 . . . . D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"P")
"RTN","RCDPLPL4",175,0)
 . . . W !,"***** PAYMENT AMOUNT LEFT IN SUSPENSE = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",176,0)
 . . ;
"RTN","RCDPLPL4",177,0)
 . . ; Link the Payment, send account if PRCA, Patient name in Patient
"RTN","RCDPLPL4",178,0)
 . . D LINKPAY(RCRECTDA,RCTRANDA,RCTDNM)
"RTN","RCDPLPL4",179,0)
 . . ;
"RTN","RCDPLPL4",180,0)
 . . ;Remove the comment, item is no longer in suspense
"RTN","RCDPLPL4",181,0)
 . . D REMCMT(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",182,0)
 . . ;
"RTN","RCDPLPL4",183,0)
 . . ; If the receipt has been processed, process the payment
"RTN","RCDPLPL4",184,0)
 . . I $G(RCGECSCR)'="" D  Q
"RTN","RCDPLPL4",185,0)
 . . . W !,RCTDNM," - Updating the Linked Account with PMT = $",$J(RCTAMT,"",2)," ... done."
"RTN","RCDPLPL4",186,0)
 . . . D PROCESS(RCRECTDA,RCTRANDA,RCTDNM)
"RTN","RCDPLPL4",187,0)
 . . ;
"RTN","RCDPLPL4",188,0)
 . . ; The receipt has not been processed
"RTN","RCDPLPL4",189,0)
 . . W !,RCTDNM," - Receipt has not been processed.  Account linked but not"
"RTN","RCDPLPL4",190,0)
 . . W !,?6,"updated for the PMT = $",$J(RCTAMT,"",2)
"RTN","RCDPLPL4",191,0)
 ;
"RTN","RCDPLPL4",192,0)
 W !!
"RTN","RCDPLPL4",193,0)
 ;
"RTN","RCDPLPL4",194,0)
 D ENDMSG(RCSTATUS)
"RTN","RCDPLPL4",195,0)
 ;
"RTN","RCDPLPL4",196,0)
 D WRITE^RCDPRPLU(" ")
"RTN","RCDPLPL4",197,0)
 ;
"RTN","RCDPLPL4",198,0)
 Q
"RTN","RCDPLPL4",199,0)
 ;
"RTN","RCDPLPL4",200,0)
GETACCT(RCRECTDA) ; Ask the user for the account
"RTN","RCDPLPL4",201,0)
 ;
"RTN","RCDPLPL4",202,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,DA,RCSUSFLG,RCSTAT
"RTN","RCDPLPL4",203,0)
 ;
"RTN","RCDPLPL4",204,0)
 S RCSUSFLG=0
"RTN","RCDPLPL4",205,0)
 S DIR("A")="BILL NUMBER: ",DIR(0)="FAO"
"RTN","RCDPLPL4",206,0)
 S DIR("PRE")="I X=""SUSPENSE"" S X=""^"",RCSUSFLG=1"
"RTN","RCDPLPL4",207,0)
 D ^DIR
"RTN","RCDPLPL4",208,0)
 Q:RCSUSFLG "SUSPENSE"
"RTN","RCDPLPL4",209,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPLPL4",210,0)
 ;
"RTN","RCDPLPL4",211,0)
 ;Force to all caps
"RTN","RCDPLPL4",212,0)
 S Y=$$UP^XLFSTR(Y)
"RTN","RCDPLPL4",213,0)
 ;
"RTN","RCDPLPL4",214,0)
 ; Check for valid bill number
"RTN","RCDPLPL4",215,0)
 I '$O(^PRCA(430,"D",Y,"")) S Y=""      ; Not a valid bill number
"RTN","RCDPLPL4",216,0)
 ;
"RTN","RCDPLPL4",217,0)
 Q:Y="" 0   ; quit if invalid bill number or lookup number
"RTN","RCDPLPL4",218,0)
 ;
"RTN","RCDPLPL4",219,0)
 S X=Y
"RTN","RCDPLPL4",220,0)
 S DA(1)=RCRECTDA
"RTN","RCDPLPL4",221,0)
 D PNORBILL^RCDPURED
"RTN","RCDPLPL4",222,0)
 ; 
"RTN","RCDPLPL4",223,0)
 ;if this is an account, is it active?  If not, request a new account.
"RTN","RCDPLPL4",224,0)
 I $G(X)[";PRCA" D  Q:RCSTAT'="ACTIVE" 0
"RTN","RCDPLPL4",225,0)
 . S RCSTAT=$$GET1^DIQ(430,$P($G(X),";")_",",8,"E")
"RTN","RCDPLPL4",226,0)
 . I RCSTAT'="ACTIVE",$P($G(^RCD(340,+$P(^PRCA(430,$P($G(X),";"),0),"^",9),0)),"^")[";DPT(" W !,"This bill's status is currently ",RCSTAT,".",!,"Please select a different account."
"RTN","RCDPLPL4",227,0)
 ;
"RTN","RCDPLPL4",228,0)
 ;Something went wrong.  Try again.
"RTN","RCDPLPL4",229,0)
 I '$D(X) Q 0
"RTN","RCDPLPL4",230,0)
 ;
"RTN","RCDPLPL4",231,0)
 ; Account found, return it
"RTN","RCDPLPL4",232,0)
 Q X
"RTN","RCDPLPL4",233,0)
 ;
"RTN","RCDPLPL4",234,0)
GETAMT(RCACCT,RCAMT) ; Ask the user for the amount
"RTN","RCDPLPL4",235,0)
 ;
"RTN","RCDPLPL4",236,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT,DA,RCFLG,AMTFLG
"RTN","RCDPLPL4",237,0)
 ;
"RTN","RCDPLPL4",238,0)
 ;
"RTN","RCDPLPL4",239,0)
 S RCFLG=0
"RTN","RCDPLPL4",240,0)
 F  D  Q:RCFLG
"RTN","RCDPLPL4",241,0)
 . S AMTFLG=1  ; Set amount flag check to 1 in case the account is a SUSPENSE account
"RTN","RCDPLPL4",242,0)
 . S DIR("A")="Amount to apply to Account",DIR(0)="N^0.01:"_$J(RCAMT,"",2)_":2"
"RTN","RCDPLPL4",243,0)
 . D ^DIR
"RTN","RCDPLPL4",244,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y="")  S Y=-1,RCFLG=1 Q
"RTN","RCDPLPL4",245,0)
 . ;If not a SUSPENSE account, check the balance.
"RTN","RCDPLPL4",246,0)
 . I RCACCT'="" S AMTFLG=$$PAYCHK(RCACCT,Y)
"RTN","RCDPLPL4",247,0)
 . ;amount applied is greater than the amount owed.  Try again
"RTN","RCDPLPL4",248,0)
 . Q:'AMTFLG
"RTN","RCDPLPL4",249,0)
 . I +Y>0 S RCFLG=1 Q
"RTN","RCDPLPL4",250,0)
 . S Y=0,RCFLG=1
"RTN","RCDPLPL4",251,0)
 Q Y
"RTN","RCDPLPL4",252,0)
 ;
"RTN","RCDPLPL4",253,0)
GETCMT() ; Ask the user for a comment
"RTN","RCDPLPL4",254,0)
 ;
"RTN","RCDPLPL4",255,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",256,0)
 F  D  Q:Y'=""
"RTN","RCDPLPL4",257,0)
 . S Y=$$COM^RCDPECH ; PRCA*4.5*321
"RTN","RCDPLPL4",258,0)
 . ;strip all leading and trailing spaces
"RTN","RCDPLPL4",259,0)
 . S Y=$$TRIM^XLFSTR(Y)
"RTN","RCDPLPL4",260,0)
 . I Y="" W !,"A comment is required when changing the status of an item in Suspense.  Please",!,"try again." Q
"RTN","RCDPLPL4",261,0)
 . I $D(DTOUT) S Y=-1
"RTN","RCDPLPL4",262,0)
 Q Y
"RTN","RCDPLPL4",263,0)
 ;
"RTN","RCDPLPL4",264,0)
CONTINUE(RCAMTRM) ; Ask the user to see if they wish to continue
"RTN","RCDPLPL4",265,0)
 ;
"RTN","RCDPLPL4",266,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",267,0)
 S DIR("A")="Receipt has $"_$J(RCAMTRM,10,2)_" left to link.  Do you wish to link another? ",DIR(0)="YA"
"RTN","RCDPLPL4",268,0)
 D ^DIR
"RTN","RCDPLPL4",269,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q -1
"RTN","RCDPLPL4",270,0)
 Q Y
"RTN","RCDPLPL4",271,0)
 ;
"RTN","RCDPLPL4",272,0)
 ; Confirm with the user that the wish to stop before completing the linking of payments
"RTN","RCDPLPL4",273,0)
CONQUIT() ;
"RTN","RCDPLPL4",274,0)
 ;
"RTN","RCDPLPL4",275,0)
 N X,Y,DTOUT,DUOUT,DIR,DIROUT,DIRUT
"RTN","RCDPLPL4",276,0)
 S DIR("A",1)="Exiting now will prevent the linking of any previously selected claims to this"
"RTN","RCDPLPL4",277,0)
 S DIR("A")="receipt.  Are you sure? ",DIR(0)="YA"
"RTN","RCDPLPL4",278,0)
 D ^DIR
"RTN","RCDPLPL4",279,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")  Q 1
"RTN","RCDPLPL4",280,0)
 Q Y
"RTN","RCDPLPL4",281,0)
 ;
"RTN","RCDPLPL4",282,0)
 ;Create a new transaction using an existing transaction as the foundation.
"RTN","RCDPLPL4",283,0)
COPYTRAN(RCRECTDA,RCTDATA,RCAMT,RCGECSCR) ;
"RTN","RCDPLPL4",284,0)
 ;
"RTN","RCDPLPL4",285,0)
 N RCNWTRAN,DR,DA,DTOUT,DIE,X,Y,RCTDATA3
"RTN","RCDPLPL4",286,0)
 ;
"RTN","RCDPLPL4",287,0)
 S RCTDATA3=$G(^RCY(344,RCRECTDA,1,RCTRANDA,3))
"RTN","RCDPLPL4",288,0)
 ;Create a new transaction
"RTN","RCDPLPL4",289,0)
 S RCNWTRAN=$$ADDTRAN^RCDPURET(RCRECTDA)
"RTN","RCDPLPL4",290,0)
 S RCCMT="Multi-Trans Split"
"RTN","RCDPLPL4",291,0)
 ;
"RTN","RCDPLPL4",292,0)
 ;Update Transaction
"RTN","RCDPLPL4",293,0)
 S DR=".02////"_$P(RCTDATA,U,2)       ;Original Confirmation #
"RTN","RCDPLPL4",294,0)
 S DR=DR_";.04///"_RCAMT              ;Amount
"RTN","RCDPLPL4",295,0)
 S DR=DR_";.06////"_$P(RCTDATA,U,6)   ;Original date of payment
"RTN","RCDPLPL4",296,0)
 S DR=DR_";.07////"_$P(RCTDATA,U,7)   ;Original Check #
"RTN","RCDPLPL4",297,0)
 S DR=DR_";.08////"_$P(RCTDATA,U,8)   ;Original Check routing #
"RTN","RCDPLPL4",298,0)
 S DR=DR_";.1////"_$P(RCTDATA,U,10)   ;Original date on the check
"RTN","RCDPLPL4",299,0)
 S DR=DR_";.11////"_$P(RCTDATA,U,11)  ;Original CC number
"RTN","RCDPLPL4",300,0)
 S DR=DR_";.12////"_$P(RCTDATA,U,12)  ;Original user who entered the check
"RTN","RCDPLPL4",301,0)
 S DR=DR_";.13////"_$P(RCTDATA,U,13)  ;Original check account #
"RTN","RCDPLPL4",302,0)
 S DR=DR_";.14///"_DUZ                ;User Linking the payment
"RTN","RCDPLPL4",303,0)
 S DR=DR_";1.02////"_RCCMT            ;Initial Comment
"RTN","RCDPLPL4",304,0)
 S DR=DR_";3.02////"_$P(RCTDATA3,U,2) ;Date Trans. originally suspense
"RTN","RCDPLPL4",305,0)
 S DR=DR_";3.03////"_$P(RCTDATA3,U,3) ;User who originally suspended Trans.
"RTN","RCDPLPL4",306,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",307,0)
 S DA=RCNWTRAN,DA(1)=RCRECTDA
"RTN","RCDPLPL4",308,0)
 D ^DIE
"RTN","RCDPLPL4",309,0)
 S $P(^RCY(344,RCRECTDA,1,RCNWTRAN,0),"^",19)=$G(RCDPTYPE)
"RTN","RCDPLPL4",310,0)
 ;
"RTN","RCDPLPL4",311,0)
 ;Update the Audit Log
"RTN","RCDPLPL4",312,0)
 I $G(RCGECSCR)'="" D AUDIT^RCBEPAY(RCRECTDA,RCNWTRAN,"I")
"RTN","RCDPLPL4",313,0)
 ;
"RTN","RCDPLPL4",314,0)
 Q RCNWTRAN
"RTN","RCDPLPL4",315,0)
 ;
"RTN","RCDPLPL4",316,0)
 ;Adjust the original transaction's payment amount to match to the actual, split amount.
"RTN","RCDPLPL4",317,0)
ADJTRAMT(RCRECTDA,RCTRANDA,RCAMT,RCGECSCR) ;
"RTN","RCDPLPL4",318,0)
 ;
"RTN","RCDPLPL4",319,0)
 N RCCMT,DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",320,0)
 S RCCMT="Multi-Trans Split"
"RTN","RCDPLPL4",321,0)
 ;
"RTN","RCDPLPL4",322,0)
 S DR=".04///"_RCAMT_";1.02///"_RCCMT
"RTN","RCDPLPL4",323,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",324,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",325,0)
 D ^DIE
"RTN","RCDPLPL4",326,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",327,0)
 ;
"RTN","RCDPLPL4",328,0)
 ;Update the Audit Log
"RTN","RCDPLPL4",329,0)
 I $G(RCGECSCR)'="" D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"I")
"RTN","RCDPLPL4",330,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPLPL4",331,0)
 D AUDIT^RCDPECH(RCRECTDA,RCTRANDA,"","")
"RTN","RCDPLPL4",332,0)
 Q
"RTN","RCDPLPL4",333,0)
 ;
"RTN","RCDPLPL4",334,0)
 ;Link the Transaction to an existing account
"RTN","RCDPLPL4",335,0)
LINKPAY(RCRECTDA,RCTRANDA,RCACCT) ;
"RTN","RCDPLPL4",336,0)
 ;
"RTN","RCDPLPL4",337,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",338,0)
 S DR=".09///"_RCACCT
"RTN","RCDPLPL4",339,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",340,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",341,0)
 D ^DIE
"RTN","RCDPLPL4",342,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",343,0)
 Q
"RTN","RCDPLPL4",344,0)
 ;
"RTN","RCDPLPL4",345,0)
 ;Remove the suspense comment, item no longer in suspense
"RTN","RCDPLPL4",346,0)
REMCMT(RCRECTDA,RCTRANDA) ;
"RTN","RCDPLPL4",347,0)
 ;
"RTN","RCDPLPL4",348,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",349,0)
 S DR="1.02///@"
"RTN","RCDPLPL4",350,0)
 S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",351,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",352,0)
 D ^DIE
"RTN","RCDPLPL4",353,0)
 D LASTEDIT^RCDPUREC(RCRECTDA)
"RTN","RCDPLPL4",354,0)
 Q
"RTN","RCDPLPL4",355,0)
 ;
"RTN","RCDPLPL4",356,0)
GETACTNM(RCACCT) ;
"RTN","RCDPLPL4",357,0)
 N RCACCTL,RCIEN,RCFILE
"RTN","RCDPLPL4",358,0)
 S RCACCTL=""
"RTN","RCDPLPL4",359,0)
 Q:RCACCT="" RCACCTL
"RTN","RCDPLPL4",360,0)
 S RCFILE=$S(RCACCT[";PRCA(430":430,1:2)
"RTN","RCDPLPL4",361,0)
 S RCIEN=$P(RCACCT,";")
"RTN","RCDPLPL4",362,0)
 S RCACCTL=$$GET1^DIQ(RCFILE,RCIEN_",",".01","E")
"RTN","RCDPLPL4",363,0)
 S:$L(RCACCTL,"-")>1 RCACCTL=$P(RCACCTL,"-",2)
"RTN","RCDPLPL4",364,0)
 Q RCACCTL
"RTN","RCDPLPL4",365,0)
 ;
"RTN","RCDPLPL4",366,0)
 ;Update the suspense comment
"RTN","RCDPLPL4",367,0)
UPDCMT(RCRECTDA,RCTRANDA,RCCMT) ;
"RTN","RCDPLPL4",368,0)
 ;
"RTN","RCDPLPL4",369,0)
 N DR,DIE,DA,DTOUT
"RTN","RCDPLPL4",370,0)
 S DR="1.02///"_RCCMT_";" S DIE="^RCY(344,"_RCRECTDA_",1,"
"RTN","RCDPLPL4",371,0)
 S DA=RCTRANDA,DA(1)=RCRECTDA
"RTN","RCDPLPL4",372,0)
 D ^DIE
"RTN","RCDPLPL4",373,0)
 ;Update comment history - PRCA*4.5*321
"RTN","RCDPLPL4",374,0)
 D AUDIT^RCDPECH(RCRECTDA,RCTRANDA,"","")
"RTN","RCDPLPL4",375,0)
 Q
"RTN","RCDPLPL4",376,0)
 ;
"RTN","RCDPLPL4",377,0)
 ;Process and update the payment amounts
"RTN","RCDPLPL4",378,0)
 ;Note:  some of the code and logic below is also in tag PROCESS^RCDPLPL3.  
"RTN","RCDPLPL4",379,0)
 ;       If changes in logic are made below, please review this tag as well.
"RTN","RCDPLPL4",380,0)
PROCESS(RCRECTDA,RCTRANDA,RCTDNM) ;
"RTN","RCDPLPL4",381,0)
 ;
"RTN","RCDPLPL4",382,0)
 N RCERROR
"RTN","RCDPLPL4",383,0)
 S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",384,0)
 ;  an error occurred during processing a payment
"RTN","RCDPLPL4",385,0)
 I RCERROR D  Q
"RTN","RCDPLPL4",386,0)
 . W !
"RTN","RCDPLPL4",387,0)
 . W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL4",388,0)
 . W !,"|  An ERROR has occurred when processing payment ",RCTRANDA," on receipt ",$P(^RCY(344,RCRECTDA,0),"^"),".",?79,"|"
"RTN","RCDPLPL4",389,0)
 . W !,"|  The error message returned during processing is:",?79,"|"
"RTN","RCDPLPL4",390,0)
 . W !,"|",?79,"|"
"RTN","RCDPLPL4",391,0)
 . W !,"|  ",$P(RCERROR,"^",2),?79,"|"
"RTN","RCDPLPL4",392,0)
 . W !,"|",?79,"|"
"RTN","RCDPLPL4",393,0)
 . W !,"|  You will need to correct the error before you can link the payment.",?79,"|"
"RTN","RCDPLPL4",394,0)
 . W !,"+------------------------------------------------------------------------------+"
"RTN","RCDPLPL4",395,0)
 . W !
"RTN","RCDPLPL4",396,0)
 . D DELEACCT^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",397,0)
 . W !,"Account "_RCTDNM_" was deleted and not linked."
"RTN","RCDPLPL4",398,0)
 ;
"RTN","RCDPLPL4",399,0)
 ;File entry in Audit Log
"RTN","RCDPLPL4",400,0)
 D AUDIT^RCBEPAY(RCRECTDA,RCTRANDA,"P")
"RTN","RCDPLPL4",401,0)
 ;
"RTN","RCDPLPL4",402,0)
 ; Update Suspense Status
"RTN","RCDPLPL4",403,0)
 D SUSPDIS^RCBEPAY(RCRECTDA,RCTRANDA,"PD")
"RTN","RCDPLPL4",404,0)
 ;
"RTN","RCDPLPL4",405,0)
 I $E(RCSTATUS)="A" D
"RTN","RCDPLPL4",406,0)
 . ;  send mail message to the RCDP PAYMENTS mail group
"RTN","RCDPLPL4",407,0)
 . D MAILMSG^RCDPLPSR(RCRECTDA,RCTRANDA)
"RTN","RCDPLPL4",408,0)
 . ;  place an x in the fms doc field so it will show on the
"RTN","RCDPLPL4",409,0)
 . ;  suspense report
"RTN","RCDPLPL4",410,0)
 . D EDITFMS^RCDPURET(RCRECTDA,RCTRANDA,"x")
"RTN","RCDPLPL4",411,0)
 Q
"RTN","RCDPLPL4",412,0)
 ;
"RTN","RCDPLPL4",413,0)
 ;Display end of processing message.
"RTN","RCDPLPL4",414,0)
ENDMSG(RCSTATUS) ;
"RTN","RCDPLPL4",415,0)
 ;
"RTN","RCDPLPL4",416,0)
 I $E(RCSTATUS)="A" D
"RTN","RCDPLPL4",417,0)
 . W !,"Since the FMS cash receipt document is Accepted in FMS, you need to go"
"RTN","RCDPLPL4",418,0)
 . W !,"online in FMS and transfer the amount paid out of the station's suspense"
"RTN","RCDPLPL4",419,0)
 . W !,"account.",!
"RTN","RCDPLPL4",420,0)
 . W !,"Mail message(s) sent to RCDP PAYMENTS mail group.",!
"RTN","RCDPLPL4",421,0)
 I $E(RCSTATUS)'="A" D
"RTN","RCDPLPL4",422,0)
 . W !,"Since the FMS cash receipt document is NOT Accepted in FMS, you can use"
"RTN","RCDPLPL4",423,0)
 . W !,"the option Process Receipt located under the Receipt Processing Menu"
"RTN","RCDPLPL4",424,0)
 . W !,"to regenerate the cash receipt document to FMS.",!
"RTN","RCDPLPL4",425,0)
 Q
"RTN","RCDPLPL4",426,0)
 ;
"RTN","RCDPLPL4",427,0)
 ;Get users answers to questions for reports.
"RTN","RCDPLPL4",428,0)
GETANS(RCIDX) ;
"RTN","RCDPLPL4",429,0)
 N DA,DIR,DTOUT,DUOUT,X,Y,DIRUT,DIROUT
"RTN","RCDPLPL4",430,0)
 ;
"RTN","RCDPLPL4",431,0)
 ; Ask the user what kind of report
"RTN","RCDPLPL4",432,0)
 I RCIDX=1 D
"RTN","RCDPLPL4",433,0)
 . S DIR("?")="Select to Y to review the payments, N to skip the review."
"RTN","RCDPLPL4",434,0)
 . S DIR("A")="Do you want to review the payment list before updating accounts (Y/N)? "
"RTN","RCDPLPL4",435,0)
 ;
"RTN","RCDPLPL4",436,0)
 ; Ask the user for the payer to start the reporting on (Range Option)
"RTN","RCDPLPL4",437,0)
 I RCIDX=2 D
"RTN","RCDPLPL4",438,0)
 . S DIR("?")="Enter Y to update the accounts, N to return to the LP menu"
"RTN","RCDPLPL4",439,0)
 . S DIR("A")="Do you want to update accounts with these payments (Y/N)? "
"RTN","RCDPLPL4",440,0)
 ;
"RTN","RCDPLPL4",441,0)
 S DIR(0)="YA"
"RTN","RCDPLPL4",442,0)
 D ^DIR
"RTN","RCDPLPL4",443,0)
 K DIR
"RTN","RCDPLPL4",444,0)
 I $G(DTOUT)!$G(DUOUT) Q -1
"RTN","RCDPLPL4",445,0)
 Q Y
"RTN","RCDPLPL4",446,0)
 ;
"RTN","RCDPLPL4",447,0)
 ;Retrieve the review response question from the user
"RTN","RCDPLPL4",448,0)
GETANS1() ;
"RTN","RCDPLPL4",449,0)
 ;
"RTN","RCDPLPL4",450,0)
 N FLG,X,Y
"RTN","RCDPLPL4",451,0)
 S FLG=0,Y=0
"RTN","RCDPLPL4",452,0)
 F  D  Q:FLG=1
"RTN","RCDPLPL4",453,0)
 . R !,"Do you want to review the payment list before updating accounts (Y/N)? ",X:DTIME
"RTN","RCDPLPL4",454,0)
 . ;I $G(DTOUT) S FLG=1 Q    ;If it times out, treat it like a No and go to the next prompt.
"RTN","RCDPLPL4",455,0)
 . I X="" W !,"Enter Y or N to continue." Q
"RTN","RCDPLPL4",456,0)
 . I X["?" W !,"Select to Y to review the payments, N to skip the review." Q
"RTN","RCDPLPL4",457,0)
 . S X=$$UP^XLFSTR(X)
"RTN","RCDPLPL4",458,0)
 . I X="Y" S Y=1,FLG=1 Q
"RTN","RCDPLPL4",459,0)
 . I X="N" S Y=0,FLG=1 Q
"RTN","RCDPLPL4",460,0)
 . W !,"Select to Y to review the payments, N to skip the review."
"RTN","RCDPLPL4",461,0)
 Q Y
"RTN","RCDPLPL4",462,0)
 ;
"RTN","RCDPLPL4",463,0)
 ;Is the amount entered < the amount owed. (AR ACCOUNTS ONLY, NO DEBTORS)
"RTN","RCDPLPL4",464,0)
PAYCHK(RCACCT,RCAMT) ;
"RTN","RCDPLPL4",465,0)
 ;
"RTN","RCDPLPL4",466,0)
 N OWED,FLG
"RTN","RCDPLPL4",467,0)
 ;
"RTN","RCDPLPL4",468,0)
 S FLG=0
"RTN","RCDPLPL4",469,0)
 ; account is the debtor account. No need to check...
"RTN","RCDPLPL4",470,0)
 Q:RCACCT'["PRCA" 1
"RTN","RCDPLPL4",471,0)
 ;  calculate amount owed for a bill
"RTN","RCDPLPL4",472,0)
 S OWED=$G(^PRCA(430,+RCACCT,7))
"RTN","RCDPLPL4",473,0)
 S OWED=$P(OWED,"^")+$P(OWED,"^",2)+$P(OWED,"^",3)+$P(OWED,"^",4)+$P(OWED,"^",5)
"RTN","RCDPLPL4",474,0)
 I RCAMT>OWED W !,"The requested payment is greater than then amount owed please try again.",! Q FLG
"RTN","RCDPLPL4",475,0)
 S FLG=1
"RTN","RCDPLPL4",476,0)
 Q FLG
"RTN","RCDPPLB")
0^30^B197182060
"RTN","RCDPPLB",1,0)
RCDPPLB ;ALB/TJB - ERA/PROVIDER LEVEL ADJUSTMENTS REPORT ;1/02/15 10:00am
"RTN","RCDPPLB",2,0)
 ;;4.5;Accounts Receivable;**303,321**;Mar 20, 1995;Build 48
"RTN","RCDPPLB",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPPLB",4,0)
 Q
"RTN","RCDPPLB",5,0)
 ; PRCA*4.5*303 - ERA/PROVIDER LEVEL ADJUSTMENTS REPORT 
"RTN","RCDPPLB",6,0)
 ;
"RTN","RCDPPLB",7,0)
 ; DESCRIPTION : The following generates a report to display ERA data with PLB
"RTN","RCDPPLB",8,0)
 ;     data details. The report is ad-hoc and allow the user to extract report
"RTN","RCDPPLB",9,0)
 ;     data, as well as view and manage refund requests for all PLB adjustment
"RTN","RCDPPLB",10,0)
 ;     codes (FB, WO, 72, IR, J1, L6, CS, WU, etc.):
"RTN","RCDPPLB",11,0)
 ;
"RTN","RCDPPLB",12,0)
EN ; Entry point for Report
"RTN","RCDPPLB",13,0)
 N %ZIS,CD,CRHDR,CZ,DIVHDR,DUOUT,DTOUT,DIR,DTOK,DL,DX0,EXLN,FILE,I,IEN,IDX,IX,JJ,KK,PCT,POP,PY,R,RCCD,RCODE
"RTN","RCDPPLB",14,0)
 N RCDET,RCDISP,RCDONE,RCDT1,RCDT2,RCDET,RCDONE,RCEXCEL,RCHR,RCJOB,RCPG,RCTLIST,RCRD,RCNOW,RCLPAY,RCPAY
"RTN","RCDPPLB",15,0)
 N RCQUIT,RCSORT,RCSTAT,RCTIN,TY,X,XCNT,Y,Z,ZN,ZPPY,ZPY,ZTDESC,ZTRTN,ZTSAVE,ZTSK,ZTSTOP,ZZ,ZZPNAME
"RTN","RCDPPLB",16,0)
 S RCQUIT=0,RCODE="" ; Global variable to signal exit
"RTN","RCDPPLB",17,0)
 ;
"RTN","RCDPPLB",18,0)
 ; ICR 1077 - Get division/station
"RTN","RCDPPLB",19,0)
 D DIVISION^VAUTOMA
"RTN","RCDPPLB",20,0)
 I 'VAUTD&($D(VAUTD)'=11) G PLBQ
"RTN","RCDPPLB",21,0)
 S DIR("A")="(S)ummary or(D)etail Report format? ",DIR(0)="SA^S:Summary Information only;D:Detail and Totals"
"RTN","RCDPPLB",22,0)
 S DIR("B")="SUMMARY" D ^DIR K DIR
"RTN","RCDPPLB",23,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G PLBQ
"RTN","RCDPPLB",24,0)
 S RCDET=(Y="D")
"RTN","RCDPPLB",25,0)
 ;
"RTN","RCDPPLB",26,0)
 ; Get PLB Codes for report
"RTN","RCDPPLB",27,0)
 D PLBC(.RCODE) G:$G(RCODE)']"" PLBQ
"RTN","RCDPPLB",28,0)
 ; Payer Names from 344.6
"RTN","RCDPPLB",29,0)
 S RCDONE=$$GETPAY^RCDPRU(.RCPAY) G:RCDONE=0 PLBQ
"RTN","RCDPPLB",30,0)
 S:$G(RCPAY("DATA"))'="" RCPAY=$G(RCPAY("DATA"))
"RTN","RCDPPLB",31,0)
 ;
"RTN","RCDPPLB",32,0)
 S RCDONE=$$GETTIN^RCDPRU(.RCTIN) G:RCDONE=0 PLBQ
"RTN","RCDPPLB",33,0)
 S:$G(RCTIN("DATA"))'="" RCTIN=$G(RCTIN("DATA"))
"RTN","RCDPPLB",34,0)
 ;
"RTN","RCDPPLB",35,0)
 S DIR("A")="Sort Report (C)odes or (P)ayer?: ",DIR(0)="SA^C:PLB Codes;P:Payer Name;CODES:PLB Codes"
"RTN","RCDPPLB",36,0)
 S DIR("B")="CODES" D ^DIR K DIR
"RTN","RCDPPLB",37,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G PLBQ
"RTN","RCDPPLB",38,0)
 S RCSORT=$E(Y,1)
"RTN","RCDPPLB",39,0)
 ;
"RTN","RCDPPLB",40,0)
 S DIR("?")="Enter the Beginning date for the report"
"RTN","RCDPPLB",41,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: ",DIR("B")="T" D ^DIR K DIR
"RTN","RCDPPLB",42,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G PLBQ
"RTN","RCDPPLB",43,0)
 S RCDT1=Y
"RTN","RCDPPLB",44,0)
 S DIR("?")="Enter the end date for the report"
"RTN","RCDPPLB",45,0)
 S DIR("B")="T"
"RTN","RCDPPLB",46,0)
 S DIR(0)="DAO^"_RCDT1_":"_DT_":APE",DIR("A")="End Date: " D ^DIR K DIR
"RTN","RCDPPLB",47,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G PLBQ
"RTN","RCDPPLB",48,0)
 S RCDT2=Y
"RTN","RCDPPLB",49,0)
 S DTOK=$$CHECKDT^RCDPRU(RCDT1,RCDT2,344.4)
"RTN","RCDPPLB",50,0)
 I 'DTOK W !!,"*** Note: Date Range "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2)," ***",! W "*** No Records found ***",! D ASK^RCDPRU(.RCQUIT) G PLBQ
"RTN","RCDPPLB",51,0)
 ; Removed Excel per Susan on 03/24/2015 meeting
"RTN","RCDPPLB",52,0)
 ; Get input to export to excel.
"RTN","RCDPPLB",53,0)
 S RCEXCEL=""
"RTN","RCDPPLB",54,0)
 ;S RCEXCEL=$$DISPTY^RCDPRU()
"RTN","RCDPPLB",55,0)
 ;D:RCEXCEL INFO^RCDPRU
"RTN","RCDPPLB",56,0)
 ;
"RTN","RCDPPLB",57,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","RCDPPLB",58,0)
 I $D(IO("Q")) D  Q
"RTN","RCDPPLB",59,0)
 . S ZTRTN="ENQ^RCDPARC",ZTDESC="AR - 835 Provider Adjustment & Payer Data Report",ZTSAVE("*")=""
"RTN","RCDPPLB",60,0)
 . D ^%ZTLOAD
"RTN","RCDPPLB",61,0)
 . W !!,$S($D(ZTSK):"Your task number"_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","RCDPPLB",62,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","RCDPPLB",63,0)
 U IO
"RTN","RCDPPLB",64,0)
 ;
"RTN","RCDPPLB",65,0)
ENQ ; Start here for queued report
"RTN","RCDPPLB",66,0)
 S RCNOW=$$NOW^RCDPRU(),RCPG=0,$P(RCHR,"=",IOM)=""
"RTN","RCDPPLB",67,0)
 ;
"RTN","RCDPPLB",68,0)
 K ^TMP("RCDPPLB_REPORT",$J)
"RTN","RCDPPLB",69,0)
 ; Collect the data and put it into the ^TMP global
"RTN","RCDPPLB",70,0)
 D GETDATA($G(RCODE),.RCPAY,.RCTIN,$G(RCSORT),RCDT1,RCDT2,$NA(^TMP("RCDPPLB_REPORT",$J)),.VAUTD)
"RTN","RCDPPLB",71,0)
 ;
"RTN","RCDPPLB",72,0)
REPORT ; Print out the report
"RTN","RCDPPLB",73,0)
 ; Set up Division Header Text and PLB Code Header Text
"RTN","RCDPPLB",74,0)
 S RCSL=0
"RTN","RCDPPLB",75,0)
 S:VAUTD=1 DIVHDR="ALL" D:VAUTD=0
"RTN","RCDPPLB",76,0)
 . N I S DIVHDR="",I="" F  S I=$O(VAUTD(I)) Q:I=""  S:DIVHDR'="" DIVHDR=DIVHDR_", "_VAUTD(I) S:DIVHDR="" DIVHDR=VAUTD(I)
"RTN","RCDPPLB",77,0)
 S CRHDR=RCODE
"RTN","RCDPPLB",78,0)
 ; Trim information so it will fit on an 80 or IOM character line
"RTN","RCDPPLB",79,0)
 D:($L(DIVHDR)+$L(CRHDR))>(IOM-25)
"RTN","RCDPPLB",80,0)
 . N VAL,DH,CH,R1,R2 S DH=0,CH=0,R1=0,R2=0,VAL=(IOM-25)\2 ; get half of the screen length
"RTN","RCDPPLB",81,0)
 . S:$L(DIVHDR)>VAL DH=1 S:$L(CRHDR)>VAL CH=1 S:DH=0 R1=VAL-$L(DIVHDR) S:CH=0 R2=VAL-$L(CRHDR)
"RTN","RCDPPLB",82,0)
 . I $L(DIVHDR)>(VAL+R2) S DIVHDR=$E(DIVHDR,1,(VAL+R2))_"..."
"RTN","RCDPPLB",83,0)
 . I $L(CRHDR)>(VAL+R1) S CRHDR=$E(CRHDR,1,(VAL+R2))_"..."
"RTN","RCDPPLB",84,0)
 ;
"RTN","RCDPPLB",85,0)
 I 'RCEXCEL D
"RTN","RCDPPLB",86,0)
 . S RCPG=RCPG+1 W @IOF
"RTN","RCDPPLB",87,0)
 . D HDRP($$HDR(RCDET),1,"Page: "_RCPG_" ")
"RTN","RCDPPLB",88,0)
 . D HDRP("SORT by "_$S($E(RCSORT,1)="C":"PLB CODES",1:"PAYER NAMES")_"  REPORT RUN DATE: "_RCNOW,1)
"RTN","RCDPPLB",89,0)
 . D HDRP("DIVISION: "_DIVHDR_" Codes: "_CRHDR,1)
"RTN","RCDPPLB",90,0)
 . D HDRP("835 PAYERS: "_$S(RCPAY="ALL":"ALL",1:"Selected")_" 835 PAYER TINs: "_$S($E(RCTIN)="A":"ALL",1:"Selected"),1)
"RTN","RCDPPLB",91,0)
 . D HDRP("EOB PAID DATE RANGE: "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2),1)
"RTN","RCDPPLB",92,0)
 . W !,RCHR,!
"RTN","RCDPPLB",93,0)
 E  D
"RTN","RCDPPLB",94,0)
 . ; Excel Report
"RTN","RCDPPLB",95,0)
 . W "CODE^PAYER^TIN^REP_DATE^AMOUNT",!
"RTN","RCDPPLB",96,0)
 ;
"RTN","RCDPPLB",97,0)
 S $P(ZLN,"-",80)="",$P(ZDLN,"=",80)="",$P(ZLN2,"-",78)="",ZLN2="  "_ZLN2,RCSL=7
"RTN","RCDPPLB",98,0)
 ; Do Grand totals first - per Susan 7/16/2015
"RTN","RCDPPLB",99,0)
 S DX0=$G(^TMP("RCDPPLB_REPORT",$J,"TOTALS")),PCT=0
"RTN","RCDPPLB",100,0)
 S:+$P(DX0,U,5)'=0 PCT=$J(($P(DX0,U,1)/$P(DX0,U,5))*100,3,0)
"RTN","RCDPPLB",101,0)
 S:+$P(DX0,U,5)=0 PCT="ERR"
"RTN","RCDPPLB",102,0)
 I RCSL>=(IOSL-4) S RCQUIT=$$NEWPG(.RCPG,1,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",103,0)
 W ! S RCSL=RCSL+1
"RTN","RCDPPLB",104,0)
 W "GRAND TOTALS FOR ALL PLB CODES & PAYERS ON REPORT",! S RCSL=RCSL+1
"RTN","RCDPPLB",105,0)
 W "   TOTAL #ERAs:  ",$J($P(DX0,U,3),6,0),"  ADJ: ",PCT,"% [TOT AMT ADJUSTED / TOT AMT BILLED]",! S RCSL=RCSL+1
"RTN","RCDPPLB",106,0)
 W "   AMT ADJUST: $",$J($P(DX0,U,1),11,2),"  AMT BILLED: $",$J($P(DX0,U,5),11,2),"  AMT PAID: $",$J($P(DX0,U,2),11,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",107,0)
 W !,ZDLN,!! S RCSL=RCSL+1
"RTN","RCDPPLB",108,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) G:RCQUIT PLBQ
"RTN","RCDPPLB",109,0)
 ;
"RTN","RCDPPLB",110,0)
 S ZZ="" F  S ZZ=$O(^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ)) Q:ZZ=""  S ZDAT=^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ) D  Q:RCQUIT
"RTN","RCDPPLB",111,0)
 . D:RCSORT="C"  Q:RCQUIT
"RTN","RCDPPLB",112,0)
 .. W "ADJ CODE: ",ZZ,"  # ERAs: ",$J($P(ZDAT,U,3),5),"  ADJ: ",$S(+$P(ZDAT,U,5)>0:$J((($P(ZDAT,U,1)/$P(ZDAT,U,5))*100),3,0),1:"ERR"),"% [TOT AMT ADJUSTED / TOT AMT BILLED]",! S RCSL=RCSL+1
"RTN","RCDPPLB",113,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",114,0)
 .. W "   AMT ADJUST: ",$J($P(ZDAT,U,1),8,2),"  AMT BILLED: ",$J($P(ZDAT,U,5),9,2),"  AMT PAID: ",$J($P(ZDAT,U,2),9,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",115,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",116,0)
 .. W "ADJ CODE TEXT: ",$P(ZDAT,U,4),! S RCSL=RCSL+1
"RTN","RCDPPLB",117,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",118,0)
 .. W ZLN,! S RCSL=RCSL+1
"RTN","RCDPPLB",119,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",120,0)
 .. S PY="",CZ=0 F  S PY=$O(^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ,PY)) Q:PY=""  S ZPY=^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ,PY) D  Q:RCQUIT  S CZ=CZ+1
"RTN","RCDPPLB",121,0)
 ... S:+($P(ZPY,U,5))'=0 ZPPY=$J((($P(ZPY,U,1)/$P(ZPY,U,5))*100),3,0)
"RTN","RCDPPLB",122,0)
 ... S:+($P(ZPY,U,5))=0 ZPPY="ERR"
"RTN","RCDPPLB",123,0)
 ... I CZ>0 W ZLN2,! S RCSL=RCSL+1
"RTN","RCDPPLB",124,0)
 ... W " PAYER NAME/TIN",!
"RTN","RCDPPLB",125,0)
 ... S RCSL=RCSL+1
"RTN","RCDPPLB",126,0)
 ... W " ",$$PAYTIN^RCDPRU2(PY,76),! ; PRCA*4.5*321
"RTN","RCDPPLB",127,0)
 ... S RCSL=RCSL+1                   ; PRCA*4.5*321
"RTN","RCDPPLB",128,0)
 ... I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",129,0)
 ... W "  #ERAs: ",$J($P(ZPY,U,3),4),"  ADJ: ",ZPPY,"% [ADJ: ",$J($P(ZPY,U,1),8,2),"/ BILLED: ",$J($P(ZPY,U,5),9,2),"] PAID: ",$J($P(ZPY,U,2),9,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",130,0)
 ... D:RCDET DETAIL(RCSORT,ZZ,PY,$NA(^TMP("RCDPPLB_REPORT",$J))) Q:RCQUIT
"RTN","RCDPPLB",131,0)
 .. W:'RCQUIT ZLN,! S RCSL=RCSL+1
"RTN","RCDPPLB",132,0)
 . D:RCSORT="P"  Q:RCQUIT
"RTN","RCDPPLB",133,0)
 .. W " PAYER NAME/TIN",!
"RTN","RCDPPLB",134,0)
 .. S RCSL=RCSL+1
"RTN","RCDPPLB",135,0)
 .. W " ",$$PAYTIN^RCDPRU2(ZZ,76),! ; PRCA*4.5*321
"RTN","RCDPPLB",136,0)
 .. S RCSL=RCSL+1                   ; PRCA*4.5*321
"RTN","RCDPPLB",137,0)
 .. ; PRCA*4.5*321 End modified code block
"RTN","RCDPPLB",138,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",139,0)
 .. W "# ERAs:",$J($P(ZDAT,U,3),5),"  ADJ: ",$S(+$P(ZDAT,U,5)>0:$J((($P(ZDAT,U,1)/$P(ZDAT,U,5))*100),3,0),1:"ERR"),"% [AMT ADJ:",$J($P(ZDAT,U,1),8,2),"/ BILLED:",$J($P(ZDAT,U,5),9,2),"] PAID:",$J($P(ZDAT,U,2),9,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",140,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",141,0)
 .. W ZLN,! S RCSL=RCSL+1
"RTN","RCDPPLB",142,0)
 .. I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",143,0)
 .. S PY="",CZ=0 F  S PY=$O(^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ,PY)) Q:PY=""  S ZPY=^TMP("RCDPPLB_REPORT",$J,"SUMMARY",ZZ,PY) D  Q:RCQUIT  S CZ=CZ+1
"RTN","RCDPPLB",144,0)
 ... S ZPPY=$S(+$P(ZPY,U,5)'=0:$J((($P(ZPY,U,1)/$P(ZPY,U,5))*100),3,0),1:"ERR")
"RTN","RCDPPLB",145,0)
 ... I CZ>0 W ZLN2,! S RCSL=RCSL+1
"RTN","RCDPPLB",146,0)
 ... W "  ADJ CODE: ",PY,"  ADJ CODE TXT: ",$P(ZPY,U,4),! S RCSL=RCSL+1
"RTN","RCDPPLB",147,0)
 ... I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",148,0)
 ... W "  #ERAs: ",$J($P(ZPY,U,3),4),"  ADJ: ",ZPPY,"% [ADJ: ",$J($P(ZPY,U,1),8,2),"/ BILLED: ",$J($P(ZPY,U,5),9,2),"] PAID: ",$J($P(ZPY,U,2),9,2),! S RCSL=RCSL+1
"RTN","RCDPPLB",149,0)
 ... D:RCDET DETAIL(RCSORT,ZZ,PY,$NA(^TMP("RCDPPLB_REPORT",$J))) Q:RCQUIT
"RTN","RCDPPLB",150,0)
 .. I 'RCQUIT W ZLN,! S RCSL=RCSL+1
"RTN","RCDPPLB",151,0)
 D:'RCQUIT ASK^RCDPRU(.RCQUIT)
"RTN","RCDPPLB",152,0)
PLBQ ;
"RTN","RCDPPLB",153,0)
 K RCQUIT,VAUTD,ZDAT,ZLN,ZDLN,ZLN2
"RTN","RCDPPLB",154,0)
 K ^TMP("RCDPPLB_REPORT",$J)
"RTN","RCDPPLB",155,0)
 Q
"RTN","RCDPPLB",156,0)
 ;
"RTN","RCDPPLB",157,0)
 ; SORT = by CODES or Payer; CAT = CODE or Payer/TIN to lookup
"RTN","RCDPPLB",158,0)
 ; DET = Second subscipt either Payer/TIN if Sort="C" or PLB Code if Sort="P"; ZGBL = Global to use through indirection
"RTN","RCDPPLB",159,0)
DETAIL(SORT,CAT,DET,ZGBL) ; Detail Report
"RTN","RCDPPLB",160,0)
 N ZLN1,ZFS,ZZ,ZDET,ZDZN,ZPCT,ZADJ,ZBIL,ZPD S $P(ZLN1,"-",77)="-",ZLN1="  "_ZLN1
"RTN","RCDPPLB",161,0)
 S ZFS=$S(SORT="C":"ERA",1:"PAYR")
"RTN","RCDPPLB",162,0)
 W ZLN1,! S RCSL=RCSL+1
"RTN","RCDPPLB",163,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",164,0)
 W "  #ERA        DATE     %ADJ    ADJUST       BILLED       PAID      CHECK#",! S RCSL=RCSL+1
"RTN","RCDPPLB",165,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",166,0)
 W "     TRACE#",! S RCSL=RCSL+1
"RTN","RCDPPLB",167,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",168,0)
 ;W "       COMMENTS ",! S RCSL=RCSL+1
"RTN","RCDPPLB",169,0)
 W "     REFERENCE#",! S RCSL=RCSL+1
"RTN","RCDPPLB",170,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",171,0)
 S ZZ="" F  S ZZ=$O(@ZGBL@(ZFS,CAT,ZZ)) Q:ZZ=""  S ZDZN=@ZGBL@(ZFS,CAT,ZZ,0) D  Q:RCQUIT
"RTN","RCDPPLB",172,0)
 . S ZDET=$$GETDT(SORT,CAT,DET,ZDZN,ZGBL)
"RTN","RCDPPLB",173,0)
 . Q:ZDET'=DET  ; If this isn't the same then skip
"RTN","RCDPPLB",174,0)
 . S ZADJ=$$DAMT("A",$S(SORT="C":CAT,1:DET),$P(ZDZN,U,1),ZFS,ZGBL),ZBIL=$$DAMT("B",CAT,$P(ZDZN,U,1),ZFS,ZGBL),ZPD=$$DAMT("P",CAT,$P(ZDZN,U,1),ZFS,ZGBL)
"RTN","RCDPPLB",175,0)
 . S ZPCT=$S(ZBIL'=0:$J(((ZADJ/ZBIL)*100),3,0),1:"ERR")
"RTN","RCDPPLB",176,0)
 . W $J($P(ZDZN,U,1),9),?12,$$DATE^RCDPRU($P(ZDZN,U,4)),?23,$J(ZPCT,3,0),?29,$J(ZADJ,9,2),?42,$J(ZBIL,9,2),?54,$J(ZPD,9,2),?68,$P(ZDZN,U,13),! S RCSL=RCSL+1
"RTN","RCDPPLB",177,0)
 . I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",178,0)
 . W ?9,$P(ZDZN,U,2),! S RCSL=RCSL+1 ; Trace
"RTN","RCDPPLB",179,0)
 . I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",180,0)
 . W ?9,$$DTCM(CAT,$P(ZDZN,U,1),ZFS,ZGBL),! S RCSL=RCSL+1 ; Reference #
"RTN","RCDPPLB",181,0)
 Q:RCQUIT
"RTN","RCDPPLB",182,0)
 I RCSL>=(IOSL-2) S RCQUIT=$$NEWPG(.RCPG,0,.RCSL,RCSORT) Q:RCQUIT
"RTN","RCDPPLB",183,0)
 ;W ZLN1,! S RCSL=RCSL+1
"RTN","RCDPPLB",184,0)
 Q
"RTN","RCDPPLB",185,0)
 ;
"RTN","RCDPPLB",186,0)
GETDT(SORT,CAT,DT,ZND,ZGBL) ; Get detail information for this entry
"RTN","RCDPPLB",187,0)
 N MYDT,MM
"RTN","RCDPPLB",188,0)
 S MYDT=""
"RTN","RCDPPLB",189,0)
 I SORT="C" Q $P(ZND,U,6)_"/"_$P(ZND,U,3)
"RTN","RCDPPLB",190,0)
 ; Otherwise we have a payer sort and need to do more work
"RTN","RCDPPLB",191,0)
 S MM=0.11 F  S MM=$O(@ZGBL@("00_ERA",$P(ZND,U,1),MM)) Q:MM=""  I $P(@ZGBL@("00_ERA",$P(ZND,U,1),MM),U,1)=DT S MYDT=$P(@ZGBL@("00_ERA",$P(ZND,U,1),MM),U,1) Q
"RTN","RCDPPLB",192,0)
 Q MYDT
"RTN","RCDPPLB",193,0)
 ;
"RTN","RCDPPLB",194,0)
 ; Get the type of amount from the ^TMP global
"RTN","RCDPPLB",195,0)
DAMT(TYPE,FIRST,ZIEN,XFS,XGBL) ; Get amounts
"RTN","RCDPPLB",196,0)
 N ZAMT,XDN S ZAMT=0
"RTN","RCDPPLB",197,0)
 ; Adjustment amount
"RTN","RCDPPLB",198,0)
 I TYPE="A" D  Q ZAMT
"RTN","RCDPPLB",199,0)
 . S AA=0.1 F  S AA=$O(@XGBL@("00_ERA",ZIEN,AA)) Q:AA=""  D
"RTN","RCDPPLB",200,0)
 .. Q:$P(@XGBL@("00_ERA",ZIEN,AA),U,1)'=FIRST  ; Not the correct record
"RTN","RCDPPLB",201,0)
 .. ; Otherwise we have the right record get the adjustment amount
"RTN","RCDPPLB",202,0)
 .. S ZAMT=ZAMT+$P(@XGBL@("00_ERA",ZIEN,AA),U,2)
"RTN","RCDPPLB",203,0)
 ; Total billed on ERA
"RTN","RCDPPLB",204,0)
 I TYPE="B" Q @XGBL@("00_ERA",ZIEN,0.1)
"RTN","RCDPPLB",205,0)
 ; Paid Amount
"RTN","RCDPPLB",206,0)
 I TYPE="P" Q $P(@XGBL@("00_ERA",ZIEN,0),U,5)
"RTN","RCDPPLB",207,0)
 Q ZAMT
"RTN","RCDPPLB",208,0)
 ;
"RTN","RCDPPLB",209,0)
DTCM(FIRST,ZIEN,XFS,XGBL) ; Get comment or reference number
"RTN","RCDPPLB",210,0)
 N AA,XDN,ZCM
"RTN","RCDPPLB",211,0)
 S XDN=0,ZCM=""
"RTN","RCDPPLB",212,0)
 D
"RTN","RCDPPLB",213,0)
 . S AA=0.1 F  S AA=$O(@XGBL@("00_ERA",ZIEN,AA)) Q:AA=""!(XDN=1)  D
"RTN","RCDPPLB",214,0)
 .. Q:$P(@XGBL@("00_ERA",ZIEN,AA),U,1)'=FIRST  ; Not the correct record
"RTN","RCDPPLB",215,0)
 .. ; Otherwise we have the right record get the adjustment amount
"RTN","RCDPPLB",216,0)
 .. S ZCM=$P(@XGBL@("00_ERA",ZIEN,AA),U,3),XDN=1
"RTN","RCDPPLB",217,0)
 Q ZCM
"RTN","RCDPPLB",218,0)
 ;
"RTN","RCDPPLB",219,0)
HDR(CD) ; Report header
"RTN","RCDPPLB",220,0)
 Q:CD "EDI LOCKBOX 835 PROVIDER LEVEL ADJUSTMENT (PLB) REPORT - DETAIL"
"RTN","RCDPPLB",221,0)
 Q "EDI LOCKBOX 835 PROVIDER LEVEL ADJUSTMENT (PLB) REPORT - SUMMARY"
"RTN","RCDPPLB",222,0)
 ;
"RTN","RCDPPLB",223,0)
HDRP(Z,X,Z1) ; Print Header (Z=String, X=1 (line feed) X=0 (no LF), Z1 (page number right justified)
"RTN","RCDPPLB",224,0)
 N LGT S LGT=$L(Z)+$L($G(Z1))
"RTN","RCDPPLB",225,0)
 I $G(X)=1 W !
"RTN","RCDPPLB",226,0)
 W ?(IOM-LGT\2),Z W:$G(Z1)]"" ?(IOM-$L(Z1)),Z1
"RTN","RCDPPLB",227,0)
 Q
"RTN","RCDPPLB",228,0)
 ;
"RTN","RCDPPLB",229,0)
NEWPG(RCPG,RCNEW,RCSL,CD) ; Check for new page needed, output header
"RTN","RCDPPLB",230,0)
 ; RCPG = Page number passwd by referece
"RTN","RCDPPLB",231,0)
 ; RCNEW = 1 to force new page
"RTN","RCDPPLB",232,0)
 ; RCSL = page length passed by reference
"RTN","RCDPPLB",233,0)
 ; Function returns 1 if user chooses to stop output
"RTN","RCDPPLB",234,0)
 N ZSTOP S ZSTOP=0
"RTN","RCDPPLB",235,0)
 I RCNEW!'RCPG!(($Y+5)>IOSL) D
"RTN","RCDPPLB",236,0)
 . D:RCPG ASK^RCDPRU(.ZSTOP) Q:ZSTOP
"RTN","RCDPPLB",237,0)
 . S RCPG=RCPG+1 W @IOF
"RTN","RCDPPLB",238,0)
 . D HDRP($$HDR(RCDET),1,"Page: "_RCPG)
"RTN","RCDPPLB",239,0)
 . D HDRP("SORT by "_$S($E(CD,1)="C":"PLB CODES",1:"PAYER NAMES")_"  REPORT RUN DATE: "_RCNOW,1)
"RTN","RCDPPLB",240,0)
 . D HDRP("DIVISION: "_DIVHDR_" Codes: "_CRHDR,1)
"RTN","RCDPPLB",241,0)
 . D HDRP("835 PAYERS: "_$S(RCPAY="ALL":"ALL",1:"Selected")_" 835 PAYER TINs: "_$S(RCTIN="A":"ALL",1:"Selected"),1)
"RTN","RCDPPLB",242,0)
 . D HDRP("Date Range: "_$$DATE^RCDPRU(RCDT1)_" - "_$$DATE^RCDPRU(RCDT2),1)
"RTN","RCDPPLB",243,0)
 . W !,RCHR,! S RCSL=7
"RTN","RCDPPLB",244,0)
 Q ZSTOP
"RTN","RCDPPLB",245,0)
 ;
"RTN","RCDPPLB",246,0)
 ; Get data for report and apply filters if necessary
"RTN","RCDPPLB",247,0)
GETDATA(GPLB,GPAYER,GTIN,GSORT,GSTART,GSTOP,GARRAY,GDIV) ;
"RTN","RCDPPLB",248,0)
 N SDT,IEN,CD,CNT,IX,ZX,XY,RM,PARR,PNARR,PTARR,RCSET,GLINE,ZN,ZED,ZEN,ZPAY,ZTIN,ZDESC,ZZ,RCERR,RCGX,RCEB,EOBTOT,STA,STNUM,STNAM,ZLVL
"RTN","RCDPPLB",249,0)
 S SDT=$O(^RCY(344.4,"AC",GSTART),-1)
"RTN","RCDPPLB",250,0)
 S ZLVL=$S(GSORT="C":"ERA",1:"PAYR")
"RTN","RCDPPLB",251,0)
 ; Set up arrays for filtering on PLB, PAYER name and Payer TINs
"RTN","RCDPPLB",252,0)
 D RNG^RCDPRU("PLB",.GPLB,.PARR),RNG^RCDPRU("PAYER",GPAYER,.PARR),RNG^RCDPRU("TIN",GTIN,.PARR)
"RTN","RCDPPLB",253,0)
 ;Get possible ERAs to work on from ^RCY(344.4,"AC") index
"RTN","RCDPPLB",254,0)
 F  S SDT=$O(^RCY(344.4,"AC",SDT)) Q:SDT=""!(SDT>GSTOP)  D
"RTN","RCDPPLB",255,0)
 . S IEN="" F  S IEN=$O(^RCY(344.4,"AC",SDT,IEN)) Q:IEN=""  S ZN=^RCY(344.4,IEN,0) D
"RTN","RCDPPLB",256,0)
 .. I GDIV=0 D ERASTA^RCDPEM4(IEN,.STA,.STNUM,.STNAM) Q:'$D(GDIV(STA))  ; If not the right Division/station then get next ERA
"RTN","RCDPPLB",257,0)
 .. K RCGX D GETS^DIQ(344.4,IEN_",","2*;","E","RCGX") Q:$D(RCGX)=0  ; Quit if no PLBs on this ERA
"RTN","RCDPPLB",258,0)
 .. S ZTIN=$$GET1^DIQ(344.4,IEN_",",.03,"E"),ZPAY=$$GET1^DIQ(344.4,IEN_",",.06,"E")
"RTN","RCDPPLB",259,0)
 .. Q:'$$CHECK("TIN",ZTIN,.PARR)  Q:'$$CHECK("PAYER",ZPAY,.PARR)  ; Quit if not including this tin or payer
"RTN","RCDPPLB",260,0)
 .. ; Billed amount on the EOBs, Get EOB Details
"RTN","RCDPPLB",261,0)
 .. K RCEB D GETS^DIQ(344.4,IEN_",","1*;","I","RCEB")
"RTN","RCDPPLB",262,0)
 .. ; Walk EOB Details and get the total amount billed
"RTN","RCDPPLB",263,0)
 .. S EOBTOT=0
"RTN","RCDPPLB",264,0)
 .. I $D(RCEB)>9 S XY="" F  S XY=$O(RCEB(344.41,XY)) Q:XY=""  S EOBTOT=EOBTOT+$$GET1^DIQ(361.1,RCEB(344.41,XY,.02,"I")_",","2.04","E")
"RTN","RCDPPLB",265,0)
 .. ; Get list of PLB Codes for this ERA
"RTN","RCDPPLB",266,0)
 .. S IX="" K CD F ZZ=1:1 S IX=$O(RCGX(344.42,IX)) Q:IX=""  D
"RTN","RCDPPLB",267,0)
 ... I '$$CHECK("PLB",RCGX(344.42,IX,.02,"E"),.PARR) Q  ; If plb not included in report quit and go to the next entry 
"RTN","RCDPPLB",268,0)
 ... ; Get IEN for PLB Code, then get description for code from file 345.1
"RTN","RCDPPLB",269,0)
 ... S ZEN=$$FIND1^DIC(345.1,"","",RCGX(344.42,IX,.02,"E"),"B","","RCERR") S:$G(ZEN)]"" ZDESC=$$GET1^DIQ(345.1,ZEN_",",.05,"","RCERR")
"RTN","RCDPPLB",270,0)
 ... S:$G(ZDESC)="" ZDESC=$G(RCGX(344.42,IX,.04,"E")) ; If no description use the Description from FSC
"RTN","RCDPPLB",271,0)
 ... S:$G(ZDESC)="" ZDESC="Bad data recieved from FSC" ; Otherwise make one up.
"RTN","RCDPPLB",272,0)
 ... ; PLB Code ^ Adj. Amount ^ Reference / Comment ^ Code Description
"RTN","RCDPPLB",273,0)
 ... S CD(ZZ)=$S(RCGX(344.42,IX,.02,"E")'="":RCGX(344.42,IX,.02,"E"),1:"00")_U_RCGX(344.42,IX,.03,"E")_U_RCGX(344.42,IX,.01,"E")_U_ZDESC
"RTN","RCDPPLB",274,0)
 ... S @GARRAY@("00_ERA",IEN,ZZ)=CD(ZZ)
"RTN","RCDPPLB",275,0)
 ... ; Add items to report global sorted by Payer or PLB Code
"RTN","RCDPPLB",276,0)
 ... S @GARRAY@("00_ERA",IEN,0)=ZN,@GARRAY@("00_ERA",IEN,0.1)=EOBTOT
"RTN","RCDPPLB",277,0)
 ... ;D:GSORT="C" BYCODE^RCDPRU(ZN,.CD,IEN,GARRAY,EOBTOT) D:GSORT="P" BYPAYR^RCDPRU(ZN,.CD,IEN,GARRAY,EOBTOT)
"RTN","RCDPPLB",278,0)
 ... S ZED=$S(GSORT="C":$P(CD(ZZ),U,1),1:$P(ZN,U,6)_"/"_$P(ZN,U,3)),@GARRAY@(ZLVL,ZED,IEN,0)=ZN
"RTN","RCDPPLB",279,0)
 D SUMIT^RCDPRU(GARRAY,ZLVL,GSORT)
"RTN","RCDPPLB",280,0)
 Q
"RTN","RCDPPLB",281,0)
 ; Check to see if this ITEM is included for processing
"RTN","RCDPPLB",282,0)
CHECK(TYPE,ITEM,ARRAY) ;
"RTN","RCDPPLB",283,0)
 ; If all are included no need to check further
"RTN","RCDPPLB",284,0)
 I TYPE="TIN" S:$E(ITEM,$L(ITEM))'=" " ITEM=ITEM_" " ; Add space to TIN if needed.
"RTN","RCDPPLB",285,0)
 Q:$G(ARRAY(TYPE))="ALL" 1
"RTN","RCDPPLB",286,0)
 Q:$G(ARRAY(TYPE,ITEM))=1 1
"RTN","RCDPPLB",287,0)
 Q 0
"RTN","RCDPPLB",288,0)
 ;
"RTN","RCDPPLB",289,0)
PLBC(RET) ; Get PLB Codes to limit for report or all
"RTN","RCDPPLB",290,0)
 N PLLIST,PLCODE,DTOUT,DUOUT,FILE S FILE=345.1
"RTN","RCDPPLB",291,0)
 S DIR("A")="Select (C)ode, (R)ange of Codes or (A)ll ?: ",DIR(0)="SA^A:All Codes;C:Single Code;R:Range/List of Codes"
"RTN","RCDPPLB",292,0)
 S DIR("B")="ALL" D ^DIR K DIR
"RTN","RCDPPLB",293,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPPLB",294,0)
 S PLLIST=Y
"RTN","RCDPPLB",295,0)
 I PLLIST="A" S RET="ALL" Q
"RTN","RCDPPLB",296,0)
 I PLLIST="C" D  Q
"RTN","RCDPPLB",297,0)
 .; if invalid code return here
"RTN","RCDPPLB",298,0)
C1 .;
"RTN","RCDPPLB",299,0)
 . S DIR("A")="Enter a Code: ",DIR(0)="FA^1:200"
"RTN","RCDPPLB",300,0)
 . S DIR("?")="Only a single codes can be entered as: WO"
"RTN","RCDPPLB",301,0)
 . S DIR("?",1)="Please enter one Code for the report."
"RTN","RCDPPLB",302,0)
 . S DIR("?",2)="The single validated code will be included in the report."
"RTN","RCDPPLB",303,0)
 . D ^DIR K DIR
"RTN","RCDPPLB",304,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPPLB",305,0)
 . S PLCODE=$$UP^RCDPRU(X),PLCODE=$TR(PLCODE," ","")
"RTN","RCDPPLB",306,0)
 . I (PLCODE[":"),(PLCODE["-"),(PLCODE[",") W !!,"PLB Code: "_PLCODE_" not found, Please try again...",! S X="",PLCODE="" G C1
"RTN","RCDPPLB",307,0)
 . I '$$VAL(FILE,.PLCODE) W !!,"PLB Code: "_PLCODE_" not found, Please try again...",! S X="",PLCODE="" G C1
"RTN","RCDPPLB",308,0)
 . S RET=PLCODE
"RTN","RCDPPLB",309,0)
 ;
"RTN","RCDPPLB",310,0)
 I PLLIST="R" D
"RTN","RCDPPLB",311,0)
 . ; if invalid range/list of codes return here
"RTN","RCDPPLB",312,0)
C2 . ;
"RTN","RCDPPLB",313,0)
 . S DIR("A")="Enter a List or Range of Codes",DIR(0)="F^1:200"
"RTN","RCDPPLB",314,0)
 . S DIR("?")="Codes can be entered as: WO,51,AH:CT"
"RTN","RCDPPLB",315,0)
 . S DIR("?",1)="Please enter a list or range of Codes, use a comma between elements"
"RTN","RCDPPLB",316,0)
 . S DIR("?",2)="and a colon ':' or '-' to delimit ranges of codes."
"RTN","RCDPPLB",317,0)
 . D ^DIR K DIR
"RTN","RCDPPLB",318,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y="") S RCQUIT=1 Q
"RTN","RCDPPLB",319,0)
 . S PLCODE=$$UP^RCDPRU(X) I '$$VAL(FILE,.PLCODE) W !!,"PLB Code: "_PLCODE_" not found, Please try again...",! S X="",PLCODE="" G C2
"RTN","RCDPPLB",320,0)
 . S RET=PLCODE
"RTN","RCDPPLB",321,0)
 Q
"RTN","RCDPPLB",322,0)
 ;
"RTN","RCDPPLB",323,0)
VAL(XF,CODE) ; Validate a range or list of PLB Codes
"RTN","RCDPPLB",324,0)
 ; If invalid code is found VAILD = 0 and CODE will contain the offending codes
"RTN","RCDPPLB",325,0)
 Q $$VAL^RCDPRU(XF,.CODE)
"RTN","RCDPPLB",326,0)
 ;
"RTN","RCDPR215")
0^11^B44787625
"RTN","RCDPR215",1,0)
RCDPR215 ;WISC/RFJ-receipt processing sf215 report ;1 Jun 99
"RTN","RCDPR215",2,0)
 ;;4.5;Accounts Receivable;**114,173,211,220,321**;Mar 20, 1995;Build 48
"RTN","RCDPR215",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPR215",4,0)
 Q
"RTN","RCDPR215",5,0)
 ;
"RTN","RCDPR215",6,0)
DQ ;  queued report starts here, input RECEIPDA
"RTN","RCDPR215",7,0)
 ;  RCTYPE="D"etail or "A"ccrual
"RTN","RCDPR215",8,0)
 N %I,AMOUNT,BILL,BILLDA,COMMENTS,COUNT,DA,DATA,DEPOSIT,DETAIL,FMSDOCNO,FUND,NOW,PAGE,PIECE,PRINTOTL,RCSTFLAG,RCYLINE,RECEIPT,SCREEN,TOTAL,TOTLAMT,UNAPPLY,X,Y,TOT,%,REPRODT,EFTFUND
"RTN","RCDPR215",9,0)
 ;
"RTN","RCDPR215",10,0)
 ;  calculate report
"RTN","RCDPR215",11,0)
 ;  input receipda (ien of receipt)
"RTN","RCDPR215",12,0)
 K ^TMP($J,"RCFMSCR"),^TMP($J,"RCDPR215")
"RTN","RCDPR215",13,0)
 S EFTFUND=$S(DT<$$ADDPTEDT^PRCAACC():"5287.4/8NZZ",1:"528704/8NZZ")
"RTN","RCDPR215",14,0)
 S REPRODT=$P($P($G(^RCY(344,RECEIPDA,0)),"^",8),".")
"RTN","RCDPR215",15,0)
 D FMSLINES^RCXFMSC1(RECEIPDA)
"RTN","RCDPR215",16,0)
 I $$EDILB^RCDPEU(RECEIPDA)=1 D  ; EFT deposit receipt
"RTN","RCDPR215",17,0)
 . S TOT=0
"RTN","RCDPR215",18,0)
 . S Z=0 F  S Z=$O(^RCY(344,RECEIPDA,1,Z)) Q:'Z  S TOT=TOT+$P($G(^(Z,0)),U,4)
"RTN","RCDPR215",19,0)
 . S ^TMP($J,"RCFMSCR",EFTFUND)=TOT
"RTN","RCDPR215",20,0)
 ;
"RTN","RCDPR215",21,0)
 ;  print report
"RTN","RCDPR215",22,0)
 S DATA=$G(^RCY(344,RECEIPDA,0))
"RTN","RCDPR215",23,0)
 S RECEIPT=$P(DATA,"^")
"RTN","RCDPR215",24,0)
 S DEPOSIT=$P($G(^RCY(344.1,+$P(DATA,"^",6),0)),"^")
"RTN","RCDPR215",25,0)
 S FMSDOCNO=$P($G(^RCY(344.1,+$P(DATA,"^",6),2)),"^")
"RTN","RCDPR215",26,0)
 ;
"RTN","RCDPR215",27,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCDPR215",28,0)
 S PAGE=0,RCYLINE="",$P(RCYLINE,"-",81)=""
"RTN","RCDPR215",29,0)
 S SCREEN=0 I '$D(ZTQUEUED),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPR215",30,0)
 U IO D H
"RTN","RCDPR215",31,0)
 ;
"RTN","RCDPR215",32,0)
 S TOTAL=""  ;  stores printotal^inttotal^admintotal^marshtotal^cctotal
"RTN","RCDPR215",33,0)
 S FUND="" F  S FUND=$O(^TMP($J,"RCFMSCR",FUND)) Q:'FUND!($G(RCSTFLAG))  D
"RTN","RCDPR215",34,0)
 .   I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",35,0)
 .   W !!?5,"Appropriation: ",FUND
"RTN","RCDPR215",36,0)
 .   I RCTYPE="D" W !
"RTN","RCDPR215",37,0)
 .   ;
"RTN","RCDPR215",38,0)
 .   S PRINTOTL=0
"RTN","RCDPR215",39,0)
 .   S COUNT=0
"RTN","RCDPR215",40,0)
 .   I FUND=EFTFUND S PRINTOTL=PRINTOTL+$G(^TMP($J,"RCFMSCR",FUND))
"RTN","RCDPR215",41,0)
 .   S BILLDA=0 F  S BILLDA=$O(^TMP($J,"RCFMSCR",FUND,BILLDA)) Q:'BILLDA!($G(RCSTFLAG))  D
"RTN","RCDPR215",42,0)
 .   .   I $Y>(IOSL-5) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",43,0)
 .   .   S COUNT=COUNT+1
"RTN","RCDPR215",44,0)
 .   .   S BILL=$P($G(^PRCA(430,BILLDA,0)),"^")
"RTN","RCDPR215",45,0)
 .   .   S DATA=^TMP($J,"RCFMSCR",FUND,BILLDA)
"RTN","RCDPR215",46,0)
 .   .   S PRINTOTL=PRINTOTL+$P(DATA,"^")
"RTN","RCDPR215",47,0)
 .   .   F PIECE=1:1:5 S $P(TOTAL,"^",PIECE)=$P(TOTAL,"^",PIECE)+$P(DATA,"^",PIECE)
"RTN","RCDPR215",48,0)
 .   .   ;  if accrued report, do not show detail
"RTN","RCDPR215",49,0)
 .   .   I RCTYPE="A" Q
"RTN","RCDPR215",50,0)
 .   .   ;
"RTN","RCDPR215",51,0)
 .   .   W !?5,COUNT,")",?10,BILL,?30,$J($P(DATA,"^"),10,2),?45,"DEBTOR: ",$E($$DEBTOR(BILLDA),1,25)
"RTN","RCDPR215",52,0)
 .   .   W !?15,"INT:",$J($P(DATA,"^",2),10,2)," ADMIN:",$J($P(DATA,"^",3),10,2)," MARS: ",$J($P(DATA,"^",4),10,2)," CC: ",$J($P(DATA,"^",5),10,2)
"RTN","RCDPR215",53,0)
 .   ;
"RTN","RCDPR215",54,0)
 .   I $G(RCSTFLAG) Q
"RTN","RCDPR215",55,0)
 .   I RCTYPE="D" W !?30,"----------",!?5,"TOTAL for ",FUND
"RTN","RCDPR215",56,0)
 .   W ?30,$J(PRINTOTL,10,2)
"RTN","RCDPR215",57,0)
 .   I FUND="0160a1" W ?45,"0160a1 sub-totals Champva receipts",!?45,"not sent to FMS on the CR document."
"RTN","RCDPR215",58,0)
 ;
"RTN","RCDPR215",59,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCDPR215",60,0)
 I $Y>(IOSL-6) D:SCREEN PAUSE I '$G(RCSTFLAG) D H
"RTN","RCDPR215",61,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCDPR215",62,0)
 ;
"RTN","RCDPR215",63,0)
 ;  show int, admin, etc totals
"RTN","RCDPR215",64,0)
 W !
"RTN","RCDPR215",65,0)
 W !?5,"INTEREST : (APP: 1435)",?30,$J($P(TOTAL,"^",2),10,2)
"RTN","RCDPR215",66,0)
 W !?5,"ADMIN    : (APP: 3220)",?30,$J($P(TOTAL,"^",3),10,2)
"RTN","RCDPR215",67,0)
 W !?5,"MARSHALL : (APP: 0869)",?30,$J($P(TOTAL,"^",4),10,2)
"RTN","RCDPR215",68,0)
 W !?5,"COURTCOST: (APP: 0869)",?30,$J($P(TOTAL,"^",5),10,2)
"RTN","RCDPR215",69,0)
 W !?30,"----------"
"RTN","RCDPR215",70,0)
 W !?30,$J($P(TOTAL,"^",2)+$P(TOTAL,"^",3)+$P(TOTAL,"^",4)+$P(TOTAL,"^",5),10,2)
"RTN","RCDPR215",71,0)
 ;
"RTN","RCDPR215",72,0)
 I $Y>(IOSL-8) D:SCREEN PAUSE I '$G(RCSTFLAG) D H
"RTN","RCDPR215",73,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCDPR215",74,0)
 ;
"RTN","RCDPR215",75,0)
 I $G(^TMP($J,"RCFMSCR",EFTFUND)) S $P(TOTAL,U)=$P(TOTAL,U)+^TMP($J,"RCFMSCR",EFTFUND)
"RTN","RCDPR215",76,0)
 ;  compile unapplied amounts that went to suspense
"RTN","RCDPR215",77,0)
 S DA=0 F  S DA=$O(^RCY(344,RECEIPDA,1,DA)) Q:'DA  D
"RTN","RCDPR215",78,0)
 .   S AMOUNT=$P($G(^RCY(344,RECEIPDA,1,DA,0)),"^",4) I 'AMOUNT Q
"RTN","RCDPR215",79,0)
 .   S UNAPPLY=$P($G(^RCY(344,RECEIPDA,1,DA,2)),"^",5) I UNAPPLY="" Q
"RTN","RCDPR215",80,0)
 .   ;  if amount has not been processed, show it in suspense
"RTN","RCDPR215",81,0)
 .   I '$P(^RCY(344,RECEIPDA,1,DA,0),"^",5) S ^TMP($J,"RCDPR215",DA)=UNAPPLY_"^"_AMOUNT_"^"_$P($G(^RCY(344,RECEIPDA,1,DA,1)),"^",2)
"RTN","RCDPR215",82,0)
 ;
"RTN","RCDPR215",83,0)
 ;  print unapplied amounts that went to suspense
"RTN","RCDPR215",84,0)
 I $O(^TMP($J,"RCDPR215",0)) D
"RTN","RCDPR215",85,0)
 .   W !!?5,"Appropriation: 3875"
"RTN","RCDPR215",86,0)
 .   I RCTYPE="D" W !
"RTN","RCDPR215",87,0)
 .   ;
"RTN","RCDPR215",88,0)
 .   S COUNT=0,PRINTOTL=0
"RTN","RCDPR215",89,0)
 .   S DA=0 F  S DA=$O(^TMP($J,"RCDPR215",DA)) Q:'DA!($G(RCSTFLAG))  D
"RTN","RCDPR215",90,0)
 .   .   I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",91,0)
 .   .   ;
"RTN","RCDPR215",92,0)
 .   .   S UNAPPLY=$P(^TMP($J,"RCDPR215",DA),"^"),AMOUNT=$P(^(DA),"^",2),COMMENTS=$P(^(DA),"^",3)
"RTN","RCDPR215",93,0)
 .   .   S PRINTOTL=PRINTOTL+AMOUNT
"RTN","RCDPR215",94,0)
 .   .   S $P(TOTAL,"^")=$P(TOTAL,"^")+AMOUNT
"RTN","RCDPR215",95,0)
 .   .   ;  if accrued report, do not show detail
"RTN","RCDPR215",96,0)
 .   .   I RCTYPE="A" Q
"RTN","RCDPR215",97,0)
 .   .   ;
"RTN","RCDPR215",98,0)
 .   .   S COUNT=COUNT+1
"RTN","RCDPR215",99,0)
 .   .   W !?5,COUNT,")",?10,UNAPPLY,?30,$J(AMOUNT,10,2),?45,"COMMENTS: ",$E(COMMENTS,1,25)
"RTN","RCDPR215",100,0)
 .   .   I $TR($E(COMMENTS,26,80)," ")'="" W !?25,$E(COMMENTS,26,80)
"RTN","RCDPR215",101,0)
 .   .   ;PRCA*4.5*321 - BEGIN
"RTN","RCDPR215",102,0)
 .   .   ; Get comment history from RCDPE COMMENT HISTORY file #344.73
"RTN","RCDPR215",103,0)
 .   .   N RCCHIS,RCSUB,RCCOM
"RTN","RCDPR215",104,0)
 .   .   D GET^RCDPECH(.RCCHIS,RECEIPDA,DA)
"RTN","RCDPR215",105,0)
 .   .   S RCSUB=0
"RTN","RCDPR215",106,0)
 .   .   F  S RCSUB=$O(RCCHIS(RCSUB)) Q:'RCSUB  D
"RTN","RCDPR215",107,0)
 .   .   .  I RCSUB>1 D
"RTN","RCDPR215",108,0)
 .   .   .  .  S RCCOM=$P(RCCHIS(RCSUB),U,3)
"RTN","RCDPR215",109,0)
 .   .   .  .  I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",110,0)
 .   .   .  .  W !,?45,"COMMENTS: "_$E(RCCOM,1,25)
"RTN","RCDPR215",111,0)
 .   .   .  .  Q:$TR($E(RCCOM,26,80)," ")=""
"RTN","RCDPR215",112,0)
 .   .   .  .  I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",113,0)
 .   .   .  .  W !?25,$E(RCCOM,26,80)
"RTN","RCDPR215",114,0)
 .   .   .  I RCSUB>1,$Y>(IOSL-6) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",115,0)
 .   .   .  W !,?45,"ADDED BY USER: "_$P(RCCHIS(RCSUB),U,2)
"RTN","RCDPR215",116,0)
 .   .   .  I $Y>(IOSL-6) D:SCREEN PAUSE Q:$G(RCSTFLAG)  D H
"RTN","RCDPR215",117,0)
 .   .   .  W !,?45,"ADDED: "_$P(RCCHIS(RCSUB),U,1)
"RTN","RCDPR215",118,0)
 .   .   ;PRCA*4.5*321 - END
"RTN","RCDPR215",119,0)
 .   ;
"RTN","RCDPR215",120,0)
 .   I $G(RCSTFLAG) Q
"RTN","RCDPR215",121,0)
 .   I RCTYPE="D" W !?30,"----------",!?5,"TOTAL for 3875"
"RTN","RCDPR215",122,0)
 .   W ?30,$J(PRINTOTL,10,2)
"RTN","RCDPR215",123,0)
 I $G(RCSTFLAG) D Q Q
"RTN","RCDPR215",124,0)
 ;
"RTN","RCDPR215",125,0)
 S TOTLAMT=0 F PIECE=1:1:5 S TOTLAMT=TOTLAMT+$P(TOTAL,"^",PIECE)
"RTN","RCDPR215",126,0)
 W !!,"TOTALS: "
"RTN","RCDPR215",127,0)
 W !?5,"TOTAL AMOUNT POSTED:",?30,$J(TOTLAMT,10,2)
"RTN","RCDPR215",128,0)
 ;
"RTN","RCDPR215",129,0)
 I SCREEN W !,"Press RETURN to continue: " R X:DTIME
"RTN","RCDPR215",130,0)
Q D ^%ZISC
"RTN","RCDPR215",131,0)
 K ^TMP($J,"RCFMSCR"),^TMP($J,"RCDPR215")
"RTN","RCDPR215",132,0)
 Q
"RTN","RCDPR215",133,0)
 ;
"RTN","RCDPR215",134,0)
 ;
"RTN","RCDPR215",135,0)
GETTYPE() ;  ask the type of report to print
"RTN","RCDPR215",136,0)
 N DIR,X,Y
"RTN","RCDPR215",137,0)
 S DIR(0)="S^A:ACCRUED;D:DETAILED",DIR("A")="ACCRUED OR DETAILED REPORT",DIR("B")="ACCRUED",DIR("?")="A DETAILED Report will list out accrued bills separately"
"RTN","RCDPR215",138,0)
 S DIR("?",1)="An ACCRUED Report will list just the accrued total under each appropriation"
"RTN","RCDPR215",139,0)
 D ^DIR
"RTN","RCDPR215",140,0)
 I Y'="A",Y'="D" Q ""
"RTN","RCDPR215",141,0)
 Q Y
"RTN","RCDPR215",142,0)
 ;
"RTN","RCDPR215",143,0)
 ;
"RTN","RCDPR215",144,0)
DEBTOR(DA) ;  returns the debtor name for ien of bill (da) in file 430
"RTN","RCDPR215",145,0)
 N D0,DEBTOR,DIC,DIQ,DR
"RTN","RCDPR215",146,0)
 S DIC="^PRCA(430,",DR=9,DIQ(0)="E",DIQ="DEBTOR"
"RTN","RCDPR215",147,0)
 D EN^DIQ1
"RTN","RCDPR215",148,0)
 Q $G(DEBTOR(430,DA,9,"E"))
"RTN","RCDPR215",149,0)
 ;
"RTN","RCDPR215",150,0)
 ;
"RTN","RCDPR215",151,0)
H ;  header
"RTN","RCDPR215",152,0)
 N Z
"RTN","RCDPR215",153,0)
 S PAGE=PAGE+1 I PAGE'=1!(SCREEN) W @IOF
"RTN","RCDPR215",154,0)
 W $C(13),"Page ",PAGE,?(80-$L(NOW)),NOW
"RTN","RCDPR215",155,0)
 W !,$E($TR(RCYLINE,"-","*"),1,34)," 215 REPORT ",$E($TR(RCYLINE,"-","*"),1,34)
"RTN","RCDPR215",156,0)
 W !!,"RECEIPT #: ",RECEIPT,?25,"for DEPOSIT #: ",DEPOSIT
"RTN","RCDPR215",157,0)
 I FMSDOCNO'="" W ?51,"FMS Document #: ",FMSDOCNO
"RTN","RCDPR215",158,0)
 S Z=""
"RTN","RCDPR215",159,0)
 I $P($G(^RCY(344,RECEIPDA,0)),U,18) S Z=$E(" REFERENCE ERA #: "_$P($G(^RCY(344.4,+$P($G(^RCY(344,RECEIPDA,0)),U,18),0)),U)_" ("_$P($G(^RCY(344.4,+$P($G(^RCY(344,RECEIPDA,0)),U,18),0)),U,2)_")"_$J("",51),1,51)
"RTN","RCDPR215",160,0)
 I Z'="" W !,Z
"RTN","RCDPR215",161,0)
 W !,RCYLINE
"RTN","RCDPR215",162,0)
 Q
"RTN","RCDPR215",163,0)
 ;
"RTN","RCDPR215",164,0)
 ;
"RTN","RCDPR215",165,0)
PAUSE ;  pause at end of page
"RTN","RCDPR215",166,0)
 N X U IO(0) W !,"Press RETURN to continue, '^' to exit:" R X:DTIME S:'$T X="^" S:X["^" RCSTFLAG=1 U IO
"RTN","RCDPR215",167,0)
 Q
"RTN","RCDPRL")
0^60^B2015972
"RTN","RCDPRL",1,0)
RCDPRL ;AITC/CJE - list of receipts report ;23 Aug 2017
"RTN","RCDPRL",2,0)
 ;;4.5;Accounts Receivable;**321**;;Build 48
"RTN","RCDPRL",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPRL",4,0)
 ;
"RTN","RCDPRL",5,0)
EN ; -- main entry point for RCDP LIST OF RECIEPTS REPORT
"RTN","RCDPRL",6,0)
 N RCDPFXIT
"RTN","RCDPRL",7,0)
 D EN^VALM("RCDP LIST OF RECEIPTS REPORT")
"RTN","RCDPRL",8,0)
 Q
"RTN","RCDPRL",9,0)
 ;
"RTN","RCDPRL",10,0)
HDR ; -- header code
"RTN","RCDPRL",11,0)
 S VALMHDR(1)=^TMP($J,"RCDPRLIS","HDR",2)
"RTN","RCDPRL",12,0)
 S VALMHDR(2)=^TMP($J,"RCDPRLIS","HDR",3)
"RTN","RCDPRL",13,0)
 S VALMHDR(3)=^TMP($J,"RCDPRLIS","HDR",4)
"RTN","RCDPRL",14,0)
 Q
"RTN","RCDPRL",15,0)
 ;
"RTN","RCDPRL",16,0)
INIT ; -- init variables and list array
"RTN","RCDPRL",17,0)
 N K
"RTN","RCDPRL",18,0)
 S (K,VALMCNT)=0
"RTN","RCDPRL",19,0)
 F  S K=$O(^TMP($J,"RCDPRLIS",K)) Q:'K  D  ;
"RTN","RCDPRL",20,0)
 . S VALMCNT=VALMCNT+1
"RTN","RCDPRL",21,0)
 . D SET^VALM10(VALMCNT,^TMP($J,"RCDPRLIS",K),VALMCNT)
"RTN","RCDPRL",22,0)
 Q
"RTN","RCDPRL",23,0)
 ;
"RTN","RCDPRL",24,0)
RP ; EP - Launch receipt processing list template
"RTN","RCDPRL",25,0)
 ; Input: None
"RTN","RCDPRL",26,0)
 ; Output: None
"RTN","RCDPRL",27,0)
 ;
"RTN","RCDPRL",28,0)
 N IBFASTXT,RCRECTDA,RCK
"RTN","RCDPRL",29,0)
 D EN^VALM2($G(XQORNOD(0)),"S")
"RTN","RCDPRL",30,0)
 I '$D(VALMY) Q
"RTN","RCDPRL",31,0)
 ;
"RTN","RCDPRL",32,0)
 S VALMBCK="R"
"RTN","RCDPRL",33,0)
 S RCK=0
"RTN","RCDPRL",34,0)
 F  S RCK=$O(VALMY(RCK)) Q:'RCK!$G(RCDPFXIT)  D  ;
"RTN","RCDPRL",35,0)
 . S RCRECTDA=$G(^TMP($J,"RCDPRLIS","IDX",RCK))
"RTN","RCDPRL",36,0)
 . D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPRL",37,0)
 . ; fast exit
"RTN","RCDPRL",38,0)
 . I $G(RCDPFXIT) S RCRECTDA=0
"RTN","RCDPRL",39,0)
 I $G(RCDPFXIT) S VALMBCK="Q"
"RTN","RCDPRL",40,0)
 Q
"RTN","RCDPRL",41,0)
 ;
"RTN","RCDPRL",42,0)
HELP ; -- help code
"RTN","RCDPRL",43,0)
 N X
"RTN","RCDPRL",44,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RCDPRL",45,0)
 Q
"RTN","RCDPRL",46,0)
 ;
"RTN","RCDPRL",47,0)
EXIT ; -- exit code
"RTN","RCDPRL",48,0)
 Q
"RTN","RCDPRL",49,0)
 ;
"RTN","RCDPRLIS")
0^59^B128405994
"RTN","RCDPRLIS",1,0)
RCDPRLIS ;WISC/RFJ - list of receipts report ;1 Jun 99
"RTN","RCDPRLIS",2,0)
 ;;4.5;Accounts Receivable;**114,304,321**;Mar 20, 1995;Build 48
"RTN","RCDPRLIS",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPRLIS",4,0)
 ;
"RTN","RCDPRLIS",5,0)
 N %ZIS,DATEEND,DATESTRT,POP,RCFILTF,RCFILTT,RCLSTMGR,RCSORT
"RTN","RCDPRLIS",6,0)
 N ZTDESC,ZTQUEUED,ZTRTN,ZTSAVE,ZTSK
"RTN","RCDPRLIS",7,0)
 W !
"RTN","RCDPRLIS",8,0)
 D DATESEL^RCRJRTRA("RECEIPT Opened")
"RTN","RCDPRLIS",9,0)
 I '$G(DATESTRT)!('$G(DATEEND)) Q
"RTN","RCDPRLIS",10,0)
 ;
"RTN","RCDPRLIS",11,0)
 ; Prompt for sort order PRCA*4.5*321
"RTN","RCDPRLIS",12,0)
 S RCSORT=$$SORTSEL()
"RTN","RCDPRLIS",13,0)
 I RCSORT=-1 Q
"RTN","RCDPRLIS",14,0)
 ;
"RTN","RCDPRLIS",15,0)
 ; Prompt for filter by FMS Status PRCA*4.5*321
"RTN","RCDPRLIS",16,0)
 D SELFILTF(.RCFILTF)
"RTN","RCDPRLIS",17,0)
 I RCFILTF=-1 Q
"RTN","RCDPRLIS",18,0)
 ;
"RTN","RCDPRLIS",19,0)
 ; Prompt for filter by Payment Type PRCA*4.5*321
"RTN","RCDPRLIS",20,0)
 D SELFILTT(.RCFILTT)
"RTN","RCDPRLIS",21,0)
 I RCFILTT=-1 Q
"RTN","RCDPRLIS",22,0)
 ;
"RTN","RCDPRLIS",23,0)
 ; Ask for ListMan display, exit if timeout or '^'
"RTN","RCDPRLIS",24,0)
 W !
"RTN","RCDPRLIS",25,0)
 S RCLSTMGR=$$ASKLM^RCDPEARL() I RCLSTMGR<0 Q
"RTN","RCDPRLIS",26,0)
 ;
"RTN","RCDPRLIS",27,0)
 ; Send report to Listman if requested
"RTN","RCDPRLIS",28,0)
 I RCLSTMGR D  D CLEAN Q
"RTN","RCDPRLIS",29,0)
 . D DQ
"RTN","RCDPRLIS",30,0)
 . D EN^RCDPRL
"RTN","RCDPRLIS",31,0)
 ;
"RTN","RCDPRLIS",32,0)
 ;  select device
"RTN","RCDPRLIS",33,0)
 W ! S %ZIS="Q" D ^%ZIS I POP Q
"RTN","RCDPRLIS",34,0)
 I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK Q
"RTN","RCDPRLIS",35,0)
 .   S ZTDESC="List of Receipts",ZTRTN="DQ^RCDPRLIS"
"RTN","RCDPRLIS",36,0)
 .   S ZTSAVE("DATE*")="",ZTSAVE("RC*")="",ZTSAVE("ZTREQ")="@"
"RTN","RCDPRLIS",37,0)
 W !!,"<*> please wait <*>"
"RTN","RCDPRLIS",38,0)
 D DQ
"RTN","RCDPRLIS",39,0)
 Q
"RTN","RCDPRLIS",40,0)
 ;
"RTN","RCDPRLIS",41,0)
DQ ;  queued report starts here
"RTN","RCDPRLIS",42,0)
 ; PRCA*4.5*321 Extensive changes to this subroutine for filter/sort/ListMan
"RTN","RCDPRLIS",43,0)
 N %,%I,CNT,DATA,DATE,DATEDIS1,DATEDIS2,FMSDOCNO,FMSTATUS,NOW,PAGE,PTYPE,RCDK,RCDPDATA
"RTN","RCDPRLIS",44,0)
 N RCDPFPRE,RCIX,RCRECTDA,RCRJFLAG,RCRJLINE,RCUSER,SCREEN,SPACE,TOTALS,TYPE,X,Y
"RTN","RCDPRLIS",45,0)
 K ^TMP($J,"RCDPRLIS")
"RTN","RCDPRLIS",46,0)
 S SPACE=$J("",80)
"RTN","RCDPRLIS",47,0)
 S RCDK=$$FMADD^XLFDT(DATESTRT,-1)_".24" ; Initialize start date for first $ORDER
"RTN","RCDPRLIS",48,0)
 S DATEEND=DATEEND_".24" ; Receipt date opened can include time, so compare with midnight on the end date.
"RTN","RCDPRLIS",49,0)
 F  S RCDK=$O(^RCY(344,"AO",RCDK)) Q:(RCDK=""!(RCDK>DATEEND))  D  ;
"RTN","RCDPRLIS",50,0)
 . S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AO",RCDK,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPRLIS",51,0)
 . . K RCDPDATA
"RTN","RCDPRLIS",52,0)
 . . D DIQ344^RCDPRPLM(RCRECTDA,".01:200")
"RTN","RCDPRLIS",53,0)
 . . ;  get fms document ^ status ^ pre lockbox patch
"RTN","RCDPRLIS",54,0)
 . . S FMSDOCNO=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRLIS",55,0)
 . . ; Apply filter by FMS Status
"RTN","RCDPRLIS",56,0)
 . . S FMSTATUS=$P(FMSDOCNO,"^",2)
"RTN","RCDPRLIS",57,0)
 . . I RCFILTF,FMSTATUS'="",'$D(RCFILTF(FMSTATUS)) Q  ; this status not included
"RTN","RCDPRLIS",58,0)
 . . ; Apply filter by Payment Type
"RTN","RCDPRLIS",59,0)
 . . S PTYPE=RCDPDATA(344,RCRECTDA,.04,"E")
"RTN","RCDPRLIS",60,0)
 . . I RCFILTT,PTYPE'="",'$D(RCFILTT(PTYPE)) Q  ; this status not included
"RTN","RCDPRLIS",61,0)
 . . ;
"RTN","RCDPRLIS",62,0)
 . . ;  compute totals by type
"RTN","RCDPRLIS",63,0)
 . . I RCDPDATA(344,RCRECTDA,.04,"E")="" S RCDPDATA(344,RCRECTDA,.04,"E")="UNKNOWN"
"RTN","RCDPRLIS",64,0)
 . . S $P(TOTALS(PTYPE),"^",1)=$P($G(TOTALS(PTYPE)),"^",1)+RCDPDATA(344,RCRECTDA,101,"E")
"RTN","RCDPRLIS",65,0)
 . . S $P(TOTALS(PTYPE),"^",2)=$P($G(TOTALS(PTYPE)),"^",2)+RCDPDATA(344,RCRECTDA,.15,"E")
"RTN","RCDPRLIS",66,0)
 . . S $P(TOTALS,"^",1)=$P($G(TOTALS),"^",1)+RCDPDATA(344,RCRECTDA,101,"E")
"RTN","RCDPRLIS",67,0)
 . . S $P(TOTALS,"^",2)=$P($G(TOTALS),"^",2)+RCDPDATA(344,RCRECTDA,.15,"E")
"RTN","RCDPRLIS",68,0)
 . . ;
"RTN","RCDPRLIS",69,0)
 . . ;  opened by
"RTN","RCDPRLIS",70,0)
 . . I RCDPDATA(344,RCRECTDA,.02,"I")=.5 D  ;
"RTN","RCDPRLIS",71,0)
 . . . S RCUSER="ar"
"RTN","RCDPRLIS",72,0)
 . . E  D  ;
"RTN","RCDPRLIS",73,0)
 . . . S RCUSER=RCDPDATA(344,RCRECTDA,.02,"E")
"RTN","RCDPRLIS",74,0)
 . . . I RCUSER'="" D
"RTN","RCDPRLIS",75,0)
 . . . . S RCUSER=$E($P(RCUSER,",",2))_$E(RCUSER)
"RTN","RCDPRLIS",76,0)
 . . ;
"RTN","RCDPRLIS",77,0)
 . . S DATA=RCDPDATA(344,RCRECTDA,.01,"E")            ;receipt number
"RTN","RCDPRLIS",78,0)
 . . S DATA=DATA_"^"_RCDPDATA(344,RCRECTDA,.03,"I")   ;date opened
"RTN","RCDPRLIS",79,0)
 . . S DATA=DATA_"^"_RCDPDATA(344,RCRECTDA,.04,"E")   ;payment type
"RTN","RCDPRLIS",80,0)
 . . S DATA=DATA_"^"_RCUSER                           ;user initials
"RTN","RCDPRLIS",81,0)
 . . S DATA=DATA_"^"_RCDPDATA(344,RCRECTDA,101,"E")   ;payment count
"RTN","RCDPRLIS",82,0)
 . . S DATA=DATA_"^"_RCDPDATA(344,RCRECTDA,.15,"E")   ;payment amount
"RTN","RCDPRLIS",83,0)
 . . S DATA=DATA_"^"_$S($P(FMSDOCNO,"^",3):"*",1:" ") ;pre lockbox
"RTN","RCDPRLIS",84,0)
 . . S DATA=DATA_"^"_$P(FMSDOCNO,"^")                 ;fms cr document
"RTN","RCDPRLIS",85,0)
 . . S DATA=DATA_"^"_$P(FMSDOCNO,"^",2)               ;fms cr doc status
"RTN","RCDPRLIS",86,0)
 . . S DATA=DATA_"^"_RCRECTDA                         ;ien of file 344
"RTN","RCDPRLIS",87,0)
 . . ;
"RTN","RCDPRLIS",88,0)
 . . ; Index ^TMP global by user selected sort order
"RTN","RCDPRLIS",89,0)
 . . I RCSORT="D" S RCIX=RCDPDATA(344,RCRECTDA,.03,"I")
"RTN","RCDPRLIS",90,0)
 . . I RCSORT="F" S RCIX=FMSTATUS
"RTN","RCDPRLIS",91,0)
 . . I RCSORT="T" S RCIX=PTYPE
"RTN","RCDPRLIS",92,0)
 . . S ^TMP($J,"RCDPRLIS","SORT",RCIX,RCRECTDA)=DATA
"RTN","RCDPRLIS",93,0)
 ;
"RTN","RCDPRLIS",94,0)
 S Y=$P(DATESTRT,".") S DATEDIS1=$$FMTE^XLFDT(Y,"2DZ")
"RTN","RCDPRLIS",95,0)
 S Y=$P(DATEEND,".") S DATEDIS2=$$FMTE^XLFDT(Y,"2DZ")
"RTN","RCDPRLIS",96,0)
 D NOW^%DTC S Y=% D DD^%DT S NOW=Y
"RTN","RCDPRLIS",97,0)
 S PAGE=1,RCRJLINE="",$P(RCRJLINE,"-",81)=""
"RTN","RCDPRLIS",98,0)
 S SCREEN=0 I '$D(ZTQUEUED),'$G(RCLSTMGR),IO=IO(0),$E(IOST)="C" S SCREEN=1
"RTN","RCDPRLIS",99,0)
 D HDR ; Compile header in to ^TMP for use in report or ListMan
"RTN","RCDPRLIS",100,0)
 U IO D:'$G(RCLSTMGR) H
"RTN","RCDPRLIS",101,0)
 S CNT=0
"RTN","RCDPRLIS",102,0)
 S RCIX=0 F  S RCIX=$O(^TMP($J,"RCDPRLIS","SORT",RCIX)) Q:RCIX=""!($G(RCRJFLAG))  D
"RTN","RCDPRLIS",103,0)
 . S RCRECTDA=0 F  S RCRECTDA=$O(^TMP($J,"RCDPRLIS","SORT",RCIX,RCRECTDA)) Q:'RCRECTDA!($G(RCRJFLAG))  D
"RTN","RCDPRLIS",104,0)
 . . S DATA=^TMP($J,"RCDPRLIS","SORT",RCIX,RCRECTDA)
"RTN","RCDPRLIS",105,0)
 . . S DATE=$P(DATA,"^",2)
"RTN","RCDPRLIS",106,0)
 . . S CNT=CNT+1
"RTN","RCDPRLIS",107,0)
 . . S XX=""
"RTN","RCDPRLIS",108,0)
 . . I RCLSTMGR S XX=" "_$E(CNT_SPACE,1,4)_" "                          ; line number (for listman)
"RTN","RCDPRLIS",109,0)
 . . S XX=XX_$$FMTE^XLFDT(DATE,"2ZD")_" "                               ; date opened
"RTN","RCDPRLIS",110,0)
 . . S XX=XX_$E($P(DATA,"^")_SPACE,1,12)_" "                            ; receipt number
"RTN","RCDPRLIS",111,0)
 . . S XX=XX_$E($P($P(DATA,"^",3)," ")_SPACE,1,$S(RCLSTMGR:5,1:8))_" "  ; payment type 
"RTN","RCDPRLIS",112,0)
 . . S XX=XX_$E($P(DATA,"^",4)_SPACE,1,2)                               ; user initials
"RTN","RCDPRLIS",113,0)
 . . S XX=XX_$J($P(DATA,"^",5),6)                                       ; payment count
"RTN","RCDPRLIS",114,0)
 . . S XX=XX_$J($P(DATA,"^",6),$S(RCLSTMGR:11,1:13),2)_" "              ; payment amount
"RTN","RCDPRLIS",115,0)
 . . S XX=XX_$E($P(DATA,"^",7)_SPACE,1)                                 ; pre lockbox
"RTN","RCDPRLIS",116,0)
 . . S XX=XX_$E($P(DATA,"^",8)_SPACE,1,16)_" "                          ; fms cr document
"RTN","RCDPRLIS",117,0)
 . . S XX=XX_$E($P(DATA,"^",9),1,$S(RCLSTMGR:8,1:9))                    ; fms cr doc status
"RTN","RCDPRLIS",118,0)
 . . ;
"RTN","RCDPRLIS",119,0)
 . . ; Write line or put it to global
"RTN","RCDPRLIS",120,0)
 . . I '$G(RCLSTMGR) D  ;
"RTN","RCDPRLIS",121,0)
 . . . W !,XX
"RTN","RCDPRLIS",122,0)
 . . E  D  ;
"RTN","RCDPRLIS",123,0)
 . . . S ^TMP($J,"RCDPRLIS",CNT)=XX
"RTN","RCDPRLIS",124,0)
 . . . S ^TMP($J,"RCDPRLIS","IDX",CNT)=$P(DATA,"^",10) ; Cross reference line# vs file 344 DA
"RTN","RCDPRLIS",125,0)
 . . ;
"RTN","RCDPRLIS",126,0)
 . . ;  set pre lockbox flag to 1 to show note at end of report
"RTN","RCDPRLIS",127,0)
 . . I $P(DATA,"^",7)="*" S RCDPFPRE=1
"RTN","RCDPRLIS",128,0)
 . . ;
"RTN","RCDPRLIS",129,0)
 . . I '$G(RCLSTMGR),$Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPRLIS",130,0)
 ;
"RTN","RCDPRLIS",131,0)
 I $G(RCLSTMGR) Q  ; PRCA*4.5*321 - Totals don't have a place in a protocol list with actions
"RTN","RCDPRLIS",132,0)
 ;
"RTN","RCDPRLIS",133,0)
 I $G(RCRJFLAG) D CLEAN Q
"RTN","RCDPRLIS",134,0)
 I $G(RCDPFPRE) W !?54,"*CR tied to deposit"
"RTN","RCDPRLIS",135,0)
 W !?33,"------  -----------"
"RTN","RCDPRLIS",136,0)
 W !?33,$J($P($G(TOTALS),"^"),6),$J($P($G(TOTALS),"^",2),13,2)
"RTN","RCDPRLIS",137,0)
 ;
"RTN","RCDPRLIS",138,0)
 ;  show totals by type of payment
"RTN","RCDPRLIS",139,0)
 W !!,"TOTALS BY TYPE OF PAYMENT"
"RTN","RCDPRLIS",140,0)
 W !,"-------------------------"
"RTN","RCDPRLIS",141,0)
 S TYPE="" F  S TYPE=$O(TOTALS(TYPE)) Q:TYPE=""!($G(RCRJFLAG))  D
"RTN","RCDPRLIS",142,0)
 .   W !,TYPE,?33,$J($P(TOTALS(TYPE),"^"),6),$J($P(TOTALS(TYPE),"^",2),13,2)
"RTN","RCDPRLIS",143,0)
 .   I $Y>(IOSL-6) D:SCREEN PAUSE^RCRJRTR1 Q:$G(RCRJFLAG)  D H
"RTN","RCDPRLIS",144,0)
 ;
"RTN","RCDPRLIS",145,0)
 W !!,"*** END OF REPORT ***",!
"RTN","RCDPRLIS",146,0)
 ;
"RTN","RCDPRLIS",147,0)
 I $G(RCRJFLAG) D CLEAN Q
"RTN","RCDPRLIS",148,0)
 I SCREEN U IO(0) R !,"Press RETURN to continue:",%:DTIME
"RTN","RCDPRLIS",149,0)
 ;
"RTN","RCDPRLIS",150,0)
 I '$G(RCLSTMGR) D CLEAN
"RTN","RCDPRLIS",151,0)
 Q
"RTN","RCDPRLIS",152,0)
CLEAN ; Clean up ^TMP arrays
"RTN","RCDPRLIS",153,0)
 D ^%ZISC
"RTN","RCDPRLIS",154,0)
 K ^TMP($J,"RCDPRLIS")
"RTN","RCDPRLIS",155,0)
 Q
"RTN","RCDPRLIS",156,0)
 ;
"RTN","RCDPRLIS",157,0)
SORTSEL() ; Select sort order for report, by Date Opened, FMS Status or Payment Type
"RTN","RCDPRLIS",158,0)
 ; Input: None
"RTN","RCDPRLIS",159,0)
 ; Return: Sort Type D - Date, F - FMS Status, T - Payment Type
"RTN","RCDPRLIS",160,0)
 N DIR,X,Y,DUOUT,DTOUT,DIRUT,DIROUT,RCREP
"RTN","RCDPRLIS",161,0)
 W !
"RTN","RCDPRLIS",162,0)
 S DIR(0)="SOA^D:Date;F:FMS Status;T:Type of payment"
"RTN","RCDPRLIS",163,0)
 S DIR("A")="Sort By (D)ATE OPENED, (F)MS STATUS OR (T)YPE OF PAYMENT: "
"RTN","RCDPRLIS",164,0)
 S DIR("B")="D"
"RTN","RCDPRLIS",165,0)
 S DIR("?",1)="Select the order you wish the receipts to appear in on the report."
"RTN","RCDPRLIS",166,0)
 S DIR("?",2)=" "
"RTN","RCDPRLIS",167,0)
 S DIR("?",3)="    D - Sort by the date the receipt was opened"
"RTN","RCDPRLIS",168,0)
 S DIR("?",4)="    S - Sort by the FMS Status"
"RTN","RCDPRLIS",169,0)
 S DIR("?")="    T - Sort by the Payment Type"
"RTN","RCDPRLIS",170,0)
 D ^DIR
"RTN","RCDPRLIS",171,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RETURN=-1
"RTN","RCDPRLIS",172,0)
 E  S RETURN=Y
"RTN","RCDPRLIS",173,0)
 Q RETURN
"RTN","RCDPRLIS",174,0)
 ;
"RTN","RCDPRLIS",175,0)
SELFILTF(RETURN) ; Ask if user want to filter by FMS status. If yes get list of status.
"RTN","RCDPRLIS",176,0)
 ; Input: None
"RTN","RCDPRLIS",177,0)
 ; Output: RETURN, passed by reference
"RTN","RCDPRLIS",178,0)
 ;         RETURN - 1=Filter by FMS Status, 0=Don't
"RTN","RCDPRLIS",179,0)
 ;         RETURN(STATUS) - array of FMS Status to include in the report
"RTN","RCDPRLIS",180,0)
 ; 
"RTN","RCDPRLIS",181,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,J,QUIT,RCODES,RCOUT,X,Y
"RTN","RCDPRLIS",182,0)
 K RETURN
"RTN","RCDPRLIS",183,0)
 S RETURN=0
"RTN","RCDPRLIS",184,0)
 ;
"RTN","RCDPRLIS",185,0)
 W !
"RTN","RCDPRLIS",186,0)
 S DIR(0)="YA"
"RTN","RCDPRLIS",187,0)
 S DIR("A")="Filter by FMS Status? (Y/N): "
"RTN","RCDPRLIS",188,0)
 S DIR("B")="NO"
"RTN","RCDPRLIS",189,0)
 S DIR("?",1)="Enter 'Y' or 'Yes' to only show receipts with selected FMS Status"
"RTN","RCDPRLIS",190,0)
 S DIR("?",2)="Enter 'N' or 'No' if you wish to show receipts including all FMS Status"
"RTN","RCDPRLIS",191,0)
 S DIR("?")="If you select yes, you will be prompted for the FMS Status' you wish to include"
"RTN","RCDPRLIS",192,0)
 D ^DIR
"RTN","RCDPRLIS",193,0)
 I $D(DIRUT) S RETURN=-1 Q
"RTN","RCDPRLIS",194,0)
 I Y=0 Q
"RTN","RCDPRLIS",195,0)
 S RETURN=1
"RTN","RCDPRLIS",196,0)
 ;
"RTN","RCDPRLIS",197,0)
 ; Prompt for status' to be included. Multi-select
"RTN","RCDPRLIS",198,0)
 W !
"RTN","RCDPRLIS",199,0)
 D FIELD^DID(2100.1,3,"","POINTER","RCOUT")
"RTN","RCDPRLIS",200,0)
 S RCODES=RCOUT("POINTER")
"RTN","RCDPRLIS",201,0)
 ; Add pseudo code to list for "NOT ENTERED", returned by FMSSTAT^RCDPUREC
"RTN","RCDPRLIS",202,0)
 I $E(RCODES,$L(RCODES))'=";" S RCODES=RCODES_";"
"RTN","RCDPRLIS",203,0)
 S RCODES=RCODES_"N:NOT ENTERED"
"RTN","RCDPRLIS",204,0)
 K DIR
"RTN","RCDPRLIS",205,0)
 S DIR(0)="SOA^"_RCODES
"RTN","RCDPRLIS",206,0)
 S DIR("A")="Select an FMS Status to include in the report: "
"RTN","RCDPRLIS",207,0)
 K DIR("?")
"RTN","RCDPRLIS",208,0)
 S DIR("?",1)="Select an FMS Status to show in the report."
"RTN","RCDPRLIS",209,0)
 S DIR("?",2)="You will be prompted multiple times, until you hit ENTER"
"RTN","RCDPRLIS",210,0)
 S DIR("?")="without making a selection."
"RTN","RCDPRLIS",211,0)
 S QUIT=0
"RTN","RCDPRLIS",212,0)
 F  D  I QUIT Q
"RTN","RCDPRLIS",213,0)
 . W !
"RTN","RCDPRLIS",214,0)
 . D ^DIR
"RTN","RCDPRLIS",215,0)
 . I $D(DTOUT)!$D(DUOUT) K RETURN S RETURN=-1,QUIT=1 Q
"RTN","RCDPRLIS",216,0)
 . I Y="" S QUIT=1 Q
"RTN","RCDPRLIS",217,0)
 . S RETURN(Y(0))=""
"RTN","RCDPRLIS",218,0)
 . ; Rebuid DIR(0) to only include codes not yet selected
"RTN","RCDPRLIS",219,0)
 . S DIR(0)=$$BLDS(RCODES,.RETURN)
"RTN","RCDPRLIS",220,0)
 . I $P(DIR(0),"^",2)="" S QUIT=1 ; All status selected so stop prompting.
"RTN","RCDPRLIS",221,0)
 I RETURN=-1 Q
"RTN","RCDPRLIS",222,0)
 ; If no FMS Status' were selected, don't filter by it.
"RTN","RCDPRLIS",223,0)
 I $O(RETURN(""))="" D  ;
"RTN","RCDPRLIS",224,0)
 . S RETURN=0
"RTN","RCDPRLIS",225,0)
 . W !!,"No FMS Status' were selected. All FMS Status' will be shown",!
"RTN","RCDPRLIS",226,0)
 Q
"RTN","RCDPRLIS",227,0)
 ;
"RTN","RCDPRLIS",228,0)
SELFILTT(RETURN) ; Ask if user want to filter by Payment Type. If yes get list of types.
"RTN","RCDPRLIS",229,0)
 ; Input: None
"RTN","RCDPRLIS",230,0)
 ; Output: RETURN, passed by reference
"RTN","RCDPRLIS",231,0)
 ;         RETURN - 1=Filter by FMS Status, 0=Don't
"RTN","RCDPRLIS",232,0)
 ;         RETURN(STATUS) - array of FMS Status to include in the report
"RTN","RCDPRLIS",233,0)
 ; 
"RTN","RCDPRLIS",234,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,RCODES,RCIEN,RCNAME,QUIT,X,Y
"RTN","RCDPRLIS",235,0)
 K RETURN
"RTN","RCDPRLIS",236,0)
 S RETURN=0
"RTN","RCDPRLIS",237,0)
 ;
"RTN","RCDPRLIS",238,0)
 W !
"RTN","RCDPRLIS",239,0)
 S DIR(0)="YA"
"RTN","RCDPRLIS",240,0)
 S DIR("A")="Filter by Payment Type? (Y/N): "
"RTN","RCDPRLIS",241,0)
 S DIR("B")="NO"
"RTN","RCDPRLIS",242,0)
 S DIR("?",1)="Enter 'Y' or 'Yes' to only show receipts with selected Payment Types"
"RTN","RCDPRLIS",243,0)
 S DIR("?",2)="Enter 'N' or 'No' if you wish to show receipts including all Payment Types"
"RTN","RCDPRLIS",244,0)
 S DIR("?")="If you select yes, you will be prompted for the Payment Types you wish to include"
"RTN","RCDPRLIS",245,0)
 D ^DIR
"RTN","RCDPRLIS",246,0)
 I $D(DIRUT) S RETURN=-1 Q
"RTN","RCDPRLIS",247,0)
 I Y=0 Q
"RTN","RCDPRLIS",248,0)
 S RETURN=1
"RTN","RCDPRLIS",249,0)
 ;
"RTN","RCDPRLIS",250,0)
 ; Prompt for types to be included. Multi-select
"RTN","RCDPRLIS",251,0)
 W !
"RTN","RCDPRLIS",252,0)
 K DIR
"RTN","RCDPRLIS",253,0)
 ; Present payment types as a set of codes to streamline user interface/selection/help
"RTN","RCDPRLIS",254,0)
 S (RCODES,RCNAME)=""
"RTN","RCDPRLIS",255,0)
 F  S RCNAME=$O(^RC(341.1,"B",RCNAME)) Q:RCNAME=""  D  ;
"RTN","RCDPRLIS",256,0)
 . S RCIEN=0 F  S RCIEN=$O(^RC(341.1,"B",RCNAME,RCIEN)) Q:'RCIEN  D  ;
"RTN","RCDPRLIS",257,0)
 . . I $$GET1^DIQ(341.1,RCIEN_",",.06,"I")=1 D  ;
"RTN","RCDPRLIS",258,0)
 . . . S RCODES=RCODES_RCIEN_":"_$$GET1^DIQ(341.1,RCIEN_",",.01,"E")_";"
"RTN","RCDPRLIS",259,0)
 S DIR(0)="SOA^"_RCODES
"RTN","RCDPRLIS",260,0)
 S DIR("A")="Select a Payment Type to include in the report: "
"RTN","RCDPRLIS",261,0)
 K DIR("?")
"RTN","RCDPRLIS",262,0)
 S DIR("?",1)="Select an Payment Type to include in the report."
"RTN","RCDPRLIS",263,0)
 S DIR("?",2)="You will be prompted multiple times, until you hit ENTER"
"RTN","RCDPRLIS",264,0)
 S DIR("?")="without making a selection."
"RTN","RCDPRLIS",265,0)
 S QUIT=0
"RTN","RCDPRLIS",266,0)
 F  D  I QUIT Q
"RTN","RCDPRLIS",267,0)
 . W !
"RTN","RCDPRLIS",268,0)
 . D ^DIR
"RTN","RCDPRLIS",269,0)
 . I $D(DTOUT)!$D(DUOUT) K RETURN S RETURN=-1,QUIT=1 Q
"RTN","RCDPRLIS",270,0)
 . I Y="" S QUIT=1 Q
"RTN","RCDPRLIS",271,0)
 . S RETURN(Y(0))=""
"RTN","RCDPRLIS",272,0)
 . ; Rebuid DIR(0) to only include codes not yet selected
"RTN","RCDPRLIS",273,0)
 . S DIR(0)=$$BLDS(RCODES,.RETURN)
"RTN","RCDPRLIS",274,0)
 . I $P(DIR(0),"^",2)="" S QUIT=1 ; All status selected so stop prompting.
"RTN","RCDPRLIS",275,0)
 ;
"RTN","RCDPRLIS",276,0)
 I RETURN=-1 Q
"RTN","RCDPRLIS",277,0)
 ; If no payment types were selected, don't filter by it.
"RTN","RCDPRLIS",278,0)
 I $O(RETURN(""))="" D  ;
"RTN","RCDPRLIS",279,0)
 . S RETURN=0
"RTN","RCDPRLIS",280,0)
 . W !!,"No Payment Types were selected. Filter will not be used",!
"RTN","RCDPRLIS",281,0)
 Q
"RTN","RCDPRLIS",282,0)
 ;
"RTN","RCDPRLIS",283,0)
BLDS(CODES,PICKED) ; Build DIR(0) string taking into account codes already picked.
"RTN","RCDPRLIS",284,0)
 ; Input: CODES - Set of codes string in fileman format e.g. A:Apple;B:Ball;
"RTN","RCDPRLIS",285,0)
 ;        PICKED - Array of values already picked, subscripted by external value e.g. PICKED("Apple")=""
"RTN","RCDPRLIS",286,0)
 ; Return: RETURN in DIR(0) format. Set of codes that only includes ones not picked.
"RTN","RCDPRLIS",287,0)
 ;         e.g "SAO^B:Ball"
"RTN","RCDPRLIS",288,0)
 ; 
"RTN","RCDPRLIS",289,0)
 N RETURN
"RTN","RCDPRLIS",290,0)
 S RETURN="SOA^"
"RTN","RCDPRLIS",291,0)
 F J=1:1:$L(CODES,";") D  ;
"RTN","RCDPRLIS",292,0)
 . S X=$P($P(CODES,";",J),":",2)
"RTN","RCDPRLIS",293,0)
 . I X'="",'$D(PICKED(X)) S RETURN=RETURN_$P(CODES,";",J)_";"
"RTN","RCDPRLIS",294,0)
 Q RETURN
"RTN","RCDPRLIS",295,0)
 ;
"RTN","RCDPRLIS",296,0)
HDR ; Compile header into ^TMP for use in ListMan or report
"RTN","RCDPRLIS",297,0)
 ; Input: None
"RTN","RCDPRLIS",298,0)
 ; Output: Header information in ^TMP($J,"RCDPRLIS","HDR",n) for us in report or ListMan formats
"RTN","RCDPRLIS",299,0)
 N K,XX
"RTN","RCDPRLIS",300,0)
 S ^TMP($J,"RCDPRLIS","HDR",1)="LIST OF RECEIPTS REPORT"
"RTN","RCDPRLIS",301,0)
 s XX="  DATE RANGE   : "_DATEDIS1_"  TO  "_DATEDIS2_"         "
"RTN","RCDPRLIS",302,0)
 S XX=XX_"SORT ORDER: "_$S(RCSORT="D":"DATE OPENED",RCSORT="F":"FMS STATUS",1:"PAYMENT TYPE")
"RTN","RCDPRLIS",303,0)
 S ^TMP($J,"RCDPRLIS","HDR",2)=XX
"RTN","RCDPRLIS",304,0)
 ;
"RTN","RCDPRLIS",305,0)
 I 'RCFILTF D  ;
"RTN","RCDPRLIS",306,0)
 . S XX="ALL"
"RTN","RCDPRLIS",307,0)
 E  D  ;
"RTN","RCDPRLIS",308,0)
 . S XX=""
"RTN","RCDPRLIS",309,0)
 . S K="" F  S K=$O(RCFILTF(K)) Q:K=""  S:XX'="" XX=XX_"; " S XX=XX_K
"RTN","RCDPRLIS",310,0)
 S ^TMP($J,"RCDPRLIS","HDR",3)="  FMS STATUS   : "_$S($L(XX)>63:"SELECTED",1:XX)
"RTN","RCDPRLIS",311,0)
 ;
"RTN","RCDPRLIS",312,0)
  I 'RCFILTT D  ;
"RTN","RCDPRLIS",313,0)
 . S XX="ALL"
"RTN","RCDPRLIS",314,0)
 E  D  ;
"RTN","RCDPRLIS",315,0)
 . S XX=""
"RTN","RCDPRLIS",316,0)
 . S K="" F  S K=$O(RCFILTT(K)) Q:K=""  S:XX'="" XX=XX_"; " S XX=XX_K
"RTN","RCDPRLIS",317,0)
 S ^TMP($J,"RCDPRLIS","HDR",4)="  PAYMENT TYPES: "_$S($L(XX)>63:"SELECTED",1:XX)
"RTN","RCDPRLIS",318,0)
 S ^TMP($J,"RCDPRLIS","HDR",5)="DATE     RECEIPT      TYPE     US COUNT       AMOUNT  FMS CR DOC       STATUS"
"RTN","RCDPRLIS",319,0)
 W !,RCRJLINE
"RTN","RCDPRLIS",320,0)
 Q
"RTN","RCDPRLIS",321,0)
 ;
"RTN","RCDPRLIS",322,0)
H ;  header
"RTN","RCDPRLIS",323,0)
 N %
"RTN","RCDPRLIS",324,0)
 S %=NOW_"  PAGE "_PAGE,PAGE=PAGE+1 I PAGE'=2!(SCREEN) W @IOF
"RTN","RCDPRLIS",325,0)
 W $C(13),^TMP($J,"RCDPRLIS","HDR",1),?(80-$L(%)),%
"RTN","RCDPRLIS",326,0)
 W !,^TMP($J,"RCDPRLIS","HDR",2)
"RTN","RCDPRLIS",327,0)
 W !,^TMP($J,"RCDPRLIS","HDR",3)
"RTN","RCDPRLIS",328,0)
 W !,^TMP($J,"RCDPRLIS","HDR",4)
"RTN","RCDPRLIS",329,0)
 W !,^TMP($J,"RCDPRLIS","HDR",5)
"RTN","RCDPRLIS",330,0)
 W !,RCRJLINE
"RTN","RCDPRLIS",331,0)
 Q
"RTN","RCDPRPL1")
0^37^B33857605
"RTN","RCDPRPL1",1,0)
RCDPRPL1 ;WISC/RFJ-receipt profile listmanager options ;1 Jun 99
"RTN","RCDPRPL1",2,0)
 ;;4.5;Accounts Receivable;**114,321**;Mar 20, 1995;Build 48
"RTN","RCDPRPL1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPRPL1",4,0)
 Q
"RTN","RCDPRPL1",5,0)
 ;
"RTN","RCDPRPL1",6,0)
 ;  this routine contains the entry points for payment transactions
"RTN","RCDPRPL1",7,0)
 ;
"RTN","RCDPRPL1",8,0)
 ;
"RTN","RCDPRPL1",9,0)
ENTRTRAN ;  option: enter a payment transaction
"RTN","RCDPRPL1",10,0)
 ;  this option can only be selected for unapproved receipts
"RTN","RCDPRPL1",11,0)
 ;  screen placed in protocol file and below as backup
"RTN","RCDPRPL1",12,0)
 D FULL^VALM1
"RTN","RCDPRPL1",13,0)
 S VALMBCK="R"
"RTN","RCDPRPL1",14,0)
 ;
"RTN","RCDPRPL1",15,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) Q
"RTN","RCDPRPL1",16,0)
 ;
"RTN","RCDPRPL1",17,0)
 N %,RCTRANDA,RCTYPE
"RTN","RCDPRPL1",18,0)
 S RCTYPE=$P($G(^RC(341.1,+$P(^RCY(344,RCRECTDA,0),"^",4),0)),"^",2)
"RTN","RCDPRPL1",19,0)
 ;
"RTN","RCDPRPL1",20,0)
 W !
"RTN","RCDPRPL1",21,0)
 W !,"                 Type of payment: ",$P($G(^RC(341.1,+$P(^RCY(344,RCRECTDA,0),"^",4),0)),"^")
"RTN","RCDPRPL1",22,0)
 W !,"Adding a NEW payment transaction: "
"RTN","RCDPRPL1",23,0)
 S RCTRANDA=$$ADDTRAN^RCDPURET(RCRECTDA)
"RTN","RCDPRPL1",24,0)
 I 'RCTRANDA D  Q
"RTN","RCDPRPL1",25,0)
 .   S VALMSG="Unable to ADD a new payment transaction."
"RTN","RCDPRPL1",26,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPRPL1",27,0)
 .   L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL1",28,0)
 ;
"RTN","RCDPRPL1",29,0)
 W "# ",RCTRANDA
"RTN","RCDPRPL1",30,0)
 S %=$$EDITTRAN^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPRPL1",31,0)
 I '% D  Q
"RTN","RCDPRPL1",32,0)
 .   S VALMSG=%
"RTN","RCDPRPL1",33,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPRPL1",34,0)
 .   L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL1",35,0)
 ;
"RTN","RCDPRPL1",36,0)
 S VALMSG="Transaction # "_RCTRANDA_" has been ADDED."
"RTN","RCDPRPL1",37,0)
 ;
"RTN","RCDPRPL1",38,0)
 D INIT^RCDPRPLM
"RTN","RCDPRPL1",39,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL1",40,0)
 Q
"RTN","RCDPRPL1",41,0)
 ;
"RTN","RCDPRPL1",42,0)
 ;
"RTN","RCDPRPL1",43,0)
EDITTRAN ;  option: edit a payment transaction
"RTN","RCDPRPL1",44,0)
 ;  this option can only be selected for unapproved receipts
"RTN","RCDPRPL1",45,0)
 ;  screen placed in protocol file and below as backup
"RTN","RCDPRPL1",46,0)
 D FULL^VALM1
"RTN","RCDPRPL1",47,0)
 S VALMBCK="R"
"RTN","RCDPRPL1",48,0)
 ;
"RTN","RCDPRPL1",49,0)
 N %,RCEEOB,RCTRANDA ; prca*4.5*321 - added RCEEOB
"RTN","RCDPRPL1",50,0)
 ;  select the payment transaction
"RTN","RCDPRPL1",51,0)
 S RCTRANDA=$$SELPAY(RCRECTDA) I RCTRANDA<1 Q
"RTN","RCDPRPL1",52,0)
 ;
"RTN","RCDPRPL1",53,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) Q
"RTN","RCDPRPL1",54,0)
 ;
"RTN","RCDPRPL1",55,0)
 ;  transaction is cancelled, cannot edit
"RTN","RCDPRPL1",56,0)
 I '$P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",4),$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,1)),"^")'="" D  Q
"RTN","RCDPRPL1",57,0)
 .   S VALMSG="Payment Transaction "_RCTRANDA_" is CANCELLED."
"RTN","RCDPRPL1",58,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPRPL1",59,0)
 .   L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL1",60,0)
 ;
"RTN","RCDPRPL1",61,0)
 W !!,"Editing Payment: ",RCTRANDA
"RTN","RCDPRPL1",62,0)
 S %=$$EDITTRAN^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPRPL1",63,0)
 I '% S VALMSG="Transaction DELETED." D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPRPL1",64,0)
 ; BEGIN - PRCA*4.5*321
"RTN","RCDPRPL1",65,0)
 I % D
"RTN","RCDPRPL1",66,0)
 . ; Option to restore suspense EEOB
"RTN","RCDPRPL1",67,0)
 . S RCEEOB=$$EEOB^RCDPEM5(RCRECTDA,RCTRANDA)
"RTN","RCDPRPL1",68,0)
 . ; Update EEOB claim number and restore to active status
"RTN","RCDPRPL1",69,0)
 . D:RCEEOB>0 RESTORE^RCDPEM5(RCRECTDA,RCTRANDA,RCEEOB,"R")
"RTN","RCDPRPL1",70,0)
 ; END - PRCA*4.5*321
"RTN","RCDPRPL1",71,0)
 ;
"RTN","RCDPRPL1",72,0)
 D INIT^RCDPRPLM
"RTN","RCDPRPL1",73,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL1",74,0)
 Q
"RTN","RCDPRPL1",75,0)
 ;
"RTN","RCDPRPL1",76,0)
 ;
"RTN","RCDPRPL1",77,0)
CANCTRAN ;  option: cancel a transaction
"RTN","RCDPRPL1",78,0)
 ;  this option can only be selected for unapproved receipts
"RTN","RCDPRPL1",79,0)
 ;  screen placed in protocol file and below as backup
"RTN","RCDPRPL1",80,0)
 D FULL^VALM1
"RTN","RCDPRPL1",81,0)
 S VALMBCK="R"
"RTN","RCDPRPL1",82,0)
 ;
"RTN","RCDPRPL1",83,0)
 N RCTRANDA
"RTN","RCDPRPL1",84,0)
 ;  select the payment transaction
"RTN","RCDPRPL1",85,0)
 S RCTRANDA=$$SELPAY(RCRECTDA) I RCTRANDA<1 Q
"RTN","RCDPRPL1",86,0)
 ;
"RTN","RCDPRPL1",87,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) Q
"RTN","RCDPRPL1",88,0)
 ;
"RTN","RCDPRPL1",89,0)
 ;  check to see if already cancelled
"RTN","RCDPRPL1",90,0)
 I $P($G(^RCY(344,RCRECTDA,1,RCTRANDA,0)),"^",4)=0,$P($G(^(1)),"^")'="" D  Q
"RTN","RCDPRPL1",91,0)
 .   S VALMSG="Payment Transaction "_RCTRANDA_" is already CANCELLED."
"RTN","RCDPRPL1",92,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPRPL1",93,0)
 .   L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL1",94,0)
 ;
"RTN","RCDPRPL1",95,0)
 ;  ask to cancel
"RTN","RCDPRPL1",96,0)
 I $$ASKCANC(RCTRANDA)=1 D
"RTN","RCDPRPL1",97,0)
 .   D CANCTRAN^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPRPL1",98,0)
 .   S VALMSG="Transaction # "_RCTRANDA_" has been CANCELLED"
"RTN","RCDPRPL1",99,0)
 ;
"RTN","RCDPRPL1",100,0)
 D INIT^RCDPRPLM
"RTN","RCDPRPL1",101,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL1",102,0)
 Q
"RTN","RCDPRPL1",103,0)
 ;
"RTN","RCDPRPL1",104,0)
 ;
"RTN","RCDPRPL1",105,0)
MOVETRAN ;  move a transaction from one receipt to another
"RTN","RCDPRPL1",106,0)
 D FULL^VALM1
"RTN","RCDPRPL1",107,0)
 S VALMBCK="R"
"RTN","RCDPRPL1",108,0)
 ;
"RTN","RCDPRPL1",109,0)
 N RCNEWREC,RCNEWTRA,RCTRANDA
"RTN","RCDPRPL1",110,0)
 ;  select the payment transaction
"RTN","RCDPRPL1",111,0)
 S RCTRANDA=$$SELPAY(RCRECTDA) I RCTRANDA<1 Q
"RTN","RCDPRPL1",112,0)
 ;
"RTN","RCDPRPL1",113,0)
 I '$$LOCKREC^RCDPRPLU(RCRECTDA) Q
"RTN","RCDPRPL1",114,0)
 ;
"RTN","RCDPRPL1",115,0)
 ;  transaction is cancelled, cannot edit
"RTN","RCDPRPL1",116,0)
 I '$P(^RCY(344,RCRECTDA,1,RCTRANDA,0),"^",4),$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,1)),"^")'="" D  Q
"RTN","RCDPRPL1",117,0)
 .   S VALMSG="Payment Transaction "_RCTRANDA_" is CANCELLED."
"RTN","RCDPRPL1",118,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPRPL1",119,0)
 .   D UNLOCK
"RTN","RCDPRPL1",120,0)
 ;
"RTN","RCDPRPL1",121,0)
 ;  select the receipt to move transaction to (can add new one)
"RTN","RCDPRPL1",122,0)
 F  D  Q:RCNEWREC
"RTN","RCDPRPL1",123,0)
 .   W !!,"Select the RECEIPT to move the payment transaction #"_RCTRANDA_" to:"
"RTN","RCDPRPL1",124,0)
 .   S RCNEWREC=$$SELRECT^RCDPUREC(1)
"RTN","RCDPRPL1",125,0)
 .   I RCNEWREC<1 S RCNEWREC=-1 Q
"RTN","RCDPRPL1",126,0)
 .   I RCNEWREC=RCRECTDA W !,"Cannot copy transaction to same receipt." S RCNEWREC=0 Q
"RTN","RCDPRPL1",127,0)
 .   I '$$CHECKREC^RCDPRPLU(RCNEWREC) W !,"Cannot copy to a receipt which is CLOSED." S RCNEWREC=0 Q
"RTN","RCDPRPL1",128,0)
 I RCNEWREC<1 D UNLOCK Q
"RTN","RCDPRPL1",129,0)
 ;
"RTN","RCDPRPL1",130,0)
 I '$$LOCKREC^RCDPRPLU(RCNEWREC) D UNLOCK Q
"RTN","RCDPRPL1",131,0)
 ;
"RTN","RCDPRPL1",132,0)
 W !
"RTN","RCDPRPL1",133,0)
 I $P($G(^RCY(344,RCNEWREC,0)),"^",4)'=$P(^RCY(344,RCRECTDA,0),"^",4) W !,"WARNING, receipt types of payment are not the same type of payment."
"RTN","RCDPRPL1",134,0)
 ;
"RTN","RCDPRPL1",135,0)
 I $$ASKMOVE(RCNEWREC)'=1 D UNLOCK Q
"RTN","RCDPRPL1",136,0)
 ;
"RTN","RCDPRPL1",137,0)
 ;  MOVETRAN will add the new transaction, and allow the user to
"RTN","RCDPRPL1",138,0)
 ;  edit the data.  returns error message if not successful or
"RTN","RCDPRPL1",139,0)
 ;  returns the transaction number.
"RTN","RCDPRPL1",140,0)
 S RCNEWTRA=$$MOVETRAN^RCDPURET(RCRECTDA,RCTRANDA,RCNEWREC)
"RTN","RCDPRPL1",141,0)
 I 'RCNEWTRA D  Q
"RTN","RCDPRPL1",142,0)
 .   S VALMSG=%
"RTN","RCDPRPL1",143,0)
 .   D WRITE^RCDPRPLU(VALMSG)
"RTN","RCDPRPL1",144,0)
 .   D UNLOCK
"RTN","RCDPRPL1",145,0)
 ;
"RTN","RCDPRPL1",146,0)
 ;  delete the transaction just moved
"RTN","RCDPRPL1",147,0)
 D DELETRAN^RCDPURET(RCRECTDA,RCTRANDA)
"RTN","RCDPRPL1",148,0)
 ;
"RTN","RCDPRPL1",149,0)
 D INIT^RCDPRPLM
"RTN","RCDPRPL1",150,0)
 S VALMSG="Transaction # "_RCTRANDA_" has been MOVED/DELETED."
"RTN","RCDPRPL1",151,0)
 ;
"RTN","RCDPRPL1",152,0)
UNLOCK ;  unlock receipts
"RTN","RCDPRPL1",153,0)
 L -^RCY(344,RCRECTDA)
"RTN","RCDPRPL1",154,0)
 I $G(RCNEWREC)>0 L -^RCY(344,RCNEWREC)
"RTN","RCDPRPL1",155,0)
 Q
"RTN","RCDPRPL1",156,0)
 ;
"RTN","RCDPRPL1",157,0)
 ;
"RTN","RCDPRPL1",158,0)
SELPAY(RCRECTDA) ;  select the payment transaction for the receipt (from listmanager options)
"RTN","RCDPRPL1",159,0)
 N RCTRANDA
"RTN","RCDPRPL1",160,0)
 ;  if no payments, quit
"RTN","RCDPRPL1",161,0)
 I '$O(^RCY(344,RCRECTDA,1,0)) S VALMSG="There are NO payments." Q 0
"RTN","RCDPRPL1",162,0)
 ;  if only one payment, select that one automatically
"RTN","RCDPRPL1",163,0)
 I $P($G(^RCY(344,RCRECTDA,1,0)),"^",4)=1 S RCTRANDA=$O(^RCY(344,RCRECTDA,1,0))
"RTN","RCDPRPL1",164,0)
 ;  select the payment transaction
"RTN","RCDPRPL1",165,0)
 I '$G(RCTRANDA) W ! S RCTRANDA=$$SELTRAN^RCDPURET(RCRECTDA)
"RTN","RCDPRPL1",166,0)
 Q RCTRANDA
"RTN","RCDPRPL1",167,0)
 ;
"RTN","RCDPRPL1",168,0)
 ;
"RTN","RCDPRPL1",169,0)
ASKCANC(RCTRANDA) ;  ask if it's okay to cancel a transaction
"RTN","RCDPRPL1",170,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL1",171,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL1",172,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPRPL1",173,0)
 S DIR("A")="  Are you sure you want to CANCEL transaction # "_RCTRANDA
"RTN","RCDPRPL1",174,0)
 W ! D ^DIR
"RTN","RCDPRPL1",175,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL1",176,0)
 Q Y
"RTN","RCDPRPL1",177,0)
 ;
"RTN","RCDPRPL1",178,0)
 ;
"RTN","RCDPRPL1",179,0)
ASKMOVE(RECTDA) ;  ask if its okay to move the transaction
"RTN","RCDPRPL1",180,0)
 ;  1 is yes, otherwise no
"RTN","RCDPRPL1",181,0)
 N DIR,DIQ2,DTOUT,DUOUT,X,Y
"RTN","RCDPRPL1",182,0)
 S DIR(0)="YO",DIR("B")="NO"
"RTN","RCDPRPL1",183,0)
 S DIR("A")="  Are you sure you want to MOVE this payment to receipt "_$P($G(^RCY(344,RECTDA,0)),"^")
"RTN","RCDPRPL1",184,0)
 D ^DIR
"RTN","RCDPRPL1",185,0)
 I $G(DTOUT)!($G(DUOUT)) S Y=-1
"RTN","RCDPRPL1",186,0)
 Q Y
"RTN","RCDPRPLM")
0^40^B91367884
"RTN","RCDPRPLM",1,0)
RCDPRPLM ;;WISC/RFJ-receipt profile listmanager top routine ;1 Jun 99
"RTN","RCDPRPLM",2,0)
 ;;4.5;Accounts Receivable;**114,148,149,173,196,220,217,321**;Mar 20, 1995;Build 48
"RTN","RCDPRPLM",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPRPLM",4,0)
 ;
"RTN","RCDPRPLM",5,0)
 N RCDPFXIT
"RTN","RCDPRPLM",6,0)
 ;
"RTN","RCDPRPLM",7,0)
RECTPROF ;  entry point called by link payment to prevent newing
"RTN","RCDPRPLM",8,0)
 ; fast exit var RCDPFXIT
"RTN","RCDPRPLM",9,0)
 N RCRECTDA
"RTN","RCDPRPLM",10,0)
 ;
"RTN","RCDPRPLM",11,0)
 F  D  Q:'RCRECTDA
"RTN","RCDPRPLM",12,0)
 . W !! S RCRECTDA=$$SELRECT^RCDPUREC(1)  ;allow adding new receipt
"RTN","RCDPRPLM",13,0)
 . I RCRECTDA<1 S RCRECTDA=0 Q
"RTN","RCDPRPLM",14,0)
 . D EN^VALM("RCDP RECEIPT PROFILE")
"RTN","RCDPRPLM",15,0)
 . ; fast exit
"RTN","RCDPRPLM",16,0)
 . I $G(RCDPFXIT) S RCRECTDA=0
"RTN","RCDPRPLM",17,0)
 Q
"RTN","RCDPRPLM",18,0)
 ;
"RTN","RCDPRPLM",19,0)
 ;
"RTN","RCDPRPLM",20,0)
INIT ; init for list manager
"RTN","RCDPRPLM",21,0)
 N DATE,FMSDOC,GECSDA1,GECSDATA,RCCANCEL,RCDPDATA,RCDPFCAN,RCLINE,RCTOTAL,RCTRDA,SPACE,RCEFT,X,Z,Z0,RCZ,RCZ0,RCZ1,RCZ2,EFTFUND
"RTN","RCDPRPLM",22,0)
 K ^TMP("RCDPRPLM",$J),^TMP("VALM VIDEO",$J)
"RTN","RCDPRPLM",23,0)
 ;
"RTN","RCDPRPLM",24,0)
 ; fast exit
"RTN","RCDPRPLM",25,0)
 I $G(RCDPFXIT) S VALMQUIT=1 Q
"RTN","RCDPRPLM",26,0)
 ;
"RTN","RCDPRPLM",27,0)
 D DIQ344(RCRECTDA,".02:200")
"RTN","RCDPRPLM",28,0)
 ;
"RTN","RCDPRPLM",29,0)
 ; set listmanager line #
"RTN","RCDPRPLM",30,0)
 S RCLINE=0
"RTN","RCDPRPLM",31,0)
 ;
"RTN","RCDPRPLM",32,0)
 K ^TMP($J,"RCEFT")
"RTN","RCDPRPLM",33,0)
 S EFTFUND=$S(DT<$$ADDPTEDT^PRCAACC():"5287.4/8NZZ ",1:"528704/8NZZ ")
"RTN","RCDPRPLM",34,0)
 S RCEFT=+$O(^RCY(344.3,"ARDEP",+$P($G(^RCY(344,RCRECTDA,0)),U,6),0))
"RTN","RCDPRPLM",35,0)
 I RCEFT D
"RTN","RCDPRPLM",36,0)
 . S Z=0 F  S Z=$O(^RCY(344.31,"B",RCEFT,Z)) Q:'Z  S Z0=$G(^RCY(344.31,+Z,0)) I $P(Z0,U,14) S ^TMP($J,"RCEFT",$P(Z0,U,14))=Z_U_$E($P(Z0,U,2),1,12)
"RTN","RCDPRPLM",37,0)
 S RCTRDA=0 F  S RCTRDA=$O(^RCY(344,RCRECTDA,1,RCTRDA)) Q:'RCTRDA  D
"RTN","RCDPRPLM",38,0)
 . D DIQ34401(RCRECTDA,RCTRDA)
"RTN","RCDPRPLM",39,0)
 . S RCLINE=RCLINE+1 D SET("",RCLINE,1,80,.01)
"RTN","RCDPRPLM",40,0)
 . ;check for payment cancelled
"RTN","RCDPRPLM",41,0)
 . S RCCANCEL=0
"RTN","RCDPRPLM",42,0)
 . I $P($G(^RCY(344,RCRECTDA,1,RCTRDA,0)),"^",4)=0,$P($G(^(1)),"^")'="" D
"RTN","RCDPRPLM",43,0)
 . . S RCCANCEL=1,RCDPFCAN=1
"RTN","RCDPRPLM",44,0)
 . . D SET("**",RCLINE,5,6)
"RTN","RCDPRPLM",45,0)
 . ;account
"RTN","RCDPRPLM",46,0)
 . I $G(RCDPDATA(344.01,RCTRDA,.03,"E"))="" D
"RTN","RCDPRPLM",47,0)
 . . S RCDPDATA(344.01,RCTRDA,.03,"E")="[ "_$S(RCEFT:EFTFUND_$P($G(^TMP($J,"RCEFT",RCTRDA)),U,2),1:"suspense"_$$GETUNAPP^RCXFMSCR(RCRECTDA,RCTRDA,0))_" ]"
"RTN","RCDPRPLM",48,0)
 . D SET("",RCLINE,7,33,.03)
"RTN","RCDPRPLM",49,0)
 . ;date of payment
"RTN","RCDPRPLM",50,0)
 . I RCDPDATA(344.01,RCTRDA,.06,"I") D
"RTN","RCDPRPLM",51,0)
 . . D SET($E(RCDPDATA(344.01,RCTRDA,.06,"I"),4,5)_"/"_$E(RCDPDATA(344.01,RCTRDA,.06,"I"),6,7)_"/"_$E(RCDPDATA(344.01,RCTRDA,.06,"I"),2,3),RCLINE,35,42)
"RTN","RCDPRPLM",52,0)
 . ;entered by
"RTN","RCDPRPLM",53,0)
 . I RCDPDATA(344.01,RCTRDA,.12,"E")'="" D
"RTN","RCDPRPLM",54,0)
 . . S X=$E($P(RCDPDATA(344.01,RCTRDA,.12,"E"),",",2))_$E(RCDPDATA(344.01,RCTRDA,.12,"E"))
"RTN","RCDPRPLM",55,0)
 . . I RCDPDATA(344.01,RCTRDA,.12,"I")=.5 S X="ar"
"RTN","RCDPRPLM",56,0)
 . . D SET(X,RCLINE,45,46)
"RTN","RCDPRPLM",57,0)
 . I RCDPDATA(344.01,RCTRDA,.14,"E")'="" D
"RTN","RCDPRPLM",58,0)
 . . S X=$E($P(RCDPDATA(344.01,RCTRDA,.14,"E"),",",2))_$E(RCDPDATA(344.01,RCTRDA,.14,"E"))
"RTN","RCDPRPLM",59,0)
 . . D SET(X,RCLINE,54,55)
"RTN","RCDPRPLM",60,0)
 . D SET($J(RCDPDATA(344.01,RCTRDA,.04,"E"),8,2),RCLINE,62,70)
"RTN","RCDPRPLM",61,0)
 . D SET($J(RCDPDATA(344.01,RCTRDA,.05,"E"),8,2),RCLINE,72,80)
"RTN","RCDPRPLM",62,0)
 . ;
"RTN","RCDPRPLM",63,0)
 . ;if not processed, show if amount > bill
"RTN","RCDPRPLM",64,0)
 . S X=$$CHECKPAY^RCDPRPL3(RCRECTDA,RCTRDA) I X D
"RTN","RCDPRPLM",65,0)
 . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",66,0)
 . . D SET("  WARNING: Pending Payments ($ "_$J($P(X,"^",3),0,2)_") exceed amount billed ($ "_$J($P(X,"^",2),0,2)_")",RCLINE,1,80)
"RTN","RCDPRPLM",67,0)
 . ;
"RTN","RCDPRPLM",68,0)
 . ;show line 2 for check/credit payment
"RTN","RCDPRPLM",69,0)
 . I $$OPTCK^RCDPRPL2("SHOWCHECK",2) D
"RTN","RCDPRPLM",70,0)
 . . ;receipt type of payment is check
"RTN","RCDPRPLM",71,0)
 . . I RCDPDATA(344,RCRECTDA,.04,"I")=4!(RCDPDATA(344,RCRECTDA,.04,"I")=12) D  Q
"RTN","RCDPRPLM",72,0)
 . . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",73,0)
 . . . D SET("      Check #",RCLINE,1,80,.07)
"RTN","RCDPRPLM",74,0)
 . . . I 'RCDPDATA(344.01,RCTRDA,.1,"I") S RCDPDATA(344.01,RCTRDA,.1,"I")="???????"
"RTN","RCDPRPLM",75,0)
 . . . D SET("Date: "_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),4,5)_"/"_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),6,7)_"/"_$E(RCDPDATA(344.01,RCTRDA,.1,"I"),2,3),RCLINE,32,80)
"RTN","RCDPRPLM",76,0)
 . . . D SET("Bank #",RCLINE,47,80,.08)
"RTN","RCDPRPLM",77,0)
 . . ;receipt type of payment is credit
"RTN","RCDPRPLM",78,0)
 . . I RCDPDATA(344,RCRECTDA,.04,"I")=7 D
"RTN","RCDPRPLM",79,0)
 . . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",80,0)
 . . . D SET("      Card #",RCLINE,1,80,.11)
"RTN","RCDPRPLM",81,0)
 . . . D SET("Confirmation #",RCLINE,35,80,.02)
"RTN","RCDPRPLM",82,0)
 . ;
"RTN","RCDPRPLM",83,0)
 . ;show line 3 for acct lookup, batch and seq #
"RTN","RCDPRPLM",84,0)
 . I $$OPTCK^RCDPRPL2("SHOWACCT",2) D
"RTN","RCDPRPLM",85,0)
 . . I RCDPDATA(344.01,RCTRDA,.21,"E")="",RCDPDATA(344.01,RCTRDA,.22,"E")="",RCDPDATA(344.01,RCTRDA,.23,"E")="" Q
"RTN","RCDPRPLM",86,0)
 . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",87,0)
 . . D SET("      AcctLU",RCLINE,1,80,.21)
"RTN","RCDPRPLM",88,0)
 . . D SET("Batch/Sequence: "_RCDPDATA(344.01,RCTRDA,.22,"E")_"/"_RCDPDATA(344.01,RCTRDA,.23,"E"),RCLINE,37,80)
"RTN","RCDPRPLM",89,0)
 . ;
"RTN","RCDPRPLM",90,0)
 . ;show if posting error
"RTN","RCDPRPLM",91,0)
 . I $$OPTCK^RCDPRPL2("SHOWCOMMENTS",2),RCDPDATA(344.01,RCTRDA,1.01,"E")'="" D
"RTN","RCDPRPLM",92,0)
 . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",93,0)
 . . S X="Posting Error"
"RTN","RCDPRPLM",94,0)
 . . I RCCANCEL S X="Cancel Data"
"RTN","RCDPRPLM",95,0)
 . . D SET("      "_X,RCLINE,1,80,1.01)
"RTN","RCDPRPLM",96,0)
 . ;
"RTN","RCDPRPLM",97,0)
 . ;show if comment
"RTN","RCDPRPLM",98,0)
 . I $$OPTCK^RCDPRPL2("SHOWCOMMENTS",2),RCDPDATA(344.01,RCTRDA,1.02,"E")'="" D
"RTN","RCDPRPLM",99,0)
 . . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",100,0)
 . . D SET("      Comment",RCLINE,1,80,1.02)
"RTN","RCDPRPLM",101,0)
 . ;
"RTN","RCDPRPLM",102,0)
 . ;if EDI Lockbox pending adjustments, show it
"RTN","RCDPRPLM",103,0)
 . I $P($G(^RCY(344,RCRECTDA,0)),U,18),$G(RCDPDATA(344.01,RCTRDA,.27,"E")) D
"RTN","RCDPRPLM",104,0)
 . . S RCZ=$P(^RCY(344,RCRECTDA,0),U,18),RCZ0=RCDPDATA(344.01,RCTRDA,.27,"E")
"RTN","RCDPRPLM",105,0)
 . . S RCZ1=0 F  S RCZ1=$O(^RCY(344.49,RCZ,1,RCZ0,1,RCZ1)) Q:'RCZ1  S RCZ2=$G(^(RCZ1,0)) I $P(RCZ2,U,5)'="","12"[$P(RCZ2,U,5),'$P(RCZ2,U,8) D
"RTN","RCDPRPLM",106,0)
 . . . I $P(RCZ2,U,5)=1 S RCLINE=RCLINE+1 D SET("      Pending decrease adjustment for "_$J($P(RCZ2,U,3),"",2),RCLINE,1,80) Q
"RTN","RCDPRPLM",107,0)
 . . . I $$OPTCK^RCDPRPL2("SHOWCOMMENTS",2),$P(RCZ2,U,5)=2 S RCLINE=RCLINE+1 D SET("      Comment: "_$P(RCZ2,U,9),RCLINE,1,80) Q
"RTN","RCDPRPLM",108,0)
 . ;
"RTN","RCDPRPLM",109,0)
 . ;calculate totals
"RTN","RCDPRPLM",110,0)
 . S RCTOTAL(1)=$G(RCTOTAL(1))+RCDPDATA(344.01,RCTRDA,.04,"E")
"RTN","RCDPRPLM",111,0)
 . S RCTOTAL(2)=$G(RCTOTAL(2))+RCDPDATA(344.01,RCTRDA,.05,"E")
"RTN","RCDPRPLM",112,0)
 . ;
"RTN","RCDPRPLM",113,0)
 . ;kill local variable to prevent store errors
"RTN","RCDPRPLM",114,0)
 . K RCDPDATA(344.01,RCTRDA)
"RTN","RCDPRPLM",115,0)
 ;
"RTN","RCDPRPLM",116,0)
 ; show totals
"RTN","RCDPRPLM",117,0)
 K ^TMP($J,"RCEFT")
"RTN","RCDPRPLM",118,0)
 S RCLINE=RCLINE+1 D SET("",RCLINE,1,80)
"RTN","RCDPRPLM",119,0)
 D SET("--------  --------",RCLINE,62,80)
"RTN","RCDPRPLM",120,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",121,0)
 D SET("      TOTAL DOLLARS FOR RECEIPT",RCLINE,1,80)
"RTN","RCDPRPLM",122,0)
 D SET($J($G(RCTOTAL(1)),8,2),RCLINE,62,70)
"RTN","RCDPRPLM",123,0)
 D SET($J($G(RCTOTAL(2)),8,2),RCLINE,72,80)
"RTN","RCDPRPLM",124,0)
 ; show cancelled
"RTN","RCDPRPLM",125,0)
 I $G(RCDPFCAN) D
"RTN","RCDPRPLM",126,0)
 . S RCLINE=RCLINE+1
"RTN","RCDPRPLM",127,0)
 . D SET("**indicates payment is CANCELLED",RCLINE,5,80)
"RTN","RCDPRPLM",128,0)
 ;
"RTN","RCDPRPLM",129,0)
 ; show history
"RTN","RCDPRPLM",130,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",131,0)
 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",132,0)
 ; start history on first line of a screen if it does not fit on
"RTN","RCDPRPLM",133,0)
 ; current screen
"RTN","RCDPRPLM",134,0)
 I (RCLINE#12)>8 F SPACE=(RCLINE#12):1:12 S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",135,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",136,0)
 D SET("Receipt History",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPRPLM",137,0)
 S DATE=RCDPDATA(344,RCRECTDA,.03,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",138,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",139,0)
 S SPACE="",$P(SPACE," ",80)=""
"RTN","RCDPRPLM",140,0)
 I RCDPDATA(344,RCRECTDA,.02,"I")=.5 S RCDPDATA(344,RCRECTDA,.02,"E")="accounts receivable"
"RTN","RCDPRPLM",141,0)
 D SET($E("   Opened By: "_RCDPDATA(344,RCRECTDA,.02,"E")_SPACE,1,39)_"Date/Time    Opened: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",142,0)
 S DATE=RCDPDATA(344,RCRECTDA,.12,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",143,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",144,0)
 I RCDPDATA(344,RCRECTDA,.11,"I")=.5 S RCDPDATA(344,RCRECTDA,.11,"E")="accounts receivable"
"RTN","RCDPRPLM",145,0)
 D SET($E("Last Edit By: "_RCDPDATA(344,RCRECTDA,.11,"E")_SPACE,1,39)_"Date/Time Last Edit: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",146,0)
 S DATE=RCDPDATA(344,RCRECTDA,.08,"E"),DATE=$P(DATE,"@")_"  "_$P($P(DATE,"@",2),":",1,2)
"RTN","RCDPRPLM",147,0)
 S RCLINE=RCLINE+1
"RTN","RCDPRPLM",148,0)
 I RCDPDATA(344,RCRECTDA,.07,"I")=.5 S RCDPDATA(344,RCRECTDA,.07,"E")="accounts receivable"
"RTN","RCDPRPLM",149,0)
 D SET($E("Processed By: "_RCDPDATA(344,RCRECTDA,.07,"E")_SPACE,1,39)_"Date/Time Processed: "_DATE,RCLINE,1,80)
"RTN","RCDPRPLM",150,0)
 ;
"RTN","RCDPRPLM",151,0)
 ;show fms code sheets if switch on
"RTN","RCDPRPLM",152,0)
 I $$OPTCK^RCDPRPL2("SHOWFMS",2) D
"RTN","RCDPRPLM",153,0)
 . S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPLM",154,0)
 . S RCLINE=RCLINE+1 D SET(" ",RCLINE,1,80)
"RTN","RCDPRPLM",155,0)
 . S RCLINE=RCLINE+1 D SET("FMS Cash Receipt Document:",RCLINE,1,80,0,IOUON,IOUOFF)
"RTN","RCDPRPLM",156,0)
 . D SET($P(FMSDOC,"^")_$S($P(FMSDOC,"^",3):"(on deposit)",1:""),RCLINE,28,80)
"RTN","RCDPRPLM",157,0)
 . D SET("Status: "_$P(FMSDOC,"^",2),RCLINE,55,80)
"RTN","RCDPRPLM",158,0)
 . N DIQ2 D DATA^GECSSGET($P(FMSDOC,"^"),1)
"RTN","RCDPRPLM",159,0)
 . I '$G(GECSDATA) Q
"RTN","RCDPRPLM",160,0)
 . S GECSDA1=0 F  S GECSDA1=$O(GECSDATA(2100.1,GECSDATA,10,GECSDA1)) Q:'GECSDA1  D
"RTN","RCDPRPLM",161,0)
 . . S RCLINE=RCLINE+1 D SET(GECSDATA(2100.1,GECSDATA,10,GECSDA1),RCLINE,1,80)
"RTN","RCDPRPLM",162,0)
 ;
"RTN","RCDPRPLM",163,0)
 ; show EEOB detail if switch on
"RTN","RCDPRPLM",164,0)
 D SHEOB^RCDPRPL2
"RTN","RCDPRPLM",165,0)
 ;
"RTN","RCDPRPLM",166,0)
 ; set valmcnt to # of lines in list
"RTN","RCDPRPLM",167,0)
 S VALMCNT=RCLINE
"RTN","RCDPRPLM",168,0)
 D HDR
"RTN","RCDPRPLM",169,0)
 Q
"RTN","RCDPRPLM",170,0)
 ;
"RTN","RCDPRPLM",171,0)
 ;
"RTN","RCDPRPLM",172,0)
SET(STRING,LINE,COLBEG,COLEND,FIELD,ON,OFF) ;  set array
"RTN","RCDPRPLM",173,0)
 I $G(FIELD) S STRING=STRING_$S(STRING="":"",1:": ")_$G(RCDPDATA(344.01,RCTRDA,FIELD,"E"))
"RTN","RCDPRPLM",174,0)
 I STRING="",'$G(FIELD) D SET^VALM10(LINE,$J("",80)) Q
"RTN","RCDPRPLM",175,0)
 I '$D(@VALMAR@(LINE,0)) D SET^VALM10(LINE,$J("",80))
"RTN","RCDPRPLM",176,0)
 D SET^VALM10(LINE,$$SETSTR^VALM1(STRING,@VALMAR@(LINE,0),COLBEG,COLEND-COLBEG+1))
"RTN","RCDPRPLM",177,0)
 I $G(ON)]""!($G(OFF)]"") D CNTRL^VALM10(LINE,COLBEG,$L(STRING),ON,OFF)
"RTN","RCDPRPLM",178,0)
 Q
"RTN","RCDPRPLM",179,0)
 ;
"RTN","RCDPRPLM",180,0)
 ;
"RTN","RCDPRPLM",181,0)
DIQ344(DA,DR) ; retrieves data for flds in file 344
"RTN","RCDPRPLM",182,0)
 N %I,D0,DIC,DIQ,DIQ2,YY
"RTN","RCDPRPLM",183,0)
 K RCDPDATA(344,DA)
"RTN","RCDPRPLM",184,0)
 S DIQ(0)="IE",DIC="^RCY(344,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPRPLM",185,0)
 Q
"RTN","RCDPRPLM",186,0)
 ;
"RTN","RCDPRPLM",187,0)
 ;
"RTN","RCDPRPLM",188,0)
DIQ34401(DA,SUBDA) ; retrieves data for flds in file 344
"RTN","RCDPRPLM",189,0)
 ; da = receipt da
"RTN","RCDPRPLM",190,0)
 N %I,D0,DIC,DIQ,DIQ2,DR
"RTN","RCDPRPLM",191,0)
 K RCDPDATA(344.01,SUBDA)
"RTN","RCDPRPLM",192,0)
 S DR=1,DR(344.01)=".01:1.02",DA(344.01)=SUBDA
"RTN","RCDPRPLM",193,0)
 S DIQ(0)="IE",DIC="^RCY(344,",DIQ="RCDPDATA" D EN^DIQ1
"RTN","RCDPRPLM",194,0)
 Q
"RTN","RCDPRPLM",195,0)
 ;
"RTN","RCDPRPLM",196,0)
 ;
"RTN","RCDPRPLM",197,0)
HDR ; header code for list manager display
"RTN","RCDPRPLM",198,0)
 N DATE,DEPIEN,EFTIEN,ERAIEN,FMSDOC,FMSTTR,PAYER,RCDPDATA,RCEFT,SPACE,XX,Z
"RTN","RCDPRPLM",199,0)
 D DIQ344(RCRECTDA,".01;.04;.06;.08;.14;.17;.18;")
"RTN","RCDPRPLM",200,0)
 S SPACE="",$P(SPACE," ",80)=""
"RTN","RCDPRPLM",201,0)
 ;
"RTN","RCDPRPLM",202,0)
 ; PRCA*4.5*321 - Start of modified code block
"RTN","RCDPRPLM",203,0)
 S XX=$E("   Receipt #: "_RCDPDATA(344,RCRECTDA,.01,"E")_SPACE,1,39)
"RTN","RCDPRPLM",204,0)
 S XX=XX_"Type of Payment: "_RCDPDATA(344,RCRECTDA,.04,"E")
"RTN","RCDPRPLM",205,0)
 S VALMHDR(1)=XX
"RTN","RCDPRPLM",206,0)
 ;
"RTN","RCDPRPLM",207,0)
 S Z=RCDPDATA(344,RCRECTDA,.06,"E")
"RTN","RCDPRPLM",208,0)
 S DEPIEN=+$P($G(^RCY(344,RCRECTDA,0)),U,6)
"RTN","RCDPRPLM",209,0)
 S RCEFT=+$O(^RCY(344.3,"ARDEP",DEPIEN,0))
"RTN","RCDPRPLM",210,0)
 S EFTIEN=RCDPDATA(344,RCRECTDA,.17,"I")
"RTN","RCDPRPLM",211,0)
 S FMSDOC=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPRPLM",212,0)
 S FMSTTR=$S($P(FMSDOC,"-",1)="TR":1,1:0)
"RTN","RCDPRPLM",213,0)
 S XX=""
"RTN","RCDPRPLM",214,0)
 I 'RCEFT&'EFTIEN D  ;
"RTN","RCDPRPLM",215,0)
 . S XX="   Deposit #: "_Z
"RTN","RCDPRPLM",216,0)
 E  D  ;
"RTN","RCDPRPLM",217,0)
 . I RCEFT D  ;
"RTN","RCDPRPLM",218,0)
 . . S XX=" EFT Deposit: "_Z
"RTN","RCDPRPLM",219,0)
 . E  D  ;
"RTN","RCDPRPLM",220,0)
 . . ; PRCA*4.5*321 - Since EFT and ERA are now displayed on their own line, put TIN/Payer here 
"RTN","RCDPRPLM",221,0)
 . . N TIN
"RTN","RCDPRPLM",222,0)
 . . S PAYER=$$GET1^DIQ(344.31,EFTIEN_",",.02,"E")
"RTN","RCDPRPLM",223,0)
 . . S TIN=$$GET1^DIQ(344.31,EFTIEN_",",.03,"E")
"RTN","RCDPRPLM",224,0)
 . . S XX="   Payer: "_TIN_"/"_PAYER
"RTN","RCDPRPLM",225,0)
 S XX=$E(XX_SPACE,1,39)
"RTN","RCDPRPLM",226,0)
 S XX=XX_" Receipt Status: "_RCDPDATA(344,RCRECTDA,.14,"E")
"RTN","RCDPRPLM",227,0)
 S VALMHDR(2)=XX
"RTN","RCDPRPLM",228,0)
 ;
"RTN","RCDPRPLM",229,0)
 S ERAIEN=RCDPDATA(344,RCRECTDA,.18,"I")
"RTN","RCDPRPLM",230,0)
 S XX=""
"RTN","RCDPRPLM",231,0)
 I FMSTTR!ERAIEN S XX="   ERA #: "_RCDPDATA(344,RCRECTDA,.18,"E")
"RTN","RCDPRPLM",232,0)
 S XX=$E(XX_SPACE,1,21)
"RTN","RCDPRPLM",233,0)
 I FMSTTR!ERAIEN S XX=XX_"ERA TTL: "_$J($$GET1^DIQ(344.4,ERAIEN_",",.05,"E"),9)
"RTN","RCDPRPLM",234,0)
 S XX=$E(XX_SPACE,1,39)
"RTN","RCDPRPLM",235,0)
 ; get fms document and status
"RTN","RCDPRPLM",236,0)
 S XX=XX_" FMS Document: "_$TR($P(FMSDOC,"^")," ")_$S($P(FMSDOC,"^",3):"(on deposit)",1:"")
"RTN","RCDPRPLM",237,0)
 S VALMHDR(3)=XX
"RTN","RCDPRPLM",238,0)
 ;
"RTN","RCDPRPLM",239,0)
 S XX=""
"RTN","RCDPRPLM",240,0)
 I FMSTTR!EFTIEN S XX="   EFT #: "_RCDPDATA(344,RCRECTDA,.17,"E")
"RTN","RCDPRPLM",241,0)
 S XX=$E(XX_SPACE,1,21)
"RTN","RCDPRPLM",242,0)
 I FMSTTR!EFTIEN S XX=XX_"EFT TTL: "_$J($$GET1^DIQ(344.31,EFTIEN_",",.07,"E"),9)_" "
"RTN","RCDPRPLM",243,0)
 S XX=$E(XX_SPACE,1,39)
"RTN","RCDPRPLM",244,0)
 S XX=XX_" FMS Doc Status: "_$P(FMSDOC,"^",2)
"RTN","RCDPRPLM",245,0)
 S VALMHDR(4)=XX
"RTN","RCDPRPLM",246,0)
 ; PRCA*4.5*321 - End of modified code block
"RTN","RCDPRPLM",247,0)
 ;
"RTN","RCDPRPLM",248,0)
 I RCDPDATA(344,RCRECTDA,.08,"I") S VALMSG="Receipt processed on "_RCDPDATA(344,RCRECTDA,.08,"E")
"RTN","RCDPRPLM",249,0)
 Q
"RTN","RCDPRPLM",250,0)
 ;
"RTN","RCDPRPLM",251,0)
 ;
"RTN","RCDPRPLM",252,0)
EXIT ; exit option/clean up
"RTN","RCDPRPLM",253,0)
 K ^TMP("RCDPRPLM",$J)
"RTN","RCDPRPLM",254,0)
 Q
"RTN","RCDPRU")
0^31^B191218781
"RTN","RCDPRU",1,0)
RCDPRU ;ALB/TJB - CARC REPORT ON PAYER OR CARC CODE ;9/15/14 3:00pm
"RTN","RCDPRU",2,0)
 ;;4.5;Accounts Receivable;**303,321**;Mar 20, 1995;Build 48
"RTN","RCDPRU",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPRU",4,0)
 Q
"RTN","RCDPRU",5,0)
 ; PRCA*4.5*303 - CARC and Payer report utilities
"RTN","RCDPRU",6,0)
 ; IA 594 - ACCOUNTS RECEIVABLE CATEGORY file (#430.2)
"RTN","RCDPRU",7,0)
 ; IA 1077 - Using DIVISION^VAUTOMA to query for division
"RTN","RCDPRU",8,0)
 ; IA 1992 - BILL/CLAIMS file (#399)
"RTN","RCDPRU",9,0)
 ; IA 3820 - BILL/CLAIMS file (#399)
"RTN","RCDPRU",10,0)
 ; IA 3822 - RATE TYPE file (#399.3)
"RTN","RCDPRU",11,0)
 ; IA 4051 - EXPLANATION OF BENEFITS file (#361.1)
"RTN","RCDPRU",12,0)
 ; IA 4996 - BILL/CLAIMS file (#399)
"RTN","RCDPRU",13,0)
 ;
"RTN","RCDPRU",14,0)
DISPTY() ; function, ask display/output type
"RTN","RCDPRU",15,0)
         ; processes input from user
"RTN","RCDPRU",16,0)
         ; returns: Output destination (0=Display, 1=MS Excel, -1=timeout or '^)
"RTN","RCDPRU",17,0)
 N DIR,DUOUT,DIRUT,X,Y
"RTN","RCDPRU",18,0)
 S DIR(0)="YA",DIR("A")="Export the report to Microsoft Excel? (Y/N): ",DIR("B")="NO"
"RTN","RCDPRU",19,0)
 D ^DIR
"RTN","RCDPRU",20,0)
 I $D(DUOUT)!$D(DIRUT) S Y=-1
"RTN","RCDPRU",21,0)
 Q Y
"RTN","RCDPRU",22,0)
 ;
"RTN","RCDPRU",23,0)
INFO ; Useful Info for Excel capture
"RTN","RCDPRU",24,0)
 N SP S SP=$J(" ",10)  ; spaces
"RTN","RCDPRU",25,0)
 W !!!,SP_"Before continuing, please set up your terminal to capture the"
"RTN","RCDPRU",26,0)
 W !,SP_"report data as this report may take a while to run."
"RTN","RCDPRU",27,0)
 W !!,SP_"To avoid undesired wrapping of the data saved to the"
"RTN","RCDPRU",28,0)
 W !,SP_"file, please enter '0;256;999' at the 'DEVICE:' prompt."
"RTN","RCDPRU",29,0)
 W !!,SP_"It may be necessary to set the terminal's display width"
"RTN","RCDPRU",30,0)
 W !,SP_"to 256 characters, which can be performed by selecting the"
"RTN","RCDPRU",31,0)
 W !,SP_"Display option located within the 'Setup' menu on the"
"RTN","RCDPRU",32,0)
 W !,SP_"tool bar of the terminal emulation software (e.g. KEA,"
"RTN","RCDPRU",33,0)
 W !,SP_"Reflection, or Smarterm).",!!
"RTN","RCDPRU",34,0)
 Q
"RTN","RCDPRU",35,0)
 ;
"RTN","RCDPRU",36,0)
ASK(RCSTOP) ; User if you want to quit or continue
"RTN","RCDPRU",37,0)
 S RCSTOP=0
"RTN","RCDPRU",38,0)
 I $E(IOST,1,2)'["C-" Q
"RTN","RCDPRU",39,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPRU",40,0)
 S DIR(0)="E" W ! D ^DIR
"RTN","RCDPRU",41,0)
 I ($D(DIRUT))!($D(DUOUT)) S RCSTOP=1 Q
"RTN","RCDPRU",42,0)
 Q
"RTN","RCDPRU",43,0)
 ;
"RTN","RCDPRU",44,0)
UP(TEXT) ; Translate text to upper case
"RTN","RCDPRU",45,0)
 Q $$UP^XLFSTR($G(TEXT))
"RTN","RCDPRU",46,0)
 ;
"RTN","RCDPRU",47,0)
DATE(X,F) ; date in external format
"RTN","RCDPRU",48,0)
 I $G(F)="" S F="2Z" ; set date to return mm/dd/yy 
"RTN","RCDPRU",49,0)
 Q $$FMTE^XLFDT(X,F)
"RTN","RCDPRU",50,0)
 ;
"RTN","RCDPRU",51,0)
NOW(F) ; Date/Time of right now in external format
"RTN","RCDPRU",52,0)
 S:$G(F)="" F=1 ; Date format Mon dd, yyyy@hh:mm:ss see kernel documentation
"RTN","RCDPRU",53,0)
 Q $$FMTE^XLFDT($$NOW^XLFDT,F)
"RTN","RCDPRU",54,0)
 ;
"RTN","RCDPRU",55,0)
VAL(XF,CODE) ; Validate a range or list of CARC (345), RARC (346) or PLB (345.1) Codes
"RTN","RCDPRU",56,0)
 ; If invalid code is found VAILD = 0 and CODE will contain the offending codes
"RTN","RCDPRU",57,0)
 N VALID,ELEM,I,RNG1,RNG2,O1,O2,NWCD,RET S RET=""
"RTN","RCDPRU",58,0)
 S VALID=1,NWCD=$TR(CODE,";",":"),NWCD=$TR(NWCD,"-",":") ; Fix ";" or "-" to ":" (colons) for parsing
"RTN","RCDPRU",59,0)
 F I=1:1 S ELEM=$P(NWCD,",",I) Q:ELEM=""  D
"RTN","RCDPRU",60,0)
 .; Is this a single code or range:
"RTN","RCDPRU",61,0)
 .I $L(ELEM,":")>2 S VALID=0,RET=$$PUSH(.RET,ELEM) Q
"RTN","RCDPRU",62,0)
 .I ELEM[":" D  Q  ; Range
"RTN","RCDPRU",63,0)
 ..S RNG1=$P(ELEM,":",1),RNG2=$P(ELEM,":",2)
"RTN","RCDPRU",64,0)
 ..;Lookup the codes
"RTN","RCDPRU",65,0)
 ..S O1=$O(^RC(XF,"B",RNG1),-1),O1=$O(^RC(XF,"B",O1))
"RTN","RCDPRU",66,0)
 ..S O2=$O(^RC(XF,"B",RNG2),-1),O2=$O(^RC(XF,"B",O2))
"RTN","RCDPRU",67,0)
 ..I RNG1'=O1 S VALID=0,RET=$$PUSH(.RET,RNG1)
"RTN","RCDPRU",68,0)
 ..I RNG2'=O2 S VALID=0,RET=$$PUSH(.RET,RNG2)
"RTN","RCDPRU",69,0)
 .E  D
"RTN","RCDPRU",70,0)
 ..;Validate individual items
"RTN","RCDPRU",71,0)
 ..S O1=$O(^RC(XF,"B",ELEM),-1),O1=$O(^RC(XF,"B",O1))
"RTN","RCDPRU",72,0)
 ..I ELEM'=O1 S VALID=0,RET=$$PUSH(.RET,ELEM)
"RTN","RCDPRU",73,0)
 ;
"RTN","RCDPRU",74,0)
 S:VALID CODE=NWCD
"RTN","RCDPRU",75,0)
 S:'VALID CODE=RET
"RTN","RCDPRU",76,0)
 Q VALID
"RTN","RCDPRU",77,0)
 ;
"RTN","RCDPRU",78,0)
ACT(XF,CODE,DATE) ; Is the code active on Date
"RTN","RCDPRU",79,0)
 ; If code is active return 1. If no date use today, date should be in fileman format.
"RTN","RCDPRU",80,0)
 N VALID,XIEN,XDT S VALID=0
"RTN","RCDPRU",81,0)
 I '$D(XF) Q VALID  ; No file return 0
"RTN","RCDPRU",82,0)
 I $G(CODE)="" Q VALID  ; No code return 0
"RTN","RCDPRU",83,0)
 S:'$D(DATE) DATE=$$DT^XLFDT
"RTN","RCDPRU",84,0)
 S XIEN=$$FIND1^DIC(XF,,"O",CODE)
"RTN","RCDPRU",85,0)
 I XIEN="" Q VALID  ; No IEN for this code return 0
"RTN","RCDPRU",86,0)
 S XDT=$$GET1^DIQ(XF,XIEN_",",2,"I") ; Get date in FM format
"RTN","RCDPRU",87,0)
 S:XDT="" VALID=1 ; No stop date so it is active
"RTN","RCDPRU",88,0)
 I (XDT'="")&(XDT>DATE) S VALID=1
"RTN","RCDPRU",89,0)
 Q VALID
"RTN","RCDPRU",90,0)
 ;
"RTN","RCDPRU",91,0)
PUSH(VAR,VALUE) ;
"RTN","RCDPRU",92,0)
 Q:VAR="" VALUE ; Empty variable
"RTN","RCDPRU",93,0)
 Q VAR_U_VALUE
"RTN","RCDPRU",94,0)
 ;
"RTN","RCDPRU",95,0)
RNG(TYPE,ITEM,ARRAY) ; EP
"RTN","RCDPRU",96,0)
 ; Collect data in a list or range to an array
"RTN","RCDPRU",97,0)
 ; Input:   TYPE            - Type of data being collected
"RTN","RCDPRU",98,0)
 ;                            CARC  - Carc codes
"RTN","RCDPRU",99,0)
 ;                            PAYER - Payer names
"RTN","RCDPRU",100,0)
 ;                            PLB   - Provider Level Balance Codes
"RTN","RCDPRU",101,0)
 ;                            TIN   - Payer IDs
"RTN","RCDPRU",102,0)
 ;          ITEM            - Comma delimitted list of codes and/or ranges to parse
"RTN","RCDPRU",103,0)
 ; Output:  ARRAY           - Array containing all of the data parsed from ITEM
"RTN","RCDPRU",104,0)
 I $G(ITEM)="ALL"!($G(ITEM)="A") S ARRAY(TYPE)="ALL" Q
"RTN","RCDPRU",105,0)
 N DELIM,ELEM,I,NW,X1,X2
"RTN","RCDPRU",106,0)
 ;
"RTN","RCDPRU",107,0)
 ; Before processing CARC and PLB Codes, translate any dashes found in ranges
"RTN","RCDPRU",108,0)
 ; to colons
"RTN","RCDPRU",109,0)
 I TYPE'="PAYER",TYPE'="TIN" D
"RTN","RCDPRU",110,0)
 . S NW=$TR(ITEM,";",":"),NW=$TR(NW,"-",":"),DELIM=":"
"RTN","RCDPRU",111,0)
 E  D  ;
"RTN","RCDPRU",112,0)
 . S NW=ITEM
"RTN","RCDPRU",113,0)
 . S DELIM="~:~"
"RTN","RCDPRU",114,0)
 ;
"RTN","RCDPRU",115,0)
 ; Process each code or range int the comma delimitted list
"RTN","RCDPRU",116,0)
 F I=1:1 S ELEM=$P(NW,",",I) Q:ELEM=""  D
"RTN","RCDPRU",117,0)
 . ; Single element set into array 
"RTN","RCDPRU",118,0)
 . I ELEM'[DELIM S ARRAY(TYPE,ELEM)=1 Q
"RTN","RCDPRU",119,0)
 . D RNGIT(TYPE,ELEM,DELIM,.ARRAY)
"RTN","RCDPRU",120,0)
 Q
"RTN","RCDPRU",121,0)
 ;
"RTN","RCDPRU",122,0)
RNGIT(TYPE,ITEM,DELIM,ZAR) ; Process ranges for CARC/PLB/PAYER/TIN
"RTN","RCDPRU",123,0)
 ; Input:   TYPE            - Type of data being collected
"RTN","RCDPRU",124,0)
 ;                            CARC  - Carc codes
"RTN","RCDPRU",125,0)
 ;                            PAYER - Payer names
"RTN","RCDPRU",126,0)
 ;                            PLB   - Provider Level Balance Codes
"RTN","RCDPRU",127,0)
 ;                            TIN   - Payer IDs
"RTN","RCDPRU",128,0)
 ;          ITEM            - Code or Code range being processed
"RTN","RCDPRU",129,0)
 ;          DELIM           - Range delimitter to use
"RTN","RCDPRU",130,0)
 ; Output:  ZAR             - Array containing all of the data parsed from ITEM
"RTN","RCDPRU",131,0)
 N ELEM,FILE,IDX,O1,X1,X2,ZGBL
"RTN","RCDPRU",132,0)
 ;
"RTN","RCDPRU",133,0)
 ; Set file # and index for the range lookup
"RTN","RCDPRU",134,0)
 S FILE=$S(TYPE="CARC":345,TYPE="PAYER":344.6,TYPE="TIN":344.6,TYPE="PLB":345.1,1:0)
"RTN","RCDPRU",135,0)
 S IDX=$S(TYPE="CARC":"B",TYPE="PAYER":"B",TYPE="TIN":"C",TYPE="PLB":"B",1:0)
"RTN","RCDPRU",136,0)
 ;
"RTN","RCDPRU",137,0)
 ; Get closed root of the Global
"RTN","RCDPRU",138,0)
 S ZGBL=$$ROOT^DILFD(FILE,"",1,"")
"RTN","RCDPRU",139,0)
 Q:ZGBL=""
"RTN","RCDPRU",140,0)
 ;
"RTN","RCDPRU",141,0)
 ; Process range of things in ITEM
"RTN","RCDPRU",142,0)
 S X1=$P(ITEM,DELIM,1),X2=$P(ITEM,DELIM,2)
"RTN","RCDPRU",143,0)
 S O1=$O(@ZGBL@(IDX,X1),-1)                 ; Set the start
"RTN","RCDPRU",144,0)
 F  S O1=$O(@ZGBL@(IDX,O1)) Q:(O1="")!($$AFTER(O1,X2))  S ZAR(TYPE,O1)=1
"RTN","RCDPRU",145,0)
 Q
"RTN","RCDPRU",146,0)
 ;
"RTN","RCDPRU",147,0)
AFTER(ZZ1,ZZ2) ; Is ZZ1 after (or collates after) ZZ2
"RTN","RCDPRU",148,0)
 N XZ1,XZ2
"RTN","RCDPRU",149,0)
 S XZ1=+ZZ1,XZ2=+ZZ2
"RTN","RCDPRU",150,0)
 I (XZ1'=0)&(XZ2'=0) Q (XZ1>XZ2)  ; Numeric
"RTN","RCDPRU",151,0)
 I (XZ1=0)&(XZ2'=0) Q 1  ; XZ1 not numeric, XZ2 numeric, XZ1 is after XZ2
"RTN","RCDPRU",152,0)
 I (XZ1=0)&(XZ2=0) Q (ZZ1]ZZ2)  ; Both not numeric see if XZ1 collates after XZ2
"RTN","RCDPRU",153,0)
 Q 1 ; Default to after 
"RTN","RCDPRU",154,0)
 ;
"RTN","RCDPRU",155,0)
GLIST(FILE,IDX,GLARR) ;Build list for this file
"RTN","RCDPRU",156,0)
 ; Build list of available payers
"RTN","RCDPRU",157,0)
 N CNT,RCPAY S CNT=0,RCPAY=""
"RTN","RCDPRU",158,0)
 F  S RCPAY=$O(^RCY(FILE,IDX,RCPAY)) Q:RCPAY=""  D
"RTN","RCDPRU",159,0)
 .S CNT=CNT+1
"RTN","RCDPRU",160,0)
 .S @GLARR@(CNT)=RCPAY
"RTN","RCDPRU",161,0)
 .S @GLARR@(IDX,RCPAY,CNT)=""
"RTN","RCDPRU",162,0)
 ;
"RTN","RCDPRU",163,0)
 Q
"RTN","RCDPRU",164,0)
 ;
"RTN","RCDPRU",165,0)
GETPAY(RCPAY) ; EP
"RTN","RCDPRU",166,0)
 ; Get selected payers using file 344.6
"RTN","RCDPRU",167,0)
 ; Note: Similar to GETPAY^RCDPEM9 except that method uses 344.4 or 344.31
"RTN","RCDPRU",168,0)
 ; Input:   None
"RTN","RCDPRU",169,0)
 ; Output:  RCPAY       - ALL if all payers selected
"RTN","RCDPRU",170,0)
 ;          RCPAY(DATA) - 'ALL' - all payers selected
"RTN","RCDPRU",171,0)
 ; Returns: 1 - Payer selection made, 0 otherwise
"RTN","RCDPRU",172,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,EX,RCLPAY,Y
"RTN","RCDPRU",173,0)
 S EX=1 ; Exit status
"RTN","RCDPRU",174,0)
 S DIR("A")="Select (A)ll or (R)ange of 835 Payer Names?: "
"RTN","RCDPRU",175,0)
 S DIR(0)="SA^A:All Payer Names;R:Range or List of Payer Names"
"RTN","RCDPRU",176,0)
 S DIR("B")="ALL"
"RTN","RCDPRU",177,0)
 D ^DIR
"RTN","RCDPRU",178,0)
 K DIR
"RTN","RCDPRU",179,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S EX=0 Q EX
"RTN","RCDPRU",180,0)
 S RCLPAY=Y
"RTN","RCDPRU",181,0)
 I $G(Y)="A" S RCPAY="ALL",RCPAY("DATA")="ALL" Q EX
"RTN","RCDPRU",182,0)
 ;
"RTN","RCDPRU",183,0)
 ; Get Range of 835 Payers
"RTN","RCDPRU",184,0)
 I RCLPAY="R" S EX=$$GETRNG(.RCPAY,"P"),RCPAY="R"
"RTN","RCDPRU",185,0)
 Q EX
"RTN","RCDPRU",186,0)
 ;
"RTN","RCDPRU",187,0)
GETTIN(RCTIN) ; EP
"RTN","RCDPRU",188,0)
 ; Get selected Payer TINs
"RTN","RCDPRU",189,0)
 ; Input:   None
"RTN","RCDPRU",190,0)
 ; Output:  RCTIN       - ALL if all payer TINs selected
"RTN","RCDPRU",191,0)
 ;          RCPAY(DATA) - 'ALL' - all payer TINs selected
"RTN","RCDPRU",192,0)
 ; Returns: 1 - Payer selection made, 0 otherwise
"RTN","RCDPRU",193,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,EX,RCTLIST,X,Y
"RTN","RCDPRU",194,0)
 S EX=1 ; Exit status
"RTN","RCDPRU",195,0)
 S DIR("A")="Select (A)ll or (R)ange of 835 Payer TINs?: "
"RTN","RCDPRU",196,0)
 S DIR(0)="SA^A:All Payer TINs;R:Range or List of Payer TINs"
"RTN","RCDPRU",197,0)
 S DIR("B")="ALL"
"RTN","RCDPRU",198,0)
 D ^DIR K DIR
"RTN","RCDPRU",199,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S EX=0 Q EX
"RTN","RCDPRU",200,0)
 S RCTLIST=Y
"RTN","RCDPRU",201,0)
 I $G(Y)="A" S RCTIN="ALL",RCTIN("DATA")="ALL" Q EX
"RTN","RCDPRU",202,0)
 ;
"RTN","RCDPRU",203,0)
 ; Get Range of 835 Payer TINs
"RTN","RCDPRU",204,0)
 I RCTLIST="R" S EX=$$GETRNG(.RCTIN,"T"),RCTIN="R"
"RTN","RCDPRU",205,0)
 Q EX
"RTN","RCDPRU",206,0)
 ;
"RTN","RCDPRU",207,0)
GETRNG(RTNARR,TYPE) ; Allows the user to specify a payer name or TIN range
"RTN","RCDPRU",208,0)
 ; Input:   TYPE            - 'P' - Payer Name range selection
"RTN","RCDPRU",209,0)
 ;                            'T' - Payer TIN range selection
"RTN","RCDPRU",210,0)
 ; Output:  RTNARR          - 'ERROR' - Invalid TYPE of range selected
"RTN","RCDPRU",211,0)
 ;          RTNARR(DATA)    - A1~:~A2 Where:
"RTN","RCDPRU",212,0)
 ;                             A1 - External Payer Name or TIN of selected 
"RTN","RCDPRU",213,0)
 ;                                  344.6 Payer for range start
"RTN","RCDPRU",214,0)
 ;                             A2 - External Payer Name or TIN of selected
"RTN","RCDPRU",215,0)
 ;                                  344.6 Payer for range end
"RTN","RCDPRU",216,0)
 ;          RTNARR(START)   - Starting Range Value A1^A2^A3^A4 Where:
"RTN","RCDPRU",217,0)
 ;                             A1 - Internal IEN of selected 344.6 Payer for
"RTN","RCDPRU",218,0)
 ;                                   range start
"RTN","RCDPRU",219,0)
 ;                             A2 - External Payer Name or TIN for range start
"RTN","RCDPRU",220,0)
 ;                             A3 - Internal IEN of selected 344.6 Payer for
"RTN","RCDPRU",221,0)
 ;                                  range start
"RTN","RCDPRU",222,0)
 ;                             A4 - External Payer Name or TIN for range end
"RTN","RCDPRU",223,0)
 ;          RTNARR(END)     - Ending Range Value A1^A2^A3^A4 Where:
"RTN","RCDPRU",224,0)
 ;                             A1 - Internal IEN of selected 344.6 Payer for 
"RTN","RCDPRU",225,0)
 ;                                  range end
"RTN","RCDPRU",226,0)
 ;                             A2 - External Payer Name or TIN for range end
"RTN","RCDPRU",227,0)
 ;                             A3 - Internal IEN of selected 344.6 for range end
"RTN","RCDPRU",228,0)
 ;                             A4 - External Payer Name or TIN for range end
"RTN","RCDPRU",229,0)
 N D,DIC,DIROUT,DIRUT,DTOUT,DUOUT,IDX,RCDTN,RCDN,RCPT,X,Y
"RTN","RCDPRU",230,0)
 I $G(TYPE)=""!("PT"'[$G(TYPE)) S RTNARR="ERROR" Q  ; Quit if TYPE not correct
"RTN","RCDPRU",231,0)
 S IDX=$S(TYPE="P":"B",TYPE="T":"C")
"RTN","RCDPRU",232,0)
 K DIC
"RTN","RCDPRU",233,0)
 S DIC="^RCY(344.6,",DIC(0)="AES",D=IDX
"RTN","RCDPRU",234,0)
 S DIC("A")="Start with 835 "_$S(TYPE="P":"Payer Name",TYPE="T":"Payer TIN")_": "
"RTN","RCDPRU",235,0)
 I TYPE="P" S DIC("W")="D EN^DDIOL($P(^(0),U,2),,""?35"")"
"RTN","RCDPRU",236,0)
 E  S DIC("W")="D EN^DDIOL($P(^(0),U,1),,""?35"")"
"RTN","RCDPRU",237,0)
 D IX^DIC
"RTN","RCDPRU",238,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")!(Y=-1) Q 0
"RTN","RCDPRU",239,0)
 S RCDN=$O(^RCY(344.6,IDX,X,""))
"RTN","RCDPRU",240,0)
 S RTNARR("START")=RCDN_U_X_U_Y,RTNARR("DATA")=X
"RTN","RCDPRU",241,0)
 ;
"RTN","RCDPRU",242,0)
 K DIC
"RTN","RCDPRU",243,0)
 S DIC="^RCY(344.6,",DIC(0)="AES",D=IDX
"RTN","RCDPRU",244,0)
 S DIC("A")="Go to with 835 "_$S(TYPE="P":"Payer Name",TYPE="T":"Payer TIN")_": "
"RTN","RCDPRU",245,0)
 I TYPE="P" S DIC("W")="D EN^DDIOL($P(^(0),U,2),,""?35"")"
"RTN","RCDPRU",246,0)
 E  S DIC("W")="D EN^DDIOL($P(^(0),U,1),,""?35"")"
"RTN","RCDPRU",247,0)
 D IX^DIC
"RTN","RCDPRU",248,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="")!(Y=-1) Q 0
"RTN","RCDPRU",249,0)
 S RCDN=$O(^RCY(344.6,IDX,X,""))
"RTN","RCDPRU",250,0)
 S RTNARR("END")=RCDN_U_X_U_Y
"RTN","RCDPRU",251,0)
 I TYPE="P" S RTNARR("DATA")=$P(RTNARR("START"),U,4)_"~:~"_$P(RTNARR("END"),U,4) ;PCRA*4.5*321
"RTN","RCDPRU",252,0)
 I TYPE="T" S RTNARR("DATA")=$P(RTNARR("START"),U,2)_"~:~"_$P(RTNARR("END"),U,2) ;PCRA*4.5*321
"RTN","RCDPRU",253,0)
 Q 1
"RTN","RCDPRU",254,0)
 ;
"RTN","RCDPRU",255,0)
CHECKDT(GSTART,GSTOP,GFILE) ; See if we have any possible data to report
"RTN","RCDPRU",256,0)
 N SDT,IEN,PTR,COUNT,RCGX
"RTN","RCDPRU",257,0)
 S COUNT=0
"RTN","RCDPRU",258,0)
 I GFILE=361.1 D
"RTN","RCDPRU",259,0)
 . S SDT=GSTART-0.001
"RTN","RCDPRU",260,0)
 . F  S SDT=$O(^IBM(361.1,"E",SDT)) Q:(SDT="")!(SDT>GSTOP)!(COUNT>0)  S COUNT=COUNT+1
"RTN","RCDPRU",261,0)
 I GFILE=344.4 D
"RTN","RCDPRU",262,0)
 . S SDT=GSTART-.001
"RTN","RCDPRU",263,0)
 . F  S SDT=$O(^RCY(344.4,"AC",SDT)) Q:(SDT="")!(SDT>GSTOP)!(COUNT>0)  D
"RTN","RCDPRU",264,0)
 .. S IEN="" F  S IEN=$O(^RCY(344.4,"AC",SDT,IEN)) Q:IEN=""  D
"RTN","RCDPRU",265,0)
 ... K RCGX D GETS^DIQ(344.4,IEN_",","2*;","E","RCGX") Q:$D(RCGX)=0
"RTN","RCDPRU",266,0)
 ... S COUNT=COUNT+1 ; We have at least 1 ERA with a PLB
"RTN","RCDPRU",267,0)
 Q COUNT
"RTN","RCDPRU",268,0)
 ;
"RTN","RCDPRU",269,0)
 ; RARR - Report array to walk; SUBS - Subscript to walk to sum the report
"RTN","RCDPRU",270,0)
 ; ZSORT - Sorting on PLB Codes "C" or Payer/TIN "P"
"RTN","RCDPRU",271,0)
SUMIT(RARR,SUBS,ZSORT) ; Summarize data in the array reference for PLB Report
"RTN","RCDPRU",272,0)
 N LVL2,ZZ,XX,ZAD,ZCO,ZDC,ZN,ZPAT,ZPD,ZT,ZC,ZCT,ZS,ZTOT,YY,QQ,OLD,TADJ,ZIDX
"RTN","RCDPRU",273,0)
 S ZT=0,ZC=0,ZTOT=0,ZAD=0,ZCO="",OLD=""
"RTN","RCDPRU",274,0)
 I $G(SUBS)="" Q  ; We should always have this Variable
"RTN","RCDPRU",275,0)
 S ZZ="",ZCT=0,ZAD=0
"RTN","RCDPRU",276,0)
 ; Walk the collection in "ERA" or "PAYR" this will have all of the ERAs for this report and summarize
"RTN","RCDPRU",277,0)
 F  S ZZ=$O(@RARR@(SUBS,ZZ)) Q:ZZ=""  D
"RTN","RCDPRU",278,0)
 . K ZCT S XX="",ZCT=0,ZTOT=0,ZAD=0,ZPD=0,ZDC=""
"RTN","RCDPRU",279,0)
 . ; XX will be the IEN of the ERA to count.
"RTN","RCDPRU",280,0)
 . F  S XX=$O(@RARR@(SUBS,ZZ,XX)) Q:XX=""  S ZN=@RARR@(SUBS,ZZ,XX,0),ZPD=ZPD+$P(ZN,U,5),ZPAT=$P(ZN,U,6)_"/"_$P(ZN,U,3) D
"RTN","RCDPRU",281,0)
 .. S ZCT=ZCT+1 S:ZSORT="C" ZCT(ZPAT)=$G(ZCT(ZPAT))+1,ZPD(ZZ_ZPAT)=$G(ZPD(ZZ_ZPAT))+$P(ZN,U,5) ; Count the ERAs and get paid for this payer
"RTN","RCDPRU",282,0)
 .. S ZTOT=+$G(@RARR@("00_ERA",XX,.1))
"RTN","RCDPRU",283,0)
 .. ; Get the adjusted amounts for the PLB codes (in ZZ if by Code)
"RTN","RCDPRU",284,0)
 .. I ZSORT="C" S ZAD=$$TAMT(XX,RARR,ZZ),ZDC=$$TCD(XX,RARR,ZZ)
"RTN","RCDPRU",285,0)
 .. I ZSORT="P" S YY=0.11 F  S YY=$O(@RARR@("00_ERA",XX,YY)) Q:YY=""  D 
"RTN","RCDPRU",286,0)
 ... ; Get PLB Code, Adjusted amt and Code Description for By Payer summary
"RTN","RCDPRU",287,0)
 ... N QPD S QPD=0,ZCO=$P($G(@RARR@("00_ERA",XX,YY)),U,1),QPD("ADJ")=$P($G(@RARR@("00_ERA",XX,YY)),U,2),ZDC=$P($G(@RARR@("00_ERA",XX,YY)),U,4)
"RTN","RCDPRU",288,0)
 ... S QPD=$G(@RARR@("SUMMARY",ZZ,ZCO)) ; existing data for this PLB Code (QPD)
"RTN","RCDPRU",289,0)
 ... I ($G(OLD(ZZ,ZCO,XX))'=1) S QPD("PAID")=$P(QPD,U,2)+$P(ZN,U,5),QPD("COUNT")=$P(QPD,U,3)+1,QPD("TBILLED")=$P(QPD,U,5)+ZTOT
"RTN","RCDPRU",290,0)
 ... E  S QPD("PAID")=$P(QPD,U,2),QPD("COUNT")=$P(QPD,U,3),QPD("TBILLED")=$P(QPD,U,5)
"RTN","RCDPRU",291,0)
 ... ; Adj Amt ^ Paid ^ Count of ERAs ^ Description ^ Total Billed
"RTN","RCDPRU",292,0)
 ... S ZAD=($P(QPD,U,1)+QPD("ADJ")),ZPD=QPD("PAID"),ZCT=QPD("COUNT"),ZTOT=QPD("TBILLED")
"RTN","RCDPRU",293,0)
 ... S @RARR@("SUMMARY",ZZ,ZCO)=ZAD_U_ZPD_U_ZCT_U_ZDC_U_ZTOT
"RTN","RCDPRU",294,0)
 ... S OLD(ZZ,ZCO,XX)=1
"RTN","RCDPRU",295,0)
 .. S LVL2=$S(ZSORT="C":ZPAT,ZSORT="P":ZCO,1:XX)
"RTN","RCDPRU",296,0)
 .. S:ZSORT="C" ZAD=ZAD+$P($G(@RARR@("SUMMARY",ZZ,LVL2)),U,1),ZTOT=ZTOT+$P($G(@RARR@("SUMMARY",ZZ,LVL2)),U,5) ; Sum the ADJ & BILLED amounts
"RTN","RCDPRU",297,0)
 .. ; Adj Amt ^ Paid ^ Count of ERAs ^ ^ Total Billed
"RTN","RCDPRU",298,0)
 .. I ZSORT="C" S @RARR@("SUMMARY",ZZ,LVL2)=ZAD_U_ZPD(ZZ_ZPAT)_U_ZCT(ZPAT)_U_U_ZTOT
"RTN","RCDPRU",299,0)
 ;
"RTN","RCDPRU",300,0)
 ; Summarize the Code level totals
"RTN","RCDPRU",301,0)
 I ZSORT="C" K OLD S ZZ="",QQ="" F  S ZZ=$O(@RARR@("ERA",ZZ)) Q:ZZ=""  D
"RTN","RCDPRU",302,0)
 . S QQ="",(ZCT,ZPD,ZAD,ZTOT)=0 F  S QQ=$O(@RARR@("ERA",ZZ,QQ)) Q:QQ=""  D
"RTN","RCDPRU",303,0)
 .. S ZCT=ZCT+1
"RTN","RCDPRU",304,0)
 .. S ZPD=ZPD+$P(@RARR@("ERA",ZZ,QQ,0),U,5),ZTOT=ZTOT+@RARR@("00_ERA",QQ,.1),ZAD=ZAD+$$TAMT(QQ,RARR,ZZ),ZDC=$$TCD(QQ,RARR,ZZ)
"RTN","RCDPRU",305,0)
 . S @RARR@("SUMMARY",ZZ)=ZAD_U_ZPD_U_ZCT_U_ZDC_U_ZTOT
"RTN","RCDPRU",306,0)
 ;
"RTN","RCDPRU",307,0)
 ; Summarize the Payer level totals
"RTN","RCDPRU",308,0)
 I ZSORT="P" K OLD S ZZ="",QQ="" F  S ZZ=$O(@RARR@("PAYR",ZZ)) Q:ZZ=""  D
"RTN","RCDPRU",309,0)
 . S QQ="",(ZCT,ZPD,ZAD,ZTOT)=0 F  S QQ=$O(@RARR@("PAYR",ZZ,QQ)) Q:QQ=""  D
"RTN","RCDPRU",310,0)
 .. S ZCT=ZCT+1
"RTN","RCDPRU",311,0)
 .. S ZPD=ZPD+$P(@RARR@("PAYR",ZZ,QQ,0),U,5),ZTOT=ZTOT+@RARR@("00_ERA",QQ,.1),ZAD=ZAD+$$TAMT(QQ,RARR,"")
"RTN","RCDPRU",312,0)
 . S @RARR@("SUMMARY",ZZ)=ZAD_U_ZPD_U_ZCT_U_U_ZTOT
"RTN","RCDPRU",313,0)
 ;
"RTN","RCDPRU",314,0)
 ; Collect and summarize the Grand Totals.
"RTN","RCDPRU",315,0)
 S ZZ="",QQ="" F  S ZZ=$O(@RARR@(SUBS,ZZ)) Q:ZZ=""  D 
"RTN","RCDPRU",316,0)
 . S XX="" F  S XX=$O(@RARR@(SUBS,ZZ,XX)) Q:XX=""  S ZT=$G(@RARR@("TOTALS")),ZS=$G(@RARR@("SUMMARY",ZZ)) D  S @RARR@("ZZ_COUNTED",XX)=1
"RTN","RCDPRU",317,0)
 .. S ZN=$G(@RARR@(SUBS,ZZ,XX,0)),ZN("TBILLED")=@RARR@("00_ERA",XX,.1),TADJ=$$TAMT(XX,RARR,"")
"RTN","RCDPRU",318,0)
 .. I $G(@RARR@("ZZ_COUNTED",XX))'=1 D
"RTN","RCDPRU",319,0)
 ... S @RARR@("TOTALS")=($P(ZT,U,1)+TADJ)_U_($P(ZT,U,2)+$P(ZN,U,5))_U_($P(ZT,U,3)+1)_U_U_($P(ZT,U,5)+ZN("TBILLED"))
"RTN","RCDPRU",320,0)
 Q
"RTN","RCDPRU",321,0)
 ;
"RTN","RCDPRU",322,0)
TAMT(ZIEN,XGBL,ZCODE) ; Get Adjustment Amounts
"RTN","RCDPRU",323,0)
 N ZAMT,XDN,AA S ZAMT=0
"RTN","RCDPRU",324,0)
 ; ZCODE if defined is get the Adjustment amounts for just this code
"RTN","RCDPRU",325,0)
 ; otherwise sum the adjustment amounts for this ERA in ZIEN
"RTN","RCDPRU",326,0)
 D
"RTN","RCDPRU",327,0)
 . S AA=0.1 F  S AA=$O(@XGBL@("00_ERA",ZIEN,AA)) Q:AA=""  D
"RTN","RCDPRU",328,0)
 .. I $G(ZCODE)'="" Q:$P($G(@XGBL@("00_ERA",ZIEN,AA)),U,1)'=ZCODE  ; Quit if we don't have the right code
"RTN","RCDPRU",329,0)
 .. ; Collect adjustment amounts to return for this ZIEN
"RTN","RCDPRU",330,0)
 .. S ZAMT=ZAMT+$P(@XGBL@("00_ERA",ZIEN,AA),U,2)
"RTN","RCDPRU",331,0)
 Q ZAMT
"RTN","RCDPRU",332,0)
 ;
"RTN","RCDPRU",333,0)
TCD(ZIEN,XGBL,ZCODE) ; Get PLB Description for Code & IEN given
"RTN","RCDPRU",334,0)
 N RET,AA S RET=""
"RTN","RCDPRU",335,0)
 Q:$G(ZCODE)="" ""
"RTN","RCDPRU",336,0)
 S AA=0.1 F  S AA=$O(@XGBL@("00_ERA",ZIEN,AA)) Q:AA=""  D  Q:RET'=""
"RTN","RCDPRU",337,0)
 . Q:$P($G(@XGBL@("00_ERA",ZIEN,AA)),U,1)'=ZCODE  ; Quit if we don't have the right code
"RTN","RCDPRU",338,0)
 . S RET=$P(@XGBL@("00_ERA",ZIEN,AA),U,4)
"RTN","RCDPRU",339,0)
 Q RET
"RTN","RCDPRU",340,0)
 ;
"RTN","RCDPRU",341,0)
 ; Moved from RCDPEM2 because of size issues
"RTN","RCDPRU",342,0)
UPDERA(DA,RECEPT,FOUND) ;Mark ERA as posted to paper EOB
"RTN","RCDPRU",343,0)
 N Y,X,DR,DIE,%
"RTN","RCDPRU",344,0)
 D NOW^%DTC
"RTN","RCDPRU",345,0)
 S DIE="^RCY(344.4,",FOUND=0
"RTN","RCDPRU",346,0)
 ;Update Receipt #, EFT Match Status, Detail Post Status and Paper EOB
"RTN","RCDPRU",347,0)
 S DR=".08///"_RECEPT_";.09///2;.14///2;20.03///1"
"RTN","RCDPRU",348,0)
 ;Update Date/Time Posted and User fields
"RTN","RCDPRU",349,0)
 S DR=DR_";7.01///"_%_";7.02///"_DUZ
"RTN","RCDPRU",350,0)
 D ^DIE
"RTN","RCDPRU",351,0)
 I '$D(Y) D
"RTN","RCDPRU",352,0)
 .K DIR
"RTN","RCDPRU",353,0)
 .S DIR(0)="EA"
"RTN","RCDPRU",354,0)
 .S DIR("A",1)="ERA HAS BEEN MARKED AS POSTED USING PAPER EOB"
"RTN","RCDPRU",355,0)
 .S DIR("A")="Press ENTER to continue: " W ! D ^DIR K DIR
"RTN","RCDPRU",356,0)
 .S FOUND=1
"RTN","RCDPRU",357,0)
 E  W !,"Unable to update ERA for receipt "_RECEPT,!
"RTN","RCDPRU",358,0)
 Q FOUND
"RTN","RCDPRU",359,0)
 ;
"RTN","RCDPRU",360,0)
 ; Get Reciept Date (moved from RCDPEM2
"RTN","RCDPRU",361,0)
RCDATE(RECEPT) ;
"RTN","RCDPRU",362,0)
 N RCRECTDA
"RTN","RCDPRU",363,0)
 ;Get receipt IEN
"RTN","RCDPRU",364,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA 0
"RTN","RCDPRU",365,0)
 ;Return Receipt date
"RTN","RCDPRU",366,0)
 Q $P($G(^RCY(344,RCRECTDA,0)),U,3)
"RTN","RCDPRU",367,0)
 ;
"RTN","RCDPRU",368,0)
AMT(RECEPT) ;Total Receipt amount
"RTN","RCDPRU",369,0)
 N RCRECTDA,RCTRAN,RCTOT
"RTN","RCDPRU",370,0)
 ;Get receipt IEN
"RTN","RCDPRU",371,0)
 S RCRECTDA=$O(^RCY(344,"B",RECEPT,0)) Q:'RCRECTDA 0
"RTN","RCDPRU",372,0)
 ;Total the Receipt transactions
"RTN","RCDPRU",373,0)
 S RCTRAN=0,RCTOT=0
"RTN","RCDPRU",374,0)
 F  S RCTRAN=$O(^RCY(344,RCRECTDA,1,RCTRAN)) Q:'RCTRAN  D
"RTN","RCDPRU",375,0)
 .S RCTOT=RCTOT+$P($G(^RCY(344,RCRECTDA,1,RCTRAN,0)),U,4)
"RTN","RCDPRU",376,0)
 Q RCTOT
"RTN","RCDPRU",377,0)
 ;
"RTN","RCDPRU",378,0)
 ; Moved from RCDPEM2 for Manual match because RCDPEM2 was too big in size
"RTN","RCDPRU",379,0)
 ; END, DTRNG, RCERA, RCMBG, START variables are newed and cleaned up in RCDPEM2
"RTN","RCDPRU",380,0)
ML0() ;
"RTN","RCDPRU",381,0)
ML0A S RCERA=$$SEL^RCDPEWL7() ; Select ERA to use from screen
"RTN","RCDPRU",382,0)
 S RCMBG=VALMBG ; Save the line, we need it when we go back to the worklist.
"RTN","RCDPRU",383,0)
 I RCERA=0 Q 1
"RTN","RCDPRU",384,0)
 S RCERA(0)=^RCY(344.4,RCERA,0) ; Get the zero node for this ERA 
"RTN","RCDPRU",385,0)
 I ((+($P(RCERA(0),U,9)))>0)!($P(RCERA(0),U,8)'="") W !,"ERA is already matched please select another ERA...",! G ML0A
"RTN","RCDPRU",386,0)
 S DIR("A")="Select EFT by date Range? (Y/N) ",DIR(0)="YA",DIR("B")="NO" D ^DIR K DIR
"RTN","RCDPRU",387,0)
 I $D(DUOUT)!$D(DTOUT) Q 1
"RTN","RCDPRU",388,0)
 I Y<1 G MLQ ; Go to the EFT Selection
"RTN","RCDPRU",389,0)
 S DTRNG=Y  ; flag indicating date range selected
"RTN","RCDPRU",390,0)
 K DIR S DIR("?")="Enter the earliest date for the selection range."
"RTN","RCDPRU",391,0)
 ; value in DIR(0) for %DT = APE: ask date, past assumed, echo answer
"RTN","RCDPRU",392,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("A")="Start Date: " D ^DIR K DIR
"RTN","RCDPRU",393,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 1
"RTN","RCDPRU",394,0)
 S START=Y K DIR,X,Y
"RTN","RCDPRU",395,0)
 S DIR("?")="Enter the latest date for the selection range."
"RTN","RCDPRU",396,0)
 S DIR(0)="DAO^"_START_":"_DT_":APE",DIR("A")="End Date: ",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","RCDPRU",397,0)
 D ^DIR K DIR
"RTN","RCDPRU",398,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q 1
"RTN","RCDPRU",399,0)
 S END=Y
"RTN","RCDPRU",400,0)
 ;
"RTN","RCDPRU",401,0)
MLQ Q 0
"RTN","RCDPRU2")
0^32^B21266563
"RTN","RCDPRU2",1,0)
RCDPRU2 ;AITC/CJE - CARC REPORT ON PAYER OR CARC CODE ;
"RTN","RCDPRU2",2,0)
 ;;4.5;Accounts Receivable;**321**;;Build 48
"RTN","RCDPRU2",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPRU2",4,0)
 Q
"RTN","RCDPRU2",5,0)
 ; PRCA*4.5*321 - CARC and Payer report utilities
"RTN","RCDPRU2",6,0)
 ;
"RTN","RCDPRU2",7,0)
 ; Moved from RCDPARC to RCDPRU then to RCDPRU2 - PRCA*4.5*321
"RTN","RCDPRU2",8,0)
SUM(ARRAY,IEN,BILL,CARC,PAYER,BAMT,PAMT,DESC,AAMT,SORT) ; EP
"RTN","RCDPRU2",9,0)
 ; Count Claims and summarize for the report
"RTN","RCDPRU2",10,0)
 ; IEN: IEN from 361.1 file; BILL: The K-Bill number; ITEM: Top level sort item PAYER or CARC to summarize;
"RTN","RCDPRU2",11,0)
 ; BAMT: Billed Amount; PAMT: Paid Amount ; AAMT: Adjustment Amount;
"RTN","RCDPRU2",12,0)
 ; LVL: second level sort (CARC/Payer) ; SORT: "C" is CARC or "P" is Payer first level sort,
"RTN","RCDPRU2",13,0)
 N ITEM,LVL
"RTN","RCDPRU2",14,0)
 I SORT="C" S ITEM=CARC,LVL=PAYER
"RTN","RCDPRU2",15,0)
 E  S ITEM=PAYER,LVL=CARC
"RTN","RCDPRU2",16,0)
 ;
"RTN","RCDPRU2",17,0)
 D:$G(@ARRAY@("~~SUM",ITEM,IEN))'=1  ; If we already counted this claim for CARC or Payer skip
"RTN","RCDPRU2",18,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM"),U,1)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM")),U,1)+1 ; Count claims
"RTN","RCDPRU2",19,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM"),U,2)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM")),U,2)+BAMT ; Summarize amount billed
"RTN","RCDPRU2",20,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM"),U,3)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM")),U,3)+PAMT ; Summarize amount paid
"RTN","RCDPRU2",21,0)
 ; Always add in the adjustment (this is a different adjustment each time procedure is called)
"RTN","RCDPRU2",22,0)
 S $P(@ARRAY@("REPORT",ITEM,"~~SUM"),U,4)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM")),U,4)+AAMT ; Summarize amount adjusted
"RTN","RCDPRU2",23,0)
 S:SORT="C" $P(@ARRAY@("REPORT",ITEM,"~~SUM"),U,5)=$G(DESC) ; CARC Description
"RTN","RCDPRU2",24,0)
 I (SORT="C")&($G(LVL)'="") D:$G(@ARRAY@("~~SUM",ITEM,IEN))'=1
"RTN","RCDPRU2",25,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM",LVL),U,1)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM",LVL)),U,1)+1 ; Count claims
"RTN","RCDPRU2",26,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM",LVL),U,2)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM",LVL)),U,2)+BAMT ; Summarize amount billed
"RTN","RCDPRU2",27,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM",LVL),U,3)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM",LVL)),U,3)+PAMT ; Summarize amount paid
"RTN","RCDPRU2",28,0)
 ;I $G(LVL)'="" D:$G(@ARRAY@("~~SUM",LVL,IEN))'=1
"RTN","RCDPRU2",29,0)
 I (SORT="P")&($G(LVL)'="") D:$G(@ARRAY@("~~SUM",ITEM,IEN,LVL))'=1
"RTN","RCDPRU2",30,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM",LVL),U,1)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM",LVL)),U,1)+1 ; Count claims
"RTN","RCDPRU2",31,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM",LVL),U,2)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM",LVL)),U,2)+BAMT ; Summarize amount billed
"RTN","RCDPRU2",32,0)
 . S $P(@ARRAY@("REPORT",ITEM,"~~SUM",LVL),U,3)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM",LVL)),U,3)+PAMT ; Summarize amount paid
"RTN","RCDPRU2",33,0)
 ; Always add in the adjustment (this is a different adjustment each time procedure is called)
"RTN","RCDPRU2",34,0)
 S $P(@ARRAY@("REPORT",ITEM,"~~SUM",LVL),U,4)=$P($G(@ARRAY@("REPORT",ITEM,"~~SUM",LVL)),U,4)+AAMT ; Summarize amount adjusted
"RTN","RCDPRU2",35,0)
 I SORT="P",$G(LVL)'="" S $P(@ARRAY@("REPORT",ITEM,"~~SUM",LVL),U,5)=DESC ; CARC Description
"RTN","RCDPRU2",36,0)
 ; Get grand totals for report
"RTN","RCDPRU2",37,0)
 D:$G(@ARRAY@("~~SUM",BILL))'=1
"RTN","RCDPRU2",38,0)
 . S $P(@ARRAY@("~~SUM","CLAIMS"),U,1)=$P($G(@ARRAY@("~~SUM","CLAIMS")),U,1)+1
"RTN","RCDPRU2",39,0)
 . S $P(@ARRAY@("~~SUM","CLAIMS"),U,2)=$P($G(@ARRAY@("~~SUM","CLAIMS")),U,2)+BAMT
"RTN","RCDPRU2",40,0)
 . S $P(@ARRAY@("~~SUM","CLAIMS"),U,3)=$P($G(@ARRAY@("~~SUM","CLAIMS")),U,3)+PAMT
"RTN","RCDPRU2",41,0)
 ; May have more than one adjustment on a bill
"RTN","RCDPRU2",42,0)
 I $G(@ARRAY@("~~SUM",BILL,ITEM))'=1 S $P(@ARRAY@("~~SUM","CLAIMS"),U,4)=$P($G(@ARRAY@("~~SUM","CLAIMS")),U,4)+AAMT ;W "BILL: ",BILL," ITEM: ",ITEM," Adj: ",AAMT,!
"RTN","RCDPRU2",43,0)
 ; Set markers so we don't double count a claim
"RTN","RCDPRU2",44,0)
 S @ARRAY@("~~SUM",ITEM,BILL)=1,@ARRAY@("~~SUM",ITEM,IEN)=1,@ARRAY@("~~SUM",ITEM,IEN,LVL)=1,@ARRAY@("~~SUM",BILL)=1,@ARRAY@("~~SUM",LVL,BILL)=1,@ARRAY@("~~SUM",LVL,IEN)=1
"RTN","RCDPRU2",45,0)
 Q
"RTN","RCDPRU2",46,0)
 ;
"RTN","RCDPRU2",47,0)
PAYTIN(PY,L) ; EP
"RTN","RCDPRU2",48,0)
 ; Truncate Payer/TIN string to L characters for reports
"RTN","RCDPRU2",49,0)
 ; Input:  PY = Payer/TIN string
"RTN","RCDPRU2",50,0)
 ;         L  = Maximum length allowed
"RTN","RCDPRU2",51,0)
 ; Return: Payer/TIN string truncated to length L
"RTN","RCDPRU2",52,0)
 N RETURN,XX,YY,ZZ
"RTN","RCDPRU2",53,0)
 S RETURN=PY
"RTN","RCDPRU2",54,0)
 I $L(PY)>L D
"RTN","RCDPRU2",55,0)
 . S ZZ=$L(PY,"/"),XX=$P(PY,"/",1,ZZ-1),YY=$P(PY,"/",ZZ)
"RTN","RCDPRU2",56,0)
 . S XX=$E(XX,1,L-($L(YY)+1)),RETURN=XX_"/"_YY
"RTN","RCDPRU2",57,0)
 Q RETURN
"RTN","RCDPRU2",58,0)
 ;
"RTN","RCDPRU2",59,0)
PAYTINS(PY,RETURN) ; Get all PAYER/TIN strings for the TIN in PY
"RTN","RCDPRU2",60,0)
 ; Input: PY String with Payer Name/TIN in it
"RTN","RCDPRU2",61,0)
 ; Output: RETURN passed by reference, array of Payer Name/TINS with same TIN as input PY
"RTN","RCDPRU2",62,0)
 N COUNT,NAME,TIN,ZZ
"RTN","RCDPRU2",63,0)
 K RETURN
"RTN","RCDPRU2",64,0)
 S COUNT=0
"RTN","RCDPRU2",65,0)
 S TIN=$P(PY,"/",$L(PY,"/"))
"RTN","RCDPRU2",66,0)
 S ZZ="" F  S ZZ=$O(^RCY(344.6,"C",TIN_" ",ZZ)) Q:ZZ=""  D
"RTN","RCDPRU2",67,0)
 . S NAME=$$GET1^DIQ(344.6,ZZ_",",.01,"E")
"RTN","RCDPRU2",68,0)
 . I NAME'="" D  ;
"RTN","RCDPRU2",69,0)
 . . S COUNT=COUNT+1
"RTN","RCDPRU2",70,0)
 . . S RETURN(COUNT)=NAME_"/"_TIN
"RTN","RCDPRU2",71,0)
 Q
"RTN","RCDPRU2",72,0)
 ;
"RTN","RCDPRU2",73,0)
PAYLIST(ARRAY,TYPE,RETURN) ; Expand list of payers to include ones with the same TIN
"RTN","RCDPRU2",74,0)
 ; Input: ARRAY - array of payer names or IENS
"RTN","RCDPRU2",75,0)
 ;        TYPE  - E=External (Payer Name array) or I=Internal (IEN array)
"RTN","RCDPRU2",76,0)
 ; Output: RETURN array passed by reference
"RTN","RCDPRU2",77,0)
 N KEY,ZZ
"RTN","RCDPRU2",78,0)
 S KEY=""
"RTN","RCDPRU2",79,0)
 F  S KEY=$O(ARRAY(KEY)) Q:KEY=""  D  ;
"RTN","RCDPRU2",80,0)
 . I TYPE="I" D  ;
"RTN","RCDPRU2",81,0)
 . . D TINLIST(KEY,.RETURN,TYPE)
"RTN","RCDPRU2",82,0)
 . I TYPE="E" D  ;
"RTN","RCDPRU2",83,0)
 . S ZZ=""
"RTN","RCDPRU2",84,0)
 . F  S ZZ=$O(^RCY(344.6,"B",KEY,ZZ)) Q:ZZ=""  D  ;
"RTN","RCDPRU2",85,0)
 . . D TINLIST(ZZ,.RETURN,TYPE)
"RTN","RCDPRU2",86,0)
 Q
"RTN","RCDPRU2",87,0)
TINLIST(PIEN,RETURN,TYPE) ; Given a payer IEN from #344.6, get list of payers with the same TIN
"RTN","RCDPRU2",88,0)
 ; Input: PIEN - Payer IEN (#344.6)
"RTN","RCDPRU2",89,0)
 ;        ARRAY - array of payer names or IENS
"RTN","RCDPRU2",90,0)
 ;        TYPE  - E=External (Payer Name array) or I=Internal (IEN array)
"RTN","RCDPRU2",91,0)
 ; Output: ARRAY passed by reference with modified entries
"RTN","RCDPRU2",92,0)
 N TIN,PNAME,ZZ
"RTN","RCDPRU2",93,0)
 S TIN=$$GET1^DIQ(344.6,PIEN_",",.02,"E")
"RTN","RCDPRU2",94,0)
 I TIN="" Q
"RTN","RCDPRU2",95,0)
 S ZZ=""
"RTN","RCDPRU2",96,0)
 F  S ZZ=$O(^RCY(344.6,"C",TIN_" ",ZZ)) Q:ZZ=""  D
"RTN","RCDPRU2",97,0)
 . I TYPE="E" D  ;
"RTN","RCDPRU2",98,0)
 . . S PNAME=$$GET1^DIQ(344.6,ZZ_",",.01,"E")
"RTN","RCDPRU2",99,0)
 . . I PNAME'="" S RETURN(PNAME)=1
"RTN","RCDPRU2",100,0)
 . E  D
"RTN","RCDPRU2",101,0)
 . . S RETURN(ZZ)=1
"RTN","RCDPRU2",102,0)
 Q
"RTN","RCDPRU2",103,0)
 ;
"RTN","RCDPRU2",104,0)
CHK(TYPE,ITEM,ARRAY) ; Check to see if this ITEM is included for processing
"RTN","RCDPRU2",105,0)
 ; If all are included no need to check further
"RTN","RCDPRU2",106,0)
 Q:$G(ARRAY(TYPE))="ALL" 1
"RTN","RCDPRU2",107,0)
 Q:$G(ITEM)="" 0
"RTN","RCDPRU2",108,0)
 Q:$G(ARRAY(TYPE,ITEM))=1 1
"RTN","RCDPRU2",109,0)
 Q 0
"RTN","RCDPRU2",110,0)
 ;
"RTN","RCDPRU2",111,0)
 ;
"RTN","RCDPRU2",112,0)
GPAYR(TIN) ; First payer name derived from TIN - PRCA*4.5*321
"RTN","RCDPRU2",113,0)
 ; Input: TIN - Payer ID
"RTN","RCDPRU2",114,0)
 ; Return: The first payer name related to TIN
"RTN","RCDPRU2",115,0)
 ;         *Note more than one entry in 344.6 may have this TIN but for sort by name
"RTN","RCDPRU2",116,0)
 ;          purposes we have to select one of them.
"RTN","RCDPRU2",117,0)
 N RETURN,ZZ
"RTN","RCDPRU2",118,0)
 S ZZ=$O(^RCY(344.6,"C",TIN_" ",""))
"RTN","RCDPRU2",119,0)
 I ZZ Q $$GET1^DIQ(344.6,ZZ_",",.01,"E")
"RTN","RCDPRU2",120,0)
 Q ""
"RTN","RCDPTAR")
0^19^B194758258
"RTN","RCDPTAR",1,0)
RCDPTAR ;ALB/TJB - EFT TRANSACTION AUDIT REPORT ;1/02/15
"RTN","RCDPTAR",2,0)
 ;;4.5;Accounts Receivable;**303,321**;Mar 20, 1995;Build 48
"RTN","RCDPTAR",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPTAR",4,0)
 ;
"RTN","RCDPTAR",5,0)
 Q
"RTN","RCDPTAR",6,0)
 ; PRCA*4.5*303 - EFT TRANSACTION AUDIT REPORT
"RTN","RCDPTAR",7,0)
 ;
"RTN","RCDPTAR",8,0)
 ; Executed by the option "EFT Transaction Audit Report" from the "EDI Lockbox Reports Menu"
"RTN","RCDPTAR",9,0)
 ;
"RTN","RCDPTAR",10,0)
 ; DESCRIPTION: The following generates a report that displays an audit history for an EFT
"RTN","RCDPTAR",11,0)
 ;
"RTN","RCDPTAR",12,0)
EN ; Main entry point for this report
"RTN","RCDPTAR",13,0)
 ; Ask Summary or Detail output
"RTN","RCDPTAR",14,0)
 ;
"RTN","RCDPTAR",15,0)
 N DIR,X,Y,DUOUT,DTOUT,DIRUT,DIROUT,RCREP
"RTN","RCDPTAR",16,0)
 W !
"RTN","RCDPTAR",17,0)
 S DIR(0)="SOA^S:Summary Information Only;D:Detail Report"
"RTN","RCDPTAR",18,0)
 S DIR("A")="(S)ummary or (D)etail Report format? "
"RTN","RCDPTAR",19,0)
 S DIR("B")="SUMMARY"
"RTN","RCDPTAR",20,0)
 D ^DIR
"RTN","RCDPTAR",21,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q
"RTN","RCDPTAR",22,0)
 S RCREP=Y
"RTN","RCDPTAR",23,0)
 ;
"RTN","RCDPTAR",24,0)
 I RCREP="S" D SUM^RCDPTAR1
"RTN","RCDPTAR",25,0)
 I RCREP="D" D DET
"RTN","RCDPTAR",26,0)
 Q
"RTN","RCDPTAR",27,0)
 ;
"RTN","RCDPTAR",28,0)
DET ; Entry point for detailed report
"RTN","RCDPTAR",29,0)
 ; Input: variable RCREP defined and equal to "D"
"RTN","RCDPTAR",30,0)
 ; Output: Written to device
"RTN","RCDPTAR",31,0)
 ;
"RTN","RCDPTAR",32,0)
 N RCDATA,RCDET
"RTN","RCDPTAR",33,0)
 ;
"RTN","RCDPTAR",34,0)
DET1 ; Prompt for user selection criteria
"RTN","RCDPTAR",35,0)
 K DIR
"RTN","RCDPTAR",36,0)
 S DIR(0)="SO^N:Deposit Number;D:Deposit Date;R:Receipt Number;T:Trace Number"
"RTN","RCDPTAR",37,0)
 S DIR("PRE")="S:X?1N X=$S(X=1:""N"",X=2:""d"",X=3:""r"",X=4:""t"",1:""X"")"
"RTN","RCDPTAR",38,0)
 S DIR("L",1)="Search for EFT Number by:"
"RTN","RCDPTAR",39,0)
 S DIR("L",2)=""
"RTN","RCDPTAR",40,0)
 S DIR("L",3)="  1. Deposit (N)umber"
"RTN","RCDPTAR",41,0)
 S DIR("L",4)="  2. Deposit (D)ate"
"RTN","RCDPTAR",42,0)
 S DIR("L",5)="  3. (R)eceipt #"
"RTN","RCDPTAR",43,0)
 S DIR("L")="  4. (T)race #"
"RTN","RCDPTAR",44,0)
 S DIR("A")="Search for EFT by"
"RTN","RCDPTAR",45,0)
 D ^DIR
"RTN","RCDPTAR",46,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") G DETQ
"RTN","RCDPTAR",47,0)
 S RCDET=Y
"RTN","RCDPTAR",48,0)
 ;
"RTN","RCDPTAR",49,0)
 ; Do lookup of EFTs based on the user selection above
"RTN","RCDPTAR",50,0)
 S RCDATA=""
"RTN","RCDPTAR",51,0)
 D @($S(RCDET="N":"DN",RCDET="D":"DT",RCDET="R":"RC",1:"TR")_"(.RCDATA)")
"RTN","RCDPTAR",52,0)
 I RCDATA=-1 G DETQ
"RTN","RCDPTAR",53,0)
 I RCDATA="" G DET1
"RTN","RCDPTAR",54,0)
 ;
"RTN","RCDPTAR",55,0)
  ; Prompt for device
"RTN","RCDPTAR",56,0)
 N %ZIS,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","RCDPTAR",57,0)
 S %ZIS="QM"
"RTN","RCDPTAR",58,0)
 D ^%ZIS
"RTN","RCDPTAR",59,0)
 I POP G DETQ
"RTN","RCDPTAR",60,0)
 I $D(IO("Q")) D  G DETQ
"RTN","RCDPTAR",61,0)
 . S ZTRTN="RUN^RCDPTAR(RCDATA)"
"RTN","RCDPTAR",62,0)
 . S ZTIO=ION
"RTN","RCDPTAR",63,0)
 . S ZTSAVE("*")=""
"RTN","RCDPTAR",64,0)
 . S ZTDESC="EFT TRANSACTION SUMMARY REPORT"
"RTN","RCDPTAR",65,0)
 . D ^%ZTLOAD
"RTN","RCDPTAR",66,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","RCDPTAR",67,0)
 . D HOME^%ZIS
"RTN","RCDPTAR",68,0)
 U IO
"RTN","RCDPTAR",69,0)
 ;
"RTN","RCDPTAR",70,0)
 D RUN(RCDATA)
"RTN","RCDPTAR",71,0)
 Q
"RTN","RCDPTAR",72,0)
 ;
"RTN","RCDPTAR",73,0)
DETQ ;
"RTN","RCDPTAR",74,0)
 Q
"RTN","RCDPTAR",75,0)
 ;
"RTN","RCDPTAR",76,0)
RUN(RCDATA) ; Compile and output the report
"RTN","RCDPTAR",77,0)
 ; Input: RCDATA - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",78,0)
 ; Output: none
"RTN","RCDPTAR",79,0)
 ;
"RTN","RCDPTAR",80,0)
 ; Compile Data
"RTN","RCDPTAR",81,0)
 D COMPILE(RCDATA)
"RTN","RCDPTAR",82,0)
 ;
"RTN","RCDPTAR",83,0)
 ; Generate Report
"RTN","RCDPTAR",84,0)
 D REPORT(RCDATA)
"RTN","RCDPTAR",85,0)
 ;
"RTN","RCDPTAR",86,0)
 K ^TMP("RCDPTAR",$J)
"RTN","RCDPTAR",87,0)
 Q
"RTN","RCDPTAR",88,0)
 ;
"RTN","RCDPTAR",89,0)
DN(RCDATA) ; Lookup by Deposit Number
"RTN","RCDPTAR",90,0)
 ; Input: RCDATA - null on entry
"RTN","RCDPTAR",91,0)
 ; Output: RCDATA passed by refence - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",92,0)
 ; Note variable RCDEFLUP is needed by LOOKUP^RCDPUDEP, which is called by the .01 field
"RTN","RCDPTAR",93,0)
 ;
"RTN","RCDPTAR",94,0)
 N DIC,DTOUT,DUOUT,Y,RCDEFLUP,LOCKIEN
"RTN","RCDPTAR",95,0)
 ;
"RTN","RCDPTAR",96,0)
 ; Lookup Deposit Number
"RTN","RCDPTAR",97,0)
 W !
"RTN","RCDPTAR",98,0)
 S DIC="^RCY(344.1,",DIC(0)="QEAMn",DIC("A")="Select DEPOSIT: ",DIC("W")="D DICW^RCDPUDEP"
"RTN","RCDPTAR",99,0)
 S RCDEFLUP=1
"RTN","RCDPTAR",100,0)
 D ^DIC
"RTN","RCDPTAR",101,0)
 I $G(DTOUT)!$G(DUOUT)!(Y=-1) S RCDATA=-1 Q
"RTN","RCDPTAR",102,0)
 ;
"RTN","RCDPTAR",103,0)
 S LOCKIEN=+$O(^RCY(344.3,"ARDEP",+Y,""))
"RTN","RCDPTAR",104,0)
 I 'LOCKIEN W !!,"EFT NOT FOUND - please check Deposit" D PAUSE Q
"RTN","RCDPTAR",105,0)
 ;
"RTN","RCDPTAR",106,0)
 ; Get EFT pointer
"RTN","RCDPTAR",107,0)
 S RCDATA=$$EFT(LOCKIEN)
"RTN","RCDPTAR",108,0)
 Q
"RTN","RCDPTAR",109,0)
 ;
"RTN","RCDPTAR",110,0)
DT(RCDATA) ; Deposit Date
"RTN","RCDPTAR",111,0)
 ; Input: RCDATA - null on entry
"RTN","RCDPTAR",112,0)
 ; Output: RCDATA passed by refence - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",113,0)
 ;
"RTN","RCDPTAR",114,0)
 N CNT,DATA,DEPIEN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,ITEM,LINE,LIST,RCDT,RCI,RCIEN,X,Y
"RTN","RCDPTAR",115,0)
 ;
"RTN","RCDPTAR",116,0)
DT1 ; Ask the user for the Deposit Date
"RTN","RCDPTAR",117,0)
 K DIR
"RTN","RCDPTAR",118,0)
 S DIR(0)="DAO^:"_DT_":APE",DIR("B")="T"
"RTN","RCDPTAR",119,0)
 S DIR("A")="Select DEPOSIT DATE: "
"RTN","RCDPTAR",120,0)
 D ^DIR
"RTN","RCDPTAR",121,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") S RCDATA=-1 Q
"RTN","RCDPTAR",122,0)
 S RCDT=Y
"RTN","RCDPTAR",123,0)
 ;
"RTN","RCDPTAR",124,0)
 ; Build List
"RTN","RCDPTAR",125,0)
 K LIST
"RTN","RCDPTAR",126,0)
 S RCI="",CNT=0 F  S RCI=$O(^RCY(344.3,"ADEP",RCDT,RCI)) Q:RCI=""  D
"RTN","RCDPTAR",127,0)
 . S RCIEN="" F  S RCIEN=$O(^RCY(344.3,"ADEP",RCDT,RCI,RCIEN)) Q:RCIEN=""  D
"RTN","RCDPTAR",128,0)
 .. S DEPIEN=$P($G(^RCY(344.3,RCIEN,0)),U,3)
"RTN","RCDPTAR",129,0)
 .. I DEPIEN="" Q
"RTN","RCDPTAR",130,0)
 .. S DATA=$G(^RCY(344.1,DEPIEN,0))
"RTN","RCDPTAR",131,0)
 .. I DATA="" Q
"RTN","RCDPTAR",132,0)
 .. S CNT=CNT+1
"RTN","RCDPTAR",133,0)
 .. ; Code below is similiar to DICW^RCDPUDEP code
"RTN","RCDPTAR",134,0)
 .. S LINE=$J(CNT,3)_". "_$P(DATA,U,1)
"RTN","RCDPTAR",135,0)
 .. S $E(LINE,19)="by: "_$E($P($G(^VA(200,+$P(DATA,"^",6),0)),"^"),1,15)
"RTN","RCDPTAR",136,0)
 .. I '$P(DATA,"^",7) S $P(DATA,"^",7)="???????"
"RTN","RCDPTAR",137,0)
 .. S $E(LINE,39)="on: "_$E($P(DATA,"^",7),4,5)_"/"_$E($P(DATA,"^",7),6,7)_"/"_$E($P(DATA,"^",7),2,3)
"RTN","RCDPTAR",138,0)
 .. S $E(LINE,52)="amt: $"_$J($P(DATA,"^",4),10,2)
"RTN","RCDPTAR",139,0)
 .. S $E(LINE,70)=$P("N/A^OPEN^DEPOSITED^CONFIRMED^PROCESSED^VOID","^",+$P(DATA,"^",12)+1)
"RTN","RCDPTAR",140,0)
 .. S LIST(CNT)=RCIEN_"^"_$P(DATA,U,1)_"^"_LINE
"RTN","RCDPTAR",141,0)
 ;
"RTN","RCDPTAR",142,0)
 ; If no deposits in the LIST, display a message and try again
"RTN","RCDPTAR",143,0)
 I CNT=0 W !,"Date ",$$DATE^RCDPRU(RCDT)," does not have any valid deposits, please try again...",! G DT1
"RTN","RCDPTAR",144,0)
 ;
"RTN","RCDPTAR",145,0)
 ; If only one deposit in the list, use it
"RTN","RCDPTAR",146,0)
 I CNT=1 S RCDATA=$$EFT(+LIST(CNT)) Q
"RTN","RCDPTAR",147,0)
 ;
"RTN","RCDPTAR",148,0)
 ; Multiple entries found so prompt for the one that is wanted
"RTN","RCDPTAR",149,0)
 W !!,"Deposits on ",$$DATE^RCDPRU(RCDT)
"RTN","RCDPTAR",150,0)
 K DIR,ITEM
"RTN","RCDPTAR",151,0)
 S DIR(0)="SAO^"
"RTN","RCDPTAR",152,0)
 S DIR("A")="Select DEPOSIT: "
"RTN","RCDPTAR",153,0)
 S DIR("L",1)="  Choose from:"
"RTN","RCDPTAR",154,0)
 F LINE=1:1:CNT D
"RTN","RCDPTAR",155,0)
 . S DATA=LIST(LINE),DIR(0)=DIR(0)_LINE_":"_$P(DATA,U,2)_";"
"RTN","RCDPTAR",156,0)
 . S DIR("L",LINE+1)=$P(DATA,U,3),ITEM(LINE)=+DATA
"RTN","RCDPTAR",157,0)
 . W !,"  ",$P(DATA,U,3)
"RTN","RCDPTAR",158,0)
 S DIR(0)=$E(DIR(0),1,$L(DIR(0))-1)
"RTN","RCDPTAR",159,0)
 S DIR("L")=DIR("L",CNT+1) K DIR("L",CNT+1)
"RTN","RCDPTAR",160,0)
 W !
"RTN","RCDPTAR",161,0)
 D ^DIR
"RTN","RCDPTAR",162,0)
 I $D(DTOUT)!$D(DUOUT) S RCDATA=-1 Q
"RTN","RCDPTAR",163,0)
 I Y="" G DT1
"RTN","RCDPTAR",164,0)
 S RCDATA=$$EFT(ITEM(Y))
"RTN","RCDPTAR",165,0)
 Q
"RTN","RCDPTAR",166,0)
 ;
"RTN","RCDPTAR",167,0)
RC(RCDATA) ; Lookup by Receipt Number
"RTN","RCDPTAR",168,0)
 ; Input: RCDATA - null on entry
"RTN","RCDPTAR",169,0)
 ; Output: RCDATA passed by refence - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",170,0)
 ;
"RTN","RCDPTAR",171,0)
 N DIC,D,DTOUT,DUOUT,X,Y,RCIEN,RCDTN,RCED
"RTN","RCDPTAR",172,0)
 ;
"RTN","RCDPTAR",173,0)
 W !
"RTN","RCDPTAR",174,0)
 S DIC="^RCY(344,",DIC(0)="QEAMn",DIC("A")="Select RECEIPT: "
"RTN","RCDPTAR",175,0)
 S DIC("W")="D DICW^RCDPUREC"
"RTN","RCDPTAR",176,0)
 S DIC("S")="I $$EDILBEV^RCDPEU($P($G(^(0)),U,4))"
"RTN","RCDPTAR",177,0)
 D ^DIC
"RTN","RCDPTAR",178,0)
 I $D(DTOUT)!$D(DUOUT)!(Y=-1) S RCDATA=-1 Q
"RTN","RCDPTAR",179,0)
 ;
"RTN","RCDPTAR",180,0)
 ; Check if there is a pointer to the AR Deposit
"RTN","RCDPTAR",181,0)
 S RCDATA=""
"RTN","RCDPTAR",182,0)
 S RCIEN=$P($G(^RCY(344,+Y,0)),U,6)
"RTN","RCDPTAR",183,0)
 ;
"RTN","RCDPTAR",184,0)
 ; If there is, then get the EFT via AR Deposit and EDI LockBox files
"RTN","RCDPTAR",185,0)
 I RCIEN D
"RTN","RCDPTAR",186,0)
 . ; Get Ticket Number
"RTN","RCDPTAR",187,0)
 . S RCDTN=$P($G(^RCY(344.1,RCIEN,0)),U,1)
"RTN","RCDPTAR",188,0)
 . I RCDTN="" Q
"RTN","RCDPTAR",189,0)
 . ;
"RTN","RCDPTAR",190,0)
 . ; Get EDI Lockbox Deposit File
"RTN","RCDPTAR",191,0)
 . S RCED=$O(^RCY(344.3,"C",RCDTN,""))
"RTN","RCDPTAR",192,0)
 . I RCED="" Q
"RTN","RCDPTAR",193,0)
 . S RCDATA=$$EFT(RCED)
"RTN","RCDPTAR",194,0)
 ;
"RTN","RCDPTAR",195,0)
 ; If this AR Deposit record is not found, check if it is a receipt on the ERA
"RTN","RCDPTAR",196,0)
 I 'RCIEN D
"RTN","RCDPTAR",197,0)
 . S ERAIEN=$O(^RCY(344.4,"H",+Y,""))
"RTN","RCDPTAR",198,0)
 . I 'ERAIEN S ERAIEN=$O(^RCY(344.4,"ARCT",+Y,""))
"RTN","RCDPTAR",199,0)
 . I 'ERAIEN Q
"RTN","RCDPTAR",200,0)
 . S EFTIEN=$O(^RCY(344.31,"AERA",ERAIEN,""))
"RTN","RCDPTAR",201,0)
 . I EFTIEN S RCDATA=$$EFTDATA(EFTIEN)
"RTN","RCDPTAR",202,0)
 ;
"RTN","RCDPTAR",203,0)
 I RCDATA="" W !!,"EFT NOT FOUND - please check Receipt" D PAUSE Q
"RTN","RCDPTAR",204,0)
 Q
"RTN","RCDPTAR",205,0)
 ;
"RTN","RCDPTAR",206,0)
TR(RCDATA) ; Lookup by Trace Number
"RTN","RCDPTAR",207,0)
 ; Input: RCDATA - null on entry
"RTN","RCDPTAR",208,0)
 ; Output: RCDATA passed by refence - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",209,0)
 N DIC,D,Y,X,DTOUT,DUOUT
"RTN","RCDPTAR",210,0)
 ;
"RTN","RCDPTAR",211,0)
 ; Use "F" index in EDI EFT Detail file
"RTN","RCDPTAR",212,0)
 W !
"RTN","RCDPTAR",213,0)
 S DIC="^RCY(344.31,",DIC(0)="QEASn",D="F",DIC("A")="Select TRACE: "
"RTN","RCDPTAR",214,0)
 ; DIC("W") may need to be fixed if Trace numbers go over 32 characters. The fields
"RTN","RCDPTAR",215,0)
 ; displayed are the EFT#, Insurance company name, amount and Date Recieved.
"RTN","RCDPTAR",216,0)
 S DIC("W")="D EN^DDIOL($J($P(^(0),U,1),7)_"" ""_$$LJ^XLFSTR($E($P(^(0),U,2),1,20),20)_$J($P(^(0),U,7),10)_"" ""_$$DATE^RCDPRU($P(^(0),U,13)),,""?32"")"
"RTN","RCDPTAR",217,0)
 D IX^DIC
"RTN","RCDPTAR",218,0)
 I $D(DTOUT)!$D(DUOUT)!(Y=-1) S RCDATA=-1 Q
"RTN","RCDPTAR",219,0)
 S RCDATA=$$EFTDATA(+Y)
"RTN","RCDPTAR",220,0)
 Q
"RTN","RCDPTAR",221,0)
 ;
"RTN","RCDPTAR",222,0)
EFT(LOCKIEN) ; Select a single EFT Number
"RTN","RCDPTAR",223,0)
 ; Input: LOCKIEN - IEN for LOCKBOX DEPOSIT (#344.3)
"RTN","RCDPTAR",224,0)
 ; Return: LIST(Y) - Delimiter list of information as returned by suboutine EFTDATA
"RTN","RCDPTAR",225,0)
 ;
"RTN","RCDPTAR",226,0)
 I '$G(LOCKIEN) W !!,"No EFT detail for this selection" D PAUSE Q ""
"RTN","RCDPTAR",227,0)
 ;
"RTN","RCDPTAR",228,0)
 N EFTIEN,CNT,DATA,LIST,Y
"RTN","RCDPTAR",229,0)
 ;
"RTN","RCDPTAR",230,0)
 S EFTIEN="",CNT=0
"RTN","RCDPTAR",231,0)
 F  S EFTIEN=$O(^RCY(344.31,"B",LOCKIEN,EFTIEN)) Q:EFTIEN=""  D  ;
"RTN","RCDPTAR",232,0)
 . S DATA=$$EFTDATA(EFTIEN) I DATA]"" S CNT=CNT+1,LIST(CNT)=DATA
"RTN","RCDPTAR",233,0)
 ;
"RTN","RCDPTAR",234,0)
 I CNT=0 W !!,"No EFT detail for this selection" D PAUSE Q ""
"RTN","RCDPTAR",235,0)
 ;
"RTN","RCDPTAR",236,0)
 ; If only one EFT, select it and quit
"RTN","RCDPTAR",237,0)
 I CNT=1 S Y=1 G EFT1
"RTN","RCDPTAR",238,0)
 ;
"RTN","RCDPTAR",239,0)
 ; Display and the let the user select the EFT
"RTN","RCDPTAR",240,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,ROW,TRANS,X
"RTN","RCDPTAR",241,0)
 S DIR(0)="SO^"
"RTN","RCDPTAR",242,0)
 S DIR("A")="Select item from list"
"RTN","RCDPTAR",243,0)
 S DIR("L",1)="Select single EFT:"
"RTN","RCDPTAR",244,0)
 F ROW=1:1:CNT-1 D
"RTN","RCDPTAR",245,0)
 . S DATA=LIST(ROW),LOCKIEN=$P(DATA,U,2),EFTIEN=$P(DATA,U,3),TRANS=$$GET1^DIQ(344.31,EFTIEN_",",.01)
"RTN","RCDPTAR",246,0)
 . S DIR(0)=DIR(0)_ROW_":"_TRANS_";"
"RTN","RCDPTAR",247,0)
 . S DIR("L",(ROW+1))=$J(ROW,3)_". "_TRANS_"    "_$$DISPLAY(EFTIEN,LOCKIEN)
"RTN","RCDPTAR",248,0)
 S DATA=LIST(CNT),LOCKIEN=$P(DATA,U,2),EFTIEN=$P(DATA,U,3),TRANS=$$GET1^DIQ(344.31,EFTIEN_",",.01)
"RTN","RCDPTAR",249,0)
 S DIR(0)=DIR(0)_CNT_":"_TRANS
"RTN","RCDPTAR",250,0)
 S DIR("L")=$J(CNT,3)_". "_TRANS_"    "_$$DISPLAY(EFTIEN,LOCKIEN)
"RTN","RCDPTAR",251,0)
 D ^DIR
"RTN","RCDPTAR",252,0)
 I $D(DTOUT)!$D(DUOUT)!(Y="") Q -1
"RTN","RCDPTAR",253,0)
 ;
"RTN","RCDPTAR",254,0)
EFT1 ;
"RTN","RCDPTAR",255,0)
 Q LIST(Y)
"RTN","RCDPTAR",256,0)
 ;
"RTN","RCDPTAR",257,0)
EFTDATA(EFTIEN) ; Get associated records for this EFT
"RTN","RCDPTAR",258,0)
 ; Input: EFTIEN - IEN for EFT [344.31]
"RTN","RCDPTAR",259,0)
 ; Returns: A1^A2^A3^A4^45
"RTN","RCDPTAR",260,0)
 ;   where  A1=ERAIEN - IEN for ERA (#344.4)
"RTN","RCDPTAR",261,0)
 ;          A2=LOCKIEN - IEN for LOCKBOX DEPOSIT (#344.3)
"RTN","RCDPTAR",262,0)
 ;          A3=EFTIEN - IEN for EFT (#344.31)
"RTN","RCDPTAR",263,0)
 ;          A4=DEPIEN - IEN for AR DEPOSIT (#344.1)
"RTN","RCDPTAR",264,0)
 ;          A5=BATCHIEN - IEN for AR BATCH PAYMENT (#344)
"RTN","RCDPTAR",265,0)
 ;
"RTN","RCDPTAR",266,0)
 I '$G(EFTIEN) Q ""
"RTN","RCDPTAR",267,0)
 ;
"RTN","RCDPTAR",268,0)
 N BATCHIEN,DEPIEN,ERAIEN,LOCKIEN                       ;PRCA*4.5*321 removed DEPOSIT
"RTN","RCDPTAR",269,0)
 S (ERAIEN,DEPIEN,BATCHIEN)=""
"RTN","RCDPTAR",270,0)
 S ERAIEN=$$GET1^DIQ(344.31,EFTIEN,.1,"I")              ;PRCA*4.5*321 use ^DIQ vs global access
"RTN","RCDPTAR",271,0)
 S LOCKIEN=$$GET1^DIQ(344.31,EFTIEN,.01,"I")            ;PRCA*4.5*321
"RTN","RCDPTAR",272,0)
 I LOCKIEN S DEPIEN=$$GET1^DIQ(344.3,LOCKIEN,.03,"I")   ;PRCA*4.5*321 instead of $O on B index of 344.1
"RTN","RCDPTAR",273,0)
 I DEPIEN S BATCHIEN=$O(^RCY(344,"AD",DEPIEN,""))
"RTN","RCDPTAR",274,0)
 Q ERAIEN_U_LOCKIEN_U_EFTIEN_U_DEPIEN_U_BATCHIEN
"RTN","RCDPTAR",275,0)
 ;
"RTN","RCDPTAR",276,0)
DISPLAY(EFTIEN,LOCKIEN) ; Display EFT detail during user selection process
"RTN","RCDPTAR",277,0)
 ; Input: EFTIEN - IEN for EFT (#344.31)
"RTN","RCDPTAR",278,0)
 ;        LOCKIEN - IEN for LOCKBOX DEPOSIT (#344.3)
"RTN","RCDPTAR",279,0)
 ; Return: X1_"    "_X2_"    "_X3_"    "_X4_"    "_X5
"RTN","RCDPTAR",280,0)
 ; where   X1=PAYER NAME
"RTN","RCDPTAR",281,0)
 ;         X2=TRACE NUMBER
"RTN","RCDPTAR",282,0)
 ;         X3=AMOUNT OF PAYMENT
"RTN","RCDPTAR",283,0)
 ;         X4=DEPOSIT NUMBER
"RTN","RCDPTAR",284,0)
 ;         X5=DEPOSIT DATE
"RTN","RCDPTAR",285,0)
 N X
"RTN","RCDPTAR",286,0)
 S EFTIEN=$G(EFTIEN)
"RTN","RCDPTAR",287,0)
 S LOCKIEN=$G(LOCKIEN)
"RTN","RCDPTAR",288,0)
 S X=$$GET1^DIQ(344.31,EFTIEN_",",.02)_"    "_$$GET1^DIQ(344.31,EFTIEN_",",.04)_"    "
"RTN","RCDPTAR",289,0)
 S X=X_$$GET1^DIQ(344.31,EFTIEN_",",.07)_"    "_$$GET1^DIQ(344.3,LOCKIEN_",",.06)_"    "
"RTN","RCDPTAR",290,0)
 S X=X_$$DATE^RCDPRU($$GET1^DIQ(344.3,LOCKIEN_",",.07,"I"),"2DZ")
"RTN","RCDPTAR",291,0)
 Q X
"RTN","RCDPTAR",292,0)
 ;
"RTN","RCDPTAR",293,0)
COMPILE(RCDATA) ; Compile data for display
"RTN","RCDPTAR",294,0)
 ; Input: RCDATA - see subroutine EFTDA for delimited list of fields
"RTN","RCDPTAR",295,0)
 ; Output: ^TMP("RCDPTAR",$J)
"RTN","RCDPTAR",296,0)
 ;
"RTN","RCDPTAR",297,0)
 I $G(RCDATA)="" Q
"RTN","RCDPTAR",298,0)
 ;
"RTN","RCDPTAR",299,0)
 N BATCHIEN,DEPDATE,DEPIEN,EFTIEN,ERAIEN,FILEDATE,FMSDOCNO,IENS,LASTIEN,LINE,LOCKIEN
"RTN","RCDPTAR",300,0)
 N MATCHDATE,MATCHIEN,PROCDATE,STATUS,TRANS
"RTN","RCDPTAR",301,0)
 K ^TMP("RCDPTAR",$J)
"RTN","RCDPTAR",302,0)
 ;
"RTN","RCDPTAR",303,0)
 ; Get Pointers from RCDATA
"RTN","RCDPTAR",304,0)
 S ERAIEN=$P(RCDATA,U,1),LOCKIEN=$P(RCDATA,U,2),EFTIEN=$P(RCDATA,U,3)
"RTN","RCDPTAR",305,0)
 S DEPIEN=$P(RCDATA,U,4),BATCHIEN=$P(RCDATA,U,5)
"RTN","RCDPTAR",306,0)
 ;
"RTN","RCDPTAR",307,0)
 ; Get Inital Creation/Deposit information
"RTN","RCDPTAR",308,0)
 K RCDATA
"RTN","RCDPTAR",309,0)
 I LOCKIEN D
"RTN","RCDPTAR",310,0)
 . D GETS^DIQ(344.3,LOCKIEN_",",".02;.06;.08","IE","RCDATA")
"RTN","RCDPTAR",311,0)
 . S FILEDATE=$G(RCDATA(344.3,LOCKIEN_",",.02,"I"))
"RTN","RCDPTAR",312,0)
 . I 'FILEDATE Q
"RTN","RCDPTAR",313,0)
 . S ^TMP("RCDPTAR",$J,FILEDATE,1)="DEP#:"_$G(RCDATA(344.3,LOCKIEN_",",.06,"E"))_"  DEP AMT:"_$G(RCDATA(344.3,LOCKIEN_",",.08,"E"))_"^EFT STATUS:RECEIVED"
"RTN","RCDPTAR",314,0)
 ;
"RTN","RCDPTAR",315,0)
 ; Check if posted to revenue code 8NZZ
"RTN","RCDPTAR",316,0)
 S TRANS=$$GET1^DIQ(344.31,EFTIEN_",",.14)
"RTN","RCDPTAR",317,0)
 I TRANS,$D(^RCY(344,+BATCHIEN,1,TRANS,0)),LOCKIEN,$D(RCDATA(344.3,LOCKIEN_",")) D
"RTN","RCDPTAR",318,0)
 . S DEPDATE=$$GET1^DIQ(344.1,DEPIEN_",",.07,"I")
"RTN","RCDPTAR",319,0)
 . I 'DEPDATE Q
"RTN","RCDPTAR",320,0)
 . S ^TMP("RCDPTAR",$J,DEPDATE,2)="DEP#:"_$G(RCDATA(344.3,LOCKIEN_",",.06,"E"))_"  DEP AMT:"_$G(RCDATA(344.3,LOCKIEN_",",.08,"E"))_"^DEP STATUS:POSTED TO 8NZZ"
"RTN","RCDPTAR",321,0)
 ;
"RTN","RCDPTAR",322,0)
 ; Get Match Status History information
"RTN","RCDPTAR",323,0)
 I EFTIEN D
"RTN","RCDPTAR",324,0)
 . ; Get the Last IEN of the multiple
"RTN","RCDPTAR",325,0)
 . S LASTIEN=$O(^RCY(344.31,EFTIEN,4,999999),-1)
"RTN","RCDPTAR",326,0)
 . ; Loop through history and build data
"RTN","RCDPTAR",327,0)
 . S MATCHIEN=0 F  S MATCHIEN=$O(^RCY(344.31,EFTIEN,4,MATCHIEN)) Q:'MATCHIEN  D
"RTN","RCDPTAR",328,0)
 .. S IENS=MATCHIEN_","_EFTIEN_","
"RTN","RCDPTAR",329,0)
 .. D GETS^DIQ(344.314,IENS,"*","IE","RCDATA")
"RTN","RCDPTAR",330,0)
 .. S MATCHDATE=$G(RCDATA(344.314,IENS,.02,"I"))
"RTN","RCDPTAR",331,0)
 .. I MATCHDATE="" Q
"RTN","RCDPTAR",332,0)
 .. S STATUS=$G(RCDATA(344.314,IENS,.01,"E"))
"RTN","RCDPTAR",333,0)
 .. I STATUS="MATCHED WITH ERRORS" S STATUS="MATCHED W/ERRORS"
"RTN","RCDPTAR",334,0)
 .. S LINE="EFT STATUS:"_STATUS
"RTN","RCDPTAR",335,0)
 .. ; If this is the last record and the status is matched, add the ERA record to the data
"RTN","RCDPTAR",336,0)
 .. I MATCHIEN=LASTIEN,STATUS="MATCHED"!(STATUS="MATCHED W/ERRORS"),$$GET1^DIQ(344.31,EFTIEN_",",.1) S LINE=LINE_" ERA#:"_$$GET1^DIQ(344.31,EFTIEN_",",.1)
"RTN","RCDPTAR",337,0)
 .. S ^TMP("RCDPTAR",$J,MATCHDATE,3)=LINE_"^BY "_$E($G(RCDATA(344.314,IENS,.03,"E")),1,14)_" on "_$$DATE^RCDPRU(MATCHDATE,"2ZD")
"RTN","RCDPTAR",338,0)
 ;
"RTN","RCDPTAR",339,0)
 ; Get Receipt information (EFT)
"RTN","RCDPTAR",340,0)
 I BATCHIEN D
"RTN","RCDPTAR",341,0)
 . S PROCDATE=$$GET1^DIQ(344,BATCHIEN_",",.08,"I")
"RTN","RCDPTAR",342,0)
 . I 'PROCDATE Q
"RTN","RCDPTAR",343,0)
 . I $G(DEPDATE),PROCDATE<DEPDATE S PROCDATE=DEPDATE     ;PRCA*4.5*321 add $G
"RTN","RCDPTAR",344,0)
 . S FMSDOCNO=$$FMSSTAT^RCDPUREC(BATCHIEN)
"RTN","RCDPTAR",345,0)
 . S ^TMP("RCDPTAR",$J,PROCDATE,5)="DEP RCPT#:"_$$GET1^DIQ(344,BATCHIEN_",",.01,"E")_" ENTRY#:"_BATCHIEN_"^FMS DOC#:"_$P(FMSDOCNO,U,1)_"^^DOC STATUS:"_$E($P(FMSDOCNO,U,2),1,18)
"RTN","RCDPTAR",346,0)
 ;
"RTN","RCDPTAR",347,0)
 ; Get Repeipt information (ERA)
"RTN","RCDPTAR",348,0)
 S BATCHIEN=$$GET1^DIQ(344.4,ERAIEN_",",.08,"I")
"RTN","RCDPTAR",349,0)
 I BATCHIEN D
"RTN","RCDPTAR",350,0)
 . S PROCDATE=$$GET1^DIQ(344,BATCHIEN_",",.08,"I")
"RTN","RCDPTAR",351,0)
 . I $G(DEPDATE),PROCDATE<DEPDATE S PROCDATE=DEPDATE     ; PRCA*4.5*321 add $G
"RTN","RCDPTAR",352,0)
 . I 'PROCDATE Q
"RTN","RCDPTAR",353,0)
 . S FMSDOCNO=$$FMSSTAT^RCDPUREC(BATCHIEN)
"RTN","RCDPTAR",354,0)
 . ;S ^TMP("RCDPTAR",$J,PROCDATE,6)="RCPT#:"_$$GET1^DIQ(344,BATCHIEN_",",.01,"E")_" EFT DETAIL#:"_EFTIEN_"^BY "_$E($$GET1^DIQ(344,BATCHIEN_",",.02,"E"),1,14)_" on "_$$DATE^RCDPRU(PROCDATE,"2DZ")
"RTN","RCDPTAR",355,0)
 . S ^TMP("RCDPTAR",$J,PROCDATE,6)="RCPT#:"_$$GET1^DIQ(344,BATCHIEN_",",.01,"E")_"^BY "_$E($$GET1^DIQ(344,BATCHIEN_",",.02,"E"),1,14)_" on "_$$DATE^RCDPRU(PROCDATE,"2DZ")
"RTN","RCDPTAR",356,0)
 . S ^TMP("RCDPTAR",$J,PROCDATE,7)="FMS DOC#:"_$P(FMSDOCNO,U,1)_"^DOC STATUS:"_$E($P(FMSDOCNO,U,2),1,18)
"RTN","RCDPTAR",357,0)
 Q
"RTN","RCDPTAR",358,0)
 ;
"RTN","RCDPTAR",359,0)
REPORT(RCDATA) ; Print out the report
"RTN","RCDPTAR",360,0)
 ; Input: RCDATA - see subroutine EFTDA about for delimited list of fields
"RTN","RCDPTAR",361,0)
 ; Output: Write statements
"RTN","RCDPTAR",362,0)
 ;
"RTN","RCDPTAR",363,0)
 N CNT,DATE,DATA,LINES,RCHR,RCNOW,RCPG,RCSCR
"RTN","RCDPTAR",364,0)
 ;
"RTN","RCDPTAR",365,0)
 ; Initialize Report Date, Page Number and String of underscores
"RTN","RCDPTAR",366,0)
 S RCSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","RCDPTAR",367,0)
 S RCNOW=$$UP^XLFSTR($$NOW^RCDPRU()),RCPG=0,RCHR="",$P(RCHR,"-",IOM+1)=""
"RTN","RCDPTAR",368,0)
 ;
"RTN","RCDPTAR",369,0)
 U IO
"RTN","RCDPTAR",370,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCDATA)
"RTN","RCDPTAR",371,0)
 I $G(RCDATA)=""!'$D(^TMP("RCDPTAR",$J)) W !,"No data found"
"RTN","RCDPTAR",372,0)
 ;
"RTN","RCDPTAR",373,0)
 ; Display the detail
"RTN","RCDPTAR",374,0)
 S DATE="" F  S DATE=$O(^TMP("RCDPTAR",$J,DATE)) Q:'DATE  D  I RCPG=0 Q
"RTN","RCDPTAR",375,0)
 . S CNT=0 F  S CNT=$O(^TMP("RCDPTAR",$J,DATE,CNT)) Q:'CNT  D  I RCPG=0 Q
"RTN","RCDPTAR",376,0)
 .. S DATA=^TMP("RCDPTAR",$J,DATE,CNT)
"RTN","RCDPTAR",377,0)
 .. S LINES=1
"RTN","RCDPTAR",378,0)
 .. I $P(DATA,U,3)]""!($P(DATA,U,4)]"") S LINES=2
"RTN","RCDPTAR",379,0)
 .. I RCSCR S LINES=LINES+1
"RTN","RCDPTAR",380,0)
 .. D CHKP(RCNOW,.RCPG,RCHR,RCDATA,RCSCR,LINES) I RCPG=0 Q
"RTN","RCDPTAR",381,0)
 .. W !,$$DATE^RCDPRU(DATE,"2DZ"),?10,$P(DATA,U,1),?51,$P(DATA,U,2)
"RTN","RCDPTAR",382,0)
 .. I $P(DATA,U,3)]""!($P(DATA,U,4)]"") W !,?10,$P(DATA,U,3),?51,$P(DATA,U,4)
"RTN","RCDPTAR",383,0)
 ;
"RTN","RCDPTAR",384,0)
 I 'RCSCR W !,@IOF
"RTN","RCDPTAR",385,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","RCDPTAR",386,0)
 D ^%ZISC
"RTN","RCDPTAR",387,0)
 ;
"RTN","RCDPTAR",388,0)
 I RCPG,RCSCR D PAUSE
"RTN","RCDPTAR",389,0)
 Q
"RTN","RCDPTAR",390,0)
 ;
"RTN","RCDPTAR",391,0)
HEADER(RCNOW,RCPG,RCHR,RCDATA) ; Print Header Section
"RTN","RCDPTAR",392,0)
 ; Input: RCNOW - DATE/TIME in external format
"RTN","RCDPTAR",393,0)
 ;        RCPG - Current page number
"RTN","RCDPTAR",394,0)
 ;        RCHR - Line of "-" to margin width
"RTN","RCDPTAR",395,0)
 ;        RCDATA - See subroutine EFTDA about for delimited list of fields
"RTN","RCDPTAR",396,0)
 ; Output: Write statements
"RTN","RCDPTAR",397,0)
 ;
"RTN","RCDPTAR",398,0)
 N EFTDATA,LINE
"RTN","RCDPTAR",399,0)
 S EFTDATA=$G(^RCY(344.31,+$P(RCDATA,U,3),0))
"RTN","RCDPTAR",400,0)
 ;
"RTN","RCDPTAR",401,0)
 W @IOF
"RTN","RCDPTAR",402,0)
 S RCPG=RCPG+1
"RTN","RCDPTAR",403,0)
 W "EFT TRANSACTION AUDIT REPORT"
"RTN","RCDPTAR",404,0)
 S LINE=RCNOW_"   PAGE: "_RCPG_" "
"RTN","RCDPTAR",405,0)
 W ?(IOM-$L(LINE)),LINE
"RTN","RCDPTAR",406,0)
 ;
"RTN","RCDPTAR",407,0)
 W !,"EFT#: ",$$AGED(+$P(RCDATA,U,3)),$P(EFTDATA,U,1),?19,"DEPOSIT#: ",$P($G(^RCY(344.3,+$P(RCDATA,U,2),0)),U,6),?42,"EFT TOTAL AMT: "_$P(EFTDATA,U,7)
"RTN","RCDPTAR",408,0)
 W !,"EFT TRACE#: ",$P(EFTDATA,U,4)
"RTN","RCDPTAR",409,0)
 W !,"DATE RECEIVED: ",$$DATE^RCDPRU($P(EFTDATA,U,12)),?26,"PAYER/ID: "_$P(EFTDATA,U,2)_"/"_$P(EFTDATA,U,3)
"RTN","RCDPTAR",410,0)
 ;
"RTN","RCDPTAR",411,0)
 W !,"DATE",?10,"ACTION/DETAILS",?51,"STATUS"
"RTN","RCDPTAR",412,0)
 W !,RCHR
"RTN","RCDPTAR",413,0)
 Q
"RTN","RCDPTAR",414,0)
 ;
"RTN","RCDPTAR",415,0)
PAUSE() ; Pause at end of each page for user input
"RTN","RCDPTAR",416,0)
 ; Input: None
"RTN","RCDPTAR",417,0)
 ; Output: User response
"RTN","RCDPTAR",418,0)
 ;
"RTN","RCDPTAR",419,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","RCDPTAR",420,0)
 S DIR(0)="E"
"RTN","RCDPTAR",421,0)
 D ^DIR
"RTN","RCDPTAR",422,0)
 Q Y
"RTN","RCDPTAR",423,0)
 ;
"RTN","RCDPTAR",424,0)
CHKP(RCNOW,RCPG,RCHR,RCDATA,RCSCR,LINES) ; Check if we need to do a page break
"RTN","RCDPTAR",425,0)
 ; Input: RCNOW - DATE/TIME in external format
"RTN","RCDPTAR",426,0)
 ;        RCPG - Current page number
"RTN","RCDPTAR",427,0)
 ;        RCHR - Line of "-" to margin width
"RTN","RCDPTAR",428,0)
 ;        RCDATA - See subroutine EFTDA about for delimited list of fields
"RTN","RCDPTAR",429,0)
 ;        RCSCR - 1 - Output is going to the users screen, 0 - to printer
"RTN","RCDPTAR",430,0)
 ;        LINES - Current line count
"RTN","RCDPTAR",431,0)
 ;
"RTN","RCDPTAR",432,0)
 I $Y'>(IOSL-LINES) Q
"RTN","RCDPTAR",433,0)
 I RCSCR,'$$PAUSE S RCPG=0 Q
"RTN","RCDPTAR",434,0)
 D HEADER(RCNOW,.RCPG,RCHR,RCDATA)
"RTN","RCDPTAR",435,0)
 Q
"RTN","RCDPTAR",436,0)
 ;
"RTN","RCDPTAR",437,0)
AGED(EFTIEN) ; Check if EFT is locked or stale
"RTN","RCDPTAR",438,0)
 ; Input
"RTN","RCDPTAR",439,0)
 ;    EFTIEN: IEN of EDI THIRD PARTY EFT DETAIL (#344.31)
"RTN","RCDPTAR",440,0)
 ; Output
"RTN","RCDPTAR",441,0)
 ;    "*" - Warning; "**" - Error; Null - Good
"RTN","RCDPTAR",442,0)
 N DAYSLIMT,RECVDT,TRARRY
"RTN","RCDPTAR",443,0)
 S RECVDT=$$GET1^DIQ(344.31,EFTIEN_",",.13,"I")
"RTN","RCDPTAR",444,0)
 I RECVDT<$$CUTOFF^RCDPEWLP Q ""  ; EFTs 2 months older than *298 installation do not lock the system
"RTN","RCDPTAR",445,0)
 S DAYSLIMT("M")=$$GET1^DIQ(344.61,1,.06),DAYSLIMT("P")=$$GET1^DIQ(344.61,1,.07)
"RTN","RCDPTAR",446,0)
 D CHKEFT^RCDPEWLP(RECVDT,EFTIEN,"B",.DAYSLIMT,.TRARRY)
"RTN","RCDPTAR",447,0)
 I $D(TRARRY("ERROR")) Q "**"
"RTN","RCDPTAR",448,0)
 I $D(TRARRY("WARNING")) Q "*"
"RTN","RCDPTAR",449,0)
 Q ""
"RTN","RCDPURE1")
0^33^B73133259
"RTN","RCDPURE1",1,0)
RCDPURE1 ;WISC/RFJ - Process a Receipt ;Jun 06, 2014@19:11:19
"RTN","RCDPURE1",2,0)
 ;;4.5;Accounts Receivable;**114,148,153,169,204,173,214,217,296,298,304,321**;Mar 20, 1995;Build 48
"RTN","RCDPURE1",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPURE1",4,0)
 Q
"RTN","RCDPURE1",5,0)
 ;
"RTN","RCDPURE1",6,0)
 ;
"RTN","RCDPURE1",7,0)
PROCESS(RCRECTDA,RCSCREEN) ;  process a receipt, update ar, generate cr/tr documents to fms
"RTN","RCDPURE1",8,0)
 ;  the receipt and deposit must be locked before calling this label
"RTN","RCDPURE1",9,0)
 ;  if $g(rcscreen) = 1 show messages during processing
"RTN","RCDPURE1",10,0)
 ;  if $g(rcscreen) = 2 store messages during processing
"RTN","RCDPURE1",11,0)
 ; 
"RTN","RCDPURE1",12,0)
 N RCPAYDA,RCDPFPAY,RCERROR,RCMSG,RCEFT,RCERA,RCPAYDT0,RCPAYDT1,RCSUSPAR,RCI,RCJ,RCCMTFLG
"RTN","RCDPURE1",13,0)
 K ^TMP($J,"RCDPEMSG"),^TMP("RCDPE-RECEIPT-ERROR",$J)
"RTN","RCDPURE1",14,0)
 S RCCMTFLG=""
"RTN","RCDPURE1",15,0)
 ;
"RTN","RCDPURE1",16,0)
 ; === No comments ===  PRCA*4.5*304
"RTN","RCDPURE1",17,0)
 ; If there are entries in suspense with no comments, AND, posting manually, not through auto-posting, display the list of entries
"RTN","RCDPURE1",18,0)
 I RCSCREEN=1 D  Q:RCCMTFLG
"RTN","RCDPURE1",19,0)
 . S RCSUSPAR="",RCPAYDA=0
"RTN","RCDPURE1",20,0)
 . F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  D
"RTN","RCDPURE1",21,0)
 . . S RCPAYDT0=$G(^RCY(344,RCRECTDA,1,RCPAYDA,0))
"RTN","RCDPURE1",22,0)
 . . S RCPAYDT1=$G(^RCY(344,RCRECTDA,1,RCPAYDA,1))
"RTN","RCDPURE1",23,0)
 . . ; If there is no Bill linked, and the pay amount is not 0 and there is no comment, add to the list
"RTN","RCDPURE1",24,0)
 . . I $P(RCPAYDT0,U,9)="",($P(RCPAYDT0,U,4)'=0),($P(RCPAYDT1,U,2)="") S RCSUSPAR(RCPAYDA)=""
"RTN","RCDPURE1",25,0)
 . ;
"RTN","RCDPURE1",26,0)
 . S RCI="" I $O(RCSUSPAR(RCI)) D  Q
"RTN","RCDPURE1",27,0)
 . . I '$G(RCSCREEN) Q
"RTN","RCDPURE1",28,0)
 . . S RCMSG="The following line items are in suspense: "
"RTN","RCDPURE1",29,0)
 . . S RCJ="" F  S RCJ=$O(RCSUSPAR(RCJ)) Q:'RCJ  D
"RTN","RCDPURE1",30,0)
 . . . S RCMSG=RCMSG_RCJ_","
"RTN","RCDPURE1",31,0)
 . . S RCMSG=$E(RCMSG,1,$L(RCMSG)-1)
"RTN","RCDPURE1",32,0)
 . . D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",33,0)
 . . S RCMSG="Please add the appropriate comment(s) to these line items before re-processing this receipt."
"RTN","RCDPURE1",34,0)
 . . D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",35,0)
 . . S RCCMTFLG=1
"RTN","RCDPURE1",36,0)
 ;
"RTN","RCDPURE1",37,0)
 ;  first mark the receipt as processed/closed to prevent changing the
"RTN","RCDPURE1",38,0)
 ;  data if the receipt does not fully process.  this will lock the
"RTN","RCDPURE1",39,0)
 ;  cancel payment, edit payment, etc. options.  once a receipt is
"RTN","RCDPURE1",40,0)
 ;  processed, even partially, it should not be changed.
"RTN","RCDPURE1",41,0)
 D MARKPROC^RCDPUREC(RCRECTDA,"")
"RTN","RCDPURE1",42,0)
 ;
"RTN","RCDPURE1",43,0)
 ; Special processing needed for EFT-related receipts
"RTN","RCDPURE1",44,0)
 ; RCEFT = 1 if EFT deposit, = 2 if receipt detail transfer, 0 if no EFT
"RTN","RCDPURE1",45,0)
 S RCEFT=+$$EDILB^RCDPEU(RCRECTDA)
"RTN","RCDPURE1",46,0)
 S RCERA=$P($G(^RCY(344,RCRECTDA,0)),U,18)
"RTN","RCDPURE1",47,0)
 ;
"RTN","RCDPURE1",48,0)
 ;  === no payments ===
"RTN","RCDPURE1",49,0)
 ;  if there are no payments for the receipt, quit
"RTN","RCDPURE1",50,0)
 I '$O(^RCY(344,RCRECTDA,1,0)) D  Q
"RTN","RCDPURE1",51,0)
 . I $G(RCSCREEN) S RCMSG="Receipt does not have any payments and has been marked as processed/closed." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",52,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCMSG  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",53,0)
 . I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",54,0)
 ;
"RTN","RCDPURE1",55,0)
 ;  check to see if the payments have dollar amounts
"RTN","RCDPURE1",56,0)
 S RCPAYDA=0 F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  I $P($G(^(RCPAYDA,0)),"^",4) S RCDPFPAY=1 Q
"RTN","RCDPURE1",57,0)
 I '$G(RCDPFPAY) D  Q
"RTN","RCDPURE1",58,0)
 . I $G(RCSCREEN)  S RCMSG="Receipt does not have any payments and has been marked as processed/closed." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",59,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCMSG  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",60,0)
 . I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",61,0)
 ;
"RTN","RCDPURE1",62,0)
 ;  === update AR accounts ===
"RTN","RCDPURE1",63,0)
 I $G(RCSCREEN) S RCMSG="Updating AR accounts..." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",64,0)
 ;
"RTN","RCDPURE1",65,0)
 ;  loop payments and apply to account in AR
"RTN","RCDPURE1",66,0)
 S RCPAYDA=0 F  S RCPAYDA=$O(^RCY(344,RCRECTDA,1,RCPAYDA)) Q:'RCPAYDA  D  I RCERROR Q
"RTN","RCDPURE1",67,0)
 . S RCERROR=$$PROCESS^RCBEPAY(RCRECTDA,RCPAYDA)
"RTN","RCDPURE1",68,0)
 . S:RCERROR ^TMP("RCDPE-RECEIPT-ERROR",$J)=RCERROR  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",69,0)
 ;
"RTN","RCDPURE1",70,0)
 ;  an error occurred during processing a payment
"RTN","RCDPURE1",71,0)
 I $G(RCERROR) D  Q
"RTN","RCDPURE1",72,0)
 .   I '$G(RCSCREEN) Q
"RTN","RCDPURE1",73,0)
 .   S RCMSG="+-----------------------------------------------------------------------------+" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",74,0)
 .   S RCMSG="|  An ERROR has occurred when processing payment "_RCPAYDA_" on receipt "_$P(^RCY(344,RCRECTDA,0),"^")_".",RCMSG=$E(RCMSG_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",75,0)
 .   S RCMSG="|  The error message returned during processing is:",RCMSG=$E(RCMSG_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",76,0)
 .   S RCMSG="|"_$J("",77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",77,0)
 .   S RCMSG=$E("|  "_$P(RCERROR,"^",2)_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",78,0)
 .   S RCMSG="|"_$J("",77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",79,0)
 .   S RCMSG=$E("|  You will need to correct the error before you can completely process the"_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",80,0)
 .   S RCMSG=$E("|  receipt.  Once the receipt is completely processed, the FMS "_$S(RCEFT'=2:"Cash Receipt",1:"'TR'")_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",81,0)
 .   S RCMSG=$E("|  document will be generated."_$J("",77),1,77)_"|" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",82,0)
 .   S RCMSG="+-----------------------------------------------------------------------------+" D MSG(RCMSG,RCSCREEN,"!")
"RTN","RCDPURE1",83,0)
 ;
"RTN","RCDPURE1",84,0)
 ;  all payments processed correctly
"RTN","RCDPURE1",85,0)
 I RCERA D UPDERA(RCERA)
"RTN","RCDPURE1",86,0)
 I $G(RCSCREEN) D MSG(" Done.",RCSCREEN)
"RTN","RCDPURE1",87,0)
 ;
"RTN","RCDPURE1",88,0)
 ;  *296 - no cr document for event type 'a' or 'p' or 't'
"RTN","RCDPURE1",89,0)
 N RCDPETY S RCDPETY=$P($G(^RCY(344,RCRECTDA,0)),"^",4)
"RTN","RCDPURE1",90,0)
 I (RCDPETY=15)!(RCDPETY=16)!(RCDPETY=13) D 215 Q
"RTN","RCDPURE1",91,0)
 ;
"RTN","RCDPURE1",92,0)
 ;  if no deposit ticket and not related to EFT or is a HAC payment, do not send to fms
"RTN","RCDPURE1",93,0)
 I '$P(^RCY(344,RCRECTDA,0),"^",6),$S('RCEFT:1,1:$$HACEFT^RCDPEU(+$P(^RCY(344,RCRECTDA,0),U,17))) D  Q
"RTN","RCDPURE1",94,0)
 . D 215
"RTN","RCDPURE1",95,0)
 . I $G(RCSCREEN) S RCMSG="Receipt does not have a deposit ticket and will NOT be sent to FMS." D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",96,0)
 . S ^TMP("RCDPE-RECEIPT-ERROR",$J)=""  ;prca*4.5*298  used by auto-post process
"RTN","RCDPURE1",97,0)
 ;
"RTN","RCDPURE1",98,0)
 ;  === send fms cash receipt document ===
"RTN","RCDPURE1",99,0)
 N GECSDATA,FMSDOCNO,RESULT,REFMS
"RTN","RCDPURE1",100,0)
 ;  lookup fms document number to see if the receipt has been
"RTN","RCDPURE1",101,0)
 ;  sent to fms (field 200 in file 344)
"RTN","RCDPURE1",102,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPURE1",103,0)
 ;  if there is an entry, find the code sheet in gcs to rebuild
"RTN","RCDPURE1",104,0)
 ;  gecsdata will be the ien for file 2100.1
"RTN","RCDPURE1",105,0)
 I FMSDOCNO'="" S REFMS=1 N DIQ2 D DATA^GECSSGET(FMSDOCNO,0)
"RTN","RCDPURE1",106,0)
 ;
"RTN","RCDPURE1",107,0)
 I $G(RCSCREEN)&$G(GECSDATA) S RCMSG="Re-Transmitting CR document to FMS... " D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",108,0)
 I $G(RCSCREEN)&'$G(GECSDATA) S RCMSG="Transmitting CR document to FMS... " D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",109,0)
 ;
"RTN","RCDPURE1",110,0)
 ;  build and send the tr/cr document to fms
"RTN","RCDPURE1",111,0)
 I RCEFT'=2 D  ; Send CR doc
"RTN","RCDPURE1",112,0)
 . S RESULT=$$BUILDCR^RCXFMSCR(RCRECTDA,+$G(GECSDATA),RCEFT)
"RTN","RCDPURE1",113,0)
 E  D  ; Send TR doc
"RTN","RCDPURE1",114,0)
 . S RESULT=$$GETTR^RCXFMST1(RCRECTDA,+$G(GECSDATA))
"RTN","RCDPURE1",115,0)
 ;  error in building code sheet
"RTN","RCDPURE1",116,0)
 I 'RESULT D:$G(RCSCREEN) MSG("ERROR - "_$P(RESULT,"^",2),RCSCREEN,"!!") Q
"RTN","RCDPURE1",117,0)
 ;
"RTN","RCDPURE1",118,0)
 ;  no document to send
"RTN","RCDPURE1",119,0)
 I $P(RESULT,"^")=-1,$G(RCSCREEN) S RCMSG="NOTE - "_$P(RESULT,"^",2) S $P(RESULT,"^",2)="" D MSG(RCMSG,RCSCREEN,"!!") S ^TMP("RCDPE-RECEIPT-ERROR",$J)=""
"RTN","RCDPURE1",120,0)
 ;  document built and sent
"RTN","RCDPURE1",121,0)
 I $P(RESULT,"^")=1,$G(RCSCREEN) D
"RTN","RCDPURE1",122,0)
 . N Z,DIE,DR,DA
"RTN","RCDPURE1",123,0)
 . D MSG("Done. FMS document number "_$P(RESULT,"^",2),RCSCREEN,"!!")
"RTN","RCDPURE1",124,0)
 . I +$O(^RCY(344.4,"ARCT",RCRECTDA,0)) S DIE="^RCY(344.4,",DR=".14////1",DA=+$O(^RCY(344.4,"ARCT",RCRECTDA,0)) D ^DIE
"RTN","RCDPURE1",125,0)
 . I $P($G(^RCY(344,RCRECTDA,0)),U,17) S Z=$P($G(^RCY(344.31,+$P(^RCY(344,RCRECTDA,0),U,17),0)),U,15) I Z'="" S DA=RCRECTDA,DIE="^RCY(344,",DR=".16////"_Z D ^DIE
"RTN","RCDPURE1",126,0)
 I $G(RCSCREEN) D
"RTN","RCDPURE1",127,0)
 . N Y
"RTN","RCDPURE1",128,0)
 . I '$G(REFMS)&(DT>$$LDATE^RCRJR(DT)) S Y=$E($$FPS^RCAMFN01(DT,1),1,5)_"01" D DD^%DT W !! S RCMSG="   * * * * Transmission will be held until "_Y_" * * * *" D MSG(RCMSG,RCSCREEN,"!!")
"RTN","RCDPURE1",129,0)
 ;
"RTN","RCDPURE1",130,0)
 ;
"RTN","RCDPURE1",131,0)
 ;  store the fms document number (receipt already marked processed/
"RTN","RCDPURE1",132,0)
 ;  closed at the top of the routine just before posting the dollars.
"RTN","RCDPURE1",133,0)
 D MARKPROC^RCDPUREC(RCRECTDA,$P(RESULT,"^",2))
"RTN","RCDPURE1",134,0)
 I RCEFT=2 D MSG("No 215 report generated for this receipt",RCSCREEN,"!!") G Q215
"RTN","RCDPURE1",135,0)
 ;
"RTN","RCDPURE1",136,0)
 ;
"RTN","RCDPURE1",137,0)
215 ;  === print 215 report ===
"RTN","RCDPURE1",138,0)
 I $G(RCSCREEN) D MSG("Queuing 215 report...",RCSCREEN,"!!")
"RTN","RCDPURE1",139,0)
 N DEVICE
"RTN","RCDPURE1",140,0)
 S DEVICE=$$OPTCK^RCDPRPL2("215REPORT",3)
"RTN","RCDPURE1",141,0)
 I DEVICE="" D:$G(RCSCREEN) MSG(" Use Customize Option to set up the default printer.",RCSCREEN) Q
"RTN","RCDPURE1",142,0)
 ;
"RTN","RCDPURE1",143,0)
 S ZTIO=DEVICE,ZTDTH=$H,ZTRTN="DQ^RCDPR215",ZTSAVE("RECEIPDA")=RCRECTDA,ZTSAVE("RCTYPE")="A"
"RTN","RCDPURE1",144,0)
 D ^%ZTLOAD,^%ZISC
"RTN","RCDPURE1",145,0)
Q215 I $G(RCSCREEN) D MSG(" Done.",RCSCREEN)
"RTN","RCDPURE1",146,0)
 Q
"RTN","RCDPURE1",147,0)
 ;
"RTN","RCDPURE1",148,0)
UPDERA(RCERA) ; Update detail posted status for ERA entry RCERA
"RTN","RCDPURE1",149,0)
 ;
"RTN","RCDPURE1",150,0)
 N DA,DIE,DR
"RTN","RCDPURE1",151,0)
 S DA=+$G(RCERA),DR=".14////1",DIE="^RCY(344.4," D:DA ^DIE
"RTN","RCDPURE1",152,0)
 Q
"RTN","RCDPURE1",153,0)
 ;
"RTN","RCDPURE1",154,0)
MSG(RCMSG,RCSCREEN,PRELINE,POSTLINE) ; Write message or set into msg array
"RTN","RCDPURE1",155,0)
 ; RCMSG = text to write  RCSCREEN = screen flag
"RTN","RCDPURE1",156,0)
 ; PRELINE = the line feeds to print before the text
"RTN","RCDPURE1",157,0)
 ; POSTLINE = the line feeds to print after the text
"RTN","RCDPURE1",158,0)
 Q:'RCSCREEN
"RTN","RCDPURE1",159,0)
 N RCPRE,RCPOST,Z
"RTN","RCDPURE1",160,0)
 S RCPRE=$L($G(PRELINE),"!")-1,RCPOST=$L($G(POSTLINE),"!")-1
"RTN","RCDPURE1",161,0)
 I RCSCREEN=1 D  G MSGQ
"RTN","RCDPURE1",162,0)
 . F Z=1:1:RCPRE W !
"RTN","RCDPURE1",163,0)
 . W RCMSG
"RTN","RCDPURE1",164,0)
 . F Z=1:1:RCPOST W !
"RTN","RCDPURE1",165,0)
 F Z=1:1:RCPRE S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=""
"RTN","RCDPURE1",166,0)
 S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=RCMSG
"RTN","RCDPURE1",167,0)
 F Z=1:1:RCPOST S ^TMP($J,"RCDPEMSG",+$O(^TMP("RCDPEMSG",""),-1)+1)=""
"RTN","RCDPURE1",168,0)
MSGQ Q
"RTN","RCDPURE1",169,0)
 ;
"RTN","RCDPURE1",170,0)
 ; PRCA*4.5*298 updated EDIT4 removing DIPA
"RTN","RCDPURE1",171,0)
EDIT4(DA,DR,RCDR1,RCDR2,RCDR3) ; Modify DR string for type of payment edit
"RTN","RCDPURE1",172,0)
 ;   for EDI Lockbox
"RTN","RCDPURE1",173,0)
 ; Input: DA,DR   Output: RCDR1,RCDR2,RCDR3
"RTN","RCDPURE1",174,0)
 ; If type unchanged, or neither old/new are EDI Lockbox, no chk needed
"RTN","RCDPURE1",175,0)
 ; If old type is EDI Lockbox and scratch pad exists, no change allowed
"RTN","RCDPURE1",176,0)
 ; If changed to EDI Lockbox and detail already exists, no chg allowed without UNMATCH EFT key
"RTN","RCDPURE1",177,0)
 ; If changed to EDI Lockbox, ask for related EFT
"RTN","RCDPURE1",178,0)
 N RCDR,RCLST,RCM,RCM1,RCM2,RCM3,RCN4,RCNE,RCNO,RCO4,RCOE,RCP,RCSTRT,Z,Z0
"RTN","RCDPURE1",179,0)
 S (RCDR1,RCDR2,RCDR3)=""
"RTN","RCDPURE1",180,0)
 ;
"RTN","RCDPURE1",181,0)
 S RCP=10 F Z=2:1 Q:DR'[("@"_RCP)&(DR'[("@"_(RCP+1)))&(DR'[("@"_(RCP+2)))&(DR'[("@"_(RCP+3)))&(DR'[("@"_(RCP+4)))  S RCP=RCP*Z
"RTN","RCDPURE1",182,0)
 ;
"RTN","RCDPURE1",183,0)
 S Z=$L(DR,".04;"),RCSTRT=1,RCLST=Z
"RTN","RCDPURE1",184,0)
 I Z>2 D  ; Find .04, not n.04
"RTN","RCDPURE1",185,0)
 . F  S Z0=$P(DR,".04;",RCSTRT) Q:Z0=""!'$E(Z0,$L(Z0))  S RCSTRT=RCSTRT+1
"RTN","RCDPURE1",186,0)
 ;
"RTN","RCDPURE1",187,0)
 ; If unchanged/changed from/to other than EDI Lockbox, jump over edits
"RTN","RCDPURE1",188,0)
 S RCDR1="S RCP="_RCP_" D SETV^RCDPURE1;"_$P(DR,".04;",1,RCSTRT)
"RTN","RCDPURE1",189,0)
 S RCDR2="@"_RCP_";.04;S RCNO=0,RCN4=X D TYP^RCDPUREC(.Y);.17////^S X=RCNE;S Y=""@"_(RCP+2)_""""
"RTN","RCDPURE1",190,0)
 ; Reset field .04 and .17 if not a valid type change
"RTN","RCDPURE1",191,0)
 S RCDR2=RCDR2_";@"_(RCP+1)_";.04////^S X=RCO4;I RCOE="""" S Y=""@"_(RCP+3)_""";"
"RTN","RCDPURE1",192,0)
 S RCDR2=RCDR2_".17////^S X=RCOE;@"_(RCP+3)_";"
"RTN","RCDPURE1",193,0)
 ; PRCA*4.5*321 Modified error message logic in $S
"RTN","RCDPURE1",194,0)
 S RCDR2=RCDR2_"W !,*7,$S(RCN4=14&RCNO:RCM2,RCO4=14:RCM1,1:RCM),! S Y=""@"_RCP_""";@"_(RCP+2)
"RTN","RCDPURE1",195,0)
 S RCDR3=$P(DR,".04;",RCSTRT+1,RCLST)
"RTN","RCDPURE1",196,0)
 Q
"RTN","RCDPURE1",197,0)
 ;
"RTN","RCDPURE1",198,0)
 ; PRCA*4.5*298 updated SETV removing DIPA, added comments
"RTN","RCDPURE1",199,0)
SETV ; Set up variables needed to edit change of receipt type, used in DR strings to edit AR BATCH PAYMENT (#344)
"RTN","RCDPURE1",200,0)
 ; RCO4 = existing (#.04) TYPE OF PAYMENT value, RCOE = existing (#.17) EFT RECORD value
"RTN","RCDPURE1",201,0)
 N X S X=$G(^RCY(344,DA,0)),RCO4=$P(X,U,4),RCOE=$P(X,U,17)
"RTN","RCDPURE1",202,0)
 S RCM="RCDPEPP key required for this action"                           ; PCRA*4.5*321
"RTN","RCDPURE1",203,0)
 S RCM1="RCDPEPP key required once detail has been loaded from the ERA" ; PCRA*4.5*321
"RTN","RCDPURE1",204,0)
 S RCM2="Must have an EFT for an EDI Lockbox payment type"
"RTN","RCDPURE1",205,0)
 S RCM3=">>If receipt is for an ERA and a paper check, select the ERA now"
"RTN","RCDPURE1",206,0)
 Q
"RTN","RCDPURE1",207,0)
 ;
"RTN","RCDPURE1",208,0)
WL(DA) ; Function returns 0 if the worklist did not create the receipt
"RTN","RCDPURE1",209,0)
 ;  or the ien of the worklist entry if it did (344.4 and 344.49 are DINUMED)
"RTN","RCDPURE1",210,0)
 N Z
"RTN","RCDPURE1",211,0)
 S Z=+$O(^RCY(344.4,"AREC",DA,0))
"RTN","RCDPURE1",212,0)
 Q Z
"RTN","RCDPURE1",213,0)
 ;
"RTN","RCDPURE1",214,0)
HAC(RC) ; Returns 1 if the receipt in RC is related to a HAC EFT
"RTN","RCDPURE1",215,0)
 N Z,HAC
"RTN","RCDPURE1",216,0)
 S HAC=0
"RTN","RCDPURE1",217,0)
 ; ERA related to an EFT detail record
"RTN","RCDPURE1",218,0)
 S Z=+$G(^RCY(344.31,+$P($G(^RCY(344,RC,0)),U,17),0))
"RTN","RCDPURE1",219,0)
 ; Deposit # in EFT transmission starts with HAC
"RTN","RCDPURE1",220,0)
 I Z S Z=$P($G(^RCY(344.3,+Z,0)),U,6) I $E(Z,1,3)="HAC" S HAC=1
"RTN","RCDPURE1",221,0)
 Q HAC
"RTN","RCDPURE1",222,0)
 ;
"RTN","RCDPUREC")
0^22^B146354431
"RTN","RCDPUREC",1,0)
RCDPUREC ;WISC/RFJ - receipt utilities ;Jun 06, 2014@19:11:19
"RTN","RCDPUREC",2,0)
 ;;4.5;Accounts Receivable;**114,148,169,173,208,222,293,298,321**;Mar 20, 1995;Build 48
"RTN","RCDPUREC",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPUREC",4,0)
 Q
"RTN","RCDPUREC",5,0)
 ;
"RTN","RCDPUREC",6,0)
ADDRECT(TRANDATE,RCDEPTDA,PAYTYPDA) ;  add a receipt
"RTN","RCDPUREC",7,0)
 ;
"RTN","RCDPUREC",8,0)
 ;  if deposit or payment type is missing, do not add the receipt
"RTN","RCDPUREC",9,0)
 I 'RCDEPTDA!('PAYTYPDA) Q 0
"RTN","RCDPUREC",10,0)
 ;
"RTN","RCDPUREC",11,0)
 N DA,DATA,RCDPFLAG,RECEIPT,TYPE
"RTN","RCDPUREC",12,0)
 ;  if a receipt has already been added for this transmission date
"RTN","RCDPUREC",13,0)
 ;  and deposit number, do not add a new one
"RTN","RCDPUREC",14,0)
 S DA=0 F  S DA=$O(^RCY(344,"AD",+RCDEPTDA,DA)) Q:'DA  S DATA=$G(^RCY(344,DA,0)) I $P($P(DATA,"^",3),".")=TRANDATE,$P(DATA,"^",4)=PAYTYPDA S RCDPFLAG=1 Q
"RTN","RCDPUREC",15,0)
 I $G(RCDPFLAG) Q DA
"RTN","RCDPUREC",16,0)
 ;
"RTN","RCDPUREC",17,0)
 Q $$BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA)
"RTN","RCDPUREC",18,0)
 ;
"RTN","RCDPUREC",19,0)
BLDRCPT(TRANDATE,RCDEPTDA,PAYTYPDA) ; function, Build a receipt with/without deposit
"RTN","RCDPUREC",20,0)
 ; LAYGO new entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",21,0)
 ; returns new IEN on success, else zero
"RTN","RCDPUREC",22,0)
 ;
"RTN","RCDPUREC",23,0)
 N GOTONE,RECEIPT,TYPE
"RTN","RCDPUREC",24,0)
 ; ATTMPT - count of attempts
"RTN","RCDPUREC",25,0)
 ; GOTONE - new receipt # flag
"RTN","RCDPUREC",26,0)
 S GOTONE=0
"RTN","RCDPUREC",27,0)
 ;  build unique receipt number for date
"RTN","RCDPUREC",28,0)
 S TYPE=$E($G(^RC(341.1,PAYTYPDA,0))) I TYPE="" S TYPE="Z"  ; ^RC(341.1,0) = AR EVENT TYPE
"RTN","RCDPUREC",29,0)
 I TYPE="C",$G(RCDEPTDA)["ERACHK" S RCDEPTDA=+RCDEPTDA,TYPE="E" ; ERA plus paper check EDI Lockbox receipt
"RTN","RCDPUREC",30,0)
 ;
"RTN","RCDPUREC",31,0)
 ; -----
"RTN","RCDPUREC",32,0)
 ; PRCA*4.5*298 - removed testing code that allowed for duplicate receipt numbers in testing environments
"RTN","RCDPUREC",33,0)
 ;   code for checking environment: S PROD=$S($$PROD^XUPROD(1):"PROD",1:"TEST")
"RTN","RCDPUREC",34,0)
 ;   The user would be prompted for a duplicate receipt number of from 1 to 12 chars:
"RTN","RCDPUREC",35,0)
 ;            S DIR(0)="FAO^1:12",DIR("A")="ENTER A DUPLICATE RECEIPT #: "
"RTN","RCDPUREC",36,0)
 ;   if user didn't enter duplicate receipt #, they would be asked if they wanted a
"RTN","RCDPUREC",37,0)
 ;   duplicate receipt # for testing. If yes, the code would iterate:
"RTN","RCDPUREC",38,0)
 ;        ;.. F  S RECEIPT=$O(^PRCA(433,"AF",RECEIPT)) D  Q:DONE
"RTN","RCDPUREC",39,0)
 ;        ;... I RECEIPT="" W !!,"NO MORE DUPLICATE RECEIPT NUMBER SCENARIOS FOUND!",! S DONE=1 H 2 Q
"RTN","RCDPUREC",40,0)
 ;        ;... I '$D(^RCY(344,"B",RECEIPT)) D
"RTN","RCDPUREC",41,0)
 ;        ;.... W !!,"RECEIPT #: "_RECEIPT_" WAS FOUND & WE WILL ATTEMPT TO USE IT.",! S DONE=1 H 2
"RTN","RCDPUREC",42,0)
 ; the code was creating problems during the queued nightly job in development environments
"RTN","RCDPUREC",43,0)
 ;      Accounts Receivable Nightly Process Background Job [PRCA NIGHTLY PROCESS]
"RTN","RCDPUREC",44,0)
 ; -----
"RTN","RCDPUREC",45,0)
 ;
"RTN","RCDPUREC",46,0)
 ;lockbox receipt in the form of L980901A0, do not include century
"RTN","RCDPUREC",47,0)
 F  D  Q:+GOTONE&$L(RECEIPT)  ; must be new and non-null
"RTN","RCDPUREC",48,0)
 .;find a unique receipt #
"RTN","RCDPUREC",49,0)
 .S RECEIPT=$$NEXT(TYPE_$E(TRANDATE,2,7))  ;get last two digits from 00 to ZZ 
"RTN","RCDPUREC",50,0)
 .I RECEIPT="" Q
"RTN","RCDPUREC",51,0)
 .I $D(^RCY(344,"B",RECEIPT)) Q  ; AR BATCH PAYMENT file (#344), RECEIPT # field (#.01)
"RTN","RCDPUREC",52,0)
 .I $D(^PRCA(433,"AF",RECEIPT)) Q  ; AR TRANSACTION file (#433), RECEIPT # field (#13)
"RTN","RCDPUREC",53,0)
 .S GOTONE=1
"RTN","RCDPUREC",54,0)
 ;
"RTN","RCDPUREC",55,0)
 ;
"RTN","RCDPUREC",56,0)
 L +^RCY(344,"B",RECEIPT):DILOCKTM E  Q 0 ; PRCA*4.5*298, if LOCK timeout return zero
"RTN","RCDPUREC",57,0)
 ;
"RTN","RCDPUREC",58,0)
 ; add entry to AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",59,0)
 N %,%DT,D0,DA,DD,DI,DIC,DIE,DLAYGO,DO,DQ,DR,X,Y
"RTN","RCDPUREC",60,0)
 S DIC="^RCY(344,",DIC(0)="L",DLAYGO=344
"RTN","RCDPUREC",61,0)
 ;  .02 = opened by                  .03 = date opened = transmission dt
"RTN","RCDPUREC",62,0)
 ;  .04 = type of payment            .06 = deposit ticket
"RTN","RCDPUREC",63,0)
 ;  .14 = status (set to 1:open)
"RTN","RCDPUREC",64,0)
 S DIC("DR")=".02////"_DUZ_";.03///"_TRANDATE_";.04////"_PAYTYPDA_$S(RCDEPTDA:";.06////"_RCDEPTDA,1:"")_";.14////1;"
"RTN","RCDPUREC",65,0)
 S X=RECEIPT
"RTN","RCDPUREC",66,0)
 D FILE^DICN
"RTN","RCDPUREC",67,0)
 L -^RCY(344,"B",RECEIPT)
"RTN","RCDPUREC",68,0)
 I Y>0 Q +Y  ; Y set by DICN, return new IEN
"RTN","RCDPUREC",69,0)
 Q 0  ; entry not created
"RTN","RCDPUREC",70,0)
 ;
"RTN","RCDPUREC",71,0)
 ;
"RTN","RCDPUREC",72,0)
NEXT(RECEIPT) ; function, get next 2 chars. in sequence 00 to ZZ for receipt
"RTN","RCDPUREC",73,0)
 ;
"RTN","RCDPUREC",74,0)
 ;  start with 00
"RTN","RCDPUREC",75,0)
 I '$D(^RCY(344,"B",RECEIPT_"00")),'$D(^RCY(344,"B",RECEIPT_"00A")) Q RECEIPT_"00"
"RTN","RCDPUREC",76,0)
 ;
"RTN","RCDPUREC",77,0)
 N DIGIT1,DIGIT2,LAST
"RTN","RCDPUREC",78,0)
 ;  get the last one used and increment by 1
"RTN","RCDPUREC",79,0)
 S LAST=$O(^RCY(344,"B",RECEIPT_"ZZ"),-1)  ;example L2980901ZZ
"RTN","RCDPUREC",80,0)
 S DIGIT1=$A($E(LAST,8)),DIGIT2=$A($E(LAST,9))
"RTN","RCDPUREC",81,0)
 ;  increment the ascii value of last digit
"RTN","RCDPUREC",82,0)
 S DIGIT2=DIGIT2+1
"RTN","RCDPUREC",83,0)
 ;  ascii 48=0, 57=9, 65=A, 90=Z
"RTN","RCDPUREC",84,0)
 I DIGIT2>57,DIGIT2<65 S DIGIT2=65 ;an A
"RTN","RCDPUREC",85,0)
 ;  digit2 above a Z, set digit2 to a 0 and increment digit 1
"RTN","RCDPUREC",86,0)
 I DIGIT2>90 S DIGIT2=48,DIGIT1=DIGIT1+1
"RTN","RCDPUREC",87,0)
 I DIGIT1>57,DIGIT1<65 S DIGIT1=65 ;an A
"RTN","RCDPUREC",88,0)
 ;  digit 1 is above a Z, reset and reuse the Z
"RTN","RCDPUREC",89,0)
 I DIGIT1>90 S DIGIT1=90,DIGIT2=90
"RTN","RCDPUREC",90,0)
 ;
"RTN","RCDPUREC",91,0)
 ; If Receipt # already on file get another one
"RTN","RCDPUREC",92,0)
 F  Q:'$D(^RCY(344,"B",RECEIPT_$C(DIGIT1)_$C(DIGIT2)))  D
"RTN","RCDPUREC",93,0)
 . S RECEIPT=$E(RECEIPT,1)_$E(1000001+$E(RECEIPT,2,7),2,7)
"RTN","RCDPUREC",94,0)
 ;
"RTN","RCDPUREC",95,0)
 Q RECEIPT_$C(DIGIT1)_$C(DIGIT2)
"RTN","RCDPUREC",96,0)
 ;
"RTN","RCDPUREC",97,0)
 ;
"RTN","RCDPUREC",98,0)
SELRECT(ADDNEW,RCDEPTDA) ;  select a receipt
"RTN","RCDPUREC",99,0)
 ;  if $g(addnew) allow adding a new receipt
"RTN","RCDPUREC",100,0)
 ;  if $g(rcdeptda) allow selection of receipts for the deposit only
"RTN","RCDPUREC",101,0)
 ;  if $g(addnew) and $g(rcdeptda) deposit number auto set for new receipt
"RTN","RCDPUREC",102,0)
 ;  returns -1 for timeout or ^, 0 for no selection, or ien of receipt
"RTN","RCDPUREC",103,0)
 N %,%Y,C,D0,DA,DI,DIC,DIE,DIK,DG,DLAYGO,DQ,DR,DTOUT,DUOUT,RCREFLUP,X,Y,RCDE,RCLB,RC1,RC2,RCREQ,RCY
"RTN","RCDPUREC",104,0)
 S DIC="^RCY(344,",DIC(0)="QEAM",DIC("A")="Select RECEIPT: "
"RTN","RCDPUREC",105,0)
 S DIC("W")="D DICW^RCDPUREC"
"RTN","RCDPUREC",106,0)
 ;  set screen to select receipts linked to deposit and to screen out
"RTN","RCDPUREC",107,0)
 ;  selection of EDI Lockbox-type receipts unless an EFT is associated
"RTN","RCDPUREC",108,0)
 ;  with the deposit and the receipt is not associated with an ERA
"RTN","RCDPUREC",109,0)
 S RCDE=+$O(^RCY(344.3,"ARDEP",+$G(RCDEPTDA),0))
"RTN","RCDPUREC",110,0)
 I $G(RCDEPTDA) D
"RTN","RCDPUREC",111,0)
 .   S DIC("S")="N Z S Z=$G(^(0)) I $S('$$EDILBEV^RCDPEU($P(Z,U,4)):'RCDE,1:RCDE&'$P(Z,U,18)),($P(Z,U,6)=""""!($P(Z,U,6)=RCDEPTDA))"
"RTN","RCDPUREC",112,0)
 .   S DIC("A")="Select RECEIPT (for deposit "_$P(^RCY(344.1,RCDEPTDA,0),"^")_"): "
"RTN","RCDPUREC",113,0)
 ;  use special lookup on input
"RTN","RCDPUREC",114,0)
 I '$G(RCDEPTDA) S RCREFLUP=1
"RTN","RCDPUREC",115,0)
 ;  add new entries
"RTN","RCDPUREC",116,0)
 S RC1="TYPE NOT VALID FOR THIS RECEIPT",RC2=">>AN EFT REFERENCE IS REQUIRED"
"RTN","RCDPUREC",117,0)
 I $G(ADDNEW) D
"RTN","RCDPUREC",118,0)
 .   S DIC("A")="Select RECEIPT (or add a new one): "
"RTN","RCDPUREC",119,0)
 .   S DIC(0)="QEALM",DLAYGO=344
"RTN","RCDPUREC",120,0)
 .   S DIC("DR")="S RCREQ=0;.02////"_DUZ_";.03///NOW;.14////1;@4;.04"_$S(RCDE:"////"_$$LBEVENT^RCDPEU(),1:"")
"RTN","RCDPUREC",121,0)
 .   S DIC("DR")=DIC("DR")_";S RCLB=$$EDILBEV^RCDPEU(+X) S:'RCLB Y=""@6"";I $G(RCDEPTDA) S Y=$S('RCDE:""@8"",1:""@6"");W !,RC2 S RCREQ=1;.17;S Y=""@99"""
"RTN","RCDPUREC",122,0)
 .   S DIC("DR")=DIC("DR")_";@6;.06"_$S($G(RCDEPTDA):"////"_RCDEPTDA,1:"")_";S:'RCDE Y=""@99"";.17////"_+RCDE_";S Y=""@99"";@8;W *7,!,RC1 S Y=""@4"";@99"
"RTN","RCDPUREC",123,0)
 .   S DIC("DR")=DIC("DR")_";"
"RTN","RCDPUREC",124,0)
 D ^DIC
"RTN","RCDPUREC",125,0)
 S RCY=Y
"RTN","RCDPUREC",126,0)
 I RCY<0,'$G(DUOUT),'$G(DTOUT) S RCY=0
"RTN","RCDPUREC",127,0)
 I $P(RCY,U,3),$G(RCREQ) D
"RTN","RCDPUREC",128,0)
 . I '$P($G(^RCY(344,+RCY,0)),U,17) D  Q
"RTN","RCDPUREC",129,0)
 .. W !,*7,"NO EFT REFERENCED - RECEIPT NOT ADDED"
"RTN","RCDPUREC",130,0)
 .. S DA=+RCY,DIK="^RCY(344," D ^DIK
"RTN","RCDPUREC",131,0)
 .. S RCY=0
"RTN","RCDPUREC",132,0)
 . S DIE="^RCY(344.31,",DA=$P(^RCY(344,+RCY,0),U,17),DR=".08////2" D ^DIE
"RTN","RCDPUREC",133,0)
 Q +RCY
"RTN","RCDPUREC",134,0)
 ;
"RTN","RCDPUREC",135,0)
 ;
"RTN","RCDPUREC",136,0)
DICW ;  write identifier code for receipt lookup
"RTN","RCDPUREC",137,0)
 N DATA
"RTN","RCDPUREC",138,0)
 S DATA=$G(^RCY(344,Y,0)) I DATA="" Q
"RTN","RCDPUREC",139,0)
 ;  opened by
"RTN","RCDPUREC",140,0)
 W ?13,"by: ",$E($P($G(^VA(200,+$P(DATA,"^",2),0)),"^"),1,15)
"RTN","RCDPUREC",141,0)
 ;  date opened
"RTN","RCDPUREC",142,0)
 I '$P(DATA,"^",3) S $P(DATA,"^",3)="???????"
"RTN","RCDPUREC",143,0)
 W ?35," on: ",$E($P(DATA,"^",3),4,5),"/",$E($P(DATA,"^",3),6,7),"/",$E($P(DATA,"^",3),2,3)
"RTN","RCDPUREC",144,0)
 ;  type of payment
"RTN","RCDPUREC",145,0)
 W ?50," ",$E($P($G(^RC(341.1,+$P(DATA,"^",4),0)),"^"),1,18)
"RTN","RCDPUREC",146,0)
 ;  status
"RTN","RCDPUREC",147,0)
 W ?70," ",$S($P(DATA,"^",14):"OPEN",1:"CLOSED")
"RTN","RCDPUREC",148,0)
 Q
"RTN","RCDPUREC",149,0)
 ;
"RTN","RCDPUREC",150,0)
 ;
"RTN","RCDPUREC",151,0)
LOOKUP ;  special lookup on receipts, called from ^dd(344,.01,7.5)
"RTN","RCDPUREC",152,0)
 ;  if rcreflup flag not set, do not use special lookup
"RTN","RCDPUREC",153,0)
 I '$D(RCREFLUP) Q
"RTN","RCDPUREC",154,0)
 ;  user entered O.? for lookup on open receipts
"RTN","RCDPUREC",155,0)
 I X["O."!(X["o.") S DIC("S")="I $P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",156,0)
 ;  user entered C.? for lookup on closed receipts
"RTN","RCDPUREC",157,0)
 I X["C."!(X["c.") S DIC("S")="I '$P(^(0),U,14)" S X="?" Q
"RTN","RCDPUREC",158,0)
 K DIC("S")
"RTN","RCDPUREC",159,0)
 Q
"RTN","RCDPUREC",160,0)
 ;
"RTN","RCDPUREC",161,0)
 ; PRCA*4.5*298 - updated logic and comments in EDITREC
"RTN","RCDPUREC",162,0)
EDITREC(DA,DR) ;  edit the receipt (DR = string of fields to ask) in AR BATCH PAYMENT file (#344)
"RTN","RCDPUREC",163,0)
 ; RCBPYMNT - AR BATCH PAYMENT entry before edit
"RTN","RCDPUREC",164,0)
 N D,D0,DI,DIC,DIE,DQ,EFTKEY,RCBPYMNT,RCDA,RCDR1,RCDR2,RCDR3,X,Y
"RTN","RCDPUREC",165,0)
 S (DIC,DIE)="^RCY(344,",RCDA=DA
"RTN","RCDPUREC",166,0)
 S EFTKEY=$$EFTKEY() ; PRCA*4.5*321 - Check if user has key to unmatch EFTs
"RTN","RCDPUREC",167,0)
 I $G(DR)="" N DR D
"RTN","RCDPUREC",168,0)
 . S DR=".01;.04;"_$S($P($G(^RCY(344,RCDA,0)),U,17):"",1:"I $P($G(^RCY(344,DA,0)),U,17) S Y=""@1001"";.06;@1001;")_"D LBT^RCDPUREC(.Y);.18;@99"
"RTN","RCDPUREC",169,0)
 ;
"RTN","RCDPUREC",170,0)
 I $G(DR)[".04;" D  ; Add a check to DR string for type of payment edit
"RTN","RCDPUREC",171,0)
 .D EDIT4^RCDPURE1(RCDA,DR,.RCDR1,.RCDR2,.RCDR3)  ; get new DR strings in RCDR1,RCDR2,RCDR3
"RTN","RCDPUREC",172,0)
 .S DR=$S($E(RCDR1,$L(RCDR1))'=";":RCDR1,1:$E(RCDR1,1,$L(RCDR1)-1)),DR(1,344,1)=RCDR2,DR(1,344,2)=RCDR3
"RTN","RCDPUREC",173,0)
 ;
"RTN","RCDPUREC",174,0)
 M RCBPYMNT=^RCY(344,DA)  ; save initial values
"RTN","RCDPUREC",175,0)
 ;
"RTN","RCDPUREC",176,0)
 D ^DIE
"RTN","RCDPUREC",177,0)
 ;
"RTN","RCDPUREC",178,0)
 ; (#.04) TYPE OF PAYMENT [4P:341.1], (#.06) DEPOSIT TICKET [6P:344.1], (#.17) EFT RECORD [17P:344.31]
"RTN","RCDPUREC",179,0)
 ; Delete deposit if EDI Lockbox event and EFT referenced
"RTN","RCDPUREC",180,0)
 I $P($G(^RCY(344,RCDA,0)),U,6),$P(^(0),U,17),$$EDILBEV^RCDPEU(+$P(^(0),U,4)) S DIE="^RCY(344,",DR=".06///@" D ^DIE
"RTN","RCDPUREC",181,0)
 Q:'$D(^RCY(344,RCDA,0))  ; entry should still exist
"RTN","RCDPUREC",182,0)
 ;
"RTN","RCDPUREC",183,0)
 ; check if TYPE OF PAYMENT (#.04) changed from CHECK/MO PAYMENT to EDI LOCKBOX, update EFT on RECEIPT
"RTN","RCDPUREC",184,0)
 I $P(RCBPYMNT(0),U,4)=4,$P(^RCY(344,RCDA,0),U,4)=14,$G(RCNE) D
"RTN","RCDPUREC",185,0)
 .K DA,DR S DA=RCDA,DIE="^RCY(344,",DR=".17////"_RCNE D ^DIE
"RTN","RCDPUREC",186,0)
 .D EFTUPD(RCNE,2) ; PRCA*4.5*321 - Change EFT status to PAPER EOB MATCH, notify user.
"RTN","RCDPUREC",187,0)
 .D PAUSE
"RTN","RCDPUREC",188,0)
 ;
"RTN","RCDPUREC",189,0)
 ; check if TYPE OF PAYMENT (#.04) changed from EDI LOCKBOX to CHECK/MO PAYMENT, remove EFT from RECEIPT and
"RTN","RCDPUREC",190,0)
 ; update EDI THIRD PARTY EFT DETAIL status to UNMATCHED
"RTN","RCDPUREC",191,0)
 I $P(RCBPYMNT(0),U,4)=14,$P(^RCY(344,RCDA,0),U,4)=4 D
"RTN","RCDPUREC",192,0)
 .N DA,DR,DIE
"RTN","RCDPUREC",193,0)
 .S DA=RCDA,DIE="^RCY(344,",DR=".17////@" D ^DIE
"RTN","RCDPUREC",194,0)
 .D EFTUPD(+$P(RCBPYMNT(0),U,17),0) ; PRCA*4.5*321 call to change EFT status and notify user.
"RTN","RCDPUREC",195,0)
 .D PAUSE
"RTN","RCDPUREC",196,0)
 ;
"RTN","RCDPUREC",197,0)
 ; PRCA*4.5*321 - Start changed block of code
"RTN","RCDPUREC",198,0)
 ; If this was an EDI LOCKBOX receipt where the EFT was changed insert new EFT
"RTN","RCDPUREC",199,0)
 ; and update original EDI THIRD PARTY EFT DETAIL status to UNMATCHED
"RTN","RCDPUREC",200,0)
 I $P(RCBPYMNT(0),U,4)=14,$P(^RCY(344,RCDA,0),U,4)=14,$G(RCNE),$P(RCBPYMNT(0),U,17)'=RCNE D
"RTN","RCDPUREC",201,0)
 .N DA,DR,DIE
"RTN","RCDPUREC",202,0)
 .S DA=RCDA,DIE="^RCY(344,",DR=".17////"_RCNE D ^DIE
"RTN","RCDPUREC",203,0)
 .D EFTUPD(+$P(RCBPYMNT(0),U,17),0) ; Change EFT status to UNMATCHED, notify user.
"RTN","RCDPUREC",204,0)
 .D EFTUPD(RCNE,2) ; Change EFT status to PAPER EOB MATCH, notify user.
"RTN","RCDPUREC",205,0)
 .D PAUSE
"RTN","RCDPUREC",206,0)
 ; PRCA*4.5*321 - End of changed block of code.
"RTN","RCDPUREC",207,0)
 ;
"RTN","RCDPUREC",208,0)
 D LASTEDIT(RCDA)  ; update (#.11) LAST EDITED BY , (#.12) DATE/TIME LAST EDIT
"RTN","RCDPUREC",209,0)
 ;
"RTN","RCDPUREC",210,0)
 Q
"RTN","RCDPUREC",211,0)
 ;
"RTN","RCDPUREC",212,0)
 ; PRCA*4.5*298 - updated comments in LBT
"RTN","RCDPUREC",213,0)
LBT(Y) ; Determine if Y should be set to @99 in DR string to skip field #.18 ERA REFERENCE
"RTN","RCDPUREC",214,0)
 ; DR(1,344,2)="I $P($G(^RCY(344,DA,0)),U,17) S Y=""@1001"";.06;@1001;D LBT^RCDPUREC(.Y);.18;@99"
"RTN","RCDPUREC",215,0)
 ;  code below assumes DA,RCM3 are set
"RTN","RCDPUREC",216,0)
 N Z,Z0
"RTN","RCDPUREC",217,0)
 ; Z will be true if TYPE OF PAYMENT [4P:341.1] is EDI LOCKBOX
"RTN","RCDPUREC",218,0)
 S Z0=$G(^RCY(344,DA,0)),Z=($P(Z0,U,4)=$$LBEVENT^RCDPEU())
"RTN","RCDPUREC",219,0)
 ; (#.18) ERA REFERENCE [18P:344.4]
"RTN","RCDPUREC",220,0)
 ; Don't allow to edit ERA reference if worklist created it
"RTN","RCDPUREC",221,0)
 ;  ^DD(344.49,.02,0) = "RECEIPT #^P344'^RCY(344,^0;2^Q"
"RTN","RCDPUREC",222,0)
 I $P($G(^RCY(344.49,+$P(Z0,U,18),0)),U,2)=DA S Y="@99" Q
"RTN","RCDPUREC",223,0)
 ; only ask for ERA if not EDI lockbox and deposit # exists
"RTN","RCDPUREC",224,0)
 I $S(Z:1,1:'$P($G(^RCY(344,DA,0)),U,6)) S Y="@99" Q
"RTN","RCDPUREC",225,0)
 W !,RCM3  ; RCM,RCM1,RCM2,RCM3 set in SETV^RCDPURE1
"RTN","RCDPUREC",226,0)
 Q
"RTN","RCDPUREC",227,0)
 ;
"RTN","RCDPUREC",228,0)
 ; PRCA*4.5*298 - updated logic and comments in TYP
"RTN","RCDPUREC",229,0)
TYP(Y) ; Determine where to jump to in the 'type' edit of
"RTN","RCDPUREC",230,0)
 ; Y - passed by ref. from DR string logic
"RTN","RCDPUREC",231,0)
 ; DR(1,344,1)="@20;.04;S RCNO=0,RCN4=X D TYP^RCDPUREC(.Y);.17////^S X=RCNE;S Y=""@22"";@21;.04////^S X=RCO4;I RCOE="""" S Y=""@23"";.17////^S X=RCOE;@23;W !,*7,$S(RCO4=14:$S('RCNO:RCM1,1:RCM2),1:RCM) S Y=""@20"";@22"
"RTN","RCDPUREC",232,0)
 ;  Assumes RCP,RCNO,RCN4,RCO4,DA defined
"RTN","RCDPUREC",233,0)
 N DIR,RCCHANGE,RCEFTSWP
"RTN","RCDPUREC",234,0)
 S RCEFTSWP=EFTKEY&((RCO4=14)&(RCN4=14)) ; PRCA*4.5*321 - Allow edit of matched EFT with security key
"RTN","RCDPUREC",235,0)
 I $S(RCEFTSWP:0,RCN4=RCO4:1,(RCO4'=4)&(RCN4'=4)&(RCO4'=14)&(RCN4'=14):1,1:0) S Y=RCP+2 G TYPQ
"RTN","RCDPUREC",236,0)
 ; To get here, the type was changed and it either was 4 or 14 OR is now 4 or 14
"RTN","RCDPUREC",237,0)
 ; Or per PRCA*4.5*231 user has unmatch key and type is 14 (EDI LOCKBOX) 
"RTN","RCDPUREC",238,0)
 S RCCHANGE=(RCN4'=RCO4)
"RTN","RCDPUREC",239,0)
 I RCCHANGE D  G:Y TYPQ
"RTN","RCDPUREC",240,0)
 .; If receipt Status is OPEN, EDI LOCKBOX can only be changed to CHECK/MO PAYMENT and vice-versa
"RTN","RCDPUREC",241,0)
 .I $P(^RCY(344,DA,0),"^",14),(RCO4=4&(RCN4'=14))!(RCO4=14&(RCN4'=4)) D  S Y=RCP Q  ; PRCA*4.5*321
"RTN","RCDPUREC",242,0)
 ..S $P(^RCY(344,DA,0),"^",4)=RCO4
"RTN","RCDPUREC",243,0)
 ..W !!,"The Payment Type can only be changed to "
"RTN","RCDPUREC",244,0)
 ..W $S(RCO4=4:$$GET1^DIQ(341.1,14,.01),1:$$GET1^DIQ(341.1,4,.01)),$C(7),!
"RTN","RCDPUREC",245,0)
 .; Type can't be changed if the old type was EDI Lockbox and there is an ERA detail record
"RTN","RCDPUREC",246,0)
 .; associated with it. Unless user has the UNMATCH EFT key.
"RTN","RCDPUREC",247,0)
 .I 'EFTKEY,RCO4=14,$P($G(^RCY(344,DA,0)),U,18) S Y=RCP+1 Q  ; PRCA*4.5*321
"RTN","RCDPUREC",248,0)
 .; Type can't be changed to EDI Lockbox if receipt detail already exists. Unless user has the
"RTN","RCDPUREC",249,0)
 .; UNMATCH EFT key.
"RTN","RCDPUREC",250,0)
 .I 'EFTKEY,RCN4=14,$O(^RCY(344,DA,1,0)) S Y=RCP+1 Q         ; PRCA*4.5*321
"RTN","RCDPUREC",251,0)
 .; If payment type was EDI LOCKBOX and is to be changed to CHECK/MO PAYMENT (or vice-versa) confirm with user
"RTN","RCDPUREC",252,0)
 .I (RCO4=14&(RCN4=4))!(RCO4=4&(RCN4=14)) D  Q
"RTN","RCDPUREC",253,0)
 ..K DIR S DIR(0)="Y"
"RTN","RCDPUREC",254,0)
 ..S DIR("A")="Are you sure you want to change Payment Type to "_$$GET1^DIQ(341.1,RCN4,.01),DIR("B")="NO"
"RTN","RCDPUREC",255,0)
 ..W ! D ^DIR W !
"RTN","RCDPUREC",256,0)
 ..I 'Y S $P(^RCY(344,DA,0),"^",4)=RCO4,Y=RCP Q
"RTN","RCDPUREC",257,0)
 ..S:Y Y=RCP+2 S:RCN4=14 Y=0
"RTN","RCDPUREC",258,0)
 ;
"RTN","RCDPUREC",259,0)
 I RCN4'=14 S Y=RCP+2
"RTN","RCDPUREC",260,0)
 ; fall through to TYPQ
"RTN","RCDPUREC",261,0)
TYPQ ;
"RTN","RCDPUREC",262,0)
 ; If type changed to EDI LOCKBOX, must have an EFT reference
"RTN","RCDPUREC",263,0)
 I '$G(Y) D
"RTN","RCDPUREC",264,0)
 .; If ERA is matched to EFT, don't allow to edit EFT unless user has key PRCA*4.5*321
"RTN","RCDPUREC",265,0)
 .I 'EFTKEY,$P($G(^RCY(344,DA,0)),U,17),$P($G(^(0)),U,18),$D(^RCY(344.31,"AERA",+$P($G(^RCY(344,DA,0)),U,18),+$P($G(^RCY(344,DA,0)),U,17))) S Y=RCP+2 Q
"RTN","RCDPUREC",266,0)
 .S RCNE=$$ASK17(DA) I 'RCNE S RCNO=1,Y=RCP+1 Q
"RTN","RCDPUREC",267,0)
 ;
"RTN","RCDPUREC",268,0)
 I $G(Y) S Y="@"_Y
"RTN","RCDPUREC",269,0)
 Q
"RTN","RCDPUREC",270,0)
 ;
"RTN","RCDPUREC",271,0)
LASTEDIT(DA) ;  set when receipt last edit
"RTN","RCDPUREC",272,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",273,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",274,0)
 S DR=".11////"_DUZ_";.12///NOW;"
"RTN","RCDPUREC",275,0)
 D ^DIE
"RTN","RCDPUREC",276,0)
 Q
"RTN","RCDPUREC",277,0)
 ;
"RTN","RCDPUREC",278,0)
 ;
"RTN","RCDPUREC",279,0)
MARKPROC(DA,FMSDOCNO) ;  mark receipt as processed, set receipt as closed,
"RTN","RCDPUREC",280,0)
 ;  store fms document number if passed
"RTN","RCDPUREC",281,0)
 N %DT,D,D0,DI,DIC,DIE,DQ,DR,X,Y
"RTN","RCDPUREC",282,0)
 S (DIC,DIE)="^RCY(344,"
"RTN","RCDPUREC",283,0)
 S DR=".07////"_DUZ_";.08///NOW;.14////0;"
"RTN","RCDPUREC",284,0)
 I $G(FMSDOCNO)'="" S DR=DR_"200////"_FMSDOCNO_";"
"RTN","RCDPUREC",285,0)
 D ^DIE
"RTN","RCDPUREC",286,0)
 Q
"RTN","RCDPUREC",287,0)
 ;
"RTN","RCDPUREC",288,0)
FMSSTAT(RCRECTDA) ;  return the fms cr document ^ status ^ if sent before lockbox
"RTN","RCDPUREC",289,0)
 N FMSDOCNO,PRELOCK,STATUS
"RTN","RCDPUREC",290,0)
 ;  get the fms document from the receipt
"RTN","RCDPUREC",291,0)
 S FMSDOCNO=$P($G(^RCY(344,RCRECTDA,2)),"^")
"RTN","RCDPUREC",292,0)
 ;  if not on receipt, it may be earlier than lockbox and on deposit
"RTN","RCDPUREC",293,0)
 I FMSDOCNO="" S FMSDOCNO=$P($G(^RCY(344.1,+$P($G(^RCY(344,RCRECTDA,0)),"^",6),2)),"^") I FMSDOCNO'="" S PRELOCK=1
"RTN","RCDPUREC",294,0)
 S STATUS=$$STATUS^GECSSGET(FMSDOCNO)
"RTN","RCDPUREC",295,0)
 I STATUS=-1 S STATUS="NOT ENTERED"
"RTN","RCDPUREC",296,0)
 ;
"RTN","RCDPUREC",297,0)
 ;  if the cr document is entered, check to see if entered on line
"RTN","RCDPUREC",298,0)
 I FMSDOCNO'="",$P($G(^RCY(344,RCRECTDA,2)),"^",2) S STATUS="ON LINE ENTRY"
"RTN","RCDPUREC",299,0)
 ;
"RTN","RCDPUREC",300,0)
 ;  if the cr document is missing, set status to not sent
"RTN","RCDPUREC",301,0)
 I FMSDOCNO="" S FMSDOCNO="NOT SENT"
"RTN","RCDPUREC",302,0)
 ;
"RTN","RCDPUREC",303,0)
 Q FMSDOCNO_"^"_STATUS_"^"_$G(PRELOCK)
"RTN","RCDPUREC",304,0)
 ;
"RTN","RCDPUREC",305,0)
 ; PRCA*4.5*321 - Updated for UNMATCH key changes
"RTN","RCDPUREC",306,0)
ASK17(DA) ; function, Ask, return the EFT detail record IEN for a receipt
"RTN","RCDPUREC",307,0)
 ; Input: DA = the ien of the RECEIPT (file 344)
"RTN","RCDPUREC",308,0)
 ; Returns: IEN in EDI THIRD PARTY EFT DETAIL (#344.31) or zero
"RTN","RCDPUREC",309,0)
 N DIR,OLDEFT,RCARR,QUIT,X,Y
"RTN","RCDPUREC",310,0)
 S OLDEFT=$P($G(^RCY(344,DA,0)),U,17)
"RTN","RCDPUREC",311,0)
 S QUIT=0
"RTN","RCDPUREC",312,0)
 I OLDEFT D  I QUIT Q 0 ; Quit here if user does not want to change EFT
"RTN","RCDPUREC",313,0)
 . N DIR,DUOUT,DTOUT,X,Y
"RTN","RCDPUREC",314,0)
 . D GETS^DIQ(344.31,OLDEFT_",",".01;.02;.04;.07","","RCARR")
"RTN","RCDPUREC",315,0)
 . W !,"Existing EFT:  "_RCARR(344.31,OLDEFT_",",.01)_"     "_RCARR(344.31,OLDEFT_",",.02)
"RTN","RCDPUREC",316,0)
 . W "     "_RCARR(344.31,OLDEFT_",",.04)_"     "_RCARR(344.31,OLDEFT_",",.07)
"RTN","RCDPUREC",317,0)
 . W !
"RTN","RCDPUREC",318,0)
 . S DIR(0)="Y",DIR("B")="NO"
"RTN","RCDPUREC",319,0)
 . S DIR("A")="Match a different EFT to this receipt"
"RTN","RCDPUREC",320,0)
 . S DIR("?",1)="The receipt is currently matched to the EFT listed above."
"RTN","RCDPUREC",321,0)
 . S DIR("?",2)="If you answer 'Y' or 'YES' you will be prompted for a different EFT"
"RTN","RCDPUREC",322,0)
 . S DIR("?",3)="to match with this receipt."
"RTN","RCDPUREC",323,0)
 . S DIR("?")="If you answer 'N' or 'NO', no change will be made."
"RTN","RCDPUREC",324,0)
 . D ^DIR
"RTN","RCDPUREC",325,0)
 . I $D(DUOUT)!$D(DTOUT)!('Y) S QUIT=1
"RTN","RCDPUREC",326,0)
 ;
"RTN","RCDPUREC",327,0)
G17 ; Reprompt for new EFT if null is entered.
"RTN","RCDPUREC",328,0)
 S DIR(0)="344,.17A^"
"RTN","RCDPUREC",329,0)
 S DIR("?",1)="Select the EFT that contained the deposited money that this receipt details"
"RTN","RCDPUREC",330,0)
 S DIR("?",2)="An EFT detail record can only be associated with one receipt"
"RTN","RCDPUREC",331,0)
 S DIR("?")="This is required if the type of payment is EDI LOCKBOX."
"RTN","RCDPUREC",332,0)
 S DIR("A")="  NEW EFT DETAIL RECORD: "
"RTN","RCDPUREC",333,0)
 S DIR("B")=""
"RTN","RCDPUREC",334,0)
 D ^DIR K DIR
"RTN","RCDPUREC",335,0)
 I $D(DUOUT)!$D(DTOUT)!(Y<0) Q 0
"RTN","RCDPUREC",336,0)
 I Y="" D  G G17
"RTN","RCDPUREC",337,0)
 . W !,*7,"Must have an EFT for an EDI Lockbox payment type"
"RTN","RCDPUREC",338,0)
 Q +Y
"RTN","RCDPUREC",339,0)
 ;
"RTN","RCDPUREC",340,0)
EFTKEY() ;Check if user has UNMATCH EFT key
"RTN","RCDPUREC",341,0)
 ; Input: None
"RTN","RCDPUREC",342,0)
 ; Returns; 1 if user owns key RCDPEPP; otherwise 0.
"RTN","RCDPUREC",343,0)
 N MSG
"RTN","RCDPUREC",344,0)
 D OWNSKEY^XUSRB(.MSG,"RCDPEPP",DUZ)
"RTN","RCDPUREC",345,0)
 Q MSG(0)
"RTN","RCDPUREC",346,0)
 ;
"RTN","RCDPUREC",347,0)
EFTUPD(DA,MATCH) ; Update EFT record if payment type is changed
"RTN","RCDPUREC",348,0)
 ; Input: DA = Internal entry number of EFT record.
"RTN","RCDPUREC",349,0)
 ;        MATCH = New match status for the EFT
"RTN","RCDPUREC",350,0)
 ; Output: Notification to user screen, RCMSG.
"RTN","RCDPUREC",351,0)
 N DIE,DIR,DR,RCMSG,X,Y
"RTN","RCDPUREC",352,0)
 S DIE="^RCY(344.31,"
"RTN","RCDPUREC",353,0)
 I DA S DR=".08////"_MATCH D ^DIE
"RTN","RCDPUREC",354,0)
 S Y=$$GET1^DIQ(344.31,DA_",",.01,"I")
"RTN","RCDPUREC",355,0)
 I Y D  ;
"RTN","RCDPUREC",356,0)
 . S RCMSG="EFT TRANSACTION "_Y_" updated to "_$$GET1^DIQ(344.31,DA_",",.08,"E")
"RTN","RCDPUREC",357,0)
 E  S RCMSG="* EFT RECORD not found! *"
"RTN","RCDPUREC",358,0)
 W !,"   "_RCMSG
"RTN","RCDPUREC",359,0)
 Q
"RTN","RCDPUREC",360,0)
PAUSE ; Pause screen till user hits enter
"RTN","RCDPUREC",361,0)
 ; Input: None
"RTN","RCDPUREC",362,0)
 ; output: None
"RTN","RCDPUREC",363,0)
 N DIR,X,Y
"RTN","RCDPUREC",364,0)
 S DIR(0)="EA",DIR("A")="Press return: " D ^DIR
"RTN","RCDPUREC",365,0)
 Q
"RTN","RCDPURED")
0^38^B74391782
"RTN","RCDPURED",1,0)
RCDPURED ;WISC/RFJ - File 344 receipt/payment dd calls ;1 Jun 99
"RTN","RCDPURED",2,0)
 ;;4.5;Accounts Receivable;**114,169,174,196,202,244,268,271,304,301,312,319,321**;Mar 20, 1995;Build 48
"RTN","RCDPURED",3,0)
 ;;Per VA Directive 6402, this routine should not be modified.
"RTN","RCDPURED",4,0)
 ;
"RTN","RCDPURED",5,0)
 ; Reference to $$REC^IBRFN supported by DBIA 2031
"RTN","RCDPURED",6,0)
 ;
"RTN","RCDPURED",7,0)
 Q
"RTN","RCDPURED",8,0)
 ;
"RTN","RCDPURED",9,0)
 ;
"RTN","RCDPURED",10,0)
 ;  ***** dd references from file 344 (receipts) *****
"RTN","RCDPURED",11,0)
 ;
"RTN","RCDPURED",12,0)
 ;
"RTN","RCDPURED",13,0)
DUPLCATE ;  called by input transform receipt number (.01)
"RTN","RCDPURED",14,0)
 ;  make sure no duplicate receipt numbers
"RTN","RCDPURED",15,0)
 I $O(^RCY(344,"B",X,"")) K X W !,"This is a duplicate receipt number." Q
"RTN","RCDPURED",16,0)
 I $O(^PRCA(433,"AF",X,"")) K X W !,"This receipt number has already been used and has been purged from the system. " K X
"RTN","RCDPURED",17,0)
 Q
"RTN","RCDPURED",18,0)
 ;
"RTN","RCDPURED",19,0)
 ;
"RTN","RCDPURED",20,0)
PAYCOUNT(RCRECTDA) ;  called by computed field number of transactions (101)
"RTN","RCDPURED",21,0)
 ;  return the count of payments for the receipt
"RTN","RCDPURED",22,0)
 N COUNT,X
"RTN","RCDPURED",23,0)
 S COUNT=0
"RTN","RCDPURED",24,0)
 S X=0 F  S X=$O(^RCY(344,+$G(RCRECTDA),1,X)) Q:'X  S COUNT=COUNT+1
"RTN","RCDPURED",25,0)
 Q COUNT
"RTN","RCDPURED",26,0)
 ;
"RTN","RCDPURED",27,0)
 ;
"RTN","RCDPURED",28,0)
PAYTOTAL(RCRECTDA) ;  called by computed field total amount of receipts (.15)
"RTN","RCDPURED",29,0)
 ;  return the total dollars for payments entered for the receipt
"RTN","RCDPURED",30,0)
 N TOTAL,X,RCERAIEN,RCRECIPT ;PRCA319 - added RCERAIEN and RCRECIPT
"RTN","RCDPURED",31,0)
 S TOTAL=0
"RTN","RCDPURED",32,0)
 ;S X=0 F  S X=$O(^RCY(344,+$G(RCRECTDA),1,X)) Q:'X  S TOTAL=TOTAL+$P($G(^(X,0)),"^",4)
"RTN","RCDPURED",33,0)
 ;PRCA319 replaced line above with next section:
"RTN","RCDPURED",34,0)
 S RCERAIEN=$P($G(^RCY(344,+$G(RCRECTDA),0)),U,18)
"RTN","RCDPURED",35,0)
 I '$D(^RCY(344.4,+$G(RCERAIEN),1,"RECEIPT")) D  Q TOTAL ;not a multi receipt ERA 
"RTN","RCDPURED",36,0)
 .S X=0 F  S X=$O(^RCY(344,+$G(RCRECTDA),1,X)) Q:'X  S TOTAL=TOTAL+$P($G(^(X,0)),"^",4)
"RTN","RCDPURED",37,0)
 S RCRECIPT=0 F  S RCRECIPT=$O(^RCY(344.4,+$G(RCERAIEN),1,"RECEIPT",RCRECIPT)) Q:+RCRECIPT=0  D
"RTN","RCDPURED",38,0)
 . S X=0 F  S X=$O(^RCY(344,+$G(RCRECIPT),1,X)) Q:'X  S TOTAL=TOTAL+$P($G(^RCY(344,+$G(RCRECIPT),1,X,0)),"^",4)
"RTN","RCDPURED",39,0)
 ;PRCA319 end of added section
"RTN","RCDPURED",40,0)
 Q TOTAL
"RTN","RCDPURED",41,0)
 ;
"RTN","RCDPURED",42,0)
 ;
"RTN","RCDPURED",43,0)
 ;  ***** dd references from sub-file 344.01 (transactions) *****
"RTN","RCDPURED",44,0)
 ;
"RTN","RCDPURED",45,0)
 ;
"RTN","RCDPURED",46,0)
CHGAMT ;  called from the input transform on the transaction amount (.04)
"RTN","RCDPURED",47,0)
 ;  field.  if the amount is changed, this will create a new cancelled
"RTN","RCDPURED",48,0)
 ;  transaction showing the original amount before the change.
"RTN","RCDPURED",49,0)
 Q:$G(CSNOPROC)  ; prca*4.5*301 ; LEG
"RTN","RCDPURED",50,0)
 N ORIGDATA,TRANDA
"RTN","RCDPURED",51,0)
 S ORIGDATA=^RCY(344,DA(1),1,DA,0)
"RTN","RCDPURED",52,0)
 ;  no original payment amount
"RTN","RCDPURED",53,0)
 I '$P(ORIGDATA,"^",4) Q
"RTN","RCDPURED",54,0)
 ;  payment amount did not change
"RTN","RCDPURED",55,0)
 I +$P(ORIGDATA,"^",4)=+X Q
"RTN","RCDPURED",56,0)
 ;  payment amount increased
"RTN","RCDPURED",57,0)
 I $P(ORIGDATA,"^",4)<X Q
"RTN","RCDPURED",58,0)
 ;PRCA*4.5*304 - surpress new transaction if from Multiple split Link Payment.
"RTN","RCDPURED",59,0)
 ;  undeclared parameter RCSPRSS is defined (only defined in RCDPLPL4)
"RTN","RCDPURED",60,0)
 I $G(RCSPRSS) Q
"RTN","RCDPURED",61,0)
 ;  amount was changed
"RTN","RCDPURED",62,0)
 ;  enter a new transaction
"RTN","RCDPURED",63,0)
 S TRANDA=$$ADDTRAN^RCDPURET(DA(1))
"RTN","RCDPURED",64,0)
 I 'TRANDA W !,"  Unable to edit amount." K X Q
"RTN","RCDPURED",65,0)
 ;  copy the current data for the transaction
"RTN","RCDPURED",66,0)
 ;  do not use fileman, will overwrite variables
"RTN","RCDPURED",67,0)
 ;  set the cancel comment (field 1.01)
"RTN","RCDPURED",68,0)
 S $P(^RCY(344,DA(1),1,TRANDA,1),"^")="Amount $"_$P(ORIGDATA,"^",4)_" decreased in original trans#"_DA
"RTN","RCDPURED",69,0)
 ;  set the payment amount to zero (for cancelled)
"RTN","RCDPURED",70,0)
 S $P(ORIGDATA,"^",4)=0
"RTN","RCDPURED",71,0)
 S $P(ORIGDATA,"^",14)=DUZ
"RTN","RCDPURED",72,0)
 S $P(^RCY(344,DA(1),1,TRANDA,0),"^",2,99)=$P(ORIGDATA,"^",2,99)
"RTN","RCDPURED",73,0)
 Q
"RTN","RCDPURED",74,0)
 ;
"RTN","RCDPURED",75,0)
 ;
"RTN","RCDPURED",76,0)
PAYCHK ;  called from the input transform on the transaction amount (.04)
"RTN","RCDPURED",77,0)
 ;  field.  This will compare the amount paid with the amount owed
"RTN","RCDPURED",78,0)
 ;  for a bill.
"RTN","RCDPURED",79,0)
 Q:$G(CSNOPROC)  ; prca*4.5*301 ; LEG
"RTN","RCDPURED",80,0)
 N ACCOUNT,AMOUNT,OWED
"RTN","RCDPURED",81,0)
 S ACCOUNT=$P($G(^RCY(344,DA(1),1,DA,0)),"^",3)
"RTN","RCDPURED",82,0)
 ;  quit, account not a bill
"RTN","RCDPURED",83,0)
 I ACCOUNT'["PRCA(430," Q
"RTN","RCDPURED",84,0)
 ;  quit, account is a patient
"RTN","RCDPURED",85,0)
 I $P($G(^RCD(340,+$P($G(^PRCA(430,+ACCOUNT,0)),"^",9),0)),"^")[";DPT(" Q
"RTN","RCDPURED",86,0)
 ;  calculate amount owed for a bill
"RTN","RCDPURED",87,0)
 S OWED=$G(^PRCA(430,+ACCOUNT,7))
"RTN","RCDPURED",88,0)
 S OWED=$P(OWED,"^")+$P(OWED,"^",2)+$P(OWED,"^",3)+$P(OWED,"^",4)+$P(OWED,"^",5)
"RTN","RCDPURED",89,0)
 ;  compare amount paid (in x) with amount owed (if not processed 0;7)
"RTN","RCDPURED",90,0)
 I X>OWED,'$P($G(^RCY(344,DA(1),0)),"^",7) W "  WARNING: Payment amount greater than amount of bill!"
"RTN","RCDPURED",91,0)
 ;  check for other bills
"RTN","RCDPURED",92,0)
 S AMOUNT=$$EOB^IBCNSBL2(+ACCOUNT,+$P($G(^PRCA(430,+ACCOUNT,0)),"^",3),$$PAID^PRCAFN1(+ACCOUNT))
"RTN","RCDPURED",93,0)
 I AMOUNT W !!,$P(AMOUNT,"^",2)," may also be billable.",!
"RTN","RCDPURED",94,0)
 Q
"RTN","RCDPURED",95,0)
 ;
"RTN","RCDPURED",96,0)
 ;
"RTN","RCDPURED",97,0)
PNORBILL ;  called by the input transform in receipt file 344, transaction
"RTN","RCDPURED",98,0)
 ;  multiple (field 1), patient name or bill number (sub field .09)
"RTN","RCDPURED",99,0)
 S CSNOPROC=0 I $G(RCDCHKSW)=0,$G(HRCDCKSW) S RCDCHKSW=1 ; prca*4.5*301 ; LEG
"RTN","RCDPURED",100,0)
 I $L(X)>20!($L(X)<1) K X Q
"RTN","RCDPURED",101,0)
 ;
"RTN","RCDPURED",102,0)
 N DFN,RCBILL,RCINPUT,RCOUTPUT,Y,RCTYP,DIC,RCDISP,RCLKFLG,RCPAY,RCPMTTYP,RCMSG
"RTN","RCDPURED",103,0)
 ;
"RTN","RCDPURED",104,0)
 S RCINPUT=$TR(X,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","RCDPURED",105,0)
 ;  try and lookup on bill number
"RTN","RCDPURED",106,0)
 I $G(RCDCHKSW),$G(RCRECTDA),$G(RCTRANDA) S RCPMTTYP=$P($G(^RCY(344,RCRECTDA,1,RCTRANDA,0)),"^",19)     ;prc*4.5*301
"RTN","RCDPURED",107,0)
 S X=$S($O(^PRCA(430,"B",RCINPUT,0)):$O(^(0))_";PRCA(430,",$O(^PRCA(430,"D",RCINPUT,0)):$O(^(0))_";PRCA(430,",1:RCINPUT)
"RTN","RCDPURED",108,0)
 I X[";PRCA(430," D DISPLAY(X)  ; PRCA*4.5*301; LEG
"RTN","RCDPURED",109,0)
 I '$G(RCDCHKSW),X[";PRCA(430," I $D(^PRCA(430,"TCSP",+X)) D  Q  ; PRCA*4.5*301
"RTN","RCDPURED",110,0)
 . W !," BILL HAS BEEN REFERRED TO CROSS-SERVICING.",!," NO MANUAL PAYMENTS ARE ALLOWED."
"RTN","RCDPURED",111,0)
 . S X="^",CSNOPROC=1
"RTN","RCDPURED",112,0)
 ;prca*4.5*301
"RTN","RCDPURED",113,0)
 I $G(RCDCHKSW),$G(RCPMTTYP),X[";PRCA(430," D  Q:CSNOPROC=1
"RTN","RCDPURED",114,0)
 . I RCPMTTYP=170,$D(^PRCA(430,"TCSP",+X)) Q
"RTN","RCDPURED",115,0)
 . I RCPMTTYP=170,'$D(^PRCA(430,"TCSP",+X)) S RCMSG=1 D ERRMSG Q
"RTN","RCDPURED",116,0)
 . I RCPMTTYP=168,$D(^PRCA(430,"TCSP",+X)) S RCMSG=3 D ERRMSG Q
"RTN","RCDPURED",117,0)
 . I RCPMTTYP=169,$D(^PRCA(430,"TCSP",+X)) S RCMSG=2 D ERRMSG Q
"RTN","RCDPURED",118,0)
 . I RCPMTTYP<168!(RCPMTTYP>170),$D(^PRCA(430,"TCSP",+X)) S RCMSG=4 D ERRMSG Q
"RTN","RCDPURED",119,0)
 ;  bill not found, try and lookup on patient
"RTN","RCDPURED",120,0)
 ;PRCA*4.5*304 - Echo info back to the user if not surpressed
"RTN","RCDPURED",121,0)
 I X=RCINPUT S DIC="^DPT(",DIC(0)=$S($G(RCSPRSS):"M",1:"EM") D ^DIC S X=+Y_";DPT("
"RTN","RCDPURED",122,0)
 ;  new value in variable X (output in X)
"RTN","RCDPURED",123,0)
 ;
"RTN","RCDPURED",124,0)
 ;PRCA*4.5*304 - allow EDI Lockbox payment type to look up bills by ECME and RX #'s
"RTN","RCDPURED",125,0)
 ;  patient not found, type of payment = check/mo or EDI LOCKBOX
"RTN","RCDPURED",126,0)
 S RCPAY=$P($G(^RCY(344,DA(1),0)),"^",4)
"RTN","RCDPURED",127,0)
 S RCLKFLG=$S(RCPAY=4:1,RCPAY=14:1,1:0)
"RTN","RCDPURED",128,0)
 I +$G(Y)<0,RCLKFLG D
"RTN","RCDPURED",129,0)
 .   S (X,Y)=$$REC^IBRFN(RCINPUT,.RCTYP,.RCDISP),(RCBILL,X)=X_";PRCA(430,"    ; DBIA 2031
"RTN","RCDPURED",130,0)
 .   I Y>0 D
"RTN","RCDPURED",131,0)
 .   .   N DIR,DIQ2,DIRUT,DTOUT,DUOUT,RCPRM
"RTN","RCDPURED",132,0)
 .   .   S RCTYP=$G(RCTYP,1)
"RTN","RCDPURED",133,0)
 .   .   S RCPRM=$S(RCTYP=1:"TRICARE reference number",RCTYP=2:"ECME Rx reference number",RCTYP=3:"prescription number",1:"reference number")
"RTN","RCDPURED",134,0)
 .   .   S DIR("A")="Is this "_RCPRM_" - "_$S($G(RCDISP)'="":RCDISP,1:RCINPUT)
"RTN","RCDPURED",135,0)
 .   .   S DIR("B")="No",DIR("A",1)=" "
"RTN","RCDPURED",136,0)
 .   .   S DIR(0)="Y^O" D ^DIR S:'Y Y=-1
"RTN","RCDPURED",137,0)
 .   .   I Y'>0 Q
"RTN","RCDPURED",138,0)
 .   .   I '$G(RCSPRSS) W !!,$P($G(^PRCA(430,+RCBILL,0)),"^")," "  ;PRCA*4.5*304
"RTN","RCDPURED",139,0)
 .   .   D DISPLAY(RCBILL)
"RTN","RCDPURED",140,0)
 .   .   S X=RCBILL
"RTN","RCDPURED",141,0)
 ;  output in variable X
"RTN","RCDPURED",142,0)
 ;
"RTN","RCDPURED",143,0)
 I +$G(Y)<0 K X Q
"RTN","RCDPURED",144,0)
 ;
"RTN","RCDPURED",145,0)
 S RCOUTPUT=X
"RTN","RCDPURED",146,0)
 ;
"RTN","RCDPURED",147,0)
 ;  patient account, show messages and quit (output still in variable X)
"RTN","RCDPURED",148,0)
 I RCOUTPUT[";DPT(" D CHECKPAT(+RCOUTPUT) Q
"RTN","RCDPURED",149,0)
 ;
"RTN","RCDPURED",150,0)
 ;  bill account
"RTN","RCDPURED",151,0)
 I $$IB^IBRUTL(+RCOUTPUT) W " ... This bill appears to have other patient bills on 'hold'."
"RTN","RCDPURED",152,0)
 S X=$P($G(^RCD(340,+$P(^PRCA(430,+RCOUTPUT,0),"^",9),0)),"^")
"RTN","RCDPURED",153,0)
 I X[";DPT(" D CHECKPAT(+X)
"RTN","RCDPURED",154,0)
 S X=RCOUTPUT
"RTN","RCDPURED",155,0)
 Q
"RTN","RCDPURED",156,0)
 ;
"RTN","RCDPURED",157,0)
 ;
"RTN","RCDPURED",158,0)
CHECKPAT(DFN) ; check patient for other charges, etc., show message
"RTN","RCDPURED",159,0)
 N RCLIST,RCNODE,RCTYPE,RCPSO,RCX,RCREF,RCTOTAL,RCCOUNT
"RTN","RCDPURED",160,0)
 N X,Y,DI  ; need to protect FM within FM
"RTN","RCDPURED",161,0)
 S (RCTOTAL,RCCOUNT)=0
"RTN","RCDPURED",162,0)
 S X="IBARXEU" X ^%ZOSF("TEST")
"RTN","RCDPURED",163,0)
 I $T S X=$$RXST^IBARXEU(DFN,DT) I X D
"RTN","RCDPURED",164,0)
 . W !?2,"* Patient is exempt from RX Copay: ",$P(X,"^",4)," *"
"RTN","RCDPURED",165,0)
 S RCLIST="RCPSO52",RCNODE="0,2,R,I"
"RTN","RCDPURED",166,0)
 K ^TMP($J,RCLIST,DFN)
"RTN","RCDPURED",167,0)
 D RX^PSO52API(DFN,RCLIST,,,RCNODE,$$FMADD^XLFDT(DT,-1))
"RTN","RCDPURED",168,0)
 I $G(^TMP($J,RCLIST,DFN,0))<1 G CHECKQ
"RTN","RCDPURED",169,0)
 S RCPSO=0 F  S RCPSO=$O(^TMP($J,RCLIST,DFN,RCPSO)) Q:'RCPSO  D
"RTN","RCDPURED",170,0)
 . ; protect aginst tier 0 drugs
"RTN","RCDPURED",171,0)
 . I $G(^TMP($J,RCLIST,DFN,RCPSO,6)),$P($$CPTIER^PSNAPIS("",DT,+^(6)),"^")=0 Q
"RTN","RCDPURED",172,0)
 . ; original fills
"RTN","RCDPURED",173,0)
 . S RCTYPE=+$G(^TMP($J,RCLIST,DFN,RCPSO,105)) Q:'RCTYPE
"RTN","RCDPURED",174,0)
 . I +$G(^TMP($J,RCLIST,DFN,RCPSO,22))=DT,$P($G(^(11)),"^")="W",'$G(^(31)) D  Q
"RTN","RCDPURED",175,0)
 .. S RCX=$G(^TMP($J,RCLIST,DFN,RCPSO,8))
"RTN","RCDPURED",176,0)
 .. S RCX=RCX/30\1+$S(RCX#30:1,1:0)
"RTN","RCDPURED",177,0)
 .. S RCCOUNT=RCCOUNT+RCX
"RTN","RCDPURED",178,0)
 .. S RCTOTAL=RCTOTAL+($$ARCOST^IBAUTL(DFN,RCTYPE,RCPSO)*RCX)
"RTN","RCDPURED",179,0)
 . ; refills
"RTN","RCDPURED",180,0)
 . S RCREF=0 F  S RCREF=$O(^TMP($J,RCLIST,DFN,RCPSO,"RF",RCREF)) Q:'RCREF  I $P($G(^TMP($J,RCLIST,DFN,RCPSO,"RF",RCREF,.01)),"^")=DT,$P($G(^(2)),"^")="W",'$G(^(17)) D
"RTN","RCDPURED",181,0)
 .. S RCX=$G(^TMP($J,RCLIST,DFN,RCPSO,"RF",RCREF,1.1))
"RTN","RCDPURED",182,0)
 .. S RCX=RCX/30\1+$S(RCX#30:1,1:0)
"RTN","RCDPURED",183,0)
 .. S RCCOUNT=RCCOUNT+RCX
"RTN","RCDPURED",184,0)
 .. S RCTOTAL=RCTOTAL+($$ARCOST^IBAUTL(DFN,RCTYPE,RCPSO)*RCX)
"RTN","RCDPURED",185,0)
 I RCTOTAL D
"RTN","RCDPURED",186,0)
 . W !?2,"* This patient has ",RCCOUNT,"-30 day RX's totaling $",$FN(RCTOTAL,",",2)," that are potentially *"
"RTN","RCDPURED",187,0)
 . W !?2,"* billable. This represents any Window Rx's issued today. *"
"RTN","RCDPURED",188,0)
 ;
"RTN","RCDPURED",189,0)
CHECKQ ;
"RTN","RCDPURED",190,0)
 K ^TMP($J,RCLIST,DFN)
"RTN","RCDPURED",191,0)
 Q
"RTN","RCDPURED",192,0)
 ;
"RTN","RCDPURED",193,0)
 ;
"RTN","RCDPURED",194,0)
DISPLAY(RCBILLDA) ;  display bill
"RTN","RCDPURED",195,0)
 N DATA
"RTN","RCDPURED",196,0)
 S DATA=$P(^PRCA(430,+RCBILLDA,0),"^",9) W:DATA "  ",$$NAM^RCFN01(DATA)
"RTN","RCDPURED",197,0)
 S DATA=$P(^PRCA(430,+RCBILLDA,0),"^",8) I DATA D
"RTN","RCDPURED",198,0)
 .   W "   ",$P(^PRCA(430.3,DATA,0),"^")
"RTN","RCDPURED",199,0)
 .   I $P(^PRCA(430.3,DATA,0),"^",3)'=102,$P($G(^RCD(340,+$P(^PRCA(430,+RCBILLDA,0),"^",9),0)),"^")'[";DPT(" W !,"This bill is not in 'active' status."
"RTN","RCDPURED",200,0)
 S DATA=$G(^PRCA(430,+RCBILLDA,7)) W "   $",$J($P(DATA,"^")+$P(DATA,"^",2)+$P(DATA,"^",3)+$P(DATA,"^",4)+$P(DATA,"^",5),1,2)
"RTN","RCDPURED",201,0)
 Q
"RTN","RCDPURED",202,0)
 ;
"RTN","RCDPURED",203,0)
PAYDATE ;  called by the input transform in receipt file 344, transaction
"RTN","RCDPURED",204,0)
 ;  multiple (field 1), date of payment (sub field .06)
"RTN","RCDPURED",205,0)
 ;  date of payment not in future or more than one month ago
"RTN","RCDPURED",206,0)
 N DAYSDIFF
"RTN","RCDPURED",207,0)
 S DAYSDIFF=$$FMDIFF^XLFDT(X,DT)
"RTN","RCDPURED",208,0)
 I DAYSDIFF<-31!(DAYSDIFF>0) K X
"RTN","RCDPURED",209,0)
 Q
"RTN","RCDPURED",210,0)
 ;
"RTN","RCDPURED",211,0)
 ;
"RTN","RCDPURED",212,0)
 ;  ***** dd references from file 344.1 (deposits) *****
"RTN","RCDPURED",213,0)
 ;
"RTN","RCDPURED",214,0)
 ;
"RTN","RCDPURED",215,0)
RECTOTAL(RCDEPTDA) ;  called from computed field TOTAL AMT OF RECEIPTS (.18) in
"RTN","RCDPURED",216,0)
 ;  deposit file (344.1)
"RTN","RCDPURED",217,0)
 ;  this returns the total dollars paid for all receipts on deposit ticket
"RTN","RCDPURED",218,0)
 N RCRECTDA,TOTAL
"RTN","RCDPURED",219,0)
 S TOTAL=0
"RTN","RCDPURED",220,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AD",+RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPURED",221,0)
 .   S TOTAL=TOTAL+$$PAYTOTAL(RCRECTDA)
"RTN","RCDPURED",222,0)
 Q TOTAL
"RTN","RCDPURED",223,0)
 ;
"RTN","RCDPURED",224,0)
 ;
"RTN","RCDPURED",225,0)
RECCOUNT(RCDEPTDA) ;  called from computed field TOTAL RECEIPTS (100) in deposit file (344.1)
"RTN","RCDPURED",226,0)
 ;  this returns a count of the number of receipts on a deposit ticket
"RTN","RCDPURED",227,0)
 N RCRECTDA,COUNT
"RTN","RCDPURED",228,0)
 S COUNT=0
"RTN","RCDPURED",229,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,"AD",+RCDEPTDA,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPURED",230,0)
 .   S COUNT=COUNT+1
"RTN","RCDPURED",231,0)
 Q COUNT
"RTN","RCDPURED",232,0)
HLP09 ; PRCA*4.5*321 - Add executable help for file 4.01 field .09
"RTN","RCDPURED",233,0)
 W ?5,"To enter a TRICARE Authorization No, enter 'T.' followed by the number."
"RTN","RCDPURED",234,0)
 W !,?5,"To enter an ECME Rx Reference Number, enter 'E.' followed by the number."
"RTN","RCDPURED",235,0)
 W !,?5,"To enter an Prescription Number, enter 'R.' followed by the number."
"RTN","RCDPURED",236,0)
 Q
"RTN","RCDPURED",237,0)
ERRMSG ;prnt error message and set exit variables      ;prca*4.5*301
"RTN","RCDPURED",238,0)
 W !!,$P($T(LINKMSG+RCMSG),";",2),! S CSNOPROC=1,RCDCHKSW=0,HRCDCKSW=1 S X=0
"RTN","RCDPURED",239,0)
 Q
"RTN","RCDPURED",240,0)
LINKMSG ;Linking error messages      ;prca*4.5*301   
"RTN","RCDPURED",241,0)
 ;** Linking Treasury payment (170) to a non Cross-Servicing bill not allowed
"RTN","RCDPURED",242,0)
 ;** Linking a TOP payment (169) to a Cross-Servicing bill is not allowed
"RTN","RCDPURED",243,0)
 ;** Linking a DMC payment (168) to a Cross-Servicing bill is not allowed
"RTN","RCDPURED",244,0)
 ;** Linking a MISC payment to a Cross-Servicing bill is not allowed
"RTN","RCDPUT")
0^14^B27245872
"RTN","RCDPUT",1,0)
RCDPUT ;WASH-ISC@ALTOONA,PA/RGY/KML - UTILITIES ; 5/6/11 12:29pm
"RTN","RCDPUT",2,0)
V ;;4.5;Accounts Receivable;**69,90,106,114,169,269,321**;Mar 20, 1995;Build 48
"RTN","RCDPUT",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","RCDPUT",4,0)
 Q
"RTN","RCDPUT",5,0)
 ;
"RTN","RCDPUT",6,0)
 ;
"RTN","RCDPUT",7,0)
RECEIPTS ;  check receipts
"RTN","RCDPUT",8,0)
 N DATA,PAYDA,RCCOUNT,RCDATA0,RCDATE,RCRECTDA,STATUS,TOTAL,X,XCNP,XMDUZ,XMZ
"RTN","RCDPUT",9,0)
 K ^TMP("RCDPUT",$J)
"RTN","RCDPUT",10,0)
 ;  check receipts which are 4 days old
"RTN","RCDPUT",11,0)
 S RCDATE=$$FMADD^XLFDT(DT,-4)
"RTN","RCDPUT",12,0)
 S RCCOUNT=7
"RTN","RCDPUT",13,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPUT",14,0)
 .   ;  if no payments, quit
"RTN","RCDPUT",15,0)
 .   I '$O(^RCY(344,RCRECTDA,1,0)) Q
"RTN","RCDPUT",16,0)
 .   ;
"RTN","RCDPUT",17,0)
 .   S RCDATA0=$G(^RCY(344,RCRECTDA,0))
"RTN","RCDPUT",18,0)
 .   ;
"RTN","RCDPUT",19,0)
 .   ;  receipt is marked as processed
"RTN","RCDPUT",20,0)
 .   I $P(RCDATA0,"^",8) D  Q
"RTN","RCDPUT",21,0)
 .   .   ;  check the last payment and see if it was processed
"RTN","RCDPUT",22,0)
 .   .   ;  the last payment must have a paid amount and no processed
"RTN","RCDPUT",23,0)
 .   .   ;  amount AND the payment did not go to suspense.
"RTN","RCDPUT",24,0)
 .   .   S PAYDA=9999999,TOTAL=0
"RTN","RCDPUT",25,0)
 .   .   F  S PAYDA=$O(^RCY(344,RCRECTDA,1,PAYDA),-1) Q:'PAYDA  S DATA=$G(^RCY(344,RCRECTDA,1,PAYDA,0)),TOTAL=TOTAL+$P(DATA,"^",4) I $P(DATA,"^",4),$P(DATA,"^",3),$P($G(^RCY(344,RCRECTDA,1,PAYDA,2)),"^",5)="" Q
"RTN","RCDPUT",26,0)
 .   .   ;  no total paid on the receipt
"RTN","RCDPUT",27,0)
 .   .   I 'TOTAL Q
"RTN","RCDPUT",28,0)
 .   .   ;  found the last payment and it is not processed
"RTN","RCDPUT",29,0)
 .   .   I PAYDA,'$P(^RCY(344,RCRECTDA,1,PAYDA,0),"^",5) D BUILDLN(RCDATA0,"All payments NOT completely processed.") Q
"RTN","RCDPUT",30,0)
 .   .   ;
"RTN","RCDPUT",31,0)
 .   .   ;  if no deposit ticket, receipt is processed
"RTN","RCDPUT",32,0)
 .   .   I '$P(RCDATA0,"^",6) Q
"RTN","RCDPUT",33,0)
 .   .   ;
"RTN","RCDPUT",34,0)
 .   .   ;  receipts is marked as entered on line
"RTN","RCDPUT",35,0)
 .   .   I $P($G(^RCY(344,RCRECTDA,2)),"^",2)=1 Q
"RTN","RCDPUT",36,0)
 .   .   ;
"RTN","RCDPUT",37,0)
 .   .   ;  fms document has not been sent
"RTN","RCDPUT",38,0)
 .   .   I $P($G(^RCY(344,RCRECTDA,2)),"^")="" D BUILDLN(RCDATA0,"CR has NOT been sent to FMS.") Q
"RTN","RCDPUT",39,0)
 .   .   ;
"RTN","RCDPUT",40,0)
 .   .   ;  get the status of the fms code sheet and see if it is
"RTN","RCDPUT",41,0)
 .   .   ;  accepted
"RTN","RCDPUT",42,0)
 .   .   S STATUS=$$FMSSTAT^RCDPUREC(RCRECTDA)
"RTN","RCDPUT",43,0)
 .   .   ;  document is accepted or entered on line
"RTN","RCDPUT",44,0)
 .   .   I $E($P(STATUS,"^",2))="A" Q
"RTN","RCDPUT",45,0)
 .   .   I $E($P(STATUS,"^",2))="O" Q
"RTN","RCDPUT",46,0)
 .   .   ;  not been more than 4 days
"RTN","RCDPUT",47,0)
 .   .   I $$FMDIFF^XLFDT(DT,$P(RCDATA0,"^",8))<4 Q
"RTN","RCDPUT",48,0)
 .   .   D BUILDLN(RCDATA0,"CR NOT accepted in FMS ("_$P(STATUS," ")_").")
"RTN","RCDPUT",49,0)
 .   ;
"RTN","RCDPUT",50,0)
 .   ;  receipt not that old
"RTN","RCDPUT",51,0)
 .   I $P(RCDATA0,"^",3)>RCDATE Q
"RTN","RCDPUT",52,0)
 .   ;
"RTN","RCDPUT",53,0)
 .   ;  not processed in a timely manner
"RTN","RCDPUT",54,0)
 .   D BUILDLN(RCDATA0,"NOT processed in a timely manner.")
"RTN","RCDPUT",55,0)
 ;
"RTN","RCDPUT",56,0)
 I '$O(^TMP("RCDPUT",$J,0)) Q
"RTN","RCDPUT",57,0)
 ;
"RTN","RCDPUT",58,0)
 ;  send mail message
"RTN","RCDPUT",59,0)
 S ^TMP("RCDPUT",$J,1)="Sent to: PRCA ERROR mailgroup"
"RTN","RCDPUT",60,0)
 S ^TMP("RCDPUT",$J,2)="         RCDP PAYMENTS mailgroup"
"RTN","RCDPUT",61,0)
 S ^TMP("RCDPUT",$J,3)="         PRCAY PAYMENT SUP security key holders"
"RTN","RCDPUT",62,0)
 S ^TMP("RCDPUT",$J,4)=" "
"RTN","RCDPUT",63,0)
 S ^TMP("RCDPUT",$J,5)="RECEIPT        OPENED   PROCESS  WARNING"
"RTN","RCDPUT",64,0)
 S ^TMP("RCDPUT",$J,6)="------------------------------------------------------------------------------"
"RTN","RCDPUT",65,0)
 S XMY("G.PRCA ERROR")=""
"RTN","RCDPUT",66,0)
 S XMY("G.RCDP PAYMENTS")=""
"RTN","RCDPUT",67,0)
 F X=0:0 S X=$O(^XUSEC("PRCAY PAYMENT SUP",X)) Q:'X  S XMY(X)=""
"RTN","RCDPUT",68,0)
 S XMDUZ="Accounts Receivable Package"
"RTN","RCDPUT",69,0)
 S XMTEXT="^TMP(""RCDPUT"",$J,"
"RTN","RCDPUT",70,0)
 S XMSUB="Error in Agent Cashier Receipt(s)"
"RTN","RCDPUT",71,0)
 D ^XMD
"RTN","RCDPUT",72,0)
 K ^TMP("RCDPUT",$J)
"RTN","RCDPUT",73,0)
 Q
"RTN","RCDPUT",74,0)
 ;
"RTN","RCDPUT",75,0)
 ;
"RTN","RCDPUT",76,0)
BUILDLN(RCDATA0,WARNING) ;  build line in mail message with receipt data
"RTN","RCDPUT",77,0)
 N DATA,DATE
"RTN","RCDPUT",78,0)
 S RCCOUNT=RCCOUNT+1
"RTN","RCDPUT",79,0)
 S DATA=$E($P(RCDATA0,"^")_"           ",1,11)_"  "
"RTN","RCDPUT",80,0)
 S DATE=$P(RCDATA0,"^",3) I DATE S DATE=$E(DATE,4,5)_"/"_$E(DATE,6,7)_"/"_$E(DATE,2,3)
"RTN","RCDPUT",81,0)
 S DATA=DATA_$E(DATE_"        ",1,8)_"  "
"RTN","RCDPUT",82,0)
 S DATE=$P(RCDATA0,"^",8) I DATE S DATE=$E(DATE,4,5)_"/"_$E(DATE,6,7)_"/"_$E(DATE,2,3)
"RTN","RCDPUT",83,0)
 S DATA=DATA_$E(DATE_"        ",1,8)_"  "
"RTN","RCDPUT",84,0)
 S DATA=DATA_WARNING
"RTN","RCDPUT",85,0)
 S RCCOUNT=RCCOUNT+1
"RTN","RCDPUT",86,0)
 S ^TMP("RCDPUT",$J,RCCOUNT)=DATA
"RTN","RCDPUT",87,0)
 Q
"RTN","RCDPUT",88,0)
 ;
"RTN","RCDPUT",89,0)
 ;
"RTN","RCDPUT",90,0)
PURGE ;  purge receipts and deposits
"RTN","RCDPUT",91,0)
 N %,D0,D1,DA,DG,DIC,DICR,DIG,DIH,DIK,DIU,DIV,DIW,RCDATE,RCDEPDA,RCRECTDA,X,Y
"RTN","RCDPUT",92,0)
 ;
"RTN","RCDPUT",93,0)
 ;  purge receipts
"RTN","RCDPUT",94,0)
 ; HIPAA 5010 - retain receipts for 7 year (84 months)
"RTN","RCDPUT",95,0)
 S RCDATE=$$FPS^RCAMFN01(DT,-84)
"RTN","RCDPUT",96,0)
 S RCRECTDA=0 F  S RCRECTDA=$O(^RCY(344,RCRECTDA)) Q:'RCRECTDA  D
"RTN","RCDPUT",97,0)
 .   ;  receipt not processed, do not purge
"RTN","RCDPUT",98,0)
 .   I '$P(^RCY(344,RCRECTDA,0),"^",8) Q
"RTN","RCDPUT",99,0)
 .   ;  receipt processed less than 84 months ago, do not purge
"RTN","RCDPUT",100,0)
 .   I $P(^RCY(344,RCRECTDA,0),"^",8)>RCDATE Q
"RTN","RCDPUT",101,0)
 .   ;  purge receipt
"RTN","RCDPUT",102,0)
 .   L +^RCY(344,RCRECTDA,0)
"RTN","RCDPUT",103,0)
 .   S DIK="^RCY(344,",DA=RCRECTDA D ^DIK
"RTN","RCDPUT",104,0)
 .   ;  purge any comment history - PRCA*4.5*321
"RTN","RCDPUT",105,0)
 .   D PURGECH(RCRECTDA)
"RTN","RCDPUT",106,0)
 .   ;
"RTN","RCDPUT",107,0)
 .   L -^RCY(344,RCRECTDA,0)
"RTN","RCDPUT",108,0)
 ;
"RTN","RCDPUT",109,0)
 ;  purge deposits
"RTN","RCDPUT",110,0)
 ; ; HIPAA 5010 - retain deposits for 7 year (84 months)
"RTN","RCDPUT",111,0)
 S RCDATE=$$FPS^RCAMFN01(DT,-84)
"RTN","RCDPUT",112,0)
 S RCDEPDA=0 F  S RCDEPDA=$O(^RCY(344.1,RCDEPDA)) Q:'RCDEPDA  D
"RTN","RCDPUT",113,0)
 .   ;  if receipts are on deposit, do not purge
"RTN","RCDPUT",114,0)
 .   I $O(^RCY(344,"AD",RCDEPDA,0)) Q
"RTN","RCDPUT",115,0)
 .   ;  deposit not confirmed, do not purge
"RTN","RCDPUT",116,0)
 .   I '$P(^RCY(344.1,RCDEPDA,0),"^",11) Q
"RTN","RCDPUT",117,0)
 .   ;  deposit confirmed less than 84 months ago, do not purge
"RTN","RCDPUT",118,0)
 .   I $P(^RCY(344.1,RCDEPDA,0),"^",11)>RCDATE Q
"RTN","RCDPUT",119,0)
 .   ;  purge deposit
"RTN","RCDPUT",120,0)
 .   L +^RCY(344.1,RCDEPDA,0)
"RTN","RCDPUT",121,0)
 .   S DIK="^RCY(344.1,",DA=RCDEPDA D ^DIK
"RTN","RCDPUT",122,0)
 .   L -^RCY(344.1,RCDEPDA,0)
"RTN","RCDPUT",123,0)
 Q
"RTN","RCDPUT",124,0)
 ;
"RTN","RCDPUT",125,0)
PURGECH(RCDA) ; Purge Comment History - PRCA*4.5*321
"RTN","RCDPUT",126,0)
 N DA,DIK,SUB
"RTN","RCDPUT",127,0)
 S SUB=0
"RTN","RCDPUT",128,0)
 F  S SUB=$O(^RCY(344.73,"B",RCDA,SUB)) Q:'SUB  D
"RTN","RCDPUT",129,0)
 .  ;Delete Comment
"RTN","RCDPUT",130,0)
 .  S DIK="^RCY(344.73,",DA=SUB D ^DIK
"RTN","RCDPUT",131,0)
 Q
"RTN","RCDPUT",132,0)
 ;
"RTN","RCDPUT",133,0)
MAN ;  Entry point for nightly process for managing receipts and deposits
"RTN","RCDPUT",134,0)
 D PURGE
"RTN","RCDPUT",135,0)
 D RECEIPTS
"RTN","RCDPUT",136,0)
 Q
"RTN","RCP321")
0^25^B27251682
"RTN","RCP321",1,0)
RCP321 ;BIRM/EWL ALB/PJH - ePayment Lockbox Post-Installation Processing ;Dec 20, 2014@14:08:45
"RTN","RCP321",2,0)
 ;;4.5;Accounts Receivable;**321**;Jan 21, 2014;Build 48
"RTN","RCP321",3,0)
 ;Per VA Directive 6402, this routine should not be modified.
"RTN","RCP321",4,0)
 Q
"RTN","RCP321",5,0)
 ;
"RTN","RCP321",6,0)
POST() ; Task jobs to initialize RCDPE COMMENT HISTORY file #344.73
"RTN","RCP321",7,0)
 ;
"RTN","RCP321",8,0)
 N DIK,ERR,K34461,RCENT,RCERR,RCINST,RCOUT,RCPAR,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","RCP321",9,0)
 ; set ^XTMP zero node for 180 day retention
"RTN","RCP321",10,0)
 S ^XTMP($T(+0),0)=$$HTFM^XLFDT($H+180)_U_DT_"^PRCA*4.5*321 post-installation"
"RTN","RCP321",11,0)
 D BMES^XPDUTL("Post-installation tasks "_$$FMTE^XLFDT($$NOW^XLFDT)) ; add date/time to log
"RTN","RCP321",12,0)
 D BMES^XPDUTL("Queueing task to initialize RCDPE COMMENT HISTORY file #344.73")
"RTN","RCP321",13,0)
 S ZTRTN="INIT1^"_$T(+0),ZTDESC="RCDPE COMMENT HISTORY (#344.73) post-init work",ZTIO="",ZTDTH=$H
"RTN","RCP321",14,0)
 D ^%ZTLOAD
"RTN","RCP321",15,0)
 D MES^XPDUTL($S($G(ZTSK):"Task number "_ZTSK_" has been queued.",1:"Unable to queue this task."))
"RTN","RCP321",16,0)
 I $G(ZTSK) D MES^XPDUTL("A MailMan message will be sent on completion.")
"RTN","RCP321",17,0)
 ;
"RTN","RCP321",18,0)
 D BMES^XPDUTL("Deleting old style 'B' index on file (#344.6)")
"RTN","RCP321",19,0)
 D DELIX^DDMOD(344.6,.01,1,"K")
"RTN","RCP321",20,0)
 D BMES^XPDUTL("Re-indexing PAYER NAME on AUTO-PAY EXCLUSION file (#344.6)")
"RTN","RCP321",21,0)
 S DIK="^RCY(344.6,",DIK(1)=".01^B" D ENALL^DIK
"RTN","RCP321",22,0)
 D BMES^XPDUTL("Re-indexing DATE OPENED on AR BATCH PAYMENTS file (#344)")
"RTN","RCP321",23,0)
 S DIK="^RCY(344,",DIK(1)=".03^AO" D ENALL^DIK
"RTN","RCP321",24,0)
 ;
"RTN","RCP321",25,0)
 ; RCDPE AUDIT mail group update 
"RTN","RCP321",26,0)
 N RCAUD,RCRMEM,Z
"RTN","RCP321",27,0)
 D MES^XPDUTL("Updating RCDPE AUDIT mail group.")
"RTN","RCP321",28,0)
 ; Integration Agreement 6814 for access to ^XMB(3.8
"RTN","RCP321",29,0)
 S RCAUD=$$FIND1^DIC(3.8,"","MX","RCDPE AUDIT","","","ERR") Q:'RCAUD
"RTN","RCP321",30,0)
 ; Delete any REMOTE MEMBER containing text of VHA835NOTIFY (upper or lower case)
"RTN","RCP321",31,0)
 S Z=0
"RTN","RCP321",32,0)
 F  S Z=$O(^XMB(3.8,RCAUD,6,Z)) Q:'Z  D
"RTN","RCP321",33,0)
 . S RCRMEM=$$GET1^DIQ(3.812,Z_","_RCAUD_",",.01)
"RTN","RCP321",34,0)
 . Q:$$UP^XLFSTR(RCRMEM)'["VHA835NOTIFY"
"RTN","RCP321",35,0)
 . N DA,DIK
"RTN","RCP321",36,0)
 . S DA(1)=RCAUD,DA=Z,DIK="^XMB(3.8,"_DA(1)_",6,"
"RTN","RCP321",37,0)
 . D ^DIK
"RTN","RCP321",38,0)
 . D MES^XPDUTL("Removed REMOTE MEMBER = "_RCRMEM)
"RTN","RCP321",39,0)
 ;
"RTN","RCP321",40,0)
 ; If empty populate parameter DAY TO SEND WORKLOAD NOTIFICATIONS with SATURDAY
"RTN","RCP321",41,0)
 D:$$GET1^DIQ(344.61,"1,",.1)=""
"RTN","RCP321",42,0)
 .N DA,DIE,DR
"RTN","RCP321",43,0)
 .S DIE="^RCY(344.61,",DR=".1///SA;",DA=1 D ^DIE
"RTN","RCP321",44,0)
 ;
"RTN","RCP321",45,0)
 ; Decrease Medical and Pharmacy EFT prevent days if they exceed the new maximum
"RTN","RCP321",46,0)
 S K34461=0
"RTN","RCP321",47,0)
 F  S K34461=$O(^RCY(344.61,K34461)) Q:'K34461  D
"RTN","RCP321",48,0)
 . N MEPREV,RXPREV
"RTN","RCP321",49,0)
 . S MEPREV=$$GET1^DIQ(344.61,K34461_",",.06,"I")
"RTN","RCP321",50,0)
 . I MEPREV>60 D  ;
"RTN","RCP321",51,0)
 . . N FDA
"RTN","RCP321",52,0)
 . . S FDA(344.61,K34461_",",.06)=60
"RTN","RCP321",53,0)
 . . D FILE^DIE("","FDA")
"RTN","RCP321",54,0)
 . ;
"RTN","RCP321",55,0)
 . S RXPREV=$$GET1^DIQ(344.61,K34461_",",.07,"I")
"RTN","RCP321",56,0)
 . I RXPREV>365 D  ;
"RTN","RCP321",57,0)
 . . N FDA
"RTN","RCP321",58,0)
 . . S FDA(344.61,K34461_",",.07)=365
"RTN","RCP321",59,0)
 . . D FILE^DIE("","FDA")
"RTN","RCP321",60,0)
 ;
"RTN","RCP321",61,0)
US795 ; Convert default for ERA_CLAIM_TYPE in worklist from "B" to "A"
"RTN","RCP321",62,0)
 K ^TMP($J,"RCP321")
"RTN","RCP321",63,0)
 S RCOUT="^TMP($J,""RCP321"")"
"RTN","RCP321",64,0)
 S RCPAR="RCDPE EDI LOCKBOX WORKLIST"
"RTN","RCP321",65,0)
 S RCINST="ERA_CLAIM_TYPE"
"RTN","RCP321",66,0)
 D ENVAL^XPAR(.RCOUT,RCPAR,RCINST,.RCERR,1) ; IA 2992 PARAMETER DEFINITION TOOLKIT
"RTN","RCP321",67,0)
 S RCENT=""
"RTN","RCP321",68,0)
 F  S RCENT=$O(^TMP($J,"RCP321",RCENT)) Q:RCENT=""  D  ;
"RTN","RCP321",69,0)
 . I $G(^TMP($J,"RCP321",RCENT,RCINST))="B" D  ;
"RTN","RCP321",70,0)
 . . D EN^XPAR(RCENT,RCPAR,RCINST,"A",.RCERR) ; IA 2992 PARAMETER DEFINITION TOOLKIT
"RTN","RCP321",71,0)
 ;
"RTN","RCP321",72,0)
 Q
"RTN","RCP321",73,0)
 ;
"RTN","RCP321",74,0)
INIT1 ;Build 344.73
"RTN","RCP321",75,0)
 ; Clear any existing history
"RTN","RCP321",76,0)
 D PURGE
"RTN","RCP321",77,0)
 ;
"RTN","RCP321",78,0)
 N COMMENT,DATE,RCNODE,RCBODY,RCSUBJ,RCTO,RCLINE,RCRCPT,RCSUSP,RCZR,USER,XMINSTR
"RTN","RCP321",79,0)
 S RCNODE("BEG")=$$NOW^XLFDT,RCNODE("CNT")=0
"RTN","RCP321",80,0)
 S ^XTMP($T(+0),"BEGIN")=RCNODE("BEG")
"RTN","RCP321",81,0)
 ;Scan receipt file for suspense comments
"RTN","RCP321",82,0)
 S RCRCPT=0
"RTN","RCP321",83,0)
 F  S RCRCPT=$O(^RCY(344,RCRCPT)) Q:'RCRCPT  D
"RTN","RCP321",84,0)
 . S RCLINE=0
"RTN","RCP321",85,0)
 . F  S RCLINE=$O(^RCY(344,RCRCPT,1,RCLINE)) Q:'RCLINE  D
"RTN","RCP321",86,0)
 .. ; Check that line is still in suspense
"RTN","RCP321",87,0)
 .. S RCSUSP=$$GET1^DIQ(344.01,RCLINE_","_RCRCPT_",",3.01) Q:RCSUSP=""
"RTN","RCP321",88,0)
 .. ; Receipt line comment
"RTN","RCP321",89,0)
 .. S COMMENT=$$GET1^DIQ(344.01,RCLINE_","_RCRCPT_",",1.02) Q:$L(COMMENT)<3
"RTN","RCP321",90,0)
 .. ; Date placed into suspense
"RTN","RCP321",91,0)
 .. S DATE=$$GET1^DIQ(344.01,RCLINE_","_RCRCPT_",",3.02,"I") Q:DATE=""
"RTN","RCP321",92,0)
 .. ; Placed into suspense by
"RTN","RCP321",93,0)
 .. S USER=$$GET1^DIQ(344.01,RCLINE_","_RCRCPT_",",3.03,"I") Q:USER=""
"RTN","RCP321",94,0)
 .. N FDA,ERR
"RTN","RCP321",95,0)
 .. S FDA(344.73,"+1,",.01)=RCRCPT ;Receipt
"RTN","RCP321",96,0)
 .. S FDA(344.73,"+1,",1)=RCLINE  ;Scratchpad or Receipt Line Number
"RTN","RCP321",97,0)
 .. S FDA(344.73,"+1,",2)=USER              ;User
"RTN","RCP321",98,0)
 .. S FDA(344.73,"+1,",3)=DATE              ;Date/time ;
"RTN","RCP321",99,0)
 .. S FDA(344.73,"+1,",4)=COMMENT           ;Comment ;file entry
"RTN","RCP321",100,0)
 .. D UPDATE^DIE(,"FDA","ERR")
"RTN","RCP321",101,0)
 .. S RCNODE("CNT")=RCNODE("CNT")+1
"RTN","RCP321",102,0)
 ;
"RTN","RCP321",103,0)
 S RCNODE("END")=$$NOW^XLFDT
"RTN","RCP321",104,0)
 S ^XTMP($T(+0),"FINISHED")=RCNODE("END")
"RTN","RCP321",105,0)
 ; create MailMan message text
"RTN","RCP321",106,0)
 S RCBODY(0)=0
"RTN","RCP321",107,0)
 D ADD2TXT(.RCBODY,"Finished RCDPE COMMENT HISTORY file #344.73 initialization task.")
"RTN","RCP321",108,0)
 D ADD2TXT(.RCBODY," Process begun: "_$$FMTE^XLFDT(RCNODE("BEG")))
"RTN","RCP321",109,0)
 D ADD2TXT(.RCBODY," Process ended: "_$$FMTE^XLFDT(RCNODE("END")))
"RTN","RCP321",110,0)
 D ADD2TXT(.RCBODY," Comment count: "_$$FMTE^XLFDT(RCNODE("CNT")))
"RTN","RCP321",111,0)
 D ADD2TXT(.RCBODY,"Report generated by the "_$T(+0)_" post-initialization routine.")
"RTN","RCP321",112,0)
 ;
"RTN","RCP321",113,0)
 ; save MailMan message text
"RTN","RCP321",114,0)
 M ^XTMP($T(+0),"MAIL MSG",$$NOW^XLFDT)=RCBODY
"RTN","RCP321",115,0)
 ; send via MailMan
"RTN","RCP321",116,0)
 S RCSUBJ="PRCA*4.5*321 Post Install Routine Completed"
"RTN","RCP321",117,0)
 S RCTO(.5)="",RCTO(DUZ)=""  ; POSTMASTER and user who queued it
"RTN","RCP321",118,0)
 S RCTO("G.RCDPE PAYMENTS MGMT")=""
"RTN","RCP321",119,0)
 S XMINSTR("FROM")="POSTMASTER"
"RTN","RCP321",120,0)
 ;
"RTN","RCP321",121,0)
 D SENDMSG^XMXAPI(DUZ,RCSUBJ,"RCBODY",.RCTO,.XMINSTR,.RCZR) ; send message
"RTN","RCP321",122,0)
 Q
"RTN","RCP321",123,0)
 ;
"RTN","RCP321",124,0)
ADD2TXT(TXARY,LN) ; add LN to TXARY for MailMan Message
"RTN","RCP321",125,0)
 ; TXARY passed by ref.
"RTN","RCP321",126,0)
 I $G(LN)'="" S TXARY(0)=$G(TXARY(0))+1,TXARY(TXARY(0),0)=LN
"RTN","RCP321",127,0)
 Q
"RTN","RCP321",128,0)
 ;
"RTN","RCP321",129,0)
PURGE ; Clear any existing history
"RTN","RCP321",130,0)
 N DA,DIK,RCPURGE,SUB
"RTN","RCP321",131,0)
 S SUB=0
"RTN","RCP321",132,0)
 F  S SUB=$O(^RCY(344.73,SUB)) Q:'SUB  D
"RTN","RCP321",133,0)
 .S DIK="^RCY(344.73,",DA=SUB D ^DIK
"RTN","RCP321",134,0)
 K ^XTMP($T(+0))
"RTN","RCP321",135,0)
 Q
"SEC","^DIC",344.73,344.73,0,"AUDIT")
@
"SEC","^DIC",344.73,344.73,0,"DD")
@
"SEC","^DIC",344.73,344.73,0,"DEL")
@
"SEC","^DIC",344.73,344.73,0,"LAYGO")
@
"SEC","^DIC",344.73,344.73,0,"RD")
@
"SEC","^DIC",344.73,344.73,0,"WR")
@
"UP",344,344.01,-1)
344^1
"UP",344,344.01,0)
344.01
"UP",344.49,344.491,-1)
344.49^1
"UP",344.49,344.491,0)
344.491
"VER")
8.0^22.2
"^DD",342,342,7.07,0)
AUTO-AUDIT MEDICAL EDI BILLS^S^0:No;1:Yes;^7;7^Q
"^DD",342,342,7.07,.1)
ENABLE AUTO-AUDIT MEDICAL EDI BILLS
"^DD",342,342,7.07,3)
Enter 1 to allow Auto-auditing of Medical EDI bills, 0 to disallow. 
"^DD",342,342,7.07,21,0)
^^2^2^3170818^
"^DD",342,342,7.07,21,1,0)
A Yes/No prompt to allow a site to audit their Medical EDI Bills during
"^DD",342,342,7.07,21,2,0)
the AR Nightly Process.
"^DD",342,342,7.07,23,0)
^^2^2^3170818^
"^DD",342,342,7.07,23,1,0)
A Yes/No prompt to allow a site to audit their Medical EDI Bills during
"^DD",342,342,7.07,23,2,0)
the AR Nightly Process [PRCA NIGHTLY PROCESS].
"^DD",342,342,7.07,"DT")
3171011
"^DD",342,342,7.08,0)
AUTO-AUDIT RX EDI BILLS^S^0:No;1:Yes;^7;8^Q
"^DD",342,342,7.08,.1)
ENABLE AUTO-AUDIT RX EDI BILLS
"^DD",342,342,7.08,3)
Enter 1 to allow Auto-auditing of Pharmacy EDI bills, 0 to disallow. 
"^DD",342,342,7.08,21,0)
^^2^2^3170818^
"^DD",342,342,7.08,21,1,0)
A Yes/No prompt to see if the site wishes to audit their Pharmacy EDI
"^DD",342,342,7.08,21,2,0)
Bills during the AR Nightly Process.
"^DD",342,342,7.08,23,0)
^^2^2^3170818^
"^DD",342,342,7.08,23,1,0)
A Yes/No prompt to see if the site wishes to audit their Pharmacy EDI
"^DD",342,342,7.08,23,2,0)
bills during the AR Nightly Process [PRCA NIGHTLY PROCESS].
"^DD",342,342,7.08,"DT")
3171011
"^DD",344,344,.03,0)
DATE OPENED^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
"^DD",344,344,.03,1,0)
^.1
"^DD",344,344,.03,1,1,0)
344^AO
"^DD",344,344,.03,1,1,1)
S ^RCY(344,"AO",$E(X,1,30),DA)=""
"^DD",344,344,.03,1,1,2)
K ^RCY(344,"AO",$E(X,1,30),DA)
"^DD",344,344,.03,1,1,"%D",0)
^^2^2^3170914^
"^DD",344,344,.03,1,1,"%D",1,0)
This cross reference by DATE OPENED was added to speed compilation of 
"^DD",344,344,.03,1,1,"%D",2,0)
the RCDP LIST OF RECEIPTS REPORT which is filtered by this field.
"^DD",344,344,.03,1,1,"DT")
3170524
"^DD",344,344,.03,21,0)
1^^1^1^2990507^
"^DD",344,344,.03,21,1,0)
This field contains the date/time the receipt was created.
"^DD",344,344,.03,"DT")
3170524
"^DD",344,344.01,.09,0)
PATIENT NAME OR BILL NUMBER^FXO^^0;9^D PNORBILL^RCDPURED K:'$G(X) X
"^DD",344,344.01,.09,.1)

"^DD",344,344.01,.09,1,0)
^.1
"^DD",344,344.01,.09,1,1,0)
^^TRIGGER^344.01^.03
"^DD",344,344.01,.09,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^RCY(344,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=DIV,X=X X ^DD(344.01,.09,1,1,1.4)
"^DD",344,344.01,.09,1,1,1.4)
S DIH=$S($D(^RCY(344,DIV(0),1,DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=344.01,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))
"^DD",344,344.01,.09,1,1,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^RCY(344,D0,1,D1,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(344.01,.09,1,1,2.4)
"^DD",344,344.01,.09,1,1,2.4)
S DIH=$S($D(^RCY(344,DIV(0),1,DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=344.01,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))
"^DD",344,344.01,.09,1,1,3)
Needed to set Account field
"^DD",344,344.01,.09,1,1,"%D",0)
^^5^5^2930923^
"^DD",344,344.01,.09,1,1,"%D",1,0)
This field allows a customized look-up to the Patient file
"^DD",344,344.01,.09,1,1,"%D",2,0)
and Bill number file when prompting the user for "PATIENT NAME
"^DD",344,344.01,.09,1,1,"%D",3,0)
OR BILL NUMBER" during payment entry.  Once the user selects
"^DD",344,344.01,.09,1,1,"%D",4,0)
the Patient or Bill Number, this data is then moved to the
"^DD",344,344.01,.09,1,1,"%D",5,0)
"Account" field for VA FileMan Compatiblity for printing.
"^DD",344,344.01,.09,1,1,"CREATE VALUE")
INTERNAL(#.09)
"^DD",344,344.01,.09,1,1,"DELETE VALUE")
@
"^DD",344,344.01,.09,1,1,"DT")
2920619
"^DD",344,344.01,.09,1,1,"FIELD")
ACCOUNT
"^DD",344,344.01,.09,2)
S Y(0)=Y S Y=$P(@("^"_$P(Y,";",2)_+Y_",0)"),"^")
"^DD",344,344.01,.09,2.1)
S Y=$P(@("^"_$P(Y,";",2)_+Y_",0)"),"^")
"^DD",344,344.01,.09,3)
Enter one of following: Patient Name, Bill No, TRICARE Authorization No, ECME Rx Reference Number or Prescription Number.
"^DD",344,344.01,.09,4)
D HLP09^RCDPURED
"^DD",344,344.01,.09,22)

"^DD",344,344.01,.09,"DT")
3170619
"^DD",344.31,344.31,3,0)
DEBIT/CREDIT FLAG^FJ1^^0;16^K:$L(X)>1!($L(X)<1)!'(X?1"D") X
"^DD",344.31,344.31,3,3)
Answer must be 1 character in length.
"^DD",344.31,344.31,3,21,0)
^^2^2^3170627^^
"^DD",344.31,344.31,3,21,1,0)
This field contains a "D" if the EFT is a debit EFT.  This field is
"^DD",344.31,344.31,3,21,2,0)
programmatically generated and should never be updated by a user.
"^DD",344.31,344.31,3,"DT")
3170627
"^DD",344.49,344.491,.1,0)
RECEIPT LINE COMMENT^FJ60^^0;10^K:$L(X)>60!($L(X)<3) X
"^DD",344.49,344.491,.1,3)
Answer must be 3-60 characters in length.
"^DD",344.49,344.491,.1,21,0)
^^2^2^3030429^
"^DD",344.49,344.491,.1,21,1,0)
This is the text that will be used to create a bill comment for the
"^DD",344.49,344.491,.1,21,2,0)
bill referenced by this sequence.
"^DD",344.49,344.491,.1,"DT")
3170512
"^DD",344.6,344.6,.01,0)
PAYER NAME^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
"^DD",344.6,344.6,.01,1,0)
^.1^^0
"^DD",344.6,344.6,.01,3)
Answer must be 3 to 60 characters. This field should only be populated programmatically.
"^DD",344.6,344.6,.01,21,0)
^.001^2^2^3140506^^^^
"^DD",344.6,344.6,.01,21,1,0)
This is the payer name whose settings are defined by this entry. This 
"^DD",344.6,344.6,.01,21,2,0)
field is programmatically generated and should never be updated by a user.
"^DD",344.6,344.6,.01,"DT")
3170601
"^DD",344.6,344.6,.09,0)
PHARMACY PAYER^S^1:Yes;0:No;^0;9^Q
"^DD",344.6,344.6,.09,3)
Enter 'Yes' to flag this payer as a pharmacy payer.
"^DD",344.6,344.6,.09,21,0)
^^1^1^3170828^
"^DD",344.6,344.6,.09,21,1,0)
This field is used to flag a specified payer as a pharmacy payer.
"^DD",344.6,344.6,.09,"DT")
3170912
"^DD",344.6,344.6,.1,0)
TRICARE PAYER^S^1:Yes;0:No;^0;10^Q
"^DD",344.6,344.6,.1,3)
Enter 'Yes' to flag this payer as a Tricare payer.
"^DD",344.6,344.6,.1,21,0)
^^1^1^3170828^
"^DD",344.6,344.6,.1,21,1,0)
This field is used to flag a specified payer as a Tricare payer.
"^DD",344.6,344.6,.1,"DT")
3170912
"^DD",344.61,344.61,.06,0)
MEDICAL EFT POST PREVENT DAYS^NJ2,0^^0;6^K:+X'=X!(X>60)!(X<14)!(X?.E1"."1.N) X
"^DD",344.61,344.61,.06,.1)
NUMBER OF DAYS (AGE) OF UNPOSTED MEDICAL EFTS TO PREVENT POSTING: 
"^DD",344.61,344.61,.06,3)
Enter number of days an EFT can age before preventing newer EFTs (14-60).
"^DD",344.61,344.61,.06,21,0)
^^6^6^3170912^
"^DD",344.61,344.61,.06,21,1,0)
The number of calendar days beyond which un-posted medical payments 
"^DD",344.61,344.61,.06,21,2,0)
(EFTs) will prevent the user from posting newer medical EFTs without 
"^DD",344.61,344.61,.06,21,3,0)
posting the older payments first.
"^DD",344.61,344.61,.06,21,4,0)
 
"^DD",344.61,344.61,.06,21,5,0)
A value of 21 is the initial default.  The user can reset the value to a 
"^DD",344.61,344.61,.06,21,6,0)
number from 14 to 60, inclusive, but cannot delete the value.
"^DD",344.61,344.61,.06,"DT")
3170926
"^DD",344.61,344.61,.07,0)
PHARMACY EFT POST PREVENT DAYS^NJ3,0^^0;7^K:+X'=X!(X>365)!(X<21)!(X?.E1"."1.N) X
"^DD",344.61,344.61,.07,.1)
NUMBER OF DAYS (AGE) OF UNPOSTED PHARMACY EFTS TO PREVENT POSTING: 
"^DD",344.61,344.61,.07,3)
Type a number between 21 and 365, 0 decimal digits.
"^DD",344.61,344.61,.07,21,0)
^^6^6^3170912^
"^DD",344.61,344.61,.07,21,1,0)
The number of calendar days beyond which unposted pharmacy payments 
"^DD",344.61,344.61,.07,21,2,0)
(EFTs) will prevent the user from posting newer pharmacy EFTs without 
"^DD",344.61,344.61,.07,21,3,0)
posting the older payments first.
"^DD",344.61,344.61,.07,21,4,0)
 
"^DD",344.61,344.61,.07,21,5,0)
The user can reset the value to a number between 21 and 365, inclusive,
"^DD",344.61,344.61,.07,21,6,0)
but the user cannot delete the value.
"^DD",344.61,344.61,.07,"DT")
3170912
"^DD",344.61,344.61,.1,0)
DAY FOR WORKLOAD NOTIFICATIONS^RS^MO:MONDAY;TU:TUESDAY;WE:WEDNESDAY;TH:THURSDAY;FR:FRIDAY;SA:SATURDAY;SU:SUNDAY;^0;10^Q
"^DD",344.61,344.61,.1,.1)
SELECT DAY TO SEND WORKLOAD NOTIFICATION
"^DD",344.61,344.61,.1,3)
Select day of week for workload notification bulletins.
"^DD",344.61,344.61,.1,21,0)
^^2^2^3170911^
"^DD",344.61,344.61,.1,21,1,0)
This field determines on which day of the week that workload notification 
"^DD",344.61,344.61,.1,21,2,0)
bulletins are to be sent to the RCDPE AUDIT mail group.
"^DD",344.61,344.61,.1,23,0)
^^2^2^3170911^
"^DD",344.61,344.61,.1,23,1,0)
This field is used in the PRCA nightly process option to trigger workload 
"^DD",344.61,344.61,.1,23,2,0)
notifications to the RCDPE AUDIT mail group.
"^DD",344.61,344.61,.1,"DT")
3170915
"^DD",344.73,344.73,0)
FIELD^^4^5
"^DD",344.73,344.73,0,"DT")
3171016
"^DD",344.73,344.73,0,"IX","B",344.73,.01)

"^DD",344.73,344.73,0,"NM","RCDPE COMMENT HISTORY")

"^DD",344.73,344.73,0,"VRPK")
PRCA
"^DD",344.73,344.73,.01,0)
RECEIPT #^RP344'^RCY(344,^0;1^Q
"^DD",344.73,344.73,.01,1,0)
^.1
"^DD",344.73,344.73,.01,1,1,0)
344.73^B
"^DD",344.73,344.73,.01,1,1,1)
S ^RCY(344.73,"B",$E(X,1,30),DA)=""
"^DD",344.73,344.73,.01,1,1,2)
K ^RCY(344.73,"B",$E(X,1,30),DA)
"^DD",344.73,344.73,.01,3)
Enter the receipt number.
"^DD",344.73,344.73,.01,21,0)
^^1^1^3170516^
"^DD",344.73,344.73,.01,21,1,0)
This is the receipt number for the comment.
"^DD",344.73,344.73,.01,23,0)
^^1^1^3170516^
"^DD",344.73,344.73,.01,23,1,0)
This field is a pointer to the AR BATCH PAYMENT file #344.
"^DD",344.73,344.73,.01,"DT")
3170526
"^DD",344.73,344.73,1,0)
LINE NUMBER^RNJ4,0^^0;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1.N) X
"^DD",344.73,344.73,1,3)
Type a number between 1 and 9999, 0 decimal digits.
"^DD",344.73,344.73,1,21,0)
^^2^2^3170516^
"^DD",344.73,344.73,1,21,1,0)
This field is the number of the receipt line that the comment was entered 
"^DD",344.73,344.73,1,21,2,0)
for.
"^DD",344.73,344.73,1,23,0)
^^1^1^3170516^
"^DD",344.73,344.73,1,23,1,0)
This is the IEN of the AR BATCH PAYMENT #344.01 TRANSACTION sub-file.
"^DD",344.73,344.73,1,"DT")
3170526
"^DD",344.73,344.73,2,0)
USER^RP200'^VA(200,^0;3^Q
"^DD",344.73,344.73,2,3)
Enter the user who entered the receipt line comment.
"^DD",344.73,344.73,2,21,0)
^^1^1^3170516^
"^DD",344.73,344.73,2,21,1,0)
This is the user who entered the comment against the receipt line.
"^DD",344.73,344.73,2,23,0)
^^1^1^3170516^
"^DD",344.73,344.73,2,23,1,0)
This field is a pointer to the NEW PERSON file #200.
"^DD",344.73,344.73,2,"DT")
3170526
"^DD",344.73,344.73,3,0)
DATE/TIME ENTERED^RD^^0;4^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",344.73,344.73,3,3)
Enter the date and time the comment was entered.
"^DD",344.73,344.73,3,21,0)
^^1^1^3170516^
"^DD",344.73,344.73,3,21,1,0)
This is the date/time the receipt line comment was entered.
"^DD",344.73,344.73,3,"DT")
3170526
"^DD",344.73,344.73,4,0)
RECEIPT COMMENT^RFJ60X^^0;5^S X=$$TRIM^XLFSTR(X) K:$L(X)>60!($L(X)<1) X
"^DD",344.73,344.73,4,3)
Answer must be 1-60 characters in length.
"^DD",344.73,344.73,4,4)

"^DD",344.73,344.73,4,21,0)
^^1^1^3170516^
"^DD",344.73,344.73,4,21,1,0)
This field is the comment entered against the receipt line.
"^DD",344.73,344.73,4,23,0)
^^2^2^3170516^
"^DD",344.73,344.73,4,23,1,0)
This field stores a history of comments entered into the receipt file 
"^DD",344.73,344.73,4,23,2,0)
#344.41 field #1.02.
"^DD",344.73,344.73,4,"DT")
3170516
"^DIC",344.73,344.73,0)
RCDPE COMMENT HISTORY^344.73
"^DIC",344.73,344.73,0,"GL")
^RCY(344.73,
"^DIC",344.73,344.73,"%",0)
^1.005^^0
"^DIC",344.73,344.73,"%D",0)
^^1^1^3170517^
"^DIC",344.73,344.73,"%D",1,0)
This file holds the history of receipt line comments.
"^DIC",344.73,"B","RCDPE COMMENT HISTORY",344.73)

**END**
**END**
