KIDS Distribution saved on Apr 23, 2009@13:57:52
VBECS BUNDLE 4/23/09 2:00PM
**KIDS**:VBECS BUNDLE 1.0^VBECS 1.0^LR*5.2*325^

**INSTALL NAME**
VBECS BUNDLE 1.0
"BLD",5349,0)
VBECS BUNDLE 1.0^VBECS^1^3090423^y
"BLD",5349,1,0)
^^449^449^3090423^
"BLD",5349,1,1,0)
VBEC*1*0 is being exported as part of the VBECS_BUNDLE_1.KID package 
"BLD",5349,1,2,0)
release. The installation of this bundle will be controlled by phase 
"BLD",5349,1,3,0)
release.  An Implementation Manager will be assigned to your site and 
"BLD",5349,1,4,0)
will contact your POC for VBECS and will provide your site with the 
"BLD",5349,1,5,0)
location of the KIDS Host Files prior to your scheduled installation date 
"BLD",5349,1,6,0)
Installation Sequence.  The VBECS BUNDLE is a host file that consists of 
"BLD",5349,1,7,0)
both VBEC*1*0 and LR*5.2*325.  Installation of the VBECS BUNDLE will 
"BLD",5349,1,8,0)
automatically install both VBEC*1*0 and LR*5.2*325
"BLD",5349,1,9,0)
=====================
"BLD",5349,1,10,0)
 
"BLD",5349,1,11,0)
I. OVERVIEW
"BLD",5349,1,12,0)
The VistA Blood Establishment Computer Software (VBECS) shall facilitate 
"BLD",5349,1,13,0)
ongoing compliance with Food and Drug Administration (FDA) standards for 
"BLD",5349,1,14,0)
medical devices and enhance the Department of Veterans Affairs (VA) 
"BLD",5349,1,15,0)
Veterans Health Administration's (VHA) ability to deliver quality 
"BLD",5349,1,16,0)
services to meet the needs of the user community. VBECS is considered an 
"BLD",5349,1,17,0)
encapsulated medical device and therefore does not communicate directly 
"BLD",5349,1,18,0)
with other VistA applications.
"BLD",5349,1,19,0)
 
"BLD",5349,1,20,0)
Two new namespaces are being introduced into the VistA enterprise with 
"BLD",5349,1,21,0)
the release of VBECS. The first, gov.va.med.vbecs, represents the Blood 
"BLD",5349,1,22,0)
Bank medical device software. The second, VBEC, represents the VBECS 
"BLD",5349,1,23,0)
Application Interfacing Support software. The VBEC namespace, created in 
"BLD",5349,1,24,0)
the VBEC 1.0 KIDS build, will be added to the Package file in VistA and 
"BLD",5349,1,25,0)
is used to identify the M software and files that support interfacing 
"BLD",5349,1,26,0)
other VistA applications with the Blood Bank medical device. This 
"BLD",5349,1,27,0)
software is not released as part of the Blood Bank medical device.
"BLD",5349,1,28,0)
 
"BLD",5349,1,29,0)
II. FUNCTIONAL OVERVIEW
"BLD",5349,1,30,0)
The reengineered Blood Bank system uses VistALink and Health Level Seven 
"BLD",5349,1,31,0)
(HL7) messaging for data exchange with a client-server mode application 
"BLD",5349,1,32,0)
interfacing architecture through M Application Programmer Interfaces 
"BLD",5349,1,33,0)
(APIs), VistA Remote Procedure Calls (RPCs), and HL7 interfaces released 
"BLD",5349,1,34,0)
in the VBEC 1.0 KIDS build.
"BLD",5349,1,35,0)
 
"BLD",5349,1,36,0)
This software will provide a transparent database transition through the 
"BLD",5349,1,37,0)
use of M APIs, RPCs, and HL7 interfaces. The APIs released in this build 
"BLD",5349,1,38,0)
will allow other VistA applications to continue the retrieval of Blood 
"BLD",5349,1,39,0)
Bank data stored in the Blood Bank system. The RPCs will allow the Blood 
"BLD",5349,1,40,0)
Bank system to continue to retrieve data from other VistA applications. 
"BLD",5349,1,41,0)
The HL7 interfaces will allow the exchange of data between the Blood Bank 
"BLD",5349,1,42,0)
system and other VistA applications.
"BLD",5349,1,43,0)
 
"BLD",5349,1,44,0)
III. TECHNICAL COMPONENTS
"BLD",5349,1,45,0)
This section lists the components of the VBECS, and LAB SERVICES 
"BLD",5349,1,46,0)
installed in VistA by the VBEC BUNDLE 1.0 Multi Package KIDS build that 
"BLD",5349,1,47,0)
supports VBECS.
"BLD",5349,1,48,0)
 
"BLD",5349,1,49,0)
 
"BLD",5349,1,50,0)
MAIL GROUP:
"BLD",5349,1,51,0)
===========
"BLD",5349,1,52,0)
 VBECS INTERFACE ADMIN - Receives alert mail messages when problems  
"BLD",5349,1,53,0)
arise with VBECS Application Interfacing. The users added to this  group 
"BLD",5349,1,54,0)
would be Lab/Blood Bank supervisors and/or IRM responsible for  managing 
"BLD",5349,1,55,0)
the VBECS package and interfaces.
"BLD",5349,1,56,0)
 
"BLD",5349,1,57,0)
ROUTINES:
"BLD",5349,1,58,0)
=========
"BLD",5349,1,59,0)
VBECA1
"BLD",5349,1,60,0)
VBECA1A
"BLD",5349,1,61,0)
VBECA1B
"BLD",5349,1,62,0)
VBECA1B1
"BLD",5349,1,63,0)
VBECA3
"BLD",5349,1,64,0)
VBECA3A
"BLD",5349,1,65,0)
VBECA3B
"BLD",5349,1,66,0)
VBECA3C
"BLD",5349,1,67,0)
VBECA4
"BLD",5349,1,68,0)
VBECA5A
"BLD",5349,1,69,0)
VBECA5B
"BLD",5349,1,70,0)
VBECA6
"BLD",5349,1,71,0)
VBECA7
"BLD",5349,1,72,0)
VBECA7A
"BLD",5349,1,73,0)
VBECA7A1
"BLD",5349,1,74,0)
VBECA7B
"BLD",5349,1,75,0)
VBECENV
"BLD",5349,1,76,0)
VBECHLRT
"BLD",5349,1,77,0)
VBECLU
"BLD",5349,1,78,0)
VBECLU0
"BLD",5349,1,79,0)
VBECLU3
"BLD",5349,1,80,0)
VBECPOST
"BLD",5349,1,81,0)
VBECRL
"BLD",5349,1,82,0)
VBECRPC
"BLD",5349,1,83,0)
VBECRPC1
"BLD",5349,1,84,0)
VBECRPCA
"BLD",5349,1,85,0)
VBECRPCB
"BLD",5349,1,86,0)
VBECRPCC
"BLD",5349,1,87,0)
VBECRPCD
"BLD",5349,1,88,0)
VBECRPCE
"BLD",5349,1,89,0)
VBECRPCH
"BLD",5349,1,90,0)
VBECRPCM
"BLD",5349,1,91,0)
VBECRPCP
"BLD",5349,1,92,0)
VBECRPCW
"BLD",5349,1,93,0)
VBECVLC
"BLD",5349,1,94,0)
 
"BLD",5349,1,95,0)
 
"BLD",5349,1,96,0)
OPTION:
"BLD",5349,1,97,0)
=======
"BLD",5349,1,98,0)
 VBECS VISTALINK CONTEXT - (B)roker type option used by VistALink to
"BLD",5349,1,99,0)
 authenticate users. All Blood Bank users must have this option
"BLD",5349,1,100,0)
 assigned as a Secondary Menu Option.
"BLD",5349,1,101,0)
 
"BLD",5349,1,102,0)
 
"BLD",5349,1,103,0)
PROTOCOL:
"BLD",5349,1,104,0)
=========
"BLD",5349,1,105,0)
 VBECS ADT-AO8 CLIENT - This protocol is used to deliver HL7 messages
"BLD",5349,1,106,0)
 from VistA to VBECS via the VBECSPTU logical link.
"BLD",5349,1,107,0)
 
"BLD",5349,1,108,0)
 VBECS ADT-A08 ROUTER - This protocol is used to receive an HL7 message
"BLD",5349,1,109,0)
 from the VAFC ADT-A08 SERVER protocol and executes routing logic to
"BLD",5349,1,110,0)
 determine whether the message is to be forwarded to VBECS. VBECS
"BLD",5349,1,111,0)
 receives only messages that contain changes to various patient
"BLD",5349,1,112,0)
 demographic data.
"BLD",5349,1,113,0)
 
"BLD",5349,1,114,0)
 VBECS ADT-AO8 SERVER - This event driver protocol is triggered by the
"BLD",5349,1,115,0)
 
"BLD",5349,1,116,0)
 VBECS ADT-A40 CLIENT - This protocol is used to deliver the HL7
"BLD",5349,1,117,0)
 message from VistA to VBECS via the VBECSPTM logical link.
"BLD",5349,1,118,0)
 
"BLD",5349,1,119,0)
 VBECS ADT-A40 SERVER - This event driver protocol is triggered by the
"BLD",5349,1,120,0)
 
"BLD",5349,1,121,0)
 
"BLD",5349,1,122,0)
 VBECS OMG CLIENT - This is the subscriber protocol to the VBECS OMG
"BLD",5349,1,123,0)
 SERVER protocol that receives the HL7 message from VBECS providing
"BLD",5349,1,124,0)
 order updates to the original order message.
"BLD",5349,1,125,0)
 
"BLD",5349,1,126,0)
 VBECS OMG SERVER - This protocol is triggered when an HL7 message from
"BLD",5349,1,127,0)
 VBECS is received by the HL7 package.
"BLD",5349,1,128,0)
 
"BLD",5349,1,129,0)
HL7 APPLICATION PARAMETER:
"BLD",5349,1,130,0)
==========================
"BLD",5349,1,131,0)
 VBECS - This HL7 Application represents the VBECS side of the VBECS/CPRS 
"BLD",5349,1,132,0)
interface.
"BLD",5349,1,133,0)
 
"BLD",5349,1,134,0)
 VBECS ADT - This HL7 Application represents the receiving application
"BLD",5349,1,135,0)
 of the Patient Update and Patient Merge router protocols.
"BLD",5349,1,136,0)
 
"BLD",5349,1,137,0)
 VBECS TRIGGER - This HL7 Application represents the VBECS side of the
"BLD",5349,1,138,0)
 Patient Update and Patient Merge interfaces.
"BLD",5349,1,139,0)
 
"BLD",5349,1,140,0)
HL LOGICAL LINK:
"BLD",5349,1,141,0)
================
"BLD",5349,1,142,0)
 VBECS-OERR - Used to transmit HL7 messages from VBECS to CPRS.
"BLD",5349,1,143,0)
 
"BLD",5349,1,144,0)
 VBECSPTM - Used to transmit HL7 messages from VistA to VBECS when a
"BLD",5349,1,145,0)
 patient merge event occurs.
"BLD",5349,1,146,0)
 
"BLD",5349,1,147,0)
 VBECSPTU - Used to transmit HL7 messages from VistA to VBECS when a
"BLD",5349,1,148,0)
 patient update event occurs.
"BLD",5349,1,149,0)
 
"BLD",5349,1,150,0)
PARAMETER DEFINITION:
"BLD",5349,1,151,0)
=====================
"BLD",5349,1,152,0)
 VBECS VISTALINK - Parameter definition used to identify all VBECS 
"BLD",5349,1,153,0)
Parameters.
"BLD",5349,1,154,0)
 
"BLD",5349,1,155,0)
PARAMETERS:
"BLD",5349,1,156,0)
===========
"BLD",5349,1,157,0)
 LISTENER IP ADDRESS - Stores the value of the Blood Bank medical
"BLD",5349,1,158,0)
 device server where the VistALink listener is installed.
"BLD",5349,1,159,0)
 
"BLD",5349,1,160,0)
 LISTENER PORT NUMBER - Stores the value of the port number where Blood
"BLD",5349,1,161,0)
 Bank medical device VistALink listener is listening.
"BLD",5349,1,162,0)
 
"BLD",5349,1,163,0)
 These Parameters are used by M APIs to build the XML messages used by 
"BLD",5349,1,164,0)
VistALink.
"BLD",5349,1,165,0)
 VBECS Blood Products
"BLD",5349,1,166,0)
 VBECS DSS Extract
"BLD",5349,1,167,0)
 VBECS Order Entry
"BLD",5349,1,168,0)
 VBECS Patient ABID
"BLD",5349,1,169,0)
 VBECS Patient ABO_RH
"BLD",5349,1,170,0)
 VBECS Patient Available Units
"BLD",5349,1,171,0)
 VBECS Patient Report
"BLD",5349,1,172,0)
 VBECS Patient TRRX
"BLD",5349,1,173,0)
 VBECS Patient Transfusion History
"BLD",5349,1,174,0)
 VBECS Update Workload Event
"BLD",5349,1,175,0)
 VBECS Workload
"BLD",5349,1,176,0)
 
"BLD",5349,1,177,0)
REMOTE PROCEDURE:
"BLD",5349,1,178,0)
=================
"BLD",5349,1,179,0)
 VBECS ACCESSION AREA LOOKUP
"BLD",5349,1,180,0)
 VBECS BLOOD BANK USER LOOKUP
"BLD",5349,1,181,0)
 VBECS DIVISION LOOKUP
"BLD",5349,1,182,0)
 VBECS DSS EXTRACT
"BLD",5349,1,183,0)
 VBECS HCPCS CODES LOOKUP
"BLD",5349,1,184,0)
 VBECS HOSPITAL LOCATION LOOKUP
"BLD",5349,1,185,0)
 VBECS LAB ACCESSION UID LOOKUP
"BLD",5349,1,186,0)
 VBECS LAB ORDER LOOKUP BY UID
"BLD",5349,1,187,0)
 VBECS LAB TEST RESULTS LOOKUP
"BLD",5349,1,188,0)
 VBECS LABORATORY TEST LOOKUP
"BLD",5349,1,189,0)
 VBECS MED PROFILE LOOKUP
"BLD",5349,1,190,0)
 VBECS PATIENT LOOKUP
"BLD",5349,1,191,0)
 VBECS PROVIDER LOOKUP
"BLD",5349,1,192,0)
 VBECS WORKLOAD CODES LOOKUP
"BLD",5349,1,193,0)
 
"BLD",5349,1,194,0)
GLOBALS - FILES:
"BLD",5349,1,195,0)
===============
"BLD",5349,1,196,0)
 ^VBEC(6002.01, - VBECS WORKLOAD CAPTURE File (#6002.01)
"BLD",5349,1,197,0)
 
"BLD",5349,1,198,0)
 ICRs:
"BLD",5349,1,199,0)
 =====
"BLD",5349,1,200,0)
 The following ICRs were created to allow data transfer between the Blood 
"BLD",5349,1,201,0)
Bank medical device and the VBECS Application Interfacing Support 
"BLD",5349,1,202,0)
software.
"BLD",5349,1,203,0)
 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617,
"BLD",5349,1,204,0)
 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4633
"BLD",5349,1,205,0)
 
"BLD",5349,1,206,0)
 The following ICRs were created, or modified, to allow data transfer 
"BLD",5349,1,207,0)
between the VBECS Application Interfacing Support software and other 
"BLD",5349,1,208,0)
VistA applications.
"BLD",5349,1,209,0)
 1587, 1963, 2400, 2503, 2817, 3176, 3177, 3181, 3631, 3879, 4629,
"BLD",5349,1,210,0)
 4636, 4766, 4767, 4773, 4774, 4776, 4779,
"BLD",5349,1,211,0)
 
"BLD",5349,1,212,0)
ASSOCIATED REMEDY TICKETS
"BLD",5349,1,213,0)
=========================
"BLD",5349,1,214,0)
 N/A
"BLD",5349,1,215,0)
 
"BLD",5349,1,216,0)
TEST SITES:
"BLD",5349,1,217,0)
===========
"BLD",5349,1,218,0)
 HEARTLAND-EAST HCS
"BLD",5349,1,219,0)
 PHILADELPHIA, PA
"BLD",5349,1,220,0)
 SAN DIEGO, CA
"BLD",5349,1,221,0)
 
"BLD",5349,1,222,0)
SACC Exemptions:
"BLD",5349,1,223,0)
================
"BLD",5349,1,224,0)
XINDEX displays the following warning. The Standards And Conventions 
"BLD",5349,1,225,0)
Committee granted an exemption to allow the use of a star read on May 4th 
"BLD",5349,1,226,0)
2006.
"BLD",5349,1,227,0)
 
"BLD",5349,1,228,0)
VBECRL   * *  114 Lines,  4099 Bytes, Checksum: B10917646
"BLD",5349,1,229,0)
         FOR  READ VBECX#VBECREAD:VBECTO SET TOFLAG=$T DO:VBECFRST CHK 
"BLD",5349,1,230,0)
DO:'VBECS
"BLD",5349,1,231,0)
          TOP  QUIT:DONE
"BLD",5349,1,232,0)
   READ+6       I - Star or pound READ used.
"BLD",5349,1,233,0)
 
"BLD",5349,1,234,0)
Installation Sequence 
"BLD",5349,1,235,0)
======================
"BLD",5349,1,236,0)
The files listed below represent the patches that will be part of the 
"BLD",5349,1,237,0)
controlled phased release.  Follow the sequence listed below when your 
"BLD",5349,1,238,0)
phased installation occurs.
"BLD",5349,1,239,0)
 
"BLD",5349,1,240,0)
  1. LR*5.2*335
"BLD",5349,1,241,0)
  2. LR*5.2*367
"BLD",5349,1,242,0)
  3. VBECS Bundle (consisting of VBEC*1*0 and LR*5.2*325)
"BLD",5349,1,243,0)
  4. VBEC*1.0*1
"BLD",5349,1,244,0)
  5. OR*3.0*212
"BLD",5349,1,245,0)
 
"BLD",5349,1,246,0)
Documentation Retrieval:
"BLD",5349,1,247,0)
 
"BLD",5349,1,248,0)
Documentation is available for the entire VBECS package on the 
"BLD",5349,1,249,0)
ANONYMOUS.SOFTWRE directory at one of the following Office of Information 
"BLD",5349,1,250,0)
(OI) Field Offices.  Sites may retrieve documentation in either ".PDF" or 
"BLD",5349,1,251,0)
"DOC" format in one of the following ways:
"BLD",5349,1,252,0)
 
"BLD",5349,1,253,0)
1.      The preferred method is to FTP the files from :
"BLD",5349,1,254,0)
Download.vista.domain.ext
"BLD",5349,1,255,0)
 
"BLD",5349,1,256,0)
2.      Sites may also elect to retrieve documentation directly from a 
"BLD",5349,1,257,0)
specific server as follows:
"BLD",5349,1,258,0)
       Albany                  DOMAIN.EXT
"BLD",5349,1,259,0)
       Hines                   DOMAIN.EXT
"BLD",5349,1,260,0)
       Salt Lake City          DOMAIN.EXT
"BLD",5349,1,261,0)
 
"BLD",5349,1,262,0)
NOTE:  The documentation files listed below will be listed in each of the 
"BLD",5349,1,263,0)
VBECS and LR patches that are part of the VBECS package and associate 
"BLD",5349,1,264,0)
patches, they only need to be downloaded once.
"BLD",5349,1,265,0)
 
"BLD",5349,1,266,0)
File Name                                   Retrieval format:  Binary
"BLD",5349,1,267,0)
===========                                 ==========================
"BLD",5349,1,268,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5349,1,269,0)
ADPAC Guide.doc
"BLD",5349,1,270,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5349,1,271,0)
ADPAC Guide.pdf
"BLD",5349,1,272,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5349,1,273,0)
Installation and User Guide.doc
"BLD",5349,1,274,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5349,1,275,0)
Installation and User Guide.pdf
"BLD",5349,1,276,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5349,1,277,0)
Technical Manual.doc
"BLD",5349,1,278,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5349,1,279,0)
Technical Manual.pdf
"BLD",5349,1,280,0)
VBECS Data Conversion Recommended Validation Method.xls
"BLD",5349,1,281,0)
VBECS Application Interfacing Support Software Installation and User 
"BLD",5349,1,282,0)
Configuration Guide.doc
"BLD",5349,1,283,0)
VBECS Application Interfacing Support Software Installation and User 
"BLD",5349,1,284,0)
Configuration Guide.pdf
"BLD",5349,1,285,0)
VBECS Implementation Process.xls
"BLD",5349,1,286,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"BLD",5349,1,287,0)
Guide.doc
"BLD",5349,1,288,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"BLD",5349,1,289,0)
Guide.pdf
"BLD",5349,1,290,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"BLD",5349,1,291,0)
Manual-Security Guide.doc
"BLD",5349,1,292,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"BLD",5349,1,293,0)
Manual-Security Guide.pdf
"BLD",5349,1,294,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.doc
"BLD",5349,1,295,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.pdf
"BLD",5349,1,296,0)
Known Defects and Anomalies.doc
"BLD",5349,1,297,0)
Known Defects and Anomalies.pdf
"BLD",5349,1,298,0)
 
"BLD",5349,1,299,0)
INSTALLATION INSTRUCTIONS:
"BLD",5349,1,300,0)
==========================
"BLD",5349,1,301,0)
 
"BLD",5349,1,302,0)
 Pre-Installation Items:
"BLD",5349,1,303,0)
 =======================
"BLD",5349,1,304,0)
 
"BLD",5349,1,305,0)
  Environment Check:
"BLD",5349,1,306,0)
  ------------------
"BLD",5349,1,307,0)
Programmer access is required to install this patch. Prior to 
"BLD",5349,1,308,0)
installation, the installer must ensure the DUZ(0) node of the DUZ array 
"BLD",5349,1,309,0)
is set to the "@" symbol.
"BLD",5349,1,310,0)
 
"BLD",5349,1,311,0)
  Users on the System:
"BLD",5349,1,312,0)
  --------------------
"BLD",5349,1,313,0)
   This patch may be installed with users on the system.
"BLD",5349,1,314,0)
 
"BLD",5349,1,315,0)
  Software Installation Time:
"BLD",5349,1,316,0)
  ---------------------------
"BLD",5349,1,317,0)
   The estimated installation time for this patch is less than 
"BLD",5349,1,318,0)
   5 minutes during non-peak hours.
"BLD",5349,1,319,0)
 
"BLD",5349,1,320,0)
  Queuing:
"BLD",5349,1,321,0)
  ---------
"BLD",5349,1,322,0)
   Note: Patch installation requires responses from the installer and
"BLD",5349,1,323,0)
   must not be queued.
"BLD",5349,1,324,0)
 
"BLD",5349,1,325,0)
  Pre-requisites:
"BLD",5349,1,326,0)
  ---------------
"BLD",5349,1,327,0)
   Patch installer must enter the collection sample types for new Lab
"BLD",5349,1,328,0)
   tests created during installation. Obtain sample types from the
"BLD",5349,1,329,0)
   Laboratory Information Manager
"BLD",5349,1,330,0)
 
"BLD",5349,1,331,0)
  Namespace:
"BLD",5349,1,332,0)
  ----------
"BLD",5349,1,333,0)
   The namespace for the VBECS Application Interfacing Support package is:
"BLD",5349,1,334,0)
    Name: VBECS - Prefix: VBEC
"BLD",5349,1,335,0)
 
"BLD",5349,1,336,0)
  Required Patches:
"BLD",5349,1,337,0)
  -----------------
"BLD",5349,1,338,0)
   Application                          Patch/Build
"BLD",5349,1,339,0)
   -----------------------------        -----------
"BLD",5349,1,340,0)
   Laboratory Services                  LR*5.2*187
"BLD",5349,1,341,0)
                                        LR*5.2*288
"BLD",5349,1,342,0)
                                        LR*5.2*294
"BLD",5349,1,343,0)
   Toolkit                              XT*7.3*58
"BLD",5349,1,344,0)
 
"BLD",5349,1,345,0)
  New File and Global Information:
"BLD",5349,1,346,0)
  --------------------------------
"BLD",5349,1,347,0)
   There is one new global, ^VBEC.  The ^VBEC global contains the
"BLD",5349,1,348,0)
   following new file.
"BLD",5349,1,349,0)
                                                        Journaling
"BLD",5349,1,350,0)
   File #   File Name                   Global Root     Recommended
"BLD",5349,1,351,0)
   ------   ------------------------    ------------    -----------
"BLD",5349,1,352,0)
   6002.01  VBECS WORKLOAD CAPTURE      ^VBEC(6002.01,  YES
"BLD",5349,1,353,0)
 
"BLD",5349,1,354,0)
  VBECS Configuration Checklists:
"BLD",5349,1,355,0)
  -------------------------------
"BLD",5349,1,356,0)
   a. Complete Appendix D: Configuration Checklist of the VistA Blood
"BLD",5349,1,357,0)
      Establishment Computer Software (VBECS) Installation Guide.
"BLD",5349,1,358,0)
   b. Complete Appendix B: Configuration Worksheet of the VBECS 
"BLD",5349,1,359,0)
      Application Interfacing Support Software Installation and User
"BLD",5349,1,360,0)
      Configuration Guide.
"BLD",5349,1,361,0)
 
"BLD",5349,1,362,0)
  Installation Steps:
"BLD",5349,1,363,0)
  ===================
"BLD",5349,1,364,0)
 
"BLD",5349,1,365,0)
The installation of VBECS and its related patches are being handled as a 
"BLD",5349,1,366,0)
controlled release. The implementation manager will contact you with the 
"BLD",5349,1,367,0)
location of the KIDS Host Files prior to your scheduled installation 
"BLD",5349,1,368,0)
date. The documentation files will be available for download in advance 
"BLD",5349,1,369,0)
of installation through the anonymous download site.
"BLD",5349,1,370,0)
 
"BLD",5349,1,371,0)
   1. Use the 'LOAD A DISTRIBUTION' option (#1) on the 'KIDS INSTALLATION'
"BLD",5349,1,372,0)
      menu, and enter: VBECS_BUNDLE_1.KID 
"BLD",5349,1,373,0)
 
"BLD",5349,1,374,0)
   2. From the 'Kernel Installation & Distribution System' menu, select
"BLD",5349,1,375,0)
      the Installation menu.
"BLD",5349,1,376,0)
 
"BLD",5349,1,377,0)
   3. From this menu, you may now elect to use the following options (when
"BLD",5349,1,378,0)
      prompted for INSTALL NAME, enter  VBECS BUNDLE 1.0)
"BLD",5349,1,379,0)
 
"BLD",5349,1,380,0)
      a. Backup a Transport Global - This option will create a backup
"BLD",5349,1,381,0)
         message of any routines exported with the patch.  It will NOT
"BLD",5349,1,382,0)
         backup any changes such as DDs or templates.
"BLD",5349,1,383,0)
 
"BLD",5349,1,384,0)
      b. Compare Transport Global to Current System - This option will
"BLD",5349,1,385,0)
         allow you to view all changes that will be made when the patch
"BLD",5349,1,386,0)
         is installed.  It compares all components of the patch
"BLD",5349,1,387,0)
         (routines, DDs, templates, etc.).
"BLD",5349,1,388,0)
 
"BLD",5349,1,389,0)
      c. Verify Checksums in Transport Global - This option will allow you
"BLD",5349,1,390,0)
         to ensure the integrity of the routines that are in the
"BLD",5349,1,391,0)
         transport global.
"BLD",5349,1,392,0)
 
"BLD",5349,1,393,0)
      d. Print Transport Global - this option will allow you to view the
"BLD",5349,1,394,0)
         components of the KIDS build.
"BLD",5349,1,395,0)
 
"BLD",5349,1,396,0)
   4. Use the Install Package(s) option and select package
"BLD",5349,1,397,0)
      VBECS_BUNDLE_1.KID.  This will automatically install VBEC*1*0
"BLD",5349,1,398,0)
      and LR*5.2*325
"BLD",5349,1,399,0)
 
"BLD",5349,1,400,0)
   5. When prompted "Enter the Coordinator for Mail Group 'VBECS INTERFACE
"BLD",5349,1,401,0)
      ADMIN':", please enter the name of the individual that will be
"BLD",5349,1,402,0)
      responsible for maintaining the new mail group. This mail group
"BLD",5349,1,403,0)
      receives notifications when an HL7 transmission, or a query through
"BLD",5349,1,404,0)
      the VBECS VistALink client, to the Blood Bank medical device has
"BLD",5349,1,405,0)
      failed. The users added to this group would be Lab/Blood Bank
"BLD",5349,1,406,0)
      supervisors and/or IRM staff responsible for managing the VBECS
"BLD",5349,1,407,0)
      package and interfaces.
"BLD",5349,1,408,0)
 
"BLD",5349,1,409,0)
   6. When prompted 'Want KIDS to Rebuild Menu Trees Upon Completion of
"BLD",5349,1,410,0)
      Install? NO//', respond Yes.
"BLD",5349,1,411,0)
 
"BLD",5349,1,412,0)
   7. When prompted 'VBECS Server IP Address:', enter the Cluster
"BLD",5349,1,413,0)
      IP address from Appendix B: Configuration Worksheet, Hardware
"BLD",5349,1,414,0)
      Information, row 1.
"BLD",5349,1,415,0)
 
"BLD",5349,1,416,0)
   8. When prompted 'VBECS VistALink Listener Service Port Number:',
"BLD",5349,1,417,0)
      enter the VistALink Listener Service port number from
"BLD",5349,1,418,0)
      Appendix B: Configuration Worksheet, Hardware Information, row 2
"BLD",5349,1,419,0)
      for installing in the TEST account, row 3 for installing in the
"BLD",5349,1,420,0)
      PRODUCTION account.
"BLD",5349,1,421,0)
 
"BLD",5349,1,422,0)
   9. When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"BLD",5349,1,423,0)
      No//', it is recommended you answer NO.
"BLD",5349,1,424,0)
 
"BLD",5349,1,425,0)
   8. When prompted 'Want to DISABLE Scheduled Options, Menu Options,
"BLD",5349,1,426,0)
      and Protocols? No//', respond NO
"BLD",5349,1,427,0)
 
"BLD",5349,1,428,0)
  11. When prompted by "Select COLLECTION SAMPLE for Lab Test
"BLD",5349,1,429,0)
      ABO/RH - LAB:," select the collection sample appropriate for the
"BLD",5349,1,430,0)
      ABO/Rh test.
"BLD",5349,1,431,0)
 
"BLD",5349,1,432,0)
  12. When prompted by "Select COLLECTION SAMPLE for Lab Test ANTIBODY
"BLD",5349,1,433,0)
      SCREEN - LAB:," select the collection sample appropriate for the
"BLD",5349,1,434,0)
      Antibody Screen test.
"BLD",5349,1,435,0)
 
"BLD",5349,1,436,0)
  13. When prompted by "Select COLLECTION SAMPLE for Lab Test DIRECT
"BLD",5349,1,437,0)
      ANTIGLOBULIN TEST - LAB:," select the collection sample appropriate
"BLD",5349,1,438,0)
      for the Direct Antiglobulin Test test.
"BLD",5349,1,439,0)
 
"BLD",5349,1,440,0)
  14. When prompted by "Select COLLECTION SAMPLE for Lab Test TRANSFUSION
"BLD",5349,1,441,0)
      REACTION WORKUP - LAB:," select the collection sample appropriate
"BLD",5349,1,442,0)
      for the Transfusion Reaction Workup test.
"BLD",5349,1,443,0)
 
"BLD",5349,1,444,0)
  15. When prompted by "Select COLLECTION SAMPLE for Lab Test 
"BLD",5349,1,445,0)
      TYPE & SCREEN - LAB:," select the collection sample appropriate for
"BLD",5349,1,446,0)
      the Type & Screen test.
"BLD",5349,1,447,0)
 
"BLD",5349,1,448,0)
  16. The POST Installation routine VBECPOST will be deleted from
"BLD",5349,1,449,0)
      your system automatically after successful installation.
"BLD",5349,6.3)
31
"BLD",5349,10,0)
^9.63^2^2
"BLD",5349,10,1,0)
VBECS 1.0^1
"BLD",5349,10,2,0)
LR*5.2*325^1
"BLD",5349,10,"B","LR*5.2*325",2)

"BLD",5349,10,"B","VBECS 1.0",1)

"MBREQ")
0
"PKG",649,-1)
1^1
"PKG",649,0)
VBECS^VBEC^VistA Blood Establishment Computer System
"PKG",649,1,0)
^9.41A^6^6^3030324^
"PKG",649,1,1,0)
This package, VBECS, exists in the M environment to
"PKG",649,1,2,0)
perform integrity checks on existing VistA Blood Bank
"PKG",649,1,3,0)
data, convert relevant data for migration to parallel
"PKG",649,1,4,0)
applications, and to migrate VistA data to parallel
"PKG",649,1,5,0)
applications when specific application events are
"PKG",649,1,6,0)
triggered.
"PKG",649,5)
Hines Office of Information
"PKG",649,20,0)
^9.402P^^
"PKG",649,22,0)
^9.49I^1^1
"PKG",649,22,1,0)
1.0^3090423^3080103^1
"PKG",649,22,1,1,0)
^^449^449^3090423
"PKG",649,22,1,1,1,0)
VBEC*1*0 is being exported as part of the VBECS_BUNDLE_1.KID package 
"PKG",649,22,1,1,2,0)
release. The installation of this bundle will be controlled by phase 
"PKG",649,22,1,1,3,0)
release.  An Implementation Manager will be assigned to your site and 
"PKG",649,22,1,1,4,0)
will contact your POC for VBECS and will provide your site with the 
"PKG",649,22,1,1,5,0)
location of the KIDS Host Files prior to your scheduled installation date 
"PKG",649,22,1,1,6,0)
Installation Sequence.  The VBECS BUNDLE is a host file that consists of 
"PKG",649,22,1,1,7,0)
both VBEC*1*0 and LR*5.2*325.  Installation of the VBECS BUNDLE will 
"PKG",649,22,1,1,8,0)
automatically install both VBEC*1*0 and LR*5.2*325
"PKG",649,22,1,1,9,0)
=====================
"PKG",649,22,1,1,10,0)
 
"PKG",649,22,1,1,11,0)
I. OVERVIEW
"PKG",649,22,1,1,12,0)
The VistA Blood Establishment Computer Software (VBECS) shall facilitate 
"PKG",649,22,1,1,13,0)
ongoing compliance with Food and Drug Administration (FDA) standards for 
"PKG",649,22,1,1,14,0)
medical devices and enhance the Department of Veterans Affairs (VA) 
"PKG",649,22,1,1,15,0)
Veterans Health Administration's (VHA) ability to deliver quality 
"PKG",649,22,1,1,16,0)
services to meet the needs of the user community. VBECS is considered an 
"PKG",649,22,1,1,17,0)
encapsulated medical device and therefore does not communicate directly 
"PKG",649,22,1,1,18,0)
with other VistA applications.
"PKG",649,22,1,1,19,0)
 
"PKG",649,22,1,1,20,0)
Two new namespaces are being introduced into the VistA enterprise with 
"PKG",649,22,1,1,21,0)
the release of VBECS. The first, gov.va.med.vbecs, represents the Blood 
"PKG",649,22,1,1,22,0)
Bank medical device software. The second, VBEC, represents the VBECS 
"PKG",649,22,1,1,23,0)
Application Interfacing Support software. The VBEC namespace, created in 
"PKG",649,22,1,1,24,0)
the VBEC 1.0 KIDS build, will be added to the Package file in VistA and 
"PKG",649,22,1,1,25,0)
is used to identify the M software and files that support interfacing 
"PKG",649,22,1,1,26,0)
other VistA applications with the Blood Bank medical device. This 
"PKG",649,22,1,1,27,0)
software is not released as part of the Blood Bank medical device.
"PKG",649,22,1,1,28,0)
 
"PKG",649,22,1,1,29,0)
II. FUNCTIONAL OVERVIEW
"PKG",649,22,1,1,30,0)
The reengineered Blood Bank system uses VistALink and Health Level Seven 
"PKG",649,22,1,1,31,0)
(HL7) messaging for data exchange with a client-server mode application 
"PKG",649,22,1,1,32,0)
interfacing architecture through M Application Programmer Interfaces 
"PKG",649,22,1,1,33,0)
(APIs), VistA Remote Procedure Calls (RPCs), and HL7 interfaces released 
"PKG",649,22,1,1,34,0)
in the VBEC 1.0 KIDS build.
"PKG",649,22,1,1,35,0)
 
"PKG",649,22,1,1,36,0)
This software will provide a transparent database transition through the 
"PKG",649,22,1,1,37,0)
use of M APIs, RPCs, and HL7 interfaces. The APIs released in this build 
"PKG",649,22,1,1,38,0)
will allow other VistA applications to continue the retrieval of Blood 
"PKG",649,22,1,1,39,0)
Bank data stored in the Blood Bank system. The RPCs will allow the Blood 
"PKG",649,22,1,1,40,0)
Bank system to continue to retrieve data from other VistA applications. 
"PKG",649,22,1,1,41,0)
The HL7 interfaces will allow the exchange of data between the Blood Bank 
"PKG",649,22,1,1,42,0)
system and other VistA applications.
"PKG",649,22,1,1,43,0)
 
"PKG",649,22,1,1,44,0)
III. TECHNICAL COMPONENTS
"PKG",649,22,1,1,45,0)
This section lists the components of the VBECS, and LAB SERVICES 
"PKG",649,22,1,1,46,0)
installed in VistA by the VBEC BUNDLE 1.0 Multi Package KIDS build that 
"PKG",649,22,1,1,47,0)
supports VBECS.
"PKG",649,22,1,1,48,0)
 
"PKG",649,22,1,1,49,0)
 
"PKG",649,22,1,1,50,0)
MAIL GROUP:
"PKG",649,22,1,1,51,0)
===========
"PKG",649,22,1,1,52,0)
 VBECS INTERFACE ADMIN - Receives alert mail messages when problems  
"PKG",649,22,1,1,53,0)
arise with VBECS Application Interfacing. The users added to this  group 
"PKG",649,22,1,1,54,0)
would be Lab/Blood Bank supervisors and/or IRM responsible for  managing 
"PKG",649,22,1,1,55,0)
the VBECS package and interfaces.
"PKG",649,22,1,1,56,0)
 
"PKG",649,22,1,1,57,0)
ROUTINES:
"PKG",649,22,1,1,58,0)
=========
"PKG",649,22,1,1,59,0)
VBECA1
"PKG",649,22,1,1,60,0)
VBECA1A
"PKG",649,22,1,1,61,0)
VBECA1B
"PKG",649,22,1,1,62,0)
VBECA1B1
"PKG",649,22,1,1,63,0)
VBECA3
"PKG",649,22,1,1,64,0)
VBECA3A
"PKG",649,22,1,1,65,0)
VBECA3B
"PKG",649,22,1,1,66,0)
VBECA3C
"PKG",649,22,1,1,67,0)
VBECA4
"PKG",649,22,1,1,68,0)
VBECA5A
"PKG",649,22,1,1,69,0)
VBECA5B
"PKG",649,22,1,1,70,0)
VBECA6
"PKG",649,22,1,1,71,0)
VBECA7
"PKG",649,22,1,1,72,0)
VBECA7A
"PKG",649,22,1,1,73,0)
VBECA7A1
"PKG",649,22,1,1,74,0)
VBECA7B
"PKG",649,22,1,1,75,0)
VBECENV
"PKG",649,22,1,1,76,0)
VBECHLRT
"PKG",649,22,1,1,77,0)
VBECLU
"PKG",649,22,1,1,78,0)
VBECLU0
"PKG",649,22,1,1,79,0)
VBECLU3
"PKG",649,22,1,1,80,0)
VBECPOST
"PKG",649,22,1,1,81,0)
VBECRL
"PKG",649,22,1,1,82,0)
VBECRPC
"PKG",649,22,1,1,83,0)
VBECRPC1
"PKG",649,22,1,1,84,0)
VBECRPCA
"PKG",649,22,1,1,85,0)
VBECRPCB
"PKG",649,22,1,1,86,0)
VBECRPCC
"PKG",649,22,1,1,87,0)
VBECRPCD
"PKG",649,22,1,1,88,0)
VBECRPCE
"PKG",649,22,1,1,89,0)
VBECRPCH
"PKG",649,22,1,1,90,0)
VBECRPCM
"PKG",649,22,1,1,91,0)
VBECRPCP
"PKG",649,22,1,1,92,0)
VBECRPCW
"PKG",649,22,1,1,93,0)
VBECVLC
"PKG",649,22,1,1,94,0)
 
"PKG",649,22,1,1,95,0)
 
"PKG",649,22,1,1,96,0)
OPTION:
"PKG",649,22,1,1,97,0)
=======
"PKG",649,22,1,1,98,0)
 VBECS VISTALINK CONTEXT - (B)roker type option used by VistALink to
"PKG",649,22,1,1,99,0)
 authenticate users. All Blood Bank users must have this option
"PKG",649,22,1,1,100,0)
 assigned as a Secondary Menu Option.
"PKG",649,22,1,1,101,0)
 
"PKG",649,22,1,1,102,0)
 
"PKG",649,22,1,1,103,0)
PROTOCOL:
"PKG",649,22,1,1,104,0)
=========
"PKG",649,22,1,1,105,0)
 VBECS ADT-AO8 CLIENT - This protocol is used to deliver HL7 messages
"PKG",649,22,1,1,106,0)
 from VistA to VBECS via the VBECSPTU logical link.
"PKG",649,22,1,1,107,0)
 
"PKG",649,22,1,1,108,0)
 VBECS ADT-A08 ROUTER - This protocol is used to receive an HL7 message
"PKG",649,22,1,1,109,0)
 from the VAFC ADT-A08 SERVER protocol and executes routing logic to
"PKG",649,22,1,1,110,0)
 determine whether the message is to be forwarded to VBECS. VBECS
"PKG",649,22,1,1,111,0)
 receives only messages that contain changes to various patient
"PKG",649,22,1,1,112,0)
 demographic data.
"PKG",649,22,1,1,113,0)
 
"PKG",649,22,1,1,114,0)
 VBECS ADT-AO8 SERVER - This event driver protocol is triggered by the
"PKG",649,22,1,1,115,0)
 
"PKG",649,22,1,1,116,0)
 VBECS ADT-A40 CLIENT - This protocol is used to deliver the HL7
"PKG",649,22,1,1,117,0)
 message from VistA to VBECS via the VBECSPTM logical link.
"PKG",649,22,1,1,118,0)
 
"PKG",649,22,1,1,119,0)
 VBECS ADT-A40 SERVER - This event driver protocol is triggered by the
"PKG",649,22,1,1,120,0)
 
"PKG",649,22,1,1,121,0)
 
"PKG",649,22,1,1,122,0)
 VBECS OMG CLIENT - This is the subscriber protocol to the VBECS OMG
"PKG",649,22,1,1,123,0)
 SERVER protocol that receives the HL7 message from VBECS providing
"PKG",649,22,1,1,124,0)
 order updates to the original order message.
"PKG",649,22,1,1,125,0)
 
"PKG",649,22,1,1,126,0)
 VBECS OMG SERVER - This protocol is triggered when an HL7 message from
"PKG",649,22,1,1,127,0)
 VBECS is received by the HL7 package.
"PKG",649,22,1,1,128,0)
 
"PKG",649,22,1,1,129,0)
HL7 APPLICATION PARAMETER:
"PKG",649,22,1,1,130,0)
==========================
"PKG",649,22,1,1,131,0)
 VBECS - This HL7 Application represents the VBECS side of the VBECS/CPRS 
"PKG",649,22,1,1,132,0)
interface.
"PKG",649,22,1,1,133,0)
 
"PKG",649,22,1,1,134,0)
 VBECS ADT - This HL7 Application represents the receiving application
"PKG",649,22,1,1,135,0)
 of the Patient Update and Patient Merge router protocols.
"PKG",649,22,1,1,136,0)
 
"PKG",649,22,1,1,137,0)
 VBECS TRIGGER - This HL7 Application represents the VBECS side of the
"PKG",649,22,1,1,138,0)
 Patient Update and Patient Merge interfaces.
"PKG",649,22,1,1,139,0)
 
"PKG",649,22,1,1,140,0)
HL LOGICAL LINK:
"PKG",649,22,1,1,141,0)
================
"PKG",649,22,1,1,142,0)
 VBECS-OERR - Used to transmit HL7 messages from VBECS to CPRS.
"PKG",649,22,1,1,143,0)
 
"PKG",649,22,1,1,144,0)
 VBECSPTM - Used to transmit HL7 messages from VistA to VBECS when a
"PKG",649,22,1,1,145,0)
 patient merge event occurs.
"PKG",649,22,1,1,146,0)
 
"PKG",649,22,1,1,147,0)
 VBECSPTU - Used to transmit HL7 messages from VistA to VBECS when a
"PKG",649,22,1,1,148,0)
 patient update event occurs.
"PKG",649,22,1,1,149,0)
 
"PKG",649,22,1,1,150,0)
PARAMETER DEFINITION:
"PKG",649,22,1,1,151,0)
=====================
"PKG",649,22,1,1,152,0)
 VBECS VISTALINK - Parameter definition used to identify all VBECS 
"PKG",649,22,1,1,153,0)
Parameters.
"PKG",649,22,1,1,154,0)
 
"PKG",649,22,1,1,155,0)
PARAMETERS:
"PKG",649,22,1,1,156,0)
===========
"PKG",649,22,1,1,157,0)
 LISTENER IP ADDRESS - Stores the value of the Blood Bank medical
"PKG",649,22,1,1,158,0)
 device server where the VistALink listener is installed.
"PKG",649,22,1,1,159,0)
 
"PKG",649,22,1,1,160,0)
 LISTENER PORT NUMBER - Stores the value of the port number where Blood
"PKG",649,22,1,1,161,0)
 Bank medical device VistALink listener is listening.
"PKG",649,22,1,1,162,0)
 
"PKG",649,22,1,1,163,0)
 These Parameters are used by M APIs to build the XML messages used by 
"PKG",649,22,1,1,164,0)
VistALink.
"PKG",649,22,1,1,165,0)
 VBECS Blood Products
"PKG",649,22,1,1,166,0)
 VBECS DSS Extract
"PKG",649,22,1,1,167,0)
 VBECS Order Entry
"PKG",649,22,1,1,168,0)
 VBECS Patient ABID
"PKG",649,22,1,1,169,0)
 VBECS Patient ABO_RH
"PKG",649,22,1,1,170,0)
 VBECS Patient Available Units
"PKG",649,22,1,1,171,0)
 VBECS Patient Report
"PKG",649,22,1,1,172,0)
 VBECS Patient TRRX
"PKG",649,22,1,1,173,0)
 VBECS Patient Transfusion History
"PKG",649,22,1,1,174,0)
 VBECS Update Workload Event
"PKG",649,22,1,1,175,0)
 VBECS Workload
"PKG",649,22,1,1,176,0)
 
"PKG",649,22,1,1,177,0)
REMOTE PROCEDURE:
"PKG",649,22,1,1,178,0)
=================
"PKG",649,22,1,1,179,0)
 VBECS ACCESSION AREA LOOKUP
"PKG",649,22,1,1,180,0)
 VBECS BLOOD BANK USER LOOKUP
"PKG",649,22,1,1,181,0)
 VBECS DIVISION LOOKUP
"PKG",649,22,1,1,182,0)
 VBECS DSS EXTRACT
"PKG",649,22,1,1,183,0)
 VBECS HCPCS CODES LOOKUP
"PKG",649,22,1,1,184,0)
 VBECS HOSPITAL LOCATION LOOKUP
"PKG",649,22,1,1,185,0)
 VBECS LAB ACCESSION UID LOOKUP
"PKG",649,22,1,1,186,0)
 VBECS LAB ORDER LOOKUP BY UID
"PKG",649,22,1,1,187,0)
 VBECS LAB TEST RESULTS LOOKUP
"PKG",649,22,1,1,188,0)
 VBECS LABORATORY TEST LOOKUP
"PKG",649,22,1,1,189,0)
 VBECS MED PROFILE LOOKUP
"PKG",649,22,1,1,190,0)
 VBECS PATIENT LOOKUP
"PKG",649,22,1,1,191,0)
 VBECS PROVIDER LOOKUP
"PKG",649,22,1,1,192,0)
 VBECS WORKLOAD CODES LOOKUP
"PKG",649,22,1,1,193,0)
 
"PKG",649,22,1,1,194,0)
GLOBALS - FILES:
"PKG",649,22,1,1,195,0)
===============
"PKG",649,22,1,1,196,0)
 ^VBEC(6002.01, - VBECS WORKLOAD CAPTURE File (#6002.01)
"PKG",649,22,1,1,197,0)
 
"PKG",649,22,1,1,198,0)
 ICRs:
"PKG",649,22,1,1,199,0)
 =====
"PKG",649,22,1,1,200,0)
 The following ICRs were created to allow data transfer between the Blood 
"PKG",649,22,1,1,201,0)
Bank medical device and the VBECS Application Interfacing Support 
"PKG",649,22,1,1,202,0)
software.
"PKG",649,22,1,1,203,0)
 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617,
"PKG",649,22,1,1,204,0)
 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4633
"PKG",649,22,1,1,205,0)
 
"PKG",649,22,1,1,206,0)
 The following ICRs were created, or modified, to allow data transfer 
"PKG",649,22,1,1,207,0)
between the VBECS Application Interfacing Support software and other 
"PKG",649,22,1,1,208,0)
VistA applications.
"PKG",649,22,1,1,209,0)
 1587, 1963, 2400, 2503, 2817, 3176, 3177, 3181, 3631, 3879, 4629,
"PKG",649,22,1,1,210,0)
 4636, 4766, 4767, 4773, 4774, 4776, 4779,
"PKG",649,22,1,1,211,0)
 
"PKG",649,22,1,1,212,0)
ASSOCIATED REMEDY TICKETS
"PKG",649,22,1,1,213,0)
=========================
"PKG",649,22,1,1,214,0)
 N/A
"PKG",649,22,1,1,215,0)
 
"PKG",649,22,1,1,216,0)
TEST SITES:
"PKG",649,22,1,1,217,0)
===========
"PKG",649,22,1,1,218,0)
 HEARTLAND-EAST HCS
"PKG",649,22,1,1,219,0)
 PHILADELPHIA, PA
"PKG",649,22,1,1,220,0)
 SAN DIEGO, CA
"PKG",649,22,1,1,221,0)
 
"PKG",649,22,1,1,222,0)
SACC Exemptions:
"PKG",649,22,1,1,223,0)
================
"PKG",649,22,1,1,224,0)
XINDEX displays the following warning. The Standards And Conventions 
"PKG",649,22,1,1,225,0)
Committee granted an exemption to allow the use of a star read on May 4th 
"PKG",649,22,1,1,226,0)
2006.
"PKG",649,22,1,1,227,0)
 
"PKG",649,22,1,1,228,0)
VBECRL   * *  114 Lines,  4099 Bytes, Checksum: B10917646
"PKG",649,22,1,1,229,0)
         FOR  READ VBECX#VBECREAD:VBECTO SET TOFLAG=$T DO:VBECFRST CHK 
"PKG",649,22,1,1,230,0)
DO:'VBECS
"PKG",649,22,1,1,231,0)
          TOP  QUIT:DONE
"PKG",649,22,1,1,232,0)
   READ+6       I - Star or pound READ used.
"PKG",649,22,1,1,233,0)
 
"PKG",649,22,1,1,234,0)
Installation Sequence 
"PKG",649,22,1,1,235,0)
======================
"PKG",649,22,1,1,236,0)
The files listed below represent the patches that will be part of the 
"PKG",649,22,1,1,237,0)
controlled phased release.  Follow the sequence listed below when your 
"PKG",649,22,1,1,238,0)
phased installation occurs.
"PKG",649,22,1,1,239,0)
 
"PKG",649,22,1,1,240,0)
  1. LR*5.2*335
"PKG",649,22,1,1,241,0)
  2. LR*5.2*367
"PKG",649,22,1,1,242,0)
  3. VBECS Bundle (consisting of VBEC*1*0 and LR*5.2*325)
"PKG",649,22,1,1,243,0)
  4. VBEC*1.0*1
"PKG",649,22,1,1,244,0)
  5. OR*3.0*212
"PKG",649,22,1,1,245,0)
 
"PKG",649,22,1,1,246,0)
Documentation Retrieval:
"PKG",649,22,1,1,247,0)
 
"PKG",649,22,1,1,248,0)
Documentation is available for the entire VBECS package on the 
"PKG",649,22,1,1,249,0)
ANONYMOUS.SOFTWRE directory at one of the following Office of Information 
"PKG",649,22,1,1,250,0)
(OI) Field Offices.  Sites may retrieve documentation in either ".PDF" or 
"PKG",649,22,1,1,251,0)
"DOC" format in one of the following ways:
"PKG",649,22,1,1,252,0)
 
"PKG",649,22,1,1,253,0)
1.      The preferred method is to FTP the files from :
"PKG",649,22,1,1,254,0)
Download.vista.domain.ext
"PKG",649,22,1,1,255,0)
 
"PKG",649,22,1,1,256,0)
2.      Sites may also elect to retrieve documentation directly from a 
"PKG",649,22,1,1,257,0)
specific server as follows:
"PKG",649,22,1,1,258,0)
       Albany                  DOMAIN.EXT
"PKG",649,22,1,1,259,0)
       Hines                   DOMAIN.EXT
"PKG",649,22,1,1,260,0)
       Salt Lake City          DOMAIN.EXT
"PKG",649,22,1,1,261,0)
 
"PKG",649,22,1,1,262,0)
NOTE:  The documentation files listed below will be listed in each of the 
"PKG",649,22,1,1,263,0)
VBECS and LR patches that are part of the VBECS package and associate 
"PKG",649,22,1,1,264,0)
patches, they only need to be downloaded once.
"PKG",649,22,1,1,265,0)
 
"PKG",649,22,1,1,266,0)
File Name                                   Retrieval format:  Binary
"PKG",649,22,1,1,267,0)
===========                                 ==========================
"PKG",649,22,1,1,268,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,1,269,0)
ADPAC Guide.doc
"PKG",649,22,1,1,270,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,1,271,0)
ADPAC Guide.pdf
"PKG",649,22,1,1,272,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,1,273,0)
Installation and User Guide.doc
"PKG",649,22,1,1,274,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,1,275,0)
Installation and User Guide.pdf
"PKG",649,22,1,1,276,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,1,277,0)
Technical Manual.doc
"PKG",649,22,1,1,278,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,1,279,0)
Technical Manual.pdf
"PKG",649,22,1,1,280,0)
VBECS Data Conversion Recommended Validation Method.xls
"PKG",649,22,1,1,281,0)
VBECS Application Interfacing Support Software Installation and User 
"PKG",649,22,1,1,282,0)
Configuration Guide.doc
"PKG",649,22,1,1,283,0)
VBECS Application Interfacing Support Software Installation and User 
"PKG",649,22,1,1,284,0)
Configuration Guide.pdf
"PKG",649,22,1,1,285,0)
VBECS Implementation Process.xls
"PKG",649,22,1,1,286,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"PKG",649,22,1,1,287,0)
Guide.doc
"PKG",649,22,1,1,288,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"PKG",649,22,1,1,289,0)
Guide.pdf
"PKG",649,22,1,1,290,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"PKG",649,22,1,1,291,0)
Manual-Security Guide.doc
"PKG",649,22,1,1,292,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"PKG",649,22,1,1,293,0)
Manual-Security Guide.pdf
"PKG",649,22,1,1,294,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.doc
"PKG",649,22,1,1,295,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.pdf
"PKG",649,22,1,1,296,0)
Known Defects and Anomalies.doc
"PKG",649,22,1,1,297,0)
Known Defects and Anomalies.pdf
"PKG",649,22,1,1,298,0)
 
"PKG",649,22,1,1,299,0)
INSTALLATION INSTRUCTIONS:
"PKG",649,22,1,1,300,0)
==========================
"PKG",649,22,1,1,301,0)
 
"PKG",649,22,1,1,302,0)
 Pre-Installation Items:
"PKG",649,22,1,1,303,0)
 =======================
"PKG",649,22,1,1,304,0)
 
"PKG",649,22,1,1,305,0)
  Environment Check:
"PKG",649,22,1,1,306,0)
  ------------------
"PKG",649,22,1,1,307,0)
Programmer access is required to install this patch. Prior to 
"PKG",649,22,1,1,308,0)
installation, the installer must ensure the DUZ(0) node of the DUZ array 
"PKG",649,22,1,1,309,0)
is set to the "@" symbol.
"PKG",649,22,1,1,310,0)
 
"PKG",649,22,1,1,311,0)
  Users on the System:
"PKG",649,22,1,1,312,0)
  --------------------
"PKG",649,22,1,1,313,0)
   This patch may be installed with users on the system.
"PKG",649,22,1,1,314,0)
 
"PKG",649,22,1,1,315,0)
  Software Installation Time:
"PKG",649,22,1,1,316,0)
  ---------------------------
"PKG",649,22,1,1,317,0)
   The estimated installation time for this patch is less than 
"PKG",649,22,1,1,318,0)
   5 minutes during non-peak hours.
"PKG",649,22,1,1,319,0)
 
"PKG",649,22,1,1,320,0)
  Queuing:
"PKG",649,22,1,1,321,0)
  ---------
"PKG",649,22,1,1,322,0)
   Note: Patch installation requires responses from the installer and
"PKG",649,22,1,1,323,0)
   must not be queued.
"PKG",649,22,1,1,324,0)
 
"PKG",649,22,1,1,325,0)
  Pre-requisites:
"PKG",649,22,1,1,326,0)
  ---------------
"PKG",649,22,1,1,327,0)
   Patch installer must enter the collection sample types for new Lab
"PKG",649,22,1,1,328,0)
   tests created during installation. Obtain sample types from the
"PKG",649,22,1,1,329,0)
   Laboratory Information Manager
"PKG",649,22,1,1,330,0)
 
"PKG",649,22,1,1,331,0)
  Namespace:
"PKG",649,22,1,1,332,0)
  ----------
"PKG",649,22,1,1,333,0)
   The namespace for the VBECS Application Interfacing Support package is:
"PKG",649,22,1,1,334,0)
    Name: VBECS - Prefix: VBEC
"PKG",649,22,1,1,335,0)
 
"PKG",649,22,1,1,336,0)
  Required Patches:
"PKG",649,22,1,1,337,0)
  -----------------
"PKG",649,22,1,1,338,0)
   Application                          Patch/Build
"PKG",649,22,1,1,339,0)
   -----------------------------        -----------
"PKG",649,22,1,1,340,0)
   Laboratory Services                  LR*5.2*187
"PKG",649,22,1,1,341,0)
                                        LR*5.2*288
"PKG",649,22,1,1,342,0)
                                        LR*5.2*294
"PKG",649,22,1,1,343,0)
   Toolkit                              XT*7.3*58
"PKG",649,22,1,1,344,0)
 
"PKG",649,22,1,1,345,0)
  New File and Global Information:
"PKG",649,22,1,1,346,0)
  --------------------------------
"PKG",649,22,1,1,347,0)
   There is one new global, ^VBEC.  The ^VBEC global contains the
"PKG",649,22,1,1,348,0)
   following new file.
"PKG",649,22,1,1,349,0)
                                                        Journaling
"PKG",649,22,1,1,350,0)
   File #   File Name                   Global Root     Recommended
"PKG",649,22,1,1,351,0)
   ------   ------------------------    ------------    -----------
"PKG",649,22,1,1,352,0)
   6002.01  VBECS WORKLOAD CAPTURE      ^VBEC(6002.01,  YES
"PKG",649,22,1,1,353,0)
 
"PKG",649,22,1,1,354,0)
  VBECS Configuration Checklists:
"PKG",649,22,1,1,355,0)
  -------------------------------
"PKG",649,22,1,1,356,0)
   a. Complete Appendix D: Configuration Checklist of the VistA Blood
"PKG",649,22,1,1,357,0)
      Establishment Computer Software (VBECS) Installation Guide.
"PKG",649,22,1,1,358,0)
   b. Complete Appendix B: Configuration Worksheet of the VBECS 
"PKG",649,22,1,1,359,0)
      Application Interfacing Support Software Installation and User
"PKG",649,22,1,1,360,0)
      Configuration Guide.
"PKG",649,22,1,1,361,0)
 
"PKG",649,22,1,1,362,0)
  Installation Steps:
"PKG",649,22,1,1,363,0)
  ===================
"PKG",649,22,1,1,364,0)
 
"PKG",649,22,1,1,365,0)
The installation of VBECS and its related patches are being handled as a 
"PKG",649,22,1,1,366,0)
controlled release. The implementation manager will contact you with the 
"PKG",649,22,1,1,367,0)
location of the KIDS Host Files prior to your scheduled installation 
"PKG",649,22,1,1,368,0)
date. The documentation files will be available for download in advance 
"PKG",649,22,1,1,369,0)
of installation through the anonymous download site.
"PKG",649,22,1,1,370,0)
 
"PKG",649,22,1,1,371,0)
   1. Use the 'LOAD A DISTRIBUTION' option (#1) on the 'KIDS INSTALLATION'
"PKG",649,22,1,1,372,0)
      menu, and enter: VBECS_BUNDLE_1.KID 
"PKG",649,22,1,1,373,0)
 
"PKG",649,22,1,1,374,0)
   2. From the 'Kernel Installation & Distribution System' menu, select
"PKG",649,22,1,1,375,0)
      the Installation menu.
"PKG",649,22,1,1,376,0)
 
"PKG",649,22,1,1,377,0)
   3. From this menu, you may now elect to use the following options (when
"PKG",649,22,1,1,378,0)
      prompted for INSTALL NAME, enter  VBECS BUNDLE 1.0)
"PKG",649,22,1,1,379,0)
 
"PKG",649,22,1,1,380,0)
      a. Backup a Transport Global - This option will create a backup
"PKG",649,22,1,1,381,0)
         message of any routines exported with the patch.  It will NOT
"PKG",649,22,1,1,382,0)
         backup any changes such as DDs or templates.
"PKG",649,22,1,1,383,0)
 
"PKG",649,22,1,1,384,0)
      b. Compare Transport Global to Current System - This option will
"PKG",649,22,1,1,385,0)
         allow you to view all changes that will be made when the patch
"PKG",649,22,1,1,386,0)
         is installed.  It compares all components of the patch
"PKG",649,22,1,1,387,0)
         (routines, DDs, templates, etc.).
"PKG",649,22,1,1,388,0)
 
"PKG",649,22,1,1,389,0)
      c. Verify Checksums in Transport Global - This option will allow you
"PKG",649,22,1,1,390,0)
         to ensure the integrity of the routines that are in the
"PKG",649,22,1,1,391,0)
         transport global.
"PKG",649,22,1,1,392,0)
 
"PKG",649,22,1,1,393,0)
      d. Print Transport Global - this option will allow you to view the
"PKG",649,22,1,1,394,0)
         components of the KIDS build.
"PKG",649,22,1,1,395,0)
 
"PKG",649,22,1,1,396,0)
   4. Use the Install Package(s) option and select package
"PKG",649,22,1,1,397,0)
      VBECS_BUNDLE_1.KID.  This will automatically install VBEC*1*0
"PKG",649,22,1,1,398,0)
      and LR*5.2*325
"PKG",649,22,1,1,399,0)
 
"PKG",649,22,1,1,400,0)
   5. When prompted "Enter the Coordinator for Mail Group 'VBECS INTERFACE
"PKG",649,22,1,1,401,0)
      ADMIN':", please enter the name of the individual that will be
"PKG",649,22,1,1,402,0)
      responsible for maintaining the new mail group. This mail group
"PKG",649,22,1,1,403,0)
      receives notifications when an HL7 transmission, or a query through
"PKG",649,22,1,1,404,0)
      the VBECS VistALink client, to the Blood Bank medical device has
"PKG",649,22,1,1,405,0)
      failed. The users added to this group would be Lab/Blood Bank
"PKG",649,22,1,1,406,0)
      supervisors and/or IRM staff responsible for managing the VBECS
"PKG",649,22,1,1,407,0)
      package and interfaces.
"PKG",649,22,1,1,408,0)
 
"PKG",649,22,1,1,409,0)
   6. When prompted 'Want KIDS to Rebuild Menu Trees Upon Completion of
"PKG",649,22,1,1,410,0)
      Install? NO//', respond Yes.
"PKG",649,22,1,1,411,0)
 
"PKG",649,22,1,1,412,0)
   7. When prompted 'VBECS Server IP Address:', enter the Cluster
"PKG",649,22,1,1,413,0)
      IP address from Appendix B: Configuration Worksheet, Hardware
"PKG",649,22,1,1,414,0)
      Information, row 1.
"PKG",649,22,1,1,415,0)
 
"PKG",649,22,1,1,416,0)
   8. When prompted 'VBECS VistALink Listener Service Port Number:',
"PKG",649,22,1,1,417,0)
      enter the VistALink Listener Service port number from
"PKG",649,22,1,1,418,0)
      Appendix B: Configuration Worksheet, Hardware Information, row 2
"PKG",649,22,1,1,419,0)
      for installing in the TEST account, row 3 for installing in the
"PKG",649,22,1,1,420,0)
      PRODUCTION account.
"PKG",649,22,1,1,421,0)
 
"PKG",649,22,1,1,422,0)
   9. When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"PKG",649,22,1,1,423,0)
      No//', it is recommended you answer NO.
"PKG",649,22,1,1,424,0)
 
"PKG",649,22,1,1,425,0)
   8. When prompted 'Want to DISABLE Scheduled Options, Menu Options,
"PKG",649,22,1,1,426,0)
      and Protocols? No//', respond NO
"PKG",649,22,1,1,427,0)
 
"PKG",649,22,1,1,428,0)
  11. When prompted by "Select COLLECTION SAMPLE for Lab Test
"PKG",649,22,1,1,429,0)
      ABO/RH - LAB:," select the collection sample appropriate for the
"PKG",649,22,1,1,430,0)
      ABO/Rh test.
"PKG",649,22,1,1,431,0)
 
"PKG",649,22,1,1,432,0)
  12. When prompted by "Select COLLECTION SAMPLE for Lab Test ANTIBODY
"PKG",649,22,1,1,433,0)
      SCREEN - LAB:," select the collection sample appropriate for the
"PKG",649,22,1,1,434,0)
      Antibody Screen test.
"PKG",649,22,1,1,435,0)
 
"PKG",649,22,1,1,436,0)
  13. When prompted by "Select COLLECTION SAMPLE for Lab Test DIRECT
"PKG",649,22,1,1,437,0)
      ANTIGLOBULIN TEST - LAB:," select the collection sample appropriate
"PKG",649,22,1,1,438,0)
      for the Direct Antiglobulin Test test.
"PKG",649,22,1,1,439,0)
 
"PKG",649,22,1,1,440,0)
  14. When prompted by "Select COLLECTION SAMPLE for Lab Test TRANSFUSION
"PKG",649,22,1,1,441,0)
      REACTION WORKUP - LAB:," select the collection sample appropriate
"PKG",649,22,1,1,442,0)
      for the Transfusion Reaction Workup test.
"PKG",649,22,1,1,443,0)
 
"PKG",649,22,1,1,444,0)
  15. When prompted by "Select COLLECTION SAMPLE for Lab Test 
"PKG",649,22,1,1,445,0)
      TYPE & SCREEN - LAB:," select the collection sample appropriate for
"PKG",649,22,1,1,446,0)
      the Type & Screen test.
"PKG",649,22,1,1,447,0)
 
"PKG",649,22,1,1,448,0)
  16. The POST Installation routine VBECPOST will be deleted from
"PKG",649,22,1,1,449,0)
      your system automatically after successful installation.
"PKG",649,22,1,"PAH",0)
^9.4901^2^2
"PKG",649,22,1,"PAH",1,0)
1^3090423^1
"PKG",649,22,1,"PAH",1,1,0)
^^158^158^3090423
"PKG",649,22,1,"PAH",1,1,1,0)
This patch is being released in support of the VBECS (VistA Blood 
"PKG",649,22,1,"PAH",1,1,2,0)
Establishment Computer System) Blood Bank Package.  The routines, 
"PKG",649,22,1,"PAH",1,1,3,0)
protocols, remote procedures, and options in this patch are used by the 
"PKG",649,22,1,"PAH",1,1,4,0)
DSS (Decision Support System) and CPRS (Computerized Patient Record 
"PKG",649,22,1,"PAH",1,1,5,0)
System).  There is no direct user interaction with the contents of this 
"PKG",649,22,1,"PAH",1,1,6,0)
patch.
"PKG",649,22,1,"PAH",1,1,7,0)
 
"PKG",649,22,1,"PAH",1,1,8,0)
Routines: VBECDSS
"PKG",649,22,1,"PAH",1,1,9,0)
========  VBECHLOR
"PKG",649,22,1,"PAH",1,1,10,0)
 
"PKG",649,22,1,"PAH",1,1,11,0)
Options:  VBECS VISTALINK CONTEXT
"PKG",649,22,1,"PAH",1,1,12,0)
========
"PKG",649,22,1,"PAH",1,1,13,0)
 
"PKG",649,22,1,"PAH",1,1,14,0)
 
"PKG",649,22,1,"PAH",1,1,15,0)
Protocols: VBEC OMG CLIENT
"PKG",649,22,1,"PAH",1,1,16,0)
========== 
"PKG",649,22,1,"PAH",1,1,17,0)
 
"PKG",649,22,1,"PAH",1,1,18,0)
Remote Procedures: VBEC DSS EXTRACT
"PKG",649,22,1,"PAH",1,1,19,0)
==================
"PKG",649,22,1,"PAH",1,1,20,0)
 
"PKG",649,22,1,"PAH",1,1,21,0)
 
"PKG",649,22,1,"PAH",1,1,22,0)
Files: VBECS DSS EXTRACT  (# 6002.03)
"PKG",649,22,1,"PAH",1,1,23,0)
======
"PKG",649,22,1,"PAH",1,1,24,0)
 
"PKG",649,22,1,"PAH",1,1,25,0)
Associated ICRs: None
"PKG",649,22,1,"PAH",1,1,26,0)
=============== 
"PKG",649,22,1,"PAH",1,1,27,0)
 
"PKG",649,22,1,"PAH",1,1,28,0)
 
"PKG",649,22,1,"PAH",1,1,29,0)
Associated Remedy Tickets:  None
"PKG",649,22,1,"PAH",1,1,30,0)
==========================
"PKG",649,22,1,"PAH",1,1,31,0)
 
"PKG",649,22,1,"PAH",1,1,32,0)
 
"PKG",649,22,1,"PAH",1,1,33,0)
Associated NSR/E3R: None
"PKG",649,22,1,"PAH",1,1,34,0)
===================
"PKG",649,22,1,"PAH",1,1,35,0)
 
"PKG",649,22,1,"PAH",1,1,36,0)
Test Site(s):
"PKG",649,22,1,"PAH",1,1,37,0)
==============
"PKG",649,22,1,"PAH",1,1,38,0)
 
"PKG",649,22,1,"PAH",1,1,39,0)
 HEARTLAND-EAST HCS
"PKG",649,22,1,"PAH",1,1,40,0)
 PHILADELPHIA, PA
"PKG",649,22,1,"PAH",1,1,41,0)
 SAN DIEGO, CA
"PKG",649,22,1,"PAH",1,1,42,0)
 
"PKG",649,22,1,"PAH",1,1,43,0)
 Installation Information:
"PKG",649,22,1,"PAH",1,1,44,0)
==========================
"PKG",649,22,1,"PAH",1,1,45,0)
 
"PKG",649,22,1,"PAH",1,1,46,0)
VBEC*1*1 is being exported as part of the VBECS package release.  The 
"PKG",649,22,1,"PAH",1,1,47,0)
installation of VBEC*1*1 will be controlled by phase a phased release.  
"PKG",649,22,1,"PAH",1,1,48,0)
An Implementation Manager will be assigned to your site and will contact 
"PKG",649,22,1,"PAH",1,1,49,0)
your POC for VBECS and will provide your site with the location of the 
"PKG",649,22,1,"PAH",1,1,50,0)
KIDS Host Files prior to your scheduled installation date. 
"PKG",649,22,1,"PAH",1,1,51,0)
 
"PKG",649,22,1,"PAH",1,1,52,0)
Installation Sequence
"PKG",649,22,1,"PAH",1,1,53,0)
=====================
"PKG",649,22,1,"PAH",1,1,54,0)
 
"PKG",649,22,1,"PAH",1,1,55,0)
The patches listed below represent those that will be part of the 
"PKG",649,22,1,"PAH",1,1,56,0)
controlled phased release.  Follow the sequence listed below when your 
"PKG",649,22,1,"PAH",1,1,57,0)
phased installation occurs.
"PKG",649,22,1,"PAH",1,1,58,0)
 
"PKG",649,22,1,"PAH",1,1,59,0)
  1. LR*5.2*335
"PKG",649,22,1,"PAH",1,1,60,0)
  2. LR*5.2*367
"PKG",649,22,1,"PAH",1,1,61,0)
  3. VBECS Bundle (consisting of VBEC*1*0 and LR*5.2*325)
"PKG",649,22,1,"PAH",1,1,62,0)
  4. VBEC*1.0*1
"PKG",649,22,1,"PAH",1,1,63,0)
  5. OR*3.0*212
"PKG",649,22,1,"PAH",1,1,64,0)
 
"PKG",649,22,1,"PAH",1,1,65,0)
 Installation File:
"PKG",649,22,1,"PAH",1,1,66,0)
 
"PKG",649,22,1,"PAH",1,1,67,0)
VBEC_1_1.KID 
"PKG",649,22,1,"PAH",1,1,68,0)
The VBEC_1_1.KID file will be made available by the Implementation 
"PKG",649,22,1,"PAH",1,1,69,0)
Manager prior to your site's implementation schedule along with 
"PKG",649,22,1,"PAH",1,1,70,0)
instruction to retrieve. 
"PKG",649,22,1,"PAH",1,1,71,0)
 
"PKG",649,22,1,"PAH",1,1,72,0)
 
"PKG",649,22,1,"PAH",1,1,73,0)
Documentation Retrieval:
"PKG",649,22,1,"PAH",1,1,74,0)
 
"PKG",649,22,1,"PAH",1,1,75,0)
Documentation is available for the entire VBECS package on the 
"PKG",649,22,1,"PAH",1,1,76,0)
ANONYMOUS.SOFTWRE directory at one of the following Office of Information 
"PKG",649,22,1,"PAH",1,1,77,0)
(OI) Field Offices.  Sites may retrieve documentation in either ".PDF" or 
"PKG",649,22,1,"PAH",1,1,78,0)
"DOC" format in one of the following ways:
"PKG",649,22,1,"PAH",1,1,79,0)
 
"PKG",649,22,1,"PAH",1,1,80,0)
1.      The preferred method is to FTP the files from :
"PKG",649,22,1,"PAH",1,1,81,0)
Download.vista.domain.ext
"PKG",649,22,1,"PAH",1,1,82,0)
 
"PKG",649,22,1,"PAH",1,1,83,0)
2.      Sites may also elect to retrieve documentation directly from a 
"PKG",649,22,1,"PAH",1,1,84,0)
specific server as follows:
"PKG",649,22,1,"PAH",1,1,85,0)
       Albany                  DOMAIN.EXT
"PKG",649,22,1,"PAH",1,1,86,0)
       Hines                   DOMAIN.EXT
"PKG",649,22,1,"PAH",1,1,87,0)
       Salt Lake City          DOMAIN.EXT
"PKG",649,22,1,"PAH",1,1,88,0)
 
"PKG",649,22,1,"PAH",1,1,89,0)
NOTE:  The documentation files listed below will be listed in each of the 
"PKG",649,22,1,"PAH",1,1,90,0)
VBECS and LR patches that are part of the VBECS package and associate 
"PKG",649,22,1,"PAH",1,1,91,0)
patches, they only need to be downloaded once.
"PKG",649,22,1,"PAH",1,1,92,0)
 
"PKG",649,22,1,"PAH",1,1,93,0)
File Name                                   Retrieval format:  Binary
"PKG",649,22,1,"PAH",1,1,94,0)
===========                                 ==========================
"PKG",649,22,1,"PAH",1,1,95,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,96,0)
ADPAC Guide.doc
"PKG",649,22,1,"PAH",1,1,97,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,98,0)
ADPAC Guide.pdf
"PKG",649,22,1,"PAH",1,1,99,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,100,0)
Installation and User Guide.doc
"PKG",649,22,1,"PAH",1,1,101,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,102,0)
Installation and User Guide.pdf
"PKG",649,22,1,"PAH",1,1,103,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,104,0)
Technical Manual.doc
"PKG",649,22,1,"PAH",1,1,105,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,106,0)
Technical Manual.pdf
"PKG",649,22,1,"PAH",1,1,107,0)
VBECS Data Conversion Recommended Validation Method.xls
"PKG",649,22,1,"PAH",1,1,108,0)
VBECS Application Interfacing Support Software Installation and User 
"PKG",649,22,1,"PAH",1,1,109,0)
Configuration Guide.doc
"PKG",649,22,1,"PAH",1,1,110,0)
VBECS Application Interfacing Support Software Installation and User 
"PKG",649,22,1,"PAH",1,1,111,0)
Configuration Guide.pdf
"PKG",649,22,1,"PAH",1,1,112,0)
VBECS Implementation Process.xls
"PKG",649,22,1,"PAH",1,1,113,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"PKG",649,22,1,"PAH",1,1,114,0)
Guide.doc
"PKG",649,22,1,"PAH",1,1,115,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"PKG",649,22,1,"PAH",1,1,116,0)
Guide.pdf
"PKG",649,22,1,"PAH",1,1,117,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"PKG",649,22,1,"PAH",1,1,118,0)
Manual-Security Guide.doc
"PKG",649,22,1,"PAH",1,1,119,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"PKG",649,22,1,"PAH",1,1,120,0)
Manual-Security Guide.pdf
"PKG",649,22,1,"PAH",1,1,121,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.doc
"PKG",649,22,1,"PAH",1,1,122,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.pdf
"PKG",649,22,1,"PAH",1,1,123,0)
Known Defects and Anomalies.doc
"PKG",649,22,1,"PAH",1,1,124,0)
Known Defects and Anomalies.pdf
"PKG",649,22,1,"PAH",1,1,125,0)
 
"PKG",649,22,1,"PAH",1,1,126,0)
 
"PKG",649,22,1,"PAH",1,1,127,0)
Installation Instructions:
"PKG",649,22,1,"PAH",1,1,128,0)
==========================
"PKG",649,22,1,"PAH",1,1,129,0)
This patch may be loaded with users on the system.
"PKG",649,22,1,"PAH",1,1,130,0)
Installation will take less than 5 minutes.
"PKG",649,22,1,"PAH",1,1,131,0)
 
"PKG",649,22,1,"PAH",1,1,132,0)
    1) Use the 'LOAD A DISTRIBUTION' option on the KIDS Installation
"PKG",649,22,1,"PAH",1,1,133,0)
       menu. The Host File name is VBEC_1_1.KID .  Answer YES to the
"PKG",649,22,1,"PAH",1,1,134,0)
       question: "Want to Continue with Load? YES//"
"PKG",649,22,1,"PAH",1,1,135,0)
    2) From the Kernel Installation and Distribution System Menu,
"PKG",649,22,1,"PAH",1,1,136,0)
       select the Installation menu.
"PKG",649,22,1,"PAH",1,1,137,0)
    3) From this menu, you may elect to use the following options
"PKG",649,22,1,"PAH",1,1,138,0)
       (when prompted for the INSTALL NAME, enter VBEC*1.0*1).
"PKG",649,22,1,"PAH",1,1,139,0)
       a) Backup a Transport Global - this option will create a backup
"PKG",649,22,1,"PAH",1,1,140,0)
          message of any routines exported with the patch.  It will NOT
"PKG",649,22,1,"PAH",1,1,141,0)
          backup any other changes such as DDs or templates.
"PKG",649,22,1,"PAH",1,1,142,0)
       b) Compare Transport Global to Current System - this option will
"PKG",649,22,1,"PAH",1,1,143,0)
          allow you to view all changes that will be made when the patch
"PKG",649,22,1,"PAH",1,1,144,0)
          is installed.  It compares all components of the patch
"PKG",649,22,1,"PAH",1,1,145,0)
          (routines, DDs, templates, etc.).
"PKG",649,22,1,"PAH",1,1,146,0)
       c) Verify Checksums in Transport Global - this option will allow
"PKG",649,22,1,"PAH",1,1,147,0)
          you to ensure the integrity of the routines that are in the
"PKG",649,22,1,"PAH",1,1,148,0)
          transport global.
"PKG",649,22,1,"PAH",1,1,149,0)
       d) Print Transport Global - this option will allow you to view the
"PKG",649,22,1,"PAH",1,1,150,0)
          components of the KIDS build.
"PKG",649,22,1,"PAH",1,1,151,0)
    4) Use the Install Package(s) option and select the package
"PKG",649,22,1,"PAH",1,1,152,0)
       VBEC*1.0*1.
"PKG",649,22,1,"PAH",1,1,153,0)
    5) When prompted 'Want KIDS to Rebuild Menu Trees Upon Completion of
"PKG",649,22,1,"PAH",1,1,154,0)
       Install? NO//' respond YES
"PKG",649,22,1,"PAH",1,1,155,0)
    6) When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"PKG",649,22,1,"PAH",1,1,156,0)
       NO//', respond NO.
"PKG",649,22,1,"PAH",1,1,157,0)
    7) When prompted 'Want to DISABLE Scheduled Options, Menu Options, and
"PKG",649,22,1,"PAH",1,1,158,0)
       Protocols? NO//', respond NO.
"PKG",649,22,1,"PAH",2,0)
0^3090130
"PKG",649,22,1,"PAH",2,1,0)
^^2^2^3090130
"PKG",649,22,1,"PAH",2,1,1,0)
This patch is part of the VBECS BUNDLE 1.0 controlled release. See the
"PKG",649,22,1,"PAH",2,1,2,0)
description for the VBECS BUNDLE 1.0 for patch details.
"PKG",649,22,1,"PAH","B",0,2)

"PKG",649,22,1,"PAH","B",1,1)

"PKG",649,"VERSION")
1.0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"VER")
8.0^22.0
**INSTALL NAME**
VBECS 1.0
"BLD",5356,0)
VBECS 1.0^VBECS^0^3090423^y
"BLD",5356,1,0)
^^2^2^3081203^
"BLD",5356,1,1,0)
This patch is part of the VBECS BUNDLE 1.0 controlled release. See the
"BLD",5356,1,2,0)
description for the VBECS BUNDLE 1.0 for patch details.
"BLD",5356,4,0)
^9.64PA^6002.01^1
"BLD",5356,4,6002.01,0)
6002.01
"BLD",5356,4,6002.01,222)
y^y^f^^^^n
"BLD",5356,4,"B",6002.01,6002.01)

"BLD",5356,6.3)
35
"BLD",5356,"ABPKG")
n
"BLD",5356,"INID")
^n
"BLD",5356,"INIT")
EN^VBECPOST
"BLD",5356,"KRN",0)
^9.67PA^8989.52^19
"BLD",5356,"KRN",.4,0)
.4
"BLD",5356,"KRN",.401,0)
.401
"BLD",5356,"KRN",.401,"NM",0)
^9.68A^^0
"BLD",5356,"KRN",.402,0)
.402
"BLD",5356,"KRN",.403,0)
.403
"BLD",5356,"KRN",.5,0)
.5
"BLD",5356,"KRN",.84,0)
.84
"BLD",5356,"KRN",3.6,0)
3.6
"BLD",5356,"KRN",3.6,"NM",0)
^9.68A^^0
"BLD",5356,"KRN",3.8,0)
3.8
"BLD",5356,"KRN",3.8,"NM",0)
^9.68A^2^1
"BLD",5356,"KRN",3.8,"NM",2,0)
VBECS INTERFACE ADMIN^^0
"BLD",5356,"KRN",3.8,"NM","B","VBECS INTERFACE ADMIN",2)

"BLD",5356,"KRN",9.2,0)
9.2
"BLD",5356,"KRN",9.8,0)
9.8
"BLD",5356,"KRN",9.8,"NM",0)
^9.68A^73^35
"BLD",5356,"KRN",9.8,"NM",1,0)
VBECA1^^0^B15238106
"BLD",5356,"KRN",9.8,"NM",2,0)
VBECA1A^^0^B4232079
"BLD",5356,"KRN",9.8,"NM",3,0)
VBECA1B^^0^B61255311
"BLD",5356,"KRN",9.8,"NM",5,0)
VBECA3^^0^B13958816
"BLD",5356,"KRN",9.8,"NM",6,0)
VBECA3A^^0^B116577
"BLD",5356,"KRN",9.8,"NM",7,0)
VBECA3B^^0^B10836564
"BLD",5356,"KRN",9.8,"NM",8,0)
VBECA3C^^0^B16841971
"BLD",5356,"KRN",9.8,"NM",9,0)
VBECA4^^0^B15334551
"BLD",5356,"KRN",9.8,"NM",11,0)
VBECA5A^^0^B2902941
"BLD",5356,"KRN",9.8,"NM",12,0)
VBECA5B^^0^B8762794
"BLD",5356,"KRN",9.8,"NM",13,0)
VBECA6^^0^B10870720
"BLD",5356,"KRN",9.8,"NM",14,0)
VBECA7^^0^B28140649
"BLD",5356,"KRN",9.8,"NM",15,0)
VBECA7A^^0^B37404950
"BLD",5356,"KRN",9.8,"NM",16,0)
VBECA7A1^^0^B69945388
"BLD",5356,"KRN",9.8,"NM",17,0)
VBECA7B^^0^B64114607
"BLD",5356,"KRN",9.8,"NM",46,0)
VBECLU^^0^B62085514
"BLD",5356,"KRN",9.8,"NM",47,0)
VBECLU0^^0^B22984698
"BLD",5356,"KRN",9.8,"NM",48,0)
VBECLU3^^0^B17629716
"BLD",5356,"KRN",9.8,"NM",49,0)
VBECPOST^^0^B81343398
"BLD",5356,"KRN",9.8,"NM",50,0)
VBECRL^^0^B10917646
"BLD",5356,"KRN",9.8,"NM",54,0)
VBECRPC1^^0^B5917800
"BLD",5356,"KRN",9.8,"NM",55,0)
VBECRPCA^^0^B73291905
"BLD",5356,"KRN",9.8,"NM",56,0)
VBECRPCB^^0^B37262884
"BLD",5356,"KRN",9.8,"NM",57,0)
VBECRPCC^^0^B23397469
"BLD",5356,"KRN",9.8,"NM",58,0)
VBECRPCD^^0^B4946296
"BLD",5356,"KRN",9.8,"NM",59,0)
VBECRPCE^^0^B8061175
"BLD",5356,"KRN",9.8,"NM",60,0)
VBECRPCH^^0^B4049349
"BLD",5356,"KRN",9.8,"NM",61,0)
VBECRPCM^^0^B41078175
"BLD",5356,"KRN",9.8,"NM",62,0)
VBECRPCP^^0^B17844001
"BLD",5356,"KRN",9.8,"NM",64,0)
VBECRPCW^^0^B4711802
"BLD",5356,"KRN",9.8,"NM",68,0)
VBECVLC^^0^B21445006
"BLD",5356,"KRN",9.8,"NM",70,0)
VBECRPC^^0^B37044839
"BLD",5356,"KRN",9.8,"NM",71,0)
VBECA1B1^^0^B35331122
"BLD",5356,"KRN",9.8,"NM",72,0)
VBECENV^^0^B11886954
"BLD",5356,"KRN",9.8,"NM",73,0)
VBECHLRT^^0^B3440546
"BLD",5356,"KRN",9.8,"NM","B","VBECA1",1)

"BLD",5356,"KRN",9.8,"NM","B","VBECA1A",2)

"BLD",5356,"KRN",9.8,"NM","B","VBECA1B",3)

"BLD",5356,"KRN",9.8,"NM","B","VBECA1B1",71)

"BLD",5356,"KRN",9.8,"NM","B","VBECA3",5)

"BLD",5356,"KRN",9.8,"NM","B","VBECA3A",6)

"BLD",5356,"KRN",9.8,"NM","B","VBECA3B",7)

"BLD",5356,"KRN",9.8,"NM","B","VBECA3C",8)

"BLD",5356,"KRN",9.8,"NM","B","VBECA4",9)

"BLD",5356,"KRN",9.8,"NM","B","VBECA5A",11)

"BLD",5356,"KRN",9.8,"NM","B","VBECA5B",12)

"BLD",5356,"KRN",9.8,"NM","B","VBECA6",13)

"BLD",5356,"KRN",9.8,"NM","B","VBECA7",14)

"BLD",5356,"KRN",9.8,"NM","B","VBECA7A",15)

"BLD",5356,"KRN",9.8,"NM","B","VBECA7A1",16)

"BLD",5356,"KRN",9.8,"NM","B","VBECA7B",17)

"BLD",5356,"KRN",9.8,"NM","B","VBECENV",72)

"BLD",5356,"KRN",9.8,"NM","B","VBECHLRT",73)

"BLD",5356,"KRN",9.8,"NM","B","VBECLU",46)

"BLD",5356,"KRN",9.8,"NM","B","VBECLU0",47)

"BLD",5356,"KRN",9.8,"NM","B","VBECLU3",48)

"BLD",5356,"KRN",9.8,"NM","B","VBECPOST",49)

"BLD",5356,"KRN",9.8,"NM","B","VBECRL",50)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPC",70)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPC1",54)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCA",55)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCB",56)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCC",57)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCD",58)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCE",59)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCH",60)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCM",61)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCP",62)

"BLD",5356,"KRN",9.8,"NM","B","VBECRPCW",64)

"BLD",5356,"KRN",9.8,"NM","B","VBECVLC",68)

"BLD",5356,"KRN",19,0)
19
"BLD",5356,"KRN",19,"NM",0)
^9.68A^42^1
"BLD",5356,"KRN",19,"NM",42,0)
VBECS VISTALINK CONTEXT^^0
"BLD",5356,"KRN",19,"NM","B","VBECS VISTALINK CONTEXT",42)

"BLD",5356,"KRN",19.1,0)
19.1
"BLD",5356,"KRN",101,0)
101
"BLD",5356,"KRN",101,"NM",0)
^9.68A^11^7
"BLD",5356,"KRN",101,"NM",3,0)
VBECS ADT-A08 CLIENT^^0
"BLD",5356,"KRN",101,"NM",5,0)
VBECS ADT-A08 SERVER^^0
"BLD",5356,"KRN",101,"NM",6,0)
VBECS ADT-A40 CLIENT^^0
"BLD",5356,"KRN",101,"NM",8,0)
VBECS ADT-A40 SERVER^^0
"BLD",5356,"KRN",101,"NM",9,0)
VBECS OMG CLIENT^^0
"BLD",5356,"KRN",101,"NM",10,0)
VBECS OMG SERVER^^0
"BLD",5356,"KRN",101,"NM",11,0)
VBECS ADT-A08 ROUTER^^0
"BLD",5356,"KRN",101,"NM","B","VBECS ADT-A08 CLIENT",3)

"BLD",5356,"KRN",101,"NM","B","VBECS ADT-A08 ROUTER",11)

"BLD",5356,"KRN",101,"NM","B","VBECS ADT-A08 SERVER",5)

"BLD",5356,"KRN",101,"NM","B","VBECS ADT-A40 CLIENT",6)

"BLD",5356,"KRN",101,"NM","B","VBECS ADT-A40 SERVER",8)

"BLD",5356,"KRN",101,"NM","B","VBECS OMG CLIENT",9)

"BLD",5356,"KRN",101,"NM","B","VBECS OMG SERVER",10)

"BLD",5356,"KRN",409.61,0)
409.61
"BLD",5356,"KRN",771,0)
771
"BLD",5356,"KRN",771,"NM",0)
^9.68A^3^3
"BLD",5356,"KRN",771,"NM",1,0)
VBECS^^0
"BLD",5356,"KRN",771,"NM",2,0)
VBECS ADT^^0
"BLD",5356,"KRN",771,"NM",3,0)
VBECS TRIGGER^^0
"BLD",5356,"KRN",771,"NM","B","VBECS",1)

"BLD",5356,"KRN",771,"NM","B","VBECS ADT",2)

"BLD",5356,"KRN",771,"NM","B","VBECS TRIGGER",3)

"BLD",5356,"KRN",870,0)
870
"BLD",5356,"KRN",870,"NM",0)
^9.68A^3^3
"BLD",5356,"KRN",870,"NM",1,0)
VBECS-OERR^^0
"BLD",5356,"KRN",870,"NM",2,0)
VBECSPTM^^0
"BLD",5356,"KRN",870,"NM",3,0)
VBECSPTU^^0
"BLD",5356,"KRN",870,"NM","B","VBECS-OERR",1)

"BLD",5356,"KRN",870,"NM","B","VBECSPTM",2)

"BLD",5356,"KRN",870,"NM","B","VBECSPTU",3)

"BLD",5356,"KRN",8989.51,0)
8989.51
"BLD",5356,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",5356,"KRN",8989.51,"NM",1,0)
VBECS VISTALINK^^0
"BLD",5356,"KRN",8989.51,"NM","B","VBECS VISTALINK",1)

"BLD",5356,"KRN",8989.52,0)
8989.52
"BLD",5356,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",5356,"KRN",8994,0)
8994
"BLD",5356,"KRN",8994,"NM",0)
^9.68A^14^14
"BLD",5356,"KRN",8994,"NM",1,0)
VBECS ACCESSION AREA LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",2,0)
VBECS BLOOD BANK USER LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",3,0)
VBECS DIVISION LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",4,0)
VBECS HCPCS CODES LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",5,0)
VBECS HOSPITAL LOCATION LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",6,0)
VBECS LAB ACCESSION UID LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",7,0)
VBECS LAB ORDER LOOKUP BY UID^^0
"BLD",5356,"KRN",8994,"NM",8,0)
VBECS LAB TEST RESULTS LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",9,0)
VBECS LABORATORY TEST LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",10,0)
VBECS MED PROFILE LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",11,0)
VBECS PATIENT LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",12,0)
VBECS PROVIDER LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",13,0)
VBECS WORKLOAD CODES LOOKUP^^0
"BLD",5356,"KRN",8994,"NM",14,0)
VBECS DSS EXTRACT^^0
"BLD",5356,"KRN",8994,"NM","B","VBECS ACCESSION AREA LOOKUP",1)

"BLD",5356,"KRN",8994,"NM","B","VBECS BLOOD BANK USER LOOKUP",2)

"BLD",5356,"KRN",8994,"NM","B","VBECS DIVISION LOOKUP",3)

"BLD",5356,"KRN",8994,"NM","B","VBECS DSS EXTRACT",14)

"BLD",5356,"KRN",8994,"NM","B","VBECS HCPCS CODES LOOKUP",4)

"BLD",5356,"KRN",8994,"NM","B","VBECS HOSPITAL LOCATION LOOKUP",5)

"BLD",5356,"KRN",8994,"NM","B","VBECS LAB ACCESSION UID LOOKUP",6)

"BLD",5356,"KRN",8994,"NM","B","VBECS LAB ORDER LOOKUP BY UID",7)

"BLD",5356,"KRN",8994,"NM","B","VBECS LAB TEST RESULTS LOOKUP",8)

"BLD",5356,"KRN",8994,"NM","B","VBECS LABORATORY TEST LOOKUP",9)

"BLD",5356,"KRN",8994,"NM","B","VBECS MED PROFILE LOOKUP",10)

"BLD",5356,"KRN",8994,"NM","B","VBECS PATIENT LOOKUP",11)

"BLD",5356,"KRN",8994,"NM","B","VBECS PROVIDER LOOKUP",12)

"BLD",5356,"KRN",8994,"NM","B","VBECS WORKLOAD CODES LOOKUP",13)

"BLD",5356,"KRN","B",.4,.4)

"BLD",5356,"KRN","B",.401,.401)

"BLD",5356,"KRN","B",.402,.402)

"BLD",5356,"KRN","B",.403,.403)

"BLD",5356,"KRN","B",.5,.5)

"BLD",5356,"KRN","B",.84,.84)

"BLD",5356,"KRN","B",3.6,3.6)

"BLD",5356,"KRN","B",3.8,3.8)

"BLD",5356,"KRN","B",9.2,9.2)

"BLD",5356,"KRN","B",9.8,9.8)

"BLD",5356,"KRN","B",19,19)

"BLD",5356,"KRN","B",19.1,19.1)

"BLD",5356,"KRN","B",101,101)

"BLD",5356,"KRN","B",409.61,409.61)

"BLD",5356,"KRN","B",771,771)

"BLD",5356,"KRN","B",870,870)

"BLD",5356,"KRN","B",8989.51,8989.51)

"BLD",5356,"KRN","B",8989.52,8989.52)

"BLD",5356,"KRN","B",8994,8994)

"BLD",5356,"PRE")
VBECENV
"BLD",5356,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",5356,"QUES",0)
^9.62^2^2
"BLD",5356,"QUES",1,0)
POSVLIPADDRESS
"BLD",5356,"QUES",1,1)
FA^7:15^K:X'?1.3N1"."1.3N1"."1.3N1"."1.3N X
"BLD",5356,"QUES",1,"A")
VBECS Server IP Address: 
"BLD",5356,"QUES",1,"Q")
Enter the VBECS Server IP Address where the VBECS VistALink XML Listener Service is installed using the format nnn.nnn.nnn.nnn
"BLD",5356,"QUES",2,0)
POSVLPORT
"BLD",5356,"QUES",2,1)
NA^1024:65535
"BLD",5356,"QUES",2,"A")
VBECS VistALink Listener Service Port Number: 
"BLD",5356,"QUES",2,"Q")
Enter the Port Number of the VBECS VistALink XML Listener Service (1024-65535).
"BLD",5356,"QUES","B","POSVLIPADDRESS",1)

"BLD",5356,"QUES","B","POSVLPORT",2)

"BLD",5356,"REQB",0)
^9.611^12^12
"BLD",5356,"REQB",1,0)
OR*3.0*243^1
"BLD",5356,"REQB",2,0)
LR*5.2*288^1
"BLD",5356,"REQB",3,0)
LR*5.2*294^1
"BLD",5356,"REQB",4,0)
XT*7.3*106^1
"BLD",5356,"REQB",5,0)
LR*5.2*387^1
"BLD",5356,"REQB",6,0)
SR*3.0*168^1
"BLD",5356,"REQB",7,0)
ECX*3.0*102^1
"BLD",5356,"REQB",8,0)
DI*22.0*159^1
"BLD",5356,"REQB",9,0)
XU*8.0*399^1
"BLD",5356,"REQB",10,0)
LR*5.2*367^1
"BLD",5356,"REQB",11,0)
LR*5.2*335^1
"BLD",5356,"REQB",12,0)
XT*7.3*116^1
"BLD",5356,"REQB","B","DI*22.0*159",8)

"BLD",5356,"REQB","B","ECX*3.0*102",7)

"BLD",5356,"REQB","B","LR*5.2*288",2)

"BLD",5356,"REQB","B","LR*5.2*294",3)

"BLD",5356,"REQB","B","LR*5.2*335",11)

"BLD",5356,"REQB","B","LR*5.2*367",10)

"BLD",5356,"REQB","B","LR*5.2*387",5)

"BLD",5356,"REQB","B","OR*3.0*243",1)

"BLD",5356,"REQB","B","SR*3.0*168",6)

"BLD",5356,"REQB","B","XT*7.3*106",4)

"BLD",5356,"REQB","B","XT*7.3*116",12)

"BLD",5356,"REQB","B","XU*8.0*399",9)

"FIA",6002.01)
VBECS WORKLOAD CAPTURE
"FIA",6002.01,0)
^VBEC(6002.01,
"FIA",6002.01,0,0)
6002.01
"FIA",6002.01,0,1)
y^y^f^^^^n
"FIA",6002.01,0,10)

"FIA",6002.01,0,11)

"FIA",6002.01,0,"RLRO")

"FIA",6002.01,0,"VR")
1.0^VBECS
"FIA",6002.01,6002.01)
0
"INIT")
EN^VBECPOST
"KRN",3.8,6218,-1)
0^2
"KRN",3.8,6218,0)
VBECS INTERFACE ADMIN^PU^y^^^^
"KRN",3.8,6218,2,0)
^3.801^2^2^3080411^^^^
"KRN",3.8,6218,2,1,0)
THIS MAIL GROUP IS USED TO RECEIVE ALERT/ERROR MESSAGES FROM VBECS HL7 
"KRN",3.8,6218,2,2,0)
INTERFACES AND VISTALINK ISSUES.
"KRN",3.8,6218,3)

"KRN",19,2926156,-1)
0^42
"KRN",19,2926156,0)
VBECS VISTALINK CONTEXT^VBECS VistALink Remote Procedures^^B^^^^^^^^VBECS
"KRN",19,2926156,1,0)
^19.06^1^1^3081119^^^^
"KRN",19,2926156,1,1,0)
This option is used as the VBECS VistALink application context.
"KRN",19,2926156,99.1)
61219,33942
"KRN",19,2926156,"RPC",0)
^19.05P^17^17
"KRN",19,2926156,"RPC",2,0)
VBECS PATIENT LOOKUP
"KRN",19,2926156,"RPC",4,0)
VBECS HOSPITAL LOCATION LOOKUP
"KRN",19,2926156,"RPC",5,0)
VBECS LABORATORY TEST LOOKUP
"KRN",19,2926156,"RPC",6,0)
VBECS PROVIDER LOOKUP
"KRN",19,2926156,"RPC",8,0)
VBECS BLOOD BANK USER LOOKUP
"KRN",19,2926156,"RPC",9,0)
VBECS DIVISION LOOKUP
"KRN",19,2926156,"RPC",10,0)
VBECS WORKLOAD CODES LOOKUP
"KRN",19,2926156,"RPC",11,0)
VBECS MED PROFILE LOOKUP
"KRN",19,2926156,"RPC",12,0)
VBECS HCPCS CODES LOOKUP
"KRN",19,2926156,"RPC",13,0)
VBECS LAB ACCESSION UID LOOKUP
"KRN",19,2926156,"RPC",14,0)
VBECS LAB TEST RESULTS LOOKUP
"KRN",19,2926156,"RPC",15,0)
VBECS ACCESSION AREA LOOKUP
"KRN",19,2926156,"RPC",16,0)
VBECS LAB ORDER LOOKUP BY UID
"KRN",19,2926156,"RPC",17,0)
VBECS DSS EXTRACT
"KRN",19,2926156,"U")
VBECS VISTALINK REMOTE PROCEDU
"KRN",101,6836,-1)
0^10
"KRN",101,6836,0)
VBECS OMG SERVER^^^E^^^^^^^^
"KRN",101,6836,1,0)
^^2^2^3040205^
"KRN",101,6836,1,1,0)
This protocol is triggered when an order update message is sent from 
"KRN",101,6836,1,2,0)
VBECS to CRPS.
"KRN",101,6836,770)
VBECS^^OMG^O19^^^^^^2.4^
"KRN",101,6836,775,0)
^101.0775PA^4^1
"KRN",101,6836,775,4,0)
6837
"KRN",101,6836,775,4,"^")
VBECS OMG CLIENT
"KRN",101,6837,-1)
0^9
"KRN",101,6837,0)
VBECS OMG CLIENT^^^S^^^^^^^^
"KRN",101,6837,770)
^OERR^^O20^^^VBECS-OERR^^^^ORG
"KRN",101,6837,771)
D EN^VBECHLOR
"KRN",101,6837,773)
0^0^0
"KRN",101,7067,-1)
0^3
"KRN",101,7067,0)
VBECS ADT-A08 CLIENT^ADT-A08 CLIENT^^S^^^^^^^^
"KRN",101,7067,99)
60998,28843
"KRN",101,7067,770)
^VBECS ADT^^A08^^^VBECSPTU^^^^ACK
"KRN",101,7067,771)

"KRN",101,7067,773)
0^0^0
"KRN",101,7067,774)

"KRN",101,7068,-1)
0^6
"KRN",101,7068,0)
VBECS ADT-A40 CLIENT^ADT-A40 CLIENT^^S^^^^^^^^
"KRN",101,7068,99)
60998,28843
"KRN",101,7068,770)
^VBECS ADT^^A40^^^VBECSPTM^^^^ACK
"KRN",101,7068,771)

"KRN",101,7068,773)
0^0^0
"KRN",101,7068,774)

"KRN",101,7083,-1)
0^11
"KRN",101,7083,0)
VBECS ADT-A08 ROUTER^ADT-A08 ROUTING PROTOCOL^^S^^^^^^^^
"KRN",101,7083,99)
60998,28843
"KRN",101,7083,770)
^VBECS ADT^^A08^^^VBECSPTU^^^^ACK
"KRN",101,7083,771)

"KRN",101,7083,773)
0^0^0
"KRN",101,7083,774)
D EN^VBECHLRT
"KRN",101,7084,-1)
0^5
"KRN",101,7084,0)
VBECS ADT-A08 SERVER^ADT-A08 SERVER^^E^^^^^^^^
"KRN",101,7084,99)
60998,28843
"KRN",101,7084,770)
VAFC PIMS^^ADT^A08^^^VBECSPTM^AL^AL^2.3^ACK
"KRN",101,7084,771)
Q
"KRN",101,7084,772)
Q
"KRN",101,7084,773)
0^0
"KRN",101,7084,774)
Q
"KRN",101,7084,775,0)
^101.0775PA^1^1
"KRN",101,7084,775,1,0)
7067
"KRN",101,7084,775,1,"^")
VBECS ADT-A08 CLIENT
"KRN",101,7096,-1)
0^8
"KRN",101,7096,0)
VBECS ADT-A40 SERVER^ADT-A40 SERVER^^E^^^^^^^^
"KRN",101,7096,99)
60998,28843
"KRN",101,7096,770)
MPIF TRIGGER^^ADT^A40^^^^AL^NE^2.4^
"KRN",101,7096,772)
Q
"KRN",101,7096,775,0)
^101.0775PA^1^1
"KRN",101,7096,775,1,0)
7068
"KRN",101,7096,775,1,"^")
VBECS ADT-A40 CLIENT
"KRN",771,122,-1)
0^1
"KRN",771,122,0)
VBECS^a^589^VBECS INTERFACE ADMIN^^^USA
"KRN",771,122,"EC")
^~\&
"KRN",771,122,"FS")
|
"KRN",771,145,-1)
0^2
"KRN",771,145,0)
VBECS ADT^a^589^VBECS INTERFACE ADMIN^^^USA
"KRN",771,145,"EC")
^~\&
"KRN",771,145,"FS")
|
"KRN",771,145,"MSG",0)
^771.06P^^0
"KRN",771,145,"SEG",0)
^771.05P^^0
"KRN",771,147,-1)
0^3
"KRN",771,147,0)
VBECS TRIGGER^a^^VBECS INTERFACE ADMIN^^^USA
"KRN",870,206,-1)
0^1
"KRN",870,206,0)
VBECS-OERR^^TCP^^^^^^^^^^^^^^^^^^1000
"KRN",870,206,400)
^19992^S^N^^^^^
"KRN",870,218,-1)
0^3
"KRN",870,218,0)
VBECSPTU^^TCP^^^^^^^^^^^^^^^^^^1000
"KRN",870,218,200)
^10^^10^10^^^^^R^1
"KRN",870,218,400)
10.3.21.32^5000^C^N^^^^^
"KRN",870,219,-1)
0^2
"KRN",870,219,0)
VBECSPTM^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,219,200)
^5^^10^10^^^^^R
"KRN",870,219,400)
10.3.21.32^5000^C^N^^^N^^
"KRN",8989.51,245,-1)
0^1
"KRN",8989.51,245,0)
VBECS VISTALINK^^1
"KRN",8989.51,245,1)
F
"KRN",8989.51,245,6)
F
"KRN",8989.51,245,30,0)
^8989.513I^1^1
"KRN",8989.51,245,30,1,0)
1^9.4
"KRN",8994,2373,-1)
0^11
"KRN",8994,2373,0)
VBECS PATIENT LOOKUP^SEARCH^VBECLU^4^R^
"KRN",8994,2373,1,0)
^8994.01^68^68^3050516^
"KRN",8994,2373,1,1,0)
This RPC returns XML containing a list of patient demographic data for 
"KRN",8994,2373,1,2,0)
the purpose of inserting a new patient in the VBECS database for 
"KRN",8994,2373,1,3,0)
when receiving an autologous or directed unit on a patient that is not 
"KRN",8994,2373,1,4,0)
already defined in the VBECS Patient table.
"KRN",8994,2373,1,5,0)
 
"KRN",8994,2373,1,6,0)
XML Mapping:
"KRN",8994,2373,1,7,0)
count attribute =       Number of records found
"KRN",8994,2373,1,8,0)
Number element =        Sequence number of records found
"KRN",8994,2373,1,9,0)
VistaPatientId =        PATIENT file (#2) / NUMBER field (#.001)
"KRN",8994,2373,1,10,0)
PatientLastName =       PATIENT file (#2) / first comma delimited piece 
"KRN",8994,2373,1,11,0)
                        of the NAME field (#.01)
"KRN",8994,2373,1,12,0)
PatientFirstName =      PATIENT file (#2) / second comma delimited piece 
"KRN",8994,2373,1,13,0)
                        and first "space" delimited piece of the NAME
"KRN",8994,2373,1,14,0)
                        field (#.01)
"KRN",8994,2373,1,15,0)
PatientMiddleName =     PATIENT file (#2) / second comma delimited piece
"KRN",8994,2373,1,16,0)
                        and second "space" delimited piece of the NAME
"KRN",8994,2373,1,17,0)
                        field (#.01)
"KRN",8994,2373,1,18,0)
Sensitive =             DG SECURITY LOG file (#38.1) / SECURITY LEVEL 
"KRN",8994,2373,1,19,0)
                        field (#2)
"KRN",8994,2373,1,20,0)
PatientDOB =            PATIENT file (#2) / DATE OF BIRTH field (#.03) in 
"KRN",8994,2373,1,21,0)
                        HL7 format
"KRN",8994,2373,1,22,0)
PatientDOBCode =        Code derived from a missing day or month value in 
"KRN",8994,2373,1,23,0)
                        PatientDOB.
"KRN",8994,2373,1,24,0)
                        B = Both Day and Month is unknown.
"KRN",8994,2373,1,25,0)
                        M = Month is unknown.
"KRN",8994,2373,1,26,0)
                        D = Day is unknown
"KRN",8994,2373,1,27,0)
                        V = valid Day/Month/Year
"KRN",8994,2373,1,28,0)
PatientSSN =            PATIENT file (#2) / SOCIAL SECURITY NUMBER field 
"KRN",8994,2373,1,29,0)
                        (#.09)
"KRN",8994,2373,1,30,0)
PatientDeathDate =      PATIENT file (#2) / DATE OF DEATH field (#.351)
"KRN",8994,2373,1,31,0)
Type =                  TYPE OF PATIENT file (#391) / NAME field (#.01)
"KRN",8994,2373,1,32,0)
PrimaryEligibility =    MAS ELIGIBILITY CODE file (#8.1) / PRINT NAME 
"KRN",8994,2373,1,33,0)
                        field (#5)
"KRN",8994,2373,1,34,0)
ServiceConnected =      PATIENT file (#2) / SERVICE CONNECTED? field 
"KRN",8994,2373,1,35,0)
                        (#.301)
"KRN",8994,2373,1,36,0)
ScPercent =             PATIENT file (#2) / SERVICE CONNECTED PERCENTAGE 
"KRN",8994,2373,1,37,0)
                        field (#.302)
"KRN",8994,2373,1,38,0)
PatientSexCode =        PATIENT file (#2) / SEX field (#.02)
"KRN",8994,2373,1,39,0)
PatientICN =            PATIENT file (#2) / INTEGRATION CONTROL NUMBER 
"KRN",8994,2373,1,40,0)
                        field (#991.01)
"KRN",8994,2373,1,41,0)
Veteran =               PATIENT file (#2) / VETERAN (Y/N)? field (#1901)
"KRN",8994,2373,1,42,0)
PatientLocation =       PATIENT file (#2) / WARD LOCATION field (#.1)
"KRN",8994,2373,1,43,0)
PatientRoomBed =        PATIENT file (#2) / ROOM-BED field (#.101)
"KRN",8994,2373,1,44,0)
 
"KRN",8994,2373,1,45,0)
 
"KRN",8994,2373,1,46,0)
XML Example:
"KRN",8994,2373,1,47,0)
<record count='1'>
"KRN",8994,2373,1,48,0)
    <Patient>
"KRN",8994,2373,1,49,0)
        <Number>1</Number>
"KRN",8994,2373,1,50,0)
        <VistaPatientID>1000</VistaPatientID>
"KRN",8994,2373,1,51,0)
        <PatientLastName>VBECSpatient</PatientLastName>
"KRN",8994,2373,1,52,0)
        <PatientFirstName>One</PatientFirstName>
"KRN",8994,2373,1,53,0)
        <PatientMiddleName>T</PatientMiddleName>
"KRN",8994,2373,1,54,0)
        <Sensitive>false</Sensitive>
"KRN",8994,2373,1,55,0)
        <PatientDOB>19291120</PatientDOB>
"KRN",8994,2373,1,56,0)
        <PatientDOBCode>V</PatientDOBCode>
"KRN",8994,2373,1,57,0)
        <PatientSSN>666000000</PatientSSN>
"KRN",8994,2373,1,58,0)
        <Type>SC VETERAN</Type>
"KRN",8994,2373,1,59,0)
        <PrimaryEligibility>SC, 50% TO 100%</PrimaryEligibility>
"KRN",8994,2373,1,60,0)
        <ServiceConnected>true</ServiceConnected>
"KRN",8994,2373,1,61,0)
        <ScPercent>50</ScPercent>
"KRN",8994,2373,1,62,0)
        <PatientSexCode>M</PatientSexCode>
"KRN",8994,2373,1,63,0)
        <PatientICN>1000000000V000000</PatientICN>
"KRN",8994,2373,1,64,0)
        <Veteran>true</Veteran>
"KRN",8994,2373,1,65,0)
        <PatientLocation></PatientLocation>
"KRN",8994,2373,1,66,0)
        <PatientRoomBed></PatientRoomBed>
"KRN",8994,2373,1,67,0)
    </Patient>
"KRN",8994,2373,1,68,0)
</record>
"KRN",8994,2373,2,0)
^8994.02A^1^1
"KRN",8994,2373,2,1,0)
PARAM^1^999^0^1
"KRN",8994,2373,2,1,1,0)
^8994.021^5^5^3031007^^
"KRN",8994,2373,2,1,1,1,0)
Input PARAM("SEARCH TYPE") = type of search requested
"KRN",8994,2373,2,1,1,2,0)
Input PARAM("SEARCH VALUE") = value to search on
"KRN",8994,2373,2,1,1,3,0)
RETURN PARAMETER DESCRIPTION:
"KRN",8994,2373,2,1,1,4,0)
XML document with list of patients found based on search type and
"KRN",8994,2373,2,1,1,5,0)
search value.
"KRN",8994,2373,2,"B","PARAM",1)

"KRN",8994,2373,2,"PARAMSEQ",1,1)

"KRN",8994,2457,-1)
0^5
"KRN",8994,2457,0)
VBECS HOSPITAL LOCATION LOOKUP^LOC^VBECRPCD^4^R
"KRN",8994,2457,1,0)
^^27^27^3050510^
"KRN",8994,2457,1,1,0)
This RPC returns XML containing a list of Hospital Locations from the 
"KRN",8994,2457,1,2,0)
HOSPITAL LOCATION file (#44) of either Ward or Clinic Type for use in 
"KRN",8994,2457,1,3,0)
VBECS when issuing units to a location other than the Blood Bank.
"KRN",8994,2457,1,4,0)
 
"KRN",8994,2457,1,5,0)
XML Mapping:
"KRN",8994,2457,1,6,0)
LocationName element = HOSPITAL LOCATION file (#44) / NAME field (#.01)
"KRN",8994,2457,1,7,0)
LocationIEN element =  HOSPITAL LOCATION file (#44) / NUMBER field (#.001)
"KRN",8994,2457,1,8,0)
LocationType element = HOSPITAL LOCATION file (#44) / TYPE field (#2)
"KRN",8994,2457,1,9,0)
 
"KRN",8994,2457,1,10,0)
XML Example:
"KRN",8994,2457,1,11,0)
<HospitalLocations>
"KRN",8994,2457,1,12,0)
    <Location>
"KRN",8994,2457,1,13,0)
        <LocationName>6W REHAB-KC</LocationName>
"KRN",8994,2457,1,14,0)
        <LocationIEN>503</LocationIEN>
"KRN",8994,2457,1,15,0)
        <LocationType>W</LocationType>
"KRN",8994,2457,1,16,0)
    </Location>
"KRN",8994,2457,1,17,0)
    <Location>
"KRN",8994,2457,1,18,0)
        <LocationName>7E PCUS-KC</LocationName>
"KRN",8994,2457,1,19,0)
        <LocationIEN>504</LocationIEN>
"KRN",8994,2457,1,20,0)
        <LocationType>W</LocationType>
"KRN",8994,2457,1,21,0)
    </Location>
"KRN",8994,2457,1,22,0)
    <Location>
"KRN",8994,2457,1,23,0)
        <LocationName>KC-GI RESEARCH</LocationName>
"KRN",8994,2457,1,24,0)
        <LocationIEN>511</LocationIEN>
"KRN",8994,2457,1,25,0)
        <LocationType>C</LocationType>
"KRN",8994,2457,1,26,0)
    </Location>
"KRN",8994,2457,1,27,0)
</HospitalLocations>
"KRN",8994,2457,2,0)
^8994.02A^1^1
"KRN",8994,2457,2,1,0)
DIV^1^999^1^1
"KRN",8994,2457,2,1,1,0)
^^1^1^3040226^
"KRN",8994,2457,2,1,1,1,0)
Input DIV = DIVISION Name
"KRN",8994,2457,2,"B","DIV",1)

"KRN",8994,2457,2,"PARAMSEQ",1,1)

"KRN",8994,2457,3,0)
^^1^1^3040226^
"KRN",8994,2457,3,1,0)
XML document with a list of Hospital Location found based on input value
"KRN",8994,2458,-1)
0^12
"KRN",8994,2458,0)
VBECS PROVIDER LOOKUP^PROVIDER^VBECRPCE^4^R
"KRN",8994,2458,1,0)
^8994.01^36^36^3050516^
"KRN",8994,2458,1,1,0)
This RPC returns XML containing a list of physicians in the NEW PERSON 
"KRN",8994,2458,1,2,0)
file (#200) that hold the PROVIDER Security Key and do not have a 
"KRN",8994,2458,1,3,0)
TERMINATION DATE value prior to the current date, and has a matching 
"KRN",8994,2458,1,4,0)
division from the DIV input parameter whose last name starts with the 
"KRN",8994,2458,1,5,0)
DATA input parameter.
"KRN",8994,2458,1,6,0)
 
"KRN",8994,2458,1,7,0)
XML Mapping:
"KRN",8994,2458,1,8,0)
count attribute =       Number of records found
"KRN",8994,2458,1,9,0)
ProviderIEN element =   NEW PERSON file (#200) / NUMBER field (#.001)
"KRN",8994,2458,1,10,0)
ProviderName element =  NEW PERSON file (#200) / NAME field (#.01)
"KRN",8994,2458,1,11,0)
 
"KRN",8994,2458,1,12,0)
XML Example:
"KRN",8994,2458,1,13,0)
<Providers>
"KRN",8994,2458,1,14,0)
    <Record count='5'>
"KRN",8994,2458,1,15,0)
        <Provider>
"KRN",8994,2458,1,16,0)
            <ProviderIEN>7650</ProviderIEN>
"KRN",8994,2458,1,17,0)
            <ProviderName>VBECSprovider,One</ProviderName>
"KRN",8994,2458,1,18,0)
        </Provider>
"KRN",8994,2458,1,19,0)
        <Provider>
"KRN",8994,2458,1,20,0)
            <ProviderIEN>53304</ProviderIEN>
"KRN",8994,2458,1,21,0)
            <ProviderName>VBECSprovider,Two</ProviderName>
"KRN",8994,2458,1,22,0)
        </Provider>
"KRN",8994,2458,1,23,0)
        <Provider>
"KRN",8994,2458,1,24,0)
            <ProviderIEN>14909</ProviderIEN>
"KRN",8994,2458,1,25,0)
            <ProviderName>VBECSprovider,Three</ProviderName>
"KRN",8994,2458,1,26,0)
        </Provider>
"KRN",8994,2458,1,27,0)
        <Provider>
"KRN",8994,2458,1,28,0)
            <ProviderIEN>8190</ProviderIEN>
"KRN",8994,2458,1,29,0)
            <ProviderName>VBECSprovider,Four</ProviderName>
"KRN",8994,2458,1,30,0)
        </Provider>
"KRN",8994,2458,1,31,0)
        <Provider>
"KRN",8994,2458,1,32,0)
            <ProviderIEN>10574</ProviderIEN>
"KRN",8994,2458,1,33,0)
            <ProviderName>VBECSprovider,Five</ProviderName>
"KRN",8994,2458,1,34,0)
        </Provider>
"KRN",8994,2458,1,35,0)
    </Record>
"KRN",8994,2458,1,36,0)
</Providers>
"KRN",8994,2458,2,0)
^8994.02A^2^2
"KRN",8994,2458,2,1,0)
DIV^1^8^1^1
"KRN",8994,2458,2,1,1,0)
^8994.021^1^1^3040316^^
"KRN",8994,2458,2,1,1,1,0)
Input DIV = DIVISION (Station Number)
"KRN",8994,2458,2,2,0)
DATA^1^99^0^2
"KRN",8994,2458,2,2,1,0)
^^1^1^3040316^
"KRN",8994,2458,2,2,1,1,0)
Input DATA = Name of provider used to perform search in file 200.
"KRN",8994,2458,2,"B","DATA",2)

"KRN",8994,2458,2,"B","DIV",1)

"KRN",8994,2458,2,"PARAMSEQ",1,1)

"KRN",8994,2458,2,"PARAMSEQ",2,2)

"KRN",8994,2458,3,0)
^8994.03^2^2^3040311^^
"KRN",8994,2458,3,1,0)
XML document with a list of users from the New Person file #200 that hold
"KRN",8994,2458,3,2,0)
the Security Key of PROVIDER.
"KRN",8994,2459,-1)
0^9
"KRN",8994,2459,0)
VBECS LABORATORY TEST LOOKUP^LABTEST^VBECRPCA^4^R
"KRN",8994,2459,1,0)
^^28^28^3050216^
"KRN",8994,2459,1,1,0)
This RPC returns XML containing a list of Laboratory tests from the 
"KRN",8994,2459,1,2,0)
LABORATORY TEST file (#60).
"KRN",8994,2459,1,3,0)
 
"KRN",8994,2459,1,4,0)
XML Mapping:
"KRN",8994,2459,1,5,0)
Name element =          LABORATORY TEST file (#60) / NAME field (#.01)
"KRN",8994,2459,1,6,0)
IEN element =           LABORATORY TEST file (#60) / NUMBER field (#.001)
"KRN",8994,2459,1,7,0)
Specimen element =      LABORATORY TEST file (#60) / SITE/SPECIMEN 
"KRN",8994,2459,1,8,0)
                        sub-file (#60.01) / SITE/SPECIMEN field (#.01)
"KRN",8994,2459,1,9,0)
                        pointer to TOPOGRAPHY FIELD FILE (#61)
"KRN",8994,2459,1,10,0)
 
"KRN",8994,2459,1,11,0)
XML Example:
"KRN",8994,2459,1,12,0)
<LabTests>
"KRN",8994,2459,1,13,0)
    <LabTest>
"KRN",8994,2459,1,14,0)
        <Name>HEMATOCRIT - BODY FLUID-KC</Name>
"KRN",8994,2459,1,15,0)
        <IEN>1125</IEN>
"KRN",8994,2459,1,16,0)
        <Specimen>BODY FLUID,NOS</Specimen>
"KRN",8994,2459,1,17,0)
    </LabTest>
"KRN",8994,2459,1,18,0)
    <LabTest>
"KRN",8994,2459,1,19,0)
        <Name>HCT i-STAT</Name>
"KRN",8994,2459,1,20,0)
        <IEN>5742</IEN>
"KRN",8994,2459,1,21,0)
        <Specimen>BLOOD</Specimen>
"KRN",8994,2459,1,22,0)
    </LabTest>
"KRN",8994,2459,1,23,0)
    <LabTest>
"KRN",8994,2459,1,24,0)
        <Name>HCT(BLOOD GAS)</Name>
"KRN",8994,2459,1,25,0)
        <IEN>2244</IEN>
"KRN",8994,2459,1,26,0)
        <Specimen>ARTERIAL BLOOD</Specimen>
"KRN",8994,2459,1,27,0)
    </LabTest>
"KRN",8994,2459,1,28,0)
</LabTests>
"KRN",8994,2459,2,0)
^8994.02A^1^1
"KRN",8994,2459,2,1,0)
DATA^1^999^0^1
"KRN",8994,2459,2,1,1,0)
^8994.021^1^1^3040315^^
"KRN",8994,2459,2,1,1,1,0)
The DATA input parameter represents a Lab Test name used to search for potential matches in file 60.
"KRN",8994,2459,2,"B","DATA",1)

"KRN",8994,2459,2,"PARAMSEQ",1,1)

"KRN",8994,2459,3,0)
^8994.03^1^1^3040315^^
"KRN",8994,2459,3,1,0)
XML document with a list of Laboratory Tests and associated Lab test data based on the search input parameter.
"KRN",8994,2526,-1)
0^3
"KRN",8994,2526,0)
VBECS DIVISION LOOKUP^DIV^VBECRPCM^4^R
"KRN",8994,2526,1,0)
^8994.01^30^30^3070910^^^^
"KRN",8994,2526,1,1,0)
This RPC returns XML containing a list of active VAMC divisions associated
"KRN",8994,2526,1,2,0)
with a Medical Center.
"KRN",8994,2526,1,3,0)
 
"KRN",8994,2526,1,4,0)
XML Mapping:
"KRN",8994,2526,1,5,0)
DivisionId element =   INSTITUTION file (#4) / STATION NUMBER field (#99)
"KRN",8994,2526,1,6,0)
DivisionName element = INSTITUTION file (#4) / NAME field (#.01)
"KRN",8994,2526,1,7,0)
 
"KRN",8994,2526,1,8,0)
XML Example:
"KRN",8994,2526,1,9,0)
<Divisions>
"KRN",8994,2526,1,10,0)
    <Division>
"KRN",8994,2526,1,11,0)
        <DivisionId>589</DivisionId>
"KRN",8994,2526,1,12,0)
        <DivisionName>VA HEARTLAND - WEST, VISN 15</DivisionName>
"KRN",8994,2526,1,13,0)
    </Division>
"KRN",8994,2526,1,14,0)
    <Division>
"KRN",8994,2526,1,15,0)
        <DivisionId>589A4</DivisionId>
"KRN",8994,2526,1,16,0)
        <DivisionName>COLUMBIA, MO VAMC</DivisionName>
"KRN",8994,2526,1,17,0)
    </Division>
"KRN",8994,2526,1,18,0)
    <Division>
"KRN",8994,2526,1,19,0)
        <DivisionId>589A5</DivisionId>
"KRN",8994,2526,1,20,0)
        <DivisionName>TOPEKA, KS VAMC</DivisionName>
"KRN",8994,2526,1,21,0)
    </Division>
"KRN",8994,2526,1,22,0)
    <Division>
"KRN",8994,2526,1,23,0)
        <DivisionId>589A6</DivisionId>
"KRN",8994,2526,1,24,0)
        <DivisionName>LEAVENWORTH VAMC</DivisionName>
"KRN",8994,2526,1,25,0)
    </Division>
"KRN",8994,2526,1,26,0)
    <Division>
"KRN",8994,2526,1,27,0)
        <DivisionId>589A7</DivisionId>
"KRN",8994,2526,1,28,0)
        <DivisionName>WICHITA VAMC</DivisionName>
"KRN",8994,2526,1,29,0)
    </Division>
"KRN",8994,2526,1,30,0)
</Divisions>
"KRN",8994,2526,3,0)
^8994.03^2^2^3070910^^^^
"KRN",8994,2526,3,1,0)
XML document with a list of active divisions from the Institution file #4 
"KRN",8994,2526,3,2,0)
based on the Medical Center Division file #40.8.
"KRN",8994,2527,-1)
0^2
"KRN",8994,2527,0)
VBECS BLOOD BANK USER LOOKUP^BBUSER^VBECRPCM^4^R
"KRN",8994,2527,1,0)
^8994.01^26^26^3070522^^
"KRN",8994,2527,1,1,0)
This RPC returns XML containing a list of users from the New Person file
"KRN",8994,2527,1,2,0)
#200 that hold the Security Keys associated with Blood Bank.
"KRN",8994,2527,1,3,0)
 
"KRN",8994,2527,1,4,0)
XML Mapping:
"KRN",8994,2527,1,5,0)
count attribute =        Number of records found
"KRN",8994,2527,1,6,0)
userName attribute =     NEW PERSON file (#200) / NAME field (#.01)
"KRN",8994,2527,1,7,0)
userDuz attribute =      NEW PERSON file (#200) / IEN field (#.001)
"KRN",8994,2527,1,8,0)
userInitials attribute = NEW PERSON file (#200) / INITIAL field (#1)
"KRN",8994,2527,1,9,0)
divisionCode attribute = INSTITUTION file (#4) / STATION NUMBER field 
"KRN",8994,2527,1,10,0)
(#99)
"KRN",8994,2527,1,11,0)
 
"KRN",8994,2527,1,12,0)
XML Example:
"KRN",8994,2527,1,13,0)
<BloodBankUsers>
"KRN",8994,2527,1,14,0)
    <Record count="1">
"KRN",8994,2527,1,15,0)
        <BloodBankUser userName="BLOODBANK,USER" userDUZ="5000" 
"KRN",8994,2527,1,16,0)
userInitials="BBU">
"KRN",8994,2527,1,17,0)
            <Divisions>
"KRN",8994,2527,1,18,0)
                <Division divisionCode="589" />
"KRN",8994,2527,1,19,0)
                <Division divisionCode="589A4" />
"KRN",8994,2527,1,20,0)
                <Division divisionCode="589A5" />
"KRN",8994,2527,1,21,0)
                <Division divisionCode="589A6" />
"KRN",8994,2527,1,22,0)
                <Division divisionCode="589A7" />
"KRN",8994,2527,1,23,0)
            </Divisions>
"KRN",8994,2527,1,24,0)
        </BloodBankUser>
"KRN",8994,2527,1,25,0)
    </Record>
"KRN",8994,2527,1,26,0)
</BloodBankUsers>
"KRN",8994,2527,3,0)
^8994.03^2^2^3070522^^^
"KRN",8994,2527,3,1,0)
XML document containing a list of users from the New Person file that 
"KRN",8994,2527,3,2,0)
hold either the LRBLSUPER or LRBLOODBANK Security keys.
"KRN",8994,2528,-1)
0^13
"KRN",8994,2528,0)
VBECS WORKLOAD CODES LOOKUP^WKLD^VBECRPCW^4^R
"KRN",8994,2528,1,0)
^8994.01^30^30^3050907^^
"KRN",8994,2528,1,1,0)
This RPC returns XML containing a list of Workload Codes from the WKLD
"KRN",8994,2528,1,2,0)
CODE file (#64) with a WORKLOAD CODE LAB SECTION of "Blood Bank" to VBECS.
"KRN",8994,2528,1,3,0)
 
"KRN",8994,2528,1,4,0)
XML Mapping:
"KRN",8994,2528,1,5,0)
LMIP element =             WKLD CODE file (#64) / WKLD CODE field (#1)
"KRN",8994,2528,1,6,0)
Procedure element =        WKLD CODE file (#64) / PROCEDURE field (#.01)
"KRN",8994,2528,1,7,0)
Cost element =             WKLD CODE file (#64) / COST field (#7)
"KRN",8994,2528,1,8,0)
WeightMultiplier element = WKLD CODE file (#64) / WKLD UNIT WEIGHT field 
"KRN",8994,2528,1,9,0)
                           (#2)
"KRN",8994,2528,1,10,0)
CPTCode element =          WKLD CODE file (#64) / CODE sub-file (#64.018) 
"KRN",8994,2528,1,11,0)
                           / CODE field (#.01)
"KRN",8994,2528,1,12,0)
 
"KRN",8994,2528,1,13,0)
 
"KRN",8994,2528,1,14,0)
XML Example:
"KRN",8994,2528,1,15,0)
<Workload>
"KRN",8994,2528,1,16,0)
    <Code>
"KRN",8994,2528,1,17,0)
        <LMIP>86272.0000</LMIP>
"KRN",8994,2528,1,18,0)
        <Procedure>Cryoprecipitate Thawing</Procedure>
"KRN",8994,2528,1,19,0)
        <Cost>2.50</Cost>
"KRN",8994,2528,1,20,0)
        <WeightMultiplier>3</WeightMultiplier>
"KRN",8994,2528,1,21,0)
        <CPTCode>88399</CPTCode>
"KRN",8994,2528,1,22,0)
    </Code>
"KRN",8994,2528,1,23,0)
    <Code>
"KRN",8994,2528,1,24,0)
        <LMIP>86403.0000</LMIP>
"KRN",8994,2528,1,25,0)
        <Procedure>Decontamination of Lymphocyte</Procedure>
"KRN",8994,2528,1,26,0)
        <Cost></Cost>
"KRN",8994,2528,1,27,0)
        <WeightMultiplier>2</WeightMultiplier>
"KRN",8994,2528,1,28,0)
        <CPTCode>88399</CPTCode>
"KRN",8994,2528,1,29,0)
    </Code>
"KRN",8994,2528,1,30,0)
</Workload>
"KRN",8994,2528,3,0)
^8994.03^3^3^3050907^^
"KRN",8994,2528,3,1,0)
XML document containing a list of Blood Bank WORKLOAD CODE LAB SECTION 
"KRN",8994,2528,3,2,0)
entries from the WKLD CODE file.  The values returned are WKLD CODE, 
"KRN",8994,2528,3,3,0)
PROCEDURE, COST, WKLD UNIT WEIGHT, and CPT codes. 
"KRN",8994,2529,-1)
0^4
"KRN",8994,2529,0)
VBECS HCPCS CODES LOOKUP^HCPCS^VBECRPCH^4^R
"KRN",8994,2529,1,0)
^8994.01^23^23^3080505^^
"KRN",8994,2529,1,1,0)
This RPC returns XML containing a list of active HCPCS codes from the CPT
"KRN",8994,2529,1,2,0)
file with a CPT Category of Pathology and Laboratory Services for use in
"KRN",8994,2529,1,3,0)
VBECS.
"KRN",8994,2529,1,4,0)
 
"KRN",8994,2529,1,5,0)
XML Mapping:
"KRN",8994,2529,1,6,0)
Code element = CPT file (#81) / CODE field (#.01)
"KRN",8994,2529,1,7,0)
Name element = CPT file (#81) / SHORT NAME field (#2)
"KRN",8994,2529,1,8,0)
 
"KRN",8994,2529,1,9,0)
XML Example:
"KRN",8994,2529,1,10,0)
<Root>
"KRN",8994,2529,1,11,0)
    <HCPCS>
"KRN",8994,2529,1,12,0)
        <Code>P2028</Code>
"KRN",8994,2529,1,13,0)
        <Name>Cephalin floculation test</Name>
"KRN",8994,2529,1,14,0)
    </HCPCS>
"KRN",8994,2529,1,15,0)
    <HCPCS>
"KRN",8994,2529,1,16,0)
        <Code>P2029</Code>
"KRN",8994,2529,1,17,0)
        <Name>Congo red blood test</Name>
"KRN",8994,2529,1,18,0)
    </HCPCS>
"KRN",8994,2529,1,19,0)
    <HCPCS>
"KRN",8994,2529,1,20,0)
        <Code>P2031</Code>
"KRN",8994,2529,1,21,0)
        <Name>Hair analysis</Name>
"KRN",8994,2529,1,22,0)
    </HCPCS>
"KRN",8994,2529,1,23,0)
</Root>
"KRN",8994,2529,3,0)
^8994.03^2^2^3080505^^^
"KRN",8994,2529,3,1,0)
XML document containing a list of HCPCS codes for the Pathology and
"KRN",8994,2529,3,2,0)
Laboratory Services CPT CATAGORY.
"KRN",8994,2530,-1)
0^10
"KRN",8994,2530,0)
VBECS MED PROFILE LOOKUP^RX^VBECRPCP^4^R
"KRN",8994,2530,1,0)
^^43^43^3050516^
"KRN",8994,2530,1,1,0)
This RPC returns XML containing a list of medications for a patient from 
"KRN",8994,2530,1,2,0)
the Pharmacy package within a given date range.
"KRN",8994,2530,1,3,0)
 
"KRN",8994,2530,1,4,0)
The patient demographic data is provided by the VistA API DEM^VADPT in 
"KRN",8994,2530,1,5,0)
the VADM array.
"KRN",8994,2530,1,6,0)
 
"KRN",8994,2530,1,7,0)
The medication related data is provided by the Pharmacy API OCL^PSOORRL in
"KRN",8994,2530,1,8,0)
the ^TMP("PS",$J global array in the following format.
"KRN",8994,2530,1,9,0)
 
"KRN",8994,2530,1,10,0)
^TMP("PS",$J,D0,0)=ORDER #_File;PKG^DRUG^INFUSION RATE^STOP DATE^REFILLS
"KRN",8994,2530,1,11,0)
REMAINING^TOTAL DOSE^UNITS PER DOSE^PLACER #^STATUS^LAST FILLDATE^DAYS
"KRN",8994,2530,1,12,0)
SUPPLY^QUANTITY^NOT TO BE GIVEN^PENDING RENEWAL (1 or 0)^ISSUE
"KRN",8994,2530,1,13,0)
DATE(Outpatient) or START DATE(Inpatient)^LAST RELEASE DATE/TIME^LAST FILL
"KRN",8994,2530,1,14,0)
DAY SUPPLY
"KRN",8994,2530,1,15,0)
 
"KRN",8994,2530,1,16,0)
XML Mapping:
"KRN",8994,2530,1,17,0)
PatientName element =          VADM(1)
"KRN",8994,2530,1,18,0)
PatientSsn element =           VADM(2)
"KRN",8994,2530,1,19,0)
PatientDob element =           VADM(3) in HL7 format
"KRN",8994,2530,1,20,0)
BeginningSearchDate element =  SDATE input parameter in HL7 format
"KRN",8994,2530,1,21,0)
EndingSearchDate element =     EDATE input parameter in HL7 format
"KRN",8994,2530,1,22,0)
OrderNumber element =          ORDER #
"KRN",8994,2530,1,23,0)
DrugName element =             DRUG
"KRN",8994,2530,1,24,0)
IssueStartDate element =       ISSUE DATE(Outpatient) or START 
"KRN",8994,2530,1,25,0)
                               DATE(Inpatient)
"KRN",8994,2530,1,26,0)
Status element =               STATUS
"KRN",8994,2530,1,27,0)
InpatientOutpatientIndicator = PKG
"KRN",8994,2530,1,28,0)
 
"KRN",8994,2530,1,29,0)
XML Example:
"KRN",8994,2530,1,30,0)
<MedicationProfile>
"KRN",8994,2530,1,31,0)
    <PatientName>VBECSpatient,One</PatientName>
"KRN",8994,2530,1,32,0)
    <PatientSsn>666-66-6666</PatientSsn>
"KRN",8994,2530,1,33,0)
    <PatientDob>Jan 01, 1900</PatientDob>
"KRN",8994,2530,1,34,0)
    <BeginningSearchDate>Oct 01, 2002</BeginningSearchDate>
"KRN",8994,2530,1,35,0)
    <EndingSearchDate>Jul 31, 2003</EndingSearchDate>
"KRN",8994,2530,1,36,0)
    <Order>
"KRN",8994,2530,1,37,0)
        <OrderNumber>4863015</OrderNumber>
"KRN",8994,2530,1,38,0)
        <DrugName>ACETAMINOPHEN 500MG TAB</DrugName>
"KRN",8994,2530,1,39,0)
        <IssueStartDate>Apr 08, 2002</IssueStartDate>
"KRN",8994,2530,1,40,0)
        <Status>EXPIRED</Status>
"KRN",8994,2530,1,41,0)
        <InpatientOutpatientIndicator>O</InpatientOutpatientIndicator>
"KRN",8994,2530,1,42,0)
    </Order>
"KRN",8994,2530,1,43,0)
</MedicationProfile>
"KRN",8994,2530,2,0)
^8994.02A^4^3
"KRN",8994,2530,2,1,0)
SDATE^1^30^1^2
"KRN",8994,2530,2,1,1,0)
^^1^1^3040524^
"KRN",8994,2530,2,1,1,1,0)
The SDATE input parameters represents the start date required by the Pharmacy API OCL^PSOORRL.
"KRN",8994,2530,2,2,0)
EDATE^1^30^1^3
"KRN",8994,2530,2,2,1,0)
^^1^1^3040524^
"KRN",8994,2530,2,2,1,1,0)
The EDATE input parameter represents the end date required by the Pharmacy API OCL^PSOORRL.
"KRN",8994,2530,2,4,0)
DFN^1^15^1^1
"KRN",8994,2530,2,4,1,0)
^8994.021^1^1^3040817^^
"KRN",8994,2530,2,4,1,1,0)
The VistA Patient file (#2) Internal Entry Number.
"KRN",8994,2530,2,"B","DFN",4)

"KRN",8994,2530,2,"B","EDATE",2)

"KRN",8994,2530,2,"B","SDATE",1)

"KRN",8994,2530,2,"PARAMSEQ",1,4)

"KRN",8994,2530,2,"PARAMSEQ",2,1)

"KRN",8994,2530,2,"PARAMSEQ",3,2)

"KRN",8994,2530,3,0)
^8994.03^1^1^3040524^^
"KRN",8994,2530,3,1,0)
XML document with a list of medications prescribed for the patient during the specified dates in the input parameters.
"KRN",8994,2531,-1)
0^6
"KRN",8994,2531,0)
VBECS LAB ACCESSION UID LOOKUP^ORDNUM^VBECRPCB^4^R
"KRN",8994,2531,1,0)
^8994.01^36^36^3070910^^
"KRN",8994,2531,1,1,0)
This RPC returns XML containing a list of Laboratory tests and 
"KRN",8994,2531,1,2,0)
associated data based on a Lab Order number. The data is used in VBECS to 
"KRN",8994,2531,1,3,0)
validate an order and associated a specimen UID with the Blood Bank 
"KRN",8994,2531,1,4,0)
request.
"KRN",8994,2531,1,5,0)
 
"KRN",8994,2531,1,6,0)
XML Mapping:
"KRN",8994,2531,1,7,0)
PatientName element =     PATIENT file (#2) / NAME field (#.01)
"KRN",8994,2531,1,8,0)
VistaPatientId element =  PATIENT file (#2) / NUMBER field (#.001)
"KRN",8994,2531,1,9,0)
LabOrderNumber element =  LAB ORDER ENTRY file (#69) / SPECIMEN sub-file 
"KRN",8994,2531,1,10,0)
                          (#69.01) / ORDER# field (#9.5)
"KRN",8994,2531,1,11,0)
LabTestId element =       LAB ORDER ENTRY file (#69) / SPECIMEN sub-file 
"KRN",8994,2531,1,12,0)
                          (#69.01) / TEST/PROCEDURE field (#.01)
"KRN",8994,2531,1,13,0)
LabTestName element =     LABORATORY TEST file (#60) / NAME field (#.01)
"KRN",8994,2531,1,14,0)
SpecimenAccessionNumber = ACCESSION file (#68) / ACCESSION NUMBER 
"KRN",8994,2531,1,15,0)
                          sub-file (#68.02) / ACCESSION field (#15)
"KRN",8994,2531,1,16,0)
SpecimenUid =             LAB ORDER ENTRY file (#69) / SPECIMEN sub-file 
"KRN",8994,2531,1,17,0)
                          (#69.01) / TEST sub-file (#69.03) / UID field
"KRN",8994,2531,1,18,0)
                          (#16)
"KRN",8994,2531,1,19,0)
CollectionDateTime =      ACCESSION file (#68) / ACCESSION NUMBER 
"KRN",8994,2531,1,20,0)
                          sub-file (#68.02) / DRAW TIME field (#9)
"KRN",8994,2531,1,21,0)
 
"KRN",8994,2531,1,22,0)
XML Example:
"KRN",8994,2531,1,23,0)
<UIDLookup>
"KRN",8994,2531,1,24,0)
    <LabTests>
"KRN",8994,2531,1,25,0)
        <LabTest>
"KRN",8994,2531,1,26,0)
            <PatientName>VBECSpatient,One</PatientName>
"KRN",8994,2531,1,27,0)
            <VistaPatientId>308</VistaPatientId>
"KRN",8994,2531,1,28,0)
            <LabOrderNumber>11465</LabOrderNumber>
"KRN",8994,2531,1,29,0)
            <LabTestID>6479</LabTestID>
"KRN",8994,2531,1,30,0)
            <LabTestName>VBECS RED BLOOD CELLS</LabTestName>
"KRN",8994,2531,1,31,0)
            <SpecimenAccessionNumber>2942360003</SpecimenAccessionNumber>
"KRN",8994,2531,1,32,0)
            <SpecimenUID>2942360003</SpecimenUID>
"KRN",8994,2531,1,33,0)
            <CollectionDateTime>20040823103630-0600</CollectionDateTime>
"KRN",8994,2531,1,34,0)
        </LabTest>
"KRN",8994,2531,1,35,0)
    </LabTests>
"KRN",8994,2531,1,36,0)
</UIDLookup>
"KRN",8994,2531,2,0)
^8994.02A^2^1
"KRN",8994,2531,2,2,0)
VBLRO^1^20^1^1
"KRN",8994,2531,2,2,1,0)
^^2^2^3040609^
"KRN",8994,2531,2,2,1,1,0)
Input VBLRO = The Lab Order number received in Blood Bank with an order
"KRN",8994,2531,2,2,1,2,0)
from CPRS. 
"KRN",8994,2531,2,"B","VBLRO",2)

"KRN",8994,2531,2,"PARAMSEQ",1,2)

"KRN",8994,2531,3,0)
^8994.03^3^3^3040609^^
"KRN",8994,2531,3,1,0)
XML document containing the patient name, DFN, accession number, lab
"KRN",8994,2531,3,2,0)
order number, specimen UID associated with the Lab Order number received
"KRN",8994,2531,3,3,0)
from CPRS for a VBECS order.
"KRN",8994,2575,-1)
0^8
"KRN",8994,2575,0)
VBECS LAB TEST RESULTS LOOKUP^TSTRSLT^VBECRPCA^4^R
"KRN",8994,2575,1,0)
^^35^35^3050216^
"KRN",8994,2575,1,1,0)
This RPC returns XML containing a list of Laboratory test results for a 
"KRN",8994,2575,1,2,0)
patient within a given date range.
"KRN",8994,2575,1,3,0)
 
"KRN",8994,2575,1,4,0)
The data returned is provided by the Lab API RR^LR7OR1 in the 
"KRN",8994,2575,1,5,0)
^TMP("LRRR" global array in the following format.
"KRN",8994,2575,1,6,0)
 
"KRN",8994,2575,1,7,0)
^TMP("LRRR",$J,DFN,SUB,inverse d/t,sequence #)  = Test^result^L/N flag^
"KRN",8994,2575,1,8,0)
units^reference range^result status^^^Nat'l Code^Name^System^Verified b 
"KRN",8994,2575,1,9,0)
y^^Therapeutic flag^Print Name^Accession^Order#
"KRN",8994,2575,1,10,0)
 
"KRN",8994,2575,1,11,0)
XML Mapping:
"KRN",8994,2575,1,12,0)
VistaPatientId element =  DFN
"KRN",8994,2575,1,13,0)
LabTestId element =       Test
"KRN",8994,2575,1,14,0)
TestPrintName element =   Print Name
"KRN",8994,2575,1,15,0)
TestResult element =      result
"KRN",8994,2575,1,16,0)
TestDate element =        inverse d/t (Converted to HL7 format)
"KRN",8994,2575,1,17,0)
 
"KRN",8994,2575,1,18,0)
 
"KRN",8994,2575,1,19,0)
XML Example:
"KRN",8994,2575,1,20,0)
<LabTests>
"KRN",8994,2575,1,21,0)
    <LabTest>
"KRN",8994,2575,1,22,0)
        <VistaPatientId>378793</VistaPatientId>
"KRN",8994,2575,1,23,0)
        <LabTestId>3</LabTestId>
"KRN",8994,2575,1,24,0)
        <TestPrintName>HGB</TestPrintName>
"KRN",8994,2575,1,25,0)
        <TestResult>14.1</TestResult>
"KRN",8994,2575,1,26,0)
        <TestDate>20010910122446-0600</TestDate>
"KRN",8994,2575,1,27,0)
    </LabTest>
"KRN",8994,2575,1,28,0)
    <LabTest>
"KRN",8994,2575,1,29,0)
         <VistaPatientId>378793</VistaPatientId>
"KRN",8994,2575,1,30,0)
         <LabTestId>3</LabTestId>
"KRN",8994,2575,1,31,0)
         <TestPrintName>HGB</TestPrintName>
"KRN",8994,2575,1,32,0)
         <TestResult>14.4</TestResult>
"KRN",8994,2575,1,33,0)
         <TestDate>20010430115535-0600</TestDate>
"KRN",8994,2575,1,34,0)
    </LabTest>
"KRN",8994,2575,1,35,0)
</LabTests>
"KRN",8994,2575,2,0)
^8994.02A^5^5
"KRN",8994,2575,2,1,0)
SDATE^1^^0^1
"KRN",8994,2575,2,1,1,0)
^^2^2^3040824^
"KRN",8994,2575,2,1,1,1,0)
The SDATE input parameter represents the start date used to search for 
"KRN",8994,2575,2,1,1,2,0)
Laboratory test results in the Lab API RR^LR7OR1.
"KRN",8994,2575,2,2,0)
EDATE^1^30^0^2
"KRN",8994,2575,2,2,1,0)
^^2^2^3040824^
"KRN",8994,2575,2,2,1,1,0)
The EDATE input parameter represents the end date to search for 
"KRN",8994,2575,2,2,1,2,0)
Laboratory test results in the Lab API RR^LR7OR1.
"KRN",8994,2575,2,3,0)
DIV^1^12^0^3
"KRN",8994,2575,2,3,1,0)
^^3^3^3040824^
"KRN",8994,2575,2,3,1,1,0)
The DIV input parameter representd the Division (Station Number) where 
"KRN",8994,2575,2,3,1,2,0)
the results were obtained.
"KRN",8994,2575,2,3,1,3,0)
NOTE:  This parameter is for future use.
"KRN",8994,2575,2,4,0)
TESTS^1^999^0^4
"KRN",8994,2575,2,4,1,0)
^^3^3^3040824^
"KRN",8994,2575,2,4,1,1,0)
An array of Laboratory Test IENs used to search for results.
"KRN",8994,2575,2,4,1,2,0)
  TESTS(1)="3536"
"KRN",8994,2575,2,4,1,3,0)
  TESTS(2)="4090"
"KRN",8994,2575,2,5,0)
PATS^1^999^1^5
"KRN",8994,2575,2,5,1,0)
^8994.021^3^3^3050215^^
"KRN",8994,2575,2,5,1,1,0)
An array of Patient IENs used to search for Lab test results.
"KRN",8994,2575,2,5,1,2,0)
  PATS(1)="495943"
"KRN",8994,2575,2,5,1,3,0)
  PATS(2)="39282"
"KRN",8994,2575,2,"B","DIV",3)

"KRN",8994,2575,2,"B","EDATE",2)

"KRN",8994,2575,2,"B","PATS",5)

"KRN",8994,2575,2,"B","SDATE",1)

"KRN",8994,2575,2,"B","TESTS",4)

"KRN",8994,2575,2,"PARAMSEQ",1,1)

"KRN",8994,2575,2,"PARAMSEQ",2,2)

"KRN",8994,2575,2,"PARAMSEQ",3,3)

"KRN",8994,2575,2,"PARAMSEQ",4,4)

"KRN",8994,2575,2,"PARAMSEQ",5,5)

"KRN",8994,2575,3,0)
^8994.03^2^2^3050215^^
"KRN",8994,2575,3,1,0)
XML document with a list of patient related laboratory test results 
"KRN",8994,2575,3,2,0)
returned from the Lab API RR^LR7OR1.
"KRN",8994,2576,-1)
0^1
"KRN",8994,2576,0)
VBECS ACCESSION AREA LOOKUP^ACNAREA^VBECRPCM^4^R
"KRN",8994,2576,1,0)
^8994.01^33^33^3050823^^
"KRN",8994,2576,1,1,0)
This RPC returns XML containing a list of Lab Blood Bank Accession Areas
"KRN",8994,2576,1,2,0)
from the ACCESSION file (#68) where the LR SUBSCRIPT field .02 is set to
"KRN",8994,2576,1,3,0)
BLOOD BANK for use in the gov.va.med.vbecs rehosted Blood Bank
"KRN",8994,2576,1,4,0)
application.
"KRN",8994,2576,1,5,0)
 
"KRN",8994,2576,1,6,0)
XML Mapping:
"KRN",8994,2576,1,7,0)
AccessionAreaName element = ACCESSION file (#68) / ACCESSION AREA field 
"KRN",8994,2576,1,8,0)
(#.01)
"KRN",8994,2576,1,9,0)
AccessionAreaId element =   ACCESSION file (#68) / IEN field (#.001)
"KRN",8994,2576,1,10,0)
 
"KRN",8994,2576,1,11,0)
XML Example:
"KRN",8994,2576,1,12,0)
<AccessionAreas>
"KRN",8994,2576,1,13,0)
    <AccessionArea>
"KRN",8994,2576,1,14,0)
        <AccessionAreaName>BLOOD BANK</AccessionAreaName>
"KRN",8994,2576,1,15,0)
        <AccessionAreaId>29</AccessionAreaId>
"KRN",8994,2576,1,16,0)
    </AccessionArea>
"KRN",8994,2576,1,17,0)
    <AccessionArea>
"KRN",8994,2576,1,18,0)
        <AccessionAreaName>COBLOOD BANK</AccessionAreaName>
"KRN",8994,2576,1,19,0)
        <AccessionAreaId>60</AccessionAreaId>
"KRN",8994,2576,1,20,0)
    </AccessionArea>
"KRN",8994,2576,1,21,0)
    <AccessionArea>
"KRN",8994,2576,1,22,0)
        <AccessionAreaName>LEBLOOD BANK</AccessionAreaName>
"KRN",8994,2576,1,23,0)
        <AccessionAreaId>87</AccessionAreaId>
"KRN",8994,2576,1,24,0)
    </AccessionArea>
"KRN",8994,2576,1,25,0)
    <AccessionArea>
"KRN",8994,2576,1,26,0)
        <AccessionAreaName>TOBLOOD BANK</AccessionAreaName>
"KRN",8994,2576,1,27,0)
        <AccessionAreaId>91</AccessionAreaId>
"KRN",8994,2576,1,28,0)
    </AccessionArea>
"KRN",8994,2576,1,29,0)
    <AccessionArea>
"KRN",8994,2576,1,30,0)
        <AccessionAreaName>WIBLOOD BANK</AccessionAreaName>
"KRN",8994,2576,1,31,0)
        <AccessionAreaId>146</AccessionAreaId>
"KRN",8994,2576,1,32,0)
    </AccessionArea>
"KRN",8994,2576,1,33,0)
</AccessionAreas>
"KRN",8994,2576,3,0)
^8994.03^2^2^3050823^^^
"KRN",8994,2576,3,1,0)
XML document containing a list of Blood Bank Accession Areas from the 
"KRN",8994,2576,3,2,0)
ACCESSION file.
"KRN",8994,2615,-1)
0^7
"KRN",8994,2615,0)
VBECS LAB ORDER LOOKUP BY UID^ORDER^VBECRPCB^4^R
"KRN",8994,2615,1,0)
^8994.01^36^36^3050516^
"KRN",8994,2615,1,1,0)
 
"KRN",8994,2615,1,2,0)
This RPC returns XML containing a list of laboratory tests and associated 
"KRN",8994,2615,1,3,0)
data based on a Specimen UID. The data is used in VBECS to identify an 
"KRN",8994,2615,1,4,0)
existing VBECS order based on the Lab Order number provided by CPRS.
"KRN",8994,2615,1,5,0)
 
"KRN",8994,2615,1,6,0)
 XML Mapping:
"KRN",8994,2615,1,7,0)
 PatientName element =     PATIENT file (#2) / NAME field (#.01)
"KRN",8994,2615,1,8,0)
 VistaPatientId element =  PATIENT file (#2) / NUMBER field (#.001)
"KRN",8994,2615,1,9,0)
 LabOrderNumber element =  LAB ORDER ENTRY file (#69) / SPECIMEN sub-file
"KRN",8994,2615,1,10,0)
                           (#69.01) / ORDER# field (#9.5)
"KRN",8994,2615,1,11,0)
 LabTestId element =       LAB ORDER ENTRY file (#69) / SPECIMEN sub-file
"KRN",8994,2615,1,12,0)
                           (#69.01) / TEST/PROCEDURE field (#.01)
"KRN",8994,2615,1,13,0)
 LabTestName element =     LABORATORY TEST file (#60) / NAME field (#.01)
"KRN",8994,2615,1,14,0)
 SpecimenAccessionNumber = ACCESSION file (#68) / ACCESSION NUMBER
"KRN",8994,2615,1,15,0)
                           sub-file (#68.02) / ACCESSION field (#15)
"KRN",8994,2615,1,16,0)
 SpecimenUid =             LAB ORDER ENTRY file (#69) / SPECIMEN sub-file
"KRN",8994,2615,1,17,0)
                           (#69.01) / TEST sub-file (#69.03) / UID field
"KRN",8994,2615,1,18,0)
                           (#16)
"KRN",8994,2615,1,19,0)
 CollectionDateTime =      ACCESSION file (#68) / ACCESSION NUMBER
"KRN",8994,2615,1,20,0)
                           sub-file (#68.02) / DRAW TIME field (#9)
"KRN",8994,2615,1,21,0)
 
"KRN",8994,2615,1,22,0)
 XML Example:
"KRN",8994,2615,1,23,0)
 <UIDLookup>
"KRN",8994,2615,1,24,0)
     <PatientName>VBECSpatient,One</PatientName>
"KRN",8994,2615,1,25,0)
     <VistaPatientId>1000</VistaPatientId>
"KRN",8994,2615,1,26,0)
     <SpecimenAccessionNumber>BB0401-01</SpecimenAccessionNumber>
"KRN",8994,2615,1,27,0)
     <LabOrderNumber>25000</LabOrderNumber>
"KRN",8994,2615,1,28,0)
     <SpecimenUID>29500000000</SpecimenUID>
"KRN",8994,2615,1,29,0)
     <CollectionDateTime>304010800</CollectionDateTime>
"KRN",8994,2615,1,30,0)
     <LabTests>
"KRN",8994,2615,1,31,0)
         <LabTest>
"KRN",8994,2615,1,32,0)
             <LabTestID>2400</LabTestID>
"KRN",8994,2615,1,33,0)
             <LabTestName>VBECS ANTIBODY SCREEN</LabTestName>
"KRN",8994,2615,1,34,0)
         </LabTest>
"KRN",8994,2615,1,35,0)
     </LabTests>
"KRN",8994,2615,1,36,0)
 </UIDLookup>
"KRN",8994,2615,2,0)
^8994.02A^1^1
"KRN",8994,2615,2,1,0)
VBUID^1^20^1^1
"KRN",8994,2615,2,1,1,0)
^^2^2^3050225^
"KRN",8994,2615,2,1,1,1,0)
Input VBUID = The specimen UID received in Blood Bank associated with a
"KRN",8994,2615,2,1,1,2,0)
Lab Testaused to identify the Lab Order.
"KRN",8994,2615,2,"B","VBUID",1)

"KRN",8994,2615,2,"PARAMSEQ",1,1)

"KRN",8994,2615,3,0)
^^2^2^3050225^
"KRN",8994,2615,3,1,0)
XML document containing the patient name, DFN, accession number, lab
"KRN",8994,2615,3,2,0)
order number and lab tests associated with the specimen UID.
"KRN",8994,2672,-1)
0^14
"KRN",8994,2672,0)
VBECS DSS EXTRACT^EN^VBECDSS^4^R
"KRN",8994,2672,1,0)
^8994.01^4^4^3071029^^^^
"KRN",8994,2672,1,1,0)
This RPC inserts or updates post transfusion related data in the VBECS DSS
"KRN",8994,2672,1,2,0)
EXTRACT file (#6002.03). The data is passed into the VBECDSS routine 
"KRN",8994,2672,1,3,0)
through the input parameters and a success indicator is returned to the 
"KRN",8994,2672,1,4,0)
Blood Bank medical device.
"KRN",8994,2672,2,0)
^8994.02A^2^1
"KRN",8994,2672,2,2,0)
PARAMS^1^999^1^1
"KRN",8994,2672,2,2,1,0)
^^26^26^3071029^
"KRN",8994,2672,2,2,1,1,0)
PARAMS("TRANSACTION ID") = Unique record identifier
"KRN",8994,2672,2,2,1,2,0)
PARAMS("DFN") = Patient identifier
"KRN",8994,2672,2,2,1,3,0)
PARAMS("ORDERING LOCATION") = Ordering Institution Identifier
"KRN",8994,2672,2,2,1,4,0)
PARAMS("TRANSFUSION LOCATION") = Tranfusing Institution identifier
"KRN",8994,2672,2,2,1,5,0)
PARAMS("PHYSICIAN") = Provider requesting blood product for transfusion
"KRN",8994,2672,2,2,1,6,0)
PARAMS("ORDERING PROVIDER") = Provider who ordered Type and Crossmatch
"KRN",8994,2672,2,2,1,7,0)
PARAMS("PRODUCT NAME") = Short blood product name
"KRN",8994,2672,2,2,1,8,0)
PARAMS("COMPONENT ABBREVIATION") = Abbreviation of blood component
"KRN",8994,2672,2,2,1,9,0)
PARAMS("NUMBER OF UNITS") = Number of pooled units transfused
"KRN",8994,2672,2,2,1,10,0)
PARAMS("TRANSFUSION DATE") = Date/time of transfusion
"KRN",8994,2672,2,2,1,11,0)
PARAMS("VOLUME") = Total volume of units transfused
"KRN",8994,2672,2,2,1,12,0)
PARAMS("REACTION TYPE") = Type of reaction indicated
"KRN",8994,2672,2,2,1,13,0)
PARAMS("UNIT MODIFICATION") = String of codes representing modifications 
"KRN",8994,2672,2,2,1,14,0)
   done on units transfused. String cannot exceed 6 character. 
"KRN",8994,2672,2,2,1,15,0)
   D = Deglycerolize
"KRN",8994,2672,2,2,1,16,0)
   F = Freeze
"KRN",8994,2672,2,2,1,17,0)
   I = Irradiate
"KRN",8994,2672,2,2,1,18,0)
   L = Leukoreduce
"KRN",8994,2672,2,2,1,19,0)
   P = Pool
"KRN",8994,2672,2,2,1,20,0)
   R = Rejuvenate
"KRN",8994,2672,2,2,1,21,0)
   S = Split/Divide
"KRN",8994,2672,2,2,1,22,0)
   T = Thaw
"KRN",8994,2672,2,2,1,23,0)
   U = Thaw/Pool Cryo
"KRN",8994,2672,2,2,1,24,0)
   V = Volume Reduce
"KRN",8994,2672,2,2,1,25,0)
   W = Wash
"KRN",8994,2672,2,2,1,26,0)
PARAMS("REACTION") = Yes or No value if a reaction was indicated.
"KRN",8994,2672,2,"B","PARAMS",2)

"KRN",8994,2672,2,"PARAMSEQ",1,2)

"KRN",8994,2672,3,0)
^8994.03^9^9^3071029^^^^
"KRN",8994,2672,3,1,0)
This RPC returns and XML document containing a SuccessIndicator element 
"KRN",8994,2672,3,2,0)
represented by either a 1 for a successful insert or update or a 0 for an 
"KRN",8994,2672,3,3,0)
unsuccessful insert or update in the VBECS DSS EXTRACT file (#6002.03).
"KRN",8994,2672,3,4,0)
 
"KRN",8994,2672,3,5,0)
Example of successful transaction:
"KRN",8994,2672,3,6,0)
<ReturnValue><SuccessIndicator>1</SuccessIndicator></ReturnValue>
"KRN",8994,2672,3,7,0)
 
"KRN",8994,2672,3,8,0)
Example of unsuccessful transaction:
"KRN",8994,2672,3,9,0)
<ReturnValue><SuccessIndicator>0</SuccessIndicator></ReturnValue>
"MBREQ")
1
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",649,-1)
1^1
"PKG",649,0)
VBECS^VBEC^VistA Blood Establishment Computer System
"PKG",649,1,0)
^9.41A^6^6^3030324^
"PKG",649,1,1,0)
This package, VBECS, exists in the M environment to
"PKG",649,1,2,0)
perform integrity checks on existing VistA Blood Bank
"PKG",649,1,3,0)
data, convert relevant data for migration to parallel
"PKG",649,1,4,0)
applications, and to migrate VistA data to parallel
"PKG",649,1,5,0)
applications when specific application events are
"PKG",649,1,6,0)
triggered.
"PKG",649,5)
Hines Office of Information
"PKG",649,20,0)
^9.402P^^
"PKG",649,22,0)
^9.49I^1^1
"PKG",649,22,1,0)
1.0^3090423^3080103^1
"PKG",649,22,1,1,0)
^^2^2^3090423
"PKG",649,22,1,1,1,0)
This patch is part of the VBECS BUNDLE 1.0 controlled release. See the
"PKG",649,22,1,1,2,0)
description for the VBECS BUNDLE 1.0 for patch details.
"PKG",649,22,1,"PAH",0)
^9.4901^2^2
"PKG",649,22,1,"PAH",1,0)
1^3090423^1
"PKG",649,22,1,"PAH",1,1,0)
^^158^158^3090423
"PKG",649,22,1,"PAH",1,1,1,0)
This patch is being released in support of the VBECS (VistA Blood 
"PKG",649,22,1,"PAH",1,1,2,0)
Establishment Computer System) Blood Bank Package.  The routines, 
"PKG",649,22,1,"PAH",1,1,3,0)
protocols, remote procedures, and options in this patch are used by the 
"PKG",649,22,1,"PAH",1,1,4,0)
DSS (Decision Support System) and CPRS (Computerized Patient Record 
"PKG",649,22,1,"PAH",1,1,5,0)
System).  There is no direct user interaction with the contents of this 
"PKG",649,22,1,"PAH",1,1,6,0)
patch.
"PKG",649,22,1,"PAH",1,1,7,0)
 
"PKG",649,22,1,"PAH",1,1,8,0)
Routines: VBECDSS
"PKG",649,22,1,"PAH",1,1,9,0)
========  VBECHLOR
"PKG",649,22,1,"PAH",1,1,10,0)
 
"PKG",649,22,1,"PAH",1,1,11,0)
Options:  VBECS VISTALINK CONTEXT
"PKG",649,22,1,"PAH",1,1,12,0)
========
"PKG",649,22,1,"PAH",1,1,13,0)
 
"PKG",649,22,1,"PAH",1,1,14,0)
 
"PKG",649,22,1,"PAH",1,1,15,0)
Protocols: VBEC OMG CLIENT
"PKG",649,22,1,"PAH",1,1,16,0)
========== 
"PKG",649,22,1,"PAH",1,1,17,0)
 
"PKG",649,22,1,"PAH",1,1,18,0)
Remote Procedures: VBEC DSS EXTRACT
"PKG",649,22,1,"PAH",1,1,19,0)
==================
"PKG",649,22,1,"PAH",1,1,20,0)
 
"PKG",649,22,1,"PAH",1,1,21,0)
 
"PKG",649,22,1,"PAH",1,1,22,0)
Files: VBECS DSS EXTRACT  (# 6002.03)
"PKG",649,22,1,"PAH",1,1,23,0)
======
"PKG",649,22,1,"PAH",1,1,24,0)
 
"PKG",649,22,1,"PAH",1,1,25,0)
Associated ICRs: None
"PKG",649,22,1,"PAH",1,1,26,0)
=============== 
"PKG",649,22,1,"PAH",1,1,27,0)
 
"PKG",649,22,1,"PAH",1,1,28,0)
 
"PKG",649,22,1,"PAH",1,1,29,0)
Associated Remedy Tickets:  None
"PKG",649,22,1,"PAH",1,1,30,0)
==========================
"PKG",649,22,1,"PAH",1,1,31,0)
 
"PKG",649,22,1,"PAH",1,1,32,0)
 
"PKG",649,22,1,"PAH",1,1,33,0)
Associated NSR/E3R: None
"PKG",649,22,1,"PAH",1,1,34,0)
===================
"PKG",649,22,1,"PAH",1,1,35,0)
 
"PKG",649,22,1,"PAH",1,1,36,0)
Test Site(s):
"PKG",649,22,1,"PAH",1,1,37,0)
==============
"PKG",649,22,1,"PAH",1,1,38,0)
 
"PKG",649,22,1,"PAH",1,1,39,0)
 HEARTLAND-EAST HCS
"PKG",649,22,1,"PAH",1,1,40,0)
 PHILADELPHIA, PA
"PKG",649,22,1,"PAH",1,1,41,0)
 SAN DIEGO, CA
"PKG",649,22,1,"PAH",1,1,42,0)
 
"PKG",649,22,1,"PAH",1,1,43,0)
 Installation Information:
"PKG",649,22,1,"PAH",1,1,44,0)
==========================
"PKG",649,22,1,"PAH",1,1,45,0)
 
"PKG",649,22,1,"PAH",1,1,46,0)
VBEC*1*1 is being exported as part of the VBECS package release.  The 
"PKG",649,22,1,"PAH",1,1,47,0)
installation of VBEC*1*1 will be controlled by phase a phased release.  
"PKG",649,22,1,"PAH",1,1,48,0)
An Implementation Manager will be assigned to your site and will contact 
"PKG",649,22,1,"PAH",1,1,49,0)
your POC for VBECS and will provide your site with the location of the 
"PKG",649,22,1,"PAH",1,1,50,0)
KIDS Host Files prior to your scheduled installation date. 
"PKG",649,22,1,"PAH",1,1,51,0)
 
"PKG",649,22,1,"PAH",1,1,52,0)
Installation Sequence
"PKG",649,22,1,"PAH",1,1,53,0)
=====================
"PKG",649,22,1,"PAH",1,1,54,0)
 
"PKG",649,22,1,"PAH",1,1,55,0)
The patches listed below represent those that will be part of the 
"PKG",649,22,1,"PAH",1,1,56,0)
controlled phased release.  Follow the sequence listed below when your 
"PKG",649,22,1,"PAH",1,1,57,0)
phased installation occurs.
"PKG",649,22,1,"PAH",1,1,58,0)
 
"PKG",649,22,1,"PAH",1,1,59,0)
  1. LR*5.2*335
"PKG",649,22,1,"PAH",1,1,60,0)
  2. LR*5.2*367
"PKG",649,22,1,"PAH",1,1,61,0)
  3. VBECS Bundle (consisting of VBEC*1*0 and LR*5.2*325)
"PKG",649,22,1,"PAH",1,1,62,0)
  4. VBEC*1.0*1
"PKG",649,22,1,"PAH",1,1,63,0)
  5. OR*3.0*212
"PKG",649,22,1,"PAH",1,1,64,0)
 
"PKG",649,22,1,"PAH",1,1,65,0)
 Installation File:
"PKG",649,22,1,"PAH",1,1,66,0)
 
"PKG",649,22,1,"PAH",1,1,67,0)
VBEC_1_1.KID 
"PKG",649,22,1,"PAH",1,1,68,0)
The VBEC_1_1.KID file will be made available by the Implementation 
"PKG",649,22,1,"PAH",1,1,69,0)
Manager prior to your site's implementation schedule along with 
"PKG",649,22,1,"PAH",1,1,70,0)
instruction to retrieve. 
"PKG",649,22,1,"PAH",1,1,71,0)
 
"PKG",649,22,1,"PAH",1,1,72,0)
 
"PKG",649,22,1,"PAH",1,1,73,0)
Documentation Retrieval:
"PKG",649,22,1,"PAH",1,1,74,0)
 
"PKG",649,22,1,"PAH",1,1,75,0)
Documentation is available for the entire VBECS package on the 
"PKG",649,22,1,"PAH",1,1,76,0)
ANONYMOUS.SOFTWRE directory at one of the following Office of Information 
"PKG",649,22,1,"PAH",1,1,77,0)
(OI) Field Offices.  Sites may retrieve documentation in either ".PDF" or 
"PKG",649,22,1,"PAH",1,1,78,0)
"DOC" format in one of the following ways:
"PKG",649,22,1,"PAH",1,1,79,0)
 
"PKG",649,22,1,"PAH",1,1,80,0)
1.      The preferred method is to FTP the files from :
"PKG",649,22,1,"PAH",1,1,81,0)
Download.vista.domain.ext
"PKG",649,22,1,"PAH",1,1,82,0)
 
"PKG",649,22,1,"PAH",1,1,83,0)
2.      Sites may also elect to retrieve documentation directly from a 
"PKG",649,22,1,"PAH",1,1,84,0)
specific server as follows:
"PKG",649,22,1,"PAH",1,1,85,0)
       Albany                  DOMAIN.EXT
"PKG",649,22,1,"PAH",1,1,86,0)
       Hines                   DOMAIN.EXT
"PKG",649,22,1,"PAH",1,1,87,0)
       Salt Lake City          DOMAIN.EXT
"PKG",649,22,1,"PAH",1,1,88,0)
 
"PKG",649,22,1,"PAH",1,1,89,0)
NOTE:  The documentation files listed below will be listed in each of the 
"PKG",649,22,1,"PAH",1,1,90,0)
VBECS and LR patches that are part of the VBECS package and associate 
"PKG",649,22,1,"PAH",1,1,91,0)
patches, they only need to be downloaded once.
"PKG",649,22,1,"PAH",1,1,92,0)
 
"PKG",649,22,1,"PAH",1,1,93,0)
File Name                                   Retrieval format:  Binary
"PKG",649,22,1,"PAH",1,1,94,0)
===========                                 ==========================
"PKG",649,22,1,"PAH",1,1,95,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,96,0)
ADPAC Guide.doc
"PKG",649,22,1,"PAH",1,1,97,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,98,0)
ADPAC Guide.pdf
"PKG",649,22,1,"PAH",1,1,99,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,100,0)
Installation and User Guide.doc
"PKG",649,22,1,"PAH",1,1,101,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,102,0)
Installation and User Guide.pdf
"PKG",649,22,1,"PAH",1,1,103,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,104,0)
Technical Manual.doc
"PKG",649,22,1,"PAH",1,1,105,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",649,22,1,"PAH",1,1,106,0)
Technical Manual.pdf
"PKG",649,22,1,"PAH",1,1,107,0)
VBECS Data Conversion Recommended Validation Method.xls
"PKG",649,22,1,"PAH",1,1,108,0)
VBECS Application Interfacing Support Software Installation and User 
"PKG",649,22,1,"PAH",1,1,109,0)
Configuration Guide.doc
"PKG",649,22,1,"PAH",1,1,110,0)
VBECS Application Interfacing Support Software Installation and User 
"PKG",649,22,1,"PAH",1,1,111,0)
Configuration Guide.pdf
"PKG",649,22,1,"PAH",1,1,112,0)
VBECS Implementation Process.xls
"PKG",649,22,1,"PAH",1,1,113,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"PKG",649,22,1,"PAH",1,1,114,0)
Guide.doc
"PKG",649,22,1,"PAH",1,1,115,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"PKG",649,22,1,"PAH",1,1,116,0)
Guide.pdf
"PKG",649,22,1,"PAH",1,1,117,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"PKG",649,22,1,"PAH",1,1,118,0)
Manual-Security Guide.doc
"PKG",649,22,1,"PAH",1,1,119,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"PKG",649,22,1,"PAH",1,1,120,0)
Manual-Security Guide.pdf
"PKG",649,22,1,"PAH",1,1,121,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.doc
"PKG",649,22,1,"PAH",1,1,122,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.pdf
"PKG",649,22,1,"PAH",1,1,123,0)
Known Defects and Anomalies.doc
"PKG",649,22,1,"PAH",1,1,124,0)
Known Defects and Anomalies.pdf
"PKG",649,22,1,"PAH",1,1,125,0)
 
"PKG",649,22,1,"PAH",1,1,126,0)
 
"PKG",649,22,1,"PAH",1,1,127,0)
Installation Instructions:
"PKG",649,22,1,"PAH",1,1,128,0)
==========================
"PKG",649,22,1,"PAH",1,1,129,0)
This patch may be loaded with users on the system.
"PKG",649,22,1,"PAH",1,1,130,0)
Installation will take less than 5 minutes.
"PKG",649,22,1,"PAH",1,1,131,0)
 
"PKG",649,22,1,"PAH",1,1,132,0)
    1) Use the 'LOAD A DISTRIBUTION' option on the KIDS Installation
"PKG",649,22,1,"PAH",1,1,133,0)
       menu. The Host File name is VBEC_1_1.KID .  Answer YES to the
"PKG",649,22,1,"PAH",1,1,134,0)
       question: "Want to Continue with Load? YES//"
"PKG",649,22,1,"PAH",1,1,135,0)
    2) From the Kernel Installation and Distribution System Menu,
"PKG",649,22,1,"PAH",1,1,136,0)
       select the Installation menu.
"PKG",649,22,1,"PAH",1,1,137,0)
    3) From this menu, you may elect to use the following options
"PKG",649,22,1,"PAH",1,1,138,0)
       (when prompted for the INSTALL NAME, enter VBEC*1.0*1).
"PKG",649,22,1,"PAH",1,1,139,0)
       a) Backup a Transport Global - this option will create a backup
"PKG",649,22,1,"PAH",1,1,140,0)
          message of any routines exported with the patch.  It will NOT
"PKG",649,22,1,"PAH",1,1,141,0)
          backup any other changes such as DDs or templates.
"PKG",649,22,1,"PAH",1,1,142,0)
       b) Compare Transport Global to Current System - this option will
"PKG",649,22,1,"PAH",1,1,143,0)
          allow you to view all changes that will be made when the patch
"PKG",649,22,1,"PAH",1,1,144,0)
          is installed.  It compares all components of the patch
"PKG",649,22,1,"PAH",1,1,145,0)
          (routines, DDs, templates, etc.).
"PKG",649,22,1,"PAH",1,1,146,0)
       c) Verify Checksums in Transport Global - this option will allow
"PKG",649,22,1,"PAH",1,1,147,0)
          you to ensure the integrity of the routines that are in the
"PKG",649,22,1,"PAH",1,1,148,0)
          transport global.
"PKG",649,22,1,"PAH",1,1,149,0)
       d) Print Transport Global - this option will allow you to view the
"PKG",649,22,1,"PAH",1,1,150,0)
          components of the KIDS build.
"PKG",649,22,1,"PAH",1,1,151,0)
    4) Use the Install Package(s) option and select the package
"PKG",649,22,1,"PAH",1,1,152,0)
       VBEC*1.0*1.
"PKG",649,22,1,"PAH",1,1,153,0)
    5) When prompted 'Want KIDS to Rebuild Menu Trees Upon Completion of
"PKG",649,22,1,"PAH",1,1,154,0)
       Install? NO//' respond YES
"PKG",649,22,1,"PAH",1,1,155,0)
    6) When prompted 'Want KIDS to INHIBIT LOGONs during the install?
"PKG",649,22,1,"PAH",1,1,156,0)
       NO//', respond NO.
"PKG",649,22,1,"PAH",1,1,157,0)
    7) When prompted 'Want to DISABLE Scheduled Options, Menu Options, and
"PKG",649,22,1,"PAH",1,1,158,0)
       Protocols? NO//', respond NO.
"PKG",649,22,1,"PAH",2,0)
0^3090130
"PKG",649,22,1,"PAH",2,1,0)
^^2^2^3090130
"PKG",649,22,1,"PAH",2,1,1,0)
This patch is part of the VBECS BUNDLE 1.0 controlled release. See the
"PKG",649,22,1,"PAH",2,1,2,0)
description for the VBECS BUNDLE 1.0 for patch details.
"PKG",649,22,1,"PAH","B",0,2)

"PKG",649,22,1,"PAH","B",1,1)

"PKG",649,"VERSION")
1.0
"PRE")
VBECENV
"QUES","POSVLIPADDRESS",0)
FA^7:15^K:X'?1.3N1"."1.3N1"."1.3N1"."1.3N X
"QUES","POSVLIPADDRESS","?")
Enter the VBECS Server IP Address where the VBECS VistALink XML Listener Service is installed using the format nnn.nnn.nnn.nnn
"QUES","POSVLIPADDRESS","A")
VBECS Server IP Address: 
"QUES","POSVLPORT",0)
NA^1024:65535
"QUES","POSVLPORT","?")
Enter the Port Number of the VBECS VistALink XML Listener Service (1024-65535).
"QUES","POSVLPORT","A")
VBECS VistALink Listener Service Port Number: 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
35
"RTN","VBECA1")
0^1^B15238106
"RTN","VBECA1",1,0)
VBECA1 ;DALOI/PWC - APIS TO RETURN BLOOD BANK DATA FOR LAB ;10/12/00  13:57
"RTN","VBECA1",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA1",3,0)
 ;
"RTN","VBECA1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA1",7,0)
 ; 
"RTN","VBECA1",8,0)
 ; Integration Agreements:
"RTN","VBECA1",9,0)
 ; Reference to FIND^DIC supported by IA #2051
"RTN","VBECA1",10,0)
 ; Reference to ^%DT supported by IA #10003
"RTN","VBECA1",11,0)
 ; Reference to GETS^DIQ() supported by IA #2056
"RTN","VBECA1",12,0)
 ;
"RTN","VBECA1",13,0)
 QUIT
"RTN","VBECA1",14,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",15,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",16,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",17,0)
ABORH(PATID,PATNAM,PATDOB,PARENT) ;
"RTN","VBECA1",18,0)
 ; Return the ABO/Rh value for the DFN of the patient provided.
"RTN","VBECA1",19,0)
 ; A space will be between the values.
"RTN","VBECA1",20,0)
 ;
"RTN","VBECA1",21,0)
 ; Implement new VBECS API.
"RTN","VBECA1",22,0)
 N IFN
"RTN","VBECA1",23,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",24,0)
 I '$G(IFN) Q -1
"RTN","VBECA1",25,0)
 S ABORH=""
"RTN","VBECA1",26,0)
 Q $$ABORH^VBECA1B(IFN,"ABORH")
"RTN","VBECA1",27,0)
 ;
"RTN","VBECA1",28,0)
 ;K LRERR,DIERR,ARR
"RTN","VBECA1",29,0)
 ;D GETS^DIQ(63,LRDFN_",",".05;.06","E","ARR","LRERR")
"RTN","VBECA1",30,0)
 ;S P5=ARR(63,LRDFN_",",.05,"E"),P6=ARR(63,LRDFN_",",.06,"E")
"RTN","VBECA1",31,0)
 ;S ANS=P5_" "_P6
"RTN","VBECA1",32,0)
 ;K ARR
"RTN","VBECA1",33,0)
 ;Q ANS
"RTN","VBECA1",34,0)
 ;
"RTN","VBECA1",35,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",36,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",37,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",38,0)
ABO(PATID,PATNAM,PATDOB,PARENT) ;
"RTN","VBECA1",39,0)
 ; Return the ABO value for the DFN of the patient provided.
"RTN","VBECA1",40,0)
 ;
"RTN","VBECA1",41,0)
 ; Implement new VBECS API.
"RTN","VBECA1",42,0)
 N IFN
"RTN","VBECA1",43,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",44,0)
 I '$G(IFN) Q -1
"RTN","VBECA1",45,0)
 S ABO=""
"RTN","VBECA1",46,0)
 Q $$ABORH^VBECA1B(IFN,"ABO")
"RTN","VBECA1",47,0)
 ;
"RTN","VBECA1",48,0)
 ;K LRERR,DIERR,ARR
"RTN","VBECA1",49,0)
 ;D GETS^DIQ(63,LRDFN_",",".05","E","ARR","LRERR")
"RTN","VBECA1",50,0)
 ;S P5=ARR(63,LRDFN_",",.05,"E"),ANS=P5
"RTN","VBECA1",51,0)
 ;K ARR
"RTN","VBECA1",52,0)
 ;Q ANS
"RTN","VBECA1",53,0)
 ;
"RTN","VBECA1",54,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",55,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",56,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",57,0)
RH(PATID,PATNAM,PATDOB,PARENT) ;
"RTN","VBECA1",58,0)
 ; Return the Rh value for the DFN of the patient provided.
"RTN","VBECA1",59,0)
 ;
"RTN","VBECA1",60,0)
 ; Implement new VBECS API.
"RTN","VBECA1",61,0)
 N IFN
"RTN","VBECA1",62,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",63,0)
 I '$G(IFN) Q -1
"RTN","VBECA1",64,0)
 S RH=""
"RTN","VBECA1",65,0)
 Q $$ABORH^VBECA1B(IFN,"RH")
"RTN","VBECA1",66,0)
 ;
"RTN","VBECA1",67,0)
 ;K LRERR,DIERR,ARR
"RTN","VBECA1",68,0)
 ;D GETS^DIQ(63,LRDFN_",",".06","E","ARR","LRERR")
"RTN","VBECA1",69,0)
 ;S P6=ARR(63,LRDFN_",",.06,"E"),ANS=P6
"RTN","VBECA1",70,0)
 ;K ARR
"RTN","VBECA1",71,0)
 ;Q ANS
"RTN","VBECA1",72,0)
 ;
"RTN","VBECA1",73,0)
 ; -------------------------------------------------------
"RTN","VBECA1",74,0)
 ;      Deprecated Method - Removed from IA 3181
"RTN","VBECA1",75,0)
 ; -------------------------------------------------------
"RTN","VBECA1",76,0)
AGPRES(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Antigens Present
"RTN","VBECA1",77,0)
 ; Return an array of identified antigens and antigen comments for
"RTN","VBECA1",78,0)
 ; the DFN of the patient provided.  If no antigens found, an empty
"RTN","VBECA1",79,0)
 ; array is returned ARR("AGPRES")="".
"RTN","VBECA1",80,0)
 ; 
"RTN","VBECA1",81,0)
 ; ARR = the name of the array used to store antigens.
"RTN","VBECA1",82,0)
 ;   Array will contain the name of the antigen and any antigen comments
"RTN","VBECA1",83,0)
 ;        ARR("AGPRES",n) = Antigen ^ Antigen comment
"RTN","VBECA1",84,0)
 ;
"RTN","VBECA1",85,0)
 ;K ARR
"RTN","VBECA1",86,0)
 ;N LRDFN,A,I,X,P1,P2,P1A
"RTN","VBECA1",87,0)
 ;D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",88,0)
 ;I 'LRDFN S ARR=-1 Q
"RTN","VBECA1",89,0)
 ;S A=0 F I=1:1 S A=$O(^LR(LRDFN,1,A)) Q:A="B"!(A="")  D
"RTN","VBECA1",90,0)
 ;. S DATA=$G(^LR(LRDFN,1,A,0))
"RTN","VBECA1",91,0)
 ;. S P1=$P(DATA,"^",1),P2=$P(DATA,"^",2)
"RTN","VBECA1",92,0)
 ;. S P1A=$P($G(^LAB(61.3,P1,0)),"^",1)
"RTN","VBECA1",93,0)
 ;. S ARR("AGPRES",I)=P1A_"^"_P2
"RTN","VBECA1",94,0)
 ;S:'$D(ARR) ARR("AGPRES")=""    ;return empty array if none found
"RTN","VBECA1",95,0)
 Q
"RTN","VBECA1",96,0)
 ;
"RTN","VBECA1",97,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",98,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",99,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",100,0)
ABID(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Antibodies Identified
"RTN","VBECA1",101,0)
 ; Return an array of identified antibodies and antibody comments for
"RTN","VBECA1",102,0)
 ; the DFN of the patient provided.
"RTN","VBECA1",103,0)
 ; 
"RTN","VBECA1",104,0)
 ; ARR = the name of the array used to store antibodies.
"RTN","VBECA1",105,0)
 ; Array will contain the name of the antibody and any antibody comments
"RTN","VBECA1",106,0)
 ;        ARR("ABID",n) = Antibody ^ Antibody comment
"RTN","VBECA1",107,0)
 ;
"RTN","VBECA1",108,0)
 K ARR
"RTN","VBECA1",109,0)
 N IFN
"RTN","VBECA1",110,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",111,0)
 I '$G(IFN) S ARR=-1 Q
"RTN","VBECA1",112,0)
 D ABID^VBECA1B(IFN) Q
"RTN","VBECA1",113,0)
 ;
"RTN","VBECA1",114,0)
 ;S A=0 F I=1:1 S A=$O(^LR(LRDFN,1.7,A)) Q:A=""  D
"RTN","VBECA1",115,0)
 ;. S DATA=$G(^LR(LRDFN,1.7,A,0))
"RTN","VBECA1",116,0)
 ;. S P1=$P(DATA,"^",1),P2=$P(DATA,"^",2)
"RTN","VBECA1",117,0)
 ;. S P1A=$P($G(^LAB(61.3,P1,0)),"^",1)
"RTN","VBECA1",118,0)
 ;. S ARR("ABID",I)=P1A_"^"_P2
"RTN","VBECA1",119,0)
 ;S:'$D(ARR) ARR("ABID")=""    ;return empty array if none found
"RTN","VBECA1",120,0)
 ;Q
"RTN","VBECA1",121,0)
 ;
"RTN","VBECA1",122,0)
 ; -------------------------------------------------------
"RTN","VBECA1",123,0)
 ;      Deprecated Method - Removed from IA 3181
"RTN","VBECA1",124,0)
 ; -------------------------------------------------------
"RTN","VBECA1",125,0)
AGAB(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get RBC Antigens Absent
"RTN","VBECA1",126,0)
 ; Return an array of absent antigens and absent antigen comments for
"RTN","VBECA1",127,0)
 ; the DFN of the patient provided. 
"RTN","VBECA1",128,0)
 ; ARR = the name of the array used to store absent antigens.
"RTN","VBECA1",129,0)
 ;   Array will contain the name of the antigen and any antigen comments
"RTN","VBECA1",130,0)
 ;        ARR("AGAB",n) = Absent Antigen ^ Absent Antigen comment
"RTN","VBECA1",131,0)
 ;
"RTN","VBECA1",132,0)
 ;K ARR
"RTN","VBECA1",133,0)
 ;N LRDFN,A,I,X,P1,P2,P1A,DATA
"RTN","VBECA1",134,0)
 ;D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",135,0)
 ;I 'LRDFN S ARR=-1 Q
"RTN","VBECA1",136,0)
 ;S A=0 F I=1:1 S A=$O(^LR(LRDFN,1.5,A)) Q:A=""  D
"RTN","VBECA1",137,0)
 ;. S DATA=$G(^LR(LRDFN,1.5,A,0))
"RTN","VBECA1",138,0)
 ;. S P1=$P(DATA,"^",1),P2=$P(DATA,"^",2)
"RTN","VBECA1",139,0)
 ;. S P1A=$P($G(^LAB(61.3,P1,0)),"^",1)
"RTN","VBECA1",140,0)
 ;. S ARR("AGAB",I)=P1A_"^"_P2
"RTN","VBECA1",141,0)
 ;S:'$D(ARR) ARR("AGAB")=""    ;return empty array if none found
"RTN","VBECA1",142,0)
 Q
"RTN","VBECA1",143,0)
 ;
"RTN","VBECA1",144,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",145,0)
 ;       Private Method Supports IA 3181
"RTN","VBECA1",146,0)
 ; ----------------------------------------------------------------
"RTN","VBECA1",147,0)
TRRX(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Transfusion Reactions
"RTN","VBECA1",148,0)
 ; Return an array of transfusion reactions for the DFN of the
"RTN","VBECA1",149,0)
 ;   patient provided.  If no transfusion reactions found, an
"RTN","VBECA1",150,0)
 ;   empty array is returned  ARR("TRRX")=""
"RTN","VBECA1",151,0)
 ; 
"RTN","VBECA1",152,0)
 ; ARR = the name of the array used to store transfusion reactions.
"RTN","VBECA1",153,0)
 ;   Array will contain both reactions where a particular unit or
"RTN","VBECA1",154,0)
 ;   transfusion was determined to be the cause of the reaction, and
"RTN","VBECA1",155,0)
 ;   those where no unit could be identified as being the cause of the
"RTN","VBECA1",156,0)
 ;   reaction.
"RTN","VBECA1",157,0)
 ; Transaction Type is a pointer to Blood Bank Utility File #65.4
"RTN","VBECA1",158,0)
 ;      ARR("TRRX",n) = Transfusion Date/Time ^ Transaction Type
"RTN","VBECA1",159,0)
 ;
"RTN","VBECA1",160,0)
 ; Implement new VBECS API.
"RTN","VBECA1",161,0)
 K ARR
"RTN","VBECA1",162,0)
 N IFN
"RTN","VBECA1",163,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",164,0)
 I '$G(IFN) S ARR=-1 Q
"RTN","VBECA1",165,0)
 D TRRX^VBECA1B(IFN) Q
"RTN","VBECA1",166,0)
 ;
"RTN","VBECA1",167,0)
 ; get the reactions associated with a particular transfusion
"RTN","VBECA1",168,0)
 ;S (A,CNT)=0 F  S A=$O(^LR(LRDFN,1.6,A)) Q:A=""  D
"RTN","VBECA1",169,0)
 ;. S DATA=$G(^LR(LRDFN,1.6,A,0))
"RTN","VBECA1",170,0)
 ;. S P1=$P(DATA,"^",1),P11=$P(DATA,"^",11) Q:P11=""   ;transaction type
"RTN","VBECA1",171,0)
 ;. S P11A=$S(P11'="":$P($G(^LAB(65.4,P11,0)),"^",1),1:"")
"RTN","VBECA1",172,0)
 ;. S CNT=CNT+1,ARR("TRRX",CNT)=P1_"^"_P11A D
"RTN","VBECA1",173,0)
 ;. . D FIND^DIC(66,,".02","A","`"_$P(DATA,"^",2),,,,,"VBECTRX")
"RTN","VBECA1",174,0)
 ;. . S ARR("TRRX",CNT)=ARR("TRRX",CNT)_"^"_VBECTRX("DILIST","ID",1,.02)_"^"_$P(DATA,"^",3) ;Added UNIT ID and COMPONENT
"RTN","VBECA1",175,0)
 ;. . S CMT=0 F  S CMT=$O(^LR(LRDFN,1.6,A,1,CMT)) Q:'CMT  S ARR("TRRX",CNT,CMT)=^LR(LRDFN,1.6,A,1,CMT,0)
"RTN","VBECA1",176,0)
 ;; now get the reactions NOT associated with a particular transfusion
"RTN","VBECA1",177,0)
 ;S A=0 F  S A=$O(^LR(LRDFN,1.9,A)) Q:A=""  D
"RTN","VBECA1",178,0)
 ;. S DATA=$G(^LR(LRDFN,1.9,A,0))
"RTN","VBECA1",179,0)
 ;. S P1=$P(DATA,"^",1),P2=$P(DATA,"^",2) Q:P2=""    ;transaction type
"RTN","VBECA1",180,0)
 ;. S P2A=$S(P2'="":$P($G(^LAB(65.4,P2,0)),"^",1),1:"")
"RTN","VBECA1",181,0)
 ;. S CNT=CNT+1,ARR("TRRX",CNT)=P1_"^"_P2A
"RTN","VBECA1",182,0)
 ;. S CMT=0 F  S CMT=$O(^LR(LRDFN,1.9,A,1,CMT)) Q:'CMT  S ARR("TRRX",CNT,CMT)=^LR(LRDFN,1.9,A,1,CMT,0)
"RTN","VBECA1",183,0)
 ;S:'$D(ARR) ARR("TRRX")=""    ;return empty array if none found
"RTN","VBECA1",184,0)
 Q
"RTN","VBECA1",185,0)
 ;
"RTN","VBECA1",186,0)
 ; -------------------------------------------------------
"RTN","VBECA1",187,0)
 ;      Private Method supports IA 3181-H
"RTN","VBECA1",188,0)
 ; -------------------------------------------------------
"RTN","VBECA1",189,0)
BBCMT(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Blood Bank Comments
"RTN","VBECA1",190,0)
 ; Return an array of blood bank comments for the DFN of the patient
"RTN","VBECA1",191,0)
 ; provided.
"RTN","VBECA1",192,0)
 ; If no comments found, an empty array is returned ARR("BBCMT")="".
"RTN","VBECA1",193,0)
 ; ARR = the name of the array that will be used to store comments.
"RTN","VBECA1",194,0)
 ;   Array will contain all the comment text.
"RTN","VBECA1",195,0)
 ;        ARR("BBCMT",n) = Blood Bank Comment Text
"RTN","VBECA1",196,0)
 ;
"RTN","VBECA1",197,0)
 K ARR
"RTN","VBECA1",198,0)
 N LRDFN,A,I,P76
"RTN","VBECA1",199,0)
 D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",200,0)
 I 'LRDFN S ARR=-1 Q
"RTN","VBECA1",201,0)
 S A=0 F I=1:1 S A=$O(^LR(LRDFN,3,A)) Q:A=""  D
"RTN","VBECA1",202,0)
 . S P76=$G(^LR(LRDFN,3,A,0))
"RTN","VBECA1",203,0)
 . S ARR("BBCMT",I)=P76
"RTN","VBECA1",204,0)
 S:'$D(ARR) ARR("BBCMT")=""    ;return empty array if none found
"RTN","VBECA1",205,0)
 Q
"RTN","VBECA1",206,0)
 ;
"RTN","VBECA1",207,0)
 ; -------------------------------------------------------
"RTN","VBECA1",208,0)
 ;      Deprecated Method - Removed from IA 3181
"RTN","VBECA1",209,0)
 ; -------------------------------------------------------
"RTN","VBECA1",210,0)
AUTO(PATID,PATNAM,PATDOB,PARENT,ARR) ; Get Available Autologous Units
"RTN","VBECA1",211,0)
 ; Return an array of available autologous units for the DFN of the
"RTN","VBECA1",212,0)
 ; patient provided.  If no comments found, an empty array is returned
"RTN","VBECA1",213,0)
 ; ARR("AUTO")="".  
"RTN","VBECA1",214,0)
 ; 
"RTN","VBECA1",215,0)
 ;  ARR = the name of the array that will store autologous units.
"RTN","VBECA1",216,0)
 ;  Array will contain the component type and the expiration date.
"RTN","VBECA1",217,0)
 ;       ARR("AUTO",n) = Component Type ^ Expiration Date
"RTN","VBECA1",218,0)
 ; Component Type is a pointer to Blood Product File (#66)
"RTN","VBECA1",219,0)
 ;
"RTN","VBECA1",220,0)
 ;K ARR
"RTN","VBECA1",221,0)
 ;N LRDFN,A,I,AU,AUT,CMP,COMP,CNT,DATA,EXPDT,EXP
"RTN","VBECA1",222,0)
 ;D PAT^VBECA1A  ;pass DFN, return LRDFN or 0 if not found
"RTN","VBECA1",223,0)
 ;I 'LRDFN S ARR=-1 Q
"RTN","VBECA1",224,0)
 ;I '$D(^LRD(65,"AU",LRDFN)) S ARR("AUTO")="" Q     ;no AP xref
"RTN","VBECA1",225,0)
 ;S (A,CNT)=0 F I=1:1 S A=$O(^LRD(65,"AU",LRDFN,A)) Q:A=""  D
"RTN","VBECA1",226,0)
 ;. S AUT=$G(^LRD(65,A,4)) Q:$P(AUT,"^")'=""  ; already dispositioned
"RTN","VBECA1",227,0)
 ;. S AU=$P(^LRD(65,A,8),"^",3) Q:AU'="A"     ; autologous unit
"RTN","VBECA1",228,0)
 ;. S DATA=$G(^LRD(65,A,0)),CMP=$P(DATA,"^",4),EXPDT=$P(DATA,"^",6)
"RTN","VBECA1",229,0)
 ;. S COMP=$P($G(^LAB(66,CMP,0)),"^",1)       ; ptr to blood product file
"RTN","VBECA1",230,0)
 ;. D EXPIRE(EXPDT) Q:EXP=1                   ;unit is expired
"RTN","VBECA1",231,0)
 ;. S CNT=CNT+1,ARR("AUTO",CNT)=COMP_"^"_EXPDT
"RTN","VBECA1",232,0)
 ;S:'$D(ARR) ARR("AUTO")=""    ;return empty array if none found
"RTN","VBECA1",233,0)
 Q
"RTN","VBECA1",234,0)
 ;
"RTN","VBECA1",235,0)
EXPIRE(X) ; check if date has expired
"RTN","VBECA1",236,0)
 S EXP=0,%DT="TXF" D ^%DT S X=Y K:Y<1 X
"RTN","VBECA1",237,0)
 I $D(X) S X(1)=X,%DT="T",X="N" D ^%DT S X=X(1) D
"RTN","VBECA1",238,0)
 . I $P(X,".")'>$P(Y,".") S EXP=1 Q    ; Unit expired or expires today
"RTN","VBECA1",239,0)
 . S EXP=0
"RTN","VBECA1",240,0)
 Q
"RTN","VBECA1A")
0^2^B4232079
"RTN","VBECA1A",1,0)
VBECA1A ;HIOFO/REL - Verify Patient ; 7/5/01 6:50am
"RTN","VBECA1A",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA1A",3,0)
 ;
"RTN","VBECA1A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA1A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA1A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA1A",7,0)
 ; 
"RTN","VBECA1A",8,0)
 ; Integration Agreements:
"RTN","VBECA1A",9,0)
 ; Reference to ^DIC supported by IA #10006
"RTN","VBECA1A",10,0)
 ; Reference to $$LRDFN^LR7OR1 supported by IA #2503
"RTN","VBECA1A",11,0)
 ;
"RTN","VBECA1A",12,0)
 QUIT
"RTN","VBECA1A",13,0)
 ;
"RTN","VBECA1A",14,0)
PAT ; Verify Patient
"RTN","VBECA1A",15,0)
 N NUM,ERR,X,Y,DIC,ROOT K VBECERR S NUM=0
"RTN","VBECA1A",16,0)
 I $G(PATID)="" S ERR=1 D ERR
"RTN","VBECA1A",17,0)
 I $G(PATNAM)="" S ERR=2 D ERR
"RTN","VBECA1A",18,0)
 I $G(PATDOB)="" S ERR=3 D ERR
"RTN","VBECA1A",19,0)
 S:$G(PARENT)="" PARENT=2 I PARENT'=2&(PARENT'=67) S ERR=7 D ERR G DONE
"RTN","VBECA1A",20,0)
 G:$G(PATID)="" DONE
"RTN","VBECA1A",21,0)
 S DIC=PARENT,DIC(0)="XMZN",X=PATID D ^DIC
"RTN","VBECA1A",22,0)
 ;                       ^  ADDED "N" TO DIC(0) 
"RTN","VBECA1A",23,0)
 ;                          TO ALLOW NUMERIC LOOKUP. RLM
"RTN","VBECA1A",24,0)
 I Y<1 S ERR=4 D ERR G DONE
"RTN","VBECA1A",25,0)
 S IFN=+Y,FILEROOT=$S(PARENT=2:"DPT(",PARENT=67:"LRT(67,",1:"")
"RTN","VBECA1A",26,0)
 S LRDFN=$$LRDFN^LR7OR1(IFN,FILEROOT)
"RTN","VBECA1A",27,0)
 I $G(PATNAM)'="",PATNAM'=$P(Y(0),"^",1) S ERR=5 D ERR
"RTN","VBECA1A",28,0)
 I $G(PATDOB)'="",PATDOB'=$P(Y(0),"^",3) S ERR=6 D ERR
"RTN","VBECA1A",29,0)
DONE S:NUM LRDFN="" Q
"RTN","VBECA1A",30,0)
 ;
"RTN","VBECA1A",31,0)
ERR ; Set Error
"RTN","VBECA1A",32,0)
 I '$D(VBECERR(0)) S VBECERR(0)=$G(PATID)_"^"_$G(PATNAM)_"^"_$G(PATDOB)_"^"_$G(PARENT)
"RTN","VBECA1A",33,0)
 S NUM=NUM+1,VBECERR(NUM)=ERR_"^"_$P($T(ERRTX+ERR),";;",2)
"RTN","VBECA1A",34,0)
 Q
"RTN","VBECA1A",35,0)
ERRTX ;; Error Text
"RTN","VBECA1A",36,0)
 ;;No Patient ID supplied
"RTN","VBECA1A",37,0)
 ;;No Patient Name supplied
"RTN","VBECA1A",38,0)
 ;;No Patient Date of Birth supplied
"RTN","VBECA1A",39,0)
 ;;No patient record found to match the PATID supplied
"RTN","VBECA1A",40,0)
 ;;Patient Name (PATNAM) supplied does not match the patient ID (PATID) record
"RTN","VBECA1A",41,0)
 ;;Patient Date of Birth (PATDOB) does not match the patient ID (PATID) record
"RTN","VBECA1A",42,0)
 ;;Unsupported Parent File (PARENT) supplied
"RTN","VBECA1B")
0^3^B61255311
"RTN","VBECA1B",1,0)
VBECA1B ;HIOFO/BNT - VBECS Patient Data APIs ; 01/21/05 8:30am
"RTN","VBECA1B",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA1B",3,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA1B",4,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA1B",5,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA1B",6,0)
 ; 
"RTN","VBECA1B",7,0)
 ; Integration Agreements:
"RTN","VBECA1B",8,0)
 ; Reference to ^DIC supported by IA #10006
"RTN","VBECA1B",9,0)
 ; Reference to file 200 supported by IA #10035
"RTN","VBECA1B",10,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECA1B",11,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA1B",12,0)
 ; Reference to ^DPT( supported by IA #10035
"RTN","VBECA1B",13,0)
 ; 
"RTN","VBECA1B",14,0)
 QUIT
"RTN","VBECA1B",15,0)
 ;
"RTN","VBECA1B",16,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",17,0)
 ;      Private Method supports IA 4624
"RTN","VBECA1B",18,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",19,0)
ABORH(DFN,VBECTYP) ; Returns VBECS Patient ABO Group and Rh Type
"RTN","VBECA1B",20,0)
 ; Input:  DFN = PATIENT file (#2) IEN
"RTN","VBECA1B",21,0)
 ;         VBECTYP = "ABORH" or "ABO" or "RH" as needed.
"RTN","VBECA1B",22,0)
 IF '$D(^DPT(DFN,0)) S ARR("ERROR")="1^Invalid or Missing Patient Identifier" QUIT ARR("ERROR")
"RTN","VBECA1B",23,0)
 IF VBECTYP'="ABORH"&(VBECTYP'="ABO")&(VBECTYP'="RH") S ARR("ERROR")="1^Invalid Input" QUIT ARR("ERROR")
"RTN","VBECA1B",24,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),ARR1
"RTN","VBECA1B",25,0)
 D INITV^VBECRPCC("VBECS Patient ABO_RH")
"RTN","VBECA1B",26,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",27,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q ARR("ERROR")
"RTN","VBECA1B",28,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",29,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",30,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",31,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",32,0)
 I $D(@VBECY@("ERROR")) SET ARR("ERROR")="1^"_@VBECY@("ERROR") QUIT ARR("ERROR")
"RTN","VBECA1B",33,0)
 D ABOEN(.ARR,VBECY)
"RTN","VBECA1B",34,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),ARR1
"RTN","VBECA1B",35,0)
 ;K OPTION,VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES
"RTN","VBECA1B",36,0)
 K VBECSRC,VBECSTAT,VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND
"RTN","VBECA1B",37,0)
 K VBECUNS,VBECY
"RTN","VBECA1B",38,0)
 Q $G(@VBECTYP)
"RTN","VBECA1B",39,0)
ABOEN(ARR,DOC) ;
"RTN","VBECA1B",40,0)
 N CBK,CNT
"RTN","VBECA1B",41,0)
 S OPTION="",VBECRES=$NA(ARR1("API"))
"RTN","VBECA1B",42,0)
 K @VBECRES
"RTN","VBECA1B",43,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",44,0)
 D ABOSET(.CBK)
"RTN","VBECA1B",45,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",46,0)
 Q
"RTN","VBECA1B",47,0)
ABOSET(CBK) ;
"RTN","VBECA1B",48,0)
 K CBK
"RTN","VBECA1B",49,0)
 S CBK("STARTELEMENT")="ABOSTELE^VBECA1B1"
"RTN","VBECA1B",50,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",51,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",52,0)
 Q
"RTN","VBECA1B",53,0)
 ;
"RTN","VBECA1B",54,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",55,0)
 ;      Private Method supports IA 4626
"RTN","VBECA1B",56,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",57,0)
TRRX(DFN) ; Returns VBECS Patient Transfusion Reaction History
"RTN","VBECA1B",58,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J)
"RTN","VBECA1B",59,0)
 D INITV^VBECRPCC("VBECS Patient TRRX")
"RTN","VBECA1B",60,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",61,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",62,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",63,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",64,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",65,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",66,0)
 D TRRXEN(.ARR,VBECY)
"RTN","VBECA1B",67,0)
 I '$D(ARR("TRRX")) S ARR("TRRX")=""
"RTN","VBECA1B",68,0)
 Q
"RTN","VBECA1B",69,0)
 ;
"RTN","VBECA1B",70,0)
TRRXEN(ARR,DOC) ;
"RTN","VBECA1B",71,0)
 N CBK,CNT
"RTN","VBECA1B",72,0)
 S OPTION="",VBECRES=$NA(^TMP("VBECA1B",$J))
"RTN","VBECA1B",73,0)
 K @VBECRES
"RTN","VBECA1B",74,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",75,0)
 D TRRXSET(.CBK)
"RTN","VBECA1B",76,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",77,0)
 M ARR("TRRX")=@VBECRES
"RTN","VBECA1B",78,0)
 K VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT
"RTN","VBECA1B",79,0)
 K VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",80,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J)
"RTN","VBECA1B",81,0)
 Q
"RTN","VBECA1B",82,0)
 ;
"RTN","VBECA1B",83,0)
TRRXSET(CBK) ;
"RTN","VBECA1B",84,0)
 K CBK
"RTN","VBECA1B",85,0)
 S CBK("STARTELEMENT")="TRSTELE^VBECA1B1"
"RTN","VBECA1B",86,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",87,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",88,0)
 Q
"RTN","VBECA1B",89,0)
 ;
"RTN","VBECA1B",90,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",91,0)
 ;      Private Method supports IA 4625
"RTN","VBECA1B",92,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",93,0)
ABID(DFN) ; Returns VBECS Patient Antibodies Identified
"RTN","VBECA1B",94,0)
 D INITV^VBECRPCC("VBECS Patient ABID")
"RTN","VBECA1B",95,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",96,0)
 K @VBECY,@VBECPRMS("RESULTS")
"RTN","VBECA1B",97,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",98,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",99,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",100,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",101,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",102,0)
 D ABIDEN(.ARR,VBECY)
"RTN","VBECA1B",103,0)
 ;K @VBECY,@VBECPRMS("RESULTS")
"RTN","VBECA1B",104,0)
 K ARR1,ATR,ATR,CBK,CNT,DFN,DOC,ELE,OPTION,TEXT,VBECABHC,VBECLN
"RTN","VBECA1B",105,0)
 K VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT,VBECTRHC,VBECTSTC
"RTN","VBECA1B",106,0)
 K VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",107,0)
 Q
"RTN","VBECA1B",108,0)
 ;
"RTN","VBECA1B",109,0)
ABIDEN(ARR,DOC) ;
"RTN","VBECA1B",110,0)
 N CBK,CNT
"RTN","VBECA1B",111,0)
 S OPTION="",VBECRES=$NA(^TMP("VBECA1B",$J))
"RTN","VBECA1B",112,0)
 K @VBECRES
"RTN","VBECA1B",113,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",114,0)
 D ABSET(.CBK)
"RTN","VBECA1B",115,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",116,0)
 M ARR("ABID")=@VBECRES
"RTN","VBECA1B",117,0)
 Q
"RTN","VBECA1B",118,0)
 ;
"RTN","VBECA1B",119,0)
ABSET(CBK) ;
"RTN","VBECA1B",120,0)
 K CBK
"RTN","VBECA1B",121,0)
 S CBK("STARTELEMENT")="ABSTELE^VBECA1B1"
"RTN","VBECA1B",122,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",123,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",124,0)
 Q
"RTN","VBECA1B",125,0)
 ;
"RTN","VBECA1B",126,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",127,0)
 ;      Private Method supports IA 4620
"RTN","VBECA1B",128,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",129,0)
AVUNIT(TMPLOC,DFN) ; Returns VBECS Patient Available Units
"RTN","VBECA1B",130,0)
 ; Input variable;
"RTN","VBECA1B",131,0)
 ; TMPLOC = Node in ^TMP to be used for output data array
"RTN","VBECA1B",132,0)
 ; DFN = Internal number of patient
"RTN","VBECA1B",133,0)
 ;
"RTN","VBECA1B",134,0)
 ; Output is data array:
"RTN","VBECA1B",135,0)
 ; ^TMP(TMPLOC,$J,n)
"RTN","VBECA1B",136,0)
 ;
"RTN","VBECA1B",137,0)
 Q:$G(TMPLOC)=""
"RTN","VBECA1B",138,0)
 Q:'$G(DFN)
"RTN","VBECA1B",139,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),^TMP(TMPLOC,$J)
"RTN","VBECA1B",140,0)
 D INITV^VBECRPCC("VBECS Patient Available Units")
"RTN","VBECA1B",141,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",142,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",143,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",144,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",145,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",146,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",147,0)
 D AVUEN(.ARR,VBECY)
"RTN","VBECA1B",148,0)
 I '$D(ARR("UNIT")) S ARR("UNIT")=""
"RTN","VBECA1B",149,0)
 M ^TMP(TMPLOC,$J)=ARR
"RTN","VBECA1B",150,0)
 K ARR
"RTN","VBECA1B",151,0)
 Q
"RTN","VBECA1B",152,0)
AVUEN(ARR,DOC) ;
"RTN","VBECA1B",153,0)
 N CBK,CNT
"RTN","VBECA1B",154,0)
 S OPTION="",VBECRES=$NA(^TMP("VBECA1B",$J))
"RTN","VBECA1B",155,0)
 K @VBECRES
"RTN","VBECA1B",156,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",157,0)
 D AVUSET(.CBK)
"RTN","VBECA1B",158,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",159,0)
 M ARR=@VBECRES@("UNIT",$J)
"RTN","VBECA1B",160,0)
 K VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT
"RTN","VBECA1B",161,0)
 K VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",162,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),ARR1
"RTN","VBECA1B",163,0)
 Q
"RTN","VBECA1B",164,0)
AVUSET(CBK) ;
"RTN","VBECA1B",165,0)
 K CBK
"RTN","VBECA1B",166,0)
 S CBK("STARTELEMENT")="AVUSTELE^VBECA1B1"
"RTN","VBECA1B",167,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",168,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",169,0)
 Q
"RTN","VBECA1B",170,0)
 ;
"RTN","VBECA1B",171,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",172,0)
 ;      Private Method supports IA 4621
"RTN","VBECA1B",173,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",174,0)
TRAN(DFN) ; Returns VBECS Patient Transfusion History
"RTN","VBECA1B",175,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J)
"RTN","VBECA1B",176,0)
 D INITV^VBECRPCC("VBECS Patient Transfusion History")
"RTN","VBECA1B",177,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",178,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",179,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",180,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",181,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",182,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",183,0)
 D TRANEN(.ARR,VBECY)
"RTN","VBECA1B",184,0)
 Q
"RTN","VBECA1B",185,0)
 ;
"RTN","VBECA1B",186,0)
TRANEN(ARR,DOC) ;
"RTN","VBECA1B",187,0)
 N CBK,CNT
"RTN","VBECA1B",188,0)
 S OPTION="",VBECRES=$NA(^TMP("VBECA1B",$J))
"RTN","VBECA1B",189,0)
 K @VBECRES
"RTN","VBECA1B",190,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA1B",191,0)
 D TRANSET(.CBK)
"RTN","VBECA1B",192,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",193,0)
 I '$D(@VBECRES@("TRAN")) S ARR="" Q
"RTN","VBECA1B",194,0)
 M ARR=@VBECRES@("TRAN")
"RTN","VBECA1B",195,0)
 K VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT
"RTN","VBECA1B",196,0)
 K VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",197,0)
 K ^TMP("VBECAPI",$J),^TMP("VBECAPI1",$J),^TMP("VBECA1B",$J)
"RTN","VBECA1B",198,0)
 Q
"RTN","VBECA1B",199,0)
 ;
"RTN","VBECA1B",200,0)
TRANSET(CBK) ;
"RTN","VBECA1B",201,0)
 K CBK
"RTN","VBECA1B",202,0)
 S CBK("STARTELEMENT")="TRANSTEL^VBECA1B1"
"RTN","VBECA1B",203,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",204,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",205,0)
 Q
"RTN","VBECA1B",206,0)
 ;
"RTN","VBECA1B",207,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",208,0)
 ;      Private Method supports IA 4623
"RTN","VBECA1B",209,0)
 ; ----------------------------------------------------------
"RTN","VBECA1B",210,0)
DFN(DFN) ; Returns VBECS Patient Reports for CPRS
"RTN","VBECA1B",211,0)
 D INITV^VBECRPCC("VBECS Patient Report")
"RTN","VBECA1B",212,0)
 S VBECY="^TMP(""VBECAPI"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECAPI1"",$J)"
"RTN","VBECA1B",213,0)
 K @VBECY,@VBECPRMS("RESULTS")
"RTN","VBECA1B",214,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA1B",215,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA1B",216,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA1B",217,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA1B",218,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA1B",219,0)
 D RPTEN(.ARR,VBECY)
"RTN","VBECA1B",220,0)
 ;K @VBECY,@VBECPRMS("RESULTS")
"RTN","VBECA1B",221,0)
 K VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES,VBECSRC,VBECSTAT
"RTN","VBECA1B",222,0)
 K VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND,VBECUNS,VBECY
"RTN","VBECA1B",223,0)
 Q
"RTN","VBECA1B",224,0)
RPTEN(ARR,DOC) ;
"RTN","VBECA1B",225,0)
 N CBK,CNT
"RTN","VBECA1B",226,0)
 S OPTION="",VBECRES=$NA(^TMP("VBDATA",$J))
"RTN","VBECA1B",227,0)
 K @VBECRES
"RTN","VBECA1B",228,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND,VBECSTC,VBECCRC)=0
"RTN","VBECA1B",229,0)
 D RPTSET(.CBK)
"RTN","VBECA1B",230,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA1B",231,0)
 M ARR=@VBECRES
"RTN","VBECA1B",232,0)
 Q
"RTN","VBECA1B",233,0)
RPTSET(CBK) ;
"RTN","VBECA1B",234,0)
 K CBK
"RTN","VBECA1B",235,0)
 S CBK("STARTELEMENT")="RPTSTELE^VBECA1B1"
"RTN","VBECA1B",236,0)
 S CBK("ENDELEMENT")="ENELE^VBECA1B1"
"RTN","VBECA1B",237,0)
 S CBK("CHARACTERS")="CHAR^VBECA1B1"
"RTN","VBECA1B",238,0)
 Q
"RTN","VBECA1B1")
0^71^B35331122
"RTN","VBECA1B1",1,0)
VBECA1B1 ;HIOFO/BNT - VBECS Patient Data API continued ;04/12/2005 03:10
"RTN","VBECA1B1",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA1B1",3,0)
 ;
"RTN","VBECA1B1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA1B1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA1B1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA1B1",7,0)
 ; 
"RTN","VBECA1B1",8,0)
 ; Integration Agreements:
"RTN","VBECA1B1",9,0)
 ; Call to $$STRIP^XLFSTR is supported by IA: 10104
"RTN","VBECA1B1",10,0)
 ; Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECA1B1",11,0)
 ; Call to $$NS^XUAF4 is supported by IA: 2171
"RTN","VBECA1B1",12,0)
 ; Call to $$STA^XUAF4 is supported by IA: 2171
"RTN","VBECA1B1",13,0)
 ; Call to F4^XUAF4 is supported by IA: 2171
"RTN","VBECA1B1",14,0)
 ;
"RTN","VBECA1B1",15,0)
ENELE(ELE) ; -- element end event handler
"RTN","VBECA1B1",16,0)
 Q
"RTN","VBECA1B1",17,0)
 ;
"RTN","VBECA1B1",18,0)
CHAR(TEXT) ; -- element char event handler
"RTN","VBECA1B1",19,0)
 Q
"RTN","VBECA1B1",20,0)
 ;
"RTN","VBECA1B1",21,0)
ABOSTELE(ELE,ATR) ; -- element start event handler for Patient ABO/Rh API
"RTN","VBECA1B1",22,0)
 I ELE="Patient" S ABO=$G(ATR("abo")),RH=$G(ATR("rh")),ABORH=$G(ATR("abo"))_" "_$G(ATR("rh"))
"RTN","VBECA1B1",23,0)
 Q
"RTN","VBECA1B1",24,0)
 ;
"RTN","VBECA1B1",25,0)
TRSTELE(ELE,ATR) ; -- element start event handler for Patient Transfusion Reaction History API
"RTN","VBECA1B1",26,0)
 I ELE="TransfusionReaction" D
"RTN","VBECA1B1",27,0)
  . S VBECLN=VBECLN+1,@VBECRES@(VBECLN)=$G(ATR("date"))_"^"_$G(ATR("type"))
"RTN","VBECA1B1",28,0)
  . D:$L($G(ATR("comment"))) BLDCMT(ATR("comment"))
"RTN","VBECA1B1",29,0)
  . I $G(ATR("unitId"))]"" S @VBECRES@(VBECLN)=@VBECRES@(VBECLN)_"^"_$G(ATR("unitId"))_"^"_$G(ATR("productTypeName"))_"^"_$G(ATR("productTypePrintName"))
"RTN","VBECA1B1",30,0)
 Q
"RTN","VBECA1B1",31,0)
 ;
"RTN","VBECA1B1",32,0)
BLDCMT(STR) ; Build comment text paragraph
"RTN","VBECA1B1",33,0)
 N CNT
"RTN","VBECA1B1",34,0)
P1 I $L(STR)<80 S CNT=$G(CNT)+1,@VBECRES@(VBECLN,CNT)=STR Q
"RTN","VBECA1B1",35,0)
 F L=80:-1:1 Q:$E(STR,L)=" "
"RTN","VBECA1B1",36,0)
 S CNT=$G(CNT)+1,@VBECRES@(VBECLN,CNT)=$E(STR,1,L-1),STR=$E(STR,L+1,99999) G P1
"RTN","VBECA1B1",37,0)
 ;
"RTN","VBECA1B1",38,0)
ABSTELE(ELE,ATR) ; -- element start event handler Patient Antibodies Identified API
"RTN","VBECA1B1",39,0)
 I ELE="Antibody" D
"RTN","VBECA1B1",40,0)
  . S VBECLN=VBECLN+1,@VBECRES@(VBECLN)=$G(ATR("name"))
"RTN","VBECA1B1",41,0)
  . D:$L($G(ATR("comment"))) BLDCMT(ATR("comment"))
"RTN","VBECA1B1",42,0)
 Q
"RTN","VBECA1B1",43,0)
 ;
"RTN","VBECA1B1",44,0)
AVUSTELE(ELE,ATR) ; -- element start event handler Patient Available Units API
"RTN","VBECA1B1",45,0)
 I ELE="Patient" S @VBECRES@("UNIT",$J,0)=$$STRIP^XLFSTR($G(ATR("abo"))," ")_"^"_$S($G(ATR("rh"))="P":"POS",$G(ATR("rh"))="N":"NEG",1:"")_U_$G(ATR("dfn"))_U_$G(ATR("firstName"))_U_$G(ATR("lastName"))_U_$G(ATR("dob"))_U_$G(ATR("ssn"))
"RTN","VBECA1B1",46,0)
 ;
"RTN","VBECA1B1",47,0)
 I ELE="Unit" D
"RTN","VBECA1B1",48,0)
  . S IDT=9999999-$G(ATR("dateAssigned")),EDT=$G(ATR("expDate"))
"RTN","VBECA1B1",49,0)
  . S EFLG=$S(EDT-DT<2:"*",EDT-DT<1:"**",1:"")
"RTN","VBECA1B1",50,0)
  . S EDT=$TR($$FMTE^XLFDT(EDT,"5DZ"),"@"," ")
"RTN","VBECA1B1",51,0)
  . S DTYP=$S($G(ATR("status"))="A":"Autologous",$G(ATR("status"))="D":"Directed",1:"")
"RTN","VBECA1B1",52,0)
  . ; Added $$STRIP to support 035 VistA MR 030407
"RTN","VBECA1B1",53,0)
  . I $G(ATR("divisionCode")) D F4^XUAF4($$STRIP^XLFSTR(ATR("divisionCode")," "),.DIVARR,"","")
"RTN","VBECA1B1",54,0)
  . S UDIV=$S($G(DIVARR("NAME"))]"":$G(DIVARR("NAME")),1:"Unknown")
"RTN","VBECA1B1",55,0)
  . F  Q:'$D(@VBECRES@("UNIT",$J,IDT))  S IDT=IDT+.0001
"RTN","VBECA1B1",56,0)
  . S @VBECRES@("UNIT",$J,IDT)=EFLG_U_EDT_" "_U_$$TRIM^XLFSTR($G(ATR("id")),"LR"," ")_U_$G(ATR("product"))_U_$G(ATR("volume"))_U_$G(ATR("abo"))_U_$G(ATR("rh"))_U_DTYP_U_UDIV_U
"RTN","VBECA1B1",57,0)
  . S @VBECRES@("UNIT",$J,IDT)=@VBECRES@("UNIT",$J,IDT)_$S($G(ATR("location"))]"":ATR("location"),1:"BLOOD BANK")_U_$G(ATR("productCode"))_U_$G(ATR("labelid"))
"RTN","VBECA1B1",58,0)
  . ;RLM Added the labelid
"RTN","VBECA1B1",59,0)
 Q
"RTN","VBECA1B1",60,0)
 ;
"RTN","VBECA1B1",61,0)
TRANSTEL(ELE,ATR) ; -- element start event handler for Transfusion History API
"RTN","VBECA1B1",62,0)
 I ELE="Transfusion" D
"RTN","VBECA1B1",63,0)
  . N IDT,TDT,UNITS,VAL
"RTN","VBECA1B1",64,0)
  . S VBECLN=VBECLN+1
"RTN","VBECA1B1",65,0)
  . S IDT=9999999-$P($G(ATR("date")),".")
"RTN","VBECA1B1",66,0)
  . S TDT=9999999-IDT
"RTN","VBECA1B1",67,0)
  . S UNITS=+$G(ATR("unitsPooled")) S:UNITS'>0 UNITS=1
"RTN","VBECA1B1",68,0)
  . ; 038 VistA MR 031407 - Increment date counter for multiple records
"RTN","VBECA1B1",69,0)
  . F  Q:'$D(@VBECRES@("TRAN",IDT))  S IDT=IDT+.0001
"RTN","VBECA1B1",70,0)
  . S @VBECRES@("TRAN",IDT)=TDT_"^"_UNITS_"\"_$G(ATR("productTypePrintName"))_";"
"RTN","VBECA1B1",71,0)
  . S @VBECRES@("TRAN",$G(ATR("productTypePrintName")))=$G(ATR("productTypeName"))
"RTN","VBECA1B1",72,0)
 Q
"RTN","VBECA1B1",73,0)
 ;
"RTN","VBECA1B1",74,0)
RPTSTELE(ELE,ATR) ; -- element start event handler
"RTN","VBECA1B1",75,0)
 I ELE="SpecimenTest" D
"RTN","VBECA1B1",76,0)
 . S VBECSTC=VBECSTC+1 D
"RTN","VBECA1B1",77,0)
 . . I ATR("printTestName")="DAT Poly CC" Q
"RTN","VBECA1B1",78,0)
 . . I ATR("printTestName")="DAT IgG CC" Q
"RTN","VBECA1B1",79,0)
 . . S @VBECRES@("SPECIMEN",VBECSTC)=$G(ATR("cprsOrderId"))_"^"_$G(ATR("divisionCode"))_"^"_$G(ATR("enteringTechId"))_"^"_$G(ATR("orderableTestName"))_"^"_$G(ATR("printTestName"))_"^"_$G(ATR("requestorId"))
"RTN","VBECA1B1",80,0)
 . . S @VBECRES@("SPECIMEN",VBECSTC)=@VBECRES@("SPECIMEN",VBECSTC)_"^"_$G(ATR("result"))_"^"_$G(ATR("testDate"))
"RTN","VBECA1B1",81,0)
 . . I $G(ATR("comment"))]"" D
"RTN","VBECA1B1",82,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,1)=$E($G(ATR("comment")),1,245)
"RTN","VBECA1B1",83,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,2)=$E($G(ATR("comment")),246,490)
"RTN","VBECA1B1",84,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,3)=$E($G(ATR("comment")),491,999)
"RTN","VBECA1B1",85,0)
 . . I $G(ATR("cannedComment"))]"" I $G(ATR("result"))="Pos" D
"RTN","VBECA1B1",86,0)
 . . . S VBECSTN("Antibody Screen Interp")="",VBECSTN("DAT Poly Interp")="",VBECSTN("DAT IgG Interp")="",VBECSTN("DAT Comp Interp")=""
"RTN","VBECA1B1",87,0)
 . . . I $G(ATR("printTestName"))]"",'$D(VBECSTN(ATR("printTestName"))) Q
"RTN","VBECA1B1",88,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,4)=$E($G(ATR("cannedComment")),1,245)
"RTN","VBECA1B1",89,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,5)=$E($G(ATR("cannedComment")),246,490)
"RTN","VBECA1B1",90,0)
 . . . S @VBECRES@("SPECIMEN",VBECSTC,6)=$E($G(ATR("cannedComment")),491,999)
"RTN","VBECA1B1",91,0)
 I ELE="ComponentRequest" D
"RTN","VBECA1B1",92,0)
 . S VBECCRC=VBECCRC+1 D
"RTN","VBECA1B1",93,0)
 . . S @VBECRES@("COMPONENT REQUEST",VBECCRC)=$G(ATR("componentClassName"))_"^"_ATR("unitsRequested")_"^"_$G(ATR("dateRequested"))_"^"_$G(ATR("dateWanted"))_"^"_$G(ATR("requestorId"))_"^"_$G(ATR("enteredById"))_"^"_$G(ATR("cprsOrderId"))
"RTN","VBECA1B1",94,0)
 I ELE="Unit" D
"RTN","VBECA1B1",95,0)
 . S VBECUNC=VBECUNC+1 D
"RTN","VBECA1B1",96,0)
 . . ; fixed VBECUNC variable to address 034 VistA MR 030407
"RTN","VBECA1B1",97,0)
 . . S @VBECRES@("UNIT",VBECUNC)=$G(ATR("expDate"))_"^"_$G(ATR("product"))_"^"_$G(ATR("abo"))_"^"_$G(ATR("rh"))_"^"_$G(ATR("divisionCode"))_"^"_$G(ATR("location"))_"^"_$G(ATR("status"))_"^"_$G(ATR("id"))
"RTN","VBECA1B1",98,0)
 Q
"RTN","VBECA3")
0^5^B13958816
"RTN","VBECA3",1,0)
VBECA3 ;HINES IFO/DDA-API interfaces for CPRS ;9/20/00  12:44
"RTN","VBECA3",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA3",3,0)
 ;
"RTN","VBECA3",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA3",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA3",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA3",7,0)
 ; 
"RTN","VBECA3",8,0)
 ; Integration Agreements:
"RTN","VBECA3",9,0)
 ; Reference DBIA 4619 - VBECS Order Entry
"RTN","VBECA3",10,0)
 ; Reference to GETS^DIQ() supported by IA #2056
"RTN","VBECA3",11,0)
 ; Reference to $$LRDFN^LR7OR1 supported by IA #2503
"RTN","VBECA3",12,0)
 ; Reference to EN^LR7OSBR supported by IA #3190-A
"RTN","VBECA3",13,0)
 ; Reference to EN1^LR7OSBR supported by IA #3190-B
"RTN","VBECA3",14,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECA3",15,0)
 ; 
"RTN","VBECA3",16,0)
 QUIT
"RTN","VBECA3",17,0)
 ;
"RTN","VBECA3",18,0)
EN(LRDFN) ; Call to encapsulate the extract of Blood Bank data for CPRS
"RTN","VBECA3",19,0)
 ;  via the call EN^LR7OSBR.  This call can be tested by invoking the
"RTN","VBECA3",20,0)
 ;  routine BLR^ORWRP1(root,dfn), where root is the null string and
"RTN","VBECA3",21,0)
 ;  DFN is the PATIENT FILE numeric internal entry number for the
"RTN","VBECA3",22,0)
 ;  patient.
"RTN","VBECA3",23,0)
 ; Parameter LRDFN is the LAB numeric internal entry number for the
"RTN","VBECA3",24,0)
 ;   LAB patient.
"RTN","VBECA3",25,0)
 N X
"RTN","VBECA3",26,0)
 S X="LR7OSBR" X ^%ZOSF("TEST") I '$T W !,"LR7OSBR does not exist in this environment." Q
"RTN","VBECA3",27,0)
 D EN^LR7OSBR
"RTN","VBECA3",28,0)
 Q
"RTN","VBECA3",29,0)
 ;
"RTN","VBECA3",30,0)
EN1(DFN) ; Call to encapsulate the extract of Blood Bank data for CPRS
"RTN","VBECA3",31,0)
 ;  via the call EN1^LR7OSBR.
"RTN","VBECA3",32,0)
 ; Parameter DFN is the PATIENT FILE numeric internal entry number for
"RTN","VBECA3",33,0)
 ;   the LAB patient.
"RTN","VBECA3",34,0)
 N X
"RTN","VBECA3",35,0)
 S X="LR7OSBR" X ^%ZOSF("TEST") I '$T W !,"LR7OSBR does not exist in this environment." Q
"RTN","VBECA3",36,0)
 D EN1^LR7OSBR(DFN)
"RTN","VBECA3",37,0)
 Q
"RTN","VBECA3",38,0)
 ;
"RTN","VBECA3",39,0)
 ; ------------------------------------------------------
"RTN","VBECA3",40,0)
 ;     Private method supports IA #4766
"RTN","VBECA3",41,0)
 ; ------------------------------------------------------
"RTN","VBECA3",42,0)
OEAPI(ARR,DFN,DIV) ; CPRS query to return patient and component related
"RTN","VBECA3",43,0)
 ;         data from VBECS through VistALink
"RTN","VBECA3",44,0)
 IF DFN']"" SET ARR("ERROR")="1^No Patient ID Provided" QUIT
"RTN","VBECA3",45,0)
 IF '$D(^DPT(DFN,0)) SET ARR("ERROR")="1^Undefined VistA Patient ID" QUIT
"RTN","VBECA3",46,0)
 IF DIV']"" SET ARR("ERROR")="1^No Patient Division Provided" QUIT
"RTN","VBECA3",47,0)
 ;
"RTN","VBECA3",48,0)
 NEW VBECY,VBECSTAT
"RTN","VBECA3",49,0)
 SET ARR("ERROR")=0
"RTN","VBECA3",50,0)
 DO INITV^VBECRPCC("VBECS Order Entry")
"RTN","VBECA3",51,0)
 IF +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA3",52,0)
 SET VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA3",53,0)
 SET VBECPRMS("PARAMS",1,"VALUE")=$$CHARCHK^XOBVLIB(DFN)
"RTN","VBECA3",54,0)
 SET VBECPRMS("PARAMS",2,"TYPE")="STRING"
"RTN","VBECA3",55,0)
 SET VBECPRMS("PARAMS",2,"VALUE")=$$CHARCHK^XOBVLIB(DIV)
"RTN","VBECA3",56,0)
 ;
"RTN","VBECA3",57,0)
 SET VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA3",58,0)
 ;
"RTN","VBECA3",59,0)
 SET VBECY=$NA(^TMP("VBECS_XML_RES",$J))
"RTN","VBECA3",60,0)
 KILL @VBECY
"RTN","VBECA3",61,0)
 DO PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA3",62,0)
 IF $D(@VBECY@("ERROR")) SET ARR("ERROR")="1^"_@VBECY@("ERROR") DO CLEANUP QUIT
"RTN","VBECA3",63,0)
 DO EN^VBECA3C(.ARR,VBECY)
"RTN","VBECA3",64,0)
 ; Setting for debugging GUI
"RTN","VBECA3",65,0)
 KILL ^XTMP("OEAPI")
"RTN","VBECA3",66,0)
 M ^XTMP("OEAPI",$J,$P(^DPT(DFN,0),U),DIV)=ARR
"RTN","VBECA3",67,0)
 M ^XTMP("OEAPI",$J,DFN,DIV)=^TMP("VBECS_XML_RES",$J)
"RTN","VBECA3",68,0)
 ;Q  KILL @VBECY
"RTN","VBECA3",69,0)
 ;
"RTN","VBECA3",70,0)
 ;DO CLEANUP
"RTN","VBECA3",71,0)
 QUIT
"RTN","VBECA3",72,0)
BBDATA(DFN) ;Retrieve data for CPRS reports
"RTN","VBECA3",73,0)
 ;File 63's somewhat unique storage method limits the usefulness
"RTN","VBECA3",74,0)
 ;of some of the Kernel database calls.  It was necessary to determine
"RTN","VBECA3",75,0)
 ;the first subscript level in the BB node and call the Kernel
"RTN","VBECA3",76,0)
 ;API with this level predefined.
"RTN","VBECA3",77,0)
 ;All references (field name and values) are converted to the external
"RTN","VBECA3",78,0)
 ;format.
"RTN","VBECA3",79,0)
 ;Null values are not returned.
"RTN","VBECA3",80,0)
 ;Inverse date values are converted to normal format.
"RTN","VBECA3",81,0)
 K ^TMP("VBHOLD",$J),^TMP("VBDATA",$J)
"RTN","VBECA3",82,0)
 S LRDFN=$$LRDFN^LR7OR1(DFN)
"RTN","VBECA3",83,0)
 F VBAA=0  F  S VBAA=$O(^LR(LRDFN,"BB",VBAA)) Q:'VBAA  S VBAAA=VBAA_","_LRDFN_"," D
"RTN","VBECA3",84,0)
  . D GETS^DIQ(63.01,VBAAA,"**","ERN","^TMP(""VBHOLD"","_$J,"ERROR")
"RTN","VBECA3",85,0)
 S VBAA=0 F  S VBAA=$O(^TMP("VBHOLD",$J,VBAA)) Q:VBAA=""  D
"RTN","VBECA3",86,0)
  . S VBAB=0 F  S VBAB=$O(^TMP("VBHOLD",$J,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3",87,0)
  . . S VBAC=0 F  S VBAC=$O(^TMP("VBHOLD",$J,VBAA,VBAB,VBAC)) Q:VBAC=""  D
"RTN","VBECA3",88,0)
  . . . I $L(VBAB,",")=3 S VBAD=$P(VBAB,",") I VBAD?7N1".".N S VBAD=9999999-VBAD
"RTN","VBECA3",89,0)
  . . . I $L(VBAB,",")=4 S VBAD=$P(VBAB,",",2) I VBAD?7N1".".N S VBAD=9999999-VBAD
"RTN","VBECA3",90,0)
  . . . S ^TMP("VBDATA",$J,VBAD,VBAC)=^TMP("VBHOLD",$J,VBAA,VBAB,VBAC,"E")
"RTN","VBECA3",91,0)
 D GETS^DIQ(63,LRDFN,".084*","ERN","VBCMPRQ","ERROR")
"RTN","VBECA3",92,0)
 S VBAA="" F  S VBAA=$O(VBCMPRQ(63.084,VBAA)) Q:VBAA=""  D
"RTN","VBECA3",93,0)
  . S VBAB=""  F  S VBAB=$O(VBCMPRQ(63.084,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3",94,0)
  . . S VBAC=$P(VBAA,",")
"RTN","VBECA3",95,0)
  . . S ^TMP("VBDATA",$J,"COMPONENT REQUEST",VBAC,VBAB)=VBCMPRQ(63.084,VBAA,VBAB,"E")
"RTN","VBECA3",96,0)
 K ^TMP("VBHOLD",$J),VBAA,VBAB,VBAC,VBAD,VBAAA,VBCMPRQ
"RTN","VBECA3",97,0)
 Q
"RTN","VBECA3",98,0)
CLEANUP ;
"RTN","VBECA3",99,0)
 KILL VBECPRMS,VBECSTAT
"RTN","VBECA3",100,0)
 KILL ^TMP("VBECS_XML_RES",$J)
"RTN","VBECA3",101,0)
 QUIT
"RTN","VBECA3A")
0^6^B116577
"RTN","VBECA3A",1,0)
VBECA3A ;DALOI/RLM-API interface for CPRS ;9/20/00  12:44
"RTN","VBECA3A",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA3A",3,0)
 ;
"RTN","VBECA3A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA3A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA3A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA3A",7,0)
 ; 
"RTN","VBECA3A",8,0)
 ; Integration Agreements:
"RTN","VBECA3A",9,0)
 ;
"RTN","VBECA3A",10,0)
 QUIT
"RTN","VBECA3A",11,0)
 ;
"RTN","VBECA3A",12,0)
 ; ----------------------------------------------------------
"RTN","VBECA3A",13,0)
 ;      Private Method supports IA 3879
"RTN","VBECA3A",14,0)
 ; ----------------------------------------------------------
"RTN","VBECA3A",15,0)
DFN(DFN) ;Main entry point.  Calls the SPECIMEN, COMPONENT REQUEST, and CROSSMATCH data
"RTN","VBECA3A",16,0)
 D DFN^VBECA1B(DFN)
"RTN","VBECA3A",17,0)
 Q
"RTN","VBECA3A",18,0)
 ;D EXIT K VBCMPRQ
"RTN","VBECA3A",19,0)
 ;K ^TMP("VBHOLD",$J),^TMP("VBDATA",$J)
"RTN","VBECA3A",20,0)
 ;S LRDFN=$$LRDFN^LR7OR1(DFN) Q:'LRDFN
"RTN","VBECA3A",21,0)
 ;D A,B,C
"RTN","VBECA3A",22,0)
 ;M ^TMP("ZBNT",$J)=^TMP("VBDATA",$J)
"RTN","VBECA3A",23,0)
 ;G EXIT
"RTN","VBECA3A",24,0)
A ;Retrieves SPECIMEN data
"RTN","VBECA3A",25,0)
 ;S VBAA=0  F  S VBAA=$O(^LR(LRDFN,"BB",VBAA)) Q:'VBAA  S VBAAA=VBAA_","_LRDFN_"," D
"RTN","VBECA3A",26,0)
 ; . D GETS^DIQ(63.01,VBAAA,".01;.03;.99*;2.1;2.4;2.6;2.9;2.91;3*;6;7*;8*;10;10.3;11;11.3","EN","^TMP(""VBHOLD"","_$J,"ERROR")
"RTN","VBECA3A",27,0)
 ;S VBAA=0 F  S VBAA=$O(^TMP("VBHOLD",$J,VBAA)) Q:VBAA=""  D
"RTN","VBECA3A",28,0)
 ; . S VBAB=0 F  S VBAB=$O(^TMP("VBHOLD",$J,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3A",29,0)
 ; . . ;I $L(VBAB,",")=3,$G(^TMP("VBHOLD",$J,VBAA,VBAB,"DATE/TIME SPECIMEN TAKEN","E"))="" Q
"RTN","VBECA3A",30,0)
 ; . . I $L(VBAB,",")=3,$G(^TMP("VBHOLD",$J,VBAA,VBAB,.01,"E"))="" Q
"RTN","VBECA3A",31,0)
 ; . . S VBAC=0 F  S VBAC=$O(^TMP("VBHOLD",$J,VBAA,VBAB,VBAC)) Q:VBAC=""  D
"RTN","VBECA3A",32,0)
 ; . . . I $L(VBAB,",")=3 S VBAD=$P(VBAB,",") I VBAD?7N1".".N S VBAD=9999999-VBAD
"RTN","VBECA3A",33,0)
 ; . . . I $L(VBAB,",")=4 S VBAD=$P(VBAB,",",2) I VBAD?7N1".".N S VBAD=9999999-VBAD
"RTN","VBECA3A",34,0)
 ; . . . I $L(VBAB,",")=3 S ^TMP("VBDATA",$J,"SPECIMEN",VBAD,VBAA_","_VBAC)=^TMP("VBHOLD",$J,VBAA,VBAB,VBAC,"E")
"RTN","VBECA3A",35,0)
 ; . . . I $L(VBAB,",")=4 S ^TMP("VBDATA",$J,"SPECIMEN",VBAD,VBAA_","_VBAC,$P(VBAB,","))=^TMP("VBHOLD",$J,VBAA,VBAB,VBAC,"E")
"RTN","VBECA3A",36,0)
 Q
"RTN","VBECA3A",37,0)
B ;Retrieves COMPONENT REQUEST data
"RTN","VBECA3A",38,0)
 ;S VBAA=0,VBINT(.08)="" F  S VBAA=$O(^LR(LRDFN,1.8,VBAA)) Q:'VBAA  S VBAAA=VBAA_","_LRDFN_"," D
"RTN","VBECA3A",39,0)
 ; . D GETS^DIQ(63.084,VBAAA,".01;.04;.03;.05;.09;.08","IEN","VBCMPRQ","ERROR")
"RTN","VBECA3A",40,0)
 ;S VBAA="" F  S VBAA=$O(VBCMPRQ(63.084,VBAA)) Q:VBAA=""  D
"RTN","VBECA3A",41,0)
 ; . S VBAB=""  F  S VBAB=$O(VBCMPRQ(63.084,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3A",42,0)
 ; . . S VBAC=$P(VBAA,",")
"RTN","VBECA3A",43,0)
 ; . . S ^TMP("VBDATA",$J,"COMPONENT REQUEST",VBAC,VBAB)=VBCMPRQ(63.084,VBAA,VBAB,$S($D(VBINT(VBAB)):"I",1:"E"))
"RTN","VBECA3A",44,0)
 Q
"RTN","VBECA3A",45,0)
C ;Retrieves CROSSMATCH data
"RTN","VBECA3A",46,0)
 ;S VBAA=0 F  S VBAA=$O(^LRD(65,"AP",LRDFN,VBAA)) Q:'VBAA  D
"RTN","VBECA3A",47,0)
 ; . D GETS^DIQ(65,VBAA,".01;.04;.07;.08;.06;.16","EN","VBXMATCH","ERROR")
"RTN","VBECA3A",48,0)
 ; . S VBAC=$O(^LRD(65,+VBAA,3,0)) Q:'VBAC
"RTN","VBECA3A",49,0)
 ; . D GETS^DIQ(65.03,VBAC_","_+VBAA_",",.04,"EN","VBXMTCH1","ERROR")
"RTN","VBECA3A",50,0)
 ;S VBAA=0 F  S VBAA=$O(VBXMATCH(65,VBAA)) Q:VBAA=""  S VBAB=0 F  S VBAB=$O(VBXMATCH(65,VBAA,VBAB)) Q:VBAB=""  D
"RTN","VBECA3A",51,0)
 ; . S ^TMP("VBDATA",$J,"CROSSMATCH",+VBAA,VBAB)=VBXMATCH(65,VBAA,VBAB,"E")
"RTN","VBECA3A",52,0)
 ;S VBAA="" F  S VBAA=$O(VBXMTCH1(65.03,VBAA)) Q:VBAA=""  S VBAB="" F  S VBAB=$O(VBXMTCH1(65.03,VBAA,VBAB)) Q:VBAB=""  S ^TMP("VBDATA",$J,"CROSSMATCH",$P(VBAA,",",2),3)=$G(VBXMTCH1(65.03,VBAA,".04","E"))
"RTN","VBECA3A",53,0)
 Q
"RTN","VBECA3A",54,0)
EXIT ;Clean up a few variables
"RTN","VBECA3A",55,0)
 ;K LRDFN,VBAA,VBAB,VBAC,VBAD,VBAAA,VBCMPRQ,VBINT,VBXMATCH,VBXMTCH1
"RTN","VBECA3A",56,0)
 Q
"RTN","VBECA3A",57,0)
ZEOR ;VBECA3A
"RTN","VBECA3B")
0^7^B10836564
"RTN","VBECA3B",1,0)
VBECA3B ;DALOI/RLM-API interfaces for CPRS ;9/20/00  12:44
"RTN","VBECA3B",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA3B",3,0)
 ;
"RTN","VBECA3B",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA3B",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA3B",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA3B",7,0)
 ; 
"RTN","VBECA3B",8,0)
 ; Integration Agreements:
"RTN","VBECA3B",9,0)
 ; 
"RTN","VBECA3B",10,0)
 QUIT
"RTN","VBECA3B",11,0)
 ;
"RTN","VBECA3B",12,0)
CPRS ;
"RTN","VBECA3B",13,0)
 K VBECBBD D CR,SPC,TRX
"RTN","VBECA3B",14,0)
 K VBECA,VBECB,VBECI
"RTN","VBECA3B",15,0)
 Q
"RTN","VBECA3B",16,0)
CR ;Component Request
"RTN","VBECA3B",17,0)
 K ^TMP("BBD",$J,"COMPONENT REQUEST")
"RTN","VBECA3B",18,0)
 S VBECA="" F  S VBECA=$O(^TMP("VBDATA",$J,"COMPONENT REQUEST",VBECA)) Q:VBECA=""  D
"RTN","VBECA3B",19,0)
  . S ^TMP("BBD",$J,"COMPONENT REQUEST",VBECA)=""
"RTN","VBECA3B",20,0)
  . F VBECI=.01,.04,.03,.05,.09,.08 S ^TMP("BBD",$J,"COMPONENT REQUEST",VBECA)=^TMP("BBD",$J,"COMPONENT REQUEST",VBECA)_$G(^TMP("VBDATA",$J,"COMPONENT REQUEST",VBECA,VBECI))_"^"
"RTN","VBECA3B",21,0)
 K VBECA,VBECB,VBECI
"RTN","VBECA3B",22,0)
 Q
"RTN","VBECA3B",23,0)
SPC ;Specimen
"RTN","VBECA3B",24,0)
 K ^TMP("BBD",$J,"SPECIMEN")
"RTN","VBECA3B",25,0)
 S VBECA="" F  S VBECA=$O(^TMP("VBDATA",$J,"SPECIMEN",VBECA)) Q:VBECA=""  D
"RTN","VBECA3B",26,0)
  . Q:$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,.03"))=""
"RTN","VBECA3B",27,0)
  . S ^TMP("BBD",$J,"SPECIMEN",VBECA)=""
"RTN","VBECA3B",28,0)
  . F VBECI=2.91,10.3,11.3 I $G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,"_VBECI))]"" S ^TMP("BBD",$J,"SPECIMEN",VBECA,VBECI)=$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,"_VBECI))
"RTN","VBECA3B",29,0)
  . F VBECI="63.012,.01","63.46,.01","63.46,.02","63.48,.01","63.199,.01" S VBECB=0 D
"RTN","VBECA3B",30,0)
  . . F  S VBECB=$O(^TMP("VBDATA",$J,"SPECIMEN",VBECA,VBECI,VBECB)) Q:VBECB=""  S ^TMP("BBD",$J,"SPECIMEN",VBECA,VBECI,VBECB)=$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,VBECI,VBECB))
"RTN","VBECA3B",31,0)
  . F VBECI=.03,.01,10,2.9,2.1,2.4,2.6,2.9,11,6 D
"RTN","VBECA3B",32,0)
  . . S VBDTA=$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,"_VBECI))
"RTN","VBECA3B",33,0)
  . . I VBECI=10,VBDTA="NOT DONE" S VBDTA="ND"
"RTN","VBECA3B",34,0)
  . . I VBECI=11,VBDTA="NOT DONE" S VBDTA="ND"
"RTN","VBECA3B",35,0)
  . . I (VBECI=2.1)!(VBECI=2.4)!(VBECI=2.6) S VBDTA=$S(VBDTA="N":"Neg",1:VBDTA)
"RTN","VBECA3B",36,0)
  . . I (VBECI=2.9)!(VBECI=6)!(VBECI=11) S VBDTA=$S(VBDTA?1"N".E:"Neg",VBDTA?1"P".E:"Pos",1:VBDTA)
"RTN","VBECA3B",37,0)
  . . S ^TMP("BBD",$J,"SPECIMEN",VBECA)=^TMP("BBD",$J,"SPECIMEN",VBECA)_VBDTA_"^"
"RTN","VBECA3B",38,0)
  . . ;S ^TMP("BBD",$J,"SPECIMEN",VBECA)=^TMP("BBD",$J,"SPECIMEN",VBECA)_$G(^TMP("VBDATA",$J,"SPECIMEN",VBECA,"63.01,"_VBECI))_"^"
"RTN","VBECA3B",39,0)
 K VBECA,VBECB,VBECI
"RTN","VBECA3B",40,0)
 Q
"RTN","VBECA3B",41,0)
TRX ;Units assigned/crossmatched
"RTN","VBECA3B",42,0)
 K ^TMP("BBD",$J,"CROSSMATCH")
"RTN","VBECA3B",43,0)
 S VBECA="" F  S VBECA=$O(^TMP("VBDATA",$J,"CROSSMATCH",VBECA)) Q:VBECA=""  F VBECI=.01,.04,.07,.08,.06,.16,3 S ^TMP("BBD",$J,"CROSSMATCH",VBECA)=$G(^TMP("BBD",$J,"CROSSMATCH",VBECA))_$G(^TMP("VBDATA",$J,"CROSSMATCH",VBECA,VBECI))_"^"
"RTN","VBECA3B",44,0)
 K VBECA,VBECB,VBECI
"RTN","VBECA3B",45,0)
 Q
"RTN","VBECA3B",46,0)
ZEOR ;VBECA3B
"RTN","VBECA3C")
0^8^B16841971
"RTN","VBECA3C",1,0)
VBECA3C ;HIOFO/BNT - VBECS Utility to parse XML for CPRS ;12/19/2003  01:00
"RTN","VBECA3C",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA3C",3,0)
 ;
"RTN","VBECA3C",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA3C",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA3C",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA3C",7,0)
 ; 
"RTN","VBECA3C",8,0)
 ; Integration Agreements:
"RTN","VBECA3C",9,0)
 ; Reference DBIA 4149 - M XML Parser
"RTN","VBECA3C",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA3C",11,0)
 ; Reference to CHKNAME^XQ5 supported by IA #????
"RTN","VBECA3C",12,0)
 ; 
"RTN","VBECA3C",13,0)
 ;
"RTN","VBECA3C",14,0)
 QUIT
"RTN","VBECA3C",15,0)
 ;
"RTN","VBECA3C",16,0)
EN(ARR,DOC) ;
"RTN","VBECA3C",17,0)
 N CBK,CNT
"RTN","VBECA3C",18,0)
 ;W !!!,"Invoking XML Parser...",!!!
"RTN","VBECA3C",19,0)
 S OPTION=""
"RTN","VBECA3C",20,0)
 S VBECRES=$NA(^TMP("VBEC_OE_DATA",$J))
"RTN","VBECA3C",21,0)
 K @VBECRES
"RTN","VBECA3C",22,0)
 S (VBECTRHC,VBECTREQ,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC)=0
"RTN","VBECA3C",23,0)
 ; Unit Type counters
"RTN","VBECA3C",24,0)
 SET (VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA3C",25,0)
 D SET(.CBK)
"RTN","VBECA3C",26,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA3C",27,0)
 M ARR=@VBECRES
"RTN","VBECA3C",28,0)
 ;S CNT=""
"RTN","VBECA3C",29,0)
 ;W !!!,"Parser Summary:",!!
"RTN","VBECA3C",30,0)
 ;F  S CNT=$O(CNT(CNT)) Q:CNT=""  W CNT,":",?25,CNT(CNT),!
"RTN","VBECA3C",31,0)
 Q
"RTN","VBECA3C",32,0)
 ; Direct entry of XML text from keyboard
"RTN","VBECA3C",33,0)
 ; Terminate text entry with a solitary '^'
"RTN","VBECA3C",34,0)
PASTE(OPTION) ;
"RTN","VBECA3C",35,0)
 N X,Y,GBL
"RTN","VBECA3C",36,0)
 S GBL=$NA(^TMP("VBEC_OE_XML",$J))
"RTN","VBECA3C",37,0)
 K @GBL
"RTN","VBECA3C",38,0)
 F X=1:1 D  Q:Y="^"
"RTN","VBECA3C",39,0)
 .W X,"> "
"RTN","VBECA3C",40,0)
 .R Y:$G(DTIME,600),!
"RTN","VBECA3C",41,0)
 .E  S Y="^"
"RTN","VBECA3C",42,0)
 .S:Y'="^" @GBL@(X)=Y
"RTN","VBECA3C",43,0)
 D EN(GBL,.OPTION)
"RTN","VBECA3C",44,0)
 K @GBL
"RTN","VBECA3C",45,0)
 Q
"RTN","VBECA3C",46,0)
 ; Set the event interface entry points
"RTN","VBECA3C",47,0)
SET(CBK) ;
"RTN","VBECA3C",48,0)
 K CBK
"RTN","VBECA3C",49,0)
 ;F X=0:1 S Y=$P($T(SETX+X),";;",2) Q:Y=""  D
"RTN","VBECA3C",50,0)
 ;.S CBK(Y)=$E(Y,1,8)_"^VBECA3C"
"RTN","VBECA3C",51,0)
 S CBK("STARTELEMENT")="STELE^VBECA3C"
"RTN","VBECA3C",52,0)
 S CBK("ENDELEMENT")="ENELE^VBECA3C"
"RTN","VBECA3C",53,0)
 S CBK("CHARACTERS")="CHAR^VBECA3C"
"RTN","VBECA3C",54,0)
 Q
"RTN","VBECA3C",55,0)
 ;
"RTN","VBECA3C",56,0)
STELE(ELE,ATR) ; -- element start event handler
"RTN","VBECA3C",57,0)
 SET VBECELE=ELE
"RTN","VBECA3C",58,0)
 IF ELE="Patient" DO
"RTN","VBECA3C",59,0)
 . SET @VBECRES@("PATIENT")=$G(ATR("dfn"))_"^"_$G(ATR("firstName"))_"^"_$G(ATR("lastName"))_"^"_$G(ATR("ssn"))
"RTN","VBECA3C",60,0)
 . SET @VBECRES@("ABORH")=$G(ATR("abo"))_"^"_$G(ATR("rh"))
"RTN","VBECA3C",61,0)
 . QUIT
"RTN","VBECA3C",62,0)
 IF ELE="TransfusionReaction" DO
"RTN","VBECA3C",63,0)
 . SET VBECTRHC=VBECTRHC+1
"RTN","VBECA3C",64,0)
 . SET @VBECRES@("TRHX",VBECTRHC)=$G(ATR("type"))_"^"_$G(ATR("date"))
"RTN","VBECA3C",65,0)
 . QUIT
"RTN","VBECA3C",66,0)
 IF ELE="TransfusionRequirement" DO
"RTN","VBECA3C",67,0)
 . SET VBECTREQ=VBECTREQ+1
"RTN","VBECA3C",68,0)
 . SET @VBECRES@("TRREQ",VBECTREQ)=$G(ATR("modifier"))
"RTN","VBECA3C",69,0)
 . QUIT
"RTN","VBECA3C",70,0)
 IF ELE="Antibody" DO
"RTN","VBECA3C",71,0)
 . SET VBECABHC=VBECABHC+1
"RTN","VBECA3C",72,0)
 . SET @VBECRES@("ABHIS",VBECABHC)=$G(ATR("name"))
"RTN","VBECA3C",73,0)
 . QUIT
"RTN","VBECA3C",74,0)
 IF ELE="Unit" DO
"RTN","VBECA3C",75,0)
 . IF $G(ATR("status"))="C" DO
"RTN","VBECA3C",76,0)
 . . SET VBECUNC=VBECUNC+1
"RTN","VBECA3C",77,0)
 . . SET @VBECRES@("UNIT","C",VBECUNC)=$G(ATR("id"))_"^"_$G(ATR("product"))_"^"_$G(ATR("location"))_"^"_$G(ATR("expDate"))
"RTN","VBECA3C",78,0)
 . IF $G(ATR("status"))="S" DO
"RTN","VBECA3C",79,0)
 . . SET VBECUNS=VBECUNS+1
"RTN","VBECA3C",80,0)
 . . SET @VBECRES@("UNIT","S",VBECUNS)=$G(ATR("id"))_"^"_$G(ATR("product"))_"^"_$G(ATR("location"))_"^"_$G(ATR("expDate"))
"RTN","VBECA3C",81,0)
 . IF $G(ATR("status"))="A" DO
"RTN","VBECA3C",82,0)
 . . SET VBECUNA=VBECUNA+1
"RTN","VBECA3C",83,0)
 . . SET @VBECRES@("UNIT","A",VBECUNA)=$G(ATR("id"))_"^"_$G(ATR("product"))_"^"_$G(ATR("location"))_"^"_$G(ATR("expDate"))
"RTN","VBECA3C",84,0)
 . IF $G(ATR("status"))="D" DO
"RTN","VBECA3C",85,0)
 . . SET VBECUND=VBECUND+1
"RTN","VBECA3C",86,0)
 . . SET @VBECRES@("UNIT","D",VBECUND)=$G(ATR("id"))_"^"_$G(ATR("product"))_"^"_$G(ATR("location"))_"^"_$G(ATR("expDate"))
"RTN","VBECA3C",87,0)
 . QUIT
"RTN","VBECA3C",88,0)
 IF ELE="Specimen" DO
"RTN","VBECA3C",89,0)
 . SET @VBECRES@("SPECIMEN")=$G(ATR("expDate"))_"^"_$G(ATR("uid"))
"RTN","VBECA3C",90,0)
 . QUIT
"RTN","VBECA3C",91,0)
 IF ELE="Component" DO
"RTN","VBECA3C",92,0)
 . SET VBECOMP=$G(ATR("id"))
"RTN","VBECA3C",93,0)
 . SET VBECMSBC=0
"RTN","VBECA3C",94,0)
 . SET @VBECRES@(VBECOMP,"SPECIMEN")=$G(ATR("specimen"))
"RTN","VBECA3C",95,0)
 . QUIT
"RTN","VBECA3C",96,0)
 IF ELE="LabTest" DO
"RTN","VBECA3C",97,0)
 . SET VBECTSTC=VBECTSTC+1
"RTN","VBECA3C",98,0)
 . SET @VBECRES@(VBECOMP,"TEST",VBECTSTC)=$G(ATR("id"))_"^"_$G(ATR("name"))
"RTN","VBECA3C",99,0)
 . QUIT
"RTN","VBECA3C",100,0)
 IF ELE="Msbos" DO
"RTN","VBECA3C",101,0)
 . SET VBECMSBC=VBECMSBC+1
"RTN","VBECA3C",102,0)
 . SET @VBECRES@(VBECOMP,"MSBOS",VBECMSBC)=$G(ATR("name"))_"^"_$G(ATR("threshold"))
"RTN","VBECA3C",103,0)
 . QUIT
"RTN","VBECA3C",104,0)
 IF ELE="Surgery" DO
"RTN","VBECA3C",105,0)
 . SET VBECSRC=VBECSRC+1
"RTN","VBECA3C",106,0)
 . SET @VBECRES@("SURGERY",VBECSRC)=$G(ATR("name"))
"RTN","VBECA3C",107,0)
 QUIT
"RTN","VBECA3C",108,0)
ENELE(ELE) ; -- element end event handler
"RTN","VBECA3C",109,0)
 KILL VBECNT
"RTN","VBECA3C",110,0)
 QUIT
"RTN","VBECA3C",111,0)
 ;
"RTN","VBECA3C",112,0)
CHAR(TEXT) ;
"RTN","VBECA3C",113,0)
 Q
"RTN","VBECA4")
0^9^B15334551
"RTN","VBECA4",1,0)
VBECA4 ;HINES OI/REL-APIs for Health Summary ;10/12/00  14:02
"RTN","VBECA4",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA4",3,0)
 ;
"RTN","VBECA4",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA4",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA4",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA4",7,0)
 ; 
"RTN","VBECA4",8,0)
 ; Integration Agreements:
"RTN","VBECA4",9,0)
 ; Call to $$FMTE^XLFDT is supported by IA: 10103
"RTN","VBECA4",10,0)
 ; Call to EN^DIQ is supported by IA: 10004
"RTN","VBECA4",11,0)
 ; Call to $$NS^XUAF4 is supported by IA: 2171
"RTN","VBECA4",12,0)
 ; Reference to $$LRDFN^LR7OR1 supported by IA #2503
"RTN","VBECA4",13,0)
 ; 
"RTN","VBECA4",14,0)
 QUIT
"RTN","VBECA4",15,0)
 ;
"RTN","VBECA4",16,0)
 ; ----------------------------------------------------------------
"RTN","VBECA4",17,0)
 ;       Private Method Supports IA 3176
"RTN","VBECA4",18,0)
 ; ----------------------------------------------------------------
"RTN","VBECA4",19,0)
TRAN(DFN,TMPLOC,GMTS1,GMTS2) ; Get Transfusion Data for Health Summary
"RTN","VBECA4",20,0)
 ; Input variables:
"RTN","VBECA4",21,0)
 ;   DFN = Internal number of patient
"RTN","VBECA4",22,0)
 ;   TMPLOC = Node in ^TMP to be used for output data array
"RTN","VBECA4",23,0)
 ;   GMTS1 = Inverse end date of search
"RTN","VBECA4",24,0)
 ;   GMTS2 = Inverse start date of search
"RTN","VBECA4",25,0)
 ;
"RTN","VBECA4",26,0)
 ; Output is data array:
"RTN","VBECA4",27,0)
 ;   ^TMP(TMPLOC,$J,n)
"RTN","VBECA4",28,0)
 N LRDFN,IDT,CNTR,TR,PN,PRODUCT,UNITS,TDT,ITDT,ARR
"RTN","VBECA4",29,0)
 Q:$G(TMPLOC)=""
"RTN","VBECA4",30,0)
 K ^TMP(TMPLOC,$J)
"RTN","VBECA4",31,0)
 Q:'$G(DFN)
"RTN","VBECA4",32,0)
 S:'$G(GMTS1) GMTS1=5555555 S:'$G(GMTS2) GMTS2=9999999
"RTN","VBECA4",33,0)
 ;
"RTN","VBECA4",34,0)
 D TRAN^VBECA1B(DFN)
"RTN","VBECA4",35,0)
 S IDT=GMTS1-1 F  S IDT=$O(ARR(IDT)) Q:+IDT'>0!(IDT>GMTS2)  D
"RTN","VBECA4",36,0)
 . S ^TMP(TMPLOC,$J,IDT)=ARR(IDT)
"RTN","VBECA4",37,0)
 . S ^TMP(TMPLOC,$J,$P($P(ARR(IDT),"\",2),";"))=ARR($P($P(ARR(IDT),"\",2),";"))
"RTN","VBECA4",38,0)
 M ^TMP("ZBNT",$J)=^TMP(TMPLOC,$J)
"RTN","VBECA4",39,0)
 Q
"RTN","VBECA4",40,0)
 ;
"RTN","VBECA4",41,0)
 S LRDFN=$$LRDFN^LR7OR1(DFN) Q:'LRDFN
"RTN","VBECA4",42,0)
 S IDT=GMTS1-1 F  S IDT=$O(^LR(LRDFN,1.6,IDT)) Q:+IDT'>0!(IDT>GMTS2)  D
"RTN","VBECA4",43,0)
 . S TR=$G(^LR(LRDFN,1.6,IDT,0)) D SET
"RTN","VBECA4",44,0)
 S IDT=0 F  S IDT=$O(CNTR(IDT)) Q:+IDT'>0  D
"RTN","VBECA4",45,0)
 . S ^TMP(TMPLOC,$J,IDT)=9999999-IDT_U
"RTN","VBECA4",46,0)
 . S PN=0 F  S PN=$O(CNTR(IDT,PN)) Q:PN'>0  D
"RTN","VBECA4",47,0)
 . . S PRODUCT=$G(^LAB(66,+PN,0)),^TMP(TMPLOC,$J,$P(PRODUCT,U,2))=$P(PRODUCT,U)
"RTN","VBECA4",48,0)
 . . S ^TMP(TMPLOC,$J,IDT)=^TMP(TMPLOC,$J,IDT)_CNTR(IDT,PN)_"\"_$P(PRODUCT,U,2)_";"
"RTN","VBECA4",49,0)
 Q
"RTN","VBECA4",50,0)
 ; ------------------------------------------------------------------
"RTN","VBECA4",51,0)
 ;       Private Method Supports IA 3177
"RTN","VBECA4",52,0)
 ; ------------------------------------------------------------------
"RTN","VBECA4",53,0)
AVUNIT(DFN,TMPLOC,GMTS1,GMTS2,GMTSNDM) ; Get Available Units for Health Summary
"RTN","VBECA4",54,0)
 ; Input variables:
"RTN","VBECA4",55,0)
 ;   DFN = Internal number of patient
"RTN","VBECA4",56,0)
 ;   TMPLOC = Node in ^TMP to be used for output data array
"RTN","VBECA4",57,0)
 ;   GMTS1 = Inverse end date of search
"RTN","VBECA4",58,0)
 ;   GMTS2 = Inverse start date of search
"RTN","VBECA4",59,0)
 ;   GMTSNDM = Maximum number to be extracted
"RTN","VBECA4",60,0)
 ;
"RTN","VBECA4",61,0)
 ; Output is data array:
"RTN","VBECA4",62,0)
 ;   ^TMP(TMPLOC,$J,n)
"RTN","VBECA4",63,0)
 N LRDFN,IDT,UN,CNT,ABO,ADT,COMP,DTYP,EDT,EFLG,GMI,RH,UDIV,UID,ULOC,VOL,ARR
"RTN","VBECA4",64,0)
 Q:$G(TMPLOC)=""
"RTN","VBECA4",65,0)
 K ^TMP(TMPLOC,$J)
"RTN","VBECA4",66,0)
 Q:'$G(DFN)
"RTN","VBECA4",67,0)
 S:'$G(GMTS1) GMTS1=5555555 S:'$G(GMTS2) GMTS2=9999999 S:'$G(GMTSNDM) GMTSNDM=999
"RTN","VBECA4",68,0)
 ; VBECS Implementation
"RTN","VBECA4",69,0)
 D AVUNIT^VBECA1B("AVUNIT",DFN)
"RTN","VBECA4",70,0)
 Q:'$D(^TMP("AVUNIT",$J))
"RTN","VBECA4",71,0)
 S IDT=GMTS1-1+.0001 F  S IDT=$O(^TMP("AVUNIT",$J,IDT)) Q:+IDT'>0!(IDT>GMTS2)  D
"RTN","VBECA4",72,0)
 . S ^TMP(TMPLOC,$J,0)=^TMP("AVUNIT",$J,0)
"RTN","VBECA4",73,0)
 . S ^TMP(TMPLOC,$J,IDT)=^TMP("AVUNIT",$J,IDT)
"RTN","VBECA4",74,0)
 Q
"RTN","VBECA4",75,0)
 ;
"RTN","VBECA4",76,0)
 S LRDFN=$$LRDFN^LR7OR1(DFN) Q:'LRDFN
"RTN","VBECA4",77,0)
 I $L($P(^LR(LRDFN,0),U,5,6)) S ^TMP(TMPLOC,$J,0)=$P(^(0),U,5)_U_$P(^(0),U,6)
"RTN","VBECA4",78,0)
 S UN="",CNT=0 F  S UN=$O(^LRD(65,"AP",LRDFN,UN)) Q:UN=""!(CNT'<GMTSNDM)  D BASET
"RTN","VBECA4",79,0)
 ;K:'CNT ^TMP(TMPLOC,$J)
"RTN","VBECA4",80,0)
 Q
"RTN","VBECA4",81,0)
BASET ; Sets ^TMP with data elements
"RTN","VBECA4",82,0)
 S (EFLG,DTYP,ULOC)=""
"RTN","VBECA4",83,0)
 S UID=$P(^LRD(65,UN,0),U),EDT=$P(^(0),U,6),ABO=$P(^(0),U,7),RH=$P(^(0),U,8),VOL=$P(^(0),U,11),COMP=$P(^LAB(66,$P(^LRD(65,UN,0),U,4),0),U)
"RTN","VBECA4",84,0)
 S ADT=$P(^LRD(65,UN,2,LRDFN,0),U,2)
"RTN","VBECA4",85,0)
 S UDIV=$P(^LRD(65,UN,0),U,16),UDIV=$$NS^XUAF4(UDIV),UDIV=$P(UDIV,"^",1) ;Gets division unit is located at
"RTN","VBECA4",86,0)
 I $D(^LRD(65,UN,8)) D
"RTN","VBECA4",87,0)
 . S DIC=65,DIQ="DON",DIQ(0)="E",DR=8.3,DA=UN D EN^DIQ1
"RTN","VBECA4",88,0)
 . S:$D(DON) DTYP=DON(65,UN,8.3,"E") K DA,DIC,DIQ,DON,DR Q
"RTN","VBECA4",89,0)
 S GMI=$O(^LRD(65,UN,3,0)) I +GMI>0 D
"RTN","VBECA4",90,0)
 . S ULOC=$P($G(^LRD(65,UN,3,GMI,0)),U,4)
"RTN","VBECA4",91,0)
 ; If unit will expire w/in 48 hrs, flag with "*"; w/in 24 hrs, flag with "**"
"RTN","VBECA4",92,0)
 I EDT>DT S EFLG=$S(EDT-DT<2:"*",EDT-DT<1:"**",1:"")
"RTN","VBECA4",93,0)
 S IDT=9999999-ADT
"RTN","VBECA4",94,0)
 I $S(IDT<GMTS1:1,IDT>GMTS2:1,EDT<DT:1,1:0) Q
"RTN","VBECA4",95,0)
 S EDT=$TR($$FMTE^XLFDT(EDT,"5DZ"),"@"," ")
"RTN","VBECA4",96,0)
 F  Q:'$D(^TMP(TMPLOC,$J,IDT))  S IDT=IDT+.0001
"RTN","VBECA4",97,0)
 S ^TMP(TMPLOC,$J,IDT)=EFLG_U_EDT_U_UID_U_COMP_U_VOL_U_ABO_U_RH_U_DTYP_U_UDIV_U_ULOC
"RTN","VBECA4",98,0)
 S CNT=CNT+1
"RTN","VBECA4",99,0)
 Q
"RTN","VBECA4",100,0)
SET ; Sets CNTR w/appropriate data
"RTN","VBECA4",101,0)
 S TDT=9999999-IDT,ITDT=9999999-$P(TDT,".")
"RTN","VBECA4",102,0)
 S UNITS=+$P(TR,U,7) S:UNITS'>0 UNITS=1
"RTN","VBECA4",103,0)
 S CNTR(ITDT,+$P(TR,U,2))=+$G(CNTR(ITDT,+$P(TR,U,2)))+UNITS
"RTN","VBECA4",104,0)
 Q
"RTN","VBECA5A")
0^11^B2902941
"RTN","VBECA5A",1,0)
VBECA5A ;DALOI/BNT/RLM - BLOOD PRODUCT LOOKUP FOR SURGERY ;08/23/2001
"RTN","VBECA5A",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA5A",3,0)
 ;
"RTN","VBECA5A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA5A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA5A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA5A",7,0)
 ; 
"RTN","VBECA5A",8,0)
 ; Integration Agreements:
"RTN","VBECA5A",9,0)
 ; Reference to IX^DIC supported by DBIA #10006
"RTN","VBECA5A",10,0)
 ; Reference to LIST^DIC supported by DBIA #2051
"RTN","VBECA5A",11,0)
 ; Reference to ^DIR supported by DBIA #10026
"RTN","VBECA5A",12,0)
 ;
"RTN","VBECA5A",13,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",14,0)
 ;      Private method supports IA #3631
"RTN","VBECA5A",15,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",16,0)
ITRAN ; -- Input Transform lookup
"RTN","VBECA5A",17,0)
 G COMPCL^VBECA5B ;Old code below for reference
"RTN","VBECA5A",18,0)
 N DIC,DA,Y,Z,D,DIE,DO,DICR,Q,DR
"RTN","VBECA5A",19,0)
 S DIC="^LAB(66,",DIC(0)="EQSZ"
"RTN","VBECA5A",20,0)
 S DIC("S")="I $P(^(0),U,15)"
"RTN","VBECA5A",21,0)
 S D="B" D IX^DIC
"RTN","VBECA5A",22,0)
 K DIQUIET,VBDIC
"RTN","VBECA5A",23,0)
 I $D(DTOUT)!($D(DUOUT)) K X Q
"RTN","VBECA5A",24,0)
 S X=$G(Y(0,0)) K:X="" X
"RTN","VBECA5A",25,0)
 I $G(Y)'=-1 S VBECSEL=+Y
"RTN","VBECA5A",26,0)
 Q
"RTN","VBECA5A",27,0)
DIR ;I can't find a reference to this in the surgery code.
"RTN","VBECA5A",28,0)
 N DIC,DA,Y,Z,D,DIE,DO,DICR,DIR
"RTN","VBECA5A",29,0)
 S DIC="^LAB(66,",DIC(0)="EQ",D="B"
"RTN","VBECA5A",30,0)
 D IX^DIC
"RTN","VBECA5A",31,0)
 Q
"RTN","VBECA5A",32,0)
 ;
"RTN","VBECA5A",33,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",34,0)
 ;      Private method supports IA #3631
"RTN","VBECA5A",35,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",36,0)
OUT66 ;
"RTN","VBECA5A",37,0)
 G LIST^VBECA5B ;Old code below for reference
"RTN","VBECA5A",38,0)
 K ERROR,DIERR,VBECO
"RTN","VBECA5A",39,0)
 D LIST^DIC(66,,.01,,,,,,"I $P(^(0),U,15)",,"VBECO","ERROR")
"RTN","VBECA5A",40,0)
 S VBEC=0 F VBECL=1:1 S VBEC=$O(VBECO("DILIST",1,VBEC)) Q:'VBEC  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","VBECA5A",41,0)
  . W !,VBECO("DILIST",1,VBEC)
"RTN","VBECA5A",42,0)
  . I '(VBECL#5) S DIR(0)="E" D ^DIR
"RTN","VBECA5A",43,0)
 K VBEC,VBECL,VBECO
"RTN","VBECA5A",44,0)
 ;
"RTN","VBECA5A",45,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",46,0)
 ;      Private method supports IA #3631
"RTN","VBECA5A",47,0)
 ; ------------------------------------------------------
"RTN","VBECA5A",48,0)
LIST66 ;
"RTN","VBECA5A",49,0)
 G LIST^VBECA5B ;Old code below for reference
"RTN","VBECA5A",50,0)
 N D,DO,DIC,X
"RTN","VBECA5A",51,0)
 K ^TMP("DILIST",$J),VBECO
"RTN","VBECA5A",52,0)
 S X="?",DIC="^LAB(66,",DIC(0)="EQS",D="B"
"RTN","VBECA5A",53,0)
 S DIC("S")="I $P(^(0),U,15)"
"RTN","VBECA5A",54,0)
 D IX^DIC
"RTN","VBECA5A",55,0)
 K DIBTDH
"RTN","VBECA5A",56,0)
 Q
"RTN","VBECA5B")
0^12^B8762794
"RTN","VBECA5B",1,0)
VBECA5B ;HIOFO/BNT/RLM - VBECS COMPONENT CLASS LOOKUP FOR SURGERY ;11/24/2004
"RTN","VBECA5B",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA5B",3,0)
 ;
"RTN","VBECA5B",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA5B",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA5B",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA5B",7,0)
 ; 
"RTN","VBECA5B",8,0)
 ; Integration Agreements:
"RTN","VBECA5B",9,0)
 ; Reference DIBA 4622 for VBECS Blood Products
"RTN","VBECA5B",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA5B",11,0)
 ; Reference to CHKNAME^XQ5 supported by IA #????
"RTN","VBECA5B",12,0)
 ; 
"RTN","VBECA5B",13,0)
 QUIT
"RTN","VBECA5B",14,0)
 ;
"RTN","VBECA5B",15,0)
COMPCL  ; -- Retrieves XML from VBECS
"RTN","VBECA5B",16,0)
 Q:'$D(X)
"RTN","VBECA5B",17,0)
 K ^TMP("VBECA5B",$J),^TMP("VBECA5B1",$J) S VBECX=X
"RTN","VBECA5B",18,0)
 D INITV^VBECRPCC("VBECS Blood Products")
"RTN","VBECA5B",19,0)
 S VBECY="^TMP(""VBECA5B"",$J)",VBECPRMS("RESULTS")="^TMP(""VBECA5B1"",$J)"
"RTN","VBECA5B",20,0)
 S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA5B",21,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA5B",22,0)
 D EN(.ARR,VBECY)
"RTN","VBECA5B",23,0)
SEL ;
"RTN","VBECA5B",24,0)
 K C,DIR S X=VBECX
"RTN","VBECA5B",25,0)
 ;S DIR("A")="",DIR(0)="FA^2:40",DIR("?")="^D LIST^VBECA5B",DIR("??")="^D LIST^VBECA5B" D ^DIR I $D(DIRUT) S X="" Q  ;Uncomment for testing
"RTN","VBECA5B",26,0)
 I $D(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",X)) Q
"RTN","VBECA5B",27,0)
 S A=X F I=1:1 S A=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",A)) Q:$E(A,1,$L(X))'=X  D
"RTN","VBECA5B",28,0)
  . S B="" F  S B=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT","B",A,B)) Q:B=""  S C(I,A)=B
"RTN","VBECA5B",29,0)
 I I=2 S Y=$O(C(1,"")) W $E(Y,$L(X)+1,999) S X=Y Q
"RTN","VBECA5B",30,0)
 S (A,B)="" F  S A=$O(C(A)) Q:'A  W !?5,A,?9 F  S B=$O(C(A,B)) Q:B=""  W B
"RTN","VBECA5B",31,0)
SEL1 K DIR S DIR("A")="CHOOSE 1-"_(I-1)_":",DIR(0)="LA^1:"_(I-1),DIR("?")="^D LIST^VBECA5B",DIR("??")="^D LIST^VBECA5B"
"RTN","VBECA5B",32,0)
 D ^DIR I $D(DIRUT) S X="" Q
"RTN","VBECA5B",33,0)
 S X=$O(C(X,""))
"RTN","VBECA5B",34,0)
EXIT ;
"RTN","VBECA5B",35,0)
 K A,B,DIRUT,EVT,I,OPTION,VBECABHC,VBECLN,VBECMSBC,VBECPRMS,VBECRES
"RTN","VBECA5B",36,0)
 K VBECL,VBECSRC,VBECSTAT,VBECTRHC,VBECTSTC,VBECUNA,VBECUNC,VBECUND
"RTN","VBECA5B",37,0)
 K VBECUNS,VBECY,Y
"RTN","VBECA5B",38,0)
 Q
"RTN","VBECA5B",39,0)
LIST ;Lists components for ? or ??.  Also replaces LIST66 and OUT66
"RTN","VBECA5B",40,0)
 S A=""  F VBECL=1:1 S A=$O(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A)) Q:'A  D  I '(VBECL#5) S DIR(0)="E" D ^DIR Q:$D(DIRUT)
"RTN","VBECA5B",41,0)
  . W !,$P(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A),"^"),"   ",$P(^TMP("VBEC_BP_DATA",$J,"BLOOD PRODUCT",A),"^",2)
"RTN","VBECA5B",42,0)
 Q
"RTN","VBECA5B",43,0)
EN(ARR,DOC) ;
"RTN","VBECA5B",44,0)
 N CBK,CNT
"RTN","VBECA5B",45,0)
 S OPTION="",VBECRES=$NA(^TMP("VBEC_BP_DATA",$J))
"RTN","VBECA5B",46,0)
 K @VBECRES
"RTN","VBECA5B",47,0)
 S (VBECLN,VBECTRHC,VBECABHC,VBECTSTC,VBECMSBC,VBECSRC,VBECUNC,VBECUNS,VBECUNA,VBECUND)=0
"RTN","VBECA5B",48,0)
 D SET(.CBK)
"RTN","VBECA5B",49,0)
 D EN^MXMLPRSE(DOC,.CBK,.OPTION)
"RTN","VBECA5B",50,0)
 M ARR=@VBECRES
"RTN","VBECA5B",51,0)
 Q
"RTN","VBECA5B",52,0)
SET(CBK) ;
"RTN","VBECA5B",53,0)
 K CBK
"RTN","VBECA5B",54,0)
 S CBK("STARTELEMENT")="STELE^VBECA5B"
"RTN","VBECA5B",55,0)
 S CBK("ENDELEMENT")="ENELE^VBECA5B"
"RTN","VBECA5B",56,0)
 S CBK("CHARACTERS")="CHAR^VBECA5B"
"RTN","VBECA5B",57,0)
 Q
"RTN","VBECA5B",58,0)
 ;
"RTN","VBECA5B",59,0)
STELE(ELE,ATR) ; -- element start event handler
"RTN","VBECA5B",60,0)
 I ELE="ComponentClass" D
"RTN","VBECA5B",61,0)
  . S VBECLN=VBECLN+1,@VBECRES@("BLOOD PRODUCT",VBECLN)=$G(ATR("name"))_"^"_$G(ATR("shortName"))
"RTN","VBECA5B",62,0)
  . S @VBECRES@("BLOOD PRODUCT","B",$G(ATR("name")),VBECLN)=""
"RTN","VBECA5B",63,0)
  . S @VBECRES@("BLOOD PRODUCT","B",$G(ATR("shortName")),VBECLN)=""
"RTN","VBECA5B",64,0)
 Q
"RTN","VBECA5B",65,0)
ENELE(ELE) ; -- element end event handler
"RTN","VBECA5B",66,0)
 Q
"RTN","VBECA5B",67,0)
 ;
"RTN","VBECA5B",68,0)
CHAR(TEXT) ;
"RTN","VBECA5B",69,0)
 Q
"RTN","VBECA5B",70,0)
ZEOR ;VBECA5B
"RTN","VBECA6")
0^13^B10870720
"RTN","VBECA6",1,0)
VBECA6 ;DALOI/RLM - ORDER LOOKUP BY UID ;05/14/2003
"RTN","VBECA6",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA6",3,0)
 ;
"RTN","VBECA6",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA6",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA6",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA6",7,0)
 ; 
"RTN","VBECA6",8,0)
 ; Integration Agreements:
"RTN","VBECA6",9,0)
 ; Reference to $$FIND^DIC supported by IA #2051
"RTN","VBECA6",10,0)
 ; Reference to $$GET1^DIQ supported by IA #2052
"RTN","VBECA6",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECA6",12,0)
 ; Reference to CHKNAME^XQ5 supported by IA #????
"RTN","VBECA6",13,0)
 ;
"RTN","VBECA6",14,0)
ORDER(RESULTS,VBUID) ;
"RTN","VBECA6",15,0)
 ;Bring in UID and RESULTS parameters.
"RTN","VBECA6",16,0)
 ;UID will be the Universal Identifier for this order.
"RTN","VBECA6",17,0)
 ;RESULTS will be the array where the data will be stored.
"RTN","VBECA6",18,0)
 N TEST,ERROR
"RTN","VBECA6",19,0)
 S VBECCNT=0
"RTN","VBECA6",20,0)
 S RESULTS=$NA(^TMP("VBECS_UIDLOOKUP",$J))
"RTN","VBECA6",21,0)
 K @RESULTS
"RTN","VBECA6",22,0)
 D BEGROOT^VBECRPC("UIDLookup")
"RTN","VBECA6",23,0)
 I VBUID']"" D  Q
"RTN","VBECA6",24,0)
  . D ERROR^VBECRPC("No Specimen UID provided")
"RTN","VBECA6",25,0)
  . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECA6",26,0)
 ;
"RTN","VBECA6",27,0)
 D FIND^DIC(68,,.01,,"BLOOD BANK",,,,,"TEST","ERROR")
"RTN","VBECA6",28,0)
 S VBACC=TEST("DILIST",2,1)
"RTN","VBECA6",29,0)
 I '$D(^LRO(68,"C",VBUID,VBACC)) D  Q
"RTN","VBECA6",30,0)
  . D ERROR^VBECRPC("No Blood Bank accession associated with UID '"_VBUID_"'")
"RTN","VBECA6",31,0)
  . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECA6",32,0)
 ;
"RTN","VBECA6",33,0)
 S VBA=0 F  S VBA=$O(^LRO(68,"C",VBUID,VBACC,VBA)) Q:'VBA  D
"RTN","VBECA6",34,0)
  . S VBB=0 F  S VBB=$O(^LRO(68,"C",VBUID,VBACC,VBA,VBB)) Q:'VBB  D
"RTN","VBECA6",35,0)
  . . Q:$P($G(^LRO(68,VBACC,1,VBA,1,VBB,0)),"^",2)'=2  ;Add parameter for 67 if necessary
"RTN","VBECA6",36,0)
  . . S LRDFN=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,0)),"^"),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","VBECA6",37,0)
  . . S VBNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","VBECA6",38,0)
  . . ;Add DFN and Name
"RTN","VBECA6",39,0)
  . . D ADD^VBECRPC("<PatientName>"_$$CHARCHK^XOBVLIB(VBNAME)_"</PatientName>")
"RTN","VBECA6",40,0)
  . . D ADD^VBECRPC("<VistaPatientId>"_$$CHARCHK^XOBVLIB(DFN)_"</VistaPatientId>")
"RTN","VBECA6",41,0)
  . . ;Add Accession number
"RTN","VBECA6",42,0)
  . . S VBACCN=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.2)),"^")
"RTN","VBECA6",43,0)
  . . D ADD^VBECRPC("<SpecimenAccessionNumber>"_$$CHARCHK^XOBVLIB(VBACCN)_"</SpecimenAccessionNumber>")
"RTN","VBECA6",44,0)
  . . S VBORDN=+$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.1)),"^")
"RTN","VBECA6",45,0)
  . . ;Add Order Number
"RTN","VBECA6",46,0)
  . . D ADD^VBECRPC("<LabOrderNumber>"_$$CHARCHK^XOBVLIB(VBORDN)_"</LabOrderNumber>")
"RTN","VBECA6",47,0)
  . . ;Add UID from file 68
"RTN","VBECA6",48,0)
  . . S VBUID68=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.3)),"^")
"RTN","VBECA6",49,0)
  . . D ADD^VBECRPC("<SpecimenUID>"_$$CHARCHK^XOBVLIB(VBUID68)_"</SpecimenUID>")
"RTN","VBECA6",50,0)
  . . ;Add Tests
"RTN","VBECA6",51,0)
  . . D BEGROOT^VBECRPC("LabTests")
"RTN","VBECA6",52,0)
  . . S VBC=0 F  S VBC=$O(^LRO(68,VBACC,1,VBA,1,VBB,4,VBC)) Q:'VBC  D
"RTN","VBECA6",53,0)
  . . . S VBTEST=+$P($G(^LRO(68,VBACC,1,VBA,1,VBB,4,VBC,0)),"^")
"RTN","VBECA6",54,0)
  . . . S VBTNM=$$GET1^DIQ(60,VBTEST,.01)
"RTN","VBECA6",55,0)
  . . . ;Add Test Name
"RTN","VBECA6",56,0)
  . . . D BEGROOT^VBECRPC("LabTest")
"RTN","VBECA6",57,0)
  . . . D ADD^VBECRPC("<LabTestID>"_$$CHARCHK^XOBVLIB(VBTEST)_"</LabTestID>")
"RTN","VBECA6",58,0)
  . . . D ADD^VBECRPC("<LabTestName>"_$$CHARCHK^XOBVLIB(VBTNM)_"</LabTestName>")
"RTN","VBECA6",59,0)
  . . . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECA6",60,0)
  . . ;Close Tests
"RTN","VBECA6",61,0)
  . . D ENDROOT^VBECRPC("LabTests")
"RTN","VBECA6",62,0)
  D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECA6",63,0)
 K DFN,LRDFN,TEST,VBA,VBACC,VBB,VBC,VBECCNT,VBNAME,VBORDN,VBTEST,VBTNM,VBUID,VBUID68,VBACCN
"RTN","VBECA6",64,0)
 Q
"RTN","VBECA7")
0^14^B28140649
"RTN","VBECA7",1,0)
VBECA7 ;DALOI/RLM - Workload API ; 8/18/04 10:40am
"RTN","VBECA7",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA7",3,0)
 ;
"RTN","VBECA7",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7",7,0)
 ; 
"RTN","VBECA7",8,0)
 ; Integration Agreements:
"RTN","VBECA7",9,0)
 ;  VBECS workload capture supported by IA 4627
"RTN","VBECA7",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA7",11,0)
 ; Reference to UPDATE^DIE supported by IA #2053
"RTN","VBECA7",12,0)
 ; 
"RTN","VBECA7",13,0)
 QUIT
"RTN","VBECA7",14,0)
 ;
"RTN","VBECA7",15,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",16,0)
 ;      Private Method Supports IA 4767
"RTN","VBECA7",17,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",18,0)
WKLDCAP() ;
"RTN","VBECA7",19,0)
 S NEWWKLD=0
"RTN","VBECA7",20,0)
 D INITV^VBECRPCC("VBECS Workload")
"RTN","VBECA7",21,0)
 I +VBECPRMS("ERROR") S ARR("ERROR")=VBECPRMS("ERROR") Q
"RTN","VBECA7",22,0)
 S VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECA7",23,0)
 S VBECPRMS("PARAMS",1,"VALUE")="P"
"RTN","VBECA7",24,0)
 F I=1:0 D  Q:'NEWWKLD
"RTN","VBECA7",25,0)
 . S NEWWKLD=0
"RTN","VBECA7",26,0)
 . S VBECSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA7",27,0)
 . S VBECY=$NA(^TMP("VBECS_XML_RES",$J))
"RTN","VBECA7",28,0)
 . K @VBECY
"RTN","VBECA7",29,0)
 . D PARSE^VBECRPC1(.VBECPRMS,VBECY)
"RTN","VBECA7",30,0)
 . I $D(@VBECY@("ERROR")) S ARR("ERROR")="1^"_@VBECY@("ERROR") S NEWWKLD=0 Q
"RTN","VBECA7",31,0)
 . D PARSE
"RTN","VBECA7",32,0)
 ;
"RTN","VBECA7",33,0)
EXIT I $D(VBERR) S ARR("ERROR")="1^Errors encountered during parse"
"RTN","VBECA7",34,0)
 K @VBECY,ATR,CBK,DIERR,ELE,FDA,OPTION,TEXT,VBECPRMS
"RTN","VBECA7",35,0)
 K VBECRES,VBECSTAT,VBECY,VBERRA,VBERRB
"RTN","VBECA7",36,0)
 Q '(+$D(ARR)) ;This will return a 1 for a successful transfer and load
"RTN","VBECA7",37,0)
PARSE ;The callbacks defined here will allow the MXMLPRSE API to place
"RTN","VBECA7",38,0)
 ;the data directly into file 6002.01
"RTN","VBECA7",39,0)
 S CBK("STARTELEMENT")="STELE^VBECA7"
"RTN","VBECA7",40,0)
 S CBK("ENDELEMENT")="ENELE^VBECA7"
"RTN","VBECA7",41,0)
 S CBK("CHARACTERS")="CHAR^VBECA7"
"RTN","VBECA7",42,0)
 S OPTION=""
"RTN","VBECA7",43,0)
 D EN^MXMLPRSE(VBECY,.CBK,.OPTION)
"RTN","VBECA7",44,0)
 Q
"RTN","VBECA7",45,0)
STELE(ELE,ATR) ;File the data for each attribute in the FDA array
"RTN","VBECA7",46,0)
 ;for use by the UPDATE^DIE Database Server API.
"RTN","VBECA7",47,0)
 I $D(ATR) D
"RTN","VBECA7",48,0)
  . I ELE["Trans",$D(ATR("id")) S FDA(1,6002.01,"+1,",.01)=ATR("id"),NEWWKLD=1
"RTN","VBECA7",49,0)
  . I $D(ATR("type")) S FDA(1,6002.01,"+1,",1)=ATR("type")
"RTN","VBECA7",50,0)
  . I $D(ATR("division")) S FDA(1,6002.01,"+1,",2)=$TR(ATR("division")," ","")
"RTN","VBECA7",51,0)
  . I $D(ATR("accessionArea")) D
"RTN","VBECA7",52,0)
  . . S FDA(1,6002.01,"+1,",14)=ATR("accessionArea")
"RTN","VBECA7",53,0)
  . I $D(ATR("dateTime")) S FDA(1,6002.01,"+1,",3)=ATR("dateTime")
"RTN","VBECA7",54,0)
  . I $D(ATR("status")) S FDA(1,6002.01,"+1,",5)=ATR("status")
"RTN","VBECA7",55,0)
  . I $D(ATR("code")) D
"RTN","VBECA7",56,0)
  . . S FDA(1,6002.01,"+1,",6)=$$WKLDPTR(ATR("code"))
"RTN","VBECA7",57,0)
  . I $D(ATR("method")) D
"RTN","VBECA7",58,0)
  . . S FDA(1,6002.01,"+1,",7)=ATR("method")
"RTN","VBECA7",59,0)
  . I $D(ATR("multiplyFactor")) S FDA(1,6002.01,"+1,",8)=ATR("multiplyFactor")
"RTN","VBECA7",60,0)
  . I $D(ATR("dfn")) D
"RTN","VBECA7",61,0)
  . . I $D(^DPT(ATR("dfn"),-9)) S ATR("dfn")=+^DPT(ATR("dfn"),-9)
"RTN","VBECA7",62,0)
  . . I $D(^DPT(ATR("dfn"))) S FDA(1,6002.01,"+1,",9)=ATR("dfn")
"RTN","VBECA7",63,0)
  . I $D(ATR("duz")) D
"RTN","VBECA7",64,0)
  . . I $D(^VA(200,ATR("duz"))) S FDA(1,6002.01,"+1,",10)=ATR("duz")
"RTN","VBECA7",65,0)
  . I $D(ATR("accessionNumber")) S FDA(1,6002.01,"+1,",11)=ATR("accessionNumber")
"RTN","VBECA7",66,0)
  . I $D(ATR("testPerformed")) D
"RTN","VBECA7",67,0)
  . . I $D(^LAB(60,$$STRIP^XLFSTR(ATR("testPerformed")," "))) S FDA(1,6002.01,"+1,",12)=$$STRIP^XLFSTR(ATR("testPerformed")," ")
"RTN","VBECA7",68,0)
  . I ELE["Unit",$D(ATR("id")) S FDA(1,6002.01,"+1,",13)=ATR("id")
"RTN","VBECA7",69,0)
 Q
"RTN","VBECA7",70,0)
ENELE(ELE) ;Ignore the end of each element until the end of
"RTN","VBECA7",71,0)
 ;WorkloadTransactions is found.  File the data at this point.
"RTN","VBECA7",72,0)
 I ELE="WorkloadTransactions" D
"RTN","VBECA7",73,0)
  . Q:'NEWWKLD
"RTN","VBECA7",74,0)
  . D UPDATE^DIE("","FDA(1)",,"VBERR")
"RTN","VBECA7",75,0)
  . ;We'll remove the Writes and handle the errors in a different way
"RTN","VBECA7",76,0)
  . ;prior to release.
"RTN","VBECA7",77,0)
  . I $D(VBERR) D  ;W !,"An error has occurred with ID ",FDA(1,6002.01,"+1,",.01) D
"RTN","VBECA7",78,0)
  . . S (VBERRA,VBERRB,VBERRC)="" F  S VBERRA=$O(VBERR("DIERR",VBERRA)) Q:'VBERRA  F  S VBERRB=$O(VBERR("DIERR",VBERRA,"TEXT",VBERRB)) Q:'VBERRB  S VBERRC=VBERRC+1,XMTEXT(VBERRC)=VBERR("DIERR",VBERRA,"TEXT",VBERRB) K DIERR,VBERR
"RTN","VBECA7",79,0)
  . . S XMDUZ="VBECS Workload Event"
"RTN","VBECA7",80,0)
  . . S XMSUB="VBECS Workload Event"
"RTN","VBECA7",81,0)
  . . S XMTEXT="VBLN("
"RTN","VBECA7",82,0)
  . . S XMY("G.VBECS INTERFACE ADMIN")=""
"RTN","VBECA7",83,0)
  . . D ^XMD
"RTN","VBECA7",84,0)
  . . ;S (VBERRA,VBERRB)="" F  S VBERRA=$O(VBERR("DIERR",VBERRA)) Q:'VBERRA  F  S VBERRB=$O(VBERR("DIERR",VBERRA,"TEXT",VBERRB)) Q:'VBERRB  S ARR("ERROR")="1^Errors encountered during parse" W !,VBERR("DIERR",VBERRA,"TEXT",VBERRB) K DIERR,VBERR
"RTN","VBECA7",85,0)
 Q
"RTN","VBECA7",86,0)
CHAR(TEXT) ;This one isn't necessary, but we'll report an error
"RTN","VBECA7",87,0)
 ;if text is found.
"RTN","VBECA7",88,0)
 S VBERR("DIERR",999999,"TEXT",999999)="TEXT was returned unexpectedly"
"RTN","VBECA7",89,0)
 Q
"RTN","VBECA7",90,0)
ZEOR ;VBECA7
"RTN","VBECA7",91,0)
 ;This sets up test data, delete it before shipping the routine.
"RTN","VBECA7",92,0)
 ;ZL VBECA7 D ZEOR,PARSE ;To test
"RTN","VBECA7",93,0)
 S ^TMP("VBEC_XML_RES",$J,1)="<BloodBank><WorkloadTransactions><Transaction id=""FIRST"" type=""P"" division=""589"" dateTime=""3040614"" status=""S""><Workload code=""Acetone"" method=""ACUTE"" multiplyFactor=""1"" />"
"RTN","VBECA7",94,0)
 S ^TMP("VBEC_XML_RES",$J,2)="<Patient dfn=""262768"" /><VbecsUser duz=""7"" /><Lab accessionNumber=""789"" testPerformed=""ABG"" /><Unit id=""A1"" /></Transaction></WorkloadTransactions>"
"RTN","VBECA7",95,0)
 Q
"RTN","VBECA7",96,0)
 ;
"RTN","VBECA7",97,0)
WKLDPTR(CODE) ; Gets the pointer to the workload code file 64
"RTN","VBECA7",98,0)
 I $L($P(CODE,".",2))'=5 D
"RTN","VBECA7",99,0)
 . S VBSUFX=$P(CODE,".",2)
"RTN","VBECA7",100,0)
 . F I=1:1 S VBSUFX=VBSUFX_" " Q:$L(VBSUFX)=5
"RTN","VBECA7",101,0)
 . S $P(CODE,".",2)=VBSUFX
"RTN","VBECA7",102,0)
 Q $S($D(^LAM("C",CODE)):$O(^LAM("C",CODE,0)),1:0)
"RTN","VBECA7",103,0)
 ;
"RTN","VBECA7",104,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",105,0)
 ;      Private Method Supports IA 4767
"RTN","VBECA7",106,0)
 ; ----------------------------------------------------------
"RTN","VBECA7",107,0)
UPDTWKLD ; Update VBECS Workload
"RTN","VBECA7",108,0)
 D UPDTWKLD^VBECA7A
"RTN","VBECA7",109,0)
 Q
"RTN","VBECA7A")
0^15^B37404950
"RTN","VBECA7A",1,0)
VBECA7A ;HOIFO/SAE - Workload API ; 9/30/04 5:38pm
"RTN","VBECA7A",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA7A",3,0)
 ;
"RTN","VBECA7A",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7A",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7A",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7A",7,0)
 ; 
"RTN","VBECA7A",8,0)
 ; Integration Agreements:
"RTN","VBECA7A",9,0)
 ;  VBECS workload update supported by IA 4628
"RTN","VBECA7A",10,0)
 ; Reference to LIST^DIC supported by DBIA #2051
"RTN","VBECA7A",11,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECA7A",12,0)
 ; 
"RTN","VBECA7A",13,0)
 QUIT
"RTN","VBECA7A",14,0)
 ;
"RTN","VBECA7A",15,0)
UPDTWKLD ;  Update Workload Event Data
"RTN","VBECA7A",16,0)
 ;
"RTN","VBECA7A",17,0)
 ; This routine initializes Vistalink connection values (port,
"RTN","VBECA7A",18,0)
 ; URL, etc.), then builds a local array of selected entries
"RTN","VBECA7A",19,0)
 ; (those that have been successfully processed) from the
"RTN","VBECA7A",20,0)
 ; VistA VBECS WORKLOAD CAPTURE (#6002.01) file.
"RTN","VBECA7A",21,0)
 ; For each entry, listed in the local array, does the following:
"RTN","VBECA7A",22,0)
 ; - sends request, via VistaLink, to .Net VBECS VistALink listener
"RTN","VBECA7A",23,0)
 ; - receives response: VBECS processing status or ErrorText message
"RTN","VBECA7A",24,0)
 ; - If no errors (comm, VistaLink, etc.):
"RTN","VBECA7A",25,0)
 ;   - update VBECS WORKLOAD CAPTURE (#6002.01) file entry:
"RTN","VBECA7A",26,0)
 ;     - delete it (if it had been successfully processed in VBECS) or
"RTN","VBECA7A",27,0)
 ;     - update two fields in this entry (if there had been ErrorText)
"RTN","VBECA7A",28,0)
 ; - If comm, VistaLink, etc., errors:
"RTN","VBECA7A",29,0)
 ;   -  not update VistA
"RTN","VBECA7A",30,0)
 ;   -  save the non-specific error for inclusion in MailMan message.
"RTN","VBECA7A",31,0)
 ; - A MailMan message is transmitted to the G.VBECS INTERFACE ADMIN
"RTN","VBECA7A",32,0)
 ;      mail group:
"RTN","VBECA7A",33,0)
 ;   - identifying success or failure and other transaction info
"RTN","VBECA7A",34,0)
 ;
"RTN","VBECA7A",35,0)
 ; Input  - none
"RTN","VBECA7A",36,0)
 ; Output - no output variables.
"RTN","VBECA7A",37,0)
 ;          However, MailMan msg is sent for fatal errors.
"RTN","VBECA7A",38,0)
 ;
"RTN","VBECA7A",39,0)
 N VBY       ; array of file 6002.01 fields from selected entries
"RTN","VBECA7A",40,0)
 N VBIEN     ; IEN of entry to delete - used in ENELE subroutine
"RTN","VBECA7A",41,0)
 N VBRSLT    ; ^TMP global array of results returned from VBECS
"RTN","VBECA7A",42,0)
 N VBMT      ; array with VistA update status messages for mail text
"RTN","VBECA7A",43,0)
 N VBN       ; loop control variable for For loop
"RTN","VBECA7A",44,0)
 N VBECPRMS  ; local array for REQUEST and results
"RTN","VBECA7A",45,0)
 N VBIENSV   ; IEN to save and use to verify same as VBECS
"RTN","VBECA7A",46,0)
 N VBMTBLT   ; flag that signifies that VBMT has been built
"RTN","VBECA7A",47,0)
 ;
"RTN","VBECA7A",48,0)
 S VBN=0
"RTN","VBECA7A",49,0)
 S VBRSLT=$NA(^TMP("VBECS_XML_RES",$J)) K @VBRSLT
"RTN","VBECA7A",50,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J)) K @VBMT
"RTN","VBECA7A",51,0)
 ;
"RTN","VBECA7A",52,0)
 D INITV^VBECRPCC("VBECS Update Workload Event") ; init VL listener
"RTN","VBECA7A",53,0)
 D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",54,0)
 I $D(@VBMT@(" ERROR")) D  Q
"RTN","VBECA7A",55,0)
 . D BLDERMSG^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",56,0)
 . D SENDMSG(VBMT)
"RTN","VBECA7A",57,0)
 . D CLEANUP
"RTN","VBECA7A",58,0)
 ;
"RTN","VBECA7A",59,0)
 D GETVISTA(.VBY)
"RTN","VBECA7A",60,0)
 ;
"RTN","VBECA7A",61,0)
 ; step thru array. each node contains one entry from file 6002.01
"RTN","VBECA7A",62,0)
 F  S VBN=$O(VBY("DILIST",VBN)) Q:VBN']""  D  Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",63,0)
 . K @VBMT
"RTN","VBECA7A",64,0)
 . D BLDPARMS(.VBY,VBN,.VBECPRMS)
"RTN","VBECA7A",65,0)
 . D BLDRSLTS(.VBECPRMS)
"RTN","VBECA7A",66,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",67,0)
 . Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",68,0)
 . D BLDGLOB(.VBECPRMS,VBRSLT)
"RTN","VBECA7A",69,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",70,0)
 . Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",71,0)
 . D SETVISTA(VBRSLT)
"RTN","VBECA7A",72,0)
 . D CHKERROR^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",73,0)
 ;
"RTN","VBECA7A",74,0)
 I $D(@VBMT@(" ERROR")) D  Q
"RTN","VBECA7A",75,0)
 . D BLDERMSG^VBECA7A1(.VBECPRMS,VBRSLT,VBMT)
"RTN","VBECA7A",76,0)
 . D SENDMSG(VBMT)
"RTN","VBECA7A",77,0)
 ;
"RTN","VBECA7A",78,0)
 D CLEANUP
"RTN","VBECA7A",79,0)
 Q
"RTN","VBECA7A",80,0)
 ;
"RTN","VBECA7A",81,0)
GETVISTA(VBY) ; get file entries from VBECS WORKLOAD CAPTURE (#6002.01) file
"RTN","VBECA7A",82,0)
 ;
"RTN","VBECA7A",83,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",84,0)
 ;
"RTN","VBECA7A",85,0)
 ;
"RTN","VBECA7A",86,0)
 ; Input
"RTN","VBECA7A",87,0)
 ;   none
"RTN","VBECA7A",88,0)
 ; Output
"RTN","VBECA7A",89,0)
 ;   VBY - array, with each entries' fields packed into each node:
"RTN","VBECA7A",90,0)
 ;           IEN of entry is in first piece of the node value
"RTN","VBECA7A",91,0)
 ;           Fields shown in VBECFLDS variable
"RTN","VBECA7A",92,0)
 ;           List fields in same sequence as SDD Input section 4.1.4
"RTN","VBECA7A",93,0)
 ;
"RTN","VBECA7A",94,0)
 N VBECFLDS  ; fields to retrieve & pack in each VBY("DILIST") node
"RTN","VBECA7A",95,0)
 N VBECSCR   ; screen to filter in entries for two fields:
"RTN","VBECA7A",96,0)
 ;              PROCESSED DATE (#4) field - not null
"RTN","VBECA7A",97,0)
 ;              STATUS         (#5) field - (S)UCCESSFULLY PROCESSED
"RTN","VBECA7A",98,0)
 ;
"RTN","VBECA7A",99,0)
 S VBECFLDS="@;.01;5I;4I;20;99"
"RTN","VBECA7A",100,0)
 S VBECSCR("S")="I $P(^(0),U,5)'=""""&($P(^(0),U,6)=""S"")"
"RTN","VBECA7A",101,0)
 D LIST^DIC(6002.01,"",VBECFLDS,"P","","","","",.VBECSCR,"","VBY")
"RTN","VBECA7A",102,0)
 S VBLOOP=0 F  S VBLOOP=$O(VBY("DILIST",VBLOOP)) Q:'VBLOOP  S $P(VBY("DILIST",VBLOOP,0),"^",4)=$P(VBY("DILIST",VBLOOP,0),"^",4)_$E("0000000.000000",$L($P(VBY("DILIST",VBLOOP,0),"^",4)),13)
"RTN","VBECA7A",103,0)
 ;Added formatting to ensure a six digit time. RLM 4/2/2008
"RTN","VBECA7A",104,0)
 ; VBY("DILIST",4,0)=
"RTN","VBECA7A",105,0)
 ;    8^AC934682-43C2-4B7E-B63B-063C7BABCFAD^^JUL 28, 2004@23:23:49^
"RTN","VBECA7A",106,0)
 ;    some sample error text^pce encounter value
"RTN","VBECA7A",107,0)
 Q
"RTN","VBECA7A",108,0)
 ;
"RTN","VBECA7A",109,0)
BLDPARMS(VBY,VBN,VBECPRMS) ;  build VBECPRMS(PARAMS)
"RTN","VBECA7A",110,0)
 ;
"RTN","VBECA7A",111,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",112,0)
 ;
"RTN","VBECA7A",113,0)
 ; Build VBECPRMS("PARAMS" array for current VistA entry
"RTN","VBECA7A",114,0)
 ;
"RTN","VBECA7A",115,0)
 ; Input
"RTN","VBECA7A",116,0)
 ;   VBY       ; Array: VBECS WORKLOAD CAPTURE (#6002.01) file entries
"RTN","VBECA7A",117,0)
 ;   VBN       ; Node from VBY filtered collection of entries
"RTN","VBECA7A",118,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",119,0)
 ; Output
"RTN","VBECA7A",120,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",121,0)
 ;
"RTN","VBECA7A",122,0)
 N VBW       ; field value
"RTN","VBECA7A",123,0)
 N VBECPI    ; DILIST node piece and VBECPRMS node subscript
"RTN","VBECA7A",124,0)
 N VBNODVAL  ; value of node
"RTN","VBECA7A",125,0)
 N VBX       ; array node
"RTN","VBECA7A",126,0)
 ;
"RTN","VBECA7A",127,0)
 S VBNODVAL=VBY("DILIST",VBN,0)
"RTN","VBECA7A",128,0)
 S VBX="INITIAL IEN:  "_$P(VBNODVAL,U)_U_$P(VBNODVAL,U)
"RTN","VBECA7A",129,0)
 S @VBMT@("!INITIAL IEN")=VBX
"RTN","VBECA7A",130,0)
 S VBNODVAL=$E(VBNODVAL,$F(VBNODVAL,U),$L(VBNODVAL))  ; remove IEN
"RTN","VBECA7A",131,0)
 F VBECPI=1:1:5  D
"RTN","VBECA7A",132,0)
 . S VBW=$P(VBNODVAL,U,VBECPI)
"RTN","VBECA7A",133,0)
 . S VBECPRMS("PARAMS",VBECPI,"VALUE")=VBW
"RTN","VBECA7A",134,0)
 . S VBECPRMS("PARAMS",VBECPI,"TYPE")="STRING"
"RTN","VBECA7A",135,0)
 Q
"RTN","VBECA7A",136,0)
 ;
"RTN","VBECA7A",137,0)
BLDRSLTS(VBECPRMS) ;  put results in VBECPRMS("RESULTS") local array
"RTN","VBECA7A",138,0)
 ;
"RTN","VBECA7A",139,0)
 ; Input
"RTN","VBECA7A",140,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",141,0)
 ; Output
"RTN","VBECA7A",142,0)
 ;   VBECPRMS  ; root of target 'REQUEST' array to build
"RTN","VBECA7A",143,0)
 ;
"RTN","VBECA7A",144,0)
 N VBSTAT  ; temp variable
"RTN","VBECA7A",145,0)
 ;
"RTN","VBECA7A",146,0)
 S VBSTAT=$$EXECUTE^VBECRPCC(.VBECPRMS)
"RTN","VBECA7A",147,0)
 Q
"RTN","VBECA7A",148,0)
 ;
"RTN","VBECA7A",149,0)
BLDGLOB(VBECPRMS,VBRSLT) ;  put results from VBECS in ^TMP global
"RTN","VBECA7A",150,0)
 ;
"RTN","VBECA7A",151,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",152,0)
 ;
"RTN","VBECA7A",153,0)
 ;
"RTN","VBECA7A",154,0)
 ; Input
"RTN","VBECA7A",155,0)
 ;   VBECPRMS - array
"RTN","VBECA7A",156,0)
 ; Output
"RTN","VBECA7A",157,0)
 ;   VBRSLT   - $NA of ^TMP results global to build
"RTN","VBECA7A",158,0)
 ;
"RTN","VBECA7A",159,0)
 D PARSE^VBECRPC1(.VBECPRMS,VBRSLT)
"RTN","VBECA7A",160,0)
 Q
"RTN","VBECA7A",161,0)
 ;
"RTN","VBECA7A",162,0)
SETVISTA(VBRSLT) ;  Update Vista. MXMLPRSE invokes callback routines
"RTN","VBECA7A",163,0)
 ;
"RTN","VBECA7A",164,0)
 ; Input
"RTN","VBECA7A",165,0)
 ;   VBRSLT - name of results global
"RTN","VBECA7A",166,0)
 ;
"RTN","VBECA7A",167,0)
 N VBCBK  ; callback routines
"RTN","VBECA7A",168,0)
 ;
"RTN","VBECA7A",169,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A",170,0)
 ;
"RTN","VBECA7A",171,0)
 ; callbacks allow MXMLPRSE to put data in file 6002.01
"RTN","VBECA7A",172,0)
 S VBCBK("STARTELEMENT")="STELE^VBECA7A1"
"RTN","VBECA7A",173,0)
 S VBCBK("ENDELEMENT")="ENELE^VBECA7A1"
"RTN","VBECA7A",174,0)
 S VBCBK("CHARACTERS")="CHAR^VBECA7A1"
"RTN","VBECA7A",175,0)
 S OPTION=""
"RTN","VBECA7A",176,0)
 D EN^MXMLPRSE(VBRSLT,.VBCBK,.OPTION)
"RTN","VBECA7A",177,0)
 Q
"RTN","VBECA7A",178,0)
 ;
"RTN","VBECA7A",179,0)
SENDMSG(VBMT) ;  Function - send error message to mail group
"RTN","VBECA7A",180,0)
 ;
"RTN","VBECA7A",181,0)
 ; If unsuccessful deletion, send error text
"RTN","VBECA7A",182,0)
 ;
"RTN","VBECA7A",183,0)
 ; Input:
"RTN","VBECA7A",184,0)
 ;   VBMT array with info about transaction
"RTN","VBECA7A",185,0)
 ;
"RTN","VBECA7A",186,0)
 N VBT      ; node in array during $Q
"RTN","VBECA7A",187,0)
 N VBLN     ; message parameters
"RTN","VBECA7A",188,0)
 N VBGROUP  ; name of mail group to which message will be sent
"RTN","VBECA7A",189,0)
 N VBCNT    ; line count of VBLN array
"RTN","VBECA7A",190,0)
 N VBUSERNM ; IEN of user's entry in NEW PERSON file
"RTN","VBECA7A",191,0)
 N VBUSER   ; name of user running this program
"RTN","VBECA7A",192,0)
 N XMDUZ    ; sender
"RTN","VBECA7A",193,0)
 N XMSUB    ; message subject
"RTN","VBECA7A",194,0)
 N XMTEXT   ; message text array
"RTN","VBECA7A",195,0)
 N XMY      ; recipient array
"RTN","VBECA7A",196,0)
 N XMZ      ; returned message number
"RTN","VBECA7A",197,0)
 ;
"RTN","VBECA7A",198,0)
 I '$D(@VBMT@(" ERROR")) Q
"RTN","VBECA7A",199,0)
 ;. S VBX="SUCCESSFUL VBECS-VistA dialog"
"RTN","VBECA7A",200,0)
 ;. S @VBMT@("!SUCCESSFUL VBECS-VISTA DIALOG")=VBX
"RTN","VBECA7A",201,0)
 ;
"RTN","VBECA7A",202,0)
 S VBCNT=1
"RTN","VBECA7A",203,0)
 S VBT=$NA(@VBMT)
"RTN","VBECA7A",204,0)
 ;
"RTN","VBECA7A",205,0)
 ;S VBUSERNM=$$GET1^DIQ(200,DUZ,.01)
"RTN","VBECA7A",206,0)
 ;
"RTN","VBECA7A",207,0)
 S VBLN(VBCNT)="* * * VBECS Workload Event Error Notification * * *"
"RTN","VBECA7A",208,0)
 F  S VBT=$Q(@VBT) Q:VBT=""  Q:$NA(@VBT)'[$J  D
"RTN","VBECA7A",209,0)
 . S VBCNT=VBCNT+1
"RTN","VBECA7A",210,0)
 . S:VBT["DILIST" VBLN(VBCNT)=$G(@VBT)
"RTN","VBECA7A",211,0)
 . S:VBT'["DILIST" VBLN(VBCNT)=$P($G(@VBT),U)
"RTN","VBECA7A",212,0)
 . S VBLN(VBCNT)=$TR(VBLN(VBCNT),"""","'")
"RTN","VBECA7A",213,0)
 ;
"RTN","VBECA7A",214,0)
 S XMDUZ="VBECS Workload Event"
"RTN","VBECA7A",215,0)
 S XMSUB="VBECS Workload Event"
"RTN","VBECA7A",216,0)
 S XMTEXT="VBLN("
"RTN","VBECA7A",217,0)
 ; reactivate the following ling after testing:
"RTN","VBECA7A",218,0)
 S XMY("G.VBECS INTERFACE ADMIN")=""
"RTN","VBECA7A",219,0)
 ;S XMY(VBUSERNM)=""
"RTN","VBECA7A",220,0)
 D ^XMD
"RTN","VBECA7A",221,0)
 Q
"RTN","VBECA7A",222,0)
 ;
"RTN","VBECA7A",223,0)
CLEANUP K ATR,CBK,DIERR,ELE,VBFDA,OPTION,TEXT,VBECPRMS,@VBRSLT,@VBMT
"RTN","VBECA7A",224,0)
 Q
"RTN","VBECA7A1")
0^16^B69945388
"RTN","VBECA7A1",1,0)
VBECA7A1 ;HOIFO/SAE - Workload API ; 9/30/04 5:49pm
"RTN","VBECA7A1",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA7A1",3,0)
 ;
"RTN","VBECA7A1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7A1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7A1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7A1",7,0)
 ; 
"RTN","VBECA7A1",8,0)
 ; Integration Agreements:
"RTN","VBECA7A1",9,0)
 ; 
"RTN","VBECA7A1",10,0)
 QUIT
"RTN","VBECA7A1",11,0)
 ;
"RTN","VBECA7A1",12,0)
CHKERROR(VBECPRMS,VBRSLT,VBMT) ; check for error in results
"RTN","VBECA7A1",13,0)
 ;
"RTN","VBECA7A1",14,0)
 ; Input
"RTN","VBECA7A1",15,0)
 ;   VBECPRMS - array
"RTN","VBECA7A1",16,0)
 ;   VBRSLT   - name of ^TMP results global
"RTN","VBECA7A1",17,0)
 ;   VBMT     - name of message text global
"RTN","VBECA7A1",18,0)
 ; Output
"RTN","VBECA7A1",19,0)
 ;   VBMT     - message text global to build onto
"RTN","VBECA7A1",20,0)
 ;
"RTN","VBECA7A1",21,0)
 Q:$D(@VBMT@(" ERROR"))   ; an error has already been identified
"RTN","VBECA7A1",22,0)
 ;
"RTN","VBECA7A1",23,0)
 N VBX     ; temporary variable for holding text
"RTN","VBECA7A1",24,0)
 ;
"RTN","VBECA7A1",25,0)
 ; error where ^TMP results global is malformed where it looks like:
"RTN","VBECA7A1",26,0)
 ; ^TMP("VBECS_XML_RES",541084121,1) = ???<?xml version="1.0" ... etc.
"RTN","VBECA7A1",27,0)
 ; this error cannot be checked in STELE(not called in this situation)
"RTN","VBECA7A1",28,0)
 ;
"RTN","VBECA7A1",29,0)
 I $G(VBECPRMS("ERROR"))'=0 D  Q
"RTN","VBECA7A1",30,0)
 . S VBX=VBECPRMS("ERROR")_" returned by INITV~VBECRPCC"
"RTN","VBECA7A1",31,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",32,0)
 I $D(@VBRSLT@("ERROR")) D  Q
"RTN","VBECA7A1",33,0)
 . S VBX=@VBRSLT@("ERROR")_" from PARSE~VBECRPC1 results global"
"RTN","VBECA7A1",34,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",35,0)
 I $P($G(@VBRSLT@(1)),"<")?1."?" D  Q
"RTN","VBECA7A1",36,0)
 . S VBX="MALFORMED RESULTS GLOBAL from PARSE~VBECRPC1 results global"
"RTN","VBECA7A1",37,0)
 . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",38,0)
 Q
"RTN","VBECA7A1",39,0)
 ;
"RTN","VBECA7A1",40,0)
BLDERMSG(VBECPRMS,VBRSLT,VBMT) ;  build error message(s) into VBMT global
"RTN","VBECA7A1",41,0)
 ;
"RTN","VBECA7A1",42,0)
 N VBX       ; temporary variable for holding text
"RTN","VBECA7A1",43,0)
 N VBNM      ; indirect name of request/results array/global
"RTN","VBECA7A1",44,0)
 N VBNM2     ; copy of VBNM for different FOR loop
"RTN","VBECA7A1",45,0)
 N VBORIG    ; copy of VBNM with trailing parenthesis removed
"RTN","VBECA7A1",46,0)
 N VBDATA    ; data value from request/results node
"RTN","VBECA7A1",47,0)
 N VBLBL     ; label value comprised of $NA_VBDATA
"RTN","VBECA7A1",48,0)
 N VBSUB     ; subscript value for array node
"RTN","VBECA7A1",49,0)
 N VBOUT     ; full concatenated value of node to display
"RTN","VBECA7A1",50,0)
 N VBLCV     ; loop control variable for FOR loop
"RTN","VBECA7A1",51,0)
 N VBDONE    ; flag to signify 'done' with loop
"RTN","VBECA7A1",52,0)
 N VBBLANK   ; blank line of blank spaces
"RTN","VBECA7A1",53,0)
 N VBMAXDAT  ; maximum allowable length of array node data value
"RTN","VBECA7A1",54,0)
 N VBMAXLBL  ; maximum discovered length of array node label value
"RTN","VBECA7A1",55,0)
 N VBSPACES  ; calulated gap to format display to show data at column
"RTN","VBECA7A1",56,0)
 ;
"RTN","VBECA7A1",57,0)
 S VBX="Following are the request and results array(s)"
"RTN","VBECA7A1",58,0)
 I $D(@VBMT@("!INITIAL IEN"))#2=1 D
"RTN","VBECA7A1",59,0)
 . S VBX=VBX_" for IEN # "_$P(@VBMT@("!INITIAL IEN"),U,2)
"RTN","VBECA7A1",60,0)
 . S @VBMT@("#FOLLOWS MSG")=VBX
"RTN","VBECA7A1",61,0)
 S VBBLANK="                                                         "
"RTN","VBECA7A1",62,0)
 ;
"RTN","VBECA7A1",63,0)
 F VBNM="VBECPRMS",$NA(@VBRSLT) D
"RTN","VBECA7A1",64,0)
 . S VBNM2=VBNM,VBORIG=$P(VBNM,")")
"RTN","VBECA7A1",65,0)
 . S VBMAXLBL=1
"RTN","VBECA7A1",66,0)
 . F  S VBNM2=$Q(@VBNM2) Q:VBNM2=""  Q:$NA(@VBNM2)'[VBORIG  D
"RTN","VBECA7A1",67,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM2),"(",2)
"RTN","VBECA7A1",68,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM2),")")
"RTN","VBECA7A1",69,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECA7A1",70,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7A1",71,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECA7A1",72,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7A1",73,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7A1",74,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7A1",75,0)
 . . S VBMAXLBL=$S($L(VBLBL)>VBMAXLBL:$L(VBLBL),1:VBMAXLBL)
"RTN","VBECA7A1",76,0)
 . S VBMAXLBL=$S(VBMAXLBL>30:30,1:VBMAXLBL+3)
"RTN","VBECA7A1",77,0)
 . S VBMAXDAT=80-VBMAXLBL-2
"RTN","VBECA7A1",78,0)
 . S VBORIG=$P(VBNM,")")
"RTN","VBECA7A1",79,0)
 . F  S VBNM=$Q(@VBNM) Q:VBNM=""  Q:$NA(@VBNM)'[VBORIG  D
"RTN","VBECA7A1",80,0)
 . . S VBLCV=0
"RTN","VBECA7A1",81,0)
 . . S VBSUB=$NA(@VBNM),VBSUB=$TR(VBSUB,"""","")
"RTN","VBECA7A1",82,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM),"(",2)
"RTN","VBECA7A1",83,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM),")")
"RTN","VBECA7A1",84,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECA7A1",85,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7A1",86,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECA7A1",87,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7A1",88,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7A1",89,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7A1",90,0)
 . . S VBSPACES="",$P(VBSPACES," ",VBMAXLBL-$L(VBLBL))=""
"RTN","VBECA7A1",91,0)
 . . S VBSPACES=VBSPACES
"RTN","VBECA7A1",92,0)
 . . S VBDATA=$G(@VBNM)
"RTN","VBECA7A1",93,0)
 . . K VBDONE
"RTN","VBECA7A1",94,0)
 . . F VBLCV=0:1:25 D  Q:$D(VBDONE)
"RTN","VBECA7A1",95,0)
 . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7A1",96,0)
 . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",97,0)
 . . . S VBDATA(VBLCV)="  "_$E(VBDATA,1,VBMAXDAT)
"RTN","VBECA7A1",98,0)
 . . . S VBDATA=$E(VBDATA,VBMAXDAT+1,$L(VBDATA))
"RTN","VBECA7A1",99,0)
 . . . S:$L(VBDATA)'>0 VBDONE=1
"RTN","VBECA7A1",100,0)
 . . . I VBLCV<1 D  Q
"RTN","VBECA7A1",101,0)
 . . . . I $L(VBLBL)'>VBMAXLBL D  Q
"RTN","VBECA7A1",102,0)
 . . . . . S $P(VBSPACES," ",$L(VBLBL)-VBMAXLBL)=""
"RTN","VBECA7A1",103,0)
 . . . . . S VBLBL=VBLBL_VBSPACES
"RTN","VBECA7A1",104,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",105,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",106,0)
 . . . . I $L(VBLBL)>VBMAXLBL D
"RTN","VBECA7A1",107,0)
 . . . . . S @VBMT@(VBSUB)=VBLBL
"RTN","VBECA7A1",108,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",109,0)
 . . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7A1",110,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",111,0)
 . . . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7A1",112,0)
 . . . . . S VBLCV=VBLCV+1
"RTN","VBECA7A1",113,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7A1",114,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",115,0)
 . . . I VBLCV>0 D
"RTN","VBECA7A1",116,0)
 . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7A1",117,0)
 . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7A1",118,0)
 . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7A1",119,0)
 K VBDATA
"RTN","VBECA7A1",120,0)
 Q
"RTN","VBECA7A1",121,0)
 ;
"RTN","VBECA7A1",122,0)
STELE(ELE,ATR) ; Find attribute value
"RTN","VBECA7A1",123,0)
 ;
"RTN","VBECA7A1",124,0)
 ; Input
"RTN","VBECA7A1",125,0)
 ;   ELE - Element,         as defined in Document Type Descriptor
"RTN","VBECA7A1",126,0)
 ;   ATR - Attribute array, as defined in Document Type Descriptor
"RTN","VBECA7A1",127,0)
 ; Output
"RTN","VBECA7A1",128,0)
 ;   VBIEN    - Derived IEN of VBECS WORKLOAD CAPTURE (#6002.01) file
"RTN","VBECA7A1",129,0)
 ;   VBID     - TRANSACTION ID
"RTN","VBECA7A1",130,0)
 ;   VBIENERR - Error message from failure to $$FIND entry in file
"RTN","VBECA7A1",131,0)
 ;   VBMT     - Result array for mail text to be sent to mail group
"RTN","VBECA7A1",132,0)
 ;
"RTN","VBECA7A1",133,0)
 N VBIENI   ; initial IEN of this entry
"RTN","VBECA7A1",134,0)
 K VBIENERR
"RTN","VBECA7A1",135,0)
 N VBX      ; temporary variable for various uses
"RTN","VBECA7A1",136,0)
 N VBBEG    ; beginning character of text value in XML string
"RTN","VBECA7A1",137,0)
 N VBEND    ; ending character of text value in XML string
"RTN","VBECA7A1",138,0)
 N VBERMSG  ; error text message
"RTN","VBECA7A1",139,0)
 ;
"RTN","VBECA7A1",140,0)
 Q:$D(@VBMT@(" ERROR"))   ; an error has already been identified
"RTN","VBECA7A1",141,0)
 Q:$D(@VBRSLT@("ERROR"))  ; standard ^TMP "ERROR" - caught by CHKERROR
"RTN","VBECA7A1",142,0)
 ;
"RTN","VBECA7A1",143,0)
 I $L(ELE)'>0 D  Q
"RTN","VBECA7A1",144,0)
 . S VBX="ERROR: No ELEMENT received from parsing routine"
"RTN","VBECA7A1",145,0)
 . S @VBMT@(" ERROR")="ERROR:                "_VBX
"RTN","VBECA7A1",146,0)
 ;
"RTN","VBECA7A1",147,0)
 I ELE="WorkloadEvent" D
"RTN","VBECA7A1",148,0)
 . I '$D(ATR("successfullyUpdated")) D
"RTN","VBECA7A1",149,0)
 . . I $D(ATR("id")) D
"RTN","VBECA7A1",150,0)
 . . . S VBX=ATR("id")_U_ATR("id")
"RTN","VBECA7A1",151,0)
 . . . S @VBMT@("!TRANSACTION ID")="TRANSACTION ID:  "_VBX
"RTN","VBECA7A1",152,0)
 . . . S VBIEN=$$FIND1^DIC(6002.01,"","QX",ATR("id"),"","","VBIENERR")
"RTN","VBECA7A1",153,0)
 . . . I VBIEN?1.N,VBIEN>0 D
"RTN","VBECA7A1",154,0)
 . . . . S VBX=VBIEN_U_VBIEN
"RTN","VBECA7A1",155,0)
 . . . . S @VBMT@("!DERIVED IEN")="DERIVED IEN:  "_VBX
"RTN","VBECA7A1",156,0)
 . . . . S VBX="Successful FIND of VistA entry using VBECS txn ID"
"RTN","VBECA7A1",157,0)
 . . . . S @VBMT@("!SUCCESSFUL FIND")="SUCCESSFUL FIND:  "_VBX
"RTN","VBECA7A1",158,0)
 . . . I VBIEN=0!(VBIEN'?1.N.E)!$D(VBIENERR) D  Q
"RTN","VBECA7A1",159,0)
 . . . . S VBX="No VistA entry for Txn id "_ATR("id")_" was found"
"RTN","VBECA7A1",160,0)
 . . . . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",161,0)
 . . . I VBIEN=$P($G(@VBMT@("!INITIAL IEN")),U,2) D  Q
"RTN","VBECA7A1",162,0)
 . . . . S VBX="Successful match: initial lookup IEN and derived IEN"
"RTN","VBECA7A1",163,0)
 . . . . S @VBMT@("!IEN MATCH")="IENs match:  "_VBX
"RTN","VBECA7A1",164,0)
 . . . I VBIEN'=$P($G(@VBMT@("!INITIAL IEN")),U,2) D  Q
"RTN","VBECA7A1",165,0)
 . . . . S VBX="Mismatch between initial lookup IEN and derived IEN"
"RTN","VBECA7A1",166,0)
 . . . . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",167,0)
 . . I '$D(ATR("id")) D
"RTN","VBECA7A1",168,0)
 . . . S VBX="No Txn ID accompanied the successfullyUpdated attribute"
"RTN","VBECA7A1",169,0)
 . . . S @VBMT@(" ERROR")="ERROR:  "_VBX
"RTN","VBECA7A1",170,0)
 Q
"RTN","VBECA7A1",171,0)
 ;
"RTN","VBECA7A1",172,0)
ENELE(ELE) ; Ignore end of each element until end of WorkloadTransactions
"RTN","VBECA7A1",173,0)
 ;
"RTN","VBECA7A1",174,0)
 ; Input:
"RTN","VBECA7A1",175,0)
 ;   ELE  - element name from VBECS
"RTN","VBECA7A1",176,0)
 ;
"RTN","VBECA7A1",177,0)
 N VBMT      ; name of global containing mailman message text
"RTN","VBECA7A1",178,0)
 N VBTEXT    ; text from ErrorText element
"RTN","VBECA7A1",179,0)
 N VBTXNID   ; transaction id from @VBMT@("!TRANSACTION ID")
"RTN","VBECA7A1",180,0)
 N VBIEN     ; IEN of entry to update for failure edits
"RTN","VBECA7A1",181,0)
 N VBFDA     ; array for FILE^DIE
"RTN","VBECA7A1",182,0)
 N VBX       ; temporary variable for various uses
"RTN","VBECA7A1",183,0)
 N VBERRMSG  ; error message from FILE^DIE
"RTN","VBECA7A1",184,0)
 N VBLUERR   ; lookup error from $$FIND
"RTN","VBECA7A1",185,0)
 ;
"RTN","VBECA7A1",186,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J))
"RTN","VBECA7A1",187,0)
 ;
"RTN","VBECA7A1",188,0)
 Q:$D(@VBMT@(" ERROR"))  ; an error has already been identified
"RTN","VBECA7A1",189,0)
 ; Q:ELE'="WorkloadEvent"
"RTN","VBECA7A1",190,0)
 ;
"RTN","VBECA7A1",191,0)
 I '$D(@VBMT@("!VBECS ERRTXT")) D
"RTN","VBECA7A1",192,0)
 . I $D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",193,0)
 . . S DIK="^VBEC(6002.01,"
"RTN","VBECA7A1",194,0)
 . . S DA=$P(@VBMT@("!DERIVED IEN"),U,2)
"RTN","VBECA7A1",195,0)
 . . D ^DIK
"RTN","VBECA7A1",196,0)
 . . S VBX="VistA entry # "_DA_" was deleted."
"RTN","VBECA7A1",197,0)
 . . S @VBMT@("!VISTA UPDATE - ENTRY DELETED")=VBX
"RTN","VBECA7A1",198,0)
 . . K DA,DIC,DIK
"RTN","VBECA7A1",199,0)
 . I '$D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",200,0)
 . . S VBX="No VistA update attempted because no IEN was retrieved"
"RTN","VBECA7A1",201,0)
 . . S @VBMT@("!VISTA UPDATE - UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7A1",202,0)
 ;
"RTN","VBECA7A1",203,0)
 I $D(@VBMT@("!VBECS ERRTXT")) D
"RTN","VBECA7A1",204,0)
 . I $D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",205,0)
 . . S VBIEN=$P(@VBMT@("!DERIVED IEN"),U,2)
"RTN","VBECA7A1",206,0)
 . . Q:VBIEN'?1.N
"RTN","VBECA7A1",207,0)
 . . S VBFDA(6002.01,VBIEN_",",5)="E"
"RTN","VBECA7A1",208,0)
 . . S VBFDA(6002.01,VBIEN_",",20)=$P(@VBMT@("!VBECS ERRTXT"),": ",2)
"RTN","VBECA7A1",209,0)
 . . D FILE^DIE("","VBFDA","VBERRMSG")
"RTN","VBECA7A1",210,0)
 . . I '$D(VBERRMSG) D
"RTN","VBECA7A1",211,0)
 . . . S VBX="Entry # "_VBIEN_" was updated"
"RTN","VBECA7A1",212,0)
 . . . S @VBMT@("!VISTA UPDATE - ENTRY UPDATED")=VBX
"RTN","VBECA7A1",213,0)
 . . I $D(VBERRMSG) D
"RTN","VBECA7A1",214,0)
 . . . S VBX=$G(VBERRMSG("DIERR",1,"TEXT",1))
"RTN","VBECA7A1",215,0)
 . . . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7A1",216,0)
 . . . S @VBMT@("!VISTA UPDATE - UPDATE FAILED")=VBX
"RTN","VBECA7A1",217,0)
 . I '$D(@VBMT@("!DERIVED IEN")) D
"RTN","VBECA7A1",218,0)
 . . S VBX="No VistA update for ERROR TEXT attempted (no IEN)"
"RTN","VBECA7A1",219,0)
 . . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7A1",220,0)
 . . S @VBMT@("!VISTA UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7A1",221,0)
 Q
"RTN","VBECA7A1",222,0)
 ;
"RTN","VBECA7A1",223,0)
CHAR(TEXT) ;
"RTN","VBECA7A1",224,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7A1",225,0)
 ;
"RTN","VBECA7A1",226,0)
 I XML["ErrorText" D
"RTN","VBECA7A1",227,0)
 . S @VBMT@("!VBECS ERRTXT")="VBECS ErrorText message: "_TEXT
"RTN","VBECA7A1",228,0)
 Q
"RTN","VBECA7B")
0^17^B64114607
"RTN","VBECA7B",1,0)
VBECA7B ;HOIFO/SAE - Workload API ; 9/10/04 1:46pm
"RTN","VBECA7B",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECA7B",3,0)
 ;
"RTN","VBECA7B",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECA7B",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECA7B",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECA7B",7,0)
 ; 
"RTN","VBECA7B",8,0)
 ; Integration Agreements:
"RTN","VBECA7B",9,0)
 ; 
"RTN","VBECA7B",10,0)
 QUIT
"RTN","VBECA7B",11,0)
 ;
"RTN","VBECA7B",12,0)
CHKERROR(VBECPRMS,VBRSLT,VBFATAL,VBMT) ; check for error in results
"RTN","VBECA7B",13,0)
 W !,"CHKERROR:" ;
"RTN","VBECA7B",14,0)
 ;
"RTN","VBECA7B",15,0)
 ; Input
"RTN","VBECA7B",16,0)
 ;   VBECPRMS - array
"RTN","VBECA7B",17,0)
 ;   VBRSLT   - name of ^TMP results global
"RTN","VBECA7B",18,0)
 ;   VBFATAL  - fatal error flag
"RTN","VBECA7B",19,0)
 ;   VBMT     - name of message text global
"RTN","VBECA7B",20,0)
 ; Output
"RTN","VBECA7B",21,0)
 ;   VBFATAL  - flag to set to true if error has occurred
"RTN","VBECA7B",22,0)
 ;   VBMT     - message text global to build onto
"RTN","VBECA7B",23,0)
 ;
"RTN","VBECA7B",24,0)
 N VBX     ; temporary variable for holding text
"RTN","VBECA7B",25,0)
 ;
"RTN","VBECA7B",26,0)
 ; error where ^TMP results global is malformed where it looks like:
"RTN","VBECA7B",27,0)
 ; ^TMP("VBECS_XML_RES",541084121,1) = ???<?xml version="1.0" ... etc.
"RTN","VBECA7B",28,0)
 ; this error cannot be checked in STELE(not called in this situation)
"RTN","VBECA7B",29,0)
 I '$D(@VBMT@(" ERROR")) D
"RTN","VBECA7B",30,0)
 . I $G(VBECPRMS("ERROR"))'=0 D  Q
"RTN","VBECA7B",31,0)
 . . S VBFATAL=1
"RTN","VBECA7B",32,0)
 . . S VBX=" returned by INITV~VBECRPCC"
"RTN","VBECA7B",33,0)
 . . S @VBMT@(" ERROR")="ERROR: "_VBECPRMS("ERROR")_VBX
"RTN","VBECA7B",34,0)
 . I $P($G(@VBRSLT@(1)),"<")?1."?" D
"RTN","VBECA7B",35,0)
 . . S VBFATAL=1
"RTN","VBECA7B",36,0)
 . . S VBX=" returned by PARSE~VBECRPC1"
"RTN","VBECA7B",37,0)
 . . S @VBMT@(" ERROR")="ERROR: MALFORMED RESULTS GLOBAL"_VBX
"RTN","VBECA7B",38,0)
 . I $D(@VBRSLT@("ERROR")) D  Q
"RTN","VBECA7B",39,0)
 . . S VBFATAL=1
"RTN","VBECA7B",40,0)
 . . S VBX=" returned by EN^MXMLPRSE parser - caught by callback"
"RTN","VBECA7B",41,0)
 . . S @VBMT@(" ERROR")="ERROR: "_@VBRSLT@("ERROR")_VBX
"RTN","VBECA7B",42,0)
 Q
"RTN","VBECA7B",43,0)
 ;
"RTN","VBECA7B",44,0)
BLDERMSG(VBECPRMS,VBRSLT,VBMT) ;
"RTN","VBECA7B",45,0)
 W !,"BLDERMSG:"
"RTN","VBECA7B",46,0)
 ;
"RTN","VBECA7B",47,0)
 N VBX       ; temporary variable for holding text
"RTN","VBECA7B",48,0)
 N VBNM      ; indirect name of request/results array/global
"RTN","VBECA7B",49,0)
 N VBNM2     ; copy of VBNM for different FOR loop
"RTN","VBECA7B",50,0)
 N VBNMORIG  ; copy of VBNM with trailing parenthesis removed
"RTN","VBECA7B",51,0)
 N VBDATA    ; data value from request/results node
"RTN","VBECA7B",52,0)
 N VBLBL     ; label value comprised of $NA_VBDATA
"RTN","VBECA7B",53,0)
 N VBSUB     ; subscript value for array node
"RTN","VBECA7B",54,0)
 N VBOUT     ; full concatenated value of node to display
"RTN","VBECA7B",55,0)
 N VBLCV     ; loop control variable for FOR loop
"RTN","VBECA7B",56,0)
 N VBDONE    ; flag to signify 'done' with loop
"RTN","VBECA7B",57,0)
 N VBBLANK   ; blank line of blank spaces
"RTN","VBECA7B",58,0)
 N VBMAXDAT  ; maximum allowable length of array node data value
"RTN","VBECA7B",59,0)
 N VBMAXLBL  ; maximum discovered length of array node label value
"RTN","VBECA7B",60,0)
 N VBSPACES  ; calulated gap to format display to show data at column
"RTN","VBECA7B",61,0)
 ;
"RTN","VBECA7B",62,0)
 S VBX="Following are the request and results array(s):"
"RTN","VBECA7B",63,0)
 S @VBMT@(" FOLLOWS MSG")=VBX
"RTN","VBECA7B",64,0)
 S VBBLANK="                                                         "
"RTN","VBECA7B",65,0)
 ;
"RTN","VBECA7B",66,0)
 F VBNM="VBECPRMS",$NA(@VBRSLT) D
"RTN","VBECA7B",67,0)
 . S VBNM2=VBNM,VBNMORIG=$P(VBNM,")")
"RTN","VBECA7B",68,0)
 . S VBMAXLBL=1
"RTN","VBECA7B",69,0)
 . F  S VBNM2=$Q(@VBNM2) Q:VBNM2=""  Q:$NA(@VBNM2)'[VBNMORIG  D
"RTN","VBECA7B",70,0)
 . . S:VBNMORIG="VBECPRMS" VBLBL=$P($NA(@VBNM2),"(",2)
"RTN","VBECA7B",71,0)
 . . S:VBNMORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM2),")")
"RTN","VBECA7B",72,0)
 . . I VBNMORIG["VBECPRMS" D
"RTN","VBECA7B",73,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7B",74,0)
 . . I VBNMORIG'["VBECPRMS" D
"RTN","VBECA7B",75,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7B",76,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7B",77,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7B",78,0)
 . . S VBMAXLBL=$S($L(VBLBL)>VBMAXLBL:$L(VBLBL),1:VBMAXLBL)
"RTN","VBECA7B",79,0)
 . S VBMAXLBL=$S(VBMAXLBL>30:30,1:VBMAXLBL+3)
"RTN","VBECA7B",80,0)
 . S VBMAXDAT=80-VBMAXLBL-2
"RTN","VBECA7B",81,0)
 . S VBNMORIG=$P(VBNM,")")
"RTN","VBECA7B",82,0)
 . F  S VBNM=$Q(@VBNM) Q:VBNM=""  Q:$NA(@VBNM)'[VBNMORIG  D
"RTN","VBECA7B",83,0)
 . . S VBLCV=0
"RTN","VBECA7B",84,0)
 . . S VBSUB=$NA(@VBNM),VBSUB=$TR(VBSUB,"""","")
"RTN","VBECA7B",85,0)
 . . S:VBNMORIG="VBECPRMS" VBLBL=$P($NA(@VBNM),"(",2)
"RTN","VBECA7B",86,0)
 . . S:VBNMORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM),")")
"RTN","VBECA7B",87,0)
 . . I VBNMORIG["VBECPRMS" D
"RTN","VBECA7B",88,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECA7B",89,0)
 . . I VBNMORIG'["VBECPRMS" D
"RTN","VBECA7B",90,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECA7B",91,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECA7B",92,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECA7B",93,0)
 . . S VBSPACES="",$P(VBSPACES," ",VBMAXLBL-$L(VBLBL))=""
"RTN","VBECA7B",94,0)
 . . S VBSPACES=VBSPACES
"RTN","VBECA7B",95,0)
 . . S VBDATA=$G(@VBNM)
"RTN","VBECA7B",96,0)
 . . K VBDONE
"RTN","VBECA7B",97,0)
 . . F VBLCV=0:1:25 D  Q:$D(VBDONE)
"RTN","VBECA7B",98,0)
 . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7B",99,0)
 . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7B",100,0)
 . . . S VBDATA(VBLCV)="  "_$E(VBDATA,1,VBMAXDAT)
"RTN","VBECA7B",101,0)
 . . . S VBDATA=$E(VBDATA,VBMAXDAT+1,$L(VBDATA))
"RTN","VBECA7B",102,0)
 . . . S:$L(VBDATA)'>0 VBDONE=1
"RTN","VBECA7B",103,0)
 . . . ;
"RTN","VBECA7B",104,0)
 . . . I VBLCV<1 D  Q
"RTN","VBECA7B",105,0)
 . . . . I $L(VBLBL)'>VBMAXLBL D  Q
"RTN","VBECA7B",106,0)
 . . . . . S $P(VBSPACES," ",$L(VBLBL)-VBMAXLBL)=""
"RTN","VBECA7B",107,0)
 . . . . . S VBLBL=VBLBL_VBSPACES
"RTN","VBECA7B",108,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7B",109,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7B",110,0)
 . . . . I $L(VBLBL)>VBMAXLBL D
"RTN","VBECA7B",111,0)
 . . . . . S @VBMT@(VBSUB)=VBLBL
"RTN","VBECA7B",112,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7B",113,0)
 . . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7B",114,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7B",115,0)
 . . . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECA7B",116,0)
 . . . . . S VBLCV=VBLCV+1
"RTN","VBECA7B",117,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECA7B",118,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7B",119,0)
 . . . ;
"RTN","VBECA7B",120,0)
 . . . I VBLCV>0 D
"RTN","VBECA7B",121,0)
 . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECA7B",122,0)
 . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECA7B",123,0)
 . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECA7B",124,0)
 K VBDATA
"RTN","VBECA7B",125,0)
 Q
"RTN","VBECA7B",126,0)
 ;
"RTN","VBECA7B",127,0)
STELE(ELE,ATR) ; Find attribute value
"RTN","VBECA7B",128,0)
 W !,"STELE:"
"RTN","VBECA7B",129,0)
 ;
"RTN","VBECA7B",130,0)
 ; Input
"RTN","VBECA7B",131,0)
 ;   ELE - Element,         as defined in Document Type Descriptor
"RTN","VBECA7B",132,0)
 ;   ATR - Attribute array, as defined in Document Type Descriptor
"RTN","VBECA7B",133,0)
 ; Output
"RTN","VBECA7B",134,0)
 ;   VBIEN    - IEN of VBECS WORKLOAD CAPTURE (#6002.01) file
"RTN","VBECA7B",135,0)
 ;   VBID     - TRANSACTION ID
"RTN","VBECA7B",136,0)
 ;   VBFATAL  - VBECS error msg.  If undefined, no error occurred
"RTN","VBECA7B",137,0)
 ;   VBIENERR - Error message from failure to $$FIND entry in file
"RTN","VBECA7B",138,0)
 ;   VBMT     - Result array for mail text to be sent to mail group
"RTN","VBECA7B",139,0)
 ;
"RTN","VBECA7B",140,0)
 K VBIENERR
"RTN","VBECA7B",141,0)
 N VBX      ; temporary variable for various uses
"RTN","VBECA7B",142,0)
 N VBBEG    ; beginning character of text value in XML string
"RTN","VBECA7B",143,0)
 N VBEND    ; ending character of text value in XML string
"RTN","VBECA7B",144,0)
 N VBERMSG  ; error text message
"RTN","VBECA7B",145,0)
 ;
"RTN","VBECA7B",146,0)
 Q:$D(@VBMT@(" ERROR"))   ; an error has already been identified
"RTN","VBECA7B",147,0)
 Q:$D(@VBRSLT@("ERROR"))  ; standard ^TMP "ERROR" - caught by CHKERROR
"RTN","VBECA7B",148,0)
 ;
"RTN","VBECA7B",149,0)
 ;
"RTN","VBECA7B",150,0)
 I $L(ELE)'>0 D  Q
"RTN","VBECA7B",151,0)
 . S VBFATAL=1
"RTN","VBECA7B",152,0)
 . S VBX="ERROR: No ELEMENT received from parsing routine"
"RTN","VBECA7B",153,0)
 . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7B",154,0)
 ;
"RTN","VBECA7B",155,0)
 I ELE["WorkloadEvent" D
"RTN","VBECA7B",156,0)
 . I $D(ATR("successfullyUpdated")) D
"RTN","VBECA7B",157,0)
 . . I $D(ATR("id")) D
"RTN","VBECA7B",158,0)
 . . . S VBX="TRANSACTION ID: "_ATR("id")_U_ATR("id")
"RTN","VBECA7B",159,0)
 . . . S @VBMT@("TRANSACTION ID")=VBX
"RTN","VBECA7B",160,0)
 . . . S VBIEN=$$FIND1^DIC(6002.01,"","QX",ATR("id"),"","","VBIENERR")
"RTN","VBECA7B",161,0)
 . . . I VBIEN?1.N,VBIEN>0 D
"RTN","VBECA7B",162,0)
 . . . . S @VBMT@("VISTA IEN")="DERIVED VISTA IEN: "_VBIEN_U_VBIEN
"RTN","VBECA7B",163,0)
 . . I '$D(ATR("id")) D
"RTN","VBECA7B",164,0)
 . . . S VBFATAL=1
"RTN","VBECA7B",165,0)
 . . . S VBX="No Txn ID accompanied the successfullyUpdated attribute"
"RTN","VBECA7B",166,0)
 . . . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7B",167,0)
 . . . S @VBMT@("VISTA UPDATE NOT ATTEMPTED - NO ID")=VBX
"RTN","VBECA7B",168,0)
 ;
"RTN","VBECA7B",169,0)
 Q
"RTN","VBECA7B",170,0)
 ;
"RTN","VBECA7B",171,0)
ENELE(ELE) ; Ignore end of each element until end of WorkloadTransactions
"RTN","VBECA7B",172,0)
 W !,"ENELE:"
"RTN","VBECA7B",173,0)
 ;
"RTN","VBECA7B",174,0)
 ; Input:
"RTN","VBECA7B",175,0)
 ;   ELE  - element name from VBECS
"RTN","VBECA7B",176,0)
 ;
"RTN","VBECA7B",177,0)
 N VBMT      ; name of global containing mailman message text
"RTN","VBECA7B",178,0)
 N VBTEXT    ; text from ErrorText element
"RTN","VBECA7B",179,0)
 N VBTXNID   ; transaction id from @VBMT@("TRANSACTION ID")
"RTN","VBECA7B",180,0)
 N VBIEN     ; IEN of entry to update for failure edits
"RTN","VBECA7B",181,0)
 N VBFDA     ; array for FILE^DIE
"RTN","VBECA7B",182,0)
 N VBX       ; temporary variable for various uses
"RTN","VBECA7B",183,0)
 N VBERRMSG  ; error message from FILE^DIE
"RTN","VBECA7B",184,0)
 N VBLUERR   ; lookup error from $$FIND
"RTN","VBECA7B",185,0)
 ;
"RTN","VBECA7B",186,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J))
"RTN","VBECA7B",187,0)
 ;
"RTN","VBECA7B",188,0)
 Q:$D(@VBMT@(" ERROR"))  ; an error has already been identified
"RTN","VBECA7B",189,0)
 ;
"RTN","VBECA7B",190,0)
 Q:ELE'="WorkloadTransactions"
"RTN","VBECA7B",191,0)
 ;
"RTN","VBECA7B",192,0)
 I $D(@VBMT@("SUCCESS FROM VBECS")) D
"RTN","VBECA7B",193,0)
 . I $D(@VBMT@("VISTA IEN")) D
"RTN","VBECA7B",194,0)
 . . S DIK="^VBEC(6002.01,"
"RTN","VBECA7B",195,0)
 . . S DA=$P(@VBMT@("VISTA IEN"),U,2)
"RTN","VBECA7B",196,0)
 . . D ^DIK K DA,DIC,DIK
"RTN","VBECA7B",197,0)
 . . S VBX="VistA entry # "_DA_" was deleted."
"RTN","VBECA7B",198,0)
 . . S @VBMT@("VISTA UPDATE - ENTRY DELETED")=VBX
"RTN","VBECA7B",199,0)
 . I '$D(@VBMT@("VISTA IEN")) D
"RTN","VBECA7B",200,0)
 . . S VBX="No VistA update attempted because no IEN was retreived"
"RTN","VBECA7B",201,0)
 . . S @VBMT@("VISTA UPDATE - UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7B",202,0)
 ;
"RTN","VBECA7B",203,0)
 I $D(@VBMT@("VBECS ERROR TEXT")) D
"RTN","VBECA7B",204,0)
 . I $D(@VBMT@("VISTA IEN")) D
"RTN","VBECA7B",205,0)
 . . S VBIEN=$P(@VBMT@("VISTA IEN"),U,2)
"RTN","VBECA7B",206,0)
 . . Q:VBIEN'?1.N
"RTN","VBECA7B",207,0)
 . . S VBFDA(6002.01,VBIEN_",",5)="E"
"RTN","VBECA7B",208,0)
 . . S VBFDA(6002.01,VBIEN_",",20)=@VBMT@("VBECS ERROR TEXT")
"RTN","VBECA7B",209,0)
 . . D FILE^DIE("","VBFDA","VBERRMSG")
"RTN","VBECA7B",210,0)
 . . I '$D(VBERRMSG) D
"RTN","VBECA7B",211,0)
 . . . S VBX="Entry # "_VBIEN_" was updated"
"RTN","VBECA7B",212,0)
 . . . S @VBMT@("VISTA UPDATE - ENTRY UPDATED")=VBX
"RTN","VBECA7B",213,0)
 . . I $D(VBERRMSG) D
"RTN","VBECA7B",214,0)
 . . . S VBFATAL=1
"RTN","VBECA7B",215,0)
 . . . S VBX=$G(VBERRMSG("DIERR",1,"TEXT",1))
"RTN","VBECA7B",216,0)
 . . . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7B",217,0)
 . . . S @VBMT@("VISTA UPDATE - UPDATE FAILED")=VBX
"RTN","VBECA7B",218,0)
 . I '$D(@VBMT@("VISTA IEN")) D
"RTN","VBECA7B",219,0)
 . . S VBFATAL=1
"RTN","VBECA7B",220,0)
 . . S VBX="No VistA update attempted (no IEN)"
"RTN","VBECA7B",221,0)
 . . S @VBMT@(" ERROR")="ERROR: "_VBX
"RTN","VBECA7B",222,0)
 . . S @VBMT@("VISTA UPDATE NOT ATTEMPTED")=VBX
"RTN","VBECA7B",223,0)
 Q
"RTN","VBECA7B",224,0)
 ;
"RTN","VBECA7B",225,0)
CHAR(TEXT) ;
"RTN","VBECA7B",226,0)
 Q:$D(@VBMT@(" ERROR"))
"RTN","VBECA7B",227,0)
 ;
"RTN","VBECA7B",228,0)
 I XML["ErrorText" D
"RTN","VBECA7B",229,0)
 . S @VBMT@("VBECS ERROR TEXT")="VBECS 'ErrorText' message: "_TEXT
"RTN","VBECA7B",230,0)
 Q
"RTN","VBECA7B",231,0)
 ;
"RTN","VBECENV")
0^72^B11886954
"RTN","VBECENV",1,0)
VBECENV ;HOIFO/SAE - VBECS ENVIRONMENT CHECKER; 10/1/2005 ; 10/27/05 10:31am
"RTN","VBECENV",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECENV",3,0)
 ;
"RTN","VBECENV",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECENV",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECENV",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECENV",7,0)
 ;
"RTN","VBECENV",8,0)
 ; Integration Agreements:
"RTN","VBECENV",9,0)
 ;   References to routine XPDUTL supported by IA 10141
"RTN","VBECENV",10,0)
 ;
"RTN","VBECENV",11,0)
CHKENV ; Main entry point for environment checker
"RTN","VBECENV",12,0)
 ;Input : All variables set by KIDS
"RTN","VBECENV",13,0)
 ;Output: Variables required by KIDS to denote success or failure
"RTN","VBECENV",14,0)
 ;         of environment check (XPDQUIT and XPDABORT)
"RTN","VBECENV",15,0)
 D HDR       ; message to user that environment check is starting
"RTN","VBECENV",16,0)
 D PACKAGE   ; check for existence of required packages
"RTN","VBECENV",17,0)
 D PATCH     ; check for existence of required patches
"RTN","VBECENV",18,0)
 D ROUTINE   ; check for existence of required routines
"RTN","VBECENV",19,0)
 D FINALMSG  ; inform user of success or failure of environment check.
"RTN","VBECENV",20,0)
 Q
"RTN","VBECENV",21,0)
 ;
"RTN","VBECENV",22,0)
HDR D BMES^XPDUTL("Environment Check beginning...")
"RTN","VBECENV",23,0)
 Q
"RTN","VBECENV",24,0)
PACKAGE ; check for existence of required packages for install
"RTN","VBECENV",25,0)
 Q:$D(XPDABORT)
"RTN","VBECENV",26,0)
 N LINE,VBPKG,VBVERREQ,VBVER
"RTN","VBECENV",27,0)
 ;
"RTN","VBECENV",28,0)
 I $P($T(PKTXT+1),";",3)]"" D
"RTN","VBECENV",29,0)
 . D MES^XPDUTL("   Checking for required packages...")
"RTN","VBECENV",30,0)
 ;
"RTN","VBECENV",31,0)
 F LINE=1:1:9 D  Q:VBPKG']""!$D(XPDABORT)
"RTN","VBECENV",32,0)
 . S VBPKG=$P($T(PKTXT+LINE),";",3)
"RTN","VBECENV",33,0)
 . S VBVERREQ=$P($T(PKTXT+LINE),";",4)
"RTN","VBECENV",34,0)
 . Q:VBPKG']""!(VBVERREQ']"")
"RTN","VBECENV",35,0)
 . S VBVER=+$$VERSION^XPDUTL(VBPKG)
"RTN","VBECENV",36,0)
 . I (VBVER=VBVERREQ)!(VBVER>VBVERREQ) D  Q
"RTN","VBECENV",37,0)
 .. D MES^XPDUTL("      You have "_VBPKG_" version "_VBVER_" installed.")
"RTN","VBECENV",38,0)
 . I (VBVER<VBVERREQ) S XPDABORT=2 D
"RTN","VBECENV",39,0)
 .. D MES^XPDUTL("      You do not have "_VBPKG_" version "_VBVERREQ_" installed!")
"RTN","VBECENV",40,0)
 Q
"RTN","VBECENV",41,0)
PKTXT ;;Package Name;Version;
"RTN","VBECENV",42,0)
 ;;;;
"RTN","VBECENV",43,0)
 Q
"RTN","VBECENV",44,0)
 ;
"RTN","VBECENV",45,0)
PATCH ; check for existence of required patches for install
"RTN","VBECENV",46,0)
 Q:$D(XPDABORT)
"RTN","VBECENV",47,0)
 N LINE,VBPATCH
"RTN","VBECENV",48,0)
 ;
"RTN","VBECENV",49,0)
 I $P($T(PTXT+1),";",3)]"" D
"RTN","VBECENV",50,0)
 . D MES^XPDUTL("   Checking for required patches...")
"RTN","VBECENV",51,0)
 ;
"RTN","VBECENV",52,0)
 F LINE=1:1:9 D  Q:VBPATCH']""!$D(XPDABORT)
"RTN","VBECENV",53,0)
 . S VBPATCH=$P($T(PTXT+LINE),";",3)
"RTN","VBECENV",54,0)
 . Q:VBPATCH']""
"RTN","VBECENV",55,0)
 . I $$PATCH^XPDUTL(VBPATCH) D  Q
"RTN","VBECENV",56,0)
 .. D MES^XPDUTL("      You have patch "_VBPATCH_" installed.")
"RTN","VBECENV",57,0)
 . S XPDABORT=2
"RTN","VBECENV",58,0)
 . D MES^XPDUTL("      You do not have patch "_VBPATCH_" installed!")
"RTN","VBECENV",59,0)
 Q
"RTN","VBECENV",60,0)
PTXT ;;Patch designation e.g. OR*3.0*215;
"RTN","VBECENV",61,0)
 ;;;
"RTN","VBECENV",62,0)
 Q
"RTN","VBECENV",63,0)
ROUTINE ; check for existence of required routines for install
"RTN","VBECENV",64,0)
 Q:$D(XPDABORT)
"RTN","VBECENV",65,0)
 N LINE,VBRTN
"RTN","VBECENV",66,0)
 ;
"RTN","VBECENV",67,0)
 I $P($T(RTNTXT+1),";",3)]"" D
"RTN","VBECENV",68,0)
 . D MES^XPDUTL("   Checking for required routines...")
"RTN","VBECENV",69,0)
 ;
"RTN","VBECENV",70,0)
 F LINE=1:1:9 D  Q:VBRTN']""!$D(XPDABORT)
"RTN","VBECENV",71,0)
 . S VBRTN=$P($T(RTNTXT+LINE),";",3) Q:VBRTN']""
"RTN","VBECENV",72,0)
 . S X=VBRTN X ^%ZOSF("TEST") I $T D  Q
"RTN","VBECENV",73,0)
 .. D MES^XPDUTL("      You have routine "_VBRTN_" installed.")
"RTN","VBECENV",74,0)
 . S XPDABORT=2
"RTN","VBECENV",75,0)
 . D MES^XPDUTL("      You do not have routine "_VBRTN_" installed!")
"RTN","VBECENV",76,0)
 Q
"RTN","VBECENV",77,0)
RTNTXT ;;Routine Name;
"RTN","VBECENV",78,0)
 ;;XOBVSKT;
"RTN","VBECENV",79,0)
 ;;XOBUM;
"RTN","VBECENV",80,0)
 Q
"RTN","VBECENV",81,0)
FINALMSG ;
"RTN","VBECENV",82,0)
 I '$G(XPDABORT) D
"RTN","VBECENV",83,0)
 . D MES^XPDUTL("Environment check successful.  Installation will proceed.")
"RTN","VBECENV",84,0)
 I +$G(XPDABORT) D
"RTN","VBECENV",85,0)
 . D MES^XPDUTL("Required element missing!")
"RTN","VBECENV",86,0)
 . D MES^XPDUTL("**** Environment check failed.  Installation will be aborted. ****")
"RTN","VBECENV",87,0)
 D MES^XPDUTL("")  ; pad one blank line
"RTN","VBECENV",88,0)
 Q
"RTN","VBECHLRT")
0^73^B3440546
"RTN","VBECHLRT",1,0)
VBECHLRT ;HOIFO/BNT - VBECS HL7 ADT Messaging Routing routine;July 13, 2004
"RTN","VBECHLRT",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECHLRT",3,0)
 ;
"RTN","VBECHLRT",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECHLRT",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECHLRT",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECHLRT",7,0)
 ; 
"RTN","VBECHLRT",8,0)
 ; Integration Agreements:
"RTN","VBECHLRT",9,0)
 ; Reference to ^%ZTLOAD supported by IA #10063
"RTN","VBECHLRT",10,0)
 ; Reference to INIT^HLFNC2 supported by IA #2161
"RTN","VBECHLRT",11,0)
 ; Reference to GENERATE^HLMA supported by IA #2164
"RTN","VBECHLRT",12,0)
 ; Reference to GETDFN^MPIF001 supported by IA #2701
"RTN","VBECHLRT",13,0)
 ;
"RTN","VBECHLRT",14,0)
 QUIT
"RTN","VBECHLRT",15,0)
 ;
"RTN","VBECHLRT",16,0)
EN ; Get Message and queue TaskMan to send it on.
"RTN","VBECHLRT",17,0)
 ;
"RTN","VBECHLRT",18,0)
 ; Only send ADT A08 Message Types
"RTN","VBECHLRT",19,0)
 N VBECEVNT,HLA,MSG,VBI,VBJ,SG,VBECSEND
"RTN","VBECHLRT",20,0)
 S VBECEVNT=HL("ETN")
"RTN","VBECHLRT",21,0)
 S VBECSEND=0
"RTN","VBECHLRT",22,0)
 Q:VBECEVNT'[$E("A08")
"RTN","VBECHLRT",23,0)
 F VBI=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","VBECHLRT",24,0)
 . S HLA("HLS",VBI)=MSG
"RTN","VBECHLRT",25,0)
 . S VBJ=0 F  S VBJ=$O(HLNODE(VBJ)) Q:'VBJ  S MSG(VBJ)=HLNODE(VBJ),HLA("HLS",VBI,VBJ)=HLNODE(VBJ)
"RTN","VBECHLRT",26,0)
 . I $T(@SG)]"" D @SG
"RTN","VBECHLRT",27,0)
 Q:'VBECSEND
"RTN","VBECHLRT",28,0)
 ;
"RTN","VBECHLRT",29,0)
 S ZTIO=""
"RTN","VBECHLRT",30,0)
 S ZTRTN="SNDMSG^VBECHLRT"
"RTN","VBECHLRT",31,0)
 S ZTSAVE("HLA(""HLS"",")=""
"RTN","VBECHLRT",32,0)
 S ZTSAVE("VBECEVNT")=""
"RTN","VBECHLRT",33,0)
 S ZTDESC="VBECS HL7 Message Router"
"RTN","VBECHLRT",34,0)
 S ZTDTH=$H
"RTN","VBECHLRT",35,0)
 D ^%ZTLOAD
"RTN","VBECHLRT",36,0)
 D EXIT
"RTN","VBECHLRT",37,0)
 Q
"RTN","VBECHLRT",38,0)
 ;
"RTN","VBECHLRT",39,0)
ZFF ; This segment contains the edited fields
"RTN","VBECHLRT",40,0)
 N X,VBECFLDS
"RTN","VBECHLRT",41,0)
 S VBECFLDS=$P(MSG,HL("FS"),3)
"RTN","VBECHLRT",42,0)
 F I=1:1 S X=$P(VBECFLDS,";",I) Q:X']""  D  Q:VBECSEND
"RTN","VBECHLRT",43,0)
 . S VBECSEND=$S(X=".01":1,X=".02":1,X=".03":1,X=".09":1,X=".351":1,X="991.01":1,1:0)
"RTN","VBECHLRT",44,0)
 Q
"RTN","VBECHLRT",45,0)
 ;
"RTN","VBECHLRT",46,0)
SNDMSG ; Create the ^TMP("HLS",$J global array and send the message
"RTN","VBECHLRT",47,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","VBECHLRT",48,0)
 N EID
"RTN","VBECHLRT",49,0)
 S EID=$O(^ORD(101,"B","VBECS ADT-"_VBECEVNT_" SERVER",0))
"RTN","VBECHLRT",50,0)
 N HL,INT,HLRESLT,HLP
"RTN","VBECHLRT",51,0)
 S HL="HL",INT=0
"RTN","VBECHLRT",52,0)
 D INIT^HLFNC2(EID,.HL,INT)
"RTN","VBECHLRT",53,0)
 D GENERATE^HLMA(EID,"LM",1,.HLRESLT,"",.HLP)
"RTN","VBECHLRT",54,0)
 K HLA,VBECEVNT
"RTN","VBECHLRT",55,0)
 Q
"RTN","VBECHLRT",56,0)
 ;
"RTN","VBECHLRT",57,0)
EXIT ; Kill variables and quit
"RTN","VBECHLRT",58,0)
 K SG,ZTIO,ZTSAVE,ZTDESC,ZTRTN,ZTDTH
"RTN","VBECHLRT",59,0)
 Q
"RTN","VBECLU")
0^46^B62085514
"RTN","VBECLU",1,0)
VBECLU ;HIOFO/bnt-VBECS Patient Lookup Utility ; 9/8/05 12:43pm
"RTN","VBECLU",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECLU",3,0)
 ;
"RTN","VBECLU",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECLU",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECLU",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECLU",7,0)
 ; 
"RTN","VBECLU",8,0)
 ; Integration Agreements:
"RTN","VBECLU",9,0)
 ; Call to GETICN^MPIF001 is supported by IA: 2701
"RTN","VBECLU",10,0)
 ; Reference to $$FMTHL7^XLFDT supported by IA #10103
"RTN","VBECLU",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECLU",12,0)
 ; Reference to DT^DICRW supported by IA #10005
"RTN","VBECLU",13,0)
 ; Call to $$UP^XLFSTR is supported by IA: 10104
"RTN","VBECLU",14,0)
 ; Call to ^DIM is supported by IA: 10016
"RTN","VBECLU",15,0)
 ; Call to ^VA(200 is supported by IA: 10060
"RTN","VBECLU",16,0)
 ; Reference to FIND^DIC supported by IA #2051
"RTN","VBECLU",17,0)
 ; 
"RTN","VBECLU",18,0)
 ;
"RTN","VBECLU",19,0)
 SET X="You Can't Enter VBECLU at top of routine!"
"RTN","VBECLU",20,0)
 QUIT
"RTN","VBECLU",21,0)
 ;
"RTN","VBECLU",22,0)
SEARCH(RESULT,PARAMS) ; -- return patient data in XML format
"RTN","VBECLU",23,0)
 ; -- RPC:  VBEC PATIENT LOOKUP SEARCH
"RTN","VBECLU",24,0)
 ; -- 
"RTN","VBECLU",25,0)
 ; -- input  PARAMS ARRAY
"RTN","VBECLU",26,0)
 ;           PARAMS("SEARCH_TYPE") = "NAME", "SSN", ICN, SSN4
"RTN","VBECLU",27,0)
 ;           PARAMS("SEARCH_VALUE") = value to search for.
"RTN","VBECLU",28,0)
 ; 
"RTN","VBECLU",29,0)
 NEW I,X,Y,VBECPCNT,VBECLINE,VBECRSLT,SEARCH,VALUE,FILTER,FILTERV,BDATE,EDATE
"RTN","VBECLU",30,0)
 NEW MAXSIZE,MAXSIZRE,LINENO,DELIM,MSCREEN,RESTRICT,ERRMSG
"RTN","VBECLU",31,0)
 IF '$D(DT) D DT^DICRW
"RTN","VBECLU",32,0)
 ;KILL RESULT
"RTN","VBECLU",33,0)
 SET VBECPCNT=0
"RTN","VBECLU",34,0)
 SET VBECLINE=0
"RTN","VBECLU",35,0)
 SET VBECRSLT="^TMP(""VBEC-PLU-SEARCH"",$J)"
"RTN","VBECLU",36,0)
 SET RESULT=$NA(@VBECRSLT)
"RTN","VBECLU",37,0)
 K @RESULT
"RTN","VBECLU",38,0)
 ;
"RTN","VBECLU",39,0)
 SET SEARCH=$$UP^XLFSTR($GET(PARAMS("SEARCH_TYPE")))
"RTN","VBECLU",40,0)
 SET VALUE=$$UP^XLFSTR($GET(PARAMS("SEARCH_VALUE")))
"RTN","VBECLU",41,0)
 SET MAXSIZE=+$GET(PARAMS("MAX_PATIENTS"),50),MAXSIZRE=0
"RTN","VBECLU",42,0)
 IF (MAXSIZE<5) SET MAXSIZE=5
"RTN","VBECLU",43,0)
 IF (MAXSIZE>100) SET MAXSIZE=100
"RTN","VBECLU",44,0)
 ;
"RTN","VBECLU",45,0)
 SET FILTER=$$UP^XLFSTR($GET(PARAMS("FILTER_TYPE")))
"RTN","VBECLU",46,0)
 SET FILTERV=$G(PARAMS("FILTER_VALUE"))
"RTN","VBECLU",47,0)
 SET BDATE=$G(PARAMS("CLINIC_STARTDATE"))
"RTN","VBECLU",48,0)
 SET EDATE=$G(PARAMS("CLINIC_ENDDATE"))
"RTN","VBECLU",49,0)
 SET MSCREEN=$$UP^XLFSTR($G(PARAMS("MSCREEN")))
"RTN","VBECLU",50,0)
 IF MSCREEN'="" DO
"RTN","VBECLU",51,0)
 . SET X=MSCREEN D ^DIM IF $D(X)=0 SET MSCREEN="" SET ERRMSG="MSCREEN is invalid M code" Q
"RTN","VBECLU",52,0)
 . IF $E(MSCREEN)'="I" SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, must start with an If statement." Q
"RTN","VBECLU",53,0)
 . IF MSCREEN[" S "!(MSCREEN[" SET ")!(MSCREEN[" S:")!(MSCREEN["SET:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not set values." Q
"RTN","VBECLU",54,0)
 . IF MSCREEN[" K "!(MSCREEN[" KILL ")!(MSCREEN[" K:")!(MSCREEN["SET:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not kill values." Q
"RTN","VBECLU",55,0)
 . IF MSCREEN[" W "!(MSCREEN[" WRITE ")!(MSCREEN[" W:")!(MSCREEN["WRITE:") SET MSCREEN="" SET ERRMSG="MSCREEN Deleted, can not WRITE." Q
"RTN","VBECLU",56,0)
 SET DELIM=$G(PARAMS("DELIMITER"),",") ; Defaults to comma to support old way.
"RTN","VBECLU",57,0)
 ; 
"RTN","VBECLU",58,0)
 SET RESTRICT=$G(^VA(200,+$G(DUZ),101))
"RTN","VBECLU",59,0)
 IF +RESTRICT DO
"RTN","VBECLU",60,0)
 . S CODE="I $D(^OR(100.21,"_$P(RESTRICT,"^",2)_",10,""B"",+$G(DFN)_"";DPT(""))"
"RTN","VBECLU",61,0)
 . IF MSCREEN'="" S MSCREEN=" "_CODE Q
"RTN","VBECLU",62,0)
 . IF MSCREEN="" S MSCREEN=CODE
"RTN","VBECLU",63,0)
 ;
"RTN","VBECLU",64,0)
 IF (FILTER'=""),(FILTERV'="") DO BYFILTER^VBECLU0(FILTER,FILTERV,BDATE,EDATE,SEARCH,VALUE,DELIM) GOTO DONE
"RTN","VBECLU",65,0)
 ;
"RTN","VBECLU",66,0)
 IF (SEARCH="NAME")!(SEARCH="SSN")!(SEARCH="ICN")!(SEARCH="SSN4") D BYNAME
"RTN","VBECLU",67,0)
 ELSE  DO  GOTO DONE
"RTN","VBECLU",68,0)
 . DO ADD("<record count='0'>")
"RTN","VBECLU",69,0)
 . DO ADD("<error message='Searching for patients by "_SEARCH_" not yet implemented!'></error>")
"RTN","VBECLU",70,0)
 QUIT
"RTN","VBECLU",71,0)
 ;
"RTN","VBECLU",72,0)
BYNAME ;
"RTN","VBECLU",73,0)
 NEW FULLCNT,VBECPCNT,VBEC,NODE,DFN,XREF
"RTN","VBECLU",74,0)
 ;; copied From scutbk11
"RTN","VBECLU",75,0)
 ;; DO FIND^DIC(2,,".01;.03;.363;.09","PS",VALUE,300,"B^BS^BS5^SSN")
"RTN","VBECLU",76,0)
 ;
"RTN","VBECLU",77,0)
 IF VALUE="" DO  GOTO DONE
"RTN","VBECLU",78,0)
 . DO ADD("<record count='0'>")
"RTN","VBECLU",79,0)
 . DO ADD("<error message='Not Enough Information Provided to Search for Patients for Search Type = """_SEARCH_"""'></error>")
"RTN","VBECLU",80,0)
 ;
"RTN","VBECLU",81,0)
 IF SEARCH="NAME" SET XREF="B",VALUE=$TR(VALUE," ","") ;REMOVE SPACES
"RTN","VBECLU",82,0)
 IF SEARCH="SSN" SET XREF="BS^SSN^CN^RM",VALUE=$TR(VALUE," -","") ; REMOVE DASHES AND SPACES
"RTN","VBECLU",83,0)
 IF SEARCH="SSN4" SET XREF="BS5" DO 
"RTN","VBECLU",84,0)
 . IF $L(VALUE)>5 SET VALUE=$E(VALUE,1,5) ; can't exceed 5 characters, if P for psuedo on end take it off.
"RTN","VBECLU",85,0)
 IF SEARCH="ICN" SET XREF="AICN"
"RTN","VBECLU",86,0)
 DO FIND^DIC(2,,".01;.03;.09","MPS",VALUE,,XREF)
"RTN","VBECLU",87,0)
 IF $G(DIERR) DO  GOTO DONE
"RTN","VBECLU",88,0)
 . DO ADD("<record count='0'>")
"RTN","VBECLU",89,0)
 . DO ADD("<error message='Error occured in VistA during patient lookup'></error>")
"RTN","VBECLU",90,0)
 . DO CLEAN^DILF
"RTN","VBECLU",91,0)
 SET FULLCNT=+$G(^TMP("DILIST",$J,0))
"RTN","VBECLU",92,0)
 DO ADD("<record count='0'>")
"RTN","VBECLU",93,0)
 SET LINENO=VBECLINE
"RTN","VBECLU",94,0)
 ;
"RTN","VBECLU",95,0)
 SET VBECPCNT=0
"RTN","VBECLU",96,0)
 FOR VBEC=1:1:FULLCNT D  ;Q:$$STOP^XOBVLIB()
"RTN","VBECLU",97,0)
 . SET NODE=^TMP("DILIST",$J,VBEC,0)
"RTN","VBECLU",98,0)
 . SET DFN=$P(NODE,"^",1)
"RTN","VBECLU",99,0)
 . D PTDATA(+NODE,.VBECPCNT)
"RTN","VBECLU",100,0)
 I $G(ERRMSG)]"" D
"RTN","VBECLU",101,0)
 . DO ADD("<error message=''>"_$G(ERRMSG)_"</error>")
"RTN","VBECLU",102,0)
 ;IF ($G(MAXSIZRE)<1) DO ADD("<maximum message=''></maximum>")
"RTN","VBECLU",103,0)
 SET @VBECRSLT@(LINENO)="<record count='"_VBECPCNT_"'>"
"RTN","VBECLU",104,0)
 ;
"RTN","VBECLU",105,0)
DONE ;
"RTN","VBECLU",106,0)
 DO ADD("</record>")
"RTN","VBECLU",107,0)
 IF 1
"RTN","VBECLU",108,0)
 QUIT
"RTN","VBECLU",109,0)
 ;
"RTN","VBECLU",110,0)
EXIT ;
"RTN","VBECLU",111,0)
 QUIT
"RTN","VBECLU",112,0)
 ;
"RTN","VBECLU",113,0)
PTDATA(DFN,VBECPCNT) ;
"RTN","VBECLU",114,0)
 NEW I,DONE,LINE,ALIAS,NAME,PTNAME,DOB,DOD,SSN,TYPE,GENDER,ICN,PRIM,SC,SCPER,VET,WARD,ROOMBED,SENSITIV,DOBCODE,FNAME,LNAME,MI,X1,X2
"RTN","VBECLU",115,0)
 ;IF VBECPCNT>(MAXSIZE-1) DO MAXOUT QUIT
"RTN","VBECLU",116,0)
 IF (MSCREEN'="") X MSCREEN I '$T Q
"RTN","VBECLU",117,0)
 SET VBECPCNT=VBECPCNT+1
"RTN","VBECLU",118,0)
 ;SET LINE="<patient number='"_VBECPCNT_"' dfn='"_DFN_"'"
"RTN","VBECLU",119,0)
 DO ADD("<Patient><Number>"_VBECPCNT_"</Number><VistaPatientID>"_DFN_"</VistaPatientID>")
"RTN","VBECLU",120,0)
 ;
"RTN","VBECLU",121,0)
 SET PTNAME=$P(^DPT(DFN,0),"^",1)
"RTN","VBECLU",122,0)
 SET X1=$P(PTNAME,",",2),X2=$L(X1," "),MI=""
"RTN","VBECLU",123,0)
 IF X2 SET MI=$P(X1," ",2),X1=$P(X1," ")
"RTN","VBECLU",124,0)
 SET FNAME=$$CHARCHK^XOBVLIB(X1),MI=$$CHARCHK^XOBVLIB(MI)
"RTN","VBECLU",125,0)
 SET LNAME=$$CHARCHK^XOBVLIB($P(PTNAME,","))
"RTN","VBECLU",126,0)
 ;
"RTN","VBECLU",127,0)
 ; -- REQUIRED COMPONENTS
"RTN","VBECLU",128,0)
 SET SENSITIV=$S($P($G(^DGSL(38.1,DFN,0)),"^",2)=1:"true",1:"false")
"RTN","VBECLU",129,0)
 ; Get DOB and determine if month or day is zero and add DOB Code.
"RTN","VBECLU",130,0)
 SET DOB=$$FMTHL7^XLFDT($P($G(^DPT(DFN,0)),"^",3)),DOBCODE="V"
"RTN","VBECLU",131,0)
 ; Get Date Of Death
"RTN","VBECLU",132,0)
 SET DOD=$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT($P($G(^DPT(DFN,.35)),"^")))
"RTN","VBECLU",133,0)
 IF $E(DOB,5,8)["00" DO
"RTN","VBECLU",134,0)
 . SET:$E(DOB,5,8)="0000" $E(DOB,5,8)="0101",DOBCODE="B" Q  ; Both zero
"RTN","VBECLU",135,0)
 . SET:$E(DOB,5,6)="00" $E(DOB,5,6)="01",DOBCODE="M" Q  ; Month zero
"RTN","VBECLU",136,0)
 . SET:$E(DOB,6,8)="00" $E(DOB,6,8)="01",DOBCODE="D" Q  ; day zero
"RTN","VBECLU",137,0)
 S DOB=$$CHARCHK^XOBVLIB(DOB)
"RTN","VBECLU",138,0)
 SET SSN=$$CHARCHK^XOBVLIB($P($G(^DPT(DFN,0)),"^",9))
"RTN","VBECLU",139,0)
 ;SET LINE=LINE_" sensitive='"_SENSITIV_"' name='"_NAME_"' dob='"_DOB_"' ssn='"_SSN_"' "
"RTN","VBECLU",140,0)
 DO ADD("<PatientLastName>"_LNAME_"</PatientLastName><PatientFirstName>"_FNAME_"</PatientFirstName><PatientMiddleName>"_MI_"</PatientMiddleName>")
"RTN","VBECLU",141,0)
 DO ADD("<Sensitive>"_SENSITIV_"</Sensitive><PatientDOB>"_DOB_"</PatientDOB><PatientDOBCode>"_DOBCODE_"</PatientDOBCode><PatientSSN>"_SSN_"</PatientSSN>")
"RTN","VBECLU",142,0)
 DO ADD("<PatientDeathDate>"_DOD_"</PatientDeathDate>")
"RTN","VBECLU",143,0)
 ;
"RTN","VBECLU",144,0)
 ; -- OPTIONAL COMPONENTS
"RTN","VBECLU",145,0)
 ;Patient Type (391)
"RTN","VBECLU",146,0)
 SET TYPE=$$CHARCHK^XOBVLIB($P($G(^DG(391,+$G(^DPT(DFN,"TYPE")),0)),"^",1))
"RTN","VBECLU",147,0)
 ;
"RTN","VBECLU",148,0)
 ;gender
"RTN","VBECLU",149,0)
 SET GENDER=$$CHARCHK^XOBVLIB($P($G(^DPT(DFN,0)),"^",2))
"RTN","VBECLU",150,0)
 ;
"RTN","VBECLU",151,0)
 ;icn
"RTN","VBECLU",152,0)
 SET ICN=$P($G(^DPT(DFN,"MPI")),"^",1)
"RTN","VBECLU",153,0)
 ; This API sets the ICN checksum.  
"RTN","VBECLU",154,0)
 SET ICN=$$GETICN^MPIF001(DFN)
"RTN","VBECLU",155,0)
 IF +ICN<0 SET ICN=$$ICNLC^MPIF001(DFN)
"RTN","VBECLU",156,0)
 ;
"RTN","VBECLU",157,0)
 ;Primary Eligibility(.361)
"RTN","VBECLU",158,0)
 SET PRIM=$$PRIM(DFN)
"RTN","VBECLU",159,0)
 ;
"RTN","VBECLU",160,0)
 SET SC=$P($G(^DPT(DFN,.3)),"^",1,2) ;Is Service Connected (.301) %=.302
"RTN","VBECLU",161,0)
 SET SCPER=$P(SC,"^",2)
"RTN","VBECLU",162,0)
 IF $P(SC,"^",1)="Y" SET SC="true"
"RTN","VBECLU",163,0)
 IF $P(SC,"^",1)="N" SET SC="false"
"RTN","VBECLU",164,0)
 ;
"RTN","VBECLU",165,0)
 SET VET=$P($G(^DPT(DFN,"VET")),"^",1) ;Veteran Status (1901)
"RTN","VBECLU",166,0)
 IF VET="Y" SET VET="true"
"RTN","VBECLU",167,0)
 IF VET="N" SET VET="false"
"RTN","VBECLU",168,0)
 ;
"RTN","VBECLU",169,0)
 SET WARD=$$CHARCHK^XOBVLIB($E($G(^DPT(DFN,.1)),1,30))
"RTN","VBECLU",170,0)
 SET ROOMBED=$$CHARCHK^XOBVLIB($P($G(^DPT(DFN,.101)),"^",1))
"RTN","VBECLU",171,0)
 ;
"RTN","VBECLU",172,0)
 ;SET LINE=LINE_" type='"_TYPE_"' primaryeligibility='"_PRIM_"' serviceconnected='"_SC_"' scpercent='"_SCPER_"'"
"RTN","VBECLU",173,0)
 DO ADD("<Type>"_TYPE_"</Type><PrimaryEligibility>"_PRIM_"</PrimaryEligibility><ServiceConnected>"_SC_"</ServiceConnected><ScPercent>"_SCPER_"</ScPercent>")
"RTN","VBECLU",174,0)
 ;SET LINE=LINE_" gender='"_GENDER_"' icn='"_ICN_"' veteran='"_VET_"' ward='"_WARD_"' roombed='"_ROOMBED_"'></patient>"
"RTN","VBECLU",175,0)
 DO ADD("<PatientSexCode>"_GENDER_"</PatientSexCode><PatientICN>"_ICN_"</PatientICN><Veteran>"_VET_"</Veteran><PatientLocation>"_WARD_"</PatientLocation><PatientRoomBed>"_ROOMBED_"</PatientRoomBed></Patient>")
"RTN","VBECLU",176,0)
 ;
"RTN","VBECLU",177,0)
 ;DO ADD(LINE)
"RTN","VBECLU",178,0)
 ;DO NAMECOMP^VBECLU0(DFN,VBECPCNT)
"RTN","VBECLU",179,0)
 ;
"RTN","VBECLU",180,0)
 QUIT
"RTN","VBECLU",181,0)
 ;
"RTN","VBECLU",182,0)
MAXOUT ;
"RTN","VBECLU",183,0)
 IF $G(MAXSIZRE)<1 DO ADD("<maximum message='Too many patients found (more than "_MAXSIZE_").  Please Limit Search.'></maximum>")
"RTN","VBECLU",184,0)
 SET MAXSIZRE=1
"RTN","VBECLU",185,0)
 QUIT
"RTN","VBECLU",186,0)
 ;
"RTN","VBECLU",187,0)
PRIM(DFN) ; -- returns print name from file 8.1
"RTN","VBECLU",188,0)
 NEW PRIM1
"RTN","VBECLU",189,0)
 SET PRIM1=$P($G(^DIC(8,+$G(^DPT(DFN,.36)),0)),"^",9) ; station entry
"RTN","VBECLU",190,0)
 Q $$CHARCHK^XOBVLIB($P($G(^DIC(8.1,+PRIM1,0)),"^",6)) ; mas entry
"RTN","VBECLU",191,0)
 ;
"RTN","VBECLU",192,0)
ADD(STR) ; -- add string to array
"RTN","VBECLU",193,0)
 SET VBECLINE=VBECLINE+1
"RTN","VBECLU",194,0)
 SET @VBECRSLT@(VBECLINE)=STR
"RTN","VBECLU",195,0)
 QUIT
"RTN","VBECLU0")
0^47^B22984698
"RTN","VBECLU0",1,0)
VBECLU0 ;HOIFO/BNT - VBECS Patient Lookup Utility ;
"RTN","VBECLU0",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECLU0",3,0)
 ;
"RTN","VBECLU0",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECLU0",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECLU0",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECLU0",7,0)
 ; 
"RTN","VBECLU0",8,0)
 ; Integration Agreements:
"RTN","VBECLU0",9,0)
 ;
"RTN","VBECLU0",10,0)
 SET X="You Can't Enter VBECLU0 at top of routine!"
"RTN","VBECLU0",11,0)
 QUIT
"RTN","VBECLU0",12,0)
 ;
"RTN","VBECLU0",13,0)
BYFILTER(FILTER,FILTERV,BDATE,EDATE,SEARCH,VALUE,DELIM) ; -- search type by clinic, provider, or ward.
"RTN","VBECLU0",14,0)
 NEW PCNT,OKAY,VAL
"RTN","VBECLU0",15,0)
 K ^TMP("PTLKUP",$J)
"RTN","VBECLU0",16,0)
 SET (OKAY,PCNT)=0
"RTN","VBECLU0",17,0)
 ;W:$D(ALAN(1)) !,"In ByFilter"
"RTN","VBECLU0",18,0)
 ;
"RTN","VBECLU0",19,0)
 DO ADD^VBECLU("<record count='0'>")
"RTN","VBECLU0",20,0)
 SET LINENO=VBECLINE
"RTN","VBECLU0",21,0)
 FOR I=1:1 S VAL=$P(FILTERV,DELIM,I) QUIT:VAL=""  DO  Q:$$STOP^XOBVLIB()
"RTN","VBECLU0",22,0)
 . IF FILTER="WARD" DO WARDPTS(VAL) S OKAY=1 Q
"RTN","VBECLU0",23,0)
 . IF FILTER="CLINIC" DO CLINPTS(VAL,BDATE,EDATE) S OKAY=2 Q
"RTN","VBECLU0",24,0)
 . IF FILTER="PROVIDER" D PROVPTS(VAL) S OKAY=3 Q
"RTN","VBECLU0",25,0)
 ;
"RTN","VBECLU0",26,0)
 IF OKAY<1 DO ADD^VBECLU("<error message='Filter not correctly specified'></error>")
"RTN","VBECLU0",27,0)
 ;
"RTN","VBECLU0",28,0)
 ; -- update the record count
"RTN","VBECLU0",29,0)
 DO ADDPTS()
"RTN","VBECLU0",30,0)
 SET @VBECRSLT@(LINENO)="<record count='"_PCNT_"'>"
"RTN","VBECLU0",31,0)
 IF ($G(MAXSIZRE)<1) DO ADD^VBECLU("<maximum message=''></maximum>")
"RTN","VBECLU0",32,0)
 DO ADD^VBECLU("<error message=''></error>")
"RTN","VBECLU0",33,0)
 QUIT
"RTN","VBECLU0",34,0)
 ;
"RTN","VBECLU0",35,0)
FILTCHK(DFN,TYPE,VALUE) ; -- Filter search -
"RTN","VBECLU0",36,0)
 ; -- check patients to match search type and search value for filter searchs
"RTN","VBECLU0",37,0)
 ; -- returns 1 if matchs, 0 if no match
"RTN","VBECLU0",38,0)
 ;
"RTN","VBECLU0",39,0)
 ;W:$D(ALAN(1)) !,"In FilterCheck"
"RTN","VBECLU0",40,0)
 SET VALUE=$$UP^XLFSTR(VALUE)
"RTN","VBECLU0",41,0)
 Q:($G(VALUE)="")!($G(VALUE)="*") 1
"RTN","VBECLU0",42,0)
 Q:($G(TYPE)="") 1
"RTN","VBECLU0",43,0)
 Q:($G(DFN)<1) 0
"RTN","VBECLU0",44,0)
 ;
"RTN","VBECLU0",45,0)
 NEW I,J,OKAY
"RTN","VBECLU0",46,0)
 SET OKAY=0
"RTN","VBECLU0",47,0)
 IF TYPE="NAME" DO
"RTN","VBECLU0",48,0)
 . SET CHKVAL=$P($G(^DPT(DFN,0)),"^",1)
"RTN","VBECLU0",49,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","VBECLU0",50,0)
 IF TYPE="SSN" DO
"RTN","VBECLU0",51,0)
 . SET CHKVAL=$P($G(^DPT(DFN,0)),"^",9)
"RTN","VBECLU0",52,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","VBECLU0",53,0)
 IF TYPE="ICN" DO
"RTN","VBECLU0",54,0)
 . SET CHKVAL=$P($G(^DPT(DFN,"MPI")),"^",1)
"RTN","VBECLU0",55,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","VBECLU0",56,0)
 IF TYPE="SSN4" DO
"RTN","VBECLU0",57,0)
 . SET CHKVAL=$E($P($G(^DPT(DFN,0)),"^",1),1)_$E($P($G(^DPT(DFN,0)),"^",9),6,9)
"RTN","VBECLU0",58,0)
 . IF $E(CHKVAL,1,$LENGTH(VALUE))=VALUE SET OKAY=1
"RTN","VBECLU0",59,0)
 QUIT OKAY
"RTN","VBECLU0",60,0)
 ;
"RTN","VBECLU0",61,0)
WARDPTS(WARD) ; RETURN LIST OF PATIENTS IN A WARD
"RTN","VBECLU0",62,0)
 ; Based on ORQPTQ2
"RTN","VBECLU0",63,0)
 Q:+$G(WARD)<1 
"RTN","VBECLU0",64,0)
 N DFN
"RTN","VBECLU0",65,0)
 S DFN=0
"RTN","VBECLU0",66,0)
 S WARD=$P(^DIC(42,WARD,0),"^")   ;GET WARD NAME FOR "CN"  LOOKUP
"RTN","VBECLU0",67,0)
 Q:WARD=""
"RTN","VBECLU0",68,0)
 F  D  Q:DFN'>0  Q:$$STOP^XOBVLIB()
"RTN","VBECLU0",69,0)
 . S DFN=$O(^DPT("CN",WARD,DFN)) Q:DFN'>0
"RTN","VBECLU0",70,0)
 . Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","VBECLU0",71,0)
 . S ^TMP("PTLKUP",$J,$P($G(^DPT(DFN,0)),"^",1),DFN)=""
"RTN","VBECLU0",72,0)
 Q
"RTN","VBECLU0",73,0)
 ;
"RTN","VBECLU0",74,0)
PROVPTS(PROV) ;  RETURN LIST OF PATIENTS LINKED TO A PRIMARY PROVIDER
"RTN","VBECLU0",75,0)
 ; Based on ORQPTQ2
"RTN","VBECLU0",76,0)
 ; "APR" xref is on field PROVIDER in file 2 (2;.104)
"RTN","VBECLU0",77,0)
 ; "AAP" xref is on field ATTENDING PHYSICIAN in file 2 (2;.1041)
"RTN","VBECLU0",78,0)
 ; 
"RTN","VBECLU0",79,0)
 Q:+$G(PROV)<1
"RTN","VBECLU0",80,0)
 ;
"RTN","VBECLU0",81,0)
 N DFN,XREF
"RTN","VBECLU0",82,0)
 S DFN=0
"RTN","VBECLU0",83,0)
 F XREF="AAP","APR" DO
"RTN","VBECLU0",84,0)
 . F  S DFN=$O(^DPT(XREF,PROV,DFN)) Q:DFN'>0  D  Q:$$STOP^XOBVLIB()
"RTN","VBECLU0",85,0)
 .. Q:'$$FILTCHK(DFN,SEARCH,VALUE)
"RTN","VBECLU0",86,0)
 .. S ^TMP("PTLKUP",$J,$P($G(^DPT(DFN,0)),"^",1),DFN)=""
"RTN","VBECLU0",87,0)
 Q
"RTN","VBECLU0",88,0)
 ;
"RTN","VBECLU0",89,0)
CLINPTS(CLIN,BDATE,EDATE) ; RETURN LIST OF PTS W/CLINIC APPT W/IN BEGINNING AND END DATES
"RTN","VBECLU0",90,0)
 Q:+$G(CLIN)<1
"RTN","VBECLU0",91,0)
 ;
"RTN","VBECLU0",92,0)
 N DFN,NAME,I,J,X,ORJ,ORSRV,ORNOWDT,CHKX,CHKIN,MAXAPPTS,ORC,CLNAM
"RTN","VBECLU0",93,0)
 S MAXAPPTS=200
"RTN","VBECLU0",94,0)
 S NOWDT=$$NOW^XLFDT
"RTN","VBECLU0",95,0)
 ;
"RTN","VBECLU0",96,0)
 S DFN=0,I=1
"RTN","VBECLU0",97,0)
 IF $G(BDATE)="" S BDATE="T"
"RTN","VBECLU0",98,0)
 IF $G(EDATE)="" S EDATE="T+1"
"RTN","VBECLU0",99,0)
 ;CONVERT BDATE AND EDATE INTO FILEMAN DATE/TIME
"RTN","VBECLU0",100,0)
 D DT^DILF("T",BDATE,.BDATE,"","")
"RTN","VBECLU0",101,0)
 D DT^DILF("T",EDATE,.EDATE,"","")
"RTN","VBECLU0",102,0)
 I (BDATE=-1)!(EDATE=-1) S Y(1)="^Error in date range." Q
"RTN","VBECLU0",103,0)
 S EDATE=$P(EDATE,".")_.5  ;ADD 1/2 DAY TO END DATE
"RTN","VBECLU0",104,0)
 ;
"RTN","VBECLU0",105,0)
 D CLINPT2(+CLIN,BDATE,EDATE)
"RTN","VBECLU0",106,0)
 QUIT
"RTN","VBECLU0",107,0)
 ;
"RTN","VBECLU0",108,0)
CLINPT2(CLIN,BEGIN,END) ; -- Use scheduling rehosting API from patches SD*5.3*253 and SD*5.3*275
"RTN","VBECLU0",109,0)
 ; -- GETPLIST^SDAMA202(SDIEN,SDFIELDS,SDAPSTAT,SDSTART,SDEND,.SDRESULT,SDIOSTAT)
"RTN","VBECLU0",110,0)
 ;
"RTN","VBECLU0",111,0)
 K ^TMP($J,"SDAMA202","GETPLIST")
"RTN","VBECLU0",112,0)
 NEW I,X,APPTS SET APPTS=""
"RTN","VBECLU0",113,0)
 ;
"RTN","VBECLU0",114,0)
 ; -- get appointment date/time, patient status, patient ien & name,
"RTN","VBECLU0",115,0)
 ;    only get appointment status = "R" for scheduled or kept appointments.
"RTN","VBECLU0",116,0)
 DO GETPLIST^SDAMA202(+CLIN,"1;3;4","R",BEGIN,END,.APPTS)
"RTN","VBECLU0",117,0)
 ;
"RTN","VBECLU0",118,0)
 ; -- check number of appointments
"RTN","VBECLU0",119,0)
 Q:APPTS<1
"RTN","VBECLU0",120,0)
 ;
"RTN","VBECLU0",121,0)
 ; -- check for an error, may need to pass message up.
"RTN","VBECLU0",122,0)
 I $D(^TMP($J,"SDAMA202","GETPTLIST","ERROR")) QUIT
"RTN","VBECLU0",123,0)
 ;
"RTN","VBECLU0",124,0)
 ; -- move list of appointments to list of patients, ordered by name, dfn
"RTN","VBECLU0",125,0)
 S (I,X)=""
"RTN","VBECLU0",126,0)
 F  SET I=$O(^TMP($J,"SDAMA202","GETPLIST",I)) Q:I<1  S X=^(I,4) DO
"RTN","VBECLU0",127,0)
 .  Q:'$$FILTCHK(+X,SEARCH,VALUE)  ;check if meets search criteria
"RTN","VBECLU0",128,0)
 .  S ^TMP("PTLKUP",$J,$P(X,"^",2),+X)=""
"RTN","VBECLU0",129,0)
 QUIT
"RTN","VBECLU0",130,0)
 ;
"RTN","VBECLU0",131,0)
ADDPTS() ;
"RTN","VBECLU0",132,0)
 N NAME,DFN
"RTN","VBECLU0",133,0)
 S NAME=""
"RTN","VBECLU0",134,0)
 FOR  SET NAME=$O(^TMP("PTLKUP",$J,NAME)) Q:NAME=""  DO
"RTN","VBECLU0",135,0)
 . S DFN=""  FOR  SET DFN=$O(^TMP("PTLKUP",$J,NAME,DFN)) Q:DFN<1  DO
"RTN","VBECLU0",136,0)
 .. DO PTDATA^VBECLU(DFN,.PCNT)
"RTN","VBECLU0",137,0)
 ;IF ($G(MAXSIZRE)<1) DO ADD^VBECLU("<maximum message=''></maximum>")
"RTN","VBECLU0",138,0)
 Q
"RTN","VBECLU0",139,0)
 ;
"RTN","VBECLU0",140,0)
NAMECOMP(DFN,VBECCNT) ; ENTRY IS +$P($G(^DPT(DFN,"NAME")),"^",1)  
"RTN","VBECLU0",141,0)
 ; -- FROM VBECDPT0  does this need to be incorporated?
"RTN","VBECLU0",142,0)
 N A,LN,FN,MI,PR,SU,DE
"RTN","VBECLU0",143,0)
 S A=$G(^VA(20,+$P($G(^DPT(DFN,"NAME")),"^",1),1))
"RTN","VBECLU0",144,0)
 S LN=$$CHARCHK^XOBVLIB($P(A,"^",1))
"RTN","VBECLU0",145,0)
 S FN=$$CHARCHK^XOBVLIB($P(A,"^",2))
"RTN","VBECLU0",146,0)
 S MI=$$CHARCHK^XOBVLIB($P(A,"^",3))
"RTN","VBECLU0",147,0)
 S PR=$$CHARCHK^XOBVLIB($P(A,"^",4))
"RTN","VBECLU0",148,0)
 S SU=$$CHARCHK^XOBVLIB($P(A,"^",5))
"RTN","VBECLU0",149,0)
 S DE=$$CHARCHK^XOBVLIB($P(A,"^",6))
"RTN","VBECLU0",150,0)
 DO ADD^VBECLU("<namecomponent number='"_VBECCNT_" last='"_LN_"' first='"_FN_"' middle='"_MI_"' prefix='"_PR_"' suffix='"_SU_"' degree='"_DE_"' ></namecomponents>")
"RTN","VBECLU0",151,0)
 ;
"RTN","VBECLU3")
0^48^B17629716
"RTN","VBECLU3",1,0)
VBECLU3 ;HIOFO/BNT - VBECS Patient Lookup Utility ;04/13/2005 09:00
"RTN","VBECLU3",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECLU3",3,0)
 ;
"RTN","VBECLU3",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECLU3",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECLU3",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECLU3",7,0)
 ; 
"RTN","VBECLU3",8,0)
 ; Integration Agreements:
"RTN","VBECLU3",9,0)
 ;
"RTN","VBECLU3",10,0)
 QUIT
"RTN","VBECLU3",11,0)
 ; -- Get list of wards or clinics for patient lookup by ward
"RTN","VBECLU3",12,0)
 ; 
"RTN","VBECLU3",13,0)
 ; -- Does not currently limit display by division, institution, etc.  May need to.
"RTN","VBECLU3",14,0)
 ; 
"RTN","VBECLU3",15,0)
GETLIST(RESULT,PARAM) ;
"RTN","VBECLU3",16,0)
 NEW X,CNT,VBECLINE,VBECESLT,OKAY
"RTN","VBECLU3",17,0)
 SET (CNT,OKAY)=0
"RTN","VBECLU3",18,0)
 IF '$D(DT) D DT^DICRW
"RTN","VBECLU3",19,0)
 ;
"RTN","VBECLU3",20,0)
 SET VBECLINE=0
"RTN","VBECLU3",21,0)
 K ^TMP($J,"PLU-FILTER")
"RTN","VBECLU3",22,0)
 SET VBECRSLT="^TMP($J,""PLU-FILTER"")"
"RTN","VBECLU3",23,0)
 SET RESULT=$NA(@VBECRSLT)
"RTN","VBECLU3",24,0)
 ;
"RTN","VBECLU3",25,0)
 DO ADD^VBECLU($$XMLHDR^XOBVLIB)
"RTN","VBECLU3",26,0)
 ;
"RTN","VBECLU3",27,0)
 IF $$UP^XLFSTR(PARAM("TYPE"))="WARD" S OKAY=1 D
"RTN","VBECLU3",28,0)
 . D ADD^VBECLU("<filterlist type='ward'>")
"RTN","VBECLU3",29,0)
 . D WLIST("ward")
"RTN","VBECLU3",30,0)
 . D ADD^VBECLU("</filterlist>")
"RTN","VBECLU3",31,0)
 ;
"RTN","VBECLU3",32,0)
 IF $$UP^XLFSTR(PARAM("TYPE"))="CLINIC" S OKAY=2 D
"RTN","VBECLU3",33,0)
 . D ADD^VBECLU("<filterlist type='clinic'>")
"RTN","VBECLU3",34,0)
 . D CLIST("clinic","C")
"RTN","VBECLU3",35,0)
 . D ADD^VBECLU("</filterlist>")
"RTN","VBECLU3",36,0)
 ;
"RTN","VBECLU3",37,0)
 IF $$UP^XLFSTR(PARAM("TYPE"))="PROVIDER" S OKAY=3 D
"RTN","VBECLU3",38,0)
 . D ADD^VBECLU("<filterlist type='provider'>")
"RTN","VBECLU3",39,0)
 . D PLIST("provider")
"RTN","VBECLU3",40,0)
 . D ADD^VBECLU("</filterlist>")
"RTN","VBECLU3",41,0)
 ;
"RTN","VBECLU3",42,0)
 IF OKAY<1 D
"RTN","VBECLU3",43,0)
 . D ADD^VBECLU("<unspecified>")
"RTN","VBECLU3",44,0)
 . D ADD^VBECLU("<error message='List type not supported or not specified!'>")
"RTN","VBECLU3",45,0)
 . D ADD^VBECLU("</unspecified>")
"RTN","VBECLU3",46,0)
 ;
"RTN","VBECLU3",47,0)
 QUIT
"RTN","VBECLU3",48,0)
 ;
"RTN","VBECLU3",49,0)
 ; -- get list of clinics for patient lookup by clinic
"RTN","VBECLU3",50,0)
CLIST(ITEM,CHKVAL) ;
"RTN","VBECLU3",51,0)
 NEW NAME,IEN,IDATE,RDATE
"RTN","VBECLU3",52,0)
 SET IEN=0
"RTN","VBECLU3",53,0)
 SET CNT=0
"RTN","VBECLU3",54,0)
 FOR  S IEN=$O(^SC("AC","C",IEN)) Q:IEN<1  DO  ;loop through clinic xref
"RTN","VBECLU3",55,0)
 . S IDATE=$P($G(^SC(IEN,"I")),"^",1) ;inactivate date
"RTN","VBECLU3",56,0)
 . S RDATE=$P($G(^SC(IEN,"I")),"^",2) ;reactivate date
"RTN","VBECLU3",57,0)
 . IF (IDATE="")!(IDATE'<DT)!((IDATE<DT)&(RDATE>IDATE)) DO
"RTN","VBECLU3",58,0)
 . SET CNT=CNT+1
"RTN","VBECLU3",59,0)
 . SET NAME=$P(^SC(IEN,0),"^",1)
"RTN","VBECLU3",60,0)
 . DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",61,0)
 ;FOR  S NAME=$O(^SC("B",NAME)) Q:NAME=""  DO
"RTN","VBECLU3",62,0)
 ;. S IEN=0
"RTN","VBECLU3",63,0)
 ;. FOR  S IEN=$O(^SC("B",NAME,IEN)) Q:IEN<1  DO
"RTN","VBECLU3",64,0)
 ;.. IF $P($G(^SC(IEN,0)),"^",3)=CHKVAL DO  ;is a clinic
"RTN","VBECLU3",65,0)
 ;...  S IDATE=$P($G(^SC(IEN,"I")),"^",1) ;inactivate date
"RTN","VBECLU3",66,0)
 ;...  S RDATE=$P($G(^SC(IEN,"I")),"^",2) ;reactivate date
"RTN","VBECLU3",67,0)
 ;...  IF (IDATE="")!(IDATE'<DT)!((IDATE<DT)&(RDATE>IDATE)) DO
"RTN","VBECLU3",68,0)
 ;.... SET CNT=CNT+1
"RTN","VBECLU3",69,0)
 ;.... DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",70,0)
 QUIT
"RTN","VBECLU3",71,0)
 ;
"RTN","VBECLU3",72,0)
WLIST(ITEM) ;
"RTN","VBECLU3",73,0)
 NEW NAME,IEN
"RTN","VBECLU3",74,0)
 SET NAME=""
"RTN","VBECLU3",75,0)
 SET CNT=0
"RTN","VBECLU3",76,0)
 FOR  S NAME=$O(^DIC(42,"B",NAME)) Q:NAME=""  DO
"RTN","VBECLU3",77,0)
 . S IEN=0
"RTN","VBECLU3",78,0)
 . FOR  S IEN=$O(^DIC(42,"B",NAME,IEN)) Q:IEN<1  DO
"RTN","VBECLU3",79,0)
 .. SET CNT=CNT+1
"RTN","VBECLU3",80,0)
 .. DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",81,0)
 QUIT
"RTN","VBECLU3",82,0)
 ; -- get list of providers for patient lookup by provider
"RTN","VBECLU3",83,0)
 ;    from ORQPTQ2
"RTN","VBECLU3",84,0)
PLIST(ITEM) ;
"RTN","VBECLU3",85,0)
 NEW NAME,IEN
"RTN","VBECLU3",86,0)
 SET (NAME,IEN)=""
"RTN","VBECLU3",87,0)
 SET CNT=0
"RTN","VBECLU3",88,0)
 K ^TMP($J,"PLU-F")
"RTN","VBECLU3",89,0)
 FOR  S IEN=$O(^XUSEC("PROVIDER",IEN)) Q:IEN<1  I $$ACTIVE^XUSER(IEN) DO
"RTN","VBECLU3",90,0)
 . SET ^TMP($J,"PLU-F",$P(^VA(200,IEN,0),"^",1),IEN)=""
"RTN","VBECLU3",91,0)
 SET NAME=""
"RTN","VBECLU3",92,0)
 F  S NAME=$O(^TMP($J,"PLU-F",NAME)) Q:NAME=""  DO
"RTN","VBECLU3",93,0)
 . SET IEN=0 F  S IEN=$O(^TMP($J,"PLU-F",NAME,IEN)) Q:IEN<1  DO  W IEN
"RTN","VBECLU3",94,0)
 .. SET CNT=CNT+1
"RTN","VBECLU3",95,0)
 .. DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",96,0)
 ;
"RTN","VBECLU3",97,0)
 ;FOR  S NAME=$O(^VA(200,"B",NAME)) Q:NAME=""  DO
"RTN","VBECLU3",98,0)
 ;. S IEN=0
"RTN","VBECLU3",99,0)
 ;. FOR  S IEN=$O(^VA(200,"B",NAME,IEN)) Q:IEN<1  DO
"RTN","VBECLU3",100,0)
 ;.. I $D(^XUSEC("PROVIDER",IEN)),$$ACTIVE^XUSER(IEN) DO
"RTN","VBECLU3",101,0)
 ;... SET CNT=CNT+1
"RTN","VBECLU3",102,0)
 ;... DO ADD^VBECLU("<lineitem number='"_CNT_"' id='"_IEN_"' name='"_$$CHARCHK^XOBVLIB(NAME)_"'></lineitem>")
"RTN","VBECLU3",103,0)
 QUIT
"RTN","VBECLU3",104,0)
 ;
"RTN","VBECLU3",105,0)
TEST ;
"RTN","VBECLU3",106,0)
 NEW X,START,FINISH
"RTN","VBECLU3",107,0)
 DO TESTC
"RTN","VBECLU3",108,0)
 DO TESTP
"RTN","VBECLU3",109,0)
 DO TESTW
"RTN","VBECLU3",110,0)
 QUIT
"RTN","VBECLU3",111,0)
 ;
"RTN","VBECLU3",112,0)
TESTW ;
"RTN","VBECLU3",113,0)
 S START=$H
"RTN","VBECLU3",114,0)
 W !,"WARD LIST"
"RTN","VBECLU3",115,0)
 S X("TYPE")="wARd"
"RTN","VBECLU3",116,0)
 D GETLIST(.RESULT,.X)
"RTN","VBECLU3",117,0)
 S FINISH=$H
"RTN","VBECLU3",118,0)
 D DISPLAY(.RESULT)
"RTN","VBECLU3",119,0)
 W !,"Elapse Time: ",$P(FINISH,",",2)-$P(START,",",2)
"RTN","VBECLU3",120,0)
 K RESULT
"RTN","VBECLU3",121,0)
 QUIT
"RTN","VBECLU3",122,0)
 ;
"RTN","VBECLU3",123,0)
TESTC ;
"RTN","VBECLU3",124,0)
 S START=$H W !,"CLINIC LIST"
"RTN","VBECLU3",125,0)
 S X("TYPE")="ClinIC"
"RTN","VBECLU3",126,0)
 D GETLIST(.RESULT,.X)
"RTN","VBECLU3",127,0)
 S FINISH=$H
"RTN","VBECLU3",128,0)
 D DISPLAY(.RESULT)
"RTN","VBECLU3",129,0)
 W !,"Elapse Time: ",$P(FINISH,",",2)-$P(START,",",2)
"RTN","VBECLU3",130,0)
 K RESULT
"RTN","VBECLU3",131,0)
 QUIT
"RTN","VBECLU3",132,0)
 ;
"RTN","VBECLU3",133,0)
TESTP ;
"RTN","VBECLU3",134,0)
 S START=$H W !,"PROVIDER LIST"
"RTN","VBECLU3",135,0)
 S X("TYPE")="pROvIdER"
"RTN","VBECLU3",136,0)
 D GETLIST(.RESULT,.X)
"RTN","VBECLU3",137,0)
 S FINISH=$H
"RTN","VBECLU3",138,0)
 D DISPLAY(.RESULT)
"RTN","VBECLU3",139,0)
 W !,"Elapse Time: ",$P(FINISH,",",2)-$P(START,",",2)
"RTN","VBECLU3",140,0)
 Q
"RTN","VBECLU3",141,0)
DISPLAY(RESULT) ;
"RTN","VBECLU3",142,0)
 NEW I
"RTN","VBECLU3",143,0)
 S I=-1 FOR  SET I=$O(@RESULT@(I)) Q:I<1  W !!,@RESULT@(I)
"RTN","VBECLU3",144,0)
 QUIT
"RTN","VBECPOST")
0^49^B81361998
"RTN","VBECPOST",1,0)
VBECPOST ;HIOFO;BNT VBECS 1.0 Post Install Routine ; 01/28/05 11:17
"RTN","VBECPOST",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECPOST",3,0)
 ;
"RTN","VBECPOST",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECPOST",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECPOST",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECPOST",7,0)
 ; 
"RTN","VBECPOST",8,0)
 ; Integration Agreements:
"RTN","VBECPOST",9,0)
 ; Call to XPDUTL is supported by IA: #10141
"RTN","VBECPOST",10,0)
 ; Call to FILE^DICN is supported by IA: #10009
"RTN","VBECPOST",11,0)
 ; Call to FIND1^DIC is supported by IA: #
"RTN","VBECPOST",12,0)
 ; Reference to File 60 supported by IA: #10054
"RTN","VBECPOST",13,0)
 ; Reference to File 61 supported by IA: #10055
"RTN","VBECPOST",14,0)
 ; Reference to File 62 supported by IA: #
"RTN","VBECPOST",15,0)
 ; Reference to File 4  supported by IA: #10090
"RTN","VBECPOST",16,0)
 ;
"RTN","VBECPOST",17,0)
EN ;
"RTN","VBECPOST",18,0)
 ; Add 'OTHER' TOPOGRAPHY FIELD if it doesn't exist.
"RTN","VBECPOST",19,0)
 I '$$TOPOG() Q
"RTN","VBECPOST",20,0)
 ; Add 'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE if it doesn't exist.
"RTN","VBECPOST",21,0)
 I '$$COLSAMP() Q
"RTN","VBECPOST",22,0)
 ; Add 'VBECS...' LABORATORY TESTS if they don't exist.
"RTN","VBECPOST",23,0)
 D LABTSTS
"RTN","VBECPOST",24,0)
 ; Add PARAMETERS
"RTN","VBECPOST",25,0)
 D XPAR
"RTN","VBECPOST",26,0)
 ; Add Generic Blood Inventory for Lab workload processing
"RTN","VBECPOST",27,0)
 D BLDINV
"RTN","VBECPOST",28,0)
 ;
"RTN","VBECPOST",29,0)
 Q
"RTN","VBECPOST",30,0)
 ;
"RTN","VBECPOST",31,0)
TOPOG() ; Make sure the 'OTHER' TOPOGRAPHY FIELD file 61 entry exists.
"RTN","VBECPOST",32,0)
 D BMES^XPDUTL("Adding 'OTHER' TOPOGRAPHY FIELD.")
"RTN","VBECPOST",33,0)
 D FIND^DIC(61,"","","","OTHER","","","","","OUT","ERR")
"RTN","VBECPOST",34,0)
 I $D(OUT("DILIST",1,1)) D  Q 1
"RTN","VBECPOST",35,0)
 . D MES^XPDUTL("   'OTHER' TOPOGRAPHY FIELD already exists.")
"RTN","VBECPOST",36,0)
 N VBECFDA
"RTN","VBECPOST",37,0)
 S VBECFDA(1,61,"+1,",.01)="OTHER"
"RTN","VBECPOST",38,0)
 S VBECFDA(1,61,"+1,",2)="OTHER"
"RTN","VBECPOST",39,0)
 D UPDATE^DIE("E","VBECFDA(1)","","OUT")
"RTN","VBECPOST",40,0)
 I $D(OUT("ERROR")) D  Q 0
"RTN","VBECPOST",41,0)
 . D MES^XPDUTL("   ***Error adding 'OTHER' TOPOGRAPHY FIELD.***")
"RTN","VBECPOST",42,0)
 D MES^XPDUTL("   'OTHER' TOPOGRAPHY FIELD added successfully.")
"RTN","VBECPOST",43,0)
 Q $S($D(OUT("ERROR")):0,1:1)
"RTN","VBECPOST",44,0)
 ;
"RTN","VBECPOST",45,0)
COLSAMP() ; Add the VBECS NO SPECIMEN REQUIRED entry to file 62
"RTN","VBECPOST",46,0)
 D BMES^XPDUTL("Adding 'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE.")
"RTN","VBECPOST",47,0)
 N VBIENS,VBECFDA,CNT,OUT
"RTN","VBECPOST",48,0)
 D FIND^DIC(62,"","","","VBECS - NO SPECIMEN REQUIRED","","","","","OUT","ERR")
"RTN","VBECPOST",49,0)
 I $D(OUT("DILIST",1,1)) D  Q OUT("DILIST",2,1)
"RTN","VBECPOST",50,0)
 . D MES^XPDUTL("   'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE already exists.")
"RTN","VBECPOST",51,0)
 S CNT=2
"RTN","VBECPOST",52,0)
 S VBECFDA(1,62,"+1,",.01)="VBECS - NO SPECIMEN REQUIRED"
"RTN","VBECPOST",53,0)
 S VBECFDA(1,62,"+1,",2)="OTHER"
"RTN","VBECPOST",54,0)
 S VBECFDA(1,62,"+1,",6)="BLOOD BANK"
"RTN","VBECPOST",55,0)
 S VBECFDA(1,62,"+1,",7)="NO"
"RTN","VBECPOST",56,0)
 S VBECFDA(1,62.01,"+"_CNT_",+1,",.01)="NRQ"
"RTN","VBECPOST",57,0)
 ;D ACNAREA(.VBECARY)
"RTN","VBECPOST",58,0)
 ;F VBECI=1:1 S VBECX=$G(VBECARY(VBECI)) Q:VBECX=""  D
"RTN","VBECPOST",59,0)
 ;. S CNT=CNT+1
"RTN","VBECPOST",60,0)
 ;. S VBECFDA(1,62.02,"+"_CNT_",+1,",.01)=$P(VBECX,"^")
"RTN","VBECPOST",61,0)
 D UPDATE^DIE("E","VBECFDA(1)","VBIENS","OUT")
"RTN","VBECPOST",62,0)
 I $D(OUT("DIERR")) D  Q 0
"RTN","VBECPOST",63,0)
 . D MES^XPDUTL("   ***Error adding 'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE.***")
"RTN","VBECPOST",64,0)
 I $D(VBIENS(1)) S VBECARY="" D ACNAREA(.VBECARY) F VBECI=1:1 S VBECARY=$O(VBECARY(VBECARY)) Q:VBECARY=""  D
"RTN","VBECPOST",65,0)
  . S ^LAB(62,VBIENS(1),9,0)="^62.02PA^"_VBECARY_"^"_VBECI
"RTN","VBECPOST",66,0)
  . S ^LAB(62,VBIENS(1),9,$P(VBECARY(VBECARY),"^",3),0)=$P(VBECARY(VBECARY),"^",3)
"RTN","VBECPOST",67,0)
 D MES^XPDUTL("   'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE added successfully.")
"RTN","VBECPOST",68,0)
 Q VBIENS(1)
"RTN","VBECPOST",69,0)
 ;
"RTN","VBECPOST",70,0)
LABTSTS ; Add the VBECS Lab Tests to file 60
"RTN","VBECPOST",71,0)
 ; Input: VBSAMP = IEN of the VBECS - NO SPECIMEN REQUIRED
"RTN","VBECPOST",72,0)
 ;                 Collection Sample file #62 entry.
"RTN","VBECPOST",73,0)
 D BMES^XPDUTL("Adding 'VBECS...' LABORATORY TESTS.")
"RTN","VBECPOST",74,0)
 N VBECFDA,CNT,OUT,VBECLIEN
"RTN","VBECPOST",75,0)
 D ACNAREA(.VBECARY)
"RTN","VBECPOST",76,0)
 ;
"RTN","VBECPOST",77,0)
 S CNT=2
"RTN","VBECPOST",78,0)
 F VBECI=2:1  S VBDATA=$P($T(LST+VBECI),";;",2) Q:VBDATA["***"  D
"RTN","VBECPOST",79,0)
 . D FIND^DIC(60,"","","",$P(VBDATA,"^",1),"","","","","OUT","ERR")
"RTN","VBECPOST",80,0)
 . I $D(OUT("DILIST",1,1)) D  Q
"RTN","VBECPOST",81,0)
 . . D MES^XPDUTL("'"_$P(VBDATA,"^",1)_"' LABORATORY TEST already exists.")
"RTN","VBECPOST",82,0)
 . D MES^XPDUTL("---Adding '"_$P(VBDATA,"^",1)_"' LABORATORY TEST.")
"RTN","VBECPOST",83,0)
 . ;
"RTN","VBECPOST",84,0)
 . N VBECLIEN,VBECFDA,VBIENS,OUT
"RTN","VBECPOST",85,0)
 . S VBECFDA(1,60,"+1,",.01)=$P(VBDATA,"^",1)
"RTN","VBECPOST",86,0)
 . S VBECFDA(1,60,"+1,",3)="O"
"RTN","VBECPOST",87,0)
 . S VBECFDA(1,60,"+1,",17)=$O(^LAB(62.05,"B","STAT",0))
"RTN","VBECPOST",88,0)
 . S VBECFDA(1,60,"+1,",51)=$P(VBDATA,"^",4)
"RTN","VBECPOST",89,0)
 . S VBECFDA(1,60,"+1,",4)="BB"
"RTN","VBECPOST",90,0)
 . S VBECFDA(1,60,"+1,",8)=$P(VBDATA,"^",7)
"RTN","VBECPOST",91,0)
 . ;
"RTN","VBECPOST",92,0)
 . I $P(VBDATA,"^",6)="NRQ" D
"RTN","VBECPOST",93,0)
 . . S VBECFDA(1,60.03,"+"_CNT_",+1,",.01)=$O(^LAB(62,"B","VBECS - NO SPECIMEN REQUIRED",0))
"RTN","VBECPOST",94,0)
 . I $P(VBDATA,"^",6)="" D
"RTN","VBECPOST",95,0)
 . . S VBCOL=$$DIR($P(VBDATA,"^",1))
"RTN","VBECPOST",96,0)
 . . I +VBCOL S VBECFDA(1,60.03,"+"_CNT_",+1,",.01)=+VBCOL
"RTN","VBECPOST",97,0)
 . D UPDATE^DIE("","VBECFDA(1)","VBIENS","OUT")
"RTN","VBECPOST",98,0)
 . I $D(OUT("DIERR")) D  Q
"RTN","VBECPOST",99,0)
 . . D MES^XPDUTL("   ***Error adding '"_$P(VBDATA,"^",1)_"' LABORATORY TEST***.")
"RTN","VBECPOST",100,0)
 . . I $D(^LAB(60,"B",$P(VBDATA,"^",1))) D
"RTN","VBECPOST",101,0)
 . . . D MES^XPDUTL("   Deleting entry...")
"RTN","VBECPOST",102,0)
 . . . S DA=$O(^LAB(60,"B",$P(VBDATA,"^",1),0)) K DO
"RTN","VBECPOST",103,0)
 . . . S DIE="^LAB(60,",DR=".01///@",DIDEL=60
"RTN","VBECPOST",104,0)
 . . . D ^DIE
"RTN","VBECPOST",105,0)
 . I $D(VBECARY),VBIENS(1),'$D(OUT("DIERR")) D
"RTN","VBECPOST",106,0)
 . . S I="" F CNT=1:1 S I=$O(VBECARY(I)) Q:I=""  D
"RTN","VBECPOST",107,0)
 . . . S X=VBECARY(I)
"RTN","VBECPOST",108,0)
 . . . S ^LAB(60,VBIENS(1),8,0)="^60.11PA^"_$P(X,"^",4)_"^"_CNT
"RTN","VBECPOST",109,0)
 . . . S ^LAB(60,VBIENS(1),8,I,0)=$P(X,"^",4)_"^"_$P(X,"^",3)
"RTN","VBECPOST",110,0)
 . D MES^XPDUTL("   '"_$P(VBDATA,"^",1)_"' added successfully.")
"RTN","VBECPOST",111,0)
 . Q
"RTN","VBECPOST",112,0)
 Q
"RTN","VBECPOST",113,0)
DIR(LABTST) ; Ask user for Collection Sample for Lab Test
"RTN","VBECPOST",114,0)
 ;
"RTN","VBECPOST",115,0)
 S DIR("A")="Select COLLECTION SAMPLE for Lab Test "_LABTST
"RTN","VBECPOST",116,0)
 S DIR(0)="P^62:EMZ"
"RTN","VBECPOST",117,0)
 D ^DIR
"RTN","VBECPOST",118,0)
 Q Y
"RTN","VBECPOST",119,0)
 ;
"RTN","VBECPOST",120,0)
XPAR ;Main entry point
"RTN","VBECPOST",121,0)
 ;
"RTN","VBECPOST",122,0)
 D BMES^XPDUTL("Adding VBECS VISTALINK PARAMETERS.")
"RTN","VBECPOST",123,0)
 N VBDATA
"RTN","VBECPOST",124,0)
 F VBECI=1:1 S VBDATA=$P($T(PARMS+VBECI),";;",2) Q:VBDATA["***"  D
"RTN","VBECPOST",125,0)
 . D MES^XPDUTL("---Adding '"_VBDATA_"' PARAMETER.")
"RTN","VBECPOST",126,0)
 . I $$CONTEXT^VBECRPCC(VBDATA,$$ENCRYP^ROUTINE("VBECS RPC Security")) D
"RTN","VBECPOST",127,0)
 . . D MES^XPDUTL("   ***Error adding '"_VBDATA_"' PARAMETER.***")
"RTN","VBECPOST",128,0)
 . E  D MES^XPDUTL("   '"_VBDATA_"' PARAMETER added successfully.")
"RTN","VBECPOST",129,0)
 ; Check Post Install questions and create VistALink IP Address and Port parameters.
"RTN","VBECPOST",130,0)
 I $D(XPDQUES("POSVLIPADDRESS"))&($D(XPDQUES("POSVLPORT"))) D
"RTN","VBECPOST",131,0)
 . D MES^XPDUTL("---Adding 'VISTALINK IP ADDRESS' and 'VISTALINK PORT NUMBER' PARAMETERS.")
"RTN","VBECPOST",132,0)
 . I '$$CHGADPRT^VBECRPCC(XPDQUES("POSVLIPADDRESS"),XPDQUES("POSVLPORT")) D  Q
"RTN","VBECPOST",133,0)
 . . D MES^XPDUTL("   'VISTALINK IP ADDRESS' and 'VISTALINK PORT NUMBER' PARAMETERS added successfully.")
"RTN","VBECPOST",134,0)
 . D MES^XPDUTL("   ***Error adding 'VISTALINK IP ADDRESS' and 'VISTALINK PORT NUMBER' PARAMETERS.***")
"RTN","VBECPOST",135,0)
 Q
"RTN","VBECPOST",136,0)
 ;
"RTN","VBECPOST",137,0)
ACNAREA(VBECARY) ; Return Lab Blood Bank Accession Areas
"RTN","VBECPOST",138,0)
 N CNT
"RTN","VBECPOST",139,0)
 S (X,CNT)=0
"RTN","VBECPOST",140,0)
 F  S X=$O(^LRO(68,X)) Q:X'?1N.N  D
"RTN","VBECPOST",141,0)
 . Q:$P(^LRO(68,X,0),"^",2)'="BB"
"RTN","VBECPOST",142,0)
 . S DIV=$O(^LRO(68,X,3,0))_","
"RTN","VBECPOST",143,0)
 . D GETS^DIQ(4,DIV,".01",,"OUT","ERR")
"RTN","VBECPOST",144,0)
 . S INST=$G(OUT(4,DIV,.01))
"RTN","VBECPOST",145,0)
 . S CNT=CNT+1 S VBECARY(+DIV)=$P(^LRO(68,X,0),"^")_"^"_INST_"^"_X_"^"_$O(^LRO(68,X,3,0))
"RTN","VBECPOST",146,0)
 . Q
"RTN","VBECPOST",147,0)
 Q
"RTN","VBECPOST",148,0)
 ;
"RTN","VBECPOST",149,0)
BLDINV ; Add Generic VBECS Blood Inventory for Lab Workload Reporting
"RTN","VBECPOST",150,0)
 D BMES^XPDUTL("Adding generic VBECS BLOOD INVENTORY")
"RTN","VBECPOST",151,0)
 N VBECFDA
"RTN","VBECPOST",152,0)
 I $$FIND1^DIC(65,"","MX","VBECS1","","","ERR") D  Q
"RTN","VBECPOST",153,0)
 . D MES^XPDUTL("   'VBECS1' BLOOD INVENTORY already exists.")
"RTN","VBECPOST",154,0)
 D MES^XPDUTL("---Adding 'VBECS1' BLOOD INVENTORY.")
"RTN","VBECPOST",155,0)
 S VBECFDA(1,65,"+1,",.01)="VBECS1"
"RTN","VBECPOST",156,0)
 S VBECFDA(1,65,"+1,",.02)="VBECS SYSTEM"
"RTN","VBECPOST",157,0)
 S VBECFDA(1,65,"+1,",.03)="1.0"
"RTN","VBECPOST",158,0)
 S VBECFDA(1,65,"+1,",.04)="VBECS PRODUCT"
"RTN","VBECPOST",159,0)
 S VBECFDA(1,65,"+1,",.05)=$$NOW^XLFDT()
"RTN","VBECPOST",160,0)
 S VBECFDA(1,65,"+1,",.06)="3100101"
"RTN","VBECPOST",161,0)
 S VBECFDA(1,65,"+1,",.07)="N/A"
"RTN","VBECPOST",162,0)
 S VBECFDA(1,65,"+1,",.08)="N/A"
"RTN","VBECPOST",163,0)
 ; Need to determine primary division
"RTN","VBECPOST",164,0)
 S VBECFDA(1,65,"+1,",.16)="589"
"RTN","VBECPOST",165,0)
 S VBECFDA(1,65,"+1,",4.2)=$$NOW^XLFDT()
"RTN","VBECPOST",166,0)
 D UPDATE^DIE("","VBECFDA(1)","VBIENS","OUT")
"RTN","VBECPOST",167,0)
 I $D(OUT("DIERR")) D  Q
"RTN","VBECPOST",168,0)
 . D MES^XPDUTL("   ***Error adding 'VBECS1' BLOOD INVENTORY.***")
"RTN","VBECPOST",169,0)
 D MES^XPDUTL("   'VBECS1' BLOOD INVENTORY added successfully.")
"RTN","VBECPOST",170,0)
 Q
"RTN","VBECPOST",171,0)
 ;
"RTN","VBECPOST",172,0)
BLDDONOR ; Add Generic VBECS BLOOD DONOR for Lab Workload Reporting
"RTN","VBECPOST",173,0)
 N VBECFDA
"RTN","VBECPOST",174,0)
 Q
"RTN","VBECPOST",175,0)
 ;
"RTN","VBECPOST",176,0)
DEL ; Delete entries for testing
"RTN","VBECPOST",177,0)
 N DA,DR,DIE,DIDEL,VBDATA,VBIEN,X
"RTN","VBECPOST",178,0)
 D FIND^DIC(61,"","","","OTHER","","","","","OUT","ERR")
"RTN","VBECPOST",179,0)
 I $D(OUT("DILIST",1,1)) D
"RTN","VBECPOST",180,0)
 . D MES^XPDUTL("Deleting 'OTHER' TOPOGRAPHY FILE Entry")
"RTN","VBECPOST",181,0)
 . S X=0
"RTN","VBECPOST",182,0)
 . F I=0:1 S X=$O(OUT("DILIST",1,I)) Q:X=""  D
"RTN","VBECPOST",183,0)
 . . S DA=OUT("DILIST",2,X),DIE="^LAB(61,",DR=".01///@",DIDEL=61 D ^DIE
"RTN","VBECPOST",184,0)
 K DA,DR,DIE,DIDEL,VBIEN
"RTN","VBECPOST",185,0)
 ;
"RTN","VBECPOST",186,0)
 D FIND^DIC(62,"","","","VBECS - NO SPECIMEN REQUIRED","","","","","OUT","ERR")
"RTN","VBECPOST",187,0)
 I $D(OUT("DILIST",1,1)) D
"RTN","VBECPOST",188,0)
 . D MES^XPDUTL("Deleting 'VBECS - NO SPECIMEN REQUIRED' COLLECTION SAMPLE")
"RTN","VBECPOST",189,0)
 . S X=0
"RTN","VBECPOST",190,0)
 . F I=0:1 S X=$O(OUT("DILIST",1,I)) Q:X=""  D
"RTN","VBECPOST",191,0)
 . . S DA=OUT("DILIST",2,X),DIE="^LAB(62,",DR=".01///@",DIDEL=62 D ^DIE
"RTN","VBECPOST",192,0)
 K DA,DR,DIE,DIDEL,VBIEN
"RTN","VBECPOST",193,0)
 ;
"RTN","VBECPOST",194,0)
 S VBIEN=$$FIND1^DIC(65,"","MX","VBECS1","","","ERR")
"RTN","VBECPOST",195,0)
 I +VBIEN D
"RTN","VBECPOST",196,0)
 . D MES^XPDUTL("Deleting 'VBECS1' BLOOD DONOR")
"RTN","VBECPOST",197,0)
 . S DA=VBIEN,DIE="^LRD(65,",DR=".01///@",DIDEL=65 D ^DIE
"RTN","VBECPOST",198,0)
 K DA,DR,DIE,DIDEL,VBIEN
"RTN","VBECPOST",199,0)
 ;
"RTN","VBECPOST",200,0)
 F VBECI=2:1  S VBDATA=$P($T(LST+VBECI),";;",2) K DO Q:$P(VBDATA,"^",1)="***"  D
"RTN","VBECPOST",201,0)
 . D FIND^DIC(60,"","","",$P(VBDATA,"^",1),"","","","","OUT","ERR")
"RTN","VBECPOST",202,0)
 . I $D(OUT("DILIST",1,1)) D  Q
"RTN","VBECPOST",203,0)
 . . D MES^XPDUTL("Deleting '"_$P(VBDATA,"^",1)_"' LABORATORY TEST")
"RTN","VBECPOST",204,0)
 . . S X=0
"RTN","VBECPOST",205,0)
 . . F I=0:1 S X=$O(OUT("DILIST",1,I)) Q:X=""  D
"RTN","VBECPOST",206,0)
 . . . S DA=OUT("DILIST",2,X),DIE="^LAB(60,",DR=".01///@",DIDEL=60 D ^DIE
"RTN","VBECPOST",207,0)
 Q
"RTN","VBECPOST",208,0)
 ;
"RTN","VBECPOST",209,0)
LST ;;NAME^TYPE^HIGHEST URGENCY ALLOWED^PRINT NAME^SUBSCRIPT^COLLECTION SAMPLE^UNIQUE COLLECTION SAMPLE
"RTN","VBECPOST",210,0)
 ;;.01 ^3   ^17                      ^51        ^4        ^60.03,.01        ^8
"RTN","VBECPOST",211,0)
 ;;ABO/RH - LAB^O^STAT^ABO RH^BB^^1
"RTN","VBECPOST",212,0)
 ;;ANTIBODY SCREEN - LAB^O^STAT^AB SCRN^BB^^1
"RTN","VBECPOST",213,0)
 ;;DIRECT ANTIGLOBULIN TEST - LAB^O^STAT^DAT^BB^^1
"RTN","VBECPOST",214,0)
 ;;TRANSFUSION REACTION WORKUP - LAB^O^STAT^TRW^BB^^1
"RTN","VBECPOST",215,0)
 ;;TYPE & SCREEN - LAB^O^STAT^T&S^BB^^1
"RTN","VBECPOST",216,0)
 ;;CRYOPRECIPITATE - LAB^O^STAT^CRYOPRE^BB^NRQ^1
"RTN","VBECPOST",217,0)
 ;;FRESH FROZEN PLASMA - LAB^O^STAT^FFP^BB^NRQ^1
"RTN","VBECPOST",218,0)
 ;;OTHER - LAB^O^STAT^VBOTHER^BB^NRQ^1
"RTN","VBECPOST",219,0)
 ;;PLATELETS - LAB^O^STAT^PLTLTS^BB^NRQ^1
"RTN","VBECPOST",220,0)
 ;;RED BLOOD CELLS - LAB^O^STAT^RED BLD^BB^NRQ^1
"RTN","VBECPOST",221,0)
 ;;WHOLE BLOOD - LAB^O^STAT^WB^BB^NRQ^1
"RTN","VBECPOST",222,0)
 ;;***^Add new entries above this line
"RTN","VBECPOST",223,0)
 Q
"RTN","VBECPOST",224,0)
 ;
"RTN","VBECPOST",225,0)
PARMS ; Build VBECS PARAMETERS
"RTN","VBECPOST",226,0)
 ;;VBECS Order Entry
"RTN","VBECPOST",227,0)
 ;;VBECS Workload
"RTN","VBECPOST",228,0)
 ;;VBECS Update Workload Event
"RTN","VBECPOST",229,0)
 ;;VBECS Patient ABO_RH
"RTN","VBECPOST",230,0)
 ;;VBECS Patient TRRX
"RTN","VBECPOST",231,0)
 ;;VBECS Patient ABID
"RTN","VBECPOST",232,0)
 ;;VBECS Patient Available Units
"RTN","VBECPOST",233,0)
 ;;VBECS Blood Products
"RTN","VBECPOST",234,0)
 ;;VBECS Patient Transfusion History
"RTN","VBECPOST",235,0)
 ;;VBECS Patient Report
"RTN","VBECPOST",236,0)
 ;;VBECS DSS Extract
"RTN","VBECPOST",237,0)
 ;;***^Add new entries above this line
"RTN","VBECPOST",238,0)
 Q
"RTN","VBECPOST",239,0)
 ;
"RTN","VBECPOST",240,0)
BI ;;UNIT ID^SOURCE^INVOICE#^COMPONENT^DATE/TIME RECEIVED^EXP DATE/TIME^ABO GROUP^RH TYPE^DIVISION^DISP DATE
"RTN","VBECPOST",241,0)
 ;;.01    ^.02   ^.03     ^.04      ^.05               ^.06          ^.07      ^.08    ^.16     ^4.2
"RTN","VBECPOST",242,0)
 ;;VBECS GENERIC UNIT^VBECS SYSTEM^1.0^VBECS PRODUCT^^^N/A^N/A^^
"RTN","VBECPOST",243,0)
 Q
"RTN","VBECRL")
0^50^B10917646
"RTN","VBECRL",1,0)
VBECRL ;HOIFO/BNT - VBECS VistALink Client RawLink Methods ;07/27/2002  13:00
"RTN","VBECRL",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRL",3,0)
 ;
"RTN","VBECRL",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRL",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRL",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRL",7,0)
 ; 
"RTN","VBECRL",8,0)
 ; Integration Agreements:
"RTN","VBECRL",9,0)
 ;  Call to $$XMLHDR^XOBVLIB Supported by IA 4090
"RTN","VBECRL",10,0)
 ;  Call to %ZISTCP is supported by IA: 10104
"RTN","VBECRL",11,0)
 ;  Call to %ZISUTL is supported by IA: 2119
"RTN","VBECRL",12,0)
 ;  Call to ^%ZOSF is supported by IA: 10096
"RTN","VBECRL",13,0)
 ;
"RTN","VBECRL",14,0)
 QUIT
"RTN","VBECRL",15,0)
 ;
"RTN","VBECRL",16,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",17,0)
 ;                          Methods for Read fromto TCP/IP Socket
"RTN","VBECRL",18,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",19,0)
READ(VBECROOT,VBECREAD,VBECTO,VBECFRST,VBECSTOP) ;
"RTN","VBECRL",20,0)
 NEW X,EOT,OUT,STR,LINE,PIECES,DONE,TOFLAG,VBECCNT,VBECLEN,VBECBH,VBECEH,BS,ES,VBECOK,VBECX
"RTN","VBECRL",21,0)
 ;
"RTN","VBECRL",22,0)
 SET STR="",EOT=$C(4),DONE=0,LINE=0,VBECOK=1
"RTN","VBECRL",23,0)
 ;
"RTN","VBECRL",24,0)
 ; -- READ tcp stream to global buffer | main calling tags are EXECUTE^VBECVLC and NXTCALL^VBECVLL
"RTN","VBECRL",25,0)
 FOR  READ VBECX#VBECREAD:VBECTO SET TOFLAG=$T DO:VBECFRST CHK DO:'VBECSTOP  QUIT:DONE
"RTN","VBECRL",26,0)
 . ;
"RTN","VBECRL",27,0)
 . ; -- if length of (new intake + current) is too large for buffer then store current
"RTN","VBECRL",28,0)
 . ;IF $L(STR)+$L(VBECX)>400 DO ADD(STR) S STR=""
"RTN","VBECRL",29,0)
 . F  Q:$L(STR)+$L(VBECX)<512  D  Q:$L(STR)+$L(VBECX)<512
"RTN","VBECRL",30,0)
  . . I $L(STR),STR'[">" D ADD($E(STR,1,512)) S STR=$E(STR,513,99999) Q
"RTN","VBECRL",31,0)
  . . S VBECK1=$F(STR,">") D ADD($E(STR,1,(VBECK1-1))) S STR=$E(STR,VBECK1,99999)
"RTN","VBECRL",32,0)
 . SET STR=STR_VBECX
"RTN","VBECRL",33,0)
 . ;
"RTN","VBECRL",34,0)
 . ; -- add node at each line-feed character
"RTN","VBECRL",35,0)
 . FOR  QUIT:STR'[$C(10)  DO ADD($P(STR,$C(10))) SET STR=$P(STR,$C(10),2,999)
"RTN","VBECRL",36,0)
 . ;
"RTN","VBECRL",37,0)
 . ; -- if end-of-text marker found then wrap up and quit
"RTN","VBECRL",38,0)
 . IF STR[EOT SET STR=$P(STR,EOT) DO ADD(STR) SET DONE=1 QUIT
"RTN","VBECRL",39,0)
 . ; 
"RTN","VBECRL",40,0)
 . ; -- M XML parser cannot handle an element or attribute
"RTN","VBECRL",41,0)
 . ; -- name split across nodes
"RTN","VBECRL",42,0)
 . SET PIECES=$L(STR,">")
"RTN","VBECRL",43,0)
 . ;IF PIECES>1 DO ADD($P(STR,">",1,PIECES-1)_">") SET STR=$P(STR,">",PIECES,999)
"RTN","VBECRL",44,0)
 . I PIECES>1 D
"RTN","VBECRL",45,0)
  . . S VBECK1=$F(STR,">") D ADD($E(STR,1,(VBECK1-1)))
"RTN","VBECRL",46,0)
  . . S STR=$E(STR,VBECK1,99999)
"RTN","VBECRL",47,0)
 ;
"RTN","VBECRL",48,0)
 QUIT VBECOK
"RTN","VBECRL",49,0)
 ;
"RTN","VBECRL",50,0)
ADD(TXT) ; -- add new intake line
"RTN","VBECRL",51,0)
 SET LINE=LINE+1
"RTN","VBECRL",52,0)
 SET @VBECROOT@(LINE)=TXT
"RTN","VBECRL",53,0)
 QUIT
"RTN","VBECRL",54,0)
 ;
"RTN","VBECRL",55,0)
CHK ; -- check if first read and change timeout and chars to read
"RTN","VBECRL",56,0)
 IF 'TOFLAG,VBECFRST,$GET(VBECX)="" SET VBECSTOP=1,DONE=1 QUIT
"RTN","VBECRL",57,0)
 SET VBECFRST=0
"RTN","VBECRL",58,0)
 SET VBECREAD=100,VBECTO=1
"RTN","VBECRL",59,0)
 QUIT
"RTN","VBECRL",60,0)
 ;
"RTN","VBECRL",61,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",62,0)
 ;                      Methods for Openning and Closing Socket
"RTN","VBECRL",63,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",64,0)
OPEN(VBECPRMS) ; -- Open tcp/ip socket
"RTN","VBECRL",65,0)
 NEW I,POP
"RTN","VBECRL",66,0)
 SET POP=1
"RTN","VBECRL",67,0)
 DO INIT
"RTN","VBECRL",68,0)
 ;
"RTN","VBECRL",69,0)
 DO SAVDEV^%ZISUTL("VBECS CLIENT")
"RTN","VBECRL",70,0)
 FOR I=1:1:VBECPRMS("RETRIES") DO CALL^%ZISTCP(VBECPRMS("ADDRESS"),VBECPRMS("PORT")) QUIT:'POP
"RTN","VBECRL",71,0)
 ; Device open
"RTN","VBECRL",72,0)
 IF 'POP USE IO QUIT 1
"RTN","VBECRL",73,0)
 ; Device not open
"RTN","VBECRL",74,0)
 QUIT 'POP
"RTN","VBECRL",75,0)
 ;
"RTN","VBECRL",76,0)
CLOSE(VBECPRMS) ; -- close tcp/ip socket
"RTN","VBECRL",77,0)
 ; -- tell server to Stop() connection if close message is needed to close
"RTN","VBECRL",78,0)
 IF $GET(VBECPRMS("CLOSE MESSAGE"))]"" DO
"RTN","VBECRL",79,0)
 . DO PRE
"RTN","VBECRL",80,0)
 . DO WRITE($$XMLHDR^XOBVLIB()_VBECPRMS("CLOSE MESSAGE"))
"RTN","VBECRL",81,0)
 . DO POST
"RTN","VBECRL",82,0)
 ;
"RTN","VBECRL",83,0)
 DO FINAL
"RTN","VBECRL",84,0)
 DO CLOSE^%ZISTCP
"RTN","VBECRL",85,0)
 DO USE^%ZISUTL("VBECS CLIENT")
"RTN","VBECRL",86,0)
 DO RMDEV^%ZISUTL("VBECS CLIENT")
"RTN","VBECRL",87,0)
 QUIT
"RTN","VBECRL",88,0)
 ;
"RTN","VBECRL",89,0)
INIT ; -- set up variables needed in tcp/ip processing
"RTN","VBECRL",90,0)
 SET VBECOS=$S(^%ZOSF("OS")["DSM":"DSM",^("OS")["UNIX":"UNIX",^("OS")["OpenM":"OpenM",1:"MSM")
"RTN","VBECRL",91,0)
 QUIT
"RTN","VBECRL",92,0)
 ;
"RTN","VBECRL",93,0)
FINAL ; -- kill variables used in tcp/ip processing
"RTN","VBECRL",94,0)
 KILL VBECOS
"RTN","VBECRL",95,0)
 QUIT
"RTN","VBECRL",96,0)
 ;
"RTN","VBECRL",97,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",98,0)
 ;                          Methods for Writing to TCP/IP Socket
"RTN","VBECRL",99,0)
 ; ------------------------------------------------------------------------------------
"RTN","VBECRL",100,0)
PRE ; -- prepare socket for writing
"RTN","VBECRL",101,0)
 SET $X=0
"RTN","VBECRL",102,0)
 QUIT
"RTN","VBECRL",103,0)
 ;
"RTN","VBECRL",104,0)
WRITE(STR) ; -- Write a data string to socket
"RTN","VBECRL",105,0)
 IF VBECOS="MSM" WRITE STR QUIT
"RTN","VBECRL",106,0)
 WRITE:($X+$L(STR))>511 !
"RTN","VBECRL",107,0)
 WRITE STR
"RTN","VBECRL",108,0)
 QUIT
"RTN","VBECRL",109,0)
 ;
"RTN","VBECRL",110,0)
POST ; -- send eot and flush socket buffer
"RTN","VBECRL",111,0)
 DO WRITE($C(4))
"RTN","VBECRL",112,0)
 WRITE:$X>0 !
"RTN","VBECRL",113,0)
 QUIT
"RTN","VBECRL",114,0)
 ;
"RTN","VBECRPC")
0^70^B37044839
"RTN","VBECRPC",1,0)
VBECRPC ; HOIFO/BNT - VBECS Remote Procedure Utilities;Mar 23,2005
"RTN","VBECRPC",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPC",3,0)
 ;
"RTN","VBECRPC",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPC",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPC",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPC",7,0)
 ; 
"RTN","VBECRPC",8,0)
 ; Integration Agreements:
"RTN","VBECRPC",9,0)
 ; Reference to $$GET1^DIQ supported by IA #2052
"RTN","VBECRPC",10,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPC",11,0)
 ;
"RTN","VBECRPC",12,0)
 QUIT
"RTN","VBECRPC",13,0)
 ;
"RTN","VBECRPC",14,0)
STRIPL(VBDATA) ;STRIP TRAILING SPACES
"RTN","VBECRPC",15,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)
"RTN","VBECRPC",16,0)
 Q VBDATA
"RTN","VBECRPC",17,0)
STRIPL3(VBDATA)  ;STRIP LAST 3 CHARACTERS
"RTN","VBECRPC",18,0)
 S VBDATA=$E(VBDATA,1,$L(VBDATA)-3)
"RTN","VBECRPC",19,0)
 Q VBDATA
"RTN","VBECRPC",20,0)
BEGROOT(X) ; Add beginning root element
"RTN","VBECRPC",21,0)
 D ADD("<"_X_">")
"RTN","VBECRPC",22,0)
 Q
"RTN","VBECRPC",23,0)
 ;
"RTN","VBECRPC",24,0)
ENDROOT(X) ; Add end root element
"RTN","VBECRPC",25,0)
 D ADD("</"_X_">")
"RTN","VBECRPC",26,0)
 Q
"RTN","VBECRPC",27,0)
 ;
"RTN","VBECRPC",28,0)
ADD(STR) ; Add XML to result global
"RTN","VBECRPC",29,0)
 S VBECCNT=VBECCNT+1
"RTN","VBECRPC",30,0)
 S @RESULTS@(VBECCNT)=STR
"RTN","VBECRPC",31,0)
 Q
"RTN","VBECRPC",32,0)
 ;
"RTN","VBECRPC",33,0)
ERROR(STR) ; Return ERROR
"RTN","VBECRPC",34,0)
 ;
"RTN","VBECRPC",35,0)
 D BEGROOT("Error")
"RTN","VBECRPC",36,0)
 D ADD("<Text>"_$$CHARCHK^XOBVLIB(STR)_"</Text>")
"RTN","VBECRPC",37,0)
 D ENDROOT("Error")
"RTN","VBECRPC",38,0)
 Q
"RTN","VBECRPC",39,0)
 ;
"RTN","VBECRPC",40,0)
BADRPC(RPC,RTN,OPTION) ; Send back information on bad RPC call
"RTN","VBECRPC",41,0)
 ;
"RTN","VBECRPC",42,0)
 ;
"RTN","VBECRPC",43,0)
 S @RESULTS@(0)="-1^Error calling RPC: "_RPC_" at "_OPTION_U_RTN
"RTN","VBECRPC",44,0)
 Q
"RTN","VBECRPC",45,0)
 ;
"RTN","VBECRPC",46,0)
BLDERMSG(VBECPRMS,VBRSLT,VBMT) ;  build error message(s) into VBMT global
"RTN","VBECRPC",47,0)
 ;
"RTN","VBECRPC",48,0)
 N VBX       ; temporary variable for holding text
"RTN","VBECRPC",49,0)
 N VBNM      ; indirect name of request/results array/global
"RTN","VBECRPC",50,0)
 N VBNM2     ; copy of VBNM for different FOR loop
"RTN","VBECRPC",51,0)
 N VBORIG    ; copy of VBNM with trailing parenthesis removed
"RTN","VBECRPC",52,0)
 N VBDATA    ; data value from request/results node
"RTN","VBECRPC",53,0)
 N VBLBL     ; label value comprised of $NA_VBDATA
"RTN","VBECRPC",54,0)
 N VBSUB     ; subscript value for array node
"RTN","VBECRPC",55,0)
 N VBOUT     ; full concatenated value of node to display
"RTN","VBECRPC",56,0)
 N VBLCV     ; loop control variable for FOR loop
"RTN","VBECRPC",57,0)
 N VBDONE    ; flag to signify 'done' with loop
"RTN","VBECRPC",58,0)
 N VBBLANK   ; blank line of blank spaces
"RTN","VBECRPC",59,0)
 N VBMAXDAT  ; maximum allowable length of array node data value
"RTN","VBECRPC",60,0)
 N VBMAXLBL  ; maximum discovered length of array node label value
"RTN","VBECRPC",61,0)
 N VBSPACES  ; calulated gap to format display to show data at column
"RTN","VBECRPC",62,0)
 ;
"RTN","VBECRPC",63,0)
 S VBX="Following are the request and results array(s)"
"RTN","VBECRPC",64,0)
 I $D(@VBMT@("!INITIAL IEN"))#2=1 D
"RTN","VBECRPC",65,0)
 . S VBX=VBX_" for IEN # "_$P(@VBMT@("!INITIAL IEN"),U,2)
"RTN","VBECRPC",66,0)
 . S @VBMT@("#FOLLOWS MSG")=VBX
"RTN","VBECRPC",67,0)
 S VBBLANK="                                                         "
"RTN","VBECRPC",68,0)
 ;
"RTN","VBECRPC",69,0)
 F VBNM="VBECPRMS",$NA(@VBRSLT) D
"RTN","VBECRPC",70,0)
 . S VBNM2=VBNM,VBORIG=$P(VBNM,")")
"RTN","VBECRPC",71,0)
 . S VBMAXLBL=1
"RTN","VBECRPC",72,0)
 . F  S VBNM2=$Q(@VBNM2) Q:VBNM2=""  Q:$NA(@VBNM2)'[VBORIG  D
"RTN","VBECRPC",73,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM2),"(",2)
"RTN","VBECRPC",74,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM2),")")
"RTN","VBECRPC",75,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECRPC",76,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECRPC",77,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECRPC",78,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECRPC",79,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECRPC",80,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECRPC",81,0)
 . . S VBMAXLBL=$S($L(VBLBL)>VBMAXLBL:$L(VBLBL),1:VBMAXLBL)
"RTN","VBECRPC",82,0)
 . S VBMAXLBL=$S(VBMAXLBL>30:30,1:VBMAXLBL+3)
"RTN","VBECRPC",83,0)
 . S VBMAXDAT=80-VBMAXLBL-2
"RTN","VBECRPC",84,0)
 . S VBORIG=$P(VBNM,")")
"RTN","VBECRPC",85,0)
 . F  S VBNM=$Q(@VBNM) Q:VBNM=""  Q:$NA(@VBNM)'[VBORIG  D
"RTN","VBECRPC",86,0)
 . . S VBLCV=0
"RTN","VBECRPC",87,0)
 . . S VBSUB=$NA(@VBNM),VBSUB=$TR(VBSUB,"""","")
"RTN","VBECRPC",88,0)
 . . S:VBORIG="VBECPRMS" VBLBL=$P($NA(@VBNM),"(",2)
"RTN","VBECRPC",89,0)
 . . S:VBORIG=$P($NA(@VBRSLT),")") VBLBL=$P($NA(@VBNM),")")
"RTN","VBECRPC",90,0)
 . . I VBORIG["VBECPRMS" D
"RTN","VBECRPC",91,0)
 . . . S VBLBL=$P(VBLBL,")")
"RTN","VBECRPC",92,0)
 . . I VBORIG'["VBECPRMS" D
"RTN","VBECRPC",93,0)
 . . . S VBLBL=$P(VBLBL,"(",2)
"RTN","VBECRPC",94,0)
 . . . S VBLBL=$P(VBLBL,$J)_$E(VBLBL,$F(VBLBL,$J)+1,$L(VBLBL))
"RTN","VBECRPC",95,0)
 . . . S VBLBL=$TR(VBLBL,"""","'"),VBLBL="'"_$P(VBLBL,"XML_",2)
"RTN","VBECRPC",96,0)
 . . S VBSPACES="",$P(VBSPACES," ",VBMAXLBL-$L(VBLBL))=""
"RTN","VBECRPC",97,0)
 . . S VBSPACES=VBSPACES
"RTN","VBECRPC",98,0)
 . . S VBDATA=$G(@VBNM)
"RTN","VBECRPC",99,0)
 . . K VBDONE
"RTN","VBECRPC",100,0)
 . . F VBLCV=0:1:25 D  Q:$D(VBDONE)
"RTN","VBECRPC",101,0)
 . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECRPC",102,0)
 . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECRPC",103,0)
 . . . S VBDATA(VBLCV)="  "_$E(VBDATA,1,VBMAXDAT)
"RTN","VBECRPC",104,0)
 . . . S VBDATA=$E(VBDATA,VBMAXDAT+1,$L(VBDATA))
"RTN","VBECRPC",105,0)
 . . . S:$L(VBDATA)'>0 VBDONE=1
"RTN","VBECRPC",106,0)
 . . . I VBLCV<1 D  Q
"RTN","VBECRPC",107,0)
 . . . . I $L(VBLBL)'>VBMAXLBL D  Q
"RTN","VBECRPC",108,0)
 . . . . . S $P(VBSPACES," ",$L(VBLBL)-VBMAXLBL)=""
"RTN","VBECRPC",109,0)
 . . . . . S VBLBL=VBLBL_VBSPACES
"RTN","VBECRPC",110,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECRPC",111,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECRPC",112,0)
 . . . . I $L(VBLBL)>VBMAXLBL D
"RTN","VBECRPC",113,0)
 . . . . . S @VBMT@(VBSUB)=VBLBL
"RTN","VBECRPC",114,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECRPC",115,0)
 . . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECRPC",116,0)
 . . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECRPC",117,0)
 . . . . . S VBSUB=$P(VBSUB,"||")
"RTN","VBECRPC",118,0)
 . . . . . S VBLCV=VBLCV+1
"RTN","VBECRPC",119,0)
 . . . . . S VBSUB=VBSUB_"||"_VBLCV
"RTN","VBECRPC",120,0)
 . . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECRPC",121,0)
 . . . I VBLCV>0 D
"RTN","VBECRPC",122,0)
 . . . . S VBLBL=$E(VBBLANK,1,VBMAXLBL-1)
"RTN","VBECRPC",123,0)
 . . . . S VBOUT=VBLBL_VBDATA(VBLCV)
"RTN","VBECRPC",124,0)
 . . . . S @VBMT@(VBSUB)=VBOUT
"RTN","VBECRPC",125,0)
 K VBDATA
"RTN","VBECRPC",126,0)
 Q
"RTN","VBECRPC",127,0)
SENDMSG(VBMT,SENDER,RECEIVER,SUBJECT) ;  Function - send message to mail group
"RTN","VBECRPC",128,0)
 ;
"RTN","VBECRPC",129,0)
 ; Input:
"RTN","VBECRPC",130,0)
 ;   VBMT - Array with error information for message text
"RTN","VBECRPC",131,0)
 ;   SENDER - Name of sender (routine tag and name)
"RTN","VBECRPC",132,0)
 ;   RECEIVER - Mail group or individual
"RTN","VBECRPC",133,0)
 ;   SUBJECT - Text for message subject
"RTN","VBECRPC",134,0)
 ;
"RTN","VBECRPC",135,0)
 N VBT      ; node in array during $Q
"RTN","VBECRPC",136,0)
 N VBLN     ; message parameters
"RTN","VBECRPC",137,0)
 N VBGROUP  ; name of mail group to which message will be sent
"RTN","VBECRPC",138,0)
 N VBCNT    ; line count of VBLN array
"RTN","VBECRPC",139,0)
 N VBUSERNM ; IEN of user's entry in NEW PERSON file
"RTN","VBECRPC",140,0)
 N VBUSER   ; name of user running this program
"RTN","VBECRPC",141,0)
 N XMDUZ    ; sender
"RTN","VBECRPC",142,0)
 N XMSUB    ; message subject
"RTN","VBECRPC",143,0)
 N XMTEXT   ; message text array
"RTN","VBECRPC",144,0)
 N XMY      ; recipient array
"RTN","VBECRPC",145,0)
 N XMZ      ; returned message number
"RTN","VBECRPC",146,0)
 ;
"RTN","VBECRPC",147,0)
 I '$D(VBMT) Q
"RTN","VBECRPC",148,0)
 I '$D(SENDER) S SENDER="VBECS VistALink M Client"
"RTN","VBECRPC",149,0)
 I '$D(RECEIVER) S RECEIVER="G.VBECS INTERFACE ADMIN"
"RTN","VBECRPC",150,0)
 I '$D(SUBJECT) S SUBJECT="VBECS VistaLink Error"
"RTN","VBECRPC",151,0)
 ;
"RTN","VBECRPC",152,0)
 S VBCNT=1
"RTN","VBECRPC",153,0)
 S VBT=$NA(@VBMT)
"RTN","VBECRPC",154,0)
 ;
"RTN","VBECRPC",155,0)
 S VBUSERNM=$$GET1^DIQ(200,DUZ,.01)
"RTN","VBECRPC",156,0)
 ;
"RTN","VBECRPC",157,0)
 S VBLN(VBCNT)="* * * VBECS VistALink Error Notification * * *"
"RTN","VBECRPC",158,0)
 S VBCNT=VBCNT+1,VBLN(VBCNT)=" ",VBCNT=VBCNT+1
"RTN","VBECRPC",159,0)
 S VBLN(VBCNT)="      Generated by: "_VBUSERNM
"RTN","VBECRPC",160,0)
 S VBCNT=VBCNT+1,VBLN(VBCNT)=" "
"RTN","VBECRPC",161,0)
 F  S VBT=$Q(@VBT) Q:VBT=""  Q:$NA(@VBT)'[$J  D
"RTN","VBECRPC",162,0)
 . S VBCNT=VBCNT+1
"RTN","VBECRPC",163,0)
 . S:VBT["DILIST" VBLN(VBCNT)=$G(@VBT)
"RTN","VBECRPC",164,0)
 . S:VBT'["DILIST" VBLN(VBCNT)=$P($G(@VBT),U)
"RTN","VBECRPC",165,0)
 . S VBLN(VBCNT)=$TR(VBLN(VBCNT),"""","'")
"RTN","VBECRPC",166,0)
 ;
"RTN","VBECRPC",167,0)
 S XMDUZ=SENDER
"RTN","VBECRPC",168,0)
 S XMSUB=SUBJECT
"RTN","VBECRPC",169,0)
 S XMTEXT="VBLN("
"RTN","VBECRPC",170,0)
 ; reactivate the following ling after testing:
"RTN","VBECRPC",171,0)
 S XMY(RECEIVER)=""
"RTN","VBECRPC",172,0)
 ;S XMY(VBUSERNM)=""
"RTN","VBECRPC",173,0)
 D ^XMD
"RTN","VBECRPC",174,0)
 Q
"RTN","VBECRPC1")
0^54^B5917800
"RTN","VBECRPC1",1,0)
VBECRPC1 ;HINES OIFO/BNT - RPC Server Listener Code ;12/28/03  11:20
"RTN","VBECRPC1",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPC1",3,0)
 ;
"RTN","VBECRPC1",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPC1",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPC1",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPC1",7,0)
 ; 
"RTN","VBECRPC1",8,0)
 ; Integration Agreements:
"RTN","VBECRPC1",9,0)
 ; Reference DBIA 4149 - M XML Parser
"RTN","VBECRPC1",10,0)
 ; Reference to EN^MXMLPRSE supported by IA #4149
"RTN","VBECRPC1",11,0)
 ;
"RTN","VBECRPC1",12,0)
 QUIT
"RTN","VBECRPC1",13,0)
 ;
"RTN","VBECRPC1",14,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPC1",15,0)
 ;            Parse Results of Successful Legacy RPC Request
"RTN","VBECRPC1",16,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPC1",17,0)
 ;              
"RTN","VBECRPC1",18,0)
 ; [Public/Supported Method]
"RTN","VBECRPC1",19,0)
PARSE(VBECPRMS,VBECY) ; -- parse legacy rpc results ; uses SAX parser
"RTN","VBECRPC1",20,0)
 NEW VBECCBK,VBECOPT,VBECTYPE,VBECCNT
"RTN","VBECRPC1",21,0)
 S VBMT=$NA(^TMP("VBECS_MAIL_TEXT",$J)) K @VBMT
"RTN","VBECRPC1",22,0)
 DO SET(.VBECCBK)
"RTN","VBECRPC1",23,0)
 SET VBECOPT=""
"RTN","VBECRPC1",24,0)
 DO EN^MXMLPRSE(VBECPRMS("RESULTS"),.VBECCBK,.VBECOPT)
"RTN","VBECRPC1",25,0)
 I $D(@VBECY@("ERROR")) D
"RTN","VBECRPC1",26,0)
 . D BLDERMSG^VBECRPC(.VBECPRMS,VBECY,VBMT)
"RTN","VBECRPC1",27,0)
 . D SENDMSG^VBECRPC(VBMT,"VBECS VistALink Client","G.VBECS INTERFACE ADMIN","VBECS VistALink Error")
"RTN","VBECRPC1",28,0)
 . M ^TMP("ZBNT_ERROR",$J)=@VBMT
"RTN","VBECRPC1",29,0)
 . K @VBMT
"RTN","VBECRPC1",30,0)
 Q
"RTN","VBECRPC1",31,0)
 ;
"RTN","VBECRPC1",32,0)
SET(VBECCBK) ; -- set the event interface entry points
"RTN","VBECRPC1",33,0)
 SET VBECCBK("STARTELEMENT")="RESELEST^VBECRPC1"
"RTN","VBECRPC1",34,0)
 SET VBECCBK("ENDELEMENT")="RESELEND^VBECRPC1"
"RTN","VBECRPC1",35,0)
 SET VBECCBK("CHARACTERS")="RESCHR^VBECRPC1"
"RTN","VBECRPC1",36,0)
 QUIT
"RTN","VBECRPC1",37,0)
 ;
"RTN","VBECRPC1",38,0)
RESELEST(ELE,ATR) ; -- element start event handler
"RTN","VBECRPC1",39,0)
 IF ELE="Response" SET VBECTYPE=$G(ATR("type")),VBECCNT=0 QUIT
"RTN","VBECRPC1",40,0)
 IF ELE="Message" SET VBECTYPE="fault",VBECCNT=0 QUIT
"RTN","VBECRPC1",41,0)
 QUIT
"RTN","VBECRPC1",42,0)
 ;
"RTN","VBECRPC1",43,0)
RESELEND(ELE) ; -- element end event handler
"RTN","VBECRPC1",44,0)
 KILL VBECCNT,VBECTYPE
"RTN","VBECRPC1",45,0)
 QUIT
"RTN","VBECRPC1",46,0)
 ;
"RTN","VBECRPC1",47,0)
RESCHR(TEXT) ; -- character value event handler
"RTN","VBECRPC1",48,0)
 QUIT:$G(VBECTYPE)=""
"RTN","VBECRPC1",49,0)
 QUIT:'$L(TEXT)  ; -- bug in parser? sends in empty string
"RTN","VBECRPC1",50,0)
 ;
"RTN","VBECRPC1",51,0)
 IF VBECCNT=0,TEXT=$C(10) QUIT  ; -- bug in parser? always starts with $C(10)
"RTN","VBECRPC1",52,0)
 ;
"RTN","VBECRPC1",53,0)
 IF VBECTYPE="string" DO  QUIT
"RTN","VBECRPC1",54,0)
 . SET VBECCNT=VBECCNT+1
"RTN","VBECRPC1",55,0)
 . SET @VBECY@(VBECCNT)=TEXT
"RTN","VBECRPC1",56,0)
 ;
"RTN","VBECRPC1",57,0)
 IF VBECTYPE="array" DO
"RTN","VBECRPC1",58,0)
 . SET VBECCNT=VBECCNT+1
"RTN","VBECRPC1",59,0)
 . SET @VBECY@(VBECCNT)=$P(TEXT,$C(10))
"RTN","VBECRPC1",60,0)
 ;
"RTN","VBECRPC1",61,0)
 IF VBECTYPE="fault" DO
"RTN","VBECRPC1",62,0)
 . SET VBECCNT=VBECCNT+1
"RTN","VBECRPC1",63,0)
 . SET @VBECY@("ERROR")=TEXT
"RTN","VBECRPC1",64,0)
 QUIT
"RTN","VBECRPC1",65,0)
 ;
"RTN","VBECRPC1",66,0)
PARSEX(VBECPRMS,VBECY) ; -- parse legacy rpc results ; uses DOM parser
"RTN","VBECRPC1",67,0)
 NEW VBECDOM
"RTN","VBECRPC1",68,0)
 SET VBECDOM=$$EN^MXMLDOM(VBECPRMS("RESULTS"),"")
"RTN","VBECRPC1",69,0)
 DO TEXT^MXMLDOM(VBECDOM,2,VBECY)
"RTN","VBECRPC1",70,0)
 DO DELETE^MXMLDOM(VBECDOM)
"RTN","VBECRPC1",71,0)
 QUIT
"RTN","VBECRPC1",72,0)
 ;
"RTN","VBECRPC1",73,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPC1",74,0)
 ;                   Response Format Documentation
"RTN","VBECRPC1",75,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPC1",76,0)
 ; 
"RTN","VBECRPC1",77,0)
 ;                   
"RTN","VBECRPC1",78,0)
 ; [ Sample XML produced by a successful call of EN^XOBRPC(.VBECPRMS). 
"RTN","VBECRPC1",79,0)
 ;   SEND^XOBRPC does the actual work to produce response.             ]
"RTN","VBECRPC1",80,0)
 ; 
"RTN","VBECRPC1",81,0)
 ; <?xml version="1.0" encoding="utf-8" ?>
"RTN","VBECRPC1",82,0)
 ; <vistalink type="Gov.VA.Med.RPC.Response" >
"RTN","VBECRPC1",83,0)
 ;     <results type="array" >
"RTN","VBECRPC1",84,0)
 ;         <![CDATA[4261;;2961001.08^2^274^166^105^^2961001.1123^1^^9^2^8^10^^^^^^^10G1-ALN
"RTN","VBECRPC1",85,0)
 ;         4270;;2961002.08^2^274^166^112^^^1^^9^2^8^10^^^^^^^10G8-ALN
"RTN","VBECRPC1",86,0)
 ;         4274;;2961003.08^2^274^166^116^^^1^^9^2^8^10^^^^^^^10GD-ALN
"RTN","VBECRPC1",87,0)
 ;         4340;;2961117.08^2^274^166^182^^2961118.1425^1^^9^2^8^10^^^^^^^10K0-ALN
"RTN","VBECRPC1",88,0)
 ;         4342;;2961108.13^2^108^207^183^^2961118.1546^1^^9^2^8^10^^^^^^^10K2-ALN
"RTN","VBECRPC1",89,0)
 ;         6394;;3000607.084^2^165^68^6479^^3000622.13^1^^9^1^8^10^^^^^^^197M-ALN]]>
"RTN","VBECRPC1",90,0)
 ;     </results>
"RTN","VBECRPC1",91,0)
 ; </vistalink>
"RTN","VBECRPC1",92,0)
 ; 
"RTN","VBECRPC1",93,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPC1",94,0)
 ; 
"RTN","VBECRPC1",95,0)
 ; [ Sample XML produced by a unsuccessful call of EN^XOBRPC(.XOBPARMS). 
"RTN","VBECRPC1",96,0)
 ;   ERROR^XOBRPC does the actual work to produce response.             ]
"RTN","VBECRPC1",97,0)
 ; 
"RTN","VBECRPC1",98,0)
 ; <?xml version="1.0" encoding="utf-8" ?>
"RTN","VBECRPC1",99,0)
 ; <vistalink type="Gov.VA..Med.RPC.Error" >
"RTN","VBECRPC1",100,0)
 ;    <errors>
"RTN","VBECRPC1",101,0)
 ;       <error code="2" uri="XOB BAD NAME" >
"RTN","VBECRPC1",102,0)
 ;           <msg>
"RTN","VBECRPC1",103,0)
 ;              Remote Procedure Unknown: 'XOB BAD NAME' cannot be found.
"RTN","VBECRPC1",104,0)
 ;           </msg>
"RTN","VBECRPC1",105,0)
 ;       </error>
"RTN","VBECRPC1",106,0)
 ;    </errors>
"RTN","VBECRPC1",107,0)
 ; </vistalink>
"RTN","VBECRPC1",108,0)
 ; 
"RTN","VBECRPC1",109,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPC1",110,0)
 ;
"RTN","VBECRPCA")
0^55^B73291905
"RTN","VBECRPCA",1,0)
VBECRPCA ;DALOI/RLM - VBECS Lab Services Lookups ;10 April 2003
"RTN","VBECRPCA",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCA",3,0)
 ;
"RTN","VBECRPCA",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCA",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCA",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCA",7,0)
 ; 
"RTN","VBECRPCA",8,0)
 ; Integration Agreements:
"RTN","VBECRPCA",9,0)
 ; Reference to $$FIND^DIC supported by IA #2051
"RTN","VBECRPCA",10,0)
 ; Reference to $$GET1^DIQ supported by IA #2056
"RTN","VBECRPCA",11,0)
 ; Reference to GETS^DIQ supported by IA #2056
"RTN","VBECRPCA",12,0)
 ; Reference to $$CPT^ICPTCOD supported by IA #1995
"RTN","VBECRPCA",13,0)
 ; Reference to Laboratory Test file #60 supported by IA #10054
"RTN","VBECRPCA",14,0)
 ; Reference to RR^LR7OR1 supported by IA #2503
"RTN","VBECRPCA",15,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCA",16,0)
 ; Reference to $$FMTHL7^XLFDT supported by IA #10103
"RTN","VBECRPCA",17,0)
 ; Reference to $$HL7TFM^XLFDT supported by IA #10103
"RTN","VBECRPCA",18,0)
 ; Reference to ^DIR supported by IA #10026
"RTN","VBECRPCA",19,0)
 ; Reference to ^LAM supported by IA #4779
"RTN","VBECRPCA",20,0)
 ;
"RTN","VBECRPCA",21,0)
 QUIT
"RTN","VBECRPCA",22,0)
 ;
"RTN","VBECRPCA",23,0)
LOOK60 ;
"RTN","VBECRPCA",24,0)
 S VBECCNT=0
"RTN","VBECRPCA",25,0)
 D BEGROOT^VBECRPC("Root")
"RTN","VBECRPCA",26,0)
 I DATA="" F  S DATA=$O(^LAB(60,"B",DATA)) Q:DATA=""  D L60
"RTN","VBECRPCA",27,0)
 I DATA]"" D L60
"RTN","VBECRPCA",28,0)
 D ENDROOT^VBECRPC("Root")
"RTN","VBECRPCA",29,0)
 Q
"RTN","VBECRPCA",30,0)
L60 D KILL
"RTN","VBECRPCA",31,0)
 ;Test names may contain leading and/or trailing spaces.
"RTN","VBECRPCA",32,0)
 I $$WSTEST(DATA) D ADD^VBECRPC("<Labtest>*Invalid Test Name*"_$$CHARCHK^XOBVLIB(DATA)_"*</Labtest>") Q
"RTN","VBECRPCA",33,0)
 D FIND^DIC(60,,".01",,DATA,,,,,"VBOUT","ERROR")
"RTN","VBECRPCA",34,0)
 S VBA=0 F  S VBA=$O(VBOUT("DILIST",2,VBA)) Q:'VBA  S VBB=VBOUT("DILIST",2,VBA) D
"RTN","VBECRPCA",35,0)
  . ;NAME - .01, NATIONAL VA LAB CODE - 64, RESULT NLT CODE - 64.1
"RTN","VBECRPCA",36,0)
  . D GETS^DIQ(60,VBB,".01;64;64.1","EI","VBOUT2","ERROR2")
"RTN","VBECRPCA",37,0)
  . I $O(^LAB(60,VBB,2,0)) Q  ;It's a panel
"RTN","VBECRPCA",38,0)
  . S VBC=0 F  S VBC=$O(^LAB(60,VBB,1,VBC)) Q:'VBC  D
"RTN","VBECRPCA",39,0)
  . . ;SITE/SPECIMEN - .01, UNITS - 6, LOINC CODE - 95.3
"RTN","VBECRPCA",40,0)
  . . D GETS^DIQ(60.01,VBC_","_VBB_",",".01;6;95.3","E","VBOUT3","ERROR3")
"RTN","VBECRPCA",41,0)
 ;CONVERT
"RTN","VBECRPCA",42,0)
 K VBOUT
"RTN","VBECRPCA",43,0)
 S VBA=0 F  S VBA=$O(VBOUT3(60.01,VBA)) Q:VBA=""  D
"RTN","VBECRPCA",44,0)
  . S VBB=$P(VBA,","),VBAC=$P(VBA,",",2),VBOUT4(VBAC,VBB)=VBOUT3(60.01,VBA,.01,"E")_"^"_VBOUT3(60.01,VBA,6,"E")_"^"_VBOUT3(60.01,VBA,95.3,"E")
"RTN","VBECRPCA",45,0)
 K VBOUT3
"RTN","VBECRPCA",46,0)
 S VBA=0 F  S VBA=$O(VBOUT2(60,VBA)) Q:VBA=""  D
"RTN","VBECRPCA",47,0)
  . S NLT1=$$GET1^DIQ(64,VBOUT2(60,VBA,64,"I"),1)
"RTN","VBECRPCA",48,0)
  . S NLT2=$$GET1^DIQ(64,VBOUT2(60,VBA,64.1,"I"),1)
"RTN","VBECRPCA",49,0)
  . ;Convert name and nlt codes to smaller local array
"RTN","VBECRPCA",50,0)
  . S VBOUT5(+VBA,.01)=VBOUT2(60,VBA,.01,"E")_"^"_NLT1_"^"_NLT2
"RTN","VBECRPCA",51,0)
  . ;Retrieve CPT codes from file 64
"RTN","VBECRPCA",52,0)
  . I VBOUT2(60,VBA,64,"I")]"" S CPTA=0 F  S CPTA=$O(^LAM(VBOUT2(60,VBA,64,"I"),4,CPTA)) Q:'CPTA  D
"RTN","VBECRPCA",53,0)
  . . D GETS^DIQ(64.018,CPTA_","_VBOUT2(60,VBA,64,"I")_",",.01,"I","VBOUT6("_+VBA_")","CPTERR")
"RTN","VBECRPCA",54,0)
  . I VBOUT2(60,VBA,64.1,"I")]"" S CPTA=0 F  S CPTA=$O(^LAM(VBOUT2(60,VBA,64.1,"I"),4,CPTA)) Q:'CPTA  D
"RTN","VBECRPCA",55,0)
  . . D GETS^DIQ(64.018,CPTA_","_VBOUT2(60,VBA,64.1,"I")_",",.01,"I","VBOUT7("_+VBA_")","CPTERR")
"RTN","VBECRPCA",56,0)
 K VBOUT2
"RTN","VBECRPCA",57,0)
 ;Convert internal CPT reference to external
"RTN","VBECRPCA",58,0)
 S CPTA=0 F  S CPTA=$O(VBOUT6(CPTA)) Q:'CPTA  S CPTB="" F  S CPTB=$O(VBOUT6(CPTA,64.018,CPTB)) Q:CPTB=""  D
"RTN","VBECRPCA",59,0)
  . S CPT=VBOUT6(CPTA,64.018,CPTB,.01,"I")
"RTN","VBECRPCA",60,0)
  . ;Only active CPT's
"RTN","VBECRPCA",61,0)
  . Q:'$P($$CPT^ICPTCOD(+CPT),"^",7)
"RTN","VBECRPCA",62,0)
  . Q:CPT'["ICPT"
"RTN","VBECRPCA",63,0)
  . S VBOUT8(CPTA,+CPTB)=$$GET1^DIQ(81,+CPT,.01)
"RTN","VBECRPCA",64,0)
 S CPTA=0 F  S CPTA=$O(VBOUT7(CPTA)) Q:'CPTA  S CPTB="" F  S CPTB=$O(VBOUT7(CPTA,64.018,CPTB)) Q:CPTB=""  D
"RTN","VBECRPCA",65,0)
  . S CPT=VBOUT7(CPTA,64.018,CPTB,.01,"I")
"RTN","VBECRPCA",66,0)
  . ;Only active CPT's
"RTN","VBECRPCA",67,0)
  . Q:'$P($$CPT^ICPTCOD(+CPT),"^",7)
"RTN","VBECRPCA",68,0)
  . Q:CPT'["ICPT"
"RTN","VBECRPCA",69,0)
  . S VBOUT9(CPTA,+CPTB)=$$GET1^DIQ(81,+CPT,.01)
"RTN","VBECRPCA",70,0)
 K VBOUT6,VBOUT7
"RTN","VBECRPCA",71,0)
 ;                         Build XML
"RTN","VBECRPCA",72,0)
 S VBXA=0
"RTN","VBECRPCA",73,0)
 D ADD^VBECRPC("<Labtest>"_$$CHARCHK^XOBVLIB(DATA))
"RTN","VBECRPCA",74,0)
 F  S VBXA=$O(VBOUT5(VBXA)) Q:'VBXA  I '$$WSTEST($P(VBOUT5(VBXA,.01),"^")) D  D ADD^VBECRPC("</Testname>")
"RTN","VBECRPCA",75,0)
  . D ADD^VBECRPC("<Testname>"_$$CHARCHK^XOBVLIB($P(VBOUT5(VBXA,.01),"^")))
"RTN","VBECRPCA",76,0)
  . I $D(VBOUT4(VBXA)) S VBXI="" F  S VBXI=$O(VBOUT4(VBXA,VBXI)) Q:VBXI=""  D
"RTN","VBECRPCA",77,0)
  . . ;Specimen names may contain leading and/or trailing spaces.
"RTN","VBECRPCA",78,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",1)]"",$$WSTEST($P(VBOUT4(VBXA,VBXI),"^",1)) D ADD^VBECRPC("<Specimen>*Invalid Specimen*"_$$CHARCHK^XOBVLIB($P(VBOUT4(VBXA,VBXI),"^",1))_"*</Specimen>") Q
"RTN","VBECRPCA",79,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",1)]"" D ADD^VBECRPC("<Specimen>"_$$CHARCHK^XOBVLIB($P(VBOUT4(VBXA,VBXI),"^",1)))
"RTN","VBECRPCA",80,0)
  . . ;Units are free text and may contain spaces
"RTN","VBECRPCA",81,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",2)]"" D ADD^VBECRPC("<Units>"_$$WSTRIP($$CHARCHK^XOBVLIB($P(VBOUT4(VBXA,VBXI),"^",2)))_"</Units>")
"RTN","VBECRPCA",82,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",3)]"" D ADD^VBECRPC("<LOINC>"_$$CHARCHK^XOBVLIB($P(VBOUT4(VBXA,VBXI),"^",3)))
"RTN","VBECRPCA",83,0)
  . . I $P($G(VBOUT5(VBXA,.01)),"^",2)]"" D ADD^VBECRPC("<NLT>"_$$CHARCHK^XOBVLIB($P(VBOUT5(VBXA,.01),"^",2)))
"RTN","VBECRPCA",84,0)
  . . I $D(VBOUT8(VBXA)) S VBXJ=0 F  S VBXJ=$O(VBOUT8(VBXA,VBXJ)) Q:'VBXJ  D ADD^VBECRPC("<CPT>"_$$CHARCHK^XOBVLIB(VBOUT8(VBXA,VBXJ))_"</CPT>")
"RTN","VBECRPCA",85,0)
  . . I $P($G(VBOUT5(VBXA,.01)),"^",2)]"" D ADD^VBECRPC("</NLT>")
"RTN","VBECRPCA",86,0)
  . . I $P($G(VBOUT5(VBXA,.01)),"^",3)]"" D ADD^VBECRPC("<ResNLT>"_$$CHARCHK^XOBVLIB($P(VBOUT5(VBXA,.01),"^",3)))
"RTN","VBECRPCA",87,0)
  . . I $D(VBOUT9(VBXA)) S VBXJ=0 F  S VBXJ=$O(VBOUT9(VBXA,VBXJ)) Q:'VBXJ  D ADD^VBECRPC("<RnCPT>"_$$CHARCHK^XOBVLIB(VBOUT9(VBXA,VBXJ))_"</RnCPT>")
"RTN","VBECRPCA",88,0)
  . . I $P($G(VBOUT5(VBXA,.01)),"^",3)]"" D ADD^VBECRPC("</ResNLT>")
"RTN","VBECRPCA",89,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",3)]"" D ADD^VBECRPC("</LOINC>")
"RTN","VBECRPCA",90,0)
  . . I $P($G(VBOUT4(VBXA,VBXI)),"^",1)]"" D ADD^VBECRPC("</Specimen>")
"RTN","VBECRPCA",91,0)
 D ADD^VBECRPC("</Labtest>")
"RTN","VBECRPCA",92,0)
KILL ;
"RTN","VBECRPCA",93,0)
 K CPT,CPTA,CPTB,NLT1,NLT2,VBA,VBAC,VBB,VBC,VBOUT,VBOUT2,VBOUT3,VBOUT4,VBOUT5,VBOUT6,VBOUT7,VBOUT8,VBOUT9,VBXA,VBXI,VBXJ
"RTN","VBECRPCA",94,0)
 Q
"RTN","VBECRPCA",95,0)
WSTEST(VBWST) ;White space test
"RTN","VBECRPCA",96,0)
 I $E(VBWST,1)=" "!($E(VBWST,$L(VBWST))=" ") Q 1
"RTN","VBECRPCA",97,0)
 Q 0
"RTN","VBECRPCA",98,0)
WSTRIP(VBDATA) ;Strip White Space
"RTN","VBECRPCA",99,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)
"RTN","VBECRPCA",100,0)
 F  Q:$E(VBDATA,1)'=" "  S VBDATA=$E(VBDATA,2,$L(VBDATA))
"RTN","VBECRPCA",101,0)
 Q VBDATA
"RTN","VBECRPCA",102,0)
WSCONV(VBDATA) ;Convert White Space
"RTN","VBECRPCA",103,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)_"%20"
"RTN","VBECRPCA",104,0)
 F  Q:$E(VBDATA,1)'=" "  S VBDATA="%20"_$E(VBDATA,2,$L(VBDATA))
"RTN","VBECRPCA",105,0)
 Q VBDATA
"RTN","VBECRPCA",106,0)
 ;
"RTN","VBECRPCA",107,0)
 ; ----------------------------------------------------------------
"RTN","VBECRPCA",108,0)
 ;     Private Method supports IA #4611
"RTN","VBECRPCA",109,0)
 ; ----------------------------------------------------------------
"RTN","VBECRPCA",110,0)
LABTEST(RESULTS,DATA) ; Main entry for VBECS LABORATORY TEST LOOKUP RPC
"RTN","VBECRPCA",111,0)
 ;
"RTN","VBECRPCA",112,0)
 N X,IEN,SITE,NAME,SPEC,CNT,ARR60,ERR,LIST
"RTN","VBECRPCA",113,0)
 S VBECCNT=0
"RTN","VBECRPCA",114,0)
 S RESULTS=$NA(^TMP("VBEC_LABTEST_LOOKUP",$J))
"RTN","VBECRPCA",115,0)
 K @RESULTS
"RTN","VBECRPCA",116,0)
 D BEGROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",117,0)
 I '$D(DATA) D  Q
"RTN","VBECRPCA",118,0)
 . D ADD^VBECRPC("<LabTest><Name>No search criteria provided</Name><IEN></IEN><Specimen></Specimen></LabTest>")
"RTN","VBECRPCA",119,0)
 . D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",120,0)
 ;
"RTN","VBECRPCA",121,0)
 D FIND^DIC(60,,"@;.01","BP",DATA,"","","","","ARR60","ERR")
"RTN","VBECRPCA",122,0)
 I '$D(ARR60("DILIST",1,0))!($D(ERR)) D  Q
"RTN","VBECRPCA",123,0)
 . D ADD^VBECRPC("<LabTest><Name>No Lab test found for ("_$$CHARCHK^XOBVLIB(DATA)_")</Name><IEN></IEN><Specimen></Specimen></LabTest>")
"RTN","VBECRPCA",124,0)
 . D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",125,0)
 ;
"RTN","VBECRPCA",126,0)
 S X=0
"RTN","VBECRPCA",127,0)
 F  S X=$O(ARR60("DILIST",X)) Q:X=""  D
"RTN","VBECRPCA",128,0)
 . S IEN=$P(ARR60("DILIST",X,0),"^")
"RTN","VBECRPCA",129,0)
 . S NAME=$P(ARR60("DILIST",X,0),"^",2)
"RTN","VBECRPCA",130,0)
 . S (SITE,CNT,LIST,SPEC)=0
"RTN","VBECRPCA",131,0)
 . F  S SITE=$O(^LAB(60,IEN,1,"B",SITE)) Q:SITE=""  D
"RTN","VBECRPCA",132,0)
 . . S CNT=CNT+1,SPEC=1
"RTN","VBECRPCA",133,0)
 . . S SPEC(CNT)=$P(^LAB(61,SITE,0),"^")
"RTN","VBECRPCA",134,0)
 . I 'SPEC D  Q
"RTN","VBECRPCA",135,0)
 . . D ADD^VBECRPC("<LabTest><Name>"_$$CHARCHK^XOBVLIB(NAME)_"</Name><IEN>"_$$CHARCHK^XOBVLIB(IEN)_"</IEN><Specimen></Specimen></LabTest>")
"RTN","VBECRPCA",136,0)
 . F  S LIST=$O(SPEC(LIST)) Q:LIST=""  D
"RTN","VBECRPCA",137,0)
 . . D ADD^VBECRPC("<LabTest><Name>"_$$CHARCHK^XOBVLIB(NAME)_"</Name><IEN>"_$$CHARCHK^XOBVLIB(IEN)_"</IEN>")
"RTN","VBECRPCA",138,0)
 . . D ADD^VBECRPC("<Specimen>"_$$CHARCHK^XOBVLIB(SPEC(LIST))_"</Specimen></LabTest>")
"RTN","VBECRPCA",139,0)
 . . I (SPEC(LIST)="BLOOD")!(SPEC(LIST)="SERUM")!(SPEC(LIST)="PLASMA") D
"RTN","VBECRPCA",140,0)
 . . . I $G(VBECTST) W !,NAME_"^"_IEN_"^"_SPEC(LIST)
"RTN","VBECRPCA",141,0)
 . Q
"RTN","VBECRPCA",142,0)
 D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",143,0)
 K VBECCNT
"RTN","VBECRPCA",144,0)
 Q
"RTN","VBECRPCA",145,0)
 ;
"RTN","VBECRPCA",146,0)
 ; --------------------------------------------------------------
"RTN","VBECRPCA",147,0)
 ;     Private Method supports IA #4612
"RTN","VBECRPCA",148,0)
 ; --------------------------------------------------------------
"RTN","VBECRPCA",149,0)
TSTRSLT(RESULTS,SDATE,EDATE,DIV,TESTS,PATS) ;
"RTN","VBECRPCA",150,0)
 ; Main entry for VBECS LAB TEST RESULTS LOOKUP RPC
"RTN","VBECRPCA",151,0)
 ;
"RTN","VBECRPCA",152,0)
 N VBRSX,X,Y,DFN,TEST,BDT,EDT,TESTNAME,TSTRES
"RTN","VBECRPCA",153,0)
 S VBECCNT=0,EDT="",BDT=""
"RTN","VBECRPCA",154,0)
 S RESULTS=$NA(^TMP("VBEC_LABRES",$J))
"RTN","VBECRPCA",155,0)
 K @RESULTS
"RTN","VBECRPCA",156,0)
 IF $D(SDATE) S BDT=$$HL7TFM^XLFDT(SDATE)
"RTN","VBECRPCA",157,0)
 IF $D(EDATE) S EDT=$$HL7TFM^XLFDT(EDATE)
"RTN","VBECRPCA",158,0)
 D BEGROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",159,0)
 S VBRSX=0
"RTN","VBECRPCA",160,0)
 F  S VBRSX=$O(PATS(VBRSX)) Q:VBRSX=""  D
"RTN","VBECRPCA",161,0)
 . S DFN=PATS(VBRSX) Q:DFN=""
"RTN","VBECRPCA",162,0)
 . ; No tests passed in, get all test result available
"RTN","VBECRPCA",163,0)
 . IF '$D(TESTS) D  Q
"RTN","VBECRPCA",164,0)
 . . D RR^LR7OR1(DFN,,BDT,EDT,,,,,,)
"RTN","VBECRPCA",165,0)
 . . IF $D(^TMP("LRRR",$J,DFN)) D RESXML(DFN)
"RTN","VBECRPCA",166,0)
 . . Q
"RTN","VBECRPCA",167,0)
 . S Y=0 F  S Y=$O(TESTS(Y)) Q:Y=""  D
"RTN","VBECRPCA",168,0)
 . . S TEST=TESTS(Y) Q:TEST=""
"RTN","VBECRPCA",169,0)
 . . D RR^LR7OR1(DFN,,BDT,EDT,,TEST,,,,)
"RTN","VBECRPCA",170,0)
 . . I $D(^TMP("LRRR",$J,DFN)) D RESXML(DFN)
"RTN","VBECRPCA",171,0)
 . . Q
"RTN","VBECRPCA",172,0)
 D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCA",173,0)
 ;M ^XTMP("VBECLABRES",$J)=^TMP("VBEC_LABRES",$J)
"RTN","VBECRPCA",174,0)
 Q
"RTN","VBECRPCA",175,0)
 ;
"RTN","VBECRPCA",176,0)
RESXML(DFN) ; Subroutine to extract Lab Test result and build return XML
"RTN","VBECRPCA",177,0)
 Q:'$D(^TMP("LRRR",$J,DFN))
"RTN","VBECRPCA",178,0)
 N TESTCODE,RES,TESTNAME,SUB,INVDT,SEQ,OUTPUT
"RTN","VBECRPCA",179,0)
 S SUB=0
"RTN","VBECRPCA",180,0)
 F  S SUB=$O(^TMP("LRRR",$J,DFN,SUB)) Q:SUB']""  D
"RTN","VBECRPCA",181,0)
 . S INVDT=0
"RTN","VBECRPCA",182,0)
 . F  S INVDT=$O(^TMP("LRRR",$J,DFN,SUB,INVDT)) Q:INVDT']""  D
"RTN","VBECRPCA",183,0)
 . . S SEQ=0
"RTN","VBECRPCA",184,0)
 . . F  S SEQ=$O(^TMP("LRRR",$J,DFN,SUB,INVDT,SEQ)) Q:SEQ']""  D
"RTN","VBECRPCA",185,0)
 . . . S OUTPUT=$G(^TMP("LRRR",$J,DFN,SUB,INVDT,SEQ))
"RTN","VBECRPCA",186,0)
 . . . Q:OUTPUT']""
"RTN","VBECRPCA",187,0)
 . . . ; Lab Test code
"RTN","VBECRPCA",188,0)
 . . . S TESTCODE=$P(OUTPUT,"^")
"RTN","VBECRPCA",189,0)
 . . . ; Lab Test result
"RTN","VBECRPCA",190,0)
 . . . S RES=$P(OUTPUT,"^",2)
"RTN","VBECRPCA",191,0)
 . . . ; Lab Test name
"RTN","VBECRPCA",192,0)
 . . . S TESTNAME=$P(OUTPUT,"^",15)
"RTN","VBECRPCA",193,0)
 . . . ; Date result completed converted to HL7 date/time format
"RTN","VBECRPCA",194,0)
 . . . S COMPDATE=$$FMTHL7^XLFDT($P(^LR($$LRDFN^LR7OR1(DFN),SUB,INVDT,0),"^",3))
"RTN","VBECRPCA",195,0)
 . . . D BEGROOT^VBECRPC("LabTest")
"RTN","VBECRPCA",196,0)
 . . . D ADD^VBECRPC("<VistaPatientId>"_$$CHARCHK^XOBVLIB(DFN)_"</VistaPatientId>")
"RTN","VBECRPCA",197,0)
 . . . D ADD^VBECRPC("<LabTestId>"_$$CHARCHK^XOBVLIB(TESTCODE)_"</LabTestId>")
"RTN","VBECRPCA",198,0)
 . . . D ADD^VBECRPC("<TestPrintName>"_$$CHARCHK^XOBVLIB(TESTNAME)_"</TestPrintName>")
"RTN","VBECRPCA",199,0)
 . . . D ADD^VBECRPC("<TestResult>"_$$CHARCHK^XOBVLIB(RES)_"</TestResult>")
"RTN","VBECRPCA",200,0)
 . . . D ADD^VBECRPC("<TestDate>"_$$CHARCHK^XOBVLIB(COMPDATE)_"</TestDate>")
"RTN","VBECRPCA",201,0)
 . . . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECRPCA",202,0)
 . . . Q
"RTN","VBECRPCA",203,0)
 Q
"RTN","VBECRPCB")
0^56^B37262884
"RTN","VBECRPCB",1,0)
VBECRPCB ;HOIFO/BNT - ORDER LOOKUP BY UID ;03/24/2004
"RTN","VBECRPCB",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCB",3,0)
 ;
"RTN","VBECRPCB",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCB",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCB",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCB",7,0)
 ; 
"RTN","VBECRPCB",8,0)
 ; Integration Agreements:
"RTN","VBECRPCB",9,0)
 ; Reference to $$FIND^DIC supported by IA #2051
"RTN","VBECRPCB",10,0)
 ; Reference to $$GET1^DIQ supported by IA #2052
"RTN","VBECRPCB",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCB",12,0)
 ; Reference to CHECKUID^LRWU4 supported by IA #4636
"RTN","VBECRPCB",13,0)
 ; Reference to LABORATORY TEST file 60 supported by IA #10054
"RTN","VBECRPCB",14,0)
 ; Reference to LAB ORDER ENTRY file 69 supported by IA #4774
"RTN","VBECRPCB",15,0)
 ; Reference to ACCESSION file 68 supported by IA #4773
"RTN","VBECRPCB",16,0)
 ; Reference to PATIENT file 2 supported by IA #10035
"RTN","VBECRPCB",17,0)
 ; Reference to $$FMTHL7^XLFDT supported by IA #10103
"RTN","VBECRPCB",18,0)
 ;
"RTN","VBECRPCB",19,0)
 QUIT
"RTN","VBECRPCB",20,0)
 ;
"RTN","VBECRPCB",21,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPCB",22,0)
 ;     Private Method supports IA #4633
"RTN","VBECRPCB",23,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPCB",24,0)
ORDER(RESULTS,VBUID) ;
"RTN","VBECRPCB",25,0)
 ;Bring in UID and RESULTS parameters.
"RTN","VBECRPCB",26,0)
 ;UID will be the Universal Identifier for this order.
"RTN","VBECRPCB",27,0)
 ;RESULTS will be the array where the data will be stored.
"RTN","VBECRPCB",28,0)
 N TEST,ERROR
"RTN","VBECRPCB",29,0)
 S VBECCNT=0
"RTN","VBECRPCB",30,0)
 S RESULTS=$NA(^TMP("VBECS_UIDLOOKUP",$J))
"RTN","VBECRPCB",31,0)
 K @RESULTS
"RTN","VBECRPCB",32,0)
 D BEGROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",33,0)
 I VBUID']"" D  Q
"RTN","VBECRPCB",34,0)
  . D ERROR^VBECRPC("No Specimen UID provided")
"RTN","VBECRPCB",35,0)
  . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",36,0)
 ;
"RTN","VBECRPCB",37,0)
 ;D FIND^DIC(68,,.01,,"BLOOD BANK",,,,,"TEST","ERROR")
"RTN","VBECRPCB",38,0)
 S VB68=$$CHECKUID^LRWU4(VBUID)
"RTN","VBECRPCB",39,0)
 I '+VB68!('$L($P(VB68,"^",2))) D  Q
"RTN","VBECRPCB",40,0)
 . D ERROR^VBECRPC("No accession associated with UID '"_VBUID_"'")
"RTN","VBECRPCB",41,0)
 . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",42,0)
 ;
"RTN","VBECRPCB",43,0)
 I $P($G(^LRO(68,$P(VB68,"^",2),0)),"^",2)'="BB" D  Q
"RTN","VBECRPCB",44,0)
 . D ERROR^VBECRPC("No Blood Bank accession area associated with UID '"_VBUID_"'")
"RTN","VBECRPCB",45,0)
 . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",46,0)
 ;
"RTN","VBECRPCB",47,0)
 S VBACC=$P(VB68,"^",2)
"RTN","VBECRPCB",48,0)
 S VBA=$P(VB68,"^",3)
"RTN","VBECRPCB",49,0)
 S VBB=$P(VB68,"^",4)
"RTN","VBECRPCB",50,0)
 ;
"RTN","VBECRPCB",51,0)
 Q:$P($G(^LRO(68,VBACC,1,VBA,1,VBB,0)),"^",2)'=2  ;Add parameter for 67 if necessary
"RTN","VBECRPCB",52,0)
 S LRDFN=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,0)),"^"),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","VBECRPCB",53,0)
 ;Add Collection Date/Time
"RTN","VBECRPCB",54,0)
 S VBCOLDT=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,3)),"^")
"RTN","VBECRPCB",55,0)
 S VBNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","VBECRPCB",56,0)
 ;Add DFN and Name
"RTN","VBECRPCB",57,0)
 D ADD^VBECRPC("<PatientName>"_$$CHARCHK^XOBVLIB(VBNAME)_"</PatientName>")
"RTN","VBECRPCB",58,0)
 D ADD^VBECRPC("<VistaPatientId>"_$$CHARCHK^XOBVLIB(DFN)_"</VistaPatientId>")
"RTN","VBECRPCB",59,0)
 ;Add Accession number
"RTN","VBECRPCB",60,0)
 S VBACCN=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.2)),"^")
"RTN","VBECRPCB",61,0)
 D ADD^VBECRPC("<SpecimenAccessionNumber>"_$$CHARCHK^XOBVLIB(VBACCN)_"</SpecimenAccessionNumber>")
"RTN","VBECRPCB",62,0)
 S VBORDN=+$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.1)),"^")
"RTN","VBECRPCB",63,0)
 ;Add Order Number
"RTN","VBECRPCB",64,0)
 D ADD^VBECRPC("<LabOrderNumber>"_$$CHARCHK^XOBVLIB(VBORDN)_"</LabOrderNumber>")
"RTN","VBECRPCB",65,0)
 ;Add UID from file 68
"RTN","VBECRPCB",66,0)
 S VBUID68=$P($G(^LRO(68,VBACC,1,VBA,1,VBB,.3)),"^")
"RTN","VBECRPCB",67,0)
 D ADD^VBECRPC("<SpecimenUID>"_$$CHARCHK^XOBVLIB(VBUID68)_"</SpecimenUID>")
"RTN","VBECRPCB",68,0)
 ;Add collection date/time
"RTN","VBECRPCB",69,0)
 D ADD^VBECRPC("<CollectionDateTime>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT(VBCOLDT))_"</CollectionDateTime>")
"RTN","VBECRPCB",70,0)
 ;Add Tests
"RTN","VBECRPCB",71,0)
 D BEGROOT^VBECRPC("LabTests")
"RTN","VBECRPCB",72,0)
 S VBC=0 F  S VBC=$O(^LRO(68,VBACC,1,VBA,1,VBB,4,VBC)) Q:'VBC  D
"RTN","VBECRPCB",73,0)
 . S VBTEST=+$P($G(^LRO(68,VBACC,1,VBA,1,VBB,4,VBC,0)),"^")
"RTN","VBECRPCB",74,0)
 . S VBTNM=$$GET1^DIQ(60,VBTEST,.01)
"RTN","VBECRPCB",75,0)
 . ;Add Test Name
"RTN","VBECRPCB",76,0)
 . D BEGROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",77,0)
 . D ADD^VBECRPC("<LabTestID>"_$$CHARCHK^XOBVLIB(VBTEST)_"</LabTestID>")
"RTN","VBECRPCB",78,0)
 . D ADD^VBECRPC("<LabTestName>"_$$CHARCHK^XOBVLIB(VBTNM)_"</LabTestName>")
"RTN","VBECRPCB",79,0)
 . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",80,0)
 ;Close Tests
"RTN","VBECRPCB",81,0)
 D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCB",82,0)
 D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",83,0)
 K DFN,LRDFN,TEST,VBA,VBACC,VBB,VBC,VBECCNT,VBNAME,VBORDN,VBTEST,VBTNM,VBUID,VBUID68,VBACCN
"RTN","VBECRPCB",84,0)
 Q
"RTN","VBECRPCB",85,0)
 ;
"RTN","VBECRPCB",86,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPCB",87,0)
 ;     Private Method supports IA #4614
"RTN","VBECRPCB",88,0)
 ; -----------------------------------------------------------------------
"RTN","VBECRPCB",89,0)
ORDNUM(RESULTS,LROIEN) ;
"RTN","VBECRPCB",90,0)
 ;
"RTN","VBECRPCB",91,0)
 N TEST,QUIT,VBA,VBB
"RTN","VBECRPCB",92,0)
 S (VBECCNT,QUIT)=0
"RTN","VBECRPCB",93,0)
 S RESULTS=$NA(^TMP("VBECS_ORDLOOKUP",$J))
"RTN","VBECRPCB",94,0)
 K @RESULTS
"RTN","VBECRPCB",95,0)
 D BEGROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",96,0)
 I LROIEN']"" D  Q
"RTN","VBECRPCB",97,0)
 . D ERROR^VBECRPC("No Lab Order Number provided")
"RTN","VBECRPCB",98,0)
 . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",99,0)
 ;
"RTN","VBECRPCB",100,0)
 I '$D(^LRO(69,"C",LROIEN)) D  Q
"RTN","VBECRPCB",101,0)
 . D ERROR^VBECRPC("Lab Order Number "_LROIEN_" not found in file 69")
"RTN","VBECRPCB",102,0)
 . D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",103,0)
 S VBA=0 F  S VBA=$O(^LRO(69,"C",LROIEN,VBA)) Q:'VBA  D  Q:QUIT
"RTN","VBECRPCB",104,0)
 . S VBB=0 F  S VBB=$O(^LRO(69,"C",LROIEN,VBA,VBB)) Q:'VBB  D
"RTN","VBECRPCB",105,0)
 . . ; Order has been merged.
"RTN","VBECRPCB",106,0)
 . . IF $P($G(^LRO(69,VBA,1,VBB,1)),"^",7)]"" S QUIT=1 Q
"RTN","VBECRPCB",107,0)
 . . D BEGROOT^VBECRPC("LabTests")
"RTN","VBECRPCB",108,0)
 . . S VBC=0 F  S VBC=$O(^LRO(69,VBA,1,VBB,2,VBC)) Q:'VBC  D
"RTN","VBECRPCB",109,0)
 . . . D BEGROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",110,0)
 . . . S VBLR0=^LRO(69,VBA,1,VBB,2,VBC,0)
"RTN","VBECRPCB",111,0)
 . . . S LRDFN=$P(^LRO(69,VBA,1,VBB,0),"^",1),DFN=$P($G(^LR(LRDFN,0)),"^",3)
"RTN","VBECRPCB",112,0)
 . . . S VBNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","VBECRPCB",113,0)
 . . . S VBTEST=$P($G(VBLR0),"^")
"RTN","VBECRPCB",114,0)
 . . . S VBTNM=$$GET1^DIQ(60,VBTEST,.01)
"RTN","VBECRPCB",115,0)
 . . . I $P($G(^LRO(69,VBA,1,VBB,2,VBC,0)),"^",3)']"" D  Q
"RTN","VBECRPCB",116,0)
 . . . . S QUIT=1
"RTN","VBECRPCB",117,0)
 . . . . D ERROR^VBECRPC("Lab Test "_VBTNM_" on order number "_LROIEN_" has not been accessioned")
"RTN","VBECRPCB",118,0)
 . . . . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",119,0)
 . . . S VBUID=$G(^LRO(69,VBA,1,VBB,2,VBC,.3))
"RTN","VBECRPCB",120,0)
 . . . S VBCOLDT=$P($G(^LRO(68,$P($G(VBLR0),"^",4),1,$P($G(VBLR0),"^",3),1,$P($G(VBLR0),"^",5),3)),"^")
"RTN","VBECRPCB",121,0)
 . . . S VBACCN=$G(^LRO(68,$P($G(VBLR0),"^",4),1,$P($G(VBLR0),"^",3),1,$P($G(VBLR0),"^",5),.2))
"RTN","VBECRPCB",122,0)
 . . .;Add DFN and Name
"RTN","VBECRPCB",123,0)
 . . . D ADD^VBECRPC("<PatientName>"_$$CHARCHK^XOBVLIB(VBNAME)_"</PatientName>")
"RTN","VBECRPCB",124,0)
 . . . D ADD^VBECRPC("<VistaPatientId>"_$$CHARCHK^XOBVLIB(DFN)_"</VistaPatientId>")
"RTN","VBECRPCB",125,0)
 . . . D ADD^VBECRPC("<LabOrderNumber>"_$$CHARCHK^XOBVLIB(LROIEN)_"</LabOrderNumber>")
"RTN","VBECRPCB",126,0)
 . . . D ADD^VBECRPC("<LabTestID>"_$$CHARCHK^XOBVLIB(VBTEST)_"</LabTestID>")
"RTN","VBECRPCB",127,0)
 . . . D ADD^VBECRPC("<LabTestName>"_$$CHARCHK^XOBVLIB(VBTNM)_"</LabTestName>")
"RTN","VBECRPCB",128,0)
 . . . D ADD^VBECRPC("<SpecimenAccessionNumber>"_$$CHARCHK^XOBVLIB(VBACCN)_"</SpecimenAccessionNumber>")
"RTN","VBECRPCB",129,0)
 . . . D ADD^VBECRPC("<SpecimenUID>"_$$CHARCHK^XOBVLIB(VBUID)_"</SpecimenUID>")
"RTN","VBECRPCB",130,0)
 . . . ;Add collection date/time
"RTN","VBECRPCB",131,0)
 . . . D ADD^VBECRPC("<CollectionDateTime>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT(VBCOLDT))_"</CollectionDateTime>")
"RTN","VBECRPCB",132,0)
 . . . D ENDROOT^VBECRPC("LabTest")
"RTN","VBECRPCB",133,0)
 . . . Q
"RTN","VBECRPCB",134,0)
 . . D ENDROOT^VBECRPC("LabTests")
"RTN","VBECRPCB",135,0)
 . . Q
"RTN","VBECRPCB",136,0)
 . Q
"RTN","VBECRPCB",137,0)
 D ENDROOT^VBECRPC("UIDLookup")
"RTN","VBECRPCB",138,0)
 K DFN,LRDFN,VBA,VBACC,VBB,VBECCNT,VBNAME,VBORDN,VBTEST,VBTNM,VBUID,VBUID68,VBACCN
"RTN","VBECRPCB",139,0)
 Q
"RTN","VBECRPCC")
0^57^B23402257
"RTN","VBECRPCC",1,0)
VBECRPCC ;HOIFO/bnt - VBECS VistALink RPC Client Utilities ;07/27/2002  13:00
"RTN","VBECRPCC",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCC",3,0)
 ;
"RTN","VBECRPCC",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCC",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCC",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCC",7,0)
 ; 
"RTN","VBECRPCC",8,0)
 ; Integration Agreements:
"RTN","VBECRPCC",9,0)
 ;  Reference to $$GET^XPAR supported by IA #2263
"RTN","VBECRPCC",10,0)
 ;  Reference to $$XMLHDR^XOBVLIB supported by IA #4090
"RTN","VBECRPCC",11,0)
 ;
"RTN","VBECRPCC",12,0)
 QUIT
"RTN","VBECRPCC",13,0)
 ;
"RTN","VBECRPCC",14,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",15,0)
 ;                  RPC Client:  Methods Calls
"RTN","VBECRPCC",16,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",17,0)
 ;
"RTN","VBECRPCC",18,0)
EXECUTE(VBECPRMS) ; -- execute rpc call
"RTN","VBECRPCC",19,0)
 ;
"RTN","VBECRPCC",20,0)
 ; -- validate parmeters passed
"RTN","VBECRPCC",21,0)
 IF '$$VALIDATE(.VBECPRMS) QUIT 0
"RTN","VBECRPCC",22,0)
 ;
"RTN","VBECRPCC",23,0)
 ; -- call method to build request from parameters array
"RTN","VBECRPCC",24,0)
 DO REQUEST(.VBECPRMS)
"RTN","VBECRPCC",25,0)
 SET VBECPRMS("CLOSE MESSAGE")="<VistaLink messageType='gov.va.med.foundations.rpc.request' ></VistaLink>"
"RTN","VBECRPCC",26,0)
 IF $G(VBECPRMS("RESULTS"))="" SET VBECPRMS("RESULTS")=$NA(^TMP("VBECRPC",$J,"XML"))
"RTN","VBECRPCC",27,0)
 QUIT $$EXECUTE^VBECVLC(.VBECPRMS)
"RTN","VBECRPCC",28,0)
 ;
"RTN","VBECRPCC",29,0)
VALIDATE(VBECPRMS) ; -- validate parameters sent in
"RTN","VBECRPCC",30,0)
 ; // TODO: Do checks and build validate error message
"RTN","VBECRPCC",31,0)
 QUIT 1
"RTN","VBECRPCC",32,0)
 ;
"RTN","VBECRPCC",33,0)
REQUEST(VBECPRMS) ; -- build xml request
"RTN","VBECRPCC",34,0)
 NEW VBECLINE,VBECPI,PTYPE,VBECREQ
"RTN","VBECRPCC",35,0)
 SET VBECLINE=0
"RTN","VBECRPCC",36,0)
 SET VBECPRMS("MESSAGE TYPE")="gov.va.med.foundations.rpc.request"
"RTN","VBECRPCC",37,0)
 SET VBECPRMS("MODE")="singleton"
"RTN","VBECRPCC",38,0)
 IF $G(VBECPRMS("REQUEST"))="" SET VBECPRMS("REQUEST")=$NA(VBECPRMS("REQUEST","XML"))
"RTN","VBECRPCC",39,0)
 SET VBECREQ=VBECPRMS("REQUEST")
"RTN","VBECRPCC",40,0)
 KILL @VBECREQ
"RTN","VBECRPCC",41,0)
 ;
"RTN","VBECRPCC",42,0)
 DO ADD($$XMLHDR^XOBVLIB())
"RTN","VBECRPCC",43,0)
 DO ADD("<VistaLink messageType="""_$G(VBECPRMS("MESSAGE TYPE"))_""" mode="""_$G(VBECPRMS("MODE"))_""" version=""1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""rpcRequest.xsd"" ")
"RTN","VBECRPCC",44,0)
 DO ADD("xmlns=""http://domain.ext/Foundations"">")
"RTN","VBECRPCC",45,0)
 DO ADD("<RpcHandler version=""1.0"" />")
"RTN","VBECRPCC",46,0)
 DO ADD("<Request rpcName="""_$G(VBECPRMS("RPC NAME"))_""" version=""1.0"" rpcClientTimeOut=""900"" >")
"RTN","VBECRPCC",47,0)
 DO ADD("<RpcContext><![CDATA["_$G(VBECPRMS("RPC CONTEXT"))_"]]></RpcContext>")
"RTN","VBECRPCC",48,0)
 DO ADD("<Params>")
"RTN","VBECRPCC",49,0)
 IF $D(VBECPRMS("PARAMS"))>9 DO
"RTN","VBECRPCC",50,0)
 . SET VBECPI=0
"RTN","VBECRPCC",51,0)
 . FOR  SET VBECPI=$O(VBECPRMS("PARAMS",VBECPI)) Q:'VBECPI  DO
"RTN","VBECRPCC",52,0)
 . . SET PTYPE=$G(VBECPRMS("PARAMS",VBECPI,"TYPE"))
"RTN","VBECRPCC",53,0)
 . . IF PTYPE="STRING" DO STRING QUIT
"RTN","VBECRPCC",54,0)
 . . IF PTYPE="ARRAY" DO ARRAY QUIT
"RTN","VBECRPCC",55,0)
 . . IF PTYPE="REF" DO REF QUIT
"RTN","VBECRPCC",56,0)
 DO ADD("</Params>")
"RTN","VBECRPCC",57,0)
 DO ADD("</Request>")
"RTN","VBECRPCC",58,0)
 DO ADD("</VistaLink>")
"RTN","VBECRPCC",59,0)
 QUIT
"RTN","VBECRPCC",60,0)
 ;
"RTN","VBECRPCC",61,0)
STRING ;
"RTN","VBECRPCC",62,0)
 DO ADD("<Param type=""string"" position="""_VBECPI_""" >"_$G(VBECPRMS("PARAMS",VBECPI,"VALUE"))_"</Param>")
"RTN","VBECRPCC",63,0)
 QUIT
"RTN","VBECRPCC",64,0)
 ;
"RTN","VBECRPCC",65,0)
ARRAY ;
"RTN","VBECRPCC",66,0)
 NEW VBECNAME
"RTN","VBECRPCC",67,0)
 DO ADD("<Param type=""array"" position="""_VBECPI_""" >")
"RTN","VBECRPCC",68,0)
 DO ADD("<Indices>")
"RTN","VBECRPCC",69,0)
 SET VBECNAME="" FOR  SET VBECNAME=$O(VBECPRMS("PARAMS",VBECPI,"VALUE",VBECNAME)) Q:VBECNAME=""  DO
"RTN","VBECRPCC",70,0)
 . DO ADD("<Index name="""_VBECNAME_""" value="""_$G(VBECPRMS("PARAMS",VBECPI,"VALUE",VBECNAME))_""" />")
"RTN","VBECRPCC",71,0)
 DO ADD("</Indices>")
"RTN","VBECRPCC",72,0)
 DO ADD("</Param>")
"RTN","VBECRPCC",73,0)
 QUIT
"RTN","VBECRPCC",74,0)
 ;
"RTN","VBECRPCC",75,0)
REF ;
"RTN","VBECRPCC",76,0)
 DO ADD("<Param type=""ref"" position="""_VBECPI_""" >"_$G(VBECPRMS("PARAMS",VBECPI,"VALUE"))_"</Param>")
"RTN","VBECRPCC",77,0)
 QUIT
"RTN","VBECRPCC",78,0)
 ;
"RTN","VBECRPCC",79,0)
ADD(STR) ; -- add string to array
"RTN","VBECRPCC",80,0)
 SET VBECLINE=VBECLINE+1
"RTN","VBECRPCC",81,0)
 SET @VBECREQ@(VBECLINE)=STR
"RTN","VBECRPCC",82,0)
 QUIT
"RTN","VBECRPCC",83,0)
 ;
"RTN","VBECRPCC",84,0)
INITV(RPC) ; Initialize VBECS VistALink Client parameters
"RTN","VBECRPCC",85,0)
 ; Input:  RPC = Parameter Toolkit Instance of RPC Name
"RTN","VBECRPCC",86,0)
 ; Output: VBECPRMS or -1^"error specific text" if error occurs setting any VBECPRMS parameter
"RTN","VBECRPCC",87,0)
 ;
"RTN","VBECRPCC",88,0)
 NEW ENT,PAR
"RTN","VBECRPCC",89,0)
 KILL VBECPRMS
"RTN","VBECRPCC",90,0)
 SET VBECPRMS("ERROR")=0
"RTN","VBECRPCC",91,0)
 IF RPC']"" DO ERR("NO RPC NAME SUPPLIED") QUIT
"RTN","VBECRPCC",92,0)
 ; Parameter Toolkit variables
"RTN","VBECRPCC",93,0)
 SET ENT="PKG.VBECS" ;Entity
"RTN","VBECRPCC",94,0)
 SET PAR="VBECS VISTALINK" ;Parameter
"RTN","VBECRPCC",95,0)
 SET VBECPRMS("ADDRESS")=$$GET^XPAR(ENT,PAR,"LISTENER IP ADDRESS","Q")
"RTN","VBECRPCC",96,0)
 IF VBECPRMS("ADDRESS")="" DO ERR("NO LISTENER IP ADDRESS FOUND") QUIT
"RTN","VBECRPCC",97,0)
 SET VBECPRMS("PORT")=$$GET^XPAR(ENT,PAR,"LISTENER PORT NUMBER","Q")
"RTN","VBECRPCC",98,0)
 IF VBECPRMS("PORT")="" DO ERR("NO LISTENER PORT NUMBER FOUND") QUIT
"RTN","VBECRPCC",99,0)
 SET VBECPRMS("RPC NAME")=RPC
"RTN","VBECRPCC",100,0)
 SET VBECPRMS("RPC CONTEXT")=$$GET^XPAR(ENT,PAR,RPC,"Q")
"RTN","VBECRPCC",101,0)
 IF VBECPRMS("RPC CONTEXT")="" DO ERR("UNABLE TO RETRIEVE RPC CONTEXT FOR "_RPC) QUIT
"RTN","VBECRPCC",102,0)
 QUIT
"RTN","VBECRPCC",103,0)
 ;
"RTN","VBECRPCC",104,0)
CHGADPRT(IP,PORT) ; Change the IP Address and Port of the VBECS VistALink Listner
"RTN","VBECRPCC",105,0)
 NEW ERR,ENT,PAR
"RTN","VBECRPCC",106,0)
 SET ENT="PKG.VBECS" ; Entity
"RTN","VBECRPCC",107,0)
 SET PAR="VBECS VISTALINK" ; Parameter
"RTN","VBECRPCC",108,0)
 IF IP]"" DO
"RTN","VBECRPCC",109,0)
 . DO EN^XPAR(ENT,PAR,"LISTENER IP ADDRESS",IP,.ERR)
"RTN","VBECRPCC",110,0)
 . IF ERR QUIT
"RTN","VBECRPCC",111,0)
 ;
"RTN","VBECRPCC",112,0)
 IF PORT]"" DO
"RTN","VBECRPCC",113,0)
 . DO EN^XPAR(ENT,PAR,"LISTENER PORT NUMBER",PORT,.ERR)
"RTN","VBECRPCC",114,0)
 . IF ERR QUIT
"RTN","VBECRPCC",115,0)
 QUIT ERR
"RTN","VBECRPCC",116,0)
 ;
"RTN","VBECRPCC",117,0)
CONTEXT(INSTANCE,CONTEXT) ; Adds, or changes, an RPC Instance and
"RTN","VBECRPCC",118,0)
 ; it's associated context
"RTN","VBECRPCC",119,0)
 ; Set CONTEXT to "@" to delete the instance of the RPC.
"RTN","VBECRPCC",120,0)
 ;
"RTN","VBECRPCC",121,0)
 NEW ERR,ENT,PAR
"RTN","VBECRPCC",122,0)
 SET ENT="PKG.VBECS" ; Entity
"RTN","VBECRPCC",123,0)
 SET PAR="VBECS VISTALINK" ; Parameter
"RTN","VBECRPCC",124,0)
 DO EN^XPAR(ENT,PAR,INSTANCE,CONTEXT,.ERR)
"RTN","VBECRPCC",125,0)
 QUIT ERR
"RTN","VBECRPCC",126,0)
 ;
"RTN","VBECRPCC",127,0)
ERR(ERRTXT) ; Set VBECPRMS("ERROR") node with error text and quit
"RTN","VBECRPCC",128,0)
 S VBECPRMS("ERROR")="1^"_ERRTXT
"RTN","VBECRPCC",129,0)
 QUIT
"RTN","VBECRPCC",130,0)
 ;
"RTN","VBECRPCC",131,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",132,0)
 ;                   Request Format Documentation
"RTN","VBECRPCC",133,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",134,0)
 ; 
"RTN","VBECRPCC",135,0)
 ; [ Parameter Array Format -->> passed to REQUEST^VBECRPCC(.VBECPRMS) ] 
"RTN","VBECRPCC",136,0)
 ; 
"RTN","VBECRPCC",137,0)
 ; -- general information
"RTN","VBECRPCC",138,0)
 ; VBECPRMS("ADDRESS")="10.3.21.12"
"RTN","VBECRPCC",139,0)
 ; VBECPRMS("PORT")=19811
"RTN","VBECRPCC",140,0)
 ; VBECPRMS("RPC NAME")="VBECS Order Entry"
"RTN","VBECRPCC",141,0)
 ; VBECPRMS("RPC CONTEXT")="VBECS VISTALINK CONTEXT"
"RTN","VBECRPCC",142,0)
 ;
"RTN","VBECRPCC",143,0)
 ; -- string parameter type
"RTN","VBECRPCC",144,0)
 ; VBECPRMS("PARAMS",1,"TYPE")="STRING"
"RTN","VBECRPCC",145,0)
 ; VBECPRMS("PARAMS",1,"VALUE")=2
"RTN","VBECRPCC",146,0)
 ; VBECPRMS("PARAMS",2,"TYPE")="STRING"
"RTN","VBECRPCC",147,0)
 ; VBECPRMS("PARAMS",2,"VALUE")=2961001
"RTN","VBECRPCC",148,0)
 ; VBECPRMS("PARAMS",3,"TYPE")="STRING"
"RTN","VBECRPCC",149,0)
 ; VBECPRMS("PARAMS",3,"VALUE")=3030101
"RTN","VBECRPCC",150,0)
 ;
"RTN","VBECRPCC",151,0)
 ; -- sample array parameter type
"RTN","VBECRPCC",152,0)
 ; VBECPRMS("PARAMS",4,"TYPE")="ARRAY"
"RTN","VBECRPCC",153,0)
 ; VBECPRMS("PARAMS",4,"VALUE","FNAME")="JOE"
"RTN","VBECRPCC",154,0)
 ; VBECPRMS("PARAMS",4,"VALUE","LNAME")="GOODMAN"
"RTN","VBECRPCC",155,0)
 ;                   
"RTN","VBECRPCC",156,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",157,0)
 ;                   
"RTN","VBECRPCC",158,0)
 ; [ Sample XML produced by calling REQUEST^VBECRPCC(.VBECPRMS) ]
"RTN","VBECRPCC",159,0)
 ; 
"RTN","VBECRPCC",160,0)
 ; <?xml version="1.0" encoding="utf-8" ?>
"RTN","VBECRPCC",161,0)
 ; <VistaLink type="gov.va.med.foundations.rpc.request" mode="singleton" 
"RTN","VBECRPCC",162,0)
 ;   version="1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
"RTN","VBECRPCC",163,0)
 ;   xsi:noNamespaceSchemaLocation="rpcRequest.xsd"
"RTN","VBECRPCC",164,0)
 ;   xmlns="http://domain.ext/Foundations">
"RTN","VBECRPCC",165,0)
 ;   <RpcHandler version="1.0" />
"RTN","VBECRPCC",166,0)
 ;   <Request rpcName="VBECS Order Entry" version="1.0"
"RTN","VBECRPCC",167,0)
 ;     rpcClientTimeOut="900">
"RTN","VBECRPCC",168,0)
 ;      <RpcContext>
"RTN","VBECRPCC",169,0)
 ;        <![CDATA[ VBECS VISTALINK ]]>
"RTN","VBECRPCC",170,0)
 ;      </RpcContext>
"RTN","VBECRPCC",171,0)
 ;      <Params>
"RTN","VBECRPCC",172,0)
 ;         <Param type="string" position="1" >2</Param>
"RTN","VBECRPCC",173,0)
 ;         <Param type="string" position="2" >2961001</Param>
"RTN","VBECRPCC",174,0)
 ;         <Param type="string" position="3" >3030101</Param>
"RTN","VBECRPCC",175,0)
 ;         <Param type="array" position="4" >
"RTN","VBECRPCC",176,0)
 ;            <Indices>
"RTN","VBECRPCC",177,0)
 ;               <Index name="status" value="veteran" />
"RTN","VBECRPCC",178,0)
 ;               <Index name="gender" value="male" />
"RTN","VBECRPCC",179,0)
 ;            </Indices>
"RTN","VBECRPCC",180,0)
 ;         </Param>
"RTN","VBECRPCC",181,0)
 ;      </Params>
"RTN","VBECRPCC",182,0)
 ;   </Request>
"RTN","VBECRPCC",183,0)
 ; </VistaLink>
"RTN","VBECRPCC",184,0)
 ;
"RTN","VBECRPCC",185,0)
 ; -------------------------------------------------------------------
"RTN","VBECRPCC",186,0)
 ;
"RTN","VBECRPCD")
0^58^B4946296
"RTN","VBECRPCD",1,0)
VBECRPCD ;DALOI/RLM - Lookup HOSPITAL LOCATION based on DIVISION ;12 January 2004
"RTN","VBECRPCD",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCD",3,0)
 ;
"RTN","VBECRPCD",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCD",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCD",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCD",7,0)
 ; 
"RTN","VBECRPCD",8,0)
 ; Integration Agreements:
"RTN","VBECRPCD",9,0)
 ; Reference to ^SC( supported by IA #10040
"RTN","VBECRPCD",10,0)
 ; Reference to $$SITE^VASITE supported by IA #10112
"RTN","VBECRPCD",11,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCD",12,0)
 ;
"RTN","VBECRPCD",13,0)
 ; This routine should not be called from the top.
"RTN","VBECRPCD",14,0)
 QUIT
"RTN","VBECRPCD",15,0)
 ;
"RTN","VBECRPCD",16,0)
LOC(RESULTS,DIV) ; Main RPC Entry
"RTN","VBECRPCD",17,0)
 S VBECCNT=0
"RTN","VBECRPCD",18,0)
 S RESULTS=$NA(^TMP("VBECHLOC",$J))
"RTN","VBECRPCD",19,0)
 K @RESULTS
"RTN","VBECRPCD",20,0)
 D BEGROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",21,0)
 I DIV="" D  Q
"RTN","VBECRPCD",22,0)
 . D ADD^VBECRPC("<Error>No Division Provided</Error>")
"RTN","VBECRPCD",23,0)
 . D ENDROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",24,0)
 . Q
"RTN","VBECRPCD",25,0)
 I DIV]"" D LOOK
"RTN","VBECRPCD",26,0)
 D ENDROOT^VBECRPC("HospitalLocations")
"RTN","VBECRPCD",27,0)
 Q
"RTN","VBECRPCD",28,0)
LOOK ;
"RTN","VBECRPCD",29,0)
 S VBECA=0 F  S VBECA=$O(^SC(VBECA)) Q:'VBECA  D
"RTN","VBECRPCD",30,0)
  . Q:'$P(^SC(VBECA,0),U,15)  ;No Division
"RTN","VBECRPCD",31,0)
  . Q:$D(^SC(VBECA,"I"))  ;Inactive Location???
"RTN","VBECRPCD",32,0)
  . Q:"CW"'[$P(^SC(VBECA,0),U,3)  ;Clinic or Ward only???
"RTN","VBECRPCD",33,0)
  . I DIV=$P($$SITE^VASITE(DT,+$P(^SC(VBECA,0),U,15)),U,3) D
"RTN","VBECRPCD",34,0)
  . . D BEGROOT^VBECRPC("Location")
"RTN","VBECRPCD",35,0)
  . . D ADD^VBECRPC("<LocationName>"_$$CHARCHK^XOBVLIB($$WSTRIP($P(^SC(VBECA,0),U)))_"</LocationName>")
"RTN","VBECRPCD",36,0)
  . . D ADD^VBECRPC("<LocationIEN>"_$$CHARCHK^XOBVLIB(VBECA)_"</LocationIEN>")
"RTN","VBECRPCD",37,0)
  . . D ADD^VBECRPC("<LocationType>"_$$CHARCHK^XOBVLIB($P(^SC(VBECA,0),U,3))_"</LocationType>")
"RTN","VBECRPCD",38,0)
  . . D ENDROOT^VBECRPC("Location")
"RTN","VBECRPCD",39,0)
 Q
"RTN","VBECRPCD",40,0)
KILL ;
"RTN","VBECRPCD",41,0)
 K DIV,VBDATA,VBECA,VBECCNT
"RTN","VBECRPCD",42,0)
 Q
"RTN","VBECRPCD",43,0)
WSTRIP(VBDATA) ;Strip White Space
"RTN","VBECRPCD",44,0)
 F  Q:$E(VBDATA,$L(VBDATA))'=" "  S VBDATA=$E(VBDATA,1,$L(VBDATA)-1)
"RTN","VBECRPCD",45,0)
 F  Q:$E(VBDATA,1)'=" "  S VBDATA=$E(VBDATA,2,$L(VBDATA))
"RTN","VBECRPCD",46,0)
 Q VBDATA
"RTN","VBECRPCD",47,0)
 ;
"RTN","VBECRPCD",48,0)
TESTLOC ; Entry point to write the results of the Get Hospital Locations RPC
"RTN","VBECRPCD",49,0)
 ; Function in XML format
"RTN","VBECRPCD",50,0)
 ;
"RTN","VBECRPCD",51,0)
 S VBECTST=1
"RTN","VBECRPCD",52,0)
 D LOC(.RESULTS,"589")
"RTN","VBECRPCD",53,0)
 S X=0
"RTN","VBECRPCD",54,0)
 F  S X=$O(@RESULTS@(X)) Q:X=""  D
"RTN","VBECRPCD",55,0)
 . W @RESULTS@(X)
"RTN","VBECRPCD",56,0)
 Q
"RTN","VBECRPCE")
0^59^B8061175
"RTN","VBECRPCE",1,0)
VBECRPCE ;HOIFO/BNT-Lookup PROVIDERS based on DIVISION ;22 March 2004
"RTN","VBECRPCE",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCE",3,0)
 ;
"RTN","VBECRPCE",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCE",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCE",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCE",7,0)
 ; 
"RTN","VBECRPCE",8,0)
 ; Integration Agreements:
"RTN","VBECRPCE",9,0)
 ; Reference DBIA 10076 - XUSEC GLOBAL READ
"RTN","VBECRPCE",10,0)
 ; Reference DBIA 10060 - NEW PERSON FILE
"RTN","VBECRPCE",11,0)
 ; Reference DBIA 10090 - INSTITUTION FILE
"RTN","VBECRPCE",12,0)
 ; Reference DBIA 2051  - LIST^DIC
"RTN","VBECRPCE",13,0)
 ; Reference to $$UP^XLFSTR is supported by IA: 10104
"RTN","VBECRPCE",14,0)
 ; Reference to $$FIND1^DIC supported by IA #2051
"RTN","VBECRPCE",15,0)
 ; Reference to $$FIND1^DIC supported by IA #2051
"RTN","VBECRPCE",16,0)
 ; Reference to ^DIC(4 supported by IA #10090
"RTN","VBECRPCE",17,0)
 ;
"RTN","VBECRPCE",18,0)
 ; This routine should not be called from the top.
"RTN","VBECRPCE",19,0)
 QUIT
"RTN","VBECRPCE",20,0)
 ;
"RTN","VBECRPCE",21,0)
 ; ----------------------------------------------------------------
"RTN","VBECRPCE",22,0)
 ;       Private Method supports IA 4617
"RTN","VBECRPCE",23,0)
 ; ----------------------------------------------------------------
"RTN","VBECRPCE",24,0)
PROVIDER(RESULTS,DIV,DATA) ;
"RTN","VBECRPCE",25,0)
 ; Look up and return all active providers by division
"RTN","VBECRPCE",26,0)
 ;
"RTN","VBECRPCE",27,0)
 ; Input: RESULTS = Passed by reference used to return data to VistALink
"RTN","VBECRPCE",28,0)
 ;                  as XML.
"RTN","VBECRPCE",29,0)
 ;        DIV     = (Required) Station number of Division used to
"RTN","VBECRPCE",30,0)
 ;                   locate providers
"RTN","VBECRPCE",31,0)
 ;        DATA    = (Optional) Text string used to perform lookup. If
"RTN","VBECRPCE",32,0)
 ;                   null, will return all providers for division.
"RTN","VBECRPCE",33,0)
 ;
"RTN","VBECRPCE",34,0)
 ; Screen Logic:  Only returns users from file 200 that hold the
"RTN","VBECRPCE",35,0)
 ;                PROVIDER Security Key, do not have a TERMINATION
"RTN","VBECRPCE",36,0)
 ;                DATE prior to the current date, and have access to
"RTN","VBECRPCE",37,0)
 ;                the Division passed in the DIV parameter.
"RTN","VBECRPCE",38,0)
 ;
"RTN","VBECRPCE",39,0)
 ;
"RTN","VBECRPCE",40,0)
 S VBECCNT=0
"RTN","VBECRPCE",41,0)
 S RESULTS=$NA(^TMP("VBECS_PROVIDERS",$J))
"RTN","VBECRPCE",42,0)
 K @RESULTS
"RTN","VBECRPCE",43,0)
 D BEGROOT^VBECRPC("Providers")
"RTN","VBECRPCE",44,0)
 ;
"RTN","VBECRPCE",45,0)
 ; Get INSTITUTION file pointer for DIV parameter.
"RTN","VBECRPCE",46,0)
 K ERR S DIVIEN=$$FIND1^DIC(4,,"QX",.DIV,"D",,"ERR")
"RTN","VBECRPCE",47,0)
 I $D(ERR) D  Q
"RTN","VBECRPCE",48,0)
 . D ADD^VBECRPC("<Record count='0' >")
"RTN","VBECRPCE",49,0)
 . D ERROR^VBECRPC(ERR("DIERR",1,"TEXT",1))
"RTN","VBECRPCE",50,0)
 . D ENDROOT^VBECRPC("Record"),ENDROOT^VBECRPC("Providers")
"RTN","VBECRPCE",51,0)
 . Q
"RTN","VBECRPCE",52,0)
 ; Perform the search
"RTN","VBECRPCE",53,0)
 D PRVSRCH(DATA,DIVIEN)
"RTN","VBECRPCE",54,0)
 ;
"RTN","VBECRPCE",55,0)
 D ENDROOT^VBECRPC("Providers")
"RTN","VBECRPCE",56,0)
 D KILL
"RTN","VBECRPCE",57,0)
 Q
"RTN","VBECRPCE",58,0)
 ;
"RTN","VBECRPCE",59,0)
PRVSRCH(DATA,DIVIEN) ;
"RTN","VBECRPCE",60,0)
 ; Get list of PROVIDER's based on DATA and DIVIEN input
"RTN","VBECRPCE",61,0)
 ;             
"RTN","VBECRPCE",62,0)
 ;
"RTN","VBECRPCE",63,0)
 N DD,ERR
"RTN","VBECRPCE",64,0)
 I '$D(VBECCNT) S VBECCNT=0
"RTN","VBECRPCE",65,0)
 S DD=200
"RTN","VBECRPCE",66,0)
 I $D(DATA) S DATA=$$UP^XLFSTR(DATA)
"RTN","VBECRPCE",67,0)
 S SCREEN="I $$PRVSCR^VBECRPCE(+Y)"
"RTN","VBECRPCE",68,0)
 D LIST^DIC(DD,"","@;.01","P","","",.DATA,"B",.SCREEN,"","","ERR")
"RTN","VBECRPCE",69,0)
 I $D(ERR) D  Q
"RTN","VBECRPCE",70,0)
 . D ADD^VBECRPC("<Record count='0' >")
"RTN","VBECRPCE",71,0)
 . D ERROR^VBECRPC(ERR("DIERR",1,"TEXT",1))
"RTN","VBECRPCE",72,0)
 . D ENDROOT^VBECRPC("Record")
"RTN","VBECRPCE",73,0)
 . Q
"RTN","VBECRPCE",74,0)
 ;
"RTN","VBECRPCE",75,0)
 D ADD^VBECRPC("<Record count='"_$$CHARCHK^XOBVLIB(+$P(^TMP("DILIST",$J,0),U))_"' >")
"RTN","VBECRPCE",76,0)
 S X=0
"RTN","VBECRPCE",77,0)
 F  S X=$O(^TMP("DILIST",$J,X)) Q:X=""  D
"RTN","VBECRPCE",78,0)
 . D BEGROOT^VBECRPC("Provider")
"RTN","VBECRPCE",79,0)
 . D ADD^VBECRPC("<ProviderIEN>"_$$CHARCHK^XOBVLIB(+$P(^TMP("DILIST",$J,X,0),U))_"</ProviderIEN>")
"RTN","VBECRPCE",80,0)
 . D ADD^VBECRPC("<ProviderName>"_$$CHARCHK^XOBVLIB($P(^TMP("DILIST",$J,X,0),U,2))_"</ProviderName>")
"RTN","VBECRPCE",81,0)
 . D ENDROOT^VBECRPC("Provider")
"RTN","VBECRPCE",82,0)
 . Q
"RTN","VBECRPCE",83,0)
 D ENDROOT^VBECRPC("Record")
"RTN","VBECRPCE",84,0)
 Q
"RTN","VBECRPCE",85,0)
 ;
"RTN","VBECRPCE",86,0)
PRVSCR(IEN) ; Screens for valid providers
"RTN","VBECRPCE",87,0)
 Q:(IEN']"")!(IEN<0)!('$D(^XUSEC("PROVIDER",IEN))) 0
"RTN","VBECRPCE",88,0)
 Q:'$D(^VA(200,IEN,2,"B",DIVIEN)) 0
"RTN","VBECRPCE",89,0)
 Q $$ACTIVE^XUSER(IEN)
"RTN","VBECRPCE",90,0)
 ;
"RTN","VBECRPCE",91,0)
KILL ; Kill variables
"RTN","VBECRPCE",92,0)
 K VBECCNT,DIVIEN
"RTN","VBECRPCE",93,0)
 K ^TMP("DILIST",$J)
"RTN","VBECRPCE",94,0)
 Q
"RTN","VBECRPCH")
0^60^B4049349
"RTN","VBECRPCH",1,0)
VBECRPCH ; HOIFO/BNT - VBECS HCPCS Codes lookup;19 May 2004
"RTN","VBECRPCH",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCH",3,0)
 ;
"RTN","VBECRPCH",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCH",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCH",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCH",7,0)
 ; 
"RTN","VBECRPCH",8,0)
 ; Integration Agreements:
"RTN","VBECRPCH",9,0)
 ; Reference to CPT CATEGORY file supported by IA #1587
"RTN","VBECRPCH",10,0)
 ; Reference to CPT file supported by IA #4776
"RTN","VBECRPCH",11,0)
 ; Reference to LIST^DIC supported by IA #2051
"RTN","VBECRPCH",12,0)
 ; Reference to $$FIND1^DIC supported by IA #2051
"RTN","VBECRPCH",13,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCH",14,0)
 ;
"RTN","VBECRPCH",15,0)
 QUIT
"RTN","VBECRPCH",16,0)
 ;
"RTN","VBECRPCH",17,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCH",18,0)
 ;       Private Method Supports IA #4610
"RTN","VBECRPCH",19,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCH",20,0)
HCPCS(RESULTS) ; Get active HCPCS codes from the CPT file for Path/Lab CPT Categories
"RTN","VBECRPCH",21,0)
 ;
"RTN","VBECRPCH",22,0)
 N OUT,X
"RTN","VBECRPCH",23,0)
 S VBECCNT=0
"RTN","VBECRPCH",24,0)
 S RESULTS=$NA(^TMP("VBECHCPCS",$J))
"RTN","VBECRPCH",25,0)
 K @RESULTS,^TMP("DILIST",$J)
"RTN","VBECRPCH",26,0)
 D BEGROOT^VBECRPC("Root")
"RTN","VBECRPCH",27,0)
 S VBHPC=$$FIND1^DIC(81.1,,,"PATHOLOGY AND LABORATORY SERVICES",,,"VBERR")
"RTN","VBECRPCH",28,0)
 I 'VBHPC!($D(VBERR)) D  Q
"RTN","VBECRPCH",29,0)
 . D ERROR^VBECRPC("Error collecting HCPCS data")
"RTN","VBECRPCH",30,0)
 . D ENDROOT^VBECRPC("Root")
"RTN","VBECRPCH",31,0)
 . Q
"RTN","VBECRPCH",32,0)
 S VBSCRN="N CPT S CPT=$$CPT^ICPTCOD(Y) I $P(CPT,U,4)="_VBHPC_",$P(CPT,U,7),$P(CPT,U,5)=""H"""
"RTN","VBECRPCH",33,0)
 D LIST^DIC(81,,,,,,,"D",VBSCRN,,.OUT,"VBERR")
"RTN","VBECRPCH",34,0)
 I $D(VBERR) D  Q
"RTN","VBECRPCH",35,0)
 . D ERROR^VBECRPC("Error collecting HCPCS data")
"RTN","VBECRPCH",36,0)
 . D ENDROOT^VBECRPC("Root")
"RTN","VBECRPCH",37,0)
 . Q
"RTN","VBECRPCH",38,0)
 S VBB=0 F  S VBB=$O(^TMP("DILIST",$J,"ID",VBB)) Q:'VBB  S VBDATA="" D
"RTN","VBECRPCH",39,0)
  . D ADD^VBECRPC("<HCPCS>")
"RTN","VBECRPCH",40,0)
  . F VBC=".01^Code","2^Name" D ADD^VBECRPC("<"_$P(VBC,"^",2)_">"_$$STRIPL^VBECRPC($$CHARCHK^XOBVLIB(^TMP("DILIST",$J,"ID",VBB,$P(VBC,"^"))))_"</"_$P(VBC,"^",2)_">")
"RTN","VBECRPCH",41,0)
  . D ADD^VBECRPC("</HCPCS>")
"RTN","VBECRPCH",42,0)
 D ENDROOT^VBECRPC("Root")
"RTN","VBECRPCH",43,0)
 K @OUT,VBB,VBC,VBDATA,VBECCNT,VBFLD,VBHPC,VBSCRN
"RTN","VBECRPCH",44,0)
 Q
"RTN","VBECRPCM")
0^61^B41078175
"RTN","VBECRPCM",1,0)
VBECRPCM ;HOIFO/BNT - MAINTENANCE USE CASE RPCs ; 10/21/05 10:17am
"RTN","VBECRPCM",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCM",3,0)
 ;
"RTN","VBECRPCM",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCM",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCM",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCM",7,0)
 ; 
"RTN","VBECRPCM",8,0)
 ; Integration Agreements:
"RTN","VBECRPCM",9,0)
 ; Reference DBIA 2343  - $$ACTIVE^XUSER
"RTN","VBECRPCM",10,0)
 ; Reference DBIA 10060 - NEW PERSON FILE
"RTN","VBECRPCM",11,0)
 ; Reference DBIA 4090  - $$CHARCHK^XOBVLIB
"RTN","VBECRPCM",12,0)
 ; Reference DBIA 10076 - XUSEC GLOBAL READ
"RTN","VBECRPCM",13,0)
 ; Reference DBIA 10090 - INSTITUTION FILE FILEMAN READ
"RTN","VBECRPCM",14,0)
 ; Reference DBIA 2817  - MEDICAL CENTER DIVISION FILE "AD" X-REF
"RTN","VBECRPCM",15,0)
 ; Reference DBIA 1963  - ACCESSION FILE GLOBAL READ
"RTN","VBECRPCM",16,0)
 ; Reference to GETS^DIQ() supported by IA #2056
"RTN","VBECRPCM",17,0)
 ; Reference to LIST^DIC supported by DBIA #2051
"RTN","VBECRPCM",18,0)
 ; Call to ^VA(200 is supported by IA: 10060
"RTN","VBECRPCM",19,0)
 ; Call to GETS^DIQ is supported by IA: 2056
"RTN","VBECRPCM",20,0)
 ; Reference to ^DIC(4 supported by IA #10090
"RTN","VBECRPCM",21,0)
 ; Reference to ^DG(40.8 supported by IA #2817
"RTN","VBECRPCM",22,0)
 ; Reference to ^LRO(68 supported by IA #1963
"RTN","VBECRPCM",23,0)
 ; 
"RTN","VBECRPCM",24,0)
 ;
"RTN","VBECRPCM",25,0)
 QUIT
"RTN","VBECRPCM",26,0)
 ;
"RTN","VBECRPCM",27,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",28,0)
 ;      Private Method supports IA 4608
"RTN","VBECRPCM",29,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",30,0)
BBUSER(RESULTS) ; Look up and return all BB users
"RTN","VBECRPCM",31,0)
 ;
"RTN","VBECRPCM",32,0)
 ;
"RTN","VBECRPCM",33,0)
 ; Input: RESULTS = Passed by reference used to return data to VistALink
"RTN","VBECRPCM",34,0)
 ;                  as XML.
"RTN","VBECRPCM",35,0)
 ;
"RTN","VBECRPCM",36,0)
 ; Screen Logic:  Only returns users from file 200 that hold either the
"RTN","VBECRPCM",37,0)
 ;                LRBLOODBANK or LRBLSUPER Security Key and do not have a
"RTN","VBECRPCM",38,0)
 ;                TERMINATION DATE prior to the current date.
"RTN","VBECRPCM",39,0)
 ;
"RTN","VBECRPCM",40,0)
 ;S VBECCNT=0
"RTN","VBECRPCM",41,0)
 ;S RESULTS=$NA(^TMP("VBECS_USER",$J))
"RTN","VBECRPCM",42,0)
 ;K @RESULTS
"RTN","VBECRPCM",43,0)
 ;D BEGROOT^VBECRPC("BloodBankUsers")
"RTN","VBECRPCM",44,0)
 ;
"RTN","VBECRPCM",45,0)
 ;D USRSRCH
"RTN","VBECRPCM",46,0)
 ;
"RTN","VBECRPCM",47,0)
 ;D ENDROOT^VBECRPC("BloodBankUsers")
"RTN","VBECRPCM",48,0)
 N VBIEN,VBXUSEC,CNT,VBXU,VBU
"RTN","VBECRPCM",49,0)
 S RESULTS=$NA(^TMP("BBUSERS",$J)),VBECCNT=0
"RTN","VBECRPCM",50,0)
 K @RESULTS
"RTN","VBECRPCM",51,0)
 D BEGROOT^VBECRPC("BloodBankUsers")
"RTN","VBECRPCM",52,0)
 D ADD^VBECRPC("<Record count='0' >")
"RTN","VBECRPCM",53,0)
 F VBXUSEC="LRBLOODBANK","LRBLSUPER" S VBXU=0 F  S VBXU=$O(^XUSEC(VBXUSEC,VBXU)) Q:VBXU=""  D
"RTN","VBECRPCM",54,0)
 . Q:'+$$ACTIVE^XUSER(VBXU)
"RTN","VBECRPCM",55,0)
 . S VBU(VBXU)=""
"RTN","VBECRPCM",56,0)
 . Q
"RTN","VBECRPCM",57,0)
 S (CNT,VBIEN)=0
"RTN","VBECRPCM",58,0)
 F  S VBIEN=$O(VBU(VBIEN)) Q:VBIEN=""  D
"RTN","VBECRPCM",59,0)
 . S CNT=CNT+1
"RTN","VBECRPCM",60,0)
 . D BEGROOT^VBECRPC("BloodBankUser")
"RTN","VBECRPCM",61,0)
 . D ADD^VBECRPC("<UserName>"_$$CHARCHK^XOBVLIB($P(^VA(200,VBIEN,0),"^",1))_"</UserName>")
"RTN","VBECRPCM",62,0)
 . D ADD^VBECRPC("<UserDUZ>"_$$CHARCHK^XOBVLIB(VBIEN)_"</UserDUZ>")
"RTN","VBECRPCM",63,0)
 . D ADD^VBECRPC("<UserInitials>"_$$CHARCHK^XOBVLIB($P(^VA(200,VBIEN,0),"^",2))_"</UserInitials>")
"RTN","VBECRPCM",64,0)
 . D BBUSRDIV(VBIEN)
"RTN","VBECRPCM",65,0)
 . D ENDROOT^VBECRPC("BloodBankUser")
"RTN","VBECRPCM",66,0)
 S @RESULTS@(2)="<Record count='"_CNT_"' >"
"RTN","VBECRPCM",67,0)
 D ENDROOT^VBECRPC("Record")
"RTN","VBECRPCM",68,0)
 D ENDROOT^VBECRPC("BloodBankUsers")
"RTN","VBECRPCM",69,0)
 K VBECCNT
"RTN","VBECRPCM",70,0)
 Q
"RTN","VBECRPCM",71,0)
 ;
"RTN","VBECRPCM",72,0)
USRSRCH ; Search for valid Blood Bank users
"RTN","VBECRPCM",73,0)
 ;
"RTN","VBECRPCM",74,0)
 N DD,DIVSUB,VBUSRDUZ,VBUSRNME,VBUSRINI,IENS,BBUSRDIV,DIVERR
"RTN","VBECRPCM",75,0)
 S DD=200,DIVSUB="200.02"
"RTN","VBECRPCM",76,0)
 S SCREEN="I $$USRSCR^VBECRPCM(+Y)"
"RTN","VBECRPCM",77,0)
 D LIST^DIC(DD,"","@;.01;1","P","","","","",.SCREEN,"","","ERR")
"RTN","VBECRPCM",78,0)
 ;
"RTN","VBECRPCM",79,0)
 D ADD^VBECRPC("<Record count='"_$$CHARCHK^XOBVLIB(+$P(^TMP("DILIST",$J,0),U))_"' >")
"RTN","VBECRPCM",80,0)
 S X=0
"RTN","VBECRPCM",81,0)
 F  S X=$O(^TMP("DILIST",$J,X)) Q:X=""  D
"RTN","VBECRPCM",82,0)
 . D BEGROOT^VBECRPC("BloodBankUser")
"RTN","VBECRPCM",83,0)
 . ; User Name
"RTN","VBECRPCM",84,0)
 . S VBUSRNME=$P(^TMP("DILIST",$J,X,0),U,2)
"RTN","VBECRPCM",85,0)
 . ; User DUZ
"RTN","VBECRPCM",86,0)
 . S VBUSRDUZ=+$P(^TMP("DILIST",$J,X,0),U)
"RTN","VBECRPCM",87,0)
 . ; User Initials
"RTN","VBECRPCM",88,0)
 . S VBUSRINI=$P(^TMP("DILIST",$J,X,0),U,3)
"RTN","VBECRPCM",89,0)
 . ;
"RTN","VBECRPCM",90,0)
 . D ADD^VBECRPC("<UserName>"_$$CHARCHK^XOBVLIB(VBUSRNME)_"</UserName>")
"RTN","VBECRPCM",91,0)
 . D ADD^VBECRPC("<UserDUZ>"_$$CHARCHK^XOBVLIB(VBUSRDUZ)_"</UserDUZ>")
"RTN","VBECRPCM",92,0)
 . D ADD^VBECRPC("<UserInitials>"_$$CHARCHK^XOBVLIB(VBUSRINI)_"</UserInitials>")
"RTN","VBECRPCM",93,0)
 . ;
"RTN","VBECRPCM",94,0)
 . ; Get all Divisions for this user.
"RTN","VBECRPCM",95,0)
 . D BBUSRDIV(VBUSRDUZ)
"RTN","VBECRPCM",96,0)
 . ;
"RTN","VBECRPCM",97,0)
 . D ENDROOT^VBECRPC("BloodBankUser")
"RTN","VBECRPCM",98,0)
 . Q
"RTN","VBECRPCM",99,0)
 D ENDROOT^VBECRPC("Record")
"RTN","VBECRPCM",100,0)
 Q
"RTN","VBECRPCM",101,0)
 ;
"RTN","VBECRPCM",102,0)
BBUSRDIV(VBDUZ) ; Gets the divisions for the user and creates the XML
"RTN","VBECRPCM",103,0)
 ;
"RTN","VBECRPCM",104,0)
 N X,DIV,DIVIEN,OUT
"RTN","VBECRPCM",105,0)
 ; Must be active user
"RTN","VBECRPCM",106,0)
 S X=$$DIV4^XUSER(.DIV,VBDUZ)
"RTN","VBECRPCM",107,0)
 Q:'X
"RTN","VBECRPCM",108,0)
 D BEGROOT^VBECRPC("Divisions")
"RTN","VBECRPCM",109,0)
 S DIV=0
"RTN","VBECRPCM",110,0)
 F  S DIV=$O(DIV(DIV)) Q:DIV=""  D
"RTN","VBECRPCM",111,0)
 . D GETDIV(.OUT,DIV)
"RTN","VBECRPCM",112,0)
 . I '+$P(OUT,U) S ERR=$P(OUT,U,2) D ERROR(ERR) Q
"RTN","VBECRPCM",113,0)
 . Q:'$D(OUT)
"RTN","VBECRPCM",114,0)
 . S DIVIEN=DIV_","
"RTN","VBECRPCM",115,0)
 . ; Check if division is active
"RTN","VBECRPCM",116,0)
 . I $G(OUT(4,DIVIEN,101))=1 Q
"RTN","VBECRPCM",117,0)
 . ;
"RTN","VBECRPCM",118,0)
 . ;D BEGROOT^VBECRPC("Division")
"RTN","VBECRPCM",119,0)
 . ;D ADD^VBECRPC("<DivisionName>"_$$CHARCHK^XOBVLIB(OUT(4,DIVIEN,.01))_"</DivisionName>")
"RTN","VBECRPCM",120,0)
 . D ADD^VBECRPC("<Division divisionCode="""_$$CHARCHK^XOBVLIB(OUT(4,DIVIEN,99))_""" />")
"RTN","VBECRPCM",121,0)
 . ;D ENDROOT^VBECRPC("Division")
"RTN","VBECRPCM",122,0)
 . Q
"RTN","VBECRPCM",123,0)
 D ENDROOT^VBECRPC("Divisions")
"RTN","VBECRPCM",124,0)
 Q
"RTN","VBECRPCM",125,0)
 ;
"RTN","VBECRPCM",126,0)
USRSCR(IEN) ; Screens for valid Blood Bank Users
"RTN","VBECRPCM",127,0)
 Q:(IEN']"")!(IEN<0) 0
"RTN","VBECRPCM",128,0)
 Q:('$D(^XUSEC("LRBLOODBANK",IEN)))&('$D(^XUSEC("LRBLSUPER",IEN))) 0
"RTN","VBECRPCM",129,0)
 Q +$$ACTIVE^XUSER(IEN)
"RTN","VBECRPCM",130,0)
 ;
"RTN","VBECRPCM",131,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",132,0)
 ;      Private Method supports IA 4609
"RTN","VBECRPCM",133,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",134,0)
DIV(RESULTS) ; Lookup and return all Divisions associated with a medical center
"RTN","VBECRPCM",135,0)
 ;
"RTN","VBECRPCM",136,0)
 N DD,OUT,ERR,DIV,DIVIEN
"RTN","VBECRPCM",137,0)
 S VBECCNT=0
"RTN","VBECRPCM",138,0)
 S RESULTS=$NA(^TMP("VBECS_DIVISIONS",$J))
"RTN","VBECRPCM",139,0)
 K @RESULTS
"RTN","VBECRPCM",140,0)
 D BEGROOT^VBECRPC("Divisions")
"RTN","VBECRPCM",141,0)
 ;
"RTN","VBECRPCM",142,0)
 S DIV=0
"RTN","VBECRPCM",143,0)
 F  S DIV=$O(^DG(40.8,"AD",DIV)) Q:DIV=""  D  Q:$D(ERR)
"RTN","VBECRPCM",144,0)
 . D GETDIV(.OUT,DIV)
"RTN","VBECRPCM",145,0)
 . I '+$P(OUT,U) S ERR=$P(OUT,U,2) D ERROR(ERR) Q
"RTN","VBECRPCM",146,0)
 . Q:'$D(OUT)
"RTN","VBECRPCM",147,0)
 . S DIVIEN=DIV_","
"RTN","VBECRPCM",148,0)
 . ; See DR - 1670 / VistA MR 006
"RTN","VBECRPCM",149,0)
 . ; Removed check if division is a medical center
"RTN","VBECRPCM",150,0)
 . ; Added screen for station numbers greater than 5
"RTN","VBECRPCM",151,0)
 . I $L(OUT(4,DIVIEN,99))>5 Q
"RTN","VBECRPCM",152,0)
 . I $G(OUT(4,DIVIEN,99))="" Q
"RTN","VBECRPCM",153,0)
 . ; Check if division is active
"RTN","VBECRPCM",154,0)
 . I $G(OUT(4,DIVIEN,101))=1 Q
"RTN","VBECRPCM",155,0)
 . D BEGROOT^VBECRPC("Division")
"RTN","VBECRPCM",156,0)
 . D ADD^VBECRPC("<DivisionCode>"_$$CHARCHK^XOBVLIB(OUT(4,DIVIEN,99))_"</DivisionCode>")
"RTN","VBECRPCM",157,0)
 . D ADD^VBECRPC("<DivisionName>"_$$CHARCHK^XOBVLIB(OUT(4,DIVIEN,.01))_"</DivisionName>")
"RTN","VBECRPCM",158,0)
 . D ENDROOT^VBECRPC("Division")
"RTN","VBECRPCM",159,0)
 D ENDROOT^VBECRPC("Divisions")
"RTN","VBECRPCM",160,0)
 ;
"RTN","VBECRPCM",161,0)
 K VBECCNT
"RTN","VBECRPCM",162,0)
 Q
"RTN","VBECRPCM",163,0)
 ;
"RTN","VBECRPCM",164,0)
GETDIV(OUT,INST) ;
"RTN","VBECRPCM",165,0)
 ; Returns data associated with a Division represented by the
"RTN","VBECRPCM",166,0)
 ; Institution pointer
"RTN","VBECRPCM",167,0)
 ;
"RTN","VBECRPCM",168,0)
 ; Input:    OUT  = Passed by reference used to return array
"RTN","VBECRPCM",169,0)
 ;           INST = Pointer to Institution file
"RTN","VBECRPCM",170,0)
 ;
"RTN","VBECRPCM",171,0)
 ; Returns:  Output from LIST^DIC in the OUT array containing data from
"RTN","VBECRPCM",172,0)
 ;           fields .01, 99 and 101
"RTN","VBECRPCM",173,0)
 ;
"RTN","VBECRPCM",174,0)
 N ERR
"RTN","VBECRPCM",175,0)
 S OUT="1^"
"RTN","VBECRPCM",176,0)
 I INST']"" S OUT="0^Pointer to Institutuion file not found"
"RTN","VBECRPCM",177,0)
 I INST'["," S INST=INST_","
"RTN","VBECRPCM",178,0)
 D GETS^DIQ(4,INST,".01;99;101",,"OUT","ERR")
"RTN","VBECRPCM",179,0)
 I $D(ERR) S OUT="0^"_ERR("DIERR",1,"TEXT",1)
"RTN","VBECRPCM",180,0)
 Q
"RTN","VBECRPCM",181,0)
 ;
"RTN","VBECRPCM",182,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",183,0)
 ;      Private Method Supports IA 4607
"RTN","VBECRPCM",184,0)
 ; ---------------------------------------------------------------
"RTN","VBECRPCM",185,0)
ACNAREA(RESULTS) ; Gets the Blood Bank Accession Areas from the Accession file
"RTN","VBECRPCM",186,0)
 ; Supporst MUC_02 Configure Division
"RTN","VBECRPCM",187,0)
 ;
"RTN","VBECRPCM",188,0)
 N X,VBECARY
"RTN","VBECRPCM",189,0)
 S (VBECCNT,X)=0
"RTN","VBECRPCM",190,0)
 S RESULTS=$NA(^TMP("VBECS_ACCESSION_AREAS",$J))
"RTN","VBECRPCM",191,0)
 K @RESULTS
"RTN","VBECRPCM",192,0)
 D BEGROOT^VBECRPC("AccessionAreas")
"RTN","VBECRPCM",193,0)
 F  S X=$O(^LRO(68,X)) Q:X'?1N.N  D
"RTN","VBECRPCM",194,0)
 . Q:$P(^LRO(68,X,0),"^",2)'="BB" 
"RTN","VBECRPCM",195,0)
 . S VBECARY(X)=$P(^LRO(68,X,0),"^")
"RTN","VBECRPCM",196,0)
 . D BEGROOT^VBECRPC("AccessionArea")
"RTN","VBECRPCM",197,0)
 . D ADD^VBECRPC("<AccessionAreaName>"_$$CHARCHK^XOBVLIB($P(^LRO(68,X,0),"^"))_"</AccessionAreaName>")
"RTN","VBECRPCM",198,0)
 . D ADD^VBECRPC("<AccessionAreaId>"_$$CHARCHK^XOBVLIB(X)_"</AccessionAreaId>")
"RTN","VBECRPCM",199,0)
 . D ENDROOT^VBECRPC("AccessionArea")
"RTN","VBECRPCM",200,0)
 D ENDROOT^VBECRPC("AccessionAreas")
"RTN","VBECRPCM",201,0)
 ;
"RTN","VBECRPCM",202,0)
 K VBECCNT
"RTN","VBECRPCM",203,0)
 Q
"RTN","VBECRPCM",204,0)
 ;       
"RTN","VBECRPCM",205,0)
ERROR(TEXT) ;
"RTN","VBECRPCM",206,0)
 D ERROR^VBECRPC(TEXT)
"RTN","VBECRPCM",207,0)
 Q
"RTN","VBECRPCP")
0^62^B17844001
"RTN","VBECRPCP",1,0)
VBECRPCP ;HIOFO/BNT - Patient Medication Profile Lookup ;24 May 2004
"RTN","VBECRPCP",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCP",3,0)
 ;
"RTN","VBECRPCP",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCP",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCP",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCP",7,0)
 ; 
"RTN","VBECRPCP",8,0)
 ; Integration Agreements:
"RTN","VBECRPCP",9,0)
 ; Reference to OCL^PSOORRL supported by IA #2400
"RTN","VBECRPCP",10,0)
 ; Reference to DEM^VADPT supported by IA #10061
"RTN","VBECRPCP",11,0)
 ; Reference to $$FMTHL7^XLFDT supported by IA #10103
"RTN","VBECRPCP",12,0)
 ; Reference to $$HL7TFM^XLFDT supported by IA #10103
"RTN","VBECRPCP",13,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCP",14,0)
 ; 
"RTN","VBECRPCP",15,0)
 ;
"RTN","VBECRPCP",16,0)
 QUIT
"RTN","VBECRPCP",17,0)
 ;
"RTN","VBECRPCP",18,0)
 ; --------------------------------------------------------
"RTN","VBECRPCP",19,0)
 ;      Private method supports IA #4613
"RTN","VBECRPCP",20,0)
 ; --------------------------------------------------------
"RTN","VBECRPCP",21,0)
RX(RESULTS,DFN,SDATE,EDATE) ; Get Medication Profile from Pharmacy API
"RTN","VBECRPCP",22,0)
 N X,Y,BDT,EDT,RX0,ISDT
"RTN","VBECRPCP",23,0)
 S VBECCNT=0
"RTN","VBECRPCP",24,0)
 S RESULTS=$NA(^TMP("VBECMEDPROFILE",$J))
"RTN","VBECRPCP",25,0)
 ;
"RTN","VBECRPCP",26,0)
 S EDT=$$HL7TFM^XLFDT(EDATE)
"RTN","VBECRPCP",27,0)
 S BDT=$$HL7TFM^XLFDT(SDATE)
"RTN","VBECRPCP",28,0)
 D BEGROOT^VBECRPC("MedicationProfile")
"RTN","VBECRPCP",29,0)
 I DFN]"" D DEM^VADPT
"RTN","VBECRPCP",30,0)
 I $G(VADM(1))="" D  D ENDROOT^VBECRPC("MedicationProfile") Q
"RTN","VBECRPCP",31,0)
 . D ADD^VBECRPC("<PatientName>Invalid Patient ID ("_$$CHARCHK^XOBVLIB(DFN)_")</PatientName><PatientSsn></PatientSsn><PatientDob></PatientDob><BeginningSearchDate></BeginningSearchDate><EndingSearchDate></EndingSearchDate>")
"RTN","VBECRPCP",32,0)
 . D ADD^VBECRPC("<Order><OrderNumber></OrderNumber><DrugName></DrugName><IssueStartDate></IssueStartDate><Status></Status><InpatientOutpatientIndicator></InpatientOutpatientIndicator></Order>")
"RTN","VBECRPCP",33,0)
 I BDT]"" S X=BDT D ^%DT S BDT=$S(Y<0:"",1:Y)
"RTN","VBECRPCP",34,0)
 I BDT']"" S X1=EDT,X2=-180 D C^%DTC S BDT=X
"RTN","VBECRPCP",35,0)
 D OCL^PSOORRL(DFN,BDT,EDT)
"RTN","VBECRPCP",36,0)
 D ADD^VBECRPC("<PatientName>"_$$CHARCHK^XOBVLIB($G(VADM(1)))_"</PatientName>")
"RTN","VBECRPCP",37,0)
 D ADD^VBECRPC("<PatientSsn>"_$$CHARCHK^XOBVLIB($P($G(VADM(2)),U,2))_"</PatientSsn>")
"RTN","VBECRPCP",38,0)
 D ADD^VBECRPC("<PatientDob>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT($P($G(VADM(3)),U,1)))_"</PatientDob>")
"RTN","VBECRPCP",39,0)
 D ADD^VBECRPC("<BeginningSearchDate>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT(BDT))_"</BeginningSearchDate>")
"RTN","VBECRPCP",40,0)
 D ADD^VBECRPC("<EndingSearchDate>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT(EDT))_"</EndingSearchDate>")
"RTN","VBECRPCP",41,0)
 I $D(^TMP("PS",$J)) D
"RTN","VBECRPCP",42,0)
 . S I=0 F  S I=$O(^TMP("PS",$J,I)) Q:I=""  D
"RTN","VBECRPCP",43,0)
 . . S RX0=^TMP("PS",$J,I,0)
"RTN","VBECRPCP",44,0)
 . . Q:$P(RX0,U,15)<BDT
"RTN","VBECRPCP",45,0)
 . . D ADD^VBECRPC("<Order><OrderNumber>"_$$CHARCHK^XOBVLIB($$STRIPL3^VBECRPC($P(RX0,U)))_"</OrderNumber>")
"RTN","VBECRPCP",46,0)
 . . D ADD^VBECRPC("<DrugName>"_$$CHARCHK^XOBVLIB($P(^TMP("PS",$J,I,0),U,2))_"</DrugName>")
"RTN","VBECRPCP",47,0)
 . . D ADD^VBECRPC("<IssueStartDate>"_$$CHARCHK^XOBVLIB($$FMTHL7^XLFDT($P(RX0,U,15)))_"</IssueStartDate>")
"RTN","VBECRPCP",48,0)
 . . D ADD^VBECRPC("<Status>"_$$CHARCHK^XOBVLIB($P(RX0,U,9))_"</Status>")
"RTN","VBECRPCP",49,0)
 . . D ADD^VBECRPC("<InpatientOutpatientIndicator>"_$$CHARCHK^XOBVLIB($P($P(RX0,U,1),";",2))_"</InpatientOutpatientIndicator>")
"RTN","VBECRPCP",50,0)
 . . D ADD^VBECRPC("</Order>")
"RTN","VBECRPCP",51,0)
 I '$D(^TMP("PS",$J)) D
"RTN","VBECRPCP",52,0)
 . D ADD^VBECRPC("<Order><OrderNumber></OrderNumber><DrugName>No medications were found for the date range. You may repeat the query with a different date range.</DrugName>")
"RTN","VBECRPCP",53,0)
 . D ADD^VBECRPC("<IssueStartDate></IssueStartDate><Status></Status><InpatientOutpatientIndicator></InpatientOutpatientIndicator></Order>")
"RTN","VBECRPCP",54,0)
 D ENDROOT^VBECRPC("MedicationProfile")
"RTN","VBECRPCP",55,0)
 ;
"RTN","VBECRPCP",56,0)
 K VBECCNT
"RTN","VBECRPCP",57,0)
 Q
"RTN","VBECRPCW")
0^64^B4711802
"RTN","VBECRPCW",1,0)
VBECRPCW ; HOIFO/BNT-VBECS Workload Code Lookup RPC ;18 May 2004
"RTN","VBECRPCW",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECRPCW",3,0)
 ;
"RTN","VBECRPCW",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECRPCW",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECRPCW",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECRPCW",7,0)
 ; 
"RTN","VBECRPCW",8,0)
 ; Integration Agreements:
"RTN","VBECRPCW",9,0)
 ; Reference to $$CHARCHK^XOBVLIB supported by IA #4090
"RTN","VBECRPCW",10,0)
 ; Reference to ^LAM suppored by IA #4779
"RTN","VBECRPCW",11,0)
 ;
"RTN","VBECRPCW",12,0)
 QUIT
"RTN","VBECRPCW",13,0)
 ;
"RTN","VBECRPCW",14,0)
WKLD(RESULTS) ;
"RTN","VBECRPCW",15,0)
 ; Get Workload data for use case 29
"RTN","VBECRPCW",16,0)
 ;
"RTN","VBECRPCW",17,0)
 S VBECCNT=0
"RTN","VBECRPCW",18,0)
 S RESULTS=$NA(^TMP("VBECWKLD",$J))
"RTN","VBECRPCW",19,0)
 K @RESULTS
"RTN","VBECRPCW",20,0)
 N WKLD0,CNT,X,Y,LRSEC,PROC,COST,CPT
"RTN","VBECRPCW",21,0)
 S (CNT,X)=0
"RTN","VBECRPCW",22,0)
 D BEGROOT^VBECRPC("Workload")
"RTN","VBECRPCW",23,0)
 F  S X=$O(^LAM(X)) Q:'+X  D
"RTN","VBECRPCW",24,0)
 . S WKLD0=^LAM(X,0)
"RTN","VBECRPCW",25,0)
 . S WGHT=$P(WKLD0,"^",3)
"RTN","VBECRPCW",26,0)
 . S:'WGHT WGHT=1
"RTN","VBECRPCW",27,0)
 . ; Round weight multiplier decimal value to nearest integer.
"RTN","VBECRPCW",28,0)
 . I WGHT["." D
"RTN","VBECRPCW",29,0)
 . . S X1=$P(WGHT,"."),X2=$P(WGHT,".",2)
"RTN","VBECRPCW",30,0)
 . . S WGHT=$S(X2>4:X1+1,1:X1)
"RTN","VBECRPCW",31,0)
 . ; Set weight multiplier to 1 if undefined or 0.
"RTN","VBECRPCW",32,0)
 . S WGHT=$S(WGHT']"":1,WGHT=0:1,1:WGHT)
"RTN","VBECRPCW",33,0)
 . S LRSEC=$P(WKLD0,"^",15) Q:LRSEC=""
"RTN","VBECRPCW",34,0)
 . Q:'$D(^LAB(64.21,"B","Blood Bank",LRSEC))
"RTN","VBECRPCW",35,0)
 . D BEGROOT^VBECRPC("Code")
"RTN","VBECRPCW",36,0)
 . D ADD^VBECRPC("<LMIP>"_$$CHARCHK^XOBVLIB($P(WKLD0,"^",2))_"</LMIP>")
"RTN","VBECRPCW",37,0)
 . D ADD^VBECRPC("<Procedure>"_$$CHARCHK^XOBVLIB($P(WKLD0,"^"))_"</Procedure>")
"RTN","VBECRPCW",38,0)
 . D ADD^VBECRPC("<Cost>"_$$CHARCHK^XOBVLIB($P(WKLD0,"^",10))_"</Cost>")
"RTN","VBECRPCW",39,0)
 . D ADD^VBECRPC("<WeightMultiplier>"_$$CHARCHK^XOBVLIB(WGHT)_"</WeightMultiplier>")
"RTN","VBECRPCW",40,0)
 . I $D(^LAM("AD",X,"CPT")) D
"RTN","VBECRPCW",41,0)
 . . S Y=0
"RTN","VBECRPCW",42,0)
 . . F  S Y=$O(^LAM("AD",X,"CPT",Y)) Q:Y']""  D
"RTN","VBECRPCW",43,0)
 . . . I $P(^LAM(X,4,Y,0),"^",4)]"" Q
"RTN","VBECRPCW",44,0)
 . . . D ADD^VBECRPC("<CPTCode>"_$$CHARCHK^XOBVLIB(+^LAM(X,4,Y,0))_"</CPTCode>")
"RTN","VBECRPCW",45,0)
 . D ENDROOT^VBECRPC("Code")
"RTN","VBECRPCW",46,0)
 . Q
"RTN","VBECRPCW",47,0)
 D ENDROOT^VBECRPC("Workload")
"RTN","VBECRPCW",48,0)
 Q
"RTN","VBECRPCW",49,0)
 ;
"RTN","VBECRPCW",50,0)
KILL ;
"RTN","VBECRPCW",51,0)
 K VBECCNT,CNT,X
"RTN","VBECRPCW",52,0)
 Q
"RTN","VBECVLC")
0^68^B21453424
"RTN","VBECVLC",1,0)
VBECVLC ;HOIFO/BNT-VBECS VistALink Client ;07/27/2002
"RTN","VBECVLC",2,0)
 ;;1.0;VBECS;;Apr 14, 2005;Build 35
"RTN","VBECVLC",3,0)
 ;
"RTN","VBECVLC",4,0)
 ; Note: This routine supports data exchange with an FDA registered
"RTN","VBECVLC",5,0)
 ; medical device. As such, it may not be changed in any way without
"RTN","VBECVLC",6,0)
 ; prior written approval from the medical device manufacturer.
"RTN","VBECVLC",7,0)
 ; 
"RTN","VBECVLC",8,0)
 ; Integration Agreements:
"RTN","VBECVLC",9,0)
 ;  Call to XOBVLIB Supported by IA #4090
"RTN","VBECVLC",10,0)
 ;  Reference to %ZOSV supported by IA #10097
"RTN","VBECVLC",11,0)
 ;  Reference to %ZTER supported by IA #1621
"RTN","VBECVLC",12,0)
 ;
"RTN","VBECVLC",13,0)
 QUIT
"RTN","VBECVLC",14,0)
 ;
"RTN","VBECVLC",15,0)
EXECUTE(VBECPRMS) ; -- Main entry point
"RTN","VBECVLC",16,0)
 NEW X,VBECI,VBECOK,VBECRES,VBECREF,VBECROOT,VBECREQ,VBECREAD,VBECTO,VBECFRST,VBECSTOP,VBECRL
"RTN","VBECVLC",17,0)
 NEW $ETRAP,$ESTACK S $ETRAP="D SYSERR^VBECVLC"
"RTN","VBECVLC",18,0)
 ;
"RTN","VBECVLC",19,0)
 ; -- if no 'results' node set, set it and kill it!
"RTN","VBECVLC",20,0)
 IF $G(VBECPRMS("RESULTS"))="" SET VBECPRMS("RESULTS")=$NA(^TMP("VBECVLC",$J,"XML"))
"RTN","VBECVLC",21,0)
 SET VBECROOT=VBECPRMS("RESULTS")
"RTN","VBECVLC",22,0)
 KILL @VBECROOT
"RTN","VBECVLC",23,0)
 ;
"RTN","VBECVLC",24,0)
 SET VBECREQ=VBECPRMS("REQUEST")
"RTN","VBECVLC",25,0)
 ;
"RTN","VBECVLC",26,0)
 ; -- intialize result flag to 'failed' (0)
"RTN","VBECVLC",27,0)
 SET VBECRES=0
"RTN","VBECVLC",28,0)
 ;
"RTN","VBECVLC",29,0)
 ; -- application can pass in address/port
"RTN","VBECVLC",30,0)
 IF '$D(VBECPRMS("ADDRESS")) D CLIERR(1,.VBECROOT) GOTO MAINQ
"RTN","VBECVLC",31,0)
 IF '$D(VBECPRMS("PORT")) D CLIERR(2,.VBECROOT) GOTO MAINQ
"RTN","VBECVLC",32,0)
 ;
"RTN","VBECVLC",33,0)
 ;  Retry open only once to prevent delay in calling application
"RTN","VBECVLC",34,0)
 SET VBECPRMS("RETRIES")=1
"RTN","VBECVLC",35,0)
 IF '$$OPEN^VBECRL(.VBECPRMS) D CLIERR(3,.VBECROOT) GOTO MAINQ
"RTN","VBECVLC",36,0)
 ;
"RTN","VBECVLC",37,0)
 ; -- write request
"RTN","VBECVLC",38,0)
 DO PRE^VBECRL
"RTN","VBECVLC",39,0)
 SET VBECI=0 FOR  SET VBECI=$O(@VBECREQ@(VBECI)) Q:'VBECI  DO WRITE^VBECRL(@VBECREQ@(VBECI))
"RTN","VBECVLC",40,0)
 ;
"RTN","VBECVLC",41,0)
 ; -- send eot and flush buffer
"RTN","VBECVLC",42,0)
 DO POST^VBECRL
"RTN","VBECVLC",43,0)
 ;
"RTN","VBECVLC",44,0)
 ; -- set inputs and read results
"RTN","VBECVLC",45,0)
 SET VBECREAD=255,VBECTO=1,VBECFRST=0,VBECSTOP=0
"RTN","VBECVLC",46,0)
 SET VBECOK=$$READ^VBECRL(VBECROOT,.VBECREAD,.VBECTO,.VBECFRST,.VBECSTOP)
"RTN","VBECVLC",47,0)
 ;
"RTN","VBECVLC",48,0)
 ; -- close port
"RTN","VBECVLC",49,0)
 DO CLOSE^VBECRL(.VBECPRMS)
"RTN","VBECVLC",50,0)
 ;
"RTN","VBECVLC",51,0)
 ; -- set result flag to 'successful' (1)
"RTN","VBECVLC",52,0)
 SET VBECRES=1
"RTN","VBECVLC",53,0)
 ;
"RTN","VBECVLC",54,0)
MAINQ ;
"RTN","VBECVLC",55,0)
 QUIT VBECRES
"RTN","VBECVLC",56,0)
 ;
"RTN","VBECVLC",57,0)
 ; -----------------------------------------------------
"RTN","VBECVLC",58,0)
 ;         Client Error Handler
"RTN","VBECVLC",59,0)
 ; -----------------------------------------------------
"RTN","VBECVLC",60,0)
CLIERR(VBECCODE,VBECROOT) ; -- send client error message
"RTN","VBECVLC",61,0)
 NEW VBECDAT
"RTN","VBECVLC",62,0)
 SET VBECDAT("MESSAGE TYPE")="gov.va.med.foundations.rpc.fault"
"RTN","VBECVLC",63,0)
 SET VBECDAT("ERRORS",1,"CODE")=1
"RTN","VBECVLC",64,0)
 SET VBECDAT("ERRORS",1,"ERROR TYPE")="client"
"RTN","VBECVLC",65,0)
 SET VBECDAT("ERRORS",1,"CDATA")=1
"RTN","VBECVLC",66,0)
 SET VBECDAT("ERRORS",1,"MESSAGE")=$P($TEXT(CLIERRS+VBECCODE),";;",2)
"RTN","VBECVLC",67,0)
 DO BUILD(.VBECROOT,.VBECDAT)
"RTN","VBECVLC",68,0)
 QUIT
"RTN","VBECVLC",69,0)
 ;
"RTN","VBECVLC",70,0)
 ; ------------------------------------------------------
"RTN","VBECVLC",71,0)
 ;         System Error Handler
"RTN","VBECVLC",72,0)
 ; ------------------------------------------------------
"RTN","VBECVLC",73,0)
SYSERR ; -- send system error message
"RTN","VBECVLC",74,0)
 NEW VBECDAT,VBECMSG,$ETRAP
"RTN","VBECVLC",75,0)
 SET $ETRAP="D ^%ZTER HALT" ; -- If we get an error in the error handler just Halt
"RTN","VBECVLC",76,0)
 SET VBECMSG=$$EC^%ZOSV      ; -- Get the error code
"RTN","VBECVLC",77,0)
 DO ^%ZTER                  ; -- Save off the error
"RTN","VBECVLC",78,0)
 ;
"RTN","VBECVLC",79,0)
 SET VBECDAT("MESSAGE TYPE")="gov.va.med.foundations.rpc.fault"
"RTN","VBECVLC",80,0)
 SET VBECDAT("ERRORS",1,"CODE")=1
"RTN","VBECVLC",81,0)
 SET VBECDAT("ERRORS",1,"ERROR TYPE")="system"
"RTN","VBECVLC",82,0)
 SET VBECDAT("ERRORS",1,"CDATA")=1
"RTN","VBECVLC",83,0)
 SET VBECDAT("ERRORS",1,"MESSAGE",1)=$P($TEXT(SYSERRS+1),";;",2)_VBECMSG
"RTN","VBECVLC",84,0)
 DO BUILD(.VBECROOT,.VBECDAT)
"RTN","VBECVLC",85,0)
 QUIT
"RTN","VBECVLC",86,0)
 ;
"RTN","VBECVLC",87,0)
BUILD(VBECY,VBECDAT) ;  -- store built xml in passed store reference (VBECY)
"RTN","VBECVLC",88,0)
 ; -- input format
"RTN","VBECVLC",89,0)
 ; VBECDAT("MESSAGE TYPE") = type of message (ex. gov.va.med.foundations.rpc.fault) 
"RTN","VBECVLC",90,0)
 ; VBECDAT("ERRORS",<integer>,"CODE") = error code
"RTN","VBECVLC",91,0)
 ; VBECDAT("ERRORS",<integer>,"ERROR TYPE") = type of error (system/application/security)
"RTN","VBECVLC",92,0)
 ; VBECDAT("ERRORS",<integer>,"MESSAGE",<integer>) = error message
"RTN","VBECVLC",93,0)
 ; 
"RTN","VBECVLC",94,0)
 NEW VBECCODE,VBECI,VBECERR,VBECLINE,VBECETYP
"RTN","VBECVLC",95,0)
 SET VBECLINE=0
"RTN","VBECVLC",96,0)
 ;
"RTN","VBECVLC",97,0)
 DO ADD($$XMLHDR^XOBVLIB())
"RTN","VBECVLC",98,0)
 DO ADD("<VistaLink messageType="""_$G(VBECDAT("MESSAGE TYPE"))_""" version=""1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""rpcFault.xsd"" >")
"RTN","VBECVLC",99,0)
 DO ADD("xmlns=""http://domain.ext/Foundations"">")
"RTN","VBECVLC",100,0)
 DO ADD("<Fault>")
"RTN","VBECVLC",101,0)
 DO ADD("<FaultString>Internal Application Error</FaultString>")
"RTN","VBECVLC",102,0)
 DO ADD("<FaultActor>VBECS VistaLink Client</FaultActor>")
"RTN","VBECVLC",103,0)
 SET VBECERR=0
"RTN","VBECVLC",104,0)
 FOR  SET VBECERR=$O(VBECDAT("ERRORS",VBECERR)) Q:'VBECERR  DO
"RTN","VBECVLC",105,0)
 . SET VBECCODE=$G(VBECDAT("ERRORS",VBECERR,"CODE"),0)
"RTN","VBECVLC",106,0)
 . SET VBECETYP=$G(VBECDAT("ERRORS",VBECERR,"ERROR TYPE"),0)
"RTN","VBECVLC",107,0)
 . DO ADD("<Detail>")
"RTN","VBECVLC",108,0)
 . DO ADD("<Error code="""_VBECCODE_""" type="""_VBECETYP_""" >")
"RTN","VBECVLC",109,0)
 . DO ADD("<Message>"_$$CHARCHK^XOBVLIB(VBECDAT("ERRORS",VBECERR,"MESSAGE"))_"</Message>")
"RTN","VBECVLC",110,0)
 . DO ADD("</Error>")
"RTN","VBECVLC",111,0)
 . DO ADD("</Detail>")
"RTN","VBECVLC",112,0)
 DO ADD("</Fault>")
"RTN","VBECVLC",113,0)
 DO ADD("</VistaLink>")
"RTN","VBECVLC",114,0)
 ;
"RTN","VBECVLC",115,0)
 QUIT
"RTN","VBECVLC",116,0)
 ;
"RTN","VBECVLC",117,0)
ADD(TXT) ; -- add line
"RTN","VBECVLC",118,0)
 SET VBECLINE=VBECLINE+1
"RTN","VBECVLC",119,0)
 SET @VBECY@(VBECLINE)=TXT
"RTN","VBECVLC",120,0)
 QUIT
"RTN","VBECVLC",121,0)
 ;
"RTN","VBECVLC",122,0)
CLIERRS ; -- VistALink client errors
"RTN","VBECVLC",123,0)
 ;;'Address' parameter not specified.
"RTN","VBECVLC",124,0)
 ;;'Port' parameter not specified.
"RTN","VBECVLC",125,0)
 ;;Not able to open port.
"RTN","VBECVLC",126,0)
 ;
"RTN","VBECVLC",127,0)
SYSERRS ; -- application errors
"RTN","VBECVLC",128,0)
 ;;A system error occurred in M: "
"SEC","^DIC",6002.01,6002.01,0,"AUDIT")
@
"SEC","^DIC",6002.01,6002.01,0,"DD")
@
"SEC","^DIC",6002.01,6002.01,0,"DEL")
@
"SEC","^DIC",6002.01,6002.01,0,"LAYGO")
@
"SEC","^DIC",6002.01,6002.01,0,"RD")
@
"SEC","^DIC",6002.01,6002.01,0,"WR")
@
"VER")
8.0^22.0
"^DD",6002.01,6002.01,0)
FIELD^^14^18
"^DD",6002.01,6002.01,0,"DDA")
N
"^DD",6002.01,6002.01,0,"DT")
3040927
"^DD",6002.01,6002.01,0,"IX","AC",6002.01,5)

"^DD",6002.01,6002.01,0,"IX","B",6002.01,.01)

"^DD",6002.01,6002.01,0,"NM","VBECS WORKLOAD CAPTURE")

"^DD",6002.01,6002.01,0,"VRPK")
VBECS
"^DD",6002.01,6002.01,.01,0)
TRANSACTION ID^RF^^0;1^K:$L(X)>50!($L(X)<3) X
"^DD",6002.01,6002.01,.01,1,0)
^.1
"^DD",6002.01,6002.01,.01,1,1,0)
6002.01^B
"^DD",6002.01,6002.01,.01,1,1,1)
S ^VBEC(6002.01,"B",$E(X,1,30),DA)=""
"^DD",6002.01,6002.01,.01,1,1,2)
K ^VBEC(6002.01,"B",$E(X,1,30),DA)
"^DD",6002.01,6002.01,.01,1,1,"DT")
3040818
"^DD",6002.01,6002.01,.01,3)
Answer must be 3-50 characters in length
"^DD",6002.01,6002.01,.01,21,0)
^.001^1^1^3040818^^^
"^DD",6002.01,6002.01,.01,21,1,0)
This field is used to uniquely identify the workload transaction.
"^DD",6002.01,6002.01,.01,"DT")
3040818
"^DD",6002.01,6002.01,1,0)
TRANSACTION TYPE^RS^P:PATIENT;U:UNITS;D:DONOR;M:MISCELLANEOUS;^0;2^Q
"^DD",6002.01,6002.01,1,21,0)
^^5^5^3040309^
"^DD",6002.01,6002.01,1,21,1,0)
This field indicates the type of workload transaction being recorded.
"^DD",6002.01,6002.01,1,21,2,0)
1) Patient
"^DD",6002.01,6002.01,1,21,3,0)
2) Units
"^DD",6002.01,6002.01,1,21,4,0)
3) Donor
"^DD",6002.01,6002.01,1,21,5,0)
4) Misc
"^DD",6002.01,6002.01,1,"DT")
3040408
"^DD",6002.01,6002.01,2,0)
DIVISION^RP4'^DIC(4,^0;3^Q
"^DD",6002.01,6002.01,2,21,0)
^^1^1^3050822^
"^DD",6002.01,6002.01,2,21,1,0)
The Division/Institution where the workload event occurred.
"^DD",6002.01,6002.01,2,"DT")
3050822
"^DD",6002.01,6002.01,3,0)
DATE/TIME^RD^^0;4^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",6002.01,6002.01,3,3)
(No range limit on date)
"^DD",6002.01,6002.01,3,21,0)
^^1^1^3050822^
"^DD",6002.01,6002.01,3,21,1,0)
The Date/Time the workload event occured.
"^DD",6002.01,6002.01,3,"DT")
3050822
"^DD",6002.01,6002.01,4,0)
PROCESSED DATE^D^^0;5^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",6002.01,6002.01,4,3)
(No range limit on date)
"^DD",6002.01,6002.01,4,21,0)
^^2^2^3040309^
"^DD",6002.01,6002.01,4,21,1,0)
This field is populated by the Lab software to indicate completion of the 
"^DD",6002.01,6002.01,4,21,2,0)
transaction.
"^DD",6002.01,6002.01,4,"DT")
3040309
"^DD",6002.01,6002.01,5,0)
STATUS^RS^P:Pending Processing;I:In Process;S:Successfully Processed;E:Error;^0;6^Q
"^DD",6002.01,6002.01,5,1,0)
^.1
"^DD",6002.01,6002.01,5,1,1,0)
6002.01^AC
"^DD",6002.01,6002.01,5,1,1,1)
S ^VBEC(6002.01,"AC",$E(X,1,30),DA)=""
"^DD",6002.01,6002.01,5,1,1,2)
K ^VBEC(6002.01,"AC",$E(X,1,30),DA)
"^DD",6002.01,6002.01,5,1,1,3)
This indicates the status of entry
"^DD",6002.01,6002.01,5,1,1,"%D",0)
^^2^2^3040725^
"^DD",6002.01,6002.01,5,1,1,"%D",1,0)
This X-Ref indicates the status of the record in the file. Only those 
"^DD",6002.01,6002.01,5,1,1,"%D",2,0)
with the status of Pending are process for VistA workload.
"^DD",6002.01,6002.01,5,1,1,"DT")
3040725
"^DD",6002.01,6002.01,5,"DT")
3040725
"^DD",6002.01,6002.01,6,0)
WORKLOAD CODE^RP64'^LAM(^WKLD;1^Q
"^DD",6002.01,6002.01,6,"DT")
3040309
"^DD",6002.01,6002.01,7,0)
WORKLOAD METHOD^P64.2'^LAB(64.2,^WKLD;2^Q
"^DD",6002.01,6002.01,7,"DT")
3040927
"^DD",6002.01,6002.01,8,0)
MULTIPLY FACTOR^NJ3,0^^WKLD;3^K:+X'=X!(X>100)!(X<-100)!(X?.E1"."1N.N) X
"^DD",6002.01,6002.01,8,3)
Type a Number between -100 and 100, 0 Decimal Digits
"^DD",6002.01,6002.01,8,"DT")
3040309
"^DD",6002.01,6002.01,9,0)
DFN^P2'^DPT(^WKLD;4^Q
"^DD",6002.01,6002.01,9,"DT")
3040309
"^DD",6002.01,6002.01,10,0)
USER ID^P200'^VA(200,^WKLD;5^Q
"^DD",6002.01,6002.01,10,"DT")
3040309
"^DD",6002.01,6002.01,11,0)
ACCESSION NUMBER^F^^WKLD;6^K:$L(X)>20!($L(X)<1) X
"^DD",6002.01,6002.01,11,3)
Answer must be 1-20 characters in length.
"^DD",6002.01,6002.01,11,"DT")
3040309
"^DD",6002.01,6002.01,12,0)
TEST PERFORMED^P60'^LAB(60,^WKLD;7^Q
"^DD",6002.01,6002.01,12,"DT")
3040309
"^DD",6002.01,6002.01,13,0)
PRODUCT CODE^F^^WKLD;8^K:$L(X)>20!($L(X)<1) X
"^DD",6002.01,6002.01,13,3)
Answer must be 1-20 characters in length.
"^DD",6002.01,6002.01,13,"DT")
3071012
"^DD",6002.01,6002.01,14,0)
ACCESSION AREA^P68'^LRO(68,^WKLD;9^Q
"^DD",6002.01,6002.01,14,21,0)
^^3^3^3040825^
"^DD",6002.01,6002.01,14,21,1,0)
This field is used to over-ride the system default accession area of 
"^DD",6002.01,6002.01,14,21,2,0)
'BLOOD BANK' which is usually ^LRO(68,29,0). This field is important to 
"^DD",6002.01,6002.01,14,21,3,0)
be populated in multi-divisional systems.
"^DD",6002.01,6002.01,14,"DT")
3040825
"^DD",6002.01,6002.01,20,0)
ERROR TEXT^F^^ERR;1^K:$L(X)>80!($L(X)<3) X
"^DD",6002.01,6002.01,20,3)
Answer must be 3-80 characters in length.
"^DD",6002.01,6002.01,20,"DT")
3040309
"^DD",6002.01,6002.01,21,0)
UPDATE ERROR TEXT^F^^UET;1^K:$L(X)>250!($L(X)<3) X
"^DD",6002.01,6002.01,21,3)
Answer must be 3-250 characters in length
"^DD",6002.01,6002.01,21,"DT")
3040409
"^DD",6002.01,6002.01,99,0)
PCE ENCOUNTER^F^^PCE;1^K:$L(X)>20!($L(X)<1) X
"^DD",6002.01,6002.01,99,3)
Answer must be 1-20 characters in length.
"^DD",6002.01,6002.01,99,"DT")
3040309
"^DIC",6002.01,6002.01,0)
VBECS WORKLOAD CAPTURE^6002.01
"^DIC",6002.01,6002.01,0,"GL")
^VBEC(6002.01,
"^DIC",6002.01,"B","VBECS WORKLOAD CAPTURE",6002.01)

**INSTALL NAME**
LR*5.2*325
"BLD",5732,0)
LR*5.2*325^LAB SERVICE^0^3090423^y
"BLD",5732,1,0)
^^113^113^3090318^
"BLD",5732,1,1,0)
LR*5.2*325 is being exported as part of the VBECS_BUNDLE_1.KID package 
"BLD",5732,1,2,0)
release.  The installation of this bundle will be controlled by phase 
"BLD",5732,1,3,0)
release.  An Implementation Manager will be assigned to your site and 
"BLD",5732,1,4,0)
will contact your POC for VBECS and will provide your site with the 
"BLD",5732,1,5,0)
location of the KIDS Host Files prior to your scheduled installation date 
"BLD",5732,1,6,0)
Installation Sequence.  The VBECS BUNDLE is a host file that consists of 
"BLD",5732,1,7,0)
both VBEC*1*0 and LR*5.2*325.  Installation of the VBECS BUNDLE will 
"BLD",5732,1,8,0)
automatically install both VBEC*1*0 and LR*5.2*325
"BLD",5732,1,9,0)
 
"BLD",5732,1,10,0)
ROUTINES:
"BLD",5732,1,11,0)
=========
"BLD",5732,1,12,0)
LR325 
"BLD",5732,1,13,0)
LRCAPBB 
"BLD",5732,1,14,0)
LRCAPBV 
"BLD",5732,1,15,0)
LRCAPBV1 
"BLD",5732,1,16,0)
 
"BLD",5732,1,17,0)
Options:  None
"BLD",5732,1,18,0)
========
"BLD",5732,1,19,0)
 
"BLD",5732,1,20,0)
 
"BLD",5732,1,21,0)
Protocols: None
"BLD",5732,1,22,0)
========== 
"BLD",5732,1,23,0)
 
"BLD",5732,1,24,0)
Remote Procedures: None
"BLD",5732,1,25,0)
===============
"BLD",5732,1,26,0)
 
"BLD",5732,1,27,0)
 
"BLD",5732,1,28,0)
Files: None
"BLD",5732,1,29,0)
======
"BLD",5732,1,30,0)
 
"BLD",5732,1,31,0)
Associated ICRs: None
"BLD",5732,1,32,0)
=============== 
"BLD",5732,1,33,0)
 
"BLD",5732,1,34,0)
 
"BLD",5732,1,35,0)
Associated Remedy:  None
"BLD",5732,1,36,0)
==================
"BLD",5732,1,37,0)
 
"BLD",5732,1,38,0)
 
"BLD",5732,1,39,0)
Associated NSR/E3R: None
"BLD",5732,1,40,0)
==============
"BLD",5732,1,41,0)
 
"BLD",5732,1,42,0)
 
"BLD",5732,1,43,0)
Installation Sequence
"BLD",5732,1,44,0)
=====================
"BLD",5732,1,45,0)
 
"BLD",5732,1,46,0)
The files listed below represent the patches will be part of the 
"BLD",5732,1,47,0)
controlled phased release.  Follow the sequence listed below when your 
"BLD",5732,1,48,0)
phased installation occurs.
"BLD",5732,1,49,0)
 
"BLD",5732,1,50,0)
  1. LR*5.2*335
"BLD",5732,1,51,0)
  2. LR*5.2*367
"BLD",5732,1,52,0)
  3. VBECS Bundle (consisting of VBEC*1*0 and LR*5.2*325)
"BLD",5732,1,53,0)
  4. VBEC*1.0*1
"BLD",5732,1,54,0)
  5. OR*3.0*212
"BLD",5732,1,55,0)
 
"BLD",5732,1,56,0)
Documentation Retrieval:
"BLD",5732,1,57,0)
 
"BLD",5732,1,58,0)
Although the software installation will be phased, the documentation will 
"BLD",5732,1,59,0)
be available for the entire VBECS package on the ANONYMOUS.SOFTWRE 
"BLD",5732,1,60,0)
directory or at one of the following Office of Information (OI) Field 
"BLD",5732,1,61,0)
Offices. Sites may retrieve documentation either the ".PDF" or "DOC" 
"BLD",5732,1,62,0)
format in one of the following ways:
"BLD",5732,1,63,0)
 
"BLD",5732,1,64,0)
1.      The preferred method is to FTP the files from : 
"BLD",5732,1,65,0)
Download.vista.domain.ext
"BLD",5732,1,66,0)
 
"BLD",5732,1,67,0)
2.      Sites may also elect to retrieve documentation directly from a 
"BLD",5732,1,68,0)
specific server as follows:
"BLD",5732,1,69,0)
       Albany                  DOMAIN.EXT
"BLD",5732,1,70,0)
       Hines                   DOMAIN.EXT
"BLD",5732,1,71,0)
       Salt Lake City          DOMAIN.EXT
"BLD",5732,1,72,0)
 
"BLD",5732,1,73,0)
NOTE: The documentation files listed below will be listed in each of the 
"BLD",5732,1,74,0)
VBECS patches that are part of the VBECS package and associate patches, 
"BLD",5732,1,75,0)
they only need to be downloaded once.
"BLD",5732,1,76,0)
 
"BLD",5732,1,77,0)
File Name                                   Retrieval format:  Binary
"BLD",5732,1,78,0)
=========                                   =========================
"BLD",5732,1,79,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5732,1,80,0)
ADPAC Guide.doc
"BLD",5732,1,81,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5732,1,82,0)
ADPAC Guide.pdf
"BLD",5732,1,83,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5732,1,84,0)
Installation and User Guide.doc
"BLD",5732,1,85,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5732,1,86,0)
Installation and User Guide.pdf
"BLD",5732,1,87,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5732,1,88,0)
Technical Manual.doc
"BLD",5732,1,89,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"BLD",5732,1,90,0)
Technical Manual.pdf
"BLD",5732,1,91,0)
VBECS Data Conversion Recommended Validation Method.xls
"BLD",5732,1,92,0)
VBECS Application Interfacing Support Software Installation and User 
"BLD",5732,1,93,0)
Configuration Guide.doc
"BLD",5732,1,94,0)
VBECS Application Interfacing Support Software Installation and User 
"BLD",5732,1,95,0)
Configuration Guide.pdf
"BLD",5732,1,96,0)
VBECS Implementation Process.xls
"BLD",5732,1,97,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"BLD",5732,1,98,0)
Guide.doc
"BLD",5732,1,99,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"BLD",5732,1,100,0)
Guide.pdf
"BLD",5732,1,101,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"BLD",5732,1,102,0)
Manual-Security Guide.doc
"BLD",5732,1,103,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"BLD",5732,1,104,0)
Manual-Security Guide.pdf
"BLD",5732,1,105,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.doc
"BLD",5732,1,106,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.pdf
"BLD",5732,1,107,0)
Known Defects and Anomalies.doc
"BLD",5732,1,108,0)
Known Defects and Anomalies.pdf
"BLD",5732,1,109,0)
 
"BLD",5732,1,110,0)
Installation Instructions:
"BLD",5732,1,111,0)
==========================
"BLD",5732,1,112,0)
This patch is exported as part of VBECS_BUNDLE_1.KID.  Please refer to 
"BLD",5732,1,113,0)
VBEC*1*0 install instructions for installation sequence information. 
"BLD",5732,4,0)
^9.64PA^^
"BLD",5732,6.3)
34
"BLD",5732,"INI")
PRE^LR325
"BLD",5732,"INID")
y
"BLD",5732,"INIT")
POST^LR325
"BLD",5732,"KRN",0)
^9.67PA^8989.52^19
"BLD",5732,"KRN",.4,0)
.4
"BLD",5732,"KRN",.401,0)
.401
"BLD",5732,"KRN",.402,0)
.402
"BLD",5732,"KRN",.403,0)
.403
"BLD",5732,"KRN",.5,0)
.5
"BLD",5732,"KRN",.84,0)
.84
"BLD",5732,"KRN",3.6,0)
3.6
"BLD",5732,"KRN",3.8,0)
3.8
"BLD",5732,"KRN",9.2,0)
9.2
"BLD",5732,"KRN",9.8,0)
9.8
"BLD",5732,"KRN",9.8,"NM",0)
^9.68A^5^4
"BLD",5732,"KRN",9.8,"NM",1,0)
LRCAPBV^^0^B50416998
"BLD",5732,"KRN",9.8,"NM",2,0)
LRCAPBV1^^0^B5105874
"BLD",5732,"KRN",9.8,"NM",3,0)
LR325^^0^B18317711
"BLD",5732,"KRN",9.8,"NM",5,0)
LRCAPBB^^0^B24523132
"BLD",5732,"KRN",9.8,"NM","B","LR325",3)

"BLD",5732,"KRN",9.8,"NM","B","LRCAPBB",5)

"BLD",5732,"KRN",9.8,"NM","B","LRCAPBV",1)

"BLD",5732,"KRN",9.8,"NM","B","LRCAPBV1",2)

"BLD",5732,"KRN",19,0)
19
"BLD",5732,"KRN",19,"NM",0)
^9.68A^^
"BLD",5732,"KRN",19.1,0)
19.1
"BLD",5732,"KRN",101,0)
101
"BLD",5732,"KRN",409.61,0)
409.61
"BLD",5732,"KRN",771,0)
771
"BLD",5732,"KRN",870,0)
870
"BLD",5732,"KRN",8989.51,0)
8989.51
"BLD",5732,"KRN",8989.52,0)
8989.52
"BLD",5732,"KRN",8994,0)
8994
"BLD",5732,"KRN","B",.4,.4)

"BLD",5732,"KRN","B",.401,.401)

"BLD",5732,"KRN","B",.402,.402)

"BLD",5732,"KRN","B",.403,.403)

"BLD",5732,"KRN","B",.5,.5)

"BLD",5732,"KRN","B",.84,.84)

"BLD",5732,"KRN","B",3.6,3.6)

"BLD",5732,"KRN","B",3.8,3.8)

"BLD",5732,"KRN","B",9.2,9.2)

"BLD",5732,"KRN","B",9.8,9.8)

"BLD",5732,"KRN","B",19,19)

"BLD",5732,"KRN","B",19.1,19.1)

"BLD",5732,"KRN","B",101,101)

"BLD",5732,"KRN","B",409.61,409.61)

"BLD",5732,"KRN","B",771,771)

"BLD",5732,"KRN","B",870,870)

"BLD",5732,"KRN","B",8989.51,8989.51)

"BLD",5732,"KRN","B",8989.52,8989.52)

"BLD",5732,"KRN","B",8994,8994)

"BLD",5732,"PRE")
LR325
"BLD",5732,"QUES",0)
^9.62^^
"BLD",5732,"REQB",0)
^9.611^1^1
"BLD",5732,"REQB",1,0)
LR*5.2*201^2
"BLD",5732,"REQB","B","LR*5.2*201",1)

"INI")
PRE^LR325
"INIT")
POST^LR325
"MBREQ")
1
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2950304
"PKG",26,22,1,"PAH",1,0)
325^3090423^1
"PKG",26,22,1,"PAH",1,1,0)
^^113^113^3090423
"PKG",26,22,1,"PAH",1,1,1,0)
LR*5.2*325 is being exported as part of the VBECS_BUNDLE_1.KID package 
"PKG",26,22,1,"PAH",1,1,2,0)
release.  The installation of this bundle will be controlled by phase 
"PKG",26,22,1,"PAH",1,1,3,0)
release.  An Implementation Manager will be assigned to your site and 
"PKG",26,22,1,"PAH",1,1,4,0)
will contact your POC for VBECS and will provide your site with the 
"PKG",26,22,1,"PAH",1,1,5,0)
location of the KIDS Host Files prior to your scheduled installation date 
"PKG",26,22,1,"PAH",1,1,6,0)
Installation Sequence.  The VBECS BUNDLE is a host file that consists of 
"PKG",26,22,1,"PAH",1,1,7,0)
both VBEC*1*0 and LR*5.2*325.  Installation of the VBECS BUNDLE will 
"PKG",26,22,1,"PAH",1,1,8,0)
automatically install both VBEC*1*0 and LR*5.2*325
"PKG",26,22,1,"PAH",1,1,9,0)
 
"PKG",26,22,1,"PAH",1,1,10,0)
ROUTINES:
"PKG",26,22,1,"PAH",1,1,11,0)
=========
"PKG",26,22,1,"PAH",1,1,12,0)
LR325 
"PKG",26,22,1,"PAH",1,1,13,0)
LRCAPBB 
"PKG",26,22,1,"PAH",1,1,14,0)
LRCAPBV 
"PKG",26,22,1,"PAH",1,1,15,0)
LRCAPBV1 
"PKG",26,22,1,"PAH",1,1,16,0)
 
"PKG",26,22,1,"PAH",1,1,17,0)
Options:  None
"PKG",26,22,1,"PAH",1,1,18,0)
========
"PKG",26,22,1,"PAH",1,1,19,0)
 
"PKG",26,22,1,"PAH",1,1,20,0)
 
"PKG",26,22,1,"PAH",1,1,21,0)
Protocols: None
"PKG",26,22,1,"PAH",1,1,22,0)
========== 
"PKG",26,22,1,"PAH",1,1,23,0)
 
"PKG",26,22,1,"PAH",1,1,24,0)
Remote Procedures: None
"PKG",26,22,1,"PAH",1,1,25,0)
===============
"PKG",26,22,1,"PAH",1,1,26,0)
 
"PKG",26,22,1,"PAH",1,1,27,0)
 
"PKG",26,22,1,"PAH",1,1,28,0)
Files: None
"PKG",26,22,1,"PAH",1,1,29,0)
======
"PKG",26,22,1,"PAH",1,1,30,0)
 
"PKG",26,22,1,"PAH",1,1,31,0)
Associated ICRs: None
"PKG",26,22,1,"PAH",1,1,32,0)
=============== 
"PKG",26,22,1,"PAH",1,1,33,0)
 
"PKG",26,22,1,"PAH",1,1,34,0)
 
"PKG",26,22,1,"PAH",1,1,35,0)
Associated Remedy:  None
"PKG",26,22,1,"PAH",1,1,36,0)
==================
"PKG",26,22,1,"PAH",1,1,37,0)
 
"PKG",26,22,1,"PAH",1,1,38,0)
 
"PKG",26,22,1,"PAH",1,1,39,0)
Associated NSR/E3R: None
"PKG",26,22,1,"PAH",1,1,40,0)
==============
"PKG",26,22,1,"PAH",1,1,41,0)
 
"PKG",26,22,1,"PAH",1,1,42,0)
 
"PKG",26,22,1,"PAH",1,1,43,0)
Installation Sequence
"PKG",26,22,1,"PAH",1,1,44,0)
=====================
"PKG",26,22,1,"PAH",1,1,45,0)
 
"PKG",26,22,1,"PAH",1,1,46,0)
The files listed below represent the patches will be part of the 
"PKG",26,22,1,"PAH",1,1,47,0)
controlled phased release.  Follow the sequence listed below when your 
"PKG",26,22,1,"PAH",1,1,48,0)
phased installation occurs.
"PKG",26,22,1,"PAH",1,1,49,0)
 
"PKG",26,22,1,"PAH",1,1,50,0)
  1. LR*5.2*335
"PKG",26,22,1,"PAH",1,1,51,0)
  2. LR*5.2*367
"PKG",26,22,1,"PAH",1,1,52,0)
  3. VBECS Bundle (consisting of VBEC*1*0 and LR*5.2*325)
"PKG",26,22,1,"PAH",1,1,53,0)
  4. VBEC*1.0*1
"PKG",26,22,1,"PAH",1,1,54,0)
  5. OR*3.0*212
"PKG",26,22,1,"PAH",1,1,55,0)
 
"PKG",26,22,1,"PAH",1,1,56,0)
Documentation Retrieval:
"PKG",26,22,1,"PAH",1,1,57,0)
 
"PKG",26,22,1,"PAH",1,1,58,0)
Although the software installation will be phased, the documentation will 
"PKG",26,22,1,"PAH",1,1,59,0)
be available for the entire VBECS package on the ANONYMOUS.SOFTWRE 
"PKG",26,22,1,"PAH",1,1,60,0)
directory or at one of the following Office of Information (OI) Field 
"PKG",26,22,1,"PAH",1,1,61,0)
Offices. Sites may retrieve documentation either the ".PDF" or "DOC" 
"PKG",26,22,1,"PAH",1,1,62,0)
format in one of the following ways:
"PKG",26,22,1,"PAH",1,1,63,0)
 
"PKG",26,22,1,"PAH",1,1,64,0)
1.      The preferred method is to FTP the files from : 
"PKG",26,22,1,"PAH",1,1,65,0)
Download.vista.domain.ext
"PKG",26,22,1,"PAH",1,1,66,0)
 
"PKG",26,22,1,"PAH",1,1,67,0)
2.      Sites may also elect to retrieve documentation directly from a 
"PKG",26,22,1,"PAH",1,1,68,0)
specific server as follows:
"PKG",26,22,1,"PAH",1,1,69,0)
       Albany                  DOMAIN.EXT
"PKG",26,22,1,"PAH",1,1,70,0)
       Hines                   DOMAIN.EXT
"PKG",26,22,1,"PAH",1,1,71,0)
       Salt Lake City          DOMAIN.EXT
"PKG",26,22,1,"PAH",1,1,72,0)
 
"PKG",26,22,1,"PAH",1,1,73,0)
NOTE: The documentation files listed below will be listed in each of the 
"PKG",26,22,1,"PAH",1,1,74,0)
VBECS patches that are part of the VBECS package and associate patches, 
"PKG",26,22,1,"PAH",1,1,75,0)
they only need to be downloaded once.
"PKG",26,22,1,"PAH",1,1,76,0)
 
"PKG",26,22,1,"PAH",1,1,77,0)
File Name                                   Retrieval format:  Binary
"PKG",26,22,1,"PAH",1,1,78,0)
=========                                   =========================
"PKG",26,22,1,"PAH",1,1,79,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",26,22,1,"PAH",1,1,80,0)
ADPAC Guide.doc
"PKG",26,22,1,"PAH",1,1,81,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",26,22,1,"PAH",1,1,82,0)
ADPAC Guide.pdf
"PKG",26,22,1,"PAH",1,1,83,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",26,22,1,"PAH",1,1,84,0)
Installation and User Guide.doc
"PKG",26,22,1,"PAH",1,1,85,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",26,22,1,"PAH",1,1,86,0)
Installation and User Guide.pdf
"PKG",26,22,1,"PAH",1,1,87,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",26,22,1,"PAH",1,1,88,0)
Technical Manual.doc
"PKG",26,22,1,"PAH",1,1,89,0)
Blood Bank Pre-Implementation Data Validation, Mapping, and Conversion 
"PKG",26,22,1,"PAH",1,1,90,0)
Technical Manual.pdf
"PKG",26,22,1,"PAH",1,1,91,0)
VBECS Data Conversion Recommended Validation Method.xls
"PKG",26,22,1,"PAH",1,1,92,0)
VBECS Application Interfacing Support Software Installation and User 
"PKG",26,22,1,"PAH",1,1,93,0)
Configuration Guide.doc
"PKG",26,22,1,"PAH",1,1,94,0)
VBECS Application Interfacing Support Software Installation and User 
"PKG",26,22,1,"PAH",1,1,95,0)
Configuration Guide.pdf
"PKG",26,22,1,"PAH",1,1,96,0)
VBECS Implementation Process.xls
"PKG",26,22,1,"PAH",1,1,97,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"PKG",26,22,1,"PAH",1,1,98,0)
Guide.doc
"PKG",26,22,1,"PAH",1,1,99,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Installation 
"PKG",26,22,1,"PAH",1,1,100,0)
Guide.pdf
"PKG",26,22,1,"PAH",1,1,101,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"PKG",26,22,1,"PAH",1,1,102,0)
Manual-Security Guide.doc
"PKG",26,22,1,"PAH",1,1,103,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 Technical 
"PKG",26,22,1,"PAH",1,1,104,0)
Manual-Security Guide.pdf
"PKG",26,22,1,"PAH",1,1,105,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.doc
"PKG",26,22,1,"PAH",1,1,106,0)
VistA Blood Establishment Computer Software (VBECS) 1.4.0.0 User Guide.pdf
"PKG",26,22,1,"PAH",1,1,107,0)
Known Defects and Anomalies.doc
"PKG",26,22,1,"PAH",1,1,108,0)
Known Defects and Anomalies.pdf
"PKG",26,22,1,"PAH",1,1,109,0)
 
"PKG",26,22,1,"PAH",1,1,110,0)
Installation Instructions:
"PKG",26,22,1,"PAH",1,1,111,0)
==========================
"PKG",26,22,1,"PAH",1,1,112,0)
This patch is exported as part of VBECS_BUNDLE_1.KID.  Please refer to 
"PKG",26,22,1,"PAH",1,1,113,0)
VBEC*1*0 install instructions for installation sequence information. 
"PRE")
LR325
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","LR325")
0^3^B18317711
"RTN","LR325",1,0)
LR325 ;DALOI/JMC - LR*5.2*325 PATCH ENVIRONMENT CHECK ROUTINE ; 4/17/07 3:41am
"RTN","LR325",2,0)
 ;;5.2;LAB SERVICE;**325**;Sep 27, 1994;Build 34
"RTN","LR325",3,0)
 ;Reference to $$FIND1^DIC supported by IA #2051
"RTN","LR325",4,0)
 ;Reference to UPDATE^DIE supported by IA #2053
"RTN","LR325",5,0)
 ;Reference to $$HTE^XLFDT supported by IA #10103
"RTN","LR325",6,0)
 ;Reference to $$CJ^XLFSTR supported by IA #10104
"RTN","LR325",7,0)
 ;Reference to BMES^XPDUTL supported by IA #10141
"RTN","LR325",8,0)
 ;Reference to SETUP^XQALERT supported by IA #10081
"RTN","LR325",9,0)
 ;Reference to $$ACTIVE^XUSER supported by IA #2343
"RTN","LR325",10,0)
EN ; Does not prevent loading of the transport global.
"RTN","LR325",11,0)
 ; Environment check is done only during the install.
"RTN","LR325",12,0)
 ;
"RTN","LR325",13,0)
 N XQA,XQAMSG
"RTN","LR325",14,0)
 ;
"RTN","LR325",15,0)
 I '$G(XPDENV) D  Q
"RTN","LR325",16,0)
 . S XQAMSG="Transport global for patch "_$G(XPDNM,"Unknown patch")_" loaded on "_$$HTE^XLFDT($H)
"RTN","LR325",17,0)
 . S XQA("G.LMI")=""
"RTN","LR325",18,0)
 . D SETUP^XQALERT
"RTN","LR325",19,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Sending transport global loaded alert to mail group G.LMI",IOM))
"RTN","LR325",20,0)
 ;
"RTN","LR325",21,0)
 S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" started on "_$$HTE^XLFDT($H)
"RTN","LR325",22,0)
 S XQA("G.LMI")=""
"RTN","LR325",23,0)
 D SETUP^XQALERT
"RTN","LR325",24,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Sending install started alert to mail group G.LMI",IOM))
"RTN","LR325",25,0)
 ;
"RTN","LR325",26,0)
 D CHECK
"RTN","LR325",27,0)
 D EXIT
"RTN","LR325",28,0)
 Q
"RTN","LR325",29,0)
 ;
"RTN","LR325",30,0)
CHECK ; Perform environment check
"RTN","LR325",31,0)
 I $S('$G(IOM):1,'$G(IOSL):1,$G(U)'="^":1,1:0) D  Q
"RTN","LR325",32,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Terminal Device is not defined",80))
"RTN","LR325",33,0)
 . S XPDQUIT=2
"RTN","LR325",34,0)
 I $S('$G(DUZ):1,$D(DUZ)[0:1,$D(DUZ(0))[0:1,1:0) D  Q
"RTN","LR325",35,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Please log in to set local DUZ... variables",80))
"RTN","LR325",36,0)
 . S XPDQUIT=2
"RTN","LR325",37,0)
 I $P($$ACTIVE^XUSER(DUZ),"^")'=1 D  Q
"RTN","LR325",38,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("You are not a valid user on this system",80))
"RTN","LR325",39,0)
 . S XPDQUIT=2
"RTN","LR325",40,0)
 S XPDIQ("XPZ1","B")="NO"
"RTN","LR325",41,0)
 Q
"RTN","LR325",42,0)
 ;
"RTN","LR325",43,0)
EXIT ;
"RTN","LR325",44,0)
 I $G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR("--- Install Environment Check FAILED ---",IOM))
"RTN","LR325",45,0)
 I '$G(XPDQUIT) D BMES^XPDUTL($$CJ^XLFSTR("--- Environment Check is Ok ---",IOM))
"RTN","LR325",46,0)
 Q
"RTN","LR325",47,0)
 ;
"RTN","LR325",48,0)
PRE ; KIDS Pre install
"RTN","LR325",49,0)
 ;
"RTN","LR325",50,0)
 Q
"RTN","LR325",51,0)
 N DA,DIK
"RTN","LR325",52,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Pre install started ***",IOM))
"RTN","LR325",53,0)
 ;
"RTN","LR325",54,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Nothing required",IOM))
"RTN","LR325",55,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Pre install completed ***",IOM))
"RTN","LR325",56,0)
 Q
"RTN","LR325",57,0)
 ;
"RTN","LR325",58,0)
POST ; KIDS Post install
"RTN","LR325",59,0)
 N ANS,FDA,LROUTINE,LRTST,TST,XQA,XQAMSG
"RTN","LR325",60,0)
 D BMES^XPDUTL($$CJ^XLFSTR("*** Post install started ***",IOM))
"RTN","LR325",61,0)
 S LROUTINE=$$FIND1^DIC(62.05,,"B","ROUTINE","B",,"ANS")
"RTN","LR325",62,0)
 I 'LROUTINE S LROUTINE=$O(^LAB(62.05,0))
"RTN","LR325",63,0)
 S LRTST=$$FIND1^DIC(60,,"B","VBEC QA/QC","B",,"ANS")
"RTN","LR325",64,0)
 I 'LRTST D
"RTN","LR325",65,0)
 . K FDA(1)
"RTN","LR325",66,0)
 . S FDA(1,60,"?+1,",.01)="VBEC QA/QC"
"RTN","LR325",67,0)
 . S FDA(1,60,"?+1,",3)="N"
"RTN","LR325",68,0)
 . S FDA(1,60,"?+1,",4)="WK"
"RTN","LR325",69,0)
 . S FDA(1,60,"?+1,",17)=LROUTINE
"RTN","LR325",70,0)
 . S FDA(1,60,"?+1,",51)="V QA/QC"
"RTN","LR325",71,0)
 . D UPDATE^DIE("SE","FDA(1)","TST","ANS")
"RTN","LR325",72,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Added test [VBEC QA/QC] to LABORATORY TEST file",IOM))
"RTN","LR325",73,0)
 S LRTST=$$FIND1^DIC(60,,"B","VBEC UNIT PROCESSING","B",,"ANS")
"RTN","LR325",74,0)
 I 'LRTST D
"RTN","LR325",75,0)
 . K FDA(2),TST
"RTN","LR325",76,0)
 . S FDA(2,60,"?+1,",.01)="VBEC UNIT PROCESSING"
"RTN","LR325",77,0)
 . S FDA(2,60,"?+1,",3)="N"
"RTN","LR325",78,0)
 . S FDA(2,60,"?+1,",4)="WK"
"RTN","LR325",79,0)
 . S FDA(2,60,"?+1,",17)=LROUTINE
"RTN","LR325",80,0)
 . S FDA(2,60,"?+1,",51)="V UNIT"
"RTN","LR325",81,0)
 . D UPDATE^DIE("SE","FDA(2)","TST","ANS")
"RTN","LR325",82,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Added test [VBEC UNIT PROCESSING] to LABORTORY TEST file",IOM))
"RTN","LR325",83,0)
 S LRTST=$$FIND1^DIC(60,,"B","VBEC DONOR","B",,"ANS")
"RTN","LR325",84,0)
 I 'LRTST D
"RTN","LR325",85,0)
 . K FDA(3),TST
"RTN","LR325",86,0)
 . S FDA(3,60,"?+1,",.01)="VBEC DONOR"
"RTN","LR325",87,0)
 . S FDA(3,60,"?+1,",3)="N"
"RTN","LR325",88,0)
 . S FDA(3,60,"?+1,",4)="WK"
"RTN","LR325",89,0)
 . S FDA(3,60,"?+1,",17)=LROUTINE
"RTN","LR325",90,0)
 . S FDA(3,60,"?+1,",51)="V DONOR"
"RTN","LR325",91,0)
 . D UPDATE^DIE("SE","FDA(3)","TST","ANS")
"RTN","LR325",92,0)
 . D BMES^XPDUTL($$CJ^XLFSTR("Added Test [VBEC DONOR] to LABORATORY TEST file",IOM))
"RTN","LR325",93,0)
 D BMES^XPDUTL($$CJ^XLFSTR("Sending install completion alert to LMI mail group ",IOM))
"RTN","LR325",94,0)
 S XQAMSG="Installation of patch "_$G(XPDNM,"Unknown patch")_" completed on "_$$HTE^XLFDT($H)
"RTN","LR325",95,0)
 S XQA("G.LMI")=""
"RTN","LR325",96,0)
 D SETUP^XQALERT
"RTN","LR325",97,0)
 S XQAMSG="LIM: Review description for "_$G(XPDNM,"Unknown patch")_" use KIDS:Utilities:Build File Print"
"RTN","LR325",98,0)
 S XQA("G.LMI")=""
"RTN","LR325",99,0)
 D SETUP^XQALERT
"RTN","LR325",100,0)
 Q
"RTN","LRCAPBB")
0^5^B24523132
"RTN","LRCAPBB",1,0)
LRCAPBB ;SLC/AM/DALISC/FHS - STORE WORKLOAD FROM 65,65.5 INTO ^LRO(64.1 ; 4/4/07 7:40am
"RTN","LRCAPBB",2,0)
 ;;5.2;LAB SERVICE;**72,201,325**;Sep 27, 1994;Build 34
"RTN","LRCAPBB",3,0)
 ;Reference to ^%ZTLOAD supported by IA #1519
"RTN","LRCAPBB",4,0)
 ;Reference to $$NOW^XLFDT supported by IA #10103
"RTN","LRCAPBB",5,0)
 ;VBECS workload included in process
"RTN","LRCAPBB",6,0)
EN ;
"RTN","LRCAPBB",7,0)
 Q:'$P($G(^LAB(69.9,1,0)),U,14)
"RTN","LRCAPBB",8,0)
 S:'$D(^LAB(69.9,1,"NITE")) ^("NITE")=""
"RTN","LRCAPBB",9,0)
VBEC ;Process VBECS workload collection
"RTN","LRCAPBB",10,0)
 N ZTIO,ZTRTN,ZTDTH
"RTN","LRCAPBB",11,0)
 I ZTDESC="COLLECT BLOOD BANK WORKLOAD" S ZTIO="",ZTRTN="LRCAPBV",ZTDTH=$H,ZTDESC="COLLECT VBECS WORKLOAD DATA" D ^%ZTLOAD
"RTN","LRCAPBB",12,0)
 L +^LRD(65,"AA"):1 I '$T G FIN
"RTN","LRCAPBB",13,0)
 L +^LRE("AA"):1 I '$T G FIN
"RTN","LRCAPBB",14,0)
 S $P(^LAB(69.9,1,"NITE"),"^",4)=$$NOW^XLFDT
"RTN","LRCAPBB",15,0)
 ;S X="TRAP^LRCAPBB",@^%ZOSF("TRAP")
"RTN","LRCAPBB",16,0)
INVENT ;
"RTN","LRCAPBB",17,0)
 D INIT G:'$O(^LRD(65,"AA",0)) DONOR D FT
"RTN","LRCAPBB",18,0)
 I LRERR K ^LRD(65,"AA") D DUMP S ^TMP("LR WL ERRORS",LRX)="BASIC LRD(65 DATA MISSING" G DONOR
"RTN","LRCAPBB",19,0)
 F  S LRREC=$O(^LRD(65,"AA",LRREC)) Q:LRREC=""  S LRTS="" D
"RTN","LRCAPBB",20,0)
 .S LRFILE=LRREC_";LRD(65," F  S LRTS=$O(^LRD(65,"AA",LRREC,LRTS)) Q:LRTS=""  S LRDTTM="" F  S LRDTTM=$O(^LRD(65,"AA",LRREC,LRTS,LRDTTM)) Q:LRDTTM=""  S LRACC=^(LRDTTM) D  K ^LRD(65,"AA",LRREC,LRTS,LRDTTM)
"RTN","LRCAPBB",21,0)
 ..S LRCC=0 F  S LRCC=$O(^LRD(65,LRREC,99,LRTS,1,LRDTTM,1,LRCC)) Q:LRCC<1  D
"RTN","LRCAPBB",22,0)
 ...; LRRRL3 is the log in person, LRRRL4 is location type
"RTN","LRCAPBB",23,0)
 ...;S $P(^LAB(69.9,1,"NITE"),U,4)=LRREC_"99 "_LRTS_","_LRDTTM_","_LRCC
"RTN","LRCAPBB",24,0)
 ...S LRX=$G(^LRD(65,LRREC,99,LRTS,1,LRDTTM,0)),LRRRL3=$P(LRX,U,2),LRIN=$P(LRX,U,3),(LRAA,LRMA)=+$P(LRX,U,4),LRLSS=+$P(LRX,U,5) S:'LRLSS LRLSS=LRMA D CHK
"RTN","LRCAPBB",25,0)
 ...S LRX=$G(^LRD(65,LRREC,99,LRTS,1,LRDTTM,1,LRCC,0)),LRCNT=+$P(LRX,U,2)
"RTN","LRCAPBB",26,0)
 ...S:'LRCNT LRCNT=1
"RTN","LRCAPBB",27,0)
 ...S LRCTM=$P(LRDTTM,".",2),LRCDT=$P(LRDTTM,"."),(LRUW,LRCWT)=1
"RTN","LRCAPBB",28,0)
 ...I $D(^LAM(LRCC,0))#2 S LRX=^(0),LRUW=$P(LRX,"^",3),LRCWT=$P(LRX,"^",11)
"RTN","LRCAPBB",29,0)
 ...I (LRIN="")!(LRCC="")!(LRCDT="")!(LRCTM="")!(LRTS="") D DUMP Q
"RTN","LRCAPBB",30,0)
 ...W:'$D(ZTQUEUED) !,"WKLD CODE "_LRCC
"RTN","LRCAPBB",31,0)
 ...D ^LRCAPV3
"RTN","LRCAPBB",32,0)
 ...S $P(^LRD(65,LRREC,99,LRTS,1,LRDTTM,1,LRCC,0),"^",3)=1
"RTN","LRCAPBB",33,0)
 ..Q
"RTN","LRCAPBB",34,0)
DONOR ;
"RTN","LRCAPBB",35,0)
 I '$O(^LRE("AA",0)) G FIN
"RTN","LRCAPBB",36,0)
 S LRERR=0,LRREC="" D FT2
"RTN","LRCAPBB",37,0)
 I LRERR K ^LRE("AA") D DUMP S ^TMP("LR WL ERRORS",LRX)="BASIC LRE( DATA MISSING" G FIN
"RTN","LRCAPBB",38,0)
 F  S LRREC=$O(^LRE("AA",LRREC)) Q:LRREC=""  S LRI="",LRFILE=LRREC_";LRE(" F  S LRI=$O(^LRE("AA",LRREC,LRI)) Q:LRI=""  S LRTS="" F  S LRTS=$O(^LRE("AA",LRREC,LRI,LRTS)) Q:LRTS=""  D
"RTN","LRCAPBB",39,0)
 .S LRDTTM="" F LRDTTM=$O(^LRE("AA",LRREC,LRI,LRTS,LRDTTM)) Q:LRDTTM=""  S LRACC=^(LRDTTM) D
"RTN","LRCAPBB",40,0)
 ..W:'$D(ZTQUEUED) !?5,"DONOR "_LRDTTM
"RTN","LRCAPBB",41,0)
 ..S LRCC=0 F  S LRCC=$O(^LRE(LRREC,5,LRI,99,LRTS,1,LRDTTM,1,LRCC)) Q:LRCC<1  D  K ^LRE("AA",LRREC,LRI,LRTS,LRDTTM)
"RTN","LRCAPBB",42,0)
 ...; LRRRL3 is the log in person, LRRRL4 is location type
"RTN","LRCAPBB",43,0)
 ...;S $P(^LAB(69.9,1,"NITE"),U,4)=LRREC_"5 "_LRI_"99 "_LRTS_","_LRDTTM_","_LRCC
"RTN","LRCAPBB",44,0)
 ...S LRX=$G(^LRE(LRREC,5,LRI,99,LRTS,1,LRDTTM,0)),LRRRL3=$P(LRX,U,2)
"RTN","LRCAPBB",45,0)
 ...S LRX=$G(^LRE(LRREC,5,LRI,99,LRTS,1,LRDTTM,1,LRCC,0)),LRCNT=+$P(LRX,U,2)
"RTN","LRCAPBB",46,0)
 ...S:'LRCNT LRCNT=1
"RTN","LRCAPBB",47,0)
 ...S LRCTM=$P(LRDTTM,".",2),LRCDT=$P(LRDTTM,"."),(LRWU,LRCWT)=1
"RTN","LRCAPBB",48,0)
 ...I $D(^LAM(LRCC,0))#2 S LRX=^(0),LRUW=$P(LRX,"^",3),LRCWT=$P(LRX,"^",11)
"RTN","LRCAPBB",49,0)
 ...I (LRIN="")!(LRCC="")!(LRCDT="")!(LRCTM="")!(LRTS="") D DUMP Q
"RTN","LRCAPBB",50,0)
 ...D ^LRCAPV3
"RTN","LRCAPBB",51,0)
 ...S $P(^LRE(LRREC,5,LRI,99,LRTS,1,LRDTTM,1,LRCC,0),"^",3)=1
"RTN","LRCAPBB",52,0)
 ..Q
"RTN","LRCAPBB",53,0)
FIN S $P(^LAB(69.9,1,"NITE"),"^",4)="" L -^LRD(65,"AA") L -^LRE("AA")
"RTN","LRCAPBB",54,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRCAPBB",55,0)
 D CLEAN
"RTN","LRCAPBB",56,0)
 Q
"RTN","LRCAPBB",57,0)
FT ;
"RTN","LRCAPBB",58,0)
 S LRX=$G(^LAB(69.9,1,8.1,+$G(^LAB(69.9,1,10)),0)),LRIN=$P(LRX,U),(LRAA,LRMA)=+$P(LRX,U,2),LRLSS=+$P(LRX,U,3) S:'LRLSS LRLSS=LRMA D CHK
"RTN","LRCAPBB",59,0)
 Q
"RTN","LRCAPBB",60,0)
FT2 ;
"RTN","LRCAPBB",61,0)
 S LRX=$G(^LAB(69.9,1,8.1,+$G(^LAB(69.9,1,10)),0)),LRIN=$P(LRX,U),(LRAA,LRMA)=+$P(LRX,U,4),LRLSS=+$P(LRX,U,5) S:'LRLSS LRLSS=LRMA D CHK
"RTN","LRCAPBB",62,0)
 Q
"RTN","LRCAPBB",63,0)
CHK S LRERR=$S('LRIN:1,'LRMA:1,1:0) Q:LRERR
"RTN","LRCAPBB",64,0)
 S:'$D(^LRO(68,LRMA,0))#2 LRERR=1 Q:LRERR  S LRX=^(0) I '$P(LRX,U,16) S LRERR=1 Q
"RTN","LRCAPBB",65,0)
 S:'LRLSS LRLSS=LRMA S LRWA=LRLSS
"RTN","LRCAPBB",66,0)
 S LRLD=$S($L($P(LRX,U,19)):$P(LRX,U,19),1:"CP")
"RTN","LRCAPBB",67,0)
 Q
"RTN","LRCAPBB",68,0)
DUMP ;
"RTN","LRCAPBB",69,0)
 S LRX=$S($D(^TMP("LR WL ERRORS",0))#2:$P(^(0),U,3),1:0)+1,^TMP("LR WL ERRORS",0)=U_U_LRX
"RTN","LRCAPBB",70,0)
 S LRESTR="BLOOD BANK RECORD= "_$S($D(LRREC):LRREC,1:"")_" TS= "_$S($D(LRTS):LRTS,1:"")_" CC= "_$S($D(LRCC):LRCC,1:"")_" IN= "_$S($D(LRIN):LRIN,1:"")
"RTN","LRCAPBB",71,0)
 S LRESTR=LRESTR_" CDT= "_$S($D(LRCDT):LRCDT,1:"")_" CT= "_$S($D(LRCTM):LRCTM,1:"")
"RTN","LRCAPBB",72,0)
 S ^TMP("LR WL ERRORS",LRX,$H)=LRESTR
"RTN","LRCAPBB",73,0)
 Q
"RTN","LRCAPBB",74,0)
CLEAN ;
"RTN","LRCAPBB",75,0)
 Q:$D(TEST)  K LRACC,LRAD,LRCC,LRDTTM,LRCDT,LRCNT,LRCTM,LRFILE,LRIDT,LRIN,LRLSS,LRMA
"RTN","LRCAPBB",76,0)
 K LROAD,LROL,LRRREC,LRRRL,LRTEC,LRTS,LRUG,LRX,LRZCNT,LRERR,LRQC,LRII
"RTN","LRCAPBB",77,0)
 K LRNT,LRCWT,LRREC,LRUW,X,LRESTR,LRWA,%,LRLD,LROAD1,LROAD2,LRRRL1
"RTN","LRCAPBB",78,0)
 K LRRRL2,LRRRL3,LRRRL4,LRI,LRFIRST,LRFNUM,LREND
"RTN","LRCAPBB",79,0)
 Q
"RTN","LRCAPBB",80,0)
INIT ;
"RTN","LRCAPBB",81,0)
 S (LRREC,LRTS,LRACC,LROAD,LROAD1,LROAD2,LRRRL,LRRRL1,LRRRL2,LRRRL3,LROL,LRII,LRIDT,LRTEC,LRFNUM,LRERR)="",LRRRL4="Z",LRUG=50 ; These variables are needed by LRCAPV3
"RTN","LRCAPBB",82,0)
 Q
"RTN","LRCAPBB",83,0)
TRAP ;
"RTN","LRCAPBB",84,0)
 S LREND=1 S:$D(^LAB(69.9,1,"NITE")) $P(^LAB(69.9,1,"NITE"),U,4)="ERROR"_$P(^("NITE"),"^",4) D @^%ZOSF("ERRTN")
"RTN","LRCAPBB",85,0)
 Q
"RTN","LRCAPBV")
0^1^B50416998
"RTN","LRCAPBV",1,0)
LRCAPBV ;DALOI/FHS - PROCESS VBECS WORKLOAD API ; 4/17/07 3:53am
"RTN","LRCAPBV",2,0)
 ;;5.2;LAB SERVICE;**325**;Sep 27, 1994;Build 34
"RTN","LRCAPBV",3,0)
 ;Reference to $$FIND1^DIC supported by IA #2051
"RTN","LRCAPBV",4,0)
 ;Reference to FILE^DID supported by IA #2052
"RTN","LRCAPBV",5,0)
 ;Reference to FILE^DIE supported by IA #2053
"RTN","LRCAPBV",6,0)
 ;Reference to GETS^DIQ supported by IA #2056
"RTN","LRCAPBV",7,0)
 ;Reference to $$GET^XUA4A72 supported by IA #1625
"RTN","LRCAPBV",8,0)
 ;Reference to $$WKLDCAP^VBECA7 supported by IA #4767
"RTN","LRCAPBV",9,0)
 ;Reference to UPDTWKLD^VBECA7 supported by IA #4767
"RTN","LRCAPBV",10,0)
EN ;Will only run if VBECS BUNDLE 1.0 is installed.
"RTN","LRCAPBV",11,0)
 Q:'($D(^VBEC(6002.01,0)))
"RTN","LRCAPBV",12,0)
BBLOOK ;
"RTN","LRCAPBV",13,0)
LOCK L +^XTMP("BVEC WKLD"):10 G:'$T LOCK
"RTN","LRCAPBV",14,0)
 Q:$G(^XTMP("BVEC WKLD",0))=+$H  S ^XTMP("BVEC WKLD",0)=+$H
"RTN","LRCAPBV",15,0)
 N ANS,ANX
"RTN","LRCAPBV",16,0)
 N D1,D2,DFN,ERR,FILE,IEN,LRAA,LRACC,LRADT,LRAN,LRACPABV,LRCC
"RTN","LRCAPBV",17,0)
 N LRCDT,LRCNT,LRCTM,LRD65,LRDAA,LRDFN,LRDIV,LRDLOC,LRDPRO,LRDSUF
"RTN","LRCAPBV",18,0)
 N LRE655,LREDT,LRERR,LRESCPT,LRFDA,LRFILE,LRFNUM,LRIDT
"RTN","LRCAPBV",19,0)
 N LRII,LRIN,LRLD,LRLOG,LRLSS,LRMA,LRNLT,LROA,LROAD,LROAD1,LROAD2
"RTN","LRCAPBV",20,0)
 N LROL,LRPKG,LRREC,LRRRL,LRRRL1,LRRRL3,LRRRL4,LRSUF,LRTEC,LRTS
"RTN","LRCAPBV",21,0)
 N LRTST,LRTSTP,LRTYPE,LRUG,LRUID,LRUNIT,LRWA,LRWKLAA,LRZCNT,X,Y
"RTN","LRCAPBV",22,0)
 N LRCAPBV,LRDPF,LRNP,LRUA,LRRRL2,LRSN,LRSPEC,LRSTATUS,LRVSITN
"RTN","LRCAPBV",23,0)
 N LRTSTU,LRTSQA,LRTSTD
"RTN","LRCAPBV",24,0)
GET ;Call VBECS 6002.01 data populating API
"RTN","LRCAPBV",25,0)
 S ANS=$$WKLDCAP^VBECA7
"RTN","LRCAPBV",26,0)
 G:ANS'=1 END
"RTN","LRCAPBV",27,0)
 S LRCAPBV=1,LRESCPT=0
"RTN","LRCAPBV",28,0)
DLOC ;Get default location and provider
"RTN","LRCAPBV",29,0)
 D GETS^DIQ(69.9,"1,",".8;617","I","ANS","ERR")
"RTN","LRCAPBV",30,0)
 S LRDLOC=$G(ANS(69.9,"1,",.8,"I"))
"RTN","LRCAPBV",31,0)
 S LRDPRO=$G(ANS(69.9,"1,",617,"I"))
"RTN","LRCAPBV",32,0)
 I $$GET^XUA4A72(LRDPRO)<1 G END
"RTN","LRCAPBV",33,0)
 S:'$G(LRIEN) LRIEN=0
"RTN","LRCAPBV",34,0)
LK1 ;Set default values
"RTN","LRCAPBV",35,0)
 S LRPKG=$$FIND1^DIC(9.4,"","O","LAB SERVICE","B","","ANS")
"RTN","LRCAPBV",36,0)
 I LRPKG<1 S ERR=9.4
"RTN","LRCAPBV",37,0)
 S LRDAA=$$FIND1^DIC(68,"","O","BLOOD BANK","B","","ANS")
"RTN","LRCAPBV",38,0)
 S:'LRDAA LRDAA=29
"RTN","LRCAPBV",39,0)
 S LRD65=$$FIND1^DIC(65,"","B","VBECS1","B","","ANS")
"RTN","LRCAPBV",40,0)
 S LRDSUF=$$FIND1^DIC(64.2,"","O","GENERIC","B","","ANS")
"RTN","LRCAPBV",41,0)
 I '$G(LRD65) S LRSTATUS="LRD(65 missing",LRERR="Failed lookup" D  G END
"RTN","LRCAPBV",42,0)
 . S ERR=65 D EUPDATE
"RTN","LRCAPBV",43,0)
TST ;Get default tests names
"RTN","LRCAPBV",44,0)
 S LRTSTQA=$$FIND1^DIC(60,,"B","VBEC QA/QC","B",,"ANS")
"RTN","LRCAPBV",45,0)
 S LRTSTU=$$FIND1^DIC(60,,"B","VBEC UNIT PROCESSING","B",,"ANS")
"RTN","LRCAPBV",46,0)
 S LRTSTD=$$FIND1^DIC(60,,"B","VBEC DONOR","B",,"ANS")
"RTN","LRCAPBV",47,0)
 I $S('LRTSTQA:1,'LRTSTU:1,'LRTSTD:1,1:0) D  G END
"RTN","LRCAPBV",48,0)
 . S ERR=$S('LRTSTQA:"VBEC QA/QC ",'LRTSTU:"VBEC UNIT PROCESSING",1:"VBEC DONOR") D EUPDATE
"RTN","LRCAPBV",49,0)
 Q:$G(LRDBUG)
"RTN","LRCAPBV",50,0)
DPROV ;Set default PCE Provider
"RTN","LRCAPBV",51,0)
LOOP ;Find entries with the status of pending.
"RTN","LRCAPBV",52,0)
 F  S LRIEN=$O(^VBEC(6002.01,"AC","P",LRIEN)) Q:LRIEN<1  D BBDIQ
"RTN","LRCAPBV",53,0)
 Q:$G(LRDBUG)
"RTN","LRCAPBV",54,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","LRCAPBV",55,0)
END ;
"RTN","LRCAPBV",56,0)
 L -^XTMP("BVEC WKLD")
"RTN","LRCAPBV",57,0)
 ;Call VBECS update API
"RTN","LRCAPBV",58,0)
 D UPDTWKLD^VBECA7
"RTN","LRCAPBV",59,0)
 K LRIEN
"RTN","LRCAPBV",60,0)
 Q
"RTN","LRCAPBV",61,0)
BBDIQ ;Gather entry info
"RTN","LRCAPBV",62,0)
 I $G(LRDBUG) W !,LRIEN
"RTN","LRCAPBV",63,0)
 K ANS,ANX,ERR,FILE,LRFDA
"RTN","LRCAPBV",64,0)
 K ^VBEC(6002.01,LRIEN,"ERR")
"RTN","LRCAPBV",65,0)
 S FILE=6002.01,IEN=LRIEN_","
"RTN","LRCAPBV",66,0)
 D GETS^DIQ(FILE,IEN,"**","IN","ANS","ERR")
"RTN","LRCAPBV",67,0)
 D ERR Q:$G(ERR)
"RTN","LRCAPBV",68,0)
 S LRFDA(6002.01,LRIEN_",",5)="I"
"RTN","LRCAPBV",69,0)
 D FILE^DIE("S","LRFDA","ERR")
"RTN","LRCAPBV",70,0)
 D LRAA
"RTN","LRCAPBV",71,0)
 Q:$G(ERR)
"RTN","LRCAPBV",72,0)
 S:$G(LRWKLAA) (LRMA,LRWA,LRLSS)=LRWKLAA
"RTN","LRCAPBV",73,0)
 S LRCDT=$P(ANS(6002.01,LRIEN_",",3,"I"),".")
"RTN","LRCAPBV",74,0)
 S LRCTM=$P(ANS(6002.01,LRIEN_",",3,"I"),".",2)
"RTN","LRCAPBV",75,0)
 D ^LRCAPV3
"RTN","LRCAPBV",76,0)
 K LRFDA S LRFDA(6002.01,LRIEN_",",5)="S"
"RTN","LRCAPBV",77,0)
 S LRFDA(6002.01,LRIEN_",",4)=$$NOW^XLFDT
"RTN","LRCAPBV",78,0)
 D FILE^DIE("S","LRFDA","ERR")
"RTN","LRCAPBV",79,0)
PCEFILE ;File PCE if outpatient location
"RTN","LRCAPBV",80,0)
 Q:$S(LRRRL4="W":0,LRRRL4="O":0,1:1)
"RTN","LRCAPBV",81,0)
 I $G(DFN) D
"RTN","LRCAPBV",82,0)
 . D EN^LRCAPBV1(LRADT,LRTEC,LRTST,LRDSSLOC,LRDSSID,LRIN,DFN,LRPRO,LRCNT)
"RTN","LRCAPBV",83,0)
 Q
"RTN","LRCAPBV",84,0)
ERR ;Check entry for critical data
"RTN","LRCAPBV",85,0)
 I $G(ERR) S LRERR="Failed lookup",LRSTATUS="E" D EUPDATE Q
"RTN","LRCAPBV",86,0)
 D INIT^LRCAPBB S LRLD="CP"
"RTN","LRCAPBV",87,0)
 S ERR=0
"RTN","LRCAPBV",88,0)
TYPE S LRTYPE=$G(ANS(6002.01,IEN,1,"I")) D  Q:$G(ERR)
"RTN","LRCAPBV",89,0)
 . I '$L(LRTYPE) S ERR=1 D EUPDATE
"RTN","LRCAPBV",90,0)
DIV S LRDIV=+$G(ANS(6002.01,IEN,2,"I")) D  Q:$G(ERR)
"RTN","LRCAPBV",91,0)
 . I '$D(^DIC(4,+LRDIV,0)) S ERR=2 D EUPDATE
"RTN","LRCAPBV",92,0)
 . S LRIN=LRDIV
"RTN","LRCAPBV",93,0)
ADT S (LRADT,LREDT)=$G(ANS(6002.01,IEN,3,"I")) D  Q:$G(ERR)
"RTN","LRCAPBV",94,0)
 . I LRADT'?7N1"."1N.E S ERR=3 D EUPDATE
"RTN","LRCAPBV",95,0)
 . S LRCDT=$P(LRADT,"."),LRCTM=$P(LRADT,".",2)
"RTN","LRCAPBV",96,0)
NLT S LRNLT=$G(ANS(6002.01,IEN,6,"I")) D  Q:$G(ERR)
"RTN","LRCAPBV",97,0)
 . I '$D(^LAM(LRNLT,0)) S ERR=6 D EUPDATE
"RTN","LRCAPBV",98,0)
SUF S LRSUF=$G(ANS(6002.01,IEN,7,"I")) D  Q:$G(ERR)
"RTN","LRCAPBV",99,0)
 . S:'LRSUF LRSUF=LRDSUF
"RTN","LRCAPBV",100,0)
 . S LRCC=$$NLT^LRCAPBV1(LRNLT,LRSUF) ;Lookup or create NLT code
"RTN","LRCAPBV",101,0)
 . D GETS^DIQ(64.2,LRSUF_",",1,"I","ANS","ERR")
"RTN","LRCAPBV",102,0)
 . S LRSUF=$P($G(ANS(64.2,LRSUF_",",1,"I")),".",2)
"RTN","LRCAPBV",103,0)
 S LRCNT=$G(ANS(6002.01,IEN,8,"I")) I 'LRCNT S LRCNT=1
"RTN","LRCAPBV",104,0)
DFN S DFN=$G(ANS(6002.01,IEN,9,"I")) D  I $G(ERR) D EUPDATE Q
"RTN","LRCAPBV",105,0)
 . S LRDFN=""
"RTN","LRCAPBV",106,0)
 . Q:LRTYPE'="P"
"RTN","LRCAPBV",107,0)
 . S LRDFN=$G(^DPT(+DFN,"LR"))
"RTN","LRCAPBV",108,0)
 . ;I 'LRDFN S ERR=9 ;RLM 6/12/08 This isn't always an error and the data is evaluated in VBECS prior to transmission
"RTN","LRCAPBV",109,0)
FILE I LRTYPE="U"!(LRTYPE="M") S LRFILE=LRD65_";LRD(65,"
"RTN","LRCAPBV",110,0)
 I LRTYPE="D" S LRFILE=LRE655_";LRE("
"RTN","LRCAPBV",111,0)
 I LRTYPE="P" S LRFILE=DFN_";DPT("
"RTN","LRCAPBV",112,0)
TEC S LRTEC=$G(ANS(6002.01,IEN,10,"I")) D  Q:$G(ERR)
"RTN","LRCAPBV",113,0)
 . I '$D(^VA(200,LRTEC,0)) S ERR=10 D EUPDATE
"RTN","LRCAPBV",114,0)
 S LRAA=$S($G(LRDAA):LRDAA,1:29),LRAN=""
"RTN","LRCAPBV",115,0)
UID S LRUID=$G(ANS(6002.01,IEN,11,"I")) D  Q:$G(ERR)
"RTN","LRCAPBV",116,0)
 . I '$L(LRUID) Q
"RTN","LRCAPBV",117,0)
 . S LRAA=+$O(^LRO(68,"C",LRUID,0)) Q:LRAA<1
"RTN","LRCAPBV",118,0)
 . S LRCDT=$O(^LRO(68,"C",LRUID,LRAA,0))
"RTN","LRCAPBV",119,0)
 . S LRAN=$O(^LRO(68,"C",LRUID,LRAA,LRCDT,0))
"RTN","LRCAPBV",120,0)
 . S ERR=$S('LRAA:11,'LRAA:11,'LRAN:11,'$D(^LRO(68,LRAA,1,LRCDT,1,LRAN,0)):11,1:0)
"RTN","LRCAPBV",121,0)
 . I ERR D EUPDATE
"RTN","LRCAPBV",122,0)
TS K LRTS,LRTST,LRTSTP S LRTS=0
"RTN","LRCAPBV",123,0)
 I $G(ANS(6002.01,IEN,12,"I")) S (LRTS,LRTST,LRTSTP)=+$G(ANS(6002.01,IEN,12,"I"))
"RTN","LRCAPBV",124,0)
 I 'LRTS D
"RTN","LRCAPBV",125,0)
 . I LRTYPE="U" S (LRTS,LRTST,LRTSTP)=LRTSTU
"RTN","LRCAPBV",126,0)
 . I LRTYPE="M" S (LRTS,LRTST,LRTSTP)=LRTSTQA
"RTN","LRCAPBV",127,0)
 . I LRTYPE="D" S (LRTS,LRTST,LRTSTP)=LRTSTD
"RTN","LRCAPBV",128,0)
 ; I 'LRTS,$G(LRAA),$G(LRCDT),$G(LRAN) S (LRTS,LRTST,LRTSTP)=$O(^LRO(68,LRAA,1,LRCDT,1,LRAN,4,0))
"RTN","LRCAPBV",129,0)
 D  Q:$G(ERR)
"RTN","LRCAPBV",130,0)
 . S ERR=0
"RTN","LRCAPBV",131,0)
 . ;I '$D(^LAB(60,LRTS,0)) S ERR=12 D EUPDATE ;;RLM 6/12/08 This isn't always an error and the data is evaluated in VBECS prior to transmission
"RTN","LRCAPBV",132,0)
UNIT S LRUNIT=$G(ANS(6002.01,IEN,13,"I")) D  Q:ERR
"RTN","LRCAPBV",133,0)
 . I LRTYPE="U" S LRFILE=LRD65_";LRD(65," I '$L(LRUNIT) S ERR=13 D EUPDATE
"RTN","LRCAPBV",134,0)
LRDAA S LRWKLAA=$G(ANS(6002.01,IEN,14,"I"))
"RTN","LRCAPBV",135,0)
 Q
"RTN","LRCAPBV",136,0)
EUPDATE ;Set error codes into entry
"RTN","LRCAPBV",137,0)
 I $D(LRDBUG) W !,ERR
"RTN","LRCAPBV",138,0)
 K LRFDA(1)
"RTN","LRCAPBV",139,0)
 S:'$G(LRIEN) LRIEN=$O(^VBEC(6002.01,0))
"RTN","LRCAPBV",140,0)
 S LRFDA(1,6002.01,LRIEN_",",5)="E"
"RTN","LRCAPBV",141,0)
 I $G(ERR) S LRFDA(1,6002.01,LRIEN_",",20)="Field "_ERR_" has an error"
"RTN","LRCAPBV",142,0)
 I '$G(ERR) S LRFDA(1,6002.01,LRIEN_",",20)=ERR_" Error"
"RTN","LRCAPBV",143,0)
 D FILE^DIE("S","LRFDA(1)","ERRX")
"RTN","LRCAPBV",144,0)
 Q
"RTN","LRCAPBV",145,0)
LRAA ;Get accession data
"RTN","LRCAPBV",146,0)
 S LRAA=$G(ANS(6002.01,LRIEN_",",14,"I"))
"RTN","LRCAPBV",147,0)
 S LRAA=$S($G(LRAA):LRAA,1:LRDAA)
"RTN","LRCAPBV",148,0)
 K ANX,ERX
"RTN","LRCAPBV",149,0)
 D GETS^DIQ(68,LRAA_",",.19,"I","ANX","ERR")
"RTN","LRCAPBV",150,0)
 S LRLD=$G(ANX(68,LRAA_",",.19,"I"))
"RTN","LRCAPBV",151,0)
AA ;Accession Area Information
"RTN","LRCAPBV",152,0)
 S (LRMA,LRWA,LRLSS)=LRAA,LRUG=9
"RTN","LRCAPBV",153,0)
 I $G(LRAN),$G(LRCDT),$G(LRAA) D
"RTN","LRCAPBV",154,0)
 . Q:'$D(^LRO(68,LRAA,1,LRCDT,1,LRAN,0))
"RTN","LRCAPBV",155,0)
 . S IEN=LRAN_","_LRCDT_","_LRAA_","
"RTN","LRCAPBV",156,0)
 . D GETS^DIQ(68,LRAA_",",.8,"I","ANX","ERX")
"RTN","LRCAPBV",157,0)
 . S LRDSSLOC=$G(ANX(68,LRAA_",",.8,"I"))
"RTN","LRCAPBV",158,0)
 . S:'LRDSSLOC LRDSSLOC=LRDLOC
"RTN","LRCAPBV",159,0)
 . D GETS^DIQ(44,LRDSSLOC_",",8,"I","ANX","ERX")
"RTN","LRCAPBV",160,0)
 . S LRDSSID=$G(ANX(44,LRDSSLOC_",",8,"I"))
"RTN","LRCAPBV",161,0)
 . S FLD=".01;.02;2;3;4;6;6.5;6.6;6.7;15;92;94"
"RTN","LRCAPBV",162,0)
 . D GETS^DIQ(68.02,IEN,FLD,"IN","ANX","ERX")
"RTN","LRCAPBV",163,0)
 . D GETS^DIQ(68.05,1_","_IEN,.01,"IN","ANX","ERX")
"RTN","LRCAPBV",164,0)
 . D GETS^DIQ(68.04,LRTS_","_IEN,1,"IN","ANX","ERX")
"RTN","LRCAPBV",165,0)
LRAA1 . ;Parse variables
"RTN","LRCAPBV",166,0)
 . S LRFILE=$P($G(^LRO(68,LRAA,1,LRCDT,1,LRAN,0)),U,2)
"RTN","LRCAPBV",167,0)
 . S LRDFN=$G(ANX(68.02,IEN,.01,"I"))
"RTN","LRCAPBV",168,0)
 . D GETS^DIQ(63,LRDFN_",",".02;.03","I","ANX","ERX")
"RTN","LRCAPBV",169,0)
DPF . S LRDPF=$G(ANX(63,LRDFN_",",.02,"I"))
"RTN","LRCAPBV",170,0)
 . S DFN=$G(ANX(63,LRDFN_",",.03,"I"))
"RTN","LRCAPBV",171,0)
 . D FILE^DID(LRFILE,"","GLOBAL NAME","ANX","ERX")
"RTN","LRCAPBV",172,0)
 . I $G(LRDFN),$G(DFN) S LRFILE=DFN_";"_$P(ANX("GLOBAL NAME"),U,2)
"RTN","LRCAPBV",173,0)
ACCES . S LROAD=$G(ANX(68.02,IEN,2,"I"))
"RTN","LRCAPBV",174,0)
 . S LROAD1=$G(ANX(68.02,IEN,3,"I"))
"RTN","LRCAPBV",175,0)
 . S (LRSN,LROAD2)=$G(ANX(68.02,IEN,4,"I"))
"RTN","LRCAPBV",176,0)
 . S LRSPEC=$G(ANX(68.05,1_","_IEN,.01,"I"))
"RTN","LRCAPBV",177,0)
 . S LRRRL=$G(ANX(68.02,IEN,6,"I"))
"RTN","LRCAPBV",178,0)
 . S (LRPRO,LRRRL1)=$G(ANX(68.02,IEN,6.5,"I"))
"RTN","LRCAPBV",179,0)
 . S LRRRL3=$G(ANX(68.02,IEN,6.7,"I"))
"RTN","LRCAPBV",180,0)
 . S LRACC=$G(ANX(68.02,IEN,15,"I"))
"RTN","LRCAPBV",181,0)
 . S LROL=$G(ANX(68.02,IEN,94,"I"))
"RTN","LRCAPBV",182,0)
 . D GETS^DIQ(44,LROL_",","2;9.5","IN","ANX","ERX")
"RTN","LRCAPBV",183,0)
 . S LRRRL2=$G(ANX(44,LROL_",",9.5,"I"))
"RTN","LRCAPBV",184,0)
 . S LRRRL4=$G(ANX(44,LROL_",",2,"I"))
"RTN","LRCAPBV",185,0)
 . S LRIDT=""
"RTN","LRCAPBV",186,0)
URG . S LRUG=$G(ANX(68.04,LRTS_","_IEN,1,"I"))
"RTN","LRCAPBV",187,0)
 Q
"RTN","LRCAPBV1")
0^2^B5105874
"RTN","LRCAPBV1",1,0)
LRCAPBV1 ;DALOI/FHS - PROCESS VBEC PCE WORKLOAD API ; 4/3/07 3:31am
"RTN","LRCAPBV1",2,0)
 ;;5.2;LAB SERVICE;**325**;Sep 27,1994;Build 34
"RTN","LRCAPBV1",3,0)
 ;Reference to $$FIND1^DIC supported by IA #2051
"RTN","LRCAPBV1",4,0)
 ;Reference to FILE^DID supported by IA #2052
"RTN","LRCAPBV1",5,0)
 ;Reference to FILE^DIE supported by IA #2053
"RTN","LRCAPBV1",6,0)
 ;Reference to UPDATE^DIE supported by IA #2053
"RTN","LRCAPBV1",7,0)
 ;Reference to GETS^DIQ supported by IA #2056
"RTN","LRCAPBV1",8,0)
 ;Reference to $$GET^XUA4A72 supported by IA #1625
"RTN","LRCAPBV1",9,0)
 Q
"RTN","LRCAPBV1",10,0)
EN(LREDT,LRDUZ,LRTSTP,LRDSSLOC,LRDSSID,LRNINS,DFN,LRPRO,LRCNT) ;Call LRCAPPH1 to send PCE workload
"RTN","LRCAPBV1",11,0)
 ;LREDT = Encounter Date
"RTN","LRCAPBV1",12,0)
 ;LRDUZ = User
"RTN","LRCAPBV1",13,0)
 ;LRTSTP = ^LAB(60 IEN
"RTN","LRCAPBV1",14,0)
 ;LRDSSLOC = DSS LOCATION
"RTN","LRCAPBV1",15,0)
 ;LRDSSID = DSS ID
"RTN","LRCAPBV1",16,0)
 ;LRNINIS = Instution
"RTN","LRCAPBV1",17,0)
 ;DFN = Patient
"RTN","LRCAPBV1",18,0)
 ;LRPRO = Provider
"RTN","LRCAPBV1",19,0)
 ;LRCNT = set negative if the test is cancelled.
"RTN","LRCAPBV1",20,0)
 I LRCNT<1 S LRNP=1
"RTN","LRCAPBV1",21,0)
 K ^TMP("LRPXAPI",$J),LROK,LRXTST
"RTN","LRCAPBV1",22,0)
 K LRICPT,CPT,LRCEX,LRREL,LRINA,LRNOP,EDATE
"RTN","LRCAPBV1",23,0)
 S (LROA,LRCEX)=0,ERR=699,EDATE=$P(LREDT,".")
"RTN","LRCAPBV1",24,0)
 S LRESCPT=0,LRTST=LRTSTP
"RTN","LRCAPBV1",25,0)
 I $$GET^XUA4A72(LRPRO)<1 D
"RTN","LRCAPBV1",26,0)
 . S LRPRO=LRDPRO
"RTN","LRCAPBV1",27,0)
EN6 D EN6^LRCAPPH1
"RTN","LRCAPBV1",28,0)
 I $G(LRNOP) D  Q
"RTN","LRCAPBV1",29,0)
 . S ERR="PCE+"_LRNOP D EUPDATE^LRCAPBV
"RTN","LRCAPBV1",30,0)
 S ERR=0
"RTN","LRCAPBV1",31,0)
 I $D(^LRO(69,LRCDT,1,LRSN,0)) S ^("PCE")=""
"RTN","LRCAPBV1",32,0)
 I $D(^TMP("LRPXAPI",$J,"PROCEDURE")) D SEND^LRCAPPH1
"RTN","LRCAPBV1",33,0)
 K LRFDA(3)
"RTN","LRCAPBV1",34,0)
 I $G(LROK)>0 D  Q
"RTN","LRCAPBV1",35,0)
 . S LRFDA(3,6002.01,LRIEN_",",99)=LRVSITN
"RTN","LRCAPBV1",36,0)
 . D FILE
"RTN","LRCAPBV1",37,0)
PCEERR ;PCE error logging
"RTN","LRCAPBV1",38,0)
 Q:'$G(LROK)
"RTN","LRCAPBV1",39,0)
 S LRFDA(3,6002.01,LRIEN_",",21)="PCE "_LROK_" Error"
"RTN","LRCAPBV1",40,0)
 S LRFDA(3,6002.01,LRIEN_",",5)="E"
"RTN","LRCAPBV1",41,0)
FILE ;
"RTN","LRCAPBV1",42,0)
 D FILE^DIE("S","LRFDA(3)","ERR")
"RTN","LRCAPBV1",43,0)
 Q
"RTN","LRCAPBV1",44,0)
NLT(LRP,LRSUF) ;Lookup or create new NLT code
"RTN","LRCAPBV1",45,0)
 N ANS,FDA,LRFDA,FLD,ERR,LRPN,LRLRT,LRLRTN
"RTN","LRCAPBV1",46,0)
 I '$D(^LAM(+$G(LRP),0))#2 S ERR="No NLT Code" Q 0
"RTN","LRCAPBV1",47,0)
 I '$G(LRSUF) Q +$G(LRP)
"RTN","LRCAPBV1",48,0)
 D GETS^DIQ(64,LRP_",",".01:16","IEN","ANS","ERR")
"RTN","LRCAPBV1",49,0)
 D GETS^DIQ(64.2,LRSUF_",",".01;1","IEN","ANS","ERR")
"RTN","LRCAPBV1",50,0)
 S LRLRT=$G(ANS(64,LRP_",",.01,"I"))_"~"_$G(ANS(64.2,LRSUF_",",.01,"I"))
"RTN","LRCAPBV1",51,0)
 S LRLRTN=$P($G(ANS(64,LRP_",",1,"I")),".")_$G(ANS(64.2,LRSUF_",",1,"I"))
"RTN","LRCAPBV1",52,0)
NLT1 ;Lookup
"RTN","LRCAPBV1",53,0)
 S LRPN=$$FIND1^DIC(64,"","O",LRLRTN_" ","C","","ERR")
"RTN","LRCAPBV1",54,0)
 I LRPN>0 Q LRPN
"RTN","LRCAPBV1",55,0)
 S FLD="" F  S FLD=$O(ANS(64,LRP_",",FLD)) Q:FLD=""  D
"RTN","LRCAPBV1",56,0)
 . S LRFDA(1,64,"+1,",FLD)=$G(ANS(64,LRP_",",FLD,"I"))
"RTN","LRCAPBV1",57,0)
 S LRFDA(1,64,"+1,",.01)=LRLRT
"RTN","LRCAPBV1",58,0)
 S LRFDA(1,64,"+1,",1)=LRLRTN
"RTN","LRCAPBV1",59,0)
 D UPDATE^DIE("S","LRFDA(1)","FDA","ERR")
"RTN","LRCAPBV1",60,0)
 S LRPN=FDA(1)
"RTN","LRCAPBV1",61,0)
 Q LRPN
"RTN","LRCAPBV1",62,0)
 Q
"VER")
8.0^22.0
**END**
**END**
