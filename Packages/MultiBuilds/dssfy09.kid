KIDS Distribution saved on Nov 04, 2008@10:11:45
ECX*3*112,FH*5.5*18,PSJ*5.210,LR*5.2*385
**KIDS**:ECX*3.0*112^FH*5.5*18^PSJ*5.0*210^LR*5.2*385^

**INSTALL NAME**
ECX*3.0*112
"BLD",7448,0)
ECX*3.0*112^DSS EXTRACTS^0^3081104^y
"BLD",7448,4,0)
^9.64PA^728.44^6
"BLD",7448,4,727.29,0)
727.29
"BLD",7448,4,727.29,222)
y^y^f^^^^n
"BLD",7448,4,727.811,0)
727.811
"BLD",7448,4,727.811,2,0)
^9.641^727.811^1
"BLD",7448,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",7448,4,727.811,2,727.811,1,0)
^9.6411^104^8
"BLD",7448,4,727.811,2,727.811,1,97,0)
ENCOUNTER EC
"BLD",7448,4,727.811,2,727.811,1,98,0)
RADIATION ENCOUNTER INDICATOR
"BLD",7448,4,727.811,2,727.811,1,99,0)
MST ENCOUNTER INDICATOR
"BLD",7448,4,727.811,2,727.811,1,100,0)
ENCOUNTER SC
"BLD",7448,4,727.811,2,727.811,1,101,0)
AGENT ORANGE STATUS
"BLD",7448,4,727.811,2,727.811,1,102,0)
ENVIRONMENTAL CONTAMINANTS
"BLD",7448,4,727.811,2,727.811,1,103,0)
RADIATION STATUS
"BLD",7448,4,727.811,2,727.811,1,104,0)
MST STATUS
"BLD",7448,4,727.811,222)
y^y^p^^^^n^^n
"BLD",7448,4,727.811,224)

"BLD",7448,4,727.813,0)
727.813
"BLD",7448,4,727.813,2,0)
^9.641^727.813^1
"BLD",7448,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",7448,4,727.813,2,727.813,1,0)
^9.6411^42^1
"BLD",7448,4,727.813,2,727.813,1,42,0)
LOINC CODE
"BLD",7448,4,727.813,222)
y^y^p^^^^n^^n
"BLD",7448,4,727.813,224)

"BLD",7448,4,727.824,0)
727.824
"BLD",7448,4,727.824,2,0)
^9.641^727.824^1
"BLD",7448,4,727.824,2,727.824,0)
LAB RESULTS EXTRACT  (File-top level)
"BLD",7448,4,727.824,2,727.824,1,0)
^9.6411^9^2
"BLD",7448,4,727.824,2,727.824,1,9,0)
TEST CODE
"BLD",7448,4,727.824,2,727.824,1,31,0)
DSS LOINC CODE
"BLD",7448,4,727.824,222)
y^n^p^^^^n^^n
"BLD",7448,4,727.824,224)

"BLD",7448,4,727.826,0)
727.826
"BLD",7448,4,727.826,2,0)
^9.641^727.826^1
"BLD",7448,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",7448,4,727.826,2,727.826,1,0)
^9.6411^29^1
"BLD",7448,4,727.826,2,727.826,1,29,0)
TYPE OF TRANSACTION
"BLD",7448,4,727.826,222)
y^y^p^^^^n^^n
"BLD",7448,4,727.826,224)

"BLD",7448,4,728.44,0)
728.44
"BLD",7448,4,728.44,2,0)
^9.641^728.44^1
"BLD",7448,4,728.44,2,728.44,0)
CLINICS AND STOP CODES  (File-top level)
"BLD",7448,4,728.44,2,728.44,1,0)
^9.6411^4^2
"BLD",7448,4,728.44,2,728.44,1,3,0)
DSS STOP CODE
"BLD",7448,4,728.44,2,728.44,1,4,0)
DSS CREDIT STOP CODE
"BLD",7448,4,728.44,222)
y^n^p^^^^n^^n
"BLD",7448,4,728.44,224)

"BLD",7448,4,"APDD",727.811,727.811)

"BLD",7448,4,"APDD",727.811,727.811,97)

"BLD",7448,4,"APDD",727.811,727.811,98)

"BLD",7448,4,"APDD",727.811,727.811,99)

"BLD",7448,4,"APDD",727.811,727.811,100)

"BLD",7448,4,"APDD",727.811,727.811,101)

"BLD",7448,4,"APDD",727.811,727.811,102)

"BLD",7448,4,"APDD",727.811,727.811,103)

"BLD",7448,4,"APDD",727.811,727.811,104)

"BLD",7448,4,"APDD",727.813,727.813)

"BLD",7448,4,"APDD",727.813,727.813,42)

"BLD",7448,4,"APDD",727.824,727.824)

"BLD",7448,4,"APDD",727.824,727.824,9)

"BLD",7448,4,"APDD",727.824,727.824,31)

"BLD",7448,4,"APDD",727.826,727.826)

"BLD",7448,4,"APDD",727.826,727.826,29)

"BLD",7448,4,"APDD",728.44,728.44)

"BLD",7448,4,"APDD",728.44,728.44,3)

"BLD",7448,4,"APDD",728.44,728.44,4)

"BLD",7448,4,"B",727.29,727.29)

"BLD",7448,4,"B",727.811,727.811)

"BLD",7448,4,"B",727.813,727.813)

"BLD",7448,4,"B",727.824,727.824)

"BLD",7448,4,"B",727.826,727.826)

"BLD",7448,4,"B",728.44,728.44)

"BLD",7448,6.3)
26
"BLD",7448,"INIT")
POST^ECX3112P
"BLD",7448,"KRN",0)
^9.67PA^779.2^20
"BLD",7448,"KRN",.4,0)
.4
"BLD",7448,"KRN",.401,0)
.401
"BLD",7448,"KRN",.402,0)
.402
"BLD",7448,"KRN",.403,0)
.403
"BLD",7448,"KRN",.5,0)
.5
"BLD",7448,"KRN",.84,0)
.84
"BLD",7448,"KRN",3.6,0)
3.6
"BLD",7448,"KRN",3.8,0)
3.8
"BLD",7448,"KRN",9.2,0)
9.2
"BLD",7448,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",7448,"KRN",9.8,0)
9.8
"BLD",7448,"KRN",9.8,"NM",0)
^9.68A^27^24
"BLD",7448,"KRN",9.8,"NM",1,0)
ECXPRO1^^0^B20364237
"BLD",7448,"KRN",9.8,"NM",4,0)
ECXUTLA^^0^B52600854
"BLD",7448,"KRN",9.8,"NM",5,0)
ECXNUT1^^0^B106014045
"BLD",7448,"KRN",9.8,"NM",6,0)
ECXUTL4^^0^B51787444
"BLD",7448,"KRN",9.8,"NM",7,0)
ECXPIVDN^^0^B49199497
"BLD",7448,"KRN",9.8,"NM",8,0)
ECXNUTPE^^0^B5181727
"BLD",7448,"KRN",9.8,"NM",9,0)
ECXLABR^^0^B20056057
"BLD",7448,"KRN",9.8,"NM",10,0)
ECXLABN^^0^B38906559
"BLD",7448,"KRN",9.8,"NM",11,0)
ECXKILL^^0^B6822218
"BLD",7448,"KRN",9.8,"NM",12,0)
ECXLARPT^^0^B20353284
"BLD",7448,"KRN",9.8,"NM",14,0)
ECXUDRF^^0^B82697
"BLD",7448,"KRN",9.8,"NM",15,0)
ECXUTL6^^0^B68731197
"BLD",7448,"KRN",9.8,"NM",16,0)
ECXSURG^^0^B53305760
"BLD",7448,"KRN",9.8,"NM",17,0)
ECXOPRX^^0^B51901081
"BLD",7448,"KRN",9.8,"NM",18,0)
ECXSURG1^^0^B14336843
"BLD",7448,"KRN",9.8,"NM",19,0)
ECXTREX^^0^B11510953
"BLD",7448,"KRN",9.8,"NM",20,0)
ECXLARA^^0^B27412499
"BLD",7448,"KRN",9.8,"NM",21,0)
ECXPURG^^0^B23816296
"BLD",7448,"KRN",9.8,"NM",22,0)
ECXSCLD^^0^B41231868
"BLD",7448,"KRN",9.8,"NM",23,0)
ECXPURG1^^0^B36829694
"BLD",7448,"KRN",9.8,"NM",24,0)
ECXUTL2^^0^B70560984
"BLD",7448,"KRN",9.8,"NM",25,0)
ECXNUT^^0^B31564547
"BLD",7448,"KRN",9.8,"NM",26,0)
ECXALAR^^0^B16671173
"BLD",7448,"KRN",9.8,"NM",27,0)
ECXALAR2^^0^B7555415
"BLD",7448,"KRN",9.8,"NM","B","ECXALAR",26)

"BLD",7448,"KRN",9.8,"NM","B","ECXALAR2",27)

"BLD",7448,"KRN",9.8,"NM","B","ECXKILL",11)

"BLD",7448,"KRN",9.8,"NM","B","ECXLABN",10)

"BLD",7448,"KRN",9.8,"NM","B","ECXLABR",9)

"BLD",7448,"KRN",9.8,"NM","B","ECXLARA",20)

"BLD",7448,"KRN",9.8,"NM","B","ECXLARPT",12)

"BLD",7448,"KRN",9.8,"NM","B","ECXNUT",25)

"BLD",7448,"KRN",9.8,"NM","B","ECXNUT1",5)

"BLD",7448,"KRN",9.8,"NM","B","ECXNUTPE",8)

"BLD",7448,"KRN",9.8,"NM","B","ECXOPRX",17)

"BLD",7448,"KRN",9.8,"NM","B","ECXPIVDN",7)

"BLD",7448,"KRN",9.8,"NM","B","ECXPRO1",1)

"BLD",7448,"KRN",9.8,"NM","B","ECXPURG",21)

"BLD",7448,"KRN",9.8,"NM","B","ECXPURG1",23)

"BLD",7448,"KRN",9.8,"NM","B","ECXSCLD",22)

"BLD",7448,"KRN",9.8,"NM","B","ECXSURG",16)

"BLD",7448,"KRN",9.8,"NM","B","ECXSURG1",18)

"BLD",7448,"KRN",9.8,"NM","B","ECXTREX",19)

"BLD",7448,"KRN",9.8,"NM","B","ECXUDRF",14)

"BLD",7448,"KRN",9.8,"NM","B","ECXUTL2",24)

"BLD",7448,"KRN",9.8,"NM","B","ECXUTL4",6)

"BLD",7448,"KRN",9.8,"NM","B","ECXUTL6",15)

"BLD",7448,"KRN",9.8,"NM","B","ECXUTLA",4)

"BLD",7448,"KRN",19,0)
19
"BLD",7448,"KRN",19,"NM",0)
^9.68A^8^6
"BLD",7448,"KRN",19,"NM",1,0)
ECX LAR LOINC RPT^^0
"BLD",7448,"KRN",19,"NM",2,0)
ECX LAB MAINTENACE^^2
"BLD",7448,"KRN",19,"NM",5,0)
ECXRXHF^^0
"BLD",7448,"KRN",19,"NM",6,0)
ECXRX IVP RECREATE^^0
"BLD",7448,"KRN",19,"NM",7,0)
ECXRX UPD RECREATE^^0
"BLD",7448,"KRN",19,"NM",8,0)
ECX TRANSMISSION^^2
"BLD",7448,"KRN",19,"NM","B","ECX LAB MAINTENACE",2)

"BLD",7448,"KRN",19,"NM","B","ECX LAR LOINC RPT",1)

"BLD",7448,"KRN",19,"NM","B","ECX TRANSMISSION",8)

"BLD",7448,"KRN",19,"NM","B","ECXRX IVP RECREATE",6)

"BLD",7448,"KRN",19,"NM","B","ECXRX UPD RECREATE",7)

"BLD",7448,"KRN",19,"NM","B","ECXRXHF",5)

"BLD",7448,"KRN",19.1,0)
19.1
"BLD",7448,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",7448,"KRN",101,0)
101
"BLD",7448,"KRN",409.61,0)
409.61
"BLD",7448,"KRN",771,0)
771
"BLD",7448,"KRN",779.2,0)
779.2
"BLD",7448,"KRN",870,0)
870
"BLD",7448,"KRN",8989.51,0)
8989.51
"BLD",7448,"KRN",8989.52,0)
8989.52
"BLD",7448,"KRN",8994,0)
8994
"BLD",7448,"KRN","B",.4,.4)

"BLD",7448,"KRN","B",.401,.401)

"BLD",7448,"KRN","B",.402,.402)

"BLD",7448,"KRN","B",.403,.403)

"BLD",7448,"KRN","B",.5,.5)

"BLD",7448,"KRN","B",.84,.84)

"BLD",7448,"KRN","B",3.6,3.6)

"BLD",7448,"KRN","B",3.8,3.8)

"BLD",7448,"KRN","B",9.2,9.2)

"BLD",7448,"KRN","B",9.8,9.8)

"BLD",7448,"KRN","B",19,19)

"BLD",7448,"KRN","B",19.1,19.1)

"BLD",7448,"KRN","B",101,101)

"BLD",7448,"KRN","B",409.61,409.61)

"BLD",7448,"KRN","B",771,771)

"BLD",7448,"KRN","B",779.2,779.2)

"BLD",7448,"KRN","B",870,870)

"BLD",7448,"KRN","B",8989.51,8989.51)

"BLD",7448,"KRN","B",8989.52,8989.52)

"BLD",7448,"KRN","B",8994,8994)

"BLD",7448,"PRE")
ECX3112P
"BLD",7448,"QUES",0)
^9.62^^
"BLD",7448,"REQB",0)
^9.611^2^1
"BLD",7448,"REQB",2,0)
ECX*3.0*105^1
"BLD",7448,"REQB","B","ECX*3.0*105",2)

"FIA",727.29)
DSS LOINC FILE
"FIA",727.29,0)
^ECX(727.29,
"FIA",727.29,0,0)
727.29
"FIA",727.29,0,1)
y^y^f^^^^n
"FIA",727.29,0,10)

"FIA",727.29,0,11)

"FIA",727.29,0,"RLRO")

"FIA",727.29,0,"VR")
3.0^ECX
"FIA",727.29,727.29)
0
"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,97)

"FIA",727.811,727.811,98)

"FIA",727.811,727.811,99)

"FIA",727.811,727.811,100)

"FIA",727.811,727.811,101)

"FIA",727.811,727.811,102)

"FIA",727.811,727.811,103)

"FIA",727.811,727.811,104)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,42)

"FIA",727.824)
LAB RESULTS EXTRACT
"FIA",727.824,0)
^ECX(727.824,
"FIA",727.824,0,0)
727.824
"FIA",727.824,0,1)
y^n^p^^^^n^^n
"FIA",727.824,0,10)

"FIA",727.824,0,11)

"FIA",727.824,0,"RLRO")

"FIA",727.824,0,"VR")
3.0^ECX
"FIA",727.824,727.824)
1
"FIA",727.824,727.824,9)

"FIA",727.824,727.824,31)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^y^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,29)

"FIA",728.44)
CLINICS AND STOP CODES
"FIA",728.44,0)
^ECX(728.44,
"FIA",728.44,0,0)
728.44P
"FIA",728.44,0,1)
y^n^p^^^^n^^n
"FIA",728.44,0,10)

"FIA",728.44,0,11)

"FIA",728.44,0,"RLRO")

"FIA",728.44,0,"VR")
3.0^ECX
"FIA",728.44,728.44)
1
"FIA",728.44,728.44,3)

"FIA",728.44,728.44,4)

"INIT")
POST^ECX3112P
"KRN",19,10162,-1)
2^8
"KRN",19,10162,0)
ECX TRANSMISSION^Transmission Management^^M^11721^^^^^^^513
"KRN",19,10162,10,0)
^19.01IP^5^5
"KRN",19,10162,10,5,0)
13580^Q^6
"KRN",19,10162,10,5,"^")
ECXRXHF
"KRN",19,10162,"U")
TRANSMISSION MANAGEMENT
"KRN",19,13455,-1)
2^2
"KRN",19,13455,0)
ECX LAB MAINTENACE^Laboratory^^M^11721^^^^^^^513
"KRN",19,13455,10,0)
^19.01IP^3^3
"KRN",19,13455,10,3,0)
13579^3
"KRN",19,13455,10,3,"^")
ECX LAR LOINC RPT
"KRN",19,13455,"U")
LABORATORY
"KRN",19,13579,-1)
0^1
"KRN",19,13579,0)
ECX LAR LOINC RPT^Lab Results DSS LOINC Code Report^^R^^^^^^^^DSS EXTRACTS^^
"KRN",19,13579,1,0)
^^3^3^3080702^
"KRN",19,13579,1,1,0)
This report lists the DSS LAR Test numbers from the DSS LOINC CODE 
"KRN",19,13579,1,2,0)
(#727.29) and the sites WKLD CODE (#64) file associated laboratory test 
"KRN",19,13579,1,3,0)
names and DSS LOINC codes.
"KRN",19,13579,20)

"KRN",19,13579,25)
EN^ECXLARPT
"KRN",19,13579,"U")
LAB RESULTS DSS LOINC CODE REP
"KRN",19,13580,-1)
0^5
"KRN",19,13580,0)
ECXRXHF^Recreate Extract Holding Files^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13580,1,0)
^^2^2^3080522^
"KRN",19,13580,1,1,0)
These options are to be used when IVP or UDP extract information has 
"KRN",19,13580,1,2,0)
inadvertently been purged.
"KRN",19,13580,10,0)
^19.01IP^2^2
"KRN",19,13580,10,1,0)
13581^I
"KRN",19,13580,10,1,"^")
ECXRX IVP RECREATE
"KRN",19,13580,10,2,0)
13582^U
"KRN",19,13580,10,2,"^")
ECXRX UPD RECREATE
"KRN",19,13580,99)
61138,37947
"KRN",19,13580,"U")
RECREATE EXTRACT HOLDING FILES
"KRN",19,13581,-1)
0^6
"KRN",19,13581,0)
ECXRX IVP RECREATE^Recreate IVP Extract Holding File (#728.113)^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13581,1,0)
^^2^2^3080522^
"KRN",19,13581,1,1,0)
Option will allow users to retrieve IVP extract information inadvertently 
"KRN",19,13581,1,2,0)
purged.
"KRN",19,13581,25)
ENIVP^ECXUDRF
"KRN",19,13581,"U")
RECREATE IVP EXTRACT HOLDING F
"KRN",19,13582,-1)
0^7
"KRN",19,13582,0)
ECXRX UPD RECREATE^Recreate UDP Extract Holding File (#728.904)^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13582,1,0)
^^2^2^3080522^
"KRN",19,13582,1,1,0)
Option will allow users to retrieve UDP extract information inadvertently 
"KRN",19,13582,1,2,0)
purged.
"KRN",19,13582,25)
ENUDP^ECXUDRF
"KRN",19,13582,"U")
RECREATE UDP EXTRACT HOLDING F
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
112^3081104
"PRE")
ECX3112P
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","ECX3112P")
0^^B161599917
"RTN","ECX3112P",1,0)
ECX3112P ;ALB/MRY -Populate DSS LOINC Code file Post-Init Rtn; 04/11/08 ; 5/8/08 9:29am
"RTN","ECX3112P",2,0)
 ;;3.0;DSS EXTRACTS;**112**;Dec 22,1997;Build 26
"RTN","ECX3112P",3,0)
 ;
"RTN","ECX3112P",4,0)
ENV ;Main entry point for Environment check point.
"RTN","ECX3112P",5,0)
 ;
"RTN","ECX3112P",6,0)
 S XPDABORT=""
"RTN","ECX3112P",7,0)
 D PROGCHK(.XPDABORT) ;checks programmer variables
"RTN","ECX3112P",8,0)
 I XPDABORT="" K XPDABORT
"RTN","ECX3112P",9,0)
 Q
"RTN","ECX3112P",10,0)
 ;
"RTN","ECX3112P",11,0)
PROGCHK(XPDABORT) ;checks for necessary programmer variables
"RTN","ECX3112P",12,0)
 ;
"RTN","ECX3112P",13,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","ECX3112P",14,0)
 .D BMES^XPDUTL("*****")
"RTN","ECX3112P",15,0)
 .D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","ECX3112P",16,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","ECX3112P",17,0)
 .D MES^XPDUTL("*****")
"RTN","ECX3112P",18,0)
 .S XPDABORT=2
"RTN","ECX3112P",19,0)
 Q
"RTN","ECX3112P",20,0)
POST ;
"RTN","ECX3112P",21,0)
 D OPTIONS
"RTN","ECX3112P",22,0)
 D SEED
"RTN","ECX3112P",23,0)
 Q
"RTN","ECX3112P",24,0)
 ;
"RTN","ECX3112P",25,0)
OPTIONS ;
"RTN","ECX3112P",26,0)
 ;Disable Link Lab Test options
"RTN","ECX3112P",27,0)
 ;Init variables
"RTN","ECX3112P",28,0)
 N MENU,PTR,SMENU,SPTR,NUM,DA,DIK
"RTN","ECX3112P",29,0)
 F MENU="ECX SETUP LAB","ECXLABRS","ECXLARP" D
"RTN","ECX3112P",30,0)
 .K ECXMSG
"RTN","ECX3112P",31,0)
 .S ECXMSG(1)=" "
"RTN","ECX3112P",32,0)
 .S ECXMSG(2)=$S(MENU="ECX SETUP LAB":"Disabling [ECX SETUP LAB] menu",MENU="ECXLABRS":"Disabling [ECXLABRS] menu",MENU="ECXLARP":"Disabling [ECXLARP] menu",1:"")
"RTN","ECX3112P",33,0)
 .D MES^XPDUTL(.ECXMSG)
"RTN","ECX3112P",34,0)
 .;Order thru option file and find menu and retrieve IEN
"RTN","ECX3112P",35,0)
 .S PTR="",PTR=$O(^DIC(19,"B",MENU,PTR))
"RTN","ECX3112P",36,0)
 .I 'PTR D BMES^XPDUTL("** "_MENU_" item not found, not updated **") Q
"RTN","ECX3112P",37,0)
 .;Disable menu option
"RTN","ECX3112P",38,0)
 .D OUT^XPDMENU(MENU,"MENU OPTION NO LONGER USED")
"RTN","ECX3112P",39,0)
 .D BMES^XPDUTL(MENU_"   **  Menu option disabled  **")
"RTN","ECX3112P",40,0)
 D BMES^XPDUTL("**  Menu updates completed  **")
"RTN","ECX3112P",41,0)
 Q
"RTN","ECX3112P",42,0)
SEED ;
"RTN","ECX3112P",43,0)
 N ECXLINE,ECXSTR,ECXDA,CNT
"RTN","ECX3112P",44,0)
 D MES^XPDUTL(" ")
"RTN","ECX3112P",45,0)
 D MES^XPDUTL(" ")
"RTN","ECX3112P",46,0)
 D MES^XPDUTL(" Adding entries to DSS LOINC CODES File (#727.29)...")
"RTN","ECX3112P",47,0)
 D MES^XPDUTL(" ")
"RTN","ECX3112P",48,0)
 S CNT=0
"RTN","ECX3112P",49,0)
 ;F ECXLINE=1:1 S ECXSTR=$P($T(LOINC+ECXLINE),";;",2) Q:ECXSTR="EXIT"  D
"RTN","ECX3112P",50,0)
 ;. S ECXDA=+$P(ECXSTR,"^")
"RTN","ECX3112P",51,0)
 ;. I '$D(^LAB(95.3,"B",ECXDA)) Q
"RTN","ECX3112P",52,0)
 ;. I '$D(^ECX(727.29,ECXDA,0)) D
"RTN","ECX3112P",53,0)
 ;.. S CNT=CNT+1
"RTN","ECX3112P",54,0)
 ;.. S ECXDN=$P(ECXSTR,"^",2)
"RTN","ECX3112P",55,0)
 ;.. S ECXDTN=$P(ECXSTR,"^",3)
"RTN","ECX3112P",56,0)
 ;.. S ECXDRU=$P(ECXSTR,"^",5)
"RTN","ECX3112P",57,0)
 ;.. S (DINUM,X)=ECXDA,DIC(0)="L",DLAYGO=727.29,DIC="^ECX(727.29,"
"RTN","ECX3112P",58,0)
 ;.. S DIC("DR")=".02///"_ECXDN_";.03///"_ECXDTN_";.04///"_ECXDRU
"RTN","ECX3112P",59,0)
 ;.. K DD,DO D FILE^DICN K DIC,DINUM,DLAYGO,X,Y
"RTN","ECX3112P",60,0)
 N DIC,DIE,DA,DLAYGO,DR,X,Y,ECXLINE,ECXSTR,ECXDN,ECXDTN,ECXLN,ECXDRU
"RTN","ECX3112P",61,0)
 S DIC="^ECX(727.29,",DIC(0)="L",DLAYGO=727.29
"RTN","ECX3112P",62,0)
 F ECXLINE=1:1 S ECXSTR=$P($T(LOINC+ECXLINE),";;",2) Q:ECXSTR="EXIT"  D
"RTN","ECX3112P",63,0)
 . S X=$P(ECXSTR,"^") ;I $$GET1^DIQ(95.3,X,.01,"I")'=X Q
"RTN","ECX3112P",64,0)
 . D ^DIC I Y<0 D  Q
"RTN","ECX3112P",65,0)
 .. D BMES^XPDUTL("*****")
"RTN","ECX3112P",66,0)
 .. D MES^XPDUTL("Unsuccessful entry of LOINC Code - "_X_".")
"RTN","ECX3112P",67,0)
 .. D MES^XPDUTL("******")
"RTN","ECX3112P",68,0)
 . S CNT=CNT+1
"RTN","ECX3112P",69,0)
 . S ECXDN=$P(ECXSTR,"^",2)
"RTN","ECX3112P",70,0)
 . S ECXDTN=$P(ECXSTR,"^",3)
"RTN","ECX3112P",71,0)
 . S ECXLN=$P(ECXSTR,"^",4)
"RTN","ECX3112P",72,0)
 . S ECXDRU=$P(ECXSTR,"^",5)
"RTN","ECX3112P",73,0)
 . S DA=+Y,DR=".02///"_ECXDN_";.03///"_ECXDTN_";.04///"_ECXDRU_";.05///"_ECXLN
"RTN","ECX3112P",74,0)
 . S DIE=DIC D ^DIE
"RTN","ECX3112P",75,0)
 K DA,DIC,DIE,DLAYGO,X,Y
"RTN","ECX3112P",76,0)
 S DIK="^ECX(727.29,",DIK(1)=".02^AC" D ENALL^DIK
"RTN","ECX3112P",77,0)
 K DIK
"RTN","ECX3112P",78,0)
 Q
"RTN","ECX3112P",79,0)
LOINC ;;LOINC #^DSS LAR TEST #^DSS TEST NAME^LOINC NAME^DSS REPORTING UNIT
"RTN","ECX3112P",80,0)
 ;;718-7^0001^Hemoglobin^Hgb Bld-mCnc^G/DL
"RTN","ECX3112P",81,0)
 ;;2823-3^0002^Potassium (Serum)^Potassium SerPl-sCnc^MEQ/L or MMOL/L
"RTN","ECX3112P",82,0)
 ;;2951-2^0003^Sodium (Serum)^Sodium SerPl-sCnc^MEQ/L or MMOL/L
"RTN","ECX3112P",83,0)
 ;;14334-7^0004^Lithium (Serum)^Lithium SerPlas CNC PT^MMOL/L
"RTN","ECX3112P",84,0)
 ;;3719-2^0004^Lithium (Serum)^Lithium SerPl-mCnc^MEQ/L or MMOL/L
"RTN","ECX3112P",85,0)
 ;;3094-0^0005^BUN (Blood Urea Nitrogen)^BUN SerPl-mCnc^MG/DL
"RTN","ECX3112P",86,0)
 ;;26464-8^0006^WBC (Total WBC Count)^WBC # Bld^K/UL or K/MM3
"RTN","ECX3112P",87,0)
 ;;6690-2^0006^WBC (Total WBC Count)^WBC # Bld Auto^K/UL or K/MM3
"RTN","ECX3112P",88,0)
 ;;804-5^0006^WBC (Total WBC Count)^WBC # Bld Manual^K/UL or K/MM3
"RTN","ECX3112P",89,0)
 ;;10535-3^0007^Digoxin^Digoxin SerPl-mCnc^NG/ML
"RTN","ECX3112P",90,0)
 ;;4049-3^0008^Theophylline^Theophylline SerPl-mCnc^UG/ML
"RTN","ECX3112P",91,0)
 ;;1920-8^0009^AST (Aspartate Transferase)^AST SerPl-cCnc^U/L
"RTN","ECX3112P",92,0)
 ;;30239-8^0009^AST (Aspartate Transferase)^AST SerPl w P-5-P-cCnc^U/L
"RTN","ECX3112P",93,0)
 ;;2345-7^0010^Glucose (Serum)^Glucose SerPl-mCnc^MG/DL
"RTN","ECX3112P",94,0)
 ;;2164-2^0011^Creatinine Clearance^CrCl 24H Ur+SerPl-vRate^ML/MIN
"RTN","ECX3112P",95,0)
 ;;2324-2^0013^GGTP (Gamma GT)^GGT SerPl-cCnc^IU/L
"RTN","ECX3112P",96,0)
 ;;3968-5^0014^Dilantin (Phenytoin)^Phenytoin SerPl-mCnc^MCG/ML
"RTN","ECX3112P",97,0)
 ;;4086-5^0015^Valproic Acid^Valproate SerPl-mCnc^MCG/ML
"RTN","ECX3112P",98,0)
 ;;3432-2^0016^Carbamazepine (Tegretol)^Carbamazepine SerPl-mCnc^MCG/ML
"RTN","ECX3112P",99,0)
 ;;17855-8^0017^Hemoglobin A1C  (Glycohemoglobin)^Hgb A1c Fr Bld Calc^%
"RTN","ECX3112P",100,0)
 ;;17856-6^0017^Hemoglobin A1C  (Glycohemoglobin)^Hgb A1c Fr Bld HPLC^%
"RTN","ECX3112P",101,0)
 ;;4548-4^0017^Hemoglobin A1C  (Glycohemoglobin)^Hgb A1c Fr Bld^%
"RTN","ECX3112P",102,0)
 ;;4549-2^0017^Hemoglobin A1C  (Glycohemoglobin)^Hgb A1c Fr Bld Elph^%
"RTN","ECX3112P",103,0)
 ;;1825-9^0018^Alpha 1 Antitrypsin^A1AT SerPl-mCnc^MG/DL
"RTN","ECX3112P",104,0)
 ;;2857-1^0019^PSA (Prostatic Specific AG)^PSA SerPl-mCnc^NG/ML
"RTN","ECX3112P",105,0)
 ;;8127-3^0020^CD-4 (Absolute T Cell Count)^CD4 Cells # Bld^CELLS/MM3, CELLS/UL
"RTN","ECX3112P",106,0)
 ;;5902-2^0021^Prothrombin Time^PT PPP Qn^SEC
"RTN","ECX3112P",107,0)
 ;;5964-2^0021^Prothrombin Time^PT Bld Qn^SEC
"RTN","ECX3112P",108,0)
 ;;3026-2^0022^Total Thyroxine (T-4)^T4 SerPl-mCnc^MCG/DL
"RTN","ECX3112P",109,0)
 ;;3053-6^0023^Total Triiodothyronine (T-3)^T3 SerPl-mCnc^NG/DL
"RTN","ECX3112P",110,0)
 ;;11579-0^0024^Thyroid Stimulating Hormone (TSH)^TSH SerPl DL=0.01 mU/L-aCnc^MCU/ML
"RTN","ECX3112P",111,0)
 ;;11580-8^0024^Thyroid Stimulating Hormone (TSH)^TSH SerPl DL=0.001 mU/L-aCnc^MCU/ML
"RTN","ECX3112P",112,0)
 ;;3016-3^0024^Thyroid Stimulating Hormone (TSH)^TSH SerPl-aCnc^MCU/ML
"RTN","ECX3112P",113,0)
 ;;2284-8^0025^Folic Acid/Folate^Folate SerPl-mCnc^NG/ML
"RTN","ECX3112P",114,0)
 ;;2132-9^0026^Vitamin B12 Level^Vit B12 Ser-mCnc^PG/ML
"RTN","ECX3112P",115,0)
 ;;13457-7^0027^LDLC (both calc and direct)^LDLc SerPl Calc-mCnc^MG/DL
"RTN","ECX3112P",116,0)
 ;;18262-6^0027^LDLC (both calc and direct)^LDLc SerPl Direct Assay-mCnc^MG/DL
"RTN","ECX3112P",117,0)
 ;;2089-1^0027^LDLC (both calc and direct)^LDLc SerPl-mCnc^MG/DL
"RTN","ECX3112P",118,0)
 ;;49132-4^0027^LDLC (both calc and direct)^LDLc SerPl Elph-mCnc^MG/DL
"RTN","ECX3112P",119,0)
 ;;2085-9^0028^HDLC^HDLc SerPl-mCnc^MG/DL
"RTN","ECX3112P",120,0)
 ;;2093-3^0029^Total Cholesterol^Cholest SerPl-mCnc^MG/DL
"RTN","ECX3112P",121,0)
 ;;2571-8^0030^Triglycerides^Trigl SerPl-mCnc^MG/DL
"RTN","ECX3112P",122,0)
 ;;2160-0^0031^Serum Creatinine^Creat SerPl-mCnc^MG/DL
"RTN","ECX3112P",123,0)
 ;;14957-5^0032^Microalbumin (Random Point)^Microalbumin Ur Qn^MG/DL
"RTN","ECX3112P",124,0)
 ;;11218-5^0032^Microalbumin (Random Point)^Microalbumin Ur Qn Test Str^MG/DL
"RTN","ECX3112P",125,0)
 ;;10900-9^0033^Hepatitis B Surface Antibody^HBV surface Ab Ser Ql EIA^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",126,0)
 ;;22322-2^0033^Hepatitis B Surface Antibody^HBV surface Ab Ser Ql^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",127,0)
 ;;39535-0^0033^Hepatitis B Surface Antibody^HBV surface Ab Ser Ql RIA^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",128,0)
 ;;13955-0^0034^Hepatitis C Antibody^HCV Ab Ser Ql EIA^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",129,0)
 ;;16128-1^0034^Hepatitis C Antibody^HCV Ab Ser Ql^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",130,0)
 ;;5199-5^0034^Hepatitis C Antibody^HCV Ab Ser Ql IB^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",131,0)
 ;;44873-8^0035^HIV Antibody^HIV1+2 Ab Ser Ql IB^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",132,0)
 ;;5221-7^0035^HIV Antibody^HIV1 Ab Ser Ql IB^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",133,0)
 ;;5225-8^0035^HIV Antibody^HIV2 Ab Ser Ql IB^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",134,0)
 ;;7917-8^0035^HIV Antibody^HIV1 Ab Ser Ql^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",135,0)
 ;;7918-6^0035^HIV Antibody^HIV1+2 Ab Ser Ql^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",136,0)
 ;;7919-4^0035^HIV Antibody^HIV2 Ab Ser Ql^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",137,0)
 ;;14092-1^0035^HIV Antibody^HIV1 Ab Ser Ql IF^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",138,0)
 ;;30361-0^0035^HIV Antibody^HIV2 Ab Ser Ql EIA^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",139,0)
 ;;31201-7^0035^HIV Antibody^HIV1+2 Ab Ser Ql EIA^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",140,0)
 ;;8129-9^0036^CD4/CD8  Ratio (T Cell Screen)^CD4 Cells/CD8 Cells Bld^%
"RTN","ECX3112P",141,0)
 ;;11011-4^0037^HCV Quantitative by PCR^HCV RNA SerPl PCR-a-Cnc^IU/ML
"RTN","ECX3112P",142,0)
 ;;29609-5^0037^HCV Quantitative by PCR^HCV RNA SerPl bDNA-aCnc^IU/ML
"RTN","ECX3112P",143,0)
 ;;34703-9^0037^HCV Quantitative by PCR^HCV RNA SerPl PCR DL=500-aCnc^IU/ML
"RTN","ECX3112P",144,0)
 ;;34704-7^0037^HCV Quantitative by PCR^HCV RNA SerPl PCR DL=50-aCnc^IU/ML
"RTN","ECX3112P",145,0)
 ;;20447-9^0038^HIV Viral Load^HIV1 RNA # SerPl PCR^COPIES/ML
"RTN","ECX3112P",146,0)
 ;;48511-0^0038^HIV Viral Load^HIV1 RNA # SerPl PCR DL=50^COPIES/ML
"RTN","ECX3112P",147,0)
 ;;48551-6^0038^HIV Viral Load^HIV1 RNA # SerPl PCR DL=400^COPIES/ML
"RTN","ECX3112P",148,0)
 ;;23876-6^0038^HIV Viral Load^HIV1RNA Plas bDNA-aCnc^COPIES/ML
"RTN","ECX3112P",149,0)
 ;;11259-9^0039^HCV Qualitative by PCR^HCV RNA SerPl Ql PCR^NEG-POS
"RTN","ECX3112P",150,0)
 ;;29893-5^0040^HIV 1 by EIA^HIV1 Ab Ser Ql EIA^NEG-POS
"RTN","ECX3112P",151,0)
 ;;5222-5^0040^HIV 1 by EIA^HIV1 Ag Ser Ql EIA^NEG-POS
"RTN","ECX3112P",152,0)
 ;;13951-9^0041^Hepatitis A AB^HAV Ab Ser Ql EIA^NEG-POS
"RTN","ECX3112P",153,0)
 ;;20575-7^0041^Hepatitis A AB^HAV Ab Ser Ql^NEG-POS
"RTN","ECX3112P",154,0)
 ;;13950-1^0042^Hepatitis A IgM AB^HAV IgM Ser Ql EIA^NEG-POS
"RTN","ECX3112P",155,0)
 ;;22314-9^0042^Hepatitis A IgM AB^HAV IgM Ser Ql^NEG-POS
"RTN","ECX3112P",156,0)
 ;;22313-1^0043^Hepatitis A IgG AB^HAV IgG Ser-aCnc^NEG-POS
"RTN","ECX3112P",157,0)
 ;;32018-4^0043^Hepatitis A IgG AB^HAV IgG Ser Ql^NEG-POS
"RTN","ECX3112P",158,0)
 ;;40724-7^0043^Hepatitis A IgG AB^HAV IgG Ser Ql EIA^NEG-POS
"RTN","ECX3112P",159,0)
 ;;1975-2^0044^Bilirubin (Total)^Bilirub SerPl-mCnc^MG/DL
"RTN","ECX3112P",160,0)
 ;;1742-6^0045^ALT (Transferase Alanine Amino)^ALT SerPl-cCnc^IU/L
"RTN","ECX3112P",161,0)
 ;;1743-4^0045^ALT (Transferase Alanine Amino)^ALT SerPl w P-5-P-cCnc^IU/L
"RTN","ECX3112P",162,0)
 ;;1744-2^0045^ALT (Transferase Alanine Amino)^ALT SerPl w/o P-5-P-cCnc^IU/L
"RTN","ECX3112P",163,0)
 ;;13952-7^0046^Hepatitis B Core AB^HBV core Ab Ser Ql EIA^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",164,0)
 ;;16933-4^0046^Hepatitis B Core AB^HBV core Ab Ser Ql^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",165,0)
 ;;13954-3^0047^Hepatitis B e Ag^HBV e Ag Ser Ql EIA^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",166,0)
 ;;31844-4^0047^Hepatitis B e Ag^HBV e Ag Ser Ql^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",167,0)
 ;;5192-0^0047^Hepatitis B e Ag^HBV e Ag Ser Ql RIA^NEG-POS/NON-REAC-REAC
"RTN","ECX3112P",168,0)
 ;;6768-6^0048^Phosphatase Alkaline (Serum)^ALP SerPl-cCnc^IU/L
"RTN","ECX3112P",169,0)
 ;;1751-7^0049^Albumin (Serum)^Albumin SerPl-mCnc^GM/DL
"RTN","ECX3112P",170,0)
 ;;4544-3^0050^Hematocrit^Hct Fr Bld Auto^%
"RTN","ECX3112P",171,0)
 ;;4545-0^0050^Hematocrit^Hct Fr Bld Spun^%
"RTN","ECX3112P",172,0)
 ;;48703-3^0050^Hematocrit^Hct Fr Bld Est^%
"RTN","ECX3112P",173,0)
 ;;3173-2^0051^Partial Thromboplastin Time (PTT)^aPTT Bld Qn^SEC
"RTN","ECX3112P",174,0)
 ;;14979-9^0051^Partial Thromboplastin Time (PTT)^aPTT PPP Qn^SEC
"RTN","ECX3112P",175,0)
 ;;34714-6^0052^INR  (International Normalized Ratio)^INR Bld Qn^RATIO
"RTN","ECX3112P",176,0)
 ;;46418-0^0052^INR  (International Normalized Ratio)^INR BldC Qn^RATIO
"RTN","ECX3112P",177,0)
 ;;6301-6^0052^INR  (International Normalized Ratio)^INR PPP Qn^RATIO
"RTN","ECX3112P",178,0)
 ;;26057-0^0053^Vitamin B6^Vit B6 p PO SerPl-mCnc^NG/ML
"RTN","ECX3112P",179,0)
 ;;2900-9^0053^Vitamin B6^Vit B6 SerPl-mCnc^NG/ML
"RTN","ECX3112P",180,0)
 ;;13965-9^0054^Homocysteine^Homocysteine SerPl-sCnc^UMOL/L
"RTN","ECX3112P",181,0)
 ;;2335-8^0055^Occult Blood, Fecal^Hemocult Stl Ql^NEG-POS
"RTN","ECX3112P",182,0)
 ;;14563-1^0055^Occult Blood, Fecal^Hemocult sp1 Stl Ql^NEG-POS
"RTN","ECX3112P",183,0)
 ;;14564-9^0055^Occult Blood, Fecal^Hemocult sp2 Stl Ql^NEG-POS
"RTN","ECX3112P",184,0)
 ;;14565-6^0055^Occult Blood, Fecal^Hemocult sp3 Stl Ql^NEG-POS
"RTN","ECX3112P",185,0)
 ;;12503-9^0055^Occult Blood, Fecal^Hemocult sp4 Stl Ql^NEG-POS
"RTN","ECX3112P",186,0)
 ;;12504-7^0055^Occult Blood, Fecal^Hemocult sp5 Stl Ql^NEG-POS
"RTN","ECX3112P",187,0)
 ;;27401-9^0055^Occult Blood, Fecal^Hemocult sp6 Stl Ql^NEG-POS
"RTN","ECX3112P",188,0)
 ;;27925-7^0055^Occult Blood, Fecal^Hemocult sp7 Stl Ql^NEG-POS
"RTN","ECX3112P",189,0)
 ;;27926-5^0055^Occult Blood, Fecal^Hemocult sp8 Stl Ql^NEG-POS
"RTN","ECX3112P",190,0)
 ;;14958-3^0056^Microalbumin/Creatinine Ratio^Microalbumin/creat 24H rate Ur^MG/G
"RTN","ECX3112P",191,0)
 ;;14959-1^0056^Microalbumin/Creatinine Ratio^Microalbumin/creat Ur-mRto^MG/G
"RTN","ECX3112P",192,0)
 ;;30000-4^0056^Microalbumin/Creatinine Ratio^Microalbumin/creat Ur-rto^MG/G
"RTN","ECX3112P",193,0)
 ;;30001-2^0056^Microalbumin/Creatinine Ratio^Microalbumin/creat Ur Test Str^MG/G
"RTN","ECX3112P",194,0)
 ;;44292-1^0056^Microalbumin/Creatinine Ratio^Microalbumin/creat 12H Ur-rto^MG/G
"RTN","ECX3112P",195,0)
 ;;41604-0^0057^Glucose POC^Glucose p fast BldC Glucomtr-mCnc^MG/DL
"RTN","ECX3112P",196,0)
 ;;41653-7^0057^Glucose POC^Glucose BldC Glucomtr-mCnc^MG/DL
"RTN","ECX3112P",197,0)
 ;;48425-3^0058^Troponin T^Troponin T Bld-mCnc^NG/ML
"RTN","ECX3112P",198,0)
 ;;6597-9^0058^Troponin T^Troponin T BldV-mCnc^NG/ML
"RTN","ECX3112P",199,0)
 ;;6598-7^0058^Troponin T^Troponin T SerPl-mCnc^NG/ML
"RTN","ECX3112P",200,0)
 ;;10839-9^0059^Troponin I^Troponin I SerPl-mCnc^NG/ML
"RTN","ECX3112P",201,0)
 ;;42757-5^0059^Troponin I^Troponin I Bld-mCnc^NG/ML
"RTN","ECX3112P",202,0)
 ;;14152-3^0060^Bilirubin (Direct)^Bilirub Direct Fld-mCnc^MG/DL
"RTN","ECX3112P",203,0)
 ;;1968-7^0060^Bilirubin (Direct)^Bilirub Direct SerPl-mCnc^MG/DL
"RTN","ECX3112P",204,0)
 ;;1988-5^0061^C Reactive Protein^CRP SerPl-mCnc^MG/L
"RTN","ECX3112P",205,0)
 ;;30522-7^0062^C Reactive Protein HS^CRP SerPl High Sens-mCnc^MG/L
"RTN","ECX3112P",206,0)
 ;;17861-6^0063^Calcium (Serum)^Calcium SerPl-mCnc^MG/DL
"RTN","ECX3112P",207,0)
 ;;2028-9^0064^Carbon Dioxide^CO2 SerPl-sCnc^MEQ/L
"RTN","ECX3112P",208,0)
 ;;2075-0^0065^Chloride (Serum)^Chloride SerPl-sCnc^MEQ/L
"RTN","ECX3112P",209,0)
 ;;33914-3^0066^Creatinine eGFR^Pred GFR SerPl MDRD-vRate^ML/MIN/1.73M2
"RTN","ECX3112P",210,0)
 ;;30934-4^0067^B Natriuretic Peptide^BNP SerPl-mCnc^PG/ML
"RTN","ECX3112P",211,0)
 ;;42637-9^0067^B Natriuretic Peptide^BNP Bld-mCnc^PG/ML
"RTN","ECX3112P",212,0)
 ;;2708-6^0068^O2 Saturation^O2 % BldA^%
"RTN","ECX3112P",213,0)
 ;;2709-4^0068^O2 Saturation^O2 % BldC^%
"RTN","ECX3112P",214,0)
 ;;2710-2^0068^O2 Saturation^O2 % BldC Oximetry^%
"RTN","ECX3112P",215,0)
 ;;2711-0^0068^O2 Saturation^O2 % BldV^%
"RTN","ECX3112P",216,0)
 ;;28642-7^0068^O2 Saturation^O2 Satn Fr BldCoA^%
"RTN","ECX3112P",217,0)
 ;;28643-5^0068^O2 Saturation^O2 Satn Fr BldCoV^%
"RTN","ECX3112P",218,0)
 ;;11556-8^0069^PO2^pO2 Bld Qn^MM HG
"RTN","ECX3112P",219,0)
 ;;2703-7^0069^PO2^pO2 BldA Qn^MM HG
"RTN","ECX3112P",220,0)
 ;;2704-5^0069^PO2^pO2 BldC Qn^MM HG
"RTN","ECX3112P",221,0)
 ;;14864-3^0069^PO2^pO2 BldCo Qn^MM HG
"RTN","ECX3112P",222,0)
 ;;28648-4^0069^PO2^pO2 BldCoA Qn^MM HG
"RTN","ECX3112P",223,0)
 ;;28649-2^0069^PO2^pO2 BldCoV Qn^MM HG
"RTN","ECX3112P",224,0)
 ;;19211-2^0069^PO2^pO2 BldMV Qn^MM HG
"RTN","ECX3112P",225,0)
 ;;2705-2^0069^PO2^pO2 BldV Qn^MM HG
"RTN","ECX3112P",226,0)
 ;;2713-6^0069^PO2^O2 Satn from pO2 Fr Bld^MM HG
"RTN","ECX3112P",227,0)
 ;;19254-2^0069^PO2^pO2 temp adj Bld Qn^MM HG
"RTN","ECX3112P",228,0)
 ;;19255-9^0069^PO2^pO2 temp adj BldA Qn^MM HG
"RTN","ECX3112P",229,0)
 ;;19256-7^0069^PO2^pO2 temp adj BldC Qn^MM HG
"RTN","ECX3112P",230,0)
 ;;47716-6^0069^PO2^pO2 temp adj BldCo Qn^MM HG
"RTN","ECX3112P",231,0)
 ;;19257-5^0069^PO2^pO2 temp adj BldMV Qn^MM HG
"RTN","ECX3112P",232,0)
 ;;19258-3^0069^PO2^pO2 temp adj BldV Qn^MM HG
"RTN","ECX3112P",233,0)
 ;;11557-6^0070^PCO2^pCO2 Bld Qn^MM HG
"RTN","ECX3112P",234,0)
 ;;14003-8^0070^PCO2^pCO2 BldCo Qn^MM HG
"RTN","ECX3112P",235,0)
 ;;19212-0^0070^PCO2^pCO2 BldMV Qn^MM HG
"RTN","ECX3112P",236,0)
 ;;2019-8^0070^PCO2^pCO2 BldA Qn^MM HG
"RTN","ECX3112P",237,0)
 ;;2020-6^0070^PCO2^pCO2 BldC Qn^MM HG
"RTN","ECX3112P",238,0)
 ;;2021-4^0070^PCO2^pCO2 BldV Qn^MM HG
"RTN","ECX3112P",239,0)
 ;;28644-3^0070^PCO2^pCO2 BldCoA Qn^MM HG
"RTN","ECX3112P",240,0)
 ;;28645-0^0070^PCO2^pCO2 BldCoV Qn^MM HG
"RTN","ECX3112P",241,0)
 ;;32771-8^0070^PCO2^pCO2 temp adj BldA Qn^MM HG
"RTN","ECX3112P",242,0)
 ;;34705-4^0070^PCO2^pCO2 temp adj Bld Qn^MM HG
"RTN","ECX3112P",243,0)
 ;;40619-9^0070^PCO2^pCO2 temp adj BldV Qn^MM HG
"RTN","ECX3112P",244,0)
 ;;40620-7^0070^PCO2^pCO2 temp adj BldC Qn^MM HG
"RTN","ECX3112P",245,0)
 ;;47599-6^0070^PCO2^CO2 temp adj BldCo Qn^MM HG
"RTN","ECX3112P",246,0)
 ;;2885-2^0071^Total Protein (Serum)^Prot SerPl-mCnc^GM/DL
"RTN","ECX3112P",247,0)
 ;;2777-1^0072^Phosphate (Serum)^Phosphate Ser-Pl-mCNC^mg/dl
"RTN","ECX3112P",248,0)
 ;;2039-6^0073^CEA (Serum)^CEA SerPl-mCnc^ug/L
"RTN","ECX3112P",249,0)
 ;;33762-6^0074^Pro B Natriuretic Peptide^proBNP SerPl-mCnc^PG/ML
"RTN","ECX3112P",250,0)
 ;;48641-5^0075^Phosphate (Serum)-pre Dial^Phosphate pre dialSer-Pl-mCNC^mg/dl
"RTN","ECX3112P",251,0)
 ;;48617-5^0076^Phosphate (Serum)-post Dial^Phosphate p dialSer-Pl-mCNC^mg/dl
"RTN","ECX3112P",252,0)
 ;;EXIT
"RTN","ECXALAR")
0^26^B16671173
"RTN","ECXALAR",1,0)
ECXALAR ;ALB/TMD-LAR Extract Report of Untranslatable Results ; 9/17/02 6:17pm
"RTN","ECXALAR",2,0)
 ;;3.0;DSS EXTRACTS;**46,51,112**;Dec 22, 1997;Build 26
"RTN","ECXALAR",3,0)
 ;
"RTN","ECXALAR",4,0)
EN ; entry point
"RTN","ECXALAR",5,0)
 N X,Y,DATE,ECRUN,ECXOPT,ECXDESC,ECXSAVE,ECXTL,ECTHLD,ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,PG
"RTN","ECXALAR",6,0)
 S QFLG=0,ECXTL="LAR"
"RTN","ECXALAR",7,0)
 ; get today's date
"RTN","ECXALAR",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXALAR",9,0)
 D SETUP^ECXLABR I ECFILE="" Q
"RTN","ECXALAR",10,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXALAR",11,0)
 I $P($G(^ECX(728,1,ECNODE+.1)),U,ECPIECE)]"" D  Q
"RTN","ECXALAR",12,0)
 .W !!,$C(7),ECPACK," extract is already scheduled to run.  Try later",!!
"RTN","ECXALAR",13,0)
 D BEGIN Q:QFLG
"RTN","ECXALAR",14,0)
 S ECXDESC=ECXTL_" Extract Report of Untranslatable Results"
"RTN","ECXALAR",15,0)
 S ECXSAVE("EC*")=""
"RTN","ECXALAR",16,0)
 D EN^XUTMDEVQ("PROCESS^ECXALAR",ECXDESC,.ECXSAVE)
"RTN","ECXALAR",17,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXALAR",18,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXALAR",19,0)
 D HOME^%ZIS
"RTN","ECXALAR",20,0)
 D AUDIT^ECXKILL
"RTN","ECXALAR",21,0)
 Q
"RTN","ECXALAR",22,0)
 ;
"RTN","ECXALAR",23,0)
BEGIN ; display report description
"RTN","ECXALAR",24,0)
 W @IOF,!,"This report prints a listing of results that are not translatable i.e. have",!,"no entry in the Lab Results Translation File (#727.7)."
"RTN","ECXALAR",25,0)
 W !!,"This report is a pre-extract type audit report and should be run prior to the",!,"generation of the actual extract.  Running this report has no effect on the",!,"actual extract."
"RTN","ECXALAR",26,0)
 W !!,"Enter the date range for which you would like to scan the ",ECXTL," Extract records.",!
"RTN","ECXALAR",27,0)
 S DONE=0 F  S (ECED,ECSD)="" D  Q:QFLG!DONE
"RTN","ECXALAR",28,0)
 .K %DT S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXALAR",29,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXALAR",30,0)
 .S ECSD=Y,ECSD1=ECSD-.1
"RTN","ECXALAR",31,0)
 .D DD^%DT S ECSTART=Y
"RTN","ECXALAR",32,0)
 .K %DT S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)=-DATE D ^%DT
"RTN","ECXALAR",33,0)
 .I Y<0 S QFLG=1 Q
"RTN","ECXALAR",34,0)
 .I Y<ECSD D  Q
"RTN","ECXALAR",35,0)
 ..W !!,"The ending date cannot be earlier than the starting date."
"RTN","ECXALAR",36,0)
 ..W !,"Please try again.",!!
"RTN","ECXALAR",37,0)
 .I $E(Y,1,5)'=$E(ECSD,1,5) D  Q
"RTN","ECXALAR",38,0)
 ..W !!,"Beginning and ending dates must be in the same month and year."
"RTN","ECXALAR",39,0)
 ..W !,"Please try again.",!!
"RTN","ECXALAR",40,0)
 .S ECED=Y
"RTN","ECXALAR",41,0)
 .D DD^%DT S ECEND=Y
"RTN","ECXALAR",42,0)
 .S DONE=1
"RTN","ECXALAR",43,0)
 Q
"RTN","ECXALAR",44,0)
 ;
"RTN","ECXALAR",45,0)
PROCESS ; entry point for queued report
"RTN","ECXALAR",46,0)
 S ZTREQ="@"
"RTN","ECXALAR",47,0)
 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="R"
"RTN","ECXALAR",48,0)
 S ECXERR=0 D EN^ECXALAR2 S $P(^ECX(728,1,ECNODE+.1),U,ECPIECE)="" Q:ECXERR
"RTN","ECXALAR",49,0)
 S QFLG=0 D PRINT
"RTN","ECXALAR",50,0)
 Q
"RTN","ECXALAR",51,0)
 ;
"RTN","ECXALAR",52,0)
PRINT ; process temp file and print report
"RTN","ECXALAR",53,0)
 N X,CNT,LN,REC,ECXDFN,ECXSSN,ECXPNM,ECRS,ECTC,ECFMDT,ECDTM,ECXTNM
"RTN","ECXALAR",54,0)
 U IO
"RTN","ECXALAR",55,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXALAR",56,0)
 S (PG,QFLG,GTOT)=0,$P(LN,"-",80)=""
"RTN","ECXALAR",57,0)
 D HEADER Q:QFLG
"RTN","ECXALAR",58,0)
 S COUNT=0,CNT="" F  S CNT=$O(^TMP($J,"ECXALAR2",CNT)) Q:CNT=""!QFLG  S REC=^(CNT) D
"RTN","ECXALAR",59,0)
 .S ECXDFN=$P(REC,U),ECTC=$P(REC,U,4),ECRS=$P(REC,U,5)
"RTN","ECXALAR",60,0)
 .S ECFMDT=$P(REC,U,2)_"."_$P(REC,U,3),ECDTM=$$FMTE^XLFDT(ECFMDT,2)
"RTN","ECXALAR",61,0)
 .S (ECXPNM,ECXSSN)=""
"RTN","ECXALAR",62,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,,"1;",.ECXPAT)
"RTN","ECXALAR",63,0)
 .I OK S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN")
"RTN","ECXALAR",64,0)
 .S ECXTNM=$O(^ECX(727.29,"AC",+$G(ECTC),0)),ECXTNM=$P(^ECX(727.29,+$G(ECXTNM),0),U,3)
"RTN","ECXALAR",65,0)
 .I $Y+3>IOSL D HEADER
"RTN","ECXALAR",66,0)
 .W !,ECXPNM,?6,ECXSSN,?17,ECDTM,?34,ECTC,?40,$E(ECXTNM,1,22),?64,$E(ECRS,1,17)
"RTN","ECXALAR",67,0)
 .S COUNT=COUNT+1
"RTN","ECXALAR",68,0)
 Q:QFLG
"RTN","ECXALAR",69,0)
 I COUNT=0 W !!,?8,"No untranslatable results for this extract"
"RTN","ECXALAR",70,0)
CLOSE ;
"RTN","ECXALAR",71,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXALAR",72,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAR",73,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXALAR",74,0)
 Q
"RTN","ECXALAR",75,0)
 ;
"RTN","ECXALAR",76,0)
HEADER ;header and page control
"RTN","ECXALAR",77,0)
 N SS,JJ
"RTN","ECXALAR",78,0)
 I $E(IOST)="C" D
"RTN","ECXALAR",79,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXALAR",80,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXALAR",81,0)
 Q:QFLG
"RTN","ECXALAR",82,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXALAR",83,0)
 W !,ECXTL_" Extract Untranslatable Results Audit Report",?71,"Page: "_PG
"RTN","ECXALAR",84,0)
 W !,"Start Date: ",ECSTART
"RTN","ECXALAR",85,0)
 W !,"End Date:   ",ECEND,?49,"Report Run Date:  "_ECRUN
"RTN","ECXALAR",86,0)
 W !!,"Pat.",?6,"SSN",?17,"Date/Time",?34,"Test",?40,"Test Name",?64,"Result"
"RTN","ECXALAR",87,0)
 W !,"Name",?17,"Collected",?34,"Code"
"RTN","ECXALAR",88,0)
 W !,LN,!
"RTN","ECXALAR",89,0)
 Q
"RTN","ECXALAR",90,0)
 ;
"RTN","ECXALAR2")
0^27^B7555415
"RTN","ECXALAR2",1,0)
ECXALAR2 ;ALB/TMD-LAR Extract Report of Untranslatable Results ; 8/9/06 9:45am
"RTN","ECXALAR2",2,0)
 ;;3.0;DSS EXTRACTS;**46,51,112**;Dec 22, 1997;Build 26
"RTN","ECXALAR2",3,0)
 ;
"RTN","ECXALAR2",4,0)
EN ; entry point
"RTN","ECXALAR2",5,0)
 N COUNT
"RTN","ECXALAR2",6,0)
 K ^TMP($J)
"RTN","ECXALAR2",7,0)
 S COUNT=0
"RTN","ECXALAR2",8,0)
 S ECSD=ECSD1,ECED=ECED+.3
"RTN","ECXALAR2",9,0)
 D PROCESS
"RTN","ECXALAR2",10,0)
 Q
"RTN","ECXALAR2",11,0)
 ;
"RTN","ECXALAR2",12,0)
PROCESS ;
"RTN","ECXALAR2",13,0)
 N QFLG,ECDTST,ECLTST,ECWCDA,ECWC,ECLOC,ECLRN,ECRES,EC2,ECN,ECRS,ECTRS,ECTRANS,ECTRIEN,ECSCDT,ECSCTM,ECXDFN
"RTN","ECXALAR2",14,0)
 K ^LAR(64.036) S LRSDT=$P(ECSD,"."),LREDT=$P(ECED,".")
"RTN","ECXALAR2",15,0)
 D ^LRCAPDAR
"RTN","ECXALAR2",16,0)
 ;quit if no completion date for API compile
"RTN","ECXALAR2",17,0)
 ;I '$P($G(^LAR(64.036,1,2,1,0)),U,4) S ECXERR=1 Q
"RTN","ECXALAR2",18,0)
 ;build local array of workload codes from DSS LOINC codes
"RTN","ECXALAR2",19,0)
 N ECLOINC,ECA K ECLOC,ECA S ECLOINC=0
"RTN","ECXALAR2",20,0)
 S ECA("ALL")="" D LOINC^ECXUTL6(.ECA) ;builds ^tmp
"RTN","ECXALAR2",21,0)
 F  S ECLOINC=$O(^TMP($J,"ECXUTL6",ECLOINC)) Q:(ECLOINC="")  D
"RTN","ECXALAR2",22,0)
 . S ECWCDA=0 F  S ECWCDA=$O(^TMP($J,"ECXUTL6",ECLOINC,ECWCDA)) Q:('ECWCDA)  D
"RTN","ECXALAR2",23,0)
 .. I ECWCDA S ECWC=$P(^LAM(ECWCDA,0),U,2),ECLOC(ECWCDA)=ECWC
"RTN","ECXALAR2",24,0)
 K ECLOINC,ECA
"RTN","ECXALAR2",25,0)
 ;process temporary lab file #64.036
"RTN","ECXALAR2",26,0)
 S QFLG=0,ECLRN=1
"RTN","ECXALAR2",27,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)!(ECXERR)  D
"RTN","ECXALAR2",28,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXALAR2",29,0)
 ..S EC1=^LAR(64.036,ECLRN,0)
"RTN","ECXALAR2",30,0)
 ..Q:$P(EC1,U,2)=""
"RTN","ECXALAR2",31,0)
 ..S ECXDFN=$P(EC1,U,3)
"RTN","ECXALAR2",32,0)
 ..S ECSCDT=$P(EC1,U,9),ECSCTM=$P(EC1,U,10)
"RTN","ECXALAR2",33,0)
 ..;loop on results multiple
"RTN","ECXALAR2",34,0)
 ..S ECRES=0
"RTN","ECXALAR2",35,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)!(ECXERR)  D
"RTN","ECXALAR2",36,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXALAR2",37,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0)
"RTN","ECXALAR2",38,0)
 ....S ECN=$P(EC2,U),ECRS=$P(EC2,U,2),ECWC=+$P(EC2,U,4)
"RTN","ECXALAR2",39,0)
 ....S ECWC=$S($D(ECLOC(ECWC)):ECLOC(ECWC),1:"")
"RTN","ECXALAR2",40,0)
 ....; - Free text results translation
"RTN","ECXALAR2",41,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXALAR2",42,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXALAR2",43,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXALAR2",44,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXALAR2",45,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXALAR2",46,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXALAR2",47,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXALAR2",48,0)
 .....I ("<>"[$E(ECTRS))!($E(ECTRS,1,2)="GT")!($E(ECTRS,1,2)="LT") Q
"RTN","ECXALAR2",49,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXALAR2",50,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:"5~")
"RTN","ECXALAR2",51,0)
 ...I ECTRANS="5~" I ECWC]"" D FILE
"RTN","ECXALAR2",52,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXALAR2",53,0)
 Q
"RTN","ECXALAR2",54,0)
 ;
"RTN","ECXALAR2",55,0)
FILE ; put records in temp file to print later
"RTN","ECXALAR2",56,0)
 S COUNT=COUNT+1
"RTN","ECXALAR2",57,0)
 S ^TMP($J,"ECXALAR2",COUNT)=ECXDFN_U_ECSCDT_U_ECSCTM_U_ECN_U_ECRS
"RTN","ECXALAR2",58,0)
 Q
"RTN","ECXKILL")
0^11^B6822218
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ; 5/7/08 12:21pm
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31,39,49,84,89,105,112**;Dec 22, 1997;Build 26
"RTN","ECXKILL",3,0)
 ;
"RTN","ECXKILL",4,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6
"RTN","ECXKILL",5,0)
 K DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",6,0)
 K ECDAPRNP,ECDPRNPI,ECISNPI,ECDOCNPI
"RTN","ECXKILL",7,0)
 K ECU1NPI,ECU2NPI,ECU3NPI
"RTN","ECXKILL",8,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE
"RTN","ECXKILL",9,0)
 K EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",10,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN
"RTN","ECXKILL",11,0)
 K ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT
"RTN","ECXKILL",12,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF
"RTN","ECXKILL",13,0)
 K ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",14,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK
"RTN","ECXKILL",15,0)
 K ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN
"RTN","ECXKILL",16,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST
"RTN","ECXKILL",17,0)
 K ECLL,ECLN,ECLNC,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN
"RTN","ECXKILL",18,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN
"RTN","ECXKILL",19,0)
 K ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO
"RTN","ECXKILL",20,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECOB,ECODE,ECODE0,ECODE1,ECODE2,ECOLD,ECONE,ECOPAY
"RTN","ECXKILL",21,0)
 K ECATTNPI,ECPWNPI,ECXUSNPI,ECPWNPI,ECXOEF,ECXOEFDT,ECPLACE
"RTN","ECXKILL",22,0)
 K ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4
"RTN","ECXKILL",23,0)
 K ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO,ECODE2
"RTN","ECXKILL",24,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF
"RTN","ECXKILL",25,0)
 K ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC
"RTN","ECXKILL",26,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1
"RTN","ECXKILL",27,0)
 K ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY,ECXLOGIC,ECXDATES,ECXEST,ECXECE
"RTN","ECXKILL",28,0)
 D ^ECXKILL1
"RTN","ECXKILL",29,0)
 ;
"RTN","ECXKILL",30,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",31,0)
 K %DT,ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV
"RTN","ECXKILL",32,0)
 K ECXRCST,ECXRQST,ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC
"RTN","ECXKILL",33,0)
 K ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",34,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS
"RTN","ECXKILL",35,0)
 K ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",36,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",37,0)
 K ^TMP($J)
"RTN","ECXKILL",38,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",39,0)
 Q
"RTN","ECXLABN")
0^10^B38906559
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; 6/30/08 1:13pm
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92,107,105,112**;Dec 22, 1997;Build 26
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2)
"RTN","ECXLABN",25,0)
 .S ECDOCNPI=$$NPI^XUSNPI("Individual_ID",$P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .S:+ECDOCNPI'>0 ECDOCNPI="" S ECDOCNPI=$P(ECDOCNPI,U)
"RTN","ECXLABN",27,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",28,0)
 .I EC]"" D GET
"RTN","ECXLABN",29,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",30,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",31,0)
 Q
"RTN","ECXLABN",32,0)
 ;
"RTN","ECXLABN",33,0)
GET ;get data
"RTN","ECXLABN",34,0)
 N X,ECXSTN,QFLAG
"RTN","ECXLABN",35,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",36,0)
 S ECIFN=$P(EC,";"),QFLAG=0
"RTN","ECXLABN",37,0)
 ;resolve ecloc
"RTN","ECXLABN",38,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",39,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",40,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",41,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",42,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",43,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",44,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",45,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",46,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",47,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",48,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",49,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",50,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR)
"RTN","ECXLABN",51,0)
 Q:ECXERR
"RTN","ECXLABN",52,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",53,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D  Q:QFLAG
"RTN","ECXLABN",54,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",55,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",56,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",57,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",59,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",60,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",61,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",62,0)
 ..I '$$SSN^ECXUTL5(ECSN,ECF) S QFLAG=1
"RTN","ECXLABN",63,0)
 ;
"RTN","ECXLABN",64,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",65,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",66,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",67,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",68,0)
 ;
"RTN","ECXLABN",69,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",70,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",71,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",72,0)
 ;
"RTN","ECXLABN",73,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",74,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",75,0)
 K ECXDIEN
"RTN","ECXLABN",76,0)
 ;
"RTN","ECXLABN",77,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",78,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",79,0)
 ;
"RTN","ECXLABN",80,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",81,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",82,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",83,0)
 S ECXLNC=""
"RTN","ECXLABN",84,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",85,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",86,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",87,0)
 .;--getting LOINC Code
"RTN","ECXLABN",88,0)
 .S ECXLNC=""
"RTN","ECXLABN",89,0)
 .S ECWKLD=$P($G(EC1),U,11)
"RTN","ECXLABN",90,0)
 .S ECSP=$P($G(EC1),U,17),ECLRID=0
"RTN","ECXLABN",91,0)
 .;--getting lab patient id
"RTN","ECXLABN",92,0)
 .S LRIFN=+$P(EC1,U,3)
"RTN","ECXLABN",93,0)
 .I ECF=2 S:$D(^DPT(LRIFN,"LR")) ECLRID=^DPT(LRIFN,"LR")
"RTN","ECXLABN",94,0)
 .I ECF=67 S:$D(^LRT(67,LRIFN,"LR")) ECLRID=^LRT(67,LRIFN,"LR")
"RTN","ECXLABN",95,0)
 .; using ECINST=institution, LRIFN=lab file patient id, EC=test (pt 60), LRIDT=date and time to get loinc
"RTN","ECXLABN",96,0)
 .S LRIDT=$P(EC1,U,12)
"RTN","ECXLABN",97,0)
 .;--looking up test to find subscript to lookup value
"RTN","ECXLABN",98,0)
 .D
"RTN","ECXLABN",99,0)
 ..N ECTST S ECTST=$P(EC1,U,8)
"RTN","ECXLABN",100,0)
 ..S ECPT=$S($D(^LAB(60,ECTST,0)):$P(^LAB(60,ECTST,0),U,12),1:""),ECPT=$P(ECPT,",",2)
"RTN","ECXLABN",101,0)
 ..Q:$G(ECPT)']""  Q:'$D(^LR(ECLRID,"CH",LRIDT,ECPT))
"RTN","ECXLABN",102,0)
 ..S ECRSLT=^LR(ECLRID,"CH",LRIDT,ECPT),ECXLNC=$P($G(ECRSLT),"!",3)
"RTN","ECXLABN",103,0)
 ..Q:$G(ECXLNC)']""
"RTN","ECXLABN",104,0)
 ..S ECXLNC=$$GET1^DIQ(95.3,ECXLNC,.01)
"RTN","ECXLABN",105,0)
 .D FILE
"RTN","ECXLABN",106,0)
 Q
"RTN","ECXLABN",107,0)
 ;
"RTN","ECXLABN",108,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",109,0)
 N X,OK,PT
"RTN","ECXLABN",110,0)
 ;get data
"RTN","ECXLABN",111,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",112,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",113,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4)
"RTN","ECXLABN",114,0)
 ;set data and save for later
"RTN","ECXLABN",115,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",116,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3",.ECXPAT)
"RTN","ECXLABN",117,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",118,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",119,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",120,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI
"RTN","ECXLABN",121,0)
 ;get date specific data
"RTN","ECXLABN",122,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",123,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",124,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",125,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",126,0)
 Q
"RTN","ECXLABN",127,0)
 ;
"RTN","ECXLABN",128,0)
FILE ;file record
"RTN","ECXLABN",129,0)
 ;node0
"RTN","ECXLABN",130,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",131,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",132,0)
 ;location^provider and file^
"RTN","ECXLABN",133,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",134,0)
 ;primary care provider
"RTN","ECXLABN",135,0)
 ;node1
"RTN","ECXLABN",136,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",137,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",138,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",139,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",140,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",141,0)
 ;(FEMA) ECXERI^associate pc provider npi ECASNPI^primary care provider
"RTN","ECXLABN",142,0)
 ;npi ECPTNPI^provider npi ECDOCNPI^LOINC code ECLNC
"RTN","ECXLABN",143,0)
 ;ECDOCPC
"RTN","ECXLABN",144,0)
 N DA,DIK
"RTN","ECXLABN",145,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",146,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",147,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",148,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABN",149,0)
 N ECXDATA
"RTN","ECXLABN",150,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECTREAT,.ECXDATA)
"RTN","ECXLABN",151,0)
 S ECTREAT=$G(ECXDATA(7))
"RTN","ECXLABN",152,0)
 ;done
"RTN","ECXLABN",153,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",154,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",155,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",156,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_ECCLAS_U_ECASPR_U
"RTN","ECXLABN",157,0)
 S ECODE1=ECODE1_ECCLAS2_U_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",158,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",159,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",160,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",161,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECASNPI_U_ECPTNPI_U_ECDOCNPI
"RTN","ECXLABN",162,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_$G(ECXLNC)
"RTN","ECXLABN",163,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",164,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",165,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",166,0)
 Q
"RTN","ECXLABN",167,0)
 ;
"RTN","ECXLABN",168,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",169,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",170,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",171,0)
 Q
"RTN","ECXLABN",172,0)
 ;
"RTN","ECXLABN",173,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",174,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABR")
0^9^B20056057
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ; 5/7/08 10:19am
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80,107,105,112**;Dec 22, 1997;Build 26
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",15,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",16,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",17,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",18,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",19,0)
 ..Q:ECF=""
"RTN","ECXLABR",20,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",21,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",22,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",23,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",24,0)
 ..I ECPTPR S ECPTNPI=$$NPI^XUSNPI("Individual_ID",ECPTPR,+ECXDATE) D
"RTN","ECXLABR",25,0)
 ...S:+ECPTNPI'>0 ECPTNPI="" S ECPTNPI=$P(ECPTNPI,U)
"RTN","ECXLABR",26,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",27,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",28,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",29,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",30,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",31,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",32,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",33,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",34,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;",.ECXPAT)
"RTN","ECXLABR",35,0)
 ...Q:'OK
"RTN","ECXLABR",36,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",37,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4)
"RTN","ECXLABR",38,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",39,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",40,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",41,0)
 ..;loop on results multiple
"RTN","ECXLABR",42,0)
 ..;
"RTN","ECXLABR",43,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",44,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",45,0)
 ..K ECXDIEN
"RTN","ECXLABR",46,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",47,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",48,0)
 ..;
"RTN","ECXLABR",49,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",50,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",51,0)
 ..S ECRES=0
"RTN","ECXLABR",52,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",53,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",54,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",55,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",56,0)
 ....I ECWC S ECWC=$P(^LAM(ECWC,0),U,2)
"RTN","ECXLABR",57,0)
 ....S ECLNC=$P(EC2,U,5)
"RTN","ECXLABR",58,0)
 ....;
"RTN","ECXLABR",59,0)
 ....; - Free text results translation
"RTN","ECXLABR",60,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",61,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",62,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",63,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",64,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",65,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",66,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",67,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",68,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",69,0)
 ....;
"RTN","ECXLABR",70,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",71,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",72,0)
 Q
"RTN","ECXLABR",73,0)
 ;
"RTN","ECXLABR",74,0)
FILE ;file record
"RTN","ECXLABR",75,0)
 ;node0
"RTN","ECXLABR",76,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",77,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",78,0)
 ;lab test code (ECN)^results (ECRS)^hi/lo indicator (ECHL)^
"RTN","ECXLABR",79,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",80,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",81,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",82,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",83,0)
 ;node1
"RTN","ECXLABR",84,0)
 ;mpi (ECXMPI)^dss dept (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",85,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",86,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",87,0)
 ;ordering provider person class (ECCLASS)^ordering provider npi ECPTNPI^LOINC code ECLNC
"RTN","ECXLABR",88,0)
 N DA,DIK
"RTN","ECXLABR",89,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",90,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",91,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U
"RTN","ECXLABR",92,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",93,0)
 ;convert specialty to PTF Code for transmission
"RTN","ECXLABR",94,0)
 N ECXDATA
"RTN","ECXLABR",95,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXTS,.ECXDATA)
"RTN","ECXLABR",96,0)
 S ECXTS=$G(ECXDATA(7))
"RTN","ECXLABR",97,0)
 ;done
"RTN","ECXLABR",98,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTS_U_ECWC_U
"RTN","ECXLABR",99,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",100,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",101,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECPTNPI
"RTN","ECXLABR",102,0)
 I ECXLOGIC>2008 S ECODE1=ECODE1_U_ECLNC
"RTN","ECXLABR",103,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",104,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",105,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",106,0)
 Q
"RTN","ECXLABR",107,0)
 ;
"RTN","ECXLABR",108,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",109,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",110,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",111,0)
 Q
"RTN","ECXLABR",112,0)
 ;
"RTN","ECXLABR",113,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",114,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLARA")
0^20^B27412499
"RTN","ECXLARA",1,0)
ECXLARA ;ALB/JRC - LAR Extract Audit Report ; 9/24/08 3:35pm
"RTN","ECXLARA",2,0)
 ;;3.0;DSS EXTRACTS;**105,112**;Dec 22, 1997;Build 26
"RTN","ECXLARA",3,0)
 Q
"RTN","ECXLARA",4,0)
EN ;entry point for NUT extract audit report
"RTN","ECXLARA",5,0)
 N %X,%Y,X,Y,DIC,DA,DR,DIQ,DIR,DIRUT,DTOUT,DUOUT,SCRNARR,REPORT
"RTN","ECXLARA",6,0)
 N SCRNARR,ECXERR,ECXHEAD,ECXAUD,ECXARRAY,STATUS,FLAG,ECXALL,TMP
"RTN","ECXLARA",7,0)
 N ZTQUEUED,ZTSTOP
"RTN","ECXLARA",8,0)
 S SCRNARR="^TMP(""ECX"",$J,""SCRNARR"")"
"RTN","ECXLARA",9,0)
 K @SCRNARR@("DIVISION")
"RTN","ECXLARA",10,0)
 S (ECXERR,FLAG)=0
"RTN","ECXLARA",11,0)
 ;ecxaud=0 for 'extract' audit
"RTN","ECXLARA",12,0)
 S ECXHEAD="LAR",ECXAUD=0
"RTN","ECXLARA",13,0)
 W !!,"Setup for ",ECXHEAD," Extract Audit Report --",!!
"RTN","ECXLARA",14,0)
 ;select extract
"RTN","ECXLARA",15,0)
 D AUDIT^ECXUTLA(ECXHEAD,.ECXERR,.ECXARRAY,ECXAUD)
"RTN","ECXLARA",16,0)
 Q:ECXERR
"RTN","ECXLARA",17,0)
 W !!
"RTN","ECXLARA",18,0)
 ;select divisions/sites; all divisions if ecxall=1
"RTN","ECXLARA",19,0)
 S ECXERR=$$NUT^ECXDVSN()
"RTN","ECXLARA",20,0)
 I ECXERR=1 D  Q
"RTN","ECXLARA",21,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLARA",22,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLARA",23,0)
 .D AUDIT^ECXKILL
"RTN","ECXLARA",24,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXLARA",25,0)
 W !
"RTN","ECXLARA",26,0)
 ;determine output device and queue if requested
"RTN","ECXLARA",27,0)
 S ECXPGM="PROCESS^ECXLARA",ECXDESC="LAR Extract Audit Report"
"RTN","ECXLARA",28,0)
 S ECXSAVE("ECXHEAD")="",ECXSAVE("ECXALL")="",ECXSAVE("STATUS")="",ECXSAVE("REPORT")="",ECXSAVE("FLAG")="",ECXSAVE("ECXDIV(")="",ECXSAVE("ECXARRAY(")="",ECXSAVE("SCRNARR")="",TMP=$$OREF^DILF(SCRNARR),ECXSAVE(TMP)=""
"RTN","ECXLARA",29,0)
 W !
"RTN","ECXLARA",30,0)
 D DEVICE^ECXUTLA(ECXPGM,ECXDESC,.ECXSAVE)
"RTN","ECXLARA",31,0)
 I ECXSAVE("POP")=1 D  Q
"RTN","ECXLARA",32,0)
 .W !!,?5,"Try again later... exiting.",!
"RTN","ECXLARA",33,0)
 .K @SCRNARR@("DIVISION")
"RTN","ECXLARA",34,0)
 .D AUDIT^ECXKILL
"RTN","ECXLARA",35,0)
 I ECXSAVE("ZTSK")=0 D
"RTN","ECXLARA",36,0)
 .K ECXSAVE,ECXPGM,ECXDESC
"RTN","ECXLARA",37,0)
 .D PROCESS^ECXLARA
"RTN","ECXLARA",38,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLARA",39,0)
 D HOME^%ZIS
"RTN","ECXLARA",40,0)
 D AUDIT^ECXKILL
"RTN","ECXLARA",41,0)
 Q
"RTN","ECXLARA",42,0)
 ;
"RTN","ECXLARA",43,0)
PROCESS ;process data in file #727.824 and store in ^tmp global
"RTN","ECXLARA",44,0)
 N %,ARRAY,ECXEXT,ECXDEF,X,ECXSTART,ECXEND,ECXRUN,IEN,FLAG,NODE0,NODE1,DATE,DIV,TEST,I,MIN,MAX,RESULT
"RTN","ECXLARA",45,0)
 S ARRAY="^TMP($J,""ECXORDER"")",FLAG=0
"RTN","ECXLARA",46,0)
 S ECXEXT=ECXARRAY("EXTRACT"),ECXDEF=ECXARRAY("DEF")
"RTN","ECXLARA",47,0)
 S X=ECXARRAY("START") D ^%DT S ECXSTART=Y S X=ECXARRAY("END") D ^%DT S ECXEND=Y
"RTN","ECXLARA",48,0)
 ;get run date in external format
"RTN","ECXLARA",49,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S ECXRUN=Y
"RTN","ECXLARA",50,0)
 ;get records in date range and set values
"RTN","ECXLARA",51,0)
 S IEN=0 F  S IEN=$O(^ECX(727.824,"AC",ECXEXT,IEN)) Q:IEN=""  D  Q:FLAG
"RTN","ECXLARA",52,0)
 .S NODE0=$G(^ECX(727.824,IEN,0)),NODE1=$D(^(1))
"RTN","ECXLARA",53,0)
 .S DIV=$P(NODE0,U,4),DATE=$P(NODE0,U,9),TEST=$P(NODE0,U,10),RESULT=$P(NODE0,U,11)
"RTN","ECXLARA",54,0)
 .;filter out divisions if not all selected
"RTN","ECXLARA",55,0)
 .Q:$G(@SCRNARR@("DIVISION"))'=1&'$D(@SCRNARR@("DIVISION",+$G(DIV)))
"RTN","ECXLARA",56,0)
 .;convert free text date to fm internal format date
"RTN","ECXLARA",57,0)
 .S $E(DATE,1,2)=$E(DATE,1,2)-17
"RTN","ECXLARA",58,0)
 .;check for unknowns so that they won't be lost
"RTN","ECXLARA",59,0)
 .F I="DIV","TEST","DATE" I @I="" S @I="UNKNOWN"
"RTN","ECXLARA",60,0)
 .;increment div/test count, check min/max save in ^tmp global
"RTN","ECXLARA",61,0)
 .S $P(^TMP($J,"ECXDSS",DIV,TEST),U)=$P($G(^TMP($J,"ECXDSS",DIV,TEST)),U)+1
"RTN","ECXLARA",62,0)
 .S MIN=$P(^TMP($J,"ECXDSS",DIV,TEST),U,2)
"RTN","ECXLARA",63,0)
 .S MAX=$P(^TMP($J,"ECXDSS",DIV,TEST),U,3)
"RTN","ECXLARA",64,0)
 .;S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(MIN']"":RESULT,RESULT<MIN:RESULT,1:MIN),$P(^(TEST),U,3)=$S(RESULT>MAX:RESULT,1:MAX)
"RTN","ECXLARA",65,0)
 .;S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(RESULT["NEG":"NEG",+RESULT<+MIN:RESULT,1:""),$P(^(TEST),U,3)=$S(RESULT["POS":"POS",RESULT>MAX:RESULT,1:"")
"RTN","ECXLARA",66,0)
 .S $P(^TMP($J,"ECXDSS",DIV,TEST),U,2)=$S(RESULT["NEG":"NEG",MIN']"":RESULT,+RESULT'=0&RESULT<MIN:RESULT,1:MIN),$P(^(TEST),U,3)=$S(RESULT["POS":"POS",MAX']""&RESULT'=0:RESULT,RESULT>MAX:RESULT,1:MAX)
"RTN","ECXLARA",67,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARA",68,0)
 D PRINT
"RTN","ECXLARA",69,0)
 D AUDIT^ECXKILL
"RTN","ECXLARA",70,0)
 Q
"RTN","ECXLARA",71,0)
 ;
"RTN","ECXLARA",72,0)
PRINT ;print report
"RTN","ECXLARA",73,0)
 N PG,NODE
"RTN","ECXLARA",74,0)
 U IO
"RTN","ECXLARA",75,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARA",76,0)
 S PG=0
"RTN","ECXLARA",77,0)
 I '$D(^TMP($J,"ECXDSS")) D  Q
"RTN","ECXLARA",78,0)
 .S DIV=0 F  S DIV=$O(@SCRNARR@("DIVISION",DIV)) Q:'DIV  D  Q:FLAG
"RTN","ECXLARA",79,0)
 ..D HEADER Q:FLAG
"RTN","ECXLARA",80,0)
 ..W !
"RTN","ECXLARA",81,0)
 ..W !,"**************************************************"
"RTN","ECXLARA",82,0)
 ..W !,"*  No data available for this division.          *"
"RTN","ECXLARA",83,0)
 ..W !,"**************************************************"
"RTN","ECXLARA",84,0)
 S DIV=0 F  S DIV=$O(^TMP($J,"ECXDSS",DIV)) Q:'DIV  D
"RTN","ECXLARA",85,0)
 .D HEADER Q:FLAG
"RTN","ECXLARA",86,0)
 .S TEST="" F  S TEST=$O(^TMP($J,"ECXDSS",DIV,TEST)) Q:TEST']""  D  Q:FLAG
"RTN","ECXLARA",87,0)
 ..S NODE=^TMP($J,"ECXDSS",DIV,TEST)
"RTN","ECXLARA",88,0)
 ..S MIN=$P(^TMP($J,"ECXDSS",DIV,TEST),U,2)
"RTN","ECXLARA",89,0)
 ..S MAX=$P(^TMP($J,"ECXDSS",DIV,TEST),U,3)
"RTN","ECXLARA",90,0)
 ..D:($Y+3>IOSL) HEADER Q:FLAG
"RTN","ECXLARA",91,0)
 ..W !,?4,TEST,?14,$$ECXYMX^ECXUTL($$ECXYM^ECXUTL(DATE)),?27,$S(MIN["NEG":$J("NEG",15),1:$J(MIN,15,4)),?44,$S(MAX["POS":$J("POS",15),MAX>0:$J(MAX,15,4),1:""),?60,$J($P(NODE,U,1),15)
"RTN","ECXLARA",92,0)
 Q
"RTN","ECXLARA",93,0)
 ;
"RTN","ECXLARA",94,0)
HEADER ;header and page control
"RTN","ECXLARA",95,0)
 N JJ,SS,DIR,DIRUT,DTOUT,DUOUT,DSSID
"RTN","ECXLARA",96,0)
 I $E(IOST)="C" D
"RTN","ECXLARA",97,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARA",98,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y FLAG=1
"RTN","ECXLARA",99,0)
 Q:FLAG
"RTN","ECXLARA",100,0)
 S DSSID=$S($G(DIV):$$NNT^XUAF4(DIV),1:"UNKNOWN^^")
"RTN","ECXLARA",101,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLARA",102,0)
 W !,ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract Audit Report"
"RTN","ECXLARA",103,0)
 W !,"DSS Extract Log #:       "_ECXEXT
"RTN","ECXLARA",104,0)
 W !,"Date Range of Audit:     "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXLARA",105,0)
 W !,"Report Run Date/Time:    "_ECXRUN
"RTN","ECXLARA",106,0)
 W !,"Division: "_$P(DSSID,U)_$S($P(DSSID,U,2)'="":" ("_$P(DSSID,U,2)_")",1:""),?68,"Page: "_PG
"RTN","ECXLARA",107,0)
 ;Detailed report sub-header
"RTN","ECXLARA",108,0)
 Q:'$D(^TMP($J))
"RTN","ECXLARA",109,0)
 W !!,?2,"Test Code",?14,"Month Year",?32,"Min Result",?49,"Max Result",?64,"Total Count"
"RTN","ECXLARA",110,0)
 Q
"RTN","ECXLARPT")
0^12^B20353284
"RTN","ECXLARPT",1,0)
ECXLARPT ;ALB/DHH-LAR Results LOINC CODE Report ; 9/18/08 9:27am
"RTN","ECXLARPT",2,0)
 ;;3.0;DSS;**112**;MAY 5, 2008;Build 26
"RTN","ECXLARPT",3,0)
 ;
"RTN","ECXLARPT",4,0)
EN ; entry point
"RTN","ECXLARPT",5,0)
 N X,Y,DATE,ECRUN,ECXDESC,ECXSAVE,ECXTL,ECTHLD
"RTN","ECXLARPT",6,0)
 N ECSD,ECSD1,ECSTART,ECED,ECEND,ECXERR,QFLG,ECXFLAG
"RTN","ECXLARPT",7,0)
 ; get today's date
"RTN","ECXLARPT",8,0)
 D NOW^%DTC S DATE=X,Y=$E(%,1,12) D DD^%DT S ECRUN=$P(Y,"@") K %DT
"RTN","ECXLARPT",9,0)
 S ECXDESC="LAB Results LOINC CODE Report"
"RTN","ECXLARPT",10,0)
 S ECXSAVE("EC*")=""
"RTN","ECXLARPT",11,0)
 W !!,"This report requires 132-column format."
"RTN","ECXLARPT",12,0)
 D EN^XUTMDEVQ("PROCESS^ECXLARPT",ECXDESC,.ECXSAVE)
"RTN","ECXLARPT",13,0)
 I POP W !!,"No device selected...exiting.",! Q
"RTN","ECXLARPT",14,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECXLARPT",15,0)
 D HOME^%ZIS
"RTN","ECXLARPT",16,0)
 D AUDIT^ECXKILL
"RTN","ECXLARPT",17,0)
 Q
"RTN","ECXLARPT",18,0)
 ;
"RTN","ECXLARPT",19,0)
 ;
"RTN","ECXLARPT",20,0)
PROCESS ; entry point for queued report
"RTN","ECXLARPT",21,0)
 S ZTREQ="@"
"RTN","ECXLARPT",22,0)
 D DEFAULT^ECXDVSN(.ECXDIV,1,.ECXERR)
"RTN","ECXLARPT",23,0)
 Q:ECXERR=1
"RTN","ECXLARPT",24,0)
 N TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC,I,J,K,L,M,N,WKLD,SPEC,TA,LTEST
"RTN","ECXLARPT",25,0)
 S A("ALL")=""
"RTN","ECXLARPT",26,0)
 D LOINC^ECXUTL6(.A)
"RTN","ECXLARPT",27,0)
 K ^TMP($J,"ECXLARPT")
"RTN","ECXLARPT",28,0)
 S ECXLNC="" F I=0:0 S ECXLNC=$O(^TMP($J,"ECXUTL6",ECXLNC)) Q:ECXLNC']""  D
"RTN","ECXLARPT",29,0)
 . S RU=$P(^TMP($J,"ECXUTL6",ECXLNC),U,4) S:$G(RU)="" RU="UNKNOWN"
"RTN","ECXLARPT",30,0)
 . S TNUM=$P(^TMP($J,"ECXUTL6",ECXLNC),U,2)
"RTN","ECXLARPT",31,0)
 . S DSSNM=$P(^TMP($J,"ECXUTL6",ECXLNC),U,3)
"RTN","ECXLARPT",32,0)
 . I '$O(^TMP($J,"ECXUTL6",ECXLNC,0)) D
"RTN","ECXLARPT",33,0)
 .. S ^TMP($J,"ECXLARPT",TNUM,DSSNM,"ZZZZ","ZZZZ",RU,ECXLNC)=""
"RTN","ECXLARPT",34,0)
 . S WKLD="" F J=0:0 S WKLD=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD)) Q:WKLD']""  D
"RTN","ECXLARPT",35,0)
 .. S SPEC="" F K=0:0 S SPEC=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC)) Q:SPEC']""  D
"RTN","ECXLARPT",36,0)
 ... S LTEST="" F M=0:0 S LTEST=$O(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST)) Q:LTEST']""  D
"RTN","ECXLARPT",37,0)
 .... S SPECNM=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,2)
"RTN","ECXLARPT",38,0)
 .... I SPECNM="DEFAULT LOINC" S SPECNM="ZZDEFAULT LOINC"
"RTN","ECXLARPT",39,0)
 .... S TSTNM=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,3) S:$G(TSTNM)="" TSTNM="UNKNOWN"
"RTN","ECXLARPT",40,0)
 .... S WKLDCD=$S($D(^LAM(WKLD,0)):$P(^(0),"^",2),1:"")
"RTN","ECXLARPT",41,0)
 .... S LLNC=$P(^TMP($J,"ECXUTL6",ECXLNC,WKLD,SPEC,LTEST),U,4)
"RTN","ECXLARPT",42,0)
 .... S ^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC)=WKLD_"^"_WKLDCD_"^"_LLNC
"RTN","ECXLARPT",43,0)
 D PRINT
"RTN","ECXLARPT",44,0)
 Q
"RTN","ECXLARPT",45,0)
 ;
"RTN","ECXLARPT",46,0)
PRINT ; process temp file and print report
"RTN","ECXLARPT",47,0)
 N PG,QFLG,GTOT,LN,COUNT,VOL,SUB,REC,WKLD1
"RTN","ECXLARPT",48,0)
 U IO
"RTN","ECXLARPT",49,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ Q
"RTN","ECXLARPT",50,0)
 S (PG,QFLG,GTOT,COUNT)=0,$P(LN,"-",132)=""
"RTN","ECXLARPT",51,0)
 D HEADER Q:QFLG
"RTN","ECXLARPT",52,0)
 S COUNT=COUNT+1
"RTN","ECXLARPT",53,0)
 S TNUM=0 F I=0:0 S TNUM=$O(^TMP($J,"ECXLARPT",TNUM)) Q:'TNUM  D  Q:QFLG
"RTN","ECXLARPT",54,0)
 . S DSSNM="" F J=0:0 S DSSNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM)) Q:DSSNM']""  D  Q:QFLG
"RTN","ECXLARPT",55,0)
 .. S TSTNM="" F K=0:0 S TSTNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM)) Q:TSTNM']""  D  Q:QFLG
"RTN","ECXLARPT",56,0)
 ... S SPECNM="" F L=0:0 S SPECNM=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM)) Q:SPECNM']""  D  Q:QFLG
"RTN","ECXLARPT",57,0)
 .... S RU="" F M=0:0 S RU=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU)) Q:RU']""  D  Q:QFLG
"RTN","ECXLARPT",58,0)
 ..... S ECXLNC="" F N=0:0 S ECXLNC=$O(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC)) Q:ECXLNC']""  D
"RTN","ECXLARPT",59,0)
 ...... S WKLD1=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^")
"RTN","ECXLARPT",60,0)
 ...... S WKLDCD=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^",2)
"RTN","ECXLARPT",61,0)
 ...... S LLNC=$P(^TMP($J,"ECXLARPT",TNUM,DSSNM,TSTNM,SPECNM,RU,ECXLNC),"^",3)
"RTN","ECXLARPT",62,0)
 ...... W !,$$RJ^XLFSTR(TNUM,4,"0"),?7,$E(DSSNM,1,24),?33,$E(RU,1,9),?44,$$RJ^XLFSTR(ECXLNC,10," "),?56,$$RJ^XLFSTR(LLNC,10," ")
"RTN","ECXLARPT",63,0)
 ...... I SPECNM'="ZZDEFAULT LOINC",$P(LLNC,"(")'=ECXLNC W ?68,"*"
"RTN","ECXLARPT",64,0)
 ...... W ?71,$S(TSTNM'="ZZZZ":$E(TSTNM,1,24),1:" ")
"RTN","ECXLARPT",65,0)
 ...... W ?97,$S(SPECNM'="ZZZZ":$S(SPECNM="ZZDEFAULT LOINC":"DEFAULT LOINC",1:$E(SPECNM,1,13)),1:" "),?112,$$RJ^XLFSTR(WKLD1,8," "),?122,$$RJ^XLFSTR(WKLDCD,10," ")
"RTN","ECXLARPT",66,0)
 ...... S COUNT=COUNT+1
"RTN","ECXLARPT",67,0)
 ...... I $Y+3>IOSL D HEADER Q:QFLG
"RTN","ECXLARPT",68,0)
 W !!,"Note:'*' denotes difference between LAR LOINC and LOCAL LOINC"
"RTN","ECXLARPT",69,0)
 Q:QFLG
"RTN","ECXLARPT",70,0)
CLOSE ;
"RTN","ECXLARPT",71,0)
 I $E(IOST)="C",'QFLG D
"RTN","ECXLARPT",72,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARPT",73,0)
 .S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXLARPT",74,0)
 K ^TMP($J,"ECXLARPT")
"RTN","ECXLARPT",75,0)
 Q
"RTN","ECXLARPT",76,0)
 ;
"RTN","ECXLARPT",77,0)
HEADER ;header and page control
"RTN","ECXLARPT",78,0)
 N SS,JJ
"RTN","ECXLARPT",79,0)
 I $E(IOST)="C" D
"RTN","ECXLARPT",80,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXLARPT",81,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXLARPT",82,0)
 Q:QFLG
"RTN","ECXLARPT",83,0)
 W:$Y!($E(IOST)="C") @IOF S PG=PG+1
"RTN","ECXLARPT",84,0)
 W !,"LAB RESULTS DSS LOINC CODE REPORT",?124,"Page: "_PG
"RTN","ECXLARPT",85,0)
 W !,"Report Run Date/Time: "_ECRUN
"RTN","ECXLARPT",86,0)
 W !,"DSS Site:             "_$P(ECXDIV(1),U,2)_" ("_$P(ECXDIV(1),U,3)_")"
"RTN","ECXLARPT",87,0)
 ;W !,?97,"LOC",?117,"LOC",?122,"LOC"
"RTN","ECXLARPT",88,0)
 W !!,"LAR",?49,"LAR",?61,"LOCAL",?97,"LOC SPEC",?113,"LOC WKLD",?122,"LOC WKLD"
"RTN","ECXLARPT",89,0)
 W !,"TEST#",?7,"LAR TEST NAME",?33,"LAR UNITS",?49,"LOINC",?61,"LOINC",?71,"LOCAL TEST NAME",?99,"TYPE",?115,"IEN",?125,"CD"
"RTN","ECXLARPT",90,0)
 W !,LN,!
"RTN","ECXLARPT",91,0)
 Q
"RTN","ECXLARPT",92,0)
 ;
"RTN","ECXNUT")
0^25^B31564547
"RTN","ECXNUT",1,0)
ECXNUT ;ALB/JRC Nutrition DSS Extract ; 10/31/08 1:57pm
"RTN","ECXNUT",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,112**;Dec 22, 1997;Build 26
"RTN","ECXNUT",3,0)
BEG ;entry point from option
"RTN","ECXNUT",4,0)
 N EC23,EC7,ECED,ECFILE,ECGRP,ECHEAD,ECINST,ECPACK,ECPIECE,ECRN,ECRTN,ECSD1,ECVER,ECXYM
"RTN","ECXNUT",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXNUT",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXNUT",7,0)
 Q
"RTN","ECXNUT",8,0)
 ;
"RTN","ECXNUT",9,0)
START ; start package specific extract
"RTN","ECXNUT",10,0)
 ;Init variables
"RTN","ECXNUT",11,0)
 N ECSD,ARRAY
"RTN","ECXNUT",12,0)
 S ECED=ECED+.3,ECSD=ECSD1,ARRAY="^TMP($J,""FH"")"
"RTN","ECXNUT",13,0)
 K @ARRAY
"RTN","ECXNUT",14,0)
 ;
"RTN","ECXNUT",15,0)
 ;Call n&fs api and store in ^TMP($J,"FH" global
"RTN","ECXNUT",16,0)
 D DATA^FHDSSAPI(ECSD,ECED)
"RTN","ECXNUT",17,0)
 ;
"RTN","ECXNUT",18,0)
 ;Get n&fs records from ^TMP($J,"FH" global and file
"RTN","ECXNUT",19,0)
 D GETMEALS^ECXNUT1
"RTN","ECXNUT",20,0)
 ;
"RTN","ECXNUT",21,0)
 ;kill ^tmp global
"RTN","ECXNUT",22,0)
 K @ARRAY
"RTN","ECXNUT",23,0)
 ;
"RTN","ECXNUT",24,0)
 Q
"RTN","ECXNUT",25,0)
 ;
"RTN","ECXNUT",26,0)
GET ;gather extract data
"RTN","ECXNUT",27,0)
 ;Init variables
"RTN","ECXNUT",28,0)
 N ECXORDPC,ECXSSN,ECXPNM,ECXSEX,ECXDOB,ECXMPI,ECXRC1,ECXETH,ECXVET,ECXENRL,ECXELIG,ECXMST,ECXPST,ECXPLOC,ECXPHI,ECXMNS,ECXSTATE,ECXCNTY,ECXZIP,ECXPOS,ECXAST,ECXAOL,ECXRST,ECXEST,ECXTM,ECXDATE,ECXMN,ECXSPC
"RTN","ECXNUT",29,0)
 N ECXADMDT,ECXWRD,ECXFAC,ECXPRV,ECXPRNPI,ECXATT,ECXATNPI,ECXDOM,ECXATTPC,ECXPRVPC,ECXPDIV,ECXCBOC,ECPTPR,ECCLASS,ECPTTM,ECXOBS,ECXHNCI,ECXNPRFI,ECXERI,ECXENC,ECPAT,ECXERR,ADM,W,X,ECXCAT,ECXCVE,ECXPRIOR,ECXPTYPE,ECXSTAT,ECXUESTA,ECXA,ECORNPI
"RTN","ECXNUT",30,0)
 N ECXOEF,ECXOEFDT
"RTN","ECXNUT",31,0)
 ;
"RTN","ECXNUT",32,0)
 ;- Prefix ordering pro with a 2 and get person class
"RTN","ECXNUT",33,0)
 S ECXORDPC=$$PRVCLASS^ECXUTL(+ECXORDPH,DATE)
"RTN","ECXNUT",34,0)
 S ECORNPI=$$NPI^XUSNPI("Individual_ID",+ECXORDPH,DATE)
"RTN","ECXNUT",35,0)
 S:+ECORNPI'>0 ECORNPI="" S ECORNPI=$P(ECORNPI,U)
"RTN","ECXNUT",36,0)
 S ECXORDPH=$S(ECXORDPH:2_ECXORDPH,1:"")
"RTN","ECXNUT",37,0)
 ;
"RTN","ECXNUT",38,0)
 ;set patient file (#2) dfn and get patient demographics
"RTN","ECXNUT",39,0)
 S ECXDFN=$P($G(^TMP($J,"FH","ZN",FHDFN)),U,3)
"RTN","ECXNUT",40,0)
 S ECXERR=0 D PAT(ECXDFN)
"RTN","ECXNUT",41,0)
 Q:ECXERR
"RTN","ECXNUT",42,0)
 ;Set demographic variables
"RTN","ECXNUT",43,0)
 S ECXSSN=ECPAT("SSN"),ECXPNM=ECPAT("NAME"),ECXSEX=ECPAT("SEX"),ECXDOB=ECPAT("DOB"),ECXMPI=ECPAT("MPI"),ECXRC1=ECPAT("RACE1"),ECXETH=ECPAT("ETHNIC"),ECXVET=ECPAT("VET"),ECXENRL=ECPAT("ENROLL LOC"),ECXELIG=ECPAT("ELIG")
"RTN","ECXNUT",44,0)
 S ECXMST=ECPAT("MST STAT"),ECXPST=ECPAT("POW STAT"),ECXPLOC=ECPAT("POW LOC"),ECXPHI=ECPAT("PHI"),ECXMNS=ECPAT("MEANS"),ECXSTATE=ECPAT("STATE"),ECXCNTY=ECPAT("COUNTY"),ECXZIP=ECPAT("ZIP")
"RTN","ECXNUT",45,0)
 S ECXPOS=ECPAT("POS"),ECXAST=ECPAT("AO STAT"),ECXAOL=ECPAT("AOL"),ECXRST=ECPAT("IR STAT"),ECXEST=ECPAT("EC STAT")
"RTN","ECXNUT",46,0)
 ;
"RTN","ECXNUT",47,0)
 ;Get oef/oif data
"RTN","ECXNUT",48,0)
 S ECXOEF=ECPAT("ECXOEF")
"RTN","ECXNUT",49,0)
 S ECXOEFDT=ECPAT("ECXOEFDT")
"RTN","ECXNUT",50,0)
 ;
"RTN","ECXNUT",51,0)
 ;Get enrollment status
"RTN","ECXNUT",52,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXNUT",53,0)
 ;
"RTN","ECXNUT",54,0)
 S ECXTM=$$ECXTIME^ECXUTL(DATE)
"RTN","ECXNUT",55,0)
 S ECXDATE=$$ECXDATE^ECXUTL(+DATE,ECXYM)
"RTN","ECXNUT",56,0)
 ;
"RTN","ECXNUT",57,0)
 ;- Use movement record date & time
"RTN","ECXNUT",58,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,DATE),ECXA=$P(ADM,U)
"RTN","ECXNUT",59,0)
 I $G(P)="INP",$G(ECXA)'="I" Q
"RTN","ECXNUT",60,0)
 S ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3),ECXADMDT=$P(ADM,U,4)
"RTN","ECXNUT",61,0)
 S W=$P(ADM,U,9),ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2)
"RTN","ECXNUT",62,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXNUT",63,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXNUT",64,0)
 ;
"RTN","ECXNUT",65,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXNUT",66,0)
 S ECXCBOC=$$CBOC^ECXSCX2(+ECXFAC) ;Get cboc facility
"RTN","ECXNUT",67,0)
 ;
"RTN","ECXNUT",68,0)
 ;- Get primary care data
"RTN","ECXNUT",69,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,DATE)
"RTN","ECXNUT",70,0)
 S ECPTPR=$P(X,U,2),ECCLASS=$P(X,U,3),ECPTTM=$P(X,U),ECPTNPI=$P(X,U,4)
"RTN","ECXNUT",71,0)
 ;
"RTN","ECXNUT",72,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXNUT",73,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXNUT",74,0)
 ;
"RTN","ECXNUT",75,0)
 ;- Get head and neck cancer indicator
"RTN","ECXNUT",76,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXNUT",77,0)
 ;
"RTN","ECXNUT",78,0)
 ;- Get national patient record flag indicator
"RTN","ECXNUT",79,0)
 N ECXNPRFI D NPRF^ECXUTL5
"RTN","ECXNUT",80,0)
 ;
"RTN","ECXNUT",81,0)
 ;- National response indicator
"RTN","ECXNUT",82,0)
 S ECXERI=$$EMGRES^DGUTL(ECXDFN)
"RTN","ECXNUT",83,0)
 ;
"RTN","ECXNUT",84,0)
 ;- If null encounter number, don't file record
"RTN","ECXNUT",85,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,DATE,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXNUT",86,0)
 D:ECXENC'="" FILE
"RTN","ECXNUT",87,0)
 Q
"RTN","ECXNUT",88,0)
 ;
"RTN","ECXNUT",89,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXNUT",90,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXNUT",91,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXNUT",92,0)
 ;          ECPAT("SSN")
"RTN","ECXNUT",93,0)
 ;          ECPAT("NAME")
"RTN","ECXNUT",94,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXNUT",95,0)
 ;                            1=error condition
"RTN","ECXNUT",96,0)
 N X,OK
"RTN","ECXNUT",97,0)
 ;get data
"RTN","ECXNUT",98,0)
 S ECXERR=0
"RTN","ECXNUT",99,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;2;3;5",.ECPAT)
"RTN","ECXNUT",100,0)
 I 'OK S ECXERR=1
"RTN","ECXNUT",101,0)
 Q ECXERR
"RTN","ECXNUT",102,0)
 ;
"RTN","ECXNUT",103,0)
FILE ;file the n&fs extract record
"RTN","ECXNUT",104,0)
 ;node
"RTN","ECXNUT",105,0)
 ;facility^dfn^ssn^name^in/out^day^time^treating specialty^
"RTN","ECXNUT",106,0)
 ;ordering provider^ordering provider person class^primary 
"RTN","ECXNUT",107,0)
 ;care provider^primary person class^primary care team^mpi^dob^sex^
"RTN","ECXNUT",108,0)
 ;race 1^ethnicity^veteran^enrollment status^enrollment location^
"RTN","ECXNUT",109,0)
 ;enrollment category^enrollment priority^eligibility^period of
"RTN","ECXNUT",110,0)
 ;service^agent orange status^agent orange location^radiation status
"RTN","ECXNUT",111,0)
 ;^environmental contaminants^mst status^head & neck cancer indicator
"RTN","ECXNUT",112,0)
 ;pow status^pow location^purple heart indicator^means test^state code
"RTN","ECXNUT",113,0)
 ;^county code^zip+4^observation patient indicator^rrtp,prrtp and
"RTN","ECXNUT",114,0)
 ;saartp indicator^encounter number^patient division^food production
"RTN","ECXNUT",115,0)
 ;division^delivery division^product feeder key^food production
"RTN","ECXNUT",116,0)
 ;facility^delivery location type^delivery feeder location^quantity^
"RTN","ECXNUT",117,0)
 ;cboc^status^user enrollee^patient type^cv status eligibility^
"RTN","ECXNUT",118,0)
 ;national patient record flag^emergency response indicator^admission
"RTN","ECXNUT",119,0)
 ;date^oef/oif ECXOEF^oef/oif return date ECXOEFDT^ordering provider
"RTN","ECXNUT",120,0)
 ;npi ECORNPI^primary care provider npi ECPTNPI
"RTN","ECXNUT",121,0)
 ;
"RTN","ECXNUT",122,0)
 N DA,DIK,ECODE,ECODE1
"RTN","ECXNUT",123,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXNUT",124,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXNUT",125,0)
 ;
"RTN","ECXNUT",126,0)
 ;convert specialty to PTF Code
"RTN","ECXNUT",127,0)
 ;
"RTN","ECXNUT",128,0)
 N ECXDATA
"RTN","ECXNUT",129,0)
 S ECXDATA=$$TSDATA^DGACT(42.4,+ECXSPC,.ECXDATA)
"RTN","ECXNUT",130,0)
 S ECXSPC=$G(ECXDATA(7))
"RTN","ECXNUT",131,0)
 ;
"RTN","ECXNUT",132,0)
 S ECODE=ECODE_ECXDATE_U_ECXTM_U_ECXSPC_U_ECXORDPH_U_ECXORDPC_U
"RTN","ECXNUT",133,0)
 S ECODE=ECODE_ECPTPR_U_ECCLASS_U_ECPTTM_U_ECXMPI_U_ECXDOB_U_ECXSEX_U
"RTN","ECXNUT",134,0)
 S ECODE=ECODE_ECXRC1_U_ECXETH_U_ECXVET_U_ECXSTAT_U_ECXENRL_U_ECXCAT_U
"RTN","ECXNUT",135,0)
 S ECODE=ECODE_ECXPRIOR_U_ECXELIG_U_ECXPOS_U_ECXAST_U_ECXAOL_U_ECXRST
"RTN","ECXNUT",136,0)
 S ECODE=ECODE_U_ECXEST_U_ECXMST_U_ECXHNCI_U_ECXPST_U_ECXPLOC_U_ECXPHI
"RTN","ECXNUT",137,0)
 S ECODE=ECODE_U_ECXMNS_U_ECXSTATE_U_ECXCNTY_U
"RTN","ECXNUT",138,0)
 S ECODE1=ECXZIP_U_ECXOBS_U_ECXDOM_U_ECXENC_U_ECXPDIV_U_ECXFPD_U
"RTN","ECXNUT",139,0)
 S ECODE1=ECODE1_ECXFDD_U_ECXKEY_U_ECXFPF_U_ECXDLT_U_ECXDFL_U_ECXQTY_U
"RTN","ECXNUT",140,0)
 S ECODE1=ECODE1_ECXCBOC_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXNPRFI_U
"RTN","ECXNUT",141,0)
 S ECODE1=ECODE1_ECXERI_U_$S(ECXADMDT:$$ECXDATE^ECXUTL(ECXADMDT,ECXYM),1:"")
"RTN","ECXNUT",142,0)
 I ECXLOGIC>2007 S ECODE1=ECODE1_U_ECXOEF_U_ECXOEFDT_U_$G(ECXTFU)_U_ECORNPI_U_ECPTNPI
"RTN","ECXNUT",143,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXNUT",144,0)
 S ECRN=ECRN+1
"RTN","ECXNUT",145,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXNUT",146,0)
 Q
"RTN","ECXNUT",147,0)
 ;
"RTN","ECXNUT",148,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXNUT",149,0)
 S ECHEAD="NUT"
"RTN","ECXNUT",150,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXNUT",151,0)
 Q
"RTN","ECXNUT1")
0^5^B106014045
"RTN","ECXNUT1",1,0)
ECXNUT1 ;ALB/JRC Nutrition DSS Extract ; 10/30/08 3:20pm
"RTN","ECXNUT1",2,0)
 ;;3.0;DSS EXTRACTS;**92,107,105,112**;Dec 22, 1997;Build 26
"RTN","ECXNUT1",3,0)
 Q
"RTN","ECXNUT1",4,0)
GETMEALS ;get patient meals 
"RTN","ECXNUT1",5,0)
 ; variable names:   ordate - regular diet order date
"RTN","ECXNUT1",6,0)
 ;                   sdate  - diet order npo/withhold date
"RTN","ECXNUT1",7,0)
 ;                   norder - "sf" or "so" order date
"RTN","ECXNUT1",8,0)
 ;                             note: there is a relationship
"RTN","ECXNUT1",9,0)
 ;                             between "sf", "so" and regular diets
"RTN","ECXNUT1",10,0)
 ;                   adate - admission date
"RTN","ECXNUT1",11,0)
 ;                   ddate - discharge date
"RTN","ECXNUT1",12,0)
 N I,J,P,D,ECXADM,FHDFN,ORDATE,DATES,NODE,SF,PRODUCT,ECXQTY,ORDER,ECXORDPH,ECXKEY,ECXFPD,ECXFDD,ECXFPF,ECXDLT,ECXDFL,MEAL,MEALS,SORDATE,NUMBER,TF,TFNODE,ECXTFU,SDATE,START
"RTN","ECXNUT1",13,0)
 ;set ecsd to first day of the month before setting meals array
"RTN","ECXNUT1",14,0)
 S ECSD=ECSD+.1,ECXTFU=""
"RTN","ECXNUT1",15,0)
 ;setup individual meals array for inpatients
"RTN","ECXNUT1",16,0)
 F I=ECSD:1:ECED F J=I+.0800,I+.1300,I+.1800 S MEALS(J)=J
"RTN","ECXNUT1",17,0)
 ;get "inp", "sf", and "so" inpatient meals
"RTN","ECXNUT1",18,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",19,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",20,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",21,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  D
"RTN","ECXNUT1",22,0)
 ...Q:$P($G(^TMP($J,"FH",ECXADM,FHDFN,+ORDATE,"INP")),U,7)'=""
"RTN","ECXNUT1",23,0)
 ...S DATES=$$GETDATES(),SDATE=ORDATE
"RTN","ECXNUT1",24,0)
 ...;create regular diet individual meals
"RTN","ECXNUT1",25,0)
 ...S P="INP",D="PD"
"RTN","ECXNUT1",26,0)
 ...;get new order date and time if exist
"RTN","ECXNUT1",27,0)
 ...S NORDER=$$NEWORDER(P,ORDATE)
"RTN","ECXNUT1",28,0)
 ...S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,ORDATE,"INP")) Q:'NODE
"RTN","ECXNUT1",29,0)
 ...S PRODUCT=$P(NODE,U,13),ECXQTY=1,ORDER=""_$P(NODE,U,14)_","_""
"RTN","ECXNUT1",30,0)
 ...;Resolve feeder key for nutrition product
"RTN","ECXNUT1",31,0)
 ...S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",32,0)
 ...I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",33,0)
 ...S MEAL=ORDATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",34,0)
 ....I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",35,0)
 ....I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",36,0)
 ....I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",37,0)
 ....S ECXORDPH=$$GET1^DIQ(100,+ORDER,1,"I")
"RTN","ECXNUT1",38,0)
 ....;Get additional data and file record.
"RTN","ECXNUT1",39,0)
 ....S DATE=MEAL D GET^ECXNUT
"RTN","ECXNUT1",40,0)
 ;create supplemental feeding meals if they exist
"RTN","ECXNUT1",41,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",42,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",43,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",44,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  D
"RTN","ECXNUT1",45,0)
 ...S DATES=$$GETDATES()
"RTN","ECXNUT1",46,0)
 ...;get "sf" orders if they exist
"RTN","ECXNUT1",47,0)
 ...N SFNODE S (SFNODE,ECXORDPH,CDATE)=""
"RTN","ECXNUT1",48,0)
 ...S SFNODE=$G(@ARRAY@(ECXADM,FHDFN,ORDATE,"SF"))
"RTN","ECXNUT1",49,0)
 ...I +SFNODE D
"RTN","ECXNUT1",50,0)
 ....S P="INP",D="SF"
"RTN","ECXNUT1",51,0)
 ....;get new order date and time if exist
"RTN","ECXNUT1",52,0)
 ....S NORDER=$$NEWORDER(D,ORDATE),CDATE=$P(SFNODE,U,32)
"RTN","ECXNUT1",53,0)
 ....S START=$P(SFNODE,U,2) I START<ECSD S START=ECSD
"RTN","ECXNUT1",54,0)
 ....;order thru all "sf" product fields and generate records
"RTN","ECXNUT1",55,0)
 ....F SF=5:2:27 S PRODUCT=$P(SFNODE,U,SF) S ECXQTY=$P(SFNODE,U,(SF+1)) D
"RTN","ECXNUT1",56,0)
 .....Q:PRODUCT']""
"RTN","ECXNUT1",57,0)
 .....;Resolve external value for product key
"RTN","ECXNUT1",58,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6("SF",PRODUCT)
"RTN","ECXNUT1",59,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",60,0)
 .....;create individual meals
"RTN","ECXNUT1",61,0)
 .....F MEAL=START:1:ECED D
"RTN","ECXNUT1",62,0)
 ......I CDATE]"" Q:MEAL>CDATE
"RTN","ECXNUT1",63,0)
 ......I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",64,0)
 ......I $P(DATES,U,3)]"" Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",65,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",66,0)
 ......S DATE=$P(MEAL,".")_"."_$S("57911"[SF:10,"13151719"[SF:14,1:18)
"RTN","ECXNUT1",67,0)
 ......D GET^ECXNUT
"RTN","ECXNUT1",68,0)
 ;create standing order meals if they exist
"RTN","ECXNUT1",69,0)
 S ECXADM=0 F  S ECXADM=$O(@ARRAY@(ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",70,0)
 .S FHDFN=0 F  S FHDFN=$O(@ARRAY@(ECXADM,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",71,0)
 ..S ORDATE=0,(ADATE,DDATE,SDATE)=""
"RTN","ECXNUT1",72,0)
 ..F  S ORDATE=$O(@ARRAY@(ECXADM,FHDFN,ORDATE)) Q:'ORDATE  D
"RTN","ECXNUT1",73,0)
 ...S DATES=$$GETDATES()
"RTN","ECXNUT1",74,0)
 ...N SONODE,NUM S (SONODE,ECXORDPH)="",NUM=0
"RTN","ECXNUT1",75,0)
 ...S NUM=$O(@ARRAY@(ECXADM,FHDFN,ORDATE,"SO",NUM)) Q:'NUM  D
"RTN","ECXNUT1",76,0)
 ....S SONODE=$G(@ARRAY@(ECXADM,FHDFN,ORDATE,"SO",NUM))
"RTN","ECXNUT1",77,0)
 ....I +SONODE D
"RTN","ECXNUT1",78,0)
 .....;create standing order meals
"RTN","ECXNUT1",79,0)
 .....N SMEAL S P="INP",D="SO"
"RTN","ECXNUT1",80,0)
 .....;get new order date and time if exist
"RTN","ECXNUT1",81,0)
 .....S NORDER=$$NEWORDER(D,ORDATE),SMEAL=$P(SONODE,U,3)
"RTN","ECXNUT1",82,0)
 .....S PRODUCT=$P(SONODE,U,2),ECXQTY=$P(SONODE,U,8)
"RTN","ECXNUT1",83,0)
 .....;Resolve feeder key for nutrition product
"RTN","ECXNUT1",84,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",85,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",86,0)
 .....;create individual meals
"RTN","ECXNUT1",87,0)
 .....S MEAL=ORDATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",88,0)
 ......N TIME S TIME=$P(MEALS(MEAL),".",2)
"RTN","ECXNUT1",89,0)
 ......Q:SMEAL'["B"&(TIME=08)
"RTN","ECXNUT1",90,0)
 ......Q:SMEAL'["N"&(TIME=13)
"RTN","ECXNUT1",91,0)
 ......Q:SMEAL'["E"&(TIME=18)
"RTN","ECXNUT1",92,0)
 ......I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",93,0)
 ......I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",94,0)
 ......I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",95,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",96,0)
 ......S DATE=MEAL D GET^ECXNUT
"RTN","ECXNUT1",97,0)
 ;remove individual meals array
"RTN","ECXNUT1",98,0)
 K MEALS
"RTN","ECXNUT1",99,0)
 ;Get inpatient tube feedings
"RTN","ECXNUT1",100,0)
 N P1,PNODE,CDATE,ECXTFU,MEALS
"RTN","ECXNUT1",101,0)
 ;set daily meals array for inpatient tube feedings
"RTN","ECXNUT1",102,0)
 F I=ECSD:1:ECED S MEALS(I)=""
"RTN","ECXNUT1",103,0)
 S (FHDFN,DATE,P1,CDATE)=0,(ECXADM,NODE,ECXORDPH,PNODE)=""
"RTN","ECXNUT1",104,0)
 S P="INP",D="TF" F  S ECXADM=$O(^TMP($J,"FH",ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",105,0)
 .F  S FHDFN=$O(^TMP($J,"FH",ECXADM,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",106,0)
 ..F  S DATE=$O(^TMP($J,"FH",ECXADM,FHDFN,DATE)) Q:'DATE  D
"RTN","ECXNUT1",107,0)
 ...S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF")) Q:'NODE  D
"RTN","ECXNUT1",108,0)
 ....F  S P1=$O(^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF",P1)) Q:'P1  D
"RTN","ECXNUT1",109,0)
 .....S PNODE=^TMP($J,"FH",ECXADM,FHDFN,DATE,"TF",P1,"P")
"RTN","ECXNUT1",110,0)
 .....S ORDATE=DATE,DATES=$$GETDATES(),CDATE=$P(NODE,U,11)
"RTN","ECXNUT1",111,0)
 .....S PRODUCT=$P(PNODE,U,1),ORDER=""_$P(NODE,U,14)_","_""
"RTN","ECXNUT1",112,0)
 .....S ECXQTY=$S($P(PNODE,U,3)["GM":$P(PNODE,U,3),1:$P(PNODE,U,4))
"RTN","ECXNUT1",113,0)
 .....S ECXTFU=$S($P(PNODE,U,3)["GM":"GM",1:"ML")
"RTN","ECXNUT1",114,0)
 .....;Resolve external value for product key
"RTN","ECXNUT1",115,0)
 .....S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",116,0)
 .....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",117,0)
 .....;create daily meals
"RTN","ECXNUT1",118,0)
 .....S MEAL=DATE F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",119,0)
 ......I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",120,0)
 ......I CDATE]"" Q:MEAL>CDATE
"RTN","ECXNUT1",121,0)
 ......I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",122,0)
 ......S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",123,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",124,0)
 ......S DATE=MEAL D GET^ECXNUT S DATE=ORDATE
"RTN","ECXNUT1",125,0)
 ;Get outpatient recurring meals
"RTN","ECXNUT1",126,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH,ECXTFU)=""
"RTN","ECXNUT1",127,0)
 S P="OP",D="RM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",128,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",129,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",130,0)
 ... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM")) Q:'NODE
"RTN","ECXNUT1",131,0)
 ... S PRODUCT=$P(NODE,U,2),ECXQTY=1,ORDER=""_$P(NODE,U,12)_","_""
"RTN","ECXNUT1",132,0)
 ... S PRODUCT=$$GET1^DIQ(111,PRODUCT,4,"I")
"RTN","ECXNUT1",133,0)
 ... S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",134,0)
 ... ;Resolve external value for product key
"RTN","ECXNUT1",135,0)
 ... S ECXKEY=$$NUTKEY^ECXUTL6("PD",PRODUCT)
"RTN","ECXNUT1",136,0)
 ... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",137,0)
 ... ;Get additional data and file record.
"RTN","ECXNUT1",138,0)
 ... D GET^ECXNUT
"RTN","ECXNUT1",139,0)
 ;Get outpatient standing orders
"RTN","ECXNUT1",140,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",141,0)
 S P="OP",D="SO" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",142,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",143,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",144,0)
 ... S FHNUM=0 F  S FHNUM=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMSO",FHNUM)) Q:FHNUM'>0  D
"RTN","ECXNUT1",145,0)
 ....N SMEAL S P="OP",D="SO"
"RTN","ECXNUT1",146,0)
 ....;get new order date and time if exist
"RTN","ECXNUT1",147,0)
 ....S SONODE=^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMSO",FHNUM)
"RTN","ECXNUT1",148,0)
 ....S NORDER=DATE,SMEAL=$P(SONODE,U,3)
"RTN","ECXNUT1",149,0)
 ....S PRODUCT=$P(SONODE,U,2),ECXQTY=$P(SONODE,U,8)
"RTN","ECXNUT1",150,0)
 ....;Resolve feeder key for nutrition product
"RTN","ECXNUT1",151,0)
 ....S ECXKEY=$$NUTKEY^ECXUTL6(D,PRODUCT)
"RTN","ECXNUT1",152,0)
 ....I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",153,0)
 ....;create individual meals
"RTN","ECXNUT1",154,0)
 ....S MEAL=NUMBER F  S MEAL=$O(MEALS(MEAL)) Q:'MEAL  D
"RTN","ECXNUT1",155,0)
 .....N TIME S TIME=$P(MEALS(MEAL),".",2)
"RTN","ECXNUT1",156,0)
 .....Q:SMEAL'["B"&(TIME=08)
"RTN","ECXNUT1",157,0)
 .....Q:SMEAL'["N"&(TIME=13)
"RTN","ECXNUT1",158,0)
 .....Q:SMEAL'["E"&(TIME=18)
"RTN","ECXNUT1",159,0)
 .....I $P(DATES,U) Q:MEAL>$P(DATES,U)
"RTN","ECXNUT1",160,0)
 .....I NORDER]"" Q:MEAL>NORDER
"RTN","ECXNUT1",161,0)
 .....I $P(DATES,U,3) Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",162,0)
 .....;Get additional data and file record.
"RTN","ECXNUT1",163,0)
 .....N ZDATE S ZDATE=DATE
"RTN","ECXNUT1",164,0)
 .....S DATE=MEAL D GET^ECXNUT
"RTN","ECXNUT1",165,0)
 .....S DATE=ZDATE
"RTN","ECXNUT1",166,0)
 ;Get outpatient supplemental feedings
"RTN","ECXNUT1",167,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",168,0)
 S P="OP",D="SO" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",169,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",170,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",171,0)
 ... Q:'$D(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMSF"))  D
"RTN","ECXNUT1",172,0)
 ....N SMEAL S P="OP",D="SF"
"RTN","ECXNUT1",173,0)
 ....;get "sf" orders if they exist
"RTN","ECXNUT1",174,0)
 ....N SFNODE S (SFNODE,ECXORDPH,CDATE)=""
"RTN","ECXNUT1",175,0)
 ....S SFNODE=^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMSF")
"RTN","ECXNUT1",176,0)
 ....I +SFNODE D
"RTN","ECXNUT1",177,0)
 .....;get new order date and time if exist
"RTN","ECXNUT1",178,0)
 .....S NORDER=DATE,CDATE=$P(SFNODE,U,32)
"RTN","ECXNUT1",179,0)
 .....;order thru all "sf" product fields and generate records
"RTN","ECXNUT1",180,0)
 .....F SF=5:2:27 S PRODUCT=$P(SFNODE,U,SF) S ECXQTY=$P(SFNODE,U,(SF+1)) D
"RTN","ECXNUT1",181,0)
 ......Q:PRODUCT']""
"RTN","ECXNUT1",182,0)
 ......;Resolve external value for product key
"RTN","ECXNUT1",183,0)
 ......S ECXKEY=$$NUTKEY^ECXUTL6("SF",PRODUCT)
"RTN","ECXNUT1",184,0)
 ......I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",185,0)
 ......;create individual meals
"RTN","ECXNUT1",186,0)
 ......F MEAL=DATE
"RTN","ECXNUT1",187,0)
 ......I $P(DATES,U,3)]"" Q:MEAL>$P(DATES,U,3)
"RTN","ECXNUT1",188,0)
 ......;Get additional data and file record.
"RTN","ECXNUT1",189,0)
 ......N ZDATE S ZDATE=DATE
"RTN","ECXNUT1",190,0)
 ......S DATE=$P(MEAL,".")_"."_$S("57911"[SF:10,"13151719"[SF:14,1:18)
"RTN","ECXNUT1",191,0)
 ......D GET^ECXNUT
"RTN","ECXNUT1",192,0)
 ......S DATE=ZDATE
"RTN","ECXNUT1",193,0)
 ;Get outpatient tube feedings
"RTN","ECXNUT1",194,0)
 S DATE=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",195,0)
 S P="OP",D="TF" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",196,0)
 . S FHDFN=0 F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",197,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",198,0)
 ... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF")) Q:NODE=""
"RTN","ECXNUT1",199,0)
 ... S TF=0 F  S TF=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF",TF)) Q:'TF  D
"RTN","ECXNUT1",200,0)
 .... S TFNODE=^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF",TF)
"RTN","ECXNUT1",201,0)
 .... S PRODUCT=$P(TFNODE,U,1),ECXQTY=$P(TFNODE,U,4)
"RTN","ECXNUT1",202,0)
 .... ;Resolve external value for product key
"RTN","ECXNUT1",203,0)
 .... S ECXKEY=$$NUTKEY^ECXUTL6("TF",PRODUCT)
"RTN","ECXNUT1",204,0)
 .... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",205,0)
 .... ;Get additional data and file record.
"RTN","ECXNUT1",206,0)
 .... D GET^ECXNUT
"RTN","ECXNUT1",207,0)
 ;Get outpatient special meals
"RTN","ECXNUT1",208,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",209,0)
 S P="OP",D="SM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",210,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",211,0)
 .. S NODE=$G(^TMP($J,"FH",DATE,FHDFN,"SM")) Q:'NODE
"RTN","ECXNUT1",212,0)
 .. S PRODUCT=$P(NODE,U,4),ECXQTY=1,ECXORDPH=$P(NODE,U,5)
"RTN","ECXNUT1",213,0)
 .. S PRODUCT=$$GET1^DIQ(111,PRODUCT,4,"I")
"RTN","ECXNUT1",214,0)
 .. ;Resolve external value for product key
"RTN","ECXNUT1",215,0)
 .. S ECXKEY=$$NUTKEY^ECXUTL6("SM",PRODUCT)
"RTN","ECXNUT1",216,0)
 .. I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",217,0)
 .. ;Get additional data and file record.
"RTN","ECXNUT1",218,0)
 .. D GET^ECXNUT
"RTN","ECXNUT1",219,0)
 ;Get outpatient guest meals
"RTN","ECXNUT1",220,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",221,0)
 S P="OP",D="GM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",222,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",223,0)
 .. S NODE=$G(^TMP($J,"FH",DATE,FHDFN,"GM")) Q:'NODE
"RTN","ECXNUT1",224,0)
 .. S PRODUCT=$P(NODE,U,13),ECXQTY=1
"RTN","ECXNUT1",225,0)
 .. ;Resolve external value for product key
"RTN","ECXNUT1",226,0)
 .. S ECXKEY=$$NUTKEY^ECXUTL6("GM",PRODUCT)
"RTN","ECXNUT1",227,0)
 .. I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",228,0)
 .. ;Get additional data and file record.
"RTN","ECXNUT1",229,0)
 .. D GET^ECXNUT
"RTN","ECXNUT1",230,0)
 Q
"RTN","ECXNUT1",231,0)
GETDATES() ;Get admit, discharge, npo/withhold dates,for "inp", "sf" and "so"
"RTN","ECXNUT1",232,0)
 ;  return in string i.e.  stop date^admission date^discharge date
"RTN","ECXNUT1",233,0)
 ;     input:    ecxadm  -  movement file ien
"RTN","ECXNUT1",234,0)
 ;               fhdfn   - nutrition patient file (#115)
"RTN","ECXNUT1",235,0)
 ;
"RTN","ECXNUT1",236,0)
 ;     output:   stop date  - npo/withhold date
"RTN","ECXNUT1",237,0)
 ;               admit date - admission date and time
"RTN","ECXNUT1",238,0)
 ;               discharge date - discharge date and time
"RTN","ECXNUT1",239,0)
 ;init variables
"RTN","ECXNUT1",240,0)
 N ADATE,DDATE,DATE,STDATE,NORDATE,IENS
"RTN","ECXNUT1",241,0)
 ;check input
"RTN","ECXNUT1",242,0)
 Q:'$G(ECXADM)!'$G(FHDFN) "0^0^0"
"RTN","ECXNUT1",243,0)
 ;get admission and discharge dates
"RTN","ECXNUT1",244,0)
 S (ADATE,DDATE,DATE,SDATE,NORDATE,STDATE)="",IENS=""_ECXADM_","_FHDFN_","_"",ADATE=$$GET1^DIQ(115.01,IENS,.01,"I"),DDATE=$$GET1^DIQ(115.01,IENS,18,"I")
"RTN","ECXNUT1",245,0)
 ;get "inp" order's npo/withhold date return it as 'stdate' if exist
"RTN","ECXNUT1",246,0)
 S DATE=ORDATE F  S DATE=$O(@ARRAY@(ECXADM,FHDFN,DATE)) Q:'DATE  D
"RTN","ECXNUT1",247,0)
 .I $P($G(@ARRAY@(ECXADM,FHDFN,+DATE,"INP")),U,7)'="" S STDATE=DATE
"RTN","ECXNUT1",248,0)
 Q STDATE_U_ADATE_U_DDATE
"RTN","ECXNUT1",249,0)
NEWORDER(TYPE,DATE) ;Look for new order for inpatient meal type if exist
"RTN","ECXNUT1",250,0)
 ;    Input     ecxadm -  movement #
"RTN","ECXNUT1",251,0)
 ;              fhdfn  -  nutrition file (#115) fhdfn
"RTN","ECXNUT1",252,0)
 ;              date   -  starting order date to begin lookup
"RTN","ECXNUT1",253,0)
 ;              type   -  meal type "sf", "so", or "pd"
"RTN","ECXNUT1",254,0)
 ;    Output:   new order date and time for specific meal type
"RTN","ECXNUT1",255,0)
 ;init variables
"RTN","ECXNUT1",256,0)
 N NUMT
"RTN","ECXNUT1",257,0)
 S NORDER="",NUMT=0
"RTN","ECXNUT1",258,0)
 Q:$G(TYPE)']""!'$G(DATE) NORDER
"RTN","ECXNUT1",259,0)
 F  S DATE=$O(@ARRAY@(ECXADM,FHDFN,DATE)) Q:'DATE  Q:NORDER  D
"RTN","ECXNUT1",260,0)
 .I TYPE="SO" D  Q
"RTN","ECXNUT1",261,0)
 ..S NUMT=$O(^TMP($J,"FH",ECXADM,FHDFN,DATE,TYPE,NUMT)) Q:'NUMT
"RTN","ECXNUT1",262,0)
 ..S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,DATE,TYPE,NUMT)) Q:'+NODE
"RTN","ECXNUT1",263,0)
 ..S NORDER=DATE
"RTN","ECXNUT1",264,0)
 .S NODE=$G(^TMP($J,"FH",ECXADM,FHDFN,DATE,TYPE)) Q:'+NODE
"RTN","ECXNUT1",265,0)
 .S NORDER=DATE
"RTN","ECXNUT1",266,0)
 Q NORDER
"RTN","ECXNUTPE")
0^8^B5181727
"RTN","ECXNUTPE",1,0)
ECXNUTPE ;ALB/JRC - Nut Product Worksheet Edit ; 10/17/06 2:03pm
"RTN","ECXNUTPE",2,0)
 ;;3.0;DSS EXTRACTS;**92,112**;Dec 22, 1997;Build 26
"RTN","ECXNUTPE",3,0)
 ;
"RTN","ECXNUTPE",4,0)
EN ;entry point from menu option
"RTN","ECXNUTPE",5,0)
 ;Declare variables
"RTN","ECXNUTPE",6,0)
 N STOP,DIC,DIE,DTOUT,DUOUT,Y,DA,DR,SCREEN,CATEGORY,DIET,PRODUCT,CAT,FL,DLAYGO
"RTN","ECXNUTPE",7,0)
 S STOP=0
"RTN","ECXNUTPE",8,0)
 F  D  Q:STOP
"RTN","ECXNUTPE",9,0)
 .;Select diet category
"RTN","ECXNUTPE",10,0)
 .S DIC="^ECX(728.45,",DIC(0)="AEQMZL",DLAYGO=728.45
"RTN","ECXNUTPE",11,0)
 .D ^DIC
"RTN","ECXNUTPE",12,0)
 .I ($D(DTOUT))!($D(DUOUT))!(Y<1) S STOP=1 Q
"RTN","ECXNUTPE",13,0)
 .W "  ",Y(0,0)
"RTN","ECXNUTPE",14,0)
 .S SCREEN=$E($P(Y(0,0)," "),1)_$E($P(Y(0,0)," ",2),1)
"RTN","ECXNUTPE",15,0)
 .S CATEGORY=$P(Y,U,2)
"RTN","ECXNUTPE",16,0)
 .S CAT=+Y
"RTN","ECXNUTPE",17,0)
 .S FL=Y(0)
"RTN","ECXNUTPE",18,0)
 .S FL=$S(FL="PD":116.2,FL="SF":118,FL="SO":118.3,FL="TF":118.2,1:"")
"RTN","ECXNUTPE",19,0)
 .F  D  Q:STOP
"RTN","ECXNUTPE",20,0)
SUB ..;Select category subentry
"RTN","ECXNUTPE",21,0)
 ..S DA(1)=CAT,DIC(0)="AEQMZL"
"RTN","ECXNUTPE",22,0)
 ..S DIC="^ECX(728.45,"_DA(1)_",1,"
"RTN","ECXNUTPE",23,0)
 ..S DIC("V")="I +Y(0)="_FL_""
"RTN","ECXNUTPE",24,0)
 ..D ^DIC
"RTN","ECXNUTPE",25,0)
 ..I ($D(DTOUT))!($D(DUOUT))!(Y<1) S STOP=1 Q
"RTN","ECXNUTPE",26,0)
 ..S DIET=$P(Y,U,2)
"RTN","ECXNUTPE",27,0)
 ..S DA=+Y,DIE=DIC,DR=".01" D ^DIE
"RTN","ECXNUTPE",28,0)
 ..I ($D(DTOUT))!($D(DUOUT)) S STOP=1 Q
"RTN","ECXNUTPE",29,0)
 ..I $D(DA)<1 G SUB
"RTN","ECXNUTPE",30,0)
 ..D CHOICES
"RTN","ECXNUTPE",31,0)
 ..Q:STOP
"RTN","ECXNUTPE",32,0)
 ..D UPDATE
"RTN","ECXNUTPE",33,0)
 Q
"RTN","ECXNUTPE",34,0)
 ;
"RTN","ECXNUTPE",35,0)
CHOICES ;Prepare CHOICES variable for DIR call
"RTN","ECXNUTPE",36,0)
 ;      Input - screen  (Required)
"RTN","ECXNUTPE",37,0)
 ;
"RTN","ECXNUTPE",38,0)
 ;      Output - Array of choices
"RTN","ECXNUTPE",39,0)
 ;               1  Regular
"RTN","ECXNUTPE",40,0)
 ;               2  Clear Liqs
"RTN","ECXNUTPE",41,0)
 ;Init variables
"RTN","ECXNUTPE",42,0)
 N CHOICES,OFF,TEXT,DSSCAT,DSSPRO,CNT,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXNUTPE",43,0)
 S CHOICES=""
"RTN","ECXNUTPE",44,0)
 F OFF=1:1 S TEXT=$P($T(PRODUCTS+OFF^ECXNUTPP),";;",2) Q:TEXT="END"  D
"RTN","ECXNUTPE",45,0)
 .S DSSCAT=$P(TEXT,U),DSSPRO=$P(TEXT,U,2)
"RTN","ECXNUTPE",46,0)
 .Q:DSSCAT'=SCREEN
"RTN","ECXNUTPE",47,0)
 .S CNT=$G(CNT)+1
"RTN","ECXNUTPE",48,0)
 .S CHOICES=$G(CHOICES)_CNT_":"_DSSPRO_";"
"RTN","ECXNUTPE",49,0)
 S DIR(0)="S^"_CHOICES
"RTN","ECXNUTPE",50,0)
 S DIR("A")="Select DSS Assigned Product"
"RTN","ECXNUTPE",51,0)
 D ^DIR
"RTN","ECXNUTPE",52,0)
 I $D(DIRUT)!$D(DUOUT) D CHOICES S STOP=1 Q
"RTN","ECXNUTPE",53,0)
 S PRODUCT=Y(0)
"RTN","ECXNUTPE",54,0)
 Q
"RTN","ECXNUTPE",55,0)
 ;
"RTN","ECXNUTPE",56,0)
UPDATE ;Update file (#728.45) assigned product field
"RTN","ECXNUTPE",57,0)
 N ECXFDA,ECXERR
"RTN","ECXNUTPE",58,0)
 S ECXFDA(728.45,"?1,",.01)=CATEGORY
"RTN","ECXNUTPE",59,0)
 S ECXFDA(728.451,"?+2,?1,",.01)=DIET
"RTN","ECXNUTPE",60,0)
 S ECXFDA(728.451,"?+2,?1,",1)=PRODUCT
"RTN","ECXNUTPE",61,0)
 D UPDATE^DIE("","ECXFDA","","ECXERR")
"RTN","ECXNUTPE",62,0)
 I $D(ECXERR) D
"RTN","ECXNUTPE",63,0)
 .W !!!,"Problem encountered during record update "
"RTN","ECXNUTPE",64,0)
 .W !!,"Contact IRM"_"  Error: "_$G(ECXERR("DIERR",1,"TEXT",1))
"RTN","ECXNUTPE",65,0)
 Q
"RTN","ECXOPRX")
0^17^B51901081
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 11/5/07 8:17am
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92,105,112**;Dec 22, 1997;Build 26
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX
"RTN","ECXOPRX",11,0)
 S QFLG=0
"RTN","ECXOPRX",12,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",15,0)
 ;before V6
"RTN","ECXOPRX",16,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 Q:QFLG
"RTN","ECXOPRX",26,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",27,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",28,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",29,0)
 Q
"RTN","ECXOPRX",30,0)
 ;
"RTN","ECXOPRX",31,0)
STUFF ;get data
"RTN","ECXOPRX",32,0)
 N ECXPHA
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA=""
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",39,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",40,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",41,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",42,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",43,0)
 S ECPRVNPI=$$NPI^XUSNPI("Individual_ID",$P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",44,0)
 S:+ECPRVNPI'>0 ECPRVNPI="" S ECPRVNPI=$P(ECPRVNPI,U)
"RTN","ECXOPRX",45,0)
 ;get classification data
"RTN","ECXOPRX",46,0)
 S ECXCLS=$G(^PSRX(ECRX,"IBQ")),ECXMIL=$P(ECXCLS,U,2),ECXAO=$P(ECXCLS,U,3),ECXIR=$P(ECXCLS,U,4),ECXECE=$P(ECXCLS,U,5),ECXHNC=$P(ECXCLS,U,6)
"RTN","ECXOPRX",47,0)
 F X="ECXMIL","ECXAO","ECXIR","ECXECE","ECXHNC" S @X=$S(@X:"Y",@X=0:"N",1:"")
"RTN","ECXOPRX",48,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",49,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",50,0)
 ;get patient specific data
"RTN","ECXOPRX",51,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",52,0)
 I 'ECRFL D
"RTN","ECXOPRX",53,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",54,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",55,0)
 I ECRFL D
"RTN","ECXOPRX",56,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",57,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",58,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",59,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",60,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)["I",ECINV=$S(ECINV:"I",1:""),ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",61,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",62,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",63,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",64,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",65,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",66,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",67,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",68,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",69,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",70,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2),ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",71,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",72,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",73,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",74,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",75,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",76,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",77,0)
 S ECXSCRX=$$SCRX^ECXUTL5(ECRX) ;Service connected rx
"RTN","ECXOPRX",78,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",79,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",80,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",81,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",82,0)
 .. N TMP
"RTN","ECXOPRX",83,0)
 .. I (ECXLOGIC>2008) S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"PHA"
"RTN","ECXOPRX",84,0)
 .. E  S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160"
"RTN","ECXOPRX",85,0)
 .. S ECXA="O"
"RTN","ECXOPRX",86,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",87,0)
 Q
"RTN","ECXOPRX",88,0)
 ;
"RTN","ECXOPRX",89,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",90,0)
 N OK,X,PT
"RTN","ECXOPRX",91,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXOPRX",92,0)
 ;get patient data if saved
"RTN","ECXOPRX",93,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",94,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",95,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",96,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",97,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",98,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",99,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4)
"RTN","ECXOPRX",100,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",101,0)
 ;set patient data
"RTN","ECXOPRX",102,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",103,0)
 .K ECXPAT
"RTN","ECXOPRX",104,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",105,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",106,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",107,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",108,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",109,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXOPRX",110,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",111,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",112,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",113,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",114,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",115,0)
 .; OEF/OIF data
"RTN","ECXOPRX",116,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXOPRX",117,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXOPRX",118,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",119,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",120,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXOPRX",121,0)
 ;get inpatient data
"RTN","ECXOPRX",122,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",123,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",124,0)
 ;get primary care data
"RTN","ECXOPRX",125,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",126,0)
 Q
"RTN","ECXOPRX",127,0)
 ;
"RTN","ECXOPRX",128,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",129,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",130,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",131,0)
 Q
"RTN","ECXOPRX",132,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",133,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPIVDN")
0^7^B49199497
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 10/31/07 1:38pm
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92,107,105,112**;Dec 22, 1997;Build 26
"RTN","ECXPIVDN",3,0)
BEG ;entry point from option
"RTN","ECXPIVDN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPIVDN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXPIVDN",6,0)
 Q
"RTN","ECXPIVDN",7,0)
 ;
"RTN","ECXPIVDN",8,0)
START ; start package specific extract
"RTN","ECXPIVDN",9,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA
"RTN","ECXPIVDN",10,0)
 S QFLG=0
"RTN","ECXPIVDN",11,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",12,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",13,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",14,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",15,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",16,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",17,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",18,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",19,0)
 .Q:ECXERR
"RTN","ECXPIVDN",20,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",21,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",22,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",23,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",24,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",25,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",26,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",27,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",28,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",29,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",30,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",31,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",32,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",33,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",34,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",35,0)
 Q
"RTN","ECXPIVDN",36,0)
STUFF ;get data
"RTN","ECXPIVDN",37,0)
 N ECORDST
"RTN","ECXPIVDN",38,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",39,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",40,0)
 I ECXA="O" D
"RTN","ECXPIVDN",41,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",42,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",43,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",44,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",45,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",46,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",47,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",48,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",49,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",50,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",51,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",52,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",53,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",54,0)
 S ECINV=$P(ECXPHA,U,4),ECINV=$S(ECINV["I":"I",1:""),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",55,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",56,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",57,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",58,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",59,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",60,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:"")
"RTN","ECXPIVDN",61,0)
 N ECXUSRTN
"RTN","ECXPIVDN",62,0)
 S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",$P(EC,U,10),$P(EC,U,16))
"RTN","ECXPIVDN",63,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECXOPNPI=$P(ECXUSRTN,U)
"RTN","ECXPIVDN",64,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",65,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",66,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",67,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",68,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",69,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",70,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",71,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",72,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",73,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXPIVDN",74,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",75,0)
 .I ECXOBS="NO" S ECORDST="PHA"
"RTN","ECXPIVDN",76,0)
 .I ECXOBS="YES" S ECORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",77,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",78,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",79,0)
 ;get BCMA data
"RTN","ECXPIVDN",80,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",81,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",82,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",83,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",84,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",85,0)
 D:ECXENC'="" FILE^ECXPIVD2 K P1,P3
"RTN","ECXPIVDN",86,0)
 Q
"RTN","ECXPIVDN",87,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",88,0)
 N X
"RTN","ECXPIVDN",89,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP,ECXOEF,ECXOEFDT)=""
"RTN","ECXPIVDN",90,0)
 ;get patient data if saved
"RTN","ECXPIVDN",91,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",92,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",93,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",94,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",95,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",96,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",97,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2),ECXOEF=$P(PT1,U,3),ECXOEFDT=$P(PT1,U,4)
"RTN","ECXPIVDN",98,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",99,0)
 ;set patient data
"RTN","ECXPIVDN",100,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",101,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",102,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",103,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",104,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXPIVDN",105,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",106,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",107,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",108,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",109,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",110,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",111,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",112,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",113,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",114,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",115,0)
 .S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXPIVDN",116,0)
 .S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXPIVDN",117,0)
 .;save for later
"RTN","ECXPIVDN",118,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",119,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",120,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST_U_ECXOEF_U_ECXOEFDT
"RTN","ECXPIVDN",121,0)
 ;get primary care data
"RTN","ECXPIVDN",122,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",123,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",124,0)
 ;get inpatient data
"RTN","ECXPIVDN",125,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",126,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",127,0)
 Q
"RTN","ECXPIVDN",128,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",129,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",130,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",131,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",132,0)
 S ECVER=7
"RTN","ECXPIVDN",133,0)
 Q
"RTN","ECXPIVDN",134,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",135,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPRO1")
0^1^B20364237
"RTN","ECXPRO1",1,0)
ECXPRO1 ;ALB/GTS - Prosthetics Extract for DSS (Continued) ; 4/14/08 4:07pm
"RTN","ECXPRO1",2,0)
 ;;3.0;DSS EXTRACTS;**9,11,13,15,21,24,33,37,39,100,105,112**;Dec 22, 1997;Build 26
"RTN","ECXPRO1",3,0)
 ;
"RTN","ECXPRO1",4,0)
NTEG(ECXDFN,ECXLNE,ECXPIEN,ECXN0,ECXNLB,ECINST,ECXFORM) ;** Check for required fields
"RTN","ECXPRO1",5,0)
 ;   Input
"RTN","ECXPRO1",6,0)
 ;    ECXDFN   - ien in file #2
"RTN","ECXPRO1",7,0)
 ;    ECXLNE   - line number variable (passed by reference)
"RTN","ECXPRO1",8,0)
 ;    ECXPIEN  - IEN for the Prosthetics record
"RTN","ECXPRO1",9,0)
 ;    ECXN0    - zero node of the Prosthetics record
"RTN","ECXPRO1",10,0)
 ;    ECXNLB   - LB node of the Prosthetics record
"RTN","ECXPRO1",11,0)
 ;    ECINST   - station number being extracted
"RTN","ECXPRO1",12,0)
 ;    ECXFORM  - Form Requested On
"RTN","ECXPRO1",13,0)
 ;   Output (to be KILLed by calling routine)
"RTN","ECXPRO1",14,0)
 ;    ^TMP("ECX-PRO EXC",$J) - Array for the exception message       
"RTN","ECXPRO1",15,0)
 ;    ECXLNE                 - The number of the next line in the msg
"RTN","ECXPRO1",16,0)
 ;    ECXSTAT2               - Patient Station Number
"RTN","ECXPRO1",17,0)
 ;    ECXDATE                - Delivery Date of Prosthesis
"RTN","ECXPRO1",18,0)
 ;    ECXTYPE                - Type of Transaction work performed
"RTN","ECXPRO1",19,0)
 ;    ECXSRCE                - Source of prosthesis
"RTN","ECXPRO1",20,0)
 ;    ECXHCPCS               - CPT/HCPCS code for prosthesis
"RTN","ECXPRO1",21,0)
 ;    ECXRQST                - Requesting Station
"RTN","ECXPRO1",22,0)
 ;    ECXRCST                - Receiving Station
"RTN","ECXPRO1",23,0)
 ;    ECXPHCPC               - PSAS HCPCS code; if 'unknown', then use CPT/HCPCS code 
"RTN","ECXPRO1",24,0)
 ;    ECXNPPDC               - NPPD code for repairs or new issues
"RTN","ECXPRO1",25,0)
 ;   Output (KILLed by NTEG)
"RTN","ECXPRO1",26,0)
 ;    ECXMISS                - 1 indicates missing information
"RTN","ECXPRO1",27,0)
 ;    ECXGOOD                - 0 indicates record should not be extracted
"RTN","ECXPRO1",28,0)
 ;
"RTN","ECXPRO1",29,0)
 N ECXGOOD,ECXMISS
"RTN","ECXPRO1",30,0)
 S (ECXRCST,ECXRQST,ECXNPPDC)="",ECXGOOD=1,ECXSTAT2=$P(ECXN0,U,10)
"RTN","ECXPRO1",31,0)
 I ECXSTAT2]"" D
"RTN","ECXPRO1",32,0)
 .K ECXDIC
"RTN","ECXPRO1",33,0)
 .S DA=ECXSTAT2,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",34,0)
 .D EN^DIQ1 S ECXSTAT2=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",35,0)
 .S:(ECINST'=$E(ECXSTAT2,1,3)) ECXGOOD=0 ;*Screen for incorrect Station
"RTN","ECXPRO1",36,0)
 ;
"RTN","ECXPRO1",37,0)
 ;** Screen out records
"RTN","ECXPRO1",38,0)
 S:($P(ECXN0,U,17)'="") ECXGOOD=0 ;*SHIP/DEL is not NULL
"RTN","ECXPRO1",39,0)
 S:($P(ECXN0,U,26)'="") ECXGOOD=0 ;*PICKUP/DEL is not NULL
"RTN","ECXPRO1",40,0)
 S:(+($P($G(^RMPR(660,ECXPIEN,"AM")),U,2))=1) ECXGOOD=0 ;*NO ADMIN CT=1
"RTN","ECXPRO1",41,0)
 S:(($P(ECXN0,U,15))'="") ECXGOOD=0 ;*HISTORICAL DATA is not NULL
"RTN","ECXPRO1",42,0)
 ;
"RTN","ECXPRO1",43,0)
 S ECXDATE=$P(ECXN0,U,12),ECXTYPE=$P(ECXN0,U,4),ECXSRCE=$P(ECXN0,U,14)
"RTN","ECXPRO1",44,0)
 S ECXHCPCS=$P($G(^ICPT(+$P(ECXN0,U,22),0)),U,1),ECXCMOD=""
"RTN","ECXPRO1",45,0)
 S ECXHCPCS=$$CPT^ECXUTL3(ECXHCPCS,ECXCMOD)
"RTN","ECXPRO1",46,0)
 ;get psas hcpcs code from file #661.1
"RTN","ECXPRO1",47,0)
 S ECXPHCPC=$P($G(^RMPR(660,ECXPIEN,1)),U,4) D
"RTN","ECXPRO1",48,0)
 .;get nppd code for repairs and new issues 10 characters in length.
"RTN","ECXPRO1",49,0)
 .I "X5"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",5)," ","_")
"RTN","ECXPRO1",50,0)
 .I "ISR"[ECXTYPE S ECXNPPDC=$TR($$GET1^DIQ(661.1,ECXPHCPC_",",6)," ","_")
"RTN","ECXPRO1",51,0)
 .I +ECXPHCPC S ECXPHCPC=$E($P($G(^RMPR(661.1,ECXPHCPC,0)),U,1),1,5)
"RTN","ECXPRO1",52,0)
 .I ECXPHCPC="UNKNOWN" S ECXPHCPC=$E(ECXHCPCS,1,5)
"RTN","ECXPRO1",53,0)
 ;
"RTN","ECXPRO1",54,0)
 ;* Get Requesting Station Number
"RTN","ECXPRO1",55,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",56,0)
 .S ECXRQST=$P(ECXNLB,U,1)
"RTN","ECXPRO1",57,0)
 .I ECXRQST]"" D
"RTN","ECXPRO1",58,0)
 ..S DA=ECXRQST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",59,0)
 ..D EN^DIQ1 S ECXRQST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",60,0)
 S:(ECXFORM'["-3") ECXRQST=""
"RTN","ECXPRO1",61,0)
 ;
"RTN","ECXPRO1",62,0)
 ;* Screen out records
"RTN","ECXPRO1",63,0)
 S:(+$P(ECXFORM,U,2)=13) ECXGOOD=0 ;*FORM REQUESTED ON = 13
"RTN","ECXPRO1",64,0)
 ;
"RTN","ECXPRO1",65,0)
 ;* Get Receiving Station Number
"RTN","ECXPRO1",66,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",67,0)
 .S ECXRCST=$P(ECXNLB,U,4)
"RTN","ECXPRO1",68,0)
 .I ECXRCST]"" D
"RTN","ECXPRO1",69,0)
 ..S DA=ECXRCST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPRO1",70,0)
 ..D EN^DIQ1 S ECXRCST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPRO1",71,0)
 S:(ECXFORM'["-3") ECXRCST=""
"RTN","ECXPRO1",72,0)
 ;
"RTN","ECXPRO1",73,0)
 ;** Check for integrity and set up the problem variable if right DIV
"RTN","ECXPRO1",74,0)
 I ECXGOOD D CHK
"RTN","ECXPRO1",75,0)
 Q ECXGOOD
"RTN","ECXPRO1",76,0)
 ;
"RTN","ECXPRO1",77,0)
CHK ;*Check variables
"RTN","ECXPRO1",78,0)
 ; Input
"RTN","ECXPRO1",79,0)
 ;  Variables set in and Output from NTEG^ECXPRO1
"RTN","ECXPRO1",80,0)
 ; Output
"RTN","ECXPRO1",81,0)
 ;  ^TMP("ECX-PRO EXC",$J,   - Global of records with integrity problems
"RTN","ECXPRO1",82,0)
 ;
"RTN","ECXPRO1",83,0)
 S ECXMISS=""
"RTN","ECXPRO1",84,0)
 I ECXSTAT2']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",85,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",86,0)
 I ECXDFN=0 S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",87,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",88,0)
 ;I ECXSSN']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",89,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",90,0)
 ;I ECXNA="    " S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",91,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",92,0)
 I ECXDATE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",93,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",94,0)
 I ECXTYPE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",95,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",96,0)
 I ECXSRCE']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",97,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",98,0)
 I ECXHCPCS']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",99,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",100,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",101,0)
 .I ECXRQST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",102,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",103,0)
 I ECXFORM']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",104,0)
 S ECXMISS=ECXMISS_U
"RTN","ECXPRO1",105,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",106,0)
 .I ECXRCST']"" S ECXMISS=ECXMISS_"1"
"RTN","ECXPRO1",107,0)
 I ECXMISS'="^^^^^^^^^^" D
"RTN","ECXPRO1",108,0)
 .S ECXGOOD=0
"RTN","ECXPRO1",109,0)
 .D ECXMISLN^ECXPRO2(ECXMISS,.ECXLNE,ECXPIEN)
"RTN","ECXPRO1",110,0)
 Q
"RTN","ECXPRO1",111,0)
 ;
"RTN","ECXPRO1",112,0)
PROSINFO(ECXDA,ECXLB,ECX0,ECXFORM) ;*Get Prosthetics Information
"RTN","ECXPRO1",113,0)
 ;
"RTN","ECXPRO1",114,0)
 ;  Input
"RTN","ECXPRO1",115,0)
 ;    ECDA    - The IEN for the Prosthetics record
"RTN","ECXPRO1",116,0)
 ;    ECX0    - The zero node of the Prosthetics record
"RTN","ECXPRO1",117,0)
 ;    ECXLB   - The LB node of the Prosthetics record
"RTN","ECXPRO1",118,0)
 ;    ECXFORM - The Form Requested On (to determine Lab transactions)
"RTN","ECXPRO1",119,0)
 ;
"RTN","ECXPRO1",120,0)
 ;  Output (to be KILLed by calling routine)
"RTN","ECXPRO1",121,0)
 ;    ECXCTAMT   - The Cost of Transaction
"RTN","ECXPRO1",122,0)
 ;    ECXLLC     - The Lab Labor Cost
"RTN","ECXPRO1",123,0)
 ;    ECXLMC     - The Lab Material Cost
"RTN","ECXPRO1",124,0)
 ;    ECXGRPR    - The AMIS Grouper number
"RTN","ECXPRO1",125,0)
 ;    ECXBILST   - The Billing Status
"RTN","ECXPRO1",126,0)
 ;    ECXQTY     - The Quantity
"RTN","ECXPRO1",127,0)
 ;
"RTN","ECXPRO1",128,0)
 S (ECXLLC,ECXLMC,ECXCTAMT)="",ECXBILST=$P($G(^RMPR(660,ECXDA,"AM")),U,3)
"RTN","ECXPRO1",129,0)
 S ECXQTY=$P(ECX0,U,7)
"RTN","ECXPRO1",130,0)
 S:(+ECXQTY=0) ECXQTY=1
"RTN","ECXPRO1",131,0)
 ;
"RTN","ECXPRO1",132,0)
 ;- Set Quantity field to 8 chars (right-justified & padded w/zeros)
"RTN","ECXPRO1",133,0)
 S ECXQTY=$$RJ^XLFSTR(ECXQTY,8,0)
"RTN","ECXPRO1",134,0)
 S ECXGRPR=$P($G(^RMPR(660,ECXDA,"AMS")),U,1),ECXCTAMT=$P(ECX0,U,16)
"RTN","ECXPRO1",135,0)
 I ECXFORM["-3" D
"RTN","ECXPRO1",136,0)
 .S ECXCTAMT=$P(ECXLB,U,9),ECXLLC=$P(ECXLB,U,7),ECXLMC=$P(ECXLB,U,8)
"RTN","ECXPRO1",137,0)
 ;
"RTN","ECXPRO1",138,0)
 ;- If Stock Issue or Inventory Issue, Cost of Transaction=0
"RTN","ECXPRO1",139,0)
 I $P(ECXFORM,U,2)=11!($P(ECXFORM,U,2)=12) S ECXCTAMT=0
"RTN","ECXPRO1",140,0)
 S:ECXCTAMT="" ECXCTAMT=0 S:ECXCTAMT>999999 ECXCTAMT=999999
"RTN","ECXPRO1",141,0)
 S:ECXLLC="" ECXLLC=0 S:ECXLLC>999999 ECXLLC=999999
"RTN","ECXPRO1",142,0)
 S:ECXLMC="" ECXLMC=0 S:ECXLMC>999999 ECXLMC=999999
"RTN","ECXPRO1",143,0)
 ;
"RTN","ECXPRO1",144,0)
 ;- Round to next dollar amount
"RTN","ECXPRO1",145,0)
 I (ECXCTAMT#1)>.50 S ECXCTAMT=(ECXCTAMT+1)\1
"RTN","ECXPRO1",146,0)
 I (ECXLLC#1)>.50 S ECXLLC=(ECXLLC+1)\1
"RTN","ECXPRO1",147,0)
 I (ECXLMC#1)>.50 S ECXLMC=(ECXLMC+1)\1
"RTN","ECXPRO1",148,0)
 Q
"RTN","ECXPURG")
0^21^B23816296
"RTN","ECXPURG",1,0)
ECXPURG ;BIR/CML-Driver for Purge of DSS Data from Local Extract & Holding Files ; 10/8/08 4:25pm
"RTN","ECXPURG",2,0)
 ;;3.0;DSS EXTRACTS;**9,24,33,35,49,102,112**;Dec 22, 1997;Build 26
"RTN","ECXPURG",3,0)
EN ;entry point from option
"RTN","ECXPURG",4,0)
 W @IOF,!!,"This option will allow you to purge:"
"RTN","ECXPURG",5,0)
 W !,"1. individual or a range of DSS extracts, or"
"RTN","ECXPURG",6,0)
 W !,"2. data that resides in the ""holding files"" for the IVP and UDP extracts."
"RTN","ECXPURG",7,0)
 W !,"3. data that resides in the ""holding file"" for the VBECS extract"
"RTN","ECXPURG",8,0)
 W !!,"Care must be taken for several reasons:"
"RTN","ECXPURG",9,0)
 W !!,"-  You can purge ANY existing extract.  This includes transmitted and non-"
"RTN","ECXPURG",10,0)
 W !,"   transmitted extracts as well as extracts that did not run to completion"
"RTN","ECXPURG",11,0)
 W !,"   due to errors or system problems."
"RTN","ECXPURG",12,0)
 W !,"-  Choosing a range of extracts (or a broad date range for the ""holding"
"RTN","ECXPURG",13,0)
 W !,"   files"") could mean an excessively large number of records and be very"
"RTN","ECXPURG",14,0)
 W !,"   CPU intensive.  Please be sure to queue this purge for off-hours and"
"RTN","ECXPURG",15,0)
 W !,"   limit the number of extracts to be purged per a single queued session."
"RTN","ECXPURG",16,0)
 W !,"-  The IVP, UDP and VBECS ""holding"" files are intermediate files that"
"RTN","ECXPURG",17,0)
 W !,"   are populated ""realtime"" by inpatient pharmacy and VBECS activity. "
"RTN","ECXPURG",18,0)
 W !,"   These files are then used to generate the IVP, UDP and VBECS extracts."
"RTN","ECXPURG",19,0)
 W !,"   NOTE:    The VBECS files CANNOT be regenerated."
"RTN","ECXPURG",20,0)
 W !,"   Once it is purged for a date range, extracts can no longer be"
"RTN","ECXPURG",21,0)
 W !,"   generated for that time period."
"RTN","ECXPURG",22,0)
 ;
"RTN","ECXPURG",23,0)
 K DIR W !
"RTN","ECXPURG",24,0)
 S DIR(0)="SAM^E:Extract Files;I:IVP Holding File;U:UDP Holding File;V:VBECS Holding File"
"RTN","ECXPURG",25,0)
 S DIR("A")="Purge (E)xtract files, (I)VP data, (U)DP data or (V)BECS data? "
"RTN","ECXPURG",26,0)
 D ^DIR K DIR G:$D(DIRUT) QUIT S ECY=Y
"RTN","ECXPURG",27,0)
 I ECY="E" D ^ECXPURG1 I $D(ECLOC) S ZTSAVE("ECLOC(")="",ZTIO="",ZTRTN="PUR1^ECXPURG",ZTDESC="DSS - Purge of Extract Files" D QUE
"RTN","ECXPURG",28,0)
 I ECY="I" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR2^ECXPURG",ZTDESC="DSS - Purge of IVP Holding File" D QUE
"RTN","ECXPURG",29,0)
 I ECY="U" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR3^ECXPURG",ZTDESC="DSS - Purge of UDP Holding File" D QUE
"RTN","ECXPURG",30,0)
 I ECY="V" D DATES^ECXPURG1 I $D(ECBDT)&($D(ECEDT)) S (ZTSAVE("ECBDT"),ZTSAVE("ECEDT"))="",ZTIO="",ZTRTN="PUR4^ECXPURG",ZTDESC="DSS - Purge of VBECS Holding File" D QUE
"RTN","ECXPURG",31,0)
QUIT ;
"RTN","ECXPURG",32,0)
 K %X,%Y,EC,ECBDT,ECDATE,ECDT,ECEDT,ECEX,ECFR,ECLOC,ECRC,ECTO,ECTRN,ECTYP,ECY,HDT,HI,JJ,LN,LO,PG,QFLG,SS,X,Y,ZTSK
"RTN","ECXPURG",33,0)
 K ECXDIV
"RTN","ECXPURG",34,0)
 S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG",35,0)
 Q
"RTN","ECXPURG",36,0)
QUE W $C(7),$C(7),!!?3,"<<This purge should be queued to run during non-peak hours.>>",!
"RTN","ECXPURG",37,0)
 D ^%ZTLOAD
"RTN","ECXPURG",38,0)
 I $D(ZTSK) W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXPURG",39,0)
 Q
"RTN","ECXPURG",40,0)
 ;
"RTN","ECXPURG",41,0)
PUR1 ; entry point for queued purge job of extract files
"RTN","ECXPURG",42,0)
 S ECDA=0 F  S ECDA=$O(ECLOC(ECDA)) Q:'ECDA  D
"RTN","ECXPURG",43,0)
 .S ECFILE=^ECX(727,ECDA,"FILE"),ECJ=0
"RTN","ECXPURG",44,0)
 .I ECFILE=727.827 D
"RTN","ECXPURG",45,0)
 ..S DA(1)=1
"RTN","ECXPURG",46,0)
 ..S DA=$O(^ECX(728,DA(1),"CBOC","B",ECDA,0))
"RTN","ECXPURG",47,0)
 ..S DIK="^ECX(728,"_DA(1)_","_"""CBOC"""_","
"RTN","ECXPURG",48,0)
 ..I DA'="" D ^DIK K DIK,DA
"RTN","ECXPURG",49,0)
 .F  S ECJ=$O(^ECX(ECFILE,"AC",ECDA,ECJ)) Q:'ECJ  D
"RTN","ECXPURG",50,0)
 ..S DIK="^ECX("_ECFILE_",",DA=ECJ D ^DIK K DIK,DA
"RTN","ECXPURG",51,0)
 .I ECFILE=727.816 S ECFILE=727.818,ECJ=0 D
"RTN","ECXPURG",52,0)
 ..F  S ECJ=$O(^ECX(ECFILE,"AC",ECDA,ECJ)) Q:'ECJ  D
"RTN","ECXPURG",53,0)
 ...S DIK="^ECX("_ECFILE_",",DA=ECJ D ^DIK K DIK,DA
"RTN","ECXPURG",54,0)
 .S ^ECX(727,ECDA,"PURG")=DT
"RTN","ECXPURG",55,0)
 K XMY S XMY(DUZ)=""
"RTN","ECXPURG",56,0)
 D MAIL1,QUIT
"RTN","ECXPURG",57,0)
 Q
"RTN","ECXPURG",58,0)
 ;
"RTN","ECXPURG",59,0)
PUR2 ; entry point for queued purge job of IVP holding file (#728.113)
"RTN","ECXPURG",60,0)
 F ECDT=ECBDT-1:0 S ECDT=$O(^ECX(728.113,"A",ECDT)) Q:'ECDT  Q:ECDT>ECEDT  S ECPT=0 F  S ECPT=$O(^ECX(728.113,"A",ECDT,ECPT)) Q:'ECPT  D
"RTN","ECXPURG",61,0)
 .S ECOR=0 F  S ECOR=$O(^ECX(728.113,"A",ECDT,ECPT,ECOR)) Q:'ECOR  D
"RTN","ECXPURG",62,0)
 ..S ECREC=0 F  S ECREC=$O(^ECX(728.113,"A",ECDT,ECPT,ECOR,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",63,0)
 ...S DIK="^ECX(728.113,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",64,0)
 K XMY S XMY("G.DSS-IV")=""
"RTN","ECXPURG",65,0)
 D MAIL,QUIT
"RTN","ECXPURG",66,0)
 Q
"RTN","ECXPURG",67,0)
 ;
"RTN","ECXPURG",68,0)
PUR3 ; entry point for queued purge job of UDP holding file (#728.904)
"RTN","ECXPURG",69,0)
 F ECDT=ECBDT-1:0 S ECDT=$O(^ECX(728.904,"A",ECDT)) Q:'ECDT  Q:ECDT>(ECEDT+.99999999)  D
"RTN","ECXPURG",70,0)
 .S ECREC=0 F  S ECREC=$O(^ECX(728.904,"A",ECDT,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",71,0)
 ..S DIK="^ECX(728.904,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",72,0)
 K XMY S XMY("G.DSS-UD")=""
"RTN","ECXPURG",73,0)
 D MAIL,QUIT
"RTN","ECXPURG",74,0)
 Q
"RTN","ECXPURG",75,0)
MAIL ;send mail message
"RTN","ECXPURG",76,0)
 N XMSUB,XMDUZ,ECMSG,XMTEXT
"RTN","ECXPURG",77,0)
 S XMSUB=ZTDESC
"RTN","ECXPURG",78,0)
 S XMDUZ="DSS SYSTEM"
"RTN","ECXPURG",79,0)
 S ECMSG(1,0)="The information has been successfully PURGED"
"RTN","ECXPURG",80,0)
 S ECMSG(2,0)="from "_$$FMTE^XLFDT(ECBDT)_" to "_$$FMTE^XLFDT(ECEDT)
"RTN","ECXPURG",81,0)
 S ECMSG(3,0)=" "
"RTN","ECXPURG",82,0)
 S XMTEXT="ECMSG("
"RTN","ECXPURG",83,0)
 D ^XMD
"RTN","ECXPURG",84,0)
 Q
"RTN","ECXPURG",85,0)
 ;
"RTN","ECXPURG",86,0)
MAIL1 ;send mail message
"RTN","ECXPURG",87,0)
 N XMSUB,XMDUZ,ECMSG,XMTEXT
"RTN","ECXPURG",88,0)
 S XMSUB=ZTDESC
"RTN","ECXPURG",89,0)
 S XMDUZ="DSS SYSTEM"
"RTN","ECXPURG",90,0)
 S ECMSG(1,0)="The information has been successfully PURGED"
"RTN","ECXPURG",91,0)
 S ECMSG(2,0)=" "
"RTN","ECXPURG",92,0)
 S XMTEXT="ECMSG("
"RTN","ECXPURG",93,0)
 D ^XMD
"RTN","ECXPURG",94,0)
 Q
"RTN","ECXPURG",95,0)
 ;
"RTN","ECXPURG",96,0)
PUR4 ; entry point for queued purge job of VBECS holding file (#6002.03)
"RTN","ECXPURG",97,0)
 N ECDT,ECREC,DIK,DA
"RTN","ECXPURG",98,0)
 S ECDT=ECBDT-1,ECEDT=ECEDT+.9
"RTN","ECXPURG",99,0)
 F  S ECDT=$O(^VBEC(6002.03,"C",ECDT)) Q:'ECDT!(ECDT>ECEDT)  D
"RTN","ECXPURG",100,0)
 .S ECREC=0 F  S ECREC=$O(^VBEC(6002.03,"C",ECDT,ECREC)) Q:'ECREC  D
"RTN","ECXPURG",101,0)
 ..S DIK="^VBEC(6002.03,",DA=ECREC D ^DIK K DIK,DA
"RTN","ECXPURG",102,0)
 K XMY S XMY(DUZ)=""
"RTN","ECXPURG",103,0)
 D MAIL1,QUIT
"RTN","ECXPURG",104,0)
 Q
"RTN","ECXPURG1")
0^23^B36829694
"RTN","ECXPURG1",1,0)
ECXPURG1 ;BIR/CML-Purge of DSS Extract Files (CONTINUED) ; 10/2/08 10:48am
"RTN","ECXPURG1",2,0)
 ;;3.0;DSS EXTRACTS;**2,9,8,24,49,102,112**;Dec 22, 1997;Build 26
"RTN","ECXPURG1",3,0)
GET ;compile list of purgable extracts
"RTN","ECXPURG1",4,0)
 K HI,LO,ECBDT,ECEDT,ECLOC,^TMP("ECXPURG",$J)
"RTN","ECXPURG1",5,0)
 S QFLG=1 W !!,"...one moment please"
"RTN","ECXPURG1",6,0)
 S ECEX=0 F  S ECEX=$O(^ECX(727,ECEX)) Q:'ECEX  I '$G(^ECX(727,ECEX,"PURG")),$D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",7,0)
 .S ^TMP("ECXPURG",$J,$P(EC,U,3),ECEX)="",ECLOC(ECEX)=$P(EC,U,3)_U_$P(EC,U,4,5)
"RTN","ECXPURG1",8,0)
 I '$D(^TMP("ECXPURG",$J)) W !!,"There are no extracts that can be purged at this time." G DONE
"RTN","ECXPURG1",9,0)
ASK1 ;ask for print
"RTN","ECXPURG1",10,0)
 W !
"RTN","ECXPURG1",11,0)
 K DIR S DIR(0)="Y",DIR("A")="Do you want to print a list of extracts that can be purged",DIR("B")="NO"
"RTN","ECXPURG1",12,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",13,0)
 G:'Y ASK2
"RTN","ECXPURG1",14,0)
 W !!,"The right margin for this report is 80.",!!
"RTN","ECXPURG1",15,0)
 K ZTSAVE S ZTSAVE("^TMP(""ECXPURG"",$J,")=""
"RTN","ECXPURG1",16,0)
 D EN^XUTMDEVQ("PRT^ECXPURG1","DSS - Print Purgable Extracts",.ZTSAVE) I 'POP G ASK2
"RTN","ECXPURG1",17,0)
 W !,"NO DEVICE SELECTED OR REPORT PRINTED!!"
"RTN","ECXPURG1",18,0)
ASK2 ;ask for extract range
"RTN","ECXPURG1",19,0)
 ;
"RTN","ECXPURG1",20,0)
 ;** Check divisions for purging
"RTN","ECXPURG1",21,0)
 N ECCHK,ECTMP
"RTN","ECXPURG1",22,0)
 S ECCHK=$$DIV4^XUSER(.ECTMP,DUZ)
"RTN","ECXPURG1",23,0)
 I 'ECCHK DO
"RTN","ECXPURG1",24,0)
 .W !,"You do not have any divisions defined in your user set up and can not purge."
"RTN","ECXPURG1",25,0)
 .S DIR(0)="FAO^1:1",DIR("A")="Hit Return to continue." D ^DIR K DIR,X,Y
"RTN","ECXPURG1",26,0)
 .K ECLOC
"RTN","ECXPURG1",27,0)
 ;
"RTN","ECXPURG1",28,0)
 I 'ECCHK G DONE  ;** (essentially) QUIT out of middle
"RTN","ECXPURG1",29,0)
 ;
"RTN","ECXPURG1",30,0)
 W !,"You will not be able to select an extract that is not from your division.",!
"RTN","ECXPURG1",31,0)
 S LO=$O(ECLOC(0)),HI=$O(ECLOC(" "),-1)
"RTN","ECXPURG1",32,0)
 S DIR(0)="L^"_LO_":"_HI_"",DIR("A")="Select extracts to be purged"
"RTN","ECXPURG1",33,0)
 S DIR("?",1)="Choose the number(s) of the extract(s) you wish to purge,",DIR("?")="(e.g. 1-3,17,20 to choose 1 thru 3, 17, and 20)."
"RTN","ECXPURG1",34,0)
 W ! D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",35,0)
 S JJ=0,Y=","_Y F  S JJ=$O(ECLOC(JJ)) Q:'JJ  S JZ=","_JJ_"," I Y'[JZ K ECLOC(JJ)
"RTN","ECXPURG1",36,0)
 D CBOCCHK(.ECLOC) I '$D(ECLOC) G GET
"RTN","ECXPURG1",37,0)
 D DIVCHK(.ECLOC,.ECTMP)
"RTN","ECXPURG1",38,0)
 I '$D(ECLOC) W !!,"You have not chosen a valid extract number.  Try again." G GET
"RTN","ECXPURG1",39,0)
ASK3 W !!,"I will purge the following extract(s):"
"RTN","ECXPURG1",40,0)
 S JJ=0 F  S JJ=$O(ECLOC(JJ)) Q:'JJ  D
"RTN","ECXPURG1",41,0)
 .W !?5,"#",JJ," - ",$P(ECLOC(JJ),U)
"RTN","ECXPURG1",42,0)
 .W ?47,$TR($$FMTE^XLFDT($P(ECLOC(JJ),U,2),"5DF")," ","0")," to ",$TR($$FMTE^XLFDT($P(ECLOC(JJ),U,3),"5DF")," ","0")
"RTN","ECXPURG1",43,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",44,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",45,0)
 S DIR("?",2)="      ""YES"" if you agree with this list and would like to proceed,"
"RTN","ECXPURG1",46,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",47,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",48,0)
 D ^DIR K DIR I $D(DIRUT) K ECLOC G DONE
"RTN","ECXPURG1",49,0)
 I 'Y G GET
"RTN","ECXPURG1",50,0)
 ; at this point, the local array ECLOC( is passed back to ^ECXPURG
"RTN","ECXPURG1",51,0)
 G DONE
"RTN","ECXPURG1",52,0)
QUIT ;
"RTN","ECXPURG1",53,0)
 I $E(IOST)="C"&('QFLG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECXPURG1",54,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",55,0)
 W:$E(IOST)'="C" @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECXPURG1",56,0)
DONE K ^TMP("ECXPURG",$J),ZTSK Q
"RTN","ECXPURG1",57,0)
PRT ;print list of extracts
"RTN","ECXPURG1",58,0)
 S (PG,QFLG)=0,$P(LN,"-",81)="" D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") S HDT=Y D HDR
"RTN","ECXPURG1",59,0)
 S ECTYP="" F  S ECTYP=$O(^TMP("ECXPURG",$J,ECTYP)) Q:ECTYP=""  Q:QFLG  D:$Y+4>IOSL HDR Q:QFLG  W !!,ECTYP D
"RTN","ECXPURG1",60,0)
 .S ECEX=0 F  S ECEX=$O(^TMP("ECXPURG",$J,ECTYP,ECEX)) Q:'ECEX  Q:QFLG  I $D(^ECX(727,ECEX,0)) S EC=^(0) D
"RTN","ECXPURG1",61,0)
 ..S ECDT=$$FMTE^XLFDT($P(EC,U,2),"D")
"RTN","ECXPURG1",62,0)
 ..S ECFR=$TR($$FMTE^XLFDT($P(EC,U,4),"5DF")," ","0")
"RTN","ECXPURG1",63,0)
 ..S ECTO=$TR($$FMTE^XLFDT($P(EC,U,5),"5DF")," ","0")
"RTN","ECXPURG1",64,0)
 ..S ECRC=$P(EC,U,6) S:ECRC="" ECRC="Incomplete"
"RTN","ECXPURG1",65,0)
 ..S ECTRN=$$FMTE^XLFDT($G(^ECX(727,ECEX,"TR")),"D")
"RTN","ECXPURG1",66,0)
 ..S ECXDIV=$P($G(^ECX(727,ECEX,"DIV")),U,1) I ECXDIV D
"RTN","ECXPURG1",67,0)
 ...K ECXDIC S DA=ECXDIV,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPURG1",68,0)
 ...D EN^DIQ1 S ECXDIV=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPURG1",69,0)
 ..D:$Y+3>IOSL HDR Q:QFLG
"RTN","ECXPURG1",70,0)
 ..W !?1,ECEX,?11,ECDT,?25,ECFR,"-",ECTO,?48,$J(ECRC,9),?60,ECTRN,?75,ECXDIV
"RTN","ECXPURG1",71,0)
 G QUIT
"RTN","ECXPURG1",72,0)
HDR ;HEADER
"RTN","ECXPURG1",73,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXPURG1",74,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXPURG1",75,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"PURGABLE EXTRACTS",?72,"Page: ",PG,!,"Printed on ",HDT,!
"RTN","ECXPURG1",76,0)
 W !,"FEEDER SYS",?12,"EXTRACT,",!,"EXTRACT #",?12,"DATE",?33,"FROM-TO",?48,"RECORD CNT",?60,"TRANSMIT DATE",?75,"DIV",!,LN
"RTN","ECXPURG1",77,0)
 Q
"RTN","ECXPURG1",78,0)
DATES ;ask for date range for purge of holding files
"RTN","ECXPURG1",79,0)
 K HI,LO,ECBDT,ECEDT
"RTN","ECXPURG1",80,0)
 I ECY="I" D
"RTN","ECXPURG1",81,0)
 .I '$O(^ECX(728.113,0)) W !!,"You have no data in the IVP holding file (file #728.113) to purge." Q
"RTN","ECXPURG1",82,0)
 .S LO=$O(^ECX(728.113,"A",0)),HI=$O(^ECX(728.113,"A"," "),-1)
"RTN","ECXPURG1",83,0)
 I ECY="U" D
"RTN","ECXPURG1",84,0)
 .I '$O(^ECX(728.904,0)) W !!,"You have no data in the UDP holding file (file #728.904) to purge." Q
"RTN","ECXPURG1",85,0)
 .S LO=$O(^ECX(728.904,"A",0)),HI=$O(^ECX(728.904,"A"," "),-1)
"RTN","ECXPURG1",86,0)
 I ECY="V" D
"RTN","ECXPURG1",87,0)
 .I '$O(^VBEC(6002.03,0)) W !!,"You have no data in the VBECS holding file (file #6002.03) to purge." Q
"RTN","ECXPURG1",88,0)
 .S LO=$O(^VBEC(6002.03,"C",0)),HI=$O(^VBEC(6002.03,"C"," "),-1)
"RTN","ECXPURG1",89,0)
 Q:$G(LO)=""
"RTN","ECXPURG1",90,0)
 W @IOF,!!,"This file currently holds ",$S(ECY="I":"IVP",ECY="U":"UDP",1:"VBECS")," data from <",$$FMTE^XLFDT(LO,"D"),"> to <",$$FMTE^XLFDT(HI,"D"),">."
"RTN","ECXPURG1",91,0)
 W ! K DIR S DIR(0)="DA^"_LO_":"_HI_":EPX",DIR("A")="Beginning date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO Q
"RTN","ECXPURG1",92,0)
 S ECBDT=+Y
"RTN","ECXPURG1",93,0)
 K DIR S DIR(0)="DA^"_ECBDT_":"_HI_":EPX",DIR("A")="Ending date for purge: " D ^DIR K DIR I $D(DIRUT) K HI,LO,ECBDT Q
"RTN","ECXPURG1",94,0)
 S ECEDT=+Y
"RTN","ECXPURG1",95,0)
ASK4 ; ask to confirm date range
"RTN","ECXPURG1",96,0)
 W !!,"I will purge the ",$S(ECY="I":"IVP",ECY="U":"UDP",1:"VBECS")," holding file from <",$$FMTE^XLFDT(ECBDT,"D"),"> to <",$$FMTE^XLFDT(ECEDT,"D"),">."
"RTN","ECXPURG1",97,0)
 W !! K DIR S DIR(0)="Y",DIR("A")="Is this OK",DIR("B")="NO"
"RTN","ECXPURG1",98,0)
 S DIR("?",1)="    Enter:"
"RTN","ECXPURG1",99,0)
 S DIR("?",2)="      ""YES"" if you agree with this date range and wish to proceed,"
"RTN","ECXPURG1",100,0)
 S DIR("?",3)="       ""NO"" if you would like to make a different selection, or"
"RTN","ECXPURG1",101,0)
 S DIR("?")="        ""^"" to exit option."
"RTN","ECXPURG1",102,0)
 D ^DIR K DIR I $D(DIRUT) K ECBDT,ECEDT Q 
"RTN","ECXPURG1",103,0)
 I 'Y G DATES
"RTN","ECXPURG1",104,0)
 ; at this point, ECBDT and ECEDT are passed back to ^ECXPURG
"RTN","ECXPURG1",105,0)
 Q
"RTN","ECXPURG1",106,0)
 ;
"RTN","ECXPURG1",107,0)
DIVCHK(ECLOC,ECTMP) ;**Remove extracts from ECLOC that are for user's div.
"RTN","ECXPURG1",108,0)
 N ECLPDA
"RTN","ECXPURG1",109,0)
 S ECLPDA=0
"RTN","ECXPURG1",110,0)
 F  S ECLPDA=$O(ECLOC(ECLPDA)) Q:(+ECLPDA=0)  DO
"RTN","ECXPURG1",111,0)
 .I '$D(ECTMP($P(^ECX(727,ECLPDA,"DIV"),U,1))) KILL ECLOC(ECLPDA)
"RTN","ECXPURG1",112,0)
 Q
"RTN","ECXPURG1",113,0)
CBOCCHK(ECLOC) ;**Check that CBOC report has been viewed prior to purging
"RTN","ECXPURG1",114,0)
 N LOOPDA,YYYMMDD
"RTN","ECXPURG1",115,0)
 S LOOPDA=0
"RTN","ECXPURG1",116,0)
 F  S LOOPDA=$O(ECLOC(LOOPDA)) Q:(+LOOPDA=0)  D
"RTN","ECXPURG1",117,0)
 .I ^ECX(727,LOOPDA,"HEAD")="CLI" D
"RTN","ECXPURG1",118,0)
 ..S DA(1)=1
"RTN","ECXPURG1",119,0)
 ..S YYYMMDD=$P(^ECX(727,LOOPDA,0),U,4)
"RTN","ECXPURG1",120,0)
 ..I YYYMMDD>3030930 I '$D(^ECX(728,DA(1),"CBOC","B",LOOPDA)) D
"RTN","ECXPURG1",121,0)
 ...K DIR S DIR(0)="Y",DIR("A")="The CBOC Activity Report has not been viewed.  Purge anyway",DIR("B")="NO"
"RTN","ECXPURG1",122,0)
 ...D ^DIR K DIR I 'Y K ECLOC(LOOPDA)
"RTN","ECXPURG1",123,0)
 Q
"RTN","ECXSCLD")
0^22^B41231868
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ; 10/10/08 2:39pm
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80,105,112**;Dec 22, 1997;Build 26
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES file.",!
"RTN","ECXSCLD",6,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",7,0)
 K ZTSAVE S ZTDESC="Gather Clinic stop codes for DSS",ZTRTN="START^ECXSCLD",ZTIO="" D ^%ZTLOAD
"RTN","ECXSCLD",8,0)
 Q
"RTN","ECXSCLD",9,0)
START ; entry point
"RTN","ECXSCLD",10,0)
 S EC=0,ECNT=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S ECD=^(0),DAT=$G(^("I")) I $P(ECD,U,3)="C" D FIX
"RTN","ECXSCLD",11,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",12,0)
 ;S $P(^ECX(728.44,0),U,3,4)=ECL_U_ECNT
"RTN","ECXSCLD",13,0)
 K ZTDESC,EC,J,ECD,ECD2,ECL,ECS,ECS2,ECP
"RTN","ECXSCLD",14,0)
 S ZTREQ="@" Q
"RTN","ECXSCLD",15,0)
 ;
"RTN","ECXSCLD",16,0)
FIX ; get stop codes and default style for feeder key
"RTN","ECXSCLD",17,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",18,0)
 K ECD2,ECS2 I $D(^ECX(728.44,EC,0)) S ECD2=^(0) F ECS=2,3 S ECS2(ECS)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",19,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",20,0)
 I $D(ECD2) D
"RTN","ECXSCLD",21,0)
 .I ID,ID'>DT I 'RD!(RD>DT) S:$P(ECD2,U,10)'=ID $P(ECD2,U,7)="" S $P(ECD2,U,10)=ID
"RTN","ECXSCLD",22,0)
 .I ID,RD,RD'>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",23,0)
 .I ID,ID>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",24,0)
 .I 'ID,$P(ECD2,U,10) S $P(ECD2,U,7)="",$P(ECD2,U,10)=""
"RTN","ECXSCLD",25,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)
"RTN","ECXSCLD",26,0)
 S ECDF=$S(ECS(18)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",27,0)
 S ECL=EC,ECD=EC_U_ECS(7)_U_ECS(18)
"RTN","ECXSCLD",28,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",29,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECD_U_ECS(7)_U_ECS(18),ECNT=ECNT+1,$P(^(0),U,6)=ECDF
"RTN","ECXSCLD",30,0)
 I $D(ECD2) D
"RTN","ECXSCLD",31,0)
 .S $P(ECD2,U,1,3)=ECD
"RTN","ECXSCLD",32,0)
 .I +ECS(7)'=+ECS2(2)!(+ECS(18)'=+ECS2(3)) S $P(ECD2,U,7)=""
"RTN","ECXSCLD",33,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",34,0)
 Q
"RTN","ECXSCLD",35,0)
 ;
"RTN","ECXSCLD",36,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",37,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",38,0)
 W !!,"This option produces a worksheet of (A) All Clinics, (C) Active, (I) Inactive, "
"RTN","ECXSCLD",39,0)
 W !,"or only the (U) Unreviewed Clinics that are awaiting"
"RTN","ECXSCLD",40,0)
 W !,"approval.  Clinics that were defined as ""inactive"" by MAS the last time"
"RTN","ECXSCLD",41,0)
 W !,"the option ""Create DSS Clinic Stop Code File"" was run will be indicated",!,"with an ""*"".",!
"RTN","ECXSCLD",42,0)
 S DIR(0)="S^A:ALL CLINICS;C:ALL ACTIVE CLINICS;I:ALL INACTIVE CLINICS;U:UNREVIEWED CLINICS",DIR("A")="Enter ""A"", ""C"", ""I"", or ""U"""
"RTN","ECXSCLD",43,0)
 S DIR("?",1)="Enter: ""C"" to print a worksheet of all active DSS Clinic Stops,"
"RTN","ECXSCLD",44,0)
 S DIR("?",2)="Enter: ""I"" to print a worksheet of all inactive DSS Clinic  Stops,"
"RTN","ECXSCLD",45,0)
 S DIR("?",3)="Enter: ""A"" to print a worksheet of all DSS Clinic  Stops,"
"RTN","ECXSCLD",46,0)
 S DIR("?")="       ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",47,0)
 D ^DIR K DIR G END:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",48,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",49,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",50,0)
 U IO
"RTN","ECXSCLD",51,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",52,0)
 S QFLG=0,$P(LN,"-",81)="",PG=0
"RTN","ECXSCLD",53,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",54,0)
 K ^TMP("EC",$J)
"RTN","ECXSCLD",55,0)
 F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)) S ECSD=^(0) D
"RTN","ECXSCLD",56,0)
 . I ECALL="A" I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",57,0)
 . I (ECALL="I"),($P(ECSD,U,10)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",58,0)
 . I ((ECALL="C")&($P(ECSD,U,10)=""))!((ECALL="C")&($P(ECSD,U,10)>DT)) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",59,0)
 . I (ECALL="U"),($P(ECSD,U,7)="") I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",60,0)
 D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! G END
"RTN","ECXSCLD",61,0)
 F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^(ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",62,0)
 I $E(IOST)="C",'QFLG D SS
"RTN","ECXSCLD",63,0)
 K ^TMP("EC",$J),J,ECSC,ECSD,ECDATE,QFLG,PG,LN,SS
"RTN","ECXSCLD",64,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",65,0)
 Q
"RTN","ECXSCLD",66,0)
 ;
"RTN","ECXSCLD",67,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",68,0)
 D SS Q:QFLG
"RTN","ECXSCLD",69,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?71,"Page: ",PG
"RTN","ECXSCLD",70,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",71,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",72,0)
 W !
"RTN","ECXSCLD",73,0)
 W !!,?1,"CLINIC",?31,"STOP",?38,"CREDIT",?47,"DSS",?54,"DSS",?63,"ACTION",?71,"NAT'L"
"RTN","ECXSCLD",74,0)
 W !,?31,"CODE",?38,"STOP",?47,"STOP",?54,"CREDIT",?71,"CODE",!,?1,"(* - currently inactive)",?38,"CODE",?47,"CODE",?54,"CODE",!,LN Q
"RTN","ECXSCLD",75,0)
 ;
"RTN","ECXSCLD",76,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",77,0)
 I $Y+4>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",78,0)
 W !!,$E(ECSC,1,31) W:$P(ECD,U,9)]"" "*" F J=1:1:5 W ?$P("31,38,47,54,66",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",79,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?71,$S(ECN]"":ECN,1:"____")
"RTN","ECXSCLD",80,0)
 Q
"RTN","ECXSCLD",81,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",82,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",83,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",84,0)
 Q
"RTN","ECXSCLD",85,0)
 ;
"RTN","ECXSCLD",86,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",87,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",88,0)
 W ! S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G END:Y<0 W !,"STOP CODE : ",$P(Y(0),U,2),!,"CREDIT STOP CODE : ",$P(Y(0),U,3)
"RTN","ECXSCLD",89,0)
 S DIE=728.44,DA=+Y,DR="3;4;5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)="" K DIC,DIE,DA,ERR G EDIT
"RTN","ECXSCLD",90,0)
 ;
"RTN","ECXSCLD",91,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",92,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",93,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",94,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",95,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",96,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",97,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",98,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",99,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G END
"RTN","ECXSCLD",100,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G END
"RTN","ECXSCLD",101,0)
 ;
"RTN","ECXSCLD",102,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",103,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^(EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",104,0)
 S ZTREQ="@" G END
"RTN","ECXSCLD",105,0)
END K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN
"RTN","ECXSCLD",106,0)
 Q
"RTN","ECXSCLD",107,0)
 ;
"RTN","ECXSCLD",108,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",109,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",110,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)),$P(^(0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",111,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",112,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",113,0)
 D ^ECXSCX1
"RTN","ECXSCLD",114,0)
 Q
"RTN","ECXSURG")
0^16^B53305760
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 7/16/08 10:54am
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92,99,105,112**;Dec 22, 1997;Build 26
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",10,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",11,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",12,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",13,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSURG",15,0)
 Q
"RTN","ECXSURG",16,0)
 ;
"RTN","ECXSURG",17,0)
STUFF ;gather data
"RTN","ECXSURG",18,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",19,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",20,0)
 N ECXCRST,ECXSTCD,ECXCLIN
"RTN","ECXSURG",21,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXSURG",22,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",23,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",24,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",25,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;5",.ECXPAT)
"RTN","ECXSURG",26,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSURG",27,0)
 ;OEF/OIF DATA
"RTN","ECXSURG",28,0)
 S ECXOEF=ECXPAT("ECXOEF")
"RTN","ECXSURG",29,0)
 S ECXOEFDT=ECXPAT("ECXOEFDT")
"RTN","ECXSURG",30,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",31,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",32,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",33,0)
 S DATAOP=$S($D(^SRO(136,ECD0,0)):^(0),1:"")
"RTN","ECXSURG",34,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",35,0)
 ; if VISIT data exist get encounter data
"RTN","ECXSURG",36,0)
 ; ECX*112
"RTN","ECXSURG",37,0)
 S ECXVST=$P(^SRF(ECD0,0),U,15) D:ECXVST'=""
"RTN","ECXSURG",38,0)
 . Q:'$D(^AUPNVSIT(ECXVST,800))
"RTN","ECXSURG",39,0)
 . S ECENSC=$P(^AUPNVSIT(ECXVST,800),U,1)
"RTN","ECXSURG",40,0)
 . S ECENSC=$S(ECENSC=0:"N",ECENSC=1:"Y",1:"")
"RTN","ECXSURG",41,0)
 ;get data
"RTN","ECXSURG",42,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",43,0)
 S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",44,0)
 S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",45,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",46,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",47,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",48,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",49,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",50,0)
 S ECSANPI=$$NPI^XUSNPI("Individual_ID",ECSA,ECXDATE)
"RTN","ECXSURG",51,0)
 S:+ECSANPI'>0 ECSANPI="" S ECSANPI=$P(ECSANPI,U)
"RTN","ECXSURG",52,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",53,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",54,0)
 S ECPANPI=$$NPI^XUSNPI("Individual_ID",ECXPA,ECXDATE)
"RTN","ECXSURG",55,0)
 S:+ECPANPI'>0 ECPANPI="" S ECPANPI=$P(ECPANPI,U)
"RTN","ECXSURG",56,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",57,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",58,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",59,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",60,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",61,0)
 ;get classification information
"RTN","ECXSURG",62,0)
 S (ECXAO,ECXHNC)="" I ECXVISIT'="" D
"RTN","ECXSURG",63,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",64,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",65,0)
 .S ECENRI=$G(ECXVIST("IR")),ECENMST=$G(ECXVIST("MST"))
"RTN","ECXSURG",66,0)
 .S ECENEC=$G(ECXVIST("PGE"))
"RTN","ECXSURG",67,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",68,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",69,0)
 ;look for non-OR
"RTN","ECXSURG",70,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",71,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",72,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",73,0)
 .S ECSRNPI=$$NPI^XUSNPI("Individual_ID",ECSR,ECXDATE)
"RTN","ECXSURG",74,0)
 .S:+ECSRNPI'>0 ECSRNPI="" S ECSRNPI=$P(ECSRNPI,U)
"RTN","ECXSURG",75,0)
 .S ECATNPI=$$NPI^XUSNPI("Individual_ID",ECAT,ECXDATE)
"RTN","ECXSURG",76,0)
 .S:+ECATNPI'>0 ECATNPI="" S ECATNPI=$P(ECATNPI,U)
"RTN","ECXSURG",77,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",78,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",79,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",80,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",81,0)
 .;
"RTN","ECXSURG",82,0)
 .;- Get Primary or DSS Stop Code to use in encounter number
"RTN","ECXSURG",83,0)
 .N P1 ;primary stop
"RTN","ECXSURG",84,0)
 .D FEEDER^ECXSCX1(+$P(EC0,U,21),ECXDATE,.P1,,,,) S ECXSTOP=$E(P1,1,3)
"RTN","ECXSURG",85,0)
 .S ECXSTOP=$S(ECXSTOP:ECXSTOP,1:$P($G(^ECX(728.44,ECXNONL,0)),U,4))
"RTN","ECXSURG",86,0)
 ;
"RTN","ECXSURG",87,0)
 ;- Get credit stop, stop code and clinic
"RTN","ECXSURG",88,0)
 I $$SUR^ECXUTL6(.ECXCRST,.ECXSTCD,.ECXCLIN)
"RTN","ECXSURG",89,0)
 ;
"RTN","ECXSURG",90,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",91,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",92,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",93,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",94,0)
 ;get service of attending surgeon
"RTN","ECXSURG",95,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",96,0)
 ;
"RTN","ECXSURG",97,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",98,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",99,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",100,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",101,0)
 ;
"RTN","ECXSURG",102,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",103,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",104,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",105,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",106,0)
 ;anesthesia technique
"RTN","ECXSURG",107,0)
 S ECANE="",PP=""
"RTN","ECXSURG",108,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",109,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",110,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",111,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",112,0)
 ;get primary procedure
"RTN","ECXSURG",113,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",114,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",115,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",116,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",117,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",118,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",119,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",120,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",121,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",122,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",123,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",124,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",125,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",126,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",127,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",128,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",129,0)
 ..;
"RTN","ECXSURG",130,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",131,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",132,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",133,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",134,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",135,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",136,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",137,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",138,0)
 ; -Recovery Room Time
"RTN","ECXSURG",139,0)
 S ECRR=""
"RTN","ECXSURG",140,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",141,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",142,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",143,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",144,0)
 ;
"RTN","ECXSURG",145,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",146,0)
 S ECXORCT=($$FMDIFF^XLFDT($P($G(DATA2),U,14),$P($G(DATA2),U,13),2)/60)/15
"RTN","ECXSURG",147,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",148,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",149,0)
 ;
"RTN","ECXSURG",150,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",151,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",152,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",153,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",154,0)
 .I CON S ECXPTHA=ECXPTHA/2
"RTN","ECXSURG",155,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",156,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",157,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",158,0)
 ;
"RTN","ECXSURG",159,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",160,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",161,0)
 ;
"RTN","ECXSURG",162,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",163,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",164,0)
 ;
"RTN","ECXSURG",165,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",166,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",167,0)
 ;
"RTN","ECXSURG",168,0)
 ;- Get postop diagnosis codes
"RTN","ECXSURG",169,0)
 I $$SURPODX^ECXUTL6(.ECXPODX,.ECXPODX1,.ECXPODX2,.ECXPODX3,.ECXPODX4,.ECXPODX5)
"RTN","ECXSURG",170,0)
 ;
"RTN","ECXSURG",171,0)
 D FILE^ECXSURG1
"RTN","ECXSURG",172,0)
 ;get secondary procedures
"RTN","ECXSURG",173,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",174,0)
 S ECXJ=0
"RTN","ECXSURG",175,0)
 F  S ECXJ=$O(^SRO(136,ECD0,3,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(0)),$P(^(0),"^")]"" D
"RTN","ECXSURG",176,0)
 .;S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",177,0)
 .S ECPT=$P(^SRO(136,ECD0,3,ECXJ,0),U),ECXMOD=""
"RTN","ECXSURG",178,0)
 .S ECPT=$P(^(0),"^"),ECXCMOD=""
"RTN","ECXSURG",179,0)
 .K ARR,ERR
"RTN","ECXSURG",180,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",181,0)
 ..K ARR,ERR
"RTN","ECXSURG",182,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",183,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",184,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",185,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",186,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",187,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",188,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",189,0)
 ;get prostheses
"RTN","ECXSURG",190,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",191,0)
 S ECXJ=0
"RTN","ECXSURG",192,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",193,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",194,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",195,0)
 .D FILE^ECXSURG1
"RTN","ECXSURG",196,0)
 Q
"RTN","ECXSURG",197,0)
 ;
"RTN","ECXSURG",198,0)
 ;
"RTN","ECXSURG",199,0)
TIME ; given date/time get increment
"RTN","ECXSURG",200,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",201,0)
 N CON,TIMEDIF
"RTN","ECXSURG",202,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",203,0)
 ;
"RTN","ECXSURG",204,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",205,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",206,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",207,0)
 I 'CON D
"RTN","ECXSURG",208,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",209,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",210,0)
 I CON D
"RTN","ECXSURG",211,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",212,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",213,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",214,0)
 Q
"RTN","ECXSURG",215,0)
 ;
"RTN","ECXSURG",216,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",217,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",218,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",219,0)
 Q
"RTN","ECXSURG",220,0)
 ;
"RTN","ECXSURG",221,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",222,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSURG1")
0^18^B14336843
"RTN","ECXSURG1",1,0)
ECXSURG1 ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 4/21/08 5:07pm
"RTN","ECXSURG1",2,0)
 ;;3.0;DSS EXTRACTS;**105,112**;Dec 22, 1997;Build 26
"RTN","ECXSURG1",3,0)
 ;
"RTN","ECXSURG1",4,0)
FILE ;file record
"RTN","ECXSURG1",5,0)
 ;node0
"RTN","ECXSURG1",6,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG1",7,0)
 ;surg specialty^or room #^
"RTN","ECXSURG1",8,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG1",9,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG1",10,0)
 ;prostheses^qty^^
"RTN","ECXSURG1",11,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG1",12,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG1",13,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG1",14,0)
 ;node1
"RTN","ECXSURG1",15,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG1",16,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG1",17,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG1",18,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG1",19,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG1",20,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG1",21,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG1",22,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG1",23,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG1",24,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG1",25,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG1",26,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG1",27,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG1",28,0)
 ;node2
"RTN","ECXSURG1",29,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG1",30,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG1",31,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG1",32,0)
 ;OEF/OIF ECXOEF^OEF/OIF return date ECXOEFDT^clinic pointer ECXCLIN
"RTN","ECXSURG1",33,0)
 ;credit stop ECXCRST^stop code ECXSTCD^princ postop diagnosis code
"RTN","ECXSURG1",34,0)
 ;ECXPODX^other postop diagnosis code #1 ECXPODX1^other postop
"RTN","ECXSURG1",35,0)
 ;diagnosis code #2 ECXPODX2^ other postop diag code #3 ECXPODX3^
"RTN","ECXSURG1",36,0)
 ;other postop diag code #4 ECXPODX4^other postop diag code #5
"RTN","ECXSURG1",37,0)
 ;ECXPODX5^anesthesia sup npi ECSANPI^assoc pc prov npi ECASNPI^
"RTN","ECXSURG1",38,0)
 ;attending surgeon npi ECATNPI^primary care provider npi ECPTNPI^
"RTN","ECXSURG1",39,0)
 ;principle anesthetist npi ECPANPI^surgeon npi ECSRNPI
"RTN","ECXSURG1",40,0)
 ;encounter ec ECENEC^radiation encounter indicator ECENRI^
"RTN","ECXSURG1",41,0)
 ;mst encounter indicator ECENMST^encounter sc ECENSC^
"RTN","ECXSURG1",42,0)
 ;agent orange status ECXAST^
"RTN","ECXSURG1",43,0)
 ;environmental contaminants ECXEST^radiation status ECXRST^
"RTN","ECXSURG1",44,0)
 ;mst status ECXMST^
"RTN","ECXSURG1",45,0)
 ;
"RTN","ECXSURG1",46,0)
 N DA,DIK,STR
"RTN","ECXSURG1",47,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG1",48,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG1",49,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG1",50,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG1",51,0)
 S STR=ECXMN_U_ECXTS_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG1",52,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG1",53,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG1",54,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_U_U_U_U
"RTN","ECXSURG1",55,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG1",56,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG1",57,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG1",58,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG1",59,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG1",60,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG1",61,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG1",62,0)
 I ECXLOGIC>2007 S ECODE2=ECODE2_U_ECXOEF_U_ECXOEFDT_U_ECXCLIN_U_ECXCRST_U_ECXSTCD_U_ECXPODX_U_ECXPODX1_U_ECXPODX2_U_ECXPODX3_U_ECXPODX4_U_ECXPODX5_U_ECSANPI_U_ECASNPI_U_ECATNPI_U_ECPTNPI_U_ECPANPI_U_ECSRNPI
"RTN","ECXSURG1",63,0)
 I ECXLOGIC>2008 S ECODE2=ECODE2_U_$G(ECENEC)_U_$G(ECENRI)_U_$G(ECENMST)_U_$G(ECENSC)_U_$G(ECXAST)_U_$G(ECXEST)_U_$G(ECXRST)_U_$G(ECXMST)
"RTN","ECXSURG1",64,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXSURG1",65,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG1",66,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG1",67,0)
 ;
"RTN","ECXSURG1",68,0)
TIME ; given date/time get increment
"RTN","ECXSURG1",69,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG1",70,0)
 N CON,TIMEDIF
"RTN","ECXSURG1",71,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG1",72,0)
 ;
"RTN","ECXSURG1",73,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG1",74,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG1",75,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG1",76,0)
 I 'CON D
"RTN","ECXSURG1",77,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG1",78,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG1",79,0)
 I CON D
"RTN","ECXSURG1",80,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG1",81,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG1",82,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG1",83,0)
 Q
"RTN","ECXSURG1",84,0)
 ;
"RTN","ECXSURG1",85,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG1",86,0)
 S ECHEAD="SUR"
"RTN","ECXSURG1",87,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG1",88,0)
 Q
"RTN","ECXSURG1",89,0)
 ;
"RTN","ECXSURG1",90,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG1",91,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTREX")
0^19^B11510953
"RTN","ECXTREX",1,0)
ECXTREX ;BPFO/JRP - Queue DSS Fiscal Year Specific Extract;8-AUG-2003 ; 6/23/08 9:18am
"RTN","ECXTREX",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,92,105,112**;Dec 22, 1997;Build 26
"RTN","ECXTREX",3,0)
 ;
"RTN","ECXTREX",4,0)
EN ;Main entry point
"RTN","ECXTREX",5,0)
 W @IOF
"RTN","ECXTREX",6,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","ECXTREX",7,0)
 W !,"****************************************************************"
"RTN","ECXTREX",8,0)
 W !,"*                                                              *"
"RTN","ECXTREX",9,0)
 W !,"* This option should be used with caution as it allows for the *"
"RTN","ECXTREX",10,0)
 W !,"* extraction of data using specified fiscal year logic.  This  *"
"RTN","ECXTREX",11,0)
 W !,"* gives the ability to extract fiscal year 200x data using     *"
"RTN","ECXTREX",12,0)
 W !,"* fiscal year 200(x+1) logic and vice versa.  Note that data   *"
"RTN","ECXTREX",13,0)
 W !,"* extracted via this method may or may not be transmittable to *"
"RTN","ECXTREX",14,0)
 W !,"* the DSS production queue at the Austin Automation Center.    *"
"RTN","ECXTREX",15,0)
 W !,"*                                                              *"
"RTN","ECXTREX",16,0)
 W !,"*--------------------------------------------------------------*"
"RTN","ECXTREX",17,0)
 W !,"*                                                              *"
"RTN","ECXTREX",18,0)
 W !,"* Note that this option does not update the last date used for *"
"RTN","ECXTREX",19,0)
 W !,"* the given extraction.  It also does not verify that the time *"
"RTN","ECXTREX",20,0)
 W !,"* frame selected is after the last date used for the extract.  *"
"RTN","ECXTREX",21,0)
 W !,"*                                                              *"
"RTN","ECXTREX",22,0)
 W !,"****************************************************************"
"RTN","ECXTREX",23,0)
 W !!
"RTN","ECXTREX",24,0)
 ;Pick extract to queue
"RTN","ECXTREX",25,0)
 S DIC="^ECX(727.1,"
"RTN","ECXTREX",26,0)
 S DIC(0)="AEQMZ"
"RTN","ECXTREX",27,0)
 S DIC("A")="Select DSS Extract to queue: "
"RTN","ECXTREX",28,0)
 S DIC("S")="I ('$P(^(0),U,12))&($P(^(0),U,8)'="""")&($G(^(7))'[""Inactive"")"
"RTN","ECXTREX",29,0)
 S DIC("W")="W ""("",$P(^(0),U,8),"")"""
"RTN","ECXTREX",30,0)
 D ^DIC
"RTN","ECXTREX",31,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y<1) Q
"RTN","ECXTREX",32,0)
 N ECXRTN,ECXDA
"RTN","ECXTREX",33,0)
 S ECXDA=+Y
"RTN","ECXTREX",34,0)
 ;Get extract specific routine name
"RTN","ECXTREX",35,0)
 S ECXRTN=$G(^ECX(727.1,ECXDA,"ROU"))
"RTN","ECXTREX",36,0)
 I ECXRTN="" D  Q
"RTN","ECXTREX",37,0)
 .W !!,"Selected extract is not correctly defined in the EXTRACT"
"RTN","ECXTREX",38,0)
 .W !,"DEFINITIONS file (#727.1).  The ROUTINE field (#4) does not"
"RTN","ECXTREX",39,0)
 .W !,"have a value in it."
"RTN","ECXTREX",40,0)
 .W !
"RTN","ECXTREX",41,0)
 .D PAUSE
"RTN","ECXTREX",42,0)
 ;Get time frame for extract
"RTN","ECXTREX",43,0)
 N STRTDT,ENDDT,DIR,DIRUT,DIROUT,OUT,ECXDATES
"RTN","ECXTREX",44,0)
 S OUT=0 F  S (STRTDT,ENDDT)="" D  Q:OUT
"RTN","ECXTREX",45,0)
 .;Get start date (must be in past)
"RTN","ECXTREX",46,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",47,0)
 .S $P(DIR(0),"^",2)=":"_DT_":AEXP"
"RTN","ECXTREX",48,0)
 .S DIR("A")="Starting with Date: "
"RTN","ECXTREX",49,0)
 .D ^DIR
"RTN","ECXTREX",50,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)="" S OUT=1 Q
"RTN","ECXTREX",51,0)
 .S STRTDT=Y
"RTN","ECXTREX",52,0)
 .K DIR
"RTN","ECXTREX",53,0)
 .;Get end date (must be in same month; must be in past)
"RTN","ECXTREX",54,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",55,0)
 .S X=$E(STRTDT,1,5)_"01"
"RTN","ECXTREX",56,0)
 .S X=$$FMADD^XLFDT(X,32)
"RTN","ECXTREX",57,0)
 .S X=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","ECXTREX",58,0)
 .I X>DT S X=DT
"RTN","ECXTREX",59,0)
 .S $P(DIR(0),"^",2)=STRTDT_":"_X_":AEXP"
"RTN","ECXTREX",60,0)
 .S DIR("A")="Ending with Date: "
"RTN","ECXTREX",61,0)
 .S DIR("B")=$$FMTE^XLFDT(X,"5D")
"RTN","ECXTREX",62,0)
 .D ^DIR
"RTN","ECXTREX",63,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)=""  S OUT=1 Q
"RTN","ECXTREX",64,0)
 .S ENDDT=Y
"RTN","ECXTREX",65,0)
 .S OUT=1
"RTN","ECXTREX",66,0)
 Q:(STRTDT="")!(ENDDT="")
"RTN","ECXTREX",67,0)
 S ECXDATES=STRTDT_"^"_ENDDT_"^1"
"RTN","ECXTREX",68,0)
 ;Get extract logic to use
"RTN","ECXTREX",69,0)
 N ECXLOGIC,YEAR
"RTN","ECXTREX",70,0)
 S YEAR=$E(DT)+17_$E(DT,2,3)
"RTN","ECXTREX",71,0)
 K DIR
"RTN","ECXTREX",72,0)
 S DIR("A")="Select fiscal year logic to use for extract"
"RTN","ECXTREX",73,0)
 S DIR(0)="SO^"
"RTN","ECXTREX",74,0)
 F X=2003:1:YEAR+1 D
"RTN","ECXTREX",75,0)
 .S Y=$E(X,5)
"RTN","ECXTREX",76,0)
 .S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",77,0)
 .S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",78,0)
 D ^DIR
"RTN","ECXTREX",79,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","ECXTREX",80,0)
 S ECXLOGIC=Y
"RTN","ECXTREX",81,0)
 ;Queue extract
"RTN","ECXTREX",82,0)
 D @("BEG^"_ECXRTN)
"RTN","ECXTREX",83,0)
 Q
"RTN","ECXTREX",84,0)
PAUSE ;pause screen
"RTN","ECXTREX",85,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXTREX",86,0)
 S DIR(0)="E"
"RTN","ECXTREX",87,0)
 W !!
"RTN","ECXTREX",88,0)
 D ^DIR
"RTN","ECXTREX",89,0)
 W !!
"RTN","ECXTREX",90,0)
 Q
"RTN","ECXUDRF")
0^14^B82697
"RTN","ECXUDRF",1,0)
ECXUDRF ;ALB/DHH-PHARMACY RECREATE CALLS ; 5/28/08 3:22pm
"RTN","ECXUDRF",2,0)
 ;;3.0;DSS;**112**;MAY 5, 2008;Build 26
"RTN","ECXUDRF",3,0)
 ;
"RTN","ECXUDRF",4,0)
 ;This routine will recreate the IV or UD extract for DSS Inpatient
"RTN","ECXUDRF",5,0)
 ;Pharmacy IA (#5201)
"RTN","ECXUDRF",6,0)
 ;
"RTN","ECXUDRF",7,0)
ENIVP ; entry point to recreate IVP extract holding file (#728.113)
"RTN","ECXUDRF",8,0)
 S EXTRACT="IV"
"RTN","ECXUDRF",9,0)
 D EN^PSJDSS
"RTN","ECXUDRF",10,0)
 Q
"RTN","ECXUDRF",11,0)
 ;
"RTN","ECXUDRF",12,0)
ENUDP ; entry point to recreate UDP extract holding file (#728.904)
"RTN","ECXUDRF",13,0)
 S EXTRACT="UD"
"RTN","ECXUDRF",14,0)
 D EN^PSJDSS
"RTN","ECXUDRF",15,0)
 Q
"RTN","ECXUDRF",16,0)
 ;
"RTN","ECXUTL2")
0^24^B70560984
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ; 6/12/07 6:38am
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92,105,112**;Dec 22, 1997;Build 26
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",16,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",17,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",18,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",19,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",26,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",27,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",28,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",29,0)
 .W !!
"RTN","ECXUTL2",30,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11",DIQ="ECXARR"
"RTN","ECXUTL2",31,0)
 D EN^DIQ1
"RTN","ECXUTL2",32,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",33,0)
 ;if this is an inactive extract type, skip it
"RTN","ECXUTL2",34,0)
 I ECXPACK["Inactive" D  Q
"RTN","ECXUTL2",35,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",40,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",41,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",42,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",43,0)
 .W !!
"RTN","ECXUTL2",44,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",45,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",46,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",47,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",48,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",49,0)
 S ECXVER=7
"RTN","ECXUTL2",50,0)
 Q
"RTN","ECXUTL2",51,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",52,0)
 ;  DFN   =
"RTN","ECXUTL2",53,0)
 ;  DT    =
"RTN","ECXUTL2",54,0)
 ;  PAR   =
"RTN","ECXUTL2",55,0)
 ;  FLG   =
"RTN","ECXUTL2",56,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",57,0)
 D KPATDEM
"RTN","ECXUTL2",58,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",59,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",60,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",61,0)
 I PAR["1" D
"RTN","ECXUTL2",62,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",63,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",64,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",65,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",66,0)
 I PAR["2" D
"RTN","ECXUTL2",67,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",68,0)
 I PAR["3" D
"RTN","ECXUTL2",69,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",70,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",71,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",72,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",73,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",74,0)
 I PAR["5" D
"RTN","ECXUTL2",75,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",76,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",77,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",78,0)
 .S ECXOEF=PAT("ECXOEF"),ECXOEFDT=PAT("ECXOEFDT")
"RTN","ECXUTL2",79,0)
 I PAR["6" D
"RTN","ECXUTL2",80,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",81,0)
 I FLG'[3 D
"RTN","ECXUTL2",82,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",83,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",84,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",85,0)
 I FLG'[2 D
"RTN","ECXUTL2",86,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",87,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",88,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",89,0)
 Q 1
"RTN","ECXUTL2",90,0)
 ;
"RTN","ECXUTL2",91,0)
KPATDEM ;
"RTN","ECXUTL2",92,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",93,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",94,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",95,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",96,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",97,0)
 K ECXSBGRP
"RTN","ECXUTL2",98,0)
 Q
"RTN","ECXUTL2",99,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",100,0)
 ;and user enrollee status
"RTN","ECXUTL2",101,0)
 ; input
"RTN","ECXUTL2",102,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",103,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",104,0)
 ; output
"RTN","ECXUTL2",105,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",106,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",107,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",108,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",109,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",110,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",111,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",112,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",113,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",114,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",115,0)
 ;DBIA #3989
"RTN","ECXUTL2",116,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",117,0)
 ;Patient type
"RTN","ECXUTL2",118,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",119,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",120,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",121,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",122,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",123,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",124,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",125,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",126,0)
 ;find previous enrollment
"RTN","ECXUTL2",127,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",128,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",129,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",130,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",131,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",132,0)
 . I "^2^19^"[("^"_$G(ENR("STATUS"))_"^"),$G(ENR("EFFDATE"))>RNDT D
"RTN","ECXUTL2",133,0)
 . . S ECXSTAT=$G(ENR("STATUS")),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",134,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",135,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",136,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",137,0)
 I FL Q 1
"RTN","ECXUTL2",138,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",139,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",140,0)
 Q 1
"RTN","ECXUTL2",141,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",142,0)
 ; input
"RTN","ECXUTL2",143,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",144,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",145,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",146,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",147,0)
 ; output
"RTN","ECXUTL2",148,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person
"RTN","ECXUTL2",149,0)
 ;class^pc provider npi^prefix_assoc pc provider ien^assoc pc provider
"RTN","ECXUTL2",150,0)
 ;person class^assoc pc provider npi
"RTN","ECXUTL2",151,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",152,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",153,0)
 ;get pc team data
"RTN","ECXUTL2",154,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",155,0)
 ;get primary pc provider data
"RTN","ECXUTL2",156,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",157,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",158,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECPTPR,ECXDATE)
"RTN","ECXUTL2",159,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECPTNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",160,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",161,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",162,0)
 S ECASPR=""
"RTN","ECXUTL2",163,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",164,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",165,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",166,0)
 N ECXUSRTN S ECXUSRTN=$$NPI^XUSNPI("Individual_ID",ECASPR,ECXDATE)
"RTN","ECXUTL2",167,0)
 S:+ECXUSRTN'>0 ECXUSRTN="" S ECASNPI=$P(ECXUSRTN,U)
"RTN","ECXUTL2",168,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",169,0)
 ;assemble
"RTN","ECXUTL2",170,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",171,0)
 Q ECXPRIME
"RTN","ECXUTL2",172,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",173,0)
 ; input
"RTN","ECXUTL2",174,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",175,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",176,0)
 ; output
"RTN","ECXUTL2",177,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",178,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",179,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",180,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",181,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",182,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",183,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",184,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",185,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",186,0)
 N ECXATPPC
"RTN","ECXUTL2",187,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",188,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",189,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",190,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",191,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC)=""
"RTN","ECXUTL2",192,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",193,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",194,0)
 I ECMN D
"RTN","ECXUTL2",195,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",196,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",197,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",198,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",199,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",200,0)
 .I ECWARD D
"RTN","ECXUTL2",201,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",202,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",203,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",204,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",205,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",206,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",207,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",208,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",209,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",210,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",211,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",212,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC
"RTN","ECXUTL2",213,0)
 Q ECXINP
"RTN","ECXUTL2",214,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",215,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",216,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",217,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",218,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",219,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",220,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",221,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",222,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",223,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",224,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",225,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",226,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",227,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",228,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",229,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",230,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",231,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",232,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",233,0)
 Q
"RTN","ECXUTL4")
0^6^B51787444
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ; 11/26/07 10:58am
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49,78,92,105,112**;Dec 22,1997;Build 26
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-296, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<297) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S ECXSTP=+$G(ECXSTP),ECXSTP2=+$G(ECXSTP2)
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS and ECQ (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... ;- Use observation stop code for IVP
"RTN","ECXUTL4",101,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS")!(ECXEXT="ECQ") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",102,0)
 ... ;
"RTN","ECXUTL4",103,0)
 ... ;- Use cost center to obtain stop code for ECS
"RTN","ECXUTL4",104,0)
 ... I ECXEXT="ECS" D  Q:'ECXSTCD
"RTN","ECXUTL4",105,0)
 .... S ECXSTCD=$$ECSCOST(ECXSTP2)
"RTN","ECXUTL4",106,0)
 ....;
"RTN","ECXUTL4",107,0)
 ....;- If no cost center, use 1st 3 chars of DSS ID
"RTN","ECXUTL4",108,0)
 .... I ECXSTCD="" S ECXSTCD=+$E(ECXSTP,1,3)
"RTN","ECXUTL4",109,0)
 ... ;
"RTN","ECXUTL4",110,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP")!(ECXEXT="IVP") S ECXSTCD="PHA"
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR")!(ECXEXT="LBB") S ECXSTCD=108
"RTN","ECXUTL4",114,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",115,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",116,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",117,0)
 ... I ECXEXT="NUT" S ECXSTCD="NUT"
"RTN","ECXUTL4",118,0)
 ... ;
"RTN","ECXUTL4",119,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",120,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",121,0)
 ... ;
"RTN","ECXUTL4",122,0)
 ... ;- Use DSS STOP CODE fld if populated or if SURG SPEC fld=59 use 430
"RTN","ECXUTL4",123,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",124,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,ECXSTP2=59:430,1:429)
"RTN","ECXUTL4",125,0)
 ... ;
"RTN","ECXUTL4",126,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",127,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",128,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",129,0)
 Q ENCNUM
"RTN","ECXUTL4",130,0)
 ;
"RTN","ECXUTL4",131,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",132,0)
 ;
"RTN","ECXUTL4",133,0)
 ; Input:
"RTN","ECXUTL4",134,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",135,0)
 ;
"RTN","ECXUTL4",136,0)
 ;Output:
"RTN","ECXUTL4",137,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",138,0)
 ;
"RTN","ECXUTL4",139,0)
 N ECXDT
"RTN","ECXUTL4",140,0)
 S ECXDT=""
"RTN","ECXUTL4",141,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",142,0)
 ;
"RTN","ECXUTL4",143,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",144,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",145,0)
 ;
"RTN","ECXUTL4",146,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",147,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",148,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",149,0)
 ;
"RTN","ECXUTL4",150,0)
 ;
"RTN","ECXUTL4",151,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",152,0)
 ;
"RTN","ECXUTL4",153,0)
 ; Input:
"RTN","ECXUTL4",154,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",155,0)
 ;
"RTN","ECXUTL4",156,0)
 ;Output:
"RTN","ECXUTL4",157,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",158,0)
 ;
"RTN","ECXUTL4",159,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",160,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",161,0)
 ;
"RTN","ECXUTL4",162,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",163,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",164,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",165,0)
 ;
"RTN","ECXUTL4",166,0)
 ;- Extract date portion
"RTN","ECXUTL4",167,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",168,0)
 ;
"RTN","ECXUTL4",169,0)
 ;- Get month (MM)
"RTN","ECXUTL4",170,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",171,0)
 ;
"RTN","ECXUTL4",172,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",173,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",174,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",175,0)
 ;
"RTN","ECXUTL4",176,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",177,0)
 ;
"RTN","ECXUTL4",178,0)
 ; Input:
"RTN","ECXUTL4",179,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",180,0)
 ;
"RTN","ECXUTL4",181,0)
 ;Output:
"RTN","ECXUTL4",182,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",183,0)
 ;
"RTN","ECXUTL4",184,0)
 N ECXCNH
"RTN","ECXUTL4",185,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",186,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",187,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",188,0)
 ;
"RTN","ECXUTL4",189,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",190,0)
 ;
"RTN","ECXUTL4",191,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",192,0)
 ;
"RTN","ECXUTL4",193,0)
 ; Input:
"RTN","ECXUTL4",194,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",195,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",196,0)
 ;
"RTN","ECXUTL4",197,0)
 ;Output:
"RTN","ECXUTL4",198,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",199,0)
 ;
"RTN","ECXUTL4",200,0)
 N ECXCANC
"RTN","ECXUTL4",201,0)
 S ECXCANC=""
"RTN","ECXUTL4",202,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",203,0)
 ;
"RTN","ECXUTL4",204,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",205,0)
 D
"RTN","ECXUTL4",206,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",207,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",208,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",209,0)
 Q ECXCANC
"RTN","ECXUTL4",210,0)
 ;
"RTN","ECXUTL4",211,0)
ECSCOST(ECXCOST) ;Get ECS extract stop code based on cost center
"RTN","ECXUTL4",212,0)
 ;
"RTN","ECXUTL4",213,0)
 ;
"RTN","ECXUTL4",214,0)
 ; Input:
"RTN","ECXUTL4",215,0)
 ;   ECXCOST  - ECS extract cost center
"RTN","ECXUTL4",216,0)
 ;
"RTN","ECXUTL4",217,0)
 ;Output:
"RTN","ECXUTL4",218,0)
 ;              ECS extract stop code
"RTN","ECXUTL4",219,0)
 ;
"RTN","ECXUTL4",220,0)
 N ECXFND,ECXSTOP,I
"RTN","ECXUTL4",221,0)
 S ECXFND=0
"RTN","ECXUTL4",222,0)
 S ECXSTOP=""
"RTN","ECXUTL4",223,0)
 S ECXCOST=+$G(ECXCOST)
"RTN","ECXUTL4",224,0)
 D
"RTN","ECXUTL4",225,0)
 . I 'ECXCOST Q
"RTN","ECXUTL4",226,0)
 . F I=1:1 Q:ECXFND!($P($T(COST+I),";;",2)="END")  D
"RTN","ECXUTL4",227,0)
 .. I ECXCOST=$P($T(COST+I),";;",2) S ECXSTOP=$P($T(COST+I),";;",3),ECXFND=1
"RTN","ECXUTL4",228,0)
 Q ECXSTOP
"RTN","ECXUTL4",229,0)
 ;
"RTN","ECXUTL4",230,0)
COST ;- ECS Cost Center and stop code
"RTN","ECXUTL4",231,0)
 ;;833100;;652
"RTN","ECXUTL4",232,0)
 ;;833200;;653
"RTN","ECXUTL4",233,0)
 ;;833300;;681
"RTN","ECXUTL4",234,0)
 ;;834100;;651
"RTN","ECXUTL4",235,0)
 ;;834200;;650
"RTN","ECXUTL4",236,0)
 ;;834300;;681
"RTN","ECXUTL4",237,0)
 ;;834400;;654
"RTN","ECXUTL4",238,0)
 ;;834500;;681
"RTN","ECXUTL4",239,0)
 ;;834600;;681
"RTN","ECXUTL4",240,0)
 ;;834700;;681
"RTN","ECXUTL4",241,0)
 ;;834800;;681
"RTN","ECXUTL4",242,0)
 ;;834900;;681
"RTN","ECXUTL4",243,0)
 ;;836100;;654
"RTN","ECXUTL4",244,0)
 ;;836200;;654
"RTN","ECXUTL4",245,0)
 ;;END
"RTN","ECXUTL4",246,0)
 ;
"RTN","ECXUTL4",247,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",248,0)
 ;
"RTN","ECXUTL4",249,0)
 ; Input:
"RTN","ECXUTL4",250,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",251,0)
 ;
"RTN","ECXUTL4",252,0)
 ;Output:
"RTN","ECXUTL4",253,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",254,0)
 ;
"RTN","ECXUTL4",255,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",256,0)
 S ECXHNCI=""
"RTN","ECXUTL4",257,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",258,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",259,0)
 Q ECXHNCI
"RTN","ECXUTL4",260,0)
 ;
"RTN","ECXUTL4",261,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",262,0)
 ; treating specialty
"RTN","ECXUTL4",263,0)
 ; Input:
"RTN","ECXUTL4",264,0)
 ;   ECXTS - Observation Treating Specialty
"RTN","ECXUTL4",265,0)
 ;
"RTN","ECXUTL4",266,0)
 ; Output:
"RTN","ECXUTL4",267,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",268,0)
 ;
"RTN","ECXUTL4",269,0)
 N TS,SC,I
"RTN","ECXUTL4",270,0)
 S TS="^18^23^24^36^41^65^94^",SC="^293^295^290^294^296^291^292^"
"RTN","ECXUTL4",271,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",272,0)
 Q $P(SC,"^",I)_"000"
"RTN","ECXUTL4",273,0)
OEFDATA ;
"RTN","ECXUTL4",274,0)
 ;get patient OEF/OIF status and date of return
"RTN","ECXUTL4",275,0)
 S (ECXOEF,ECXOEFDT)=""
"RTN","ECXUTL4",276,0)
 I $G(VASV(11))>0 S ECXOEF=ECXOEF_"OIF"
"RTN","ECXUTL4",277,0)
 I $G(VASV(12))>0 S ECXOEF=ECXOEF_"OEF"
"RTN","ECXUTL4",278,0)
 I $G(VASV(13))>0 S ECXOEF=ECXOEF_"UNK"
"RTN","ECXUTL4",279,0)
 I ECXOEF'="" D
"RTN","ECXUTL4",280,0)
 . S ECXOEFDT=""
"RTN","ECXUTL4",281,0)
 . I $G(VASV(11))>0 S ECXOEFDT=$P($G(VASV(11,$G(VASV(11)),3)),"^")
"RTN","ECXUTL4",282,0)
 . I $G(VASV(12))>0,$P($G(VASV(12,$G(VASV(12)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(12,$G(VASV(12)),3)),"^")
"RTN","ECXUTL4",283,0)
 . I $G(VASV(13))>0,$P($G(VASV(13,$G(VASV(13)),3)),"^")>ECXOEFDT S ECXOEFDT=$P($G(VASV(13,$G(VASV(13)),3)),"^")
"RTN","ECXUTL4",284,0)
 . I ECXOEFDT>0 S ECXOEFDT=17000000+ECXOEFDT
"RTN","ECXUTL4",285,0)
 ;
"RTN","ECXUTL4",286,0)
 S ECXPAT("ECXOEF")=ECXOEF
"RTN","ECXUTL4",287,0)
 S ECXPAT("ECXOEFDT")=ECXOEFDT
"RTN","ECXUTL4",288,0)
 Q
"RTN","ECXUTL6")
0^15^B68731197
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ; 9/17/08 3:08pm
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92,105,112**;Dec 22, 1997;Build 26
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 118.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(118.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,CRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S (CRSVP,TRSVP)=0,(WARD,DLT,DFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .S WARD=$P($G(^FHPT(FHDFN,"A",+ECXADM,0)),U,8)
"RTN","ECXUTL6",41,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",42,0)
 .S CRSVP=$$GET1^DIQ(119.6,WARD,4,"I")
"RTN","ECXUTL6",43,0)
 .;Get divisions
"RTN","ECXUTL6",44,0)
 .D GETDIV
"RTN","ECXUTL6",45,0)
 .Q
"RTN","ECXUTL6",46,0)
 ;
"RTN","ECXUTL6",47,0)
 ;Get food production facility for OP Supplemental feedings,
"RTN","ECXUTL6",48,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",49,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",50,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",51,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",52,0)
 I P["OP",D["SF" D
"RTN","ECXUTL6",53,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",54,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",55,0)
 .;Get delivery division
"RTN","ECXUTL6",56,0)
 .D GETDIV
"RTN","ECXUTL6",57,0)
 .Q
"RTN","ECXUTL6",58,0)
 ;Get food production facility for OP Standing Orders,
"RTN","ECXUTL6",59,0)
 ;use 115.1.13 (dietetic
"RTN","ECXUTL6",60,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",61,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",62,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",63,0)
 I P["OP",D["SO" D
"RTN","ECXUTL6",64,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",65,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",66,0)
 .;Get delivery division
"RTN","ECXUTL6",67,0)
 .D GETDIV
"RTN","ECXUTL6",68,0)
 .Q
"RTN","ECXUTL6",69,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",70,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",71,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",72,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",73,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",74,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",75,0)
 .D GETDIV
"RTN","ECXUTL6",76,0)
 .Q
"RTN","ECXUTL6",77,0)
 ;
"RTN","ECXUTL6",78,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",79,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",80,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",81,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",82,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",83,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",84,0)
 .;Get delivery division
"RTN","ECXUTL6",85,0)
 .D GETDIV
"RTN","ECXUTL6",86,0)
 .Q
"RTN","ECXUTL6",87,0)
 ;
"RTN","ECXUTL6",88,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",89,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",90,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",91,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",92,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",93,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",94,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",95,0)
 .;Get delivery division
"RTN","ECXUTL6",96,0)
 .D GETDIV
"RTN","ECXUTL6",97,0)
 .Q
"RTN","ECXUTL6",98,0)
 ;
"RTN","ECXUTL6",99,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",100,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",101,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",102,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",103,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",104,0)
 .S FPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",105,0)
 .;Get delivery division
"RTN","ECXUTL6",106,0)
 .D GETDIV
"RTN","ECXUTL6",107,0)
 .Q
"RTN","ECXUTL6",108,0)
 ;
"RTN","ECXUTL6",109,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",110,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",111,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",112,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",113,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",114,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",115,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",116,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",117,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",118,0)
 ;   all other meals are null
"RTN","ECXUTL6",119,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",120,0)
 .S DLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",121,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",122,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",123,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",124,0)
 .S DLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",125,0)
 ;
"RTN","ECXUTL6",126,0)
 ;Delivery feeder location
"RTN","ECXUTL6",127,0)
 I DLT="C" D
"RTN","ECXUTL6",128,0)
 .S DFL=$E($$GET1^DIQ(119.6,WARD,4,"E"),1,10)
"RTN","ECXUTL6",129,0)
 .S IEN=$$GET1^DIQ(119.72,+CRSVP,2,"I")
"RTN","ECXUTL6",130,0)
 .S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",131,0)
 .S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",132,0)
 .S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",133,0)
 I (DLT["T")!(DLT["D") D
"RTN","ECXUTL6",134,0)
 .I P="INP" D
"RTN","ECXUTL6",135,0)
 ..S MASWARD=$O(^FH(119.6,+WARD,"W","B",0))
"RTN","ECXUTL6",136,0)
 ..S DFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",137,0)
 .I P="OP" D
"RTN","ECXUTL6",138,0)
 ..S DFL=$O(^FH(119.6,+OPLOC,"L","B",0))
"RTN","ECXUTL6",139,0)
 I (DLT=""),"SFTFSO"[D D
"RTN","ECXUTL6",140,0)
 .S DFL=$S(TRSVP:$$GET1^DIQ(119.6,WARD,3,"E"),1:$$GET1^DIQ(119.6,WARD,4,"E"))
"RTN","ECXUTL6",141,0)
 Q 1
"RTN","ECXUTL6",142,0)
 ;
"RTN","ECXUTL6",143,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",144,0)
 ;Init variables
"RTN","ECXUTL6",145,0)
 N IEN,SIEN
"RTN","ECXUTL6",146,0)
 S (FDD,FPF,FPD)=""
"RTN","ECXUTL6",147,0)
 S IEN=$$GET1^DIQ(119.72,+TRSVP,2,"I")
"RTN","ECXUTL6",148,0)
 Q:'IEN
"RTN","ECXUTL6",149,0)
 ;Get delivery division
"RTN","ECXUTL6",150,0)
 S SIEN=""_+TRSVP_";FH(119.72,"
"RTN","ECXUTL6",151,0)
 S FDD=$O(^ECX(728.46,"B",SIEN,FDD))
"RTN","ECXUTL6",152,0)
 S FDD=""_$$GET1^DIQ(728.46,FDD,1,"I")_","_""
"RTN","ECXUTL6",153,0)
 S FDD=$$GET1^DIQ(4,FDD,99,"E")
"RTN","ECXUTL6",154,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",155,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",156,0)
 S FPF=$O(^ECX(728.46,"B",IEN,FPF))
"RTN","ECXUTL6",157,0)
 S FPD=""_$$GET1^DIQ(728.46,FPF,1,"I")_","_""
"RTN","ECXUTL6",158,0)
 S FPD=$$GET1^DIQ(4,FPD,99,"E")
"RTN","ECXUTL6",159,0)
 S FPF=$E($$GET1^DIQ(728.46,FPF,.01,"E"),1,10)
"RTN","ECXUTL6",160,0)
 Q
"RTN","ECXUTL6",161,0)
 ;
"RTN","ECXUTL6",162,0)
SUR(CRST,STCD,CLINIC) ;Surgery stop codes and clinic (outpatients only)
"RTN","ECXUTL6",163,0)
 ;Init variables
"RTN","ECXUTL6",164,0)
 S (CRST,STCD,CLINIC)=""
"RTN","ECXUTL6",165,0)
 ;Quit if not outpatient
"RTN","ECXUTL6",166,0)
 Q:$P(EC0,U,12)'="O" ""
"RTN","ECXUTL6",167,0)
 ;Get stop codes (outpatient only)
"RTN","ECXUTL6",168,0)
 I $P(EC0,U,12)="O" D
"RTN","ECXUTL6",169,0)
 .;Get credit stop code (outpatient only)
"RTN","ECXUTL6",170,0)
 .S CRST=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",2503,"I")_","_"",1,"E")
"RTN","ECXUTL6",171,0)
 .;Get stop code (outpatient only)
"RTN","ECXUTL6",172,0)
 .S STCD=""_$$GET1^DIQ(40.7,""_$$GET1^DIQ(44,$$GET1^DIQ(137.45,$P(EC0,U,4),2,"I")_","_""_","_"",8,"I")_","_"",1,"E")
"RTN","ECXUTL6",173,0)
 ;Clinic for non-or case use associated clinic else non-or location
"RTN","ECXUTL6",174,0)
 ;If non-or case
"RTN","ECXUTL6",175,0)
 I $P($G(ECNO),U)="Y" S CLINIC=$S($P(EC0,U,21):$P(EC0,U,21),1:$P(ECNO,U,2))
"RTN","ECXUTL6",176,0)
 ;Get stop codes non-or cases
"RTN","ECXUTL6",177,0)
 I $P($G(ECNO),U)="Y" D
"RTN","ECXUTL6",178,0)
 .;Get credit stop code for non-or case
"RTN","ECXUTL6",179,0)
 .S CRST=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,2503,"I"),1,"E")
"RTN","ECXUTL6",180,0)
 .;Get stop code for non-or case
"RTN","ECXUTL6",181,0)
 .S STCD=$$GET1^DIQ(40.7,$$GET1^DIQ(44,CLINIC,8,"I"),1,"E")
"RTN","ECXUTL6",182,0)
 ;Clinic, not a non-or case use surgical specialty associated clinic
"RTN","ECXUTL6",183,0)
 I $P($G(ECNO),U)'="Y" S CLINIC=$$GET1^DIQ(137.45,+$P(EC0,U,4),2,"I")
"RTN","ECXUTL6",184,0)
 Q 1
"RTN","ECXUTL6",185,0)
 ;
"RTN","ECXUTL6",186,0)
SURPODX(PRODX,PODX1,PODX2,PODX3,PODX4,PODX5) ;Get postop diagnosis codes
"RTN","ECXUTL6",187,0)
 ;Init variables
"RTN","ECXUTL6",188,0)
 N CODE,I,PODX
"RTN","ECXUTL6",189,0)
 S (PRODX,PODX1,PODX2,PODX3,PODX4,PODX5)="",CODE=0
"RTN","ECXUTL6",190,0)
 ;Check input
"RTN","ECXUTL6",191,0)
 Q:'$D(DATAOP) 0
"RTN","ECXUTL6",192,0)
 ;Get principal postop dx code
"RTN","ECXUTL6",193,0)
 S PRODX=$$GET1^DIQ(80,$P(DATAOP,U,3),.01)
"RTN","ECXUTL6",194,0)
 ;Get other postop dx codes
"RTN","ECXUTL6",195,0)
 S (CODE,I)=0 F  S CODE=$O(^SRO(136,ECD0,4,CODE)) Q:'CODE  Q:I>5  D
"RTN","ECXUTL6",196,0)
 .S I=I+1,PODX="PODX"_I,@PODX=$$GET1^DIQ(80,$P(^SRO(136,ECD0,4,CODE,0),U),.01)
"RTN","ECXUTL6",197,0)
 Q 1
"RTN","ECXUTL6",198,0)
 ;
"RTN","ECXUTL6",199,0)
LOINC(ARRAY) ;Get DSS lab test information out of DSS LOINC CODE (#727.29) file
"RTN","ECXUTL6",200,0)
 ;Input
"RTN","ECXUTL6",201,0)
 ;   ARRAY(LOINC-CK) := array of valid LOINC (#727.29 DSS LOINC CODE)
"RTN","ECXUTL6",202,0)
 ;                      entries with their check digit
"RTN","ECXUTL6",203,0)
 ;   or,
"RTN","ECXUTL6",204,0)
 ;   ARRAY("ALL")    := request for all LOINC entries
"RTN","ECXUTL6",205,0)
 ;Output
"RTN","ECXUTL6",206,0)
 ;   ^TMP($J,"EXCUTL6",LOINC-CK)  =
"RTN","ECXUTL6",207,0)
 ;              zero node of file 727.29 pieces 1 thru 4
"RTN","ECXUTL6",208,0)
 ;              piece 1 := LOINC-CK (LOINC-check digit)
"RTN","ECXUTL6",209,0)
 ;              piece 2 := DSS lar test number
"RTN","ECXUTL6",210,0)
 ;              piece 3 := DSS test name
"RTN","ECXUTL6",211,0)
 ;              piece 4 := DSS Reporting units
"RTN","ECXUTL6",212,0)
 ;              piece 5 := LOINC name
"RTN","ECXUTL6",213,0)
 ;              piece 6 := pointer to LAB LOINC (#95.3) code entry
"RTN","ECXUTL6",214,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",215,0)
 ;          -1 := not a valid loinc entry from file 727.29
"RTN","ECXUTL6",216,0)
 ;          -2 := no dss lar test number associated with loinc
"RTN","ECXUTL6",217,0)
 ;
"RTN","ECXUTL6",218,0)
 ;   ^TMP($J,"ECXUTL6",LOINC-CK,WKLD,SPEC/-or-"DEFAULT",LTEST)= 
"RTN","ECXUTL6",219,0)
 ;              piece 1 := WKLD Code (external)
"RTN","ECXUTL6",220,0)
 ;              piece 2 := specimen (external) or "DEFAULT LOINC"
"RTN","ECXUTL6",221,0)
 ;              piece 3 := laboratory test (external)
"RTN","ECXUTL6",222,0)
 ;              piece 4:= local LOINC code external
"RTN","ECXUTL6",223,0)
 ;             (delimited by "^")
"RTN","ECXUTL6",224,0)
 ;
"RTN","ECXUTL6",225,0)
 ;
"RTN","ECXUTL6",226,0)
 I '$D(ARRAY) Q
"RTN","ECXUTL6",227,0)
 K ^TMP($J,"ECXUTL6")
"RTN","ECXUTL6",228,0)
 N LOINCCK,LIEN,SPEC,EC0,WKLD,WKLD0,TA,LRASSV
"RTN","ECXUTL6",229,0)
 S LOINCCK=""
"RTN","ECXUTL6",230,0)
 I $D(ARRAY("ALL")) D
"RTN","ECXUTL6",231,0)
 . F  S LOINCCK=$O(^ECX(727.29,"B",LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",232,0)
 E  D
"RTN","ECXUTL6",233,0)
 . F  S LOINCCK=$O(ARRAY(LOINCCK)) Q:'LOINCCK  D EXT
"RTN","ECXUTL6",234,0)
 Q
"RTN","ECXUTL6",235,0)
 ;
"RTN","ECXUTL6",236,0)
EXT I '$D(^ECX(727.29,"B",LOINCCK)) S ^TMP($J,"ECXUTL6",LOINCCK)=-1_"^no entry in DSS LOINC CODE (#727.29)." Q
"RTN","ECXUTL6",237,0)
 S LIEN=$O(^ECX(727.29,"B",LOINCCK,0))
"RTN","ECXUTL6",238,0)
 I '$P(^ECX(727.29,LIEN,0),U,2) S ^TMP($J,"ECXUTL6",LOINCCK)=-2_"^no dss test number found." Q
"RTN","ECXUTL6",239,0)
 S EC0=^ECX(727.29,LIEN,0)
"RTN","ECXUTL6",240,0)
 S ^TMP($J,"ECXUTL6",LOINCCK)=EC0_"^"
"RTN","ECXUTL6",241,0)
 S LOINCPTR=""
"RTN","ECXUTL6",242,0)
 I LOINCCK=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01) D
"RTN","ECXUTL6",243,0)
 . S LOINCPTR=$$GET1^DIQ(95.3,$P(LOINCCK,"-"),.01,"I")
"RTN","ECXUTL6",244,0)
 . S ^TMP($J,"ECXUTL6",LOINCCK)=^TMP($J,"ECXUTL6",LOINCCK)_LOINCPTR
"RTN","ECXUTL6",245,0)
 I LOINCPTR D
"RTN","ECXUTL6",246,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AH",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",247,0)
 . . S LRASSV=""
"RTN","ECXUTL6",248,0)
 . . F  S LRASSV=$O(^LAM(WKLD,7,"B",LRASSV)) Q:LRASSV=""  D
"RTN","ECXUTL6",249,0)
 . . . I $E($P(LRASSV,";",2),1,7)'="LAB(60," Q
"RTN","ECXUTL6",250,0)
 . . . S LTEST=$P(LRASSV,";")
"RTN","ECXUTL6",251,0)
 . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",252,0)
 . . . . I $D(^LAM(WKLD,9)) D
"RTN","ECXUTL6",253,0)
 . . . . . S LLNCP=$P(^LAM(WKLD,9),"^") S:LLNCP>0 LLNC=$$GET1^DIQ(95.3,$P(LLNCP,"-"),.01)
"RTN","ECXUTL6",254,0)
 . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,"ZZDEFAULT",LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_"DEFAULT LOINC"_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LLNC
"RTN","ECXUTL6",255,0)
 . S WKLD=0 F  S WKLD=$O(^LAM("AI",LOINCPTR,WKLD)) Q:'WKLD  D
"RTN","ECXUTL6",256,0)
 . . S SPEC=0 F  S SPEC=$O(^LAM("AI",LOINCPTR,WKLD,SPEC)) Q:'SPEC  D
"RTN","ECXUTL6",257,0)
 . . . S TA=0
"RTN","ECXUTL6",258,0)
 . . . F  S TA=$O(^LAM(WKLD,5,SPEC,1,TA)) Q:'TA  D
"RTN","ECXUTL6",259,0)
 . . . . S SPECD=^LAM(WKLD,5,SPEC,1,TA,0)
"RTN","ECXUTL6",260,0)
 . . . . S LTEST=$P(SPECD,"^",4)
"RTN","ECXUTL6",261,0)
 . . . . N LLNCP
"RTN","ECXUTL6",262,0)
 . . . . S LLNC="" S:$D(^LAM(WKLD,5,SPEC,1,TA,1)) LLNCP=$P(^LAM(WKLD,5,SPEC,1,TA,1),"^"),LLNC=$$GET1^DIQ(95.3,$P(LLNCP,"-"),.01)
"RTN","ECXUTL6",263,0)
 . . . . I LTEST,($P($G(^LAB(60,LTEST,64)),"^",2)=WKLD),($$GET1^DIQ(60,LTEST,3,"I")'="N") D
"RTN","ECXUTL6",264,0)
 . . . . . S ^TMP($J,"ECXUTL6",LOINCCK,WKLD,SPEC,LTEST)=$$GET1^DIQ(64,WKLD,.01)_"^"_$$GET1^DIQ(61,SPEC,.01)_"^"_$$GET1^DIQ(60,LTEST,.01)_"^"_LLNC
"RTN","ECXUTL6",265,0)
 Q
"RTN","ECXUTL6",266,0)
 ;
"RTN","ECXUTL6",267,0)
INPUTT ;
"RTN","ECXUTL6",268,0)
 N DIC S DIC="^DIC(40.7,",DIC(0)="EMZ",DIC("S")="I '$P(^(0),U,3)&($L($P(^(0),U,2)'=3)) Q"
"RTN","ECXUTL6",269,0)
 D ^DIC K:Y<0 X Q:Y<0
"RTN","ECXUTL6",270,0)
 S X=$S($D(Y(0)):$P(Y(0),U,2),1:"") K:X=""!($L(X)'=3) X K DIC
"RTN","ECXUTL6",271,0)
 Q
"RTN","ECXUTLA")
0^4^B52600854
"RTN","ECXUTLA",1,0)
ECXUTLA ;ALB/JAP - Utilities for Audit Reports ; 4/16/08 4:04pm
"RTN","ECXUTLA",2,0)
 ;;3.0;DSS EXTRACTS;**8,14,112**;Dec 22, 1997;Build 26
"RTN","ECXUTLA",3,0)
 ;
"RTN","ECXUTLA",4,0)
AUDIT(ECXHEAD,ECXERR,ECXARRAY,ECXAUD) ;set audit report parameters
"RTN","ECXUTLA",5,0)
 ;   input
"RTN","ECXUTLA",6,0)
 ;   ECXHEAD  = extract HEADER CODE (required)
"RTN","ECXUTLA",7,0)
 ;              (from file #727.1, field #7)
"RTN","ECXUTLA",8,0)
 ;   ECXERR   = passed-by-reference variable (required)
"RTN","ECXUTLA",9,0)
 ;   ECXARRAY = passed-by-reference array (required)
"RTN","ECXUTLA",10,0)
 ;   ECXAUD   = 0/1 (optional)
"RTN","ECXUTLA",11,0)
 ;              0 --> extract audit (default)
"RTN","ECXUTLA",12,0)
 ;              1 --> SAS audit
"RTN","ECXUTLA",13,0)
 ;   output
"RTN","ECXUTLA",14,0)
 ;   ECXARRAY = array of audit parameters
"RTN","ECXUTLA",15,0)
 ;              ECXARRAY("DEF")     = ien of extract type in file #727.1
"RTN","ECXUTLA",16,0)
 ;              ECXARRAY("TYPE")    = print name for extract; field #7 in file #727.1
"RTN","ECXUTLA",17,0)
 ;              ECXARRAY("EXTRACT") = ien of extract in file #727
"RTN","ECXUTLA",18,0)
 ;              ECXARRAY("START")   = start date for extract audit
"RTN","ECXUTLA",19,0)
 ;              ECXARRAY("END")     = end date for extract audit
"RTN","ECXUTLA",20,0)
 ;              ECXARRAY("ERUN")    = date on which extract was generated
"RTN","ECXUTLA",21,0)
 ;              ECXARRAY("DIV")     = ien of station if file #4
"RTN","ECXUTLA",22,0)
 ;   error CODE
"RTN","ECXUTLA",23,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",24,0)
 ;              0, otherwise
"RTN","ECXUTLA",25,0)
 ;
"RTN","ECXUTLA",26,0)
 N X,Y,N,DA,DIC,DIQ,DIR,DTOUT,DUOUT,DIRUT,ECXDA,ECXTYPE,ECXSTART,ECXEND,ECXARR
"RTN","ECXUTLA",27,0)
 S ECXERR=0
"RTN","ECXUTLA",28,0)
 S N=$O(^ECX(727.1,"C",ECXHEAD,"")) S:N="" ECXERR=1
"RTN","ECXUTLA",29,0)
 Q:ECXERR
"RTN","ECXUTLA",30,0)
 S DIC="^ECX(727.1,",DIC(0)="NZ",X=N
"RTN","ECXUTLA",31,0)
 D ^DIC I Y=-1 S ECXERR=1 Q
"RTN","ECXUTLA",32,0)
 S ECXTYPE=$P(Y(0),U,7)_U_+Y K X,Y,DIC
"RTN","ECXUTLA",33,0)
 I $G(ECXAUD)=1,ECXHEAD'="DEN",ECXHEAD'="PRE",ECXHEAD'="RAD",ECXHEAD'="SUR" S ECXERR=1
"RTN","ECXUTLA",34,0)
 Q:ECXERR
"RTN","ECXUTLA",35,0)
 S DIC="^ECX(727,",DIC(0)="AEMQ",DIC("S")="I $P(^(0),U,3)=$P(ECXTYPE,U),'$D(^(""PURG""))"
"RTN","ECXUTLA",36,0)
 D ^DIC
"RTN","ECXUTLA",37,0)
 I Y=-1!($G(DUOUT))!($G(DTOUT)) S ECXERR=1 Q
"RTN","ECXUTLA",38,0)
 S DIC="^ECX(727,",(DA,ECXDA)=+Y,DR=".01;1;2;3;4;5;15;300",DIQ="ECXARR",DIQ(0)="IE"
"RTN","ECXUTLA",39,0)
 D EN^DIQ1
"RTN","ECXUTLA",40,0)
 W !!,?5,"Extract:      ",ECXARR(727,ECXDA,2,"E")," #",ECXDA
"RTN","ECXUTLA",41,0)
 W !!,?5,"Start date:   ",ECXARR(727,ECXDA,3,"E")
"RTN","ECXUTLA",42,0)
 W !,?5,"End date:     ",ECXARR(727,ECXDA,4,"E")
"RTN","ECXUTLA",43,0)
 W !,?5,"# of Records: ",ECXARR(727,ECXDA,5,"E")
"RTN","ECXUTLA",44,0)
 I ECXHEAD="PRO" W !,?5,"Station:      ",ECXARR(727,ECXDA,15,"E")
"RTN","ECXUTLA",45,0)
 ;if transmit date exists, then ask user if audit still needed
"RTN","ECXUTLA",46,0)
 I $L(ECXARR(727,ECXDA,300,"E"))>0 D
"RTN","ECXUTLA",47,0)
 .W !!,?5,"The extract which you have chosen to audit"
"RTN","ECXUTLA",48,0)
 .W !,?5,"was transmitted to Austin/DSS on ",ECXARR(727,ECXDA,300,"E"),".",!
"RTN","ECXUTLA",49,0)
 .S DIR(0)="Y",DIR("A")="Do you want to continue with this audit report",DIR("B")="NO" D ^DIR
"RTN","ECXUTLA",50,0)
 .S:$G(DIRUT) ECXERR=1 S:Y=0 ECXERR=1
"RTN","ECXUTLA",51,0)
 Q:ECXERR
"RTN","ECXUTLA",52,0)
 ;setup the return array
"RTN","ECXUTLA",53,0)
 S ECXARRAY("EXTRACT")=ECXARR(727,ECXDA,.01,"E"),ECXARRAY("DIV")=ECXARR(727,ECXDA,15,"I"),ECXARRAY("TYPE")=$P(ECXTYPE,U),ECXARRAY("DEF")=$P(ECXTYPE,U,2)
"RTN","ECXUTLA",54,0)
 S ECXARRAY("START")=ECXARR(727,ECXDA,3,"E"),ECXARRAY("END")=ECXARR(727,ECXDA,4,"E"),ECXARRAY("ERUN")=ECXARR(727,ECXDA,1,"E")
"RTN","ECXUTLA",55,0)
 ;determine date range only for extract audit reports
"RTN","ECXUTLA",56,0)
 I $G(ECXAUD)=0 D
"RTN","ECXUTLA",57,0)
 .S ECXSTART=ECXARRAY("START"),ECXEND=ECXARRAY("END") D RANGE^ECXUTLA(.ECXSTART,.ECXEND,.ECXERR)
"RTN","ECXUTLA",58,0)
 .I ECXERR K ECXARRAY
"RTN","ECXUTLA",59,0)
 .Q:ECXERR
"RTN","ECXUTLA",60,0)
 .S ECXARRAY("START")=ECXSTART,ECXARRAY("END")=ECXEND
"RTN","ECXUTLA",61,0)
 Q
"RTN","ECXUTLA",62,0)
 ;
"RTN","ECXUTLA",63,0)
RANGE(ECXSTART,ECXEND,ECXERR) ;determine date range for extract audit report
"RTN","ECXUTLA",64,0)
 ;   input
"RTN","ECXUTLA",65,0)
 ;   ECXSTART = start date of extract in file #727 (required)
"RTN","ECXUTLA",66,0)
 ;              passed by reference
"RTN","ECXUTLA",67,0)
 ;   ECXEND   = end date of extract in file #727 (required)
"RTN","ECXUTLA",68,0)
 ;              passed by reference
"RTN","ECXUTLA",69,0)
 ;   ECXERR   = passed by reference (required)
"RTN","ECXUTLA",70,0)
 ;   output
"RTN","ECXUTLA",71,0)
 ;   ECXSTART = user selected start date
"RTN","ECXUTLA",72,0)
 ;   ECXEND   = user selected end date
"RTN","ECXUTLA",73,0)
 ;   error CODE
"RTN","ECXUTLA",74,0)
 ;   ECXERR   = 1, if input problem occurs
"RTN","ECXUTLA",75,0)
 ;              0, otherwise
"RTN","ECXUTLA",76,0)
 ;
"RTN","ECXUTLA",77,0)
 ;
"RTN","ECXUTLA",78,0)
 ;convert dates to internal format
"RTN","ECXUTLA",79,0)
 N DATEA,DATEB,X,Y,%DT,DTOUT,OUT
"RTN","ECXUTLA",80,0)
 S (ECXERR,OUT)=0
"RTN","ECXUTLA",81,0)
 S X=ECXSTART D ^%DT S DATEA=Y
"RTN","ECXUTLA",82,0)
 S X=ECXEND D ^%DT S DATEB=Y
"RTN","ECXUTLA",83,0)
 ;allow user to select start date
"RTN","ECXUTLA",84,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",85,0)
 W !!,?5,"You can narrow the date range, if you wish.",!
"RTN","ECXUTLA",86,0)
 W !,?5,"The Start Date can't be earlier than ",ECXSTART,","
"RTN","ECXUTLA",87,0)
 W !,?5,"or later than ",ECXEND,".",!
"RTN","ECXUTLA",88,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",89,0)
 .S %DT="AEX",%DT("A")="Select Start Date: ",%DT("B")=ECXSTART,%DT(0)=DATEA
"RTN","ECXUTLA",90,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",91,0)
 .Q:ECXERR
"RTN","ECXUTLA",92,0)
 .I Y>DATEB D  Q
"RTN","ECXUTLA",93,0)
 ..W !,?5,"But that's later than ",ECXEND,"...try again.",!
"RTN","ECXUTLA",94,0)
 .S DATEA=Y,OUT=1
"RTN","ECXUTLA",95,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",96,0)
 Q:ECXERR
"RTN","ECXUTLA",97,0)
 S Y=DATEA D DD^%DT S ECXSTART=Y
"RTN","ECXUTLA",98,0)
 ;allow user to select end date
"RTN","ECXUTLA",99,0)
 ;can't be less than ecxstart or greater than ecxend
"RTN","ECXUTLA",100,0)
 W !!,?5,"The End Date can't be earlier than ",ECXSTART
"RTN","ECXUTLA",101,0)
 W !,?5,"(the Start Date you selected), or later than ",ECXEND,".",!
"RTN","ECXUTLA",102,0)
 S OUT=0
"RTN","ECXUTLA",103,0)
 F  Q:OUT!ECXERR  D
"RTN","ECXUTLA",104,0)
 .S %DT="AEX",%DT("A")="Select End Date: ",%DT("B")=ECXEND,%DT(0)=-DATEB
"RTN","ECXUTLA",105,0)
 .D ^%DT S:Y=-1 ECXERR=1 S:$G(DTOUT) ECXERR=1
"RTN","ECXUTLA",106,0)
 .Q:ECXERR
"RTN","ECXUTLA",107,0)
 .I Y<DATEA D  Q
"RTN","ECXUTLA",108,0)
 ..W !,?5,"But that's earlier than ",ECXSTART,"...try again.",!
"RTN","ECXUTLA",109,0)
 .S DATEB=Y,OUT=1
"RTN","ECXUTLA",110,0)
 I ECXERR K ECXSTART,ECXEND
"RTN","ECXUTLA",111,0)
 Q:ECXERR
"RTN","ECXUTLA",112,0)
 S Y=DATEB D DD^%DT S ECXEND=Y
"RTN","ECXUTLA",113,0)
 Q
"RTN","ECXUTLA",114,0)
 ;
"RTN","ECXUTLA",115,0)
DEVICE(ZTRTN,ZTDESC,ZTSAVE) ;get print device and optionally task to background
"RTN","ECXUTLA",116,0)
 ;   input
"RTN","ECXUTLA",117,0)
 ;   ZTRTN  = line^routine; task entry point (required)
"RTN","ECXUTLA",118,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",119,0)
 ;   ZTDESC = task description (required)
"RTN","ECXUTLA",120,0)
 ;            variable for %ZTLOAD
"RTN","ECXUTLA",121,0)
 ;   ZTSAVE = array; passed by reference (required)
"RTN","ECXUTLA",122,0)
 ;            variables for %ZTLOAD
"RTN","ECXUTLA",123,0)
 ;   output
"RTN","ECXUTLA",124,0)
 ;   ZTSAVE = returns ZTSAVE("POP"),ZTSAVE("ZTSK")
"RTN","ECXUTLA",125,0)
 ;
"RTN","ECXUTLA",126,0)
 N POP,ZTSK
"RTN","ECXUTLA",127,0)
 S ZTSAVE("POP")=0,ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",128,0)
 ;return ztsave("pop")=1 and quit if required input not available
"RTN","ECXUTLA",129,0)
 I '$L(ZTRTN)!('$L(ZTDESC))!('$D(ZTSAVE)) S ZTSAVE("POP")=1 Q
"RTN","ECXUTLA",130,0)
 ;get print device
"RTN","ECXUTLA",131,0)
 K IO("Q") S %ZIS="QM" D ^%ZIS
"RTN","ECXUTLA",132,0)
 S ZTSAVE("POP")=POP
"RTN","ECXUTLA",133,0)
 I POP D
"RTN","ECXUTLA",134,0)
 .W !,"No device selected...exiting.",!
"RTN","ECXUTLA",135,0)
 Q:POP
"RTN","ECXUTLA",136,0)
 I $D(IO("Q")) D
"RTN","ECXUTLA",137,0)
 .S ZTSAVE("ZTREQ")="@"
"RTN","ECXUTLA",138,0)
 .D ^%ZTLOAD
"RTN","ECXUTLA",139,0)
 .I $G(ZTSK)>0 D
"RTN","ECXUTLA",140,0)
 ..W !,"Request queued as Task #",ZTSK,".",!
"RTN","ECXUTLA",141,0)
 ..S ZTSAVE("ZTSK")=ZTSK
"RTN","ECXUTLA",142,0)
 ..S ZTSAVE("POP")=0
"RTN","ECXUTLA",143,0)
 .I '$G(ZTSK) D
"RTN","ECXUTLA",144,0)
 ..W !,"Request to queue cancelled...exiting.",!
"RTN","ECXUTLA",145,0)
 ..S ZTSAVE("ZTSK")=0
"RTN","ECXUTLA",146,0)
 ..S ZTSAVE("POP")=1
"RTN","ECXUTLA",147,0)
 Q
"RTN","ECXUTLA",148,0)
 ;
"RTN","ECXUTLA",149,0)
WARDS(ECXALL,ECXDIV) ;get wards for selected divisions
"RTN","ECXUTLA",150,0)
 ;   input
"RTN","ECXUTLA",151,0)
 ;   ECXALL = 1/0 (optional)
"RTN","ECXUTLA",152,0)
 ;            1==> user selected all divisions OR
"RTN","ECXUTLA",153,0)
 ;                 facility is non-divisional
"RTN","ECXUTLA",154,0)
 ;            0==> user selected some divisions
"RTN","ECXUTLA",155,0)
 ;            if ECXALL not defined, then assume 1
"RTN","ECXUTLA",156,0)
 ;   ECXDIV = array of divisions selected (optional)
"RTN","ECXUTLA",157,0)
 ;            passed by reference array containing
"RTN","ECXUTLA",158,0)
 ;            selected divisions;
"RTN","ECXUTLA",159,0)
 ;            if ECXALL=1, then ECXDIV array isn't
"RTN","ECXUTLA",160,0)
 ;            required; information for all wards will be obtained
"RTN","ECXUTLA",161,0)
 ;            if ECXALL=0, then only wards for divisions in ECXDIV
"RTN","ECXUTLA",162,0)
 ;   output
"RTN","ECXUTLA",163,0)
 ;   ^TMP($J,"ECXWARD", contains ward name, division, g&l order
"RTN","ECXUTLA",164,0)
 ;   ^TMP($J,"ECXORDER", contains ward grouping info
"RTN","ECXUTLA",165,0)
 ;
"RTN","ECXUTLA",166,0)
 N IEN,WARD,ORDX,NAME,NM,ORDER,DIV,HIEN,GROUP,DATA,DEPT,NAMEDEPT
"RTN","ECXUTLA",167,0)
 K ^TMP($J,"ECXWARD"),^TMP($J,"ECXORDER")
"RTN","ECXUTLA",168,0)
 ;if ecxall not here, then set ecxall=1
"RTN","ECXUTLA",169,0)
 S:'$D(ECXALL) ECXALL=1 S:ECXALL="" ECXALL=1
"RTN","ECXUTLA",170,0)
 S ORDX=0,NM=""
"RTN","ECXUTLA",171,0)
 F  S NM=$O(^DIC(42,"B",NM)) Q:NM=""  S IEN=0 F  S IEN=$O(^DIC(42,"B",NM,IEN)) Q:IEN=""  D
"RTN","ECXUTLA",172,0)
 .S DIV=+$P(^DIC(42,IEN,0),U,11) Q:DIV=0
"RTN","ECXUTLA",173,0)
 .I ECXALL=0,'$D(ECXDIV(DIV)) Q
"RTN","ECXUTLA",174,0)
 .S (NAME,ORDER,DEPT)="",NAME=$P(^DIC(42,IEN,0),U,1),ORDER=+$P($G(^DIC(42,IEN,"ORDER")),U,1),DEPT=$P($G(^ECX(727.4,IEN,0)),U,2)
"RTN","ECXUTLA",175,0)
 .;'unordered' ward is probably inactive, but get basic data anyway
"RTN","ECXUTLA",176,0)
 .I ORDER=0 S ORDX=ORDX+1,ORDER="99999"_ORDX,ORDER=+ORDER
"RTN","ECXUTLA",177,0)
 .;get this ward's ien in file #44; file #727.802 & #727.808 use pointers to file #44
"RTN","ECXUTLA",178,0)
 .S HIEN=+$P($G(^DIC(42,IEN,44)),U,1) Q:HIEN=0
"RTN","ECXUTLA",179,0)
 .;if this is last ward in group, then get the group name
"RTN","ECXUTLA",180,0)
 .K GROUP I $D(^DIC(42,IEN,1,1,0)) S GROUP=$P(^DIC(42,IEN,1,1,0),U,1) I GROUP="" K GROUP
"RTN","ECXUTLA",181,0)
 .S ^TMP($J,"ECXWARD",HIEN)=ORDER_U_NAME_U_DIV_U_IEN_U_DEPT
"RTN","ECXUTLA",182,0)
 .I $D(GROUP) S ^TMP($J,"ECXWARD",HIEN,1)=GROUP
"RTN","ECXUTLA",183,0)
 ;after all wards in file #42 are processed, arrange by g&l order
"RTN","ECXUTLA",184,0)
 S HIEN=0
"RTN","ECXUTLA",185,0)
 F  S HIEN=$O(^TMP($J,"ECXWARD",HIEN)) Q:HIEN=""  S DATA=^TMP($J,"ECXWARD",HIEN) D
"RTN","ECXUTLA",186,0)
 .S ORDER=$P(DATA,U,1),NAME=$P(DATA,U,2),DIV=$P(DATA,U,3),DEPT=$P(DATA,U,5)
"RTN","ECXUTLA",187,0)
 .S NAMEDEPT=NAME S:DEPT]"" NAMEDEPT=NAME_" <"_DEPT_">"
"RTN","ECXUTLA",188,0)
 .S ^TMP($J,"ECXORDER",DIV,ORDER)=HIEN_U_NAMEDEPT_U
"RTN","ECXUTLA",189,0)
 .I $D(^TMP($J,"ECXWARD",HIEN,1)) S GROUP=^(1),^TMP($J,"ECXORDER",DIV,ORDER,1)=1_U_GROUP_U
"RTN","ECXUTLA",190,0)
 Q
"RTN","ECXUTLA",191,0)
 ;
"RTN","ECXUTLA",192,0)
SASHEAD(ECXFL,ECXHEAD,ECXDIV,ECXARRAY,ECXPG,ECXTAB) ;header and page control
"RTN","ECXUTLA",193,0)
 ;
"RTN","ECXUTLA",194,0)
 ;   ECXFL   = feeder location (division) (required)
"RTN","ECXUTLA",195,0)
 ;   ECXHEAD = extract header from file #727.1 (required)               
"RTN","ECXUTLA",196,0)
 ;   ECXDIV  = array of divisions selected (required)
"RTN","ECXUTLA",197,0)
 ;   ECXPG   = page number (required)
"RTN","ECXUTLA",198,0)
 ;   ECXTAB  = tab location;
"RTN","ECXUTLA",199,0)
 ;             allows for proper spacing in sub-header line (optional)
"RTN","ECXUTLA",200,0)
 ;
"RTN","ECXUTLA",201,0)
 N JJ,SS,LN
"RTN","ECXUTLA",202,0)
 S $P(LN,"-",80)=""
"RTN","ECXUTLA",203,0)
 I $G(ECXTAB)="" S ECXTAB=40
"RTN","ECXUTLA",204,0)
 I $E(IOST)="C" D
"RTN","ECXUTLA",205,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTLA",206,0)
 .I PG>0 S DIR(0)="E" W ! D ^DIR K DIR S:'Y QFLG=1
"RTN","ECXUTLA",207,0)
 Q:QFLG
"RTN","ECXUTLA",208,0)
 W:$Y!($E(IOST)="C") @IOF S ECXPG=ECXPG+1
"RTN","ECXUTLA",209,0)
 W !,"SAS Audit Report for "_ECXARRAY("TYPE")_" ("_ECXHEAD_") Extract"
"RTN","ECXUTLA",210,0)
 W !,"DSS Extract Log #:    "_ECXARRAY("EXTRACT")
"RTN","ECXUTLA",211,0)
 W !,"Date Range of Audit:  "_ECXARRAY("START")_" to "_ECXARRAY("END")
"RTN","ECXUTLA",212,0)
 W !,"Report Run Date/Time: "_ECXRUN
"RTN","ECXUTLA",213,0)
 I $D(ECXDIV(ECXFL)) W !,"Division/Site:        "_$P(ECXDIV(ECXFL),U,2)_" ("_ECXFL_")",?68,"Page: "_ECXPG
"RTN","ECXUTLA",214,0)
 I '$D(ECXDIV(ECXFL)) W !,"Division/Site:        "_"Unknown",?68,"Page: "_ECXPG
"RTN","ECXUTLA",215,0)
 W !!,"Feeder Location",?ECXTAB,"Feeder Key",?68,"Quantity"
"RTN","ECXUTLA",216,0)
 W !,LN,!
"RTN","ECXUTLA",217,0)
 Q
"SEC","^DIC",727.29,727.29,0,"AUDIT")
@
"SEC","^DIC",727.29,727.29,0,"DD")
@
"SEC","^DIC",727.29,727.29,0,"DEL")
@
"SEC","^DIC",727.29,727.29,0,"LAYGO")
@
"SEC","^DIC",727.29,727.29,0,"RD")
@
"SEC","^DIC",727.29,727.29,0,"WR")
@
"VER")
8.0^22.0
"^DD",727.29,727.29,0)
FIELD^^.05^5
"^DD",727.29,727.29,0,"DDA")
N
"^DD",727.29,727.29,0,"DT")
3080423
"^DD",727.29,727.29,0,"IX","AC",727.29,.02)

"^DD",727.29,727.29,0,"IX","AL",727.29,.01)

"^DD",727.29,727.29,0,"IX","B",727.29,.01)

"^DD",727.29,727.29,0,"NM","DSS LOINC FILE")

"^DD",727.29,727.29,0,"PT",500004,.02)

"^DD",727.29,727.29,.01,0)
LOINC CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",727.29,727.29,.01,1,0)
^.1
"^DD",727.29,727.29,.01,1,1,0)
727.29^B
"^DD",727.29,727.29,.01,1,1,1)
S ^ECX(727.29,"B",$E(X,1,30),DA)=""
"^DD",727.29,727.29,.01,1,1,2)
K ^ECX(727.29,"B",$E(X,1,30),DA)
"^DD",727.29,727.29,.01,1,2,0)
727.29^AL^MUMPS
"^DD",727.29,727.29,.01,1,2,1)
S ^ECX(727.29,"AL",$P(X,"-"),$P(X,"-",2),DA)=""
"^DD",727.29,727.29,.01,1,2,2)
K ^ECX(727.29,"AL",$P(X,"-"),$P(X,"-",2),DA)
"^DD",727.29,727.29,.01,1,2,"%D",0)
^^1^1^3080423^
"^DD",727.29,727.29,.01,1,2,"%D",1,0)
This cross reference contains the LOINC code and check digit.
"^DD",727.29,727.29,.01,1,2,"DT")
3080423
"^DD",727.29,727.29,.01,3)
The unique LOINC code.
"^DD",727.29,727.29,.01,21,0)
^^1^1^3080424^
"^DD",727.29,727.29,.01,21,1,0)
The unique LOINC with check digit code.
"^DD",727.29,727.29,.01,"DT")
3080423
"^DD",727.29,727.29,.02,0)
DSS LAR TEST NUMBER^NJ4,0^^0;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.29,727.29,.02,1,0)
^.1
"^DD",727.29,727.29,.02,1,1,0)
727.29^AC
"^DD",727.29,727.29,.02,1,1,1)
S ^ECX(727.29,"AC",$E(X,1,30),DA)=""
"^DD",727.29,727.29,.02,1,1,2)
K ^ECX(727.29,"AC",$E(X,1,30),DA)
"^DD",727.29,727.29,.02,1,1,"DT")
3081104
"^DD",727.29,727.29,.02,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",727.29,727.29,.02,21,0)
^^1^1^3080423^
"^DD",727.29,727.29,.02,21,1,0)
This is the DSS assigned test number (DSS Test ID) for the LAR Test.
"^DD",727.29,727.29,.02,"DT")
3081104
"^DD",727.29,727.29,.03,0)
DSS TEST NAME^F^^0;3^K:$L(X)>40!($L(X)<3) X
"^DD",727.29,727.29,.03,3)
Answer must be 3-40 characters in length.
"^DD",727.29,727.29,.03,21,0)
^^1^1^3080423^
"^DD",727.29,727.29,.03,21,1,0)
This is the DSS assigned test name for the laboratory test.
"^DD",727.29,727.29,.03,"DT")
3080423
"^DD",727.29,727.29,.04,0)
DSS REPORTING UNITS^F^^0;4^K:$L(X)>60!($L(X)<1) X
"^DD",727.29,727.29,.04,3)
Answer must be 1-60 characters in length.
"^DD",727.29,727.29,.04,21,0)
^^1^1^3080423^
"^DD",727.29,727.29,.04,21,1,0)
These are the units of measurement that DSS accepts for the LAR Tests.
"^DD",727.29,727.29,.04,"DT")
3080423
"^DD",727.29,727.29,.05,0)
LOINC NAME^F^^0;5^K:$L(X)>40!($L(X)<1) X
"^DD",727.29,727.29,.05,3)
Answer must be 1-40 characters in length.
"^DD",727.29,727.29,.05,21,0)
^^1^1^3080423^
"^DD",727.29,727.29,.05,21,1,0)
The name of the LOINC Code provided to DSS by STS.
"^DD",727.29,727.29,.05,"DT")
3080423
"^DD",727.811,727.811,97,0)
ENCOUNTER EC^S^Y:YES;N:NO;^2;24^Q
"^DD",727.811,727.811,97,3)
Encounter Environmental Contaminants - Y/N
"^DD",727.811,727.811,97,21,0)
^^3^3^3080512^^
"^DD",727.811,727.811,97,21,1,0)
Indicates if treatment provided during this patient encounter is related 
"^DD",727.811,727.811,97,21,2,0)
to exposure to environmental contaminants while serving in the Persian 
"^DD",727.811,727.811,97,21,3,0)
Gulf or Somalia.  Values: Y=YES, N=NO
"^DD",727.811,727.811,97,23,0)
^^4^4^3080506^^
"^DD",727.811,727.811,97,23,1,0)
Using the pointer to the VISIT file (#90000.10) a call to the PCE 
"^DD",727.811,727.811,97,23,2,0)
API ENCEVENT^PXAPI is made.  This call returns visit data, including 
"^DD",727.811,727.811,97,23,3,0)
the PERSIAN GULF EXPOSURE field (#80004) in the VISIT file 
"^DD",727.811,727.811,97,23,4,0)
(#9000010).
"^DD",727.811,727.811,97,"DT")
3080512
"^DD",727.811,727.811,98,0)
RADIATION ENCOUNTER INDICATOR^S^Y:YES;N:NO;^2;25^Q
"^DD",727.811,727.811,98,3)
Encounter Ionizing Radiation - Y=Yes, N=No
"^DD",727.811,727.811,98,21,0)
^^3^3^3080512^^
"^DD",727.811,727.811,98,21,1,0)
Indicates if treatment provided during this patient encounter is related 
"^DD",727.811,727.811,98,21,2,0)
to exposure to ionizing radiation.
"^DD",727.811,727.811,98,21,3,0)
Values: Y=YES, N=NO, U=UNKNOWN
"^DD",727.811,727.811,98,23,0)
^^4^4^3080717^
"^DD",727.811,727.811,98,23,1,0)
Using the Surgery VISIT field (#.015) in the SURGERY file (#130) a call 
"^DD",727.811,727.811,98,23,2,0)
is made to API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The 
"^DD",727.811,727.811,98,23,3,0)
ENCEVENT^PXAPI returns visit data, including the IONIZING RADIATION 
"^DD",727.811,727.811,98,23,4,0)
EXPOSURE field (#80003) in the VISIT file (#9000010).
"^DD",727.811,727.811,98,"DT")
3080717
"^DD",727.811,727.811,99,0)
MST ENCOUNTER INDICATOR^S^Y:YES;N:NO;^2;26^Q
"^DD",727.811,727.811,99,3)
Encounter Military Sexual Trauma - Y/N
"^DD",727.811,727.811,99,21,0)
^^3^3^3080512^^
"^DD",727.811,727.811,99,21,1,0)
Indicates if treatment provided during this patient encounter is related 
"^DD",727.811,727.811,99,21,2,0)
to Military Sexual Trauma.
"^DD",727.811,727.811,99,21,3,0)
Values: Y=YES, N=NO
"^DD",727.811,727.811,99,23,0)
^^3^3^3080509^
"^DD",727.811,727.811,99,23,1,0)
Using a pointer to the VISIT file (#9000010) a call to the PCE API, 
"^DD",727.811,727.811,99,23,2,0)
ENCEVENT^PXAPI, is made. This call returns visit data, including the MST 
"^DD",727.811,727.811,99,23,3,0)
ENCOUNTER INDICATOR  field (#80005) in the VISIT file (#9000010).
"^DD",727.811,727.811,99,"DT")
3080512
"^DD",727.811,727.811,100,0)
ENCOUNTER SC^S^Y:YES;N:NO;^2;27^Q
"^DD",727.811,727.811,100,3)
Encounter Service Connected - Y/N
"^DD",727.811,727.811,100,21,0)
^^3^3^3080509^
"^DD",727.811,727.811,100,21,1,0)
Indicates if treatment provided during this patient encounter is Service 
"^DD",727.811,727.811,100,21,2,0)
Connected.
"^DD",727.811,727.811,100,21,3,0)
Values: Y=YES, N=NO
"^DD",727.811,727.811,100,23,0)
^^3^3^3080509^
"^DD",727.811,727.811,100,23,1,0)
Using a pointer to the VISIT file (#9000010) a call to the PCE API, 
"^DD",727.811,727.811,100,23,2,0)
ENCEVENT^PXAPI, is made. This call returns visit data, including the 
"^DD",727.811,727.811,100,23,3,0)
SERVICE CONNECTED field (#80001) in the VISIT file (#9000010).
"^DD",727.811,727.811,100,"DT")
3080512
"^DD",727.811,727.811,101,0)
AGENT ORANGE STATUS^S^Y:YES;N:NO;U:UNKNOWN;^2;28^Q
"^DD",727.811,727.811,101,3)
Agent Orange Status - Y=Yes, N=No, U=Unknown
"^DD",727.811,727.811,101,21,0)
^^2^2^3080509^
"^DD",727.811,727.811,101,21,1,0)
Indicates if patient was exposed to Agent Orange.
"^DD",727.811,727.811,101,21,2,0)
Values: Y=YES, N=NO, U=UNKNOWN
"^DD",727.811,727.811,101,23,0)
^^2^2^3080509^
"^DD",727.811,727.811,101,23,1,0)
Derived from the PATIENT file (#2); AGENT ORANGE EXPOS. INDICATED field 
"^DD",727.811,727.811,101,23,2,0)
(#.32102). The status indicator is returned by SVC^VADPT.
"^DD",727.811,727.811,101,"DT")
3080512
"^DD",727.811,727.811,102,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:NO;U:UNKNOWN;^2;29^Q
"^DD",727.811,727.811,102,3)
Environmental Contaminents Status - Y=Yes, N=No, U=Unknown
"^DD",727.811,727.811,102,21,0)
^^3^3^3080512^^
"^DD",727.811,727.811,102,21,1,0)
Indicates if patient claims exposure to environmental contaminants while 
"^DD",727.811,727.811,102,21,2,0)
serving in the Persian Gulf or Somalia.
"^DD",727.811,727.811,102,21,3,0)
Values:  Y=YES, N=NO, U=UNKNOWN
"^DD",727.811,727.811,102,23,0)
^^3^3^3080509^
"^DD",727.811,727.811,102,23,1,0)
Derived from the ENVIRONMENTAL CONTAMINANTS field (#.322013) in the 
"^DD",727.811,727.811,102,23,2,0)
PATIENT file (#2) using the patient's DFN. The field will have a NULL 
"^DD",727.811,727.811,102,23,3,0)
value if the PATIENT file (#2) record does not indicate a status.
"^DD",727.811,727.811,102,"DT")
3080512
"^DD",727.811,727.811,103,0)
RADIATION STATUS^S^Y:YES;N:NO;^2;30^Q
"^DD",727.811,727.811,103,3)
Radiation Status - Y/N
"^DD",727.811,727.811,103,21,0)
^^2^2^3080509^
"^DD",727.811,727.811,103,21,1,0)
Indicates if patient claims exposure to ionizing radiation.
"^DD",727.811,727.811,103,21,2,0)
Values: Y=YES, N=NO
"^DD",727.811,727.811,103,23,0)
^^4^4^3080509^
"^DD",727.811,727.811,103,23,1,0)
Derived from the RADIATION EXPOSURE INDICATED field (#.32103) in the 
"^DD",727.811,727.811,103,23,2,0)
PATIENT file (#2) using the patient's DFN. The status indicator is 
"^DD",727.811,727.811,103,23,3,0)
returned by SVC^VADPT.  This field will have a NULL value if the PATIENT 
"^DD",727.811,727.811,103,23,4,0)
file (#2) record does not indicate a status.
"^DD",727.811,727.811,103,"DT")
3080512
"^DD",727.811,727.811,104,0)
MST STATUS^S^Y:Screened, reports MST;N:Screened, does not report MST;D:Screened, declines to answer;U:Unknown;^2;31^Q
"^DD",727.811,727.811,104,3)
Military Sexual Trauma-Y=Yes,N=No,D=Declined to answer,U=Unknown
"^DD",727.811,727.811,104,21,0)
^^6^6^3080509^
"^DD",727.811,727.811,104,21,1,0)
Indicates if patient claims Military Sexual Trauma
"^DD",727.811,727.811,104,21,2,0)
Values:
"^DD",727.811,727.811,104,21,3,0)
Y=SCREENED, REPORTS MST
"^DD",727.811,727.811,104,21,4,0)
N=SCREENED, DOES NOT REPORT MST
"^DD",727.811,727.811,104,21,5,0)
D=SCREENED, DECLINES TO ANSWER
"^DD",727.811,727.811,104,21,6,0)
U=UNKNOWN
"^DD",727.811,727.811,104,23,0)
^^4^4^3080509^
"^DD",727.811,727.811,104,23,1,0)
The MST HISTORY file (#29.11) holds data regarding military sexual trauma 
"^DD",727.811,727.811,104,23,2,0)
claims and effective dates. The MST status is stored in the MST STATUS 
"^DD",727.811,727.811,104,23,3,0)
field (#3). A call is made to $$GETSTAT^DGMSTAPI(DFN,DGDATE) using the 
"^DD",727.811,727.811,104,23,4,0)
patient DFN and the date in the DAY field.
"^DD",727.811,727.811,104,"DT")
3080512
"^DD",727.813,727.813,42,0)
LOINC CODE^F^^1;21^K:$L(X)>10!($L(X)<1) X
"^DD",727.813,727.813,42,3)
Answer must be 1-10 characters in length
"^DD",727.813,727.813,42,21,0)
^^1^1^3080509^
"^DD",727.813,727.813,42,21,1,0)
A universal coding standard for identifying laboratory observations.
"^DD",727.813,727.813,42,23,0)
^^2^2^3080509^
"^DD",727.813,727.813,42,23,1,0)
Derived by finding the value of the Test field (#9 above) on the 
"^DD",727.813,727.813,42,23,2,0)
LABORATORY TEST file (#60) and retrieving the LOINC Code field.
"^DD",727.813,727.813,42,"DT")
3080509
"^DD",727.824,727.824,9,0)
TEST CODE^RF^^0;10^K:$L(X)>4!($L(X)<4)!'(X?4N) X
"^DD",727.824,727.824,9,.1)
Test Code
"^DD",727.824,727.824,9,3)
Your answer must be 4 characters in length.
"^DD",727.824,727.824,9,21,0)
^.001^1^1^3080702^^^^
"^DD",727.824,727.824,9,21,1,0)
The coded value of the lab test as specified by the vendor.
"^DD",727.824,727.824,9,23,0)
^^3^3^3080702^
"^DD",727.824,727.824,9,23,1,0)
This is the DSS assigned test number (DSS Test ID) from file #727.29.
"^DD",727.824,727.824,9,23,2,0)
The ID is padded on the left with zeroes so that the data element
"^DD",727.824,727.824,9,23,3,0)
is always exactly 4 digits.
"^DD",727.824,727.824,9,"DT")
2961009
"^DD",727.824,727.824,31,0)
LOINC CODE^F^^1;12^K:$L(X)>10!($L(X)<1) X
"^DD",727.824,727.824,31,3)
Answer must be 1-10 characters in length.
"^DD",727.824,727.824,31,21,0)
^^1^1^3080509^
"^DD",727.824,727.824,31,21,1,0)
A universal coding standard for identifying laboratory observations.
"^DD",727.824,727.824,31,23,0)
^^1^1^3080509^
"^DD",727.824,727.824,31,23,1,0)
Derived from the LAB DSS LAR EXTRACT file (#64.036), LOINC CODE field.
"^DD",727.824,727.824,31,"DT")
3080509
"^DD",727.826,727.826,29,0)
TYPE OF TRANSACTION^S^I:Initial issue;R:Replacement;S:Spare;X:Repair;5:Rental;^0;30^Q
"^DD",727.826,727.826,29,.1)
Type of Transaction
"^DD",727.826,727.826,29,3)
Enter I to indicate an initial prosthetic issue, R for replacement, S for a spare prosthesis X for a repaired prosthesis, and 5 for rental.
"^DD",727.826,727.826,29,10)
TYPE OF TRANSACTION field (#2) in the RECORD OF PROS APPLIANCE/REPAIR file (#660).
"^DD",727.826,727.826,29,21,0)
^.001^2^2^3071108^^^^
"^DD",727.826,727.826,29,21,1,0)
TYPE OF TRANSACTION is the code that best describes the prosthetic
"^DD",727.826,727.826,29,21,2,0)
transaction.
"^DD",727.826,727.826,29,23,0)
^.001^3^3^3071108^^^^
"^DD",727.826,727.826,29,23,1,0)
The TYPE OF TRANSACTION is derived from the TYPE OF TRANSACTION field (#2)
"^DD",727.826,727.826,29,23,2,0)
in the RECORD OF PROS APPLIANCE/REPAIR file (#660).  If the TYPE OF
"^DD",727.826,727.826,29,23,3,0)
TRANSACTION is not known, NULL is assigned to the field.
"^DD",727.826,727.826,29,"DT")
3071108
"^DD",728.44,728.44,3,0)
DSS STOP CODE^NJ3,0X^^0;4^N DIC D INPUTT^ECXUTL6 Q:'$D(X)  K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X Q:'$D(X)  N ECXSC S ECXSC=$O(^DIC(40.7,"C",X,"")) I ECXSC'="" K:("PE"'[$P(^DIC(40.7,ECXSC,0),U,6))!($P(^(0),U,7)>DT) X
"^DD",728.44,728.44,3,3)
Enter an active 3 digit Stop Code with restriction type of "Primary" or "Either".
"^DD",728.44,728.44,3,4)
N X S ZD=D,X="?",DIC="^DIC(40.7,",DIC(0)="EQ",DIC("S")="I '$P(^(0),U,3) I $L($P(^(0),U,2))=3" D ^DIC S D=ZD K DIC,ZD
"^DD",728.44,728.44,3,21,0)
^.001^5^5^3080929^^^^
"^DD",728.44,728.44,3,21,1,0)
Three digit Stop Code number assigned to 
"^DD",728.44,728.44,3,21,2,0)
specific location. Each Stop Code number
"^DD",728.44,728.44,3,21,3,0)
represents a type of care or Service/treating
"^DD",728.44,728.44,3,21,4,0)
specialty (clinics only). Stop code must have
"^DD",728.44,728.44,3,21,5,0)
a restriction type of Primary or Either.
"^DD",728.44,728.44,3,23,0)
^.001^2^2^3080929^^^^
"^DD",728.44,728.44,3,23,1,0)
Stop code is verified by existence in File# 40.7
"^DD",728.44,728.44,3,23,2,0)
Node ^DIC(40.7,"C",stop code,pointer) must exist.
"^DD",728.44,728.44,3,"DT")
3080929
"^DD",728.44,728.44,4,0)
DSS CREDIT STOP CODE^NJ3,0X^^0;5^N DIC D INPUTT^ECXUTL6 Q:'$D(X)  K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X Q:'$D(X)  N ECXSC S ECXSC=$O(^DIC(40.7,"C",X,"")) I ECXSC'="" K:("SE"'[$P(^DIC(40.7,ECXSC,0),U,6))!($P(^(0),U,7)>DT) X
"^DD",728.44,728.44,4,3)
Enter an active Stop Code with restriction type of "Secondary" or "Either".
"^DD",728.44,728.44,4,4)
N X S ZD=D,X="?",DIC="^DIC(40.7,",DIC(0)="EQ",DIC("S")="I '$P(^(0),U,3) I $L($P(^(0),U,2))=3 Q" D ^DIC S D=ZD K DIC,ZD
"^DD",728.44,728.44,4,21,0)
^.001^6^6^3080929^^^^
"^DD",728.44,728.44,4,21,1,0)
Appointments to this clinic will receive this
"^DD",728.44,728.44,4,21,2,0)
Stop Code credit in addition to the 'normal'
"^DD",728.44,728.44,4,21,3,0)
Stop Code credit if a Stop Code different from
"^DD",728.44,728.44,4,21,4,0)
the 'normal' Stop Code for this clinic is
"^DD",728.44,728.44,4,21,5,0)
entered here.  Credit Stop Code must have a
"^DD",728.44,728.44,4,21,6,0)
restriction type of Secondary or Either.
"^DD",728.44,728.44,4,23,0)
^.001^2^2^3080929^^^^
"^DD",728.44,728.44,4,23,1,0)
Credit Stop code is verified by existence in File# 40.7
"^DD",728.44,728.44,4,23,2,0)
Node ^DIC(40.7,"C",stop code,pointer) must exists.
"^DD",728.44,728.44,4,"DT")
3080929
"^DIC",727.29,727.29,0)
DSS LOINC FILE^727.29
"^DIC",727.29,727.29,0,"GL")
^ECX(727.29,
"^DIC",727.29,727.29,"%D",0)
^^6^6^3080424^
"^DIC",727.29,727.29,"%D",1,0)
This file contains the set of laboratory LOINC codes tracked by the 
"^DIC",727.29,727.29,"%D",2,0)
Decision Support System.  It contains corresponding DSS test numbers, DSS
"^DIC",727.29,727.29,"%D",3,0)
test names, reporting units, and LOINC name.
"^DIC",727.29,727.29,"%D",4,0)
 
"^DIC",727.29,727.29,"%D",5,0)
Entries in this file are determined by the DSS Program Office and should 
"^DIC",727.29,727.29,"%D",6,0)
not be changed or deleted.  New entries in this file should not be made.
"^DIC",727.29,"B","DSS LOINC FILE",727.29)

**INSTALL NAME**
FH*5.5*18
"BLD",7582,0)
FH*5.5*18^DIETETICS^0^3081104^y
"BLD",7582,4,0)
^9.64PA^^
"BLD",7582,6.3)
27
"BLD",7582,"KRN",0)
^9.67PA^8989.52^19
"BLD",7582,"KRN",.4,0)
.4
"BLD",7582,"KRN",.401,0)
.401
"BLD",7582,"KRN",.402,0)
.402
"BLD",7582,"KRN",.403,0)
.403
"BLD",7582,"KRN",.5,0)
.5
"BLD",7582,"KRN",.84,0)
.84
"BLD",7582,"KRN",3.6,0)
3.6
"BLD",7582,"KRN",3.8,0)
3.8
"BLD",7582,"KRN",9.2,0)
9.2
"BLD",7582,"KRN",9.8,0)
9.8
"BLD",7582,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7582,"KRN",9.8,"NM",1,0)
FHDSSAPI^^0^B49212104
"BLD",7582,"KRN",9.8,"NM","B","FHDSSAPI",1)

"BLD",7582,"KRN",19,0)
19
"BLD",7582,"KRN",19,"NM",0)
^9.68A^^
"BLD",7582,"KRN",19.1,0)
19.1
"BLD",7582,"KRN",101,0)
101
"BLD",7582,"KRN",409.61,0)
409.61
"BLD",7582,"KRN",771,0)
771
"BLD",7582,"KRN",870,0)
870
"BLD",7582,"KRN",8989.51,0)
8989.51
"BLD",7582,"KRN",8989.52,0)
8989.52
"BLD",7582,"KRN",8994,0)
8994
"BLD",7582,"KRN","B",.4,.4)

"BLD",7582,"KRN","B",.401,.401)

"BLD",7582,"KRN","B",.402,.402)

"BLD",7582,"KRN","B",.403,.403)

"BLD",7582,"KRN","B",.5,.5)

"BLD",7582,"KRN","B",.84,.84)

"BLD",7582,"KRN","B",3.6,3.6)

"BLD",7582,"KRN","B",3.8,3.8)

"BLD",7582,"KRN","B",9.2,9.2)

"BLD",7582,"KRN","B",9.8,9.8)

"BLD",7582,"KRN","B",19,19)

"BLD",7582,"KRN","B",19.1,19.1)

"BLD",7582,"KRN","B",101,101)

"BLD",7582,"KRN","B",409.61,409.61)

"BLD",7582,"KRN","B",771,771)

"BLD",7582,"KRN","B",870,870)

"BLD",7582,"KRN","B",8989.51,8989.51)

"BLD",7582,"KRN","B",8989.52,8989.52)

"BLD",7582,"KRN","B",8994,8994)

"BLD",7582,"QUES",0)
^9.62^^
"BLD",7582,"REQB",0)
^9.611^1^1
"BLD",7582,"REQB",1,0)
FH*5.5*16^1
"BLD",7582,"REQB","B","FH*5.5*16",1)

"MBREQ")
0
"PKG",119,-1)
1^1
"PKG",119,0)
DIETETICS^FH^Dietetics System
"PKG",119,22,0)
^9.49I^1^1
"PKG",119,22,1,0)
5.5^3050202^3050504^11721
"PKG",119,22,1,"PAH",1,0)
18^3081104
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","FHDSSAPI")
0^1^B49212104
"RTN","FHDSSAPI",1,0)
FHDSSAPI ;Hines OIFO/RTK,JRC-DSS REQUESTED API's  ; 11/3/08 2:42pm
"RTN","FHDSSAPI",2,0)
 ;;5.5;DIETETICS;**7,11,10,16,18**;Jan 28, 2005;Build 27
"RTN","FHDSSAPI",3,0)
 ;11/22/2006 KAM/BAY Remedy Call 168346 Add Variable Cleanup from *7
"RTN","FHDSSAPI",4,0)
 ;03/31/2008 GDU/SLC Remedy  226373, inpatient record selection for extract re-worked
"RTN","FHDSSAPI",5,0)
DATA(FHSDT,FHEDT) ;API for DSS extract of NFS data
"RTN","FHDSSAPI",6,0)
 ; INPUT: START DATE, END DATE
"RTN","FHDSSAPI",7,0)
 ; OUTPUT: ^TMP($J,"FH"
"RTN","FHDSSAPI",8,0)
 ; Get inpatient meals
"RTN","FHDSSAPI",9,0)
 I FHSDT>FHEDT W !!,"END DATE BEFORE START DATE!",! H 1 Q
"RTN","FHDSSAPI",10,0)
 K ^TMP($J,"FH") S FHEDT=FHEDT_.99
"RTN","FHDSSAPI",11,0)
 F FHDFN=0:0 S FHDFN=$O(^FHPT(FHDFN)) Q:FHDFN'>0  D
"RTN","FHDSSAPI",12,0)
 . I '$D(^FHPT(FHDFN,0)) Q
"RTN","FHDSSAPI",13,0)
 . D PATNAME^FHOMUTL
"RTN","FHDSSAPI",14,0)
 . ;Check if patient is deceased. Quit if date of death is before start date
"RTN","FHDSSAPI",15,0)
 . S FHDCEASE=$$GET1^DIQ(2,DFN,".351","I")
"RTN","FHDSSAPI",16,0)
 . I FHDCEASE&(FHDCEASE<FHSDT) D CLEAN Q
"RTN","FHDSSAPI",17,0)
 . D INPAT,CLEAN
"RTN","FHDSSAPI",18,0)
 D OUTPAT
"RTN","FHDSSAPI",19,0)
 K FHADM,FHDATE,FHDFN,FHDSEQ,FHEL,FHNODE,FHNODE2,FHNODE3,FHOMDT,FHRNUM
"RTN","FHDSSAPI",20,0)
 K FHSDTX1,FHSF,FHSFDT,FHSO,FHSODT,FHTF,FHTFDT,FHTFPR,FHTUZN,FHZ,FHZN
"RTN","FHDSSAPI",21,0)
 K FHCDATE,FHNUM,FHEFF,FHADTM,FHDDTM,FHLAST,X,X1,X2,FHDCEASE,FHSTOP
"RTN","FHDSSAPI",22,0)
 Q
"RTN","FHDSSAPI",23,0)
CLEAN ;Clean up variables set by PATNAME^FHOMUTL
"RTN","FHDSSAPI",24,0)
 K BID,DFN,FHAGE,FHDOB,FHPCZN,FHPTNM,FHSEX,FHSSN,FILE,PID,IEN
"RTN","FHDSSAPI",25,0)
 Q
"RTN","FHDSSAPI",26,0)
INPAT ;Process inpatient data
"RTN","FHDSSAPI",27,0)
 F FHADM=0:0 S FHADM=$O(^FHPT(FHDFN,"A",FHADM)) Q:FHADM'>0  D
"RTN","FHDSSAPI",28,0)
 .S FHZN=$G(^FHPT(FHDFN,"A",FHADM,0)),FHLAST="",FHSTOP=0
"RTN","FHDSSAPI",29,0)
 .S FHADTM=$P(FHZN,U,1) I $P(FHADTM,".")>FHEDT Q
"RTN","FHDSSAPI",30,0)
 .;If no discharge date, pull discharge date from registration pacakge for this admission
"RTN","FHDSSAPI",31,0)
 .;If no matching record in registration package for this admission continue to next admission record
"RTN","FHDSSAPI",32,0)
 .I '$P(FHZN,U,14) D  I FHSTOP Q
"RTN","FHDSSAPI",33,0)
 .. S VAINDT=FHADTM
"RTN","FHDSSAPI",34,0)
 .. D INP^VADPT
"RTN","FHDSSAPI",35,0)
 .. I VAIN(1)="" D KVAR^VADPT S FHSTOP=1 Q
"RTN","FHDSSAPI",36,0)
 .. S VAIP("E")=VAIN(1),VAIP("M")=1
"RTN","FHDSSAPI",37,0)
 .. D IN5^VADPT
"RTN","FHDSSAPI",38,0)
 .. I +VAIP(2)=3 S $P(FHZN,U,14)=+VAIP(3)
"RTN","FHDSSAPI",39,0)
 .. D KVAR^VADPT
"RTN","FHDSSAPI",40,0)
 .;If no discharge date, set to date of death if patient is deceased
"RTN","FHDSSAPI",41,0)
 .I '$P(FHZN,U,14),FHDCEASE S $P(FHZN,U,14)=FHDCEASE
"RTN","FHDSSAPI",42,0)
 .S FHDDTM=$P(FHZN,U,14) I FHDDTM'="",FHDDTM<FHSDT Q
"RTN","FHDSSAPI",43,0)
 .F FHDATE=0:0 S FHDATE=$O(^FHPT(FHDFN,"A",FHADM,"AC",FHDATE)) Q:FHDATE'>0!(FHDATE>FHEDT)  D
"RTN","FHDSSAPI",44,0)
 ..S FHDSEQ=$P($G(^FHPT(FHDFN,"A",FHADM,"AC",FHDATE,0)),U,2)
"RTN","FHDSSAPI",45,0)
 ..S FHNODE=$G(^FHPT(FHDFN,"A",FHADM,"DI",FHDSEQ,0))
"RTN","FHDSSAPI",46,0)
 ..I $P(FHNODE,U,18)="",$P(FHZN,U,14)'="" S $P(FHNODE,U,18)=$P(FHZN,U,14)
"RTN","FHDSSAPI",47,0)
 ..I FHDATE<FHSDT I FHLAST'="" K ^TMP($J,"FH",FHADM,FHDFN,FHLAST,"INP")
"RTN","FHDSSAPI",48,0)
 ..S FHLAST=FHDATE
"RTN","FHDSSAPI",49,0)
 ..S ^TMP($J,"FH",FHADM,FHDFN,FHDATE,"INP")=FHNODE I '$D(^TMP($J,"FH","ZN",FHDFN)) S ^TMP($J,"FH","ZN",FHDFN)=^FHPT(FHDFN,0)
"RTN","FHDSSAPI",50,0)
 .; Get additional feedings for inpatient
"RTN","FHDSSAPI",51,0)
 .; Get Early/Late trays
"RTN","FHDSSAPI",52,0)
 .F FHDATE=0:0 S FHDATE=$O(^FHPT(FHDFN,"A",FHADM,"EL",FHDATE)) Q:FHDATE'>0!(FHDATE>FHEDT)  D
"RTN","FHDSSAPI",53,0)
 ..S FHNODE=$G(^FHPT(FHDFN,"A",FHADM,"EL",FHDATE,0))
"RTN","FHDSSAPI",54,0)
 ..I FHDATE<FHSDT Q  I FHLAST'="" K ^TMP($J,"FH",FHADM,FHDFN,FHLAST,"EL")
"RTN","FHDSSAPI",55,0)
 ..S ^TMP($J,"FH",FHADM,FHDFN,FHDATE,"EL")=FHNODE
"RTN","FHDSSAPI",56,0)
 .;Get Supplemental Feedings
"RTN","FHDSSAPI",57,0)
 .S FHLAST="" F FHSF=0:0 S FHSF=$O(^FHPT(FHDFN,"A",FHADM,"SF",FHSF)) Q:FHSF'>0  D
"RTN","FHDSSAPI",58,0)
 ..S FHNODE=$G(^FHPT(FHDFN,"A",FHADM,"SF",FHSF,0))
"RTN","FHDSSAPI",59,0)
 ..I $P(FHNODE,U,32)="",$P(FHZN,U,14)'="" S $P(FHNODE,U,32)=$P(FHZN,U,14)
"RTN","FHDSSAPI",60,0)
 ..S FHDATE=$P(FHNODE,U,2) I FHDATE>FHEDT Q
"RTN","FHDSSAPI",61,0)
 ..S FHCDATE=$P(FHNODE,U,32) I FHCDATE'="" I FHCDATE<FHSDT Q
"RTN","FHDSSAPI",62,0)
 ..I FHDATE<FHSDT I FHLAST'="" K ^TMP($J,"FH",FHADM,FHDFN,FHLAST,"SF")
"RTN","FHDSSAPI",63,0)
 ..S FHLAST=FHDATE
"RTN","FHDSSAPI",64,0)
 ..S ^TMP($J,"FH",FHADM,FHDFN,FHDATE,"SF")=FHNODE
"RTN","FHDSSAPI",65,0)
 .;Get Standing Orders
"RTN","FHDSSAPI",66,0)
 .S FHNUM=0 F FHSO=0:0 S FHSO=$O(^FHPT(FHDFN,"A",FHADM,"SP",FHSO)) Q:FHSO'>0  D
"RTN","FHDSSAPI",67,0)
 ..S FHNODE=$G(^FHPT(FHDFN,"A",FHADM,"SP",FHSO,0))
"RTN","FHDSSAPI",68,0)
 ..I $P(FHNODE,U,6)="",$P(FHZN,U,14)'="" S $P(FHNODE,U,6)=$P(FHZN,U,14)
"RTN","FHDSSAPI",69,0)
 ..S FHDATE=$P(FHNODE,U,4) I FHDATE>FHEDT Q
"RTN","FHDSSAPI",70,0)
 ..S FHCDATE=$P(FHNODE,U,6) I FHCDATE'="" I FHCDATE<FHSDT Q
"RTN","FHDSSAPI",71,0)
 ..S FHNUM=FHNUM+1,^TMP($J,"FH",FHADM,FHDFN,FHDATE,"SO",FHNUM)=FHNODE
"RTN","FHDSSAPI",72,0)
 .;Get Tube Feedings
"RTN","FHDSSAPI",73,0)
 .S FHLAST="" F FHTF=0:0 S FHTF=$O(^FHPT(FHDFN,"A",FHADM,"TF",FHTF)) Q:FHTF'>0  D
"RTN","FHDSSAPI",74,0)
 ..S FHNODE=$G(^FHPT(FHDFN,"A",FHADM,"TF",FHTF,0))
"RTN","FHDSSAPI",75,0)
 ..I $P(FHNODE,U,11)="",$P(FHZN,U,14)'="" S $P(FHNODE,U,11)=$P(FHZN,U,14)
"RTN","FHDSSAPI",76,0)
 ..S FHDATE=$P(FHNODE,U,1) I FHDATE>FHEDT Q
"RTN","FHDSSAPI",77,0)
 ..S FHCDATE=$P(FHNODE,U,11) I FHCDATE'="" I FHCDATE<FHSDT Q
"RTN","FHDSSAPI",78,0)
 ..I FHDATE<FHSDT I FHLAST'="" K ^TMP($J,"FH",FHADM,FHDFN,FHLAST,"TF")
"RTN","FHDSSAPI",79,0)
 ..S FHLAST=FHDATE
"RTN","FHDSSAPI",80,0)
 ..S ^TMP($J,"FH",FHADM,FHDFN,FHDATE,"TF")=FHNODE
"RTN","FHDSSAPI",81,0)
 ..F FHTFPR=0:0 S FHTFPR=$O(^FHPT(FHDFN,"A",FHADM,"TF",FHTF,"P",FHTFPR)) Q:FHTFPR'>0  D
"RTN","FHDSSAPI",82,0)
 ...S FHNODE=$G(^FHPT(FHDFN,"A",FHADM,"TF",FHTF,"P",FHTFPR,0))
"RTN","FHDSSAPI",83,0)
 ...S ^TMP($J,"FH",FHADM,FHDFN,FHDATE,"TF",FHTFPR,"P")=FHNODE
"RTN","FHDSSAPI",84,0)
 ...Q
"RTN","FHDSSAPI",85,0)
 ..Q
"RTN","FHDSSAPI",86,0)
 .Q
"RTN","FHDSSAPI",87,0)
 Q
"RTN","FHDSSAPI",88,0)
 ;
"RTN","FHDSSAPI",89,0)
OUTPAT ;Process outpatient data
"RTN","FHDSSAPI",90,0)
 ; Get outpatient meals
"RTN","FHDSSAPI",91,0)
 S X1=FHSDT,X2=-1 D C^%DTC S FHSDTX1=X_.99
"RTN","FHDSSAPI",92,0)
 ; Get recurring meals
"RTN","FHDSSAPI",93,0)
 F FHOMDT=FHSDTX1:0 S FHOMDT=$O(^FHPT("RM",FHOMDT)) Q:FHOMDT=""!(FHOMDT'<FHEDT)  D
"RTN","FHDSSAPI",94,0)
 .F FHDFN=0:0 S FHDFN=$O(^FHPT("RM",FHOMDT,FHDFN)) Q:FHDFN=""  D
"RTN","FHDSSAPI",95,0)
 ..I '$D(^FHPT(FHDFN,0)) Q
"RTN","FHDSSAPI",96,0)
 ..F FHRNUM=0:0 S FHRNUM=$O(^FHPT("RM",FHOMDT,FHDFN,FHRNUM)) Q:FHRNUM=""  D
"RTN","FHDSSAPI",97,0)
 ...S FHNODE=$G(^FHPT(FHDFN,"OP",FHRNUM,0)) I $P(FHNODE,U,15)="C" Q
"RTN","FHDSSAPI",98,0)
 ...I $P($G(^FHPT(FHDFN,0)),U,3)="" Q
"RTN","FHDSSAPI",99,0)
 ...S ^TMP($J,"FH",FHOMDT,FHDFN,FHRNUM,"RM")=FHNODE I '$D(^TMP($J,"FH","ZN",FHDFN)) S ^TMP($J,"FH","ZN",FHDFN)=^FHPT(FHDFN,0)
"RTN","FHDSSAPI",100,0)
 ...;
"RTN","FHDSSAPI",101,0)
 ...; IF NON-VA LOC DIET(S) ARE IN FIELDS DIET1-DIET5
"RTN","FHDSSAPI",102,0)
 ...;
"RTN","FHDSSAPI",103,0)
 ...I $D(^FHPT(FHDFN,"OP",FHRNUM,2)) D
"RTN","FHDSSAPI",104,0)
 ....S FHNODE2=$G(^FHPT(FHDFN,"OP",FHRNUM,2)) I $P(FHNODE2,U,6)="C" Q
"RTN","FHDSSAPI",105,0)
 ....I $P($G(^FHPT(FHDFN,0)),U,3)="" Q
"RTN","FHDSSAPI",106,0)
 ....S ^TMP($J,"FH",FHOMDT,FHDFN,FHRNUM,"RMEL")=FHNODE2 I '$D(^TMP($J,"FH","ZN",FHDFN)) S ^TMP($J,"FH","ZN",FHDFN)=^FHPT(FHDFN,0)
"RTN","FHDSSAPI",107,0)
 ...I $D(^FHPT(FHDFN,"OP",FHRNUM,3)) D
"RTN","FHDSSAPI",108,0)
 ....S FHNODE3=$G(^FHPT(FHDFN,"OP",FHRNUM,3)) I $P(FHNODE3,U,5)="C" Q
"RTN","FHDSSAPI",109,0)
 ....I $P($G(^FHPT(FHDFN,0)),U,3)="" Q
"RTN","FHDSSAPI",110,0)
 ....S ^TMP($J,"FH",FHOMDT,FHDFN,FHRNUM,"RMTF")=FHNODE3 I '$D(^TMP($J,"FH","ZN",FHDFN)) S ^TMP($J,"FH","ZN",FHDFN)=^FHPT(FHDFN,0)
"RTN","FHDSSAPI",111,0)
 ....F FHZ=0:0 S FHZ=$O(^FHPT(FHDFN,"OP",FHRNUM,"TF",FHZ)) Q:FHZ'>0  D
"RTN","FHDSSAPI",112,0)
 .....S FHTUZN=$G(^FHPT(FHDFN,"OP",FHRNUM,"TF",FHZ,0))
"RTN","FHDSSAPI",113,0)
 .....S ^TMP($J,"FH",FHOMDT,FHDFN,FHRNUM,"RMTF",FHZ)=FHTUZN I '$D(^TMP($J,"FH","ZN",FHDFN)) S ^TMP($J,"FH","ZN",FHDFN)=^FHPT(FHDFN,0)
"RTN","FHDSSAPI",114,0)
 ...;fh*5.5*18
"RTN","FHDSSAPI",115,0)
 ...;adding supplemental feedings for outpatient
"RTN","FHDSSAPI",116,0)
 ...I $D(^FHPT(FHDFN,"OP",FHRNUM,"SF")) D
"RTN","FHDSSAPI",117,0)
 ....S FHLAST="" F FHSF=0:0 S FHSF=$O(^FHPT(FHDFN,"OP",FHRNUM,"SF",FHSF)) Q:FHSF'>0  D
"RTN","FHDSSAPI",118,0)
 .....S FHNODE=$G(^FHPT(FHDFN,"OP",FHRNUM,"SF",FHSF,0))
"RTN","FHDSSAPI",119,0)
 .....S FHDATE=$P(FHNODE,U,2) I FHDATE>FHEDT Q
"RTN","FHDSSAPI",120,0)
 .....S FHCDATE=$P(FHNODE,U,32) I FHCDATE'="" I FHCDATE<FHSDT Q
"RTN","FHDSSAPI",121,0)
 .....I FHDATE<FHSDT I FHLAST'="" K ^TMP($J,"FH",FHOMDT,FHDFN,FHRNUM,"SF")
"RTN","FHDSSAPI",122,0)
 .....S FHLAST=FHDATE
"RTN","FHDSSAPI",123,0)
 .....S ^TMP($J,"FH",FHOMDT,FHDFN,FHRNUM,"RMSF")=FHNODE
"RTN","FHDSSAPI",124,0)
 ...;adding standing orders for outpatient
"RTN","FHDSSAPI",125,0)
 ...S FHNUM=0 F FHSO=0:0 S FHSO=$O(^FHPT(FHDFN,"OP",FHRNUM,"SP",FHSO)) Q:FHSO'>0  D
"RTN","FHDSSAPI",126,0)
 ....S FHNODE=$G(^FHPT(FHDFN,"OP",FHRNUM,"SP",FHSO,0))
"RTN","FHDSSAPI",127,0)
 ....S FHDATE=$P(FHNODE,U,4) I FHDATE>FHEDT Q
"RTN","FHDSSAPI",128,0)
 ....S FHCDATE=$P(FHNODE,U,6) I FHCDATE'="" I FHCDATE<FHSDT Q
"RTN","FHDSSAPI",129,0)
 ....S FHNUM=FHNUM+1,^TMP($J,"FH",FHOMDT,FHDFN,FHRNUM,"RMSO",FHNUM)=FHNODE
"RTN","FHDSSAPI",130,0)
 ; Get special meals
"RTN","FHDSSAPI",131,0)
 F FHOMDT=FHSDTX1:0 S FHOMDT=$O(^FHPT("SM",FHOMDT)) Q:FHOMDT=""!(FHOMDT'<FHEDT)  D
"RTN","FHDSSAPI",132,0)
 .F FHDFN=0:0 S FHDFN=$O(^FHPT("SM",FHOMDT,FHDFN)) Q:FHDFN=""  D
"RTN","FHDSSAPI",133,0)
 ..I '$D(^FHPT(FHDFN,0)) Q
"RTN","FHDSSAPI",134,0)
 ..S FHNODE=$G(^FHPT(FHDFN,"SM",FHOMDT,0)) I $P(FHNODE,U,2)'="A" Q
"RTN","FHDSSAPI",135,0)
 ..I $P($G(^FHPT(FHDFN,0)),U,3)="" Q
"RTN","FHDSSAPI",136,0)
 ..S ^TMP($J,"FH",FHOMDT,FHDFN,"SM")=FHNODE I '$D(^TMP($J,"FH","ZN",FHDFN)) S ^TMP($J,"FH","ZN",FHDFN)=^FHPT(FHDFN,0)
"RTN","FHDSSAPI",137,0)
 ; Get guest meals
"RTN","FHDSSAPI",138,0)
 F FHOMDT=FHSDTX1:0 S FHOMDT=$O(^FHPT("GM",FHOMDT)) Q:FHOMDT=""!(FHOMDT'<FHEDT)  D
"RTN","FHDSSAPI",139,0)
 .F FHDFN=0:0 S FHDFN=$O(^FHPT("GM",FHOMDT,FHDFN)) Q:FHDFN=""  D
"RTN","FHDSSAPI",140,0)
 ..I '$D(^FHPT(FHDFN,0)) Q
"RTN","FHDSSAPI",141,0)
 ..S FHNODE=$G(^FHPT(FHDFN,"GM",FHOMDT,0)) I $P(FHNODE,U,9)="C" Q
"RTN","FHDSSAPI",142,0)
 ..I $P($G(^FHPT(FHDFN,0)),U,3)="" Q
"RTN","FHDSSAPI",143,0)
 ..S ^TMP($J,"FH",FHOMDT,FHDFN,"GM")=FHNODE I '$D(^TMP($J,"FH","ZN",FHDFN)) S ^TMP($J,"FH","ZN",FHDFN)=^FHPT(FHDFN,0)
"RTN","FHDSSAPI",144,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
PSJ*5.0*210
"BLD",7452,0)
PSJ*5.0*210^INPATIENT MEDICATIONS^0^3081104^y
"BLD",7452,1,0)
^^1^1^3080519^^
"BLD",7452,1,1,0)
This patch allows the DSS IV extract to be recreated.
"BLD",7452,4,0)
^9.64PA^^
"BLD",7452,6)
2^
"BLD",7452,6.3)
27
"BLD",7452,"KRN",0)
^9.67PA^8989.52^19
"BLD",7452,"KRN",.4,0)
.4
"BLD",7452,"KRN",.401,0)
.401
"BLD",7452,"KRN",.402,0)
.402
"BLD",7452,"KRN",.403,0)
.403
"BLD",7452,"KRN",.5,0)
.5
"BLD",7452,"KRN",.84,0)
.84
"BLD",7452,"KRN",3.6,0)
3.6
"BLD",7452,"KRN",3.8,0)
3.8
"BLD",7452,"KRN",9.2,0)
9.2
"BLD",7452,"KRN",9.8,0)
9.8
"BLD",7452,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7452,"KRN",9.8,"NM",1,0)
PSJDSS^^0^B29306659
"BLD",7452,"KRN",9.8,"NM","B","PSJDSS",1)

"BLD",7452,"KRN",19,0)
19
"BLD",7452,"KRN",19,"NM",0)
^9.68A^^
"BLD",7452,"KRN",19.1,0)
19.1
"BLD",7452,"KRN",101,0)
101
"BLD",7452,"KRN",409.61,0)
409.61
"BLD",7452,"KRN",771,0)
771
"BLD",7452,"KRN",870,0)
870
"BLD",7452,"KRN",8989.51,0)
8989.51
"BLD",7452,"KRN",8989.52,0)
8989.52
"BLD",7452,"KRN",8994,0)
8994
"BLD",7452,"KRN","B",.4,.4)

"BLD",7452,"KRN","B",.401,.401)

"BLD",7452,"KRN","B",.402,.402)

"BLD",7452,"KRN","B",.403,.403)

"BLD",7452,"KRN","B",.5,.5)

"BLD",7452,"KRN","B",.84,.84)

"BLD",7452,"KRN","B",3.6,3.6)

"BLD",7452,"KRN","B",3.8,3.8)

"BLD",7452,"KRN","B",9.2,9.2)

"BLD",7452,"KRN","B",9.8,9.8)

"BLD",7452,"KRN","B",19,19)

"BLD",7452,"KRN","B",19.1,19.1)

"BLD",7452,"KRN","B",101,101)

"BLD",7452,"KRN","B",409.61,409.61)

"BLD",7452,"KRN","B",771,771)

"BLD",7452,"KRN","B",870,870)

"BLD",7452,"KRN","B",8989.51,8989.51)

"BLD",7452,"KRN","B",8989.52,8989.52)

"BLD",7452,"KRN","B",8994,8994)

"BLD",7452,"QUES",0)
^9.62^^
"MBREQ")
0
"PKG",197,-1)
1^1
"PKG",197,0)
INPATIENT MEDICATIONS^PSJ^UNIT DOSE AND IVS
"PKG",197,22,0)
^9.49I^1^1
"PKG",197,22,1,0)
5.0^2971215^3000606^11721
"PKG",197,22,1,"PAH",1,0)
210^3081104^3507
"PKG",197,22,1,"PAH",1,1,0)
^^1^1^3081104
"PKG",197,22,1,"PAH",1,1,1,0)
This patch allows the DSS IV extract to be recreated.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","PSJDSS")
0^1^B29306659
"RTN","PSJDSS",1,0)
PSJDSS ;ALB/JRC-REGENERATE DSS EXTRACT DATA FILE (#728.113) & (728.904) ; 10/8/08 1:53pm
"RTN","PSJDSS",2,0)
 ;;5.0; INPATIENT MEDICATIONS ;**210**;16 DEC 97;Build 27
"RTN","PSJDSS",3,0)
 Q
"RTN","PSJDSS",4,0)
 ;
"RTN","PSJDSS",5,0)
 ;This routine was written to regenerate lost IV or UD data that is
"RTN","PSJDSS",6,0)
 ;normally stored in DSS intermediate files (#728.113) and (#728.904).
"RTN","PSJDSS",7,0)
 ;When this routine is invoked the users are prompted for a date range
"RTN","PSJDSS",8,0)
 ;The routine then loops thru the "AIV" xref in the case of IV or the
"RTN","PSJDSS",9,0)
 ;"AUS" xref in the  case of UD, validates the orders and regenerates
"RTN","PSJDSS",10,0)
 ;the records.
"RTN","PSJDSS",11,0)
 ;
"RTN","PSJDSS",12,0)
 ;Important Note: If the entries for a given range are not cleared the
"RTN","PSJDSS",13,0)
 ;                file is going to end with duplicates, so a check is
"RTN","PSJDSS",14,0)
 ;                done on file (#728.113) or (#728.904)  to see if any
"RTN","PSJDSS",15,0)
 ;                entries exist, if they do, the program quits.
"RTN","PSJDSS",16,0)
 ;
"RTN","PSJDSS",17,0)
 ;               Input:   EXTRACT = "IV" or "UD"
"RTN","PSJDSS",18,0)
 ;
"RTN","PSJDSS",19,0)
EN ;Entry Point
"RTN","PSJDSS",20,0)
 ;Check input
"RTN","PSJDSS",21,0)
 Q:'$G(EXTRACT)=""
"RTN","PSJDSS",22,0)
 N STDATE,ENDDATE
"RTN","PSJDSS",23,0)
 ;Get start and stop dates
"RTN","PSJDSS",24,0)
 Q:'$$DATE()
"RTN","PSJDSS",25,0)
 Q:'$$CHECK(EXTRACT)
"RTN","PSJDSS",26,0)
 S ZTDESC=EXTRACT_" EXTRACT DATA FILE: "_STDATE_" TO "_ENDDATE_" RECOMPILE",ZTRTN="START^PSJDSS",ZTIO=""
"RTN","PSJDSS",27,0)
 F I="EXTRACT","STDATE","ENDDATE" S ZTSAVE(I)=""
"RTN","PSJDSS",28,0)
 D ^%ZTLOAD
"RTN","PSJDSS",29,0)
 I $D(ZTSK) D
"RTN","PSJDSS",30,0)
 .W !,"Request queued as Task #",ZTSK,".",!
"RTN","PSJDSS",31,0)
 Q
"RTN","PSJDSS",32,0)
START ;Start recompile after queue
"RTN","PSJDSS",33,0)
 N COUNT
"RTN","PSJDSS",34,0)
 ;Process records and update intermediate file
"RTN","PSJDSS",35,0)
 D @EXTRACT
"RTN","PSJDSS",36,0)
 ;Send completion message
"RTN","PSJDSS",37,0)
 D MSG
"RTN","PSJDSS",38,0)
 ;verify ^tmp global is deleted
"RTN","PSJDSS",39,0)
 K ^TMP($J)
"RTN","PSJDSS",40,0)
 Q
"RTN","PSJDSS",41,0)
 ;
"RTN","PSJDSS",42,0)
DATE() ;Prompt user for start date
"RTN","PSJDSS",43,0)
 N DIR,X,Y,DIRUT
"RTN","PSJDSS",44,0)
 S DIR(0)="D"
"RTN","PSJDSS",45,0)
 S DIR("A")="Enter Start Date"
"RTN","PSJDSS",46,0)
 D ^DIR
"RTN","PSJDSS",47,0)
 I $D(DIRUT) Q 0
"RTN","PSJDSS",48,0)
 S STDATE=Y
"RTN","PSJDSS",49,0)
 ;Prompt user for end date
"RTN","PSJDSS",50,0)
 K DIR,X,Y
"RTN","PSJDSS",51,0)
 S DIR(0)="D"
"RTN","PSJDSS",52,0)
 S DIR("A")="Enter Stop Date"
"RTN","PSJDSS",53,0)
 D ^DIR
"RTN","PSJDSS",54,0)
 I $D(DIRUT) Q 0
"RTN","PSJDSS",55,0)
 S ENDDATE=Y
"RTN","PSJDSS",56,0)
 Q 1
"RTN","PSJDSS",57,0)
 ;
"RTN","PSJDSS",58,0)
CHECK(X) ;Check intermediate file for existing entries in selected time frame
"RTN","PSJDSS",59,0)
 ;if entries exist quit.
"RTN","PSJDSS",60,0)
 N FILE S FILE=""
"RTN","PSJDSS",61,0)
 S FILE=$S(X="IV":728.113,1:728.904)
"RTN","PSJDSS",62,0)
 I $O(^ECX(FILE,"A",STDATE-.001))&($O(^(STDATE-.001))'>ENDDATE) D  Q 0
"RTN","PSJDSS",63,0)
 .W !!!,?3,"******* Entries in file "_$S(X="IV":"(#728.113)",1:"(#728.904)")_" exist for selected time frame ******  "
"RTN","PSJDSS",64,0)
 .W !,?10,"****** Please purge entries before proceeding!!!! *****  "
"RTN","PSJDSS",65,0)
 Q 1
"RTN","PSJDSS",66,0)
 ;
"RTN","PSJDSS",67,0)
IV ;Process iv records to be recreated for intermediate file
"RTN","PSJDSS",68,0)
 ;init variables
"RTN","PSJDSS",69,0)
 N DATE,DFN,ON,PSIVNOW,PSIVI,PSIVQTY,PSIVC,LABN
"RTN","PSJDSS",70,0)
 ;$order thru ^PS(55,"AIV",dtorder,dfn,on) to regenerate data
"RTN","PSJDSS",71,0)
 S DATE=STDATE-.001,ENDDATE=ENDDATE_.9999
"RTN","PSJDSS",72,0)
 S DATE=0 F  S DATE=$O(^PS(55,"AIV",DATE)) Q:'DATE  D
"RTN","PSJDSS",73,0)
 .S DFN=0 F  S DFN=$O(^PS(55,"AIV",DATE,DFN)) Q:'DFN  D
"RTN","PSJDSS",74,0)
 ..S ON=0 F  S ON=$O(^PS(55,"AIV",DATE,DFN,ON)) Q:'ON  D
"RTN","PSJDSS",75,0)
 ...S LABN=0 F  S LABN=$O(^PS(55,DFN,"IV",ON,"LAB",LABN)) Q:'LABN  D
"RTN","PSJDSS",76,0)
 ....S PSIVC=$P($G(^PS(55,DFN,"IV",ON,"LAB",LABN,0)),U,3)
"RTN","PSJDSS",77,0)
 ....S PSIVNOW=$P($G(^PS(55,DFN,"IV",ON,"LAB",LABN,0)),U,2)
"RTN","PSJDSS",78,0)
 ....Q:PSIVNOW<STDATE!(PSIVNOW>ENDDATE)
"RTN","PSJDSS",79,0)
 ....S PSIVQTY=$P($G(^PS(55,DFN,"IV",ON,"LAB",LABN,0)),U,5) I +PSIVQTY=0 S PSIVQTY=1
"RTN","PSJDSS",80,0)
 ....F PSIVI=1:1:PSIVQTY D IVUPDATE
"RTN","PSJDSS",81,0)
 Q
"RTN","PSJDSS",82,0)
 ;
"RTN","PSJDSS",83,0)
UD ;Process ud records to be recreated for intermediate file
"RTN","PSJDSS",84,0)
 ;init variables
"RTN","PSJDSS",85,0)
 N DATE,DFN,ON,DISP,NODE,DRUG,QTY,COST,WARD,PROVIDER,HOW,PSGSTRT,DDATE
"RTN","PSJDSS",86,0)
 ;$order thru ^PS(55,5,"AUS",stop date/time,on) to regenerate data
"RTN","PSJDSS",87,0)
 S DATE=STDATE-.001,ENDDATE=ENDDATE_.9999,(DFN,COUNT)=0
"RTN","PSJDSS",88,0)
 F  S DFN=$O(^PS(55,DFN)) Q:'DFN  D
"RTN","PSJDSS",89,0)
 .S DATE=0
"RTN","PSJDSS",90,0)
 .F  S DATE=$O(^PS(55,DFN,5,"AUS",DATE)) Q:'DATE  D
"RTN","PSJDSS",91,0)
 ..S ON=0 F  S ON=$O(^PS(55,DFN,5,"AUS",DATE,ON)) Q:ON'>0  D
"RTN","PSJDSS",92,0)
 ...;Look at dispense log multiple 55.0611 check disp field (#.01)
"RTN","PSJDSS",93,0)
 ...S DISP=0  F  S DISP=$O(^PS(55,DFN,5,ON,11,DISP)) Q:DISP'>0  D
"RTN","PSJDSS",94,0)
 ....S NODE=$G(^PS(55,DFN,5,ON,11,DISP,0)) Q:NODE=""
"RTN","PSJDSS",95,0)
 ....S PSGSTRT=$P($G(^PS(55,DFN,5,ON,2)),"^",2)
"RTN","PSJDSS",96,0)
 ....S DDATE=$P(NODE,U),DRUG=+$P(NODE,U,2),QTY=$P(NODE,U,3),COST=$P(NODE,U,4),WARD=$P(NODE,U,7),PROVIDER=$P(NODE,U,8),HOW=$P(NODE,5)
"RTN","PSJDSS",97,0)
 ....Q:DDATE<STDATE!(DDATE>ENDDATE)
"RTN","PSJDSS",98,0)
 ....D UDUPDATE
"RTN","PSJDSS",99,0)
 Q
"RTN","PSJDSS",100,0)
 ;
"RTN","PSJDSS",101,0)
IVUPDATE ;Update dss intermediate file (#728.113)
"RTN","PSJDSS",102,0)
 S X="ECXPIV1" X ^%ZOSF("TEST") Q:'$T
"RTN","PSJDSS",103,0)
 N X,PROV,TYP,START,A,IVROOM,B,DSDATE,DRGTYP,DRG,ND,ADSTR,ADUNITS,SOLSTR,DDRG,DCST,Y,ECUD
"RTN","PSJDSS",104,0)
 K ^TMP($J)
"RTN","PSJDSS",105,0)
 S X=$G(^PS(55,DFN,"IV",+ON,0)),PROV=$P(X,U,6),TYP=$P(X,U,4),START=$P(X,U,2)
"RTN","PSJDSS",106,0)
 S A=$G(^PS(55,DFN,"IV",+ON,2)),IVROOM=$P(A,"^",2),B=$G(^PS(55,DFN,"IV",+ON,4)),DSDATE=$S($P(B,"^",2)]"":$P(B,"^",2),1:$P(A,"^"))
"RTN","PSJDSS",107,0)
 F DRGTYP="AD","SOL" F DRG=0:0 S DRG=$O(^PS(55,DFN,"IV",+ON,DRGTYP,DRG)) Q:'DRG  D
"RTN","PSJDSS",108,0)
 .S ND=$G(^PS(55,DFN,"IV",+ON,DRGTYP,DRG,0)),(ADSTR,ADUNITS,SOLSTR)=""
"RTN","PSJDSS",109,0)
 .S @(DRGTYP_"STR")=$P(ND,U,2),ND=$G(^PS($S(DRGTYP="AD":52.6,1:52.7),+ND,0)),DDRG=$P(ND,U,2),DCST=$P(ND,U,7)
"RTN","PSJDSS",110,0)
 .I DRGTYP="AD" S Y=$P(ND,U,3) I Y S Y=$$CODES^PSIVUTL(Y,52.6,2) S ADUNITS=Y
"RTN","PSJDSS",111,0)
 .S ECUD=DFN_U_+ON_U_DDRG_U_PSIVNOW_U_PSIVC_U_ADSTR_U_ADUNITS_U_+SOLSTR_U_PROV_U_TYP_U_DCST
"RTN","PSJDSS",112,0)
 .S ECUD=ECUD_U_$P($G(^PS(55,DFN,"IV",+ON,"DSS")),"^")_U_START_U_IVROOM_U_DSDATE S ^TMP($J,DFN,ON,DDRG)=ECUD D ^ECXPIV1 S COUNT=$G(COUNT)+1
"RTN","PSJDSS",113,0)
 Q
"RTN","PSJDSS",114,0)
 ;
"RTN","PSJDSS",115,0)
UDUPDATE ;Update unit dose extract data file (#728.904)
"RTN","PSJDSS",116,0)
 S X="ECXUD1" X ^%ZOSF("TEST") Q:'$T
"RTN","PSJDSS",117,0)
 S ECUD=DFN_"^"_DDATE_"^"_DRUG_"^"_QTY_"^"_WARD_"^"_PROVIDER_";200^"_COST_"^"_PSGSTRT_"^"_ON D ^ECXUD1 S COUNT=$G(COUNT)+1
"RTN","PSJDSS",118,0)
 Q
"RTN","PSJDSS",119,0)
 ;
"RTN","PSJDSS",120,0)
MSG ; send message to mail group 'DSS-ECGRP'
"RTN","PSJDSS",121,0)
 N XMSUB,XMDUZ,XMY,ECMSG,XMTEXT,ECGRP
"RTN","PSJDSS",122,0)
 S XMSUB=EXTRACT_" INTERMEDIATE DATA FOR DSS"
"RTN","PSJDSS",123,0)
 S XMDUZ="DSS SYSTEM",ECGRP=$S(EXTRACT="IV":"IV",1:"UD")
"RTN","PSJDSS",124,0)
 K XMY S XMY("G.DSS-"_ECGRP)=""
"RTN","PSJDSS",125,0)
 S ECMSG(1,0)="The "_EXTRACT_" information has been successfully regenerated"
"RTN","PSJDSS",126,0)
 S ECMSG(2,0)="from "_$$FMTE^XLFDT(STDATE)_" to "_$$FMTE^XLFDT(ENDDATE)
"RTN","PSJDSS",127,0)
 S ECMSG(3,0)=" "
"RTN","PSJDSS",128,0)
 S ECMSG(4,0)="A total of "_COUNT_" records were written."
"RTN","PSJDSS",129,0)
 S ECMSG(5,0)=" "
"RTN","PSJDSS",130,0)
 S XMTEXT="ECMSG("
"RTN","PSJDSS",131,0)
 D ^XMD
"RTN","PSJDSS",132,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
LR*5.2*385
"BLD",7449,0)
LR*5.2*385^LAB SERVICE^0^3081104^y
"BLD",7449,4,0)
^9.64PA^64.036^1
"BLD",7449,4,64.036,0)
64.036
"BLD",7449,4,64.036,2,0)
^9.641^64.368^1
"BLD",7449,4,64.036,2,64.368,0)
RESULTS  (sub-file)
"BLD",7449,4,64.036,2,64.368,1,0)
^9.6411^4^1
"BLD",7449,4,64.036,2,64.368,1,4,0)
DSS LOINC CODE
"BLD",7449,4,64.036,222)
y^n^p^^^^n^^n
"BLD",7449,4,64.036,224)

"BLD",7449,4,"APDD",64.036,64.368)

"BLD",7449,4,"APDD",64.036,64.368,4)

"BLD",7449,4,"B",64.036,64.036)

"BLD",7449,6.3)
27
"BLD",7449,"KRN",0)
^9.67PA^8989.52^19
"BLD",7449,"KRN",.4,0)
.4
"BLD",7449,"KRN",.401,0)
.401
"BLD",7449,"KRN",.402,0)
.402
"BLD",7449,"KRN",.403,0)
.403
"BLD",7449,"KRN",.5,0)
.5
"BLD",7449,"KRN",.84,0)
.84
"BLD",7449,"KRN",3.6,0)
3.6
"BLD",7449,"KRN",3.8,0)
3.8
"BLD",7449,"KRN",9.2,0)
9.2
"BLD",7449,"KRN",9.8,0)
9.8
"BLD",7449,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",7449,"KRN",9.8,"NM",1,0)
LRCAPDAR^^0^B14747213
"BLD",7449,"KRN",9.8,"NM","B","LRCAPDAR",1)

"BLD",7449,"KRN",19,0)
19
"BLD",7449,"KRN",19.1,0)
19.1
"BLD",7449,"KRN",101,0)
101
"BLD",7449,"KRN",409.61,0)
409.61
"BLD",7449,"KRN",771,0)
771
"BLD",7449,"KRN",870,0)
870
"BLD",7449,"KRN",8989.51,0)
8989.51
"BLD",7449,"KRN",8989.52,0)
8989.52
"BLD",7449,"KRN",8994,0)
8994
"BLD",7449,"KRN","B",.4,.4)

"BLD",7449,"KRN","B",.401,.401)

"BLD",7449,"KRN","B",.402,.402)

"BLD",7449,"KRN","B",.403,.403)

"BLD",7449,"KRN","B",.5,.5)

"BLD",7449,"KRN","B",.84,.84)

"BLD",7449,"KRN","B",3.6,3.6)

"BLD",7449,"KRN","B",3.8,3.8)

"BLD",7449,"KRN","B",9.2,9.2)

"BLD",7449,"KRN","B",9.8,9.8)

"BLD",7449,"KRN","B",19,19)

"BLD",7449,"KRN","B",19.1,19.1)

"BLD",7449,"KRN","B",101,101)

"BLD",7449,"KRN","B",409.61,409.61)

"BLD",7449,"KRN","B",771,771)

"BLD",7449,"KRN","B",870,870)

"BLD",7449,"KRN","B",8989.51,8989.51)

"BLD",7449,"KRN","B",8989.52,8989.52)

"BLD",7449,"KRN","B",8994,8994)

"BLD",7449,"QUES",0)
^9.62^^
"BLD",7449,"REQB",0)
^9.611^3^2
"BLD",7449,"REQB",2,0)
ECX*3.0*112^2
"BLD",7449,"REQB",3,0)
LR*5.2*386^2
"BLD",7449,"REQB","B","ECX*3.0*112",2)

"BLD",7449,"REQB","B","LR*5.2*386",3)

"FIA",64.036)
LAB DSS LAR EXTRACT
"FIA",64.036,0)
^LAR(64.036,
"FIA",64.036,0,0)
64.036
"FIA",64.036,0,1)
y^n^p^^^^n^^n
"FIA",64.036,0,10)

"FIA",64.036,0,11)

"FIA",64.036,0,"RLRO")

"FIA",64.036,0,"VR")
5.2^LR
"FIA",64.036,64.036)
1
"FIA",64.036,64.368)
1
"FIA",64.036,64.368,4)

"MBREQ")
0
"PKG",26,-1)
1^1
"PKG",26,0)
LAB SERVICE^LR^CORE LAB SYSTEM
"PKG",26,20,0)
^9.402P^1^1
"PKG",26,20,1,0)
2^^LRXDRPT
"PKG",26,20,1,1)

"PKG",26,20,"B",2,1)

"PKG",26,22,0)
^9.49I^1^1
"PKG",26,22,1,0)
5.2^2940927^2941128
"PKG",26,22,1,"PAH",1,0)
385^3081104
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","LRCAPDAR")
0^1^B14747213
"RTN","LRCAPDAR",1,0)
LRCAPDAR ;DALOI/FHS/RBN - LAB DSS RESULTS EXTRACT (LAR) ; 8/13/08 1:41pm
"RTN","LRCAPDAR",2,0)
 ;;5.2;LAB SERVICE;**143,169,258,307,326,386,385**;Sep 27, 1994;Build 27
"RTN","LRCAPDAR",3,0)
 ;
"RTN","LRCAPDAR",4,0)
 ; Call with Start Date (LRSDT)  End Date (LREDT) FileMan format
"RTN","LRCAPDAR",5,0)
 ; Calling routine should have already purged ^LAR(64.036)
"RTN","LRCAPDAR",6,0)
EN S:$D(ZTQUEUED) ZTREQ="@"
"RTN","LRCAPDAR",7,0)
 I $S($G(LRSDT)'?7N:1,$G(LREDT)'?7N:1,1:0) Q
"RTN","LRCAPDAR",8,0)
 L +^LAR(64.036):2 G:'$T END
"RTN","LRCAPDAR",9,0)
 N DIR,DIC,DIE,X,I,LR3,LRAA,LRAD,LRAN,LRC,LRSPDT,LRSPTM,UID,Y,DLAYGO
"RTN","LRCAPDAR",10,0)
 N LRDFN,LRDN,LRY,LRNLT,LRLOINC,ARRAY,LRP8
"RTN","LRCAPDAR",11,0)
 S DLAYGO=64
"RTN","LRCAPDAR",12,0)
 I LRSDT>LREDT S X=LRSDT,LRSDT=LREDT,LREDT=X
"RTN","LRCAPDAR",13,0)
 S LRX1=9999999-(LRSDT_.0001),LRX2=9999999-(LREDT_.235959)
"RTN","LRCAPDAR",14,0)
 S:'$D(^LAR(64.036,0))#2 ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^2"
"RTN","LRCAPDAR",15,0)
LR ;
"RTN","LRCAPDAR",16,0)
 S LRDFN=0 F  S LRDFN=$O(^LR(LRDFN)) Q:LRDFN<1  I $P($G(^LR(LRDFN,0)),U,2)=2 S LRN=^(0) D
"RTN","LRCAPDAR",17,0)
 . S DFN=$P(LRN,U,3),LRDPF=$P(LRN,U,2)
"RTN","LRCAPDAR",18,0)
 . S LRIDT=LRX2
"RTN","LRCAPDAR",19,0)
 . F  S LRIDT=$O(^LR(LRDFN,"CH",LRIDT)) Q:LRIDT<1!(LRIDT>LRX1)  I $D(^(LRIDT,0)),$P(^(0),U,3) S LRVSPEC=$P(^(0),U,5),LRN0=^(0) D
"RTN","LRCAPDAR",20,0)
 . . S LRDN=0 F  S LRDN=$O(^LR(LRDFN,"CH",LRIDT,LRDN)) Q:LRDN<1  D
"RTN","LRCAPDAR",21,0)
 . . . S LRY=$$TSTRES^LRRPU(LRDFN,"CH",LRIDT,LRDN,"",1)
"RTN","LRCAPDAR",22,0)
 . . . S LRP8=$P(LRY,U,8)
"RTN","LRCAPDAR",23,0)
 . . . S LRNLT=$P($P(LRP8,"!",2),";"),LRLOINC=$P($P(LRP8,"!",3),";")
"RTN","LRCAPDAR",24,0)
 . . . Q:'(+LRLOINC)
"RTN","LRCAPDAR",25,0)
 . . . K ARRAY S ARRAY(LRLOINC)=""
"RTN","LRCAPDAR",26,0)
 . . . D LOINC^ECXUTL6(.ARRAY) I +$G(^TMP($J,"ECXUTL6",LRLOINC))>0 D
"RTN","LRCAPDAR",27,0)
 . . . . D SET
"RTN","LRCAPDAR",28,0)
 . . . . I $O(LRVV(0)) D FILE
"RTN","LRCAPDAR",29,0)
WRAP K DA,DR,DIC,DIE,DD,DO
"RTN","LRCAPDAR",30,0)
 S (X,DINUM)=1
"RTN","LRCAPDAR",31,0)
 S DIC="^LAR(64.036,",DIC(0)="LNM" D FILE^DICN S DA=+Y
"RTN","LRCAPDAR",32,0)
 G:Y<1 END
"RTN","LRCAPDAR",33,0)
 S DR="9///"_DT,DR(2,64.369)=".01///"_DT_";1///"_LRSDT_";2///"_LREDT_";3///"_$$NOW^LRAFUNC1_";4////"_$G(DUZ)
"RTN","LRCAPDAR",34,0)
 S DIE=DIC D ^DIE G END
"RTN","LRCAPDAR",35,0)
 Q
"RTN","LRCAPDAR",36,0)
SET S LRVV(+$P(^TMP($J,"ECXUTL6",LRLOINC),U,2))=$P(LRY,U)_U_$P(LRY,U,2)_U_LRNLT_U_LRLOINC
"RTN","LRCAPDAR",37,0)
 Q
"RTN","LRCAPDAR",38,0)
END L -^LAR(64.036)
"RTN","LRCAPDAR",39,0)
 K D,D0,D1,DA,DFN,DI,DIC,DIE,DR,I,II,LRDA,LRDPF,LRIDT,LRN,LRN0
"RTN","LRCAPDAR",40,0)
 K LRNOW,LRSB,LRSP,LRTS,LRVR,LRVSPEC,LRVV,LRX1,LRX2,X,DLAYGO
"RTN","LRCAPDAR",41,0)
 K LRDFN,D2,LRSP,LRTS,DINUM,^TMP($J,"ECXUTL6") Q
"RTN","LRCAPDAR",42,0)
FILE K DR,DA,DIC,DIR,LRPROV
"RTN","LRCAPDAR",43,0)
 D UID
"RTN","LRCAPDAR",44,0)
 S LRN0T1=$P(LRN0,U),LRN0T2=$P(LRN0,U,3),LRPROV=$P(LRN0,U,10)
"RTN","LRCAPDAR",45,0)
 S $P(LRN0,U)=$S(LRN0T2<LRN0T1:LRN0T2,1:LRN0T1)
"RTN","LRCAPDAR",46,0)
 S X=$P(^LAR(64.036,0),U,3) S:X<2 X=2 F X=X:1 Q:'$D(^LAR(64.036,X))
"RTN","LRCAPDAR",47,0)
 S DA=X,DIC="^LAR(64.036,",DINUM=X,DIC(0)="LNMF"
"RTN","LRCAPDAR",48,0)
 S LRN0T1=$E($P($P(LRN0,U),".",2),1,4) S:'LRN0T1 LRN0T1=0 I LRN0T1,$E(LRN0T1,3,4)>59 S LRN0T1=$E(LRN0T1,1,2)_"59"
"RTN","LRCAPDAR",49,0)
 S LRN0T2=$E($P($P(LRN0,U,3),".",2),1,4) S:'LRN0T2 LRN0T2=0
"RTN","LRCAPDAR",50,0)
 S DIC("DR")="1///"_LRDPF_";2///"_DFN_";3///"_$P($P(LRN0,U),".")_";4///"_LRN0T1_";5///"_$P($P(LRN0,U,3),".")_";6///"_LRN0T2_";7///`"_LRVSPEC_";12///`"_LRPROV
"RTN","LRCAPDAR",51,0)
 K DD,DO D FILE^DICN K DA S LRDA=Y Q:LRDA<1
"RTN","LRCAPDAR",52,0)
 S $P(^LAR(64.036,+LRDA,0),U,9)=LRSPDT,$P(^(0),U,10)=LRSPTM
"RTN","LRCAPDAR",53,0)
F2 F LRTS=0:0 S LRTS=$O(LRVV(LRTS)) Q:LRTS<1  D DR1
"RTN","LRCAPDAR",54,0)
 K LRVV,LRN0T1,LRN0T2
"RTN","LRCAPDAR",55,0)
 Q
"RTN","LRCAPDAR",56,0)
DR1 K DR,DIC,DIR,DIE  S (X,DA)=+LRDA
"RTN","LRCAPDAR",57,0)
 S DR="8///"_LRTS
"RTN","LRCAPDAR",58,0)
 S DR(2,64.368)=".01///"_LRTS_";1///"_$P(LRVV(LRTS),U)_";2///"_$P(LRVV(LRTS),U,2)_";3///"_$P(LRVV(LRTS),U,3)_";4///"_$P(LRVV(LRTS),U,4)
"RTN","LRCAPDAR",59,0)
 S DIC="^LAR(64.036,"
"RTN","LRCAPDAR",60,0)
 S DIE=DIC,DIC(0)="LNM" D ^DIE
"RTN","LRCAPDAR",61,0)
 Q
"RTN","LRCAPDAR",62,0)
FIX S X=$P(^LAR(64.036,0),U,1,2) K ^LAR(64.036) S ^LAR(64.036,0)=X Q
"RTN","LRCAPDAR",63,0)
UID ;
"RTN","LRCAPDAR",64,0)
 S LRN0T2=$P(LRN0,U,3)
"RTN","LRCAPDAR",65,0)
 S LRSPDT=$P($P(LRN0,U),"."),LRSPTM=$E($P($P(LRN0,U),".",2),1,4)
"RTN","LRCAPDAR",66,0)
 D
"RTN","LRCAPDAR",67,0)
 . I 'LRSPTM S LRSPTM=1 Q
"RTN","LRCAPDAR",68,0)
 . I LRSPTM,$E(LRSPTM,3,4)>59 S LRSPTM=$E(LRSPTM,1,2)_"59"
"RTN","LRCAPDAR",69,0)
 S LRN0T1=LRSPDT_"."_LRSPTM,$P(LRN0,U)=LRN0T1
"RTN","LRCAPDAR",70,0)
 S UID=$P($G(^LR(LRDFN,"CH",LRIDT,"ORU")),U) Q:'$L(UID)
"RTN","LRCAPDAR",71,0)
 S LRC=$Q(^LRO(68,"C",UID)) Q:$QS(LRC,3)'=UID
"RTN","LRCAPDAR",72,0)
 S LRAA=$QS(LRC,4),LRAD=$QS(LRC,5),LRAN=$QS(LRC,6)
"RTN","LRCAPDAR",73,0)
 D
"RTN","LRCAPDAR",74,0)
 . N LR3,LRODT,LROODT,LRSN
"RTN","LRCAPDAR",75,0)
 . Q:'$G(^LRO(68,LRAA,1,LRAD,1,LRAN,0))  S LR3=^(0)
"RTN","LRCAPDAR",76,0)
 . S LRODT=$P(LR3,U,4),LRSN=$P(LR3,U,5)
"RTN","LRCAPDAR",77,0)
 . S LROODT=$P($G(^LRO(69,LRODT,1,LRSN,0)),U,5)
"RTN","LRCAPDAR",78,0)
 . I $G(LROODT) S $P(LRN0,U)=LROODT
"RTN","LRCAPDAR",79,0)
 Q
"UP",64.036,64.368,-1)
64.036^1
"UP",64.036,64.368,0)
64.368
"VER")
8.0^22.0
"^DD",64.036,64.368,4,0)
DSS LOINC CODE^F^^0;5^K:$L(X)>10!($L(X)<1) X
"^DD",64.036,64.368,4,3)
Answer must be 1-10 characters in length.
"^DD",64.036,64.368,4,21,0)
^^1^1^3080430^
"^DD",64.036,64.368,4,21,1,0)
The unique DSS LOINC Code.
"^DD",64.036,64.368,4,"DT")
3080430
**END**
**END**
