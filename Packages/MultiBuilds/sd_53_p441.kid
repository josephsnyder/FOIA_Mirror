KIDS Distribution saved on Oct 10, 2008@08:12:03
SD*5.3*441,PX*1.0*168,DG*5.3*664
**KIDS**:SD*5.3*441^PX*1.0*168^DG*5.3*664^

**INSTALL NAME**
SD*5.3*441
"BLD",7095,0)
SD*5.3*441^SCHEDULING^0^3081010^y
"BLD",7095,1,0)
^^3^3^3060209^
"BLD",7095,1,1,0)
PROJ 112/SHAD
"BLD",7095,1,2,0)
AGENT ORANGE/KOREAN DMZ
"BLD",7095,1,3,0)
FOREIGN ADDRESS
"BLD",7095,4,0)
^9.64PA^409.76^1
"BLD",7095,4,409.76,0)
409.76
"BLD",7095,4,409.76,222)
n^n^f^^n^^y^o^n
"BLD",7095,4,409.76,224)
N TMP S TMP=$P(^(0),"^",1) I ",737,7370,"[TMP
"BLD",7095,4,"B",409.76,409.76)

"BLD",7095,6)
4^
"BLD",7095,6.3)
14
"BLD",7095,"ABPKG")
n
"BLD",7095,"INI")
PRE^SD53441
"BLD",7095,"INIT")
POST^SD53441
"BLD",7095,"KRN",0)
^9.67PA^8989.52^19
"BLD",7095,"KRN",.4,0)
.4
"BLD",7095,"KRN",.401,0)
.401
"BLD",7095,"KRN",.402,0)
.402
"BLD",7095,"KRN",.403,0)
.403
"BLD",7095,"KRN",.5,0)
.5
"BLD",7095,"KRN",.84,0)
.84
"BLD",7095,"KRN",3.6,0)
3.6
"BLD",7095,"KRN",3.8,0)
3.8
"BLD",7095,"KRN",9.2,0)
9.2
"BLD",7095,"KRN",9.8,0)
9.8
"BLD",7095,"KRN",9.8,"NM",0)
^9.68A^18^18
"BLD",7095,"KRN",9.8,"NM",1,0)
SCDXUTL0^^0^B35211807
"BLD",7095,"KRN",9.8,"NM",2,0)
SDCO21^^0^B6387565
"BLD",7095,"KRN",9.8,"NM",3,0)
SDCO22^^0^B9108174
"BLD",7095,"KRN",9.8,"NM",4,0)
SDPCE^^0^B41674574
"BLD",7095,"KRN",9.8,"NM",5,0)
SDCO0^^0^B28062547
"BLD",7095,"KRN",9.8,"NM",6,0)
SCDXMSG1^^0^B74083613
"BLD",7095,"KRN",9.8,"NM",7,0)
SCMSVZEL^^0^B8712512
"BLD",7095,"KRN",9.8,"NM",8,0)
SD53441^^0^B12587684
"BLD",7095,"KRN",9.8,"NM",9,0)
SD53441A^^0^B19715313
"BLD",7095,"KRN",9.8,"NM",10,0)
SDAMEP2^^0^B30443820
"BLD",7095,"KRN",9.8,"NM",11,0)
SCMSVPID^^0^B22190830
"BLD",7095,"KRN",9.8,"NM",12,0)
SCMSVUT0^^0^B44244521
"BLD",7095,"KRN",9.8,"NM",13,0)
SCMSVUT3^^0^B20828078
"BLD",7095,"KRN",9.8,"NM",14,0)
SDLT^^0^B16314350
"BLD",7095,"KRN",9.8,"NM",15,0)
SDM^^0^B33704414
"BLD",7095,"KRN",9.8,"NM",16,0)
SDPPAT2^^0^B31485216
"BLD",7095,"KRN",9.8,"NM",17,0)
SDROUT2^^0^B16488063
"BLD",7095,"KRN",9.8,"NM",18,0)
SDPPAT1^^0^B22754269
"BLD",7095,"KRN",9.8,"NM","B","SCDXMSG1",6)

"BLD",7095,"KRN",9.8,"NM","B","SCDXUTL0",1)

"BLD",7095,"KRN",9.8,"NM","B","SCMSVPID",11)

"BLD",7095,"KRN",9.8,"NM","B","SCMSVUT0",12)

"BLD",7095,"KRN",9.8,"NM","B","SCMSVUT3",13)

"BLD",7095,"KRN",9.8,"NM","B","SCMSVZEL",7)

"BLD",7095,"KRN",9.8,"NM","B","SD53441",8)

"BLD",7095,"KRN",9.8,"NM","B","SD53441A",9)

"BLD",7095,"KRN",9.8,"NM","B","SDAMEP2",10)

"BLD",7095,"KRN",9.8,"NM","B","SDCO0",5)

"BLD",7095,"KRN",9.8,"NM","B","SDCO21",2)

"BLD",7095,"KRN",9.8,"NM","B","SDCO22",3)

"BLD",7095,"KRN",9.8,"NM","B","SDLT",14)

"BLD",7095,"KRN",9.8,"NM","B","SDM",15)

"BLD",7095,"KRN",9.8,"NM","B","SDPCE",4)

"BLD",7095,"KRN",9.8,"NM","B","SDPPAT1",18)

"BLD",7095,"KRN",9.8,"NM","B","SDPPAT2",16)

"BLD",7095,"KRN",9.8,"NM","B","SDROUT2",17)

"BLD",7095,"KRN",19,0)
19
"BLD",7095,"KRN",19,"NM",0)
^9.68A^^
"BLD",7095,"KRN",19.1,0)
19.1
"BLD",7095,"KRN",101,0)
101
"BLD",7095,"KRN",409.61,0)
409.61
"BLD",7095,"KRN",771,0)
771
"BLD",7095,"KRN",870,0)
870
"BLD",7095,"KRN",8989.51,0)
8989.51
"BLD",7095,"KRN",8989.52,0)
8989.52
"BLD",7095,"KRN",8994,0)
8994
"BLD",7095,"KRN","B",.4,.4)

"BLD",7095,"KRN","B",.401,.401)

"BLD",7095,"KRN","B",.402,.402)

"BLD",7095,"KRN","B",.403,.403)

"BLD",7095,"KRN","B",.5,.5)

"BLD",7095,"KRN","B",.84,.84)

"BLD",7095,"KRN","B",3.6,3.6)

"BLD",7095,"KRN","B",3.8,3.8)

"BLD",7095,"KRN","B",9.2,9.2)

"BLD",7095,"KRN","B",9.8,9.8)

"BLD",7095,"KRN","B",19,19)

"BLD",7095,"KRN","B",19.1,19.1)

"BLD",7095,"KRN","B",101,101)

"BLD",7095,"KRN","B",409.61,409.61)

"BLD",7095,"KRN","B",771,771)

"BLD",7095,"KRN","B",870,870)

"BLD",7095,"KRN","B",8989.51,8989.51)

"BLD",7095,"KRN","B",8989.52,8989.52)

"BLD",7095,"KRN","B",8994,8994)

"BLD",7095,"QUES",0)
^9.62^^
"BLD",7095,"REQB",0)
^9.611^19^14
"BLD",7095,"REQB",1,0)
SD*5.3*325^2
"BLD",7095,"REQB",2,0)
DG*5.3*653^2
"BLD",7095,"REQB",3,0)
SD*5.3*451^2
"BLD",7095,"REQB",5,0)
SD*5.3*394^2
"BLD",7095,"REQB",8,0)
SD*5.3*293^2
"BLD",7095,"REQB",10,0)
SD*5.3*395^2
"BLD",7095,"REQB",11,0)
SD*5.3*351^2
"BLD",7095,"REQB",13,0)
SD*5.3*140^2
"BLD",7095,"REQB",14,0)
SD*5.3*244^2
"BLD",7095,"REQB",15,0)
SD*5.3*377^2
"BLD",7095,"REQB",16,0)
SD*5.3*472^2
"BLD",7095,"REQB",17,0)
DG*5.3*688^2
"BLD",7095,"REQB",18,0)
SD*5.3*478^2
"BLD",7095,"REQB",19,0)
SD*5.3*523^2
"BLD",7095,"REQB","B","DG*5.3*653",2)

"BLD",7095,"REQB","B","DG*5.3*688",17)

"BLD",7095,"REQB","B","SD*5.3*140",13)

"BLD",7095,"REQB","B","SD*5.3*244",14)

"BLD",7095,"REQB","B","SD*5.3*293",8)

"BLD",7095,"REQB","B","SD*5.3*325",1)

"BLD",7095,"REQB","B","SD*5.3*351",11)

"BLD",7095,"REQB","B","SD*5.3*377",15)

"BLD",7095,"REQB","B","SD*5.3*394",5)

"BLD",7095,"REQB","B","SD*5.3*395",10)

"BLD",7095,"REQB","B","SD*5.3*451",3)

"BLD",7095,"REQB","B","SD*5.3*472",16)

"BLD",7095,"REQB","B","SD*5.3*478",18)

"BLD",7095,"REQB","B","SD*5.3*523",19)

"DATA",409.76,302,0)
7370^V
"DATA",409.76,302,1)
Project 112/SHAD is missing or invalid
"DATA",409.76,302,2,0)
^409.7621^2^2^3060320^^
"DATA",409.76,302,2,1,0)
Review Project 112/SHAD data through the Load/Edit Patient Data protocol,
"DATA",409.76,302,2,2,0)
Screen 7.
"DATA",409.76,302,"CHK")
S RES=$$VA01^SCMSVUT3(DATA)
"DATA",409.76,302,"COR")
S RTN=$$LEDT^SCENIA1()
"DATA",409.76,303,0)
737^N
"DATA",409.76,303,1)
Project 112/SHAD is missing or invalid
"DATA",409.76,303,2,0)
^^2^2^3051228^
"DATA",409.76,303,2,1,0)
Review Project 112/SHAD data through the Load/Edit Patient Data protocol,
"DATA",409.76,303,2,2,0)
Screen 7.  
"DATA",409.76,303,"COR")
S RTN=$$LEDT^SCENIA1()
"FIA",409.76)
TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE
"FIA",409.76,0)
^SD(409.76,
"FIA",409.76,0,0)
409.76I
"FIA",409.76,0,1)
n^n^f^^n^^y^o^n
"FIA",409.76,0,10)

"FIA",409.76,0,11)
N TMP S TMP=$P(^(0),"^",1) I ",737,7370,"[TMP
"FIA",409.76,0,"RLRO")

"FIA",409.76,0,"VR")
5.3^SD
"FIA",409.76,409.76)
0
"FIA",409.76,409.7621)
0
"INI")
PRE^SD53441
"INIT")
POST^SD53441
"MBREQ")
0
"PKG",48,-1)
1^1
"PKG",48,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",48,22,0)
^9.49I^1^1
"PKG",48,22,1,0)
5.3^2930813^2960613
"PKG",48,22,1,"PAH",1,0)
441^3081010^100905
"PKG",48,22,1,"PAH",1,1,0)
^^3^3^3081010
"PKG",48,22,1,"PAH",1,1,1,0)
PROJ 112/SHAD
"PKG",48,22,1,"PAH",1,1,2,0)
AGENT ORANGE/KOREAN DMZ
"PKG",48,22,1,"PAH",1,1,3,0)
FOREIGN ADDRESS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
18
"RTN","SCDXMSG1")
0^6^B74083613
"RTN","SCDXMSG1",1,0)
SCDXMSG1 ;ALB/JRP - AMB CARE MESSAGE BUILDER UTILS;08-MAY-1996 ; 6/21/05 2:08pm
"RTN","SCDXMSG1",2,0)
 ;;5.3;Scheduling;**44,55,70,77,85,66,143,142,162,172,180,239,245,254,293,325,387,459,472,441**;AUG 13, 1993;Build 14
"RTN","SCDXMSG1",3,0)
 ;
"RTN","SCDXMSG1",4,0)
 ;-- Line tags for building HL7 segment
"RTN","SCDXMSG1",5,0)
BLDEVN S VAFEVN=$$EN^VAFHLEVN(EVNTHL7,ENCNDT,VAFSTR,HL("Q"),HL("FS"))
"RTN","SCDXMSG1",6,0)
 ;SD*5.3*387 replaced EVNTDATE with ENCNDT
"RTN","SCDXMSG1",7,0)
 Q
"RTN","SCDXMSG1",8,0)
BLDPID K VAFPID D BLDPID^VAFCQRY1(DFN,1,VAFSTR,.VAFPID,.HL)
"RTN","SCDXMSG1",9,0)
 D SETMAR^SCMSVUT0(.VAFPID,HL("Q"),HL("FS"),HL("ECH"))
"RTN","SCDXMSG1",10,0)
 Q
"RTN","SCDXMSG1",11,0)
BLDZPD S VAFZPD=$$EN1^VAFHLZPD(DFN,VAFSTR)
"RTN","SCDXMSG1",12,0)
 D SETPOW^SCMSVUT0(DFN,.VAFZPD,HL("Q"),HL("FS"))
"RTN","SCDXMSG1",13,0)
 Q
"RTN","SCDXMSG1",14,0)
BLDPV1 D SETID^SCMSVUT0(ENCPTR,DELPTR)
"RTN","SCDXMSG1",15,0)
 S VAFPV1=$$EN^VAFHLPV1(ENCPTR,DELPTR,VAFSTR,1,HL("Q"),HL("FS"))
"RTN","SCDXMSG1",16,0)
 Q
"RTN","SCDXMSG1",17,0)
BLDDG1 K @VAFARRY
"RTN","SCDXMSG1",18,0)
 D EN^VAFHLDG1(ENCPTR,VAFSTR,HL("Q"),HL("FS"),VAFARRY)
"RTN","SCDXMSG1",19,0)
 Q
"RTN","SCDXMSG1",20,0)
BLDPR1 K @VAFARRY
"RTN","SCDXMSG1",21,0)
 D SETPRTY^SCMSVUT0(ENCPTR)
"RTN","SCDXMSG1",22,0)
 D EN^VAFHLPR1(ENCPTR,VAFSTR,HL("Q"),HL("FS"),HL("ECH"),VAFARRY)
"RTN","SCDXMSG1",23,0)
 Q
"RTN","SCDXMSG1",24,0)
BLDZEL N ELCOD,ELIGENC,I,VAFMSTDT
"RTN","SCDXMSG1",25,0)
 S VAFMSTDT=ENCDT
"RTN","SCDXMSG1",26,0)
 D EN1^VAFHLZEL(DFN,VAFSTR,1,.VAFZEL)
"RTN","SCDXMSG1",27,0)
 S ELCOD=$P($G(^SCE(ENCPTR,0)),"^",13),ELIGENC=$P($G(^DIC(8,+ELCOD,0)),"^",9)
"RTN","SCDXMSG1",28,0)
 S $P(VAFZEL(1),HL("FS"),3)=ELIGENC
"RTN","SCDXMSG1",29,0)
 Q
"RTN","SCDXMSG1",30,0)
BLDZIR K DGREL,DGINC,DGINR,DGDEP
"RTN","SCDXMSG1",31,0)
 D ALL^DGMTU21(DFN,"V",ENCDT,"R")
"RTN","SCDXMSG1",32,0)
 S VAFZIR=$$EN^VAFHLZIR(+$G(DGINR("V")),VAFSTR,1,ENCPTR)
"RTN","SCDXMSG1",33,0)
 K DGREL,DGINC,DGINR,DGDEP
"RTN","SCDXMSG1",34,0)
 Q
"RTN","SCDXMSG1",35,0)
BLDZCL K @VAFARRY
"RTN","SCDXMSG1",36,0)
 D EN^VAFHLZCL(DFN,ENCPTR,VAFSTR,HL("Q"),HL("FS"),VAFARRY)
"RTN","SCDXMSG1",37,0)
 Q
"RTN","SCDXMSG1",38,0)
BLDZSC K @VAFARRY
"RTN","SCDXMSG1",39,0)
 D EN^VAFHLZSC(ENCPTR,VAFSTR,HL("Q"),HL("FS"),VAFARRY)
"RTN","SCDXMSG1",40,0)
 Q
"RTN","SCDXMSG1",41,0)
BLDZSP S VAFZSP=$$EN^VAFHLZSP(DFN,1,1)
"RTN","SCDXMSG1",42,0)
 S VAFZSP=$$SETVSI^SCMSVUT0(DFN,$G(VAFZSP),HL("Q"),HL("FS"))
"RTN","SCDXMSG1",43,0)
 Q
"RTN","SCDXMSG1",44,0)
BLDROL K @VAFARRY
"RTN","SCDXMSG1",45,0)
 N SCDXPRV,SCDXPAR,SCDXROL,PTRPRV,NODE,PRVNUM,TMP
"RTN","SCDXMSG1",46,0)
 D GETPRV^SDOE(ENCPTR,"SCDXPRV")
"RTN","SCDXMSG1",47,0)
 S PTRPRV=0
"RTN","SCDXMSG1",48,0)
 F PRVNUM=1:1  S PTRPRV=+$O(SCDXPRV(PTRPRV)) Q:('PTRPRV)  D
"RTN","SCDXMSG1",49,0)
 .K SCDXPAR,SCDXROL
"RTN","SCDXMSG1",50,0)
 .S NODE=SCDXPRV(PTRPRV)
"RTN","SCDXMSG1",51,0)
 .S SCDXPAR("PTR200")=+NODE
"RTN","SCDXMSG1",52,0)
 .S SCDXPAR("INSTID")=$$VID4XMIT^SCDXFU11(XMITPTR)_"-"_(+NODE)_"*"_PRVNUM
"RTN","SCDXMSG1",53,0)
 .S SCDXPAR("ACTION")="CO"
"RTN","SCDXMSG1",54,0)
 .S SCDXPAR("ALTROLE")=($TR($P(NODE,"^",4),"PS","10"))_$E(HL("ECH"),1)_HL("Q")_$E(HL("ECH"),1)_"VA01"
"RTN","SCDXMSG1",55,0)
 .S SCDXPAR("CODEONLY")=0
"RTN","SCDXMSG1",56,0)
 .S SCDXPAR("RDATE")=ENCDT
"RTN","SCDXMSG1",57,0)
 .D OUTPAT^VAFHLROL("SCDXPAR","SCDXROL",VAFSTR,HL("FS"),HL("ECH"),HL("Q"),240)
"RTN","SCDXMSG1",58,0)
 .K SCDXROL("ERROR"),SCDXROL("WARNING")
"RTN","SCDXMSG1",59,0)
 .M @VAFARRY@(PRVNUM)=SCDXROL
"RTN","SCDXMSG1",60,0)
 Q
"RTN","SCDXMSG1",61,0)
BLDPD1 S VAFPD1=$$EN^VAFHLPD1(DFN,VAFSTR)
"RTN","SCDXMSG1",62,0)
 Q
"RTN","SCDXMSG1",63,0)
BLDZEN S VAFZEN=$$EN^VAFHLZEN(DFN,VAFSTR,1,HL("Q"),HL("FS"))
"RTN","SCDXMSG1",64,0)
 Q
"RTN","SCDXMSG1",65,0)
 ;
"RTN","SCDXMSG1",66,0)
 ;-- Line tags for validating HL7 segments
"RTN","SCDXMSG1",67,0)
VLDEVN S ERROR=$$EN^SCMSVEVN(VAFEVN,HL("Q"),HL("FS"),VALERR)
"RTN","SCDXMSG1",68,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",69,0)
 Q
"RTN","SCDXMSG1",70,0)
VLDPID S ERROR=$$EN^SCMSVPID(.VAFPID,HL("Q"),HL("FS"),HL("ECH"),VALERR,ENCDT,EVNTHL7)
"RTN","SCDXMSG1",71,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",72,0)
 Q
"RTN","SCDXMSG1",73,0)
VLDZPD S ERROR=$$EN^SCMSVZPD(.VAFZPD,HL("Q"),HL("FS"),VALERR,ENCDT,NODE)
"RTN","SCDXMSG1",74,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",75,0)
 Q
"RTN","SCDXMSG1",76,0)
VLDPV1 S ERROR=$$EN^SCMSVPV1(VAFPV1,HL("Q"),HL("FS"),VALERR,NODE,EVNTHL7,ENCNDT)
"RTN","SCDXMSG1",77,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",78,0)
 Q
"RTN","SCDXMSG1",79,0)
VLDDG1 S ERROR=$$EN^SCMSVDG1(VAFARRY,HL("Q"),HL("FS"),ENCPTR,VALERR,ENCDT)
"RTN","SCDXMSG1",80,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",81,0)
 Q
"RTN","SCDXMSG1",82,0)
VLDPR1 S ERROR=$$EN^SCMSVPR1(VAFARRY,HL("Q"),HL("FS"),HL("ECH"),VALERR,ENCDT)
"RTN","SCDXMSG1",83,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",84,0)
 Q
"RTN","SCDXMSG1",85,0)
VLDZEL N VAFZELSV M VAFZELSV=VAFZEL
"RTN","SCDXMSG1",86,0)
 S ERROR=$$EN^SCMSVZEL(.VAFZELSV,HL("Q"),HL("FS"),VALERR,DFN)
"RTN","SCDXMSG1",87,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",88,0)
 Q
"RTN","SCDXMSG1",89,0)
VLDZIR S ERROR=$$EN^SCMSVZIR(VAFZIR,HL("Q"),HL("FS"),VALERR)
"RTN","SCDXMSG1",90,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",91,0)
 Q
"RTN","SCDXMSG1",92,0)
VLDZCL S ERROR=$$EN^SCMSVZCL(VAFARRY,HL("Q"),HL("FS"),VALERR,DFN)
"RTN","SCDXMSG1",93,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",94,0)
 Q
"RTN","SCDXMSG1",95,0)
VLDZSC S ERROR=$$EN^SCMSVZSC(VAFARRY,HL("Q"),HL("FS"),VALERR,ENCPTR)
"RTN","SCDXMSG1",96,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",97,0)
 Q
"RTN","SCDXMSG1",98,0)
VLDZSP S ERROR=$$EN^SCMSVZSP(VAFZSP,HL("Q"),HL("FS"),VALERR,DFN)
"RTN","SCDXMSG1",99,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",100,0)
 Q
"RTN","SCDXMSG1",101,0)
VLDROL S ERROR=$$EN^SCMSVROL(VAFARRY,HL("Q"),HL("FS"),HL("ECH"),VALERR)
"RTN","SCDXMSG1",102,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",103,0)
 Q
"RTN","SCDXMSG1",104,0)
VLDPD1 S ERROR=0
"RTN","SCDXMSG1",105,0)
 Q
"RTN","SCDXMSG1",106,0)
VLDZEN S ERROR=0
"RTN","SCDXMSG1",107,0)
 Q
"RTN","SCDXMSG1",108,0)
 ;
"RTN","SCDXMSG1",109,0)
 ;-- Line tags for copying HL7 segments into HL7 message
"RTN","SCDXMSG1",110,0)
CPYEVN N I
"RTN","SCDXMSG1",111,0)
 S @XMITARRY@(CURLINE)=VAFEVN
"RTN","SCDXMSG1",112,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",113,0)
 S I=""
"RTN","SCDXMSG1",114,0)
 F  S I=+$O(VAFEVN(I)) Q:('I)  D
"RTN","SCDXMSG1",115,0)
 .S @XMITARRY@(CURLINE,I)=VAFEVN(I)
"RTN","SCDXMSG1",116,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",117,0)
 Q
"RTN","SCDXMSG1",118,0)
CPYPID N I
"RTN","SCDXMSG1",119,0)
 S @XMITARRY@(CURLINE)=VAFPID
"RTN","SCDXMSG1",120,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",121,0)
 S I=""
"RTN","SCDXMSG1",122,0)
 F  S I=+$O(VAFPID(I)) Q:('I)  D
"RTN","SCDXMSG1",123,0)
 .S @XMITARRY@(CURLINE,I)=VAFPID(I)
"RTN","SCDXMSG1",124,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",125,0)
 Q
"RTN","SCDXMSG1",126,0)
CPYZPD N I
"RTN","SCDXMSG1",127,0)
 S @XMITARRY@(CURLINE)=VAFZPD
"RTN","SCDXMSG1",128,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",129,0)
 S I=""
"RTN","SCDXMSG1",130,0)
 F  S I=+$O(VAFZPD(I)) Q:('I)  D
"RTN","SCDXMSG1",131,0)
 .S @XMITARRY@(CURLINE,I)=VAFZPD(I)
"RTN","SCDXMSG1",132,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",133,0)
 Q
"RTN","SCDXMSG1",134,0)
CPYPV1 N I
"RTN","SCDXMSG1",135,0)
 S @XMITARRY@(CURLINE)=VAFPV1
"RTN","SCDXMSG1",136,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",137,0)
 S I=""
"RTN","SCDXMSG1",138,0)
 F  S I=+$O(VAFPV1(I)) Q:('I)  D
"RTN","SCDXMSG1",139,0)
 .S @XMITARRY@(CURLINE,I)=VAFPV1(I)
"RTN","SCDXMSG1",140,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",141,0)
 Q
"RTN","SCDXMSG1",142,0)
CPYDG1 N I,J,K
"RTN","SCDXMSG1",143,0)
 S I=""
"RTN","SCDXMSG1",144,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",145,0)
 .S J=""
"RTN","SCDXMSG1",146,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",147,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",148,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",149,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",150,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",151,0)
 Q
"RTN","SCDXMSG1",152,0)
CPYPR1 N I,J,K
"RTN","SCDXMSG1",153,0)
 S I=""
"RTN","SCDXMSG1",154,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",155,0)
 .S J=""
"RTN","SCDXMSG1",156,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",157,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",158,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",159,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",160,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",161,0)
 Q
"RTN","SCDXMSG1",162,0)
CPYZEL N I
"RTN","SCDXMSG1",163,0)
 S @XMITARRY@(CURLINE)=VAFZEL(1)
"RTN","SCDXMSG1",164,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",165,0)
 S I=""
"RTN","SCDXMSG1",166,0)
 F  S I=+$O(VAFZEL(1,I)) Q:('I)  D
"RTN","SCDXMSG1",167,0)
 .S @XMITARRY@(CURLINE,I)=VAFZEL(1,I)
"RTN","SCDXMSG1",168,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",169,0)
 Q
"RTN","SCDXMSG1",170,0)
CPYZIR N I
"RTN","SCDXMSG1",171,0)
 S @XMITARRY@(CURLINE)=VAFZIR
"RTN","SCDXMSG1",172,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",173,0)
 N I
"RTN","SCDXMSG1",174,0)
 S I=""
"RTN","SCDXMSG1",175,0)
 F  S I=+$O(VAFZIR(I)) Q:('I)  D
"RTN","SCDXMSG1",176,0)
 .S @XMITARRY@(CURLINE,I)=VAFZIR(I)
"RTN","SCDXMSG1",177,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",178,0)
 Q
"RTN","SCDXMSG1",179,0)
CPYZCL N I,J,K
"RTN","SCDXMSG1",180,0)
 S I=""
"RTN","SCDXMSG1",181,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",182,0)
 .S J=""
"RTN","SCDXMSG1",183,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",184,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",185,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",186,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",187,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",188,0)
 Q
"RTN","SCDXMSG1",189,0)
CPYZSC N I,J,K
"RTN","SCDXMSG1",190,0)
 S I=""
"RTN","SCDXMSG1",191,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",192,0)
 .S J=""
"RTN","SCDXMSG1",193,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",194,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",195,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",196,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",197,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",198,0)
 Q
"RTN","SCDXMSG1",199,0)
CPYZSP N I
"RTN","SCDXMSG1",200,0)
 S @XMITARRY@(CURLINE)=VAFZSP
"RTN","SCDXMSG1",201,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",202,0)
 S I=""
"RTN","SCDXMSG1",203,0)
 F  S I=+$O(VAFZSP(I)) Q:('I)  D
"RTN","SCDXMSG1",204,0)
 .S @XMITARRY@(CURLINE,I)=VAFZSP(I)
"RTN","SCDXMSG1",205,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",206,0)
 Q
"RTN","SCDXMSG1",207,0)
CPYROL N I,J,K
"RTN","SCDXMSG1",208,0)
 S I=""
"RTN","SCDXMSG1",209,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",210,0)
 .S J=""
"RTN","SCDXMSG1",211,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",212,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",213,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",214,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",215,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",216,0)
 Q
"RTN","SCDXMSG1",217,0)
CPYPD1 N I
"RTN","SCDXMSG1",218,0)
 S @XMITARRY@(CURLINE)=VAFPD1
"RTN","SCDXMSG1",219,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",220,0)
 S I=""
"RTN","SCDXMSG1",221,0)
 F  S I=+$O(VAFPD1(I)) Q:('I)  D
"RTN","SCDXMSG1",222,0)
 .S @XMITARRY@(CURLINE,I)=VAFPD1(I)
"RTN","SCDXMSG1",223,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",224,0)
 Q
"RTN","SCDXMSG1",225,0)
CPYZEN N I
"RTN","SCDXMSG1",226,0)
 S @XMITARRY@(CURLINE)=VAFZEN
"RTN","SCDXMSG1",227,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",228,0)
 S I=""
"RTN","SCDXMSG1",229,0)
 F  S I=+$O(VAFZEN(I)) Q:('I)  D
"RTN","SCDXMSG1",230,0)
 .S @XMITARRY@(CURLINE,I)=VAFZEN(I)
"RTN","SCDXMSG1",231,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",232,0)
 Q
"RTN","SCDXMSG1",233,0)
 ;
"RTN","SCDXMSG1",234,0)
 ;-- Line tags for deleting HL7 segments
"RTN","SCDXMSG1",235,0)
DELEVN K VAFEVN
"RTN","SCDXMSG1",236,0)
 Q
"RTN","SCDXMSG1",237,0)
DELPID K VAFPID
"RTN","SCDXMSG1",238,0)
 Q
"RTN","SCDXMSG1",239,0)
DELZPD K VAFZPD
"RTN","SCDXMSG1",240,0)
 Q
"RTN","SCDXMSG1",241,0)
DELPV1 K VAFPV1
"RTN","SCDXMSG1",242,0)
 Q
"RTN","SCDXMSG1",243,0)
DELDG1 K @VAFARRY
"RTN","SCDXMSG1",244,0)
 Q
"RTN","SCDXMSG1",245,0)
DELPR1 K @VAFARRY
"RTN","SCDXMSG1",246,0)
 Q
"RTN","SCDXMSG1",247,0)
DELZEL K VAFZEL
"RTN","SCDXMSG1",248,0)
 Q
"RTN","SCDXMSG1",249,0)
DELZIR K VAFZIR
"RTN","SCDXMSG1",250,0)
 Q
"RTN","SCDXMSG1",251,0)
DELZCL K @VAFARRY
"RTN","SCDXMSG1",252,0)
 Q
"RTN","SCDXMSG1",253,0)
DELZSC K @VAFARRY
"RTN","SCDXMSG1",254,0)
 Q
"RTN","SCDXMSG1",255,0)
DELZSP K VAFZSP
"RTN","SCDXMSG1",256,0)
 Q
"RTN","SCDXMSG1",257,0)
DELROL K @VAFARRY
"RTN","SCDXMSG1",258,0)
 Q
"RTN","SCDXMSG1",259,0)
DELPD1 K VAFPD1
"RTN","SCDXMSG1",260,0)
 Q
"RTN","SCDXMSG1",261,0)
DELZEN K VAFZEN
"RTN","SCDXMSG1",262,0)
 Q
"RTN","SCDXMSG1",263,0)
 ;
"RTN","SCDXMSG1",264,0)
 ;
"RTN","SCDXMSG1",265,0)
SEGMENTS(EVNTTYPE,SEGARRY) ;Build list of HL7 segments for a given
"RTN","SCDXMSG1",266,0)
 ; event type
"RTN","SCDXMSG1",267,0)
 ;
"RTN","SCDXMSG1",268,0)
 ;Input  : EVNTTYPE - Event type to build list for
"RTN","SCDXMSG1",269,0)
 ;                    A08 & A23 are the only types currently supported
"RTN","SCDXMSG1",270,0)
 ;                    (Defaults to A08)
"RTN","SCDXMSG1",271,0)
 ;         SEGARRY - Array to place output in (full global reference)
"RTN","SCDXMSG1",272,0)
 ;                   (Defaults to ^TMP("SCDX SEGMENTS",$J))
"RTN","SCDXMSG1",273,0)
 ;Output : None
"RTN","SCDXMSG1",274,0)
 ;           SEGARRY(Seq,Name) = Fields
"RTN","SCDXMSG1",275,0)
 ;             Seq - Sequencing number to order the segments as
"RTN","SCDXMSG1",276,0)
 ;                   they should be placed in the HL7 message
"RTN","SCDXMSG1",277,0)
 ;             Name - Name of HL7 segment
"RTN","SCDXMSG1",278,0)
 ;             Fields - List of fields used by Ambulatory Care
"RTN","SCDXMSG1",279,0)
 ;                      VAFSTR would be set to this value
"RTN","SCDXMSG1",280,0)
 ;       : MSH segment is not included
"RTN","SCDXMSG1",281,0)
 ;
"RTN","SCDXMSG1",282,0)
 ;Check input
"RTN","SCDXMSG1",283,0)
 S EVNTTYPE=$G(EVNTTYPE)
"RTN","SCDXMSG1",284,0)
 S:(EVNTTYPE'="A23") EVNTTYPE="A08"
"RTN","SCDXMSG1",285,0)
 S SEGARRY=$G(SEGARRY)
"RTN","SCDXMSG1",286,0)
 S:(SEGARRY="") SEGARRY="^TMP(""SCDX SEGMENTS"","_$J_")"
"RTN","SCDXMSG1",287,0)
 ;Segments used by A08 & A23
"RTN","SCDXMSG1",288,0)
 S @SEGARRY@(1,"EVN")="1,2"
"RTN","SCDXMSG1",289,0)
 S @SEGARRY@(2,"PID")="1,2,3,4,5,6,7,8,10,11,13,14,16,17,19,22"
"RTN","SCDXMSG1",290,0)
 S @SEGARRY@(3,"PD1")="3,4"
"RTN","SCDXMSG1",291,0)
 S @SEGARRY@(4,"PV1")="1,2,4,14,19,39,44,50"
"RTN","SCDXMSG1",292,0)
 ;Building list for A23 - add ZPD segment and quit
"RTN","SCDXMSG1",293,0)
 I (EVNTTYPE="A23") D  Q
"RTN","SCDXMSG1",294,0)
 .S @SEGARRY@(5,"ZPD")="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,40"
"RTN","SCDXMSG1",295,0)
 S @SEGARRY@(5,"DG1")="1,2,3,4,5,15"
"RTN","SCDXMSG1",296,0)
 S @SEGARRY@(6,"PR1")="1,3,16"
"RTN","SCDXMSG1",297,0)
 S @SEGARRY@(7,"ROL")="1,2,3,4"
"RTN","SCDXMSG1",298,0)
 S @SEGARRY@(8,"ZPD")="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,40"
"RTN","SCDXMSG1",299,0)
 S @SEGARRY@(9,"ZEL")="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,29,37,38,40"
"RTN","SCDXMSG1",300,0)
 S @SEGARRY@(10,"ZIR")="1,2,3,4,5,6,7,8,9,10,11,12,13"
"RTN","SCDXMSG1",301,0)
 S @SEGARRY@(11,"ZCL")="1,2,3"
"RTN","SCDXMSG1",302,0)
 S @SEGARRY@(12,"ZSC")="1,2,3"
"RTN","SCDXMSG1",303,0)
 S @SEGARRY@(13,"ZSP")="1,2,3,4"
"RTN","SCDXMSG1",304,0)
 S @SEGARRY@(14,"ZEN")="1,2,3,4,5,6,7,8,9,10"
"RTN","SCDXMSG1",305,0)
 Q
"RTN","SCDXMSG1",306,0)
 ;
"RTN","SCDXMSG1",307,0)
UNWIND(XMITARRY,INSRTPNT) ;Remove all data that was put into HL7 message
"RTN","SCDXMSG1",308,0)
 ;
"RTN","SCDXMSG1",309,0)
 ;Input  : XMITARRY - Array containing HL7 message (full global ref)
"RTN","SCDXMSG1",310,0)
 ;                    (Defaults to ^TMP("HLS",$J))
"RTN","SCDXMSG1",311,0)
 ;         INSRTPNT - Where to begin deletion from (Defaults to 1)
"RTN","SCDXMSG1",312,0)
 ;Output : None
"RTN","SCDXMSG1",313,0)
 ;
"RTN","SCDXMSG1",314,0)
 ;Check input
"RTN","SCDXMSG1",315,0)
 S XMITARRY=$G(XMITARRY)
"RTN","SCDXMSG1",316,0)
 S:(XMITARRY="") XMITARRY="^TMP(""HLS"","_$J_")"
"RTN","SCDXMSG1",317,0)
 S INSRTPNT=$G(INSRTPNT)
"RTN","SCDXMSG1",318,0)
 S:(INSRTPNT="") INSRTPNT=1
"RTN","SCDXMSG1",319,0)
 ;Remove insertion point from array
"RTN","SCDXMSG1",320,0)
 K @XMITARRY@(INSRTPNT)
"RTN","SCDXMSG1",321,0)
 ;Remove everything from insertion point to end of array
"RTN","SCDXMSG1",322,0)
 F  S INSRTPNT=$O(@XMITARRY@(INSRTPNT)) Q:(INSRTPNT="")  K @XMITARRY@(INSRTPNT)
"RTN","SCDXMSG1",323,0)
 ;Done
"RTN","SCDXMSG1",324,0)
 Q
"RTN","SCDXUTL0")
0^1^B35211807
"RTN","SCDXUTL0",1,0)
SCDXUTL0 ;ALB/ESD - Generic functions for Amb Care HL7 Interface ; 5/31/05 11:23am
"RTN","SCDXUTL0",2,0)
 ;;5.3;Scheduling;**44,55,69,77,85,110,122,94,66,132,180,235,256,258,325,451,441**;Aug 13, 1993;Build 14
"RTN","SCDXUTL0",3,0)
 ;
"RTN","SCDXUTL0",4,0)
 ; This routine contains functions used with the Ambulatory Care
"RTN","SCDXUTL0",5,0)
 ; Reporting Project (ACRP).
"RTN","SCDXUTL0",6,0)
 ;
"RTN","SCDXUTL0",7,0)
MTI(DFN,DATE,EC,AT,SDOE) ;Calculate Means Test Indicator
"RTN","SCDXUTL0",8,0)
 ;
"RTN","SCDXUTL0",9,0)
 ;    Input:     DFN   =  Patient IEN
"RTN","SCDXUTL0",10,0)
 ;               Date  =  Encounter Date/Time
"RTN","SCDXUTL0",11,0)
 ;               EC    =  Eligibility (Code) of Encounter
"RTN","SCDXUTL0",12,0)
 ;               AT    =  Appointment Type of Encounter
"RTN","SCDXUTL0",13,0)
 ;               SDOE  =  Outpatient Encounter IEN
"RTN","SCDXUTL0",14,0)
 ;
"RTN","SCDXUTL0",15,0)
 ;   Output:     MTI   =  Means Test Indicator
"RTN","SCDXUTL0",16,0)
 ;
"RTN","SCDXUTL0",17,0)
 N MT,MTI,SDVD1,SDINPT,SDANS,SDANS1,SDINPT,SDMT,VET,X
"RTN","SCDXUTL0",18,0)
 S MTI=""
"RTN","SCDXUTL0",19,0)
 S DFN=$G(DFN),DATE=$G(DATE),EC=$G(EC),AT=$G(AT),SDOE=$G(SDOE)
"RTN","SCDXUTL0",20,0)
 I (DFN="")!(DATE="")!(EC="")!(EC=0)!(AT="")!(SDOE="") G MTQ
"RTN","SCDXUTL0",21,0)
 ;
"RTN","SCDXUTL0",22,0)
 ;- VA Code (get from MAS Eligibility Code IEN)
"RTN","SCDXUTL0",23,0)
 S X=$G(^DIC(8.1,$P($G(^DIC(8,+EC,0)),"^",9),0))
"RTN","SCDXUTL0",24,0)
 S EC=$P(X,"^",4),VET=$P(X,"^",5)
"RTN","SCDXUTL0",25,0)
 ;- Non-Veteran
"RTN","SCDXUTL0",26,0)
 I $P($G(^DPT(DFN,"VET")),"^")="N"!(VET="N") S MTI="N" G MTQ
"RTN","SCDXUTL0",27,0)
 ;- Dom patient
"RTN","SCDXUTL0",28,0)
 I EC=6 S MTI="X" G MTQ
"RTN","SCDXUTL0",29,0)
 ;- Inpatient status
"RTN","SCDXUTL0",30,0)
 S SDVD1=DATE D INPT^SDOPC1 I SDMT="X0" S MTI="X" G MTQ
"RTN","SCDXUTL0",31,0)
 ;- Service Connected > 50 %
"RTN","SCDXUTL0",32,0)
 I EC=1 S MTI="AS" G MTQ
"RTN","SCDXUTL0",33,0)
 ;-- Service Connected < 50 %
"RTN","SCDXUTL0",34,0)
 I EC=3,$$SC^DGMTR(DFN) D  I MTI'="" G MTQ
"RTN","SCDXUTL0",35,0)
 .; 'AS' if seen for SC condition
"RTN","SCDXUTL0",36,0)
 .I $P($G(^SDD(409.42,+$O(^SDD(409.42,"AO",+SDOE,3,0)),0)),U,3) S MTI="AS"
"RTN","SCDXUTL0",37,0)
 ;-Military Disability Retiree
"RTN","SCDXUTL0",38,0)
 ;S X=$P($G(^DPT(DFN,.36)),"^",2) I X,(X<3) S MTI="AS" G MTQ
"RTN","SCDXUTL0",39,0)
 ;-Military Disability Retirement OR Discharge Due To Disability
"RTN","SCDXUTL0",40,0)
 I $P($G(^DPT(DFN,.36)),"^",12)!($P($G(^DPT(DFN,.36)),"^",13)) S MTI="AS" G MTQ
"RTN","SCDXUTL0",41,0)
 ;
"RTN","SCDXUTL0",42,0)
 I EC=2 D  I MTI'="" G MTQ
"RTN","SCDXUTL0",43,0)
 .;- Mexican Border Period or World War I
"RTN","SCDXUTL0",44,0)
 .I $P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3)=1!($P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3)=3) S MTI="AS" Q
"RTN","SCDXUTL0",45,0)
 .;- Prisoner of War (POW)
"RTN","SCDXUTL0",46,0)
 .I $P($G(^DPT(DFN,.52)),"^",5)="Y" S MTI="AS" Q
"RTN","SCDXUTL0",47,0)
 .;- Purple Heart Recipient
"RTN","SCDXUTL0",48,0)
 .I $P($G(^DPT(DFN,.53)),"^")="Y" S MTI="AS" Q
"RTN","SCDXUTL0",49,0)
 .;- Aid and Attendance
"RTN","SCDXUTL0",50,0)
 .I $P($G(^DPT(DFN,.362)),"^",12)="Y" S MTI="AN" Q
"RTN","SCDXUTL0",51,0)
 .;- Housebound
"RTN","SCDXUTL0",52,0)
 .I $P($G(^DPT(DFN,.362)),"^",13)="Y" S MTI="AN" Q
"RTN","SCDXUTL0",53,0)
 ;- Receiving VA Pension
"RTN","SCDXUTL0",54,0)
 I EC=4,$P($G(^DPT(DFN,.362)),"^",14)="Y" S MTI="AN" G MTQ
"RTN","SCDXUTL0",55,0)
 ;
"RTN","SCDXUTL0",56,0)
 I EC=5!(EC=3) D  I MTI'="" G MTQ
"RTN","SCDXUTL0",57,0)
 .;- Eligible for Medicaid
"RTN","SCDXUTL0",58,0)
 .I $P($G(^DPT(DFN,.38)),"^")=1 S MTI="AN" Q
"RTN","SCDXUTL0",59,0)
 .;- Appt types with ignore billing set to 1 (except comp gen)
"RTN","SCDXUTL0",60,0)
 .I AT'=10,$P($G(^SD(409.1,+AT,0)),"^",2) S MTI="X" Q
"RTN","SCDXUTL0",61,0)
 .;- Treatment for AO, IR, EC, MST, HNC
"RTN","SCDXUTL0",62,0)
 .F SDANS1=1,2,4,5,6 S SDANS=$S('$D(^SDD(409.42,"AO",+SDOE,SDANS1)):"",$P($G(^SDD(409.42,$O(^(SDANS1,0)),0)),"^",3):1,1:0) I SDANS=1 S MTI="AS" Q
"RTN","SCDXUTL0",63,0)
 .I MTI]"" Q
"RTN","SCDXUTL0",64,0)
 .;- Means Test Code A, C, or G  (also Pending Adj = Code C or Code G)
"RTN","SCDXUTL0",65,0)
 .S MT=$$LST^DGMTU(DFN,DATE)
"RTN","SCDXUTL0",66,0)
 .I $P(MT,"^",4)="A" S MTI="AN" Q
"RTN","SCDXUTL0",67,0)
 .I $P(MT,"^",4)="C" S MTI="C" Q
"RTN","SCDXUTL0",68,0)
 .I $P(MT,"^",4)="G" S MTI="G" Q
"RTN","SCDXUTL0",69,0)
 .I $P(MT,"^",4)="P" D  Q
"RTN","SCDXUTL0",70,0)
 . .S MTI=$$PA^DGMTUTL($P(MT,"^")),MTI=$S('$D(MTI):"U",MTI="MT":"C",MTI="GMT":"G",1:"U")
"RTN","SCDXUTL0",71,0)
 .;- no means test status or no longer required...check current eligibility data
"RTN","SCDXUTL0",72,0)
 .S X=+$G(^DPT(DFN,.36)),X=+$P($G(^DIC(8,X,0)),U,9) ; get MAS eligibility
"RTN","SCDXUTL0",73,0)
 .;- Service connected > 50 %
"RTN","SCDXUTL0",74,0)
 .I X=1 S MTI="AS" Q
"RTN","SCDXUTL0",75,0)
 .;- Service connected < 50 %
"RTN","SCDXUTL0",76,0)
 .I EC=3,'$$SC^DGMTR(DFN) S MTI="AS" Q
"RTN","SCDXUTL0",77,0)
 .;- mex border or WWI or POW
"RTN","SCDXUTL0",78,0)
 .I X=16!(X=17)!(X=18)!(X=22) S MTI="AS" Q
"RTN","SCDXUTL0",79,0)
 .;- A&A or Pension or HB
"RTN","SCDXUTL0",80,0)
 .I X=2!(X=4)!(X=15) S MTI="AN" Q
"RTN","SCDXUTL0",81,0)
 ;- Means Test required and not done/completed
"RTN","SCDXUTL0",82,0)
 S MTI="U"
"RTN","SCDXUTL0",83,0)
MTQ Q MTI
"RTN","SCDXUTL0",84,0)
 ;
"RTN","SCDXUTL0",85,0)
 ;
"RTN","SCDXUTL0",86,0)
PATCLASS(DFN,SDOE) ; - Return classification questions from PATIENT (#2) file
"RTN","SCDXUTL0",87,0)
 ;           (Agent Orange, Radiation Exposure, Service Connected,
"RTN","SCDXUTL0",88,0)
 ;            Environmental Contaminants, Military Sexual Trauma and
"RTN","SCDXUTL0",89,0)
 ;            Head/Neck Cancer questions)
"RTN","SCDXUTL0",90,0)
 ;
"RTN","SCDXUTL0",91,0)
 ;   Input:  DFN  = Patient IEN (from file #2)
"RTN","SCDXUTL0",92,0)
 ;           SDOE = Outpatient Encounter File IEN [Optional]
"RTN","SCDXUTL0",93,0)
 ;
"RTN","SCDXUTL0",94,0)
 ;  Output:  String containing Y if classification question = YES, N if 
"RTN","SCDXUTL0",95,0)
 ;           = NO, null otherwise (classifications separated by "^")
"RTN","SCDXUTL0",96,0)
 ;
"RTN","SCDXUTL0",97,0)
 N NODE,PATCLASS,SDTEMP,X
"RTN","SCDXUTL0",98,0)
 S SDTEMP(1)=$$AO^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",99,0)
 S SDTEMP(2)=$$IR^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",100,0)
 S SDTEMP(3)=$$SC^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",101,0)
 S SDTEMP(4)=$$EC^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",102,0)
 S SDTEMP(5)=$$MST^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",103,0)
 S SDTEMP(6)=$$HNC^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",104,0)
 S SDTEMP(7)=$$CV^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",105,0)
 S SDTEMP(8)=$$SHAD^SDCO22(DFN)
"RTN","SCDXUTL0",106,0)
 F X=1:1:8 S $P(PATCLASS,U,X)=$S(SDTEMP(X)=1:"Y",1:"N")
"RTN","SCDXUTL0",107,0)
 Q PATCLASS
"RTN","SCDXUTL0",108,0)
 ;
"RTN","SCDXUTL0",109,0)
 ;
"RTN","SCDXUTL0",110,0)
CLASS(SDOE,SCDXARRY) ; - Return array of classification types for encounter
"RTN","SCDXUTL0",111,0)
 ;
"RTN","SCDXUTL0",112,0)
 ;   Input:  SDOE = Outpatient Encounter IEN (from file #409.68)
"RTN","SCDXUTL0",113,0)
 ;
"RTN","SCDXUTL0",114,0)
 ;  Output:  Array (pass desired name as parameter) containing
"RTN","SCDXUTL0",115,0)
 ;           Classification Type^Value
"RTN","SCDXUTL0",116,0)
 ;
"RTN","SCDXUTL0",117,0)
 N CLASS,I,X
"RTN","SCDXUTL0",118,0)
 S CLASS="",(I,X)=0
"RTN","SCDXUTL0",119,0)
 S SDOE=+$G(SDOE)
"RTN","SCDXUTL0",120,0)
 F  S CLASS=+$O(^SDD(409.42,"OE",SDOE,CLASS)) Q:'CLASS  D
"RTN","SCDXUTL0",121,0)
 . S I=$P($G(^SDD(409.42,CLASS,0)),"^"),X=X+1
"RTN","SCDXUTL0",122,0)
 . S @SCDXARRY@(I)=$P($G(^SDD(409.42,CLASS,0)),"^")_"^"_$P($G(^SDD(409.42,CLASS,0)),"^",3)
"RTN","SCDXUTL0",123,0)
CLASSQ S @SCDXARRY@(0)=X
"RTN","SCDXUTL0",124,0)
 Q
"RTN","SCDXUTL0",125,0)
 ;
"RTN","SCDXUTL0",126,0)
 ;
"RTN","SCDXUTL0",127,0)
CHKCLASS(DFN,SDOE) ; - Get classification data for HL7 VAFHLZCL segment
"RTN","SCDXUTL0",128,0)
 ;
"RTN","SCDXUTL0",129,0)
 ;   Input:  DFN = Patient IEN (from file #2)
"RTN","SCDXUTL0",130,0)
 ;          SDOE = Outpatient Encounter IEN (from file #409.68)
"RTN","SCDXUTL0",131,0)
 ;
"RTN","SCDXUTL0",132,0)
 ;  Output:  String separated by "^" containing: 
"RTN","SCDXUTL0",133,0)
 ;           1 (patient class = YES and encounter class = YES)
"RTN","SCDXUTL0",134,0)
 ;           0 (patient class = YES and encounter class = NO)
"RTN","SCDXUTL0",135,0)
 ;           HLQ ("""""") otherwise
"RTN","SCDXUTL0",136,0)
 ;
"RTN","SCDXUTL0",137,0)
EN N OECLASS,OUT,PATCLASS,TYPE,ENCVAL,CLCNT,PATVAL
"RTN","SCDXUTL0",138,0)
 S PATCLASS=$$PATCLASS(DFN,SDOE)
"RTN","SCDXUTL0",139,0)
 D CLASS(SDOE,"OECLASS")
"RTN","SCDXUTL0",140,0)
 S CLCNT=$L(PATCLASS,"^")
"RTN","SCDXUTL0",141,0)
 F TYPE=1:1:CLCNT D
"RTN","SCDXUTL0",142,0)
 .S ENCVAL=$P($G(OECLASS(TYPE)),"^",2)
"RTN","SCDXUTL0",143,0)
 .S PATVAL=$P(PATCLASS,"^",TYPE)
"RTN","SCDXUTL0",144,0)
 .S $P(OUT,"^",TYPE)=""""""
"RTN","SCDXUTL0",145,0)
 .I PATVAL="Y" S $P(OUT,"^",TYPE)=ENCVAL
"RTN","SCDXUTL0",146,0)
ENQ Q OUT
"RTN","SCDXUTL0",147,0)
 ;
"RTN","SCDXUTL0",148,0)
 ;
"RTN","SCDXUTL0",149,0)
POV(DFN,DATE,CLINIC,APTYP) ; - Determine Purpose of Visit for encounter
"RTN","SCDXUTL0",150,0)
 ;
"RTN","SCDXUTL0",151,0)
 ;   Input:  DFN = Patient IEN
"RTN","SCDXUTL0",152,0)
 ;          DATE = Appointment Date/Time
"RTN","SCDXUTL0",153,0)
 ;        CLINIC = Clinic
"RTN","SCDXUTL0",154,0)
 ;         APTYP = Appointment Type
"RTN","SCDXUTL0",155,0)
 ;
"RTN","SCDXUTL0",156,0)
 ;  Output:  Purpose of Visit value (combination of Purpose of Visit
"RTN","SCDXUTL0",157,0)
 ;           and Appointment Type)
"RTN","SCDXUTL0",158,0)
 ;
"RTN","SCDXUTL0",159,0)
 N POV,SCDXPOV
"RTN","SCDXUTL0",160,0)
 I (DFN=""!(DATE="")!(CLINIC="")!(APTYP="")) G POVQ
"RTN","SCDXUTL0",161,0)
 I $P($G(^DPT(DFN,"S",+DATE,0)),"^")'=CLINIC G POVQ
"RTN","SCDXUTL0",162,0)
 S POV=$P($G(^DPT(DFN,"S",+DATE,0)),"^",7),POV=$S($L(POV)=1:"0"_POV,1:POV)
"RTN","SCDXUTL0",163,0)
 S APTYP=$S($L(APTYP)=1:"0"_APTYP,1:APTYP)
"RTN","SCDXUTL0",164,0)
 S SCDXPOV=POV_APTYP
"RTN","SCDXUTL0",165,0)
POVQ Q $G(SCDXPOV)
"RTN","SCDXUTL0",166,0)
 ;
"RTN","SCDXUTL0",167,0)
 ;
"RTN","SCDXUTL0",168,0)
SCODE(SDOE,SCDXARRY) ; Return array of stop codes for encounter
"RTN","SCDXUTL0",169,0)
 ;
"RTN","SCDXUTL0",170,0)
 ;   Input:  SDOE = Outpatient Encounter IEN (from file #409.68)
"RTN","SCDXUTL0",171,0)
 ;
"RTN","SCDXUTL0",172,0)
 ;  Output:  Array (pass desired name as parameter) containing
"RTN","SCDXUTL0",173,0)
 ;           stop codes
"RTN","SCDXUTL0",174,0)
 ;
"RTN","SCDXUTL0",175,0)
 ;
"RTN","SCDXUTL0",176,0)
 N CNT,I,SDOE0,SDOEC,SDOEC0
"RTN","SCDXUTL0",177,0)
 S CNT=1,(I,SDOEC)=0
"RTN","SCDXUTL0",178,0)
 S SDOE=+$G(SDOE)
"RTN","SCDXUTL0",179,0)
 I '$D(^SCE(SDOE,0)) G SCODEQ
"RTN","SCDXUTL0",180,0)
 I '$P($G(^SCE(SDOE,0)),"^",3) G SCODEQ
"RTN","SCDXUTL0",181,0)
 S SDOE0=$G(^SCE(SDOE,0))
"RTN","SCDXUTL0",182,0)
 ;
"RTN","SCDXUTL0",183,0)
 ;- Get stop code from parent encounter
"RTN","SCDXUTL0",184,0)
 I $P(SDOE0,"^",3) S @SCDXARRY@(CNT)=$P(SDOE0,"^",3),I=CNT
"RTN","SCDXUTL0",185,0)
 ;
"RTN","SCDXUTL0",186,0)
 ;- Get stop code from child encounter (credit stop)
"RTN","SCDXUTL0",187,0)
 F  S SDOEC=+$O(^SCE("APAR",SDOE,SDOEC)) Q:('SDOEC)!(CNT=2)  D
"RTN","SCDXUTL0",188,0)
 . S SDOEC0=$G(^SCE(SDOEC,0))
"RTN","SCDXUTL0",189,0)
 . I $P(SDOEC0,"^",3),($P(SDOEC0,"^",8)=4) D
"RTN","SCDXUTL0",190,0)
 .. S CNT=CNT+1,I=CNT
"RTN","SCDXUTL0",191,0)
 .. S @SCDXARRY@(CNT)=$P(SDOEC0,"^",3)
"RTN","SCDXUTL0",192,0)
SCODEQ S @SCDXARRY@(0)=I
"RTN","SCDXUTL0",193,0)
 Q
"RTN","SCDXUTL0",194,0)
 ;
"RTN","SCDXUTL0",195,0)
 ;
"RTN","SCDXUTL0",196,0)
PROC(SDOE,SCDXARRY) ; Return array of procedures for encounter
"RTN","SCDXUTL0",197,0)
 ;
"RTN","SCDXUTL0",198,0)
 ;
"RTN","SCDXUTL0",199,0)
 ;   Input:  SDOE = Outpatient Encounter IEN (from file #409.68)
"RTN","SCDXUTL0",200,0)
 ;
"RTN","SCDXUTL0",201,0)
 ;  Output:  Array (pass desired name as parameter) containing
"RTN","SCDXUTL0",202,0)
 ;           procedures
"RTN","SCDXUTL0",203,0)
 ;
"RTN","SCDXUTL0",204,0)
 N CNT
"RTN","SCDXUTL0",205,0)
 S CNT=0,SDOE=+$G(SDOE)
"RTN","SCDXUTL0",206,0)
 I '$D(^SCE(SDOE,0)) G PROCQ
"RTN","SCDXUTL0",207,0)
 ;
"RTN","SCDXUTL0",208,0)
 D GETPROC(.CNT,SDOE,SCDXARRY) G PROCQ
"RTN","SCDXUTL0",209,0)
 ;
"RTN","SCDXUTL0",210,0)
 ;- Array of procedures
"RTN","SCDXUTL0",211,0)
PROCQ S @SCDXARRY@(0)=CNT
"RTN","SCDXUTL0",212,0)
 Q
"RTN","SCDXUTL0",213,0)
 ;
"RTN","SCDXUTL0",214,0)
 ;
"RTN","SCDXUTL0",215,0)
GETPROC(CNT,ENC,SCDXARRY) ;Get procedures from Scheduling Visits file
"RTN","SCDXUTL0",216,0)
 ;
"RTN","SCDXUTL0",217,0)
 N CPTS,VCPT
"RTN","SCDXUTL0",218,0)
 D GETCPT^SDOE(ENC,"CPTS")
"RTN","SCDXUTL0",219,0)
 N CPT,QTY,I
"RTN","SCDXUTL0",220,0)
 S VCPT=0
"RTN","SCDXUTL0",221,0)
 F  S VCPT=$O(CPTS(VCPT)) Q:'VCPT  D
"RTN","SCDXUTL0",222,0)
 . S CPT=$G(CPTS(VCPT))
"RTN","SCDXUTL0",223,0)
 . S QTY=+$P(CPT,U,16)
"RTN","SCDXUTL0",224,0)
 . F I=1:1:QTY S CNT=CNT+1,@SCDXARRY@(CNT)=+CPT
"RTN","SCDXUTL0",225,0)
 Q
"RTN","SCMSVPID")
0^11^B22190830
"RTN","SCMSVPID",1,0)
SCMSVPID ;ALB/ESD HL7 PID Segment Validation ; 23 Oct 98  3:36 PM
"RTN","SCMSVPID",2,0)
 ;;5.3;Scheduling;**44,66,162,254,293,441**;Aug 13, 1993;Build 14
"RTN","SCMSVPID",3,0)
 ;
"RTN","SCMSVPID",4,0)
 ;
"RTN","SCMSVPID",5,0)
EN(PIDSEG,HLQ,HLFS,HLECH,VALERR,ENCDT,EVNTHL7) ;
"RTN","SCMSVPID",6,0)
 ; Entry point to return the HL7 PID (Patient ID) validation segment
"RTN","SCMSVPID",7,0)
 ;
"RTN","SCMSVPID",8,0)
 ;  Input:  PIDSEG  - Array containing PID segment (pass by ref)
"RTN","SCMSVPID",9,0)
 ;                    PIDSEG = First 245 characters
"RTN","SCMSVPID",10,0)
 ;                    PIDSEG(1..n) = Continuation nodes
"RTN","SCMSVPID",11,0)
 ;             HLQ  - HL7 null variable
"RTN","SCMSVPID",12,0)
 ;            HLFS  - HL7 field separator
"RTN","SCMSVPID",13,0)
 ;           HLECH  - HL7 encoding characters
"RTN","SCMSVPID",14,0)
 ;          VALERR  - The array name to put the errors in
"RTN","SCMSVPID",15,0)
 ;           ENCDT  - The date/time of the encounter.
"RTN","SCMSVPID",16,0)
 ;         EVNTHL7  - Event type ("A08" for add/edit, "A23" for delete)
"RTN","SCMSVPID",17,0)
 ;
"RTN","SCMSVPID",18,0)
 ; Output:  1 if PID passed validity check
"RTN","SCMSVPID",19,0)
 ;          Error message if PID failed validity check in form of:
"RTN","SCMSVPID",20,0)
 ;          -1^"xxx failed validity check" (xxx=element in PID segment)
"RTN","SCMSVPID",21,0)
 ;
"RTN","SCMSVPID",22,0)
 ;Declare variables
"RTN","SCMSVPID",23,0)
 N MSG,SEQ,SD,PARSEG,SEG,I
"RTN","SCMSVPID",24,0)
 S PARSEG=$NA(^TMP("SCMSVPID",$J,"PARSEG"))
"RTN","SCMSVPID",25,0)
 K @PARSEG
"RTN","SCMSVPID",26,0)
 S MSG="-1^Element in PID segment failed validity check"
"RTN","SCMSVPID",27,0)
 ;-Set encoding chars to standard HL7 encoding chars if not passed in
"RTN","SCMSVPID",28,0)
 I '$D(HLQ) S HLQ=$C(34,34)
"RTN","SCMSVPID",29,0)
 S HLECH=$G(HLECH)
"RTN","SCMSVPID",30,0)
 S:HLECH="" HLECH="~|\&"
"RTN","SCMSVPID",31,0)
 ;-Create array of elements to validate
"RTN","SCMSVPID",32,0)
 F SEQ=3,5,7,8,10,11,16,17,19,22 S SD(SEQ)=""  ;Elements for 'add' or 'edit' transactions
"RTN","SCMSVPID",33,0)
 I $G(EVNTHL7)="A23" K SD F I=3,19 S SD(SEQ)=""  ;Elements for 'delete' transactions
"RTN","SCMSVPID",34,0)
 ;
"RTN","SCMSVPID",35,0)
 S SEG="PID"
"RTN","SCMSVPID",36,0)
 D VALIDATE^SCMSVUT0(SEG,$G(PIDSEG),"0006",VALERR,.CNT)
"RTN","SCMSVPID",37,0)
 I $D(@VALERR@(SEG)) G ENQ
"RTN","SCMSVPID",38,0)
 ;-Parse out fields
"RTN","SCMSVPID",39,0)
 D SEGPRSE^SCMSVUT5("PIDSEG",PARSEG,HLFS)
"RTN","SCMSVPID",40,0)
 ;-Remember DFN
"RTN","SCMSVPID",41,0)
 ;S DFN=$$CONVERT^SCMSVUT0($G(@PARSEG@(3)),$E(HLECH,1),HLQ)
"RTN","SCMSVPID",42,0)
 ;S DFN=+$P(DFN,$E(HLECH,1),1)
"RTN","SCMSVPID",43,0)
 ;-Validate segment name
"RTN","SCMSVPID",44,0)
 S CNT=1
"RTN","SCMSVPID",45,0)
 D VALIDATE^SCMSVUT0(SEG,$G(@PARSEG@(0)),$P($T(0),";",3),VALERR,.CNT)
"RTN","SCMSVPID",46,0)
 ;-Validate fields
"RTN","SCMSVPID",47,0)
 S SEQ=0
"RTN","SCMSVPID",48,0)
 F  S SEQ=+$O(SD(SEQ)) Q:'SEQ  D
"RTN","SCMSVPID",49,0)
 .I SEQ=11 D ADDRCHK(SEG,VALERR,.CNT) Q
"RTN","SCMSVPID",50,0)
 .I (SEQ=10)!(SEQ=22)!(SEQ=3) D  Q
"RTN","SCMSVPID",51,0)
 ..N PARSEQ,REP,COMP
"RTN","SCMSVPID",52,0)
 ..S PARSEQ=$NA(^TMP("SCMSVPID",$J,"PARSEQ"))
"RTN","SCMSVPID",53,0)
 ..K @PARSEQ
"RTN","SCMSVPID",54,0)
 ..D SEQPRSE^SCMSVUT5($NA(@PARSEG@(SEQ)),PARSEQ,HLECH)
"RTN","SCMSVPID",55,0)
 ..S REP=0
"RTN","SCMSVPID",56,0)
 ..F  S REP=+$O(@PARSEQ@(REP)) Q:'REP  D
"RTN","SCMSVPID",57,0)
 ...I SEQ=3,$G(@PARSEQ@(REP,5))'="PI" Q
"RTN","SCMSVPID",58,0)
 ...S DATA=$$CONVERT^SCMSVUT0($G(@PARSEQ@(REP,1)),$E(HLECH,4),HLQ)
"RTN","SCMSVPID",59,0)
 ...D VALIDATE^SCMSVUT0(SEG,$P(DATA,$E(HLECH,1),1),$P($T(@(SEQ)),";",3),VALERR,.CNT)
"RTN","SCMSVPID",60,0)
 ..K @PARSEQ
"RTN","SCMSVPID",61,0)
 .S DATA=$G(@PARSEG@(SEQ))
"RTN","SCMSVPID",62,0)
 .S DATA=$$CONVERT^SCMSVUT0(DATA,$E(HLECH,1),HLQ)
"RTN","SCMSVPID",63,0)
 .;S:SEQ=3 DATA=$P(DATA,$E(HLECH,1),1)
"RTN","SCMSVPID",64,0)
 .S:SEQ=5 DATA=$$FMNAME^HLFNC(DATA)
"RTN","SCMSVPID",65,0)
 .S:SEQ=7 DATA=$$FMDATE^HLFNC(DATA)
"RTN","SCMSVPID",66,0)
 .D VALIDATE^SCMSVUT0(SEG,DATA,$P($T(@(SEQ)),";",3),VALERR,.CNT)
"RTN","SCMSVPID",67,0)
 ;
"RTN","SCMSVPID",68,0)
ENQ K @PARSEG
"RTN","SCMSVPID",69,0)
 Q $S($D(@VALERR@(SEG,1)):MSG,1:1)
"RTN","SCMSVPID",70,0)
 ;
"RTN","SCMSVPID",71,0)
 ;
"RTN","SCMSVPID",72,0)
ADDRCHK(SEG,VALERR,CNT) ;- Validity check for address (seq 11)
"RTN","SCMSVPID",73,0)
 ;
"RTN","SCMSVPID",74,0)
 ;Declare variables
"RTN","SCMSVPID",75,0)
 N PARSEQ,REP,COMP,DATA,TYPE,OFFSET,CODE,STATE,SKIP,FORIGN
"RTN","SCMSVPID",76,0)
 ;Parse sequence into repeated components
"RTN","SCMSVPID",77,0)
 S PARSEQ=$NA(^TMP("SCMSVPID",$J,"PARSEQ"))
"RTN","SCMSVPID",78,0)
 K @PARSEQ
"RTN","SCMSVPID",79,0)
 D SEQPRSE^SCMSVUT5($NA(@PARSEG@(11)),PARSEQ,HLECH)
"RTN","SCMSVPID",80,0)
 ;Validate
"RTN","SCMSVPID",81,0)
 S REP=0
"RTN","SCMSVPID",82,0)
 F  S REP=+$O(@PARSEQ@(REP)) Q:'REP  D
"RTN","SCMSVPID",83,0)
 .;Get address type
"RTN","SCMSVPID",84,0)
 .S TYPE=$$CONVERT^SCMSVUT0($G(@PARSEQ@(REP,7)),$E(HLECH,4),HLQ)
"RTN","SCMSVPID",85,0)
 .;Set foreign country flag
"RTN","SCMSVPID",86,0)
 .S FORIGN=$$FOR^DGADDUTL($$CONVERT^SCMSVUT0($G(@PARSEQ@(REP,6)),$E(HLECH,4),HLQ))
"RTN","SCMSVPID",87,0)
 .I (TYPE'["P")&(TYPE'["VAC") Q  ;validate permanent and confidential addresses
"RTN","SCMSVPID",88,0)
 .S:TYPE="" TYPE="P" S:TYPE'="P" TYPE="VACA"
"RTN","SCMSVPID",89,0)
 .;Calculate error code offset
"RTN","SCMSVPID",90,0)
 .S OFFSET=$S($E(TYPE,1,4)="VACA":200,TYPE="P":0,1:0)
"RTN","SCMSVPID",91,0)
 .;If it's a confidential address, everything is allowed to be empty
"RTN","SCMSVPID",92,0)
 .I $E(TYPE,1,4)="VACA" S SKIP=1 D  Q:SKIP
"RTN","SCMSVPID",93,0)
 ..F SEQ=1,2,3,4,5,8,9,12 D  Q:'SKIP
"RTN","SCMSVPID",94,0)
 ...S DATA=$$CONVERT^SCMSVUT0($G(@PARSEQ@(REP,SEQ)),$E(HLECH,4),HLQ)
"RTN","SCMSVPID",95,0)
 ...I SEQ=12 Q:DATA=$E(HLECH,4)  S SKIP=0 Q
"RTN","SCMSVPID",96,0)
 ...I DATA'="" S SKIP=0
"RTN","SCMSVPID",97,0)
 .;Validate components
"RTN","SCMSVPID",98,0)
 .S STATE=0
"RTN","SCMSVPID",99,0)
 .F SEQ=1,2,3,4,5,7,9,12 D
"RTN","SCMSVPID",100,0)
 ..I FORIGN,((SEQ=4)!(SEQ=5)!(SEQ=9)) Q  ;foreign addresses have no state/zip/county
"RTN","SCMSVPID",101,0)
 ..I TYPE="P" Q:((SEQ=7)!(SEQ=12))
"RTN","SCMSVPID",102,0)
 ..S DATA=$$CONVERT^SCMSVUT0($G(@PARSEQ@(REP,SEQ)),$E(HLECH,4),HLQ)
"RTN","SCMSVPID",103,0)
 ..I SEQ=12 Q:DATA=$E(HLECH,4)
"RTN","SCMSVPID",104,0)
 ..I SEQ=9 S STATE=$G(@PARSEQ@(REP,4)) I STATE'="" S STATE=+$O(^DIC(5,"C",STATE,""))
"RTN","SCMSVPID",105,0)
 ..S CODE=$S(SEQ<10:"110",1:"11")_SEQ
"RTN","SCMSVPID",106,0)
 ..S CODE=OFFSET+$P($T(@(CODE)),";",3)
"RTN","SCMSVPID",107,0)
 ..D VALIDATE^SCMSVUT0(SEG,DATA,CODE,VALERR,.CNT)
"RTN","SCMSVPID",108,0)
 K @PARSEQ
"RTN","SCMSVPID",109,0)
 Q
"RTN","SCMSVPID",110,0)
 ;
"RTN","SCMSVPID",111,0)
ERR ;;Invalid or missing patient ID data for encounter (HL7 PID data segment)
"RTN","SCMSVPID",112,0)
 ;
"RTN","SCMSVPID",113,0)
 ;
"RTN","SCMSVPID",114,0)
 ;- PID data elements validated
"RTN","SCMSVPID",115,0)
 ;
"RTN","SCMSVPID",116,0)
0 ;;0035;HL7 SEGMENT NAME
"RTN","SCMSVPID",117,0)
3 ;;2030;PATIENT ID (INTERNAL)
"RTN","SCMSVPID",118,0)
5 ;;2000;NAME
"RTN","SCMSVPID",119,0)
7 ;;2050;DATE OF BIRTH
"RTN","SCMSVPID",120,0)
8 ;;2100;SEX
"RTN","SCMSVPID",121,0)
10 ;;2150;RACE
"RTN","SCMSVPID",122,0)
1101 ;;2200;STREET ADDRESS 1
"RTN","SCMSVPID",123,0)
1102 ;;2210;STREET ADDRESS 2
"RTN","SCMSVPID",124,0)
1103 ;;2220;CITY
"RTN","SCMSVPID",125,0)
1104 ;;2230;STATE
"RTN","SCMSVPID",126,0)
1105 ;;2240;ZIP CODE
"RTN","SCMSVPID",127,0)
1107 ;;2270;ADDRESS TYPE
"RTN","SCMSVPID",128,0)
1109 ;;2250;COUNTY CODE
"RTN","SCMSVPID",129,0)
1112 ;;2280;ADDRESS START/STOP DATE
"RTN","SCMSVPID",130,0)
16 ;;2300;MARITAL STATUS
"RTN","SCMSVPID",131,0)
17 ;;2330;RELIGION
"RTN","SCMSVPID",132,0)
19 ;;2360;SSN
"RTN","SCMSVPID",133,0)
22 ;;2380;ETHNICITY
"RTN","SCMSVUT0")
0^12^B44244521
"RTN","SCMSVUT0",1,0)
SCMSVUT0 ;ALB/ESD HL7 Segment Validation Utilities ; 7/8/04 5:06pm
"RTN","SCMSVUT0",2,0)
 ;;5.3;Scheduling;**44,55,66,132,245,254,293,345,472,441**;Aug 13, 1993;Build 14
"RTN","SCMSVUT0",3,0)
 ;
"RTN","SCMSVUT0",4,0)
 ;
"RTN","SCMSVUT0",5,0)
CONVERT(SEG,HLFS,HLQ) ; Convert HLQ ("") to null in segment
"RTN","SCMSVUT0",6,0)
 ;      Input:  SEG  = HL7 segment
"RTN","SCMSVUT0",7,0)
 ;             HLFS  = HL7 field separator
"RTN","SCMSVUT0",8,0)
 ;              HLQ  = HL7 "" character
"RTN","SCMSVUT0",9,0)
 ;
"RTN","SCMSVUT0",10,0)
 ;     Output:  SEG  = Segment where HLQ replaced with null
"RTN","SCMSVUT0",11,0)
 ;
"RTN","SCMSVUT0",12,0)
 ;
"RTN","SCMSVUT0",13,0)
 N I
"RTN","SCMSVUT0",14,0)
 F I=1:1:55 I $P(SEG,HLFS,I)=HLQ S $P(SEG,HLFS,I)=""
"RTN","SCMSVUT0",15,0)
 Q SEG
"RTN","SCMSVUT0",16,0)
 ;
"RTN","SCMSVUT0",17,0)
SETID(SDOE,SDDELOE) ; Set PCE Unique Visit Number in field #.2 of #409.68
"RTN","SCMSVUT0",18,0)
 ;      Input:   SDOE = IEN of Outpatient Encounter (#409.68) file
"RTN","SCMSVUT0",19,0)
 ;            SDDELOE = IEN of Deleted Outpatient Encounter (#409.74) file
"RTN","SCMSVUT0",20,0)
 ;
"RTN","SCMSVUT0",21,0)
 ;     Output:   Unique Visit Number set in field #.2 of #409.68
"RTN","SCMSVUT0",22,0)
 ;               or field #.2 of #409.74
"RTN","SCMSVUT0",23,0)
 ;
"RTN","SCMSVUT0",24,0)
 ;
"RTN","SCMSVUT0",25,0)
 N SDOEC,SDARRY
"RTN","SCMSVUT0",26,0)
 S SDOEC=0
"RTN","SCMSVUT0",27,0)
 S SDOE=+$G(SDOE)
"RTN","SCMSVUT0",28,0)
 S SDDELOE=+$G(SDDELOE)
"RTN","SCMSVUT0",29,0)
 ;
"RTN","SCMSVUT0",30,0)
 ;-Outpatient Enc pointer passed in; use file #409.68
"RTN","SCMSVUT0",31,0)
 S SDARRY="^SCE("_SDOE_",0)"
"RTN","SCMSVUT0",32,0)
 ;
"RTN","SCMSVUT0",33,0)
 ;-Deleted Outpatient Enc pointer passed in; use file #409.74
"RTN","SCMSVUT0",34,0)
 S:(SDDELOE) SDARRY="^SD(409.74,"_SDDELOE_",1)"
"RTN","SCMSVUT0",35,0)
 ;
"RTN","SCMSVUT0",36,0)
 ;-Quit if no encounter record or deleted encounter record
"RTN","SCMSVUT0",37,0)
 Q:($G(@SDARRY)="")
"RTN","SCMSVUT0",38,0)
 ;-Add unique ID to parent
"RTN","SCMSVUT0",39,0)
 D GETID
"RTN","SCMSVUT0",40,0)
 ;
"RTN","SCMSVUT0",41,0)
 ;-Add unique ID to children for Outpatient Enc only (quit if no child encounter record)
"RTN","SCMSVUT0",42,0)
 I (SDOE) F  S SDOEC=+$O(^SCE("APAR",SDOE,SDOEC)) Q:'SDOEC  S SDARRY="^SCE("_SDOEC_",0)" Q:($G(@SDARRY)="")  D GETID
"RTN","SCMSVUT0",43,0)
 Q
"RTN","SCMSVUT0",44,0)
 ;
"RTN","SCMSVUT0",45,0)
GETID ;Get unique visit ID
"RTN","SCMSVUT0",46,0)
 S:$P($G(@SDARRY),"^",20)="" $P(@SDARRY,"^",20)=$$IEN2VID^VSIT($P(@SDARRY,"^",5))
"RTN","SCMSVUT0",47,0)
 Q
"RTN","SCMSVUT0",48,0)
 ;
"RTN","SCMSVUT0",49,0)
SETPRTY(SDOE) ;Set outpatient provider type in field #.06 of V PROVIDER
"RTN","SCMSVUT0",50,0)
 ;      Input:  SDOE = IEN of Outpatient Encounter (#409.68) file
"RTN","SCMSVUT0",51,0)
 ;
"RTN","SCMSVUT0",52,0)
 ;     Output:  Provider Type set in field #.06 of V PROVIDER
"RTN","SCMSVUT0",53,0)
 ;
"RTN","SCMSVUT0",54,0)
 ;
"RTN","SCMSVUT0",55,0)
 N SDPRTYP,SDVPRV,SDPRVS
"RTN","SCMSVUT0",56,0)
 S SDOE=+$G(SDOE),SDVPRV=0
"RTN","SCMSVUT0",57,0)
 ;
"RTN","SCMSVUT0",58,0)
 ;- Get all provider IENs for encounter
"RTN","SCMSVUT0",59,0)
 D GETPRV^SDOE(SDOE,"SDPRVS")
"RTN","SCMSVUT0",60,0)
 F  S SDVPRV=+$O(SDPRVS(SDVPRV)) Q:'SDVPRV  D
"RTN","SCMSVUT0",61,0)
 . S SDPRTYP=0
"RTN","SCMSVUT0",62,0)
 . ;
"RTN","SCMSVUT0",63,0)
 . ;- If no prov type, call API and add provider type to record
"RTN","SCMSVUT0",64,0)
 . S:$P(SDPRVS(SDVPRV),"^",6)="" SDPRTYP=$$GET^XUA4A72(+SDPRVS(SDVPRV),+$G(^SCE(SDOE,0)))
"RTN","SCMSVUT0",65,0)
 . I +$G(SDPRTYP)>0 D PCLASS^PXAPIOE(SDVPRV)
"RTN","SCMSVUT0",66,0)
 Q
"RTN","SCMSVUT0",67,0)
 ;
"RTN","SCMSVUT0",68,0)
SETMAR(PIDSEG,HLQ,HLFS,HLECH) ; Set marital status prior to PID segment validation
"RTN","SCMSVUT0",69,0)
 ;Input:   PIDSEG = Array containing PID segment (pass by reference)
"RTN","SCMSVUT0",70,0)
 ;                  PIDSEG = First 245 characters
"RTN","SCMSVUT0",71,0)
 ;                  PIDSEG(1..n) = Continuation nodes
"RTN","SCMSVUT0",72,0)
 ;            HLQ = HL7 null variable
"RTN","SCMSVUT0",73,0)
 ;           HLFS = HL7 field separator
"RTN","SCMSVUT0",74,0)
 ;          HLECH = HL7 encoding characters
"RTN","SCMSVUT0",75,0)
 ;Output:  Marital status changed from null to "U" (UNKNOWN) prior to
"RTN","SCMSVUT0",76,0)
 ;         validation of PID segment and transmittal to AAC
"RTN","SCMSVUT0",77,0)
 ;Note: Assumes all input exists and is valid
"RTN","SCMSVUT0",78,0)
 ;
"RTN","SCMSVUT0",79,0)
 ;Declare variables
"RTN","SCMSVUT0",80,0)
 N REBLD,TMPARR,X,TMPARR11
"RTN","SCMSVUT0",81,0)
 ;Parse segment
"RTN","SCMSVUT0",82,0)
 D SEGPRSE^SCMSVUT5($NA(PIDSEG),"TMPARR",HLFS)
"RTN","SCMSVUT0",83,0)
 ;Change marital status (if needed)
"RTN","SCMSVUT0",84,0)
 S REBLD=0
"RTN","SCMSVUT0",85,0)
 S X=$G(TMPARR(16))
"RTN","SCMSVUT0",86,0)
 I ((X="")!(X=HLQ)) S TMPARR(16)="U",REBLD=1
"RTN","SCMSVUT0",87,0)
 ;Rebuild segment (needed, due to VAFCQRY1 call building seg. array only)
"RTN","SCMSVUT0",88,0)
 K TMPARR(0),PIDSEG
"RTN","SCMSVUT0",89,0)
 ;Seq 11 needs to be broken down - too long for rebuild
"RTN","SCMSVUT0",90,0)
 D SEQPRSE^SCMSVUT5($NA(TMPARR(11)),"TMPARR11",HLECH)
"RTN","SCMSVUT0",91,0)
 K TMPARR(11) M TMPARR(11)=TMPARR11
"RTN","SCMSVUT0",92,0)
 D MAKEIT^VAFHLU("PID",.TMPARR,.PIDSEG,.PIDSEG)
"RTN","SCMSVUT0",93,0)
 Q
"RTN","SCMSVUT0",94,0)
 ;
"RTN","SCMSVUT0",95,0)
SETPOW(DFN,ZPDSEG,HLQ,HLFS)     ; Set POW Status Indicated field prior to ZPD segment validation
"RTN","SCMSVUT0",96,0)
 ;
"RTN","SCMSVUT0",97,0)
 ;     Input:      DFN = IEN of Patient (#2) file
"RTN","SCMSVUT0",98,0)
 ;              ZPDSEG = Array containing ZPD segment (pass by reference)
"RTN","SCMSVUT0",99,0)
 ;                       ZPDSEG = First 245 characters
"RTN","SCMSVUT0",100,0)
 ;                       ZPDSEG(1..n) = Continuation nodes
"RTN","SCMSVUT0",101,0)
 ;                 HLQ = HL7 null variable
"RTN","SCMSVUT0",102,0)
 ;                HLFS = HL7 field separator
"RTN","SCMSVUT0",103,0)
 ;
"RTN","SCMSVUT0",104,0)
 ;    Output:  If Veteran and POW Status Indicated field = null, set to
"RTN","SCMSVUT0",105,0)
 ;              U (Unknown)
"RTN","SCMSVUT0",106,0)
 ;             If Non-Veteran, set to null
"RTN","SCMSVUT0",107,0)
 ;
"RTN","SCMSVUT0",108,0)
 S DFN=$G(DFN)
"RTN","SCMSVUT0",109,0)
 G SETPOWQ:(DFN="")!($G(ZPDSEG)="")
"RTN","SCMSVUT0",110,0)
 ;Declare variables
"RTN","SCMSVUT0",111,0)
 N REBLD,TMPARR,X
"RTN","SCMSVUT0",112,0)
 ;Parse segment
"RTN","SCMSVUT0",113,0)
 D SEGPRSE^SCMSVUT5($NA(ZPDSEG),"TMPARR",HLFS)
"RTN","SCMSVUT0",114,0)
 ;Change POW status (if needed)
"RTN","SCMSVUT0",115,0)
 S REBLD=0
"RTN","SCMSVUT0",116,0)
 S X=$G(TMPARR(17))
"RTN","SCMSVUT0",117,0)
 I $P($G(^DPT(DFN,"VET")),"^")="Y",(X=""!(X=HLQ)) S TMPARR(17)="U",REBLD=1
"RTN","SCMSVUT0",118,0)
 I $P($G(^DPT(DFN,"VET")),"^")="N" S TMPARR(17)=HLQ,REBLD=1
"RTN","SCMSVUT0",119,0)
 ;Rebuild segment (if needed)
"RTN","SCMSVUT0",120,0)
 I REBLD K TMPARR(0),ZPDSEG D MAKEIT^VAFHLU("ZPD",.TMPARR,.ZPDSEG,.ZPDSEG)
"RTN","SCMSVUT0",121,0)
 ;
"RTN","SCMSVUT0",122,0)
SETPOWQ Q
"RTN","SCMSVUT0",123,0)
 ;
"RTN","SCMSVUT0",124,0)
 ;
"RTN","SCMSVUT0",125,0)
SETVSI(DFN,ZSPSEG,HLQ,HLFS) ;Set Vietnam Service Indicated field prior to ZSP segment validation
"RTN","SCMSVUT0",126,0)
 ;
"RTN","SCMSVUT0",127,0)
 ;     Input:      DFN = IEN of Patient (#2) file
"RTN","SCMSVUT0",128,0)
 ;              ZSPSEG = HL7 ZSP segment
"RTN","SCMSVUT0",129,0)
 ;                 HLQ = HL7 null variable
"RTN","SCMSVUT0",130,0)
 ;                HLFS = HL7 field separator
"RTN","SCMSVUT0",131,0)
 ;
"RTN","SCMSVUT0",132,0)
 ;    Output:  If Veteran and Vietnam Service Indicated field = null,
"RTN","SCMSVUT0",133,0)
 ;              set to U (Unknown)
"RTN","SCMSVUT0",134,0)
 ;             If Non-Veteran, set to null
"RTN","SCMSVUT0",135,0)
 ;
"RTN","SCMSVUT0",136,0)
 S DFN=$G(DFN),ZSPSEG=$G(ZSPSEG)
"RTN","SCMSVUT0",137,0)
 G SETVSIQ:(DFN="")!(ZSPSEG="")
"RTN","SCMSVUT0",138,0)
 I $P($G(^DPT(DFN,"VET")),"^")="Y",($P(ZSPSEG,HLFS,6)=""!($P(ZSPSEG,HLFS,6)=HLQ)) S $P(ZSPSEG,HLFS,6)="U"
"RTN","SCMSVUT0",139,0)
 I $P($G(^DPT(DFN,"VET")),"^")="N" S $P(ZSPSEG,HLFS,6)=HLQ
"RTN","SCMSVUT0",140,0)
 ;
"RTN","SCMSVUT0",141,0)
SETVSIQ Q ZSPSEG
"RTN","SCMSVUT0",142,0)
 ;
"RTN","SCMSVUT0",143,0)
 ;
"RTN","SCMSVUT0",144,0)
 ;
"RTN","SCMSVUT0",145,0)
 ;The following subroutines all have to do with the validation of
"RTN","SCMSVUT0",146,0)
 ;data using the same edit checks that are used by Austin.
"RTN","SCMSVUT0",147,0)
 ;
"RTN","SCMSVUT0",148,0)
HL7SEGNM(SEG,DATA) ;checks the validity of the HL7 segment name passed in.
"RTN","SCMSVUT0",149,0)
 ;INPUT    SEG  - the HL7 segment name
"RTN","SCMSVUT0",150,0)
 ;         DATA - the data to compare. In this case the HL7 segment name.
"RTN","SCMSVUT0",151,0)
 ;
"RTN","SCMSVUT0",152,0)
 ;OUTPUT   0 (ZERO) if not validate
"RTN","SCMSVUT0",153,0)
 ;         1 if validated
"RTN","SCMSVUT0",154,0)
 ;
"RTN","SCMSVUT0",155,0)
 I '$D(SEG)!('$D(DATA)) Q 0
"RTN","SCMSVUT0",156,0)
 Q $S(SEG=DATA:1,1:0)
"RTN","SCMSVUT0",157,0)
 ;
"RTN","SCMSVUT0",158,0)
EVTTYP(SEG,DATA) ;checks the event type of the segment passed in.
"RTN","SCMSVUT0",159,0)
 ;INPUT  SEG  - The HL7 segment name in question
"RTN","SCMSVUT0",160,0)
 ;       DATA - The event type from the HL7 segment in question.
"RTN","SCMSVUT0",161,0)
 ;
"RTN","SCMSVUT0",162,0)
 ;OUTPUT   0 (ZERO) if not validate
"RTN","SCMSVUT0",163,0)
 ;         1 if validated
"RTN","SCMSVUT0",164,0)
 ;
"RTN","SCMSVUT0",165,0)
 I '$D(SEG)!('$D(DATA)) Q 0
"RTN","SCMSVUT0",166,0)
 I SEG="EVN"&(DATA="A08"!(DATA="A23")) Q 1
"RTN","SCMSVUT0",167,0)
 Q 0
"RTN","SCMSVUT0",168,0)
 ;
"RTN","SCMSVUT0",169,0)
EVTDTTM(DATA) ;Checks the date and time to ensure it is correct.
"RTN","SCMSVUT0",170,0)
 ;INPUT  DATA - this is the date and time in quesiton.
"RTN","SCMSVUT0",171,0)
 ;
"RTN","SCMSVUT0",172,0)
 ;OUTPUT  0 (ZERO) if not validate
"RTN","SCMSVUT0",173,0)
 ;        1 if validated
"RTN","SCMSVUT0",174,0)
 ;
"RTN","SCMSVUT0",175,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",176,0)
 N STRTDT,%DT,X,Y
"RTN","SCMSVUT0",177,0)
 S STRTDT=+$O(^SD(404.91,0))
"RTN","SCMSVUT0",178,0)
 S STRTDT=$P($G(^SD(404.91,STRTDT,"AMB")),U,2)
"RTN","SCMSVUT0",179,0)
 I 'STRTDT Q 0
"RTN","SCMSVUT0",180,0)
 S %DT="T",%DT(0)=STRTDT,X=DATA
"RTN","SCMSVUT0",181,0)
 D ^%DT
"RTN","SCMSVUT0",182,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT0",183,0)
 ;
"RTN","SCMSVUT0",184,0)
VALIDATE(SEG,DATA,ERRCOD,VALERR,CTR) ;
"RTN","SCMSVUT0",185,0)
 ;
"RTN","SCMSVUT0",186,0)
 N ERRIEN,ERRCHK,RES
"RTN","SCMSVUT0",187,0)
 S ERRIEN=+$O(^SD(409.76,"B",ERRCOD,""))
"RTN","SCMSVUT0",188,0)
 I 'ERRIEN S @VALERR@(SEG,CTR)=ERRCOD D INCR Q
"RTN","SCMSVUT0",189,0)
 S ERRCHK=$G(^SD(409.76,ERRIEN,"CHK"))
"RTN","SCMSVUT0",190,0)
 I ERRCHK="" S @VALERR@(SEG,CTR)=ERRCOD D INCR Q
"RTN","SCMSVUT0",191,0)
 X ERRCHK
"RTN","SCMSVUT0",192,0)
 I 'RES S @VALERR@(SEG,CTR)=ERRCOD D INCR
"RTN","SCMSVUT0",193,0)
 Q
"RTN","SCMSVUT0",194,0)
 ;
"RTN","SCMSVUT0",195,0)
DFN(DATA) ;
"RTN","SCMSVUT0",196,0)
 ;INPUT   DATA - the DFN of the patient
"RTN","SCMSVUT0",197,0)
 ;
"RTN","SCMSVUT0",198,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",199,0)
 I DATA=""!(DATA=0) Q 0
"RTN","SCMSVUT0",200,0)
 I DATA'?1.N.".".N Q 0
"RTN","SCMSVUT0",201,0)
 Q 1
"RTN","SCMSVUT0",202,0)
 ;
"RTN","SCMSVUT0",203,0)
PATNM(DATA) ;
"RTN","SCMSVUT0",204,0)
 ;INPUT  DATA - The name of the patient
"RTN","SCMSVUT0",205,0)
 ;
"RTN","SCMSVUT0",206,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",207,0)
 I DATA="" Q 0
"RTN","SCMSVUT0",208,0)
 I DATA?.N.",".N Q 0
"RTN","SCMSVUT0",209,0)
 I DATA?1.C Q 0
"RTN","SCMSVUT0",210,0)
 Q 1
"RTN","SCMSVUT0",211,0)
 ;
"RTN","SCMSVUT0",212,0)
DOB(DATA,ENCDT) ;
"RTN","SCMSVUT0",213,0)
 ;INPUT  DATA - The DOB to be tested.
"RTN","SCMSVUT0",214,0)
 ;      ENCDT - The date/time of the encounter
"RTN","SCMSVUT0",215,0)
 ;
"RTN","SCMSVUT0",216,0)
 N %DT,X,Y
"RTN","SCMSVUT0",217,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",218,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT0",219,0)
 I DATA'?1.N Q 0
"RTN","SCMSVUT0",220,0)
 S %DT="T",%DT(0)=-ENCDT,X=DATA
"RTN","SCMSVUT0",221,0)
 D ^%DT
"RTN","SCMSVUT0",222,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT0",223,0)
 ;
"RTN","SCMSVUT0",224,0)
SEX(DATA) ;
"RTN","SCMSVUT0",225,0)
 ;INPUT  DATA - The sex code to be validated
"RTN","SCMSVUT0",226,0)
 ;
"RTN","SCMSVUT0",227,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",228,0)
 I "FMUO"'[DATA Q 0
"RTN","SCMSVUT0",229,0)
 Q 1
"RTN","SCMSVUT0",230,0)
 ;
"RTN","SCMSVUT0",231,0)
RACE(DATA) ;
"RTN","SCMSVUT0",232,0)
 ;INPUT  DATA - the race code to be validated (NNNN-C-XXX)
"RTN","SCMSVUT0",233,0)
 ;
"RTN","SCMSVUT0",234,0)
 N VAL,MTHD
"RTN","SCMSVUT0",235,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",236,0)
 I DATA="" Q 1
"RTN","SCMSVUT0",237,0)
 S VAL=$P(DATA,"-",1,2)
"RTN","SCMSVUT0",238,0)
 S MTHD=$P(DATA,"-",3)
"RTN","SCMSVUT0",239,0)
 I VAL'?4N1"-"1N Q 0
"RTN","SCMSVUT0",240,0)
 I ",SLF,UNK,PRX,OBS,"'[MTHD Q 0
"RTN","SCMSVUT0",241,0)
 Q 1
"RTN","SCMSVUT0",242,0)
 ;
"RTN","SCMSVUT0",243,0)
STR1(DATA) ;
"RTN","SCMSVUT0",244,0)
 ;INPUT   DATA - Street address line 1
"RTN","SCMSVUT0",245,0)
 ;
"RTN","SCMSVUT0",246,0)
 N LP,VAR
"RTN","SCMSVUT0",247,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",248,0)
 I DATA="" Q 0
"RTN","SCMSVUT0",249,0)
 I DATA?1.N Q 0
"RTN","SCMSVUT0",250,0)
 I DATA=" " Q 0
"RTN","SCMSVUT0",251,0)
 F LP=1:1:$L(DATA) S VAR=$E(DATA,LP,LP) I $A(VAR)>32,($A(VAR)<127) S LP="Y" Q
"RTN","SCMSVUT0",252,0)
 Q $S(LP="Y":1,1:0)
"RTN","SCMSVUT0",253,0)
 ;
"RTN","SCMSVUT0",254,0)
STR2(DATA) ;
"RTN","SCMSVUT0",255,0)
 ;INPUT  DATA - Street address line 2
"RTN","SCMSVUT0",256,0)
 I DATA?1.N Q 0
"RTN","SCMSVUT0",257,0)
 Q 1
"RTN","SCMSVUT0",258,0)
 ;
"RTN","SCMSVUT0",259,0)
CITY(DATA) ;
"RTN","SCMSVUT0",260,0)
 ;INPUT  DATA - The city code to be validated
"RTN","SCMSVUT0",261,0)
 ;
"RTN","SCMSVUT0",262,0)
 I DATA="" Q 0
"RTN","SCMSVUT0",263,0)
 I DATA?1.N Q 0
"RTN","SCMSVUT0",264,0)
 Q 1
"RTN","SCMSVUT0",265,0)
 ;
"RTN","SCMSVUT0",266,0)
STATE(DATA) ;
"RTN","SCMSVUT0",267,0)
 ;INPUT  DATA - State code to be validated.
"RTN","SCMSVUT0",268,0)
 ;
"RTN","SCMSVUT0",269,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",270,0)
 I DATA="" Q 0
"RTN","SCMSVUT0",271,0)
 I '$D(^DIC(5,"C",DATA)) Q 0
"RTN","SCMSVUT0",272,0)
 Q 1
"RTN","SCMSVUT0",273,0)
 ;
"RTN","SCMSVUT0",274,0)
ZIP(DATA) ;
"RTN","SCMSVUT0",275,0)
 ;INPUT  DATA - The zipo code to be validated
"RTN","SCMSVUT0",276,0)
 ;
"RTN","SCMSVUT0",277,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",278,0)
 I $E(DATA,1,5)="00000" Q 0
"RTN","SCMSVUT0",279,0)
 I DATA'?5N."-".4N Q 0
"RTN","SCMSVUT0",280,0)
 Q 1
"RTN","SCMSVUT0",281,0)
 ;
"RTN","SCMSVUT0",282,0)
COUNTY(DATA,STATE) ;
"RTN","SCMSVUT0",283,0)
 ;INPUT  DATA  - The county code to be validated
"RTN","SCMSVUT0",284,0)
 ;       STATE - STATE file IEN 
"RTN","SCMSVUT0",285,0)
 ;
"RTN","SCMSVUT0",286,0)
 I DATA="" Q 0
"RTN","SCMSVUT0",287,0)
 I STATE="" Q 0
"RTN","SCMSVUT0",288,0)
 I '$D(^DIC(5,+$G(STATE),1,"C",DATA)) Q 0
"RTN","SCMSVUT0",289,0)
 Q 1
"RTN","SCMSVUT0",290,0)
 ;
"RTN","SCMSVUT0",291,0)
MARITAL(DATA) ;
"RTN","SCMSVUT0",292,0)
 ;INPUT   DATA - The marital status code to be validated.
"RTN","SCMSVUT0",293,0)
 ;
"RTN","SCMSVUT0",294,0)
 I $L(DATA)>1 Q 0
"RTN","SCMSVUT0",295,0)
 I "ADMSWU"'[DATA Q 0
"RTN","SCMSVUT0",296,0)
 Q 1
"RTN","SCMSVUT0",297,0)
 ;
"RTN","SCMSVUT0",298,0)
REL(DATA) ;
"RTN","SCMSVUT0",299,0)
 ;INPUT   DATA - The religion abbreviation to the validated
"RTN","SCMSVUT0",300,0)
 ;
"RTN","SCMSVUT0",301,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",302,0)
 I DATA="" Q 0
"RTN","SCMSVUT0",303,0)
 I '$D(^DIC(13,"C",+DATA)) Q 0
"RTN","SCMSVUT0",304,0)
 Q 1
"RTN","SCMSVUT0",305,0)
 ;
"RTN","SCMSVUT0",306,0)
SSN(DATA,NOPCHK,NULLOK) ; SD*5.3*345 added optional parameter NULLOK
"RTN","SCMSVUT0",307,0)
 ;INPUT   DATA - The SSN to be validated
"RTN","SCMSVUT0",308,0)
 ;        NOPCHK - O = Check pseudo indicator (default)
"RTN","SCMSVUT0",309,0)
 ;                 1 = Don't check pseudo indicator
"RTN","SCMSVUT0",310,0)
 ;        NULLOK (optional) - 1 = Allow SSN to be null
"RTN","SCMSVUT0",311,0)
 ;                            2 = Don't allow null SSNs (default)
"RTN","SCMSVUT0",312,0)
 ;
"RTN","SCMSVUT0",313,0)
 I $G(DATA)="" Q +$G(NULLOK)  ; SD*5.3*345
"RTN","SCMSVUT0",314,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT0",315,0)
 N SSN,PSD
"RTN","SCMSVUT0",316,0)
 S SSN=$E(DATA,1,9),PSD=$E(DATA,10)
"RTN","SCMSVUT0",317,0)
 I SSN'?9N Q 0
"RTN","SCMSVUT0",318,0)
 I '$G(NOPCHK) I (PSD'=" "),(PSD'=""),(PSD'="P") Q 0
"RTN","SCMSVUT0",319,0)
 I $E(SSN,1,5)="00000" Q 0
"RTN","SCMSVUT0",320,0)
 Q 1
"RTN","SCMSVUT0",321,0)
 ;
"RTN","SCMSVUT0",322,0)
INCR ;increases the counter
"RTN","SCMSVUT0",323,0)
 S CTR=CTR+1
"RTN","SCMSVUT0",324,0)
 Q
"RTN","SCMSVUT0",325,0)
 ;
"RTN","SCMSVUT0",326,0)
REMOVE(SEG,ERR,VALERR,CNT) ;
"RTN","SCMSVUT0",327,0)
 ;INPUT SEG - The segment being worked on
"RTN","SCMSVUT0",328,0)
 ;    VALERR - The array holding the information
"RTN","SCMSVUT0",329,0)
 ;      CNT - the counter to use
"RTN","SCMSVUT0",330,0)
 ;      ERR - error code to remove
"RTN","SCMSVUT0",331,0)
 ;
"RTN","SCMSVUT0",332,0)
 N LP
"RTN","SCMSVUT0",333,0)
 F LP=1:1:CNT I $G(@VALERR@(SEG,LP))=ERR K @VALERR@(SEG,LP)
"RTN","SCMSVUT0",334,0)
 Q
"RTN","SCMSVUT0",335,0)
 ;
"RTN","SCMSVUT0",336,0)
DECR(CNT) ;
"RTN","SCMSVUT0",337,0)
 S CNT=CNT-1
"RTN","SCMSVUT0",338,0)
 Q
"RTN","SCMSVUT0",339,0)
 ;
"RTN","SCMSVUT3")
0^13^B20828078
"RTN","SCMSVUT3",1,0)
SCMSVUT3   ;BP/JRP - HL7 segment & field validation utilities ;8/11/99 9:54am
"RTN","SCMSVUT3",2,0)
 ;;5.3;Scheduling;**142,180,208,239,395,441**;AUG 13, 1993;Build 14
"RTN","SCMSVUT3",3,0)
 ;
"RTN","SCMSVUT3",4,0)
 ;Standard input parameters
"RTN","SCMSVUT3",5,0)
 ;   DATA  - Value to validate
"RTN","SCMSVUT3",6,0)
 ;   DFN   - Point to PATIENT file (#2)
"RTN","SCMSVUT3",7,0)
 ;   ENCDT - Date/time of encounter (FileMan format)
"RTN","SCMSVUT3",8,0)
 ;   HLFS  - HL7 field seperator
"RTN","SCMSVUT3",9,0)
 ;   HLECH - HL7 encoding characters
"RTN","SCMSVUT3",10,0)
 ;   HLQ   - HL7 null designation
"RTN","SCMSVUT3",11,0)
 ;
"RTN","SCMSVUT3",12,0)
 ;Standard output
"RTN","SCMSVUT3",13,0)
 ;   1 - Valid
"RTN","SCMSVUT3",14,0)
 ;   0 - Invalid
"RTN","SCMSVUT3",15,0)
 ;
"RTN","SCMSVUT3",16,0)
 ;
"RTN","SCMSVUT3",17,0)
POWLOC(DATA,DFN) ;Prisoner of war location
"RTN","SCMSVUT3",18,0)
 ;Note: Use of DFN is optional.  Use of the DFN will validate the POW
"RTN","SCMSVUT3",19,0)
 ;      location and also verify that it is consistant with patient's
"RTN","SCMSVUT3",20,0)
 ;      POW status (i.e. must also have been a POW).  Non-use of DFN
"RTN","SCMSVUT3",21,0)
 ;      will only validate the POW location.
"RTN","SCMSVUT3",22,0)
 ;
"RTN","SCMSVUT3",23,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",24,0)
 N POW,NODE
"RTN","SCMSVUT3",25,0)
 S DFN=+$G(DFN)
"RTN","SCMSVUT3",26,0)
 ;Patient a POW ?
"RTN","SCMSVUT3",27,0)
 S POW=1
"RTN","SCMSVUT3",28,0)
 I (DFN) D
"RTN","SCMSVUT3",29,0)
 .S NODE=$G(^DPT(DFN,.52))
"RTN","SCMSVUT3",30,0)
 .S POW=$TR($P(NODE,"^",5),"YNU","100")
"RTN","SCMSVUT3",31,0)
 ;Invalid location code
"RTN","SCMSVUT3",32,0)
 I (DATA'="")&("456789AB"'[DATA) Q 0
"RTN","SCMSVUT3",33,0)
 ;Location code not consistant with POW status
"RTN","SCMSVUT3",34,0)
 I (DATA) Q:('POW) 0
"RTN","SCMSVUT3",35,0)
 I (DATA="") Q:((DFN)&(POW)) 0
"RTN","SCMSVUT3",36,0)
 ;Valid location code
"RTN","SCMSVUT3",37,0)
 Q 1
"RTN","SCMSVUT3",38,0)
RADMTHD(DATA,DFN) ;Radiation exposure method
"RTN","SCMSVUT3",39,0)
 ;Note: Use of DFN is optional.  Use of the DFN will validate the
"RTN","SCMSVUT3",40,0)
 ;      radiation method and also verify that it is consistant with
"RTN","SCMSVUT3",41,0)
 ;      patient's radiation exposure (i.e. must also have claimed
"RTN","SCMSVUT3",42,0)
 ;      exposure).  Non-use of DFN will only validate the radiation
"RTN","SCMSVUT3",43,0)
 ;      method.
"RTN","SCMSVUT3",44,0)
 ;
"RTN","SCMSVUT3",45,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",46,0)
 N RAD,NODE
"RTN","SCMSVUT3",47,0)
 S DFN=+$G(DFN)
"RTN","SCMSVUT3",48,0)
 ;Patient claim exposure ?
"RTN","SCMSVUT3",49,0)
 S RAD=1
"RTN","SCMSVUT3",50,0)
 I (DFN) D
"RTN","SCMSVUT3",51,0)
 .S NODE=$G(^DPT(DFN,.321))
"RTN","SCMSVUT3",52,0)
 .S RAD=$TR($P(NODE,"^",3),"YNU","100")
"RTN","SCMSVUT3",53,0)
 ;Invalid method code
"RTN","SCMSVUT3",54,0)
 I (DATA'="") Q:((DATA'?1N)!(DATA<2)!(DATA>4)) 0
"RTN","SCMSVUT3",55,0)
 ;Method code not consistant with exposure status
"RTN","SCMSVUT3",56,0)
 I (DATA) Q:('RAD) 0
"RTN","SCMSVUT3",57,0)
 I (DATA="") Q:((DFN)&(RAD)) 0
"RTN","SCMSVUT3",58,0)
 ;Valid method code
"RTN","SCMSVUT3",59,0)
 Q 1
"RTN","SCMSVUT3",60,0)
NUMRANK(DATA,MINVAL,MAXVAL,DECCNT) ;Numeric ranking validation
"RTN","SCMSVUT3",61,0)
 ;Input  : MINVAL - Minimum value (defaults to no lower limit)
"RTN","SCMSVUT3",62,0)
 ;         MAXVAL - Maximum value (defaults to no upper limit)
"RTN","SCMSVUT3",63,0)
 ;         DECCNT - Decimal places allowed (defaults to no limit)
"RTN","SCMSVUT3",64,0)
 ;Note   : DATA considered invalid if NULL
"RTN","SCMSVUT3",65,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",66,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",67,0)
 Q:(DATA=".") 0
"RTN","SCMSVUT3",68,0)
 N INVALID
"RTN","SCMSVUT3",69,0)
 S INVALID=0
"RTN","SCMSVUT3",70,0)
 ;General numeric check
"RTN","SCMSVUT3",71,0)
 Q:(DATA'?.1"-".N.1".".N) 0
"RTN","SCMSVUT3",72,0)
 ;Min value check
"RTN","SCMSVUT3",73,0)
 I ($G(MINVAL)'="") D
"RTN","SCMSVUT3",74,0)
 .S INVALID=(DATA<MINVAL)
"RTN","SCMSVUT3",75,0)
 Q:(INVALID) 0
"RTN","SCMSVUT3",76,0)
 ;Max value check
"RTN","SCMSVUT3",77,0)
 I ($G(MAXVAL)'="") D
"RTN","SCMSVUT3",78,0)
 .S INVALID=(DATA>MAXVAL)
"RTN","SCMSVUT3",79,0)
 Q:(INVALID) 0
"RTN","SCMSVUT3",80,0)
 ;Decimal check
"RTN","SCMSVUT3",81,0)
 I ($G(DECCNT)'="") D
"RTN","SCMSVUT3",82,0)
 .X "S INVALID=DATA'?.1""-"".N.1"".""."_DECCNT_"N"
"RTN","SCMSVUT3",83,0)
 Q:(INVALID) 0
"RTN","SCMSVUT3",84,0)
 ;Valid
"RTN","SCMSVUT3",85,0)
 Q 1
"RTN","SCMSVUT3",86,0)
VALFAC(DATA) ;Determine if given facility number is valid
"RTN","SCMSVUT3",87,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",88,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",89,0)
 ;Invalid
"RTN","SCMSVUT3",90,0)
 Q:('$D(^DIC(4,"D",DATA))) 0
"RTN","SCMSVUT3",91,0)
 ;Valid
"RTN","SCMSVUT3",92,0)
 Q 1
"RTN","SCMSVUT3",93,0)
ACTFAC(DATA) ;Determine if given facility number is active
"RTN","SCMSVUT3",94,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",95,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",96,0)
 N PTR4,ACTIVE,NODE
"RTN","SCMSVUT3",97,0)
 ;Check all entries in INSTITUTION file (#4) with given facility number
"RTN","SCMSVUT3",98,0)
 ; (quits when first active entry is found)
"RTN","SCMSVUT3",99,0)
 S ACTIVE=0
"RTN","SCMSVUT3",100,0)
 S PTR4=0
"RTN","SCMSVUT3",101,0)
 F  S PTR4=+$O(^DIC(4,"D",DATA,PTR4)) Q:('PTR4)  D  Q:(ACTIVE)
"RTN","SCMSVUT3",102,0)
 .;Get node with inactive flag
"RTN","SCMSVUT3",103,0)
 .S NODE=$G(^DIC(4,PTR4,99))
"RTN","SCMSVUT3",104,0)
 .;Inactive
"RTN","SCMSVUT3",105,0)
 .Q:($P(NODE,"^",4)="y")
"RTN","SCMSVUT3",106,0)
 .;Active
"RTN","SCMSVUT3",107,0)
 .S ACTIVE=1
"RTN","SCMSVUT3",108,0)
 ;Done
"RTN","SCMSVUT3",109,0)
 Q ACTIVE
"RTN","SCMSVUT3",110,0)
PROVID(DATA,HLECH) ;External Provider ID
"RTN","SCMSVUT3",111,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",112,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",113,0)
 N PRVDUZ,PRVFAC,SUBSEP,VALID
"RTN","SCMSVUT3",114,0)
 S SUBSEP=$E(HLECH,4)
"RTN","SCMSVUT3",115,0)
 S PRVDUZ=$P(DATA,SUBSEP,1)
"RTN","SCMSVUT3",116,0)
 S PRVFAC=$P(DATA,SUBSEP,2)
"RTN","SCMSVUT3",117,0)
 S VALID=0
"RTN","SCMSVUT3",118,0)
 I $$NUMRANK(PRVDUZ,1,,0),$$VALFAC(PRVFAC),$$ACTFAC(PRVFAC) S VALID=1
"RTN","SCMSVUT3",119,0)
 Q VALID
"RTN","SCMSVUT3",120,0)
ROLEID(DATA) ;Role Instance ID
"RTN","SCMSVUT3",121,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",122,0)
 Q:(DATA="") 0
"RTN","SCMSVUT3",123,0)
 N ROLEID,SEQID,VALID
"RTN","SCMSVUT3",124,0)
 S ROLEID=$P(DATA,"*",1)
"RTN","SCMSVUT3",125,0)
 S SEQID=$P(DATA,"*",2)
"RTN","SCMSVUT3",126,0)
 S VALID=0
"RTN","SCMSVUT3",127,0)
 I ROLEID'="" I $$NUMRANK(SEQID,1,,0) S VALID=1
"RTN","SCMSVUT3",128,0)
 Q VALID
"RTN","SCMSVUT3",129,0)
VA01(DATA) ;VA Table 1 (Yes/No/Unknown)
"RTN","SCMSVUT3",130,0)
 ;Notes: Table VA01 allows values of Y,N,U,1,0
"RTN","SCMSVUT3",131,0)
 ;     : NULL is an accepted value
"RTN","SCMSVUT3",132,0)
 Q:('$D(DATA)) 0
"RTN","SCMSVUT3",133,0)
 Q:(DATA="") 1
"RTN","SCMSVUT3",134,0)
 Q:($L(DATA)'=1) 0
"RTN","SCMSVUT3",135,0)
 N TMP
"RTN","SCMSVUT3",136,0)
 S TMP=$TR(DATA,"YNU0","1111")
"RTN","SCMSVUT3",137,0)
 Q:(TMP'=1) 0
"RTN","SCMSVUT3",138,0)
 Q 1
"RTN","SCMSVUT3",139,0)
CLAMST(VALUE,DFN) ;
"RTN","SCMSVUT3",140,0)
 ;Error code 9030
"RTN","SCMSVUT3",141,0)
 ;Validating whether or not the visit is related to MST
"RTN","SCMSVUT3",142,0)
 ;
"RTN","SCMSVUT3",143,0)
 ;INPUT
"RTN","SCMSVUT3",144,0)
 ;   ENCDT -  Date of encounter
"RTN","SCMSVUT3",145,0)
 ;   DFN   -  IEN pointer from the Outpatient Encounter (#409.68) file
"RTN","SCMSVUT3",146,0)
 ;   VALUE -  Is encounter related (1=Yes,0=No)
"RTN","SCMSVUT3",147,0)
 ;
"RTN","SCMSVUT3",148,0)
 ;OUTPUT
"RTN","SCMSVUT3",149,0)
 ;   1 = Visit is related to MST
"RTN","SCMSVUT3",150,0)
 ;   0 = Visit Not related to MST
"RTN","SCMSVUT3",151,0)
 ;
"RTN","SCMSVUT3",152,0)
 ;
"RTN","SCMSVUT3",153,0)
 N MSTSTAT
"RTN","SCMSVUT3",154,0)
 I '$D(VALUE) Q 0
"RTN","SCMSVUT3",155,0)
 S MSTSTAT=$$GETSTAT^DGMSTAPI(DFN)
"RTN","SCMSVUT3",156,0)
 S MSTSTAT=$P(MSTSTAT,"^",2)
"RTN","SCMSVUT3",157,0)
 S MSTSTAT=$S(MSTSTAT="Y":1,1:0)
"RTN","SCMSVUT3",158,0)
 Q $S(MSTSTAT=0&(VALUE=1):0,1:1)
"RTN","SCMSVUT3",159,0)
MSTSTAT(DATA) ;
"RTN","SCMSVUT3",160,0)
 ;Error code 7040
"RTN","SCMSVUT3",161,0)
 ;Check for valid MST status codes Y,N,D,U
"RTN","SCMSVUT3",162,0)
 ;
"RTN","SCMSVUT3",163,0)
 ;INPUT
"RTN","SCMSVUT3",164,0)
 ;   DATA - the MST Status passed in by routine SCMSVZEL 
"RTN","SCMSVUT3",165,0)
 ;
"RTN","SCMSVUT3",166,0)
 ;OUTPUT
"RTN","SCMSVUT3",167,0)
 ;   1 - Valid MST Status
"RTN","SCMSVUT3",168,0)
 ;   0 - Invalid MST Status
"RTN","SCMSVUT3",169,0)
 ;
"RTN","SCMSVUT3",170,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT3",171,0)
 I ("Y,N,U,D"[DATA)!(DATA="") Q 1
"RTN","SCMSVUT3",172,0)
 Q 0
"RTN","SCMSVUT3",173,0)
MSTDATE(DATA) ;
"RTN","SCMSVUT3",174,0)
 ;Error code 7060
"RTN","SCMSVUT3",175,0)
 ;Check for valid date and that MST status is either Y,N,D or U
"RTN","SCMSVUT3",176,0)
 ; Variable X must be passed to ^%DT for date verification
"RTN","SCMSVUT3",177,0)
 ; Variable Y is returned from ^%DT
"RTN","SCMSVUT3",178,0)
 ;
"RTN","SCMSVUT3",179,0)
 ;INPUT
"RTN","SCMSVUT3",180,0)
 ;  DATA - MST Date Status Changed^MST Status from SCMSVZEL
"RTN","SCMSVUT3",181,0)
 ;
"RTN","SCMSVUT3",182,0)
 ;OUTPUT
"RTN","SCMSVUT3",183,0)
 ;   1 - Valid MST Status and date in a valid format
"RTN","SCMSVUT3",184,0)
 ;   0 - Invalid MST Status or date in an invalid format
"RTN","SCMSVUT3",185,0)
 ;
"RTN","SCMSVUT3",186,0)
 N X,MSTSTAT
"RTN","SCMSVUT3",187,0)
 S X=$P(DATA,"^",2)
"RTN","SCMSVUT3",188,0)
 S MSTSTAT=$P(DATA,"^",1)
"RTN","SCMSVUT3",189,0)
 I X=""&("Y,N,D"'[MSTSTAT!(MSTSTAT="")) Q 1
"RTN","SCMSVUT3",190,0)
 S X=$$FMDATE^HLFNC(X),%DT="T"
"RTN","SCMSVUT3",191,0)
 D ^%DT
"RTN","SCMSVUT3",192,0)
 Q $S(Y>0&("U,Y,N,D"[MSTSTAT):1,1:0)
"RTN","SCMSVUT3",193,0)
 ;
"RTN","SCMSVUT3",194,0)
AO(DATA,DFN) ;Validate Agent Orange expos. (error 7120)
"RTN","SCMSVUT3",195,0)
 ;INPUT  : DATA - Value to validate
"RTN","SCMSVUT3",196,0)
 ;         DFN - Pointer to PATIENT file (#2)
"RTN","SCMSVUT3",197,0)
 ;OUTPUT : 1 - Valid claim of exposure to Agent Orange
"RTN","SCMSVUT3",198,0)
 ;         0 - Invalid claim of exposure to Agent Orange
"RTN","SCMSVUT3",199,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT3",200,0)
 I '$D(DFN) Q 0
"RTN","SCMSVUT3",201,0)
 I DATA=1 Q 1 ;$$CANBEAO(DFN)  SD*5.3*395 rem check for period of service
"RTN","SCMSVUT3",202,0)
 I (DATA=0)!(DATA="") Q 1
"RTN","SCMSVUT3",203,0)
 Q 0
"RTN","SCMSVUT3",204,0)
CANBEAO(DFN) ;Check to determine if patient can claim Agent Orange expos.
"RTN","SCMSVUT3",205,0)
 ;INPUT  : DFN - Pointer to PATIENT file (#2)
"RTN","SCMSVUT3",206,0)
 ;OUTPUT : 1 - Valid claim of exposure to Agent Orange
"RTN","SCMSVUT3",207,0)
 ;         0 - Invalid claim of exposure to Agent Orange
"RTN","SCMSVUT3",208,0)
 ;
"RTN","SCMSVUT3",209,0)
 N VAEL
"RTN","SCMSVUT3",210,0)
 I '$G(DFN) Q 0
"RTN","SCMSVUT3",211,0)
 I '$D(^DPT(DFN,0)) Q 0
"RTN","SCMSVUT3",212,0)
 ;Get data needed to perform check
"RTN","SCMSVUT3",213,0)
 D ELIG^VADPT
"RTN","SCMSVUT3",214,0)
 ;Must be a veteran
"RTN","SCMSVUT3",215,0)
 I 'VAEL(4) Q 0
"RTN","SCMSVUT3",216,0)
 ;Must have POS 7
"RTN","SCMSVUT3",217,0)
 I $P($G(^DIC(21,+VAEL(2),0)),"^",3)=7 Q 1
"RTN","SCMSVUT3",218,0)
 ;Can't claim AO
"RTN","SCMSVUT3",219,0)
 Q 0
"RTN","SCMSVUT3",220,0)
AOLOC(DATA,DFN) ;Validate Agent Orange exposure location (error 7130)
"RTN","SCMSVUT3",221,0)
 ;INPUT  : DATA - Value to validate
"RTN","SCMSVUT3",222,0)
 ;         DFN - Pointer to PATIENT file (#2)
"RTN","SCMSVUT3",223,0)
 ;OUTPUT : 1 - Valid Agent Orange exposure location
"RTN","SCMSVUT3",224,0)
 ;         0 - Invalid/missing Agent Orange exposure location
"RTN","SCMSVUT3",225,0)
 ;NOTES  : Patient's claiming exposure must have an exposure location
"RTN","SCMSVUT3",226,0)
 N VASV
"RTN","SCMSVUT3",227,0)
 I '$G(DFN) Q 0
"RTN","SCMSVUT3",228,0)
 I '$D(^DPT(DFN,0)) Q 0
"RTN","SCMSVUT3",229,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT3",230,0)
 ;Get data needed to perform check
"RTN","SCMSVUT3",231,0)
 D SVC^VADPT
"RTN","SCMSVUT3",232,0)
 ;No claim - shouldn't have a location
"RTN","SCMSVUT3",233,0)
 I 'VASV(2) Q $S(DATA="":1,1:0)
"RTN","SCMSVUT3",234,0)
 ;Claims exposure - must have a valid location
"RTN","SCMSVUT3",235,0)
 Q $S(DATA="":0,"VKO"[DATA:1,1:0)
"RTN","SCMSVZEL")
0^7^B8712512
"RTN","SCMSVZEL",1,0)
SCMSVZEL   ;ALB/ESD HL7 ZEL Segment Validation ; 6/20/05 9:24am
"RTN","SCMSVZEL",2,0)
 ;;5.3;Scheduling;**44,66,142,184,180,222,239,325,441**;Aug 13, 1993;Build 14
"RTN","SCMSVZEL",3,0)
 ;
"RTN","SCMSVZEL",4,0)
 ;
"RTN","SCMSVZEL",5,0)
EN(ZELSEG,HLQ,HLFS,VALERR,DFN) ;
"RTN","SCMSVZEL",6,0)
 ; Entry point to return the HL7 ZEL (Patient Eligibility) validation segment
"RTN","SCMSVZEL",7,0)
 ;
"RTN","SCMSVZEL",8,0)
 ;  Input: .ZELSEG - ZEL Segment Array
"RTN","SCMSVZEL",9,0)
 ;             HLQ - HL7 null variable
"RTN","SCMSVZEL",10,0)
 ;            HLFS - HL7 field separator
"RTN","SCMSVZEL",11,0)
 ;          VALERR - The array name to put the errors in
"RTN","SCMSVZEL",12,0)
 ;             DFN - The DFN of the patient
"RTN","SCMSVZEL",13,0)
 ;
"RTN","SCMSVZEL",14,0)
 ; Output:  1 if ZEL passed validity check
"RTN","SCMSVZEL",15,0)
 ;          Error message if ZEL failed validity check in form of:
"RTN","SCMSVZEL",16,0)
 ;          -1^"xxx failed validity check" (xxx=element in ZEL segment)
"RTN","SCMSVZEL",17,0)
 ;
"RTN","SCMSVZEL",18,0)
 ;
"RTN","SCMSVZEL",19,0)
 N I,MSG,X,CNT,DATA,SEG,ELIG,VET,LP,MSTSTAT,MSTDATE,SEGLINE,NODE,OFFSET
"RTN","SCMSVZEL",20,0)
 N CVET
"RTN","SCMSVZEL",21,0)
 S SEG="ZEL",CNT=1
"RTN","SCMSVZEL",22,0)
 S MSG="-1^Element in ZEL segment failed validity check"
"RTN","SCMSVZEL",23,0)
 S ZELSEG(1)=$G(ZELSEG(1))
"RTN","SCMSVZEL",24,0)
 D VALIDATE^SCMSVUT0(SEG,ZELSEG(1),"0010",VALERR,.CNT)
"RTN","SCMSVZEL",25,0)
 I $D(@VALERR@(SEG)) G ENQ
"RTN","SCMSVZEL",26,0)
 ;
"RTN","SCMSVZEL",27,0)
 ;- Convert HLQ to null
"RTN","SCMSVZEL",28,0)
 S ZELSEG(1)=$$CONVERT^SCMSVUT0(ZELSEG(1),HLFS,HLQ)
"RTN","SCMSVZEL",29,0)
 S I=0
"RTN","SCMSVZEL",30,0)
 F  S I=+$O(ZELSEG(1,I)) Q:'I  S ZELSEG(1,I)=$$CONVERT^SCMSVUT0(ZELSEG(1,I),HLFS,HLQ)
"RTN","SCMSVZEL",31,0)
 ;
"RTN","SCMSVZEL",32,0)
 S OFFSET=0,NODE=0,SEGLINE=ZELSEG(1)
"RTN","SCMSVZEL",33,0)
 F I=1,3,9,19,20,23,24,25,30,38,39,41 DO
"RTN","SCMSVZEL",34,0)
 . I $L(SEGLINE,HLFS)<(I-OFFSET) D
"RTN","SCMSVZEL",35,0)
 . . ;Segment wrapped
"RTN","SCMSVZEL",36,0)
 . . S OFFSET=OFFSET+$L(SEGLINE,HLFS)-1
"RTN","SCMSVZEL",37,0)
 . . S NODE=+$O(ZELSEG(1,NODE))
"RTN","SCMSVZEL",38,0)
 . . I NODE=0 S SEGLINE="",NODE=+$O(ZELSEG(1,NODE),-1) Q
"RTN","SCMSVZEL",39,0)
 . . S SEGLINE=$G(ZELSEG(1,NODE))
"RTN","SCMSVZEL",40,0)
 . S DATA=$P(SEGLINE,HLFS,I-OFFSET)
"RTN","SCMSVZEL",41,0)
 . I I=3 S ELIG=DATA
"RTN","SCMSVZEL",42,0)
 . I I=9 S VET=DATA
"RTN","SCMSVZEL",43,0)
 . I I=24 S MSTSTAT=DATA
"RTN","SCMSVZEL",44,0)
 . I I=25 S MSTDATE=DATA,DATA=MSTSTAT_"^"_MSTDATE
"RTN","SCMSVZEL",45,0)
 . I I=38 S CVET=DATA
"RTN","SCMSVZEL",46,0)
 . I I=39 S DATA=CVET_"^"_DATA
"RTN","SCMSVZEL",47,0)
 . D VALIDATE^SCMSVUT0(SEG,DATA,$P($T(@(I)),";",3),VALERR,.CNT)
"RTN","SCMSVZEL",48,0)
 . Q
"RTN","SCMSVZEL",49,0)
 ;
"RTN","SCMSVZEL",50,0)
 S DATA=ELIG_"^"_VET
"RTN","SCMSVZEL",51,0)
 F LP=32,91 D VALIDATE^SCMSVUT0(SEG,$S(LP=32:ELIG,LP=91:VET,1:DATA),$P($T(@(LP)),";",3),VALERR,.CNT)
"RTN","SCMSVZEL",52,0)
 ;
"RTN","SCMSVZEL",53,0)
ENQ Q $S($D(@VALERR@(SEG)):MSG,1:1)
"RTN","SCMSVZEL",54,0)
 ;
"RTN","SCMSVZEL",55,0)
 ;
"RTN","SCMSVZEL",56,0)
 ;
"RTN","SCMSVZEL",57,0)
ERR ;;Invalid or missing patient eligibility data for encounter (HL7 ZEL segment)
"RTN","SCMSVZEL",58,0)
 ;
"RTN","SCMSVZEL",59,0)
 ;
"RTN","SCMSVZEL",60,0)
 ;- ZEL data elements validated
"RTN","SCMSVZEL",61,0)
 ;
"RTN","SCMSVZEL",62,0)
1 ;;0035;HL7 SEGMENT NAME
"RTN","SCMSVZEL",63,0)
3 ;;7000;ELIGIBILITY CODE MISSING
"RTN","SCMSVZEL",64,0)
31 ;;7020;ELIGIBILITY CODE INCONSISTENT WITH VET STATUS
"RTN","SCMSVZEL",65,0)
32 ;;7030;ELIGIBILITY CODE INACTIVE
"RTN","SCMSVZEL",66,0)
9 ;;7050;VETERAN?
"RTN","SCMSVZEL",67,0)
91 ;;7100;VET STATUS INCONSISTENT WITH POW
"RTN","SCMSVZEL",68,0)
19 ;;7120;AGENT ORANGE EXPOSURE
"RTN","SCMSVZEL",69,0)
23 ;;7150;INVALID/INCONSISTENT RADIATION EXPOSURE METHOD
"RTN","SCMSVZEL",70,0)
20 ;;7210;RADIATION EXPOSURE INDICATED
"RTN","SCMSVZEL",71,0)
24 ;;7040;INVALID MST CLASSIFICATION
"RTN","SCMSVZEL",72,0)
25 ;;7060;MST STATUS DATE INVALID OR INCONSISTENT WITH MST STATUS
"RTN","SCMSVZEL",73,0)
30 ;;7130;AGENT ORANGE EXPOSURE LOCATION
"RTN","SCMSVZEL",74,0)
38 ;;7330;COMBAT VET INDICATOR
"RTN","SCMSVZEL",75,0)
39 ;;7340;COMBAT VET END DATE
"RTN","SCMSVZEL",76,0)
41 ;;7370;PROJ 112/SHAD INDICATOR
"RTN","SD53441")
0^8^B12587684
"RTN","SD53441",1,0)
SD53441 ;ALB/MRY - Post init for patch 441;6/20/2005
"RTN","SD53441",2,0)
 ;;5.3;Scheduling;**441**;Aug 13, 1993;Build 14
"RTN","SD53441",3,0)
 ;
"RTN","SD53441",4,0)
PRE ;Main entry point for pre-install
"RTN","SD53441",5,0)
 ;Do AmbCare pre-install (copied from SD53142)
"RTN","SD53441",6,0)
 ;Remove ERROR CODE DESCRIPTION (field #11) as an identifier of the
"RTN","SD53441",7,0)
 ; TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE file (#409.76)
"RTN","SD53441",8,0)
 ; (this causes problems when installing error codes)
"RTN","SD53441",9,0)
 I ($D(^DD(409.76,0,"ID",11))) D
"RTN","SD53441",10,0)
 .N TMP,X
"RTN","SD53441",11,0)
 .S X(1)=" "
"RTN","SD53441",12,0)
 .S X(2)="Removing ERROR CODE DESCRIPTION (field #11) as an identifier"
"RTN","SD53441",13,0)
 .S X(3)="of the TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE file"
"RTN","SD53441",14,0)
 .S X(4)="(#409.76) as it causes problems when installing error codes."
"RTN","SD53441",15,0)
 .S X(5)=" "
"RTN","SD53441",16,0)
 .D MES^XPDUTL(.X) K X
"RTN","SD53441",17,0)
 .K ^DD(409.76,0,"ID",11)
"RTN","SD53441",18,0)
 .Q:($D(^DD(409.76,0,"ID")))
"RTN","SD53441",19,0)
 .S TMP=$P(^SD(409.76,0),U,2)
"RTN","SD53441",20,0)
 .S TMP=$TR(TMP,"I","")
"RTN","SD53441",21,0)
 .S $P(^SD(409.76,0),U,2)=TMP
"RTN","SD53441",22,0)
 .Q
"RTN","SD53441",23,0)
 Q
"RTN","SD53441",24,0)
 ;
"RTN","SD53441",25,0)
POST ;Main entry point for post-install
"RTN","SD53441",26,0)
 ;Change 'Environmental Contaminants' to 'Southwest Asia Conditions'
"RTN","SD53441",27,0)
 N ENTRY,FDATA,SDX,SDSAVX
"RTN","SD53441",28,0)
 S ENTRY=+$O(^SD(409.41,"B","ENVIRONMENTAL CONTAMINANTS",0)) I ENTRY D
"RTN","SD53441",29,0)
 .S FDATA(409.41,ENTRY_",",.01)="SW ASIA CONDITIONS"
"RTN","SD53441",30,0)
 .S FDATA(409.41,ENTRY_",",.02)="Was treatment related to service in SW Asia"
"RTN","SD53441",31,0)
 .S FDATA(409.41,ENTRY_",",.06)="SW Asia Conditions"
"RTN","SD53441",32,0)
 .S SDSAVX=$P(^DD(409.41,.01,0),"^",2)
"RTN","SD53441",33,0)
 .S SDX=$P(SDSAVX,"I",1)_$P(SDSAVX,"I",2,99) ;REMOVE THE 'I'
"RTN","SD53441",34,0)
 .S $P(^DD(409.41,.01,0),U,2)=SDX
"RTN","SD53441",35,0)
 .D FILE^DIE("E","FDATA","ERR")
"RTN","SD53441",36,0)
 .S $P(^DD(409.41,.01,0),"^",2)=SDSAVX
"RTN","SD53441",37,0)
 .D BMES^XPDUTL("*****")
"RTN","SD53441",38,0)
 .D MES^XPDUTL("Edit to the OUTPATIENT CLASSIFICATION TYPE file (#409.41)")
"RTN","SD53441",39,0)
 .D MES^XPDUTL("...Replacing 'ENVIRONMENTAL CONTAMINANTS' with...")
"RTN","SD53441",40,0)
 .D MES^XPDUTL("...'SW ASIA CONDITIONS'.")
"RTN","SD53441",41,0)
 .D MES^XPDUTL("*****")
"RTN","SD53441",42,0)
 N TEXT
"RTN","SD53441",43,0)
 ;Ensure entry 8 doesn't exist in Outpatient Classification Type file
"RTN","SD53441",44,0)
 I $D(^SD(409.41,8)) D
"RTN","SD53441",45,0)
 .;Delete entry 8
"RTN","SD53441",46,0)
 .N DIK,DA
"RTN","SD53441",47,0)
 .K TEXT
"RTN","SD53441",48,0)
 .S TEXT(1)=" "
"RTN","SD53441",49,0)
 .S TEXT(2)="'Project 112/SHAD' must be entry number 8 in the Outpatient"
"RTN","SD53441",50,0)
 .S TEXT(3)="Classification Type file (#409.41).  The existing entry 8"
"RTN","SD53441",51,0)
 .S TEXT(4)="will be deleted to ensure that it matches the nationally"
"RTN","SD53441",52,0)
 .S TEXT(5)="distributed definition for 'Project 112/SHAD'."
"RTN","SD53441",53,0)
 .D MES^XPDUTL(.TEXT)
"RTN","SD53441",54,0)
 .S DIK="^SD(409.41,"
"RTN","SD53441",55,0)
 .S DA=8
"RTN","SD53441",56,0)
 .D ^DIK
"RTN","SD53441",57,0)
 ;Create entry in Outpatient Classification Type file (#409.41)
"RTN","SD53441",58,0)
 N SDFDA,SDIEN,SDMSG
"RTN","SD53441",59,0)
 K TEXT
"RTN","SD53441",60,0)
 S TEXT(1)=" "
"RTN","SD53441",61,0)
 S TEXT(2)="Creating 'PROJ 112/SHAD' entry in Outpatient Classification"
"RTN","SD53441",62,0)
 S TEXT(3)="Type file (#409.41) as entry number 8 ..."
"RTN","SD53441",63,0)
 D MES^XPDUTL(.TEXT)
"RTN","SD53441",64,0)
 S SDFDA(409.41,"+1,",.01)="PROJ 112/SHAD"
"RTN","SD53441",65,0)
 S SDFDA(409.41,"+1,",.02)="Was treatment related to PROJ 112/SHAD"
"RTN","SD53441",66,0)
 S SDFDA(409.41,"+1,",.03)="YES/NO"
"RTN","SD53441",67,0)
 S SDFDA(409.41,"+1,",.05)="YES"
"RTN","SD53441",68,0)
 S SDFDA(409.41,"+1,",.06)="PROJ 112/SHAD"
"RTN","SD53441",69,0)
 S SDFDA(409.41,"+1,",.07)="SHAD"
"RTN","SD53441",70,0)
 S SDFDA(409.41,"+1,",1)="I $$SHAD^SDCO22(DFN)"
"RTN","SD53441",71,0)
 S SDFDA(409.41,"+1,",2)="@"
"RTN","SD53441",72,0)
 S SDFDA(409.41,"+1,",50)="@"
"RTN","SD53441",73,0)
 S SDFDA(409.4175,"+2,+1,",.01)="SEPTEMBER 1, 2004"
"RTN","SD53441",74,0)
 S SDFDA(409.4175,"+2,+1,",.02)="YES"
"RTN","SD53441",75,0)
 S SDIEN(1)=8
"RTN","SD53441",76,0)
 D UPDATE^DIE("E","SDFDA","SDIEN","SDMSG")
"RTN","SD53441",77,0)
 I $D(SDMSG) D
"RTN","SD53441",78,0)
 .D MES^XPDUTL("** Unable to create entry **")
"RTN","SD53441",79,0)
 .K TEXT
"RTN","SD53441",80,0)
 .D MSG^DIALOG("ASE",.TEXT,60,3,"SDMSG")
"RTN","SD53441",81,0)
 .D MES^XPDUTL(.TEXT)
"RTN","SD53441",82,0)
 I '$D(SDMSG) D
"RTN","SD53441",83,0)
 .K TEXT
"RTN","SD53441",84,0)
 .S TEXT(1)=" "
"RTN","SD53441",85,0)
 .S TEXT(2)="'PROJ 112/SHAD' successfully added to Outpatient Classification"
"RTN","SD53441",86,0)
 .S TEXT(3)="Type file (#409.41)"
"RTN","SD53441",87,0)
 .D MES^XPDUTL(.TEXT)
"RTN","SD53441",88,0)
 ;Do AmbCare post-init
"RTN","SD53441",89,0)
 D POST^SD53441A
"RTN","SD53441",90,0)
 Q
"RTN","SD53441A")
0^9^B19715313
"RTN","SD53441A",1,0)
SD53441A ;ALB/MRY - PRE/POST INSTALL ROUTINE;6/20/2005
"RTN","SD53441A",2,0)
 ;;5.3;Scheduling;**441**;Aug 13, 1993;Build 14
"RTN","SD53441A",3,0)
 ;
"RTN","SD53441A",4,0)
 ;The bulk of this routine was copied from routine SD53142
"RTN","SD53441A",5,0)
 ;
"RTN","SD53441A",6,0)
POST ;Main entry point of post-install
"RTN","SD53441A",7,0)
 N X,ZTRTN,ZTSK,ZTDESC,ZTDTH,ZTIO,ZTSK,OLDNAME,NEWNAME
"RTN","SD53441A",8,0)
 ;Make ERROR CODE DESCRIPTION (field #11) an identifier of the
"RTN","SD53441A",9,0)
 ; TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE file (#409.76)
"RTN","SD53441A",10,0)
 ; (this was removed by the pre init routine)
"RTN","SD53441A",11,0)
 I ('$D(^DD(409.76,0,"ID",11))) D
"RTN","SD53441A",12,0)
 .N TMP
"RTN","SD53441A",13,0)
 .S X(1)=" "
"RTN","SD53441A",14,0)
 .S X(2)="Restoring ERROR CODE DESCRIPTION (field #11) as an identifier"
"RTN","SD53441A",15,0)
 .S X(3)="of the TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE file"
"RTN","SD53441A",16,0)
 .S X(4)="(#409.76) as it was removed by the pre init."
"RTN","SD53441A",17,0)
 .S X(5)=" "
"RTN","SD53441A",18,0)
 .D MES^XPDUTL(.X) K X
"RTN","SD53441A",19,0)
 .S ^DD(409.76,0,"ID",11)="D EN^DDIOL($P(^(1),U,1))"
"RTN","SD53441A",20,0)
 .S TMP=$P(^SD(409.76,0),U,2)
"RTN","SD53441A",21,0)
 .S TMP=$TR(TMP,"I","")
"RTN","SD53441A",22,0)
 .S $P(^SD(409.76,0),U,2)=TMP_"I"
"RTN","SD53441A",23,0)
 ;Change HL7 application name
"RTN","SD53441A",24,0)
 S OLDNAME="AMBCARE-DH325"
"RTN","SD53441A",25,0)
 S NEWNAME="AMBCARE-DH441"
"RTN","SD53441A",26,0)
 ;Patch already installed - skip rest of post-init
"RTN","SD53441A",27,0)
 I $$PATCH^XPDUTL("SD*5.3*441") D  Q
"RTN","SD53441A",28,0)
 .K X
"RTN","SD53441A",29,0)
 .S X(1)=" "
"RTN","SD53441A",30,0)
 .S X(2)="This patch was previously installed.  Because of this, changing the"
"RTN","SD53441A",31,0)
 .S X(3)="HL7 Application name from "_OLDNAME_" to "_NEWNAME_" and changing"
"RTN","SD53441A",32,0)
 .S X(4)="the status of unacked AmbCare messages to SUCCESSFULLY COMPLETED is"
"RTN","SD53441A",33,0)
 .S X(5)="not required."
"RTN","SD53441A",34,0)
 .S X(6)=" "
"RTN","SD53441A",35,0)
 .D MES^XPDUTL(.X) K X
"RTN","SD53441A",36,0)
 D HLAPP(OLDNAME,NEWNAME)
"RTN","SD53441A",37,0)
 ;Queue changing of HL7 message statuses
"RTN","SD53441A",38,0)
 S ZTRTN="QHLM^SD53441A"
"RTN","SD53441A",39,0)
 S ZTDESC="Change status of unacked AmbCare messages to SUCCESSFULLY COMPLETED"
"RTN","SD53441A",40,0)
 S ZTIO=""
"RTN","SD53441A",41,0)
 S ZTDTH=$H
"RTN","SD53441A",42,0)
 D ^%ZTLOAD
"RTN","SD53441A",43,0)
 K X
"RTN","SD53441A",44,0)
 S X(1)=" "
"RTN","SD53441A",45,0)
 S X(2)="Updating status of AmbCare messages that have not been acknowledged"
"RTN","SD53441A",46,0)
 S X(3)="queued as task number "_$G(ZTSK)
"RTN","SD53441A",47,0)
 S X(4)=" "
"RTN","SD53441A",48,0)
 I '$G(ZTSK) D
"RTN","SD53441A",49,0)
 .S X(1)=" "
"RTN","SD53441A",50,0)
 .S X(2)="***** Updating status of AmbCare messages that have not been"
"RTN","SD53441A",51,0)
 .S X(3)="***** acknowledged was not queued.  This process must be done"
"RTN","SD53441A",52,0)
 .S X(4)="***** in order for these messages to be properly purged."
"RTN","SD53441A",53,0)
 .S X(5)="***** Use entry point QHLM^SD53441A to do this process."
"RTN","SD53441A",54,0)
 .S X(6)=" "
"RTN","SD53441A",55,0)
 D MES^XPDUTL(.X) K X
"RTN","SD53441A",56,0)
 Q
"RTN","SD53441A",57,0)
 ;
"RTN","SD53441A",58,0)
HLAPP(OLDNAME,NEWNAME) ;Change HL7 application name
"RTN","SD53441A",59,0)
 ;Input  : OLDNAME - Name of HL7 application to change
"RTN","SD53441A",60,0)
 ;         NEWNAME - New name for HL7 application
"RTN","SD53441A",61,0)
 ;Output : None
"RTN","SD53441A",62,0)
 ;Notes  : Call designed to be used as a KIDS pre/post init
"RTN","SD53441A",63,0)
 S OLDNAME=$G(OLDNAME) Q:OLDNAME=""
"RTN","SD53441A",64,0)
 S NEWNAME=$G(NEWNAME) Q:NEWNAME=""
"RTN","SD53441A",65,0)
 N DIE,DIC,DA,DR,X,Y,PTCH
"RTN","SD53441A",66,0)
 D BMES^XPDUTL("Changing HL7 Application name from "_OLDNAME_" to "_NEWNAME)
"RTN","SD53441A",67,0)
 S DIC="^HL(771,"
"RTN","SD53441A",68,0)
 S DIC(0)="X"
"RTN","SD53441A",69,0)
 S X=OLDNAME
"RTN","SD53441A",70,0)
 D ^DIC
"RTN","SD53441A",71,0)
 I (Y<0) D  Q
"RTN","SD53441A",72,0)
 .D BMES^XPDUTL("   *** "_OLDNAME_" application not found ***")
"RTN","SD53441A",73,0)
 S DIE=DIC
"RTN","SD53441A",74,0)
 S DA=+Y
"RTN","SD53441A",75,0)
 S DR=".01///^S X=NEWNAME"
"RTN","SD53441A",76,0)
 D ^DIE
"RTN","SD53441A",77,0)
 D MES^XPDUTL("HL7 application name successfully changed to "_NEWNAME)
"RTN","SD53441A",78,0)
 Q
"RTN","SD53441A",79,0)
 ;
"RTN","SD53441A",80,0)
QHLM ;Entry point for queued changing of HL7 messages
"RTN","SD53441A",81,0)
 D HLM("AMBCARE-DH441")
"RTN","SD53441A",82,0)
 Q
"RTN","SD53441A",83,0)
HLM(APPNAME) ;Change status of HL7 messages to '3' (SUCCESSFULLY COMPLETED)
"RTN","SD53441A",84,0)
 ; to enable purging of message
"RTN","SD53441A",85,0)
 ;Input  : APPNAME - Name of application generating message
"RTN","SD53441A",86,0)
 ;Output : None
"RTN","SD53441A",87,0)
 ;Notes  : Call must be used within KIDS (updates progress bar)
"RTN","SD53441A",88,0)
 S APPNAME=$G(APPNAME) Q:APPNAME=""
"RTN","SD53441A",89,0)
 N DA,DIC,DIE,DR,X,Y,SDAPP,HLMID,XPDIDTOT,HLPTR,COUNT,TEXT
"RTN","SD53441A",90,0)
 N XMDUZ,XMSUB,XMTEXT,XMY,XMZ,SBSCRPT
"RTN","SD53441A",91,0)
 S SBSCRPT="SD "_APPNAME
"RTN","SD53441A",92,0)
 K ^TMP(SBSCRPT,$J)
"RTN","SD53441A",93,0)
 S X=$$NOW^XLFDT()
"RTN","SD53441A",94,0)
 S Y=$$FMTE^XLFDT(X)
"RTN","SD53441A",95,0)
 S TEXT="Updating of HL7 Message Text file (#772) began on "
"RTN","SD53441A",96,0)
 S TEXT=TEXT_$P(Y,"@",1)_" @ "_$P(Y,"@",2)
"RTN","SD53441A",97,0)
 S ^TMP(SBSCRPT,$J,1,0)=TEXT
"RTN","SD53441A",98,0)
 S DIC="^HL(771,"
"RTN","SD53441A",99,0)
 S DIC(0)="M"
"RTN","SD53441A",100,0)
 S X=APPNAME
"RTN","SD53441A",101,0)
 D ^DIC
"RTN","SD53441A",102,0)
 I (Y<0) D  G HLMQ
"RTN","SD53441A",103,0)
 .S ^TMP(SBSCRPT,$J,2,0)="   *** "_APPNAME_" application not found"
"RTN","SD53441A",104,0)
 .S ^TMP(SBSCRPT,$J,3,0)="   *** Process aborted"
"RTN","SD53441A",105,0)
 S SDAPP=+Y
"RTN","SD53441A",106,0)
 S HLMID=""
"RTN","SD53441A",107,0)
 S COUNT=0
"RTN","SD53441A",108,0)
 F  S HLMID=$O(^HL(772,"AH",SDAPP,HLMID)) Q:(HLMID="")  D
"RTN","SD53441A",109,0)
 .S HLPTR=0
"RTN","SD53441A",110,0)
 .F  S HLPTR=+$O(^HL(772,"AH",SDAPP,HLMID,HLPTR)) Q:('HLPTR)  D
"RTN","SD53441A",111,0)
 ..S DIE="^HL(772,"
"RTN","SD53441A",112,0)
 ..S DA=HLPTR
"RTN","SD53441A",113,0)
 ..S DR="20////3"
"RTN","SD53441A",114,0)
 ..D ^DIE
"RTN","SD53441A",115,0)
 ..S COUNT=COUNT+1
"RTN","SD53441A",116,0)
 S X=$$NOW^XLFDT()
"RTN","SD53441A",117,0)
 S Y=$$FMTE^XLFDT(X)
"RTN","SD53441A",118,0)
 S TEXT="Updating of HL7 Message Text file completed on "
"RTN","SD53441A",119,0)
 S TEXT=TEXT_$P(Y,"@",1)_" @ "_$P(Y,"@",2)
"RTN","SD53441A",120,0)
 S ^TMP(SBSCRPT,$J,2,0)=TEXT
"RTN","SD53441A",121,0)
 S ^TMP(SBSCRPT,$J,3,0)=COUNT_" entries were updated"
"RTN","SD53441A",122,0)
HLMQ S XMDUZ="Patch SD*5.3*441"
"RTN","SD53441A",123,0)
 S XMSUB="Updating of HL7 Message Text file"
"RTN","SD53441A",124,0)
 S XMTEXT="^TMP("""_SBSCRPT_""",$J,"
"RTN","SD53441A",125,0)
 S XMY(DUZ)=""
"RTN","SD53441A",126,0)
 D ^XMD
"RTN","SD53441A",127,0)
 S ZTREQ="@"
"RTN","SD53441A",128,0)
 Q
"RTN","SDAMEP2")
0^10^B30443820
"RTN","SDAMEP2",1,0)
SDAMEP2 ;ALB/CAW - Extended Display (Patient Data) ; 11/13/02
"RTN","SDAMEP2",2,0)
 ;;5.3;Scheduling;**258,325,441**;Aug 13, 1993;Build 14
"RTN","SDAMEP2",3,0)
 ;
"RTN","SDAMEP2",4,0)
PDATA ; Patient Data
"RTN","SDAMEP2",5,0)
 F SD=0,.11,.13,.32,.322,.321,.36,.52 S SD(SD)=$G(^DPT(DFN,SD))
"RTN","SDAMEP2",6,0)
 S SD("CV")=$$CVEDT^DGCV(DFN,SDT)
"RTN","SDAMEP2",7,0)
 S VAIP("D")="L",VAIP("L")="" D INP^DGPMV10
"RTN","SDAMEP2",8,0)
 S SDFSTCOL=16,SDSECCOL=60
"RTN","SDAMEP2",9,0)
 S X="" D SET^SDAMEP1($$SETSTR^VALM1("*** Patient Information ***",X,25,30))
"RTN","SDAMEP2",10,0)
 D CNTRL^VALM10(SDLN,25,30,IOINHI,IOINORM)
"RTN","SDAMEP2",11,0)
PTDOB ; Date of Birth and SSN Info
"RTN","SDAMEP2",12,0)
 ;
"RTN","SDAMEP2",13,0)
 S X="",X=$$SETSTR^VALM1("Date of Birth:",X,1,14)
"RTN","SDAMEP2",14,0)
 S X=$$SETSTR^VALM1($$FTIME^VALM1($P(SD(0),U,3)),X,SDFSTCOL,18)
"RTN","SDAMEP2",15,0)
 S X=$$SETSTR^VALM1(" ID:",X,55,4)
"RTN","SDAMEP2",16,0)
 S X=$$SETSTR^VALM1(VA("PID"),X,SDSECCOL,20)
"RTN","SDAMEP2",17,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",18,0)
PTSEX ; Sex and Marital Status Info
"RTN","SDAMEP2",19,0)
 ;
"RTN","SDAMEP2",20,0)
 S X="",X=$$SETSTR^VALM1("Sex:",X,11,4)
"RTN","SDAMEP2",21,0)
 S X=$$SETSTR^VALM1($S($P(SD(0),U,2)="F":"FEMALE",$P(SD(0),U,2)="M":"MALE",1:"UNKNOWN"),X,SDFSTCOL,18)
"RTN","SDAMEP2",22,0)
 S X=$$SETSTR^VALM1("Marital Status:",X,44,15)
"RTN","SDAMEP2",23,0)
 S X=$$SETSTR^VALM1($P($G(^DIC(11,+$P(SD(0),U,5),0)),U),X,SDSECCOL,20)
"RTN","SDAMEP2",24,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",25,0)
PTREL ; Religious Pref. Info
"RTN","SDAMEP2",26,0)
 ;
"RTN","SDAMEP2",27,0)
 S X="",X=$$SETSTR^VALM1("Religious Pref.:",X,43,16)
"RTN","SDAMEP2",28,0)
 S X=$$SETSTR^VALM1($P($G(^DIC(13,+$P(SD(0),U,8),0)),U),X,SDSECCOL,20)
"RTN","SDAMEP2",29,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",30,0)
PTMT ; Means Test Info
"RTN","SDAMEP2",31,0)
 ;
"RTN","SDAMEP2",32,0)
 S SDMT=$$LST^DGMTU(DFN),X="" G:$P(SDMT,U,4)="N" PTCO I +SDMT D  G PTMTQ
"RTN","SDAMEP2",33,0)
 .S X=$$SETSTR^VALM1("Means Test:",X,4,11)
"RTN","SDAMEP2",34,0)
 .S X=$$SETSTR^VALM1($P($$FMT^SDUTL2(DFN),U),X,SDFSTCOL,20)
"RTN","SDAMEP2",35,0)
 .S X=$$SETSTR^VALM1("Last Means Test:",X,43,16)
"RTN","SDAMEP2",36,0)
 .S X=$$SETSTR^VALM1($$FDATE^VALM1($P(SDMT,U,2)),X,SDSECCOL,20)
"RTN","SDAMEP2",37,0)
PTCO S SDMT=$$LST^DGMTU(DFN,"",2),X="" I +SDMT D
"RTN","SDAMEP2",38,0)
 .S X=$$SETSTR^VALM1("Co-Pay Test:",X,3,12)
"RTN","SDAMEP2",39,0)
 .S X=$$SETSTR^VALM1($P($$FCO^SDUTL2(DFN),U,2),X,SDFSTCOL,10)
"RTN","SDAMEP2",40,0)
 .S X=$$SETSTR^VALM1("Last Co-Pay Test:",X,42,17)
"RTN","SDAMEP2",41,0)
 .S X=$$SETSTR^VALM1($$FDATE^VALM1($P(SDMT,U,2)),X,SDSECCOL,20)
"RTN","SDAMEP2",42,0)
PTMTQ D SET^SDAMEP1(X)
"RTN","SDAMEP2",43,0)
PTELG ; Primary Eligibility and Period of Service Info
"RTN","SDAMEP2",44,0)
 ;
"RTN","SDAMEP2",45,0)
 S X="",X=$$SETSTR^VALM1("Primary Elig.:",X,1,14)
"RTN","SDAMEP2",46,0)
 S X=$$SETSTR^VALM1($P($G(^DIC(8,+$P(SD(.36),U),0)),U,6),X,SDFSTCOL,21)
"RTN","SDAMEP2",47,0)
 S X=$$SETSTR^VALM1("POS:",X,55,4)
"RTN","SDAMEP2",48,0)
 S X=$$SETSTR^VALM1($P($G(^DIC(21,+$P(SD(.32),U,3),0)),U),X,SDSECCOL,20)
"RTN","SDAMEP2",49,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",50,0)
PTADD ; Patient Address
"RTN","SDAMEP2",51,0)
 ;
"RTN","SDAMEP2",52,0)
 S X="",X=($$SETSTR^VALM1("Address:",X,7,8))
"RTN","SDAMEP2",53,0)
 S X=$$SETSTR^VALM1("Phone:",X,53,6)
"RTN","SDAMEP2",54,0)
 S X=$$SETSTR^VALM1($P(SD(.13),U),X,SDSECCOL,20)
"RTN","SDAMEP2",55,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",56,0)
 S X="",X=($$SETSTR^VALM1($P(SD(.11),U),X,10,30))
"RTN","SDAMEP2",57,0)
 S X=$$SETSTR^VALM1("Cell Phone:",X,48,11)
"RTN","SDAMEP2",58,0)
 S X=$$SETSTR^VALM1($S(($P(SD(.13),U,4)'=""):$P(SD(.13),U,4),1:"UNANSWERED"),X,SDSECCOL,20)
"RTN","SDAMEP2",59,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",60,0)
 S X="",SDPAGFLG=0
"RTN","SDAMEP2",61,0)
 I $P(SD(.11),U,2)'="" D
"RTN","SDAMEP2",62,0)
 .S X="",X=($$SETSTR^VALM1($P(SD(.11),U,2),X,10,30))
"RTN","SDAMEP2",63,0)
 .S X=$$SETSTR^VALM1("Pager #:",X,51,8)
"RTN","SDAMEP2",64,0)
 .S X=$$SETSTR^VALM1($S(($P(SD(.13),U,5)'=""):$P(SD(.13),U,5),1:"UNANSWERED"),X,SDSECCOL,20),SDPAGFLG=1
"RTN","SDAMEP2",65,0)
 D:X'="" SET^SDAMEP1(X)
"RTN","SDAMEP2",66,0)
 ; retrieve country info -- PERM country is piece 10 of .11
"RTN","SDAMEP2",67,0)
 N FILE,CNTRY,FORIEN,FOREIGN
"RTN","SDAMEP2",68,0)
 S FILE=779.004,FORIEN=$P(SD(.11),U,10),CNTRY=$$GET1^DIQ(FILE,FORIEN_",",2),CNTRY=$$UPPER^VALM1(CNTRY),FOREIGN=$$FORIEN^DGADDUTL(FORIEN)
"RTN","SDAMEP2",69,0)
 I 'FOREIGN D 
"RTN","SDAMEP2",70,0)
 . N SDZIP S SDZIP=$P(SD(.11),U,12) S:$E(SDZIP,6,10)'="" SDZIP=$E(SDZIP,1,5)_"-"_$E(SDZIP,6,10)
"RTN","SDAMEP2",71,0)
 . S X="",X=($$SETSTR^VALM1($P(SD(.11),U,4)_", "_$P($G(^DIC(5,+$P(SD(.11),U,5),0)),U)_"  "_SDZIP,X,10,45))
"RTN","SDAMEP2",72,0)
 E  D
"RTN","SDAMEP2",73,0)
 . S X="",X=($$SETSTR^VALM1($P(SD(.11),U,9)_" "_$P(SD(.11),U,4)_" "_$P(SD(.11),U,8),X,10,45))
"RTN","SDAMEP2",74,0)
 I 'SDPAGFLG D
"RTN","SDAMEP2",75,0)
 .S X=$$SETSTR^VALM1("Pager #:",X,51,8)
"RTN","SDAMEP2",76,0)
 .S X=$$SETSTR^VALM1($S(($P(SD(.13),U,5)'=""):$P(SD(.13),U,5),1:"UNANSWERED"),X,SDSECCOL,20)
"RTN","SDAMEP2",77,0)
 D SET^SDAMEP1(X) K SDPAGFLG
"RTN","SDAMEP2",78,0)
 S X="",X=$$SETSTR^VALM1(CNTRY,X,10,45)
"RTN","SDAMEP2",79,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",80,0)
 S X="",X=$$SETSTR^VALM1("EMAIL ADDRESS:",X,1,14)
"RTN","SDAMEP2",81,0)
 S X=$$SETSTR^VALM1($S(($P(SD(.13),U,3)'=""):$P(SD(.13),U,3),1:"UNANSWERED"),X,SDFSTCOL,45)
"RTN","SDAMEP2",82,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",83,0)
PTEXP ; Radiation and Status
"RTN","SDAMEP2",84,0)
 ;
"RTN","SDAMEP2",85,0)
 S X="",X=$$SETSTR^VALM1("Radiation Exposure:",X,1,19)
"RTN","SDAMEP2",86,0)
 S X=$$SETSTR^VALM1($$FYNUNK^SDUTL2($P(SD(.321),U,3)),X,21,7)
"RTN","SDAMEP2",87,0)
 S X=$$SETSTR^VALM1("Status:",X,52,7)
"RTN","SDAMEP2",88,0)
 S A=$S("^3^5^"[("^"_+DGPMVI(2)_"^"):0,1:+DGPMVI(2)),SDST=$S('A:"IN",1:"")_"ACTIVE ",SDSTA=$S("^4^5^"[("^"_+DGPMVI(2)_"^"):"LODGER",1:"INPATIENT")
"RTN","SDAMEP2",89,0)
 I '$D(^DGPM("C",DFN)) S SDST="NO INPT./LOD. ACT.",SDSTA=""
"RTN","SDAMEP2",90,0)
 S X=$$SETSTR^VALM1(SDST_SDSTA,X,SDSECCOL,20)
"RTN","SDAMEP2",91,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",92,0)
PTPOW ; Prisoner of War Info and Last Admission Date
"RTN","SDAMEP2",93,0)
 ;
"RTN","SDAMEP2",94,0)
 S X="",X=$$SETSTR^VALM1("Prisoner of War:",X,4,16)
"RTN","SDAMEP2",95,0)
 S X=$$SETSTR^VALM1($$FYNUNK^SDUTL2($P(SD(.52),U,5)),X,21,7)
"RTN","SDAMEP2",96,0)
 S X=$$SETSTR^VALM1("Last Admit/Lodger Date:",X,36,23)
"RTN","SDAMEP2",97,0)
 I +DGPMVI(13,1) S X=$$SETSTR^VALM1($$FTIME^VALM1(+DGPMVI(13,1)),X,SDSECCOL,18)
"RTN","SDAMEP2",98,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",99,0)
PTAO ; Agent Orange Exposure and Last Discharge Date
"RTN","SDAMEP2",100,0)
 S X="",X=$$SETSTR^VALM1("AO Exp/Loc:",X,9,11)
"RTN","SDAMEP2",101,0)
 S X=$$SETSTR^VALM1($$FYNUNK^SDUTL2($P(SD(.321),U,2))_$S($P(SD(.321),U,13)="V":"/VIET",$P(SD(.321),U,13)="K":"/DMZ",$P(SD(.321),U,13)="O":"/OTH",1:""),X,21,14)
"RTN","SDAMEP2",102,0)
 S X=$$SETSTR^VALM1("Last Disch./Lodger Date:",X,35,24)
"RTN","SDAMEP2",103,0)
 S SDDISCH=+$G(^DGPM(+DGPMVI(17),0))
"RTN","SDAMEP2",104,0)
 I +SDDISCH S X=$$SETSTR^VALM1($$FTIME^VALM1(SDDISCH),X,SDSECCOL,18)
"RTN","SDAMEP2",105,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",106,0)
CV ;Combat vet
"RTN","SDAMEP2",107,0)
 S X="",X=$$SETSTR^VALM1("Combat Veteran:",X,5,15)
"RTN","SDAMEP2",108,0)
 S X=$$SETSTR^VALM1($$FYNUNK^SDUTL2($S($P(SD("CV"),U,1)>0:"Y",1:"N")),X,21,7)
"RTN","SDAMEP2",109,0)
 S X=$$SETSTR^VALM1("Combat Veteran End Date:",X,35,24)
"RTN","SDAMEP2",110,0)
 I $P(SD("CV"),U,1)>0 D
"RTN","SDAMEP2",111,0)
 .S X=$$SETSTR^VALM1($$FTIME^VALM1($P(SD("CV"),U,2)),X,SDSECCOL,18)
"RTN","SDAMEP2",112,0)
 E  S X=$$SETSTR^VALM1("N/A",X,SDSECCOL,3)
"RTN","SDAMEP2",113,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",114,0)
SHAD ;PROJ 112/SHAD
"RTN","SDAMEP2",115,0)
 S X="",X=$$SETSTR^VALM1("PROJ 112/SHAD:",X,6,14)
"RTN","SDAMEP2",116,0)
 S X=$$SETSTR^VALM1($$FYNUNK^SDUTL2($S($P(SD(.321),U,15)>0:"Y",1:"N")),X,21,7)
"RTN","SDAMEP2",117,0)
SWASIA ;SW Asia
"RTN","SDAMEP2",118,0)
 S X=$$SETSTR^VALM1("SW Asia Conditions:",X,40,19)
"RTN","SDAMEP2",119,0)
 S X=$$SETSTR^VALM1($$FYNUNK^SDUTL2($P(SD(.322),U,13)),X,SDSECCOL,20)
"RTN","SDAMEP2",120,0)
 D SET^SDAMEP1(X)
"RTN","SDAMEP2",121,0)
 D SET^SDAMEP1("")
"RTN","SDAMEP2",122,0)
 Q
"RTN","SDCO0")
0^5^B28062547
"RTN","SDCO0",1,0)
SDCO0 ;ALB/RMO - Build List Area - Check Out; 11 FEB 1993 10:00 am ; 6/22/05 12:56pm
"RTN","SDCO0",2,0)
 ;;5.3;Scheduling;**20,44,132,180,351,441**;Aug 13, 1993;Build 14
"RTN","SDCO0",3,0)
 ;
"RTN","SDCO0",4,0)
EN(SDARY,SDOE,SDSTART,SDTOT) ;Entry point Called by Ck Out & Apt Mgr Exp Dis
"RTN","SDCO0",5,0)
 S SDTOT=0
"RTN","SDCO0",6,0)
 D CL(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",7,0)
 D PR(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",8,0)
 D DX(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",9,0)
 I $P($G(^SCE(+SDOE,0)),"^",8)'=2 D SC(SDARY,SDOE,SDSTART,.SDTOT)
"RTN","SDCO0",10,0)
 Q
"RTN","SDCO0",11,0)
 ;
"RTN","SDCO0",12,0)
CL(SDARY,SDOE,SDSTART,SDTOT) ;Build classification (Pg: 1  Row: SDSTART-SDSTART+7  Col: 1-80)
"RTN","SDCO0",13,0)
 N SDCLOEY,SDCNI,SDCNT,SDCTI,SDCTIS,SDCTS,SDEND,SDLINE,SDNA,SDVAL,X
"RTN","SDCO0",14,0)
 S SDLINE=SDSTART,SDEND=SDSTART+8
"RTN","SDCO0",15,0)
 D SET(SDARY,SDLINE," CLASSIFICATION ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",16,0)
 D CLASK^SDCO2(SDOE,.SDCLOEY)
"RTN","SDCO0",17,0)
 D SET(SDARY,SDLINE,"["_$S($D(SDCLOEY):"Required",1:"Not Required")_"]",24,"","","","","",.SDTOT)
"RTN","SDCO0",18,0)
 S SDCNT=0,SDCTIS=$$SEQ^SDCO21
"RTN","SDCO0",19,0)
 F SDCTS=1:1 S SDCTI=+$P(SDCTIS,",",SDCTS) Q:'SDCTI  D
"RTN","SDCO0",20,0)
 .S SDCNT=SDCNT+1,SDLINE=SDLINE+1
"RTN","SDCO0",21,0)
 .S:$D(SDCLOEY(SDCTI)) SDVAL=$$VAL^SDCODD(SDCTI,$P(SDCLOEY(SDCTI),"^",2)),SDNA=+$P(SDCLOEY(SDCTI),"^",3)
"RTN","SDCO0",22,0)
 .S X=$S('$D(SDCLOEY(SDCTI)):"Not Applicable",$$COMDT^SDCOU(SDOE)&(SDVAL=""):"Not Applicable",SDVAL="":"Unanswered",1:SDVAL)
"RTN","SDCO0",23,0)
 .D SET(SDARY,SDLINE,SDCNT_"  "_$J($P($G(^SD(409.41,SDCTI,0)),"^",6)_": ",32)_X,2,"","","CL",SDCNT,+$G(SDCLOEY(SDCTI))_"^"_SDCTI,.SDTOT)
"RTN","SDCO0",24,0)
 F SDLINE=SDLINE+1:1:SDEND D SET(SDARY,SDLINE,"",1,"","","","","",.SDTOT)
"RTN","SDCO0",25,0)
 Q
"RTN","SDCO0",26,0)
 ;
"RTN","SDCO0",27,0)
PR(SDARY,SDOE,SDSTART,SDTOT) ;Build Provider (Pg: 1  Row: SDSTART+8-END  Col: 1-40)
"RTN","SDCO0",28,0)
 N SDCNT,SDLINE,SDPR,SDVPRV
"RTN","SDCO0",29,0)
 S SDLINE=SDSTART+9
"RTN","SDCO0",30,0)
 D SET(SDARY,SDLINE," PROVIDER ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",31,0)
 D SET(SDARY,SDLINE,"["_$S($$PRASK^SDCO3(SDOE)=1:"Required",1:"Not Required")_"]",18,"","","","","",.SDTOT)
"RTN","SDCO0",32,0)
 ;
"RTN","SDCO0",33,0)
 ; -- get provider data
"RTN","SDCO0",34,0)
 D GETPRV^SDOE(SDOE,"SDPR")
"RTN","SDCO0",35,0)
 S (SDCNT,SDVPRV)=0
"RTN","SDCO0",36,0)
 F  S SDVPRV=$O(SDPR(SDVPRV)) Q:'SDVPRV  D
"RTN","SDCO0",37,0)
 . S SDCNT=SDCNT+1
"RTN","SDCO0",38,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",39,0)
 . D SET(SDARY,SDLINE,SDCNT_"  "_$$PR^SDCO31(+SDPR(SDVPRV)),2,"","","PR",SDCNT,SDVPRV_"^"_+SDPR(SDVPRV),.SDTOT)
"RTN","SDCO0",40,0)
 Q
"RTN","SDCO0",41,0)
 ;
"RTN","SDCO0",42,0)
DX(SDARY,SDOE,SDSTART,SDTOT) ;Build Diagnosis (Pg: 1  Row: SDSTART+8-END  Col: 42-80)
"RTN","SDCO0",43,0)
 N SDCNT,SDDXS,SDDXD,SDVPOV,SDLINE,ICDVDT
"RTN","SDCO0",44,0)
 S SDLINE=SDSTART+9
"RTN","SDCO0",45,0)
 D SET(SDARY,SDLINE," DIAGNOSIS ",45,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",46,0)
 D SET(SDARY,SDLINE,"["_$S($$DXASK^SDCO4(SDOE)=1:"Required",1:"Not Required")_"]",59,"","","","","",.SDTOT)
"RTN","SDCO0",47,0)
 ;
"RTN","SDCO0",48,0)
 ; -- get dxs data
"RTN","SDCO0",49,0)
 D GETDX^SDOE(SDOE,"SDDXS")
"RTN","SDCO0",50,0)
 S (SDCNT,SDVPOV)=0
"RTN","SDCO0",51,0)
 F  S SDVPOV=$O(SDDXS(SDVPOV)) Q:'SDVPOV  D
"RTN","SDCO0",52,0)
 . S SDCNT=SDCNT+1
"RTN","SDCO0",53,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",54,0)
 . S ICDVDT=$S($P(SDDXS(SDVPOV),"^",3)'="":$$GET1^DIQ(9000010,$P(SDDXS(SDVPOV),"^",3),.01,"I"),1:"")
"RTN","SDCO0",55,0)
 . S SDDXD=$$DX^SDCO41(+SDDXS(SDVPOV),ICDVDT)
"RTN","SDCO0",56,0)
 . D SET(SDARY,SDLINE,SDCNT_"  "_$P(SDDXD,"^"),42,"","","","","",.SDTOT)
"RTN","SDCO0",57,0)
 . D SET(SDARY,SDLINE,$P(SDDXD,"^",2),55,"","","DX",SDCNT,SDVPOV_"^"_+SDDXS(SDVPOV),.SDTOT)
"RTN","SDCO0",58,0)
 Q
"RTN","SDCO0",59,0)
 ;
"RTN","SDCO0",60,0)
SC(SDARY,SDOEP,SDSTART,SDTOT) ;Build Stop Codes (Pg: 2  Row: SDTOT+1  Col: 1-80)
"RTN","SDCO0",61,0)
 N SDLINE,SDONE
"RTN","SDCO0",62,0)
 F SDLINE=SDTOT+1:1:SDSTART+VALM("LINES")+1 D SET(SDARY,SDLINE,"",1,"","","","","",.SDTOT)
"RTN","SDCO0",63,0)
 D SET(SDARY,SDLINE," STOP CODES ",5,IORVON,IORVOFF,"","","",.SDTOT)
"RTN","SDCO0",64,0)
 D SET(SDARY,SDLINE,"[Stop Codes Not Required / Procedures Required]",28,"","","","","",.SDTOT)
"RTN","SDCO0",65,0)
 D AE(SDARY,SDOEP,.SDLINE,.SDTOT,.SDONE)
"RTN","SDCO0",66,0)
 S SDOE=0
"RTN","SDCO0",67,0)
 F  S SDOE=$O(^SCE("APAR",SDOEP,SDOE)) Q:'SDOE  D AE(SDARY,SDOE,.SDLINE,.SDTOT,.SDONE)
"RTN","SDCO0",68,0)
 Q
"RTN","SDCO0",69,0)
 ;
"RTN","SDCO0",70,0)
AE(SDARY,SDOE,SDLINE,SDTOT,SDONE) ; -- add/edits
"RTN","SDCO0",71,0)
 N SDOE0,SDT,DFN,SDVIEN,CPTS,SDCNT,SDVCPT0,SDVCPT,SDSCD0,X
"RTN","SDCO0",72,0)
 S SDOE0=$G(^SCE(+SDOE,0))
"RTN","SDCO0",73,0)
 S SDT=+SDOE0
"RTN","SDCO0",74,0)
 S DFN=+$P(SDOE0,"^",2)
"RTN","SDCO0",75,0)
 S SDSC=+$P(SDOE0,U,3)
"RTN","SDCO0",76,0)
 S SDCL=+$P(SDOE0,U,4)
"RTN","SDCO0",77,0)
 S SDVIEN=+$P(SDOE0,U,5)
"RTN","SDCO0",78,0)
 ;
"RTN","SDCO0",79,0)
 ; -- quit if visit already processed
"RTN","SDCO0",80,0)
 G:$D(SDONE(SDVIEN)) AEQ
"RTN","SDCO0",81,0)
 ;
"RTN","SDCO0",82,0)
 S SDSCD0=$G(^DIC(40.7,SDSC,0))
"RTN","SDCO0",83,0)
 S SDLINE=SDLINE+1
"RTN","SDCO0",84,0)
 D SET(SDARY,SDLINE,$P(SDSCD0,"^",2)_"  "_$E($P(SDSCD0,"^"),1,30),5,"","","","","",.SDTOT)
"RTN","SDCO0",85,0)
 ;
"RTN","SDCO0",86,0)
 ; -- get cpts and loop
"RTN","SDCO0",87,0)
 D GETCPT^SDOE(SDOE,"CPTS")
"RTN","SDCO0",88,0)
 S (SDCNT,SDVCPT)=0
"RTN","SDCO0",89,0)
 N MODINFO,MODPTR,MODTEXT,PTR,MODCODE,CPTINFO,ICPTVDT
"RTN","SDCO0",90,0)
 F  S SDVCPT=+$O(CPTS(SDVCPT)) Q:'SDVCPT  D
"RTN","SDCO0",91,0)
 .; S SDVCPT0=$G(CPTS(SDVCPT))
"RTN","SDCO0",92,0)
 .; S SDCNT=SDCNT+1
"RTN","SDCO0",93,0)
 . S SDLINE=SDLINE+1
"RTN","SDCO0",94,0)
 . D SET(SDARY,SDLINE,"Procedure(s):",12,"","","","","",.SDTOT)
"RTN","SDCO0",95,0)
 .;
"RTN","SDCO0",96,0)
 .; IF $D(^ICPT(+SDVCPT0,0)) S X=^(0) D
"RTN","SDCO0",97,0)
 .; N CPTINFO
"RTN","SDCO0",98,0)
 . S ICPTVDT=$S($P(CPTS(SDVCPT),"^",3)'="":$$GET1^DIQ(9000010,$P(CPTS(SDVCPT),"^",3),.01,"I"),1:"")
"RTN","SDCO0",99,0)
 . S CPTINFO=$$CPT^ICPTCOD(+$G(CPTS(SDVCPT)),ICPTVDT,1)
"RTN","SDCO0",100,0)
 . S:CPTINFO>0 X=$P(CPTINFO,"^",2,99),X=$P(X,"^")_" x "_$P($G(CPTS(SDVCPT)),"^",16)_"  "_$P(X,"^",2)
"RTN","SDCO0",101,0)
 . S:CPTINFO'>0 X="Procedure not defined"
"RTN","SDCO0",102,0)
 . ;
"RTN","SDCO0",103,0)
 . D SET(SDARY,SDLINE,$E(X,1,40),27,"","","","","",.SDTOT)
"RTN","SDCO0",104,0)
 . ;
"RTN","SDCO0",105,0)
 . ;Retrieve Procedure (CPT) Codes and associated Modifiers
"RTN","SDCO0",106,0)
 . S PTR=0
"RTN","SDCO0",107,0)
 . F  S PTR=+$O(CPTS(SDVCPT,1,PTR)) Q:'PTR  D
"RTN","SDCO0",108,0)
 . . S MODPTR=$G(CPTS(SDVCPT,1,PTR,0))
"RTN","SDCO0",109,0)
 . . Q:'MODPTR
"RTN","SDCO0",110,0)
 . . S MODINFO=$$MOD^ICPTMOD(MODPTR,"I",ICPTVDT,1)
"RTN","SDCO0",111,0)
 . . Q:MODINFO'>0
"RTN","SDCO0",112,0)
 . . S MODCODE="-"_$P(MODINFO,"^",2)
"RTN","SDCO0",113,0)
 . . S MODTEXT=$P(MODINFO,"^",3)
"RTN","SDCO0",114,0)
 . . S SDLINE=SDLINE+1
"RTN","SDCO0",115,0)
 . . D SET(SDARY,SDLINE,MODCODE,29,"","","","","",.SDTOT)
"RTN","SDCO0",116,0)
 . . D SET(SDARY,SDLINE,MODTEXT,38,"","","","","",.SDTOT)
"RTN","SDCO0",117,0)
 . . Q
"RTN","SDCO0",118,0)
 ;
"RTN","SDCO0",119,0)
 ; -- set indicator that visit was processed
"RTN","SDCO0",120,0)
 S SDONE(SDVIEN)=""
"RTN","SDCO0",121,0)
AEQ Q
"RTN","SDCO0",122,0)
 ;
"RTN","SDCO0",123,0)
SET(SDARY,LINE,TEXT,COL,ON,OFF,SDSUB,SDCNT,SDATA,SDTOT) ; -- set display array
"RTN","SDCO0",124,0)
 N X
"RTN","SDCO0",125,0)
 S:LINE>SDTOT SDTOT=LINE
"RTN","SDCO0",126,0)
 S X=$S($D(^TMP(SDARY,$J,LINE,0)):^(0),1:"")
"RTN","SDCO0",127,0)
 S ^TMP(SDARY,$J,LINE,0)=$$SETSTR^VALM1(TEXT,X,COL,$L(TEXT))
"RTN","SDCO0",128,0)
 D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(LINE,COL,$L(TEXT),$G(ON),$G(OFF))
"RTN","SDCO0",129,0)
 S:$G(SDSUB)]"" ^TMP("SDCOIDX",$J,SDSUB,SDCNT,SDLINE)=SDATA,^TMP("SDCOIDX",$J,SDSUB,0)=SDCNT
"RTN","SDCO0",130,0)
 Q
"RTN","SDCO21")
0^2^B6387565
"RTN","SDCO21",1,0)
SDCO21 ;ALB/RMO - Classification Cont. - Check Out;30 MAR 1993 2:10 pm ; 3/12/04 4:33pm
"RTN","SDCO21",2,0)
 ;;5.3;Scheduling;**150,244,325,441**;Aug 13, 1993;Build 14
"RTN","SDCO21",3,0)
 ;
"RTN","SDCO21",4,0)
CL(DFN,SDDT,SDOE,SDCLY) ;Build Classification Array
"RTN","SDCO21",5,0)
 ; Input  -- DFN      Patient file IEN  
"RTN","SDCO21",6,0)
 ;           SDDT     Date/Time
"RTN","SDCO21",7,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO21",8,0)
 ; Output -- SDCLY    Classification Array
"RTN","SDCO21",9,0)
 ;                    Subscripted by Class. Type file (#409.41) IEN
"RTN","SDCO21",10,0)
 N SDCTI
"RTN","SDCO21",11,0)
 S SDCTI=0 F  S SDCTI=$O(^SD(409.41,SDCTI)) Q:'SDCTI  I $$SCR(SDCTI,DFN,SDDT,$G(SDOE)) S SDCLY(SDCTI)=""
"RTN","SDCO21",12,0)
CLQ Q
"RTN","SDCO21",13,0)
 ;
"RTN","SDCO21",14,0)
SCR(SDCTI,DFN,SDDT,SDOE) ;Outpatient Classification Type Screen
"RTN","SDCO21",15,0)
 ; Input  -- SDCTI    Outpatient Classification Type IEN
"RTN","SDCO21",16,0)
 ;           DFN      Patient file IEN  
"RTN","SDCO21",17,0)
 ;           SDDT     Date/Time
"RTN","SDCO21",18,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO21",19,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO21",20,0)
 N Y
"RTN","SDCO21",21,0)
 I $$ACT^SDCODD(SDCTI,SDDT) D
"RTN","SDCO21",22,0)
 .I $D(^SD(409.41,SDCTI,1)) X ^(1) Q:'$T
"RTN","SDCO21",23,0)
 .S Y=1
"RTN","SDCO21",24,0)
SCRQ Q +$G(Y)
"RTN","SDCO21",25,0)
 ;
"RTN","SDCO21",26,0)
CLOE(SDOE,SDCLOEY) ;Set-up Classification Array for Outpatient Encounter
"RTN","SDCO21",27,0)
 ; Input  -- SDOE     Outpatient Encounter file IEN
"RTN","SDCO21",28,0)
 ; Output -- SDCLOEY  Classification Array Set for Outpatient Encounter
"RTN","SDCO21",29,0)
 ;                    Subscripted by Class Type file IEN
"RTN","SDCO21",30,0)
 ;                    Null or 409.42 IEN^Internal Value^1=n/a^1=unedt
"RTN","SDCO21",31,0)
 N SDCLY,SDCN0,SDCNI,SDCTI,SDCTIS,SDCTS,SDOE0
"RTN","SDCO21",32,0)
 S SDOE0=$G(^SCE(+SDOE,0))
"RTN","SDCO21",33,0)
 D CL($P(SDOE0,"^",2),+SDOE0,SDOE,.SDCLY)
"RTN","SDCO21",34,0)
 S SDCTI=0 F  S SDCTI=$O(^SDD(409.42,"AO",SDOE,SDCTI)) Q:'SDCTI  S SDCNI=+$O(^(SDCTI,0)) I $D(^SDD(409.42,SDCNI,0)) S SDCN0=^(0) D
"RTN","SDCO21",35,0)
 .S SDCLY(SDCTI)=SDCNI_"^"_$P(SDCN0,"^",3)_"^"_$S('$D(SDCLY(SDCTI)):1,1:"")_"^"_$S($P(SDOE0,"^",10)=2:1,1:"")
"RTN","SDCO21",36,0)
 S SDCTIS=$$SEQ
"RTN","SDCO21",37,0)
 F SDCTS=1:1 S SDCTI=+$P(SDCTIS,",",SDCTS) Q:'SDCTI  I $D(SDCLY(SDCTI)) S SDCLOEY(SDCTI)=SDCLY(SDCTI)
"RTN","SDCO21",38,0)
CLOEQ Q
"RTN","SDCO21",39,0)
 ;
"RTN","SDCO21",40,0)
SC(SDCTI,SDOE,SDSELY,SDCLOEY) ;Service Connected Classification Checks
"RTN","SDCO21",41,0)
 N SDCHGF,SDCLOE,SDSEL
"RTN","SDCO21",42,0)
 S SDSEL=$S(SDCTI=1:2,SDCTI=2:3,SDCTI=4:4,1:"") G SCQ:SDSEL=""
"RTN","SDCO21",43,0)
 D CHK(SDOE,SDCTI,.SDCLOE)
"RTN","SDCO21",44,0)
 I $D(SDCLOE) D  G SCQ
"RTN","SDCO21",45,0)
 .I SDCLOE,$P(SDCLOE,"^",3) S SDCHGF=1
"RTN","SDCO21",46,0)
 .I SDCLOE="" S SDCHGF=1
"RTN","SDCO21",47,0)
 .I $G(SDCHGF) S:$D(SDSELY) SDSELY(SDSEL)="" S SDCLOEY(SDCTI)=SDCLOE
"RTN","SDCO21",48,0)
 I '$D(SDCLOE) D
"RTN","SDCO21",49,0)
 .K SDCLOEY(SDCTI)
"RTN","SDCO21",50,0)
SCQ Q
"RTN","SDCO21",51,0)
 ;
"RTN","SDCO21",52,0)
CHK(SDOE,SDCTI,SDCLOE) ;Check One Classification for Outpatient Encounter
"RTN","SDCO21",53,0)
 ; Input  -- SDOE     Outpatient Encounter file IEN
"RTN","SDCO21",54,0)
 ;           SDCTI    Outpatient Classification Type IEN
"RTN","SDCO21",55,0)
 ; Output -- SDCLOE   Null or 409.42 IEN^Internal Value^1=n/a^1=unedt
"RTN","SDCO21",56,0)
 N DFN,SDCL,SDCNI,SDDT,SDOE0
"RTN","SDCO21",57,0)
 S SDOE0=$G(^SCE(+SDOE,0))
"RTN","SDCO21",58,0)
 S DFN=+$P(SDOE0,"^",2),SDDT=+SDOE0
"RTN","SDCO21",59,0)
 I $$SCR(SDCTI,DFN,SDDT,SDOE) S SDCL=""
"RTN","SDCO21",60,0)
 S SDCNI=+$O(^SDD(409.42,"AO",SDOE,SDCTI,0))
"RTN","SDCO21",61,0)
 I $D(^SDD(409.42,SDCNI,0)) S SDCL=SDCNI_"^"_$P(^(0),"^",3)_"^"_$S('$D(SDCL):1,1:"")_"^"_$S($P(SDOE0,"^",10)=2:1,1:"")
"RTN","SDCO21",62,0)
 I $D(SDCL) S SDCLOE=SDCL
"RTN","SDCO21",63,0)
CHKQ Q
"RTN","SDCO21",64,0)
 ;
"RTN","SDCO21",65,0)
SEQ() ;Classification Type Sequence by IEN
"RTN","SDCO21",66,0)
 ; Input  -- None
"RTN","SDCO21",67,0)
 ; Output -- Classification Type Sequence by IEN
"RTN","SDCO21",68,0)
 ;           Current Sequence is:  SC, CV, AO, IR, EC, SHAD, MST, HNC
"RTN","SDCO21",69,0)
 Q "3,7,1,2,4,8,5,6"
"RTN","SDCO22")
0^3^B9108174
"RTN","SDCO22",1,0)
SDCO22 ;ALB/RMO/MRY - Classification Cont. - Screen - Check Out;9 MAY 2005  11:15 PM ; 8/30/01 11:19am
"RTN","SDCO22",2,0)
 ;;5.3;Scheduling;**150,222,244,325,394,441**;Aug 13, 1993;Build 14
"RTN","SDCO22",3,0)
 ;
"RTN","SDCO22",4,0)
AO(DFN,SDOE) ;Ask Agent Orange Exposure Classification
"RTN","SDCO22",5,0)
 ; Input  -- DFN      Patient file IEN  
"RTN","SDCO22",6,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO22",7,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO22",8,0)
 N SDELG0,Y
"RTN","SDCO22",9,0)
 I $P($G(^DPT(DFN,.321)),"^",2)="Y",$P($G(^DPT(DFN,.321)),"^",13)="V" D  ;SD/441
"RTN","SDCO22",10,0)
 . S SDELG0=$$EL(DFN,$G(SDOE))
"RTN","SDCO22",11,0)
 . I $P(SDELG0,"^",5)="Y","^1^2^3^4^5^"[("^"_$P(SDELG0,"^",4)_"^") S Y=1
"RTN","SDCO22",12,0)
 . I $G(Y),$G(SDOE) D
"RTN","SDCO22",13,0)
 . . I '$$AP(SDOE,1) S Y=0 Q
"RTN","SDCO22",14,0)
 . . I $P(SDELG0,"^",4)=3!($P(SDELG0,"^",4)=1),$P($G(^SDD(409.42,+$O(^SDD(409.42,"AO",+SDOE,3,0)),0)),"^",3) S Y=0
"RTN","SDCO22",15,0)
AOQ Q +$G(Y)
"RTN","SDCO22",16,0)
 ;
"RTN","SDCO22",17,0)
IR(DFN,SDOE) ;Ask Ionizing Radiation Exposure Classification
"RTN","SDCO22",18,0)
 ; Input  -- DFN      Patient file IEN  
"RTN","SDCO22",19,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO22",20,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO22",21,0)
 N SDELG0,Y
"RTN","SDCO22",22,0)
 I $P($G(^DPT(DFN,.321)),"^",3)'="Y" G IRQ
"RTN","SDCO22",23,0)
 S SDELG0=$$EL(DFN,$G(SDOE))
"RTN","SDCO22",24,0)
 I $P(SDELG0,"^",5)="Y","^1^2^3^4^5^"[("^"_$P(SDELG0,"^",4)_"^") S Y=1
"RTN","SDCO22",25,0)
 I $G(Y),$G(SDOE) D
"RTN","SDCO22",26,0)
 .I '$$AP(SDOE,2) S Y=0 Q
"RTN","SDCO22",27,0)
 .I $P(SDELG0,"^",4)=3!($P(SDELG0,"^",4)=1),$P($G(^SDD(409.42,+$O(^SDD(409.42,"AO",+SDOE,3,0)),0)),"^",3) S Y=0
"RTN","SDCO22",28,0)
IRQ Q +$G(Y)
"RTN","SDCO22",29,0)
 ;
"RTN","SDCO22",30,0)
SC(DFN,SDOE) ;Ask Service Connected Condition Classification
"RTN","SDCO22",31,0)
 ; Input  -- DFN      Patient file IEN  
"RTN","SDCO22",32,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO22",33,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO22",34,0)
 N SDELG0,Y
"RTN","SDCO22",35,0)
 S SDELG0=$$EL(DFN,$G(SDOE))
"RTN","SDCO22",36,0)
 I $P(SDELG0,"^",5)="Y","^1^3^"[("^"_$P(SDELG0,"^",4)_"^") S Y=1
"RTN","SDCO22",37,0)
 I $G(Y),$G(SDOE) D
"RTN","SDCO22",38,0)
 .I '$$AP(SDOE,3) S Y=0 Q
"RTN","SDCO22",39,0)
SCQ Q +$G(Y)
"RTN","SDCO22",40,0)
 ;
"RTN","SDCO22",41,0)
EC(DFN,SDOE) ;Ask Environmental Contaminant Exposure Classification
"RTN","SDCO22",42,0)
 ;sd/441 - renamed 'SW Asia Coditions'
"RTN","SDCO22",43,0)
 ; Input  -- DFN      Patient file IEN  
"RTN","SDCO22",44,0)
 ;           SDOE     Outpatient Encounter file IEN  [Optional]
"RTN","SDCO22",45,0)
 ; Output -- 1=Yes and 0=No
"RTN","SDCO22",46,0)
 N SDELG0,Y
"RTN","SDCO22",47,0)
 S SDELG0=$$EL(DFN,$G(SDOE))
"RTN","SDCO22",48,0)
 I $P($G(^DPT(DFN,.322)),"^",13)'="Y" D  G ECQ
"RTN","SDCO22",49,0)
 .I $P(SDELG0,"^",5)="N","^4^"[("^"_$P(SDELG0,"^",4)_"^"),"^A^B^C^D^6^"[("^"_($P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3))_"^") S Y=1
"RTN","SDCO22",50,0)
 I $P(SDELG0,"^",5)="Y","^1^2^3^4^5^"[("^"_$P(SDELG0,"^",4)_"^") S Y=1
"RTN","SDCO22",51,0)
 I $G(Y),$G(SDOE) D
"RTN","SDCO22",52,0)
 .I '$$AP(SDOE,4) S Y=0 Q
"RTN","SDCO22",53,0)
 .I $P(SDELG0,"^",4)=3!($P(SDELG0,"^",4)=1),$P($G(^SDD(409.42,+$O(^SDD(409.42,"AO",+SDOE,3,0)),0)),"^",3) S Y=0
"RTN","SDCO22",54,0)
ECQ Q +$G(Y)
"RTN","SDCO22",55,0)
 ;
"RTN","SDCO22",56,0)
EL(DFN,SDOE) ;Eligibility
"RTN","SDCO22",57,0)
 Q $G(^DIC(8.1,+$P($G(^DIC(8,+$S($P($G(^SCE(+$G(SDOE),0)),"^",13):+$P(^(0),"^",13),1:+$G(^DPT(DFN,.36))),0)),"^",9),0))
"RTN","SDCO22",58,0)
 ;
"RTN","SDCO22",59,0)
AP(SDOE,SDCTI) ;Classification Appointment Type Screen
"RTN","SDCO22",60,0)
 N SDAPTY,Y
"RTN","SDCO22",61,0)
 S SDAPTY=+$P($G(^SCE(+SDOE,0)),"^",10)
"RTN","SDCO22",62,0)
 I SDAPTY=9 S Y=1
"RTN","SDCO22",63,0)
 I SDAPTY=11 S Y=1
"RTN","SDCO22",64,0)
 I SDAPTY=2,SDCTI=3 S Y=1
"RTN","SDCO22",65,0)
APQ Q +$G(Y)
"RTN","SDCO22",66,0)
 ;
"RTN","SDCO22",67,0)
MST(DFN,SDOE) ;Ask Military Sexual Trauma Classification
"RTN","SDCO22",68,0)
 ;Input - DFN  Patient file IEN
"RTN","SDCO22",69,0)
 ;        SDOE  Outpatient Encounter file IEN
"RTN","SDCO22",70,0)
 ;Output - 1=Yes, 0=No
"RTN","SDCO22",71,0)
 N DGMST
"RTN","SDCO22",72,0)
 S DGMST=$$GETSTAT^DGMSTAPI(DFN)
"RTN","SDCO22",73,0)
 Q +($P(DGMST,U,2)="Y")
"RTN","SDCO22",74,0)
 ;
"RTN","SDCO22",75,0)
HNC(DFN,SDOE) ;Ask Head & Neck Classification
"RTN","SDCO22",76,0)
 ;Input - DFN  Patient file IEN
"RTN","SDCO22",77,0)
 ;        SDOE  Outpatient Encounter file IEN
"RTN","SDCO22",78,0)
 ;Output - 1=Yes, 0=No
"RTN","SDCO22",79,0)
 N DGARR,SDELG0,Y
"RTN","SDCO22",80,0)
 S SDELG0=$$GETCUR^DGNTAPI(DFN,"DGARR")
"RTN","SDCO22",81,0)
 S SDELG0=+$G(DGARR("STAT"))
"RTN","SDCO22",82,0)
 ;Only a status of 3, 4 or 5 is accepted for the question to be asked
"RTN","SDCO22",83,0)
 S Y=$S((".3.4.5."[("."_SDELG0_".")):1,1:0)
"RTN","SDCO22",84,0)
HNCQ Q +$G(Y)
"RTN","SDCO22",85,0)
 ;
"RTN","SDCO22",86,0)
CV(DFN,SDOE,SDDT) ;Ask Combat Veteran Classification
"RTN","SDCO22",87,0)
 ;Input : DFN - Pointer to PATIENT file (#2)
"RTN","SDCO22",88,0)
 ;        SDOE - Pointer to OUTPATIENT ENCOUNTER file (#409.68)
"RTN","SDCO22",89,0)
 ;        SDDT - Date (FileMan format) (optional - SDOE overrides)
"RTN","SDCO22",90,0)
 ;Output: 1 = Yes / 0 = No
"RTN","SDCO22",91,0)
 N SDCV
"RTN","SDCO22",92,0)
 S SDDT=$G(SDDT)
"RTN","SDCO22",93,0)
 S:$G(SDOE) SDDT=+$G(^SCE(+$G(SDOE),0))
"RTN","SDCO22",94,0)
 S:'SDDT SDDT=$$DT^XLFDT()
"RTN","SDCO22",95,0)
 S SDCV=$$CVEDT^DGCV(DFN,SDDT)
"RTN","SDCO22",96,0)
 Q $P(SDCV,"^",3)
"RTN","SDCO22",97,0)
 ;
"RTN","SDCO22",98,0)
SHAD(DFN) ;Ask Project 112/SHAD Classification
"RTN","SDCO22",99,0)
 ;Input : DFN - Pointer to PATIENT file (#2)
"RTN","SDCO22",100,0)
 ;Output: 1 = Yes / 0 = No / "" = unanswered
"RTN","SDCO22",101,0)
 Q $$GETSHAD^DGUTL3(DFN)
"RTN","SDLT")
0^14^B16314350
"RTN","SDLT",1,0)
SDLT ;ALB/LDB - CANCELLATION LETTERS ; 14 Feb 2003
"RTN","SDLT",2,0)
 ;;5.3;Scheduling;**185,213,281,330,398,523,441**;Aug 13, 1993;Build 14
"RTN","SDLT",3,0)
 ;
"RTN","SDLT",4,0)
 ;**************************************************************************
"RTN","SDLT",5,0)
 ;                          MODIFICATIONS
"RTN","SDLT",6,0)
 ;                          
"RTN","SDLT",7,0)
 ;   DATE      PATCH     DEVELOPER  DESCRIPTION OF CHANGES
"RTN","SDLT",8,0)
 ; --------  ----------  ---------  ----------------------------------------
"RTN","SDLT",9,0)
 ; 02/14/03  SD*5.3*281  SAUNDERS   Print letters to confidential address if
"RTN","SDLT",10,0)
 ;                                  requested
"RTN","SDLT",11,0)
 ; 12/2/03   SD*5.3*330  LUNDEN     Remove form feed from PRT+0
"RTN","SDLT",12,0)
 ;
"RTN","SDLT",13,0)
 ;**************************************************************************
"RTN","SDLT",14,0)
 ;
"RTN","SDLT",15,0)
 N Z0,X
"RTN","SDLT",16,0)
 ;WRITE GREETING AND OPENING TEXT OF LETTER
"RTN","SDLT",17,0)
PRT S DFN=$P(A,U,1)  ;SD*523
"RTN","SDLT",18,0)
 I $D(SDNOSH) I $D(^DPT(DFN,.1)) S POP=1 Q:POP  ;SD/523
"RTN","SDLT",19,0)
 S Y=DT D DTS^SDUTL
"RTN","SDLT",20,0)
 I +$G(SDFIRST)=0 W @IOF ;SD*5.3*330 Form feed only after letter #1
"RTN","SDLT",21,0)
 K SDFIRST
"RTN","SDLT",22,0)
 ;S SDFIRST=0
"RTN","SDLT",23,0)
 W !,?65,Y,!,?65,$$LAST4(A),!!!!
"RTN","SDLT",24,0)
 I 'SDFORM W !!!!! D ADDR W !!!!
"RTN","SDLT",25,0)
W1 W !,"Dear ",$S($P(^DPT(+A,0),"^",2)="M":"Mr. ",1:"Ms. ")
"RTN","SDLT",26,0)
 N DPTNAME
"RTN","SDLT",27,0)
 S DPTNAME("FILE")=2,DPTNAME("FIELD")=".01",DPTNAME("IENS")=(+A)_","
"RTN","SDLT",28,0)
 S X=$$NAMEFMT^XLFNAME(.DPTNAME,"G","M") W X,","
"RTN","SDLT",29,0)
 W !! K ^UTILITY($J,"W"),DIWF,DIWR,DIWF S DIWL=1,DIWF="C80WN" F Z0=0:0 S Z0=$O(^VA(407.5,SDLET,1,Z0)) Q:Z0'>0  S X=^(Z0,0) D ^DIWP
"RTN","SDLT",30,0)
 D ^DIWW K ^UTILITY($J,"W") Q
"RTN","SDLT",31,0)
WRAPP ;WRITE APPOINTMENT INFORMATION
"RTN","SDLT",32,0)
 N B
"RTN","SDLT",33,0)
 S:$D(SC)&'$D(SDC) SDC=SC S SDCL=$P(^SC(+SDC,0),"^",1),SDCL=SDCL_" Clinic" D FORM
"RTN","SDLT",34,0)
 S SDX1=$S($D(SDX):SDX,1:X) S:$D(SDS) S=SDS F B=3,4,5 I $P(S,"^",B)]"" S SDCL=$S(B=3:"LAB",B=4:"XRAY",1:"EKG"),SDX=$P(S,"^",B) D FORM
"RTN","SDLT",35,0)
 S (SDX,X)=SDX1 Q
"RTN","SDLT",36,0)
FORM S:$D(SDX) X=SDX S SDHX=X D DW^%DTC S DOW=X,X=SDHX X ^DD("FUNC",2,1) S SDT0=X,SDDAT=$P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC","^",$E(SDHX,4,5))_" "_+$E(SDHX,6,7)_", "_(1700+$E(SDHX,1,3)) W !?4,DOW,?14,$J(SDDAT,12)
"RTN","SDLT",37,0)
 W ?27,$J(SDT0,8)," ",SDCL I $D(SDLT)&($Y>(IOSL-8)) W @IOF
"RTN","SDLT",38,0)
 Q
"RTN","SDLT",39,0)
REST ;WRITE THE REMAINDER OF LETTER
"RTN","SDLT",40,0)
 N Z5,I,X
"RTN","SDLT",41,0)
 I SDLET W !?12 K ^UTILITY($J,"W"),DIWL,DIWR,DIWF S DIWL=1,DIWF="C80WN" F Z5=0:0 S Z5=$O(^VA(407.5,SDLET,2,Z5)) Q:Z5'>0  S X=^(Z5,0) D ^DIWP
"RTN","SDLT",42,0)
 D ^DIWW K ^UTILITY($J,"W") Q:'SDFORM
"RTN","SDLT",43,0)
 F I=$Y:1:IOSL-12 W !
"RTN","SDLT",44,0)
 D ADDR Q
"RTN","SDLT",45,0)
ADDR K VAHOW S DFN=+A W !?12,$$FML^DGNFUNC(DFN)
"RTN","SDLT",46,0)
 I $D(^DG(43,1,"BT")),'$P(^("BT"),"^",3) S VAPA("P")=""
"RTN","SDLT",47,0)
 S X1=DT,X2=5 D C^%DTC I '$D(VAPA("P")) S (VATEST("ADD",9),VATEST("ADD",10))=X
"RTN","SDLT",48,0)
 D ADD^VADPT D
"RTN","SDLT",49,0)
 .;CHANGE STATE TO ABBR.
"RTN","SDLT",50,0)
 .N SDIENS,X
"RTN","SDLT",51,0)
 .I $D(VAPA(5)) S SDIENS=+VAPA(5)_",",X=$$GET1^DIQ(5,SDIENS,1),$P(VAPA(5),U,2)=X
"RTN","SDLT",52,0)
 .K SDIENS Q
"RTN","SDLT",53,0)
 N SDCCACT1,SDCCACT2,LL
"RTN","SDLT",54,0)
 S SDCCACT1=VAPA(12),SDCCACT2=$P($G(VAPA(22,2)),"^",3)
"RTN","SDLT",55,0)
 ;if confidential address is not active for scheduling/appointment letters, print to regular address
"RTN","SDLT",56,0)
 I ($G(SDCCACT1)=0)!($G(SDCCACT2)'="Y") D
"RTN","SDLT",57,0)
 .F LL=1:1:3 W:VAPA(LL)]"" !,?12,VAPA(LL)
"RTN","SDLT",58,0)
 .;if country is blank display as USA
"RTN","SDLT",59,0)
 .I (VAPA(25)="")!(VAPA(25)="1^UNITED STATES") D  ;display city,state,zip
"RTN","SDLT",60,0)
 ..W !,?12,VAPA(4)_", "_$P(VAPA(5),U,2)_"  "_$P(VAPA(11),U,2)
"RTN","SDLT",61,0)
 .E  D  ;display postal code,city,province
"RTN","SDLT",62,0)
 ..W !,?12,VAPA(24)_" "_VAPA(4)_" "_VAPA(23)
"RTN","SDLT",63,0)
 .W !,?12,$P(VAPA(25),U,2) ;display country
"RTN","SDLT",64,0)
 ;if confidential address is active for scheduling/appointment letters, print to confidential address
"RTN","SDLT",65,0)
 I $G(SDCCACT1)=1,$G(SDCCACT2)="Y" D
"RTN","SDLT",66,0)
 .F LL=13:1:15 W:VAPA(LL)]"" !,?12,VAPA(LL)
"RTN","SDLT",67,0)
 .I (VAPA(28)="")!(VAPA(28)="1^UNITED STATES") D
"RTN","SDLT",68,0)
 ..W !,?12,VAPA(16)_", "_$P(VAPA(17),U,2)_"  "_$P(VAPA(18),U,2)
"RTN","SDLT",69,0)
 .E  D
"RTN","SDLT",70,0)
 ..W !,?12,VAPA(27)_" "_VAPA(16)_" "_VAPA(26)
"RTN","SDLT",71,0)
 .W !,?12,$P(VAPA(28),U,2)
"RTN","SDLT",72,0)
 W ! D KVAR^VADPT Q
"RTN","SDLT",73,0)
 ;
"RTN","SDLT",74,0)
 ;
"RTN","SDLT",75,0)
LAST4(DFN) ;Return patient "last four"
"RTN","SDLT",76,0)
 N SDX
"RTN","SDLT",77,0)
 S SDX=$G(^DPT(+DFN,0))
"RTN","SDLT",78,0)
 Q $E(SDX)_$E($P(SDX,U,9),6,9)
"RTN","SDLT",79,0)
 ;
"RTN","SDLT",80,0)
BADADD ;Print patients with a Bad Address Indicator
"RTN","SDLT",81,0)
 I '$D(^TMP($J,"BADADD")) Q
"RTN","SDLT",82,0)
 N SDHDR,SDHDR1
"RTN","SDLT",83,0)
 W @IOF,$TR($J("",IOM)," ","*")
"RTN","SDLT",84,0)
 S SDHDR="BAD ADDRESS INDICATOR LIST" W !,?(IOM-$L(SDHDR)/2),SDHDR,!
"RTN","SDLT",85,0)
 S SDHDR1="** THE LETTER FOR THESE PATIENT(S) DID NOT PRINT DUE TO A BAD ADDRESS INDICATOR."
"RTN","SDLT",86,0)
 W !,"Last 4",!,"of SSN",?10,"Patient Name",!
"RTN","SDLT",87,0)
 W $TR($J("",IOM)," ","*")
"RTN","SDLT",88,0)
 N SDNAM,SDDFN
"RTN","SDLT",89,0)
 S SDNAM="" F  S SDNAM=$O(^TMP($J,"BADADD",SDNAM)) Q:SDNAM=""  D
"RTN","SDLT",90,0)
 . S SDDFN=0 F  S SDDFN=$O(^TMP($J,"BADADD",SDNAM,SDDFN)) Q:'SDDFN  D
"RTN","SDLT",91,0)
 . . W !,$$LAST4(SDDFN),?10,SDNAM
"RTN","SDLT",92,0)
 W !!,SDHDR1
"RTN","SDLT",93,0)
 Q
"RTN","SDM")
0^15^B33704414
"RTN","SDM",1,0)
SDM ;SF/GFT,ALB/BOK - MAKE AN APPOINTMENT ; 4/21/05 10:22pm
"RTN","SDM",2,0)
 ;;5.3;Scheduling;**15,32,38,41,44,79,94,167,168,218,223,250,254,296,380,478,441**;AUG 13, 1993;Build 14
"RTN","SDM",3,0)
 ;                                           If defined...
"RTN","SDM",4,0)
 ; appt mgt vars:  SDFN := DFN of patient....will not be asked
"RTN","SDM",5,0)
 ;                SDCLN := ifn of clinic.....will not be asked    
"RTN","SDM",6,0)
 ;              SDAMERR := returned if error occurs
"RTN","SDM",7,0)
 ; 
"RTN","SDM",8,0)
 S:'$D(SDMM) SDMM=0
"RTN","SDM",9,0)
EN1 L  W !! D I^SDUTL I '$D(SDCLN) S DIC="^SC(",DIC(0)="AEMZQ",DIC("A")="Select CLINIC: ",DIC("S")="I $P(^(0),U,3)=""C"",'$G(^(""OOS""))" D ^DIC K DIC G:Y<0!'$D(^("SL")) END
"RTN","SDM",10,0)
 N SDRES S:$D(SDCLN) Y=+SDCLN S SDRES=$$CLNCK^SDUTL2(+Y,1)
"RTN","SDM",11,0)
 I 'SDRES W !,?5,"Clinic MUST be corrected before continuing." G END:$D(SDCLN),SDM
"RTN","SDM",12,0)
 K SDAPTYP,SDIN,SDRE,SDXXX S:$D(SDCLN) Y=+SDCLN
"RTN","SDM",13,0)
 S TMPYCLNC=Y,STPCOD=$P($G(^SC(+TMPYCLNC,0)),U,7) ;SD/478
"RTN","SDM",14,0)
 I $D(^SC(+Y,"I")) S SDIN=+^("I"),SDRE=+$P(^("I"),U,2)
"RTN","SDM",15,0)
 K SDINA I $D(SDIN),SDIN S SDINA=SDIN K SDIN
"RTN","SDM",16,0)
 I $D(SD),$D(SC),+Y'=+SC K SD
"RTN","SDM",17,0)
 S SL=$G(^SC(+Y,"SL")),X=$P(SL,U,3),STARTDAY=$S($L(X):X,1:8),SC=Y,SB=STARTDAY-1/100,X=$P(SL,U,6),HSI=$S(X=1:X,X:X,1:4),SI=$S(X="":4,X<3:4,X:X,1:4),STR="#@!$* XXWVUTSRQPONMLKJIHGFEDCBA0123456789jklmnopqrstuvwxyz",SDDIF=$S(HSI<3:8/HSI,1:2) K Y
"RTN","SDM",18,0)
 I $D(^SC(+SC,"SDPROT")),$P(^("SDPROT"),U)="Y",'$D(^SC(+SC,"SDPRIV",DUZ)) W !,*7,"Access to ",$$CNAM(+SC)," is prohibited!",!,"Only users with a special code may access this clinic.",*7 S:$D(SDCLN) SDAMERR="" G END:$D(SDCLN),SDM
"RTN","SDM",19,0)
 D CS^SDM1A S SDW="",WY="Y"
"RTN","SDM",20,0)
 I '$D(ORACTION),'$D(SDFN) S (DIC,DIE)="^DPT(",DIC(0)="AQZME" D ^DIC S DFN=+Y G:Y<0 END:$D(SDCLN),^SDM0:X[U,SDM
"RTN","SDM",21,0)
 S:$D(SDFN) DFN=SDFN
"RTN","SDM",22,0)
 I $D(^DPT(DFN,.35)),$P(^(.35),U)]"" W !?10,*7,"PATIENT HAS DIED." S:$D(SDFN) SDAMERR="" G END:$D(SDFN),SDM
"RTN","SDM",23,0)
 D ^SDM4 I $S('$D(COLLAT):1,COLLAT=7:1,1:0) G:$D(SDCLN) END G SDM
"RTN","SDM",24,0)
 ;-- get sub-category for appointment type
"RTN","SDM",25,0)
 S SDXSCAT=$$SUB^DGSAUTL(SDAPTYP,2,"")
"RTN","SDM",26,0)
 K SDXXX D EN G END:$D(SDCLN),SDM
"RTN","SDM",27,0)
EN K SDMLT1 W:$P(VAEL(9),U,2)]"" !!,?15,"MEANS TEST STATUS: ",$P(VAEL(9),U,2),!
"RTN","SDM",28,0)
 ; *** sck, mt blocking removed
"RTN","SDM",29,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T,$$MT^EASMTCHK(DFN,+$G(SDAPTYP),"M") S SDAMERR="" Q
"RTN","SDM",30,0)
 S Y=DFN,Y(0)=^DPT(DFN,0) I VADM(7)]"" W !?3,*7,VADM(7)
"RTN","SDM",31,0)
 I $D(^DGS(41.1,"B",DFN)) F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) Q:I'>0  I $P(^DGS(41.1,I,0),U,2)'<DT&('$P(^DGS(41.1,I,0),U,13)) W !,"SCHEDULED FOR ADMISSION ON " S Y=$P(^(0),U,2) D DT^SDM0
"RTN","SDM",32,0)
PEND S %="" W:$O(^DPT(DFN,"S",DT))'>DT !,"NO PENDING APPOINTMENTS"
"RTN","SDM",33,0)
 I $O(^DPT(DFN,"S",DT))>DT D  G END:%<0,HELP:'%
"RTN","SDM",34,0)
 .S %=1 W !,"DISPLAY PENDING APPOINTMENTS:"
"RTN","SDM",35,0)
 .D YN^DICN
"RTN","SDM",36,0)
 .I %Y["^" S SDMLT1=1
"RTN","SDM",37,0)
 D:%=1
"RTN","SDM",38,0)
 .N DX,DY,SDXY,SDEND S SDXY="S DX=$X,DY=0"_$S($L($G(^%ZOSF("XY"))):" "_^("XY"),1:"") X SDXY
"RTN","SDM",39,0)
 .S CN=1
"RTN","SDM",40,0)
 .F Y=DT:0 S Y=$O(^DPT(DFN,"S",Y)) Q:Y'>0  I "I"[$P(^(Y,0),U,2) X:(($Y+4)>IOSL) "D OUT^SDUTL X SDXY" Q:$G(SDEND)  D CHKSO W:$X>9 ! W CN,".",?4 D DT^SDM0 W ?23 S DA=+SSC W SDLN,$S($D(^SC(DA,0)):$P(^(0),U),1:"DELETED CLINIC "),COV,"  ",SDAT16 D
"RTN","SDM",41,0)
 ..S CNIEN=0 F  S CNIEN=$O(^SC(+SSC,"S",HY,1,CNIEN)) Q:'+CNIEN  S CNPAT=$P($G(^SC(+SSC,"S",HY,1,CNIEN,0)),U) I CNPAT=DFN W:+$G(^SC(+SSC,"S",HY,1,CNIEN,"CONS")) " Consult Appt." S CN=CN+1 Q  ;SD/478
"RTN","SDM",42,0)
 ;Prompt for ETHNICITY if no value on file
"RTN","SDM",43,0)
 I '$O(^DPT(DFN,.06,0)) D
"RTN","SDM",44,0)
 .S DA=DFN,DR="6ETHNICITY",DIE="^DPT("
"RTN","SDM",45,0)
 .S DR(2,2.06)=".01ETHNICITY"
"RTN","SDM",46,0)
 .D ^DIE K DR
"RTN","SDM",47,0)
 ;Prompt for RACE if no value on file
"RTN","SDM",48,0)
 I '$O(^DPT(DFN,.02,0)) D
"RTN","SDM",49,0)
 .S DA=DFN,DR="2RACE",DIE="^DPT("
"RTN","SDM",50,0)
 .S DR(2,2.02)=".01RACE"
"RTN","SDM",51,0)
 .D ^DIE K DR
"RTN","SDM",52,0)
 I $S('$D(^DPT(DFN,.11)):1,$P(^(.11),U)="":1,1:0) N FLG S FLG(1)=1 D EN^DGREGAED(DFN,.FLG)
"RTN","SDM",53,0)
 Q:$D(SDXXX)
"RTN","SDM",54,0)
E S Y=$P(SL,U,5)
"RTN","SDM",55,0)
 S SDW="" I $D(^DPT(DFN,.1)) S SDW=^(.1) W !,"NOTE - PATIENT IS NOW IN WARD "_SDW
"RTN","SDM",56,0)
 Q:$D(SDXXX)
"RTN","SDM",57,0)
EN2 F X=0:0 S X=$O(^DPT(DFN,"DE",X)) Q:'$D(^(+X,0))  I ^(0)-SC=0!'(^(0)-Y) F XX=0:0 S XX=$O(^DPT(DFN,"DE",X,1,XX)) Q:XX<1  S SDDIS=$P(^(XX,0),U,3) I 'SDDIS D:'$D(SDMULT) A^SDCNSLT G ^SDM0
"RTN","SDM",58,0)
 I '$D(^SC(+Y,0)) S Y=+SC
"RTN","SDM",59,0)
 S Y=$P(^SC(Y,0),U)
"RTN","SDM",60,0)
 ; SCRESTA = Array of pt's teams causing restricted consults
"RTN","SDM",61,0)
 N SCRESTA
"RTN","SDM",62,0)
 S SCREST=$$RESTPT^SCAPMCU4(DFN,DT,"SCRESTA")
"RTN","SDM",63,0)
 IF SCREST D
"RTN","SDM",64,0)
 .N SCTM
"RTN","SDM",65,0)
 . S SCCLNM=Y
"RTN","SDM",66,0)
 . W !,?5,"Patient has restricted consults due to team assignment(s):"
"RTN","SDM",67,0)
 .S SCTM=0
"RTN","SDM",68,0)
 .F  S SCTM=$O(SCRESTA(SCTM)) Q:'SCTM  W !,?10,SCRESTA(SCTM)
"RTN","SDM",69,0)
 IF SCREST&'$G(SCOKCONS) D  Q
"RTN","SDM",70,0)
 .W !,?5,"This patient may only be given appointments and enrolled in clinics via"
"RTN","SDM",71,0)
 .W !,?15,"Make Consult Appointment Option, and"
"RTN","SDM",72,0)
 .W !,?15,"Edit Clinic Enrollment Data option"
"RTN","SDM",73,0)
 D:$G(SCREST) MAIL^SCMCCON(DFN,.SCCLNM,2,DT,"SCRESTA")
"RTN","SDM",74,0)
 K DR,SCREST,SCCLNM
"RTN","SDM",75,0)
 D:'$D(SDMULT) ^SDCNSLT ;SD/478
"RTN","SDM",76,0)
 G ^SDM0
"RTN","SDM",77,0)
 ;
"RTN","SDM",78,0)
CHKSO S COV=$S($P(^DPT(DFN,"S",Y,0),U,11)=1:" (COLLATERAL)",1:""),HY=Y,SSC=^(0),SDAT16=$S($D(^SD(409.1,+$P(SSC,U,16),0)):$P(^(0),U),1:"")
"RTN","SDM",79,0)
 F SDJ=3,4,5 I $P(^DPT(DFN,"S",HY,0),U,SDJ)]"" S Y=$P(^(0),U,SDJ) W:$X>9 ! W ?10,"*" D DT^SDM0 W ?32,$S(SDJ=3:"LAB",SDJ=4:"XRAY",1:"EKG")
"RTN","SDM",80,0)
 S SDLN="" F J=0:0 S J=$O(^SC(+SSC,"S",HY,1,J)) Q:'J  I $D(^(J,0)),+^(0)=DFN S SDLN="("_$P(^(0),U,2)_" MIN) " Q
"RTN","SDM",81,0)
 S Y=HY Q
"RTN","SDM",82,0)
 ;
"RTN","SDM",83,0)
END D KVAR^VADPT K SDAPTYP,SDSC,%,%DT,ASKC,COV,DA,DIC,DIE,DP,DR,HEY,HSI,HY,J,SB,SC,SDDIF,SDJ,SDLN,SD17,SDMAX,SDU,SDYC,SI,SL,SSC,STARTDAY,STR
"RTN","SDM",84,0)
 K WY,X,XX,Y,S,SD,SDAP16,SDEDT,SDTY,SM,SS,ST,ARG,CCX,CCXN,HX,I,PXR,SDINA,SDW,COLLAT,SDDIS I $D(SDMM) K:'SDMM SDMM
"RTN","SDM",85,0)
 K A,CC,CLNIEN,CN,CNIEN,CNPAT,CNSLTLNK,CNSULT,CNT,CONS,CPRSTAT,CW,DSH,DTENTR,DTIN,DTLMT,DTR,ND,P8,PROC,PT,PTIEN,PTNM,RTMP,NOSHOW,SCPTTM,SD1,SDAMSCN,SDATE,SDDOT,SDII,SDINC,SDINCM,SDLEN,SDNS,SDSI,SDST,SDSTR,SDSTRTDT
"RTN","SDM",86,0)
 K SDXSCAT,SENDER,SERVICE,SRV,STATUS,STPCOD,TMP,TMPYCLNC,TYPE
"RTN","SDM",87,0)
 I '$D(SDMLT) K SDMLT1
"RTN","SDM",88,0)
 Q
"RTN","SDM",89,0)
 ;
"RTN","SDM",90,0)
OERR S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP G SDM
"RTN","SDM",91,0)
 ;
"RTN","SDM",92,0)
HELP W !,"YES - TO DISPLAY FUTURE APPOINTMENTS",!,"NO - FUTURE APPOINTMENTS NOT DISPLAYED" G PEND
"RTN","SDM",93,0)
 ;
"RTN","SDM",94,0)
CNAM(SDCL) ;Return clinic name
"RTN","SDM",95,0)
 ;Input: SDCL=clinic ien
"RTN","SDM",96,0)
 N SDX
"RTN","SDM",97,0)
 S SDX=$P($G(^SC(+SDCL,0)),U)
"RTN","SDM",98,0)
 Q $S($L(SDX):SDX,1:"this clinic")
"RTN","SDPCE")
0^4^B41674574
"RTN","SDPCE",1,0)
SDPCE ;MJK/ALB - Process PCE Event Data ;31 MAY 2005
"RTN","SDPCE",2,0)
 ;;5.3;Scheduling;**27,91,132,150,244,325,441**;Aug 13, 1993;Build 14
"RTN","SDPCE",3,0)
 ;
"RTN","SDPCE",4,0)
 ; **** See SDPCE0 for variable definitions ****
"RTN","SDPCE",5,0)
 ;
"RTN","SDPCE",6,0)
EN ; -- main entry pt for PCE event processing
"RTN","SDPCE",7,0)
 ;
"RTN","SDPCE",8,0)
 ; -- start rt monitor
"RTN","SDPCE",9,0)
 D:$D(XRTL) T0^%ZOSV
"RTN","SDPCE",10,0)
 ;
"RTN","SDPCE",11,0)
 N SDVSIT,SDVSIT0,SDEVENT,SDERR,SDCLST,SDCS,SDPCNT,SDVDT,SDELAP
"RTN","SDPCE",12,0)
 S SDVSIT0=0,SDEVENT="SDEVENT"
"RTN","SDPCE",13,0)
 ; -- process each visit (initially will only be 1)
"RTN","SDPCE",14,0)
 F  S SDVSIT0=$O(^TMP("PXKCO",$J,SDVSIT0)) Q:'SDVSIT0  D
"RTN","SDPCE",15,0)
 . I $$HISTORIC^VSIT(SDVSIT0) Q
"RTN","SDPCE",16,0)
 . S SDVSIT("AFTER")=$G(^TMP("PXKCO",$J,SDVSIT0,"VST",SDVSIT0,0,"AFTER")),SDVSIT("BEFORE")=$G(^("BEFORE"))
"RTN","SDPCE",17,0)
 .;
"RTN","SDPCE",18,0)
 .; -- new or old visit 
"RTN","SDPCE",19,0)
 . IF SDVSIT("AFTER")]"",SDVSIT("BEFORE")]""!(SDVSIT("BEFORE")="") D ADD(.SDVSIT0,.SDEVENT,.SDERR) Q
"RTN","SDPCE",20,0)
 .;
"RTN","SDPCE",21,0)
 .; -- deleted visit
"RTN","SDPCE",22,0)
 . IF SDVSIT("AFTER")="",SDVSIT("BEFORE")]"" D DEL(.SDVSIT0,.SDEVENT,.SDERR) Q
"RTN","SDPCE",23,0)
 ;
"RTN","SDPCE",24,0)
 ; -- stop rt monitor
"RTN","SDPCE",25,0)
 IF $D(XRT0) S XRTN=$T(+0) D T1^%ZOSV
"RTN","SDPCE",26,0)
 ;
"RTN","SDPCE",27,0)
 Q
"RTN","SDPCE",28,0)
 ;
"RTN","SDPCE",29,0)
ADD(SDVSIT0,SDEVENT,SDERR) ; -- add/update encounter data
"RTN","SDPCE",30,0)
 N DFN,SDT,SDCL,SDRESULT,SDTYPE,SDOE,SDDIS,SDPVSIT,SDELAP
"RTN","SDPCE",31,0)
 ; -- get patient/encounter data
"RTN","SDPCE",32,0)
 D PAT(SDVSIT("AFTER"),.DFN,.SDT,.SDCL)
"RTN","SDPCE",33,0)
 S SDVSIT=$S($P(SDVSIT("AFTER"),U,12):$P(SDVSIT("AFTER"),U,12),1:SDVSIT0)
"RTN","SDPCE",34,0)
 ; --  get encounter data
"RTN","SDPCE",35,0)
 S SDOE=$O(^SCE("AVSIT",+SDVSIT,0)),SDDIS=$P($G(^SCE(+SDOE,0)),U,8)
"RTN","SDPCE",36,0)
 I 'SDDIS,$G(SDOEP) S SDDIS=$P($G(^SCE(+SDOEP,0)),U,8)
"RTN","SDPCE",37,0)
 ;
"RTN","SDPCE",38,0)
 ; -- get elig for visit
"RTN","SDPCE",39,0)
 S @SDEVENT@("ELIGIBILITY")=$S($P(SDVSIT("AFTER"),U,21):$P(SDVSIT("AFTER"),U,21),1:"")
"RTN","SDPCE",40,0)
 ;
"RTN","SDPCE",41,0)
 ; -- get appt type
"RTN","SDPCE",42,0)
 S SDELAP=$G(^TMP("PXKCO",$J,SDVSIT0,"VST",SDVSIT0,"ELAP","AFTER"))
"RTN","SDPCE",43,0)
 S @SDEVENT@("APPT TYPE")=$S($P(SDELAP,U,3):$P(SDELAP,U,3),1:"")
"RTN","SDPCE",44,0)
 ;
"RTN","SDPCE",45,0)
 ; -- get co d/t
"RTN","SDPCE",46,0)
 S @SDEVENT@("DATE/TIME")=$S($P(SDVSIT("AFTER"),U,18):$P(SDVSIT("AFTER"),U,18),1:"")
"RTN","SDPCE",47,0)
 ;
"RTN","SDPCE",48,0)
 ; -- determine the type of event
"RTN","SDPCE",49,0)
 IF SDCL,SDCL=+$G(^DPT(DFN,"S",SDT,0)) D
"RTN","SDPCE",50,0)
 . S @SDEVENT@("EVENT")="CHECK-OUT"
"RTN","SDPCE",51,0)
 ;
"RTN","SDPCE",52,0)
 ELSE  I SDDIS,SDDIS=3 D
"RTN","SDPCE",53,0)
 . S @SDEVENT@("EVENT")="DISPOSITION"
"RTN","SDPCE",54,0)
 ;
"RTN","SDPCE",55,0)
 ELSE  D  Q:$$DELAE()
"RTN","SDPCE",56,0)
 . S @SDEVENT@("EVENT")="ADD/EDIT CHECK-OUT"
"RTN","SDPCE",57,0)
 . I SDVSIT S SDPVSIT=SDVSIT D ENCEVENT^PXKENC(SDPVSIT)
"RTN","SDPCE",58,0)
 ;
"RTN","SDPCE",59,0)
 ; -- get user
"RTN","SDPCE",60,0)
 S @SDEVENT@("USER")=$S($D(^VA(200,+$G(DUZ),0)):+DUZ,1:.5)
"RTN","SDPCE",61,0)
 D CLASS(.SDVSIT,.SDEVENT)
"RTN","SDPCE",62,0)
 S @SDEVENT@("VISIT CHANGE FLAGS")=$$CHANGE(.SDVSIT0)
"RTN","SDPCE",63,0)
 I $G(SDPVSIT),'$D(@SDEVENT@("CLASSIFICATION")) D CLASSAE(SDPVSIT,.SDEVENT)
"RTN","SDPCE",64,0)
 ; -- call api
"RTN","SDPCE",65,0)
 D API(DFN,SDT,SDCL,.SDEVENT,.SDERR,SDVSIT,"ADDITION")
"RTN","SDPCE",66,0)
 K ^TMP("PXKENC",$J)
"RTN","SDPCE",67,0)
 Q
"RTN","SDPCE",68,0)
 ;
"RTN","SDPCE",69,0)
DEL(SDVSIT0,SDEVENT,SDERR) ; -- delete co info when visit delete
"RTN","SDPCE",70,0)
 N DFN,SDT,SDCL
"RTN","SDPCE",71,0)
 S SDVSIT=$S($P(SDVSIT("AFTER"),U,12):$P(SDVSIT("AFTER"),U,12),1:SDVSIT0)
"RTN","SDPCE",72,0)
 D PAT(SDVSIT("BEFORE"),.DFN,.SDT,.SDCL)
"RTN","SDPCE",73,0)
 S @SDEVENT@("USER")=$S($P(SDVSIT("BEFORE"),U,23):$P(SDVSIT("BEFORE"),U,23),1:.5)
"RTN","SDPCE",74,0)
 S @SDEVENT@("EVENT")="CHECK-OUT DELETE"
"RTN","SDPCE",75,0)
 D API(DFN,SDT,SDCL,.SDEVENT,.SDERR,SDVSIT,"DELETION")
"RTN","SDPCE",76,0)
 Q
"RTN","SDPCE",77,0)
 ;
"RTN","SDPCE",78,0)
DELAE() ; -- delete standalone encounter if no cpt, dx and providers
"RTN","SDPCE",79,0)
 N SDDEL
"RTN","SDPCE",80,0)
 S SDDEL=0
"RTN","SDPCE",81,0)
 IF '$D(^TMP("PXKENC",$J,SDVSIT,"CPT")),'$D(^("POV")),'$D(^("PRV")) D
"RTN","SDPCE",82,0)
  . S @SDEVENT@("USER")=$S($P(SDVSIT("BEFORE"),U,23):$P(SDVSIT("BEFORE"),U,23),1:.5)
"RTN","SDPCE",83,0)
  . S @SDEVENT@("EVENT")="CHECK-OUT DELETE"
"RTN","SDPCE",84,0)
  . D API(DFN,SDT,SDCL,.SDEVENT,.SDERR,SDVSIT,"DELETION")
"RTN","SDPCE",85,0)
  . K ^TMP("PXKENC",$J)
"RTN","SDPCE",86,0)
  . S SDDEL=1
"RTN","SDPCE",87,0)
 Q SDDEL
"RTN","SDPCE",88,0)
 ;
"RTN","SDPCE",89,0)
API(DFN,SDT,SDCL,SDEVENT,SDERR,SDVSIT,SDACT) ;
"RTN","SDPCE",90,0)
 N SDRET,SDSOR
"RTN","SDPCE",91,0)
 S SDRET=$$EN^SDAPI(DFN,SDT,SDCL,.SDEVENT,.SDERR,SDVSIT)
"RTN","SDPCE",92,0)
 ;
"RTN","SDPCE",93,0)
 ; -- is it ok to send bulletin if needed
"RTN","SDPCE",94,0)
 S SDSOR=+$O(^TMP("PXKCO",$J,SDVSIT,"SOR",0))
"RTN","SDPCE",95,0)
 IF SDSOR,'$P($G(^TMP("PXKCO",$J,SDVSIT,"SOR",SDSOR,0,"AFTER")),U,9) D
"RTN","SDPCE",96,0)
 . Q
"RTN","SDPCE",97,0)
 ELSE  D
"RTN","SDPCE",98,0)
 . D BULL^SDPCE2(DFN,SDT,SDCL,.SDEVENT,.SDERR,SDVSIT,SDACT)
"RTN","SDPCE",99,0)
 Q
"RTN","SDPCE",100,0)
 ;
"RTN","SDPCE",101,0)
PAT(SDVSIT0,DFN,SDT,SDCL) ; -- return patient/encounter data for visit
"RTN","SDPCE",102,0)
 S DFN=+$P(SDVSIT0,U,5),SDT=+SDVSIT0,SDCL=+$P(SDVSIT0,U,22)
"RTN","SDPCE",103,0)
 Q
"RTN","SDPCE",104,0)
 ;
"RTN","SDPCE",105,0)
CLASS(SDVSIT,SDEVENT) ; -- set-up classification data from visit data
"RTN","SDPCE",106,0)
 N SD800A,SD800B,SDI,CLASS,SDA,SDB
"RTN","SDPCE",107,0)
 S SD800A=$G(^TMP("PXKCO",$J,SDVSIT,"VST",SDVSIT,800,"AFTER")),SD800B=$G(^("BEFORE"))
"RTN","SDPCE",108,0)
 ; -- process each piece
"RTN","SDPCE",109,0)
 F SDI=1:1:8 D
"RTN","SDPCE",110,0)
 . S CLASS=$P("SC^AO^IR^EC^MST^HNC^CV^SHAD",U,SDI),SDA=$P(SD800A,U,SDI),SDB=$P(SD800B,U,SDI)
"RTN","SDPCE",111,0)
 .; -- changed or same class data
"RTN","SDPCE",112,0)
 . IF SDA]"",SDB]"" S @SDEVENT@("CLASSIFICATION",$S(SDA'=SDB:"CHANGE",1:"ADD"),CLASS)=$$CLASSVAL(SDA) Q
"RTN","SDPCE",113,0)
 .; -- new class data
"RTN","SDPCE",114,0)
 . IF SDA]"",SDB="" S @SDEVENT@("CLASSIFICATION","ADD",CLASS)=$$CLASSVAL(SDA) Q
"RTN","SDPCE",115,0)
 .; -- deleted class data
"RTN","SDPCE",116,0)
 . IF SDA="",SDB]"" S @SDEVENT@("CLASSIFICATION","DELETE",CLASS)="" Q
"RTN","SDPCE",117,0)
 Q
"RTN","SDPCE",118,0)
CLASSVAL(Y) ; -- yes/no processing
"RTN","SDPCE",119,0)
 Q $S(Y=1:"Y",Y=0:"N",1:"??")
"RTN","SDPCE",120,0)
 ;
"RTN","SDPCE",121,0)
CLASSAE(SDVSIT,SDEVENT) ; -- set-up classification data from visit data
"RTN","SDPCE",122,0)
 N SD800A,SD800B,SDI,CLASS,SDA,SDB
"RTN","SDPCE",123,0)
 S SD800A=$G(^TMP("PXKENC",$J,SDVSIT,"VST",SDVSIT,800,"AFTER")),SD800B=$G(^("BEFORE"))
"RTN","SDPCE",124,0)
 ; -- process each piece
"RTN","SDPCE",125,0)
 F SDI=1:1:8 D
"RTN","SDPCE",126,0)
 . S CLASS=$P("SC^AO^IR^EC^MST^HNC^CV^SHAD",U,SDI),SDA=$P(SD800A,U,SDI),SDB=$P(SD800B,U,SDI)
"RTN","SDPCE",127,0)
 .; -- changed or same class data
"RTN","SDPCE",128,0)
 . IF SDA]"",SDB]"" S @SDEVENT@("CLASSIFICATION",$S(SDA'=SDB:"CHANGE",1:"ADD"),CLASS)=$$CLASSVAL(SDA) Q
"RTN","SDPCE",129,0)
 .; -- new class data
"RTN","SDPCE",130,0)
 . IF SDA]"",SDB="" S @SDEVENT@("CLASSIFICATION","ADD",CLASS)=$$CLASSVAL(SDA) Q
"RTN","SDPCE",131,0)
 .; -- deleted class data
"RTN","SDPCE",132,0)
 . IF SDA="",SDB]"" S @SDEVENT@("CLASSIFICATION","DELETE",CLASS)="" Q
"RTN","SDPCE",133,0)
 Q
"RTN","SDPCE",134,0)
 ;
"RTN","SDPCE",135,0)
ELAP(DFN,SC) ; -- This function will return Elig and Appt Type data
"RTN","SDPCE",136,0)
 ;  INPUT: DFN - Patient, SC - Clinic IEN
"RTN","SDPCE",137,0)
 ; OUTPUT: Elig ptr^ Elig text^ Appt Ptr^ Appt Text
"RTN","SDPCE",138,0)
 ;
"RTN","SDPCE",139,0)
 N VAEL,VADM,X,Y,SDAPTYP,SDATD,SDEMP,SDDECOD,SDEC,SDAMBAE
"RTN","SDPCE",140,0)
 S SDAMBAE=1
"RTN","SDPCE",141,0)
 ;-- get appt type
"RTN","SDPCE",142,0)
 D TYPE^SDM4
"RTN","SDPCE",143,0)
 S SDEMP=""
"RTN","SDPCE",144,0)
 ;-- get elig if more than 1
"RTN","SDPCE",145,0)
 I $O(VAEL(1,0))>0 S SDEMP="" D ELIG^SDM4:"369"[SDAPTYP S SDEMP=$S(SDDECOD:SDDECOD,1:SDEMP)
"RTN","SDPCE",146,0)
 I 'SDEMP S SDEMP=VAEL(1)
"RTN","SDPCE",147,0)
 ;
"RTN","SDPCE",148,0)
 Q +SDEMP_U_$P($G(^DIC(8,+SDEMP,0)),U)_U_+SDAPTYP_U_$P($G(^SD(409.1,+SDAPTYP,0)),U)
"RTN","SDPCE",149,0)
 ;
"RTN","SDPCE",150,0)
NEW(DATE) ;-- This function will return 1 if SD is turned on for
"RTN","SDPCE",151,0)
 ;   Visit Tracking and optionally check if the date is past
"RTN","SDPCE",152,0)
 ;   the cut over date for the new PCE interface.
"RTN","SDPCE",153,0)
 ; INPUT : DATE (Optional) Date to check for cut over.
"RTN","SDPCE",154,0)
 ; OUTPUT: 1 Yes, 0 No
"RTN","SDPCE",155,0)
 N SDRES,SDX,SDY
"RTN","SDPCE",156,0)
 I '$G(DATE) S DATE=DT
"RTN","SDPCE",157,0)
 ;-- is Scheduling on ?
"RTN","SDPCE",158,0)
 S SDRES=0,SDY=$$PKGON^VSIT("SD")
"RTN","SDPCE",159,0)
 ;-- if date is it pass cut over?
"RTN","SDPCE",160,0)
 S SDX=1 I $G(DATE) S SDX=$$SWITCHCK^PXAPI(DATE)
"RTN","SDPCE",161,0)
 ;-- And together
"RTN","SDPCE",162,0)
 I SDX,SDY S SDRES=1
"RTN","SDPCE",163,0)
 Q SDRES
"RTN","SDPCE",164,0)
 ;
"RTN","SDPCE",165,0)
STATUS(SDVSIT) ; Return status of an encounter
"RTN","SDPCE",166,0)
 ;  Input:  SDOE = Visit File IEN
"RTN","SDPCE",167,0)
 ; Output:  Status of the encounter Internal IEN^External Value
"RTN","SDPCE",168,0)
 ;
"RTN","SDPCE",169,0)
 N SDINT,SDEXT,SDOE
"RTN","SDPCE",170,0)
 S SDOE=$O(^SCE("AVSIT",+SDVSIT,0))
"RTN","SDPCE",171,0)
 S SDINT=$P($G(^SCE(+SDOE,0)),U,12)
"RTN","SDPCE",172,0)
 S SDEXT=$P($G(^SD(409.63,+SDINT,0)),U)
"RTN","SDPCE",173,0)
STATQ Q SDINT_"^"_SDEXT
"RTN","SDPCE",174,0)
 ;
"RTN","SDPCE",175,0)
CHANGE(SDVST) ; -- set flags for overall visit change
"RTN","SDPCE",176,0)
 N SDI,SDFLAGS
"RTN","SDPCE",177,0)
 ;
"RTN","SDPCE",178,0)
 ; -- initalize chnage flags
"RTN","SDPCE",179,0)
 ; -- cpt changed ^ provider data changed ^ dx changed
"RTN","SDPCE",180,0)
 S SDFLAGS="0^0^0"
"RTN","SDPCE",181,0)
 ;
"RTN","SDPCE",182,0)
 ; -- set cpt change flag
"RTN","SDPCE",183,0)
 S SDI=0
"RTN","SDPCE",184,0)
 F  S SDI=$O(^TMP("PXKCO",$J,SDVST,"CPT",SDI)) Q:'SDI  IF $G(^TMP("PXKCO",$J,SDVST,"CPT",SDI,0,"BEFORE"))'=$G(^("AFTER")) S $P(SDFLAGS,U,1)=1
"RTN","SDPCE",185,0)
 ;
"RTN","SDPCE",186,0)
 ; -- set provider change flag
"RTN","SDPCE",187,0)
 S SDI=0
"RTN","SDPCE",188,0)
 F  S SDI=$O(^TMP("PXKCO",$J,SDVST,"PRV",SDI)) Q:'SDI  IF $G(^TMP("PXKCO",$J,SDVST,"PRV",SDI,0,"BEFORE"))'=$G(^("AFTER")) S $P(SDFLAGS,U,2)=1
"RTN","SDPCE",189,0)
 ;
"RTN","SDPCE",190,0)
 ; -- set dx change flag
"RTN","SDPCE",191,0)
 S SDI=0
"RTN","SDPCE",192,0)
 F  S SDI=$O(^TMP("PXKCO",$J,SDVST,"POV",SDI)) Q:'SDI  IF $G(^TMP("PXKCO",$J,SDVST,"POV",SDI,0,"BEFORE"))'=$G(^("AFTER")) S $P(SDFLAGS,U,3)=1
"RTN","SDPCE",193,0)
 ;
"RTN","SDPCE",194,0)
 Q SDFLAGS
"RTN","SDPCE",195,0)
 ;
"RTN","SDPPAT1")
0^18^B22754269
"RTN","SDPPAT1",1,0)
SDPPAT1 ;ALB/CAW-Patient Profile (Generic Patient Info) Screen 1;5/4/92
"RTN","SDPPAT1",2,0)
 ;;5.3;Scheduling;**6,140,441**;Aug 13, 1993;Build 14
"RTN","SDPPAT1",3,0)
 ;
"RTN","SDPPAT1",4,0)
 ;
"RTN","SDPPAT1",5,0)
PDATA ; Patient Data
"RTN","SDPPAT1",6,0)
 N SD,SDELIG,SDDIS,SDCNT,CNT,SDCT,SDCOPS
"RTN","SDPPAT1",7,0)
 F SD=0,.3,.11,.121,.122,.13,.32,.321,.35,.36,.52,"TYPE","VET" S SD(SD)=$G(^DPT(DFN,SD))
"RTN","SDPPAT1",8,0)
 I $D(^DPT(DFN,.372,0)) S SDDIS=0 F  S SDDIS=$O(^DPT(DFN,.372,SDDIS)) Q:'SDDIS  D
"RTN","SDPPAT1",9,0)
 .S SDDIS(SDDIS)=$G(^DPT(DFN,.372,SDDIS,0))
"RTN","SDPPAT1",10,0)
 .S SDDIS(SDDIS)=$P($G(^DIC(31,+$P(SDDIS(SDDIS),U),0)),U)_" ("_$S($P(SDDIS(SDDIS),U,3):"SC-",1:"NSC-")_$P(SDDIS(SDDIS),U,2)_"%)"
"RTN","SDPPAT1",11,0)
 .S SDCNT(SDDIS)=$L($P(SDDIS(SDDIS),U))+2
"RTN","SDPPAT1",12,0)
 S SDELIG=0 F  S SDELIG=$O(^DPT(DFN,"E",SDELIG)) Q:'SDELIG  S:SDELIG'=+SD(.36) SDELIG(SDELIG)=$G(^DPT(DFN,"E",SDELIG,0))
"RTN","SDPPAT1",13,0)
 S SD("MT")=$$LST^DGMTU(DFN) I 'SD("MT") S SDCOPS=$$LST^DGMTU(DFN,"",2)
"RTN","SDPPAT1",14,0)
 S SDFSTCOL=22,SDSECCOL=60
"RTN","SDPPAT1",15,0)
PTDOB ; Date of Birth and Marital Status Info
"RTN","SDPPAT1",16,0)
 ;
"RTN","SDPPAT1",17,0)
 S X="",X=$$SETSTR^VALM1("Date of Birth:",X,7,14)
"RTN","SDPPAT1",18,0)
 S X=$$SETSTR^VALM1($$FTIME^VALM1($P(SD(0),U,3)),X,SDFSTCOL,18)
"RTN","SDPPAT1",19,0)
 S X=$$SETSTR^VALM1("Marital Status:",X,44,15)
"RTN","SDPPAT1",20,0)
 S X=$$SETSTR^VALM1($P($G(^DIC(11,+$P(SD(0),U,5),0)),U),X,SDSECCOL,20)
"RTN","SDPPAT1",21,0)
 D SET(X)
"RTN","SDPPAT1",22,0)
PTSEX ; Sex and Religions Pref. Info
"RTN","SDPPAT1",23,0)
 ;
"RTN","SDPPAT1",24,0)
 S X="",X=$$SETSTR^VALM1("Sex:",X,17,4)
"RTN","SDPPAT1",25,0)
 S X=$$SETSTR^VALM1($S($P(SD(0),U,2)="F":"FEMALE",$P(SD(0),U,2)="M":"MALE",1:"UNKNOWN"),X,SDFSTCOL,18)
"RTN","SDPPAT1",26,0)
 S X=$$SETSTR^VALM1("Religious Pref.:",X,43,16)
"RTN","SDPPAT1",27,0)
 S X=$$SETSTR^VALM1($P($G(^DIC(13,+$P(SD(0),U,8),0)),U),X,SDSECCOL,20)
"RTN","SDPPAT1",28,0)
 D SET(X)
"RTN","SDPPAT1",29,0)
PTRACE ; SSN and Occupation Info
"RTN","SDPPAT1",30,0)
 ;
"RTN","SDPPAT1",31,0)
 S X="",X=$$SETSTR^VALM1("Patient ID:",X,10,11)
"RTN","SDPPAT1",32,0)
 S X=$$SETSTR^VALM1(VA("PID"),X,SDFSTCOL,20)
"RTN","SDPPAT1",33,0)
 S X=$$SETSTR^VALM1("Occupation:",X,48,11)
"RTN","SDPPAT1",34,0)
 S X=$$SETSTR^VALM1($P(SD(0),U,7),X,SDSECCOL,20)
"RTN","SDPPAT1",35,0)
 D SET(X)
"RTN","SDPPAT1",36,0)
PWHO ; Who entered and Place of Birth
"RTN","SDPPAT1",37,0)
 ;
"RTN","SDPPAT1",38,0)
 S X="",X=$$SETSTR^VALM1("Who entered:",X,9,12)
"RTN","SDPPAT1",39,0)
 S X=$$SETSTR^VALM1($P($G(^VA(200,+$P(SD(0),U,15),0)),U),X,SDFSTCOL,20)
"RTN","SDPPAT1",40,0)
 S X=$$SETSTR^VALM1("Place of Birth:",X,44,15)
"RTN","SDPPAT1",41,0)
 S X=$$SETSTR^VALM1(($P(SD(0),U,11)_$S($P(SD(0),U,12):", ",1:"")_$P($G(^DIC(5,+$P(SD(0),U,12),0)),U)),X,SDSECCOL,20)
"RTN","SDPPAT1",42,0)
 D SET(X)
"RTN","SDPPAT1",43,0)
PWHEN ; Date entered
"RTN","SDPPAT1",44,0)
 S X="",X=$$SETSTR^VALM1("Date entered:",X,8,13)
"RTN","SDPPAT1",45,0)
 S X=$$SETSTR^VALM1($S($P(SD(0),U,16):$TR($$FMTE^XLFDT($P(SD(0),U,16),"5DF")," ","0"),1:""),X,SDFSTCOL,20)
"RTN","SDPPAT1",46,0)
 D SET(X)
"RTN","SDPPAT1",47,0)
MT ; Current Means Test - if applicable
"RTN","SDPPAT1",48,0)
 ;
"RTN","SDPPAT1",49,0)
 S X="" I SD("MT")'="" D
"RTN","SDPPAT1",50,0)
 .S X=$$SETSTR^VALM1("Current Means Test:",X,2,19)
"RTN","SDPPAT1",51,0)
 .S X=$$SETSTR^VALM1($P(SD("MT"),U,3),X,SDFSTCOL,30)
"RTN","SDPPAT1",52,0)
 .S X=$$SETSTR^VALM1("Date Means Test:",X,43,16)
"RTN","SDPPAT1",53,0)
 .S X=$$SETSTR^VALM1($TR($$FMTE^XLFDT($P(SD("MT"),U,2),"5DF")," ","0"),X,SDSECCOL,20)
"RTN","SDPPAT1",54,0)
 I $D(SDCOPS),+SDCOPS D
"RTN","SDPPAT1",55,0)
 .S X=$$SETSTR^VALM1("Current Co-Pay Test:",X,1,20)
"RTN","SDPPAT1",56,0)
 .S X=$$SETSTR^VALM1($P(SDCOPS,U,3),X,SDFSTCOL,30)
"RTN","SDPPAT1",57,0)
 .S X=$$SETSTR^VALM1("Date Co-Pay Test:",X,42,17)
"RTN","SDPPAT1",58,0)
 .S X=$$SETSTR^VALM1($TR($$FMTE^XLFDT($P(SDCOPS,U,2),"5DF")," ","0"),X,SDSECCOL,20)
"RTN","SDPPAT1",59,0)
 D SET(X)
"RTN","SDPPAT1",60,0)
REMARK ; Remark
"RTN","SDPPAT1",61,0)
 S X="" I $P(SD(0),U,10)'="" D
"RTN","SDPPAT1",62,0)
 .S X=$$SETSTR^VALM1("Remarks:",X,13,8)
"RTN","SDPPAT1",63,0)
 .S X=$$SETSTR^VALM1($P(SD(0),U,10),X,SDFSTCOL,60)
"RTN","SDPPAT1",64,0)
 D SET(X)
"RTN","SDPPAT1",65,0)
PRIME ; Primary Eligibility
"RTN","SDPPAT1",66,0)
 ;
"RTN","SDPPAT1",67,0)
 S X="",X=$$SETSTR^VALM1("Primary Eligibility:",X,1,20)
"RTN","SDPPAT1",68,0)
 S X=$$SETSTR^VALM1($$FELIG(SD(.36)),X,SDFSTCOL,30)
"RTN","SDPPAT1",69,0)
 D SET(X)
"RTN","SDPPAT1",70,0)
OTHERE ; Other Eligibilities and Date of Death
"RTN","SDPPAT1",71,0)
 ;
"RTN","SDPPAT1",72,0)
 S X="",X=$$SETSTR^VALM1("Other Eligibilities:",X,1,20)
"RTN","SDPPAT1",73,0)
 I $P(SD(.35),U)'="" S X=$$SETSTR^VALM1("Date of Death:",X,45,14),X=$$SETSTR^VALM1($TR($$FMTE^XLFDT($P(SD(.35),U),"5DF")," ","0"),X,SDSECCOL,20)
"RTN","SDPPAT1",74,0)
 D SET(X)
"RTN","SDPPAT1",75,0)
VET ; List of other eligibilities and VETERAN(Y/N)
"RTN","SDPPAT1",76,0)
 S SDELIG=0 F  S SDELIG=$O(SDELIG(SDELIG)) Q:'SDELIG  S SDCT=$G(SDCT)+1,ROU=$S(SDCT=1:"OTH1",SDCT=2:"OTH2",1:"OTHM") D @ROU I SDCT=5 S X="",X=$$SETSTR^VALM1("(this patient has more 'other eligibilities that are not listed)",X,10,65) D SET(X) Q
"RTN","SDPPAT1",77,0)
 I '$D(SDCT) D
"RTN","SDPPAT1",78,0)
 .S X="",X=$$SETSTR^VALM1("VETERAN(Y/N):",X,46,13)
"RTN","SDPPAT1",79,0)
 .S X=$$SETSTR^VALM1($S(SD("VET")="N":"NO",SD("VET")="Y":"YES",1:"UNKNOWN"),X,SDSECCOL,7)
"RTN","SDPPAT1",80,0)
 .D SET(X)
"RTN","SDPPAT1",81,0)
 .S X="",X=$$SETSTR^VALM1("Type:",X,54,5)
"RTN","SDPPAT1",82,0)
 .S X=$$SETSTR^VALM1($P($G(^DG(391,+SD("TYPE"),0)),U),X,SDSECCOL,20)
"RTN","SDPPAT1",83,0)
 .D SET(X)
"RTN","SDPPAT1",84,0)
 F SD=SDLN:1:12 D SET("")
"RTN","SDPPAT1",85,0)
 D ^SDPPAT2
"RTN","SDPPAT1",86,0)
 S VALMCNT=SDLN
"RTN","SDPPAT1",87,0)
 Q
"RTN","SDPPAT1",88,0)
SET(X) ; Set in ^TMP global for display
"RTN","SDPPAT1",89,0)
 ;
"RTN","SDPPAT1",90,0)
 S SDLN=$G(SDLN)+1,^TMP("SDPP",$J,SDLN,0)=X
"RTN","SDPPAT1",91,0)
 Q
"RTN","SDPPAT1",92,0)
OTH1 ; First 'Other' Eligibility' and VETERAN(Y/N)
"RTN","SDPPAT1",93,0)
 S X="",X=$$SETSTR^VALM1($$FELIG(SDELIG(SDELIG)),X,10,30)
"RTN","SDPPAT1",94,0)
 S X=$$SETSTR^VALM1("VETERAN(Y/N):",X,46,13)
"RTN","SDPPAT1",95,0)
 S X=$$SETSTR^VALM1($S(SD("VET")="N":"NO",SD("VET")="Y":"YES",1:"UNKNOWN"),X,SDSECCOL,7)
"RTN","SDPPAT1",96,0)
 D SET(X)
"RTN","SDPPAT1",97,0)
 Q
"RTN","SDPPAT1",98,0)
OTH2 ; Second 'Other Eligbility' and TYPE
"RTN","SDPPAT1",99,0)
 S X="",X=$$SETSTR^VALM1($$FELIG(SDELIG(SDELIG)),X,10,30)
"RTN","SDPPAT1",100,0)
 S X=$$SETSTR^VALM1("Type:",X,53,5)
"RTN","SDPPAT1",101,0)
 S X=$$SETSTR^VALM1($P($G(^DG(391,+SD("TYPE"),0)),U),X,SDSECCOL,20)
"RTN","SDPPAT1",102,0)
 D SET(X)
"RTN","SDPPAT1",103,0)
 Q
"RTN","SDPPAT1",104,0)
OTHM ; Rest of 'Other Eligibilities'
"RTN","SDPPAT1",105,0)
 Q:SDCT>4
"RTN","SDPPAT1",106,0)
 S X="",X=$$SETSTR^VALM1($$FELIG(SDELIG(SDELIG)),X,10,30)
"RTN","SDPPAT1",107,0)
 D SET(X)
"RTN","SDPPAT1",108,0)
 Q
"RTN","SDPPAT1",109,0)
FELIG(ELIG) ;
"RTN","SDPPAT1",110,0)
 ;  input - pointer to eligibility file
"RTN","SDPPAT1",111,0)
 ; output - name of eligibility
"RTN","SDPPAT1",112,0)
 Q $P($G(^DIC(8,+ELIG,0)),U)
"RTN","SDPPAT2")
0^16^B31485216
"RTN","SDPPAT2",1,0)
SDPPAT2 ;ALB/CAW-Patient Profile (Generic Patient Info)-Screen 2;5/4/92
"RTN","SDPPAT2",2,0)
 ;;5.3;Scheduling;**6,113,244,441**;Aug 13, 1993;Build 14
"RTN","SDPPAT2",3,0)
 ;
"RTN","SDPPAT2",4,0)
 ;
"RTN","SDPPAT2",5,0)
ADDR ; Address and Phone Headers
"RTN","SDPPAT2",6,0)
 ;
"RTN","SDPPAT2",7,0)
 S X="",X=$$SETSTR^VALM1("**Address**",X,13,11)
"RTN","SDPPAT2",8,0)
 S X=$$SETSTR^VALM1("**Phone**",X,52,9)
"RTN","SDPPAT2",9,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",10,0)
LINE1 ; Line 1 of address
"RTN","SDPPAT2",11,0)
 ;
"RTN","SDPPAT2",12,0)
 S X="",X=$$SETSTR^VALM1($P(SD(.11),U),X,10,29)
"RTN","SDPPAT2",13,0)
 S X=$$SETSTR^VALM1("Residence:",X,48,10)
"RTN","SDPPAT2",14,0)
 S X=$$SETSTR^VALM1($P(SD(.13),U),X,SDSECCOL,20)
"RTN","SDPPAT2",15,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",16,0)
LINE2 ; Line 2 of address
"RTN","SDPPAT2",17,0)
 ;
"RTN","SDPPAT2",18,0)
 S X="" I $P(SD(.11),U,2)'="" D
"RTN","SDPPAT2",19,0)
 .S X=$$SETSTR^VALM1($P(SD(.11),U,2),X,10,29)
"RTN","SDPPAT2",20,0)
 I $P(SD(.13),U,2)'="" D
"RTN","SDPPAT2",21,0)
 .S X=$$SETSTR^VALM1("Work:",X,53,5)
"RTN","SDPPAT2",22,0)
 .S X=$$SETSTR^VALM1($P(SD(.13),U,2),X,SDSECCOL,20)
"RTN","SDPPAT2",23,0)
 D:X'="" SET^SDPPAT1(X)
"RTN","SDPPAT2",24,0)
LINE3 ; Line 3 of address
"RTN","SDPPAT2",25,0)
 ;
"RTN","SDPPAT2",26,0)
 I $P(SD(.11),U,3)'="" D
"RTN","SDPPAT2",27,0)
 .S X="",X=$$SETSTR^VALM1($P(SD(.11),U,3),X,10,29)
"RTN","SDPPAT2",28,0)
 .D SET^SDPPAT1(X)
"RTN","SDPPAT2",29,0)
LINE4 ; Line 4 of address (City, State, Zip)
"RTN","SDPPAT2",30,0)
 ;If foreign (postal code, city, province)
"RTN","SDPPAT2",31,0)
 ; retrieve country info -- PERM country is piece 10 of .11
"RTN","SDPPAT2",32,0)
 N FILE,CNTRY,FORIEN,FOREIGN
"RTN","SDPPAT2",33,0)
 S FILE=779.004,FORIEN=$P(SD(.11),U,10),CNTRY=$$GET1^DIQ(FILE,FORIEN_",",2),CNTRY=$$UPPER^VALM1(CNTRY),FOREIGN=$$FORIEN^DGADDUTL(FORIEN)
"RTN","SDPPAT2",34,0)
 I 'FOREIGN D
"RTN","SDPPAT2",35,0)
 .N SDZIP
"RTN","SDPPAT2",36,0)
 .S X="" I SD(.11)'="" S SDZIP=$P(SD(.11),U,12) S:$E(SDZIP,6,9)'="" SDZIP=$E(SDZIP,1,5)_"-"_$E(SDZIP,6,9) D
"RTN","SDPPAT2",37,0)
 ..S X=$$SETSTR^VALM1(($P(SD(.11),U,4)_", "_$P($G(^DIC(5,+$P(SD(.11),U,5),0)),U,2)_" "_SDZIP),X,10,40)
"RTN","SDPPAT2",38,0)
 ..S X=$$SETSTR^VALM1("County:",X,51,7)
"RTN","SDPPAT2",39,0)
 ..S X=$$SETSTR^VALM1($P($G(^DIC(5,+$P(SD(.11),U,5),1,+$P(SD(.11),U,7),0)),U),X,SDSECCOL,20)
"RTN","SDPPAT2",40,0)
 E  D
"RTN","SDPPAT2",41,0)
 . S X="",X=($$SETSTR^VALM1($P(SD(.11),U,9)_" "_$P(SD(.11),U,4)_" "_$P(SD(.11),U,8),X,10,45))
"RTN","SDPPAT2",42,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",43,0)
LINE5 ;Display Country
"RTN","SDPPAT2",44,0)
 S X="",X=$$SETSTR^VALM1(CNTRY,X,10,45)
"RTN","SDPPAT2",45,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",46,0)
TADDR ; Address and Phone Headers
"RTN","SDPPAT2",47,0)
 ;
"RTN","SDPPAT2",48,0)
 S X=""
"RTN","SDPPAT2",49,0)
 I ($P(SD(.121),U,7)&($P(SD(.121),U,8)>DT))!($P(SD(.121),U,7)&('$P(SD(.121),U,8))) D
"RTN","SDPPAT2",50,0)
 .S X=$$SETSTR^VALM1("**Temp. Address**",X,9,17)
"RTN","SDPPAT2",51,0)
 .S X=$$SETSTR^VALM1("**Temp. Phone**",X,48,15)
"RTN","SDPPAT2",52,0)
 .D SET^SDPPAT1(X)
"RTN","SDPPAT2",53,0)
TLINE1 .; Line 1 of address
"RTN","SDPPAT2",54,0)
 .S X="",X=$$SETSTR^VALM1($P(SD(.121),U),X,10,29)
"RTN","SDPPAT2",55,0)
 .S X=$$SETSTR^VALM1("Residence:",X,48,10)
"RTN","SDPPAT2",56,0)
 .S X=$$SETSTR^VALM1($P(SD(.121),U,10),X,SDSECCOL,20)
"RTN","SDPPAT2",57,0)
 .D SET^SDPPAT1(X)
"RTN","SDPPAT2",58,0)
TLINE2 .; Line 2 of address
"RTN","SDPPAT2",59,0)
 .I $P(SD(.121),U,2)'="" D
"RTN","SDPPAT2",60,0)
 ..S X="",X=$$SETSTR^VALM1($P(SD(.121),U,2),X,10,29)
"RTN","SDPPAT2",61,0)
 ..D SET^SDPPAT1(X)
"RTN","SDPPAT2",62,0)
TLINE3 .; Line 3 of address
"RTN","SDPPAT2",63,0)
 .I $P(SD(.121),U,3)'="" D
"RTN","SDPPAT2",64,0)
 ..S X="",X=$$SETSTR^VALM1($P(SD(.121),U,3),X,10,29)
"RTN","SDPPAT2",65,0)
 ..D SET^SDPPAT1(X)
"RTN","SDPPAT2",66,0)
TLINE4 .; Line 4 of address (City, State, Zip)
"RTN","SDPPAT2",67,0)
 .;If foreign (postal code, city, province)
"RTN","SDPPAT2",68,0)
 .; retrieve country info -- TEMP country is piece 3 of .122
"RTN","SDPPAT2",69,0)
 .N FILE,CNTRY,FORIEN,FOREIGN
"RTN","SDPPAT2",70,0)
 .S FILE=779.004,FORIEN=$P(SD(.122),U,3),CNTRY=$$GET1^DIQ(FILE,FORIEN_",",2),CNTRY=$$UPPER^VALM1(CNTRY),FOREIGN=$$FORIEN^DGADDUTL(FORIEN)
"RTN","SDPPAT2",71,0)
 .I 'FOREIGN D
"RTN","SDPPAT2",72,0)
 ..N SDZIP
"RTN","SDPPAT2",73,0)
 ..S X="" I SD(.121)'="" S SDZIP=$P(SD(.121),U,12) S:$E(SDZIP,6,9)'="" SDZIP=$E(SDZIP,1,5)_"-"_$E(SDZIP,6,9) D
"RTN","SDPPAT2",74,0)
 ...S X=$$SETSTR^VALM1(($P(SD(.121),U,4)_", "_$P($G(^DIC(5,+$P(SD(.121),U,5),0)),U,2)_" "_SDZIP),X,10,40)
"RTN","SDPPAT2",75,0)
 ...S X=$$SETSTR^VALM1("County:",X,51,7)
"RTN","SDPPAT2",76,0)
 ...S X=$$SETSTR^VALM1($P($G(^DIC(5,+$P(SD(.121),U,5),1,+$P(SD(.121),U,11),0)),U),X,SDSECCOL,20)
"RTN","SDPPAT2",77,0)
 .E  D
"RTN","SDPPAT2",78,0)
 ..S X="",X=($$SETSTR^VALM1($P(SD(.122),U,2)_" "_$P(SD(.121),U,4)_" "_$P(SD(.122),U),X,10,45))
"RTN","SDPPAT2",79,0)
 .D SET^SDPPAT1(X)
"RTN","SDPPAT2",80,0)
TLINE5 .;Display Country
"RTN","SDPPAT2",81,0)
 .S X="",X=$$SETSTR^VALM1(CNTRY,X,10,45)
"RTN","SDPPAT2",82,0)
 .D SET^SDPPAT1(X)
"RTN","SDPPAT2",83,0)
 D SET^SDPPAT1("")
"RTN","SDPPAT2",84,0)
RAD ; Radiation Exposure and Prisoner of War
"RTN","SDPPAT2",85,0)
 ;
"RTN","SDPPAT2",86,0)
 S X="",X=$$SETSTR^VALM1("Radiation Exposure:",X,2,19)
"RTN","SDPPAT2",87,0)
 S X=$$SETSTR^VALM1($S($P(SD(.321),U,3)="N":"NO",$P(SD(.321),U,3)="Y":"YES",1:"UNKNOWN"),X,SDFSTCOL,7)
"RTN","SDPPAT2",88,0)
 S X=$$SETSTR^VALM1("Prisoner of War:",X,43,16)
"RTN","SDPPAT2",89,0)
 S X=$$SETSTR^VALM1($S($P(SD(.52),U,5)="N":"NO",$P(SD(.52),U,5)="Y":"YES",1:"UNKNOWN"),X,SDSECCOL,7)
"RTN","SDPPAT2",90,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",91,0)
AO ; Agent Orange Exposure and Vietnam Service
"RTN","SDPPAT2",92,0)
 ;
"RTN","SDPPAT2",93,0)
 S X="",X=$$SETSTR^VALM1("Agent Orange Exp.:",X,3,18)
"RTN","SDPPAT2",94,0)
 S X=$$SETSTR^VALM1($S($P(SD(.321),U,2)="N":"NO",$P(SD(.321),U,2)="Y":"YES",1:"UNKNOWN"),X,SDFSTCOL,7)
"RTN","SDPPAT2",95,0)
 S X=$$SETSTR^VALM1("Vietnam Service:",X,43,16)
"RTN","SDPPAT2",96,0)
 S X=$$SETSTR^VALM1($S($P(SD(.321),U)="N":"NO",$P(SD(.321),U)="Y":"YES",1:"UNKNOWN"),X,SDSECCOL,7)
"RTN","SDPPAT2",97,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",98,0)
 ;
"RTN","SDPPAT2",99,0)
NTR ; Nose and Throat Radium Exposure
"RTN","SDPPAT2",100,0)
 ;
"RTN","SDPPAT2",101,0)
 K SDNTR
"RTN","SDPPAT2",102,0)
 S X="",X=$$SETSTR^VALM1("N/T Radium:",X,10,11)
"RTN","SDPPAT2",103,0)
 ;get current NTR by using supported API (DBIA #3457)
"RTN","SDPPAT2",104,0)
 S X=$$SETSTR^VALM1($S($$GETCUR^DGNTAPI(DFN,"SDNTR")>0:$G(SDNTR("INTRP")),1:"UNKNOWN"),X,SDFSTCOL,45)
"RTN","SDPPAT2",105,0)
 K SDNTR
"RTN","SDPPAT2",106,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",107,0)
 ;
"RTN","SDPPAT2",108,0)
POS ; Period of Service
"RTN","SDPPAT2",109,0)
 ;
"RTN","SDPPAT2",110,0)
 S X="",X=$$SETSTR^VALM1("Period of Service:",X,3,18)
"RTN","SDPPAT2",111,0)
 S X=$$SETSTR^VALM1($P($G(^DIC(21,+$P(SD(.32),U,3),0)),U),X,SDFSTCOL,30)
"RTN","SDPPAT2",112,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",113,0)
SC ; Sevice Connected and Percentage
"RTN","SDPPAT2",114,0)
 ;
"RTN","SDPPAT2",115,0)
 S X="",X=$$SETSTR^VALM1("Service Connected:",X,3,18)
"RTN","SDPPAT2",116,0)
 S X=$$SETSTR^VALM1($S($P(SD(.3),U)="N":"NO",$P(SD(.3),U)="Y":"YES",1:"UNKNOWN"),X,SDFSTCOL,7)
"RTN","SDPPAT2",117,0)
 I $P(SD(.3),U)'="Y" D SET^SDPPAT1(X),SDQ Q
"RTN","SDPPAT2",118,0)
 S X=$$SETSTR^VALM1("Percentage:",X,48,11)
"RTN","SDPPAT2",119,0)
 S X=$$SETSTR^VALM1($P(SD(.3),U,2)_"%",X,SDSECCOL,4)
"RTN","SDPPAT2",120,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",121,0)
SDQ ; Final set of page if no service connection
"RTN","SDPPAT2",122,0)
 ;
"RTN","SDPPAT2",123,0)
 F CNT=SDLN:1:25 D SET^SDPPAT1("")
"RTN","SDPPAT2",124,0)
 Q:'$D(SDCNT)
"RTN","SDPPAT2",125,0)
DIS ; Disabilities
"RTN","SDPPAT2",126,0)
 ;
"RTN","SDPPAT2",127,0)
 S X="",X=$$SETSTR^VALM1("Rated Disabilities:",X,7,19)
"RTN","SDPPAT2",128,0)
 D SET^SDPPAT1(X)
"RTN","SDPPAT2",129,0)
 S CNT=0 F  S CNT=$O(SDDIS(CNT)) Q:'CNT!('$D(SDCNT(+CNT)))  D
"RTN","SDPPAT2",130,0)
 .I '$D(SDDIS(CNT+1)) D SET^SDPPAT1(SDDIS(CNT)) Q
"RTN","SDPPAT2",131,0)
 .I $L(SDDIS(CNT))<80,(SDCNT(CNT+1)+$L(SDDIS(CNT))>79) D SET^SDPPAT1(SDDIS(CNT)) K SDDIS(CNT) Q
"RTN","SDPPAT2",132,0)
 .I SDLN=24&($D(SDDIS(CNT))) D SET^SDPPAT1("...this patient has more 'disabilities' that are not listed") K SDCNT Q
"RTN","SDPPAT2",133,0)
 .S SDDIS(CNT+1)=SDDIS(CNT)_", "_$G(SDDIS(CNT+1))
"RTN","SDPPAT2",134,0)
 K SDDIS
"RTN","SDPPAT2",135,0)
 D SET^SDPPAT1("")
"RTN","SDPPAT2",136,0)
 Q
"RTN","SDROUT2")
0^17^B16488063
"RTN","SDROUT2",1,0)
SDROUT2 ;BSN/GRR - PRINT ROUTING SLIPS HEADING ; 4/24/01 3:10pm
"RTN","SDROUT2",2,0)
 ;;5.3;Scheduling;**28,377,441**;Aug 13, 1993;Build 14
"RTN","SDROUT2",3,0)
HED N LL,NAME,SDX,SSN,Y,ADDR
"RTN","SDROUT2",4,0)
 W !,@IOF,"*** FACILITY: ",$S($D(^DG(40.8,+DIV,0)):$P(^(0),"^"),1:$P($$SITE^VASITE,U,2)) S P=P+1
"RTN","SDROUT2",5,0)
 I ORDER=2 W !,"*** CLINIC: ",$P(^SC(+SC,0),"^")
"RTN","SDROUT2",6,0)
 I ORDER=3 W !,"*** PHYSICAL LOCATION: "_I
"RTN","SDROUT2",7,0)
 I $D(^DPT(J,.321)) F SDX1=1,2,3 I $P(^(.321),"^",SDX1)["Y" Q
"RTN","SDROUT2",8,0)
 ;I  W ?45,"*** EXPOSURE SURVEY ***",!
"RTN","SDROUT2",9,0)
 ;I $D(^DPT(J,.321)) F SDX1=1,2,3 I $P(^(.321),"^",SDX1)=""!($P(^(.321),"^",SDX1)["U") W ?45,"*** UPDATE SURVEY DATA ***" Q
"RTN","SDROUT2",10,0)
 ;I '$D(^DPT(J,.321)) W ?45,"*** UPDATE SURVEY DATA ***"
"RTN","SDROUT2",11,0)
 I P'>1 S SDZ="",$P(SDZ,"* ",13)="" D WCAT K SDZ
"RTN","SDROUT2",12,0)
 W !,"PAGE ",P,?10,"OUTPATIENT ROUTING SLIP"
"RTN","SDROUT2",13,0)
 I $D(^DPT(J,.36)),$P(^DPT(J,.36),"^",1)]""
"RTN","SDROUT2",14,0)
 W ?45,"*** ",$S($T:$P(^DIC(8,+^DPT(J,.36),0),"^",1),1:"ELIG NOT SPECIFIED")," ***"
"RTN","SDROUT2",15,0)
 S Y=^DPT(J,0),NAME=$P(Y,"^",1),SSN=$P(Y,"^",9)
"RTN","SDROUT2",16,0)
 W !!,NAME,?54,"APPOINTMENT DATE"
"RTN","SDROUT2",17,0)
 W !,$E(SSN,1,3),"-",$E(SSN,4,5),"-",$E(SSN,6,10),?58,APDATE
"RTN","SDROUT2",18,0)
 I $D(^DPT(J,.1)) W !!,"*** INPATIENT ***",!,"LOCATED ON WARD: ",$P(^DPT(J,.1),"^",1),! G OVR
"RTN","SDROUT2",19,0)
 S ADDR=$S($D(^DPT(J,.11)):^DPT(J,.11),1:"")
"RTN","SDROUT2",20,0)
 F LL=1:1:3 W:$P(ADDR,"^",LL)]"" !,$P(ADDR,"^",LL)
"RTN","SDROUT2",21,0)
 ; retrieve country info -- PERM country is piece 10 of .11
"RTN","SDROUT2",22,0)
 N FILE,CNTRY,FORIEN,FOREIGN
"RTN","SDROUT2",23,0)
 S FILE=779.004,FORIEN=$P(ADDR,U,10),CNTRY=$$GET1^DIQ(FILE,FORIEN_",",2),CNTRY=$$UPPER^VALM1(CNTRY),FOREIGN=$$FORIEN^DGADDUTL(FORIEN)
"RTN","SDROUT2",24,0)
 I 'FOREIGN D
"RTN","SDROUT2",25,0)
 . N SDZIP S SDZIP=$P(ADDR,U,12) S:$E(SDZIP,6,10)'="" SDZIP=$E(SDZIP,1,5)_"-"_$E(SDZIP,6,10)
"RTN","SDROUT2",26,0)
 . W !,$P(ADDR,U,4)_", "_$P($G(^DIC(5,+$P(ADDR,U,5),0)),U)_"  "_SDZIP
"RTN","SDROUT2",27,0)
 E  D
"RTN","SDROUT2",28,0)
 . W !,$P(ADDR,U,9)_" "_$P(ADDR,U,4)_" "_$P(ADDR,U,8)
"RTN","SDROUT2",29,0)
 W:CNTRY'="" !,CNTRY
"RTN","SDROUT2",30,0)
 ;W !,$S($P(ADDR,"^",4)]"":$P(ADDR,"^",4),1:"")," ",$S($P(ADDR,"^",5)]"":$P(^DIC(5,+$P(ADDR,"^",5),0),"^",1),1:"")," ",$S($P(ADDR,"^",6)]"":$P(ADDR,"^",6),1:"")
"RTN","SDROUT2",31,0)
 W !!,"PSA: UNKNOWN"
"RTN","SDROUT2",32,0)
OVR W !
"RTN","SDROUT2",33,0)
 N I S DFN=J D DIS
"RTN","SDROUT2",34,0)
 N DGINSDT S DGINSDT=SDATE
"RTN","SDROUT2",35,0)
 D INS^DGRPDB,KVAR^VADPT S J=DFN
"RTN","SDROUT2",36,0)
 W ! Q
"RTN","SDROUT2",37,0)
WCAT N DGMT S DGMT=$$LST^DGMTCOU1(J,"",3) Q:DGMT']""  S SDVA=$P(DGMT,U,3) I SDVA']"" Q  ;Q:$S('$D(^DG(41.3,+J,0)):1,$P(^(0),"^",2)']"":1,1:0)
"RTN","SDROUT2",38,0)
 S SDVA=$S($P(DGMT,U,4)="R":"REQUIRES MEANS TEST",$P(DGMT,U,4)="N":"MEANS TEST NOT REQUIRED",1:SDVA)
"RTN","SDROUT2",39,0)
 D KVAR^VADATE I $P(DGMT,U,2)]"",$P(DGMT,U,4)'="R",$P(DGMT,U,4)'="N" S VADAT("W")=$P(DGMT,U,2) D ^VADATE ;$N(^DG(41.3,+J,2,0))>0 S VADAT("W")=9999999-$N(^DG(41.3,J,2,0)) D ^VADATE
"RTN","SDROUT2",40,0)
 W !?27,SDZ,!?27,$S($P(DGMT,U,5)=1:SDVA,1:"PHARMACY CO-PAY: "_SDVA) I $D(VADATE("E")) W !?27,"LAST TEST: ",VADATE("E")
"RTN","SDROUT2",41,0)
 W !?27,SDZ K VADAT,VADATE,SDVA Q
"RTN","SDROUT2",42,0)
HD W !,?11,"**CURRENT APPOINTMENTS**",!!,?3,"TIME",?11,"CLINIC",?45,"LOCATION",!
"RTN","SDROUT2",43,0)
 Q
"RTN","SDROUT2",44,0)
SCCOND ;  - text on routing sheet for determining if care for sc condition.
"RTN","SDROUT2",45,0)
 S SDSCCOND=""
"RTN","SDROUT2",46,0)
 W !!?11,"List diagnosis ________________________________________________"
"RTN","SDROUT2",47,0)
 W !!?11,"List any procedures performed during this clinic visit ________",!!?11,"_______________________________________________________________"
"RTN","SDROUT2",48,0)
 D CL(J)
"RTN","SDROUT2",49,0)
 W ! Q
"RTN","SDROUT2",50,0)
 ;
"RTN","SDROUT2",51,0)
CL(DFN) ;Classification
"RTN","SDROUT2",52,0)
 N SDCLY,SDCTI,SDCTIS,SDCTS
"RTN","SDROUT2",53,0)
 D CL^SDCO21(DFN,DT,"",.SDCLY) G CLQ:'$D(SDCLY)
"RTN","SDROUT2",54,0)
 S SDCTIS=$$SEQ^SDCO21
"RTN","SDROUT2",55,0)
 W !
"RTN","SDROUT2",56,0)
 F SDCTS=1:1 S SDCTI=+$P(SDCTIS,",",SDCTS) Q:'SDCTI  I $D(SDCLY(SDCTI)) D
"RTN","SDROUT2",57,0)
 .W !,$P($G(^SD(409.41,SDCTI,0)),"^",2),"? "
"RTN","SDROUT2",58,0)
 .W "__Yes __No"
"RTN","SDROUT2",59,0)
CLQ Q
"RTN","SDROUT2",60,0)
 ;
"RTN","SDROUT2",61,0)
DIS ;rated disabilities
"RTN","SDROUT2",62,0)
 ; -- Pharmacy is allowed to call this tag via a special agreement
"RTN","SDROUT2",63,0)
 ;    with MAS.  MAS should notify pharmacy developers of any
"RTN","SDROUT2",64,0)
 ;    changes that may impact PS* code.  (5/91 - MJK/BOK)
"RTN","SDROUT2",65,0)
 ;
"RTN","SDROUT2",66,0)
 I '$D(VAEL) D ELIG^VADPT S DGKVAR=1
"RTN","SDROUT2",67,0)
 W:'+VAEL(3) !!,"Service Connected: NO" W:+VAEL(3) !!,"       SC Percent: ",$P(VAEL(3),"^",2)_"%"
"RTN","SDROUT2",68,0)
 W !,"     Disabilities: " I 'VAEL(4),$S('$D(^DG(391,+VAEL(6),0)):1,$P(^(0),"^",2):0,1:1) W "NOT A VETERAN" G DISQ
"RTN","SDROUT2",69,0)
 S I3=0 F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  D DIS1
"RTN","SDROUT2",70,0)
 I 'I3 W $S('$O(^DPT(DFN,.372,0)):"NONE STATED",1:"NO SC DISABILITIES LISTED")
"RTN","SDROUT2",71,0)
DISQ I $D(DGKVAR) D KVAR^VADPT K DGKVAR,I1,I2,I3
"RTN","SDROUT2",72,0)
 Q
"RTN","SDROUT2",73,0)
DIS1 S I1=^DPT(DFN,.372,I,0) I $P(I1,"^",3) S I2=$S($D(^DIC(31,+I1,0)):^(0),1:""),I2=$S($P(I2,"^",4)]"":$P(I2,"^",4),1:$P(I2,"^")) W !,I2,?48,$J($P(I1,"^",2),4),"% - ",$S($P(I1,"^",3):"SERVICE CONNECTED",1:"") S I3=I3+1
"RTN","SDROUT2",74,0)
 Q
"VER")
8.0^22.0
"^DD",409.76,409.76,0)
FIELD^^41^6
"^DD",409.76,409.76,0,"DDA")
N
"^DD",409.76,409.76,0,"DT")
2970710
"^DD",409.76,409.76,0,"ID",11)
D EN^DDIOL($P(^(1),U,1))
"^DD",409.76,409.76,0,"IX","B",409.76,.01)

"^DD",409.76,409.76,0,"IX","D",409.76,11)

"^DD",409.76,409.76,0,"NM","TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE")

"^DD",409.76,409.76,0,"PT",409.75,.02)

"^DD",409.76,409.76,0,"VRPK")
SD
"^DD",409.76,409.76,.01,0)
ERROR CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",409.76,409.76,.01,.1)
Error Code
"^DD",409.76,409.76,.01,1,0)
^.1
"^DD",409.76,409.76,.01,1,1,0)
409.76^B
"^DD",409.76,409.76,.01,1,1,1)
S ^SD(409.76,"B",$E(X,1,30),DA)=""
"^DD",409.76,409.76,.01,1,1,2)
K ^SD(409.76,"B",$E(X,1,30),DA)
"^DD",409.76,409.76,.01,3)
Enter an error code to use (1-10 characters)
"^DD",409.76,409.76,.01,21,0)
^^2^2^2970623^^^
"^DD",409.76,409.76,.01,21,1,0)
Error code denoting why an entry in the Transmitted Outpatient Encounter
"^DD",409.76,409.76,.01,21,2,0)
file could not be transmitted or successfully processed.
"^DD",409.76,409.76,.01,23,0)
^^1^1^2970623^
"^DD",409.76,409.76,.01,23,1,0)
 
"^DD",409.76,409.76,.01,"DT")
2960430
"^DD",409.76,409.76,.02,0)
SOURCE OF ERROR^RS^N:NPCD;V:VISTA;T:HL7 TRANSMISSION;^0;2^Q
"^DD",409.76,409.76,.02,3)
Enter the source of the error.
"^DD",409.76,409.76,.02,21,0)
^^1^1^2970710^
"^DD",409.76,409.76,.02,21,1,0)
This set of codes indicates the source of the error.
"^DD",409.76,409.76,.02,"DT")
2970710
"^DD",409.76,409.76,11,0)
ERROR CODE DESCRIPTION^F^^1;1^K:$L(X)>80!($L(X)<1) X
"^DD",409.76,409.76,11,.1)
Error Code Description
"^DD",409.76,409.76,11,1,0)
^.1^^-1
"^DD",409.76,409.76,11,1,2,0)
409.76^D
"^DD",409.76,409.76,11,1,2,1)
S ^SD(409.76,"D",$E(X,1,30),DA)=""
"^DD",409.76,409.76,11,1,2,2)
K ^SD(409.76,"D",$E(X,1,30),DA)
"^DD",409.76,409.76,11,1,2,"%D",0)
^^1^1^2971210^
"^DD",409.76,409.76,11,1,2,"%D",1,0)
This is used to aid in the lookup of error codes.
"^DD",409.76,409.76,11,1,2,"DT")
2971210
"^DD",409.76,409.76,11,3)
Enter a description of the error code (1-80 characters)
"^DD",409.76,409.76,11,21,0)
^^1^1^2960524^^
"^DD",409.76,409.76,11,21,1,0)
Free text description of the error code.
"^DD",409.76,409.76,11,"DT")
2980120
"^DD",409.76,409.76,21,0)
CORRECTIVE ACTION DESCRIPTION^409.7621^^2;0
"^DD",409.76,409.76,21,21,0)
^^3^3^2971022^
"^DD",409.76,409.76,21,21,1,0)
This field describes the actions necessary to correct the error.
"^DD",409.76,409.76,21,21,2,0)
This is the text which would be viewed by a user when using the Incomplete
"^DD",409.76,409.76,21,21,3,0)
Encounter Management Tools.
"^DD",409.76,409.76,31,0)
VALIDATION LOGIC^K^^CHK;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.76,409.76,31,3)
Enter routine entry point to perform error validation
"^DD",409.76,409.76,31,9)
@
"^DD",409.76,409.76,31,21,0)
^^13^13^2971022^
"^DD",409.76,409.76,31,21,1,0)
This field should not be modifed except as directed.
"^DD",409.76,409.76,31,21,2,0)
 
"^DD",409.76,409.76,31,21,3,0)
This contains the logic that needs to be executed in order to validate the
"^DD",409.76,409.76,31,21,4,0)
data.  If the data does not validate correctly the error code from this
"^DD",409.76,409.76,31,21,5,0)
entry will be used.  The function call contained within this field uses
"^DD",409.76,409.76,31,21,6,0)
the following variables:
"^DD",409.76,409.76,31,21,7,0)
    Input
"^DD",409.76,409.76,31,21,8,0)
       Data - The value being validated.
"^DD",409.76,409.76,31,21,9,0)
 
"^DD",409.76,409.76,31,21,10,0)
    Returns
"^DD",409.76,409.76,31,21,11,0)
       RES - Result of the function call
"^DD",409.76,409.76,31,21,12,0)
              1 if entry passed validation
"^DD",409.76,409.76,31,21,13,0)
              0 if entry does not pass validation
"^DD",409.76,409.76,31,"DT")
2970605
"^DD",409.76,409.76,41,0)
CORRECTION LOGIC^K^^COR;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.76,409.76,41,3)
This is the code that will need to be executed to correct this error.
"^DD",409.76,409.76,41,9)
@
"^DD",409.76,409.76,41,21,0)
^^16^16^2971022^
"^DD",409.76,409.76,41,21,1,0)
This field should not be modifed except as directed.
"^DD",409.76,409.76,41,21,2,0)
 
"^DD",409.76,409.76,41,21,3,0)
This contains the logic that needs to be executed in order to allow the
"^DD",409.76,409.76,41,21,4,0)
user to correct the error.  The function call contained within this field
"^DD",409.76,409.76,41,21,5,0)
uses the following variables:
"^DD",409.76,409.76,41,21,6,0)
    Returns
"^DD",409.76,409.76,41,21,7,0)
       RES - Result of the function call
"^DD",409.76,409.76,41,21,8,0)
             0 - if the corrective action was not successful
"^DD",409.76,409.76,41,21,9,0)
             1 - if the corrective action succeeded
"^DD",409.76,409.76,41,21,10,0)
 
"^DD",409.76,409.76,41,21,11,0)
This function call makes the assumption that the ^TMP("SCENI XMT",$J,0)
"^DD",409.76,409.76,41,21,12,0)
global from the Incomplete Encounter Management List Manager tool is
"^DD",409.76,409.76,41,21,13,0)
available to retrieve the pointer from the TRANSMITTED OUTPATIENT
"^DD",409.76,409.76,41,21,14,0)
ENCOUNTER FILE (#409.73) which is used to check the entry and
"^DD",409.76,409.76,41,21,15,0)
retreive the entry from the TRANSMITTED OUTPATIENT ENCOUNTER ERROR FILE
"^DD",409.76,409.76,41,21,16,0)
(#409.75).
"^DD",409.76,409.76,41,"DT")
2970710
"^DD",409.76,409.7621,0)
CORRECTIVE ACTION DESCRIPTION SUB-FIELD^^.01^1
"^DD",409.76,409.7621,0,"DT")
2970710
"^DD",409.76,409.7621,0,"NM","CORRECTIVE ACTION DESCRIPTION")

"^DD",409.76,409.7621,0,"UP")
409.76
"^DD",409.76,409.7621,.01,0)
CORRECTIVE ACTION DESCRIPTION^W^^0;1^Q
"^DD",409.76,409.7621,.01,3)
Enter the corrective action a user will need to take in order to correct this error.
"^DD",409.76,409.7621,.01,21,0)
^^1^1^2971022^^^
"^DD",409.76,409.7621,.01,21,1,0)
This is the corrective action needed to correct this error situation.
"^DD",409.76,409.7621,.01,"DT")
2970710
"^DIC",409.76,409.76,0)
TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE^409.76
"^DIC",409.76,409.76,0,"GL")
^SD(409.76,
"^DIC",409.76,409.76,"%D",0)
^^6^6^2970623^^^^
"^DIC",409.76,409.76,"%D",1,0)
This table file contains a list of all error codes that the National
"^DIC",409.76,409.76,"%D",2,0)
Patient Care Database will report when processing an encounter.
"^DIC",409.76,409.76,"%D",3,0)
 
"^DIC",409.76,409.76,"%D",4,0)
If an entry needs to be added, modified or deleted a patch will be issued
"^DIC",409.76,409.76,"%D",5,0)
instructing the site how to make the change.  Otherwise, this table should
"^DIC",409.76,409.76,"%D",6,0)
not be edited in anyway by the site.  
"^DIC",409.76,"B","TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE",409.76)

**INSTALL NAME**
PX*1.0*168
"BLD",7096,0)
PX*1.0*168^PCE PATIENT CARE ENCOUNTER^0^3081010^y
"BLD",7096,4,0)
^9.64PA^9000010.07^2
"BLD",7096,4,9000010,0)
9000010
"BLD",7096,4,9000010,2,0)
^9.641^9000010^1
"BLD",7096,4,9000010,2,9000010,0)
VISIT  (File-top level)
"BLD",7096,4,9000010,2,9000010,1,0)
^9.6411^80014^4
"BLD",7096,4,9000010,2,9000010,1,80004,0)
SW ASIA CONDITIONS EXPOSURE
"BLD",7096,4,9000010,2,9000010,1,80008,0)
PROJ 112/SHAD
"BLD",7096,4,9000010,2,9000010,1,80014,0)
SW ASIA CONDITIONS EDIT FLAG
"BLD",7096,4,9000010,2,9000010,1,80018,0)
PROJ 112/SHAD EDIT FLAG
"BLD",7096,4,9000010,222)
y^n^p^^^^n^^n
"BLD",7096,4,9000010,224)

"BLD",7096,4,9000010.07,0)
9000010.07
"BLD",7096,4,9000010.07,2,0)
^9.641^9000010.07^1
"BLD",7096,4,9000010.07,2,9000010.07,0)
V POV  (File-top level)
"BLD",7096,4,9000010.07,2,9000010.07,1,0)
^9.6411^80004^2
"BLD",7096,4,9000010.07,2,9000010.07,1,80004,0)
SW ASIA CONDITIONS EXPOSURE
"BLD",7096,4,9000010.07,2,9000010.07,1,80008,0)
PROJ 112/SHAD
"BLD",7096,4,9000010.07,222)
y^n^p^^^^n^^n
"BLD",7096,4,9000010.07,224)

"BLD",7096,4,"APDD",9000010,9000010)

"BLD",7096,4,"APDD",9000010,9000010,80004)

"BLD",7096,4,"APDD",9000010,9000010,80008)

"BLD",7096,4,"APDD",9000010,9000010,80014)

"BLD",7096,4,"APDD",9000010,9000010,80018)

"BLD",7096,4,"APDD",9000010.07,9000010.07)

"BLD",7096,4,"APDD",9000010.07,9000010.07,80004)

"BLD",7096,4,"APDD",9000010.07,9000010.07,80008)

"BLD",7096,4,"B",9000010,9000010)

"BLD",7096,4,"B",9000010.07,9000010.07)

"BLD",7096,6)
4^
"BLD",7096,6.3)
14
"BLD",7096,"ABPKG")
n
"BLD",7096,"KRN",0)
^9.67PA^8989.52^19
"BLD",7096,"KRN",.4,0)
.4
"BLD",7096,"KRN",.401,0)
.401
"BLD",7096,"KRN",.402,0)
.402
"BLD",7096,"KRN",.403,0)
.403
"BLD",7096,"KRN",.5,0)
.5
"BLD",7096,"KRN",.84,0)
.84
"BLD",7096,"KRN",.84,"NM",0)
^9.68A^1^1
"BLD",7096,"KRN",.84,"NM",1,0)
8390001.003^^0
"BLD",7096,"KRN",.84,"NM","B",8390001.003,1)

"BLD",7096,"KRN",3.6,0)
3.6
"BLD",7096,"KRN",3.8,0)
3.8
"BLD",7096,"KRN",9.2,0)
9.2
"BLD",7096,"KRN",9.8,0)
9.8
"BLD",7096,"KRN",9.8,"NM",0)
^9.68A^37^37
"BLD",7096,"KRN",9.8,"NM",1,0)
PXBAPI1^^0^B58108640
"BLD",7096,"KRN",9.8,"NM",2,0)
PXAI^^0^B40979532
"BLD",7096,"KRN",9.8,"NM",3,0)
PXAICPTV^^0^B16252625
"BLD",7096,"KRN",9.8,"NM",4,0)
PXAIPOV^^0^B22661224
"BLD",7096,"KRN",9.8,"NM",5,0)
PXAIVST^^0^B16100089
"BLD",7096,"KRN",9.8,"NM",6,0)
PXAIVSTV^^0^B58723287
"BLD",7096,"KRN",9.8,"NM",7,0)
PXCAPOV^^0^B38043079
"BLD",7096,"KRN",9.8,"NM",8,0)
PXCADXP2^^0^B22989693
"BLD",7096,"KRN",9.8,"NM",9,0)
PXCAPL^^0^B31157708
"BLD",7096,"KRN",9.8,"NM",10,0)
PXCAPL1^^0^B6017229
"BLD",7096,"KRN",9.8,"NM",11,0)
PXCAPL2^^0^B8360764
"BLD",7096,"KRN",9.8,"NM",12,0)
PXCAVST^^0^B38057637
"BLD",7096,"KRN",9.8,"NM",13,0)
PXCAVST1^^0^B16251014
"BLD",7096,"KRN",9.8,"NM",14,0)
PXCEAPPM^^0^B6595820
"BLD",7096,"KRN",9.8,"NM",15,0)
PXCEE800^^0^B2080813
"BLD",7096,"KRN",9.8,"NM",16,0)
PXCESIT^^0^B9892116
"BLD",7096,"KRN",9.8,"NM",17,0)
PXCEVST^^0^B6497526
"BLD",7096,"KRN",9.8,"NM",18,0)
PXKFVST^^0^B11330691
"BLD",7096,"KRN",9.8,"NM",19,0)
PXKVST^^0^B19617761
"BLD",7096,"KRN",9.8,"NM",20,0)
PXUTLSCC^^0^B39907566
"BLD",7096,"KRN",9.8,"NM",21,0)
VSITDEF^^0^B42348655
"BLD",7096,"KRN",9.8,"NM",22,0)
VSITFLD^^0^B11200887
"BLD",7096,"KRN",9.8,"NM",23,0)
VSITHLP^^0^B18478356
"BLD",7096,"KRN",9.8,"NM",24,0)
PXAPIDEL^^0^B29773660
"BLD",7096,"KRN",9.8,"NM",25,0)
PXBAPI21^^0^B28465435
"BLD",7096,"KRN",9.8,"NM",26,0)
PXBPL^^0^B19131975
"BLD",7096,"KRN",9.8,"NM",27,0)
PXKFPOV^^0^B3924785
"BLD",7096,"KRN",9.8,"NM",28,0)
PXCEC800^^0^B3206369
"BLD",7096,"KRN",9.8,"NM",29,0)
PXCED800^^0^B2596896
"BLD",7096,"KRN",9.8,"NM",30,0)
PXBDPOV^^0^B26935577
"BLD",7096,"KRN",9.8,"NM",31,0)
PXBGPOV^^0^B11193623
"BLD",7096,"KRN",9.8,"NM",32,0)
PXCECCLS^^0^B21843800
"BLD",7096,"KRN",9.8,"NM",33,0)
PXAIPL^^0^B4827876
"BLD",7096,"KRN",9.8,"NM",34,0)
PXCEPOV^^0^B17257132
"BLD",7096,"KRN",9.8,"NM",35,0)
PXRRMDR^^0^B37941513
"BLD",7096,"KRN",9.8,"NM",36,0)
PXRRMDR1^^0^B19546467
"BLD",7096,"KRN",9.8,"NM",37,0)
PXBAPI22^^0^B7052265
"BLD",7096,"KRN",9.8,"NM","B","PXAI",2)

"BLD",7096,"KRN",9.8,"NM","B","PXAICPTV",3)

"BLD",7096,"KRN",9.8,"NM","B","PXAIPL",33)

"BLD",7096,"KRN",9.8,"NM","B","PXAIPOV",4)

"BLD",7096,"KRN",9.8,"NM","B","PXAIVST",5)

"BLD",7096,"KRN",9.8,"NM","B","PXAIVSTV",6)

"BLD",7096,"KRN",9.8,"NM","B","PXAPIDEL",24)

"BLD",7096,"KRN",9.8,"NM","B","PXBAPI1",1)

"BLD",7096,"KRN",9.8,"NM","B","PXBAPI21",25)

"BLD",7096,"KRN",9.8,"NM","B","PXBAPI22",37)

"BLD",7096,"KRN",9.8,"NM","B","PXBDPOV",30)

"BLD",7096,"KRN",9.8,"NM","B","PXBGPOV",31)

"BLD",7096,"KRN",9.8,"NM","B","PXBPL",26)

"BLD",7096,"KRN",9.8,"NM","B","PXCADXP2",8)

"BLD",7096,"KRN",9.8,"NM","B","PXCAPL",9)

"BLD",7096,"KRN",9.8,"NM","B","PXCAPL1",10)

"BLD",7096,"KRN",9.8,"NM","B","PXCAPL2",11)

"BLD",7096,"KRN",9.8,"NM","B","PXCAPOV",7)

"BLD",7096,"KRN",9.8,"NM","B","PXCAVST",12)

"BLD",7096,"KRN",9.8,"NM","B","PXCAVST1",13)

"BLD",7096,"KRN",9.8,"NM","B","PXCEAPPM",14)

"BLD",7096,"KRN",9.8,"NM","B","PXCEC800",28)

"BLD",7096,"KRN",9.8,"NM","B","PXCECCLS",32)

"BLD",7096,"KRN",9.8,"NM","B","PXCED800",29)

"BLD",7096,"KRN",9.8,"NM","B","PXCEE800",15)

"BLD",7096,"KRN",9.8,"NM","B","PXCEPOV",34)

"BLD",7096,"KRN",9.8,"NM","B","PXCESIT",16)

"BLD",7096,"KRN",9.8,"NM","B","PXCEVST",17)

"BLD",7096,"KRN",9.8,"NM","B","PXKFPOV",27)

"BLD",7096,"KRN",9.8,"NM","B","PXKFVST",18)

"BLD",7096,"KRN",9.8,"NM","B","PXKVST",19)

"BLD",7096,"KRN",9.8,"NM","B","PXRRMDR",35)

"BLD",7096,"KRN",9.8,"NM","B","PXRRMDR1",36)

"BLD",7096,"KRN",9.8,"NM","B","PXUTLSCC",20)

"BLD",7096,"KRN",9.8,"NM","B","VSITDEF",21)

"BLD",7096,"KRN",9.8,"NM","B","VSITFLD",22)

"BLD",7096,"KRN",9.8,"NM","B","VSITHLP",23)

"BLD",7096,"KRN",19,0)
19
"BLD",7096,"KRN",19.1,0)
19.1
"BLD",7096,"KRN",101,0)
101
"BLD",7096,"KRN",409.61,0)
409.61
"BLD",7096,"KRN",771,0)
771
"BLD",7096,"KRN",870,0)
870
"BLD",7096,"KRN",8989.51,0)
8989.51
"BLD",7096,"KRN",8989.52,0)
8989.52
"BLD",7096,"KRN",8994,0)
8994
"BLD",7096,"KRN","B",.4,.4)

"BLD",7096,"KRN","B",.401,.401)

"BLD",7096,"KRN","B",.402,.402)

"BLD",7096,"KRN","B",.403,.403)

"BLD",7096,"KRN","B",.5,.5)

"BLD",7096,"KRN","B",.84,.84)

"BLD",7096,"KRN","B",3.6,3.6)

"BLD",7096,"KRN","B",3.8,3.8)

"BLD",7096,"KRN","B",9.2,9.2)

"BLD",7096,"KRN","B",9.8,9.8)

"BLD",7096,"KRN","B",19,19)

"BLD",7096,"KRN","B",19.1,19.1)

"BLD",7096,"KRN","B",101,101)

"BLD",7096,"KRN","B",409.61,409.61)

"BLD",7096,"KRN","B",771,771)

"BLD",7096,"KRN","B",870,870)

"BLD",7096,"KRN","B",8989.51,8989.51)

"BLD",7096,"KRN","B",8989.52,8989.52)

"BLD",7096,"KRN","B",8994,8994)

"BLD",7096,"QUES",0)
^9.62^^
"BLD",7096,"REQB",0)
^9.611^8^7
"BLD",7096,"REQB",1,0)
PX*1.0*124^2
"BLD",7096,"REQB",2,0)
PX*1.0*130^2
"BLD",7096,"REQB",4,0)
SD*5.3*441^2
"BLD",7096,"REQB",5,0)
PX*1.0*174^2
"BLD",7096,"REQB",6,0)
PX*1.0*170^2
"BLD",7096,"REQB",7,0)
PX*1.0*164^2
"BLD",7096,"REQB",8,0)
PX*1.0*182^2
"BLD",7096,"REQB","B","PX*1.0*124",1)

"BLD",7096,"REQB","B","PX*1.0*130",2)

"BLD",7096,"REQB","B","PX*1.0*164",7)

"BLD",7096,"REQB","B","PX*1.0*170",6)

"BLD",7096,"REQB","B","PX*1.0*174",5)

"BLD",7096,"REQB","B","PX*1.0*182",8)

"BLD",7096,"REQB","B","SD*5.3*441",4)

"FIA",9000010)
VISIT
"FIA",9000010,0)
^AUPNVSIT(
"FIA",9000010,0,0)
9000010sID
"FIA",9000010,0,1)
y^n^p^^^^n^^n
"FIA",9000010,0,10)

"FIA",9000010,0,11)

"FIA",9000010,0,"RLRO")

"FIA",9000010,0,"VR")
1.0^PX
"FIA",9000010,9000010)
1
"FIA",9000010,9000010,80004)

"FIA",9000010,9000010,80008)

"FIA",9000010,9000010,80014)

"FIA",9000010,9000010,80018)

"FIA",9000010.07)
V POV
"FIA",9000010.07,0)
^AUPNVPOV(
"FIA",9000010.07,0,0)
9000010.07IP
"FIA",9000010.07,0,1)
y^n^p^^^^n^^n
"FIA",9000010.07,0,10)

"FIA",9000010.07,0,11)

"FIA",9000010.07,0,"RLRO")

"FIA",9000010.07,0,"VR")
1.0^PX
"FIA",9000010.07,9000010.07)
1
"FIA",9000010.07,9000010.07,80004)

"FIA",9000010.07,9000010.07,80008)

"KRN",.84,8390001.003,-1)
0^1
"KRN",.84,8390001.003,0)
8390001.003^1^y^PCE PATIENT CARE ENCOUNTER
"KRN",.84,8390001.003,1,0)
^.842^2^2^3060807^^^^
"KRN",.84,8390001.003,1,1,0)
Warning message for service connectedness
"KRN",.84,8390001.003,1,2,0)

"KRN",.84,8390001.003,2,0)
^^25^25^3060807^
"KRN",.84,8390001.003,2,1,0)
* * * * * * WARNING * * * * * *
"KRN",.84,8390001.003,2,2,0)
 
"KRN",.84,8390001.003,2,3,0)
Problems are:
"KRN",.84,8390001.003,2,4,0)
 
"KRN",.84,8390001.003,2,5,0)
Service connected ....... |1W|     |6W|
"KRN",.84,8390001.003,2,6,0)
Agent Orange ............ |2W|     |7W|
"KRN",.84,8390001.003,2,7,0)
Ionizing Radiation ...... |3W|     |8W|
"KRN",.84,8390001.003,2,8,0)
Southwest Asia Condition. |4W|     |9W|
"KRN",.84,8390001.003,2,9,0)
Military Sexual Trauma... |5W|     |10W|
"KRN",.84,8390001.003,2,10,0)
Head/Neck Cancer ........ |16W|     |17W|
"KRN",.84,8390001.003,2,11,0)
Combat Veteran .......... |19W|     |20W|
"KRN",.84,8390001.003,2,12,0)
Project 112/SHAD ........ |22W|     |23W|
"KRN",.84,8390001.003,2,13,0)
 
"KRN",.84,8390001.003,2,14,0)
Corrected to:
"KRN",.84,8390001.003,2,15,0)
 
"KRN",.84,8390001.003,2,16,0)
Service connected ....... |11W|
"KRN",.84,8390001.003,2,17,0)
Agent Orange ............ |12W|
"KRN",.84,8390001.003,2,18,0)
Ionizing Radiation ...... |13W|
"KRN",.84,8390001.003,2,19,0)
Southwest Asia Condition. |14W|
"KRN",.84,8390001.003,2,20,0)
Military Sexual Trauma... |15W|
"KRN",.84,8390001.003,2,21,0)
Head/Neck Cancer ........ |18W|
"KRN",.84,8390001.003,2,22,0)
Combat Veteran .......... |21W|
"KRN",.84,8390001.003,2,23,0)
Project 112/SHAD ........ |24W|
"KRN",.84,8390001.003,2,24,0)
 
"KRN",.84,8390001.003,2,25,0)
Changes have been made according to the Patient and the clinic.
"KRN",.84,8390001.003,3,0)
^.845^24^24
"KRN",.84,8390001.003,3,1,0)
1W^SC as received
"KRN",.84,8390001.003,3,2,0)
2W^AO a received
"KRN",.84,8390001.003,3,3,0)
3W^IR as received
"KRN",.84,8390001.003,3,4,0)
4W^EC as received
"KRN",.84,8390001.003,3,5,0)
5W^MST as received
"KRN",.84,8390001.003,3,6,0)
6W^Error message for SC
"KRN",.84,8390001.003,3,7,0)
7W^Error message for AO
"KRN",.84,8390001.003,3,8,0)
8W^Error message for IR
"KRN",.84,8390001.003,3,9,0)
9W^Error message for EC
"KRN",.84,8390001.003,3,10,0)
10W^Error message for MST
"KRN",.84,8390001.003,3,11,0)
11W^Correction for SC
"KRN",.84,8390001.003,3,12,0)
12W^Correction for AO
"KRN",.84,8390001.003,3,13,0)
13W^Correction for IR
"KRN",.84,8390001.003,3,14,0)
14W^Correction for EC
"KRN",.84,8390001.003,3,15,0)
15W^Correction for MST
"KRN",.84,8390001.003,3,16,0)
16W^HNC as received
"KRN",.84,8390001.003,3,17,0)
17W^Error message for HNC
"KRN",.84,8390001.003,3,18,0)
18W^Correction for HNC
"KRN",.84,8390001.003,3,19,0)
19W^CV as received
"KRN",.84,8390001.003,3,20,0)
20W^Error message for CV
"KRN",.84,8390001.003,3,21,0)
21W^Correction for CV
"KRN",.84,8390001.003,3,22,0)
22W^SHAD as received
"KRN",.84,8390001.003,3,23,0)
23W^Error message for SHAD
"KRN",.84,8390001.003,3,24,0)
24W^Correction for SHAD
"MBREQ")
0
"ORD",9,.84)
.84;9;;;EDEOUT^DIFROMSO(.84,DA,"",XPDA);FPRE^DIFROMSI(.84,"",XPDA);EPRE^DIFROMSI(.84,DA,"",XPDA,"",OLDA);;EPOST^DIFROMSI(.84,DA,"",XPDA);DEL^DIFROMSK(.84,"",%)
"ORD",9,.84,0)
DIALOG
"PKG",111,-1)
1^1
"PKG",111,0)
PCE PATIENT CARE ENCOUNTER^PX^Patient Care Encounter
"PKG",111,22,0)
^9.49I^1^1
"PKG",111,22,1,0)
1.0^2960812^2960822^1
"PKG",111,22,1,"PAH",1,0)
168^3081010^100905
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
37
"RTN","PXAI")
0^2^B40979532
"RTN","PXAI",1,0)
PXAI ;ISL/JVS,ISA/KWP,ESW - PCE DRIVING RTN FOR 'DATA2PCE' API ;6/20/03 11:15am
"RTN","PXAI",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,74,69,102,111,112,130,164,168**;Aug 12, 1996;Build 14
"RTN","PXAI",3,0)
 Q
"RTN","PXAI",4,0)
 ;
"RTN","PXAI",5,0)
 ;+  1       2       3        4        5       6      7      8       9
"RTN","PXAI",6,0)
DATA2PCE(PXADATA,PXAPKG,PXASOURC,PXAVISIT,PXAUSER,PXANOT,ERRRET,PXAPREDT,PXAPROB,PXACCNT) ;+API to pass data for add/edit/delete to PCE.
"RTN","PXAI",7,0)
 ;+  PXADATA  (required)
"RTN","PXAI",8,0)
 ;+  PXAPKG   (required)
"RTN","PXAI",9,0)
 ;+  PXASOURC (required)
"RTN","PXAI",10,0)
 ;+  PXAVISIT (optional) is pointer to a visit for which the data is to
"RTN","PXAI",11,0)
 ;+        be related.  If the visit is not known then there must be
"RTN","PXAI",12,0)
 ;+        the ENCOUNTER nodes needed to lookup/create the visit.
"RTN","PXAI",13,0)
 ;+  PXAUSER  (optional) this is a pointer to the user adding the data.
"RTN","PXAI",14,0)
 ;+  PXANOT   (optional) set to 1 if errors are to be displayed to the screen should only be set while writing and debugging the initial code.
"RTN","PXAI",15,0)
 ;+  ERRRET   (optional) passed by reference.  If present will return PXKERROR
"RTN","PXAI",16,0)
 ;+                      array elements to the caller.
"RTN","PXAI",17,0)
 ;+  PXAPREDT  (optional) Set to 1 if you want to edit the Primary Provider
"RTN","PXAI",18,0)
 ;+            only use if for the moment that editing is being done. (dangerous)
"RTN","PXAI",19,0)
 ;+  PXAPROB   (optional) A dotted variable name. When errors and
"RTN","PXAI",20,0)
 ;+             warnings occur, They will be passed back in the form
"RTN","PXAI",21,0)
 ;+            of an array with the general description of the problem.
"RTN","PXAI",22,0)
 ;+ IF ERROR1 - (GENERAL ERRORS)
"RTN","PXAI",23,0)
 ;+      PXAPROB($J,SUBSCRIPT,"ERROR1",PASSED IN 'FILE',PASSED IN FIELD,
"RTN","PXAI",24,0)
 ;+              SUBSCRIPT FROM PXADATA)
"RTN","PXAI",25,0)
 ;+      PXAPROB(23432234,2,"ERROR1","PROVIDER","NAME",7)="BECAUSE..."
"RTN","PXAI",26,0)
 ;+ IF WARNING2 - (GENERAL WARNINGS)
"RTN","PXAI",27,0)
 ;+      PXAPROB($J,SUBSCRIPT,"WARNING2",PASSED IN 'FILE',PASSED IN FIELD,
"RTN","PXAI",28,0)
 ;+              SUBSCRIPT FROM PXADATA)
"RTN","PXAI",29,0)
 ;+      PXAPROB(23432234,3,"WARNING2","PROCEDURE","QTY",3)="BECAUSE..."
"RTN","PXAI",30,0)
 ;+ IF WARNING3 - (WARNINGS FOR SERVICE CONNECTION)
"RTN","PXAI",31,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"AO")=REASON
"RTN","PXAI",32,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"EC")=REASON
"RTN","PXAI",33,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"IR")=REASON
"RTN","PXAI",34,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"SC")=REASON
"RTN","PXAI",35,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"MST")=REASON
"RTN","PXAI",36,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"HNC")=REASON
"RTN","PXAI",37,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"CV")=REASON
"RTN","PXAI",38,0)
 ;+      PXAPROB($J,1,"WARNING3","ENCOUNTER",1,"SHAD")=REASON
"RTN","PXAI",39,0)
 ;+ IF ERROR4 - (PROBLEM LIST ERRORS)
"RTN","PXAI",40,0)
 ;+      PXAPROB($J,6,"ERROR4","PX/DL",(SUBSCRIPT FROM PXADATA))=REASON
"RTN","PXAI",41,0)
 ;+ PXACCNT    (optional)  passed by reference.  Returns the PFSS Account Reference if known.
"RTN","PXAI",42,0)
 ;              Returned as null if the PFSS Account Reference is located in the Order file(#100)
"RTN","PXAI",43,0)
 ;+
"RTN","PXAI",44,0)
 ;+
"RTN","PXAI",45,0)
 ;+ Returns:
"RTN","PXAI",46,0)
 ;+   1  if no errors and process completely
"RTN","PXAI",47,0)
 ;+  -1  if errors occurred but processed completely as possible
"RTN","PXAI",48,0)
 ;+  -2  if could not get a visit
"RTN","PXAI",49,0)
 ;+  -3  if called incorrectly
"RTN","PXAI",50,0)
 ;
"RTN","PXAI",51,0)
NEW ;--NEW VARIABLES
"RTN","PXAI",52,0)
 N NOVSIT,PXAK,DFN,PXAERRF,PXADEC,PXELAP,PXASUB
"RTN","PXAI",53,0)
 N PATIENT,VALQUIET,PRIMFND
"RTN","PXAI",54,0)
 K PXAERROR,PXKERROR,PXAERR,PRVDR
"RTN","PXAI",55,0)
 S PXASUB=0,VALQUIET=1
"RTN","PXAI",56,0)
 ; needs to look up if not passed. 
"RTN","PXAI",57,0)
 I '$G(PXAVISIT),'$D(@PXADATA@("ENCOUNTER")) Q -3
"RTN","PXAI",58,0)
 I $G(PXAUSER)<1 S PXAUSER=DUZ
"RTN","PXAI",59,0)
 ;
"RTN","PXAI",60,0)
 K ^TMP("PXK",$J),^TMP("DIERR",$J),^TMP("PXAIADDPRV",$J)
"RTN","PXAI",61,0)
SOR ;--SOURCE
"RTN","PXAI",62,0)
 I PXAPKG=+PXAPKG S PXAPKG=PXAPKG
"RTN","PXAI",63,0)
 E  S PXAPKG=$$PKG2IEN^VSIT(PXAPKG)
"RTN","PXAI",64,0)
 I PXASOURC=+PXASOURC S PXASOURC=PXASOURC
"RTN","PXAI",65,0)
 E  S PXASOURC=$$SOURCE^PXAPIUTL(PXASOURC)
"RTN","PXAI",66,0)
 ;
"RTN","PXAI",67,0)
 D TMPSOURC^PXAPIUTL(PXASOURC) ;-SAVES & CREATES ^TMP("PXK",$J,"SOR")
"RTN","PXAI",68,0)
VST ;--VISIT
"RTN","PXAI",69,0)
 ;--KILL VISIT
"RTN","PXAI",70,0)
 I $G(PXAVISIT) D VPTR^PXAIVSTV I $G(PXAERRF) D ERR Q -2
"RTN","PXAI",71,0)
 D VST^PXAIVST
"RTN","PXAI",72,0)
 I $G(PXAVISIT)<0 Q -2
"RTN","PXAI",73,0)
 I $G(PXAERRF) D ERR K PXAERR Q -2
"RTN","PXAI",74,0)
PRV ;--PROVIDER
"RTN","PXAI",75,0)
 S PATIENT=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",5)
"RTN","PXAI",76,0)
 S (PXAK,PRIMFND)=0
"RTN","PXAI",77,0)
 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:(PRIMFND)!(PXAK="")  D
"RTN","PXAI",78,0)
 .I $D(@PXADATA@("PROVIDER",PXAK,"PRIMARY")) D
"RTN","PXAI",79,0)
 ..S PRIMFND=$G(@PXADATA@("PROVIDER",PXAK,"PRIMARY"))
"RTN","PXAI",80,0)
 I 'PRIMFND D  ;Check for each provider's status as Primary or Secondary
"RTN","PXAI",81,0)
 .S PXAK=0 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:PXAK=""  D
"RTN","PXAI",82,0)
 ..I '$D(@PXADATA@("PROVIDER",PXAK,"PRIMARY")) D PROVDRST
"RTN","PXAI",83,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PROVIDER",PXAK)) Q:PXAK=""  D
"RTN","PXAI",84,0)
 . D PRV^PXAIPRV I $G(PXAERRF) D ERR
"RTN","PXAI",85,0)
 K PRI ;--FLAG FOR PRIMARY PROVIDER
"RTN","PXAI",86,0)
 K PXAERR
"RTN","PXAI",87,0)
POV ;--DIAGNOSIS
"RTN","PXAI",88,0)
 S (PXAK,PRIMFND)=0
"RTN","PXAI",89,0)
 F  S PXAK=$O(@PXADATA@("DX/PL",PXAK)) Q:(PXAK="")  D  Q:PRIMFND
"RTN","PXAI",90,0)
 .I +$G(@PXADATA@("DX/PL",PXAK,"PRIMARY"))=1 D
"RTN","PXAI",91,0)
 ..S PRIMFND=$G(@PXADATA@("DX/PL",PXAK,"DIAGNOSIS"))
"RTN","PXAI",92,0)
 I $D(@PXADATA@("DX/PL")) D POVPRM(PXAVISIT,PRIMFND,.PXADATA) D
"RTN","PXAI",93,0)
 .S PXAK=0 F  S PXAK=$O(@PXADATA@("DX/PL",PXAK))  Q:PXAK=""  D
"RTN","PXAI",94,0)
 ..D POV^PXAIPOV I $G(PXAERRF) D ERR
"RTN","PXAI",95,0)
 K PXAERR
"RTN","PXAI",96,0)
 ;
"RTN","PXAI",97,0)
CPT ;--PROCEDURE
"RTN","PXAI",98,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PROCEDURE",PXAK))  Q:PXAK=""  D
"RTN","PXAI",99,0)
 . D CPT^PXAICPT I $G(PXAERRF) D ERR
"RTN","PXAI",100,0)
 K PXAERR
"RTN","PXAI",101,0)
 ;
"RTN","PXAI",102,0)
EDU ;--PATIENT EDUCATION
"RTN","PXAI",103,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("PATIENT ED",PXAK))  Q:PXAK=""  D
"RTN","PXAI",104,0)
 . D EDU^PXAIPED I $G(PXAERRF) D ERR
"RTN","PXAI",105,0)
 K PXAERR
"RTN","PXAI",106,0)
 ;
"RTN","PXAI",107,0)
EXAM ;--EXAMINATION
"RTN","PXAI",108,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("EXAM",PXAK))  Q:PXAK=""  D
"RTN","PXAI",109,0)
 . D EXAM^PXAIXAM I $G(PXAERRF) D ERR
"RTN","PXAI",110,0)
 K PXAERR
"RTN","PXAI",111,0)
 ;
"RTN","PXAI",112,0)
HF ;--HEALTH FACTOR
"RTN","PXAI",113,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("HEALTH FACTOR",PXAK))  Q:PXAK=""  D
"RTN","PXAI",114,0)
 . D HF^PXAIHF I $G(PXAERRF) D ERR
"RTN","PXAI",115,0)
 K PXAERR
"RTN","PXAI",116,0)
 ;
"RTN","PXAI",117,0)
IMM ;--IMMUNIZATION
"RTN","PXAI",118,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("IMMUNIZATION",PXAK))  Q:PXAK=""  D
"RTN","PXAI",119,0)
 . D IMM^PXAIIMM I $G(PXAERRF) D ERR
"RTN","PXAI",120,0)
 K PXAERR
"RTN","PXAI",121,0)
 ;
"RTN","PXAI",122,0)
SKIN ;--SKIN TEST
"RTN","PXAI",123,0)
 S PXAK=0 F  S PXAK=$O(@PXADATA@("SKIN TEST",PXAK))  Q:PXAK=""  D
"RTN","PXAI",124,0)
 . D SKIN^PXAISK I $G(PXAERRF) D ERR
"RTN","PXAI",125,0)
 K PXAERR
"RTN","PXAI",126,0)
 ;
"RTN","PXAI",127,0)
 ;
"RTN","PXAI",128,0)
 D OTHER^PXAIPRV
"RTN","PXAI",129,0)
 ;
"RTN","PXAI",130,0)
 ;
"RTN","PXAI",131,0)
 I $D(^TMP("PXK",$J)) D
"RTN","PXAI",132,0)
 . D EN1^PXKMAIN
"RTN","PXAI",133,0)
 . M ERRRET=PXKERROR
"RTN","PXAI",134,0)
 . D PRIM^PXAIPRV K PRVDR
"RTN","PXAI",135,0)
 . D EVENT^PXKMAIN
"RTN","PXAI",136,0)
 S PXACCNT=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",26) ;PX*1.0*164 ;Sets the PFSS Account Reference, if any
"RTN","PXAI",137,0)
 K ^TMP("PXK",$J),PXAERR,PXKERROR
"RTN","PXAI",138,0)
 Q $S($G(PXAERRF):-1,1:1)
"RTN","PXAI",139,0)
 ;
"RTN","PXAI",140,0)
 ;
"RTN","PXAI",141,0)
EXIT ;--EXIT AND CLEAN UP
"RTN","PXAI",142,0)
 D EVENT^PXKMAIN
"RTN","PXAI",143,0)
 K ^TMP("PXK",$J),PRVDR
"RTN","PXAI",144,0)
 K PXAERR
"RTN","PXAI",145,0)
 Q
"RTN","PXAI",146,0)
 ;-----------------SUBROUTINES-----------------------
"RTN","PXAI",147,0)
ERR ;
"RTN","PXAI",148,0)
 ;
"RTN","PXAI",149,0)
 ;
"RTN","PXAI",150,0)
 I '$D(PXADI("DIALOG")) Q
"RTN","PXAI",151,0)
 N NODE,SCREEN
"RTN","PXAI",152,0)
 S PXAERR(1)=$G(PXADATA),PXAERR(2)=$G(PXAPKG),PXAERR(3)=$G(PXASOURC)
"RTN","PXAI",153,0)
 S PXAERR(4)=$G(PXAVISIT),PXAERR(5)=$G(PXAUSER)_"  "_$P($G(^VA(200,PXAUSER,0)),"^",1)
"RTN","PXAI",154,0)
 I $G(PXANOT)=1 D EXTERNAL
"RTN","PXAI",155,0)
 E  D INTERNAL
"RTN","PXAI",156,0)
 D ARRAY^PXAICPTV
"RTN","PXAI",157,0)
 K PXADI("DIALOG")
"RTN","PXAI",158,0)
 Q
"RTN","PXAI",159,0)
 ;
"RTN","PXAI",160,0)
EXTERNAL ;---SEND ERRORS TO SCREEN
"RTN","PXAI",161,0)
 W !,"-----------------------------------------------------------------"
"RTN","PXAI",162,0)
 D BLD^DIALOG($G(PXADI("DIALOG")),.PXAERR,"","SCREEN","F")
"RTN","PXAI",163,0)
 D MSG^DIALOG("ESW","",50,10,"SCREEN")
"RTN","PXAI",164,0)
 ;
"RTN","PXAI",165,0)
 Q
"RTN","PXAI",166,0)
INTERNAL ;---SET ERRORS TO GLOBAL ARRAY
"RTN","PXAI",167,0)
 S NODE=PXADATA
"RTN","PXAI",168,0)
 D BLD^DIALOG($G(PXADI("DIALOG")),.PXAERR,.PXAERR,NODE,"F")
"RTN","PXAI",169,0)
 S NODE=$NA(@PXADATA@("DIERR",$J)) D MSG^DIALOG("ESW","",50,10,NODE)
"RTN","PXAI",170,0)
 Q
"RTN","PXAI",171,0)
 ;
"RTN","PXAI",172,0)
PROVDRST ; Check provider status (Primary or Secondary)
"RTN","PXAI",173,0)
 N PRVIEN,DETS,DIC,DR,DA,DIQ,PRI,PRVPRIM
"RTN","PXAI",174,0)
 I $G(PXAK)="" QUIT
"RTN","PXAI",175,0)
 S PRVIEN=0
"RTN","PXAI",176,0)
 F  S PRVIEN=$O(^AUPNVPRV("AD",PXAVISIT,PRVIEN)) Q:PRVIEN=""  D
"RTN","PXAI",177,0)
 .S DETS=$G(^AUPNVPRV(PRVIEN,0))
"RTN","PXAI",178,0)
 .I $P(DETS,U)=$G(@PXADATA@("PROVIDER",PXAK,"NAME")) D
"RTN","PXAI",179,0)
 ..S DIC=9000010.06,DR=.04,DA=PRVIEN
"RTN","PXAI",180,0)
 ..S DIQ="PRVPRIM(",DIQ(0)="EI" D EN^DIQ1
"RTN","PXAI",181,0)
 ..S PRI=$E($G(PRVPRIM(9000010.06,DA,DR,"E")),1,1)
"RTN","PXAI",182,0)
 ..S @PXADATA@("PROVIDER",PXAK,"PRIMARY")=$S(PRI="P":1,1:0)
"RTN","PXAI",183,0)
 Q
"RTN","PXAI",184,0)
POVPRM(VISIT,PRIMFND,POVARR) ;
"RTN","PXAI",185,0)
 N PRVIEN,DETS,STOP,LPXAK,ORDX,NDX,ORDXP
"RTN","PXAI",186,0)
 S PRVIEN=0
"RTN","PXAI",187,0)
 ;create array of existing DX; ORDX - pointer to ^ICD9(
"RTN","PXAI",188,0)
 F  S PRVIEN=$O(^AUPNVPOV("AD",PXAVISIT,PRVIEN)) Q:PRVIEN=""  D
"RTN","PXAI",189,0)
 .S DETS=$G(^AUPNVPOV(PRVIEN,0)),ORDX=$P(DETS,U)
"RTN","PXAI",190,0)
 .S ORDX(ORDX)=PRVIEN I $P(DETS,U,12)="P" S ORDXP(ORDX)=""
"RTN","PXAI",191,0)
 ; create array of passed DX; NDX - pointer to ^ICD9(
"RTN","PXAI",192,0)
 S PXAK=0 F  S PXAK=$O(@POVARR@("DX/PL",PXAK)) Q:PXAK=""  D
"RTN","PXAI",193,0)
 .S NDX=$G(@POVARR@("DX/PL",PXAK,"DIAGNOSIS")) S NDX(NDX)=PXAK
"RTN","PXAI",194,0)
 ; force entry of originally primary diagnosis with "S" flag
"RTN","PXAI",195,0)
 I PRIMFND S ORDX="" D
"RTN","PXAI",196,0)
 .F  S ORDX=$O(ORDXP(ORDX)) Q:ORDX=""  I PRIMFND'=ORDX D
"RTN","PXAI",197,0)
 ..I $D(NDX(ORDX)) S @POVARR@("DX/PL",NDX(ORDX),"PRIMARY")=0
"RTN","PXAI",198,0)
 ..E  D
"RTN","PXAI",199,0)
 ...S LPXAK=$O(@POVARR@("DX/PL",""),-1)
"RTN","PXAI",200,0)
 ...S @POVARR@("DX/PL",LPXAK+1,"DIAGNOSIS")=ORDX
"RTN","PXAI",201,0)
 ...S @POVARR@("DX/PL",LPXAK+1,"PRIMARY")=0
"RTN","PXAI",202,0)
 Q
"RTN","PXAI",203,0)
 ;
"RTN","PXAICPTV")
0^3^B16252625
"RTN","PXAICPTV",1,0)
PXAICPTV ;ISL/JVS,ISA/KWP - VALADATE PROCEDURES(CPT) ;11/14/96  12:46
"RTN","PXAICPTV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**15,73,74,111,121,130,168**;Aug 12, 1996;Build 14
"RTN","PXAICPTV",3,0)
 ;
"RTN","PXAICPTV",4,0)
VAL ;--VALIDATE ENOUGH DATA
"RTN","PXAICPTV",5,0)
 ;----Missing a pointer to PROCEDURE(CPT) name
"RTN","PXAICPTV",6,0)
 I $G(PXAA("PROCEDURE"))']"" D  Q:$G(STOP)
"RTN","PXAICPTV",7,0)
 .S STOP=1 ;--USED TO STOP DO LOOP
"RTN","PXAICPTV",8,0)
 .S PXAERRF=1 ;--FLAG INDICATES THERE IS AN ERR
"RTN","PXAICPTV",9,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",10,0)
 .S PXAERR(9)="PROCEDURE"
"RTN","PXAICPTV",11,0)
 .S PXAERR(11)=$G(PXAA("PROCEDURE"))
"RTN","PXAICPTV",12,0)
 .S PXAERR(12)="You are missing a pointer to the PROCEDURE CPT FILE#81 that represents the procedure's name"
"RTN","PXAICPTV",13,0)
 ;
"RTN","PXAICPTV",14,0)
 ;----NOT a pointer to PROCEDURE CPT FILE#81
"RTN","PXAICPTV",15,0)
 I '$D(^ICPT($G(PXAA("PROCEDURE")),0)) D  Q:$G(STOP)
"RTN","PXAICPTV",16,0)
 .S STOP=1
"RTN","PXAICPTV",17,0)
 .S PXAERRF=1
"RTN","PXAICPTV",18,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",19,0)
 .S PXAERR(9)="PROCEDURE"
"RTN","PXAICPTV",20,0)
 .S PXAERR(11)=$G(PXAA("PROCEDURE"))
"RTN","PXAICPTV",21,0)
 .S PXAERR(12)=PXAERR(11)_" is NOT a pointer value to the CPT FILE #81"
"RTN","PXAICPTV",22,0)
 ;
"RTN","PXAICPTV",23,0)
 ;----Not a valid CPT
"RTN","PXAICPTV",24,0)
 I '$P($$CPT^ICPTCOD(PXAA("PROCEDURE"),+^AUPNVSIT(PXAVISIT,0)),"^",7) D  Q:$G(STOP)
"RTN","PXAICPTV",25,0)
 .S STOP=1
"RTN","PXAICPTV",26,0)
 .S PXAERRF=1
"RTN","PXAICPTV",27,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",28,0)
 .S PXAERR(9)="PROCEDURE"
"RTN","PXAICPTV",29,0)
 .S PXAERR(11)=$G(PXAA("PROCEDURE"))
"RTN","PXAICPTV",30,0)
 .S PXAERR(12)=PXAERR(11)_" is NOT a valid CPT code"
"RTN","PXAICPTV",31,0)
 ;
"RTN","PXAICPTV",32,0)
 ;----Not a valid modifier
"RTN","PXAICPTV",33,0)
 N SUB,MODIEN
"RTN","PXAICPTV",34,0)
 S SUB=""
"RTN","PXAICPTV",35,0)
 F  S SUB=$O(PXAA("MODIFIERS",SUB)) Q:SUB=""!($G(STOP))  D
"RTN","PXAICPTV",36,0)
 .;S MODIEN=$$MODP^ICPTMOD(PXAA("PROCEDURE"),SUB,"E","",0)
"RTN","PXAICPTV",37,0)
 .S MODIEN=$$MODP^ICPTMOD(PXAA("PROCEDURE"),SUB,"E",+^AUPNVSIT(PXAVISIT,0),0)
"RTN","PXAICPTV",38,0)
 .I $P(MODIEN,"^")>0 Q
"RTN","PXAICPTV",39,0)
 .S STOP=1
"RTN","PXAICPTV",40,0)
 .S PXAERRF=1
"RTN","PXAICPTV",41,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",42,0)
 .S PXAERR(9)="MODIFIERS"_","_SUB
"RTN","PXAICPTV",43,0)
 .S PXAERR(11)=""
"RTN","PXAICPTV",44,0)
 .S PXAERR(12)=SUB_" is NOT a valid modifier for procedure "_$G(PXAA("PROCEDURE"))
"RTN","PXAICPTV",45,0)
 ;----"Missing the number of times the procedure was performed.
"RTN","PXAICPTV",46,0)
 I $G(PXAA("QTY"))<1 D
"RTN","PXAICPTV",47,0)
 .S STOP=0
"RTN","PXAICPTV",48,0)
 .S PXAERRF=1
"RTN","PXAICPTV",49,0)
 .S PXADI("DIALOG")=8390001.002
"RTN","PXAICPTV",50,0)
 .S PXAERR(9)="QTY"
"RTN","PXAICPTV",51,0)
 .S PXAERR(11)=$G(PXAA("QTY"))
"RTN","PXAICPTV",52,0)
 .S PXAERR(12)="If this node is empty we will assume it should be '1'. If it is a less than '1' we will delete any reference to it in the data base."
"RTN","PXAICPTV",53,0)
 ;
"RTN","PXAICPTV",54,0)
 ;
"RTN","PXAICPTV",55,0)
 Q
"RTN","PXAICPTV",56,0)
VAL04 ;---PROVIDER NARRATIVE
"RTN","PXAICPTV",57,0)
 S STOP=1
"RTN","PXAICPTV",58,0)
 S PXAERRF=1
"RTN","PXAICPTV",59,0)
 S PXADI("DIALOG")=8390001.001
"RTN","PXAICPTV",60,0)
 S PXAERR(9)="NARRATIVE"
"RTN","PXAICPTV",61,0)
 S PXAERR(11)=$G(PXAA("NARRATIVE"))
"RTN","PXAICPTV",62,0)
 S PXAERR(12)="We are unable to retrive a narrative from the PROVIDER NARRATIVE file #9999999.27"
"RTN","PXAICPTV",63,0)
 Q
"RTN","PXAICPTV",64,0)
VAL45 ;---PROVIDER NARRATIVE CATEGORY
"RTN","PXAICPTV",65,0)
 S STOP=0
"RTN","PXAICPTV",66,0)
 S PXAERRF=1
"RTN","PXAICPTV",67,0)
 S PXADI("DIALOG")=8390001.002
"RTN","PXAICPTV",68,0)
 S PXAERR(9)="CATEGORY"
"RTN","PXAICPTV",69,0)
 S PXAERR(11)=$G(PXAA("CATEGORY"))
"RTN","PXAICPTV",70,0)
 S PXAERR(12)="We are unable to retrieve a narrative from the PROVIDER NARRATIVE file #9999999.27"
"RTN","PXAICPTV",71,0)
 Q
"RTN","PXAICPTV",72,0)
 ;---------------------SUBROUTINE------------------------------
"RTN","PXAICPTV",73,0)
ARRAY ;--SET ERRORS AND WARNINGS INTO AN ARRAY TO RETURN TO CALLER
"RTN","PXAICPTV",74,0)
 I PXADI("DIALOG")=8390001.001 D
"RTN","PXAICPTV",75,0)
 .S PXASUB=PXASUB+1
"RTN","PXAICPTV",76,0)
 .S PXAPROB($J,PXASUB,"ERROR1",PXAERR(7),PXAERR(9),PXAK)=$G(PXAERR(12))
"RTN","PXAICPTV",77,0)
 I PXADI("DIALOG")=8390001.002 D
"RTN","PXAICPTV",78,0)
 .S PXASUB=PXASUB+1
"RTN","PXAICPTV",79,0)
 .S PXAPROB($J,PXASUB,"WARNING2",PXAERR(7),PXAERR(9),PXAK)=$G(PXAERR(12))
"RTN","PXAICPTV",80,0)
 I PXADI("DIALOG")=8390001.003 D
"RTN","PXAICPTV",81,0)
 .S PXASUB=PXASUB+1
"RTN","PXAICPTV",82,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"SC")=$G(PXAERR("6W"))
"RTN","PXAICPTV",83,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"AO")=$G(PXAERR("7W"))
"RTN","PXAICPTV",84,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"IR")=$G(PXAERR("8W"))
"RTN","PXAICPTV",85,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"EC")=$G(PXAERR("9W"))
"RTN","PXAICPTV",86,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"MST")=$G(PXAERR("10W"))
"RTN","PXAICPTV",87,0)
 .;PX*1*111 - Add HNC
"RTN","PXAICPTV",88,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"HNC")=$G(PXAERR("17W"))
"RTN","PXAICPTV",89,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"CV")=$G(PXAERR("18W"))
"RTN","PXAICPTV",90,0)
 .S PXAPROB($J,PXASUB,"WARNING3","ENCOUNTER",1,"SHAD")=$G(PXAERR("19W"))
"RTN","PXAICPTV",91,0)
 I PXADI("DIALOG")=8390001.004 D
"RTN","PXAICPTV",92,0)
 .S PXASUB=PXASUB+1
"RTN","PXAICPTV",93,0)
 .S PXAPROB($J,PXASUB,"ERROR4","PX/DL",PXAK)=$G(PXAERR("PL1"))
"RTN","PXAICPTV",94,0)
 Q
"RTN","PXAIPL")
0^33^B4827876
"RTN","PXAIPL",1,0)
PXAIPL ;ISL/JVS - PROBLEM LIST ;2/4/05 5:15pm
"RTN","PXAIPL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**69,124,168**;Aug 12, 1996;Build 14
"RTN","PXAIPL",3,0)
 ;
"RTN","PXAIPL",4,0)
 ;
"RTN","PXAIPL",5,0)
 Q
"RTN","PXAIPL",6,0)
PL ;--ENTRY POINT TO EDIT PROBLEMS
"RTN","PXAIPL",7,0)
 ;
"RTN","PXAIPL",8,0)
 ;
"RTN","PXAIPL",9,0)
 Q:'$L($T(^GMPLUTL))
"RTN","PXAIPL",10,0)
 ;
"RTN","PXAIPL",11,0)
 N PXARRAY,RESULT
"RTN","PXAIPL",12,0)
DECIDE ;--DECIDE IF A PROBLEM
"RTN","PXAIPL",13,0)
 I $G(PXAA("PL ADD"))=1 G SET
"RTN","PXAIPL",14,0)
 I $G(PXAA("PL IEN"))>0 G SET
"RTN","PXAIPL",15,0)
 I $G(PXAA("PL ACTIVE"))]"" G SET
"RTN","PXAIPL",16,0)
 I $G(PXAA("PL ONSET DATE"))>0 G SET
"RTN","PXAIPL",17,0)
 I $G(PXAA("PL RESOLVED DATE"))>0 G SET
"RTN","PXAIPL",18,0)
 ;PX*1.0*124
"RTN","PXAIPL",19,0)
 ;I $G(PXAA("PL SC"))]"" G SET
"RTN","PXAIPL",20,0)
 ;I $G(PXAA("PL AO"))]"" G SET
"RTN","PXAIPL",21,0)
 ;I $G(PXAA("PL IR"))]"" G SET
"RTN","PXAIPL",22,0)
 ;I $G(PXAA("PL EC"))]"" G SET
"RTN","PXAIPL",23,0)
 ;I $G(PXAA("PL MST"))]"" G SET
"RTN","PXAIPL",24,0)
 ;I $G(PXAA("PL HNC"))]"" G SET
"RTN","PXAIPL",25,0)
 ;I $G(PXAA("PL CV"))]"" G SET
"RTN","PXAIPL",26,0)
 ;I $G(PXAA("PL SHAD"))]"" G SET
"RTN","PXAIPL",27,0)
 Q
"RTN","PXAIPL",28,0)
 ;
"RTN","PXAIPL",29,0)
 ;
"RTN","PXAIPL",30,0)
SET ;--REQUIRED
"RTN","PXAIPL",31,0)
 S PXARRAY("PATIENT")=$G(PATIENT)
"RTN","PXAIPL",32,0)
 S PXARRAY("NARRATIVE")=$G(PXAA("NARRATIVE"))
"RTN","PXAIPL",33,0)
 S PXARRAY("PROVIDER")=$G(PXAA("ENC PROVIDER"))
"RTN","PXAIPL",34,0)
 ;--OPTIONAL
"RTN","PXAIPL",35,0)
 S PXARRAY("DIAGNOSIS")=$G(PXAA("DIAGNOSIS"))
"RTN","PXAIPL",36,0)
 S PXARRAY("LEXICON")=$G(PXAA("LEXICON TERM"))
"RTN","PXAIPL",37,0)
 S PXARRAY("STATUS")=$G(PXAA("PL ACTIVE"))
"RTN","PXAIPL",38,0)
 S PXARRAY("ONSET")=$G(PXAA("PL ONSET DATE"))
"RTN","PXAIPL",39,0)
 I '$G(PXAA("PL IEN")) S PXARRAY("RECORDED")=$G(PXAA("EVENT D/T"))
"RTN","PXAIPL",40,0)
 S PXARRAY("RESOLVED")=$G(PXAA("PL RESOLVED DATE"))
"RTN","PXAIPL",41,0)
 S PXARRAY("COMMENT")=$G(PXAA("COMMENT"))
"RTN","PXAIPL",42,0)
 I $G(PXARRAY("COMMENT"))="@" S PXARRAY("COMMENT")=""
"RTN","PXAIPL",43,0)
 ;--LOCATION
"RTN","PXAIPL",44,0)
 S PXARRAY("LOCATION")=$P($G(^AUPNVSIT(PXAVISIT,0)),"^",22)
"RTN","PXAIPL",45,0)
 ;--SERVICE CONNECTEDNESS
"RTN","PXAIPL",46,0)
 S PXARRAY("SC")=$P(AFTER800,"^",1)
"RTN","PXAIPL",47,0)
 S PXARRAY("AO")=$P(AFTER800,"^",2)
"RTN","PXAIPL",48,0)
 S PXARRAY("IR")=$P(AFTER800,"^",3)
"RTN","PXAIPL",49,0)
 S PXARRAY("EC")=$P(AFTER800,"^",4)
"RTN","PXAIPL",50,0)
 S PXARRAY("MST")=$P(AFTER800,"^",5)
"RTN","PXAIPL",51,0)
 S PXARRAY("HNC")=$P(AFTER800,"^",6)
"RTN","PXAIPL",52,0)
 S PXARRAY("CV")=$P(AFTER800,"^",7)
"RTN","PXAIPL",53,0)
 S PXARRAY("SHAD")=$P(AFTER800,"^",8)
"RTN","PXAIPL",54,0)
 ;---MISC
"RTN","PXAIPL",55,0)
 S PXARRAY("PROBLEM")=$G(PXAA("PL IEN"))
"RTN","PXAIPL",56,0)
 ;
"RTN","PXAIPL",57,0)
 ;
"RTN","PXAIPL",58,0)
 ;
"RTN","PXAIPL",59,0)
RUN ;
"RTN","PXAIPL",60,0)
 D UPDATE^GMPLUTL(.PXARRAY,.RESULT)
"RTN","PXAIPL",61,0)
 I RESULT(0)="" S $P(AFTER0,"^",16)=RESULT
"RTN","PXAIPL",62,0)
 ;--**SET ERROR INTO DIALOG
"RTN","PXAIPL",63,0)
 I RESULT(0)]"" D
"RTN","PXAIPL",64,0)
 .S PXAERR("PL1")=$G(RESULT(0))
"RTN","PXAIPL",65,0)
 .S PXAERRF=1
"RTN","PXAIPL",66,0)
 .S PXADI("DIALOG")=8390001.004
"RTN","PXAIPL",67,0)
 Q
"RTN","PXAIPOV")
0^4^B22661224
"RTN","PXAIPOV",1,0)
PXAIPOV ;ISL/JVS,ESW - SET THE DIAGNOSIS/PROBLEM LIST NODES ;6/25/03 2:05pm
"RTN","PXAIPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**28,73,69,108,112,130,124,174,168**;Aug 12, 1996;Build 14
"RTN","PXAIPOV",3,0)
 ;
"RTN","PXAIPOV",4,0)
 Q
"RTN","PXAIPOV",5,0)
POV ;--CREATE DIAGNOSIS
"RTN","PXAIPOV",6,0)
 ;
"RTN","PXAIPOV",7,0)
SET ;--SET AND NEW VARIABLES
"RTN","PXAIPOV",8,0)
 N AFTER0,AFTER12,AFTER800,AFTER801,AFTER811,AFTER802,AFTER812
"RTN","PXAIPOV",9,0)
 N BEFOR0,BEFOR12,BEFOR800,BEFOR801,BEFOR811,BEFOR802,BEFOR812
"RTN","PXAIPOV",10,0)
 N PXAA,PXAB,SUB,PIECE,PXAAX,IENB,STOP,VAR,AFTER8A
"RTN","PXAIPOV",11,0)
 N FPRI,J,LNARR,GMPSAVED,NOPLLIST,PXDIGNS,VAR,PRI
"RTN","PXAIPOV",12,0)
 N POVI,PRVDR,PXBCNT,PXBCNTPL,PXBKY,PXBPMT,PXBSAM,PXBSKY,PXKDONE
"RTN","PXAIPOV",13,0)
 ;
"RTN","PXAIPOV",14,0)
 K PXAERR
"RTN","PXAIPOV",15,0)
 S PXAERR(8)=PXAK
"RTN","PXAIPOV",16,0)
 S PXAERR(7)="DX/PL"
"RTN","PXAIPOV",17,0)
 ;
"RTN","PXAIPOV",18,0)
 S SUB="" F  S SUB=$O(@PXADATA@("DX/PL",PXAK,SUB)) Q:SUB=""  D
"RTN","PXAIPOV",19,0)
 .S PXAA(SUB)=@PXADATA@("DX/PL",PXAK,SUB)
"RTN","PXAIPOV",20,0)
 ;
"RTN","PXAIPOV",21,0)
 ;--VALIDATE ENOUGH DATA
"RTN","PXAIPOV",22,0)
 D VAL^PXAIPOVV Q:$G(STOP)
"RTN","PXAIPOV",23,0)
 ;
"RTN","PXAIPOV",24,0)
SETVARA ;--SET VISIT VARIABLES
"RTN","PXAIPOV",25,0)
 S $P(AFTER0,"^",1)=$G(PXAA("DIAGNOSIS"))
"RTN","PXAIPOV",26,0)
 I $G(PXAA("DELETE")) S $P(AFTER0,"^",1)="@"
"RTN","PXAIPOV",27,0)
 S $P(AFTER0,"^",2)=$G(PATIENT),PXAA("PATIENT")=$G(PATIENT)
"RTN","PXAIPOV",28,0)
 S $P(AFTER0,"^",3)=$G(PXAVISIT)
"RTN","PXAIPOV",29,0)
 S $P(AFTER0,"^",4)=$G(PXAA("NARRATIVE")) D
"RTN","PXAIPOV",30,0)
 .I $G(PXAA("NARRATIVE"))']""!($L($G(PXAA("NARRATIVE")))>245) D
"RTN","PXAIPOV",31,0)
 ..S PXAA("NARRATIVE")=$$EXTTEXT^PXUTL1($G(PXAA("DIAGNOSIS")),1,80,10,3) ;--TEXT OF NARRATIVE
"RTN","PXAIPOV",32,0)
 .S $P(AFTER0,"^",4)=+$$PROVNARR^PXAPI($G(PXAA("NARRATIVE")),9000010.07)
"RTN","PXAIPOV",33,0)
 ;PX*1*124
"RTN","PXAIPOV",34,0)
 S $P(AFTER0,"^",12)=$S($G(PXAA("PRIMARY"))=1:"P",$G(PXAA("PRIMARY"))="P":"P",1:"S")
"RTN","PXAIPOV",35,0)
 ;--ADDED FOR PATCH 28
"RTN","PXAIPOV",36,0)
 S $P(AFTER0,"^",15)=$G(PXAA("LEXICON TERM"))
"RTN","PXAIPOV",37,0)
 S $P(AFTER0,"^",16)=$G(PXAA("PL IEN"))
"RTN","PXAIPOV",38,0)
 S $P(AFTER0,"^",17)=$G(PXAA("ORD/RES"))
"RTN","PXAIPOV",39,0)
 ;--END OF NEW PATCH 28
"RTN","PXAIPOV",40,0)
 S $P(AFTER12,"^",1)=$G(PXAA("EVENT D/T"))
"RTN","PXAIPOV",41,0)
 S $P(AFTER12,"^",4)=$G(PXAA("ENC PROVIDER"))
"RTN","PXAIPOV",42,0)
 ;PX*1*108
"RTN","PXAIPOV",43,0)
 I $G(PXAA("ENC PROVIDER"))]"",'$G(PXAA("DELETE")) D
"RTN","PXAIPOV",44,0)
 .S ^TMP("PXAIADDPRV",$J,$G(PXAA("ENC PROVIDER")))=""
"RTN","PXAIPOV",45,0)
 ;
"RTN","PXAIPOV",46,0)
 I $G(PXAA("CATEGORY"))]"" S $P(AFTER802,"^",1)=+$$PROVNARR^PXAPI($G(PXAA("CATEGORY")),9000010.07)
"RTN","PXAIPOV",47,0)
 S $P(AFTER811,"^",1)=$G(PXAA("COMMENT"))
"RTN","PXAIPOV",48,0)
 ;
"RTN","PXAIPOV",49,0)
 S $P(AFTER800,"^",1)=$G(PXAA("PL SC"))
"RTN","PXAIPOV",50,0)
 S $P(AFTER800,"^",2)=$G(PXAA("PL AO"))
"RTN","PXAIPOV",51,0)
 S $P(AFTER800,"^",3)=$G(PXAA("PL IR"))
"RTN","PXAIPOV",52,0)
 S $P(AFTER800,"^",4)=$G(PXAA("PL EC"))
"RTN","PXAIPOV",53,0)
 S $P(AFTER800,"^",5)=$G(PXAA("PL MST"))
"RTN","PXAIPOV",54,0)
 S $P(AFTER800,"^",6)=$G(PXAA("PL HNC"))
"RTN","PXAIPOV",55,0)
 S $P(AFTER800,"^",7)=$G(PXAA("PL CV"))
"RTN","PXAIPOV",56,0)
 S $P(AFTER800,"^",8)=$G(PXAA("PL SHAD"))
"RTN","PXAIPOV",57,0)
 ;
"RTN","PXAIPOV",58,0)
 D SCC^PXUTLSCC(PATIENT,$P($G(^AUPNVSIT(PXAVISIT,0)),"^",1),$P($G(^AUPNVSIT(PXAVISIT,0)),"^",22),$G(PXAVISIT),AFTER800,.AFTER800)
"RTN","PXAIPOV",59,0)
 ;
"RTN","PXAIPOV",60,0)
 I $G(PXAA("PL SC"))="" S $P(AFTER800,"^",1)=""
"RTN","PXAIPOV",61,0)
 I $G(PXAA("PL AO"))="" S $P(AFTER800,"^",2)=""
"RTN","PXAIPOV",62,0)
 I $G(PXAA("PL IR"))="" S $P(AFTER800,"^",3)=""
"RTN","PXAIPOV",63,0)
 I $G(PXAA("PL EC"))="" S $P(AFTER800,"^",4)=""
"RTN","PXAIPOV",64,0)
 I $G(PXAA("PL MST"))="" S $P(AFTER800,"^",5)=""
"RTN","PXAIPOV",65,0)
 I $G(PXAA("PL HNC"))="" S $P(AFTER800,"^",6)=""
"RTN","PXAIPOV",66,0)
 I $G(PXAA("PL CV"))="" S $P(AFTER800,"^",7)=""
"RTN","PXAIPOV",67,0)
 I $G(PXAA("PL SHAD"))="" S $P(AFTER800,"^",8)=""
"RTN","PXAIPOV",68,0)
 ;
"RTN","PXAIPOV",69,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIPOV",70,0)
 S $P(AFTER812,"^",2)=$G(PXAPKG)
"RTN","PXAIPOV",71,0)
 ;
"RTN","PXAIPOV",72,0)
 D PL^PXAIPL
"RTN","PXAIPOV",73,0)
 ;
"RTN","PXAIPOV",74,0)
 ;
"RTN","PXAIPOV",75,0)
SETPXKA ;--SET PXK ARRAY AFTER
"RTN","PXAIPOV",76,0)
 S ^TMP("PXK",$J,"POV",PXAK,0,"AFTER")=$G(AFTER0)
"RTN","PXAIPOV",77,0)
 S ^TMP("PXK",$J,"POV",PXAK,12,"AFTER")=$G(AFTER12)
"RTN","PXAIPOV",78,0)
 S ^TMP("PXK",$J,"POV",PXAK,800,"AFTER")=$G(AFTER800)
"RTN","PXAIPOV",79,0)
 S ^TMP("PXK",$J,"POV",PXAK,802,"AFTER")=$G(AFTER802)
"RTN","PXAIPOV",80,0)
 S ^TMP("PXK",$J,"POV",PXAK,811,"AFTER")=$G(AFTER811)
"RTN","PXAIPOV",81,0)
 S ^TMP("PXK",$J,"POV",PXAK,812,"AFTER")=$G(AFTER812)
"RTN","PXAIPOV",82,0)
 ;
"RTN","PXAIPOV",83,0)
SETVARB ;--SET VARIABLES BEFORE
"RTN","PXAIPOV",84,0)
 ;
"RTN","PXAIPOV",85,0)
 ;--GET IEN FOR 'PXK NODE'
"RTN","PXAIPOV",86,0)
 D POV^PXBGPOV(PXAVISIT)
"RTN","PXAIPOV",87,0)
 I $D(^TMP("PXBGPOVMATCH",$J,$G(PXAA("DIAGNOSIS")))) D
"RTN","PXAIPOV",88,0)
 .S (^TMP("PXK",$J,"POV",PXAK,"IEN"),IENB)=$O(^TMP("PXBGPOVMATCH",$J,$G(PXAA("DIAGNOSIS")),0))
"RTN","PXAIPOV",89,0)
 K ^TMP("PXBGPOVMATCH",$J)
"RTN","PXAIPOV",90,0)
 ;
"RTN","PXAIPOV",91,0)
BEFOR ;
"RTN","PXAIPOV",92,0)
 I $G(IENB) D
"RTN","PXAIPOV",93,0)
 .F PIECE=0,12,800,802,811 S ^TMP("PXK",$J,"POV",PXAK,PIECE,"BEFORE")=$G(^AUPNVPOV(IENB,PIECE))
"RTN","PXAIPOV",94,0)
 .K ^TMP("PXK",$J,"POV",PXAK,812)
"RTN","PXAIPOV",95,0)
 E  D
"RTN","PXAIPOV",96,0)
 .S (BEFOR0,BEFOR12,BEFOR800,BEFOR802,BEFOR811,BEFOR812)=""
"RTN","PXAIPOV",97,0)
 .;
"RTN","PXAIPOV",98,0)
SETPXKB .;--SET PXK ARRAY BEFORE
"RTN","PXAIPOV",99,0)
 .S ^TMP("PXK",$J,"POV",PXAK,0,"BEFORE")=$G(BEFOR0)
"RTN","PXAIPOV",100,0)
 .S ^TMP("PXK",$J,"POV",PXAK,12,"BEFORE")=$G(BEFOR12)
"RTN","PXAIPOV",101,0)
 .S ^TMP("PXK",$J,"POV",PXAK,800,"BEFORE")=$G(BEFOR800)
"RTN","PXAIPOV",102,0)
 .S ^TMP("PXK",$J,"POV",PXAK,802,"BEFORE")=$G(BEFOR802)
"RTN","PXAIPOV",103,0)
 .S ^TMP("PXK",$J,"POV",PXAK,811,"BEFORE")=$G(BEFOR811)
"RTN","PXAIPOV",104,0)
 .S ^TMP("PXK",$J,"POV",PXAK,812,"BEFORE")=$G(BEFOR812)
"RTN","PXAIPOV",105,0)
 .S ^TMP("PXK",$J,"POV",PXAK,"IEN")=""
"RTN","PXAIPOV",106,0)
 ;
"RTN","PXAIPOV",107,0)
MISC ;--MISCELLANEOUS NODE
"RTN","PXAIPOV",108,0)
 ;
"RTN","PXAIPOV",109,0)
 Q
"RTN","PXAIPOV",110,0)
PRIM ;--SET A PROVIDER AS PRIMARY
"RTN","PXAIPOV",111,0)
 N PXBCNT,PXBKY,PXBSAM,PXBSKY,PRVDR,FPRI ;108
"RTN","PXAIPOV",112,0)
 D PRV^PXBGPRV(PXAVISIT,.PXBSKY,.PXBKY,.PXBSAM,.PXBCNT,.PRVDR,.FPRI) ;108
"RTN","PXAIPOV",113,0)
 I $D(PRVDR) Q
"RTN","PXAIPOV",114,0)
 I '$D(PXBSKY) Q
"RTN","PXAIPOV",115,0)
 ;
"RTN","PXAIPOV",116,0)
 S $P(AFTER0,"^",1)=$P(^AUPNVPRV($O(PXBSKY(1,0)),0),"^",1)
"RTN","PXAIPOV",117,0)
 S $P(AFTER0,"^",2)=$P(^AUPNVSIT(PXAVISIT,0),"^",5)
"RTN","PXAIPOV",118,0)
 S $P(AFTER0,"^",3)=PXAVISIT
"RTN","PXAIPOV",119,0)
 S $P(AFTER0,"^",4)="P"
"RTN","PXAIPOV",120,0)
 S ^TMP("PXK",$J,"PRV",22222,0,"AFTER")=AFTER0
"RTN","PXAIPOV",121,0)
 S ^TMP("PXK",$J,"PRV",22222,0,"BEFORE")=$G(^AUPNVPRV($O(PXBSKY(1,0)),0))
"RTN","PXAIPOV",122,0)
 S ^TMP("PXK",$J,"PRV",22222,"IEN")=$O(PXBSKY(1,0))
"RTN","PXAIPOV",123,0)
 D EN1^PXKMAIN
"RTN","PXAIPOV",124,0)
 K PXRDR
"RTN","PXAIPOV",125,0)
 K ^TMP("PXBGPOVMATCH",$J)
"RTN","PXAIPOV",126,0)
 Q
"RTN","PXAIVST")
0^5^B16100089
"RTN","PXAIVST",1,0)
PXAIVST ;ISL/JVS,KWP,ESW - GET A VISIT FROM ENCOUNTER NODE ;11/20/02 4:38pm
"RTN","PXAIVST",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**5,9,15,74,111,96,130,124,164,168**;Aug 12, 1996;Build 14
"RTN","PXAIVST",3,0)
 ;
"RTN","PXAIVST",4,0)
 ;
"RTN","PXAIVST",5,0)
 Q
"RTN","PXAIVST",6,0)
VST ;--CREAT A VISIT
"RTN","PXAIVST",7,0)
 ;
"RTN","PXAIVST",8,0)
SET ;--SET AND NEW VARIABLES
"RTN","PXAIVST",9,0)
 N AFTER0,AFTER21,AFTER800,AFTER150,BEFOR0,BEFOR21,BEFOR800,BEFOR150
"RTN","PXAIVST",10,0)
 N AFTER811,BEFOR811,BEFOR812
"RTN","PXAIVST",11,0)
 N PXAA,PXAB,SUB,PIECE,STOP
"RTN","PXAIVST",12,0)
 N AFTER8A,AFTER812
"RTN","PXAIVST",13,0)
 ;
"RTN","PXAIVST",14,0)
 S SUB="" F  S SUB=$O(@PXADATA@("ENCOUNTER",1,SUB)) Q:SUB=""  D
"RTN","PXAIVST",15,0)
 .S PXAA(SUB)=@PXADATA@("ENCOUNTER",1,SUB)
"RTN","PXAIVST",16,0)
 ;
"RTN","PXAIVST",17,0)
 S (AFTER812,BEFOR812)=""
"RTN","PXAIVST",18,0)
 ;
"RTN","PXAIVST",19,0)
 S PXAK=1
"RTN","PXAIVST",20,0)
 S PXAERR(8)=1
"RTN","PXAIVST",21,0)
 S PXAERR(7)="ENCOUNTER"
"RTN","PXAIVST",22,0)
 ;
"RTN","PXAIVST",23,0)
VAL ;--VALIDATE ENOUGH DATA
"RTN","PXAIVST",24,0)
 I $D(@PXADATA@("ENCOUNTER")) D VAL^PXAIVSTV Q:$G(STOP)
"RTN","PXAIVST",25,0)
 I $G(PXAVISIT) S (PATIENT,PXAA("PATIENT"))=$P(^AUPNVSIT(PXAVISIT,0),"^",5) S PXAA("ENC D/T")=$P(^AUPNVSIT(PXAVISIT,0),"^",1) S PXAA("HOS LOC")=$P(^AUPNVSIT(PXAVISIT,0),"^",22)
"RTN","PXAIVST",26,0)
 ;
"RTN","PXAIVST",27,0)
SETVARA ;--SET VISIT VARIABLES
"RTN","PXAIVST",28,0)
 S $P(AFTER0,"^",1)=$G(PXAA("ENC D/T"))
"RTN","PXAIVST",29,0)
 ;PX*1*96 - Set TYPE (Piece #3) according to following;
"RTN","PXAIVST",30,0)
 ; 1. If OUTSIDE LOCATION then TYPE is "O"
"RTN","PXAIVST",31,0)
 ; 2. If no OUTSIDE LOCATION but INSTITUTION then TYPE is "V"
"RTN","PXAIVST",32,0)
 ; 3. Else set to value of DUZ("AG")
"RTN","PXAIVST",33,0)
 ;Set TYPE
"RTN","PXAIVST",34,0)
 I $L($G(PXAA("OUTSIDE LOCATION"))) S $P(AFTER0,U,3)="O"
"RTN","PXAIVST",35,0)
 E  I $L($G(PXAA("INSTITUTION"))) S $P(AFTER0,U,3)="V"
"RTN","PXAIVST",36,0)
 E  S $P(AFTER0,U,3)=$G(DUZ("AG"))
"RTN","PXAIVST",37,0)
 S $P(AFTER0,"^",5)=$G(PXAA("PATIENT"))
"RTN","PXAIVST",38,0)
 S $P(AFTER0,"^",6)=$G(PXAA("INSTITUTION"))
"RTN","PXAIVST",39,0)
 S $P(AFTER0,"^",7)=$G(PXAA("SERVICE CATEGORY"))
"RTN","PXAIVST",40,0)
 S $P(AFTER0,"^",8)="" ;$G(PXAA("DSS ID"))
"RTN","PXAIVST",41,0)
 S $P(AFTER0,"^",12)=$G(PXAA("PARENT"))
"RTN","PXAIVST",42,0)
 S $P(AFTER0,"^",18)=$G(PXAA("CHECKOUT D/T"))
"RTN","PXAIVST",43,0)
 S $P(AFTER0,"^",21)=$G(PXAA("ELIGIBILITY"))
"RTN","PXAIVST",44,0)
 S $P(AFTER0,"^",26)=$S($G(PXACCNT)>0:$G(PXACCNT),1:"") ;PX*1.0*164
"RTN","PXAIVST",45,0)
 S $P(PXELAP,"^",1)=$G(PXAA("ELIGIBILITY"))
"RTN","PXAIVST",46,0)
 S $P(PXELAP,"^",3)=$G(PXAA("APPT"))
"RTN","PXAIVST",47,0)
 S $P(AFTER0,"^",22)=$G(PXAA("HOS LOC"))
"RTN","PXAIVST",48,0)
 S $P(AFTER800,"^",1)=$G(PXAA("SC"))
"RTN","PXAIVST",49,0)
 S $P(AFTER800,"^",2)=$G(PXAA("AO"))
"RTN","PXAIVST",50,0)
 S $P(AFTER800,"^",3)=$G(PXAA("IR"))
"RTN","PXAIVST",51,0)
 S $P(AFTER800,"^",4)=$G(PXAA("EC"))
"RTN","PXAIVST",52,0)
 S $P(AFTER800,"^",5)=$G(PXAA("MST"))
"RTN","PXAIVST",53,0)
 ;PX*1*111 - Add HNC
"RTN","PXAIVST",54,0)
 S $P(AFTER800,"^",6)=$G(PXAA("HNC"))
"RTN","PXAIVST",55,0)
 S $P(AFTER800,"^",7)=$G(PXAA("CV"))
"RTN","PXAIVST",56,0)
 S $P(AFTER800,"^",8)=$G(PXAA("SHAD"))
"RTN","PXAIVST",57,0)
 ;--VALIDATE SERVICE CONNECTEDNESS
"RTN","PXAIVST",58,0)
 ;
"RTN","PXAIVST",59,0)
 S AFTER8A=AFTER800 D VALSCC^PXAIVSTV
"RTN","PXAIVST",60,0)
 S AFTER800=AFTER8A
"RTN","PXAIVST",61,0)
 ;
"RTN","PXAIVST",62,0)
 S $P(AFTER21,"^",1)=$G(PXAA("OUTSIDE LOCATION")) ;PX/96
"RTN","PXAIVST",63,0)
 S $P(AFTER150,"^",3)=$G(PXAA("ENCOUNTER TYPE"))
"RTN","PXAIVST",64,0)
 S $P(AFTER811,"^",1)=$G(PXAA("COMMENT"))
"RTN","PXAIVST",65,0)
 S $P(AFTER812,"^",3)=$G(PXASOURC)
"RTN","PXAIVST",66,0)
SETPXKA ;--SET PXK ARRAY AFTER
"RTN","PXAIVST",67,0)
 S ^TMP("PXK",$J,"VST",1,0,"AFTER")=AFTER0
"RTN","PXAIVST",68,0)
 S ^TMP("PXK",$J,"VST",1,21,"AFTER")=AFTER21
"RTN","PXAIVST",69,0)
 S ^TMP("PXK",$J,"VST",1,150,"AFTER")=AFTER150
"RTN","PXAIVST",70,0)
 S ^TMP("PXK",$J,"VST",1,800,"AFTER")=AFTER800
"RTN","PXAIVST",71,0)
 S ^TMP("PXK",$J,"VST",1,811,"AFTER")=AFTER811
"RTN","PXAIVST",72,0)
 S ^TMP("PXK",$J,"VST",1,812,"AFTER")=AFTER812
"RTN","PXAIVST",73,0)
SETVARB ;--SET VARIABLES BEFORE
"RTN","PXAIVST",74,0)
 I $G(PXAVISIT) D
"RTN","PXAIVST",75,0)
 .F PIECE=0,21,150,800,811,812 S ^TMP("PXK",$J,"VST",1,PIECE,"BEFORE")=$G(^AUPNVSIT(PXAVISIT,PIECE))
"RTN","PXAIVST",76,0)
 .I '$D(@PXADATA@("ENCOUNTER")) D
"RTN","PXAIVST",77,0)
 ..F PIECE=0,21,150,800,811,812 S ^TMP("PXK",$J,"VST",1,PIECE,"AFTER")=$G(^AUPNVSIT(PXAVISIT,PIECE))
"RTN","PXAIVST",78,0)
 E  D
"RTN","PXAIVST",79,0)
 .S (BEFOR0,BEFOR21,BEFOR150,BEFOR800,BEFOR811)=""
"RTN","PXAIVST",80,0)
 .;
"RTN","PXAIVST",81,0)
SETPXKB .;--SET PXK ARRAY BEFORE
"RTN","PXAIVST",82,0)
 .S ^TMP("PXK",$J,"VST",1,0,"BEFORE")=BEFOR0
"RTN","PXAIVST",83,0)
 .S ^TMP("PXK",$J,"VST",1,21,"BEFORE")=BEFOR21
"RTN","PXAIVST",84,0)
 .S ^TMP("PXK",$J,"VST",1,150,"BEFORE")=BEFOR150
"RTN","PXAIVST",85,0)
 .S ^TMP("PXK",$J,"VST",1,800,"BEFORE")=BEFOR800
"RTN","PXAIVST",86,0)
 .S ^TMP("PXK",$J,"VST",1,811,"BEFORE")=BEFOR811
"RTN","PXAIVST",87,0)
 .S ^TMP("PXK",$J,"VST",1,812,"BEFORE")=BEFOR812
"RTN","PXAIVST",88,0)
MISC ;--MISCELLANEOUS NODE
"RTN","PXAIVST",89,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=$G(PXAVISIT)
"RTN","PXAIVST",90,0)
 ;
"RTN","PXAIVST",91,0)
CALL ;--CALL
"RTN","PXAIVST",92,0)
 S PXALOOK=$$LOOKVSIT^PXUTLVST($P(AFTER0,U,5),$P(AFTER0,U),$P(AFTER0,U,22),$P(AFTER0,"^",8),$P(AFTER0,U,6)) I $G(PXALOOK)>0 S PXAVISIT=PXALOOK ;PX/96 - included INSTITUTION - $P(AFTER0,U,6)
"RTN","PXAIVST",93,0)
 D EN1^PXKMAIN
"RTN","PXAIVST",94,0)
 I '$G(PXAVISIT) S PXAVISIT=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXAIVST",95,0)
 Q
"RTN","PXAIVSTV")
0^6^B58723287
"RTN","PXAIVSTV",1,0)
PXAIVSTV ;ISL/JVS,ISA/KWP - VALIDATE THE VISIT DATA ;4/23/04 11:54am
"RTN","PXAIVSTV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**9,15,19,74,111,116,130,124,168**;Aug 12, 1996;Build 14
"RTN","PXAIVSTV",3,0)
 ;
"RTN","PXAIVSTV",4,0)
 ;
"RTN","PXAIVSTV",5,0)
 Q
"RTN","PXAIVSTV",6,0)
VALSCC ;--VALIDATE SERVICE CONNECTIVENESS
"RTN","PXAIVSTV",7,0)
 N ERR,ERR1
"RTN","PXAIVSTV",8,0)
 D SCC^PXUTLSCC($G(PXAA("PATIENT")),$G(PXAA("ENC D/T")),$G(PXAA("HOS LOC")),$G(PXAVISIT),$G(AFTER800),.AFTER8A,.ERR)
"RTN","PXAIVSTV",9,0)
 ;PX*1*111 - Add HNC
"RTN","PXAIVSTV",10,0)
 I $P(ERR,"^",1)=0,$P(ERR,"^",2)=0,$P(ERR,"^",3)=0,$P(ERR,"^",4)=0,$P(ERR,"^",5)=0,$P(ERR,"^",6)=0,$P(ERR,"^",7)=0,$P(ERR,"^",8)=0 Q
"RTN","PXAIVSTV",11,0)
 S PXADI("DIALOG")=8390001.003
"RTN","PXAIVSTV",12,0)
 S PXAERRF=1
"RTN","PXAIVSTV",13,0)
 S PXAERR("1W")=$S($P(AFTER800,"^",1)']"":"NULL",1:$P(AFTER800,"^",1))
"RTN","PXAIVSTV",14,0)
 S PXAERR("2W")=$S($P(AFTER800,"^",2)']"":"NULL",1:$P(AFTER800,"^",2))
"RTN","PXAIVSTV",15,0)
 S PXAERR("3W")=$S($P(AFTER800,"^",3)']"":"NULL",1:$P(AFTER800,"^",3))
"RTN","PXAIVSTV",16,0)
 S PXAERR("4W")=$S($P(AFTER800,"^",4)']"":"NULL",1:$P(AFTER800,"^",4))
"RTN","PXAIVSTV",17,0)
 S PXAERR("5W")=$S($P(AFTER800,"^",5)']"":"NULL",1:$P(AFTER800,"^",5))
"RTN","PXAIVSTV",18,0)
 ;PX*1*111 - Add HNC
"RTN","PXAIVSTV",19,0)
 S PXAERR("16W")=$S($P(AFTER800,"^",6)']"":"NULL",1:$P(AFTER800,"^",6))
"RTN","PXAIVSTV",20,0)
 S PXAERR("19W")=$S($P(AFTER800,"^",7)']"":"NULL",1:$P(AFTER800,"^",7))
"RTN","PXAIVSTV",21,0)
 S PXAERR("22W")=$S($P(AFTER800,"^",8)']"":"NULL",1:$P(AFTER800,"^",8))
"RTN","PXAIVSTV",22,0)
 S ERR1=$P(ERR,"^",1),PXAERR("6W")=$S(ERR1=1:"Should be a YES or NO!, not NULL",ERR1=0:"No error",ERR1=-1:"Not a valid value",ERR1=-2:"Value must be NULL",ERR1=-3:"Must be NULL because Service Connected is yes",1:"")
"RTN","PXAIVSTV",23,0)
 S ERR1=$P(ERR,"^",2),PXAERR("7W")=$S(ERR1=1:"Should be a YES or NO!, not NULL",ERR1=0:"No error",ERR1=-1:"Not a valid value",ERR1=-2:"Value must be NULL",ERR1=-3:"Must be NULL because Service Connected is yes",1:"")
"RTN","PXAIVSTV",24,0)
 S ERR1=$P(ERR,"^",3),PXAERR("8W")=$S(ERR1=1:"Should be a YES or NO!, not NULL",ERR1=0:"No error",ERR1=-1:"Not a valid value",ERR1=-2:"Value must be NULL",ERR1=-3:"Must be NULL because Service Connected is yes",1:"")
"RTN","PXAIVSTV",25,0)
 S ERR1=$P(ERR,"^",4),PXAERR("9W")=$S(ERR1=1:"Should be a YES or NO!, not NULL",ERR1=0:"No error",ERR1=-1:"Not a valid value",ERR1=-2:"Value must be NULL",ERR1=-3:"Must be NULL because Service Connected is yes",1:"")
"RTN","PXAIVSTV",26,0)
 S ERR1=$P(ERR,"^",5),PXAERR("10W")=$S(ERR1=1:"Should be a YES or NO!, not NULL",ERR1=0:"No error",ERR1=-1:"Not a valid value",ERR1=-2:"Value must be NULL",ERR1=-3:"Must be NULL because Service Connected is yes",1:"")
"RTN","PXAIVSTV",27,0)
 ;PX*1*111 - Add HNC
"RTN","PXAIVSTV",28,0)
 S ERR1=$P(ERR,"^",6),PXAERR("17W")=$S(ERR1=1:"Should be a YES or NO!, not NULL",ERR1=0:"No error",ERR1=-1:"Not a valid value",ERR1=-2:"Value must be NULL",ERR1=-3:"Must be NULL because Service Connected is yes",1:"")
"RTN","PXAIVSTV",29,0)
 S ERR1=$P(ERR,"^",7),PXAERR("20W")=$S(ERR1=1:"Should be a YES or NO!, not NULL",ERR1=0:"No error",ERR1=-1:"Not a valid value",ERR1=-2:"Value must be NULL",ERR1=-3:"Must be NULL because Service Connected is yes",1:"")
"RTN","PXAIVSTV",30,0)
 S ERR1=$P(ERR,"^",8),PXAERR("23W")=$S(ERR1=1:"Should be a YES or NO!, not NULL",ERR1=0:"No error",ERR1=-1:"Not a valid value",ERR1=-2:"Value must be NULL",ERR1=-3:"Must be NULL because Service Connected is yes",1:"")
"RTN","PXAIVSTV",31,0)
 S PXAERR("11W")=$S($P(AFTER8A,"^",1)']"":"NULL",1:$P(AFTER8A,"^",1))
"RTN","PXAIVSTV",32,0)
 S PXAERR("12W")=$S($P(AFTER8A,"^",2)']"":"NULL",1:$P(AFTER8A,"^",2))
"RTN","PXAIVSTV",33,0)
 S PXAERR("13W")=$S($P(AFTER8A,"^",3)']"":"NULL",1:$P(AFTER8A,"^",3))
"RTN","PXAIVSTV",34,0)
 S PXAERR("14W")=$S($P(AFTER8A,"^",4)']"":"NULL",1:$P(AFTER8A,"^",4))
"RTN","PXAIVSTV",35,0)
 S PXAERR("15W")=$S($P(AFTER8A,"^",5)']"":"NULL",1:$P(AFTER8A,"^",5))
"RTN","PXAIVSTV",36,0)
 ;PX*1*111 - Add HNC
"RTN","PXAIVSTV",37,0)
 S PXAERR("18W")=$S($P(AFTER8A,"^",6)']"":"NULL",1:$P(AFTER8A,"^",6))
"RTN","PXAIVSTV",38,0)
 S PXAERR("21W")=$S($P(AFTER8A,"^",7)']"":"NULL",1:$P(AFTER8A,"^",7))
"RTN","PXAIVSTV",39,0)
 S PXAERR("24W")=$S($P(AFTER8A,"^",8)']"":"NULL",1:$P(AFTER8A,"^",8))
"RTN","PXAIVSTV",40,0)
 D ERR^PXAI K PXAERRF
"RTN","PXAIVSTV",41,0)
 Q
"RTN","PXAIVSTV",42,0)
 ;
"RTN","PXAIVSTV",43,0)
VAL ;--VALIDATE ENOUGH DATA
"RTN","PXAIVSTV",44,0)
 ;
"RTN","PXAIVSTV",45,0)
 ;---Is the visit sent TO US valid?
"RTN","PXAIVSTV",46,0)
 I $G(PXAVISIT) D  Q:$D(STOP)
"RTN","PXAIVSTV",47,0)
 .I '$D(^AUPNVSIT(PXAVISIT,0)) D  Q:$G(STOP)
"RTN","PXAIVSTV",48,0)
 ..S STOP=1
"RTN","PXAIVSTV",49,0)
 ..S PXAERRF=1
"RTN","PXAIVSTV",50,0)
 ..S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",51,0)
 ..S PXAERR(11)=$G(PXAVISIT)
"RTN","PXAIVSTV",52,0)
 ..S PXAERR(12)="The value that was sent to us is not a valid visit in the VISIT file # 9000010. The Patients name will be derived from the visit file and could cause the data to be given to the wrong patient if not correct."
"RTN","PXAIVSTV",53,0)
 ..S PXAERR(13)="If the correct VISIT isn't known, set the 'ENCOUNTER' array and we will look it up or create a correct one. Setting both at the same time will only add confusion as to what data is correct."
"RTN","PXAIVSTV",54,0)
 Q:$G(PXAVISIT)
"RTN","PXAIVSTV",55,0)
 ;
"RTN","PXAIVSTV",56,0)
 ;----Missing a date and time of visit
"RTN","PXAIVSTV",57,0)
 I $G(PXAA("ENC D/T"))']"" D  Q:$G(STOP)
"RTN","PXAIVSTV",58,0)
 .S STOP=1 ;--USED TO STOP DO LOOP
"RTN","PXAIVSTV",59,0)
 .S PXAERRF=1 ;--FLAG INDICATES THERE IS AN ERR
"RTN","PXAIVSTV",60,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",61,0)
 .S PXAERR(9)="ENC D/T"
"RTN","PXAIVSTV",62,0)
 .S PXAERR(11)=$G(PXAA("ENC D/T"))
"RTN","PXAIVSTV",63,0)
 .S PXAERR(12)="You are missing the date and time of the visit in FileManager internal format."
"RTN","PXAIVSTV",64,0)
 ;
"RTN","PXAIVSTV",65,0)
 ;----Missing Time and not Historical Visit
"RTN","PXAIVSTV",66,0)
 I $L($G(PXAA("ENC D/T")),".")=1,$G(PXAA("SERVICE CATEGORY"))'="E" D
"RTN","PXAIVSTV",67,0)
 .S STOP=1 ;--USED TO STOP DO LOOP
"RTN","PXAIVSTV",68,0)
 .S PXAERRF=1 ;--FLAG INDICATES THERE IS AN ERR
"RTN","PXAIVSTV",69,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",70,0)
 .S PXAERR(9)="ENC D/T"
"RTN","PXAIVSTV",71,0)
 .S PXAERR(11)=$G(PXAA("ENC D/T"))
"RTN","PXAIVSTV",72,0)
 .S PXAERR(12)="You are missing the TIME of the visit in FileManager internal format. Unless this is an HISTORICAL encounter, you must have the time."
"RTN","PXAIVSTV",73,0)
 ;
"RTN","PXAIVSTV",74,0)
 ;
"RTN","PXAIVSTV",75,0)
 ;
"RTN","PXAIVSTV",76,0)
 ;----MISSING a pointer to PATIENT/IHS FILE # 9000001
"RTN","PXAIVSTV",77,0)
 I $G(PXAA("PATIENT"))']"" D  Q:$G(STOP)
"RTN","PXAIVSTV",78,0)
 .S STOP=1
"RTN","PXAIVSTV",79,0)
 .S PXAERRF=1
"RTN","PXAIVSTV",80,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",81,0)
 .S PXAERR(9)="PATIENT"
"RTN","PXAIVSTV",82,0)
 .S PXAERR(11)=$G(PXAA("PATIENT"))
"RTN","PXAIVSTV",83,0)
 .S PXAERR(12)="Missing a pointer to the PATIENT/IHS file #9000001"
"RTN","PXAIVSTV",84,0)
 ;
"RTN","PXAIVSTV",85,0)
 ;
"RTN","PXAIVSTV",86,0)
 ;----Not a pointer to the PATIENT/IHS file #9000001
"RTN","PXAIVSTV",87,0)
 I '$D(^AUPNPAT($G(PXAA("PATIENT")),0)) D  Q:$G(STOP)
"RTN","PXAIVSTV",88,0)
 .S STOP=1
"RTN","PXAIVSTV",89,0)
 .S PXAERRF=1
"RTN","PXAIVSTV",90,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",91,0)
 .S PXAERR(9)="PATIENT"
"RTN","PXAIVSTV",92,0)
 .S PXAERR(11)=$G(PXAA("PATIENT"))
"RTN","PXAIVSTV",93,0)
 .S PXAERR(12)="This value is not a pointer to file PATIENT/IHS file # 9000001"
"RTN","PXAIVSTV",94,0)
 ;
"RTN","PXAIVSTV",95,0)
 ;---Missing required information
"RTN","PXAIVSTV",96,0)
 I $G(PXAA("OUTSIDE LOCATION"))']"",$G(PXAA("HOS LOC"))']"",$G(PXAA("SERVICE CATEGORY"))'="E" D  Q:$G(STOP)
"RTN","PXAIVSTV",97,0)
 .S STOP=1
"RTN","PXAIVSTV",98,0)
 .S PXAERRF=1
"RTN","PXAIVSTV",99,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",100,0)
 .S PXAERR(9)="HOS LOC or OUTSIDE LOC"
"RTN","PXAIVSTV",101,0)
 .S PXAERR(11)="BOTH ENTRIES ARE NULL AND SERVICE CATEGORY IS NOT ""E"""
"RTN","PXAIVSTV",102,0)
 .S PXAERR(12)="The HOSPITAL LOCATION (pointer to the HOSPITAL LOCATION file #44 ) needs to be sent in order to create a visit."
"RTN","PXAIVSTV",103,0)
 ;
"RTN","PXAIVSTV",104,0)
 ;---not a pointer to hospital location file
"RTN","PXAIVSTV",105,0)
 I $D(PXAA("HOS LOC")) D  Q:$G(STOP)
"RTN","PXAIVSTV",106,0)
 .I '$D(^SC($G(PXAA("HOS LOC")),0)) D  Q:$G(STOP)
"RTN","PXAIVSTV",107,0)
 ..S STOP=1
"RTN","PXAIVSTV",108,0)
 ..S PXAERRF=1
"RTN","PXAIVSTV",109,0)
 ..S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",110,0)
 ..S PXAERR(9)="HOS LOC"
"RTN","PXAIVSTV",111,0)
 ..S PXAERR(11)=$G(PXAA("HOS LOC"))
"RTN","PXAIVSTV",112,0)
 ..S PXAERR(12)="This HOSPITAL LOCATION is not a pointer to the HOSPITAL LOCATION file #44"
"RTN","PXAIVSTV",113,0)
 ;---hospital location is the dispositioning location
"RTN","PXAIVSTV",114,0)
 ;Allow a dispositioning location to be used
"RTN","PXAIVSTV",115,0)
 ;I $D(PXAA("HOS LOC")) D  Q:$G(STOP)   ;PX*1.0*116
"RTN","PXAIVSTV",116,0)
 ;.I $D(^PX(815,1,"DHL","B",$G(PXAA("HOS LOC")))) D  Q:$G(STOP)
"RTN","PXAIVSTV",117,0)
 ;..S STOP=1
"RTN","PXAIVSTV",118,0)
 ;..S PXAERRF=1
"RTN","PXAIVSTV",119,0)
 ;..S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",120,0)
 ;..S PXAERR(9)="HOS LOC"
"RTN","PXAIVSTV",121,0)
 ;..S PXAERR(11)=$G(PXAA("HOS LOC"))
"RTN","PXAIVSTV",122,0)
 ;..S PXAERR(12)="This HOSPITAL LOCATION is a dispositioning location and connot be used. Refer to entries in file#815 PCE PARAMETERS"
"RTN","PXAIVSTV",123,0)
 ;--Not a service category
"RTN","PXAIVSTV",124,0)
 I '$D(PXAA("SERVICE CATEGORY")) D  Q:$G(STOP)
"RTN","PXAIVSTV",125,0)
 .S STOP=1
"RTN","PXAIVSTV",126,0)
 .S PXAERRF=1
"RTN","PXAIVSTV",127,0)
 .S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",128,0)
 .S PXAERR(9)="SERVICE CATEGORY"
"RTN","PXAIVSTV",129,0)
 .S PXAERR(11)=$G(PXAA("SERVICE CATEGORY"))
"RTN","PXAIVSTV",130,0)
 .S PXAERR(12)="SERVICE CATEGORY is a required field"
"RTN","PXAIVSTV",131,0)
 Q
"RTN","PXAIVSTV",132,0)
 ;
"RTN","PXAIVSTV",133,0)
VPTR ;---Is the visit sent TO US valid?
"RTN","PXAIVSTV",134,0)
 I $G(PXAVISIT) D  Q:$D(STOP)
"RTN","PXAIVSTV",135,0)
 .I '$D(^AUPNVSIT(PXAVISIT,0)) D  Q:$G(STOP)
"RTN","PXAIVSTV",136,0)
 ..S STOP=1
"RTN","PXAIVSTV",137,0)
 ..S PXAK=1
"RTN","PXAIVSTV",138,0)
 ..S PXAERRF=1
"RTN","PXAIVSTV",139,0)
 ..S PXADI("DIALOG")=8390001.001
"RTN","PXAIVSTV",140,0)
 ..S PXAERR(7)="ENCOUNTER"
"RTN","PXAIVSTV",141,0)
 ..S PXAERR(9)="GENERAL NATURE"
"RTN","PXAIVSTV",142,0)
 ..S PXAERR(11)=$G(PXAVISIT)
"RTN","PXAIVSTV",143,0)
 ..S PXAERR(12)="The value that was sent to us is not a valid visit in the VISIT file # 9000010. The Patients name will be derived from the visit file and could cause the data to be given to the wrong patient if not correct."
"RTN","PXAIVSTV",144,0)
 ..S PXAERR(13)="If the correct VISIT isn't known, set the 'ENCOUNTER' array and we will look it up or create a correct one. Setting both at the same time will only add confusion as to what data is correct."
"RTN","PXAIVSTV",145,0)
 Q:$G(PXAVISIT)
"RTN","PXAIVSTV",146,0)
 Q
"RTN","PXAPIDEL")
0^24^B29773660
"RTN","PXAPIDEL",1,0)
PXAPIDEL ;ISL/dee - PCE's code for the DELVFILE api ;6/22/05
"RTN","PXAPIDEL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,9,22,130,168**;Aug 12, 1996;Build 14
"RTN","PXAPIDEL",3,0)
 Q
"RTN","PXAPIDEL",4,0)
 ;
"RTN","PXAPIDEL",5,0)
DELVFILE(PXAWHICH,PXAVISIT,PXAPKG,PXASOURC,PXAASK,PXAECHO,PXAUSER) ;Deletes the requesed data related to the visit.
"RTN","PXAPIDEL",6,0)
 ;  PXAWHICH is a ^ delimited string with the last two or three letters
"RTN","PXAPIDEL",7,0)
 ;           of the v-files to delete entries from and VISIT for the
"RTN","PXAPIDEL",8,0)
 ;           administative data on the visit and STOP for the stop codes.
"RTN","PXAPIDEL",9,0)
 ;           (e.g. for immunization the v-file is AUPNVIMM so IMM is
"RTN","PXAPIDEL",10,0)
 ;           passed.)  Or "ALL" to delete all of the data form the 
"RTN","PXAPIDEL",11,0)
 ;           V-Files, the Stop Code and Visit.
"RTN","PXAPIDEL",12,0)
 ;  PXAVISIT is pointer to a visit for which the related data is be
"RTN","PXAPIDEL",13,0)
 ;           deleted.
"RTN","PXAPIDEL",14,0)
 ;  PACKAGE  (optional) if passed will only delete items created by
"RTN","PXAPIDEL",15,0)
 ;           this package
"RTN","PXAPIDEL",16,0)
 ;  SOURCE   (optional) if passed will only delete items created by
"RTN","PXAPIDEL",17,0)
 ;           this source
"RTN","PXAPIDEL",18,0)
 ;  PXAASK   (optional) if passed and not 0 or "" then will ask the user
"RTN","PXAPIDEL",19,0)
 ;           if they are sure that they want to delete
"RTN","PXAPIDEL",20,0)
 ;           (suggest 1 if want to ask).
"RTN","PXAPIDEL",21,0)
 ;  PXAECHO  (optional) if passed and not 0 or "" then will display to
"RTN","PXAPIDEL",22,0)
 ;           the user what is being deleted (suggest 1 if want to echo).
"RTN","PXAPIDEL",23,0)
 ;  PXAUSER  (optional) this is the duz of a user if you only want to
"RTN","PXAPIDEL",24,0)
 ;           delete entries that this user created.  If it is not passed
"RTN","PXAPIDEL",25,0)
 ;           or is 0 or "" then it will not matter who created the
"RTN","PXAPIDEL",26,0)
 ;           entries being deleted.
"RTN","PXAPIDEL",27,0)
 ;
"RTN","PXAPIDEL",28,0)
 ; Returns:
"RTN","PXAPIDEL",29,0)
 ;   1  if no errors and process completely
"RTN","PXAPIDEL",30,0)
 ;   0  if errors occurred
"RTN","PXAPIDEL",31,0)
 ;      or try to delete something that was now allowed to delete
"RTN","PXAPIDEL",32,0)
 ;      but deletion processed completely as possible
"RTN","PXAPIDEL",33,0)
 ;  -1  if user said not to delete or user up arrows out
"RTN","PXAPIDEL",34,0)
 ;        or errors out. In any case nothing was delete.
"RTN","PXAPIDEL",35,0)
 ;  -2  if could not get a visit
"RTN","PXAPIDEL",36,0)
 ;  -3  if called incorrectly
"RTN","PXAPIDEL",37,0)
 ;  -4  if dependent entry count is still greater than zer0
"RTN","PXAPIDEL",38,0)
 ;
"RTN","PXAPIDEL",39,0)
 ;Good visit?
"RTN","PXAPIDEL",40,0)
 Q:'$G(PXAVISIT) -2
"RTN","PXAPIDEL",41,0)
 Q:'($D(^AUPNVSIT(PXAVISIT,0))#2) -2
"RTN","PXAPIDEL",42,0)
 ;
"RTN","PXAPIDEL",43,0)
 ;Get package pointer
"RTN","PXAPIDEL",44,0)
 S PACKAGE=$G(PACKAGE)
"RTN","PXAPIDEL",45,0)
 I PACKAGE="" S PXAPKG=0
"RTN","PXAPIDEL",46,0)
 E  I PACKAGE=+PACKAGE S PXAPKG=PACKAGE
"RTN","PXAPIDEL",47,0)
 E  S PXAPKG=$$PKG2IEN^VSIT(PACKAGE) I PXAPKG=-1 W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""PACKAGE"", contact IRM." Q -3
"RTN","PXAPIDEL",48,0)
 I PXAPKG>0,'($D(^DIC(9.4,PXAPKG,0))#2) W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""PACKAGE"", contact IRM." Q -3
"RTN","PXAPIDEL",49,0)
 ;
"RTN","PXAPIDEL",50,0)
 ;Lookup source in PCE DATA SOURCE file (#839.7) with LAYGO
"RTN","PXAPIDEL",51,0)
 S SOURCE=$G(SOURCE)
"RTN","PXAPIDEL",52,0)
 I SOURCE="" S PXASOURC=0
"RTN","PXAPIDEL",53,0)
 E  I SOURCE=+SOURCE S PXASOURC=SOURCE
"RTN","PXAPIDEL",54,0)
 E  S PXASOURC=$$SOURCE^PXAPIUTL(SOURCE)
"RTN","PXAPIDEL",55,0)
 I +PXASOURC=-1 W:'$D(ZTQUEUED) !,"Procedure ""DELVFILE^PXAPI"" was called incorrectly without a valid ""SOURCE"", contact IRM." Q -3
"RTN","PXAPIDEL",56,0)
 ;
"RTN","PXAPIDEL",57,0)
 K ^TMP("PXK",$J)
"RTN","PXAPIDEL",58,0)
 N PXACOUNT,PXAINDX,PXAVFILE,PXAFILE,PXARET,PXAWFLAG
"RTN","PXAPIDEL",59,0)
 N PXALEN,PXAIEN,PXAPIECE,PXAMYSOR
"RTN","PXAPIDEL",60,0)
 S PXARET=1
"RTN","PXAPIDEL",61,0)
 I PXAWHICH="ALL" S PXAWHICH="VISIT^STOP^CPT^IMM^PED^POV^PRV^SK^TRT^HF^XAM"
"RTN","PXAPIDEL",62,0)
 S PXALEN=$L(PXAWHICH,"^")
"RTN","PXAPIDEL",63,0)
 Q:PXALEN<1 -3
"RTN","PXAPIDEL",64,0)
 E  F PXACOUNT=1:1:PXALEN S PXAVFILE=$P(PXAWHICH,"^",PXACOUNT) D  Q:PXARET<0
"RTN","PXAPIDEL",65,0)
 . I "~VISIT~STOP~CPT~IMM~PED~POV~PRV~SK~TRT~HF~XAM~"'[("~"_PXAVFILE_"~") S PXARET=-3
"RTN","PXAPIDEL",66,0)
 Q:PXARET<0 PXARET
"RTN","PXAPIDEL",67,0)
 I PXAASK D  Q:PXARET<0 PXARET
"RTN","PXAPIDEL",68,0)
 . N DIR,X,Y
"RTN","PXAPIDEL",69,0)
 . ;ask the user if they want to delete
"RTN","PXAPIDEL",70,0)
 . S DIR(0)="Y"
"RTN","PXAPIDEL",71,0)
 . S DIR("A")="Are you sure you want to delete the encounter information"
"RTN","PXAPIDEL",72,0)
 . S DIR("B")="NO"
"RTN","PXAPIDEL",73,0)
 . D ^DIR
"RTN","PXAPIDEL",74,0)
 . I Y'=1 S PXARET=-1 Q
"RTN","PXAPIDEL",75,0)
 S PXAMYSOR=$$SOURCE^PXAPIUTL("PCE DELETE V-FILES API")
"RTN","PXAPIDEL",76,0)
 ;Do Stop Codes first
"RTN","PXAPIDEL",77,0)
 S PXAWFLAG=PXAECHO&'$D(ZTQUEUED)
"RTN","PXAPIDEL",78,0)
 I "^"_PXAWHICH_"^"["^STOP^" D
"RTN","PXAPIDEL",79,0)
 . S PXAIEN=0
"RTN","PXAPIDEL",80,0)
 . F PXACOUNT=0:1 S PXAIEN=$O(^AUPNVSIT("AD",PXAVISIT,PXAIEN)) Q:'PXAIEN  D
"RTN","PXAPIDEL",81,0)
 .. I PXAUSER>0,PXAUSER'=$P(^AUPNVSIT(PXAIEN,0),"^",23) Q
"RTN","PXAPIDEL",82,0)
 .. I PXAWFLAG S PXAWFLAG=0 W !,"   ...deleting Stop Codes"
"RTN","PXAPIDEL",83,0)
 .. I $$STOPCODE^PXUTLSTP(PXAMYSOR,"@",PXAVISIT,PXAIEN)
"RTN","PXAPIDEL",84,0)
 ;Set up the visit
"RTN","PXAPIDEL",85,0)
 S ^TMP("PXK",$J,"PKG")=PXAPKG
"RTN","PXAPIDEL",86,0)
 S ^TMP("PXK",$J,"SOR")=PXAMYSOR
"RTN","PXAPIDEL",87,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=PXAVISIT
"RTN","PXAPIDEL",88,0)
 F PXAPIECE=0,21,150,800,811 D
"RTN","PXAPIDEL",89,0)
 . S (^TMP("PXK",$J,"VST",1,PXAPIECE,"BEFORE"),^TMP("PXK",$J,"VST",1,PXAPIECE,"AFTER"))=$G(^AUPNVSIT(PXAVISIT,PXAPIECE))
"RTN","PXAPIDEL",90,0)
 ;
"RTN","PXAPIDEL",91,0)
 F PXACOUNT=1:1:PXALEN S PXAVFILE=$P(PXAWHICH,"^",PXACOUNT) D
"RTN","PXAPIDEL",92,0)
 . I PXAVFILE="VISIT" D
"RTN","PXAPIDEL",93,0)
 .. ;set fields to @
"RTN","PXAPIDEL",94,0)
 .. S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",18)="@"
"RTN","PXAPIDEL",95,0)
 .. F INDEX=1:1:8 S:$P(^TMP("PXK",$J,"VST",1,800,"AFTER"),"^",INDEX)]"" $P(^TMP("PXK",$J,"VST",1,800,"AFTER"),"^",INDEX)="@"
"RTN","PXAPIDEL",96,0)
 . E  I PXAVFILE="STOP" ;skip already done
"RTN","PXAPIDEL",97,0)
 . E  D  ;the v-files
"RTN","PXAPIDEL",98,0)
 .. S PXAWFLAG=PXAECHO&'$D(ZTQUEUED)
"RTN","PXAPIDEL",99,0)
 .. S PXAFILE=$P($T(FORMAT^@("PXCE"_$S(PXAVFILE="IMM":"VIMM",1:PXAVFILE))),"~",5)
"RTN","PXAPIDEL",100,0)
 .. S PXAIEN=0
"RTN","PXAPIDEL",101,0)
 .. F PXAINDX=1:1 S PXAIEN=$O(@(PXAFILE_"(""AD"",PXAVISIT,PXAIEN)")) Q:'PXAIEN  D
"RTN","PXAPIDEL",102,0)
 ... I $P($G(@(PXAFILE_"(PXAIEN,812)")),"^",1) S PXARET=0 Q
"RTN","PXAPIDEL",103,0)
 ... I PXAUSER>0,PXAUSER'=$P($P($P($G(@(PXAFILE_"(PXAIEN,801)")),"^",2),";",1)," ",2) Q
"RTN","PXAPIDEL",104,0)
 ... I PXAPKG>0,PXAPKG'=$P($G(@(PXAFILE_"(PXAIEN,812)")),"^",2) Q
"RTN","PXAPIDEL",105,0)
 ... I PXASOURC>0,PXASOURC'=$P($G(@(PXAFILE_"(PXAIEN,812)")),"^",3) Q
"RTN","PXAPIDEL",106,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,0,"BEFORE")=@(PXAFILE_"(PXAIEN,0)")
"RTN","PXAPIDEL",107,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,0,"AFTER")="@"
"RTN","PXAPIDEL",108,0)
 ... S ^TMP("PXK",$J,PXAVFILE,PXAINDX,"IEN")=PXAIEN
"RTN","PXAPIDEL",109,0)
 ... I PXAWFLAG D
"RTN","PXAPIDEL",110,0)
 .... S PXAWFLAG=0
"RTN","PXAPIDEL",111,0)
 .... W !,"   ...deleting "
"RTN","PXAPIDEL",112,0)
 .... W $S("CPT"=PXAVFILE:"Procedure","IMM"=PXAVFILE:"Immunizations","PED"=PXAVFILE:"Patient Education",1:"")
"RTN","PXAPIDEL",113,0)
 .... W $S("POV"=PXAVFILE:"Diagnoses","PRV"=PXAVFILE:"Providers","SK"=PXAVFILE:"Skin Test","TRT"=PXAVFILE:"Treatments","HF"=PXAVFILE:"Health Factors","XAM"=PXAVFILE:"Exams",1:"")
"RTN","PXAPIDEL",114,0)
 ;now process all the data except the stop codes which have already been done
"RTN","PXAPIDEL",115,0)
 N PXKERROR
"RTN","PXAPIDEL",116,0)
 I $D(^TMP("PXK",$J)) D
"RTN","PXAPIDEL",117,0)
 . I PXAECHO,'$D(ZTQUEUED) D WAIT^DICD
"RTN","PXAPIDEL",118,0)
 . D EN1^PXKMAIN
"RTN","PXAPIDEL",119,0)
 . D EVENT^PXKMAIN
"RTN","PXAPIDEL",120,0)
 . K ^TMP("PXK",$J)
"RTN","PXAPIDEL",121,0)
 N PXAKILL
"RTN","PXAPIDEL",122,0)
 I "^"_PXAWHICH_"^"["^VISIT^" D
"RTN","PXAPIDEL",123,0)
 . S PXAKILL=$$KILL^VSITKIL(PXAVISIT)
"RTN","PXAPIDEL",124,0)
 Q $S(PXARET=0!$D(PXKERROR):0,$G(PXAKILL):-4,1:1)
"RTN","PXAPIDEL",125,0)
 ;
"RTN","PXBAPI1")
0^1^B58108640
"RTN","PXBAPI1",1,0)
PXBAPI1 ;ISL/JVS,dee - PCE's API - interview questions ;5/6/05 2:59pm
"RTN","PXBAPI1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,9,23,56,104,111,113,122,116,130,147,151,124,164,182,168**;Aug 12, 1996;Build 14
"RTN","PXBAPI1",3,0)
 ;;
"RTN","PXBAPI1",4,0)
 Q
"RTN","PXBAPI1",5,0)
 ;
"RTN","PXBAPI1",6,0)
PROCESS(PXBEXIT) ;
"RTN","PXBAPI1",7,0)
 N PXBREQ
"RTN","PXBAPI1",8,0)
 I WHAT="INTV" D
"RTN","PXBAPI1",9,0)
 . ;-- Interview is all of the questions
"RTN","PXBAPI1",10,0)
 . D ADQ(.PXBEXIT) I PXBEXIT<1 Q 
"RTN","PXBAPI1",11,0)
1 . D PRV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",12,0)
3 . D POV(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",13,0)
2 . D CPT(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",14,0)
 . I $P($G(^AUPNVSIT($G(PXBVST),150)),"^",3)="O" S PXBEXIT=0 Q
"RTN","PXBAPI1",15,0)
 . I '$$DISPOSIT^PXUTL1($G(PXBPAT),$P($G(^AUPNVSIT(PXBVST,0)),"^",1),$G(PXBVST)) D STP(.PXBEXIT) I PXBEXIT<1 Q
"RTN","PXBAPI1",16,0)
 E  I WHAT="ADDEDIT" D
"RTN","PXBAPI1",17,0)
 . D ADDEDIT
"RTN","PXBAPI1",18,0)
 E  I WHAT="ADQ" D
"RTN","PXBAPI1",19,0)
 . ;-- Adminstrative questions
"RTN","PXBAPI1",20,0)
 . D ADQ(.PXBEXIT)
"RTN","PXBAPI1",21,0)
 E  I WHAT="CODT" D
"RTN","PXBAPI1",22,0)
 . ;-- Check out Date/Time
"RTN","PXBAPI1",23,0)
 . D CODT(.PXBEXIT)
"RTN","PXBAPI1",24,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",25,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",26,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",27,0)
 E  I WHAT="SCC" D
"RTN","PXBAPI1",28,0)
 . ;-- Service connected conditions
"RTN","PXBAPI1",29,0)
 . S PXCECAT="VST" D SCC(.PXBEXIT) K PXCECAT
"RTN","PXBAPI1",30,0)
 . Q:PXBEXIT<1
"RTN","PXBAPI1",31,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",32,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",33,0)
 E  I WHAT="PRV" D
"RTN","PXBAPI1",34,0)
 . ;-- Providers
"RTN","PXBAPI1",35,0)
 . D PRV(.PXBEXIT)
"RTN","PXBAPI1",36,0)
 E  I WHAT="CPT" D
"RTN","PXBAPI1",37,0)
 . ;-- Providers and CPT codes
"RTN","PXBAPI1",38,0)
 . D CPT(.PXBEXIT)
"RTN","PXBAPI1",39,0)
 E  I WHAT="POV" D
"RTN","PXBAPI1",40,0)
 . ;-- Diagnoses
"RTN","PXBAPI1",41,0)
 . D POV(.PXBEXIT)
"RTN","PXBAPI1",42,0)
 E  I WHAT="STP" D
"RTN","PXBAPI1",43,0)
 . ;-- Stop Codes
"RTN","PXBAPI1",44,0)
 . D STP(.PXBEXIT)
"RTN","PXBAPI1",45,0)
 E  S PXBEXIT=-3 W !,"Procedure ""INTV^PXAPI"" was called incorrectly, contact IRM."
"RTN","PXBAPI1",46,0)
 Q
"RTN","PXBAPI1",47,0)
 ;
"RTN","PXBAPI1",48,0)
ADDEDIT ;
"RTN","PXBAPI1",49,0)
 N PXANS
"RTN","PXBAPI1",50,0)
ADDEDIT1 ;
"RTN","PXBAPI1",51,0)
 D ADQ(.PXBEXIT)
"RTN","PXBAPI1",52,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",53,0)
 D PRV(.PXBEXIT)
"RTN","PXBAPI1",54,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",55,0)
 D POV(.PXBEXIT)
"RTN","PXBAPI1",56,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",57,0)
 ;
"RTN","PXBAPI1",58,0)
 ;Call to CPT is not determined by a credit stop code any more
"RTN","PXBAPI1",59,0)
 ;
"RTN","PXBAPI1",60,0)
 D CPT(.PXBEXIT)
"RTN","PXBAPI1",61,0)
 G:PXBEXIT<1 ADDEDIT2
"RTN","PXBAPI1",62,0)
 I PXBVST>0,'$D(^AUPNVCPT("AD",PXBVST)) D ADDEDIT3   ;PX*1.0*182
"RTN","PXBAPI1",63,0)
 Q   ; PX*1.0*182 added quit, otherwise user is forced to delete enc.
"RTN","PXBAPI1",64,0)
 ;
"RTN","PXBAPI1",65,0)
ADDEDIT2 ;
"RTN","PXBAPI1",66,0)
 I PXBVST>0,'$D(^AUPNVCPT("AD",PXBVST)),'$D(^AUPNVSIT("AD",PXBVST)) D  I PXANS'=1 S PXBEXIT=1 G ADDEDIT1
"RTN","PXBAPI1",67,0)
 . N DIR,X,Y
"RTN","PXBAPI1",68,0)
 . W !!
"RTN","PXBAPI1",69,0)
 . S DIR(0)="Y"
"RTN","PXBAPI1",70,0)
 . S DIR("A",1)="Must have a STOP CODE or a PROCEDURE to complete this action."
"RTN","PXBAPI1",71,0)
 . S DIR("A")="Do you want to delete this encounter"
"RTN","PXBAPI1",72,0)
 . S DIR("B")="NO"
"RTN","PXBAPI1",73,0)
 . D ^DIR
"RTN","PXBAPI1",74,0)
 . S PXANS=Y
"RTN","PXBAPI1",75,0)
 . Q:PXANS'=1
"RTN","PXBAPI1",76,0)
 . I $$DELVFILE^PXAPIDEL("ALL",PXBVST,"","","","","")=1 S PXBEXIT=-1
"RTN","PXBAPI1",77,0)
 I PXBVST>0,'$D(^AUPNVSIT(PXBVST,0)) S PXBVST=""
"RTN","PXBAPI1",78,0)
 Q
"RTN","PXBAPI1",79,0)
 ;
"RTN","PXBAPI1",80,0)
ADDEDIT3 ;added PX*1.0*182
"RTN","PXBAPI1",81,0)
 N DIR,X,Y
"RTN","PXBAPI1",82,0)
 W !!
"RTN","PXBAPI1",83,0)
 S DIR(0)="Y"
"RTN","PXBAPI1",84,0)
 S DIR("A",1)="Must have a STOP CODE or a PROCEDURE to complete this action."
"RTN","PXBAPI1",85,0)
 S DIR("A")="Do you want to delete this encounter"
"RTN","PXBAPI1",86,0)
 S DIR("B")="NO"
"RTN","PXBAPI1",87,0)
 D ^DIR
"RTN","PXBAPI1",88,0)
 Q:Y'=1
"RTN","PXBAPI1",89,0)
 I $$DELVFILE^PXAPIDEL("ALL",PXBVST,"","","","","")=1 S PXBVST=""
"RTN","PXBAPI1",90,0)
 Q
"RTN","PXBAPI1",91,0)
 ;
"RTN","PXBAPI1",92,0)
ADQ(PXBEXIT) ;Ask the Administration questions
"RTN","PXBAPI1",93,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",94,0)
 . ;This is only done for new visits
"RTN","PXBAPI1",95,0)
 . I PXBPAT'>0 S PXBPAT=$$ASKPAT I PXBPAT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",96,0)
 . S DFN=PXBPAT
"RTN","PXBAPI1",97,0)
 . I PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",98,0)
 . S PXBVSTDT=$S(PXBAPPT>0:PXBAPPT,1:$$ASKDT) I PXBVSTDT'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",99,0)
 . I PXBAPPT'>0&PXBHLOC'=+$G(^DPT(PXBPAT,"S",PXBVSTDT,0)) D
"RTN","PXBAPI1",100,0)
 .. ;This is only done if there is no appointment.
"RTN","PXBAPI1",101,0)
 .. S PXELAP=$$ELAP^SDPCE(PXBPAT,PXBHLOC)
"RTN","PXBAPI1",102,0)
 I PXBEXIT'<1,PXBHLOC'>0 S PXBHLOC=$$ASKHL I PXBHLOC'>0 S PXBEXIT=-1 Q
"RTN","PXBAPI1",103,0)
 I PXBEXIT'<1 D CODT(.PXBEXIT)
"RTN","PXBAPI1",104,0)
 I PXBEXIT'<1,WHAT'="INTV" S PXCECAT="VST" D SCC(.PXBEXIT) K PXCECAT
"RTN","PXBAPI1",105,0)
 I PXBEXIT'<1 D
"RTN","PXBAPI1",106,0)
 . D VISIT(.PXBEXIT)
"RTN","PXBAPI1",107,0)
 . I PXBVST'>0 S PXBEXIT=-2 Q
"RTN","PXBAPI1",108,0)
 Q
"RTN","PXBAPI1",109,0)
 ;
"RTN","PXBAPI1",110,0)
ASKPAT() ;Ask user for a patient
"RTN","PXBAPI1",111,0)
 ;DIC on file 9000001
"RTN","PXBAPI1",112,0)
 N DIR,DIC,Y,X,DA
"RTN","PXBAPI1",113,0)
 S DIR(0)="P^9000001:AEMQ"
"RTN","PXBAPI1",114,0)
 S DIR("A")="Patient Name"
"RTN","PXBAPI1",115,0)
 D ^DIR
"RTN","PXBAPI1",116,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",117,0)
 ;
"RTN","PXBAPI1",118,0)
ASKHL() ;Ask user for a Hospital Location
"RTN","PXBAPI1",119,0)
ASKHL2 ;DIC on file 44
"RTN","PXBAPI1",120,0)
 N DIR,DIC,Y,X,DA,PXRES
"RTN","PXBAPI1",121,0)
 S DIR(0)="PA^44:AEMQ"
"RTN","PXBAPI1",122,0)
 S DIR("A")="Clinic: "
"RTN","PXBAPI1",123,0)
 ; not occasion of service and not dispositioning
"RTN","PXBAPI1",124,0)
 ;I PXALHLOC S DIR("S")="I '+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",125,0)
 ; not occasion of service only   ;PX*1.0*116
"RTN","PXBAPI1",126,0)
 I PXALHLOC S DIR("S")="I '+$G(^(""OOS""))"   ;PX*1.0*116
"RTN","PXBAPI1",127,0)
 ; only clinic that are not occasion of service and not dispositioning
"RTN","PXBAPI1",128,0)
 ;E  S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))&'$O(^PX(815,1,""DHL"",""B"",Y,0))"
"RTN","PXBAPI1",129,0)
 E  S DIR("S")="I $P(^(0),U,3)=""C""&'+$G(^(""OOS""))"   ;PX*1.0*116
"RTN","PXBAPI1",130,0)
 D ^DIR
"RTN","PXBAPI1",131,0)
 ;enable to select a disposition clinic   ;PX*1.0*116
"RTN","PXBAPI1",132,0)
 ;I $D(^PX(815,1,"DHL","B",+Y)) D HELPDISP^PXCEVSIT W !,$C(7) G ASKHL2
"RTN","PXBAPI1",133,0)
 ; disallow selection of clinics with non conforming stop codes
"RTN","PXBAPI1",134,0)
 I +Y>0 S PXRES=$$CLNCK^SDUTL2(+Y,1) I 'PXRES D  G ASKHL2
"RTN","PXBAPI1",135,0)
 .W !,?5,"Clinic MUST be corrected before continuing."
"RTN","PXBAPI1",136,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",137,0)
 ;
"RTN","PXBAPI1",138,0)
ASKDT() ;Ask user for the encounter Date/Time
"RTN","PXBAPI1",139,0)
 N DIR,Y,X,DA
"RTN","PXBAPI1",140,0)
 S DIR(0)="D^"_$S(PXLIMDT>2960000:PXLIMDT,1:"")_":"_(DT+.24)_":AEPRSX"
"RTN","PXBAPI1",141,0)
 S DIR("A")="Encounter Date and Time"
"RTN","PXBAPI1",142,0)
 S DIR("?")="Enter the Date and Time of this encounter"
"RTN","PXBAPI1",143,0)
 D ^DIR
"RTN","PXBAPI1",144,0)
 Q $S(+Y>0:+Y,1:-1)
"RTN","PXBAPI1",145,0)
 ;
"RTN","PXBAPI1",146,0)
CODT(PXBEXIT) ;Ask the user the Check out Date/Time
"RTN","PXBAPI1",147,0)
 N PXCHKOUT
"RTN","PXBAPI1",148,0)
 D CHIKOUT^PXBAPI2("",PXBPAT,PXBHLOC,PXBVSTDT)
"RTN","PXBAPI1",149,0)
 S PXBCODT=PXCHKOUT
"RTN","PXBAPI1",150,0)
 S:PXCHKOUT=-1 PXBCODT=""
"RTN","PXBAPI1",151,0)
 ;; PX*1*113 - Change for EAS*1*3 Appointment processing removed
"RTN","PXBAPI1",152,0)
 ;S X="EASMTCHK" X ^%ZOSF("TEST") I $T D  Q:PXBEXIT<1
"RTN","PXBAPI1",153,0)
 ;. S:$G(EASACT)'="W" EASACT="C"
"RTN","PXBAPI1",154,0)
 ;. I $$MT^EASMTCHK(PXBPAT,"",EASACT,PXBVSTDT) D  S PXBEXIT=-1
"RTN","PXBAPI1",155,0)
 ;. . D PAUSE^VALM1
"RTN","PXBAPI1",156,0)
 I WHAT'["ADDEDIT",PXCHKOUT=-1 S PXBEXIT=-1
"RTN","PXBAPI1",157,0)
 I $G(PXBVST),$$DISPOSIT^PXUTL1(DFN,$P($G(^AUPNVSIT(PXBVST,0)),"^",1),PXBVST) S PXBEXIT=1
"RTN","PXBAPI1",158,0)
 Q
"RTN","PXBAPI1",159,0)
 ;
"RTN","PXBAPI1",160,0)
SCC(PXBEXIT) ;Ask the user the Service connected conditions
"RTN","PXBAPI1",161,0)
 N PXBDATA,PXBCLASS,PXBOUTEN,PXDOD
"RTN","PXBAPI1",162,0)
 S (PXBOUTEN,PXDOD)=""
"RTN","PXBAPI1",163,0)
 ;I $$APPOINT^PXUTL1(PXBPAT,PXBVSTDT,PXBHLOC) D
"RTN","PXBAPI1",164,0)
 ;. S PXBOUTEN=$P($G(^DPT(+PXBPAT,"S",+PXBVSTDT,0)),"^",20)
"RTN","PXBAPI1",165,0)
 ;E  I $$DISPOSIT^PXUTL1(PXBPAT,PXBVSTDT,PXBVST) D
"RTN","PXBAPI1",166,0)
 ;. S PXBOUTEN=+$P($G(^DPT(+PXBPAT,"DIS",9999999-PXBVSTDT,0)),"^",18)
"RTN","PXBAPI1",167,0)
 ;I 'PXBOUTEN,$G(PXBVST)>0 S PXBOUTEN=$O(^SCE("AVSIT",PXBVST,0))
"RTN","PXBAPI1",168,0)
 ;D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC)
"RTN","PXBAPI1",169,0)
 D CLASS^PXBAPI21(PXBOUTEN,PXBPAT,PXBVSTDT,PXBHLOC,PXBVST)
"RTN","PXBAPI1",170,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",171,0)
 F PXBCLASS=1:1:8 I $G(PXBDATA("ERR",PXBCLASS))=4 S PXBEXIT=-1 Q  ; changed 6/17/98 for MST enhancement
"RTN","PXBAPI1",172,0)
 Q:PXBEXIT<1
"RTN","PXBAPI1",173,0)
 I $G(PXDOD) S PXBEXIT=-1 Q
"RTN","PXBAPI1",174,0)
 S PXB800(1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXBAPI1",175,0)
 S PXB800(2)=$P($G(PXBDATA(1)),"^",2)
"RTN","PXBAPI1",176,0)
 S PXB800(3)=$P($G(PXBDATA(2)),"^",2)
"RTN","PXBAPI1",177,0)
 S PXB800(4)=$P($G(PXBDATA(4)),"^",2)
"RTN","PXBAPI1",178,0)
 S PXB800(5)=$P($G(PXBDATA(5)),"^",2) ;added 6/17/98 for MST enhancement
"RTN","PXBAPI1",179,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",180,0)
 S PXB800(6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXBAPI1",181,0)
 S PXB800(7)=$P($G(PXBDATA(7)),"^",2)
"RTN","PXBAPI1",182,0)
 S PXB800(8)=$P($G(PXBDATA(8)),"^",2)
"RTN","PXBAPI1",183,0)
 Q
"RTN","PXBAPI1",184,0)
 ;
"RTN","PXBAPI1",185,0)
VISIT(PXBEXIT) ;Creat or edit the Visit
"RTN","PXBAPI1",186,0)
 ;Set up ^TMP("PXK",$J and call PXK
"RTN","PXBAPI1",187,0)
 I PXBVST>0 L +^AUPNVSIT(PXBVST):10 E  W !!,$C(7),"Cannot edit at this time, try again later." D WAIT^PXCEHELP S PXBEXIT=-2 Q
"RTN","PXBAPI1",188,0)
 K ^TMP("PXK",$J)
"RTN","PXBAPI1",189,0)
 N PXBNODE,PXBAFTER,PXKERROR
"RTN","PXBAPI1",190,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",191,0)
 . S PXBAFTER(PXBNODE)=$S(PXBVST>0:$G(^AUPNVSIT(PXBVST,PXBNODE)),1:"")
"RTN","PXBAPI1",192,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"BEFORE")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",193,0)
 I PXBVST'>0 D
"RTN","PXBAPI1",194,0)
 . S $P(PXBAFTER(0),"^",1)=PXBVSTDT
"RTN","PXBAPI1",195,0)
 . S $P(PXBAFTER(0),"^",5)=PXBPAT
"RTN","PXBAPI1",196,0)
 . S $P(PXBAFTER(0),"^",8)=$P(^SC(PXBHLOC,0),"^",7)
"RTN","PXBAPI1",197,0)
 . S:PXBAPPT>0 $P(PXBAFTER(0),"^",7)="A" ;PX*1*124
"RTN","PXBAPI1",198,0)
 . S $P(PXBAFTER(150),"^",3)="P"
"RTN","PXBAPI1",199,0)
 . S $P(PXBAFTER(812),"^",2)=PXBPKG
"RTN","PXBAPI1",200,0)
 . S $P(PXBAFTER(812),"^",3)=PXBSOURC
"RTN","PXBAPI1",201,0)
 S $P(PXBAFTER(0),"^",18)=$G(PXBCODT)
"RTN","PXBAPI1",202,0)
 S:$P(PXBAFTER(0),"^",22)="" $P(PXBAFTER(0),"^",22)=PXBHLOC
"RTN","PXBAPI1",203,0)
 S $P(PXBAFTER(800),"^",1)=$G(PXB800(1))
"RTN","PXBAPI1",204,0)
 S $P(PXBAFTER(800),"^",2)=$G(PXB800(2))
"RTN","PXBAPI1",205,0)
 S $P(PXBAFTER(800),"^",3)=$G(PXB800(3))
"RTN","PXBAPI1",206,0)
 S $P(PXBAFTER(800),"^",4)=$G(PXB800(4))
"RTN","PXBAPI1",207,0)
 S $P(PXBAFTER(800),"^",5)=$G(PXB800(5)) ;added 6/17/98 for MST emhancement
"RTN","PXBAPI1",208,0)
 ;PX*1*111 - Add HNC
"RTN","PXBAPI1",209,0)
 S $P(PXBAFTER(800),"^",6)=$G(PXB800(6))
"RTN","PXBAPI1",210,0)
 S $P(PXBAFTER(800),"^",7)=$G(PXB800(7))
"RTN","PXBAPI1",211,0)
 S $P(PXBAFTER(800),"^",8)=$G(PXB800(8))
"RTN","PXBAPI1",212,0)
 I $D(PXELAP)#2 D
"RTN","PXBAPI1",213,0)
 . S $P(PXBAFTER(0),"^",21)=+PXELAP
"RTN","PXBAPI1",214,0)
 F PXBNODE=0,21,150,800,811,812 D
"RTN","PXBAPI1",215,0)
 . S ^TMP("PXK",$J,"VST",1,PXBNODE,"AFTER")=PXBAFTER(PXBNODE)
"RTN","PXBAPI1",216,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=$S(PXBVST>0:PXBVST,1:"")
"RTN","PXBAPI1",217,0)
 S ^TMP("PXK",$J,"SOR")=PXBSOURC
"RTN","PXBAPI1",218,0)
 D EN1^PXKMAIN
"RTN","PXBAPI1",219,0)
 I PXBVST>0 L -^AUPNVSIT(PXBVST):5
"RTN","PXBAPI1",220,0)
 S PXBVST=$G(^TMP("PXK",$J,"VST",1,"IEN"))
"RTN","PXBAPI1",221,0)
 Q
"RTN","PXBAPI1",222,0)
 ;
"RTN","PXBAPI1",223,0)
CPT(PXBEXIT) ;Ask the user Providers and CTPs
"RTN","PXBAPI1",224,0)
 D CPT^PXBMCPT(PXBVST) K PRVDR
"RTN","PXBAPI1",225,0)
 Q
"RTN","PXBAPI1",226,0)
 ;
"RTN","PXBAPI1",227,0)
POV(PXBEXIT) ;Ask the user Diagnoses
"RTN","PXBAPI1",228,0)
 D POV^PXBMPOV(PXBVST) K PRVDR
"RTN","PXBAPI1",229,0)
 Q
"RTN","PXBAPI1",230,0)
 ;
"RTN","PXBAPI1",231,0)
PRV(PXBEXIT) ;Ask the user Providers
"RTN","PXBAPI1",232,0)
 D PRV^PXBMPRV(PXBVST,"PRV") K PRVDR
"RTN","PXBAPI1",233,0)
 Q
"RTN","PXBAPI1",234,0)
 ;
"RTN","PXBAPI1",235,0)
STP(PXBEXIT) ;Ask the user Stop Codes
"RTN","PXBAPI1",236,0)
 I $L($T(DATE^SCDXUTL)),$$DATE^SCDXUTL(+$G(^AUPNVSIT(PXBVST,0))) Q
"RTN","PXBAPI1",237,0)
 D STP^PXBMSTP(PXBVST) K PRVDR
"RTN","PXBAPI1",238,0)
 Q
"RTN","PXBAPI1",239,0)
 ;
"RTN","PXBAPI21")
0^25^B28465435
"RTN","PXBAPI21",1,0)
PXBAPI21 ;ISL/DCM - API for Classification check out ; 4/13/05 12:55pm
"RTN","PXBAPI21",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**130,147,124,184,168**;Aug 12, 1996;Build 14
"RTN","PXBAPI21",3,0)
CLASS(ENCOWNTR,DFN,APTDT,LOC,VISIT) ;Edit classification fields
"RTN","PXBAPI21",4,0)
 ; Input  - ENCOWNTR - ien of ^SCE(ien (409.68 Outpatient Encounter file)
"RTN","PXBAPI21",5,0)
 ;          ENCOWNTR optional if DFN,LOC,APTDT params used
"RTN","PXBAPI21",6,0)
 ;          DFN - ien of ^DPT(DFN, (only used if no ENCOWNTR)
"RTN","PXBAPI21",7,0)
 ;          LOC - ien of ^SC(LOC,  (only used if no ENCOWNTR)
"RTN","PXBAPI21",8,0)
 ;          APTDT - Appointment Date/time (only used if no ENCOWNTR)
"RTN","PXBAPI21",9,0)
 ;          VISIT - optional if no ENCOWNTR look for main encounter that
"RTN","PXBAPI21",10,0)
 ;                  points to this visit
"RTN","PXBAPI21",11,0)
 ; Output - PXBDATA(Classification type)=OutPT Class ien^Value
"RTN","PXBAPI21",12,0)
 ;          PXBDATA("ERR",Class type)=1 Bad ptr to 409.41
"RTN","PXBAPI21",13,0)
 ;                                    =2 DATA entry not applicable
"RTN","PXBAPI21",14,0)
 ;                                    =3 DATA entry uneditable
"RTN","PXBAPI21",15,0)
 ;                                    =4 User ^ out of prompt
"RTN","PXBAPI21",16,0)
 ;            Classification type 1 - Agent Orange
"RTN","PXBAPI21",17,0)
 ;                                2 - Ionizing Radiation
"RTN","PXBAPI21",18,0)
 ;                                3 - Service Connected
"RTN","PXBAPI21",19,0)
 ;                                4 - SW Asia Coditions
"RTN","PXBAPI21",20,0)
 ;                                5 - Military Sexual Trauma
"RTN","PXBAPI21",21,0)
 ;                                6 - Head and/or Neck Cancer
"RTN","PXBAPI21",22,0)
 ;                                7 - Combat Veteran
"RTN","PXBAPI21",23,0)
 ;                                8 - Project 112/SHAD
"RTN","PXBAPI21",24,0)
 ;
"RTN","PXBAPI21",25,0)
 ; Ext References: ^SCE(DA,0)              INP^SDAM2
"RTN","PXBAPI21",26,0)
 ;                 REQ^SDM1A               CLINIC^SDAMU
"RTN","PXBAPI21",27,0)
 ;                 EXOE^SDCOU2             CLOE^SDCO21
"RTN","PXBAPI21",28,0)
 ;                 SEQ^SDCO21              CL^SDCO21
"RTN","PXBAPI21",29,0)
 ;   In ^PXBAPI22
"RTN","PXBAPI21",30,0)
 ;                 ^DG(43,1,"SCLR")  piece 24
"RTN","PXBAPI21",31,0)
 ;                 ^SD(409.41,DA,0)        ^SD(409.41,DA,2)
"RTN","PXBAPI21",32,0)
 ;                 VAL^SDCODD              SC^SDCO23
"RTN","PXBAPI21",33,0)
 I $G(ENCOWNTR)'>0,$G(VISIT)>0 D SC^PXCEVFI2($P(^AUPNVSIT(VISIT,0),U,5)) D
"RTN","PXBAPI21",34,0)
 . S ENCOWNTR=$O(^SCE("AVSIT",VISIT,0))
"RTN","PXBAPI21",35,0)
 . I ENCOWNTR,$P(^SCE(ENCOWNTR,0),"^",6) S ENCOWNTR=$P(^SCE(ENCOWNTR,0),"^",6)
"RTN","PXBAPI21",36,0)
 N IEN,IFN,SDCLOEY,ORG,END,DA,X,SQUIT
"RTN","PXBAPI21",37,0)
 I $G(ENCOWNTR) Q:'$D(^SCE(+ENCOWNTR,0))  N APTDT,DFN,LOC S END=0,X0=^(0) D ENCHK(ENCOWNTR,X0) Q:END  G ON
"RTN","PXBAPI21",38,0)
 Q:'$G(DFN)!'$G(LOC)!'$G(APTDT)
"RTN","PXBAPI21",39,0)
 D SC^PXCEVFI2(DFN)
"RTN","PXBAPI21",40,0)
 S X=$G(^DPT(DFN,"S",APTDT,0))
"RTN","PXBAPI21",41,0)
 I +X,+X=LOC,$P(X,"^",20),$D(^SCE($P(X,"^",20),0)) S ENCOWNTR=$P(X,"^",20),END=0,X0=^(0) D ENCHK(ENCOWNTR,X0) Q:END  G ON
"RTN","PXBAPI21",42,0)
 S END=0 D OPCHK(DFN,LOC,APTDT) I END Q
"RTN","PXBAPI21",43,0)
ON D ASKCL($G(ENCOWNTR),.SDCLOEY,DFN,APTDT)
"RTN","PXBAPI21",44,0)
 I '$D(SDCLOEY) Q
"RTN","PXBAPI21",45,0)
 I $G(PXCECAT)="POV" D
"RTN","PXBAPI21",46,0)
 .I $P($G(PXCEAFTR(800)),"^",1)]"",$D(SDCLOEY(3)) S $P(SDCLOEY(3),"^",2)=$P(PXCEAFTR(800),"^",1)
"RTN","PXBAPI21",47,0)
 .I $P($G(PXCEAFTR(800)),"^",2)]"",$D(SDCLOEY(1)) S $P(SDCLOEY(1),"^",2)=$P(PXCEAFTR(800),"^",2)
"RTN","PXBAPI21",48,0)
 .I $P($G(PXCEAFTR(800)),"^",3)]"",$D(SDCLOEY(2)) S $P(SDCLOEY(2),"^",2)=$P(PXCEAFTR(800),"^",3)
"RTN","PXBAPI21",49,0)
 .I $P($G(PXCEAFTR(800)),"^",4)]"",$D(SDCLOEY(4)) S $P(SDCLOEY(4),"^",2)=$P(PXCEAFTR(800),"^",4)
"RTN","PXBAPI21",50,0)
 .I $P($G(PXCEAFTR(800)),"^",5)]"",$D(SDCLOEY(5)) S $P(SDCLOEY(5),"^",2)=$P(PXCEAFTR(800),"^",5)
"RTN","PXBAPI21",51,0)
 .I $P($G(PXCEAFTR(800)),"^",6)]"",$D(SDCLOEY(6)) S $P(SDCLOEY(6),"^",2)=$P(PXCEAFTR(800),"^",6)
"RTN","PXBAPI21",52,0)
 .I $P($G(PXCEAFTR(800)),"^",7)]"",$D(SDCLOEY(7)) S $P(SDCLOEY(7),"^",2)=$P(PXCEAFTR(800),"^",7)
"RTN","PXBAPI21",53,0)
 .I $P($G(PXCEAFTR(800)),"^",8)]"",$D(SDCLOEY(8)) S $P(SDCLOEY(8),"^",2)=$P(PXCEAFTR(800),"^",8)
"RTN","PXBAPI21",54,0)
 I $D(SDCLOEY) D ASK($G(ENCOWNTR),.SDCLOEY,.SQUIT) Q:$D(SQUIT)
"RTN","PXBAPI21",55,0)
 Q
"RTN","PXBAPI21",56,0)
ASKCL(ENCOWNTR,SDCLOEY,DFN,APTDT) ;Ask classifications on check out
"RTN","PXBAPI21",57,0)
 I $G(ENCOWNTR) D CLOE^SDCO21(ENCOWNTR,.SDCLOEY) Q
"RTN","PXBAPI21",58,0)
 D CL^SDCO21(DFN,APTDT,"",.SDCLOEY)
"RTN","PXBAPI21",59,0)
 Q
"RTN","PXBAPI21",60,0)
ASK(ENCOWNTR,SDCLOEY,SQUIT) ;Ask classifications
"RTN","PXBAPI21",61,0)
 N I,IOINHI,IOINORM,TYPI,TYPSEQ,CTS,X,PXVST
"RTN","PXBAPI21",62,0)
 S X="IOINHI;IOINORM" D ENDR^%ZISS
"RTN","PXBAPI21",63,0)
 I '$D(SDCLOEY) Q
"RTN","PXBAPI21",64,0)
 W !!,"--- ",IOINHI,"Classification",IOINORM," --- [",IOINHI,"Required",IOINORM,"]"
"RTN","PXBAPI21",65,0)
 W ! S TYPSEQ=$$SEQ^SDCO21 ;Get classification type sequence (3,1,2,4,5,6,7)
"RTN","PXBAPI21",66,0)
 F CTS=1:1 S TYPI=+$P(TYPSEQ,",",CTS) Q:'TYPI!($D(SQUIT))  D
"RTN","PXBAPI21",67,0)
 .I $D(SDCLOEY(TYPI)) D
"RTN","PXBAPI21",68,0)
 ..S PXVST=$P($G(X0),U,5) I 'PXVST,($G(PXCECAT)="VST")!($G(PXCECAT)="SIT") Q
"RTN","PXBAPI21",69,0)
 ..I $G(PXCECAT)="VST",TYPI=3,($P($G(^AUPNVSIT(PXVST,800)),U,11)="1")  Q
"RTN","PXBAPI21",70,0)
 ..I $G(PXCECAT)="VST",TYPI=1,($P($G(^AUPNVSIT(PXVST,800)),U,12)="1")  Q
"RTN","PXBAPI21",71,0)
 ..I $G(PXCECAT)="VST",TYPI=2,($P($G(^AUPNVSIT(PXVST,800)),U,13)="1")  Q
"RTN","PXBAPI21",72,0)
 ..I $G(PXCECAT)="VST",TYPI=4,($P($G(^AUPNVSIT(PXVST,800)),U,14)="1")  Q
"RTN","PXBAPI21",73,0)
 ..I $G(PXCECAT)="VST",TYPI=5,($P($G(^AUPNVSIT(PXVST,800)),U,15)="1")  Q
"RTN","PXBAPI21",74,0)
 ..I $G(PXCECAT)="VST",TYPI=6,($P($G(^AUPNVSIT(PXVST,800)),U,16)="1")  Q
"RTN","PXBAPI21",75,0)
 ..I $G(PXCECAT)="VST",TYPI=7,($P($G(^AUPNVSIT(PXVST,800)),U,17)="1")  Q
"RTN","PXBAPI21",76,0)
 ..I $G(PXCECAT)="VST",TYPI=8,($P($G(^AUPNVSIT(PXVST,800)),U,18)="1")  Q
"RTN","PXBAPI21",77,0)
 ..D ONE^PXBAPI22(TYPI,SDCLOEY(TYPI),ENCOWNTR,.SQUIT)
"RTN","PXBAPI21",78,0)
 ..I TYPI=3 F I=1,2,4 S:$D(SDCLOEY(I))&($P($G(PXBDATA(3)),"^",2)=1) $P(SDCLOEY(I),"^",3)=1 S:$P($G(PXBDATA(3)),"^",2)=0&('$D(SDCLOEY(I))) SDCLOEY(I)=""
"RTN","PXBAPI21",79,0)
 I $P($G(PXBDATA(3)),"^",2)'="" D
"RTN","PXBAPI21",80,0)
 .N END
"RTN","PXBAPI21",81,0)
 .S END=0
"RTN","PXBAPI21",82,0)
 .F CTS=1:1 S TYPI=+$P(TYPSEQ,",",CTS) Q:'TYPI  I TYPI'=3 D
"RTN","PXBAPI21",83,0)
 ..I $P($G(PXBDATA(TYPI)),"^",2)'="" S END=1 Q
"RTN","PXBAPI21",84,0)
 .I 'END H 1
"RTN","PXBAPI21",85,0)
 Q
"RTN","PXBAPI21",86,0)
ENCHK(ENCOWNTR,X0) ;Do outpatient encounter checks
"RTN","PXBAPI21",87,0)
 S APTDT=+X0,DFN=$P(X0,"^",2),LOC=$P(X0,"^",4),ORG=$P(X0,"^",8),DA=$P(X0,"^",9)
"RTN","PXBAPI21",88,0)
 I +$G(VADM(6)),+$G(VADM(6))<APTDT D  K DIR I $D(DIRUT) S (PXDOD,END)=1 Q
"RTN","PXBAPI21",89,0)
 . S DIR(0)="E",DIR("A")="Enter RETURN to continue or '^' to Quit"
"RTN","PXBAPI21",90,0)
 . S DIR("A",2)="WARNING "_VADM(7),DIR("A",1)=" ",DIR("A",3)=" " D ^DIR
"RTN","PXBAPI21",91,0)
 I $$REQ^SDM1A(+X0)'="CO" S END=1 Q  ;Check MAS Check out date parameter
"RTN","PXBAPI21",92,0)
 I ORG=1,'$$CLINIC^SDAMU(+LOC) S END=1 Q  ;Screen for valid clinic
"RTN","PXBAPI21",93,0)
 I "^1^2^"[("^"_ORG_"^"),$$INP^SDAM2(+DFN,+X0)="I" S END=1 Q  ;Inpat chk
"RTN","PXBAPI21",94,0)
 I $$EXOE^SDCOU2(ENCOWNTR) S END=1 Q  ;Chk exempt Outpt classifications
"RTN","PXBAPI21",95,0)
 Q
"RTN","PXBAPI21",96,0)
OPCHK(DFN,LOC,APTDT) ;Do standalone outpatient encounter checks
"RTN","PXBAPI21",97,0)
 I +$G(VADM(6)),+$G(VADM(6))<APTDT D  K DIR I $D(DIRUT) S (PXDOD,END)=1 Q
"RTN","PXBAPI21",98,0)
 . S DIR(0)="E",DIR("A")="Enter RETURN to continue or '^' to Quit"
"RTN","PXBAPI21",99,0)
 . S DIR("A",2)="WARNING "_VADM(7),DIR("A",1)=" ",DIR("A",3)=" " D ^DIR
"RTN","PXBAPI21",100,0)
 I $$REQ^SDM1A(APTDT)'="CO" S END=1 Q  ;Check MAS Check out date parameter
"RTN","PXBAPI21",101,0)
 I '$$CLINIC^SDAMU(+LOC) S END=1 Q  ;Screen for valid clinic
"RTN","PXBAPI21",102,0)
 I $$INP^SDAM2(+DFN,APTDT)="I" S END=1 Q  ;Inpat chk
"RTN","PXBAPI21",103,0)
 Q
"RTN","PXBAPI21",104,0)
TEST ;Test call to CLASS
"RTN","PXBAPI21",105,0)
 N PXIFN S PXIFN=63
"RTN","PXBAPI21",106,0)
 F  S PXIFN=$O(^SCE(PXIFN)) Q:PXIFN<1  S DFN=$P(^(PXIFN,0),"^",2) K PXBDATA W !!,PXIFN_"   "_$P(^DPT(DFN,0),"^") D  S %=1 W !,"Continue " D YN^DICN Q:%'=1
"RTN","PXBAPI21",107,0)
 . D CLASS(PXIFN)
"RTN","PXBAPI21",108,0)
 . ;W ! ZW PXBDATA
"RTN","PXBAPI21",109,0)
 Q
"RTN","PXBAPI22")
0^37^B7052265
"RTN","PXBAPI22",1,0)
PXBAPI22 ;ISL/DCM - API for Classification check out ; 16 Oct 2006  9:42 PM
"RTN","PXBAPI22",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**1,26,184,168**;Aug 12, 1996;Build 14
"RTN","PXBAPI22",3,0)
ONE(TYPI,DATA,ENCOWNTR,SQUIT) ;Process One Classification
"RTN","PXBAPI22",4,0)
 ; Input  -- TYPI    Outpatient Classification Type IEN
"RTN","PXBAPI22",5,0)
 ;           DATA    Null or 409.42 IEN^Internal Value^1=n/a^1=unedt
"RTN","PXBAPI22",6,0)
 ;           ENCOWNTR     Outpatient Encounter file IEN (optional)
"RTN","PXBAPI22",7,0)
 ; Output -- SQUIT User entered '^' or timeout
"RTN","PXBAPI22",8,0)
 N SDCT0,SDVAL
"RTN","PXBAPI22",9,0)
 S SDCT0=$G(^SD(409.41,TYPI,0)) I SDCT0']"" S PXBDATA("ERR",TYPI)=1 Q  ;Bad entry
"RTN","PXBAPI22",10,0)
 I $P(DATA,"^",3) D:DATA  S PXBDATA("ERR",TYPI)=2 Q  ;Not applicable
"RTN","PXBAPI22",11,0)
 .W !,$C(7),">>> "_$P(SDCT0,"^",6)_" is no longer applicable..."
"RTN","PXBAPI22",12,0)
 .S DA=+DATA,DIK="^SDD(409.42," D ^DIK W "deleted."
"RTN","PXBAPI22",13,0)
 I DATA,$P(DATA,"^",4) D  S PXBDATA("ERR",TYPI)=3 Q  ;Uneditable data
"RTN","PXBAPI22",14,0)
 . W !,$P(SDCT0,"^",6)_": "_$$VAL^SDCODD(TYPI,$P(DATA,"^",2))_"  <Uneditable>"
"RTN","PXBAPI22",15,0)
 S SDVAL=$$VAL(TYPI,SDCT0,DATA) ;Get field value
"RTN","PXBAPI22",16,0)
 I SDVAL="^" S SQUIT="",PXBDATA("ERR",TYPI)=4 Q  ;user ^ out
"RTN","PXBAPI22",17,0)
 D STORE(+DATA,SDVAL,TYPI)
"RTN","PXBAPI22",18,0)
 Q
"RTN","PXBAPI22",19,0)
VAL(TYPI,SDCT0,DATA) ;Get Outpatient Classification
"RTN","PXBAPI22",20,0)
 N DIR,DA,Y,SDXS,SDEF
"RTN","PXBAPI22",21,0)
 I TYPI=1,$P($G(^DPT(DFN,.321)),"^",2)'="Y"!($P($G(^DPT(DFN,.321)),"^",13)'="V") G VALQ
"RTN","PXBAPI22",22,0)
 I TYPI=2,$P($G(^DPT(DFN,.321)),"^",3)'="Y" G VALQ
"RTN","PXBAPI22",23,0)
 I TYPI=4,$P($G(^DPT(DFN,.322)),"^",13)'="Y",'$$EC^SDCO22(DFN,ENCOWNTR) G VALQ
"RTN","PXBAPI22",24,0)
 I TYPI=3,$P($G(^SCE(+$G(ENCOWNTR),0)),"^",10)=2 S Y=1 G VALQ ;Change SC to 'yes'
"RTN","PXBAPI22",25,0)
 ;Automation of the SC response
"RTN","PXBAPI22",26,0)
 I TYPI=3,(+$G(PXD)!(+$G(PXDX))) D  I Y'="",'$G(SDSCEDIT) G VALQ
"RTN","PXBAPI22",27,0)
 .S SDXS($S(+$G(PXD):+PXD,1:+$G(PXDX)))=""
"RTN","PXBAPI22",28,0)
 .S Y=$$SC^SDSCAPI(DFN,.SDXS,ENCOWNTR,$G(VISIT)) Q:Y=""
"RTN","PXBAPI22",29,0)
 .S Y=+Y,SDEF=$S(Y:"YES",1:"NO")
"RTN","PXBAPI22",30,0)
 .I '$G(SDSCEDIT) D
"RTN","PXBAPI22",31,0)
 ..W !,$S($P(SDCT0,"^",2)]"":$P(SDCT0,"^",2),1:$P(SDCT0,"^")),"? "
"RTN","PXBAPI22",32,0)
 ..W $S(Y:"YES",1:"NO")
"RTN","PXBAPI22",33,0)
REASK S DIR("A")=$S($P(SDCT0,"^",2)]"":$P(SDCT0,"^",2),1:$P(SDCT0,"^"))
"RTN","PXBAPI22",34,0)
 I $P(DATA,"^",2)]""!($P(SDCT0,"^",4)]"") S DIR("B")=$S($D(SDEF):SDEF,$P(DATA,"^",2)]"":$$VAL^SDCODD(TYPI,$P(DATA,"^",2)),1:$P(SDCT0,"^",4))
"RTN","PXBAPI22",35,0)
 S DIR(0)=$P(SDCT0,"^",3)_"O" S:$D(SDEF) DIR("B")=SDEF
"RTN","PXBAPI22",36,0)
 I $D(^SD(409.41,TYPI,2)) S DIR(0)=DIR(0)_"^"_^(2)
"RTN","PXBAPI22",37,0)
 I TYPI=3 S DIR("?")="^D SC^SDCO23(DFN)"
"RTN","PXBAPI22",38,0)
 D ^DIR
"RTN","PXBAPI22",39,0)
 I $P(SDCT0,"^",5),'$D(DTOUT),$P(DATA,"^",2)="",Y=""!(Y["^"&('$P($G(^DG(43,1,"SCLR")),"^",24))) D  G REASK
"RTN","PXBAPI22",40,0)
 .W !,$C(7),"This is a required response." W:Y["^" "  An '^' is not allowed."
"RTN","PXBAPI22",41,0)
 .K DIRUT,DUOUT
"RTN","PXBAPI22",42,0)
 I $D(DIRUT) S Y="^"
"RTN","PXBAPI22",43,0)
VALQ K DIRUT,DTOUT,DUOUT
"RTN","PXBAPI22",44,0)
 Q $G(Y)
"RTN","PXBAPI22",45,0)
 ;
"RTN","PXBAPI22",46,0)
STORE(SDCNI,SDCNV,TYPI) ;File Outpatient Classification
"RTN","PXBAPI22",47,0)
 ; Input  -- SDCNI    Outpatient Classification IEN
"RTN","PXBAPI22",48,0)
 ;           SDCNV    Outpatient Classification Value
"RTN","PXBAPI22",49,0)
 ;           TYPI    Classification type 1 - Agent Orange
"RTN","PXBAPI22",50,0)
 ;                                        2 - Ionizing Radiation
"RTN","PXBAPI22",51,0)
 ;                                        3 - Service Connected
"RTN","PXBAPI22",52,0)
 ;                                        4 - SW Asia Conditions
"RTN","PXBAPI22",53,0)
 ; Output -- PXBDATA array
"RTN","PXBAPI22",54,0)
 ; Error codes -- PXBDATA("ERR",TYPI)=1 - Bad ptr to 409.41 in TYPI
"RTN","PXBAPI22",55,0)
 ;                                  2 - DATA entry not applicable
"RTN","PXBAPI22",56,0)
 ;                                  3 - DATA entry uneditable
"RTN","PXBAPI22",57,0)
 ;                                  4 - User ^ out of prompt
"RTN","PXBAPI22",58,0)
 S PXBDATA(TYPI)=SDCNI_"^"_SDCNV
"RTN","PXBAPI22",59,0)
 Q
"RTN","PXBDPOV")
0^30^B26935577
"RTN","PXBDPOV",1,0)
PXBDPOV ;ISL/JVS - DISPLAY POV (DIAGNOSIS) ;3/10/04 12:12pm
"RTN","PXBDPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**124,168**;Aug 12, 1996;Build 14
"RTN","PXBDPOV",3,0)
 ;
"RTN","PXBDPOV",4,0)
 ;
"RTN","PXBDPOV",5,0)
EN0 ;---Main entry point
"RTN","PXBDPOV",6,0)
 I '$D(IOCUU) D TERM^PXBCC
"RTN","PXBDPOV",7,0)
 ;
"RTN","PXBDPOV",8,0)
HEAD ;--HEADER ON LIST
"RTN","PXBDPOV",9,0)
 S HEAD="- - E N C O U N T E R  D I A G N O S I S  (ICD9 CODES) - -"
"RTN","PXBDPOV",10,0)
 W !,IOCUU,?(IOM-$L(HEAD))\2,IOINHI,HEAD
"RTN","PXBDPOV",11,0)
 W IOINLOW,IOELEOL K HEAD
"RTN","PXBDPOV",12,0)
 ;
"RTN","PXBDPOV",13,0)
 I $D(CLINIC) D POV^PXBUTL2(CLINIC)
"RTN","PXBDPOV",14,0)
 ;I PXBCNT<11 D DPOV1
"RTN","PXBDPOV",15,0)
 ;I PXBCNT>10&($D(PXBNPOV)) D DPOV4("SAME")
"RTN","PXBDPOV",16,0)
 ;I PXBCNT>10&('$D(PXBNPOV)) D DPOV4("BEGIN")
"RTN","PXBDPOV",17,0)
 D DPOV4($S($D(PXBNPOV):"SAME",1:"BEGIN"))
"RTN","PXBDPOV",18,0)
 Q
"RTN","PXBDPOV",19,0)
 ;
"RTN","PXBDPOV",20,0)
 ;
"RTN","PXBDPOV",21,0)
DPOV1 ;--Display the POV Data
"RTN","PXBDPOV",22,0)
 N ENTRY,K
"RTN","PXBDPOV",23,0)
 D UNDON^PXBCC
"RTN","PXBDPOV",24,0)
 W !,"No.",?5,"ICD",?13,"DESCRIPTION",?64,"PROBLEM LIST"
"RTN","PXBDPOV",25,0)
 W IOEDEOP
"RTN","PXBDPOV",26,0)
 D UNDOFF^PXBCC
"RTN","PXBDPOV",27,0)
 ;
"RTN","PXBDPOV",28,0)
 ;
"RTN","PXBDPOV",29,0)
 S (K,J)=0 F  S J=$O(PXBSAM(J)) Q:J=""  D
"RTN","PXBDPOV",30,0)
 .S ENTRY=$G(PXBSAM(J)) I $D(PXBNPOV($P(ENTRY,"^",1))) S $P(ENTRY,"^",1)=$P(ENTRY,"^",1)_"*"
"RTN","PXBDPOV",31,0)
 .I $P(ENTRY,U)=0 D CIA($P(ENTRY,U,2,16)) Q
"RTN","PXBDPOV",32,0)
 .S K=K+1
"RTN","PXBDPOV",33,0)
 .W !,K,?4,$J($P($P(ENTRY,"^",1),".",1),4),".",$P($P(ENTRY,"^",1),".",2),?13,$E($P(ENTRY,"^",3),1,30),?44 W:$P(ENTRY,"^",4)["PRI" $P(ENTRY,"^",4)
"RTN","PXBDPOV",34,0)
 .I $P(ENTRY,"^",4)["PRI" W ?71,$P(ENTRY,"^",5)
"RTN","PXBDPOV",35,0)
 .E  W ?74,$P(ENTRY,"^",5)
"RTN","PXBDPOV",36,0)
 .D DIS
"RTN","PXBDPOV",37,0)
 ;---Write no entries if none exsist
"RTN","PXBDPOV",38,0)
 I '$D(PXBSAM) D NONE^PXBUTL(3)
"RTN","PXBDPOV",39,0)
 ;-------------UNCOMMENT TO LIST CLINIC POV TO SCREEN-----
"RTN","PXBDPOV",40,0)
 ;D DEF^PXBDPOV("A")
"RTN","PXBDPOV",41,0)
 ;----------------------------------------------------
"RTN","PXBDPOV",42,0)
 D DEF^PXBDPOV("D") I '$D(FIRST) K PXBDPOV
"RTN","PXBDPOV",43,0)
 Q
"RTN","PXBDPOV",44,0)
 ;
"RTN","PXBDPOV",45,0)
 ;
"RTN","PXBDPOV",46,0)
 ;
"RTN","PXBDPOV",47,0)
DPOV4(SIGN) ;--Display the PROVIDER Data
"RTN","PXBDPOV",48,0)
 ;
"RTN","PXBDPOV",49,0)
 ;SIGN=
"RTN","PXBDPOV",50,0)
 ; '+' add 10 to the starting point in ^TMP("PXBDPOV",$J)
"RTN","PXBDPOV",51,0)
 ; '-' subtract 10 from the starting point but not less that 0
"RTN","PXBDPOV",52,0)
 ; 'BEGIN' start at the beginning
"RTN","PXBDPOV",53,0)
 ; 'SAME' start stays where it's at
"RTN","PXBDPOV",54,0)
 ; '3'--any number set start to that number
"RTN","PXBDPOV",55,0)
 ;
"RTN","PXBDPOV",56,0)
 N PXBSTART,PXTMP
"RTN","PXBDPOV",57,0)
 I SIGN="BEGIN" S ^TMP("PXBDPOV",$J,"START")=0,PXBSTART=0
"RTN","PXBDPOV",58,0)
 I SIGN="SAME" S PXBSTART=^TMP("PXBDPOV",$J,"START")
"RTN","PXBDPOV",59,0)
 I SIGN="+" S PXBSTART=($G(^TMP("PXBDPOV",$J,"START"))+(10)) S:PXBSTART'<PXBCNT PXBSTART=(PXBCNT-(10)) S ^TMP("PXBDPOV",$J,"START")=PXBSTART
"RTN","PXBDPOV",60,0)
 I SIGN="-" S PXBSTART=$G(^TMP("PXBDPOV",$J,"START"))-10,^TMP("PXBDPOV",$J,"START")=PXBSTART I PXBSTART<0 S PXBSTART=0 S ^TMP("PXBDPOV",$J,"START")=0
"RTN","PXBDPOV",61,0)
 I +SIGN>0&(SIGN#10) S PXBSTART=$P((SIGN/10),".")*10 S:PXBSTART<10 PXBSTART=0  Q:^TMP("PXBDPOV",$J,"START")=PXBSTART  S ^TMP("PXBDPOV",$J,"START")=PXBSTART
"RTN","PXBDPOV",62,0)
 I +SIGN>0&'(SIGN#10) S PXBSTART=(($P((SIGN/10),".")*10)-10) S:PXBSTART<10 PXBSTART=0 Q:^TMP("PXBDPOV",$J,"START")=PXBSTART  S ^TMP("PXBDPOV",$J,"START")=PXBSTART
"RTN","PXBDPOV",63,0)
 ;
"RTN","PXBDPOV",64,0)
 ;
"RTN","PXBDPOV",65,0)
 I SIGN'="BEGIN" D LOC^PXBCC(3,0) W IOEDEOP
"RTN","PXBDPOV",66,0)
 ;
"RTN","PXBDPOV",67,0)
HEAD4 ;--HEADER ON LIST
"RTN","PXBDPOV",68,0)
 S HEAD="- - E N C O U N T E R  D I A G N O S I S  (ICD9 CODES) - -"
"RTN","PXBDPOV",69,0)
 W !,IOCUU,?(IOM-$L(HEAD))\2,IOINHI,HEAD ;----F  W $C(32) Q:$X=(IOM-(1))
"RTN","PXBDPOV",70,0)
 W IOINLOW,IOELEOL K HEAD
"RTN","PXBDPOV",71,0)
 ;
"RTN","PXBDPOV",72,0)
 N ENTRY,J,K
"RTN","PXBDPOV",73,0)
 D UNDON^PXBCC
"RTN","PXBDPOV",74,0)
 W !,"No.",?5,"ICD",?13,"DESCRIPTION",?64,"PROBLEM LIST"
"RTN","PXBDPOV",75,0)
 W IOEDEOP
"RTN","PXBDPOV",76,0)
 D UNDOFF^PXBCC
"RTN","PXBDPOV",77,0)
 D ARRAY
"RTN","PXBDPOV",78,0)
 ;
"RTN","PXBDPOV",79,0)
 S J=PXBSTART,K=J
"RTN","PXBDPOV",80,0)
 F  S J=$O(@PXTMP@(J)) Q:J=""  Q:K=(PXBSTART+11)  D
"RTN","PXBDPOV",81,0)
 .S ENTRY=$G(@PXTMP@(J,0)),K=K+1
"RTN","PXBDPOV",82,0)
 .I $P(ENTRY,U)=0 D CIA($P(ENTRY,U,2,16)) Q
"RTN","PXBDPOV",83,0)
 .S ENTRY=$P(ENTRY,U,2,15)
"RTN","PXBDPOV",84,0)
 .I $D(PXBNCPT($P(ENTRY,"^",1))) S $P(ENTRY,"^",1)=$P(ENTRY,"^",1)_"*"
"RTN","PXBDPOV",85,0)
 .W !,J+1\2,?4,$J($P($P(ENTRY,"^",1),".",1),4),".",$P($P(ENTRY,"^",1),".",2),?13,$E($P(ENTRY,"^",3),1,30),?44
"RTN","PXBDPOV",86,0)
 .W:$P(ENTRY,"^",4)["PRI" IOINHI,$P(ENTRY,"^",4),IOINLOW
"RTN","PXBDPOV",87,0)
 .W ?$P(ENTRY,"^",4)["PRI"*7+53,$P(ENTRY,"^",7)
"RTN","PXBDPOV",88,0)
 .I $P(ENTRY,"^",4)["PRI" W ?71,$P(ENTRY,"^",5)
"RTN","PXBDPOV",89,0)
 .D DIS
"RTN","PXBDPOV",90,0)
 I SIGN'="BEGIN" W !!
"RTN","PXBDPOV",91,0)
 ;------------UNCOMMENT TO LIST PORVIDERS TO SCREEN--------
"RTN","PXBDPOV",92,0)
 ;D DEF^PXBDPOV("A")
"RTN","PXBDPOV",93,0)
 ;---------------------------------------------------------
"RTN","PXBDPOV",94,0)
 D DEF^PXBDPOV("D") I '$D(FIRST) K PXBDPOV
"RTN","PXBDPOV",95,0)
 Q
"RTN","PXBDPOV",96,0)
 ;
"RTN","PXBDPOV",97,0)
 ;
"RTN","PXBDPOV",98,0)
DEF(CODE) ;---PROCESS DEFAULT LIST OF DIAGNOSIS
"RTN","PXBDPOV",99,0)
 ; I CODE="D" JUST SEND DEFAULT
"RTN","PXBDPOV",100,0)
 ; I CODE="A" JUST SEND THE ARRAY OF PROVIDERS
"RTN","PXBDPOV",101,0)
 D POV^PXBUTL2(CLINIC,3)
"RTN","PXBDPOV",102,0)
 N POV,X,CLNAME,STOP,LIST,NAME,NUMBER
"RTN","PXBDPOV",103,0)
 I '$D(IORC) D TERM^PXBCC
"RTN","PXBDPOV",104,0)
 I '$D(CODE) W !,"SEND PARAMETER = TO 'D'efault OR 'A'rray" Q
"RTN","PXBDPOV",105,0)
 I $G(CODE)="D",$D(PXBPMT("DEF")) S NAME=$O(PXBPMT("DEF",0)) S PXBDPOV=NAME
"RTN","PXBDPOV",106,0)
 I $G(CODE)="A" K PXBPMT("DEF") D
"RTN","PXBDPOV",107,0)
 .S (POV,STOP)="" F  S POV=$O(PXBPMT("POV",POV)) Q:POV=""  Q:STOP=0  D
"RTN","PXBDPOV",108,0)
 ..I '$D(PXBKY(POV)) S STOP=0
"RTN","PXBDPOV",109,0)
 .I STOP="" Q
"RTN","PXBDPOV",110,0)
 .S CLNAME=$P(^SC(CLINIC,0),"^",1)
"RTN","PXBDPOV",111,0)
 .S X="Other ICD CODES associated with "_CLNAME_" clinic."
"RTN","PXBDPOV",112,0)
 .W:PXBCNT<7 ! W !,?(IOM-$L(X))/2,IOINHI,X,IOINLOW K X
"RTN","PXBDPOV",113,0)
 .S (POV,LIST)="" F  S POV=$O(PXBPMT("POV",POV)) Q:POV=""  D
"RTN","PXBDPOV",114,0)
 ..I $D(PXBKY(+POV)) Q
"RTN","PXBDPOV",115,0)
 ..S LIST=LIST_POV_"  " I $L(LIST,"  ")>2 W !,?(IOM-$L(LIST))/2,LIST S LIST=""
"RTN","PXBDPOV",116,0)
 I $G(LIST)]"" W !,?(IOM-$L(LIST))/2,LIST
"RTN","PXBDPOV",117,0)
 Q
"RTN","PXBDPOV",118,0)
 ;
"RTN","PXBDPOV",119,0)
DIS ;----DISPLAY
"RTN","PXBDPOV",120,0)
 Q
"RTN","PXBDPOV",121,0)
 I $D(PXBPMT("POV",$P($P(ENTRY,"^",1),"*"))) W:PXBCNT>11 IORVON W ?37," --Clinic Associated--",IORVOFF
"RTN","PXBDPOV",122,0)
 Q
"RTN","PXBDPOV",123,0)
 ;
"RTN","PXBDPOV",124,0)
CIA(X) ;Clinical Indicator Abbreviations
"RTN","PXBDPOV",125,0)
 N V,I,CI,CI2 S CI="SC^AO^IR^SWAC^MST^HNC^CV^SHAD",CI2=1 W !
"RTN","PXBDPOV",126,0)
 F I=1,7,2:1:4,8,5,6 S V=$P(X,U,I) I V]"" W ?(CI2*8),$P(CI,U,I),":",$S(V:"Y",1:"N") S CI2=CI2+1
"RTN","PXBDPOV",127,0)
 Q
"RTN","PXBDPOV",128,0)
 ;
"RTN","PXBDPOV",129,0)
ARRAY ;Set POV entries into ^TMP("PXBDPOV",$J,"DSP" for display
"RTN","PXBDPOV",130,0)
 N ENTRY,PX124,PXTLNS
"RTN","PXBDPOV",131,0)
 S PXTMP="^TMP(""PXBDPOV"""_","_$J_","_"""DSP"")",(PXTLNS,PX124)=0
"RTN","PXBDPOV",132,0)
 K @PXTMP
"RTN","PXBDPOV",133,0)
 F  S PX124=$O(PXBSAM(PX124)) Q:'PX124  D
"RTN","PXBDPOV",134,0)
 .S PXTLNS=PXTLNS+1,ENTRY=PXBSAM(PX124)
"RTN","PXBDPOV",135,0)
 .S PXBSAM(PX124,"LINE")=PXTLNS
"RTN","PXBDPOV",136,0)
 .S @PXTMP@(PXTLNS,0)=PX124_U_ENTRY
"RTN","PXBDPOV",137,0)
 .S PXTLNS=PXTLNS+1
"RTN","PXBDPOV",138,0)
 .S @PXTMP@(PXTLNS,0)=0_U_PXBSAM(PX124,"I")
"RTN","PXBDPOV",139,0)
 S PXBCNT=PXTLNS
"RTN","PXBDPOV",140,0)
 Q
"RTN","PXBDPOV",141,0)
 ;
"RTN","PXBGPOV")
0^31^B11193623
"RTN","PXBGPOV",1,0)
PXBGPOV ;ISL/JVS,ESW - GATHER POV (DIAGNOSIS) ;8/10/04 1:30pm
"RTN","PXBGPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,112,149,124,168**;Aug 12, 1996;Build 14
"RTN","PXBGPOV",3,0)
 ;
"RTN","PXBGPOV",4,0)
POV(VISIT) ;--Gather the entries in the V POV file
"RTN","PXBGPOV",5,0)
 ;
"RTN","PXBGPOV",6,0)
 N IEN,QUANTITY,PROVIDER,SNARR,POV,GROUP,PXBC,POVI,I,PXCI
"RTN","PXBGPOV",7,0)
 N DIC,DR,DA,DIQ,PRIM,PROBLEM,PXBPLA,PXBPL,PKG,SOURC
"RTN","PXBGPOV",8,0)
 ;
"RTN","PXBGPOV",9,0)
 K ^TMP("PXBU",$J),POV,PXBKY,PXBSAM,PXBSKY,PXDIGNS,NOPLLIST
"RTN","PXBGPOV",10,0)
 K ^UTILITY("DIQ1",$J)
"RTN","PXBGPOV",11,0)
 S FPRI="",PROBLEM=""
"RTN","PXBGPOV",12,0)
 I $D(^AUPNVPOV("AD",VISIT)) D
"RTN","PXBGPOV",13,0)
 .S IEN=0 F  S IEN=$O(^AUPNVPOV("AD",VISIT,IEN)) Q:IEN'>0  D
"RTN","PXBGPOV",14,0)
 ..S ^TMP("PXBU",$J,"POV",IEN)=""
"RTN","PXBGPOV",15,0)
 ;
"RTN","PXBGPOV",16,0)
A ;--Set array with DIAGNOSIS codes
"RTN","PXBGPOV",17,0)
 ;
"RTN","PXBGPOV",18,0)
 D PL^PXBGPL(PATIENT)
"RTN","PXBGPOV",19,0)
 I $D(^TMP("PXBU",$J,"POV")) D
"RTN","PXBGPOV",20,0)
 .S IEN=0 F  S IEN=$O(^TMP("PXBU",$J,"POV",IEN)) Q:IEN'>0  D
"RTN","PXBGPOV",21,0)
 ..S DIC=9000010.07,DR=".01;1204;.04;.12;.17;81202;81203;80001:80008",DA=IEN,DIQ(0)="IE" D EN^DIQ1
"RTN","PXBGPOV",22,0)
 ..S PROVIDER=$G(^UTILITY("DIQ1",$J,9000010.07,DA,"1204","E"))
"RTN","PXBGPOV",23,0)
 ..S LNARR=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".04","E"))
"RTN","PXBGPOV",24,0)
 ..S POV=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".01","E"))
"RTN","PXBGPOV",25,0)
 ..S PROBLEM="" S:$D(^TMP("PXBKYPL",$J,POV)) PROBLEM="YES"
"RTN","PXBGPOV",26,0)
 ..S POVI=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".01","I"))
"RTN","PXBGPOV",27,0)
 ..S PRIM=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".12","E"))
"RTN","PXBGPOV",28,0)
 ..S ORDER=$G(^UTILITY("DIQ1",$J,9000010.07,DA,".17","E"))
"RTN","PXBGPOV",29,0)
 ..S PKG=$G(^UTILITY("DIQ1",$J,9000010.07,DA,"81202","I"))
"RTN","PXBGPOV",30,0)
 ..I PKG']"" S PKG="NONE"
"RTN","PXBGPOV",31,0)
 ..S SOURC=$G(^UTILITY("DIQ1",$J,9000010.07,DA,"81203","I"))
"RTN","PXBGPOV",32,0)
 ..I SOURC']"" S SOURC="NONE"
"RTN","PXBGPOV",33,0)
 ..S SNARR=$P($$ICDDX^ICDCODE(POVI,$G(IDATE)),U,4)
"RTN","PXBGPOV",34,0)
 ..I $L(LNARR)'>30 S LNARR=$$DXNARR^PXUTL1(POVI,$G(IDATE))
"RTN","PXBGPOV",35,0)
 ..S FPRI=FPRI_$E(PRIM,1,3) ;--Creating flag for Primary prompt
"RTN","PXBGPOV",36,0)
 ..S GROUP=POV_"^"_PROVIDER_"^"_SNARR_"^"_PRIM_"^"_PROBLEM_"^"_LNARR_"^"_ORDER
"RTN","PXBGPOV",37,0)
 ..;        1        2            3        4          5          6         7
"RTN","PXBGPOV",38,0)
 ..I PRIM["PRI" S PXDIGNS("PRIMARY")=POV
"RTN","PXBGPOV",39,0)
 ..S ^TMP("PXBPOV",$J,POV,IEN)=GROUP
"RTN","PXBGPOV",40,0)
 ..S ^TMP("PXBGPOVMATCH",$J,POVI,IEN)=""
"RTN","PXBGPOV",41,0)
 ..I $P(GROUP,"^",5)'["YES" S NOPLLIST=1
"RTN","PXBGPOV",42,0)
 ..S GROUP=$G(^UTILITY("DIQ1",$J,9000010.07,IEN,80001,"I"))
"RTN","PXBGPOV",43,0)
 ..F I=2:1:8 S GROUP=GROUP_U_$G(^UTILITY("DIQ1",$J,9000010.07,IEN,80000+I,"I"))
"RTN","PXBGPOV",44,0)
 ..S PXCI(IEN)=GROUP,PXBREQ(POVI,"I")=GROUP
"RTN","PXBGPOV",45,0)
 ;
"RTN","PXBGPOV",46,0)
B ;--Add line numbers
"RTN","PXBGPOV",47,0)
 ;
"RTN","PXBGPOV",48,0)
 I $D(^TMP("PXBPOV",$J)) D
"RTN","PXBGPOV",49,0)
 .S PXBC=0,POV="" F  S POV=$O(^TMP("PXBPOV",$J,POV)) Q:POV=""  Q:PXBC>40  D
"RTN","PXBGPOV",50,0)
 ..S IEN=0 F  S IEN=$O(^TMP("PXBPOV",$J,POV,IEN)) Q:IEN=""  S PXBC=PXBC+1 D
"RTN","PXBGPOV",51,0)
 ...S PXBKY(POV,PXBC)=$G(^TMP("PXBPOV",$J,POV,IEN)),PXBSAM(PXBC)=$G(^TMP("PXBPOV",$J,POV,IEN))
"RTN","PXBGPOV",52,0)
 ...S PXBSKY(PXBC,IEN)=""
"RTN","PXBGPOV",53,0)
 ...S PXBSAM(PXBC,"LNARR")=$P(PXBSAM(PXBC),U,6)
"RTN","PXBGPOV",54,0)
 ...S PXBSAM(PXBC,"I")=PXCI(IEN)
"RTN","PXBGPOV",55,0)
FINISG ;--finish up some variables
"RTN","PXBGPOV",56,0)
 ;--FPRI=0 NO PRIMARY
"RTN","PXBGPOV",57,0)
 S:FPRI'["PRI" FPRI=0 S:FPRI["PRI" FPRI=1
"RTN","PXBGPOV",58,0)
EXIT ;--KILL
"RTN","PXBGPOV",59,0)
 K ^TMP("PXBU",$J),^TMP("PXBKYPL",$J),^TMP("PXBSAMPL",$J),PXBSKYPL
"RTN","PXBGPOV",60,0)
 K ^TMP("PXBPOV",$J),^UTILITY("DIQ1",$J)
"RTN","PXBGPOV",61,0)
 S PXBCNT=+$G(PXBC)
"RTN","PXBGPOV",62,0)
 Q
"RTN","PXBGPOV",63,0)
 ;
"RTN","PXBGPOV",64,0)
XLATE(VST,DX)   ;Translate DX into POV from VST
"RTN","PXBGPOV",65,0)
 Q:'$G(VST)!'$G(DX) ""  Q:'$D(^AUPNVPOV("AD",VST)) ""
"RTN","PXBGPOV",66,0)
 S DX=+$$ICDDX^ICDCODE(DX,+$G(^AUPNVSIT(VST,0))) Q:DX<0 ""
"RTN","PXBGPOV",67,0)
 N IEN,ANS,VAL S (IEN,ANS,VAL)=""
"RTN","PXBGPOV",68,0)
 F  Q:ANS  D
"RTN","PXBGPOV",69,0)
 .S IEN=$O(^AUPNVPOV("AD",VST,IEN)) I 'IEN S ANS=1 Q
"RTN","PXBGPOV",70,0)
 .S VAL=$G(^AUPNVPOV(IEN,0)),ANS=($P(VAL,U)=DX)
"RTN","PXBGPOV",71,0)
 S ANS=IEN_U_DX_U_$P(VAL,U,12) S:IEN ANS=ANS_U_$G(^AUPNVPOV(IEN,800))
"RTN","PXBGPOV",72,0)
 Q ANS
"RTN","PXBGPOV",73,0)
 ;
"RTN","PXBPL")
0^26^B19131975
"RTN","PXBPL",1,0)
PXBPL ;ISL/JVS - ADD DIAGNOSIS TO PROBLEM LIST ; 6/22/05 4:48pm
"RTN","PXBPL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**11,94,115,130,168**;Aug 12, 1996;Build 14
"RTN","PXBPL",3,0)
 ;
"RTN","PXBPL",4,0)
 ;
"RTN","PXBPL",5,0)
 ;
"RTN","PXBPL",6,0)
 W !,"THIS IS NOT AN ENTRY POINT" Q
"RTN","PXBPL",7,0)
SET ;--SETUP AND NEW VARIABLES
"RTN","PXBPL",8,0)
 N OK,PXBPL,FLAG,DATA,ICDCODE
"RTN","PXBPL",9,0)
 D WIN17^PXBCC(PXBCNT)
"RTN","PXBPL",10,0)
 I '$G(NOPLLIST) Q
"RTN","PXBPL",11,0)
PRMPT ;--Ask if you want to put entries in PL
"RTN","PXBPL",12,0)
 S DIR(0)="Y,A,O"
"RTN","PXBPL",13,0)
 S DIR("B")="NO"
"RTN","PXBPL",14,0)
 I PXBCNT'>1 S DIR("A")="Would you like to add this Diagnosis to the Problem List? "
"RTN","PXBPL",15,0)
 I PXBCNT>1 S DIR("A")="Would you like to add any Diagnoses to the Problem List? "
"RTN","PXBPL",16,0)
 D ^DIR K DIR
"RTN","PXBPL",17,0)
 I Y=0!(Y="^")!(Y="") Q
"RTN","PXBPL",18,0)
SELECT ;--Select entries for PL
"RTN","PXBPL",19,0)
 W !
"RTN","PXBPL",20,0)
 I PXBCNT'>1 S OK=1
"RTN","PXBPL",21,0)
 I PXBCNT>1 W !,"Select 1 or several Diagnoses (eg 1,3,4,7,3-6,2-5): " R OK:DTIME
"RTN","PXBPL",22,0)
 I OK?1.N1"E".NAP S OK=" "_OK
"RTN","PXBPL",23,0)
 I OK?24.N S OK=$E(OK,1,24)
"RTN","PXBPL",24,0)
 ;
"RTN","PXBPL",25,0)
 ;
"RTN","PXBPL",26,0)
 I OK["-" D
"RTN","PXBPL",27,0)
 .N PIECE,PXBI,PXBJ,PXBK
"RTN","PXBPL",28,0)
 .S PIECE="" F PXBI=1:1:$L(OK,",") S PIECE=$P(OK,",",PXBI) I PIECE["-" D
"RTN","PXBPL",29,0)
 ..S PXBJ=0 F PXBJ=$P(PIECE,"-",1):1:$P(PIECE,"-",2) S PXBK=","_PXBJ,OK=OK_PXBK
"RTN","PXBPL",30,0)
 ;
"RTN","PXBPL",31,0)
 ;
"RTN","PXBPL",32,0)
 ;
"RTN","PXBPL",33,0)
 S PXBLEN=0
"RTN","PXBPL",34,0)
 I OK["?" W !,"Enter the ITEM numbers of the entries you whish to add to the PROBLEM LIST." G SELECT
"RTN","PXBPL",35,0)
 ;----SPACE BAR---------
"RTN","PXBPL",36,0)
 I OK'=" ",OK'["^",OK'="" S ^DISV(DUZ,"PXBPL-2")=OK
"RTN","PXBPL",37,0)
 I OK=" ",$D(^DISV(DUZ,"PXBPL-2")) S OK=^DISV(DUZ,"PXBPL-2") W OK
"RTN","PXBPL",38,0)
 ;-----------------------
"RTN","PXBPL",39,0)
 S PXBLEN=$L(OK,",") F PXI=1:1:PXBLEN S PXBPIECE=$P(OK,",",PXI) D
"RTN","PXBPL",40,0)
 .Q:PXBPIECE=""
"RTN","PXBPL",41,0)
 .I $D(PXBSAM(PXBPIECE)) D
"RTN","PXBPL",42,0)
 ..S FLAG=1
"RTN","PXBPL",43,0)
 ..D REVPOV^PXBCC(PXBPIECE)
"RTN","PXBPL",44,0)
 I '$G(FLAG) S DIR(0)="Y^AO",DIR("B")="NO",DIR("A")="INVALID entry. Would you like to try again" D ^DIR K DIR I Y=1 K Y G SELECT
"RTN","PXBPL",45,0)
PRV ;--Ask for provider
"RTN","PXBPL",46,0)
 I '$G(FLAG) Q
"RTN","PXBPL",47,0)
 S FROM="PL" D PRV^PXBGPRV(PXBVST)
"RTN","PXBPL",48,0)
R K ERROR S FROM="PL" D PRV^PXBPPRV G:$G(ERROR) R W IOEDEOP
"RTN","PXBPL",49,0)
 I DATA["^P" D LOC^PXBCC(3,0),EN0^PXBDPRV,LOC^PXBCC(15,0) G PRV
"RTN","PXBPL",50,0)
 D POV^PXBGPOV(PXBVST)
"RTN","PXBPL",51,0)
LOOP ;--Loop through diagnosis
"RTN","PXBPL",52,0)
 S PXBLEN=$L(OK,",") F PXI=1:1:PXBLEN S PXBPIECE=$P(OK,",",PXI) D
"RTN","PXBPL",53,0)
 .I PXBPIECE="" Q
"RTN","PXBPL",54,0)
 .I $D(PXBSAM(PXBPIECE)) D
"RTN","PXBPL",55,0)
 ..S PXBPL("PATIENT")=PATIENT
"RTN","PXBPL",56,0)
 ..S PXBPL("NARRATIVE")=$P($G(PXBSAM(PXBPIECE)),"^",3)
"RTN","PXBPL",57,0)
 ..S PXBPL("PROVIDER")=$P(REQI,"^",1)
"RTN","PXBPL",58,0)
 ..S PXBPL("DIAGNOSIS")=+^AUPNVPOV($O(PXBSKY(PXBPIECE,0)),0)
"RTN","PXBPL",59,0)
 ..S PXBPL("LOCATION")=$P(^AUPNVSIT(PXBVST,0),"^",22)
"RTN","PXBPL",60,0)
 ..;PRH - PX*1*115 - Set up Service Conditions
"RTN","PXBPL",61,0)
 ..N PXSCSTR,PXII,PXTYP
"RTN","PXBPL",62,0)
 ..S PXSCSTR="SC^AO^IR^EC^MST^HNC^CV^SHAD"
"RTN","PXBPL",63,0)
 ..F PXII=1:1:8 D
"RTN","PXBPL",64,0)
 ...S PXTYP=$P(PXSCSTR,"^",PXII)
"RTN","PXBPL",65,0)
 ...S PXBPL(PXTYP)=$P($G(^AUPNVSIT(PXBVST,800)),"^",PXII)
"RTN","PXBPL",66,0)
 ..S ICDCODE="",ICDCODE=$P($G(PXBSAM(PXBPIECE)),"^",1)
"RTN","PXBPL",67,0)
 ..I ICDCODE'="" D  ; Get Lexicon entry for ICD Code
"RTN","PXBPL",68,0)
 ...KILL LEXS D EN^LEXCODE(ICDCODE)
"RTN","PXBPL",69,0)
 ...I $G(LEXS("ICD",0))>0 S PXBPL("LEXICON")=$P($G(LEXS("ICD",1)),"^",1)
"RTN","PXBPL",70,0)
 ..D CREATE^GMPLUTL(.PXBPL,.PXBRES)
"RTN","PXBPL",71,0)
 ..D PR
"RTN","PXBPL",72,0)
 K NOPLLIST
"RTN","PXBPL",73,0)
 Q
"RTN","PXBPL",74,0)
SEND ;--Entry point to send data to problem list
"RTN","PXBPL",75,0)
 N PXBPL,OK,ICDCODE
"RTN","PXBPL",76,0)
 I '$D(IORVON) D TERM^PXBCC
"RTN","PXBPL",77,0)
 S PXBPL("PATIENT")=PATIENT
"RTN","PXBPL",78,0)
 S PXBPL("NARRATIVE")=PXBSAM($O(PXBKY($P($P(REQE,"^",5)," ",1),0)),"LNARR")
"RTN","PXBPL",79,0)
 S PXBPL("PROVIDER")=$P(REQI,"^",1)
"RTN","PXBPL",80,0)
 S PXBPL("DIAGNOSIS")=$P(REQI,"^",5)
"RTN","PXBPL",81,0)
 S PXBPL("LOCATION")=$P(^AUPNVSIT(PXBVST,0),"^",22)
"RTN","PXBPL",82,0)
 ;PRH - PX*1*115 - Set up Service Conditions
"RTN","PXBPL",83,0)
 N PXSCSTR,PXII,PXTYP
"RTN","PXBPL",84,0)
 S PXSCSTR="SC^AO^IR^EC^MST^HNC^CV^SHAD"
"RTN","PXBPL",85,0)
 F PXII=1:1:6 D
"RTN","PXBPL",86,0)
 . S PXTYP=$P(PXSCSTR,"^",PXII)
"RTN","PXBPL",87,0)
 . S PXBPL(PXTYP)=$P($G(^AUPNVSIT(PXBVST,800)),"^",PXII)
"RTN","PXBPL",88,0)
 S ICDCODE="",ICDCODE=$P($G(PXBSAM($O(PXBKY($P($P(REQE,"^",5)," ",1),0)))),"^",1)
"RTN","PXBPL",89,0)
 I ICDCODE'="" D  ; Get Lexicon entry for ICD Code
"RTN","PXBPL",90,0)
 .KILL LEXS D EN^LEXCODE(ICDCODE)
"RTN","PXBPL",91,0)
 .I $G(LEXS("ICD",0))>0 S PXBPL("LEXICON")=$P($G(LEXS("ICD",1)),"^",1)
"RTN","PXBPL",92,0)
 D CREATE^GMPLUTL(.PXBPL,.PXBRES)
"RTN","PXBPL",93,0)
PR ;
"RTN","PXBPL",94,0)
 I PXBRES<0 D  Q  ;'Q'uit added for PX*1*115
"RTN","PXBPL",95,0)
 .W !,IORVON,"--WARNING-Problem NOT Created because: ",PXBRES(0),IORVOFF
"RTN","PXBPL",96,0)
 .D HELP1^PXBUTL1("CON") R OK:DTIME
"RTN","PXBPL",97,0)
 ;
"RTN","PXBPL",98,0)
 ;PX*1*115 - Add Problem File Pointer to V POV file
"RTN","PXBPL",99,0)
 I PXBRES>0 D
"RTN","PXBPL",100,0)
 . N DA,DIE,DR,PXBPLARR,PXBPLERR,PXBPLPOV
"RTN","PXBPL",101,0)
 . S DA=$O(PXBSKY(PXBPIECE,0))
"RTN","PXBPL",102,0)
 . S PXBPLPOV=9000010.07
"RTN","PXBPL",103,0)
 . K PXBPLARR,PXBPLERR
"RTN","PXBPL",104,0)
 . D GETS^DIQ(PXBPLPOV,(DA_","),.16,"I","PXBPLARR","PXBPLERR")
"RTN","PXBPL",105,0)
 . Q:$D(PXBPLERR)
"RTN","PXBPL",106,0)
 . I $L($G(PXBPLARR(PXBPLPOV,(DA_","),.16,"I"))) Q
"RTN","PXBPL",107,0)
 . ;
"RTN","PXBPL",108,0)
 . S DIE="^AUPNVPOV(",DR=".16////"_PXBRES
"RTN","PXBPL",109,0)
 . D ^DIE
"RTN","PXBPL",110,0)
 ;
"RTN","PXBPL",111,0)
 Q
"RTN","PXCADXP2")
0^8^B22989693
"RTN","PXCADXP2",1,0)
PXCADXP2 ;ISL/dee & LEA/Chylton - Validates & Translates data from the PCE Device Interface into a call to V POV & update Problem List ; 6/6/05 12:16pm
"RTN","PXCADXP2",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**115,130,168**;Aug 12, 1996;Build 14
"RTN","PXCADXP2",3,0)
 Q
"RTN","PXCADXP2",4,0)
 ;
"RTN","PXCADXP2",5,0)
PART2 ;
"RTN","PXCADXP2",6,0)
 ;Problem Active
"RTN","PXCADXP2",7,0)
 S PXCAITEM=$P(PXCADXPL,U,6)
"RTN","PXCADXP2",8,0)
 I '(PXCAITEM="A"!(PXCAITEM="I")!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,6)="Problem Active flag bad^"_PXCAITEM
"RTN","PXCADXP2",9,0)
 ;
"RTN","PXCADXP2",10,0)
 ;Problem Onset Date
"RTN","PXCADXP2",11,0)
 S PXCAITEM=$P(PXCADXPL,U,7)
"RTN","PXCADXP2",12,0)
 I PXCAITEM]"",PXCAITEM>DT!(PXCAITEM<1800000)!($P(+PXCAITEM,".")'=PXCAITEM)!(PXCAITEM>+$P($P(PXCA("ENCOUNTER"),"^"),".")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,7)="Problem Onset Date is bad^"_PXCAITEM
"RTN","PXCADXP2",13,0)
 ;
"RTN","PXCADXP2",14,0)
 ;Problem Resolved Date
"RTN","PXCADXP2",15,0)
 S PXCAITEM=$P(PXCADXPL,U,8)
"RTN","PXCADXP2",16,0)
 I PXCAITEM]"",PXCAITEM>DT!(PXCAITEM<1800000)!($P(+PXCAITEM,".")'=PXCAITEM)!(PXCAITEM>+$P($P(PXCA("ENCOUNTER"),"^"),".")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,8)="Problem Resolved Date is bad^"_PXCAITEM
"RTN","PXCADXP2",17,0)
 ;
"RTN","PXCADXP2",18,0)
 ;SC Condition
"RTN","PXCADXP2",19,0)
 S PXCAITEM=$P(PXCADXPL,U,9)
"RTN","PXCADXP2",20,0)
 I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,9)="SC flag bad^"_PXCAITEM
"RTN","PXCADXP2",21,0)
 ;
"RTN","PXCADXP2",22,0)
 ;AO Condition
"RTN","PXCADXP2",23,0)
 S PXCAITEM=$P(PXCADXPL,U,10)
"RTN","PXCADXP2",24,0)
 I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,10)="AO flag bad^"_PXCAITEM
"RTN","PXCADXP2",25,0)
 ;
"RTN","PXCADXP2",26,0)
 ;IR Condition
"RTN","PXCADXP2",27,0)
 S PXCAITEM=$P(PXCADXPL,U,11)
"RTN","PXCADXP2",28,0)
 I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,11)="IR flag bad^"_PXCAITEM
"RTN","PXCADXP2",29,0)
 ;
"RTN","PXCADXP2",30,0)
 ;EC Condition
"RTN","PXCADXP2",31,0)
 S PXCAITEM=$P(PXCADXPL,U,12)
"RTN","PXCADXP2",32,0)
 I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,12)="EC flag bad^"_PXCAITEM
"RTN","PXCADXP2",33,0)
 ;
"RTN","PXCADXP2",34,0)
 ;PX*1*115 - MST Condition
"RTN","PXCADXP2",35,0)
 S PXCAITEM=$P(PXCADXPL,U,15)
"RTN","PXCADXP2",36,0)
 I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,15)="MST flag bad^"_PXCAITEM
"RTN","PXCADXP2",37,0)
 ;
"RTN","PXCADXP2",38,0)
 ;PX*1*115 - HNC Condition
"RTN","PXCADXP2",39,0)
 S PXCAITEM=$P(PXCADXPL,U,16)
"RTN","PXCADXP2",40,0)
 I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,16)="HNC flag bad^"_PXCAITEM
"RTN","PXCADXP2",41,0)
 ;
"RTN","PXCADXP2",42,0)
 S PXCAITEM=$P(PXCADXPL,U,17)
"RTN","PXCADXP2",43,0)
 I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,17)="CV flag bad^"_PXCAITEM
"RTN","PXCADXP2",44,0)
 ;
"RTN","PXCADXP2",45,0)
 S PXCAITEM=$P(PXCADXPL,U,18)
"RTN","PXCADXP2",46,0)
 I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,18)="PROJ 112/SHAD flag bad^"_PXCAITEM
"RTN","PXCADXP2",47,0)
 ;
"RTN","PXCADXP2",48,0)
 ;Narrative: Required for DX and for new Problem
"RTN","PXCADXP2",49,0)
 S PXCAITEM=$P(PXCADXPL,"^",13),PXCAITM2=$L(PXCAITEM)
"RTN","PXCADXP2",50,0)
 I PXCAITEM]"" D
"RTN","PXCADXP2",51,0)
 . I PXCAITM2<2!(PXCAITM2>80) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,13)="Provider's Narrative must be 2-80 Characters^"_PXCAITEM
"RTN","PXCADXP2",52,0)
 . E  D
"RTN","PXCADXP2",53,0)
 .. S PXCAITM3=+$$PROVNARR^PXAPI(PXCAITEM,9000010.07,$G(PXCACLEX))
"RTN","PXCADXP2",54,0)
 .. I PXCAITM3'>0 S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,13)="Could not get pointer to Provider's NARRATIVE^"_PXCAITEM
"RTN","PXCADXP2",55,0)
 .. E  S $P(PXCADXPL,"^",13)=PXCAITM3
"RTN","PXCADXP2",56,0)
 E  D
"RTN","PXCADXP2",57,0)
 .I PXCADIAG S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,13)="Provider's Narrative is required for DIAGNOSIS "
"RTN","PXCADXP2",58,0)
 .I PXCAPROB,($P(PXCADXPL,"^",4)="") S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,13)=$P($G(PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,13)),"^",1)_"Provider's Narrative is required for a new PROBLEM"
"RTN","PXCADXP2",59,0)
 ;
"RTN","PXCADXP2",60,0)
 ;Narrative Category
"RTN","PXCADXP2",61,0)
 S PXCAITEM=$P(PXCADXPL,"^",14),PXCAITM2=$L(PXCAITEM)
"RTN","PXCADXP2",62,0)
 I PXCAITEM]"" D
"RTN","PXCADXP2",63,0)
 . I PXCAITM2<2!(PXCAITM2>80) S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,14)="Provider's NARRATIVE Category must be 2-80 Characters^"_PXCAITEM
"RTN","PXCADXP2",64,0)
 . E  D
"RTN","PXCADXP2",65,0)
 .. S PXCAITM3=+$$PROVNARR^PXAPI(PXCAITEM,9000010.07)
"RTN","PXCADXP2",66,0)
 .. I PXCAITM3'>0 S PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,14)="Could not get pointer to Provider's NARRATIVE Category^"_PXCAITEM
"RTN","PXCADXP2",67,0)
 .. E  S $P(PXCADXPL,"^",14)=PXCAITM3
"RTN","PXCADXP2",68,0)
 ;
"RTN","PXCADXP2",69,0)
 Q
"RTN","PXCADXP2",70,0)
 ;
"RTN","PXCAPL")
0^9^B31157708
"RTN","PXCAPL",1,0)
PXCAPL ;ISL/dee & LEA/Chylton - Validates data from the PCE Device Interface into a call to update Problem List ;6/6/05
"RTN","PXCAPL",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**24,27,115,130,168**;Aug 12, 1996;Build 14
"RTN","PXCAPL",3,0)
 Q
"RTN","PXCAPL",4,0)
 ;   PXCAPROB  Copy of a Problem node of the PXCA array
"RTN","PXCAPL",5,0)
 ;   PXCAPRV   Pointer to the provider (200)
"RTN","PXCAPL",6,0)
 ;   PXCAINDX  Count of the number of problems for one provider
"RTN","PXCAPL",7,0)
 ;   PXCAPL    The parameter array passed to Problem List
"RTN","PXCAPL",8,0)
 ;   PXCARES   The result back from Problem List
"RTN","PXCAPL",9,0)
 ;   PXCANUMB  Count of the total number of problems
"RTN","PXCAPL",10,0)
 ;
"RTN","PXCAPL",11,0)
 ;
"RTN","PXCAPL",12,0)
PROBLEM(PXCA,PXCABULD,PXCAERRS) ;
"RTN","PXCAPL",13,0)
 Q:'$D(PXCA("PROBLEM"))
"RTN","PXCAPL",14,0)
 I '$D(^AUPNPROB)!($T(UPDATE^GMPLUTL)="") S PXCA("WARNING","PROBLEM",0,0,0)="Problem List Package is not installed" Q
"RTN","PXCAPL",15,0)
 N PXCAPROB,PXCAPRV,PXCAINDX
"RTN","PXCAPL",16,0)
 N PXCAITEM,PXCAITM2
"RTN","PXCAPL",17,0)
 S PXCAPRV=""
"RTN","PXCAPL",18,0)
 F  S PXCAPRV=$O(PXCA("PROBLEM",PXCAPRV)) Q:PXCAPRV']""  D
"RTN","PXCAPL",19,0)
 . I '$$ACTIVPRV^PXAPI(PXCAPRV,PXCADT) S PXCA("ERROR","PROBLEM",PXCAPRV,0,0)="Provider is not active or valid^"_PXCAPRV
"RTN","PXCAPL",20,0)
 . E  I PXCABULD!PXCAERRS D ANOTHPRV^PXCAPRV(PXCAPRV)
"RTN","PXCAPL",21,0)
 . S PXCAINDX=0
"RTN","PXCAPL",22,0)
 . F  S PXCAINDX=$O(PXCA("PROBLEM",PXCAPRV,PXCAINDX)) Q:PXCAINDX']""  D
"RTN","PXCAPL",23,0)
 .. S PXCAPROB=$G(PXCA("PROBLEM",PXCAPRV,PXCAINDX))
"RTN","PXCAPL",24,0)
 .. I PXCAPROB="" S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,0)="PROBLEM data missing" Q
"RTN","PXCAPL",25,0)
 .. S PXCAITEM=$P(PXCAPROB,U,1),PXCAITM2=$L(PXCAITEM)
"RTN","PXCAPL",26,0)
 .. I PXCAITEM]"",PXCAITM2<2!(PXCAITM2>80) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,1)="Problem Name must be 2-80 Characters^"_PXCAITEM
"RTN","PXCAPL",27,0)
 .. S PXCAITEM=$P(PXCAPROB,U,2)
"RTN","PXCAPL",28,0)
 .. I PXCAITEM]"",PXCAITEM>DT!(PXCAITEM<1800000)!($P(+PXCAITEM,".")'=PXCAITEM)!(PXCAITEM>+$P($P(PXCA("ENCOUNTER"),"^"),".")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,7)="Problem Onset Date is bad^"_PXCAITEM
"RTN","PXCAPL",29,0)
 .. S PXCAITEM=$P(PXCAPROB,U,3)
"RTN","PXCAPL",30,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,3)="Problem Active flag bad^"_PXCAITEM
"RTN","PXCAPL",31,0)
 .. E  I PXCAITEM="" S $P(PXCA("PROBLEM",PXCAPRV,PXCAINDX),U,3)=1
"RTN","PXCAPL",32,0)
 .. S PXCAITEM=$P(PXCAPROB,U,4)
"RTN","PXCAPL",33,0)
 .. I PXCAITEM]"",PXCAITEM>DT!(PXCAITEM<1800000)!($P(+PXCAITEM,".")'=PXCAITEM)!(PXCAITEM>+$P($P(PXCA("ENCOUNTER"),"^"),".")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,7)="Problem Resolved Date is bad^"_PXCAITEM
"RTN","PXCAPL",34,0)
 .. S PXCAITEM=$P(PXCAPROB,U,5)
"RTN","PXCAPL",35,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,5)="SC flag bad^"_PXCAITEM
"RTN","PXCAPL",36,0)
 .. S PXCAITEM=$P(PXCAPROB,U,6)
"RTN","PXCAPL",37,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,6)="AO flag bad^"_PXCAITEM
"RTN","PXCAPL",38,0)
 .. S PXCAITEM=$P(PXCAPROB,U,7)
"RTN","PXCAPL",39,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,7)="IR flag bad^"_PXCAITEM
"RTN","PXCAPL",40,0)
 .. S PXCAITEM=$P(PXCAPROB,U,8)
"RTN","PXCAPL",41,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,8)="EC flag bad^"_PXCAITEM
"RTN","PXCAPL",42,0)
 .. ;PX*1*115 - ADD MST & HNC
"RTN","PXCAPL",43,0)
 .. S PXCAITEM=$P(PXCAPROB,U,13)
"RTN","PXCAPL",44,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,13)="MST flag bad^"_PXCAITEM
"RTN","PXCAPL",45,0)
 .. S PXCAITEM=$P(PXCAPROB,U,14)
"RTN","PXCAPL",46,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,14)="HNC flag bad^"_PXCAITEM
"RTN","PXCAPL",47,0)
 .. S PXCAITEM=$P(PXCAPROB,U,15)
"RTN","PXCAPL",48,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,14)="CV flag bad^"_PXCAITEM
"RTN","PXCAPL",49,0)
 .. S PXCAITEM=$P(PXCAPROB,U,16)
"RTN","PXCAPL",50,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,16)="PROJ 112/SHAD flag bad^"_PXCAITEM
"RTN","PXCAPL",51,0)
 .. S PXCAITEM=$P(PXCAPROB,U,9)
"RTN","PXCAPL",52,0)
 .. I PXCAITEM>0 D
"RTN","PXCAPL",53,0)
 ... N DIC,DR,DA,DIQ,PXCADIQ1
"RTN","PXCAPL",54,0)
 ... S DIC=80
"RTN","PXCAPL",55,0)
 ... S DR=".01;102"
"RTN","PXCAPL",56,0)
 ... S DA=PXCAITEM
"RTN","PXCAPL",57,0)
 ... S DIQ="PXCADIQ1("
"RTN","PXCAPL",58,0)
 ... S DIQ(0)="I"
"RTN","PXCAPL",59,0)
 ... D EN^DIQ1
"RTN","PXCAPL",60,0)
 ... I $G(PXCADIQ1(80,DA,.01,"I"))="" S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,9)="ICD9 Code not in file 80^"_PXCAITEM
"RTN","PXCAPL",61,0)
 ... E  I $G(PXCADIQ1(80,DA,102,"I")),PXCADIQ1(80,DA,102,"I")'>+PXCADT S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,9)="ICD9 Code is INACTIVE^"_PXCAITEM
"RTN","PXCAPL",62,0)
 .. S PXCAITEM=$P(PXCAPROB,U,10)
"RTN","PXCAPL",63,0)
 .. I PXCAITEM]"" D
"RTN","PXCAPL",64,0)
 ... I $G(^AUPNPROB(PXCAITEM,0))="" S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,10)="Problem not in file 9000011^"_PXCAITEM
"RTN","PXCAPL",65,0)
 ... E  I PXCAPAT'=$P($G(^AUPNPROB(PXCAITEM,0)),"^",2) S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,10)="Problem in file 9000011 is for a different Patient^"_PXCAITEM
"RTN","PXCAPL",66,0)
 .. E  S PXCAITEM=$P(PXCAPROB,U,1) I PXCAITEM']"" S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,1)="Problem Name required for a new Problem List entry^"_PXCAITEM
"RTN","PXCAPL",67,0)
 .. S PXCAITEM=$P(PXCAPROB,U,11),PXCAITM2=$L(PXCAITEM)
"RTN","PXCAPL",68,0)
 .. I PXCAITM2>60 S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,11)="PROBLEM comment must be 1-60 Characters^"_PXCAITEM
"RTN","PXCAPL",69,0)
 .. ;
"RTN","PXCAPL",70,0)
 .. ;Clinical Lexicon Term
"RTN","PXCAPL",71,0)
 .. S PXCAITEM=$P(PXCAPROB,"^",12)
"RTN","PXCAPL",72,0)
 .. I PXCAITEM]"" D
"RTN","PXCAPL",73,0)
 ... I $D(^LEX(757.01)) D
"RTN","PXCAPL",74,0)
 .... I $D(^LEX(757.01,PXCAITEM,0))#2'=1 S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,12)="Lexicon Utility term is not in file 757.01^"_PXCAITEM
"RTN","PXCAPL",75,0)
 .... E  S PXCACLEX=PXCAITEM
"RTN","PXCAPL",76,0)
 ... E  I $D(^GMP(757.01)) D
"RTN","PXCAPL",77,0)
 .... I $D(^GMP(757.01,PXCAITEM,0))#2'=1 S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,12)="Clinical Lexicon Utility term is not in file 757.01^"_PXCAITEM
"RTN","PXCAPL",78,0)
 .... E  S PXCACLEX=PXCAITEM
"RTN","PXCAPL",79,0)
 ... E  S PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX,12)="Lexicon Utility is not installed^"_PXCAITEM
"RTN","PXCAPL",80,0)
 ;
"RTN","PXCAPL",81,0)
 Q
"RTN","PXCAPL",82,0)
 ;
"RTN","PXCAPL1")
0^10^B6017229
"RTN","PXCAPL1",1,0)
PXCAPL1 ;ISL/dee & LEA/Chylton - Translates data from the PCE Device Interface into a call to update Problem List ;6/6/05
"RTN","PXCAPL1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**33,115,130,168**;Aug 12, 1996;Build 14
"RTN","PXCAPL1",3,0)
 Q
"RTN","PXCAPL1",4,0)
 ;   PXCAPROB  Copy of a Problem node of the PXCA array
"RTN","PXCAPL1",5,0)
 ;   PXCAPRV   Pointer to the provider (200)
"RTN","PXCAPL1",6,0)
 ;   PXCAINDX  Count of the number of problems for one provider
"RTN","PXCAPL1",7,0)
 ;   PXCAPL    The parameter array passed to Problem List
"RTN","PXCAPL1",8,0)
 ;   PXCARES   The result back from Problem List
"RTN","PXCAPL1",9,0)
 ;   PXCANUMB  Count of the total number of problems
"RTN","PXCAPL1",10,0)
 ;
"RTN","PXCAPL1",11,0)
PROBLIST ;Problem List
"RTN","PXCAPL1",12,0)
 Q:'$D(^AUPNPROB)!($T(UPDATE^GMPLUTL)="")
"RTN","PXCAPL1",13,0)
 N PXCAPRV,PXCAINDX,PXCANUMB
"RTN","PXCAPL1",14,0)
 S PXCANUMB=0
"RTN","PXCAPL1",15,0)
 S PXCAPRV=""
"RTN","PXCAPL1",16,0)
 F  S PXCAPRV=$O(PXCA("PROBLEM",PXCAPRV)) Q:PXCAPRV'>0  D
"RTN","PXCAPL1",17,0)
 . S PXCAINDX=0
"RTN","PXCAPL1",18,0)
 . F  S PXCAINDX=$O(PXCA("PROBLEM",PXCAPRV,PXCAINDX)) Q:PXCAINDX']""  D
"RTN","PXCAPL1",19,0)
 .. S PXCANUMB=PXCANUMB+1
"RTN","PXCAPL1",20,0)
 .. Q:$D(PXCA("ERROR","PROBLEM",PXCAPRV,PXCAINDX))
"RTN","PXCAPL1",21,0)
 .. N PXCAPROB,PXCAPL,PXCARES
"RTN","PXCAPL1",22,0)
 .. S PXCAPROB=PXCA("PROBLEM",PXCAPRV,PXCAINDX)
"RTN","PXCAPL1",23,0)
 .. S PXCAPL("PROBLEM")=$P(PXCAPROB,"^",10)
"RTN","PXCAPL1",24,0)
 .. S PXCAPL("NARRATIVE")=$P(PXCAPROB,"^",1)
"RTN","PXCAPL1",25,0)
 .. S PXCAPL("PATIENT")=PXCAPAT
"RTN","PXCAPL1",26,0)
 .. S PXCAPL("STATUS")=$S($P(PXCAPROB,"^",3)="1":"A",$P(PXCAPROB,"^",3)="0":"I",1:"A")
"RTN","PXCAPL1",27,0)
 .. S PXCAPL("PROVIDER")=PXCAPRV
"RTN","PXCAPL1",28,0)
 .. S PXCAPL("LOCATION")=PXCAHLOC
"RTN","PXCAPL1",29,0)
 .. S PXCAPL("SC")=$P(PXCAPROB,"^",5)
"RTN","PXCAPL1",30,0)
 .. S PXCAPL("AO")=$P(PXCAPROB,"^",6)
"RTN","PXCAPL1",31,0)
 .. S PXCAPL("IR")=$P(PXCAPROB,"^",7)
"RTN","PXCAPL1",32,0)
 .. S PXCAPL("EC")=$P(PXCAPROB,"^",8)
"RTN","PXCAPL1",33,0)
 .. ;PX*1*115 Add MST & HNC
"RTN","PXCAPL1",34,0)
 .. S PXCAPL("MST")=$P(PXCAPROB,"^",13)
"RTN","PXCAPL1",35,0)
 .. S PXCAPL("HNC")=$P(PXCAPROB,"^",14)
"RTN","PXCAPL1",36,0)
 .. S PXCAPL("CV")=$P(PXCAPROB,"^",15)
"RTN","PXCAPL1",37,0)
 .. S PXCAPL("SHAD")=$P(PXCAPROB,"^",16)
"RTN","PXCAPL1",38,0)
 .. S PXCAPL("DIAGNOSIS")=$P(PXCAPROB,"^",9)
"RTN","PXCAPL1",39,0)
 .. S PXCAPL("RESOLVED")=$P(PXCAPROB,"^",4)
"RTN","PXCAPL1",40,0)
 .. S PXCAPL("ONSET")=$P(PXCAPROB,"^",2)
"RTN","PXCAPL1",41,0)
 .. S PXCAPL("COMMENT")=$P(PXCAPROB,"^",11)
"RTN","PXCAPL1",42,0)
 .. S PXCAPL("LEXICON")=$P(PXCAPROB,"^",12)
"RTN","PXCAPL1",43,0)
 .. D UPDATE^GMPLUTL(.PXCAPL,.PXCARES)
"RTN","PXCAPL1",44,0)
 .. I $G(PXCARES)'>0 D
"RTN","PXCAPL1",45,0)
 ... I PXCARES(0)'="Duplicate problem" S PXKERROR("PL",PXCANUMB,0,0)="Problem Not Stored = "_$G(PXCARES(0))_"  For Provider = "_PXCAPRV_"  and index = "_PXCAINDX
"RTN","PXCAPL1",46,0)
 ... S PXCA("WARNING","PROBLEM",PXCAPRV,PXCAINDX,0)="PROBLEM Not Stored^"_$G(PXCARES(0))
"RTN","PXCAPL1",47,0)
 Q
"RTN","PXCAPL1",48,0)
 ;
"RTN","PXCAPL2")
0^11^B8360764
"RTN","PXCAPL2",1,0)
PXCAPL2 ;ISL/dee & LEA/Chylton - Translates data from the PCE Device Interface for "DIAGNOSIS/PROBLEM" into a call to update Problem List ;6/6/05
"RTN","PXCAPL2",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**33,115,130,168**;Aug 12, 1996;Build 14
"RTN","PXCAPL2",3,0)
 Q
"RTN","PXCAPL2",4,0)
 ;   PXCADXPL  Copy of a Problem node of the PXCA array
"RTN","PXCAPL2",5,0)
 ;   PXCAPRV   Pointer to the provider (200)
"RTN","PXCAPL2",6,0)
 ;   PXCAINDX  Count of the number of problems for one provider
"RTN","PXCAPL2",7,0)
 ;   PXCAPL    The parameter array passed to Problem List
"RTN","PXCAPL2",8,0)
 ;   PXCARES   The result back from Problem List
"RTN","PXCAPL2",9,0)
 ;   PXCANUMB  Count of the total number of problems
"RTN","PXCAPL2",10,0)
 ;
"RTN","PXCAPL2",11,0)
PROBLIST ;Problem List
"RTN","PXCAPL2",12,0)
 Q:'$D(^AUPNPROB)!($T(UPDATE^GMPLUTL)="")
"RTN","PXCAPL2",13,0)
 N PXCAPRV,PXCAINDX,PXCANUMB
"RTN","PXCAPL2",14,0)
 S PXCANUMB=0
"RTN","PXCAPL2",15,0)
 S PXCAPRV=""
"RTN","PXCAPL2",16,0)
 F  S PXCAPRV=$O(PXCA("DIAGNOSIS/PROBLEM",PXCAPRV)) Q:PXCAPRV'>0  D
"RTN","PXCAPL2",17,0)
 . S PXCAINDX=0
"RTN","PXCAPL2",18,0)
 . F  S PXCAINDX=$O(PXCA("DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX)) Q:PXCAINDX']""  D
"RTN","PXCAPL2",19,0)
 .. S PXCANUMB=PXCANUMB+1
"RTN","PXCAPL2",20,0)
 .. ;Quit if there is an error in this node
"RTN","PXCAPL2",21,0)
 .. Q:$D(PXCA("ERROR","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX))
"RTN","PXCAPL2",22,0)
 .. N PXCADXPL,PXCAPL,PXCARES
"RTN","PXCAPL2",23,0)
 .. S PXCADXPL=PXCA("DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX)
"RTN","PXCAPL2",24,0)
 .. S PXCAPL("COMMENT")=$P($G(PXCA("DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,"NOTE")),"^",1)
"RTN","PXCAPL2",25,0)
 .. ;Quit if this is not a problem
"RTN","PXCAPL2",26,0)
 .. Q:"^^^"[$P(PXCADXPL,"^",5,8)&(PXCAPL("COMMENT")="")
"RTN","PXCAPL2",27,0)
 .. S PXCAPL("PATIENT")=PXCAPAT
"RTN","PXCAPL2",28,0)
 .. S PXCAPL("PROVIDER")=PXCAPRV
"RTN","PXCAPL2",29,0)
 .. S PXCAPL("LOCATION")=PXCAHLOC
"RTN","PXCAPL2",30,0)
 .. S PXCAPL("DIAGNOSIS")=$P(PXCADXPL,"^",1)
"RTN","PXCAPL2",31,0)
 .. S PXCAPL("LEXICON")=$P(PXCADXPL,"^",3)
"RTN","PXCAPL2",32,0)
 .. S PXCAPL("PROBLEM")=$P(PXCADXPL,"^",4)
"RTN","PXCAPL2",33,0)
 .. S PXCAPL("STATUS")=$P(PXCADXPL,"^",6)
"RTN","PXCAPL2",34,0)
 .. S PXCAPL("ONSET")=$P(PXCADXPL,"^",7)
"RTN","PXCAPL2",35,0)
 .. S PXCAPL("RESOLVED")=$P(PXCADXPL,"^",8)
"RTN","PXCAPL2",36,0)
 .. S PXCAPL("SC")=$P(PXCADXPL,"^",9)
"RTN","PXCAPL2",37,0)
 .. S PXCAPL("AO")=$P(PXCADXPL,"^",10)
"RTN","PXCAPL2",38,0)
 .. S PXCAPL("IR")=$P(PXCADXPL,"^",11)
"RTN","PXCAPL2",39,0)
 .. S PXCAPL("EC")=$P(PXCADXPL,"^",12)
"RTN","PXCAPL2",40,0)
 .. ;Add MST & HNC
"RTN","PXCAPL2",41,0)
 .. S PXCAPL("MST")=$P(PXCADXPL,"^",15)
"RTN","PXCAPL2",42,0)
 .. S PXCAPL("HNC")=$P(PXCADXPL,"^",16)
"RTN","PXCAPL2",43,0)
 .. S PXCAPL("CV")=$P(PXCADXPL,"^",17)
"RTN","PXCAPL2",44,0)
 .. S PXCAPL("SHAD")=$P(PXCADXPL,"^",18)
"RTN","PXCAPL2",45,0)
 .. S PXCAPL("NARRATIVE")=$P(PXCADXPL,"^",13)
"RTN","PXCAPL2",46,0)
 .. S:'PXCAPL("PROBLEM") PXCAPL("RECORDED")=$P($P(PXCA("ENCOUNTER"),"^"),".") ;Only if new problem
"RTN","PXCAPL2",47,0)
 .. D UPDATE^GMPLUTL(.PXCAPL,.PXCARES)
"RTN","PXCAPL2",48,0)
 .. I $G(PXCARES)'>0 D
"RTN","PXCAPL2",49,0)
 ... I PXCARES(0)'="Duplicate problem" S PXKERROR("PL",PXCANUMB,0,0)="Problem Not Stored = "_$G(PXCARES(0))_"  For Provider = "_PXCAPRV_"  and index = "_PXCAINDX
"RTN","PXCAPL2",50,0)
 ... S PXCA("WARNING","DIAGNOSIS/PROBLEM",PXCAPRV,PXCAINDX,0)="PROBLEM Not Stored^"_$G(PXCARES(0))
"RTN","PXCAPL2",51,0)
 .. E  I $D(^TMP("PXK",$J,"POV",PXCADNUM(PXCAPRV,PXCAINDX),0,"AFTER"))#2 S $P(^("AFTER"),"^",16)=PXCARES
"RTN","PXCAPL2",52,0)
 Q
"RTN","PXCAPL2",53,0)
 ;
"RTN","PXCAPOV")
0^7^B38043079
"RTN","PXCAPOV",1,0)
PXCAPOV ;ISL/dee & LEA/Chylton - Validates data from the PCE Device Interface into PCE's PXK format for POV ;3/20/97
"RTN","PXCAPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**24,27,33,121,130,124,168**;Aug 12, 1996;Build 14
"RTN","PXCAPOV",3,0)
 Q
"RTN","PXCAPOV",4,0)
 ; Variables
"RTN","PXCAPOV",5,0)
 ;   PXCADIAG  Copy of a Diagnosis node of the PXCA array
"RTN","PXCAPOV",6,0)
 ;   PXCAPRV   Pointer to the provider (200)
"RTN","PXCAPOV",7,0)
 ;   ;   PXCANPOV  Count of the number of POVs
"RTN","PXCAPOV",8,0)
 ;   PXCANUMB  Count of the number if POVs
"RTN","PXCAPOV",9,0)
 ;   PXCAINDX  Count of the number of Diagnoses for one provider
"RTN","PXCAPOV",10,0)
 ;
"RTN","PXCAPOV",11,0)
DIAG(PXCA,PXCABULD,PXCAERRS) ;Validation routine for POV
"RTN","PXCAPOV",12,0)
 N PXCADIAG,PXCAPRV,PXCAINDX
"RTN","PXCAPOV",13,0)
 S PXCAPRV=""
"RTN","PXCAPOV",14,0)
 F  S PXCAPRV=$O(PXCA("DIAGNOSIS",PXCAPRV)) Q:PXCAPRV']""  D
"RTN","PXCAPOV",15,0)
 . I PXCAPRV>0 D
"RTN","PXCAPOV",16,0)
 .. I '$$ACTIVPRV^PXAPI(PXCAPRV,PXCADT) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,0,0)="Provider is not active or valid^"_PXCAPRV
"RTN","PXCAPOV",17,0)
 .. E  I PXCABULD!PXCAERRS D ANOTHPRV^PXCAPRV(PXCAPRV)
"RTN","PXCAPOV",18,0)
 . S PXCAINDX=0
"RTN","PXCAPOV",19,0)
 . F  S PXCAINDX=$O(PXCA("DIAGNOSIS",PXCAPRV,PXCAINDX)) Q:PXCAINDX']""  D
"RTN","PXCAPOV",20,0)
 .. S PXCADIAG=$G(PXCA("DIAGNOSIS",PXCAPRV,PXCAINDX))
"RTN","PXCAPOV",21,0)
 .. I PXCADIAG="" S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,0)="DIAGNOSIS data missing" Q
"RTN","PXCAPOV",22,0)
 .. S PXCANPOV=PXCANPOV+1
"RTN","PXCAPOV",23,0)
 .. N PXCAITEM,PXCAITM2,PXCAPNAR,PXCANARC,PXCACLEX
"RTN","PXCAPOV",24,0)
 .. ;
"RTN","PXCAPOV",25,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",1)
"RTN","PXCAPOV",26,0)
 .. D
"RTN","PXCAPOV",27,0)
 ... ;N DIC,DR,DA,DIQ,PXCADIQ1
"RTN","PXCAPOV",28,0)
 ... ;S DIC=80
"RTN","PXCAPOV",29,0)
 ... ;S DR=".01;102"
"RTN","PXCAPOV",30,0)
 ... ;S DA=$S(PXCAITEM'="":PXCAITEM,1:-1)
"RTN","PXCAPOV",31,0)
 ... ;S DIQ="PXCADIQ1("
"RTN","PXCAPOV",32,0)
 ... ;S DIQ(0)="I"
"RTN","PXCAPOV",33,0)
 ... ;D EN^DIQ1
"RTN","PXCAPOV",34,0)
 ... ;I $G(PXCADIQ1(80,DA,.01,"I"))="" S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,1)="ICD9 Code not in file 80^"_PXCAITEM
"RTN","PXCAPOV",35,0)
 ... ;E  I $G(PXCADIQ1(80,DA,102,"I")),PXCADIQ1(80,DA,102,"I")'>+PXCADT S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,1)="ICD9 Code is INACTIVE^"_PXCAITEM
"RTN","PXCAPOV",36,0)
 ... N ICDSTR,ICDCN,ICDID
"RTN","PXCAPOV",37,0)
 ... S ICDSTR=$$ICDDX^ICDCODE($S(PXCAITEM'="":PXCAITEM,1:-1),+PXCADT)
"RTN","PXCAPOV",38,0)
 ... S ICDCN=$P(ICDSTR,"^",2)
"RTN","PXCAPOV",39,0)
 ... S ICDID=$P(ICDSTR,"^",12)
"RTN","PXCAPOV",40,0)
 ... I +ICDSTR=-1 S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,1)="ICD9 Code not in file 80^"_PXCAITEM
"RTN","PXCAPOV",41,0)
 ... E  I '$P(ICDSTR,"^",10) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,1)="ICD9 Code is INACTIVE^"_PXCAITEM
"RTN","PXCAPOV",42,0)
 ...;
"RTN","PXCAPOV",43,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",2)
"RTN","PXCAPOV",44,0)
 .. I '(PXCAITEM=""!(PXCAITEM="P")!(PXCAITEM="S")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,2)="Diagnosis specification code must be P|S^"_PXCAITEM
"RTN","PXCAPOV",45,0)
 .. E  I PXCAITEM="P" D
"RTN","PXCAPOV",46,0)
 ... I 'PXCAPDX S PXCAPDX=$P(PXCADIAG,"^",1)
"RTN","PXCAPOV",47,0)
 ... E  I $P($G(^PX(815,1,"DI")),"^",2) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,2)="There is already a Primary Diagnosis for this encounter^"_PXCAITEM
"RTN","PXCAPOV",48,0)
 ... E  D
"RTN","PXCAPOV",49,0)
 .... S PXCA("WARNING","DIAGNOSIS",PXCAPRV,PXCAINDX,2)="There is already a Primary Diagnosis. This one is changed to Secondary^"_PXCAITEM
"RTN","PXCAPOV",50,0)
 .... S $P(PXCADIAG,"^",2)="S"
"RTN","PXCAPOV",51,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",3)
"RTN","PXCAPOV",52,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,3)="SC flag bad^"_PXCAITEM
"RTN","PXCAPOV",53,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",4)
"RTN","PXCAPOV",54,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,4)="AO flag bad^"_PXCAITEM
"RTN","PXCAPOV",55,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",5)
"RTN","PXCAPOV",56,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,5)="IR flag bad^"_PXCAITEM
"RTN","PXCAPOV",57,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",6)
"RTN","PXCAPOV",58,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,6)="EC flag bad^"_PXCAITEM
"RTN","PXCAPOV",59,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",11)
"RTN","PXCAPOV",60,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,11)="MST flag bad^"_PXCAITEM
"RTN","PXCAPOV",61,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",12)
"RTN","PXCAPOV",62,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,12)="HNC flag bad^"_PXCAITEM
"RTN","PXCAPOV",63,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",13)
"RTN","PXCAPOV",64,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,13)="CV flag bad^"_PXCAITEM ;CV
"RTN","PXCAPOV",65,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",14)
"RTN","PXCAPOV",66,0)
 .. I '(PXCAITEM="R"!(PXCAITEM="O")!(PXCAITEM="RO")!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,14)="Ordering/Resulting field bad^"_PXCAITEM
"RTN","PXCAPOV",67,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",14)
"RTN","PXCAPOV",68,0)
 .. I '(PXCAITEM=1!(PXCAITEM=0)!(PXCAITEM="")) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,15)="PROJ 112/SHAD flag bad^"_PXCAITEM
"RTN","PXCAPOV",69,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",7)
"RTN","PXCAPOV",70,0)
 .. I PXCAITEM]"" D
"RTN","PXCAPOV",71,0)
 ... I $G(^AUPNPROB(PXCAITEM,0))="" S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,7)="Problem not in file 9000011^"_PXCAITEM
"RTN","PXCAPOV",72,0)
 ... E  I PXCAPAT'=$P($G(^AUPNPROB(PXCAITEM,0)),"^",2) S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,7)="Problem in file 9000011 is for a different Patient^"_PXCAITEM
"RTN","PXCAPOV",73,0)
 .. ;
"RTN","PXCAPOV",74,0)
 .. ;Clinical Lexicon Term
"RTN","PXCAPOV",75,0)
 .. S PXCAITEM=$P(PXCADIAG,"^",10)
"RTN","PXCAPOV",76,0)
 .. I PXCAITEM]"" D
"RTN","PXCAPOV",77,0)
 ... I $D(^LEX(757.01)) D
"RTN","PXCAPOV",78,0)
 .... I $D(^LEX(757.01,PXCAITEM,0))#2'=1 S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,10)="Lexicon Utility term is not in file 757.01^"_PXCAITEM
"RTN","PXCAPOV",79,0)
 .... E  S PXCACLEX=PXCAITEM
"RTN","PXCAPOV",80,0)
 ... E  I $D(^GMP(757.01)) D
"RTN","PXCAPOV",81,0)
 .... I $D(^GMP(757.01,PXCAITEM,0))#2'=1 S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,10)="Clinical Lexicon Utility term is not in file 757.01^"_PXCAITEM
"RTN","PXCAPOV",82,0)
 .... E  S PXCACLEX=PXCAITEM
"RTN","PXCAPOV",83,0)
 ... E  S PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX,10)="Lexicon Utility is not installed^"_PXCAITEM
"RTN","PXCAPOV",84,0)
 .. ;
"RTN","PXCAPOV",85,0)
 .. D PART1^PXCAPOV1
"RTN","PXCAPOV",86,0)
 .. ;
"RTN","PXCAPOV",87,0)
 .. I PXCABULD&'$D(PXCA("ERROR","DIAGNOSIS",PXCAPRV,PXCAINDX))!PXCAERRS D POV^PXCADX(PXCADIAG,PXCANPOV,PXCAPRV,PXCAERRS)
"RTN","PXCAPOV",88,0)
 Q
"RTN","PXCAPOV",89,0)
 ;
"RTN","PXCAPOV",90,0)
ANOTHPOV(PXCAAPOV) ; 
"RTN","PXCAPOV",91,0)
 ;Add the diagnosis to V POV if they are not there.
"RTN","PXCAPOV",92,0)
 ;Quit if the provider subscript is zero
"RTN","PXCAPOV",93,0)
 ; Variables
"RTN","PXCAPOV",94,0)
 ;   PXCAAPOV  Pointer to the DIAGNOSIS (80)
"RTN","PXCAPOV",95,0)
 ;   PXCAINDX  Subscript of the diagnosis in the temp array used to
"RTN","PXCAPOV",96,0)
 ;               look to see if the above diagnosis is already know.
"RTN","PXCAPOV",97,0)
 Q:PXCAAPOV'>0
"RTN","PXCAPOV",98,0)
 N PXCAINDX
"RTN","PXCAPOV",99,0)
 ;See if this diagnosis is in the ^TMP(PXCAGLB,$J,
"RTN","PXCAPOV",100,0)
 F PXCAINDX=1:1:PXCANPOV I PXCAAPOV=+$G(^TMP(PXCAGLB,$J,"POV",PXCAINDX,0,"AFTER")) S PXCAINDX=0 Q
"RTN","PXCAPOV",101,0)
 Q:PXCAINDX'>0
"RTN","PXCAPOV",102,0)
 S PXCAINDX=0
"RTN","PXCAPOV",103,0)
 ;See if this diagnosis is already in V POV for this Encounter
"RTN","PXCAPOV",104,0)
 F  S PXCAINDX=$O(^AUPNVPOV("AD",PXCAVSIT,PXCAAPOV)) Q:PXCAINDX'>0  I PXCAAPOV=$P(^AUPNVPOV(PXCAINDX,0),"^",1) Q
"RTN","PXCAPOV",105,0)
 Q:PXCAINDX>0
"RTN","PXCAPOV",106,0)
 S PXCANPOV=PXCANPOV+1
"RTN","PXCAPOV",107,0)
 S ^TMP(PXCAGLB,$J,"POV",PXCANPOV,"IEN")=""
"RTN","PXCAPOV",108,0)
 S ^TMP(PXCAGLB,$J,"POV",PXCANPOV,0,"BEFORE")=""
"RTN","PXCAPOV",109,0)
 S ^TMP(PXCAGLB,$J,"POV",PXCANPOV,0,"AFTER")=PXCAAPOV_"^"_PXCAPAT_"^"_PXCAVSIT_"^^^^^^^^^S"
"RTN","PXCAPOV",110,0)
 S ^TMP(PXCAGLB,$J,"POV",PXCANPOV,812,"BEFORE")=""
"RTN","PXCAPOV",111,0)
 S ^TMP(PXCAGLB,$J,"POV",PXCANPOV,812,"AFTER")="^"_PXCAPKG_"^"_PXCASOR
"RTN","PXCAPOV",112,0)
 Q
"RTN","PXCAPOV",113,0)
 ;
"RTN","PXCAVST")
0^12^B38057637
"RTN","PXCAVST",1,0)
PXCAVST ;ISL/dee & LEA/Chylton - Validates data from the PCE Device Interface for the Visit and Providers ;6/6/05
"RTN","PXCAVST",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**14,33,74,111,116,130,168**;Aug 12, 1996;Build 14
"RTN","PXCAVST",3,0)
 Q
"RTN","PXCAVST",4,0)
 ;
"RTN","PXCAVST",5,0)
ENCOUNT(PXCA,PXCABULD,PXCAERRS,PXCAEVAL) ;
"RTN","PXCAVST",6,0)
 I '($D(PXCA("ENCOUNTER"))#2) S PXCA("ERROR","ENCOUNTER",0,0,0)="ENCOUNTER node of the local data array is missing" Q
"RTN","PXCAVST",7,0)
 N PXCAENC
"RTN","PXCAVST",8,0)
 N PXCAITEM,PXCAITM2,PXCAOUT,PXCAERR
"RTN","PXCAVST",9,0)
 S PXCAENC=$G(PXCA("ENCOUNTER"))
"RTN","PXCAVST",10,0)
 I PXCAENC="" S PXCA("ERROR","ENCOUNTER",0,0,0)="ENCOUNTER data missing" Q
"RTN","PXCAVST",11,0)
 I '($D(^DPT(PXCAPAT,0))#2) S PXCA("ERROR","ENCOUNTER",0,0,2)="Patient missing or invalid in file 2^"_PXCAPAT
"RTN","PXCAVST",12,0)
 I '($D(^AUPNPAT(PXCAPAT,0))#2) S PXCA("ERROR","ENCOUNTER",0,0,2)="Patient missing or invalid in file 9000001^"_PXCAPAT
"RTN","PXCAVST",13,0)
 S PXCAITEM=+$P(PXCAENC,"^",1)
"RTN","PXCAVST",14,0)
 I 'PXCAITEM S PXCA("ERROR","ENCOUNTER",0,0,1)="Encounter Data/Time Missing^"_PXCAITEM
"RTN","PXCAVST",15,0)
 E  I $D(^DPT(PXCAPAT,"S",PXCAITEM,0)),$D(^SC(+PXCAHLOC,0)),^DPT(PXCAPAT,"S",PXCAITEM,0),PXCAHLOC D
"RTN","PXCAVST",16,0)
 . ;Have an appointment at this time
"RTN","PXCAVST",17,0)
 . N VASD,VAERR
"RTN","PXCAVST",18,0)
 . S VASD("W")=345678
"RTN","PXCAVST",19,0)
 . S VASD("F")=PXCAITEM-.0000001
"RTN","PXCAVST",20,0)
 . S VASD("T")=PXCAITEM+.0000001
"RTN","PXCAVST",21,0)
 . S VASD("C",PXCAHLOC)=""
"RTN","PXCAVST",22,0)
 . D SDA^VADPT
"RTN","PXCAVST",23,0)
 . I $D(^UTILITY("VASD",$J)) S PXCA("ERROR","ENCOUNTER",0,0,1)="Appointment is No Show or Canceled^"_PXCAITEM
"RTN","PXCAVST",24,0)
 I '$D(^DPT(PXCAPAT,"S",PXCAITEM,0))!(+$G(^DPT(PXCAPAT,"S",PXCAITEM,0))'=PXCAHLOC),'(+$P(PXCAENC,"^",5)),'$D(PXCA("PROCEDURE")),'$D(^AUPNVCPT("AD",+PXCAVSIT)) D
"RTN","PXCAVST",25,0)
 . S PXCA("ERROR","ENCOUNTER",0,0,1)="Encounters that do not have an appointment must have a procedure^"
"RTN","PXCAVST",26,0)
 E  I PXCAITEM>(DT+.7) S PXCA("ERROR","ENCOUNTER",0,0,1)="Encounter Date/Time is later that today^"_PXCAITEM
"RTN","PXCAVST",27,0)
 I '$D(^SC(PXCAHLOC,0)) S PXCA("ERROR","ENCOUNTER",0,0,3)="HOSPITAL LOCATION Missing is not in file 44^"_PXCAHLOC
"RTN","PXCAVST",28,0)
 ;Allow a disposition clinic to be used as HOSPITAL LOCATION  ;PX*1.0*116
"RTN","PXCAVST",29,0)
 ;I $D(^PX(815,1,"DHL","B",PXCAHLOC)) S PXCA("ERROR","ENCOUNTER",0,0,3)="HOSPITAL LOCATION Can not be a disposition clinic^"_PXCAHLOC
"RTN","PXCAVST",30,0)
 D EVALCODE^PXCAVST2(.PXCAEVAL)
"RTN","PXCAVST",31,0)
 D SCC^PXUTLSCC(PXCAPAT,PXCADT,PXCAHLOC,PXCAVSIT,$P(PXCAENC,"^",6,11),.PXCAOUT,.PXCAERR)
"RTN","PXCAVST",32,0)
 S PXCAITEM=$P(PXCAERR,"^",1)
"RTN","PXCAVST",33,0)
 I PXCAITEM=-1 S PXCA("ERROR","ENCOUNTER",0,0,6)="SC flag bad^"_$P(PXCAENC,"^",6)
"RTN","PXCAVST",34,0)
 I PXCAITEM=-2,$P(PXCAENC,"^",6)=1 S PXCA("WARNING","ENCOUNTER",0,0,6)="SC flag must be N/A not YES for this patient^"_$P(PXCAENC,"^",6)
"RTN","PXCAVST",35,0)
 I PXCAITEM=1,$P($G(^PX(815,1,"DI")),"^",1) S PXCA("WARNING","ENCOUNTER",0,0,6)="SC flag is missing^"_$P(PXCAENC,"^",6)
"RTN","PXCAVST",36,0)
 S PXCAITEM=$P(PXCAERR,"^",2)
"RTN","PXCAVST",37,0)
 I PXCAITEM=-1 S PXCA("ERROR","ENCOUNTER",0,0,7)="AO flag bad^"_$P(PXCAENC,"^",7)
"RTN","PXCAVST",38,0)
 I PXCAITEM=-2,$P(PXCAENC,"^",7)=1 S PXCA("WARNING","ENCOUNTER",0,0,7)="AO flag must be N/A not YES for this patient^"_$P(PXCAENC,"^",7)
"RTN","PXCAVST",39,0)
 I PXCAITEM=-3,$P(PXCAENC,"^",7)=1 S PXCA("WARNING","ENCOUNTER",0,0,7)="AO flag must be N/A not YES because SC flag is true^"_$P(PXCAENC,"^",7)
"RTN","PXCAVST",40,0)
 I PXCAITEM=1,$P($G(^PX(815,1,"DI")),"^",1) S PXCA("WARNING","ENCOUNTER",0,0,7)="AO flag is missing^"_$P(PXCAENC,"^",7)
"RTN","PXCAVST",41,0)
 S PXCAITEM=$P(PXCAERR,"^",3)
"RTN","PXCAVST",42,0)
 I PXCAITEM=-1 S PXCA("ERROR","ENCOUNTER",0,0,8)="IR flag bad^"_$P(PXCAENC,"^",8)
"RTN","PXCAVST",43,0)
 I PXCAITEM=-2,$P(PXCAENC,"^",8)=1 S PXCA("WARNING","ENCOUNTER",0,0,8)="IR flag must be N/A not YES for this patient^"_$P(PXCAENC,"^",8)
"RTN","PXCAVST",44,0)
 I PXCAITEM=-3,$P(PXCAENC,"^",8)=1 S PXCA("WARNING","ENCOUNTER",0,0,8)="IR flag must be N/A not YES because SC flag is true^"_$P(PXCAENC,"^",8)
"RTN","PXCAVST",45,0)
 I PXCAITEM=1,$P($G(^PX(815,1,"DI")),"^",1) S PXCA("WARNING","ENCOUNTER",0,0,8)="IR flag is missing^"_$P(PXCAENC,"^",8)
"RTN","PXCAVST",46,0)
 S PXCAITEM=$P(PXCAERR,"^",4)
"RTN","PXCAVST",47,0)
 I PXCAITEM=-1 S PXCA("ERROR","ENCOUNTER",0,0,9)="EC flag bad^"_$P(PXCAENC,"^",9)
"RTN","PXCAVST",48,0)
 I PXCAITEM=-2,$P(PXCAENC,"^",9)=1 S PXCA("WARNING","ENCOUNTER",0,0,9)="EC flag must be N/A not YES for this patient^"_$P(PXCAENC,"^",9)
"RTN","PXCAVST",49,0)
 I PXCAITEM=-3,$P(PXCAENC,"^",9)=1 S PXCA("WARNING","ENCOUNTER",0,0,9)="EC flag must be N/A not YES because SC flag is true^"_$P(PXCAENC,"^",9)
"RTN","PXCAVST",50,0)
 I PXCAITEM=1,$P($G(^PX(815,1,"DI")),"^",1) S PXCA("WARNING","ENCOUNTER",0,0,9)="EC flag is missing^"_$P(PXCAENC,"^",9)
"RTN","PXCAVST",51,0)
 S PXCAITEM=$P(PXCAERR,"^",5)
"RTN","PXCAVST",52,0)
 I PXCAITEM=-1 S PXCA("ERROR","ENCOUNTER",0,0,10)="MST flag bad^"_$P(PXCAENC,"^",10)
"RTN","PXCAVST",53,0)
 I PXCAITEM=-2,$P(PXCAENC,"^",10)=1 S PXCA("WARNING","ENCOUNTER",0,0,10)="MST flag must be N/A not YES for this patient^"_$P(PXCAENC,"^",10)
"RTN","PXCAVST",54,0)
 S PXCAITEM=$P(PXCAERR,"^",17)
"RTN","PXCAVST",55,0)
 I PXCAITEM=-1 S PXCA("ERROR","ENCOUNTER",0,0,17)="HNC flag bad^"_$P(PXCAENC,"^",17)
"RTN","PXCAVST",56,0)
 I PXCAITEM=-2,$P(PXCAENC,"^",11)=1 S PXCA("WARNING","ENCOUNTER",0,0,17)="HNC flag must be N/A not YES for this patient^"_$P(PXCAENC,"^",17)
"RTN","PXCAVST",57,0)
 S PXCAITEM=$P(PXCAERR,"^",18)
"RTN","PXCAVST",58,0)
 I PXCAITEM=-1 S PXCA("ERROR","ENCOUNTER",0,0,18)="CV flag bad^"_$P(PXCAENC,"^",18)
"RTN","PXCAVST",59,0)
 I PXCAITEM=-2,$P(PXCAENC,"^",11)=1 S PXCA("WARNING","ENCOUNTER",0,0,18)="CV flag must be N/A not YES for this patient^"_$P(PXCAENC,"^",18)
"RTN","PXCAVST",60,0)
 S PXCAITEM=$P(PXCAERR,"^",19)
"RTN","PXCAVST",61,0)
 I PXCAITEM=-1 S PXCA("ERROR","ENCOUNTER",0,0,19)="PROJ 112/SHAD flag bad^"_$P(PXCAENC,"^",19)
"RTN","PXCAVST",62,0)
 I PXCAITEM=-2,$P(PXCAENC,"^",11)=1 S PXCA("WARNING","ENCOUNTER",0,0,19)="PROJ 112/SHAD flag must be N/A not YES for this patient^"_$P(PXCAENC,"^",19)
"RTN","PXCAVST",63,0)
 S $P(PXCAENC,"^",6,11)=PXCAOUT
"RTN","PXCAVST",64,0)
 S PXCAITEM=+$P(PXCAENC,"^",13)
"RTN","PXCAVST",65,0)
 I PXCAITEM D
"RTN","PXCAVST",66,0)
 . N PXCADILF,DIERR
"RTN","PXCAVST",67,0)
 . S PXCAITM2=$$EXTERNAL^DILFD(9000010,.21,"",PXCAITEM,"PXCADILF")
"RTN","PXCAVST",68,0)
 . I $D(DIERR) S PXCA("ERROR","ENCOUNTER",0,0,13)="Eligibility code not in File 8^"_PXCAITEM
"RTN","PXCAVST",69,0)
 . E  I PXCAITEM=$P($G(PXCAPAT("ELIG")),"^",1)
"RTN","PXCAVST",70,0)
 . E  I $D(PXCAPAT("ELIG",PXCAITEM))=1
"RTN","PXCAVST",71,0)
 . E  S PXCA("ERROR","ENCOUNTER",0,0,13)="Eligibility code is not one of this patient's Eligibilities^"_PXCAITEM
"RTN","PXCAVST",72,0)
 S PXCAITEM=+$P(PXCAENC,"^",14)
"RTN","PXCAVST",73,0)
 I PXCAITEM=0
"RTN","PXCAVST",74,0)
 E  I PXCAITEM>(DT+.7) S PXCA("ERROR","ENCOUNTER",0,0,14)="Check-out Date and Time is later that today^"_PXCAITEM
"RTN","PXCAVST",75,0)
 E  I PXCAITEM#1=0 S PXCA("ERROR","ENCOUNTER",0,0,14)="Time is required for Check-out Date and Time^"_PXCAITEM
"RTN","PXCAVST",76,0)
 I PXCACSTP'="" D
"RTN","PXCAVST",77,0)
 . I '$D(^DIC(40.7,+PXCACSTP,0)) S PXCA("ERROR","ENCOUNTER",0,0,17)="Optional CREDIT STOP not in File 40.7^"_PXCACSTP
"RTN","PXCAVST",78,0)
 . E  I $P(^DIC(40.7,+PXCACSTP,0),"^",3),PXCADT'<$P(^(0),"^",3) S PXCA("ERROR","ENCOUNTER",0,0,17)="Optional CREDIT STOP is inactive in file 40.7^"_PXCACSTP
"RTN","PXCAVST",79,0)
 ;
"RTN","PXCAVST",80,0)
 I PXCABULD&'$D(PXCA("ERROR","ENCOUNTER"))!PXCAERRS D VST^PXCAVST1(PXCAENC)
"RTN","PXCAVST",81,0)
 ;
"RTN","PXCAVST",82,0)
 D PROVIDER^PXCAVST2
"RTN","PXCAVST",83,0)
 ;
"RTN","PXCAVST",84,0)
 Q
"RTN","PXCAVST",85,0)
 ;
"RTN","PXCAVST1")
0^13^B16251014
"RTN","PXCAVST1",1,0)
PXCAVST1 ;ISL/dee & LEA/Chylton - Translates data from the PCE Device Interface into PCE's PXK format for the Visit and Providers ;6/6/05
"RTN","PXCAVST1",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**73,74,111,121,130,168**;Aug 12, 1996;Build 14
"RTN","PXCAVST1",3,0)
 Q
"RTN","PXCAVST1",4,0)
 ;
"RTN","PXCAVST1",5,0)
VST(PXCAENC) ;Visit
"RTN","PXCAVST1",6,0)
 N PXCAFTER
"RTN","PXCAVST1",7,0)
NODE0 ;
"RTN","PXCAVST1",8,0)
1 S PXCAFTER=$P(PXCAENC,"^",1)_"^^^^"
"RTN","PXCAVST1",9,0)
5 S PXCAFTER=PXCAFTER_PXCAPAT_"^^^"
"RTN","PXCAVST1",10,0)
8 S PXCAFTER=PXCAFTER_PXCACSTP_"^^^^^^^^^"
"RTN","PXCAVST1",11,0)
17 ;Store the Evaluation and Management Code in V-CPT and NOT in the Visit
"RTN","PXCAVST1",12,0)
 D EVALCODE($P(PXCAENC,"^",5),$P(PXCAENC,"^",4))
"RTN","PXCAVST1",13,0)
 S PXCAFTER=PXCAFTER_"^"
"RTN","PXCAVST1",14,0)
18 S PXCAFTER=PXCAFTER_$P(PXCAENC,"^",14)_"^^^"
"RTN","PXCAVST1",15,0)
21 I $P(PXCAENC,"^",13)]"" S PXCAFTER=PXCAFTER_$P(PXCAENC,"^",13)_"^"
"RTN","PXCAVST1",16,0)
 E  D 
"RTN","PXCAVST1",17,0)
 . N PXCAELIG
"RTN","PXCAVST1",18,0)
 . S PXCAELIG=$$ELIGIBIL^PXCEVSIT(PXCAPAT,PXCAHLOC,+PXCAENC)
"RTN","PXCAVST1",19,0)
 . S PXCAELIG=$S(PXCAELIG>0:PXCAELIG,1:"")
"RTN","PXCAVST1",20,0)
 . S PXCAFTER=PXCAFTER_PXCAELIG_"^"
"RTN","PXCAVST1",21,0)
22 S PXCAFTER=PXCAFTER_PXCAHLOC
"RTN","PXCAVST1",22,0)
 S ^TMP(PXCAGLB,$J,"VST",1,0,"AFTER")=PXCAFTER
"RTN","PXCAVST1",23,0)
 ;
"RTN","PXCAVST1",24,0)
NODE150 I $P($G(^SC(+PXCAHLOC,0)),"^",7)=PXCACSTP D
"RTN","PXCAVST1",25,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,150,"AFTER")="^^P"
"RTN","PXCAVST1",26,0)
 ;
"RTN","PXCAVST1",27,0)
NODE800 ;
"RTN","PXCAVST1",28,0)
 S ^TMP(PXCAGLB,$J,"VST",1,800,"AFTER")=$P(PXCAENC,"^",6,10)_"^"_$P(PXCAENC,"^",17,19)
"RTN","PXCAVST1",29,0)
 ;
"RTN","PXCAVST1",30,0)
 I PXCAVSIT'>0 D
"RTN","PXCAVST1",31,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,"IEN")=""
"RTN","PXCAVST1",32,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,0,"BEFORE")=""
"RTN","PXCAVST1",33,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,150,"BEFORE")=""
"RTN","PXCAVST1",34,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,800,"BEFORE")=""
"RTN","PXCAVST1",35,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,812,"BEFORE")=""
"RTN","PXCAVST1",36,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,812,"AFTER")="^"_PXCAPKG_"^"_PXCASOR
"RTN","PXCAVST1",37,0)
 E  D
"RTN","PXCAVST1",38,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,"IEN")=PXCAVSIT
"RTN","PXCAVST1",39,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,0,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,0))
"RTN","PXCAVST1",40,0)
 . S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",3)=$P(^AUPNVSIT(PXCAVSIT,0),"^",3)
"RTN","PXCAVST1",41,0)
 . S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",7)=$P(^AUPNVSIT(PXCAVSIT,0),"^",7)
"RTN","PXCAVST1",42,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,150,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,150))
"RTN","PXCAVST1",43,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,800,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,800))
"RTN","PXCAVST1",44,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,21,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,21))
"RTN","PXCAVST1",45,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,21,"AFTER")=$G(^AUPNVSIT(PXCAVSIT,21))
"RTN","PXCAVST1",46,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,811,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,811))
"RTN","PXCAVST1",47,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,811,"AFTER")=$G(^AUPNVSIT(PXCAVSIT,811))
"RTN","PXCAVST1",48,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,812,"BEFORE")=$G(^AUPNVSIT(PXCAVSIT,812))
"RTN","PXCAVST1",49,0)
 . S ^TMP(PXCAGLB,$J,"VST",1,812,"AFTER")=$G(^AUPNVSIT(PXCAVSIT,812))
"RTN","PXCAVST1",50,0)
 Q
"RTN","PXCAVST1",51,0)
 ;
"RTN","PXCAVST1",52,0)
EVALCODE(CODE,PROV) ;Store the Evaluation and Management Code in a CPT node.
"RTN","PXCAVST1",53,0)
 ;Evaluation and Management Code always has a sequence number of 1
"RTN","PXCAVST1",54,0)
 ;  and there is only one of them.
"RTN","PXCAVST1",55,0)
 Q:'CODE
"RTN","PXCAVST1",56,0)
 N PXCAFTER,PXCAITEM,PXCAPNAR,PXCACNAR,PXCACNT,PXCAMOD,PXCASTR
"RTN","PXCAVST1",57,0)
 N DIC,DR,DA,DIQ,PXCADIQ1
"RTN","PXCAVST1",58,0)
 S DIC=357.69
"RTN","PXCAVST1",59,0)
 S DR=".015;.02;.03"
"RTN","PXCAVST1",60,0)
 S DA=+CODE
"RTN","PXCAVST1",61,0)
 S DIQ="PXCADIQ1("
"RTN","PXCAVST1",62,0)
 S DIQ(0)="E"
"RTN","PXCAVST1",63,0)
 D EN^DIQ1
"RTN","PXCAVST1",64,0)
 S PXCAITEM=$S($G(PXCADIQ1(357.69,DA,.03,"E"))]"":PXCADIQ1(357.69,DA,.03,"E"),$G(PXCADIQ1(357.69,DA,.015,"E"))]"":PXCADIQ1(357.69,DA,.015,"E"),1:"UNKNOWN")
"RTN","PXCAVST1",65,0)
 S PXCAPNAR=+$$PROVNARR^PXAPI(PXCAITEM,9000010.18)
"RTN","PXCAVST1",66,0)
 I PXCAPNAR'>0 S PXCAPNAR=""
"RTN","PXCAVST1",67,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,0,"BEFORE")=""
"RTN","PXCAVST1",68,0)
 S PXCAFTER=CODE_"^"_PXCAPAT_"^"_PXCAVSIT_"^"
"RTN","PXCAVST1",69,0)
 S PXCAFTER=PXCAFTER_PXCAPNAR
"RTN","PXCAVST1",70,0)
 S PXCAFTER=PXCAFTER_"^^^^^^^^^^^^1"
"RTN","PXCAVST1",71,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,0,"AFTER")=PXCAFTER
"RTN","PXCAVST1",72,0)
 ; File modifiers in ^TMP global
"RTN","PXCAVST1",73,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,1,1,"BEFORE")=""
"RTN","PXCAVST1",74,0)
 S (PXCACNT,PXCAMOD)=""
"RTN","PXCAVST1",75,0)
 F PXCACNT=1:1 S PXCAMOD=$O(PXCA("ENCOUNTER","MODIFIER",PXCAMOD)) Q:PXCAMOD=""  D
"RTN","PXCAVST1",76,0)
 . S PXCASTR=$$MODP^ICPTMOD(CODE,PXCAMOD,"E",PXCADT)
"RTN","PXCAVST1",77,0)
 . Q:+PXCASTR<1
"RTN","PXCAVST1",78,0)
 . S ^TMP(PXCAGLB,$J,"CPT",1,1,PXCACNT,"AFTER")=+PXCASTR
"RTN","PXCAVST1",79,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,12,"BEFORE")=""
"RTN","PXCAVST1",80,0)
 I PROV S ^TMP(PXCAGLB,$J,"CPT",1,12,"AFTER")="^^^"_PROV
"RTN","PXCAVST1",81,0)
 E  S ^TMP(PXCAGLB,$J,"CPT",1,12,"AFTER")=""
"RTN","PXCAVST1",82,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,802,"BEFORE")=""
"RTN","PXCAVST1",83,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,812,"BEFORE")=""
"RTN","PXCAVST1",84,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,812,"AFTER")="^"_PXCAPKG_"^"_PXCASOR
"RTN","PXCAVST1",85,0)
 S PXCACNAR=""
"RTN","PXCAVST1",86,0)
 I $G(PXCADIQ1(357.69,DA,.02,"E"))]"" D
"RTN","PXCAVST1",87,0)
 . S PXCACNAR=+$$PROVNARR^PXAPI(PXCADIQ1(357.69,DA,.02,"E"),9000010.18)
"RTN","PXCAVST1",88,0)
 . I PXCACNAR'>0 S PXCACNAR=""
"RTN","PXCAVST1",89,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,802,"AFTER")=PXCACNAR
"RTN","PXCAVST1",90,0)
 S ^TMP(PXCAGLB,$J,"CPT",1,"IEN")=""
"RTN","PXCAVST1",91,0)
 Q
"RTN","PXCAVST1",92,0)
 ;
"RTN","PXCEAPPM")
0^14^B6595820
"RTN","PXCEAPPM",1,0)
PXCEAPPM ;ISL/dee,ISA/KWP - Used to add a new visit from the appointment display and display a visit ;04/28/99
"RTN","PXCEAPPM",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,74,111,130,124,168**;Aug 12, 1996;Build 14
"RTN","PXCEAPPM",3,0)
 ;+The classifications are displayed with this routine when adding
"RTN","PXCEAPPM",4,0)
 ;+an encounter from the appointment list
"RTN","PXCEAPPM",5,0)
 Q
"RTN","PXCEAPPM",6,0)
 ;
"RTN","PXCEAPPM",7,0)
 ;Line with the line label "FORMAT"
"RTN","PXCEAPPM",8,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (not used on visit)~File global name
"RTN","PXCEAPPM",9,0)
 ;     1         2             3                   4                                        5
"RTN","PXCEAPPM",10,0)
 ;
"RTN","PXCEAPPM",11,0)
 ;Following lines:
"RTN","PXCEAPPM",12,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEAPPM",13,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~       10
"RTN","PXCEAPPM",14,0)
 ;The Display & Edit routines are for special cases.
"RTN","PXCEAPPM",15,0)
 ;
"RTN","PXCEAPPM",16,0)
FORMAT ;;Encounter~9000010~0,21,150,800,811,812~~^AUPNVSIT
"RTN","PXCEAPPM",17,0)
 ;;0~1~.01~Encounter Date and Time:  ~Encounter Date and Time:  ~~EVISITDT^PXCEVSIT(1)~~~B
"RTN","PXCEAPPM",18,0)
 ;;0~18~.18~Check Out ~Check Out Date and Time:  ~~ECODT^PXCEVSIT~~~D
"RTN","PXCEAPPM",19,0)
 ;;800~1~80001~Service Connected:  ~Service Connected:  ~~GET800^PXCEE800~~~D
"RTN","PXCEAPPM",20,0)
 ;;800~7~80007~Combat Veteran:  ~Combat Veteran:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEAPPM",21,0)
 ;;800~2~80002~Agent Orange Exposure:  ~Agent Orange Exposure:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEAPPM",22,0)
 ;;800~3~80003~Ionizing Radiation Exposure:  ~Ionizing Radiation Exposure:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEAPPM",23,0)
 ;;800~4~80004~SW Asia Conditions:  ~SW Asia Conditions:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEAPPM",24,0)
 ;;800~8~80008~Project 112/SHAD:  ~Project 112/SHAD:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEAPPM",25,0)
 ;;800~5~80005~Military Sexual Trauma:  ~Military Sexual Trauma:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEAPPM",26,0)
 ;;800~6~80006~Head and/or Neck Cancer:  ~Head and/or Neck Cancer:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEAPPM",27,0)
 ;
"RTN","PXCEAPPM",28,0)
 ;
"RTN","PXCEAPPM",29,0)
 ;
"RTN","PXCEAPPM",30,0)
 ;********************************
"RTN","PXCEAPPM",31,0)
 ;Special cases for display of visit are in PXCEVSIT.
"RTN","PXCEAPPM",32,0)
 ;
"RTN","PXCEAPPM",33,0)
 ;********************************
"RTN","PXCEAPPM",34,0)
 ;Special cases for edit of visit are in PXCEVSIT.
"RTN","PXCEAPPM",35,0)
 ;
"RTN","PXCEAPPM",36,0)
 ;********************************
"RTN","PXCEAPPM",37,0)
 ;Display text for the .01 field which is a Date and Time.
"RTN","PXCEAPPM",38,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEAPPM",39,0)
DISPLY01(PXCEVSIT) ;
"RTN","PXCEAPPM",40,0)
 Q $$DISPLY01^PXCESIT(PXCEVSIT)
"RTN","PXCEAPPM",41,0)
 ;
"RTN","PXCEC800")
0^28^B3206369
"RTN","PXCEC800",1,0)
PXCEC800 ;ISL/dee,ISA/KWP - Used in editing the 800 node, Service Connected conditions ;12/22/04 1:38pm
"RTN","PXCEC800",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**124,174,168**;Aug 12, 1996;Build 14
"RTN","PXCEC800",3,0)
 ;; ;
"RTN","PXCEC800",4,0)
 Q
"RTN","PXCEC800",5,0)
 ;
"RTN","PXCEC800",6,0)
GET800 ;Used by the Service Connected Conditions
"RTN","PXCEC800",7,0)
 N PXCEINDX,PXOUT
"RTN","PXCEC800",8,0)
 N PXBDATA,PXLOC,PXAPTDT,PXDFN
"RTN","PXCEC800",9,0)
 I $O(^SCE("AVSIT",PXCEVIEN,0)) D CLASS^PXBAPI21("","","","",PXCEVIEN)
"RTN","PXCEC800",10,0)
 I '$O(^SCE("AVSIT",PXCEVIEN,0)) D
"RTN","PXCEC800",11,0)
 . S PXAPTDT=+^AUPNVSIT(PXCEVIEN,0)
"RTN","PXCEC800",12,0)
 . S PXDFN=$P(^AUPNVSIT(PXCEVIEN,0),"^",5)
"RTN","PXCEC800",13,0)
 . S PXLOC=$P(^AUPNVSIT(PXCEVIEN,0),"^",22)
"RTN","PXCEC800",14,0)
 . D CLASS^PXBAPI21("",PXDFN,PXAPTDT,PXLOC,"")
"RTN","PXCEC800",15,0)
 F PXCEINDX=1:1:8 I $G(PXBDATA("ERR",PXCEINDX))=4 S PXOUT=PXBDATA("ERR",PXCEINDX)
"RTN","PXCEC800",16,0)
 I $D(PXOUT) S PXCEEND=1 Q  ;for visit and required fields
"RTN","PXCEC800",17,0)
 S $P(PXCEAFTR(800),"^",1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXCEC800",18,0)
 S $P(PXCEAFTR(800),"^",2)=$P($G(PXBDATA(1)),"^",2) S:$P(PXCEAFTR(800),"^",2)="" $P(PXCEAFTR(800),"^",2)="@"
"RTN","PXCEC800",19,0)
 S $P(PXCEAFTR(800),"^",3)=$P($G(PXBDATA(2)),"^",2) S:$P(PXCEAFTR(800),"^",3)="" $P(PXCEAFTR(800),"^",3)="@"
"RTN","PXCEC800",20,0)
 S $P(PXCEAFTR(800),"^",4)=$P($G(PXBDATA(4)),"^",2) S:$P(PXCEAFTR(800),"^",4)="" $P(PXCEAFTR(800),"^",4)="@"
"RTN","PXCEC800",21,0)
 S $P(PXCEAFTR(800),"^",5)=$P($G(PXBDATA(5)),"^",2)
"RTN","PXCEC800",22,0)
 S $P(PXCEAFTR(800),"^",6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXCEC800",23,0)
 S $P(PXCEAFTR(800),"^",7)=$P($G(PXBDATA(7)),"^",2)
"RTN","PXCEC800",24,0)
 S $P(PXCEAFTR(800),"^",8)=$P($G(PXBDATA(8)),"^",2)
"RTN","PXCEC800",25,0)
 Q
"RTN","PXCEC800",26,0)
 ;
"RTN","PXCECCLS")
0^32^B21843800
"RTN","PXCECCLS",1,0)
PXCECCLS ;WASH/BDB - UPDATE ENCOUNTER SC/EI FROM DX SC/EI ;5/18/05 1:31pm
"RTN","PXCECCLS",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**124,174,168**;Feb 12, 2004;Build 14
"RTN","PXCECCLS",3,0)
 Q
"RTN","PXCECCLS",4,0)
 ;
"RTN","PXCECCLS",5,0)
VST(PXVIEN) ;
"RTN","PXCECCLS",6,0)
 ;  VISITIEN  Pointer to the Visit (#9000010)
"RTN","PXCECCLS",7,0)
 ;  Loop over the diagnoses SC/EI, auto-populate the encounter level
"RTN","PXCECCLS",8,0)
 ;   SC/EI based on the following rule:
"RTN","PXCECCLS",9,0)
 ;   
"RTN","PXCECCLS",10,0)
 ;   If the SC/EI for at least one ICD-9 is "Yes"the Encounter Level
"RTN","PXCECCLS",11,0)
 ;    SC/EI will automatically be set to "Yes" regardless if the
"RTN","PXCECCLS",12,0)
 ;     Encounter Level SC (or EI) was previously populated ("Yes", "No" or Null).
"RTN","PXCECCLS",13,0)
 ;            Note: This presumes that a single ICD-9 with SC/EI determination of "Yes"
"RTN","PXCECCLS",14,0)
 ;        makes the Encounter SC/EI determination "Yes"
"RTN","PXCECCLS",15,0)
 ;        
"RTN","PXCECCLS",16,0)
 ;       If the SC/EI for all ICD-9s are "No" the Encounter Level SC/EI will
"RTN","PXCECCLS",17,0)
 ;       automatically be set to "No" regardless if the Encounter Level SC/EI
"RTN","PXCECCLS",18,0)
 ;       was previously populated ("Yes", "No" or Null).
"RTN","PXCECCLS",19,0)
 ;            Note: This presumes that an Encounter SC/EI can not be "Yes" if all
"RTN","PXCECCLS",20,0)
 ;        ICD-9s have an SC/EI determination of "No".
"RTN","PXCECCLS",21,0)
 ;        
"RTN","PXCECCLS",22,0)
 ;       If at least one ICD-9 is missing SC/EI determination and none of the
"RTN","PXCECCLS",23,0)
 ;       other ICD-9s SC/EI determination is "Yes" do not change the SC/EI
"RTN","PXCECCLS",24,0)
 ;       determination of the Encounter level.
"RTN","PXCECCLS",25,0)
 ;                 Note: This presumes that if one or more ICD-9s do not have an SC/EI
"RTN","PXCECCLS",26,0)
 ;       determination then no inference can be made upon the Encounter Level SC
"RTN","PXCECCLS",27,0)
 ;       determination.  In addition if another package populates SC/EI
"RTN","PXCECCLS",28,0)
 ;       directly do not overwrite that value in the case of incomplete
"RTN","PXCECCLS",29,0)
 ;       data.  In other words do not set the Encounter Level to Null.
"RTN","PXCECCLS",30,0)
 ;       
"RTN","PXCECCLS",31,0)
 ;       VARIABLE LIST TO AUTO POPULATE THE ENCOUNTER LEVEL SC/EI
"RTN","PXCECCLS",32,0)
 ;       For each SC/EI in the PXSCEINW string:
"RTN","PXCECCLS",33,0)
 ;                =1  SC/EI Classification determined by the DX's is found to be "Yes"
"RTN","PXCECCLS",34,0)
 ;                =0  SC/EI Classification determined by the DX's is found to be "NO"
"RTN","PXCECCLS",35,0)
 ;                =-1 SC/EI can not be determined by the DX's
"RTN","PXCECCLS",36,0)
 ;                ="" Do not ask the SC/EI questions
"RTN","PXCECCLS",37,0)
 ;       
"RTN","PXCECCLS",38,0)
 ;       Edit flag for SC: SCEF, AO: AOEF, IR: IREF, EC:ECEF, MST: MSTEF, HNC: HNCEF
"RTN","PXCECCLS",39,0)
 ;           , CV: CVEF, SHAD:SHADEF  - Used in Visit File Filing - See ^VSITFLD
"RTN","PXCECCLS",40,0)
 ;           example below          
"RTN","PXCECCLS",41,0)
 ;       VIST("SCEF")=1  SC/EI Classification determined by the DX's - do not ask SC/EI
"RTN","PXCECCLS",42,0)
 ;       VIST("SCEF")=0  SC/EI Classification undetermined by the DX's - ask SC/EI
"RTN","PXCECCLS",43,0)
 ;       etc.
"RTN","PXCECCLS",44,0)
 ;             
"RTN","PXCECCLS",45,0)
 N PX0,PXDFN,PXDT,PXCL,PXPOV,VSIT,PXDFN,PXSCEINW,PXSCEI,PXPOV800
"RTN","PXCECCLS",46,0)
 S PXSCEINW="^^^^^^"
"RTN","PXCECCLS",47,0)
 ; Set encounter data in ^TMP
"RTN","PXCECCLS",48,0)
 D ENCEVENT^PXKENC(PXVIEN)
"RTN","PXCECCLS",49,0)
 ; Get classifications
"RTN","PXCECCLS",50,0)
 S PXDFN=$P($G(^TMP("PXKENC",$J,PXVIEN,"VST",PXVIEN,0)),U,5)
"RTN","PXCECCLS",51,0)
 Q:'PXDFN
"RTN","PXCECCLS",52,0)
 ;Loop over DX's
"RTN","PXCECCLS",53,0)
 S PXPOV="" F  S PXPOV=$O(^TMP("PXKENC",$J,PXVIEN,"POV",PXPOV)) Q:'PXPOV  D
"RTN","PXCECCLS",54,0)
 .S PXPOV800=$G(^(PXPOV,800))
"RTN","PXCECCLS",55,0)
 .I '($P(PXSCEINW,U,1)="1")  S:$P(PXPOV800,U,1)="1" $P(PXSCEINW,U,1)="1" I '($P(PXSCEINW,U,1)<0)  S:$P(PXPOV800,U,1)="" $P(PXSCEINW,U,1)="-1" S:$P(PXPOV800,U,1)="0" $P(PXSCEINW,U,1)="0"
"RTN","PXCECCLS",56,0)
 .I '($P(PXSCEINW,U,2)="1")  S:$P(PXPOV800,U,2)="1" $P(PXSCEINW,U,2)="1" I '($P(PXSCEINW,U,2)<0)  S:$P(PXPOV800,U,2)="" $P(PXSCEINW,U,2)="-1" S:$P(PXPOV800,U,2)="0" $P(PXSCEINW,U,2)="0"
"RTN","PXCECCLS",57,0)
 .I '($P(PXSCEINW,U,3)="1")  S:$P(PXPOV800,U,3)="1" $P(PXSCEINW,U,3)="1" I '($P(PXSCEINW,U,3)<0)  S:$P(PXPOV800,U,3)="" $P(PXSCEINW,U,3)="-1" S:$P(PXPOV800,U,3)="0" $P(PXSCEINW,U,3)="0"
"RTN","PXCECCLS",58,0)
 .I '($P(PXSCEINW,U,4)="1")  S:$P(PXPOV800,U,4)="1" $P(PXSCEINW,U,4)="1" I '($P(PXSCEINW,U,4)<0)  S:$P(PXPOV800,U,4)="" $P(PXSCEINW,U,4)="-1" S:$P(PXPOV800,U,4)="0" $P(PXSCEINW,U,4)="0"
"RTN","PXCECCLS",59,0)
 .I '($P(PXSCEINW,U,5)="1")  S:$P(PXPOV800,U,5)="1" $P(PXSCEINW,U,5)="1" I '($P(PXSCEINW,U,5)<0)  S:$P(PXPOV800,U,5)="" $P(PXSCEINW,U,5)="-1" S:$P(PXPOV800,U,5)="0" $P(PXSCEINW,U,5)="0"
"RTN","PXCECCLS",60,0)
 .I '($P(PXSCEINW,U,6)="1")  S:$P(PXPOV800,U,6)="1" $P(PXSCEINW,U,6)="1" I '($P(PXSCEINW,U,6)<0)  S:$P(PXPOV800,U,6)="" $P(PXSCEINW,U,6)="-1" S:$P(PXPOV800,U,6)="0" $P(PXSCEINW,U,6)="0"
"RTN","PXCECCLS",61,0)
 .I '($P(PXSCEINW,U,7)="1")  S:$P(PXPOV800,U,7)="1" $P(PXSCEINW,U,7)="1" I '($P(PXSCEINW,U,7)<0)  S:$P(PXPOV800,U,7)="" $P(PXSCEINW,U,7)="-1" S:$P(PXPOV800,U,7)="0" $P(PXSCEINW,U,7)="0"
"RTN","PXCECCLS",62,0)
 .I '($P(PXSCEINW,U,8)="1")  S:$P(PXPOV800,U,8)="1" $P(PXSCEINW,U,8)="1" I '($P(PXSCEINW,U,8)<0)  S:$P(PXPOV800,U,8)="" $P(PXSCEINW,U,8)="-1" S:$P(PXPOV800,U,8)="0" $P(PXSCEINW,U,8)="0"
"RTN","PXCECCLS",63,0)
 S VSIT("IEN")=PXVIEN
"RTN","PXCECCLS",64,0)
 S VSIT("SCEF")=0,VSIT("AOEF")=0,VSIT("IREF")=0,VSIT("ECEF")=0,VSIT("MSTEF")=0,VSIT("HNCEF")=0,VSIT("CVEF")=0,VSIT("SHADEF")=0
"RTN","PXCECCLS",65,0)
 S:$P(PXSCEINW,U,1)="0"!($P(PXSCEINW,U,1)="1") VSIT("SC")=$P(PXSCEINW,U,1),VSIT("SCEF")=1
"RTN","PXCECCLS",66,0)
 S:$P(PXSCEINW,U,2)="0"!($P(PXSCEINW,U,2)="1") VSIT("AO")=$P(PXSCEINW,U,2),VSIT("AOEF")=1 S:$G(VSIT("SC"))=1 VSIT("AO")="@"
"RTN","PXCECCLS",67,0)
 S:$P(PXSCEINW,U,3)="0"!($P(PXSCEINW,U,3)="1") VSIT("IR")=$P(PXSCEINW,U,3),VSIT("IREF")=1 S:$G(VSIT("SC"))=1 VSIT("IR")="@"
"RTN","PXCECCLS",68,0)
 S:$P(PXSCEINW,U,4)="0"!($P(PXSCEINW,U,4)="1") VSIT("EC")=$P(PXSCEINW,U,4),VSIT("ECEF")=1 S:$G(VSIT("SC"))=1 VSIT("EC")="@"
"RTN","PXCECCLS",69,0)
 S:$P(PXSCEINW,U,5)="0"!($P(PXSCEINW,U,5)="1") VSIT("MST")=$P(PXSCEINW,U,5),VSIT("MSTEF")=1
"RTN","PXCECCLS",70,0)
 S:$P(PXSCEINW,U,6)="0"!($P(PXSCEINW,U,6)="1") VSIT("HNC")=$P(PXSCEINW,U,6),VSIT("HNCEF")=1
"RTN","PXCECCLS",71,0)
 S:$P(PXSCEINW,U,7)="0"!($P(PXSCEINW,U,7)="1") VSIT("CV")=$P(PXSCEINW,U,7),VSIT("CVEF")=1
"RTN","PXCECCLS",72,0)
 S:$P(PXSCEINW,U,8)="0"!($P(PXSCEINW,U,8)="1") VSIT("SHAD")=$P(PXSCEINW,U,8),VSIT("SHADEF")=1
"RTN","PXCECCLS",73,0)
 D UPD^VSIT
"RTN","PXCECCLS",74,0)
 K ^TMP("PXKENC",$J)
"RTN","PXCECCLS",75,0)
 Q
"RTN","PXCED800")
0^29^B2596896
"RTN","PXCED800",1,0)
PXCED800 ;WASH/BDB - Used in editing the 800 node, Service Connected conditions ;1/18/05 3:33pm
"RTN","PXCED800",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**124,168**;Aug 12, 1996;Build 14
"RTN","PXCED800",3,0)
 ;; ;
"RTN","PXCED800",4,0)
 Q
"RTN","PXCED800",5,0)
 ;
"RTN","PXCED800",6,0)
 ;            Classification type 1 - Agent Orange
"RTN","PXCED800",7,0)
 ;                                2 - Ionizing Radiation
"RTN","PXCED800",8,0)
 ;                                3 - Service Connected
"RTN","PXCED800",9,0)
 ;                                4 - SW Asia Conditions
"RTN","PXCED800",10,0)
 ;                                5 - Military Sexual Trauma
"RTN","PXCED800",11,0)
 ;                                6 - Cancer of the Head and/or Neck
"RTN","PXCED800",12,0)
 ;                                7 - Combat Veteran
"RTN","PXCED800",13,0)
 ;                                8 - Project 112/SHAD
"RTN","PXCED800",14,0)
GET800 ;Used by the Service Connected Conditions
"RTN","PXCED800",15,0)
 N PXCEINDX,PXOUT
"RTN","PXCED800",16,0)
 N PXBDATA,PXLOC,PXAPTDT,PXDFN
"RTN","PXCED800",17,0)
 S PXCEDXSC=""
"RTN","PXCED800",18,0)
 I $O(^SCE("AVSIT",PXCEVIEN,0)) D CLASS^PXBAPI21("","","","",PXCEVIEN)
"RTN","PXCED800",19,0)
 I '$O(^SCE("AVSIT",PXCEVIEN,0)) D
"RTN","PXCED800",20,0)
 . S PXAPTDT=+^AUPNVSIT(PXCEVIEN,0)
"RTN","PXCED800",21,0)
 . S PXDFN=$P(^AUPNVSIT(PXCEVIEN,0),"^",5)
"RTN","PXCED800",22,0)
 . S PXLOC=$P(^AUPNVSIT(PXCEVIEN,0),"^",22)
"RTN","PXCED800",23,0)
 . D CLASS^PXBAPI21("",PXDFN,PXAPTDT,PXLOC,"")
"RTN","PXCED800",24,0)
 F PXCEINDX=1:1:8 I $G(PXBDATA("ERR",PXCEINDX))=4 S PXOUT=PXBDATA("ERR",PXCEINDX)
"RTN","PXCED800",25,0)
 I $D(PXOUT) S PXCEEND=1 Q
"RTN","PXCED800",26,0)
 S $P(PXCEDXSC,"^",1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXCED800",27,0)
 I +PXCEDXSC S (PXDATA(1),PXDATA(2),PXDATA(4))="^^"
"RTN","PXCED800",28,0)
 S $P(PXCEDXSC,"^",2)=$P($G(PXBDATA(1)),"^",2)
"RTN","PXCED800",29,0)
 S $P(PXCEDXSC,"^",3)=$P($G(PXBDATA(2)),"^",2)
"RTN","PXCED800",30,0)
 S $P(PXCEDXSC,"^",4)=$P($G(PXBDATA(4)),"^",2)
"RTN","PXCED800",31,0)
 S $P(PXCEDXSC,"^",5)=$P($G(PXBDATA(5)),"^",2)
"RTN","PXCED800",32,0)
 S $P(PXCEDXSC,"^",6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXCED800",33,0)
 S $P(PXCEDXSC,"^",7)=$P($G(PXBDATA(7)),"^",2)
"RTN","PXCED800",34,0)
 S $P(PXCEDXSC,"^",8)=$P($G(PXBDATA(8)),"^",2)
"RTN","PXCED800",35,0)
 Q
"RTN","PXCED800",36,0)
 ;
"RTN","PXCEE800")
0^15^B2080813
"RTN","PXCEE800",1,0)
PXCEE800 ;ISL/dee,ISA/KWP - Used in editing the 800 node, Service Connected conditions ;06/06/05
"RTN","PXCEE800",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**74,111,130,168**;Aug 12, 1996;Build 14
"RTN","PXCEE800",3,0)
 ;; ;
"RTN","PXCEE800",4,0)
 Q
"RTN","PXCEE800",5,0)
 ;
"RTN","PXCEE800",6,0)
GET800 ;Used by all the Service Connected Conditions
"RTN","PXCEE800",7,0)
 ;Do not ask if not primary visit.
"RTN","PXCEE800",8,0)
 Q:$P(PXCEAFTR(0),"^",22)'>0
"RTN","PXCEE800",9,0)
 Q:$P(PXCEAFTR(0),"^",8)'=$P(^SC($P(PXCEAFTR(0),"^",22),0),"^",7)
"RTN","PXCEE800",10,0)
 N PXCEINDX,PXOUT
"RTN","PXCEE800",11,0)
 N PXBDATA
"RTN","PXCEE800",12,0)
 D CLASS^PXBAPI21("",PXCEPAT,+PXCEAFTR(0),$P(PXCEAFTR(0),"^",22),PXCEFIEN)
"RTN","PXCEE800",13,0)
 ;PX*1*111 - Add HNC
"RTN","PXCEE800",14,0)
 F PXCEINDX=1:1:8 I $G(PXBDATA("ERR",PXCEINDX))=4 S PXOUT=PXBDATA("ERR",PXCEINDX)
"RTN","PXCEE800",15,0)
 I $D(PXOUT) S (PXCEEND,PXCEQUIT)=1 Q  ;for visit and required fields
"RTN","PXCEE800",16,0)
 S $P(PXCEAFTR(800),"^",1)=$P($G(PXBDATA(3)),"^",2)
"RTN","PXCEE800",17,0)
 S $P(PXCEAFTR(800),"^",2)=$P($G(PXBDATA(1)),"^",2)
"RTN","PXCEE800",18,0)
 S $P(PXCEAFTR(800),"^",3)=$P($G(PXBDATA(2)),"^",2)
"RTN","PXCEE800",19,0)
 S $P(PXCEAFTR(800),"^",4)=$P($G(PXBDATA(4)),"^",2)
"RTN","PXCEE800",20,0)
 S $P(PXCEAFTR(800),"^",5)=$P($G(PXBDATA(5)),"^",2)
"RTN","PXCEE800",21,0)
 ;PX*1*111 - Add HNC
"RTN","PXCEE800",22,0)
 S $P(PXCEAFTR(800),"^",6)=$P($G(PXBDATA(6)),"^",2)
"RTN","PXCEE800",23,0)
 S $P(PXCEAFTR(800),"^",7)=$P($G(PXBDATA(7)),"^",2)
"RTN","PXCEE800",24,0)
 S $P(PXCEAFTR(800),"^",8)=$P($G(PXBDATA(8)),"^",2)
"RTN","PXCEE800",25,0)
 Q
"RTN","PXCEE800",26,0)
 ;
"RTN","PXCEPOV")
0^34^B17257132
"RTN","PXCEPOV",1,0)
PXCEPOV ;ISL/dee - Used to edit and display V POV ;8/31/05
"RTN","PXCEPOV",2,0)
        ;;1.0;PCE PATIENT CARE ENCOUNTER;**27,121,124,170,168**;Aug 12, 1996;Build 14
"RTN","PXCEPOV",3,0)
        ;; ;
"RTN","PXCEPOV",4,0)
        Q
"RTN","PXCEPOV",5,0)
        ;
"RTN","PXCEPOV",6,0)
        ;Line with the line label "FORMAT"
"RTN","PXCEPOV",7,0)
        ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (1=yes, 0=no)~File global name
"RTN","PXCEPOV",8,0)
        ;     1         2             3                   4                                   5
"RTN","PXCEPOV",9,0)
        ;
"RTN","PXCEPOV",10,0)
        ;Followning lines:
"RTN","PXCEPOV",11,0)
        ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR(?)~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEPOV",12,0)
        ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8            ~          9                  ~       10
"RTN","PXCEPOV",13,0)
        ;The Display & Edit routines are for special caces.
"RTN","PXCEPOV",14,0)
        ;  (The .01 field cannot have a special edit.)
"RTN","PXCEPOV",15,0)
        ;
"RTN","PXCEPOV",16,0)
FORMAT ;;Diagnosis~9000010.07~0,12,800,802,811,812~1~^AUPNVPOV
"RTN","PXCEPOV",17,0)
        ;;0~1~.01~ICD9 Code or Diagnosis:  ~ICD9 Code or Diagnosis:  ~$$DISPLY01^PXCEPOV~ICDCODE^PXCEPOV1~^D HELP^PXCEHELP~~B
"RTN","PXCEPOV",18,0)
        ;;0~4~.04~Provider Narrative:  ~Provider Narrative:  ~$$DNARRAT^PXCEPOV1~ENARRAT^PXCEPOV1(1,1,1,80,10,3)~~~B
"RTN","PXCEPOV",19,0)
        ;;0~12~.12~Is this Diagnosis Primary for the Encounter:  ~Primary/Secondary Diagnosis for the Encounter:  ~$$DPRIMSEC^PXCEPOV1~EPRIMSEC^PXCEPRV~~~B
"RTN","PXCEPOV",20,0)
        ;;0~17~.17~Is this Diagnosis Ordering, Resulting, or Both:  ~Ordering/Resulting Diagnosis:  ~~~~~B
"RTN","PXCEPOV",21,0)
        ;;0~6~.06~Modifier:  ~Modifier:  ~~~~~D
"RTN","PXCEPOV",22,0)
        ;;0~13~.13~Injury Date and (optional) Time~Date of Injury:  ~~EINJURY^PXCEPOV1~~~D
"RTN","PXCEPOV",23,0)
        ;;12~4~1204~Encounter Provider:  ~Encounter Provider:  ~~EPROV12^PXCEPRV~~~D
"RTN","PXCEPOV",24,0)
        ;;802~1~80201~Provider Narrative Category:  ~Provider Narrative Category:  ~$$DNARRAT^PXCEPOV1~ENARRAT^PXCEPOV1(0,2,0,80,5)~~C~D
"RTN","PXCEPOV",25,0)
        ;;811~1~81101~Comments:  ~Comments:  ~~~~~D
"RTN","PXCEPOV",26,0)
        ;;800~1~80001~Service Connected:  ~Service Connected:  ~~GET800^PXCEC800~~~D
"RTN","PXCEPOV",27,0)
        ;;800~7~80007~Combat Veteran:  ~Combat Veteran:  ~~SKIP^PXCEPOV~~~D
"RTN","PXCEPOV",28,0)
        ;;800~2~80002~Agent Orange Exposure:  ~Agent Orange Exposure:  ~~SKIP^PXCEPOV~~~D
"RTN","PXCEPOV",29,0)
        ;;800~3~80003~Ionizing Radiation Exposure:  ~Ionizing Radiation Exposure:  ~~SKIP^PXCEPOV~~~D
"RTN","PXCEPOV",30,0)
        ;;800~4~80004~SW Asia Conditions:  ~SW Asia Conditions:  ~~SKIP^PXCEPOV~~~D
"RTN","PXCEPOV",31,0)
        ;;800~8~80008~Project 112/SHAD:  ~Project 112/SHAD:  ~~SKIP^PXCEPOV~~~D
"RTN","PXCEPOV",32,0)
        ;;800~5~80005~Military Sexual Trauma:  ~Military Sexual Trauma:  ~~SKIP^PXCEPOV~~~D
"RTN","PXCEPOV",33,0)
        ;;800~6~80006~Head and/or Neck Cancer:  ~Head and/or Neck Cancer:  ~~SKIP^PXCEPOV~~~D
"RTN","PXCEPOV",34,0)
        ;
"RTN","PXCEPOV",35,0)
        ;
"RTN","PXCEPOV",36,0)
        ;
"RTN","PXCEPOV",37,0)
        ;The interface for AICS to get list on form for help.
"RTN","PXCEPOV",38,0)
INTRFACE        ;;DG SELECT ICD-9 DIAGNOSIS CODES
"RTN","PXCEPOV",39,0)
        ;
"RTN","PXCEPOV",40,0)
        ;********************************
"RTN","PXCEPOV",41,0)
        ;Special cases for display.
"RTN","PXCEPOV",42,0)
        ;
"RTN","PXCEPOV",43,0)
        ;********************************
"RTN","PXCEPOV",44,0)
        ;Display text for the .01 field which is a pointer to ^ICD9.
"RTN","PXCEPOV",45,0)
        ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEPOV",46,0)
DISPLY01(PXCEPOV)       ;
"RTN","PXCEPOV",47,0)
        ;N DIC,DR,DA,DIQ,PXCEDIQ1
"RTN","PXCEPOV",48,0)
        ;S DIC=80
"RTN","PXCEPOV",49,0)
        ;S DR=".01;3"
"RTN","PXCEPOV",50,0)
        ;S DA=$P(PXCEPOV,"^",1)
"RTN","PXCEPOV",51,0)
        ;S DIQ="PXCEDIQ1("
"RTN","PXCEPOV",52,0)
        ;S DIQ(0)="E"
"RTN","PXCEPOV",53,0)
        ;D EN^DIQ1
"RTN","PXCEPOV",54,0)
        ;Q PXCEDIQ1(80,DA,.01,"E")_"     "_PXCEDIQ1(80,DA,3,"E")
"RTN","PXCEPOV",55,0)
        ;
"RTN","PXCEPOV",56,0)
        N ICDSTR
"RTN","PXCEPOV",57,0)
        S ICDSTR=$$ICDDX^ICDCODE($P(PXCEPOV,"^"),$P(^AUPNVSIT(PXCEVIEN,0),"^"))
"RTN","PXCEPOV",58,0)
        Q $P(ICDSTR,"^",2)_"     "_$P(ICDSTR,"^",4) ;code and desc
"RTN","PXCEPOV",59,0)
        ;
"RTN","PXCEPOV",60,0)
SKIP ;
"RTN","PXCEPOV",61,0)
        Q
"RTN","PXCESIT")
0^16^B9892116
"RTN","PXCESIT",1,0)
PXCESIT ;ISL/dee,ISA/KWP - Used to edit a new visit and display (use most) a visit ;3/17/04 12:10pm
"RTN","PXCESIT",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,74,111,130,124,168**;Aug 12, 1996;Build 14
"RTN","PXCESIT",3,0)
 ;+ The classifications show in the Display Detail Protocol
"RTN","PXCESIT",4,0)
 Q
"RTN","PXCESIT",5,0)
 ;
"RTN","PXCESIT",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCESIT",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (not used on visit)~File global name
"RTN","PXCESIT",8,0)
 ;     1         2             3                   4                                        5
"RTN","PXCESIT",9,0)
 ;
"RTN","PXCESIT",10,0)
 ;Following lines:
"RTN","PXCESIT",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCESIT",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~       10
"RTN","PXCESIT",13,0)
 ;The Display & Edit routines are for special cases.
"RTN","PXCESIT",14,0)
 ;
"RTN","PXCESIT",15,0)
FORMAT ;;Encounter~9000010~0,21,150,800,811,812~~^AUPNVSIT
"RTN","PXCESIT",16,0)
 ;;0~1~.01~Encounter Date and Time:  ~Encounter Date and Time:  ~~EVISITDT^PXCEVSIT(1)~~~B
"RTN","PXCESIT",17,0)
 ;;0~5~.05~Patient Name:  ~Patient Name:  ~~EPAT^PXCEVSIT~~~D
"RTN","PXCESIT",18,0)
 ;;0~22~.22~Hospital Location:  ~Hospital Location:  ~~EHOSPLOC^PXCEVSIT~^D HELPHLOC^PXCEVSIT~~D
"RTN","PXCESIT",19,0)
 ;;0~8~.08~Clinic Stop:  ~Clinic Stop:  ~$$DISPLY08^PXCECSTP~EWORKLOD^PXCEVSIT(0)~~~D
"RTN","PXCESIT",20,0)
 ;;0~18~.18~Check Out ~Check Out Date and Time:  ~~ECODT^PXCEVSIT~~~D
"RTN","PXCESIT",21,0)
 ;;800~1~80001~Service Connected:  ~Service Connected:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCESIT",22,0)
 ;;800~7~80007~Combat Veteran:  ~Combat Veteran:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCESIT",23,0)
 ;;800~2~80002~Agent Orange Exposure:  ~Agent Orange Exposure:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCESIT",24,0)
 ;;800~3~80003~Ionizing Radiation Exposure:  ~Ionizing Radiation Exposure:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCESIT",25,0)
 ;;800~4~80004~SW Asia Conditions:  ~SW Asia Conditions:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCESIT",26,0)
 ;;800~8~80008~Project 112/SHAD:  ~Project 112/SHAD:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCESIT",27,0)
 ;;800~5~80005~Military Sexual Trauma:  ~Military Sexual Trauma:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCESIT",28,0)
 ;;800~6~80006~Head and/or Neck Cancer:  ~Head and/or Neck Cancer:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCESIT",29,0)
 ;;
"RTN","PXCESIT",30,0)
 ;
"RTN","PXCESIT",31,0)
 ;********************************
"RTN","PXCESIT",32,0)
 ;Special cases for display of visit are in PXCEVSIT.
"RTN","PXCESIT",33,0)
 ;
"RTN","PXCESIT",34,0)
 ;********************************
"RTN","PXCESIT",35,0)
 ;Special cases for edit of visit are in PXCEVSIT.
"RTN","PXCESIT",36,0)
 ;
"RTN","PXCESIT",37,0)
 ;********************************
"RTN","PXCESIT",38,0)
 ;Display text for the .01 field which is a Date and Time.
"RTN","PXCESIT",39,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCESIT",40,0)
DISPLY01(PXCEVSIT) ;
"RTN","PXCESIT",41,0)
 N DIERR,PXCEDILF,PXCEINT,PXCEEXT
"RTN","PXCESIT",42,0)
 N TEXT
"RTN","PXCESIT",43,0)
 S PXCEINT=$P(PXCEVSIT,"^",1)
"RTN","PXCESIT",44,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010,.01,"",PXCEINT,"PXCEDILF")
"RTN","PXCESIT",45,0)
 S TEXT=$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCESIT",46,0)
 S PXCEINT=$P(PXCEVSIT,"^",22)
"RTN","PXCESIT",47,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010,.22,"",PXCEINT,"PXCEDILF")
"RTN","PXCESIT",48,0)
 S TEXT=TEXT_"   "_$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCESIT",49,0)
 S PXCEINT=$P(PXCEVSIT,"^",8)
"RTN","PXCESIT",50,0)
 S PXCEEXT=$$EXTERNAL^DILFD(9000010,.08,"",PXCEINT,"PXCEDILF")
"RTN","PXCESIT",51,0)
 S TEXT=TEXT_"   "_$S('$D(DIERR):PXCEEXT,1:PXCEINT)
"RTN","PXCESIT",52,0)
 Q TEXT
"RTN","PXCESIT",53,0)
 ;
"RTN","PXCEVST")
0^17^B6497526
"RTN","PXCEVST",1,0)
PXCEVST ;ISL/dee,ISA/KWP - Used to edit a visit and display a visit ;04/8/99
"RTN","PXCEVST",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,74,111,130,124,168**;Aug 12, 1996;Build 14
"RTN","PXCEVST",3,0)
 ;; ;
"RTN","PXCEVST",4,0)
 Q
"RTN","PXCEVST",5,0)
 ;
"RTN","PXCEVST",6,0)
 ;Line with the line label "FORMAT"
"RTN","PXCEVST",7,0)
 ;;Long name~File Number~Node Subscripts~Allow Duplicate entries (not used on visit)~File global name
"RTN","PXCEVST",8,0)
 ;     1         2             3                   4                                        5
"RTN","PXCEVST",9,0)
 ;
"RTN","PXCEVST",10,0)
 ;Following lines:
"RTN","PXCEVST",11,0)
 ;;Node~Piece~,Field Number~Edit Label~Display Label~Display Routine~Edit Routine~Help Text for DIR("?")~Set of PXCEKEYS that can Edit~D if Detail Display Only~
"RTN","PXCEVST",12,0)
 ;  1  ~  2  ~      3      ~     4    ~        5    ~        6      ~     7      ~       8              ~          9                  ~       10
"RTN","PXCEVST",13,0)
 ;The Display & Edit routines are for special cases.
"RTN","PXCEVST",14,0)
 ;
"RTN","PXCEVST",15,0)
FORMAT ;;Encounter~9000010~0,21,150,800,811,812~~^AUPNVSIT
"RTN","PXCEVST",16,0)
 ;;0~1~.01~Encounter Date and Time:  ~Encounter Date and Time:  ~~EVISITDT^PXCEVSIT(1)~~~B
"RTN","PXCEVST",17,0)
 ;;0~18~.18~Check Out ~Check Out Date and Time:  ~~ECODT^PXCEVSIT~~~D
"RTN","PXCEVST",18,0)
 ;;800~1~80001~Service Connected:  ~Service Connected:  ~~GET800^PXCEE800~~~D
"RTN","PXCEVST",19,0)
 ;;800~7~80007~Combat Veteran:  ~Combat Veteran:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEVST",20,0)
 ;;800~2~80002~Agent Orange Exposure:  ~Agent Orange Exposure:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEVST",21,0)
 ;;800~3~80003~Ionizing Radiation Exposure:  ~Ionizing Radiation Exposure:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEVST",22,0)
 ;;800~4~80004~SW Asia Conditions:  ~SW Asia Conditions:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEVST",23,0)
 ;;800~8~80008~Project 112/SHAD:  ~Project 112/SHAD:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEVST",24,0)
 ;;800~5~80005~Military Sexual Trauma:  ~Military Sexual Trauma:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEVST",25,0)
 ;;800~6~80006~Head and/or Neck Cancer:  ~Head and/or Neck Cancer:  ~~SKIP^PXCEVSIT~~~D
"RTN","PXCEVST",26,0)
 ;
"RTN","PXCEVST",27,0)
 ;
"RTN","PXCEVST",28,0)
 ;
"RTN","PXCEVST",29,0)
 ;********************************
"RTN","PXCEVST",30,0)
 ;Special cases for display of visit are in PXCEVSIT.
"RTN","PXCEVST",31,0)
 ;
"RTN","PXCEVST",32,0)
 ;********************************
"RTN","PXCEVST",33,0)
 ;Special cases for edit of visit are in PXCEVSIT.
"RTN","PXCEVST",34,0)
 ;
"RTN","PXCEVST",35,0)
 ;********************************
"RTN","PXCEVST",36,0)
 ;Display text for the .01 field which is a Date and Time.
"RTN","PXCEVST",37,0)
 ;(Must have is called by ASK^PXCEVFI2 and DEL^PXCEVFI2.)
"RTN","PXCEVST",38,0)
DISPLY01(PXCEVSIT) ;
"RTN","PXCEVST",39,0)
 Q $$DISPLY01^PXCESIT(PXCEVSIT)
"RTN","PXCEVST",40,0)
 ;
"RTN","PXKFPOV")
0^27^B3924785
"RTN","PXKFPOV",1,0)
PXKFPOV ;ISL/JVS - Fields for V PURPOSE OF VISIT (POV) file ;3/1/04 10:46am
"RTN","PXKFPOV",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,130,124,168**;Aug 12, 1996;Build 14
"RTN","PXKFPOV",3,0)
 ;
"RTN","PXKFPOV",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFPOV",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFPOV",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFPOV",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFPOV",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFPOV",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFPOV",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFPOV",11,0)
 ;    neither added or edited.
"RTN","PXKFPOV",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFPOV",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFPOV",14,0)
 ; 4. If only the ~E is added the the data can only be edited in
"RTN","PXKFPOV",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFPOV",16,0)
 ;
"RTN","PXKFPOV",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFPOV",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFPOV",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFPOV",20,0)
 ;
"RTN","PXKFPOV",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFPOV",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFPOV",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFPOV",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFPOV",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFPOV",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFPOV",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFPOV",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFPOV",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFPOV",30,0)
 ;the information in $P 2.
"RTN","PXKFPOV",31,0)
 ;
"RTN","PXKFPOV",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFPOV",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFPOV",34,0)
GLOBAL ;;^AUPNVPOV
"RTN","PXKFPOV",35,0)
 ;
"RTN","PXKFPOV",36,0)
EN1 ;
"RTN","PXKFPOV",37,0)
 S PXKER=""
"RTN","PXKFPOV",38,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2) Q
"RTN","PXKFPOV",39,0)
EN2 ;
"RTN","PXKFPOV",40,0)
 S PXKFD=""
"RTN","PXKFPOV",41,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFPOV",42,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFPOV",43,0)
 Q
"RTN","PXKFPOV",44,0)
ADD ;Add an entry to the file
"RTN","PXKFPOV",45,0)
 Q
"RTN","PXKFPOV",46,0)
0 ;;1,2,3,4 * 0+1,0+3 * 1
"RTN","PXKFPOV",47,0)
 ;;.01////^S X=$G(
"RTN","PXKFPOV",48,0)
 ;;.02////^S X=$G(
"RTN","PXKFPOV",49,0)
 ;;.03////^S X=$G(
"RTN","PXKFPOV",50,0)
 ;;OPTION * .04////^S X=$G( * .04///^S X=$G(
"RTN","PXKFPOV",51,0)
 ;;.05///^S X=$G(
"RTN","PXKFPOV",52,0)
 ;;.06///^S X=$G(
"RTN","PXKFPOV",53,0)
 ;;.07///^S X=$G(
"RTN","PXKFPOV",54,0)
 ;;.08///^S X=$G(
"RTN","PXKFPOV",55,0)
 ;;.09////^S X=$G(
"RTN","PXKFPOV",56,0)
 ;;
"RTN","PXKFPOV",57,0)
 ;;.11///^S X=$G(
"RTN","PXKFPOV",58,0)
 ;;.12///^S X=$G(
"RTN","PXKFPOV",59,0)
 ;;.13///^S X=$G(
"RTN","PXKFPOV",60,0)
 ;;.14////^S X=$G(
"RTN","PXKFPOV",61,0)
 ;;.15////^S X=$G(
"RTN","PXKFPOV",62,0)
 ;;.16////^S X=$G(
"RTN","PXKFPOV",63,0)
 ;;.17///^S X=$G(
"RTN","PXKFPOV",64,0)
12 ;;
"RTN","PXKFPOV",65,0)
 ;;1201////^S X=$G(
"RTN","PXKFPOV",66,0)
 ;;1202////^S X=$G(
"RTN","PXKFPOV",67,0)
 ;;
"RTN","PXKFPOV",68,0)
 ;;1204////^S X=$G(
"RTN","PXKFPOV",69,0)
 ;;
"RTN","PXKFPOV",70,0)
 ;;
"RTN","PXKFPOV",71,0)
800 ;;
"RTN","PXKFPOV",72,0)
 ;;80001///^S X=$G(
"RTN","PXKFPOV",73,0)
 ;;80002///^S X=$G(
"RTN","PXKFPOV",74,0)
 ;;80003///^S X=$G(
"RTN","PXKFPOV",75,0)
 ;;80004///^S X=$G(
"RTN","PXKFPOV",76,0)
 ;;80005///^S X=$G(
"RTN","PXKFPOV",77,0)
 ;;80006///^S X=$G(
"RTN","PXKFPOV",78,0)
 ;;80007///^S X=$G(
"RTN","PXKFPOV",79,0)
 ;;80008///^S X=$G(
"RTN","PXKFPOV",80,0)
801 ;;
"RTN","PXKFPOV",81,0)
 ;;80101///^S X=1;
"RTN","PXKFPOV",82,0)
 ;;80102///^S X=$G(PXKAUDIT);
"RTN","PXKFPOV",83,0)
802 ;;
"RTN","PXKFPOV",84,0)
 ;;OPTION * 80201////^S X=$G( * 80201///^S X=$G(
"RTN","PXKFPOV",85,0)
811 ;;
"RTN","PXKFPOV",86,0)
 ;;81101///^S X=$G(
"RTN","PXKFPOV",87,0)
812 ;;
"RTN","PXKFPOV",88,0)
 ;;81201///^S X=$G(
"RTN","PXKFPOV",89,0)
 ;;81202////^S X=$G(
"RTN","PXKFPOV",90,0)
 ;;81203////^S X=$G(
"RTN","PXKFPOV",91,0)
SPEC ;
"RTN","PXKFPOV",92,0)
 Q
"RTN","PXKFVST")
0^18^B11330691
"RTN","PXKFVST",1,0)
PXKFVST ;ISL/JVS - Fields for VISIT file ;7/29/96
"RTN","PXKFVST",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**22,56,111,130,124,164,168**;Aug 12, 1996;Build 14
"RTN","PXKFVST",3,0)
 ;
"RTN","PXKFVST",4,0)
 ;  Adding or Editing of data in a particular field can be controlled
"RTN","PXKFVST",5,0)
 ;by adding a ~ as a delimiter and the letters A and/or E to the
"RTN","PXKFVST",6,0)
 ;end of the line of text which represents what could be added
"RTN","PXKFVST",7,0)
 ;to the DR string in a DIE call.
"RTN","PXKFVST",8,0)
 ; 1. If none or all three(~AE) of these characters are added then
"RTN","PXKFVST",9,0)
 ;    the data in this field can be either added or edited.
"RTN","PXKFVST",10,0)
 ; 2. If only the ~ is added then the data in this field can be
"RTN","PXKFVST",11,0)
 ;    neither added or edited.
"RTN","PXKFVST",12,0)
 ; 3. IF only the ~A is added then the data can only be added to
"RTN","PXKFVST",13,0)
 ;    the file for this field but not edited.
"RTN","PXKFVST",14,0)
 ; 4. If only the ~E is added the data can only be edited in
"RTN","PXKFVST",15,0)
 ;    this file for this field. (not a likely possibility)
"RTN","PXKFVST",16,0)
 ;
"RTN","PXKFVST",17,0)
 ; The word "OPTION" in front of the line of text below tells the 
"RTN","PXKFVST",18,0)
 ;software to determine,based on the data, the appropriateness
"RTN","PXKFVST",19,0)
 ;of using either a "///" or "////" stuff in a DIE call.
"RTN","PXKFVST",20,0)
 ;
"RTN","PXKFVST",21,0)
 ; The information on line tag 0 $P(,," * ",1) are the piece numbers
"RTN","PXKFVST",22,0)
 ;of the fields on the zero node that are required by the data
"RTN","PXKFVST",23,0)
 ;dictionary and are checked for to determine if enough data is present
"RTN","PXKFVST",24,0)
 ;to proceed without any errors. $P(,," * ",2) are the nodes and
"RTN","PXKFVST",25,0)
 ;piece numbers of the fields used to determine duplicates in the
"RTN","PXKFVST",26,0)
 ;file (node+piece (eg. 12+4)). $P(,," * ",3) is a flag use to
"RTN","PXKFVST",27,0)
 ;determine if duplicates are allowed in this visit file. 
"RTN","PXKFVST",28,0)
 ;If it is set to 0 then no duplicate checks will occur. If it is
"RTN","PXKFVST",29,0)
 ;set to 1 then the file will be checked for duplicates based on
"RTN","PXKFVST",30,0)
 ;the information in $P 2.
"RTN","PXKFVST",31,0)
 ;
"RTN","PXKFVST",32,0)
 ; The following is the file's global name.  Each global must have a
"RTN","PXKFVST",33,0)
 ;unique name and can not have any subscripts as part of the global root.
"RTN","PXKFVST",34,0)
GLOBAL ;;^AUPNVSIT
"RTN","PXKFVST",35,0)
 ;
"RTN","PXKFVST",36,0)
EN1 ;
"RTN","PXKFVST",37,0)
 S PXKER=""
"RTN","PXKFVST",38,0)
 S PXKER=$P($T(@PXKNOD+PXKPCE),";;",2) Q
"RTN","PXKFVST",39,0)
EN2 ;
"RTN","PXKFVST",40,0)
 S PXKFD=""
"RTN","PXKFVST",41,0)
 S PXKFD=$P($T(@PXKNOD+PXKPCE),";;",2) D
"RTN","PXKFVST",42,0)
 .I PXKFD="" S PXKPCE=PXKPCE+1 D EN2
"RTN","PXKFVST",43,0)
 Q
"RTN","PXKFVST",44,0)
ADD ;Add an entry to the file
"RTN","PXKFVST",45,0)
 Q
"RTN","PXKFVST",46,0)
0 ;;1,3,5,7,8,22 *  * 0
"RTN","PXKFVST",47,0)
 ;;.01///^S X=$G(~
"RTN","PXKFVST",48,0)
 ;;.02///^S X=$G(~
"RTN","PXKFVST",49,0)
 ;;.03///^S X=$G(~
"RTN","PXKFVST",50,0)
 ;;
"RTN","PXKFVST",51,0)
 ;;.05////^S X=$G(~
"RTN","PXKFVST",52,0)
 ;;.06////^S X=$G(~
"RTN","PXKFVST",53,0)
 ;;.07///^S X=$G(~
"RTN","PXKFVST",54,0)
 ;;.08////^S X=$G(~
"RTN","PXKFVST",55,0)
 ;;.09///^S X=$G(~
"RTN","PXKFVST",56,0)
 ;;
"RTN","PXKFVST",57,0)
 ;;.11///^S X=$G(~
"RTN","PXKFVST",58,0)
 ;;.12////^S X=$G(~
"RTN","PXKFVST",59,0)
 ;;.13///^S X=$G(~
"RTN","PXKFVST",60,0)
 ;;
"RTN","PXKFVST",61,0)
 ;;
"RTN","PXKFVST",62,0)
 ;;
"RTN","PXKFVST",63,0)
 ;;
"RTN","PXKFVST",64,0)
 ;;.18///^S X=$G(~
"RTN","PXKFVST",65,0)
 ;;
"RTN","PXKFVST",66,0)
 ;;
"RTN","PXKFVST",67,0)
 ;;.21////^S X=$G(~
"RTN","PXKFVST",68,0)
 ;;.22////^S X=$G(~
"RTN","PXKFVST",69,0)
 ;;.23////^S X=$G(~
"RTN","PXKFVST",70,0)
 ;;.24////^S X=$G(~
"RTN","PXKFVST",71,0)
 ;;
"RTN","PXKFVST",72,0)
 ;;.26////^S X=$G(~
"RTN","PXKFVST",73,0)
21 ;;
"RTN","PXKFVST",74,0)
 ;;2101///^S X=$G(~
"RTN","PXKFVST",75,0)
800 ;;
"RTN","PXKFVST",76,0)
 ;;80001///^S X=$G(~
"RTN","PXKFVST",77,0)
 ;;80002///^S X=$G(~
"RTN","PXKFVST",78,0)
 ;;80003///^S X=$G(~
"RTN","PXKFVST",79,0)
 ;;80004///^S X=$G(~
"RTN","PXKFVST",80,0)
 ;;80005///^S X=$G(~ ;added 6/17/98 for MST enhancement
"RTN","PXKFVST",81,0)
 ;;80006///^S X=$G(~ ;PX*1*111 - added for HNC enhancement
"RTN","PXKFVST",82,0)
 ;;80007///^S X=$G(~ ;PX*1*130
"RTN","PXKFVST",83,0)
 ;;80008///^S X=$G(~ ;PX*1*168
"RTN","PXKFVST",84,0)
812 ;;
"RTN","PXKFVST",85,0)
 ;;81201///^S X=$G(
"RTN","PXKFVST",86,0)
 ;;81202////^S X=$G(
"RTN","PXKFVST",87,0)
 ;;81203////^S X=$G(
"RTN","PXKFVST",88,0)
 ;
"RTN","PXKFVST",89,0)
UPD ;Up date visit file using visit tracking
"RTN","PXKFVST",90,0)
 ;--new VSIT to make sure that none are left around after call
"RTN","PXKFVST",91,0)
 N PXTMPVST
"RTN","PXKFVST",92,0)
 S PXTMPVST=VSIT("IEN")
"RTN","PXKFVST",93,0)
 N VSIT
"RTN","PXKFVST",94,0)
 S VSIT("IEN")=PXTMPVST
"RTN","PXKFVST",95,0)
 I $G(PXKAV(0,8))]"" D
"RTN","PXKFVST",96,0)
 .I PXKAV(0,8)="@" S VSIT("DSS")="@"
"RTN","PXKFVST",97,0)
 .E  D
"RTN","PXKFVST",98,0)
 ..K ^UTILITY("DIQ1",$J)
"RTN","PXKFVST",99,0)
 ..S DIC=40.7,DA=+$G(PXKAV(0,8)),DIQ(0)="I",DR=1 D EN^DIQ1
"RTN","PXKFVST",100,0)
 ..S VSIT("DSS")=$G(^UTILITY("DIQ1",$J,40.7,DA,1,"I"))
"RTN","PXKFVST",101,0)
 K ^UTILITY("DIQ1",$J),DIQ,DR,DA,DIC
"RTN","PXKFVST",102,0)
 I $G(PXKAV(0,6))]"" S VSIT("INS")=$G(PXKAV(0,6))
"RTN","PXKFVST",103,0)
 I $G(PXKAV(0,18))]"" S VSIT("COD")=$G(PXKAV(0,18))
"RTN","PXKFVST",104,0)
 ;--cannot edit "ELG"
"RTN","PXKFVST",105,0)
 I $G(PXKAV(0,22))]"" S VSIT("LOC")=$G(PXKAV(0,22))
"RTN","PXKFVST",106,0)
 I $G(PXKAV(0,26))]"" S VSIT("ACT")=$G(PXKAV(0,26)) ;PX*1.0*164 Set Patient Account Number reference
"RTN","PXKFVST",107,0)
 ;Classification questions
"RTN","PXKFVST",108,0)
 N PXP,PXV,PXN
"RTN","PXKFVST",109,0)
 ;AO, IR, and EC not applicable if SC answered YES (1)
"RTN","PXKFVST",110,0)
 ;I $G(PXKAV(800,1))=1 F PXP=2:1:4 S PXKAV(800,PXP)="@"
"RTN","PXKFVST",111,0)
 F PXP=1:1:8 D
"RTN","PXKFVST",112,0)
 .S PXV=$G(PXKAV(800,PXP))
"RTN","PXKFVST",113,0)
 .S PXN=$P("SC^AO^IR^EC^MST^HNC^CV^SHAD","^",PXP)
"RTN","PXKFVST",114,0)
 .I PXV'="" S VSIT(PXN)=PXV
"RTN","PXKFVST",115,0)
 D UPD^VSIT
"RTN","PXKFVST",116,0)
 K VSIT("DSS"),VSIT("COD"),VSIT("SC"),VSIT("AO"),VSIT("IR"),VSIT("EC")
"RTN","PXKFVST",117,0)
 K VSIT("LOC"),VSIT("INS"),VSIT("ELG"),VSIT("MDT")
"RTN","PXKFVST",118,0)
 ;PX*1*111 - added for HNC enhancement
"RTN","PXKFVST",119,0)
 K VSIT("MST"),VSIT("HNC"),VSIT("CV"),VSIT("SHAD")
"RTN","PXKFVST",120,0)
 Q
"RTN","PXKFVST",121,0)
SPEC ;
"RTN","PXKFVST",122,0)
 Q
"RTN","PXKVST")
0^19^B19617761
"RTN","PXKVST",1,0)
PXKVST ;ISL/ARS - SET UP VISIT FIELDS BEFORE CALLING OFF TO VSIT ;8/1/96
"RTN","PXKVST",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**56,111,130,164,168**;Aug 12, 1996;Build 14
"RTN","PXKVST",3,0)
VSIT ;ENTRY POINT 
"RTN","PXKVST",4,0)
 ;COMMON SECTION
"RTN","PXKVST",5,0)
 N PXKAFTR,PXKAFT8,PXKAFT15,PXKAFT21,PXKAF811,PXKAF812,PXVSTIEN
"RTN","PXKVST",6,0)
 N VSIT,VSITPKG
"RTN","PXKVST",7,0)
 S PXKAFTR=$S($G(^TMP("PXK",$J,"VST",1,0,"AFTER"))]"":^TMP("PXK",$J,"VST",1,0,"AFTER"),1:"")
"RTN","PXKVST",8,0)
 Q:PXKAFTR=""
"RTN","PXKVST",9,0)
 S PXKAFT21=$S($G(^TMP("PXK",$J,"VST",1,21,"AFTER"))]"":^TMP("PXK",$J,"VST",1,21,"AFTER"),1:"")
"RTN","PXKVST",10,0)
 S PXKAFT15=$S($G(^TMP("PXK",$J,"VST",1,150,"AFTER"))]"":^TMP("PXK",$J,"VST",1,150,"AFTER"),1:"")
"RTN","PXKVST",11,0)
 S PXKAFT8=$S($G(^TMP("PXK",$J,"VST",1,800,"AFTER"))]"":^TMP("PXK",$J,"VST",1,800,"AFTER"),1:"")
"RTN","PXKVST",12,0)
 S PXKAF811=$S($G(^TMP("PXK",$J,"VST",1,811,"AFTER"))]"":^TMP("PXK",$J,"VST",1,811,"AFTER"),1:"")
"RTN","PXKVST",13,0)
 S PXKAF812=$S($G(^TMP("PXK",$J,"VST",1,812,"AFTER"))]"":^TMP("PXK",$J,"VST",1,812,"AFTER"),1:"")
"RTN","PXKVST",14,0)
 S VSIT("IEN")=$S(^TMP("PXK",$J,"VST",1,"IEN")]"":^TMP("PXK",$J,"VST",1,"IEN"),1:"")
"RTN","PXKVST",15,0)
 I VSIT("IEN")="" S PXKAFTR=$TR(PXKAFTR,"@"),PXKAFT8=$TR(PXKAFT8,"@")
"RTN","PXKVST",16,0)
 S VSIT("VDT")=$S($P(PXKAFTR,"^",1)]"":$P(PXKAFTR,"^",1),1:"NOW")
"RTN","PXKVST",17,0)
 S VSIT("TYP")=$P(PXKAFTR,"^",3)
"RTN","PXKVST",18,0)
 S VSIT("INS")=$P(PXKAFTR,"^",6)
"RTN","PXKVST",19,0)
 S VSIT("OUT")=$P(PXKAFT21,"^")
"RTN","PXKVST",20,0)
 S VSIT("PAT")=$P(PXKAFTR,"^",5)
"RTN","PXKVST",21,0)
 S VSIT("SVC")=$P(PXKAFTR,"^",7)
"RTN","PXKVST",22,0)
 S VSIT("DSS")=$P(PXKAFTR,"^",8)
"RTN","PXKVST",23,0)
 S VSIT("LNK")=$P(PXKAFTR,"^",12)
"RTN","PXKVST",24,0)
 S VSIT("WIA")=$P(PXKAFTR,"^",16)
"RTN","PXKVST",25,0)
 S VSIT("LOS")=$P(PXKAFTR,"^",17)
"RTN","PXKVST",26,0)
 S VSIT("COD")=$P(PXKAFTR,"^",18)
"RTN","PXKVST",27,0)
 S:$P(PXKAFTR,"^",21)]"" VSIT("ELG")=$P(PXKAFTR,"^",21)
"RTN","PXKVST",28,0)
 S VSIT("LOC")=$P(PXKAFTR,"^",22)
"RTN","PXKVST",29,0)
 S VSIT("ACT")=$P(PXKAFTR,"^",26) ;PX*1.0*164
"RTN","PXKVST",30,0)
 S:$P(PXKAFT8,"^",1)]"" VSIT("SC")=$P(PXKAFT8,"^",1)
"RTN","PXKVST",31,0)
 S:$P(PXKAFT8,"^",2)]"" VSIT("AO")=$P(PXKAFT8,"^",2)
"RTN","PXKVST",32,0)
 S:$P(PXKAFT8,"^",3)]"" VSIT("IR")=$P(PXKAFT8,"^",3)
"RTN","PXKVST",33,0)
 S:$P(PXKAFT8,"^",4)]"" VSIT("EC")=$P(PXKAFT8,"^",4)
"RTN","PXKVST",34,0)
 S:$P(PXKAFT8,"^",5)]"" VSIT("MST")=$P(PXKAFT8,"^",5) ;added 6/17/98 for MST enhancement
"RTN","PXKVST",35,0)
 ;PX*1*111 - added for HNC enhancement
"RTN","PXKVST",36,0)
 S:$P(PXKAFT8,"^",6)]"" VSIT("HNC")=$P(PXKAFT8,"^",6)
"RTN","PXKVST",37,0)
 S:$P(PXKAFT8,"^",7)]"" VSIT("CV")=$P(PXKAFT8,"^",7)
"RTN","PXKVST",38,0)
 S:$P(PXKAFT8,"^",8)]"" VSIT("SHAD")=$P(PXKAFT8,"^",8)
"RTN","PXKVST",39,0)
 S:$P(PXKAFT15,"^",1)]"" VSIT("SVP")=$P(PXKAFT15,"^",1)
"RTN","PXKVST",40,0)
 S:$P(PXKAFT15,"^",2)]"" VSIT("IO")=$P(PXKAFT15,"^",2)
"RTN","PXKVST",41,0)
 S:$P(PXKAFT15,"^",3)]"" VSIT("PRI")=$P(PXKAFT15,"^",3)
"RTN","PXKVST",42,0)
 S:$P(PXKAF812,"^",2)]"" VSIT("PKG")=$P(PXKAF812,"^",2)
"RTN","PXKVST",43,0)
 S:$P(PXKAF812,"^",3)]"" VSIT("SOR")=$P(PXKAF812,"^",3)
"RTN","PXKVST",44,0)
 S:PXKAF811]"" VSIT("COM")=PXKAF811
"RTN","PXKVST",45,0)
 I $G(VSIT("PRI"))="",VSIT("SVC")="E"!($P($G(^SC(+VSIT("LOC"),0)),"^",7)=VSIT("DSS")) S VSIT("PRI")="P"
"RTN","PXKVST",46,0)
 S VSITPKG="PX"
"RTN","PXKVST",47,0)
 I '$D(VSIT(0)) D
"RTN","PXKVST",48,0)
 .S VSIT(0)=$S(VSIT("SVC")="E":"D0NM",1:"D0NEM")
"RTN","PXKVST",49,0)
 ;
"RTN","PXKVST",50,0)
 ;CALL FOR VSIT
"RTN","PXKVST",51,0)
 D ^VSIT
"RTN","PXKVST",52,0)
 I '$D(VSIT("IEN"))#2 Q
"RTN","PXKVST",53,0)
 S PXVSTIEN=$P(VSIT("IEN"),"^",1)
"RTN","PXKVST",54,0)
 S ^TMP("PXK",$J,"VST",1,"IEN")=PXVSTIEN
"RTN","PXKVST",55,0)
 I PXVSTIEN<1 Q
"RTN","PXKVST",56,0)
 D VIEN(PXVSTIEN)
"RTN","PXKVST",57,0)
 I $P(VSIT("IEN"),"^",3)'=1 D
"RTN","PXKVST",58,0)
 .S ^TMP("PXK",$J,"VST",1,0,"BEFORE")=^AUPNVSIT(PXVSTIEN,0)
"RTN","PXKVST",59,0)
 .S ^TMP("PXK",$J,"VST",1,21,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,21))
"RTN","PXKVST",60,0)
 .S ^TMP("PXK",$J,"VST",1,150,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,150))
"RTN","PXKVST",61,0)
 .S ^TMP("PXK",$J,"VST",1,800,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,800))
"RTN","PXKVST",62,0)
 .S ^TMP("PXK",$J,"VST",1,811,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,811))
"RTN","PXKVST",63,0)
 .S ^TMP("PXK",$J,"VST",1,812,"BEFORE")=$G(^AUPNVSIT(PXVSTIEN,812))
"RTN","PXKVST",64,0)
 .S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",3)=$P(^AUPNVSIT(PXVSTIEN,0),"^",3)
"RTN","PXKVST",65,0)
 .S $P(^TMP("PXK",$J,"VST",1,0,"AFTER"),"^",7)=$P(^AUPNVSIT(PXVSTIEN,0),"^",7)
"RTN","PXKVST",66,0)
 I $P(VSIT("IEN"),"^",3)=1 D
"RTN","PXKVST",67,0)
 .S ^TMP("PXK",$J,"VST",1,0,"AFTER")=^AUPNVSIT(PXVSTIEN,0)
"RTN","PXKVST",68,0)
 .S ^TMP("PXK",$J,"VST",1,21,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,21))
"RTN","PXKVST",69,0)
 .S ^TMP("PXK",$J,"VST",1,150,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,150))
"RTN","PXKVST",70,0)
 .S ^TMP("PXK",$J,"VST",1,800,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,800))
"RTN","PXKVST",71,0)
 .S ^TMP("PXK",$J,"VST",1,811,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,811))
"RTN","PXKVST",72,0)
 .S ^TMP("PXK",$J,"VST",1,812,"AFTER")=$G(^AUPNVSIT(PXVSTIEN,812))
"RTN","PXKVST",73,0)
 .S ^TMP("PXK",$J,"VST",1,0,"BEFORE")=""
"RTN","PXKVST",74,0)
 .S ^TMP("PXK",$J,"VST",1,21,"BEFORE")=""
"RTN","PXKVST",75,0)
 .S ^TMP("PXK",$J,"VST",1,150,"BEFORE")=""
"RTN","PXKVST",76,0)
 .S ^TMP("PXK",$J,"VST",1,800,"BEFORE")=""
"RTN","PXKVST",77,0)
 .S ^TMP("PXK",$J,"VST",1,811,"BEFORE")=""
"RTN","PXKVST",78,0)
 .S ^TMP("PXK",$J,"VST",1,812,"BEFORE")=""
"RTN","PXKVST",79,0)
 .I $D(PXELAP)#2 D
"RTN","PXKVST",80,0)
 ..S ^TMP("PXKCO",$J,PXVSTIEN,"VST",PXVSTIEN,"ELAP","BEFORE")=""
"RTN","PXKVST",81,0)
 ..S ^TMP("PXKCO",$J,PXVSTIEN,"VST",PXVSTIEN,"ELAP","AFTER")=PXELAP
"RTN","PXKVST",82,0)
 K VSIT
"RTN","PXKVST",83,0)
 Q
"RTN","PXKVST",84,0)
 ;
"RTN","PXKVST",85,0)
VIEN(VIEN) ;Put the Visit IEN in the AFTERs for all of the V-Files
"RTN","PXKVST",86,0)
 N PXCAINX1,PXCAINX2
"RTN","PXKVST",87,0)
 S PXCAINX1=""
"RTN","PXKVST",88,0)
 F  S PXCAINX1=$O(^TMP("PXK",$J,PXCAINX1)) Q:PXCAINX1']""  D:"^VST^SOR^"'[PXCAINX1
"RTN","PXKVST",89,0)
 . S PXCAINX2=""
"RTN","PXKVST",90,0)
 . F  S PXCAINX2=$O(^TMP("PXK",$J,PXCAINX1,PXCAINX2)) Q:PXCAINX2']""  D
"RTN","PXKVST",91,0)
 .. I $D(^TMP("PXK",$J,PXCAINX1,PXCAINX2,0,"AFTER"))=1 S $P(^TMP("PXK",$J,PXCAINX1,PXCAINX2,0,"AFTER"),"^",3)=VIEN
"RTN","PXKVST",92,0)
 Q
"RTN","PXKVST",93,0)
 ;
"RTN","PXRRMDR")
0^35^B37941513
"RTN","PXRRMDR",1,0)
PXRRMDR ;BP/WLC - PCE Missing Data Report ;11 Feb 04  10:10 AM
"RTN","PXRRMDR",2,0)
 ;;1.0;PCE;**124,174,168**;FEB 11, 2004;Build 14
"RTN","PXRRMDR",3,0)
 ; 04/11/05 WLC changed to check for AO, IR and EC, only if SC'=YES
"RTN","PXRRMDR",4,0)
 Q
"RTN","PXRRMDR",5,0)
 ;
"RTN","PXRRMDR",6,0)
EN N PX,PXPAGE,PXLOC,PXPROV,SDDIV,ZTSAVE,%DT,DIR,DTOUT,DUOUT,X,Y,POP,PXDT,PXDS,RPTYP,EDT,PAT,SSN,DT,TY,CBU,VDT,LOC,PROV,SORT,SORTHDR,CNT,PRIO
"RTN","PXRRMDR",7,0)
 S (POP,PXPAGE)=0
"RTN","PXRRMDR",8,0)
 K PXDS
"RTN","PXRRMDR",9,0)
 D HOME^%ZIS S:'$D(IOF) IOF=FF W @IOF,!!
"RTN","PXRRMDR",10,0)
 S X=$$CTR("PCE Missing Data Report")
"RTN","PXRRMDR",11,0)
 W !! D DATASRC^PXRRMDR1 G:POP EXIT   ; sets PXDS() PX*1.0*174
"RTN","PXRRMDR",12,0)
 W @IOF,!! S X=$$CTR("**** Date Range Selection ****")
"RTN","PXRRMDR",13,0)
 W !!! S %DT="AEPX",%DT("A")="Beginning date: " D ^%DT G:Y<1 EXIT S PX("BDT")=Y
"RTN","PXRRMDR",14,0)
EDT S %DT("A")="   Ending date: " W ! D ^%DT G:Y<1 EXIT
"RTN","PXRRMDR",15,0)
 I Y<PX("BDT") W !!,$C(7),"End date cannot be before begin date!",! G EDT
"RTN","PXRRMDR",16,0)
 S PX("EDT")=Y_.999999
"RTN","PXRRMDR",17,0)
 W @IOF,!! S X=$$CTR("*** Report Sort Selection ***")
"RTN","PXRRMDR",18,0)
 W !!! K DIR S SORTHDR="DATA SOURCE^CPT^ICD9^PATIENT^ELIGIBILITY"
"RTN","PXRRMDR",19,0)
 F LOOP=1:1:$L(SORTHDR,U) S DESC=$P(SORTHDR,U,LOOP) W !,"("_LOOP_")  "_DESC
"RTN","PXRRMDR",20,0)
 W ! S DIR(0)="N^^I X<1!(X>5) K X",DIR("A")="Enter number between 1 and 5" D ^DIR Q:$D(DIRUT)  S PXSRT=+X
"RTN","PXRRMDR",21,0)
 S DIR(0)="S^D:DETAILED REPORT;S:STATISTICS ONLY",DIR("A")="Select report type",DIR("B")="DETAILED REPORT" D ^DIR Q:$D(DIRUT)
"RTN","PXRRMDR",22,0)
 S RPTYP=Y
"RTN","PXRRMDR",23,0)
 W !!,"This report requires 132 column output.",!
"RTN","PXRRMDR",24,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","PXRRMDR",25,0)
 I $D(IO("Q")) D  G EXIT
"RTN","PXRRMDR",26,0)
 . S ZTRTN="RUN^PXRRMDR",ZTDESC="PCE MISSING DATA REPORT"
"RTN","PXRRMDR",27,0)
 . S ZTSAVE("PX*")=""
"RTN","PXRRMDR",28,0)
 . S ZTSAVE("RPTYP")="",ZTSAVE("SORTHDR")=""
"RTN","PXRRMDR",29,0)
 . D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
"RTN","PXRRMDR",30,0)
 .K ZTSK,IO("Q"),ZTSAVE D HOME^%ZIS
"RTN","PXRRMDR",31,0)
 ;
"RTN","PXRRMDR",32,0)
RUN ;
"RTN","PXRRMDR",33,0)
 U IO
"RTN","PXRRMDR",34,0)
 K ^TMP("PXCRPW",$J),DIR S (PXOUT)=""
"RTN","PXRRMDR",35,0)
 N LOOP,PXDT,I,VSN,VISITS,CLASSIF
"RTN","PXRRMDR",36,0)
 S PXDT=(PX("BDT")-1)_.99999 K ^TMP("PXCRPW",$J)
"RTN","PXRRMDR",37,0)
 F  S PXDT=$O(^AUPNVSIT("ADEL",PXDT)) Q:PXDT>PX("EDT")!('PXDT)  D
"RTN","PXRRMDR",38,0)
 . S VSN=0 F  S VSN=$O(^AUPNVSIT("ADEL",PXDT,VSN)) Q:'VSN  D
"RTN","PXRRMDR",39,0)
 . . S VISITS=$P($G(^AUPNVSIT(VSN,812)),U,3) S:VISITS="" VISITS="Unknown"
"RTN","PXRRMDR",40,0)
 . . Q:'$D(PXDS(VISITS))
"RTN","PXRRMDR",41,0)
 . . D ENCEVENT^PXKENC(VSN,0)
"RTN","PXRRMDR",42,0)
 . . Q:$P($G(^TMP("PXKENC",$J,VSN,"VST",VSN,0)),U,7)="E"  ;Historic encounter PX*1.0*174
"RTN","PXRRMDR",43,0)
 . . Q:$$TESTPAT^VADPT($P($G(^TMP("PXKENC",$J,VSN,"VST",VSN,0)),U,5))  ;Test patient PX*1.0*174
"RTN","PXRRMDR",44,0)
 . . N OE S OE=$O(^SCE("AVSIT",VSN,0)) Q:'OE  Q:$P(^SCE(OE,0),U,6)]""  Q:$P(^SCE(OE,0),U,12)=12  ;Check if a child encounter, non-count  PX*1.0*174
"RTN","PXRRMDR",45,0)
 . . I '$D(^TMP("PXKENC",$J,VSN,"CPT")) D SET("Visit is missing a Procedure Code",1) Q
"RTN","PXRRMDR",46,0)
 . . I $$EXOE^SDCOU2(OE) Q  ;Determine if Encounter is Exempt from Outpatient Classifications and Diagnoses PX*1.0*174
"RTN","PXRRMDR",47,0)
 . . N I,J S (I,CNT)=0 F  S I=$O(^TMP("PXKENC",$J,VSN,"CPT",I)) Q:'I  D
"RTN","PXRRMDR",48,0)
 . . . S CNT=0 F J=5,9,10,11,12,13,14,15 I $P(^TMP("PXKENC",$J,VSN,"CPT",I,0),U,J) S CNT=CNT+1
"RTN","PXRRMDR",49,0)
 . . . I CNT=0 D SET("Procedure: "_$$DISPLYP($P(^TMP("PXKENC",$J,VSN,"CPT",I,0),U))_" missing assoc. DXs",1)
"RTN","PXRRMDR",50,0)
 . . S (I,J)=0 F  S I=$O(^TMP("PXKENC",$J,VSN,"POV",I)) Q:'I  D
"RTN","PXRRMDR",51,0)
 . . . K CLASSIF S DFN=$$GET1^DIQ(9000010,VSN_",",.05,"I")
"RTN","PXRRMDR",52,0)
 . . . I $$AO^SDCO22(DFN) S CLASSIF(1)=""
"RTN","PXRRMDR",53,0)
 . . . I $$IR^SDCO22(DFN) S CLASSIF(2)=""
"RTN","PXRRMDR",54,0)
 . . . I $$SC^SDCO22(DFN) S CLASSIF(3)=""
"RTN","PXRRMDR",55,0)
 . . . I $$EC^SDCO22(DFN) S CLASSIF(4)=""
"RTN","PXRRMDR",56,0)
 . . . I $$MST^SDCO22(DFN) S CLASSIF(5)=""
"RTN","PXRRMDR",57,0)
 . . . I $$HNC^SDCO22(DFN) S CLASSIF(6)=""
"RTN","PXRRMDR",58,0)
 . . . I +$P($$CVEDT^DGCV(DFN,PXDT),"^",3) S CLASSIF(7)=""
"RTN","PXRRMDR",59,0)
 . . . I $$SHAD^SDCO22(DFN) S CLASSIF(8)=""
"RTN","PXRRMDR",60,0)
 . . . I $D(CLASSIF),'$D(^TMP("PXKENC",$J,VSN,"POV",I,800)) D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing SC/EI",1) Q
"RTN","PXRRMDR",61,0)
 . . . S J="" F  S J=$O(CLASSIF(J)) Q:'J  D
"RTN","PXRRMDR",62,0)
 . . . . N SCEIREC S SCEIREC=$G(^TMP("PXKENC",$J,VSN,"POV",I,800))
"RTN","PXRRMDR",63,0)
 . . . . I J=3&($P(SCEIREC,U,1)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Service Connect.",1)
"RTN","PXRRMDR",64,0)
 . . . . I J=1&($P(SCEIREC,U,2)="")&($P(SCEIREC,U,1)'=1) D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Agent Orange",3)
"RTN","PXRRMDR",65,0)
 . . . . I J=2&($P(SCEIREC,U,3)="")&($P(SCEIREC,U,1)'=1) D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Ion. Rad.",4)
"RTN","PXRRMDR",66,0)
 . . . . I J=4&($P(SCEIREC,U,4)="")&($P(SCEIREC,U,1)'=1) D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Env. Contam.",5)
"RTN","PXRRMDR",67,0)
 . . . . I J=5&($P(SCEIREC,U,5)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing MST",6)
"RTN","PXRRMDR",68,0)
 . . . . I J=6&($P(SCEIREC,U,6)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Head/Neck Cancer",6)
"RTN","PXRRMDR",69,0)
 . . . . I J=7&($P(SCEIREC,U,7)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Combat Vet",2)
"RTN","PXRRMDR",70,0)
 . . . . I J=8&($P(SCEIREC,U,8)="") D SET("Diagnosis: "_$$DISPLYDX($P(^TMP("PXKENC",$J,VSN,"POV",I,0),U))_" missing Project 112/SHAD",6)
"RTN","PXRRMDR",71,0)
 U IO D PRINT^PXRRMDR1,^%ZISC
"RTN","PXRRMDR",72,0)
 K ^TMP("PXCRPW",$J)
"RTN","PXRRMDR",73,0)
EXIT Q
"RTN","PXRRMDR",74,0)
 ;
"RTN","PXRRMDR",75,0)
STOP ;Check for stop task request
"RTN","PXRRMDR",76,0)
 S:$G(ZTQUEUED) (PXOUT,ZTSTOP)=$S($$S^%ZTLOAD:1,1:0)
"RTN","PXRRMDR",77,0)
 Q
"RTN","PXRRMDR",78,0)
 ;
"RTN","PXRRMDR",79,0)
EVAL ;
"RTN","PXRRMDR",80,0)
 S PXLOC=$$GET1^DIQ(9000010,VSN_",",.22)
"RTN","PXRRMDR",81,0)
 S:$G(PXLOC)="" PXLOC="Unknown"
"RTN","PXRRMDR",82,0)
 N PXPTR S PXPTR=$O(^AUPNVPRV("AD",VSN,""))
"RTN","PXRRMDR",83,0)
 S PXPRV=$$GET1^DIQ(9000010.06,PXPTR_",",.01)
"RTN","PXRRMDR",84,0)
 S:$G(PRPRV)="" PXPRV="Unknown"
"RTN","PXRRMDR",85,0)
 Q
"RTN","PXRRMDR",86,0)
 ;
"RTN","PXRRMDR",87,0)
DISPLYDX(PXCEPOV)       ;
"RTN","PXRRMDR",88,0)
 N ICDSTR
"RTN","PXRRMDR",89,0)
 S ICDSTR=$$ICDDX^ICDCODE($P(PXCEPOV,"^"),$P(^AUPNVSIT(VSN,0),"^"))
"RTN","PXRRMDR",90,0)
 Q $P(ICDSTR,"^",2) ;code
"RTN","PXRRMDR",91,0)
 ;
"RTN","PXRRMDR",92,0)
DISPLYP(PXCECPT) ;
"RTN","PXRRMDR",93,0)
 N CPTSTR
"RTN","PXRRMDR",94,0)
 S CPTSTR=$$CPT^ICPTCOD($P(PXCECPT,U),$P(^AUPNVSIT(VSN,0),"^"))
"RTN","PXRRMDR",95,0)
 Q $P(CPTSTR,U,2) ;code
"RTN","PXRRMDR",96,0)
 ;
"RTN","PXRRMDR",97,0)
SET(SDX,PRIO) ;
"RTN","PXRRMDR",98,0)
 N A1
"RTN","PXRRMDR",99,0)
 S PRIO=$G(PRIO)
"RTN","PXRRMDR",100,0)
 D EVAL
"RTN","PXRRMDR",101,0)
 I PXSRT="" S A1="Unknown" D SET1(PRIO) Q
"RTN","PXRRMDR",102,0)
 D @PXSRT
"RTN","PXRRMDR",103,0)
 Q
"RTN","PXRRMDR",104,0)
 ;
"RTN","PXRRMDR",105,0)
1 ; Data Source
"RTN","PXRRMDR",106,0)
 S A1=$$GET1^DIQ(9000010,VSN_",",81203)
"RTN","PXRRMDR",107,0)
 S:A1="" A1=" "
"RTN","PXRRMDR",108,0)
 D SET1(PRIO)
"RTN","PXRRMDR",109,0)
 Q
"RTN","PXRRMDR",110,0)
 ;
"RTN","PXRRMDR",111,0)
2 ; CPT
"RTN","PXRRMDR",112,0)
 N CPT,CPT1
"RTN","PXRRMDR",113,0)
 S CPT=$O(^AUPNVCPT("AD",VSN,""))
"RTN","PXRRMDR",114,0)
 S:CPT'="" CPT1=$$GET1^DIQ(9000010.18,CPT_",",.01)
"RTN","PXRRMDR",115,0)
 S A1=$G(CPT1) D SET1(PRIO)
"RTN","PXRRMDR",116,0)
 Q
"RTN","PXRRMDR",117,0)
 ;
"RTN","PXRRMDR",118,0)
3 ; ICD-9
"RTN","PXRRMDR",119,0)
 N ICD,ICD9 S ICD="",ICD9="Unknown"
"RTN","PXRRMDR",120,0)
 F  S ICD=$O(^AUPNVPOV("AD",VSN,ICD)) Q:'ICD  D
"RTN","PXRRMDR",121,0)
 . S ICD9=$$GET1^DIQ(9000010.07,ICD,.01)
"RTN","PXRRMDR",122,0)
 S A1=ICD9 D SET1(PRIO)
"RTN","PXRRMDR",123,0)
 Q
"RTN","PXRRMDR",124,0)
 ;
"RTN","PXRRMDR",125,0)
4 S A1=$$GET1^DIQ(9000010,VSN_",",.05)
"RTN","PXRRMDR",126,0)
 S:A1="" A1="Unknown"
"RTN","PXRRMDR",127,0)
 D SET1(PRIO)
"RTN","PXRRMDR",128,0)
 Q
"RTN","PXRRMDR",129,0)
 ;
"RTN","PXRRMDR",130,0)
5 ; Eligibility
"RTN","PXRRMDR",131,0)
 S A1=$$GET1^DIQ(9000010,VSN_",",.21)
"RTN","PXRRMDR",132,0)
 S:A1="" A1="Unknown"
"RTN","PXRRMDR",133,0)
 D SET1(PRIO)
"RTN","PXRRMDR",134,0)
 Q
"RTN","PXRRMDR",135,0)
 ;
"RTN","PXRRMDR",136,0)
6 ; Default Sort
"RTN","PXRRMDR",137,0)
 S A1="Default" D SET1(PRIO)
"RTN","PXRRMDR",138,0)
 Q
"RTN","PXRRMDR",139,0)
 ;
"RTN","PXRRMDR",140,0)
SET1(PR) ; set temp global
"RTN","PXRRMDR",141,0)
 I A1="" S A1="Unknown"
"RTN","PXRRMDR",142,0)
 S Y=$$GET1^DIQ(9000010,VSN_",",.01) X ^DD("DD") S VDT=Y
"RTN","PXRRMDR",143,0)
 S:VDT="" VDT="Unknown" S VDT=$P(VDT,"@",1)
"RTN","PXRRMDR",144,0)
 S ^TMP("PXCRPW",$J,PXLOC,PXPRV,A1,VDT,VSN,PR,SDX)=VSN
"RTN","PXRRMDR",145,0)
 Q
"RTN","PXRRMDR",146,0)
CTR(X) ;
"RTN","PXRRMDR",147,0)
 W ?(IOM-$L(X))\2,X
"RTN","PXRRMDR",148,0)
 Q 1
"RTN","PXRRMDR",149,0)
 ;
"RTN","PXRRMDR1")
0^36^B19546467
"RTN","PXRRMDR1",1,0)
PXRRMDR1 ;HERN/BDB - PCE Missing Data Report ;11 Feb 04  10:10 AM
"RTN","PXRRMDR1",2,0)
 ;;1.0;PCE;**174,168**;AUG 12, 1996;Build 14
"RTN","PXRRMDR1",3,0)
 ;
"RTN","PXRRMDR1",4,0)
DATASRC ; get Data Sources to print
"RTN","PXRRMDR1",5,0)
 N ID,REC
"RTN","PXRRMDR1",6,0)
 K PXDS
"RTN","PXRRMDR1",7,0)
 K DIR,DIC
"RTN","PXRRMDR1",8,0)
 S DIR(0)="Y",DIR("A")="Would you like to include ALL Data Sources"
"RTN","PXRRMDR1",9,0)
 S DIR("B")="YES" D ^DIR
"RTN","PXRRMDR1",10,0)
 I $D(DIRUT) S POP=1 Q
"RTN","PXRRMDR1",11,0)
 I Y D
"RTN","PXRRMDR1",12,0)
 . S ID="" F  S ID=$O(^PX(839.7,"B",ID)) Q:ID=""  D
"RTN","PXRRMDR1",13,0)
 . . S REC="" F  S REC=$O(^PX(839.7,"B",ID,REC)) Q:REC=""  D
"RTN","PXRRMDR1",14,0)
 . . . S PXDS(REC)=ID
"RTN","PXRRMDR1",15,0)
 . S PXDS("Unknown")=0
"RTN","PXRRMDR1",16,0)
 E  D
"RTN","PXRRMDR1",17,0)
 . S DIC=839.7,DIC(0)="QEAMZ",DIC("A")="Enter Data Source:  "
"RTN","PXRRMDR1",18,0)
 . F  D ^DIC Q:$D(DTOUT)!($D(DUOUT))!(Y=-1)  S:+Y PXDS(+Y)=""
"RTN","PXRRMDR1",19,0)
 I $D(DTOUT)!($D(DUOUT)) S POP=1
"RTN","PXRRMDR1",20,0)
 Q
"RTN","PXRRMDR1",21,0)
 ;
"RTN","PXRRMDR1",22,0)
PRINT ; Print Report
"RTN","PXRRMDR1",23,0)
 N A,I,REC,TOT,TOTE,Y,SHDR
"RTN","PXRRMDR1",24,0)
 N PAT,SSN,SSND,TYP,VIN,DEFD,ENCD
"RTN","PXRRMDR1",25,0)
 K TOT,TOTE
"RTN","PXRRMDR1",26,0)
 S DEFD="TOTAL DEFECTS FOR ",ENCD="TOTAL ENCOUNTERS FOR "
"RTN","PXRRMDR1",27,0)
 S (TOT(1),TOTE(1))=0
"RTN","PXRRMDR1",28,0)
 S LOC="" F  S LOC=$O(^TMP("PXCRPW",$J,LOC)),HDR=0 Q:LOC=""!(POP)  D
"RTN","PXRRMDR1",29,0)
 . S (TOT(2),TOTE(2))=0
"RTN","PXRRMDR1",30,0)
 . S PROV="" F  S PROV=$O(^TMP("PXCRPW",$J,LOC,PROV)) Q:PROV=""!(POP)  D
"RTN","PXRRMDR1",31,0)
 . . S (TOT(3),TOTE(3))=0
"RTN","PXRRMDR1",32,0)
 . . S SORT="" F  S SORT=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT)) Q:SORT=""!(POP)  D
"RTN","PXRRMDR1",33,0)
 . . . S (TOT(4),TOTE(4))=0
"RTN","PXRRMDR1",34,0)
 . . . S VDT="" F  S VDT=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT)) Q:VDT=""!(POP)  D
"RTN","PXRRMDR1",35,0)
 . . . . S (TOT(5),TOTE(5))=0
"RTN","PXRRMDR1",36,0)
 . . . . S VIN="" F  S VIN=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT,VIN)),HDR1=0 Q:VIN=""!(POP)  D
"RTN","PXRRMDR1",37,0)
 . . . . . S TOT(6)=0
"RTN","PXRRMDR1",38,0)
 . . . . . S TOTE(5)=TOTE(5)+1
"RTN","PXRRMDR1",39,0)
 . . . . . S PR="" F  S PR=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT,VIN,PR)) Q:PR=""  D
"RTN","PXRRMDR1",40,0)
 . . . . . . S SHDR=0
"RTN","PXRRMDR1",41,0)
 . . . . . . S SDX="" F  S SDX=$O(^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT,VIN,PR,SDX)) Q:SDX=""!(POP)  D
"RTN","PXRRMDR1",42,0)
 . . . . . . . S REC=^TMP("PXCRPW",$J,LOC,PROV,SORT,VDT,VIN,PR,SDX)
"RTN","PXRRMDR1",43,0)
 . . . . . . . S PAT=$$GET1^DIQ(9000010,REC_",",.05)
"RTN","PXRRMDR1",44,0)
 . . . . . . . S SSN=$$GET1^DIQ(2,$$GET1^DIQ(9000010,REC_",",.05,"I"),.09)
"RTN","PXRRMDR1",45,0)
 . . . . . . . S SSND=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)
"RTN","PXRRMDR1",46,0)
 . . . . . . . S EDT=$$GET1^DIQ(9000010,REC_",",.01)
"RTN","PXRRMDR1",47,0)
 . . . . . . . S TYP=$$GET1^DIQ(9000010,REC_",",15001)
"RTN","PXRRMDR1",48,0)
 . . . . . . . S USR=$$GET1^DIQ(9000010,REC_",",.23)
"RTN","PXRRMDR1",49,0)
 . . . . . . . D:HDR=0 HEADER Q:POP
"RTN","PXRRMDR1",50,0)
 . . . . . . . I RPTYP="D" D
"RTN","PXRRMDR1",51,0)
 . . . . . . . . I HDR1=0 D
"RTN","PXRRMDR1",52,0)
 . . . . . . . . . W ! S $P(HLINE,"-",132)="" W HLINE
"RTN","PXRRMDR1",53,0)
 . . . . . . . . . W !,$E(PAT,1,25),?26,SSND,?39,EDT,?59,$E(TYP,1,15),?75,$E(USR,1,15) S HDR1=1
"RTN","PXRRMDR1",54,0)
 . . . . . . . . W ?94,$E(SDX,1,37),!
"RTN","PXRRMDR1",55,0)
 . . . . . . . S TOT(6)=TOT(6)+1
"RTN","PXRRMDR1",56,0)
 . . . . . . . I $Y>(IOSL-4) S HDR=0
"RTN","PXRRMDR1",57,0)
 . . . . . . Q:POP
"RTN","PXRRMDR1",58,0)
 . . . . . Q:POP
"RTN","PXRRMDR1",59,0)
 . . . . . I $Y>(IOSL-4) D HEADER Q:POP
"RTN","PXRRMDR1",60,0)
 . . . . . S SHDR=1
"RTN","PXRRMDR1",61,0)
 . . . . . W:RPTYP="D" !?94,DEFD_TYP_":  ",TOT(6),!
"RTN","PXRRMDR1",62,0)
 . . . . . S TOT(5)=TOT(5)+TOT(6)
"RTN","PXRRMDR1",63,0)
 . . . . Q:POP
"RTN","PXRRMDR1",64,0)
 . . . . W !?6,DEFD_VDT_":  ",TOT(5)
"RTN","PXRRMDR1",65,0)
 . . . . W !?6,ENCD_VDT_":  ",TOTE(5)
"RTN","PXRRMDR1",66,0)
 . . . . S TOT(4)=TOT(4)+TOT(5)
"RTN","PXRRMDR1",67,0)
 . . . . S TOTE(4)=TOTE(4)+TOTE(5)
"RTN","PXRRMDR1",68,0)
 . . . Q:POP
"RTN","PXRRMDR1",69,0)
 . . . W !?4,DEFD_"SORT VALUE - "_SORT_": ",TOT(4)
"RTN","PXRRMDR1",70,0)
 . . . W !?4,ENCD_"SORT VALUE - "_SORT_": ",TOTE(4)
"RTN","PXRRMDR1",71,0)
 . . . S TOT(3)=TOT(3)+TOT(4)
"RTN","PXRRMDR1",72,0)
 . . . S TOTE(3)=TOTE(3)+TOTE(4)
"RTN","PXRRMDR1",73,0)
 . . Q:POP
"RTN","PXRRMDR1",74,0)
 . . W !?2,DEFD_PROV_": ",TOT(3)
"RTN","PXRRMDR1",75,0)
 . . W !?2,ENCD_PROV_": ",TOTE(3)
"RTN","PXRRMDR1",76,0)
 . . S TOT(2)=TOT(2)+TOT(3)
"RTN","PXRRMDR1",77,0)
 . . S TOTE(2)=TOTE(2)+TOTE(3)
"RTN","PXRRMDR1",78,0)
 . Q:POP
"RTN","PXRRMDR1",79,0)
 . W !,DEFD_LOC_":  ",TOT(2)
"RTN","PXRRMDR1",80,0)
 . W !,ENCD_LOC_": ",TOTE(2)
"RTN","PXRRMDR1",81,0)
 . S TOT(1)=TOT(1)+TOT(2)
"RTN","PXRRMDR1",82,0)
 . S TOTE(1)=TOTE(1)+TOTE(2)
"RTN","PXRRMDR1",83,0)
 Q:POP
"RTN","PXRRMDR1",84,0)
 I TOT(1)+TOTE(1)=0 W !!,"No Data to print",! Q
"RTN","PXRRMDR1",85,0)
 W !!,"GRAND TOTAL NUMBER OF DEFECTS:  ",TOT(1)
"RTN","PXRRMDR1",86,0)
 W !,"GRAND TOTAL NUMBER OF ENCOUNTERS = ",TOTE(1)
"RTN","PXRRMDR1",87,0)
 Q
"RTN","PXRRMDR1",88,0)
 ;
"RTN","PXRRMDR1",89,0)
HEADER ;print header
"RTN","PXRRMDR1",90,0)
 N %,X,Y,MSG,HLINE,DLINE
"RTN","PXRRMDR1",91,0)
 I (PXPAGE>0)&(($E(IOST)="C")&(IO=IO(0))) D
"RTN","PXRRMDR1",92,0)
 . S DIR(0)="E"
"RTN","PXRRMDR1",93,0)
 . W !
"RTN","PXRRMDR1",94,0)
 . D ^DIR K DIR
"RTN","PXRRMDR1",95,0)
 I $D(DUOUT)!($D(DTOUT)) D  Q
"RTN","PXRRMDR1",96,0)
 . S POP=1
"RTN","PXRRMDR1",97,0)
 I PXPAGE>0 W:$D(IOF) @IOF
"RTN","PXRRMDR1",98,0)
 S PXPAGE=PXPAGE+1
"RTN","PXRRMDR1",99,0)
 W !
"RTN","PXRRMDR1",100,0)
 S X=$$CTR132("PCE MISSING DATA REPORT") W !
"RTN","PXRRMDR1",101,0)
 D NOW^%DTC S Y=% X ^DD("DD") S X=$$CTR(Y) W !
"RTN","PXRRMDR1",102,0)
 S X=$$CTR132("By Clinic, Provider, and Date") W !
"RTN","PXRRMDR1",103,0)
 S Y=PX("BDT") X ^DD("DD") S STDT=$P(Y,"@",1)
"RTN","PXRRMDR1",104,0)
 S Y=PX("EDT") X ^DD("DD") S ENDT=$P(Y,"@",1)
"RTN","PXRRMDR1",105,0)
 S MSG=STDT_" through "_ENDT
"RTN","PXRRMDR1",106,0)
 S X=$$CTR(MSG) W !
"RTN","PXRRMDR1",107,0)
 S X=$$CTR132("Page "_PXPAGE) W !
"RTN","PXRRMDR1",108,0)
 W !!,"Patient",?26,"SSN",?39,"Date/Time",?59,"Enc. ID",?75,"Created by User",?94,"Defect",!
"RTN","PXRRMDR1",109,0)
 S $P(HLINE,"=",132)="" W HLINE,!
"RTN","PXRRMDR1",110,0)
 Q:SHDR
"RTN","PXRRMDR1",111,0)
 W !,LOC
"RTN","PXRRMDR1",112,0)
 W !?2,PROV
"RTN","PXRRMDR1",113,0)
 N SORTD S SORTD=SORT
"RTN","PXRRMDR1",114,0)
 S:SORTD=" " SORTD="Unknown"
"RTN","PXRRMDR1",115,0)
 W !?4,"SORT VALUE:  ",$P(SORTHDR,U,PXSRT),"= ",SORTD
"RTN","PXRRMDR1",116,0)
 S:VDT="" VDT="Unknown"
"RTN","PXRRMDR1",117,0)
 W !?6,$P(VDT,"@",1),":"
"RTN","PXRRMDR1",118,0)
 S HDR=1
"RTN","PXRRMDR1",119,0)
 Q
"RTN","PXRRMDR1",120,0)
 ;
"RTN","PXRRMDR1",121,0)
CTR(X) ;
"RTN","PXRRMDR1",122,0)
 W ?(IOM-$L(X))\2,X
"RTN","PXRRMDR1",123,0)
 Q 1
"RTN","PXRRMDR1",124,0)
 ;
"RTN","PXRRMDR1",125,0)
CTR132(X) ;
"RTN","PXRRMDR1",126,0)
 W ?(132-$L(X))\2,X
"RTN","PXRRMDR1",127,0)
 Q 1
"RTN","PXRRMDR1",128,0)
 ;
"RTN","PXUTLSCC")
0^20^B39907566
"RTN","PXUTLSCC",1,0)
PXUTLSCC ;ISL/dee,ISA/KWP - Validates and corrects the Service Connected Conditions ;6/06/05
"RTN","PXUTLSCC",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**74,107,111,130,168**;Aug 12, 1996;Build 14
"RTN","PXUTLSCC",3,0)
 Q
"RTN","PXUTLSCC",4,0)
 ;
"RTN","PXUTLSCC",5,0)
SCC(PXUPAT,PXUDT,PXUHLOC,PXUTLVST,PXUIN,PXUOUT,PXUERR) ;
"RTN","PXUTLSCC",6,0)
 ;+Input Parameters:
"RTN","PXUTLSCC",7,0)
 ;+  PXUPAT   IEN of patient
"RTN","PXUTLSCC",8,0)
 ;+  PXUDT    date and time of the encounter
"RTN","PXUTLSCC",9,0)
 ;+  PXUHLOC  Hospital Location of the enocunter
"RTN","PXUTLSCC",10,0)
 ;+  PXUTLVST (optional) pointer to the visit that is being used
"RTN","PXUTLSCC",11,0)
 ;+  PXUIN    service connected^agent orange^ionizing radiation
"RTN","PXUTLSCC",12,0)
 ;+             ^enviromental contaminants^military sexual trauma
"RTN","PXUTLSCC",13,0)
 ;+             ^head and/or neck cancer
"RTN","PXUTLSCC",14,0)
 ;+           where 1 ::= yes, 0 ::= no, null ::= n/a
"RTN","PXUTLSCC",15,0)
 ;+
"RTN","PXUTLSCC",16,0)
 ;+Output Parameters:
"RTN","PXUTLSCC",17,0)
 ;+  PXUOUT  this is PXUIN corrected so that the invalid answers
"RTN","PXUTLSCC",18,0)
 ;+          are changed to null
"RTN","PXUTLSCC",19,0)
 ;+  PXUERR  this is a six piece value one for each condition as follows:
"RTN","PXUTLSCC",20,0)
 ;+      1   ::= should be yes or no, but it is null
"RTN","PXUTLSCC",21,0)
 ;+      0   ::= no error
"RTN","PXUTLSCC",22,0)
 ;+     -1   ::= not valued value
"RTN","PXUTLSCC",23,0)
 ;+     -2   ::= value must be null
"RTN","PXUTLSCC",24,0)
 ;+     -3   ::= must be null because SC is yes
"RTN","PXUTLSCC",25,0)
 ;
"RTN","PXUTLSCC",26,0)
 N PXUITEM,PXUPSCC,PXUSC,PXUAO,PXUIR,PXUEC,PXUMST,PXUHNC,PXUSHAD
"RTN","PXUTLSCC",27,0)
 D SCCOND(PXUPAT,PXUDT,PXUHLOC,$G(PXUTLVST),.PXUPSCC) ;Set up array of the patients SCC
"RTN","PXUTLSCC",28,0)
 S PXUOUT=PXUIN
"RTN","PXUTLSCC",29,0)
 S PXUERR="0^0^0^0^0^0^0^0"
"RTN","PXUTLSCC",30,0)
 S PXUSC=$P(PXUIN,"^",1)
"RTN","PXUTLSCC",31,0)
 I '(PXUSC=1!(PXUSC=0)!(PXUSC="")) S $P(PXUERR,"^",1)=-1 S $P(PXUOUT,"^",1)=""
"RTN","PXUTLSCC",32,0)
 E  I PXUSC="" D  ;it is ok
"RTN","PXUTLSCC",33,0)
 . I $P(PXUPSCC("SC"),"^",1) S $P(PXUERR,"^",1)=1,$P(PXUOUT,"^",1)=$P(PXUPSCC("SC"),"^",2) ;should have had a value
"RTN","PXUTLSCC",34,0)
 E  I PXUSC]"" D
"RTN","PXUTLSCC",35,0)
 . I '$P(PXUPSCC("SC"),"^",1) S $P(PXUERR,"^",1)=-2 S $P(PXUOUT,"^",1)="" ;it must be null
"RTN","PXUTLSCC",36,0)
 . E  ;it is ok
"RTN","PXUTLSCC",37,0)
 S PXUSC=$P(PXUOUT,"^",1)
"RTN","PXUTLSCC",38,0)
 S PXUAO=$P(PXUIN,"^",2)
"RTN","PXUTLSCC",39,0)
 I '(PXUAO=1!(PXUAO=0)!(PXUAO="")) S $P(PXUERR,"^",2)=-1 S $P(PXUOUT,"^",2)=""
"RTN","PXUTLSCC",40,0)
 E  I PXUAO="" D  ;it is ok
"RTN","PXUTLSCC",41,0)
 . I $P(PXUPSCC("AO"),"^",1),'PXUSC S $P(PXUERR,"^",2)=1,$P(PXUOUT,"^",2)=$P(PXUPSCC("AO"),"^",2) ;should have had a value
"RTN","PXUTLSCC",42,0)
 E  I PXUAO]"" D
"RTN","PXUTLSCC",43,0)
 . I '$P(PXUPSCC("AO"),"^",1) S $P(PXUERR,"^",2)=-2 S $P(PXUOUT,"^",2)="" ;it must be null
"RTN","PXUTLSCC",44,0)
 . E  I PXUSC,PXUAO]"" S $P(PXUERR,"^",2)=-3 S $P(PXUOUT,"^",2)="" ;it is SC so it must be null
"RTN","PXUTLSCC",45,0)
 . ;E  ;it is ok
"RTN","PXUTLSCC",46,0)
 S PXUIR=$P(PXUIN,"^",3)
"RTN","PXUTLSCC",47,0)
 I '(PXUIR=1!(PXUIR=0)!(PXUIR="")) S $P(PXUERR,"^",3)=-1 S $P(PXUOUT,"^",3)=""
"RTN","PXUTLSCC",48,0)
 E  I PXUIR="" D  ;it is ok
"RTN","PXUTLSCC",49,0)
 . I $P(PXUPSCC("IR"),"^",1),'PXUSC S $P(PXUERR,"^",3)=1,$P(PXUOUT,"^",3)=$P(PXUPSCC("IR"),"^",2) ;should have had a value
"RTN","PXUTLSCC",50,0)
 E  I PXUIR]"" D
"RTN","PXUTLSCC",51,0)
 . I '$P(PXUPSCC("IR"),"^",1) S $P(PXUERR,"^",3)=-2 S $P(PXUOUT,"^",3)="" ;it must be null
"RTN","PXUTLSCC",52,0)
 . E  I PXUSC,PXUIR]"" S $P(PXUERR,"^",3)=-3 S $P(PXUOUT,"^",3)="" ;it is SC so it must be null
"RTN","PXUTLSCC",53,0)
 . ;E  ;it is ok
"RTN","PXUTLSCC",54,0)
 S PXUEC=$P(PXUIN,"^",4)
"RTN","PXUTLSCC",55,0)
 I '(PXUEC=1!(PXUEC=0)!(PXUEC="")) S $P(PXUERR,"^",4)=-1 S $P(PXUOUT,"^",4)=""
"RTN","PXUTLSCC",56,0)
 E  I PXUEC="" D  ;it is ok
"RTN","PXUTLSCC",57,0)
 . I $P(PXUPSCC("EC"),"^",1),'PXUSC S $P(PXUERR,"^",4)=1,$P(PXUOUT,"^",4)=$P(PXUPSCC("EC"),"^",2) ;should have had a value
"RTN","PXUTLSCC",58,0)
 E  I PXUEC]"" D
"RTN","PXUTLSCC",59,0)
 . I '$P(PXUPSCC("EC"),"^",1) S $P(PXUERR,"^",4)=-2 S $P(PXUOUT,"^",4)="" ;it must be null
"RTN","PXUTLSCC",60,0)
 . E  I PXUSC,PXUEC]"" S $P(PXUERR,"^",4)=-3 S $P(PXUOUT,"^",4)="" ;it is SC so it must be null
"RTN","PXUTLSCC",61,0)
 . ;E  ;it is ok
"RTN","PXUTLSCC",62,0)
 S PXUMST=$P(PXUIN,"^",5) ;MST not dependent on SC question
"RTN","PXUTLSCC",63,0)
 I '(PXUMST=1!(PXUMST=0)!(PXUMST="")) S $P(PXUERR,"^",5)=-1 S $P(PXUOUT,"^",5)="" ;not valid data
"RTN","PXUTLSCC",64,0)
 E  I PXUMST="" D  ;it is ok
"RTN","PXUTLSCC",65,0)
 . I $P(PXUPSCC("MST"),"^",1) S $P(PXUERR,"^",5)=1,$P(PXUOUT,"^",5)=$P(PXUPSCC("MST"),"^",2) ;should have had a value
"RTN","PXUTLSCC",66,0)
 E  I PXUMST]"" D
"RTN","PXUTLSCC",67,0)
 .I '$P(PXUPSCC("MST"),"^",1) S $P(PXUERR,"^",5)=-2 S $P(PXUOUT,"^",5)="" ;it must be null, not MST status
"RTN","PXUTLSCC",68,0)
 ;PX*1*111 - Add Head & Neck
"RTN","PXUTLSCC",69,0)
 S PXUHNC=$P(PXUIN,"^",6) ;HNC not dependent on SC question
"RTN","PXUTLSCC",70,0)
 I '(PXUHNC=1!(PXUHNC=0)!(PXUHNC="")) S $P(PXUERR,"^",6)=-1 S $P(PXUOUT,"^",6)="" ;not valid data
"RTN","PXUTLSCC",71,0)
 E  I PXUHNC="" D  ;it is ok
"RTN","PXUTLSCC",72,0)
 . I $P(PXUPSCC("HNC"),"^",1) S $P(PXUERR,"^",6)=1,$P(PXUOUT,"^",6)=$P(PXUPSCC("HNC"),"^",2) ;should have had a value
"RTN","PXUTLSCC",73,0)
 E  I PXUHNC]"" D
"RTN","PXUTLSCC",74,0)
 .I '$P(PXUPSCC("HNC"),"^",1) S $P(PXUERR,"^",6)=-2 S $P(PXUOUT,"^",6)="" ;it must be null, not HNC status
"RTN","PXUTLSCC",75,0)
 S PXUCV=$P(PXUIN,"^",7) ;CV not dependent on SC question
"RTN","PXUTLSCC",76,0)
 I '(PXUCV=1!(PXUCV=0)!(PXUCV="")) S $P(PXUERR,"^",7)=-1 S $P(PXUOUT,"^",7)="" ;not valid data
"RTN","PXUTLSCC",77,0)
 E  I PXUCV="" D  ;it is ok
"RTN","PXUTLSCC",78,0)
 . I $P(PXUPSCC("CV"),"^",1) S $P(PXUERR,"^",7)=1,$P(PXUOUT,"^",7)=$P(PXUPSCC("CV"),"^",2) ;should have had a value
"RTN","PXUTLSCC",79,0)
 E  I PXUCV]"" D
"RTN","PXUTLSCC",80,0)
 .I '$P(PXUPSCC("CV"),"^",1) S $P(PXUERR,"^",7)=-2 S $P(PXUOUT,"^",7)="" ;it must be null, not CV status
"RTN","PXUTLSCC",81,0)
 S PXUSHAD=$P(PXUIN,"^",8) ;SHAD not dependent on SC question
"RTN","PXUTLSCC",82,0)
 I '(PXUSHAD=1!(PXUSHAD=0)!(PXUSHAD="")) S $P(PXUERR,"^",8)=-1 S $P(PXUOUT,"^",8)="" ;not valid data
"RTN","PXUTLSCC",83,0)
 E  I PXUSHAD="" D  ;it is ok
"RTN","PXUTLSCC",84,0)
 . I $P(PXUPSCC("SHAD"),"^",1) S $P(PXUERR,"^",8)=1,$P(PXUOUT,"^",8)=$P(PXUPSCC("SHAD"),"^",2) ;should have had a value
"RTN","PXUTLSCC",85,0)
 E  I PXUSHAD]"" D
"RTN","PXUTLSCC",86,0)
 .I '$P(PXUPSCC("SHAD"),"^",1) S $P(PXUERR,"^",8)=-2 S $P(PXUOUT,"^",8)="" ;it must be null, not SHAD status
"RTN","PXUTLSCC",87,0)
 Q
"RTN","PXUTLSCC",88,0)
 ;
"RTN","PXUTLSCC",89,0)
 ;
"RTN","PXUTLSCC",90,0)
SCCOND(DFN,APPDT,HLOC,VISIT,PXUDATA) ;Set up array of the patients
"RTN","PXUTLSCC",91,0)
 ;  Service Connected Conditions
"RTN","PXUTLSCC",92,0)
 ;
"RTN","PXUTLSCC",93,0)
 ;Input Parameters:
"RTN","PXUTLSCC",94,0)
 ;  DFN      IEN of patient
"RTN","PXUTLSCC",95,0)
 ;  APPDT    date and time of the encounter
"RTN","PXUTLSCC",96,0)
 ;  HLOC     Hospital Location of the enocunter
"RTN","PXUTLSCC",97,0)
 ;  VISIT    (optional) The visit that is being used
"RTN","PXUTLSCC",98,0)
 ;
"RTN","PXUTLSCC",99,0)
 ;Output Parameters:
"RTN","PXUTLSCC",100,0)
 ;  PXUDATA  this is an array subscriped by "SC","AO","IR","EC","MST","HNC"
"RTN","PXUTLSCC",101,0)
 ;           that contains to piece each
"RTN","PXUTLSCC",102,0)
 ;    first: 1 if the condition can be answered
"RTN","PXUTLSCC",103,0)
 ;           0 if it should be null
"RTN","PXUTLSCC",104,0)
 ;   second: the answer that Scheduling has if it has one
"RTN","PXUTLSCC",105,0)
 ;           1 ::= yes,  0 ::= no
"RTN","PXUTLSCC",106,0)
 ;
"RTN","PXUTLSCC",107,0)
 N CLASSIF,XX,OUTENC,CL,END,X0,MNE
"RTN","PXUTLSCC",108,0)
 S OUTENC=""
"RTN","PXUTLSCC",109,0)
 I VISIT>0 D
"RTN","PXUTLSCC",110,0)
 .S OUTENC=$O(^SCE("AVSIT",VISIT,0))
"RTN","PXUTLSCC",111,0)
 .I OUTENC>0,$P(^SCE(OUTENC,0),U,6) S OUTENC=$P(^SCE(OUTENC,0),U,6)
"RTN","PXUTLSCC",112,0)
 I 'VISIT D
"RTN","PXUTLSCC",113,0)
 .; Call if they have an appointment for this hospital location
"RTN","PXUTLSCC",114,0)
 .; and there is an Outpatient Encounter IEN;
"RTN","PXUTLSCC",115,0)
 .; returns the answer that scheduling has if any
"RTN","PXUTLSCC",116,0)
 .I $G(^DPT(DFN,"S",APPDT,0))]"" S XX=$G(^(0)) I +XX=HLOC D
"RTN","PXUTLSCC",117,0)
 ..S OUTENC=$P(XX,U,20)
"RTN","PXUTLSCC",118,0)
 .Q:OUTENC
"RTN","PXUTLSCC",119,0)
 .;
"RTN","PXUTLSCC",120,0)
 .; Find an Outpatient encouter matching DFN APPDT,HLOC if any.
"RTN","PXUTLSCC",121,0)
 .S OUTENC=$$EXAE^SDOE(DFN,APPDT,APPDT) D VEROUT
"RTN","PXUTLSCC",122,0)
 ;
"RTN","PXUTLSCC",123,0)
 ;Do Outpatient Encounter checks
"RTN","PXUTLSCC",124,0)
 I OUTENC D
"RTN","PXUTLSCC",125,0)
 .I '$D(^SCE(OUTENC,0)) S OUTENC="" Q
"RTN","PXUTLSCC",126,0)
 .S X0=^SCE(OUTENC,0),END=0 D ENCHK(OUTENC,X0)
"RTN","PXUTLSCC",127,0)
 .I END S OUTENC=""
"RTN","PXUTLSCC",128,0)
 I OUTENC>0 D CLOE^SDCO21(OUTENC,.CLASSIF)
"RTN","PXUTLSCC",129,0)
 ;
"RTN","PXUTLSCC",130,0)
 I '$G(OUTENC) D CL^SDCO21(DFN,APPDT,"",.CLASSIF)
"RTN","PXUTLSCC",131,0)
 S XX=0
"RTN","PXUTLSCC",132,0)
 F  S XX=$O(^SD(409.41,XX)) Q:XX'>0  D
"RTN","PXUTLSCC",133,0)
 .S MNE=$P($G(^SD(409.41,XX,0)),U,7) I $D(MNE) D
"RTN","PXUTLSCC",134,0)
 ..S PXUDATA(MNE)=$D(CLASSIF(XX))_U_$P($G(CLASSIF(XX)),U,2)
"RTN","PXUTLSCC",135,0)
 Q
"RTN","PXUTLSCC",136,0)
ENCHK(ENCOWNTR,X0) ;Do outpatient encounter checks
"RTN","PXUTLSCC",137,0)
 N LOC,ORG,DFN
"RTN","PXUTLSCC",138,0)
 S DFN=$P(X0,U,2),LOC=$P(X0,U,4),ORG=$P(X0,U,8)
"RTN","PXUTLSCC",139,0)
 I $$REQ^SDM1A(+X0)'="CO" S END=1 Q  ;Check MAS Check out date parameter
"RTN","PXUTLSCC",140,0)
 I ORG=1,'$$CLINIC^SDAMU(+LOC) S END=1 Q  ;Screen for valid clinic
"RTN","PXUTLSCC",141,0)
 I "^1^2^"[("^"_ORG_"^"),$$INP^SDAM2(+DFN,+X0)="I" S END=1 Q  ;Inpat chk
"RTN","PXUTLSCC",142,0)
 I $$EXOE^SDCOU2(ENCOWNTR) S END=1 Q  ;Chk exempt Outpt classification
"RTN","PXUTLSCC",143,0)
 Q
"RTN","PXUTLSCC",144,0)
VEROUT ;verify a clinic
"RTN","PXUTLSCC",145,0)
 Q:'OUTENC
"RTN","PXUTLSCC",146,0)
 S CL=$$GETOE^SDOE(OUTENC) I $P(CL,U,4)'=HLOC S OUTENC=""
"RTN","PXUTLSCC",147,0)
 Q
"RTN","PXUTLSCC",148,0)
 ;
"RTN","VSITDEF")
0^21^B42348655
"RTN","VSITDEF",1,0)
VSITDEF ;ISL/dee - Defaulting Logic for the Visit ;4/17/97
"RTN","VSITDEF",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**76,111,130,164,168**;Aug 12, 1996;Build 14
"RTN","VSITDEF",3,0)
 ; Patch PX*1*76 changes the 2nd line of all VSIT* routines to reflect
"RTN","VSITDEF",4,0)
 ; the incorporation of the module into PCE.  For historical reference,
"RTN","VSITDEF",5,0)
 ; the old (VISIT TRACKING) 2nd line is included below to reference VSIT
"RTN","VSITDEF",6,0)
 ; patches.
"RTN","VSITDEF",7,0)
 ;
"RTN","VSITDEF",8,0)
 ;;2.0;VISIT TRACKING;**1,2**;Aug 12, 1996
"RTN","VSITDEF",9,0)
 ;
"RTN","VSITDEF",10,0)
 Q  ; - not an entry point
"RTN","VSITDEF",11,0)
 ;
"RTN","VSITDEF",12,0)
REQUIRED() ;Check the required variables
"RTN","VSITDEF",13,0)
 ;and Default all fields that are need for lookup matching
"RTN","VSITDEF",14,0)
 ; Returns: 0 if no errors and 
"RTN","VSITDEF",15,0)
 ;          1 if there are errors that prevent processing
"RTN","VSITDEF",16,0)
 ;          (stored in QUIT)
"RTN","VSITDEF",17,0)
 N QUIT,SITE
"RTN","VSITDEF",18,0)
 S QUIT=0
"RTN","VSITDEF",19,0)
 S SITE=+$$SITE^VASITE($P($G(VSIT("VDT")),"^"))
"RTN","VSITDEF",20,0)
 ; - VDT
"RTN","VSITDEF",21,0)
 S VSIT("VDT")=$$ERRCHK^VSITCK("VDT",VSIT("VDT"),$S(VSIT("SVC")="E":"TS",1:""))
"RTN","VSITDEF",22,0)
 I $L(VSIT("VDT"),"^")>1 D ERR^VSITPUT($P(VSIT("VDT"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",23,0)
 ; - PAT
"RTN","VSITDEF",24,0)
 S VSIT("PAT")=$$ERRCHK^VSITCK("PAT",VSIT("PAT"))
"RTN","VSITDEF",25,0)
 I $L(VSIT("PAT"),"^")>1 D ERR^VSITPUT($P(VSIT("PAT"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",26,0)
 I VSIT("INS")="",VSIT("OUT")="",VSIT("SVC")'="E" D
"RTN","VSITDEF",27,0)
 . S VSIT("INS")=$$INS4LOC^VSITCK1(+VSIT("LOC"))
"RTN","VSITDEF",28,0)
 . I VSIT("INS")']"",SITE>0 S VSIT("INS")=SITE
"RTN","VSITDEF",29,0)
 . S VSIT("INS")=$$ERRCHK^VSITCK("INS",VSIT("INS"))
"RTN","VSITDEF",30,0)
 I $L(VSIT("INS"),"^")>1 D ERR^VSITPUT($P(VSIT("INS"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",31,0)
 ; - LOC
"RTN","VSITDEF",32,0)
 I (VSIT("INS")=SITE&(VSIT("SVC")'="E"))!(VSIT("LOC")]"") D
"RTN","VSITDEF",33,0)
 . S VSIT("LOC")=$$ERRCHK^VSITCK("LOC",VSIT("LOC"))
"RTN","VSITDEF",34,0)
 I $L(VSIT("LOC"),"^")>1 D ERR^VSITPUT($P(VSIT("LOC"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",35,0)
 ; - TYP
"RTN","VSITDEF",36,0)
 I VSIT("TYP")']"",VSIT("INS")]"" S VSIT("TYP")="V"
"RTN","VSITDEF",37,0)
 I VSIT("TYP")']"",VSIT("SVC")="E" S VSIT("TYP")="O"
"RTN","VSITDEF",38,0)
 S:VSIT("TYP")']"" VSIT("TYP")=$G(DUZ("AG"))
"RTN","VSITDEF",39,0)
 S:VSIT("TYP")']"" VSIT("TYP")=$P($G(^DIC(150.9,1,0)),"^",3)
"RTN","VSITDEF",40,0)
 S VSIT("TYP")=$$ERRCHK^VSITCK("TYP",VSIT("TYP"))
"RTN","VSITDEF",41,0)
 I $L(VSIT("TYP"),"^")>1 D ERR^VSITPUT($P(VSIT("TYP"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",42,0)
 ; - DSS
"RTN","VSITDEF",43,0)
 I VSIT("DSS")="",VSIT("LOC")]"" D
"RTN","VSITDEF",44,0)
 . S VSIT("DSS")=$$DSS4LOC^VSITCK1(+VSIT("LOC"))
"RTN","VSITDEF",45,0)
 I VSIT("DSS")]"" D
"RTN","VSITDEF",46,0)
 . S VSIT("DSS")=$$ERRCHK^VSITCK("DSS",VSIT("DSS"))
"RTN","VSITDEF",47,0)
 I $L(VSIT("DSS"),"^")>1 D ERR^VSITPUT($P(VSIT("DSS"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",48,0)
 ; - IO
"RTN","VSITDEF",49,0)
 S VSIT("IO")=$S(VSITIPM>0:1,1:0)
"RTN","VSITDEF",50,0)
 ; - SVC
"RTN","VSITDEF",51,0)
 I VSIT("SVC")'="E" D
"RTN","VSITDEF",52,0)
 . I +VSIT("DSS") D
"RTN","VSITDEF",53,0)
 .. ;Default svc based on the dss id
"RTN","VSITDEF",54,0)
 .. I $P(^DIC(40.7,+VSIT("DSS"),0),"^",1)["TELE" S VSIT("SVC")="T" ;any TELEphone
"RTN","VSITDEF",55,0)
 .. E  I $O(^VSIT(150.1,"B",+$P(^DIC(40.7,+VSIT("DSS"),0),"^",2),0)) S VSIT("SVC")="X"
"RTN","VSITDEF",56,0)
 .. E  I VSIT("SVC")="",VSIT("DSS")=$P($G(^SC(+VSIT("LOC"),0)),"^",7) S VSIT("SVC")="A"
"RTN","VSITDEF",57,0)
 . I VSIT("SVC")="" S VSIT("SVC")="X"
"RTN","VSITDEF",58,0)
 I VSIT("IO") D
"RTN","VSITDEF",59,0)
 . I VSIT("SVC")="A" S VSIT("SVC")="I"
"RTN","VSITDEF",60,0)
 . E  I VSIT("SVC")="X" S VSIT("SVC")="D"
"RTN","VSITDEF",61,0)
 E  D
"RTN","VSITDEF",62,0)
 . I VSIT("SVC")="I" S VSIT("SVC")="A"
"RTN","VSITDEF",63,0)
 . E  I VSIT("SVC")="D" S VSIT("SVC")="X"
"RTN","VSITDEF",64,0)
 S VSIT("SVC")=$$ERRCHK^VSITCK("SVC",VSIT("SVC"))
"RTN","VSITDEF",65,0)
 I $L(VSIT("SVC"),"^")>1 D ERR^VSITPUT($P(VSIT("SVC"),"^",2,99)) S QUIT=1
"RTN","VSITDEF",66,0)
 ;
"RTN","VSITDEF",67,0)
 Q QUIT
"RTN","VSITDEF",68,0)
 ;
"RTN","VSITDEF",69,0)
DEFAULTS ;Default all of the rest of the fields that are NOT need for lookup matching
"RTN","VSITDEF",70,0)
 ; - CDT & MDT
"RTN","VSITDEF",71,0)
 D
"RTN","VSITDEF",72,0)
 . N %,%H,%I,X
"RTN","VSITDEF",73,0)
 . D NOW^%DTC
"RTN","VSITDEF",74,0)
 . S (VSIT("CDT"),VSIT("MDT"))=%
"RTN","VSITDEF",75,0)
 ; - LNK
"RTN","VSITDEF",76,0)
 ;   check if good
"RTN","VSITDEF",77,0)
 D:VSIT("LNK")]""
"RTN","VSITDEF",78,0)
 . S VSIT("LNK")=$$GET^VSITVAR("LNK",VSIT("LNK"))
"RTN","VSITDEF",79,0)
 . I +VSIT("LNK"),+VSIT("PAT") D
"RTN","VSITDEF",80,0)
 . . S NOD=$G(^AUPNVSIT(+VSIT("LNK"),0))
"RTN","VSITDEF",81,0)
 . . S:+$P(NOD,"^",11) VSIT("LNK")="" ; delete flag
"RTN","VSITDEF",82,0)
 . . S:+VSIT("PAT")'=$P(NOD,"^",5) VSIT("LNK")="" ; different patients
"RTN","VSITDEF",83,0)
 S VSIT("LNK")=$$ERRCHK^VSITCK("LNK",VSIT("LNK"))
"RTN","VSITDEF",84,0)
 D:$L(VSIT("LNK"),"^")>1 WRN^VSITPUT($P(VSIT("LNK"),"^",2,99))
"RTN","VSITDEF",85,0)
 ; - COD
"RTN","VSITDEF",86,0)
 S VSIT("COD")=$$ERRCHK^VSITCK("COD",VSIT("COD"))
"RTN","VSITDEF",87,0)
 D:$L(VSIT("COD"),"^")>1 WRN^VSITPUT($P(VSIT("COD"),"^",2,99))
"RTN","VSITDEF",88,0)
 ; - ELG
"RTN","VSITDEF",89,0)
 I +VSIT("PAT"),$F(VSIT(0),"I")!($F(VSIT(0),"E")) D
"RTN","VSITDEF",90,0)
 . S:VSIT(0)["I" VSIT("ELG")=$$ELG^VSITASK(VSIT("PAT"))
"RTN","VSITDEF",91,0)
 . D:VSIT("ELG")=""
"RTN","VSITDEF",92,0)
 . . S:VSIT("LNK")>0 VSIT("ELG")=$P($G(^AUPNVSIT(VSIT("LNK"),0)),"^",21) ;Eligibility Code form Parent Visit
"RTN","VSITDEF",93,0)
 . . S:VSIT("ELG")="" VSIT("ELG")=$P($G(^DPT(+VSIT("PAT"),.36)),"^") ;Primary Eligibility Code
"RTN","VSITDEF",94,0)
 . . D:VSIT("ELG")=""
"RTN","VSITDEF",95,0)
 . . . N VSITI,VSITE
"RTN","VSITDEF",96,0)
 . . . S (VSITI,VSITE)=0
"RTN","VSITDEF",97,0)
 . . . ;See if any eligibilities it the Patient Eigibilities sub-file
"RTN","VSITDEF",98,0)
 . . . F  S VSITE=$O(^DPT(+VSIT("PAT"),"E",VSITE)) Q:VSITE'>0  S VSITI=VSITI+1
"RTN","VSITDEF",99,0)
 . . . I VSITI=1 S VSIT("ELG")=$O(^DPT(+VSIT("PAT"),"E",0)) ;If only one use it
"RTN","VSITDEF",100,0)
 S VSIT("ELG")=$$ERRCHK^VSITCK("ELG",VSIT("ELG"))
"RTN","VSITDEF",101,0)
 D:$L(VSIT("ELG"),"^")>1 WRN^VSITPUT($P(VSIT("ELG"),"^",2,99))
"RTN","VSITDEF",102,0)
 ; - USR
"RTN","VSITDEF",103,0)
 I VSIT("USR")="",+$G(DUZ) S VSIT("USR")=+DUZ
"RTN","VSITDEF",104,0)
 S VSIT("USR")=$$ERRCHK^VSITCK("USR",VSIT("USR"))
"RTN","VSITDEF",105,0)
 D:$L(VSIT("USR"),"^")>1 WRN^VSITPUT($P(VSIT("USR"),"^",2,99))
"RTN","VSITDEF",106,0)
 ; - OPT
"RTN","VSITDEF",107,0)
 S:VSIT("OPT")="" VSIT("OPT")=$P($G(XQY),"^")
"RTN","VSITDEF",108,0)
 S VSIT("OPT")=$$ERRCHK^VSITCK("OPT",VSIT("OPT"))
"RTN","VSITDEF",109,0)
 D:$L(VSIT("OPT"),"^")>1 WRN^VSITPUT($P(VSIT("OPT"),"^",2,99))
"RTN","VSITDEF",110,0)
 ; - PRO
"RTN","VSITDEF",111,0)
 I VSIT("PRO")="",$P($G(XQORNOD),";",2)="ORD(101," S VSIT("PRO")=$P($G(XQORNOD),";")
"RTN","VSITDEF",112,0)
 S VSIT("PRO")=$$ERRCHK^VSITCK("PRO",VSIT("PRO"))
"RTN","VSITDEF",113,0)
 D:$L(VSIT("PRO"),"^")>1 WRN^VSITPUT($P(VSIT("PRO"),"^",2,99))
"RTN","VSITDEF",114,0)
 ; - OUT
"RTN","VSITDEF",115,0)
 S VSIT("OUT")=$$ERRCHK^VSITCK("OUT",VSIT("OUT"))
"RTN","VSITDEF",116,0)
 D:$L(VSIT("OUT"),"^")>1 WRN^VSITPUT($P(VSIT("OUT"),"^",2,99))
"RTN","VSITDEF",117,0)
 ; - VID
"RTN","VSITDEF",118,0)
 S VSIT("VID")=$$GETVID^VSITVID
"RTN","VSITDEF",119,0)
 ; - PRI
"RTN","VSITDEF",120,0)
 I VSIT("PRI")="P",$O(^VSIT(150.1,"B",+$P($G(^DIC(40.7,+VSIT("DSS"),0)),"^",2),0)) S VSIT("PRI")="O"
"RTN","VSITDEF",121,0)
 S VSIT("PRI")=$$ERRCHK^VSITCK("PRI",VSIT("PRI"))
"RTN","VSITDEF",122,0)
 D:$L(VSIT("PRI"),"^")>1 WRN^VSITPUT($P(VSIT("PRI"),"^",2,99))
"RTN","VSITDEF",123,0)
 ; - SC
"RTN","VSITDEF",124,0)
 S VSIT("SC")=$$ERRCHK^VSITCK("SC",VSIT("SC"))
"RTN","VSITDEF",125,0)
 D:$L(VSIT("SC"),"^")>1 WRN^VSITPUT($P(VSIT("SC"),"^",2,99))
"RTN","VSITDEF",126,0)
 ; - AO
"RTN","VSITDEF",127,0)
 S VSIT("AO")=$$ERRCHK^VSITCK("AO",VSIT("AO"))
"RTN","VSITDEF",128,0)
 D:$L(VSIT("AO"),"^")>1 WRN^VSITPUT($P(VSIT("AO"),"^",2,99))
"RTN","VSITDEF",129,0)
 ; - IR
"RTN","VSITDEF",130,0)
 S VSIT("IR")=$$ERRCHK^VSITCK("IR",VSIT("IR"))
"RTN","VSITDEF",131,0)
 D:$L(VSIT("IR"),"^")>1 WRN^VSITPUT($P(VSIT("IR"),"^",2,99))
"RTN","VSITDEF",132,0)
 ; - EC
"RTN","VSITDEF",133,0)
 S VSIT("EC")=$$ERRCHK^VSITCK("EC",VSIT("EC"))
"RTN","VSITDEF",134,0)
 D:$L(VSIT("EC"),"^")>1 WRN^VSITPUT($P(VSIT("EC"),"^",2,99))
"RTN","VSITDEF",135,0)
 ; - HNC - PX*1*111 - Head & Neck
"RTN","VSITDEF",136,0)
 S VSIT("HNC")=$$ERRCHK^VSITCK("HNC",VSIT("HNC"))
"RTN","VSITDEF",137,0)
 D:$L(VSIT("HNC"),"^")>1 WRN^VSITPUT($P(VSIT("HNC"),"^",2,99))
"RTN","VSITDEF",138,0)
 ; - CV - PX*1*130 - Combat Vet
"RTN","VSITDEF",139,0)
 S VSIT("CV")=$$ERRCHK^VSITCK("CV",VSIT("CV"))
"RTN","VSITDEF",140,0)
 D:$L(VSIT("CV"),"^")>1 WRN^VSITPUT($P(VSIT("CV"),"^",2,99))
"RTN","VSITDEF",141,0)
 ; - SHAD - PX*1*168 - Project 112/SHAD
"RTN","VSITDEF",142,0)
 S VSIT("SHAD")=$$ERRCHK^VSITCK("SHAD",VSIT("SHAD"))
"RTN","VSITDEF",143,0)
 D:$L(VSIT("SHAD"),"^")>1 WRN^VSITPUT($P(VSIT("SHAD"),"^",2,99))
"RTN","VSITDEF",144,0)
 ; - COM
"RTN","VSITDEF",145,0)
 S VSIT("COM")=$$ERRCHK^VSITCK("COM",VSIT("COM"))
"RTN","VSITDEF",146,0)
 D:$L(VSIT("COM"),"^")>1 WRN^VSITPUT($P(VSIT("COM"),"^",2,99))
"RTN","VSITDEF",147,0)
 ; - VER
"RTN","VSITDEF",148,0)
 S VSIT("VER")=$$ERRCHK^VSITCK("VER",VSIT("VER"))
"RTN","VSITDEF",149,0)
 D:$L(VSIT("VER"),"^")>1 WRN^VSITPUT($P(VSIT("VER"),"^",2,99))
"RTN","VSITDEF",150,0)
 ; - PKG
"RTN","VSITDEF",151,0)
 S VSIT("PKG")=$$PKG2IEN^VSIT(VSIT("PKG"))
"RTN","VSITDEF",152,0)
 S VSIT("PKG")=$$ERRCHK^VSITCK("PKG",VSIT("PKG"))
"RTN","VSITDEF",153,0)
 D:$L(VSIT("PKG"),"^")>1 WRN^VSITPUT($P(VSIT("PKG"),"^",2,99))
"RTN","VSITDEF",154,0)
 ; - SOR
"RTN","VSITDEF",155,0)
 ;Lookup source in PCE DATA SOURCE file (#839.7) with LAYGO
"RTN","VSITDEF",156,0)
 I VSIT("SOR")'=+VSIT("SOR") D
"RTN","VSITDEF",157,0)
 . I $T(SOURCE^PXAPI)="" D
"RTN","VSITDEF",158,0)
 .. S VSIT("SOR")=$$SOURCE^PXAPI(VSIT("SOR"))
"RTN","VSITDEF",159,0)
 . E  S VSIT("SOR")=""
"RTN","VSITDEF",160,0)
 S VSIT("SOR")=$$ERRCHK^VSITCK("SOR",VSIT("SOR"))
"RTN","VSITDEF",161,0)
 D:$L(VSIT("SOR"),"^")>1 WRN^VSITPUT($P(VSIT("SOR"),"^",2,99))
"RTN","VSITDEF",162,0)
 ;
"RTN","VSITDEF",163,0)
 ;PFSS Patient Reference
"RTN","VSITDEF",164,0)
 S VSIT("ACT")=$$ERRCHK^VSITCK("ACT",VSIT("ACT"))
"RTN","VSITDEF",165,0)
 I $$SWSTAT^IBBAPI() D:$L(VSIT("ACT"),"^")>1 WRN^VSITPUT($P(VSIT("ACT"),"^",2,99))
"RTN","VSITDEF",166,0)
 Q
"RTN","VSITDEF",167,0)
 ;
"RTN","VSITFLD")
0^22^B11200887
"RTN","VSITFLD",1,0)
VSITFLD ;ISD/MRL,RJP - Visit Tracking file fields array setup ;6/20/96
"RTN","VSITFLD",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**76,81,111,130,124,164,168**;Aug 12, 1996;Build 14
"RTN","VSITFLD",3,0)
 ; Patch PX*1*76 changes the 2nd line of all VSIT* routines to reflect
"RTN","VSITFLD",4,0)
 ; the incorporation of the module into PCE.  For historical reference,
"RTN","VSITFLD",5,0)
 ; the old (VISIT TRACKING) 2nd line is included below to reference VSIT
"RTN","VSITFLD",6,0)
 ; patches.
"RTN","VSITFLD",7,0)
 ;
"RTN","VSITFLD",8,0)
 ;;2.0;VISIT TRACKING;**4**;Aug 12, 1996;
"RTN","VSITFLD",9,0)
 ;
"RTN","VSITFLD",10,0)
 Q
"RTN","VSITFLD",11,0)
 ;
"RTN","VSITFLD",12,0)
FLD ; - Visit file fields; array subscript and field DD number fmt
"RTN","VSITFLD",13,0)
 ;   <visit subscript>;<field#>;<node>;<piece>;<error message>
"RTN","VSITFLD",14,0)
 ;
"RTN","VSITFLD",15,0)
 S ^TMP("VSITDD",$J,"VDT")="VDT;.01;0;1;Invalid Encounter/Admit Date&Time [0;1]"
"RTN","VSITFLD",16,0)
 S ^TMP("VSITDD",$J,"CDT")="CDT;.02;0;2"
"RTN","VSITFLD",17,0)
 S ^TMP("VSITDD",$J,"TYP")="TYP;.03;0;3;Invalid Type [0:3]"
"RTN","VSITFLD",18,0)
 S ^TMP("VSITDD",$J,"PAT")="PAT;.05;0;5;Invalid Patient [0:5]"
"RTN","VSITFLD",19,0)
 S ^TMP("VSITDD",$J,"INS")="INS;.06;0;6;Invalid Loc of Encounter [0:6]"
"RTN","VSITFLD",20,0)
 S ^TMP("VSITDD",$J,"SVC")="SVC;.07;0;7;Invalid Service Category [0:7]"
"RTN","VSITFLD",21,0)
 S ^TMP("VSITDD",$J,"DSS")="DSS;.08;0;8;Invalid DSS ID [0:8]"
"RTN","VSITFLD",22,0)
 S ^TMP("VSITDD",$J,"CTR")="CTR;.09;0;9"
"RTN","VSITFLD",23,0)
 S ^TMP("VSITDD",$J,"DEL")="DEL;.11;0;11"
"RTN","VSITFLD",24,0)
 S ^TMP("VSITDD",$J,"LNK")="LNK;.12;0;12"
"RTN","VSITFLD",25,0)
 S ^TMP("VSITDD",$J,"MDT")="MDT;.13;0;13"
"RTN","VSITFLD",26,0)
 S ^TMP("VSITDD",$J,"COD")="COD;.18;0;18"
"RTN","VSITFLD",27,0)
 S ^TMP("VSITDD",$J,"ELG")="ELG;.21;0;21;Invalid Eligibility [0:21]"
"RTN","VSITFLD",28,0)
 S ^TMP("VSITDD",$J,"LOC")="LOC;.22;0;22;Invalid Hospital Location [0:22] - The specified Hospital Location was not found defined in the Hospital Location file."
"RTN","VSITFLD",29,0)
 S ^TMP("VSITDD",$J,"USR")="USR;.23;0;23;Invalid Created by User [0:23]"
"RTN","VSITFLD",30,0)
 S ^TMP("VSITDD",$J,"OPT")="OPT;.24;0;24"
"RTN","VSITFLD",31,0)
 S ^TMP("VSITDD",$J,"PRO")="PRO;.25;0;25"
"RTN","VSITFLD",32,0)
 S ^TMP("VSITDD",$J,"ACT")="ACT;.26;0;26"
"RTN","VSITFLD",33,0)
 S ^TMP("VSITDD",$J,"OUT")="OUT;2101;21;1"
"RTN","VSITFLD",34,0)
 S ^TMP("VSITDD",$J,"VID")="VID;15001;150;1"
"RTN","VSITFLD",35,0)
 S ^TMP("VSITDD",$J,"IO")="IO;15002;150;2"
"RTN","VSITFLD",36,0)
 S ^TMP("VSITDD",$J,"PRI")="PRI;15003;150;3"
"RTN","VSITFLD",37,0)
 S ^TMP("VSITDD",$J,"SC")="SC;80001;800;1"
"RTN","VSITFLD",38,0)
 S ^TMP("VSITDD",$J,"AO")="AO;80002;800;2"
"RTN","VSITFLD",39,0)
 S ^TMP("VSITDD",$J,"IR")="IR;80003;800;3"
"RTN","VSITFLD",40,0)
 S ^TMP("VSITDD",$J,"EC")="EC;80004;800;4"
"RTN","VSITFLD",41,0)
 S ^TMP("VSITDD",$J,"MST")="MST;80005;800;5" ;added 6/17/98 for MST enhancement
"RTN","VSITFLD",42,0)
 S ^TMP("VSITDD",$J,"HNC")="HNC;80006;800;6" ;PX*1*111 added for HNC enhancement
"RTN","VSITFLD",43,0)
 S ^TMP("VSITDD",$J,"CV")="CV;80007;800;7" ;PX*1*130 Combat Veteran
"RTN","VSITFLD",44,0)
 S ^TMP("VSITDD",$J,"SHAD")="SHAD;80008;800;8" ;PX*1*168 Project 112/SHAD
"RTN","VSITFLD",45,0)
 S ^TMP("VSITDD",$J,"SCEF")="SCED;80011;800;11" ;PX*1*124 SC EDIT FLAG
"RTN","VSITFLD",46,0)
 S ^TMP("VSITDD",$J,"AOEF")="AOED;80012;800;12" ;PX*1*124 AO EDIT FLAG
"RTN","VSITFLD",47,0)
 S ^TMP("VSITDD",$J,"IREF")="IRED;80013;800;13" ;PX*1*124 IR EDIT FLAG
"RTN","VSITFLD",48,0)
 S ^TMP("VSITDD",$J,"ECEF")="ECED;80014;800;14" ;PX*1*124 EC EDIT FLAG
"RTN","VSITFLD",49,0)
 S ^TMP("VSITDD",$J,"MSTEF")="MSTED;80015;800;15" ;PX*1*124 MST EDIT FLAG
"RTN","VSITFLD",50,0)
 S ^TMP("VSITDD",$J,"HNCEF")="HNCED;80016;800;16" ;PX*1*124 HNC EDIT FLAG
"RTN","VSITFLD",51,0)
 S ^TMP("VSITDD",$J,"CVEF")="CVED;80017;800;17" ;PX*1*124 CV EDIT FLAG
"RTN","VSITFLD",52,0)
 S ^TMP("VSITDD",$J,"SHADEF")="SHADED;80018;800;18" ;PX*1*168 SHAD EDIT FLAG
"RTN","VSITFLD",53,0)
 S ^TMP("VSITDD",$J,"COM")="COM;81101;811;1"
"RTN","VSITFLD",54,0)
 S ^TMP("VSITDD",$J,"VER")="VER;81201;812;1"
"RTN","VSITFLD",55,0)
 S ^TMP("VSITDD",$J,"PKG")="PKG;81202;812;2"
"RTN","VSITFLD",56,0)
 S ^TMP("VSITDD",$J,"SOR")="SOR;81203;812;3"
"RTN","VSITFLD",57,0)
 Q
"RTN","VSITFLD",58,0)
 ;
"RTN","VSITHLP")
0^23^B18478356
"RTN","VSITHLP",1,0)
VSITHLP ;ISD/RJP - Visit Information ;6/6/05
"RTN","VSITHLP",2,0)
 ;;1.0;PCE PATIENT CARE ENCOUNTER;**76,111,130,168**;Aug 12, 1996;Build 14
"RTN","VSITHLP",3,0)
 ; Patch PX*1*76 changes the 2nd line of all VSIT* routines to reflect
"RTN","VSITHLP",4,0)
 ; the incorporation of the module into PCE.  For historical reference,
"RTN","VSITHLP",5,0)
 ; the old (VISIT TRACKING) 2nd line is included below to reference VSIT
"RTN","VSITHLP",6,0)
 ; patches.
"RTN","VSITHLP",7,0)
 ;
"RTN","VSITHLP",8,0)
 ;;2.0;VISIT TRACKING;;Aug 12, 1996;
"RTN","VSITHLP",9,0)
 ;
"RTN","VSITHLP",10,0)
 N TXT,DIR,DX,DY,VSITI,X
"RTN","VSITHLP",11,0)
 I '$D(IOSL) S IOP=0 D ^%ZIS K IOP
"RTN","VSITHLP",12,0)
 D HOME^%ZIS W @IOF
"RTN","VSITHLP",13,0)
 F VSITI=1:1 S TXT=$T(TXT+VSITI) Q:TXT=""  D
"RTN","VSITHLP",14,0)
 . W $P(TXT,";;",2)
"RTN","VSITHLP",15,0)
 . I $Y>(IOSL-3) D
"RTN","VSITHLP",16,0)
 . . S DIR(0)="E" D ^DIR
"RTN","VSITHLP",17,0)
 . . N X S $P(X," ",79)="" W $C(13),X,$C(13)
"RTN","VSITHLP",18,0)
 . . S (DX,DY)=0 X ^%ZOSF("XY")
"RTN","VSITHLP",19,0)
 . E  W !
"RTN","VSITHLP",20,0)
 Q
"RTN","VSITHLP",21,0)
 ;
"RTN","VSITHLP",22,0)
TXT ;
"RTN","VSITHLP",23,0)
 ;; VSIT(0)   A string of characters which defines how the visit
"RTN","VSITHLP",24,0)
 ;;           processor will function.
"RTN","VSITHLP",25,0)
 ;;
"RTN","VSITHLP",26,0)
 ;;           F - Force adding a new entry.
"RTN","VSITHLP",27,0)
 ;;           I - Interactive mode.
"RTN","VSITHLP",28,0)
 ;;           E - Use pt's primary eligibility if now passed on
"RTN","VSITHLP",29,0)
 ;;               call w/ VSIT("ELG").
"RTN","VSITHLP",30,0)
 ;;           N - Allow creation of a new visit.
"RTN","VSITHLP",31,0)
 ;;           D - Look back "n" number of days for a match, default
"RTN","VSITHLP",32,0)
 ;;               is one (1).   e.g. VSIT(0)="D5"  (v/dt to v/dt-4)
"RTN","VSITHLP",33,0)
 ;;               Use "D0" to require exact match on date & time.
"RTN","VSITHLP",34,0)
 ;;           M - Impose criteria on matching or creation of visits.
"RTN","VSITHLP",35,0)
 ;;               Uses the VSIT(<xxx>) array:
"RTN","VSITHLP",36,0)
 ;                  [<fld-value>[^...]] for multiple values
"RTN","VSITHLP",37,0)
 ;;               - If trying to match with existing visit, each element
"RTN","VSITHLP",38,0)
 ;;                 must match each corresponding field.
"RTN","VSITHLP",39,0)
 ;;
"RTN","VSITHLP",40,0)
 ;; Variable names for VISIT file fields:  #9000010   gbl:  ^AUPNVSIT(
"RTN","VSITHLP",41,0)
 ;;         (format) ->   <internal format>[^<external format>]
"RTN","VSITHLP",42,0)
 ;;           except VSIT(<ien>) = N^S[^1]
"RTN","VSITHLP",43,0)
 ;;                      where N = internal entry number
"RTN","VSITHLP",44,0)
 ;;                            S = value of .01 filed
"RTN","VSITHLP",45,0)
 ;;                            1 = indicated new entry added
"RTN","VSITHLP",46,0)
 ;;  .001 - VSIT("IEN") ; NUMBER (internal entry number)
"RTN","VSITHLP",47,0)
 ;;   .01 - VSIT("VDT") ; VISIT/ADMIT DATE&TIME (date)
"RTN","VSITHLP",48,0)
 ;;   .02 - VSIT("CDT") ; DATE VISIT CREATED (date)
"RTN","VSITHLP",49,0)
 ;;   .03 - VSIT("TYP") ; TYPE (set)
"RTN","VSITHLP",50,0)
 ;;   .05 - VSIT("PAT") ; PATIENT (pointer to PATIENT file #9000001)
"RTN","VSITHLP",51,0)
 ;;                       (IHS file DINUM'ed to PATIENT file #2)
"RTN","VSITHLP",52,0)
 ;;   .06 - VSIT("INS") ; LOC. OF ENCOUNTER (pointer to LOCATION file
"RTN","VSITHLP",53,0)
 ;;                       #9999999.06)
"RTN","VSITHLP",54,0)
 ;;                       (IHS file DINUM'ed to INSTITUTION file #4)
"RTN","VSITHLP",55,0)
 ;;   .07 - VSIT("SVC") ; SERVICE CATEGORY (set)
"RTN","VSITHLP",56,0)
 ;;   .08 - VSIT("DSS") ; CLINIC (pointer to CLINIC STOP file #40.7)
"RTN","VSITHLP",57,0)
 ;;   .09 - VSIT("CTR") ; DEPENDENT ENTRY COUNTER (number)
"RTN","VSITHLP",58,0)
 ;;   .11 - VSIT("DEL") ; DELETE FLAG (set)
"RTN","VSITHLP",59,0)
 ;;   .12 - VSIT("LNK") ; PARENT VISIT LINK (pointer to VISIT file)
"RTN","VSITHLP",60,0)
 ;;   .13 - VSIT("MDT") ; DATE LAST MODIFIED (date)
"RTN","VSITHLP",61,0)
 ;;   .18 - VSIT("COD") ; CHECK OUT DATE&TIME (date)
"RTN","VSITHLP",62,0)
 ;;   .21 - VSIT("ELG") ; ELIGIBILITY (pointer to ELIGIBILITY CODE
"RTN","VSITHLP",63,0)
 ;;                       file #8)
"RTN","VSITHLP",64,0)
 ;;   .22 - VSIT("LOC") ; HOSPITAL LOCATION (pointer to HOSPITAL
"RTN","VSITHLP",65,0)
 ;;                       LOCATION file #44)
"RTN","VSITHLP",66,0)
 ;;   .23 - VSIT("USR") ; CREATED BY USER (pointer to USER file #200)
"RTN","VSITHLP",67,0)
 ;;   .24 - VSIT("OPT") ; OPTION USED TO CREATE (pointer to OPTION
"RTN","VSITHLP",68,0)
 ;;                       file #19)
"RTN","VSITHLP",69,0)
 ;;   .25 - VSIT("PRO") ; PROTOCOL (pointer to PROTOCOL file #101)
"RTN","VSITHLP",70,0)
 ;;  2101 - VSIT("OUT") ; OUTSIDE LOCATION (free text)
"RTN","VSITHLP",71,0)
 ;; 15001 - VSIT("VID") ; VISIT ID (free text)
"RTN","VSITHLP",72,0)
 ;; 15002 - VSIT("IO")  ; PATIENT STATUS IN/OUT (set)
"RTN","VSITHLP",73,0)
 ;; 15003 - VSIT("PRI") ; ENCOUNTER TYPE (set)
"RTN","VSITHLP",74,0)
 ;; 80001 - VSIT("SC")  ; SERVICE CONNECTED (set)
"RTN","VSITHLP",75,0)
 ;; 80002 - VSIT("AO")  ; AGENT ORANGE EXPOSURE (set)
"RTN","VSITHLP",76,0)
 ;; 80003 - VSIT("IR")  ; IONIZING RADIATION EXPOSURE (set)
"RTN","VSITHLP",77,0)
 ;; 80004 - VSIT("EC")  ; PERSIAN GULF EXPOSURE (set)
"RTN","VSITHLP",78,0)
 ;; 80006 - VSIT("HNC") ; HEAD AND/OR NECK CANCER (set)
"RTN","VSITHLP",79,0)
 ;; 80007 - VSIT("CV")  ; COMBAT VET (set)
"RTN","VSITHLP",80,0)
 ;; 80008 - VSIT("SHAD")  ; PROJ 112/SHAD (set)
"RTN","VSITHLP",81,0)
 ;; 81101 - VSIT("COM") ; COMMENTS (free text)
"RTN","VSITHLP",82,0)
 ;; 81202 - VSIT("PKG") ; PACKAGE (pointer to PACKAGE file #9.4)
"RTN","VSITHLP",83,0)
 ;; 81203 - VSIT("SOR") ; DATA SOURCE (pointer to PCE DATA SOURCE
"RTN","VSITHLP",84,0)
 ;;                       file #839.7)
"VER")
8.0^22.0
"^DD",9000010,9000010,80004,0)
SW ASIA CONDITIONS^S^1:YES;0:NO;^800;4^Q
"^DD",9000010,9000010,80004,3)
If this visit is treating a problem related to SW Asia Conditions Exposure, enter "YES"
"^DD",9000010,9000010,80004,21,0)
^^3^3^3060510^
"^DD",9000010,9000010,80004,21,1,0)
This field is used to indicate that this visit represents treatment of a
"^DD",9000010,9000010,80004,21,2,0)
VA patient for a problem that is related to Southwest Asia Conditions 
"^DD",9000010,9000010,80004,21,3,0)
Exposure.
"^DD",9000010,9000010,80004,23,0)
^.001^1^1^3060510^^
"^DD",9000010,9000010,80004,23,1,0)
This data may be passed to the Visit from the MCCR event data capture.
"^DD",9000010,9000010,80004,"DT")
3060627
"^DD",9000010,9000010,80008,0)
PROJ 112/SHAD^S^1:YES;0:NO;^800;8^Q
"^DD",9000010,9000010,80008,3)
If this visit is treating a problem related to PROJ 112/SHAD, enter 'YES'.
"^DD",9000010,9000010,80008,21,0)
^^4^4^3050602^
"^DD",9000010,9000010,80008,21,1,0)
Project 112/SHAD was the name of the overall program for both shipboard
"^DD",9000010,9000010,80008,21,2,0)
and land-based biological and chemical testing that was conducted by the
"^DD",9000010,9000010,80008,21,3,0)
United States (U.S.) military between 1962 and 1973. Project SHAD
"^DD",9000010,9000010,80008,21,4,0)
(Shipboard Hazard and Defense) was the shipboard portion of these tests.
"^DD",9000010,9000010,80008,"DT")
3050602
"^DD",9000010,9000010,80014,0)
SW ASIA CONDITIONS EDIT FLAG^S^0:EDITABLE;1:NOT EDITABLE;^800;14^Q
"^DD",9000010,9000010,80014,3)
Enter 1 to prevent user editing of the SW Asia Conditions classification.
"^DD",9000010,9000010,80014,21,0)
^.001^2^2^3060510^^
"^DD",9000010,9000010,80014,21,1,0)
This field is used to determine if the Southwest Asia Conditions
"^DD",9000010,9000010,80014,21,2,0)
classification for the Visit can be edited by the user.
"^DD",9000010,9000010,80014,23,0)
^^3^3^3060510^
"^DD",9000010,9000010,80014,23,1,0)
The Southwest Asia Conditions classification is not editable if either any
"^DD",9000010,9000010,80014,23,2,0)
of the diagnosis Southwest Asia Conditions classifications are "Yes", or
"^DD",9000010,9000010,80014,23,3,0)
all of the diagnosis Southwest Asia Conditions classifications are "No".
"^DD",9000010,9000010,80014,"DT")
3060510
"^DD",9000010,9000010,80018,0)
PROJ 112/SHAD EDIT FLAG^S^0:EDITABLE;1:NOT EDITABLE;^800;18^Q
"^DD",9000010,9000010,80018,3)
Enter 1 to prevent user editing of the Proj 112/SHAD classification.
"^DD",9000010,9000010,80018,21,0)
^^2^2^3051017^
"^DD",9000010,9000010,80018,21,1,0)
This field is used to determine if the PROJ 112/SHAD classification can
"^DD",9000010,9000010,80018,21,2,0)
be edited by the user.
"^DD",9000010,9000010,80018,23,0)
^^3^3^3051017^
"^DD",9000010,9000010,80018,23,1,0)
The PROJ 112/SHAD classification is not editable if either any of the
"^DD",9000010,9000010,80018,23,2,0)
diagnosis PROJ 112/SHAD classifications are "Yes", or all of the diagnosis
"^DD",9000010,9000010,80018,23,3,0)
PROJ 112/SHAD classifications are "No".
"^DD",9000010,9000010,80018,"DT")
3051017
"^DD",9000010.07,9000010.07,80004,0)
SW ASIA CONDITIONS^S^1:YES;0:NO;^800;4^Q
"^DD",9000010.07,9000010.07,80004,3)
If this problem treated is related to SW Asia Conditions exposure, enter "YES" here.
"^DD",9000010.07,9000010.07,80004,21,0)
^^2^2^3060510^
"^DD",9000010.07,9000010.07,80004,21,1,0)
This field is used in the VA to indicate that this problem treated at this
"^DD",9000010.07,9000010.07,80004,21,2,0)
visit was related to Southwest Asia Conditions exposure.
"^DD",9000010.07,9000010.07,80004,23,0)
^^6^6^3060510^
"^DD",9000010.07,9000010.07,80004,23,1,0)
This field is only passed to PCE from the automated data capture of
"^DD",9000010.07,9000010.07,80004,23,2,0)
encounter form data.  If a problem on the Active Problem List is
"^DD",9000010.07,9000010.07,80004,23,3,0)
identified as the problem treated at the visit, and the problem defined as
"^DD",9000010.07,9000010.07,80004,23,4,0)
being related to Southwest Asia Conditions Exposure in the Problem List,
"^DD",9000010.07,9000010.07,80004,23,5,0)
then the POV Southwest Asia Conditions Exposure will automatically be set
"^DD",9000010.07,9000010.07,80004,23,6,0)
to "1".
"^DD",9000010.07,9000010.07,80004,"DT")
3060627
"^DD",9000010.07,9000010.07,80008,0)
PROJ 112/SHAD^S^1:YES;0:NO;^800;8^Q
"^DD",9000010.07,9000010.07,80008,3)
If this Diagnosis is treating a problem related to PROJ 112/SHAD.
"^DD",9000010.07,9000010.07,80008,21,0)
^^4^4^3050602^
"^DD",9000010.07,9000010.07,80008,21,1,0)
Project 112/SHAD was the name of the overall program for both shipboard
"^DD",9000010.07,9000010.07,80008,21,2,0)
and land-based biological and chemical testing that was conducted by the
"^DD",9000010.07,9000010.07,80008,21,3,0)
United States (U.S.) military between 1962 and 1973. Project SHAD
"^DD",9000010.07,9000010.07,80008,21,4,0)
(Shipboard Hazard and Defense) was the shipboard portion of these tests.
"^DD",9000010.07,9000010.07,80008,"DT")
3050602
**INSTALL NAME**
DG*5.3*664
"BLD",7097,0)
DG*5.3*664^REGISTRATION^0^3081010^y
"BLD",7097,1,0)
^9.61A^4^4^3050610^^
"BLD",7097,1,1,0)
PROJECT 112/SHAD.
"BLD",7097,1,2,0)
 
"BLD",7097,1,3,0)
PIMS REGISTRATION
"BLD",7097,1,4,0)
        PTF CHANGES
"BLD",7097,4,0)
^9.64PA^46.1^2
"BLD",7097,4,45,0)
45
"BLD",7097,4,45,2,0)
^9.641^45.02^2
"BLD",7097,4,45,2,45,0)
PTF  (File-top level)
"BLD",7097,4,45,2,45,1,0)
^9.6411^79.28^2
"BLD",7097,4,45,2,45,1,79.28,0)
EXPOSED TO SW ASIA CONDITIONS
"BLD",7097,4,45,2,45,1,79.32,0)
TREATMENT FOR SHAD
"BLD",7097,4,45,2,45.02,0)
501  (sub-file)
"BLD",7097,4,45,2,45.02,1,0)
^9.6411^28^2
"BLD",7097,4,45,2,45.02,1,28,0)
EXPOSED TO SW ASIA CONDITIONS
"BLD",7097,4,45,2,45.02,1,32,0)
TREATMENT FOR SHAD
"BLD",7097,4,45,222)
y^n^p^^^^n^^n
"BLD",7097,4,45,224)

"BLD",7097,4,46.1,0)
46.1
"BLD",7097,4,46.1,2,0)
^9.641^46.1^1
"BLD",7097,4,46.1,2,46.1,0)
INPATIENT POV  (File-top level)
"BLD",7097,4,46.1,2,46.1,1,0)
^9.6411^.05^2
"BLD",7097,4,46.1,2,46.1,1,.05,0)
EXPOSURE TO SW ASIA CONDITIONS
"BLD",7097,4,46.1,2,46.1,1,.09,0)
TREATMENT FOR SHAD
"BLD",7097,4,46.1,222)
y^n^p^^^^n^^n
"BLD",7097,4,46.1,224)

"BLD",7097,4,"APDD",45,45)

"BLD",7097,4,"APDD",45,45,79.28)

"BLD",7097,4,"APDD",45,45,79.32)

"BLD",7097,4,"APDD",45,45.02)

"BLD",7097,4,"APDD",45,45.02,28)

"BLD",7097,4,"APDD",45,45.02,32)

"BLD",7097,4,"APDD",46.1,46.1)

"BLD",7097,4,"APDD",46.1,46.1,.05)

"BLD",7097,4,"APDD",46.1,46.1,.09)

"BLD",7097,4,"B",45,45)

"BLD",7097,4,"B",46.1,46.1)

"BLD",7097,6)
11^
"BLD",7097,6.3)
15
"BLD",7097,"ABPKG")
n
"BLD",7097,"INIT")

"BLD",7097,"KRN",0)
^9.67PA^8989.52^19
"BLD",7097,"KRN",.4,0)
.4
"BLD",7097,"KRN",.401,0)
.401
"BLD",7097,"KRN",.402,0)
.402
"BLD",7097,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",7097,"KRN",.402,"NM",1,0)
DG501    FILE #45^45^0
"BLD",7097,"KRN",.402,"NM",2,0)
DG501F    FILE #45^45^0
"BLD",7097,"KRN",.402,"NM",3,0)
DG801    FILE #46.1^46.1^0
"BLD",7097,"KRN",.402,"NM","B","DG501    FILE #45",1)

"BLD",7097,"KRN",.402,"NM","B","DG501F    FILE #45",2)

"BLD",7097,"KRN",.402,"NM","B","DG801    FILE #46.1",3)

"BLD",7097,"KRN",.403,0)
.403
"BLD",7097,"KRN",.5,0)
.5
"BLD",7097,"KRN",.84,0)
.84
"BLD",7097,"KRN",3.6,0)
3.6
"BLD",7097,"KRN",3.8,0)
3.8
"BLD",7097,"KRN",9.2,0)
9.2
"BLD",7097,"KRN",9.8,0)
9.8
"BLD",7097,"KRN",9.8,"NM",0)
^9.68A^20^16
"BLD",7097,"KRN",9.8,"NM",1,0)
DGPTF^^0^B21709372
"BLD",7097,"KRN",9.8,"NM",2,0)
DGPTF1^^0^B34378858
"BLD",7097,"KRN",9.8,"NM",5,0)
DGPTSPQ^^0^B9780118
"BLD",7097,"KRN",9.8,"NM",6,0)
DGPTAEE1^^0^B21575685
"BLD",7097,"KRN",9.8,"NM",7,0)
DGPTAEE2^^0^B14351045
"BLD",7097,"KRN",9.8,"NM",8,0)
DGPTR0^^0^B25588863
"BLD",7097,"KRN",9.8,"NM",9,0)
DGPTR1^^0^B29190038
"BLD",7097,"KRN",9.8,"NM",10,0)
DGPTR4^^0^B20521487
"BLD",7097,"KRN",9.8,"NM",11,0)
DGPTFM^^0^B44873663
"BLD",7097,"KRN",9.8,"NM",12,0)
DGPTFM4^^0^B28277134
"BLD",7097,"KRN",9.8,"NM",13,0)
DGPTFMO^^0^B26961325
"BLD",7097,"KRN",9.8,"NM",16,0)
DGRPU1^^0^B6201118
"BLD",7097,"KRN",9.8,"NM",17,0)
DGPT101P^^0^B4327695
"BLD",7097,"KRN",9.8,"NM",18,0)
DGPTAE01^^0^B8773190
"BLD",7097,"KRN",9.8,"NM",19,0)
DGAPI^^0^B21697618
"BLD",7097,"KRN",9.8,"NM",20,0)
DGAPI1^^0^B24783749
"BLD",7097,"KRN",9.8,"NM","B","DGAPI",19)

"BLD",7097,"KRN",9.8,"NM","B","DGAPI1",20)

"BLD",7097,"KRN",9.8,"NM","B","DGPT101P",17)

"BLD",7097,"KRN",9.8,"NM","B","DGPTAE01",18)

"BLD",7097,"KRN",9.8,"NM","B","DGPTAEE1",6)

"BLD",7097,"KRN",9.8,"NM","B","DGPTAEE2",7)

"BLD",7097,"KRN",9.8,"NM","B","DGPTF",1)

"BLD",7097,"KRN",9.8,"NM","B","DGPTF1",2)

"BLD",7097,"KRN",9.8,"NM","B","DGPTFM",11)

"BLD",7097,"KRN",9.8,"NM","B","DGPTFM4",12)

"BLD",7097,"KRN",9.8,"NM","B","DGPTFMO",13)

"BLD",7097,"KRN",9.8,"NM","B","DGPTR0",8)

"BLD",7097,"KRN",9.8,"NM","B","DGPTR1",9)

"BLD",7097,"KRN",9.8,"NM","B","DGPTR4",10)

"BLD",7097,"KRN",9.8,"NM","B","DGPTSPQ",5)

"BLD",7097,"KRN",9.8,"NM","B","DGRPU1",16)

"BLD",7097,"KRN",19,0)
19
"BLD",7097,"KRN",19,"NM",0)
^9.68A^^
"BLD",7097,"KRN",19.1,0)
19.1
"BLD",7097,"KRN",101,0)
101
"BLD",7097,"KRN",409.61,0)
409.61
"BLD",7097,"KRN",771,0)
771
"BLD",7097,"KRN",870,0)
870
"BLD",7097,"KRN",8989.51,0)
8989.51
"BLD",7097,"KRN",8989.52,0)
8989.52
"BLD",7097,"KRN",8994,0)
8994
"BLD",7097,"KRN","B",.4,.4)

"BLD",7097,"KRN","B",.401,.401)

"BLD",7097,"KRN","B",.402,.402)

"BLD",7097,"KRN","B",.403,.403)

"BLD",7097,"KRN","B",.5,.5)

"BLD",7097,"KRN","B",.84,.84)

"BLD",7097,"KRN","B",3.6,3.6)

"BLD",7097,"KRN","B",3.8,3.8)

"BLD",7097,"KRN","B",9.2,9.2)

"BLD",7097,"KRN","B",9.8,9.8)

"BLD",7097,"KRN","B",19,19)

"BLD",7097,"KRN","B",19.1,19.1)

"BLD",7097,"KRN","B",101,101)

"BLD",7097,"KRN","B",409.61,409.61)

"BLD",7097,"KRN","B",771,771)

"BLD",7097,"KRN","B",870,870)

"BLD",7097,"KRN","B",8989.51,8989.51)

"BLD",7097,"KRN","B",8989.52,8989.52)

"BLD",7097,"KRN","B",8994,8994)

"BLD",7097,"PRE")

"BLD",7097,"QUES",0)
^9.62^^
"BLD",7097,"REQB",0)
^9.611^16^13
"BLD",7097,"REQB",2,0)
DG*5.3*678^2
"BLD",7097,"REQB",3,0)
DG*5.3*565^2
"BLD",7097,"REQB",6,0)
DG*5.3*508^2
"BLD",7097,"REQB",7,0)
DG*5.3*645^2
"BLD",7097,"REQB",8,0)
DG*5.3*466^2
"BLD",7097,"REQB",9,0)
SD*5.3*441^2
"BLD",7097,"REQB",10,0)
DG*5.3*635^2
"BLD",7097,"REQB",11,0)
DG*5.3*683^2
"BLD",7097,"REQB",12,0)
DG*5.3*696^2
"BLD",7097,"REQB",13,0)
DG*5.3*761^2
"BLD",7097,"REQB",14,0)
DG*5.3*729^2
"BLD",7097,"REQB",15,0)
DG*5.3*775^2
"BLD",7097,"REQB",16,0)
DG*5.3*781^2
"BLD",7097,"REQB","B","DG*5.3*466",8)

"BLD",7097,"REQB","B","DG*5.3*508",6)

"BLD",7097,"REQB","B","DG*5.3*565",3)

"BLD",7097,"REQB","B","DG*5.3*635",10)

"BLD",7097,"REQB","B","DG*5.3*645",7)

"BLD",7097,"REQB","B","DG*5.3*678",2)

"BLD",7097,"REQB","B","DG*5.3*683",11)

"BLD",7097,"REQB","B","DG*5.3*696",12)

"BLD",7097,"REQB","B","DG*5.3*729",14)

"BLD",7097,"REQB","B","DG*5.3*761",13)

"BLD",7097,"REQB","B","DG*5.3*775",15)

"BLD",7097,"REQB","B","DG*5.3*781",16)

"BLD",7097,"REQB","B","SD*5.3*441",9)

"FIA",45)
PTF
"FIA",45,0)
^DGPT(
"FIA",45,0,0)
45IP
"FIA",45,0,1)
y^n^p^^^^n^^n
"FIA",45,0,10)

"FIA",45,0,11)

"FIA",45,0,"RLRO")

"FIA",45,0,"VR")
5.3^DG
"FIA",45,45)
1
"FIA",45,45,79.28)

"FIA",45,45,79.32)

"FIA",45,45.02)
1
"FIA",45,45.02,28)

"FIA",45,45.02,32)

"FIA",46.1)
INPATIENT POV
"FIA",46.1,0)
^DGICD9(46.1,
"FIA",46.1,0,0)
46.1P
"FIA",46.1,0,1)
y^n^p^^^^n^^n
"FIA",46.1,0,10)

"FIA",46.1,0,11)

"FIA",46.1,0,"RLRO")

"FIA",46.1,0,"VR")
5.3^DG
"FIA",46.1,46.1)
1
"FIA",46.1,46.1,.05)

"FIA",46.1,46.1,.09)

"KRN",.402,429,-1)
0^2
"KRN",.402,429,0)
DG501F^3070723.1412^^45^^^3070723
"KRN",.402,429,"AR",45.02,432)
1^DGX5F7
"KRN",.402,429,"AR",45.02,433)
2^DGX5F7
"KRN",.402,429,"AR",45.02,434)
3^DGX5F7
"KRN",.402,429,"AR",45.02,435)
4^DGX5F7
"KRN",.402,429,"AR",45.02,436)
5^DGX5F7
"KRN",.402,429,"AR",45.02,437)
6^DGX5F7
"KRN",.402,429,"AR",45.02,438)
7^DGX5F7
"KRN",.402,429,"AR",45.02,439)
8^DGX5F7
"KRN",.402,429,"AR",45.02,440)
9^DGX5F7
"KRN",.402,429,"AR",45.02,441)
10^DGX5F7
"KRN",.402,429,"DIAB",1,1,45.02,1)
TREATED FOR SC CONDITION//NO;"WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?"
"KRN",.402,429,"DIAB",1,1,45.02,9)
29;"WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?"
"KRN",.402,429,"DIAB",2,1,45.02,8)
EXPOSED TO SW ASIA CONDITIONS;"WAS TREATMENT RELATED TO SERVICE IN SW ASIA?"
"KRN",.402,429,"DIAB",4,1,45.02,7)
TREATED FOR AO CONDITION;"WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?"
"KRN",.402,429,"DIAB",7,1,45.02,9)
30;"WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?"
"KRN",.402,429,"DIAB",8,1,45.02,8)
32;"WAS TREATMENT RELATED TO PROJ 112/SHAD?"
"KRN",.402,429,"DIAB",9,1,45.02,6)
POTENTIALLY RELATED TO COMBAT//YES;"WAS TREATMENT RELATED TO COMBAT?"
"KRN",.402,429,"DIAB",10,1,45.02,7)
TREATED FOR IR CONDITION;"WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?"
"KRN",.402,429,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT;S DGNFLD="@10";50///^S X=+DGMOV;
"KRN",.402,429,"DR",2,45.02)
S:DGJUMP'[1 Y="@2";10;@10;S DGNFLD="@15";2;@15;S DGNFLD="@16";3;@16;S DGNFLD="@17";4;@17;S:DGJUMP'[2 Y=0;@2;I $D(^DPT(+^DGPT(DGPTF,0),.3)),$P(^(.3),U)="Y" S (DGNFLD,Y)="@25";18////^S X=2;S (DGNFLD,Y)="@27";@25;
"KRN",.402,429,"DR",2,45.02,1)
18WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?~//NO;@27;S DGNFLD="@28";S Y="@900";@28;S DGNFLD="@30";5;I X K DGPTIT S DGNFLD="@30",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@30;S DGNFLD="@40";6;
"KRN",.402,429,"DR",2,45.02,2)
I X K DGPTIT S DGNFLD="@40",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@40;S DGNFLD="@50";7;I X K DGPTIT S DGNFLD="@50",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@50;S DGNFLD="@60";8;
"KRN",.402,429,"DR",2,45.02,3)
I X K DGPTIT S DGNFLD="@60",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@60;S DGNFLD="@70";9;I X K DGPTIT S DGNFLD="@70",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@70;K DGNFLD,DGDUP S Y="";@800;D SCAN^DGPTSCAN S:'$D(DGBPC) Y="@899";
"KRN",.402,429,"DR",2,45.02,4)
I '$D(DGBPC(2))!(DGDUP(2)) S Y="@820";300.02;S:X]"" DGDUP(2)=1;@820;I '$D(DGBPC(3))!(DGDUP(3)) S Y="@830";300.03;S:X]"" DGDUP(3)=1;@830;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@840";D DRUG^DGPTSC01 I $D(DGTX) S Y="@835";300.04;
"KRN",.402,429,"DR",2,45.02,5)
S:X]"" DGDUP(4)=1;S Y="@840";@835;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;@840;I '$D(DGBPC(5))!(DGDUP(5)) S Y="@850";300.05;S:X]"" DGDUP(5)=1;@850;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@860";300.06;S:X]"" DGDUP(6)=1;@860;
"KRN",.402,429,"DR",2,45.02,6)
I '$D(DGBPC(7))!(DGDUP(7)) S Y="@899";300.07;S:X]"" DGDUP(7)=1;@899;K DGPTIT S Y=DGNFLD;@900;K DGEXQ D CHQUES^DGPTSPQ I '$D(DGEXQ) S Y="@999";I '$D(DGEXQ(6)) S Y="@904";31WAS TREATMENT RELATED TO COMBAT?~//YES;S Y="@905";@904;
"KRN",.402,429,"DR",2,45.02,7)
31///@;@905;I '$D(DGEXQ(1)) S Y="@910";26WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?~;S Y="@915";@910;26///@;@915;I '$D(DGEXQ(2)) S Y="@920";27WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?~;S Y="@925";@920;27///@;@925;
"KRN",.402,429,"DR",2,45.02,8)
I '$D(DGEXQ(3)) S Y="@930";28WAS TREATMENT RELATED TO SERVICE IN SW ASIA?~;S Y="@935";@930;28///@;@935;I '$D(DGEXQ(7)) S Y="@940";32WAS TREATMENT RELATED TO PROJ 112/SHAD?~;S Y="@945";@940;32///@;@945;I '$D(DGEXQ(4)) S Y="@950";
"KRN",.402,429,"DR",2,45.02,9)
29WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?~;S Y="@955";@950;29///@;@955;I '$D(DGEXQ(5)) S Y="@960";30WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?~;I X["Y",$D(DFN),$$FILEHNC^DGNTAPI1(DFN);S Y="@965";@960;30///@;@965;
"KRN",.402,429,"DR",2,45.02,10)
@999;K DGEXQ S Y=DGNFLD;
"KRN",.402,429,"ROU")
^DGX5F
"KRN",.402,429,"ROUOLD")
DGX5F
"KRN",.402,430,-1)
0^1
"KRN",.402,430,0)
DG501^3070723.1408^^45^^^3070806
"KRN",.402,430,"AR",45.02,432)
1^DGPTX55
"KRN",.402,430,"AR",45.02,433)
2^DGPTX55
"KRN",.402,430,"AR",45.02,434)
3^DGPTX55
"KRN",.402,430,"AR",45.02,435)
4^DGPTX55
"KRN",.402,430,"AR",45.02,436)
5^DGPTX55
"KRN",.402,430,"DIAB",1,1,45.02,1)
TREATED FOR SC CONDITION//NO;"WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?"
"KRN",.402,430,"DIAB",2,1,45.02,10)
30;"WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?"
"KRN",.402,430,"DIAB",4,1,45.02,7)
POTENTIALLY RELATED TO COMBAT//YES;"WAS TREATMENT RELATED TO COMBAT?"
"KRN",.402,430,"DIAB",4,1,45.02,9)
32;"WAS TREATMENT RELATED TO PROJ 112/SHAD?"
"KRN",.402,430,"DIAB",6,1,45.02,8)
TREATED FOR IR CONDITION;"WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?"
"KRN",.402,430,"DIAB",10,1,45.02,7)
TREATED FOR AO CONDITION;"WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?"
"KRN",.402,430,"DIAB",10,1,45.02,9)
29;"WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?"
"KRN",.402,430,"DIAB",12,1,45.02,8)
EXPOSED TO SW ASIA CONDITIONS;"WAS TREATMENT RELATED TO SERVICE IN SW ASIA?"
"KRN",.402,430,"DR",1,45)
F X=2:1:7 S DGDUP(X)=0;K DGPTIT;S DGHOLD=$S($D(^DGPT(DGPTF,"M",+DGMOV,0)):^(0),1:"");50///^S X=+DGMOV;
"KRN",.402,430,"DR",2,45.02)
S:'$D(DGADD) DGADD=0;S:DGJUMP'[1 Y="@2";S:DGADD Y="@20";S DGNFLD="@10";3;@10;S DGNFLD="@15";4;I $D(^DPT(+^DGPT(DGPTF,0),.3)),$P(^(.3),U)="Y" S Y="@15";18////^S X=2;S (DGNFLD,Y)="@20";@15;
"KRN",.402,430,"DR",2,45.02,1)
18WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?~//NO;@20;S:DGJUMP'[2 Y="";@2;S DGNFLD="@25";S Y="@900";@25;I DGADD,$P(DGHOLD,U,5)]"" S Y="@40";S DGNFLD="@40";5;I X K DGPTIT S DGNFLD="@40",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";
"KRN",.402,430,"DR",2,45.02,2)
@40;I DGADD,$P(DGHOLD,U,6)]"" S Y="@50";S DGNFLD="@50";6;I X K DGPTIT S DGNFLD="@50",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@50;I DGADD,$P(DGHOLD,U,7)]"" S Y="@60";S DGNFLD="@60";7;
"KRN",.402,430,"DR",2,45.02,3)
I X K DGPTIT S DGNFLD="@60",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@60;I DGADD,$P(DGHOLD,U,8)]"" S Y="@70";S DGNFLD="@70";8;I X K DGPTIT S DGNFLD="@70",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@70;I DGADD,$P(DGHOLD,U,9)]"" S Y="@80";
"KRN",.402,430,"DR",2,45.02,4)
S DGNFLD="@80";9;I X K DGPTIT S DGNFLD="@80",Y="@800",DGPTIT(X_$C(59)_"ICD9(")="";@80;K DGNFLD,DGDUP,DGADD S Y="";@800;D SCAN^DGPTSCAN S:'$D(DGBPC) Y="@899";I '$D(DGBPC(2))!(DGDUP(2)) S Y="@810";300.02;S:X]"" DGDUP(2)=1;@810;
"KRN",.402,430,"DR",2,45.02,5)
I '$D(DGBPC(3))!(DGDUP(3)) S Y="@820";300.03;S:X]"" DGDUP(3)=1;@820;I '$D(DGBPC(4))!(DGDUP(4)) S Y="@830";D DRUG^DGPTSC01 I $D(DGTX) S Y="@825";300.04;S:X]"" DGDUP(4)=1;S Y="@830";@825;300.04//^S X=DGTX;S:X]"" DGDUP(4)=1;@830;
"KRN",.402,430,"DR",2,45.02,6)
I '$D(DGBPC(5))!(DGDUP(5)) S Y="@840";300.05;S:X]"" DGDUP(5)=1;@840;I '$D(DGBPC(6))!(DGDUP(6)) S Y="@850";300.06;S:X]"" DGDUP(6)=1;@850;I '$D(DGBPC(7))!(DGDUP(7)) S Y="@899";300.07;S:X]"" DGDUP(7)=1;@899;K DGPTIT,DGTX S Y=DGNFLD;
"KRN",.402,430,"DR",2,45.02,7)
@900;K DGEXQ D CHQUES^DGPTSPQ I '$D(DGEXQ) S Y="@999";I '$D(DGEXQ(6)) S Y="@904";31WAS TREATMENT RELATED TO COMBAT?~//YES;S Y="@905";@904;31///@;@905;I '$D(DGEXQ(1)) S Y="@910";26WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?~;
"KRN",.402,430,"DR",2,45.02,8)
S Y="@915";@910;26///@;@915;I '$D(DGEXQ(2)) S Y="@920";27WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?~;S Y="@925";@920;27///@;@925;I '$D(DGEXQ(3)) S Y="@930";28WAS TREATMENT RELATED TO SERVICE IN SW ASIA?~;S Y="@935";@930;
"KRN",.402,430,"DR",2,45.02,9)
28///@;@935;I '$D(DGEXQ(7)) S Y="@940";32WAS TREATMENT RELATED TO PROJ 112/SHAD?~;S Y="@945";@940;32///@;@945;I '$D(DGEXQ(4)) S Y="@950";29WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?~;S Y="@955";@950;29///@;@955;
"KRN",.402,430,"DR",2,45.02,10)
I '$D(DGEXQ(5)) S Y="@960";30WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?~;I X["Y",$D(DFN),$$FILEHNC^DGNTAPI1(DFN);S Y="@965";@960;30///@;@965;@999;K DGEXQ S Y=DGNFLD;
"KRN",.402,430,"ROU")
^DGPTX5
"KRN",.402,430,"ROUOLD")
DGPTX5
"KRN",.402,1678,-1)
0^3
"KRN",.402,1678,0)
DG801^3070723.1509^@^46.1^^@^3070820
"KRN",.402,1678,"DIAB",1,0,46.1,2)
TREATED FOR AO CONDITION;"WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?"
"KRN",.402,1678,"DIAB",1,0,46.1,5)
.06;"WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?"
"KRN",.402,1678,"DIAB",2,0,46.1,1)
COMBAT VET//YES;"WAS TREATMENT RELATED TO COMBAT?"
"KRN",.402,1678,"DIAB",2,0,46.1,4)
.09;"WAS TREATMENT RELATED TO PROJ 112/SHAD?"
"KRN",.402,1678,"DIAB",3,0,46.1,0)
TREATED FOR SC CONDITION;"WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?"
"KRN",.402,1678,"DIAB",4,0,46.1,3)
EXPOSURE TO SW ASIA CONDITIONS;"WAS TREATMENT RELATED TO SW ASIA CONDITIONS?"
"KRN",.402,1678,"DIAB",7,0,46.1,2)
TREATMENT FOR IR CONDITION;"WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?"
"KRN",.402,1678,"DIAB",7,0,46.1,5)
.07;"WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?"
"KRN",.402,1678,"DR",1,46.1)
I '$D(SDCLY(3)) S Y=$S($P($G(^DGICD9(46.1,D0,0)),U,2)="":"@11",1:"@10");D ELIG^DGPTUTL1;.02WAS TREATMENT FOR A SERVICE CONNECTED CONDITION?~;S Y="@11";@10;.02////0;@11;
"KRN",.402,1678,"DR",1,46.1,1)
I '$D(SDCLY(7)) S Y=$S($P($G(^DGICD9(46.1,D0,0)),U,8)="":"@21",1:"@20");.08WAS TREATMENT RELATED TO COMBAT?~//YES;S Y="@21";@20;.08////0;@21;I '$D(SDCLY(1)) S Y=$S($P($G(^DGICD9(46.1,D0,0)),U,3)="":"@31",1:"@30");
"KRN",.402,1678,"DR",1,46.1,2)
.03WAS TREATMENT RELATED TO AGENT ORANGE EXPOSURE?~;S Y="@31";@30;.03////0;@31;I '$D(SDCLY(2)) S Y=$S($P($G(^DGICD9(46.1,D0,0)),U,4)="":"@41",1:"@40");.04WAS TREATMENT RELATED TO IONIZING RADIATION EXPOSURE?~;S Y="@41";@40;
"KRN",.402,1678,"DR",1,46.1,3)
.04////0;@41;I '$D(SDCLY(4)) S Y=$S($P($G(^DGICD9(46.1,D0,0)),U,5)="":"@51",1:"@50");.05WAS TREATMENT RELATED TO SW ASIA CONDITIONS?~;S Y="@51";@50;.05////0;@51;
"KRN",.402,1678,"DR",1,46.1,4)
I '$D(SDCLY(8)) S Y=$S($P($G(^DGICD9(46.1,D0,0)),U,9)="":"@61",1:"@60");.09WAS TREATMENT RELATED TO PROJ 112/SHAD?~;S Y="@61";@60;.09////0;@61;I '$D(SDCLY(5)) S Y=$S($P($G(^DGICD9(46.1,D0,0)),U,6)="":"@71",1:"@70");
"KRN",.402,1678,"DR",1,46.1,5)
.06WAS TREATMENT RELATED TO MILITARY SEXUAL TRAUMA?~;S Y="@71";@70;.06////0;@71;I '$D(SDCLY(6)) S Y=$S($P($G(^DGICD9(46.1,D0,0)),U,7)="":"@81",1:"@80");.07WAS TREATMENT RELATED TO HEAD AND/OR NECK CANCER?~;S Y="@81";@80;.07////0;
"KRN",.402,1678,"DR",1,46.1,6)
@81;@99;1////^S X=PTF;
"KRN",.402,1678,"ROU")
^DGPTX8
"KRN",.402,1678,"ROUOLD")
DGPTX8
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
664^3081010^100905
"PKG",47,22,1,"PAH",1,1,0)
^^4^4^3081010
"PKG",47,22,1,"PAH",1,1,1,0)
PROJECT 112/SHAD.
"PKG",47,22,1,"PAH",1,1,2,0)
 
"PKG",47,22,1,"PAH",1,1,3,0)
PIMS REGISTRATION
"PKG",47,22,1,"PAH",1,1,4,0)
        PTF CHANGES
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
16
"RTN","DGAPI")
0^19^B21697618
"RTN","DGAPI",1,0)
DGAPI ;WASH/DWS - PTF's APIs ;7/29/04 7:33am
"RTN","DGAPI",2,0)
 ;;5.3;Registration;**517,594,664**;Aug 13, 1993;Build 15
"RTN","DGAPI",3,0)
 Q
"RTN","DGAPI",4,0)
 ;
"RTN","DGAPI",5,0)
DATA2PTF(DFN,PTF,PSDATE,USER,FLAG,SOURCE) ;API to pass data for add/edit/delete to PTF
"RTN","DGAPI",6,0)
 I $G(PTF) Q:'$D(^DGPT(PTF)) -2
"RTN","DGAPI",7,0)
 I '$G(PTF) Q:'$G(PSDATE) -2  D FIND Q:'$G(PTF) -2
"RTN","DGAPI",8,0)
 I $P($G(^DGPT(PTF,0)),U,6) S ERR="INPATIENT STAY CLOSED, THE PTF SYSTEM CAN BE USED TO RE-OPEN IT." D  Q -1
"RTN","DGAPI",9,0)
 .I +$G(FLAG) W !,ERR Q
"RTN","DGAPI",10,0)
 .S ^TMP("PTF",$J,"DIERR")=ERR
"RTN","DGAPI",11,0)
 Q:'$D(^TMP("PTF",$J)) -3 S FL=0 D PROV I $G(Y)'>0!FL K FL,Y Q -1
"RTN","DGAPI",12,0)
 K ERR,FL Q PTF
"RTN","DGAPI",13,0)
CPTINFO(DFN,PTF,PSDATE) ;API to get CPT data from PTF
"RTN","DGAPI",14,0)
 I '$G(PTF) Q:'$G(PSDATE)  D FIND Q:'$G(PTF)
"RTN","DGAPI",15,0)
 S I=0 F  S I=$O(^DGPT(PTF,"C",I)) Q:I'>0  I +^(I,0)=PSDATE S ^TMP("PTF",$J,46,0)=$P(^(0),U,2,5),(K,K1)=0 D  Q
"RTN","DGAPI",16,0)
 .F  S K=$O(^DGCPT(46,"C",PTF,K)) Q:K'>0  I PSDATE=+$G(^DGCPT(46,K,1)),'$G(^(9)) S K1=K1+1,^TMP("PTF",$J,46,K1)=K_U_^(0)
"RTN","DGAPI",17,0)
 K I,K,K1 Q
"RTN","DGAPI",18,0)
PTFINFOR(DFN,PTF,PSDATE) ;API to get a list of CPT records from PTF
"RTN","DGAPI",19,0)
 I '$G(PTF) Q:'$G(PSDATE)  D FIND Q:'$G(PTF)
"RTN","DGAPI",20,0)
 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"C",I)) Q:I'>0  S ^TMP("PTF",$J,I1)=^(I,0)
"RTN","DGAPI",21,0)
 K I,I1 Q
"RTN","DGAPI",22,0)
DELCPT(DA) ;API to delete cpt code from PTF
"RTN","DGAPI",23,0)
 S PTF=$P($G(^DGCPT(46,DA,1)),U,3) I $P(^DGPT(PTF,0),U,6) K PTF Q -1
"RTN","DGAPI",24,0)
 S REC=DA,DIE="^DGCPT(46,",DR="1////^S X=%" L +^DGCPT(46,REC):2 I  D NOW^%DTC,^DIE K DIE,DR L -^DGCPT(46,REC) K REC Q 1
"RTN","DGAPI",25,0)
 K REC Q -1
"RTN","DGAPI",26,0)
DELPOV(DA) ;API to delete a diagnosis from PTF
"RTN","DGAPI",27,0)
 S PTF=+$G(^DGICD9(46.1,DA,1)) I $P(^DGPT(PTF,0),U,6) Q -1
"RTN","DGAPI",28,0)
 S REC=DA,DIE="^DGICD9(46.1,",DR="9////^S X=%" L +^DGCPT(46.1,REC):2 I  D NOW^%DTC,^DIE K DIE,DR L -^DGCPT(46.1,REC) K REC Q 1
"RTN","DGAPI",29,0)
 K REC Q -1
"RTN","DGAPI",30,0)
ICDINFO(DFN,PTF,PSDATE,DGI) ;API to get Diagnosis data from PTF
"RTN","DGAPI",31,0)
 I '$G(PTF),'$G(DGI) Q:'$G(PSDATE)  D FIND Q:'$G(PTF)
"RTN","DGAPI",32,0)
 I $G(PTF) S I=0 F I1=1:1 S I=$O(^DGICD9(46.1,"C",PTF,I)) Q:I'>0  I '$G(^DGICD9(46.1,I,9)) S ^TMP("PTF",$J,46.1,I1)=I_U_^DGICD9(46.1,I,0)
"RTN","DGAPI",33,0)
 I '$G(PTF),$G(DGI) S ^TMP("PTF",$J,46.1,1)=DGI_U_$G(^DGICD9(46.1,DGI,0))
"RTN","DGAPI",34,0)
 K I,I1 Q
"RTN","DGAPI",35,0)
FIND ;Find the IEN for the PTF file
"RTN","DGAPI",36,0)
 S (I,K)=0 F  S I=$O(^DGPT("B",DFN,I)) Q:'I  I $P(^DGPT(I,0),U,11)=1 S J=$G(^DGPT(I,70)) I J'<PSDATE!'J S L=$P(^(0),"^",2) I L'>PSDATE D
"RTN","DGAPI",37,0)
 .Q:L<K  S PTF=I,K=L
"RTN","DGAPI",38,0)
 K I,J,K,L Q
"RTN","DGAPI",39,0)
PROV ;FILE PROVIDERS AND CPT CODES
"RTN","DGAPI",40,0)
 N DGI,LOC
"RTN","DGAPI",41,0)
 I $D(^TMP("PTF",$J,46,0)) S:'$D(^DGPT(PTF,"C",0)) ^(0)="^45.06D^^" D
"RTN","DGAPI",42,0)
 .S DIC="^DGPT("_PTF_",""C"",",DIC(0)="LMZ",DA(1)=PTF,DLAYGO=45,X=PSDATE D ^DIC K DIC,DLAYGO,X I Y'>0 Q
"RTN","DGAPI",43,0)
 .S DA(1)=PTF,DIE="^DGPT("_PTF_",""C"",",(DA,REC)=+Y,DR="",I=^TMP("PTF",$J,46,0)
"RTN","DGAPI",44,0)
 .S REFPROV=+I,PERFPROV=$P(I,U,2) S:REFPROV DR=DR_".02////^S X=REFPROV;" S DR=DR_".03////^S X=PERFPROV;"
"RTN","DGAPI",45,0)
 .S DIAG=$P(I,U,3),LOC=$P(I,U,4) K I S DR=DR_".04////^S X=DIAG;" S:LOC DR=DR_".05////^S X=LOC;"
"RTN","DGAPI",46,0)
 .L +^DGPT(REC):2 I '$T D ERR(46,"CPT entry is being edited by another user") K DIE,DR,REC Q
"RTN","DGAPI",47,0)
 .D ^DIE L -^DGPT(REC) K DIE,DR,REFPROV,PERFPROV,REC S DGI=0 F  S DGI=$O(^TMP("PTF",$J,46,DGI)) Q:'DGI  D CPT
"RTN","DGAPI",48,0)
 S DGI=0 F  S DGI=$O(^TMP("PTF",$J,46.1,DGI)) Q:'DGI  D DIAG
"RTN","DGAPI",49,0)
 S Y=1 Q
"RTN","DGAPI",50,0)
CPT ;FILE CPT INFORMATION IN ^DGCPT
"RTN","DGAPI",51,0)
 S DGJ=0,STR=^TMP("PTF",$J,46,DGI),DLAYGO=46
"RTN","DGAPI",52,0)
 I STR S Y=+STR G CPTFL  ;if rec num in DGCPT is passed, overlay without any verification of CPT code passed
"RTN","DGAPI",53,0)
 F  S DGJ=$O(^DGCPT(46,"C",PTF,DGJ)) Q:DGJ'>0  I +^DGCPT(46,DGJ,1)=PSDATE,$P(^(0),U)=$P(STR,U,2),'$D(^(9)) S STR=DGJ_STR,Y=DGJ,^TMP("PTF",$J,46,DGI)=STR Q
"RTN","DGAPI",54,0)
 I 'STR K DO S DIC="^DGCPT(46,",DIC(0)="F",X=$P(STR,U,2) D FILE^DICN K DIC,X Q:Y'>0  S STR=+Y_STR,^TMP("PTF",$J,46,DGI)=STR
"RTN","DGAPI",55,0)
CPTFL S Y=+Y_"," F I=1:1:13 S CPT(46,Y,I/100)=$P(STR,U,I+1)
"RTN","DGAPI",56,0)
 F I=20:1:24 S CPT(46,Y,I/100)=$P(STR,U,I-5)
"RTN","DGAPI",57,0)
 S CPT(46,Y,.14)=PSDATE,CPT(46,Y,.16)=PTF
"RTN","DGAPI",58,0)
 S CPT(46,Y,.17)=$G(SOURCE),CPT(46,Y,.18)=$G(USER)
"RTN","DGAPI",59,0)
 D FILE^DIE("K","CPT","^TMP(""PTF"",$J,46,DGI)")
"RTN","DGAPI",60,0)
 I $D(^TMP("PTF",$J,46,DGI,"DIERR")) S FL=1 I +$G(FLAG),$D(^("DIERR",1,"TEXT",1)) W !,^(1)
"RTN","DGAPI",61,0)
 K STR,CPT,DGJ,I Q
"RTN","DGAPI",62,0)
DIAG ;FILE DIAGNOSIS INFORMATION IN ^DGCPT
"RTN","DGAPI",63,0)
 S DGJ=0,STR=^TMP("PTF",$J,46.1,DGI),DLAYGO=46.1
"RTN","DGAPI",64,0)
 I STR S Y=+STR G DIAGFL  ;if rec num in DGICD9 is passed, overlay without any verification of DGN code passed
"RTN","DGAPI",65,0)
 F  S DGJ=$O(^DGICD9(46.1,"C",PTF,DGJ)) Q:DGJ'>0  I $P(^DGICD9(46.1,DGJ,0),U)=$P(STR,U,2),'$G(^(9)) S STR=DGJ_STR,Y=DGJ,^TMP("PTF",$J,46.1,DGI)=STR Q
"RTN","DGAPI",66,0)
 I 'STR K DO S DIC="^DGICD9(46.1,",DIC(0)="F",X=$P(STR,U,2) D FILE^DICN K DIC,X Q:Y'>0  S STR=+Y_STR,^TMP("PTF",$J,46.1,DGI)=STR
"RTN","DGAPI",67,0)
DIAGFL S Y=+Y_"," F I=1:1:9 S DIAG(46.1,Y,I/100)=$P(STR,U,I+1)
"RTN","DGAPI",68,0)
 S DIAG(46.1,Y,1.1)=$G(SOURCE),DIAG(46.1,Y,1.2)=$G(USER)
"RTN","DGAPI",69,0)
 S DIAG(46.1,Y,1)=PTF D FILE^DIE("K","DIAG","^TMP(""PTF"",$J,46.1,DGI)")
"RTN","DGAPI",70,0)
 I $D(^TMP("PTF",$J,46.1,DGI,"DIERR")) S FL=1 I +$G(FLAG),$D(^("DIERR",1,"TEXT",1)) W !,^(1)
"RTN","DGAPI",71,0)
 K STR,CPT,DGJ,DIAG,I Q
"RTN","DGAPI",72,0)
ERR(FILE,MESS) ;DISPLAY OR PRINT ERROR MESSAGES BASED ON FLAG PARAMETER FOR DATA2PTF
"RTN","DGAPI",73,0)
 S FL=1 I +$G(FLAG) W !,MESS Q
"RTN","DGAPI",74,0)
 S ^TMP("PTF",$J,FILE,DGI,"DIERR")=MESS Q
"RTN","DGAPI1")
0^20^B24783749
"RTN","DGAPI1",1,0)
DGAPI1 ;ALB/DWS - DG API TO COMUNICATE WITH PCE ;6/16/05 1:44pm
"RTN","DGAPI1",2,0)
 ;;5.3;Registration;**635,664**;Aug 13, 1993;Build 15
"RTN","DGAPI1",3,0)
DATA2PCE(DFN,PTF,DGZP) ;SEND CPT PROCEDURE TRANSACTIONS TO PCE
"RTN","DGAPI1",4,0)
 ;
"RTN","DGAPI1",5,0)
 N DGVISIT,DR,DIE,DA,X,Y
"RTN","DGAPI1",6,0)
 ;
"RTN","DGAPI1",7,0)
 D BUILD
"RTN","DGAPI1",8,0)
 ;
"RTN","DGAPI1",9,0)
 I $P($G(DGZPRF(DGZP)),U,6) S DGVISIT=$P(DGZPRF(DGZP),U,6)
"RTN","DGAPI1",10,0)
 ;
"RTN","DGAPI1",11,0)
 I $D(DGREL) S DGRELSV=DGREL ;save DGREL, it gets killed off in SCDXMSG1
"RTN","DGAPI1",12,0)
 S RES=$$DATA2PCE^PXAPI("^TMP(""DGPCE1"",$J,""PXAPI"")",107,"801 SCREEN",.DGVISIT)
"RTN","DGAPI1",13,0)
 I $D(DGRELSV) S DGREL=DGRELSV K DGRELSV ;restore DGREL
"RTN","DGAPI1",14,0)
 ;
"RTN","DGAPI1",15,0)
 D:$D(^TMP("DGPCE1",$J,"PXAPI","DIERR")) ERR
"RTN","DGAPI1",16,0)
 ;
"RTN","DGAPI1",17,0)
 K ^TMP("DGPCE1",$J,"PXAPI")
"RTN","DGAPI1",18,0)
 ;
"RTN","DGAPI1",19,0)
 ;
"RTN","DGAPI1",20,0)
 Q:RES<-1 RES
"RTN","DGAPI1",21,0)
 ;
"RTN","DGAPI1",22,0)
 S DR=".06////"_DGVISIT_";.07////1",DIE="^DGPT("_PTF_",""C"",",DA=DGZPRF(DGZP,0),DA(1)=PTF D ^DIE
"RTN","DGAPI1",23,0)
 ;
"RTN","DGAPI1",24,0)
 Q RES
"RTN","DGAPI1",25,0)
 ;
"RTN","DGAPI1",26,0)
ERR ; looks to see if there is an trully an error
"RTN","DGAPI1",27,0)
 N DGX,DGQ
"RTN","DGAPI1",28,0)
 S (DGQ,DGX)=0 F  S DGX=$O(^TMP("DGPCE1",$J,"PXAPI","DIERR",$J,DGX)) Q:'DGX!(DGQ)  I $E($G(^TMP("DGPCE1",$J,"PXAPI","DIERR",$J,DGX,"TEXT",1)),1,5)="ERROR" S DGQ=1 D ERRMSG(DGX)
"RTN","DGAPI1",29,0)
 Q
"RTN","DGAPI1",30,0)
 ;
"RTN","DGAPI1",31,0)
ERRMSG(DGX) ; sends the error message
"RTN","DGAPI1",32,0)
 N XMDUZ,XMSUB,XMTEXT,XMY,XMZ,XMMG,DGL,DGTXT,DGY
"RTN","DGAPI1",33,0)
 ;
"RTN","DGAPI1",34,0)
 D DEM^VADPT
"RTN","DGAPI1",35,0)
 ;
"RTN","DGAPI1",36,0)
 S XMDUZ="PTF MODULE",XMSUB="801 to PCE filing error"
"RTN","DGAPI1",37,0)
 S XMY("G.DG PTF 801 TO PCE ERROR")="",XMY(DUZ)="",XMTEXT="DGTXT("
"RTN","DGAPI1",38,0)
 ;
"RTN","DGAPI1",39,0)
 S DGTXT(1,0)="An error has occured while sending PTF 801 data to PCE."
"RTN","DGAPI1",40,0)
 S DGTXT(2,0)=" "
"RTN","DGAPI1",41,0)
 S DGTXT(3,0)="     Patient Name:  "_VADM(1)
"RTN","DGAPI1",42,0)
 S DGTXT(4,0)="     Social Security:  "_$P(VADM(2),"^",2)
"RTN","DGAPI1",43,0)
 S DGTXT(5,0)="     Date/Time:  "_$$FMTE^XLFDT(+DGZPRF(DGZP))
"RTN","DGAPI1",44,0)
 S DGTXT(6,0)="     Location:  "_$P($G(^SC($P(DGZPRF(DGZP),"^",5),0)),"^")
"RTN","DGAPI1",45,0)
 S DGTXT(7,0)=" "
"RTN","DGAPI1",46,0)
 ;
"RTN","DGAPI1",47,0)
 S DGL=7,DGY=0 F  S DGY=$O(^TMP("DGPCE1",$J,"PXAPI","DIERR",$J,DGX,"TEXT",DGY)) Q:'DGY!($E(^TMP("DGPCE1",$J,"PXAPI","DIERR",$J,DGX,"TEXT",DGY),1,25)="^TMP(""DGPCE1"",$J,""PXAPI"")")  D
"RTN","DGAPI1",48,0)
 . S DGL=DGL+1,DGTXT(DGL,0)="     "_^TMP("DGPCE1",$J,"PXAPI","DIERR",$J,DGX,"TEXT",DGY)
"RTN","DGAPI1",49,0)
 ;
"RTN","DGAPI1",50,0)
 D ^XMD
"RTN","DGAPI1",51,0)
 D KVAR^VADPT
"RTN","DGAPI1",52,0)
 ;
"RTN","DGAPI1",53,0)
 Q
"RTN","DGAPI1",54,0)
 ;
"RTN","DGAPI1",55,0)
DELVFILE(DFN,PTF,DGZP) ;DELETE VISIT IN PCE WHEN A CHANGE IS MADE
"RTN","DGAPI1",56,0)
 N DIE,DA,DR S RES=1
"RTN","DGAPI1",57,0)
 S:$P(DGZPRF(DGZP),U,7) RES=$$DELVFILE^PXAPI("ALL",$P(DGZPRF(DGZP),U,6))
"RTN","DGAPI1",58,0)
 S DA=DGZPRF(DGZP,0),DA(1)=PTF
"RTN","DGAPI1",59,0)
 S DIE="^DGPT("_PTF_",""C"",",DR=".06///@;.07////0" D ^DIE
"RTN","DGAPI1",60,0)
 Q RES
"RTN","DGAPI1",61,0)
 ;
"RTN","DGAPI1",62,0)
BUILD ; now build array for passing data to PCE
"RTN","DGAPI1",63,0)
 N DGAPI,DGC,DGPROC,DGPROCZ,DGP,DGDXNO,DGDXC,DGDX,DGX
"RTN","DGAPI1",64,0)
 K ^TMP("DGPCE1",$J,"PXAPI") S DGDXC=0
"RTN","DGAPI1",65,0)
 S DGAPI=$NA(^TMP("DGPCE1",$J,"PXAPI"))
"RTN","DGAPI1",66,0)
 ; ---------encounter date/time----------------
"RTN","DGAPI1",67,0)
 S @DGAPI@("ENCOUNTER",1,"ENC D/T")=+DGZPRF(DGZP)
"RTN","DGAPI1",68,0)
 ; --------------patient-----------------------
"RTN","DGAPI1",69,0)
 S @DGAPI@("ENCOUNTER",1,"PATIENT")=DFN
"RTN","DGAPI1",70,0)
 ; ---------------location---------------------
"RTN","DGAPI1",71,0)
 S @DGAPI@("ENCOUNTER",1,"HOS LOC")=$P(DGZPRF(DGZP),"^",5)
"RTN","DGAPI1",72,0)
 ; --------------service category--------------
"RTN","DGAPI1",73,0)
 S @DGAPI@("ENCOUNTER",1,"SERVICE CATEGORY")="I"
"RTN","DGAPI1",74,0)
 ; ---------------encounter type---------------
"RTN","DGAPI1",75,0)
 S @DGAPI@("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","DGAPI1",76,0)
 ; ------------primary provider----------------
"RTN","DGAPI1",77,0)
 S @DGAPI@("PROVIDER",1,"NAME")=$P(DGZPRF(DGZP),"^",3)
"RTN","DGAPI1",78,0)
 S @DGAPI@("PROVIDER",1,"PRIMARY")=1
"RTN","DGAPI1",79,0)
 ; ------------secondary provider-------------
"RTN","DGAPI1",80,0)
 I $P(DGZPRF(DGZP),"^",2),$P(DGZPRF(DGZP),"^",2)'=$P(DGZPRF(DGZP),"^",3) S @DGAPI@("PROVIDER",2,"NAME")=$P(DGZPRF(DGZP),"^",2)
"RTN","DGAPI1",81,0)
 ; ----------------procedures-----------------
"RTN","DGAPI1",82,0)
 S DGC=0,DGPROC=0 F  S DGPROC=$O(DGZPRF(DGZP,DGPROC)) Q:'DGPROC  D
"RTN","DGAPI1",83,0)
 . S DGPROCZ=$G(DGZPRF(DGZP,DGPROC)) Q:'DGPROCZ
"RTN","DGAPI1",84,0)
 . S DGC=DGC+1,@DGAPI@("PROCEDURE",DGC,"PROCEDURE")=+DGPROCZ
"RTN","DGAPI1",85,0)
 . ; --------------modifiers------------------
"RTN","DGAPI1",86,0)
 . F DGP=2,3 I $P(DGPROCZ,"^",DGP) S @DGAPI@("PROCEDURE",DGC,"MODIFIERS",$P($$MOD^ICPTMOD($P(DGPROCZ,"^",DGP),"I",+DGZPRF(DGZP)),"^",2))=""
"RTN","DGAPI1",87,0)
 . ; --------------quantity-------------------
"RTN","DGAPI1",88,0)
 . S @DGAPI@("PROCEDURE",DGC,"QTY")=$P(DGPROCZ,"^",14)
"RTN","DGAPI1",89,0)
 . ; --------------diagnosis------------------
"RTN","DGAPI1",90,0)
 . F DGP=4:1:7,15:1:18 I $P(DGPROCZ,"^",DGP) D
"RTN","DGAPI1",91,0)
 . . S DGDXNO=$S(DGP=4:"",DGP<15:DGP-3,1:DGP-11)
"RTN","DGAPI1",92,0)
 . . S @DGAPI@("PROCEDURE",DGC,"DIAGNOSIS"_$S(DGDXNO<2:"",1:" "_DGDXNO))=$P(DGPROCZ,"^",DGP)
"RTN","DGAPI1",93,0)
 . . I $D(DGDX($P(DGPROCZ,"^",DGP))) Q
"RTN","DGAPI1",94,0)
 . . S DGDX($P(DGPROCZ,"^",DGP))="",DGDXC=DGDXC+1
"RTN","DGAPI1",95,0)
 . . S @DGAPI@("DX/PL",DGDXC,"DIAGNOSIS")=$P(DGPROCZ,"^",DGP)
"RTN","DGAPI1",96,0)
 . . S:DGDXC=1 @DGAPI@("DX/PL",DGDXC,"PRIMARY")=1
"RTN","DGAPI1",97,0)
 . . S (DGY,DGX)=0 F  S DGX=$O(^DGICD9(46.1,"C",PTF,DGX)) Q:'DGX!(DGY)  I +$G(^DGICD9(46.1,DGX,0))=$P(DGPROCZ,"^",DGP) S DGY=DGX
"RTN","DGAPI1",98,0)
 . . S DGY=$G(^DGICD9(46.1,+DGY,0))
"RTN","DGAPI1",99,0)
 . . I $L($P(DGY,"^",2)) S @DGAPI@("DX/PL",DGDXC,"PL SC")=$P(DGY,"^",2)
"RTN","DGAPI1",100,0)
 . . I $L($P(DGY,"^",3)) S @DGAPI@("DX/PL",DGDXC,"PL AO")=$P(DGY,"^",3)
"RTN","DGAPI1",101,0)
 . . I $L($P(DGY,"^",4)) S @DGAPI@("DX/PL",DGDXC,"PL IR")=$P(DGY,"^",4)
"RTN","DGAPI1",102,0)
 . . I $L($P(DGY,"^",5)) S @DGAPI@("DX/PL",DGDXC,"PL EC")=$P(DGY,"^",5)
"RTN","DGAPI1",103,0)
 . . I $L($P(DGY,"^",6)) S @DGAPI@("DX/PL",DGDXC,"PL MST")=$P(DGY,"^",6)
"RTN","DGAPI1",104,0)
 . . I $L($P(DGY,"^",7)) S @DGAPI@("DX/PL",DGDXC,"PL HNC")=$P(DGY,"^",7)
"RTN","DGAPI1",105,0)
 . . I $L($P(DGY,"^",8)) S @DGAPI@("DX/PL",DGDXC,"PL CV")=$P(DGY,"^",8)
"RTN","DGAPI1",106,0)
 . . I $L($P(DGY,"^",9)) S @DGAPI@("DX/PL",DGDXC,"PL SHAD")=$P(DGY,"^",9)
"RTN","DGAPI1",107,0)
 ;
"RTN","DGAPI1",108,0)
 Q
"RTN","DGAPI1",109,0)
 ;
"RTN","DGPT101P")
0^17^B4327695
"RTN","DGPT101P",1,0)
DGPT101P ;ALB/MTC - Parse 101 record ; 12 NOV 92
"RTN","DGPT101P",2,0)
 ;;5.3;Registration;**164,678,664**;Aug 13, 1993;Build 15
"RTN","DGPT101P",3,0)
 ;;
"RTN","DGPT101P",4,0)
SET ; Parse 101 record
"RTN","DGPT101P",5,0)
 ;
"RTN","DGPT101P",6,0)
 S DGPTDTS=$$FMDT^DGPT101($E(DGPTSTR,15,20))_"."_$E(DGPTSTR,21,24)
"RTN","DGPT101P",7,0)
 S DGPTPS=$E(DGPTSTR,5),DGPTSSN=$E(DGPTSTR,6,14),DGPTDTA=$E(DGPTSTR,15,24),DGPTFAC=$E(DGPTSTR,25,30),DGPTLN=$E(DGPTSTR,31,42),DGPTFI=$E(DGPTSTR,43),DGPTMI=$E(DGPTSTR,44)
"RTN","DGPT101P",8,0)
 S DGPTSRA=$E(DGPTSTR,45,46),DGPTTF=$E(DGPTSTR,47,52),DGPTSRP=$E(DGPTSTR,53),DGPTPOW=$E(DGPTSTR,54),DGPTMRS=$E(DGPTSTR,55),DGPTGEN=$E(DGPTSTR,56),DGPTDOB=$E(DGPTSTR,57,64),DGPTPOS1=$E(DGPTSTR,65),DGPTPOS2=$E(DGPTSTR,66),DGPTEXA=$E(DGPTSTR,67)
"RTN","DGPT101P",9,0)
 S DGPTEXI=$E(DGPTSTR,68),DGPTSTE=$E(DGPTSTR,69,70),DGPTCTY=$E(DGPTSTR,71,73),DGPTZIP=$E(DGPTSTR,74,78),DGPTMTC=$E(DGPTSTR,79,80),DGPTBY=$E(DGPTSTR,61,64)
"RTN","DGPT101P",10,0)
 S DGPTINC=$E(DGPTSTR,81,86),DGPTERI=$E(DGPTSTR,96),DGPTCTRY=$E(DGPTSTR,97,99)
"RTN","DGPT101P",11,0)
 Q
"RTN","DGPTAE01")
0^18^B8773190
"RTN","DGPTAE01",1,0)
DGPTAE01 ;ALB/MTC - Miss. Austin Edit Checks ; 13 NOV 92
"RTN","DGPTAE01",2,0)
 ;;5.3;Registration;**58,342,466,664**;Aug 13, 1993;Build 15
"RTN","DGPTAE01",3,0)
 ;
"RTN","DGPTAE01",4,0)
INC ; VERIFY INCOME DATA
"RTN","DGPTAE01",5,0)
 I DGPTINC'?." "1.6N." " S DGPTERC=120
"RTN","DGPTAE01",6,0)
 Q
"RTN","DGPTAE01",7,0)
 ;
"RTN","DGPTAE01",8,0)
STATE ;
"RTN","DGPTAE01",9,0)
 Q:$$FOR^DGADDUTL(DGPTCTRY)>0
"RTN","DGPTAE01",10,0)
 Q:DGPTSTE["X"
"RTN","DGPTAE01",11,0)
 S DGPTSTE=+DGPTSTE I DGPTSTE="" S DGPTERC=117 Q
"RTN","DGPTAE01",12,0)
 I DGPTSTE'?1.2N S DGPTERC=117 Q
"RTN","DGPTAE01",13,0)
 Q
"RTN","DGPTAE01",14,0)
 ;
"RTN","DGPTAE01",15,0)
ZIP ;
"RTN","DGPTAE01",16,0)
 Q:$$FOR^DGADDUTL(DGPTCTRY)>0
"RTN","DGPTAE01",17,0)
 I DGPTZIP'?5N&(DGPTZIP'="XXXXX") S DGPTERC=118 Q
"RTN","DGPTAE01",18,0)
 Q
"RTN","DGPTAE01",19,0)
 ;
"RTN","DGPTAE01",20,0)
CNTY ;
"RTN","DGPTAE01",21,0)
 Q:$$FOR^DGADDUTL(DGPTCTRY)>0
"RTN","DGPTAE01",22,0)
 I DGPTCTY'?1.3N S DGPTERC=117 Q
"RTN","DGPTAE01",23,0)
 Q
"RTN","DGPTAE01",24,0)
 ;
"RTN","DGPTAE01",25,0)
AGO ;
"RTN","DGPTAE01",26,0)
 I " 12345"'[DGPTEXA S DGPTERC=115 Q
"RTN","DGPTAE01",27,0)
 I "35"[DGPTEXA&(DGPTPOS2'=7) S DGPTERC=133 Q
"RTN","DGPTAE01",28,0)
 Q
"RTN","DGPTAE01",29,0)
IRAD ;
"RTN","DGPTAE01",30,0)
 I "024578"'[DGPTPOS2&(DGPTEXI'=" ") S DGPTEXI=" " Q
"RTN","DGPTAE01",31,0)
 I "024578"[DGPTPOS2&("1234 "'[DGPTEXI) S DGPTERC=116 Q
"RTN","DGPTAE01",32,0)
 I DGPTPOS2="Z"&((DGPTEXI=" ")!("1234"'[DGPTEXI)) S DGPTERC=134 Q
"RTN","DGPTAE01",33,0)
 Q
"RTN","DGPTAE01",34,0)
 ;
"RTN","DGPTAE01",35,0)
DB ; DATE OF BIRTH EDITS
"RTN","DGPTAE01",36,0)
 ;
"RTN","DGPTAE01",37,0)
 I $E(DGPTDOB,1,2)="00" S DGPTDOB="01"_$E(DGPTDOB,3,8)
"RTN","DGPTAE01",38,0)
 I $E(DGPTDOB,3,4)="00" S DGPTDOB=$E(DGPTDOB,1,2)_"01"_$E(DGPTDOB,5,8)
"RTN","DGPTAE01",39,0)
 S DGPTFMDB=($E(DGPTDOB,5,6)-17)_$E(DGPTDOB,7,8)_$E(DGPTDOB,1,4)
"RTN","DGPTAE01",40,0)
 S X=DGPTFMDB,%DT="X" D ^%DT I Y<0 S DGPTERC=113 Q
"RTN","DGPTAE01",41,0)
 D DD^%DT S DGPTORBD=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12) I DGPTORBD'?1.2N1"-"3U1"-"4N S DGPTERC=113 Q
"RTN","DGPTAE01",42,0)
 I $E(DGPTDOB,5,8)<1857 S DGPTERC=113 Q
"RTN","DGPTAE01",43,0)
 S X1=+DGPTDTS,X2=DGPTFMDB D ^%DTC I X<0 S DGPTERC=113 Q
"RTN","DGPTAE01",44,0)
 S DGPTAGE=X\365 I (DGPTAGE<1)!(DGPTAGE>124) S DGPTERC=113 Q
"RTN","DGPTAE01",45,0)
DBQ ;
"RTN","DGPTAE01",46,0)
 K X,X1,X2,Y
"RTN","DGPTAE01",47,0)
 Q
"RTN","DGPTAE01",48,0)
 ;
"RTN","DGPTAE01",49,0)
MT ; Means test edits and consistency check
"RTN","DGPTAE01",50,0)
 ;
"RTN","DGPTAE01",51,0)
 I DGPTSTTY["^30^" S DGPTMTC="  " Q
"RTN","DGPTAE01",52,0)
 D EDIT Q:DGPTERC
"RTN","DGPTAE01",53,0)
 D CONSIS Q:DGPTERC
"RTN","DGPTAE01",54,0)
 Q
"RTN","DGPTAE01",55,0)
EDIT ;
"RTN","DGPTAE01",56,0)
 D NUMACT^DGPTSUF(30) I DGANUM>0 F I=1:1:DGANUM I $E(DGPTFAC,4,6)[DGSUFNAM(I) S:DGPTMTC'="X " DGPTMTC="X " K DGANUM,DGSUFNAM,I Q
"RTN","DGPTAE01",57,0)
 I "ABCGNXU"'[$E(DGPTMTC) S DGPTERC=119 Q
"RTN","DGPTAE01",58,0)
 I $E(DGPTMTC,1)="A"&("SN"'[$E(DGPTMTC,2)) S DGPTERC=119 Q
"RTN","DGPTAE01",59,0)
 I $E(DGPTMTC,2)=" "&("BCGNXU"'[$E(DGPTMTC)) S DGPTERC=119 Q
"RTN","DGPTAE01",60,0)
 Q
"RTN","DGPTAE01",61,0)
CONSIS ;
"RTN","DGPTAE01",62,0)
 I DGPTMTC="X "&(+DGPTTY'<2860701) S DGPTERC="119" Q
"RTN","DGPTAE01",63,0)
 Q
"RTN","DGPTAE01",64,0)
 ;
"RTN","DGPTAE01",65,0)
PSE ;-- check for pseudo ssn
"RTN","DGPTAE01",66,0)
 S DGPTALF="ABC^DEF^GHI^JKL^MNO^PQR^STU^VWX^YZ^ "
"RTN","DGPTAE01",67,0)
FI ;
"RTN","DGPTAE01",68,0)
 I DGPTFI=" "&($E(DGPTSSN,1)=0) G MI
"RTN","DGPTAE01",69,0)
 I $P(DGPTALF,U,$E(DGPTSSN,1))'[DGPTFI S DGPTERC=130 G PSEQ
"RTN","DGPTAE01",70,0)
MI ;
"RTN","DGPTAE01",71,0)
 I DGPTMI=" "&($E(DGPTSSN,2)=0) G LN
"RTN","DGPTAE01",72,0)
 I $P(DGPTALF,U,$E(DGPTSSN,2))'[DGPTMI S DGPTERC=130 G PSEQ
"RTN","DGPTAE01",73,0)
LN ;
"RTN","DGPTAE01",74,0)
 I $P(DGPTALF,U,$E(DGPTSSN,3))'[$E(DGPTLN,1) S DGPTERC=130 G PSEQ
"RTN","DGPTAE01",75,0)
COMP ;
"RTN","DGPTAE01",76,0)
 I $E(DGPTDOB,1,4)_$E(DGPTDOB,7,8)'=$E(DGPTSSN,4,9) S DGPTERC=130
"RTN","DGPTAE01",77,0)
 Q
"RTN","DGPTAE01",78,0)
PSEQ ;
"RTN","DGPTAE01",79,0)
 K DGPTALF
"RTN","DGPTAE01",80,0)
 Q
"RTN","DGPTAEE1")
0^6^B21575685
"RTN","DGPTAEE1",1,0)
DGPTAEE1 ;ALB/MTC - Austin Edits EAL Listing Continued ; 14 DEC 92
"RTN","DGPTAEE1",2,0)
 ;;5.3;Registration;**338,565,678,729,664**;Aug 13, 1993;Build 15
"RTN","DGPTAEE1",3,0)
 ;
"RTN","DGPTAEE1",4,0)
H101(REC) ;-- 101 header
"RTN","DGPTAEE1",5,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",6,0)
 N I,X,X1,X2
"RTN","DGPTAEE1",7,0)
 S X="ADM    SSN       ADM-DATE-TIME LAST-NAME     INIT SOU FROM  SOP POW MS SX"
"RTN","DGPTAEE1",8,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",9,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,42)_"   "_$E(REC,43,44)_"   "_$E(REC,45,46)_SP_$E(REC,47,52)_SP_$E(REC,53)_"   "_$E(REC,54)_"   "_$E(REC,55)_"  "_$E(REC,56)
"RTN","DGPTAEE1",10,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",11,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<12 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",12,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",13,0)
 S X="BIRTHDATE    POS AGO ION ST-CNTY  ZIP   MT INCOME MST CV CV-END SHAD ERI CNTRY"
"RTN","DGPTAEE1",14,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",15,0)
 S X=$E(REC,57,58)_SP_$E(REC,59,60)_SP_$E(REC,61,64)_"   "_$E(REC,65,66)_"    "_$E(REC,67)_"   "_$E(REC,68)_"  "_$E(REC,69,73)_"  "_$E(REC,74,78)_"  "_$E(REC,79,80)_SP_$E(REC,81,86)_"  "_$E(REC,87)_"   "_$E(REC,88)_" "_$E(REC,89,94)
"RTN","DGPTAEE1",16,0)
 S X=X_"    "_$E(REC,95)_"  "_$E(REC,96)_"   "_$E(REC,97,99)
"RTN","DGPTAEE1",17,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",18,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>11 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",19,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",20,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",21,0)
 Q
"RTN","DGPTAEE1",22,0)
 ;
"RTN","DGPTAEE1",23,0)
H401(REC) ;-- 401 header
"RTN","DGPTAEE1",24,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",25,0)
 N X,X1,X2
"RTN","DGPTAEE1",26,0)
 S X="SURG   SSN       ADM-DATE-TIME SURG-DATE-TIME  SPEC CATEG TECH SOP"
"RTN","DGPTAEE1",27,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",28,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_"  "_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_"   "
"RTN","DGPTAEE1",29,0)
 S X=X_$E(REC,41,42)_"  "_$E(REC,43)_"   "_$E(REC,44)_"   "_$E(REC,45)_"   "_$E(REC,46)
"RTN","DGPTAEE1",30,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",31,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<9 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",32,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",33,0)
 S X="------------SURGICAL CODES-------------  PHY SSN   TRNSPLNT"
"RTN","DGPTAEE1",34,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",35,0)
 S X=$E(REC,47,53)_SP_$E(REC,54,60)_SP_$E(REC,61,67)_SP_$E(REC,68,74)_SP_$E(REC,75,81)_"  "_$E(REC,82,90)_"     "_$E(REC,91)
"RTN","DGPTAEE1",36,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",37,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>8 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",38,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",39,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",40,0)
 Q
"RTN","DGPTAEE1",41,0)
 ;
"RTN","DGPTAEE1",42,0)
H501(REC) ;-- 501 header
"RTN","DGPTAEE1",43,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",44,0)
 N X,X1,X2
"RTN","DGPTAEE1",45,0)
 S X="DIAG   SSN       ADM-DATE-TIME MOVE DATE-TIME MPCR CODE SPC LVE PASS SCI"
"RTN","DGPTAEE1",46,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",47,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_SP
"RTN","DGPTAEE1",48,0)
 S X=X_"  "_$E(REC,41,46)_"  "_$E(REC,47,48)_"  "_$E(REC,49,51)_"  "_$E(REC,52,54)_"  "_$E(REC,55)
"RTN","DGPTAEE1",49,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",50,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",51,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",52,0)
 S X="-----------DIAGNOSTIC CODES------------"
"RTN","DGPTAEE1",53,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",54,0)
 S X=$E(REC,56,62)_SP_$E(REC,63,69)_SP_$E(REC,70,76)_SP_$E(REC,77,83)_SP_$E(REC,84,90)
"RTN","DGPTAEE1",55,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",56,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")=10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",57,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",58,0)
 S X="SSN ATTY PHY PHY LOC  CDE BSI LI SI DRUG A4 A5   SC AO IR SWAC"
"RTN","DGPTAEE1",59,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",60,0)
 S X=$E(REC,91,99)_"    "_$E(REC,100,105)_"    "_$E(REC,106,107)_"  "_$E(REC,108)_"   "_$E(REC,109)_"  "_$E(REC,110)_SP_$E(REC,111,114)_"  "_$E(REC,115)_SP_$E(REC,116,119)_"  "_$E(REC,120)_"  "_$E(REC,121)_"  "_$E(REC,122)_"  "_$E(REC,123)
"RTN","DGPTAEE1",61,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",62,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",63,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",64,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",65,0)
 Q
"RTN","DGPTAEE1",66,0)
 ;
"RTN","DGPTAEE2")
0^7^B14351045
"RTN","DGPTAEE2",1,0)
DGPTAEE2 ;ALB/MTC - Austin Edits EAL Report Continued ; 14 DEC 92
"RTN","DGPTAEE2",2,0)
 ;;5.3;Registration;**8,338,415,565,729,664**;Aug 13, 1993;Build 15
"RTN","DGPTAEE2",3,0)
 ;
"RTN","DGPTAEE2",4,0)
H601(REC) ;-- 601 error processing
"RTN","DGPTAEE2",5,0)
 ; INPUT : REC - Record that contains the errors
"RTN","DGPTAEE2",6,0)
 N X,X1
"RTN","DGPTAEE2",7,0)
 S X="PROC     SSN     ADM-DATE-TIME PROC-DATE-TIME SPC  TYPE TRT"
"RTN","DGPTAEE2",8,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",9,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_"  "
"RTN","DGPTAEE2",10,0)
 S X=X_$E(REC,41,42)_"     "_$E(REC,43)_"  "_$E(REC,44,46)
"RTN","DGPTAEE2",11,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",12,0)
 S X="-----------PROCEDURE CODES-------------"
"RTN","DGPTAEE2",13,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",14,0)
 S X=$E(REC,47,53)_SP_$E(REC,54,60)_SP_$E(REC,61,67)_SP_$E(REC,68,74)_SP_$E(REC,75,81)
"RTN","DGPTAEE2",15,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",16,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE2",17,0)
 Q
"RTN","DGPTAEE2",18,0)
 ;
"RTN","DGPTAEE2",19,0)
H701(REC) ;-- 701 header
"RTN","DGPTAEE2",20,0)
 ; INPUT : REC - Record that contains the errors
"RTN","DGPTAEE2",21,0)
 N X,X1,X2
"RTN","DGPTAEE2",22,0)
 S X="DISP   SSN       ADM-DATE-TIME DIS-DATE-TIME SPC  TYPE OP/RX VA/AUS PLACE RECVNG"
"RTN","DGPTAEE2",23,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",24,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_SP
"RTN","DGPTAEE2",25,0)
 S X=X_$E(REC,41,42)_"    "_$E(REC,43)_"     "_$E(REC,44)_"     "_$E(REC,45)_"      "_$E(REC,46)_"   "_$E(REC,47,52)
"RTN","DGPTAEE2",26,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",27,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<11 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE2",28,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",29,0)
 S X="ASIH XXXX C/P  DXLS   ODX  MPCR CODE   PHY LOC  %SC LI SI DRUG A4 A5"
"RTN","DGPTAEE2",30,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",31,0)
 S X=$E(REC,53,55)_"    "_$E(REC,56)_"   "_$E(REC,57)_"   "_$E(REC,58,64)_"  "_$E(REC,65)_"  "_$E(REC,66,71)_"       "_$E(REC,72,73)_"     "_$E(REC,74,76)_"  "_$E(REC,77)_"  "_$E(REC,78)_SP_$E(REC,79,82)_"  "_$E(REC,83)_SP_$E(REC,84,87)
"RTN","DGPTAEE2",32,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",33,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE2",34,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",35,0)
 S X="SC AO IR SWAC MST HNC ETH RACE         CV SHAD"
"RTN","DGPTAEE2",36,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",37,0)
 S X=$E(REC,88)_"  "_$E(REC,89)_"  "_$E(REC,90)_"  "_$E(REC,91)_"     "_$E(REC,92)_"   "_$E(REC,93)_"  "_$E(REC,94,95)_"  "_$E(REC,96,107)_"  "_$E(REC,108)_"  "_$E(REC,109)
"RTN","DGPTAEE2",38,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",39,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE2",40,0)
 Q
"RTN","DGPTAEE2",41,0)
 ;
"RTN","DGPTAEE2",42,0)
H702(REC) ;-- 702 header
"RTN","DGPTAEE2",43,0)
 ; INPUT : REC - Record that contains the errors
"RTN","DGPTAEE2",44,0)
 N X,X1
"RTN","DGPTAEE2",45,0)
 S X="ADM    SSN       ADM-DATE-TIME DIS-DATE-TIME"
"RTN","DGPTAEE2",46,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",47,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)
"RTN","DGPTAEE2",48,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",49,0)
 S X="----------------------------DIAGNOSTIC CODES----------------------------"
"RTN","DGPTAEE2",50,0)
 S X=$E(REC,41,47)_SP_$E(REC,48,54)_SP_$E(REC,55,61)_SP_$E(REC,62,68)_SP_$E(REC,69,75)_SP_$E(REC,76,82)_SP_$E(REC,83,89)_SP_$E(REC,90,96)_SP_$E(REC,97,103)
"RTN","DGPTAEE2",51,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE2",52,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE2",53,0)
 Q
"RTN","DGPTAEE2",54,0)
 ;
"RTN","DGPTF")
0^1^B21709372
"RTN","DGPTF",1,0)
DGPTF ;ALB/JDS/AS - PTF LOAD/EDIT DRIVER ; 5/17/05 12:13pm
"RTN","DGPTF",2,0)
 ;;5.3;Registration;**26,58,164,195,397,565,664**;Aug 13, 1993;Build 15
"RTN","DGPTF",3,0)
 ;
"RTN","DGPTF",4,0)
 D LO^DGUTL
"RTN","DGPTF",5,0)
 I $D(^DISV(DUZ,"^DPT(")),$D(^("^DGPT(")) S A=+^("^DGPT("),B=+^("^DPT(") I $D(^DGPT(A,0)),$D(^DPT(B,0)) S:(+^DGPT(A,0)'=B&$D(^DGPT("B",B))) ^DISV(DUZ,"^DGPT(")=""
"RTN","DGPTF",6,0)
ASK W !! K DIC S DIC="^DGPT(",DIC(0)="EQMZA",DGPR=0,DIC("S")="I '$P(^DGPT(+Y,0),U,6)!($P(^(0),U,6)=1),$P(^(0),U,11)=1"
"RTN","DGPTF",7,0)
 D ^DIC G Q1:Y'>0 S PTF=+Y,DGREL=$S($D(^XUSEC("DG PTFREL",DUZ)):1,1:0)
"RTN","DGPTF",8,0)
 I '$D(^DGPT(PTF,"M",0))#2 S ^(0)="^45.02^^"
"RTN","DGPTF",9,0)
 K DIC S DFN=+Y(0),DGADM=+$P(Y(0),U,2),^DISV(DUZ,"^DPT(")=DFN,DGST=+$P(Y(0),U,6)
"RTN","DGPTF",10,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTF",11,0)
 D:DGST=0 MT^DGPTUTL,INCOME^DGPTUTL1
"RTN","DGPTF",12,0)
 I DGST I 'DGREL!($D(DGQWK))!(DGST>1) W:$X>60 "   ???--Already ",$S(DGST=1:"Closed",DGST=2:"Released",1:"Transmitted") G ASK
"RTN","DGPTF",13,0)
 ;
"RTN","DGPTF",14,0)
EN1 ;
"RTN","DGPTF",15,0)
 K DGPTFE S DGPTFE=$P(^DGPT(PTF,0),"^",4)
"RTN","DGPTF",16,0)
 I 'DGPTFE,'DGST G UP:$P(DGPMAN,"^",16)'=PTF D:'$P(^DGPT(PTF,0),"^",5) SUF D LE^DGPTTS,DC
"RTN","DGPTF",17,0)
 I $D(DGQWK) D ^DGPTFQWK,Q1 S DGQWK=1 G DGPTF
"RTN","DGPTF",18,0)
 ;
"RTN","DGPTF",19,0)
GETD ;
"RTN","DGPTF",20,0)
 K A
"RTN","DGPTF",21,0)
 I $P(^DGPT(PTF,0),U,11)=1 D CEN^DGPTC1
"RTN","DGPTF",22,0)
 F I=0,.521,.11,.52,.321,.32,57,.3 S A(I)="" S:$D(^DPT(DFN,I))&('DGST) A(I)=^(I) I DGST S:$D(^DGP(45.84,PTF,$S('I:10,1:I))) A(I)=^($S('I:10,1:I))
"RTN","DGPTF",23,0)
 ;changed 6/17/98 for MST enhancement
"RTN","DGPTF",24,0)
 S A("MST")=$P($$GETSTAT^DGMSTAPI(DFN),U,2,5)
"RTN","DGPTF",25,0)
 K DGNTARR
"RTN","DGPTF",26,0)
 S A("NTR")=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("INTRP"),1:"")
"RTN","DGPTF",27,0)
 K DGNTARR
"RTN","DGPTF",28,0)
 K B F I=0,101,70 S B(I)="" S:$D(^DGPT(PTF,I)) B(I)=^(I)
"RTN","DGPTF",29,0)
 S A("CV")=$$CVEDT^DGCV(DFN,$P($G(B(0)),U,2))
"RTN","DGPTF",30,0)
 S A("SHAD")=$$GETSHAD^DGUTL3(DFN)
"RTN","DGPTF",31,0)
 S DGDD=+B(70),DGFC=+$P(B(0),U,3)
"RTN","DGPTF",32,0)
 S Y=DGDD D FMT^DGPTUTL
"RTN","DGPTF",33,0)
 S Y=DGADM D D^DGPTUTL S DGAD=Y,HEAD="Name: "_$P(A(0),U,1)_"  SSN: "_$P(A(0),U,9)_" Dt of Adm: "_DGAD
"RTN","DGPTF",34,0)
 S DGN=$S(DGST!DGPR:1,1:0)
"RTN","DGPTF",35,0)
 I DGPR S (DGST,DGPTFE)=1 G FAC^DGPTF1
"RTN","DGPTF",36,0)
 I DGPTFE,'DGST K DR S DIE="^DGPT(",DA=PTF,DR="2" D ^DIE K DR G Q:$D(Y) S DGADM=$P(^DGPT(PTF,0),U,2),^DISV(DUZ,"PTFAD",DFN)=DGADM,Y=DGADM D D^DGPTUTL S HEAD=$P(HEAD,DGAD,1)_Y
"RTN","DGPTF",37,0)
 G ^DGPTF1
"RTN","DGPTF",38,0)
 ;
"RTN","DGPTF",39,0)
Q I '$P(^DGPT(PTF,0),"^",4),'$P(^(0),U,6) W !,"  Updating TRANSFER DRGs" S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
"RTN","DGPTF",40,0)
 D Q1
"RTN","DGPTF",41,0)
 I $D(DGADPR)!($D(DGPTOUT)) K DGPTOUT Q
"RTN","DGPTF",42,0)
 G DGPTF
"RTN","DGPTF",43,0)
 ;
"RTN","DGPTF",44,0)
Q1 ; -- housekeeping
"RTN","DGPTF",45,0)
 I $D(IOM) S X=IOM X ^%ZOSF("RM")
"RTN","DGPTF",46,0)
 D KVAR^DGPTUTL1,KVAR^DGPTC1 K SDCLY
"RTN","DGPTF",47,0)
 Q
"RTN","DGPTF",48,0)
 ;
"RTN","DGPTF",49,0)
SUF I $D(^DIC(42,+$P(DGPMAN,U,6),0)) D
"RTN","DGPTF",50,0)
 .S DGX=$P(^(0),U,3),DGX=$S(DGX="":"",DGX="D":"D NUMACT^DGPTSUF(30)",DGX="NH":"D NUMACT^DGPTSUF(40)",1:"")
"RTN","DGPTF",51,0)
 .Q:DGX=""
"RTN","DGPTF",52,0)
 .X DGX Q:DGANUM'=1
"RTN","DGPTF",53,0)
 .N DGFDA,DGMSG
"RTN","DGPTF",54,0)
 .S DGFDA(45,PTF_",",5)=DGSUFNAM(DGANUM)
"RTN","DGPTF",55,0)
 .D FILE^DIE("","DGFDA","DGMSG")
"RTN","DGPTF",56,0)
 K DGANUM,DGSUFNAM,DGX
"RTN","DGPTF",57,0)
 Q
"RTN","DGPTF",58,0)
ORDER ; -- order mvt ; I1 := #mvts+1 ; M() := mvt array
"RTN","DGPTF",59,0)
 N DGRT S DGRT=$S(I1<25:"MT",1:"^UTILITY(""DGPTMT"",$J)") K @DGRT
"RTN","DGPTF",60,0)
 F I=0:0 S I=$O(M(I)) Q:'I  S NU=+$P(M(I),U,10),NU=$S('NU:9999999+I,1:NU),NU=$S($D(@DGRT@(NU)):NU+(I*.1),1:NU) S @DGRT@(NU,I)=M(I)
"RTN","DGPTF",61,0)
 S K=0 F I=0:0 S I=$O(@DGRT@(I)) Q:'I  S K=K+1,J=$O(@DGRT@(I,0)) S M(K)=@DGRT@(I,J)
"RTN","DGPTF",62,0)
 K @DGRT Q
"RTN","DGPTF",63,0)
 ;
"RTN","DGPTF",64,0)
ADM S DFN=+^DGPT(DA,0),%=$O(^("M","AM",0)) I %<X&(%>0) K X W !,"Not after first movement"
"RTN","DGPTF",65,0)
 Q:'$D(X)  I $D(^DGPT("AAD",DFN,X))&($P(^DGPT(DA,0),U,2)'=X) K X W !,"There is already a PTF entry at that time"
"RTN","DGPTF",66,0)
 Q
"RTN","DGPTF",67,0)
 ;
"RTN","DGPTF",68,0)
WR Q:'$D(^(0))  S DGNODE=^(0),DGADM=$P(DGNODE,U,2) W "  Admitted: ",$TR($$FMTE^XLFDT(DGADM,"5DF")," ","0")," "
"RTN","DGPTF",69,0)
 ; uses new FMTE parameter for XLFDT, Y2K in line WR
"RTN","DGPTF",70,0)
 ;
"RTN","DGPTF",71,0)
 F DGZ=6,4 S %=";"_$S($D(^DD(45,DGZ,0)):$P(^(0),U,3),1:"") W $P($P(%,";"_$P(DGNODE,U,DGZ)_":",2),";",1)_" "
"RTN","DGPTF",72,0)
 K DGNODE,DGZ Q
"RTN","DGPTF",73,0)
 ;
"RTN","DGPTF",74,0)
DC S DGPDN=$S($D(^DGPM(+$P(DGPMAN,"^",17),0)):^(0),1:"")
"RTN","DGPTF",75,0)
 S DGDC=+DGPDN,DG72=$S($D(^DG(405.2,+$P(DGPDN,"^",18),0)):$P(^(0),"^",8),1:0),DGTY=$S(DGDC:1,1:"")
"RTN","DGPTF",76,0)
 I DGDC F I=0:0 S I=$O(^DGPM("APMV",DFN,DGPMCA,I)) Q:I'>0  I $D(^DGPM(+$O(^(I,0)),0)),$P(^(0),"^",2)=2 S J=U_$P(^(0),"^",18)_U,DGTY=$S("^43^44^13^45^"[J:4,"^1^"[J:2,"^2^3^"[J:3,1:1) Q
"RTN","DGPTF",77,0)
 S X=$S($D(^DGPT(PTF,70)):^(70),1:"")
"RTN","DGPTF",78,0)
 S DR="70///"_$S(DGDC:"/"_DGDC,'X:"",1:"@")_$S(DG72:";72////"_DG72,1:"")_";72.1///"_$S(DGTY:"/"_DGTY,'$P(X,"^",14):"",1:"@"),DIE="^DGPT(",DA=PTF D ^DIE
"RTN","DGPTF",79,0)
 I DGDC>DT,$P(DGPDN,"^",18)=42 W:'$D(ZTQUEUED) !,"Discharge 'While ASIH' is in the future."
"RTN","DGPTF",80,0)
 K DG72,DGTY,DGPDN Q
"RTN","DGPTF",81,0)
 ;
"RTN","DGPTF",82,0)
UP S DIE="^DGPT(",DR="4///F",DA=PTF D ^DIE W !,"Pointer from Patient file is incorrect. Record changed to Fee Basis",! S DGPTFE=1 G GETD
"RTN","DGPTF1")
0^2^B34378858
"RTN","DGPTF1",1,0)
DGPTF1 ;ALB/JDS - PTF ENTRY/EDIT ; 5/17/05 3:29pm
"RTN","DGPTF1",2,0)
 ;;5.3;Registration;**69,114,195,397,342,415,565,664**;Aug 13, 1993;Build 15
"RTN","DGPTF1",3,0)
 ;
"RTN","DGPTF1",4,0)
 I '$D(IOF) S IOP="HOME" D ^%ZIS K IOP
"RTN","DGPTF1",5,0)
 S:'$D(IOST) IOST="C" S DGVI="""""",DGVO=DGVI I $D(IOST(0)) S:$D(^%ZIS(2,IOST(0),5)) I=^(5) S:$L($P(I,U,4)) DGVI=$P(I,U,4) S:$L($P(I,U,5)) DGVO=$P(I,U,5) I $L(DGVI_DGVO)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGPTF1",6,0)
WR G GET:'$D(A)!('$D(B)) W @IOF,HEAD,?72,@DGVI,"<101>",@DGVO
"RTN","DGPTF1",7,0)
FAC I $D(DGCST) W !?40,"Census Status: ",$P($P($P(^DD(45,6,0),"^",3),+DGCST_":",2),";")
"RTN","DGPTF1",8,0)
 W !! S Z=1 D Z W "   Facility: " S Z=$P(B(0),U,3)_$P(B(0),U,5),Z1=23 D Z1
"RTN","DGPTF1",9,0)
MAR S Z=2 D Z W " Marit Stat: ",$S($D(^DIC(11,+$P(A(0),U,5),0)):$P(^(0),U,1),1:"")
"RTN","DGPTF1",10,0)
SA W !," Source of Adm: ",$S($D(^DIC(45.1,+B(101),0)):$P(^(0),U,5),1:"")
"RTN","DGPTF1",11,0)
 N VADM D DEM^VADPT
"RTN","DGPTF1",12,0)
 W ?39,"Ethnic: " D
"RTN","DGPTF1",13,0)
 .I 'VADM(11) W "" Q
"RTN","DGPTF1",14,0)
 .N NODE,NUM,ETHNIC,I
"RTN","DGPTF1",15,0)
 .S I=0
"RTN","DGPTF1",16,0)
 .F NUM=0:1 S I=+$O(VADM(11,I)) Q:'I  D
"RTN","DGPTF1",17,0)
 ..S X=$$PTR2CODE^DGUTL4(+VADM(11,I),2,4)
"RTN","DGPTF1",18,0)
 ..S ETHNIC=$S(X="":"?",1:X)
"RTN","DGPTF1",19,0)
 ..S X=$$PTR2CODE^DGUTL4(+$G(VADM(11,I,1)),3,4)
"RTN","DGPTF1",20,0)
 ..S ETHNIC=ETHNIC_$S(X="":"?",1:X)
"RTN","DGPTF1",21,0)
 ..I NUM S ETHNIC=","_ETHNIC
"RTN","DGPTF1",22,0)
 ..W ETHNIC
"RTN","DGPTF1",23,0)
 W ?55,"Race: " D
"RTN","DGPTF1",24,0)
 .I 'VADM(12) W "" Q
"RTN","DGPTF1",25,0)
 .N NODE,NUM,RACE,I
"RTN","DGPTF1",26,0)
 .S I=0
"RTN","DGPTF1",27,0)
 .F NUM=0:1 S I=+$O(VADM(12,I)) Q:'I  D
"RTN","DGPTF1",28,0)
 ..S X=$$PTR2CODE^DGUTL4(+VADM(12,I),1,4)
"RTN","DGPTF1",29,0)
 ..S RACE=$S(X="":"?",1:X)
"RTN","DGPTF1",30,0)
 ..S X=$$PTR2CODE^DGUTL4(+$G(VADM(12,I,1)),3,4)
"RTN","DGPTF1",31,0)
 ..S RACE=RACE_$S(X="":"?",1:X)
"RTN","DGPTF1",32,0)
 ..I NUM S RACE=","_RACE
"RTN","DGPTF1",33,0)
 ..W RACE
"RTN","DGPTF1",34,0)
 K VADM
"RTN","DGPTF1",35,0)
 W !," Source of Pay: " S L=";"_$P(^DD(45,22,0),U,3),L1=";"_$P(B(101),U,3)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTF1",36,0)
SEX S SEX=$P(A(0),U,2) W ?39,"           Sex: ",$S(SEX="M":"MALE",SEX="F":"FEMALE",1:"")
"RTN","DGPTF1",37,0)
 W !,"Trans Facility: ",$P(B(101),U,5)_$P(B(101),U,6)
"RTN","DGPTF1",38,0)
DOB S DOB=$P(A(0),U,3),Y=DOB D D^DGPTUTL W ?39," Date of Birth: ",Y
"RTN","DGPTF1",39,0)
CAT I DGPTFMT<2 W !,"    Cat of Ben: ",$S($D(^DIC(45.82,+$P(B(101),U,4),0)):$E($P(^(0),U,2),1,26),1:"")
"RTN","DGPTF1",40,0)
 W:$X>50 !
"RTN","DGPTF1",41,0)
 W "    Admit Elig: "_$S(+$P(B(101),U,8):$P($G(^DIC(8,+$P(B(101),U,8),0)),U),1:"UNKNOWN") W ?50,"SCI: " S L=";"_$P(^DD(2,57.4,0),U,3),L1=";"_$P(A(57),U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTF1",42,0)
VIET W ! S Z=3 D Z W "Vietnam SRV: " S L=$P(A(.321),U,1),Z=$S(L="Y":"YES",L="N":"NO",1:"UNKNOWN"),Z1=27 D Z1
"RTN","DGPTF1",43,0)
ST S Z=4 D Z W $S('$$FORIEN^DGADDUTL($P(A(.11),U,10))!('$P(A(.11),U,10)):"  State: "_$S($D(^DIC(5,+$P(A(.11),U,5),0)):$P(^(0),U,1),1:""),1:"Country: "_$$CNTRYI^DGADDUTL($P(A(.11),U,10)))
"RTN","DGPTF1",44,0)
POW W !?11,"POW: " S L=$P(A(.52),U,5) W $S(L="Y":"YES",L="N":"NO",1:"UNKNOWN")
"RTN","DGPTF1",45,0)
ZIP W ?42,$S('$$FORIEN^DGADDUTL($P(A(.11),U,10))!('$P(A(.11),U,10)):"   Zip Code: "_$P(A(.11),U,6),1:"Postal Code: "_$P(A(.11),U,9))
"RTN","DGPTF1",46,0)
POS W !,?6," POW SRV: " S L=$P(A(.52),U,6) W $E($S($D(^DIC(22,+L,0)):$P(^(0),U,1),1:""),1,23)
"RTN","DGPTF1",47,0)
COU W ?45,$S('$$FORIEN^DGADDUTL($P(A(.11),U,10))!('$P(A(.11),U,10)):"  County: "_$S($D(^DIC(5,+$P(A(.11),U,5),1,+$P(A(.11),U,7),0)):$P(^(0),U,1),1:""),1:"Province: "_$P(A(.11),U,8))
"RTN","DGPTF1",48,0)
ION W !,"   Ion Rad Exp: " S L=$P(A(.321),U,3) W $S(L="Y":"YES",L="N":"NO",1:"UNKNOWN")
"RTN","DGPTF1",49,0)
METH S L=$P(A(.321),U,12) W:L'="" ?38,"Exposure Method: ",$S(L="N":"Nagasaki/Hiroshima",L="T":"Nuclear Testing",L="B":"Both",1:"")
"RTN","DGPTF1",50,0)
AO W !,"    AO Exp/Loc: " S L=$P(A(.321),U,2) W $S(L="Y":"YES",L="N":"NO",1:"UNKNOWN")
"RTN","DGPTF1",51,0)
 S L=$P(A(.321),U,13) W:L'="" $S(L="V":"/VIET",L="K":"/DMZ",L="O":"/OTHER",1:"")
"RTN","DGPTF1",52,0)
SHAD W ?40,"PROJ 112/SHAD: ",$S(A("SHAD")=1:"YES",1:"NO")
"RTN","DGPTF1",53,0)
MST W !,"    Claims MST: " S L=$P(A("MST"),U) W $S(L="Y":"YES",L="N":"NO",L="D":"DECLINED TO ANSWER",1:"UNKNOWN") ; added 6/17/98 for MST enhancement
"RTN","DGPTF1",54,0)
NTR W ?39,"    N/T Radium: " S L=A("NTR") W $E($S(L'="":L,1:"UNKNOWN"),1,25)
"RTN","DGPTF1",55,0)
CV S L=$S($P(A("CV"),U,1)>0:1,1:0)
"RTN","DGPTF1",56,0)
 W !,"Combat Veteran: ",$S(L:"YES",1:"NO")
"RTN","DGPTF1",57,0)
 I L S Y=$P(A("CV"),U,2) D D^DGPTUTL W ?45,"End Date: ",Y
"RTN","DGPTF1",58,0)
 ;
"RTN","DGPTF1",59,0)
 D EN^DGPTF4 K A,B Q:DGPR
"RTN","DGPTF1",60,0)
 ;
"RTN","DGPTF1",61,0)
JUMP F I=$Y:1:20 W !
"RTN","DGPTF1",62,0)
 G 101^DGPTFJC:DGN S (DGZM0,DGZS0)=0
"RTN","DGPTF1",63,0)
 R "Enter:  <RET> for <MAS>,",!,"1-7 to edit,'^N' for screen N, or '^' to abort: <MAS>// ",X:DTIME S:'$T X="^",DGPTOUT=""
"RTN","DGPTF1",64,0)
 G ^DGPTFM:X="",Q:X="^"
"RTN","DGPTF1",65,0)
 I X?1"^".E S DGPTSCRN=101 G ^DGPTFJ
"RTN","DGPTF1",66,0)
 G PR:X?.N&($L(X)>2)
"RTN","DGPTF1",67,0)
 I X["-" S K=X,X="" F I=1:1 S J=$P(K,",",I) Q:J']""  I +J<8 S:J'["-" X=X_J_"," I J["-"&(+J) I +J<+$P(J,"-",2) F L=+J:1:+$P(J,"-",2) S:L<8 X=X_L_","
"RTN","DGPTF1",68,0)
 I X'[",",1234567'[X G PR
"RTN","DGPTF1",69,0)
 F I=1:1 S J=$P(X,",",I) Q:'J  G:J<1!(J>7)!(J'?1N) PR
"RTN","DGPTF1",70,0)
 I X<1!(X>7) G PR
"RTN","DGPTF1",71,0)
 S (PT(1),PT(2))="",DGJUMP=X,DA=PTF,DIE="^DGPT(",DR="[DG101"_$E("F",DGPTFE)_"]" D ^DIE
"RTN","DGPTF1",72,0)
 ;--
"RTN","DGPTF1",73,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTF1",74,0)
 I '$G(DGADM) S DGADM=+^DGPT(PTF,0)
"RTN","DGPTF1",75,0)
 D MT^DGPTUTL
"RTN","DGPTF1",76,0)
GET F I=.32,.52,57,.521,0,.321,.11,.3 S A(I)="" S:$D(^DPT(DFN,I))&('DGST) A(I)=^(I) I DGN S:$D(^DGP(45.84,PTF,$S('I:10,1:I))) A(I)=^($S('I:10,1:I))
"RTN","DGPTF1",77,0)
 ; The following line added for MST enhancement 4/21/99
"RTN","DGPTF1",78,0)
 S A("MST")=$P($$GETSTAT^DGMSTAPI(DFN),U,2,5)
"RTN","DGPTF1",79,0)
 K DGNTARR
"RTN","DGPTF1",80,0)
 S A("NTR")=$S($$GETCUR^DGNTAPI(DFN,"DGNTARR")>0:DGNTARR("INTRP"),1:"")
"RTN","DGPTF1",81,0)
 K DGNTARR
"RTN","DGPTF1",82,0)
 F I=0,101,70 S B(I)="" S:$D(^DGPT(PTF,I)) B(I)=^(I)
"RTN","DGPTF1",83,0)
 S DGDD=+B(70),DGFC=+$P(B(0),U,3)
"RTN","DGPTF1",84,0)
 S A("CV")=$$CVEDT^DGCV(DFN,$P($G(B(0)),U,2))
"RTN","DGPTF1",85,0)
 S A("SHAD")=$$GETSHAD^DGUTL3(DFN)
"RTN","DGPTF1",86,0)
 K PT G DGPTF1
"RTN","DGPTF1",87,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (screen # appears in upper right of screen '<N>')",!,"<RET> to continue on to the next screen or 1-7 to edit:"
"RTN","DGPTF1",88,0)
 W !?10,"1-Facility, Source of admis, Payment, Transf facil, and Cat. of Benef",!?10,"2-Marital Stat, Race, Ethnicity, Sex, SCI, DOB"
"RTN","DGPTF1",89,0)
 W !?10,"3-Agent Orange, Prisoner of War, Ionizing Radiation, MST, N/T Radium",!?10,"4-State, County, Zip code"
"RTN","DGPTF1",90,0)
 W !?10,"5-Discharge date, type & specialty",!?10,"6-Outpatient treat & VA Auspices",!?10,"7-Receiving Facility, ASIH Days & C&P Status"
"RTN","DGPTF1",91,0)
 W !,"You may also enter any combination of the above, separated by commas(ex:1,3,5)",!
"RTN","DGPTF1",92,0)
 R !!,"Enter <RET> : ",X:DTIME G WR
"RTN","DGPTF1",93,0)
Q G Q^DGPTF
"RTN","DGPTF1",94,0)
 Q
"RTN","DGPTF1",95,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTF1",96,0)
 E  W "   "
"RTN","DGPTF1",97,0)
 Q
"RTN","DGPTF1",98,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTF1",99,0)
 W Z
"RTN","DGPTFM")
0^11^B44873663
"RTN","DGPTFM",1,0)
DGPTFM ;ALB/MTC - PTF OP-PRO-DIAG ;7/22/05 9:18am
"RTN","DGPTFM",2,0)
 ;;5.3;Registration;**510,517,590,594,606,635,683,696,664**;Aug 13, 1993;Build 15
"RTN","DGPTFM",3,0)
 K M,S,M1,M2,M3,S1,S2,PS2,SDCLY,^TMP("PTF",$J)
"RTN","DGPTFM",4,0)
GET S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S (M3(I1),M(I1))=^(I,0) I $D(^DGPT(PTF,"M",I,"P")) S $P(M(I1),U,20)=^("P")
"RTN","DGPTFM",5,0)
 K MT D ORDER^DGPTF K MT D GETVAR^DGPTFM6,CL^SDCO21(DFN,$P(^DGPT(PTF,0),U,2),"",.SDCLY),MOB^DGPTFM2
"RTN","DGPTFM",6,0)
 S DGPC=I1-1 D WR K M1,M2,^UTILITY($J) S ST=1,M2=0
"RTN","DGPTFM",7,0)
DIAG K DGZSER,DGZPRO,DGZSUR S DGZDIAG=1 F J=ST:2:PM S NL=1,L5=0,L6=J D WD2 S L5=1,L6=J+1 D:$D(M(L6)) WD2 D WD G PRO1:$Y>16 D WD3^DGPTFM8 G PRO1:$Y>16 W !
"RTN","DGPTFM",8,0)
 S ST=1 G SER
"RTN","DGPTFM",9,0)
WD F J1=1:1:11 I J1'=6 S L=$P(M(J),U,J1+4),L1=0,L3=1 D:+L WD1 S L1=1,L=$S($D(M(J+1)):$P(M(J+1),U,J1+4),1:"") D:+L WD1
"RTN","DGPTFM",10,0)
 Q
"RTN","DGPTFM",11,0)
WD1 S N=$$ICDDX^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(N:$P(N,U,2,99),1:""),M2=M2+1,L4=$P(L2,"^",1),L4=L4_$E("   ",1,3-$L($P(L4,".",2)))
"RTN","DGPTFM",12,0)
 W:L3 ! S:L3 L3=0 W ?L1*40,$J(M2,3)," ",$J(L4,7)," ",$E($P(L2,U,3),1,25) K ^UTILITY($J,"M2",M2) S ^UTILITY($J,"M2",M2)=+M(J+L1)_U_J1 Q
"RTN","DGPTFM",13,0)
WD2 N Z3
"RTN","DGPTFM",14,0)
 X:NL "W ! S NL=0" W ?L5*40,"Move #",+L6 S Z=M(L6),Z3=M3(L6) W:+Z=1 " D/C" S Y=$P(Z,U,10)\1 D D^DGPTUTL W " ",Y," "
"RTN","DGPTFM",15,0)
 W " <",$S($P(Z3,U,18)=1:"",1:"N"),"SC"_$S($P(Z3,U,26)="Y":",AO",1:"")_$S($P(Z3,U,27)="Y":",IR",1:"")_$S($P(Z3,U,28)="Y":",SWAC",1:"")_$S($P(Z3,U,32)="Y":",SHAD",1:"")_">"
"RTN","DGPTFM",16,0)
 I $D(^DIC(42.4,+$P(Z,U,2),0)) D
"RTN","DGPTFM",17,0)
 . I $P(^DIC(42.4,+$P(Z,U,2),0),U,2)'="" W $E($P(^DIC(42.4,+$P(Z,U,2),0),U,2),1,10)
"RTN","DGPTFM",18,0)
 . E  W $E($P(^(0),U,1),1,10)
"RTN","DGPTFM",19,0)
 Q
"RTN","DGPTFM",20,0)
NDG D WR S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:I'>0  S M(I1)=^(I,0)
"RTN","DGPTFM",21,0)
 S PM=I1-1 D ORDER^DGPTF K MT G DIAG:$D(ST) G GET S ST=1
"RTN","DGPTFM",22,0)
SER K DGZDIAG,DGZPRO,DGZSUR S DGZSER=1 G PRO1:$Y>19 K S1,S2 S S2=0 G SERV:ST G PRO
"RTN","DGPTFM",23,0)
SERV F J=ST:2:SU S NL=1,L5=0,L6=J D SD2 S L5=1,L6=J+1 D:$D(S(L6)) SD2 D SD G PRO1:$Y>11 D SD3^DGPTFM8 G PRO1:$Y>11 W !
"RTN","DGPTFM",24,0)
 G PRC^DGPTFM0
"RTN","DGPTFM",25,0)
SD F J1=1:1:5 S L=$P(S(J),U,J1+7),L1=0,L3=1 D:+L SD1 S L1=1,L=$S($D(S(J+1)):$P(S(J+1),U,J1+7),1:"") D:+L SD1
"RTN","DGPTFM",26,0)
 Q
"RTN","DGPTFM",27,0)
SD1 S N=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(N:$P(N,U,2,99),1:""),S2=S2+1,L4=$P(L2,"^",1),L4=L4_$E("   ",1,3-$L($P(L4,".",2)))
"RTN","DGPTFM",28,0)
 W:L3 ! S:L3 L3=0 W ?L1*40,$J(S2,3)," ",$J(L4,7)," ",$E($P(L2,U,4),1,25) K S2(S2) S S2(S2)=J+L1_U_J1 Q
"RTN","DGPTFM",29,0)
SD2 S Y=+S(L6) D D^DGPTUTL W:NL ! S:NL NL=0 W ?L5*40,L6,"-Surgery date: ",Y
"RTN","DGPTFM",30,0)
 Q
"RTN","DGPTFM",31,0)
NSR K S,S1,S2 S I=0 F I1=1:1 S I=$O(^DGPT(PTF,"S",I)) Q:I'>0  S S(I1)=^(I,0),S(I1,1)=I
"RTN","DGPTFM",32,0)
 S S2=0,SU=I1-1 D WR G SERV
"RTN","DGPTFM",33,0)
 ;
"RTN","DGPTFM",34,0)
WR W @IOF,HEAD,?70 S Z="<MAS>" D Z Q
"RTN","DGPTFM",35,0)
PRO K DGZSER,DGZDIAG,DGZSUR S DGZPRO=1 G PRO1:$Y>14 K P1,P2 S ST=1,P2=0 G NPR:'$D(PROC)
"RTN","DGPTFM",36,0)
PROC D:$Y>14 WR W:PROC]"" !!,"Procedures: ",!
"RTN","DGPTFM",37,0)
 F J1=1:1:5 S L=$P(PROC,"^",J1) I L'="" S P2=P2+1,N=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)),L2=$S(N:$P(N,U,2,99),1:""),L4=$P(L2,U,1),L4=L4_$E("   ",1,3-$L($P(L4,".",2))) D
"RTN","DGPTFM",38,0)
 .W:$X>5 ?40 W $J(P2,3)," ",$J(L4,7)," ",$E($P(L2,"^",4),1,25) K P2(P2) S P2(P2)=J1 W:$X>45 !
"RTN","DGPTFM",39,0)
 K DGZSER,DGZPRO,DGZDIAG,DGZSUR
"RTN","DGPTFM",40,0)
ENC G PRO1:$Y>7,PRO1:'$P(DGZPRF,U,3)
"RTN","DGPTFM",41,0)
PF S PS2=0,J=+DGZPRF,Y=+DGZPRF(J),DGSTRT=$S(+$P(DGZPRF,U,4):$P(DGZPRF,U,4),1:4),DGLST=0
"RTN","DGPTFM",42,0)
 D CL^SDCO21(DFN,+DGZPRF(J),"",.SDCLY),ICDINFO^DGAPI(DFN,PTF),XREF^DGPTFM21 ; load SCI info and DGN's for this service date
"RTN","DGPTFM",43,0)
 D D^DGPTUTL W !,J,"-CPT Capture Date/Time: ",Y W:($P(DGZPRF,U,2)-1!($G(PGBRK))) " (cont.)"
"RTN","DGPTFM",44,0)
 I $P(DGZPRF(J),U,2) W !,?5,"Referring or Ordering Provider: " S L=$P(DGZPRF(J),U,2) D PRV
"RTN","DGPTFM",45,0)
 W !,?5,"Rendering Provider: " S L=$P(DGZPRF(J),U,3) D PRV
"RTN","DGPTFM",46,0)
 I $P(DGZPRF(J),U,5) W !,?5,"Rendering Location: ",$P($G(^SC($P(DGZPRF(J),U,5),0)),U)
"RTN","DGPTFM",47,0)
 S (L1,PGBRK)=0
"RTN","DGPTFM",48,0)
 F K=$P(DGZPRF,U,2):1 Q:'$D(DGZPRF(J,K))  I '$G(DGZPRF(J,K,9)) S PS2=PS2+1 W !,?2,PS2," " D CPT^DGPTUTL1 D  Q:$Y+$G(DGZPRF(J,K+1,1))>16!($G(PGBRK))
"RTN","DGPTFM",49,0)
 . W !,?4 S $P(DS,"-",27)="" W DS," Related Diagnosis ",DS
"RTN","DGPTFM",50,0)
 . F L1=DGSTRT:1:11 S DGLOC=$S(L1<8:L1,1:L1+7),CD=$P(DGZPRF(J,K),U,DGLOC) I CD D  I $Y+$G(CKSCI)>16 S PGBRK=1 Q
"RTN","DGPTFM",51,0)
 . . S N=$$ICDDX^ICDCODE(CD,$$GETDATE^ICDGTDRG(PTF)),N=$S(N:$P(N,U,2,99),1:"")
"RTN","DGPTFM",52,0)
 . . S CD=$P(N,U) W !,?8,CD,"   ",$P(N,U,3)
"RTN","DGPTFM",53,0)
 . . D CKSCI($P(DGZPRF(J,K),U,DGLOC))
"RTN","DGPTFM",54,0)
 . S PS2(PS2)=J_U_K,CD=1,DGLOC=0,DGSTRT=4
"RTN","DGPTFM",55,0)
 I L1'=11,$S(L1<8:$P($G(DGZPRF(J,K)),U,L1+1,7),1:"")_$P($G(DGZPRF(J,K)),U,$S(L1<8:15,1:L1+8),18)?."^" S L1=11
"RTN","DGPTFM",56,0)
 I L1=11 S $P(DGZPRF,U,1,2)=$S($D(DGZPRF(J,K+1)):J_U_(K+1),1:J+1_U_1),$P(DGZPRF,U,4)="",PGBRK=0
"RTN","DGPTFM",57,0)
 E  S $P(DGZPRF,U,1,2)=J_U_K,$P(DGZPRF,U,4)=L1+1
"RTN","DGPTFM",58,0)
 ;I '$D(DGZPRF(J,K+1)) S $P(DGZPRF,U,1,2)=$S($P($G(DGZPRF(J,K)),U,NXTDGN)'="":J,1:J+1)_U_1,$P(DGZPRF,U,4)=DGLST
"RTN","DGPTFM",59,0)
 ;I $D(DGZPRF(J,K+1)) S $P(DGZPRF,U,1,2)=J_U_(K+1)
"RTN","DGPTFM",60,0)
 K I,K,L,L1,CD,N G PRO1
"RTN","DGPTFM",61,0)
 ;
"RTN","DGPTFM",62,0)
CKSCI(IEN)      ;print SCI for each Diagnosis code
"RTN","DGPTFM",63,0)
 N DGINFO Q:'$D(XREF(IEN))
"RTN","DGPTFM",64,0)
 S DGINFO=$G(^DGICD9(46.1,(XREF(IEN)),0)),CKSCI=0
"RTN","DGPTFM",65,0)
 I 'DGINFO Q
"RTN","DGPTFM",66,0)
 F I=3,7,1,2,4,5,6,8 I $D(SDCLY(I)) S L=$S(I=3:8,I<4:8+I,1:7+I) D
"RTN","DGPTFM",67,0)
 .W ?45 S M=1,CKSCI=CKSCI+1
"RTN","DGPTFM",68,0)
 .W $P("Treated for AO Condition^Treated for IR Condition^Treated for SC Condition^Exposed to SW Asia Conditions^Treatment for MST^Treatment for Head/Neck CA^Related to Combat^Treatment for SHAD Condition",U,I)
"RTN","DGPTFM",69,0)
 .W ":",$S($P(DGINFO,U,($S(I<3:I+2,I=3:2,1:I+1))):"YES",1:"NO"),!
"RTN","DGPTFM",70,0)
 Q  ;CKSCI
"RTN","DGPTFM",71,0)
 ;
"RTN","DGPTFM",72,0)
NPR S ST=1,PROC=$S($D(^DGPT(PTF,"401P")):^("401P"),1:"") D WR G PRO
"RTN","DGPTFM",73,0)
 ;
"RTN","DGPTFM",74,0)
NPS D WR G PF
"RTN","DGPTFM",75,0)
 ;
"RTN","DGPTFM",76,0)
DONE G EN1^DGPTF4
"RTN","DGPTFM",77,0)
PRO1 ;SET MENU TYPE AND DISPLAY MENU
"RTN","DGPTFM",78,0)
 N ICDVDT,ICPTVDT
"RTN","DGPTFM",79,0)
 S (ICDVDT,ICPTVDT)=$S($D(PTF):$$GETDATE^ICDGTDRG(PTF),1:DT)
"RTN","DGPTFM",80,0)
 S DGNUM=$S($D(DGZDIAG)!($D(DGZPRO))!($D(DGZSER))!($D(DGZSUR)!(+DGZPRF-1'=$P(DGZPRF,U,3))):"MAS",1:"701") G MAS^DGPTFJC:DGST F X=$Y:1:(IOSL-8) W !
"RTN","DGPTFM",81,0)
 W !! S Z="Patient Movements:" W Z S Z=" "_$S(DGPTFE:"M=Add PM  X=Delete PM",1:"M=Edit Treat Spec/PM ")_"  A=Add Code  D=Delete Code  V=Edit Mov" W Z
"RTN","DGPTFM",82,0)
 W ! S Z="Surgical Episodes:" W Z S Z=" S=Add SE  Z=Delete SE  O=Add Code  C=Delete Code  J=Edit SE" W Z
"RTN","DGPTFM",83,0)
 W ! S Z="Procedure Records:" W Z S Z=" T=Add PR  R=Delete PR  P=Add Code  Q=Delete Code  E=Edit PR" W Z
"RTN","DGPTFM",84,0)
 W ! S Z="801:" W Z S Z=" I=Add 801  Y=Delete 801  N=Add CPT  G=Delete CPT F=Edit 801" W Z K Z
"RTN","DGPTFM",85,0)
 W !,"                   ^=Abort   <RET> to Continue:<",DGNUM,">// " R ANS:DTIME K DGNUM
"RTN","DGPTFM",86,0)
A S Z="^C Delete Code^A Add Code^O Add Code^P Add NOP^S Add SE^D Delete Code^M Add PM^X Delete PM^Z Delete SE^J Edit SE^Q Delete NOP^V Edit Move^"
"RTN","DGPTFM",87,0)
 S Z=Z_"T Add PR^R Delete PR^E Edit PR^I Add 801^Y Delete 801^N Add CPT^G Delete CPT^F Edit 801"
"RTN","DGPTFM",88,0)
 I 'DGPTFE S $P(Z,U,8,9)="M Edit treat Spec/PM"
"RTN","DGPTFM",89,0)
 S X=ANS G Q^DGPTF:ANS="^" G ^DGPTFJ:ANS?1"^".E S (A,X)=ANS,X=$E(X,1) D IN^DGHELP
"RTN","DGPTFM",90,0)
 I $P(^DGPT(PTF,0),U,4),X'="","IYNGF"[X W !,"***WARNING: This is a Fee Basis PTF record*** 801 encounters are not allowed." H 3 G DGPTFM
"RTN","DGPTFM",91,0)
 I ANS="" S (ST,ST1)=J+2 D:$D(DGZSUR) WR G @($S($D(DGZDIAG):"NDG",$D(DGZSER):"NSR",$D(DGZPRO):"NPR",$D(DGZSUR):"EN^DGPTFM0",+DGZPRF-1'=$P(DGZPRF,U,3):"NPS",1:"DONE"))
"RTN","DGPTFM",92,0)
 G HELP^DGPTFM1A:%=-1 S Z=$L(A)-1 G @(X_$S(X="X":"",1:"^DGPTFM1"))
"RTN","DGPTFM",93,0)
PRV I $D(^VA(200,L,0)) W $P(^(0),U) Q
"RTN","DGPTFM",94,0)
 W L Q
"RTN","DGPTFM",95,0)
X ;
"RTN","DGPTFM",96,0)
 I 'Z S:PM=1 RC=1 G X1:PM=1 W !!,"Delete Patient move <1",$S(PM<3:"",1:"-"_(PM-1)),">: " R RC:DTIME G ^DGPTFM:RC["^"!(RC="")
"RTN","DGPTFM",97,0)
 E  S RC=$E(A,2,99) W !
"RTN","DGPTFM",98,0)
 I +RC'=RC!('$D(M(RC))) W !!,"Enter the record # to delete from the PTF file, 1",$S(PM<3:"",1:"-"_(PM-1)) S Z=0 G X
"RTN","DGPTFM",99,0)
X1 I +M(RC)=1 W !,*7,"Cannot delete discharge movement",! H 3 G ^DGPTFM
"RTN","DGPTFM",100,0)
 S DIE="^DGPT("_PTF_",""M"",",DP=45.02,DR=".01///@",DA(1)=PTF,DA=+M(RC) D ^DIE K DR W "  ",RC,"-DELETED***" H 2 G ^DGPTFM
"RTN","DGPTFM",101,0)
Z W @DGVI,Z,@DGVO Q
"RTN","DGPTFM",102,0)
EN D WR G EN^DGPTFM0
"RTN","DGPTFM4")
0^12^B28277134
"RTN","DGPTFM4",1,0)
DGPTFM4 ;ALB/MTC/ADL - PTF ENTRY/EDIT-2 ; 12/18/07 11:37am
"RTN","DGPTFM4",2,0)
 ;;5.3;Registration;**114,195,397,510,565,775,664**;Aug 13, 1993;Build 15
"RTN","DGPTFM4",3,0)
 ;;ADL;Update for CSV Project;;Mar 26, 2003
"RTN","DGPTFM4",4,0)
 ;
"RTN","DGPTFM4",5,0)
 S DGZM0=DGZM0+1
"RTN","DGPTFM4",6,0)
EN N M3 D MOB:'$D(M) S M(DGZM0)=$S($D(M(DGZM0)):M(DGZM0),1:"") G NEXM:M(DGZM0)="" S (M3,M(DGZM0),M1)=$S($D(^DGPT(PTF,"M",+M(DGZM0),0)):^DGPT(PTF,"M",+M(DGZM0),0),1:"")
"RTN","DGPTFM4",7,0)
 I $D(^DGPT(PTF,"M",+M(DGZM0),"P")) S $P(M(DGZM0),U,20)=^("P"),$P(M1,U,20)=^("P")
"RTN","DGPTFM4",8,0)
WR S DG300=$S($D(^DGPT(PTF,"M",+M(DGZM0),300)):^(300),1:"")
"RTN","DGPTFM4",9,0)
 W @IOF,HEAD,?70 S Z="<501-"_DGZM0_">" D Z^DGPTFM I +M(DGZM0)=1 W !,?62,"Discharge Movement"
"RTN","DGPTFM4",10,0)
M S L=+$P(M1,U,10),Y=L D D^DGPTUTL W !! S Z=1 D Z W "Date of Move: " S Z=Y,Z1=20 D Z1 W "Losing Specialty: ",$E($S($D(^DIC(42.4,+$P(M1,U,2),0)):$P(^(0),U,1),1:""),1,25)
"RTN","DGPTFM4",11,0)
 W !,"     Leave days: ",$P(M1,U,3),?44,"Pass days: ",$P(M1,U,4)
"RTN","DGPTFM4",12,0)
 W !,"Treated for SC Condition: ",$S($P(M3,U,18)=1:"Yes",1:"No")
"RTN","DGPTFM4",13,0)
 N NL S NL=0
"RTN","DGPTFM4",14,0)
 I $P(M3,U,31)'="" W @($S(NL#2:"!",1:"?37")),"Potentially Related to Combat: ",$S($P(M3,U,31)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",15,0)
 I $P(M3,U,26)'="" W @($S(NL#2:"!",1:"?37")),"Treated for AO Condition: ",$S($P(M3,U,26)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",16,0)
 I $P(M3,U,27)'="" W @($S(NL#2:"!",1:"?37")),"Treated for IR Condition: ",$S($P(M3,U,27)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",17,0)
 I $P(M3,U,28)'="" W @($S(NL#2:"!",1:"?37")),"Treated for service in SW Asia: ",$S($P(M3,U,28)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",18,0)
 ; added 6/17/98 for MST enhancement
"RTN","DGPTFM4",19,0)
 I $P(M3,U,29)'="" W @($S(NL#2:"!",1:"?37")),"Treated for MST Condition: ",$S($P(M3,U,29)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",20,0)
 K DGNTARR
"RTN","DGPTFM4",21,0)
 S DGNTARR=$$GETCUR^DGNTAPI(DFN,"DGNTARR")
"RTN","DGPTFM4",22,0)
 I $P(M3,U,30)="",(",3,4,5,"[(","_$P($G(DGNTARR("STAT")),U)_",")) S $P(M3,U,30)="N"
"RTN","DGPTFM4",23,0)
 I $P(M3,U,30)'="" W @($S(NL#2:"!",1:"?37")),"Treated for HEAD/NECK CA Condition: ",$S($P(M3,U,30)="Y":"Yes",1:"No") S NL=NL+1
"RTN","DGPTFM4",24,0)
 I $P(M3,U,32)'="" W @($S(NL#2:"!",1:"?37")),"Treated for Project 112/SHAD: ",$S($P(M3,U,32)="Y":"Yes",1:"No")
"RTN","DGPTFM4",25,0)
 K NL
"RTN","DGPTFM4",26,0)
 W !! S Z=2 D Z W "          DX: " F I=1:1:11 S L=$P(M1,U,I+4) I L'=""&(I'=6) S DGPTTMP=$$ICDDX^ICDCODE(+L,$$GETDATE^ICDGTDRG(PTF)) D 
"RTN","DGPTFM4",27,0)
 . W $S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,4)_" ("_$P(DGPTTMP,U,2)_")",1:"**********-"_L),!?17
"RTN","DGPTFM4",28,0)
 D PRN2^DGPTFM8:DG300]""
"RTN","DGPTFM4",29,0)
 I $P(M1,U,20) S DRG=$P(M1,U,20) W:DRG=998!(DRG=999)!((DRG=468!(DRG=469)!(DRG=470))&(+$P($G(M1),U,10)<3071001)) *7 W !!?14,"TRANSFER DRG: ",DRG D
"RTN","DGPTFM4",30,0)
 . N DXD,DGDX
"RTN","DGPTFM4",31,0)
 . S DXD=$$DRGD^ICDGTDRG(DRG,"DGDX",,$P(M1,U,10)),DGDS=0
"RTN","DGPTFM4",32,0)
 . F  S DGDS=$O(DGDX(DGDS)) Q:'+DGDS  Q:DGDX(DGDS)=" "  W !,DGDX(DGDS)
"RTN","DGPTFM4",33,0)
JUMP K DG300 F I=$Y:1:21 W !
"RTN","DGPTFM4",34,0)
X S DGNUM=$S($D(M(DGZM0+1)):501_"-"_(DGZM0+1),1:"MAS") G 501^DGPTFJC:DGST
"RTN","DGPTFM4",35,0)
 W "Enter <RET> to continue, 1-2 to edit,",!,"'M' ",$S(DGPTFE:" to add a patient movement",1:"to edit Treat. Specialty"),", '^N' for screen N, or '^' to abort:<",DGNUM,">// " R X:DTIME
"RTN","DGPTFM4",36,0)
 K DGNUM G Q:X="^",NEXM:X="",^DGPTFJ:X?1"^".E,M^DGPTFM1:X="M"!(X="m")
"RTN","DGPTFM4",37,0)
X1 I X[1!(X[2) S DR="[DG501"_$E("F",DGPTFE) X:(+M(DGZM0)=1) "S J=^DGPT(PTF,""M"",1,0) F I=11:1:15 I $P(J,U,I) S DR=DR_1" S DR=DR_"]",DGJUMP=X,DIE="^DGPT(",(DA,DGPTF)=PTF,DGMOV=+M(DGZM0) D ^DIE K M,DR,DIE D CHK501^DGPTSCAN K DGPTF,DGMOV
"RTN","DGPTFM4",38,0)
 ; Determine if NTR HISTORY (#28.11) filer is called if question for
"RTN","DGPTFM4",39,0)
 ;  'Treated for Head/Neck CA Condition:' is answered YES.
"RTN","DGPTFM4",40,0)
 ; Only a NTR screening status of 3=PENDING DIAGNOSIS gets Filed.
"RTN","DGPTFM4",41,0)
 I $P($G(M3),U,30)="Y",$P($G(DGNTARR("STAT")),U)=3 D
"RTN","DGPTFM4",42,0)
 .S DGNTARR=$$FILEHNC^DGNTAPI1(DFN)
"RTN","DGPTFM4",43,0)
 K DGNTARR
"RTN","DGPTFM4",44,0)
 ;- update MT indicator after edit movement
"RTN","DGPTFM4",45,0)
 N DGPMCA,DGPMAN D PM^DGPTUTL
"RTN","DGPTFM4",46,0)
 I '$G(DGADM) S DGADM=+^DGPT(PTF,0)
"RTN","DGPTFM4",47,0)
 D MT^DGPTUTL
"RTN","DGPTFM4",48,0)
 G EN
"RTN","DGPTFM4",49,0)
PR W !,"Enter '^' to stop the display and edit of data",!,"'^N' to jump to screen #N (appears in upper right of screen '<N>'",!,"<RET> to continue on to the next screen or 1-2 to edit:"
"RTN","DGPTFM4",50,0)
 W !?10,"1-",$S(DGPTFE:"Date of movement, Losing Specialty, ",1:""),"Leave and Pass days",!?10,"2-ICD DIAGNOSIS CODES"
"RTN","DGPTFM4",51,0)
 W !,"You may also enter 1-2",!
"RTN","DGPTFM4",52,0)
 R !!,"Enter <RET>: ",X:DTIME G WR
"RTN","DGPTFM4",53,0)
 Q
"RTN","DGPTFM4",54,0)
NEXM S DGZM0=DGZM0+1 G ^DGPTFM:'$D(M(DGZM0)),EN
"RTN","DGPTFM4",55,0)
ADD S DGZM0=$S($D(DGZM0):DGZM0+1,1:0) S L=$S($D(^DGPT(PTF,"M",0)):^(0),1:"^45.02DA^^"),L1=$P(L,U,3) F I=1:1 Q:'$D(^DGPT(PTF,"M",L1+I))
"RTN","DGPTFM4",56,0)
 S DA(1)=PTF,DIC="^DGPT("_DA(1)_",""M"",",X=L1+I,DIC(0)="LMZQE" D ^DIC K DIC,DIE G ^DGPTFM:Y'>0
"RTN","DGPTFM4",57,0)
 S M(DGZM0)=L1+I S X="1-2" G X1
"RTN","DGPTFM4",58,0)
 Q
"RTN","DGPTFM4",59,0)
MOB S I=0 K M,M1,M2 S M2=0 F I1=1:1 S I=$O(^DGPT(PTF,"M",I)) Q:'I  S M(I1)=^(I,0)
"RTN","DGPTFM4",60,0)
 S PM=I1-1 D ORDER^DGPTF Q
"RTN","DGPTFM4",61,0)
Q G Q^DGPTF
"RTN","DGPTFM4",62,0)
Z I 'DGN S Z=$S(IOST="C-QUME"&($L(DGVI)'=2):Z,1:"["_Z_"]") W @DGVI,Z,@DGVO
"RTN","DGPTFM4",63,0)
 E  W "   "
"RTN","DGPTFM4",64,0)
 Q
"RTN","DGPTFM4",65,0)
Z1 F I=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGPTFM4",66,0)
 W Z
"RTN","DGPTFM4",67,0)
 Q
"RTN","DGPTFM4",68,0)
R ;DELETE PROCEDURE RECORD
"RTN","DGPTFM4",69,0)
 I '$D(^DGPT(PTF,"P")) G NOPROC
"RTN","DGPTFM4",70,0)
 I $O(^DGPT(PTF,"P",0))']"" G NOPROC
"RTN","DGPTFM4",71,0)
 S DGPNUM="" F DGPROC=0:0 S DGPROC=$O(P(DGPROC)) Q:'DGPROC  S:$D(P(DGPROC,1)) DGPNUM=DGPNUM_","_DGPROC
"RTN","DGPTFM4",72,0)
 S DGPNUM=DGPNUM_","
"RTN","DGPTFM4",73,0)
ASKPRO W !!,"Delete procedure record <",$P(DGPNUM,",",2,99),"> : " R DGPROC:DTIME I DGPROC[U!(DGPROC="") K DGPNUM,DGPROC G ^DGPTFM
"RTN","DGPTFM4",74,0)
 I DGPNUM'[(","_DGPROC_",") W !!,"Enter the record # to delete from the PTF file <",$P(DGPNUM,",",2,99),">",! G ASKPRO
"RTN","DGPTFM4",75,0)
 K DA N DGJ
"RTN","DGPTFM4",76,0)
 F DGJ=1:1 S DA=+$P(DGPROC,",",DGJ) Q:'DA  S DA=$S($D(P(DA,1)):+P(DA,1),1:0) I DA S DA(1)=PTF,DIK="^DGPT("_PTF_",""P""," D ^DIK K DA W "   ",$P(DGPROC,",",DGJ),"-DELETED***" H:'$P(DGPROC,",",DGJ+1) 2
"RTN","DGPTFM4",77,0)
 K DIK,DA,DGPROC,DGPNUM G ^DGPTFM
"RTN","DGPTFM4",78,0)
NOPROC W !!,*7,"No procedures to delete",! H 3 G ^DGPTFM
"RTN","DGPTFMO")
0^13^B26961325
"RTN","DGPTFMO",1,0)
DGPTFMO ;ALB/JDS/ADL - DGPTF PRINT TEMPLATE ; 4/13/04 12:11pm
"RTN","DGPTFMO",2,0)
 ;;5.3;Registration;**195,397,510,590,594,606,683,729,664**;Aug 13, 1993;Build 15
"RTN","DGPTFMO",3,0)
 ;;ADL;Updated for CSV Project;;Mar 4, 2003
"RTN","DGPTFMO",4,0)
 ;FOR PTF REPORT CALLED FROM TEMPLATE DGPTF
"RTN","DGPTFMO",5,0)
EN K A,B,AD,ADA,DGDD,DGFC,HEAD,DGPTFE,DGST,DGN,T
"RTN","DGPTFMO",6,0)
 F I=0:0 S I=$O(^DGPT(D0,"M",I)) Q:I'>0  I $D(^(I,0)) S J=+$P(^(0),U,10) S:'J J=999999999 S:$D(T(J)) J=J+.01*I S T(J)=I
"RTN","DGPTFMO",7,0)
 F I=0:0 S I=$O(T(I)) Q:I'>0  S DGM=$S($D(^DGPT(D0,"M",T(I),0)):^(0),1:"") I DGM]"" D WRITE
"RTN","DGPTFMO",8,0)
 K T F I=0:0 S I=$O(^DGPT(D0,"S",I)) Q:I'>0  D SUR
"RTN","DGPTFMO",9,0)
 S DGOP1=$S($D(^DGPT(D0,"401P")):^("401P"),1:"") I DGOP1]"" D HEAD:$Y>(IOSL-10) G Q:'DN D PROC
"RTN","DGPTFMO",10,0)
 I $D(^DGPT(D0,"P")) D HEAD:$Y>(IOSL-10) G Q:'DN F I=0:0 S I=$O(^DGPT(D0,"P",I)) Q:I'>0  S DG601=^DGPT(D0,"P",I,0),Y=+DG601 D D^DGPTUTL W !!," Procedure Date: ",Y D 601
"RTN","DGPTFMO",11,0)
 S DGPT=$G(^DGPT(D0,70)) I DGPT]"" G Q:'DN D DXLS
"RTN","DGPTFMO",12,0)
 K %,DGL,DGM,DGPT,DGOP,DGOP1,DGF,DGP,DXLS,DGICD,L1,S1,T,J,K,DGPR,DGN,AGE,B,DA,DAM,DFN,DGST,DOB,DP,DRG,EXP,NO,P,PTF,DGPTFE,SD1,SEX,TAC,TRS,DGDS,DGTD,DGPROC,DG601,DGPTDAT
"RTN","DGPTFMO",13,0)
 W ! ;F I=$Y:1:IOSL-1 W !
"RTN","DGPTFMO",14,0)
 Q
"RTN","DGPTFMO",15,0)
WRITE D HEAD:$Y>(IOSL-12) G Q:'DN S Y=$P(DGM,U,10),DGL=+$P(DGM,U,2),DGL=$S($D(^DIC(42.4,DGL,0)):^(0),1:""),DGL=$P(DGL,U,1) D D^DGPTUTL
"RTN","DGPTFMO",16,0)
 W !!,"Movement Date: ",Y,?40,"Losing Specialty: ",$E(DGL,1,22),!,"Leave Days: ",$P(DGM,U,3),?40,"Pass Days: ",$P(DGM,U,4)
"RTN","DGPTFMO",17,0)
 W !,"Treated for SC condition: ",$S($P(DGM,U,18)=1:"Yes",1:"No")
"RTN","DGPTFMO",18,0)
 W:$P(DGM,U,31)'="" !,"Potentially Related to Combat: ",$S($P(DGM,U,31)="Y":"Yes",1:"No")
"RTN","DGPTFMO",19,0)
 W:$P(DGM,U,26)'="" !,"Treated for AO condition: ",$S($P(DGM,U,26)="Y":"Yes",1:"No")
"RTN","DGPTFMO",20,0)
 W:$P(DGM,U,27)'="" !,"Treated for IR condition: ",$S($P(DGM,U,27)="Y":"Yes",1:"No")
"RTN","DGPTFMO",21,0)
 W:$P(DGM,U,28)'="" !,"Treated for service in SW Asia: ",$S($P(DGM,U,28)="Y":"Yes",1:"No")
"RTN","DGPTFMO",22,0)
 W:$P(DGM,U,29)'="" !,"Treated for MST condition: ",$S($P(DGM,U,29)="Y":"Yes",$P(DGM,U,29)="N":"No",1:"Declined to answer") ; added 6/17/98 for MST enhancement
"RTN","DGPTFMO",23,0)
 W:$P(DGM,U,30)'="" !,"Treated for HEAD/NECK CA condition: ",$S($P(DGM,U,30)="Y":"Yes",1:"No")
"RTN","DGPTFMO",24,0)
 W:$P(DGM,U,32)'="" !,"Treated for SHAD Condition: ",$S($P(DGM,U,32)="Y":"Yes",1:"No")
"RTN","DGPTFMO",25,0)
 W:T(I)=1 !,"Discharge "
"RTN","DGPTFMO",26,0)
 S DGF="" F J=5:1:15 I J#10 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGM,U,J),$$GETDATE^ICDGTDRG(D0)),DGICD=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGICD]"" D 
"RTN","DGPTFMO",27,0)
 . W:DGF="" !!?13,"DX: " W $P(DGICD,U,3)_" ("_$P(DGICD,U)_")",!?17 S DGF=1
"RTN","DGPTFMO",28,0)
 ;-- display expanded codes 
"RTN","DGPTFMO",29,0)
 S DG300=$S($D(^DGPT(D0,"M",T(I),300)):^(300),1:"") I DG300]"" D HEAD:$Y>(IOSL-6) D PRN2^DGPTFM8 W !
"RTN","DGPTFMO",30,0)
 K DG300
"RTN","DGPTFMO",31,0)
 ;Display TRANSFER DRG with description
"RTN","DGPTFMO",32,0)
 Q:'$D(^DGPT(D0,"M",T(I),"P"))  S DGTD=+^("P") Q:'$D(^ICD(DGTD,0))  W !?3,"TRANSFER DRG: ",DGTD," - "
"RTN","DGPTFMO",33,0)
 N DXD,DGDX
"RTN","DGPTFMO",34,0)
 S DXD=$$DRGD^ICDGTDRG(DGTD,"DGDX",,$$GETDATE^ICDGTDRG(D0)),DGDS=0
"RTN","DGPTFMO",35,0)
 F  S DGDS=$O(DGDX(DGDS)) Q:'+DGDS  Q:DGDX(DGDS)=" "  W !,DGDX(DGDS)
"RTN","DGPTFMO",36,0)
 Q
"RTN","DGPTFMO",37,0)
HEAD I $E(IOST,1)="C" W *7 R X:DTIME I X=U S DN=0 Q
"RTN","DGPTFMO",38,0)
 S DC=DC+1 W @IOF,! X:$D(^UTILITY($J,2)) ^(2) W ! F K=1:1:IOM W "_"
"RTN","DGPTFMO",39,0)
 W !,"("_$P(^DPT(+^DGPT(D0,0),0),U,1)_")",!
"RTN","DGPTFMO",40,0)
 Q
"RTN","DGPTFMO",41,0)
SUR D HEAD:$Y>(IOSL-7) G Q:'DN S S1=^DGPT(D0,"S",I,0),Y=+S1 D D^DGPTUTL W !!,"   Date of Surg: ",Y,?45,"Chief Surg: " S L=";"_$P(^DD(45.01,4,0),U,3),L1=";"_$P(S1,U,4)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",42,0)
 W !,"    Anesth Tech: " S L=";"_$P(^DD(45.01,6,0),U,3),L1=";"_$P(S1,U,6)_":" W $P($P(L,L1,2),";",1),?45,"First Asst: " S L=";"_$P(^DD(45.01,5,0),U,3),L1=";"_$P(S1,U,5)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",43,0)
 W !,"  Source of pay: " S L=";"_$P(^DD(45.01,7,0),U,3),L1=";"_$P(S1,U,7)_":" W $P($P(L,L1,2),";",1)
"RTN","DGPTFMO",44,0)
 W ?46,"Surg spec: ",$S($D(^DIC(45.3,+$P(S1,U,3),0)):$P(^(0),U,2),1:"")
"RTN","DGPTFMO",45,0)
 W !!,?7,"Surg/pro: " F K=1:1:5 S L=$P(S1,U,K+7) I L'="" S DGPTTMP=$$ICDOP^ICDCODE(+L,$$GETDATE^ICDGTDRG(D0)) W $S(+DGPTTMP>0:$P(DGPTTMP,U,5)_" ("_$P(DGPTTMP,U,2)_")",1:"**********-"_L),!?17
"RTN","DGPTFMO",46,0)
 ;-- display expanded codes
"RTN","DGPTFMO",47,0)
 S DG300=$S($D(^DGPT(D0,"S",I,300)):^(300),1:"") I DG300]"" D PRN3^DGPTFM8
"RTN","DGPTFMO",48,0)
 K DG300
"RTN","DGPTFMO",49,0)
 Q
"RTN","DGPTFMO",50,0)
PROC S DGF="" F I=1:1:5 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGOP1,U,I),$$GETDATE^ICDGTDRG(D0)),DGOP=$S(DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGOP D 
"RTN","DGPTFMO",51,0)
 . W:'DGF !!?6,"Procedure: " W $P(DGOP,U,4)_" ("_$P(DGOP,U)_")",!?17 S DGF=1
"RTN","DGPTFMO",52,0)
 Q
"RTN","DGPTFMO",53,0)
601 ;print the procedures/dates from the 601 procedure multiple (eff. 10/1/87)
"RTN","DGPTFMO",54,0)
 F J=5:1:9 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DG601,U,J),$$GETDATE^ICDGTDRG(D0)),DGPROC=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGPROC W !?17,$P(DGPROC,U,4)_" ("_$P(DGPROC,U)_")"
"RTN","DGPTFMO",55,0)
 Q
"RTN","DGPTFMO",56,0)
DXLS D HEAD:$Y>(IOSL-16) S DGPTDAT=$$GETDATE^ICDGTDRG(D0)
"RTN","DGPTFMO",57,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGPT,U,10),DGPTDAT),DXLS=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DXLS]"" W !!?11,"PRINCIPAL DIAGNOSIS: ",$P(DXLS,U,3)_" ("_$P(DXLS,U)_")"
"RTN","DGPTFMO",58,0)
 I 'DXLS S DGPTTMP=$$ICDDX^ICDCODE(+$P(DGPT,U,11),DGPTDAT),DGP=$S(+DGPTTMP>0:$P(DGPTTMP,U,2,99),1:"") I DGP]"" W !!," Principal Diag: ",$P(DGP,U,3)_" ("_$P(DGP,U)_")"
"RTN","DGPTFMO",59,0)
 S K=DGPT F I=16:1:24 D DSP
"RTN","DGPTFMO",60,0)
 S K=$G(^DGPT(D0,71)) F I=1:1:4 D DSP
"RTN","DGPTFMO",61,0)
 ;-- display expanded code information
"RTN","DGPTFMO",62,0)
 S DG300=$S($D(^DGPT(D0,300)):^(300),1:"") D:DG300]"" PRN2^DGPTFM8 K DG300
"RTN","DGPTFMO",63,0)
 D EN2^DGPTF4 Q
"RTN","DGPTFMO",64,0)
Q Q
"RTN","DGPTFMO",65,0)
Q1 K ^UTILITY(U,$J),DG1 Q
"RTN","DGPTFMO",66,0)
DT I Y W $P("JAN^FEB^MAR^APR^MAY^JUN^JUL^AUG^SEP^OCT^NOV^DEC",U,$E(Y,4,5))," " W:Y#100 $J(Y#100\1,2),"," W Y\10000+1700 W:Y#1 "  ",$E(Y_0,9,10),":",$E(Y_"000",11,12)
"RTN","DGPTFMO",67,0)
 Q
"RTN","DGPTFMO",68,0)
DSP S J=$$ICDDX^ICDCODE(+$P(K,U,I),DGPTDAT) I J&$P(J,U,10) D
"RTN","DGPTFMO",69,0)
 .I I#2 W ?40,$P(J,U,4)_"("_$P(J,U,2)_")" Q
"RTN","DGPTFMO",70,0)
 .W !,$P(J,U,4)_"("_$P(J,U,2)_")"
"RTN","DGPTFMO",71,0)
 Q
"RTN","DGPTR0")
0^8^B25588863
"RTN","DGPTR0",1,0)
DGPTR0 ;MJK/JS/ADL - PTF TRANSMISSION ; 9/26/05 6:44pm
"RTN","DGPTR0",2,0)
 ;;5.3;Registration;**114,247,338,342,510,524,565,678,729,664**;Aug 13, 1993;Build 15
"RTN","DGPTR0",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTR0",4,0)
 ; -- setup control data
"RTN","DGPTR0",5,0)
 ; ssn
"RTN","DGPTR0",6,0)
 S X=$P(DG10,U,9),Y=$S($E(X,10)="P":"P",1:" ")_$E(X_"         ",1,9)
"RTN","DGPTR0",7,0)
 ; -- adm d/t
"RTN","DGPTR0",8,0)
 S X=$P($P(DG0,U,2),"."),Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P($P(DG0,U,2),".",2)_"0000",1,4)
"RTN","DGPTR0",9,0)
 ; -- facility #
"RTN","DGPTR0",10,0)
 S L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTR0",11,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTR1
"RTN","DGPTR0",12,0)
 ;
"RTN","DGPTR0",13,0)
101 ; -- setup 101 transation
"RTN","DGPTR0",14,0)
 ; control data and name
"RTN","DGPTR0",15,0)
 ;S Y=$S(T1:"C",1:"N")_"101"_DGHEAD,DGNAM=$P(DG10,U,1) D DGNAM S Y=Y_$E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTR0",16,0)
 S Y=$S(T1:"C",1:"N")_"101"_DGHEAD S Y=Y_$$PTFNMFT($P(DG10,U))
"RTN","DGPTR0",17,0)
 ; source of admission
"RTN","DGPTR0",18,0)
 S Y=Y_$S($D(^DIC(45.1,+DG101,0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTR0",19,0)
 ; xfring fac and suffix
"RTN","DGPTR0",20,0)
 S L=3,X=DG101,Z=5 D ENTER S Y=Y_$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTR0",21,0)
 ; source of payment
"RTN","DGPTR0",22,0)
 S Y=Y_$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTR0",23,0)
 ;POW Location
"RTN","DGPTR0",24,0)
 S Y=Y_$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTR0",25,0)
 ;marital status, sex
"RTN","DGPTR0",26,0)
 S Y=Y_$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTR0",27,0)
 ;  date of birth
"RTN","DGPTR0",28,0)
 S DGDOB=$P(DG10,U,3)\1,Y=Y_$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTR0",29,0)
 ; period of service
"RTN","DGPTR0",30,0)
 S DGPOS=$S($D(^DIC(21,+$P(DG32,U,3),0)):$P(^(0),U,3),1:"")
"RTN","DGPTR0",31,0)
 I $D(^DGPM(+$O(^DGPM("APTF",J,0)),"ODS")),+^("ODS") S DGPOS=6
"RTN","DGPTR0",32,0)
 ;-- if non vet admitting eligibility make POS 9
"RTN","DGPTR0",33,0)
 S DGPOS=$$CKPOS^DGPTUTL($P($G(^DGPT(PTF,101)),U,8),DGPOS)
"RTN","DGPTR0",34,0)
 S X=DGPOS,Z=1,L=2 D ENTER
"RTN","DGPTR0",35,0)
 ; agent orange
"RTN","DGPTR0",36,0)
 S G=" " S DGAO=$P(DG321,U,2) S:DGPOS=7 G=$S($P(DG321,U)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4) S:(DGAO="Y")&($P(DG321,U,13)="K") G=5
"RTN","DGPTR0",37,0)
 ; rad exposure
"RTN","DGPTR0",38,0)
 S E=" " I "^0^2^4^5^7^8^Z^"[(U_DGPOS_U) S DGNT=$P(DG321,U,12),E=$S($P(DG321,U,3)'="Y":1,DGNT="N":2,DGNT="T":3,DGNT="B":4,1:" ")
"RTN","DGPTR0",39,0)
 S Y=Y_G_E K DGPOS,G,E
"RTN","DGPTR0",40,0)
 ; state code
"RTN","DGPTR0",41,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D ENTER0
"RTN","DGPTR0",42,0)
 ; county code
"RTN","DGPTR0",43,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D ENTER0
"RTN","DGPTR0",44,0)
 ; zip code
"RTN","DGPTR0",45,0)
 S X=DG11,Z=6,L=5 D ENTER
"RTN","DGPTR0",46,0)
 ; means test
"RTN","DGPTR0",47,0)
 S Y=Y_$S($P(DG70,U,26)="Y":"AS",1:$E($P(DG0,U,10)_"  ",1,2))
"RTN","DGPTR0",48,0)
 ; income
"RTN","DGPTR0",49,0)
 I $L($P(DG101,U,7))>6 S Y=Y_"999999"
"RTN","DGPTR0",50,0)
 E  S X=DG101,Z=7,L=6 D ENTER0
"RTN","DGPTR0",51,0)
 ;MST
"RTN","DGPTR0",52,0)
 S X=$$GETSTAT^DGMSTAPI(+DG0) S Y=Y_$S(X<0:"U",1:$P(X,"^",2))
"RTN","DGPTR0",53,0)
 ;Combat Vet
"RTN","DGPTR0",54,0)
 S X=$$CVEDT^DGCV(+DG0,$P(DG0,"^",2)) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTR0",55,0)
 S X=$P(X,"^",2)_"       " S Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)
"RTN","DGPTR0",56,0)
 ;Project 112/SHAD
"RTN","DGPTR0",57,0)
 S X=$$SHAD^SDCO22(+DG0) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTR0",58,0)
 ;Emergency Response Indicator
"RTN","DGPTR0",59,0)
 S X=$$EMGRES^DGUTL(+DG0) S Y=Y_$S("^K^"[(U_X_U):X,1:" ")
"RTN","DGPTR0",60,0)
 ;Country Code
"RTN","DGPTR0",61,0)
 S X=$$GET1^DIQ(779.004,$P(DG11,U,10)_",",.01),Z=1,L=3 D ENTER
"RTN","DGPTR0",62,0)
 D FILL^DGPTR2,SAVE
"RTN","DGPTR0",63,0)
 I T1 S Y=$E(Y,1,52)_" "_$E(Y,54,125)
"RTN","DGPTR0",64,0)
 ;
"RTN","DGPTR0",65,0)
P401 ; -- setup 401P transaction
"RTN","DGPTR0",66,0)
 G 401:'$D(^DGPT(J,"401P"))!(T1) S DG41=^("401P"),Y=$S(T1:"C",1:"N")_"401"_DGHEAD_"P"_"           "
"RTN","DGPTR0",67,0)
 S DG41=$S($D(^DGPT(J,"401P")):^("401P"),1:"")
"RTN","DGPTR0",68,0)
 S L=1 F K=1:1:5 S:'$P(DG41,U,K) DG41=$P(DG41,U,1,K-1)_U_$P(DG41,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",69,0)
 F I=1:1:5 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DG41,U,I),$$GETDATE^ICDGTDRG(J)),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",70,0)
 I $E(Y,40)'=" " D FILL^DGPTR2,SAVE
"RTN","DGPTR0",71,0)
 ;
"RTN","DGPTR0",72,0)
401 ; -- setup 401 transactions
"RTN","DGPTR0",73,0)
 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTR0",74,0)
SUR S I=$O(^DGPT(J,"S",I)) G 501:'I S DGSUR=^(I,0),DGAUX=$S($D(^DGPT(J,"S",I,300)):^(300),1:"") G SUR:'DGSUR
"RTN","DGPTR0",75,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1)
"RTN","DGPTR0",76,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) D  I Y'=1 S DGERR=1 Q
"RTN","DGPTR0",77,0)
 .W !,"**There are more than ",$S(F:"three",1:"two")," surgeries on the same date**"
"RTN","DGPTR0",78,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK to continue?" D ^DIR K DIR
"RTN","DGPTR0",79,0)
 S Y=$S(T1:"C",1:"N")_"40"_^(DGSUD)_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$E($P(+DGSUR,".",2)_"0000",1,4)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTR0",80,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTR0",81,0)
 S L=1 F K=8:1:12 S:'$P(DGSUR,U,K) DGSUR=$P(DGSUR,U,1,K-1)_U_$P(DGSUR,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",82,0)
 F K=8:1:12 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGSUR,U,K),$$GETDATE^ICDGTDRG(J)),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",83,0)
 ;-- att phy
"RTN","DGPTR0",84,0)
 S Y=Y_"         "
"RTN","DGPTR0",85,0)
 ;-- additional ptf question
"RTN","DGPTR0",86,0)
 ;send null, if disch date>inactive date. DG/729
"RTN","DGPTR0",87,0)
 I +$P($G(^DIC(45.88,1,0)),U,3) S DGAUX=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,1,0),U,3)):DGAUX,1:"")
"RTN","DGPTR0",88,0)
 S Y=Y_$E($P(DGAUX,U)_" ")
"RTN","DGPTR0",89,0)
 K DGAUX
"RTN","DGPTR0",90,0)
 D FILL^DGPTR2,SAVE G SUR
"RTN","DGPTR0",91,0)
501 G 501^DGPTR2
"RTN","DGPTR0",92,0)
 Q
"RTN","DGPTR0",93,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR0",94,0)
 Q
"RTN","DGPTR0",95,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("000000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR0",96,0)
 Q
"RTN","DGPTR0",97,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR0",98,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR0",99,0)
Q Q
"RTN","DGPTR0",100,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTR0",101,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTR0",102,0)
 S DGNAM=X
"RTN","DGPTR0",103,0)
 Q
"RTN","DGPTR0",104,0)
 ;
"RTN","DGPTR0",105,0)
PTFNMFT(DG10) ;this function will format the name of the patient for
"RTN","DGPTR0",106,0)
 ; transmission of the 101 record to Austin. In addition, this
"RTN","DGPTR0",107,0)
 ; function will be used by OPC so that the format will be consistent
"RTN","DGPTR0",108,0)
 ; for OPC and PTF.
"RTN","DGPTR0",109,0)
 ;  INPUT :   DG10 - .01 field from the patient record.
"RTN","DGPTR0",110,0)
 ;  OUTPUT:   name in the format proper format.
"RTN","DGPTR0",111,0)
 ;        A = <12 - characters of last name padded with blanks>
"RTN","DGPTR0",112,0)
 ;        B = <1  - first initial of fist name>
"RTN","DGPTR0",113,0)
 ;        C = <1  - first initial of middle name>
"RTN","DGPTR0",114,0)
 ;      returns :ABC <14 - characters>
"RTN","DGPTR0",115,0)
 N X,I
"RTN","DGPTR0",116,0)
 S DGNAM=DG10 D DGNAM
"RTN","DGPTR0",117,0)
 Q $E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTR0",118,0)
 ;
"RTN","DGPTR1")
0^9^B29190038
"RTN","DGPTR1",1,0)
DGPTR1 ;ALB/MTC - PTF VERIFICATION ; 01 MAR 91 @0800
"RTN","DGPTR1",2,0)
 ;;5.3;Registration;**58,247,338,342,423,415,565,678,696,729,781,664**;Aug 13, 1993;Build 15
"RTN","DGPTR1",3,0)
START S T=$E(Y,2,3),T=$S(T=40&($E(Y,28)="P"):"P40",1:T),ERR=$P($T(@("T"_T)),";;",2,999),W=$P($T(@(T)),";;",2,999),F=31 D L
"RTN","DGPTR1",4,0)
 I T=70 S ERR=$P($T(T701),";;",2,999),W=$P($T(701),";;",2,999),F=72 D L
"RTN","DGPTR1",5,0)
 D @("D"_T) Q
"RTN","DGPTR1",6,0)
 K DGFILL
"RTN","DGPTR1",7,0)
 Q
"RTN","DGPTR1",8,0)
 ;
"RTN","DGPTR1",9,0)
L N DGFOR S DGFOR=$S($$FORIEN^DGADDUTL($P(DG11,U,10))<1:0,1:1) ;set foreign country flag =1, else, set as domestic
"RTN","DGPTR1",10,0)
 F H=1:1 S DGO=$P(W,U,H) Q:'DGO  F Z=1:1:$P(DGO,";",3) S DGL=DGLOGIC(+DGO),X=$E(Y,F) D @("ERR:"_DGL) S F=F+1
"RTN","DGPTR1",11,0)
 Q
"RTN","DGPTR1",12,0)
 ;
"RTN","DGPTR1",13,0)
T10 ;;1:NAME^2:SOURCE OF ADM^3:TRANS FAC.^4:SOURCE OF PAY^5:POW^6:MARITAL ST^7:SEX^8:DOB^9:POS^10:VIETNAM^11:ION RADIATION^12:RESIDENCE^13:MEANS TEST^14:INCOME^15:MST^16:COMBAT VET^17:CV END DT^18:PROJ 112/SHAD^19:ERI^20:COUNTRY
"RTN","DGPTR1",14,0)
 ;
"RTN","DGPTR1",15,0)
T70 ;;1:DT OF DISP.^2:DISCH BD SEC^3:TYPE OF DIS^4:OUT TREAT^5:VA AUS^6:PL OF DIS^7:REC FAC^8:ASIH DAYS^9:NOT USED^10:C&P STAT^11:PDXLS^12:ONLY DX^13:PHY MPCR
"RTN","DGPTR1",16,0)
 ;T701 is part 2 of T70
"RTN","DGPTR1",17,0)
T701 ;;1:PHY SPEC^2:%SC^3:LEGION^4:SUICIDE^5:DRUG^6:AXIS-IV^7:AXIS-V^8:SC^9:EXP^10:MST^11:HNC^12:ETHNICITY^13:RACE^14:COMBAT VET^15:PROJ 112/SHAD
"RTN","DGPTR1",18,0)
 ;
"RTN","DGPTR1",19,0)
T50 ;;1:DT OF MVMT^2:LOSING BD SEC MPCR^3:LOSING BD SEC^4:LEAVE DAYS^5:PASS DAYS^6:SCI^7:DIAG^8:DOCTOR'S SSN^9:PHY MPCR^10:PHY SPEC^11:DISCHARGE STAT^^^^^16:LEGION^17:SUICIDE^18:DRUG^19:AXIS-IV^20:AXIS-V^21:SC^22:EXP^23:MST^24:HNC
"RTN","DGPTR1",20,0)
 ;
"RTN","DGPTR1",21,0)
T53 ;;1:DATE OF PHYSICAL MOVEMENT^2:LOSING PHYSICAL MPCR^3:LOSING PHYSICAL SPECIALTY^4:TR SPECIALTY MPCR^5:TR SPECIALTY^6:LEAVE DAYS^7:PASS DAYS^8:DOCTOR'S SSN (NOT USED)
"RTN","DGPTR1",22,0)
 ;
"RTN","DGPTR1",23,0)
T40 ;;1:DATE OF SURGERY^2:SURG SPEC.^3:CAT CHIEF SURGEON^4:CAT FIRST ASS^5:ANEST. TECH.^6:SOURCE OF PAY^7:OP CODE^8:DOCTOR'S SSN (NOT USED)^^^^^13:TRANSPLANT STATUS
"RTN","DGPTR1",24,0)
 ;
"RTN","DGPTR1",25,0)
TP40 ;;1:OP CODE
"RTN","DGPTR1",26,0)
 ;
"RTN","DGPTR1",27,0)
T60 ;;1:DATE OF PROCEDURE^2:LOSING BD SEC^3:DIALYSIS TYPE^4:NUMBER OF TREATMENTS^5:PROCEDURE CODE
"RTN","DGPTR1",28,0)
 ;
"RTN","DGPTR1",29,0)
LOGIC ;;X'?.N^X'?.A&(X'=" ")^X'=" "^X'?.N&(X'=" ")^X'?.A&(X'=" ")^0^X'?.N&(X'="X")^X'=" "&(X'="P")^X="E"^X="Y"^X=" "^X'="A"&(X'=" ")^(X'?.A)&(X'?.N)&(X'=" ")^(X'?.AN)&('$P(DG0,U,4))^((T1)&(X'=" "))!(('T1)&(X'?.AN)&('$P(DG0,U,4)))
"RTN","DGPTR1",30,0)
 ;;(X'?.AN)^'$D(DGFOR)&(X'?.N)^'$D(DGFOR)&X'?.N&(X'="X")
"RTN","DGPTR1",31,0)
 ;;END
"RTN","DGPTR1",32,0)
 ;
"RTN","DGPTR1",33,0)
 ; edit check# ; edit field ; # x check preformed ; display error name #
"RTN","DGPTR1",34,0)
10 ;;6;;12;1^2;1;1;1^5;1;1;1^1;2;1;2^2;2;1;2^4;3;3;3^6;;3;3^4;4;1;4^6;5;1;5^2;6;1;6^2;7;1;7^1;8;8;8^6;;1;9^11;9;1;9^4;10;1;10^4;10;1;11^17;11;5;12^18;11;5;12^2;12;1;13^6;;1;13^1;;6;14^2;;1;15^1;;1;16^4;;6;17^1;;1;18^5;;1;19^5;;3;20^3;;26
"RTN","DGPTR1",35,0)
 ;
"RTN","DGPTR1",36,0)
70 ;;1;1;10;1^13;2;2;2^1;3;1;3^4;4;1;4^4;5;1;5^6;;1;6^4;7;3;7^6;;3;7^4;8;3;8^6;9;1;9^1;10;1;10^9;11;1;11^11;11;2;11^6;;3;11^10;11;1;11^6;;1;12^15;;6;13
"RTN","DGPTR1",37,0)
 ;701 is part 2 of 70
"RTN","DGPTR1",38,0)
701 ;;15;;2;1^1;;3;2^4;;1;3^4;;1;4^12;;1;5^4;;3;5^4;;1;6^4;;4;7^4;;1;8^5;;3;9^5;;1;10^5;;1;11^13;12;2;12^13;13;12;13^5;;1;14^5;;1;15^3;;16
"RTN","DGPTR1",39,0)
 ;
"RTN","DGPTR1",40,0)
50 ;;1;1;10;1^1;;6;2^16;3;2;3^1;4;3;4^1;5;3;5^6;;1;6^11;7;3;7^6;;32;7^6;;9;8^14;;6;9^14;;2;10^6;;1;11^4;;1;16^4;;1;17^12;;1;18^4;;3;18^4;;1;19^4;;4;20^4;;1;21^5;;3;22^5;;1;23^5;;1;24
"RTN","DGPTR1",41,0)
 ;
"RTN","DGPTR1",42,0)
53 ;;1;;10;1^1;;6;2^13;;2;3^1;;6;4^13;;2;5^1;;3;6^1;;3;7^3;;9;8^3;;54;
"RTN","DGPTR1",43,0)
 ;
"RTN","DGPTR1",44,0)
40 ;;1;1;10;1^1;2;2;2^11;3;1;3^4;4;1;4^6;5;1;5^4;6;1;6^11;7;2;7^6;;3;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^3;;9;8^4;;1;13^3;;34;
"RTN","DGPTR1",45,0)
 ;
"RTN","DGPTR1",46,0)
P40 ;;8;;1;^3;;11;^11;1;2;1^6;;3;1^3;1;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^3;;48
"RTN","DGPTR1",47,0)
 ;
"RTN","DGPTR1",48,0)
60 ;;1;1;10;1^13;2;2;2^4;3;1;3^4;4;3;4^11;5;3;5^6;;32;5^3;;44
"RTN","DGPTR1",49,0)
 ;
"RTN","DGPTR1",50,0)
ERR S DGERR=1
"RTN","DGPTR1",51,0)
 W !,T,$S(T["H":" ",1:$E(Y,4)),"  "
"RTN","DGPTR1",52,0)
 W:"45"[$E(T,1) $E(Y,31,32),"-",$E(Y,33,34),"-",$E(Y,35,36),"@",$E(Y,37,40)
"RTN","DGPTR1",53,0)
 W ?25,$P($P(ERR,U,$P(DGO,";",4)),":",2),?40,"COL.",F,"  VALUE: ",$S($E(Y,F)=" ":"BLANK",1:$E(Y,F))
"RTN","DGPTR1",54,0)
 S I=$S('$D(I):1,I>0:I,1:1),^(I)=$S($D(^UTILITY("DG",$J,T_$S(T["H":"",1:$E(Y,4)),I)):^(I),1:U) I $P(DGO,";",2),^(I)'[(U_$P(DGO,";",2)_U) S ^(I)=^(I)_$P(DGO,";",2)_U
"RTN","DGPTR1",55,0)
 Q
"RTN","DGPTR1",56,0)
 ;
"RTN","DGPTR1",57,0)
D10 I $E(Y,66)="Z" S (F,H)=68,W="11;10;1;10" D L
"RTN","DGPTR1",58,0)
 I $P(^DGPT(J,0),"^",4),$P(^(0),"^",10)="U",$D(^DGPT(J,70)),+^(70)>2890700 S F=79,DGO="2;12;1;12" D ERR
"RTN","DGPTR1",59,0)
 Q
"RTN","DGPTR1",60,0)
 ;
"RTN","DGPTR1",61,0)
D40 Q
"RTN","DGPTR1",62,0)
DP40 Q
"RTN","DGPTR1",63,0)
D70 I "467"'[$E(Y,43) S F=44,W="4;4;1;4^1;5;1;5^11;6;1;6" D L
"RTN","DGPTR1",64,0)
 Q
"RTN","DGPTR1",65,0)
D50 I "A0"[$P(DG0,U,5)!("A4"[$P(DG0,U,5))!('$D(^DGPT(J,70))) S W="11;6;1;6",F=55 D L
"RTN","DGPTR1",66,0)
 I $D(^DGPT(J,70)),$S(T1:1,1:+^(70)>2871000) S W="11;6;1;6",F=55 D L
"RTN","DGPTR1",67,0)
 I $E(Y,4)=1 S W="9;7;1;7",F=56 D L
"RTN","DGPTR1",68,0)
 I I=1,'T1 S W="1;11;1;11",F=108 D L
"RTN","DGPTR1",69,0)
 Q
"RTN","DGPTR1",70,0)
D53 Q
"RTN","DGPTR1",71,0)
D60 I $E(Y,43) S F=44,W="1;4;3;4" D L
"RTN","DGPTR1",72,0)
 Q
"RTN","DGPTR1",73,0)
HEAD S ERR="1:SSN^2:ADMISSION DATE^3:FACILITY #",W="8;1;1;1^1;1;9;1^1;2;10;2^1;3;3;3^6;;3;3",F=5,T="HEADER" D LOG
"RTN","DGPTR1",74,0)
 D L
"RTN","DGPTR1",75,0)
 Q
"RTN","DGPTR1",76,0)
LOG ;place DGLOGIC in array inorder to add more logic tests ;DG*5.3*664
"RTN","DGPTR1",77,0)
 K DGLOGIC ;S DGLOGIC=$P($T(LOGIC),";;",2)
"RTN","DGPTR1",78,0)
 N LOGX,LOGI,LOGCNT,II,XX
"RTN","DGPTR1",79,0)
 S LOGI=0,LOGCNT=1
"RTN","DGPTR1",80,0)
 F LOGI=0:1 S LOGX=$P($T(LOGIC+LOGI),";;",2) Q:LOGX="END"  F II=1:1 S XX=$P(LOGX,U,II) Q:XX=""  S DGLOGIC(LOGCNT)=XX,LOGCNT=LOGCNT+1
"RTN","DGPTR1",81,0)
 Q
"RTN","DGPTR1",82,0)
CEN S T=70,ERR=$P($T(T70),";;",2),W=$P($T(70),";;",2,999),W="13;9;1;9"_$P(W,"13;9;1;9",2,999),F=56 D L
"RTN","DGPTR1",83,0)
 S ERR=$P($T(T701),";;",2),W=$P($T(701),";;",2,999),F=72 D L
"RTN","DGPTR1",84,0)
 Q
"RTN","DGPTR4")
0^10^B20521487
"RTN","DGPTR4",1,0)
DGPTR4 ;ALB/JDS/MJK/MTC/ADL - ALB/BOK  PTF TRANSMISSION ; 11 JUL 05 @0800
"RTN","DGPTR4",2,0)
 ;;5.3;Registration;**338,423,415,510,565,645,729,664**;Aug 13, 1993;Build 15
"RTN","DGPTR4",3,0)
701 ; -- setup 701 transaction
"RTN","DGPTR4",4,0)
 S Y=$S(T1:"C",1:"N")_"701"_DGHEAD,DGDDX=$P(+DG70,".")_"       ",Y=Y_$E(DGDDX,4,5)_$E(DGDDX,6,7)_$E(DGDDX,2,3)_$E($P(+DG70,".",2)_"0000",1,4)
"RTN","DGPTR4",5,0)
 S X=DG70
"RTN","DGPTR4",6,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR4",7,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR4",8,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR4",9,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR4",10,0)
 S (L,Z)=2 D ENTER0 K DGDDX
"RTN","DGPTR4",11,0)
 S X=DG70 I "467"[($P(X,U,3)\1) S Y=Y_$P(X,U,3)_"         " G J
"RTN","DGPTR4",12,0)
 S L=1 F Z=3:1:5 D ENTER
"RTN","DGPTR4",13,0)
 S Y=Y_$S($D(^DIC(45.6,+$P(X,U,6),0)):$P(^(0),U,2),1:" "),L=3,Z=12 D ENTER S Y=Y_$E($P(X,U,13)_"   ",1,3)
"RTN","DGPTR4",14,0)
J S L=3,Z=8 D ENTER0
"RTN","DGPTR4",15,0)
 S Y=Y_"X"_$J($P(DG70,U,9),1)
"RTN","DGPTR4",16,0)
 S DGPTDAT=$$GETDATE^ICDGTDRG(J)
"RTN","DGPTR4",17,0)
 S DGPTTMP=$$ICDDX^ICDCODE(+$P(DG70,U,10),DGPTDAT) S DGXLS=$S(+DGPTTMP>0&($P(DGPTTMP,U,10)):$P(DGPTTMP,U,2),1:""),Y=Y_$S(DGXLS[".":$J($P(DGXLS,".",1),3)_$E($P(DGXLS,".",2)_"   ",1,3),1:$J(DGXLS,6))_" "
"RTN","DGPTR4",18,0)
 S L=$P(DG70,U,16,24)_U_DG71 S DG702=""
"RTN","DGPTR4",19,0)
 F K=1:1:12 S DGPTTMP=$$ICDDX^ICDCODE(+$P(L,U,K),DGPTDAT) I +DGPTTMP>0&($P(DGPTTMP,U,10)) S DG702=DG702_$P(DGPTTMP,U,2)_U
"RTN","DGPTR4",20,0)
 S Y=Y_$S(DG702']"":"X",1:" ")
"RTN","DGPTR4",21,0)
 ; -- get phy cdr @ d/c
"RTN","DGPTR4",22,0)
 S X="",Z=+$O(^DGPT(J,535,"AM",DG70-.0000001)) I $D(^DGPT(J,535,+$O(^(Z,0)),0)) S X=^(0)
"RTN","DGPTR4",23,0)
 ; -- set phy cdr
"RTN","DGPTR4",24,0)
 S Z=$P(X,U,16) D CDR
"RTN","DGPTR4",25,0)
 ; -- set phy spec
"RTN","DGPTR4",26,0)
 ;replace specialty pointer (ien) with ptf code (alpha-numeric)
"RTN","DGPTR4",27,0)
 N DGARRX,DGARRY ;DG729
"RTN","DGPTR4",28,0)
 S DGARRX=$$TSDATA^DGACT(42.4,$P(X,U,2),.DGARRY)
"RTN","DGPTR4",29,0)
 S $P(X,U,2)=$G(DGARRY(7))
"RTN","DGPTR4",30,0)
 S L=2,Z=2 D ENTER0
"RTN","DGPTR4",31,0)
 S X=$S($P(DG3,U)="Y":$$RTEN($P(DG3,U,2)),1:"0"),L=3,Z=1 D ENTER0
"RTN","DGPTR4",32,0)
 ;-- additional ptf questions
"RTN","DGPTR4",33,0)
 S DGAUX=$S($D(^DGPT(J,300)):^(300),1:"")
"RTN","DGPTR4",34,0)
 D ADDQUES
"RTN","DGPTR4",35,0)
 K DGAUX,DGDRUG
"RTN","DGPTR4",36,0)
 ;-- sc,ao,ir,ec questions
"RTN","DGPTR4",37,0)
 S X=DG70
"RTN","DGPTR4",38,0)
 ;-- sc
"RTN","DGPTR4",39,0)
 S Y=Y_$E($P(DG70,U,25)_" ")
"RTN","DGPTR4",40,0)
 ;-- ao
"RTN","DGPTR4",41,0)
 S Y=Y_$E($P(DG70,U,26)_" ")
"RTN","DGPTR4",42,0)
 ;-- ir
"RTN","DGPTR4",43,0)
 S Y=Y_$E($P(DG70,U,27)_" ")
"RTN","DGPTR4",44,0)
 ;-- SW Asia conditions/ec
"RTN","DGPTR4",45,0)
 S Y=Y_$E($P(DG70,U,28)_" ")
"RTN","DGPTR4",46,0)
 ;-- mst
"RTN","DGPTR4",47,0)
 S Y=Y_$E($P(DG70,U,29)_" ")
"RTN","DGPTR4",48,0)
 ;-- Head/Neck CA
"RTN","DGPTR4",49,0)
 S Y=Y_$E($P(DG70,U,30)_" ")
"RTN","DGPTR4",50,0)
 D ETHNIC
"RTN","DGPTR4",51,0)
 D RACE
"RTN","DGPTR4",52,0)
 ;Combat vet
"RTN","DGPTR4",53,0)
 S Y=Y_$E($P(DG70,U,31)_" ")
"RTN","DGPTR4",54,0)
 ;Project 112/SHAD
"RTN","DGPTR4",55,0)
 S Y=Y_$E($P(DG70,U,32)_" ")
"RTN","DGPTR4",56,0)
 D FILL
"RTN","DGPTR4",57,0)
 I T1 F K=41:1:55,65:1:73 S Y=$E(Y,1,K-1)_" "_$E(Y,K+1,125)
"RTN","DGPTR4",58,0)
 I T1 D CEN^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1 Q
"RTN","DGPTR4",59,0)
 I 'T1 D SAVE
"RTN","DGPTR4",60,0)
702 ;
"RTN","DGPTR4",61,0)
 Q:DG702']""
"RTN","DGPTR4",62,0)
 S Y="N702"_$E(Y,5,40)
"RTN","DGPTR4",63,0)
 F K=1:1:12 S F=$P(DG702,U,K),F=$P(F,".",1)_$E($P(F,".",2)_"   ",1,3),F=F_$E("      ",1,7-$L(F)),Y=Y_F
"RTN","DGPTR4",64,0)
 D FILL
"RTN","DGPTR4",65,0)
 I 'DGERR S ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR4",66,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR4",67,0)
 S DG702=$P(DG702,U,6,9)
"RTN","DGPTR4",68,0)
 Q
"RTN","DGPTR4",69,0)
 ;
"RTN","DGPTR4",70,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR4",71,0)
 Q
"RTN","DGPTR4",72,0)
 ;
"RTN","DGPTR4",73,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("00000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR4",74,0)
 Q
"RTN","DGPTR4",75,0)
 ;
"RTN","DGPTR4",76,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR4",77,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR4",78,0)
Q Q
"RTN","DGPTR4",79,0)
 ;
"RTN","DGPTR4",80,0)
FILL F K=$L(Y):1:124 S Y=Y_" "
"RTN","DGPTR4",81,0)
 Q
"RTN","DGPTR4",82,0)
 ;
"RTN","DGPTR4",83,0)
CDR S Y=Y_$E($P(Z,".")_"0000",1,4)_$E($P(Z,".",2)_"00",1,2)
"RTN","DGPTR4",84,0)
 Q
"RTN","DGPTR4",85,0)
ADDQUES ;-- additional PTF questions load records for trans 501/701
"RTN","DGPTR4",86,0)
 N DGADDQ
"RTN","DGPTR4",87,0)
 F DGADDQ=2,3,4 D  ;null results if discharge>inactive date. DG/729
"RTN","DGPTR4",88,0)
 . I +$P($G(^DIC(45.88,DGADDQ,0)),U,3) S $P(DGAUX,U,DGADDQ)=$S((+$G(^DGPT(J,70))<$P(^DIC(45.88,DGADDQ,0),U,3)):$P(DGAUX,U,DGADDQ),1:"")
"RTN","DGPTR4",89,0)
 S DGDRUG=$S($D(^DIC(45.61,+$P(DGAUX,U,4),0)):$P(^(0),U,2),1:"    ")
"RTN","DGPTR4",90,0)
 S Y=Y_$E($P(DGAUX,U,3)_" ")_$E($P(DGAUX,U,2)_" ")_$J($P(DGDRUG,U),4)
"RTN","DGPTR4",91,0)
 S Y=Y_$E($P(DGAUX,U,5)_" ")
"RTN","DGPTR4",92,0)
 S DGT=0,X=$P(DGAUX,U,6) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR4",93,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR4",94,0)
 S DGT=0,X=$P(DGAUX,U,7) I X]"" S DGT=1,Z=1,L=2 D ENTER0
"RTN","DGPTR4",95,0)
 I 'DGT S Y=Y_"  "
"RTN","DGPTR4",96,0)
 Q
"RTN","DGPTR4",97,0)
RTEN(X) ; This function will round X to the nearest mulitple of ten.
"RTN","DGPTR4",98,0)
 ; 0-4 ->DOWN; 5-9->UP
"RTN","DGPTR4",99,0)
 Q (X\10)*10+$S(X#10>4:10,1:0)
"RTN","DGPTR4",100,0)
ETHNIC ;-- Ethnicity (use first active value)
"RTN","DGPTR4",101,0)
 N NODE,NUM,ETHNIC,I,X
"RTN","DGPTR4",102,0)
 S ETHNIC=""
"RTN","DGPTR4",103,0)
 S I=0
"RTN","DGPTR4",104,0)
 S NUM=1
"RTN","DGPTR4",105,0)
 F  S I=+$O(DG06(I)) Q:'I  D  Q:NUM>1
"RTN","DGPTR4",106,0)
 .S NODE=$G(DG06(I,0))
"RTN","DGPTR4",107,0)
 .Q:('NODE)!('$D(^DIC(10.2,+NODE,0)))
"RTN","DGPTR4",108,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTR4",109,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,2,4)
"RTN","DGPTR4",110,0)
 .S ETHNIC=$S(X="":" ",1:X)
"RTN","DGPTR4",111,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTR4",112,0)
 .S ETHNIC=ETHNIC_$S(X="":" ",1:X)
"RTN","DGPTR4",113,0)
 .S NUM=NUM+1
"RTN","DGPTR4",114,0)
 S Y=Y_$S(ETHNIC="":"  ",1:ETHNIC)
"RTN","DGPTR4",115,0)
 Q
"RTN","DGPTR4",116,0)
RACE ;-- Race (use first 6 active values)
"RTN","DGPTR4",117,0)
 N NODE,NUM,RACE,I,X
"RTN","DGPTR4",118,0)
 S RACE=""
"RTN","DGPTR4",119,0)
 S I=0
"RTN","DGPTR4",120,0)
 S NUM=1
"RTN","DGPTR4",121,0)
 F  S I=+$O(DG02(I)) Q:'I  D  Q:NUM>6
"RTN","DGPTR4",122,0)
 .S NODE=$G(DG02(I,0))
"RTN","DGPTR4",123,0)
 .Q:('NODE)!('$D(^DIC(10,+NODE,0)))
"RTN","DGPTR4",124,0)
 .Q:$$INACTIVE^DGUTL4(+NODE)
"RTN","DGPTR4",125,0)
 .S X=$$PTR2CODE^DGUTL4(+NODE,1,4)
"RTN","DGPTR4",126,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTR4",127,0)
 .S X=$$PTR2CODE^DGUTL4(+$P(NODE,"^",2),3,4)
"RTN","DGPTR4",128,0)
 .S RACE=RACE_$S(X="":" ",1:X)
"RTN","DGPTR4",129,0)
 .S NUM=NUM+1
"RTN","DGPTR4",130,0)
 S X="" S $P(X," ",12)=""
"RTN","DGPTR4",131,0)
 S RACE=$S(RACE="":"  ",1:RACE)_X
"RTN","DGPTR4",132,0)
 S Y=Y_$E(RACE,1,12)
"RTN","DGPTR4",133,0)
 Q
"RTN","DGPTSPQ")
0^5^B9780118
"RTN","DGPTSPQ",1,0)
DGPTSPQ ;ALB/MTC - PTF Utility Con; 5/18/05 ; 11/26/03 9:56am
"RTN","DGPTSPQ",2,0)
 ;;5.3;Registration;**195,397,565,664**;Aug 13, 1993;Build 15
"RTN","DGPTSPQ",3,0)
 ;
"RTN","DGPTSPQ",4,0)
CHQUES ;-- This function will determine if the patient has any of the
"RTN","DGPTSPQ",5,0)
 ;   following indicated : AO, IR, EC, MST, NTR
"RTN","DGPTSPQ",6,0)
 ;   If so the array DGEXQ will contain:
"RTN","DGPTSPQ",7,0)
 ;     DGEXQ(1)="" - AO
"RTN","DGPTSPQ",8,0)
 ;     DGEXQ(2)="" - IR
"RTN","DGPTSPQ",9,0)
 ;     DGEXQ(3)="" - SW Asia Conditions/EC
"RTN","DGPTSPQ",10,0)
 ;     DGEXQ(4)="" - MST  ;added 6/17/98 for MST enhancement
"RTN","DGPTSPQ",11,0)
 ;     DGEXQ(5)="" - NTR  ;treatment for Head/Neck CA
"RTN","DGPTSPQ",12,0)
 ;                        ;ONLY if (#28.11) Nose Throat Radium entered
"RTN","DGPTSPQ",13,0)
 ;     DGEXQ(6)="" - CV   ;treatment for possible combat related 
"RTN","DGPTSPQ",14,0)
 ;                        ;condition
"RTN","DGPTSPQ",15,0)
 ;     DGEXQ(7)="" - SHAD ;treatment for Project 112/SHAD
"RTN","DGPTSPQ",16,0)
 ;   Otherwise they will be undefined.
"RTN","DGPTSPQ",17,0)
 ; This routine is called from the PTF input templates.
"RTN","DGPTSPQ",18,0)
 ;   The following variables are defined:
"RTN","DGPTSPQ",19,0)
 ;     DGHOLD : Movemnent record before any changes been made.
"RTN","DGPTSPQ",20,0)
 ;     DGPTF  : PTF Record Number.
"RTN","DGPTSPQ",21,0)
 ;     DGMOV  : PTF Movement Number (optional)
"RTN","DGPTSPQ",22,0)
 N DGHOLD,SDCLY
"RTN","DGPTSPQ",23,0)
 S DGHOLD=^DGPT(DA(1),"M",DA,0),SDCLY=""
"RTN","DGPTSPQ",24,0)
 ;-- call to determine if questions should be asked. OPC uses same
"RTN","DGPTSPQ",25,0)
 ;   criteria.
"RTN","DGPTSPQ",26,0)
 D CL^SDCO21(DFN,$P(DGHOLD,U,10),"",.SDCLY)
"RTN","DGPTSPQ",27,0)
 ;
"RTN","DGPTSPQ",28,0)
 ;-- if sc > 50% and treated for sc don't ask AO/IR
"RTN","DGPTSPQ",29,0)
 ;-- ADD KILL OF SDCLY(6) TO SKIP COMBAT VETERAN QUESTION
"RTN","DGPTSPQ",30,0)
 I $P($G(^DGPT(DGPTF,"M",+$G(DGMOV),0)),U,18)=1 K SDCLY(1),SDCLY(2)
"RTN","DGPTSPQ",31,0)
 ;
"RTN","DGPTSPQ",32,0)
 G:'$D(SDCLY) CHQ
"RTN","DGPTSPQ",33,0)
 ; AO
"RTN","DGPTSPQ",34,0)
 I $D(SDCLY(1)) S DGEXQ(1)=""
"RTN","DGPTSPQ",35,0)
 ; IR
"RTN","DGPTSPQ",36,0)
 I $D(SDCLY(2)) S DGEXQ(2)=""
"RTN","DGPTSPQ",37,0)
 ; SW Asia Conditions/EC
"RTN","DGPTSPQ",38,0)
 I $D(SDCLY(4)) S DGEXQ(3)=""
"RTN","DGPTSPQ",39,0)
 ; MST
"RTN","DGPTSPQ",40,0)
 I $D(SDCLY(5)) S DGEXQ(4)="" ;added 6/17/98 for MST enhancement
"RTN","DGPTSPQ",41,0)
 ; NTR
"RTN","DGPTSPQ",42,0)
 I $D(SDCLY(6)) S DGEXQ(5)=""
"RTN","DGPTSPQ",43,0)
 ; CV
"RTN","DGPTSPQ",44,0)
 I $D(SDCLY(7)) S DGEXQ(6)=""
"RTN","DGPTSPQ",45,0)
 ; SHAD
"RTN","DGPTSPQ",46,0)
 I $D(SDCLY(8)) S DGEXQ(7)=""
"RTN","DGPTSPQ",47,0)
CHQ Q
"RTN","DGPTSPQ",48,0)
 ;
"RTN","DGPTSPQ",49,0)
501 ;-- This is the input transform logic for the following questions:
"RTN","DGPTSPQ",50,0)
 ;   AO, IR, EC, MST, NTR
"RTN","DGPTSPQ",51,0)
 ;   Process: Make sure that the conditions are indicated before
"RTN","DGPTSPQ",52,0)
 ;            allowing data to be entered. If the indicators are
"RTN","DGPTSPQ",53,0)
 ;            not present and the question was answered, DGER
"RTN","DGPTSPQ",54,0)
 ;            will be set to 1.
"RTN","DGPTSPQ",55,0)
 ;   INPUT  : DGFLAG - Field to check
"RTN","DGPTSPQ",56,0)
 ;            DGER   - DGER  error code
"RTN","DGPTSPQ",57,0)
 N DGEXQ
"RTN","DGPTSPQ",58,0)
 S DGER=0
"RTN","DGPTSPQ",59,0)
 D CHQUES
"RTN","DGPTSPQ",60,0)
 I '$D(DGEXQ(+DGFLAG)) S DGER=1
"RTN","DGPTSPQ",61,0)
 Q
"RTN","DGPTSPQ",62,0)
 ;
"RTN","DGPTSPQ",63,0)
701 ;-- This is the input transform logic for the following questions
"RTN","DGPTSPQ",64,0)
 ;   for the <701> PTF record:  AO, IR, EC, MST, NTR
"RTN","DGPTSPQ",65,0)
 ;   Process: Check if the desired indicator was answered on a <501>.
"RTN","DGPTSPQ",66,0)
 ;   changed 6/17/98 for MST enhancement
"RTN","DGPTSPQ",67,0)
 ;   INPUT DGFLAG - 1=AO, 2=IR, 3=EC, 4=MST, 5=NTR, 6=CV, 7=SHAD
"RTN","DGPTSPQ",68,0)
 N I
"RTN","DGPTSPQ",69,0)
 S DGER=1
"RTN","DGPTSPQ",70,0)
 ;-- loop thru <501>'s for indicator specified by DGFLAG
"RTN","DGPTSPQ",71,0)
 S I=0 F  S I=$O(^DGPT(DA,"M",I)) Q:'I  I $P($G(^DGPT(DA,"M",I,0)),U,DGFLAG+25)'="" S DGER=0 Q
"RTN","DGPTSPQ",72,0)
 Q
"RTN","DGPTSPQ",73,0)
 ;
"RTN","DGPTSPQ",74,0)
UP701 ;-- This function will loop thru the <501> and determine if any
"RTN","DGPTSPQ",75,0)
 ;   of the SC, AO, IR, EC, MST, NTR, CV, and SHAD questions have been
"RTN","DGPTSPQ",76,0)
 ;   answered.  If so, the cooresponding <701> will be updated.
"RTN","DGPTSPQ",77,0)
 ;   An answer of "yes" will take presidence.
"RTN","DGPTSPQ",78,0)
 ;
"RTN","DGPTSPQ",79,0)
 ;   INPUT : DGPTF
"RTN","DGPTSPQ",80,0)
 ;   changed 6/17/98 for MST emhancement
"RTN","DGPTSPQ",81,0)
 N I,DGSC,DGAO,DGIR,DGEC,DGMOV,DGMST,DGNTR,DGCV,DGSHAD
"RTN","DGPTSPQ",82,0)
 S (DGSC,DGAO,DGIR,DGEC,DGMST,DGNTR,DGCV,DGSHAD)="@"
"RTN","DGPTSPQ",83,0)
 ;-- loop thru <501>s
"RTN","DGPTSPQ",84,0)
 S I=0 F  S I=$O(^DGPT(DGPTF,"M",I)) Q:'I  S DGMOV=$G(^(I,0)) I DGMOV'="" D
"RTN","DGPTSPQ",85,0)
 .;-- sc
"RTN","DGPTSPQ",86,0)
 .I $P(DGMOV,U,18)'="",DGSC'=1 S DGSC=$P(DGMOV,U,18)
"RTN","DGPTSPQ",87,0)
 .;-- ao
"RTN","DGPTSPQ",88,0)
 .I $P(DGMOV,U,26)'="",DGAO'="Y" S DGAO=$P(DGMOV,U,26)
"RTN","DGPTSPQ",89,0)
 .;-- ir
"RTN","DGPTSPQ",90,0)
 .I $P(DGMOV,U,27)'="",DGIR'="Y" S DGIR=$P(DGMOV,U,27)
"RTN","DGPTSPQ",91,0)
 .;-- ec
"RTN","DGPTSPQ",92,0)
 .I $P(DGMOV,U,28)'="",DGEC'="Y" S DGEC=$P(DGMOV,U,28)
"RTN","DGPTSPQ",93,0)
 .;-- mst ;added 6/17/98 for MST enhancement
"RTN","DGPTSPQ",94,0)
 .I $P(DGMOV,U,29)'="",DGMST'="Y" S DGMST=$P(DGMOV,U,29)
"RTN","DGPTSPQ",95,0)
 .;-- ntr
"RTN","DGPTSPQ",96,0)
 .I $P(DGMOV,U,30)'="",DGNTR'="Y" S DGNTR=$P(DGMOV,U,30)
"RTN","DGPTSPQ",97,0)
 .;-- cv
"RTN","DGPTSPQ",98,0)
 .I $P(DGMOV,U,31)'="",DGCV'="Y" S DGCV=$P(DGMOV,U,31)
"RTN","DGPTSPQ",99,0)
 .;-- shad
"RTN","DGPTSPQ",100,0)
 .I $P(DGMOV,U,32)'="",DGSHAD'="Y" S DGSHAD=$P(DGMOV,U,32)
"RTN","DGPTSPQ",101,0)
 ;-- update <701> fields
"RTN","DGPTSPQ",102,0)
 ; changed 6/17/98 for MST enhancement
"RTN","DGPTSPQ",103,0)
 S DR="79.25////^S X=DGSC;79.26////^S X=DGAO;79.27////^S X=DGIR;79.28////^S X=DGEC;79.29////^S X=DGMST;79.3////^S X=DGNTR;79.31////^S X=DGCV;79.32////^S X=DGSHAD"
"RTN","DGPTSPQ",104,0)
 S DA=DGPTF,DIE="^DGPT("
"RTN","DGPTSPQ",105,0)
 D ^DIE K DIE,DA,DR
"RTN","DGPTSPQ",106,0)
UPQ Q
"RTN","DGPTSPQ",107,0)
 ;
"RTN","DGRPU1")
0^16^B6201118
"RTN","DGRPU1",1,0)
DGRPU1 ;ALB/REW CUSTOM LOAD/EDIT SCREEN UTILITIES ;9-FEB-92
"RTN","DGRPU1",2,0)
 ;;5.3;Registration;**139,169,415,527,508,664**;Aug 13, 1993;Build 15
"RTN","DGRPU1",3,0)
 ;
"RTN","DGRPU1",4,0)
QUES(DFN,DGQCODE) ; EDIT SPECIFIC PORTIONS OF REGISTRATION DATA
"RTN","DGRPU1",5,0)
 ;
"RTN","DGRPU1",6,0)
 ;  INPUT:
"RTN","DGRPU1",7,0)
 ;     DFN
"RTN","DGRPU1",8,0)
 ;     DGQCODE = Code for question(s) to be asked
"RTN","DGRPU1",9,0)
 ;  OUTPUT:
"RTN","DGRPU1",10,0)
 ;     DGERR   = ERROR VARIABLE
"RTN","DGRPU1",11,0)
 ;     DGCHANGE= 1 IF DATA MODIFIED 0 O/W
"RTN","DGRPU1",12,0)
 ;  USED:
"RTN","DGRPU1",13,0)
 ;     DGPTND  = Prior value(s) of Patient File node(s) [array]
"RTN","DGRPU1",14,0)
 ;     DGQNODES= Node(s) used above
"RTN","DGRPU1",15,0)
 ;     DGNODE  = Single node
"RTN","DGRPU1",16,0)
 ;     DGDR    = edit=screen*10+item #
"RTN","DGRPU1",17,0)
 ;     DGRPS   = Screen #
"RTN","DGRPU1",18,0)
 ;     DGCODE  = CODE used by ^DGRPE
"RTN","DGRPU1",19,0)
 ;     DGQ     = String of ^DGCODE^DGCODE etc.
"RTN","DGRPU1",20,0)
 ;     DGPC    = Piece Number
"RTN","DGRPU1",21,0)
 ;     DGX     = Line Tag offset
"RTN","DGRPU1",22,0)
 ;
"RTN","DGRPU1",23,0)
 N D,D0,DI,DIC,DGCODE,DGDR,DGNODE,DGQNODES,DGPC,DGPTND,DGRPS,DGQ,DGX
"RTN","DGRPU1",24,0)
 N DQ,N,X,Y,%Y,DGPTNDM
"RTN","DGRPU1",25,0)
 S (DGERR,DGRPS,DGCHANGE)=0
"RTN","DGRPU1",26,0)
 I '($G(DFN)&$D(DGQCODE)) G QTE
"RTN","DGRPU1",27,0)
 F DGX=1:1 S DGQ=$T(QDES+DGX) Q:DGQ[(U_DGQCODE_U)!(DGQ']"")
"RTN","DGRPU1",28,0)
 F DGPC=2:1 S DGCODE=$P(DGQ,U,DGPC) Q:(DGCODE']"")!(DGCODE=DGQCODE)
"RTN","DGRPU1",29,0)
 G:DGCODE']"" QTE
"RTN","DGRPU1",30,0)
 S DGDR=$P($T(QNUM+DGX),U,DGPC)
"RTN","DGRPU1",31,0)
 S DGRPS=DGDR\100
"RTN","DGRPU1",32,0)
 S DGQNODES=$P($T(QNODE+DGX),U,DGPC)
"RTN","DGRPU1",33,0)
 F N=1:1 S DGNODE=$P(DGQNODES,"~",N) Q:DGNODE']""  S DGPTND(DGNODE)=$G(^DPT(DFN,DGNODE))
"RTN","DGRPU1",34,0)
 S DGQNODES=$P($T(MNODE+DGX),U,DGPC)
"RTN","DGRPU1",35,0)
 F N=1:1 S DGNODE=$P(DGQNODES,"~",N) Q:DGNODE']""  M DGPTNDM(DGNODE)=^DPT(DFN,DGNODE) S DGPTNDM(DGNODE)=""
"RTN","DGRPU1",36,0)
 D ^DGRPE
"RTN","DGRPU1",37,0)
 F DGNODE=0:0 S DGNODE=$O(DGPTND(DGNODE)) Q:DGNODE']""  S:$G(^DPT(DFN,DGNODE))'=(DGPTND(DGNODE)) DGCHANGE=1
"RTN","DGRPU1",38,0)
 S DGNODE="" F  S DGNODE=$O(DGPTNDM(DGNODE)) Q:DGNODE']""  D  Q:DGCHANGE
"RTN","DGRPU1",39,0)
 .S X=0 F  S X=$O(DGPTNDM(DGNODE,X)) Q:'X  D  Q:DGCHANGE
"RTN","DGRPU1",40,0)
 ..S Y="" F  S Y=$O(DGPTNDM(DGNODE,X,Y)) Q:Y']""  D  Q:DGCHANGE
"RTN","DGRPU1",41,0)
 ...I $G(^DPT(DFN,DGNODE,X,Y))'=DGPTNDM(DGNODE,X,Y) S DGCHANGE=1
"RTN","DGRPU1",42,0)
 .Q:DGCHANGE
"RTN","DGRPU1",43,0)
 .S X=0 F  S X=$O(^DPT(DGNODE,X)) Q:'X  D  Q:DGCHANGE
"RTN","DGRPU1",44,0)
 ..S Y="" F  S Y=$O(^DPT(DGNODE,X,Y)) Q:Y']""  D  Q:DGCHANGE
"RTN","DGRPU1",45,0)
 ...I $G(^DPT(DFN,DGNODE,X,Y))'=DGPTNDM(DGNODE,X,Y) S DGCHANGE=1
"RTN","DGRPU1",46,0)
QTE I 'DGRPS S DGERR=1
"RTN","DGRPU1",47,0)
QTQ Q
"RTN","DGRPU1",48,0)
QDES ;MNEMONIC - DGQCODE should match with one of these
"RTN","DGRPU1",49,0)
 ;;^ADD1^ADD2^ADD^ADD3^ADD4^
"RTN","DGRPU1",50,0)
QNUM ;REFERENCE NUMBERS USED TO SET DGDR FOR USE BY ^DGRPE
"RTN","DGRPU1",51,0)
 ;;^104^105^109,105,112^109,105,111^111^
"RTN","DGRPU1",52,0)
 ;;
"RTN","DGRPU1",53,0)
QNODE ;;NODES OF THE PATIENT FILE
"RTN","DGRPU1",54,0)
 ;;^.11~.13^.121^.11~.121~.13^.11~.121~.13~.141^.141^
"RTN","DGRPU1",55,0)
 ;;
"RTN","DGRPU1",56,0)
MNODE ;;MULTIPLES OF THE PATIENT FILE
"RTN","DGRPU1",57,0)
 ;;^^^.02~.06^.02~.06~.14^.14^
"UP",45,45.02,-1)
45^M
"UP",45,45.02,0)
45.02
"VER")
8.0^22.0
"^DD",45,45,79.28,0)
EXPOSED TO SW ASIA CONDITIONS^SX^Y:YES;N:NO;^70;28^S DGFLAG=3 D 701^DGPTSPQ K:DGER X K DGER,DGFLAG
"^DD",45,45,79.28,3)
Treatment related to service in SW Asia.
"^DD",45,45,79.28,"DT")
3060626
"^DD",45,45,79.32,0)
TREATMENT FOR SHAD^S^Y:YES;N:NO;^70;32^Q
"^DD",45,45,79.32,3)

"^DD",45,45,79.32,21,0)
^^6^6^3050518^
"^DD",45,45,79.32,21,1,0)
Was the treatment related to Project 112/SHAD.
"^DD",45,45,79.32,21,2,0)
 
"^DD",45,45,79.32,21,3,0)
Project 112/SHAD was the name of the overall program for both shipboard
"^DD",45,45,79.32,21,4,0)
and land-based biological and chemical testing that was conducted by the
"^DD",45,45,79.32,21,5,0)
United States (U.S.) military between 1962 and 1973. Project SHAD
"^DD",45,45,79.32,21,6,0)
(Shipboard Hazard and Defense) was the shipboard portion of these tests.
"^DD",45,45,79.32,"DT")
3050518
"^DD",45,45.02,28,0)
EXPOSED TO SW ASIA CONDITIONS^SX^Y:YES;N:NO;^0;28^S DGFLAG=3 D 501^DGPTSPQ K:DGER X K DGER,DGFLAG
"^DD",45,45.02,28,3)
Treatment releted to service in SW Asia.
"^DD",45,45.02,28,"DT")
3060509
"^DD",45,45.02,32,0)
TREATMENT FOR SHAD^S^Y:YES;N:NO;^0;32^Q
"^DD",45,45.02,32,3)

"^DD",45,45.02,32,21,0)
^^6^6^3050518^
"^DD",45,45.02,32,21,1,0)
Identifies whether treatment was for Project 112/SHAD.
"^DD",45,45.02,32,21,2,0)
 
"^DD",45,45.02,32,21,3,0)
Project 112/SHAD was the name of the overall program for both shipboard
"^DD",45,45.02,32,21,4,0)
and land-based biological and chemical testing that was conducted by the
"^DD",45,45.02,32,21,5,0)
United States (U.S.) military between 1962 and 1973. Project SHAD
"^DD",45,45.02,32,21,6,0)
(Shipboard Hazard and Defense) was the shipboard portion of these tests.
"^DD",45,45.02,32,"DT")
3050518
"^DD",46.1,46.1,.05,0)
EXPOSURE TO SW ASIA CONDITIONS^RS^1:YES;0:NO;^0;5^Q
"^DD",46.1,46.1,.05,3)
This diagnosis must be related to service in SW Asia.
"^DD",46.1,46.1,.05,21,0)
^^4^4^3060626^
"^DD",46.1,46.1,.05,21,1,0)
Enter 'Y' if the diagnosis is related to service in SW Asia.
"^DD",46.1,46.1,.05,21,2,0)
Enter 'N' if the diagnosis is unrelated to service in SW Asia.
"^DD",46.1,46.1,.05,21,3,0)
This information must be entered in Registration before it can be entered
"^DD",46.1,46.1,.05,21,4,0)
here.  See field .322013 in file 2.
"^DD",46.1,46.1,.05,"DT")
3060509
"^DD",46.1,46.1,.09,0)
TREATMENT FOR SHAD^RS^1:YES;0:NO;^0;9^Q
"^DD",46.1,46.1,.09,3)
Was the treatment related to Project 112/SHAD.
"^DD",46.1,46.1,.09,21,0)
^.001^4^4^3051128^^
"^DD",46.1,46.1,.09,21,1,0)
Project 112/SHAD was the name of the overall program for both shipboard
"^DD",46.1,46.1,.09,21,2,0)
and land-based biological and chemical testing that was conducted by the
"^DD",46.1,46.1,.09,21,3,0)
United States (U.S.) military between 1962 and 1973. Project SHAD
"^DD",46.1,46.1,.09,21,4,0)
(Shipboard Hazard and Defense) was the shipboard portion of these tests.
"^DD",46.1,46.1,.09,"DT")
3050613
**END**
**END**
